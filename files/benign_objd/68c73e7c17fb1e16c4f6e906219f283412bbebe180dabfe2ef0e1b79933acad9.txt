
68c73e7c17fb1e16c4f6e906219f283412bbebe180dabfe2ef0e1b79933acad9.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	or     BYTE PTR [rax],dl
  401002:	add    BYTE PTR [rax],al
  401005:	add    BYTE PTR [rax],al
  401007:	add    BYTE PTR [rbx],al
  401009:	(bad)  
  40100a:	rex.X outs dx,DWORD PTR ds:[rsi]
  40100c:	outs   dx,DWORD PTR ds:[rsi]
  40100d:	ins    BYTE PTR es:[rdi],dx
  40100e:	gs (bad) 
  401010:	outs   dx,BYTE PTR ds:[rsi]
  401011:	add    DWORD PTR [rax],eax
  401013:	add    BYTE PTR [rax],al
  401015:	add    BYTE PTR [rcx],al
  401017:	add    BYTE PTR [rax],al
  401019:	add    BYTE PTR [rax],al
  40101b:	adc    BYTE PTR [rax+0x0],al
  40101e:	add    BYTE PTR [rax],al
  401020:	add    BYTE PTR [rax],al
  401022:	add    eax,0x736c6146
  401027:	gs add al,0x54
  40102a:	jb     0x4010a1
  40102c:	gs (bad) 
  40102e:	push   rbx
  40102f:	jns    0x4010a4
  401031:	je     0x401098
  401033:	ins    DWORD PTR es:[rdi],dx
  401034:	add    al,BYTE PTR [rax]
  401036:	add    BYTE PTR [rax],al
  401038:	adc    BYTE PTR [rax+0x0],al
  40103c:	add    BYTE PTR [rax],al
  40103e:	add    BYTE PTR [rax],al
  401040:	or     DWORD PTR [rbx+rax*2],eax
  401043:	push   0x37261
  401048:	add    BYTE PTR [rax],al
  40104a:	add    bh,bh
  40104c:	inc    DWORD PTR [rax]
  40104e:	add    BYTE PTR [rdx],al
	...
  401058:	(bad)  
  401059:	adc    BYTE PTR [rax+0x0],al
  40105c:	add    BYTE PTR [rax],al
  40105e:	add    BYTE PTR [rax],al
  401060:	add    DWORD PTR [rdi],eax
  401062:	rex.WB outs dx,BYTE PTR ds:[rsi]
  401064:	je     0x4010cb
  401066:	addr32 gs jb 0x40106e
  40106a:	add    BYTE PTR [rax],al
  40106c:	add    BYTE PTR [rax+0x7fffffff],al
  401072:	add    al,BYTE PTR [rax]
  401074:	add    BYTE PTR [rax],al
  401076:	add    BYTE PTR [rax],al
  401078:	adc    BYTE PTR [rax],0x40
  40107b:	add    BYTE PTR [rax],al
  40107d:	add    BYTE PTR [rax],al
  40107f:	add    BYTE PTR [rcx],al
  401081:	add    al,0x42
  401083:	jns    0x4010f9
  401085:	add    DWORD PTR gs:[rax],eax
  401088:	add    BYTE PTR [rax],al
  40108a:	add    bh,bh
  40108c:	add    BYTE PTR [rax],al
  40108e:	add    BYTE PTR [rdx],al
	...
  401098:	movabs al,ds:0x100000000004010
  4010a1:	add    al,0x57
  4010a3:	outs   dx,DWORD PTR ds:[rsi]
  4010a4:	jb     0x40110a
  4010a6:	add    eax,DWORD PTR [rax]
  4010a8:	add    BYTE PTR [rax],al
  4010aa:	add    bh,bh
  4010ac:	inc    DWORD PTR [rax]
  4010ae:	add    BYTE PTR [rdx],al
	...
  4010b8:	rcl    BYTE PTR [rax],0x40
  4010bb:	add    BYTE PTR [rax],al
  4010bd:	add    BYTE PTR [rax],al
  4010bf:	add    BYTE PTR [rcx],al
  4010c1:	or     BYTE PTR [rbx+0x61],al
  4010c4:	jb     0x40112a
  4010c6:	imul   ebp,DWORD PTR [rsi+0x61],0x56c
  4010cd:	add    BYTE PTR [rax],al
  4010cf:	(bad)  
  4010d0:	(bad)  
  4010d1:	(bad)  
  4010d2:	inc    DWORD PTR [rdx]
  4010d4:	add    BYTE PTR [rax],al
  4010d6:	add    BYTE PTR [rax],al
  4010d8:	loopne 0x4010ea
  4010da:	add    BYTE PTR [rax],al
  4010dd:	add    BYTE PTR [rax],al
  4010df:	add    BYTE PTR [rdi+rax*1],dl
  4010e2:	push   rax
  4010e3:	outs   dx,DWORD PTR ds:[rsi]
  4010e4:	imul   ebp,DWORD PTR [rsi+0x74],0x7265
  4010eb:	add    BYTE PTR [rax],al
  4010ed:	add    BYTE PTR [rax],al
  4010ef:	add    BYTE PTR [rax],al
  4010f1:	add    al,BYTE PTR [rax]
  4010f3:	add    BYTE PTR [rax],al
  4010f5:	add    BYTE PTR [rax],al
  4010f7:	add    BYTE PTR [rax],al
  4010f9:	adc    DWORD PTR [rax+0x0],eax
  4010fc:	add    BYTE PTR [rax],al
  4010fe:	add    BYTE PTR [rax],al
  401100:	adc    BYTE PTR [rip+0x36746e49],al        # 0x36b47f4f
  401106:	xor    al,0x0
  401108:	add    BYTE PTR [rax],al
  40110a:	add    BYTE PTR [rax],al
  40110c:	add    BYTE PTR [rax],al
  40110e:	cmp    bh,0xff
  401111:	(bad)  
  401112:	(bad)  
  401113:	(bad)  
  401114:	(bad)  
  401115:	(bad)  
  401116:	jg     0x40111a
	...
  401120:	sub    BYTE PTR [rcx],dl
  401122:	add    BYTE PTR [rax],al
  401125:	add    BYTE PTR [rax],al
  401127:	add    BYTE PTR [rax],dl
  401129:	or     cl,BYTE PTR [rsi+0x61]
  40112c:	je     0x401197
  40112e:	jbe    0x401195
  401130:	push   rbp
  401131:	rex.WB outs dx,BYTE PTR ds:[rsi]
  401133:	je     0x401135
  401135:	add    BYTE PTR [rax],al
  401137:	add    BYTE PTR [rax],al
  401139:	add    BYTE PTR [rax],al
  40113b:	add    bh,bh
  40113d:	(bad)  
  40113e:	(bad)  
  40113f:	(bad)  
  401140:	(bad)  
  401141:	(bad)  
  401142:	(bad)  
  401143:	inc    DWORD PTR [rdx]
  401145:	add    BYTE PTR [rax],al
  401147:	add    BYTE PTR [rax+0x11],dl
  40114a:	add    BYTE PTR [rax],al
  40114d:	add    BYTE PTR [rax],al
  40114f:	add    BYTE PTR [rip+0x6f68530b],al        # 0x6fa86460
  401155:	jb     0x4011cb
  401157:	push   rbx
  401158:	je     0x4011cc
  40115a:	imul   ebp,DWORD PTR [rsi+0x67],0x680002ff
  401161:	adc    DWORD PTR [rax+0x0],eax
  401164:	add    BYTE PTR [rax],al
  401166:	add    BYTE PTR [rax],al
  401168:	adc    al,0x9
  40116a:	push   rax
  40116b:	push   rdi
  40116c:	imul   esp,DWORD PTR [rbp+riz*2+0x43],0x38726168
  401174:	adc    BYTE PTR [rax+0x0],al
  401177:	add    BYTE PTR [rax],al
  401179:	add    BYTE PTR [rax],al
  40117b:	add    al,BYTE PTR [rax]
  40117d:	add    BYTE PTR [rax],al
  40117f:	add    BYTE PTR [rax+0x4011],cl
  401185:	add    BYTE PTR [rax],al
  401187:	add    BYTE PTR [rdx],dl
  401189:	(bad)  
  40118a:	jae    0x401200
  40118c:	jb     0x4011f7
  40118e:	outs   dx,BYTE PTR ds:[rsi]
  40118f:	add    al,BYTE PTR [eax]
  401192:	add    BYTE PTR [rax],al
  401194:	add    BYTE PTR [rax],al
  401196:	add    BYTE PTR [rax],al
  401198:	movabs al,ds:0x1300000000004011
  4011a1:	(bad)  
  4011a2:	push   rsp
  4011a3:	rex.XB ins BYTE PTR es:[rdi],dx
  4011a5:	(bad)  
  4011a6:	jae    0x40121b
  4011a8:	cmp    BYTE PTR [rcx],ah
  4011aa:	add    BYTE PTR [rax],al
  4011ad:	add    BYTE PTR [rax],al
  4011af:	add    BYTE PTR [rdx],al
  4011b1:	add    BYTE PTR [rax],al
  4011b3:	add    BYTE PTR [rax],al
  4011b5:	add    BYTE PTR [rax],al
  4011b7:	add    al,al
  4011b9:	adc    DWORD PTR [rax+0x0],eax
  4011bc:	add    BYTE PTR [rax],al
  4011be:	add    BYTE PTR [rax],al
  4011c0:	add    DWORD PTR [rdi],eax
  4011c2:	rex.W push rdx
  4011c4:	rex.RB push r11
  4011c6:	push   rbp
  4011c7:	rex.WR push rsp
  4011c9:	add    al,0x0
  4011cb:	add    BYTE PTR [rax],al
  4011cd:	cmp    bh,0xff
  4011d0:	(bad)  
  4011d1:	jg     0x4011d5
  4011d3:	add    BYTE PTR [rax],al
  4011d5:	add    BYTE PTR [rax],al
  4011d7:	add    al,ah
  4011d9:	adc    DWORD PTR [rax+0x0],eax
  4011dc:	add    BYTE PTR [rax],al
  4011de:	add    BYTE PTR [rax],al
  4011e0:	(bad)  
  4011e1:	add    eax,0x49554754
  4011e6:	adc    BYTE PTR [rax],r8b
  4011e9:	add    BYTE PTR [rax],al
  4011eb:	add    BYTE PTR [rax],al
  4011ed:	add    BYTE PTR [rax],al
  4011ef:	add    BYTE PTR [rax+rax*1],al
  4011f2:	add    BYTE PTR [rax],al
  4011f4:	mov    eax,0x4010
	...
  401201:	add    BYTE PTR [rax],al
  401203:	add    BYTE PTR [rdx],al
  401205:	add    al,BYTE PTR [rcx+rsi*1+0x2]
  401209:	add    BYTE PTR [rax+0x4010],bl
  40120f:	add    BYTE PTR [rax],al
  401211:	add    BYTE PTR [rax+rax*1],al
  401214:	add    BYTE PTR [rax],al
  401216:	add    BYTE PTR [rax],al
  401218:	add    BYTE PTR [rax],al
  40121a:	add    al,BYTE PTR [rdx]
  40121c:	xor    r8b,BYTE PTR [rdx]
  40121f:	add    BYTE PTR [rax+0x4010],bl
  401225:	add    BYTE PTR [rax],al
  401227:	add    BYTE PTR [rsi],al
  401229:	add    BYTE PTR [rax],al
  40122b:	add    BYTE PTR [rax],al
  40122d:	add    BYTE PTR [rax],al
  40122f:	add    BYTE PTR [rdx],al
  401231:	add    al,BYTE PTR [rbx+rsi*1+0x2]
	...
  40123d:	add    BYTE PTR [rax],cl
  40123f:	add    BYTE PTR [rax],al
  401241:	add    BYTE PTR [rax],al
  401243:	add    BYTE PTR [rax],al
  401245:	add    BYTE PTR [rdx],al
  401247:	add    al,BYTE PTR [rsp+rsi*1+0x2]
  40124b:	add    BYTE PTR [rdx],al
  40124d:	add    BYTE PTR [rip+0x59900b00],al        # 0x59d01d53
  401253:	add    BYTE PTR [r8],al
  401256:	add    BYTE PTR [rax],al
  401258:	add    BYTE PTR [rsi+riz*1],cl
  40125b:	outs   dx,DWORD PTR ds:[rsi]
  40125c:	jo     0x4012bd
  40125e:	rex.RB jno 0x4012d6
  401261:	(bad)  
  401262:	ins    BYTE PTR es:[rdi],dx
  401263:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x40100000
  40126b:	add    BYTE PTR [rax],al
  40126d:	add    BYTE PTR [rax],al
  40126f:	add    BYTE PTR [rdx],al
  401271:	adc    bl,al
  401273:	adc    DWORD PTR [rax+0x0],eax
  401276:	add    BYTE PTR [rax],al
  401278:	add    BYTE PTR [rax],al
  40127a:	add    al,0x4c
  40127c:	gs data16 je 0x401282
  401280:	add    BYTE PTR [rdx],dl
  401282:	fcom   DWORD PTR [rcx]
  401284:	add    BYTE PTR [rax],al
  401287:	add    BYTE PTR [rax],al
  401289:	add    BYTE PTR [rip+0x68676952],al        # 0x68a77be1
  40128f:	je     0x401293
  401291:	add    BYTE PTR [rdx],al
  401293:	add    BYTE PTR [rbx],cl
  401295:	nop
  401296:	pop    rcx
  401297:	add    BYTE PTR [r8],al
  40129a:	add    BYTE PTR [rax],al
  40129c:	add    BYTE PTR [rsi],cl
  40129e:	outs   dx,DWORD PTR es:[rsi]
  4012a0:	jo     0x401301
  4012a2:	rex.WB outs dx,BYTE PTR ds:[rsi]
  4012a4:	gs jno 0x40131c
  4012a7:	(bad)  
  4012a8:	ins    BYTE PTR es:[rdi],dx
  4012a9:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x40100000
  4012b1:	add    BYTE PTR [rax],al
  4012b3:	add    BYTE PTR [rax],al
  4012b5:	add    BYTE PTR [rdx],al
  4012b7:	adc    bl,al
  4012b9:	adc    DWORD PTR [rax+0x0],eax
  4012bc:	add    BYTE PTR [rax],al
  4012be:	add    BYTE PTR [rax],al
  4012c0:	add    al,0x4c
  4012c2:	gs data16 je 0x4012c8
  4012c6:	add    BYTE PTR [rdx],dl
  4012c8:	fcom   DWORD PTR [rcx]
  4012ca:	add    BYTE PTR [rax],al
  4012cd:	add    BYTE PTR [rax],al
  4012cf:	add    BYTE PTR [rip+0x68676952],al        # 0x68a77c27
  4012d5:	je     0x4012d9
  4012d7:	add    BYTE PTR [rdx],al
  4012d9:	add    BYTE PTR [rcx],cl
  4012db:	nop
  4012dc:	pop    rcx
  4012dd:	add    BYTE PTR [r8],al
  4012e0:	add    BYTE PTR [rax],al
  4012e2:	add    BYTE PTR [rip+0x74706d45],al        # 0x74b0802d
  4012e8:	jns    0x4012ea
  4012ea:	add    al,bl
  4012ec:	adc    DWORD PTR [rax+0x0],eax
  4012ef:	add    BYTE PTR [rax],al
  4012f1:	add    BYTE PTR [rax],al
  4012f3:	add    BYTE PTR [rdx],al
  4012f5:	add    BYTE PTR [rcx],cl
  4012f7:	nop
  4012f8:	pop    rcx
  4012f9:	add    BYTE PTR [r8],al
  4012fc:	add    BYTE PTR [rax],al
  4012fe:	add    BYTE PTR [rsi],al
  401300:	rex.XB jb 0x401368
  401303:	(bad)  
  401304:	je     0x40136b
  401306:	add    BYTE PTR [rax],al
  401308:	fcom   DWORD PTR [rcx]
  40130a:	add    BYTE PTR [rax],al
  40130d:	add    BYTE PTR [rax],al
  40130f:	add    BYTE PTR [rdx],al
  401311:	add    al,BYTE PTR [rax]
  401313:	add    BYTE PTR [rax],al
  401315:	add    BYTE PTR [rax],al
  401317:	add    BYTE PTR [rax],al
  401319:	add    BYTE PTR [rsp+rax*2],al
  40131c:	(bad)  
  40131d:	je     0x401380
  40131f:	add    al,BYTE PTR [rax]
  401321:	add    BYTE PTR [rax],al
  401323:	adc    BYTE PTR [rax+0x0],al
  401326:	add    BYTE PTR [rax],al
  401328:	add    BYTE PTR [rax],al
  40132a:	or     DWORD PTR [rdx+0x69],eax
  40132d:	rex.RB outs dx,BYTE PTR ds:[esi]
  401330:	imul   esp,DWORD PTR fs:[rcx+0x6e],0x20002
  401338:	or     DWORD PTR [rax+0x4159],edx
  40133e:	add    BYTE PTR [rax],al
  401340:	add    BYTE PTR [rsi],al
  401342:	rex.XB jb 0x4013aa
  401345:	(bad)  
  401346:	je     0x4013ad
  401348:	add    BYTE PTR [rax],al
  40134a:	fcom   DWORD PTR [rcx]
  40134c:	add    BYTE PTR [rax],al
  40134f:	add    BYTE PTR [rax],al
  401351:	add    BYTE PTR [rbx],al
  401353:	(bad)  
  401354:	js     0x401366
  401356:	add    BYTE PTR [rax],al
  401359:	add    BYTE PTR [rax],al
  40135b:	add    BYTE PTR [rsp+rax*2],al
  40135e:	(bad)  
  40135f:	je     0x4013c2
  401361:	add    al,BYTE PTR [rax]
  401363:	add    BYTE PTR [rax+0x4010],bh
  401369:	add    BYTE PTR [rax],al
  40136b:	add    BYTE PTR [rbx],cl
  40136d:	push   r11
  40136f:	je     0x4013d2
  401371:	jb     0x4013e7
  401373:	rex.WB outs dx,BYTE PTR ds:[rsi]
  401375:	fs gs js 0x40137b
  401379:	add    BYTE PTR [rax],al
  40137b:	add    BYTE PTR [rax],dl
  40137d:	add    BYTE PTR [rax],al
  401380:	add    BYTE PTR [rax],al
  401382:	add    BYTE PTR [rcx],cl
  401384:	rex.X imul esp,DWORD PTR [rdi+0x45],0x6169646e
  40138c:	outs   dx,BYTE PTR ds:[rsi]
  40138d:	add    al,BYTE PTR [rax]
  40138f:	add    al,BYTE PTR [rax]
  401391:	add    BYTE PTR [rax],al
  401393:	add    BYTE PTR [rax],al
  401395:	add    BYTE PTR [rax],al
  401397:	add    BYTE PTR [rax+0x4013],ah
  40139d:	add    BYTE PTR [rax],al
  40139f:	add    BYTE PTR [rdi+rcx*1],dl
  4013a2:	push   rax
  4013a3:	rex.WB outs dx,BYTE PTR ds:[rsi]
  4013a5:	je     0x40140c
  4013a7:	jb     0x40140f
  4013a9:	(bad)  
  4013aa:	movsxd esp,DWORD PTR [rbp+0x45]
  4013ad:	outs   dx,BYTE PTR ds:[rsi]
  4013ae:	je     0x401422
  4013b0:	jns    0x401372
  4013b2:	adc    eax,DWORD PTR [rax+0x0]
  4013b5:	add    BYTE PTR [rax],al
  4013b7:	add    BYTE PTR [rax],al
  4013b9:	add    al,BYTE PTR [rax]
  4013bb:	add    BYTE PTR [rax],al
  4013bd:	add    BYTE PTR [rax],al
  4013bf:	add    al,cl
  4013c1:	adc    eax,DWORD PTR [rax+0x0]
  4013c4:	add    BYTE PTR [rax],al
  4013c6:	add    BYTE PTR [rax],al
  4013c8:	(bad)  
  4013c9:	andps  xmm1,XMMWORD PTR [rcx+0x6e]
  4013cd:	je     0x401434
  4013cf:	jb     0x401437
  4013d1:	(bad)  
  4013d2:	movsxd esp,DWORD PTR [rbp+0x45]
  4013d5:	outs   dx,BYTE PTR ds:[rsi]
  4013d6:	je     0x40144a
  4013d8:	jns    0x401402
	...
  4013e2:	add    eax,0xd8000000
  4013e7:	adc    DWORD PTR [rax+0x0],eax
	...
  4013f6:	add    al,BYTE PTR [rbx]
  4013f8:	rex.WB
  4013f9:	rex.WB
  4013fa:	add    r8b,BYTE PTR [rax]
  4013fd:	fcom   DWORD PTR [rax]
  4013ff:	add    BYTE PTR [rax],al
  401402:	add    BYTE PTR [rax],al
  401404:	add    BYTE PTR [rax],dl
  401406:	add    BYTE PTR [rax],al
  401408:	add    BYTE PTR [rax],al
  40140a:	add    BYTE PTR [rax],al
  40140c:	add    BYTE PTR [rdx],al
  40140e:	(bad)  
  40140f:	push   rsi
  401410:	push   rsp
  401411:	(bad)  
  401412:	(bad)  
  401413:	ins    BYTE PTR es:[rdi],dx
  401414:	add    al,BYTE PTR gs:[rax]
  401417:	pop    rax
  401418:	adc    BYTE PTR [rax+0x0],al
  40141b:	add    BYTE PTR [rax],al
  40141d:	add    BYTE PTR [rax],al
  40141f:	sbb    BYTE PTR [rax],al
  401421:	add    BYTE PTR [rax],al
  401423:	add    BYTE PTR [rax],al
  401425:	add    BYTE PTR [rax],al
  401427:	add    al,BYTE PTR [rdi]
  401429:	rex.WB
  40142a:	rex.WRXB
  40142b:	data16 data16 jae 0x401494
  40142f:	je     0x401433
  401431:	add    BYTE PTR [rax+0x4010],bh
  401437:	add    BYTE PTR [rax],al
  401439:	add    BYTE PTR [rax+rax*1],bl
  40143c:	add    BYTE PTR [rax],al
  40143e:	add    BYTE PTR [rax],al
  401440:	add    BYTE PTR [rax],al
  401442:	add    al,BYTE PTR [rdi]
  401444:	pop    rdi
  401445:	imul   r13d,DWORD PTR [rsp+r13*2+0x65],0x20000272
  40144e:	adc    DWORD PTR [rax+0x0],eax
  401451:	add    BYTE PTR [rax],al
  401453:	add    BYTE PTR [rax],al
  401455:	and    BYTE PTR [rax],al
  401457:	add    BYTE PTR [rax],al
  401459:	add    BYTE PTR [rax],al
  40145b:	add    BYTE PTR [rax],al
  40145d:	add    cl,BYTE PTR [rdx]
  40145f:	rex.WB ins DWORD PTR es:[rdi],dx
  401461:	jo     0x4014cf
  401463:	rex.RXB
  401464:	gs je  0x4014db
  401467:	gs jb  0x40146c
  40146a:	add    BYTE PTR [rdx],al
  40146c:	add    BYTE PTR [rax],al
  40146e:	add    BYTE PTR [rax],al
  401470:	js     0x401486
  401472:	add    BYTE PTR [rax],al
  401475:	add    BYTE PTR [rax],al
  401477:	add    BYTE PTR [rdi+rcx*1],dl
  40147a:	push   rax
  40147b:	rex.WB outs dx,BYTE PTR ds:[rsi]
  40147d:	je     0x4014e4
  40147f:	jb     0x4014e7
  401481:	(bad)  
  401482:	movsxd esp,DWORD PTR [rbp+0x54]
  401485:	(bad)  
  401486:	(bad)  
  401487:	ins    BYTE PTR es:[rdi],dx
  401488:	gs cwde 
  40148a:	adc    al,0x40
  40148c:	add    BYTE PTR [rax],al
  40148e:	add    BYTE PTR [rax],al
  401490:	add    BYTE PTR [rdx],al
  401492:	add    BYTE PTR [rax],al
  401494:	add    BYTE PTR [rax],al
  401496:	add    BYTE PTR [rax],al
  401498:	movabs al,ds:0xe00000000004014
  4014a1:	andps  xmm1,XMMWORD PTR [rcx+0x6e]
  4014a5:	je     0x40150c
  4014a7:	jb     0x40150f
  4014a9:	(bad)  
  4014aa:	movsxd esp,DWORD PTR [rbp+0x54]
  4014ad:	(bad)  
  4014ae:	(bad)  
  4014af:	ins    BYTE PTR es:[rdi],dx
  4014b0:	mov    BYTE PTR gs:[rdx],bl
  4014b3:	(bad)  
  4014b4:	add    BYTE PTR [rax],al
  4014b6:	add    BYTE PTR [rax],al
  4014b8:	add    BYTE PTR [rax],al
  4014ba:	add    eax,DWORD PTR [rax]
  4014bc:	add    BYTE PTR [rax],al
  4014be:	pop    rax
  4014bf:	adc    BYTE PTR [rax+0x0],al
	...
  4014ce:	add    cl,BYTE PTR [rdx]
  4014d0:	rex.RB outs dx,BYTE PTR ds:[rsi]
  4014d2:	je     0x401546
  4014d4:	jns    0x401519
  4014d6:	outs   dx,DWORD PTR ds:[rsi]
  4014d7:	jne    0x401547
  4014d9:	je     0x4014dd
  4014db:	add    BYTE PTR [rax+0x4010],bh
  4014e1:	add    BYTE PTR [rax],al
  4014e3:	add    BYTE PTR [rax+rax*1],al
  4014e6:	add    BYTE PTR [rax],al
  4014e8:	add    BYTE PTR [rax],al
  4014ea:	add    BYTE PTR [rax],al
  4014ec:	add    al,BYTE PTR [rdi]
  4014ee:	pop    rdi
  4014ef:	imul   r13d,DWORD PTR [rsp+r13*2+0x65],0x272
  4014f8:	add    BYTE PTR [rax],al
  4014fa:	add    BYTE PTR [rax],al
  4014fc:	add    BYTE PTR [rax],al
  4014fe:	add    BYTE PTR [rax],cl
  401500:	add    BYTE PTR [rax],al
  401502:	add    BYTE PTR [rax],al
  401504:	add    BYTE PTR [rax],al
  401506:	add    BYTE PTR [rdx],al
  401508:	(bad)  
  401509:	rex.RB outs dx,BYTE PTR ds:[rsi]
  40150b:	je     0x40157f
  40150d:	imul   esp,DWORD PTR [rbp+0x73],0x20002
  401514:	add    BYTE PTR [rax],al
  401516:	add    BYTE PTR [rax],al
  401518:	loopne 0x40152f
  40151a:	add    BYTE PTR [rax],al
	...
  401535:	add    BYTE PTR [rax],al
  401537:	add    BYTE PTR [rax+0x21],al
  40153a:	add    BYTE PTR [rax],al
	...
  401545:	add    BYTE PTR [rax],al
  401547:	add    al,ah
  401549:	adc    eax,0x40
	...
  401556:	add    BYTE PTR [rax],al
  401558:	movabs ds:0x1000000000004017,al
	...
  40156d:	add    BYTE PTR [rax],al
  40156f:	add    BYTE PTR [rax+0x4066],dh
  401575:	add    BYTE PTR [rax],al
  401577:	add    al,al
  401579:	data16 add BYTE PTR [rax],al
  40157d:	add    BYTE PTR [rax],al
  40157f:	add    BYTE PTR [rax],ah
  401581:	push   0x40
  401586:	add    BYTE PTR [rax],al
  401588:	adc    BYTE PTR [rax+0x40],ch
  40158b:	add    BYTE PTR [rax],al
  40158d:	add    BYTE PTR [rax],al
  40158f:	add    BYTE PTR [rax+0x68],dl
  401592:	add    BYTE PTR [rax],al
  401595:	add    BYTE PTR [rax],al
  401597:	add    BYTE PTR [rax+0x68],ah
  40159a:	add    BYTE PTR [rax],al
  40159d:	add    BYTE PTR [rax],al
  40159f:	add    BYTE PTR [rax+0x68],dh
  4015a2:	add    BYTE PTR [rax],al
  4015a5:	add    BYTE PTR [rax],al
  4015a7:	add    BYTE PTR [rax+0x68],al
  4015aa:	add    BYTE PTR [rax],al
  4015ad:	add    BYTE PTR [rax],al
  4015af:	add    BYTE PTR [rax+0x64],al
  4015b2:	add    BYTE PTR [rax],al
  4015b5:	add    BYTE PTR [rax],al
  4015b7:	add    BYTE PTR [rax+0x64],dh
  4015ba:	add    BYTE PTR [rax],al
  4015bd:	add    BYTE PTR [rax],al
  4015bf:	add    BYTE PTR [rax+0x65],ah
  4015c2:	add    BYTE PTR [rax],al
  4015c5:	add    BYTE PTR [rax],al
  4015c7:	add    BYTE PTR [rax+0x4064],dl
  4015cd:	add    BYTE PTR [rax],al
  4015cf:	add    BYTE PTR [rax+0x4064],ah
  4015d5:	add    BYTE PTR [rax],al
  4015d7:	add    BYTE PTR [rax+0x4064],dh
  4015dd:	add    BYTE PTR [rax],al
  4015df:	add    BYTE PTR [rax],al
  4015e1:	add    BYTE PTR [rip+0x4017aa00],ah        # 0x4057bfe7
  4015e7:	add    BYTE PTR [rax],al
  4015e9:	add    BYTE PTR [rax],al
  4015eb:	add    BYTE PTR [rax+rax*1-0xf],al
  4015ef:	(bad)  
  4015f0:	fcom   QWORD PTR [rdi]
  4015f2:	add    BYTE PTR [rax],al
  4015f5:	add    BYTE PTR [rax],al
  4015f7:	add    BYTE PTR [rdx+0x0],al
  4015fa:	icebp  
  4015fb:	dec    DWORD PTR [rax+rbx*1]
  4015fe:	add    BYTE PTR [rax],al
  401601:	add    BYTE PTR [rax],al
  401603:	add    BYTE PTR [rdx+0x0],al
  401606:	icebp  
  401607:	inc    DWORD PTR [rcx+0x18]
  40160a:	add    BYTE PTR [rax],al
  40160d:	add    BYTE PTR [rax],al
  40160f:	add    BYTE PTR [rbx+0x0],al
  401612:	icebp  
  401613:	dec    DWORD PTR [rdi+0x4018]
  401619:	add    BYTE PTR [rax],al
  40161b:	add    BYTE PTR [rdx+0x0],al
  40161e:	icebp  
  40161f:	dec    edx
  401621:	sbb    BYTE PTR [rax+0x0],al
  401624:	add    BYTE PTR [rax],al
  401626:	add    BYTE PTR [rax],al
  401628:	rex.X add cl,sil
  40162b:	(bad)  
  40162c:	call   FWORD PTR [rax]
  40162e:	add    BYTE PTR [rax],al
  401631:	add    BYTE PTR [rax],al
  401633:	add    BYTE PTR [rbx+0x0],al
  401636:	icebp  
  401637:	inc    DWORD PTR [rbx+0x19]
  40163a:	add    BYTE PTR [rax],al
  40163d:	add    BYTE PTR [rax],al
  40163f:	add    BYTE PTR [rbx+0x0],al
  401642:	icebp  
  401643:	dec    DWORD PTR [rcx+rbx*1+0x40]
  40164a:	add    BYTE PTR [rax],al
  40164c:	rex.XB add r9b,sil
  40164f:	inc    ebx
  401651:	sbb    DWORD PTR [rax+0x0],eax
  401654:	add    BYTE PTR [rax],al
  401656:	add    BYTE PTR [rax],al
  401658:	rex.XB add r9b,sil
  40165b:	(bad)  
  40165c:	clc    
  40165d:	sbb    DWORD PTR [rax+0x0],eax
  401660:	add    BYTE PTR [rax],al
  401662:	add    BYTE PTR [rax],al
  401664:	rex.XB add r9b,sil
  401667:	push   QWORD PTR [rax]
  401669:	sbb    al,BYTE PTR [rax+0x0]
  40166c:	add    BYTE PTR [rax],al
  40166e:	add    BYTE PTR [rax],al
  401670:	rex.XB add r9b,sil
  401673:	(bad)  
  401674:	jl     0x401690
  401676:	add    BYTE PTR [rax],al
  401679:	add    BYTE PTR [rax],al
  40167b:	add    BYTE PTR [rbx+0x0],al
  40167e:	icebp  
  40167f:	inc    edi
  401681:	sbb    al,BYTE PTR [rax+0x0]
  401684:	add    BYTE PTR [rax],al
  401686:	add    BYTE PTR [rax],al
  401688:	rex.XB add r9b,sil
  40168b:	call   QWORD PTR [rdx]
  40168d:	sbb    eax,DWORD PTR [rax+0x0]
  401690:	add    BYTE PTR [rax],al
  401692:	add    BYTE PTR [rax],al
  401694:	rex.XB add r9b,sil
  401697:	jmp    FWORD PTR [rbx+rbx*1+0x40]
  40169b:	add    BYTE PTR [rax],al
  40169d:	add    BYTE PTR [rax],al
  40169f:	add    BYTE PTR [rbx+0x0],al
  4016a2:	icebp  
  4016a3:	(bad)  
  4016a4:	mov    ecx,0x401b
  4016a9:	add    BYTE PTR [rax],al
  4016ab:	add    BYTE PTR [rdx+0x0],al
  4016ae:	icebp  
  4016af:	inc    DWORD PTR [rbx]
  4016b1:	sbb    al,0x40
  4016b3:	add    BYTE PTR [rax],al
  4016b5:	add    BYTE PTR [rax],al
  4016b7:	add    BYTE PTR [rdx+0x0],al
  4016ba:	icebp  
  4016bb:	dec    DWORD PTR [rbp+0x1c]
  4016be:	add    BYTE PTR [rax],al
  4016c1:	add    BYTE PTR [rax],al
  4016c3:	add    BYTE PTR [rdx+0x0],al
  4016c6:	icebp  
  4016c7:	jmp    QWORD PTR [rdi+0x401c]
  4016cd:	add    BYTE PTR [rax],al
  4016cf:	add    BYTE PTR [rbx+0x0],al
  4016d2:	icebp  
  4016d3:	push   rbp
  4016d5:	sbb    al,0x40
  4016d7:	add    BYTE PTR [rax],al
  4016d9:	add    BYTE PTR [rax],al
  4016db:	add    BYTE PTR [rbx+0x0],al
  4016de:	icebp  
  4016df:	push   QWORD PTR [rdx]
  4016e1:	sbb    eax,0x40
  4016e6:	add    BYTE PTR [rax],al
  4016e8:	rex.XB add r9b,sil
  4016eb:	push   QWORD PTR [rbp+0x1d]
  4016ee:	add    BYTE PTR [rax],al
  4016f1:	add    BYTE PTR [rax],al
  4016f3:	add    BYTE PTR [rbx+0x0],al
  4016f6:	icebp  
  4016f7:	(bad)  
  4016f8:	mov    ecx,0x401d
  4016fd:	add    BYTE PTR [rax],al
  4016ff:	add    BYTE PTR [rdx+0x0],cl
  401702:	repnz (bad) 
  401704:	cld    
  401705:	sbb    eax,0x40
  40170a:	add    BYTE PTR [rax],al
  40170c:	rex.WX add bl,sil
  40170f:	push   QWORD PTR [rbx]
  401711:	(bad)  
  401712:	add    BYTE PTR [rax],al
  401715:	add    BYTE PTR [rax],al
  401717:	add    BYTE PTR [rdx+0x0],cl
  40171a:	hlt    
  40171b:	push   QWORD PTR [rsi+0x1e]
  40171e:	add    BYTE PTR [rax],al
  401721:	add    BYTE PTR [rax],al
  401723:	add    BYTE PTR [rdx+0x0],cl
  401726:	cmc    
  401727:	jmp    rbp
  401729:	(bad)  
  40172a:	add    BYTE PTR [rax],al
  40172d:	add    BYTE PTR [rax],al
  40172f:	add    BYTE PTR [rdx+0x0],cl
  401732:	idiv   bh
  401734:	and    bl,BYTE PTR [rdi]
  401736:	add    BYTE PTR [rax],al
  401739:	add    BYTE PTR [rax],al
  40173b:	add    BYTE PTR [rdx+0x0],cl
  40173e:	idiv   edi
  401740:	pop    rdi
  401741:	(bad)  
  401742:	add    BYTE PTR [rax],al
  401745:	add    BYTE PTR [rax],al
  401747:	add    BYTE PTR [rdx+0x0],cl
  40174a:	clc    
  40174b:	jmp    FWORD PTR [rax+0x401f]
  401751:	add    BYTE PTR [rax],al
  401753:	add    BYTE PTR [rdx+0x0],cl
  401756:	stc    
  401757:	push   rdi
  401759:	(bad)  
  40175a:	add    BYTE PTR [rax],al
  40175d:	add    BYTE PTR [rax],al
  40175f:	add    BYTE PTR [rbx+0x0],cl
  401762:	cli    
  401763:	jmp    FWORD PTR [rsi]
  401765:	and    BYTE PTR [rax+0x0],al
  401768:	add    BYTE PTR [rax],al
  40176a:	add    BYTE PTR [rax],al
  40176c:	rex.WX add bl,dil
  40176f:	jmp    QWORD PTR [rsi+0x20]
  401772:	add    BYTE PTR [rax],al
  401775:	add    BYTE PTR [rax],al
  401777:	add    BYTE PTR [rbp+0x0],cl
  40177a:	cld    
  40177b:	call   FWORD PTR [rcx+0x4020]
  401781:	add    BYTE PTR [rax],al
  401783:	add    BYTE PTR [rdx+0x0],cl
  401786:	std    
  401787:	dec    esi
  401789:	and    BYTE PTR [rax+0x0],al
  40178c:	add    BYTE PTR [rax],al
  40178e:	add    BYTE PTR [rax],al
  401790:	rex.WX add sil,dil
  401793:	inc    DWORD PTR [rbx]
  401795:	and    DWORD PTR [rax+0x0],eax
  401798:	add    BYTE PTR [rax],al
  40179a:	add    BYTE PTR [rax],al
  40179c:	rex.WX add dil,dil
  40179f:	inc    DWORD PTR [rax]
  4017a1:	add    BYTE PTR [rdi],al
  4017a3:	push   rsp
  4017a4:	rex.WRXB (bad) 
  4017a6:	push   0x65
  4017a8:	movsxd esi,DWORD PTR [rdx+rsi*1+0x0]
  4017ac:	shl    BYTE PTR [rax+rax*2+0x0],1
  4017b0:	add    BYTE PTR [rax],al
  4017b2:	add    BYTE PTR [rax],al
  4017b4:	(bad)  
  4017b5:	rex.XB jb 0x40181d
  4017b8:	(bad)  
  4017b9:	je     0x401820
  4017bb:	add    eax,DWORD PTR [rax]
	...
  4017c5:	and    BYTE PTR [rax],al
  4017c7:	add    DWORD PTR [rax],ecx
  4017c9:	cmp    BYTE PTR [rcx],ah
  4017cb:	add    BYTE PTR [rax],al
  4017ce:	add    BYTE PTR [rax],al
  4017d0:	add    BYTE PTR [rax],al
  4017d2:	add    BYTE PTR [rbx+rdx*2],al
  4017d5:	gs ins BYTE PTR es:[rdi],dx
  4017d7:	data16 add al,BYTE PTR [rax]
  4017da:	add    al,BYTE PTR [rax]
  4017dc:	xor    BYTE PTR [rax],al
  4017de:	nop
  4017df:	add    BYTE PTR gs:[rax],al
  4017e3:	add    BYTE PTR [rax],al
  4017e5:	add    BYTE PTR [rsi+rax*2],al
  4017e8:	jb     0x40184f
  4017ea:	add    eax,DWORD PTR gs:[rax]
	...
  4017f5:	sbb    BYTE PTR [rax],al
  4017f7:	add    DWORD PTR [rax],ecx
  4017f9:	cmp    BYTE PTR [rcx],ah
  4017fb:	add    BYTE PTR [rax],al
  4017fe:	add    BYTE PTR [rax],al
  401800:	add    BYTE PTR [rax],al
  401802:	add    BYTE PTR [rbx+rdx*2],al
  401805:	gs ins BYTE PTR es:[rdi],dx
  401807:	data16 add al,BYTE PTR [rax]
  40180a:	add    al,BYTE PTR [rax]
  40180c:	xor    eax,0x41599000
  401811:	add    BYTE PTR [rax],al
  401813:	add    BYTE PTR [rax],al
  401815:	add    BYTE PTR [rcx],cl
  401817:	imul   r14d,DWORD PTR [rbx+0x70],0x4f65736f
  40181f:	add    ax,WORD PTR [rax]
	...
  40182a:	sbb    BYTE PTR [rax],al
  40182c:	add    DWORD PTR [rax],ecx
  40182e:	cmp    BYTE PTR [rcx],ah
  401830:	add    BYTE PTR [rax],al
  401833:	add    BYTE PTR [rax],al
  401835:	add    BYTE PTR [rax],al
  401837:	add    BYTE PTR [rbx+rdx*2],al
  40183a:	gs ins BYTE PTR es:[rdi],dx
  40183c:	data16 add al,BYTE PTR [rax]
  40183f:	add    al,BYTE PTR [rax]
  401841:	rex.WRX add BYTE PTR [rax+0x4065],r14b
  401848:	add    BYTE PTR [rax],al
  40184a:	add    BYTE PTR [rcx+rcx*2],cl
  40184d:	outs   dx,BYTE PTR ds:[rsi]
  40184e:	imul   esi,DWORD PTR [rcx+rcx*2+0x6e],0x6e617473
  401856:	movsxd esp,DWORD PTR [rbp+0x3]
  401859:	add    BYTE PTR [rax],bh
  40185b:	and    DWORD PTR [rax+0x0],eax
  40185e:	add    BYTE PTR [rax],al
  401860:	add    BYTE PTR [rax],al
  401862:	and    BYTE PTR [rax],al
  401864:	add    al,BYTE PTR [rax]
	...
  40186e:	add    BYTE PTR [rax],al
  401870:	add    al,0x53
  401872:	gs ins BYTE PTR es:[rdi],dx
  401874:	data16 add al,BYTE PTR [rax]
  401877:	add    al,bl
  401879:	adc    BYTE PTR [rax+0x0],al
  40187c:	add    BYTE PTR [rax],al
  40187e:	add    BYTE PTR [rax],al
  401880:	add    BYTE PTR [rax],al
  401882:	or     BYTE PTR [rcx+0x6e],cl
  401885:	jae    0x4018fb
  401887:	(bad)  
  401888:	outs   dx,BYTE PTR ds:[rsi]
  401889:	movsxd esp,DWORD PTR [rbp+0x2]
  40188c:	add    BYTE PTR [rdx],al
  40188e:	add    BYTE PTR [rbx],bh
  401890:	add    BYTE PTR [rax+0x66],al
  401893:	add    BYTE PTR [rax],al
  401896:	add    BYTE PTR [rax],al
  401898:	add    BYTE PTR [rdi],cl
  40189a:	rex.XB ins BYTE PTR es:[rdi],dx
  40189c:	gs (bad) 
  40189e:	outs   dx,BYTE PTR ds:[rsi]
  40189f:	jne    0x401911
  4018a1:	rex.WB outs dx,BYTE PTR ds:[rsi]
  4018a3:	jae    0x401919
  4018a5:	(bad)  
  4018a6:	outs   dx,BYTE PTR ds:[rsi]
  4018a7:	movsxd esp,DWORD PTR [rbp+0x3]
	...
  4018b2:	add    BYTE PTR [rax],bl
  4018b4:	add    BYTE PTR [rcx],al
  4018b6:	or     BYTE PTR [rax],bh
  4018b8:	and    DWORD PTR [rax+0x0],eax
  4018bb:	add    BYTE PTR [rax],al
  4018bd:	add    BYTE PTR [rax],al
  4018bf:	add    BYTE PTR [rax],al
  4018c1:	add    al,0x53
  4018c3:	gs ins BYTE PTR es:[rdi],dx
  4018c5:	data16 add al,BYTE PTR [rax]
  4018c8:	add    al,BYTE PTR [rax]
  4018ca:	xor    eax,0x41599000
  4018cf:	add    BYTE PTR [rax],al
  4018d1:	add    BYTE PTR [rax],al
  4018d3:	add    BYTE PTR [rcx],cl
  4018d5:	rex.XB ins BYTE PTR es:[rdi],dx
  4018d7:	(bad)  
  4018d8:	jae    0x40194d
  4018da:	push   rsp
  4018db:	jns    0x40194d
  4018dd:	add    eax,DWORD PTR gs:[rax]
  4018e0:	cwde   
  4018e1:	adc    DWORD PTR [rax+0x0],eax
  4018e4:	add    BYTE PTR [rax],al
  4018e6:	add    BYTE PTR [rax],al
  4018e8:	sbb    BYTE PTR [rax],al
  4018ea:	add    DWORD PTR [rax],ecx
  4018ec:	cmp    BYTE PTR [rcx],ah
  4018ee:	add    BYTE PTR [rax],al
  4018f1:	add    BYTE PTR [rax],al
  4018f3:	add    BYTE PTR [rax],al
  4018f5:	add    BYTE PTR [rbx+rdx*2],al
  4018f8:	gs ins BYTE PTR es:[rdi],dx
  4018fa:	data16 add al,BYTE PTR [rax]
  4018fd:	add    al,BYTE PTR [rax]
  4018ff:	add    BYTE PTR [rax],r8b
  401902:	add    BYTE PTR fs:[rax],al
  401906:	add    BYTE PTR [rax],al
  401908:	add    BYTE PTR [rcx],cl
  40190a:	rex.XB ins BYTE PTR es:[rdi],dx
  40190c:	(bad)  
  40190d:	jae    0x401982
  40190f:	rex.WRX (bad) 
  401911:	ins    DWORD PTR es:[rdi],dx
  401912:	add    eax,DWORD PTR gs:[rax]
  401915:	adc    BYTE PTR [rcx],0x40
  401918:	add    BYTE PTR [rax],al
  40191a:	add    BYTE PTR [rax],al
  40191c:	add    BYTE PTR [rax],ah
  40191e:	add    BYTE PTR [rdx],al
	...
  401928:	add    BYTE PTR [rax],al
  40192a:	add    BYTE PTR [rbx+rdx*2],al
  40192d:	gs ins BYTE PTR es:[rdi],dx
  40192f:	data16 add al,BYTE PTR [rax]
  401932:	rex adc BYTE PTR [rcx],0x40
  401936:	add    BYTE PTR [rax],al
  401938:	add    BYTE PTR [rax],al
  40193a:	add    BYTE PTR [rax],al
  40193c:	add    BYTE PTR [rcx],al
  40193e:	add    DWORD PTR [rdx],eax
  401940:	add    BYTE PTR [rdx],al
  401942:	add    BYTE PTR [rcx+0x0],cl
  401945:	nop
  401946:	pop    rcx
  401947:	add    BYTE PTR [r8],al
  40194a:	add    BYTE PTR [rax],al
  40194c:	add    BYTE PTR [rbx],cl
  40194e:	rex.XB ins BYTE PTR es:[rdi],dx
  401950:	(bad)  
  401951:	jae    0x4019c6
  401953:	rex.WRX (bad) 
  401955:	ins    DWORD PTR es:[rdi],dx
  401956:	gs rex.WB jae 0x40195d
  40195a:	add    BYTE PTR [rax],al
  40195c:	adc    BYTE PTR [rax+0x0],al
  40195f:	add    BYTE PTR [rax],al
  401961:	add    BYTE PTR [rax],al
  401963:	and    BYTE PTR [rax],al
  401965:	add    al,BYTE PTR [rax]
	...
  40196f:	add    BYTE PTR [rax],al
  401971:	add    al,0x53
  401973:	gs ins BYTE PTR es:[rdi],dx
  401975:	data16 add al,BYTE PTR [rax]
  401978:	add    al,BYTE PTR [rax+0x4011]
  40197e:	add    BYTE PTR [rax],al
  401980:	add    BYTE PTR [rax],al
  401982:	add    BYTE PTR [rsi+rcx*2],al
  401985:	(bad)  
  401986:	ins    DWORD PTR es:[rdi],dx
  401987:	add    al,BYTE PTR gs:[rax]
  40198a:	add    al,BYTE PTR [rax]
  40198c:	(bad)  
  40198d:	add    BYTE PTR [rax],dh
  40198f:	add    BYTE PTR fs:[rax],al
  401993:	add    BYTE PTR [rax],al
  401995:	add    BYTE PTR [rbx],cl
  401997:	rex.XB ins BYTE PTR es:[rdi],dx
  401999:	(bad)  
  40199a:	jae    0x401a0f
  40199c:	push   rax
  40199d:	(bad)  
  40199e:	jb     0x401a05
  4019a0:	outs   dx,BYTE PTR ds:[rsi]
  4019a1:	je     0x4019a6
  4019a3:	add    BYTE PTR [rax+0x4011],bl
  4019a9:	add    BYTE PTR [rax],al
  4019ab:	add    BYTE PTR [rax],bl
  4019ad:	add    BYTE PTR [rcx],al
	...
  4019b7:	add    BYTE PTR [rax],al
  4019b9:	add    BYTE PTR [rbx+rdx*2],al
  4019bc:	gs ins BYTE PTR es:[rdi],dx
  4019be:	data16 add al,BYTE PTR [rax]
  4019c1:	add    al,BYTE PTR [rax]
  4019c3:	xor    eax,0x41599000
  4019c8:	add    BYTE PTR [rax],al
  4019ca:	add    BYTE PTR [rax],al
  4019cc:	add    BYTE PTR [rcx],cl
  4019ce:	rex.XB ins BYTE PTR es:[rdi],dx
  4019d0:	(bad)  
  4019d1:	jae    0x401a46
  4019d3:	rex.WB outs dx,BYTE PTR ds:[rsi]
  4019d5:	outs   dx,WORD PTR ds:[rsi]
  4019d7:	add    eax,DWORD PTR [rax]
  4019d9:	fcom   DWORD PTR [rax]
  4019db:	add    BYTE PTR [rax],al
  4019de:	add    BYTE PTR [rax],al
  4019e0:	add    BYTE PTR [rax],bl
  4019e2:	add    BYTE PTR [rcx],al
	...
  4019ec:	add    BYTE PTR [rax],al
  4019ee:	add    BYTE PTR [rbx+rdx*2],al
  4019f1:	gs ins BYTE PTR es:[rdi],dx
  4019f3:	data16 add al,BYTE PTR [rax]
  4019f6:	add    al,BYTE PTR [rax]
  4019f8:	cmp    BYTE PTR [rax],al
  4019fa:	shl    BYTE PTR [rax+rax*2+0x0],0x0
  4019ff:	add    BYTE PTR [rax],al
  401a01:	add    BYTE PTR [rcx+rcx*2],cl
  401a04:	outs   dx,BYTE PTR ds:[rsi]
  401a05:	jae    0x401a7b
  401a07:	(bad)  
  401a08:	outs   dx,BYTE PTR ds:[rsi]
  401a09:	movsxd esp,DWORD PTR [rbp+0x53]
  401a0c:	imul   edi,DWORD PTR [rdx+0x65],0x10580003
  401a13:	add    BYTE PTR [rax],al
  401a16:	add    BYTE PTR [rax],al
  401a18:	add    BYTE PTR [rax],bl
  401a1a:	add    BYTE PTR [rcx],al
	...
  401a24:	add    BYTE PTR [rax],al
  401a26:	add    BYTE PTR [rbx+rdx*2],al
  401a29:	gs ins BYTE PTR es:[rdi],dx
  401a2b:	data16 add al,BYTE PTR [rax]
  401a2e:	add    al,BYTE PTR [rax]
  401a30:	rex.WR add al,r14b
  401a33:	add    BYTE PTR [eax],al
  401a37:	add    BYTE PTR [rax],al
  401a39:	add    BYTE PTR [rcx+rcx*2],cl
  401a3c:	outs   dx,BYTE PTR ds:[rsi]
  401a3d:	push   0x74697265
  401a42:	jae    0x401a8a
  401a44:	jb     0x401ab5
  401a46:	ins    DWORD PTR es:[rdi],dx
  401a47:	add    eax,DWORD PTR [rax]
  401a49:	add    BYTE PTR [rax],dl
  401a4b:	add    BYTE PTR [rax],al
  401a4e:	add    BYTE PTR [rax],al
  401a50:	add    BYTE PTR [rax],ah
  401a52:	add    BYTE PTR [rdx],al
	...
  401a5c:	add    BYTE PTR [rax],al
  401a5e:	add    BYTE PTR [rbx+rdx*2],al
  401a61:	gs ins BYTE PTR es:[rdi],dx
  401a63:	data16 add al,BYTE PTR [rax]
  401a66:	add    BYTE PTR [rax+0x4011],bl
  401a6c:	add    BYTE PTR [rax],al
  401a6e:	add    BYTE PTR [rax],al
  401a70:	add    BYTE PTR [rsi],al
  401a72:	rex.B
  401a73:	rex.XB ins BYTE PTR es:[rdi],dx
  401a75:	(bad)  
  401a76:	jae    0x401aeb
  401a78:	add    al,BYTE PTR [rax]
  401a7a:	add    al,BYTE PTR [rax]
  401a7c:	rex.WXB add BYTE PTR [r8+0x4159],dl
  401a83:	add    BYTE PTR [rax],al
  401a85:	add    BYTE PTR [rip+0x6874654d],cl        # 0x68b47fd8
  401a8b:	outs   dx,DWORD PTR ds:[rsi]
  401a8c:	fs rex.B
  401a8e:	fs fs jb 0x401af7
  401a92:	jae    0x401b07
  401a94:	add    eax,DWORD PTR [rax]
  401a96:	fcom   DWORD PTR [rax]
  401a98:	add    BYTE PTR [rax],al
  401a9b:	add    BYTE PTR [rax],al
  401a9d:	add    BYTE PTR [rax],ah
  401a9f:	add    BYTE PTR [rdx],al
	...
  401aa9:	add    BYTE PTR [rax],al
  401aab:	add    BYTE PTR [rbx+rdx*2],al
  401aae:	gs ins BYTE PTR es:[rdi],dx
  401ab0:	data16 add al,BYTE PTR [rax]
  401ab3:	adc    cl,BYTE PTR [rax+0x11]
  401ab6:	add    BYTE PTR [rax],al
  401ab9:	add    BYTE PTR [rax],al
  401abb:	add    BYTE PTR [rax],al
  401abd:	add    BYTE PTR [rsi+rcx*2],al
  401ac0:	(bad)  
  401ac1:	ins    DWORD PTR es:[rdi],dx
  401ac2:	add    al,BYTE PTR gs:[rax]
  401ac5:	add    al,BYTE PTR [rax]
  401ac7:	rex.WXB add BYTE PTR [r8+0x4159],dl
  401ace:	add    BYTE PTR [rax],al
  401ad0:	add    BYTE PTR [rip+0x6874654d],cl        # 0x68b48023
  401ad6:	outs   dx,DWORD PTR ds:[rsi]
  401ad7:	fs rex.B
  401ad9:	fs fs jb 0x401b42
  401add:	jae    0x401b52
  401adf:	add    eax,DWORD PTR [rax]
  401ae1:	fcom   DWORD PTR [rax]
  401ae3:	add    BYTE PTR [rax],al
  401ae6:	add    BYTE PTR [rax],al
  401ae8:	add    BYTE PTR [rax],ah
  401aea:	add    BYTE PTR [rdx],al
	...
  401af4:	add    BYTE PTR [rax],al
  401af6:	add    BYTE PTR [rbx+rdx*2],al
  401af9:	gs ins BYTE PTR es:[rdi],dx
  401afb:	data16 add al,BYTE PTR [rax]
  401afe:	add    al,BYTE PTR [rax+0x4011]
  401b04:	add    BYTE PTR [rax],al
  401b06:	add    BYTE PTR [rax],al
  401b08:	add    BYTE PTR [rsi+rcx*2],al
  401b0b:	(bad)  
  401b0c:	ins    DWORD PTR es:[rdi],dx
  401b0d:	add    al,BYTE PTR gs:[rax]
  401b10:	add    al,BYTE PTR [rax]
  401b12:	pop    rdx
  401b13:	add    BYTE PTR [rax+0x4159],dl
  401b19:	add    BYTE PTR [rax],al
  401b1b:	add    BYTE PTR [rdx],cl
  401b1d:	rex.WRB
  401b1e:	gs je  0x401b89
  401b21:	outs   dx,DWORD PTR ds:[rsi]
  401b22:	fs rex.WRX (bad) 
  401b25:	ins    DWORD PTR es:[rdi],dx
  401b26:	add    eax,DWORD PTR gs:[rax]
  401b29:	adc    BYTE PTR [rcx],0x40
  401b2c:	add    BYTE PTR [rax],al
  401b2e:	add    BYTE PTR [rax],al
  401b30:	add    BYTE PTR [rax],ch
  401b32:	add    BYTE PTR [rbx],al
	...
  401b3c:	add    BYTE PTR [rax],al
  401b3e:	add    BYTE PTR [rbx+rdx*2],al
  401b41:	gs ins BYTE PTR es:[rdi],dx
  401b43:	data16 add al,BYTE PTR [rax]
  401b46:	add    al,bl
  401b48:	adc    BYTE PTR [rax+0x0],al
  401b4b:	add    BYTE PTR [rax],al
  401b4d:	add    BYTE PTR [rax],al
  401b4f:	add    BYTE PTR [rax],al
  401b51:	(bad)  
  401b52:	rex.B
  401b53:	fs fs jb 0x401bbc
  401b57:	jae    0x401bcc
  401b59:	add    al,BYTE PTR [rax]
  401b5b:	rex adc BYTE PTR [rcx],0x40
  401b5f:	add    BYTE PTR [rax],al
  401b61:	add    BYTE PTR [rax],al
  401b63:	add    BYTE PTR [rax],al
  401b65:	add    BYTE PTR [rcx],al
  401b67:	add    DWORD PTR [rdx],eax
  401b69:	add    BYTE PTR [rdx],al
  401b6b:	add    BYTE PTR [rbp+0x0],cl
  401b6e:	nop
  401b6f:	pop    rcx
  401b70:	add    BYTE PTR [r8],al
  401b73:	add    BYTE PTR [rax],al
  401b75:	add    BYTE PTR [rdx],dl
  401b77:	push   rcx
  401b78:	jne    0x401bdb
  401b7a:	ins    BYTE PTR es:[rdi],dx
  401b7b:	imul   esp,DWORD PTR [rsi+0x69],0x6c436465
  401b82:	(bad)  
  401b83:	jae    0x401bf8
  401b85:	rex.WRX (bad) 
  401b87:	ins    DWORD PTR es:[rdi],dx
  401b88:	add    eax,DWORD PTR gs:[rax]
  401b8b:	adc    BYTE PTR [rcx],0x40
  401b8e:	add    BYTE PTR [rax],al
  401b90:	add    BYTE PTR [rax],al
  401b92:	add    BYTE PTR [rax],ah
  401b94:	add    BYTE PTR [rdx],al
	...
  401b9e:	add    BYTE PTR [rax],al
  401ba0:	add    BYTE PTR [rbx+rdx*2],al
  401ba3:	gs ins BYTE PTR es:[rdi],dx
  401ba5:	data16 add al,BYTE PTR [rax]
  401ba8:	rex adc BYTE PTR [rcx],0x40
  401bac:	add    BYTE PTR [rax],al
  401bae:	add    BYTE PTR [rax],al
  401bb0:	add    BYTE PTR [rax],al
  401bb2:	add    BYTE PTR [rcx],al
  401bb4:	add    DWORD PTR [rdx],eax
  401bb6:	add    BYTE PTR [rdx],al
  401bb8:	add    BYTE PTR [rdx+0x0],cl
  401bbb:	nop
  401bbc:	pop    rcx
  401bbd:	add    BYTE PTR [r8],al
  401bc0:	add    BYTE PTR [rax],al
  401bc2:	add    BYTE PTR [rsi+rax*2],cl
  401bc5:	imul   esp,DWORD PTR [rbp+0x6c],0x64644164
  401bcc:	jb     0x401c33
  401bce:	jae    0x401c43
  401bd0:	add    eax,DWORD PTR [rax]
  401bd2:	fcom   DWORD PTR [rax]
  401bd4:	add    BYTE PTR [rax],al
  401bd7:	add    BYTE PTR [rax],al
  401bd9:	add    BYTE PTR [rax],ah
  401bdb:	add    BYTE PTR [rdx],al
  401bdd:	or     BYTE PTR [rax],bh
  401bdf:	and    DWORD PTR [rax+0x0],eax
  401be2:	add    BYTE PTR [rax],al
  401be4:	add    BYTE PTR [rax],al
  401be6:	add    BYTE PTR [rax],al
  401be8:	add    al,0x53
  401bea:	gs ins BYTE PTR es:[rdi],dx
  401bec:	data16 add al,BYTE PTR [rax]
  401bef:	adc    cl,BYTE PTR [rax+0x11]
  401bf2:	add    BYTE PTR [rax],al
  401bf5:	add    BYTE PTR [rax],al
  401bf7:	add    BYTE PTR [rax],al
  401bf9:	add    BYTE PTR [rsi+rcx*2],al
  401bfc:	(bad)  
  401bfd:	ins    DWORD PTR es:[rdi],dx
  401bfe:	add    al,BYTE PTR gs:[rax]
  401c01:	add    al,BYTE PTR [rax]
  401c03:	rex.WX add BYTE PTR [rax+0x4159],dl
  401c0a:	add    BYTE PTR [rax],al
  401c0c:	add    BYTE PTR [rsi+rax*2],cl
  401c0f:	imul   esp,DWORD PTR [rbp+0x6c],0x64644164
  401c16:	jb     0x401c7d
  401c18:	jae    0x401c8d
  401c1a:	add    eax,DWORD PTR [rax]
  401c1c:	fcom   DWORD PTR [rax]
  401c1e:	add    BYTE PTR [rax],al
  401c21:	add    BYTE PTR [rax],al
  401c23:	add    BYTE PTR [rax],ah
  401c25:	add    BYTE PTR [rdx],al
  401c27:	or     BYTE PTR [rax],bh
  401c29:	and    DWORD PTR [rax+0x0],eax
  401c2c:	add    BYTE PTR [rax],al
  401c2e:	add    BYTE PTR [rax],al
  401c30:	add    BYTE PTR [rax],al
  401c32:	add    al,0x53
  401c34:	gs ins BYTE PTR es:[rdi],dx
  401c36:	data16 add al,BYTE PTR [rax]
  401c39:	add    al,BYTE PTR [rax+0x4011]
  401c3f:	add    BYTE PTR [rax],al
  401c41:	add    BYTE PTR [rax],al
  401c43:	add    BYTE PTR [rsi+rcx*2],al
  401c46:	(bad)  
  401c47:	ins    DWORD PTR es:[rdi],dx
  401c48:	add    al,BYTE PTR gs:[rax]
  401c4b:	add    al,BYTE PTR [rax]
  401c4d:	pop    rdx
  401c4e:	add    BYTE PTR [rax+0x4159],dl
  401c54:	add    BYTE PTR [rax],al
  401c56:	add    BYTE PTR [rdi+rax*2],cl
  401c59:	gs je  0x401ca5
  401c5c:	outs   dx,BYTE PTR ds:[rsi]
  401c5d:	je     0x401cc4
  401c5f:	jb     0x401cc7
  401c61:	(bad)  
  401c62:	movsxd esp,DWORD PTR [rbp+0x3]
  401c65:	add    BYTE PTR [rax],al
  401c67:	adc    BYTE PTR [rax+0x0],al
  401c6a:	add    BYTE PTR [rax],al
  401c6c:	add    BYTE PTR [rax],al
  401c6e:	sub    BYTE PTR [rax],al
  401c70:	add    ecx,DWORD PTR [rax]
  401c72:	cmp    BYTE PTR [rcx],ah
  401c74:	add    BYTE PTR [rax],al
  401c77:	add    BYTE PTR [rax],al
  401c79:	add    BYTE PTR [rax],al
  401c7b:	add    BYTE PTR [rbx+rdx*2],al
  401c7e:	gs ins BYTE PTR es:[rdi],dx
  401c80:	data16 add al,BYTE PTR [rax]
  401c83:	adc    bl,al
  401c85:	adc    DWORD PTR [rax+0x0],eax
  401c88:	add    BYTE PTR [rax],al
  401c8a:	add    BYTE PTR [rax],al
  401c8c:	add    BYTE PTR [rax],al
  401c8e:	add    ecx,DWORD PTR [rcx+0x49]
  401c91:	add    r8b,BYTE PTR [rax]
  401c94:	and    BYTE PTR [rax],al
	...
  401c9e:	add    BYTE PTR [rbx],al
  401ca0:	rex.WRXB (bad) 
  401ca2:	push   0x2
  401ca4:	add    BYTE PTR [rdx],al
  401ca6:	add    BYTE PTR [rsi+0x0],cl
  401ca9:	nop
  401caa:	pop    rcx
  401cab:	add    BYTE PTR [r8],al
  401cae:	add    BYTE PTR [rax],al
  401cb0:	add    BYTE PTR [rcx],dl
  401cb2:	rex.RXB
  401cb3:	gs je  0x401cff
  401cb6:	outs   dx,BYTE PTR ds:[rsi]
  401cb7:	je     0x401d1e
  401cb9:	jb     0x401d21
  401cbb:	(bad)  
  401cbc:	movsxd esp,DWORD PTR [rbp+0x45]
  401cbf:	outs   dx,BYTE PTR ds:[rsi]
  401cc0:	je     0x401d34
  401cc2:	jns    0x401cc7
  401cc4:	add    BYTE PTR [rax+0x4013],bl
  401cca:	add    BYTE PTR [rax],al
  401ccc:	add    BYTE PTR [rax],ah
  401cce:	add    BYTE PTR [rdx],al
	...
  401cd8:	add    BYTE PTR [rax],al
  401cda:	add    BYTE PTR [rbx+rdx*2],al
  401cdd:	gs ins BYTE PTR es:[rdi],dx
  401cdf:	data16 add al,BYTE PTR [rax]
  401ce2:	adc    bl,al
  401ce4:	adc    DWORD PTR [rax+0x0],eax
  401ce7:	add    BYTE PTR [rax],al
  401ce9:	add    BYTE PTR [rax],al
  401ceb:	add    BYTE PTR [rax],al
  401ced:	add    ecx,DWORD PTR [rcx+0x49]
  401cf0:	add    r8b,BYTE PTR [rax]
  401cf3:	add    al,BYTE PTR [rax]
  401cf5:	cmp    eax,0x4066d000
  401cfa:	add    BYTE PTR [rax],al
  401cfc:	add    BYTE PTR [rax],al
  401cfe:	add    BYTE PTR [rcx],dl
  401d00:	rex.RXB
  401d01:	gs je  0x401d4d
  401d04:	outs   dx,BYTE PTR ds:[rsi]
  401d05:	je     0x401d6c
  401d07:	jb     0x401d6f
  401d09:	(bad)  
  401d0a:	movsxd esp,DWORD PTR [rbp+0x54]
  401d0d:	(bad)  
  401d0e:	(bad)  
  401d0f:	ins    BYTE PTR es:[rdi],dx
  401d10:	add    eax,DWORD PTR gs:[rax]
  401d13:	jo     0x401d29
  401d15:	add    BYTE PTR [rax],al
  401d18:	add    BYTE PTR [rax],al
  401d1a:	add    BYTE PTR [rax],bl
  401d1c:	add    BYTE PTR [rcx],al
	...
  401d26:	add    BYTE PTR [rax],al
  401d28:	add    BYTE PTR [rbx+rdx*2],al
  401d2b:	gs ins BYTE PTR es:[rdi],dx
  401d2d:	data16 add al,BYTE PTR [rax]
  401d30:	add    al,BYTE PTR [rax]
  401d32:	rex.XB add BYTE PTR [r8+0x4159],dl
  401d39:	add    BYTE PTR [rax],al
  401d3b:	add    BYTE PTR [rax],cl
  401d3d:	push   rbp
  401d3e:	outs   dx,BYTE PTR ds:[rsi]
  401d3f:	imul   esi,DWORD PTR [rsi+rcx*2+0x61],0x3656d
  401d47:	adc    BYTE PTR [rcx],0x40
  401d4a:	add    BYTE PTR [rax],al
  401d4c:	add    BYTE PTR [rax],al
  401d4e:	add    BYTE PTR [rax],ah
  401d50:	add    BYTE PTR [rdx],al
	...
  401d5a:	add    BYTE PTR [rax],al
  401d5c:	add    BYTE PTR [rbx+rdx*2],al
  401d5f:	gs ins BYTE PTR es:[rdi],dx
  401d61:	data16 add al,BYTE PTR [rax]
  401d64:	rex adc BYTE PTR [rcx],0x40
  401d68:	add    BYTE PTR [rax],al
  401d6a:	add    BYTE PTR [rax],al
  401d6c:	add    BYTE PTR [rax],al
  401d6e:	add    BYTE PTR [rcx],al
  401d70:	add    DWORD PTR [rdx],eax
  401d72:	add    BYTE PTR [rdx],al
  401d74:	add    BYTE PTR [rax+rax*1-0x70],al
  401d78:	pop    rcx
  401d79:	add    BYTE PTR [r8],al
  401d7c:	add    BYTE PTR [rax],al
  401d7e:	add    BYTE PTR [rcx],cl
  401d80:	push   rbp
  401d81:	outs   dx,BYTE PTR ds:[rsi]
  401d82:	imul   esi,DWORD PTR [rbx+rdx*2+0x63],0x365706f
  401d8a:	add    BYTE PTR [rax+0x4011],al
  401d90:	add    BYTE PTR [rax],al
  401d92:	add    BYTE PTR [rax],ah
  401d94:	add    BYTE PTR [rdx],al
	...
  401d9e:	add    BYTE PTR [rax],al
  401da0:	add    BYTE PTR [rbx+rdx*2],al
  401da3:	gs ins BYTE PTR es:[rdi],dx
  401da5:	data16 add al,BYTE PTR [rax]
  401da8:	rex adc BYTE PTR [rcx],0x40
  401dac:	add    BYTE PTR [rax],al
  401dae:	add    BYTE PTR [rax],al
  401db0:	add    BYTE PTR [rax],al
  401db2:	add    BYTE PTR [rcx],al
  401db4:	add    DWORD PTR [rdx],eax
  401db6:	add    BYTE PTR [rdx],al
  401db8:	add    BYTE PTR [rbx+0x0],al
  401dbb:	mov    al,0x66
  401dbd:	add    BYTE PTR [rax],al
  401dc0:	add    BYTE PTR [rax],al
  401dc2:	add    BYTE PTR [rsi],al
  401dc4:	rex.RB jno 0x401e3c
  401dc7:	(bad)  
  401dc8:	ins    BYTE PTR es:[rdi],dx
  401dc9:	jae    0x401dce
  401dcb:	add    BYTE PTR [rax],al
  401dcd:	adc    BYTE PTR [rax+0x0],al
  401dd0:	add    BYTE PTR [rax],al
  401dd2:	add    BYTE PTR [rax],al
  401dd4:	and    BYTE PTR [rax],al
  401dd6:	add    cl,BYTE PTR [rax]
  401dd8:	cmp    BYTE PTR [rcx],ah
  401dda:	add    BYTE PTR [rax],al
  401ddd:	add    BYTE PTR [rax],al
  401ddf:	add    BYTE PTR [rax],al
  401de1:	add    BYTE PTR [rbx+rdx*2],al
  401de4:	gs ins BYTE PTR es:[rdi],dx
  401de6:	data16 add al,BYTE PTR [rax]
  401de9:	or     BYTE PTR [rax],bh
  401deb:	and    DWORD PTR [rax+0x0],eax
  401dee:	add    BYTE PTR [rax],al
  401df0:	add    BYTE PTR [rax],al
  401df2:	add    BYTE PTR [rax],al
  401df4:	add    ecx,DWORD PTR [rdi+0x62]
  401df7:	push   0x2
  401df9:	add    BYTE PTR [rdx],al
  401dfb:	add    BYTE PTR [rdi],dh
  401dfd:	add    al,al
  401dff:	data16 add BYTE PTR [rax],al
  401e03:	add    BYTE PTR [rax],al
  401e05:	add    BYTE PTR [rbx],cl
  401e07:	rex.RXB
  401e08:	gs je  0x401e53
  401e0b:	(bad)  
  401e0c:	jae    0x401e76
  401e0e:	rex.XB outs dx,DWORD PTR ds:[rsi]
  401e10:	fs add eax,DWORD PTR gs:[rax]
  401e14:	pop    rax
  401e15:	adc    BYTE PTR [rax+0x0],al
  401e18:	add    BYTE PTR [rax],al
  401e1a:	add    BYTE PTR [rax],al
  401e1c:	sbb    BYTE PTR [rax],al
  401e1e:	add    DWORD PTR [rax],ecx
  401e20:	cmp    BYTE PTR [rcx],ah
  401e22:	add    BYTE PTR [rax],al
  401e25:	add    BYTE PTR [rax],al
  401e27:	add    BYTE PTR [rax],al
  401e29:	add    BYTE PTR [rbx+rdx*2],al
  401e2c:	gs ins BYTE PTR es:[rdi],dx
  401e2e:	data16 add al,BYTE PTR [rax]
  401e31:	add    al,BYTE PTR [rax]
  401e33:	rex.XB add BYTE PTR [r8],spl
  401e36:	push   0x40
  401e3b:	add    BYTE PTR [rax],al
  401e3d:	or     BYTE PTR [rdi+rbp*2+0x53],dl
  401e41:	je     0x401eb5
  401e43:	imul   ebp,DWORD PTR [rsi+0x67],0x11800003
  401e4a:	add    BYTE PTR [rax],al
  401e4d:	add    BYTE PTR [rax],al
  401e4f:	add    BYTE PTR [rax],ah
  401e51:	add    BYTE PTR [rdx],al
  401e53:	or     BYTE PTR [rax],bh
  401e55:	and    DWORD PTR [rax+0x0],eax
  401e58:	add    BYTE PTR [rax],al
  401e5a:	add    BYTE PTR [rax],al
  401e5c:	add    BYTE PTR [rax],al
  401e5e:	add    al,0x53
  401e60:	gs ins BYTE PTR es:[rdi],dx
  401e62:	data16 add al,BYTE PTR [rax]
  401e65:	rex adc BYTE PTR [rcx],0x40
  401e69:	add    BYTE PTR [rax],al
  401e6b:	add    BYTE PTR [rax],al
  401e6d:	add    BYTE PTR [rax],al
  401e6f:	add    BYTE PTR [rcx],al
  401e71:	add    DWORD PTR [rdx],eax
  401e73:	add    BYTE PTR [rdx],al
  401e75:	add    BYTE PTR [rdi+0x0],ch
  401e78:	adc    BYTE PTR [rax+0x40],ch
  401e7b:	add    BYTE PTR [rax],al
  401e7d:	add    BYTE PTR [rax],al
  401e7f:	add    BYTE PTR [rcx],dl
  401e81:	push   rbx
  401e82:	(bad)  
  401e83:	data16 gs rex.XB (bad) 
  401e87:	ins    BYTE PTR es:[rdi],dx
  401e88:	ins    BYTE PTR es:[rdi],dx
  401e89:	rex.RB js 0x401eef
  401e8c:	gs jo  0x401f03
  401e8f:	imul   ebp,DWORD PTR [rdi+0x6e],0x11b80003
  401e96:	add    BYTE PTR [rax],al
  401e99:	add    BYTE PTR [rax],al
  401e9b:	add    BYTE PTR [rax],ch
  401e9d:	add    BYTE PTR [rbx],al
  401e9f:	or     BYTE PTR [rax],bh
  401ea1:	and    DWORD PTR [rax+0x0],eax
  401ea4:	add    BYTE PTR [rax],al
  401ea6:	add    BYTE PTR [rax],al
  401ea8:	add    BYTE PTR [rax],al
  401eaa:	add    al,0x53
  401eac:	gs ins BYTE PTR es:[rdi],dx
  401eae:	data16 add al,BYTE PTR [rax]
  401eb1:	or     BYTE PTR [rax],bh
  401eb3:	and    DWORD PTR [rax+0x0],eax
  401eb6:	add    BYTE PTR [rax],al
  401eb8:	add    BYTE PTR [rax],al
  401eba:	add    BYTE PTR [rax],al
  401ebc:	or     al,0x45
  401ebe:	js     0x401f23
  401ec0:	gs jo  0x401f37
  401ec3:	rex.WRXB (bad) 
  401ec5:	push   0x65
  401ec7:	movsxd esi,DWORD PTR [rdx+rax*1+0x0]
  401ecb:	add    al,bl
  401ecd:	adc    BYTE PTR [rax+0x0],al
  401ed0:	add    BYTE PTR [rax],al
  401ed2:	add    BYTE PTR [rax],al
  401ed4:	add    BYTE PTR [rax],al
  401ed6:	or     al,BYTE PTR [rbp+0x78]
  401ed9:	movsxd esp,DWORD PTR [rbp+0x70]
  401edc:	je     0x401f1f
  401ede:	fs fs jb 0x401ee4
  401ee2:	add    BYTE PTR [rdx],al
  401ee4:	add    BYTE PTR [rip+0x40685000],bh        # 0x40a86eea
  401eea:	add    BYTE PTR [rax],al
  401eec:	add    BYTE PTR [rax],al
  401eee:	add    BYTE PTR [rcx],dl
  401ef0:	rex.B
  401ef1:	data16 je 0x401f59
  401ef4:	jb     0x401f39
  401ef6:	outs   dx,DWORD PTR ds:[rsi]
  401ef7:	outs   dx,BYTE PTR ds:[rsi]
  401ef8:	jae    0x401f6e
  401efa:	jb     0x401f71
  401efc:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  401f00:	outs   dx,BYTE PTR ds:[rsi]
  401f01:	add    eax,DWORD PTR [rax]
	...
  401f0b:	sbb    BYTE PTR [rax],al
  401f0d:	add    DWORD PTR [rax],ecx
  401f0f:	cmp    BYTE PTR [rcx],ah
  401f11:	add    BYTE PTR [rax],al
  401f14:	add    BYTE PTR [rax],al
  401f16:	add    BYTE PTR [rax],al
  401f18:	add    BYTE PTR [rbx+rdx*2],al
  401f1b:	gs ins BYTE PTR es:[rdi],dx
  401f1d:	data16 add al,BYTE PTR [rax]
  401f20:	add    al,BYTE PTR [rax]
  401f22:	cmp    eax,0x40686000
  401f27:	add    BYTE PTR [rax],al
  401f29:	add    BYTE PTR [rax],al
  401f2b:	add    BYTE PTR [rcx],dl
  401f2d:	rex.X
  401f2e:	outs   dx,WORD PTR gs:[rsi]
  401f31:	jb     0x401f98
  401f33:	rex.R
  401f34:	gs jae 0x401fab
  401f37:	jb     0x401fae
  401f39:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  401f3d:	outs   dx,BYTE PTR ds:[rsi]
  401f3e:	add    eax,DWORD PTR [rax]
	...
  401f48:	sbb    BYTE PTR [rax],al
  401f4a:	add    DWORD PTR [rax],ecx
  401f4c:	cmp    BYTE PTR [rcx],ah
  401f4e:	add    BYTE PTR [rax],al
  401f51:	add    BYTE PTR [rax],al
  401f53:	add    BYTE PTR [rax],al
  401f55:	add    BYTE PTR [rbx+rdx*2],al
  401f58:	gs ins BYTE PTR es:[rdi],dx
  401f5a:	data16 add al,BYTE PTR [rax]
  401f5d:	add    al,BYTE PTR [rax]
  401f5f:	rex.WB add BYTE PTR [r8+0x68],sil
  401f63:	add    BYTE PTR [rax],al
  401f66:	add    BYTE PTR [rax],al
  401f68:	add    BYTE PTR [rax],cl
  401f6a:	imul   r14d,DWORD PTR [rbx+0x70],0x68637461
  401f72:	add    eax,DWORD PTR [rax]
	...
  401f7c:	and    BYTE PTR [rax],al
  401f7e:	add    cl,BYTE PTR [rax]
  401f80:	cmp    BYTE PTR [rcx],ah
  401f82:	add    BYTE PTR [rax],al
  401f85:	add    BYTE PTR [rax],al
  401f87:	add    BYTE PTR [rax],al
  401f89:	add    BYTE PTR [rbx+rdx*2],al
  401f8c:	gs ins BYTE PTR es:[rdi],dx
  401f8e:	data16 add al,BYTE PTR [rax]
  401f91:	add    DWORD PTR [rax],eax
	...
  401f9b:	add    BYTE PTR [rdi],al
  401f9d:	rex.WRB
  401f9e:	gs jae 0x402014
  401fa1:	(bad)  
  401fa2:	add    al,BYTE PTR gs:[eax]
  401fa6:	add    al,BYTE PTR [rax]
  401fa8:	rex.WRXB add BYTE PTR [r8+0x68],r8b
  401fac:	add    BYTE PTR [rax],al
  401faf:	add    BYTE PTR [rax],al
  401fb1:	add    BYTE PTR [rsi],cl
  401fb3:	rex.R
  401fb4:	gs data16 (bad) 
  401fb7:	jne    0x402025
  401fb9:	je     0x402003
  401fbb:	(bad)  
  401fbc:	outs   dx,BYTE PTR ds:[rsi]
  401fbd:	fs ins BYTE PTR es:[rdi],dx
  401fbf:	gs jb  0x401fc5
	...
  401fca:	add    BYTE PTR [rax],ah
  401fcc:	add    BYTE PTR [rdx],al
  401fce:	or     BYTE PTR [rax],bh
  401fd0:	and    DWORD PTR [rax+0x0],eax
  401fd3:	add    BYTE PTR [rax],al
  401fd5:	add    BYTE PTR [rax],al
  401fd7:	add    BYTE PTR [rax],al
  401fd9:	add    al,0x53
  401fdb:	gs ins BYTE PTR es:[rdi],dx
  401fdd:	data16 add al,BYTE PTR [rax]
  401fe0:	add    DWORD PTR [rax],eax
	...
  401fea:	add    BYTE PTR [rdi],al
  401fec:	rex.WRB
  401fed:	gs jae 0x402063
  401ff0:	(bad)  
  401ff1:	add    al,BYTE PTR gs:[eax]
  401ff5:	add    al,BYTE PTR [rax]
  401ff7:	(bad)  
  401ff8:	add    BYTE PTR [rax+0x64],al
  401ffb:	add    BYTE PTR [rax],al
  401ffe:	add    BYTE PTR [rax],al
  402000:	add    BYTE PTR [rbx],cl
  402002:	rex.WRX
  402003:	gs ja  0x40204f
  402006:	outs   dx,BYTE PTR ds:[rsi]
  402007:	jae    0x40207d
  402009:	(bad)  
  40200a:	outs   dx,BYTE PTR ds:[rsi]
  40200b:	movsxd esp,DWORD PTR [rbp+0x3]
  40200e:	add    BYTE PTR [rax],bh
  402010:	and    DWORD PTR [rax+0x0],eax
  402013:	add    BYTE PTR [rax],al
  402015:	add    BYTE PTR [rax],al
  402017:	sbb    BYTE PTR [rax],al
  402019:	add    DWORD PTR [rax],eax
	...
  402023:	add    BYTE PTR [rax],al
  402025:	add    al,0x53
  402027:	gs ins BYTE PTR es:[rdi],dx
  402029:	data16 add al,BYTE PTR [rax]
  40202c:	add    al,BYTE PTR [rax]
  40202e:	cmp    BYTE PTR [rax],al
  402030:	jo     0x402096
  402032:	add    BYTE PTR [rax],al
  402035:	add    BYTE PTR [rax],al
  402037:	add    BYTE PTR [rsi+rax*2],cl
  40203a:	jb     0x4020a1
  40203c:	rex.WB outs dx,BYTE PTR gs:[rsi]
  40203f:	jae    0x4020b5
  402041:	(bad)  
  402042:	outs   dx,BYTE PTR ds:[rsi]
  402043:	movsxd esp,DWORD PTR [rbp+0x3]
	...
  40204e:	add    BYTE PTR [rax],bl
  402050:	add    BYTE PTR [rcx],al
  402052:	or     BYTE PTR [rax],bh
  402054:	and    DWORD PTR [rax+0x0],eax
  402057:	add    BYTE PTR [rax],al
  402059:	add    BYTE PTR [rax],al
  40205b:	add    BYTE PTR [rax],al
  40205d:	add    al,0x53
  40205f:	gs ins BYTE PTR es:[rdi],dx
  402061:	data16 add al,BYTE PTR [rax]
  402064:	add    al,BYTE PTR [rax]
  402066:	xor    eax,DWORD PTR [rax]
  402068:	(bad)  
  402069:	add    BYTE PTR gs:[rax],al
  40206d:	add    BYTE PTR [rax],al
  40206f:	add    BYTE PTR [rdi],al
  402071:	rex.R
  402072:	gs jae 0x4020e9
  402075:	jb     0x4020e6
  402077:	jns    0x40207c
	...
  402081:	add    BYTE PTR [rax],ah
  402083:	add    BYTE PTR [rcx],al
  402085:	or     BYTE PTR [rax],bh
  402087:	and    DWORD PTR [rax+0x0],eax
  40208a:	add    BYTE PTR [rax],al
  40208c:	add    BYTE PTR [rax],al
  40208e:	add    BYTE PTR [rax],al
  402090:	add    al,0x53
  402092:	gs ins BYTE PTR es:[rdi],dx
  402094:	data16 add al,BYTE PTR [rax]
  402097:	add    al,BYTE PTR [rax]
  402099:	xor    eax,0x40649000
  40209e:	add    BYTE PTR [rax],al
  4020a0:	add    BYTE PTR [rax],al
  4020a2:	add    BYTE PTR [rcx],cl
  4020a4:	rex.XB push r8
  4020a6:	push   rax
  4020a7:	pop    rdi
  4020a8:	rex.B
  4020a9:	rex.X
  4020aa:	rex.WB pop r15
  4020ac:	xor    DWORD PTR [rbx],eax
	...
  4020b6:	add    BYTE PTR [rax],bl
  4020b8:	add    BYTE PTR [rcx],al
  4020ba:	or     BYTE PTR [rax],bh
  4020bc:	and    DWORD PTR [rax+0x0],eax
  4020bf:	add    BYTE PTR [rax],al
  4020c1:	add    BYTE PTR [rax],al
  4020c3:	add    BYTE PTR [rax],al
  4020c5:	add    al,0x53
  4020c7:	gs ins BYTE PTR es:[rdi],dx
  4020c9:	data16 add al,BYTE PTR [rax]
  4020cc:	add    al,BYTE PTR [rax]
  4020ce:	xor    eax,0x4064a000
  4020d3:	add    BYTE PTR [rax],al
  4020d5:	add    BYTE PTR [rax],al
  4020d7:	add    BYTE PTR [rcx],cl
  4020d9:	rex.XB push r8
  4020db:	push   rax
  4020dc:	pop    rdi
  4020dd:	rex.B
  4020de:	rex.X
  4020df:	rex.WB pop r15
  4020e1:	xor    al,BYTE PTR [rbx]
	...
  4020eb:	add    BYTE PTR [rax],bl
  4020ed:	add    BYTE PTR [rcx],al
  4020ef:	or     BYTE PTR [rax],bh
  4020f1:	and    DWORD PTR [rax+0x0],eax
  4020f4:	add    BYTE PTR [rax],al
  4020f6:	add    BYTE PTR [rax],al
  4020f8:	add    BYTE PTR [rax],al
  4020fa:	add    al,0x53
  4020fc:	gs ins BYTE PTR es:[rdi],dx
  4020fe:	data16 add al,BYTE PTR [rax]
  402101:	add    al,BYTE PTR [rax]
  402103:	xor    eax,0x4064b000
  402108:	add    BYTE PTR [rax],al
  40210a:	add    BYTE PTR [rax],al
  40210c:	add    BYTE PTR [rcx],cl
  40210e:	rex.XB push r8
  402110:	push   rax
  402111:	pop    rdi
  402112:	rex.B
  402113:	rex.X
  402114:	rex.WB pop r15
  402116:	xor    eax,DWORD PTR [rbx]
	...
  402120:	add    BYTE PTR [rax],bl
  402122:	add    BYTE PTR [rcx],al
  402124:	or     BYTE PTR [rax],bh
  402126:	and    DWORD PTR [rax+0x0],eax
  402129:	add    BYTE PTR [rax],al
  40212b:	add    BYTE PTR [rax],al
  40212d:	add    BYTE PTR [rax],al
  40212f:	add    al,0x53
  402131:	gs ins BYTE PTR es:[rdi],dx
  402133:	data16 add al,BYTE PTR [rax]
  402136:	add    al,BYTE PTR [rax]
  402138:	rex and DWORD PTR [rax+0x0],eax
  40213c:	add    BYTE PTR [rax],al
  40213e:	add    BYTE PTR [rax],al
  402140:	(bad)  
  402141:	(bad)  
  402142:	push   rsp
  402143:	rex.WRXB (bad) 
  402145:	push   0x65
  402147:	movsxd esi,DWORD PTR [rax+riz*8+0x15]
  40214b:	add    BYTE PTR [rax],al
	...
  40215a:	add    BYTE PTR [rsi],al
  40215c:	push   rbx
  40215d:	jns    0x4021d2
  40215f:	je     0x4021c6
  402161:	ins    DWORD PTR es:[rdi],dx
  402162:	add    BYTE PTR [rax],al
  402164:	add    BYTE PTR [rax],al
  402166:	add    al,BYTE PTR [rax]
	...
  402170:	cmp    BYTE PTR [rdx],ah
  402172:	add    BYTE PTR [rax],al
	...
  40218d:	add    BYTE PTR [rax],al
  40218f:	add    BYTE PTR [rax+0x22],bl
  402192:	add    BYTE PTR [rax],al
	...
  40219d:	add    BYTE PTR [rax],al
  40219f:	add    BYTE PTR [rax],bh
  4021a1:	and    al,BYTE PTR [rax+0x0]
	...
  4021b0:	and    al,BYTE PTR ds:[rax+0x0]
  4021b4:	add    BYTE PTR [rax],al
  4021b6:	add    BYTE PTR [rax],al
  4021b8:	adc    BYTE PTR [rax],al
  4021ba:	add    BYTE PTR [rax],al
  4021bc:	add    BYTE PTR [rax],al
  4021be:	add    BYTE PTR [rax],al
  4021c0:	sbb    BYTE PTR [rip+0x40],dl        # 0x402206
  4021c6:	add    BYTE PTR [rax],al
  4021c8:	mov    al,0x66
  4021ca:	add    BYTE PTR [rax],al
  4021cd:	add    BYTE PTR [rax],al
  4021cf:	add    al,al
  4021d1:	data16 add BYTE PTR [rax],al
  4021d5:	add    BYTE PTR [rax],al
  4021d7:	add    BYTE PTR [rax],ah
  4021d9:	push   0x40
  4021de:	add    BYTE PTR [rax],al
  4021e0:	adc    BYTE PTR [rax+0x40],ch
  4021e3:	add    BYTE PTR [rax],al
  4021e5:	add    BYTE PTR [rax],al
  4021e7:	add    BYTE PTR [rax+0x68],dl
  4021ea:	add    BYTE PTR [rax],al
  4021ed:	add    BYTE PTR [rax],al
  4021ef:	add    BYTE PTR [rax+0x68],ah
  4021f2:	add    BYTE PTR [rax],al
  4021f5:	add    BYTE PTR [rax],al
  4021f7:	add    BYTE PTR [rax+0x68],dh
  4021fa:	add    BYTE PTR [rax],al
  4021fd:	add    BYTE PTR [rax],al
  4021ff:	add    BYTE PTR [rax+0x68],al
  402202:	add    BYTE PTR [rax],al
  402205:	add    BYTE PTR [rax],al
  402207:	add    BYTE PTR [rax+0x64],al
  40220a:	add    BYTE PTR [rax],al
  40220d:	add    BYTE PTR [rax],al
  40220f:	add    BYTE PTR [rax+0x64],dh
  402212:	add    BYTE PTR [rax],al
  402215:	add    BYTE PTR [rax],al
  402217:	add    BYTE PTR [rax+0x65],ah
  40221a:	add    BYTE PTR [rax],al
  40221d:	add    BYTE PTR [rax],al
  40221f:	add    BYTE PTR [rax+0x4064],dl
  402225:	add    BYTE PTR [rax],al
  402227:	add    BYTE PTR [rax+0x4064],ah
  40222d:	add    BYTE PTR [rax],al
  40222f:	add    BYTE PTR [rax+0x4064],dh
	...
  40223d:	add    BYTE PTR [rax],dl
  40223f:	push   rsp
  402240:	rex.XB jne 0x4022b6
  402243:	je     0x4022b4
  402245:	ins    DWORD PTR es:[rdi],dx
  402246:	rex.B je 0x4022bd
  402249:	jb     0x4022b4
  40224b:	(bad)  
  40224c:	jne    0x4022c2
  40224e:	add    BYTE PTR gs:[rax+0x22],bl
  402252:	add    BYTE PTR [rax],al
  402255:	add    BYTE PTR [rax],al
  402257:	add    BYTE PTR [rdi],al
  402259:	adc    BYTE PTR [rbx+rax*2+0x75],dl
  40225d:	jae    0x4022d3
  40225f:	outs   dx,DWORD PTR ds:[rsi]
  402260:	ins    DWORD PTR es:[rdi],dx
  402261:	rex.B je 0x4022d8
  402264:	jb     0x4022cf
  402266:	(bad)  
  402267:	jne    0x4022dd
  402269:	cmp    BYTE PTR gs:[rdx],ah
  40226c:	add    BYTE PTR [rax],al
  40226f:	add    BYTE PTR [rax],al
  402271:	add    BYTE PTR [rax],bh
  402273:	and    DWORD PTR [rax+0x0],eax
  402276:	add    BYTE PTR [rax],al
  402278:	add    BYTE PTR [rax],al
  40227a:	add    BYTE PTR [rax],al
  40227c:	(bad)  
  40227d:	push   rbx
  40227e:	jns    0x4022f3
  402280:	je     0x4022e7
  402282:	ins    DWORD PTR es:[rdi],dx
  402283:	add    BYTE PTR [rax],al
  402285:	add    BYTE PTR [rax],al
  402287:	add    al,BYTE PTR [rax]
  402289:	add    BYTE PTR [rax],al
  40228b:	add    BYTE PTR [rax],al
  40228d:	add    BYTE PTR [rax],al
  40228f:	add    BYTE PTR [rax+0x23],bl
  402292:	add    BYTE PTR [rax],al
	...
  4022ad:	add    BYTE PTR [rax],al
  4022af:	add    BYTE PTR [rax+0x23],bh
  4022b2:	add    BYTE PTR [rax],al
	...
  4022bd:	add    BYTE PTR [rax],al
  4022bf:	add    BYTE PTR [rax+0x23],bl
  4022c2:	add    BYTE PTR [rax],al
	...
  4022cd:	add    BYTE PTR [rax],al
  4022cf:	add    BYTE PTR [rsi+0x23],bl
  4022d2:	add    BYTE PTR [rax],al
  4022d5:	add    BYTE PTR [rax],al
  4022d7:	add    BYTE PTR [rax],dl
  4022d9:	add    BYTE PTR [rax],al
  4022db:	add    BYTE PTR [rax],al
  4022dd:	add    BYTE PTR [rax],al
  4022df:	add    BYTE PTR [rax+0x21],dh
  4022e2:	add    BYTE PTR [rax],al
  4022e5:	add    BYTE PTR [rax],al
  4022e7:	add    BYTE PTR [rax+0x4066],dh
  4022ed:	add    BYTE PTR [rax],al
  4022ef:	add    al,al
  4022f1:	data16 add BYTE PTR [rax],al
  4022f5:	add    BYTE PTR [rax],al
  4022f7:	add    BYTE PTR [rax],ah
  4022f9:	push   0x40
  4022fe:	add    BYTE PTR [rax],al
  402300:	adc    BYTE PTR [rax+0x40],ch
  402303:	add    BYTE PTR [rax],al
  402305:	add    BYTE PTR [rax],al
  402307:	add    BYTE PTR [rax+0x68],dl
  40230a:	add    BYTE PTR [rax],al
  40230d:	add    BYTE PTR [rax],al
  40230f:	add    BYTE PTR [rax+0x68],ah
  402312:	add    BYTE PTR [rax],al
  402315:	add    BYTE PTR [rax],al
  402317:	add    BYTE PTR [rax+0x68],dh
  40231a:	add    BYTE PTR [rax],al
  40231d:	add    BYTE PTR [rax],al
  40231f:	add    BYTE PTR [rax+0x68],al
  402322:	add    BYTE PTR [rax],al
  402325:	add    BYTE PTR [rax],al
  402327:	add    BYTE PTR [rax+0x64],al
  40232a:	add    BYTE PTR [rax],al
  40232d:	add    BYTE PTR [rax],al
  40232f:	add    BYTE PTR [rax+0x64],dh
  402332:	add    BYTE PTR [rax],al
  402335:	add    BYTE PTR [rax],al
  402337:	add    BYTE PTR [rax+0x65],ah
  40233a:	add    BYTE PTR [rax],al
  40233d:	add    BYTE PTR [rax],al
  40233f:	add    BYTE PTR [rax+0x4064],dl
  402345:	add    BYTE PTR [rax],al
  402347:	add    BYTE PTR [rax+0x4064],ah
  40234d:	add    BYTE PTR [rax],al
  40234f:	add    BYTE PTR [rax+0x4064],dh
	...
  40235d:	add    BYTE PTR [rcx],dl
  40235f:	push   rsi
  402360:	outs   dx,DWORD PTR ds:[rsi]
  402361:	ins    BYTE PTR es:[rdi],dx
  402362:	(bad)  
  402363:	je     0x4023ce
  402365:	ins    BYTE PTR es:[rdi],dx
  402366:	gs rex.B je 0x4023de
  40236a:	jb     0x4023d5
  40236c:	(bad)  
  40236d:	jne    0x4023e3
  40236f:	gs js  0x402395
  402372:	add    BYTE PTR [rax],al
  402375:	add    BYTE PTR [rax],al
  402377:	add    BYTE PTR [rdi],al
  402379:	adc    DWORD PTR [rsi+0x6f],edx
  40237c:	ins    BYTE PTR es:[rdi],dx
  40237d:	(bad)  
  40237e:	je     0x4023e9
  402380:	ins    BYTE PTR es:[rdi],dx
  402381:	gs rex.B je 0x4023f9
  402385:	jb     0x4023f0
  402387:	(bad)  
  402388:	jne    0x4023fe
  40238a:	gs pop rax
  40238c:	and    eax,DWORD PTR [rax+0x0]
  40238f:	add    BYTE PTR [rax],al
  402391:	add    BYTE PTR [rax],al
  402393:	push   rax
  402394:	and    al,BYTE PTR [rax+0x0]
  402397:	add    BYTE PTR [rax],al
  402399:	add    BYTE PTR [rax],al
  40239b:	add    BYTE PTR [rax],al
  40239d:	(bad)  
  40239e:	push   rbx
  40239f:	jns    0x402414
  4023a1:	je     0x402408
  4023a3:	ins    DWORD PTR es:[rdi],dx
  4023a4:	add    BYTE PTR [rax],al
  4023a6:	add    BYTE PTR [rax],al
  4023a8:	add    al,BYTE PTR [rax]
  4023aa:	add    BYTE PTR [rax],al
  4023ac:	add    BYTE PTR [rax],al
  4023ae:	add    BYTE PTR [rax],al
  4023b0:	mov    eax,0x4023
  4023b5:	add    BYTE PTR [rax],al
  4023b7:	add    BYTE PTR [rax+rcx*1],dl
  4023ba:	push   rax
  4023bb:	rex.WRB outs dx,DWORD PTR ds:[rsi]
  4023bd:	outs   dx,BYTE PTR ds:[rsi]
  4023be:	imul   esi,DWORD PTR [rdi+rbp*2+0x72],0x402508
  4023c6:	add    BYTE PTR [rax],al
  4023c8:	add    BYTE PTR [rax],al
  4023ca:	add    al,BYTE PTR [rax]
  4023cc:	add    BYTE PTR [rax],al
  4023ce:	add    BYTE PTR [rax],al
  4023d0:	fsub   DWORD PTR [rbx]
  4023d2:	add    BYTE PTR [rax],al
  4023d5:	add    BYTE PTR [rax],al
  4023d7:	add    BYTE PTR [rdi+rdx*1],dl
  4023da:	push   rsp
  4023db:	rex.WRB outs dx,DWORD PTR ds:[rsi]
  4023dd:	outs   dx,BYTE PTR ds:[rsi]
  4023de:	imul   esi,DWORD PTR [rdi+rbp*2+0x72],0x6157502e
  4023e6:	imul   esi,DWORD PTR [rcx+rbp*2+0x6e],0x72685467
  4023ee:	gs (bad) 
  4023f0:	add    BYTE PTR fs:[rax+rax*2],ah
  4023f4:	add    BYTE PTR [rax],al
  4023f6:	add    BYTE PTR [rax],al
  4023f8:	add    BYTE PTR [rdx],al
  4023fa:	add    BYTE PTR [rax],al
  4023fc:	add    BYTE PTR [rax],al
  4023fe:	add    BYTE PTR [rax],al
  402400:	or     BYTE PTR [rax+rax*2],ah
  402403:	add    BYTE PTR [rax],al
  402405:	add    BYTE PTR [rax],al
  402407:	add    BYTE PTR [rsi],cl
  402409:	(bad)  
  40240a:	push   rsp
  40240b:	rex.WRB outs dx,DWORD PTR ds:[rsi]
  40240d:	outs   dx,BYTE PTR ds:[rsi]
  40240e:	imul   esi,DWORD PTR [rdi+rbp*2+0x72],0x6157542e
  402416:	imul   esi,DWORD PTR [rcx+rbp*2+0x6e],0x72685467
  40241e:	gs (bad) 
  402420:	sbb    BYTE PTR fs:[rax],al
  402423:	add    BYTE PTR [rax],al
  402425:	add    BYTE PTR [rax],al
  402427:	add    BYTE PTR [rax],al
  402429:	add    BYTE PTR [rbx],al
  40242b:	add    BYTE PTR [rax],al
  40242d:	add    al,dl
  40242f:	and    eax,DWORD PTR [rax+0x0]
	...
  40243e:	add    al,BYTE PTR [rsi+rcx*2]
  402441:	gs js  0x4024b8
  402444:	add    al,BYTE PTR [rax]
  402446:	mov    eax,0x4010
  40244b:	add    BYTE PTR [rax],al
  40244d:	add    BYTE PTR [rax],cl
  40244f:	add    BYTE PTR [rax],al
  402451:	add    BYTE PTR [rax],al
  402453:	add    BYTE PTR [rax],al
  402455:	add    BYTE PTR [rdx],al
  402457:	(bad)  
  402458:	push   rsp
  402459:	push   0x64616572
  40245e:	add    al,BYTE PTR [rax]
  402460:	fcom   DWORD PTR [rax]
  402462:	add    BYTE PTR [rax],al
  402465:	add    BYTE PTR [rax],al
  402467:	add    BYTE PTR [rax],dl
  402469:	add    BYTE PTR [rax],al
  40246b:	add    BYTE PTR [rax],al
  40246d:	add    BYTE PTR [rax],al
  40246f:	add    BYTE PTR [rdx],al
  402471:	or     DWORD PTR [rdi+0x61],edx
  402474:	imul   esi,DWORD PTR [rbp+rax*2+0x76],0x2746e65
  40247c:	add    BYTE PTR [rdx],al
	...
  402486:	add    BYTE PTR [rax],al
  402488:	nop
  402489:	and    al,0x40
  40248b:	add    BYTE PTR [rax],al
  40248d:	add    BYTE PTR [rax],al
  40248f:	add    BYTE PTR [rsi],cl
  402491:	adc    dl,BYTE PTR [rbp+rcx*2+0x6f]
  402495:	outs   dx,BYTE PTR ds:[rsi]
  402496:	imul   esi,DWORD PTR [rdi+rbp*2+0x72],0x7053542e
  40249e:	imul   ebp,DWORD PTR [rsi+0x4c],0x46b636f
	...
  4024ad:	add    DWORD PTR [rax],eax
  4024af:	add    BYTE PTR [rax],al
  4024b1:	pop    rax
  4024b2:	adc    BYTE PTR [rax+0x0],al
	...
  4024c1:	add    BYTE PTR [rip+0x636f4c46],al        # 0x63af710d
  4024c7:	imul   eax,DWORD PTR [rdx],0x0
  4024ca:	add    al,BYTE PTR [rax]
  4024cc:	add    al,BYTE PTR [rax]
  4024ce:	or     BYTE PTR [rax+0x4159],dl
  4024d4:	add    BYTE PTR [rax],al
  4024d6:	add    BYTE PTR [rip+0x65746e45],al        # 0x65b49321
  4024dc:	jb     0x4024de
	...
  4024e6:	add    BYTE PTR [rax],al
  4024e8:	add    al,BYTE PTR [rax]
  4024ea:	or     BYTE PTR [rax+0x4159],dl
  4024f0:	add    BYTE PTR [rax],al
  4024f2:	add    BYTE PTR [rax*2+0x746978],al
	...
  402501:	add    BYTE PTR [rax],al
  402503:	add    al,BYTE PTR [rax]
  402505:	add    BYTE PTR [rax],al
  402507:	add    BYTE PTR [rax],dl
  402509:	and    eax,0x40
  40250e:	add    BYTE PTR [rax],al
  402510:	(bad)  
  402511:	or     BYTE PTR [rbp+rcx*2+0x6f],dl
  402515:	outs   dx,BYTE PTR ds:[rsi]
  402516:	imul   esi,DWORD PTR [rdi+rbp*2+0x72],0x30
  40251e:	add    BYTE PTR [rax],al
  402520:	add    BYTE PTR [rax],al
  402522:	add    BYTE PTR [rdi],al
  402524:	add    BYTE PTR [rax],al
  402526:	add    BYTE PTR [rax+0x10],bl
  402529:	add    BYTE PTR [rax],al
	...
  402538:	or     al,BYTE PTR [rsi+0x4c]
  40253b:	outs   dx,DWORD PTR ds:[rsi]
  40253c:	movsxd ebp,DWORD PTR [rbx+0x43]
  40253f:	outs   dx,DWORD PTR ds:[rsi]
  402540:	jne    0x4025b0
  402542:	je     0x402558
  402544:	add    BYTE PTR [rax+0x23],dh
  402547:	add    BYTE PTR [rax],al
  40254a:	add    BYTE PTR [rax],al
  40254c:	add    al,dl
  40254e:	add    BYTE PTR fs:[rax],al
  402552:	add    BYTE PTR [rax],al
  402554:	add    BYTE PTR [rax],al
  402556:	add    BYTE PTR [rax+0x10],bl
  402559:	add    BYTE PTR [rax],al
  40255c:	add    BYTE PTR [rax],al
  40255e:	add    BYTE PTR [rax+rax*1],al
  402561:	add    BYTE PTR [rax],al
  402563:	add    BYTE PTR [rax],al
  402565:	add    BYTE PTR [rax],al
  402567:	add    BYTE PTR [rdi],cl
  402569:	rex.RX push rdx
  40256b:	movsxd esi,DWORD PTR gs:[rbp+0x72]
  40256f:	jae    0x4025da
  402571:	outs   dx,DWORD PTR ds:[rsi]
  402572:	outs   dx,BYTE PTR ds:[rsi]
  402573:	rex.XB outs dx,DWORD PTR ds:[rsi]
  402575:	jne    0x4025e5
  402577:	je     0x40257b
  402579:	add    BYTE PTR [rax+0x4010],bh
  40257f:	add    BYTE PTR [rax],al
  402581:	add    BYTE PTR [rax],cl
	...
  40258b:	or     eax,0x6e774f46
  402590:	imul   ebp,DWORD PTR [rsi+0x67],0x65726854
  402597:	(bad)  
  402598:	add    al,BYTE PTR fs:[rax]
  40259b:	fcom   DWORD PTR [rax]
  40259d:	add    BYTE PTR [rax],al
  4025a0:	add    BYTE PTR [rax],al
  4025a2:	add    BYTE PTR [rax],dl
	...
  4025ac:	or     al,BYTE PTR [rsi+0x4c]
  4025af:	outs   dx,DWORD PTR ds:[rsi]
  4025b0:	movsxd ebp,DWORD PTR [rbx+0x45]
  4025b3:	jbe    0x40261a
  4025b5:	outs   dx,BYTE PTR ds:[rsi]
  4025b6:	je     0x4025ba
  4025b8:	add    BYTE PTR [rax+0x10],bl
  4025bb:	add    BYTE PTR [rax],al
  4025be:	add    BYTE PTR [rax],al
  4025c0:	add    BYTE PTR [rax],bl
	...
  4025ca:	or     al,BYTE PTR [rsi+0x53]
  4025cd:	jo     0x402638
  4025cf:	outs   dx,BYTE PTR ds:[rsi]
  4025d0:	rex.XB outs dx,DWORD PTR ds:[rsi]
  4025d2:	jne    0x402642
  4025d4:	je     0x4025d8
  4025d6:	add    al,dl
  4025d8:	and    eax,DWORD PTR [rax+0x0]
  4025db:	add    BYTE PTR [rax],al
  4025dd:	add    BYTE PTR [rax],al
  4025df:	and    BYTE PTR [rax],al
  4025e1:	add    BYTE PTR [rax],al
  4025e3:	add    BYTE PTR [rax],al
  4025e5:	add    BYTE PTR [rax],al
  4025e7:	add    BYTE PTR [rdx],cl
  4025e9:	rex.RX push rdi
  4025eb:	(bad)  
  4025ec:	imul   esi,DWORD PTR [rcx+rdx*2+0x75],0x2657565
  4025f4:	add    BYTE PTR [rax+0x4024],cl
  4025fa:	add    BYTE PTR [rax],al
  4025fc:	add    BYTE PTR [rax],ch
	...
  402606:	or     al,BYTE PTR [rsi+0x51]
  402609:	jne    0x402670
  40260b:	jne    0x402672
  40260d:	rex.WR outs dx,DWORD PTR ds:[rsi]
  40260f:	movsxd ebp,DWORD PTR [rbx+0x2]
  402612:	add    BYTE PTR [rdx],al
  402614:	add    BYTE PTR [rcx],cl
  402616:	add    BYTE PTR [rcx],cl
  402618:	nop
  402619:	pop    rcx
  40261a:	add    BYTE PTR [r8],al
  40261d:	add    BYTE PTR [rax],al
  40261f:	add    BYTE PTR [rbx+rdx*2],cl
  402622:	gs je  0x402678
  402625:	jo     0x402690
  402627:	outs   dx,BYTE PTR ds:[rsi]
  402628:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40262a:	jne    0x40269a
  40262c:	je     0x40262e
	...
  402636:	add    BYTE PTR [rdx],al
  402638:	or     bh,BYTE PTR [rax]
  40263a:	and    DWORD PTR [rax+0x0],eax
  40263d:	add    BYTE PTR [rax],al
  40263f:	add    BYTE PTR [rax],al
  402641:	(bad)  
  402642:	rex.B
  402643:	rex.WRXB (bad) 
  402645:	push   0x65
  402647:	movsxd esi,DWORD PTR [rdx+rax*1+0x0]
  40264b:	add    BYTE PTR [rax+0x10],bl
  40264e:	add    BYTE PTR [rax],al
  402651:	add    BYTE PTR [rax],al
  402653:	add    BYTE PTR [rdx],cl
  402655:	push   r11
  402657:	jo     0x4026c2
  402659:	outs   dx,BYTE PTR ds:[rsi]
  40265a:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40265c:	jne    0x4026cc
  40265e:	je     0x402662
  402660:	add    BYTE PTR [rdx],al
  402662:	add    BYTE PTR [rcx],cl
  402664:	nop
  402665:	pop    rcx
  402666:	add    BYTE PTR [r8],al
  402669:	add    BYTE PTR [rax],al
  40266b:	add    BYTE PTR [rip+0x65746e45],al        # 0x65b494b6
  402671:	jb     0x402673
	...
  40267b:	add    BYTE PTR [rcx],al
  40267d:	or     bh,BYTE PTR [rax]
  40267f:	and    DWORD PTR [rax+0x0],eax
  402682:	add    BYTE PTR [rax],al
  402684:	add    BYTE PTR [rax],al
  402686:	(bad)  
  402687:	rex.B
  402688:	rex.WRXB (bad) 
  40268a:	push   0x65
  40268c:	movsxd esi,DWORD PTR [rdx+rax*1+0x0]
  402690:	add    al,BYTE PTR [rax]
  402692:	or     DWORD PTR [rax+0x4159],edx
  402698:	add    BYTE PTR [rax],al
  40269a:	add    BYTE PTR [rip+0x65746e45],al        # 0x65b494e5
  4026a0:	jb     0x4026a2
  4026a2:	add    BYTE PTR [rax],al
  4026a4:	adc    BYTE PTR [rax+0x0],al
  4026a7:	add    BYTE PTR [rax],al
  4026a9:	add    BYTE PTR [rax],al
  4026ab:	add    cl,BYTE PTR [rdx]
  4026ad:	cmp    BYTE PTR [rcx],ah
  4026af:	add    BYTE PTR [rax],al
  4026b2:	add    BYTE PTR [rax],al
  4026b4:	add    BYTE PTR [rdi],al
  4026b6:	rex.B
  4026b7:	rex.WRXB (bad) 
  4026b9:	push   0x65
  4026bb:	movsxd esi,DWORD PTR [rdx+rax*1+0x0]
  4026bf:	add    BYTE PTR [rax+0x4010],bh
  4026c5:	add    BYTE PTR [rax],al
  4026c7:	add    BYTE PTR [rdi],al
  4026c9:	push   rsp
  4026ca:	imul   ebp,DWORD PTR [rbp+0x65],0x274756f
  4026d1:	add    BYTE PTR [rdx],al
  4026d3:	add    BYTE PTR [rcx],cl
  4026d5:	nop
  4026d6:	pop    rcx
  4026d7:	add    BYTE PTR [r8],al
  4026da:	add    BYTE PTR [rax],al
  4026dc:	add    BYTE PTR [rax*2+0x746978],al
	...
  4026eb:	add    BYTE PTR [rcx],al
  4026ed:	or     bh,BYTE PTR [rax]
  4026ef:	and    DWORD PTR [rax+0x0],eax
  4026f2:	add    BYTE PTR [rax],al
  4026f4:	add    BYTE PTR [rax],al
  4026f6:	(bad)  
  4026f7:	rex.B
  4026f8:	rex.WRXB (bad) 
  4026fa:	push   0x65
  4026fc:	movsxd esi,DWORD PTR [rdx+rax*1+0x0]
  402700:	add    al,BYTE PTR [rax]
  402702:	or     DWORD PTR [rax+0x4159],edx
  402708:	add    BYTE PTR [rax],al
  40270a:	add    BYTE PTR [rax],cl
  40270c:	push   rsp
  40270d:	jb     0x402788
  40270f:	rex.RB outs dx,BYTE PTR ds:[rsi]
  402711:	je     0x402778
  402713:	jb     0x402715
  402715:	add    BYTE PTR [rax],al
  402717:	adc    BYTE PTR [rax+0x0],al
  40271a:	add    BYTE PTR [rax],al
  40271c:	add    BYTE PTR [rax],al
  40271e:	add    DWORD PTR [rdx],ecx
  402720:	cmp    BYTE PTR [rcx],ah
  402722:	add    BYTE PTR [rax],al
  402725:	add    BYTE PTR [rax],al
  402727:	add    BYTE PTR [rdi],al
  402729:	rex.B
  40272a:	rex.WRXB (bad) 
  40272c:	push   0x65
  40272e:	movsxd esi,DWORD PTR [rdx+rax*1+0x0]
  402732:	add    al,BYTE PTR [rax]
  402734:	or     DWORD PTR [rax+0x4159],edx
  40273a:	add    BYTE PTR [rax],al
  40273c:	add    BYTE PTR [rdi+rdx*2],al
  40273f:	(bad)  
  402740:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x401000
  402748:	add    BYTE PTR [rax],al
  40274a:	add    BYTE PTR [rax],al
  40274c:	add    cl,BYTE PTR [rdx]
  40274e:	cmp    BYTE PTR [rcx],ah
  402750:	add    BYTE PTR [rax],al
  402753:	add    BYTE PTR [rax],al
  402755:	add    BYTE PTR [rdi],al
  402757:	rex.B
  402758:	rex.WRXB (bad) 
  40275a:	push   0x65
  40275c:	movsxd esi,DWORD PTR [rdx+rax*1+0x0]
  402760:	add    BYTE PTR [rax+0x4010],bh
  402766:	add    BYTE PTR [rax],al
  402768:	add    BYTE PTR [rdi],al
  40276a:	push   rsp
  40276b:	imul   ebp,DWORD PTR [rbp+0x65],0x274756f
  402772:	add    BYTE PTR [rdx],al
  402774:	add    BYTE PTR [rcx],cl
  402776:	nop
  402777:	pop    rcx
  402778:	add    BYTE PTR [r8],al
  40277b:	add    BYTE PTR [rax],al
  40277d:	add    BYTE PTR [rdi+rdx*2],al
  402780:	(bad)  
  402781:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x401000
  402789:	add    BYTE PTR [rax],al
  40278b:	add    BYTE PTR [rax],al
  40278d:	add    ecx,DWORD PTR [rdx]
  40278f:	cmp    BYTE PTR [rcx],ah
  402791:	add    BYTE PTR [rax],al
  402794:	add    BYTE PTR [rax],al
  402796:	add    BYTE PTR [rdi],al
  402798:	rex.B
  402799:	rex.WRXB (bad) 
  40279b:	push   0x65
  40279d:	movsxd esi,DWORD PTR [rdx+rax*1+0x0]
  4027a1:	or     bh,BYTE PTR [rax]
  4027a3:	and    DWORD PTR [rax+0x0],eax
  4027a6:	add    BYTE PTR [rax],al
  4027a8:	add    BYTE PTR [rax],al
  4027aa:	add    eax,0x636f4c41
  4027af:	imul   eax,DWORD PTR [rdx],0x0
  4027b2:	add    BYTE PTR [rax+0x4010],bh
  4027b8:	add    BYTE PTR [rax],al
  4027ba:	add    BYTE PTR [rdi],al
  4027bc:	push   rsp
  4027bd:	imul   ebp,DWORD PTR [rbp+0x65],0x274756f
  4027c4:	add    BYTE PTR [rdx],al
  4027c6:	add    BYTE PTR [rcx],cl
  4027c8:	nop
  4027c9:	pop    rcx
  4027ca:	add    BYTE PTR [r8],al
  4027cd:	add    BYTE PTR [rax],al
  4027cf:	add    BYTE PTR [rip+0x736c7550],al        # 0x73ac9d25
  4027d5:	add    BYTE PTR gs:[rax],al
	...
  4027e0:	add    DWORD PTR [rdx],ecx
  4027e2:	cmp    BYTE PTR [rcx],ah
  4027e4:	add    BYTE PTR [rax],al
  4027e7:	add    BYTE PTR [rax],al
  4027e9:	add    BYTE PTR [rdi],al
  4027eb:	rex.B
  4027ec:	rex.WRXB (bad) 
  4027ee:	push   0x65
  4027f0:	movsxd esi,DWORD PTR [rdx+rax*1+0x0]
  4027f4:	add    al,BYTE PTR [rax]
  4027f6:	or     DWORD PTR [rax+0x4159],edx
  4027fc:	add    BYTE PTR [rax],al
  4027fe:	add    BYTE PTR [rax],cl
  402800:	push   rax
  402801:	jne    0x40286f
  402803:	jae    0x40286a
  402805:	rex.B ins BYTE PTR es:[rdi],dx
  402807:	ins    BYTE PTR es:[rdi],dx
	...
  402810:	add    BYTE PTR [rax],al
  402812:	add    DWORD PTR [rdx],ecx
  402814:	cmp    BYTE PTR [rcx],ah
  402816:	add    BYTE PTR [rax],al
  402819:	add    BYTE PTR [rax],al
  40281b:	add    BYTE PTR [rdi],al
  40281d:	rex.B
  40281e:	rex.WRXB (bad) 
  402820:	push   0x65
  402822:	movsxd esi,DWORD PTR [rdx+rax*1+0x0]
  402826:	add    al,BYTE PTR [rax]
  402828:	xor    BYTE PTR [rax],ch
  40282a:	add    BYTE PTR [rax],al
  40282d:	add    BYTE PTR [rax],al
  40282f:	add    BYTE PTR [rdi],cl
  402831:	or     cl,BYTE PTR [rcx+0x49]
  402834:	outs   dx,BYTE PTR ds:[rsi]
  402835:	je     0x40289c
  402837:	jb     0x40289f
  402839:	(bad)  
  40283a:	movsxd esp,DWORD PTR [rbp+0x0]
  40283d:	add    BYTE PTR [rax],al
  40283f:	add    BYTE PTR [rax],al
  402841:	add    BYTE PTR [rax],al
  402843:	add    BYTE PTR [rcx],al
	...
  40284d:	rol    BYTE PTR [rax],0x0
  402850:	add    BYTE PTR [rax],al
  402852:	add    BYTE PTR [rax],al
  402854:	rex.RX (bad) 
  402856:	push   rbx
  402857:	jns    0x4028cc
  402859:	je     0x4028c0
  40285b:	ins    DWORD PTR es:[rdi],dx
  40285c:	add    eax,DWORD PTR [rax]
  40285e:	(bad)  
  40285f:	inc    DWORD PTR [rdx]
  402861:	add    BYTE PTR [rax],al
  402863:	add    BYTE PTR [rax],al
  402865:	add    BYTE PTR [rax],al
  402867:	add    BYTE PTR [rax+0x28],dh
  40286a:	add    BYTE PTR [rax],al
  40286d:	add    BYTE PTR [rax],al
  40286f:	add    BYTE PTR [rax+rcx*1],dl
  402872:	push   rax
  402873:	push   rax
  402874:	outs   dx,DWORD PTR ds:[rsi]
  402875:	imul   ebp,DWORD PTR [rsi+0x74],0x10d87265
  40287c:	add    BYTE PTR [rax],al
  40287f:	add    BYTE PTR [rax],al
  402881:	add    BYTE PTR [rdx],al
  402883:	add    ah,cl
  402885:	int3   
  402886:	int3   
  402887:	int3   
  402888:	int3   
  402889:	int3   
  40288a:	int3   
  40288b:	int3   
  40288c:	int3   
  40288d:	int3   
  40288e:	int3   
  40288f:	int3   
  402890:	jmp    QWORD PTR [rip+0x1bd4a]        # 0x41e5e0
  402896:	int3   
  402897:	int3   
  402898:	int3   
  402899:	int3   
  40289a:	int3   
  40289b:	int3   
  40289c:	int3   
  40289d:	int3   
  40289e:	int3   
  40289f:	int3   
  4028a0:	jmp    QWORD PTR [rip+0x1bd32]        # 0x41e5d8
  4028a6:	int3   
  4028a7:	int3   
  4028a8:	int3   
  4028a9:	int3   
  4028aa:	int3   
  4028ab:	int3   
  4028ac:	int3   
  4028ad:	int3   
  4028ae:	int3   
  4028af:	int3   
  4028b0:	jmp    QWORD PTR [rip+0x1bd1a]        # 0x41e5d0
  4028b6:	int3   
  4028b7:	int3   
  4028b8:	int3   
  4028b9:	int3   
  4028ba:	int3   
  4028bb:	int3   
  4028bc:	int3   
  4028bd:	int3   
  4028be:	int3   
  4028bf:	int3   
  4028c0:	jmp    QWORD PTR [rip+0x1bd02]        # 0x41e5c8
  4028c6:	int3   
  4028c7:	int3   
  4028c8:	int3   
  4028c9:	int3   
  4028ca:	int3   
  4028cb:	int3   
  4028cc:	int3   
  4028cd:	int3   
  4028ce:	int3   
  4028cf:	int3   
  4028d0:	jmp    QWORD PTR [rip+0x1bcea]        # 0x41e5c0
  4028d6:	int3   
  4028d7:	int3   
  4028d8:	int3   
  4028d9:	int3   
  4028da:	int3   
  4028db:	int3   
  4028dc:	int3   
  4028dd:	int3   
  4028de:	int3   
  4028df:	int3   
  4028e0:	jmp    QWORD PTR [rip+0x1bcd2]        # 0x41e5b8
  4028e6:	int3   
  4028e7:	int3   
  4028e8:	int3   
  4028e9:	int3   
  4028ea:	int3   
  4028eb:	int3   
  4028ec:	int3   
  4028ed:	int3   
  4028ee:	int3   
  4028ef:	int3   
  4028f0:	jmp    QWORD PTR [rip+0x1bcba]        # 0x41e5b0
  4028f6:	int3   
  4028f7:	int3   
  4028f8:	int3   
  4028f9:	int3   
  4028fa:	int3   
  4028fb:	int3   
  4028fc:	int3   
  4028fd:	int3   
  4028fe:	int3   
  4028ff:	int3   
  402900:	jmp    QWORD PTR [rip+0x1bca2]        # 0x41e5a8
  402906:	int3   
  402907:	int3   
  402908:	int3   
  402909:	int3   
  40290a:	int3   
  40290b:	int3   
  40290c:	int3   
  40290d:	int3   
  40290e:	int3   
  40290f:	int3   
  402910:	jmp    QWORD PTR [rip+0x1bc8a]        # 0x41e5a0
  402916:	int3   
  402917:	int3   
  402918:	int3   
  402919:	int3   
  40291a:	int3   
  40291b:	int3   
  40291c:	int3   
  40291d:	int3   
  40291e:	int3   
  40291f:	int3   
  402920:	jmp    QWORD PTR [rip+0x1bc72]        # 0x41e598
  402926:	int3   
  402927:	int3   
  402928:	int3   
  402929:	int3   
  40292a:	int3   
  40292b:	int3   
  40292c:	int3   
  40292d:	int3   
  40292e:	int3   
  40292f:	int3   
  402930:	jmp    QWORD PTR [rip+0x1bc5a]        # 0x41e590
  402936:	int3   
  402937:	int3   
  402938:	int3   
  402939:	int3   
  40293a:	int3   
  40293b:	int3   
  40293c:	int3   
  40293d:	int3   
  40293e:	int3   
  40293f:	int3   
  402940:	jmp    QWORD PTR [rip+0x1bc42]        # 0x41e588
  402946:	int3   
  402947:	int3   
  402948:	int3   
  402949:	int3   
  40294a:	int3   
  40294b:	int3   
  40294c:	int3   
  40294d:	int3   
  40294e:	int3   
  40294f:	int3   
  402950:	jmp    QWORD PTR [rip+0x1bc2a]        # 0x41e580
  402956:	int3   
  402957:	int3   
  402958:	int3   
  402959:	int3   
  40295a:	int3   
  40295b:	int3   
  40295c:	int3   
  40295d:	int3   
  40295e:	int3   
  40295f:	int3   
  402960:	jmp    QWORD PTR [rip+0x1bc12]        # 0x41e578
  402966:	int3   
  402967:	int3   
  402968:	int3   
  402969:	int3   
  40296a:	int3   
  40296b:	int3   
  40296c:	int3   
  40296d:	int3   
  40296e:	int3   
  40296f:	int3   
  402970:	jmp    QWORD PTR [rip+0x1bbfa]        # 0x41e570
  402976:	int3   
  402977:	int3   
  402978:	int3   
  402979:	int3   
  40297a:	int3   
  40297b:	int3   
  40297c:	int3   
  40297d:	int3   
  40297e:	int3   
  40297f:	int3   
  402980:	jmp    QWORD PTR [rip+0x1bbe2]        # 0x41e568
  402986:	int3   
  402987:	int3   
  402988:	int3   
  402989:	int3   
  40298a:	int3   
  40298b:	int3   
  40298c:	int3   
  40298d:	int3   
  40298e:	int3   
  40298f:	int3   
  402990:	jmp    QWORD PTR [rip+0x1bbca]        # 0x41e560
  402996:	int3   
  402997:	int3   
  402998:	int3   
  402999:	int3   
  40299a:	int3   
  40299b:	int3   
  40299c:	int3   
  40299d:	int3   
  40299e:	int3   
  40299f:	int3   
  4029a0:	jmp    QWORD PTR [rip+0x1bbb2]        # 0x41e558
  4029a6:	int3   
  4029a7:	int3   
  4029a8:	int3   
  4029a9:	int3   
  4029aa:	int3   
  4029ab:	int3   
  4029ac:	int3   
  4029ad:	int3   
  4029ae:	int3   
  4029af:	int3   
  4029b0:	jmp    QWORD PTR [rip+0x1bb9a]        # 0x41e550
  4029b6:	int3   
  4029b7:	int3   
  4029b8:	int3   
  4029b9:	int3   
  4029ba:	int3   
  4029bb:	int3   
  4029bc:	int3   
  4029bd:	int3   
  4029be:	int3   
  4029bf:	int3   
  4029c0:	jmp    QWORD PTR [rip+0x1bb82]        # 0x41e548
  4029c6:	int3   
  4029c7:	int3   
  4029c8:	int3   
  4029c9:	int3   
  4029ca:	int3   
  4029cb:	int3   
  4029cc:	int3   
  4029cd:	int3   
  4029ce:	int3   
  4029cf:	int3   
  4029d0:	jmp    QWORD PTR [rip+0x1bb6a]        # 0x41e540
  4029d6:	int3   
  4029d7:	int3   
  4029d8:	int3   
  4029d9:	int3   
  4029da:	int3   
  4029db:	int3   
  4029dc:	int3   
  4029dd:	int3   
  4029de:	int3   
  4029df:	int3   
  4029e0:	jmp    QWORD PTR [rip+0x1bb52]        # 0x41e538
  4029e6:	int3   
  4029e7:	int3   
  4029e8:	int3   
  4029e9:	int3   
  4029ea:	int3   
  4029eb:	int3   
  4029ec:	int3   
  4029ed:	int3   
  4029ee:	int3   
  4029ef:	int3   
  4029f0:	jmp    QWORD PTR [rip+0x1bb3a]        # 0x41e530
  4029f6:	int3   
  4029f7:	int3   
  4029f8:	int3   
  4029f9:	int3   
  4029fa:	int3   
  4029fb:	int3   
  4029fc:	int3   
  4029fd:	int3   
  4029fe:	int3   
  4029ff:	int3   
  402a00:	jmp    QWORD PTR [rip+0x1bb22]        # 0x41e528
  402a06:	int3   
  402a07:	int3   
  402a08:	int3   
  402a09:	int3   
  402a0a:	int3   
  402a0b:	int3   
  402a0c:	int3   
  402a0d:	int3   
  402a0e:	int3   
  402a0f:	int3   
  402a10:	jmp    QWORD PTR [rip+0x1bb0a]        # 0x41e520
  402a16:	int3   
  402a17:	int3   
  402a18:	int3   
  402a19:	int3   
  402a1a:	int3   
  402a1b:	int3   
  402a1c:	int3   
  402a1d:	int3   
  402a1e:	int3   
  402a1f:	int3   
  402a20:	jmp    QWORD PTR [rip+0x1baf2]        # 0x41e518
  402a26:	int3   
  402a27:	int3   
  402a28:	int3   
  402a29:	int3   
  402a2a:	int3   
  402a2b:	int3   
  402a2c:	int3   
  402a2d:	int3   
  402a2e:	int3   
  402a2f:	int3   
  402a30:	jmp    QWORD PTR [rip+0x1bada]        # 0x41e510
  402a36:	int3   
  402a37:	int3   
  402a38:	int3   
  402a39:	int3   
  402a3a:	int3   
  402a3b:	int3   
  402a3c:	int3   
  402a3d:	int3   
  402a3e:	int3   
  402a3f:	int3   
  402a40:	jmp    QWORD PTR [rip+0x1bac2]        # 0x41e508
  402a46:	int3   
  402a47:	int3   
  402a48:	int3   
  402a49:	int3   
  402a4a:	int3   
  402a4b:	int3   
  402a4c:	int3   
  402a4d:	int3   
  402a4e:	int3   
  402a4f:	int3   
  402a50:	jmp    QWORD PTR [rip+0x1baaa]        # 0x41e500
  402a56:	int3   
  402a57:	int3   
  402a58:	int3   
  402a59:	int3   
  402a5a:	int3   
  402a5b:	int3   
  402a5c:	int3   
  402a5d:	int3   
  402a5e:	int3   
  402a5f:	int3   
  402a60:	jmp    QWORD PTR [rip+0x1ba92]        # 0x41e4f8
  402a66:	int3   
  402a67:	int3   
  402a68:	int3   
  402a69:	int3   
  402a6a:	int3   
  402a6b:	int3   
  402a6c:	int3   
  402a6d:	int3   
  402a6e:	int3   
  402a6f:	int3   
  402a70:	jmp    QWORD PTR [rip+0x1ba7a]        # 0x41e4f0
  402a76:	int3   
  402a77:	int3   
  402a78:	int3   
  402a79:	int3   
  402a7a:	int3   
  402a7b:	int3   
  402a7c:	int3   
  402a7d:	int3   
  402a7e:	int3   
  402a7f:	int3   
  402a80:	jmp    QWORD PTR [rip+0x1ba62]        # 0x41e4e8
  402a86:	int3   
  402a87:	int3   
  402a88:	int3   
  402a89:	int3   
  402a8a:	int3   
  402a8b:	int3   
  402a8c:	int3   
  402a8d:	int3   
  402a8e:	int3   
  402a8f:	int3   
  402a90:	push   rcx
  402a91:	lea    rcx,[rip+0x1d568]        # 0x420000
  402a98:	push   r8
  402a9a:	push   r9
  402a9c:	sub    rsp,0x68
  402aa0:	movapd XMMWORD PTR [rsp+0x20],xmm0
  402aa6:	movapd XMMWORD PTR [rsp+0x30],xmm1
  402aac:	movapd XMMWORD PTR [rsp+0x40],xmm2
  402ab2:	movapd XMMWORD PTR [rsp+0x50],xmm3
  402ab8:	call   0x40b4f0
  402abd:	movapd xmm3,XMMWORD PTR [rsp+0x50]
  402ac3:	movapd xmm2,XMMWORD PTR [rsp+0x40]
  402ac9:	movapd xmm1,XMMWORD PTR [rsp+0x30]
  402acf:	movapd xmm0,XMMWORD PTR [rsp+0x20]
  402ad5:	add    rsp,0x68
  402ad9:	pop    r9
  402adb:	pop    r8
  402add:	pop    rcx
  402ade:	pop    rdx
  402adf:	jmp    rax
  402ae1:	int3   
  402ae2:	int3   
  402ae3:	int3   
  402ae4:	int3   
  402ae5:	int3   
  402ae6:	int3   
  402ae7:	int3   
  402ae8:	int3   
  402ae9:	int3   
  402aea:	int3   
  402aeb:	int3   
  402aec:	int3   
  402aed:	int3   
  402aee:	int3   
  402aef:	int3   
  402af0:	push   rdx
  402af1:	lea    rdx,[rip+0x1d580]        # 0x420078
  402af8:	jmp    0x402a90
  402afd:	int3   
  402afe:	int3   
  402aff:	int3   
  402b00:	jmp    QWORD PTR [rip+0x1d572]        # 0x420078
  402b06:	nop
  402b07:	nop
  402b08:	int3   
  402b09:	int3   
  402b0a:	int3   
  402b0b:	int3   
  402b0c:	int3   
  402b0d:	int3   
  402b0e:	int3   
  402b0f:	int3   
  402b10:	jmp    QWORD PTR [rip+0x1b9ca]        # 0x41e4e0
  402b16:	int3   
  402b17:	int3   
  402b18:	int3   
  402b19:	int3   
  402b1a:	int3   
  402b1b:	int3   
  402b1c:	int3   
  402b1d:	int3   
  402b1e:	int3   
  402b1f:	int3   
  402b20:	jmp    QWORD PTR [rip+0x1b9b2]        # 0x41e4d8
  402b26:	int3   
  402b27:	int3   
  402b28:	int3   
  402b29:	int3   
  402b2a:	int3   
  402b2b:	int3   
  402b2c:	int3   
  402b2d:	int3   
  402b2e:	int3   
  402b2f:	int3   
  402b30:	jmp    QWORD PTR [rip+0x1b99a]        # 0x41e4d0
  402b36:	int3   
  402b37:	int3   
  402b38:	int3   
  402b39:	int3   
  402b3a:	int3   
  402b3b:	int3   
  402b3c:	int3   
  402b3d:	int3   
  402b3e:	int3   
  402b3f:	int3   
  402b40:	jmp    QWORD PTR [rip+0x1b982]        # 0x41e4c8
  402b46:	int3   
  402b47:	int3   
  402b48:	int3   
  402b49:	int3   
  402b4a:	int3   
  402b4b:	int3   
  402b4c:	int3   
  402b4d:	int3   
  402b4e:	int3   
  402b4f:	int3   
  402b50:	jmp    QWORD PTR [rip+0x1b94a]        # 0x41e4a0
  402b56:	int3   
  402b57:	int3   
  402b58:	int3   
  402b59:	int3   
  402b5a:	int3   
  402b5b:	int3   
  402b5c:	int3   
  402b5d:	int3   
  402b5e:	int3   
  402b5f:	int3   
  402b60:	jmp    QWORD PTR [rip+0x1b932]        # 0x41e498
  402b66:	int3   
  402b67:	int3   
  402b68:	int3   
  402b69:	int3   
  402b6a:	int3   
  402b6b:	int3   
  402b6c:	int3   
  402b6d:	int3   
  402b6e:	int3   
  402b6f:	int3   
  402b70:	jmp    QWORD PTR [rip+0x1b91a]        # 0x41e490
  402b76:	int3   
  402b77:	int3   
  402b78:	int3   
  402b79:	int3   
  402b7a:	int3   
  402b7b:	int3   
  402b7c:	int3   
  402b7d:	int3   
  402b7e:	int3   
  402b7f:	int3   
  402b80:	push   rbx
  402b81:	sub    rsp,0x90
  402b88:	mov    ebx,0xa
  402b8e:	mov    DWORD PTR [rsp+0x28],0x68
  402b96:	lea    rcx,[rsp+0x28]
  402b9b:	call   0x402a10
  402ba0:	mov    eax,DWORD PTR [rsp+0x64]
  402ba4:	test   eax,0x1
  402baa:	je     0x402bb1
  402bac:	movzx  ebx,WORD PTR [rsp+0x68]
  402bb1:	mov    eax,ebx
  402bb3:	add    rsp,0x90
  402bba:	pop    rbx
  402bbb:	ret    
  402bbc:	int3   
  402bbd:	int3   
  402bbe:	int3   
  402bbf:	int3   
  402bc0:	jmp    QWORD PTR [rip+0x1b8fa]        # 0x41e4c0
  402bc6:	int3   
  402bc7:	int3   
  402bc8:	int3   
  402bc9:	int3   
  402bca:	int3   
  402bcb:	int3   
  402bcc:	int3   
  402bcd:	int3   
  402bce:	int3   
  402bcf:	int3   
  402bd0:	jmp    QWORD PTR [rip+0x1b8e2]        # 0x41e4b8
  402bd6:	int3   
  402bd7:	int3   
  402bd8:	int3   
  402bd9:	int3   
  402bda:	int3   
  402bdb:	int3   
  402bdc:	int3   
  402bdd:	int3   
  402bde:	int3   
  402bdf:	int3   
  402be0:	jmp    QWORD PTR [rip+0x1b8ca]        # 0x41e4b0
  402be6:	int3   
  402be7:	int3   
  402be8:	int3   
  402be9:	int3   
  402bea:	int3   
  402beb:	int3   
  402bec:	int3   
  402bed:	int3   
  402bee:	int3   
  402bef:	int3   
  402bf0:	jmp    QWORD PTR [rip+0x1b9aa]        # 0x41e5a0
  402bf6:	rex.B outs dx,BYTE PTR ds:[rsi]
  402bf8:	and    BYTE PTR [rbp+0x6e],dh
  402bfb:	gs js  0x402c6e
  402bfe:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  402c03:	and    BYTE PTR [rbp+0x65],ch
  402c06:	ins    DWORD PTR es:[rdi],dx
  402c07:	outs   dx,DWORD PTR ds:[rsi]
  402c08:	jb     0x402c83
  402c0a:	and    BYTE PTR [rbp+riz*2+0x61],ch
  402c0e:	imul   esp,DWORD PTR [rax],0x68
  402c11:	(bad)  
  402c12:	jae    0x402c34
  402c14:	outs   dx,DWORD PTR ds:[rsi]
  402c15:	movsxd esp,DWORD PTR [rbx+0x75]
  402c18:	jb     0x402c8c
  402c1a:	gs fs and BYTE PTR cs:[rax],al
  402c1f:	push   rsp
  402c20:	push   0x6e752065
  402c25:	gs js  0x402c98
  402c28:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  402c2d:	and    BYTE PTR [rbx+0x6d],dh
  402c30:	(bad)  
  402c31:	ins    BYTE PTR es:[rdi],dx
  402c32:	ins    BYTE PTR es:[rdi],dx
  402c33:	and    BYTE PTR [rdx+0x6c],ah
  402c36:	outs   dx,DWORD PTR ds:[rsi]
  402c37:	movsxd ebp,DWORD PTR [rbx+0x20]
  402c3a:	ins    BYTE PTR es:[rdi],dx
  402c3b:	gs (bad) 
  402c3d:	imul   esi,DWORD PTR [rbx+0x20],0x61
  402c41:	jb     0x402ca8
  402c43:	cmp    cl,BYTE PTR [rip+0x6854000a]        # 0x68942c53
  402c49:	and    BYTE PTR gs:[rbx+0x69],dh
  402c4d:	jp     0x402cb4
  402c4f:	jae    0x402c71
  402c51:	outs   dx,DWORD PTR ds:[rsi]
  402c52:	data16 and BYTE PTR [rbp+0x6e],dh
  402c56:	gs js  0x402cc9
  402c59:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  402c5e:	and    BYTE PTR [rbp+riz*2+0x61],ch
  402c62:	imul   esp,DWORD PTR [rbp+0x64],0x20
  402c66:	ins    DWORD PTR es:[rdi],dx
  402c67:	gs imul esi,DWORD PTR fs:[rbp+0x6d],0x646e6120
  402c70:	and    BYTE PTR [rcx+riz*2+0x72],ch
  402c74:	and    BYTE PTR gs:[edx+0x6c],ah
  402c79:	outs   dx,DWORD PTR ds:[rsi]
  402c7a:	movsxd ebp,DWORD PTR [rbx+0x73]
  402c7d:	and    BYTE PTR [rcx+0x72],ah
  402c80:	cmp    ah,BYTE PTR gs:[rax]
  402c83:	add    BYTE PTR [rax],ah
  402c85:	(bad)  
  402c86:	jns    0x402cfc
  402c88:	gs jae 0x402cc5
  402c8b:	and    BYTE PTR [rax],al
  402c8d:	push   rbp
  402c8e:	outs   dx,BYTE PTR ds:[rsi]
  402c8f:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  402c93:	outs   dx,BYTE PTR ds:[rsi]
  402c94:	add    BYTE PTR [rcx+0x6e],al
  402c97:	jae    0x402d02
  402c99:	push   rbx
  402c9a:	je     0x402d0e
  402c9c:	imul   ebp,DWORD PTR [rsi+0x67],0x696e5500
  402ca3:	movsxd ebp,DWORD PTR [rdi+0x64]
  402ca6:	gs push rbx
  402ca8:	je     0x402d1c
  402caa:	imul   ebp,DWORD PTR [rsi+0x67],0xa0d00
  402cb1:	add    BYTE PTR [rbp+0x6e],dl
  402cb4:	gs js  0x402d27
  402cb7:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  402cbc:	and    BYTE PTR [rbp+0x65],cl
  402cbf:	ins    DWORD PTR es:[rdi],dx
  402cc0:	outs   dx,DWORD PTR ds:[rsi]
  402cc1:	jb     0x402d3c
  402cc3:	and    BYTE PTR [rbp+riz*2+0x61],cl
  402cc7:	imul   eax,DWORD PTR [rax],0xffffffcc
  402cca:	int3   
  402ccb:	int3   
  402ccc:	int3   
  402ccd:	int3   
  402cce:	int3   
  402ccf:	int3   
  402cd0:	mov    rax,rcx
  402cd3:	lock cmpxchg BYTE PTR [r8],dl
  402cd8:	ret    
  402cd9:	int3   
  402cda:	int3   
  402cdb:	int3   
  402cdc:	int3   
  402cdd:	int3   
  402cde:	int3   
  402cdf:	int3   
  402ce0:	mov    rax,QWORD PTR [rcx]
  402ce3:	mov    QWORD PTR [rdx],rax
  402ce6:	ret    
  402ce7:	int3   
  402ce8:	int3   
  402ce9:	int3   
  402cea:	int3   
  402ceb:	int3   
  402cec:	int3   
  402ced:	int3   
  402cee:	int3   
  402cef:	int3   
  402cf0:	movdqa xmm0,XMMWORD PTR [rcx]
  402cf4:	mov    r8,QWORD PTR [rcx+0x10]
  402cf8:	movdqa XMMWORD PTR [rdx],xmm0
  402cfc:	mov    QWORD PTR [rdx+0x10],r8
  402d00:	ret    
  402d01:	int3   
  402d02:	int3   
  402d03:	int3   
  402d04:	int3   
  402d05:	int3   
  402d06:	int3   
  402d07:	int3   
  402d08:	int3   
  402d09:	int3   
  402d0a:	int3   
  402d0b:	int3   
  402d0c:	int3   
  402d0d:	int3   
  402d0e:	int3   
  402d0f:	int3   
  402d10:	movdqa xmm0,XMMWORD PTR [rcx]
  402d14:	movdqa xmm1,XMMWORD PTR [rcx+0x10]
  402d19:	mov    r8,QWORD PTR [rcx+0x20]
  402d1d:	movdqa XMMWORD PTR [rdx],xmm0
  402d21:	movdqa XMMWORD PTR [rdx+0x10],xmm1
  402d26:	mov    QWORD PTR [rdx+0x20],r8
  402d2a:	ret    
  402d2b:	int3   
  402d2c:	int3   
  402d2d:	int3   
  402d2e:	int3   
  402d2f:	int3   
  402d30:	movdqa xmm0,XMMWORD PTR [rcx]
  402d34:	movdqa xmm1,XMMWORD PTR [rcx+0x10]
  402d39:	movdqa xmm2,XMMWORD PTR [rcx+0x20]
  402d3e:	mov    r8,QWORD PTR [rcx+0x30]
  402d42:	movdqa XMMWORD PTR [rdx],xmm0
  402d46:	movdqa XMMWORD PTR [rdx+0x10],xmm1
  402d4b:	movdqa XMMWORD PTR [rdx+0x20],xmm2
  402d50:	mov    QWORD PTR [rdx+0x30],r8
  402d54:	ret    
  402d55:	int3   
  402d56:	int3   
  402d57:	int3   
  402d58:	int3   
  402d59:	int3   
  402d5a:	int3   
  402d5b:	int3   
  402d5c:	int3   
  402d5d:	int3   
  402d5e:	int3   
  402d5f:	int3   
  402d60:	sub    r8,0x8
  402d64:	add    rcx,r8
  402d67:	add    rdx,r8
  402d6a:	neg    r8
  402d6d:	jns    0x402d81
  402d6f:	movdqa xmm0,XMMWORD PTR [r8+rcx*1]
  402d75:	movdqa XMMWORD PTR [r8+rdx*1],xmm0
  402d7b:	add    r8,0x10
  402d7f:	js     0x402d6f
  402d81:	mov    r9,QWORD PTR [r8+rcx*1]
  402d85:	mov    QWORD PTR [r8+rdx*1],r9
  402d89:	ret    
  402d8a:	int3   
  402d8b:	int3   
  402d8c:	int3   
  402d8d:	int3   
  402d8e:	int3   
  402d8f:	int3   
  402d90:	sub    rsp,0x28
  402d94:	cmp    BYTE PTR [rip+0x142de],0x0        # 0x417079
  402d9b:	je     0x402de6
  402d9d:	jmp    0x402dd0
  402d9f:	cmp    BYTE PTR [rip+0x14bdf],0x0        # 0x417985
  402da6:	jne    0x402dd0
  402da8:	xor    rcx,rcx
  402dab:	call   0x402be0
  402db0:	xor    rcx,rcx
  402db3:	mov    dl,0x1
  402db5:	lea    r8,[rip+0x14d3c]        # 0x417af8
  402dbc:	call   0x402cd0
  402dc1:	test   al,al
  402dc3:	je     0x402de5
  402dc5:	mov    ecx,0xa
  402dcb:	call   0x402be0
  402dd0:	xor    rcx,rcx
  402dd3:	mov    dl,0x1
  402dd5:	lea    r8,[rip+0x14d1c]        # 0x417af8
  402ddc:	call   0x402cd0
  402de1:	test   al,al
  402de3:	jne    0x402d9f
  402de5:	nop
  402de6:	add    rsp,0x28
  402dea:	ret    
  402deb:	int3   
  402dec:	int3   
  402ded:	int3   
  402dee:	int3   
  402def:	int3   
  402df0:	mov    rax,rcx
  402df3:	mov    rcx,QWORD PTR [rax+0x8]
  402df7:	mov    rdx,QWORD PTR [rax]
  402dfa:	cmp    rcx,rdx
  402dfd:	mov    QWORD PTR [rcx],rdx
  402e00:	mov    QWORD PTR [rdx+0x8],rcx
  402e04:	jne    0x402e3b
  402e06:	lea    r8,[rip+0x14d83]        # 0x417b90
  402e0d:	sub    rcx,r8
  402e10:	mov    edx,ecx
  402e12:	shr    ecx,0x4
  402e15:	shr    edx,0x9
  402e18:	mov    eax,0xfffffffe
  402e1d:	rol    eax,cl
  402e1f:	lea    r8,[rip+0x14cea]        # 0x417b10
  402e26:	and    DWORD PTR [r8+rdx*4],eax
  402e2a:	jne    0x402e3b
  402e2c:	mov    eax,0xfffffffe
  402e31:	mov    ecx,edx
  402e33:	rol    eax,cl
  402e35:	and    DWORD PTR [rip+0x14cd1],eax        # 0x417b0c
  402e3b:	ret    
  402e3c:	int3   
  402e3d:	int3   
  402e3e:	int3   
  402e3f:	int3   
  402e40:	mov    rax,rcx
  402e43:	sub    edx,0xb30
  402e49:	shr    edx,0x8
  402e4c:	sub    edx,0x3ff
  402e52:	sbb    ecx,ecx
  402e54:	and    edx,ecx
  402e56:	add    edx,0x3ff
  402e5c:	mov    r9,rdx
  402e5f:	lea    rcx,[rip+0x14d2a]        # 0x417b90
  402e66:	shl    edx,0x4
  402e69:	add    rcx,rdx
  402e6c:	mov    rdx,QWORD PTR [rcx+0x8]
  402e70:	cmp    rdx,rcx
  402e73:	mov    QWORD PTR [rax],rcx
  402e76:	mov    QWORD PTR [rax+0x8],rdx
  402e7a:	mov    QWORD PTR [rdx],rax
  402e7d:	mov    QWORD PTR [rcx+0x8],rax
  402e81:	jne    0x402ead
  402e83:	mov    rcx,r9
  402e86:	mov    rdx,r9
  402e89:	shr    edx,0x5
  402e8c:	mov    eax,0x1
  402e91:	shl    eax,cl
  402e93:	lea    r8,[rip+0x14c76]        # 0x417b10
  402e9a:	or     DWORD PTR [r8+rdx*4],eax
  402e9e:	mov    eax,0x1
  402ea3:	mov    ecx,edx
  402ea5:	shl    eax,cl
  402ea7:	or     DWORD PTR [rip+0x14c5f],eax        # 0x417b0c
  402ead:	ret    
  402eae:	int3   
  402eaf:	int3   
  402eb0:	push   rbp
  402eb1:	sub    rsp,0x20
  402eb5:	mov    rbp,rsp
  402eb8:	xor    eax,eax
  402eba:	cmp    DWORD PTR [rip+0x14c48],eax        # 0x417b08
  402ec0:	je     0x402f3f
  402ec2:	mov    rax,QWORD PTR [rip+0x14c37]        # 0x417b00
  402ec9:	test   BYTE PTR [rax-0x8],0x1
  402ecd:	jne    0x402eff
  402ecf:	or     QWORD PTR [rax-0x8],0x8
  402ed7:	mov    edx,DWORD PTR [rip+0x14c2b]        # 0x417b08
  402edd:	sub    rax,rdx
  402ee0:	lea    rcx,[rdx+0x3]
  402ee4:	mov    QWORD PTR [rax-0x8],rcx
  402ee8:	mov    QWORD PTR [rdx+rax*1-0x10],rdx
  402eed:	cmp    edx,0xb30
  402ef3:	jb     0x402f3f
  402ef5:	mov    rcx,rax
  402ef8:	call   0x402e40
  402efd:	jmp    0x402f3f
  402eff:	movabs rdx,0xfffffffffffffff0
  402f09:	and    rdx,QWORD PTR [rax-0x8]
  402f0d:	cmp    edx,0xb30
  402f13:	jb     0x402f32
  402f15:	mov    rcx,rax
  402f18:	call   0x402df0
  402f1d:	mov    rax,QWORD PTR [rip+0x14bdc]        # 0x417b00
  402f24:	movabs rdx,0xfffffffffffffff0
  402f2e:	and    rdx,QWORD PTR [rax-0x8]
  402f32:	mov    ecx,DWORD PTR [rip+0x14bd0]        # 0x417b08
  402f38:	sub    rax,rcx
  402f3b:	add    edx,ecx
  402f3d:	jmp    0x402ee0
  402f3f:	lea    rsp,[rbp+0x20]
  402f43:	pop    rbp
  402f44:	ret    
  402f45:	int3   
  402f46:	int3   
  402f47:	int3   
  402f48:	int3   
  402f49:	int3   
  402f4a:	int3   
  402f4b:	int3   
  402f4c:	int3   
  402f4d:	int3   
  402f4e:	int3   
  402f4f:	int3   
  402f50:	push   rbx
  402f51:	sub    rsp,0x20
  402f55:	mov    ebx,ecx
  402f57:	call   0x402eb0
  402f5c:	xor    rcx,rcx
  402f5f:	mov    edx,0x13fff0
  402f65:	mov    r8d,0x1000
  402f6c:	mov    r9d,0x4
  402f73:	call   0x402bc0
  402f78:	mov    rcx,rax
  402f7b:	test   rcx,rcx
  402f7e:	je     0x402fd7
  402f80:	mov    rax,QWORD PTR [rip+0x14b59]        # 0x417ae0
  402f87:	lea    rdx,[rip+0x14b4a]        # 0x417ad8
  402f8e:	mov    QWORD PTR [rcx],rdx
  402f91:	mov    QWORD PTR [rip+0x14b48],rcx        # 0x417ae0
  402f98:	mov    QWORD PTR [rcx+0x8],rax
  402f9c:	mov    QWORD PTR [rax],rcx
  402f9f:	mov    QWORD PTR [rcx+0x13ffe8],0x2
  402faa:	mov    eax,0x13ffd0
  402fb0:	sub    eax,ebx
  402fb2:	mov    DWORD PTR [rip+0x14b50],eax        # 0x417b08
  402fb8:	mov    eax,ebx
  402fba:	neg    rax
  402fbd:	lea    rax,[rcx+rax*1+0x13fff0]
  402fc5:	mov    QWORD PTR [rip+0x14b34],rax        # 0x417b00
  402fcc:	or     ebx,0x2
  402fcf:	mov    ebx,ebx
  402fd1:	mov    QWORD PTR [rax-0x8],rbx
  402fd5:	jmp    0x402fe4
  402fd7:	mov    DWORD PTR [rip+0x14b27],0x0        # 0x417b08
  402fe1:	xor    rax,rax
  402fe4:	add    rsp,0x20
  402fe8:	pop    rbx
  402fe9:	ret    
  402fea:	int3   
  402feb:	int3   
  402fec:	int3   
  402fed:	int3   
  402fee:	int3   
  402fef:	int3   
  402ff0:	sub    rsp,0x28
  402ff4:	cmp    BYTE PTR [rip+0x1407e],0x0        # 0x417079
  402ffb:	je     0x403046
  402ffd:	jmp    0x403030
  402fff:	cmp    BYTE PTR [rip+0x1497f],0x0        # 0x417985
  403006:	jne    0x403030
  403008:	xor    rcx,rcx
  40300b:	call   0x402be0
  403010:	xor    rcx,rcx
  403013:	mov    dl,0x1
  403015:	lea    r8,[rip+0x18b74]        # 0x41bb90
  40301c:	call   0x402cd0
  403021:	test   al,al
  403023:	je     0x403045
  403025:	mov    ecx,0xa
  40302b:	call   0x402be0
  403030:	xor    rcx,rcx
  403033:	mov    dl,0x1
  403035:	lea    r8,[rip+0x18b54]        # 0x41bb90
  40303c:	call   0x402cd0
  403041:	test   al,al
  403043:	jne    0x402fff
  403045:	nop
  403046:	add    rsp,0x28
  40304a:	ret    
  40304b:	int3   
  40304c:	int3   
  40304d:	int3   
  40304e:	int3   
  40304f:	int3   
  403050:	push   rdi
  403051:	push   rsi
  403052:	push   rbx
  403053:	sub    rsp,0x20
  403057:	mov    rbx,rcx
  40305a:	lea    rdi,[rbx+0x10027]
  403061:	and    rdi,0xffffffffffff0000
  403068:	xor    rcx,rcx
  40306b:	mov    rdx,rdi
  40306e:	mov    r8d,0x101000
  403075:	mov    r9d,0x4
  40307c:	call   0x402bc0
  403081:	mov    rsi,rax
  403084:	test   rsi,rsi
  403087:	je     0x4030c4
  403089:	mov    QWORD PTR [rsi+0x10],rbx
  40308d:	or     rdi,0x4
  403091:	mov    QWORD PTR [rsi+0x18],rdi
  403095:	call   0x402ff0
  40309a:	mov    rax,QWORD PTR [rip+0x18aff]        # 0x41bba0
  4030a1:	lea    rcx,[rip+0x18af0]        # 0x41bb98
  4030a8:	mov    QWORD PTR [rsi],rcx
  4030ab:	mov    QWORD PTR [rip+0x18aee],rsi        # 0x41bba0
  4030b2:	mov    QWORD PTR [rsi+0x8],rax
  4030b6:	mov    QWORD PTR [rax],rsi
  4030b9:	mov    BYTE PTR [rip+0x18ad0],0x0        # 0x41bb90
  4030c0:	add    rsi,0x20
  4030c4:	mov    rax,rsi
  4030c7:	add    rsp,0x20
  4030cb:	pop    rbx
  4030cc:	pop    rsi
  4030cd:	pop    rdi
  4030ce:	ret    
  4030cf:	int3   
  4030d0:	push   rbp
  4030d1:	push   r14
  4030d3:	push   r13
  4030d5:	push   rdi
  4030d6:	push   rsi
  4030d7:	push   rbx
  4030d8:	sub    rsp,0x58
  4030dc:	mov    rbp,rsp
  4030df:	mov    rbx,rcx
  4030e2:	sub    rbx,0x20
  4030e6:	call   0x402ff0
  4030eb:	mov    rsi,QWORD PTR [rbx]
  4030ee:	mov    rdi,QWORD PTR [rbx+0x8]
  4030f2:	mov    rax,QWORD PTR [rbx+0x18]
  4030f6:	test   rax,0x8
  4030fd:	jne    0x40311f
  4030ff:	mov    rcx,rbx
  403102:	xor    rdx,rdx
  403105:	mov    r8d,0x8000
  40310c:	call   0x402bd0
  403111:	test   eax,eax
  403113:	je     0x40311a
  403115:	xor    rbx,rbx
  403118:	jmp    0x40316c
  40311a:	or     ebx,0xffffffff
  40311d:	jmp    0x40316c
  40311f:	mov    r13,rbx
  403122:	mov    r14,QWORD PTR [rbx+0x18]
  403126:	and    r14,0xfffffffffffffff0
  40312a:	xor    rbx,rbx
  40312d:	mov    rcx,r13
  403130:	lea    rdx,[rbp+0x20]
  403134:	mov    r8d,0x30
  40313b:	call   0x402b40
  403140:	mov    rcx,r13
  403143:	xor    rdx,rdx
  403146:	mov    r8d,0x8000
  40314d:	call   0x402bd0
  403152:	test   eax,eax
  403154:	jne    0x40315b
  403156:	or     ebx,0xffffffff
  403159:	jmp    0x40316b
  40315b:	cmp    QWORD PTR [rbp+0x38],r14
  40315f:	jae    0x40316b
  403161:	sub    r14,QWORD PTR [rbp+0x38]
  403165:	add    r13,QWORD PTR [rbp+0x38]
  403169:	jmp    0x40312d
  40316b:	nop
  40316c:	test   ebx,ebx
  40316e:	jne    0x403177
  403170:	mov    QWORD PTR [rdi],rsi
  403173:	mov    QWORD PTR [rsi+0x8],rdi
  403177:	mov    BYTE PTR [rip+0x18a12],0x0        # 0x41bb90
  40317e:	mov    eax,ebx
  403180:	lea    rsp,[rbp+0x58]
  403184:	pop    rbx
  403185:	pop    rsi
  403186:	pop    rdi
  403187:	pop    r13
  403189:	pop    r14
  40318b:	pop    rbp
  40318c:	ret    
  40318d:	int3   
  40318e:	int3   
  40318f:	int3   
  403190:	push   rbp
  403191:	push   r14
  403193:	push   r13
  403195:	push   rdi
  403196:	push   rsi
  403197:	push   rbx
  403198:	sub    rsp,0x58
  40319c:	mov    rbp,rsp
  40319f:	mov    rbx,rcx
  4031a2:	mov    rsi,rdx
  4031a5:	mov    rax,QWORD PTR [rbx-0x8]
  4031a9:	mov    rcx,rax
  4031ac:	and    rcx,0xfffffffffffffff0
  4031b0:	lea    rdi,[rcx-0x28]
  4031b4:	cmp    rsi,rdi
  4031b7:	jbe    0x4032bb
  4031bd:	mov    rcx,rdi
  4031c0:	shr    rcx,0x2
  4031c4:	lea    r13,[rdi+rcx*1]
  4031c8:	cmp    rsi,r13
  4031cb:	jb     0x4031d0
  4031cd:	mov    r13,rsi
  4031d0:	and    rax,0xfffffffffffffff0
  4031d4:	lea    r14,[rbx+rax*1-0x20]
  4031d9:	mov    rcx,r14
  4031dc:	lea    rdx,[rbp+0x20]
  4031e0:	mov    r8d,0x30
  4031e7:	call   0x402b40
  4031ec:	cmp    DWORD PTR [rbp+0x40],0x10000
  4031f3:	jne    0x403282
  4031f9:	and    QWORD PTR [rbp+0x38],0xffffffffffff0000
  403201:	mov    rax,rdi
  403204:	neg    rax
  403207:	lea    rax,[rsi+rax*1]
  40320b:	cmp    QWORD PTR [rbp+0x38],rax
  40320f:	jbe    0x403282
  403211:	neg    rdi
  403214:	lea    rdi,[r13+rdi*1+0xffff]
  40321c:	and    rdi,0xffffffffffff0000
  403223:	cmp    rdi,QWORD PTR [rbp+0x38]
  403227:	jbe    0x40322d
  403229:	mov    rdi,QWORD PTR [rbp+0x38]
  40322d:	mov    rcx,r14
  403230:	mov    rdx,rdi
  403233:	mov    r8d,0x2000
  40323a:	mov    r9d,0x4
  403241:	call   0x402bc0
  403246:	test   rax,rax
  403249:	je     0x403282
  40324b:	mov    rcx,r14
  40324e:	mov    rdx,rdi
  403251:	mov    r8d,0x1000
  403258:	mov    r9d,0x4
  40325f:	call   0x402bc0
  403264:	test   rax,rax
  403267:	je     0x403282
  403269:	mov    QWORD PTR [rbx-0x10],rsi
  40326d:	mov    rax,QWORD PTR [rbx-0x8]
  403271:	lea    rax,[rax+rdi*1]
  403275:	or     rax,0x8
  403279:	mov    QWORD PTR [rbx-0x8],rax
  40327d:	mov    rdi,rbx
  403280:	jmp    0x403300
  403282:	mov    rcx,r13
  403285:	call   0x403310
  40328a:	mov    rdi,rax
  40328d:	test   rdi,rdi
  403290:	je     0x403300
  403292:	cmp    r13,0x40a28
  403299:	jbe    0x40329f
  40329b:	mov    QWORD PTR [rdi-0x10],rsi
  40329f:	mov    rax,QWORD PTR [rbx-0x10]
  4032a3:	mov    rcx,rbx
  4032a6:	mov    rdx,rdi
  4032a9:	mov    r8,rax
  4032ac:	call   0x402d60
  4032b1:	mov    rcx,rbx
  4032b4:	call   0x4036e0
  4032b9:	jmp    0x403300
  4032bb:	shr    rdi,0x1
  4032bf:	cmp    rsi,rdi
  4032c2:	jb     0x4032cd
  4032c4:	mov    rdi,rbx
  4032c7:	mov    QWORD PTR [rbx-0x10],rsi
  4032cb:	jmp    0x403300
  4032cd:	mov    rcx,rsi
  4032d0:	call   0x403310
  4032d5:	mov    rdi,rax
  4032d8:	test   rdi,rdi
  4032db:	je     0x403300
  4032dd:	cmp    rsi,0x40a28
  4032e4:	jbe    0x4032ea
  4032e6:	mov    QWORD PTR [rbx-0x10],rsi
  4032ea:	mov    rcx,rbx
  4032ed:	mov    rdx,rdi
  4032f0:	mov    r8,rsi
  4032f3:	call   0x402d60
  4032f8:	mov    rcx,rbx
  4032fb:	call   0x4036e0
  403300:	mov    rax,rdi
  403303:	lea    rsp,[rbp+0x58]
  403307:	pop    rbx
  403308:	pop    rsi
  403309:	pop    rdi
  40330a:	pop    r13
  40330c:	pop    r14
  40330e:	pop    rbp
  40330f:	ret    
  403310:	push   rbp
  403311:	push   rdi
  403312:	push   rsi
  403313:	push   rbx
  403314:	sub    rsp,0x28
  403318:	mov    rbp,rsp
  40331b:	lea    edx,[ecx+0x7]
  40331f:	shr    edx,0x3
  403322:	lea    r8,[rip+0x14663]        # 0x41798c
  403329:	lea    rbx,[rip+0x10d80]        # 0x4140b0
  403330:	movzx  esi,BYTE PTR [rip+0x13d42]        # 0x417079
  403337:	cmp    rcx,0xa28
  40333e:	ja     0x403579
  403344:	movzx  ecx,BYTE PTR [rdx+r8*1]
  403349:	shl    ecx,0x4
  40334c:	add    rbx,rcx
  40334f:	test   esi,esi
  403351:	jne    0x4033c1
  403353:	mov    rdx,QWORD PTR [rbx+0x8]
  403357:	mov    rax,QWORD PTR [rdx+0x18]
  40335b:	movabs rcx,0xfffffffffffffff8
  403365:	cmp    rdx,rbx
  403368:	je     0x403384
  40336a:	add    DWORD PTR [rdx+0x20],0x1
  40336e:	and    rcx,QWORD PTR [rax-0x8]
  403372:	mov    QWORD PTR [rdx+0x18],rcx
  403376:	mov    QWORD PTR [rax-0x8],rdx
  40337a:	je     0x4033ad
  40337c:	mov    BYTE PTR [rbx],0x0
  40337f:	jmp    0x4036cb
  403384:	mov    rdx,QWORD PTR [rbx+0x28]
  403388:	movzx  ecx,WORD PTR [rbx+0x2]
  40338c:	add    rcx,rax
  40338f:	cmp    rax,QWORD PTR [rbx+0x20]
  403393:	ja     0x40342c
  403399:	add    DWORD PTR [rdx+0x20],0x1
  40339d:	mov    QWORD PTR [rbx+0x18],rcx
  4033a1:	mov    BYTE PTR [rbx],0x0
  4033a4:	mov    QWORD PTR [rax-0x8],rdx
  4033a8:	jmp    0x4036cb
  4033ad:	mov    rcx,QWORD PTR [rdx+0x8]
  4033b1:	mov    QWORD PTR [rcx+0x10],rbx
  4033b5:	mov    QWORD PTR [rbx+0x8],rcx
  4033b9:	mov    BYTE PTR [rbx],0x0
  4033bc:	jmp    0x4036cb
  4033c1:	mov    eax,0x100
  4033c6:	lock cmpxchg BYTE PTR [rbx],ah
  4033ca:	je     0x403353
  4033cc:	add    rbx,0x40
  4033d0:	mov    eax,0x100
  4033d5:	lock cmpxchg BYTE PTR [rbx],ah
  4033d9:	je     0x403353
  4033df:	add    rbx,0x40
  4033e3:	mov    eax,0x100
  4033e8:	lock cmpxchg BYTE PTR [rbx],ah
  4033ec:	je     0x403353
  4033f2:	sub    rbx,0x80
  4033f9:	pause  
  4033fb:	lea    rax,[rip+0x14583]        # 0x417985
  403402:	cmp    BYTE PTR [rax],0x0
  403405:	jne    0x4033c1
  403407:	mov    ecx,0x0
  40340c:	call   0x402be0
  403411:	mov    eax,0x100
  403416:	lock cmpxchg BYTE PTR [rbx],ah
  40341a:	je     0x403353
  403420:	mov    ecx,0xa
  403425:	call   0x402be0
  40342a:	jmp    0x4033c1
  40342c:	test   esi,esi
  40342e:	je     0x403435
  403430:	call   0x402d90
  403435:	movsx  esi,BYTE PTR [rbx+0x1]
  403439:	and    esi,DWORD PTR [rip+0x146cd]        # 0x417b0c
  40343f:	je     0x4034d4
  403445:	bsf    eax,esi
  403448:	lea    r8,[rip+0x146c1]        # 0x417b10
  40344f:	lea    r9,[rax*4+0x0]
  403457:	mov    ecx,DWORD PTR [r9+r8*1]
  40345b:	bsf    ecx,ecx
  40345e:	lea    ecx,[ecx+r9d*8]
  403463:	lea    rdi,[rip+0x14726]        # 0x417b90
  40346a:	lea    esi,[ecx*8+0x0]
  403472:	lea    rdi,[rdi+rsi*2]
  403476:	mov    rsi,QWORD PTR [rdi+0x8]
  40347a:	mov    rdx,QWORD PTR [rsi+0x8]
  40347e:	mov    QWORD PTR [rdi+0x8],rdx
  403482:	mov    QWORD PTR [rdx],rdi
  403485:	cmp    rdi,rdx
  403488:	jne    0x40349e
  40348a:	mov    edx,0xfffffffe
  40348f:	rol    edx,cl
  403491:	and    DWORD PTR [r9+r8*1],edx
  403495:	jne    0x40349e
  403497:	btr    DWORD PTR [rip+0x1466e],eax        # 0x417b0c
  40349e:	movabs rdi,0xfffffffffffffff0
  4034a8:	and    rdi,QWORD PTR [rsi-0x8]
  4034ac:	cmp    edi,0x10a60
  4034b2:	jb     0x40352c
  4034b4:	mov    edx,edi
  4034b6:	movzx  edi,WORD PTR [rbx+0x6]
  4034ba:	sub    edx,edi
  4034bc:	lea    rcx,[rdi+rsi*1]
  4034c0:	lea    rax,[rdx+0x3]
  4034c4:	mov    QWORD PTR [rcx-0x8],rax
  4034c8:	mov    QWORD PTR [rdx+rcx*1-0x10],rdx
  4034cd:	call   0x402e40
  4034d2:	jmp    0x403531
  4034d4:	movzx  ecx,WORD PTR [rbx+0x4]
  4034d8:	mov    edi,DWORD PTR [rip+0x1462a]        # 0x417b08
  4034de:	cmp    edi,ecx
  4034e0:	jb     0x40350c
  4034e2:	mov    rsi,QWORD PTR [rip+0x14617]        # 0x417b00
  4034e9:	movzx  ecx,WORD PTR [rbx+0x6]
  4034ed:	lea    edx,[ecx+0xb30]
  4034f4:	cmp    edi,edx
  4034f6:	jb     0x4034fa
  4034f8:	mov    edi,ecx
  4034fa:	sub    rsi,rdi
  4034fd:	sub    DWORD PTR [rip+0x14605],edi        # 0x417b08
  403503:	mov    QWORD PTR [rip+0x145f6],rsi        # 0x417b00
  40350a:	jmp    0x403531
  40350c:	movzx  ecx,WORD PTR [rbx+0x6]
  403510:	mov    edi,ecx
  403512:	call   0x402f50
  403517:	mov    rsi,rax
  40351a:	test   rax,rax
  40351d:	jne    0x403531
  40351f:	mov    BYTE PTR [rip+0x145d3],al        # 0x417af8
  403525:	mov    BYTE PTR [rbx],al
  403527:	jmp    0x4036cb
  40352c:	and    BYTE PTR [rdi+rsi*1-0x8],0xf7
  403531:	lea    ecx,[edi+0x6]
  403535:	mov    QWORD PTR [rsi-0x8],rcx
  403539:	xor    eax,eax
  40353b:	mov    BYTE PTR [rip+0x145b7],al        # 0x417af8
  403541:	mov    QWORD PTR [rsi],rbx
  403544:	mov    QWORD PTR [rsi+0x18],rax
  403548:	mov    DWORD PTR [rsi+0x20],0x1
  40354f:	mov    QWORD PTR [rbx+0x28],rsi
  403553:	lea    rax,[rsi+0x30]
  403557:	movzx  ecx,WORD PTR [rbx+0x2]
  40355b:	lea    rdx,[rcx+rax*1]
  40355f:	mov    QWORD PTR [rbx+0x18],rdx
  403563:	add    rdi,rsi
  403566:	sub    rdi,rcx
  403569:	mov    QWORD PTR [rbx+0x20],rdi
  40356d:	mov    BYTE PTR [rbx],0x0
  403570:	mov    QWORD PTR [rax-0x8],rsi
  403574:	jmp    0x4036cb
  403579:	cmp    rcx,0x40a28
  403580:	ja     0x4036be
  403586:	lea    ebx,[ecx+0xd7]
  40358d:	and    ebx,0xffffff00
  403593:	add    ebx,0x30
  403596:	test   esi,esi
  403598:	je     0x40359f
  40359a:	call   0x402d90
  40359f:	lea    edx,[ebx-0xb30]
  4035a6:	mov    ecx,edx
  4035a8:	shr    edx,0xd
  4035ab:	shr    ecx,0x8
  4035ae:	mov    eax,0xffffffff
  4035b3:	shl    eax,cl
  4035b5:	lea    r8,[rip+0x14554]        # 0x417b10
  4035bc:	and    eax,DWORD PTR [r8+rdx*4]
  4035c0:	je     0x4035cc
  4035c2:	and    ecx,0xffffffe0
  4035c5:	bsf    eax,eax
  4035c8:	or     ecx,eax
  4035ca:	jmp    0x403632
  4035cc:	mov    eax,0xfffffffe
  4035d1:	mov    ecx,edx
  4035d3:	shl    eax,cl
  4035d5:	and    eax,DWORD PTR [rip+0x14531]        # 0x417b0c
  4035db:	je     0x4035f0
  4035dd:	bsf    edx,eax
  4035e0:	mov    eax,DWORD PTR [r8+rdx*4]
  4035e4:	bsf    ecx,eax
  4035e7:	mov    eax,edx
  4035e9:	shl    eax,0x5
  4035ec:	or     ecx,eax
  4035ee:	jmp    0x403632
  4035f0:	mov    ecx,DWORD PTR [rip+0x14512]        # 0x417b08
  4035f6:	sub    ecx,ebx
  4035f8:	jb     0x40361e
  4035fa:	mov    rax,QWORD PTR [rip+0x144ff]        # 0x417b00
  403601:	sub    rax,rbx
  403604:	mov    QWORD PTR [rip+0x144f5],rax        # 0x417b00
  40360b:	mov    DWORD PTR [rip+0x144f7],ecx        # 0x417b08
  403611:	or     rbx,0x2
  403618:	mov    QWORD PTR [rax-0x8],rbx
  40361c:	jmp    0x403625
  40361e:	mov    ecx,ebx
  403620:	call   0x402f50
  403625:	xor    cl,cl
  403627:	mov    BYTE PTR [rip+0x144cb],cl        # 0x417af8
  40362d:	jmp    0x4036cb
  403632:	lea    rdi,[rip+0x14557]        # 0x417b90
  403639:	lea    eax,[ecx+ecx*1]
  40363d:	lea    rdi,[rdi+rax*8]
  403641:	mov    rsi,QWORD PTR [rdi+0x8]
  403645:	mov    rax,QWORD PTR [rsi+0x8]
  403649:	mov    QWORD PTR [rdi+0x8],rax
  40364d:	mov    QWORD PTR [rax],rdi
  403650:	cmp    rdi,rax
  403653:	jne    0x403670
  403655:	mov    eax,0xfffffffe
  40365a:	rol    eax,cl
  40365c:	lea    r8,[rip+0x144ad]        # 0x417b10
  403663:	and    DWORD PTR [r8+rdx*4],eax
  403667:	jne    0x403670
  403669:	btr    DWORD PTR [rip+0x1449c],edx        # 0x417b0c
  403670:	movabs rdi,0xfffffffffffffff0
  40367a:	and    rdi,QWORD PTR [rsi-0x8]
  40367e:	mov    edx,edi
  403680:	sub    edx,ebx
  403682:	je     0x4036a4
  403684:	lea    rcx,[rbx+rsi*1]
  403688:	lea    rax,[rdx+0x3]
  40368c:	mov    QWORD PTR [rcx-0x8],rax
  403690:	mov    QWORD PTR [rdx+rcx*1-0x10],rdx
  403695:	cmp    edx,0xb30
  40369b:	jb     0x4036a9
  40369d:	call   0x402e40
  4036a2:	jmp    0x4036a9
  4036a4:	and    BYTE PTR [rdi+rsi*1-0x8],0xf7
  4036a9:	lea    rcx,[rbx+0x2]
  4036ad:	mov    QWORD PTR [rsi-0x8],rcx
  4036b1:	xor    cl,cl
  4036b3:	mov    BYTE PTR [rip+0x1443f],cl        # 0x417af8
  4036b9:	mov    rax,rsi
  4036bc:	jmp    0x4036cb
  4036be:	xor    rax,rax
  4036c1:	test   rcx,rcx
  4036c4:	js     0x4036cb
  4036c6:	call   0x403050
  4036cb:	lea    rsp,[rbp+0x28]
  4036cf:	pop    rbx
  4036d0:	pop    rsi
  4036d1:	pop    rdi
  4036d2:	pop    rbp
  4036d3:	ret    
  4036d4:	int3   
  4036d5:	int3   
  4036d6:	int3   
  4036d7:	int3   
  4036d8:	int3   
  4036d9:	int3   
  4036da:	int3   
  4036db:	int3   
  4036dc:	int3   
  4036dd:	int3   
  4036de:	int3   
  4036df:	int3   
  4036e0:	push   rbp
  4036e1:	push   rsi
  4036e2:	push   rbx
  4036e3:	sub    rsp,0x20
  4036e7:	mov    rbp,rsp
  4036ea:	mov    rdx,QWORD PTR [rcx-0x8]
  4036ee:	test   dl,0x7
  4036f1:	mov    bl,BYTE PTR [rip+0x13982]        # 0x417079
  4036f7:	jne    0x4037cb
  4036fd:	test   bl,bl
  4036ff:	mov    rbx,QWORD PTR [rdx]
  403702:	jne    0x403779
  403704:	sub    DWORD PTR [rdx+0x20],0x1
  403708:	mov    rax,QWORD PTR [rdx+0x18]
  40370c:	je     0x403746
  40370e:	test   rax,rax
  403711:	mov    QWORD PTR [rdx+0x18],rcx
  403715:	lea    rax,[rax+0x1]
  403719:	mov    QWORD PTR [rcx-0x8],rax
  40371d:	je     0x403728
  40371f:	xor    eax,eax
  403721:	mov    BYTE PTR [rbx],al
  403723:	jmp    0x4038f8
  403728:	mov    rcx,QWORD PTR [rbx+0x8]
  40372c:	mov    QWORD PTR [rdx+0x10],rbx
  403730:	mov    QWORD PTR [rdx+0x8],rcx
  403734:	mov    QWORD PTR [rcx+0x10],rdx
  403738:	mov    QWORD PTR [rbx+0x8],rdx
  40373c:	mov    BYTE PTR [rbx],0x0
  40373f:	xor    eax,eax
  403741:	jmp    0x4038f8
  403746:	test   rax,rax
  403749:	je     0x403764
  40374b:	mov    rax,QWORD PTR [rdx+0x10]
  40374f:	mov    rcx,QWORD PTR [rdx+0x8]
  403753:	mov    QWORD PTR [rax+0x8],rcx
  403757:	mov    QWORD PTR [rcx+0x10],rax
  40375b:	xor    rax,rax
  40375e:	cmp    QWORD PTR [rbx+0x28],rdx
  403762:	jne    0x403768
  403764:	mov    QWORD PTR [rbx+0x20],rax
  403768:	mov    BYTE PTR [rbx],al
  40376a:	mov    rcx,rdx
  40376d:	mov    rdx,QWORD PTR [rdx-0x8]
  403771:	mov    bl,BYTE PTR [rip+0x13902]        # 0x417079
  403777:	jmp    0x4037d4
  403779:	mov    eax,0x100
  40377e:	lock cmpxchg BYTE PTR [rbx],ah
  403782:	je     0x403704
  403784:	pause  
  403786:	lea    rax,[rip+0x141f8]        # 0x417985
  40378d:	test   BYTE PTR [rax],0x0
  403790:	jne    0x403779
  403792:	mov    rsi,rcx
  403795:	mov    ecx,0x0
  40379a:	call   0x402be0
  40379f:	mov    rcx,rsi
  4037a2:	mov    rdx,QWORD PTR [rcx-0x8]
  4037a6:	mov    eax,0x100
  4037ab:	lock cmpxchg BYTE PTR [rbx],ah
  4037af:	je     0x403704
  4037b5:	mov    rsi,rcx
  4037b8:	mov    ecx,0xa
  4037bd:	call   0x402be0
  4037c2:	mov    rcx,rsi
  4037c5:	mov    rdx,QWORD PTR [rcx-0x8]
  4037c9:	jmp    0x403779
  4037cb:	test   dl,0x5
  4037ce:	jne    0x4038e9
  4037d4:	and    rdx,0xfffffffffffffff0
  4037db:	test   bl,bl
  4037dd:	mov    rbx,rdx
  4037e0:	mov    rsi,rcx
  4037e3:	je     0x4037ea
  4037e5:	call   0x402d90
  4037ea:	test   QWORD PTR [rbx+rsi*1-0x8],0x1
  4037f3:	mov    rcx,QWORD PTR [rbx+rsi*1-0x8]
  4037f8:	jne    0x403839
  4037fa:	or     rcx,0x8
  403801:	mov    QWORD PTR [rbx+rsi*1-0x8],rcx
  403806:	test   BYTE PTR [rsi-0x8],0x8
  40380a:	jne    0x40385a
  40380c:	cmp    ebx,0x13ffd0
  403812:	je     0x403876
  403814:	lea    rax,[rbx+0x3]
  403818:	mov    QWORD PTR [rsi-0x8],rax
  40381c:	mov    QWORD PTR [rbx+rsi*1-0x10],rbx
  403821:	mov    rcx,rsi
  403824:	mov    rdx,rbx
  403827:	call   0x402e40
  40382c:	xor    eax,eax
  40382e:	mov    BYTE PTR [rip+0x142c4],al        # 0x417af8
  403834:	jmp    0x4038f8
  403839:	lea    rax,[rbx+rsi*1]
  40383d:	and    rcx,0xfffffffffffffff0
  403844:	add    rbx,rcx
  403847:	cmp    rcx,0xb30
  40384e:	jb     0x403806
  403850:	mov    rcx,rax
  403853:	call   0x402df0
  403858:	jmp    0x403806
  40385a:	mov    rcx,QWORD PTR [rsi-0x10]
  40385e:	sub    rsi,rcx
  403861:	add    rbx,rcx
  403864:	cmp    ecx,0xb30
  40386a:	jb     0x40380c
  40386c:	mov    rcx,rsi
  40386f:	call   0x402df0
  403874:	jmp    0x40380c
  403876:	lea    r8,[rip+0x1428b]        # 0x417b08
  40387d:	cmp    DWORD PTR [r8],0x13ffd0
  403884:	jne    0x4038b7
  403886:	sub    rsi,0x20
  40388a:	mov    rax,QWORD PTR [rsi]
  40388d:	mov    rdx,QWORD PTR [rsi+0x8]
  403891:	mov    QWORD PTR [rax+0x8],rdx
  403895:	mov    QWORD PTR [rdx],rax
  403898:	xor    eax,eax
  40389a:	mov    BYTE PTR [rip+0x14258],al        # 0x417af8
  4038a0:	mov    rcx,rsi
  4038a3:	xor    edx,edx
  4038a5:	mov    r8d,0x8000
  4038ab:	call   0x402bd0
  4038b0:	cmp    eax,0x1
  4038b3:	sbb    eax,eax
  4038b5:	jmp    0x4038f8
  4038b7:	lea    rbx,[rsi+0x13ffd0]
  4038be:	call   0x402eb0
  4038c3:	mov    QWORD PTR [rbx-0x8],0x2
  4038cb:	lea    rax,[rip+0x14236]        # 0x417b08
  4038d2:	mov    DWORD PTR [rax],0x13ffd0
  4038d8:	mov    QWORD PTR [rip+0x14221],rbx        # 0x417b00
  4038df:	xor    eax,eax
  4038e1:	mov    BYTE PTR [rip+0x14211],al        # 0x417af8
  4038e7:	jmp    0x4038f8
  4038e9:	mov    eax,0xffffffff
  4038ee:	test   dl,0x3
  4038f1:	jne    0x4038f8
  4038f3:	call   0x4030d0
  4038f8:	lea    rsp,[rbp+0x20]
  4038fc:	pop    rbx
  4038fd:	pop    rsi
  4038fe:	pop    rbp
  4038ff:	ret    
  403900:	push   rbp
  403901:	push   r15
  403903:	push   r14
  403905:	push   rdi
  403906:	push   rsi
  403907:	push   rbx
  403908:	sub    rsp,0x28
  40390c:	mov    rbp,rsp
  40390f:	mov    rsi,rcx
  403912:	mov    rcx,QWORD PTR [rcx-0x8]
  403916:	test   cl,0x7
  403919:	jne    0x4039cf
  40391f:	mov    rbx,QWORD PTR [rcx]
  403922:	movzx  ecx,WORD PTR [rbx+0x2]
  403926:	sub    ecx,0x8
  403929:	cmp    rcx,rdx
  40392c:	jb     0x403977
  40392e:	lea    ebx,[edx*4+0x40]
  403936:	cmp    ebx,ecx
  403938:	jb     0x403942
  40393a:	mov    rax,rsi
  40393d:	jmp    0x403c65
  403942:	mov    rbx,rdx
  403945:	mov    rcx,rdx
  403948:	call   0x403310
  40394d:	test   rax,rax
  403950:	je     0x403c65
  403956:	mov    r8,rbx
  403959:	mov    rdx,rax
  40395c:	mov    rbx,rax
  40395f:	mov    rcx,rsi
  403962:	call   0x402d60
  403967:	mov    rcx,rsi
  40396a:	call   0x4036e0
  40396f:	mov    rax,rbx
  403972:	jmp    0x403c65
  403977:	lea    ecx,[ecx+ecx*1+0x20]
  40397c:	mov    rdi,rdx
  40397f:	xor    rax,rax
  403982:	sub    rcx,rdx
  403985:	adc    rax,0xffffffffffffffff
  403989:	and    rcx,rax
  40398c:	add    rcx,rdx
  40398f:	call   0x403310
  403994:	test   rax,rax
  403997:	je     0x403c65
  40399d:	cmp    rdi,0x40a28
  4039a4:	jbe    0x4039aa
  4039a6:	mov    QWORD PTR [rax-0x10],rdi
  4039aa:	movzx  r8d,WORD PTR [rbx+0x2]
  4039af:	sub    r8d,0x8
  4039b3:	mov    rdx,rax
  4039b6:	mov    rdi,rax
  4039b9:	mov    rcx,rsi
  4039bc:	call   QWORD PTR [rbx+0x30]
  4039bf:	mov    rcx,rsi
  4039c2:	call   0x4036e0
  4039c7:	mov    rax,rdi
  4039ca:	jmp    0x403c65
  4039cf:	test   cl,0x5
  4039d2:	jne    0x403c54
  4039d8:	mov    rbx,rcx
  4039db:	and    ecx,0xfffffff0
  4039de:	lea    rdi,[rcx+rsi*1]
  4039e2:	sub    ecx,0x8
  4039e5:	and    ebx,0xf
  4039e8:	cmp    rdx,rcx
  4039eb:	ja     0x403b00
  4039f1:	lea    r15,[rdx+rdx*1]
  4039f5:	cmp    r15,rcx
  4039f8:	jb     0x403a02
  4039fa:	mov    rax,rsi
  4039fd:	jmp    0x403c65
  403a02:	cmp    edx,0xb28
  403a08:	jae    0x403a1f
  403a0a:	cmp    edx,0x2cc
  403a10:	jb     0x403acb
  403a16:	mov    edx,0xb28
  403a1b:	cmp    ecx,edx
  403a1d:	jbe    0x4039fa
  403a1f:	lea    r15,[rdx+0xd7]
  403a26:	and    r15,0xffffffffffffff00
  403a2d:	add    r15,0x30
  403a31:	add    ecx,0x8
  403a34:	sub    ecx,r15d
  403a37:	lea    r8,[rip+0x1363b]        # 0x417079
  403a3e:	cmp    BYTE PTR [r8],0x0
  403a42:	je     0x403a5b
  403a44:	mov    ebx,ecx
  403a46:	call   0x402d90
  403a4b:	mov    ecx,ebx
  403a4d:	movabs rbx,0xf
  403a57:	and    rbx,QWORD PTR [rsi-0x8]
  403a5b:	or     rbx,r15
  403a5e:	mov    QWORD PTR [rsi-0x8],rbx
  403a62:	mov    ebx,ecx
  403a64:	mov    rdx,QWORD PTR [rdi-0x8]
  403a68:	test   dl,0x1
  403a6b:	jne    0x403a7a
  403a6d:	or     rdx,0x8
  403a74:	mov    QWORD PTR [rdi-0x8],rdx
  403a78:	jmp    0x403a97
  403a7a:	mov    rcx,rdi
  403a7d:	and    rdx,0xfffffffffffffff0
  403a84:	add    rbx,rdx
  403a87:	add    rdi,rdx
  403a8a:	cmp    edx,0xb30
  403a90:	jb     0x403a97
  403a92:	call   0x402df0
  403a97:	mov    QWORD PTR [rdi-0x10],rbx
  403a9b:	lea    rcx,[rbx+0x3]
  403a9f:	mov    QWORD PTR [r15+rsi*1-0x8],rcx
  403aa4:	cmp    rbx,0xb30
  403aab:	jb     0x403ab9
  403aad:	lea    rcx,[r15+rsi*1]
  403ab1:	mov    rdx,rbx
  403ab4:	call   0x402e40
  403ab9:	lea    rax,[rip+0x14038]        # 0x417af8
  403ac0:	mov    BYTE PTR [rax],0x0
  403ac3:	mov    rax,rsi
  403ac6:	jmp    0x403c65
  403acb:	mov    rdi,rdx
  403ace:	mov    rcx,rdx
  403ad1:	call   0x403310
  403ad6:	test   rax,rax
  403ad9:	je     0x403c65
  403adf:	mov    r15,rax
  403ae2:	mov    rdx,rax
  403ae5:	mov    rcx,rsi
  403ae8:	mov    r8,rdi
  403aeb:	call   0x402d60
  403af0:	mov    rcx,rsi
  403af3:	call   0x4036e0
  403af8:	mov    rax,r15
  403afb:	jmp    0x403c65
  403b00:	mov    rax,QWORD PTR [rdi-0x8]
  403b04:	test   al,0x1
  403b06:	je     0x403bfb
  403b0c:	and    rax,0xfffffffffffffff0
  403b13:	lea    r15,[rcx+rax*1]
  403b17:	cmp    rdx,r15
  403b1a:	ja     0x403bfb
  403b20:	lea    r8,[rip+0x13552]        # 0x417079
  403b27:	cmp    BYTE PTR [r8],0x0
  403b2b:	je     0x403b68
  403b2d:	mov    rbx,rcx
  403b30:	mov    r15,rdx
  403b33:	call   0x402d90
  403b38:	mov    rcx,rbx
  403b3b:	mov    rdx,r15
  403b3e:	movabs rbx,0xf
  403b48:	and    rbx,QWORD PTR [rsi-0x8]
  403b4c:	mov    rax,QWORD PTR [rdi-0x8]
  403b50:	test   al,0x1
  403b52:	je     0x403bf1
  403b58:	and    eax,0xfffffff0
  403b5b:	lea    r15,[rcx+rax*1]
  403b5f:	cmp    rdx,r15
  403b62:	ja     0x403bf1
  403b68:	cmp    eax,0xb30
  403b6d:	jb     0x403b83
  403b6f:	mov    r14,rcx
  403b72:	mov    rcx,rdi
  403b75:	mov    rdi,rdx
  403b78:	call   0x402df0
  403b7d:	mov    rcx,r14
  403b80:	mov    rdx,rdi
  403b83:	mov    eax,ecx
  403b85:	shr    eax,0x2
  403b88:	add    eax,ecx
  403b8a:	xor    edi,edi
  403b8c:	sub    eax,edx
  403b8e:	adc    edi,0xffffffff
  403b91:	and    eax,edi
  403b93:	lea    eax,[edx+eax*1+0xd7]
  403b9b:	and    eax,0xffffff00
  403ba0:	add    eax,0x30
  403ba3:	lea    rdx,[r15+0x8]
  403ba7:	sub    edx,eax
  403ba9:	ja     0x403bb9
  403bab:	and    QWORD PTR [r15+rsi*1],0xfffffffffffffff7
  403bb3:	add    r15,0x8
  403bb7:	jmp    0x403bdb
  403bb9:	mov    QWORD PTR [r15+rsi*1-0x8],rdx
  403bbe:	lea    edi,[edx+0x3]
  403bc2:	mov    QWORD PTR [rax+rsi*1-0x8],rdi
  403bc7:	mov    r15,rax
  403bca:	cmp    edx,0xb30
  403bd0:	jb     0x403bdb
  403bd2:	lea    rcx,[rax+rsi*1]
  403bd6:	call   0x402e40
  403bdb:	or     r15,rbx
  403bde:	mov    QWORD PTR [rsi-0x8],r15
  403be2:	lea    rax,[rip+0x13f0f]        # 0x417af8
  403be9:	mov    BYTE PTR [rax],0x0
  403bec:	mov    rax,rsi
  403bef:	jmp    0x403c65
  403bf1:	lea    rax,[rip+0x13f00]        # 0x417af8
  403bf8:	mov    BYTE PTR [rax],0x0
  403bfb:	mov    eax,ecx
  403bfd:	shr    eax,0x2
  403c00:	add    eax,ecx
  403c02:	xor    rdi,rdi
  403c05:	sub    rax,rdx
  403c08:	adc    rdi,0xffffffffffffffff
  403c0c:	and    rax,rdi
  403c0f:	add    rax,rdx
  403c12:	mov    r15,rax
  403c15:	mov    edi,ecx
  403c17:	mov    rbx,rdx
  403c1a:	mov    rcx,rax
  403c1d:	call   0x403310
  403c22:	mov    rdx,rbx
  403c25:	test   eax,eax
  403c27:	je     0x403c65
  403c29:	cmp    r15,0x40a28
  403c30:	jbe    0x403c36
  403c32:	mov    QWORD PTR [rax-0x10],rdx
  403c36:	mov    r15,rax
  403c39:	mov    rdx,rax
  403c3c:	mov    rcx,rsi
  403c3f:	mov    r8,rdi
  403c42:	call   0x402d60
  403c47:	mov    rcx,rsi
  403c4a:	call   0x4036e0
  403c4f:	mov    rax,r15
  403c52:	jmp    0x403c65
  403c54:	test   cl,0x3
  403c57:	jne    0x403c63
  403c59:	mov    rcx,rsi
  403c5c:	call   0x403190
  403c61:	jmp    0x403c65
  403c63:	xor    eax,eax
  403c65:	lea    rsp,[rbp+0x28]
  403c69:	pop    rbx
  403c6a:	pop    rsi
  403c6b:	pop    rdi
  403c6c:	pop    r14
  403c6e:	pop    r15
  403c70:	pop    rbp
  403c71:	ret    
  403c72:	int3   
  403c73:	int3   
  403c74:	int3   
  403c75:	int3   
  403c76:	int3   
  403c77:	int3   
  403c78:	int3   
  403c79:	int3   
  403c7a:	int3   
  403c7b:	int3   
  403c7c:	int3   
  403c7d:	int3   
  403c7e:	int3   
  403c7f:	int3   
  403c80:	push   rbp
  403c81:	push   rbx
  403c82:	sub    rsp,0x28
  403c86:	mov    rbp,rsp
  403c89:	lea    rbx,[rcx-0x1]
  403c8d:	and    rbx,0xfffffffffffffff8
  403c94:	call   0x403310
  403c99:	cmp    rax,0x1
  403c9d:	sbb    rcx,rcx
  403ca0:	lea    rdx,[rbx+rax*1]
  403ca4:	or     rbx,rcx
  403ca7:	je     0x403cc4
  403ca9:	cmp    rbx,0x40a28
  403cb0:	jae    0x403cca
  403cb2:	neg    rbx
  403cb5:	pxor   xmm0,xmm0
  403cb9:	movdqa XMMWORD PTR [rbx+rdx*1],xmm0
  403cbe:	add    rbx,0x10
  403cc2:	js     0x403cb9
  403cc4:	xor    rcx,rcx
  403cc7:	mov    QWORD PTR [rdx],rcx
  403cca:	lea    rsp,[rbp+0x28]
  403cce:	pop    rbx
  403ccf:	pop    rbp
  403cd0:	ret    
  403cd1:	int3   
  403cd2:	int3   
  403cd3:	int3   
  403cd4:	int3   
  403cd5:	int3   
  403cd6:	int3   
  403cd7:	int3   
  403cd8:	int3   
  403cd9:	int3   
  403cda:	int3   
  403cdb:	int3   
  403cdc:	int3   
  403cdd:	int3   
  403cde:	int3   
  403cdf:	int3   
  403ce0:	push   rbp
  403ce1:	push   rdi
  403ce2:	push   rsi
  403ce3:	push   rbx
  403ce4:	sub    rsp,0x48
  403ce8:	mov    rbp,rsp
  403ceb:	mov    rbx,rcx
  403cee:	mov    rsi,rdx
  403cf1:	cmp    BYTE PTR [rip+0x13380],0x0        # 0x417078
  403cf8:	je     0x403d9b
  403cfe:	mov    ecx,0xfffffff4
  403d04:	call   0x4028a0
  403d09:	mov    rdi,rax
  403d0c:	mov    rcx,rsi
  403d0f:	call   0x408b20
  403d14:	mov    rcx,rdi
  403d17:	mov    rdx,rsi
  403d1a:	mov    r8d,eax
  403d1d:	lea    r9,[rbp+0x3c]
  403d21:	mov    QWORD PTR [rsp+0x20],0x0
  403d2a:	call   0x402bf0
  403d2f:	mov    ecx,0xfffffff4
  403d35:	call   0x4028a0
  403d3a:	mov    rsi,rax
  403d3d:	mov    rcx,QWORD PTR [rip+0x1034c]        # 0x414090
  403d44:	call   0x408b20
  403d49:	mov    rcx,rsi
  403d4c:	mov    rdx,QWORD PTR [rip+0x1033d]        # 0x414090
  403d53:	mov    r8d,eax
  403d56:	lea    r9,[rbp+0x3c]
  403d5a:	mov    QWORD PTR [rsp+0x20],0x0
  403d63:	call   0x402bf0
  403d68:	mov    ecx,0xfffffff4
  403d6e:	call   0x4028a0
  403d73:	mov    rsi,rax
  403d76:	mov    rcx,rbx
  403d79:	call   0x408b20
  403d7e:	mov    rcx,rsi
  403d81:	mov    rdx,rbx
  403d84:	mov    r8d,eax
  403d87:	lea    r9,[rbp+0x3c]
  403d8b:	mov    QWORD PTR [rsp+0x20],0x0
  403d94:	call   0x402bf0
  403d99:	jmp    0x403db0
  403d9b:	xor    rcx,rcx
  403d9e:	mov    rdx,rbx
  403da1:	mov    r8,rsi
  403da4:	mov    r9d,0x2010
  403dab:	call   0x402b00
  403db0:	lea    rsp,[rbp+0x48]
  403db4:	pop    rbx
  403db5:	pop    rsi
  403db6:	pop    rdi
  403db7:	pop    rbp
  403db8:	ret    
  403db9:	int3   
  403dba:	int3   
  403dbb:	int3   
  403dbc:	int3   
  403dbd:	int3   
  403dbe:	int3   
  403dbf:	int3   
  403dc0:	mov    edx,DWORD PTR [rcx-0x8]
  403dc3:	and    edx,0xfffffff0
  403dc6:	mov    edx,edx
  403dc8:	lea    rax,[rcx+rdx*1]
  403dcc:	mov    edx,DWORD PTR [rax-0x8]
  403dcf:	and    edx,0xfffffff0
  403dd2:	test   edx,edx
  403dd4:	jne    0x403dd9
  403dd6:	xor    rax,rax
  403dd9:	ret    
  403dda:	int3   
  403ddb:	int3   
  403ddc:	int3   
  403ddd:	int3   
  403dde:	int3   
  403ddf:	int3   
  403de0:	cmp    DWORD PTR [rip+0x13d21],0x0        # 0x417b08
  403de7:	je     0x403e02
  403de9:	cmp    QWORD PTR [rip+0x13d10],rcx        # 0x417b00
  403df0:	jb     0x403e02
  403df2:	lea    rax,[rcx+0x13fff0]
  403df9:	cmp    QWORD PTR [rip+0x13d00],rax        # 0x417b00
  403e00:	jbe    0x403e08
  403e02:	lea    rax,[rcx+0x20]
  403e06:	jmp    0x403e20
  403e08:	cmp    DWORD PTR [rip+0x13cf6],0x13ffd0        # 0x417b08
  403e12:	je     0x403e1d
  403e14:	mov    rax,QWORD PTR [rip+0x13ce5]        # 0x417b00
  403e1b:	jmp    0x403e20
  403e1d:	xor    rax,rax
  403e20:	ret    
  403e21:	int3   
  403e22:	int3   
  403e23:	int3   
  403e24:	int3   
  403e25:	int3   
  403e26:	int3   
  403e27:	int3   
  403e28:	int3   
  403e29:	int3   
  403e2a:	int3   
  403e2b:	int3   
  403e2c:	int3   
  403e2d:	int3   
  403e2e:	int3   
  403e2f:	int3   
  403e30:	lea    rax,[rcx+0x30]
  403e34:	mov    QWORD PTR [rdx],rax
  403e37:	mov    rax,QWORD PTR [rcx]
  403e3a:	cmp    QWORD PTR [rax+0x28],rcx
  403e3e:	jne    0x403e50
  403e40:	mov    rax,QWORD PTR [rcx]
  403e43:	mov    rdx,QWORD PTR [rcx]
  403e46:	mov    rax,QWORD PTR [rax+0x18]
  403e4a:	cmp    rax,QWORD PTR [rdx+0x20]
  403e4e:	jbe    0x403e70
  403e50:	mov    eax,DWORD PTR [rcx-0x8]
  403e53:	and    eax,0xfffffff0
  403e56:	mov    eax,eax
  403e58:	lea    rax,[rcx+rax*1]
  403e5c:	mov    rcx,QWORD PTR [rcx]
  403e5f:	movzx  rcx,WORD PTR [rcx+0x2]
  403e64:	neg    rcx
  403e67:	lea    rax,[rax+rcx*1]
  403e6b:	mov    QWORD PTR [r8],rax
  403e6e:	jmp    0x403e7e
  403e70:	mov    rax,QWORD PTR [rcx]
  403e73:	mov    rax,QWORD PTR [rax+0x18]
  403e77:	lea    rax,[rax-0x1]
  403e7b:	mov    QWORD PTR [r8],rax
  403e7e:	ret    
  403e7f:	int3   
  403e80:	push   rbp
  403e81:	push   rsi
  403e82:	push   rbx
  403e83:	sub    rsp,0x40
  403e87:	mov    rbp,rsp
  403e8a:	mov    rax,rcx
  403e8d:	mov    rbx,rdx
  403e90:	xor    rsi,rsi
  403e93:	mov    rcx,rax
  403e96:	mov    r8d,0xa
  403e9d:	xor    edx,edx
  403e9f:	div    r8
  403ea2:	mov    rdx,rax
  403ea5:	add    rdx,rdx
  403ea8:	lea    rdx,[rdx+rdx*4]
  403eac:	sub    rcx,rdx
  403eaf:	add    esi,0x1
  403eb2:	mov    edx,0x14
  403eb8:	sub    edx,esi
  403eba:	mov    edx,edx
  403ebc:	lea    rcx,[rcx+0x30]
  403ec0:	mov    BYTE PTR [rdx+rbp*1+0x2c],cl
  403ec4:	test   rax,rax
  403ec7:	jne    0x403e93
  403ec9:	mov    eax,0x14
  403ecf:	sub    eax,esi
  403ed1:	mov    eax,eax
  403ed3:	lea    rcx,[rax+rbp*1+0x2c]
  403ed8:	mov    rdx,rbx
  403edb:	mov    r8d,esi
  403ede:	call   0x405240
  403ee3:	mov    esi,esi
  403ee5:	lea    rax,[rbx+rsi*1]
  403ee9:	lea    rsp,[rbp+0x40]
  403eed:	pop    rbx
  403eee:	pop    rsi
  403eef:	pop    rbp
  403ef0:	ret    
  403ef1:	int3   
  403ef2:	int3   
  403ef3:	int3   
  403ef4:	int3   
  403ef5:	int3   
  403ef6:	int3   
  403ef7:	int3   
  403ef8:	int3   
  403ef9:	int3   
  403efa:	int3   
  403efb:	int3   
  403efc:	int3   
  403efd:	int3   
  403efe:	int3   
  403eff:	int3   
  403f00:	push   rsi
  403f01:	push   rbx
  403f02:	sub    rsp,0x28
  403f06:	mov    rbx,rdx
  403f09:	mov    esi,r8d
  403f0c:	mov    rdx,rbx
  403f0f:	mov    r8d,esi
  403f12:	call   0x405240
  403f17:	mov    esi,esi
  403f19:	lea    rax,[rbx+rsi*1]
  403f1d:	add    rsp,0x28
  403f21:	pop    rbx
  403f22:	pop    rsi
  403f23:	ret    
  403f24:	int3   
  403f25:	int3   
  403f26:	int3   
  403f27:	int3   
  403f28:	int3   
  403f29:	int3   
  403f2a:	int3   
  403f2b:	int3   
  403f2c:	int3   
  403f2d:	int3   
  403f2e:	int3   
  403f2f:	int3   
  403f30:	push   rbx
  403f31:	sub    rsp,0x20
  403f35:	mov    rbx,rdx
  403f38:	test   rcx,rcx
  403f3b:	je     0x403f56
  403f3d:	mov    rax,QWORD PTR [rcx-0x88]
  403f44:	lea    rcx,[rax+0x1]
  403f48:	mov    rdx,rbx
  403f4b:	movzx  r8,BYTE PTR [rax]
  403f4f:	call   0x403f00
  403f54:	jmp    0x403f74
  403f56:	mov    rcx,QWORD PTR [rip+0x1011b]        # 0x414078
  403f5d:	call   0x408b20
  403f62:	mov    rcx,QWORD PTR [rip+0x1010f]        # 0x414078
  403f69:	mov    rdx,rbx
  403f6c:	mov    r8d,eax
  403f6f:	call   0x403f00
  403f74:	add    rsp,0x20
  403f78:	pop    rbx
  403f79:	ret    
  403f7a:	int3   
  403f7b:	int3   
  403f7c:	int3   
  403f7d:	int3   
  403f7e:	int3   
  403f7f:	int3   
  403f80:	push   rbp
  403f81:	push   rbx
  403f82:	sub    rsp,0x28
  403f86:	mov    rbp,rsp
  403f89:	mov    rbx,rcx
  403f8c:	cmp    rdx,0xffff
  403f93:	jbe    0x404006
  403f95:	mov    rax,rdx
  403f98:	test   rax,0x3
  403f9f:	jne    0x404006
  403fa1:	cmp    QWORD PTR [rbx+0x20],rdx
  403fa5:	ja     0x403fbc
  403fa7:	mov    rax,QWORD PTR [rbx+0x20]
  403fab:	mov    rcx,QWORD PTR [rbx+0x38]
  403faf:	lea    rax,[rax+rcx*1]
  403fb3:	lea    rcx,[rdx+0x8]
  403fb7:	cmp    rax,rcx
  403fba:	jae    0x403fd7
  403fbc:	mov    QWORD PTR [rbx+0x38],0x0
  403fc4:	mov    rcx,rdx
  403fc7:	lea    rdx,[rbx+0x20]
  403fcb:	mov    r8d,0x30
  403fd2:	call   0x402b40
  403fd7:	cmp    QWORD PTR [rbx+0x38],0x8
  403fdc:	jb     0x403ffd
  403fde:	cmp    DWORD PTR [rbx+0x40],0x1000
  403fe5:	jne    0x403ffd
  403fe7:	mov    eax,DWORD PTR [rbx+0x44]
  403fea:	test   eax,0xf6
  403ff0:	je     0x403ffd
  403ff2:	mov    eax,DWORD PTR [rbx+0x44]
  403ff5:	test   eax,0x100
  403ffb:	je     0x404002
  403ffd:	xor    rax,rax
  404000:	jmp    0x404009
  404002:	mov    al,0x1
  404004:	jmp    0x404009
  404006:	xor    rax,rax
  404009:	lea    rsp,[rbp+0x28]
  40400d:	pop    rbx
  40400e:	pop    rbp
  40400f:	ret    
  404010:	push   rbp
  404011:	push   r13
  404013:	push   rdi
  404014:	push   rsi
  404015:	push   rbx
  404016:	sub    rsp,0x20
  40401a:	mov    rbp,rsp
  40401d:	mov    rbx,rcx
  404020:	mov    rsi,rdx
  404023:	mov    edi,r8d
  404026:	cmp    edi,0x3e8
  40402c:	jge    0x404092
  40402e:	mov    rcx,rbx
  404031:	lea    rdx,[rsi-0xc8]
  404038:	call   0x403f80
  40403d:	test   al,al
  40403f:	je     0x404092
  404041:	mov    rcx,rbx
  404044:	lea    rdx,[rsi-0x78]
  404048:	call   0x403f80
  40404d:	test   al,al
  40404f:	je     0x404092
  404051:	mov    r13,QWORD PTR [rsi-0x78]
  404055:	cmp    QWORD PTR [rsi-0xc8],rsi
  40405c:	jne    0x404089
  40405e:	test   r13,r13
  404061:	je     0x40408e
  404063:	mov    rcx,rbx
  404066:	mov    rdx,r13
  404069:	call   0x403f80
  40406e:	test   al,al
  404070:	je     0x404089
  404072:	mov    rcx,rbx
  404075:	mov    rdx,QWORD PTR [r13+0x0]
  404079:	mov    r8d,edi
  40407c:	add    r8d,0x1
  404080:	call   0x404010
  404085:	test   al,al
  404087:	jne    0x40408e
  404089:	xor    rax,rax
  40408c:	jmp    0x404095
  40408e:	mov    al,0x1
  404090:	jmp    0x404095
  404092:	xor    rax,rax
  404095:	lea    rsp,[rbp+0x20]
  404099:	pop    rbx
  40409a:	pop    rsi
  40409b:	pop    rdi
  40409c:	pop    r13
  40409e:	pop    rbp
  40409f:	ret    
  4040a0:	push   rbp
  4040a1:	push   rbx
  4040a2:	sub    rsp,0x58
  4040a6:	mov    rbp,rsp
  4040a9:	mov    rbx,QWORD PTR [rcx]
  4040ac:	mov    QWORD PTR [rbp+0x38],0x0
  4040b4:	mov    rcx,rbp
  4040b7:	mov    rdx,rbx
  4040ba:	xor    r8,r8
  4040bd:	call   0x404010
  4040c2:	test   al,al
  4040c4:	jne    0x4040c9
  4040c6:	xor    rbx,rbx
  4040c9:	mov    rax,rbx
  4040cc:	lea    rsp,[rbp+0x58]
  4040d0:	pop    rbx
  4040d1:	pop    rbp
  4040d2:	ret    
  4040d3:	int3   
  4040d4:	int3   
  4040d5:	int3   
  4040d6:	int3   
  4040d7:	int3   
  4040d8:	int3   
  4040d9:	int3   
  4040da:	int3   
  4040db:	int3   
  4040dc:	int3   
  4040dd:	int3   
  4040de:	int3   
  4040df:	int3   
  4040e0:	sub    rsp,0x28
  4040e4:	cmp    BYTE PTR [rip+0x12f8e],0x0        # 0x417079
  4040eb:	je     0x404136
  4040ed:	jmp    0x404120
  4040ef:	cmp    BYTE PTR [rip+0x1388f],0x0        # 0x417985
  4040f6:	jne    0x404120
  4040f8:	xor    rcx,rcx
  4040fb:	call   0x402be0
  404100:	xor    rcx,rcx
  404103:	mov    dl,0x1
  404105:	lea    r8,[rip+0x17ab4]        # 0x41bbc0
  40410c:	call   0x402cd0
  404111:	test   al,al
  404113:	je     0x404135
  404115:	mov    ecx,0xa
  40411b:	call   0x402be0
  404120:	xor    rcx,rcx
  404123:	mov    dl,0x1
  404125:	lea    r8,[rip+0x17a94]        # 0x41bbc0
  40412c:	call   0x402cd0
  404131:	test   al,al
  404133:	jne    0x4040ef
  404135:	nop
  404136:	cmp    QWORD PTR [rip+0x17a7a],0x0        # 0x41bbb8
  40413e:	jne    0x404163
  404140:	xor    rcx,rcx
  404143:	mov    edx,0x10000
  404149:	mov    r8d,0x1000
  404150:	mov    r9d,0x4
  404157:	call   0x402bc0
  40415c:	mov    QWORD PTR [rip+0x17a55],rax        # 0x41bbb8
  404163:	cmp    QWORD PTR [rip+0x17a4d],0x0        # 0x41bbb8
  40416b:	setne  al
  40416e:	add    rsp,0x28
  404172:	ret    
  404173:	int3   
  404174:	int3   
  404175:	int3   
  404176:	int3   
  404177:	int3   
  404178:	int3   
  404179:	int3   
  40417a:	int3   
  40417b:	int3   
  40417c:	int3   
  40417d:	int3   
  40417e:	int3   
  40417f:	int3   
  404180:	push   rbx
  404181:	sub    rsp,0x20
  404185:	mov    rbx,rcx
  404188:	call   0x4040e0
  40418d:	test   al,al
  40418f:	je     0x4041c4
  404191:	mov    rax,QWORD PTR [rip+0x17a20]        # 0x41bbb8
  404198:	cmp    DWORD PTR [rax],0x1ffe
  40419e:	jge    0x4041c4
  4041a0:	mov    rax,QWORD PTR [rip+0x17a11]        # 0x41bbb8
  4041a7:	mov    rcx,QWORD PTR [rip+0x17a0a]        # 0x41bbb8
  4041ae:	movsxd rcx,DWORD PTR [rcx]
  4041b1:	mov    QWORD PTR [rax+rcx*8+0x8],rbx
  4041b6:	mov    rax,QWORD PTR [rip+0x179fb]        # 0x41bbb8
  4041bd:	add    DWORD PTR [rax],0x1
  4041c0:	mov    al,0x1
  4041c2:	jmp    0x4041c7
  4041c4:	xor    rax,rax
  4041c7:	mov    BYTE PTR [rip+0x179f2],0x0        # 0x41bbc0
  4041ce:	add    rsp,0x20
  4041d2:	pop    rbx
  4041d3:	ret    
  4041d4:	int3   
  4041d5:	int3   
  4041d6:	int3   
  4041d7:	int3   
  4041d8:	int3   
  4041d9:	int3   
  4041da:	int3   
  4041db:	int3   
  4041dc:	int3   
  4041dd:	int3   
  4041de:	int3   
  4041df:	int3   
  4041e0:	push   rsi
  4041e1:	push   rbx
  4041e2:	sub    rsp,0x28
  4041e6:	mov    rbx,rcx
  4041e9:	xor    rsi,rsi
  4041ec:	cmp    QWORD PTR [rip+0x179c4],0x0        # 0x41bbb8
  4041f4:	je     0x404268
  4041f6:	call   0x4040e0
  4041fb:	test   al,al
  4041fd:	je     0x404268
  4041ff:	xor    rax,rax
  404202:	mov    rcx,QWORD PTR [rip+0x179af]        # 0x41bbb8
  404209:	mov    ecx,DWORD PTR [rcx]
  40420b:	sub    ecx,0x1
  40420e:	cmp    eax,ecx
  404210:	jg     0x404260
  404212:	add    ecx,0x1
  404215:	mov    rdx,QWORD PTR [rip+0x1799c]        # 0x41bbb8
  40421c:	movsxd r8,eax
  40421f:	cmp    QWORD PTR [rdx+r8*8+0x8],rbx
  404224:	jne    0x404259
  404226:	mov    rcx,QWORD PTR [rip+0x1798b]        # 0x41bbb8
  40422d:	movsxd rax,eax
  404230:	mov    rdx,QWORD PTR [rip+0x17981]        # 0x41bbb8
  404237:	mov    r8,QWORD PTR [rip+0x1797a]        # 0x41bbb8
  40423e:	movsxd r8,DWORD PTR [r8]
  404241:	mov    rdx,QWORD PTR [rdx+r8*8]
  404245:	mov    QWORD PTR [rcx+rax*8+0x8],rdx
  40424a:	mov    rax,QWORD PTR [rip+0x17967]        # 0x41bbb8
  404251:	sub    DWORD PTR [rax],0x1
  404254:	mov    sil,0x1
  404257:	jmp    0x404260
  404259:	add    eax,0x1
  40425c:	cmp    eax,ecx
  40425e:	jne    0x404215
  404260:	nop
  404261:	mov    BYTE PTR [rip+0x17958],0x0        # 0x41bbc0
  404268:	rex mov eax,esi
  40426b:	add    rsp,0x28
  40426f:	pop    rbx
  404270:	pop    rsi
  404271:	ret    
  404272:	int3   
  404273:	int3   
  404274:	int3   
  404275:	int3   
  404276:	int3   
  404277:	int3   
  404278:	int3   
  404279:	int3   
  40427a:	int3   
  40427b:	int3   
  40427c:	int3   
  40427d:	int3   
  40427e:	int3   
  40427f:	int3   
  404280:	push   rbp
  404281:	push   r13
  404283:	push   rdi
  404284:	push   rsi
  404285:	push   rbx
  404286:	sub    rsp,0x30
  40428a:	mov    rbp,rsp
  40428d:	mov    rbx,rcx
  404290:	mov    rsi,rdx
  404293:	mov    rax,QWORD PTR [rsi]
  404296:	lea    rcx,[rip+0xfe13]        # 0x4140b0
  40429d:	neg    rcx
  4042a0:	lea    rax,[rax+rcx*1]
  4042a4:	mov    ecx,0x40
  4042aa:	xor    edx,edx
  4042ac:	div    rcx
  4042af:	mov    eax,eax
  4042b1:	shl    rax,0x9
  4042b5:	lea    r13,[rbx+rax*8+0x10050]
  4042bd:	mov    rcx,rsi
  4042c0:	lea    rdx,[rbp+0x28]
  4042c4:	lea    r8,[rbp+0x20]
  4042c8:	call   0x403e30
  4042cd:	jmp    0x404462
  4042d2:	mov    rax,QWORD PTR [rbp+0x28]
  4042d6:	mov    rax,QWORD PTR [rax-0x8]
  4042da:	test   rax,0x1
  4042e1:	jne    0x404456
  4042e7:	mov    rcx,QWORD PTR [rbp+0x28]
  4042eb:	call   0x4041e0
  4042f0:	test   al,al
  4042f2:	jne    0x404456
  4042f8:	mov    BYTE PTR [rbx+0x1004f],0x0
  4042ff:	xor    rdi,rdi
  404302:	mov    rcx,QWORD PTR [rbp+0x28]
  404306:	call   0x4040a0
  40430b:	test   rax,rax
  40430e:	jne    0x404403
  404314:	mov    rax,QWORD PTR [rbp+0x28]
  404318:	cmp    DWORD PTR [rax+0x8],0x100
  40431f:	jge    0x404448
  404325:	mov    rax,QWORD PTR [rbp+0x28]
  404329:	mov    ecx,DWORD PTR [rax+0xc]
  40432c:	mov    rax,QWORD PTR [rbp+0x28]
  404330:	movzx  r8d,WORD PTR [rax+0x6]
  404335:	cmp    r8d,0x1
  404339:	je     0x404345
  40433b:	cmp    r8d,0x2
  40433f:	jne    0x404448
  404345:	test   ecx,ecx
  404347:	jle    0x404448
  40434d:	mov    rax,QWORD PTR [rsi]
  404350:	movzx  eax,WORD PTR [rax+0x2]
  404354:	sub    eax,0x18
  404357:	cdq    
  404358:	idiv   r8d
  40435b:	cmp    eax,ecx
  40435d:	jle    0x404448
  404363:	mov    r9b,0x1
  404366:	cmp    r8d,0x1
  40436a:	jne    0x4043bc
  40436c:	mov    rax,QWORD PTR [rbp+0x28]
  404370:	lea    rdx,[rax+0x10]
  404374:	mov    eax,0x1
  40437a:	cmp    eax,ecx
  40437c:	jg     0x40439e
  40437e:	add    ecx,0x1
  404381:	test   r9b,r9b
  404384:	je     0x40438b
  404386:	cmp    BYTE PTR [rdx],0x20
  404389:	jae    0x404390
  40438b:	xor    r9,r9
  40438e:	jmp    0x404393
  404390:	mov    r9b,0x1
  404393:	add    rdx,0x1
  404397:	add    eax,0x1
  40439a:	cmp    eax,ecx
  40439c:	jne    0x404381
  40439e:	nop
  40439f:	test   r9b,r9b
  4043a2:	je     0x404448
  4043a8:	cmp    BYTE PTR [rdx],0x0
  4043ab:	jne    0x404448
  4043b1:	mov    edi,0x1
  4043b7:	jmp    0x404448
  4043bc:	mov    rax,QWORD PTR [rbp+0x28]
  4043c0:	lea    rdx,[rax+0x10]
  4043c4:	mov    eax,0x1
  4043ca:	cmp    eax,ecx
  4043cc:	jg     0x4043ef
  4043ce:	add    ecx,0x1
  4043d1:	test   r9b,r9b
  4043d4:	je     0x4043dc
  4043d6:	cmp    WORD PTR [rdx],0x20
  4043da:	jae    0x4043e1
  4043dc:	xor    r9,r9
  4043df:	jmp    0x4043e4
  4043e1:	mov    r9b,0x1
  4043e4:	add    rdx,0x2
  4043e8:	add    eax,0x1
  4043eb:	cmp    eax,ecx
  4043ed:	jne    0x4043d1
  4043ef:	nop
  4043f0:	test   r9b,r9b
  4043f3:	je     0x404448
  4043f5:	cmp    WORD PTR [rdx],0x0
  4043f9:	jne    0x404448
  4043fb:	mov    edi,0x2
  404401:	jmp    0x404448
  404403:	mov    edi,0x3
  404409:	movsxd rcx,edi
  40440c:	add    rcx,rcx
  40440f:	cmp    QWORD PTR [r13+rcx*8+0x0],rax
  404414:	je     0x40442f
  404416:	movsxd rcx,edi
  404419:	add    rcx,rcx
  40441c:	cmp    QWORD PTR [r13+rcx*8+0x0],0x0
  404422:	je     0x40442f
  404424:	add    edi,0x1
  404427:	cmp    edi,0xff
  40442d:	jle    0x404409
  40442f:	nop
  404430:	cmp    edi,0xff
  404436:	jg     0x404445
  404438:	movsxd rcx,edi
  40443b:	add    rcx,rcx
  40443e:	mov    QWORD PTR [r13+rcx*8+0x0],rax
  404443:	jmp    0x404448
  404445:	xor    rdi,rdi
  404448:	movsxd rdi,edi
  40444b:	add    rdi,rdi
  40444e:	lea    rax,[r13+rdi*8+0x8]
  404453:	add    DWORD PTR [rax],0x1
  404456:	mov    rax,QWORD PTR [rsi]
  404459:	movzx  rax,WORD PTR [rax+0x2]
  40445e:	add    QWORD PTR [rbp+0x28],rax
  404462:	mov    rax,QWORD PTR [rbp+0x28]
  404466:	cmp    rax,QWORD PTR [rbp+0x20]
  40446a:	jbe    0x4042d2
  404470:	lea    rsp,[rbp+0x30]
  404474:	pop    rbx
  404475:	pop    rsi
  404476:	pop    rdi
  404477:	pop    r13
  404479:	pop    rbp
  40447a:	ret    
  40447b:	int3   
  40447c:	int3   
  40447d:	int3   
  40447e:	int3   
  40447f:	int3   
  404480:	push   rbp
  404481:	push   r14
  404483:	push   r13
  404485:	push   rdi
  404486:	push   rsi
  404487:	push   rbx
  404488:	mov    eax,0xfa8
  40448e:	sub    rax,0x1000
  404494:	mov    BYTE PTR [rsp+rax*1],al
  404497:	cmp    rax,0xfffffffffffc1fa8
  40449e:	ja     0x40448e
  4044a0:	sub    rsp,0x3e058
  4044a7:	mov    rbp,rsp
  4044aa:	lea    rcx,[rbp+0x10050]
  4044b1:	mov    edx,0x2e000
  4044b7:	xor    r8,r8
  4044ba:	call   0x405bf0
  4044bf:	lea    rcx,[rbp+0x8048]
  4044c6:	mov    edx,0x8000
  4044cc:	xor    r8,r8
  4044cf:	call   0x405bf0
  4044d4:	xor    rax,rax
  4044d7:	mov    DWORD PTR [rbp+0x2c],eax
  4044da:	mov    BYTE PTR [rbp+0x1004f],0x1
  4044e1:	mov    rdi,QWORD PTR [rip+0x135f8]        # 0x417ae0
  4044e8:	jmp    0x40457a
  4044ed:	mov    rcx,rdi
  4044f0:	call   0x403de0
  4044f5:	mov    rsi,rax
  4044f8:	test   rsi,rsi
  4044fb:	je     0x404575
  4044fd:	mov    rax,QWORD PTR [rsi-0x8]
  404501:	mov    rcx,rax
  404504:	test   rcx,0x1
  40450b:	jne    0x404565
  40450d:	mov    rcx,rax
  404510:	test   rcx,0x4
  404517:	je     0x404526
  404519:	mov    rcx,rbp
  40451c:	mov    rdx,rsi
  40451f:	call   0x404280
  404524:	jmp    0x404565
  404526:	mov    ecx,DWORD PTR [rbp+0x2c]
  404529:	cmp    ecx,0x1000
  40452f:	jge    0x404565
  404531:	mov    ebx,eax
  404533:	and    ebx,0xfffffff0
  404536:	sub    ebx,0x8
  404539:	mov    rcx,rsi
  40453c:	call   0x4041e0
  404541:	test   al,al
  404543:	jne    0x404565
  404545:	mov    BYTE PTR [rbp+0x1004f],0x0
  40454c:	mov    eax,DWORD PTR [rbp+0x2c]
  40454f:	movsxd rax,eax
  404552:	mov    ebx,ebx
  404554:	mov    QWORD PTR [rbp+rax*8+0x8048],rbx
  40455c:	mov    eax,DWORD PTR [rbp+0x2c]
  40455f:	add    eax,0x1
  404562:	mov    DWORD PTR [rbp+0x2c],eax
  404565:	mov    rcx,rsi
  404568:	call   0x403dc0
  40456d:	mov    rsi,rax
  404570:	test   rsi,rsi
  404573:	jne    0x4044fd
  404575:	nop
  404576:	mov    rdi,QWORD PTR [rdi+0x8]
  40457a:	lea    rax,[rip+0x13557]        # 0x417ad8
  404581:	cmp    rdi,rax
  404584:	jne    0x4044ed
  40458a:	mov    rbx,QWORD PTR [rip+0x1760f]        # 0x41bba0
  404591:	jmp    0x4045ce
  404593:	lea    rcx,[rbx+0x20]
  404597:	call   0x4041e0
  40459c:	test   al,al
  40459e:	jne    0x4045ca
  4045a0:	mov    BYTE PTR [rbp+0x1004f],0x0
  4045a7:	mov    rax,QWORD PTR [rbx+0x18]
  4045ab:	and    rax,0xfffffffffffffff0
  4045af:	lea    rax,[rax-0x28]
  4045b3:	mov    ecx,DWORD PTR [rbp+0x2c]
  4045b6:	movsxd rcx,ecx
  4045b9:	mov    QWORD PTR [rbp+rcx*8+0x8048],rax
  4045c1:	mov    eax,DWORD PTR [rbp+0x2c]
  4045c4:	add    eax,0x1
  4045c7:	mov    DWORD PTR [rbp+0x2c],eax
  4045ca:	mov    rbx,QWORD PTR [rbx+0x8]
  4045ce:	lea    rax,[rip+0x175c3]        # 0x41bb98
  4045d5:	cmp    rbx,rax
  4045d8:	je     0x4045e5
  4045da:	mov    eax,DWORD PTR [rbp+0x2c]
  4045dd:	cmp    eax,0x1000
  4045e3:	jl     0x404593
  4045e5:	cmp    BYTE PTR [rbp+0x1004f],0x0
  4045ec:	jne    0x404975
  4045f2:	xor    rax,rax
  4045f5:	mov    BYTE PTR [rbp+0x3f],al
  4045f8:	xor    r13,r13
  4045fb:	mov    rcx,QWORD PTR [rip+0xfa56]        # 0x414058
  404602:	call   0x408b20
  404607:	mov    rcx,QWORD PTR [rip+0xfa4a]        # 0x414058
  40460e:	lea    rdx,[rbp+0x48]
  404612:	mov    r8d,eax
  404615:	call   0x403f00
  40461a:	mov    QWORD PTR [rbp+0x30],rax
  40461e:	xor    rsi,rsi
  404621:	lea    rax,[rip+0xfa8a]        # 0x4140b2
  404628:	mov    ecx,esi
  40462a:	add    rcx,rcx
  40462d:	add    rcx,rcx
  404630:	add    rcx,rcx
  404633:	movzx  r14d,WORD PTR [rax+rcx*8]
  404638:	sub    r14d,0x8
  40463c:	xor    rbx,rbx
  40463f:	mov    edi,0xff
  404645:	lea    rax,[rbp+0x7847]
  40464c:	mov    rcx,QWORD PTR [rbp+0x30]
  404650:	cmp    rcx,rax
  404653:	mov    QWORD PTR [rbp+0x30],rcx
  404657:	ja     0x404852
  40465d:	mov    eax,esi
  40465f:	shl    rax,0x9
  404663:	lea    rax,[rbp+rax*8+0x10058]
  40466b:	mov    ecx,edi
  40466d:	add    rcx,rcx
  404670:	cmp    DWORD PTR [rax+rcx*8],0x0
  404674:	jbe    0x404846
  40467a:	movzx  rax,BYTE PTR [rbp+0x3f]
  40467f:	test   al,al
  404681:	jne    0x4046ab
  404683:	mov    rcx,QWORD PTR [rip+0xf9d6]        # 0x414060
  40468a:	call   0x408b20
  40468f:	mov    rcx,QWORD PTR [rip+0xf9ca]        # 0x414060
  404696:	mov    rdx,QWORD PTR [rbp+0x30]
  40469a:	mov    r8d,eax
  40469d:	call   0x403f00
  4046a2:	mov    QWORD PTR [rbp+0x30],rax
  4046a6:	mov    al,0x1
  4046a8:	mov    BYTE PTR [rbp+0x3f],al
  4046ab:	test   bl,bl
  4046ad:	jne    0x40473a
  4046b3:	mov    rax,QWORD PTR [rbp+0x30]
  4046b7:	mov    BYTE PTR [rax],0xd
  4046ba:	add    rax,0x1
  4046be:	mov    QWORD PTR [rbp+0x30],rax
  4046c2:	mov    BYTE PTR [rax],0xa
  4046c5:	add    rax,0x1
  4046c9:	mov    QWORD PTR [rbp+0x30],rax
  4046cd:	mov    ecx,r13d
  4046d0:	add    ecx,0x1
  4046d3:	mov    ecx,ecx
  4046d5:	mov    rdx,QWORD PTR [rbp+0x30]
  4046d9:	call   0x403e80
  4046de:	mov    QWORD PTR [rbp+0x30],rax
  4046e2:	mov    BYTE PTR [rax],0x20
  4046e5:	add    rax,0x1
  4046e9:	mov    QWORD PTR [rbp+0x30],rax
  4046ed:	mov    BYTE PTR [rax],0x2d
  4046f0:	add    rax,0x1
  4046f4:	mov    QWORD PTR [rbp+0x30],rax
  4046f8:	mov    BYTE PTR [rax],0x20
  4046fb:	add    rax,0x1
  4046ff:	mov    QWORD PTR [rbp+0x30],rax
  404703:	mov    ecx,r14d
  404706:	mov    rdx,QWORD PTR [rbp+0x30]
  40470a:	call   0x403e80
  40470f:	mov    QWORD PTR [rbp+0x30],rax
  404713:	mov    rcx,QWORD PTR [rip+0xf956]        # 0x414070
  40471a:	call   0x408b20
  40471f:	mov    rcx,QWORD PTR [rip+0xf94a]        # 0x414070
  404726:	mov    rdx,QWORD PTR [rbp+0x30]
  40472a:	mov    r8d,eax
  40472d:	call   0x403f00
  404732:	mov    QWORD PTR [rbp+0x30],rax
  404736:	mov    bl,0x1
  404738:	jmp    0x404754
  40473a:	mov    rax,QWORD PTR [rbp+0x30]
  40473e:	mov    BYTE PTR [rax],0x2c
  404741:	add    rax,0x1
  404745:	mov    QWORD PTR [rbp+0x30],rax
  404749:	mov    BYTE PTR [rax],0x20
  40474c:	add    rax,0x1
  404750:	mov    QWORD PTR [rbp+0x30],rax
  404754:	mov    eax,edi
  404756:	sub    eax,0x1
  404759:	cmp    eax,0xffffffff
  40475c:	je     0x40476b
  40475e:	test   eax,eax
  404760:	je     0x404790
  404762:	sub    eax,0x1
  404765:	test   eax,eax
  404767:	jne    0x4047da
  404769:	jmp    0x4047b5
  40476b:	mov    rcx,QWORD PTR [rip+0xf906]        # 0x414078
  404772:	call   0x408b20
  404777:	mov    rcx,QWORD PTR [rip+0xf8fa]        # 0x414078
  40477e:	mov    rdx,QWORD PTR [rbp+0x30]
  404782:	mov    r8d,eax
  404785:	call   0x403f00
  40478a:	mov    QWORD PTR [rbp+0x30],rax
  40478e:	jmp    0x4047fe
  404790:	mov    rcx,QWORD PTR [rip+0xf8e9]        # 0x414080
  404797:	call   0x408b20
  40479c:	mov    rcx,QWORD PTR [rip+0xf8dd]        # 0x414080
  4047a3:	mov    rdx,QWORD PTR [rbp+0x30]
  4047a7:	mov    r8d,eax
  4047aa:	call   0x403f00
  4047af:	mov    QWORD PTR [rbp+0x30],rax
  4047b3:	jmp    0x4047fe
  4047b5:	mov    rcx,QWORD PTR [rip+0xf8cc]        # 0x414088
  4047bc:	call   0x408b20
  4047c1:	mov    rcx,QWORD PTR [rip+0xf8c0]        # 0x414088
  4047c8:	mov    rdx,QWORD PTR [rbp+0x30]
  4047cc:	mov    r8d,eax
  4047cf:	call   0x403f00
  4047d4:	mov    QWORD PTR [rbp+0x30],rax
  4047d8:	jmp    0x4047fe
  4047da:	mov    eax,esi
  4047dc:	shl    rax,0x9
  4047e0:	lea    rax,[rbp+rax*8+0x10050]
  4047e8:	mov    ecx,edi
  4047ea:	add    rcx,rcx
  4047ed:	mov    rcx,QWORD PTR [rax+rcx*8]
  4047f1:	mov    rdx,QWORD PTR [rbp+0x30]
  4047f5:	call   0x403f30
  4047fa:	mov    QWORD PTR [rbp+0x30],rax
  4047fe:	mov    rax,QWORD PTR [rbp+0x30]
  404802:	mov    BYTE PTR [rax],0x20
  404805:	add    rax,0x1
  404809:	mov    QWORD PTR [rbp+0x30],rax
  40480d:	mov    BYTE PTR [rax],0x78
  404810:	add    rax,0x1
  404814:	mov    QWORD PTR [rbp+0x30],rax
  404818:	mov    BYTE PTR [rax],0x20
  40481b:	add    rax,0x1
  40481f:	mov    QWORD PTR [rbp+0x30],rax
  404823:	mov    eax,esi
  404825:	shl    rax,0x9
  404829:	lea    rax,[rbp+rax*8+0x10058]
  404831:	mov    ecx,edi
  404833:	add    rcx,rcx
  404836:	mov    ecx,DWORD PTR [rax+rcx*8]
  404839:	mov    rdx,QWORD PTR [rbp+0x30]
  40483d:	call   0x403e80
  404842:	mov    QWORD PTR [rbp+0x30],rax
  404846:	sub    edi,0x1
  404849:	cmp    edi,0xffffffff
  40484c:	jne    0x404645
  404852:	nop
  404853:	test   bl,bl
  404855:	jne    0x40486e
  404857:	cmp    BYTE PTR [rip+0x103d2],0x0        # 0x414c30
  40485e:	je     0x40486e
  404860:	mov    eax,r14d
  404863:	add    eax,0x8
  404866:	test   eax,0xf
  40486c:	jne    0x404871
  40486e:	mov    r13d,r14d
  404871:	add    esi,0x1
  404874:	cmp    esi,0x2e
  404877:	jne    0x404621
  40487d:	nop
  40487e:	mov    eax,DWORD PTR [rbp+0x2c]
  404881:	test   eax,eax
  404883:	jle    0x404946
  404889:	movzx  rax,BYTE PTR [rbp+0x3f]
  40488e:	test   al,al
  404890:	je     0x4048c2
  404892:	mov    rax,QWORD PTR [rbp+0x30]
  404896:	mov    BYTE PTR [rax],0xd
  404899:	add    rax,0x1
  40489d:	mov    QWORD PTR [rbp+0x30],rax
  4048a1:	mov    BYTE PTR [rax],0xa
  4048a4:	add    rax,0x1
  4048a8:	mov    QWORD PTR [rbp+0x30],rax
  4048ac:	mov    BYTE PTR [rax],0xd
  4048af:	add    rax,0x1
  4048b3:	mov    QWORD PTR [rbp+0x30],rax
  4048b7:	mov    BYTE PTR [rax],0xa
  4048ba:	add    rax,0x1
  4048be:	mov    QWORD PTR [rbp+0x30],rax
  4048c2:	mov    rcx,QWORD PTR [rip+0xf79f]        # 0x414068
  4048c9:	call   0x408b20
  4048ce:	mov    rcx,QWORD PTR [rip+0xf793]        # 0x414068
  4048d5:	mov    rdx,QWORD PTR [rbp+0x30]
  4048d9:	mov    r8d,eax
  4048dc:	call   0x403f00
  4048e1:	mov    QWORD PTR [rbp+0x30],rax
  4048e5:	xor    rbx,rbx
  4048e8:	mov    esi,DWORD PTR [rbp+0x2c]
  4048eb:	sub    esi,0x1
  4048ee:	cmp    ebx,esi
  4048f0:	ja     0x404945
  4048f2:	add    esi,0x1
  4048f5:	test   ebx,ebx
  4048f7:	je     0x404913
  4048f9:	mov    rax,QWORD PTR [rbp+0x30]
  4048fd:	mov    BYTE PTR [rax],0x2c
  404900:	add    rax,0x1
  404904:	mov    QWORD PTR [rbp+0x30],rax
  404908:	mov    BYTE PTR [rax],0x20
  40490b:	add    rax,0x1
  40490f:	mov    QWORD PTR [rbp+0x30],rax
  404913:	mov    eax,ebx
  404915:	mov    rcx,QWORD PTR [rbp+rax*8+0x8048]
  40491d:	mov    rdx,QWORD PTR [rbp+0x30]
  404921:	call   0x403e80
  404926:	mov    QWORD PTR [rbp+0x30],rax
  40492a:	lea    rax,[rbp+0x7847]
  404931:	mov    rcx,QWORD PTR [rbp+0x30]
  404935:	cmp    rcx,rax
  404938:	mov    QWORD PTR [rbp+0x30],rcx
  40493c:	ja     0x404945
  40493e:	add    ebx,0x1
  404941:	cmp    ebx,esi
  404943:	jne    0x4048f5
  404945:	nop
  404946:	mov    rcx,QWORD PTR [rip+0xf743]        # 0x414090
  40494d:	call   0x408b20
  404952:	mov    rcx,QWORD PTR [rip+0xf737]        # 0x414090
  404959:	mov    rdx,QWORD PTR [rbp+0x30]
  40495d:	mov    r8d,eax
  404960:	call   0x403f00
  404965:	lea    rcx,[rbp+0x48]
  404969:	mov    rdx,QWORD PTR [rip+0xf728]        # 0x414098
  404970:	call   0x403ce0
  404975:	lea    rsp,[rbp+0x3e058]
  40497c:	pop    rbx
  40497d:	pop    rsi
  40497e:	pop    rdi
  40497f:	pop    r13
  404981:	pop    r14
  404983:	pop    rbp
  404984:	ret    
  404985:	int3   
  404986:	int3   
  404987:	int3   
  404988:	int3   
  404989:	int3   
  40498a:	int3   
  40498b:	int3   
  40498c:	int3   
  40498d:	int3   
  40498e:	int3   
  40498f:	int3   
  404990:	xor    r8,r8
  404993:	xor    rcx,rcx
  404996:	cmp    BYTE PTR [rip+0x10293],0x0        # 0x414c30
  40499d:	je     0x4049bd
  40499f:	lea    rax,[rip+0xf70c]        # 0x4140b2
  4049a6:	mov    edx,ecx
  4049a8:	add    rdx,rdx
  4049ab:	add    rdx,rdx
  4049ae:	add    rdx,rdx
  4049b1:	movzx  rax,WORD PTR [rax+rdx*8]
  4049b6:	test   ax,0xf
  4049bb:	jne    0x404a06
  4049bd:	lea    rax,[rip+0xf6ee]        # 0x4140b2
  4049c4:	mov    edx,ecx
  4049c6:	add    rdx,rdx
  4049c9:	add    rdx,rdx
  4049cc:	add    rdx,rdx
  4049cf:	movzx  eax,WORD PTR [rax+rdx*8]
  4049d3:	mov    r9d,0x8
  4049da:	xor    edx,edx
  4049dc:	div    r9d
  4049df:	mov    rdx,rax
  4049e2:	mov    al,0x4
  4049e4:	imul   cl
  4049e6:	cmp    r8d,edx
  4049e9:	jae    0x404a02
  4049eb:	lea    r9,[rip+0x12f9a]        # 0x41798c
  4049f2:	mov    r10d,r8d
  4049f5:	mov    BYTE PTR [r9+r10*1],al
  4049f9:	add    r8d,0x1
  4049fd:	cmp    r8d,edx
  404a00:	jb     0x4049eb
  404a02:	nop
  404a03:	mov    r8d,edx
  404a06:	add    ecx,0x1
  404a09:	cmp    ecx,0x2e
  404a0c:	jne    0x404996
  404a0e:	nop
  404a0f:	ret    
  404a10:	sub    rsp,0x28
  404a14:	xor    r8,r8
  404a17:	lea    rax,[rip+0xf6c2]        # 0x4140e0
  404a1e:	mov    ecx,r8d
  404a21:	add    rcx,rcx
  404a24:	add    rcx,rcx
  404a27:	add    rcx,rcx
  404a2a:	cmp    QWORD PTR [rax+rcx*8],0x0
  404a2f:	jne    0x404a4f
  404a31:	lea    rax,[rip+0xf6a8]        # 0x4140e0
  404a38:	mov    ecx,r8d
  404a3b:	add    rcx,rcx
  404a3e:	add    rcx,rcx
  404a41:	add    rcx,rcx
  404a44:	lea    rdx,[rip+0xffffffffffffe315]        # 0x402d60
  404a4b:	mov    QWORD PTR [rax+rcx*8],rdx
  404a4f:	lea    rax,[rip+0xf66a]        # 0x4140c0
  404a56:	mov    ecx,r8d
  404a59:	add    rcx,rcx
  404a5c:	add    rcx,rcx
  404a5f:	add    rcx,rcx
  404a62:	lea    rdx,[rip+0xf647]        # 0x4140b0
  404a69:	mov    r9d,r8d
  404a6c:	add    r9,r9
  404a6f:	add    r9,r9
  404a72:	add    r9,r9
  404a75:	lea    rdx,[rdx+r9*8]
  404a79:	mov    QWORD PTR [rax+rcx*8],rdx
  404a7d:	lea    rax,[rip+0xf634]        # 0x4140b8
  404a84:	mov    ecx,r8d
  404a87:	add    rcx,rcx
  404a8a:	add    rcx,rcx
  404a8d:	add    rcx,rcx
  404a90:	lea    rdx,[rip+0xf619]        # 0x4140b0
  404a97:	mov    r9d,r8d
  404a9a:	add    r9,r9
  404a9d:	add    r9,r9
  404aa0:	add    r9,r9
  404aa3:	lea    rdx,[rdx+r9*8]
  404aa7:	mov    QWORD PTR [rax+rcx*8],rdx
  404aab:	lea    rax,[rip+0xf61e]        # 0x4140d0
  404ab2:	mov    ecx,r8d
  404ab5:	add    rcx,rcx
  404ab8:	add    rcx,rcx
  404abb:	add    rcx,rcx
  404abe:	mov    QWORD PTR [rax+rcx*8],0x0
  404ac6:	lea    rax,[rip+0xf5fb]        # 0x4140c8
  404acd:	mov    ecx,r8d
  404ad0:	add    rcx,rcx
  404ad3:	add    rcx,rcx
  404ad6:	add    rcx,rcx
  404ad9:	mov    QWORD PTR [rax+rcx*8],0x1
  404ae1:	lea    rax,[rip+0xf5ca]        # 0x4140b2
  404ae8:	mov    ecx,r8d
  404aeb:	add    rcx,rcx
  404aee:	add    rcx,rcx
  404af1:	add    rcx,rcx
  404af4:	movzx  eax,WORD PTR [rax+rcx*8]
  404af8:	add    eax,eax
  404afa:	add    eax,eax
  404afc:	lea    rax,[rax+rax*2]
  404b00:	add    eax,0xff
  404b06:	and    eax,0xffffff00
  404b0c:	add    eax,0x30
  404b0f:	cmp    eax,0xb30
  404b15:	jae    0x404b1d
  404b17:	mov    eax,0xb30
  404b1d:	add    eax,0x4d0
  404b23:	mov    ecx,0x2000
  404b29:	xor    edx,edx
  404b2b:	div    ecx
  404b2d:	cmp    eax,0x7
  404b30:	jbe    0x404b38
  404b32:	mov    eax,0x7
  404b38:	lea    rdx,[rip+0xf572]        # 0x4140b1
  404b3f:	mov    r9d,r8d
  404b42:	add    r9,r9
  404b45:	add    r9,r9
  404b48:	add    r9,r9
  404b4b:	mov    r10d,0xff
  404b52:	mov    ecx,eax
  404b54:	shl    r10d,cl
  404b57:	mov    BYTE PTR [rdx+r9*8],r10b
  404b5b:	lea    rcx,[rip+0xf552]        # 0x4140b4
  404b62:	mov    edx,r8d
  404b65:	add    rdx,rdx
  404b68:	add    rdx,rdx
  404b6b:	add    rdx,rdx
  404b6e:	shl    eax,0xd
  404b71:	add    ax,0xb30
  404b76:	mov    WORD PTR [rcx+rdx*8],ax
  404b7a:	lea    rax,[rip+0xf531]        # 0x4140b2
  404b81:	mov    ecx,r8d
  404b84:	add    rcx,rcx
  404b87:	add    rcx,rcx
  404b8a:	add    rcx,rcx
  404b8d:	movzx  eax,WORD PTR [rax+rcx*8]
  404b91:	shl    eax,0x4
  404b94:	lea    rax,[rax+rax*2]
  404b98:	add    eax,0xff
  404b9e:	and    eax,0xffffff00
  404ba4:	add    eax,0x30
  404ba7:	cmp    eax,0x7330
  404bad:	jae    0x404bb5
  404baf:	mov    eax,0x7330
  404bb5:	cmp    eax,0xff30
  404bbb:	jbe    0x404bc3
  404bbd:	mov    eax,0xff30
  404bc3:	sub    eax,0x30
  404bc6:	lea    rcx,[rip+0xf4e5]        # 0x4140b2
  404bcd:	mov    edx,r8d
  404bd0:	add    rdx,rdx
  404bd3:	add    rdx,rdx
  404bd6:	add    rdx,rdx
  404bd9:	movzx  ecx,WORD PTR [rcx+rdx*8]
  404bdd:	xor    edx,edx
  404bdf:	div    ecx
  404be1:	lea    rcx,[rip+0xf4ce]        # 0x4140b6
  404be8:	mov    edx,r8d
  404beb:	add    rdx,rdx
  404bee:	add    rdx,rdx
  404bf1:	add    rdx,rdx
  404bf4:	lea    r9,[rip+0xf4b7]        # 0x4140b2
  404bfb:	mov    r10d,r8d
  404bfe:	add    r10,r10
  404c01:	add    r10,r10
  404c04:	add    r10,r10
  404c07:	imul   ax,WORD PTR [r9+r10*8]
  404c0d:	add    ax,0xff
  404c12:	and    ax,0xff00
  404c17:	add    ax,0x30
  404c1b:	mov    WORD PTR [rcx+rdx*8],ax
  404c1f:	add    r8d,0x1
  404c23:	cmp    r8d,0x2e
  404c27:	jne    0x404a17
  404c2d:	nop
  404c2e:	call   0x404990
  404c33:	lea    rax,[rip+0x12e9e]        # 0x417ad8
  404c3a:	mov    QWORD PTR [rip+0x12e97],rax        # 0x417ad8
  404c41:	lea    rax,[rip+0x12e90]        # 0x417ad8
  404c48:	mov    QWORD PTR [rip+0x12e91],rax        # 0x417ae0
  404c4f:	xor    r8,r8
  404c52:	lea    rax,[rip+0x12f37]        # 0x417b90
  404c59:	mov    ecx,r8d
  404c5c:	add    rcx,rcx
  404c5f:	lea    rax,[rax+rcx*8]
  404c63:	mov    QWORD PTR [rax],rax
  404c66:	mov    QWORD PTR [rax+0x8],rax
  404c6a:	add    r8d,0x1
  404c6e:	cmp    r8d,0x400
  404c75:	jne    0x404c52
  404c77:	nop
  404c78:	lea    rax,[rip+0x16f19]        # 0x41bb98
  404c7f:	mov    QWORD PTR [rip+0x16f12],rax        # 0x41bb98
  404c86:	lea    rax,[rip+0x16f0b]        # 0x41bb98
  404c8d:	mov    QWORD PTR [rip+0x16f0c],rax        # 0x41bba0
  404c94:	add    rsp,0x28
  404c98:	ret    
  404c99:	int3   
  404c9a:	int3   
  404c9b:	int3   
  404c9c:	int3   
  404c9d:	int3   
  404c9e:	int3   
  404c9f:	int3   
  404ca0:	push   rbx
  404ca1:	sub    rsp,0x20
  404ca5:	mov    rax,QWORD PTR [rip+0x12e34]        # 0x417ae0
  404cac:	jmp    0x404cc7
  404cae:	mov    rbx,QWORD PTR [rax+0x8]
  404cb2:	mov    rcx,rax
  404cb5:	xor    rdx,rdx
  404cb8:	mov    r8d,0x8000
  404cbf:	call   0x402bd0
  404cc4:	mov    rax,rbx
  404cc7:	lea    rcx,[rip+0x12e0a]        # 0x417ad8
  404cce:	cmp    rax,rcx
  404cd1:	jne    0x404cae
  404cd3:	xor    rcx,rcx
  404cd6:	lea    rax,[rip+0xf3e3]        # 0x4140c0
  404cdd:	movsxd rdx,ecx
  404ce0:	add    rdx,rdx
  404ce3:	add    rdx,rdx
  404ce6:	add    rdx,rdx
  404ce9:	lea    r8,[rip+0xf3c0]        # 0x4140b0
  404cf0:	movsxd r9,ecx
  404cf3:	add    r9,r9
  404cf6:	add    r9,r9
  404cf9:	add    r9,r9
  404cfc:	lea    r8,[r8+r9*8]
  404d00:	mov    QWORD PTR [rax+rdx*8],r8
  404d04:	lea    rax,[rip+0xf3ad]        # 0x4140b8
  404d0b:	movsxd rdx,ecx
  404d0e:	add    rdx,rdx
  404d11:	add    rdx,rdx
  404d14:	add    rdx,rdx
  404d17:	lea    r8,[rip+0xf392]        # 0x4140b0
  404d1e:	movsxd r9,ecx
  404d21:	add    r9,r9
  404d24:	add    r9,r9
  404d27:	add    r9,r9
  404d2a:	lea    r8,[r8+r9*8]
  404d2e:	mov    QWORD PTR [rax+rdx*8],r8
  404d32:	lea    rax,[rip+0xf38f]        # 0x4140c8
  404d39:	movsxd rdx,ecx
  404d3c:	add    rdx,rdx
  404d3f:	add    rdx,rdx
  404d42:	add    rdx,rdx
  404d45:	mov    QWORD PTR [rax+rdx*8],0x1
  404d4d:	lea    rax,[rip+0xf37c]        # 0x4140d0
  404d54:	movsxd rdx,ecx
  404d57:	add    rdx,rdx
  404d5a:	add    rdx,rdx
  404d5d:	add    rdx,rdx
  404d60:	mov    QWORD PTR [rax+rdx*8],0x0
  404d68:	add    ecx,0x1
  404d6b:	cmp    ecx,0x2e
  404d6e:	jne    0x404cd6
  404d74:	nop
  404d75:	lea    rax,[rip+0x12d5c]        # 0x417ad8
  404d7c:	mov    QWORD PTR [rip+0x12d55],rax        # 0x417ad8
  404d83:	lea    rax,[rip+0x12d4e]        # 0x417ad8
  404d8a:	mov    QWORD PTR [rip+0x12d4f],rax        # 0x417ae0
  404d91:	xor    rcx,rcx
  404d94:	lea    rax,[rip+0x12df5]        # 0x417b90
  404d9b:	movsxd rdx,ecx
  404d9e:	add    rdx,rdx
  404da1:	lea    rax,[rax+rdx*8]
  404da5:	mov    QWORD PTR [rax],rax
  404da8:	mov    QWORD PTR [rax+0x8],rax
  404dac:	add    ecx,0x1
  404daf:	cmp    ecx,0x400
  404db5:	jne    0x404d94
  404db7:	nop
  404db8:	mov    DWORD PTR [rip+0x12d4a],0x0        # 0x417b0c
  404dc2:	lea    rcx,[rip+0x12d47]        # 0x417b10
  404dc9:	mov    edx,0x80
  404dcf:	xor    r8,r8
  404dd2:	call   0x405bf0
  404dd7:	mov    DWORD PTR [rip+0x12d27],0x0        # 0x417b08
  404de1:	mov    rax,QWORD PTR [rip+0x16db8]        # 0x41bba0
  404de8:	jmp    0x404e03
  404dea:	mov    rbx,QWORD PTR [rax+0x8]
  404dee:	mov    rcx,rax
  404df1:	xor    rdx,rdx
  404df4:	mov    r8d,0x8000
  404dfb:	call   0x402bd0
  404e00:	mov    rax,rbx
  404e03:	lea    rcx,[rip+0x16d8e]        # 0x41bb98
  404e0a:	cmp    rax,rcx
  404e0d:	jne    0x404dea
  404e0f:	lea    rax,[rip+0x16d82]        # 0x41bb98
  404e16:	mov    QWORD PTR [rip+0x16d7b],rax        # 0x41bb98
  404e1d:	lea    rax,[rip+0x16d74]        # 0x41bb98
  404e24:	mov    QWORD PTR [rip+0x16d75],rax        # 0x41bba0
  404e2b:	add    rsp,0x20
  404e2f:	pop    rbx
  404e30:	ret    
  404e31:	int3   
  404e32:	int3   
  404e33:	int3   
  404e34:	int3   
  404e35:	int3   
  404e36:	int3   
  404e37:	int3   
  404e38:	int3   
  404e39:	int3   
  404e3a:	int3   
  404e3b:	int3   
  404e3c:	int3   
  404e3d:	int3   
  404e3e:	int3   
  404e3f:	int3   
  404e40:	sub    rsp,0x28
  404e44:	cmp    QWORD PTR [rip+0x16d7c],0x0        # 0x41bbc8
  404e4c:	je     0x404e65
  404e4e:	mov    rcx,QWORD PTR [rip+0x16d73]        # 0x41bbc8
  404e55:	call   0x402890
  404e5a:	mov    QWORD PTR [rip+0x16d63],0x0        # 0x41bbc8
  404e65:	cmp    BYTE PTR [rip+0x12b18],0x0        # 0x417984
  404e6c:	je     0x404e73
  404e6e:	call   0x404480
  404e73:	cmp    QWORD PTR [rip+0x16d3d],0x0        # 0x41bbb8
  404e7b:	je     0x404e9e
  404e7d:	mov    rcx,QWORD PTR [rip+0x16d34]        # 0x41bbb8
  404e84:	xor    rdx,rdx
  404e87:	mov    r8d,0x8000
  404e8e:	call   0x402bd0
  404e93:	mov    QWORD PTR [rip+0x16d1a],0x0        # 0x41bbb8
  404e9e:	call   0x404ca0
  404ea3:	add    rsp,0x28
  404ea7:	ret    
  404ea8:	int3   
  404ea9:	int3   
  404eaa:	int3   
  404eab:	int3   
  404eac:	int3   
  404ead:	int3   
  404eae:	int3   
  404eaf:	int3   
  404eb0:	push   rbx
  404eb1:	sub    rsp,0x20
  404eb5:	test   rcx,rcx
  404eb8:	jg     0x404ebf
  404eba:	xor    rbx,rbx
  404ebd:	jmp    0x404ed4
  404ebf:	call   QWORD PTR [rip+0xfd73]        # 0x414c38
  404ec5:	mov    rbx,rax
  404ec8:	test   rbx,rbx
  404ecb:	jne    0x404ed4
  404ecd:	mov    cl,0x1
  404ecf:	call   0x4051d0
  404ed4:	mov    rax,rbx
  404ed7:	add    rsp,0x20
  404edb:	pop    rbx
  404edc:	ret    
  404edd:	int3   
  404ede:	int3   
  404edf:	int3   
  404ee0:	push   rbx
  404ee1:	sub    rsp,0x20
  404ee5:	test   rcx,rcx
  404ee8:	jne    0x404eef
  404eea:	xor    rbx,rbx
  404eed:	jmp    0x404f02
  404eef:	call   QWORD PTR [rip+0xfd4b]        # 0x414c40
  404ef5:	mov    ebx,eax
  404ef7:	test   ebx,ebx
  404ef9:	je     0x404f02
  404efb:	mov    cl,0x2
  404efd:	call   0x4051d0
  404f02:	mov    eax,ebx
  404f04:	add    rsp,0x20
  404f08:	pop    rbx
  404f09:	ret    
  404f0a:	int3   
  404f0b:	int3   
  404f0c:	int3   
  404f0d:	int3   
  404f0e:	int3   
  404f0f:	int3   
  404f10:	push   rsi
  404f11:	push   rbx
  404f12:	sub    rsp,0x28
  404f16:	mov    rbx,rcx
  404f19:	cmp    QWORD PTR [rbx],0x0
  404f1d:	je     0x404f5a
  404f1f:	test   rdx,rdx
  404f22:	jle    0x404f3e
  404f24:	mov    rcx,QWORD PTR [rbx]
  404f27:	call   QWORD PTR [rip+0xfd1b]        # 0x414c48
  404f2d:	mov    rsi,rax
  404f30:	test   rsi,rsi
  404f33:	jne    0x404f55
  404f35:	mov    cl,0x1
  404f37:	call   0x4051d0
  404f3c:	jmp    0x404f55
  404f3e:	mov    rcx,QWORD PTR [rbx]
  404f41:	call   QWORD PTR [rip+0xfcf9]        # 0x414c40
  404f47:	test   eax,eax
  404f49:	je     0x404f52
  404f4b:	mov    cl,0x2
  404f4d:	call   0x4051d0
  404f52:	xor    rsi,rsi
  404f55:	mov    QWORD PTR [rbx],rsi
  404f58:	jmp    0x404f7f
  404f5a:	test   rdx,rdx
  404f5d:	jg     0x404f64
  404f5f:	xor    rsi,rsi
  404f62:	jmp    0x404f7f
  404f64:	mov    rcx,rdx
  404f67:	call   QWORD PTR [rip+0xfccb]        # 0x414c38
  404f6d:	mov    rsi,rax
  404f70:	test   rsi,rsi
  404f73:	jne    0x404f7c
  404f75:	mov    cl,0x1
  404f77:	call   0x4051d0
  404f7c:	mov    QWORD PTR [rbx],rsi
  404f7f:	mov    rax,rsi
  404f82:	add    rsp,0x28
  404f86:	pop    rbx
  404f87:	pop    rsi
  404f88:	ret    
  404f89:	int3   
  404f8a:	int3   
  404f8b:	int3   
  404f8c:	int3   
  404f8d:	int3   
  404f8e:	int3   
  404f8f:	int3   
  404f90:	push   rbp
  404f91:	push   rsi
  404f92:	push   rbx
  404f93:	sub    rsp,0x20
  404f97:	mov    rbp,rsp
  404f9a:	xor    rsi,rsi
  404f9d:	xor    rbx,rbx
  404fa0:	call   0x40b590
  404fa5:	lea    rcx,ds:0x0
  404fad:	lea    rax,[rax+rcx*1+0x18]
  404fb2:	movsxd rcx,ebx
  404fb5:	add    rcx,rcx
  404fb8:	add    rcx,rcx
  404fbb:	cmp    BYTE PTR [rax+rcx*8],0x0
  404fbf:	jne    0x404fe1
  404fc1:	call   0x40b590
  404fc6:	lea    rcx,ds:0x0
  404fce:	lea    rax,[rax+rcx*1]
  404fd2:	movsxd rbx,ebx
  404fd5:	add    rbx,rbx
  404fd8:	add    rbx,rbx
  404fdb:	lea    rsi,[rax+rbx*8]
  404fdf:	jmp    0x404fe9
  404fe1:	add    ebx,0x1
  404fe4:	cmp    ebx,0x10
  404fe7:	jne    0x404fa0
  404fe9:	nop
  404fea:	test   rsi,rsi
  404fed:	jne    0x404ffe
  404fef:	mov    ecx,0xe7
  404ff5:	mov    rdx,QWORD PTR [rbp+0x38]
  404ff9:	call   0x405150
  404ffe:	mov    BYTE PTR [rsi+0x18],0x1
  405002:	call   0x40b590
  405007:	lea    rcx,ds:0x200
  40500f:	lea    rax,[rax+rcx*1]
  405013:	add    DWORD PTR [rax],0x1
  405016:	mov    QWORD PTR [rsi],0x0
  40501d:	mov    QWORD PTR [rsi+0x10],0x0
  405025:	mov    QWORD PTR [rsi+0x8],0x0
  40502d:	mov    rax,rsi
  405030:	lea    rsp,[rbp+0x20]
  405034:	pop    rbx
  405035:	pop    rsi
  405036:	pop    rbp
  405037:	ret    
  405038:	int3   
  405039:	int3   
  40503a:	int3   
  40503b:	int3   
  40503c:	int3   
  40503d:	int3   
  40503e:	int3   
  40503f:	int3   
  405040:	push   rbx
  405041:	sub    rsp,0x20
  405045:	mov    rbx,rcx
  405048:	call   0x40b590
  40504d:	lea    rcx,ds:0x0
  405055:	lea    rax,[rax+rcx*1]
  405059:	cmp    rbx,rax
  40505c:	jb     0x405098
  40505e:	call   0x40b590
  405063:	lea    rcx,ds:0x0
  40506b:	lea    rax,[rax+rcx*1+0x1e0]
  405073:	cmp    rbx,rax
  405076:	ja     0x405098
  405078:	mov    BYTE PTR [rbx+0x18],0x0
  40507c:	call   0x40b590
  405081:	mov    rbx,rax
  405084:	call   0x40b590
  405089:	mov    ecx,DWORD PTR [rbx+0x200]
  40508f:	sub    ecx,0x1
  405092:	mov    DWORD PTR [rax+0x200],ecx
  405098:	add    rsp,0x20
  40509c:	pop    rbx
  40509d:	ret    
  40509e:	int3   
  40509f:	int3   
  4050a0:	sub    rsp,0x28
  4050a4:	call   0x40b590
  4050a9:	mov    rax,QWORD PTR [rax+0x208]
  4050b0:	test   rax,rax
  4050b3:	je     0x4050bb
  4050b5:	mov    rax,QWORD PTR [rax+0x10]
  4050b9:	jmp    0x4050be
  4050bb:	xor    rax,rax
  4050be:	add    rsp,0x28
  4050c2:	ret    
  4050c3:	int3   
  4050c4:	int3   
  4050c5:	int3   
  4050c6:	int3   
  4050c7:	int3   
  4050c8:	int3   
  4050c9:	int3   
  4050ca:	int3   
  4050cb:	int3   
  4050cc:	int3   
  4050cd:	int3   
  4050ce:	int3   
  4050cf:	int3   
  4050d0:	sub    rsp,0x28
  4050d4:	call   0x40b590
  4050d9:	mov    rax,QWORD PTR [rax+0x208]
  4050e0:	test   rax,rax
  4050e3:	je     0x4050eb
  4050e5:	mov    rax,QWORD PTR [rax+0x8]
  4050e9:	jmp    0x4050ee
  4050eb:	xor    rax,rax
  4050ee:	add    rsp,0x28
  4050f2:	ret    
  4050f3:	int3   
  4050f4:	int3   
  4050f5:	int3   
  4050f6:	int3   
  4050f7:	int3   
  4050f8:	int3   
  4050f9:	int3   
  4050fa:	int3   
  4050fb:	int3   
  4050fc:	int3   
  4050fd:	int3   
  4050fe:	int3   
  4050ff:	int3   
  405100:	push   rbx
  405101:	sub    rsp,0x20
  405105:	call   0x40b590
  40510a:	mov    rax,QWORD PTR [rax+0x208]
  405111:	test   rax,rax
  405114:	je     0x405137
  405116:	mov    rbx,QWORD PTR [rax+0x10]
  40511a:	mov    QWORD PTR [rax+0x10],0x0
  405122:	cmp    QWORD PTR [rip+0x11f16],0x0        # 0x417040
  40512a:	je     0x40513a
  40512c:	mov    rcx,rbx
  40512f:	call   QWORD PTR [rip+0x11f0b]        # 0x417040
  405135:	jmp    0x40513a
  405137:	xor    rbx,rbx
  40513a:	mov    rax,rbx
  40513d:	add    rsp,0x20
  405141:	pop    rbx
  405142:	ret    
  405143:	int3   
  405144:	int3   
  405145:	int3   
  405146:	int3   
  405147:	int3   
  405148:	int3   
  405149:	int3   
  40514a:	int3   
  40514b:	int3   
  40514c:	int3   
  40514d:	int3   
  40514e:	int3   
  40514f:	int3   
  405150:	sub    rsp,0x28
  405154:	mov    QWORD PTR [rip+0xeead],rdx        # 0x414008
  40515b:	call   0x408310
  405160:	add    rsp,0x28
  405164:	ret    
  405165:	int3   
  405166:	int3   
  405167:	int3   
  405168:	int3   
  405169:	int3   
  40516a:	int3   
  40516b:	int3   
  40516c:	int3   
  40516d:	int3   
  40516e:	int3   
  40516f:	int3   
  405170:	push   rsi
  405171:	push   rbx
  405172:	sub    rsp,0x28
  405176:	mov    ebx,ecx
  405178:	mov    rsi,rdx
  40517b:	and    bl,0x7f
  40517e:	cmp    QWORD PTR [rip+0x11e8a],0x0        # 0x417010
  405186:	je     0x405193
  405188:	mov    ecx,ebx
  40518a:	mov    rdx,rsi
  40518d:	call   QWORD PTR [rip+0x11e7d]        # 0x417010
  405193:	test   bl,bl
  405195:	jne    0x4051a6
  405197:	call   0x40b590
  40519c:	movzx  rbx,BYTE PTR [rax+0x210]
  4051a4:	jmp    0x4051bb
  4051a6:	cmp    bl,0x1c
  4051a9:	ja     0x4051bb
  4051ab:	lea    rax,[rip+0xfc5a]        # 0x414e0c
  4051b2:	movzx  rbx,bl
  4051b6:	movzx  rbx,BYTE PTR [rax+rbx*1]
  4051bb:	movzx  rcx,bl
  4051bf:	mov    rdx,rsi
  4051c2:	call   0x405150
  4051c7:	add    rsp,0x28
  4051cb:	pop    rbx
  4051cc:	pop    rsi
  4051cd:	ret    
  4051ce:	int3   
  4051cf:	int3   
  4051d0:	push   rbp
  4051d1:	sub    rsp,0x20
  4051d5:	mov    rbp,rsp
  4051d8:	mov    rdx,QWORD PTR [rbp+0x28]
  4051dc:	call   0x405170
  4051e1:	lea    rsp,[rbp+0x20]
  4051e5:	pop    rbp
  4051e6:	ret    
  4051e7:	int3   
  4051e8:	int3   
  4051e9:	int3   
  4051ea:	int3   
  4051eb:	int3   
  4051ec:	int3   
  4051ed:	int3   
  4051ee:	int3   
  4051ef:	int3   
  4051f0:	push   rbp
  4051f1:	sub    rsp,0x20
  4051f5:	mov    rbp,rsp
  4051f8:	call   0x40b590
  4051fd:	cmp    DWORD PTR [rax+0x210],0x0
  405204:	je     0x405212
  405206:	xor    rcx,rcx
  405209:	mov    rdx,QWORD PTR [rbp+0x28]
  40520d:	call   0x405170
  405212:	lea    rsp,[rbp+0x20]
  405216:	pop    rbp
  405217:	ret    
  405218:	int3   
  405219:	int3   
  40521a:	int3   
  40521b:	int3   
  40521c:	int3   
  40521d:	int3   
  40521e:	int3   
  40521f:	int3   
  405220:	push   rbx
  405221:	sub    rsp,0x20
  405225:	mov    ebx,ecx
  405227:	call   0x40b590
  40522c:	mov    DWORD PTR [rax+0x210],ebx
  405232:	add    rsp,0x20
  405236:	pop    rbx
  405237:	ret    
  405238:	int3   
  405239:	int3   
  40523a:	int3   
  40523b:	int3   
  40523c:	int3   
  40523d:	int3   
  40523e:	int3   
  40523f:	int3   
  405240:	cmp    rcx,rdx
  405243:	je     0x4053f1
  405249:	cmp    r8,0x8
  40524d:	jg     0x405391
  405253:	cmp    r8d,0x5
  405257:	jg     0x40528d
  405259:	cmp    r8d,0x5
  40525d:	je     0x405306
  405263:	sub    r8d,0x1
  405267:	test   r8d,r8d
  40526a:	je     0x4052b9
  40526c:	sub    r8d,0x1
  405270:	test   r8d,r8d
  405273:	je     0x4052c4
  405275:	sub    r8d,0x1
  405279:	test   r8d,r8d
  40527c:	je     0x4052d0
  40527e:	sub    r8d,0x1
  405282:	test   r8d,r8d
  405285:	jne    0x4053f1
  40528b:	jmp    0x4052fd
  40528d:	sub    r8d,0x6
  405291:	test   r8d,r8d
  405294:	je     0x40532d
  40529a:	sub    r8d,0x1
  40529e:	test   r8d,r8d
  4052a1:	je     0x405356
  4052a7:	sub    r8d,0x1
  4052ab:	test   r8d,r8d
  4052ae:	jne    0x4053f1
  4052b4:	jmp    0x405389
  4052b9:	movzx  rax,BYTE PTR [rcx]
  4052bd:	mov    BYTE PTR [rdx],al
  4052bf:	jmp    0x4053f1
  4052c4:	movzx  rax,WORD PTR [rcx]
  4052c8:	mov    WORD PTR [rdx],ax
  4052cb:	jmp    0x4053f1
  4052d0:	cmp    rdx,rcx
  4052d3:	jbe    0x4052e9
  4052d5:	movzx  rax,BYTE PTR [rcx+0x2]
  4052da:	mov    BYTE PTR [rdx+0x2],al
  4052dd:	movzx  rax,WORD PTR [rcx]
  4052e1:	mov    WORD PTR [rdx],ax
  4052e4:	jmp    0x4053f1
  4052e9:	movzx  rax,WORD PTR [rcx]
  4052ed:	mov    WORD PTR [rdx],ax
  4052f0:	movzx  rax,BYTE PTR [rcx+0x2]
  4052f5:	mov    BYTE PTR [rdx+0x2],al
  4052f8:	jmp    0x4053f1
  4052fd:	mov    eax,DWORD PTR [rcx]
  4052ff:	mov    DWORD PTR [rdx],eax
  405301:	jmp    0x4053f1
  405306:	cmp    rdx,rcx
  405309:	jbe    0x40531c
  40530b:	movzx  rax,BYTE PTR [rcx+0x4]
  405310:	mov    BYTE PTR [rdx+0x4],al
  405313:	mov    eax,DWORD PTR [rcx]
  405315:	mov    DWORD PTR [rdx],eax
  405317:	jmp    0x4053f1
  40531c:	mov    eax,DWORD PTR [rcx]
  40531e:	mov    DWORD PTR [rdx],eax
  405320:	movzx  rax,BYTE PTR [rcx+0x4]
  405325:	mov    BYTE PTR [rdx+0x4],al
  405328:	jmp    0x4053f1
  40532d:	cmp    rdx,rcx
  405330:	jbe    0x405344
  405332:	movzx  rax,WORD PTR [rcx+0x4]
  405337:	mov    WORD PTR [rdx+0x4],ax
  40533b:	mov    eax,DWORD PTR [rcx]
  40533d:	mov    DWORD PTR [rdx],eax
  40533f:	jmp    0x4053f1
  405344:	mov    eax,DWORD PTR [rcx]
  405346:	mov    DWORD PTR [rdx],eax
  405348:	movzx  rax,WORD PTR [rcx+0x4]
  40534d:	mov    WORD PTR [rdx+0x4],ax
  405351:	jmp    0x4053f1
  405356:	cmp    rdx,rcx
  405359:	jbe    0x405372
  40535b:	movzx  rax,BYTE PTR [rcx+0x6]
  405360:	mov    BYTE PTR [rdx+0x6],al
  405363:	movzx  rax,WORD PTR [rcx+0x4]
  405368:	mov    WORD PTR [rdx+0x4],ax
  40536c:	mov    eax,DWORD PTR [rcx]
  40536e:	mov    DWORD PTR [rdx],eax
  405370:	jmp    0x4053f1
  405372:	mov    eax,DWORD PTR [rcx]
  405374:	mov    DWORD PTR [rdx],eax
  405376:	movzx  rax,WORD PTR [rcx+0x4]
  40537b:	mov    WORD PTR [rdx+0x4],ax
  40537f:	movzx  rax,BYTE PTR [rcx+0x6]
  405384:	mov    BYTE PTR [rdx+0x6],al
  405387:	jmp    0x4053f1
  405389:	mov    rax,QWORD PTR [rcx]
  40538c:	mov    QWORD PTR [rdx],rax
  40538f:	jmp    0x4053f1
  405391:	cmp    rdx,rcx
  405394:	jbe    0x4053c7
  405396:	mov    r9,QWORD PTR [rcx]
  405399:	mov    rax,rdx
  40539c:	lea    r10,[r8-0x8]
  4053a0:	lea    rdx,[rdx+r10*1]
  4053a4:	add    rcx,r10
  4053a7:	mov    r10,QWORD PTR [rcx]
  4053aa:	mov    QWORD PTR [rdx],r10
  4053ad:	cmp    r8,0x10
  4053b1:	jle    0x4053c1
  4053b3:	sub    r8,0x8
  4053b7:	sub    rcx,0x8
  4053bb:	sub    rdx,0x8
  4053bf:	jmp    0x4053a7
  4053c1:	nop
  4053c2:	mov    QWORD PTR [rax],r9
  4053c5:	jmp    0x4053f1
  4053c7:	lea    r10,[r8-0x8]
  4053cb:	mov    r9,QWORD PTR [rcx+r10*1]
  4053cf:	lea    rax,[rdx+r10*1]
  4053d3:	mov    r10,QWORD PTR [rcx]
  4053d6:	mov    QWORD PTR [rdx],r10
  4053d9:	cmp    r8,0x10
  4053dd:	jle    0x4053ed
  4053df:	sub    r8,0x8
  4053e3:	add    rcx,0x8
  4053e7:	add    rdx,0x8
  4053eb:	jmp    0x4053d3
  4053ed:	nop
  4053ee:	mov    QWORD PTR [rax],r9
  4053f1:	ret    
  4053f2:	int3   
  4053f3:	int3   
  4053f4:	int3   
  4053f5:	int3   
  4053f6:	int3   
  4053f7:	int3   
  4053f8:	int3   
  4053f9:	int3   
  4053fa:	int3   
  4053fb:	int3   
  4053fc:	int3   
  4053fd:	int3   
  4053fe:	int3   
  4053ff:	int3   
  405400:	push   rsi
  405401:	push   rbx
  405402:	sub    rsp,0x28
  405406:	mov    rax,rcx
  405409:	mov    rbx,rdx
  40540c:	jmp    0x405412
  40540e:	add    rax,0x2
  405412:	cmp    WORD PTR [rax],0x0
  405416:	je     0x40541e
  405418:	cmp    WORD PTR [rax],0x20
  40541c:	jbe    0x40540e
  40541e:	cmp    WORD PTR [rax],0x22
  405422:	jne    0x405431
  405424:	cmp    WORD PTR [rax+0x2],0x22
  405429:	jne    0x405431
  40542b:	add    rax,0x4
  40542f:	jmp    0x405412
  405431:	nop
  405432:	xor    rcx,rcx
  405435:	mov    rsi,rax
  405438:	jmp    0x40546c
  40543a:	cmp    WORD PTR [rax],0x22
  40543e:	jne    0x405465
  405440:	add    rax,0x2
  405444:	jmp    0x40544d
  405446:	add    ecx,0x1
  405449:	add    rax,0x2
  40544d:	cmp    WORD PTR [rax],0x0
  405451:	je     0x405459
  405453:	cmp    WORD PTR [rax],0x22
  405457:	jne    0x405446
  405459:	cmp    WORD PTR [rax],0x0
  40545d:	je     0x40546c
  40545f:	add    rax,0x2
  405463:	jmp    0x40546c
  405465:	add    ecx,0x1
  405468:	add    rax,0x2
  40546c:	cmp    WORD PTR [rax],0x20
  405470:	ja     0x40543a
  405472:	mov    rax,rbx
  405475:	mov    edx,ecx
  405477:	mov    rcx,rax
  40547a:	call   0x4093b0
  40547f:	mov    rax,rsi
  405482:	mov    rdx,QWORD PTR [rbx]
  405485:	xor    rcx,rcx
  405488:	jmp    0x4054d4
  40548a:	cmp    WORD PTR [rax],0x22
  40548e:	jne    0x4054c1
  405490:	add    rax,0x2
  405494:	jmp    0x4054a9
  405496:	movsxd r8,ecx
  405499:	movzx  r9,WORD PTR [rax]
  40549d:	mov    WORD PTR [rdx+r8*2],r9w
  4054a2:	add    rax,0x2
  4054a6:	add    ecx,0x1
  4054a9:	cmp    WORD PTR [rax],0x0
  4054ad:	je     0x4054b5
  4054af:	cmp    WORD PTR [rax],0x22
  4054b3:	jne    0x405496
  4054b5:	cmp    WORD PTR [rax],0x0
  4054b9:	je     0x4054d4
  4054bb:	add    rax,0x2
  4054bf:	jmp    0x4054d4
  4054c1:	movsxd r8,ecx
  4054c4:	movzx  r9,WORD PTR [rax]
  4054c8:	mov    WORD PTR [rdx+r8*2],r9w
  4054cd:	add    rax,0x2
  4054d1:	add    ecx,0x1
  4054d4:	cmp    WORD PTR [rax],0x20
  4054d8:	ja     0x40548a
  4054da:	add    rsp,0x28
  4054de:	pop    rbx
  4054df:	pop    rsi
  4054e0:	ret    
  4054e1:	int3   
  4054e2:	int3   
  4054e3:	int3   
  4054e4:	int3   
  4054e5:	int3   
  4054e6:	int3   
  4054e7:	int3   
  4054e8:	int3   
  4054e9:	int3   
  4054ea:	int3   
  4054eb:	int3   
  4054ec:	int3   
  4054ed:	int3   
  4054ee:	int3   
  4054ef:	int3   
  4054f0:	push   rbp
  4054f1:	sub    rsp,0x40
  4054f5:	mov    rbp,rsp
  4054f8:	mov    QWORD PTR [rbp+0x38],0x0
  405500:	nop
  405501:	xor    rax,rax
  405504:	mov    DWORD PTR [rbp+0x2c],eax
  405507:	call   0x4029d0
  40550c:	mov    rcx,rax
  40550f:	lea    rdx,[rbp+0x38]
  405513:	call   0x405400
  405518:	mov    rcx,rax
  40551b:	lea    rdx,[rbp+0x38]
  40551f:	call   0x405400
  405524:	cmp    QWORD PTR [rbp+0x38],0x0
  405529:	je     0x405536
  40552b:	mov    ecx,DWORD PTR [rbp+0x2c]
  40552e:	add    ecx,0x1
  405531:	mov    DWORD PTR [rbp+0x2c],ecx
  405534:	jmp    0x405518
  405536:	nop
  405537:	nop
  405538:	lea    rcx,[rbp+0x38]
  40553c:	call   0x4084e0
  405541:	mov    eax,DWORD PTR [rbp+0x2c]
  405544:	lea    rsp,[rbp+0x40]
  405548:	pop    rbp
  405549:	ret    
  40554a:	lea    rax,fs:[rax+riz*1+0x0]
  405550:	push   rbp
  405551:	sub    rsp,0x20
  405555:	mov    rbp,rsp
  405558:	lea    rcx,[rdx+0x38]
  40555c:	call   0x4084e0
  405561:	lea    rsp,[rbp+0x20]
  405565:	pop    rbp
  405566:	ret    
  405567:	int3   
  405568:	int3   
  405569:	int3   
  40556a:	int3   
  40556b:	int3   
  40556c:	int3   
  40556d:	int3   
  40556e:	int3   
  40556f:	int3   
  405570:	push   rbp
  405571:	push   rsi
  405572:	push   rbx
  405573:	sub    rsp,0x230
  40557a:	mov    rbp,rsp
  40557d:	mov    rbx,rcx
  405580:	mov    esi,edx
  405582:	mov    rcx,rbx
  405585:	call   0x4084e0
  40558a:	test   esi,esi
  40558c:	jne    0x4055b2
  40558e:	xor    rcx,rcx
  405591:	lea    rdx,[rbp+0x26]
  405595:	mov    r8d,0x105
  40559c:	call   0x4029e0
  4055a1:	mov    rcx,rbx
  4055a4:	lea    rdx,[rbp+0x26]
  4055a8:	mov    r8d,eax
  4055ab:	call   0x408780
  4055b0:	jmp    0x4055d2
  4055b2:	call   0x4029d0
  4055b7:	mov    rcx,rax
  4055ba:	mov    rdx,rbx
  4055bd:	call   0x405400
  4055c2:	test   esi,esi
  4055c4:	je     0x4055d1
  4055c6:	cmp    QWORD PTR [rbx],0x0
  4055ca:	je     0x4055d1
  4055cc:	sub    esi,0x1
  4055cf:	jmp    0x4055b7
  4055d1:	nop
  4055d2:	mov    rax,rbx
  4055d5:	lea    rsp,[rbp+0x230]
  4055dc:	pop    rbx
  4055dd:	pop    rsi
  4055de:	pop    rbp
  4055df:	ret    
  4055e0:	push   0x0
  4055e2:	fnstcw WORD PTR [rsp]
  4055e5:	pop    rax
  4055e6:	ret    
  4055e7:	int3   
  4055e8:	int3   
  4055e9:	int3   
  4055ea:	int3   
  4055eb:	int3   
  4055ec:	int3   
  4055ed:	int3   
  4055ee:	int3   
  4055ef:	int3   
  4055f0:	push   0x0
  4055f2:	stmxcsr DWORD PTR [rsp]
  4055f6:	pop    rax
  4055f7:	ret    
  4055f8:	int3   
  4055f9:	int3   
  4055fa:	int3   
  4055fb:	int3   
  4055fc:	int3   
  4055fd:	int3   
  4055fe:	int3   
  4055ff:	int3   
  405600:	mov    BYTE PTR [rcx+0x2ea],0x0
  405607:	mov    BYTE PTR [rcx+0x2eb],0x0
  40560e:	ret    
  40560f:	int3   
  405610:	push   rsi
  405611:	push   rbx
  405612:	sub    rsp,0x28
  405616:	mov    rbx,rcx
  405619:	mov    esi,edx
  40561b:	cmp    WORD PTR [rbx+0x8],0xd7b0
  405621:	jb     0x40562b
  405623:	cmp    WORD PTR [rbx+0x8],0xd7b3
  405629:	jbe    0x405633
  40562b:	mov    ebx,0x66
  405631:	jmp    0x405670
  405633:	mov    rcx,rbx
  405636:	call   0x405600
  40563b:	cmp    WORD PTR [rbx+0x8],0xd7b0
  405641:	je     0x40564b
  405643:	mov    rcx,rbx
  405646:	call   0x405b80
  40564b:	mov    WORD PTR [rbx+0x8],si
  40564f:	cmp    WORD PTR [rbx+0x60],0x0
  405654:	jne    0x405668
  405656:	cmp    QWORD PTR [rbx+0x20],0x0
  40565b:	jne    0x405668
  40565d:	lea    rax,[rip+0x17c]        # 0x4057e0
  405664:	mov    QWORD PTR [rbx+0x20],rax
  405668:	mov    rcx,rbx
  40566b:	call   QWORD PTR [rbx+0x20]
  40566e:	mov    ebx,eax
  405670:	test   ebx,ebx
  405672:	je     0x40567b
  405674:	mov    ecx,ebx
  405676:	call   0x405220
  40567b:	mov    eax,ebx
  40567d:	add    rsp,0x28
  405681:	pop    rbx
  405682:	pop    rsi
  405683:	ret    
  405684:	int3   
  405685:	int3   
  405686:	int3   
  405687:	int3   
  405688:	int3   
  405689:	int3   
  40568a:	int3   
  40568b:	int3   
  40568c:	int3   
  40568d:	int3   
  40568e:	int3   
  40568f:	int3   
  405690:	sub    rsp,0x28
  405694:	mov    dx,0xd7b2
  405698:	call   0x405610
  40569d:	add    rsp,0x28
  4056a1:	ret    
  4056a2:	int3   
  4056a3:	int3   
  4056a4:	int3   
  4056a5:	int3   
  4056a6:	int3   
  4056a7:	int3   
  4056a8:	int3   
  4056a9:	int3   
  4056aa:	int3   
  4056ab:	int3   
  4056ac:	int3   
  4056ad:	int3   
  4056ae:	int3   
  4056af:	int3   
  4056b0:	sub    rsp,0x28
  4056b4:	mov    DWORD PTR [rcx+0x14],0x0
  4056bb:	mov    DWORD PTR [rcx+0x10],0x0
  4056c2:	mov    rax,QWORD PTR [rcx]
  4056c5:	mov    rdx,QWORD PTR [rcx+0x18]
  4056c9:	mov    r8d,DWORD PTR [rcx+0xc]
  4056cd:	lea    r9,[rcx+0x14]
  4056d1:	mov    QWORD PTR [rsp+0x20],0x0
  4056da:	mov    rcx,rax
  4056dd:	call   0x4028e0
  4056e2:	test   eax,eax
  4056e4:	jne    0x4056f5
  4056e6:	call   0x4029b0
  4056eb:	cmp    eax,0x6d
  4056ee:	jne    0x4056f8
  4056f0:	xor    rax,rax
  4056f3:	jmp    0x4056f8
  4056f5:	xor    rax,rax
  4056f8:	add    rsp,0x28
  4056fc:	ret    
  4056fd:	int3   
  4056fe:	int3   
  4056ff:	int3   
  405700:	xor    rax,rax
  405703:	ret    
  405704:	int3   
  405705:	int3   
  405706:	int3   
  405707:	int3   
  405708:	int3   
  405709:	int3   
  40570a:	int3   
  40570b:	int3   
  40570c:	int3   
  40570d:	int3   
  40570e:	int3   
  40570f:	int3   
  405710:	push   rbp
  405711:	push   rbx
  405712:	sub    rsp,0x48
  405716:	mov    rbp,rsp
  405719:	mov    rbx,rcx
  40571c:	cmp    DWORD PTR [rbx+0x10],0x0
  405720:	jne    0x405727
  405722:	xor    rax,rax
  405725:	jmp    0x405759
  405727:	mov    rcx,QWORD PTR [rbx]
  40572a:	mov    rdx,QWORD PTR [rbx+0x18]
  40572e:	mov    r8d,DWORD PTR [rbx+0x10]
  405732:	lea    r9,[rbp+0x3c]
  405736:	mov    QWORD PTR [rsp+0x20],0x0
  40573f:	call   0x402910
  405744:	test   eax,eax
  405746:	jne    0x40574f
  405748:	call   0x4029b0
  40574d:	jmp    0x405752
  40574f:	xor    rax,rax
  405752:	mov    DWORD PTR [rbx+0x10],0x0
  405759:	lea    rsp,[rbp+0x48]
  40575d:	pop    rbx
  40575e:	pop    rbp
  40575f:	ret    
  405760:	sub    rsp,0x28
  405764:	call   0x402890
  405769:	test   eax,eax
  40576b:	setne  al
  40576e:	add    rsp,0x28
  405772:	ret    
  405773:	int3   
  405774:	int3   
  405775:	int3   
  405776:	int3   
  405777:	int3   
  405778:	int3   
  405779:	int3   
  40577a:	int3   
  40577b:	int3   
  40577c:	int3   
  40577d:	int3   
  40577e:	int3   
  40577f:	int3   
  405780:	sub    rsp,0x28
  405784:	mov    WORD PTR [rcx+0x8],0xd7b0
  40578a:	mov    rcx,QWORD PTR [rcx]
  40578d:	call   0x405760
  405792:	test   al,al
  405794:	jne    0x40579d
  405796:	call   0x4029b0
  40579b:	jmp    0x4057a0
  40579d:	xor    rax,rax
  4057a0:	add    rsp,0x28
  4057a4:	ret    
  4057a5:	int3   
  4057a6:	int3   
  4057a7:	int3   
  4057a8:	int3   
  4057a9:	int3   
  4057aa:	int3   
  4057ab:	int3   
  4057ac:	int3   
  4057ad:	int3   
  4057ae:	int3   
  4057af:	int3   
  4057b0:	push   rbx
  4057b1:	sub    rsp,0x20
  4057b5:	mov    rbx,rcx
  4057b8:	mov    rcx,QWORD PTR [rbx]
  4057bb:	call   0x405760
  4057c0:	mov    WORD PTR [rbx+0x8],0xd7b0
  4057c6:	call   0x4029b0
  4057cb:	add    rsp,0x20
  4057cf:	pop    rbx
  4057d0:	ret    
  4057d1:	int3   
  4057d2:	int3   
  4057d3:	int3   
  4057d4:	int3   
  4057d5:	int3   
  4057d6:	int3   
  4057d7:	int3   
  4057d8:	int3   
  4057d9:	int3   
  4057da:	int3   
  4057db:	int3   
  4057dc:	int3   
  4057dd:	int3   
  4057de:	int3   
  4057df:	int3   
  4057e0:	push   rbp
  4057e1:	push   rsi
  4057e2:	push   rbx
  4057e3:	sub    rsp,0x50
  4057e7:	mov    rbp,rsp
  4057ea:	mov    rbx,rcx
  4057ed:	xor    rsi,rsi
  4057f0:	mov    DWORD PTR [rbx+0x10],0x0
  4057f7:	mov    DWORD PTR [rbx+0x14],0x0
  4057fe:	movzx  rax,WORD PTR [rbx+0x8]
  405803:	sub    ax,0xd7b1
  405808:	test   ax,ax
  40580b:	je     0x405825
  40580d:	sub    ax,0x1
  405811:	test   ax,ax
  405814:	je     0x40583e
  405816:	sub    ax,0x1
  40581a:	test   ax,ax
  40581d:	jne    0x405ad8
  405823:	jmp    0x405857
  405825:	mov    eax,0x80000000
  40582b:	mov    ecx,0x3
  405831:	lea    rdx,[rip+0xfffffffffffffe78]        # 0x4056b0
  405838:	mov    QWORD PTR [rbx+0x28],rdx
  40583c:	jmp    0x40586e
  40583e:	mov    eax,0x40000000
  405844:	mov    ecx,0x2
  40584a:	lea    rdx,[rip+0xfffffffffffffebf]        # 0x405710
  405851:	mov    QWORD PTR [rbx+0x28],rdx
  405855:	jmp    0x40586e
  405857:	mov    eax,0xc0000000
  40585d:	mov    ecx,0x3
  405863:	lea    rdx,[rip+0xfffffffffffffea6]        # 0x405710
  40586a:	mov    QWORD PTR [rbx+0x28],rdx
  40586e:	lea    rdx,[rip+0xfffffffffffffe8b]        # 0x405700
  405875:	mov    QWORD PTR [rbx+0x30],rdx
  405879:	cmp    WORD PTR [rbx+0x60],0x0
  40587e:	jne    0x40593d
  405884:	cmp    QWORD PTR [rbx+0x18],0x0
  405889:	jne    0x40589d
  40588b:	lea    rax,[rbx+0x268]
  405892:	mov    QWORD PTR [rbx+0x18],rax
  405896:	mov    DWORD PTR [rbx+0xc],0x80
  40589d:	lea    rax,[rip+0xfffffffffffffe5c]        # 0x405700
  4058a4:	mov    QWORD PTR [rbx+0x38],rax
  4058a8:	cmp    WORD PTR [rbx+0x8],0xd7b2
  4058ae:	jne    0x4058d6
  4058b0:	lea    rax,[rip+0x11dc1]        # 0x417678
  4058b7:	cmp    rbx,rax
  4058ba:	jne    0x4058c4
  4058bc:	mov    eax,0xfffffff4
  4058c2:	jmp    0x4058ca
  4058c4:	mov    eax,0xfffffff5
  4058ca:	mov    ecx,eax
  4058cc:	call   0x4028a0
  4058d1:	mov    QWORD PTR [rbx],rax
  4058d4:	jmp    0x4058e4
  4058d6:	mov    ecx,0xfffffff6
  4058dc:	call   0x4028a0
  4058e1:	mov    QWORD PTR [rbx],rax
  4058e4:	cmp    WORD PTR [rbx+0x2e8],0x0
  4058ec:	jne    0x405a9c
  4058f2:	mov    rcx,QWORD PTR [rbx]
  4058f5:	call   0x4028d0
  4058fa:	cmp    eax,0x2
  4058fd:	jne    0x405929
  4058ff:	cmp    WORD PTR [rbx+0x8],0xd7b2
  405905:	jne    0x405918
  405907:	call   0x402a40
  40590c:	mov    WORD PTR [rbx+0x2e8],ax
  405913:	jmp    0x405a9c
  405918:	call   0x402a30
  40591d:	mov    WORD PTR [rbx+0x2e8],ax
  405924:	jmp    0x405a9c
  405929:	movzx  rax,WORD PTR [rip+0x12047]        # 0x417978
  405931:	mov    WORD PTR [rbx+0x2e8],ax
  405938:	jmp    0x405a9c
  40593d:	lea    rdx,[rip+0xfffffffffffffe3c]        # 0x405780
  405944:	mov    QWORD PTR [rbx+0x38],rdx
  405948:	lea    rdx,[rbx+0x60]
  40594c:	mov    r8d,0x1
  405953:	xor    r9,r9
  405956:	mov    DWORD PTR [rsp+0x20],ecx
  40595a:	mov    DWORD PTR [rsp+0x28],0x80
  405962:	mov    QWORD PTR [rsp+0x30],0x0
  40596b:	mov    rcx,rdx
  40596e:	mov    edx,eax
  405970:	call   0x4028b0
  405975:	cmp    rax,0xffffffffffffffff
  405979:	jne    0x40598d
  40597b:	mov    WORD PTR [rbx+0x8],0xd7b0
  405981:	call   0x4029b0
  405986:	mov    esi,eax
  405988:	jmp    0x405ad8
  40598d:	mov    QWORD PTR [rbx],rax
  405990:	cmp    WORD PTR [rbx+0x8],0xd7b3
  405996:	jne    0x405a83
  40599c:	mov    WORD PTR [rbx+0x8],0xd7b2
  4059a2:	mov    rcx,QWORD PTR [rbx]
  4059a5:	xor    rdx,rdx
  4059a8:	call   0x4028c0
  4059ad:	cmp    eax,0xffffffff
  4059b0:	jne    0x4059c1
  4059b2:	mov    rcx,rbx
  4059b5:	call   0x4057b0
  4059ba:	mov    esi,eax
  4059bc:	jmp    0x405ad8
  4059c1:	sub    eax,0x80
  4059c7:	test   eax,eax
  4059c9:	jge    0x4059ce
  4059cb:	xor    rax,rax
  4059ce:	mov    rcx,QWORD PTR [rbx]
  4059d1:	mov    edx,eax
  4059d3:	xor    r8,r8
  4059d6:	xor    r9,r9
  4059d9:	call   0x402900
  4059de:	cmp    eax,0xffffffff
  4059e1:	je     0x405a0a
  4059e3:	mov    rcx,QWORD PTR [rbx]
  4059e6:	lea    rdx,[rbx+0x268]
  4059ed:	mov    r8d,0x80
  4059f4:	lea    r9,[rbp+0x4c]
  4059f8:	mov    QWORD PTR [rsp+0x20],0x0
  405a01:	call   0x4028e0
  405a06:	test   eax,eax
  405a08:	jne    0x405a19
  405a0a:	mov    rcx,rbx
  405a0d:	call   0x4057b0
  405a12:	mov    esi,eax
  405a14:	jmp    0x405ad8
  405a19:	movzx  rax,WORD PTR [rbx+0xa]
  405a1e:	test   ax,0x1
  405a23:	je     0x405a83
  405a25:	cmp    DWORD PTR [rbp+0x4c],0x0
  405a29:	jbe    0x405a83
  405a2b:	xor    rax,rax
  405a2e:	mov    ecx,DWORD PTR [rbp+0x4c]
  405a31:	sub    ecx,0x1
  405a34:	cmp    eax,ecx
  405a36:	ja     0x405a82
  405a38:	add    ecx,0x1
  405a3b:	mov    edx,eax
  405a3d:	cmp    BYTE PTR [rbx+rdx*1+0x268],0x1a
  405a45:	jne    0x405a7b
  405a47:	mov    rcx,QWORD PTR [rbx]
  405a4a:	mov    edx,eax
  405a4c:	sub    edx,DWORD PTR [rbp+0x4c]
  405a4f:	xor    r8,r8
  405a52:	mov    r9d,0x2
  405a59:	call   0x402900
  405a5e:	cmp    eax,0xffffffff
  405a61:	je     0x405a6f
  405a63:	mov    rcx,QWORD PTR [rbx]
  405a66:	call   0x4028f0
  405a6b:	test   eax,eax
  405a6d:	jne    0x405a82
  405a6f:	mov    rcx,rbx
  405a72:	call   0x4057b0
  405a77:	mov    esi,eax
  405a79:	jmp    0x405ad8
  405a7b:	add    eax,0x1
  405a7e:	cmp    eax,ecx
  405a80:	jne    0x405a3b
  405a82:	nop
  405a83:	cmp    WORD PTR [rbx+0x2e8],0x0
  405a8b:	jne    0x405a9c
  405a8d:	movzx  rax,WORD PTR [rip+0x11ee3]        # 0x417978
  405a95:	mov    WORD PTR [rbx+0x2e8],ax
  405a9c:	cmp    WORD PTR [rbx+0x8],0xd7b1
  405aa2:	je     0x405ad8
  405aa4:	mov    rcx,QWORD PTR [rbx]
  405aa7:	call   0x4028d0
  405aac:	sub    eax,0x1
  405aaf:	cmp    eax,0xffffffff
  405ab2:	je     0x405abd
  405ab4:	sub    eax,0x1
  405ab7:	test   eax,eax
  405ab9:	jne    0x405ad8
  405abb:	jmp    0x405acd
  405abd:	mov    rcx,rbx
  405ac0:	call   0x4057b0
  405ac5:	mov    esi,0x69
  405acb:	jmp    0x405ad8
  405acd:	lea    rax,[rip+0xfffffffffffffc3c]        # 0x405710
  405ad4:	mov    QWORD PTR [rbx+0x30],rax
  405ad8:	mov    eax,esi
  405ada:	lea    rsp,[rbp+0x50]
  405ade:	pop    rbx
  405adf:	pop    rsi
  405ae0:	pop    rbp
  405ae1:	ret    
  405ae2:	int3   
  405ae3:	int3   
  405ae4:	int3   
  405ae5:	int3   
  405ae6:	int3   
  405ae7:	int3   
  405ae8:	int3   
  405ae9:	int3   
  405aea:	int3   
  405aeb:	int3   
  405aec:	int3   
  405aed:	int3   
  405aee:	int3   
  405aef:	int3   
  405af0:	push   rbx
  405af1:	sub    rsp,0x20
  405af5:	mov    rax,rdx
  405af8:	movzx  rdx,WORD PTR [rcx+0x8]
  405afd:	sub    dx,0xd7b1
  405b02:	test   dx,dx
  405b05:	je     0x405b17
  405b07:	sub    dx,0x1
  405b0b:	cmp    dx,0x2
  405b0f:	jae    0x405b1c
  405b11:	call   rax
  405b13:	mov    ebx,eax
  405b15:	jmp    0x405b3f
  405b17:	xor    rbx,rbx
  405b1a:	jmp    0x405b3f
  405b1c:	lea    rax,[rip+0x1185d]        # 0x417380
  405b23:	cmp    rcx,rax
  405b26:	je     0x405b34
  405b28:	lea    rax,[rip+0x11b49]        # 0x417678
  405b2f:	cmp    rcx,rax
  405b32:	jne    0x405b39
  405b34:	xor    rbx,rbx
  405b37:	jmp    0x405b3f
  405b39:	mov    ebx,0x67
  405b3f:	test   ebx,ebx
  405b41:	je     0x405b4a
  405b43:	mov    ecx,ebx
  405b45:	call   0x405220
  405b4a:	mov    eax,ebx
  405b4c:	add    rsp,0x20
  405b50:	pop    rbx
  405b51:	ret    
  405b52:	int3   
  405b53:	int3   
  405b54:	int3   
  405b55:	int3   
  405b56:	int3   
  405b57:	int3   
  405b58:	int3   
  405b59:	int3   
  405b5a:	int3   
  405b5b:	int3   
  405b5c:	int3   
  405b5d:	int3   
  405b5e:	int3   
  405b5f:	int3   
  405b60:	sub    rsp,0x28
  405b64:	mov    rax,rcx
  405b67:	mov    rdx,QWORD PTR [rcx+0x30]
  405b6b:	mov    rcx,rax
  405b6e:	call   0x405af0
  405b73:	add    rsp,0x28
  405b77:	ret    
  405b78:	int3   
  405b79:	int3   
  405b7a:	int3   
  405b7b:	int3   
  405b7c:	int3   
  405b7d:	int3   
  405b7e:	int3   
  405b7f:	int3   
  405b80:	push   rsi
  405b81:	push   rbx
  405b82:	sub    rsp,0x28
  405b86:	mov    rbx,rcx
  405b89:	xor    rsi,rsi
  405b8c:	cmp    WORD PTR [rbx+0x8],0xd7b1
  405b92:	jb     0x405bce
  405b94:	cmp    WORD PTR [rbx+0x8],0xd7b3
  405b9a:	ja     0x405bce
  405b9c:	movzx  rax,WORD PTR [rbx+0x8]
  405ba1:	and    ax,0xd7b2
  405ba6:	cmp    ax,0xd7b2
  405bab:	jne    0x405bb5
  405bad:	mov    rcx,rbx
  405bb0:	call   QWORD PTR [rbx+0x28]
  405bb3:	mov    esi,eax
  405bb5:	test   esi,esi
  405bb7:	jne    0x405bc1
  405bb9:	mov    rcx,rbx
  405bbc:	call   QWORD PTR [rbx+0x38]
  405bbf:	mov    esi,eax
  405bc1:	test   esi,esi
  405bc3:	je     0x405be5
  405bc5:	mov    ecx,esi
  405bc7:	call   0x405220
  405bcc:	jmp    0x405be5
  405bce:	lea    rax,[rip+0x114b3]        # 0x417088
  405bd5:	cmp    rbx,rax
  405bd8:	je     0x405be5
  405bda:	mov    ecx,0x67
  405be0:	call   0x405220
  405be5:	mov    eax,esi
  405be7:	add    rsp,0x28
  405beb:	pop    rbx
  405bec:	pop    rsi
  405bed:	ret    
  405bee:	int3   
  405bef:	int3   
  405bf0:	mov    r9,rcx
  405bf3:	cmp    rdx,0x8
  405bf7:	jl     0x405c53
  405bf9:	movzx  rcx,r8b
  405bfd:	movzx  rax,r8b
  405c01:	shl    eax,0x8
  405c04:	or     ecx,eax
  405c06:	movzx  rax,r8b
  405c0a:	shl    eax,0x10
  405c0d:	or     ecx,eax
  405c0f:	movzx  rax,r8b
  405c13:	shl    eax,0x18
  405c16:	or     ecx,eax
  405c18:	mov    ecx,ecx
  405c1a:	mov    rax,rcx
  405c1d:	shl    rax,0x20
  405c21:	or     rcx,rax
  405c24:	mov    rax,rdx
  405c27:	shr    rax,0x3
  405c2b:	xor    r10,r10
  405c2e:	lea    r11,[rax-0x1]
  405c32:	mov    rax,r10
  405c35:	cmp    rax,r11
  405c38:	jg     0x405c4e
  405c3a:	add    r11,0x1
  405c3e:	mov    QWORD PTR [r9],rcx
  405c41:	add    r9,0x8
  405c45:	add    rax,0x1
  405c49:	cmp    rax,r11
  405c4c:	jne    0x405c3e
  405c4e:	nop
  405c4f:	and    rdx,0x7
  405c53:	xor    rax,rax
  405c56:	lea    rcx,[rdx-0x1]
  405c5a:	cmp    rax,rcx
  405c5d:	jg     0x405c73
  405c5f:	add    rcx,0x1
  405c63:	mov    BYTE PTR [r9],r8b
  405c66:	add    r9,0x1
  405c6a:	add    rax,0x1
  405c6e:	cmp    rax,rcx
  405c71:	jne    0x405c63
  405c73:	nop
  405c74:	ret    
  405c75:	int3   
  405c76:	int3   
  405c77:	int3   
  405c78:	int3   
  405c79:	int3   
  405c7a:	int3   
  405c7b:	int3   
  405c7c:	int3   
  405c7d:	int3   
  405c7e:	int3   
  405c7f:	int3   
  405c80:	push   rbx
  405c81:	sub    rsp,0x20
  405c85:	mov    rbx,rcx
  405c88:	lea    rax,[rip+0x116f1]        # 0x417380
  405c8f:	cmp    rbx,rax
  405c92:	je     0x405ca0
  405c94:	lea    rax,[rip+0x119dd]        # 0x417678
  405c9b:	cmp    rbx,rax
  405c9e:	jne    0x405cb4
  405ca0:	movzx  ax,BYTE PTR [rip+0xe383]        # 0x41402b
  405ca8:	mov    WORD PTR [rbx+0xa],ax
  405cac:	mov    rcx,rbx
  405caf:	call   0x405690
  405cb4:	cmp    WORD PTR [rbx+0x8],0xd7b2
  405cba:	sete   bl
  405cbd:	test   bl,bl
  405cbf:	jne    0x405ccc
  405cc1:	mov    ecx,0x69
  405cc7:	call   0x405220
  405ccc:	mov    eax,ebx
  405cce:	add    rsp,0x20
  405cd2:	pop    rbx
  405cd3:	ret    
  405cd4:	int3   
  405cd5:	int3   
  405cd6:	int3   
  405cd7:	int3   
  405cd8:	int3   
  405cd9:	int3   
  405cda:	int3   
  405cdb:	int3   
  405cdc:	int3   
  405cdd:	int3   
  405cde:	int3   
  405cdf:	int3   
  405ce0:	push   r14
  405ce2:	push   r13
  405ce4:	push   rdi
  405ce5:	push   rsi
  405ce6:	push   rbx
  405ce7:	sub    rsp,0x20
  405ceb:	mov    rbx,rcx
  405cee:	mov    rsi,rdx
  405cf1:	mov    edi,r8d
  405cf4:	mov    r13,rbx
  405cf7:	cmp    WORD PTR [rbx+0x8],0xd7b2
  405cfd:	je     0x405d0b
  405cff:	mov    rcx,rbx
  405d02:	call   0x405c80
  405d07:	test   al,al
  405d09:	je     0x405d81
  405d0b:	mov    rax,QWORD PTR [rbx+0x18]
  405d0f:	mov    ecx,DWORD PTR [rbx+0x10]
  405d12:	lea    rax,[rax+rcx*1]
  405d16:	mov    r14d,DWORD PTR [rbx+0xc]
  405d1a:	sub    r14d,DWORD PTR [rbx+0x10]
  405d1e:	cmp    r14d,edi
  405d21:	jg     0x405d6c
  405d23:	lea    rcx,[rbx+0x10]
  405d27:	add    DWORD PTR [rcx],r14d
  405d2a:	sub    edi,r14d
  405d2d:	mov    rcx,rsi
  405d30:	mov    rdx,rax
  405d33:	movsxd r8,r14d
  405d36:	call   0x405240
  405d3b:	movsxd r14,r14d
  405d3e:	add    rsi,r14
  405d41:	mov    rcx,rbx
  405d44:	call   QWORD PTR [rbx+0x28]
  405d47:	test   eax,eax
  405d49:	je     0x405d54
  405d4b:	mov    ecx,eax
  405d4d:	call   0x405220
  405d52:	jmp    0x405d81
  405d54:	mov    rax,QWORD PTR [rbx+0x18]
  405d58:	mov    ecx,DWORD PTR [rbx+0x10]
  405d5b:	lea    rax,[rax+rcx*1]
  405d5f:	mov    r14d,DWORD PTR [rbx+0xc]
  405d63:	sub    r14d,DWORD PTR [rbx+0x10]
  405d67:	cmp    r14d,edi
  405d6a:	jle    0x405d23
  405d6c:	nop
  405d6d:	lea    rcx,[rbx+0x10]
  405d71:	add    DWORD PTR [rcx],edi
  405d73:	mov    rcx,rsi
  405d76:	mov    rdx,rax
  405d79:	movsxd r8,edi
  405d7c:	call   0x405240
  405d81:	mov    rax,r13
  405d84:	add    rsp,0x20
  405d88:	pop    rbx
  405d89:	pop    rsi
  405d8a:	pop    rdi
  405d8b:	pop    r13
  405d8d:	pop    r14
  405d8f:	ret    
  405d90:	push   rbp
  405d91:	sub    rsp,0x50
  405d95:	mov    rbp,rsp
  405d98:	mov    QWORD PTR [rbp+0x28],rcx
  405d9c:	mov    DWORD PTR [rbp+0x34],edx
  405d9f:	mov    QWORD PTR [rbp+0x48],0x0
  405da7:	nop
  405da8:	mov    rax,QWORD PTR [rbp+0x28]
  405dac:	mov    QWORD PTR [rbp+0x38],rax
  405db0:	mov    eax,DWORD PTR [rbp+0x34]
  405db3:	cmp    eax,0x40
  405db6:	jle    0x405e1b
  405db8:	lea    rcx,[rbp+0x48]
  405dbc:	mov    edx,0x40
  405dc2:	xor    r8,r8
  405dc5:	call   0x408d60
  405dca:	lea    rcx,[rbp+0x48]
  405dce:	call   0x408c30
  405dd3:	mov    rcx,rax
  405dd6:	mov    edx,0x40
  405ddc:	mov    r8w,0x20
  405de1:	call   0x405bf0
  405de6:	mov    eax,DWORD PTR [rbp+0x34]
  405de9:	cmp    eax,0x40
  405dec:	jle    0x405e1a
  405dee:	mov    rcx,QWORD PTR [rbp+0x28]
  405df2:	mov    rdx,QWORD PTR [rbp+0x48]
  405df6:	call   0x406120
  405dfb:	call   0x40b590
  405e00:	cmp    DWORD PTR [rax+0x210],0x0
  405e07:	jne    0x405e69
  405e09:	mov    eax,DWORD PTR [rbp+0x34]
  405e0c:	sub    eax,0x40
  405e0f:	mov    DWORD PTR [rbp+0x34],eax
  405e12:	mov    eax,DWORD PTR [rbp+0x34]
  405e15:	cmp    eax,0x40
  405e18:	jg     0x405dee
  405e1a:	nop
  405e1b:	mov    eax,DWORD PTR [rbp+0x34]
  405e1e:	test   eax,eax
  405e20:	jle    0x405e68
  405e22:	lea    rcx,[rbp+0x48]
  405e26:	mov    edx,DWORD PTR [rbp+0x34]
  405e29:	xor    r8,r8
  405e2c:	call   0x408d60
  405e31:	lea    rcx,[rbp+0x48]
  405e35:	call   0x408c30
  405e3a:	mov    rcx,rax
  405e3d:	mov    edx,DWORD PTR [rbp+0x34]
  405e40:	movsxd rdx,edx
  405e43:	mov    r8w,0x20
  405e48:	call   0x405bf0
  405e4d:	mov    rcx,QWORD PTR [rbp+0x28]
  405e51:	mov    rdx,QWORD PTR [rbp+0x48]
  405e55:	call   0x406120
  405e5a:	call   0x40b590
  405e5f:	cmp    DWORD PTR [rax+0x210],0x0
  405e66:	jne    0x405e69
  405e68:	nop
  405e69:	lea    rcx,[rbp+0x48]
  405e6d:	call   0x408530
  405e72:	mov    rax,QWORD PTR [rbp+0x38]
  405e76:	lea    rsp,[rbp+0x50]
  405e7a:	pop    rbp
  405e7b:	ret    
  405e7c:	lea    rax,[rax+0x0]
  405e80:	push   rbp
  405e81:	sub    rsp,0x20
  405e85:	mov    rbp,rsp
  405e88:	lea    rcx,[rdx+0x48]
  405e8c:	call   0x408530
  405e91:	lea    rsp,[rbp+0x20]
  405e95:	pop    rbp
  405e96:	ret    
  405e97:	int3   
  405e98:	int3   
  405e99:	int3   
  405e9a:	int3   
  405e9b:	int3   
  405e9c:	int3   
  405e9d:	int3   
  405e9e:	int3   
  405e9f:	int3   
  405ea0:	push   rbp
  405ea1:	sub    rsp,0x40
  405ea5:	mov    rbp,rsp
  405ea8:	mov    QWORD PTR [rbp+0x28],rcx
  405eac:	mov    QWORD PTR [rbp+0x38],0x0
  405eb4:	nop
  405eb5:	lea    rcx,[rbp+0x38]
  405eb9:	mov    rax,QWORD PTR [rbp+0x28]
  405ebd:	mov    rax,QWORD PTR [rax+0x30]
  405ec1:	lea    rdx,[rax+0x2ec]
  405ec8:	mov    rax,QWORD PTR [rbp+0x28]
  405ecc:	mov    rax,QWORD PTR [rax+0x30]
  405ed0:	movsx  r8,BYTE PTR [rax+0x2ea]
  405ed8:	mov    r9d,DWORD PTR [rip+0x11a99]        # 0x417978
  405edf:	call   0x408830
  405ee4:	mov    rax,QWORD PTR [rbp+0x28]
  405ee8:	mov    rcx,QWORD PTR [rax+0x30]
  405eec:	mov    rdx,QWORD PTR [rbp+0x38]
  405ef0:	call   0x406200
  405ef5:	mov    rax,QWORD PTR [rbp+0x28]
  405ef9:	mov    rax,QWORD PTR [rax+0x30]
  405efd:	mov    BYTE PTR [rax+0x2ea],0x0
  405f04:	mov    rax,QWORD PTR [rbp+0x28]
  405f08:	mov    rax,QWORD PTR [rax+0x30]
  405f0c:	mov    BYTE PTR [rax+0x2eb],0x0
  405f13:	nop
  405f14:	lea    rcx,[rbp+0x38]
  405f18:	call   0x4084e0
  405f1d:	lea    rsp,[rbp+0x40]
  405f21:	pop    rbp
  405f22:	ret    
  405f23:	lea    rax,[rax+riz*1+0x0]
  405f28:	lea    rax,[rax*1+0x0]
  405f30:	push   rbp
  405f31:	sub    rsp,0x20
  405f35:	mov    rbp,rsp
  405f38:	lea    rcx,[rdx+0x38]
  405f3c:	call   0x4084e0
  405f41:	lea    rsp,[rbp+0x20]
  405f45:	pop    rbp
  405f46:	ret    
  405f47:	int3   
  405f48:	int3   
  405f49:	int3   
  405f4a:	int3   
  405f4b:	int3   
  405f4c:	int3   
  405f4d:	int3   
  405f4e:	int3   
  405f4f:	int3   
  405f50:	push   rbp
  405f51:	sub    rsp,0x20
  405f55:	mov    rbp,rsp
  405f58:	mov    QWORD PTR [rbp+0x30],rcx
  405f5c:	mov    BYTE PTR [rbp+0x38],dl
  405f5f:	mov    rax,QWORD PTR [rbp+0x30]
  405f63:	cmp    WORD PTR [rax+0x2e8],0x0
  405f6b:	jne    0x405f76
  405f6d:	mov    rcx,QWORD PTR [rbp+0x30]
  405f71:	call   0x405c80
  405f76:	mov    rax,QWORD PTR [rbp+0x30]
  405f7a:	movzx  eax,WORD PTR [rax+0x2e8]
  405f81:	cmp    eax,DWORD PTR [rip+0x119f1]        # 0x417978
  405f87:	jne    0x405fa2
  405f89:	mov    rcx,QWORD PTR [rbp+0x30]
  405f8d:	lea    rdx,[rbp+0x38]
  405f91:	mov    r8d,0x1
  405f98:	call   0x405ce0
  405f9d:	jmp    0x406106
  405fa2:	mov    rax,QWORD PTR [rbp+0x30]
  405fa6:	cmp    BYTE PTR [rax+0x2ea],0x0
  405fad:	jne    0x4060ab
  405fb3:	mov    rax,QWORD PTR [rbp+0x30]
  405fb7:	mov    BYTE PTR [rax+0x2ea],0x1
  405fbe:	cmp    DWORD PTR [rip+0x119b0],0xfde9        # 0x417978
  405fc8:	jne    0x406081
  405fce:	movzx  rax,BYTE PTR [rbp+0x38]
  405fd3:	sub    al,0xc0
  405fd6:	cmp    al,0x1f
  405fd9:	ja     0x405ff7
  405fdb:	mov    edx,0x1
  405fe1:	movzx  rcx,al
  405fe5:	and    ecx,0x7f
  405fe8:	shl    edx,cl
  405fea:	mov    eax,DWORD PTR [rip+0x11c]        # 0x40610c
  405ff0:	test   edx,eax
  405ff2:	setne  al
  405ff5:	jmp    0x405ffa
  405ff7:	xor    rax,rax
  405ffa:	test   al,al
  405ffc:	je     0x40600e
  405ffe:	mov    rax,QWORD PTR [rbp+0x30]
  406002:	mov    BYTE PTR [rax+0x2ea],0x2
  406009:	jmp    0x4060a0
  40600e:	movzx  rax,BYTE PTR [rbp+0x38]
  406013:	sub    al,0xe0
  406016:	cmp    al,0xf
  406019:	ja     0x406039
  40601b:	mov    dx,0x1
  40601f:	movzx  cx,al
  406023:	and    cx,0x7f
  406027:	shl    edx,cl
  406029:	movzx  rax,WORD PTR [rip+0xdf]        # 0x406110
  406031:	test   dx,ax
  406034:	setne  al
  406037:	jmp    0x40603c
  406039:	xor    rax,rax
  40603c:	test   al,al
  40603e:	je     0x40604d
  406040:	mov    rax,QWORD PTR [rbp+0x30]
  406044:	mov    BYTE PTR [rax+0x2ea],0x3
  40604b:	jmp    0x4060a0
  40604d:	movzx  rcx,BYTE PTR [rbp+0x38]
  406052:	sub    cl,0xf0
  406055:	cmp    cl,0x7
  406058:	ja     0x40606d
  40605a:	mov    al,0x1
  40605c:	shl    eax,cl
  40605e:	movzx  rcx,BYTE PTR [rip+0xac]        # 0x406112
  406066:	test   al,cl
  406068:	setne  al
  40606b:	jmp    0x406070
  40606d:	xor    rax,rax
  406070:	test   al,al
  406072:	je     0x4060a0
  406074:	mov    rax,QWORD PTR [rbp+0x30]
  406078:	mov    BYTE PTR [rax+0x2ea],0x4
  40607f:	jmp    0x4060a0
  406081:	mov    ecx,DWORD PTR [rip+0x118f1]        # 0x417978
  406087:	movzx  rdx,BYTE PTR [rbp+0x38]
  40608c:	call   0x402a80
  406091:	test   eax,eax
  406093:	je     0x4060a0
  406095:	mov    rax,QWORD PTR [rbp+0x30]
  406099:	mov    BYTE PTR [rax+0x2ea],0x2
  4060a0:	mov    rax,QWORD PTR [rbp+0x30]
  4060a4:	mov    BYTE PTR [rax+0x2eb],0x0
  4060ab:	mov    rax,QWORD PTR [rbp+0x30]
  4060af:	cmp    BYTE PTR [rax+0x2ea],0x0
  4060b6:	jle    0x406102
  4060b8:	mov    rax,QWORD PTR [rbp+0x30]
  4060bc:	mov    rcx,QWORD PTR [rbp+0x30]
  4060c0:	movzx  rcx,BYTE PTR [rcx+0x2eb]
  4060c8:	movzx  rdx,BYTE PTR [rbp+0x38]
  4060cd:	mov    BYTE PTR [rax+rcx*1+0x2ec],dl
  4060d4:	mov    rax,QWORD PTR [rbp+0x30]
  4060d8:	lea    rax,[rax+0x2eb]
  4060df:	add    BYTE PTR [rax],0x1
  4060e2:	mov    rax,QWORD PTR [rbp+0x30]
  4060e6:	mov    rcx,QWORD PTR [rbp+0x30]
  4060ea:	movzx  rax,BYTE PTR [rax+0x2eb]
  4060f2:	cmp    al,BYTE PTR [rcx+0x2ea]
  4060f8:	jne    0x406102
  4060fa:	mov    rcx,rbp
  4060fd:	call   0x405ea0
  406102:	mov    rax,QWORD PTR [rbp+0x30]
  406106:	lea    rsp,[rbp+0x20]
  40610a:	pop    rbp
  40610b:	ret    
  40610c:	cld    
  40610d:	(bad)  
  40610e:	(bad)  
  40610f:	(bad)  
  406110:	(bad)  
  406111:	call   FWORD PTR [rdi]
  406113:	int3   
  406114:	int3   
  406115:	int3   
  406116:	int3   
  406117:	int3   
  406118:	int3   
  406119:	int3   
  40611a:	int3   
  40611b:	int3   
  40611c:	int3   
  40611d:	int3   
  40611e:	int3   
  40611f:	int3   
  406120:	push   rbp
  406121:	push   rbx
  406122:	sub    rsp,0x48
  406126:	mov    rbp,rsp
  406129:	mov    QWORD PTR [rbp+0x20],rcx
  40612d:	mov    QWORD PTR [rbp+0x28],rdx
  406131:	mov    QWORD PTR [rbp+0x38],0x0
  406139:	nop
  40613a:	mov    rcx,QWORD PTR [rbp+0x20]
  40613e:	call   0x405600
  406143:	mov    rax,QWORD PTR [rbp+0x20]
  406147:	mov    QWORD PTR [rbp+0x30],rax
  40614b:	mov    rax,QWORD PTR [rbp+0x28]
  40614f:	test   rax,rax
  406152:	je     0x4061c9
  406154:	mov    rax,QWORD PTR [rbp+0x20]
  406158:	cmp    WORD PTR [rax+0x2e8],0x0
  406160:	jne    0x40616b
  406162:	mov    rcx,QWORD PTR [rbp+0x20]
  406166:	call   0x405c80
  40616b:	mov    rax,QWORD PTR [rbp+0x20]
  40616f:	movzx  rax,WORD PTR [rax+0x2e8]
  406177:	mov    rcx,QWORD PTR [rbp+0x28]
  40617b:	cmp    ax,WORD PTR [rcx-0xc]
  40617f:	jne    0x4061ab
  406181:	mov    rcx,QWORD PTR [rbp+0x28]
  406185:	call   0x408d30
  40618a:	mov    rbx,rax
  40618d:	mov    rcx,QWORD PTR [rbp+0x28]
  406191:	call   0x408b10
  406196:	mov    rcx,QWORD PTR [rbp+0x20]
  40619a:	mov    rdx,rbx
  40619d:	mov    r8d,eax
  4061a0:	call   0x405ce0
  4061a5:	mov    QWORD PTR [rbp+0x30],rax
  4061a9:	jmp    0x4061c9
  4061ab:	lea    rcx,[rbp+0x38]
  4061af:	mov    rdx,QWORD PTR [rbp+0x28]
  4061b3:	call   0x409330
  4061b8:	mov    rcx,QWORD PTR [rbp+0x20]
  4061bc:	mov    rdx,QWORD PTR [rbp+0x38]
  4061c0:	call   0x406200
  4061c5:	mov    QWORD PTR [rbp+0x30],rax
  4061c9:	nop
  4061ca:	lea    rcx,[rbp+0x38]
  4061ce:	call   0x4084e0
  4061d3:	mov    rax,QWORD PTR [rbp+0x30]
  4061d7:	lea    rsp,[rbp+0x48]
  4061db:	pop    rbx
  4061dc:	pop    rbp
  4061dd:	ret    
  4061de:	rex.W nop
  4061e0:	push   rbp
  4061e1:	sub    rsp,0x20
  4061e5:	mov    rbp,rsp
  4061e8:	lea    rcx,[rdx+0x38]
  4061ec:	call   0x4084e0
  4061f1:	lea    rsp,[rbp+0x20]
  4061f5:	pop    rbp
  4061f6:	ret    
  4061f7:	int3   
  4061f8:	int3   
  4061f9:	int3   
  4061fa:	int3   
  4061fb:	int3   
  4061fc:	int3   
  4061fd:	int3   
  4061fe:	int3   
  4061ff:	int3   
  406200:	sub    rsp,0x28
  406204:	xor    r8,r8
  406207:	call   0x406220
  40620c:	add    rsp,0x28
  406210:	ret    
  406211:	int3   
  406212:	int3   
  406213:	int3   
  406214:	int3   
  406215:	int3   
  406216:	int3   
  406217:	int3   
  406218:	int3   
  406219:	int3   
  40621a:	int3   
  40621b:	int3   
  40621c:	int3   
  40621d:	int3   
  40621e:	int3   
  40621f:	int3   
  406220:	push   rbp
  406221:	push   rbx
  406222:	sub    rsp,0x58
  406226:	mov    rbp,rsp
  406229:	mov    QWORD PTR [rbp+0x20],rcx
  40622d:	mov    QWORD PTR [rbp+0x28],rdx
  406231:	mov    DWORD PTR [rbp+0x34],r8d
  406235:	mov    QWORD PTR [rbp+0x48],0x0
  40623d:	nop
  40623e:	mov    rax,QWORD PTR [rbp+0x28]
  406242:	test   rax,rax
  406245:	jne    0x40625c
  406247:	mov    rcx,QWORD PTR [rbp+0x20]
  40624b:	mov    edx,DWORD PTR [rbp+0x34]
  40624e:	call   0x405d90
  406253:	mov    QWORD PTR [rbp+0x38],rax
  406257:	jmp    0x406328
  40625c:	mov    rax,QWORD PTR [rbp+0x20]
  406260:	cmp    WORD PTR [rax+0x2e8],0x0
  406268:	jne    0x406273
  40626a:	mov    rcx,QWORD PTR [rbp+0x20]
  40626e:	call   0x405c80
  406273:	mov    rax,QWORD PTR [rbp+0x20]
  406277:	cmp    WORD PTR [rax+0x2e8],0x4b0
  406280:	jne    0x4062bc
  406282:	mov    rcx,QWORD PTR [rbp+0x28]
  406286:	call   0x408b00
  40628b:	mov    ebx,eax
  40628d:	mov    rcx,QWORD PTR [rbp+0x20]
  406291:	mov    edx,DWORD PTR [rbp+0x34]
  406294:	sub    edx,ebx
  406296:	call   0x405d90
  40629b:	mov    rcx,QWORD PTR [rbp+0x28]
  40629f:	call   0x409260
  4062a4:	mov    rcx,QWORD PTR [rbp+0x20]
  4062a8:	mov    rdx,rax
  4062ab:	mov    r8d,ebx
  4062ae:	add    r8d,r8d
  4062b1:	call   0x405ce0
  4062b6:	mov    QWORD PTR [rbp+0x38],rax
  4062ba:	jmp    0x406328
  4062bc:	cmp    QWORD PTR [rip+0xdd7c],0x0        # 0x414040
  4062c4:	je     0x4062da
  4062c6:	mov    rcx,QWORD PTR [rbp+0x20]
  4062ca:	mov    rdx,QWORD PTR [rbp+0x28]
  4062ce:	call   QWORD PTR [rip+0xdd6c]        # 0x414040
  4062d4:	mov    QWORD PTR [rbp+0x38],rax
  4062d8:	jmp    0x406328
  4062da:	lea    rcx,[rbp+0x48]
  4062de:	mov    rdx,QWORD PTR [rbp+0x28]
  4062e2:	mov    rax,QWORD PTR [rbp+0x20]
  4062e6:	movzx  r8,WORD PTR [rax+0x2e8]
  4062ee:	call   0x408e30
  4062f3:	mov    rcx,QWORD PTR [rbp+0x48]
  4062f7:	call   0x408b10
  4062fc:	mov    ebx,eax
  4062fe:	mov    rcx,QWORD PTR [rbp+0x20]
  406302:	mov    edx,DWORD PTR [rbp+0x34]
  406305:	sub    edx,ebx
  406307:	call   0x405d90
  40630c:	lea    rcx,[rbp+0x48]
  406310:	call   0x408c30
  406315:	mov    rcx,QWORD PTR [rbp+0x20]
  406319:	mov    rdx,rax
  40631c:	mov    r8d,ebx
  40631f:	call   0x405ce0
  406324:	mov    QWORD PTR [rbp+0x38],rax
  406328:	nop
  406329:	lea    rcx,[rbp+0x48]
  40632d:	call   0x408530
  406332:	mov    rax,QWORD PTR [rbp+0x38]
  406336:	lea    rsp,[rbp+0x58]
  40633a:	pop    rbx
  40633b:	pop    rbp
  40633c:	ret    
  40633d:	mov    rax,rax
  406340:	push   rbp
  406341:	sub    rsp,0x20
  406345:	mov    rbp,rsp
  406348:	lea    rcx,[rdx+0x48]
  40634c:	call   0x408530
  406351:	lea    rsp,[rbp+0x20]
  406355:	pop    rbp
  406356:	ret    
  406357:	int3   
  406358:	int3   
  406359:	int3   
  40635a:	int3   
  40635b:	int3   
  40635c:	int3   
  40635d:	int3   
  40635e:	int3   
  40635f:	int3   
  406360:	push   rsi
  406361:	push   rbx
  406362:	sub    rsp,0x28
  406366:	mov    rbx,rcx
  406369:	movzx  rax,WORD PTR [rbx+0xa]
  40636e:	test   ax,0x1
  406373:	je     0x40637f
  406375:	mov    rcx,rbx
  406378:	mov    dl,0xd
  40637a:	call   0x405f50
  40637f:	mov    rcx,rbx
  406382:	mov    dl,0xa
  406384:	call   0x405f50
  406389:	mov    rsi,rax
  40638c:	mov    rcx,rbx
  40638f:	call   0x405b60
  406394:	mov    rax,rsi
  406397:	add    rsp,0x28
  40639b:	pop    rbx
  40639c:	pop    rsi
  40639d:	ret    
  40639e:	int3   
  40639f:	int3   
  4063a0:	sub    rsp,0x28
  4063a4:	mov    DWORD PTR [rip+0x10cce],0x3        # 0x41707c
  4063ae:	call   0x4055e0
  4063b3:	and    ax,0x1f3f
  4063b8:	mov    WORD PTR [rip+0xdc61],ax        # 0x414020
  4063bf:	add    rsp,0x28
  4063c3:	ret    
  4063c4:	int3   
  4063c5:	int3   
  4063c6:	int3   
  4063c7:	int3   
  4063c8:	int3   
  4063c9:	int3   
  4063ca:	int3   
  4063cb:	int3   
  4063cc:	int3   
  4063cd:	int3   
  4063ce:	int3   
  4063cf:	int3   
  4063d0:	ldmxcsr DWORD PTR [rip+0xdc4d]        # 0x414024
  4063d7:	ret    
  4063d8:	int3   
  4063d9:	int3   
  4063da:	int3   
  4063db:	int3   
  4063dc:	int3   
  4063dd:	int3   
  4063de:	int3   
  4063df:	int3   
  4063e0:	push   rbp
  4063e1:	sub    rsp,0x20
  4063e5:	mov    rbp,rsp
  4063e8:	mov    cl,0x5
  4063ea:	mov    rdx,QWORD PTR [rbp+0x28]
  4063ee:	call   0x405170
  4063f3:	lea    rsp,[rbp+0x20]
  4063f7:	pop    rbp
  4063f8:	ret    
  4063f9:	int3   
  4063fa:	int3   
  4063fb:	int3   
  4063fc:	int3   
  4063fd:	int3   
  4063fe:	int3   
  4063ff:	int3   
  406400:	push   rbx
  406401:	sub    rsp,0x20
  406405:	mov    rbx,rdx
  406408:	mov    rax,rbx
  40640b:	mov    rdx,QWORD PTR [rcx-0x88]
  406412:	mov    rcx,rax
  406415:	call   0x40b1d0
  40641a:	mov    rax,rbx
  40641d:	add    rsp,0x20
  406421:	pop    rbx
  406422:	ret    
  406423:	int3   
  406424:	int3   
  406425:	int3   
  406426:	int3   
  406427:	int3   
  406428:	int3   
  406429:	int3   
  40642a:	int3   
  40642b:	int3   
  40642c:	int3   
  40642d:	int3   
  40642e:	int3   
  40642f:	int3   
  406430:	mov    rax,QWORD PTR [rcx-0x78]
  406434:	test   rax,rax
  406437:	je     0x40643c
  406439:	mov    rax,QWORD PTR [rax]
  40643c:	ret    
  40643d:	int3   
  40643e:	int3   
  40643f:	int3   
  406440:	push   rbx
  406441:	sub    rsp,0x20
  406445:	mov    rbx,rcx
  406448:	mov    rcx,rbx
  40644b:	call   0x4064c0
  406450:	movsxd rcx,eax
  406453:	call   0x404eb0
  406458:	mov    rcx,rbx
  40645b:	mov    rdx,rax
  40645e:	call   0x4065b0
  406463:	add    rsp,0x20
  406467:	pop    rbx
  406468:	ret    
  406469:	int3   
  40646a:	int3   
  40646b:	int3   
  40646c:	int3   
  40646d:	int3   
  40646e:	int3   
  40646f:	int3   
  406470:	push   rbx
  406471:	sub    rsp,0x20
  406475:	mov    rbx,rcx
  406478:	mov    rcx,rbx
  40647b:	call   0x406640
  406480:	mov    rcx,rbx
  406483:	call   0x404ee0
  406488:	add    rsp,0x20
  40648c:	pop    rbx
  40648d:	ret    
  40648e:	int3   
  40648f:	int3   
  406490:	ret    
  406491:	int3   
  406492:	int3   
  406493:	int3   
  406494:	int3   
  406495:	int3   
  406496:	int3   
  406497:	int3   
  406498:	int3   
  406499:	int3   
  40649a:	int3   
  40649b:	int3   
  40649c:	int3   
  40649d:	int3   
  40649e:	int3   
  40649f:	int3   
  4064a0:	ret    
  4064a1:	int3   
  4064a2:	int3   
  4064a3:	int3   
  4064a4:	int3   
  4064a5:	int3   
  4064a6:	int3   
  4064a7:	int3   
  4064a8:	int3   
  4064a9:	int3   
  4064aa:	int3   
  4064ab:	int3   
  4064ac:	int3   
  4064ad:	int3   
  4064ae:	int3   
  4064af:	int3   
  4064b0:	ret    
  4064b1:	int3   
  4064b2:	int3   
  4064b3:	int3   
  4064b4:	int3   
  4064b5:	int3   
  4064b6:	int3   
  4064b7:	int3   
  4064b8:	int3   
  4064b9:	int3   
  4064ba:	int3   
  4064bb:	int3   
  4064bc:	int3   
  4064bd:	int3   
  4064be:	int3   
  4064bf:	int3   
  4064c0:	mov    eax,DWORD PTR [rcx-0x80]
  4064c3:	ret    
  4064c4:	int3   
  4064c5:	int3   
  4064c6:	int3   
  4064c7:	int3   
  4064c8:	int3   
  4064c9:	int3   
  4064ca:	int3   
  4064cb:	int3   
  4064cc:	int3   
  4064cd:	int3   
  4064ce:	int3   
  4064cf:	int3   
  4064d0:	push   rbp
  4064d1:	push   rbx
  4064d2:	sub    rsp,0x38
  4064d6:	mov    rbp,rsp
  4064d9:	mov    QWORD PTR [rbp+0x28],rbp
  4064dd:	mov    QWORD PTR [rbp+0x50],rcx
  4064e1:	mov    BYTE PTR [rbp+0x58],dl
  4064e4:	cmp    BYTE PTR [rbp+0x58],0x0
  4064e8:	je     0x4064fc
  4064ea:	mov    rcx,QWORD PTR [rbp+0x50]
  4064ee:	movzx  rdx,BYTE PTR [rbp+0x58]
  4064f3:	call   0x4068e0
  4064f8:	mov    QWORD PTR [rbp+0x50],rax
  4064fc:	nop
  4064fd:	cmp    BYTE PTR [rbp+0x58],0x0
  406501:	je     0x406540
  406503:	mov    rcx,QWORD PTR [rbp+0x50]
  406507:	call   0x406920
  40650c:	mov    QWORD PTR [rbp+0x50],rax
  406510:	jmp    0x406540
  406512:	nop
  406513:	nop
  406514:	cmp    BYTE PTR [rbp+0x58],0x0
  406518:	je     0x40653a
  40651a:	cmp    QWORD PTR [rbp+0x50],0x0
  40651f:	je     0x40653a
  406521:	mov    rcx,QWORD PTR [rbp+0x50]
  406525:	mov    dl,0x81
  406527:	mov    rax,QWORD PTR [rbp+0x50]
  40652b:	mov    rbx,QWORD PTR [rax]
  40652e:	call   QWORD PTR [rbx-0x20]
  406531:	mov    rcx,QWORD PTR [rbp+0x50]
  406535:	call   0x406900
  40653a:	call   0x407bf0
  40653f:	nop
  406540:	mov    rax,QWORD PTR [rbp+0x50]
  406544:	lea    rsp,[rbp+0x38]
  406548:	pop    rbx
  406549:	pop    rbp
  40654a:	ret    
  40654b:	lea    rax,[rax+riz*1+0x0]
  406550:	sub    rsp,0x28
  406554:	call   0x407c30
  406559:	add    rsp,0x28
  40655d:	ret    
  40655e:	int3   
  40655f:	int3   
  406560:	push   rsi
  406561:	push   rbx
  406562:	sub    rsp,0x28
  406566:	mov    rbx,rcx
  406569:	rex mov esi,edx
  40656c:	mov    rcx,rbx
  40656f:	rex mov edx,esi
  406572:	call   0x406980
  406577:	test   sil,sil
  40657a:	jle    0x406584
  40657c:	mov    rcx,rbx
  40657f:	call   0x406900
  406584:	add    rsp,0x28
  406588:	pop    rbx
  406589:	pop    rsi
  40658a:	ret    
  40658b:	int3   
  40658c:	int3   
  40658d:	int3   
  40658e:	int3   
  40658f:	int3   
  406590:	push   rbx
  406591:	sub    rsp,0x20
  406595:	test   rcx,rcx
  406598:	je     0x4065a8
  40659a:	mov    rax,rcx
  40659d:	mov    dl,0x1
  40659f:	mov    rbx,QWORD PTR [rcx]
  4065a2:	mov    rcx,rax
  4065a5:	call   QWORD PTR [rbx-0x20]
  4065a8:	add    rsp,0x20
  4065ac:	pop    rbx
  4065ad:	ret    
  4065ae:	int3   
  4065af:	int3   
  4065b0:	push   rsi
  4065b1:	push   rbx
  4065b2:	sub    rsp,0x28
  4065b6:	mov    rbx,rcx
  4065b9:	mov    rsi,rdx
  4065bc:	mov    rcx,rsi
  4065bf:	movsxd rdx,DWORD PTR [rbx-0x80]
  4065c3:	xor    r8,r8
  4065c6:	call   0x405bf0
  4065cb:	mov    QWORD PTR [rsi],rbx
  4065ce:	test   rbx,rbx
  4065d1:	je     0x40662b
  4065d3:	mov    rcx,rbx
  4065d6:	call   0x4066d0
  4065db:	test   rax,rax
  4065de:	je     0x40661b
  4065e0:	xor    rcx,rcx
  4065e3:	mov    r8d,DWORD PTR [rax]
  4065e6:	sub    r8d,0x1
  4065ea:	cmp    ecx,r8d
  4065ed:	jg     0x40661a
  4065ef:	add    r8d,0x1
  4065f3:	movsxd rdx,ecx
  4065f6:	lea    rdx,[rdx+rdx*4]
  4065fa:	lea    rdx,[rax+rdx*8+0x8]
  4065ff:	cmp    QWORD PTR [rdx+0x10],0x0
  406604:	je     0x406612
  406606:	movsxd r9,DWORD PTR [rdx+0x18]
  40660a:	mov    rdx,QWORD PTR [rdx+0x10]
  40660e:	mov    QWORD PTR [rsi+r9*1],rdx
  406612:	add    ecx,0x1
  406615:	cmp    ecx,r8d
  406618:	jne    0x4065f3
  40661a:	nop
  40661b:	mov    rcx,rbx
  40661e:	call   0x406430
  406623:	mov    rbx,rax
  406626:	test   rbx,rbx
  406629:	jne    0x4065d3
  40662b:	nop
  40662c:	mov    rax,rsi
  40662f:	add    rsp,0x28
  406633:	pop    rbx
  406634:	pop    rsi
  406635:	ret    
  406636:	int3   
  406637:	int3   
  406638:	int3   
  406639:	int3   
  40663a:	int3   
  40663b:	int3   
  40663c:	int3   
  40663d:	int3   
  40663e:	int3   
  40663f:	int3   
  406640:	push   rsi
  406641:	push   rbx
  406642:	sub    rsp,0x28
  406646:	mov    rbx,rcx
  406649:	mov    rsi,QWORD PTR [rbx]
  40664c:	mov    rcx,rsi
  40664f:	call   0x4066d0
  406654:	test   rax,rax
  406657:	je     0x406663
  406659:	mov    rcx,rbx
  40665c:	call   0x40afd0
  406661:	jmp    0x406673
  406663:	mov    rcx,rsi
  406666:	call   0x406430
  40666b:	mov    rsi,rax
  40666e:	test   rsi,rsi
  406671:	jne    0x40664c
  406673:	nop
  406674:	mov    rsi,QWORD PTR [rbx]
  406677:	mov    rax,QWORD PTR [rsi-0xb0]
  40667e:	test   rax,rax
  406681:	je     0x40668e
  406683:	mov    rcx,rbx
  406686:	mov    rdx,rax
  406689:	call   0x409880
  40668e:	mov    rcx,rsi
  406691:	call   0x406430
  406696:	mov    rsi,rax
  406699:	test   rsi,rsi
  40669c:	jne    0x406677
  40669e:	mov    rcx,rbx
  4066a1:	call   0x406a60
  4066a6:	add    rsp,0x28
  4066aa:	pop    rbx
  4066ab:	pop    rsi
  4066ac:	ret    
  4066ad:	int3   
  4066ae:	int3   
  4066af:	int3   
  4066b0:	cmp    rdx,rcx
  4066b3:	sete   al
  4066b6:	ret    
  4066b7:	int3   
  4066b8:	int3   
  4066b9:	int3   
  4066ba:	int3   
  4066bb:	int3   
  4066bc:	int3   
  4066bd:	int3   
  4066be:	int3   
  4066bf:	int3   
  4066c0:	mov    rax,rcx
  4066c3:	shr    rax,0x20
  4066c7:	xor    ecx,eax
  4066c9:	mov    eax,ecx
  4066cb:	ret    
  4066cc:	int3   
  4066cd:	int3   
  4066ce:	int3   
  4066cf:	int3   
  4066d0:	mov    rax,QWORD PTR [rcx-0xc0]
  4066d7:	ret    
  4066d8:	int3   
  4066d9:	int3   
  4066da:	int3   
  4066db:	int3   
  4066dc:	int3   
  4066dd:	int3   
  4066de:	int3   
  4066df:	int3   
  4066e0:	sub    rsp,0x28
  4066e4:	test   rcx,rcx
  4066e7:	je     0x4066f5
  4066e9:	mov    rcx,QWORD PTR [rcx]
  4066ec:	call   0x4067f0
  4066f1:	test   al,al
  4066f3:	jne    0x4066fa
  4066f5:	xor    rax,rax
  4066f8:	jmp    0x4066fc
  4066fa:	mov    al,0x1
  4066fc:	add    rsp,0x28
  406700:	ret    
  406701:	int3   
  406702:	int3   
  406703:	int3   
  406704:	int3   
  406705:	int3   
  406706:	int3   
  406707:	int3   
  406708:	int3   
  406709:	int3   
  40670a:	int3   
  40670b:	int3   
  40670c:	int3   
  40670d:	int3   
  40670e:	int3   
  40670f:	int3   
  406710:	push   rbp
  406711:	push   rbx
  406712:	sub    rsp,0x28
  406716:	mov    rbp,rsp
  406719:	mov    rbx,rcx
  40671c:	test   rcx,rcx
  40671f:	je     0x406735
  406721:	call   0x4066e0
  406726:	test   al,al
  406728:	jne    0x406735
  40672a:	mov    cl,0xa
  40672c:	mov    rdx,QWORD PTR [rbp+0x38]
  406730:	call   0x405170
  406735:	mov    rax,rbx
  406738:	lea    rsp,[rbp+0x28]
  40673c:	pop    rbx
  40673d:	pop    rbp
  40673e:	ret    
  40673f:	int3   
  406740:	push   rbp
  406741:	push   rbx
  406742:	sub    rsp,0x38
  406746:	mov    rbp,rsp
  406749:	mov    rbx,rdx
  40674c:	mov    QWORD PTR [rbp+0x28],0x0
  406754:	lea    rax,[rbp+0x28]
  406758:	mov    rdx,rcx
  40675b:	lea    r8,[rip+0xd8e6]        # 0x414048
  406762:	mov    rcx,rax
  406765:	call   0x40a030
  40676a:	mov    rcx,QWORD PTR [rbp+0x28]
  40676e:	mov    rdx,rbx
  406771:	call   0x406710
  406776:	lea    rsp,[rbp+0x38]
  40677a:	pop    rbx
  40677b:	pop    rbp
  40677c:	ret    
  40677d:	int3   
  40677e:	int3   
  40677f:	int3   
  406780:	mov    rax,rcx
  406783:	mov    rcx,QWORD PTR [rax-0x90]
  40678a:	test   rcx,rcx
  40678d:	je     0x4067d6
  40678f:	xor    r8,r8
  406792:	movzx  r9d,WORD PTR [rcx]
  406796:	sub    r9d,0x1
  40679a:	cmp    r8d,r9d
  40679d:	ja     0x4067d5
  40679f:	add    r9d,0x1
  4067a3:	mov    r10d,r8d
  4067a6:	cmp    WORD PTR [rcx+r10*2+0x2],dx
  4067ac:	jne    0x4067cc
  4067ae:	movzx  eax,WORD PTR [rcx]
  4067b1:	add    eax,eax
  4067b3:	mov    eax,eax
  4067b5:	lea    rax,[rcx+rax*1+0x2]
  4067ba:	add    r8d,r8d
  4067bd:	add    r8d,r8d
  4067c0:	add    r8d,r8d
  4067c3:	mov    r8d,r8d
  4067c6:	mov    rax,QWORD PTR [rax+r8*1]
  4067ca:	jmp    0x4067e8
  4067cc:	add    r8d,0x1
  4067d0:	cmp    r8d,r9d
  4067d3:	jne    0x4067a3
  4067d5:	nop
  4067d6:	mov    rax,QWORD PTR [rax-0x78]
  4067da:	test   rax,rax
  4067dd:	je     0x4067e4
  4067df:	mov    rax,QWORD PTR [rax]
  4067e2:	jmp    0x406783
  4067e4:	nop
  4067e5:	xor    rax,rax
  4067e8:	ret    
  4067e9:	int3   
  4067ea:	int3   
  4067eb:	int3   
  4067ec:	int3   
  4067ed:	int3   
  4067ee:	int3   
  4067ef:	int3   
  4067f0:	xor    rax,rax
  4067f3:	cmp    rcx,rdx
  4067f6:	jne    0x4067fc
  4067f8:	mov    al,0x1
  4067fa:	jmp    0x40680a
  4067fc:	mov    rcx,QWORD PTR [rcx-0x78]
  406800:	test   rcx,rcx
  406803:	je     0x40680a
  406805:	mov    rcx,QWORD PTR [rcx]
  406808:	jmp    0x4067f3
  40680a:	nop
  40680b:	ret    
  40680c:	int3   
  40680d:	int3   
  40680e:	int3   
  40680f:	int3   
  406810:	mov    eax,0x8000ffff
  406816:	ret    
  406817:	int3   
  406818:	int3   
  406819:	int3   
  40681a:	int3   
  40681b:	int3   
  40681c:	int3   
  40681d:	int3   
  40681e:	int3   
  40681f:	int3   
  406820:	push   rbx
  406821:	sub    rsp,0x20
  406825:	mov    rbx,rdx
  406828:	mov    rcx,QWORD PTR [rcx]
  40682b:	mov    rdx,rbx
  40682e:	call   0x406400
  406833:	mov    rax,rbx
  406836:	add    rsp,0x20
  40683a:	pop    rbx
  40683b:	ret    
  40683c:	int3   
  40683d:	int3   
  40683e:	int3   
  40683f:	int3   
  406840:	ret    
  406841:	int3   
  406842:	int3   
  406843:	int3   
  406844:	int3   
  406845:	int3   
  406846:	int3   
  406847:	int3   
  406848:	int3   
  406849:	int3   
  40684a:	int3   
  40684b:	int3   
  40684c:	int3   
  40684d:	int3   
  40684e:	int3   
  40684f:	int3   
  406850:	ret    
  406851:	int3   
  406852:	int3   
  406853:	int3   
  406854:	int3   
  406855:	int3   
  406856:	int3   
  406857:	int3   
  406858:	int3   
  406859:	int3   
  40685a:	int3   
  40685b:	int3   
  40685c:	int3   
  40685d:	int3   
  40685e:	int3   
  40685f:	int3   
  406860:	ret    
  406861:	int3   
  406862:	int3   
  406863:	int3   
  406864:	int3   
  406865:	int3   
  406866:	int3   
  406867:	int3   
  406868:	int3   
  406869:	int3   
  40686a:	int3   
  40686b:	int3   
  40686c:	int3   
  40686d:	int3   
  40686e:	int3   
  40686f:	int3   
  406870:	push   rbp
  406871:	push   rsi
  406872:	push   rbx
  406873:	sub    rsp,0x30
  406877:	mov    rbp,rsp
  40687a:	mov    rbx,rcx
  40687d:	mov    rsi,rdx
  406880:	movzx  rax,WORD PTR [rsi]
  406884:	test   ax,ax
  406887:	je     0x4068c1
  406889:	cmp    ax,0xc000
  40688e:	jae    0x4068c1
  406890:	mov    rcx,QWORD PTR [rbx]
  406893:	mov    edx,eax
  406895:	call   0x406780
  40689a:	test   rax,rax
  40689d:	je     0x4068b3
  40689f:	mov    QWORD PTR [rbp+0x28],rbx
  4068a3:	mov    QWORD PTR [rbp+0x20],rax
  4068a7:	mov    rcx,QWORD PTR [rbp+0x28]
  4068ab:	mov    rdx,rsi
  4068ae:	call   QWORD PTR [rbp+0x20]
  4068b1:	jmp    0x4068cd
  4068b3:	mov    rcx,rbx
  4068b6:	mov    rdx,rsi
  4068b9:	mov    rbx,QWORD PTR [rbx]
  4068bc:	call   QWORD PTR [rbx-0x38]
  4068bf:	jmp    0x4068cd
  4068c1:	mov    rcx,rbx
  4068c4:	mov    rdx,rsi
  4068c7:	mov    rbx,QWORD PTR [rbx]
  4068ca:	call   QWORD PTR [rbx-0x38]
  4068cd:	lea    rsp,[rbp+0x30]
  4068d1:	pop    rbx
  4068d2:	pop    rsi
  4068d3:	pop    rbp
  4068d4:	ret    
  4068d5:	int3   
  4068d6:	int3   
  4068d7:	int3   
  4068d8:	int3   
  4068d9:	int3   
  4068da:	int3   
  4068db:	int3   
  4068dc:	int3   
  4068dd:	int3   
  4068de:	int3   
  4068df:	int3   
  4068e0:	sub    rsp,0x28
  4068e4:	mov    rax,rcx
  4068e7:	test   dl,dl
  4068e9:	jl     0x4068f1
  4068eb:	mov    rcx,rax
  4068ee:	call   QWORD PTR [rax-0x30]
  4068f1:	add    rsp,0x28
  4068f5:	ret    
  4068f6:	int3   
  4068f7:	int3   
  4068f8:	int3   
  4068f9:	int3   
  4068fa:	int3   
  4068fb:	int3   
  4068fc:	int3   
  4068fd:	int3   
  4068fe:	int3   
  4068ff:	int3   
  406900:	push   rbx
  406901:	sub    rsp,0x20
  406905:	mov    rax,rcx
  406908:	mov    rbx,QWORD PTR [rcx]
  40690b:	mov    rcx,rax
  40690e:	call   QWORD PTR [rbx-0x28]
  406911:	add    rsp,0x20
  406915:	pop    rbx
  406916:	ret    
  406917:	int3   
  406918:	int3   
  406919:	int3   
  40691a:	int3   
  40691b:	int3   
  40691c:	int3   
  40691d:	int3   
  40691e:	int3   
  40691f:	int3   
  406920:	push   rbp
  406921:	push   rbx
  406922:	sub    rsp,0x48
  406926:	mov    rbp,rsp
  406929:	mov    QWORD PTR [rbp+0x28],rbp
  40692d:	mov    QWORD PTR [rbp+0x60],rcx
  406931:	nop
  406932:	mov    rcx,QWORD PTR [rbp+0x60]
  406936:	mov    rax,QWORD PTR [rbp+0x60]
  40693a:	mov    rbx,QWORD PTR [rax]
  40693d:	call   QWORD PTR [rbx-0x50]
  406940:	mov    rax,QWORD PTR [rbp+0x60]
  406944:	mov    QWORD PTR [rbp+0x38],rax
  406948:	jmp    0x406962
  40694a:	nop
  40694b:	nop
  40694c:	mov    rcx,QWORD PTR [rbp+0x60]
  406950:	mov    dl,0x1
  406952:	call   0x406980
  406957:	call   0x407bf0
  40695c:	call   0x407d00
  406961:	nop
  406962:	mov    rax,QWORD PTR [rbp+0x38]
  406966:	lea    rsp,[rbp+0x48]
  40696a:	pop    rbx
  40696b:	pop    rbp
  40696c:	ret    
  40696d:	mov    rax,rax
  406970:	sub    rsp,0x28
  406974:	call   0x407c30
  406979:	add    rsp,0x28
  40697d:	ret    
  40697e:	int3   
  40697f:	int3   
  406980:	push   rbx
  406981:	sub    rsp,0x20
  406985:	test   dl,dl
  406987:	jle    0x406995
  406989:	mov    rax,rcx
  40698c:	mov    rbx,QWORD PTR [rcx]
  40698f:	mov    rcx,rax
  406992:	call   QWORD PTR [rbx-0x48]
  406995:	add    rsp,0x20
  406999:	pop    rbx
  40699a:	ret    
  40699b:	int3   
  40699c:	int3   
  40699d:	int3   
  40699e:	int3   
  40699f:	int3   
  4069a0:	push   rbx
  4069a1:	sub    rsp,0x20
  4069a5:	mov    rbx,rcx
  4069a8:	cmp    DWORD PTR [rbx],0xa
  4069ab:	jg     0x4069b6
  4069ad:	cmp    DWORD PTR [rip+0x106cc],0x1        # 0x417080
  4069b4:	jg     0x406a06
  4069b6:	cmp    DWORD PTR [rbx],0xa
  4069b9:	jl     0x4069c2
  4069bb:	mov    ecx,DWORD PTR [rbx]
  4069bd:	sub    ecx,0xa
  4069c0:	jmp    0x4069c4
  4069c2:	mov    ecx,DWORD PTR [rbx]
  4069c4:	mov    r8d,0x14
  4069cb:	mov    eax,ecx
  4069cd:	cdq    
  4069ce:	idiv   r8d
  4069d1:	cmp    edx,0x13
  4069d4:	jne    0x4069e3
  4069d6:	mov    ecx,0x1
  4069dc:	call   0x402be0
  4069e1:	jmp    0x406a19
  4069e3:	mov    r8d,0x5
  4069ea:	mov    eax,ecx
  4069ec:	cdq    
  4069ed:	idiv   r8d
  4069f0:	cmp    edx,0x4
  4069f3:	jne    0x4069ff
  4069f5:	xor    rcx,rcx
  4069f8:	call   0x402be0
  4069fd:	jmp    0x406a19
  4069ff:	call   0x402950
  406a04:	jmp    0x406a19
  406a06:	mov    eax,0x4
  406a0c:	movzx  rcx,BYTE PTR [rbx]
  406a10:	shl    eax,cl
  406a12:	mov    ecx,eax
  406a14:	call   0x406a30
  406a19:	add    DWORD PTR [rbx],0x1
  406a1c:	cmp    DWORD PTR [rbx],0x0
  406a1f:	jge    0x406a27
  406a21:	mov    DWORD PTR [rbx],0xa
  406a27:	add    rsp,0x20
  406a2b:	pop    rbx
  406a2c:	ret    
  406a2d:	int3   
  406a2e:	int3   
  406a2f:	int3   
  406a30:	cmp    ecx,0x0
  406a33:	jle    0x406a3e
  406a35:	pause  
  406a37:	dec    ecx
  406a39:	cmp    ecx,0x0
  406a3c:	jg     0x406a35
  406a3e:	ret    
  406a3f:	int3   
  406a40:	push   rbx
  406a41:	sub    rsp,0x20
  406a45:	mov    ebx,DWORD PTR [rcx+0x8]
  406a48:	call   0x402940
  406a4d:	cmp    ebx,eax
  406a4f:	je     0x406a58
  406a51:	mov    cl,0x19
  406a53:	call   0x4051d0
  406a58:	mov    eax,ebx
  406a5a:	add    rsp,0x20
  406a5e:	pop    rbx
  406a5f:	ret    
  406a60:	sub    rsp,0x28
  406a64:	call   0x406d90
  406a69:	mov    rcx,QWORD PTR [rax]
  406a6c:	and    rcx,0xfffffffffffffffe
  406a70:	test   rcx,rcx
  406a73:	je     0x406a81
  406a75:	mov    QWORD PTR [rax],0x0
  406a7c:	call   0x406a90
  406a81:	add    rsp,0x28
  406a85:	ret    
  406a86:	int3   
  406a87:	int3   
  406a88:	int3   
  406a89:	int3   
  406a8a:	int3   
  406a8b:	int3   
  406a8c:	int3   
  406a8d:	int3   
  406a8e:	int3   
  406a8f:	int3   
  406a90:	push   rsi
  406a91:	push   rbx
  406a92:	sub    rsp,0x28
  406a96:	mov    rbx,rcx
  406a99:	cmp    QWORD PTR [rip+0x10ecf],0x0        # 0x417970
  406aa1:	je     0x406ab8
  406aa3:	cmp    QWORD PTR [rbx+0x10],0x0
  406aa8:	je     0x406ab8
  406aaa:	mov    rcx,QWORD PTR [rbx+0x10]
  406aae:	mov    rsi,QWORD PTR [rip+0x10ebb]        # 0x417970
  406ab5:	call   QWORD PTR [rsi+0x8]
  406ab8:	mov    rcx,rbx
  406abb:	call   0x404ee0
  406ac0:	add    rsp,0x28
  406ac4:	pop    rbx
  406ac5:	pop    rsi
  406ac6:	ret    
  406ac7:	int3   
  406ac8:	int3   
  406ac9:	int3   
  406aca:	int3   
  406acb:	int3   
  406acc:	int3   
  406acd:	int3   
  406ace:	int3   
  406acf:	int3   
  406ad0:	push   rbp
  406ad1:	push   r14
  406ad3:	push   r13
  406ad5:	push   rdi
  406ad6:	push   rsi
  406ad7:	push   rbx
  406ad8:	sub    rsp,0x48
  406adc:	mov    rbp,rsp
  406adf:	mov    QWORD PTR [rbp+0x28],rcx
  406ae3:	mov    ebx,edx
  406ae5:	mov    rax,QWORD PTR [rbp+0x28]
  406ae9:	mov    r13d,DWORD PTR [rax+0x18]
  406aed:	mov    rcx,QWORD PTR [rbp+0x28]
  406af1:	call   0x406da0
  406af6:	rex mov esi,eax
  406af9:	test   sil,sil
  406afc:	jne    0x406c92
  406b02:	test   ebx,ebx
  406b04:	je     0x406c92
  406b0a:	xor    rdi,rdi
  406b0d:	test   r13d,r13d
  406b10:	jle    0x406bb7
  406b16:	call   0x402b30
  406b1b:	mov    r14d,eax
  406b1e:	mov    DWORD PTR [rbp+0x3c],0x0
  406b25:	test   r13d,r13d
  406b28:	jle    0x406b96
  406b2a:	cmp    ebx,0xffffffff
  406b2d:	je     0x406b43
  406b2f:	call   0x402b30
  406b34:	sub    eax,r14d
  406b37:	cmp    eax,ebx
  406b39:	jb     0x406b43
  406b3b:	xor    rsi,rsi
  406b3e:	jmp    0x406c92
  406b43:	mov    rax,QWORD PTR [rbp+0x28]
  406b47:	cmp    DWORD PTR [rax],0x1
  406b4a:	jg     0x406b96
  406b4c:	mov    rax,QWORD PTR [rbp+0x28]
  406b50:	cmp    DWORD PTR [rax],0x0
  406b53:	jne    0x406b84
  406b55:	xor    eax,eax
  406b57:	mov    ecx,0x1
  406b5d:	mov    rdx,QWORD PTR [rbp+0x28]
  406b61:	lock cmpxchg DWORD PTR [rdx],ecx
  406b65:	test   eax,eax
  406b67:	jne    0x406b84
  406b69:	call   0x402940
  406b6e:	mov    rcx,QWORD PTR [rbp+0x28]
  406b72:	mov    DWORD PTR [rcx+0x8],eax
  406b75:	mov    DWORD PTR [rcx+0x4],0x1
  406b7c:	mov    sil,0x1
  406b7f:	jmp    0x406c92
  406b84:	lea    rcx,[rbp+0x3c]
  406b88:	call   0x4069a0
  406b8d:	sub    r13d,0x1
  406b91:	test   r13d,r13d
  406b94:	jg     0x406b2a
  406b96:	nop
  406b97:	cmp    ebx,0xffffffff
  406b9a:	je     0x406bb7
  406b9c:	call   0x402b30
  406ba1:	mov    ecx,eax
  406ba3:	sub    ecx,r14d
  406ba6:	cmp    ecx,ebx
  406ba8:	jb     0x406bb2
  406baa:	xor    rsi,rsi
  406bad:	jmp    0x406c92
  406bb2:	sub    eax,r14d
  406bb5:	sub    ebx,eax
  406bb7:	mov    rax,QWORD PTR [rbp+0x28]
  406bbb:	mov    ecx,DWORD PTR [rax]
  406bbd:	test   ecx,ecx
  406bbf:	je     0x406aed
  406bc5:	mov    edx,ecx
  406bc7:	add    edx,0x2
  406bca:	mov    eax,ecx
  406bcc:	mov    r8,QWORD PTR [rbp+0x28]
  406bd0:	lock cmpxchg DWORD PTR [r8],edx
  406bd5:	cmp    eax,ecx
  406bd7:	jne    0x406bb7
  406bd9:	nop
  406bda:	call   0x402b30
  406bdf:	mov    r14d,eax
  406be2:	mov    rcx,QWORD PTR [rbp+0x28]
  406be6:	call   0x406d10
  406beb:	xor    rcx,rcx
  406bee:	mov    rdx,rax
  406bf1:	mov    r8d,ebx
  406bf4:	mov    rax,QWORD PTR [rip+0x10d75]        # 0x417970
  406bfb:	call   QWORD PTR [rax+0x20]
  406bfe:	test   eax,eax
  406c00:	sete   sil
  406c04:	cmp    ebx,0xffffffff
  406c07:	je     0x406c21
  406c09:	call   0x402b30
  406c0e:	mov    ecx,eax
  406c10:	sub    ecx,r14d
  406c13:	cmp    ecx,ebx
  406c15:	jae    0x406c1e
  406c17:	sub    eax,r14d
  406c1a:	sub    ebx,eax
  406c1c:	jmp    0x406c21
  406c1e:	xor    rbx,rbx
  406c21:	test   sil,sil
  406c24:	je     0x406c53
  406c26:	mov    rax,QWORD PTR [rbp+0x28]
  406c2a:	mov    ecx,DWORD PTR [rax]
  406c2c:	mov    eax,ecx
  406c2e:	test   eax,0x1
  406c34:	jne    0x406c50
  406c36:	mov    edx,ecx
  406c38:	sub    edx,0x2
  406c3b:	or     edx,0x1
  406c3e:	mov    eax,ecx
  406c40:	mov    r8,QWORD PTR [rbp+0x28]
  406c44:	lock cmpxchg DWORD PTR [r8],edx
  406c49:	cmp    eax,ecx
  406c4b:	jne    0x406c26
  406c4d:	mov    dil,0x1
  406c50:	nop
  406c51:	jmp    0x406c70
  406c53:	mov    rax,QWORD PTR [rbp+0x28]
  406c57:	mov    ecx,DWORD PTR [rax]
  406c59:	mov    edx,ecx
  406c5b:	sub    edx,0x2
  406c5e:	mov    eax,ecx
  406c60:	mov    r8,QWORD PTR [rbp+0x28]
  406c64:	lock cmpxchg DWORD PTR [r8],edx
  406c69:	cmp    eax,ecx
  406c6b:	jne    0x406c53
  406c6d:	mov    dil,0x1
  406c70:	test   dil,dil
  406c73:	je     0x406bda
  406c79:	nop
  406c7a:	test   sil,sil
  406c7d:	je     0x406c92
  406c7f:	call   0x402940
  406c84:	mov    rcx,QWORD PTR [rbp+0x28]
  406c88:	mov    DWORD PTR [rcx+0x8],eax
  406c8b:	mov    DWORD PTR [rcx+0x4],0x1
  406c92:	rex mov eax,esi
  406c95:	lea    rsp,[rbp+0x48]
  406c99:	pop    rbx
  406c9a:	pop    rsi
  406c9b:	pop    rdi
  406c9c:	pop    r13
  406c9e:	pop    r14
  406ca0:	pop    rbp
  406ca1:	ret    
  406ca2:	int3   
  406ca3:	int3   
  406ca4:	int3   
  406ca5:	int3   
  406ca6:	int3   
  406ca7:	int3   
  406ca8:	int3   
  406ca9:	int3   
  406caa:	int3   
  406cab:	int3   
  406cac:	int3   
  406cad:	int3   
  406cae:	int3   
  406caf:	int3   
  406cb0:	push   rbx
  406cb1:	sub    rsp,0x20
  406cb5:	mov    rbx,rcx
  406cb8:	mov    rcx,rbx
  406cbb:	call   0x406a40
  406cc0:	lea    rax,[rbx+0x4]
  406cc4:	sub    DWORD PTR [rax],0x1
  406cc7:	cmp    DWORD PTR [rbx+0x4],0x0
  406ccb:	jne    0x406d09
  406ccd:	mov    DWORD PTR [rbx+0x8],0x0
  406cd4:	mov    ecx,DWORD PTR [rbx]
  406cd6:	mov    edx,ecx
  406cd8:	sub    edx,0x1
  406cdb:	mov    eax,ecx
  406cdd:	lock cmpxchg DWORD PTR [rbx],edx
  406ce1:	cmp    eax,ecx
  406ce3:	jne    0x406cd4
  406ce5:	test   ecx,0xfffffffe
  406ceb:	je     0x406d08
  406ced:	mov    rcx,rbx
  406cf0:	call   0x406d10
  406cf5:	mov    rcx,rax
  406cf8:	xor    rdx,rdx
  406cfb:	xor    r8,r8
  406cfe:	mov    rax,QWORD PTR [rip+0x10c6b]        # 0x417970
  406d05:	call   QWORD PTR [rax+0x20]
  406d08:	nop
  406d09:	add    rsp,0x20
  406d0d:	pop    rbx
  406d0e:	ret    
  406d0f:	int3   
  406d10:	push   r13
  406d12:	push   rdi
  406d13:	push   rsi
  406d14:	push   rbx
  406d15:	sub    rsp,0x28
  406d19:	mov    rbx,rcx
  406d1c:	mov    edi,0x1
  406d22:	mov    rsi,QWORD PTR [rbx+0x10]
  406d26:	test   rsi,rsi
  406d29:	jne    0x406d7f
  406d2b:	mov    rax,QWORD PTR [rip+0x10c3e]        # 0x417970
  406d32:	call   QWORD PTR [rax]
  406d34:	mov    rcx,rax
  406d37:	xor    eax,eax
  406d39:	mov    rdx,rcx
  406d3c:	lock cmpxchg QWORD PTR [rbx+0x10],rdx
  406d42:	mov    rsi,rax
  406d45:	test   rsi,rsi
  406d48:	jne    0x406d4f
  406d4a:	mov    rsi,rcx
  406d4d:	jmp    0x406d5f
  406d4f:	test   rcx,rcx
  406d52:	je     0x406d5f
  406d54:	mov    r13,QWORD PTR [rip+0x10c15]        # 0x417970
  406d5b:	call   QWORD PTR [r13+0x8]
  406d5f:	test   rsi,rsi
  406d62:	jne    0x406d7f
  406d64:	mov    ecx,edi
  406d66:	call   0x402be0
  406d6b:	cmp    edi,0x200
  406d71:	jle    0x406d7b
  406d73:	mov    edi,0x1
  406d79:	jmp    0x406d2b
  406d7b:	add    edi,edi
  406d7d:	jmp    0x406d2b
  406d7f:	mov    rax,rsi
  406d82:	add    rsp,0x28
  406d86:	pop    rbx
  406d87:	pop    rsi
  406d88:	pop    rdi
  406d89:	pop    r13
  406d8b:	ret    
  406d8c:	int3   
  406d8d:	int3   
  406d8e:	int3   
  406d8f:	int3   
  406d90:	mov    rax,QWORD PTR [rcx]
  406d93:	movsxd rax,DWORD PTR [rax-0x80]
  406d97:	lea    rax,[rcx+rax*1-0x8]
  406d9c:	ret    
  406d9d:	int3   
  406d9e:	int3   
  406d9f:	int3   
  406da0:	push   rbx
  406da1:	sub    rsp,0x20
  406da5:	mov    rbx,rcx
  406da8:	call   0x402940
  406dad:	cmp    DWORD PTR [rbx+0x8],eax
  406db0:	jne    0x406dbd
  406db2:	lea    rax,[rbx+0x4]
  406db6:	add    DWORD PTR [rax],0x1
  406db9:	mov    al,0x1
  406dbb:	jmp    0x406de8
  406dbd:	cmp    DWORD PTR [rbx],0x0
  406dc0:	jne    0x406de5
  406dc2:	xor    eax,eax
  406dc4:	mov    ecx,0x1
  406dca:	lock cmpxchg DWORD PTR [rbx],ecx
  406dce:	test   eax,eax
  406dd0:	jne    0x406de5
  406dd2:	call   0x402940
  406dd7:	mov    DWORD PTR [rbx+0x8],eax
  406dda:	mov    DWORD PTR [rbx+0x4],0x1
  406de1:	mov    al,0x1
  406de3:	jmp    0x406de8
  406de5:	xor    rax,rax
  406de8:	add    rsp,0x20
  406dec:	pop    rbx
  406ded:	ret    
  406dee:	int3   
  406def:	int3   
  406df0:	sub    rsp,0x28
  406df4:	cmp    BYTE PTR [rip+0xd22d],0x1        # 0x414028
  406dfb:	jbe    0x406e12
  406dfd:	mov    ecx,0xeedfadf
  406e03:	xor    rdx,rdx
  406e06:	xor    r8,r8
  406e09:	xor    r9,r9
  406e0c:	call   QWORD PTR [rip+0x10216]        # 0x417028
  406e12:	add    rsp,0x28
  406e16:	ret    
  406e17:	int3   
  406e18:	int3   
  406e19:	int3   
  406e1a:	int3   
  406e1b:	int3   
  406e1c:	int3   
  406e1d:	int3   
  406e1e:	int3   
  406e1f:	int3   
  406e20:	push   rbp
  406e21:	sub    rsp,0x30
  406e25:	mov    rbp,rsp
  406e28:	cmp    BYTE PTR [rip+0xd1f9],0x0        # 0x414028
  406e2f:	je     0x406e53
  406e31:	mov    QWORD PTR [rbp+0x20],rdx
  406e35:	mov    QWORD PTR [rbp+0x28],rcx
  406e39:	mov    ecx,0xeedfae4
  406e3f:	xor    rdx,rdx
  406e42:	mov    r8d,0x2
  406e49:	lea    r9,[rbp+0x20]
  406e4d:	call   QWORD PTR [rip+0x101d5]        # 0x417028
  406e53:	lea    rsp,[rbp+0x30]
  406e57:	pop    rbp
  406e58:	ret    
  406e59:	int3   
  406e5a:	int3   
  406e5b:	int3   
  406e5c:	int3   
  406e5d:	int3   
  406e5e:	int3   
  406e5f:	int3   
  406e60:	sub    rsp,0x28
  406e64:	mov    QWORD PTR [rsp+0x30],rcx
  406e69:	mov    ecx,0xeedfae0
  406e6f:	xor    rdx,rdx
  406e72:	mov    r8d,0x1
  406e79:	lea    r9,[rsp+0x30]
  406e7e:	call   QWORD PTR [rip+0x101a4]        # 0x417028
  406e84:	add    rsp,0x28
  406e88:	ret    
  406e89:	int3   
  406e8a:	int3   
  406e8b:	int3   
  406e8c:	int3   
  406e8d:	int3   
  406e8e:	int3   
  406e8f:	int3   
  406e90:	sub    rsp,0x28
  406e94:	cmp    BYTE PTR [rip+0xd18d],0x1        # 0x414028
  406e9b:	jbe    0x406ea2
  406e9d:	call   0x406e60
  406ea2:	add    rsp,0x28
  406ea6:	ret    
  406ea7:	int3   
  406ea8:	int3   
  406ea9:	int3   
  406eaa:	int3   
  406eab:	int3   
  406eac:	int3   
  406ead:	int3   
  406eae:	int3   
  406eaf:	int3   
  406eb0:	sub    rsp,0x28
  406eb4:	cmp    BYTE PTR [rip+0xd16d],0x1        # 0x414028
  406ebb:	jbe    0x406ec2
  406ebd:	call   0x406e60
  406ec2:	add    rsp,0x28
  406ec6:	ret    
  406ec7:	int3   
  406ec8:	int3   
  406ec9:	int3   
  406eca:	int3   
  406ecb:	int3   
  406ecc:	int3   
  406ecd:	int3   
  406ece:	int3   
  406ecf:	int3   
  406ed0:	sub    rsp,0x28
  406ed4:	mov    QWORD PTR [rsp+0x30],rcx
  406ed9:	cmp    BYTE PTR [rip+0xd148],0x1        # 0x414028
  406ee0:	jbe    0x406efd
  406ee2:	mov    ecx,0xeedfae1
  406ee8:	xor    rdx,rdx
  406eeb:	mov    r8d,0x1
  406ef2:	lea    r9,[rsp+0x30]
  406ef7:	call   QWORD PTR [rip+0x1012b]        # 0x417028
  406efd:	add    rsp,0x28
  406f01:	ret    
  406f02:	int3   
  406f03:	int3   
  406f04:	int3   
  406f05:	int3   
  406f06:	int3   
  406f07:	int3   
  406f08:	int3   
  406f09:	int3   
  406f0a:	int3   
  406f0b:	int3   
  406f0c:	int3   
  406f0d:	int3   
  406f0e:	int3   
  406f0f:	int3   
  406f10:	sub    rsp,0x28
  406f14:	mov    QWORD PTR [rsp+0x30],rcx
  406f19:	cmp    BYTE PTR [rip+0xd108],0x1        # 0x414028
  406f20:	jbe    0x406f3d
  406f22:	mov    ecx,0xeedfae2
  406f28:	xor    rdx,rdx
  406f2b:	mov    r8d,0x1
  406f32:	lea    r9,[rsp+0x30]
  406f37:	call   QWORD PTR [rip+0x100eb]        # 0x417028
  406f3d:	add    rsp,0x28
  406f41:	ret    
  406f42:	int3   
  406f43:	int3   
  406f44:	int3   
  406f45:	int3   
  406f46:	int3   
  406f47:	int3   
  406f48:	int3   
  406f49:	int3   
  406f4a:	int3   
  406f4b:	int3   
  406f4c:	int3   
  406f4d:	int3   
  406f4e:	int3   
  406f4f:	int3   
  406f50:	push   rbp
  406f51:	sub    rsp,0x30
  406f55:	mov    rbp,rsp
  406f58:	cmp    BYTE PTR [rip+0xd0c9],0x0        # 0x414028
  406f5f:	je     0x406f83
  406f61:	mov    QWORD PTR [rbp+0x20],rdx
  406f65:	mov    QWORD PTR [rbp+0x28],rcx
  406f69:	mov    ecx,0xeedfae3
  406f6f:	xor    rdx,rdx
  406f72:	mov    r8d,0x2
  406f79:	lea    r9,[rbp+0x20]
  406f7d:	call   QWORD PTR [rip+0x100a5]        # 0x417028
  406f83:	lea    rsp,[rbp+0x30]
  406f87:	pop    rbp
  406f88:	ret    
  406f89:	int3   
  406f8a:	int3   
  406f8b:	int3   
  406f8c:	int3   
  406f8d:	int3   
  406f8e:	int3   
  406f8f:	int3   
  406f90:	push   r14
  406f92:	push   r13
  406f94:	push   rdi
  406f95:	push   rsi
  406f96:	push   rbx
  406f97:	sub    rsp,0x40
  406f9b:	mov    QWORD PTR [rsp+0x28],rcx
  406fa0:	mov    QWORD PTR [rsp+0x30],rdx
  406fa5:	mov    QWORD PTR [rsp+0x38],r8
  406faa:	xor    rdi,rdi
  406fad:	mov    rax,QWORD PTR [rsp+0x38]
  406fb2:	mov    r14d,DWORD PTR [rax]
  406fb5:	sub    r14d,0x1
  406fb9:	cmp    edi,r14d
  406fbc:	jg     0x40705b
  406fc2:	add    r14d,0x1
  406fc6:	movsxd rax,edi
  406fc9:	mov    rcx,QWORD PTR [rsp+0x38]
  406fce:	lea    rsi,[rcx+rax*8+0x4]
  406fd3:	mov    rbx,rsi
  406fd6:	cmp    DWORD PTR [rsi],0x0
  406fd9:	je     0x40705f
  406fdf:	mov    rax,QWORD PTR [rsp+0x30]
  406fe4:	test   rax,rax
  406fe7:	je     0x40704f
  406fe9:	mov    r13,QWORD PTR [rsp+0x30]
  406fee:	mov    rax,QWORD PTR [rsp+0x28]
  406ff3:	mov    rax,QWORD PTR [rax+0x8]
  406ff7:	mov    ecx,DWORD PTR [rsi]
  406ff9:	mov    rax,QWORD PTR [rax+rcx*1]
  406ffd:	cmp    rax,r13
  407000:	je     0x40705f
  407002:	mov    ecx,DWORD PTR [rax-0x80]
  407005:	cmp    ecx,DWORD PTR [r13-0x80]
  407009:	jne    0x40703f
  40700b:	mov    rax,QWORD PTR [rax-0x88]
  407012:	mov    rcx,QWORD PTR [r13-0x88]
  407019:	movzx  rdx,BYTE PTR [rax]
  40701d:	cmp    dl,BYTE PTR [rcx]
  40701f:	jne    0x40703f
  407021:	lea    rdx,[rax+0x1]
  407025:	lea    r8,[rcx+0x1]
  407029:	movzx  rax,BYTE PTR [rax]
  40702d:	mov    rcx,rdx
  407030:	mov    rdx,r8
  407033:	mov    r8,rax
  407036:	call   0x408c40
  40703b:	test   eax,eax
  40703d:	je     0x40705f
  40703f:	mov    r13,QWORD PTR [r13-0x78]
  407043:	test   r13,r13
  407046:	je     0x40704e
  407048:	mov    r13,QWORD PTR [r13+0x0]
  40704c:	jmp    0x406fee
  40704e:	nop
  40704f:	add    edi,0x1
  407052:	cmp    edi,r14d
  407055:	jne    0x406fc6
  40705b:	nop
  40705c:	xor    rbx,rbx
  40705f:	mov    rax,rbx
  407062:	add    rsp,0x40
  407066:	pop    rbx
  407067:	pop    rsi
  407068:	pop    rdi
  407069:	pop    r13
  40706b:	pop    r14
  40706d:	ret    
  40706e:	int3   
  40706f:	int3   
  407070:	push   rbp
  407071:	push   rbx
  407072:	sub    rsp,0x118
  407079:	mov    rbp,rsp
  40707c:	mov    QWORD PTR [rbp+0x38],rbp
  407080:	mov    QWORD PTR [rbp+0x130],rcx
  407087:	mov    QWORD PTR [rbp+0x138],rdx
  40708e:	mov    QWORD PTR [rbp+0x140],r8
  407095:	mov    QWORD PTR [rbp+0x148],r9
  40709c:	mov    DWORD PTR [rbp+0xec],0x1
  4070a6:	mov    rax,QWORD PTR [rbp+0x148]
  4070ad:	mov    rax,QWORD PTR [rax+0x38]
  4070b1:	mov    QWORD PTR [rbp+0x88],rax
  4070b8:	mov    rax,QWORD PTR [rbp+0x148]
  4070bf:	mov    rax,QWORD PTR [rax+0x8]
  4070c3:	mov    QWORD PTR [rbp+0xe0],rax
  4070ca:	mov    rax,QWORD PTR [rbp+0x148]
  4070d1:	mov    rax,QWORD PTR [rax]
  4070d4:	mov    rcx,QWORD PTR [rbp+0xe0]
  4070db:	neg    rcx
  4070de:	lea    rax,[rax+rcx*1]
  4070e2:	mov    QWORD PTR [rbp+0xd8],rax
  4070e9:	mov    rax,QWORD PTR [rbp+0x130]
  4070f0:	mov    eax,DWORD PTR [rax+0x4]
  4070f3:	test   eax,0x66
  4070f9:	jne    0x407482
  4070ff:	xor    rax,rax
  407102:	mov    rcx,QWORD PTR [rbp+0x88]
  407109:	mov    ebx,DWORD PTR [rcx]
  40710b:	sub    ebx,0x1
  40710e:	mov    DWORD PTR [rbp+0xc4],eax
  407114:	cmp    DWORD PTR [rbp+0xc4],ebx
  40711a:	jg     0x40747c
  407120:	add    ebx,0x1
  407123:	mov    rax,QWORD PTR [rbp+0x88]
  40712a:	movsxd rcx,DWORD PTR [rbp+0xc4]
  407131:	add    rcx,rcx
  407134:	lea    rax,[rax+rcx*8+0x4]
  407139:	mov    QWORD PTR [rbp+0xf0],rax
  407140:	mov    rax,QWORD PTR [rbp+0xf0]
  407147:	mov    eax,DWORD PTR [rax]
  407149:	cmp    QWORD PTR [rbp+0xd8],rax
  407150:	jb     0x407469
  407156:	mov    rax,QWORD PTR [rbp+0xf0]
  40715d:	mov    eax,DWORD PTR [rax+0x4]
  407160:	cmp    QWORD PTR [rbp+0xd8],rax
  407167:	jae    0x407469
  40716d:	mov    rax,QWORD PTR [rbp+0xf0]
  407174:	cmp    DWORD PTR [rax+0x8],0x0
  407178:	je     0x407469
  40717e:	call   0x4063d0
  407183:	mov    QWORD PTR [rbp+0x98],0x0
  40718e:	mov    rax,QWORD PTR [rbp+0xf0]
  407195:	cmp    DWORD PTR [rax+0x8],0x2
  407199:	jbe    0x40725e
  40719f:	mov    rax,QWORD PTR [rbp+0x130]
  4071a6:	cmp    DWORD PTR [rax],0xeedfade
  4071ac:	jne    0x4071c5
  4071ae:	mov    rax,QWORD PTR [rbp+0x130]
  4071b5:	mov    rax,QWORD PTR [rax+0x28]
  4071b9:	mov    rax,QWORD PTR [rax]
  4071bc:	mov    QWORD PTR [rbp+0xa8],rax
  4071c3:	jmp    0x4071f5
  4071c5:	cmp    QWORD PTR [rip+0xfe4b],0x0        # 0x417018
  4071cd:	je     0x407469
  4071d3:	mov    rcx,QWORD PTR [rbp+0x130]
  4071da:	call   QWORD PTR [rip+0xfe38]        # 0x417018
  4071e0:	mov    QWORD PTR [rbp+0xa8],rax
  4071e7:	cmp    QWORD PTR [rbp+0xa8],0x0
  4071ef:	je     0x407469
  4071f5:	mov    rax,QWORD PTR [rbp+0xe0]
  4071fc:	mov    rcx,QWORD PTR [rbp+0xf0]
  407203:	mov    ecx,DWORD PTR [rcx+0x8]
  407206:	lea    rax,[rax+rcx*1]
  40720a:	mov    QWORD PTR [rbp+0x90],rax
  407211:	mov    rcx,QWORD PTR [rbp+0x148]
  407218:	mov    rdx,QWORD PTR [rbp+0xa8]
  40721f:	mov    r8,QWORD PTR [rbp+0x90]
  407226:	call   0x406f90
  40722b:	mov    QWORD PTR [rbp+0x98],rax
  407232:	cmp    QWORD PTR [rbp+0x98],0x0
  40723a:	je     0x407469
  407240:	mov    rax,QWORD PTR [rbp+0xe0]
  407247:	mov    rcx,QWORD PTR [rbp+0x98]
  40724e:	mov    ecx,DWORD PTR [rcx+0x4]
  407251:	lea    rax,[rax+rcx*1]
  407255:	mov    QWORD PTR [rbp+0x80],rax
  40725c:	jmp    0x4072a5
  40725e:	mov    rax,QWORD PTR [rbp+0xf0]
  407265:	cmp    DWORD PTR [rax+0x8],0x1
  407269:	jne    0x407289
  40726b:	mov    rax,QWORD PTR [rbp+0xe0]
  407272:	mov    rcx,QWORD PTR [rbp+0xf0]
  407279:	mov    ecx,DWORD PTR [rcx+0x4]
  40727c:	lea    rax,[rax+rcx*1]
  407280:	mov    QWORD PTR [rbp+0x80],rax
  407287:	jmp    0x4072a5
  407289:	mov    rax,QWORD PTR [rbp+0xe0]
  407290:	mov    rcx,QWORD PTR [rbp+0xf0]
  407297:	mov    ecx,DWORD PTR [rcx+0xc]
  40729a:	lea    rax,[rax+rcx*1]
  40729e:	mov    QWORD PTR [rbp+0x80],rax
  4072a5:	mov    rax,QWORD PTR [rbp+0x130]
  4072ac:	cmp    DWORD PTR [rax],0xeedfade
  4072b2:	jne    0x4072de
  4072b4:	mov    rax,QWORD PTR [rbp+0x130]
  4072bb:	mov    rax,QWORD PTR [rax+0x28]
  4072bf:	mov    QWORD PTR [rbp+0xb0],rax
  4072c6:	mov    rax,QWORD PTR [rbp+0x130]
  4072cd:	mov    rax,QWORD PTR [rax+0x20]
  4072d1:	mov    QWORD PTR [rbp+0xa0],rax
  4072d8:	mov    BYTE PTR [rbp+0x7b],0x1
  4072dc:	jmp    0x40734f
  4072de:	cmp    QWORD PTR [rip+0xfd3a],0x0        # 0x417020
  4072e6:	je     0x407469
  4072ec:	mov    rcx,QWORD PTR [rbp+0x130]
  4072f3:	call   QWORD PTR [rip+0xfd27]        # 0x417020
  4072f9:	mov    QWORD PTR [rbp+0xb0],rax
  407300:	cmp    QWORD PTR [rbp+0xb0],0x0
  407308:	je     0x407469
  40730e:	mov    rax,QWORD PTR [rbp+0x130]
  407315:	mov    rax,QWORD PTR [rax+0x10]
  407319:	mov    QWORD PTR [rbp+0xa0],rax
  407320:	mov    BYTE PTR [rbp+0x7b],0x1
  407324:	mov    rax,QWORD PTR [rbp+0x130]
  40732b:	mov    eax,DWORD PTR [rax]
  40732d:	and    eax,0xfffffffe
  407330:	cmp    eax,0xe36c6700
  407336:	jne    0x40734f
  407338:	mov    rcx,QWORD PTR [rbp+0xb0]
  40733f:	mov    rdx,QWORD PTR [rbp+0x140]
  407346:	call   0x406e20
  40734b:	mov    BYTE PTR [rbp+0x7b],0x0
  40734f:	movzx  rax,BYTE PTR [rip+0xccd2]        # 0x414029
  407357:	cmp    al,BYTE PTR [rbp+0x7b]
  40735a:	jbe    0x40739a
  40735c:	cmp    BYTE PTR [rip+0xccc5],0x0        # 0x414028
  407363:	ja     0x40739a
  407365:	mov    rax,QWORD PTR [rbp+0x130]
  40736c:	mov    QWORD PTR [rbp+0xc8],rax
  407373:	mov    rax,QWORD PTR [rbp+0x140]
  40737a:	mov    QWORD PTR [rbp+0xd0],rax
  407381:	lea    rcx,[rbp+0xc8]
  407388:	call   0x4029a0
  40738d:	mov    DWORD PTR [rbp+0x7c],eax
  407390:	cmp    DWORD PTR [rbp+0x7c],0x0
  407394:	je     0x407469
  40739a:	mov    rax,QWORD PTR [rbp+0x130]
  4073a1:	or     DWORD PTR [rax+0x4],0x2
  4073a5:	mov    rax,QWORD PTR [rbp+0xf0]
  4073ac:	cmp    DWORD PTR [rax+0x8],0x2
  4073b0:	jb     0x4073c0
  4073b2:	call   0x404f90
  4073b7:	mov    QWORD PTR [rbp+0x100],rax
  4073be:	jmp    0x4073cb
  4073c0:	lea    rax,[rbp+0x58]
  4073c4:	mov    QWORD PTR [rbp+0x100],rax
  4073cb:	mov    rax,QWORD PTR [rbp+0x100]
  4073d2:	mov    rcx,QWORD PTR [rbp+0xa0]
  4073d9:	mov    QWORD PTR [rax+0x8],rcx
  4073dd:	mov    rax,QWORD PTR [rbp+0x100]
  4073e4:	mov    rcx,QWORD PTR [rbp+0xb0]
  4073eb:	mov    QWORD PTR [rax+0x10],rcx
  4073ef:	mov    rax,QWORD PTR [rbp+0x100]
  4073f6:	mov    QWORD PTR [rbp+0x48],rax
  4073fa:	call   0x40b590
  4073ff:	lea    rcx,ds:0x208
  407407:	lea    rax,[rax+rcx*1]
  40740b:	mov    QWORD PTR [rbp+0x40],rax
  40740f:	mov    rax,QWORD PTR [rbp+0x48]
  407413:	mov    rcx,QWORD PTR [rbp+0x40]
  407417:	mov    rcx,QWORD PTR [rcx]
  40741a:	mov    QWORD PTR [rax],rcx
  40741d:	mov    rax,QWORD PTR [rbp+0x40]
  407421:	mov    rcx,QWORD PTR [rbp+0x48]
  407425:	mov    QWORD PTR [rax],rcx
  407428:	mov    rcx,QWORD PTR [rbp+0x138]
  40742f:	mov    rdx,QWORD PTR [rbp+0x80]
  407436:	mov    r8,QWORD PTR [rbp+0x130]
  40743d:	mov    r9,QWORD PTR [rbp+0xb0]
  407444:	mov    rax,QWORD PTR [rbp+0x148]
  40744b:	mov    rax,QWORD PTR [rax+0x28]
  40744f:	mov    QWORD PTR [rsp+0x20],rax
  407454:	mov    rax,QWORD PTR [rbp+0x148]
  40745b:	mov    rax,QWORD PTR [rax+0x40]
  40745f:	mov    QWORD PTR [rsp+0x28],rax
  407464:	call   0x402990
  407469:	add    DWORD PTR [rbp+0xc4],0x1
  407470:	cmp    DWORD PTR [rbp+0xc4],ebx
  407476:	jne    0x407123
  40747c:	nop
  40747d:	jmp    0x407988
  407482:	mov    rax,QWORD PTR [rbp+0x148]
  407489:	mov    rax,QWORD PTR [rax+0x20]
  40748d:	mov    rcx,QWORD PTR [rbp+0xe0]
  407494:	neg    rcx
  407497:	lea    rax,[rax+rcx*1]
  40749b:	mov    QWORD PTR [rbp+0xb8],rax
  4074a2:	xor    rax,rax
  4074a5:	mov    rcx,QWORD PTR [rbp+0x88]
  4074ac:	mov    ecx,DWORD PTR [rcx]
  4074ae:	sub    ecx,0x1
  4074b1:	mov    DWORD PTR [rbp+0x34],ecx
  4074b4:	mov    DWORD PTR [rbp+0xc4],eax
  4074ba:	mov    eax,DWORD PTR [rbp+0x34]
  4074bd:	cmp    DWORD PTR [rbp+0xc4],eax
  4074c3:	jg     0x407987
  4074c9:	mov    eax,DWORD PTR [rbp+0x34]
  4074cc:	add    eax,0x1
  4074cf:	mov    DWORD PTR [rbp+0x34],eax
  4074d2:	mov    rax,QWORD PTR [rbp+0x88]
  4074d9:	movsxd rcx,DWORD PTR [rbp+0xc4]
  4074e0:	add    rcx,rcx
  4074e3:	lea    rax,[rax+rcx*8+0x4]
  4074e8:	mov    QWORD PTR [rbp+0xf0],rax
  4074ef:	mov    rax,QWORD PTR [rbp+0xf0]
  4074f6:	mov    eax,DWORD PTR [rax]
  4074f8:	cmp    QWORD PTR [rbp+0xd8],rax
  4074ff:	jb     0x407971
  407505:	mov    rax,QWORD PTR [rbp+0xf0]
  40750c:	mov    eax,DWORD PTR [rax+0x4]
  40750f:	cmp    QWORD PTR [rbp+0xd8],rax
  407516:	jae    0x407971
  40751c:	mov    rax,QWORD PTR [rbp+0xf0]
  407523:	mov    eax,DWORD PTR [rax]
  407525:	cmp    QWORD PTR [rbp+0xb8],rax
  40752c:	jb     0x407557
  40752e:	mov    rax,QWORD PTR [rbp+0xf0]
  407535:	mov    eax,DWORD PTR [rax+0x4]
  407538:	cmp    QWORD PTR [rbp+0xb8],rax
  40753f:	jae    0x407557
  407541:	mov    rax,QWORD PTR [rbp+0x130]
  407548:	mov    eax,DWORD PTR [rax+0x4]
  40754b:	test   eax,0x20
  407551:	jne    0x407988
  407557:	mov    rax,QWORD PTR [rbp+0xf0]
  40755e:	cmp    DWORD PTR [rax+0x8],0x2
  407562:	jae    0x40781d
  407568:	call   0x40b590
  40756d:	mov    rax,QWORD PTR [rax+0x208]
  407574:	mov    QWORD PTR [rbp+0xf8],rax
  40757b:	nop
  40757c:	mov    rax,QWORD PTR [rbp+0xf0]
  407583:	mov    eax,DWORD PTR [rax+0x8]
  407586:	sub    eax,0x1
  407589:	cmp    eax,0xffffffff
  40758c:	je     0x40759b
  40758e:	test   eax,eax
  407590:	jne    0x407723
  407596:	jmp    0x407641
  40759b:	mov    rax,QWORD PTR [rbp+0x148]
  4075a2:	mov    rcx,QWORD PTR [rbp+0xe0]
  4075a9:	mov    rdx,QWORD PTR [rbp+0xf0]
  4075b0:	mov    edx,DWORD PTR [rdx+0x4]
  4075b3:	lea    rcx,[rcx+rdx*1]
  4075b7:	mov    QWORD PTR [rax],rcx
  4075ba:	mov    rax,QWORD PTR [rbp+0xe0]
  4075c1:	mov    rcx,QWORD PTR [rbp+0xf0]
  4075c8:	mov    ecx,DWORD PTR [rcx+0xc]
  4075cb:	lea    rax,[rax+rcx*1]
  4075cf:	mov    QWORD PTR [rbp+0x80],rax
  4075d6:	mov    rcx,QWORD PTR [rbp+0x80]
  4075dd:	call   0x406ed0
  4075e2:	mov    rax,QWORD PTR [rbp+0x130]
  4075e9:	mov    QWORD PTR [rbp+0xc8],rax
  4075f0:	mov    rax,QWORD PTR [rbp+0x140]
  4075f7:	mov    QWORD PTR [rbp+0xd0],rax
  4075fe:	lea    rcx,[rbp+0xc8]
  407605:	mov    rdx,QWORD PTR [rbp+0x138]
  40760c:	call   QWORD PTR [rbp+0x80]
  407612:	call   0x4055f0
  407617:	mov    rcx,QWORD PTR [rbp+0x148]
  40761e:	mov    rcx,QWORD PTR [rcx+0x28]
  407622:	mov    DWORD PTR [rcx+0x34],eax
  407625:	call   0x4055e0
  40762a:	mov    rcx,QWORD PTR [rbp+0x148]
  407631:	mov    rcx,QWORD PTR [rcx+0x28]
  407635:	mov    WORD PTR [rcx+0x100],ax
  40763c:	jmp    0x407723
  407641:	mov    rax,QWORD PTR [rbp+0xe0]
  407648:	mov    rcx,QWORD PTR [rbp+0xf0]
  40764f:	mov    ecx,DWORD PTR [rcx+0xc]
  407652:	lea    rax,[rax+rcx*1]
  407656:	mov    QWORD PTR [rbp+0x80],rax
  40765d:	mov    rax,QWORD PTR [rbp+0x148]
  407664:	mov    rcx,QWORD PTR [rbp+0xe0]
  40766b:	mov    rdx,QWORD PTR [rbp+0xf0]
  407672:	mov    edx,DWORD PTR [rdx+0x4]
  407675:	lea    rcx,[rcx+rdx*1]
  407679:	mov    QWORD PTR [rax],rcx
  40767c:	mov    rax,QWORD PTR [rbp+0x130]
  407683:	mov    QWORD PTR [rbp+0xc8],rax
  40768a:	mov    rax,QWORD PTR [rbp+0x140]
  407691:	mov    QWORD PTR [rbp+0xd0],rax
  407698:	mov    rax,QWORD PTR [rbp+0xf8]
  40769f:	mov    rax,QWORD PTR [rax+0x10]
  4076a3:	mov    QWORD PTR [rbp+0xb0],rax
  4076aa:	mov    rax,QWORD PTR [rbp+0xf8]
  4076b1:	mov    rax,QWORD PTR [rax+0x8]
  4076b5:	mov    QWORD PTR [rbp+0xa0],rax
  4076bc:	lea    rcx,[rbp+0xc8]
  4076c3:	mov    rdx,QWORD PTR [rbp+0x138]
  4076ca:	mov    r8,QWORD PTR [rbp+0xb0]
  4076d1:	mov    r9,QWORD PTR [rbp+0xa0]
  4076d8:	call   QWORD PTR [rbp+0x80]
  4076de:	mov    QWORD PTR [rbp+0x80],rax
  4076e5:	mov    rax,QWORD PTR [rbp+0x148]
  4076ec:	mov    rcx,QWORD PTR [rbp+0x80]
  4076f3:	mov    QWORD PTR [rax],rcx
  4076f6:	mov    rax,QWORD PTR [rbp+0xf8]
  4076fd:	cmp    QWORD PTR [rax+0x10],0x0
  407702:	je     0x407723
  407704:	mov    rax,QWORD PTR [rbp+0xf8]
  40770b:	mov    rcx,QWORD PTR [rax+0x10]
  40770f:	call   0x406590
  407714:	mov    rax,QWORD PTR [rbp+0xf8]
  40771b:	mov    QWORD PTR [rax+0x10],0x0
  407723:	nop
  407724:	mov    QWORD PTR [rbp+0x108],0x0
  40772f:	call   0x40b590
  407734:	mov    rax,QWORD PTR [rax+0x208]
  40773b:	mov    QWORD PTR [rbp+0x100],rax
  407742:	cmp    QWORD PTR [rbp+0x100],0x0
  40774a:	je     0x407817
  407750:	mov    rax,QWORD PTR [rbp+0x100]
  407757:	cmp    rax,QWORD PTR [rbp+0xf8]
  40775e:	jne    0x4077ea
  407764:	cmp    QWORD PTR [rbp+0x108],0x0
  40776c:	jne    0x40777f
  40776e:	mov    rax,QWORD PTR [rbp+0xf0]
  407775:	cmp    DWORD PTR [rax+0x8],0x1
  407779:	jne    0x407817
  40777f:	cmp    QWORD PTR [rbp+0x108],0x0
  407787:	jne    0x40779b
  407789:	call   0x40b590
  40778e:	mov    QWORD PTR [rax+0x208],0x0
  407799:	jmp    0x4077af
  40779b:	mov    rax,QWORD PTR [rbp+0x108]
  4077a2:	mov    rcx,QWORD PTR [rbp+0x100]
  4077a9:	mov    rcx,QWORD PTR [rcx]
  4077ac:	mov    QWORD PTR [rax],rcx
  4077af:	mov    rax,QWORD PTR [rbp+0x100]
  4077b6:	cmp    QWORD PTR [rax+0x10],0x0
  4077bb:	je     0x4077dc
  4077bd:	mov    rax,QWORD PTR [rbp+0x100]
  4077c4:	mov    rcx,QWORD PTR [rax+0x10]
  4077c8:	call   0x406590
  4077cd:	mov    rax,QWORD PTR [rbp+0x100]
  4077d4:	mov    QWORD PTR [rax+0x10],0x0
  4077dc:	mov    rcx,QWORD PTR [rbp+0x100]
  4077e3:	call   0x405040
  4077e8:	jmp    0x407817
  4077ea:	mov    rax,QWORD PTR [rbp+0x100]
  4077f1:	mov    QWORD PTR [rbp+0x108],rax
  4077f8:	mov    rax,QWORD PTR [rbp+0x100]
  4077ff:	mov    rax,QWORD PTR [rax]
  407802:	mov    QWORD PTR [rbp+0x100],rax
  407809:	cmp    QWORD PTR [rbp+0x100],0x0
  407811:	jne    0x407750
  407817:	nop
  407818:	jmp    0x407971
  40781d:	mov    rax,QWORD PTR [rbp+0x130]
  407824:	mov    eax,DWORD PTR [rax+0x4]
  407827:	test   eax,0x20
  40782d:	je     0x407971
  407833:	mov    QWORD PTR [rbp+0x80],0x0
  40783e:	mov    rax,QWORD PTR [rbp+0xf0]
  407845:	cmp    DWORD PTR [rax+0x8],0x2
  407849:	jne    0x40786c
  40784b:	mov    rax,QWORD PTR [rbp+0xe0]
  407852:	mov    rcx,QWORD PTR [rbp+0xf0]
  407859:	mov    ecx,DWORD PTR [rcx+0xc]
  40785c:	lea    rax,[rax+rcx*1]
  407860:	mov    QWORD PTR [rbp+0x80],rax
  407867:	jmp    0x40792a
  40786c:	mov    rax,QWORD PTR [rbp+0x130]
  407873:	cmp    DWORD PTR [rax],0xeedfade
  407879:	jne    0x407892
  40787b:	mov    rax,QWORD PTR [rbp+0x130]
  407882:	mov    rax,QWORD PTR [rax+0x28]
  407886:	mov    rax,QWORD PTR [rax]
  407889:	mov    QWORD PTR [rbp+0xa8],rax
  407890:	jmp    0x4078bd
  407892:	cmp    QWORD PTR [rip+0xf77e],0x0        # 0x417018
  40789a:	je     0x4078b2
  40789c:	mov    rcx,QWORD PTR [rbp+0x130]
  4078a3:	call   QWORD PTR [rip+0xf76f]        # 0x417018
  4078a9:	mov    QWORD PTR [rbp+0xa8],rax
  4078b0:	jmp    0x4078bd
  4078b2:	mov    QWORD PTR [rbp+0xa8],0x0
  4078bd:	cmp    QWORD PTR [rbp+0xa8],0x0
  4078c5:	je     0x40792a
  4078c7:	mov    rax,QWORD PTR [rbp+0xe0]
  4078ce:	mov    rcx,QWORD PTR [rbp+0xf0]
  4078d5:	mov    ecx,DWORD PTR [rcx+0x8]
  4078d8:	lea    rax,[rax+rcx*1]
  4078dc:	mov    QWORD PTR [rbp+0x90],rax
  4078e3:	mov    rcx,QWORD PTR [rbp+0x148]
  4078ea:	mov    rdx,QWORD PTR [rbp+0xa8]
  4078f1:	mov    r8,QWORD PTR [rbp+0x90]
  4078f8:	call   0x406f90
  4078fd:	mov    QWORD PTR [rbp+0x98],rax
  407904:	cmp    QWORD PTR [rbp+0x98],0x0
  40790c:	je     0x40792a
  40790e:	mov    rax,QWORD PTR [rbp+0xe0]
  407915:	mov    rcx,QWORD PTR [rbp+0x98]
  40791c:	mov    ecx,DWORD PTR [rcx+0x4]
  40791f:	lea    rax,[rax+rcx*1]
  407923:	mov    QWORD PTR [rbp+0x80],rax
  40792a:	cmp    QWORD PTR [rbp+0x80],0x0
  407932:	je     0x407971
  407934:	mov    rax,QWORD PTR [rbp+0x148]
  40793b:	mov    rcx,QWORD PTR [rbp+0x80]
  407942:	cmp    rcx,QWORD PTR [rax+0x20]
  407946:	jne    0x407971
  407948:	mov    rax,QWORD PTR [rbp+0xf0]
  40794f:	cmp    DWORD PTR [rax+0x8],0x2
  407953:	jne    0x407963
  407955:	mov    rcx,QWORD PTR [rbp+0x80]
  40795c:	call   0x406eb0
  407961:	jmp    0x407987
  407963:	mov    rcx,QWORD PTR [rbp+0x80]
  40796a:	call   0x406e90
  40796f:	jmp    0x407987
  407971:	add    DWORD PTR [rbp+0xc4],0x1
  407978:	mov    eax,DWORD PTR [rbp+0x34]
  40797b:	cmp    DWORD PTR [rbp+0xc4],eax
  407981:	jne    0x4074d2
  407987:	nop
  407988:	mov    eax,DWORD PTR [rbp+0xec]
  40798e:	lea    rsp,[rbp+0x118]
  407995:	pop    rbx
  407996:	pop    rbp
  407997:	ret    
  407998:	lea    rax,[rax*1+0x0]
  4079a0:	push   rbp
  4079a1:	push   rbx
  4079a2:	sub    rsp,0x28
  4079a6:	mov    rbp,rsp
  4079a9:	mov    rbx,rdx
  4079ac:	mov    QWORD PTR [rbx+0x108],0x0
  4079b7:	call   0x40b590
  4079bc:	mov    rax,QWORD PTR [rax+0x208]
  4079c3:	mov    QWORD PTR [rbx+0x100],rax
  4079ca:	cmp    QWORD PTR [rbx+0x100],0x0
  4079d2:	je     0x407a9f
  4079d8:	mov    rax,QWORD PTR [rbx+0x100]
  4079df:	cmp    rax,QWORD PTR [rbx+0xf8]
  4079e6:	jne    0x407a72
  4079ec:	cmp    QWORD PTR [rbx+0x108],0x0
  4079f4:	jne    0x407a07
  4079f6:	mov    rax,QWORD PTR [rbx+0xf0]
  4079fd:	cmp    DWORD PTR [rax+0x8],0x1
  407a01:	jne    0x407a9f
  407a07:	cmp    QWORD PTR [rbx+0x108],0x0
  407a0f:	jne    0x407a23
  407a11:	call   0x40b590
  407a16:	mov    QWORD PTR [rax+0x208],0x0
  407a21:	jmp    0x407a37
  407a23:	mov    rax,QWORD PTR [rbx+0x108]
  407a2a:	mov    rcx,QWORD PTR [rbx+0x100]
  407a31:	mov    rcx,QWORD PTR [rcx]
  407a34:	mov    QWORD PTR [rax],rcx
  407a37:	mov    rax,QWORD PTR [rbx+0x100]
  407a3e:	cmp    QWORD PTR [rax+0x10],0x0
  407a43:	je     0x407a64
  407a45:	mov    rax,QWORD PTR [rbx+0x100]
  407a4c:	mov    rcx,QWORD PTR [rax+0x10]
  407a50:	call   0x406590
  407a55:	mov    rax,QWORD PTR [rbx+0x100]
  407a5c:	mov    QWORD PTR [rax+0x10],0x0
  407a64:	mov    rcx,QWORD PTR [rbx+0x100]
  407a6b:	call   0x405040
  407a70:	jmp    0x407a9f
  407a72:	mov    rax,QWORD PTR [rbx+0x100]
  407a79:	mov    QWORD PTR [rbx+0x108],rax
  407a80:	mov    rax,QWORD PTR [rbx+0x100]
  407a87:	mov    rax,QWORD PTR [rax]
  407a8a:	mov    QWORD PTR [rbx+0x100],rax
  407a91:	cmp    QWORD PTR [rbx+0x100],0x0
  407a99:	jne    0x4079d8
  407a9f:	nop
  407aa0:	lea    rsp,[rbp+0x28]
  407aa4:	pop    rbx
  407aa5:	pop    rbp
  407aa6:	ret    
  407aa7:	int3   
  407aa8:	int3   
  407aa9:	int3   
  407aaa:	int3   
  407aab:	int3   
  407aac:	int3   
  407aad:	int3   
  407aae:	int3   
  407aaf:	int3   
  407ab0:	push   rbp
  407ab1:	push   rsi
  407ab2:	push   rbx
  407ab3:	sub    rsp,0xf0
  407aba:	mov    rbp,rsp
  407abd:	mov    rbx,rcx
  407ac0:	mov    rsi,rdx
  407ac3:	test   rbx,rbx
  407ac6:	jne    0x407acf
  407ac8:	mov    cl,0xd8
  407aca:	call   0x408330
  407acf:	mov    QWORD PTR [rbp+0xb8],rsi
  407ad6:	mov    QWORD PTR [rbp+0xc0],rbx
  407add:	mov    QWORD PTR [rbp+0xc8],0x0
  407ae8:	mov    QWORD PTR [rbp+0xd0],0x0
  407af3:	mov    QWORD PTR [rbp+0xd8],0x0
  407afe:	mov    QWORD PTR [rbp+0xe0],0x0
  407b09:	mov    QWORD PTR [rbp+0xe8],0x0
  407b14:	cmp    QWORD PTR [rip+0xf51c],0x0        # 0x417038
  407b1c:	je     0x407b96
  407b1e:	mov    DWORD PTR [rbp+0x20],0xeedfade
  407b25:	mov    DWORD PTR [rbp+0x24],0x1
  407b2c:	mov    QWORD PTR [rbp+0x28],0x0
  407b34:	mov    QWORD PTR [rbp+0x30],rsi
  407b38:	mov    DWORD PTR [rbp+0x38],0x7
  407b3f:	mov    rax,QWORD PTR [rbp+0xb8]
  407b46:	mov    QWORD PTR [rbp+0x40],rax
  407b4a:	mov    rax,QWORD PTR [rbp+0xc0]
  407b51:	mov    QWORD PTR [rbp+0x48],rax
  407b55:	mov    rax,QWORD PTR [rbp+0xc8]
  407b5c:	mov    QWORD PTR [rbp+0x50],rax
  407b60:	mov    rax,QWORD PTR [rbp+0xd0]
  407b67:	mov    QWORD PTR [rbp+0x58],rax
  407b6b:	mov    rax,QWORD PTR [rbp+0xd8]
  407b72:	mov    QWORD PTR [rbp+0x60],rax
  407b76:	mov    rax,QWORD PTR [rbp+0xe0]
  407b7d:	mov    QWORD PTR [rbp+0x68],rax
  407b81:	mov    rax,QWORD PTR [rbp+0xe8]
  407b88:	mov    QWORD PTR [rbp+0x70],rax
  407b8c:	lea    rcx,[rbp+0x20]
  407b90:	call   QWORD PTR [rip+0xf4a2]        # 0x417038
  407b96:	mov    ecx,0xeedfade
  407b9c:	mov    edx,0x1
  407ba2:	mov    r8d,0x7
  407ba9:	lea    r9,[rbp+0xb8]
  407bb0:	call   QWORD PTR [rip+0xf472]        # 0x417028
  407bb6:	lea    rsp,[rbp+0xf0]
  407bbd:	pop    rbx
  407bbe:	pop    rsi
  407bbf:	pop    rbp
  407bc0:	ret    
  407bc1:	int3   
  407bc2:	int3   
  407bc3:	int3   
  407bc4:	int3   
  407bc5:	int3   
  407bc6:	int3   
  407bc7:	int3   
  407bc8:	int3   
  407bc9:	int3   
  407bca:	int3   
  407bcb:	int3   
  407bcc:	int3   
  407bcd:	int3   
  407bce:	int3   
  407bcf:	int3   
  407bd0:	push   rbp
  407bd1:	sub    rsp,0x20
  407bd5:	mov    rbp,rsp
  407bd8:	mov    rdx,QWORD PTR [rbp+0x28]
  407bdc:	call   0x407ab0
  407be1:	lea    rsp,[rbp+0x20]
  407be5:	pop    rbp
  407be6:	ret    
  407be7:	int3   
  407be8:	int3   
  407be9:	int3   
  407bea:	int3   
  407beb:	int3   
  407bec:	int3   
  407bed:	int3   
  407bee:	int3   
  407bef:	int3   
  407bf0:	push   rsi
  407bf1:	push   rbx
  407bf2:	sub    rsp,0x28
  407bf6:	call   0x40b590
  407bfb:	mov    rax,QWORD PTR [rax+0x208]
  407c02:	mov    rbx,QWORD PTR [rax+0x10]
  407c06:	mov    rsi,QWORD PTR [rax+0x8]
  407c0a:	mov    QWORD PTR [rax+0x10],0x0
  407c12:	mov    rcx,rbx
  407c15:	mov    rdx,rsi
  407c18:	call   0x406df0
  407c1d:	mov    rcx,rbx
  407c20:	mov    rdx,rsi
  407c23:	call   0x407ab0
  407c28:	add    rsp,0x28
  407c2c:	pop    rbx
  407c2d:	pop    rsi
  407c2e:	ret    
  407c2f:	int3   
  407c30:	push   r13
  407c32:	push   rdi
  407c33:	push   rsi
  407c34:	push   rbx
  407c35:	sub    rsp,0x28
  407c39:	call   0x40b590
  407c3e:	lea    rcx,ds:0x208
  407c46:	lea    rsi,[rax+rcx*1]
  407c4a:	mov    rbx,QWORD PTR [rsi]
  407c4d:	test   rbx,rbx
  407c50:	jne    0x407c59
  407c52:	mov    cl,0xd8
  407c54:	call   0x408330
  407c59:	mov    rax,QWORD PTR [rbx]
  407c5c:	mov    QWORD PTR [rsi],rax
  407c5f:	mov    rsi,QWORD PTR [rbx+0x10]
  407c63:	mov    rdi,QWORD PTR [rbx+0x8]
  407c67:	mov    QWORD PTR [rbx+0x10],0x0
  407c6f:	mov    rcx,rbx
  407c72:	call   0x405040
  407c77:	call   0x40b590
  407c7c:	cmp    QWORD PTR [rax+0x208],0x0
  407c84:	je     0x407cf5
  407c86:	test   rsi,rsi
  407c89:	je     0x407cf5
  407c8b:	call   0x40b590
  407c90:	lea    rcx,ds:0x208
  407c98:	lea    r13,[rax+rcx*1]
  407c9c:	mov    rbx,QWORD PTR [r13+0x0]
  407ca0:	test   rbx,rbx
  407ca3:	jne    0x407cac
  407ca5:	mov    cl,0xd8
  407ca7:	call   0x408330
  407cac:	mov    rax,QWORD PTR [rbx]
  407caf:	mov    QWORD PTR [r13+0x0],rax
  407cb3:	cmp    QWORD PTR [rbx+0x10],0x0
  407cb8:	je     0x407cc3
  407cba:	mov    rcx,QWORD PTR [rbx+0x10]
  407cbe:	call   0x406590
  407cc3:	mov    rcx,rbx
  407cc6:	call   0x405040
  407ccb:	call   0x404f90
  407cd0:	mov    QWORD PTR [rax+0x8],rdi
  407cd4:	mov    QWORD PTR [rax+0x10],rsi
  407cd8:	mov    rbx,rax
  407cdb:	call   0x40b590
  407ce0:	lea    rcx,ds:0x208
  407ce8:	lea    rax,[rax+rcx*1]
  407cec:	mov    rcx,QWORD PTR [rax]
  407cef:	mov    QWORD PTR [rbx],rcx
  407cf2:	mov    QWORD PTR [rax],rbx
  407cf5:	add    rsp,0x28
  407cf9:	pop    rbx
  407cfa:	pop    rsi
  407cfb:	pop    rdi
  407cfc:	pop    r13
  407cfe:	ret    
  407cff:	int3   
  407d00:	push   rbp
  407d01:	push   rsi
  407d02:	push   rbx
  407d03:	sub    rsp,0x20
  407d07:	mov    rbp,rsp
  407d0a:	call   0x40b590
  407d0f:	lea    rcx,ds:0x208
  407d17:	lea    rsi,[rax+rcx*1]
  407d1b:	mov    rbx,QWORD PTR [rsi]
  407d1e:	test   rbx,rbx
  407d21:	jne    0x407d2a
  407d23:	mov    cl,0xd8
  407d25:	call   0x408330
  407d2a:	mov    rax,QWORD PTR [rbx]
  407d2d:	mov    QWORD PTR [rsi],rax
  407d30:	cmp    QWORD PTR [rbx+0x10],0x0
  407d35:	je     0x407d40
  407d37:	mov    rcx,QWORD PTR [rbx+0x10]
  407d3b:	call   0x406590
  407d40:	mov    rcx,rbx
  407d43:	call   0x405040
  407d48:	mov    rax,QWORD PTR [rbp+0x38]
  407d4c:	mov    rcx,rax
  407d4f:	call   0x406f10
  407d54:	lea    rsp,[rbp+0x20]
  407d58:	pop    rbx
  407d59:	pop    rsi
  407d5a:	pop    rbp
  407d5b:	ret    
  407d5c:	int3   
  407d5d:	int3   
  407d5e:	int3   
  407d5f:	int3   
  407d60:	push   rbp
  407d61:	sub    rsp,0x50
  407d65:	mov    rbp,rsp
  407d68:	mov    QWORD PTR [rbp+0x28],rbp
  407d6c:	cmp    QWORD PTR [rip+0x13e6c],0x0        # 0x41bbe0
  407d74:	je     0x407de5
  407d76:	mov    eax,DWORD PTR [rip+0x13e6c]        # 0x41bbe8
  407d7c:	mov    DWORD PTR [rbp+0x4c],eax
  407d7f:	mov    rax,QWORD PTR [rip+0x13e5a]        # 0x41bbe0
  407d86:	mov    rax,QWORD PTR [rax+0x8]
  407d8a:	mov    QWORD PTR [rbp+0x40],rax
  407d8e:	nop
  407d8f:	cmp    DWORD PTR [rbp+0x4c],0x0
  407d93:	jle    0x407dd0
  407d95:	sub    DWORD PTR [rbp+0x4c],0x1
  407d99:	mov    eax,DWORD PTR [rbp+0x4c]
  407d9c:	mov    DWORD PTR [rip+0x13e46],eax        # 0x41bbe8
  407da2:	mov    rax,QWORD PTR [rbp+0x40]
  407da6:	movsxd rcx,DWORD PTR [rbp+0x4c]
  407daa:	add    rcx,rcx
  407dad:	mov    rax,QWORD PTR [rax+rcx*8+0x8]
  407db2:	mov    QWORD PTR [rbp+0x38],rax
  407db6:	cmp    QWORD PTR [rbp+0x38],0x0
  407dbb:	je     0x407dca
  407dbd:	mov    rax,QWORD PTR [rbp+0x38]
  407dc1:	cmp    QWORD PTR [rax],0x0
  407dc5:	je     0x407dca
  407dc7:	call   QWORD PTR [rbp+0x38]
  407dca:	cmp    DWORD PTR [rbp+0x4c],0x0
  407dce:	jg     0x407d95
  407dd0:	nop
  407dd1:	jmp    0x407de5
  407dd3:	nop
  407dd4:	nop
  407dd5:	call   0x407d60
  407dda:	call   0x407bf0
  407ddf:	call   0x407d00
  407de4:	nop
  407de5:	lea    rsp,[rbp+0x50]
  407de9:	pop    rbp
  407dea:	ret    
  407deb:	lea    rax,[rax+riz*1+0x0]
  407df0:	sub    rsp,0x28
  407df4:	call   0x407c30
  407df9:	add    rsp,0x28
  407dfd:	ret    
  407dfe:	int3   
  407dff:	int3   
  407e00:	push   rbp
  407e01:	sub    rsp,0x50
  407e05:	mov    rbp,rsp
  407e08:	mov    QWORD PTR [rbp+0x28],rbp
  407e0c:	cmp    QWORD PTR [rip+0x13dcc],0x0        # 0x41bbe0
  407e14:	je     0x407e92
  407e16:	mov    rax,QWORD PTR [rip+0x13dc3]        # 0x41bbe0
  407e1d:	mov    eax,DWORD PTR [rax]
  407e1f:	mov    DWORD PTR [rbp+0x4c],eax
  407e22:	mov    DWORD PTR [rbp+0x48],0x0
  407e29:	mov    rax,QWORD PTR [rip+0x13db0]        # 0x41bbe0
  407e30:	mov    rax,QWORD PTR [rax+0x8]
  407e34:	mov    QWORD PTR [rbp+0x40],rax
  407e38:	nop
  407e39:	mov    eax,DWORD PTR [rbp+0x48]
  407e3c:	cmp    eax,DWORD PTR [rbp+0x4c]
  407e3f:	jge    0x407e7d
  407e41:	mov    rax,QWORD PTR [rbp+0x40]
  407e45:	movsxd rcx,DWORD PTR [rbp+0x48]
  407e49:	add    rcx,rcx
  407e4c:	mov    rax,QWORD PTR [rax+rcx*8]
  407e50:	mov    QWORD PTR [rbp+0x38],rax
  407e54:	add    DWORD PTR [rbp+0x48],0x1
  407e58:	mov    eax,DWORD PTR [rbp+0x48]
  407e5b:	mov    DWORD PTR [rip+0x13d87],eax        # 0x41bbe8
  407e61:	cmp    QWORD PTR [rbp+0x38],0x0
  407e66:	je     0x407e75
  407e68:	mov    rax,QWORD PTR [rbp+0x38]
  407e6c:	cmp    QWORD PTR [rax],0x0
  407e70:	je     0x407e75
  407e72:	call   QWORD PTR [rbp+0x38]
  407e75:	mov    eax,DWORD PTR [rbp+0x48]
  407e78:	cmp    eax,DWORD PTR [rbp+0x4c]
  407e7b:	jl     0x407e41
  407e7d:	nop
  407e7e:	jmp    0x407e92
  407e80:	nop
  407e81:	nop
  407e82:	call   0x407d60
  407e87:	call   0x407bf0
  407e8c:	call   0x407d00
  407e91:	nop
  407e92:	lea    rsp,[rbp+0x50]
  407e96:	pop    rbp
  407e97:	ret    
  407e98:	lea    rax,[rax*1+0x0]
  407ea0:	sub    rsp,0x28
  407ea4:	call   0x407c30
  407ea9:	add    rsp,0x28
  407ead:	ret    
  407eae:	int3   
  407eaf:	int3   
  407eb0:	sub    rsp,0x28
  407eb4:	lea    rax,[rip+0xffffffffffffaab5]        # 0x402970
  407ebb:	mov    QWORD PTR [rip+0xf166],rax        # 0x417028
  407ec2:	lea    rax,[rip+0xffffffffffffaab7]        # 0x402980
  407ec9:	mov    QWORD PTR [rip+0xf160],rax        # 0x417030
  407ed0:	mov    QWORD PTR [rip+0x13d09],rcx        # 0x41bbe0
  407ed7:	mov    DWORD PTR [rip+0x13d07],0x0        # 0x41bbe8
  407ee1:	mov    QWORD PTR [rip+0x13d08],rdx        # 0x41bbf0
  407ee8:	mov    rax,QWORD PTR [rdx+0x8]
  407eec:	mov    QWORD PTR [rip+0xf15d],rax        # 0x417050
  407ef3:	mov    QWORD PTR [rip+0x13cda],0x1        # 0x41bbd8
  407efe:	mov    BYTE PTR [rip+0xf157],0x0        # 0x41705c
  407f05:	call   0x407e00
  407f0a:	add    rsp,0x28
  407f0e:	ret    
  407f0f:	int3   
  407f10:	mov    cl,0x10
  407f12:	mov    r8d,DWORD PTR [rip+0xc0e7]        # 0x414000
  407f19:	lea    r9,[rip+0xd450]        # 0x415370
  407f20:	movzx  r10,cl
  407f24:	mov    r11d,0xa
  407f2b:	mov    eax,r8d
  407f2e:	cdq    
  407f2f:	idiv   r11d
  407f32:	add    dl,0x30
  407f35:	mov    BYTE PTR [r9+r10*1],dl
  407f39:	mov    r9d,0xa
  407f40:	mov    eax,r8d
  407f43:	cdq    
  407f44:	idiv   r9d
  407f47:	mov    r8,rax
  407f4a:	sub    cl,0x1
  407f4d:	test   r8d,r8d
  407f50:	jne    0x407f19
  407f52:	mov    cl,0x24
  407f54:	mov    rax,QWORD PTR [rip+0xc0ad]        # 0x414008
  407f5b:	lea    rdx,[rip+0xd40e]        # 0x415370
  407f62:	movzx  r8,cl
  407f66:	lea    r9,[rip+0xd429]        # 0x415396
  407f6d:	mov    r10,rax
  407f70:	and    r10,0xf
  407f74:	movzx  r9,BYTE PTR [r9+r10*1]
  407f79:	mov    BYTE PTR [rdx+r8*1],r9b
  407f7d:	mov    r8d,0x10
  407f84:	xor    edx,edx
  407f86:	div    r8
  407f89:	sub    cl,0x1
  407f8c:	test   rax,rax
  407f8f:	jne    0x407f5b
  407f91:	ret    
  407f92:	int3   
  407f93:	int3   
  407f94:	int3   
  407f95:	int3   
  407f96:	int3   
  407f97:	int3   
  407f98:	int3   
  407f99:	int3   
  407f9a:	int3   
  407f9b:	int3   
  407f9c:	int3   
  407f9d:	int3   
  407f9e:	int3   
  407f9f:	int3   
  407fa0:	xchg   edx,eax
  407fa1:	lea    rdx,[rcx+0x70]
  407fa5:	movapd xmm6,XMMWORD PTR [rdx-0x20]
  407faa:	movapd xmm7,XMMWORD PTR [rdx-0x10]
  407faf:	movapd xmm8,XMMWORD PTR [rdx]
  407fb4:	movapd xmm9,XMMWORD PTR [rdx+0x10]
  407fba:	movapd xmm10,XMMWORD PTR [rdx+0x20]
  407fc0:	movapd xmm11,XMMWORD PTR [rdx+0x30]
  407fc6:	movapd xmm12,XMMWORD PTR [rdx+0x40]
  407fcc:	movapd xmm13,XMMWORD PTR [rdx+0x50]
  407fd2:	movapd xmm14,XMMWORD PTR [rdx+0x60]
  407fd8:	movapd xmm15,XMMWORD PTR [rdx+0x70]
  407fde:	mov    rbx,QWORD PTR [rcx+0x10]
  407fe2:	mov    rbp,QWORD PTR [rcx+0x18]
  407fe6:	mov    rsi,QWORD PTR [rcx+0x20]
  407fea:	mov    rdi,QWORD PTR [rcx+0x28]
  407fee:	mov    r12,QWORD PTR [rcx+0x30]
  407ff2:	mov    r13,QWORD PTR [rcx+0x38]
  407ff6:	mov    r14,QWORD PTR [rcx+0x40]
  407ffa:	mov    r15,QWORD PTR [rcx+0x48]
  407ffe:	mov    rsp,QWORD PTR [rcx+0x8]
  408002:	jmp    QWORD PTR [rcx]
  408004:	ret    
  408005:	int3   
  408006:	int3   
  408007:	int3   
  408008:	int3   
  408009:	int3   
  40800a:	int3   
  40800b:	int3   
  40800c:	int3   
  40800d:	int3   
  40800e:	int3   
  40800f:	int3   
  408010:	push   rbp
  408011:	push   rdi
  408012:	push   rsi
  408013:	sub    rsp,0x110
  40801a:	mov    rbp,rsp
  40801d:	mov    rax,rcx
  408020:	lea    rdi,[rbp+0x20]
  408024:	lea    rsi,[rax+0x38]
  408028:	mov    ecx,0x1e
  40802e:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  408031:	mov    rsi,QWORD PTR [rax]
  408034:	mov    rdi,rax
  408037:	mov    ecx,0x25
  40803d:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  408040:	cmp    DWORD PTR [rip+0xbfb9],0x0        # 0x414000
  408047:	setne  al
  40804a:	movzx  rax,al
  40804e:	add    eax,0x1
  408051:	mov    DWORD PTR [rip+0xbfa5],0x0        # 0x414000
  40805b:	lea    rcx,[rbp+0x20]
  40805f:	mov    edx,eax
  408061:	call   0x407fa0
  408066:	lea    rsp,[rbp+0x110]
  40806d:	pop    rsi
  40806e:	pop    rdi
  40806f:	pop    rbp
  408070:	ret    
  408071:	int3   
  408072:	int3   
  408073:	int3   
  408074:	int3   
  408075:	int3   
  408076:	int3   
  408077:	int3   
  408078:	int3   
  408079:	int3   
  40807a:	int3   
  40807b:	int3   
  40807c:	int3   
  40807d:	int3   
  40807e:	int3   
  40807f:	int3   
  408080:	push   rbx
  408081:	sub    rsp,0x40
  408085:	cmp    BYTE PTR [rip+0xefec],0x0        # 0x417078
  40808c:	je     0x40811e
  408092:	cmp    WORD PTR [rip+0xf2ed],0xd7b2        # 0x417388
  40809b:	jne    0x4080b3
  40809d:	cmp    DWORD PTR [rip+0xf2ec],0x0        # 0x417390
  4080a4:	jbe    0x4080b3
  4080a6:	lea    rcx,[rip+0xf2d3]        # 0x417380
  4080ad:	call   QWORD PTR [rip+0xf2f5]        # 0x4173a8
  4080b3:	mov    ecx,0xfffffff5
  4080b9:	call   0x4028a0
  4080be:	mov    rcx,rax
  4080c1:	lea    rdx,[rip+0xd2a8]        # 0x415370
  4080c8:	mov    r8d,0x25
  4080cf:	lea    r9,[rsp+0x3c]
  4080d4:	mov    QWORD PTR [rsp+0x20],0x0
  4080dd:	call   0x402910
  4080e2:	mov    ecx,0xfffffff5
  4080e8:	call   0x4028a0
  4080ed:	mov    rbx,rax
  4080f0:	lea    rcx,[rip+0x5d]        # 0x408154
  4080f7:	call   0x408d30
  4080fc:	mov    rcx,rbx
  4080ff:	mov    rdx,rax
  408102:	mov    r8d,0x2
  408109:	lea    r9,[rsp+0x3c]
  40810e:	mov    QWORD PTR [rsp+0x20],0x0
  408117:	call   0x402910
  40811c:	jmp    0x408140
  40811e:	cmp    BYTE PTR [rip+0xbf05],0x0        # 0x41402a
  408125:	jne    0x408140
  408127:	xor    rcx,rcx
  40812a:	lea    rdx,[rip+0xd23f]        # 0x415370
  408131:	lea    r8,[rip+0xd1b0]        # 0x4152e8
  408138:	xor    r9,r9
  40813b:	call   0x402b00
  408140:	add    rsp,0x40
  408144:	pop    rbx
  408145:	ret    
  408146:	add    BYTE PTR [rax],al
  408148:	in     al,0x4
  40814a:	add    DWORD PTR [rax],eax
  40814c:	(bad)  
  40814d:	(bad)  
  40814e:	(bad)  
  40814f:	inc    DWORD PTR [rdx]
  408151:	add    BYTE PTR [rax],al
  408153:	add    BYTE PTR [rip+0xffffffffcccc000a],cl        # 0xffffffffcd0c8163
  408159:	int3   
  40815a:	int3   
  40815b:	int3   
  40815c:	int3   
  40815d:	int3   
  40815e:	int3   
  40815f:	int3   
  408160:	push   rdi
  408161:	push   rsi
  408162:	push   rbx
  408163:	sub    rsp,0x20
  408167:	cmp    QWORD PTR [rip+0xbe99],0x0        # 0x414008
  40816f:	je     0x408186
  408171:	call   0x407f10
  408176:	call   0x408080
  40817b:	mov    QWORD PTR [rip+0xbe82],0x0        # 0x414008
  408186:	cmp    QWORD PTR [rip+0x13b72],0x0        # 0x41bd00
  40818e:	je     0x4081b4
  408190:	call   0x402940
  408195:	cmp    eax,DWORD PTR [rip+0x13b91]        # 0x41bd2c
  40819b:	jne    0x4081b4
  40819d:	mov    QWORD PTR [rip+0x13b58],0x0        # 0x41bd00
  4081a8:	lea    rcx,[rip+0x13b49]        # 0x41bcf8
  4081af:	call   0x408010
  4081b4:	cmp    BYTE PTR [rip+0x13a45],0x0        # 0x41bc00
  4081bb:	jne    0x4081e6
  4081bd:	cmp    QWORD PTR [rip+0xeeab],0x0        # 0x417070
  4081c5:	je     0x4081e5
  4081c7:	mov    rbx,QWORD PTR [rip+0xeea2]        # 0x417070
  4081ce:	mov    QWORD PTR [rip+0xee97],0x0        # 0x417070
  4081d9:	call   rbx
  4081db:	cmp    QWORD PTR [rip+0xee8d],0x0        # 0x417070
  4081e3:	jne    0x4081c7
  4081e5:	nop
  4081e6:	cmp    BYTE PTR [rip+0x13a13],0x2        # 0x41bc00
  4081ed:	jne    0x408202
  4081ef:	cmp    DWORD PTR [rip+0xbe0a],0x0        # 0x414000
  4081f6:	jne    0x408202
  4081f8:	mov    DWORD PTR [rip+0x139e6],0x0        # 0x41bbe8
  408202:	cmp    BYTE PTR [rip+0x139f7],0x0        # 0x41bc00
  408209:	jne    0x408228
  40820b:	call   0x405100
  408210:	test   rax,rax
  408213:	je     0x408227
  408215:	mov    rcx,rax
  408218:	call   0x406590
  40821d:	call   0x405100
  408222:	test   rax,rax
  408225:	jne    0x408215
  408227:	nop
  408228:	call   0x407d60
  40822d:	cmp    BYTE PTR [rip+0x139cc],0x1        # 0x41bc00
  408234:	jbe    0x40823f
  408236:	cmp    DWORD PTR [rip+0xbdc3],0x0        # 0x414000
  40823d:	je     0x40828b
  40823f:	cmp    QWORD PTR [rip+0x139a9],0x0        # 0x41bbf0
  408247:	je     0x40828b
  408249:	mov    rcx,QWORD PTR [rip+0x139a0]        # 0x41bbf0
  408250:	call   0x409ef0
  408255:	mov    rax,QWORD PTR [rip+0x13994]        # 0x41bbf0
  40825c:	mov    rcx,QWORD PTR [rip+0x1398d]        # 0x41bbf0
  408263:	mov    rax,QWORD PTR [rax+0x20]
  408267:	cmp    rax,QWORD PTR [rcx+0x8]
  40826b:	je     0x40828b
  40826d:	mov    rax,QWORD PTR [rip+0x1397c]        # 0x41bbf0
  408274:	cmp    QWORD PTR [rax+0x20],0x0
  408279:	je     0x40828b
  40827b:	mov    rax,QWORD PTR [rip+0x1396e]        # 0x41bbf0
  408282:	mov    rcx,QWORD PTR [rax+0x20]
  408286:	call   0x4029c0
  40828b:	mov    QWORD PTR [rip+0x13942],0x0        # 0x41bbd8
  408296:	cmp    BYTE PTR [rip+0x13963],0x1        # 0x41bc00
  40829d:	jne    0x4082a5
  40829f:	call   QWORD PTR [rip+0x13953]        # 0x41bbf8
  4082a5:	cmp    BYTE PTR [rip+0x13954],0x0        # 0x41bc00
  4082ac:	je     0x4082ba
  4082ae:	lea    rcx,[rip+0x1391b]        # 0x41bbd0
  4082b5:	call   0x408010
  4082ba:	cmp    QWORD PTR [rip+0x1390e],0x0        # 0x41bbd0
  4082c2:	jne    0x4082df
  4082c4:	cmp    QWORD PTR [rip+0xed7c],0x0        # 0x417048
  4082cc:	je     0x4082d4
  4082ce:	call   QWORD PTR [rip+0xed74]        # 0x417048
  4082d4:	mov    ecx,DWORD PTR [rip+0xbd26]        # 0x414000
  4082da:	call   0x402960
  4082df:	mov    rsi,QWORD PTR [rip+0x138ea]        # 0x41bbd0
  4082e6:	lea    rdi,[rip+0x138e3]        # 0x41bbd0
  4082ed:	mov    ecx,0x25
  4082f3:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  4082f6:	jmp    0x4081e6
  4082fb:	add    rsp,0x20
  4082ff:	pop    rbx
  408300:	pop    rsi
  408301:	pop    rdi
  408302:	ret    
  408303:	int3   
  408304:	int3   
  408305:	int3   
  408306:	int3   
  408307:	int3   
  408308:	int3   
  408309:	int3   
  40830a:	int3   
  40830b:	int3   
  40830c:	int3   
  40830d:	int3   
  40830e:	int3   
  40830f:	int3   
  408310:	sub    rsp,0x28
  408314:	mov    DWORD PTR [rip+0xbce6],ecx        # 0x414000
  40831a:	call   0x408160
  40831f:	add    rsp,0x28
  408323:	ret    
  408324:	int3   
  408325:	int3   
  408326:	int3   
  408327:	int3   
  408328:	int3   
  408329:	int3   
  40832a:	int3   
  40832b:	int3   
  40832c:	int3   
  40832d:	int3   
  40832e:	int3   
  40832f:	int3   
  408330:	push   rbp
  408331:	sub    rsp,0x20
  408335:	mov    rbp,rsp
  408338:	mov    rax,QWORD PTR [rbp+0x28]
  40833c:	mov    QWORD PTR [rip+0xbcc5],rax        # 0x414008
  408343:	movzx  rcx,cl
  408347:	call   0x408310
  40834c:	lea    rsp,[rbp+0x20]
  408350:	pop    rbp
  408351:	ret    
  408352:	int3   
  408353:	int3   
  408354:	int3   
  408355:	int3   
  408356:	int3   
  408357:	int3   
  408358:	int3   
  408359:	int3   
  40835a:	int3   
  40835b:	int3   
  40835c:	int3   
  40835d:	int3   
  40835e:	int3   
  40835f:	int3   
  408360:	push   rsi
  408361:	push   rbx
  408362:	sub    rsp,0x28
  408366:	call   0x4050a0
  40836b:	mov    rbx,rax
  40836e:	call   0x4050d0
  408373:	mov    rsi,rax
  408376:	mov    rcx,rbx
  408379:	mov    rdx,rsi
  40837c:	call   0x406f50
  408381:	cmp    QWORD PTR [rip+0xec7f],0x0        # 0x417008
  408389:	je     0x408397
  40838b:	mov    rcx,rbx
  40838e:	mov    rdx,rsi
  408391:	call   QWORD PTR [rip+0xec71]        # 0x417008
  408397:	mov    ecx,0xd9
  40839d:	mov    rdx,rsi
  4083a0:	call   0x405150
  4083a5:	add    rsp,0x28
  4083a9:	pop    rbx
  4083aa:	pop    rsi
  4083ab:	ret    
  4083ac:	int3   
  4083ad:	int3   
  4083ae:	int3   
  4083af:	int3   
  4083b0:	push   rbx
  4083b1:	sub    rsp,0x20
  4083b5:	mov    ebx,ecx
  4083b7:	xor    rax,rax
  4083ba:	test   ebx,ebx
  4083bc:	jle    0x408409
  4083be:	cmp    ebx,0x3ffffff7
  4083c4:	jl     0x4083cb
  4083c6:	call   0x4063e0
  4083cb:	mov    ecx,ebx
  4083cd:	add    ecx,0x1
  4083d0:	add    ecx,ecx
  4083d2:	add    ecx,0x10
  4083d5:	movsxd rcx,ecx
  4083d8:	call   0x404eb0
  4083dd:	mov    rcx,rax
  4083e0:	lea    rax,[rcx+0x10]
  4083e4:	mov    DWORD PTR [rcx+0xc],ebx
  4083e7:	mov    DWORD PTR [rcx+0x8],0x1
  4083ee:	mov    WORD PTR [rcx+0x6],0x2
  4083f4:	movzx  rdx,WORD PTR [rip+0xf580]        # 0x41797c
  4083fc:	mov    WORD PTR [rcx+0x4],dx
  408400:	movsxd rbx,ebx
  408403:	mov    WORD PTR [rax+rbx*2],0x0
  408409:	add    rsp,0x20
  40840d:	pop    rbx
  40840e:	ret    
  40840f:	int3   
  408410:	push   rsi
  408411:	push   rbx
  408412:	sub    rsp,0x28
  408416:	mov    ebx,ecx
  408418:	mov    esi,edx
  40841a:	xor    rcx,rcx
  40841d:	test   ebx,ebx
  40841f:	jle    0x408480
  408421:	cmp    ebx,0x7fffffef
  408427:	jl     0x40842e
  408429:	call   0x4063e0
  40842e:	mov    eax,ebx
  408430:	add    eax,0x1
  408433:	and    eax,0x1
  408436:	mov    ecx,ebx
  408438:	add    ecx,eax
  40843a:	add    ecx,0x11
  40843d:	movsxd rcx,ecx
  408440:	call   0x404eb0
  408445:	lea    rcx,[rax+0x10]
  408449:	mov    DWORD PTR [rax+0xc],ebx
  40844c:	mov    DWORD PTR [rax+0x8],0x1
  408453:	test   si,si
  408456:	jne    0x408460
  408458:	movzx  rsi,WORD PTR [rip+0xf518]        # 0x417978
  408460:	mov    WORD PTR [rax+0x4],si
  408464:	mov    WORD PTR [rax+0x6],0x1
  40846a:	mov    r8d,0x2
  408471:	mov    eax,ebx
  408473:	cdq    
  408474:	idiv   r8d
  408477:	movsxd rax,eax
  40847a:	mov    WORD PTR [rcx+rax*2],0x0
  408480:	mov    rax,rcx
  408483:	add    rsp,0x28
  408487:	pop    rbx
  408488:	pop    rsi
  408489:	ret    
  40848a:	int3   
  40848b:	int3   
  40848c:	int3   
  40848d:	int3   
  40848e:	int3   
  40848f:	int3   
  408490:	push   rbp
  408491:	sub    rsp,0x20
  408495:	mov    rbp,rsp
  408498:	mov    cl,0x1
  40849a:	mov    rdx,QWORD PTR [rbp+0x28]
  40849e:	call   0x405170
  4084a3:	lea    rsp,[rbp+0x20]
  4084a7:	pop    rbp
  4084a8:	ret    
  4084a9:	int3   
  4084aa:	int3   
  4084ab:	int3   
  4084ac:	int3   
  4084ad:	int3   
  4084ae:	int3   
  4084af:	int3   
  4084b0:	push   rbx
  4084b1:	sub    rsp,0x20
  4084b5:	xor    rbx,rbx
  4084b8:	test   ecx,ecx
  4084ba:	je     0x4084d6
  4084bc:	xor    rax,rax
  4084bf:	mov    edx,ecx
  4084c1:	mov    rcx,rax
  4084c4:	call   0x402b50
  4084c9:	mov    rbx,rax
  4084cc:	test   rbx,rbx
  4084cf:	jne    0x4084d6
  4084d1:	call   0x408490
  4084d6:	mov    rax,rbx
  4084d9:	add    rsp,0x20
  4084dd:	pop    rbx
  4084de:	ret    
  4084df:	int3   
  4084e0:	push   rbx
  4084e1:	sub    rsp,0x20
  4084e5:	mov    rbx,rcx
  4084e8:	cmp    QWORD PTR [rbx],0x0
  4084ec:	je     0x40851a
  4084ee:	mov    rax,QWORD PTR [rbx]
  4084f1:	lea    rax,[rax-0x10]
  4084f5:	mov    QWORD PTR [rbx],0x0
  4084fc:	cmp    DWORD PTR [rax+0x8],0x0
  408500:	jle    0x40851a
  408502:	or     edx,0xffffffff
  408505:	mov    ecx,edx
  408507:	lock xadd DWORD PTR [rax+0x8],edx
  40850c:	add    ecx,edx
  40850e:	test   ecx,ecx
  408510:	jne    0x40851a
  408512:	mov    rcx,rax
  408515:	call   0x404ee0
  40851a:	mov    rax,rbx
  40851d:	add    rsp,0x20
  408521:	pop    rbx
  408522:	ret    
  408523:	int3   
  408524:	int3   
  408525:	int3   
  408526:	int3   
  408527:	int3   
  408528:	int3   
  408529:	int3   
  40852a:	int3   
  40852b:	int3   
  40852c:	int3   
  40852d:	int3   
  40852e:	int3   
  40852f:	int3   
  408530:	push   rbx
  408531:	sub    rsp,0x20
  408535:	mov    rbx,rcx
  408538:	cmp    QWORD PTR [rbx],0x0
  40853c:	je     0x40856a
  40853e:	mov    rax,QWORD PTR [rbx]
  408541:	lea    rax,[rax-0x10]
  408545:	mov    QWORD PTR [rbx],0x0
  40854c:	cmp    DWORD PTR [rax+0x8],0x0
  408550:	jle    0x40856a
  408552:	or     edx,0xffffffff
  408555:	mov    ecx,edx
  408557:	lock xadd DWORD PTR [rax+0x8],edx
  40855c:	add    ecx,edx
  40855e:	test   ecx,ecx
  408560:	jne    0x40856a
  408562:	mov    rcx,rax
  408565:	call   0x404ee0
  40856a:	mov    rax,rbx
  40856d:	add    rsp,0x20
  408571:	pop    rbx
  408572:	ret    
  408573:	int3   
  408574:	int3   
  408575:	int3   
  408576:	int3   
  408577:	int3   
  408578:	int3   
  408579:	int3   
  40857a:	int3   
  40857b:	int3   
  40857c:	int3   
  40857d:	int3   
  40857e:	int3   
  40857f:	int3   
  408580:	push   rbp
  408581:	push   rbx
  408582:	sub    rsp,0x38
  408586:	mov    rbp,rsp
  408589:	mov    rbx,rcx
  40858c:	cmp    QWORD PTR [rbx],0x0
  408590:	je     0x4085a9
  408592:	mov    rax,QWORD PTR [rbx]
  408595:	mov    QWORD PTR [rbp+0x28],rax
  408599:	mov    QWORD PTR [rbx],0x0
  4085a0:	mov    rcx,QWORD PTR [rbp+0x28]
  4085a4:	call   0x402b70
  4085a9:	mov    rax,rbx
  4085ac:	lea    rsp,[rbp+0x38]
  4085b0:	pop    rbx
  4085b1:	pop    rbp
  4085b2:	ret    
  4085b3:	int3   
  4085b4:	int3   
  4085b5:	int3   
  4085b6:	int3   
  4085b7:	int3   
  4085b8:	int3   
  4085b9:	int3   
  4085ba:	int3   
  4085bb:	int3   
  4085bc:	int3   
  4085bd:	int3   
  4085be:	int3   
  4085bf:	int3   
  4085c0:	push   rsi
  4085c1:	push   rbx
  4085c2:	sub    rsp,0x28
  4085c6:	mov    ebx,edx
  4085c8:	mov    rsi,rcx
  4085cb:	test   ebx,ebx
  4085cd:	jle    0x4085e2
  4085cf:	mov    rcx,rsi
  4085d2:	call   0x4084e0
  4085d7:	sub    ebx,0x1
  4085da:	add    rsi,0x8
  4085de:	test   ebx,ebx
  4085e0:	jg     0x4085cf
  4085e2:	nop
  4085e3:	add    rsp,0x28
  4085e7:	pop    rbx
  4085e8:	pop    rsi
  4085e9:	ret    
  4085ea:	int3   
  4085eb:	int3   
  4085ec:	int3   
  4085ed:	int3   
  4085ee:	int3   
  4085ef:	int3   
  4085f0:	push   rsi
  4085f1:	push   rbx
  4085f2:	sub    rsp,0x28
  4085f6:	mov    ebx,edx
  4085f8:	mov    rsi,rcx
  4085fb:	test   ebx,ebx
  4085fd:	jle    0x408612
  4085ff:	mov    rcx,rsi
  408602:	call   0x408530
  408607:	sub    ebx,0x1
  40860a:	add    rsi,0x8
  40860e:	test   ebx,ebx
  408610:	jg     0x4085ff
  408612:	nop
  408613:	add    rsp,0x28
  408617:	pop    rbx
  408618:	pop    rsi
  408619:	ret    
  40861a:	int3   
  40861b:	int3   
  40861c:	int3   
  40861d:	int3   
  40861e:	int3   
  40861f:	int3   
  408620:	push   rbp
  408621:	push   rsi
  408622:	push   rbx
  408623:	sub    rsp,0x30
  408627:	mov    rbp,rsp
  40862a:	mov    ebx,edx
  40862c:	mov    rsi,rcx
  40862f:	test   ebx,ebx
  408631:	jle    0x40865c
  408633:	mov    rax,QWORD PTR [rsi]
  408636:	mov    QWORD PTR [rbp+0x28],rax
  40863a:	cmp    QWORD PTR [rbp+0x28],0x0
  40863f:	je     0x408651
  408641:	mov    QWORD PTR [rsi],0x0
  408648:	mov    rcx,QWORD PTR [rbp+0x28]
  40864c:	call   0x402b70
  408651:	add    rsi,0x8
  408655:	sub    ebx,0x1
  408658:	test   ebx,ebx
  40865a:	jg     0x408633
  40865c:	nop
  40865d:	lea    rsp,[rbp+0x30]
  408661:	pop    rbx
  408662:	pop    rsi
  408663:	pop    rbp
  408664:	ret    
  408665:	int3   
  408666:	int3   
  408667:	int3   
  408668:	int3   
  408669:	int3   
  40866a:	int3   
  40866b:	int3   
  40866c:	int3   
  40866d:	int3   
  40866e:	int3   
  40866f:	int3   
  408670:	mov    rax,rcx
  408673:	test   rcx,rcx
  408676:	je     0x40868d
  408678:	lea    rcx,[rcx-0x10]
  40867c:	cmp    DWORD PTR [rcx+0x8],0x0
  408680:	jl     0x40868d
  408682:	mov    edx,0x1
  408688:	lock xadd DWORD PTR [rcx+0x8],edx
  40868d:	ret    
  40868e:	int3   
  40868f:	int3   
  408690:	mov    rax,rcx
  408693:	test   rcx,rcx
  408696:	je     0x4086ad
  408698:	lea    rcx,[rcx-0x10]
  40869c:	cmp    DWORD PTR [rcx+0x8],0x0
  4086a0:	jl     0x4086ad
  4086a2:	mov    edx,0x1
  4086a8:	lock xadd DWORD PTR [rcx+0x8],edx
  4086ad:	ret    
  4086ae:	int3   
  4086af:	int3   
  4086b0:	push   rsi
  4086b1:	push   rbx
  4086b2:	sub    rsp,0x28
  4086b6:	mov    rbx,rcx
  4086b9:	mov    rsi,QWORD PTR [rbx]
  4086bc:	cmp    QWORD PTR [rbx],0x0
  4086c0:	je     0x4086eb
  4086c2:	mov    rax,QWORD PTR [rbx]
  4086c5:	mov    ecx,0x2
  4086cb:	mov    eax,DWORD PTR [rax-0x4]
  4086ce:	cdq    
  4086cf:	idiv   ecx
  4086d1:	mov    rcx,QWORD PTR [rbx]
  4086d4:	mov    edx,eax
  4086d6:	call   0x402b50
  4086db:	mov    rsi,rax
  4086de:	test   rsi,rsi
  4086e1:	jne    0x4086e8
  4086e3:	call   0x408490
  4086e8:	mov    QWORD PTR [rbx],rsi
  4086eb:	mov    rax,rsi
  4086ee:	add    rsp,0x28
  4086f2:	pop    rbx
  4086f3:	pop    rsi
  4086f4:	ret    
  4086f5:	int3   
  4086f6:	int3   
  4086f7:	int3   
  4086f8:	int3   
  4086f9:	int3   
  4086fa:	int3   
  4086fb:	int3   
  4086fc:	int3   
  4086fd:	int3   
  4086fe:	int3   
  4086ff:	int3   
  408700:	sub    rsp,0x48
  408704:	cmp    DWORD PTR [rsp+0x70],0x0
  408709:	jne    0x408715
  40870b:	mov    eax,DWORD PTR [rip+0xf267]        # 0x417978
  408711:	mov    DWORD PTR [rsp+0x70],eax
  408715:	mov    eax,DWORD PTR [rsp+0x70]
  408719:	xor    r10,r10
  40871c:	mov    QWORD PTR [rsp+0x20],rcx
  408721:	mov    DWORD PTR [rsp+0x28],edx
  408725:	mov    QWORD PTR [rsp+0x30],0x0
  40872e:	mov    QWORD PTR [rsp+0x38],0x0
  408737:	mov    ecx,eax
  408739:	mov    edx,r10d
  40873c:	call   0x40b1f0
  408741:	add    rsp,0x48
  408745:	ret    
  408746:	int3   
  408747:	int3   
  408748:	int3   
  408749:	int3   
  40874a:	int3   
  40874b:	int3   
  40874c:	int3   
  40874d:	int3   
  40874e:	int3   
  40874f:	int3   
  408750:	sub    rsp,0x38
  408754:	mov    eax,DWORD PTR [rsp+0x60]
  408758:	xor    r10,r10
  40875b:	mov    QWORD PTR [rsp+0x20],rcx
  408760:	mov    DWORD PTR [rsp+0x28],edx
  408764:	mov    ecx,eax
  408766:	mov    edx,r10d
  408769:	call   0x40b230
  40876e:	add    rsp,0x38
  408772:	ret    
  408773:	int3   
  408774:	int3   
  408775:	int3   
  408776:	int3   
  408777:	int3   
  408778:	int3   
  408779:	int3   
  40877a:	int3   
  40877b:	int3   
  40877c:	int3   
  40877d:	int3   
  40877e:	int3   
  40877f:	int3   
  408780:	push   rbp
  408781:	push   rdi
  408782:	push   rsi
  408783:	push   rbx
  408784:	sub    rsp,0x38
  408788:	mov    rbp,rsp
  40878b:	mov    rbx,rcx
  40878e:	mov    rsi,rdx
  408791:	mov    edi,r8d
  408794:	mov    rax,QWORD PTR [rbx]
  408797:	mov    QWORD PTR [rbp+0x28],rax
  40879b:	test   edi,edi
  40879d:	jle    0x4087c4
  40879f:	mov    ecx,edi
  4087a1:	call   0x4083b0
  4087a6:	mov    QWORD PTR [rbx],rax
  4087a9:	test   rsi,rsi
  4087ac:	je     0x4087cb
  4087ae:	mov    rcx,rsi
  4087b1:	mov    rdx,QWORD PTR [rbx]
  4087b4:	mov    r8d,edi
  4087b7:	add    r8d,r8d
  4087ba:	movsxd r8,r8d
  4087bd:	call   0x405240
  4087c2:	jmp    0x4087cb
  4087c4:	mov    QWORD PTR [rbx],0x0
  4087cb:	lea    rcx,[rbp+0x28]
  4087cf:	call   0x4084e0
  4087d4:	lea    rsp,[rbp+0x38]
  4087d8:	pop    rbx
  4087d9:	pop    rsi
  4087da:	pop    rdi
  4087db:	pop    rbp
  4087dc:	ret    
  4087dd:	int3   
  4087de:	int3   
  4087df:	int3   
  4087e0:	push   rsi
  4087e1:	push   rbx
  4087e2:	sub    rsp,0x28
  4087e6:	mov    rbx,rcx
  4087e9:	test   r8d,r8d
  4087ec:	jg     0x4087f8
  4087ee:	mov    rcx,rbx
  4087f1:	call   0x408580
  4087f6:	jmp    0x408821
  4087f8:	mov    rcx,rdx
  4087fb:	mov    edx,r8d
  4087fe:	call   0x402b50
  408803:	mov    rsi,rax
  408806:	test   rsi,rsi
  408809:	jne    0x408810
  40880b:	call   0x408490
  408810:	cmp    QWORD PTR [rbx],0x0
  408814:	je     0x40881e
  408816:	mov    rcx,QWORD PTR [rbx]
  408819:	call   0x402b70
  40881e:	mov    QWORD PTR [rbx],rsi
  408821:	add    rsp,0x28
  408825:	pop    rbx
  408826:	pop    rsi
  408827:	ret    
  408828:	int3   
  408829:	int3   
  40882a:	int3   
  40882b:	int3   
  40882c:	int3   
  40882d:	int3   
  40882e:	int3   
  40882f:	int3   
  408830:	push   rbp
  408831:	push   r13
  408833:	push   rdi
  408834:	push   rsi
  408835:	push   rbx
  408836:	mov    BYTE PTR [rsp-0x40],0x0
  40883b:	mov    BYTE PTR [rsp-0x1040],0x0
  408843:	sub    rsp,0x1040
  40884a:	mov    rbp,rsp
  40884d:	mov    QWORD PTR [rbp+0x38],rcx
  408851:	mov    rbx,rdx
  408854:	mov    esi,r8d
  408857:	mov    edi,r9d
  40885a:	test   esi,esi
  40885c:	jg     0x40886c
  40885e:	mov    rcx,QWORD PTR [rbp+0x38]
  408862:	call   0x4084e0
  408867:	jmp    0x4088ef
  40886c:	mov    eax,esi
  40886e:	add    eax,0x1
  408871:	cmp    eax,0x7ff
  408877:	jge    0x4088ac
  408879:	lea    rcx,[rbp+0x40]
  40887d:	mov    edx,0x7ff
  408883:	mov    r8,rbx
  408886:	mov    r9d,esi
  408889:	mov    DWORD PTR [rsp+0x20],edi
  40888d:	call   0x408750
  408892:	mov    r13d,eax
  408895:	test   r13d,r13d
  408898:	jle    0x4088ac
  40889a:	mov    rcx,QWORD PTR [rbp+0x38]
  40889e:	lea    rdx,[rbp+0x40]
  4088a2:	mov    r8d,r13d
  4088a5:	call   0x408780
  4088aa:	jmp    0x4088ef
  4088ac:	mov    r13d,esi
  4088af:	add    r13d,0x1
  4088b3:	mov    rcx,QWORD PTR [rbp+0x38]
  4088b7:	mov    edx,r13d
  4088ba:	call   0x4093b0
  4088bf:	mov    rax,QWORD PTR [rbp+0x38]
  4088c3:	mov    rcx,QWORD PTR [rax]
  4088c6:	mov    edx,r13d
  4088c9:	mov    r8,rbx
  4088cc:	mov    r9d,esi
  4088cf:	mov    DWORD PTR [rsp+0x20],edi
  4088d3:	call   0x408750
  4088d8:	mov    r13d,eax
  4088db:	test   r13d,r13d
  4088de:	jge    0x4088e3
  4088e0:	xor    r13,r13
  4088e3:	mov    rcx,QWORD PTR [rbp+0x38]
  4088e7:	mov    edx,r13d
  4088ea:	call   0x4093b0
  4088ef:	lea    rsp,[rbp+0x1040]
  4088f6:	pop    rbx
  4088f7:	pop    rsi
  4088f8:	pop    rdi
  4088f9:	pop    r13
  4088fb:	pop    rbp
  4088fc:	ret    
  4088fd:	int3   
  4088fe:	int3   
  4088ff:	int3   
  408900:	push   r13
  408902:	push   rdi
  408903:	push   rsi
  408904:	push   rbx
  408905:	sub    rsp,0x48
  408909:	mov    QWORD PTR [rsp+0x38],rcx
  40890e:	mov    rbx,rdx
  408911:	mov    esi,r8d
  408914:	mov    edi,r9d
  408917:	test   esi,esi
  408919:	jg     0x408927
  40891b:	mov    rcx,QWORD PTR [rsp+0x38]
  408920:	call   0x408530
  408925:	jmp    0x408999
  408927:	test   di,di
  40892a:	jne    0x408934
  40892c:	movzx  rdi,WORD PTR [rip+0xf044]        # 0x417978
  408934:	xor    rcx,rcx
  408937:	xor    rdx,rdx
  40893a:	mov    r8,rbx
  40893d:	mov    r9d,esi
  408940:	movzx  eax,di
  408943:	mov    DWORD PTR [rsp+0x20],eax
  408947:	call   0x408700
  40894c:	mov    r13d,eax
  40894f:	mov    rcx,QWORD PTR [rsp+0x38]
  408954:	mov    edx,r13d
  408957:	xor    r8,r8
  40895a:	call   0x408d60
  40895f:	test   r13d,r13d
  408962:	jle    0x40898f
  408964:	mov    rax,QWORD PTR [rsp+0x38]
  408969:	mov    rcx,QWORD PTR [rax]
  40896c:	mov    edx,r13d
  40896f:	mov    r8,rbx
  408972:	mov    r9d,esi
  408975:	movzx  eax,di
  408978:	mov    DWORD PTR [rsp+0x20],eax
  40897c:	call   0x408700
  408981:	mov    rax,QWORD PTR [rsp+0x38]
  408986:	mov    rax,QWORD PTR [rax]
  408989:	mov    WORD PTR [rax-0xc],di
  40898d:	jmp    0x408999
  40898f:	mov    rcx,QWORD PTR [rsp+0x38]
  408994:	call   0x408530
  408999:	add    rsp,0x48
  40899d:	pop    rbx
  40899e:	pop    rsi
  40899f:	pop    rdi
  4089a0:	pop    r13
  4089a2:	ret    
  4089a3:	int3   
  4089a4:	int3   
  4089a5:	int3   
  4089a6:	int3   
  4089a7:	int3   
  4089a8:	int3   
  4089a9:	int3   
  4089aa:	int3   
  4089ab:	int3   
  4089ac:	int3   
  4089ad:	int3   
  4089ae:	int3   
  4089af:	int3   
  4089b0:	push   rbp
  4089b1:	push   r13
  4089b3:	push   rdi
  4089b4:	push   rsi
  4089b5:	push   rbx
  4089b6:	sub    rsp,0x30
  4089ba:	mov    rbp,rsp
  4089bd:	mov    rbx,rcx
  4089c0:	mov    rsi,rdx
  4089c3:	mov    rdi,rsi
  4089c6:	test   rdi,rdi
  4089c9:	je     0x408a05
  4089cb:	cmp    DWORD PTR [rsi-0x8],0x0
  4089cf:	jge    0x4089f6
  4089d1:	mov    r13d,DWORD PTR [rsi-0x4]
  4089d5:	mov    ecx,r13d
  4089d8:	call   0x4083b0
  4089dd:	mov    rdi,rax
  4089e0:	mov    rcx,rsi
  4089e3:	mov    rdx,rdi
  4089e6:	mov    r8d,r13d
  4089e9:	add    r8d,r8d
  4089ec:	movsxd r8,r8d
  4089ef:	call   0x405240
  4089f4:	jmp    0x408a05
  4089f6:	lea    rax,[rdi-0x10]
  4089fa:	mov    ecx,0x1
  408a00:	lock xadd DWORD PTR [rax+0x8],ecx
  408a05:	mov    rax,QWORD PTR [rbx]
  408a08:	mov    QWORD PTR [rbp+0x28],rax
  408a0c:	mov    QWORD PTR [rbx],rdi
  408a0f:	lea    rcx,[rbp+0x28]
  408a13:	call   0x4084e0
  408a18:	lea    rsp,[rbp+0x30]
  408a1c:	pop    rbx
  408a1d:	pop    rsi
  408a1e:	pop    rdi
  408a1f:	pop    r13
  408a21:	pop    rbp
  408a22:	ret    
  408a23:	int3   
  408a24:	int3   
  408a25:	int3   
  408a26:	int3   
  408a27:	int3   
  408a28:	int3   
  408a29:	int3   
  408a2a:	int3   
  408a2b:	int3   
  408a2c:	int3   
  408a2d:	int3   
  408a2e:	int3   
  408a2f:	int3   
  408a30:	push   rbp
  408a31:	push   rsi
  408a32:	push   rbx
  408a33:	sub    rsp,0x30
  408a37:	mov    rbp,rsp
  408a3a:	mov    rbx,rcx
  408a3d:	mov    rsi,rdx
  408a40:	test   rsi,rsi
  408a43:	je     0x408a4d
  408a45:	mov    rcx,rsi
  408a48:	call   0x408670
  408a4d:	mov    rax,QWORD PTR [rbx]
  408a50:	mov    QWORD PTR [rbp+0x28],rax
  408a54:	mov    QWORD PTR [rbx],rsi
  408a57:	lea    rcx,[rbp+0x28]
  408a5b:	call   0x4084e0
  408a60:	lea    rsp,[rbp+0x30]
  408a64:	pop    rbx
  408a65:	pop    rsi
  408a66:	pop    rbp
  408a67:	ret    
  408a68:	int3   
  408a69:	int3   
  408a6a:	int3   
  408a6b:	int3   
  408a6c:	int3   
  408a6d:	int3   
  408a6e:	int3   
  408a6f:	int3   
  408a70:	sub    rsp,0x28
  408a74:	mov    r8,rdx
  408a77:	cmp    QWORD PTR [rcx],r8
  408a7a:	je     0x408ab6
  408a7c:	test   r8,r8
  408a7f:	jne    0x408a88
  408a81:	call   0x408580
  408a86:	jmp    0x408ab6
  408a88:	mov    r9d,0x2
  408a8f:	mov    eax,DWORD PTR [r8-0x4]
  408a93:	cdq    
  408a94:	idiv   r9d
  408a97:	test   eax,eax
  408a99:	jne    0x408aa2
  408a9b:	call   0x408580
  408aa0:	jmp    0x408ab6
  408aa2:	mov    rdx,r8
  408aa5:	mov    r8d,eax
  408aa8:	call   0x402b60
  408aad:	test   eax,eax
  408aaf:	jne    0x408ab6
  408ab1:	call   0x408490
  408ab6:	add    rsp,0x28
  408aba:	ret    
  408abb:	int3   
  408abc:	int3   
  408abd:	int3   
  408abe:	int3   
  408abf:	int3   
  408ac0:	push   rbp
  408ac1:	push   rsi
  408ac2:	push   rbx
  408ac3:	sub    rsp,0x30
  408ac7:	mov    rbp,rsp
  408aca:	mov    rbx,rcx
  408acd:	mov    rsi,rdx
  408ad0:	mov    QWORD PTR [rbp+0x28],rsi
  408ad4:	cmp    QWORD PTR [rbp+0x28],0x0
  408ad9:	je     0x408ae4
  408adb:	mov    rcx,QWORD PTR [rbp+0x28]
  408adf:	call   0x408690
  408ae4:	mov    rax,QWORD PTR [rbx]
  408ae7:	mov    QWORD PTR [rbp+0x28],rax
  408aeb:	mov    QWORD PTR [rbx],rsi
  408aee:	lea    rcx,[rbp+0x28]
  408af2:	call   0x408530
  408af7:	lea    rsp,[rbp+0x30]
  408afb:	pop    rbx
  408afc:	pop    rsi
  408afd:	pop    rbp
  408afe:	ret    
  408aff:	int3   
  408b00:	xor    rax,rax
  408b03:	test   rcx,rcx
  408b06:	je     0x408b0b
  408b08:	mov    eax,DWORD PTR [rcx-0x4]
  408b0b:	ret    
  408b0c:	int3   
  408b0d:	int3   
  408b0e:	int3   
  408b0f:	int3   
  408b10:	xor    rax,rax
  408b13:	test   rcx,rcx
  408b16:	je     0x408b1b
  408b18:	mov    eax,DWORD PTR [rcx-0x4]
  408b1b:	ret    
  408b1c:	int3   
  408b1d:	int3   
  408b1e:	int3   
  408b1f:	int3   
  408b20:	xor    rax,rax
  408b23:	test   rcx,rcx
  408b26:	je     0x408b36
  408b28:	jmp    0x408b2d
  408b2a:	add    eax,0x1
  408b2d:	movsxd rdx,eax
  408b30:	cmp    BYTE PTR [rcx+rdx*1],0x0
  408b34:	jne    0x408b2a
  408b36:	ret    
  408b37:	int3   
  408b38:	int3   
  408b39:	int3   
  408b3a:	int3   
  408b3b:	int3   
  408b3c:	int3   
  408b3d:	int3   
  408b3e:	int3   
  408b3f:	int3   
  408b40:	xor    rax,rax
  408b43:	test   rcx,rcx
  408b46:	je     0x408b57
  408b48:	jmp    0x408b4d
  408b4a:	add    eax,0x1
  408b4d:	movsxd rdx,eax
  408b50:	cmp    WORD PTR [rcx+rdx*2],0x0
  408b55:	jne    0x408b4a
  408b57:	ret    
  408b58:	int3   
  408b59:	int3   
  408b5a:	int3   
  408b5b:	int3   
  408b5c:	int3   
  408b5d:	int3   
  408b5e:	int3   
  408b5f:	int3   
  408b60:	push   rdi
  408b61:	push   rsi
  408b62:	push   rbx
  408b63:	sub    rsp,0x20
  408b67:	mov    rbx,rcx
  408b6a:	mov    rsi,QWORD PTR [rbx]
  408b6d:	test   rsi,rsi
  408b70:	je     0x408bb5
  408b72:	mov    rsi,QWORD PTR [rbx]
  408b75:	mov    rax,QWORD PTR [rbx]
  408b78:	lea    rdi,[rax-0x10]
  408b7c:	cmp    DWORD PTR [rdi+0x8],0x1
  408b80:	je     0x408bb5
  408b82:	mov    ecx,DWORD PTR [rdi+0xc]
  408b85:	call   0x4083b0
  408b8a:	mov    rsi,rax
  408b8d:	mov    rcx,QWORD PTR [rbx]
  408b90:	call   0x409260
  408b95:	mov    rcx,rax
  408b98:	mov    rdx,rsi
  408b9b:	mov    r8d,DWORD PTR [rdi+0xc]
  408b9f:	add    r8d,r8d
  408ba2:	movsxd r8,r8d
  408ba5:	call   0x405240
  408baa:	mov    rcx,rbx
  408bad:	call   0x4084e0
  408bb2:	mov    QWORD PTR [rbx],rsi
  408bb5:	mov    rax,rsi
  408bb8:	add    rsp,0x20
  408bbc:	pop    rbx
  408bbd:	pop    rsi
  408bbe:	pop    rdi
  408bbf:	ret    
  408bc0:	push   rdi
  408bc1:	push   rsi
  408bc2:	push   rbx
  408bc3:	sub    rsp,0x20
  408bc7:	mov    rbx,rcx
  408bca:	mov    rsi,QWORD PTR [rbx]
  408bcd:	test   rsi,rsi
  408bd0:	je     0x408c14
  408bd2:	mov    rsi,QWORD PTR [rbx]
  408bd5:	mov    rax,QWORD PTR [rbx]
  408bd8:	lea    rdi,[rax-0x10]
  408bdc:	cmp    DWORD PTR [rdi+0x8],0x1
  408be0:	je     0x408c14
  408be2:	mov    ecx,DWORD PTR [rdi+0xc]
  408be5:	movzx  rdx,WORD PTR [rdi+0x4]
  408bea:	call   0x408410
  408bef:	mov    rsi,rax
  408bf2:	mov    rcx,QWORD PTR [rbx]
  408bf5:	call   0x408d30
  408bfa:	mov    rcx,rax
  408bfd:	mov    rdx,rsi
  408c00:	movsxd r8,DWORD PTR [rdi+0xc]
  408c04:	call   0x405240
  408c09:	mov    rcx,rbx
  408c0c:	call   0x408530
  408c11:	mov    QWORD PTR [rbx],rsi
  408c14:	mov    rax,rsi
  408c17:	add    rsp,0x20
  408c1b:	pop    rbx
  408c1c:	pop    rsi
  408c1d:	pop    rdi
  408c1e:	ret    
  408c1f:	int3   
  408c20:	sub    rsp,0x28
  408c24:	call   0x408b60
  408c29:	add    rsp,0x28
  408c2d:	ret    
  408c2e:	int3   
  408c2f:	int3   
  408c30:	sub    rsp,0x28
  408c34:	call   0x408bc0
  408c39:	add    rsp,0x28
  408c3d:	ret    
  408c3e:	int3   
  408c3f:	int3   
  408c40:	xor    rax,rax
  408c43:	jmp    0x408c77
  408c45:	mov    r9d,DWORD PTR [rcx]
  408c48:	cmp    r9d,DWORD PTR [rdx]
  408c4b:	jne    0x408c7d
  408c4d:	cmp    r8,0x8
  408c51:	jl     0x408c5d
  408c53:	mov    r9d,DWORD PTR [rcx+0x4]
  408c57:	cmp    r9d,DWORD PTR [rdx+0x4]
  408c5b:	je     0x408c6b
  408c5d:	add    rcx,0x4
  408c61:	add    rdx,0x4
  408c65:	sub    r8,0x4
  408c69:	jmp    0x408c7d
  408c6b:	add    rcx,0x8
  408c6f:	add    rdx,0x8
  408c73:	sub    r8,0x8
  408c77:	cmp    r8,0x4
  408c7b:	jge    0x408c45
  408c7d:	nop
  408c7e:	test   r8,r8
  408c81:	je     0x408cd2
  408c83:	movzx  rax,BYTE PTR [rcx]
  408c87:	movzx  r9,BYTE PTR [rdx]
  408c8b:	sub    eax,r9d
  408c8e:	test   eax,eax
  408c90:	jne    0x408cd2
  408c92:	cmp    r8,0x1
  408c96:	je     0x408cd2
  408c98:	movzx  rax,BYTE PTR [rcx+0x1]
  408c9d:	movzx  r9,BYTE PTR [rdx+0x1]
  408ca2:	sub    eax,r9d
  408ca5:	test   eax,eax
  408ca7:	jne    0x408cd2
  408ca9:	cmp    r8,0x2
  408cad:	je     0x408cd2
  408caf:	movzx  rax,BYTE PTR [rcx+0x2]
  408cb4:	movzx  r9,BYTE PTR [rdx+0x2]
  408cb9:	sub    eax,r9d
  408cbc:	test   eax,eax
  408cbe:	jne    0x408cd2
  408cc0:	cmp    r8,0x3
  408cc4:	je     0x408cd2
  408cc6:	movzx  rax,BYTE PTR [rcx+0x3]
  408ccb:	movzx  rcx,BYTE PTR [rdx+0x3]
  408cd0:	sub    eax,ecx
  408cd2:	ret    
  408cd3:	int3   
  408cd4:	int3   
  408cd5:	int3   
  408cd6:	int3   
  408cd7:	int3   
  408cd8:	int3   
  408cd9:	int3   
  408cda:	int3   
  408cdb:	int3   
  408cdc:	int3   
  408cdd:	int3   
  408cde:	int3   
  408cdf:	int3   
  408ce0:	mov    BYTE PTR [rcx],dl
  408ce2:	ret    
  408ce3:	add    ah,ah
  408ce5:	add    al,0x1
  408ce7:	add    bh,bh
  408ce9:	(bad)  
  408cea:	(bad)  
  408ceb:	call   QWORD PTR [rdx]
  408ced:	add    BYTE PTR [rax],al
  408cef:	add    BYTE PTR [rax],al
  408cf1:	add    BYTE PTR [rax],al
  408cf3:	add    bh,bh
  408cf5:	inc    DWORD PTR [rcx]
  408cf7:	add    bh,bh
  408cf9:	(bad)  
  408cfa:	(bad)  
  408cfb:	inc    DWORD PTR [rax]
  408cfd:	add    BYTE PTR [rax],al
  408cff:	add    BYTE PTR [rax],al
  408d01:	add    BYTE PTR [rax],al
  408d03:	add    ah,ah
  408d05:	add    al,0x1
  408d07:	add    bh,bh
  408d09:	(bad)  
  408d0a:	(bad)  
  408d0b:	call   QWORD PTR [rdx]
  408d0d:	add    BYTE PTR [rax],al
  408d0f:	add    BYTE PTR [rax],al
  408d11:	add    BYTE PTR [rax],al
  408d13:	add    bh,bh
  408d15:	inc    DWORD PTR [rdx]
  408d17:	add    bh,bh
  408d19:	(bad)  
  408d1a:	(bad)  
  408d1b:	inc    DWORD PTR [rax]
  408d1d:	add    BYTE PTR [rax],al
  408d1f:	add    BYTE PTR [rax],al
  408d21:	add    BYTE PTR [rax],al
  408d23:	int3   
  408d24:	int3   
  408d25:	int3   
  408d26:	int3   
  408d27:	int3   
  408d28:	int3   
  408d29:	int3   
  408d2a:	int3   
  408d2b:	int3   
  408d2c:	int3   
  408d2d:	int3   
  408d2e:	int3   
  408d2f:	int3   
  408d30:	sub    rsp,0x28
  408d34:	test   rcx,rcx
  408d37:	jne    0x408d4b
  408d39:	mov    rcx,QWORD PTR [rip+0xc800]        # 0x415540
  408d40:	call   0x408d30
  408d45:	lea    rax,[rax+0x10]
  408d49:	jmp    0x408d4e
  408d4b:	mov    rax,rcx
  408d4e:	add    rsp,0x28
  408d52:	ret    
  408d53:	int3   
  408d54:	int3   
  408d55:	int3   
  408d56:	int3   
  408d57:	int3   
  408d58:	int3   
  408d59:	int3   
  408d5a:	int3   
  408d5b:	int3   
  408d5c:	int3   
  408d5d:	int3   
  408d5e:	int3   
  408d5f:	int3   
  408d60:	push   rbp
  408d61:	push   r13
  408d63:	push   rdi
  408d64:	push   rsi
  408d65:	push   rbx
  408d66:	sub    rsp,0x30
  408d6a:	mov    rbp,rsp
  408d6d:	mov    rbx,rcx
  408d70:	mov    esi,edx
  408d72:	test   esi,esi
  408d74:	jg     0x408d83
  408d76:	mov    rcx,rbx
  408d79:	call   0x408530
  408d7e:	jmp    0x408e19
  408d83:	cmp    QWORD PTR [rbx],0x0
  408d87:	je     0x408dd1
  408d89:	mov    rax,QWORD PTR [rbx]
  408d8c:	cmp    DWORD PTR [rax-0x8],0x1
  408d90:	jne    0x408dd1
  408d92:	mov    rax,QWORD PTR [rbx]
  408d95:	lea    rax,[rax-0x10]
  408d99:	mov    QWORD PTR [rbp+0x28],rax
  408d9d:	lea    rcx,[rbp+0x28]
  408da1:	mov    edx,esi
  408da3:	add    edx,0x11
  408da6:	movsxd rdx,edx
  408da9:	call   0x404f10
  408dae:	mov    rax,QWORD PTR [rbp+0x28]
  408db2:	mov    DWORD PTR [rax+0xc],esi
  408db5:	mov    rax,QWORD PTR [rbp+0x28]
  408db9:	lea    rax,[rax+0x10]
  408dbd:	mov    QWORD PTR [rbx],rax
  408dc0:	mov    rcx,QWORD PTR [rbx]
  408dc3:	call   0x408d30
  408dc8:	movsxd rsi,esi
  408dcb:	mov    BYTE PTR [rax+rsi*1],0x0
  408dcf:	jmp    0x408e19
  408dd1:	mov    ecx,esi
  408dd3:	mov    edx,r8d
  408dd6:	call   0x408410
  408ddb:	mov    rdi,rax
  408dde:	cmp    QWORD PTR [rbx],0x0
  408de2:	jne    0x408de9
  408de4:	mov    QWORD PTR [rbx],rdi
  408de7:	jmp    0x408e19
  408de9:	mov    rax,QWORD PTR [rbx]
  408dec:	mov    r13d,DWORD PTR [rax-0x4]
  408df0:	cmp    r13d,esi
  408df3:	jle    0x408df8
  408df5:	mov    r13d,esi
  408df8:	mov    rcx,QWORD PTR [rbx]
  408dfb:	call   0x408d30
  408e00:	mov    rcx,rax
  408e03:	mov    rdx,rdi
  408e06:	movsxd r8,r13d
  408e09:	call   0x405240
  408e0e:	mov    rcx,rbx
  408e11:	call   0x408530
  408e16:	mov    QWORD PTR [rbx],rdi
  408e19:	lea    rsp,[rbp+0x30]
  408e1d:	pop    rbx
  408e1e:	pop    rsi
  408e1f:	pop    rdi
  408e20:	pop    r13
  408e22:	pop    rbp
  408e23:	ret    
  408e24:	int3   
  408e25:	int3   
  408e26:	int3   
  408e27:	int3   
  408e28:	int3   
  408e29:	int3   
  408e2a:	int3   
  408e2b:	int3   
  408e2c:	int3   
  408e2d:	int3   
  408e2e:	int3   
  408e2f:	int3   
  408e30:	sub    rsp,0x28
  408e34:	test   rdx,rdx
  408e37:	jne    0x408e40
  408e39:	call   0x408530
  408e3e:	jmp    0x408e58
  408e40:	mov    rax,rdx
  408e43:	mov    r9d,DWORD PTR [rdx-0x4]
  408e47:	mov    r10d,r8d
  408e4a:	mov    rdx,rax
  408e4d:	mov    r8d,r9d
  408e50:	mov    r9d,r10d
  408e53:	call   0x408900
  408e58:	add    rsp,0x28
  408e5c:	ret    
  408e5d:	int3   
  408e5e:	int3   
  408e5f:	int3   
  408e60:	push   rbp
  408e61:	sub    rsp,0x30
  408e65:	mov    rbp,rsp
  408e68:	mov    rax,rdx
  408e6b:	lock xchg QWORD PTR [rcx],rax
  408e6f:	mov    QWORD PTR [rbp+0x28],rax
  408e73:	cmp    QWORD PTR [rbp+0x28],0x0
  408e78:	je     0x408e83
  408e7a:	lea    rcx,[rbp+0x28]
  408e7e:	call   0x408580
  408e83:	lea    rsp,[rbp+0x30]
  408e87:	pop    rbp
  408e88:	ret    
  408e89:	int3   
  408e8a:	int3   
  408e8b:	int3   
  408e8c:	int3   
  408e8d:	int3   
  408e8e:	int3   
  408e8f:	int3   
  408e90:	push   rsi
  408e91:	push   rbx
  408e92:	sub    rsp,0x28
  408e96:	mov    rbx,rcx
  408e99:	mov    rsi,rdx
  408e9c:	test   rsi,rsi
  408e9f:	jne    0x408eab
  408ea1:	mov    rcx,rbx
  408ea4:	call   0x408580
  408ea9:	jmp    0x408ec1
  408eab:	mov    rcx,rsi
  408eae:	call   0x408b40
  408eb3:	mov    rcx,rbx
  408eb6:	mov    rdx,rsi
  408eb9:	mov    r8d,eax
  408ebc:	call   0x4087e0
  408ec1:	add    rsp,0x28
  408ec5:	pop    rbx
  408ec6:	pop    rsi
  408ec7:	ret    
  408ec8:	int3   
  408ec9:	int3   
  408eca:	int3   
  408ecb:	int3   
  408ecc:	int3   
  408ecd:	int3   
  408ece:	int3   
  408ecf:	int3   
  408ed0:	sub    rsp,0x28
  408ed4:	mov    r9,rdx
  408ed7:	mov    eax,r8d
  408eda:	mov    rdx,r9
  408edd:	jmp    0x408ee6
  408edf:	sub    eax,0x1
  408ee2:	add    rdx,0x2
  408ee6:	test   eax,eax
  408ee8:	jle    0x408ef0
  408eea:	cmp    WORD PTR [rdx],0x0
  408eee:	jne    0x408edf
  408ef0:	mov    rax,r9
  408ef3:	neg    rax
  408ef6:	lea    rax,[rdx+rax*1]
  408efa:	mov    r8d,0x2
  408f01:	cqo    
  408f03:	idiv   r8
  408f06:	mov    rdx,r9
  408f09:	mov    r8d,eax
  408f0c:	call   0x4087e0
  408f11:	add    rsp,0x28
  408f15:	ret    
  408f16:	int3   
  408f17:	int3   
  408f18:	int3   
  408f19:	int3   
  408f1a:	int3   
  408f1b:	int3   
  408f1c:	int3   
  408f1d:	int3   
  408f1e:	int3   
  408f1f:	int3   
  408f20:	test   rcx,rcx
  408f23:	jne    0x408f2e
  408f25:	lea    rax,[rip+0x8]        # 0x408f34
  408f2c:	jmp    0x408f31
  408f2e:	mov    rax,rcx
  408f31:	ret    
  408f32:	add    BYTE PTR [rax],al
  408f34:	add    BYTE PTR [rax],al
  408f36:	int3   
  408f37:	int3   
  408f38:	int3   
  408f39:	int3   
  408f3a:	int3   
  408f3b:	int3   
  408f3c:	int3   
  408f3d:	int3   
  408f3e:	int3   
  408f3f:	int3   
  408f40:	push   r14
  408f42:	push   r13
  408f44:	push   rdi
  408f45:	push   rsi
  408f46:	push   rbx
  408f47:	sub    rsp,0x30
  408f4b:	mov    QWORD PTR [rsp+0x28],rcx
  408f50:	mov    rbx,rdx
  408f53:	mov    rsi,r8
  408f56:	xor    rdi,rdi
  408f59:	test   rbx,rbx
  408f5c:	je     0x408f64
  408f5e:	mov    edi,DWORD PTR [rbx-0x4]
  408f61:	shr    edi,0x1
  408f64:	xor    r13,r13
  408f67:	test   rsi,rsi
  408f6a:	je     0x408f74
  408f6c:	mov    r13d,DWORD PTR [rsi-0x4]
  408f70:	shr    r13d,0x1
  408f74:	test   edi,edi
  408f76:	jne    0x408f7d
  408f78:	test   r13d,r13d
  408f7b:	je     0x408fc5
  408f7d:	mov    ecx,edi
  408f7f:	add    ecx,r13d
  408f82:	call   0x4084b0
  408f87:	mov    r14,rax
  408f8a:	mov    rcx,rbx
  408f8d:	mov    rdx,r14
  408f90:	mov    r8d,edi
  408f93:	add    r8d,r8d
  408f96:	movsxd r8,r8d
  408f99:	call   0x405240
  408f9e:	mov    rcx,rsi
  408fa1:	movsxd rdi,edi
  408fa4:	lea    rdx,[r14+rdi*2]
  408fa8:	mov    r8d,r13d
  408fab:	add    r8d,r8d
  408fae:	movsxd r8,r8d
  408fb1:	call   0x405240
  408fb6:	mov    rcx,QWORD PTR [rsp+0x28]
  408fbb:	mov    rdx,r14
  408fbe:	call   0x408e60
  408fc3:	jmp    0x408fcf
  408fc5:	mov    rcx,QWORD PTR [rsp+0x28]
  408fca:	call   0x408580
  408fcf:	add    rsp,0x30
  408fd3:	pop    rbx
  408fd4:	pop    rsi
  408fd5:	pop    rdi
  408fd6:	pop    r13
  408fd8:	pop    r14
  408fda:	ret    
  408fdb:	int3   
  408fdc:	int3   
  408fdd:	int3   
  408fde:	int3   
  408fdf:	int3   
  408fe0:	push   r14
  408fe2:	push   r13
  408fe4:	push   rdi
  408fe5:	push   rsi
  408fe6:	push   rbx
  408fe7:	sub    rsp,0x40
  408feb:	mov    QWORD PTR [rsp+0x28],rcx
  408ff0:	mov    ebx,edx
  408ff2:	mov    QWORD PTR [rsp+0x30],r8
  408ff7:	xor    r13,r13
  408ffa:	xor    rdi,rdi
  408ffd:	xor    rax,rax
  409000:	mov    esi,ebx
  409002:	sub    esi,0x1
  409005:	cmp    eax,esi
  409007:	mov    DWORD PTR [rsp+0x3c],eax
  40900b:	jg     0x40905d
  40900d:	add    esi,0x1
  409010:	mov    eax,DWORD PTR [rsp+0x3c]
  409014:	movsxd rax,eax
  409017:	mov    rcx,QWORD PTR [rsp+0x30]
  40901c:	mov    r14,QWORD PTR [rcx+rax*8]
  409020:	test   r14,r14
  409023:	je     0x409046
  409025:	mov    rax,QWORD PTR [rsp+0x28]
  40902a:	cmp    r14,QWORD PTR [rax]
  40902d:	jne    0x409039
  40902f:	mov    eax,DWORD PTR [rsp+0x3c]
  409033:	test   eax,eax
  409035:	sete   r13b
  409039:	add    edi,DWORD PTR [r14-0x4]
  40903d:	test   edi,edi
  40903f:	jge    0x409046
  409041:	call   0x4063e0
  409046:	mov    eax,DWORD PTR [rsp+0x3c]
  40904a:	add    eax,0x1
  40904d:	mov    DWORD PTR [rsp+0x3c],eax
  409051:	mov    eax,DWORD PTR [rsp+0x3c]
  409055:	cmp    eax,esi
  409057:	mov    DWORD PTR [rsp+0x3c],eax
  40905b:	jne    0x409010
  40905d:	nop
  40905e:	test   r13b,r13b
  409061:	je     0x40908a
  409063:	mov    rax,QWORD PTR [rsp+0x28]
  409068:	mov    rax,QWORD PTR [rax]
  40906b:	mov    esi,DWORD PTR [rax-0x4]
  40906e:	mov    rcx,QWORD PTR [rsp+0x28]
  409073:	mov    edx,edi
  409075:	call   0x4093b0
  40907a:	mov    rax,QWORD PTR [rsp+0x28]
  40907f:	mov    rdi,QWORD PTR [rax]
  409082:	mov    eax,0x1
  409088:	jmp    0x40909a
  40908a:	mov    ecx,edi
  40908c:	call   0x4083b0
  409091:	mov    rdi,rax
  409094:	xor    rax,rax
  409097:	xor    rsi,rsi
  40909a:	sub    ebx,0x1
  40909d:	cmp    eax,ebx
  40909f:	mov    DWORD PTR [rsp+0x3c],eax
  4090a3:	jg     0x4090f1
  4090a5:	add    ebx,0x1
  4090a8:	mov    eax,DWORD PTR [rsp+0x3c]
  4090ac:	movsxd rax,eax
  4090af:	mov    rcx,QWORD PTR [rsp+0x30]
  4090b4:	mov    r14,QWORD PTR [rcx+rax*8]
  4090b8:	test   r14,r14
  4090bb:	je     0x4090da
  4090bd:	mov    rcx,r14
  4090c0:	movsxd rax,esi
  4090c3:	lea    rdx,[rdi+rax*2]
  4090c7:	mov    r8d,DWORD PTR [r14-0x4]
  4090cb:	add    r8d,r8d
  4090ce:	movsxd r8,r8d
  4090d1:	call   0x405240
  4090d6:	add    esi,DWORD PTR [r14-0x4]
  4090da:	mov    eax,DWORD PTR [rsp+0x3c]
  4090de:	add    eax,0x1
  4090e1:	mov    DWORD PTR [rsp+0x3c],eax
  4090e5:	mov    eax,DWORD PTR [rsp+0x3c]
  4090e9:	cmp    eax,ebx
  4090eb:	mov    DWORD PTR [rsp+0x3c],eax
  4090ef:	jne    0x4090a8
  4090f1:	nop
  4090f2:	test   r13b,r13b
  4090f5:	jne    0x409114
  4090f7:	mov    rax,QWORD PTR [rsp+0x28]
  4090fc:	cmp    QWORD PTR [rax],0x0
  409100:	je     0x40910c
  409102:	mov    rcx,QWORD PTR [rsp+0x28]
  409107:	call   0x4084e0
  40910c:	mov    rax,QWORD PTR [rsp+0x28]
  409111:	mov    QWORD PTR [rax],rdi
  409114:	add    rsp,0x40
  409118:	pop    rbx
  409119:	pop    rsi
  40911a:	pop    rdi
  40911b:	pop    r13
  40911d:	pop    r14
  40911f:	ret    
  409120:	push   r14
  409122:	push   r13
  409124:	push   rdi
  409125:	push   rsi
  409126:	push   rbx
  409127:	sub    rsp,0x20
  40912b:	mov    rbx,rdx
  40912e:	cmp    rcx,rbx
  409131:	jne    0x40913b
  409133:	xor    rax,rax
  409136:	jmp    0x4091e1
  40913b:	test   rcx,rcx
  40913e:	jne    0x409153
  409140:	mov    ecx,0x2
  409146:	mov    eax,DWORD PTR [rbx-0x4]
  409149:	cdq    
  40914a:	idiv   ecx
  40914c:	neg    eax
  40914e:	jmp    0x4091e1
  409153:	test   rbx,rbx
  409156:	jne    0x409168
  409158:	mov    r8d,0x2
  40915f:	mov    eax,DWORD PTR [rcx-0x4]
  409162:	cdq    
  409163:	idiv   r8d
  409166:	jmp    0x4091e1
  409168:	mov    r8d,0x2
  40916f:	mov    eax,DWORD PTR [rcx-0x4]
  409172:	cdq    
  409173:	idiv   r8d
  409176:	mov    rdi,rax
  409179:	mov    r8d,0x2
  409180:	mov    eax,DWORD PTR [rbx-0x4]
  409183:	cdq    
  409184:	idiv   r8d
  409187:	mov    r13,rax
  40918a:	mov    esi,edi
  40918c:	cmp    esi,r13d
  40918f:	jle    0x409194
  409191:	mov    esi,r13d
  409194:	call   0x408f20
  409199:	mov    r14,rax
  40919c:	mov    rcx,rbx
  40919f:	call   0x408f20
  4091a4:	mov    rcx,rax
  4091a7:	test   esi,esi
  4091a9:	jle    0x4091db
  4091ab:	movzx  eax,WORD PTR [r14]
  4091af:	movzx  edx,WORD PTR [rcx]
  4091b2:	sub    eax,edx
  4091b4:	test   eax,eax
  4091b6:	jne    0x4091e1
  4091b8:	cmp    esi,0x1
  4091bb:	je     0x4091db
  4091bd:	movzx  eax,WORD PTR [r14+0x2]
  4091c2:	movzx  edx,WORD PTR [rcx+0x2]
  4091c6:	sub    eax,edx
  4091c8:	test   eax,eax
  4091ca:	jne    0x4091e1
  4091cc:	add    r14,0x4
  4091d0:	add    rcx,0x4
  4091d4:	sub    esi,0x2
  4091d7:	test   esi,esi
  4091d9:	jg     0x4091ab
  4091db:	nop
  4091dc:	mov    eax,edi
  4091de:	sub    eax,r13d
  4091e1:	add    rsp,0x20
  4091e5:	pop    rbx
  4091e6:	pop    rsi
  4091e7:	pop    rdi
  4091e8:	pop    r13
  4091ea:	pop    r14
  4091ec:	ret    
  4091ed:	int3   
  4091ee:	int3   
  4091ef:	int3   
  4091f0:	sub    rsp,0x28
  4091f4:	call   0x409120
  4091f9:	add    rsp,0x28
  4091fd:	ret    
  4091fe:	int3   
  4091ff:	int3   
  409200:	push   rbx
  409201:	sub    rsp,0x20
  409205:	mov    rbx,rcx
  409208:	mov    eax,r8d
  40920b:	xor    rcx,rcx
  40920e:	test   rdx,rdx
  409211:	je     0x409219
  409213:	mov    ecx,DWORD PTR [rdx-0x4]
  409216:	shr    ecx,0x1
  409219:	cmp    eax,0x1
  40921c:	jge    0x409223
  40921e:	xor    rax,rax
  409221:	jmp    0x40922c
  409223:	sub    eax,0x1
  409226:	cmp    eax,ecx
  409228:	jle    0x40922c
  40922a:	mov    eax,ecx
  40922c:	test   r9d,r9d
  40922f:	jge    0x409236
  409231:	xor    rcx,rcx
  409234:	jmp    0x409240
  409236:	sub    ecx,eax
  409238:	cmp    ecx,r9d
  40923b:	jle    0x409240
  40923d:	mov    ecx,r9d
  409240:	mov    r8,rbx
  409243:	movsxd rax,eax
  409246:	lea    rdx,[rdx+rax*2]
  40924a:	mov    eax,ecx
  40924c:	mov    rcx,r8
  40924f:	mov    r8d,eax
  409252:	call   0x4087e0
  409257:	mov    rax,rbx
  40925a:	add    rsp,0x20
  40925e:	pop    rbx
  40925f:	ret    
  409260:	sub    rsp,0x28
  409264:	test   rcx,rcx
  409267:	jne    0x40927b
  409269:	mov    rcx,QWORD PTR [rip+0xc2d8]        # 0x415548
  409270:	call   0x408d30
  409275:	lea    rax,[rax+0x10]
  409279:	jmp    0x40927e
  40927b:	mov    rax,rcx
  40927e:	add    rsp,0x28
  409282:	ret    
  409283:	int3   
  409284:	int3   
  409285:	int3   
  409286:	int3   
  409287:	int3   
  409288:	int3   
  409289:	int3   
  40928a:	int3   
  40928b:	int3   
  40928c:	int3   
  40928d:	int3   
  40928e:	int3   
  40928f:	int3   
  409290:	sub    rsp,0x28
  409294:	mov    WORD PTR [rsp+0x38],dx
  409299:	lea    rdx,[rsp+0x38]
  40929e:	mov    r8d,0x1
  4092a5:	call   0x408780
  4092aa:	add    rsp,0x28
  4092ae:	ret    
  4092af:	int3   
  4092b0:	push   rsi
  4092b1:	push   rbx
  4092b2:	sub    rsp,0x28
  4092b6:	mov    rbx,rcx
  4092b9:	mov    rsi,rdx
  4092bc:	mov    rcx,rsi
  4092bf:	call   0x408b40
  4092c4:	mov    rcx,rbx
  4092c7:	mov    rdx,rsi
  4092ca:	mov    r8d,eax
  4092cd:	call   0x408780
  4092d2:	add    rsp,0x28
  4092d6:	pop    rbx
  4092d7:	pop    rsi
  4092d8:	ret    
  4092d9:	int3   
  4092da:	int3   
  4092db:	int3   
  4092dc:	int3   
  4092dd:	int3   
  4092de:	int3   
  4092df:	int3   
  4092e0:	sub    rsp,0x28
  4092e4:	mov    r9,rdx
  4092e7:	mov    eax,r8d
  4092ea:	mov    rdx,r9
  4092ed:	jmp    0x4092f6
  4092ef:	sub    eax,0x1
  4092f2:	add    rdx,0x2
  4092f6:	test   eax,eax
  4092f8:	jle    0x409300
  4092fa:	cmp    WORD PTR [rdx],0x0
  4092fe:	jne    0x4092ef
  409300:	mov    rax,r9
  409303:	neg    rax
  409306:	lea    rax,[rdx+rax*1]
  40930a:	mov    r8d,0x2
  409311:	cqo    
  409313:	idiv   r8
  409316:	mov    rdx,r9
  409319:	mov    r8d,eax
  40931c:	call   0x408780
  409321:	add    rsp,0x28
  409325:	ret    
  409326:	int3   
  409327:	int3   
  409328:	int3   
  409329:	int3   
  40932a:	int3   
  40932b:	int3   
  40932c:	int3   
  40932d:	int3   
  40932e:	int3   
  40932f:	int3   
  409330:	sub    rsp,0x28
  409334:	test   rdx,rdx
  409337:	jne    0x409340
  409339:	call   0x4084e0
  40933e:	jmp    0x409354
  409340:	mov    rax,rdx
  409343:	mov    r8d,DWORD PTR [rdx-0x4]
  409347:	movzx  r9d,WORD PTR [rdx-0xc]
  40934c:	mov    rdx,rax
  40934f:	call   0x408830
  409354:	add    rsp,0x28
  409358:	ret    
  409359:	int3   
  40935a:	int3   
  40935b:	int3   
  40935c:	int3   
  40935d:	int3   
  40935e:	int3   
  40935f:	int3   
  409360:	sub    rsp,0x28
  409364:	test   rdx,rdx
  409367:	jne    0x409370
  409369:	call   0x408580
  40936e:	jmp    0x40937f
  409370:	mov    rax,rdx
  409373:	mov    r8d,DWORD PTR [rdx-0x4]
  409377:	mov    rdx,rax
  40937a:	call   0x4087e0
  40937f:	add    rsp,0x28
  409383:	ret    
  409384:	int3   
  409385:	int3   
  409386:	int3   
  409387:	int3   
  409388:	int3   
  409389:	int3   
  40938a:	int3   
  40938b:	int3   
  40938c:	int3   
  40938d:	int3   
  40938e:	int3   
  40938f:	int3   
  409390:	sub    rsp,0x28
  409394:	lea    rax,[rdx+0x1]
  409398:	movzx  r8,BYTE PTR [rdx]
  40939c:	mov    r9d,DWORD PTR [rip+0xe5d5]        # 0x417978
  4093a3:	mov    rdx,rax
  4093a6:	call   0x408830
  4093ab:	add    rsp,0x28
  4093af:	ret    
  4093b0:	push   rbp
  4093b1:	push   r13
  4093b3:	push   rdi
  4093b4:	push   rsi
  4093b5:	push   rbx
  4093b6:	sub    rsp,0x30
  4093ba:	mov    rbp,rsp
  4093bd:	mov    rbx,rcx
  4093c0:	mov    esi,edx
  4093c2:	test   esi,esi
  4093c4:	jg     0x4093d3
  4093c6:	mov    rcx,rbx
  4093c9:	call   0x4084e0
  4093ce:	jmp    0x40947b
  4093d3:	cmp    QWORD PTR [rbx],0x0
  4093d7:	je     0x409435
  4093d9:	mov    rax,QWORD PTR [rbx]
  4093dc:	cmp    DWORD PTR [rax-0x8],0x1
  4093e0:	jne    0x409435
  4093e2:	mov    rax,QWORD PTR [rbx]
  4093e5:	lea    rax,[rax-0x10]
  4093e9:	mov    QWORD PTR [rbp+0x28],rax
  4093ed:	cmp    esi,0x7ffffff7
  4093f3:	jb     0x4093fa
  4093f5:	call   0x4063e0
  4093fa:	lea    rcx,[rbp+0x28]
  4093fe:	mov    edx,esi
  409400:	add    edx,0x1
  409403:	add    edx,edx
  409405:	add    edx,0x10
  409408:	movsxd rdx,edx
  40940b:	call   0x404f10
  409410:	mov    rax,QWORD PTR [rbp+0x28]
  409414:	mov    DWORD PTR [rax+0xc],esi
  409417:	mov    rax,QWORD PTR [rbp+0x28]
  40941b:	lea    rax,[rax+0x10]
  40941f:	mov    QWORD PTR [rbx],rax
  409422:	mov    rcx,QWORD PTR [rbx]
  409425:	call   0x409260
  40942a:	movsxd rsi,esi
  40942d:	mov    WORD PTR [rax+rsi*2],0x0
  409433:	jmp    0x40947b
  409435:	mov    ecx,esi
  409437:	call   0x4083b0
  40943c:	mov    rdi,rax
  40943f:	cmp    QWORD PTR [rbx],0x0
  409443:	je     0x409478
  409445:	mov    rax,QWORD PTR [rbx]
  409448:	mov    r13d,DWORD PTR [rax-0x4]
  40944c:	cmp    r13d,esi
  40944f:	jle    0x409454
  409451:	mov    r13d,esi
  409454:	mov    rcx,QWORD PTR [rbx]
  409457:	call   0x409260
  40945c:	mov    rcx,rax
  40945f:	mov    rdx,rdi
  409462:	mov    r8d,r13d
  409465:	add    r8d,r8d
  409468:	movsxd r8,r8d
  40946b:	call   0x405240
  409470:	mov    rcx,rbx
  409473:	call   0x4084e0
  409478:	mov    QWORD PTR [rbx],rdi
  40947b:	lea    rsp,[rbp+0x30]
  40947f:	pop    rbx
  409480:	pop    rsi
  409481:	pop    rdi
  409482:	pop    r13
  409484:	pop    rbp
  409485:	ret    
  409486:	int3   
  409487:	int3   
  409488:	int3   
  409489:	int3   
  40948a:	int3   
  40948b:	int3   
  40948c:	int3   
  40948d:	int3   
  40948e:	int3   
  40948f:	int3   
  409490:	push   r14
  409492:	push   r13
  409494:	push   rdi
  409495:	push   rsi
  409496:	push   rbx
  409497:	sub    rsp,0x30
  40949b:	mov    QWORD PTR [rsp+0x28],rcx
  4094a0:	mov    rbx,rdx
  4094a3:	test   rbx,rbx
  4094a6:	je     0x40954f
  4094ac:	mov    rax,QWORD PTR [rsp+0x28]
  4094b1:	cmp    QWORD PTR [rax],0x0
  4094b5:	jne    0x4094c9
  4094b7:	mov    rcx,QWORD PTR [rsp+0x28]
  4094bc:	mov    rdx,rbx
  4094bf:	call   0x4089b0
  4094c4:	jmp    0x40954f
  4094c9:	mov    rax,QWORD PTR [rsp+0x28]
  4094ce:	mov    rax,QWORD PTR [rax]
  4094d1:	mov    esi,DWORD PTR [rax-0x4]
  4094d4:	mov    edi,DWORD PTR [rbx-0x4]
  4094d7:	mov    r13d,esi
  4094da:	add    r13d,edi
  4094dd:	mov    eax,r13d
  4094e0:	test   eax,0xc0000000
  4094e6:	je     0x4094ed
  4094e8:	call   0x4063e0
  4094ed:	mov    rcx,QWORD PTR [rsp+0x28]
  4094f2:	call   0x408c20
  4094f7:	mov    r14,rax
  4094fa:	mov    rcx,QWORD PTR [rsp+0x28]
  4094ff:	mov    edx,r13d
  409502:	call   0x4093b0
  409507:	mov    rcx,rbx
  40950a:	call   0x409260
  40950f:	cmp    r14,rax
  409512:	jne    0x409523
  409514:	mov    rcx,QWORD PTR [rsp+0x28]
  409519:	call   0x408c20
  40951e:	mov    r14,rax
  409521:	jmp    0x40952e
  409523:	mov    rcx,rbx
  409526:	call   0x409260
  40952b:	mov    r14,rax
  40952e:	mov    rcx,QWORD PTR [rsp+0x28]
  409533:	call   0x408c20
  409538:	mov    rcx,r14
  40953b:	mov    esi,esi
  40953d:	lea    rdx,[rax+rsi*2]
  409541:	mov    r8d,edi
  409544:	add    r8d,r8d
  409547:	mov    r8d,r8d
  40954a:	call   0x405240
  40954f:	add    rsp,0x30
  409553:	pop    rbx
  409554:	pop    rsi
  409555:	pop    rdi
  409556:	pop    r13
  409558:	pop    r14
  40955a:	ret    
  40955b:	int3   
  40955c:	int3   
  40955d:	int3   
  40955e:	int3   
  40955f:	int3   
  409560:	push   r14
  409562:	push   r13
  409564:	push   rdi
  409565:	push   rsi
  409566:	push   rbx
  409567:	sub    rsp,0x30
  40956b:	mov    QWORD PTR [rsp+0x28],rcx
  409570:	mov    rbx,rdx
  409573:	mov    rsi,r8
  409576:	test   rbx,rbx
  409579:	jne    0x40958d
  40957b:	mov    rcx,QWORD PTR [rsp+0x28]
  409580:	mov    rdx,rsi
  409583:	call   0x4089b0
  409588:	jmp    0x409671
  40958d:	test   rsi,rsi
  409590:	jne    0x4095a4
  409592:	mov    rcx,QWORD PTR [rsp+0x28]
  409597:	mov    rdx,rbx
  40959a:	call   0x4089b0
  40959f:	jmp    0x409671
  4095a4:	mov    rax,QWORD PTR [rsp+0x28]
  4095a9:	cmp    QWORD PTR [rax],rbx
  4095ac:	jne    0x4095c0
  4095ae:	mov    rcx,QWORD PTR [rsp+0x28]
  4095b3:	mov    rdx,rsi
  4095b6:	call   0x409490
  4095bb:	jmp    0x409671
  4095c0:	mov    rax,QWORD PTR [rsp+0x28]
  4095c5:	cmp    QWORD PTR [rax],rsi
  4095c8:	jne    0x409657
  4095ce:	mov    r13d,DWORD PTR [rbx-0x4]
  4095d2:	mov    r14d,DWORD PTR [rsi-0x4]
  4095d6:	mov    edi,r13d
  4095d9:	add    edi,r14d
  4095dc:	mov    eax,r13d
  4095df:	and    eax,r14d
  4095e2:	mov    ecx,edi
  4095e4:	not    ecx
  4095e6:	mov    edx,r13d
  4095e9:	or     edx,r14d
  4095ec:	and    ecx,edx
  4095ee:	or     eax,ecx
  4095f0:	test   eax,0x80000000
  4095f6:	je     0x4095fd
  4095f8:	call   0x4063e0
  4095fd:	mov    ecx,edi
  4095ff:	call   0x4083b0
  409604:	mov    rdi,rax
  409607:	mov    rcx,rbx
  40960a:	call   0x409260
  40960f:	mov    rcx,rax
  409612:	mov    rdx,rdi
  409615:	mov    r8d,r13d
  409618:	add    r8d,r8d
  40961b:	mov    r8d,r8d
  40961e:	call   0x405240
  409623:	mov    rcx,rsi
  409626:	call   0x409260
  40962b:	mov    rcx,rax
  40962e:	mov    r13d,r13d
  409631:	lea    rdx,[rdi+r13*2]
  409635:	mov    r8d,r14d
  409638:	add    r8d,r8d
  40963b:	mov    r8d,r8d
  40963e:	call   0x405240
  409643:	mov    rcx,QWORD PTR [rsp+0x28]
  409648:	call   0x4084e0
  40964d:	mov    rax,QWORD PTR [rsp+0x28]
  409652:	mov    QWORD PTR [rax],rdi
  409655:	jmp    0x409671
  409657:	mov    rcx,QWORD PTR [rsp+0x28]
  40965c:	mov    rdx,rbx
  40965f:	call   0x4089b0
  409664:	mov    rcx,QWORD PTR [rsp+0x28]
  409669:	mov    rdx,rsi
  40966c:	call   0x409490
  409671:	add    rsp,0x30
  409675:	pop    rbx
  409676:	pop    rsi
  409677:	pop    rdi
  409678:	pop    r13
  40967a:	pop    r14
  40967c:	ret    
  40967d:	int3   
  40967e:	int3   
  40967f:	int3   
  409680:	push   rbp
  409681:	push   rbx
  409682:	sub    rsp,0x28
  409686:	mov    rbp,rsp
  409689:	mov    QWORD PTR [rbp+0x50],r8
  40968d:	mov    QWORD PTR [rbp+0x58],r9
  409691:	mov    QWORD PTR [rbp+0x40],rcx
  409695:	mov    DWORD PTR [rbp+0x48],edx
  409698:	lea    rbx,[rbp+0x50]
  40969c:	mov    rcx,QWORD PTR [rbp+0x40]
  4096a0:	mov    edx,DWORD PTR [rbp+0x48]
  4096a3:	mov    r8,rbx
  4096a6:	call   0x408fe0
  4096ab:	lea    rsp,[rbp+0x28]
  4096af:	pop    rbx
  4096b0:	pop    rbp
  4096b1:	ret    
  4096b2:	int3   
  4096b3:	int3   
  4096b4:	int3   
  4096b5:	int3   
  4096b6:	int3   
  4096b7:	int3   
  4096b8:	int3   
  4096b9:	int3   
  4096ba:	int3   
  4096bb:	int3   
  4096bc:	int3   
  4096bd:	int3   
  4096be:	int3   
  4096bf:	int3   
  4096c0:	push   r14
  4096c2:	push   r13
  4096c4:	push   rdi
  4096c5:	push   rsi
  4096c6:	push   rbx
  4096c7:	sub    rsp,0x20
  4096cb:	mov    rbx,rdx
  4096ce:	cmp    rcx,rbx
  4096d1:	jne    0x4096d8
  4096d3:	xor    rax,rax
  4096d6:	jmp    0x40974c
  4096d8:	test   rcx,rcx
  4096db:	jne    0x4096e4
  4096dd:	mov    eax,DWORD PTR [rbx-0x4]
  4096e0:	neg    eax
  4096e2:	jmp    0x40974c
  4096e4:	test   rbx,rbx
  4096e7:	jne    0x4096ee
  4096e9:	mov    eax,DWORD PTR [rcx-0x4]
  4096ec:	jmp    0x40974c
  4096ee:	mov    edi,DWORD PTR [rcx-0x4]
  4096f1:	mov    r13d,DWORD PTR [rbx-0x4]
  4096f5:	mov    esi,edi
  4096f7:	cmp    esi,r13d
  4096fa:	jle    0x4096ff
  4096fc:	mov    esi,r13d
  4096ff:	call   0x409260
  409704:	mov    r14,rax
  409707:	mov    rcx,rbx
  40970a:	call   0x409260
  40970f:	mov    rcx,rax
  409712:	test   esi,esi
  409714:	jle    0x409746
  409716:	movzx  eax,WORD PTR [r14]
  40971a:	movzx  edx,WORD PTR [rcx]
  40971d:	sub    eax,edx
  40971f:	test   eax,eax
  409721:	jne    0x40974c
  409723:	cmp    esi,0x1
  409726:	je     0x409746
  409728:	movzx  eax,WORD PTR [r14+0x2]
  40972d:	movzx  edx,WORD PTR [rcx+0x2]
  409731:	sub    eax,edx
  409733:	test   eax,eax
  409735:	jne    0x40974c
  409737:	add    r14,0x4
  40973b:	add    rcx,0x4
  40973f:	sub    esi,0x2
  409742:	test   esi,esi
  409744:	jg     0x409716
  409746:	nop
  409747:	mov    eax,edi
  409749:	sub    eax,r13d
  40974c:	add    rsp,0x20
  409750:	pop    rbx
  409751:	pop    rsi
  409752:	pop    rdi
  409753:	pop    r13
  409755:	pop    r14
  409757:	ret    
  409758:	int3   
  409759:	int3   
  40975a:	int3   
  40975b:	int3   
  40975c:	int3   
  40975d:	int3   
  40975e:	int3   
  40975f:	int3   
  409760:	sub    rsp,0x28
  409764:	call   0x4096c0
  409769:	add    rsp,0x28
  40976d:	ret    
  40976e:	int3   
  40976f:	int3   
  409770:	push   rbx
  409771:	sub    rsp,0x20
  409775:	mov    rbx,rcx
  409778:	mov    eax,r8d
  40977b:	xor    rcx,rcx
  40977e:	test   rdx,rdx
  409781:	je     0x409786
  409783:	mov    ecx,DWORD PTR [rdx-0x4]
  409786:	cmp    eax,0x1
  409789:	jge    0x409790
  40978b:	xor    rax,rax
  40978e:	jmp    0x409799
  409790:	sub    eax,0x1
  409793:	cmp    eax,ecx
  409795:	jle    0x409799
  409797:	mov    eax,ecx
  409799:	test   r9d,r9d
  40979c:	jge    0x4097a3
  40979e:	xor    rcx,rcx
  4097a1:	jmp    0x4097ad
  4097a3:	sub    ecx,eax
  4097a5:	cmp    ecx,r9d
  4097a8:	jle    0x4097ad
  4097aa:	mov    ecx,r9d
  4097ad:	mov    r8,rbx
  4097b0:	movsxd rax,eax
  4097b3:	lea    rdx,[rdx+rax*2]
  4097b7:	mov    eax,ecx
  4097b9:	mov    rcx,r8
  4097bc:	mov    r8d,eax
  4097bf:	call   0x408780
  4097c4:	mov    rax,rbx
  4097c7:	add    rsp,0x20
  4097cb:	pop    rbx
  4097cc:	ret    
  4097cd:	int3   
  4097ce:	int3   
  4097cf:	int3   
  4097d0:	push   rdi
  4097d1:	push   rsi
  4097d2:	push   rbx
  4097d3:	mov    r10,rcx
  4097d6:	mov    r11,rdx
  4097d9:	test   r10,r10
  4097dc:	je     0x4097e9
  4097de:	test   r11,r11
  4097e1:	je     0x4097e9
  4097e3:	cmp    r8d,0x1
  4097e7:	jge    0x4097f1
  4097e9:	xor    rax,rax
  4097ec:	jmp    0x40987c
  4097f1:	mov    r9d,DWORD PTR [rcx-0x4]
  4097f5:	mov    ecx,DWORD PTR [rdx-0x4]
  4097f8:	sub    ecx,r8d
  4097fb:	sub    ecx,r9d
  4097fe:	add    ecx,0x2
  409801:	test   r9d,r9d
  409804:	jle    0x409879
  409806:	test   ecx,ecx
  409808:	jle    0x409879
  40980a:	mov    eax,r8d
  40980d:	sub    eax,0x1
  409810:	movsxd rax,eax
  409813:	add    rax,rax
  409816:	add    r11,rax
  409819:	xor    rax,rax
  40981c:	movzx  rbx,WORD PTR [r10]
  409820:	cmp    r9d,0x1
  409824:	jne    0x40983e
  409826:	movsxd rdx,eax
  409829:	cmp    WORD PTR [r11+rdx*2],bx
  40982e:	jne    0x409835
  409830:	add    eax,r8d
  409833:	jmp    0x40987c
  409835:	add    eax,0x1
  409838:	cmp    eax,ecx
  40983a:	jne    0x409826
  40983c:	jmp    0x409879
  40983e:	movsxd rdx,eax
  409841:	cmp    WORD PTR [r11+rdx*2],bx
  409846:	jne    0x409872
  409848:	mov    edx,0x1
  40984e:	mov    esi,eax
  409850:	add    esi,edx
  409852:	movsxd rsi,esi
  409855:	movsxd rdi,edx
  409858:	movzx  rsi,WORD PTR [r11+rsi*2]
  40985d:	cmp    si,WORD PTR [r10+rdi*2]
  409862:	jne    0x409871
  409864:	add    edx,0x1
  409867:	cmp    edx,r9d
  40986a:	jne    0x40984e
  40986c:	add    eax,r8d
  40986f:	jmp    0x40987c
  409871:	nop
  409872:	add    eax,0x1
  409875:	cmp    eax,ecx
  409877:	jne    0x40983e
  409879:	xor    rax,rax
  40987c:	pop    rbx
  40987d:	pop    rsi
  40987e:	pop    rdi
  40987f:	ret    
  409880:	push   r14
  409882:	push   r13
  409884:	push   rdi
  409885:	push   rsi
  409886:	push   rbx
  409887:	sub    rsp,0x20
  40988b:	mov    rbx,rcx
  40988e:	movzx  rax,BYTE PTR [rdx+0x1]
  409893:	lea    rsi,[rdx+rax*1]
  409897:	cmp    DWORD PTR [rsi+0x6],0x0
  40989b:	jbe    0x409933
  4098a1:	xor    r13,r13
  4098a4:	xor    rdi,rdi
  4098a7:	mov    r14d,DWORD PTR [rsi+0x6]
  4098ab:	sub    r14d,0x1
  4098af:	cmp    edi,r14d
  4098b2:	ja     0x409932
  4098b4:	add    r14d,0x1
  4098b8:	mov    eax,edi
  4098ba:	add    rax,rax
  4098bd:	cmp    QWORD PTR [rsi+rax*8+0xa],0x0
  4098c3:	jne    0x4098ca
  4098c5:	mov    r13b,0x1
  4098c8:	jmp    0x40992a
  4098ca:	test   r13b,r13b
  4098cd:	jne    0x4098f7
  4098cf:	mov    eax,edi
  4098d1:	add    rax,rax
  4098d4:	mov    eax,DWORD PTR [rsi+rax*8+0x12]
  4098d8:	lea    rcx,[rbx+rax*1]
  4098dc:	mov    eax,edi
  4098de:	add    rax,rax
  4098e1:	mov    rax,QWORD PTR [rsi+rax*8+0xa]
  4098e6:	mov    rdx,QWORD PTR [rax]
  4098e9:	mov    r8d,0x1
  4098f0:	call   0x409980
  4098f5:	jmp    0x40992a
  4098f7:	mov    eax,edi
  4098f9:	add    rax,rax
  4098fc:	mov    rax,QWORD PTR [rsi+rax*8+0xa]
  409901:	mov    rax,QWORD PTR [rax]
  409904:	movzx  rax,BYTE PTR [rax]
  409908:	sub    al,0xf
  40990b:	test   al,al
  40990d:	jne    0x409923
  40990f:	mov    eax,edi
  409911:	add    rax,rax
  409914:	mov    eax,DWORD PTR [rsi+rax*8+0x12]
  409918:	lea    rcx,[rbx+rax*1]
  40991c:	call   0x40b000
  409921:	jmp    0x40992a
  409923:	mov    cl,0x2
  409925:	call   0x4051d0
  40992a:	add    edi,0x1
  40992d:	cmp    edi,r14d
  409930:	jne    0x4098b8
  409932:	nop
  409933:	mov    rax,rbx
  409936:	add    rsp,0x20
  40993a:	pop    rbx
  40993b:	pop    rsi
  40993c:	pop    rdi
  40993d:	pop    r13
  40993f:	pop    r14
  409941:	ret    
  409942:	int3   
  409943:	int3   
  409944:	int3   
  409945:	int3   
  409946:	int3   
  409947:	int3   
  409948:	int3   
  409949:	int3   
  40994a:	int3   
  40994b:	int3   
  40994c:	int3   
  40994d:	int3   
  40994e:	int3   
  40994f:	int3   
  409950:	sub    rsp,0x28
  409954:	cmp    QWORD PTR [rip+0xa6bc],0x0        # 0x414018
  40995c:	je     0x409966
  40995e:	call   QWORD PTR [rip+0xa6b4]        # 0x414018
  409964:	jmp    0x40996d
  409966:	mov    cl,0x10
  409968:	call   0x4051d0
  40996d:	add    rsp,0x28
  409971:	ret    
  409972:	int3   
  409973:	int3   
  409974:	int3   
  409975:	int3   
  409976:	int3   
  409977:	int3   
  409978:	int3   
  409979:	int3   
  40997a:	int3   
  40997b:	int3   
  40997c:	int3   
  40997d:	int3   
  40997e:	int3   
  40997f:	int3   
  409980:	push   r14
  409982:	push   r13
  409984:	push   rdi
  409985:	push   rsi
  409986:	push   rbx
  409987:	sub    rsp,0x20
  40998b:	mov    rbx,rcx
  40998e:	mov    rsi,rdx
  409991:	mov    rdi,r8
  409994:	mov    r13,rbx
  409997:	test   rdi,rdi
  40999a:	je     0x409ade
  4099a0:	movzx  rax,BYTE PTR [rsi]
  4099a4:	cmp    rax,0xe
  4099a8:	jg     0x4099de
  4099aa:	cmp    rax,0xe
  4099ae:	je     0x409a7e
  4099b4:	sub    rax,0xa
  4099b8:	test   rax,rax
  4099bb:	je     0x409a07
  4099bd:	sub    rax,0x1
  4099c1:	test   rax,rax
  4099c4:	je     0x409a16
  4099c6:	sub    rax,0x1
  4099ca:	test   rax,rax
  4099cd:	je     0x409a44
  4099cf:	sub    rax,0x1
  4099d3:	test   rax,rax
  4099d6:	jne    0x409ad7
  4099dc:	jmp    0x409a4e
  4099de:	sub    rax,0xf
  4099e2:	test   rax,rax
  4099e5:	je     0x409ab6
  4099eb:	sub    rax,0x2
  4099ef:	test   rax,rax
  4099f2:	je     0x409ad0
  4099f8:	sub    rax,0x1
  4099fc:	test   rax,rax
  4099ff:	jne    0x409ad7
  409a05:	jmp    0x409a25
  409a07:	mov    rcx,rbx
  409a0a:	mov    edx,edi
  409a0c:	call   0x4085f0
  409a11:	jmp    0x409ade
  409a16:	mov    rcx,rbx
  409a19:	mov    edx,edi
  409a1b:	call   0x408620
  409a20:	jmp    0x409ade
  409a25:	mov    rcx,rbx
  409a28:	mov    edx,edi
  409a2a:	call   0x4085c0
  409a2f:	jmp    0x409ade
  409a34:	mov    rcx,rbx
  409a37:	call   0x409950
  409a3c:	add    rbx,0x18
  409a40:	sub    rdi,0x1
  409a44:	test   rdi,rdi
  409a47:	ja     0x409a34
  409a49:	jmp    0x409ade
  409a4e:	movzx  rax,BYTE PTR [rsi+0x1]
  409a53:	lea    r14,[rsi+rax*1]
  409a57:	jmp    0x409a77
  409a59:	mov    rcx,rbx
  409a5c:	mov    rax,QWORD PTR [r14+0xa]
  409a60:	mov    rdx,QWORD PTR [rax]
  409a63:	mov    r8d,DWORD PTR [r14+0x6]
  409a67:	call   0x409980
  409a6c:	mov    eax,DWORD PTR [r14+0x2]
  409a70:	add    rbx,rax
  409a73:	sub    rdi,0x1
  409a77:	test   rdi,rdi
  409a7a:	ja     0x409a59
  409a7c:	jmp    0x409ade
  409a7e:	movzx  rax,BYTE PTR [rsi+0x1]
  409a83:	lea    r14,[rsi+rax*1]
  409a87:	jmp    0x409a9f
  409a89:	mov    rcx,rbx
  409a8c:	mov    rdx,rsi
  409a8f:	call   0x409880
  409a94:	mov    eax,DWORD PTR [r14+0x2]
  409a98:	add    rbx,rax
  409a9b:	sub    rdi,0x1
  409a9f:	test   rdi,rdi
  409aa2:	ja     0x409a89
  409aa4:	jmp    0x409ade
  409aa6:	mov    rcx,rbx
  409aa9:	call   0x409ff0
  409aae:	add    rbx,0x8
  409ab2:	sub    rdi,0x1
  409ab6:	test   rdi,rdi
  409ab9:	ja     0x409aa6
  409abb:	jmp    0x409ade
  409abd:	mov    rcx,rbx
  409ac0:	mov    rdx,rsi
  409ac3:	call   0x409cb0
  409ac8:	add    rbx,0x8
  409acc:	sub    rdi,0x1
  409ad0:	test   rdi,rdi
  409ad3:	ja     0x409abd
  409ad5:	jmp    0x409ade
  409ad7:	mov    cl,0x2
  409ad9:	call   0x4051d0
  409ade:	mov    rax,r13
  409ae1:	add    rsp,0x20
  409ae5:	pop    rbx
  409ae6:	pop    rsi
  409ae7:	pop    rdi
  409ae8:	pop    r13
  409aea:	pop    r14
  409aec:	ret    
  409aed:	int3   
  409aee:	int3   
  409aef:	int3   
  409af0:	sub    rsp,0x28
  409af4:	mov    r8d,0x1
  409afb:	call   0x409980
  409b00:	add    rsp,0x28
  409b04:	ret    
  409b05:	int3   
  409b06:	int3   
  409b07:	int3   
  409b08:	int3   
  409b09:	int3   
  409b0a:	int3   
  409b0b:	int3   
  409b0c:	int3   
  409b0d:	int3   
  409b0e:	int3   
  409b0f:	int3   
  409b10:	push   rbx
  409b11:	sub    rsp,0x20
  409b15:	mov    rbx,rcx
  409b18:	mov    rcx,rbx
  409b1b:	call   0x409af0
  409b20:	mov    rcx,rbx
  409b23:	call   0x404ee0
  409b28:	add    rsp,0x20
  409b2c:	pop    rbx
  409b2d:	ret    
  409b2e:	int3   
  409b2f:	int3   
  409b30:	push   rbx
  409b31:	sub    rsp,0x20
  409b35:	mov    rbx,rcx
  409b38:	mov    rcx,rdx
  409b3b:	mov    rdx,rbx
  409b3e:	call   0x409b50
  409b43:	mov    rax,rbx
  409b46:	add    rsp,0x20
  409b4a:	pop    rbx
  409b4b:	ret    
  409b4c:	int3   
  409b4d:	int3   
  409b4e:	int3   
  409b4f:	int3   
  409b50:	sub    rsp,0x28
  409b54:	mov    rax,rcx
  409b57:	mov    rcx,rdx
  409b5a:	mov    rdx,rax
  409b5d:	call   0x4092b0
  409b62:	add    rsp,0x28
  409b66:	ret    
  409b67:	int3   
  409b68:	int3   
  409b69:	int3   
  409b6a:	int3   
  409b6b:	int3   
  409b6c:	int3   
  409b6d:	int3   
  409b6e:	int3   
  409b6f:	int3   
  409b70:	push   rbp
  409b71:	sub    rsp,0x20
  409b75:	mov    rbp,rsp
  409b78:	mov    cl,0x11
  409b7a:	mov    rdx,QWORD PTR [rbp+0x28]
  409b7e:	call   0x405170
  409b83:	lea    rsp,[rbp+0x20]
  409b87:	pop    rbp
  409b88:	ret    
  409b89:	int3   
  409b8a:	int3   
  409b8b:	int3   
  409b8c:	int3   
  409b8d:	int3   
  409b8e:	int3   
  409b8f:	int3   
  409b90:	push   rbp
  409b91:	push   rsi
  409b92:	push   rbx
  409b93:	sub    rsp,0x60
  409b97:	mov    rbp,rsp
  409b9a:	mov    rbx,rcx
  409b9d:	mov    rcx,rdx
  409ba0:	xor    r10,r10
  409ba3:	movsxd r11,r10d
  409ba6:	mov    esi,0xa
  409bac:	mov    rax,rcx
  409baf:	xor    edx,edx
  409bb1:	div    rsi
  409bb4:	lea    rax,[rdx+0x30]
  409bb8:	mov    WORD PTR [rbp+r11*2+0x20],ax
  409bbe:	add    r10d,0x1
  409bc2:	mov    r11d,0xa
  409bc9:	mov    rax,rcx
  409bcc:	xor    edx,edx
  409bce:	div    r11
  409bd1:	mov    rcx,rax
  409bd4:	test   rcx,rcx
  409bd7:	jne    0x409ba3
  409bd9:	test   r9b,r9b
  409bdc:	je     0x409bec
  409bde:	movsxd rax,r10d
  409be1:	mov    WORD PTR [rbp+rax*2+0x20],0x2d
  409be8:	add    r10d,0x1
  409bec:	cmp    r8d,0xff
  409bf3:	jle    0x409bfc
  409bf5:	mov    r8d,0xff
  409bfc:	mov    eax,0x1
  409c02:	mov    ecx,r8d
  409c05:	sub    ecx,r10d
  409c08:	cmp    eax,ecx
  409c0a:	jg     0x409c1a
  409c0c:	movsxd rdx,eax
  409c0f:	mov    BYTE PTR [rbx+rdx*1],0x20
  409c13:	add    eax,0x1
  409c16:	cmp    eax,ecx
  409c18:	jle    0x409c0c
  409c1a:	nop
  409c1b:	test   r10d,r10d
  409c1e:	jle    0x409c3b
  409c20:	sub    r10d,0x1
  409c24:	movsxd rcx,eax
  409c27:	movsxd rdx,r10d
  409c2a:	movzx  rdx,BYTE PTR [rbp+rdx*2+0x20]
  409c30:	mov    BYTE PTR [rbx+rcx*1],dl
  409c33:	add    eax,0x1
  409c36:	test   r10d,r10d
  409c39:	jg     0x409c20
  409c3b:	nop
  409c3c:	mov    rcx,rbx
  409c3f:	mov    edx,eax
  409c41:	sub    edx,0x1
  409c44:	call   0x408ce0
  409c49:	mov    rax,rbx
  409c4c:	lea    rsp,[rbp+0x60]
  409c50:	pop    rbx
  409c51:	pop    rsi
  409c52:	pop    rbp
  409c53:	ret    
  409c54:	int3   
  409c55:	int3   
  409c56:	int3   
  409c57:	int3   
  409c58:	int3   
  409c59:	int3   
  409c5a:	int3   
  409c5b:	int3   
  409c5c:	int3   
  409c5d:	int3   
  409c5e:	int3   
  409c5f:	int3   
  409c60:	push   rbx
  409c61:	sub    rsp,0x20
  409c65:	mov    rbx,rcx
  409c68:	mov    rax,rdx
  409c6b:	test   rax,rax
  409c6e:	jge    0x409c73
  409c70:	neg    rax
  409c73:	mov    rcx,rbx
  409c76:	test   rdx,rdx
  409c79:	setl   r9b
  409c7d:	mov    rdx,rax
  409c80:	call   0x409b90
  409c85:	mov    rax,rbx
  409c88:	add    rsp,0x20
  409c8c:	pop    rbx
  409c8d:	ret    
  409c8e:	int3   
  409c8f:	int3   
  409c90:	push   rbx
  409c91:	sub    rsp,0x20
  409c95:	mov    rbx,rcx
  409c98:	mov    rcx,rbx
  409c9b:	xor    r8,r8
  409c9e:	call   0x409c60
  409ca3:	mov    rax,rbx
  409ca6:	add    rsp,0x20
  409caa:	pop    rbx
  409cab:	ret    
  409cac:	int3   
  409cad:	int3   
  409cae:	int3   
  409caf:	int3   
  409cb0:	push   rsi
  409cb1:	push   rbx
  409cb2:	sub    rsp,0x28
  409cb6:	mov    rbx,rcx
  409cb9:	mov    rax,rdx
  409cbc:	mov    rsi,QWORD PTR [rbx]
  409cbf:	test   rsi,rsi
  409cc2:	je     0x409d1d
  409cc4:	mov    QWORD PTR [rbx],0x0
  409ccb:	cmp    DWORD PTR [rsi-0xc],0x0
  409ccf:	jle    0x409d1d
  409cd1:	or     edx,0xffffffff
  409cd4:	mov    ecx,edx
  409cd6:	lock xadd DWORD PTR [rsi-0xc],edx
  409cdb:	add    ecx,edx
  409cdd:	test   ecx,ecx
  409cdf:	jne    0x409d1d
  409ce1:	movzx  rcx,BYTE PTR [rax+0x1]
  409ce6:	add    rax,rcx
  409ce9:	cmp    QWORD PTR [rax+0x6],0x0
  409cee:	je     0x409d11
  409cf0:	mov    rcx,QWORD PTR [rsi-0x8]
  409cf4:	test   rcx,rcx
  409cf7:	je     0x409d11
  409cf9:	mov    rax,QWORD PTR [rax+0x6]
  409cfd:	mov    rax,QWORD PTR [rax]
  409d00:	mov    rdx,rsi
  409d03:	mov    r8,rcx
  409d06:	mov    rcx,rdx
  409d09:	mov    rdx,rax
  409d0c:	call   0x409980
  409d11:	sub    rsi,0x10
  409d15:	mov    rcx,rsi
  409d18:	call   0x404ee0
  409d1d:	mov    rax,rbx
  409d20:	add    rsp,0x28
  409d24:	pop    rbx
  409d25:	pop    rsi
  409d26:	ret    
  409d27:	int3   
  409d28:	int3   
  409d29:	int3   
  409d2a:	int3   
  409d2b:	int3   
  409d2c:	int3   
  409d2d:	int3   
  409d2e:	int3   
  409d2f:	int3   
  409d30:	sub    rsp,0x28
  409d34:	lea    rcx,[rip+0x12105]        # 0x41be40
  409d3b:	call   0x402920
  409d40:	mov    WORD PTR [rip+0x1211f],0x7f        # 0x41be68
  409d49:	call   0x402b10
  409d4e:	and    eax,0xff
  409d54:	cmp    eax,0x6
  409d57:	setae  al
  409d5a:	mov    BYTE PTR [rip+0x120d8],al        # 0x41be38
  409d60:	cmp    BYTE PTR [rip+0x120d1],0x0        # 0x41be38
  409d67:	je     0x409dcf
  409d69:	lea    rcx,[rip+0x64]        # 0x409dd4
  409d70:	call   0x4029f0
  409d75:	mov    rcx,rax
  409d78:	lea    rdx,[rip+0x6f]        # 0x409dee
  409d7f:	call   0x402a00
  409d84:	mov    QWORD PTR [rip+0x12095],rax        # 0x41be20
  409d8b:	lea    rcx,[rip+0x42]        # 0x409dd4
  409d92:	call   0x4029f0
  409d97:	mov    rcx,rax
  409d9a:	lea    rdx,[rip+0x6b]        # 0x409e0c
  409da1:	call   0x402a00
  409da6:	mov    QWORD PTR [rip+0x1207b],rax        # 0x41be28
  409dad:	lea    rcx,[rip+0x20]        # 0x409dd4
  409db4:	call   0x4029f0
  409db9:	mov    rcx,rax
  409dbc:	lea    rdx,[rip+0x67]        # 0x409e2a
  409dc3:	call   0x402a00
  409dc8:	mov    QWORD PTR [rip+0x12061],rax        # 0x41be30
  409dcf:	add    rsp,0x28
  409dd3:	ret    
  409dd4:	imul   eax,DWORD PTR [rax],0x65
  409dd7:	add    BYTE PTR [rdx+0x0],dh
  409dda:	outs   dx,BYTE PTR ds:[rsi]
  409ddb:	add    BYTE PTR [rbp+0x0],ah
  409dde:	ins    BYTE PTR es:[rdi],dx
  409ddf:	add    BYTE PTR [rbx],dh
  409de1:	add    BYTE PTR [rdx],dh
  409de3:	add    BYTE PTR [rsi],ch
  409de5:	add    BYTE PTR [rax+rax*1+0x6c],ah
  409de9:	add    BYTE PTR [rax+rax*1+0x0],ch
  409ded:	add    BYTE PTR [rdi+0x65],al
  409df0:	je     0x409e46
  409df2:	push   0x64616572
  409df7:	push   rax
  409df8:	jb     0x409e5f
  409dfa:	data16 gs jb 0x409e70
  409dfe:	gs fs push rbp
  409e01:	rex.WB
  409e02:	rex.WR (bad) 
  409e04:	outs   dx,BYTE PTR ds:[rsi]
  409e05:	addr32 jne 0x409e69
  409e08:	addr32 gs jae 0x409e0c
  409e0c:	push   rbx
  409e0d:	gs je  0x409e64
  409e10:	push   0x64616572
  409e15:	push   rax
  409e16:	jb     0x409e7d
  409e18:	data16 gs jb 0x409e8e
  409e1c:	gs fs push rbp
  409e1f:	rex.WB
  409e20:	rex.WR (bad) 
  409e22:	outs   dx,BYTE PTR ds:[rsi]
  409e23:	addr32 jne 0x409e87
  409e26:	addr32 gs jae 0x409e2a
  409e2a:	rex.RXB
  409e2b:	gs je  0x409e82
  409e2e:	push   0x64616572
  409e33:	push   rbp
  409e34:	rex.WB
  409e35:	rex.WR (bad) 
  409e37:	outs   dx,BYTE PTR ds:[rsi]
  409e38:	addr32 jne 0x409e9c
  409e3b:	addr32 gs add ah,cl
  409e3f:	int3   
  409e40:	sub    rsp,0x28
  409e44:	lea    rcx,[rip+0x11ff5]        # 0x41be40
  409e4b:	call   0x402930
  409e50:	add    rsp,0x28
  409e54:	ret    
  409e55:	int3   
  409e56:	int3   
  409e57:	int3   
  409e58:	int3   
  409e59:	int3   
  409e5a:	int3   
  409e5b:	int3   
  409e5c:	int3   
  409e5d:	int3   
  409e5e:	int3   
  409e5f:	int3   
  409e60:	push   rbp
  409e61:	push   rbx
  409e62:	sub    rsp,0x48
  409e66:	mov    rbp,rsp
  409e69:	mov    QWORD PTR [rbp+0x28],rbp
  409e6d:	mov    QWORD PTR [rbp+0x60],rcx
  409e71:	mov    rax,QWORD PTR [rip+0xa1c0]        # 0x414038
  409e78:	mov    QWORD PTR [rbp+0x38],rax
  409e7c:	cmp    QWORD PTR [rbp+0x38],0x0
  409e81:	je     0x409eab
  409e83:	nop
  409e84:	mov    rcx,QWORD PTR [rbp+0x60]
  409e88:	mov    rbx,QWORD PTR [rbp+0x38]
  409e8c:	call   QWORD PTR [rbx+0x8]
  409e8f:	jmp    0x409e99
  409e91:	nop
  409e92:	nop
  409e93:	call   0x407d00
  409e98:	nop
  409e99:	mov    rax,QWORD PTR [rbp+0x38]
  409e9d:	mov    rax,QWORD PTR [rax]
  409ea0:	mov    QWORD PTR [rbp+0x38],rax
  409ea4:	cmp    QWORD PTR [rbp+0x38],0x0
  409ea9:	jne    0x409e83
  409eab:	nop
  409eac:	lea    rsp,[rbp+0x48]
  409eb0:	pop    rbx
  409eb1:	pop    rbp
  409eb2:	ret    
  409eb3:	lea    rax,[rax+riz*1+0x0]
  409eb8:	lea    rax,[rax*1+0x0]
  409ec0:	sub    rsp,0x28
  409ec4:	call   0x407c30
  409ec9:	add    rsp,0x28
  409ecd:	ret    
  409ece:	int3   
  409ecf:	int3   
  409ed0:	mov    rax,QWORD PTR [rip+0xa159]        # 0x414030
  409ed7:	mov    QWORD PTR [rcx],rax
  409eda:	mov    QWORD PTR [rip+0xa14f],rcx        # 0x414030
  409ee1:	ret    
  409ee2:	int3   
  409ee3:	int3   
  409ee4:	int3   
  409ee5:	int3   
  409ee6:	int3   
  409ee7:	int3   
  409ee8:	int3   
  409ee9:	int3   
  409eea:	int3   
  409eeb:	int3   
  409eec:	int3   
  409eed:	int3   
  409eee:	int3   
  409eef:	int3   
  409ef0:	push   rbp
  409ef1:	sub    rsp,0x40
  409ef5:	mov    rbp,rsp
  409ef8:	mov    QWORD PTR [rbp+0x28],rbp
  409efc:	mov    QWORD PTR [rbp+0x50],rcx
  409f00:	nop
  409f01:	mov    rax,QWORD PTR [rbp+0x50]
  409f05:	mov    rcx,QWORD PTR [rax+0x8]
  409f09:	call   0x409e60
  409f0e:	nop
  409f0f:	mov    rax,QWORD PTR [rbp+0x50]
  409f13:	cmp    rax,QWORD PTR [rip+0xa116]        # 0x414030
  409f1a:	jne    0x409f2c
  409f1c:	mov    rax,QWORD PTR [rbp+0x50]
  409f20:	mov    rax,QWORD PTR [rax]
  409f23:	mov    QWORD PTR [rip+0xa106],rax        # 0x414030
  409f2a:	jmp    0x409f6e
  409f2c:	mov    rax,QWORD PTR [rip+0xa0fd]        # 0x414030
  409f33:	mov    QWORD PTR [rbp+0x38],rax
  409f37:	cmp    QWORD PTR [rbp+0x38],0x0
  409f3c:	je     0x409f6d
  409f3e:	mov    rax,QWORD PTR [rbp+0x38]
  409f42:	mov    rax,QWORD PTR [rax]
  409f45:	cmp    rax,QWORD PTR [rbp+0x50]
  409f49:	jne    0x409f5b
  409f4b:	mov    rax,QWORD PTR [rbp+0x38]
  409f4f:	mov    rcx,QWORD PTR [rbp+0x50]
  409f53:	mov    rcx,QWORD PTR [rcx]
  409f56:	mov    QWORD PTR [rax],rcx
  409f59:	jmp    0x409f6d
  409f5b:	mov    rax,QWORD PTR [rbp+0x38]
  409f5f:	mov    rax,QWORD PTR [rax]
  409f62:	mov    QWORD PTR [rbp+0x38],rax
  409f66:	cmp    QWORD PTR [rbp+0x38],0x0
  409f6b:	jne    0x409f3e
  409f6d:	nop
  409f6e:	lea    rsp,[rbp+0x40]
  409f72:	pop    rbp
  409f73:	ret    
  409f74:	lea    rax,[rax+0x0]
  409f78:	lea    rax,[rax*1+0x0]
  409f80:	push   rbp
  409f81:	mov    rbp,rsp
  409f84:	mov    rax,QWORD PTR [rdx+0x50]
  409f88:	cmp    rax,QWORD PTR [rip+0xa0a1]        # 0x414030
  409f8f:	jne    0x409fa1
  409f91:	mov    rax,QWORD PTR [rdx+0x50]
  409f95:	mov    rax,QWORD PTR [rax]
  409f98:	mov    QWORD PTR [rip+0xa091],rax        # 0x414030
  409f9f:	jmp    0x409fe3
  409fa1:	mov    rax,QWORD PTR [rip+0xa088]        # 0x414030
  409fa8:	mov    QWORD PTR [rdx+0x38],rax
  409fac:	cmp    QWORD PTR [rdx+0x38],0x0
  409fb1:	je     0x409fe2
  409fb3:	mov    rax,QWORD PTR [rdx+0x38]
  409fb7:	mov    rax,QWORD PTR [rax]
  409fba:	cmp    rax,QWORD PTR [rdx+0x50]
  409fbe:	jne    0x409fd0
  409fc0:	mov    rax,QWORD PTR [rdx+0x38]
  409fc4:	mov    rcx,QWORD PTR [rdx+0x50]
  409fc8:	mov    rcx,QWORD PTR [rcx]
  409fcb:	mov    QWORD PTR [rax],rcx
  409fce:	jmp    0x409fe2
  409fd0:	mov    rax,QWORD PTR [rdx+0x38]
  409fd4:	mov    rax,QWORD PTR [rax]
  409fd7:	mov    QWORD PTR [rdx+0x38],rax
  409fdb:	cmp    QWORD PTR [rdx+0x38],0x0
  409fe0:	jne    0x409fb3
  409fe2:	nop
  409fe3:	mov    rsp,rbp
  409fe6:	pop    rbp
  409fe7:	ret    
  409fe8:	int3   
  409fe9:	int3   
  409fea:	int3   
  409feb:	int3   
  409fec:	int3   
  409fed:	int3   
  409fee:	int3   
  409fef:	int3   
  409ff0:	push   rbp
  409ff1:	push   rbx
  409ff2:	sub    rsp,0x38
  409ff6:	mov    rbp,rsp
  409ff9:	mov    rbx,rcx
  409ffc:	cmp    QWORD PTR [rcx],0x0
  40a000:	je     0x40a01e
  40a002:	mov    rax,QWORD PTR [rcx]
  40a005:	mov    QWORD PTR [rbp+0x28],rax
  40a009:	mov    QWORD PTR [rcx],0x0
  40a010:	mov    rcx,QWORD PTR [rbp+0x28]
  40a014:	mov    rax,QWORD PTR [rbp+0x28]
  40a018:	mov    rax,QWORD PTR [rax]
  40a01b:	call   QWORD PTR [rax+0x10]
  40a01e:	mov    rax,rbx
  40a021:	lea    rsp,[rbp+0x38]
  40a025:	pop    rbx
  40a026:	pop    rbp
  40a027:	ret    
  40a028:	int3   
  40a029:	int3   
  40a02a:	int3   
  40a02b:	int3   
  40a02c:	int3   
  40a02d:	int3   
  40a02e:	int3   
  40a02f:	int3   
  40a030:	push   rbp
  40a031:	push   rdi
  40a032:	push   rsi
  40a033:	push   rbx
  40a034:	sub    rsp,0x38
  40a038:	mov    rbp,rsp
  40a03b:	mov    rbx,rcx
  40a03e:	mov    rsi,rdx
  40a041:	mov    rdi,r8
  40a044:	test   rsi,rsi
  40a047:	jne    0x40a053
  40a049:	mov    rcx,rbx
  40a04c:	call   0x409ff0
  40a051:	jmp    0x40a09c
  40a053:	mov    QWORD PTR [rbp+0x28],0x0
  40a05b:	lea    rcx,[rbp+0x28]
  40a05f:	call   0x409ff0
  40a064:	mov    rcx,rsi
  40a067:	mov    rdx,rdi
  40a06a:	mov    r8,rax
  40a06d:	mov    rax,QWORD PTR [rsi]
  40a070:	call   QWORD PTR [rax]
  40a072:	test   eax,eax
  40a074:	je     0x40a083
  40a076:	mov    cl,0x17
  40a078:	mov    rdx,QWORD PTR [rbp+0x58]
  40a07c:	call   0x405170
  40a081:	jmp    0x40a09c
  40a083:	cmp    QWORD PTR [rbx],0x0
  40a087:	je     0x40a095
  40a089:	mov    rax,QWORD PTR [rbx]
  40a08c:	mov    rcx,rax
  40a08f:	mov    rax,QWORD PTR [rax]
  40a092:	call   QWORD PTR [rax+0x10]
  40a095:	mov    rax,QWORD PTR [rbp+0x28]
  40a099:	mov    QWORD PTR [rbx],rax
  40a09c:	lea    rsp,[rbp+0x38]
  40a0a0:	pop    rbx
  40a0a1:	pop    rsi
  40a0a2:	pop    rdi
  40a0a3:	pop    rbp
  40a0a4:	ret    
  40a0a5:	add    BYTE PTR [rax],al
  40a0a7:	add    BYTE PTR [rax+0x40a0],dh
  40a0ad:	add    BYTE PTR [rax],al
  40a0af:	add    BYTE PTR [rcx+rcx*1],dl
  40a0b2:	push   rax
  40a0b3:	rex.WB outs dx,BYTE PTR ds:[rsi]
  40a0b5:	jae    0x40a12b
  40a0b7:	rex.WB je 0x40a11f
  40a0ba:	ins    DWORD PTR es:[rdi],dx
  40a0bb:	or     BYTE PTR [rcx+0x40],ah
  40a0c1:	add    BYTE PTR [rax],al
  40a0c3:	add    al,BYTE PTR [rax]
  40a0c5:	add    BYTE PTR [rax],al
  40a0c7:	add    al,dl
  40a0c9:	movabs al,ds:0x160d000000000040
  40a0d2:	push   rsp
  40a0d3:	rex.WB outs dx,BYTE PTR ds:[rsi]
  40a0d5:	jae    0x40a14b
  40a0d7:	rex.WB je 0x40a13f
  40a0da:	ins    DWORD PTR es:[rdi],dx
  40a0db:	cs push rsp
  40a0dd:	rex.X jne 0x40a143
  40a0e0:	imul   esp,DWORD PTR [rbp+0x74],0x41
  40a0e4:	jb     0x40a158
  40a0e6:	(bad)  
  40a0e7:	jns    0x40a0e1
  40a0e9:	add    BYTE PTR [rax],al
  40a0eb:	add    BYTE PTR [rdi],bl
  40a0ed:	add    BYTE PTR [rax],al
  40a0ef:	add    BYTE PTR [rax+0x40a7],bl
  40a0f5:	add    BYTE PTR [rax],al
  40a0f7:	add    BYTE PTR [rcx],al
	...
  40a101:	add    al,BYTE PTR [rax]
  40a103:	add    BYTE PTR [rax],al
  40a105:	add    BYTE PTR [rax],al
  40a107:	add    BYTE PTR [rax],dl
  40a109:	movabs eax,ds:0x90e000000000040
  40a112:	push   rsp
  40a113:	rex.WB outs dx,BYTE PTR ds:[rsi]
  40a115:	jae    0x40a18b
  40a117:	rex.WB je 0x40a17f
  40a11a:	ins    DWORD PTR es:[rdi],dx
  40a11b:	add    BYTE PTR [rdx],al
  40a11d:	add    BYTE PTR [rax],al
  40a11f:	add    al,BYTE PTR [rax]
  40a121:	add    BYTE PTR [rax],al
  40a123:	enter  0x40a0,0x0
  40a127:	add    BYTE PTR [rax],al
  40a129:	add    BYTE PTR [rax],al
  40a12b:	adc    BYTE PTR [rax],al
  40a12d:	add    BYTE PTR [rax],al
  40a12f:	add    BYTE PTR [rax],al
  40a131:	add    BYTE PTR [rax],al
  40a133:	enter  0x40a0,0x0
  40a137:	add    BYTE PTR [rax],al
  40a139:	add    BYTE PTR [rax],al
  40a13b:	or     BYTE PTR [rcx],al
  40a13d:	add    BYTE PTR [rax],al
  40a13f:	add    BYTE PTR [rax],al
  40a141:	add    BYTE PTR [rax],al
  40a143:	add    BYTE PTR [rax+rax*1],al
  40a146:	add    BYTE PTR [rax],al
  40a148:	fcom   DWORD PTR [rax]
  40a14a:	add    BYTE PTR [rax],al
	...
  40a159:	or     DWORD PTR [rsi+0x49],eax
  40a15c:	outs   dx,BYTE PTR ds:[rsi]
  40a15d:	jae    0x40a1d3
  40a15f:	(bad)  
  40a160:	outs   dx,BYTE PTR ds:[rsi]
  40a161:	movsxd esp,DWORD PTR [rbp+0x2]
  40a164:	add    BYTE PTR [rax+0x4023],dh
  40a16a:	add    BYTE PTR [rax],al
  40a16c:	add    BYTE PTR [rax],cl
	...
  40a176:	add    eax,0x636f4c46
  40a17b:	imul   eax,DWORD PTR [rdx],0x0
  40a17e:	enter  0x40a0,0x0
  40a182:	add    BYTE PTR [rax],al
  40a184:	add    BYTE PTR [rax],al
  40a186:	adc    BYTE PTR [rax],al
  40a188:	add    BYTE PTR [rax],al
  40a18a:	add    BYTE PTR [rax],al
  40a18c:	add    BYTE PTR [rax],al
  40a18e:	add    BYTE PTR [rax],cl
  40a190:	rex.RX
  40a191:	rex.X jne 0x40a1f7
  40a194:	imul   esp,DWORD PTR [rbp+0x74],0x73
  40a198:	add    al,BYTE PTR [rax]
  40a19a:	enter  0x40a0,0x0
  40a19e:	add    BYTE PTR [rax],al
  40a1a0:	add    BYTE PTR [rax],al
  40a1a2:	or     BYTE PTR [rcx],al
  40a1a4:	add    BYTE PTR [rax],al
  40a1a6:	add    BYTE PTR [rax],al
  40a1a8:	add    BYTE PTR [rax],al
  40a1aa:	add    BYTE PTR [rsi],cl
  40a1ac:	rex.RX
  40a1ad:	rex.WRB
  40a1ae:	gs je  0x40a219
  40a1b1:	outs   dx,DWORD PTR ds:[rsi]
  40a1b2:	fs rex.X jne 0x40a219
  40a1b6:	imul   esp,DWORD PTR [rbp+0x74],0x73
  40a1ba:	add    al,BYTE PTR [rax]
  40a1bc:	add    al,BYTE PTR [rax]
  40a1be:	(bad)  
  40a1bf:	add    BYTE PTR [rcx],cl
  40a1c1:	nop
  40a1c2:	pop    rcx
  40a1c3:	add    BYTE PTR [r8],al
  40a1c6:	add    BYTE PTR [rax],al
  40a1c8:	add    BYTE PTR [rsi],al
  40a1ca:	rex.XB jb 0x40a232
  40a1cd:	(bad)  
  40a1ce:	je     0x40a235
  40a1d0:	add    BYTE PTR [rax],al
  40a1d2:	test   al,0xa0
  40a1d4:	add    BYTE PTR [rax],al
  40a1d7:	add    BYTE PTR [rax],al
  40a1d9:	add    BYTE PTR [rax],al
  40a1db:	add    al,BYTE PTR [rax]
  40a1dd:	or     BYTE PTR [rax+0x40a9],al
  40a1e3:	add    BYTE PTR [rax],al
  40a1e5:	add    BYTE PTR [rdi],al
  40a1e7:	rex.R
  40a1e8:	gs jae 0x40a25f
  40a1eb:	jb     0x40a25c
  40a1ed:	jns    0x40a1ef
	...
  40a1f7:	add    BYTE PTR [rax],al
  40a1f9:	add    al,BYTE PTR [rax]
  40a1fb:	or     BYTE PTR [rax+0x40a9],ah
  40a201:	add    BYTE PTR [rax],al
  40a203:	add    BYTE PTR [rsi+rax*2],al
  40a206:	jb     0x40a26d
  40a208:	add    BYTE PTR gs:[rax],al
  40a20b:	add    BYTE PTR [rax],dl
  40a20d:	add    BYTE PTR [rax],al
  40a210:	add    BYTE PTR [rax],al
  40a212:	add    BYTE PTR [rax],al
  40a214:	add    al,BYTE PTR [rax]
  40a216:	or     BYTE PTR [rax+0x4159],dl
  40a21c:	add    BYTE PTR [rax],al
  40a21e:	add    BYTE PTR [rdi],cl
  40a220:	push   rdx
  40a221:	imul   esi,DWORD PTR gs:[ebx+0x74],0x65577265
  40a22a:	(bad)  
  40a22b:	imul   edx,DWORD PTR [rdx+0x65],0x66
	...
  40a237:	add    BYTE PTR [rax],al
  40a239:	add    DWORD PTR [rax],eax
  40a23b:	fcom   DWORD PTR [rax]
  40a23d:	add    BYTE PTR [rax],al
  40a240:	add    BYTE PTR [rax],al
  40a242:	add    BYTE PTR [rdi],al
  40a244:	rex.B
  40a245:	fs fs jb 0x40a2ae
  40a249:	jae    0x40a2be
  40a24b:	add    al,BYTE PTR [rax]
  40a24d:	add    al,BYTE PTR [rax]
  40a24f:	or     BYTE PTR [rax+0x4159],dl
  40a255:	add    BYTE PTR [rax],al
  40a257:	add    BYTE PTR [rcx],dl
  40a259:	push   rbp
  40a25a:	outs   dx,BYTE PTR ds:[rsi]
  40a25b:	jb     0x40a2c2
  40a25d:	imul   esi,DWORD PTR [ebx+0x74],0x65577265
  40a265:	(bad)  
  40a266:	imul   edx,DWORD PTR [rdx+0x65],0x66
	...
  40a272:	add    BYTE PTR [rax],al
  40a274:	add    DWORD PTR [rax],eax
  40a276:	fcom   DWORD PTR [rax]
  40a278:	add    BYTE PTR [rax],al
  40a27b:	add    BYTE PTR [rax],al
  40a27d:	add    BYTE PTR [rdi],al
  40a27f:	rex.B
  40a280:	fs fs jb 0x40a2e9
  40a284:	jae    0x40a2f9
  40a286:	add    al,BYTE PTR [rax]
  40a288:	add    al,BYTE PTR [rax]
  40a28a:	or     BYTE PTR [rax+0x4159],dl
  40a290:	add    BYTE PTR [rax],al
  40a292:	add    BYTE PTR [rip+0x69676552],dl        # 0x69a807ea
  40a298:	jae    0x40a30e
  40a29a:	gs jb  0x40a2f4
  40a29d:	gs (bad) 
  40a29f:	imul   ecx,DWORD PTR [rbp+0x65],0x74
  40a2a3:	push   0x6552646f
  40a2a8:	data16 add BYTE PTR [rax],al
	...
  40a2b3:	add    DWORD PTR [rax],eax
  40a2b5:	fcom   DWORD PTR [rax]
  40a2b7:	add    BYTE PTR [rax],al
  40a2ba:	add    BYTE PTR [rax],al
  40a2bc:	add    BYTE PTR [rdi],al
  40a2be:	rex.B
  40a2bf:	fs fs jb 0x40a328
  40a2c3:	jae    0x40a338
  40a2c5:	add    al,BYTE PTR [rax]
  40a2c7:	add    al,BYTE PTR [rax]
  40a2c9:	or     BYTE PTR [rax+0x4159],dl
  40a2cf:	add    BYTE PTR [rax],al
  40a2d1:	add    BYTE PTR [rdi],dl
  40a2d3:	push   rbp
  40a2d4:	outs   dx,BYTE PTR ds:[rsi]
  40a2d5:	jb     0x40a33c
  40a2d7:	imul   esi,DWORD PTR [ebx+0x74],0x65577265
  40a2df:	(bad)  
  40a2e0:	imul   ecx,DWORD PTR [rbp+0x65],0x74
  40a2e4:	push   0x6552646f
  40a2e9:	data16 add BYTE PTR [rax],al
	...
  40a2f4:	add    DWORD PTR [rax],eax
  40a2f6:	fcom   DWORD PTR [rax]
  40a2f8:	add    BYTE PTR [rax],al
  40a2fb:	add    BYTE PTR [rax],al
  40a2fd:	add    BYTE PTR [rdi],al
  40a2ff:	rex.B
  40a300:	fs fs jb 0x40a369
  40a304:	jae    0x40a379
  40a306:	add    al,BYTE PTR [rax]
  40a308:	add    al,BYTE PTR [rax]
  40a30a:	add    BYTE PTR [rax],al
  40a30c:	add    BYTE PTR [rax],al
  40a30e:	add    BYTE PTR [rax],al
  40a310:	sbb    BYTE PTR [rbx+0x40],ah
  40a316:	add    BYTE PTR [rax],al
  40a318:	(bad)  
  40a319:	or     edx,DWORD PTR [rcx+rcx*2+0x6e]
  40a31d:	jae    0x40a393
  40a31f:	rex.X jne 0x40a385
  40a322:	imul   esp,DWORD PTR [rbp+0x74],0x18
  40a326:	add    BYTE PTR [rax],al
  40a328:	add    BYTE PTR [rcx],al
  40a32a:	add    BYTE PTR [rax],al
  40a32c:	add    al,ch
  40a32e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  40a32f:	add    BYTE PTR [rax],al
  40a332:	add    BYTE PTR [rax],al
  40a334:	add    BYTE PTR [rax],dl
	...
  40a33e:	add    eax,DWORD PTR [rax]
  40a340:	add    BYTE PTR [rax],al
  40a342:	mov    al,0x23
  40a344:	add    BYTE PTR [rax],al
	...
  40a353:	add    eax,0x636f4c46
  40a358:	imul   eax,DWORD PTR [rdx],0x0
  40a35b:	pop    rax
  40a35c:	adc    BYTE PTR [rax+0x0],al
  40a35f:	add    BYTE PTR [rax],al
  40a361:	add    BYTE PTR [rax],al
  40a363:	or     BYTE PTR [rax],al
  40a365:	add    BYTE PTR [rax],al
  40a367:	add    BYTE PTR [rax],al
  40a369:	add    BYTE PTR [rax],al
  40a36b:	add    BYTE PTR [rsi],al
  40a36d:	rex.RX
  40a36e:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40a370:	jne    0x40a3e0
  40a372:	je     0x40a376
  40a374:	add    al,ch
  40a376:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  40a377:	add    BYTE PTR [rax],al
  40a37a:	add    BYTE PTR [rax],al
  40a37c:	add    BYTE PTR [rax],dl
	...
  40a386:	or     al,BYTE PTR [rsi+0x49]
  40a389:	outs   dx,BYTE PTR ds:[rsi]
  40a38a:	jae    0x40a400
  40a38c:	rex.WB je 0x40a3f4
  40a38f:	ins    DWORD PTR es:[rdi],dx
  40a390:	jae    0x40a394
  40a392:	add    BYTE PTR [rdx],al
  40a394:	add    BYTE PTR [rdi],al
  40a396:	add    BYTE PTR [rax],cl
  40a398:	nop
  40a399:	pop    rcx
  40a39a:	add    BYTE PTR [r8],al
  40a39d:	add    BYTE PTR [rax],al
  40a39f:	add    BYTE PTR [rdx],cl
  40a3a1:	rex.WB outs dx,BYTE PTR ds:[rsi]
  40a3a3:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
	...
  40a3b3:	add    BYTE PTR [rax],al
  40a3b5:	add    BYTE PTR [rdx],al
  40a3b7:	add    BYTE PTR [rax],cl
  40a3b9:	sub    BYTE PTR [rbx+0x40],0x0
  40a3c0:	add    BYTE PTR [rax],cl
  40a3c2:	rex.RX imul r13d,DWORD PTR [rsi+0x61],0x657a696c
	...
  40a3d2:	add    BYTE PTR [rax],al
  40a3d4:	add    BYTE PTR [rdx],al
  40a3d6:	add    BYTE PTR [rax],cl
  40a3d8:	loopne 0x40a385
  40a3da:	add    BYTE PTR [rax],al
  40a3dd:	add    BYTE PTR [rax],al
  40a3df:	add    BYTE PTR [rsp+rcx*2],al
  40a3e2:	outs   dx,DWORD PTR ds:[rsi]
  40a3e3:	movsxd ebp,DWORD PTR [rbx+0x0]
	...
  40a3ee:	add    BYTE PTR [rax],al
  40a3f0:	add    al,BYTE PTR [rax]
  40a3f2:	or     BYTE PTR [rax+0x40ac],al
  40a3f8:	add    BYTE PTR [rax],al
  40a3fa:	add    BYTE PTR [rsi],al
  40a3fc:	push   rbp
  40a3fd:	outs   dx,BYTE PTR ds:[rsi]
  40a3fe:	ins    BYTE PTR es:[rdi],dx
  40a3ff:	outs   dx,DWORD PTR ds:[rsi]
  40a400:	movsxd ebp,DWORD PTR [rbx+0x0]
	...
  40a40b:	add    BYTE PTR [rax],al
  40a40d:	add    al,BYTE PTR [rax]
  40a40f:	or     BYTE PTR [rax+0x4159],dl
  40a415:	add    BYTE PTR [rax],al
  40a417:	add    BYTE PTR [rbx],cl
  40a419:	rex.B
  40a41a:	fs rex.WB outs dx,BYTE PTR fs:[rsi]
  40a41e:	jae    0x40a494
  40a420:	rex.WB je 0x40a488
  40a423:	ins    DWORD PTR es:[rdi],dx
	...
  40a42c:	add    BYTE PTR [rax],al
  40a42e:	add    al,BYTE PTR [rax]
  40a430:	pop    rax
  40a431:	adc    BYTE PTR [rax+0x0],al
  40a434:	add    BYTE PTR [rax],al
  40a436:	add    BYTE PTR [rax],al
  40a438:	(bad)  
  40a439:	rex.B
  40a43a:	rex.WB outs dx,BYTE PTR ds:[rsi]
  40a43c:	fs gs js 0x40a442
  40a440:	add    BYTE PTR [rax],al
  40a442:	test   al,0xa0
  40a444:	add    BYTE PTR [rax],al
  40a447:	add    BYTE PTR [rax],al
  40a449:	add    BYTE PTR [rip+0x65744941],al        # 0x65b4ed90
  40a44f:	ins    DWORD PTR es:[rdi],dx
  40a450:	add    al,BYTE PTR [rax]
  40a452:	add    al,BYTE PTR [rax]
  40a454:	or     al,dh
  40a456:	stos   BYTE PTR es:[rdi],al
  40a457:	add    BYTE PTR [rax],al
  40a45a:	add    BYTE PTR [rax],al
  40a45c:	add    BYTE PTR [rsi+rax*2],cl
  40a45f:	imul   ebp,DWORD PTR [rsi+0x64],0x74736e49
  40a466:	rex.WB je 0x40a4ce
  40a469:	ins    DWORD PTR es:[rdi],dx
  40a46a:	add    BYTE PTR [rax],al
  40a46c:	test   al,0xa0
  40a46e:	add    BYTE PTR [rax],al
  40a471:	add    BYTE PTR [rax],al
  40a473:	add    BYTE PTR [rdx],al
  40a475:	add    al,bl
  40a477:	adc    BYTE PTR [rax+0x0],al
  40a47a:	add    BYTE PTR [rax],al
  40a47c:	add    BYTE PTR [rax],al
  40a47e:	or     DWORD PTR [rcx+0x49],eax
  40a481:	outs   dx,BYTE PTR ds:[rsi]
  40a482:	jae    0x40a4f8
  40a484:	(bad)  
  40a485:	outs   dx,BYTE PTR ds:[rsi]
  40a486:	movsxd esp,DWORD PTR [rbp+0x2]
  40a489:	add    BYTE PTR [rax],ah
  40a48b:	pop    rax
  40a48c:	adc    BYTE PTR [rax+0x0],al
  40a48f:	add    BYTE PTR [rax],al
  40a491:	add    BYTE PTR [rax],al
  40a493:	(bad)  
  40a494:	rex.B
  40a495:	rex.WB outs dx,BYTE PTR ds:[rsi]
  40a497:	fs gs js 0x40a49d
  40a49b:	add    BYTE PTR [rdx],al
  40a49d:	add    BYTE PTR [rax],cl
  40a49f:	add    BYTE PTR [rax+rax*2+0x0],ch
  40a4a6:	add    BYTE PTR [rsi],cl
  40a4a8:	push   rdx
  40a4a9:	gs ins DWORD PTR es:[rdi],dx
  40a4ab:	outs   dx,DWORD PTR ds:[rsi]
  40a4ac:	jbe    0x40a513
  40a4ae:	rex.WB outs dx,BYTE PTR ds:[rsi]
  40a4b0:	jae    0x40a526
  40a4b2:	rex.WB je 0x40a51a
  40a4b5:	ins    DWORD PTR es:[rdi],dx
  40a4b6:	add    BYTE PTR [rax],al
  40a4b8:	test   al,0xa0
  40a4ba:	add    BYTE PTR [rax],al
  40a4bd:	add    BYTE PTR [rax],al
  40a4bf:	add    BYTE PTR [rcx],al
  40a4c1:	add    al,bl
  40a4c3:	adc    BYTE PTR [rax+0x0],al
  40a4c6:	add    BYTE PTR [rax],al
  40a4c8:	add    BYTE PTR [rax],al
  40a4ca:	or     DWORD PTR [rcx+0x49],eax
  40a4cd:	outs   dx,BYTE PTR ds:[rsi]
  40a4ce:	jae    0x40a544
  40a4d0:	(bad)  
  40a4d1:	outs   dx,BYTE PTR ds:[rsi]
  40a4d2:	movsxd esp,DWORD PTR [rbp+0x2]
  40a4d5:	add    BYTE PTR [rdx],al
  40a4d7:	add    al,ah
  40a4d9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40a4da:	add    BYTE PTR [rax],al
  40a4dd:	add    BYTE PTR [rax],al
  40a4df:	add    BYTE PTR [rip+0x49543a10],cl        # 0x4994def5
  40a4e5:	outs   dx,BYTE PTR ds:[rsi]
  40a4e6:	jae    0x40a55c
  40a4e8:	rex.W (bad) 
  40a4ea:	jae    0x40a554
  40a4ec:	rex.WRB (bad) 
  40a4ee:	jo     0x40a51e
  40a4f0:	cmp    dh,BYTE PTR [rcx]
  40a4f2:	js     0x40a506
  40a4f4:	add    BYTE PTR [rax],al
  40a4f6:	(bad)
  40a4f9:	add    BYTE PTR [rax],dl
  40a4fb:	movabs ds:0x1000000000040,eax
  40a504:	add    BYTE PTR [rax],al
  40a506:	add    BYTE PTR [rax],al
  40a508:	add    BYTE PTR [rax],al
  40a50a:	add    BYTE PTR [rdx],al
  40a50c:	add    BYTE PTR [rax],al
  40a50e:	add    BYTE PTR [rax],al
  40a510:	sbb    BYTE PTR [rbp+0x40],ah
  40a516:	add    BYTE PTR [rax],al
  40a518:	(bad)  
  40a519:	or     al,0x54
  40a51b:	rex.WB outs dx,BYTE PTR ds:[rsi]
  40a51d:	jae    0x40a593
  40a51f:	rex.W (bad) 
  40a521:	jae    0x40a58b
  40a523:	rex.WRB (bad) 
  40a525:	jo     0x40a4bf
  40a527:	adc    al,BYTE PTR [rax]
  40a529:	add    BYTE PTR [rcx],al
  40a52b:	add    BYTE PTR [rax],al
  40a52d:	add    al,bl
  40a52f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40a530:	add    BYTE PTR [rax],al
	...
  40a53f:	add    eax,0xd8000000
  40a544:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40a545:	add    BYTE PTR [rax],al
	...
  40a554:	or     BYTE PTR [rsi+0x42],al
  40a557:	jne    0x40a5bc
  40a559:	imul   esp,DWORD PTR [rbp+0x74],0x73
  40a55d:	add    al,BYTE PTR [rax]
  40a55f:	test   al,0xa0
  40a561:	add    BYTE PTR [rax],al
  40a564:	add    BYTE PTR [rax],al
  40a566:	add    BYTE PTR [rax+0x12],bh
  40a569:	add    BYTE PTR [rax],al
  40a56b:	add    BYTE PTR [rax],al
  40a56d:	add    BYTE PTR [rax],al
  40a56f:	add    BYTE PTR [rsi],cl
  40a571:	rex.RX
  40a572:	rex.RX jb 0x40a5da
  40a575:	rex.WB outs dx,BYTE PTR gs:[rsi]
  40a578:	jae    0x40a5ee
  40a57a:	rex.WB je 0x40a5e2
  40a57d:	ins    DWORD PTR es:[rdi],dx
  40a57e:	jae    0x40a582
  40a580:	add    BYTE PTR [rax+0x10],bl
  40a583:	add    BYTE PTR [rax],al
  40a586:	add    BYTE PTR [rax],al
  40a588:	add    BYTE PTR [rax+0x12],al
  40a58e:	add    BYTE PTR [rax],al
  40a590:	add    BYTE PTR [rax],al
  40a592:	or     al,BYTE PTR [rsi+0x46]
  40a595:	jb     0x40a5fc
  40a597:	rex.XB outs dx,DWORD PTR gs:[rsi]
  40a59a:	jne    0x40a60a
  40a59c:	je     0x40a5a0
  40a59e:	add    BYTE PTR [rax+0x4023],dh
  40a5a4:	add    BYTE PTR [rax],al
  40a5a6:	add    BYTE PTR [rax+0x12],cl
  40a5ac:	add    BYTE PTR [rax],al
  40a5ae:	add    BYTE PTR [rax],al
  40a5b0:	or     DWORD PTR [rsi+0x49],eax
  40a5b3:	outs   dx,BYTE PTR ds:[rsi]
  40a5b4:	imul   esi,DWORD PTR [rsp+rcx*2+0x6f],0x26b63
  40a5bc:	add    BYTE PTR [rax],dl
  40a5be:	add    BYTE PTR [rax],al
  40a5c1:	add    BYTE PTR [rax],al
  40a5c3:	add    BYTE PTR [rax+0x12],dl
  40a5c9:	add    BYTE PTR [rax],al
  40a5cb:	add    BYTE PTR [rax],al
  40a5cd:	or     al,0x46
  40a5cf:	rex.WB outs dx,BYTE PTR ds:[rsi]
  40a5d1:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
  40a5d9:	add    al,BYTE PTR fs:[rax]
  40a5dc:	add    al,BYTE PTR [rax]
  40a5de:	(bad)  
  40a5df:	add    BYTE PTR [rax],cl
  40a5e1:	mov    al,0xad
  40a5e3:	add    BYTE PTR [rax],al
  40a5e6:	add    BYTE PTR [rax],al
  40a5e8:	add    BYTE PTR [rdi],al
  40a5ea:	rex.R
  40a5eb:	gs jae 0x40a662
  40a5ee:	jb     0x40a65f
  40a5f0:	jns    0x40a5f2
	...
  40a5fa:	add    BYTE PTR [rcx],al
  40a5fc:	add    al,bl
  40a5fe:	adc    BYTE PTR [rax+0x0],al
  40a601:	add    BYTE PTR [rax],al
  40a603:	add    BYTE PTR [rax],al
  40a605:	or     BYTE PTR [rcx+0x6e],cl
  40a608:	jae    0x40a67e
  40a60a:	(bad)  
  40a60b:	outs   dx,BYTE PTR ds:[rsi]
  40a60c:	movsxd esp,DWORD PTR [rbp+0x2]
  40a60f:	add    BYTE PTR [rdx],al
  40a611:	add    BYTE PTR [rax],cl
  40a613:	nop
  40a614:	pop    rcx
  40a615:	add    BYTE PTR [r8],al
  40a618:	add    BYTE PTR [rax],al
  40a61a:	add    BYTE PTR [rdx],cl
  40a61c:	rex.WB outs dx,BYTE PTR ds:[rsi]
  40a61e:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
	...
  40a62e:	add    BYTE PTR [rax],al
  40a630:	add    BYTE PTR [rdx],al
  40a632:	add    BYTE PTR [rax],cl
  40a634:	rex lods eax,DWORD PTR ds:[rsi]
  40a636:	add    BYTE PTR [rax],al
  40a639:	add    BYTE PTR [rax],al
  40a63b:	add    BYTE PTR [rax],cl
  40a63d:	rex.RX imul r13d,DWORD PTR [rsi+0x61],0x657a696c
	...
  40a64d:	add    BYTE PTR [rax],al
  40a64f:	add    BYTE PTR [rdx],al
  40a651:	add    BYTE PTR [rax],cl
  40a653:	nop
  40a654:	pop    rcx
  40a655:	add    BYTE PTR [r8],al
  40a658:	add    BYTE PTR [rax],al
  40a65a:	add    BYTE PTR [rdi],cl
  40a65c:	push   rdx
  40a65d:	imul   esi,DWORD PTR gs:[ebx+0x74],0x65577265
  40a666:	(bad)  
  40a667:	imul   edx,DWORD PTR [rdx+0x65],0x66
	...
  40a673:	add    BYTE PTR [rax],al
  40a675:	add    al,BYTE PTR [rax]
  40a677:	fcom   DWORD PTR [rax]
  40a679:	add    BYTE PTR [rax],al
  40a67c:	add    BYTE PTR [rax],al
  40a67e:	add    BYTE PTR [rdi],al
  40a680:	rex.B
  40a681:	fs fs jb 0x40a6ea
  40a685:	jae    0x40a6fa
  40a687:	add    al,BYTE PTR [rax]
  40a689:	add    al,bl
  40a68b:	adc    BYTE PTR [rax+0x0],al
  40a68e:	add    BYTE PTR [rax],al
  40a690:	add    BYTE PTR [rax],al
  40a692:	or     BYTE PTR [rcx+0x6e],cl
  40a695:	jae    0x40a70b
  40a697:	(bad)  
  40a698:	outs   dx,BYTE PTR ds:[rsi]
  40a699:	movsxd esp,DWORD PTR [rbp+0x2]
  40a69c:	add    BYTE PTR [rdx],al
  40a69e:	add    BYTE PTR [rax],cl
  40a6a0:	movabs al,ds:0x11000000000040ae
  40a6a9:	push   rbp
  40a6aa:	outs   dx,BYTE PTR ds:[rsi]
  40a6ab:	jb     0x40a712
  40a6ad:	imul   esi,DWORD PTR [ebx+0x74],0x65577265
  40a6b5:	(bad)  
  40a6b6:	imul   edx,DWORD PTR [rdx+0x65],0x66
	...
  40a6c2:	add    BYTE PTR [rax],al
  40a6c4:	add    al,BYTE PTR [rax]
  40a6c6:	fcom   DWORD PTR [rax]
  40a6c8:	add    BYTE PTR [rax],al
  40a6cb:	add    BYTE PTR [rax],al
  40a6cd:	add    BYTE PTR [rdi],al
  40a6cf:	rex.B
  40a6d0:	fs fs jb 0x40a739
  40a6d4:	jae    0x40a749
  40a6d6:	add    al,BYTE PTR [rax]
  40a6d8:	add    al,bl
  40a6da:	adc    BYTE PTR [rax+0x0],al
  40a6dd:	add    BYTE PTR [rax],al
  40a6df:	add    BYTE PTR [rax],al
  40a6e1:	or     BYTE PTR [rcx+0x6e],cl
  40a6e4:	jae    0x40a75a
  40a6e6:	(bad)  
  40a6e7:	outs   dx,BYTE PTR ds:[rsi]
  40a6e8:	movsxd esp,DWORD PTR [rbp+0x2]
  40a6eb:	add    BYTE PTR [rdx],al
  40a6ed:	add    BYTE PTR [rax],cl
  40a6ef:	nop
  40a6f0:	pop    rcx
  40a6f1:	add    BYTE PTR [r8],al
  40a6f4:	add    BYTE PTR [rax],al
  40a6f6:	add    BYTE PTR [rip+0x69676552],dl        # 0x69a80c4e
  40a6fc:	jae    0x40a772
  40a6fe:	gs jb  0x40a758
  40a701:	gs (bad) 
  40a703:	imul   ecx,DWORD PTR [rbp+0x65],0x74
  40a707:	push   0x6552646f
  40a70c:	data16 add BYTE PTR [rax],al
	...
  40a717:	add    al,BYTE PTR [rax]
  40a719:	fcom   DWORD PTR [rax]
  40a71b:	add    BYTE PTR [rax],al
  40a71e:	add    BYTE PTR [rax],al
  40a720:	add    BYTE PTR [rdi],al
  40a722:	rex.B
  40a723:	fs fs jb 0x40a78c
  40a727:	jae    0x40a79c
  40a729:	add    al,BYTE PTR [rax]
  40a72b:	add    al,bl
  40a72d:	adc    BYTE PTR [rax+0x0],al
  40a730:	add    BYTE PTR [rax],al
  40a732:	add    BYTE PTR [rax],al
  40a734:	or     BYTE PTR [rcx+0x6e],cl
  40a737:	jae    0x40a7ad
  40a739:	(bad)  
  40a73a:	outs   dx,BYTE PTR ds:[rsi]
  40a73b:	movsxd esp,DWORD PTR [rbp+0x2]
  40a73e:	add    BYTE PTR [rdx],al
  40a740:	add    BYTE PTR [rax],cl
  40a742:	nop
  40a743:	pop    rcx
  40a744:	add    BYTE PTR [r8],al
  40a747:	add    BYTE PTR [rax],al
  40a749:	add    BYTE PTR [rdi],dl
  40a74b:	push   rbp
  40a74c:	outs   dx,BYTE PTR ds:[rsi]
  40a74d:	jb     0x40a7b4
  40a74f:	imul   esi,DWORD PTR [ebx+0x74],0x65577265
  40a757:	(bad)  
  40a758:	imul   ecx,DWORD PTR [rbp+0x65],0x74
  40a75c:	push   0x6552646f
  40a761:	data16 add BYTE PTR [rax],al
	...
  40a76c:	add    al,BYTE PTR [rax]
  40a76e:	fcom   DWORD PTR [rax]
  40a770:	add    BYTE PTR [rax],al
  40a773:	add    BYTE PTR [rax],al
  40a775:	add    BYTE PTR [rdi],al
  40a777:	rex.B
  40a778:	fs fs jb 0x40a7e1
  40a77c:	jae    0x40a7f1
  40a77e:	add    al,BYTE PTR [rax]
  40a780:	add    al,bl
  40a782:	adc    BYTE PTR [rax+0x0],al
  40a785:	add    BYTE PTR [rax],al
  40a787:	add    BYTE PTR [rax],al
  40a789:	or     BYTE PTR [rcx+0x6e],cl
  40a78c:	jae    0x40a802
  40a78e:	(bad)  
  40a78f:	outs   dx,BYTE PTR ds:[rsi]
  40a790:	movsxd esp,DWORD PTR [rbp+0x2]
  40a793:	add    BYTE PTR [rdx],al
  40a795:	add    BYTE PTR [rax],al
  40a797:	add    BYTE PTR [rax+0x40a7],ah
  40a79d:	add    BYTE PTR [rax],al
  40a79f:	add    BYTE PTR [rcx],dl
  40a7a1:	(bad)  
  40a7a2:	push   rsp
  40a7a3:	rex.B jb 0x40a818
  40a7a6:	(bad)  
  40a7a7:	jns    0x40a7e5
  40a7a9:	push   rbx
  40a7aa:	jns    0x40a81f
  40a7ac:	je     0x40a813
  40a7ae:	ins    DWORD PTR es:[rdi],dx
  40a7af:	cs push rax
  40a7b1:	push   rax
  40a7b2:	outs   dx,DWORD PTR ds:[rsi]
  40a7b3:	imul   ebp,DWORD PTR [rsi+0x74],0x83e7265
	...
  40a7c2:	add    BYTE PTR [rax],al
  40a7c4:	add    bh,bh
  40a7c6:	(bad)  
  40a7c7:	(bad)  
  40a7c8:	jmp    FWORD PTR [rax+0x28]
  40a7cb:	add    BYTE PTR [rax],al
  40a7ce:	add    BYTE PTR [rax],al
  40a7d0:	add    BYTE PTR [rsi],al
  40a7d2:	push   rbx
  40a7d3:	jns    0x40a848
  40a7d5:	je     0x40a83c
  40a7d7:	ins    DWORD PTR es:[rdi],dx
  40a7d8:	push   0x4028
  40a7dd:	add    BYTE PTR [rax],al
  40a7df:	add    BYTE PTR [rdx],al
  40a7e1:	add    BYTE PTR [rax],al
  40a7e3:	add    BYTE PTR [rax],al
  40a7e5:	add    BYTE PTR [rax],al
  40a7e7:	add    al,dh
  40a7e9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  40a7ea:	add    BYTE PTR [rax],al
  40a7ed:	add    BYTE PTR [rax],al
  40a7ef:	add    BYTE PTR [rcx],dl
  40a7f1:	sbb    BYTE PTR [rcx+rax*2+0x72],dl
  40a7f5:	jb     0x40a858
  40a7f7:	jns    0x40a835
  40a7f9:	push   rbx
  40a7fa:	jns    0x40a86f
  40a7fc:	je     0x40a863
  40a7fe:	ins    DWORD PTR es:[rdi],dx
  40a7ff:	cs push rax
  40a801:	rex.WB outs dx,BYTE PTR ds:[rsi]
  40a803:	jae    0x40a879
  40a805:	rex.WB je 0x40a86d
  40a808:	ins    DWORD PTR es:[rdi],dx
  40a809:	or     BYTE PTR ds:[rax],al
	...
  40a814:	add    BYTE PTR [rax],al
  40a816:	(bad)  
  40a817:	(bad)  
  40a818:	(bad)  
  40a819:	jmp    FWORD PTR [rax+0x40a0]
  40a81f:	add    BYTE PTR [rax],al
  40a821:	add    BYTE PTR [rsi],al
  40a823:	push   rbx
  40a824:	jns    0x40a899
  40a826:	je     0x40a88d
  40a828:	ins    DWORD PTR es:[rdi],dx
  40a829:	test   al,0xa0
  40a82b:	add    BYTE PTR [rax],al
  40a82e:	add    BYTE PTR [rax],al
  40a830:	add    BYTE PTR [rdx],al
  40a832:	add    ah,cl
  40a834:	int3   
  40a835:	int3   
  40a836:	int3   
  40a837:	int3   
  40a838:	int3   
  40a839:	int3   
  40a83a:	int3   
  40a83b:	int3   
  40a83c:	int3   
  40a83d:	int3   
  40a83e:	int3   
  40a83f:	int3   
  40a840:	push   rbp
  40a841:	sub    rsp,0x10
  40a845:	mov    rbp,rsp
  40a848:	xor    rax,rax
  40a84b:	movsxd rdx,eax
  40a84e:	mov    rdx,QWORD PTR [rcx+rdx*8+0x10]
  40a853:	mov    QWORD PTR [rbp+0x8],rdx
  40a857:	mov    rdx,QWORD PTR [rbp+0x8]
  40a85b:	test   rdx,rdx
  40a85e:	je     0x40a864
  40a860:	mov    rdx,QWORD PTR [rdx-0x8]
  40a864:	xor    r8,r8
  40a867:	lea    r9,[rdx-0x1]
  40a86b:	mov    edx,r8d
  40a86e:	cmp    edx,r9d
  40a871:	jg     0x40a8ad
  40a873:	add    r9d,0x1
  40a877:	movsxd r8,eax
  40a87a:	mov    r8,QWORD PTR [rcx+r8*8+0x10]
  40a87f:	movsxd r10,edx
  40a882:	mov    r8,QWORD PTR [r8+r10*8]
  40a886:	test   r8,r8
  40a889:	je     0x40a8a5
  40a88b:	mov    QWORD PTR [r8],0x0
  40a892:	movsxd r8,eax
  40a895:	mov    r8,QWORD PTR [rcx+r8*8+0x10]
  40a89a:	movsxd r10,edx
  40a89d:	mov    QWORD PTR [r8+r10*8],0x0
  40a8a5:	add    edx,0x1
  40a8a8:	cmp    edx,r9d
  40a8ab:	jne    0x40a877
  40a8ad:	nop
  40a8ae:	movsxd rdx,eax
  40a8b1:	mov    rdx,QWORD PTR [rcx+rdx*8+0x108]
  40a8b9:	mov    QWORD PTR [rbp+0x0],rdx
  40a8bd:	mov    rdx,QWORD PTR [rbp+0x0]
  40a8c1:	test   rdx,rdx
  40a8c4:	je     0x40a8ca
  40a8c6:	mov    rdx,QWORD PTR [rdx-0x8]
  40a8ca:	xor    r8,r8
  40a8cd:	lea    r9,[rdx-0x1]
  40a8d1:	mov    edx,r8d
  40a8d4:	cmp    edx,r9d
  40a8d7:	jg     0x40a921
  40a8d9:	add    r9d,0x1
  40a8dd:	movsxd r8,eax
  40a8e0:	mov    r8,QWORD PTR [rcx+r8*8+0x108]
  40a8e8:	movsxd r10,edx
  40a8eb:	mov    r8,QWORD PTR [r8+r10*8]
  40a8ef:	test   r8,r8
  40a8f2:	je     0x40a919
  40a8f4:	mov    QWORD PTR [r8],0x0
  40a8fb:	mov    QWORD PTR [r8+0x8],0x0
  40a903:	movsxd r8,eax
  40a906:	mov    r8,QWORD PTR [rcx+r8*8+0x108]
  40a90e:	movsxd r10,edx
  40a911:	mov    QWORD PTR [r8+r10*8],0x0
  40a919:	add    edx,0x1
  40a91c:	cmp    edx,r9d
  40a91f:	jne    0x40a8dd
  40a921:	nop
  40a922:	add    eax,0x1
  40a925:	cmp    eax,0x1f
  40a928:	jne    0x40a84b
  40a92e:	nop
  40a92f:	lea    rsp,[rbp+0x10]
  40a933:	pop    rbp
  40a934:	ret    
  40a935:	int3   
  40a936:	int3   
  40a937:	int3   
  40a938:	int3   
  40a939:	int3   
  40a93a:	int3   
  40a93b:	int3   
  40a93c:	int3   
  40a93d:	int3   
  40a93e:	int3   
  40a93f:	int3   
  40a940:	sub    rsp,0x28
  40a944:	cmp    QWORD PTR [rip+0xd024],0x0        # 0x417970
  40a94c:	je     0x40a95a
  40a94e:	mov    rcx,QWORD PTR [rcx+0x8]
  40a952:	or     edx,0xffffffff
  40a955:	call   0x406ad0
  40a95a:	add    rsp,0x28
  40a95e:	ret    
  40a95f:	int3   
  40a960:	sub    rsp,0x28
  40a964:	cmp    QWORD PTR [rip+0xd004],0x0        # 0x417970
  40a96c:	je     0x40a977
  40a96e:	mov    rcx,QWORD PTR [rcx+0x8]
  40a972:	call   0x406cb0
  40a977:	add    rsp,0x28
  40a97b:	ret    
  40a97c:	int3   
  40a97d:	int3   
  40a97e:	int3   
  40a97f:	int3   
  40a980:	push   rbx
  40a981:	sub    rsp,0x20
  40a985:	mov    rbx,rcx
  40a988:	mov    rcx,rbx
  40a98b:	call   0x40a840
  40a990:	mov    QWORD PTR [rbx],0x0
  40a997:	add    rsp,0x20
  40a99b:	pop    rbx
  40a99c:	ret    
  40a99d:	int3   
  40a99e:	int3   
  40a99f:	int3   
  40a9a0:	push   rsi
  40a9a1:	push   rbx
  40a9a2:	sub    rsp,0x28
  40a9a6:	mov    rbx,rcx
  40a9a9:	test   rbx,rbx
  40a9ac:	setne  sil
  40a9b0:	test   sil,sil
  40a9b3:	je     0x40a9d5
  40a9b5:	mov    rcx,rbx
  40a9b8:	call   0x40a840
  40a9bd:	mov    rcx,QWORD PTR [rbx+0x8]
  40a9c1:	call   0x406a90
  40a9c6:	mov    rcx,rbx
  40a9c9:	mov    rdx,QWORD PTR [rip+0xfffffffffffff738]        # 0x40a108
  40a9d0:	call   0x409b10
  40a9d5:	rex mov eax,esi
  40a9d8:	add    rsp,0x28
  40a9dc:	pop    rbx
  40a9dd:	pop    rsi
  40a9de:	ret    
  40a9df:	int3   
  40a9e0:	push   rbp
  40a9e1:	sub    rsp,0x50
  40a9e5:	mov    rbp,rsp
  40a9e8:	mov    QWORD PTR [rbp+0x28],rbp
  40a9ec:	mov    QWORD PTR [rbp+0x60],rcx
  40a9f0:	mov    QWORD PTR [rbp+0x68],rdx
  40a9f4:	mov    QWORD PTR [rbp+0x70],r8
  40a9f8:	mov    rax,QWORD PTR [rbp+0x70]
  40a9fc:	shr    rax,0xd
  40aa00:	mov    rcx,QWORD PTR [rbp+0x70]
  40aa04:	shr    rcx,0x5
  40aa08:	lea    rax,[rax+rcx*1]
  40aa0c:	mov    ecx,0x1f
  40aa12:	cqo    
  40aa14:	idiv   rcx
  40aa17:	mov    DWORD PTR [rbp+0x48],edx
  40aa1a:	mov    rcx,QWORD PTR [rbp+0x60]
  40aa1e:	call   0x40a940
  40aa23:	nop
  40aa24:	mov    rax,QWORD PTR [rbp+0x68]
  40aa28:	movsxd rcx,DWORD PTR [rbp+0x48]
  40aa2c:	mov    rax,QWORD PTR [rax+rcx*8]
  40aa30:	mov    QWORD PTR [rbp+0x38],rax
  40aa34:	mov    rax,QWORD PTR [rbp+0x38]
  40aa38:	mov    QWORD PTR [rbp+0x30],rax
  40aa3c:	cmp    QWORD PTR [rbp+0x30],0x0
  40aa41:	je     0x40aa4f
  40aa43:	mov    rax,QWORD PTR [rbp+0x30]
  40aa47:	mov    rax,QWORD PTR [rax-0x8]
  40aa4b:	mov    QWORD PTR [rbp+0x30],rax
  40aa4f:	xor    rax,rax
  40aa52:	mov    rcx,QWORD PTR [rbp+0x30]
  40aa56:	lea    rcx,[rcx-0x1]
  40aa5a:	mov    DWORD PTR [rbp+0x4c],eax
  40aa5d:	cmp    DWORD PTR [rbp+0x4c],ecx
  40aa60:	jg     0x40aaa2
  40aa62:	add    ecx,0x1
  40aa65:	mov    rax,QWORD PTR [rbp+0x68]
  40aa69:	movsxd rdx,DWORD PTR [rbp+0x48]
  40aa6d:	mov    rax,QWORD PTR [rax+rdx*8]
  40aa71:	movsxd rdx,DWORD PTR [rbp+0x4c]
  40aa75:	mov    rax,QWORD PTR [rax+rdx*8]
  40aa79:	cmp    rax,QWORD PTR [rbp+0x70]
  40aa7d:	jne    0x40aa99
  40aa7f:	mov    rax,QWORD PTR [rbp+0x68]
  40aa83:	movsxd rcx,DWORD PTR [rbp+0x48]
  40aa87:	mov    rax,QWORD PTR [rax+rcx*8]
  40aa8b:	movsxd rcx,DWORD PTR [rbp+0x4c]
  40aa8f:	mov    QWORD PTR [rax+rcx*8],0x0
  40aa97:	jmp    0x40aaaf
  40aa99:	add    DWORD PTR [rbp+0x4c],0x1
  40aa9d:	cmp    DWORD PTR [rbp+0x4c],ecx
  40aaa0:	jne    0x40aa65
  40aaa2:	nop
  40aaa3:	nop
  40aaa4:	mov    rcx,QWORD PTR [rbp+0x60]
  40aaa8:	call   0x40a960
  40aaad:	jmp    0x40aabb
  40aaaf:	xor    rcx,rcx
  40aab2:	mov    rdx,QWORD PTR [rbp+0x28]
  40aab6:	call   0x40aad0
  40aabb:	lea    rsp,[rbp+0x50]
  40aabf:	pop    rbp
  40aac0:	ret    
  40aac1:	lea    rax,[rax+0x0]
  40aac8:	lea    rax,[rax*1+0x0]
  40aad0:	push   rbp
  40aad1:	sub    rsp,0x20
  40aad5:	mov    rbp,rsp
  40aad8:	mov    rcx,QWORD PTR [rdx+0x60]
  40aadc:	call   0x40a960
  40aae1:	lea    rsp,[rbp+0x20]
  40aae5:	pop    rbp
  40aae6:	ret    
  40aae7:	int3   
  40aae8:	int3   
  40aae9:	int3   
  40aaea:	int3   
  40aaeb:	int3   
  40aaec:	int3   
  40aaed:	int3   
  40aaee:	int3   
  40aaef:	int3   
  40aaf0:	push   rbp
  40aaf1:	push   rsi
  40aaf2:	push   rbx
  40aaf3:	sub    rsp,0x10
  40aaf7:	mov    rbp,rsp
  40aafa:	xor    rax,rax
  40aafd:	cmp    DWORD PTR [rcx+0x8],0x0
  40ab01:	jle    0x40ab70
  40ab03:	xor    r9,r9
  40ab06:	mov    r10d,DWORD PTR [rcx+0x8]
  40ab0a:	sub    r10d,0x1
  40ab0e:	cmp    r9d,r10d
  40ab11:	jg     0x40ab6a
  40ab13:	mov    r11d,r9d
  40ab16:	add    r11d,r10d
  40ab19:	shr    r11d,0x1
  40ab1d:	mov    rbx,QWORD PTR [rcx+0x10]
  40ab21:	movsxd rsi,r11d
  40ab24:	mov    rbx,QWORD PTR [rbx+rsi*8]
  40ab28:	mov    QWORD PTR [rbp+0x8],rbx
  40ab2c:	mov    rbx,QWORD PTR [rbp+0x8]
  40ab30:	mov    rbx,QWORD PTR [rbx]
  40ab33:	mov    rsi,rdx
  40ab36:	neg    rsi
  40ab39:	lea    rbx,[rbx+rsi*1]
  40ab3d:	test   rbx,rbx
  40ab40:	jge    0x40ab4b
  40ab42:	mov    r9d,r11d
  40ab45:	add    r9d,0x1
  40ab49:	jmp    0x40ab65
  40ab4b:	mov    r10d,r11d
  40ab4e:	sub    r10d,0x1
  40ab52:	test   rbx,rbx
  40ab55:	jne    0x40ab65
  40ab57:	mov    rax,QWORD PTR [rcx+0x10]
  40ab5b:	movsxd r9,r11d
  40ab5e:	mov    rax,QWORD PTR [rax+r9*8]
  40ab62:	mov    r9d,r11d
  40ab65:	cmp    r9d,r10d
  40ab68:	jle    0x40ab13
  40ab6a:	nop
  40ab6b:	mov    DWORD PTR [r8],r9d
  40ab6e:	jmp    0x40ab77
  40ab70:	mov    DWORD PTR [r8],0x0
  40ab77:	lea    rsp,[rbp+0x10]
  40ab7b:	pop    rbx
  40ab7c:	pop    rsi
  40ab7d:	pop    rbp
  40ab7e:	ret    
  40ab7f:	int3   
  40ab80:	push   rdi
  40ab81:	push   rsi
  40ab82:	push   rbx
  40ab83:	sub    rsp,0x20
  40ab87:	mov    rbx,rcx
  40ab8a:	xor    rsi,rsi
  40ab8d:	mov    edi,DWORD PTR [rbx+0x8]
  40ab90:	sub    edi,0x1
  40ab93:	cmp    esi,edi
  40ab95:	jg     0x40abb1
  40ab97:	add    edi,0x1
  40ab9a:	mov    rax,QWORD PTR [rbx+0x10]
  40ab9e:	movsxd rcx,esi
  40aba1:	mov    rcx,QWORD PTR [rax+rcx*8]
  40aba5:	call   0x40a9a0
  40abaa:	add    esi,0x1
  40abad:	cmp    esi,edi
  40abaf:	jne    0x40ab9a
  40abb1:	nop
  40abb2:	mov    DWORD PTR [rbx+0x8],0x0
  40abb9:	mov    rcx,QWORD PTR [rbx]
  40abbc:	call   0x406a90
  40abc1:	lea    rcx,[rbx+0x10]
  40abc5:	mov    rdx,QWORD PTR [rip+0xfffffffffffffc1c]        # 0x40a7e8
  40abcc:	call   0x409cb0
  40abd1:	add    rsp,0x20
  40abd5:	pop    rbx
  40abd6:	pop    rsi
  40abd7:	pop    rdi
  40abd8:	ret    
  40abd9:	int3   
  40abda:	int3   
  40abdb:	int3   
  40abdc:	int3   
  40abdd:	int3   
  40abde:	int3   
  40abdf:	int3   
  40abe0:	sub    rsp,0x28
  40abe4:	cmp    QWORD PTR [rip+0xcd84],0x0        # 0x417970
  40abec:	je     0x40abf9
  40abee:	mov    rcx,QWORD PTR [rcx]
  40abf1:	or     edx,0xffffffff
  40abf4:	call   0x406ad0
  40abf9:	add    rsp,0x28
  40abfd:	ret    
  40abfe:	int3   
  40abff:	int3   
  40ac00:	push   rbp
  40ac01:	push   rsi
  40ac02:	push   rbx
  40ac03:	sub    rsp,0x30
  40ac07:	mov    rbp,rsp
  40ac0a:	mov    rbx,rcx
  40ac0d:	mov    rcx,rbx
  40ac10:	lea    r8,[rbp+0x2c]
  40ac14:	call   0x40aaf0
  40ac19:	mov    rsi,rax
  40ac1c:	test   rsi,rsi
  40ac1f:	je     0x40ac71
  40ac21:	mov    eax,DWORD PTR [rbp+0x2c]
  40ac24:	cmp    eax,DWORD PTR [rbx+0x8]
  40ac27:	jge    0x40ac71
  40ac29:	mov    eax,DWORD PTR [rbx+0x8]
  40ac2c:	sub    eax,0x1
  40ac2f:	cmp    DWORD PTR [rbp+0x2c],eax
  40ac32:	jge    0x40ac6a
  40ac34:	mov    rax,QWORD PTR [rbx+0x10]
  40ac38:	movsxd rcx,DWORD PTR [rbp+0x2c]
  40ac3c:	lea    rcx,[rax+rcx*8+0x8]
  40ac41:	mov    rax,QWORD PTR [rbx+0x10]
  40ac45:	movsxd rdx,DWORD PTR [rbp+0x2c]
  40ac49:	lea    rdx,[rax+rdx*8]
  40ac4d:	mov    r8d,DWORD PTR [rbx+0x8]
  40ac51:	sub    r8d,DWORD PTR [rbp+0x2c]
  40ac55:	sub    r8d,0x1
  40ac59:	add    r8d,r8d
  40ac5c:	add    r8d,r8d
  40ac5f:	add    r8d,r8d
  40ac62:	movsxd r8,r8d
  40ac65:	call   0x405240
  40ac6a:	lea    rax,[rbx+0x8]
  40ac6e:	sub    DWORD PTR [rax],0x1
  40ac71:	mov    rax,rsi
  40ac74:	lea    rsp,[rbp+0x30]
  40ac78:	pop    rbx
  40ac79:	pop    rsi
  40ac7a:	pop    rbp
  40ac7b:	ret    
  40ac7c:	int3   
  40ac7d:	int3   
  40ac7e:	int3   
  40ac7f:	int3   
  40ac80:	sub    rsp,0x28
  40ac84:	cmp    QWORD PTR [rip+0xcce4],0x0        # 0x417970
  40ac8c:	je     0x40ac96
  40ac8e:	mov    rcx,QWORD PTR [rcx]
  40ac91:	call   0x406cb0
  40ac96:	add    rsp,0x28
  40ac9a:	ret    
  40ac9b:	int3   
  40ac9c:	int3   
  40ac9d:	int3   
  40ac9e:	int3   
  40ac9f:	int3   
  40aca0:	sub    rsp,0x28
  40aca4:	mov    r8d,0x1
  40acab:	mov    eax,r8d
  40acae:	lock xadd DWORD PTR [rcx+0x1280],r8d
  40acb7:	add    eax,r8d
  40acba:	cmp    eax,0x200
  40acc0:	jg     0x40ace2
  40acc2:	mov    r8,QWORD PTR [rcx+0x1278]
  40acc9:	mov    QWORD PTR [rdx],r8
  40accc:	mov    rax,r8
  40accf:	mov    r9,rdx
  40acd2:	lock cmpxchg QWORD PTR [rcx+0x1278],r9
  40acdb:	cmp    rax,r8
  40acde:	jne    0x40acc2
  40ace0:	jmp    0x40acf5
  40ace2:	or     eax,0xffffffff
  40ace5:	lock xadd DWORD PTR [rcx+0x1280],eax
  40aced:	mov    rcx,rdx
  40acf0:	call   0x40a9a0
  40acf5:	add    rsp,0x28
  40acf9:	ret    
  40acfa:	int3   
  40acfb:	int3   
  40acfc:	int3   
  40acfd:	int3   
  40acfe:	int3   
  40acff:	int3   
  40ad00:	mov    rdx,QWORD PTR [rcx+0x1278]
  40ad07:	test   rdx,rdx
  40ad0a:	je     0x40ad20
  40ad0c:	mov    rax,rdx
  40ad0f:	mov    r8,QWORD PTR [rdx]
  40ad12:	lock cmpxchg QWORD PTR [rcx+0x1278],r8
  40ad1b:	cmp    rax,rdx
  40ad1e:	jne    0x40ad00
  40ad20:	nop
  40ad21:	test   rdx,rdx
  40ad24:	je     0x40ad31
  40ad26:	or     eax,0xffffffff
  40ad29:	lock xadd DWORD PTR [rcx+0x1280],eax
  40ad31:	mov    rax,rdx
  40ad34:	ret    
  40ad35:	int3   
  40ad36:	int3   
  40ad37:	int3   
  40ad38:	int3   
  40ad39:	int3   
  40ad3a:	int3   
  40ad3b:	int3   
  40ad3c:	int3   
  40ad3d:	int3   
  40ad3e:	int3   
  40ad3f:	int3   
  40ad40:	push   rsi
  40ad41:	push   rbx
  40ad42:	sub    rsp,0x28
  40ad46:	mov    rbx,rcx
  40ad49:	cmp    BYTE PTR [rbx+0x1290],0x0
  40ad50:	je     0x40ad9b
  40ad52:	xor    rsi,rsi
  40ad55:	movsxd rax,esi
  40ad58:	lea    rax,[rax+rax*2]
  40ad5c:	lea    rcx,[rbx+rax*8]
  40ad60:	call   0x40ab80
  40ad65:	add    esi,0x1
  40ad68:	cmp    esi,0xc5
  40ad6e:	jne    0x40ad55
  40ad70:	nop
  40ad71:	mov    rcx,rbx
  40ad74:	call   0x40ad00
  40ad79:	mov    rcx,rax
  40ad7c:	call   0x40a9a0
  40ad81:	test   al,al
  40ad83:	jne    0x40ad71
  40ad85:	cmp    QWORD PTR [rbx+0x1288],0x0
  40ad8d:	je     0x40ad9b
  40ad8f:	mov    rcx,QWORD PTR [rbx+0x1288]
  40ad96:	call   0x406a90
  40ad9b:	add    rsp,0x28
  40ad9f:	pop    rbx
  40ada0:	pop    rsi
  40ada1:	ret    
  40ada2:	int3   
  40ada3:	int3   
  40ada4:	int3   
  40ada5:	int3   
  40ada6:	int3   
  40ada7:	int3   
  40ada8:	int3   
  40ada9:	int3   
  40adaa:	int3   
  40adab:	int3   
  40adac:	int3   
  40adad:	int3   
  40adae:	int3   
  40adaf:	int3   
  40adb0:	push   rbp
  40adb1:	sub    rsp,0x40
  40adb5:	mov    rbp,rsp
  40adb8:	mov    QWORD PTR [rbp+0x28],rbp
  40adbc:	mov    QWORD PTR [rbp+0x50],rcx
  40adc0:	mov    QWORD PTR [rbp+0x58],rdx
  40adc4:	mov    rax,QWORD PTR [rbp+0x50]
  40adc8:	cmp    BYTE PTR [rax+0x1290],0x0
  40adcf:	je     0x40ae5d
  40add5:	mov    rax,QWORD PTR [rbp+0x58]
  40add9:	shr    rax,0xd
  40addd:	mov    rcx,QWORD PTR [rbp+0x58]
  40ade1:	shr    rcx,0x5
  40ade5:	lea    rax,[rax+rcx*1]
  40ade9:	mov    ecx,0xc5
  40adef:	cqo    
  40adf1:	idiv   rcx
  40adf4:	mov    DWORD PTR [rbp+0x3c],edx
  40adf7:	mov    rax,QWORD PTR [rbp+0x50]
  40adfb:	movsxd rcx,DWORD PTR [rbp+0x3c]
  40adff:	lea    rcx,[rcx+rcx*2]
  40ae03:	lea    rcx,[rax+rcx*8]
  40ae07:	call   0x40abe0
  40ae0c:	nop
  40ae0d:	mov    rax,QWORD PTR [rbp+0x50]
  40ae11:	movsxd rcx,DWORD PTR [rbp+0x3c]
  40ae15:	lea    rcx,[rcx+rcx*2]
  40ae19:	lea    rcx,[rax+rcx*8]
  40ae1d:	mov    rdx,QWORD PTR [rbp+0x58]
  40ae21:	call   0x40ac00
  40ae26:	mov    QWORD PTR [rbp+0x30],rax
  40ae2a:	nop
  40ae2b:	mov    rax,QWORD PTR [rbp+0x50]
  40ae2f:	movsxd rcx,DWORD PTR [rbp+0x3c]
  40ae33:	lea    rcx,[rcx+rcx*2]
  40ae37:	lea    rcx,[rax+rcx*8]
  40ae3b:	call   0x40ac80
  40ae40:	cmp    QWORD PTR [rbp+0x30],0x0
  40ae45:	je     0x40ae5d
  40ae47:	mov    rcx,QWORD PTR [rbp+0x30]
  40ae4b:	call   0x40a980
  40ae50:	mov    rcx,QWORD PTR [rbp+0x50]
  40ae54:	mov    rdx,QWORD PTR [rbp+0x30]
  40ae58:	call   0x40aca0
  40ae5d:	lea    rsp,[rbp+0x40]
  40ae61:	pop    rbp
  40ae62:	ret    
  40ae63:	lea    rax,[rax+riz*1+0x0]
  40ae68:	lea    rax,[rax*1+0x0]
  40ae70:	push   rbp
  40ae71:	sub    rsp,0x20
  40ae75:	mov    rbp,rsp
  40ae78:	mov    rax,QWORD PTR [rdx+0x50]
  40ae7c:	movsxd rcx,DWORD PTR [rdx+0x3c]
  40ae80:	lea    rcx,[rcx+rcx*2]
  40ae84:	lea    rcx,[rax+rcx*8]
  40ae88:	call   0x40ac80
  40ae8d:	lea    rsp,[rbp+0x20]
  40ae91:	pop    rbp
  40ae92:	ret    
  40ae93:	int3   
  40ae94:	int3   
  40ae95:	int3   
  40ae96:	int3   
  40ae97:	int3   
  40ae98:	int3   
  40ae99:	int3   
  40ae9a:	int3   
  40ae9b:	int3   
  40ae9c:	int3   
  40ae9d:	int3   
  40ae9e:	int3   
  40ae9f:	int3   
  40aea0:	push   rbp
  40aea1:	sub    rsp,0x50
  40aea5:	mov    rbp,rsp
  40aea8:	mov    QWORD PTR [rbp+0x28],rbp
  40aeac:	mov    QWORD PTR [rbp+0x60],rcx
  40aeb0:	mov    QWORD PTR [rbp+0x68],rdx
  40aeb4:	mov    QWORD PTR [rbp+0x70],r8
  40aeb8:	mov    rax,QWORD PTR [rbp+0x60]
  40aebc:	cmp    BYTE PTR [rax+0x1290],0x0
  40aec3:	je     0x40af5c
  40aec9:	mov    rax,QWORD PTR [rbp+0x70]
  40aecd:	shr    rax,0xd
  40aed1:	mov    rcx,QWORD PTR [rbp+0x70]
  40aed5:	shr    rcx,0x5
  40aed9:	lea    rax,[rax+rcx*1]
  40aedd:	mov    ecx,0xc5
  40aee3:	cqo    
  40aee5:	idiv   rcx
  40aee8:	mov    DWORD PTR [rbp+0x4c],edx
  40aeeb:	mov    rax,QWORD PTR [rbp+0x60]
  40aeef:	movsxd rcx,DWORD PTR [rbp+0x4c]
  40aef3:	lea    rcx,[rcx+rcx*2]
  40aef7:	lea    rcx,[rax+rcx*8]
  40aefb:	call   0x40abe0
  40af00:	nop
  40af01:	mov    rax,QWORD PTR [rbp+0x60]
  40af05:	movsxd rcx,DWORD PTR [rbp+0x4c]
  40af09:	lea    rcx,[rcx+rcx*2]
  40af0d:	lea    rcx,[rax+rcx*8]
  40af11:	mov    rdx,QWORD PTR [rbp+0x70]
  40af15:	lea    r8,[rbp+0x48]
  40af19:	call   0x40aaf0
  40af1e:	mov    QWORD PTR [rbp+0x40],rax
  40af22:	nop
  40af23:	mov    rax,QWORD PTR [rbp+0x60]
  40af27:	movsxd rcx,DWORD PTR [rbp+0x4c]
  40af2b:	lea    rcx,[rcx+rcx*2]
  40af2f:	lea    rcx,[rax+rcx*8]
  40af33:	call   0x40ac80
  40af38:	cmp    QWORD PTR [rbp+0x40],0x0
  40af3d:	je     0x40af5c
  40af3f:	mov    rax,QWORD PTR [rbp+0x40]
  40af43:	mov    QWORD PTR [rbp+0x38],rax
  40af47:	mov    rcx,QWORD PTR [rbp+0x38]
  40af4b:	mov    rax,QWORD PTR [rbp+0x38]
  40af4f:	lea    rdx,[rax+0x10]
  40af53:	mov    r8,QWORD PTR [rbp+0x68]
  40af57:	call   0x40a9e0
  40af5c:	lea    rsp,[rbp+0x50]
  40af60:	pop    rbp
  40af61:	ret    
  40af62:	lea    rax,fs:[rax+riz*1+0x0]
  40af68:	lea    rax,[rax*1+0x0]
  40af70:	push   rbp
  40af71:	sub    rsp,0x20
  40af75:	mov    rbp,rsp
  40af78:	mov    rax,QWORD PTR [rdx+0x60]
  40af7c:	movsxd rcx,DWORD PTR [rdx+0x4c]
  40af80:	lea    rcx,[rcx+rcx*2]
  40af84:	lea    rcx,[rax+rcx*8]
  40af88:	call   0x40ac80
  40af8d:	lea    rsp,[rbp+0x20]
  40af91:	pop    rbp
  40af92:	ret    
  40af93:	int3   
  40af94:	int3   
  40af95:	int3   
  40af96:	int3   
  40af97:	int3   
  40af98:	int3   
  40af99:	int3   
  40af9a:	int3   
  40af9b:	int3   
  40af9c:	int3   
  40af9d:	int3   
  40af9e:	int3   
  40af9f:	int3   
  40afa0:	sub    rsp,0x28
  40afa4:	test   rdx,rdx
  40afa7:	je     0x40afc4
  40afa9:	lea    rax,[rip+0x10ec0]        # 0x41be70
  40afb0:	mov    r8,rcx
  40afb3:	mov    r9,rdx
  40afb6:	mov    rcx,rax
  40afb9:	mov    rdx,r8
  40afbc:	mov    r8,r9
  40afbf:	call   0x40aea0
  40afc4:	add    rsp,0x28
  40afc8:	ret    
  40afc9:	int3   
  40afca:	int3   
  40afcb:	int3   
  40afcc:	int3   
  40afcd:	int3   
  40afce:	int3   
  40afcf:	int3   
  40afd0:	sub    rsp,0x28
  40afd4:	mov    rax,QWORD PTR [rcx]
  40afd7:	movsxd rax,DWORD PTR [rax-0x80]
  40afdb:	mov    rax,QWORD PTR [rcx+rax*1-0x8]
  40afe0:	test   rax,0x1
  40afe7:	je     0x40affb
  40afe9:	lea    rax,[rip+0x10e80]        # 0x41be70
  40aff0:	mov    rdx,rcx
  40aff3:	mov    rcx,rax
  40aff6:	call   0x40adb0
  40affb:	add    rsp,0x28
  40afff:	ret    
  40b000:	push   rsi
  40b001:	push   rbx
  40b002:	sub    rsp,0x28
  40b006:	mov    rbx,rcx
  40b009:	mov    rsi,rbx
  40b00c:	cmp    QWORD PTR [rbx],0x0
  40b010:	je     0x40b033
  40b012:	mov    rcx,QWORD PTR [rbx]
  40b015:	mov    rdx,QWORD PTR [rip+0xffffffffffff64fc]        # 0x401518
  40b01c:	call   0x406740
  40b021:	mov    QWORD PTR [rbx],0x0
  40b028:	mov    rcx,rsi
  40b02b:	mov    rdx,rax
  40b02e:	call   0x40afa0
  40b033:	mov    rax,rsi
  40b036:	add    rsp,0x28
  40b03a:	pop    rbx
  40b03b:	pop    rsi
  40b03c:	ret    
  40b03d:	int3   
  40b03e:	int3   
  40b03f:	int3   
  40b040:	push   rdi
  40b041:	push   rsi
  40b042:	push   rbx
  40b043:	sub    rsp,0x30
  40b047:	mov    rbx,rcx
  40b04a:	mov    esi,edx
  40b04c:	mov    edi,r9d
  40b04f:	xor    rax,rax
  40b052:	test   r8,r8
  40b055:	je     0x40b0e9
  40b05b:	test   rbx,rbx
  40b05e:	je     0x40b0c7
  40b060:	test   esi,esi
  40b062:	jbe    0x40b0c7
  40b064:	mov    ecx,0xfde9
  40b06a:	xor    rdx,rdx
  40b06d:	mov    r9d,edi
  40b070:	mov    QWORD PTR [rsp+0x20],rbx
  40b075:	mov    DWORD PTR [rsp+0x28],esi
  40b079:	call   0x40b230
  40b07e:	test   eax,eax
  40b080:	jbe    0x40b0e9
  40b082:	cmp    eax,esi
  40b084:	ja     0x40b0e9
  40b086:	cmp    edi,0xffffffff
  40b089:	jne    0x40b095
  40b08b:	mov    ecx,eax
  40b08d:	cmp    WORD PTR [rbx+rcx*2-0x2],0x0
  40b093:	je     0x40b0e9
  40b095:	cmp    eax,esi
  40b097:	jne    0x40b0b9
  40b099:	cmp    eax,0x1
  40b09c:	jbe    0x40b0bc
  40b09e:	mov    ecx,eax
  40b0a0:	cmp    WORD PTR [rbx+rcx*2-0x2],0xdc00
  40b0a7:	jb     0x40b0bc
  40b0a9:	mov    ecx,eax
  40b0ab:	cmp    WORD PTR [rbx+rcx*2-0x2],0xdfff
  40b0b2:	ja     0x40b0bc
  40b0b4:	sub    eax,0x1
  40b0b7:	jmp    0x40b0bc
  40b0b9:	add    eax,0x1
  40b0bc:	mov    ecx,eax
  40b0be:	mov    WORD PTR [rbx+rcx*2-0x2],0x0
  40b0c5:	jmp    0x40b0e9
  40b0c7:	mov    ecx,0xfde9
  40b0cd:	xor    rdx,rdx
  40b0d0:	mov    r9d,edi
  40b0d3:	mov    QWORD PTR [rsp+0x20],0x0
  40b0dc:	mov    DWORD PTR [rsp+0x28],0x0
  40b0e4:	call   0x40b230
  40b0e9:	add    rsp,0x30
  40b0ed:	pop    rbx
  40b0ee:	pop    rsi
  40b0ef:	pop    rdi
  40b0f0:	ret    
  40b0f1:	int3   
  40b0f2:	int3   
  40b0f3:	int3   
  40b0f4:	int3   
  40b0f5:	int3   
  40b0f6:	int3   
  40b0f7:	int3   
  40b0f8:	int3   
  40b0f9:	int3   
  40b0fa:	int3   
  40b0fb:	int3   
  40b0fc:	int3   
  40b0fd:	int3   
  40b0fe:	int3   
  40b0ff:	int3   
  40b100:	push   rbp
  40b101:	push   rbx
  40b102:	sub    rsp,0x48
  40b106:	mov    rbp,rsp
  40b109:	mov    QWORD PTR [rbp+0x20],rcx
  40b10d:	mov    QWORD PTR [rbp+0x28],rdx
  40b111:	mov    QWORD PTR [rbp+0x38],0x0
  40b119:	nop
  40b11a:	mov    rcx,QWORD PTR [rbp+0x20]
  40b11e:	call   0x4084e0
  40b123:	mov    rax,QWORD PTR [rbp+0x28]
  40b127:	cmp    BYTE PTR [rax],0x0
  40b12a:	je     0x40b18d
  40b12c:	mov    rax,QWORD PTR [rbp+0x28]
  40b130:	movzx  rbx,BYTE PTR [rax]
  40b134:	lea    rcx,[rbp+0x38]
  40b138:	mov    edx,ebx
  40b13a:	call   0x4093b0
  40b13f:	mov    rcx,QWORD PTR [rbp+0x38]
  40b143:	call   0x409260
  40b148:	mov    rcx,rax
  40b14b:	mov    edx,ebx
  40b14d:	add    edx,0x1
  40b150:	mov    rax,QWORD PTR [rbp+0x28]
  40b154:	lea    r8,[rax+0x1]
  40b158:	mov    r9d,ebx
  40b15b:	call   0x40b040
  40b160:	mov    ebx,eax
  40b162:	test   ebx,ebx
  40b164:	jle    0x40b176
  40b166:	lea    rcx,[rbp+0x38]
  40b16a:	mov    edx,ebx
  40b16c:	sub    edx,0x1
  40b16f:	call   0x4093b0
  40b174:	jmp    0x40b17f
  40b176:	lea    rcx,[rbp+0x38]
  40b17a:	call   0x4084e0
  40b17f:	mov    rcx,QWORD PTR [rbp+0x20]
  40b183:	mov    rdx,QWORD PTR [rbp+0x38]
  40b187:	call   0x4089b0
  40b18c:	nop
  40b18d:	lea    rcx,[rbp+0x38]
  40b191:	call   0x4084e0
  40b196:	mov    rax,QWORD PTR [rbp+0x20]
  40b19a:	lea    rsp,[rbp+0x48]
  40b19e:	pop    rbx
  40b19f:	pop    rbp
  40b1a0:	ret    
  40b1a1:	lea    rax,[rax+0x0]
  40b1a8:	lea    rax,[rax*1+0x0]
  40b1b0:	push   rbp
  40b1b1:	sub    rsp,0x20
  40b1b5:	mov    rbp,rsp
  40b1b8:	lea    rcx,[rdx+0x38]
  40b1bc:	call   0x4084e0
  40b1c1:	lea    rsp,[rbp+0x20]
  40b1c5:	pop    rbp
  40b1c6:	ret    
  40b1c7:	int3   
  40b1c8:	int3   
  40b1c9:	int3   
  40b1ca:	int3   
  40b1cb:	int3   
  40b1cc:	int3   
  40b1cd:	int3   
  40b1ce:	int3   
  40b1cf:	int3   
  40b1d0:	push   rbx
  40b1d1:	sub    rsp,0x20
  40b1d5:	mov    rbx,rcx
  40b1d8:	mov    rcx,rbx
  40b1db:	call   0x40b100
  40b1e0:	mov    rax,rbx
  40b1e3:	add    rsp,0x20
  40b1e7:	pop    rbx
  40b1e8:	ret    
  40b1e9:	int3   
  40b1ea:	int3   
  40b1eb:	int3   
  40b1ec:	int3   
  40b1ed:	int3   
  40b1ee:	int3   
  40b1ef:	int3   
  40b1f0:	sub    rsp,0x48
  40b1f4:	mov    rax,QWORD PTR [rsp+0x70]
  40b1f9:	mov    QWORD PTR [rsp+0x20],rax
  40b1fe:	mov    eax,DWORD PTR [rsp+0x78]
  40b202:	mov    DWORD PTR [rsp+0x28],eax
  40b206:	mov    rax,QWORD PTR [rsp+0x80]
  40b20e:	mov    QWORD PTR [rsp+0x30],rax
  40b213:	mov    rax,QWORD PTR [rsp+0x88]
  40b21b:	mov    QWORD PTR [rsp+0x38],rax
  40b220:	call   0x402a60
  40b225:	add    rsp,0x48
  40b229:	ret    
  40b22a:	int3   
  40b22b:	int3   
  40b22c:	int3   
  40b22d:	int3   
  40b22e:	int3   
  40b22f:	int3   
  40b230:	sub    rsp,0x38
  40b234:	mov    rax,QWORD PTR [rsp+0x60]
  40b239:	mov    QWORD PTR [rsp+0x20],rax
  40b23e:	mov    eax,DWORD PTR [rsp+0x68]
  40b242:	mov    DWORD PTR [rsp+0x28],eax
  40b246:	call   0x402a50
  40b24b:	add    rsp,0x38
  40b24f:	ret    
  40b250:	sub    rsp,0x58
  40b254:	lea    rcx,[rsp+0x20]
  40b259:	call   0x402b20
  40b25e:	mov    eax,DWORD PTR [rsp+0x40]
  40b262:	add    rsp,0x58
  40b266:	ret    
  40b267:	int3   
  40b268:	int3   
  40b269:	int3   
  40b26a:	int3   
  40b26b:	int3   
  40b26c:	int3   
  40b26d:	int3   
  40b26e:	int3   
  40b26f:	int3   
  40b270:	sub    rsp,0x28
  40b274:	call   0x402b10
  40b279:	mov    ecx,eax
  40b27b:	and    ecx,0xff
  40b281:	and    eax,0xff00
  40b287:	shr    eax,0x8
  40b28a:	cmp    ecx,0x5
  40b28d:	jne    0x40b294
  40b28f:	cmp    eax,0x1
  40b292:	jae    0x40b299
  40b294:	cmp    ecx,0x5
  40b297:	jbe    0x40b2a5
  40b299:	mov    DWORD PTR [rip+0xc6dd],0x7f        # 0x417980
  40b2a3:	jmp    0x40b2af
  40b2a5:	mov    DWORD PTR [rip+0xc6d1],0x409        # 0x417980
  40b2af:	add    rsp,0x28
  40b2b3:	ret    
  40b2b4:	int3   
  40b2b5:	int3   
  40b2b6:	int3   
  40b2b7:	int3   
  40b2b8:	int3   
  40b2b9:	int3   
  40b2ba:	int3   
  40b2bb:	int3   
  40b2bc:	int3   
  40b2bd:	int3   
  40b2be:	int3   
  40b2bf:	int3   
  40b2c0:	push   rbp
  40b2c1:	sub    rsp,0x20
  40b2c5:	mov    rbp,rsp
  40b2c8:	nop
  40b2c9:	add    DWORD PTR [rip+0xc6b8],0x1        # 0x417988
  40b2d0:	cmp    DWORD PTR [rip+0xc6b1],0x0        # 0x417988
  40b2d7:	jne    0x40b33d
  40b2d9:	lea    rcx,[rip+0x10b90]        # 0x41be70
  40b2e0:	call   0x40ad40
  40b2e5:	lea    rcx,[rip+0xbd9c]        # 0x417088
  40b2ec:	call   0x405b80
  40b2f1:	lea    rcx,[rip+0xc088]        # 0x417380
  40b2f8:	call   0x405b80
  40b2fd:	lea    rcx,[rip+0xc374]        # 0x417678
  40b304:	call   0x405b80
  40b309:	call   0x409e40
  40b30e:	cmp    QWORD PTR [rip+0xa3ea],0x0        # 0x415700
  40b316:	je     0x40b324
  40b318:	mov    rcx,QWORD PTR [rip+0xa3e1]        # 0x415700
  40b31f:	call   0x404ee0
  40b324:	call   0x404e40
  40b329:	lea    rcx,[rip+0x10b40]        # 0x41be70
  40b330:	mov    rdx,QWORD PTR [rip+0xfffffffffffff1d9]        # 0x40a510
  40b337:	call   0x409880
  40b33c:	nop
  40b33d:	lea    rsp,[rbp+0x20]
  40b341:	pop    rbp
  40b342:	ret    
  40b343:	lea    rax,[rax+riz*1+0x0]
  40b348:	lea    rax,[rax*1+0x0]
  40b350:	push   rbp
  40b351:	mov    rbp,rsp
  40b354:	mov    rsp,rbp
  40b357:	pop    rbp
  40b358:	ret    
  40b359:	int3   
  40b35a:	int3   
  40b35b:	int3   
  40b35c:	int3   
  40b35d:	int3   
  40b35e:	int3   
  40b35f:	int3   
  40b360:	push   rbp
  40b361:	sub    rsp,0x20
  40b365:	mov    rbp,rsp
  40b368:	nop
  40b369:	sub    DWORD PTR [rip+0xc618],0x1        # 0x417988
  40b370:	cmp    DWORD PTR [rip+0xc611],0xffffffff        # 0x417988
  40b377:	jne    0x40b437
  40b37d:	mov    ecx,0x400
  40b383:	call   0x402a70
  40b388:	call   0x404a10
  40b38d:	call   0x409d30
  40b392:	mov    BYTE PTR [rip+0x8c77],0x2        # 0x414010
  40b399:	lea    rax,[rip+0xffffffffffff75d0]        # 0x402970
  40b3a0:	mov    QWORD PTR [rip+0xbc81],rax        # 0x417028
  40b3a7:	lea    rax,[rip+0xffffffffffff75d2]        # 0x402980
  40b3ae:	mov    QWORD PTR [rip+0xbc7b],rax        # 0x417030
  40b3b5:	mov    BYTE PTR [rip+0xbcbe],0x2        # 0x41707a
  40b3bc:	call   0x40b250
  40b3c1:	mov    DWORD PTR [rip+0xbcb9],eax        # 0x417080
  40b3c7:	lea    rax,[rip+0xffffffffffffe7a2]        # 0x409b70
  40b3ce:	mov    QWORD PTR [rip+0xbc2b],rax        # 0x417000
  40b3d5:	call   0x4063a0
  40b3da:	call   0x4063d0
  40b3df:	mov    WORD PTR [rip+0xbca8],0xd7b0        # 0x417090
  40b3e8:	mov    WORD PTR [rip+0xbf97],0xd7b0        # 0x417388
  40b3f1:	mov    WORD PTR [rip+0xc286],0xd7b0        # 0x417680
  40b3fa:	call   0x4029d0
  40b3ff:	mov    QWORD PTR [rip+0xbc62],rax        # 0x417068
  40b406:	call   0x402b80
  40b40b:	mov    DWORD PTR [rip+0xbc4f],eax        # 0x417060
  40b411:	call   0x402a20
  40b416:	mov    DWORD PTR [rip+0xc55c],eax        # 0x417978
  40b41c:	mov    DWORD PTR [rip+0xc556],0x4b0        # 0x41797c
  40b426:	call   0x402940
  40b42b:	mov    DWORD PTR [rip+0xbc27],eax        # 0x417058
  40b431:	call   0x40b270
  40b436:	nop
  40b437:	lea    rsp,[rbp+0x20]
  40b43b:	pop    rbp
  40b43c:	ret    
  40b43d:	mov    rax,rax
  40b440:	push   rbp
  40b441:	mov    rbp,rsp
  40b444:	mov    rsp,rbp
  40b447:	pop    rbp
  40b448:	ret    
  40b449:	int3   
  40b44a:	int3   
  40b44b:	int3   
  40b44c:	int3   
  40b44d:	int3   
  40b44e:	int3   
  40b44f:	int3   
  40b450:	jmp    QWORD PTR [rip+0x131e2]        # 0x41e638
  40b456:	int3   
  40b457:	int3   
  40b458:	int3   
  40b459:	int3   
  40b45a:	int3   
  40b45b:	int3   
  40b45c:	int3   
  40b45d:	int3   
  40b45e:	int3   
  40b45f:	int3   
  40b460:	jmp    QWORD PTR [rip+0x131ca]        # 0x41e630
  40b466:	int3   
  40b467:	int3   
  40b468:	int3   
  40b469:	int3   
  40b46a:	int3   
  40b46b:	int3   
  40b46c:	int3   
  40b46d:	int3   
  40b46e:	int3   
  40b46f:	int3   
  40b470:	jmp    QWORD PTR [rip+0x131b2]        # 0x41e628
  40b476:	int3   
  40b477:	int3   
  40b478:	int3   
  40b479:	int3   
  40b47a:	int3   
  40b47b:	int3   
  40b47c:	int3   
  40b47d:	int3   
  40b47e:	int3   
  40b47f:	int3   
  40b480:	jmp    QWORD PTR [rip+0x1319a]        # 0x41e620
  40b486:	int3   
  40b487:	int3   
  40b488:	int3   
  40b489:	int3   
  40b48a:	int3   
  40b48b:	int3   
  40b48c:	int3   
  40b48d:	int3   
  40b48e:	int3   
  40b48f:	int3   
  40b490:	jmp    QWORD PTR [rip+0x13182]        # 0x41e618
  40b496:	int3   
  40b497:	int3   
  40b498:	int3   
  40b499:	int3   
  40b49a:	int3   
  40b49b:	int3   
  40b49c:	int3   
  40b49d:	int3   
  40b49e:	int3   
  40b49f:	int3   
  40b4a0:	jmp    QWORD PTR [rip+0x1316a]        # 0x41e610
  40b4a6:	int3   
  40b4a7:	int3   
  40b4a8:	int3   
  40b4a9:	int3   
  40b4aa:	int3   
  40b4ab:	int3   
  40b4ac:	int3   
  40b4ad:	int3   
  40b4ae:	int3   
  40b4af:	int3   
  40b4b0:	jmp    QWORD PTR [rip+0x13152]        # 0x41e608
  40b4b6:	int3   
  40b4b7:	int3   
  40b4b8:	int3   
  40b4b9:	int3   
  40b4ba:	int3   
  40b4bb:	int3   
  40b4bc:	int3   
  40b4bd:	int3   
  40b4be:	int3   
  40b4bf:	int3   
  40b4c0:	jmp    QWORD PTR [rip+0x1313a]        # 0x41e600
  40b4c6:	int3   
  40b4c7:	int3   
  40b4c8:	int3   
  40b4c9:	int3   
  40b4ca:	int3   
  40b4cb:	int3   
  40b4cc:	int3   
  40b4cd:	int3   
  40b4ce:	int3   
  40b4cf:	int3   
  40b4d0:	jmp    QWORD PTR [rip+0x13122]        # 0x41e5f8
  40b4d6:	int3   
  40b4d7:	int3   
  40b4d8:	int3   
  40b4d9:	int3   
  40b4da:	int3   
  40b4db:	int3   
  40b4dc:	int3   
  40b4dd:	int3   
  40b4de:	int3   
  40b4df:	int3   
  40b4e0:	jmp    QWORD PTR [rip+0x1310a]        # 0x41e5f0
  40b4e6:	int3   
  40b4e7:	int3   
  40b4e8:	int3   
  40b4e9:	int3   
  40b4ea:	int3   
  40b4eb:	int3   
  40b4ec:	int3   
  40b4ed:	int3   
  40b4ee:	int3   
  40b4ef:	int3   
  40b4f0:	sub    rsp,0x28
  40b4f4:	call   QWORD PTR [rip+0xa49e]        # 0x415998
  40b4fa:	add    rsp,0x28
  40b4fe:	ret    
  40b4ff:	int3   
  40b500:	sub    rsp,0x28
  40b504:	mov    eax,0x40
  40b50a:	mov    edx,ecx
  40b50c:	mov    ecx,eax
  40b50e:	call   0x40b470
  40b513:	add    rsp,0x28
  40b517:	ret    
  40b518:	int3   
  40b519:	int3   
  40b51a:	int3   
  40b51b:	int3   
  40b51c:	int3   
  40b51d:	int3   
  40b51e:	int3   
  40b51f:	int3   
  40b520:	lea    rax,ds:0x214
  40b528:	ret    
  40b529:	int3   
  40b52a:	int3   
  40b52b:	int3   
  40b52c:	int3   
  40b52d:	int3   
  40b52e:	int3   
  40b52f:	int3   
  40b530:	push   rbx
  40b531:	sub    rsp,0x20
  40b535:	call   0x40b520
  40b53a:	mov    ebx,eax
  40b53c:	test   ebx,ebx
  40b53e:	je     0x40b57b
  40b540:	cmp    DWORD PTR [rip+0xa445],0xffffffff        # 0x41598c
  40b547:	jne    0x40b554
  40b549:	mov    ecx,0xe2
  40b54f:	call   0x408330
  40b554:	mov    ecx,ebx
  40b556:	call   0x40b500
  40b55b:	test   rax,rax
  40b55e:	jne    0x40b56d
  40b560:	mov    ecx,0xe2
  40b566:	call   0x408330
  40b56b:	jmp    0x40b57b
  40b56d:	mov    ecx,DWORD PTR [rip+0xa419]        # 0x41598c
  40b573:	mov    rdx,rax
  40b576:	call   0x40b4a0
  40b57b:	add    rsp,0x20
  40b57f:	pop    rbx
  40b580:	ret    
  40b581:	int3   
  40b582:	int3   
  40b583:	int3   
  40b584:	int3   
  40b585:	int3   
  40b586:	int3   
  40b587:	int3   
  40b588:	int3   
  40b589:	int3   
  40b58a:	int3   
  40b58b:	int3   
  40b58c:	int3   
  40b58d:	int3   
  40b58e:	int3   
  40b58f:	int3   
  40b590:	sub    rsp,0x28
  40b594:	cmp    BYTE PTR [rip+0x11b6d],0x0        # 0x41d108
  40b59b:	je     0x40b5cb
  40b59d:	mov    ecx,DWORD PTR [rip+0xa3e9]        # 0x41598c
  40b5a3:	call   0x40b490
  40b5a8:	test   rax,rax
  40b5ab:	jne    0x40b5de
  40b5ad:	call   0x40b530
  40b5b2:	mov    ecx,DWORD PTR [rip+0xa3d4]        # 0x41598c
  40b5b8:	call   0x40b490
  40b5bd:	test   rax,rax
  40b5c0:	jne    0x40b5de
  40b5c2:	mov    rax,QWORD PTR [rip+0x11b77]        # 0x41d140
  40b5c9:	jmp    0x40b5de
  40b5cb:	mov    rax,QWORD PTR gs:0x58
  40b5d4:	mov    ecx,DWORD PTR [rip+0xa3b2]        # 0x41598c
  40b5da:	mov    rax,QWORD PTR [rax+rcx*8]
  40b5de:	add    rsp,0x28
  40b5e2:	ret    
  40b5e3:	int3   
  40b5e4:	int3   
  40b5e5:	int3   
  40b5e6:	int3   
  40b5e7:	int3   
  40b5e8:	int3   
  40b5e9:	int3   
  40b5ea:	int3   
  40b5eb:	int3   
  40b5ec:	int3   
  40b5ed:	int3   
  40b5ee:	int3   
  40b5ef:	int3   
  40b5f0:	sub    rsp,0x28
  40b5f4:	lea    rcx,[rip+0xa3b5]        # 0x4159b0
  40b5fb:	call   0x409ed0
  40b600:	add    rsp,0x28
  40b604:	ret    
  40b605:	int3   
  40b606:	int3   
  40b607:	int3   
  40b608:	int3   
  40b609:	int3   
  40b60a:	int3   
  40b60b:	int3   
  40b60c:	int3   
  40b60d:	int3   
  40b60e:	int3   
  40b60f:	int3   
  40b610:	ret    
  40b611:	int3   
  40b612:	int3   
  40b613:	int3   
  40b614:	int3   
  40b615:	int3   
  40b616:	int3   
  40b617:	int3   
  40b618:	int3   
  40b619:	int3   
  40b61a:	int3   
  40b61b:	int3   
  40b61c:	int3   
  40b61d:	int3   
  40b61e:	int3   
  40b61f:	int3   
  40b620:	sub    rsp,0x28
  40b624:	call   0x40b610
  40b629:	call   0x40b610
  40b62e:	call   0x40b610
  40b633:	call   0x40b610
  40b638:	call   0x40b610
  40b63d:	call   0x40b610
  40b642:	call   0x40b610
  40b647:	call   0x40b610
  40b64c:	call   0x40b610
  40b651:	call   0x40b610
  40b656:	call   0x40b610
  40b65b:	call   0x40b610
  40b660:	call   0x40b610
  40b665:	call   0x40b610
  40b66a:	call   0x40b610
  40b66f:	call   0x40b610
  40b674:	call   0x40b610
  40b679:	call   0x40b610
  40b67e:	call   0x40b610
  40b683:	call   0x40b610
  40b688:	call   0x40b610
  40b68d:	call   0x40b610
  40b692:	call   0x40b610
  40b697:	call   0x40b610
  40b69c:	call   0x40b610
  40b6a1:	call   0x40b610
  40b6a6:	call   0x40b610
  40b6ab:	call   0x40b610
  40b6b0:	call   0x40b610
  40b6b5:	call   0x40b610
  40b6ba:	call   0x40b610
  40b6bf:	call   0x40b610
  40b6c4:	call   0x40b610
  40b6c9:	call   0x40b610
  40b6ce:	call   0x40b610
  40b6d3:	call   0x40b610
  40b6d8:	call   0x40b610
  40b6dd:	call   0x40b610
  40b6e2:	call   0x40b610
  40b6e7:	call   0x40b610
  40b6ec:	call   0x40b610
  40b6f1:	call   0x40b610
  40b6f6:	call   0x40b610
  40b6fb:	call   0x40b610
  40b700:	call   0x40b610
  40b705:	call   0x40b610
  40b70a:	call   0x40b610
  40b70f:	call   0x40b610
  40b714:	call   0x40b610
  40b719:	call   0x40b610
  40b71e:	call   0x40b610
  40b723:	call   0x40b610
  40b728:	call   0x40b610
  40b72d:	call   0x40b610
  40b732:	call   0x40b610
  40b737:	call   0x40b610
  40b73c:	call   0x40b610
  40b741:	call   0x40b610
  40b746:	call   0x40b610
  40b74b:	call   0x40b610
  40b750:	call   0x40b610
  40b755:	call   0x40b610
  40b75a:	call   0x40b610
  40b75f:	call   0x40b610
  40b764:	call   0x40b610
  40b769:	call   0x40b610
  40b76e:	call   0x40b610
  40b773:	call   0x40b610
  40b778:	call   0x40b610
  40b77d:	call   0x40b610
  40b782:	call   0x40b610
  40b787:	call   0x40b610
  40b78c:	call   0x40b610
  40b791:	call   0x40b610
  40b796:	call   0x40b610
  40b79b:	call   0x40b610
  40b7a0:	call   0x40b610
  40b7a5:	call   0x40b610
  40b7aa:	call   0x40b610
  40b7af:	call   0x40b610
  40b7b4:	call   0x40b610
  40b7b9:	call   0x40b610
  40b7be:	call   0x40b610
  40b7c3:	call   0x40b610
  40b7c8:	call   0x40b610
  40b7cd:	call   0x40b610
  40b7d2:	call   0x40b610
  40b7d7:	call   0x40b610
  40b7dc:	call   0x40b610
  40b7e1:	call   0x40b610
  40b7e6:	call   0x40b610
  40b7eb:	call   0x40b610
  40b7f0:	call   0x40b610
  40b7f5:	call   0x40b610
  40b7fa:	call   0x40b610
  40b7ff:	call   0x40b610
  40b804:	call   0x40b610
  40b809:	call   0x40b610
  40b80e:	call   0x40b610
  40b813:	call   0x40b610
  40b818:	call   0x40b610
  40b81d:	call   0x40b610
  40b822:	call   0x40b610
  40b827:	call   0x40b610
  40b82c:	call   0x40b610
  40b831:	call   0x40b610
  40b836:	call   0x40b610
  40b83b:	call   0x40b610
  40b840:	call   0x40b610
  40b845:	call   0x40b610
  40b84a:	call   0x40b610
  40b84f:	call   0x40b610
  40b854:	call   0x40b610
  40b859:	call   0x40b610
  40b85e:	call   0x40b610
  40b863:	call   0x40b610
  40b868:	call   0x40b610
  40b86d:	call   0x40b610
  40b872:	call   0x40b610
  40b877:	call   0x40b610
  40b87c:	call   0x40b610
  40b881:	call   0x40b610
  40b886:	call   0x40b610
  40b88b:	call   0x40b610
  40b890:	call   0x40b610
  40b895:	call   0x40b610
  40b89a:	call   0x40b610
  40b89f:	call   0x40b610
  40b8a4:	call   0x40b610
  40b8a9:	call   0x40b610
  40b8ae:	call   0x40b610
  40b8b3:	call   0x40b610
  40b8b8:	call   0x40b610
  40b8bd:	call   0x40b610
  40b8c2:	call   0x40b610
  40b8c7:	call   0x40b610
  40b8cc:	call   0x40b610
  40b8d1:	call   0x40b610
  40b8d6:	call   0x40b610
  40b8db:	call   0x40b610
  40b8e0:	call   0x40b610
  40b8e5:	call   0x40b610
  40b8ea:	call   0x40b610
  40b8ef:	call   0x40b610
  40b8f4:	call   0x40b610
  40b8f9:	call   0x40b610
  40b8fe:	call   0x40b610
  40b903:	call   0x40b610
  40b908:	call   0x40b610
  40b90d:	call   0x40b610
  40b912:	call   0x40b610
  40b917:	call   0x40b610
  40b91c:	call   0x40b610
  40b921:	call   0x40b610
  40b926:	call   0x40b610
  40b92b:	call   0x40b610
  40b930:	call   0x40b610
  40b935:	call   0x40b610
  40b93a:	call   0x40b610
  40b93f:	call   0x40b610
  40b944:	call   0x40b610
  40b949:	call   0x40b610
  40b94e:	call   0x40b610
  40b953:	call   0x40b610
  40b958:	call   0x40b610
  40b95d:	call   0x40b610
  40b962:	call   0x40b610
  40b967:	call   0x40b610
  40b96c:	call   0x40b610
  40b971:	call   0x40b610
  40b976:	call   0x40b610
  40b97b:	call   0x40b610
  40b980:	call   0x40b610
  40b985:	call   0x40b610
  40b98a:	call   0x40b610
  40b98f:	call   0x40b610
  40b994:	call   0x40b610
  40b999:	call   0x40b610
  40b99e:	call   0x40b610
  40b9a3:	call   0x40b610
  40b9a8:	call   0x40b610
  40b9ad:	call   0x40b610
  40b9b2:	call   0x40b610
  40b9b7:	call   0x40b610
  40b9bc:	call   0x40b610
  40b9c1:	call   0x40b610
  40b9c6:	call   0x40b610
  40b9cb:	call   0x40b610
  40b9d0:	call   0x40b610
  40b9d5:	call   0x40b610
  40b9da:	call   0x40b610
  40b9df:	call   0x40b610
  40b9e4:	call   0x40b610
  40b9e9:	call   0x40b610
  40b9ee:	call   0x40b610
  40b9f3:	call   0x40b610
  40b9f8:	call   0x40b610
  40b9fd:	call   0x40b610
  40ba02:	call   0x40b610
  40ba07:	call   0x40b610
  40ba0c:	add    rsp,0x28
  40ba10:	ret    
  40ba11:	int3   
  40ba12:	int3   
  40ba13:	int3   
  40ba14:	int3   
  40ba15:	int3   
  40ba16:	int3   
  40ba17:	int3   
  40ba18:	int3   
  40ba19:	int3   
  40ba1a:	int3   
  40ba1b:	int3   
  40ba1c:	int3   
  40ba1d:	int3   
  40ba1e:	int3   
  40ba1f:	int3   
  40ba20:	push   rbp
  40ba21:	sub    rsp,0x110
  40ba28:	mov    rbp,rsp
  40ba2b:	mov    QWORD PTR [rbp+0xf8],rbp
  40ba32:	mov    QWORD PTR [rbp+0x108],0x0
  40ba3d:	nop
  40ba3e:	mov    rcx,QWORD PTR [rbp+0x108]
  40ba45:	mov    rdx,QWORD PTR [rbp+0x108]
  40ba4c:	mov    r8,QWORD PTR [rbp+0x108]
  40ba53:	mov    r9,QWORD PTR [rbp+0x108]
  40ba5a:	mov    rax,QWORD PTR [rbp+0x108]
  40ba61:	mov    QWORD PTR [rsp+0x20],rax
  40ba66:	mov    rax,QWORD PTR [rbp+0x108]
  40ba6d:	mov    QWORD PTR [rsp+0x28],rax
  40ba72:	mov    rax,QWORD PTR [rbp+0x108]
  40ba79:	mov    QWORD PTR [rsp+0x30],rax
  40ba7e:	mov    rax,QWORD PTR [rbp+0x108]
  40ba85:	mov    QWORD PTR [rsp+0x38],rax
  40ba8a:	mov    rax,QWORD PTR [rbp+0x108]
  40ba91:	mov    QWORD PTR [rsp+0x40],rax
  40ba96:	mov    rax,QWORD PTR [rbp+0x108]
  40ba9d:	mov    QWORD PTR [rsp+0x48],rax
  40baa2:	mov    rax,QWORD PTR [rbp+0x108]
  40baa9:	mov    QWORD PTR [rsp+0x50],rax
  40baae:	mov    rax,QWORD PTR [rbp+0x108]
  40bab5:	mov    QWORD PTR [rsp+0x58],rax
  40baba:	mov    rax,QWORD PTR [rbp+0x108]
  40bac1:	mov    QWORD PTR [rsp+0x60],rax
  40bac6:	mov    rax,QWORD PTR [rbp+0x108]
  40bacd:	mov    QWORD PTR [rsp+0x68],rax
  40bad2:	mov    rax,QWORD PTR [rbp+0x108]
  40bad9:	mov    QWORD PTR [rsp+0x70],rax
  40bade:	mov    rax,QWORD PTR [rbp+0x108]
  40bae5:	mov    QWORD PTR [rsp+0x78],rax
  40baea:	mov    rax,QWORD PTR [rbp+0x108]
  40baf1:	mov    QWORD PTR [rsp+0x80],rax
  40baf9:	mov    rax,QWORD PTR [rbp+0x108]
  40bb00:	mov    QWORD PTR [rsp+0x88],rax
  40bb08:	mov    rax,QWORD PTR [rbp+0x108]
  40bb0f:	mov    QWORD PTR [rsp+0x90],rax
  40bb17:	mov    rax,QWORD PTR [rbp+0x108]
  40bb1e:	mov    QWORD PTR [rsp+0x98],rax
  40bb26:	mov    rax,QWORD PTR [rbp+0x108]
  40bb2d:	mov    QWORD PTR [rsp+0xa0],rax
  40bb35:	mov    rax,QWORD PTR [rbp+0x108]
  40bb3c:	mov    QWORD PTR [rsp+0xa8],rax
  40bb44:	mov    rax,QWORD PTR [rbp+0x108]
  40bb4b:	mov    QWORD PTR [rsp+0xb0],rax
  40bb53:	mov    rax,QWORD PTR [rbp+0x108]
  40bb5a:	mov    QWORD PTR [rsp+0xb8],rax
  40bb62:	mov    rax,QWORD PTR [rbp+0x108]
  40bb69:	mov    QWORD PTR [rsp+0xc0],rax
  40bb71:	mov    rax,QWORD PTR [rbp+0x108]
  40bb78:	mov    QWORD PTR [rsp+0xc8],rax
  40bb80:	mov    rax,QWORD PTR [rbp+0x108]
  40bb87:	mov    QWORD PTR [rsp+0xd0],rax
  40bb8f:	mov    rax,QWORD PTR [rbp+0x108]
  40bb96:	mov    QWORD PTR [rsp+0xd8],rax
  40bb9e:	mov    rax,QWORD PTR [rbp+0x108]
  40bba5:	mov    QWORD PTR [rsp+0xe0],rax
  40bbad:	mov    rax,QWORD PTR [rbp+0x108]
  40bbb4:	mov    QWORD PTR [rsp+0xe8],rax
  40bbbc:	call   0x40b620
  40bbc1:	jmp    0x40bd51
  40bbc6:	nop
  40bbc7:	nop
  40bbc8:	mov    rcx,QWORD PTR [rbp+0x108]
  40bbcf:	mov    rdx,QWORD PTR [rbp+0x108]
  40bbd6:	mov    r8,QWORD PTR [rbp+0x108]
  40bbdd:	mov    r9,QWORD PTR [rbp+0x108]
  40bbe4:	mov    rax,QWORD PTR [rbp+0x108]
  40bbeb:	mov    QWORD PTR [rsp+0x20],rax
  40bbf0:	mov    rax,QWORD PTR [rbp+0x108]
  40bbf7:	mov    QWORD PTR [rsp+0x28],rax
  40bbfc:	mov    rax,QWORD PTR [rbp+0x108]
  40bc03:	mov    QWORD PTR [rsp+0x30],rax
  40bc08:	mov    rax,QWORD PTR [rbp+0x108]
  40bc0f:	mov    QWORD PTR [rsp+0x38],rax
  40bc14:	mov    rax,QWORD PTR [rbp+0x108]
  40bc1b:	mov    QWORD PTR [rsp+0x40],rax
  40bc20:	mov    rax,QWORD PTR [rbp+0x108]
  40bc27:	mov    QWORD PTR [rsp+0x48],rax
  40bc2c:	mov    rax,QWORD PTR [rbp+0x108]
  40bc33:	mov    QWORD PTR [rsp+0x50],rax
  40bc38:	mov    rax,QWORD PTR [rbp+0x108]
  40bc3f:	mov    QWORD PTR [rsp+0x58],rax
  40bc44:	mov    rax,QWORD PTR [rbp+0x108]
  40bc4b:	mov    QWORD PTR [rsp+0x60],rax
  40bc50:	mov    rax,QWORD PTR [rbp+0x108]
  40bc57:	mov    QWORD PTR [rsp+0x68],rax
  40bc5c:	mov    rax,QWORD PTR [rbp+0x108]
  40bc63:	mov    QWORD PTR [rsp+0x70],rax
  40bc68:	mov    rax,QWORD PTR [rbp+0x108]
  40bc6f:	mov    QWORD PTR [rsp+0x78],rax
  40bc74:	mov    rax,QWORD PTR [rbp+0x108]
  40bc7b:	mov    QWORD PTR [rsp+0x80],rax
  40bc83:	mov    rax,QWORD PTR [rbp+0x108]
  40bc8a:	mov    QWORD PTR [rsp+0x88],rax
  40bc92:	mov    rax,QWORD PTR [rbp+0x108]
  40bc99:	mov    QWORD PTR [rsp+0x90],rax
  40bca1:	mov    rax,QWORD PTR [rbp+0x108]
  40bca8:	mov    QWORD PTR [rsp+0x98],rax
  40bcb0:	mov    rax,QWORD PTR [rbp+0x108]
  40bcb7:	mov    QWORD PTR [rsp+0xa0],rax
  40bcbf:	mov    rax,QWORD PTR [rbp+0x108]
  40bcc6:	mov    QWORD PTR [rsp+0xa8],rax
  40bcce:	mov    rax,QWORD PTR [rbp+0x108]
  40bcd5:	mov    QWORD PTR [rsp+0xb0],rax
  40bcdd:	mov    rax,QWORD PTR [rbp+0x108]
  40bce4:	mov    QWORD PTR [rsp+0xb8],rax
  40bcec:	mov    rax,QWORD PTR [rbp+0x108]
  40bcf3:	mov    QWORD PTR [rsp+0xc0],rax
  40bcfb:	mov    rax,QWORD PTR [rbp+0x108]
  40bd02:	mov    QWORD PTR [rsp+0xc8],rax
  40bd0a:	mov    rax,QWORD PTR [rbp+0x108]
  40bd11:	mov    QWORD PTR [rsp+0xd0],rax
  40bd19:	mov    rax,QWORD PTR [rbp+0x108]
  40bd20:	mov    QWORD PTR [rsp+0xd8],rax
  40bd28:	mov    rax,QWORD PTR [rbp+0x108]
  40bd2f:	mov    QWORD PTR [rsp+0xe0],rax
  40bd37:	mov    rax,QWORD PTR [rbp+0x108]
  40bd3e:	mov    QWORD PTR [rsp+0xe8],rax
  40bd46:	call   0x40b620
  40bd4b:	call   0x407d00
  40bd50:	nop
  40bd51:	lea    rsp,[rbp+0x110]
  40bd58:	pop    rbp
  40bd59:	ret    
  40bd5a:	lea    rax,fs:[rax+riz*1+0x0]
  40bd60:	sub    rsp,0x28
  40bd64:	call   0x407c30
  40bd69:	add    rsp,0x28
  40bd6d:	ret    
  40bd6e:	int3   
  40bd6f:	int3   
  40bd70:	push   rbx
  40bd71:	sub    rsp,0x20
  40bd75:	mov    rbx,rcx
  40bd78:	mov    DWORD PTR [rip+0x9c0a],0x0        # 0x41598c
  40bd82:	xor    rcx,rcx
  40bd85:	call   0x40b460
  40bd8a:	mov    QWORD PTR [rip+0x1137f],rax        # 0x41d110
  40bd91:	mov    rax,QWORD PTR [rip+0x11378]        # 0x41d110
  40bd98:	mov    QWORD PTR [rip+0x9c19],rax        # 0x4159b8
  40bd9f:	mov    QWORD PTR [rip+0x9c16],0x0        # 0x4159c0
  40bdaa:	mov    QWORD PTR [rip+0x9c13],0x0        # 0x4159c8
  40bdb5:	lea    rax,[rbx+0x10]
  40bdb9:	mov    QWORD PTR [rip+0x9c18],rax        # 0x4159d8
  40bdc0:	lea    rax,[rip+0xfffffffffffffc59]        # 0x40ba20
  40bdc7:	mov    QWORD PTR [rip+0x11352],rax        # 0x41d120
  40bdce:	call   0x40b5f0
  40bdd3:	mov    rcx,rbx
  40bdd6:	lea    rdx,[rip+0x9bd3]        # 0x4159b0
  40bddd:	call   0x407eb0
  40bde2:	add    rsp,0x20
  40bde6:	pop    rbx
  40bde7:	ret    
  40bde8:	int3   
  40bde9:	int3   
  40bdea:	int3   
  40bdeb:	int3   
  40bdec:	int3   
  40bded:	int3   
  40bdee:	int3   
  40bdef:	int3   
  40bdf0:	mov    QWORD PTR [rsp+0x10],rdx
  40bdf5:	mov    QWORD PTR [rsp+0x8],rcx
  40bdfa:	push   rdi
  40bdfb:	sub    rsp,0x130
  40be02:	mov    rax,QWORD PTR [rsp+0x140]
  40be0a:	mov    eax,DWORD PTR [rax]
  40be0c:	mov    DWORD PTR [rsp+0xa0],eax
  40be13:	mov    rax,QWORD PTR [rsp+0x140]
  40be1b:	mov    ecx,DWORD PTR [rax+0x4]
  40be1e:	call   0x40ca80
  40be23:	mov    QWORD PTR [rsp+0xa8],rax
  40be2b:	mov    rax,QWORD PTR [rsp+0x140]
  40be33:	mov    ecx,DWORD PTR [rax+0x8]
  40be36:	call   0x40caa0
  40be3b:	mov    QWORD PTR [rsp+0xb0],rax
  40be43:	mov    rax,QWORD PTR [rsp+0x140]
  40be4b:	mov    ecx,DWORD PTR [rax+0xc]
  40be4e:	call   0x40cac0
  40be53:	mov    QWORD PTR [rsp+0xb8],rax
  40be5b:	mov    rax,QWORD PTR [rsp+0x140]
  40be63:	mov    ecx,DWORD PTR [rax+0x10]
  40be66:	call   0x40cae0
  40be6b:	mov    QWORD PTR [rsp+0xc0],rax
  40be73:	mov    rax,QWORD PTR [rsp+0x140]
  40be7b:	mov    ecx,DWORD PTR [rax+0x14]
  40be7e:	call   0x40cae0
  40be83:	mov    QWORD PTR [rsp+0xc8],rax
  40be8b:	mov    rax,QWORD PTR [rsp+0x140]
  40be93:	mov    ecx,DWORD PTR [rax+0x18]
  40be96:	call   0x40cae0
  40be9b:	mov    QWORD PTR [rsp+0xd0],rax
  40bea3:	mov    rax,QWORD PTR [rsp+0x140]
  40beab:	mov    eax,DWORD PTR [rax+0x1c]
  40beae:	mov    DWORD PTR [rsp+0xd8],eax
  40beb5:	mov    DWORD PTR [rsp+0x40],0x48
  40bebd:	mov    rax,QWORD PTR [rsp+0x140]
  40bec5:	mov    QWORD PTR [rsp+0x48],rax
  40beca:	mov    rax,QWORD PTR [rsp+0x148]
  40bed2:	mov    QWORD PTR [rsp+0x50],rax
  40bed7:	mov    rax,QWORD PTR [rsp+0xa8]
  40bedf:	mov    QWORD PTR [rsp+0x58],rax
  40bee4:	mov    DWORD PTR [rsp+0x60],0x0
  40beec:	lea    rdi,[rsp+0x68]
  40bef1:	xor    eax,eax
  40bef3:	mov    ecx,0x8
  40bef8:	rep stos BYTE PTR es:[rdi],al
  40befa:	mov    QWORD PTR [rsp+0x70],0x0
  40bf03:	mov    QWORD PTR [rsp+0x78],0x0
  40bf0c:	mov    DWORD PTR [rsp+0x80],0x0
  40bf17:	mov    eax,DWORD PTR [rsp+0xa0]
  40bf1e:	and    eax,0x1
  40bf21:	test   eax,eax
  40bf23:	jne    0x40bf53
  40bf25:	lea    rax,[rsp+0x40]
  40bf2a:	mov    QWORD PTR [rsp+0xe8],rax
  40bf32:	lea    r9,[rsp+0xe8]
  40bf3a:	mov    r8d,0x1
  40bf40:	xor    edx,edx
  40bf42:	mov    ecx,0xc06d0057
  40bf47:	call   0x40b4d0
  40bf4c:	xor    eax,eax
  40bf4e:	jmp    0x40c324
  40bf53:	mov    rax,QWORD PTR [rsp+0xb0]
  40bf5b:	mov    rax,QWORD PTR [rax]
  40bf5e:	mov    QWORD PTR [rsp+0x20],rax
  40bf63:	mov    rdx,QWORD PTR [rsp+0xb8]
  40bf6b:	mov    rcx,QWORD PTR [rsp+0x148]
  40bf73:	call   0x40c870
  40bf78:	mov    DWORD PTR [rsp+0x30],eax
  40bf7c:	mov    eax,DWORD PTR [rsp+0x30]
  40bf80:	mov    DWORD PTR [rsp+0x90],eax
  40bf87:	mov    ecx,DWORD PTR [rsp+0x90]
  40bf8e:	mov    rax,QWORD PTR [rsp+0xc0]
  40bf96:	lea    rax,[rax+rcx*8]
  40bf9a:	mov    QWORD PTR [rsp+0xe0],rax
  40bfa2:	mov    rax,QWORD PTR [rsp+0xe0]
  40bfaa:	movabs rcx,0x8000000000000000
  40bfb4:	mov    rax,QWORD PTR [rax]
  40bfb7:	and    rax,rcx
  40bfba:	test   rax,rax
  40bfbd:	jne    0x40bfcc
  40bfbf:	mov    DWORD PTR [rsp+0x118],0x1
  40bfca:	jmp    0x40bfd7
  40bfcc:	mov    DWORD PTR [rsp+0x118],0x0
  40bfd7:	mov    eax,DWORD PTR [rsp+0x118]
  40bfde:	mov    DWORD PTR [rsp+0x60],eax
  40bfe2:	cmp    DWORD PTR [rsp+0x60],0x0
  40bfe7:	je     0x40c003
  40bfe9:	mov    rax,QWORD PTR [rsp+0xe0]
  40bff1:	mov    ecx,DWORD PTR [rax]
  40bff3:	call   0x40cb00
  40bff8:	add    rax,0x2
  40bffc:	mov    QWORD PTR [rsp+0x68],rax
  40c001:	jmp    0x40c018
  40c003:	mov    rax,QWORD PTR [rsp+0xe0]
  40c00b:	mov    rax,QWORD PTR [rax]
  40c00e:	and    rax,0xffff
  40c014:	mov    DWORD PTR [rsp+0x68],eax
  40c018:	mov    QWORD PTR [rsp+0x28],0x0
  40c021:	cmp    QWORD PTR [rip+0x110ff],0x0        # 0x41d128
  40c029:	je     0x40c04f
  40c02b:	lea    rdx,[rsp+0x40]
  40c030:	xor    ecx,ecx
  40c032:	call   QWORD PTR [rip+0x110f0]        # 0x41d128
  40c038:	mov    QWORD PTR [rsp+0x28],rax
  40c03d:	cmp    QWORD PTR [rsp+0x28],0x0
  40c043:	je     0x40c04f
  40c045:	jmp    0x40c2e6
  40c04a:	jmp    0x40c2e6
  40c04f:	cmp    QWORD PTR [rsp+0x20],0x0
  40c055:	jne    0x40c189
  40c05b:	cmp    QWORD PTR [rip+0x110c5],0x0        # 0x41d128
  40c063:	je     0x40c07a
  40c065:	lea    rdx,[rsp+0x40]
  40c06a:	mov    ecx,0x1
  40c06f:	call   QWORD PTR [rip+0x110b3]        # 0x41d128
  40c075:	mov    QWORD PTR [rsp+0x20],rax
  40c07a:	cmp    QWORD PTR [rsp+0x20],0x0
  40c080:	jne    0x40c091
  40c082:	mov    rcx,QWORD PTR [rsp+0x58]
  40c087:	call   0x40b4c0
  40c08c:	mov    QWORD PTR [rsp+0x20],rax
  40c091:	cmp    QWORD PTR [rsp+0x20],0x0
  40c097:	jne    0x40c0fd
  40c099:	call   0x40b4b0
  40c09e:	mov    DWORD PTR [rsp+0x80],eax
  40c0a5:	cmp    QWORD PTR [rip+0x11083],0x0        # 0x41d130
  40c0ad:	je     0x40c0c4
  40c0af:	lea    rdx,[rsp+0x40]
  40c0b4:	mov    ecx,0x3
  40c0b9:	call   QWORD PTR [rip+0x11071]        # 0x41d130
  40c0bf:	mov    QWORD PTR [rsp+0x20],rax
  40c0c4:	cmp    QWORD PTR [rsp+0x20],0x0
  40c0ca:	jne    0x40c0fd
  40c0cc:	lea    rax,[rsp+0x40]
  40c0d1:	mov    QWORD PTR [rsp+0xf8],rax
  40c0d9:	lea    r9,[rsp+0xf8]
  40c0e1:	mov    r8d,0x1
  40c0e7:	xor    edx,edx
  40c0e9:	mov    ecx,0xc06d007e
  40c0ee:	call   0x40b4d0
  40c0f3:	mov    rax,QWORD PTR [rsp+0x78]
  40c0f8:	jmp    0x40c324
  40c0fd:	mov    rcx,QWORD PTR [rsp+0x20]
  40c102:	mov    rax,QWORD PTR [rsp+0xb0]
  40c10a:	xchg   QWORD PTR [rax],rcx
  40c10d:	mov    rax,rcx
  40c110:	mov    QWORD PTR [rsp+0xf0],rax
  40c118:	mov    rax,QWORD PTR [rsp+0x20]
  40c11d:	cmp    QWORD PTR [rsp+0xf0],rax
  40c125:	je     0x40c17f
  40c127:	mov    rax,QWORD PTR [rsp+0x140]
  40c12f:	cmp    DWORD PTR [rax+0x18],0x0
  40c133:	je     0x40c17d
  40c135:	mov    ecx,0x10
  40c13a:	call   0x40c8c0
  40c13f:	mov    QWORD PTR [rsp+0x110],rax
  40c147:	cmp    QWORD PTR [rsp+0x110],0x0
  40c150:	je     0x40c171
  40c152:	mov    rdx,QWORD PTR [rsp+0x140]
  40c15a:	mov    rcx,QWORD PTR [rsp+0x110]
  40c162:	call   0x40c890
  40c167:	mov    QWORD PTR [rsp+0x120],rax
  40c16f:	jmp    0x40c17d
  40c171:	mov    QWORD PTR [rsp+0x120],0x0
  40c17d:	jmp    0x40c189
  40c17f:	mov    rcx,QWORD PTR [rsp+0x20]
  40c184:	call   0x40b450
  40c189:	mov    rax,QWORD PTR [rsp+0x20]
  40c18e:	mov    QWORD PTR [rsp+0x70],rax
  40c193:	cmp    QWORD PTR [rip+0x10f8d],0x0        # 0x41d128
  40c19b:	je     0x40c1b2
  40c19d:	lea    rdx,[rsp+0x40]
  40c1a2:	mov    ecx,0x2
  40c1a7:	call   QWORD PTR [rip+0x10f7b]        # 0x41d128
  40c1ad:	mov    QWORD PTR [rsp+0x28],rax
  40c1b2:	cmp    QWORD PTR [rsp+0x28],0x0
  40c1b8:	jne    0x40c26a
  40c1be:	mov    rax,QWORD PTR [rsp+0x140]
  40c1c6:	cmp    DWORD PTR [rax+0x14],0x0
  40c1ca:	je     0x40c256
  40c1d0:	mov    rax,QWORD PTR [rsp+0x140]
  40c1d8:	cmp    DWORD PTR [rax+0x1c],0x0
  40c1dc:	je     0x40c256
  40c1de:	mov    rcx,QWORD PTR [rsp+0x20]
  40c1e3:	call   0x40c340
  40c1e8:	mov    QWORD PTR [rsp+0x100],rax
  40c1f0:	mov    rax,QWORD PTR [rsp+0x100]
  40c1f8:	cmp    DWORD PTR [rax],0x4550
  40c1fe:	jne    0x40c256
  40c200:	mov    rcx,QWORD PTR [rsp+0x100]
  40c208:	call   0x40c360
  40c20d:	cmp    eax,DWORD PTR [rsp+0xd8]
  40c214:	jne    0x40c256
  40c216:	mov    rdx,QWORD PTR [rsp+0x20]
  40c21b:	mov    rcx,QWORD PTR [rsp+0x100]
  40c223:	call   0x40c380
  40c228:	movzx  eax,al
  40c22b:	test   eax,eax
  40c22d:	je     0x40c256
  40c22f:	mov    ecx,DWORD PTR [rsp+0x30]
  40c233:	mov    rax,QWORD PTR [rsp+0xc8]
  40c23b:	mov    rax,QWORD PTR [rax+rcx*8]
  40c23f:	mov    QWORD PTR [rsp+0x28],rax
  40c244:	cmp    QWORD PTR [rsp+0x28],0x0
  40c24a:	je     0x40c256
  40c24c:	jmp    0x40c2d6
  40c251:	jmp    0x40c2d6
  40c256:	mov    rdx,QWORD PTR [rsp+0x68]
  40c25b:	mov    rcx,QWORD PTR [rsp+0x20]
  40c260:	call   0x40b4e0
  40c265:	mov    QWORD PTR [rsp+0x28],rax
  40c26a:	cmp    QWORD PTR [rsp+0x28],0x0
  40c270:	jne    0x40c2d6
  40c272:	call   0x40b4b0
  40c277:	mov    DWORD PTR [rsp+0x80],eax
  40c27e:	cmp    QWORD PTR [rip+0x10eaa],0x0        # 0x41d130
  40c286:	je     0x40c29d
  40c288:	lea    rdx,[rsp+0x40]
  40c28d:	mov    ecx,0x4
  40c292:	call   QWORD PTR [rip+0x10e98]        # 0x41d130
  40c298:	mov    QWORD PTR [rsp+0x28],rax
  40c29d:	cmp    QWORD PTR [rsp+0x28],0x0
  40c2a3:	jne    0x40c2d6
  40c2a5:	lea    rax,[rsp+0x40]
  40c2aa:	mov    QWORD PTR [rsp+0x108],rax
  40c2b2:	lea    r9,[rsp+0x108]
  40c2ba:	mov    r8d,0x1
  40c2c0:	xor    edx,edx
  40c2c2:	mov    ecx,0xc06d007f
  40c2c7:	call   0x40b4d0
  40c2cc:	mov    rdx,QWORD PTR [rsp+0x78]
  40c2d1:	mov    QWORD PTR [rsp+0x28],rdx
  40c2d6:	mov    rcx,QWORD PTR [rsp+0x148]
  40c2de:	mov    rax,QWORD PTR [rsp+0x28]
  40c2e3:	mov    QWORD PTR [rcx],rax
  40c2e6:	cmp    QWORD PTR [rip+0x10e3a],0x0        # 0x41d128
  40c2ee:	je     0x40c31f
  40c2f0:	mov    DWORD PTR [rsp+0x80],0x0
  40c2fb:	mov    rax,QWORD PTR [rsp+0x20]
  40c300:	mov    QWORD PTR [rsp+0x70],rax
  40c305:	mov    rax,QWORD PTR [rsp+0x28]
  40c30a:	mov    QWORD PTR [rsp+0x78],rax
  40c30f:	lea    rdx,[rsp+0x40]
  40c314:	mov    ecx,0x5
  40c319:	call   QWORD PTR [rip+0x10e09]        # 0x41d128
  40c31f:	mov    rax,QWORD PTR [rsp+0x28]
  40c324:	add    rsp,0x130
  40c32b:	pop    rdi
  40c32c:	ret    
  40c32d:	int3   
  40c32e:	int3   
  40c32f:	int3   
  40c330:	int3   
  40c331:	int3   
  40c332:	int3   
  40c333:	int3   
  40c334:	int3   
  40c335:	int3   
  40c336:	int3   
  40c337:	int3   
  40c338:	int3   
  40c339:	int3   
  40c33a:	int3   
  40c33b:	int3   
  40c33c:	int3   
  40c33d:	int3   
  40c33e:	int3   
  40c33f:	int3   
  40c340:	mov    QWORD PTR [rsp+0x8],rcx
  40c345:	mov    rax,QWORD PTR [rsp+0x8]
  40c34a:	movsxd rcx,DWORD PTR [rax+0x3c]
  40c34e:	mov    rax,QWORD PTR [rsp+0x8]
  40c353:	add    rax,rcx
  40c356:	ret    
  40c357:	int3   
  40c358:	int3   
  40c359:	int3   
  40c35a:	int3   
  40c35b:	int3   
  40c35c:	int3   
  40c35d:	int3   
  40c35e:	int3   
  40c35f:	int3   
  40c360:	mov    QWORD PTR [rsp+0x8],rcx
  40c365:	mov    rax,QWORD PTR [rsp+0x8]
  40c36a:	mov    eax,DWORD PTR [rax+0x8]
  40c36d:	ret    
  40c36e:	int3   
  40c36f:	int3   
  40c370:	int3   
  40c371:	int3   
  40c372:	int3   
  40c373:	int3   
  40c374:	int3   
  40c375:	int3   
  40c376:	int3   
  40c377:	int3   
  40c378:	int3   
  40c379:	int3   
  40c37a:	int3   
  40c37b:	int3   
  40c37c:	int3   
  40c37d:	int3   
  40c37e:	int3   
  40c37f:	int3   
  40c380:	mov    QWORD PTR [rsp+0x10],rdx
  40c385:	mov    QWORD PTR [rsp+0x8],rcx
  40c38a:	sub    rsp,0x18
  40c38e:	mov    rax,QWORD PTR [rsp+0x20]
  40c393:	mov    rax,QWORD PTR [rax+0x30]
  40c397:	cmp    QWORD PTR [rsp+0x28],rax
  40c39c:	jne    0x40c3a7
  40c39e:	mov    DWORD PTR [rsp],0x1
  40c3a5:	jmp    0x40c3ae
  40c3a7:	mov    DWORD PTR [rsp],0x0
  40c3ae:	mov    al,BYTE PTR [rsp]
  40c3b1:	add    rsp,0x18
  40c3b5:	ret    
  40c3b6:	int3   
  40c3b7:	int3   
  40c3b8:	int3   
  40c3b9:	int3   
  40c3ba:	int3   
  40c3bb:	int3   
  40c3bc:	int3   
  40c3bd:	int3   
  40c3be:	int3   
  40c3bf:	int3   
  40c3c0:	mov    QWORD PTR [rsp+0x8],rcx
  40c3c5:	push   rbx
  40c3c6:	sub    rsp,0x90
  40c3cd:	mov    DWORD PTR [rsp+0x38],0x0
  40c3d5:	mov    rax,QWORD PTR [rip+0x10d6c]        # 0x41d148
  40c3dc:	mov    QWORD PTR [rsp+0x20],rax
  40c3e1:	cmp    QWORD PTR [rsp+0xa0],0x0
  40c3ea:	je     0x40c400
  40c3ec:	mov    rcx,QWORD PTR [rsp+0xa0]
  40c3f4:	call   0x40c5a0
  40c3f9:	mov    QWORD PTR [rsp+0x78],rax
  40c3fe:	jmp    0x40c409
  40c400:	mov    QWORD PTR [rsp+0x78],0x0
  40c409:	mov    rax,QWORD PTR [rsp+0x78]
  40c40e:	mov    QWORD PTR [rsp+0x28],rax
  40c413:	mov    rax,QWORD PTR [rip+0x10d2e]        # 0x41d148
  40c41a:	mov    QWORD PTR [rsp+0x20],rax
  40c41f:	jmp    0x40c42b
  40c421:	mov    rax,QWORD PTR [rsp+0x30]
  40c426:	mov    QWORD PTR [rsp+0x20],rax
  40c42b:	cmp    QWORD PTR [rsp+0x20],0x0
  40c431:	je     0x40c582
  40c437:	mov    rax,QWORD PTR [rsp+0x20]
  40c43c:	mov    rax,QWORD PTR [rax+0x8]
  40c440:	mov    ecx,DWORD PTR [rax+0x4]
  40c443:	call   0x40ca80
  40c448:	mov    QWORD PTR [rsp+0x48],rax
  40c44d:	mov    rcx,QWORD PTR [rsp+0x48]
  40c452:	call   0x40c5a0
  40c457:	mov    QWORD PTR [rsp+0x40],rax
  40c45c:	mov    rax,QWORD PTR [rsp+0x20]
  40c461:	mov    rax,QWORD PTR [rax]
  40c464:	mov    QWORD PTR [rsp+0x30],rax
  40c469:	cmp    QWORD PTR [rsp+0xa0],0x0
  40c472:	je     0x40c49d
  40c474:	mov    rax,QWORD PTR [rsp+0x28]
  40c479:	cmp    QWORD PTR [rsp+0x40],rax
  40c47e:	jne    0x40c49b
  40c480:	mov    r8,QWORD PTR [rsp+0x40]
  40c485:	mov    rdx,QWORD PTR [rsp+0x48]
  40c48a:	mov    rcx,QWORD PTR [rsp+0xa0]
  40c492:	call   0x40c5f0
  40c497:	test   eax,eax
  40c499:	je     0x40c49d
  40c49b:	jmp    0x40c421
  40c49d:	cmp    QWORD PTR [rsp+0x20],0x0
  40c4a3:	je     0x40c570
  40c4a9:	mov    rax,QWORD PTR [rsp+0x20]
  40c4ae:	mov    rax,QWORD PTR [rax+0x8]
  40c4b2:	cmp    DWORD PTR [rax+0x18],0x0
  40c4b6:	je     0x40c570
  40c4bc:	mov    rax,QWORD PTR [rsp+0x20]
  40c4c1:	mov    rax,QWORD PTR [rax+0x8]
  40c4c5:	mov    QWORD PTR [rsp+0x60],rax
  40c4ca:	mov    rax,QWORD PTR [rsp+0x60]
  40c4cf:	mov    ecx,DWORD PTR [rax+0x8]
  40c4d2:	call   0x40caa0
  40c4d7:	mov    QWORD PTR [rsp+0x58],rax
  40c4dc:	mov    rax,QWORD PTR [rsp+0x58]
  40c4e1:	mov    rax,QWORD PTR [rax]
  40c4e4:	mov    QWORD PTR [rsp+0x50],rax
  40c4e9:	mov    rax,QWORD PTR [rsp+0x60]
  40c4ee:	mov    ecx,DWORD PTR [rax+0x18]
  40c4f1:	call   0x40cae0
  40c4f6:	mov    rbx,rax
  40c4f9:	mov    rax,QWORD PTR [rsp+0x60]
  40c4fe:	mov    ecx,DWORD PTR [rax+0xc]
  40c501:	call   0x40cac0
  40c506:	mov    rdx,rbx
  40c509:	mov    rcx,rax
  40c50c:	call   0x40c670
  40c511:	mov    rcx,QWORD PTR [rsp+0x50]
  40c516:	call   0x40b450
  40c51b:	mov    r11,QWORD PTR [rsp+0x58]
  40c520:	mov    QWORD PTR [r11],0x0
  40c527:	mov    rax,QWORD PTR [rsp+0x20]
  40c52c:	mov    QWORD PTR [rsp+0x70],rax
  40c531:	mov    rax,QWORD PTR [rsp+0x70]
  40c536:	mov    QWORD PTR [rsp+0x68],rax
  40c53b:	cmp    QWORD PTR [rsp+0x68],0x0
  40c541:	je     0x40c55c
  40c543:	mov    edx,0x1
  40c548:	mov    rcx,QWORD PTR [rsp+0x68]
  40c54d:	call   0x40c960
  40c552:	mov    QWORD PTR [rsp+0x80],rax
  40c55a:	jmp    0x40c568
  40c55c:	mov    QWORD PTR [rsp+0x80],0x0
  40c568:	mov    DWORD PTR [rsp+0x38],0x1
  40c570:	cmp    QWORD PTR [rsp+0xa0],0x0
  40c579:	je     0x40c57d
  40c57b:	jmp    0x40c582
  40c57d:	jmp    0x40c421
  40c582:	mov    eax,DWORD PTR [rsp+0x38]
  40c586:	add    rsp,0x90
  40c58d:	pop    rbx
  40c58e:	ret    
  40c58f:	int3   
  40c590:	int3   
  40c591:	int3   
  40c592:	int3   
  40c593:	int3   
  40c594:	int3   
  40c595:	int3   
  40c596:	int3   
  40c597:	int3   
  40c598:	int3   
  40c599:	int3   
  40c59a:	int3   
  40c59b:	int3   
  40c59c:	int3   
  40c59d:	int3   
  40c59e:	int3   
  40c59f:	int3   
  40c5a0:	mov    QWORD PTR [rsp+0x8],rcx
  40c5a5:	sub    rsp,0x18
  40c5a9:	mov    rax,QWORD PTR [rsp+0x20]
  40c5ae:	mov    QWORD PTR [rsp],rax
  40c5b2:	mov    rax,QWORD PTR [rsp]
  40c5b6:	movsx  ecx,BYTE PTR [rax]
  40c5b9:	mov    rax,QWORD PTR [rsp]
  40c5bd:	add    rax,0x1
  40c5c1:	mov    QWORD PTR [rsp],rax
  40c5c5:	test   ecx,ecx
  40c5c7:	je     0x40c5cb
  40c5c9:	jmp    0x40c5b2
  40c5cb:	mov    rcx,QWORD PTR [rsp+0x20]
  40c5d0:	mov    rax,QWORD PTR [rsp]
  40c5d4:	sub    rax,rcx
  40c5d7:	sub    rax,0x1
  40c5db:	add    rsp,0x18
  40c5df:	ret    
  40c5e0:	int3   
  40c5e1:	int3   
  40c5e2:	int3   
  40c5e3:	int3   
  40c5e4:	int3   
  40c5e5:	int3   
  40c5e6:	int3   
  40c5e7:	int3   
  40c5e8:	int3   
  40c5e9:	int3   
  40c5ea:	int3   
  40c5eb:	int3   
  40c5ec:	int3   
  40c5ed:	int3   
  40c5ee:	int3   
  40c5ef:	int3   
  40c5f0:	mov    QWORD PTR [rsp+0x18],r8
  40c5f5:	mov    QWORD PTR [rsp+0x10],rdx
  40c5fa:	mov    QWORD PTR [rsp+0x8],rcx
  40c5ff:	cmp    QWORD PTR [rsp+0x18],0x0
  40c605:	jne    0x40c60b
  40c607:	xor    eax,eax
  40c609:	jmp    0x40c667
  40c60b:	mov    rax,QWORD PTR [rsp+0x18]
  40c610:	sub    rax,0x1
  40c614:	mov    QWORD PTR [rsp+0x18],rax
  40c619:	cmp    QWORD PTR [rsp+0x18],0x0
  40c61f:	je     0x40c653
  40c621:	mov    rax,QWORD PTR [rsp+0x8]
  40c626:	movsx  ecx,BYTE PTR [rax]
  40c629:	mov    rax,QWORD PTR [rsp+0x10]
  40c62e:	movsx  eax,BYTE PTR [rax]
  40c631:	cmp    ecx,eax
  40c633:	jne    0x40c653
  40c635:	mov    rax,QWORD PTR [rsp+0x8]
  40c63a:	add    rax,0x1
  40c63e:	mov    QWORD PTR [rsp+0x8],rax
  40c643:	mov    rax,QWORD PTR [rsp+0x10]
  40c648:	add    rax,0x1
  40c64c:	mov    QWORD PTR [rsp+0x10],rax
  40c651:	jmp    0x40c60b
  40c653:	mov    rax,QWORD PTR [rsp+0x8]
  40c658:	movzx  edx,BYTE PTR [rax]
  40c65b:	mov    rax,QWORD PTR [rsp+0x10]
  40c660:	movzx  ecx,BYTE PTR [rax]
  40c663:	mov    eax,edx
  40c665:	sub    eax,ecx
  40c667:	repz ret 
  40c669:	int3   
  40c66a:	int3   
  40c66b:	int3   
  40c66c:	int3   
  40c66d:	int3   
  40c66e:	int3   
  40c66f:	int3   
  40c670:	mov    QWORD PTR [rsp+0x10],rdx
  40c675:	mov    QWORD PTR [rsp+0x8],rcx
  40c67a:	sub    rsp,0x28
  40c67e:	mov    rcx,QWORD PTR [rsp+0x30]
  40c683:	call   0x40c910
  40c688:	mov    r8d,eax
  40c68b:	shl    r8,0x3
  40c68f:	mov    rdx,QWORD PTR [rsp+0x38]
  40c694:	mov    rcx,QWORD PTR [rsp+0x30]
  40c699:	call   0x40c6b0
  40c69e:	add    rsp,0x28
  40c6a2:	ret    
  40c6a3:	int3   
  40c6a4:	int3   
  40c6a5:	int3   
  40c6a6:	int3   
  40c6a7:	int3   
  40c6a8:	int3   
  40c6a9:	int3   
  40c6aa:	int3   
  40c6ab:	int3   
  40c6ac:	int3   
  40c6ad:	int3   
  40c6ae:	int3   
  40c6af:	int3   
  40c6b0:	mov    QWORD PTR [rsp+0x18],r8
  40c6b5:	mov    QWORD PTR [rsp+0x10],rdx
  40c6ba:	mov    QWORD PTR [rsp+0x8],rcx
  40c6bf:	sub    rsp,0x18
  40c6c3:	mov    rax,QWORD PTR [rsp+0x20]
  40c6c8:	mov    QWORD PTR [rsp],rax
  40c6cc:	mov    rcx,QWORD PTR [rsp+0x30]
  40c6d1:	mov    rax,QWORD PTR [rsp+0x30]
  40c6d6:	sub    rax,0x1
  40c6da:	mov    QWORD PTR [rsp+0x30],rax
  40c6df:	test   rcx,rcx
  40c6e2:	je     0x40c711
  40c6e4:	mov    rcx,QWORD PTR [rsp+0x20]
  40c6e9:	mov    rax,QWORD PTR [rsp+0x28]
  40c6ee:	movzx  eax,BYTE PTR [rax]
  40c6f1:	mov    BYTE PTR [rcx],al
  40c6f3:	mov    rax,QWORD PTR [rsp+0x20]
  40c6f8:	add    rax,0x1
  40c6fc:	mov    QWORD PTR [rsp+0x20],rax
  40c701:	mov    rax,QWORD PTR [rsp+0x28]
  40c706:	add    rax,0x1
  40c70a:	mov    QWORD PTR [rsp+0x28],rax
  40c70f:	jmp    0x40c6cc
  40c711:	mov    rax,QWORD PTR [rsp]
  40c715:	add    rsp,0x18
  40c719:	ret    
  40c71a:	int3   
  40c71b:	int3   
  40c71c:	int3   
  40c71d:	int3   
  40c71e:	int3   
  40c71f:	int3   
  40c720:	mov    QWORD PTR [rsp+0x8],rcx
  40c725:	sub    rsp,0x68
  40c729:	mov    ecx,0x7e
  40c72e:	call   0x40ca40
  40c733:	mov    DWORD PTR [rsp+0x28],eax
  40c737:	lea    rcx,[rip+0xffffffffffff38c2]        # 0x400000
  40c73e:	call   0x40c340
  40c743:	mov    QWORD PTR [rsp+0x20],rax
  40c748:	mov    rax,QWORD PTR [rsp+0x20]
  40c74d:	cmp    DWORD PTR [rax+0xf4],0x0
  40c754:	je     0x40c84c
  40c75a:	mov    rax,QWORD PTR [rsp+0x20]
  40c75f:	mov    ecx,DWORD PTR [rax+0xf0]
  40c765:	call   0x40cb20
  40c76a:	mov    QWORD PTR [rsp+0x30],rax
  40c76f:	mov    rax,QWORD PTR [rsp+0x30]
  40c774:	cmp    DWORD PTR [rax+0x4],0x0
  40c778:	je     0x40c7d6
  40c77a:	mov    rax,QWORD PTR [rsp+0x30]
  40c77f:	mov    ecx,DWORD PTR [rax+0x4]
  40c782:	call   0x40ca80
  40c787:	mov    QWORD PTR [rsp+0x38],rax
  40c78c:	mov    rcx,QWORD PTR [rsp+0x38]
  40c791:	call   0x40c5a0
  40c796:	mov    QWORD PTR [rsp+0x40],rax
  40c79b:	mov    rcx,QWORD PTR [rsp+0x70]
  40c7a0:	call   0x40c5a0
  40c7a5:	cmp    QWORD PTR [rsp+0x40],rax
  40c7aa:	jne    0x40c7c6
  40c7ac:	mov    r8,QWORD PTR [rsp+0x40]
  40c7b1:	mov    rdx,QWORD PTR [rsp+0x38]
  40c7b6:	mov    rcx,QWORD PTR [rsp+0x70]
  40c7bb:	call   0x40c5f0
  40c7c0:	test   eax,eax
  40c7c2:	jne    0x40c7c6
  40c7c4:	jmp    0x40c7d6
  40c7c6:	mov    rax,QWORD PTR [rsp+0x30]
  40c7cb:	add    rax,0x20
  40c7cf:	mov    QWORD PTR [rsp+0x30],rax
  40c7d4:	jmp    0x40c76f
  40c7d6:	mov    rax,QWORD PTR [rsp+0x30]
  40c7db:	cmp    DWORD PTR [rax+0x4],0x0
  40c7df:	je     0x40c84c
  40c7e1:	mov    rax,QWORD PTR [rsp+0x30]
  40c7e6:	mov    ecx,DWORD PTR [rax+0xc]
  40c7e9:	call   0x40cb40
  40c7ee:	mov    QWORD PTR [rsp+0x48],rax
  40c7f3:	mov    rcx,QWORD PTR [rsp+0x48]
  40c7f8:	call   0x40c910
  40c7fd:	mov    eax,eax
  40c7ff:	mov    QWORD PTR [rsp+0x58],rax
  40c804:	mov    rcx,QWORD PTR [rsp+0x48]
  40c809:	mov    rax,QWORD PTR [rsp+0x58]
  40c80e:	lea    rax,[rcx+rax*8]
  40c812:	mov    QWORD PTR [rsp+0x50],rax
  40c817:	jmp    0x40c827
  40c819:	mov    rax,QWORD PTR [rsp+0x48]
  40c81e:	add    rax,0x8
  40c822:	mov    QWORD PTR [rsp+0x48],rax
  40c827:	mov    rax,QWORD PTR [rsp+0x50]
  40c82c:	cmp    QWORD PTR [rsp+0x48],rax
  40c831:	jae    0x40c844
  40c833:	mov    rdx,QWORD PTR [rsp+0x48]
  40c838:	mov    rcx,QWORD PTR [rsp+0x30]
  40c83d:	call   0x40bdf0
  40c842:	jmp    0x40c819
  40c844:	mov    DWORD PTR [rsp+0x28],0x0
  40c84c:	mov    eax,DWORD PTR [rsp+0x28]
  40c850:	add    rsp,0x68
  40c854:	ret    
  40c855:	int3   
  40c856:	int3   
  40c857:	int3   
  40c858:	int3   
  40c859:	int3   
  40c85a:	int3   
  40c85b:	int3   
  40c85c:	int3   
  40c85d:	int3   
  40c85e:	int3   
  40c85f:	int3   
  40c860:	sub    rsp,0x28
  40c864:	xor    ecx,ecx
  40c866:	call   0x40c3c0
  40c86b:	add    rsp,0x28
  40c86f:	ret    
  40c870:	mov    QWORD PTR [rsp+0x10],rdx
  40c875:	mov    QWORD PTR [rsp+0x8],rcx
  40c87a:	mov    rcx,QWORD PTR [rsp+0x10]
  40c87f:	mov    rax,QWORD PTR [rsp+0x8]
  40c884:	sub    rax,rcx
  40c887:	sar    rax,0x3
  40c88b:	ret    
  40c88c:	int3   
  40c88d:	int3   
  40c88e:	int3   
  40c88f:	int3   
  40c890:	mov    QWORD PTR [rsp+0x10],rdx
  40c895:	mov    QWORD PTR [rsp+0x8],rcx
  40c89a:	sub    rsp,0x28
  40c89e:	mov    rcx,QWORD PTR [rsp+0x30]
  40c8a3:	mov    rax,QWORD PTR [rsp+0x38]
  40c8a8:	mov    QWORD PTR [rcx+0x8],rax
  40c8ac:	mov    rcx,QWORD PTR [rsp+0x30]
  40c8b1:	call   0x40c8e0
  40c8b6:	mov    rax,QWORD PTR [rsp+0x30]
  40c8bb:	add    rsp,0x28
  40c8bf:	ret    
  40c8c0:	mov    QWORD PTR [rsp+0x8],rcx
  40c8c5:	sub    rsp,0x28
  40c8c9:	mov    rdx,QWORD PTR [rsp+0x30]
  40c8ce:	mov    ecx,0x40
  40c8d3:	call   0x40b470
  40c8d8:	add    rsp,0x28
  40c8dc:	ret    
  40c8dd:	int3   
  40c8de:	int3   
  40c8df:	int3   
  40c8e0:	mov    QWORD PTR [rsp+0x8],rcx
  40c8e5:	mov    rcx,QWORD PTR [rsp+0x8]
  40c8ea:	mov    rax,QWORD PTR [rip+0x10857]        # 0x41d148
  40c8f1:	mov    QWORD PTR [rcx],rax
  40c8f4:	mov    rax,QWORD PTR [rsp+0x8]
  40c8f9:	mov    QWORD PTR [rip+0x10848],rax        # 0x41d148
  40c900:	ret    
  40c901:	int3   
  40c902:	int3   
  40c903:	int3   
  40c904:	int3   
  40c905:	int3   
  40c906:	int3   
  40c907:	int3   
  40c908:	int3   
  40c909:	int3   
  40c90a:	int3   
  40c90b:	int3   
  40c90c:	int3   
  40c90d:	int3   
  40c90e:	int3   
  40c90f:	int3   
  40c910:	mov    QWORD PTR [rsp+0x8],rcx
  40c915:	sub    rsp,0x18
  40c919:	mov    DWORD PTR [rsp],0x0
  40c920:	mov    rax,QWORD PTR [rsp+0x20]
  40c925:	mov    QWORD PTR [rsp+0x8],rax
  40c92a:	mov    rax,QWORD PTR [rsp+0x8]
  40c92f:	cmp    QWORD PTR [rax],0x0
  40c933:	je     0x40c94e
  40c935:	mov    rax,QWORD PTR [rsp+0x8]
  40c93a:	add    rax,0x8
  40c93e:	mov    QWORD PTR [rsp+0x8],rax
  40c943:	mov    eax,DWORD PTR [rsp]
  40c946:	add    eax,0x1
  40c949:	mov    DWORD PTR [rsp],eax
  40c94c:	jmp    0x40c92a
  40c94e:	mov    eax,DWORD PTR [rsp]
  40c951:	add    rsp,0x18
  40c955:	ret    
  40c956:	int3   
  40c957:	int3   
  40c958:	int3   
  40c959:	int3   
  40c95a:	int3   
  40c95b:	int3   
  40c95c:	int3   
  40c95d:	int3   
  40c95e:	int3   
  40c95f:	int3   
  40c960:	mov    DWORD PTR [rsp+0x10],edx
  40c964:	mov    QWORD PTR [rsp+0x8],rcx
  40c969:	sub    rsp,0x28
  40c96d:	mov    rcx,QWORD PTR [rsp+0x30]
  40c972:	call   0x40c9a0
  40c977:	mov    eax,DWORD PTR [rsp+0x38]
  40c97b:	and    eax,0x1
  40c97e:	test   eax,eax
  40c980:	je     0x40c98c
  40c982:	mov    rcx,QWORD PTR [rsp+0x30]
  40c987:	call   0x40c9c0
  40c98c:	mov    rax,QWORD PTR [rsp+0x30]
  40c991:	add    rsp,0x28
  40c995:	ret    
  40c996:	int3   
  40c997:	int3   
  40c998:	int3   
  40c999:	int3   
  40c99a:	int3   
  40c99b:	int3   
  40c99c:	int3   
  40c99d:	int3   
  40c99e:	int3   
  40c99f:	int3   
  40c9a0:	mov    QWORD PTR [rsp+0x8],rcx
  40c9a5:	sub    rsp,0x28
  40c9a9:	mov    rcx,QWORD PTR [rsp+0x30]
  40c9ae:	call   0x40c9e0
  40c9b3:	add    rsp,0x28
  40c9b7:	ret    
  40c9b8:	int3   
  40c9b9:	int3   
  40c9ba:	int3   
  40c9bb:	int3   
  40c9bc:	int3   
  40c9bd:	int3   
  40c9be:	int3   
  40c9bf:	int3   
  40c9c0:	mov    QWORD PTR [rsp+0x8],rcx
  40c9c5:	sub    rsp,0x28
  40c9c9:	mov    rcx,QWORD PTR [rsp+0x30]
  40c9ce:	call   0x40b480
  40c9d3:	add    rsp,0x28
  40c9d7:	ret    
  40c9d8:	int3   
  40c9d9:	int3   
  40c9da:	int3   
  40c9db:	int3   
  40c9dc:	int3   
  40c9dd:	int3   
  40c9de:	int3   
  40c9df:	int3   
  40c9e0:	mov    QWORD PTR [rsp+0x8],rcx
  40c9e5:	sub    rsp,0x18
  40c9e9:	lea    rax,[rip+0x10758]        # 0x41d148
  40c9f0:	mov    QWORD PTR [rsp],rax
  40c9f4:	mov    rax,QWORD PTR [rsp]
  40c9f8:	cmp    QWORD PTR [rax],0x0
  40c9fc:	je     0x40ca19
  40c9fe:	mov    rcx,QWORD PTR [rsp]
  40ca02:	mov    rax,QWORD PTR [rsp+0x20]
  40ca07:	cmp    QWORD PTR [rcx],rax
  40ca0a:	je     0x40ca19
  40ca0c:	mov    rax,QWORD PTR [rsp]
  40ca10:	mov    rax,QWORD PTR [rax]
  40ca13:	mov    QWORD PTR [rsp],rax
  40ca17:	jmp    0x40c9f4
  40ca19:	mov    rcx,QWORD PTR [rsp]
  40ca1d:	mov    rax,QWORD PTR [rsp+0x20]
  40ca22:	cmp    QWORD PTR [rcx],rax
  40ca25:	jne    0x40ca36
  40ca27:	mov    rcx,QWORD PTR [rsp]
  40ca2b:	mov    rax,QWORD PTR [rsp+0x20]
  40ca30:	mov    rax,QWORD PTR [rax]
  40ca33:	mov    QWORD PTR [rcx],rax
  40ca36:	add    rsp,0x18
  40ca3a:	ret    
  40ca3b:	int3   
  40ca3c:	int3   
  40ca3d:	int3   
  40ca3e:	int3   
  40ca3f:	int3   
  40ca40:	mov    DWORD PTR [rsp+0x8],ecx
  40ca44:	sub    rsp,0x18
  40ca48:	cmp    DWORD PTR [rsp+0x20],0x0
  40ca4d:	jg     0x40ca58
  40ca4f:	mov    eax,DWORD PTR [rsp+0x20]
  40ca53:	mov    DWORD PTR [rsp],eax
  40ca56:	jmp    0x40ca6e
  40ca58:	mov    eax,DWORD PTR [rsp+0x20]
  40ca5c:	and    eax,0xffff
  40ca61:	or     eax,0x70000
  40ca66:	or     eax,0x80000000
  40ca6b:	mov    DWORD PTR [rsp],eax
  40ca6e:	mov    eax,DWORD PTR [rsp]
  40ca71:	add    rsp,0x18
  40ca75:	ret    
  40ca76:	int3   
  40ca77:	int3   
  40ca78:	int3   
  40ca79:	int3   
  40ca7a:	int3   
  40ca7b:	int3   
  40ca7c:	int3   
  40ca7d:	int3   
  40ca7e:	int3   
  40ca7f:	int3   
  40ca80:	mov    DWORD PTR [rsp+0x8],ecx
  40ca84:	mov    ecx,DWORD PTR [rsp+0x8]
  40ca88:	lea    rax,[rip+0xffffffffffff3571]        # 0x400000
  40ca8f:	add    rax,rcx
  40ca92:	ret    
  40ca93:	int3   
  40ca94:	int3   
  40ca95:	int3   
  40ca96:	int3   
  40ca97:	int3   
  40ca98:	int3   
  40ca99:	int3   
  40ca9a:	int3   
  40ca9b:	int3   
  40ca9c:	int3   
  40ca9d:	int3   
  40ca9e:	int3   
  40ca9f:	int3   
  40caa0:	mov    DWORD PTR [rsp+0x8],ecx
  40caa4:	mov    ecx,DWORD PTR [rsp+0x8]
  40caa8:	lea    rax,[rip+0xffffffffffff3551]        # 0x400000
  40caaf:	add    rax,rcx
  40cab2:	ret    
  40cab3:	int3   
  40cab4:	int3   
  40cab5:	int3   
  40cab6:	int3   
  40cab7:	int3   
  40cab8:	int3   
  40cab9:	int3   
  40caba:	int3   
  40cabb:	int3   
  40cabc:	int3   
  40cabd:	int3   
  40cabe:	int3   
  40cabf:	int3   
  40cac0:	mov    DWORD PTR [rsp+0x8],ecx
  40cac4:	mov    ecx,DWORD PTR [rsp+0x8]
  40cac8:	lea    rax,[rip+0xffffffffffff3531]        # 0x400000
  40cacf:	add    rax,rcx
  40cad2:	ret    
  40cad3:	int3   
  40cad4:	int3   
  40cad5:	int3   
  40cad6:	int3   
  40cad7:	int3   
  40cad8:	int3   
  40cad9:	int3   
  40cada:	int3   
  40cadb:	int3   
  40cadc:	int3   
  40cadd:	int3   
  40cade:	int3   
  40cadf:	int3   
  40cae0:	mov    DWORD PTR [rsp+0x8],ecx
  40cae4:	mov    ecx,DWORD PTR [rsp+0x8]
  40cae8:	lea    rax,[rip+0xffffffffffff3511]        # 0x400000
  40caef:	add    rax,rcx
  40caf2:	ret    
  40caf3:	int3   
  40caf4:	int3   
  40caf5:	int3   
  40caf6:	int3   
  40caf7:	int3   
  40caf8:	int3   
  40caf9:	int3   
  40cafa:	int3   
  40cafb:	int3   
  40cafc:	int3   
  40cafd:	int3   
  40cafe:	int3   
  40caff:	int3   
  40cb00:	mov    DWORD PTR [rsp+0x8],ecx
  40cb04:	mov    ecx,DWORD PTR [rsp+0x8]
  40cb08:	lea    rax,[rip+0xffffffffffff34f1]        # 0x400000
  40cb0f:	add    rax,rcx
  40cb12:	ret    
  40cb13:	int3   
  40cb14:	int3   
  40cb15:	int3   
  40cb16:	int3   
  40cb17:	int3   
  40cb18:	int3   
  40cb19:	int3   
  40cb1a:	int3   
  40cb1b:	int3   
  40cb1c:	int3   
  40cb1d:	int3   
  40cb1e:	int3   
  40cb1f:	int3   
  40cb20:	mov    DWORD PTR [rsp+0x8],ecx
  40cb24:	mov    ecx,DWORD PTR [rsp+0x8]
  40cb28:	lea    rax,[rip+0xffffffffffff34d1]        # 0x400000
  40cb2f:	add    rax,rcx
  40cb32:	ret    
  40cb33:	int3   
  40cb34:	int3   
  40cb35:	int3   
  40cb36:	int3   
  40cb37:	int3   
  40cb38:	int3   
  40cb39:	int3   
  40cb3a:	int3   
  40cb3b:	int3   
  40cb3c:	int3   
  40cb3d:	int3   
  40cb3e:	int3   
  40cb3f:	int3   
  40cb40:	mov    DWORD PTR [rsp+0x8],ecx
  40cb44:	mov    ecx,DWORD PTR [rsp+0x8]
  40cb48:	lea    rax,[rip+0xffffffffffff34b1]        # 0x400000
  40cb4f:	add    rax,rcx
  40cb52:	ret    
  40cb53:	int3   
  40cb54:	int3   
  40cb55:	int3   
  40cb56:	int3   
  40cb57:	int3   
  40cb58:	int3   
  40cb59:	int3   
  40cb5a:	int3   
  40cb5b:	int3   
  40cb5c:	int3   
  40cb5d:	int3   
  40cb5e:	int3   
  40cb5f:	int3   
  40cb60:	sub    rsp,0x28
  40cb64:	add    DWORD PTR [rip+0x105cd],0x1        # 0x41d138
  40cb6b:	cmp    DWORD PTR [rip+0x105c6],0x0        # 0x41d138
  40cb72:	jne    0x40cb79
  40cb74:	call   0x40c860
  40cb79:	add    rsp,0x28
  40cb7d:	ret    
  40cb7e:	int3   
  40cb7f:	int3   
  40cb80:	sub    DWORD PTR [rip+0x105b1],0x1        # 0x41d138
  40cb87:	cmp    DWORD PTR [rip+0x105aa],0xffffffff        # 0x41d138
  40cb8e:	ret    
  40cb8f:	int3   
  40cb90:	add    DWORD PTR [rip+0x105b9],0x1        # 0x41d150
  40cb97:	cmp    DWORD PTR [rip+0x105b2],0x0        # 0x41d150
  40cb9e:	ret    
  40cb9f:	int3   
  40cba0:	sub    DWORD PTR [rip+0x105a9],0x1        # 0x41d150
  40cba7:	cmp    DWORD PTR [rip+0x105a2],0xffffffff        # 0x41d150
  40cbae:	ret    
  40cbaf:	int3   
  40cbb0:	add    DWORD PTR [rip+0x1059d],0x1        # 0x41d154
  40cbb7:	cmp    DWORD PTR [rip+0x10596],0x0        # 0x41d154
  40cbbe:	ret    
  40cbbf:	int3   
  40cbc0:	sub    DWORD PTR [rip+0x1058d],0x1        # 0x41d154
  40cbc7:	cmp    DWORD PTR [rip+0x10586],0xffffffff        # 0x41d154
  40cbce:	ret    
  40cbcf:	int3   
  40cbd0:	jmp    QWORD PTR [rip+0x11b6a]        # 0x41e740
  40cbd6:	int3   
  40cbd7:	int3   
  40cbd8:	int3   
  40cbd9:	int3   
  40cbda:	int3   
  40cbdb:	int3   
  40cbdc:	int3   
  40cbdd:	int3   
  40cbde:	int3   
  40cbdf:	int3   
  40cbe0:	jmp    QWORD PTR [rip+0x11b52]        # 0x41e738
  40cbe6:	int3   
  40cbe7:	int3   
  40cbe8:	int3   
  40cbe9:	int3   
  40cbea:	int3   
  40cbeb:	int3   
  40cbec:	int3   
  40cbed:	int3   
  40cbee:	int3   
  40cbef:	int3   
  40cbf0:	jmp    QWORD PTR [rip+0x11b3a]        # 0x41e730
  40cbf6:	int3   
  40cbf7:	int3   
  40cbf8:	int3   
  40cbf9:	int3   
  40cbfa:	int3   
  40cbfb:	int3   
  40cbfc:	int3   
  40cbfd:	int3   
  40cbfe:	int3   
  40cbff:	int3   
  40cc00:	jmp    QWORD PTR [rip+0x11b22]        # 0x41e728
  40cc06:	int3   
  40cc07:	int3   
  40cc08:	int3   
  40cc09:	int3   
  40cc0a:	int3   
  40cc0b:	int3   
  40cc0c:	int3   
  40cc0d:	int3   
  40cc0e:	int3   
  40cc0f:	int3   
  40cc10:	jmp    QWORD PTR [rip+0x11b0a]        # 0x41e720
  40cc16:	int3   
  40cc17:	int3   
  40cc18:	int3   
  40cc19:	int3   
  40cc1a:	int3   
  40cc1b:	int3   
  40cc1c:	int3   
  40cc1d:	int3   
  40cc1e:	int3   
  40cc1f:	int3   
  40cc20:	jmp    QWORD PTR [rip+0x11aea]        # 0x41e710
  40cc26:	int3   
  40cc27:	int3   
  40cc28:	int3   
  40cc29:	int3   
  40cc2a:	int3   
  40cc2b:	int3   
  40cc2c:	int3   
  40cc2d:	int3   
  40cc2e:	int3   
  40cc2f:	int3   
  40cc30:	jmp    QWORD PTR [rip+0x11ad2]        # 0x41e708
  40cc36:	int3   
  40cc37:	int3   
  40cc38:	int3   
  40cc39:	int3   
  40cc3a:	int3   
  40cc3b:	int3   
  40cc3c:	int3   
  40cc3d:	int3   
  40cc3e:	int3   
  40cc3f:	int3   
  40cc40:	push   rcx
  40cc41:	lea    rcx,[rip+0x133d8]        # 0x420020
  40cc48:	push   r8
  40cc4a:	push   r9
  40cc4c:	sub    rsp,0x68
  40cc50:	movapd XMMWORD PTR [rsp+0x20],xmm0
  40cc56:	movapd XMMWORD PTR [rsp+0x30],xmm1
  40cc5c:	movapd XMMWORD PTR [rsp+0x40],xmm2
  40cc62:	movapd XMMWORD PTR [rsp+0x50],xmm3
  40cc68:	call   0x40b4f0
  40cc6d:	movapd xmm3,XMMWORD PTR [rsp+0x50]
  40cc73:	movapd xmm2,XMMWORD PTR [rsp+0x40]
  40cc79:	movapd xmm1,XMMWORD PTR [rsp+0x30]
  40cc7f:	movapd xmm0,XMMWORD PTR [rsp+0x20]
  40cc85:	add    rsp,0x68
  40cc89:	pop    r9
  40cc8b:	pop    r8
  40cc8d:	pop    rcx
  40cc8e:	pop    rdx
  40cc8f:	jmp    rax
  40cc91:	int3   
  40cc92:	int3   
  40cc93:	int3   
  40cc94:	int3   
  40cc95:	int3   
  40cc96:	int3   
  40cc97:	int3   
  40cc98:	int3   
  40cc99:	int3   
  40cc9a:	int3   
  40cc9b:	int3   
  40cc9c:	int3   
  40cc9d:	int3   
  40cc9e:	int3   
  40cc9f:	int3   
  40cca0:	jmp    QWORD PTR [rip+0x11a5a]        # 0x41e700
  40cca6:	int3   
  40cca7:	int3   
  40cca8:	int3   
  40cca9:	int3   
  40ccaa:	int3   
  40ccab:	int3   
  40ccac:	int3   
  40ccad:	int3   
  40ccae:	int3   
  40ccaf:	int3   
  40ccb0:	jmp    QWORD PTR [rip+0x11a42]        # 0x41e6f8
  40ccb6:	int3   
  40ccb7:	int3   
  40ccb8:	int3   
  40ccb9:	int3   
  40ccba:	int3   
  40ccbb:	int3   
  40ccbc:	int3   
  40ccbd:	int3   
  40ccbe:	int3   
  40ccbf:	int3   
  40ccc0:	jmp    QWORD PTR [rip+0x11a2a]        # 0x41e6f0
  40ccc6:	int3   
  40ccc7:	int3   
  40ccc8:	int3   
  40ccc9:	int3   
  40ccca:	int3   
  40cccb:	int3   
  40cccc:	int3   
  40cccd:	int3   
  40ccce:	int3   
  40cccf:	int3   
  40ccd0:	jmp    QWORD PTR [rip+0x11a12]        # 0x41e6e8
  40ccd6:	int3   
  40ccd7:	int3   
  40ccd8:	int3   
  40ccd9:	int3   
  40ccda:	int3   
  40ccdb:	int3   
  40ccdc:	int3   
  40ccdd:	int3   
  40ccde:	int3   
  40ccdf:	int3   
  40cce0:	jmp    QWORD PTR [rip+0x119fa]        # 0x41e6e0
  40cce6:	int3   
  40cce7:	int3   
  40cce8:	int3   
  40cce9:	int3   
  40ccea:	int3   
  40cceb:	int3   
  40ccec:	int3   
  40cced:	int3   
  40ccee:	int3   
  40ccef:	int3   
  40ccf0:	jmp    QWORD PTR [rip+0x119e2]        # 0x41e6d8
  40ccf6:	int3   
  40ccf7:	int3   
  40ccf8:	int3   
  40ccf9:	int3   
  40ccfa:	int3   
  40ccfb:	int3   
  40ccfc:	int3   
  40ccfd:	int3   
  40ccfe:	int3   
  40ccff:	int3   
  40cd00:	jmp    QWORD PTR [rip+0x119ca]        # 0x41e6d0
  40cd06:	int3   
  40cd07:	int3   
  40cd08:	int3   
  40cd09:	int3   
  40cd0a:	int3   
  40cd0b:	int3   
  40cd0c:	int3   
  40cd0d:	int3   
  40cd0e:	int3   
  40cd0f:	int3   
  40cd10:	jmp    QWORD PTR [rip+0x119b2]        # 0x41e6c8
  40cd16:	int3   
  40cd17:	int3   
  40cd18:	int3   
  40cd19:	int3   
  40cd1a:	int3   
  40cd1b:	int3   
  40cd1c:	int3   
  40cd1d:	int3   
  40cd1e:	int3   
  40cd1f:	int3   
  40cd20:	jmp    QWORD PTR [rip+0x1199a]        # 0x41e6c0
  40cd26:	int3   
  40cd27:	int3   
  40cd28:	int3   
  40cd29:	int3   
  40cd2a:	int3   
  40cd2b:	int3   
  40cd2c:	int3   
  40cd2d:	int3   
  40cd2e:	int3   
  40cd2f:	int3   
  40cd30:	jmp    QWORD PTR [rip+0x11982]        # 0x41e6b8
  40cd36:	int3   
  40cd37:	int3   
  40cd38:	int3   
  40cd39:	int3   
  40cd3a:	int3   
  40cd3b:	int3   
  40cd3c:	int3   
  40cd3d:	int3   
  40cd3e:	int3   
  40cd3f:	int3   
  40cd40:	jmp    QWORD PTR [rip+0x1196a]        # 0x41e6b0
  40cd46:	int3   
  40cd47:	int3   
  40cd48:	int3   
  40cd49:	int3   
  40cd4a:	int3   
  40cd4b:	int3   
  40cd4c:	int3   
  40cd4d:	int3   
  40cd4e:	int3   
  40cd4f:	int3   
  40cd50:	jmp    QWORD PTR [rip+0x11952]        # 0x41e6a8
  40cd56:	int3   
  40cd57:	int3   
  40cd58:	int3   
  40cd59:	int3   
  40cd5a:	int3   
  40cd5b:	int3   
  40cd5c:	int3   
  40cd5d:	int3   
  40cd5e:	int3   
  40cd5f:	int3   
  40cd60:	jmp    QWORD PTR [rip+0x1193a]        # 0x41e6a0
  40cd66:	int3   
  40cd67:	int3   
  40cd68:	int3   
  40cd69:	int3   
  40cd6a:	int3   
  40cd6b:	int3   
  40cd6c:	int3   
  40cd6d:	int3   
  40cd6e:	int3   
  40cd6f:	int3   
  40cd70:	jmp    QWORD PTR [rip+0x11922]        # 0x41e698
  40cd76:	int3   
  40cd77:	int3   
  40cd78:	int3   
  40cd79:	int3   
  40cd7a:	int3   
  40cd7b:	int3   
  40cd7c:	int3   
  40cd7d:	int3   
  40cd7e:	int3   
  40cd7f:	int3   
  40cd80:	jmp    QWORD PTR [rip+0x1190a]        # 0x41e690
  40cd86:	int3   
  40cd87:	int3   
  40cd88:	int3   
  40cd89:	int3   
  40cd8a:	int3   
  40cd8b:	int3   
  40cd8c:	int3   
  40cd8d:	int3   
  40cd8e:	int3   
  40cd8f:	int3   
  40cd90:	jmp    QWORD PTR [rip+0x118f2]        # 0x41e688
  40cd96:	int3   
  40cd97:	int3   
  40cd98:	int3   
  40cd99:	int3   
  40cd9a:	int3   
  40cd9b:	int3   
  40cd9c:	int3   
  40cd9d:	int3   
  40cd9e:	int3   
  40cd9f:	int3   
  40cda0:	jmp    QWORD PTR [rip+0x118da]        # 0x41e680
  40cda6:	int3   
  40cda7:	int3   
  40cda8:	int3   
  40cda9:	int3   
  40cdaa:	int3   
  40cdab:	int3   
  40cdac:	int3   
  40cdad:	int3   
  40cdae:	int3   
  40cdaf:	int3   
  40cdb0:	jmp    QWORD PTR [rip+0x118c2]        # 0x41e678
  40cdb6:	int3   
  40cdb7:	int3   
  40cdb8:	int3   
  40cdb9:	int3   
  40cdba:	int3   
  40cdbb:	int3   
  40cdbc:	int3   
  40cdbd:	int3   
  40cdbe:	int3   
  40cdbf:	int3   
  40cdc0:	jmp    QWORD PTR [rip+0x118aa]        # 0x41e670
  40cdc6:	int3   
  40cdc7:	int3   
  40cdc8:	int3   
  40cdc9:	int3   
  40cdca:	int3   
  40cdcb:	int3   
  40cdcc:	int3   
  40cdcd:	int3   
  40cdce:	int3   
  40cdcf:	int3   
  40cdd0:	jmp    QWORD PTR [rip+0x11892]        # 0x41e668
  40cdd6:	int3   
  40cdd7:	int3   
  40cdd8:	int3   
  40cdd9:	int3   
  40cdda:	int3   
  40cddb:	int3   
  40cddc:	int3   
  40cddd:	int3   
  40cdde:	int3   
  40cddf:	int3   
  40cde0:	jmp    QWORD PTR [rip+0x1187a]        # 0x41e660
  40cde6:	int3   
  40cde7:	int3   
  40cde8:	int3   
  40cde9:	int3   
  40cdea:	int3   
  40cdeb:	int3   
  40cdec:	int3   
  40cded:	int3   
  40cdee:	int3   
  40cdef:	int3   
  40cdf0:	jmp    QWORD PTR [rip+0x11862]        # 0x41e658
  40cdf6:	int3   
  40cdf7:	int3   
  40cdf8:	int3   
  40cdf9:	int3   
  40cdfa:	int3   
  40cdfb:	int3   
  40cdfc:	int3   
  40cdfd:	int3   
  40cdfe:	int3   
  40cdff:	int3   
  40ce00:	jmp    QWORD PTR [rip+0x11842]        # 0x41e648
  40ce06:	int3   
  40ce07:	int3   
  40ce08:	int3   
  40ce09:	int3   
  40ce0a:	int3   
  40ce0b:	int3   
  40ce0c:	int3   
  40ce0d:	int3   
  40ce0e:	int3   
  40ce0f:	int3   
  40ce10:	sub    rsp,0x148
  40ce17:	mov    DWORD PTR [rsp+0x2c],0x114
  40ce1f:	lea    rcx,[rsp+0x2c]
  40ce24:	call   0x40cd70
  40ce29:	test   eax,eax
  40ce2b:	je     0x40ce4b
  40ce2d:	mov    eax,DWORD PTR [rsp+0x3c]
  40ce31:	mov    DWORD PTR [rip+0x8cc9],eax        # 0x415b00
  40ce37:	mov    eax,DWORD PTR [rsp+0x30]
  40ce3b:	mov    DWORD PTR [rip+0x8cb7],eax        # 0x415af8
  40ce41:	mov    eax,DWORD PTR [rsp+0x34]
  40ce45:	mov    DWORD PTR [rip+0x8cb1],eax        # 0x415afc
  40ce4b:	add    rsp,0x148
  40ce52:	ret    
  40ce53:	int3   
  40ce54:	int3   
  40ce55:	int3   
  40ce56:	int3   
  40ce57:	int3   
  40ce58:	int3   
  40ce59:	int3   
  40ce5a:	int3   
  40ce5b:	int3   
  40ce5c:	int3   
  40ce5d:	int3   
  40ce5e:	int3   
  40ce5f:	int3   
  40ce60:	push   rdx
  40ce61:	lea    rdx,[rip+0x13218]        # 0x420080
  40ce68:	jmp    0x40cc40
  40ce6d:	int3   
  40ce6e:	int3   
  40ce6f:	int3   
  40ce70:	jmp    QWORD PTR [rip+0x1320a]        # 0x420080
  40ce76:	nop
  40ce77:	nop
  40ce78:	int3   
  40ce79:	int3   
  40ce7a:	int3   
  40ce7b:	int3   
  40ce7c:	int3   
  40ce7d:	int3   
  40ce7e:	int3   
  40ce7f:	int3   
  40ce80:	sub    rsp,0x28
  40ce84:	add    DWORD PTR [rip+0x102cd],0x1        # 0x41d158
  40ce8b:	cmp    DWORD PTR [rip+0x102c6],0x0        # 0x41d158
  40ce92:	jne    0x40ceaa
  40ce94:	cmp    QWORD PTR [rip+0x102c4],0x0        # 0x41d160
  40ce9c:	je     0x40ceaa
  40ce9e:	mov    rcx,QWORD PTR [rip+0x102bb]        # 0x41d160
  40cea5:	call   0x40cd30
  40ceaa:	add    rsp,0x28
  40ceae:	ret    
  40ceaf:	int3   
  40ceb0:	sub    rsp,0x28
  40ceb4:	sub    DWORD PTR [rip+0x1029d],0x1        # 0x41d158
  40cebb:	cmp    DWORD PTR [rip+0x10296],0xffffffff        # 0x41d158
  40cec2:	jne    0x40ced4
  40cec4:	call   0x40ce10
  40cec9:	mov    QWORD PTR [rip+0x1028c],0x0        # 0x41d160
  40ced4:	add    rsp,0x28
  40ced8:	ret    
  40ced9:	int3   
  40ceda:	int3   
  40cedb:	int3   
  40cedc:	int3   
  40cedd:	int3   
  40cede:	int3   
  40cedf:	int3   
  40cee0:	jmp    QWORD PTR [rip+0x118ba]        # 0x41e7a0
  40cee6:	int3   
  40cee7:	int3   
  40cee8:	int3   
  40cee9:	int3   
  40ceea:	int3   
  40ceeb:	int3   
  40ceec:	int3   
  40ceed:	int3   
  40ceee:	int3   
  40ceef:	int3   
  40cef0:	jmp    QWORD PTR [rip+0x118a2]        # 0x41e798
  40cef6:	int3   
  40cef7:	int3   
  40cef8:	int3   
  40cef9:	int3   
  40cefa:	int3   
  40cefb:	int3   
  40cefc:	int3   
  40cefd:	int3   
  40cefe:	int3   
  40ceff:	int3   
  40cf00:	jmp    QWORD PTR [rip+0x1188a]        # 0x41e790
  40cf06:	int3   
  40cf07:	int3   
  40cf08:	int3   
  40cf09:	int3   
  40cf0a:	int3   
  40cf0b:	int3   
  40cf0c:	int3   
  40cf0d:	int3   
  40cf0e:	int3   
  40cf0f:	int3   
  40cf10:	jmp    QWORD PTR [rip+0x11872]        # 0x41e788
  40cf16:	int3   
  40cf17:	int3   
  40cf18:	int3   
  40cf19:	int3   
  40cf1a:	int3   
  40cf1b:	int3   
  40cf1c:	int3   
  40cf1d:	int3   
  40cf1e:	int3   
  40cf1f:	int3   
  40cf20:	jmp    QWORD PTR [rip+0x1185a]        # 0x41e780
  40cf26:	int3   
  40cf27:	int3   
  40cf28:	int3   
  40cf29:	int3   
  40cf2a:	int3   
  40cf2b:	int3   
  40cf2c:	int3   
  40cf2d:	int3   
  40cf2e:	int3   
  40cf2f:	int3   
  40cf30:	jmp    QWORD PTR [rip+0x11842]        # 0x41e778
  40cf36:	int3   
  40cf37:	int3   
  40cf38:	int3   
  40cf39:	int3   
  40cf3a:	int3   
  40cf3b:	int3   
  40cf3c:	int3   
  40cf3d:	int3   
  40cf3e:	int3   
  40cf3f:	int3   
  40cf40:	jmp    QWORD PTR [rip+0x1182a]        # 0x41e770
  40cf46:	int3   
  40cf47:	int3   
  40cf48:	int3   
  40cf49:	int3   
  40cf4a:	int3   
  40cf4b:	int3   
  40cf4c:	int3   
  40cf4d:	int3   
  40cf4e:	int3   
  40cf4f:	int3   
  40cf50:	jmp    QWORD PTR [rip+0x11812]        # 0x41e768
  40cf56:	int3   
  40cf57:	int3   
  40cf58:	int3   
  40cf59:	int3   
  40cf5a:	int3   
  40cf5b:	int3   
  40cf5c:	int3   
  40cf5d:	int3   
  40cf5e:	int3   
  40cf5f:	int3   
  40cf60:	jmp    QWORD PTR [rip+0x117fa]        # 0x41e760
  40cf66:	int3   
  40cf67:	int3   
  40cf68:	int3   
  40cf69:	int3   
  40cf6a:	int3   
  40cf6b:	int3   
  40cf6c:	int3   
  40cf6d:	int3   
  40cf6e:	int3   
  40cf6f:	int3   
  40cf70:	jmp    QWORD PTR [rip+0x117e2]        # 0x41e758
  40cf76:	int3   
  40cf77:	int3   
  40cf78:	int3   
  40cf79:	int3   
  40cf7a:	int3   
  40cf7b:	int3   
  40cf7c:	int3   
  40cf7d:	int3   
  40cf7e:	int3   
  40cf7f:	int3   
  40cf80:	jmp    QWORD PTR [rip+0x117ca]        # 0x41e750
  40cf86:	int3   
  40cf87:	int3   
  40cf88:	int3   
  40cf89:	int3   
  40cf8a:	int3   
  40cf8b:	int3   
  40cf8c:	int3   
  40cf8d:	int3   
  40cf8e:	int3   
  40cf8f:	int3   
  40cf90:	add    DWORD PTR [rip+0x101d1],0x1        # 0x41d168
  40cf97:	cmp    DWORD PTR [rip+0x101ca],0x0        # 0x41d168
  40cf9e:	ret    
  40cf9f:	int3   
  40cfa0:	sub    DWORD PTR [rip+0x101c1],0x1        # 0x41d168
  40cfa7:	cmp    DWORD PTR [rip+0x101ba],0xffffffff        # 0x41d168
  40cfae:	ret    
  40cfaf:	int3   
  40cfb0:	mov    eax,0x40cf
  40cfb5:	add    BYTE PTR [rax],al
  40cfb7:	add    BYTE PTR [rbx],al
  40cfb9:	adc    dl,BYTE PTR [rsi+0x53]
  40cfbc:	push   rbx
  40cfbd:	pop    rdi
  40cfbe:	push   rbx
  40cfbf:	rex.WRX
  40cfc0:	push   r8
  40cfc2:	push   rbx
  40cfc3:	rex.W
  40cfc4:	rex.WRXB push r12
  40cfc6:	pop    rdi
  40cfc7:	push   rbx
  40cfc8:	push   rsp
  40cfc9:	push   r12
  40cfcb:	rex.RB add eax,0x0
  40cfd1:	sldt   WORD PTR [rax]
  40cfd4:	add    BYTE PTR [rax+0x40cf],dh
  40cfda:	add    BYTE PTR [rax],al
  40cfdc:	add    BYTE PTR [rsi],cl
  40cfde:	push   rsi
  40cfdf:	push   rbx
  40cfe0:	push   rbx
  40cfe1:	pop    rdi
  40cfe2:	push   rbx
  40cfe3:	push   rbx
  40cfe4:	pop    rdi
  40cfe5:	push   rbp
  40cfe6:	rex.WRX
  40cfe7:	rex.WXB
  40cfe8:	rex.WRX
  40cfe9:	rex.WRXB push r15
  40cfeb:	rex.WRX adc BYTE PTR [rsi+0x53],r10b
  40cfef:	push   rbx
  40cff0:	pop    rdi
  40cff1:	push   rbx
  40cff2:	push   rbx
  40cff3:	pop    rdi
  40cff4:	push   rax
  40cff5:	push   rdx
  40cff6:	rex.RB push r8
  40cff8:	push   r10
  40cffa:	rex.WB
  40cffb:	rex.WRX
  40cffc:	rex.RXB sbb DWORD PTR [r14+0x53],r10d
  40d000:	push   rbx
  40d001:	pop    rdi
  40d002:	push   rbx
  40d003:	push   rbx
  40d004:	pop    rdi
  40d005:	push   rax
  40d006:	push   rdx
  40d007:	rex.WRXB
  40d008:	rex.XB
  40d009:	rex.RB push r11
  40d00b:	push   rbx
  40d00c:	rex.WB
  40d00d:	rex.WRX
  40d00e:	rex.RXB pop r15
  40d010:	push   rax
  40d011:	push   rdx
  40d012:	rex.RB push r8
  40d014:	push   r10
  40d016:	orps   xmm10,XMMWORD PTR [r11+0x53]
  40d01b:	pop    rdi
  40d01c:	push   rbx
  40d01d:	push   rbx
  40d01e:	pop    rdi
  40d01f:	push   rax
  40d020:	push   rdx
  40d021:	rex.RB push r8
  40d023:	push   r10
  40d025:	rex.RB
  40d026:	sbb    r10d,DWORD PTR [rsi+0x53]
  40d02a:	push   rbx
  40d02b:	pop    rdi
  40d02c:	push   rbx
  40d02d:	push   rbx
  40d02e:	pop    rdi
  40d02f:	push   rax
  40d030:	push   rdx
  40d031:	rex.WRXB
  40d032:	rex.XB
  40d033:	rex.RB push r11
  40d035:	push   rbx
  40d036:	rex.WB
  40d037:	rex.WRX
  40d038:	rex.RXB pop r15
  40d03a:	push   rax
  40d03b:	push   rdx
  40d03c:	rex.RB
  40d03d:	rex.XB
  40d03e:	rex.WRXB
  40d03f:	rex.WRB
  40d040:	rex.WRB
  40d041:	rex.WB push r12
  40d043:	adc    edx,DWORD PTR [rsi+0x53]
  40d046:	push   rbx
  40d047:	pop    rdi
  40d048:	push   rbx
  40d049:	push   rbx
  40d04a:	pop    rdi
  40d04b:	push   rax
  40d04c:	push   rdx
  40d04d:	rex.RB
  40d04e:	rex.XB
  40d04f:	rex.WRXB
  40d050:	rex.WRB
  40d051:	rex.WRB
  40d052:	rex.WB push r12
  40d054:	push   rsp
  40d055:	rex.RB
  40d056:	sbb    BYTE PTR [rsi+0x53],r10b
  40d05a:	push   rbx
  40d05b:	pop    rdi
  40d05c:	push   rbx
  40d05d:	push   rbx
  40d05e:	pop    rdi
  40d05f:	push   rax
  40d060:	push   rdx
  40d061:	rex.WRXB
  40d062:	rex.XB
  40d063:	rex.RB push r11
  40d065:	push   rbx
  40d066:	rex.WB
  40d067:	rex.WRX
  40d068:	rex.RXB pop r15
  40d06a:	rex.XB
  40d06b:	rex.WRXB
  40d06c:	rex.WRB
  40d06d:	rex.WRB
  40d06e:	rex.WB push r12
  40d070:	adc    BYTE PTR [rsi+0x53],dl
  40d073:	push   rbx
  40d074:	pop    rdi
  40d075:	push   rbx
  40d076:	push   rbx
  40d077:	pop    rdi
  40d078:	rex.XB
  40d079:	rex.WRXB
  40d07a:	rex.WRB
  40d07b:	rex.WRB
  40d07c:	rex.WB push r12
  40d07e:	push   rsp
  40d07f:	rex.RB
  40d080:	rex.R sbb al,0x56
  40d083:	push   rbx
  40d084:	push   rbx
  40d085:	pop    rdi
  40d086:	push   rbx
  40d087:	push   rbx
  40d088:	pop    rdi
  40d089:	push   rax
  40d08a:	push   rdx
  40d08b:	rex.WRXB
  40d08c:	rex.XB
  40d08d:	rex.RB push r11
  40d08f:	push   rbx
  40d090:	rex.WB
  40d091:	rex.WRX
  40d092:	rex.RXB pop r15
  40d094:	push   rax
  40d095:	rex.WRXB push r11
  40d097:	push   rsp
  40d098:	rex.XB
  40d099:	rex.WRXB
  40d09a:	rex.WRB
  40d09b:	rex.WRB
  40d09c:	rex.WB push r12
  40d09e:	and    BYTE PTR [rsi+0x53],dl
  40d0a1:	push   rbx
  40d0a2:	pop    rdi
  40d0a3:	push   rbx
  40d0a4:	push   rbx
  40d0a5:	pop    rdi
  40d0a6:	push   rax
  40d0a7:	push   rdx
  40d0a8:	rex.WRXB
  40d0a9:	rex.XB
  40d0aa:	rex.RB push r11
  40d0ac:	push   rbx
  40d0ad:	rex.WB
  40d0ae:	rex.WRX
  40d0af:	rex.RXB pop r15
  40d0b1:	push   rax
  40d0b2:	push   rdx
  40d0b3:	rex.RB
  40d0b4:	rex.RX
  40d0b5:	rex.WB
  40d0b6:	rex.WRX
  40d0b7:	rex.B
  40d0b8:	rex.WR
  40d0b9:	rex.XB
  40d0ba:	rex.WRXB
  40d0bb:	rex.WRB
  40d0bc:	rex.WRB
  40d0bd:	rex.WB push r12
  40d0bf:	sbb    BYTE PTR [rsi+0x53],dl
  40d0c2:	push   rbx
  40d0c3:	pop    rdi
  40d0c4:	push   rbx
  40d0c5:	push   rbx
  40d0c6:	pop    rdi
  40d0c7:	push   rax
  40d0c8:	push   rdx
  40d0c9:	rex.RB
  40d0ca:	rex.RX
  40d0cb:	rex.WB
  40d0cc:	rex.WRX
  40d0cd:	rex.B
  40d0ce:	rex.WR
  40d0cf:	rex.XB
  40d0d0:	rex.WRXB
  40d0d1:	rex.WRB
  40d0d2:	rex.WRB
  40d0d3:	rex.WB push r12
  40d0d5:	push   rsp
  40d0d6:	rex.RB
  40d0d7:	and    DWORD PTR [rsi+0x53],r10d
  40d0db:	push   rbx
  40d0dc:	pop    rdi
  40d0dd:	push   rbx
  40d0de:	push   rbx
  40d0df:	pop    rdi
  40d0e0:	push   rax
  40d0e1:	push   rdx
  40d0e2:	rex.WRXB
  40d0e3:	rex.XB
  40d0e4:	rex.RB push r11
  40d0e6:	push   rbx
  40d0e7:	rex.WB
  40d0e8:	rex.WRX
  40d0e9:	rex.RXB pop r15
  40d0eb:	push   rax
  40d0ec:	rex.WRXB push r11
  40d0ee:	push   rsp
  40d0ef:	rex.RX
  40d0f0:	rex.WB
  40d0f1:	rex.WRX
  40d0f2:	rex.B
  40d0f3:	rex.WR
  40d0f4:	rex.XB
  40d0f5:	rex.WRXB
  40d0f6:	rex.WRB
  40d0f7:	rex.WRB
  40d0f8:	rex.WB push r12
  40d0fa:	(bad)  
  40d0fb:	push   rsi
  40d0fc:	push   rbx
  40d0fd:	push   rbx
  40d0fe:	pop    rdi
  40d0ff:	push   rbx
  40d100:	push   rbx
  40d101:	pop    rdi
  40d102:	rex.XB push r10
  40d104:	rex.RB
  40d105:	push   r12
  40d107:	rex.RB
  40d108:	rex.R (bad) 
  40d10a:	push   rsi
  40d10b:	push   rbx
  40d10c:	push   rbx
  40d10d:	pop    rdi
  40d10e:	push   rbx
  40d10f:	push   rbx
  40d110:	pop    rdi
  40d111:	rex.B
  40d112:	rex.X
  40d113:	rex.WRXB push r10
  40d115:	push   rsp
  40d116:	rex.RB
  40d117:	rex.R (bad) 
  40d119:	push   rsi
  40d11a:	push   rbx
  40d11b:	push   rbx
  40d11c:	pop    rdi
  40d11d:	push   rbx
  40d11e:	push   rbx
  40d11f:	pop    rdi
  40d120:	rex.R
  40d121:	rex.RB
  40d122:	rex.WR
  40d123:	rex.RB push r12
  40d125:	rex.RB
  40d126:	rex.R adc al,0x56
  40d129:	push   rbx
  40d12a:	push   rbx
  40d12b:	pop    rdi
  40d12c:	push   rbx
  40d12d:	push   rbx
  40d12e:	pop    rdi
  40d12f:	push   rax
  40d130:	rex.WRXB push r11
  40d132:	push   rsp
  40d133:	rex.XB
  40d134:	rex.WRXB
  40d135:	rex.WRB
  40d136:	rex.WRB
  40d137:	rex.WB push r12
  40d139:	push   rsp
  40d13a:	rex.RB
  40d13b:	rex.R (bad) 
  40d13d:	push   rsi
  40d13e:	jae    0x40d1b3
  40d140:	push   r8
  40d142:	rex.WB add al,BYTE PTR [r8]
  40d145:	add    BYTE PTR [rax],al
  40d147:	add    BYTE PTR [rax-0x2f],dl
  40d14a:	add    BYTE PTR [rax],al
  40d14d:	add    BYTE PTR [rax],al
  40d14f:	add    BYTE PTR [rsi],cl
  40d151:	adc    DWORD PTR [rsi+0x53],edx
  40d154:	push   rbx
  40d155:	pop    rdi
  40d156:	push   rbx
  40d157:	rex.WRX
  40d158:	push   r8
  40d15a:	push   rbx
  40d15b:	rex.W
  40d15c:	rex.WRXB push r12
  40d15e:	pop    rdi
  40d15f:	push   rax
  40d160:	push   rdx
  40d161:	rex.WRXB push r8
  40d163:	add    BYTE PTR [rax],0x0
  40d166:	add    BYTE PTR [rax],al
  40d168:	add    BYTE PTR [rax],al
  40d16a:	add    BYTE PTR [rax],al
  40d16c:	or     eax,0xd8000000
  40d171:	adc    DWORD PTR [rax+0x0],eax
	...
  40d180:	add    cl,BYTE PTR [rbp*2+0x616e535f]
  40d187:	jo     0x40d1fc
  40d189:	push   0x6449746f
  40d18e:	add    al,BYTE PTR [rax]
  40d190:	fcom   DWORD PTR [rcx]
  40d192:	add    BYTE PTR [rax],al
  40d195:	add    BYTE PTR [rax],al
  40d197:	add    BYTE PTR [rax],dl
  40d199:	add    BYTE PTR [rax],al
  40d19b:	add    BYTE PTR [rax],al
  40d19d:	add    BYTE PTR [rax],al
  40d19f:	add    BYTE PTR [rdx],al
  40d1a1:	(bad)  
  40d1a3:	pop    rdi
  40d1a4:	push   rbx
  40d1a5:	outs   dx,BYTE PTR ds:[rsi]
  40d1a6:	(bad)  
  40d1a7:	jo     0x40d21c
  40d1a9:	push   0x6553746f
  40d1ae:	je     0x40d1f9
  40d1b0:	add    al,BYTE PTR fs:[rax]
  40d1b3:	pop    rax
  40d1b4:	adc    BYTE PTR [rax+0x0],al
  40d1b7:	add    BYTE PTR [rax],al
  40d1b9:	add    BYTE PTR [rax],al
  40d1bb:	and    BYTE PTR [rax],al
  40d1bd:	add    BYTE PTR [rax],al
  40d1bf:	add    BYTE PTR [rax],al
  40d1c1:	add    BYTE PTR [rax],al
  40d1c3:	add    dl,BYTE PTR [rcx]
  40d1c5:	ins    DWORD PTR es:[rdi],dx
  40d1c6:	pop    rdi
  40d1c7:	ins    BYTE PTR es:[rdi],dx
  40d1c8:	push   rbx
  40d1c9:	outs   dx,BYTE PTR ds:[rsi]
  40d1ca:	(bad)  
  40d1cb:	jo     0x40d240
  40d1cd:	push   0x4373746f
  40d1d2:	outs   dx,DWORD PTR ds:[rsi]
  40d1d3:	jne    0x40d243
  40d1d5:	je     0x40d1d9
  40d1d7:	add    BYTE PTR [rax+0x11],ah
  40d1da:	add    BYTE PTR [rax],al
  40d1dd:	add    BYTE PTR [rax],al
  40d1df:	add    BYTE PTR [rax],ch
  40d1e1:	add    BYTE PTR [rax],al
  40d1e3:	add    BYTE PTR [rax],al
  40d1e5:	add    BYTE PTR [rax],al
  40d1e7:	add    BYTE PTR [rdx],al
  40d1e9:	sbb    ch,BYTE PTR [rbp+0x5f]
  40d1ec:	jo     0x40d265
  40d1ee:	jae    0x40d26a
  40d1f0:	push   rbx
  40d1f1:	outs   dx,BYTE PTR ds:[rsi]
  40d1f2:	(bad)  
  40d1f3:	jo     0x40d268
  40d1f5:	push   0x6544746f
  40d1fa:	jbe    0x40d265
  40d1fc:	movsxd esp,DWORD PTR [rbp+0x4f]
  40d1ff:	(bad)  
  40d200:	push   0x65
  40d202:	movsxd esi,DWORD PTR [rdx+rax*1+0x0]
  40d206:	(bad)  
  40d207:	adc    DWORD PTR [rax+0x0],eax
  40d20a:	add    BYTE PTR [rax],al
  40d20c:	add    BYTE PTR [rax],al
  40d20e:	xor    BYTE PTR [rax],al
  40d210:	add    BYTE PTR [rax],al
  40d212:	add    BYTE PTR [rax],al
  40d214:	add    BYTE PTR [rax],al
  40d216:	add    bl,BYTE PTR [rax]
  40d218:	ins    DWORD PTR es:[rdi],dx
  40d219:	pop    rdi
  40d21a:	jo     0x40d293
  40d21c:	jae    0x40d298
  40d21e:	rex.WRXB jb 0x40d28a
  40d221:	imul   ebp,DWORD PTR [esi+0x61],0x6c6f566c
  40d229:	jne    0x40d298
  40d22b:	gs rex.WRX (bad) 
  40d22e:	ins    DWORD PTR es:[rdi],dx
  40d22f:	add    al,BYTE PTR gs:[rax]
  40d232:	(bad)  
  40d233:	adc    DWORD PTR [rax+0x0],eax
  40d236:	add    BYTE PTR [rax],al
  40d238:	add    BYTE PTR [rax],al
  40d23a:	cmp    BYTE PTR [rax],al
  40d23c:	add    BYTE PTR [rax],al
  40d23e:	add    BYTE PTR [rax],al
  40d240:	add    BYTE PTR [rax],al
  40d242:	add    bl,BYTE PTR [rax]
  40d244:	ins    DWORD PTR es:[rdi],dx
  40d245:	pop    rdi
  40d246:	jo     0x40d2bf
  40d248:	jae    0x40d2c4
  40d24a:	rex.WRXB jb 0x40d2b6
  40d24d:	imul   ebp,DWORD PTR [esi+0x61],0x676e6974
  40d255:	rex.WRB (bad) 
  40d257:	movsxd ebp,DWORD PTR [rax+0x69]
  40d25a:	outs   dx,BYTE PTR ds:[rsi]
  40d25b:	add    al,BYTE PTR gs:[rax]
  40d25e:	(bad)  
  40d25f:	adc    DWORD PTR [rax+0x0],eax
  40d262:	add    BYTE PTR [rax],al
  40d264:	add    BYTE PTR [rax],al
  40d266:	add    BYTE PTR [rax],al
  40d269:	add    BYTE PTR [rax],al
  40d26b:	add    BYTE PTR [rax],al
  40d26d:	add    BYTE PTR [rdx],al
  40d26f:	adc    al,0x6d
  40d271:	pop    rdi
  40d272:	jo     0x40d2eb
  40d274:	jae    0x40d2f0
  40d276:	push   rbx
  40d277:	gs jb  0x40d2f0
  40d27a:	imul   esp,DWORD PTR [rbx+0x65],0x6863614d
  40d281:	imul   ebp,DWORD PTR [rsi+0x65],0x11600002
  40d288:	add    BYTE PTR [rax],al
  40d28b:	add    BYTE PTR [rax],al
  40d28d:	add    BYTE PTR [rax+0x0],cl
  40d290:	add    BYTE PTR [rax],al
  40d292:	add    BYTE PTR [rax],al
  40d294:	add    BYTE PTR [rax],al
  40d296:	add    dl,BYTE PTR [rcx]
  40d298:	ins    DWORD PTR es:[rdi],dx
  40d299:	pop    rdi
  40d29a:	jo     0x40d313
  40d29c:	jae    0x40d318
  40d29e:	rex.RB js 0x40d311
  40d2a1:	outs   dx,DWORD PTR ds:[rsi]
  40d2a2:	jae    0x40d309
  40d2a4:	fs rex.WRX (bad) 
  40d2a7:	ins    DWORD PTR es:[rdi],dx
  40d2a8:	add    al,BYTE PTR gs:[rax]
  40d2ab:	(bad)  
  40d2ac:	adc    DWORD PTR [rax+0x0],eax
  40d2af:	add    BYTE PTR [rax],al
  40d2b1:	add    BYTE PTR [rax],al
  40d2b3:	push   rax
  40d2b4:	add    BYTE PTR [rax],al
  40d2b6:	add    BYTE PTR [rax],al
  40d2b8:	add    BYTE PTR [rax],al
  40d2ba:	add    BYTE PTR [rdx],al
  40d2bc:	adc    DWORD PTR [rbp+0x5f],ebp
  40d2bf:	jo     0x40d338
  40d2c1:	jae    0x40d33d
  40d2c3:	rex.RB js 0x40d336
  40d2c6:	outs   dx,DWORD PTR ds:[rsi]
  40d2c7:	jae    0x40d32e
  40d2c9:	fs push rax
  40d2cb:	(bad)  
  40d2cc:	je     0x40d336
  40d2ce:	add    al,BYTE PTR [rax]
  40d2d0:	fcom   DWORD PTR [rcx]
  40d2d2:	add    BYTE PTR [rax],al
  40d2d5:	add    BYTE PTR [rax],al
  40d2d7:	add    BYTE PTR [rax+0x0],bl
  40d2da:	add    BYTE PTR [rax],al
  40d2dc:	add    BYTE PTR [rax],al
  40d2de:	add    BYTE PTR [rax],al
  40d2e0:	add    cl,BYTE PTR [rbp*2+0x6f72505f]
  40d2e7:	jbe    0x40d352
  40d2e9:	fs gs jb 0x40d336
  40d2ed:	add    al,BYTE PTR fs:[rax]
  40d2f0:	pop    rax
  40d2f1:	adc    BYTE PTR [rax+0x0],al
  40d2f4:	add    BYTE PTR [rax],al
  40d2f6:	add    BYTE PTR [rax],al
  40d2f8:	push   0x0
  40d2fd:	add    BYTE PTR [rax],al
  40d2ff:	add    BYTE PTR [rdx],al
  40d301:	adc    eax,0x536c5f6d
  40d306:	outs   dx,BYTE PTR ds:[rsi]
  40d307:	(bad)  
  40d308:	jo     0x40d37d
  40d30a:	push   0x7441746f
  40d30f:	je     0x40d383
  40d311:	imul   esp,DWORD PTR [rdx+0x75],0x2736574
  40d318:	add    al,bh
  40d31a:	adc    BYTE PTR [rax+0x0],al
  40d31d:	add    BYTE PTR [rax],al
  40d31f:	add    BYTE PTR [rax],al
  40d321:	jo     0x40d323
  40d323:	add    BYTE PTR [rax],al
  40d325:	add    BYTE PTR [rax],al
  40d327:	add    BYTE PTR [rax],al
  40d329:	add    dl,BYTE PTR [rip+0x73745f6d]        # 0x73b5329c
  40d32f:	rex.XB jb 0x40d397
  40d332:	(bad)  
  40d333:	je     0x40d39e
  40d335:	outs   dx,DWORD PTR ds:[rsi]
  40d336:	outs   dx,BYTE PTR ds:[rsi]
  40d337:	push   rsp
  40d338:	imul   ebp,DWORD PTR [rbp+0x65],0x6d617473
  40d33f:	jo     0x40d343
  40d341:	add    BYTE PTR [rax+0x40cf],dh
  40d347:	add    BYTE PTR [rax],al
  40d349:	add    BYTE PTR [rax+0x0],bh
  40d34c:	add    BYTE PTR [rax],al
  40d34e:	add    BYTE PTR [rax],al
  40d350:	add    BYTE PTR [rax],al
  40d352:	add    cl,BYTE PTR [rcx]
  40d354:	ins    DWORD PTR es:[rdi],dx
  40d355:	pop    rdi
  40d356:	gs push rbx
  40d358:	je     0x40d3bb
  40d35a:	je     0x40d3d1
  40d35c:	jae    0x40d360
  40d35e:	add    BYTE PTR [rdx],al
	...
  40d368:	jo     0x40d33d
  40d36a:	add    BYTE PTR [rax],al
  40d36d:	add    BYTE PTR [rax],al
  40d36f:	add    BYTE PTR [rdi],cl
  40d371:	adc    al,0x49
  40d373:	push   rsi
  40d374:	jae    0x40d3e9
  40d376:	rex.X (bad) 
  40d378:	movsxd ebp,DWORD PTR [rbx+0x75]
  40d37b:	jo     0x40d3c0
  40d37d:	outs   dx,DWORD PTR ds:[rsi]
  40d37e:	ins    DWORD PTR es:[rdi],dx
  40d37f:	jo     0x40d3f0
  40d381:	outs   dx,BYTE PTR ds:[rsi]
  40d382:	outs   dx,BYTE PTR gs:[rsi]
  40d384:	je     0x40d3f9
  40d386:	sub    BYTE PTR [rax],ch
  40d388:	add    BYTE PTR [rax],al
	...
  40d39f:	(bad)  
  40d3a0:	push   rsi
  40d3a1:	jae    0x40d416
  40d3a3:	push   r8
  40d3a5:	rex.WB xor BYTE PTR [r8],al
  40d3a8:	(bad)  
  40d3a9:	inc    DWORD PTR [rdx]
  40d3ab:	add    ah,cl
  40d3ad:	int3   
  40d3ae:	int3   
  40d3af:	int3   
  40d3b0:	jmp    QWORD PTR [rip+0x11402]        # 0x41e7b8
  40d3b6:	int3   
  40d3b7:	int3   
  40d3b8:	int3   
  40d3b9:	int3   
  40d3ba:	int3   
  40d3bb:	int3   
  40d3bc:	int3   
  40d3bd:	int3   
  40d3be:	int3   
  40d3bf:	int3   
  40d3c0:	jmp    QWORD PTR [rip+0x113ea]        # 0x41e7b0
  40d3c6:	int3   
  40d3c7:	int3   
  40d3c8:	int3   
  40d3c9:	int3   
  40d3ca:	int3   
  40d3cb:	int3   
  40d3cc:	int3   
  40d3cd:	int3   
  40d3ce:	int3   
  40d3cf:	int3   
  40d3d0:	add    DWORD PTR [rip+0xfd95],0x1        # 0x41d16c
  40d3d7:	cmp    DWORD PTR [rip+0xfd8e],0x0        # 0x41d16c
  40d3de:	ret    
  40d3df:	int3   
  40d3e0:	sub    DWORD PTR [rip+0xfd85],0x1        # 0x41d16c
  40d3e7:	cmp    DWORD PTR [rip+0xfd7e],0xffffffff        # 0x41d16c
  40d3ee:	ret    
  40d3ef:	int3   
  40d3f0:	mov    eax,0x40d4
	...
  40d405:	add    BYTE PTR [rax],al
  40d407:	add    BYTE PTR [rax+0x40d4],bh
  40d40d:	add    BYTE PTR [rax],al
  40d40f:	add    BYTE PTR [rax-0x2b],ah
  40d412:	add    BYTE PTR [rax],al
  40d415:	add    BYTE PTR [rax],al
  40d417:	add    dl,dl
  40d419:	(bad)  
  40d41a:	add    BYTE PTR [rax],al
  40d41d:	add    BYTE PTR [rax],al
  40d41f:	add    dh,dh
  40d421:	(bad)  
  40d422:	add    BYTE PTR [rax],al
	...
  40d42d:	add    BYTE PTR [rax],al
  40d42f:	add    BYTE PTR [rax],cl
  40d431:	(bad)  
  40d432:	add    BYTE PTR [rax],al
  40d435:	add    BYTE PTR [rax],al
  40d437:	add    BYTE PTR [rax],bl
  40d439:	add    BYTE PTR [rax],al
  40d43b:	add    BYTE PTR [rax],al
  40d43d:	add    BYTE PTR [rax],al
  40d43f:	add    BYTE PTR [rax],bl
  40d441:	adc    eax,0x40
  40d446:	add    BYTE PTR [rax],al
  40d448:	mov    al,0x66
  40d44a:	add    BYTE PTR [rax],al
  40d44d:	add    BYTE PTR [rax],al
  40d44f:	add    al,al
  40d451:	data16 add BYTE PTR [rax],al
  40d455:	add    BYTE PTR [rax],al
  40d457:	add    BYTE PTR [rax],ah
  40d459:	push   0x40
  40d45e:	add    BYTE PTR [rax],al
  40d460:	adc    BYTE PTR [rax+0x40],ch
  40d463:	add    BYTE PTR [rax],al
  40d465:	add    BYTE PTR [rax],al
  40d467:	add    BYTE PTR [rax+0x68],dl
  40d46a:	add    BYTE PTR [rax],al
  40d46d:	add    BYTE PTR [rax],al
  40d46f:	add    BYTE PTR [rax+0x68],ah
  40d472:	add    BYTE PTR [rax],al
  40d475:	add    BYTE PTR [rax],al
  40d477:	add    BYTE PTR [rax+0x68],dh
  40d47a:	add    BYTE PTR [rax],al
  40d47d:	add    BYTE PTR [rax],al
  40d47f:	add    BYTE PTR [rax+0x68],al
  40d482:	add    BYTE PTR [rax],al
  40d485:	add    BYTE PTR [rax],al
  40d487:	add    BYTE PTR [rax+0x64],al
  40d48a:	add    BYTE PTR [rax],al
  40d48d:	add    BYTE PTR [rax],al
  40d48f:	add    BYTE PTR [rax+0x64],dh
  40d492:	add    BYTE PTR [rax],al
  40d495:	add    BYTE PTR [rax],al
  40d497:	add    BYTE PTR [rax+0x65],ah
  40d49a:	add    BYTE PTR [rax],al
  40d49d:	add    BYTE PTR [rax],al
  40d49f:	add    BYTE PTR [rax+0x4064],dl
  40d4a5:	add    BYTE PTR [rax],al
  40d4a7:	add    BYTE PTR [rax+0x4064],ah
  40d4ad:	add    BYTE PTR [rax],al
  40d4af:	add    BYTE PTR [rax+0x4064],dh
  40d4b5:	add    BYTE PTR [rax],al
  40d4b7:	add    BYTE PTR [rsi],cl
  40d4b9:	add    BYTE PTR [rax],al
  40d4bb:	add    BYTE PTR [rax],al
  40d4bd:	add    BYTE PTR [rcx],al
  40d4bf:	add    BYTE PTR [rax],al
  40d4c1:	add    BYTE PTR [rax+0x4011],al
  40d4c7:	add    BYTE PTR [rax],al
  40d4c9:	add    BYTE PTR [rax],cl
	...
  40d4db:	add    BYTE PTR [rcx],al
  40d4dd:	add    BYTE PTR [rax],al
  40d4df:	adc    BYTE PTR [rcx],0x40
  40d4e2:	add    BYTE PTR [rax],al
  40d4e4:	add    BYTE PTR [rax],al
  40d4e6:	add    BYTE PTR [rax],cl
  40d4e8:	add    BYTE PTR [rax],al
  40d4ea:	add    BYTE PTR [rax],cl
  40d4ec:	rex.RX
  40d4ed:	rex.WRB
  40d4ee:	gs jae 0x40d564
  40d4f1:	(bad)  
  40d4f2:	add    al,BYTE PTR gs:[eax]
  40d4f6:	add    BYTE PTR [rax],al
  40d4f8:	add    DWORD PTR [rax],eax
  40d4fa:	adc    edx,ebp
  40d4fc:	add    BYTE PTR [rax],al
  40d4ff:	add    BYTE PTR [rax],al
  40d501:	add    BYTE PTR [rax+rax*1-0xf],al
  40d505:	inc    DWORD PTR [rax]
  40d507:	add    BYTE PTR [rdx],cl
  40d509:	push   rsp
  40d50a:	rex.RB js 0x40d570
  40d50d:	gs jo  0x40d584
  40d510:	imul   ebp,DWORD PTR [rdi+0x6e],0xddb00043
  40d517:	add    BYTE PTR [rax],al
  40d51a:	add    BYTE PTR [rax],al
  40d51c:	add    BYTE PTR [rsi],al
  40d51e:	rex.XB jb 0x40d586
  40d521:	(bad)  
  40d522:	je     0x40d589
  40d524:	add    eax,DWORD PTR [rax]
	...
  40d52e:	sub    BYTE PTR [rax],al
  40d530:	add    cl,BYTE PTR [rax]
  40d532:	pop    rax
  40d533:	(bad)  
  40d534:	add    BYTE PTR [rax],al
  40d537:	add    BYTE PTR [rax],al
  40d539:	add    BYTE PTR [rax],al
  40d53b:	add    BYTE PTR [rbx+rdx*2],al
  40d53e:	gs ins BYTE PTR es:[rdi],dx
  40d540:	data16 add al,BYTE PTR [rax]
  40d543:	add    al,BYTE PTR [rax+0x4011]
  40d549:	add    BYTE PTR [rax],al
  40d54b:	add    BYTE PTR [rax],al
  40d54d:	add    BYTE PTR [rbx],al
  40d54f:	rex.WRB jae 0x40d5b9
  40d552:	add    al,BYTE PTR [rax]
  40d554:	add    al,BYTE PTR [rax]
  40d556:	add    BYTE PTR [rax],al
  40d558:	(bad)  
  40d559:	(bad)  
  40d55a:	add    BYTE PTR [rax],al
  40d55d:	add    BYTE PTR [rax],al
  40d55f:	add    BYTE PTR [rdi],al
  40d561:	or     dl,BYTE PTR [rbp+rax*2+0x78]
  40d565:	movsxd esp,DWORD PTR [rbp+0x70]
  40d568:	je     0x40d5d3
  40d56a:	outs   dx,DWORD PTR ds:[rsi]
  40d56b:	outs   dx,BYTE PTR ds:[rsi]
  40d56c:	mov    eax,0x40d4
  40d571:	add    BYTE PTR [rax],al
  40d573:	add    BYTE PTR [rax],bh
  40d575:	and    DWORD PTR [rax+0x0],eax
  40d578:	add    BYTE PTR [rax],al
  40d57a:	add    BYTE PTR [rax],al
  40d57c:	add    BYTE PTR [rax],al
  40d57e:	or     edx,DWORD PTR [rdi+0x69]
  40d581:	outs   dx,BYTE PTR ds:[rsi]
  40d582:	rex.B jo 0x40d5ee
  40d585:	rex.RB js 0x40d5fc
  40d588:	jb     0x40d5eb
  40d58a:	add    BYTE PTR [rax],al
  40d58c:	add    DWORD PTR [rax],eax
  40d58e:	add    bl,BYTE PTR [rbp+0x40d5]
  40d594:	add    BYTE PTR [rax],al
  40d596:	add    BYTE PTR [rdx],al
  40d598:	add    BYTE PTR [rdx],al
  40d59a:	add    BYTE PTR [rax],al
  40d59c:	add    BYTE PTR [rax+0x4011],al
  40d5a2:	add    BYTE PTR [rax],al
  40d5a4:	add    BYTE PTR [rax],cl
  40d5a6:	add    BYTE PTR [rax],al
  40d5a8:	add    BYTE PTR [rax],al
  40d5aa:	add    BYTE PTR [rax],al
  40d5ac:	dec    DWORD PTR [rax]
  40d5ae:	add    BYTE PTR [rax],al
  40d5b0:	add    BYTE PTR [rax],al
  40d5b2:	add    BYTE PTR [rax],al
  40d5b4:	inc    DWORD PTR [rcx]
	...
  40d5be:	add    BYTE PTR [rax],al
  40d5c0:	add    BYTE PTR [rax],0x0
  40d5c3:	add    BYTE PTR [rax],al
  40d5c5:	(bad)  
  40d5c6:	inc    DWORD PTR [rdi]
  40d5c8:	rex.WRB
  40d5c9:	gs jae 0x40d63f
  40d5cc:	(bad)  
  40d5cd:	add    BYTE PTR gs:[eax+0x40d6],bl
	...
  40d5ed:	add    BYTE PTR [rax],al
  40d5ef:	add    BYTE PTR [rax-0x29],ah
  40d5f2:	add    BYTE PTR [rax],al
	...
  40d5fd:	add    BYTE PTR [rax],al
  40d5ff:	add    BYTE PTR [rax+0x40d6],bl
	...
  40d60d:	add    BYTE PTR [rax],al
  40d60f:	add    BYTE PTR [rsi+0x40d6],dh
  40d615:	add    BYTE PTR [rax],al
  40d617:	add    BYTE PTR [rax],bl
  40d619:	add    BYTE PTR [rax],al
  40d61b:	add    BYTE PTR [rax],al
  40d61d:	add    BYTE PTR [rax],al
  40d61f:	add    al,dh
  40d621:	rol    DWORD PTR [rax+0x0],cl
  40d624:	add    BYTE PTR [rax],al
  40d626:	add    BYTE PTR [rax],al
  40d628:	mov    al,0x66
  40d62a:	add    BYTE PTR [rax],al
  40d62d:	add    BYTE PTR [rax],al
  40d62f:	add    al,al
  40d631:	data16 add BYTE PTR [rax],al
  40d635:	add    BYTE PTR [rax],al
  40d637:	add    BYTE PTR [rax],ah
  40d639:	push   0x40
  40d63e:	add    BYTE PTR [rax],al
  40d640:	adc    BYTE PTR [rax+0x40],ch
  40d643:	add    BYTE PTR [rax],al
  40d645:	add    BYTE PTR [rax],al
  40d647:	add    BYTE PTR [rax+0x68],dl
  40d64a:	add    BYTE PTR [rax],al
  40d64d:	add    BYTE PTR [rax],al
  40d64f:	add    BYTE PTR [rax+0x68],ah
  40d652:	add    BYTE PTR [rax],al
  40d655:	add    BYTE PTR [rax],al
  40d657:	add    BYTE PTR [rax+0x68],dh
  40d65a:	add    BYTE PTR [rax],al
  40d65d:	add    BYTE PTR [rax],al
  40d65f:	add    BYTE PTR [rax+0x68],al
  40d662:	add    BYTE PTR [rax],al
  40d665:	add    BYTE PTR [rax],al
  40d667:	add    BYTE PTR [rax+0x64],al
  40d66a:	add    BYTE PTR [rax],al
  40d66d:	add    BYTE PTR [rax],al
  40d66f:	add    BYTE PTR [rax+0x64],dh
  40d672:	add    BYTE PTR [rax],al
  40d675:	add    BYTE PTR [rax],al
  40d677:	add    BYTE PTR [rax+0x65],ah
  40d67a:	add    BYTE PTR [rax],al
  40d67d:	add    BYTE PTR [rax],al
  40d67f:	add    BYTE PTR [rax+0x4064],dl
  40d685:	add    BYTE PTR [rax],al
  40d687:	add    BYTE PTR [rax+0x4064],ah
  40d68d:	add    BYTE PTR [rax],al
  40d68f:	add    BYTE PTR [rax+0x4064],dh
  40d695:	add    BYTE PTR [rax],al
  40d697:	add    BYTE PTR [rax],al
  40d699:	add    BYTE PTR [rdx],al
  40d69b:	add    dl,al
  40d69d:	(bad)  
  40d69e:	add    BYTE PTR [rax],al
  40d6a1:	add    BYTE PTR [rax],al
  40d6a3:	add    BYTE PTR [rax+rax*1-0xf],al
  40d6a7:	inc    DWORD PTR [rbx]
  40d6a9:	xlat   BYTE PTR ds:[rbx]
  40d6aa:	add    BYTE PTR [rax],al
  40d6ad:	add    BYTE PTR [rax],al
  40d6af:	add    BYTE PTR [rbx+0x0],al
  40d6b2:	icebp  
  40d6b3:	inc    DWORD PTR [rax]
  40d6b5:	add    BYTE PTR [rbx],cl
  40d6b7:	rex.WB
  40d6b8:	rex.WRXB
  40d6b9:	rex.RB js 0x40d71f
  40d6bc:	gs jo  0x40d733
  40d6bf:	imul   ebp,DWORD PTR [rdi+0x6e],0xde500041
  40d6c6:	add    BYTE PTR [rax],al
  40d6c9:	add    BYTE PTR [rax],al
  40d6cb:	add    BYTE PTR [rsi],al
  40d6cd:	rex.XB jb 0x40d735
  40d6d0:	(bad)  
  40d6d1:	je     0x40d738
  40d6d3:	add    eax,DWORD PTR [rax]
	...
  40d6dd:	sub    BYTE PTR [rax],al
  40d6df:	add    cl,BYTE PTR [rax]
  40d6e1:	pop    rax
  40d6e2:	xlat   BYTE PTR ds:[rbx]
  40d6e3:	add    BYTE PTR [rax],al
  40d6e6:	add    BYTE PTR [rax],al
  40d6e8:	add    BYTE PTR [rax],al
  40d6ea:	add    BYTE PTR [rbx+rdx*2],al
  40d6ed:	gs ins BYTE PTR es:[rdi],dx
  40d6ef:	data16 add al,BYTE PTR [rax]
  40d6f2:	add    BYTE PTR [rax+0x4011],al
  40d6f8:	add    BYTE PTR [rax],al
  40d6fa:	add    BYTE PTR [rax],al
  40d6fc:	add    BYTE PTR [rcx],al
  40d6fe:	jae    0x40d702
  40d700:	add    BYTE PTR [rdx],al
  40d702:	add    BYTE PTR [rsi+0x0],cl
  40d705:	(bad)  
  40d706:	fild   WORD PTR [rax+0x0]
  40d709:	add    BYTE PTR [rax],al
  40d70b:	add    BYTE PTR [rax],al
  40d70d:	add    al,0x6d
  40d70f:	(bad)  
  40d710:	imul   esp,DWORD PTR [rbp+0x3],0x0
  40d714:	adc    BYTE PTR [rcx],0x40
  40d717:	add    BYTE PTR [rax],al
  40d719:	add    BYTE PTR [rax],al
  40d71b:	add    BYTE PTR [rax],ch
  40d71d:	add    BYTE PTR [rbx],al
	...
  40d727:	add    BYTE PTR [rax],al
  40d729:	add    BYTE PTR [rbx+rdx*2],al
  40d72c:	gs ins BYTE PTR es:[rdi],dx
  40d72e:	data16 add al,BYTE PTR [rax]
  40d731:	add    BYTE PTR [rax+0x4011],al
  40d737:	add    BYTE PTR [rax],al
  40d739:	add    BYTE PTR [rax],al
  40d73b:	add    BYTE PTR [rcx],al
  40d73d:	jae    0x40d741
  40d73f:	add    BYTE PTR [rax-0x80],al
  40d742:	adc    DWORD PTR [rax+0x0],eax
  40d745:	add    BYTE PTR [rax],al
  40d747:	add    BYTE PTR [rax],al
  40d749:	add    BYTE PTR [rax],al
  40d74b:	add    DWORD PTR [rcx],eax
  40d74d:	add    al,BYTE PTR [rax]
  40d74f:	add    al,BYTE PTR [rax]
  40d751:	add    BYTE PTR [rax],al
  40d753:	add    BYTE PTR [rax],al
  40d755:	add    BYTE PTR [rax],al
  40d757:	add    BYTE PTR [rax-0x29],ah
  40d75a:	add    BYTE PTR [rax],al
  40d75d:	add    BYTE PTR [rax],al
  40d75f:	add    BYTE PTR [rdi],al
  40d761:	or     ecx,DWORD PTR [rcx+0x4f]
  40d764:	rex.RB js 0x40d7ca
  40d767:	gs jo  0x40d7de
  40d76a:	imul   ebp,DWORD PTR [rdi+0x6e],0x40d698
  40d771:	add    BYTE PTR [rax],al
  40d773:	add    BYTE PTR [rax],al
  40d775:	pop    rax
  40d776:	(bad)  
  40d777:	add    BYTE PTR [rax],al
  40d77a:	add    BYTE PTR [rax],al
  40d77c:	add    BYTE PTR [rax],al
  40d77e:	add    BYTE PTR [rbx],cl
  40d780:	push   rdi
  40d781:	imul   ebp,DWORD PTR [rsi+0x41],0x78456970
  40d788:	je     0x40d7fc
  40d78a:	(bad)  
  40d78b:	add    BYTE PTR [rax],al
  40d78d:	add    BYTE PTR [rax],al
  40d78f:	add    al,BYTE PTR [rax]
  40d791:	add    BYTE PTR [rax],al
  40d793:	int3   
  40d794:	int3   
  40d795:	int3   
  40d796:	int3   
  40d797:	int3   
  40d798:	int3   
  40d799:	int3   
  40d79a:	int3   
  40d79b:	int3   
  40d79c:	int3   
  40d79d:	int3   
  40d79e:	int3   
  40d79f:	int3   
  40d7a0:	jmp    QWORD PTR [rip+0x11062]        # 0x41e808
  40d7a6:	int3   
  40d7a7:	int3   
  40d7a8:	int3   
  40d7a9:	int3   
  40d7aa:	int3   
  40d7ab:	int3   
  40d7ac:	int3   
  40d7ad:	int3   
  40d7ae:	int3   
  40d7af:	int3   
  40d7b0:	jmp    QWORD PTR [rip+0x1103a]        # 0x41e7f0
  40d7b6:	int3   
  40d7b7:	int3   
  40d7b8:	int3   
  40d7b9:	int3   
  40d7ba:	int3   
  40d7bb:	int3   
  40d7bc:	int3   
  40d7bd:	int3   
  40d7be:	int3   
  40d7bf:	int3   
  40d7c0:	jmp    QWORD PTR [rip+0x1103a]        # 0x41e800
  40d7c6:	int3   
  40d7c7:	int3   
  40d7c8:	int3   
  40d7c9:	int3   
  40d7ca:	int3   
  40d7cb:	int3   
  40d7cc:	int3   
  40d7cd:	int3   
  40d7ce:	int3   
  40d7cf:	int3   
  40d7d0:	jmp    QWORD PTR [rip+0x11012]        # 0x41e7e8
  40d7d6:	int3   
  40d7d7:	int3   
  40d7d8:	int3   
  40d7d9:	int3   
  40d7da:	int3   
  40d7db:	int3   
  40d7dc:	int3   
  40d7dd:	int3   
  40d7de:	int3   
  40d7df:	int3   
  40d7e0:	jmp    QWORD PTR [rip+0x10ff2]        # 0x41e7d8
  40d7e6:	int3   
  40d7e7:	int3   
  40d7e8:	int3   
  40d7e9:	int3   
  40d7ea:	int3   
  40d7eb:	int3   
  40d7ec:	int3   
  40d7ed:	int3   
  40d7ee:	int3   
  40d7ef:	int3   
  40d7f0:	jmp    QWORD PTR [rip+0x10fd2]        # 0x41e7c8
  40d7f6:	int3   
  40d7f7:	int3   
  40d7f8:	int3   
  40d7f9:	int3   
  40d7fa:	int3   
  40d7fb:	int3   
  40d7fc:	int3   
  40d7fd:	int3   
  40d7fe:	int3   
  40d7ff:	int3   
  40d800:	test   ecx,0x80000000
  40d806:	sete   al
  40d809:	ret    
  40d80a:	int3   
  40d80b:	int3   
  40d80c:	int3   
  40d80d:	int3   
  40d80e:	int3   
  40d80f:	int3   
  40d810:	push   rbp
  40d811:	sub    rsp,0x50
  40d815:	mov    rbp,rsp
  40d818:	mov    QWORD PTR [rbp+0x30],rcx
  40d81c:	mov    DWORD PTR [rbp+0x38],edx
  40d81f:	mov    DWORD PTR [rbp+0x3c],r8d
  40d823:	mov    QWORD PTR [rbp+0x48],0x0
  40d82b:	mov    QWORD PTR [rbp+0x40],0x0
  40d833:	nop
  40d834:	mov    rcx,QWORD PTR [rbp+0x30]
  40d838:	call   0x4084e0
  40d83d:	jmp    0x40d8b1
  40d83f:	lea    rcx,[rbp+0x48]
  40d843:	lea    rax,[rip+0x82f2]        # 0x415b3c
  40d84a:	mov    edx,DWORD PTR [rbp+0x38]
  40d84d:	shr    edx,0x4
  40d850:	and    edx,0xf
  40d853:	mov    edx,edx
  40d855:	movzx  rdx,WORD PTR [rax+rdx*2]
  40d85a:	call   0x409290
  40d85f:	lea    rcx,[rbp+0x40]
  40d863:	lea    rax,[rip+0x82d2]        # 0x415b3c
  40d86a:	mov    edx,DWORD PTR [rbp+0x38]
  40d86d:	and    edx,0xf
  40d870:	mov    edx,edx
  40d872:	movzx  rdx,WORD PTR [rax+rdx*2]
  40d877:	call   0x409290
  40d87c:	mov    rcx,QWORD PTR [rbp+0x30]
  40d880:	mov    edx,0x3
  40d886:	mov    r8,QWORD PTR [rbp+0x48]
  40d88a:	mov    r9,QWORD PTR [rbp+0x40]
  40d88e:	mov    rax,QWORD PTR [rbp+0x30]
  40d892:	mov    rax,QWORD PTR [rax]
  40d895:	mov    QWORD PTR [rsp+0x20],rax
  40d89a:	call   0x409680
  40d89f:	mov    eax,DWORD PTR [rbp+0x3c]
  40d8a2:	sub    eax,0x2
  40d8a5:	mov    DWORD PTR [rbp+0x3c],eax
  40d8a8:	mov    eax,DWORD PTR [rbp+0x38]
  40d8ab:	shr    eax,0x8
  40d8ae:	mov    DWORD PTR [rbp+0x38],eax
  40d8b1:	mov    eax,DWORD PTR [rbp+0x3c]
  40d8b4:	test   eax,eax
  40d8b6:	jg     0x40d83f
  40d8b8:	mov    eax,DWORD PTR [rbp+0x38]
  40d8bb:	test   eax,eax
  40d8bd:	ja     0x40d83f
  40d8bf:	nop
  40d8c0:	lea    rcx,[rbp+0x40]
  40d8c4:	mov    edx,0x2
  40d8ca:	call   0x4085c0
  40d8cf:	mov    rax,QWORD PTR [rbp+0x30]
  40d8d3:	lea    rsp,[rbp+0x50]
  40d8d7:	pop    rbp
  40d8d8:	ret    
  40d8d9:	lea    rax,[rax+0x0]
  40d8e0:	push   rbp
  40d8e1:	sub    rsp,0x20
  40d8e5:	mov    rbp,rsp
  40d8e8:	lea    rcx,[rdx+0x40]
  40d8ec:	mov    edx,0x2
  40d8f2:	call   0x4085c0
  40d8f7:	lea    rsp,[rbp+0x20]
  40d8fb:	pop    rbp
  40d8fc:	ret    
  40d8fd:	int3   
  40d8fe:	int3   
  40d8ff:	int3   
  40d900:	push   rbp
  40d901:	sub    rsp,0x40
  40d905:	mov    rbp,rsp
  40d908:	mov    DWORD PTR [rbp+0x2c],ecx
  40d90b:	mov    QWORD PTR [rbp+0x38],0x0
  40d913:	mov    QWORD PTR [rbp+0x30],0x0
  40d91b:	nop
  40d91c:	lea    rcx,[rbp+0x30]
  40d920:	mov    edx,DWORD PTR [rbp+0x2c]
  40d923:	mov    r8d,0x8
  40d92a:	call   0x40d810
  40d92f:	lea    rcx,[rbp+0x38]
  40d933:	lea    rdx,[rip+0x72]        # 0x40d9ac
  40d93a:	mov    r8,QWORD PTR [rbp+0x30]
  40d93e:	call   0x409560
  40d943:	mov    rcx,QWORD PTR [rip+0xfffffffffffffaa6]        # 0x40d3f0
  40d94a:	mov    dl,0x1
  40d94c:	mov    r8,QWORD PTR [rbp+0x38]
  40d950:	call   0x40ddb0
  40d955:	mov    rcx,rax
  40d958:	call   0x407bd0
  40d95d:	nop
  40d95e:	lea    rcx,[rbp+0x30]
  40d962:	mov    edx,0x2
  40d968:	call   0x4085c0
  40d96d:	lea    rsp,[rbp+0x40]
  40d971:	pop    rbp
  40d972:	ret    
  40d973:	lea    rax,[rax+riz*1+0x0]
  40d978:	lea    rax,[rax*1+0x0]
  40d980:	push   rbp
  40d981:	sub    rsp,0x20
  40d985:	mov    rbp,rsp
  40d988:	lea    rcx,[rdx+0x30]
  40d98c:	mov    edx,0x2
  40d992:	call   0x4085c0
  40d997:	lea    rsp,[rbp+0x20]
  40d99b:	pop    rbp
  40d99c:	ret    
  40d99d:	add    BYTE PTR [rax],al
  40d99f:	add    BYTE PTR [rax-0xfffdfc],dh
  40d9a5:	(bad)  
  40d9a6:	(bad)  
  40d9a7:	dec    DWORD PTR [rdx]
  40d9a9:	add    BYTE PTR [rax],al
  40d9ab:	add    BYTE PTR [rdi+0x0],cl
  40d9ae:	rex.WR add BYTE PTR [rbp+0x0],r8b
  40d9b2:	and    BYTE PTR [rax],al
  40d9b4:	add    BYTE PTR gs:[rdx+0x0],dh
  40d9b8:	jb     0x40d9ba
  40d9ba:	outs   dx,DWORD PTR ds:[rsi]
  40d9bb:	add    BYTE PTR [rdx+0x0],dh
  40d9be:	and    BYTE PTR [rax],al
  40d9c0:	add    BYTE PTR [rax],al
  40d9c2:	int3   
  40d9c3:	int3   
  40d9c4:	int3   
  40d9c5:	int3   
  40d9c6:	int3   
  40d9c7:	int3   
  40d9c8:	int3   
  40d9c9:	int3   
  40d9ca:	int3   
  40d9cb:	int3   
  40d9cc:	int3   
  40d9cd:	int3   
  40d9ce:	int3   
  40d9cf:	int3   
  40d9d0:	push   rbx
  40d9d1:	sub    rsp,0x20
  40d9d5:	mov    ebx,ecx
  40d9d7:	mov    ecx,ebx
  40d9d9:	call   0x40d800
  40d9de:	test   al,al
  40d9e0:	jne    0x40d9e9
  40d9e2:	mov    ecx,ebx
  40d9e4:	call   0x40d900
  40d9e9:	add    rsp,0x20
  40d9ed:	pop    rbx
  40d9ee:	ret    
  40d9ef:	int3   
  40d9f0:	push   rbp
  40d9f1:	sub    rsp,0x40
  40d9f5:	mov    rbp,rsp
  40d9f8:	mov    QWORD PTR [rbp+0x28],rcx
  40d9fc:	mov    QWORD PTR [rbp+0x30],0x0
  40da04:	mov    QWORD PTR [rbp+0x38],0x0
  40da0c:	mov    QWORD PTR [rbp+0x58],rdx
  40da10:	lea    rcx,[rbp+0x58]
  40da14:	call   0x4086b0
  40da19:	nop
  40da1a:	lea    rcx,[rbp+0x38]
  40da1e:	mov    rdx,QWORD PTR [rbp+0x58]
  40da22:	mov    r8d,0x1
  40da29:	mov    r9d,0x4
  40da30:	call   0x409200
  40da35:	mov    rcx,QWORD PTR [rbp+0x38]
  40da39:	lea    rdx,[rip+0xd0]        # 0x40db10
  40da40:	call   0x4091f0
  40da45:	test   eax,eax
  40da47:	jne    0x40da58
  40da49:	mov    rcx,QWORD PTR [rbp+0x28]
  40da4d:	mov    rdx,QWORD PTR [rbp+0x58]
  40da51:	call   0x408a70
  40da56:	jmp    0x40dab3
  40da58:	mov    rcx,QWORD PTR [rbp+0x58]
  40da5c:	call   0x408f20
  40da61:	mov    rcx,rax
  40da64:	call   0x40d7e0
  40da69:	test   eax,eax
  40da6b:	je     0x40da9e
  40da6d:	lea    rcx,[rbp+0x30]
  40da71:	mov    rdx,QWORD PTR [rbp+0x58]
  40da75:	mov    r8d,0x2
  40da7c:	mov    r9d,0x800
  40da83:	call   0x409200
  40da88:	mov    rcx,QWORD PTR [rbp+0x28]
  40da8c:	lea    rdx,[rip+0x8d]        # 0x40db20
  40da93:	mov    r8,QWORD PTR [rbp+0x30]
  40da97:	call   0x408f40
  40da9c:	jmp    0x40dab2
  40da9e:	mov    rcx,QWORD PTR [rbp+0x28]
  40daa2:	lea    rdx,[rip+0x67]        # 0x40db10
  40daa9:	mov    r8,QWORD PTR [rbp+0x58]
  40daad:	call   0x408f40
  40dab2:	nop
  40dab3:	lea    rcx,[rbp+0x30]
  40dab7:	mov    edx,0x2
  40dabd:	call   0x408620
  40dac2:	lea    rcx,[rbp+0x58]
  40dac6:	call   0x408580
  40dacb:	mov    rax,QWORD PTR [rbp+0x28]
  40dacf:	lea    rsp,[rbp+0x40]
  40dad3:	pop    rbp
  40dad4:	ret    
  40dad5:	mov    rax,rax
  40dad8:	lea    rax,[rax*1+0x0]
  40dae0:	push   rbp
  40dae1:	push   rbx
  40dae2:	sub    rsp,0x28
  40dae6:	mov    rbp,rsp
  40dae9:	mov    rbx,rdx
  40daec:	lea    rcx,[rbx+0x30]
  40daf0:	mov    edx,0x2
  40daf6:	call   0x408620
  40dafb:	lea    rcx,[rbx+0x58]
  40daff:	call   0x408580
  40db04:	lea    rsp,[rbp+0x28]
  40db08:	pop    rbx
  40db09:	pop    rbp
  40db0a:	ret    
  40db0b:	add    BYTE PTR [rax],cl
  40db0d:	add    BYTE PTR [rax],al
  40db0f:	add    BYTE PTR [rax+rax*1+0x5c],bl
  40db13:	add    BYTE PTR [rdi],bh
  40db15:	add    BYTE PTR [rax+rax*1+0x0],bl
  40db19:	add    BYTE PTR [rax],al
  40db1b:	add    BYTE PTR [rsi],cl
  40db1d:	add    BYTE PTR [rax],al
  40db1f:	add    BYTE PTR [rax+rax*1+0x5c],bl
  40db23:	add    BYTE PTR [rdi],bh
  40db25:	add    BYTE PTR [rax+rax*1+0x55],bl
  40db29:	add    BYTE PTR [rsi+0x0],cl
  40db2c:	rex.XB add BYTE PTR [r8],al
  40db2f:	add    BYTE PTR [rbp+0x48],dl
  40db32:	sub    esp,0x30
  40db35:	mov    rbp,rsp
  40db38:	mov    QWORD PTR [rbp+0x28],0x0
  40db40:	mov    QWORD PTR [rbp+0x40],rcx
  40db44:	lea    rcx,[rbp+0x40]
  40db48:	call   0x4086b0
  40db4d:	nop
  40db4e:	lea    rcx,[rbp+0x28]
  40db52:	mov    rdx,QWORD PTR [rbp+0x40]
  40db56:	call   0x40d9f0
  40db5b:	mov    rcx,QWORD PTR [rbp+0x28]
  40db5f:	call   0x408f20
  40db64:	mov    QWORD PTR [rbp+0x20],rax
  40db68:	nop
  40db69:	lea    rcx,[rbp+0x28]
  40db6d:	call   0x408580
  40db72:	lea    rcx,[rbp+0x40]
  40db76:	call   0x408580
  40db7b:	mov    rax,QWORD PTR [rbp+0x20]
  40db7f:	lea    rsp,[rbp+0x30]
  40db83:	pop    rbp
  40db84:	ret    
  40db85:	mov    rax,rax
  40db88:	lea    rax,[rax*1+0x0]
  40db90:	push   rbp
  40db91:	push   rbx
  40db92:	sub    rsp,0x28
  40db96:	mov    rbp,rsp
  40db99:	mov    rbx,rdx
  40db9c:	lea    rcx,[rbx+0x28]
  40dba0:	call   0x408580
  40dba5:	lea    rcx,[rbx+0x40]
  40dba9:	call   0x408580
  40dbae:	lea    rsp,[rbp+0x28]
  40dbb2:	pop    rbx
  40dbb3:	pop    rbp
  40dbb4:	ret    
  40dbb5:	int3   
  40dbb6:	int3   
  40dbb7:	int3   
  40dbb8:	int3   
  40dbb9:	int3   
  40dbba:	int3   
  40dbbb:	int3   
  40dbbc:	int3   
  40dbbd:	int3   
  40dbbe:	int3   
  40dbbf:	int3   
  40dbc0:	push   rbp
  40dbc1:	push   rbx
  40dbc2:	sub    rsp,0x248
  40dbc9:	mov    rbp,rsp
  40dbcc:	mov    rbx,rcx
  40dbcf:	mov    ecx,0x3000
  40dbd5:	xor    rax,rax
  40dbd8:	mov    r8d,edx
  40dbdb:	xor    r9,r9
  40dbde:	lea    rdx,[rbp+0x40]
  40dbe2:	mov    QWORD PTR [rsp+0x20],rdx
  40dbe7:	mov    DWORD PTR [rsp+0x28],0x200
  40dbef:	mov    QWORD PTR [rsp+0x30],0x0
  40dbf8:	mov    rdx,rax
  40dbfb:	call   0x40cd20
  40dc00:	jmp    0x40dc05
  40dc02:	sub    eax,0x1
  40dc05:	test   eax,eax
  40dc07:	jle    0x40dc3f
  40dc09:	movsxd rcx,eax
  40dc0c:	movzx  rcx,WORD PTR [rbp+rcx*2+0x3e]
  40dc12:	cmp    cx,0x3f
  40dc16:	ja     0x40dc38
  40dc18:	mov    edx,0x1
  40dc1e:	movzx  rcx,cx
  40dc22:	and    rcx,0x7f
  40dc26:	shl    rdx,cl
  40dc29:	mov    rcx,QWORD PTR [rip+0x38]        # 0x40dc68
  40dc30:	test   rdx,rcx
  40dc33:	setne  cl
  40dc36:	jmp    0x40dc3b
  40dc38:	xor    rcx,rcx
  40dc3b:	test   cl,cl
  40dc3d:	jne    0x40dc02
  40dc3f:	mov    rcx,rbx
  40dc42:	lea    rdx,[rbp+0x40]
  40dc46:	mov    r8d,eax
  40dc49:	call   0x408780
  40dc4e:	mov    rcx,rbx
  40dc51:	mov    rdx,QWORD PTR [rbx]
  40dc54:	call   0x4089b0
  40dc59:	mov    rax,rbx
  40dc5c:	lea    rsp,[rbp+0x248]
  40dc63:	pop    rbx
  40dc64:	pop    rbp
  40dc65:	ret    
  40dc66:	add    BYTE PTR [rax],al
  40dc68:	(bad)  
  40dc69:	(bad)  
  40dc6a:	(bad)  
  40dc6b:	inc    DWORD PTR [rcx]
  40dc6d:	add    BYTE PTR [rax],al
  40dc6f:	add    BYTE PTR [rbp+0x53],dl
  40dc72:	sub    rsp,0x128
  40dc79:	mov    rbp,rsp
  40dc7c:	mov    rbx,rcx
  40dc7f:	lea    rcx,[rbp+0x20]
  40dc83:	call   0x409c90
  40dc88:	mov    rcx,rbx
  40dc8b:	lea    rdx,[rbp+0x20]
  40dc8f:	call   0x409390
  40dc94:	mov    rax,rbx
  40dc97:	lea    rsp,[rbp+0x128]
  40dc9e:	pop    rbx
  40dc9f:	pop    rbp
  40dca0:	ret    
  40dca1:	int3   
  40dca2:	int3   
  40dca3:	int3   
  40dca4:	int3   
  40dca5:	int3   
  40dca6:	int3   
  40dca7:	int3   
  40dca8:	int3   
  40dca9:	int3   
  40dcaa:	int3   
  40dcab:	int3   
  40dcac:	int3   
  40dcad:	int3   
  40dcae:	int3   
  40dcaf:	int3   
  40dcb0:	push   rbp
  40dcb1:	sub    rsp,0x40
  40dcb5:	mov    rbp,rsp
  40dcb8:	mov    QWORD PTR [rbp+0x38],0x0
  40dcc0:	mov    QWORD PTR [rbp+0x30],0x0
  40dcc8:	mov    QWORD PTR [rbp+0x50],rcx
  40dccc:	mov    rcx,QWORD PTR [rbp+0x50]
  40dcd0:	call   0x408670
  40dcd5:	nop
  40dcd6:	call   0x40cd60
  40dcdb:	lea    rcx,[rbp+0x30]
  40dcdf:	mov    edx,eax
  40dce1:	call   0x40dc70
  40dce6:	lea    rcx,[rbp+0x38]
  40dcea:	mov    edx,0x3
  40dcf0:	mov    r8,QWORD PTR [rbp+0x30]
  40dcf4:	lea    r9,[rip+0x7d]        # 0x40dd78
  40dcfb:	mov    rax,QWORD PTR [rbp+0x50]
  40dcff:	mov    QWORD PTR [rsp+0x20],rax
  40dd04:	call   0x409680
  40dd09:	mov    rcx,QWORD PTR [rbp+0x38]
  40dd0d:	call   0x409260
  40dd12:	mov    rcx,rax
  40dd15:	call   0x40cd90
  40dd1a:	nop
  40dd1b:	lea    rcx,[rbp+0x30]
  40dd1f:	mov    edx,0x2
  40dd25:	call   0x4085c0
  40dd2a:	lea    rcx,[rbp+0x50]
  40dd2e:	call   0x4084e0
  40dd33:	lea    rsp,[rbp+0x40]
  40dd37:	pop    rbp
  40dd38:	ret    
  40dd39:	lea    rax,[rax+0x0]
  40dd40:	push   rbp
  40dd41:	push   rbx
  40dd42:	sub    rsp,0x28
  40dd46:	mov    rbp,rsp
  40dd49:	mov    rbx,rdx
  40dd4c:	lea    rcx,[rbx+0x30]
  40dd50:	mov    edx,0x2
  40dd56:	call   0x4085c0
  40dd5b:	lea    rcx,[rbx+0x50]
  40dd5f:	call   0x4084e0
  40dd64:	lea    rsp,[rbp+0x28]
  40dd68:	pop    rbx
  40dd69:	pop    rbp
  40dd6a:	ret    
  40dd6b:	add    BYTE PTR [rax-0xfffdfc],dh
  40dd71:	(bad)  
  40dd72:	(bad)  
  40dd73:	inc    DWORD PTR [rbx]
  40dd75:	add    BYTE PTR [rax],al
  40dd77:	add    BYTE PTR [rax],ah
  40dd79:	add    BYTE PTR [rdx],bh
  40dd7b:	add    BYTE PTR [rax],ah
  40dd7d:	add    BYTE PTR [rax],al
  40dd7f:	add    BYTE PTR [rbp+0x48],dl
  40dd82:	sub    esp,0x30
  40dd85:	mov    rbp,rsp
  40dd88:	mov    QWORD PTR [rbp+0x28],0xffffffffffffffff
  40dd90:	lea    rdx,[rbp+0x28]
  40dd94:	call   0x40d7a0
  40dd99:	test   eax,eax
  40dd9b:	jne    0x40dda5
  40dd9d:	mov    QWORD PTR [rbp+0x28],0xffffffffffffffff
  40dda5:	mov    rax,QWORD PTR [rbp+0x28]
  40dda9:	lea    rsp,[rbp+0x30]
  40ddad:	pop    rbp
  40ddae:	ret    
  40ddaf:	int3   
  40ddb0:	push   rbp
  40ddb1:	push   rbx
  40ddb2:	sub    rsp,0x38
  40ddb6:	mov    rbp,rsp
  40ddb9:	mov    QWORD PTR [rbp+0x28],rbp
  40ddbd:	mov    QWORD PTR [rbp+0x50],rcx
  40ddc1:	mov    BYTE PTR [rbp+0x58],dl
  40ddc4:	mov    QWORD PTR [rbp+0x60],r8
  40ddc8:	cmp    BYTE PTR [rbp+0x58],0x0
  40ddcc:	je     0x40dde0
  40ddce:	mov    rcx,QWORD PTR [rbp+0x50]
  40ddd2:	movzx  rdx,BYTE PTR [rbp+0x58]
  40ddd7:	call   0x4068e0
  40dddc:	mov    QWORD PTR [rbp+0x50],rax
  40dde0:	nop
  40dde1:	mov    rax,QWORD PTR [rbp+0x50]
  40dde5:	lea    rcx,[rax+0x8]
  40dde9:	mov    rdx,QWORD PTR [rbp+0x60]
  40dded:	call   0x4089b0
  40ddf2:	cmp    BYTE PTR [rbp+0x58],0x0
  40ddf6:	je     0x40de35
  40ddf8:	mov    rcx,QWORD PTR [rbp+0x50]
  40ddfc:	call   0x406920
  40de01:	mov    QWORD PTR [rbp+0x50],rax
  40de05:	jmp    0x40de35
  40de07:	nop
  40de08:	nop
  40de09:	cmp    BYTE PTR [rbp+0x58],0x0
  40de0d:	je     0x40de2f
  40de0f:	cmp    QWORD PTR [rbp+0x50],0x0
  40de14:	je     0x40de2f
  40de16:	mov    rcx,QWORD PTR [rbp+0x50]
  40de1a:	mov    dl,0x81
  40de1c:	mov    rax,QWORD PTR [rbp+0x50]
  40de20:	mov    rbx,QWORD PTR [rax]
  40de23:	call   QWORD PTR [rbx-0x20]
  40de26:	mov    rcx,QWORD PTR [rbp+0x50]
  40de2a:	call   0x406900
  40de2f:	call   0x407bf0
  40de34:	nop
  40de35:	mov    rax,QWORD PTR [rbp+0x50]
  40de39:	lea    rsp,[rbp+0x38]
  40de3d:	pop    rbx
  40de3e:	pop    rbp
  40de3f:	ret    
  40de40:	sub    rsp,0x28
  40de44:	call   0x407c30
  40de49:	add    rsp,0x28
  40de4d:	ret    
  40de4e:	int3   
  40de4f:	int3   
  40de50:	push   rbp
  40de51:	push   rbx
  40de52:	sub    rsp,0x38
  40de56:	mov    rbp,rsp
  40de59:	mov    QWORD PTR [rbp+0x20],0x0
  40de61:	mov    QWORD PTR [rbp+0x28],rbp
  40de65:	mov    QWORD PTR [rbp+0x50],rcx
  40de69:	mov    BYTE PTR [rbp+0x58],dl
  40de6c:	mov    QWORD PTR [rbp+0x60],r8
  40de70:	mov    rcx,QWORD PTR [rbp+0x60]
  40de74:	call   0x408670
  40de79:	cmp    BYTE PTR [rbp+0x58],0x0
  40de7d:	je     0x40de91
  40de7f:	mov    rcx,QWORD PTR [rbp+0x50]
  40de83:	movzx  rdx,BYTE PTR [rbp+0x58]
  40de88:	call   0x4068e0
  40de8d:	mov    QWORD PTR [rbp+0x50],rax
  40de91:	nop
  40de92:	nop
  40de93:	mov    rax,QWORD PTR [rbp+0x50]
  40de97:	mov    rcx,QWORD PTR [rax]
  40de9a:	lea    rdx,[rbp+0x20]
  40de9e:	mov    r8,QWORD PTR [rbp+0x60]
  40dea2:	call   0x40df60
  40dea7:	mov    rax,QWORD PTR [rbp+0x50]
  40deab:	lea    rcx,[rax+0x8]
  40deaf:	mov    rdx,QWORD PTR [rbp+0x20]
  40deb3:	call   0x4089b0
  40deb8:	nop
  40deb9:	lea    rcx,[rbp+0x20]
  40debd:	call   0x4084e0
  40dec2:	lea    rcx,[rbp+0x60]
  40dec6:	call   0x4084e0
  40decb:	cmp    BYTE PTR [rbp+0x58],0x0
  40decf:	je     0x40df0e
  40ded1:	mov    rcx,QWORD PTR [rbp+0x50]
  40ded5:	call   0x406920
  40deda:	mov    QWORD PTR [rbp+0x50],rax
  40dede:	jmp    0x40df0e
  40dee0:	nop
  40dee1:	nop
  40dee2:	cmp    BYTE PTR [rbp+0x58],0x0
  40dee6:	je     0x40df08
  40dee8:	cmp    QWORD PTR [rbp+0x50],0x0
  40deed:	je     0x40df08
  40deef:	mov    rcx,QWORD PTR [rbp+0x50]
  40def3:	mov    dl,0x81
  40def5:	mov    rax,QWORD PTR [rbp+0x50]
  40def9:	mov    rbx,QWORD PTR [rax]
  40defc:	call   QWORD PTR [rbx-0x20]
  40deff:	mov    rcx,QWORD PTR [rbp+0x50]
  40df03:	call   0x406900
  40df08:	call   0x407bf0
  40df0d:	nop
  40df0e:	mov    rax,QWORD PTR [rbp+0x50]
  40df12:	lea    rsp,[rbp+0x38]
  40df16:	pop    rbx
  40df17:	pop    rbp
  40df18:	ret    
  40df19:	lea    rax,[rax+0x0]
  40df20:	push   rbp
  40df21:	push   rbx
  40df22:	sub    rsp,0x28
  40df26:	mov    rbp,rsp
  40df29:	mov    rbx,rdx
  40df2c:	lea    rcx,[rbx+0x20]
  40df30:	call   0x4084e0
  40df35:	lea    rcx,[rbx+0x60]
  40df39:	call   0x4084e0
  40df3e:	lea    rsp,[rbp+0x28]
  40df42:	pop    rbx
  40df43:	pop    rbp
  40df44:	ret    
  40df45:	mov    rax,rax
  40df48:	lea    rax,[rax*1+0x0]
  40df50:	sub    rsp,0x28
  40df54:	call   0x407c30
  40df59:	add    rsp,0x28
  40df5d:	ret    
  40df5e:	int3   
  40df5f:	int3   
  40df60:	push   rbp
  40df61:	push   rbx
  40df62:	sub    rsp,0x68
  40df66:	mov    rbp,rsp
  40df69:	mov    QWORD PTR [rbp+0x48],rdx
  40df6d:	mov    QWORD PTR [rbp+0x58],0x0
  40df75:	mov    QWORD PTR [rbp+0x50],0x0
  40df7d:	mov    QWORD PTR [rbp+0x90],r8
  40df84:	mov    rcx,QWORD PTR [rbp+0x90]
  40df8b:	call   0x408670
  40df90:	nop
  40df91:	call   0x40cd40
  40df96:	mov    ebx,eax
  40df98:	lea    rcx,[rbp+0x58]
  40df9c:	mov    edx,ebx
  40df9e:	call   0x40dbc0
  40dfa3:	lea    rcx,[rbp+0x50]
  40dfa7:	mov    edx,ebx
  40dfa9:	call   0x40dc70
  40dfae:	mov    rcx,QWORD PTR [rbp+0x48]
  40dfb2:	mov    edx,0x5
  40dfb8:	mov    r8,QWORD PTR [rbp+0x90]
  40dfbf:	lea    r9,[rip+0x86]        # 0x40e04c
  40dfc6:	mov    rax,QWORD PTR [rbp+0x58]
  40dfca:	mov    QWORD PTR [rsp+0x20],rax
  40dfcf:	lea    rax,[rip+0x8a]        # 0x40e060
  40dfd6:	mov    QWORD PTR [rsp+0x28],rax
  40dfdb:	mov    rax,QWORD PTR [rbp+0x50]
  40dfdf:	mov    QWORD PTR [rsp+0x30],rax
  40dfe4:	call   0x409680
  40dfe9:	nop
  40dfea:	lea    rcx,[rbp+0x50]
  40dfee:	mov    edx,0x2
  40dff4:	call   0x4085c0
  40dff9:	lea    rcx,[rbp+0x90]
  40e000:	call   0x4084e0
  40e005:	mov    rax,QWORD PTR [rbp+0x48]
  40e009:	lea    rsp,[rbp+0x68]
  40e00d:	pop    rbx
  40e00e:	pop    rbp
  40e00f:	ret    
  40e010:	push   rbp
  40e011:	push   rbx
  40e012:	sub    rsp,0x28
  40e016:	mov    rbp,rsp
  40e019:	mov    rbx,rdx
  40e01c:	lea    rcx,[rbx+0x50]
  40e020:	mov    edx,0x2
  40e026:	call   0x4085c0
  40e02b:	lea    rcx,[rbx+0x90]
  40e032:	call   0x4084e0
  40e037:	lea    rsp,[rbp+0x28]
  40e03b:	pop    rbx
  40e03c:	pop    rbp
  40e03d:	ret    
  40e03e:	add    BYTE PTR [rax],al
  40e040:	mov    al,0x4
  40e042:	add    al,BYTE PTR [rax]
  40e044:	(bad)  
  40e045:	(bad)  
  40e046:	(bad)  
  40e047:	inc    DWORD PTR [rdx]
  40e049:	add    BYTE PTR [rax],al
  40e04b:	add    BYTE PTR [rdx],bh
  40e04d:	add    BYTE PTR [rax],ah
  40e04f:	add    BYTE PTR [rax],al
  40e051:	add    BYTE PTR [rax],al
  40e053:	add    BYTE PTR [rax-0xfffdfc],dh
  40e059:	(bad)  
  40e05a:	(bad)  
  40e05b:	inc    DWORD PTR [rdi]
  40e05d:	add    BYTE PTR [rax],al
  40e05f:	add    BYTE PTR [rax],ah
  40e061:	add    BYTE PTR [rbx+0x0],al
  40e064:	outs   dx,DWORD PTR ds:[rsi]
  40e065:	add    BYTE PTR [rax+rax*1+0x65],ah
  40e069:	add    BYTE PTR [rdx],bh
  40e06b:	add    BYTE PTR [rax],ah
  40e06d:	add    BYTE PTR [rax],al
  40e06f:	add    BYTE PTR [rbx+0xf0f905],al
  40e075:	add    BYTE PTR [rcx],al
  40e077:	cmp    DWORD PTR [rip+0xf0f2],0x0        # 0x41d170
  40e07e:	ret    
  40e07f:	int3   
  40e080:	sub    DWORD PTR [rip+0xf0e9],0x1        # 0x41d170
  40e087:	cmp    DWORD PTR [rip+0xf0e2],0xffffffff        # 0x41d170
  40e08e:	ret    
  40e08f:	int3   
  40e090:	pop    rax
  40e091:	loope  0x40e0d3
	...
  40e0a7:	add    BYTE PTR [rax-0x1f],bl
  40e0aa:	add    BYTE PTR [rax],al
  40e0ad:	add    BYTE PTR [rax],al
  40e0af:	add    al,cl
  40e0b1:	loop   0x40e0f3
  40e0b3:	add    BYTE PTR [rax],al
  40e0b5:	add    BYTE PTR [rax],al
  40e0b7:	add    BYTE PTR [rdx+0x40e1],al
  40e0bd:	add    BYTE PTR [rax],al
  40e0bf:	add    BYTE PTR [rdx-0x1e],bl
  40e0c2:	add    BYTE PTR [rax],al
	...
  40e0cd:	add    BYTE PTR [rax],al
  40e0cf:	add    BYTE PTR [rdx+riz*8+0x40],ch
  40e0d3:	add    BYTE PTR [rax],al
  40e0d5:	add    BYTE PTR [rax],al
  40e0d7:	add    al,ah
  40e0d9:	add    BYTE PTR [rax],al
  40e0db:	add    BYTE PTR [rax],al
  40e0dd:	add    BYTE PTR [rax],al
  40e0df:	add    BYTE PTR [rax],bl
  40e0e1:	adc    eax,0x40
  40e0e6:	add    BYTE PTR [rax],al
  40e0e8:	mov    al,0x66
  40e0ea:	add    BYTE PTR [rax],al
  40e0ed:	add    BYTE PTR [rax],al
  40e0ef:	add    al,al
  40e0f1:	data16 add BYTE PTR [rax],al
  40e0f5:	add    BYTE PTR [rax],al
  40e0f7:	add    BYTE PTR [rax],ah
  40e0f9:	push   0x40
  40e0fe:	add    BYTE PTR [rax],al
  40e100:	adc    BYTE PTR [rax+0x40],ch
  40e103:	add    BYTE PTR [rax],al
  40e105:	add    BYTE PTR [rax],al
  40e107:	add    BYTE PTR [rax+0x68],dl
  40e10a:	add    BYTE PTR [rax],al
  40e10d:	add    BYTE PTR [rax],al
  40e10f:	add    BYTE PTR [rax+0x68],ah
  40e112:	add    BYTE PTR [rax],al
  40e115:	add    BYTE PTR [rax],al
  40e117:	add    BYTE PTR [rax+0x68],dh
  40e11a:	add    BYTE PTR [rax],al
  40e11d:	add    BYTE PTR [rax],al
  40e11f:	add    BYTE PTR [rax+0x68],al
  40e122:	add    BYTE PTR [rax],al
  40e125:	add    BYTE PTR [rax],al
  40e127:	add    BYTE PTR [rax+0x64],al
  40e12a:	add    BYTE PTR [rax],al
  40e12d:	add    BYTE PTR [rax],al
  40e12f:	add    BYTE PTR [rax+0x64],dh
  40e132:	add    BYTE PTR [rax],al
  40e135:	add    BYTE PTR [rax],al
  40e137:	add    BYTE PTR [rax+0x65],ah
  40e13a:	add    BYTE PTR [rax],al
  40e13d:	add    BYTE PTR [rax],al
  40e13f:	add    BYTE PTR [rax+0x4064],dl
  40e145:	add    BYTE PTR [rax],al
  40e147:	add    BYTE PTR [rax+0x4064],ah
  40e14d:	add    BYTE PTR [rax],al
  40e14f:	add    BYTE PTR [rax+0x4064],dh
  40e155:	add    BYTE PTR [rax],al
  40e157:	add    BYTE PTR [rsi],cl
  40e159:	add    BYTE PTR [rax],al
  40e15b:	add    BYTE PTR [rax],al
  40e15d:	add    BYTE PTR [rdx],al
  40e15f:	add    BYTE PTR [rax],al
  40e161:	add    BYTE PTR [rax-0x2d],ch
  40e164:	add    BYTE PTR [rax],al
  40e167:	add    BYTE PTR [rax],al
  40e169:	add    BYTE PTR [rax],dl
  40e16b:	add    BYTE PTR [rax],al
  40e16d:	add    BYTE PTR [rax],al
  40e16f:	add    BYTE PTR [rax],al
  40e171:	add    BYTE PTR [rax+0x4011],al
  40e177:	add    BYTE PTR [rax],al
  40e179:	add    al,dl
	...
  40e18b:	add    BYTE PTR [rax],cl
  40e18d:	add    BYTE PTR [rax],al
  40e18f:	and    BYTE PTR [rcx],dl
  40e191:	add    BYTE PTR [rax],al
  40e194:	add    BYTE PTR [rax],al
  40e196:	add    BYTE PTR [rax],cl
  40e198:	add    BYTE PTR [rax],al
  40e19a:	add    BYTE PTR [rip+0x70695068],al        # 0x70aa3208
  40e1a0:	add    al,BYTE PTR gs:[rax]
  40e1a3:	add    BYTE PTR [rax-0x2d],ch
  40e1a6:	add    BYTE PTR [rax],al
  40e1a9:	add    BYTE PTR [rax],al
  40e1ab:	add    BYTE PTR [rax],dl
  40e1ad:	add    BYTE PTR [rax],al
  40e1af:	add    BYTE PTR [rbx],cl
  40e1b1:	rex.X (bad) 
  40e1b3:	movsxd ebp,DWORD PTR [rbx+0x75]
  40e1b6:	jo     0x40e1fb
  40e1b8:	outs   dx,DWORD PTR ds:[rsi]
  40e1b9:	ins    DWORD PTR es:[rdi],dx
  40e1ba:	jo     0x40e22f
  40e1bc:	add    al,BYTE PTR [rax]
  40e1be:	add    al,bl
  40e1c0:	adc    DWORD PTR [rax+0x0],eax
  40e1c3:	add    BYTE PTR [rax],al
  40e1c5:	add    BYTE PTR [rax],al
  40e1c7:	sbb    BYTE PTR [rax],al
  40e1c9:	add    BYTE PTR [rax],al
  40e1cb:	or     al,0x49
  40e1cd:	outs   dx,BYTE PTR ds:[rsi]
  40e1ce:	jae    0x40e244
  40e1d0:	(bad)  
  40e1d1:	outs   dx,BYTE PTR ds:[rsi]
  40e1d2:	movsxd esp,DWORD PTR [rbp+0x47]
  40e1d5:	push   rbp
  40e1d6:	rex.WB
  40e1d7:	add    r8b,BYTE PTR [rax]
  40e1da:	add    al,bl
  40e1dc:	adc    DWORD PTR [rax+0x0],eax
  40e1df:	add    BYTE PTR [rax],al
  40e1e1:	add    BYTE PTR [rax],al
  40e1e3:	sub    BYTE PTR [rax],al
  40e1e5:	add    BYTE PTR [rax],al
  40e1e7:	(bad)  
  40e1e8:	push   rbx
  40e1e9:	gs je  0x40e233
  40e1ec:	push   rbp
  40e1ed:	rex.WB
  40e1ee:	add    r8b,BYTE PTR [rax]
  40e1f1:	add    al,bl
  40e1f3:	adc    DWORD PTR [rax+0x0],eax
  40e1f6:	add    BYTE PTR [rax],al
  40e1f8:	add    BYTE PTR [rax],al
  40e1fa:	cmp    BYTE PTR [rax],al
  40e1fc:	add    BYTE PTR [rax],al
  40e1fe:	or     BYTE PTR [rbx+0x6e],dl
  40e201:	(bad)  
  40e202:	jo     0x40e24b
  40e204:	push   rbp
  40e205:	rex.WB
  40e206:	add    r8b,BYTE PTR [rax]
  40e209:	add    BYTE PTR [rax-0x2f],cl
  40e20c:	add    BYTE PTR [rax],al
  40e20f:	add    BYTE PTR [rax],al
  40e211:	add    BYTE PTR [rax+0x0],cl
  40e214:	add    BYTE PTR [rax],al
  40e216:	or     BYTE PTR [rbx+0x6e],dl
  40e219:	(bad)  
  40e21a:	jo     0x40e26c
  40e21c:	jb     0x40e28d
  40e21e:	jo     0x40e222
  40e220:	add    BYTE PTR [rax],al
  40e222:	add    BYTE PTR [rax],dl
  40e224:	add    BYTE PTR [rax],al
  40e227:	add    BYTE PTR [rax],al
  40e229:	add    al,cl
  40e22b:	add    BYTE PTR [rax],al
  40e22d:	add    BYTE PTR [rdi],cl
  40e22f:	push   rbx
  40e230:	push   0x776f6461
  40e235:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40e237:	jo     0x40e2b2
  40e239:	rex.WB outs dx,BYTE PTR ds:[rsi]
  40e23b:	push   rbp
  40e23c:	jae    0x40e2a3
  40e23e:	add    al,BYTE PTR [rax]
  40e240:	add    BYTE PTR [rax+0x4011],al
  40e246:	add    BYTE PTR [rax],al
  40e248:	add    al,dl
  40e24a:	add    BYTE PTR [rax],al
  40e24c:	add    BYTE PTR [rdx],cl
  40e24e:	push   rbx
  40e24f:	push   0x776f6461
  40e254:	push   rax
  40e255:	(bad)  
  40e256:	je     0x40e2c0
  40e258:	add    al,BYTE PTR [rax]
  40e25a:	add    BYTE PTR [rax],al
  40e25c:	add    DWORD PTR [rax],eax
  40e25e:	jnp    0x40e242
  40e260:	add    BYTE PTR [rax],al
  40e263:	add    BYTE PTR [rax],al
  40e265:	add    BYTE PTR [rax+rax*1-0xf],al
  40e269:	inc    DWORD PTR [rax]
  40e26b:	add    BYTE PTR [rsi],cl
  40e26d:	push   rsp
  40e26e:	push   rbx
  40e26f:	gs jb  0x40e2e8
  40e272:	imul   esp,DWORD PTR [rbx+0x65],0x65696c43
  40e279:	outs   dx,BYTE PTR ds:[rsi]
  40e27a:	je     0x40e2c0
  40e27c:	add    BYTE PTR [rax],al
  40e27e:	jrcxz  0x40e2c0
  40e280:	add    BYTE PTR [rax],al
  40e282:	add    BYTE PTR [rax],al
  40e284:	add    BYTE PTR [rsi],al
  40e286:	rex.XB jb 0x40e2ee
  40e289:	(bad)  
  40e28a:	je     0x40e2f1
  40e28c:	add    eax,DWORD PTR [rax]
	...
  40e296:	sub    BYTE PTR [rax],al
  40e298:	add    cl,BYTE PTR [rax]
  40e29a:	shl    dl,0x40
  40e29d:	add    BYTE PTR [rax],al
  40e29f:	add    BYTE PTR [rax],al
  40e2a1:	add    BYTE PTR [rax],al
  40e2a3:	add    BYTE PTR [rbx+rdx*2],al
  40e2a6:	gs ins BYTE PTR es:[rdi],dx
  40e2a8:	data16 add al,BYTE PTR [rax]
  40e2ab:	add    BYTE PTR [rax],ah
  40e2ad:	adc    DWORD PTR [rax+0x0],eax
  40e2b0:	add    BYTE PTR [rax],al
  40e2b2:	add    BYTE PTR [rax],al
  40e2b4:	add    BYTE PTR [rax],al
  40e2b6:	add    al,0x70
  40e2b8:	imul   esi,DWORD PTR [rax+0x65],0x20002
  40e2bf:	add    al,cl
  40e2c1:	loop   0x40e303
  40e2c3:	add    BYTE PTR [rax],al
  40e2c5:	add    BYTE PTR [rax],al
  40e2c7:	add    BYTE PTR [rdi],al
  40e2c9:	(bad)  
  40e2ca:	push   rsp
  40e2cb:	push   rbx
  40e2cc:	gs jb  0x40e345
  40e2cf:	imul   esp,DWORD PTR [rbx+0x65],0x65696c43
  40e2d6:	outs   dx,BYTE PTR ds:[rsi]
  40e2d7:	je     0x40e331
  40e2d9:	loope  0x40e31b
  40e2db:	add    BYTE PTR [rax],al
  40e2dd:	add    BYTE PTR [rax],al
  40e2df:	add    BYTE PTR [rax],bh
  40e2e1:	and    DWORD PTR [rax+0x0],eax
  40e2e4:	add    BYTE PTR [rax],al
  40e2e6:	add    BYTE PTR [rax],al
  40e2e8:	add    BYTE PTR [rax],al
  40e2ea:	or     eax,0x76726553
  40e2ef:	imul   esp,DWORD PTR [rbx+0x65],0x65696c43
  40e2f6:	outs   dx,BYTE PTR ds:[rsi]
  40e2f7:	je     0x40e2f9
  40e2f9:	add    BYTE PTR [rax],al
  40e2fb:	add    BYTE PTR [rdx],al
  40e2fd:	add    BYTE PTR [rax],al
  40e2ff:	add    BYTE PTR [rbp+0x53],dl
  40e302:	sub    rsp,0x58
  40e306:	mov    rbp,rsp
  40e309:	mov    QWORD PTR [rbp+0x38],rbp
  40e30d:	mov    QWORD PTR [rbp+0x70],rcx
  40e311:	mov    BYTE PTR [rbp+0x78],dl
  40e314:	mov    QWORD PTR [rbp+0x80],r8
  40e31b:	cmp    BYTE PTR [rbp+0x78],0x0
  40e31f:	je     0x40e333
  40e321:	mov    rcx,QWORD PTR [rbp+0x70]
  40e325:	movzx  rdx,BYTE PTR [rbp+0x78]
  40e32a:	call   0x4068e0
  40e32f:	mov    QWORD PTR [rbp+0x70],rax
  40e333:	nop
  40e334:	mov    rax,QWORD PTR [rbp+0x70]
  40e338:	mov    rcx,QWORD PTR [rbp+0x80]
  40e33f:	mov    QWORD PTR [rax+0x8],rcx
  40e343:	xor    rcx,rcx
  40e346:	xor    rdx,rdx
  40e349:	lea    r8,[rip+0x80]        # 0x40e3d0
  40e350:	mov    r9,QWORD PTR [rbp+0x70]
  40e354:	mov    DWORD PTR [rsp+0x20],0x0
  40e35c:	lea    rax,[rbp+0x4c]
  40e360:	mov    QWORD PTR [rsp+0x28],rax
  40e365:	call   0x40cce0
  40e36a:	cmp    BYTE PTR [rbp+0x78],0x0
  40e36e:	je     0x40e3ad
  40e370:	mov    rcx,QWORD PTR [rbp+0x70]
  40e374:	call   0x406920
  40e379:	mov    QWORD PTR [rbp+0x70],rax
  40e37d:	jmp    0x40e3ad
  40e37f:	nop
  40e380:	nop
  40e381:	cmp    BYTE PTR [rbp+0x78],0x0
  40e385:	je     0x40e3a7
  40e387:	cmp    QWORD PTR [rbp+0x70],0x0
  40e38c:	je     0x40e3a7
  40e38e:	mov    rcx,QWORD PTR [rbp+0x70]
  40e392:	mov    dl,0x81
  40e394:	mov    rax,QWORD PTR [rbp+0x70]
  40e398:	mov    rbx,QWORD PTR [rax]
  40e39b:	call   QWORD PTR [rbx-0x20]
  40e39e:	mov    rcx,QWORD PTR [rbp+0x70]
  40e3a2:	call   0x406900
  40e3a7:	call   0x407bf0
  40e3ac:	nop
  40e3ad:	mov    rax,QWORD PTR [rbp+0x70]
  40e3b1:	lea    rsp,[rbp+0x58]
  40e3b5:	pop    rbx
  40e3b6:	pop    rbp
  40e3b7:	ret    
  40e3b8:	lea    rax,[rax*1+0x0]
  40e3c0:	sub    rsp,0x28
  40e3c4:	call   0x407c30
  40e3c9:	add    rsp,0x28
  40e3cd:	ret    
  40e3ce:	int3   
  40e3cf:	int3   
  40e3d0:	push   rbx
  40e3d1:	sub    rsp,0x20
  40e3d5:	call   0x40f1d0
  40e3da:	mov    eax,ebx
  40e3dc:	add    rsp,0x20
  40e3e0:	pop    rbx
  40e3e1:	ret    
  40e3e2:	int3   
  40e3e3:	int3   
  40e3e4:	int3   
  40e3e5:	int3   
  40e3e6:	int3   
  40e3e7:	int3   
  40e3e8:	int3   
  40e3e9:	int3   
  40e3ea:	int3   
  40e3eb:	int3   
  40e3ec:	int3   
  40e3ed:	int3   
  40e3ee:	int3   
  40e3ef:	int3   
  40e3f0:	xor    rax,rax
  40e3f3:	test   rcx,rcx
  40e3f6:	je     0x40e3fb
  40e3f8:	mov    eax,DWORD PTR [rcx-0x4]
  40e3fb:	add    eax,eax
  40e3fd:	ret    
  40e3fe:	int3   
  40e3ff:	int3   
  40e400:	push   rbp
  40e401:	sub    rsp,0x40
  40e405:	mov    rbp,rsp
  40e408:	mov    BYTE PTR [rbp+0x3f],0xff
  40e40c:	mov    rcx,QWORD PTR [rcx+0x8]
  40e410:	lea    rdx,[rbp+0x3f]
  40e414:	mov    r8d,0x1
  40e41b:	lea    r9,[rbp+0x38]
  40e41f:	mov    QWORD PTR [rsp+0x20],0x0
  40e428:	call   0x40cdf0
  40e42d:	lea    rsp,[rbp+0x40]
  40e431:	pop    rbp
  40e432:	ret    
  40e433:	int3   
  40e434:	int3   
  40e435:	int3   
  40e436:	int3   
  40e437:	int3   
  40e438:	int3   
  40e439:	int3   
  40e43a:	int3   
  40e43b:	int3   
  40e43c:	int3   
  40e43d:	int3   
  40e43e:	int3   
  40e43f:	int3   
  40e440:	push   rbp
  40e441:	sub    rsp,0x50
  40e445:	mov    rbp,rsp
  40e448:	mov    QWORD PTR [rbp+0x38],rcx
  40e44c:	mov    QWORD PTR [rbp+0x68],rdx
  40e450:	mov    rcx,QWORD PTR [rbp+0x68]
  40e454:	call   0x408670
  40e459:	nop
  40e45a:	mov    BYTE PTR [rbp+0x4f],0x0
  40e45e:	mov    rax,QWORD PTR [rbp+0x38]
  40e462:	mov    rcx,QWORD PTR [rax+0x8]
  40e466:	lea    rdx,[rbp+0x4f]
  40e46a:	mov    r8d,0x1
  40e471:	lea    r9,[rbp+0x48]
  40e475:	mov    QWORD PTR [rsp+0x20],0x0
  40e47e:	call   0x40cdf0
  40e483:	mov    rcx,QWORD PTR [rbp+0x68]
  40e487:	call   0x40e3f0
  40e48c:	mov    DWORD PTR [rbp+0x44],eax
  40e48f:	mov    rax,QWORD PTR [rbp+0x38]
  40e493:	mov    rcx,QWORD PTR [rax+0x8]
  40e497:	lea    rdx,[rbp+0x44]
  40e49b:	mov    r8d,0x4
  40e4a2:	lea    r9,[rbp+0x48]
  40e4a6:	mov    QWORD PTR [rsp+0x20],0x0
  40e4af:	call   0x40cdf0
  40e4b4:	lea    rcx,[rbp+0x68]
  40e4b8:	call   0x408c20
  40e4bd:	mov    rcx,QWORD PTR [rbp+0x38]
  40e4c1:	mov    rcx,QWORD PTR [rcx+0x8]
  40e4c5:	mov    rdx,rax
  40e4c8:	mov    r8d,DWORD PTR [rbp+0x44]
  40e4cc:	lea    r9,[rbp+0x48]
  40e4d0:	mov    QWORD PTR [rsp+0x20],0x0
  40e4d9:	call   0x40cdf0
  40e4de:	nop
  40e4df:	lea    rcx,[rbp+0x68]
  40e4e3:	call   0x4084e0
  40e4e8:	lea    rsp,[rbp+0x50]
  40e4ec:	pop    rbp
  40e4ed:	ret    
  40e4ee:	rex.W nop
  40e4f0:	push   rbp
  40e4f1:	sub    rsp,0x20
  40e4f5:	mov    rbp,rsp
  40e4f8:	lea    rcx,[rdx+0x68]
  40e4fc:	call   0x4084e0
  40e501:	lea    rsp,[rbp+0x20]
  40e505:	pop    rbp
  40e506:	ret    
  40e507:	int3   
  40e508:	int3   
  40e509:	int3   
  40e50a:	int3   
  40e50b:	int3   
  40e50c:	int3   
  40e50d:	int3   
  40e50e:	int3   
  40e50f:	int3   
  40e510:	push   rbp
  40e511:	push   rbx
  40e512:	sub    rsp,0x68
  40e516:	mov    rbp,rsp
  40e519:	mov    QWORD PTR [rbp+0x38],rcx
  40e51d:	mov    QWORD PTR [rbp+0x48],0x0
  40e525:	mov    QWORD PTR [rbp+0x40],0x0
  40e52d:	mov    QWORD PTR [rbp+0x58],0x0
  40e535:	nop
  40e536:	lea    rcx,[rbp+0x58]
  40e53a:	lea    rdx,[rip+0xc7]        # 0x40e608
  40e541:	call   0x408a30
  40e546:	mov    rcx,QWORD PTR [rbp+0x58]
  40e54a:	call   0x40e3f0
  40e54f:	mov    ebx,eax
  40e551:	lea    rcx,[rbp+0x58]
  40e555:	call   0x408c20
  40e55a:	mov    rcx,QWORD PTR [rbp+0x38]
  40e55e:	mov    rcx,QWORD PTR [rcx+0x8]
  40e562:	mov    rdx,rax
  40e565:	mov    r8d,ebx
  40e568:	lea    r9,[rbp+0x54]
  40e56c:	mov    QWORD PTR [rsp+0x20],0x0
  40e575:	call   0x40cdf0
  40e57a:	call   0x40cd40
  40e57f:	lea    rcx,[rbp+0x40]
  40e583:	mov    edx,eax
  40e585:	call   0x40dbc0
  40e58a:	lea    rcx,[rbp+0x48]
  40e58e:	lea    rdx,[rip+0xbf]        # 0x40e654
  40e595:	mov    r8,QWORD PTR [rbp+0x40]
  40e599:	call   0x409560
  40e59e:	mov    rcx,QWORD PTR [rbp+0x38]
  40e5a2:	mov    rdx,QWORD PTR [rbp+0x48]
  40e5a6:	call   0x40e440
  40e5ab:	nop
  40e5ac:	lea    rcx,[rbp+0x40]
  40e5b0:	mov    edx,0x2
  40e5b6:	call   0x4085c0
  40e5bb:	lea    rcx,[rbp+0x58]
  40e5bf:	call   0x4084e0
  40e5c4:	lea    rsp,[rbp+0x68]
  40e5c8:	pop    rbx
  40e5c9:	pop    rbp
  40e5ca:	ret    
  40e5cb:	lea    rax,[rax+riz*1+0x0]
  40e5d0:	push   rbp
  40e5d1:	push   rbx
  40e5d2:	sub    rsp,0x28
  40e5d6:	mov    rbp,rsp
  40e5d9:	mov    rbx,rdx
  40e5dc:	lea    rcx,[rbx+0x40]
  40e5e0:	mov    edx,0x2
  40e5e6:	call   0x4085c0
  40e5eb:	lea    rcx,[rbx+0x58]
  40e5ef:	call   0x4084e0
  40e5f4:	lea    rsp,[rbp+0x28]
  40e5f8:	pop    rbx
  40e5f9:	pop    rbp
  40e5fa:	ret    
  40e5fb:	add    BYTE PTR [rax-0xfffdfc],dh
  40e601:	(bad)  
  40e602:	(bad)  
  40e603:	call   FWORD PTR [rdi]
  40e605:	add    BYTE PTR [rax],al
  40e607:	add    BYTE PTR [rip+0x23002d00],ch        # 0x2341130d
  40e60d:	add    BYTE PTR [rbx],ah
  40e60f:	add    BYTE PTR [rax],ah
  40e611:	add    BYTE PTR [rax+rax*1+0x65],dl
  40e615:	add    BYTE PTR [rdx+0x0],dh
  40e618:	(bad)  
  40e619:	add    BYTE PTR [rbx+0x0],al
  40e61c:	outs   dx,DWORD PTR ds:[rsi]
  40e61d:	add    BYTE PTR [rax+0x0],dh
  40e620:	jns    0x40e622
  40e622:	push   rsp
  40e623:	add    BYTE PTR [rdx+0x0],dh
  40e626:	(bad)  
  40e627:	add    BYTE PTR [rsi+0x0],ch
  40e62a:	jae    0x40e62c
  40e62c:	data16 add BYTE PTR [rbp+0x0],ah
  40e630:	jb     0x40e632
  40e632:	add    BYTE PTR [r10+0x0],r14b
  40e636:	jb     0x40e638
  40e638:	outs   dx,DWORD PTR ds:[rsi]
  40e639:	add    BYTE PTR [rdx+0x0],dh
  40e63c:	and    BYTE PTR [rax],al
  40e63e:	and    eax,DWORD PTR [rax]
  40e640:	and    eax,DWORD PTR [rax]
  40e642:	sub    eax,0x2d00
  40e647:	add    BYTE PTR [rax-0xfffdfc],dh
  40e64d:	(bad)  
  40e64e:	(bad)  
  40e64f:	call   FWORD PTR [rsi]
  40e651:	add    BYTE PTR [rax],al
  40e653:	add    BYTE PTR [rax],ch
  40e655:	add    BYTE PTR [rbx+0x0],dl
  40e658:	add    BYTE PTR gs:[rdx+0x0],dh
  40e65c:	jbe    0x40e65e
  40e65e:	imul   eax,DWORD PTR [rax],0x650063
  40e664:	sub    DWORD PTR [rax],eax
  40e666:	and    BYTE PTR [rax],al
  40e668:	add    BYTE PTR [r10+0x0],r14b
  40e66c:	jb     0x40e66e
  40e66e:	outs   dx,DWORD PTR ds:[rsi]
  40e66f:	add    BYTE PTR [rdx+0x0],dh
  40e672:	and    BYTE PTR [rax],al
  40e674:	outs   dx,DWORD PTR ds:[rsi]
  40e675:	add    BYTE PTR [rax+0x0],dh
  40e678:	add    BYTE PTR gs:[rsi+0x0],ch
  40e67c:	imul   eax,DWORD PTR [rax],0x67006e
  40e682:	and    BYTE PTR [rax],al
  40e684:	data16 add BYTE PTR [rcx+0x0],ch
  40e688:	ins    BYTE PTR es:[rdi],dx
  40e689:	add    BYTE PTR [rbp+0x0],ah
  40e68c:	add    BYTE PTR cs:[rax],ah
  40e68f:	add    BYTE PTR [rax],al
  40e691:	add    ah,cl
  40e693:	int3   
  40e694:	int3   
  40e695:	int3   
  40e696:	int3   
  40e697:	int3   
  40e698:	int3   
  40e699:	int3   
  40e69a:	int3   
  40e69b:	int3   
  40e69c:	int3   
  40e69d:	int3   
  40e69e:	int3   
  40e69f:	int3   
  40e6a0:	push   rbp
  40e6a1:	push   rbx
  40e6a2:	sub    rsp,0x28
  40e6a6:	mov    rbp,rsp
  40e6a9:	mov    rbx,rdx
  40e6ac:	mov    rax,rbx
  40e6af:	lea    rdx,[rcx+0x9c]
  40e6b6:	mov    r8d,0x104
  40e6bd:	mov    rcx,rax
  40e6c0:	call   0x408ed0
  40e6c5:	mov    rax,rbx
  40e6c8:	lea    rsp,[rbp+0x28]
  40e6cc:	pop    rbx
  40e6cd:	pop    rbp
  40e6ce:	ret    
  40e6cf:	int3   
  40e6d0:	push   rbp
  40e6d1:	push   rbx
  40e6d2:	sub    rsp,0x2c8
  40e6d9:	mov    rbp,rsp
  40e6dc:	mov    QWORD PTR [rbp+0x30],rcx
  40e6e0:	mov    QWORD PTR [rbp+0x40],0x0
  40e6e8:	mov    QWORD PTR [rbp+0x48],0x0
  40e6f0:	mov    QWORD PTR [rbp+0x58],0x0
  40e6f8:	mov    QWORD PTR [rbp+0x50],0x0
  40e700:	mov    QWORD PTR [rbp+0x2e8],rdx
  40e707:	mov    rcx,QWORD PTR [rbp+0x2e8]
  40e70e:	call   0x408670
  40e713:	nop
  40e714:	lea    rcx,[rbp+0x58]
  40e718:	mov    rdx,QWORD PTR [rbp+0x2e8]
  40e71f:	lea    r8,[rip+0x19e]        # 0x40e8c4
  40e726:	call   0x409560
  40e72b:	lea    rcx,[rbp+0x50]
  40e72f:	mov    rdx,QWORD PTR [rbp+0x58]
  40e733:	call   0x409360
  40e738:	mov    rcx,QWORD PTR [rbp+0x50]
  40e73c:	call   0x40db30
  40e741:	mov    rcx,rax
  40e744:	lea    rdx,[rbp+0x70]
  40e748:	call   0x40cd00
  40e74d:	mov    rbx,rax
  40e750:	cmp    rbx,0xffffffffffffffff
  40e754:	je     0x40e761
  40e756:	mov    rcx,QWORD PTR [rbp+0x30]
  40e75a:	call   0x40e400
  40e75f:	jmp    0x40e77e
  40e761:	mov    rcx,QWORD PTR [rip+0xffffffffffffee68]        # 0x40d5d0
  40e768:	mov    dl,0x1
  40e76a:	lea    r8,[rip+0x16b]        # 0x40e8dc
  40e771:	call   0x40de50
  40e776:	mov    rcx,rax
  40e779:	call   0x407bd0
  40e77e:	mov    rcx,rbp
  40e781:	lea    rdx,[rbp+0x48]
  40e785:	call   0x40e6a0
  40e78a:	mov    rcx,QWORD PTR [rbp+0x48]
  40e78e:	lea    rdx,[rip+0x17b]        # 0x40e910
  40e795:	call   0x4091f0
  40e79a:	test   eax,eax
  40e79c:	je     0x40e7ed
  40e79e:	mov    rcx,rbp
  40e7a1:	lea    rdx,[rbp+0x40]
  40e7a5:	call   0x40e6a0
  40e7aa:	mov    rcx,QWORD PTR [rbp+0x40]
  40e7ae:	lea    rdx,[rip+0x163]        # 0x40e918
  40e7b5:	call   0x4091f0
  40e7ba:	test   eax,eax
  40e7bc:	je     0x40e7ed
  40e7be:	mov    DWORD PTR [rbp+0x94],0x0
  40e7c8:	mov    rax,QWORD PTR [rbp+0x30]
  40e7cc:	mov    rcx,QWORD PTR [rax+0x8]
  40e7d0:	lea    rdx,[rbp+0x70]
  40e7d4:	mov    r8d,0x250
  40e7db:	lea    r9,[rbp+0x6c]
  40e7df:	mov    QWORD PTR [rsp+0x20],0x0
  40e7e8:	call   0x40cdf0
  40e7ed:	mov    rcx,rbx
  40e7f0:	lea    rdx,[rbp+0x70]
  40e7f4:	call   0x40cd10
  40e7f9:	test   eax,eax
  40e7fb:	setne  al
  40e7fe:	test   al,al
  40e800:	jne    0x40e77e
  40e806:	mov    rcx,rbx
  40e809:	call   0x40ccf0
  40e80e:	mov    DWORD PTR [rbp+0x94],0xff
  40e818:	mov    rax,QWORD PTR [rbp+0x30]
  40e81c:	mov    rcx,QWORD PTR [rax+0x8]
  40e820:	lea    rdx,[rbp+0x70]
  40e824:	mov    r8d,0x250
  40e82b:	lea    r9,[rbp+0x6c]
  40e82f:	mov    QWORD PTR [rsp+0x20],0x0
  40e838:	call   0x40cdf0
  40e83d:	mov    al,0x1
  40e83f:	mov    BYTE PTR [rbp+0x3f],al
  40e842:	nop
  40e843:	lea    rcx,[rbp+0x40]
  40e847:	mov    edx,0x3
  40e84d:	call   0x408620
  40e852:	lea    rcx,[rbp+0x58]
  40e856:	call   0x4084e0
  40e85b:	lea    rcx,[rbp+0x2e8]
  40e862:	call   0x4084e0
  40e867:	movzx  rax,BYTE PTR [rbp+0x3f]
  40e86c:	lea    rsp,[rbp+0x2c8]
  40e873:	pop    rbx
  40e874:	pop    rbp
  40e875:	ret    
  40e876:	rex.W nop
  40e878:	lea    rax,[rax*1+0x0]
  40e880:	push   rbp
  40e881:	push   rbx
  40e882:	sub    rsp,0x28
  40e886:	mov    rbp,rsp
  40e889:	mov    rbx,rdx
  40e88c:	lea    rcx,[rbx+0x40]
  40e890:	mov    edx,0x3
  40e896:	call   0x408620
  40e89b:	lea    rcx,[rbx+0x58]
  40e89f:	call   0x4084e0
  40e8a4:	lea    rcx,[rbx+0x2e8]
  40e8ab:	call   0x4084e0
  40e8b0:	lea    rsp,[rbp+0x28]
  40e8b4:	pop    rbx
  40e8b5:	pop    rbp
  40e8b6:	ret    
  40e8b7:	add    BYTE PTR [rax-0xfffdfc],dh
  40e8bd:	(bad)  
  40e8be:	(bad)  
  40e8bf:	inc    DWORD PTR [rax+rax*1]
  40e8c2:	add    BYTE PTR [rax],al
  40e8c4:	pop    rsp
  40e8c5:	add    BYTE PTR [rdx],ch
  40e8c7:	add    BYTE PTR [rsi],ch
  40e8c9:	add    BYTE PTR [rdx],ch
  40e8cb:	add    BYTE PTR [rax],al
  40e8cd:	add    BYTE PTR [rax],al
  40e8cf:	add    BYTE PTR [rax-0xfffdfc],dh
  40e8d5:	(bad)  
  40e8d6:	(bad)  
  40e8d7:	call   QWORD PTR [rsi]
  40e8d9:	add    BYTE PTR [rax],al
  40e8db:	add    BYTE PTR [rbp+0x0],al
  40e8de:	jb     0x40e8e0
  40e8e0:	jb     0x40e8e2
  40e8e2:	outs   dx,DWORD PTR ds:[rsi]
  40e8e3:	add    BYTE PTR [rdx+0x0],dh
  40e8e6:	and    BYTE PTR [rax],al
  40e8e8:	imul   eax,DWORD PTR [rax],0x20006e
  40e8ee:	rex.RX add BYTE PTR [rcx+0x0],r13b
  40e8f2:	outs   dx,BYTE PTR ds:[rsi]
  40e8f3:	add    BYTE PTR [rax+rax*1+0x46],ah
  40e8f7:	add    BYTE PTR [rcx+0x0],ch
  40e8fa:	jb     0x40e8fc
  40e8fc:	jae    0x40e8fe
  40e8fe:	je     0x40e900
  40e900:	rex.RX add BYTE PTR [rcx+0x0],r13b
  40e904:	ins    BYTE PTR es:[rdi],dx
  40e905:	add    BYTE PTR [rbp+0x0],ah
  40e908:	add    BYTE PTR [rax],al
  40e90a:	add    BYTE PTR [rax],al
  40e90c:	add    al,BYTE PTR [rax]
  40e90e:	add    BYTE PTR [rax],al
  40e910:	add    BYTE PTR cs:[rax],al
  40e913:	add    BYTE PTR [rax+rax*1],al
  40e916:	add    BYTE PTR [rax],al
  40e918:	add    BYTE PTR cs:[rsi],ch
  40e91b:	add    BYTE PTR [rax],al
  40e91d:	add    ah,cl
  40e91f:	int3   
  40e920:	push   rbp
  40e921:	sub    rsp,0x50
  40e925:	mov    rbp,rsp
  40e928:	mov    QWORD PTR [rbp+0x60],rcx
  40e92c:	mov    rcx,QWORD PTR [rbp+0x60]
  40e930:	call   0x408670
  40e935:	nop
  40e936:	mov    rcx,QWORD PTR [rbp+0x60]
  40e93a:	call   0x409260
  40e93f:	mov    rcx,rax
  40e942:	mov    edx,0x80000000
  40e948:	mov    r8d,0x3
  40e94f:	xor    r9,r9
  40e952:	mov    DWORD PTR [rsp+0x20],0x3
  40e95a:	mov    DWORD PTR [rsp+0x28],0x8000000
  40e962:	mov    QWORD PTR [rsp+0x30],0x0
  40e96b:	call   0x40ccc0
  40e970:	mov    QWORD PTR [rbp+0x48],rax
  40e974:	nop
  40e975:	lea    rcx,[rbp+0x60]
  40e979:	call   0x4084e0
  40e97e:	mov    rax,QWORD PTR [rbp+0x48]
  40e982:	lea    rsp,[rbp+0x50]
  40e986:	pop    rbp
  40e987:	ret    
  40e988:	lea    rax,[rax*1+0x0]
  40e990:	push   rbp
  40e991:	sub    rsp,0x20
  40e995:	mov    rbp,rsp
  40e998:	lea    rcx,[rdx+0x60]
  40e99c:	call   0x4084e0
  40e9a1:	lea    rsp,[rbp+0x20]
  40e9a5:	pop    rbp
  40e9a6:	ret    
  40e9a7:	int3   
  40e9a8:	int3   
  40e9a9:	int3   
  40e9aa:	int3   
  40e9ab:	int3   
  40e9ac:	int3   
  40e9ad:	int3   
  40e9ae:	int3   
  40e9af:	int3   
  40e9b0:	push   rbp
  40e9b1:	push   rdi
  40e9b2:	push   rsi
  40e9b3:	sub    rsp,0xb0
  40e9ba:	mov    rbp,rsp
  40e9bd:	mov    QWORD PTR [rbp+0x38],0x0
  40e9c5:	mov    QWORD PTR [rbp+0x40],0x0
  40e9cd:	mov    QWORD PTR [rbp+0x58],0x0
  40e9d5:	mov    QWORD PTR [rbp+0x60],0x0
  40e9dd:	mov    QWORD PTR [rbp+0x90],0x0
  40e9e8:	mov    QWORD PTR [rbp+0x88],0x0
  40e9f3:	mov    QWORD PTR [rbp+0x80],0x0
  40e9fe:	mov    QWORD PTR [rbp+0x68],rbp
  40ea02:	mov    QWORD PTR [rbp+0xd0],rcx
  40ea09:	mov    QWORD PTR [rbp+0xd8],rdx
  40ea10:	mov    QWORD PTR [rbp+0xe0],r8
  40ea17:	mov    rcx,QWORD PTR [rbp+0xd8]
  40ea1e:	call   0x408670
  40ea23:	nop
  40ea24:	mov    rax,QWORD PTR [rbp+0xd0]
  40ea2b:	cmp    BYTE PTR [rax+0xc8],0x0
  40ea32:	jne    0x40ed03
  40ea38:	xor    rcx,rcx
  40ea3b:	mov    edx,0x2
  40ea41:	call   0x40d7f0
  40ea46:	nop
  40ea47:	mov    rax,QWORD PTR [rbp+0xd0]
  40ea4e:	lea    rcx,[rax+0x10]
  40ea52:	call   0x40d3b0
  40ea57:	mov    ecx,eax
  40ea59:	call   0x40d9d0
  40ea5e:	mov    rax,QWORD PTR [rbp+0xd0]
  40ea65:	mov    rax,QWORD PTR [rax+0x10]
  40ea69:	mov    rcx,rax
  40ea6c:	xor    rdx,rdx
  40ea6f:	mov    rax,QWORD PTR [rax]
  40ea72:	call   QWORD PTR [rax+0x28]
  40ea75:	mov    ecx,eax
  40ea77:	call   0x40d9d0
  40ea7c:	mov    rax,QWORD PTR [rbp+0xd0]
  40ea83:	mov    rax,QWORD PTR [rax+0x10]
  40ea87:	mov    rcx,rax
  40ea8a:	xor    rdx,rdx
  40ea8d:	xor    r8,r8
  40ea90:	mov    r9d,0x5
  40ea97:	mov    DWORD PTR [rsp+0x20],0x0
  40ea9f:	mov    rax,QWORD PTR [rax]
  40eaa2:	call   QWORD PTR [rax+0x30]
  40eaa5:	mov    ecx,eax
  40eaa7:	call   0x40d9d0
  40eaac:	mov    rax,QWORD PTR [rbp+0xd0]
  40eab3:	mov    rsi,QWORD PTR [rip+0x76fe]        # 0x4161b8
  40eaba:	lea    rdi,[rax+0x28]
  40eabe:	movs   QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  40eac0:	movs   QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  40eac2:	mov    rax,QWORD PTR [rbp+0xd0]
  40eac9:	mov    rax,QWORD PTR [rax+0x10]
  40eacd:	mov    rcx,rax
  40ead0:	mov    rdx,QWORD PTR [rbp+0xd0]
  40ead7:	lea    rdx,[rdx+0x28]
  40eadb:	mov    rax,QWORD PTR [rax]
  40eade:	call   QWORD PTR [rax+0x120]
  40eae4:	mov    ecx,eax
  40eae6:	call   0x40d9d0
  40eaeb:	mov    rax,QWORD PTR [rbp+0xd0]
  40eaf2:	mov    rsi,QWORD PTR [rip+0x76bf]        # 0x4161b8
  40eaf9:	lea    rdi,[rax+0x38]
  40eafd:	movs   QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  40eaff:	movs   QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  40eb01:	lea    rcx,[rbp+0x60]
  40eb05:	mov    rax,QWORD PTR [rbp+0xd8]
  40eb0c:	movzx  rdx,WORD PTR [rax]
  40eb10:	call   0x409290
  40eb15:	lea    rcx,[rbp+0x88]
  40eb1c:	mov    rdx,QWORD PTR [rbp+0x60]
  40eb20:	lea    r8,[rip+0x385]        # 0x40eeac
  40eb27:	call   0x409560
  40eb2c:	mov    rcx,QWORD PTR [rbp+0x88]
  40eb33:	call   0x409260
  40eb38:	lea    rcx,[rbp+0x58]
  40eb3c:	mov    rdx,rax
  40eb3f:	call   0x408e90
  40eb44:	mov    rsi,QWORD PTR [rip+0x766d]        # 0x4161b8
  40eb4b:	lea    rdi,[rbp+0x48]
  40eb4f:	movs   QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  40eb51:	movs   QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  40eb53:	mov    rax,QWORD PTR [rbp+0xd0]
  40eb5a:	mov    rax,QWORD PTR [rax+0x10]
  40eb5e:	mov    rcx,rax
  40eb61:	mov    rdx,QWORD PTR [rbp+0x58]
  40eb65:	lea    r8,[rbp+0x48]
  40eb69:	mov    r9,QWORD PTR [rbp+0xd0]
  40eb70:	lea    r9,[r9+0x38]
  40eb74:	mov    rax,QWORD PTR [rax]
  40eb77:	call   QWORD PTR [rax+0x128]
  40eb7d:	mov    ecx,eax
  40eb7f:	call   0x40d9d0
  40eb84:	jmp    0x40ebcc
  40eb86:	nop
  40eb87:	nop
  40eb88:	mov    QWORD PTR [rbp+0xa8],rax
  40eb8f:	lea    rcx,[rbp+0x40]
  40eb93:	lea    rdx,[rip+0x326]        # 0x40eec0
  40eb9a:	mov    rax,QWORD PTR [rbp+0xa8]
  40eba1:	mov    r8,QWORD PTR [rax+0x8]
  40eba5:	call   0x409560
  40ebaa:	mov    rcx,QWORD PTR [rip+0xffffffffffffe83f]        # 0x40d3f0
  40ebb1:	mov    dl,0x1
  40ebb3:	mov    r8,QWORD PTR [rbp+0x40]
  40ebb7:	call   0x40ddb0
  40ebbc:	mov    rcx,rax
  40ebbf:	call   0x407bd0
  40ebc4:	call   0x407d00
  40ebc9:	jmp    0x40ebcc
  40ebcb:	nop
  40ebcc:	nop
  40ebcd:	mov    rax,QWORD PTR [rbp+0xd0]
  40ebd4:	mov    rax,QWORD PTR [rax+0x10]
  40ebd8:	mov    rcx,rax
  40ebdb:	lea    rdx,[rbp+0x90]
  40ebe2:	mov    rax,QWORD PTR [rax]
  40ebe5:	call   QWORD PTR [rax+0x70]
  40ebe8:	mov    ecx,eax
  40ebea:	call   0x40d9d0
  40ebef:	mov    rcx,QWORD PTR [rbp+0x90]
  40ebf6:	or     edx,0xffffffff
  40ebf9:	mov    rax,QWORD PTR [rbp+0x90]
  40ec00:	mov    rax,QWORD PTR [rax]
  40ec03:	call   QWORD PTR [rax+0x20]
  40ec06:	mov    ecx,eax
  40ec08:	call   0x40d9d0
  40ec0d:	lea    rcx,[rbp+0x90]
  40ec14:	call   0x409ff0
  40ec19:	mov    rax,QWORD PTR [rbp+0xd0]
  40ec20:	mov    rax,QWORD PTR [rax+0x10]
  40ec24:	mov    rcx,rax
  40ec27:	lea    rdx,[rbp+0x90]
  40ec2e:	mov    rax,QWORD PTR [rax]
  40ec31:	call   QWORD PTR [rax+0x130]
  40ec37:	mov    ecx,eax
  40ec39:	call   0x40d9d0
  40ec3e:	mov    rcx,QWORD PTR [rbp+0x90]
  40ec45:	or     edx,0xffffffff
  40ec48:	mov    rax,QWORD PTR [rbp+0x90]
  40ec4f:	mov    rax,QWORD PTR [rax]
  40ec52:	call   QWORD PTR [rax+0x20]
  40ec55:	mov    ecx,eax
  40ec57:	call   0x40d9d0
  40ec5c:	lea    rcx,[rbp+0x90]
  40ec63:	call   0x409ff0
  40ec68:	mov    rax,QWORD PTR [rbp+0xd0]
  40ec6f:	lea    rdi,[rbp+0x48]
  40ec73:	lea    rsi,[rax+0x38]
  40ec77:	movs   QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  40ec79:	movs   QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  40ec7b:	mov    rax,QWORD PTR [rbp+0xd0]
  40ec82:	mov    rax,QWORD PTR [rax+0x10]
  40ec86:	mov    rcx,rax
  40ec89:	lea    rdx,[rbp+0x48]
  40ec8d:	mov    r8,QWORD PTR [rbp+0xd0]
  40ec94:	lea    r8,[r8+0x48]
  40ec98:	mov    rax,QWORD PTR [rax]
  40ec9b:	call   QWORD PTR [rax+0x150]
  40eca1:	mov    ecx,eax
  40eca3:	call   0x40d9d0
  40eca8:	mov    rax,QWORD PTR [rbp+0xd0]
  40ecaf:	lea    rcx,[rax+0xd0]
  40ecb6:	mov    rax,QWORD PTR [rbp+0xd0]
  40ecbd:	mov    rdx,QWORD PTR [rax+0x70]
  40ecc1:	call   0x409b30
  40ecc6:	jmp    0x40ecf5
  40ecc8:	nop
  40ecc9:	nop
  40ecca:	mov    QWORD PTR [rbp+0xa0],rax
  40ecd1:	mov    rax,QWORD PTR [rbp+0xd0]
  40ecd8:	lea    rcx,[rax+0x48]
  40ecdc:	call   0x40d3c0
  40ece1:	mov    rcx,QWORD PTR [rbp+0xa0]
  40ece8:	call   0x407bd0
  40eced:	call   0x407d00
  40ecf2:	jmp    0x40ecf5
  40ecf4:	nop
  40ecf5:	mov    rax,QWORD PTR [rbp+0xd0]
  40ecfc:	mov    BYTE PTR [rax+0xc8],0x1
  40ed03:	mov    DWORD PTR [rbp+0x7c],0x0
  40ed0a:	cmp    QWORD PTR [rbp+0xd8],0x0
  40ed12:	je     0x40ed21
  40ed14:	mov    rax,QWORD PTR [rbp+0xd8]
  40ed1b:	mov    eax,DWORD PTR [rax-0x4]
  40ed1e:	mov    DWORD PTR [rbp+0x7c],eax
  40ed21:	lea    rcx,[rbp+0x38]
  40ed25:	mov    rdx,QWORD PTR [rbp+0xd8]
  40ed2c:	mov    r8d,0x3
  40ed33:	mov    r9d,DWORD PTR [rbp+0x7c]
  40ed37:	sub    r9d,0x2
  40ed3b:	call   0x409770
  40ed40:	lea    rcx,[rbp+0x80]
  40ed47:	mov    rax,QWORD PTR [rbp+0xd0]
  40ed4e:	mov    rdx,QWORD PTR [rax+0xd0]
  40ed55:	mov    r8,QWORD PTR [rbp+0x38]
  40ed59:	call   0x409560
  40ed5e:	mov    rcx,QWORD PTR [rbp+0x80]
  40ed65:	call   0x40e920
  40ed6a:	mov    rcx,QWORD PTR [rbp+0xe0]
  40ed71:	mov    QWORD PTR [rcx],rax
  40ed74:	mov    rax,QWORD PTR [rbp+0xe0]
  40ed7b:	cmp    QWORD PTR [rax],0xffffffffffffffff
  40ed7f:	jne    0x40ed9e
  40ed81:	mov    rcx,QWORD PTR [rip+0xffffffffffffe848]        # 0x40d5d0
  40ed88:	mov    dl,0x1
  40ed8a:	lea    r8,[rip+0x1b7]        # 0x40ef48
  40ed91:	call   0x40de50
  40ed96:	mov    rcx,rax
  40ed99:	call   0x407bd0
  40ed9e:	mov    BYTE PTR [rbp+0x9f],0x1
  40eda5:	nop
  40eda6:	lea    rcx,[rbp+0x38]
  40edaa:	mov    edx,0x2
  40edb0:	call   0x4085c0
  40edb5:	lea    rcx,[rbp+0x58]
  40edb9:	call   0x408580
  40edbe:	lea    rcx,[rbp+0x60]
  40edc2:	call   0x4084e0
  40edc7:	lea    rcx,[rbp+0x80]
  40edce:	mov    edx,0x2
  40edd4:	call   0x4085c0
  40edd9:	lea    rcx,[rbp+0x90]
  40ede0:	call   0x409ff0
  40ede5:	lea    rcx,[rbp+0xd8]
  40edec:	call   0x4084e0
  40edf1:	movzx  rax,BYTE PTR [rbp+0x9f]
  40edf9:	lea    rsp,[rbp+0xb0]
  40ee00:	pop    rsi
  40ee01:	pop    rdi
  40ee02:	pop    rbp
  40ee03:	ret    
  40ee04:	add    DWORD PTR [rax],eax
  40ee06:	add    BYTE PTR [rax],al
  40ee08:	lock rol DWORD PTR [rax],cl
  40ee0b:	add    BYTE PTR [rax+0x10000eb],cl
  40ee11:	add    BYTE PTR [rax],al
  40ee13:	add    al,dh
  40ee15:	rol    DWORD PTR [rax],cl
  40ee17:	add    dl,cl
  40ee19:	in     al,dx
  40ee1a:	add    BYTE PTR [rax],al
  40ee1c:	lea    rax,[rax+0x0]
  40ee20:	sub    rsp,0x28
  40ee24:	call   0x407c30
  40ee29:	add    rsp,0x28
  40ee2d:	ret    
  40ee2e:	rex.W nop
  40ee30:	sub    rsp,0x28
  40ee34:	call   0x407c30
  40ee39:	add    rsp,0x28
  40ee3d:	ret    
  40ee3e:	rex.W nop
  40ee40:	push   rbp
  40ee41:	push   rbx
  40ee42:	sub    rsp,0x28
  40ee46:	mov    rbp,rsp
  40ee49:	mov    rbx,rdx
  40ee4c:	lea    rcx,[rbx+0x38]
  40ee50:	mov    edx,0x2
  40ee56:	call   0x4085c0
  40ee5b:	lea    rcx,[rbx+0x58]
  40ee5f:	call   0x408580
  40ee64:	lea    rcx,[rbx+0x60]
  40ee68:	call   0x4084e0
  40ee6d:	lea    rcx,[rbx+0x80]
  40ee74:	mov    edx,0x2
  40ee7a:	call   0x4085c0
  40ee7f:	lea    rcx,[rbx+0x90]
  40ee86:	call   0x409ff0
  40ee8b:	lea    rcx,[rbx+0xd8]
  40ee92:	call   0x4084e0
  40ee97:	lea    rsp,[rbp+0x28]
  40ee9b:	pop    rbx
  40ee9c:	pop    rbp
  40ee9d:	ret    
  40ee9e:	add    BYTE PTR [rax],al
  40eea0:	mov    al,0x4
  40eea2:	add    al,BYTE PTR [rax]
  40eea4:	(bad)  
  40eea5:	(bad)  
  40eea6:	(bad)  
  40eea7:	inc    DWORD PTR [rdx]
  40eea9:	add    BYTE PTR [rax],al
  40eeab:	add    BYTE PTR [rdx],bh
  40eead:	add    BYTE PTR [rax+rax*1+0x0],bl
  40eeb1:	add    BYTE PTR [rax],al
  40eeb3:	add    BYTE PTR [rax-0xfffdfc],dh
  40eeb9:	(bad)  
  40eeba:	(bad)  
  40eebb:	(bad)  
  40eebc:	cmp    al,0x0
  40eebe:	add    BYTE PTR [rax],al
  40eec0:	push   rsi
  40eec1:	add    BYTE PTR [rbx+0x0],dl
  40eec4:	push   rbx
  40eec5:	add    BYTE PTR [rax],ah
  40eec7:	add    BYTE PTR [rbp+0x0],ah
  40eeca:	jb     0x40eecc
  40eecc:	jb     0x40eece
  40eece:	outs   dx,DWORD PTR ds:[rsi]
  40eecf:	add    BYTE PTR [rdx+0x0],dh
  40eed2:	sub    al,0x0
  40eed4:	and    BYTE PTR [rax],al
  40eed6:	ins    DWORD PTR es:[rdi],dx
  40eed7:	add    BYTE PTR [rcx+0x0],ah
  40eeda:	imul   eax,DWORD PTR [rax],0x65
  40eedd:	add    BYTE PTR [rax],ah
  40eedf:	add    BYTE PTR [rbx+0x0],dh
  40eee2:	jne    0x40eee4
  40eee4:	jb     0x40eee6
  40eee6:	add    BYTE PTR gs:[rax],ah
  40eee9:	add    BYTE PTR [rsi+0x0],dl
  40eeec:	outs   dx,DWORD PTR ds:[rsi]
  40eeed:	add    BYTE PTR [rax+rax*1+0x75],ch
  40eef1:	add    BYTE PTR [rbp+0x0],ch
  40eef4:	add    BYTE PTR gs:[rax],ah
  40eef7:	add    BYTE PTR [rbx+0x0],dl
  40eefa:	push   0x64006100
  40eeff:	add    BYTE PTR [rdi+0x0],ch
  40ef02:	ja     0x40ef04
  40ef04:	and    BYTE PTR [rax],al
  40ef06:	rex.XB add BYTE PTR [r15+0x0],bpl
  40ef0a:	jo     0x40ef0c
  40ef0c:	jns    0x40ef0e
  40ef0e:	and    BYTE PTR [rax],al
  40ef10:	jae    0x40ef12
  40ef12:	add    BYTE PTR gs:[rdx+0x0],dh
  40ef16:	jbe    0x40ef18
  40ef18:	imul   eax,DWORD PTR [rax],0x650063
  40ef1e:	and    BYTE PTR [rax],al
  40ef20:	imul   eax,DWORD PTR [rax],0x200073
  40ef26:	jb     0x40ef28
  40ef28:	jne    0x40ef2a
  40ef2a:	outs   dx,BYTE PTR ds:[rsi]
  40ef2b:	add    BYTE PTR [rsi+0x0],ch
  40ef2e:	imul   eax,DWORD PTR [rax],0x67006e
  40ef34:	add    BYTE PTR cs:[rax],ah
  40ef37:	add    BYTE PTR [rax],al
  40ef39:	add    BYTE PTR [rax],al
  40ef3b:	add    BYTE PTR [rax-0xfffdfc],dh
  40ef41:	(bad)  
  40ef42:	(bad)  
  40ef43:	jmp    QWORD PTR [rdx]
  40ef45:	add    BYTE PTR [rax],al
  40ef47:	add    BYTE PTR [rbp+0x0],al
  40ef4a:	jb     0x40ef4c
  40ef4c:	jb     0x40ef4e
  40ef4e:	outs   dx,DWORD PTR ds:[rsi]
  40ef4f:	add    BYTE PTR [rdx+0x0],dh
  40ef52:	and    BYTE PTR [rax],al
  40ef54:	outs   dx,DWORD PTR ds:[rsi]
  40ef55:	add    BYTE PTR [rax+0x0],dh
  40ef58:	add    BYTE PTR gs:[rsi+0x0],ch
  40ef5c:	imul   eax,DWORD PTR [rax],0x67006e
  40ef62:	and    BYTE PTR [rax],al
  40ef64:	data16 add BYTE PTR [rcx+0x0],ch
  40ef68:	ins    BYTE PTR es:[rdi],dx
  40ef69:	add    BYTE PTR [rbp+0x0],ah
  40ef6c:	and    BYTE PTR [rax],al
  40ef6e:	jbe    0x40ef70
  40ef70:	imul   eax,DWORD PTR [rax],0x200061
  40ef76:	push   rbx
  40ef77:	add    BYTE PTR [rax+0x0],ch
  40ef7a:	(bad)  
  40ef7b:	add    BYTE PTR [rax+rax*1+0x6f],ah
  40ef7f:	add    BYTE PTR [rdi+0x0],dh
  40ef82:	and    BYTE PTR [rax],al
  40ef84:	rex.XB add BYTE PTR [r15+0x0],bpl
  40ef88:	jo     0x40ef8a
  40ef8a:	jns    0x40ef8c
  40ef8c:	add    BYTE PTR [rax],al
  40ef8e:	int3   
  40ef8f:	int3   
  40ef90:	push   rbp
  40ef91:	push   rbx
  40ef92:	sub    rsp,0x68
  40ef96:	mov    rbp,rsp
  40ef99:	mov    QWORD PTR [rbp+0x30],rcx
  40ef9d:	mov    QWORD PTR [rbp+0x88],rdx
  40efa4:	mov    rcx,QWORD PTR [rbp+0x88]
  40efab:	call   0x408670
  40efb0:	nop
  40efb1:	xor    rax,rax
  40efb4:	cmp    QWORD PTR [rbp+0x88],0x0
  40efbc:	je     0x40efc8
  40efbe:	mov    rax,QWORD PTR [rbp+0x88]
  40efc5:	mov    eax,DWORD PTR [rax-0x4]
  40efc8:	test   eax,eax
  40efca:	jne    0x40efd7
  40efcc:	xor    rax,rax
  40efcf:	mov    BYTE PTR [rbp+0x3f],al
  40efd2:	jmp    0x40f139
  40efd7:	mov    rcx,QWORD PTR [rbp+0x88]
  40efde:	call   0x40e920
  40efe3:	mov    QWORD PTR [rbp+0x58],rax
  40efe7:	cmp    QWORD PTR [rbp+0x58],0xffffffffffffffff
  40efec:	jne    0x40f02d
  40efee:	call   0x40cd40
  40eff3:	sub    eax,0x20
  40eff6:	test   eax,eax
  40eff8:	jne    0x40f010
  40effa:	mov    rcx,QWORD PTR [rbp+0x30]
  40effe:	mov    rdx,QWORD PTR [rbp+0x88]
  40f005:	lea    r8,[rbp+0x58]
  40f009:	call   0x40e9b0
  40f00e:	jmp    0x40f02d
  40f010:	mov    rcx,QWORD PTR [rip+0xffffffffffffe5b9]        # 0x40d5d0
  40f017:	mov    dl,0x1
  40f019:	lea    r8,[rip+0x168]        # 0x40f188
  40f020:	call   0x40de50
  40f025:	mov    rcx,rax
  40f028:	call   0x407bd0
  40f02d:	mov    rcx,QWORD PTR [rbp+0x30]
  40f031:	call   0x40e400
  40f036:	mov    rcx,QWORD PTR [rbp+0x58]
  40f03a:	call   0x40dd80
  40f03f:	mov    QWORD PTR [rbp+0x48],rax
  40f043:	mov    rax,QWORD PTR [rbp+0x30]
  40f047:	mov    rcx,QWORD PTR [rax+0x8]
  40f04b:	lea    rdx,[rbp+0x48]
  40f04f:	mov    r8d,0x8
  40f056:	lea    r9,[rbp+0x54]
  40f05a:	mov    QWORD PTR [rsp+0x20],0x0
  40f063:	call   0x40cdf0
  40f068:	mov    al,0x1
  40f06a:	mov    BYTE PTR [rbp+0x3f],al
  40f06d:	cmp    QWORD PTR [rbp+0x48],0x0
  40f072:	jle    0x40f12f
  40f078:	xor    rcx,rcx
  40f07b:	mov    edx,0x10000
  40f081:	mov    r8d,0x3000
  40f088:	mov    r9d,0x4
  40f08f:	call   0x40cdc0
  40f094:	mov    rbx,rax
  40f097:	mov    rcx,QWORD PTR [rbp+0x58]
  40f09b:	mov    rdx,rbx
  40f09e:	mov    r8d,0x10000
  40f0a5:	lea    r9,[rbp+0x54]
  40f0a9:	mov    QWORD PTR [rsp+0x20],0x0
  40f0b2:	call   0x40cda0
  40f0b7:	test   eax,eax
  40f0b9:	jne    0x40f0d5
  40f0bb:	mov    rcx,QWORD PTR [rbp+0x30]
  40f0bf:	call   0x40e510
  40f0c4:	mov    rcx,QWORD PTR [rbp+0x58]
  40f0c8:	call   0x40cc30
  40f0cd:	xor    rax,rax
  40f0d0:	mov    BYTE PTR [rbp+0x3f],al
  40f0d3:	jmp    0x40f139
  40f0d5:	mov    eax,DWORD PTR [rbp+0x54]
  40f0d8:	sub    QWORD PTR [rbp+0x48],rax
  40f0dc:	mov    rax,QWORD PTR [rbp+0x30]
  40f0e0:	mov    rcx,QWORD PTR [rax+0x8]
  40f0e4:	mov    rdx,rbx
  40f0e7:	mov    r8d,DWORD PTR [rbp+0x54]
  40f0eb:	lea    r9,[rbp+0x54]
  40f0ef:	mov    QWORD PTR [rsp+0x20],0x0
  40f0f8:	call   0x40cdf0
  40f0fd:	test   eax,eax
  40f0ff:	jne    0x40f112
  40f101:	mov    rcx,QWORD PTR [rbp+0x58]
  40f105:	call   0x40cc30
  40f10a:	xor    rax,rax
  40f10d:	mov    BYTE PTR [rbp+0x3f],al
  40f110:	jmp    0x40f139
  40f112:	cmp    QWORD PTR [rbp+0x48],0x0
  40f117:	jne    0x40f097
  40f11d:	mov    rcx,rbx
  40f120:	xor    rdx,rdx
  40f123:	mov    r8d,0x8000
  40f12a:	call   0x40cdd0
  40f12f:	mov    rcx,QWORD PTR [rbp+0x58]
  40f133:	call   0x40cc30
  40f138:	nop
  40f139:	lea    rcx,[rbp+0x88]
  40f140:	call   0x4084e0
  40f145:	movzx  rax,BYTE PTR [rbp+0x3f]
  40f14a:	lea    rsp,[rbp+0x68]
  40f14e:	pop    rbx
  40f14f:	pop    rbp
  40f150:	ret    
  40f151:	lea    rax,[rax+0x0]
  40f158:	lea    rax,[rax*1+0x0]
  40f160:	push   rbp
  40f161:	sub    rsp,0x20
  40f165:	mov    rbp,rsp
  40f168:	lea    rcx,[rdx+0x88]
  40f16f:	call   0x4084e0
  40f174:	lea    rsp,[rbp+0x20]
  40f178:	pop    rbp
  40f179:	ret    
  40f17a:	add    BYTE PTR [rax],al
  40f17c:	mov    al,0x4
  40f17e:	add    al,BYTE PTR [rax]
  40f180:	(bad)  
  40f181:	(bad)  
  40f182:	(bad)  
  40f183:	call   FWORD PTR [rax+rax*1]
  40f186:	add    BYTE PTR [rax],al
  40f188:	sub    BYTE PTR [rax],al
  40f18a:	push   rbx
  40f18b:	add    BYTE PTR [rbp+0x0],ah
  40f18e:	jb     0x40f190
  40f190:	jbe    0x40f192
  40f192:	imul   eax,DWORD PTR [rax],0x650063
  40f198:	sub    DWORD PTR [rax],eax
  40f19a:	and    BYTE PTR [rax],al
  40f19c:	add    BYTE PTR [r10+0x0],r14b
  40f1a0:	jb     0x40f1a2
  40f1a2:	outs   dx,DWORD PTR ds:[rsi]
  40f1a3:	add    BYTE PTR [rdx+0x0],dh
  40f1a6:	and    BYTE PTR [rax],al
  40f1a8:	outs   dx,DWORD PTR ds:[rsi]
  40f1a9:	add    BYTE PTR [rax+0x0],dh
  40f1ac:	add    BYTE PTR gs:[rsi+0x0],ch
  40f1b0:	imul   eax,DWORD PTR [rax],0x67006e
  40f1b6:	and    BYTE PTR [rax],al
  40f1b8:	data16 add BYTE PTR [rcx+0x0],ch
  40f1bc:	ins    BYTE PTR es:[rdi],dx
  40f1bd:	add    BYTE PTR [rbp+0x0],ah
  40f1c0:	add    BYTE PTR [rax],al
  40f1c2:	int3   
  40f1c3:	int3   
  40f1c4:	int3   
  40f1c5:	int3   
  40f1c6:	int3   
  40f1c7:	int3   
  40f1c8:	int3   
  40f1c9:	int3   
  40f1ca:	int3   
  40f1cb:	int3   
  40f1cc:	int3   
  40f1cd:	int3   
  40f1ce:	int3   
  40f1cf:	int3   
  40f1d0:	push   rbp
  40f1d1:	push   rdi
  40f1d2:	push   rsi
  40f1d3:	sub    rsp,0x490
  40f1da:	mov    rbp,rsp
  40f1dd:	mov    QWORD PTR [rbp+0x78],0x0
  40f1e5:	mov    QWORD PTR [rbp+0x70],0x0
  40f1ed:	mov    QWORD PTR [rbp+0x48],rbp
  40f1f1:	mov    QWORD PTR [rbp+0x4b0],rcx
  40f1f8:	nop
  40f1f9:	mov    rax,QWORD PTR [rbp+0x4b0]
  40f200:	mov    rcx,QWORD PTR [rax+0x8]
  40f204:	lea    rdx,[rbp+0x88]
  40f20b:	mov    r8d,0x400
  40f212:	lea    r9,[rbp+0x84]
  40f219:	mov    QWORD PTR [rsp+0x20],0x0
  40f222:	call   0x40cda0
  40f227:	test   eax,eax
  40f229:	je     0x40f2f3
  40f22f:	cmp    DWORD PTR [rbp+0x84],0x2
  40f236:	jb     0x40f1f9
  40f238:	lea    rcx,[rbp+0x78]
  40f23c:	lea    rdx,[rbp+0x88]
  40f243:	mov    r8d,0x2
  40f24a:	call   0x408780
  40f24f:	lea    rcx,[rbp+0x70]
  40f253:	lea    r8,[rbp+0x8a]
  40f25a:	mov    r9d,0x2
  40f261:	mov    eax,DWORD PTR [rbp+0x84]
  40f267:	xor    edx,edx
  40f269:	div    r9d
  40f26c:	sub    eax,0x1
  40f26f:	mov    rdx,r8
  40f272:	mov    r8d,eax
  40f275:	call   0x408780
  40f27a:	nop
  40f27b:	mov    rax,QWORD PTR [rbp+0x78]
  40f27f:	movzx  rax,WORD PTR [rax]
  40f283:	sub    ax,0x44
  40f287:	test   ax,ax
  40f28a:	je     0x40f2ae
  40f28c:	sub    ax,0x2
  40f290:	test   ax,ax
  40f293:	jne    0x40f1f9
  40f299:	mov    rcx,QWORD PTR [rbp+0x4b0]
  40f2a0:	mov    rdx,QWORD PTR [rbp+0x70]
  40f2a4:	call   0x40ef90
  40f2a9:	jmp    0x40f1f9
  40f2ae:	mov    rcx,QWORD PTR [rbp+0x4b0]
  40f2b5:	mov    rdx,QWORD PTR [rbp+0x70]
  40f2b9:	call   0x40e6d0
  40f2be:	jmp    0x40f1f9
  40f2c3:	nop
  40f2c4:	nop
  40f2c5:	mov    QWORD PTR [rbp+0x488],rax
  40f2cc:	mov    rcx,QWORD PTR [rbp+0x4b0]
  40f2d3:	mov    rax,QWORD PTR [rbp+0x488]
  40f2da:	mov    rdx,QWORD PTR [rax+0x8]
  40f2de:	call   0x40e440
  40f2e3:	call   0x407d00
  40f2e8:	jmp    0x40f1f9
  40f2ed:	nop
  40f2ee:	jmp    0x40f1f9
  40f2f3:	nop
  40f2f4:	mov    rax,QWORD PTR [rbp+0x4b0]
  40f2fb:	mov    rcx,QWORD PTR [rax+0x8]
  40f2ff:	call   0x40cc30
  40f304:	mov    rax,QWORD PTR [rbp+0x4b0]
  40f30b:	cmp    BYTE PTR [rax+0xc8],0x0
  40f312:	je     0x40f37f
  40f314:	mov    rax,QWORD PTR [rbp+0x4b0]
  40f31b:	lea    rcx,[rax+0x48]
  40f31f:	call   0x40d3c0
  40f324:	mov    rax,QWORD PTR [rbp+0x4b0]
  40f32b:	lea    rdi,[rbp+0x38]
  40f32f:	lea    rsi,[rax+0x28]
  40f333:	movs   QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  40f335:	movs   QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  40f337:	mov    rax,QWORD PTR [rbp+0x4b0]
  40f33e:	mov    rax,QWORD PTR [rax+0x10]
  40f342:	mov    rcx,rax
  40f345:	lea    rdx,[rbp+0x38]
  40f349:	mov    r8d,0x2
  40f350:	or     r9d,0xffffffff
  40f354:	lea    r10,[rbp+0x6c]
  40f358:	mov    QWORD PTR [rsp+0x20],r10
  40f35d:	lea    r10,[rbp+0x5c]
  40f361:	mov    QWORD PTR [rsp+0x28],r10
  40f366:	mov    rax,QWORD PTR [rax]
  40f369:	call   QWORD PTR [rax+0x138]
  40f36f:	mov    rax,QWORD PTR [rbp+0x4b0]
  40f376:	lea    rcx,[rax+0x10]
  40f37a:	call   0x409ff0
  40f37f:	nop
  40f380:	lea    rcx,[rbp+0x70]
  40f384:	mov    edx,0x2
  40f38a:	call   0x4085c0
  40f38f:	lea    rsp,[rbp+0x490]
  40f396:	pop    rsi
  40f397:	pop    rdi
  40f398:	pop    rbp
  40f399:	ret    
  40f39a:	add    BYTE PTR [rax],al
  40f39c:	add    DWORD PTR [rax],eax
  40f39e:	add    BYTE PTR [rax],al
  40f3a0:	lock rol DWORD PTR [rax],cl
  40f3a3:	add    ch,al
  40f3a5:	repnz add BYTE PTR [rax],al
  40f3a8:	lea    rax,[rax*1+0x0]
  40f3b0:	sub    rsp,0x28
  40f3b4:	call   0x407c30
  40f3b9:	add    rsp,0x28
  40f3bd:	ret    
  40f3be:	rex.W nop
  40f3c0:	push   rbp
  40f3c1:	sub    rsp,0x20
  40f3c5:	mov    rbp,rsp
  40f3c8:	lea    rcx,[rdx+0x70]
  40f3cc:	mov    edx,0x2
  40f3d2:	call   0x4085c0
  40f3d7:	lea    rsp,[rbp+0x20]
  40f3db:	pop    rbp
  40f3dc:	ret    
  40f3dd:	int3   
  40f3de:	int3   
  40f3df:	int3   
  40f3e0:	add    DWORD PTR [rip+0xdd8d],0x1        # 0x41d174
  40f3e7:	cmp    DWORD PTR [rip+0xdd86],0x0        # 0x41d174
  40f3ee:	ret    
  40f3ef:	int3   
  40f3f0:	sub    DWORD PTR [rip+0xdd7d],0x1        # 0x41d174
  40f3f7:	cmp    DWORD PTR [rip+0xdd76],0xffffffff        # 0x41d174
  40f3fe:	ret    
  40f3ff:	int3   
  40f400:	ret    
  40f401:	int3   
  40f402:	int3   
  40f403:	int3   
  40f404:	int3   
  40f405:	int3   
  40f406:	int3   
  40f407:	int3   
  40f408:	int3   
  40f409:	int3   
  40f40a:	int3   
  40f40b:	int3   
  40f40c:	int3   
  40f40d:	int3   
  40f40e:	int3   
  40f40f:	int3   
  40f410:	ret    
  40f411:	int3   
  40f412:	int3   
  40f413:	int3   
  40f414:	int3   
  40f415:	int3   
  40f416:	int3   
  40f417:	int3   
  40f418:	int3   
  40f419:	int3   
  40f41a:	int3   
  40f41b:	int3   
  40f41c:	int3   
  40f41d:	int3   
  40f41e:	int3   
  40f41f:	int3   
  40f420:	push   rbp
  40f421:	sub    rsp,0x70
  40f425:	mov    rbp,rsp
  40f428:	mov    QWORD PTR [rbp+0x50],0x0
  40f430:	nop
  40f431:	lea    rcx,[rbp+0x50]
  40f435:	lea    rdx,[rip+0xd8]        # 0x40f514
  40f43c:	call   0x408ac0
  40f441:	lea    rcx,[rbp+0x58]
  40f445:	mov    edx,0x18
  40f44b:	xor    r8,r8
  40f44e:	call   0x405bf0
  40f453:	mov    DWORD PTR [rbp+0x58],0x18
  40f45a:	mov    DWORD PTR [rbp+0x68],0xffffffff
  40f461:	mov    rcx,QWORD PTR [rbp+0x50]
  40f465:	call   0x408d30
  40f46a:	mov    rcx,rax
  40f46d:	mov    edx,0x1
  40f473:	lea    r8,[rbp+0x60]
  40f477:	xor    r9,r9
  40f47a:	call   0x40d7b0
  40f47f:	mov    rcx,QWORD PTR [rbp+0x60]
  40f483:	call   0x40cc00
  40f488:	test   eax,eax
  40f48a:	jne    0x40f496
  40f48c:	or     rax,0xffffffffffffffff
  40f490:	mov    QWORD PTR [rbp+0x48],rax
  40f494:	jmp    0x40f4d8
  40f496:	lea    rcx,[rip+0xad]        # 0x40f54a
  40f49d:	mov    edx,0x40000003
  40f4a3:	xor    r8,r8
  40f4a6:	mov    r9d,0xff
  40f4ad:	mov    DWORD PTR [rsp+0x20],0x10000
  40f4b5:	mov    DWORD PTR [rsp+0x28],0x400
  40f4bd:	mov    DWORD PTR [rsp+0x30],0x0
  40f4c5:	lea    rax,[rbp+0x58]
  40f4c9:	mov    QWORD PTR [rsp+0x38],rax
  40f4ce:	call   0x40ccd0
  40f4d3:	mov    QWORD PTR [rbp+0x48],rax
  40f4d7:	nop
  40f4d8:	lea    rcx,[rbp+0x50]
  40f4dc:	call   0x408530
  40f4e1:	mov    rax,QWORD PTR [rbp+0x48]
  40f4e5:	lea    rsp,[rbp+0x70]
  40f4e9:	pop    rbp
  40f4ea:	ret    
  40f4eb:	lea    rax,[rax+riz*1+0x0]
  40f4f0:	push   rbp
  40f4f1:	sub    rsp,0x20
  40f4f5:	mov    rbp,rsp
  40f4f8:	lea    rcx,[rdx+0x50]
  40f4fc:	call   0x408530
  40f501:	lea    rsp,[rbp+0x20]
  40f505:	pop    rbp
  40f506:	ret    
  40f507:	add    ah,ah
  40f509:	add    al,0x1
  40f50b:	add    bh,bh
  40f50d:	(bad)  
  40f50e:	(bad)  
  40f50f:	push   QWORD PTR [rax+rax*1]
  40f512:	add    BYTE PTR [rax],al
  40f514:	cmp    r13b,BYTE PTR [rax]
  40f517:	cmp    r9d,DWORD PTR [rdi+0x49]
  40f51b:	rex.XB
  40f51c:	cmp    rax,QWORD PTR [r14+0x41]
  40f520:	cmp    edi,DWORD PTR [rbx]
  40f522:	cmp    eax,DWORD PTR [rdx+0x47]
  40f525:	sub    DWORD PTR [rax],ebp
  40f527:	cmp    r9d,DWORD PTR [rdi+0x49]
  40f52b:	rex.XB
  40f52c:	cmp    rax,QWORD PTR [r14+0x41]
  40f530:	cmp    edi,DWORD PTR [rbx]
  40f532:	cmp    eax,DWORD PTR [rcx+0x4e]
  40f535:	sub    DWORD PTR [rax],ebp
  40f537:	cmp    ecx,DWORD PTR [r15+0x49]
  40f53b:	rex.XB
  40f53c:	cmp    rax,QWORD PTR [r15+0x52]
  40f540:	rex.RXB push r15
  40f542:	cmp    edi,DWORD PTR [rbx]
  40f544:	cmp    eax,DWORD PTR [rcx+0x55]
  40f547:	sub    DWORD PTR [rax],eax
  40f549:	add    BYTE PTR [rax+rax*1+0x5c],bl
  40f54d:	add    BYTE PTR [rsi],ch
  40f54f:	add    BYTE PTR [rax+rax*1+0x70],bl
  40f553:	add    BYTE PTR [rcx+0x0],ch
  40f556:	jo     0x40f558
  40f558:	add    BYTE PTR gs:[rax+rax*1+0x54],bl
  40f55d:	add    BYTE PTR [rbp+0x0],ah
  40f560:	jb     0x40f562
  40f562:	(bad)  
  40f563:	add    BYTE PTR [rbx+0x0],al
  40f566:	outs   dx,DWORD PTR ds:[rsi]
  40f567:	add    BYTE PTR [rax+0x0],dh
  40f56a:	jns    0x40f56c
  40f56c:	push   rax
  40f56d:	add    BYTE PTR [rcx+0x0],ch
  40f570:	jo     0x40f572
  40f572:	add    BYTE PTR gs:[rax],al
  40f575:	add    ah,cl
  40f577:	int3   
  40f578:	int3   
  40f579:	int3   
  40f57a:	int3   
  40f57b:	int3   
  40f57c:	int3   
  40f57d:	int3   
  40f57e:	int3   
  40f57f:	int3   
  40f580:	push   rbp
  40f581:	sub    rsp,0x20
  40f585:	mov    rbp,rsp
  40f588:	mov    QWORD PTR [rbp+0x30],rcx
  40f58c:	lea    rcx,[rbp+0x30]
  40f590:	call   0x4086b0
  40f595:	nop
  40f596:	nop
  40f597:	lea    rcx,[rbp+0x30]
  40f59b:	call   0x408580
  40f5a0:	lea    rsp,[rbp+0x20]
  40f5a4:	pop    rbp
  40f5a5:	ret    
  40f5a6:	rex.W nop
  40f5a8:	lea    rax,[rax*1+0x0]
  40f5b0:	push   rbp
  40f5b1:	sub    rsp,0x20
  40f5b5:	mov    rbp,rsp
  40f5b8:	lea    rcx,[rdx+0x30]
  40f5bc:	call   0x408580
  40f5c1:	lea    rsp,[rbp+0x20]
  40f5c5:	pop    rbp
  40f5c6:	ret    
  40f5c7:	int3   
  40f5c8:	int3   
  40f5c9:	int3   
  40f5ca:	int3   
  40f5cb:	int3   
  40f5cc:	int3   
  40f5cd:	int3   
  40f5ce:	int3   
  40f5cf:	int3   
  40f5d0:	push   rbp
  40f5d1:	sub    rsp,0x40
  40f5d5:	mov    rbp,rsp
  40f5d8:	mov    QWORD PTR [rbp+0x20],rcx
  40f5dc:	mov    QWORD PTR [rbp+0x28],rdx
  40f5e0:	mov    QWORD PTR [rbp+0x38],0x0
  40f5e8:	nop
  40f5e9:	xor    rax,rax
  40f5ec:	mov    rcx,QWORD PTR [rbp+0x28]
  40f5f0:	test   rcx,rcx
  40f5f3:	je     0x40f5fc
  40f5f5:	mov    rax,QWORD PTR [rbp+0x28]
  40f5f9:	mov    eax,DWORD PTR [rax-0x4]
  40f5fc:	mov    DWORD PTR [rbp+0x34],eax
  40f5ff:	mov    eax,DWORD PTR [rbp+0x34]
  40f602:	test   eax,eax
  40f604:	jle    0x40f659
  40f606:	mov    eax,DWORD PTR [rbp+0x34]
  40f609:	movsxd rax,eax
  40f60c:	mov    rcx,QWORD PTR [rbp+0x28]
  40f610:	cmp    WORD PTR [rcx+rax*2-0x2],0x0
  40f616:	je     0x40f659
  40f618:	lea    rcx,[rbp+0x38]
  40f61c:	mov    eax,DWORD PTR [rbp+0x34]
  40f61f:	movsxd rax,eax
  40f622:	mov    rdx,QWORD PTR [rbp+0x28]
  40f626:	movzx  rdx,WORD PTR [rdx+rax*2-0x2]
  40f62c:	call   0x409290
  40f631:	mov    rcx,QWORD PTR [rbp+0x38]
  40f635:	mov    rdx,QWORD PTR [rbp+0x20]
  40f639:	mov    r8d,0x1
  40f640:	call   0x4097d0
  40f645:	test   eax,eax
  40f647:	jne    0x40f659
  40f649:	mov    eax,DWORD PTR [rbp+0x34]
  40f64c:	sub    eax,0x1
  40f64f:	mov    DWORD PTR [rbp+0x34],eax
  40f652:	mov    eax,DWORD PTR [rbp+0x34]
  40f655:	test   eax,eax
  40f657:	jg     0x40f606
  40f659:	nop
  40f65a:	nop
  40f65b:	lea    rcx,[rbp+0x38]
  40f65f:	call   0x4084e0
  40f664:	mov    eax,DWORD PTR [rbp+0x34]
  40f667:	lea    rsp,[rbp+0x40]
  40f66b:	pop    rbp
  40f66c:	ret    
  40f66d:	mov    rax,rax
  40f670:	push   rbp
  40f671:	sub    rsp,0x20
  40f675:	mov    rbp,rsp
  40f678:	lea    rcx,[rdx+0x38]
  40f67c:	call   0x4084e0
  40f681:	lea    rsp,[rbp+0x20]
  40f685:	pop    rbp
  40f686:	ret    
  40f687:	int3   
  40f688:	int3   
  40f689:	int3   
  40f68a:	int3   
  40f68b:	int3   
  40f68c:	int3   
  40f68d:	int3   
  40f68e:	int3   
  40f68f:	int3   
  40f690:	push   rsi
  40f691:	push   rbx
  40f692:	sub    rsp,0x28
  40f696:	mov    rbx,rcx
  40f699:	mov    rsi,rdx
  40f69c:	lea    rcx,[rip+0x39]        # 0x40f6dc
  40f6a3:	mov    rdx,rsi
  40f6a6:	call   0x40f5d0
  40f6ab:	mov    rcx,rbx
  40f6ae:	mov    rdx,rsi
  40f6b1:	mov    r8d,eax
  40f6b4:	add    r8d,0x1
  40f6b8:	mov    r9d,0x7fffffff
  40f6bf:	call   0x409770
  40f6c4:	mov    rax,rbx
  40f6c7:	add    rsp,0x28
  40f6cb:	pop    rbx
  40f6cc:	pop    rsi
  40f6cd:	ret    
  40f6ce:	add    BYTE PTR [rax],al
  40f6d0:	mov    al,0x4
  40f6d2:	add    al,BYTE PTR [rax]
  40f6d4:	(bad)  
  40f6d5:	(bad)  
  40f6d6:	(bad)  
  40f6d7:	inc    DWORD PTR [rdx]
  40f6d9:	add    BYTE PTR [rax],al
  40f6db:	add    BYTE PTR [rax+rax*1+0x3a],bl
  40f6df:	add    BYTE PTR [rax],al
  40f6e1:	add    ah,cl
  40f6e3:	int3   
  40f6e4:	int3   
  40f6e5:	int3   
  40f6e6:	int3   
  40f6e7:	int3   
  40f6e8:	int3   
  40f6e9:	int3   
  40f6ea:	int3   
  40f6eb:	int3   
  40f6ec:	int3   
  40f6ed:	int3   
  40f6ee:	int3   
  40f6ef:	int3   
  40f6f0:	push   rsi
  40f6f1:	push   rbx
  40f6f2:	sub    rsp,0x28
  40f6f6:	mov    rbx,rcx
  40f6f9:	mov    rsi,rdx
  40f6fc:	lea    rcx,[rip+0x35]        # 0x40f738
  40f703:	mov    rdx,rsi
  40f706:	call   0x40f5d0
  40f70b:	mov    rcx,rbx
  40f70e:	mov    rdx,rsi
  40f711:	mov    r8d,0x1
  40f718:	mov    r9d,eax
  40f71b:	call   0x409770
  40f720:	mov    rax,rbx
  40f723:	add    rsp,0x28
  40f727:	pop    rbx
  40f728:	pop    rsi
  40f729:	ret    
  40f72a:	add    BYTE PTR [rax],al
  40f72c:	mov    al,0x4
  40f72e:	add    al,BYTE PTR [rax]
  40f730:	(bad)  
  40f731:	(bad)  
  40f732:	(bad)  
  40f733:	inc    DWORD PTR [rdx]
  40f735:	add    BYTE PTR [rax],al
  40f737:	add    BYTE PTR [rax+rax*1+0x3a],bl
  40f73b:	add    BYTE PTR [rax],al
  40f73d:	add    ah,cl
  40f73f:	int3   
  40f740:	push   rbp
  40f741:	push   rbx
  40f742:	sub    rsp,0x2e8
  40f749:	mov    rbp,rsp
  40f74c:	mov    QWORD PTR [rbp+0x60],rcx
  40f750:	mov    QWORD PTR [rbp+0x78],0x0
  40f758:	mov    QWORD PTR [rbp+0x70],0x0
  40f760:	mov    QWORD PTR [rbp+0x98],0x0
  40f76b:	mov    QWORD PTR [rbp+0x88],0x0
  40f776:	mov    QWORD PTR [rbp+0x80],0x0
  40f781:	mov    QWORD PTR [rbp+0x90],0x0
  40f78c:	nop
  40f78d:	mov    rcx,QWORD PTR [rbp+0x60]
  40f791:	lea    rdx,[rbp+0x2cc]
  40f798:	call   0x40ce70
  40f79d:	mov    ecx,0x400
  40f7a3:	xor    rdx,rdx
  40f7a6:	mov    r8d,DWORD PTR [rbp+0x2cc]
  40f7ad:	call   0x40cd80
  40f7b2:	mov    rbx,rax
  40f7b5:	test   rbx,rbx
  40f7b8:	je     0x40f9f5
  40f7be:	mov    DWORD PTR [rbp+0x2c8],0x104
  40f7c8:	lea    rcx,[rbp+0xae]
  40f7cf:	mov    edx,0x104
  40f7d5:	xor    r8,r8
  40f7d8:	call   0x405bf0
  40f7dd:	mov    rcx,rbx
  40f7e0:	xor    rdx,rdx
  40f7e3:	lea    r8,[rbp+0xae]
  40f7ea:	lea    r9,[rbp+0x2c8]
  40f7f1:	call   0x40d7c0
  40f7f6:	test   eax,eax
  40f7f8:	je     0x40f8ab
  40f7fe:	lea    rcx,[rbp+0x90]
  40f805:	xor    rdx,rdx
  40f808:	call   0x405570
  40f80d:	lea    rcx,[rbp+0x98]
  40f814:	mov    rdx,QWORD PTR [rbp+0x90]
  40f81b:	call   0x40f6f0
  40f820:	lea    rcx,[rbp+0x80]
  40f827:	lea    rdx,[rbp+0xae]
  40f82e:	mov    r8d,0x105
  40f835:	call   0x4092e0
  40f83a:	lea    rcx,[rbp+0x88]
  40f841:	mov    rdx,QWORD PTR [rbp+0x80]
  40f848:	call   0x40f6f0
  40f84d:	mov    rcx,QWORD PTR [rbp+0x98]
  40f854:	mov    rdx,QWORD PTR [rbp+0x88]
  40f85b:	call   0x409760
  40f860:	test   eax,eax
  40f862:	sete   al
  40f865:	test   al,al
  40f867:	je     0x40f8a1
  40f869:	lea    rcx,[rbp+0x70]
  40f86d:	lea    rdx,[rbp+0xae]
  40f874:	mov    r8d,0x105
  40f87b:	call   0x4092e0
  40f880:	lea    rcx,[rbp+0x78]
  40f884:	mov    rdx,QWORD PTR [rbp+0x70]
  40f888:	call   0x40f690
  40f88d:	mov    rcx,QWORD PTR [rbp+0x78]
  40f891:	lea    rdx,[rip+0x1d4]        # 0x40fa6c
  40f898:	call   0x409760
  40f89d:	test   eax,eax
  40f89f:	je     0x40f8a6
  40f8a1:	xor    rax,rax
  40f8a4:	jmp    0x40f8a8
  40f8a6:	mov    al,0x1
  40f8a8:	mov    BYTE PTR [rbp+0x6d],al
  40f8ab:	mov    rcx,rbx
  40f8ae:	mov    edx,0x2
  40f8b4:	lea    r8,[rbp+0x2d8]
  40f8bb:	call   0x40cc10
  40f8c0:	test   eax,eax
  40f8c2:	je     0x40f9f5
  40f8c8:	mov    rcx,QWORD PTR [rbp+0x2d8]
  40f8cf:	mov    edx,0x8
  40f8d5:	xor    r8,r8
  40f8d8:	mov    r9d,0x2
  40f8df:	mov    DWORD PTR [rsp+0x20],0x2
  40f8e7:	lea    rax,[rbp+0x2d0]
  40f8ee:	mov    QWORD PTR [rsp+0x28],rax
  40f8f3:	call   0x40cbe0
  40f8f8:	test   eax,eax
  40f8fa:	je     0x40f9e9
  40f900:	lea    rax,[rip+0x6685]        # 0x415f8c
  40f907:	mov    QWORD PTR [rbp+0xa0],rax
  40f90e:	mov    rcx,QWORD PTR [rbp+0xa0]
  40f915:	mov    dl,0x2
  40f917:	mov    r8d,0x20
  40f91e:	mov    r9d,0x220
  40f925:	mov    DWORD PTR [rsp+0x20],0x0
  40f92d:	mov    DWORD PTR [rsp+0x28],0x0
  40f935:	mov    DWORD PTR [rsp+0x30],0x0
  40f93d:	mov    DWORD PTR [rsp+0x38],0x0
  40f945:	mov    DWORD PTR [rsp+0x40],0x0
  40f94d:	mov    DWORD PTR [rsp+0x48],0x0
  40f955:	lea    rax,[rbp+0x2b8]
  40f95c:	mov    QWORD PTR [rsp+0x50],rax
  40f961:	call   0x40cbd0
  40f966:	test   eax,eax
  40f968:	je     0x40f991
  40f96a:	mov    rcx,QWORD PTR [rbp+0x2d0]
  40f971:	mov    rdx,QWORD PTR [rbp+0x2b8]
  40f978:	lea    r8,[rbp+0xa8]
  40f97f:	call   0x40d7d0
  40f984:	cmp    DWORD PTR [rbp+0xa8],0x0
  40f98b:	setne  al
  40f98e:	mov    BYTE PTR [rbp+0x6e],al
  40f991:	movzx  rax,BYTE PTR [rbp+0x6e]
  40f996:	test   al,al
  40f998:	jne    0x40f9dd
  40f99a:	mov    rcx,QWORD PTR [rbp+0x2d0]
  40f9a1:	mov    edx,0x12
  40f9a7:	lea    r8,[rbp+0x2c0]
  40f9ae:	mov    r9d,0x4
  40f9b5:	lea    rax,[rbp+0x2c4]
  40f9bc:	mov    QWORD PTR [rsp+0x20],rax
  40f9c1:	call   0x40cbf0
  40f9c6:	test   eax,eax
  40f9c8:	je     0x40f9dd
  40f9ca:	mov    eax,DWORD PTR [rbp+0x2c0]
  40f9d0:	sub    eax,0x2
  40f9d3:	cmp    eax,0x2
  40f9d6:	jae    0x40f9dd
  40f9d8:	mov    al,0x1
  40f9da:	mov    BYTE PTR [rbp+0x6e],al
  40f9dd:	mov    rcx,QWORD PTR [rbp+0x2d0]
  40f9e4:	call   0x40cc30
  40f9e9:	mov    rcx,QWORD PTR [rbp+0x2d8]
  40f9f0:	call   0x40cc30
  40f9f5:	mov    rcx,rbx
  40f9f8:	call   0x40cc30
  40f9fd:	movzx  rax,BYTE PTR [rbp+0x6d]
  40fa02:	test   al,al
  40fa04:	je     0x40fa0f
  40fa06:	movzx  rax,BYTE PTR [rbp+0x6e]
  40fa0b:	test   al,al
  40fa0d:	jne    0x40fa14
  40fa0f:	xor    rax,rax
  40fa12:	jmp    0x40fa16
  40fa14:	mov    al,0x1
  40fa16:	mov    BYTE PTR [rbp+0x6f],al
  40fa19:	nop
  40fa1a:	lea    rcx,[rbp+0x70]
  40fa1e:	mov    edx,0x6
  40fa24:	call   0x4085c0
  40fa29:	movzx  rax,BYTE PTR [rbp+0x6f]
  40fa2e:	lea    rsp,[rbp+0x2e8]
  40fa35:	pop    rbx
  40fa36:	pop    rbp
  40fa37:	ret    
  40fa38:	lea    rax,[rax*1+0x0]
  40fa40:	push   rbp
  40fa41:	sub    rsp,0x20
  40fa45:	mov    rbp,rsp
  40fa48:	lea    rcx,[rdx+0x70]
  40fa4c:	mov    edx,0x6
  40fa52:	call   0x4085c0
  40fa57:	lea    rsp,[rbp+0x20]
  40fa5b:	pop    rbp
  40fa5c:	ret    
  40fa5d:	add    BYTE PTR [rax],al
  40fa5f:	add    BYTE PTR [rax-0xfffdfc],dh
  40fa65:	(bad)  
  40fa66:	(bad)  
  40fa67:	dec    DWORD PTR [rax+rax*1]
  40fa6a:	add    BYTE PTR [rax],al
  40fa6c:	push   rsp
  40fa6d:	add    BYTE PTR [rbp+0x0],ah
  40fa70:	jb     0x40fa72
  40fa72:	(bad)  
  40fa73:	add    BYTE PTR [rbx+0x0],al
  40fa76:	outs   dx,DWORD PTR ds:[rsi]
  40fa77:	add    BYTE PTR [rax+0x0],dh
  40fa7a:	jns    0x40fa7c
  40fa7c:	add    BYTE PTR cs:[rbp+0x0],ah
  40fa80:	js     0x40fa82
  40fa82:	add    BYTE PTR gs:[rax],al
  40fa85:	add    ah,cl
  40fa87:	int3   
  40fa88:	int3   
  40fa89:	int3   
  40fa8a:	int3   
  40fa8b:	int3   
  40fa8c:	int3   
  40fa8d:	int3   
  40fa8e:	int3   
  40fa8f:	int3   
  40fa90:	sub    rsp,0x28
  40fa94:	mov    DWORD PTR [rip+0xd6e2],ecx        # 0x41d17c
  40fa9a:	mov    DWORD PTR [rip+0xd6e4],edx        # 0x41d184
  40faa0:	mov    DWORD PTR [rip+0xd6e9],r8d        # 0x41d190
  40faa7:	mov    eax,ecx
  40faa9:	sub    eax,0x2
  40faac:	test   eax,eax
  40faae:	jne    0x40fabc
  40fab0:	mov    DWORD PTR [rip+0xd6c6],0x0        # 0x41d180
  40faba:	jmp    0x40fac6
  40fabc:	mov    DWORD PTR [rip+0xd6ba],0x1        # 0x41d180
  40fac6:	cmp    ecx,0x4
  40fac9:	je     0x40fad5
  40facb:	cmp    ecx,0x1
  40face:	je     0x40fad5
  40fad0:	xor    rax,rax
  40fad3:	jmp    0x40fad7
  40fad5:	mov    al,0x1
  40fad7:	sub    al,0x1
  40fada:	cmp    al,0xff
  40fadd:	je     0x40faef
  40fadf:	test   al,al
  40fae1:	jne    0x40faf9
  40fae3:	mov    DWORD PTR [rip+0xd69f],0x0        # 0x41d18c
  40faed:	jmp    0x40faf9
  40faef:	mov    DWORD PTR [rip+0xd693],0x1        # 0x41d18c
  40faf9:	mov    rcx,QWORD PTR [rip+0xd698]        # 0x41d198
  40fb00:	lea    rdx,[rip+0xd671]        # 0x41d178
  40fb07:	call   0x40cf60
  40fb0c:	add    rsp,0x28
  40fb10:	ret    
  40fb11:	int3   
  40fb12:	int3   
  40fb13:	int3   
  40fb14:	int3   
  40fb15:	int3   
  40fb16:	int3   
  40fb17:	int3   
  40fb18:	int3   
  40fb19:	int3   
  40fb1a:	int3   
  40fb1b:	int3   
  40fb1c:	int3   
  40fb1d:	int3   
  40fb1e:	int3   
  40fb1f:	int3   
  40fb20:	push   rbp
  40fb21:	push   rsi
  40fb22:	push   rbx
  40fb23:	sub    rsp,0x70
  40fb27:	mov    rbp,rsp
  40fb2a:	mov    QWORD PTR [rbp+0x28],0x0
  40fb32:	nop
  40fb33:	xor    rcx,rcx
  40fb36:	or     edx,0xffffffff
  40fb39:	xor    r8,r8
  40fb3c:	xor    r9,r9
  40fb3f:	call   0x40ccb0
  40fb44:	mov    DWORD PTR [rip+0xd68a],eax        # 0x41d1d4
  40fb4a:	cmp    DWORD PTR [rip+0xd683],0x0        # 0x41d1d4
  40fb51:	jne    0x40fb69
  40fb53:	mov    ecx,0x1
  40fb59:	xor    rdx,rdx
  40fb5c:	xor    r8,r8
  40fb5f:	call   0x40fa90
  40fb64:	jmp    0x40fcac
  40fb69:	mov    eax,DWORD PTR [rip+0xd665]        # 0x41d1d4
  40fb6f:	mov    QWORD PTR [rbp+0x38],rax
  40fb73:	mov    ecx,0x4
  40fb79:	xor    rdx,rdx
  40fb7c:	xor    r8,r8
  40fb7f:	call   0x40fa90
  40fb84:	call   0x40f420
  40fb89:	mov    rsi,rax
  40fb8c:	cmp    rsi,0xffffffffffffffff
  40fb90:	jne    0x40fbb0
  40fb92:	call   0x40cd40
  40fb97:	lea    rcx,[rbp+0x28]
  40fb9b:	mov    edx,eax
  40fb9d:	call   0x40dbc0
  40fba2:	mov    rcx,QWORD PTR [rbp+0x28]
  40fba6:	call   0x40dcb0
  40fbab:	jmp    0x40fc99
  40fbb0:	lea    rcx,[rbp+0x50]
  40fbb4:	mov    edx,0x20
  40fbba:	xor    r8,r8
  40fbbd:	call   0x405bf0
  40fbc2:	xor    rcx,rcx
  40fbc5:	or     edx,0xffffffff
  40fbc8:	xor    r8,r8
  40fbcb:	xor    r9,r9
  40fbce:	call   0x40ccb0
  40fbd3:	mov    QWORD PTR [rbp+0x68],rax
  40fbd7:	mov    rax,QWORD PTR [rbp+0x68]
  40fbdb:	mov    QWORD PTR [rbp+0x40],rax
  40fbdf:	xor    rbx,rbx
  40fbe2:	mov    rcx,rsi
  40fbe5:	lea    rdx,[rbp+0x50]
  40fbe9:	call   0x40cca0
  40fbee:	call   0x40cd40
  40fbf3:	sub    eax,0x217
  40fbf9:	test   eax,eax
  40fbfb:	je     0x40fc09
  40fbfd:	sub    eax,0x1ce
  40fc03:	test   eax,eax
  40fc05:	jne    0x40fc51
  40fc07:	jmp    0x40fc0d
  40fc09:	mov    bl,0x1
  40fc0b:	jmp    0x40fc51
  40fc0d:	mov    ecx,0x2
  40fc13:	lea    rdx,[rbp+0x38]
  40fc17:	xor    r8,r8
  40fc1a:	or     r9d,0xffffffff
  40fc1e:	call   0x40cde0
  40fc23:	sub    eax,0x1
  40fc26:	cmp    eax,0xffffffff
  40fc29:	je     0x40fc99
  40fc2b:	test   eax,eax
  40fc2d:	jne    0x40fc49
  40fc2f:	mov    rcx,rsi
  40fc32:	lea    rdx,[rbp+0x50]
  40fc36:	lea    r8,[rbp+0x4c]
  40fc3a:	xor    r9,r9
  40fc3d:	call   0x40cd50
  40fc42:	test   eax,eax
  40fc44:	setne  bl
  40fc47:	jmp    0x40fc51
  40fc49:	mov    rcx,rsi
  40fc4c:	call   0x40cc20
  40fc51:	mov    rcx,QWORD PTR [rbp+0x68]
  40fc55:	call   0x40cc30
  40fc5a:	test   bl,bl
  40fc5c:	je     0x40fc6a
  40fc5e:	mov    rcx,rsi
  40fc61:	call   0x40f740
  40fc66:	test   al,al
  40fc68:	jne    0x40fc77
  40fc6a:	mov    rcx,rsi
  40fc6d:	call   0x40cc30
  40fc72:	jmp    0x40fb84
  40fc77:	lea    rcx,[rip+0x5e]        # 0x40fcdc
  40fc7e:	call   0x40f580
  40fc83:	mov    rcx,QWORD PTR [rip+0xffffffffffffe406]        # 0x40e090
  40fc8a:	mov    dl,0x1
  40fc8c:	mov    r8,rsi
  40fc8f:	call   0x40e300
  40fc94:	jmp    0x40fb84
  40fc99:	nop
  40fc9a:	mov    ecx,0x1
  40fca0:	xor    rdx,rdx
  40fca3:	xor    r8,r8
  40fca6:	call   0x40fa90
  40fcab:	nop
  40fcac:	lea    rcx,[rbp+0x28]
  40fcb0:	call   0x4084e0
  40fcb5:	lea    rsp,[rbp+0x70]
  40fcb9:	pop    rbx
  40fcba:	pop    rsi
  40fcbb:	pop    rbp
  40fcbc:	ret    
  40fcbd:	mov    rax,rax
  40fcc0:	push   rbp
  40fcc1:	sub    rsp,0x20
  40fcc5:	mov    rbp,rsp
  40fcc8:	lea    rcx,[rdx+0x28]
  40fccc:	call   0x4084e0
  40fcd1:	lea    rsp,[rbp+0x20]
  40fcd5:	pop    rbp
  40fcd6:	ret    
  40fcd7:	add    BYTE PTR [rsi],bl
  40fcd9:	add    BYTE PTR [rax],al
  40fcdb:	add    BYTE PTR [rax+0x0],dl
  40fcde:	imul   eax,DWORD PTR [rax],0x650070
  40fce4:	and    BYTE PTR [rax],al
  40fce6:	movsxd eax,DWORD PTR [rax]
  40fce8:	outs   dx,DWORD PTR ds:[rsi]
  40fce9:	add    BYTE PTR [rsi+0x0],ch
  40fcec:	outs   dx,BYTE PTR ds:[rsi]
  40fced:	add    BYTE PTR [rbp+0x0],ah
  40fcf0:	movsxd eax,DWORD PTR [rax]
  40fcf2:	je     0x40fcf4
  40fcf4:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
  40fcf9:	add    BYTE PTR [rax],al
  40fcfb:	add    ah,cl
  40fcfd:	int3   
  40fcfe:	int3   
  40fcff:	int3   
  40fd00:	sub    rsp,0x28
  40fd04:	cmp    ecx,0x3
  40fd07:	jg     0x40fd26
  40fd09:	cmp    ecx,0x3
  40fd0c:	je     0x40fd98
  40fd12:	sub    ecx,0x1
  40fd15:	test   ecx,ecx
  40fd17:	je     0x40fd41
  40fd19:	sub    ecx,0x1
  40fd1c:	test   ecx,ecx
  40fd1e:	jne    0x40fdda
  40fd24:	jmp    0x40fd72
  40fd26:	sub    ecx,0x4
  40fd29:	test   ecx,ecx
  40fd2b:	je     0x40fdbe
  40fd31:	sub    ecx,0x1
  40fd34:	test   ecx,ecx
  40fd36:	jne    0x40fdda
  40fd3c:	jmp    0x40fdd3
  40fd41:	mov    BYTE PTR [rip+0xd488],0x1        # 0x41d1d0
  40fd48:	mov    ecx,DWORD PTR [rip+0xd486]        # 0x41d1d4
  40fd4e:	call   0x40cdb0
  40fd53:	mov    DWORD PTR [rip+0xd41f],0x3        # 0x41d17c
  40fd5d:	mov    rcx,QWORD PTR [rip+0xd434]        # 0x41d198
  40fd64:	lea    rdx,[rip+0xd40d]        # 0x41d178
  40fd6b:	call   0x40cf60
  40fd70:	jmp    0x40fdda
  40fd72:	mov    BYTE PTR [rip+0xd458],0x1        # 0x41d1d1
  40fd79:	mov    DWORD PTR [rip+0xd3f9],0x7        # 0x41d17c
  40fd83:	mov    rcx,QWORD PTR [rip+0xd40e]        # 0x41d198
  40fd8a:	lea    rdx,[rip+0xd3e7]        # 0x41d178
  40fd91:	call   0x40cf60
  40fd96:	jmp    0x40fdda
  40fd98:	mov    BYTE PTR [rip+0xd432],0x0        # 0x41d1d1
  40fd9f:	mov    DWORD PTR [rip+0xd3d3],0x4        # 0x41d17c
  40fda9:	mov    rcx,QWORD PTR [rip+0xd3e8]        # 0x41d198
  40fdb0:	lea    rdx,[rip+0xd3c1]        # 0x41d178
  40fdb7:	call   0x40cf60
  40fdbc:	jmp    0x40fdda
  40fdbe:	mov    rcx,QWORD PTR [rip+0xd3d3]        # 0x41d198
  40fdc5:	lea    rdx,[rip+0xd3ac]        # 0x41d178
  40fdcc:	call   0x40cf60
  40fdd1:	jmp    0x40fdda
  40fdd3:	mov    BYTE PTR [rip+0xd3f6],0x1        # 0x41d1d0
  40fdda:	add    rsp,0x28
  40fdde:	ret    
  40fddf:	int3   
  40fde0:	push   rbp
  40fde1:	sub    rsp,0x30
  40fde5:	mov    rbp,rsp
  40fde8:	mov    QWORD PTR [rbp+0x28],rbp
  40fdec:	mov    DWORD PTR [rbp+0x40],ecx
  40fdef:	mov    QWORD PTR [rbp+0x48],rdx
  40fdf3:	mov    DWORD PTR [rip+0xd37b],0x10        # 0x41d178
  40fdfd:	mov    DWORD PTR [rip+0xd375],0x2        # 0x41d17c
  40fe07:	mov    DWORD PTR [rip+0xd36f],0x3        # 0x41d180
  40fe11:	mov    DWORD PTR [rip+0xd36d],0x0        # 0x41d188
  40fe1b:	mov    DWORD PTR [rip+0xd35f],0x0        # 0x41d184
  40fe25:	mov    DWORD PTR [rip+0xd35d],0x0        # 0x41d18c
  40fe2f:	mov    DWORD PTR [rip+0xd357],0x0        # 0x41d190
  40fe39:	lea    rcx,[rip+0x80]        # 0x40fec0
  40fe40:	lea    rdx,[rip+0xfffffffffffffeb9]        # 0x40fd00
  40fe47:	call   0x40cf50
  40fe4c:	mov    QWORD PTR [rip+0xd345],rax        # 0x41d198
  40fe53:	cmp    QWORD PTR [rip+0xd33d],0x0        # 0x41d198
  40fe5b:	je     0x40fe94
  40fe5d:	mov    ecx,0x4
  40fe63:	xor    rdx,rdx
  40fe66:	xor    r8,r8
  40fe69:	call   0x40fa90
  40fe6e:	nop
  40fe6f:	mov    BYTE PTR [rip+0xd35a],0x0        # 0x41d1d0
  40fe76:	mov    BYTE PTR [rip+0xd354],0x0        # 0x41d1d1
  40fe7d:	call   0x40fb20
  40fe82:	nop
  40fe83:	mov    ecx,0x1
  40fe89:	xor    rdx,rdx
  40fe8c:	xor    r8,r8
  40fe8f:	call   0x40fa90
  40fe94:	lea    rsp,[rbp+0x30]
  40fe98:	pop    rbp
  40fe99:	ret    
  40fe9a:	lea    rax,fs:[rax+riz*1+0x0]
  40fea0:	push   rbp
  40fea1:	sub    rsp,0x20
  40fea5:	mov    rbp,rsp
  40fea8:	mov    ecx,0x1
  40feae:	xor    rdx,rdx
  40feb1:	xor    r8,r8
  40feb4:	call   0x40fa90
  40feb9:	lea    rsp,[rbp+0x20]
  40febd:	pop    rbp
  40febe:	ret    
  40febf:	add    BYTE PTR [rax+rax*1+0x65],dl
  40fec3:	add    BYTE PTR [rdx+0x0],dh
  40fec6:	(bad)  
  40fec7:	add    BYTE PTR [rbx+0x0],al
  40feca:	outs   dx,DWORD PTR ds:[rsi]
  40fecb:	add    BYTE PTR [rax+0x0],dh
  40fece:	jns    0x40fed0
  40fed0:	push   rbx
  40fed1:	add    BYTE PTR [rbp+0x0],ah
  40fed4:	jb     0x40fed6
  40fed6:	jbe    0x40fed8
  40fed8:	imul   eax,DWORD PTR [rax],0x650063
  40fede:	add    BYTE PTR [rax],al
  40fee0:	push   rbp
  40fee1:	sub    rsp,0x40
  40fee5:	mov    rbp,rsp
  40fee8:	mov    QWORD PTR [rbp+0x28],rbp
  40feec:	mov    QWORD PTR [rbp+0x50],rcx
  40fef0:	mov    BYTE PTR [rbp+0x58],dl
  40fef3:	xor    rcx,rcx
  40fef6:	xor    rdx,rdx
  40fef9:	mov    r8d,0xf003f
  40ff00:	call   0x40cf30
  40ff05:	mov    QWORD PTR [rbp+0x38],rax
  40ff09:	cmp    QWORD PTR [rbp+0x38],0x0
  40ff0e:	je     0x40ff60
  40ff10:	nop
  40ff11:	mov    rcx,QWORD PTR [rbp+0x38]
  40ff15:	mov    rdx,QWORD PTR [rbp+0x50]
  40ff19:	mov    r8d,0xf01ff
  40ff20:	call   0x40cf40
  40ff25:	mov    QWORD PTR [rbp+0x30],rax
  40ff29:	mov    rcx,QWORD PTR [rbp+0x30]
  40ff2d:	mov    edx,0x1
  40ff33:	lea    r8,[rip+0xd23e]        # 0x41d178
  40ff3a:	call   0x40cf00
  40ff3f:	mov    rcx,QWORD PTR [rbp+0x30]
  40ff43:	call   0x40cf20
  40ff48:	mov    rcx,QWORD PTR [rbp+0x30]
  40ff4c:	call   0x40cef0
  40ff51:	nop
  40ff52:	mov    rcx,QWORD PTR [rbp+0x38]
  40ff56:	call   0x40cef0
  40ff5b:	call   0x40f410
  40ff60:	lea    rsp,[rbp+0x40]
  40ff64:	pop    rbp
  40ff65:	ret    
  40ff66:	rex.W nop
  40ff68:	lea    rax,[rax*1+0x0]
  40ff70:	push   rbp
  40ff71:	sub    rsp,0x20
  40ff75:	mov    rbp,rsp
  40ff78:	mov    rcx,QWORD PTR [rdx+0x38]
  40ff7c:	call   0x40cef0
  40ff81:	call   0x40f410
  40ff86:	lea    rsp,[rbp+0x20]
  40ff8a:	pop    rbp
  40ff8b:	ret    
  40ff8c:	int3   
  40ff8d:	int3   
  40ff8e:	int3   
  40ff8f:	int3   
  40ff90:	push   rbp
  40ff91:	sub    rsp,0xa0
  40ff98:	mov    rbp,rsp
  40ff9b:	mov    QWORD PTR [rbp+0x78],rbp
  40ff9f:	mov    QWORD PTR [rbp+0xb0],rcx
  40ffa6:	mov    QWORD PTR [rbp+0xb8],rdx
  40ffad:	mov    QWORD PTR [rbp+0xc0],r8
  40ffb4:	mov    QWORD PTR [rbp+0xc8],r9
  40ffbb:	xor    rcx,rcx
  40ffbe:	xor    rdx,rdx
  40ffc1:	mov    r8d,0xf003f
  40ffc8:	call   0x40cf30
  40ffcd:	mov    QWORD PTR [rbp+0x98],rax
  40ffd4:	cmp    QWORD PTR [rbp+0x98],0x0
  40ffdc:	jne    0x410000
  40ffde:	xor    rcx,rcx
  40ffe1:	lea    rdx,[rip+0x154]        # 0x41013c
  40ffe8:	mov    r8,QWORD PTR [rbp+0xb0]
  40ffef:	mov    r9d,0x42010
  40fff6:	call   0x40ce00
  40fffb:	jmp    0x410110
  410000:	nop
  410001:	mov    rcx,QWORD PTR [rbp+0xc8]
  410008:	call   0x409260
  41000d:	mov    rcx,QWORD PTR [rbp+0x98]
  410014:	mov    rdx,QWORD PTR [rbp+0xb0]
  41001b:	mov    r8,QWORD PTR [rbp+0xb8]
  410022:	mov    r9d,0xf01ff
  410029:	mov    DWORD PTR [rsp+0x20],0x10
  410031:	mov    DWORD PTR [rsp+0x28],0x2
  410039:	mov    DWORD PTR [rsp+0x30],0x0
  410041:	mov    QWORD PTR [rsp+0x38],rax
  410046:	mov    rax,QWORD PTR [rbp+0xc0]
  41004d:	mov    QWORD PTR [rsp+0x40],rax
  410052:	mov    QWORD PTR [rsp+0x48],0x0
  41005b:	mov    QWORD PTR [rsp+0x50],0x0
  410064:	mov    QWORD PTR [rsp+0x58],0x0
  41006d:	mov    QWORD PTR [rsp+0x60],0x0
  410076:	call   0x40cf10
  41007b:	mov    QWORD PTR [rbp+0x90],rax
  410082:	lea    rax,[rip+0xf3]        # 0x41017c
  410089:	mov    QWORD PTR [rbp+0x88],rax
  410090:	mov    rcx,QWORD PTR [rbp+0x90]
  410097:	mov    edx,0x1
  41009d:	lea    r8,[rbp+0x88]
  4100a4:	call   0x40cee0
  4100a9:	mov    rcx,QWORD PTR [rbp+0x90]
  4100b0:	call   0x40cef0
  4100b5:	mov    QWORD PTR [rbp+0x80],0x0
  4100c0:	mov    rcx,QWORD PTR [rbp+0x98]
  4100c7:	mov    rdx,QWORD PTR [rbp+0xb0]
  4100ce:	mov    r8d,0x14
  4100d5:	call   0x40cf40
  4100da:	mov    QWORD PTR [rbp+0x90],rax
  4100e1:	mov    rcx,QWORD PTR [rbp+0x90]
  4100e8:	xor    rdx,rdx
  4100eb:	lea    r8,[rbp+0x80]
  4100f2:	call   0x40cf80
  4100f7:	mov    rcx,QWORD PTR [rbp+0x90]
  4100fe:	call   0x40cef0
  410103:	nop
  410104:	mov    rcx,QWORD PTR [rbp+0x98]
  41010b:	call   0x40cef0
  410110:	lea    rsp,[rbp+0xa0]
  410117:	pop    rbp
  410118:	ret    
  410119:	lea    rax,[rax+0x0]
  410120:	push   rbp
  410121:	sub    rsp,0x20
  410125:	mov    rbp,rsp
  410128:	mov    rcx,QWORD PTR [rdx+0x98]
  41012f:	call   0x40cef0
  410134:	lea    rsp,[rbp+0x20]
  410138:	pop    rbp
  410139:	ret    
  41013a:	add    BYTE PTR [rax],al
  41013c:	add    BYTE PTR [r10+0x0],r14b
  410140:	jb     0x410142
  410142:	outs   dx,DWORD PTR ds:[rsi]
  410143:	add    BYTE PTR [rdx+0x0],dh
  410146:	and    BYTE PTR [rax],al
  410148:	je     0x41014a
  41014a:	jb     0x41014c
  41014c:	jns    0x41014e
  41014e:	imul   eax,DWORD PTR [rax],0x67006e
  410154:	and    BYTE PTR [rax],al
  410156:	je     0x410158
  410158:	outs   dx,DWORD PTR ds:[rsi]
  410159:	add    BYTE PTR [rax],ah
  41015b:	add    BYTE PTR [rdi+0x0],ch
  41015e:	jo     0x410160
  410160:	add    BYTE PTR gs:[rsi+0x0],ch
  410164:	and    BYTE PTR [rax],al
  410166:	push   rbx
  410167:	add    BYTE PTR [rbx+0x0],al
  41016a:	and    BYTE PTR [rax],al
  41016c:	rex.WRB add BYTE PTR [r9+0x0],r12b
  410170:	outs   dx,BYTE PTR ds:[rsi]
  410171:	add    BYTE PTR [rcx+0x0],ah
  410174:	add    BYTE PTR [ebp+0x0],ah
  410178:	jb     0x41017a
  41017a:	add    BYTE PTR [rax],al
  41017c:	push   rax
  41017d:	add    BYTE PTR [rdx+0x0],dh
  410180:	outs   dx,DWORD PTR ds:[rsi]
  410181:	add    BYTE PTR [rsi+0x0],dh
  410184:	imul   eax,DWORD PTR [rax],0x650064
  41018a:	jae    0x41018c
  41018c:	and    BYTE PTR [rax],al
  41018e:	(bad)  
  41018f:	add    BYTE PTR [rbx+0x0],ah
  410192:	movsxd eax,DWORD PTR [rax]
  410194:	add    BYTE PTR gs:[rbx+0x0],dh
  410198:	jae    0x41019a
  41019a:	and    BYTE PTR [rax],al
  41019c:	je     0x41019e
  41019e:	outs   dx,DWORD PTR ds:[rsi]
  41019f:	add    BYTE PTR [rax],ah
  4101a1:	add    BYTE PTR [rsi+0x0],ah
  4101a4:	imul   eax,DWORD PTR [rax],0x65006c
  4101aa:	jae    0x4101ac
  4101ac:	and    BYTE PTR [rax],al
  4101ae:	jbe    0x4101b0
  4101b0:	imul   eax,DWORD PTR [rax],0x200061
  4101b6:	push   rsi
  4101b7:	add    BYTE PTR [rdi+0x0],ch
  4101ba:	ins    BYTE PTR es:[rdi],dx
  4101bb:	add    BYTE PTR [rbp+0x0],dh
  4101be:	ins    DWORD PTR es:[rdi],dx
  4101bf:	add    BYTE PTR [rbp+0x0],ah
  4101c2:	and    BYTE PTR [rax],al
  4101c4:	push   rbx
  4101c5:	add    BYTE PTR [rax+0x0],ch
  4101c8:	(bad)  
  4101c9:	add    BYTE PTR [rax+rax*1+0x6f],ah
  4101cd:	add    BYTE PTR [rdi+0x0],dh
  4101d0:	and    BYTE PTR [rax],al
  4101d2:	rex.XB add BYTE PTR [r15+0x0],bpl
  4101d6:	jo     0x4101d8
  4101d8:	jns    0x4101da
  4101da:	and    BYTE PTR [rax],al
  4101dc:	jae    0x4101de
  4101de:	add    BYTE PTR gs:[rdx+0x0],dh
  4101e2:	jbe    0x4101e4
  4101e4:	imul   eax,DWORD PTR [rax],0x650063
  4101ea:	add    BYTE PTR cs:[rax],al
  4101ed:	add    ah,cl
  4101ef:	int3   
  4101f0:	sub    rsp,0x28
  4101f4:	mov    rcx,QWORD PTR [rip+0x5fb5]        # 0x4161b0
  4101fb:	lea    rdx,[rip+0x66]        # 0x410268
  410202:	call   0x406200
  410207:	mov    rcx,rax
  41020a:	call   0x406360
  41020f:	call   0x4051f0
  410214:	mov    rcx,QWORD PTR [rip+0x5f95]        # 0x4161b0
  41021b:	lea    rdx,[rip+0xca]        # 0x4102ec
  410222:	call   0x406200
  410227:	mov    rcx,rax
  41022a:	call   0x406360
  41022f:	call   0x4051f0
  410234:	mov    rcx,QWORD PTR [rip+0x5f75]        # 0x4161b0
  41023b:	lea    rdx,[rip+0x132]        # 0x410374
  410242:	call   0x406200
  410247:	mov    rcx,rax
  41024a:	call   0x406360
  41024f:	call   0x4051f0
  410254:	add    rsp,0x28
  410258:	ret    
  410259:	add    BYTE PTR [rax],al
  41025b:	add    BYTE PTR [rax-0xfffdfc],dh
  410261:	(bad)  
  410262:	(bad)  
  410263:	(bad)  
  410264:	cmp    eax,DWORD PTR [rax]
  410266:	add    BYTE PTR [rax],al
  410268:	push   rsp
  410269:	add    BYTE PTR [rdi+0x0],ch
  41026c:	and    BYTE PTR [rax],al
  41026e:	imul   eax,DWORD PTR [rax],0x73006e
  410274:	je     0x410276
  410276:	(bad)  
  410277:	add    BYTE PTR [rax+rax*1+0x6c],ch
  41027b:	add    BYTE PTR [rax],ah
  41027d:	add    BYTE PTR [rcx+0x0],bh
  410280:	outs   dx,DWORD PTR ds:[rsi]
  410281:	add    BYTE PTR [rbp+0x0],dh
  410284:	jb     0x410286
  410286:	and    BYTE PTR [rax],al
  410288:	jae    0x41028a
  41028a:	add    BYTE PTR gs:[rdx+0x0],dh
  41028e:	jbe    0x410290
  410290:	imul   eax,DWORD PTR [rax],0x650063
  410296:	and    BYTE PTR [rax],al
  410298:	jo     0x41029a
  41029a:	ins    BYTE PTR es:[rdi],dx
  41029b:	add    BYTE PTR [rbp+0x0],ah
  41029e:	(bad)  
  41029f:	add    BYTE PTR [rbx+0x0],dh
  4102a2:	add    BYTE PTR gs:[rax],ah
  4102a5:	add    BYTE PTR [rax+rax*1+0x79],dh
  4102a9:	add    BYTE PTR [rax+0x0],dh
  4102ac:	add    BYTE PTR gs:[rax],ah
  4102af:	add    BYTE PTR [rax+rax*1],bh
  4102b2:	jae    0x4102b4
  4102b4:	add    BYTE PTR gs:[rdx+0x0],dh
  4102b8:	jbe    0x4102ba
  4102ba:	imul   eax,DWORD PTR [rax],0x650063
  4102c0:	and    BYTE PTR [rax],al
  4102c2:	outs   dx,BYTE PTR ds:[rsi]
  4102c3:	add    BYTE PTR [rcx+0x0],ah
  4102c6:	ins    DWORD PTR es:[rdi],dx
  4102c7:	add    BYTE PTR [rbp+0x0],ah
  4102ca:	add    BYTE PTR ds:[rax],ah
  4102cd:	add    BYTE PTR [rdi],ch
  4102cf:	add    BYTE PTR [rcx+0x0],ch
  4102d2:	outs   dx,BYTE PTR ds:[rsi]
  4102d3:	add    BYTE PTR [rbx+0x0],dh
  4102d6:	je     0x4102d8
  4102d8:	(bad)  
  4102d9:	add    BYTE PTR [rax+rax*1+0x6c],ch
  4102dd:	add    BYTE PTR [rax],al
  4102df:	add    BYTE PTR [rax-0xfffdfc],dh
  4102e5:	(bad)  
  4102e6:	(bad)  
  4102e7:	(bad)  
  4102e8:	cmp    al,0x0
  4102ea:	add    BYTE PTR [rax],al
  4102ec:	push   rsp
  4102ed:	add    BYTE PTR [rdi+0x0],ch
  4102f0:	and    BYTE PTR [rax],al
  4102f2:	jne    0x4102f4
  4102f4:	outs   dx,BYTE PTR ds:[rsi]
  4102f5:	add    BYTE PTR [rcx+0x0],ch
  4102f8:	outs   dx,BYTE PTR ds:[rsi]
  4102f9:	add    BYTE PTR [rbx+0x0],dh
  4102fc:	je     0x4102fe
  4102fe:	(bad)  
  4102ff:	add    BYTE PTR [rax+rax*1+0x6c],ch
  410303:	add    BYTE PTR [rax],ah
  410305:	add    BYTE PTR [rcx+0x0],bh
  410308:	outs   dx,DWORD PTR ds:[rsi]
  410309:	add    BYTE PTR [rbp+0x0],dh
  41030c:	jb     0x41030e
  41030e:	and    BYTE PTR [rax],al
  410310:	jae    0x410312
  410312:	add    BYTE PTR gs:[rdx+0x0],dh
  410316:	jbe    0x410318
  410318:	imul   eax,DWORD PTR [rax],0x650063
  41031e:	and    BYTE PTR [rax],al
  410320:	jo     0x410322
  410322:	ins    BYTE PTR es:[rdi],dx
  410323:	add    BYTE PTR [rbp+0x0],ah
  410326:	(bad)  
  410327:	add    BYTE PTR [rbx+0x0],dh
  41032a:	add    BYTE PTR gs:[rax],ah
  41032d:	add    BYTE PTR [rax+rax*1+0x79],dh
  410331:	add    BYTE PTR [rax+0x0],dh
  410334:	add    BYTE PTR gs:[rax],ah
  410337:	add    BYTE PTR [rax+rax*1],bh
  41033a:	jae    0x41033c
  41033c:	add    BYTE PTR gs:[rdx+0x0],dh
  410340:	jbe    0x410342
  410342:	imul   eax,DWORD PTR [rax],0x650063
  410348:	and    BYTE PTR [rax],al
  41034a:	outs   dx,BYTE PTR ds:[rsi]
  41034b:	add    BYTE PTR [rcx+0x0],ah
  41034e:	ins    DWORD PTR es:[rdi],dx
  41034f:	add    BYTE PTR [rbp+0x0],ah
  410352:	add    BYTE PTR ds:[rax],ah
  410355:	add    BYTE PTR [rdi],ch
  410357:	add    BYTE PTR [rdx+0x0],dh
  41035a:	add    BYTE PTR gs:[rbp+0x0],ch
  41035e:	outs   dx,DWORD PTR ds:[rsi]
  41035f:	add    BYTE PTR [rsi+0x0],dh
  410362:	add    BYTE PTR gs:[rax],al
  410365:	add    BYTE PTR [rax],al
  410367:	add    BYTE PTR [rax-0xfffdfc],dh
  41036d:	(bad)  
  41036e:	(bad)  
  41036f:	jmp    FWORD PTR [rax+rax*1]
  410372:	add    BYTE PTR [rax],al
  410374:	rex.RX add BYTE PTR [rdi+0x0],r13b
  410378:	jb     0x41037a
  41037a:	and    BYTE PTR [rax],al
  41037c:	push   0x6c006500
  410381:	add    BYTE PTR [rax+0x0],dh
  410384:	and    BYTE PTR [rax],al
  410386:	jo     0x410388
  410388:	ins    BYTE PTR es:[rdi],dx
  410389:	add    BYTE PTR [rbp+0x0],ah
  41038c:	(bad)  
  41038d:	add    BYTE PTR [rbx+0x0],dh
  410390:	add    BYTE PTR gs:[rax],ah
  410393:	add    BYTE PTR [rax+rax*1+0x79],dh
  410397:	add    BYTE PTR [rax+0x0],dh
  41039a:	add    BYTE PTR gs:[rax],ah
  41039d:	add    BYTE PTR [rax+rax*1],bh
  4103a0:	jae    0x4103a2
  4103a2:	add    BYTE PTR gs:[rdx+0x0],dh
  4103a6:	jbe    0x4103a8
  4103a8:	imul   eax,DWORD PTR [rax],0x650063
  4103ae:	and    BYTE PTR [rax],al
  4103b0:	outs   dx,BYTE PTR ds:[rsi]
  4103b1:	add    BYTE PTR [rcx+0x0],ah
  4103b4:	ins    DWORD PTR es:[rdi],dx
  4103b5:	add    BYTE PTR [rbp+0x0],ah
  4103b8:	add    BYTE PTR ds:[rax],ah
  4103bb:	add    BYTE PTR [rdi],ch
  4103bd:	add    BYTE PTR [rdi],bh
  4103bf:	add    BYTE PTR [rax],ah
  4103c1:	add    BYTE PTR [rdi+0x0],ch
  4103c4:	jb     0x4103c6
  4103c6:	and    BYTE PTR [rax],al
  4103c8:	(bad)  
  4103c9:	add    BYTE PTR [rax+0x0],ch
  4103cc:	add    BYTE PTR [rax],al
  4103ce:	int3   
  4103cf:	int3   
  4103d0:	ret    
  4103d1:	int3   
  4103d2:	int3   
  4103d3:	int3   
  4103d4:	int3   
  4103d5:	int3   
  4103d6:	int3   
  4103d7:	int3   
  4103d8:	int3   
  4103d9:	int3   
  4103da:	int3   
  4103db:	int3   
  4103dc:	int3   
  4103dd:	int3   
  4103de:	int3   
  4103df:	int3   
  4103e0:	push   rbp
  4103e1:	sub    rsp,0x70
  4103e5:	mov    rbp,rsp
  4103e8:	mov    QWORD PTR [rbp+0x38],0x0
  4103f0:	mov    QWORD PTR [rbp+0x40],0x0
  4103f8:	mov    QWORD PTR [rbp+0x50],0x0
  410400:	mov    QWORD PTR [rbp+0x48],0x0
  410408:	mov    QWORD PTR [rbp+0x58],0x0
  410410:	mov    QWORD PTR [rbp+0x60],0x0
  410418:	mov    QWORD PTR [rbp+0x68],0x0
  410420:	nop
  410421:	lea    rcx,[rip+0x2e0]        # 0x410708
  410428:	call   0x40bd70
  41042d:	nop
  41042e:	lea    rcx,[rbp+0x68]
  410432:	mov    edx,0x1
  410438:	call   0x405570
  41043d:	mov    rcx,QWORD PTR [rbp+0x68]
  410441:	lea    rdx,[rip+0x1d4]        # 0x41061c
  410448:	call   0x409760
  41044d:	test   eax,eax
  41044f:	je     0x410474
  410451:	lea    rcx,[rbp+0x60]
  410455:	mov    edx,0x1
  41045b:	call   0x405570
  410460:	mov    rcx,QWORD PTR [rbp+0x60]
  410464:	lea    rdx,[rip+0x1c5]        # 0x410630
  41046b:	call   0x409760
  410470:	test   eax,eax
  410472:	jne    0x41047e
  410474:	call   0x4101f0
  410479:	jmp    0x4105bb
  41047e:	lea    rcx,[rbp+0x58]
  410482:	mov    edx,0x1
  410488:	call   0x405570
  41048d:	mov    rcx,QWORD PTR [rbp+0x58]
  410491:	lea    rdx,[rip+0x1ac]        # 0x410644
  410498:	call   0x409760
  41049d:	test   eax,eax
  41049f:	jne    0x4104f8
  4104a1:	lea    rcx,[rbp+0x50]
  4104a5:	xor    rdx,rdx
  4104a8:	call   0x405570
  4104ad:	lea    rcx,[rbp+0x48]
  4104b1:	mov    edx,0x2
  4104b7:	call   0x405570
  4104bc:	mov    rcx,QWORD PTR [rbp+0x48]
  4104c0:	lea    rdx,[rip+0x1f1]        # 0x4106b8
  4104c7:	call   0x409760
  4104cc:	lea    rcx,[rip+0x177]        # 0x41064a
  4104d3:	lea    rdx,[rip+0x190]        # 0x41066a
  4104da:	lea    r8,[rip+0x1ab]        # 0x41068c
  4104e1:	mov    r9,QWORD PTR [rbp+0x50]
  4104e5:	test   eax,eax
  4104e7:	sete   al
  4104ea:	mov    BYTE PTR [rsp+0x20],al
  4104ee:	call   0x40ff90
  4104f3:	jmp    0x4105bb
  4104f8:	lea    rcx,[rbp+0x40]
  4104fc:	mov    edx,0x1
  410502:	call   0x405570
  410507:	mov    rcx,QWORD PTR [rbp+0x40]
  41050b:	lea    rdx,[rip+0x1ba]        # 0x4106cc
  410512:	call   0x409760
  410517:	test   eax,eax
  410519:	jne    0x41054d
  41051b:	lea    rcx,[rbp+0x38]
  41051f:	mov    edx,0x2
  410525:	call   0x405570
  41052a:	mov    rcx,QWORD PTR [rbp+0x38]
  41052e:	lea    rdx,[rip+0x183]        # 0x4106b8
  410535:	call   0x409760
  41053a:	lea    rcx,[rip+0x109]        # 0x41064a
  410541:	test   eax,eax
  410543:	sete   dl
  410546:	call   0x40fee0
  41054b:	jmp    0x4105bb
  41054d:	call   0x4054f0
  410552:	test   eax,eax
  410554:	jne    0x41059b
  410556:	call   0x40f400
  41055b:	lea    rax,[rip+0xe8]        # 0x41064a
  410562:	mov    QWORD PTR [rip+0xcc37],rax        # 0x41d1a0
  410569:	lea    rax,[rip+0xfffffffffffff870]        # 0x40fde0
  410570:	mov    QWORD PTR [rip+0xcc31],rax        # 0x41d1a8
  410577:	mov    QWORD PTR [rip+0xcc2e],0x0        # 0x41d1b0
  410582:	mov    QWORD PTR [rip+0xcc2b],0x0        # 0x41d1b8
  41058d:	lea    rcx,[rip+0xcc0c]        # 0x41d1a0
  410594:	call   0x40cf70
  410599:	jmp    0x4105bb
  41059b:	mov    rcx,QWORD PTR [rip+0x5c0e]        # 0x4161b0
  4105a2:	lea    rdx,[rip+0x13f]        # 0x4106e8
  4105a9:	call   0x406200
  4105ae:	mov    rcx,rax
  4105b1:	call   0x406360
  4105b6:	call   0x4051f0
  4105bb:	nop
  4105bc:	lea    rcx,[rbp+0x38]
  4105c0:	mov    edx,0x7
  4105c6:	call   0x4085c0
  4105cb:	call   0x408160
  4105d0:	jmp    0x4105da
  4105d2:	nop
  4105d3:	nop
  4105d4:	call   0x408360
  4105d9:	nop
  4105da:	lea    rsp,[rbp+0x70]
  4105de:	pop    rbp
  4105df:	ret    
  4105e0:	push   rbp
  4105e1:	sub    rsp,0x20
  4105e5:	mov    rbp,rsp
  4105e8:	lea    rcx,[rdx+0x38]
  4105ec:	mov    edx,0x7
  4105f2:	call   0x4085c0
  4105f7:	lea    rsp,[rbp+0x20]
  4105fb:	pop    rbp
  4105fc:	ret    
  4105fd:	mov    rax,rax
  410600:	sub    rsp,0x28
  410604:	call   0x407c30
  410609:	add    rsp,0x28
  41060d:	ret    
  41060e:	add    BYTE PTR [rax],al
  410610:	mov    al,0x4
  410612:	add    al,BYTE PTR [rax]
  410614:	(bad)  
  410615:	(bad)  
  410616:	(bad)  
  410617:	inc    DWORD PTR [rdx]
  410619:	add    BYTE PTR [rax],al
  41061b:	add    BYTE PTR [rdi],ch
  41061d:	add    BYTE PTR [rax+0x0],ch
  410620:	add    BYTE PTR [rax],al
  410622:	add    BYTE PTR [rax],al
  410624:	mov    al,0x4
  410626:	add    al,BYTE PTR [rax]
  410628:	(bad)  
  410629:	(bad)  
  41062a:	(bad)  
  41062b:	inc    DWORD PTR [rdx]
  41062d:	add    BYTE PTR [rax],al
  41062f:	add    BYTE PTR [rdi],ch
  410631:	add    BYTE PTR [rdi],bh
  410633:	add    BYTE PTR [rax],al
  410635:	add    BYTE PTR [rax],al
  410637:	add    BYTE PTR [rax-0xfffdfc],dh
  41063d:	(bad)  
  41063e:	(bad)  
  41063f:	inc    DWORD PTR [rdx]
  410641:	add    BYTE PTR [rax],al
  410643:	add    BYTE PTR [rdi],ch
  410645:	add    BYTE PTR [rcx+0x0],ch
  410648:	add    BYTE PTR [rax],al
  41064a:	push   rsp
  41064b:	add    BYTE PTR [rbp+0x0],ah
  41064e:	jb     0x410650
  410650:	(bad)  
  410651:	add    BYTE PTR [rbx+0x0],al
  410654:	outs   dx,DWORD PTR ds:[rsi]
  410655:	add    BYTE PTR [rax+0x0],dh
  410658:	jns    0x41065a
  41065a:	push   rbx
  41065b:	add    BYTE PTR [rbp+0x0],ah
  41065e:	jb     0x410660
  410660:	jbe    0x410662
  410662:	imul   eax,DWORD PTR [rax],0x650063
  410668:	add    BYTE PTR [rax],al
  41066a:	push   rsp
  41066b:	add    BYTE PTR [rbp+0x0],ah
  41066e:	jb     0x410670
  410670:	(bad)  
  410671:	add    BYTE PTR [rbx+0x0],al
  410674:	outs   dx,DWORD PTR ds:[rsi]
  410675:	add    BYTE PTR [rax+0x0],dh
  410678:	jns    0x41067a
  41067a:	and    BYTE PTR [rax],al
  41067c:	push   rbx
  41067d:	add    BYTE PTR [rbp+0x0],ah
  410680:	jb     0x410682
  410682:	jbe    0x410684
  410684:	imul   eax,DWORD PTR [rax],0x650063
  41068a:	add    BYTE PTR [rax],al
  41068c:	push   rbx
  41068d:	add    BYTE PTR [rcx+0x0],bh
  410690:	jae    0x410692
  410692:	je     0x410694
  410694:	add    BYTE PTR gs:[rbp+0x0],ch
  410698:	and    BYTE PTR [rax],al
  41069a:	push   rdx
  41069b:	add    BYTE PTR [rbp+0x0],ah
  41069e:	jae    0x4106a0
  4106a0:	add    BYTE PTR gs:[rdx+0x0],dh
  4106a4:	jbe    0x4106a6
  4106a6:	add    BYTE PTR gs:[rax+rax*1+0x0],ah
  4106ab:	add    BYTE PTR [rax-0xfffdfc],dh
  4106b1:	(bad)  
  4106b2:	(bad)  
  4106b3:	inc    DWORD PTR [rdx]
  4106b5:	add    BYTE PTR [rax],al
  4106b7:	add    BYTE PTR [rdi],ch
  4106b9:	add    BYTE PTR [rbx+0x0],dh
  4106bc:	add    BYTE PTR [rax],al
  4106be:	add    BYTE PTR [rax],al
  4106c0:	mov    al,0x4
  4106c2:	add    al,BYTE PTR [rax]
  4106c4:	(bad)  
  4106c5:	(bad)  
  4106c6:	(bad)  
  4106c7:	inc    DWORD PTR [rdi]
  4106c9:	add    BYTE PTR [rax],al
  4106cb:	add    BYTE PTR [rdi],ch
  4106cd:	add    BYTE PTR [rdx+0x0],dh
  4106d0:	add    BYTE PTR gs:[rbp+0x0],ch
  4106d4:	outs   dx,DWORD PTR ds:[rsi]
  4106d5:	add    BYTE PTR [rsi+0x0],dh
  4106d8:	add    BYTE PTR gs:[rax],al
  4106db:	add    BYTE PTR [rax-0xfffdfc],dh
  4106e1:	(bad)  
  4106e2:	(bad)  
  4106e3:	dec    DWORD PTR [rdi]
  4106e5:	add    BYTE PTR [rax],al
  4106e7:	add    BYTE PTR [rdi+0x0],dl
  4106ea:	jb     0x4106ec
  4106ec:	outs   dx,DWORD PTR ds:[rsi]
  4106ed:	add    BYTE PTR [rsi+0x0],ch
  4106f0:	add    BYTE PTR [eax],ah
  4106f3:	add    BYTE PTR [rcx+0x0],ah
  4106f6:	jb     0x4106f8
  4106f8:	add    BYTE PTR [ebp+0x0],dh
  4106fc:	ins    DWORD PTR es:[rdi],dx
  4106fd:	add    BYTE PTR [rbp+0x0],ah
  410700:	outs   dx,BYTE PTR ds:[rsi]
  410701:	add    BYTE PTR [rax+rax*1+0x21],dh
  410705:	add    BYTE PTR [rax],al
  410707:	add    BYTE PTR [rdx],cl
  410709:	add    BYTE PTR [rax],al
  41070b:	add    BYTE PTR [rax],al
  41070d:	add    BYTE PTR [rax],al
  41070f:	add    BYTE PTR [rax],bh
  410711:	(bad)  
  410712:	add    BYTE PTR [r8],al
  410715:	add    BYTE PTR [rax],al
  410717:	add    cl,bl
  410719:	add    eax,0x0
  41071e:	add    BYTE PTR [rax],al
  410720:	fadd   DWORD PTR [rdi]
  410722:	add    BYTE PTR [r8],al
  410725:	add    BYTE PTR [rax],al
  410727:	add    BYTE PTR [rcx],cl
  410729:	add    BYTE PTR [rax],al
  41072b:	add    BYTE PTR [rax],al
  41072d:	add    BYTE PTR [rax],al
  41072f:	add    BYTE PTR [rax+0x4136],ah
  410735:	add    BYTE PTR [rax],al
  410737:	add    BYTE PTR [rax+0x40cb],al
  41073d:	add    BYTE PTR [rax],al
  41073f:	add    BYTE PTR [rax-0x35],ah
  410742:	add    BYTE PTR [rax],al
  410745:	add    BYTE PTR [rax],al
  410747:	add    BYTE PTR [rax-0x4d],ah
  41074a:	add    BYTE PTR [rax],al
  41074d:	add    BYTE PTR [rax],al
  41074f:	add    al,al
  410751:	mov    dl,0x40
  410753:	add    BYTE PTR [rax],al
  410755:	add    BYTE PTR [rax],al
  410757:	add    BYTE PTR [rax+0x40cb],ah
  41075d:	add    BYTE PTR [rax],al
  41075f:	add    BYTE PTR [rax+0x40cb],dl
  410765:	add    BYTE PTR [rax],al
  410767:	add    al,al
  410769:	retf   
  41076a:	add    BYTE PTR [rax],al
  41076d:	add    BYTE PTR [rax],al
  41076f:	add    BYTE PTR [rax+0x40cb],dh
  410775:	add    BYTE PTR [rax],al
  410777:	add    BYTE PTR [rax+0x40ce],dh
  41077d:	add    BYTE PTR [rax],al
  41077f:	add    BYTE PTR [rax+0x40ce],al
  410785:	add    BYTE PTR [rax],al
  410787:	add    BYTE PTR [rax+0x40cf],ah
  41078d:	add    BYTE PTR [rax],al
  41078f:	add    BYTE PTR [rax+0x40cf],dl
  410795:	add    BYTE PTR [rax],al
  410797:	add    al,ah
  410799:	rol    DWORD PTR [rax+0x0],cl
  41079c:	add    BYTE PTR [rax],al
  41079e:	add    BYTE PTR [rax],al
  4107a0:	rcl    bl,1
  4107a2:	add    BYTE PTR [rax],al
  4107a5:	add    BYTE PTR [rax],al
  4107a7:	add    BYTE PTR [rax+0x40e0],al
  4107ad:	add    BYTE PTR [rax],al
  4107af:	add    BYTE PTR [rax-0x20],dh
  4107b2:	add    BYTE PTR [rax],al
  4107b5:	add    BYTE PTR [rax],al
  4107b7:	add    al,dh
  4107b9:	repz add BYTE PTR [rax],al
  4107bd:	add    BYTE PTR [rax],al
  4107bf:	add    al,ah
  4107c1:	repz add BYTE PTR [rax],al
	...
  4107cd:	add    BYTE PTR [rax],al
  4107cf:	add    al,dl
  4107d1:	add    eax,DWORD PTR [rcx+0x0]
  4107d4:	add    BYTE PTR [rax],al
  4107d6:	add    BYTE PTR [rax],al
  4107d8:	shl    dl,0x40
  4107db:	add    BYTE PTR [rax],al
  4107dd:	add    BYTE PTR [rax],al
  4107df:	add    BYTE PTR [rcx],al
  4107e1:	add    BYTE PTR [rax],al
  4107e3:	add    BYTE PTR [rax],al
  4107e5:	add    BYTE PTR [rax],al
  4107e7:	add    BYTE PTR [rax+0x4159],dl
  4107ed:	add    BYTE PTR [rax],al
  4107ef:	add    BYTE PTR [rax+0x4159],dl
  4107f5:	add    BYTE PTR [rax],al
  4107f7:	add    BYTE PTR [rax+0x4159],dl
  4107fd:	add    BYTE PTR [rax],al
  4107ff:	add    BYTE PTR [rax+0x40cf],dh
  410805:	add    BYTE PTR [rax],al
  410807:	add    BYTE PTR [rax+0x4159],dl
  41080d:	add    BYTE PTR [rax],al
  41080f:	add    BYTE PTR [rax-0x2f],cl
  410812:	add    BYTE PTR [rax],al
  410815:	add    BYTE PTR [rax],al
  410817:	add    BYTE PTR [rax+0x4159],dl
  41081d:	add    BYTE PTR [rax],al
  41081f:	add    BYTE PTR [rax+0x4159],dl
  410825:	add    BYTE PTR [rax],al
  410827:	add    BYTE PTR [rax+0x4159],dl
  41082d:	add    BYTE PTR [rax],al
  41082f:	add    BYTE PTR [rax+0x4159],dl
  410835:	add    BYTE PTR [rax],al
  410837:	add    BYTE PTR [rax+0x4159],dl
  41083d:	add    BYTE PTR [rax],al
  41083f:	add    BYTE PTR [rax+0x4159],dl
  410845:	add    BYTE PTR [rax],al
  410847:	add    BYTE PTR [rax+0x4159],dl
  41084d:	add    BYTE PTR [rax],al
  41084f:	add    BYTE PTR [rax+0x4159],dl
  410855:	add    BYTE PTR [rax],al
  410857:	add    BYTE PTR [rax+0x4159],dl
  41085d:	add    BYTE PTR [rax],al
  41085f:	add    BYTE PTR [rax+0x4159],dl
  410865:	add    BYTE PTR [rax],al
  410867:	add    BYTE PTR [rax+0x4159],dl
  41086d:	add    BYTE PTR [rax],al
  41086f:	add    BYTE PTR [rax+0x4159],dl
  410875:	add    BYTE PTR [rax],al
  410877:	add    BYTE PTR [rax+0x4159],dl
  41087d:	add    BYTE PTR [rax],al
  41087f:	add    BYTE PTR [rax+0x4159],dl
  410885:	add    BYTE PTR [rax],al
  410887:	add    BYTE PTR [rax+0x4159],dl
  41088d:	add    BYTE PTR [rax],al
  41088f:	add    BYTE PTR [rax-0x2d],ch
  410892:	add    BYTE PTR [rax],al
  410895:	add    BYTE PTR [rax],al
  410897:	add    BYTE PTR [rcx],al
  410899:	add    BYTE PTR [rax],al
  41089b:	add    BYTE PTR [rax],al
  41089d:	add    BYTE PTR [rax],al
  41089f:	add    BYTE PTR [rax+0x4159],dl
  4108a5:	add    BYTE PTR [rax],al
  4108a7:	add    BYTE PTR [rax+0x4159],dl
  4108ad:	add    BYTE PTR [rax],al
  4108af:	add    BYTE PTR [rax+0x4159],dl
  4108b5:	add    BYTE PTR [rax],al
  4108b7:	add    BYTE PTR [rax+0x4159],dl
  4108bd:	add    BYTE PTR [rax],al
  4108bf:	add    BYTE PTR [rax+0x4159],dl
  4108c5:	add    BYTE PTR [rax],al
  4108c7:	add    BYTE PTR [rax+0x4159],dl
  4108cd:	add    BYTE PTR [rax],al
  4108cf:	add    BYTE PTR [rax+0x4159],dl
  4108d5:	add    BYTE PTR [rax],al
  4108d7:	add    BYTE PTR [rax+0x4159],dl
  4108dd:	add    BYTE PTR [rax],al
  4108df:	add    BYTE PTR [rax+0x4159],dl
  4108e5:	add    BYTE PTR [rax],al
  4108e7:	add    BYTE PTR [rax+0x4159],dl
  4108ed:	add    BYTE PTR [rax],al
  4108ef:	add    BYTE PTR [rax+0x4159],dl
  4108f5:	add    BYTE PTR [rax],al
  4108f7:	add    BYTE PTR [rax+0x4159],dl
  4108fd:	add    BYTE PTR [rax],al
  4108ff:	add    BYTE PTR [rax+0x4159],dl
  410905:	add    BYTE PTR [rax],al
  410907:	add    BYTE PTR [rax+0x4159],dl
  41090d:	add    BYTE PTR [rax],al
  41090f:	add    BYTE PTR [rax+0x4159],dl
  410915:	add    BYTE PTR [rax],al
  410917:	add    BYTE PTR [rax+0x4159],dl
  41091d:	add    BYTE PTR [rax],al
  41091f:	add    BYTE PTR [rax+0x4159],dl
  410925:	add    BYTE PTR [rax],al
  410927:	add    BYTE PTR [rax+0x4159],dl
  41092d:	add    BYTE PTR [rax],al
  41092f:	add    BYTE PTR [rax+0x4159],dl
  410935:	add    BYTE PTR [rax],al
  410937:	add    BYTE PTR [rax+0x4159],dl
  41093d:	add    BYTE PTR [rax],al
  41093f:	add    BYTE PTR [rax+0x4159],dl
  410945:	add    BYTE PTR [rax],al
  410947:	add    BYTE PTR [rax+0x4159],dl
  41094d:	add    BYTE PTR [rax],al
  41094f:	add    BYTE PTR [rax+0x4159],dl
  410955:	add    BYTE PTR [rax],al
  410957:	add    BYTE PTR [rax+0x4159],dl
  41095d:	add    BYTE PTR [rax],al
  41095f:	add    BYTE PTR [rax+0x4159],dl
  410965:	add    BYTE PTR [rax],al
  410967:	add    BYTE PTR [rax+0x4159],dl
  41096d:	add    BYTE PTR [rax],al
  41096f:	add    BYTE PTR [rax+0x4159],dl
  410975:	add    BYTE PTR [rax],al
  410977:	add    BYTE PTR [rax+0x4159],dl
  41097d:	add    BYTE PTR [rax],al
  41097f:	add    BYTE PTR [rax+0x4159],dl
  410985:	add    BYTE PTR [rax],al
  410987:	add    BYTE PTR [rax+0x4159],dl
  41098d:	add    BYTE PTR [rax],al
  41098f:	add    BYTE PTR [rax+0x4159],dl
  410995:	add    BYTE PTR [rax],al
  410997:	add    BYTE PTR [rax+0x4159],dl
  41099d:	add    BYTE PTR [rax],al
  41099f:	add    BYTE PTR [rax+0x4159],dl
  4109a5:	add    BYTE PTR [rax],al
  4109a7:	add    BYTE PTR [rax+0x4159],dl
  4109ad:	add    BYTE PTR [rax],al
  4109af:	add    BYTE PTR [rax+0x4159],dl
  4109b5:	add    BYTE PTR [rax],al
  4109b7:	add    BYTE PTR [rax+0x4159],dl
  4109bd:	add    BYTE PTR [rax],al
  4109bf:	add    BYTE PTR [rax+0x4159],dl
  4109c5:	add    BYTE PTR [rax],al
  4109c7:	add    BYTE PTR [rax+0x4159],dl
  4109cd:	add    BYTE PTR [rax],al
  4109cf:	add    BYTE PTR [rax+0x4159],dl
  4109d5:	add    BYTE PTR [rax],al
  4109d7:	add    BYTE PTR [rax+0x4159],dl
  4109dd:	add    BYTE PTR [rax],al
  4109df:	add    BYTE PTR [rax+0x4159],dl
  4109e5:	add    BYTE PTR [rax],al
  4109e7:	add    BYTE PTR [rax+0x4159],dl
  4109ed:	add    BYTE PTR [rax],al
  4109ef:	add    BYTE PTR [rax+0x4159],dl
  4109f5:	add    BYTE PTR [rax],al
  4109f7:	add    BYTE PTR [rax+0x4159],dl
  4109fd:	add    BYTE PTR [rax],al
  4109ff:	add    BYTE PTR [rax+0x4159],dl
  410a05:	add    BYTE PTR [rax],al
  410a07:	add    BYTE PTR [rax+0x4159],dl
  410a0d:	add    BYTE PTR [rax],al
  410a0f:	add    BYTE PTR [rax+0x4159],dl
  410a15:	add    BYTE PTR [rax],al
  410a17:	add    BYTE PTR [rax+0x4159],dl
  410a1d:	add    BYTE PTR [rax],al
  410a1f:	add    BYTE PTR [rax+0x4159],dl
  410a25:	add    BYTE PTR [rax],al
  410a27:	add    BYTE PTR [rax+0x4159],dl
  410a2d:	add    BYTE PTR [rax],al
  410a2f:	add    BYTE PTR [rax+0x4159],dl
  410a35:	add    BYTE PTR [rax],al
  410a37:	add    BYTE PTR [rax+0x4159],dl
  410a3d:	add    BYTE PTR [rax],al
  410a3f:	add    BYTE PTR [rax+0x4159],dl
  410a45:	add    BYTE PTR [rax],al
  410a47:	add    BYTE PTR [rax+0x4159],dl
  410a4d:	add    BYTE PTR [rax],al
  410a4f:	add    BYTE PTR [rax+0x4159],dl
  410a55:	add    BYTE PTR [rax],al
  410a57:	add    BYTE PTR [rax+0x4159],dl
  410a5d:	add    BYTE PTR [rax],al
  410a5f:	add    BYTE PTR [rax+0x4159],dl
  410a65:	add    BYTE PTR [rax],al
  410a67:	add    BYTE PTR [rax+0x4159],dl
  410a6d:	add    BYTE PTR [rax],al
  410a6f:	add    BYTE PTR [rax+0x4159],dl
  410a75:	add    BYTE PTR [rax],al
  410a77:	add    BYTE PTR [rax+0x4159],dl
  410a7d:	add    BYTE PTR [rax],al
  410a7f:	add    BYTE PTR [rax+0x4159],dl
  410a85:	add    BYTE PTR [rax],al
  410a87:	add    BYTE PTR [rax+0x4159],dl
  410a8d:	add    BYTE PTR [rax],al
  410a8f:	add    BYTE PTR [rax+0x4159],dl
  410a95:	add    BYTE PTR [rax],al
  410a97:	add    BYTE PTR [rax+0x4159],dl
  410a9d:	add    BYTE PTR [rax],al
  410a9f:	add    BYTE PTR [rax+0x4159],dl
  410aa5:	add    BYTE PTR [rax],al
  410aa7:	add    BYTE PTR [rax+0x4159],dl
  410aad:	add    BYTE PTR [rax],al
  410aaf:	add    BYTE PTR [rax+0x4159],dl
  410ab5:	add    BYTE PTR [rax],al
  410ab7:	add    BYTE PTR [rax+0x4159],dl
  410abd:	add    BYTE PTR [rax],al
  410abf:	add    BYTE PTR [rax+0x4159],dl
  410ac5:	add    BYTE PTR [rax],al
  410ac7:	add    BYTE PTR [rax+0x4159],dl
  410acd:	add    BYTE PTR [rax],al
  410acf:	add    BYTE PTR [rax+0x4159],dl
  410ad5:	add    BYTE PTR [rax],al
  410ad7:	add    BYTE PTR [rax+0x4159],dl
  410add:	add    BYTE PTR [rax],al
  410adf:	add    BYTE PTR [rax+0x4159],dl
  410ae5:	add    BYTE PTR [rax],al
  410ae7:	add    BYTE PTR [rax+0x4159],dl
  410aed:	add    BYTE PTR [rax],al
  410aef:	add    BYTE PTR [rax+0x4159],dl
  410af5:	add    BYTE PTR [rax],al
  410af7:	add    BYTE PTR [rax+0x4159],dl
  410afd:	add    BYTE PTR [rax],al
  410aff:	add    BYTE PTR [rax+0x4159],dl
  410b05:	add    BYTE PTR [rax],al
  410b07:	add    BYTE PTR [rax+0x4159],dl
  410b0d:	add    BYTE PTR [rax],al
  410b0f:	add    BYTE PTR [rax+0x4159],dl
  410b15:	add    BYTE PTR [rax],al
  410b17:	add    BYTE PTR [rax+0x4159],dl
  410b1d:	add    BYTE PTR [rax],al
  410b1f:	add    BYTE PTR [rax+0x4159],dl
  410b25:	add    BYTE PTR [rax],al
  410b27:	add    BYTE PTR [rax+0x4159],dl
  410b2d:	add    BYTE PTR [rax],al
  410b2f:	add    BYTE PTR [rax+0x4159],dl
  410b35:	add    BYTE PTR [rax],al
  410b37:	add    BYTE PTR [rax+0x4159],dl
  410b3d:	add    BYTE PTR [rax],al
  410b3f:	add    BYTE PTR [rax+0x4159],dl
  410b45:	add    BYTE PTR [rax],al
  410b47:	add    BYTE PTR [rax+0x4159],dl
  410b4d:	add    BYTE PTR [rax],al
  410b4f:	add    BYTE PTR [rax+0x4159],dl
  410b55:	add    BYTE PTR [rax],al
  410b57:	add    BYTE PTR [rax+0x4159],dl
  410b5d:	add    BYTE PTR [rax],al
  410b5f:	add    BYTE PTR [rax+0x4159],dl
  410b65:	add    BYTE PTR [rax],al
  410b67:	add    BYTE PTR [rax+0x4159],dl
  410b6d:	add    BYTE PTR [rax],al
  410b6f:	add    BYTE PTR [rax+0x4159],dl
  410b75:	add    BYTE PTR [rax],al
  410b77:	add    BYTE PTR [rax+0x4159],dl
  410b7d:	add    BYTE PTR [rax],al
  410b7f:	add    BYTE PTR [rax+0x4159],dl
  410b85:	add    BYTE PTR [rax],al
  410b87:	add    BYTE PTR [rax+0x4159],dl
  410b8d:	add    BYTE PTR [rax],al
  410b8f:	add    BYTE PTR [rax+0x4159],dl
  410b95:	add    BYTE PTR [rax],al
  410b97:	add    BYTE PTR [rax+0x4159],dl
  410b9d:	add    BYTE PTR [rax],al
  410b9f:	add    BYTE PTR [rax+0x4159],dl
  410ba5:	add    BYTE PTR [rax],al
  410ba7:	add    BYTE PTR [rax+0x4159],dl
  410bad:	add    BYTE PTR [rax],al
  410baf:	add    BYTE PTR [rax+0x4159],dl
  410bb5:	add    BYTE PTR [rax],al
  410bb7:	add    BYTE PTR [rax+0x4159],dl
  410bbd:	add    BYTE PTR [rax],al
  410bbf:	add    BYTE PTR [rax+0x4159],dl
  410bc5:	add    BYTE PTR [rax],al
  410bc7:	add    BYTE PTR [rax+0x4159],dl
  410bcd:	add    BYTE PTR [rax],al
  410bcf:	add    BYTE PTR [rax+0x4159],dl
  410bd5:	add    BYTE PTR [rax],al
  410bd7:	add    BYTE PTR [rax+0x4159],dl
  410bdd:	add    BYTE PTR [rax],al
  410bdf:	add    BYTE PTR [rax+0x4159],dl
  410be5:	add    BYTE PTR [rax],al
  410be7:	add    BYTE PTR [rax+0x4159],dl
  410bed:	add    BYTE PTR [rax],al
  410bef:	add    BYTE PTR [rax+0x4159],dl
  410bf5:	add    BYTE PTR [rax],al
  410bf7:	add    BYTE PTR [rax+0x4159],dl
  410bfd:	add    BYTE PTR [rax],al
  410bff:	add    BYTE PTR [rax+0x4159],dl
  410c05:	add    BYTE PTR [rax],al
  410c07:	add    BYTE PTR [rax+0x4159],dl
  410c0d:	add    BYTE PTR [rax],al
  410c0f:	add    BYTE PTR [rax+0x4159],dl
  410c15:	add    BYTE PTR [rax],al
  410c17:	add    BYTE PTR [rax+0x4159],dl
  410c1d:	add    BYTE PTR [rax],al
  410c1f:	add    BYTE PTR [rax+0x4159],dl
  410c25:	add    BYTE PTR [rax],al
  410c27:	add    BYTE PTR [rax+0x4159],dl
  410c2d:	add    BYTE PTR [rax],al
  410c2f:	add    BYTE PTR [rax+0x4159],dl
  410c35:	add    BYTE PTR [rax],al
  410c37:	add    BYTE PTR [rax+0x4159],dl
  410c3d:	add    BYTE PTR [rax],al
  410c3f:	add    BYTE PTR [rax+0x4159],dl
  410c45:	add    BYTE PTR [rax],al
  410c47:	add    BYTE PTR [rax+0x4159],dl
  410c4d:	add    BYTE PTR [rax],al
  410c4f:	add    BYTE PTR [rax+0x4159],dl
  410c55:	add    BYTE PTR [rax],al
  410c57:	add    BYTE PTR [rax+0x4159],dl
  410c5d:	add    BYTE PTR [rax],al
  410c5f:	add    BYTE PTR [rax+0x4159],dl
  410c65:	add    BYTE PTR [rax],al
  410c67:	add    BYTE PTR [rax+0x4159],dl
  410c6d:	add    BYTE PTR [rax],al
  410c6f:	add    BYTE PTR [rax+0x4159],dl
  410c75:	add    BYTE PTR [rax],al
  410c77:	add    BYTE PTR [rax+0x4159],dl
  410c7d:	add    BYTE PTR [rax],al
  410c7f:	add    BYTE PTR [rax+0x4159],dl
  410c85:	add    BYTE PTR [rax],al
  410c87:	add    BYTE PTR [rax+0x4159],dl
  410c8d:	add    BYTE PTR [rax],al
  410c8f:	add    BYTE PTR [rax+0x4159],dl
  410c95:	add    BYTE PTR [rax],al
  410c97:	add    BYTE PTR [rax+0x4159],dl
  410c9d:	add    BYTE PTR [rax],al
  410c9f:	add    BYTE PTR [rax+0x4159],dl
  410ca5:	add    BYTE PTR [rax],al
  410ca7:	add    BYTE PTR [rax+0x4159],dl
  410cad:	add    BYTE PTR [rax],al
  410caf:	add    BYTE PTR [rax+0x4159],dl
  410cb5:	add    BYTE PTR [rax],al
  410cb7:	add    BYTE PTR [rax+0x4159],dl
  410cbd:	add    BYTE PTR [rax],al
  410cbf:	add    BYTE PTR [rax+0x4159],dl
  410cc5:	add    BYTE PTR [rax],al
  410cc7:	add    BYTE PTR [rax+0x4159],dl
  410ccd:	add    BYTE PTR [rax],al
  410ccf:	add    BYTE PTR [rax+0x4159],dl
  410cd5:	add    BYTE PTR [rax],al
  410cd7:	add    BYTE PTR [rax+0x4159],dl
  410cdd:	add    BYTE PTR [rax],al
  410cdf:	add    BYTE PTR [rax+0x4159],dl
  410ce5:	add    BYTE PTR [rax],al
  410ce7:	add    BYTE PTR [rax+0x4159],dl
  410ced:	add    BYTE PTR [rax],al
  410cef:	add    BYTE PTR [rax+0x4159],dl
  410cf5:	add    BYTE PTR [rax],al
  410cf7:	add    BYTE PTR [rax+0x4159],dl
  410cfd:	add    BYTE PTR [rax],al
  410cff:	add    BYTE PTR [rax+0x4159],dl
  410d05:	add    BYTE PTR [rax],al
  410d07:	add    BYTE PTR [rax+0x4159],dl
  410d0d:	add    BYTE PTR [rax],al
  410d0f:	add    BYTE PTR [rax+0x4159],dl
  410d15:	add    BYTE PTR [rax],al
  410d17:	add    BYTE PTR [rax+0x4159],dl
  410d1d:	add    BYTE PTR [rax],al
  410d1f:	add    BYTE PTR [rax+0x4159],dl
  410d25:	add    BYTE PTR [rax],al
  410d27:	add    BYTE PTR [rax+0x4159],dl
  410d2d:	add    BYTE PTR [rax],al
  410d2f:	add    BYTE PTR [rax+0x4159],dl
  410d35:	add    BYTE PTR [rax],al
  410d37:	add    BYTE PTR [rax+0x4159],dl
  410d3d:	add    BYTE PTR [rax],al
  410d3f:	add    BYTE PTR [rax+0x4159],dl
  410d45:	add    BYTE PTR [rax],al
  410d47:	add    BYTE PTR [rax+0x4159],dl
  410d4d:	add    BYTE PTR [rax],al
  410d4f:	add    BYTE PTR [rax+0x4159],dl
  410d55:	add    BYTE PTR [rax],al
  410d57:	add    BYTE PTR [rax+0x4159],dl
  410d5d:	add    BYTE PTR [rax],al
  410d5f:	add    BYTE PTR [rax+0x4159],dl
  410d65:	add    BYTE PTR [rax],al
  410d67:	add    BYTE PTR [rax+0x4159],dl
  410d6d:	add    BYTE PTR [rax],al
  410d6f:	add    BYTE PTR [rax+0x4159],dl
  410d75:	add    BYTE PTR [rax],al
  410d77:	add    BYTE PTR [rax+0x4159],dl
  410d7d:	add    BYTE PTR [rax],al
  410d7f:	add    BYTE PTR [rax+0x4159],dl
  410d85:	add    BYTE PTR [rax],al
  410d87:	add    BYTE PTR [rax+0x4159],dl
  410d8d:	add    BYTE PTR [rax],al
  410d8f:	add    BYTE PTR [rax+0x4159],dl
  410d95:	add    BYTE PTR [rax],al
  410d97:	add    BYTE PTR [rax+0x4159],dl
  410d9d:	add    BYTE PTR [rax],al
  410d9f:	add    BYTE PTR [rax+0x4159],dl
  410da5:	add    BYTE PTR [rax],al
  410da7:	add    BYTE PTR [rax+0x4159],dl
  410dad:	add    BYTE PTR [rax],al
  410daf:	add    BYTE PTR [rax+0x4159],dl
  410db5:	add    BYTE PTR [rax],al
  410db7:	add    BYTE PTR [rax+0x4159],dl
  410dbd:	add    BYTE PTR [rax],al
  410dbf:	add    BYTE PTR [rax+0x4159],dl
  410dc5:	add    BYTE PTR [rax],al
  410dc7:	add    BYTE PTR [rax+0x4159],dl
  410dcd:	add    BYTE PTR [rax],al
  410dcf:	add    BYTE PTR [rax+0x4159],dl
  410dd5:	add    BYTE PTR [rax],al
  410dd7:	add    BYTE PTR [rax+0x4159],dl
  410ddd:	add    BYTE PTR [rax],al
  410ddf:	add    BYTE PTR [rax+0x4159],dl
  410de5:	add    BYTE PTR [rax],al
  410de7:	add    BYTE PTR [rax+0x4159],dl
  410ded:	add    BYTE PTR [rax],al
  410def:	add    BYTE PTR [rax+0x4159],dl
  410df5:	add    BYTE PTR [rax],al
  410df7:	add    BYTE PTR [rax+0x4159],dl
  410dfd:	add    BYTE PTR [rax],al
  410dff:	add    BYTE PTR [rax+0x4159],dl
  410e05:	add    BYTE PTR [rax],al
  410e07:	add    BYTE PTR [rax+0x4159],dl
  410e0d:	add    BYTE PTR [rax],al
  410e0f:	add    BYTE PTR [rax+0x4159],dl
  410e15:	add    BYTE PTR [rax],al
  410e17:	add    BYTE PTR [rax+0x4159],dl
  410e1d:	add    BYTE PTR [rax],al
  410e1f:	add    BYTE PTR [rax+0x4159],dl
  410e25:	add    BYTE PTR [rax],al
  410e27:	add    BYTE PTR [rax+0x4159],dl
  410e2d:	add    BYTE PTR [rax],al
  410e2f:	add    BYTE PTR [rax+0x4159],dl
  410e35:	add    BYTE PTR [rax],al
  410e37:	add    BYTE PTR [rax+0x4159],dl
  410e3d:	add    BYTE PTR [rax],al
  410e3f:	add    BYTE PTR [rax+0x4159],dl
  410e45:	add    BYTE PTR [rax],al
  410e47:	add    BYTE PTR [rax+0x4159],dl
  410e4d:	add    BYTE PTR [rax],al
  410e4f:	add    BYTE PTR [rax+0x4159],dl
  410e55:	add    BYTE PTR [rax],al
  410e57:	add    BYTE PTR [rax+0x4159],dl
  410e5d:	add    BYTE PTR [rax],al
  410e5f:	add    BYTE PTR [rax+0x4159],dl
  410e65:	add    BYTE PTR [rax],al
  410e67:	add    BYTE PTR [rax+0x4159],dl
  410e6d:	add    BYTE PTR [rax],al
  410e6f:	add    BYTE PTR [rax+0x4159],dl
  410e75:	add    BYTE PTR [rax],al
  410e77:	add    BYTE PTR [rax+0x4159],dl
  410e7d:	add    BYTE PTR [rax],al
  410e7f:	add    BYTE PTR [rax+0x4159],dl
  410e85:	add    BYTE PTR [rax],al
  410e87:	add    BYTE PTR [rax+0x4159],dl
  410e8d:	add    BYTE PTR [rax],al
  410e8f:	add    BYTE PTR [rax+0x4159],dl
  410e95:	add    BYTE PTR [rax],al
  410e97:	add    BYTE PTR [rax+0x4159],dl
  410e9d:	add    BYTE PTR [rax],al
  410e9f:	add    BYTE PTR [rax+0x4159],dl
  410ea5:	add    BYTE PTR [rax],al
  410ea7:	add    BYTE PTR [rax+0x4159],dl
  410ead:	add    BYTE PTR [rax],al
  410eaf:	add    BYTE PTR [rax+0x4159],dl
  410eb5:	add    BYTE PTR [rax],al
  410eb7:	add    BYTE PTR [rax+0x4159],dl
  410ebd:	add    BYTE PTR [rax],al
  410ebf:	add    BYTE PTR [rax+0x4159],dl
  410ec5:	add    BYTE PTR [rax],al
  410ec7:	add    BYTE PTR [rax+0x4159],dl
  410ecd:	add    BYTE PTR [rax],al
  410ecf:	add    BYTE PTR [rax+0x4159],dl
  410ed5:	add    BYTE PTR [rax],al
  410ed7:	add    BYTE PTR [rax+0x4159],dl
  410edd:	add    BYTE PTR [rax],al
  410edf:	add    BYTE PTR [rax+0x4159],dl
  410ee5:	add    BYTE PTR [rax],al
  410ee7:	add    BYTE PTR [rax+0x4159],dl
  410eed:	add    BYTE PTR [rax],al
  410eef:	add    BYTE PTR [rax+0x4159],dl
  410ef5:	add    BYTE PTR [rax],al
  410ef7:	add    BYTE PTR [rax+0x4159],dl
  410efd:	add    BYTE PTR [rax],al
  410eff:	add    BYTE PTR [rax+0x4159],dl
  410f05:	add    BYTE PTR [rax],al
  410f07:	add    BYTE PTR [rax+0x4159],dl
  410f0d:	add    BYTE PTR [rax],al
  410f0f:	add    BYTE PTR [rax+0x4159],dl
  410f15:	add    BYTE PTR [rax],al
  410f17:	add    BYTE PTR [rax+0x4159],dl
  410f1d:	add    BYTE PTR [rax],al
  410f1f:	add    BYTE PTR [rax+0x4159],dl
  410f25:	add    BYTE PTR [rax],al
  410f27:	add    BYTE PTR [rax+0x4159],dl
  410f2d:	add    BYTE PTR [rax],al
  410f2f:	add    BYTE PTR [rax+0x4159],dl
  410f35:	add    BYTE PTR [rax],al
  410f37:	add    BYTE PTR [rax+0x4159],dl
  410f3d:	add    BYTE PTR [rax],al
  410f3f:	add    BYTE PTR [rax+0x4159],dl
  410f45:	add    BYTE PTR [rax],al
  410f47:	add    BYTE PTR [rax+0x4159],dl
  410f4d:	add    BYTE PTR [rax],al
  410f4f:	add    BYTE PTR [rax+0x4159],dl
  410f55:	add    BYTE PTR [rax],al
  410f57:	add    BYTE PTR [rax+0x4159],dl
  410f5d:	add    BYTE PTR [rax],al
  410f5f:	add    BYTE PTR [rax+0x4159],dl
  410f65:	add    BYTE PTR [rax],al
  410f67:	add    BYTE PTR [rax+0x4159],dl
  410f6d:	add    BYTE PTR [rax],al
  410f6f:	add    BYTE PTR [rax+0x4159],dl
  410f75:	add    BYTE PTR [rax],al
  410f77:	add    BYTE PTR [rax+0x4159],dl
  410f7d:	add    BYTE PTR [rax],al
  410f7f:	add    BYTE PTR [rax+0x4159],dl
  410f85:	add    BYTE PTR [rax],al
  410f87:	add    BYTE PTR [rax+0x4159],dl
  410f8d:	add    BYTE PTR [rax],al
  410f8f:	add    BYTE PTR [rax+0x4159],dl
  410f95:	add    BYTE PTR [rax],al
  410f97:	add    BYTE PTR [rax+0x4159],dl
  410f9d:	add    BYTE PTR [rax],al
  410f9f:	add    BYTE PTR [rax+0x4159],dl
  410fa5:	add    BYTE PTR [rax],al
  410fa7:	add    BYTE PTR [rax+0x4159],dl
  410fad:	add    BYTE PTR [rax],al
  410faf:	add    BYTE PTR [rax+0x4159],dl
  410fb5:	add    BYTE PTR [rax],al
  410fb7:	add    BYTE PTR [rax+0x4159],dl
  410fbd:	add    BYTE PTR [rax],al
  410fbf:	add    BYTE PTR [rax+0x4159],dl
  410fc5:	add    BYTE PTR [rax],al
  410fc7:	add    BYTE PTR [rax+0x4159],dl
  410fcd:	add    BYTE PTR [rax],al
  410fcf:	add    BYTE PTR [rax+0x4159],dl
  410fd5:	add    BYTE PTR [rax],al
  410fd7:	add    BYTE PTR [rax+0x4159],dl
  410fdd:	add    BYTE PTR [rax],al
  410fdf:	add    BYTE PTR [rax+0x4159],dl
  410fe5:	add    BYTE PTR [rax],al
  410fe7:	add    BYTE PTR [rax+0x4159],dl
  410fed:	add    BYTE PTR [rax],al
  410fef:	add    BYTE PTR [rax+0x4159],dl
  410ff5:	add    BYTE PTR [rax],al
  410ff7:	add    BYTE PTR [rax+0x4159],dl
  410ffd:	add    BYTE PTR [rax],al
  410fff:	add    BYTE PTR [rax+0x4159],dl
  411005:	add    BYTE PTR [rax],al
  411007:	add    BYTE PTR [rax+0x4159],dl
  41100d:	add    BYTE PTR [rax],al
  41100f:	add    BYTE PTR [rax+0x4159],dl
  411015:	add    BYTE PTR [rax],al
  411017:	add    BYTE PTR [rax+0x4159],dl
  41101d:	add    BYTE PTR [rax],al
  41101f:	add    BYTE PTR [rax+0x4159],dl
  411025:	add    BYTE PTR [rax],al
  411027:	add    BYTE PTR [rax+0x4159],dl
  41102d:	add    BYTE PTR [rax],al
  41102f:	add    BYTE PTR [rax+0x4159],dl
  411035:	add    BYTE PTR [rax],al
  411037:	add    BYTE PTR [rax+0x4159],dl
  41103d:	add    BYTE PTR [rax],al
  41103f:	add    BYTE PTR [rax+0x4159],dl
  411045:	add    BYTE PTR [rax],al
  411047:	add    BYTE PTR [rax+0x4159],dl
  41104d:	add    BYTE PTR [rax],al
  41104f:	add    BYTE PTR [rax+0x4159],dl
  411055:	add    BYTE PTR [rax],al
  411057:	add    BYTE PTR [rax+0x4159],dl
  41105d:	add    BYTE PTR [rax],al
  41105f:	add    BYTE PTR [rax+0x4159],dl
  411065:	add    BYTE PTR [rax],al
  411067:	add    BYTE PTR [rax+0x4159],dl
  41106d:	add    BYTE PTR [rax],al
  41106f:	add    BYTE PTR [rax+0x4159],dl
  411075:	add    BYTE PTR [rax],al
  411077:	add    BYTE PTR [rax+0x4159],dl
  41107d:	add    BYTE PTR [rax],al
  41107f:	add    BYTE PTR [rax+0x4159],dl
  411085:	add    BYTE PTR [rax],al
  411087:	add    BYTE PTR [rax+0x4159],dl
  41108d:	add    BYTE PTR [rax],al
  41108f:	add    BYTE PTR [rax+0x4159],dl
  411095:	add    BYTE PTR [rax],al
  411097:	add    BYTE PTR [rax+0x4159],dl
  41109d:	add    BYTE PTR [rax],al
  41109f:	add    BYTE PTR [rax+0x4159],dl
  4110a5:	add    BYTE PTR [rax],al
  4110a7:	add    BYTE PTR [rax+0x4159],dl
  4110ad:	add    BYTE PTR [rax],al
  4110af:	add    BYTE PTR [rax+0x4159],dl
  4110b5:	add    BYTE PTR [rax],al
  4110b7:	add    BYTE PTR [rax+0x4159],dl
  4110bd:	add    BYTE PTR [rax],al
  4110bf:	add    BYTE PTR [rax+0x4159],dl
  4110c5:	add    BYTE PTR [rax],al
  4110c7:	add    BYTE PTR [rax+0x4159],dl
  4110cd:	add    BYTE PTR [rax],al
  4110cf:	add    BYTE PTR [rax+0x4159],dl
  4110d5:	add    BYTE PTR [rax],al
  4110d7:	add    BYTE PTR [rax+0x4159],dl
  4110dd:	add    BYTE PTR [rax],al
  4110df:	add    BYTE PTR [rax+0x4159],dl
  4110e5:	add    BYTE PTR [rax],al
  4110e7:	add    BYTE PTR [rax+0x4159],dl
  4110ed:	add    BYTE PTR [rax],al
  4110ef:	add    BYTE PTR [rax+0x4159],dl
  4110f5:	add    BYTE PTR [rax],al
  4110f7:	add    BYTE PTR [rax+0x4159],dl
  4110fd:	add    BYTE PTR [rax],al
  4110ff:	add    BYTE PTR [rax+0x4159],dl
  411105:	add    BYTE PTR [rax],al
  411107:	add    BYTE PTR [rax+0x4159],dl
  41110d:	add    BYTE PTR [rax],al
  41110f:	add    BYTE PTR [rax+0x4159],dl
  411115:	add    BYTE PTR [rax],al
  411117:	add    BYTE PTR [rax+0x4159],dl
  41111d:	add    BYTE PTR [rax],al
  41111f:	add    BYTE PTR [rax+0x4159],dl
  411125:	add    BYTE PTR [rax],al
  411127:	add    BYTE PTR [rax+0x4159],dl
  41112d:	add    BYTE PTR [rax],al
  41112f:	add    BYTE PTR [rax+0x4159],dl
  411135:	add    BYTE PTR [rax],al
  411137:	add    BYTE PTR [rax+0x4159],dl
  41113d:	add    BYTE PTR [rax],al
  41113f:	add    BYTE PTR [rax+0x4159],dl
  411145:	add    BYTE PTR [rax],al
  411147:	add    BYTE PTR [rax+0x4159],dl
  41114d:	add    BYTE PTR [rax],al
  41114f:	add    BYTE PTR [rax+0x4159],dl
  411155:	add    BYTE PTR [rax],al
  411157:	add    BYTE PTR [rax+0x4159],dl
  41115d:	add    BYTE PTR [rax],al
  41115f:	add    BYTE PTR [rax+0x4159],dl
  411165:	add    BYTE PTR [rax],al
  411167:	add    BYTE PTR [rax+0x4159],dl
  41116d:	add    BYTE PTR [rax],al
  41116f:	add    BYTE PTR [rax+0x4159],dl
  411175:	add    BYTE PTR [rax],al
  411177:	add    BYTE PTR [rax+0x4159],dl
  41117d:	add    BYTE PTR [rax],al
  41117f:	add    BYTE PTR [rax+0x4159],dl
  411185:	add    BYTE PTR [rax],al
  411187:	add    BYTE PTR [rax+0x4159],dl
  41118d:	add    BYTE PTR [rax],al
  41118f:	add    BYTE PTR [rax+0x4159],dl
  411195:	add    BYTE PTR [rax],al
  411197:	add    BYTE PTR [rax+0x4159],dl
  41119d:	add    BYTE PTR [rax],al
  41119f:	add    BYTE PTR [rax+0x4159],dl
  4111a5:	add    BYTE PTR [rax],al
  4111a7:	add    BYTE PTR [rax+0x4159],dl
  4111ad:	add    BYTE PTR [rax],al
  4111af:	add    BYTE PTR [rax+0x4159],dl
  4111b5:	add    BYTE PTR [rax],al
  4111b7:	add    BYTE PTR [rax+0x4159],dl
  4111bd:	add    BYTE PTR [rax],al
  4111bf:	add    BYTE PTR [rax+0x4159],dl
  4111c5:	add    BYTE PTR [rax],al
  4111c7:	add    BYTE PTR [rax+0x4159],dl
  4111cd:	add    BYTE PTR [rax],al
  4111cf:	add    BYTE PTR [rax+0x4159],dl
  4111d5:	add    BYTE PTR [rax],al
  4111d7:	add    BYTE PTR [rax+0x4159],dl
  4111dd:	add    BYTE PTR [rax],al
  4111df:	add    BYTE PTR [rax+0x4159],dl
  4111e5:	add    BYTE PTR [rax],al
  4111e7:	add    BYTE PTR [rax+0x4159],dl
  4111ed:	add    BYTE PTR [rax],al
  4111ef:	add    BYTE PTR [rax+0x4159],dl
  4111f5:	add    BYTE PTR [rax],al
  4111f7:	add    BYTE PTR [rax+0x4159],dl
  4111fd:	add    BYTE PTR [rax],al
  4111ff:	add    BYTE PTR [rax+0x4159],dl
  411205:	add    BYTE PTR [rax],al
  411207:	add    BYTE PTR [rax+0x4159],dl
  41120d:	add    BYTE PTR [rax],al
  41120f:	add    BYTE PTR [rax+0x4159],dl
  411215:	add    BYTE PTR [rax],al
  411217:	add    BYTE PTR [rax+0x4159],dl
  41121d:	add    BYTE PTR [rax],al
  41121f:	add    BYTE PTR [rax+0x4159],dl
  411225:	add    BYTE PTR [rax],al
  411227:	add    BYTE PTR [rax+0x4159],dl
  41122d:	add    BYTE PTR [rax],al
  41122f:	add    BYTE PTR [rax+0x4159],dl
  411235:	add    BYTE PTR [rax],al
  411237:	add    BYTE PTR [rax+0x4159],dl
  41123d:	add    BYTE PTR [rax],al
  41123f:	add    BYTE PTR [rax+0x4159],dl
  411245:	add    BYTE PTR [rax],al
  411247:	add    BYTE PTR [rax+0x4159],dl
  41124d:	add    BYTE PTR [rax],al
  41124f:	add    BYTE PTR [rax+0x4159],dl
  411255:	add    BYTE PTR [rax],al
  411257:	add    BYTE PTR [rax+0x4159],dl
  41125d:	add    BYTE PTR [rax],al
  41125f:	add    BYTE PTR [rax+0x4159],dl
  411265:	add    BYTE PTR [rax],al
  411267:	add    BYTE PTR [rax+0x4159],dl
  41126d:	add    BYTE PTR [rax],al
  41126f:	add    BYTE PTR [rax+0x4159],dl
  411275:	add    BYTE PTR [rax],al
  411277:	add    BYTE PTR [rax+0x4159],dl
  41127d:	add    BYTE PTR [rax],al
  41127f:	add    BYTE PTR [rax+0x4159],dl
  411285:	add    BYTE PTR [rax],al
  411287:	add    BYTE PTR [rax+0x4159],dl
  41128d:	add    BYTE PTR [rax],al
  41128f:	add    BYTE PTR [rax+0x4159],dl
  411295:	add    BYTE PTR [rax],al
  411297:	add    BYTE PTR [rax+0x4159],dl
  41129d:	add    BYTE PTR [rax],al
  41129f:	add    BYTE PTR [rax+0x4159],dl
  4112a5:	add    BYTE PTR [rax],al
  4112a7:	add    BYTE PTR [rax+0x4159],dl
  4112ad:	add    BYTE PTR [rax],al
  4112af:	add    BYTE PTR [rax+0x4159],dl
  4112b5:	add    BYTE PTR [rax],al
  4112b7:	add    BYTE PTR [rax+0x4159],dl
  4112bd:	add    BYTE PTR [rax],al
  4112bf:	add    BYTE PTR [rax+0x4159],dl
  4112c5:	add    BYTE PTR [rax],al
  4112c7:	add    BYTE PTR [rax+0x4159],dl
  4112cd:	add    BYTE PTR [rax],al
  4112cf:	add    BYTE PTR [rax+0x4159],dl
  4112d5:	add    BYTE PTR [rax],al
  4112d7:	add    BYTE PTR [rax+0x4159],dl
  4112dd:	add    BYTE PTR [rax],al
  4112df:	add    BYTE PTR [rax+0x4159],dl
  4112e5:	add    BYTE PTR [rax],al
  4112e7:	add    BYTE PTR [rax+0x4159],dl
  4112ed:	add    BYTE PTR [rax],al
  4112ef:	add    BYTE PTR [rax+0x4159],dl
  4112f5:	add    BYTE PTR [rax],al
  4112f7:	add    BYTE PTR [rax+0x4159],dl
  4112fd:	add    BYTE PTR [rax],al
  4112ff:	add    BYTE PTR [rax+0x4159],dl
  411305:	add    BYTE PTR [rax],al
  411307:	add    BYTE PTR [rax+0x4159],dl
  41130d:	add    BYTE PTR [rax],al
  41130f:	add    BYTE PTR [rax+0x4159],dl
  411315:	add    BYTE PTR [rax],al
  411317:	add    BYTE PTR [rax+0x4159],dl
  41131d:	add    BYTE PTR [rax],al
  41131f:	add    BYTE PTR [rax+0x4159],dl
  411325:	add    BYTE PTR [rax],al
  411327:	add    BYTE PTR [rax+0x4159],dl
  41132d:	add    BYTE PTR [rax],al
  41132f:	add    BYTE PTR [rax+0x4159],dl
  411335:	add    BYTE PTR [rax],al
  411337:	add    BYTE PTR [rax+0x4159],dl
  41133d:	add    BYTE PTR [rax],al
  41133f:	add    BYTE PTR [rax+0x4159],dl
  411345:	add    BYTE PTR [rax],al
  411347:	add    BYTE PTR [rax+0x4159],dl
  41134d:	add    BYTE PTR [rax],al
  41134f:	add    BYTE PTR [rax+0x4159],dl
  411355:	add    BYTE PTR [rax],al
  411357:	add    BYTE PTR [rax+0x4159],dl
  41135d:	add    BYTE PTR [rax],al
  41135f:	add    BYTE PTR [rax+0x4159],dl
  411365:	add    BYTE PTR [rax],al
  411367:	add    BYTE PTR [rax+0x4159],dl
  41136d:	add    BYTE PTR [rax],al
  41136f:	add    BYTE PTR [rax+0x4159],dl
  411375:	add    BYTE PTR [rax],al
  411377:	add    BYTE PTR [rax+0x4159],dl
  41137d:	add    BYTE PTR [rax],al
  41137f:	add    BYTE PTR [rax+0x4159],dl
  411385:	add    BYTE PTR [rax],al
  411387:	add    BYTE PTR [rax+0x4159],dl
  41138d:	add    BYTE PTR [rax],al
  41138f:	add    BYTE PTR [rax+0x4159],dl
  411395:	add    BYTE PTR [rax],al
  411397:	add    BYTE PTR [rax+0x4159],dl
  41139d:	add    BYTE PTR [rax],al
  41139f:	add    BYTE PTR [rax+0x4159],dl
  4113a5:	add    BYTE PTR [rax],al
  4113a7:	add    BYTE PTR [rax+0x4159],dl
  4113ad:	add    BYTE PTR [rax],al
  4113af:	add    BYTE PTR [rax+0x4159],dl
  4113b5:	add    BYTE PTR [rax],al
  4113b7:	add    BYTE PTR [rax+0x4159],dl
  4113bd:	add    BYTE PTR [rax],al
  4113bf:	add    BYTE PTR [rax+0x4159],dl
  4113c5:	add    BYTE PTR [rax],al
  4113c7:	add    BYTE PTR [rax+0x4159],dl
  4113cd:	add    BYTE PTR [rax],al
  4113cf:	add    BYTE PTR [rax+0x4159],dl
  4113d5:	add    BYTE PTR [rax],al
  4113d7:	add    BYTE PTR [rax+0x4159],dl
  4113dd:	add    BYTE PTR [rax],al
  4113df:	add    BYTE PTR [rax+0x4159],dl
  4113e5:	add    BYTE PTR [rax],al
  4113e7:	add    BYTE PTR [rax+0x4159],dl
  4113ed:	add    BYTE PTR [rax],al
  4113ef:	add    BYTE PTR [rax+0x4159],dl
  4113f5:	add    BYTE PTR [rax],al
  4113f7:	add    BYTE PTR [rax+0x4159],dl
  4113fd:	add    BYTE PTR [rax],al
  4113ff:	add    BYTE PTR [rax+0x4159],dl
  411405:	add    BYTE PTR [rax],al
  411407:	add    BYTE PTR [rax+0x4159],dl
  41140d:	add    BYTE PTR [rax],al
  41140f:	add    BYTE PTR [rax+0x4159],dl
  411415:	add    BYTE PTR [rax],al
  411417:	add    BYTE PTR [rax+0x4159],dl
  41141d:	add    BYTE PTR [rax],al
  41141f:	add    BYTE PTR [rax+0x4159],dl
  411425:	add    BYTE PTR [rax],al
  411427:	add    BYTE PTR [rax+0x4159],dl
  41142d:	add    BYTE PTR [rax],al
  41142f:	add    BYTE PTR [rax+0x4159],dl
  411435:	add    BYTE PTR [rax],al
  411437:	add    BYTE PTR [rax+0x4159],dl
  41143d:	add    BYTE PTR [rax],al
  41143f:	add    BYTE PTR [rax+0x4159],dl
  411445:	add    BYTE PTR [rax],al
  411447:	add    BYTE PTR [rax+0x4159],dl
  41144d:	add    BYTE PTR [rax],al
  41144f:	add    BYTE PTR [rax+0x4159],dl
  411455:	add    BYTE PTR [rax],al
  411457:	add    BYTE PTR [rax+0x4159],dl
  41145d:	add    BYTE PTR [rax],al
  41145f:	add    BYTE PTR [rax+0x4159],dl
  411465:	add    BYTE PTR [rax],al
  411467:	add    BYTE PTR [rax+0x4159],dl
  41146d:	add    BYTE PTR [rax],al
  41146f:	add    BYTE PTR [rax+0x4159],dl
  411475:	add    BYTE PTR [rax],al
  411477:	add    BYTE PTR [rax+0x4159],dl
  41147d:	add    BYTE PTR [rax],al
  41147f:	add    BYTE PTR [rax+0x4159],dl
  411485:	add    BYTE PTR [rax],al
  411487:	add    BYTE PTR [rax+0x4159],dl
  41148d:	add    BYTE PTR [rax],al
  41148f:	add    BYTE PTR [rax+0x4159],dl
  411495:	add    BYTE PTR [rax],al
  411497:	add    BYTE PTR [rax+0x4159],dl
  41149d:	add    BYTE PTR [rax],al
  41149f:	add    BYTE PTR [rax+0x4159],dl
  4114a5:	add    BYTE PTR [rax],al
  4114a7:	add    BYTE PTR [rax+0x4159],dl
  4114ad:	add    BYTE PTR [rax],al
  4114af:	add    BYTE PTR [rax+0x4159],dl
  4114b5:	add    BYTE PTR [rax],al
  4114b7:	add    BYTE PTR [rax+0x4159],dl
  4114bd:	add    BYTE PTR [rax],al
  4114bf:	add    BYTE PTR [rax+0x4159],dl
  4114c5:	add    BYTE PTR [rax],al
  4114c7:	add    BYTE PTR [rax+0x4159],dl
  4114cd:	add    BYTE PTR [rax],al
  4114cf:	add    BYTE PTR [rax+0x4159],dl
  4114d5:	add    BYTE PTR [rax],al
  4114d7:	add    BYTE PTR [rax+0x4159],dl
  4114dd:	add    BYTE PTR [rax],al
  4114df:	add    BYTE PTR [rax+0x4159],dl
  4114e5:	add    BYTE PTR [rax],al
  4114e7:	add    BYTE PTR [rax+0x4159],dl
  4114ed:	add    BYTE PTR [rax],al
  4114ef:	add    BYTE PTR [rax+0x4159],dl
  4114f5:	add    BYTE PTR [rax],al
  4114f7:	add    BYTE PTR [rax+0x4159],dl
  4114fd:	add    BYTE PTR [rax],al
  4114ff:	add    BYTE PTR [rax+0x4159],dl
  411505:	add    BYTE PTR [rax],al
  411507:	add    BYTE PTR [rax+0x4159],dl
  41150d:	add    BYTE PTR [rax],al
  41150f:	add    BYTE PTR [rax+0x4159],dl
  411515:	add    BYTE PTR [rax],al
  411517:	add    BYTE PTR [rax+0x4159],dl
  41151d:	add    BYTE PTR [rax],al
  41151f:	add    BYTE PTR [rax+0x4159],dl
  411525:	add    BYTE PTR [rax],al
  411527:	add    BYTE PTR [rax+0x4159],dl
  41152d:	add    BYTE PTR [rax],al
  41152f:	add    BYTE PTR [rax+0x4159],dl
  411535:	add    BYTE PTR [rax],al
  411537:	add    BYTE PTR [rax+0x4159],dl
  41153d:	add    BYTE PTR [rax],al
  41153f:	add    BYTE PTR [rax+0x4159],dl
  411545:	add    BYTE PTR [rax],al
  411547:	add    BYTE PTR [rax+0x4159],dl
  41154d:	add    BYTE PTR [rax],al
  41154f:	add    BYTE PTR [rax+0x4159],dl
  411555:	add    BYTE PTR [rax],al
  411557:	add    BYTE PTR [rax+0x4159],dl
  41155d:	add    BYTE PTR [rax],al
  41155f:	add    BYTE PTR [rax+0x4159],dl
  411565:	add    BYTE PTR [rax],al
  411567:	add    BYTE PTR [rax+0x4159],dl
  41156d:	add    BYTE PTR [rax],al
  41156f:	add    BYTE PTR [rax+0x4159],dl
  411575:	add    BYTE PTR [rax],al
  411577:	add    BYTE PTR [rax+0x4159],dl
  41157d:	add    BYTE PTR [rax],al
  41157f:	add    BYTE PTR [rax+0x4159],dl
  411585:	add    BYTE PTR [rax],al
  411587:	add    BYTE PTR [rax+0x4159],dl
  41158d:	add    BYTE PTR [rax],al
  41158f:	add    BYTE PTR [rax+0x4159],dl
  411595:	add    BYTE PTR [rax],al
  411597:	add    BYTE PTR [rax+0x4159],dl
  41159d:	add    BYTE PTR [rax],al
  41159f:	add    BYTE PTR [rax+0x4159],dl
  4115a5:	add    BYTE PTR [rax],al
  4115a7:	add    BYTE PTR [rax+0x4159],dl
  4115ad:	add    BYTE PTR [rax],al
  4115af:	add    BYTE PTR [rax+0x4159],dl
  4115b5:	add    BYTE PTR [rax],al
  4115b7:	add    BYTE PTR [rax+0x4159],dl
  4115bd:	add    BYTE PTR [rax],al
  4115bf:	add    BYTE PTR [rax+0x4159],dl
  4115c5:	add    BYTE PTR [rax],al
  4115c7:	add    BYTE PTR [rax+0x4159],dl
  4115cd:	add    BYTE PTR [rax],al
  4115cf:	add    BYTE PTR [rax+0x4159],dl
  4115d5:	add    BYTE PTR [rax],al
  4115d7:	add    BYTE PTR [rax+0x4159],dl
  4115dd:	add    BYTE PTR [rax],al
  4115df:	add    BYTE PTR [rax+0x4159],dl
  4115e5:	add    BYTE PTR [rax],al
  4115e7:	add    BYTE PTR [rax+0x4159],dl
  4115ed:	add    BYTE PTR [rax],al
  4115ef:	add    BYTE PTR [rax+0x4159],dl
  4115f5:	add    BYTE PTR [rax],al
  4115f7:	add    BYTE PTR [rax+0x4159],dl
  4115fd:	add    BYTE PTR [rax],al
  4115ff:	add    BYTE PTR [rax+0x4159],dl
  411605:	add    BYTE PTR [rax],al
  411607:	add    BYTE PTR [rax+0x4159],dl
  41160d:	add    BYTE PTR [rax],al
  41160f:	add    BYTE PTR [rax+0x4159],dl
  411615:	add    BYTE PTR [rax],al
  411617:	add    BYTE PTR [rax+0x4159],dl
  41161d:	add    BYTE PTR [rax],al
  41161f:	add    BYTE PTR [rax+0x4159],dl
  411625:	add    BYTE PTR [rax],al
  411627:	add    BYTE PTR [rax+0x4159],dl
  41162d:	add    BYTE PTR [rax],al
  41162f:	add    BYTE PTR [rax+0x4159],dl
  411635:	add    BYTE PTR [rax],al
  411637:	add    BYTE PTR [rax+0x4159],dl
  41163d:	add    BYTE PTR [rax],al
  41163f:	add    BYTE PTR [rax+0x4159],dl
  411645:	add    BYTE PTR [rax],al
  411647:	add    BYTE PTR [rax+0x4159],dl
  41164d:	add    BYTE PTR [rax],al
  41164f:	add    BYTE PTR [rax+0x4159],dl
  411655:	add    BYTE PTR [rax],al
  411657:	add    BYTE PTR [rax+0x4159],dl
  41165d:	add    BYTE PTR [rax],al
  41165f:	add    BYTE PTR [rax+0x4159],dl
  411665:	add    BYTE PTR [rax],al
  411667:	add    BYTE PTR [rax+0x4159],dl
  41166d:	add    BYTE PTR [rax],al
  41166f:	add    BYTE PTR [rax+0x4159],dl
  411675:	add    BYTE PTR [rax],al
  411677:	add    BYTE PTR [rax+0x4159],dl
  41167d:	add    BYTE PTR [rax],al
  41167f:	add    BYTE PTR [rax+0x4159],dl
  411685:	add    BYTE PTR [rax],al
  411687:	add    BYTE PTR [rax+0x4159],dl
  41168d:	add    BYTE PTR [rax],al
  41168f:	add    BYTE PTR [rax+0x4159],dl
  411695:	add    BYTE PTR [rax],al
  411697:	add    BYTE PTR [rax+0x4159],dl
  41169d:	add    BYTE PTR [rax],al
  41169f:	add    BYTE PTR [rax+0x4159],dl
  4116a5:	add    BYTE PTR [rax],al
  4116a7:	add    BYTE PTR [rax+0x4159],dl
  4116ad:	add    BYTE PTR [rax],al
  4116af:	add    BYTE PTR [rax+0x4159],dl
  4116b5:	add    BYTE PTR [rax],al
  4116b7:	add    BYTE PTR [rax+0x4159],dl
  4116bd:	add    BYTE PTR [rax],al
  4116bf:	add    BYTE PTR [rax+0x4159],dl
  4116c5:	add    BYTE PTR [rax],al
  4116c7:	add    BYTE PTR [rax+0x4159],dl
  4116cd:	add    BYTE PTR [rax],al
  4116cf:	add    BYTE PTR [rax+0x4159],dl
  4116d5:	add    BYTE PTR [rax],al
  4116d7:	add    BYTE PTR [rax+0x4159],dl
  4116dd:	add    BYTE PTR [rax],al
  4116df:	add    BYTE PTR [rax+0x4159],dl
  4116e5:	add    BYTE PTR [rax],al
  4116e7:	add    BYTE PTR [rax+0x4159],dl
  4116ed:	add    BYTE PTR [rax],al
  4116ef:	add    BYTE PTR [rax+0x4159],dl
  4116f5:	add    BYTE PTR [rax],al
  4116f7:	add    BYTE PTR [rax+0x4159],dl
  4116fd:	add    BYTE PTR [rax],al
  4116ff:	add    BYTE PTR [rax+0x4159],dl
  411705:	add    BYTE PTR [rax],al
  411707:	add    BYTE PTR [rax+0x4159],dl
  41170d:	add    BYTE PTR [rax],al
  41170f:	add    BYTE PTR [rax+0x4159],dl
  411715:	add    BYTE PTR [rax],al
  411717:	add    BYTE PTR [rax+0x4159],dl
  41171d:	add    BYTE PTR [rax],al
  41171f:	add    BYTE PTR [rax+0x4159],dl
  411725:	add    BYTE PTR [rax],al
  411727:	add    BYTE PTR [rax+0x4159],dl
  41172d:	add    BYTE PTR [rax],al
  41172f:	add    BYTE PTR [rax+0x4159],dl
  411735:	add    BYTE PTR [rax],al
  411737:	add    BYTE PTR [rax+0x4159],dl
  41173d:	add    BYTE PTR [rax],al
  41173f:	add    BYTE PTR [rax+0x4159],dl
  411745:	add    BYTE PTR [rax],al
  411747:	add    BYTE PTR [rax+0x4159],dl
  41174d:	add    BYTE PTR [rax],al
  41174f:	add    BYTE PTR [rax+0x4159],dl
  411755:	add    BYTE PTR [rax],al
  411757:	add    BYTE PTR [rax+0x4159],dl
  41175d:	add    BYTE PTR [rax],al
  41175f:	add    BYTE PTR [rax+0x4159],dl
  411765:	add    BYTE PTR [rax],al
  411767:	add    BYTE PTR [rax+0x4159],dl
  41176d:	add    BYTE PTR [rax],al
  41176f:	add    BYTE PTR [rax+0x4159],dl
  411775:	add    BYTE PTR [rax],al
  411777:	add    BYTE PTR [rax+0x4159],dl
  41177d:	add    BYTE PTR [rax],al
  41177f:	add    BYTE PTR [rax+0x4159],dl
  411785:	add    BYTE PTR [rax],al
  411787:	add    BYTE PTR [rax+0x4159],dl
  41178d:	add    BYTE PTR [rax],al
  41178f:	add    BYTE PTR [rax+0x4159],dl
  411795:	add    BYTE PTR [rax],al
  411797:	add    BYTE PTR [rax+0x4159],dl
  41179d:	add    BYTE PTR [rax],al
  41179f:	add    BYTE PTR [rax+0x4159],dl
  4117a5:	add    BYTE PTR [rax],al
  4117a7:	add    BYTE PTR [rax+0x4159],dl
  4117ad:	add    BYTE PTR [rax],al
  4117af:	add    BYTE PTR [rax+0x4159],dl
  4117b5:	add    BYTE PTR [rax],al
  4117b7:	add    BYTE PTR [rax+0x4159],dl
  4117bd:	add    BYTE PTR [rax],al
  4117bf:	add    BYTE PTR [rax+0x4159],dl
  4117c5:	add    BYTE PTR [rax],al
  4117c7:	add    BYTE PTR [rax+0x4159],dl
  4117cd:	add    BYTE PTR [rax],al
  4117cf:	add    BYTE PTR [rax+0x4159],dl
  4117d5:	add    BYTE PTR [rax],al
  4117d7:	add    BYTE PTR [rax+0x4159],dl
  4117dd:	add    BYTE PTR [rax],al
  4117df:	add    BYTE PTR [rax+0x4159],dl
  4117e5:	add    BYTE PTR [rax],al
  4117e7:	add    BYTE PTR [rax+0x4159],dl
  4117ed:	add    BYTE PTR [rax],al
  4117ef:	add    BYTE PTR [rax+0x4159],dl
  4117f5:	add    BYTE PTR [rax],al
  4117f7:	add    BYTE PTR [rax+0x4159],dl
  4117fd:	add    BYTE PTR [rax],al
  4117ff:	add    BYTE PTR [rax+0x4159],dl
  411805:	add    BYTE PTR [rax],al
  411807:	add    BYTE PTR [rax+0x4159],dl
  41180d:	add    BYTE PTR [rax],al
  41180f:	add    BYTE PTR [rax+0x4159],dl
  411815:	add    BYTE PTR [rax],al
  411817:	add    BYTE PTR [rax+0x4159],dl
  41181d:	add    BYTE PTR [rax],al
  41181f:	add    BYTE PTR [rax+0x4159],dl
  411825:	add    BYTE PTR [rax],al
  411827:	add    BYTE PTR [rax+0x4159],dl
  41182d:	add    BYTE PTR [rax],al
  41182f:	add    BYTE PTR [rax+0x4159],dl
  411835:	add    BYTE PTR [rax],al
  411837:	add    BYTE PTR [rax+0x4159],dl
  41183d:	add    BYTE PTR [rax],al
  41183f:	add    BYTE PTR [rax+0x4159],dl
  411845:	add    BYTE PTR [rax],al
  411847:	add    BYTE PTR [rax+0x4159],dl
  41184d:	add    BYTE PTR [rax],al
  41184f:	add    BYTE PTR [rax+0x4159],dl
  411855:	add    BYTE PTR [rax],al
  411857:	add    BYTE PTR [rax+0x4159],dl
  41185d:	add    BYTE PTR [rax],al
  41185f:	add    BYTE PTR [rax+0x4159],dl
  411865:	add    BYTE PTR [rax],al
  411867:	add    BYTE PTR [rax+0x4159],dl
  41186d:	add    BYTE PTR [rax],al
  41186f:	add    BYTE PTR [rax+0x4159],dl
  411875:	add    BYTE PTR [rax],al
  411877:	add    BYTE PTR [rax+0x4159],dl
  41187d:	add    BYTE PTR [rax],al
  41187f:	add    BYTE PTR [rax+0x4159],dl
  411885:	add    BYTE PTR [rax],al
  411887:	add    BYTE PTR [rax+0x4159],dl
  41188d:	add    BYTE PTR [rax],al
  41188f:	add    BYTE PTR [rax+0x4159],dl
  411895:	add    BYTE PTR [rax],al
  411897:	add    BYTE PTR [rax+0x4159],dl
  41189d:	add    BYTE PTR [rax],al
  41189f:	add    BYTE PTR [rax+0x4159],dl
  4118a5:	add    BYTE PTR [rax],al
  4118a7:	add    BYTE PTR [rax+0x4159],dl
  4118ad:	add    BYTE PTR [rax],al
  4118af:	add    BYTE PTR [rax+0x4159],dl
  4118b5:	add    BYTE PTR [rax],al
  4118b7:	add    BYTE PTR [rax+0x4159],dl
  4118bd:	add    BYTE PTR [rax],al
  4118bf:	add    BYTE PTR [rax+0x4159],dl
  4118c5:	add    BYTE PTR [rax],al
  4118c7:	add    BYTE PTR [rax+0x4159],dl
  4118cd:	add    BYTE PTR [rax],al
  4118cf:	add    BYTE PTR [rax+0x4159],dl
  4118d5:	add    BYTE PTR [rax],al
  4118d7:	add    BYTE PTR [rax+0x4159],dl
  4118dd:	add    BYTE PTR [rax],al
  4118df:	add    BYTE PTR [rax+0x4159],dl
  4118e5:	add    BYTE PTR [rax],al
  4118e7:	add    BYTE PTR [rax+0x4159],dl
  4118ed:	add    BYTE PTR [rax],al
  4118ef:	add    BYTE PTR [rax+0x4159],dl
  4118f5:	add    BYTE PTR [rax],al
  4118f7:	add    BYTE PTR [rax+0x4159],dl
  4118fd:	add    BYTE PTR [rax],al
  4118ff:	add    BYTE PTR [rax+0x4159],dl
  411905:	add    BYTE PTR [rax],al
  411907:	add    BYTE PTR [rax+0x4159],dl
  41190d:	add    BYTE PTR [rax],al
  41190f:	add    BYTE PTR [rax+0x4159],dl
  411915:	add    BYTE PTR [rax],al
  411917:	add    BYTE PTR [rax+0x4159],dl
  41191d:	add    BYTE PTR [rax],al
  41191f:	add    BYTE PTR [rax+0x4159],dl
  411925:	add    BYTE PTR [rax],al
  411927:	add    BYTE PTR [rax+0x4159],dl
  41192d:	add    BYTE PTR [rax],al
  41192f:	add    BYTE PTR [rax+0x4159],dl
  411935:	add    BYTE PTR [rax],al
  411937:	add    BYTE PTR [rax+0x4159],dl
  41193d:	add    BYTE PTR [rax],al
  41193f:	add    BYTE PTR [rax+0x4159],dl
  411945:	add    BYTE PTR [rax],al
  411947:	add    BYTE PTR [rax+0x4159],dl
  41194d:	add    BYTE PTR [rax],al
  41194f:	add    BYTE PTR [rax+0x4159],dl
  411955:	add    BYTE PTR [rax],al
  411957:	add    BYTE PTR [rax+0x4159],dl
  41195d:	add    BYTE PTR [rax],al
  41195f:	add    BYTE PTR [rax+0x4159],dl
  411965:	add    BYTE PTR [rax],al
  411967:	add    BYTE PTR [rax+0x4159],dl
  41196d:	add    BYTE PTR [rax],al
  41196f:	add    BYTE PTR [rax+0x4159],dl
  411975:	add    BYTE PTR [rax],al
  411977:	add    BYTE PTR [rax+0x4159],dl
  41197d:	add    BYTE PTR [rax],al
  41197f:	add    BYTE PTR [rax+0x4159],dl
  411985:	add    BYTE PTR [rax],al
  411987:	add    BYTE PTR [rax+0x4159],dl
  41198d:	add    BYTE PTR [rax],al
  41198f:	add    BYTE PTR [rax+0x4159],dl
  411995:	add    BYTE PTR [rax],al
  411997:	add    BYTE PTR [rax+0x4159],dl
  41199d:	add    BYTE PTR [rax],al
  41199f:	add    BYTE PTR [rax+0x4159],dl
  4119a5:	add    BYTE PTR [rax],al
  4119a7:	add    BYTE PTR [rax+0x4159],dl
  4119ad:	add    BYTE PTR [rax],al
  4119af:	add    BYTE PTR [rax+0x4159],dl
  4119b5:	add    BYTE PTR [rax],al
  4119b7:	add    BYTE PTR [rax+0x4159],dl
  4119bd:	add    BYTE PTR [rax],al
  4119bf:	add    BYTE PTR [rax+0x4159],dl
  4119c5:	add    BYTE PTR [rax],al
  4119c7:	add    BYTE PTR [rax+0x4159],dl
  4119cd:	add    BYTE PTR [rax],al
  4119cf:	add    BYTE PTR [rax+0x4159],dl
  4119d5:	add    BYTE PTR [rax],al
  4119d7:	add    BYTE PTR [rax+0x4159],dl
  4119dd:	add    BYTE PTR [rax],al
  4119df:	add    BYTE PTR [rax+0x4159],dl
  4119e5:	add    BYTE PTR [rax],al
  4119e7:	add    BYTE PTR [rax+0x4159],dl
  4119ed:	add    BYTE PTR [rax],al
  4119ef:	add    BYTE PTR [rax+0x4159],dl
  4119f5:	add    BYTE PTR [rax],al
  4119f7:	add    BYTE PTR [rax+0x4159],dl
  4119fd:	add    BYTE PTR [rax],al
  4119ff:	add    BYTE PTR [rax+0x4159],dl
  411a05:	add    BYTE PTR [rax],al
  411a07:	add    BYTE PTR [rax+0x4159],dl
  411a0d:	add    BYTE PTR [rax],al
  411a0f:	add    BYTE PTR [rax+0x4159],dl
  411a15:	add    BYTE PTR [rax],al
  411a17:	add    BYTE PTR [rax+0x4159],dl
  411a1d:	add    BYTE PTR [rax],al
  411a1f:	add    BYTE PTR [rax+0x4159],dl
  411a25:	add    BYTE PTR [rax],al
  411a27:	add    BYTE PTR [rax+0x4159],dl
  411a2d:	add    BYTE PTR [rax],al
  411a2f:	add    BYTE PTR [rax+0x4159],dl
  411a35:	add    BYTE PTR [rax],al
  411a37:	add    BYTE PTR [rax+0x4159],dl
  411a3d:	add    BYTE PTR [rax],al
  411a3f:	add    BYTE PTR [rax+0x4159],dl
  411a45:	add    BYTE PTR [rax],al
  411a47:	add    BYTE PTR [rax+0x4159],dl
  411a4d:	add    BYTE PTR [rax],al
  411a4f:	add    BYTE PTR [rax+0x4159],dl
  411a55:	add    BYTE PTR [rax],al
  411a57:	add    BYTE PTR [rax+0x4159],dl
  411a5d:	add    BYTE PTR [rax],al
  411a5f:	add    BYTE PTR [rax+0x4159],dl
  411a65:	add    BYTE PTR [rax],al
  411a67:	add    BYTE PTR [rax+0x4159],dl
  411a6d:	add    BYTE PTR [rax],al
  411a6f:	add    BYTE PTR [rax+0x4159],dl
  411a75:	add    BYTE PTR [rax],al
  411a77:	add    BYTE PTR [rax+0x4159],dl
  411a7d:	add    BYTE PTR [rax],al
  411a7f:	add    BYTE PTR [rax+0x4159],dl
  411a85:	add    BYTE PTR [rax],al
  411a87:	add    BYTE PTR [rax+0x4159],dl
  411a8d:	add    BYTE PTR [rax],al
  411a8f:	add    BYTE PTR [rax+0x4159],dl
  411a95:	add    BYTE PTR [rax],al
  411a97:	add    BYTE PTR [rax+0x4159],dl
  411a9d:	add    BYTE PTR [rax],al
  411a9f:	add    BYTE PTR [rax+0x4159],dl
  411aa5:	add    BYTE PTR [rax],al
  411aa7:	add    BYTE PTR [rax+0x4159],dl
  411aad:	add    BYTE PTR [rax],al
  411aaf:	add    BYTE PTR [rax+0x4159],dl
  411ab5:	add    BYTE PTR [rax],al
  411ab7:	add    BYTE PTR [rax+0x4159],dl
  411abd:	add    BYTE PTR [rax],al
  411abf:	add    BYTE PTR [rax+0x4159],dl
  411ac5:	add    BYTE PTR [rax],al
  411ac7:	add    BYTE PTR [rax+0x4159],dl
  411acd:	add    BYTE PTR [rax],al
  411acf:	add    BYTE PTR [rax+0x4159],dl
  411ad5:	add    BYTE PTR [rax],al
  411ad7:	add    BYTE PTR [rax+0x4159],dl
  411add:	add    BYTE PTR [rax],al
  411adf:	add    BYTE PTR [rax+0x4159],dl
  411ae5:	add    BYTE PTR [rax],al
  411ae7:	add    BYTE PTR [rax+0x4159],dl
  411aed:	add    BYTE PTR [rax],al
  411aef:	add    BYTE PTR [rax+0x4159],dl
  411af5:	add    BYTE PTR [rax],al
  411af7:	add    BYTE PTR [rax+0x4159],dl
  411afd:	add    BYTE PTR [rax],al
  411aff:	add    BYTE PTR [rax+0x4159],dl
  411b05:	add    BYTE PTR [rax],al
  411b07:	add    BYTE PTR [rax+0x4159],dl
  411b0d:	add    BYTE PTR [rax],al
  411b0f:	add    BYTE PTR [rax+0x4159],dl
  411b15:	add    BYTE PTR [rax],al
  411b17:	add    BYTE PTR [rax+0x4159],dl
  411b1d:	add    BYTE PTR [rax],al
  411b1f:	add    BYTE PTR [rax+0x4159],dl
  411b25:	add    BYTE PTR [rax],al
  411b27:	add    BYTE PTR [rax+0x4159],dl
  411b2d:	add    BYTE PTR [rax],al
  411b2f:	add    BYTE PTR [rax+0x4159],dl
  411b35:	add    BYTE PTR [rax],al
  411b37:	add    BYTE PTR [rax+0x4159],dl
  411b3d:	add    BYTE PTR [rax],al
  411b3f:	add    BYTE PTR [rax+0x4159],dl
  411b45:	add    BYTE PTR [rax],al
  411b47:	add    BYTE PTR [rax+0x4159],dl
  411b4d:	add    BYTE PTR [rax],al
  411b4f:	add    BYTE PTR [rax+0x4159],dl
  411b55:	add    BYTE PTR [rax],al
  411b57:	add    BYTE PTR [rax+0x4159],dl
  411b5d:	add    BYTE PTR [rax],al
  411b5f:	add    BYTE PTR [rax+0x4159],dl
  411b65:	add    BYTE PTR [rax],al
  411b67:	add    BYTE PTR [rax+0x4159],dl
  411b6d:	add    BYTE PTR [rax],al
  411b6f:	add    BYTE PTR [rax+0x4159],dl
  411b75:	add    BYTE PTR [rax],al
  411b77:	add    BYTE PTR [rax+0x4159],dl
  411b7d:	add    BYTE PTR [rax],al
  411b7f:	add    BYTE PTR [rax+0x4159],dl
  411b85:	add    BYTE PTR [rax],al
  411b87:	add    BYTE PTR [rax+0x4159],dl
  411b8d:	add    BYTE PTR [rax],al
  411b8f:	add    BYTE PTR [rax+0x4159],dl
  411b95:	add    BYTE PTR [rax],al
  411b97:	add    BYTE PTR [rax+0x4159],dl
  411b9d:	add    BYTE PTR [rax],al
  411b9f:	add    BYTE PTR [rax+0x4159],dl
  411ba5:	add    BYTE PTR [rax],al
  411ba7:	add    BYTE PTR [rax+0x4159],dl
  411bad:	add    BYTE PTR [rax],al
  411baf:	add    BYTE PTR [rax+0x4159],dl
  411bb5:	add    BYTE PTR [rax],al
  411bb7:	add    BYTE PTR [rax+0x4159],dl
  411bbd:	add    BYTE PTR [rax],al
  411bbf:	add    BYTE PTR [rax+0x4159],dl
  411bc5:	add    BYTE PTR [rax],al
  411bc7:	add    BYTE PTR [rax+0x4159],dl
  411bcd:	add    BYTE PTR [rax],al
  411bcf:	add    BYTE PTR [rax+0x4159],dl
  411bd5:	add    BYTE PTR [rax],al
  411bd7:	add    BYTE PTR [rax+0x4159],dl
  411bdd:	add    BYTE PTR [rax],al
  411bdf:	add    BYTE PTR [rax+0x4159],dl
  411be5:	add    BYTE PTR [rax],al
  411be7:	add    BYTE PTR [rax+0x4159],dl
  411bed:	add    BYTE PTR [rax],al
  411bef:	add    BYTE PTR [rax+0x4159],dl
  411bf5:	add    BYTE PTR [rax],al
  411bf7:	add    BYTE PTR [rax+0x4159],dl
  411bfd:	add    BYTE PTR [rax],al
  411bff:	add    BYTE PTR [rax+0x4159],dl
  411c05:	add    BYTE PTR [rax],al
  411c07:	add    BYTE PTR [rax+0x4159],dl
  411c0d:	add    BYTE PTR [rax],al
  411c0f:	add    BYTE PTR [rax+0x4159],dl
  411c15:	add    BYTE PTR [rax],al
  411c17:	add    BYTE PTR [rax+0x4159],dl
  411c1d:	add    BYTE PTR [rax],al
  411c1f:	add    BYTE PTR [rax+0x4159],dl
  411c25:	add    BYTE PTR [rax],al
  411c27:	add    BYTE PTR [rax+0x4159],dl
  411c2d:	add    BYTE PTR [rax],al
  411c2f:	add    BYTE PTR [rax+0x4159],dl
  411c35:	add    BYTE PTR [rax],al
  411c37:	add    BYTE PTR [rax+0x4159],dl
  411c3d:	add    BYTE PTR [rax],al
  411c3f:	add    BYTE PTR [rax+0x4159],dl
  411c45:	add    BYTE PTR [rax],al
  411c47:	add    BYTE PTR [rax+0x4159],dl
  411c4d:	add    BYTE PTR [rax],al
  411c4f:	add    BYTE PTR [rax+0x4159],dl
  411c55:	add    BYTE PTR [rax],al
  411c57:	add    BYTE PTR [rax+0x4159],dl
  411c5d:	add    BYTE PTR [rax],al
  411c5f:	add    BYTE PTR [rax+0x4159],dl
  411c65:	add    BYTE PTR [rax],al
  411c67:	add    BYTE PTR [rax+0x4159],dl
  411c6d:	add    BYTE PTR [rax],al
  411c6f:	add    BYTE PTR [rax+0x4159],dl
  411c75:	add    BYTE PTR [rax],al
  411c77:	add    BYTE PTR [rax+0x4159],dl
  411c7d:	add    BYTE PTR [rax],al
  411c7f:	add    BYTE PTR [rax+0x4159],dl
  411c85:	add    BYTE PTR [rax],al
  411c87:	add    BYTE PTR [rax+0x4159],dl
  411c8d:	add    BYTE PTR [rax],al
  411c8f:	add    BYTE PTR [rax+0x4159],dl
  411c95:	add    BYTE PTR [rax],al
  411c97:	add    BYTE PTR [rax+0x4159],dl
  411c9d:	add    BYTE PTR [rax],al
  411c9f:	add    BYTE PTR [rax+0x4159],dl
  411ca5:	add    BYTE PTR [rax],al
  411ca7:	add    BYTE PTR [rax+0x4159],dl
  411cad:	add    BYTE PTR [rax],al
  411caf:	add    BYTE PTR [rax+0x4159],dl
  411cb5:	add    BYTE PTR [rax],al
  411cb7:	add    BYTE PTR [rax+0x4159],dl
  411cbd:	add    BYTE PTR [rax],al
  411cbf:	add    BYTE PTR [rax+0x4159],dl
  411cc5:	add    BYTE PTR [rax],al
  411cc7:	add    BYTE PTR [rax+0x4159],dl
  411ccd:	add    BYTE PTR [rax],al
  411ccf:	add    BYTE PTR [rax+0x4159],dl
  411cd5:	add    BYTE PTR [rax],al
  411cd7:	add    BYTE PTR [rax+0x4159],dl
  411cdd:	add    BYTE PTR [rax],al
  411cdf:	add    BYTE PTR [rax+0x4159],dl
  411ce5:	add    BYTE PTR [rax],al
  411ce7:	add    BYTE PTR [rax+0x4159],dl
  411ced:	add    BYTE PTR [rax],al
  411cef:	add    BYTE PTR [rax+0x4159],dl
  411cf5:	add    BYTE PTR [rax],al
  411cf7:	add    BYTE PTR [rax+0x4159],dl
  411cfd:	add    BYTE PTR [rax],al
  411cff:	add    BYTE PTR [rax+0x4159],dl
  411d05:	add    BYTE PTR [rax],al
  411d07:	add    BYTE PTR [rax+0x4159],dl
  411d0d:	add    BYTE PTR [rax],al
  411d0f:	add    BYTE PTR [rax+0x4159],dl
  411d15:	add    BYTE PTR [rax],al
  411d17:	add    BYTE PTR [rax+0x4159],dl
  411d1d:	add    BYTE PTR [rax],al
  411d1f:	add    BYTE PTR [rax+0x4159],dl
  411d25:	add    BYTE PTR [rax],al
  411d27:	add    BYTE PTR [rax+0x4159],dl
  411d2d:	add    BYTE PTR [rax],al
  411d2f:	add    BYTE PTR [rax+0x4159],dl
  411d35:	add    BYTE PTR [rax],al
  411d37:	add    BYTE PTR [rax+0x4159],dl
  411d3d:	add    BYTE PTR [rax],al
  411d3f:	add    BYTE PTR [rax+0x4159],dl
  411d45:	add    BYTE PTR [rax],al
  411d47:	add    BYTE PTR [rax+0x4159],dl
  411d4d:	add    BYTE PTR [rax],al
  411d4f:	add    BYTE PTR [rax+0x4159],dl
  411d55:	add    BYTE PTR [rax],al
  411d57:	add    BYTE PTR [rax+0x4159],dl
  411d5d:	add    BYTE PTR [rax],al
  411d5f:	add    BYTE PTR [rax+0x4159],dl
  411d65:	add    BYTE PTR [rax],al
  411d67:	add    BYTE PTR [rax+0x4159],dl
  411d6d:	add    BYTE PTR [rax],al
  411d6f:	add    BYTE PTR [rax+0x4159],dl
  411d75:	add    BYTE PTR [rax],al
  411d77:	add    BYTE PTR [rax+0x4159],dl
  411d7d:	add    BYTE PTR [rax],al
  411d7f:	add    BYTE PTR [rax+0x4159],dl
  411d85:	add    BYTE PTR [rax],al
  411d87:	add    BYTE PTR [rax+0x4159],dl
  411d8d:	add    BYTE PTR [rax],al
  411d8f:	add    BYTE PTR [rax+0x4159],dl
  411d95:	add    BYTE PTR [rax],al
  411d97:	add    BYTE PTR [rax+0x4159],dl
  411d9d:	add    BYTE PTR [rax],al
  411d9f:	add    BYTE PTR [rax+0x4159],dl
  411da5:	add    BYTE PTR [rax],al
  411da7:	add    BYTE PTR [rax+0x4159],dl
  411dad:	add    BYTE PTR [rax],al
  411daf:	add    BYTE PTR [rax+0x4159],dl
  411db5:	add    BYTE PTR [rax],al
  411db7:	add    BYTE PTR [rax+0x4159],dl
  411dbd:	add    BYTE PTR [rax],al
  411dbf:	add    BYTE PTR [rax+0x4159],dl
  411dc5:	add    BYTE PTR [rax],al
  411dc7:	add    BYTE PTR [rax+0x4159],dl
  411dcd:	add    BYTE PTR [rax],al
  411dcf:	add    BYTE PTR [rax+0x4159],dl
  411dd5:	add    BYTE PTR [rax],al
  411dd7:	add    BYTE PTR [rax+0x4159],dl
  411ddd:	add    BYTE PTR [rax],al
  411ddf:	add    BYTE PTR [rax+0x4159],dl
  411de5:	add    BYTE PTR [rax],al
  411de7:	add    BYTE PTR [rax+0x4159],dl
  411ded:	add    BYTE PTR [rax],al
  411def:	add    BYTE PTR [rax+0x4159],dl
  411df5:	add    BYTE PTR [rax],al
  411df7:	add    BYTE PTR [rax+0x4159],dl
  411dfd:	add    BYTE PTR [rax],al
  411dff:	add    BYTE PTR [rax+0x4159],dl
  411e05:	add    BYTE PTR [rax],al
  411e07:	add    BYTE PTR [rax+0x4159],dl
  411e0d:	add    BYTE PTR [rax],al
  411e0f:	add    BYTE PTR [rax+0x4159],dl
  411e15:	add    BYTE PTR [rax],al
  411e17:	add    BYTE PTR [rax+0x4159],dl
  411e1d:	add    BYTE PTR [rax],al
  411e1f:	add    BYTE PTR [rax+0x4159],dl
  411e25:	add    BYTE PTR [rax],al
  411e27:	add    BYTE PTR [rax+0x4159],dl
  411e2d:	add    BYTE PTR [rax],al
  411e2f:	add    BYTE PTR [rax+0x4159],dl
  411e35:	add    BYTE PTR [rax],al
  411e37:	add    BYTE PTR [rax+0x4159],dl
  411e3d:	add    BYTE PTR [rax],al
  411e3f:	add    BYTE PTR [rax+0x4159],dl
  411e45:	add    BYTE PTR [rax],al
  411e47:	add    BYTE PTR [rax+0x4159],dl
  411e4d:	add    BYTE PTR [rax],al
  411e4f:	add    BYTE PTR [rax+0x4159],dl
  411e55:	add    BYTE PTR [rax],al
  411e57:	add    BYTE PTR [rax+0x4159],dl
  411e5d:	add    BYTE PTR [rax],al
  411e5f:	add    BYTE PTR [rax+0x4159],dl
  411e65:	add    BYTE PTR [rax],al
  411e67:	add    BYTE PTR [rax+0x4159],dl
  411e6d:	add    BYTE PTR [rax],al
  411e6f:	add    BYTE PTR [rax+0x4159],dl
  411e75:	add    BYTE PTR [rax],al
  411e77:	add    BYTE PTR [rax+0x4159],dl
  411e7d:	add    BYTE PTR [rax],al
  411e7f:	add    BYTE PTR [rax+0x4159],dl
  411e85:	add    BYTE PTR [rax],al
  411e87:	add    BYTE PTR [rax+0x4159],dl
  411e8d:	add    BYTE PTR [rax],al
  411e8f:	add    BYTE PTR [rax+0x4159],dl
  411e95:	add    BYTE PTR [rax],al
  411e97:	add    BYTE PTR [rax+0x4159],dl
  411e9d:	add    BYTE PTR [rax],al
  411e9f:	add    BYTE PTR [rax+0x4159],dl
  411ea5:	add    BYTE PTR [rax],al
  411ea7:	add    BYTE PTR [rax+0x4159],dl
  411ead:	add    BYTE PTR [rax],al
  411eaf:	add    BYTE PTR [rax+0x4159],dl
  411eb5:	add    BYTE PTR [rax],al
  411eb7:	add    BYTE PTR [rax+0x4159],dl
  411ebd:	add    BYTE PTR [rax],al
  411ebf:	add    BYTE PTR [rax+0x4159],dl
  411ec5:	add    BYTE PTR [rax],al
  411ec7:	add    BYTE PTR [rax+0x4159],dl
  411ecd:	add    BYTE PTR [rax],al
  411ecf:	add    BYTE PTR [rax+0x4159],dl
  411ed5:	add    BYTE PTR [rax],al
  411ed7:	add    BYTE PTR [rax+0x4159],dl
  411edd:	add    BYTE PTR [rax],al
  411edf:	add    BYTE PTR [rax+0x4159],dl
  411ee5:	add    BYTE PTR [rax],al
  411ee7:	add    BYTE PTR [rax+0x4159],dl
  411eed:	add    BYTE PTR [rax],al
  411eef:	add    BYTE PTR [rax+0x4159],dl
  411ef5:	add    BYTE PTR [rax],al
  411ef7:	add    BYTE PTR [rax+0x4159],dl
  411efd:	add    BYTE PTR [rax],al
  411eff:	add    BYTE PTR [rax+0x4159],dl
  411f05:	add    BYTE PTR [rax],al
  411f07:	add    BYTE PTR [rax+0x4159],dl
  411f0d:	add    BYTE PTR [rax],al
  411f0f:	add    BYTE PTR [rax+0x4159],dl
  411f15:	add    BYTE PTR [rax],al
  411f17:	add    BYTE PTR [rax+0x4159],dl
  411f1d:	add    BYTE PTR [rax],al
  411f1f:	add    BYTE PTR [rax+0x4159],dl
  411f25:	add    BYTE PTR [rax],al
  411f27:	add    BYTE PTR [rax+0x4159],dl
  411f2d:	add    BYTE PTR [rax],al
  411f2f:	add    BYTE PTR [rax+0x4159],dl
  411f35:	add    BYTE PTR [rax],al
  411f37:	add    BYTE PTR [rax+0x4159],dl
  411f3d:	add    BYTE PTR [rax],al
  411f3f:	add    BYTE PTR [rax+0x4159],dl
  411f45:	add    BYTE PTR [rax],al
  411f47:	add    BYTE PTR [rax+0x4159],dl
  411f4d:	add    BYTE PTR [rax],al
  411f4f:	add    BYTE PTR [rax+0x4159],dl
  411f55:	add    BYTE PTR [rax],al
  411f57:	add    BYTE PTR [rax+0x4159],dl
  411f5d:	add    BYTE PTR [rax],al
  411f5f:	add    BYTE PTR [rax+0x4159],dl
  411f65:	add    BYTE PTR [rax],al
  411f67:	add    BYTE PTR [rax+0x4159],dl
  411f6d:	add    BYTE PTR [rax],al
  411f6f:	add    BYTE PTR [rax+0x4159],dl
  411f75:	add    BYTE PTR [rax],al
  411f77:	add    BYTE PTR [rax+0x4159],dl
  411f7d:	add    BYTE PTR [rax],al
  411f7f:	add    BYTE PTR [rax+0x4159],dl
  411f85:	add    BYTE PTR [rax],al
  411f87:	add    BYTE PTR [rax+0x4159],dl
  411f8d:	add    BYTE PTR [rax],al
  411f8f:	add    BYTE PTR [rax+0x4159],dl
  411f95:	add    BYTE PTR [rax],al
  411f97:	add    BYTE PTR [rax+0x4159],dl
  411f9d:	add    BYTE PTR [rax],al
  411f9f:	add    BYTE PTR [rax+0x4159],dl
  411fa5:	add    BYTE PTR [rax],al
  411fa7:	add    BYTE PTR [rax+0x4159],dl
  411fad:	add    BYTE PTR [rax],al
  411faf:	add    BYTE PTR [rax+0x4159],dl
  411fb5:	add    BYTE PTR [rax],al
  411fb7:	add    BYTE PTR [rax+0x4159],dl
  411fbd:	add    BYTE PTR [rax],al
  411fbf:	add    BYTE PTR [rax+0x4159],dl
  411fc5:	add    BYTE PTR [rax],al
  411fc7:	add    BYTE PTR [rax+0x4159],dl
  411fcd:	add    BYTE PTR [rax],al
  411fcf:	add    BYTE PTR [rax+0x4159],dl
  411fd5:	add    BYTE PTR [rax],al
  411fd7:	add    BYTE PTR [rax+0x4159],dl
  411fdd:	add    BYTE PTR [rax],al
  411fdf:	add    BYTE PTR [rax+0x4159],dl
  411fe5:	add    BYTE PTR [rax],al
  411fe7:	add    BYTE PTR [rax+0x4159],dl
  411fed:	add    BYTE PTR [rax],al
  411fef:	add    BYTE PTR [rax+0x4159],dl
  411ff5:	add    BYTE PTR [rax],al
  411ff7:	add    BYTE PTR [rax+0x4159],dl
  411ffd:	add    BYTE PTR [rax],al
  411fff:	add    BYTE PTR [rax+0x4159],dl
  412005:	add    BYTE PTR [rax],al
  412007:	add    BYTE PTR [rax+0x4159],dl
  41200d:	add    BYTE PTR [rax],al
  41200f:	add    BYTE PTR [rax+0x4159],dl
  412015:	add    BYTE PTR [rax],al
  412017:	add    BYTE PTR [rax+0x4159],dl
  41201d:	add    BYTE PTR [rax],al
  41201f:	add    BYTE PTR [rax+0x4159],dl
  412025:	add    BYTE PTR [rax],al
  412027:	add    BYTE PTR [rax+0x4159],dl
  41202d:	add    BYTE PTR [rax],al
  41202f:	add    BYTE PTR [rax+0x4159],dl
  412035:	add    BYTE PTR [rax],al
  412037:	add    BYTE PTR [rax+0x4159],dl
  41203d:	add    BYTE PTR [rax],al
  41203f:	add    BYTE PTR [rax+0x4159],dl
  412045:	add    BYTE PTR [rax],al
  412047:	add    BYTE PTR [rax+0x4159],dl
  41204d:	add    BYTE PTR [rax],al
  41204f:	add    BYTE PTR [rax+0x4159],dl
  412055:	add    BYTE PTR [rax],al
  412057:	add    BYTE PTR [rax+0x4159],dl
  41205d:	add    BYTE PTR [rax],al
  41205f:	add    BYTE PTR [rax+0x4159],dl
  412065:	add    BYTE PTR [rax],al
  412067:	add    BYTE PTR [rax+0x4159],dl
  41206d:	add    BYTE PTR [rax],al
  41206f:	add    BYTE PTR [rax+0x4159],dl
  412075:	add    BYTE PTR [rax],al
  412077:	add    BYTE PTR [rax+0x4159],dl
  41207d:	add    BYTE PTR [rax],al
  41207f:	add    BYTE PTR [rax+0x4159],dl
  412085:	add    BYTE PTR [rax],al
  412087:	add    BYTE PTR [rax+0x4159],dl
  41208d:	add    BYTE PTR [rax],al
  41208f:	add    BYTE PTR [rax+0x4159],dl
  412095:	add    BYTE PTR [rax],al
  412097:	add    BYTE PTR [rax+0x4159],dl
  41209d:	add    BYTE PTR [rax],al
  41209f:	add    BYTE PTR [rax+0x4159],dl
  4120a5:	add    BYTE PTR [rax],al
  4120a7:	add    BYTE PTR [rax+0x4159],dl
  4120ad:	add    BYTE PTR [rax],al
  4120af:	add    BYTE PTR [rax+0x4159],dl
  4120b5:	add    BYTE PTR [rax],al
  4120b7:	add    BYTE PTR [rax+0x4159],dl
  4120bd:	add    BYTE PTR [rax],al
  4120bf:	add    BYTE PTR [rax+0x4159],dl
  4120c5:	add    BYTE PTR [rax],al
  4120c7:	add    BYTE PTR [rax+0x4159],dl
  4120cd:	add    BYTE PTR [rax],al
  4120cf:	add    BYTE PTR [rax+0x4159],dl
  4120d5:	add    BYTE PTR [rax],al
  4120d7:	add    BYTE PTR [rax+0x4159],dl
  4120dd:	add    BYTE PTR [rax],al
  4120df:	add    BYTE PTR [rax+0x4159],dl
  4120e5:	add    BYTE PTR [rax],al
  4120e7:	add    BYTE PTR [rax+0x4159],dl
  4120ed:	add    BYTE PTR [rax],al
  4120ef:	add    BYTE PTR [rax+0x4159],dl
  4120f5:	add    BYTE PTR [rax],al
  4120f7:	add    BYTE PTR [rax+0x4159],dl
  4120fd:	add    BYTE PTR [rax],al
  4120ff:	add    BYTE PTR [rax+0x4159],dl
  412105:	add    BYTE PTR [rax],al
  412107:	add    BYTE PTR [rax+0x4159],dl
  41210d:	add    BYTE PTR [rax],al
  41210f:	add    BYTE PTR [rax+0x4159],dl
  412115:	add    BYTE PTR [rax],al
  412117:	add    BYTE PTR [rax+0x4159],dl
  41211d:	add    BYTE PTR [rax],al
  41211f:	add    BYTE PTR [rax+0x4159],dl
  412125:	add    BYTE PTR [rax],al
  412127:	add    BYTE PTR [rax+0x4159],dl
  41212d:	add    BYTE PTR [rax],al
  41212f:	add    BYTE PTR [rax+0x4159],dl
  412135:	add    BYTE PTR [rax],al
  412137:	add    BYTE PTR [rax+0x4159],dl
  41213d:	add    BYTE PTR [rax],al
  41213f:	add    BYTE PTR [rax+0x4159],dl
  412145:	add    BYTE PTR [rax],al
  412147:	add    BYTE PTR [rax+0x4159],dl
  41214d:	add    BYTE PTR [rax],al
  41214f:	add    BYTE PTR [rax+0x4159],dl
  412155:	add    BYTE PTR [rax],al
  412157:	add    BYTE PTR [rax+0x4159],dl
  41215d:	add    BYTE PTR [rax],al
  41215f:	add    BYTE PTR [rax+0x4159],dl
  412165:	add    BYTE PTR [rax],al
  412167:	add    BYTE PTR [rax+0x4159],dl
  41216d:	add    BYTE PTR [rax],al
  41216f:	add    BYTE PTR [rax+0x4159],dl
  412175:	add    BYTE PTR [rax],al
  412177:	add    BYTE PTR [rax+0x4159],dl
  41217d:	add    BYTE PTR [rax],al
  41217f:	add    BYTE PTR [rax+0x4159],dl
  412185:	add    BYTE PTR [rax],al
  412187:	add    BYTE PTR [rax+0x4159],dl
  41218d:	add    BYTE PTR [rax],al
  41218f:	add    BYTE PTR [rax+0x4159],dl
  412195:	add    BYTE PTR [rax],al
  412197:	add    BYTE PTR [rax+0x4159],dl
  41219d:	add    BYTE PTR [rax],al
  41219f:	add    BYTE PTR [rax+0x4159],dl
  4121a5:	add    BYTE PTR [rax],al
  4121a7:	add    BYTE PTR [rax+0x4159],dl
  4121ad:	add    BYTE PTR [rax],al
  4121af:	add    BYTE PTR [rax+0x4159],dl
  4121b5:	add    BYTE PTR [rax],al
  4121b7:	add    BYTE PTR [rax+0x4159],dl
  4121bd:	add    BYTE PTR [rax],al
  4121bf:	add    BYTE PTR [rax+0x4159],dl
  4121c5:	add    BYTE PTR [rax],al
  4121c7:	add    BYTE PTR [rax+0x4159],dl
  4121cd:	add    BYTE PTR [rax],al
  4121cf:	add    BYTE PTR [rax+0x4159],dl
  4121d5:	add    BYTE PTR [rax],al
  4121d7:	add    BYTE PTR [rax+0x4159],dl
  4121dd:	add    BYTE PTR [rax],al
  4121df:	add    BYTE PTR [rax+0x4159],dl
  4121e5:	add    BYTE PTR [rax],al
  4121e7:	add    BYTE PTR [rax+0x4159],dl
  4121ed:	add    BYTE PTR [rax],al
  4121ef:	add    BYTE PTR [rax+0x4159],dl
  4121f5:	add    BYTE PTR [rax],al
  4121f7:	add    BYTE PTR [rax+0x4159],dl
  4121fd:	add    BYTE PTR [rax],al
  4121ff:	add    BYTE PTR [rax+0x4159],dl
  412205:	add    BYTE PTR [rax],al
  412207:	add    BYTE PTR [rax+0x4159],dl
  41220d:	add    BYTE PTR [rax],al
  41220f:	add    BYTE PTR [rax+0x4159],dl
  412215:	add    BYTE PTR [rax],al
  412217:	add    BYTE PTR [rax+0x4159],dl
  41221d:	add    BYTE PTR [rax],al
  41221f:	add    BYTE PTR [rax+0x4159],dl
  412225:	add    BYTE PTR [rax],al
  412227:	add    BYTE PTR [rax+0x4159],dl
  41222d:	add    BYTE PTR [rax],al
  41222f:	add    BYTE PTR [rax+0x4159],dl
  412235:	add    BYTE PTR [rax],al
  412237:	add    BYTE PTR [rax+0x4159],dl
  41223d:	add    BYTE PTR [rax],al
  41223f:	add    BYTE PTR [rax+0x4159],dl
  412245:	add    BYTE PTR [rax],al
  412247:	add    BYTE PTR [rax+0x4159],dl
  41224d:	add    BYTE PTR [rax],al
  41224f:	add    BYTE PTR [rax+0x4159],dl
  412255:	add    BYTE PTR [rax],al
  412257:	add    BYTE PTR [rax+0x4159],dl
  41225d:	add    BYTE PTR [rax],al
  41225f:	add    BYTE PTR [rax+0x4159],dl
  412265:	add    BYTE PTR [rax],al
  412267:	add    BYTE PTR [rax+0x4159],dl
  41226d:	add    BYTE PTR [rax],al
  41226f:	add    BYTE PTR [rax+0x4159],dl
  412275:	add    BYTE PTR [rax],al
  412277:	add    BYTE PTR [rax+0x4159],dl
  41227d:	add    BYTE PTR [rax],al
  41227f:	add    BYTE PTR [rax+0x4159],dl
  412285:	add    BYTE PTR [rax],al
  412287:	add    BYTE PTR [rax+0x4159],dl
  41228d:	add    BYTE PTR [rax],al
  41228f:	add    BYTE PTR [rax+0x4159],dl
  412295:	add    BYTE PTR [rax],al
  412297:	add    BYTE PTR [rax+0x4159],dl
  41229d:	add    BYTE PTR [rax],al
  41229f:	add    BYTE PTR [rax+0x4159],dl
  4122a5:	add    BYTE PTR [rax],al
  4122a7:	add    BYTE PTR [rax+0x4159],dl
  4122ad:	add    BYTE PTR [rax],al
  4122af:	add    BYTE PTR [rax+0x4159],dl
  4122b5:	add    BYTE PTR [rax],al
  4122b7:	add    BYTE PTR [rax+0x4159],dl
  4122bd:	add    BYTE PTR [rax],al
  4122bf:	add    BYTE PTR [rax+0x4159],dl
  4122c5:	add    BYTE PTR [rax],al
  4122c7:	add    BYTE PTR [rax+0x4159],dl
  4122cd:	add    BYTE PTR [rax],al
  4122cf:	add    BYTE PTR [rax+0x4159],dl
  4122d5:	add    BYTE PTR [rax],al
  4122d7:	add    BYTE PTR [rax+0x4159],dl
  4122dd:	add    BYTE PTR [rax],al
  4122df:	add    BYTE PTR [rax+0x4159],dl
  4122e5:	add    BYTE PTR [rax],al
  4122e7:	add    BYTE PTR [rax+0x4159],dl
  4122ed:	add    BYTE PTR [rax],al
  4122ef:	add    BYTE PTR [rax+0x4159],dl
  4122f5:	add    BYTE PTR [rax],al
  4122f7:	add    BYTE PTR [rax+0x4159],dl
  4122fd:	add    BYTE PTR [rax],al
  4122ff:	add    BYTE PTR [rax+0x4159],dl
  412305:	add    BYTE PTR [rax],al
  412307:	add    BYTE PTR [rax+0x4159],dl
  41230d:	add    BYTE PTR [rax],al
  41230f:	add    BYTE PTR [rax+0x4159],dl
  412315:	add    BYTE PTR [rax],al
  412317:	add    BYTE PTR [rax+0x4159],dl
  41231d:	add    BYTE PTR [rax],al
  41231f:	add    BYTE PTR [rax+0x4159],dl
  412325:	add    BYTE PTR [rax],al
  412327:	add    BYTE PTR [rax+0x4159],dl
  41232d:	add    BYTE PTR [rax],al
  41232f:	add    BYTE PTR [rax+0x4159],dl
  412335:	add    BYTE PTR [rax],al
  412337:	add    BYTE PTR [rax+0x4159],dl
  41233d:	add    BYTE PTR [rax],al
  41233f:	add    BYTE PTR [rax+0x4159],dl
  412345:	add    BYTE PTR [rax],al
  412347:	add    BYTE PTR [rax+0x4159],dl
  41234d:	add    BYTE PTR [rax],al
  41234f:	add    BYTE PTR [rax+0x4159],dl
  412355:	add    BYTE PTR [rax],al
  412357:	add    BYTE PTR [rax+0x4159],dl
  41235d:	add    BYTE PTR [rax],al
  41235f:	add    BYTE PTR [rax+0x4159],dl
  412365:	add    BYTE PTR [rax],al
  412367:	add    BYTE PTR [rax+0x4159],dl
  41236d:	add    BYTE PTR [rax],al
  41236f:	add    BYTE PTR [rax+0x4159],dl
  412375:	add    BYTE PTR [rax],al
  412377:	add    BYTE PTR [rax+0x4159],dl
  41237d:	add    BYTE PTR [rax],al
  41237f:	add    BYTE PTR [rax+0x4159],dl
  412385:	add    BYTE PTR [rax],al
  412387:	add    BYTE PTR [rax+0x4159],dl
  41238d:	add    BYTE PTR [rax],al
  41238f:	add    BYTE PTR [rax+0x4159],dl
  412395:	add    BYTE PTR [rax],al
  412397:	add    BYTE PTR [rax+0x4159],dl
  41239d:	add    BYTE PTR [rax],al
  41239f:	add    BYTE PTR [rax+0x4159],dl
  4123a5:	add    BYTE PTR [rax],al
  4123a7:	add    BYTE PTR [rax+0x4159],dl
  4123ad:	add    BYTE PTR [rax],al
  4123af:	add    BYTE PTR [rax+0x4159],dl
  4123b5:	add    BYTE PTR [rax],al
  4123b7:	add    BYTE PTR [rax+0x4159],dl
  4123bd:	add    BYTE PTR [rax],al
  4123bf:	add    BYTE PTR [rax+0x4159],dl
  4123c5:	add    BYTE PTR [rax],al
  4123c7:	add    BYTE PTR [rax+0x4159],dl
  4123cd:	add    BYTE PTR [rax],al
  4123cf:	add    BYTE PTR [rax+0x4159],dl
  4123d5:	add    BYTE PTR [rax],al
  4123d7:	add    BYTE PTR [rax+0x4159],dl
  4123dd:	add    BYTE PTR [rax],al
  4123df:	add    BYTE PTR [rax+0x4159],dl
  4123e5:	add    BYTE PTR [rax],al
  4123e7:	add    BYTE PTR [rax+0x4159],dl
  4123ed:	add    BYTE PTR [rax],al
  4123ef:	add    BYTE PTR [rax+0x4159],dl
  4123f5:	add    BYTE PTR [rax],al
  4123f7:	add    BYTE PTR [rax+0x4159],dl
  4123fd:	add    BYTE PTR [rax],al
  4123ff:	add    BYTE PTR [rax+0x4159],dl
  412405:	add    BYTE PTR [rax],al
  412407:	add    BYTE PTR [rax+0x4159],dl
  41240d:	add    BYTE PTR [rax],al
  41240f:	add    BYTE PTR [rax+0x4159],dl
  412415:	add    BYTE PTR [rax],al
  412417:	add    BYTE PTR [rax+0x4159],dl
  41241d:	add    BYTE PTR [rax],al
  41241f:	add    BYTE PTR [rax+0x4159],dl
  412425:	add    BYTE PTR [rax],al
  412427:	add    BYTE PTR [rax+0x4159],dl
  41242d:	add    BYTE PTR [rax],al
  41242f:	add    BYTE PTR [rax+0x4159],dl
  412435:	add    BYTE PTR [rax],al
  412437:	add    BYTE PTR [rax+0x4159],dl
  41243d:	add    BYTE PTR [rax],al
  41243f:	add    BYTE PTR [rax+0x4159],dl
  412445:	add    BYTE PTR [rax],al
  412447:	add    BYTE PTR [rax+0x4159],dl
  41244d:	add    BYTE PTR [rax],al
  41244f:	add    BYTE PTR [rax+0x4159],dl
  412455:	add    BYTE PTR [rax],al
  412457:	add    BYTE PTR [rax+0x4159],dl
  41245d:	add    BYTE PTR [rax],al
  41245f:	add    BYTE PTR [rax+0x4159],dl
  412465:	add    BYTE PTR [rax],al
  412467:	add    BYTE PTR [rax+0x4159],dl
  41246d:	add    BYTE PTR [rax],al
  41246f:	add    BYTE PTR [rax+0x4159],dl
  412475:	add    BYTE PTR [rax],al
  412477:	add    BYTE PTR [rax+0x4159],dl
  41247d:	add    BYTE PTR [rax],al
  41247f:	add    BYTE PTR [rax+0x4159],dl
  412485:	add    BYTE PTR [rax],al
  412487:	add    BYTE PTR [rax+0x4159],dl
  41248d:	add    BYTE PTR [rax],al
  41248f:	add    BYTE PTR [rax+0x4159],dl
  412495:	add    BYTE PTR [rax],al
  412497:	add    BYTE PTR [rax+0x4159],dl
  41249d:	add    BYTE PTR [rax],al
  41249f:	add    BYTE PTR [rax+0x4159],dl
  4124a5:	add    BYTE PTR [rax],al
  4124a7:	add    BYTE PTR [rax+0x4159],dl
  4124ad:	add    BYTE PTR [rax],al
  4124af:	add    BYTE PTR [rax+0x4159],dl
  4124b5:	add    BYTE PTR [rax],al
  4124b7:	add    BYTE PTR [rax+0x4159],dl
  4124bd:	add    BYTE PTR [rax],al
  4124bf:	add    BYTE PTR [rax+0x4159],dl
  4124c5:	add    BYTE PTR [rax],al
  4124c7:	add    BYTE PTR [rax+0x4159],dl
  4124cd:	add    BYTE PTR [rax],al
  4124cf:	add    BYTE PTR [rax+0x4159],dl
  4124d5:	add    BYTE PTR [rax],al
  4124d7:	add    BYTE PTR [rax+0x4159],dl
  4124dd:	add    BYTE PTR [rax],al
  4124df:	add    BYTE PTR [rax+0x4159],dl
  4124e5:	add    BYTE PTR [rax],al
  4124e7:	add    BYTE PTR [rax+0x4159],dl
  4124ed:	add    BYTE PTR [rax],al
  4124ef:	add    BYTE PTR [rax+0x4159],dl
  4124f5:	add    BYTE PTR [rax],al
  4124f7:	add    BYTE PTR [rax+0x4159],dl
  4124fd:	add    BYTE PTR [rax],al
  4124ff:	add    BYTE PTR [rax+0x4159],dl
  412505:	add    BYTE PTR [rax],al
  412507:	add    BYTE PTR [rax+0x4159],dl
  41250d:	add    BYTE PTR [rax],al
  41250f:	add    BYTE PTR [rax+0x4159],dl
  412515:	add    BYTE PTR [rax],al
  412517:	add    BYTE PTR [rax+0x4159],dl
  41251d:	add    BYTE PTR [rax],al
  41251f:	add    BYTE PTR [rax+0x4159],dl
  412525:	add    BYTE PTR [rax],al
  412527:	add    BYTE PTR [rax+0x4159],dl
  41252d:	add    BYTE PTR [rax],al
  41252f:	add    BYTE PTR [rax+0x4159],dl
  412535:	add    BYTE PTR [rax],al
  412537:	add    BYTE PTR [rax+0x4159],dl
  41253d:	add    BYTE PTR [rax],al
  41253f:	add    BYTE PTR [rax+0x4159],dl
  412545:	add    BYTE PTR [rax],al
  412547:	add    BYTE PTR [rax+0x4159],dl
  41254d:	add    BYTE PTR [rax],al
  41254f:	add    BYTE PTR [rax+0x4159],dl
  412555:	add    BYTE PTR [rax],al
  412557:	add    BYTE PTR [rax+0x4159],dl
  41255d:	add    BYTE PTR [rax],al
  41255f:	add    BYTE PTR [rax+0x4159],dl
  412565:	add    BYTE PTR [rax],al
  412567:	add    BYTE PTR [rax+0x4159],dl
  41256d:	add    BYTE PTR [rax],al
  41256f:	add    BYTE PTR [rax+0x4159],dl
  412575:	add    BYTE PTR [rax],al
  412577:	add    BYTE PTR [rax+0x4159],dl
  41257d:	add    BYTE PTR [rax],al
  41257f:	add    BYTE PTR [rax+0x4159],dl
  412585:	add    BYTE PTR [rax],al
  412587:	add    BYTE PTR [rax+0x4159],dl
  41258d:	add    BYTE PTR [rax],al
  41258f:	add    BYTE PTR [rax+0x4159],dl
  412595:	add    BYTE PTR [rax],al
  412597:	add    BYTE PTR [rax+0x4159],dl
  41259d:	add    BYTE PTR [rax],al
  41259f:	add    BYTE PTR [rax+0x4159],dl
  4125a5:	add    BYTE PTR [rax],al
  4125a7:	add    BYTE PTR [rax+0x4159],dl
  4125ad:	add    BYTE PTR [rax],al
  4125af:	add    BYTE PTR [rax+0x4159],dl
  4125b5:	add    BYTE PTR [rax],al
  4125b7:	add    BYTE PTR [rax+0x4159],dl
  4125bd:	add    BYTE PTR [rax],al
  4125bf:	add    BYTE PTR [rax+0x4159],dl
  4125c5:	add    BYTE PTR [rax],al
  4125c7:	add    BYTE PTR [rax+0x4159],dl
  4125cd:	add    BYTE PTR [rax],al
  4125cf:	add    BYTE PTR [rax+0x4159],dl
  4125d5:	add    BYTE PTR [rax],al
  4125d7:	add    BYTE PTR [rax+0x4159],dl
  4125dd:	add    BYTE PTR [rax],al
  4125df:	add    BYTE PTR [rax+0x4159],dl
  4125e5:	add    BYTE PTR [rax],al
  4125e7:	add    BYTE PTR [rax+0x4159],dl
  4125ed:	add    BYTE PTR [rax],al
  4125ef:	add    BYTE PTR [rax+0x4159],dl
  4125f5:	add    BYTE PTR [rax],al
  4125f7:	add    BYTE PTR [rax+0x4159],dl
  4125fd:	add    BYTE PTR [rax],al
  4125ff:	add    BYTE PTR [rax+0x4159],dl
  412605:	add    BYTE PTR [rax],al
  412607:	add    BYTE PTR [rax+0x4159],dl
  41260d:	add    BYTE PTR [rax],al
  41260f:	add    BYTE PTR [rax+0x4159],dl
  412615:	add    BYTE PTR [rax],al
  412617:	add    BYTE PTR [rax+0x4159],dl
  41261d:	add    BYTE PTR [rax],al
  41261f:	add    BYTE PTR [rax+0x4159],dl
  412625:	add    BYTE PTR [rax],al
  412627:	add    BYTE PTR [rax+0x4159],dl
  41262d:	add    BYTE PTR [rax],al
  41262f:	add    BYTE PTR [rax+0x4159],dl
  412635:	add    BYTE PTR [rax],al
  412637:	add    BYTE PTR [rax+0x4159],dl
  41263d:	add    BYTE PTR [rax],al
  41263f:	add    BYTE PTR [rax+0x4159],dl
  412645:	add    BYTE PTR [rax],al
  412647:	add    BYTE PTR [rax+0x4159],dl
  41264d:	add    BYTE PTR [rax],al
  41264f:	add    BYTE PTR [rax+0x4159],dl
  412655:	add    BYTE PTR [rax],al
  412657:	add    BYTE PTR [rax+0x4159],dl
  41265d:	add    BYTE PTR [rax],al
  41265f:	add    BYTE PTR [rax+0x4159],dl
  412665:	add    BYTE PTR [rax],al
  412667:	add    BYTE PTR [rax+0x4159],dl
  41266d:	add    BYTE PTR [rax],al
  41266f:	add    BYTE PTR [rax+0x4159],dl
  412675:	add    BYTE PTR [rax],al
  412677:	add    BYTE PTR [rax+0x4159],dl
  41267d:	add    BYTE PTR [rax],al
  41267f:	add    BYTE PTR [rax+0x4159],dl
  412685:	add    BYTE PTR [rax],al
  412687:	add    BYTE PTR [rax+0x4159],dl
  41268d:	add    BYTE PTR [rax],al
  41268f:	add    BYTE PTR [rax+0x4159],dl
  412695:	add    BYTE PTR [rax],al
  412697:	add    BYTE PTR [rax+0x4159],dl
  41269d:	add    BYTE PTR [rax],al
  41269f:	add    BYTE PTR [rax+0x4159],dl
  4126a5:	add    BYTE PTR [rax],al
  4126a7:	add    BYTE PTR [rax+0x4159],dl
  4126ad:	add    BYTE PTR [rax],al
  4126af:	add    BYTE PTR [rax+0x4159],dl
  4126b5:	add    BYTE PTR [rax],al
  4126b7:	add    BYTE PTR [rax+0x4159],dl
  4126bd:	add    BYTE PTR [rax],al
  4126bf:	add    BYTE PTR [rax+0x4159],dl
  4126c5:	add    BYTE PTR [rax],al
  4126c7:	add    BYTE PTR [rax+0x4159],dl
  4126cd:	add    BYTE PTR [rax],al
  4126cf:	add    BYTE PTR [rax+0x4159],dl
  4126d5:	add    BYTE PTR [rax],al
  4126d7:	add    BYTE PTR [rax+0x4159],dl
  4126dd:	add    BYTE PTR [rax],al
  4126df:	add    BYTE PTR [rax+0x4159],dl
  4126e5:	add    BYTE PTR [rax],al
  4126e7:	add    BYTE PTR [rax+0x4159],dl
  4126ed:	add    BYTE PTR [rax],al
  4126ef:	add    BYTE PTR [rax+0x4159],dl
  4126f5:	add    BYTE PTR [rax],al
  4126f7:	add    BYTE PTR [rax+0x4159],dl
  4126fd:	add    BYTE PTR [rax],al
  4126ff:	add    BYTE PTR [rax+0x4159],dl
  412705:	add    BYTE PTR [rax],al
  412707:	add    BYTE PTR [rax+0x4159],dl
  41270d:	add    BYTE PTR [rax],al
  41270f:	add    BYTE PTR [rax+0x4159],dl
  412715:	add    BYTE PTR [rax],al
  412717:	add    BYTE PTR [rax+0x4159],dl
  41271d:	add    BYTE PTR [rax],al
  41271f:	add    BYTE PTR [rax+0x4159],dl
  412725:	add    BYTE PTR [rax],al
  412727:	add    BYTE PTR [rax+0x4159],dl
  41272d:	add    BYTE PTR [rax],al
  41272f:	add    BYTE PTR [rax+0x4159],dl
  412735:	add    BYTE PTR [rax],al
  412737:	add    BYTE PTR [rax+0x4159],dl
  41273d:	add    BYTE PTR [rax],al
  41273f:	add    BYTE PTR [rax+0x4159],dl
  412745:	add    BYTE PTR [rax],al
  412747:	add    BYTE PTR [rax+0x4159],dl
  41274d:	add    BYTE PTR [rax],al
  41274f:	add    BYTE PTR [rax+0x4159],dl
  412755:	add    BYTE PTR [rax],al
  412757:	add    BYTE PTR [rax+0x4159],dl
  41275d:	add    BYTE PTR [rax],al
  41275f:	add    BYTE PTR [rax+0x4159],dl
  412765:	add    BYTE PTR [rax],al
  412767:	add    BYTE PTR [rax+0x4159],dl
  41276d:	add    BYTE PTR [rax],al
  41276f:	add    BYTE PTR [rax+0x4159],dl
  412775:	add    BYTE PTR [rax],al
  412777:	add    BYTE PTR [rax+0x4159],dl
  41277d:	add    BYTE PTR [rax],al
  41277f:	add    BYTE PTR [rax+0x4159],dl
  412785:	add    BYTE PTR [rax],al
  412787:	add    BYTE PTR [rax+0x4159],dl
  41278d:	add    BYTE PTR [rax],al
  41278f:	add    BYTE PTR [rax+0x4159],dl
  412795:	add    BYTE PTR [rax],al
  412797:	add    BYTE PTR [rax+0x4159],dl
  41279d:	add    BYTE PTR [rax],al
  41279f:	add    BYTE PTR [rax+0x4159],dl
  4127a5:	add    BYTE PTR [rax],al
  4127a7:	add    BYTE PTR [rax+0x4159],dl
  4127ad:	add    BYTE PTR [rax],al
  4127af:	add    BYTE PTR [rax+0x4159],dl
  4127b5:	add    BYTE PTR [rax],al
  4127b7:	add    BYTE PTR [rax+0x4159],dl
  4127bd:	add    BYTE PTR [rax],al
  4127bf:	add    BYTE PTR [rax+0x4159],dl
  4127c5:	add    BYTE PTR [rax],al
  4127c7:	add    BYTE PTR [rax+0x4159],dl
  4127cd:	add    BYTE PTR [rax],al
  4127cf:	add    BYTE PTR [rax+0x4159],dl
  4127d5:	add    BYTE PTR [rax],al
  4127d7:	add    BYTE PTR [rax+0x4159],dl
  4127dd:	add    BYTE PTR [rax],al
  4127df:	add    BYTE PTR [rax+0x4159],dl
  4127e5:	add    BYTE PTR [rax],al
  4127e7:	add    BYTE PTR [rax+0x4159],dl
  4127ed:	add    BYTE PTR [rax],al
  4127ef:	add    BYTE PTR [rcx],al
  4127f1:	add    BYTE PTR [rax],al
  4127f3:	add    BYTE PTR [rax],al
  4127f5:	add    BYTE PTR [rax],al
  4127f7:	add    BYTE PTR [rax+0x4159],dl
  4127fd:	add    BYTE PTR [rax],al
  4127ff:	add    BYTE PTR [rax+0x4159],dl
  412805:	add    BYTE PTR [rax],al
  412807:	add    BYTE PTR [rax+0x4159],dl
  41280d:	add    BYTE PTR [rax],al
  41280f:	add    BYTE PTR [rax+0x4159],dl
  412815:	add    BYTE PTR [rax],al
  412817:	add    BYTE PTR [rax+0x4159],dl
  41281d:	add    BYTE PTR [rax],al
  41281f:	add    BYTE PTR [rax+0x4159],dl
  412825:	add    BYTE PTR [rax],al
  412827:	add    BYTE PTR [rax+0x4159],dl
  41282d:	add    BYTE PTR [rax],al
  41282f:	add    BYTE PTR [rax+0x4159],dl
  412835:	add    BYTE PTR [rax],al
  412837:	add    BYTE PTR [rax+0x4159],dl
  41283d:	add    BYTE PTR [rax],al
  41283f:	add    BYTE PTR [rax+0x4159],dl
  412845:	add    BYTE PTR [rax],al
  412847:	add    BYTE PTR [rax+0x4159],dl
  41284d:	add    BYTE PTR [rax],al
  41284f:	add    BYTE PTR [rax+0x4159],dl
  412855:	add    BYTE PTR [rax],al
  412857:	add    BYTE PTR [rax+0x4159],dl
  41285d:	add    BYTE PTR [rax],al
  41285f:	add    BYTE PTR [rax+0x4159],dl
  412865:	add    BYTE PTR [rax],al
  412867:	add    BYTE PTR [rax+0x4159],dl
  41286d:	add    BYTE PTR [rax],al
  41286f:	add    BYTE PTR [rax+0x4159],dl
  412875:	add    BYTE PTR [rax],al
  412877:	add    BYTE PTR [rax+0x4159],dl
  41287d:	add    BYTE PTR [rax],al
  41287f:	add    BYTE PTR [rax+0x4159],dl
  412885:	add    BYTE PTR [rax],al
  412887:	add    BYTE PTR [rax+0x4159],dl
  41288d:	add    BYTE PTR [rax],al
  41288f:	add    BYTE PTR [rax+0x4159],dl
  412895:	add    BYTE PTR [rax],al
  412897:	add    BYTE PTR [rax+0x4159],dl
  41289d:	add    BYTE PTR [rax],al
  41289f:	add    BYTE PTR [rax+0x4159],dl
  4128a5:	add    BYTE PTR [rax],al
  4128a7:	add    BYTE PTR [rax+0x4159],dl
  4128ad:	add    BYTE PTR [rax],al
  4128af:	add    BYTE PTR [rax+0x4159],dl
  4128b5:	add    BYTE PTR [rax],al
  4128b7:	add    BYTE PTR [rax+0x4159],dl
  4128bd:	add    BYTE PTR [rax],al
  4128bf:	add    BYTE PTR [rax+0x4159],dl
  4128c5:	add    BYTE PTR [rax],al
  4128c7:	add    BYTE PTR [rax+0x4159],dl
  4128cd:	add    BYTE PTR [rax],al
  4128cf:	add    BYTE PTR [rax+0x4159],dl
  4128d5:	add    BYTE PTR [rax],al
  4128d7:	add    BYTE PTR [rax+0x4159],dl
  4128dd:	add    BYTE PTR [rax],al
  4128df:	add    BYTE PTR [rax+0x4159],dl
  4128e5:	add    BYTE PTR [rax],al
  4128e7:	add    BYTE PTR [rax+0x4159],dl
  4128ed:	add    BYTE PTR [rax],al
  4128ef:	add    BYTE PTR [rax+0x4159],dl
  4128f5:	add    BYTE PTR [rax],al
  4128f7:	add    BYTE PTR [rax+0x4159],dl
  4128fd:	add    BYTE PTR [rax],al
  4128ff:	add    BYTE PTR [rax+0x4159],dl
  412905:	add    BYTE PTR [rax],al
  412907:	add    BYTE PTR [rax+0x4159],dl
  41290d:	add    BYTE PTR [rax],al
  41290f:	add    BYTE PTR [rax+0x4159],dl
  412915:	add    BYTE PTR [rax],al
  412917:	add    BYTE PTR [rax+0x4159],dl
  41291d:	add    BYTE PTR [rax],al
  41291f:	add    BYTE PTR [rax+0x4159],dl
  412925:	add    BYTE PTR [rax],al
  412927:	add    BYTE PTR [rax+0x4159],dl
  41292d:	add    BYTE PTR [rax],al
  41292f:	add    BYTE PTR [rax+0x4159],dl
  412935:	add    BYTE PTR [rax],al
  412937:	add    BYTE PTR [rax+0x4159],dl
  41293d:	add    BYTE PTR [rax],al
  41293f:	add    BYTE PTR [rax+0x4159],dl
  412945:	add    BYTE PTR [rax],al
  412947:	add    BYTE PTR [rax+0x4159],dl
  41294d:	add    BYTE PTR [rax],al
  41294f:	add    BYTE PTR [rax+0x4159],dl
  412955:	add    BYTE PTR [rax],al
  412957:	add    BYTE PTR [rax+0x4159],dl
  41295d:	add    BYTE PTR [rax],al
  41295f:	add    BYTE PTR [rax+0x4159],dl
  412965:	add    BYTE PTR [rax],al
  412967:	add    BYTE PTR [rax+0x4159],dl
  41296d:	add    BYTE PTR [rax],al
  41296f:	add    BYTE PTR [rax+0x4159],dl
  412975:	add    BYTE PTR [rax],al
  412977:	add    BYTE PTR [rax+0x4159],dl
  41297d:	add    BYTE PTR [rax],al
  41297f:	add    BYTE PTR [rax+0x4159],dl
  412985:	add    BYTE PTR [rax],al
  412987:	add    BYTE PTR [rax+0x4159],dl
  41298d:	add    BYTE PTR [rax],al
  41298f:	add    BYTE PTR [rax+0x4159],dl
  412995:	add    BYTE PTR [rax],al
  412997:	add    BYTE PTR [rax+0x4159],dl
  41299d:	add    BYTE PTR [rax],al
  41299f:	add    BYTE PTR [rax+0x4159],dl
  4129a5:	add    BYTE PTR [rax],al
  4129a7:	add    BYTE PTR [rax+0x4159],dl
  4129ad:	add    BYTE PTR [rax],al
  4129af:	add    BYTE PTR [rax+0x4159],dl
  4129b5:	add    BYTE PTR [rax],al
  4129b7:	add    BYTE PTR [rax+0x4159],dl
  4129bd:	add    BYTE PTR [rax],al
  4129bf:	add    BYTE PTR [rax+0x4159],dl
  4129c5:	add    BYTE PTR [rax],al
  4129c7:	add    BYTE PTR [rcx],al
  4129c9:	add    BYTE PTR [rax],al
  4129cb:	add    BYTE PTR [rax],al
  4129cd:	add    BYTE PTR [rax],al
  4129cf:	add    BYTE PTR [rax+0x4159],dl
  4129d5:	add    BYTE PTR [rax],al
  4129d7:	add    BYTE PTR [rax+0x4159],dl
  4129dd:	add    BYTE PTR [rax],al
  4129df:	add    BYTE PTR [rax+0x4159],dl
  4129e5:	add    BYTE PTR [rax],al
  4129e7:	add    BYTE PTR [rax+0x4159],dl
  4129ed:	add    BYTE PTR [rax],al
  4129ef:	add    BYTE PTR [rax+0x4159],dl
  4129f5:	add    BYTE PTR [rax],al
  4129f7:	add    BYTE PTR [rax+0x4159],dl
  4129fd:	add    BYTE PTR [rax],al
  4129ff:	add    BYTE PTR [rax+0x4159],dl
  412a05:	add    BYTE PTR [rax],al
  412a07:	add    BYTE PTR [rax+0x4159],dl
  412a0d:	add    BYTE PTR [rax],al
  412a0f:	add    BYTE PTR [rax+0x4159],dl
  412a15:	add    BYTE PTR [rax],al
  412a17:	add    BYTE PTR [rcx],al
	...
  412a21:	adc    BYTE PTR [rax+0x0],al
  412a24:	add    BYTE PTR [rax],al
  412a26:	add    BYTE PTR [rax],al
  412a28:	nop
  412a29:	pop    rcx
  412a2a:	add    BYTE PTR [r8],al
  412a2d:	add    BYTE PTR [rax],al
  412a2f:	add    BYTE PTR [rax],bh
  412a31:	adc    BYTE PTR [rax+0x0],al
  412a34:	add    BYTE PTR [rax],al
  412a36:	add    BYTE PTR [rax],al
  412a38:	nop
  412a39:	pop    rcx
  412a3a:	add    BYTE PTR [r8],al
  412a3d:	add    BYTE PTR [rax],al
  412a3f:	add    BYTE PTR [rax+0x4159],dl
  412a45:	add    BYTE PTR [rax],al
  412a47:	add    BYTE PTR [rax+0x10],bl
  412a4a:	add    BYTE PTR [rax],al
  412a4d:	add    BYTE PTR [rax],al
  412a4f:	add    BYTE PTR [rax+0x10],bh
  412a52:	add    BYTE PTR [rax],al
  412a55:	add    BYTE PTR [rax],al
  412a57:	add    BYTE PTR [rax+0x4010],bl
  412a5d:	add    BYTE PTR [rax],al
  412a5f:	add    BYTE PTR [rax+0x4010],bh
  412a65:	add    BYTE PTR [rax],al
  412a67:	add    al,bl
  412a69:	adc    BYTE PTR [rax+0x0],al
  412a6c:	add    BYTE PTR [rax],al
  412a6e:	add    BYTE PTR [rax],al
  412a70:	clc    
  412a71:	adc    BYTE PTR [rax+0x0],al
  412a74:	add    BYTE PTR [rax],al
  412a76:	add    BYTE PTR [rax],al
  412a78:	nop
  412a79:	pop    rcx
  412a7a:	add    BYTE PTR [r8],al
  412a7d:	add    BYTE PTR [rax],al
  412a7f:	add    BYTE PTR [rax+0x4159],dl
  412a85:	add    BYTE PTR [rax],al
  412a87:	add    BYTE PTR [rax],ah
  412a89:	adc    DWORD PTR [rax+0x0],eax
  412a8c:	add    BYTE PTR [rax],al
  412a8e:	add    BYTE PTR [rax],al
  412a90:	nop
  412a91:	pop    rcx
  412a92:	add    BYTE PTR [r8],al
  412a95:	add    BYTE PTR [rax],al
  412a97:	add    BYTE PTR [rax+0x4159],dl
  412a9d:	add    BYTE PTR [rax],al
  412a9f:	add    BYTE PTR [rax+0x4159],dl
  412aa5:	add    BYTE PTR [rax],al
  412aa7:	add    BYTE PTR [rax+0x4159],dl
  412aad:	add    BYTE PTR [rax],al
  412aaf:	add    BYTE PTR [rax+0x4159],dl
  412ab5:	add    BYTE PTR [rax],al
  412ab7:	add    BYTE PTR [rax+0x4159],dl
  412abd:	add    BYTE PTR [rax],al
  412abf:	add    BYTE PTR [rax+0x4159],dl
  412ac5:	add    BYTE PTR [rax],al
  412ac7:	add    BYTE PTR [rax+0x11],cl
  412aca:	add    BYTE PTR [rax],al
  412acd:	add    BYTE PTR [rax],al
  412acf:	add    BYTE PTR [rax+0x4159],dl
  412ad5:	add    BYTE PTR [rax],al
  412ad7:	add    BYTE PTR [rax+0x4159],dl
  412add:	add    BYTE PTR [rax],al
  412adf:	add    BYTE PTR [rax+0x11],ah
  412ae2:	add    BYTE PTR [rax],al
  412ae5:	add    BYTE PTR [rax],al
  412ae7:	add    BYTE PTR [rax+0x4159],dl
  412aed:	add    BYTE PTR [rax],al
  412aef:	add    BYTE PTR [rax+0x4159],dl
  412af5:	add    BYTE PTR [rax],al
  412af7:	add    BYTE PTR [rax+0x4159],dl
  412afd:	add    BYTE PTR [rax],al
  412aff:	add    BYTE PTR [rax+0x4011],al
  412b05:	add    BYTE PTR [rax],al
  412b07:	add    BYTE PTR [rax+0x4159],dl
  412b0d:	add    BYTE PTR [rax],al
  412b0f:	add    BYTE PTR [rax+0x4159],dl
  412b15:	add    BYTE PTR [rax],al
  412b17:	add    BYTE PTR [rax+0x4159],dl
  412b1d:	add    BYTE PTR [rax],al
  412b1f:	add    BYTE PTR [rax+0x4159],dl
  412b25:	add    BYTE PTR [rax],al
  412b27:	add    BYTE PTR [rax+0x4159],dl
  412b2d:	add    BYTE PTR [rax],al
  412b2f:	add    BYTE PTR [rax+0x4159],dl
  412b35:	add    BYTE PTR [rax],al
  412b37:	add    BYTE PTR [rax+0x4159],dl
  412b3d:	add    BYTE PTR [rax],al
  412b3f:	add    BYTE PTR [rax+0x4159],dl
  412b45:	add    BYTE PTR [rax],al
  412b47:	add    BYTE PTR [rax+0x4159],dl
  412b4d:	add    BYTE PTR [rax],al
  412b4f:	add    BYTE PTR [rax+0x4011],bl
  412b55:	add    BYTE PTR [rax],al
  412b57:	add    BYTE PTR [rax+0x4011],bh
  412b5d:	add    BYTE PTR [rax],al
  412b5f:	add    BYTE PTR [rax+0x4159],dl
  412b65:	add    BYTE PTR [rax],al
  412b67:	add    al,bl
  412b69:	adc    DWORD PTR [rax+0x0],eax
  412b6c:	add    BYTE PTR [rax],al
  412b6e:	add    BYTE PTR [rax],al
  412b70:	cwde   
  412b71:	adc    eax,DWORD PTR [rax+0x0]
  412b74:	add    BYTE PTR [rax],al
  412b76:	add    BYTE PTR [rax],al
  412b78:	rcl    BYTE PTR [rbx],0x40
  412b7b:	add    BYTE PTR [rax],al
  412b7d:	add    BYTE PTR [rax],al
  412b7f:	add    BYTE PTR [rax+0x14],dh
  412b82:	add    BYTE PTR [rax],al
  412b85:	add    BYTE PTR [rax],al
  412b87:	add    BYTE PTR [rax+0x4014],bl
  412b8d:	add    BYTE PTR [rax],al
  412b8f:	add    BYTE PTR [rax+0x4159],dl
  412b95:	add    BYTE PTR [rax],al
  412b97:	add    BYTE PTR [rax+0x4159],dl
  412b9d:	add    BYTE PTR [rax],al
  412b9f:	add    BYTE PTR [rax+0x4159],dl
  412ba5:	add    BYTE PTR [rax],al
  412ba7:	add    BYTE PTR [rax],bh
  412ba9:	and    DWORD PTR [rax+0x0],eax
  412bac:	add    BYTE PTR [rax],al
  412bae:	add    BYTE PTR [rax],al
  412bb0:	push   rax
  412bb1:	and    al,BYTE PTR [rax+0x0]
  412bb4:	add    BYTE PTR [rax],al
  412bb6:	add    BYTE PTR [rax],al
  412bb8:	nop
  412bb9:	pop    rcx
  412bba:	add    BYTE PTR [r8],al
  412bbd:	add    BYTE PTR [rax],al
  412bbf:	add    BYTE PTR [rax+0x4159],dl
  412bc5:	add    BYTE PTR [rax],al
  412bc7:	add    BYTE PTR [rax+0x4159],dl
  412bcd:	add    BYTE PTR [rax],al
  412bcf:	add    BYTE PTR [rax+0x23],dh
  412bd2:	add    BYTE PTR [rax],al
  412bd5:	add    BYTE PTR [rax],al
  412bd7:	add    BYTE PTR [rax+0x4159],dl
  412bdd:	add    BYTE PTR [rax],al
  412bdf:	add    BYTE PTR [rax+0x4159],dl
  412be5:	add    BYTE PTR [rax],al
  412be7:	add    BYTE PTR [rax+0x4159],dl
  412bed:	add    BYTE PTR [rax],al
  412bef:	add    BYTE PTR [rax+0x4159],dl
  412bf5:	add    BYTE PTR [rax],al
  412bf7:	add    BYTE PTR [rax+0x4159],dl
  412bfd:	add    BYTE PTR [rax],al
  412bff:	add    BYTE PTR [rax+0x4023],dh
  412c05:	add    BYTE PTR [rax],al
  412c07:	add    al,dl
  412c09:	and    eax,DWORD PTR [rax+0x0]
  412c0c:	add    BYTE PTR [rax],al
  412c0e:	add    BYTE PTR [rax],al
  412c10:	add    BYTE PTR [rax+rax*2],ah
  412c13:	add    BYTE PTR [rax],al
  412c15:	add    BYTE PTR [rax],al
  412c17:	add    BYTE PTR [rax+0x4159],dl
  412c1d:	add    BYTE PTR [rax],al
  412c1f:	add    BYTE PTR [rax+0x4024],cl
  412c25:	add    BYTE PTR [rax],al
  412c27:	add    BYTE PTR [rax],cl
  412c29:	and    eax,0x40
  412c2e:	add    BYTE PTR [rax],al
  412c30:	sub    BYTE PTR [rax],ch
  412c32:	add    BYTE PTR [rax],al
  412c35:	add    BYTE PTR [rax],al
  412c37:	add    BYTE PTR [rax+0x4159],dl
  412c3d:	add    BYTE PTR [rax],al
  412c3f:	add    BYTE PTR [rax+0x4159],dl
  412c45:	add    BYTE PTR [rax],al
  412c47:	add    BYTE PTR [rax+0x4159],dl
  412c4d:	add    BYTE PTR [rax],al
  412c4f:	add    BYTE PTR [rax+0x4159],dl
  412c55:	add    BYTE PTR [rax],al
  412c57:	add    BYTE PTR [rax+0x4159],dl
  412c5d:	add    BYTE PTR [rax],al
  412c5f:	add    BYTE PTR [rax+0x4159],dl
  412c65:	add    BYTE PTR [rax],al
  412c67:	add    BYTE PTR [rax+0x4159],dl
  412c6d:	add    BYTE PTR [rax],al
  412c6f:	add    BYTE PTR [rax+0x4159],dl
  412c75:	add    BYTE PTR [rax],al
  412c77:	add    BYTE PTR [rax+0x4159],dl
  412c7d:	add    BYTE PTR [rax],al
  412c7f:	add    BYTE PTR [rax+0x4159],dl
  412c85:	add    BYTE PTR [rax],al
  412c87:	add    BYTE PTR [rax+0x4159],dl
  412c8d:	add    BYTE PTR [rax],al
  412c8f:	add    BYTE PTR [rax+0x4159],dl
  412c95:	add    BYTE PTR [rax],al
  412c97:	add    BYTE PTR [rax+0x4159],dl
  412c9d:	add    BYTE PTR [rax],al
  412c9f:	add    BYTE PTR [rax+0x4159],dl
  412ca5:	add    BYTE PTR [rax],al
  412ca7:	add    BYTE PTR [rax+0x4159],dl
  412cad:	add    BYTE PTR [rax],al
  412caf:	add    BYTE PTR [rax+0x4159],dl
  412cb5:	add    BYTE PTR [rax],al
  412cb7:	add    BYTE PTR [rax+0x4159],dl
  412cbd:	add    BYTE PTR [rax],al
  412cbf:	add    BYTE PTR [rax+0x4159],dl
  412cc5:	add    BYTE PTR [rax],al
  412cc7:	add    BYTE PTR [rax+0x4159],dl
  412ccd:	add    BYTE PTR [rax],al
  412ccf:	add    BYTE PTR [rax+0x4159],dl
  412cd5:	add    BYTE PTR [rax],al
  412cd7:	add    BYTE PTR [rax+0x4159],dl
  412cdd:	add    BYTE PTR [rax],al
  412cdf:	add    BYTE PTR [rax+0x4159],dl
  412ce5:	add    BYTE PTR [rax],al
  412ce7:	add    BYTE PTR [rax+0x4159],dl
  412ced:	add    BYTE PTR [rax],al
  412cef:	add    BYTE PTR [rax+0x4159],dl
  412cf5:	add    BYTE PTR [rax],al
  412cf7:	add    BYTE PTR [rax+0x4159],dl
  412cfd:	add    BYTE PTR [rax],al
  412cff:	add    BYTE PTR [rax+0x4159],dl
  412d05:	add    BYTE PTR [rax],al
  412d07:	add    BYTE PTR [rax+0x4159],dl
  412d0d:	add    BYTE PTR [rax],al
  412d0f:	add    BYTE PTR [rax+0x4159],dl
  412d15:	add    BYTE PTR [rax],al
  412d17:	add    BYTE PTR [rax+0x4159],dl
  412d1d:	add    BYTE PTR [rax],al
  412d1f:	add    BYTE PTR [rax+0x4159],dl
  412d25:	add    BYTE PTR [rax],al
  412d27:	add    BYTE PTR [rax+0x4159],dl
  412d2d:	add    BYTE PTR [rax],al
  412d2f:	add    BYTE PTR [rax+0x4159],dl
  412d35:	add    BYTE PTR [rax],al
  412d37:	add    BYTE PTR [rax+0x4159],dl
  412d3d:	add    BYTE PTR [rax],al
  412d3f:	add    BYTE PTR [rax+0x4159],dl
  412d45:	add    BYTE PTR [rax],al
  412d47:	add    BYTE PTR [rax+0x4159],dl
  412d4d:	add    BYTE PTR [rax],al
  412d4f:	add    BYTE PTR [rax+0x4159],dl
  412d55:	add    BYTE PTR [rax],al
  412d57:	add    BYTE PTR [rax+0x4159],dl
  412d5d:	add    BYTE PTR [rax],al
  412d5f:	add    BYTE PTR [rax+0x4159],dl
  412d65:	add    BYTE PTR [rax],al
  412d67:	add    BYTE PTR [rax+0x4159],dl
  412d6d:	add    BYTE PTR [rax],al
  412d6f:	add    BYTE PTR [rax+0x4159],dl
  412d75:	add    BYTE PTR [rax],al
  412d77:	add    BYTE PTR [rax+0x4159],dl
  412d7d:	add    BYTE PTR [rax],al
  412d7f:	add    BYTE PTR [rax+0x4159],dl
  412d85:	add    BYTE PTR [rax],al
  412d87:	add    BYTE PTR [rax+0x4159],dl
  412d8d:	add    BYTE PTR [rax],al
  412d8f:	add    BYTE PTR [rax+0x4159],dl
  412d95:	add    BYTE PTR [rax],al
  412d97:	add    BYTE PTR [rax+0x4159],dl
  412d9d:	add    BYTE PTR [rax],al
  412d9f:	add    BYTE PTR [rax+0x4159],dl
  412da5:	add    BYTE PTR [rax],al
  412da7:	add    BYTE PTR [rax+0x4159],dl
  412dad:	add    BYTE PTR [rax],al
  412daf:	add    BYTE PTR [rax+0x4159],dl
  412db5:	add    BYTE PTR [rax],al
  412db7:	add    BYTE PTR [rax+0x4159],dl
  412dbd:	add    BYTE PTR [rax],al
  412dbf:	add    BYTE PTR [rax+0x4159],dl
  412dc5:	add    BYTE PTR [rax],al
  412dc7:	add    BYTE PTR [rax+0x4159],dl
  412dcd:	add    BYTE PTR [rax],al
  412dcf:	add    BYTE PTR [rax+0x4159],dl
  412dd5:	add    BYTE PTR [rax],al
  412dd7:	add    BYTE PTR [rax+0x4159],dl
  412ddd:	add    BYTE PTR [rax],al
  412ddf:	add    BYTE PTR [rax+0x4159],dl
  412de5:	add    BYTE PTR [rax],al
  412de7:	add    BYTE PTR [rax+0x4159],dl
  412ded:	add    BYTE PTR [rax],al
  412def:	add    BYTE PTR [rax+0x4159],dl
  412df5:	add    BYTE PTR [rax],al
  412df7:	add    BYTE PTR [rax+0x4159],dl
  412dfd:	add    BYTE PTR [rax],al
  412dff:	add    BYTE PTR [rax+0x4159],dl
  412e05:	add    BYTE PTR [rax],al
  412e07:	add    BYTE PTR [rax+0x4159],dl
  412e0d:	add    BYTE PTR [rax],al
  412e0f:	add    BYTE PTR [rax+0x28],ch
  412e12:	add    BYTE PTR [rax],al
  412e15:	add    BYTE PTR [rax],al
  412e17:	add    BYTE PTR [rax+0x4159],dl
  412e1d:	add    BYTE PTR [rax],al
  412e1f:	add    BYTE PTR [rax+0x4159],dl
  412e25:	add    BYTE PTR [rax],al
  412e27:	add    BYTE PTR [rax+0x4159],dl
  412e2d:	add    BYTE PTR [rax],al
  412e2f:	add    BYTE PTR [rax+0x4159],dl
  412e35:	add    BYTE PTR [rax],al
  412e37:	add    BYTE PTR [rax+0x4159],dl
  412e3d:	add    BYTE PTR [rax],al
  412e3f:	add    BYTE PTR [rax+0x4159],dl
  412e45:	add    BYTE PTR [rax],al
  412e47:	add    BYTE PTR [rax+0x4159],dl
  412e4d:	add    BYTE PTR [rax],al
  412e4f:	add    BYTE PTR [rax+0x4159],dl
  412e55:	add    BYTE PTR [rax],al
  412e57:	add    BYTE PTR [rax+0x4159],dl
  412e5d:	add    BYTE PTR [rax],al
  412e5f:	add    BYTE PTR [rax+0x4159],dl
  412e65:	add    BYTE PTR [rax],al
  412e67:	add    BYTE PTR [rax+0x4159],dl
  412e6d:	add    BYTE PTR [rax],al
  412e6f:	add    BYTE PTR [rax+0x4159],dl
  412e75:	add    BYTE PTR [rax],al
  412e77:	add    BYTE PTR [rax+0x4159],dl
  412e7d:	add    BYTE PTR [rax],al
  412e7f:	add    BYTE PTR [rax+0x4159],dl
  412e85:	add    BYTE PTR [rax],al
  412e87:	add    BYTE PTR [rax+0x4159],dl
  412e8d:	add    BYTE PTR [rax],al
  412e8f:	add    BYTE PTR [rax+0x4159],dl
  412e95:	add    BYTE PTR [rax],al
  412e97:	add    BYTE PTR [rax+0x4159],dl
  412e9d:	add    BYTE PTR [rax],al
  412e9f:	add    BYTE PTR [rax+0x4159],dl
  412ea5:	add    BYTE PTR [rax],al
  412ea7:	add    BYTE PTR [rax+0x4159],dl
  412ead:	add    BYTE PTR [rax],al
  412eaf:	add    BYTE PTR [rax+0x4159],dl
  412eb5:	add    BYTE PTR [rax],al
  412eb7:	add    BYTE PTR [rax+0x4159],dl
  412ebd:	add    BYTE PTR [rax],al
  412ebf:	add    BYTE PTR [rax+0x4159],dl
  412ec5:	add    BYTE PTR [rax],al
  412ec7:	add    BYTE PTR [rax+0x4159],dl
  412ecd:	add    BYTE PTR [rax],al
  412ecf:	add    BYTE PTR [rax+0x4159],dl
  412ed5:	add    BYTE PTR [rax],al
  412ed7:	add    BYTE PTR [rax+0x4159],dl
  412edd:	add    BYTE PTR [rax],al
  412edf:	add    BYTE PTR [rax+0x4159],dl
  412ee5:	add    BYTE PTR [rax],al
  412ee7:	add    BYTE PTR [rax+0x4159],dl
  412eed:	add    BYTE PTR [rax],al
  412eef:	add    BYTE PTR [rax+0x4159],dl
  412ef5:	add    BYTE PTR [rax],al
  412ef7:	add    BYTE PTR [rax+0x4159],dl
  412efd:	add    BYTE PTR [rax],al
  412eff:	add    BYTE PTR [rax+0x4159],dl
  412f05:	add    BYTE PTR [rax],al
  412f07:	add    BYTE PTR [rax+0x4159],dl
  412f0d:	add    BYTE PTR [rax],al
  412f0f:	add    BYTE PTR [rax+0x4159],dl
  412f15:	add    BYTE PTR [rax],al
  412f17:	add    BYTE PTR [rax+0x4159],dl
  412f1d:	add    BYTE PTR [rax],al
  412f1f:	add    BYTE PTR [rax+0x4159],dl
  412f25:	add    BYTE PTR [rax],al
  412f27:	add    BYTE PTR [rax+0x4159],dl
  412f2d:	add    BYTE PTR [rax],al
  412f2f:	add    BYTE PTR [rax+0x4159],dl
  412f35:	add    BYTE PTR [rax],al
  412f37:	add    BYTE PTR [rax+0x4159],dl
  412f3d:	add    BYTE PTR [rax],al
  412f3f:	add    BYTE PTR [rax+0x4159],dl
  412f45:	add    BYTE PTR [rax],al
  412f47:	add    BYTE PTR [rax+0x4159],dl
  412f4d:	add    BYTE PTR [rax],al
  412f4f:	add    BYTE PTR [rax+0x4159],dl
  412f55:	add    BYTE PTR [rax],al
  412f57:	add    BYTE PTR [rax+0x4159],dl
  412f5d:	add    BYTE PTR [rax],al
  412f5f:	add    BYTE PTR [rax+0x4159],dl
  412f65:	add    BYTE PTR [rax],al
  412f67:	add    BYTE PTR [rax+0x4159],dl
  412f6d:	add    BYTE PTR [rax],al
  412f6f:	add    BYTE PTR [rax+0x4159],dl
  412f75:	add    BYTE PTR [rax],al
  412f77:	add    BYTE PTR [rax+0x4159],dl
  412f7d:	add    BYTE PTR [rax],al
  412f7f:	add    BYTE PTR [rax+0x4159],dl
  412f85:	add    BYTE PTR [rax],al
  412f87:	add    BYTE PTR [rax+0x4159],dl
  412f8d:	add    BYTE PTR [rax],al
  412f8f:	add    BYTE PTR [rax+0x4159],dl
  412f95:	add    BYTE PTR [rax],al
  412f97:	add    BYTE PTR [rax+0x4159],dl
  412f9d:	add    BYTE PTR [rax],al
  412f9f:	add    BYTE PTR [rax+0x4159],dl
  412fa5:	add    BYTE PTR [rax],al
  412fa7:	add    BYTE PTR [rax+0x4159],dl
  412fad:	add    BYTE PTR [rax],al
  412faf:	add    BYTE PTR [rax+0x4159],dl
  412fb5:	add    BYTE PTR [rax],al
  412fb7:	add    BYTE PTR [rax+0x4159],dl
  412fbd:	add    BYTE PTR [rax],al
  412fbf:	add    BYTE PTR [rax+0x4159],dl
  412fc5:	add    BYTE PTR [rax],al
  412fc7:	add    BYTE PTR [rax+0x4159],dl
  412fcd:	add    BYTE PTR [rax],al
  412fcf:	add    BYTE PTR [rax+0x4159],dl
  412fd5:	add    BYTE PTR [rax],al
  412fd7:	add    BYTE PTR [rax+0x4159],dl
  412fdd:	add    BYTE PTR [rax],al
  412fdf:	add    BYTE PTR [rax+0x4159],dl
  412fe5:	add    BYTE PTR [rax],al
  412fe7:	add    BYTE PTR [rax+0x4159],dl
  412fed:	add    BYTE PTR [rax],al
  412fef:	add    BYTE PTR [rax+0x4159],dl
  412ff5:	add    BYTE PTR [rax],al
  412ff7:	add    BYTE PTR [rax+0x4159],dl
  412ffd:	add    BYTE PTR [rax],al
  412fff:	add    BYTE PTR [rax+0x4159],dl
  413005:	add    BYTE PTR [rax],al
  413007:	add    BYTE PTR [rax+0x4159],dl
  41300d:	add    BYTE PTR [rax],al
  41300f:	add    BYTE PTR [rax+0x4159],dl
  413015:	add    BYTE PTR [rax],al
  413017:	add    BYTE PTR [rax+0x4159],dl
  41301d:	add    BYTE PTR [rax],al
  41301f:	add    BYTE PTR [rax+0x4159],dl
  413025:	add    BYTE PTR [rax],al
  413027:	add    BYTE PTR [rax+0x4159],dl
  41302d:	add    BYTE PTR [rax],al
  41302f:	add    BYTE PTR [rax+0x4159],dl
  413035:	add    BYTE PTR [rax],al
  413037:	add    BYTE PTR [rax+0x4159],dl
  41303d:	add    BYTE PTR [rax],al
  41303f:	add    BYTE PTR [rax+0x4159],dl
  413045:	add    BYTE PTR [rax],al
  413047:	add    BYTE PTR [rax+0x4159],dl
  41304d:	add    BYTE PTR [rax],al
  41304f:	add    BYTE PTR [rax+0x4159],dl
  413055:	add    BYTE PTR [rax],al
  413057:	add    BYTE PTR [rax+0x4159],dl
  41305d:	add    BYTE PTR [rax],al
  41305f:	add    BYTE PTR [rax+0x4159],dl
  413065:	add    BYTE PTR [rax],al
  413067:	add    BYTE PTR [rax+0x4159],dl
  41306d:	add    BYTE PTR [rax],al
  41306f:	add    BYTE PTR [rax+0x4159],dl
  413075:	add    BYTE PTR [rax],al
  413077:	add    BYTE PTR [rax+0x4159],dl
  41307d:	add    BYTE PTR [rax],al
  41307f:	add    BYTE PTR [rax+0x4159],dl
  413085:	add    BYTE PTR [rax],al
  413087:	add    BYTE PTR [rax+0x4159],dl
  41308d:	add    BYTE PTR [rax],al
  41308f:	add    BYTE PTR [rax+0x4159],dl
  413095:	add    BYTE PTR [rax],al
  413097:	add    BYTE PTR [rax+0x4159],dl
  41309d:	add    BYTE PTR [rax],al
  41309f:	add    BYTE PTR [rax+0x4159],dl
  4130a5:	add    BYTE PTR [rax],al
  4130a7:	add    BYTE PTR [rax+0x4159],dl
  4130ad:	add    BYTE PTR [rax],al
  4130af:	add    BYTE PTR [rax+0x4159],dl
  4130b5:	add    BYTE PTR [rax],al
  4130b7:	add    BYTE PTR [rax+0x4159],dl
  4130bd:	add    BYTE PTR [rax],al
  4130bf:	add    BYTE PTR [rax+0x4159],dl
  4130c5:	add    BYTE PTR [rax],al
  4130c7:	add    BYTE PTR [rax+0x4159],dl
  4130cd:	add    BYTE PTR [rax],al
  4130cf:	add    BYTE PTR [rax+0x4159],dl
  4130d5:	add    BYTE PTR [rax],al
  4130d7:	add    BYTE PTR [rax+0x4159],dl
  4130dd:	add    BYTE PTR [rax],al
  4130df:	add    BYTE PTR [rax+0x4159],dl
  4130e5:	add    BYTE PTR [rax],al
  4130e7:	add    BYTE PTR [rax+0x4159],dl
  4130ed:	add    BYTE PTR [rax],al
  4130ef:	add    BYTE PTR [rax+0x4159],dl
  4130f5:	add    BYTE PTR [rax],al
  4130f7:	add    BYTE PTR [rax+0x4159],dl
  4130fd:	add    BYTE PTR [rax],al
  4130ff:	add    BYTE PTR [rax+0x4159],dl
  413105:	add    BYTE PTR [rax],al
  413107:	add    BYTE PTR [rax+0x4159],dl
  41310d:	add    BYTE PTR [rax],al
  41310f:	add    BYTE PTR [rax+0x4159],dl
  413115:	add    BYTE PTR [rax],al
  413117:	add    BYTE PTR [rax+0x4159],dl
  41311d:	add    BYTE PTR [rax],al
  41311f:	add    BYTE PTR [rax+0x4159],dl
  413125:	add    BYTE PTR [rax],al
  413127:	add    BYTE PTR [rax+0x4159],dl
  41312d:	add    BYTE PTR [rax],al
  41312f:	add    BYTE PTR [rax+0x4159],dl
  413135:	add    BYTE PTR [rax],al
  413137:	add    BYTE PTR [rax+0x4159],dl
  41313d:	add    BYTE PTR [rax],al
  41313f:	add    BYTE PTR [rax+0x4159],dl
  413145:	add    BYTE PTR [rax],al
  413147:	add    BYTE PTR [rax+0x4159],dl
  41314d:	add    BYTE PTR [rax],al
  41314f:	add    BYTE PTR [rax+0x4159],dl
  413155:	add    BYTE PTR [rax],al
  413157:	add    BYTE PTR [rax+0x4159],dl
  41315d:	add    BYTE PTR [rax],al
  41315f:	add    BYTE PTR [rax+0x4159],dl
  413165:	add    BYTE PTR [rax],al
  413167:	add    BYTE PTR [rax+0x4159],dl
  41316d:	add    BYTE PTR [rax],al
  41316f:	add    BYTE PTR [rax+0x4159],dl
  413175:	add    BYTE PTR [rax],al
  413177:	add    BYTE PTR [rax+0x4159],dl
  41317d:	add    BYTE PTR [rax],al
  41317f:	add    BYTE PTR [rax+0x4159],dl
  413185:	add    BYTE PTR [rax],al
  413187:	add    BYTE PTR [rax+0x4159],dl
  41318d:	add    BYTE PTR [rax],al
  41318f:	add    BYTE PTR [rax+0x4159],dl
  413195:	add    BYTE PTR [rax],al
  413197:	add    BYTE PTR [rax+0x4159],dl
  41319d:	add    BYTE PTR [rax],al
  41319f:	add    BYTE PTR [rax+0x4159],dl
  4131a5:	add    BYTE PTR [rax],al
  4131a7:	add    BYTE PTR [rax+0x4159],dl
  4131ad:	add    BYTE PTR [rax],al
  4131af:	add    BYTE PTR [rcx],al
  4131b1:	add    BYTE PTR [rax],al
  4131b3:	add    BYTE PTR [rax],al
  4131b5:	add    BYTE PTR [rax],al
  4131b7:	add    BYTE PTR [rax+0x4159],dl
  4131bd:	add    BYTE PTR [rax],al
  4131bf:	add    BYTE PTR [rax+0x4159],dl
  4131c5:	add    BYTE PTR [rax],al
  4131c7:	add    BYTE PTR [rax+0x4159],dl
  4131cd:	add    BYTE PTR [rax],al
  4131cf:	add    BYTE PTR [rax+0x4159],dl
  4131d5:	add    BYTE PTR [rax],al
  4131d7:	add    BYTE PTR [rax+0x4159],dl
  4131dd:	add    BYTE PTR [rax],al
  4131df:	add    BYTE PTR [rax+0x4159],dl
  4131e5:	add    BYTE PTR [rax],al
  4131e7:	add    BYTE PTR [rax+0x4159],dl
  4131ed:	add    BYTE PTR [rax],al
  4131ef:	add    BYTE PTR [rax+0x4159],dl
  4131f5:	add    BYTE PTR [rax],al
  4131f7:	add    BYTE PTR [rax+0x4159],dl
  4131fd:	add    BYTE PTR [rax],al
  4131ff:	add    BYTE PTR [rax+0x4159],dl
  413205:	add    BYTE PTR [rax],al
  413207:	add    BYTE PTR [rax+0x4159],dl
  41320d:	add    BYTE PTR [rax],al
  41320f:	add    BYTE PTR [rax+0x4159],dl
  413215:	add    BYTE PTR [rax],al
  413217:	add    BYTE PTR [rax+0x4159],dl
  41321d:	add    BYTE PTR [rax],al
  41321f:	add    BYTE PTR [rax+0x4159],dl
  413225:	add    BYTE PTR [rax],al
  413227:	add    BYTE PTR [rax+0x4159],dl
  41322d:	add    BYTE PTR [rax],al
  41322f:	add    BYTE PTR [rax+0x4159],dl
  413235:	add    BYTE PTR [rax],al
  413237:	add    BYTE PTR [rax+0x4159],dl
  41323d:	add    BYTE PTR [rax],al
  41323f:	add    BYTE PTR [rax+0x4159],dl
  413245:	add    BYTE PTR [rax],al
  413247:	add    BYTE PTR [rax+0x4159],dl
  41324d:	add    BYTE PTR [rax],al
  41324f:	add    BYTE PTR [rax+0x4159],dl
  413255:	add    BYTE PTR [rax],al
  413257:	add    BYTE PTR [rax+0x4159],dl
  41325d:	add    BYTE PTR [rax],al
  41325f:	add    BYTE PTR [rax+0x4159],dl
  413265:	add    BYTE PTR [rax],al
  413267:	add    BYTE PTR [rax+0x4159],dl
  41326d:	add    BYTE PTR [rax],al
  41326f:	add    BYTE PTR [rax+0x4159],dl
  413275:	add    BYTE PTR [rax],al
  413277:	add    BYTE PTR [rax+0x4159],dl
  41327d:	add    BYTE PTR [rax],al
  41327f:	add    BYTE PTR [rax+0x4159],dl
  413285:	add    BYTE PTR [rax],al
  413287:	add    BYTE PTR [rax+0x4159],dl
  41328d:	add    BYTE PTR [rax],al
  41328f:	add    BYTE PTR [rax+0x4159],dl
  413295:	add    BYTE PTR [rax],al
  413297:	add    BYTE PTR [rax+0x4159],dl
  41329d:	add    BYTE PTR [rax],al
  41329f:	add    BYTE PTR [rax+0x4159],dl
  4132a5:	add    BYTE PTR [rax],al
  4132a7:	add    BYTE PTR [rax+0x4159],dl
  4132ad:	add    BYTE PTR [rax],al
  4132af:	add    BYTE PTR [rax+0x4159],dl
  4132b5:	add    BYTE PTR [rax],al
  4132b7:	add    BYTE PTR [rax+0x4159],dl
  4132bd:	add    BYTE PTR [rax],al
  4132bf:	add    BYTE PTR [rax+0x4159],dl
  4132c5:	add    BYTE PTR [rax],al
  4132c7:	add    BYTE PTR [rax+0x4159],dl
  4132cd:	add    BYTE PTR [rax],al
  4132cf:	add    BYTE PTR [rax+0x4159],dl
  4132d5:	add    BYTE PTR [rax],al
  4132d7:	add    BYTE PTR [rax+0x4159],dl
  4132dd:	add    BYTE PTR [rax],al
  4132df:	add    BYTE PTR [rax+0x4159],dl
  4132e5:	add    BYTE PTR [rax],al
  4132e7:	add    BYTE PTR [rax+0x4159],dl
  4132ed:	add    BYTE PTR [rax],al
  4132ef:	add    BYTE PTR [rax+0x4159],dl
  4132f5:	add    BYTE PTR [rax],al
  4132f7:	add    BYTE PTR [rax+0x4159],dl
  4132fd:	add    BYTE PTR [rax],al
  4132ff:	add    BYTE PTR [rax+0x4159],dl
  413305:	add    BYTE PTR [rax],al
  413307:	add    BYTE PTR [rax+0x4159],dl
  41330d:	add    BYTE PTR [rax],al
  41330f:	add    BYTE PTR [rax+0x4159],dl
  413315:	add    BYTE PTR [rax],al
  413317:	add    BYTE PTR [rax+0x4159],dl
  41331d:	add    BYTE PTR [rax],al
  41331f:	add    BYTE PTR [rax+0x4159],dl
  413325:	add    BYTE PTR [rax],al
  413327:	add    BYTE PTR [rcx],al
  413329:	add    BYTE PTR [rax],al
  41332b:	add    BYTE PTR [rax],al
  41332d:	add    BYTE PTR [rax],al
  41332f:	add    BYTE PTR [rax-0x2b],bl
  413332:	add    BYTE PTR [rax],al
  413335:	add    BYTE PTR [rax],al
  413337:	add    BYTE PTR [rax-0x29],bl
  41333a:	add    BYTE PTR [rax],al
  41333d:	add    BYTE PTR [rax],al
  41333f:	add    BYTE PTR [rax+0x4159],dl
  413345:	add    BYTE PTR [rax],al
  413347:	add    BYTE PTR [rax+0x4159],dl
  41334d:	add    BYTE PTR [rax],al
  41334f:	add    BYTE PTR [rax+0x4159],dl
  413355:	add    BYTE PTR [rax],al
  413357:	add    BYTE PTR [rax+0x4159],dl
  41335d:	add    BYTE PTR [rax],al
  41335f:	add    BYTE PTR [rax+0x4159],dl
  413365:	add    BYTE PTR [rax],al
  413367:	add    BYTE PTR [rax+0x4159],dl
  41336d:	add    BYTE PTR [rax],al
  41336f:	add    BYTE PTR [rax+0x4159],dl
  413375:	add    BYTE PTR [rax],al
  413377:	add    BYTE PTR [rax+0x4159],dl
  41337d:	add    BYTE PTR [rax],al
  41337f:	add    BYTE PTR [rax+0x4159],dl
  413385:	add    BYTE PTR [rax],al
  413387:	add    BYTE PTR [rax+0x4159],dl
  41338d:	add    BYTE PTR [rax],al
  41338f:	add    BYTE PTR [rax+0x4159],dl
  413395:	add    BYTE PTR [rax],al
  413397:	add    BYTE PTR [rax+0x4159],dl
  41339d:	add    BYTE PTR [rax],al
  41339f:	add    BYTE PTR [rax+0x4159],dl
  4133a5:	add    BYTE PTR [rax],al
  4133a7:	add    BYTE PTR [rax+0x4159],dl
  4133ad:	add    BYTE PTR [rax],al
  4133af:	add    BYTE PTR [rax+0x4159],dl
  4133b5:	add    BYTE PTR [rax],al
  4133b7:	add    BYTE PTR [rax+0x4159],dl
  4133bd:	add    BYTE PTR [rax],al
  4133bf:	add    BYTE PTR [rax+0x4159],dl
  4133c5:	add    BYTE PTR [rax],al
  4133c7:	add    BYTE PTR [rax+0x4159],dl
  4133cd:	add    BYTE PTR [rax],al
  4133cf:	add    BYTE PTR [rax+0x4159],dl
  4133d5:	add    BYTE PTR [rax],al
  4133d7:	add    BYTE PTR [rax+0x4159],dl
  4133dd:	add    BYTE PTR [rax],al
  4133df:	add    BYTE PTR [rax+0x4159],dl
  4133e5:	add    BYTE PTR [rax],al
  4133e7:	add    BYTE PTR [rax+0x4159],dl
  4133ed:	add    BYTE PTR [rax],al
  4133ef:	add    BYTE PTR [rcx],al
  4133f1:	add    BYTE PTR [rax],al
  4133f3:	add    BYTE PTR [rax],al
  4133f5:	add    BYTE PTR [rax],al
  4133f7:	add    BYTE PTR [rax+0x4159],dl
  4133fd:	add    BYTE PTR [rax],al
  4133ff:	add    BYTE PTR [rax+0x4159],dl
  413405:	add    BYTE PTR [rax],al
  413407:	add    BYTE PTR [rax+0x4159],dl
  41340d:	add    BYTE PTR [rax],al
  41340f:	add    BYTE PTR [rax+0x4159],dl
  413415:	add    BYTE PTR [rax],al
  413417:	add    BYTE PTR [rax+0x4159],dl
  41341d:	add    BYTE PTR [rax],al
  41341f:	add    BYTE PTR [rax+0x4159],dl
  413425:	add    BYTE PTR [rax],al
  413427:	add    BYTE PTR [rax+0x4159],dl
  41342d:	add    BYTE PTR [rax],al
  41342f:	add    BYTE PTR [rax+0x4159],dl
  413435:	add    BYTE PTR [rax],al
  413437:	add    BYTE PTR [rax+0x4159],dl
  41343d:	add    BYTE PTR [rax],al
  41343f:	add    BYTE PTR [rax+0x4159],dl
  413445:	add    BYTE PTR [rax],al
  413447:	add    BYTE PTR [rax+0x4159],dl
  41344d:	add    BYTE PTR [rax],al
  41344f:	add    BYTE PTR [rax+0x4159],dl
  413455:	add    BYTE PTR [rax],al
  413457:	add    BYTE PTR [rax+0x4159],dl
  41345d:	add    BYTE PTR [rax],al
  41345f:	add    BYTE PTR [rax+0x4159],dl
  413465:	add    BYTE PTR [rax],al
  413467:	add    BYTE PTR [rax+0x4159],dl
  41346d:	add    BYTE PTR [rax],al
  41346f:	add    BYTE PTR [rax+0x4159],dl
  413475:	add    BYTE PTR [rax],al
  413477:	add    BYTE PTR [rax+0x4159],dl
  41347d:	add    BYTE PTR [rax],al
  41347f:	add    BYTE PTR [rax+0x4159],dl
  413485:	add    BYTE PTR [rax],al
  413487:	add    BYTE PTR [rax+0x4159],dl
  41348d:	add    BYTE PTR [rax],al
  41348f:	add    BYTE PTR [rax+0x4159],dl
  413495:	add    BYTE PTR [rax],al
  413497:	add    BYTE PTR [rax+0x4159],dl
  41349d:	add    BYTE PTR [rax],al
  41349f:	add    BYTE PTR [rax+0x4159],dl
  4134a5:	add    BYTE PTR [rax],al
  4134a7:	add    BYTE PTR [rax+0x4159],dl
  4134ad:	add    BYTE PTR [rax],al
  4134af:	add    BYTE PTR [rax+0x4159],dl
  4134b5:	add    BYTE PTR [rax],al
  4134b7:	add    BYTE PTR [rax+0x4159],dl
  4134bd:	add    BYTE PTR [rax],al
  4134bf:	add    BYTE PTR [rax+0x4159],dl
  4134c5:	add    BYTE PTR [rax],al
  4134c7:	add    BYTE PTR [rax+0x4159],dl
  4134cd:	add    BYTE PTR [rax],al
  4134cf:	add    BYTE PTR [rax+0x4159],dl
  4134d5:	add    BYTE PTR [rax],al
  4134d7:	add    BYTE PTR [rax+0x4159],dl
  4134dd:	add    BYTE PTR [rax],al
  4134df:	add    BYTE PTR [rax+0x4159],dl
  4134e5:	add    BYTE PTR [rax],al
  4134e7:	add    BYTE PTR [rax+0x4159],dl
  4134ed:	add    BYTE PTR [rax],al
  4134ef:	add    BYTE PTR [rax+0x4159],dl
  4134f5:	add    BYTE PTR [rax],al
  4134f7:	add    BYTE PTR [rax+0x4159],dl
  4134fd:	add    BYTE PTR [rax],al
  4134ff:	add    BYTE PTR [rax+0x4159],dl
  413505:	add    BYTE PTR [rax],al
  413507:	add    BYTE PTR [rax+0x4159],dl
  41350d:	add    BYTE PTR [rax],al
  41350f:	add    BYTE PTR [rax+0x4159],dl
  413515:	add    BYTE PTR [rax],al
  413517:	add    BYTE PTR [rax+0x4159],dl
  41351d:	add    BYTE PTR [rax],al
  41351f:	add    BYTE PTR [rax+0x4159],dl
  413525:	add    BYTE PTR [rax],al
  413527:	add    BYTE PTR [rax+0x4159],dl
  41352d:	add    BYTE PTR [rax],al
  41352f:	add    BYTE PTR [rax+0x4159],dl
  413535:	add    BYTE PTR [rax],al
  413537:	add    BYTE PTR [rax+0x4159],dl
  41353d:	add    BYTE PTR [rax],al
  41353f:	add    BYTE PTR [rax+0x4159],dl
  413545:	add    BYTE PTR [rax],al
  413547:	add    BYTE PTR [rax+0x4159],dl
  41354d:	add    BYTE PTR [rax],al
  41354f:	add    BYTE PTR [rax+0x4159],dl
  413555:	add    BYTE PTR [rax],al
  413557:	add    BYTE PTR [rax+0x4159],dl
  41355d:	add    BYTE PTR [rax],al
  41355f:	add    BYTE PTR [rax+0x4159],dl
  413565:	add    BYTE PTR [rax],al
  413567:	add    BYTE PTR [rax+0x4159],dl
  41356d:	add    BYTE PTR [rax],al
  41356f:	add    BYTE PTR [rax+0x4159],dl
  413575:	add    BYTE PTR [rax],al
  413577:	add    BYTE PTR [rax+0x4159],dl
  41357d:	add    BYTE PTR [rax],al
  41357f:	add    BYTE PTR [rax+0x4159],dl
  413585:	add    BYTE PTR [rax],al
  413587:	add    BYTE PTR [rax+0x4159],dl
  41358d:	add    BYTE PTR [rax],al
  41358f:	add    BYTE PTR [rax+0x4159],dl
  413595:	add    BYTE PTR [rax],al
  413597:	add    BYTE PTR [rax+0x4159],dl
  41359d:	add    BYTE PTR [rax],al
  41359f:	add    BYTE PTR [rax+0x4159],dl
  4135a5:	add    BYTE PTR [rax],al
  4135a7:	add    BYTE PTR [rax+0x4159],dl
  4135ad:	add    BYTE PTR [rax],al
  4135af:	add    BYTE PTR [rax+0x4159],dl
  4135b5:	add    BYTE PTR [rax],al
  4135b7:	add    BYTE PTR [rax+0x4159],dl
  4135bd:	add    BYTE PTR [rax],al
  4135bf:	add    BYTE PTR [rax+0x4159],dl
  4135c5:	add    BYTE PTR [rax],al
  4135c7:	add    BYTE PTR [rax+0x4159],dl
  4135cd:	add    BYTE PTR [rax],al
  4135cf:	add    BYTE PTR [rax+0x4159],dl
  4135d5:	add    BYTE PTR [rax],al
  4135d7:	add    BYTE PTR [rax+0x4159],dl
  4135dd:	add    BYTE PTR [rax],al
  4135df:	add    BYTE PTR [rax+0x4159],dl
  4135e5:	add    BYTE PTR [rax],al
  4135e7:	add    BYTE PTR [rax+0x4159],dl
  4135ed:	add    BYTE PTR [rax],al
  4135ef:	add    BYTE PTR [rax+0x4159],dl
  4135f5:	add    BYTE PTR [rax],al
  4135f7:	add    BYTE PTR [rax+0x4159],dl
  4135fd:	add    BYTE PTR [rax],al
  4135ff:	add    BYTE PTR [rax+0x4159],dl
  413605:	add    BYTE PTR [rax],al
  413607:	add    BYTE PTR [rax+0x4159],dl
  41360d:	add    BYTE PTR [rax],al
  41360f:	add    BYTE PTR [rax+0x4159],dl
  413615:	add    BYTE PTR [rax],al
  413617:	add    BYTE PTR [rax+0x4159],dl
  41361d:	add    BYTE PTR [rax],al
  41361f:	add    BYTE PTR [rax+0x4159],dl
  413625:	add    BYTE PTR [rax],al
  413627:	add    BYTE PTR [rax+0x4159],dl
  41362d:	add    BYTE PTR [rax],al
  41362f:	add    BYTE PTR [rax+0x4159],dl
  413635:	add    BYTE PTR [rax],al
  413637:	add    BYTE PTR [rax+0x4159],dl
  41363d:	add    BYTE PTR [rax],al
  41363f:	add    BYTE PTR [rax+0x4159],dl
  413645:	add    BYTE PTR [rax],al
  413647:	add    BYTE PTR [rax+0x4159],dl
  41364d:	add    BYTE PTR [rax],al
  41364f:	add    BYTE PTR [rax+0x4159],dl
  413655:	add    BYTE PTR [rax],al
  413657:	add    BYTE PTR [rax+0x4159],dl
  41365d:	add    BYTE PTR [rax],al
  41365f:	add    BYTE PTR [rax+0x4159],dl
  413665:	add    BYTE PTR [rax],al
  413667:	add    BYTE PTR [rax+0x4159],dl
  41366d:	add    BYTE PTR [rax],al
  41366f:	add    BYTE PTR [rax+0x4159],dl
  413675:	add    BYTE PTR [rax],al
  413677:	add    BYTE PTR [rax+0x4159],dl
  41367d:	add    BYTE PTR [rax],al
  41367f:	add    BYTE PTR [rax+0x4159],dl
  413685:	add    BYTE PTR [rax],al
  413687:	add    BYTE PTR [rax+0x4159],dl
  41368d:	add    BYTE PTR [rax],al
  41368f:	add    BYTE PTR [rax+0x4159],dl
  413695:	add    BYTE PTR [rax],al
  413697:	add    BYTE PTR [rcx],al
  413699:	add    BYTE PTR [rax],al
  41369b:	add    BYTE PTR [rax],al
  41369d:	add    BYTE PTR [rax],al
  41369f:	add    BYTE PTR [rip+0x76726553],cl        # 0x76b39bf8
  4136a5:	imul   esp,DWORD PTR [rbx+0x65],0x65696c43
  4136ac:	outs   dx,BYTE PTR ds:[rsi]
  4136ad:	je     0x4136b5
  4136af:	push   rsi
  4136b0:	jae    0x413725
  4136b2:	push   r8
  4136b4:	rex.WB (bad) 
  4136b6:	push   rdi
  4136b7:	imul   ebp,DWORD PTR [rsi+0x61],0x572e6970
  4136be:	imul   ebp,DWORD PTR [rsi+0x64],0xe73776f
  4136c5:	push   rbx
  4136c6:	jns    0x41373b
  4136c8:	je     0x41372f
  4136ca:	ins    DWORD PTR es:[rdi],dx
  4136cb:	cs push rbp
  4136cd:	rex.WB push r12
  4136cf:	jns    0x413741
  4136d1:	gs jae 0x4136db
  4136d4:	push   rbx
  4136d5:	jns    0x41374a
  4136d7:	rex.WB outs dx,BYTE PTR ds:[rsi]
  4136d9:	imul   esi,DWORD PTR [rsi+rax*1+0x53],0x65747379
  4136e1:	ins    DWORD PTR es:[rdi],dx
  4136e2:	or     al,0x53
  4136e4:	jns    0x413759
  4136e6:	je     0x41374d
  4136e8:	ins    DWORD PTR es:[rdi],dx
  4136e9:	cs push rsp
  4136eb:	jns    0x41375d
  4136ed:	gs jae 0x4136fb
  4136f0:	push   rdi
  4136f1:	imul   ebp,DWORD PTR [rsi+0x41],0x78456970
  4136f8:	je     0x41376c
  4136fa:	(bad)  
  4136fb:	or     eax,0x616e6957
  413700:	jo     0x41376b
  413702:	cs push rdi
  413704:	imul   ebp,DWORD PTR [rsi+0x53],0xcccc6376
  41370b:	int3   
