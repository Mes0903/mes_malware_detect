
3088b3479bf282bffbb9929a6acc9f61fe993f7ad51cfb2917205d2dbfa1fbc9.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0x8515]        # 0x409530
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0x8516]        # 0x409540
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0x8519]        # 0x409550
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0x84dc]        # 0x409520
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0x834f]        # 0x4093a0
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0x84b1]        # 0x409510
  40105f:	mov    DWORD PTR [rip+0xafa3],edx        # 0x40c008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x4044a0
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x403430
  401081:	mov    rdx,QWORD PTR [rip+0x83a8]        # 0x409430
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0x838e]        # 0x409420
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0x83f4]        # 0x409490
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0x832b]        # 0x4093d0
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x403010
  4010af:	mov    rax,QWORD PTR [rip+0x829a]        # 0x409350
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x4044a0
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0x21e9]        # 0x403310
  401127:	call   0x403300
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0x8355]        # 0x4094c0
  40116b:	lea    r8,[rip+0xaea6]        # 0x40c018
  401172:	lea    rdx,[rip+0xaea7]        # 0x40c020
  401179:	lea    rcx,[rip+0xaea8]        # 0x40c028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0xae78],eax        # 0x40c000
  401188:	lea    rax,[rip+0xae71]        # 0x40c000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0x82e5]        # 0x409480
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x4044b8
  4011a3:	mov    DWORD PTR [rip+0xae67],eax        # 0x40c010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0x834a]        # 0x409510
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0x820b]        # 0x409400
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0xc7b2]        # 0x40d9b4
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0x81e7]        # 0x409410
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0xadba],0x1        # 0x40c004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0x812c]        # 0x409390
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x403620
  40127d:	lea    rcx,[rip+0x293c]        # 0x403bc0
  401284:	call   QWORD PTR [rip+0xc722]        # 0x40d9ac
  40128a:	mov    rdx,QWORD PTR [rip+0x815f]        # 0x4093f0
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x403ad0
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x4044e0
  4012a5:	call   0x403410
  4012aa:	mov    rax,QWORD PTR [rip+0x80ef]        # 0x4093a0
  4012b1:	mov    QWORD PTR [rip+0xb750],rax        # 0x40ca08
  4012b8:	mov    rax,QWORD PTR [rip+0x8101]        # 0x4093c0
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0xb6e9],rax        # 0x40ca00
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x4cca],eax        # 0x406000
  401336:	mov    r12d,DWORD PTR [rip+0xaceb]        # 0x40c028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x404418
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0xacc2]        # 0x40c020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x4043f0
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x404418
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x404410
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0xac6a],rbp        # 0x40c020
  4013b6:	call   0x402fe0
  4013bb:	mov    rax,QWORD PTR [rip+0x7fee]        # 0x4093b0
  4013c2:	mov    rdx,QWORD PTR [rip+0xac4f]        # 0x40c018
  4013c9:	mov    ecx,DWORD PTR [rip+0xac59]        # 0x40c028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0xac3c]        # 0x40c018
  4013dc:	mov    rdx,QWORD PTR [rip+0xac3d]        # 0x40c020
  4013e3:	call   0x4045b0
  4013e8:	mov    ecx,DWORD PTR [rip+0xac1a]        # 0x40c008
  4013ee:	mov    DWORD PTR [rip+0xac18],eax        # 0x40c00c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0xac02]        # 0x40c004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x404488
  40140b:	mov    eax,DWORD PTR [rip+0xabfb]        # 0x40c00c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0x7fd9]        # 0x409410
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x404490
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0x7fed]        # 0x409450
  401463:	mov    rcx,QWORD PTR [rip+0x7fd6]        # 0x409440
  40146a:	call   0x404478
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0xc4c3]        # 0x40d95c
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0x7fc9]        # 0x409470
  4014a7:	mov    rcx,QWORD PTR [rip+0x7fb2]        # 0x409460
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x404478
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x404448
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0x8035]        # 0x409510
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x403020
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0x8005]        # 0x409510
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x403020
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	movsx  r9d,BYTE PTR [rcx]
  401534:	mov    eax,0x1505
  401539:	mov    r11,rdx
  40153c:	test   r9b,r9b
  40153f:	je     0x40155b
  401541:	mov    r10d,eax
  401544:	add    rcx,0x1
  401548:	shl    r10d,0x5
  40154c:	add    eax,r10d
  40154f:	add    eax,r9d
  401552:	movsx  r9d,BYTE PTR [rcx]
  401556:	test   r9b,r9b
  401559:	jne    0x401541
  40155b:	xor    edx,edx
  40155d:	div    DWORD PTR [r8+0x8]
  401561:	mov    eax,edx
  401563:	mov    rdx,QWORD PTR [r8]
  401566:	lea    rax,[rdx+rax*8]
  40156a:	mov    rdx,QWORD PTR [rax]
  40156d:	mov    QWORD PTR [r11+0x20],rdx
  401571:	mov    QWORD PTR [rax],r11
  401574:	ret    
  401575:	nop
  401576:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401580:	push   rbx
  401581:	sub    rsp,0x20
  401585:	mov    rbx,rcx
  401588:	mov    rcx,QWORD PTR [rcx]
  40158b:	call   0x402de0
  401590:	mov    rcx,QWORD PTR [rbx+0x28]
  401594:	test   rcx,rcx
  401597:	je     0x40159e
  401599:	call   0x402b90
  40159e:	mov    rcx,QWORD PTR [rbx+0x30]
  4015a2:	test   rcx,rcx
  4015a5:	je     0x4015ac
  4015a7:	call   0x402d88
  4015ac:	mov    rdx,rbx
  4015af:	mov    ecx,0x40
  4015b4:	add    rsp,0x20
  4015b8:	pop    rbx
  4015b9:	jmp    0x402c70
  4015be:	xchg   ax,ax
  4015c0:	push   r12
  4015c2:	push   rbp
  4015c3:	push   rdi
  4015c4:	push   rsi
  4015c5:	push   rbx
  4015c6:	sub    rsp,0x20
  4015ca:	xor    eax,eax
  4015cc:	mov    rbp,QWORD PTR [rsp+0x70]
  4015d1:	test   r9,r9
  4015d4:	je     0x401638
  4015d6:	mov    rax,QWORD PTR [rdx]
  4015d9:	mov    rbx,rdx
  4015dc:	mov    r12,rcx
  4015df:	lea    ecx,[r8-0x1]
  4015e3:	mov    rsi,r9
  4015e6:	mov    rdx,rax
  4015e9:	neg    rdx
  4015ec:	and    rdx,rcx
  4015ef:	mov    ecx,0x18
  4015f4:	add    rax,rdx
  4015f7:	mov    QWORD PTR [rbx],rax
  4015fa:	call   0x402c80
  4015ff:	mov    rdi,rax
  401602:	mov    rax,QWORD PTR [rbx]
  401605:	mov    rcx,rsi
  401608:	mov    QWORD PTR [rdi+0x8],rsi
  40160c:	mov    QWORD PTR [rdi],rax
  40160f:	call   0x402d80
  401614:	mov    r9,QWORD PTR [rbx]
  401617:	mov    rcx,QWORD PTR [r12]
  40161b:	mov    rdx,rdi
  40161e:	mov    QWORD PTR [rdi+0x10],rax
  401622:	add    rsi,r9
  401625:	mov    DWORD PTR [rbp+0x0],r9d
  401629:	mov    QWORD PTR [rbx],rsi
  40162c:	mov    DWORD PTR [rbp+0x4],esi
  40162f:	call   0x402ca8
  401634:	mov    rax,QWORD PTR [rdi+0x10]
  401638:	add    rsp,0x20
  40163c:	pop    rbx
  40163d:	pop    rsi
  40163e:	pop    rdi
  40163f:	pop    rbp
  401640:	pop    r12
  401642:	ret    
  401643:	nop    DWORD PTR [rax]
  401646:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401650:	push   r15
  401652:	push   r14
  401654:	push   r13
  401656:	push   r12
  401658:	push   rbp
  401659:	push   rdi
  40165a:	push   rsi
  40165b:	push   rbx
  40165c:	sub    rsp,0x58
  401660:	mov    rsi,rcx
  401663:	mov    rcx,rdx
  401666:	mov    rbx,rdx
  401669:	mov    rbp,r8
  40166c:	call   0x402d90
  401671:	mov    ecx,0x10
  401676:	mov    r12d,eax
  401679:	call   0x402c80
  40167e:	movsxd rcx,r12d
  401681:	mov    edx,0x8
  401686:	mov    rdi,rax
  401689:	call   0x402d70
  40168e:	lea    rdx,[rip+0xfffffffffffffe9b]        # 0x401530
  401695:	mov    rcx,rbx
  401698:	mov    r8,rdi
  40169b:	mov    QWORD PTR [rdi],rax
  40169e:	mov    DWORD PTR [rdi+0x8],r12d
  4016a2:	call   0x402dc8
  4016a7:	mov    ebx,DWORD PTR [rdi+0x8]
  4016aa:	test   ebx,ebx
  4016ac:	jle    0x401a6f
  4016b2:	mov    r9,QWORD PTR [rdi]
  4016b5:	lea    eax,[rbx-0x1]
  4016b8:	xor    edx,edx
  4016ba:	lea    r10,[r9+rax*8+0x8]
  4016bf:	nop
  4016c0:	mov    rax,QWORD PTR [r9]
  4016c3:	test   rax,rax
  4016c6:	je     0x4016e1
  4016c8:	mov    ecx,edx
  4016ca:	nop    WORD PTR [rax+rax*1+0x0]
  4016d0:	mov    DWORD PTR [rax+0xc],ecx
  4016d3:	mov    rax,QWORD PTR [rax+0x20]
  4016d7:	add    edx,0x1
  4016da:	mov    ecx,edx
  4016dc:	test   rax,rax
  4016df:	jne    0x4016d0
  4016e1:	add    r9,0x8
  4016e5:	cmp    r9,r10
  4016e8:	jne    0x4016c0
  4016ea:	lea    r14,[rdx+rdx*2]
  4016ee:	lea    rax,[r14+r14*1]
  4016f2:	shl    r14,0x3
  4016f6:	movsxd r15,ebx
  4016f9:	lea    r13,[rsi+0x8]
  4016fd:	mov    r8d,0x4
  401703:	lea    r12,[r15+rax*1+0x2]
  401708:	mov    QWORD PTR [rsp+0x20],rbp
  40170d:	mov    rcx,rsi
  401710:	mov    rdx,r13
  401713:	shl    r12,0x2
  401717:	mov    r9,r12
  40171a:	call   0x4015c0
  40171f:	lea    rdx,[r15*4+0x0]
  401727:	mov    DWORD PTR [rax+0x4],ebx
  40172a:	mov    DWORD PTR [rax],0x28000000
  401730:	sub    r12,rdx
  401733:	lea    rbx,[rax+rdx*1+0x8]
  401738:	mov    r8,rdx
  40173b:	lea    rax,[r12-0x8]
  401740:	neg    r8
  401743:	cmp    r14,rax
  401746:	je     0x401774
  401748:	lea    rax,[rip+0x58ce]        # 0x40701d
  40174f:	lea    r9,[rip+0x5a7a]        # 0x4071d0
  401756:	lea    rdx,[rip+0x58a3]        # 0x407000
  40175d:	lea    rcx,[rip+0x58b0]        # 0x407014
  401764:	mov    r8d,0x151
  40176a:	mov    QWORD PTR [rsp+0x20],rax
  40176f:	call   0x402e28
  401774:	mov    edx,DWORD PTR [rdi+0x8]
  401777:	mov    rcx,QWORD PTR [rdi]
  40177a:	test   edx,edx
  40177c:	jle    0x401aa0
  401782:	lea    rdx,[rbx+r8*1]
  401786:	mov    QWORD PTR [rsp+0x38],0x0
  40178f:	xor    eax,eax
  401791:	mov    QWORD PTR [rsp+0x40],rdx
  401796:	mov    rdx,QWORD PTR [rsp+0x38]
  40179b:	mov    r11,QWORD PTR [rsp+0x40]
  4017a0:	mov    r15,QWORD PTR [rcx+rdx*8]
  4017a4:	mov    DWORD PTR [r11+rdx*4],eax
  4017a8:	test   r15,r15
  4017ab:	je     0x401a83
  4017b1:	mov    ebp,DWORD PTR [r15+0xc]
  4017b5:	cmp    ebp,eax
  4017b7:	je     0x4017e5
  4017b9:	lea    rax,[rip+0x5868]        # 0x407028
  4017c0:	lea    r9,[rip+0x5a29]        # 0x4071f0
  4017c7:	lea    rdx,[rip+0x5832]        # 0x407000
  4017ce:	lea    rcx,[rip+0x583f]        # 0x407014
  4017d5:	mov    r8d,0x178
  4017db:	mov    QWORD PTR [rsp+0x20],rax
  4017e0:	call   0x402e28
  4017e5:	add    rbx,0x10
  4017e9:	lea    rax,[rbx+0x8]
  4017ed:	mov    QWORD PTR [rsp+0x48],rax
  4017f2:	mov    eax,DWORD PTR [r15+0x8]
  4017f6:	mov    DWORD PTR [rbx-0x10],eax
  4017f9:	mov    rax,QWORD PTR [r15+0x10]
  4017fd:	test   rax,rax
  401800:	je     0x401a65
  401806:	mov    eax,DWORD PTR [rax+0xc]
  401809:	mov    DWORD PTR [rbx-0xc],eax
  40180c:	mov    BYTE PTR [rbx-0x1],0x0
  401810:	mov    rax,QWORD PTR [r15+0x10]
  401814:	test   rax,rax
  401817:	je     0x401a35
  40181d:	mov    rcx,QWORD PTR [rax]
  401820:	call   0x4043f0
  401825:	add    rax,QWORD PTR [r15]
  401828:	mov    rdx,rax
  40182b:	mov    rcx,rdx
  40182e:	mov    QWORD PTR [rsp+0x30],rdx
  401833:	call   0x4043f0
  401838:	mov    ecx,0x18
  40183d:	mov    r12,rax
  401840:	call   0x402c80
  401845:	mov    r14,rax
  401848:	mov    rax,QWORD PTR [rsi+0x8]
  40184c:	mov    rcx,r12
  40184f:	mov    QWORD PTR [r14+0x8],r12
  401853:	mov    QWORD PTR [r14],rax
  401856:	call   0x402d80
  40185b:	mov    rdx,QWORD PTR [rsp+0x30]
  401860:	mov    r8,r12
  401863:	mov    rcx,rax
  401866:	mov    QWORD PTR [r14+0x10],rax
  40186a:	call   0x404410
  40186f:	mov    rax,QWORD PTR [rsi+0x8]
  401873:	mov    rcx,QWORD PTR [rsi]
  401876:	mov    rdx,r14
  401879:	mov    WORD PTR [rbx-0x4],r12w
  40187e:	add    r12,rax
  401881:	mov    DWORD PTR [rbx-0x8],eax
  401884:	mov    QWORD PTR [rsi+0x8],r12
  401888:	call   0x402ca8
  40188d:	mov    rcx,QWORD PTR [r15+0x28]
  401891:	test   rcx,rcx
  401894:	je     0x401932
  40189a:	cmp    QWORD PTR [r15+0x38],0x0
  40189f:	je     0x4018cd
  4018a1:	lea    rax,[rip+0x57b0]        # 0x407058
  4018a8:	lea    r9,[rip+0x5941]        # 0x4071f0
  4018af:	lea    rdx,[rip+0x574a]        # 0x407000
  4018b6:	lea    rcx,[rip+0x5757]        # 0x407014
  4018bd:	mov    r8d,0x188
  4018c3:	mov    QWORD PTR [rsp+0x20],rax
  4018c8:	call   0x402e28
  4018cd:	cmp    QWORD PTR [r15+0x30],0x0
  4018d2:	jne    0x4018a1
  4018d4:	mov    eax,DWORD PTR [rsi+0x10]
  4018d7:	test   eax,eax
  4018d9:	jne    0x401a3d
  4018df:	call   0x402bb0
  4018e4:	mov    r14,rax
  4018e7:	mov    rcx,r14
  4018ea:	call   0x402bd0
  4018ef:	mov    rcx,r14
  4018f2:	mov    r12,rax
  4018f5:	call   0x402b90
  4018fa:	mov    rcx,r12
  4018fd:	call   0x402bc8
  401902:	mov    r8d,0x8
  401908:	mov    r9,rax
  40190b:	mov    rdx,r13
  40190e:	mov    rcx,rsi
  401911:	mov    QWORD PTR [rsp+0x20],rbx
  401916:	call   0x4015c0
  40191b:	mov    rcx,r12
  40191e:	mov    rdx,rax
  401921:	call   0x402ba0
  401926:	mov    rcx,r12
  401929:	call   0x402b90
  40192e:	mov    BYTE PTR [rbx-0x2],0x76
  401932:	mov    rax,QWORD PTR [r15+0x38]
  401936:	test   rax,rax
  401939:	je     0x4019fc
  40193f:	cmp    QWORD PTR [r15+0x30],0x0
  401944:	je     0x401972
  401946:	lea    rax,[rip+0x5736]        # 0x407083
  40194d:	lea    r9,[rip+0x589c]        # 0x4071f0
  401954:	lea    rdx,[rip+0x56a5]        # 0x407000
  40195b:	lea    rcx,[rip+0x56b2]        # 0x407014
  401962:	mov    r8d,0x194
  401968:	mov    QWORD PTR [rsp+0x20],rax
  40196d:	call   0x402e28
  401972:	xor    r12d,r12d
  401975:	mov    rax,QWORD PTR [rax+0x18]
  401979:	add    r12d,0x1
  40197d:	test   rax,rax
  401980:	jne    0x401975
  401982:	lea    r9d,[r12*4+0x0]
  40198a:	mov    rcx,rsi
  40198d:	mov    QWORD PTR [rsp+0x20],rbx
  401992:	mov    r8d,0x4
  401998:	mov    rdx,r13
  40199b:	call   0x4015c0
  4019a0:	mov    BYTE PTR [rbx-0x2],0x4c
  4019a4:	mov    rcx,QWORD PTR [r15+0x38]
  4019a8:	test   rcx,rcx
  4019ab:	je     0x401a5d
  4019b1:	xor    edx,edx
  4019b3:	mov    r9d,DWORD PTR [rcx+0xc]
  4019b7:	mov    rcx,QWORD PTR [rcx+0x18]
  4019bb:	lea    r8d,[rdx+0x1]
  4019bf:	test   rcx,rcx
  4019c2:	mov    DWORD PTR [rax+rdx*4],r9d
  4019c6:	mov    edx,r8d
  4019c9:	jne    0x4019b3
  4019cb:	cmp    r12d,r8d
  4019ce:	je     0x4019fc
  4019d0:	lea    rax,[rip+0x56c0]        # 0x407097
  4019d7:	lea    r9,[rip+0x5812]        # 0x4071f0
  4019de:	lea    rdx,[rip+0x561b]        # 0x407000
  4019e5:	lea    rcx,[rip+0x5628]        # 0x407014
  4019ec:	mov    r8d,0x1a0
  4019f2:	mov    QWORD PTR [rsp+0x20],rax
  4019f7:	call   0x402e28
  4019fc:	cmp    QWORD PTR [r15+0x30],0x0
  401a01:	je     0x401a16
  401a03:	mov    BYTE PTR [rbx-0x2],0x48
  401a07:	mov    rdx,QWORD PTR [r15+0x30]
  401a0b:	mov    r8,rbx
  401a0e:	mov    rcx,rsi
  401a11:	call   0x401650
  401a16:	mov    r15,QWORD PTR [r15+0x20]
  401a1a:	add    ebp,0x1
  401a1d:	test   r15,r15
  401a20:	je     0x401a79
  401a22:	add    rbx,0x18
  401a26:	cmp    ebp,DWORD PTR [r15+0xc]
  401a2a:	jne    0x4017b9
  401a30:	jmp    0x4017e9
  401a35:	mov    rdx,QWORD PTR [r15]
  401a38:	jmp    0x40182b
  401a3d:	call   0x402bd8
  401a42:	mov    r12,rax
  401a45:	mov    rcx,rax
  401a48:	call   0x402bb0
  401a4d:	mov    rcx,r12
  401a50:	mov    r14,rax
  401a53:	call   0x402b90
  401a58:	jmp    0x4018e7
  401a5d:	xor    r8d,r8d
  401a60:	jmp    0x4019cb
  401a65:	mov    eax,0xffffffff
  401a6a:	jmp    0x401809
  401a6f:	xor    r14d,r14d
  401a72:	xor    eax,eax
  401a74:	jmp    0x4016f6
  401a79:	mov    rbx,QWORD PTR [rsp+0x48]
  401a7e:	mov    rcx,QWORD PTR [rdi]
  401a81:	mov    eax,ebp
  401a83:	mov    r11,QWORD PTR [rsp+0x38]
  401a88:	mov    edx,r11d
  401a8b:	add    r11,0x1
  401a8f:	add    edx,0x1
  401a92:	cmp    DWORD PTR [rdi+0x8],edx
  401a95:	mov    QWORD PTR [rsp+0x38],r11
  401a9a:	jg     0x401796
  401aa0:	call   0x402de0
  401aa5:	mov    rdx,rdi
  401aa8:	mov    ecx,0x10
  401aad:	add    rsp,0x58
  401ab1:	pop    rbx
  401ab2:	pop    rsi
  401ab3:	pop    rdi
  401ab4:	pop    rbp
  401ab5:	pop    r12
  401ab7:	pop    r13
  401ab9:	pop    r14
  401abb:	pop    r15
  401abd:	jmp    0x402c70
  401ac2:	nop    DWORD PTR [rax+0x0]
  401ac6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401ad0:	push   rbp
  401ad1:	push   rdi
  401ad2:	push   rsi
  401ad3:	push   rbx
  401ad4:	sub    rsp,0x28
  401ad8:	mov    rbp,rdx
  401adb:	mov    rdi,rcx
  401ade:	mov    ecx,0x40
  401ae3:	call   0x402c78
  401ae8:	mov    rcx,rbp
  401aeb:	mov    rsi,rax
  401aee:	call   0x402c40
  401af3:	movsx  r9d,BYTE PTR [rbp+0x0]
  401af8:	mov    QWORD PTR [rsi],rax
  401afb:	test   r9b,r9b
  401afe:	je     0x401b4f
  401b00:	mov    r11,rbp
  401b03:	mov    r10d,0x1505
  401b09:	nop    DWORD PTR [rax+0x0]
  401b10:	mov    ebx,r10d
  401b13:	add    r11,0x1
  401b17:	shl    ebx,0x5
  401b1a:	add    r10d,ebx
  401b1d:	add    r10d,r9d
  401b20:	movsx  r9d,BYTE PTR [r11]
  401b24:	test   r9b,r9b
  401b27:	jne    0x401b10
  401b29:	mov    rcx,rbp
  401b2c:	mov    DWORD PTR [rsi+0x8],r10d
  401b30:	call   0x402c40
  401b35:	mov    r8,rsi
  401b38:	mov    rdx,rax
  401b3b:	mov    rcx,rdi
  401b3e:	call   0x402dc0
  401b43:	mov    rax,rsi
  401b46:	add    rsp,0x28
  401b4a:	pop    rbx
  401b4b:	pop    rsi
  401b4c:	pop    rdi
  401b4d:	pop    rbp
  401b4e:	ret    
  401b4f:	mov    r10d,0x1505
  401b55:	jmp    0x401b29
  401b57:	nop    WORD PTR [rax+rax*1+0x0]
  401b60:	push   rbx
  401b61:	sub    rsp,0x20
  401b65:	cmp    QWORD PTR [rcx+0x28],0x0
  401b6a:	je     0x401b90
  401b6c:	lea    r8,[rip+0x5535]        # 0x4070a8
  401b73:	lea    rdx,[rip+0x56d6]        # 0x407250
  401b7a:	lea    rcx,[rip+0x5493]        # 0x407014
  401b81:	add    rsp,0x20
  401b85:	pop    rbx
  401b86:	jmp    0x402c98
  401b8b:	nop    DWORD PTR [rax+rax*1+0x0]
  401b90:	cmp    QWORD PTR [rcx+0x30],0x0
  401b95:	jne    0x401b6c
  401b97:	cmp    QWORD PTR [rcx+0x38],0x0
  401b9c:	jne    0x401b6c
  401b9e:	mov    rbx,rcx
  401ba1:	mov    rcx,rdx
  401ba4:	call   0x402ba8
  401ba9:	mov    QWORD PTR [rbx+0x28],rax
  401bad:	add    rsp,0x20
  401bb1:	pop    rbx
  401bb2:	ret    
  401bb3:	nop    DWORD PTR [rax]
  401bb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401bc0:	push   rsi
  401bc1:	push   rbx
  401bc2:	sub    rsp,0x28
  401bc6:	mov    rsi,r8
  401bc9:	call   0x401ad0
  401bce:	mov    rcx,rsi
  401bd1:	mov    rbx,rax
  401bd4:	call   0x402bb8
  401bd9:	mov    rcx,rbx
  401bdc:	mov    rdx,rax
  401bdf:	add    rsp,0x28
  401be3:	pop    rbx
  401be4:	pop    rsi
  401be5:	jmp    0x401b60
  401bea:	nop    WORD PTR [rax+rax*1+0x0]
  401bf0:	push   rbx
  401bf1:	sub    rsp,0x20
  401bf5:	cmp    QWORD PTR [rcx+0x28],0x0
  401bfa:	je     0x401c20
  401bfc:	lea    r8,[rip+0x54a5]        # 0x4070a8
  401c03:	lea    rdx,[rip+0x5626]        # 0x407230
  401c0a:	lea    rcx,[rip+0x5403]        # 0x407014
  401c11:	add    rsp,0x20
  401c15:	pop    rbx
  401c16:	jmp    0x402c98
  401c1b:	nop    DWORD PTR [rax+rax*1+0x0]
  401c20:	cmp    QWORD PTR [rcx+0x30],0x0
  401c25:	jne    0x401bfc
  401c27:	cmp    QWORD PTR [rcx+0x38],0x0
  401c2c:	jne    0x401bfc
  401c2e:	mov    rbx,rcx
  401c31:	mov    rcx,rdx
  401c34:	call   0x402d98
  401c39:	mov    QWORD PTR [rbx+0x30],rax
  401c3d:	add    rsp,0x20
  401c41:	pop    rbx
  401c42:	ret    
  401c43:	nop    DWORD PTR [rax]
  401c46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401c50:	push   rdi
  401c51:	push   rsi
  401c52:	push   rbx
  401c53:	sub    rsp,0x20
  401c57:	lea    r9,[rip+0xfffffffffffff922]        # 0x401580
  401c5e:	lea    r8,[rip+0x117b]        # 0x402de0
  401c65:	mov    rsi,rcx
  401c68:	mov    rdi,rdx
  401c6b:	lea    rcx,[rip+0xfde]        # 0x402c50
  401c72:	lea    rdx,[rip+0xfef]        # 0x402c68
  401c79:	call   0x402da0
  401c7e:	test   rsi,rsi
  401c81:	mov    rbx,rax
  401c84:	je     0x401c9c
  401c86:	mov    rdx,rdi
  401c89:	mov    rcx,rsi
  401c8c:	call   0x401ad0
  401c91:	mov    rdx,rbx
  401c94:	mov    rcx,rax
  401c97:	call   0x401bf0
  401c9c:	mov    rax,rbx
  401c9f:	add    rsp,0x20
  401ca3:	pop    rbx
  401ca4:	pop    rsi
  401ca5:	pop    rdi
  401ca6:	ret    
  401ca7:	nop    WORD PTR [rax+rax*1+0x0]
  401cb0:	push   r12
  401cb2:	push   rbp
  401cb3:	push   rdi
  401cb4:	push   rsi
  401cb5:	push   rbx
  401cb6:	sub    rsp,0x20
  401cba:	mov    rbp,rcx
  401cbd:	mov    r12,rdx
  401cc0:	mov    rcx,QWORD PTR [rcx]
  401cc3:	mov    rdx,QWORD PTR [rdx]
  401cc6:	call   0x402c60
  401ccb:	test   eax,eax
  401ccd:	je     0x401d00
  401ccf:	cmp    QWORD PTR [r12+0x28],0x0
  401cd5:	je     0x401d09
  401cd7:	lea    r8,[rip+0x542a]        # 0x407108
  401cde:	lea    rdx,[rip+0x552b]        # 0x407210
  401ce5:	lea    rcx,[rip+0x5328]        # 0x407014
  401cec:	add    rsp,0x20
  401cf0:	pop    rbx
  401cf1:	pop    rsi
  401cf2:	pop    rdi
  401cf3:	pop    rbp
  401cf4:	pop    r12
  401cf6:	jmp    0x402c98
  401cfb:	nop    DWORD PTR [rax+rax*1+0x0]
  401d00:	lea    r8,[rip+0x53d1]        # 0x4070d8
  401d07:	jmp    0x401cde
  401d09:	cmp    QWORD PTR [r12+0x30],0x0
  401d0f:	jne    0x401cd7
  401d11:	cmp    QWORD PTR [rbp+0x10],0x0
  401d16:	je     0x401d29
  401d18:	nop    DWORD PTR [rax+rax*1+0x0]
  401d20:	lea    r8,[rip+0x5409]        # 0x407130
  401d27:	jmp    0x401cde
  401d29:	cmp    QWORD PTR [rbp+0x18],0x0
  401d2e:	jne    0x401d20
  401d30:	mov    rbx,QWORD PTR [r12+0x38]
  401d35:	lea    rsi,[r12+0x38]
  401d3a:	test   rbx,rbx
  401d3d:	je     0x401d61
  401d3f:	mov    rdi,QWORD PTR [rbp+0x0]
  401d43:	jmp    0x401d52
  401d45:	lea    rsi,[rbx+0x18]
  401d49:	mov    rbx,QWORD PTR [rbx+0x18]
  401d4d:	test   rbx,rbx
  401d50:	je     0x401d61
  401d52:	mov    rcx,QWORD PTR [rbx]
  401d55:	mov    rdx,rdi
  401d58:	call   0x4043f8
  401d5d:	test   eax,eax
  401d5f:	jle    0x401d45
  401d61:	mov    QWORD PTR [rbp+0x10],r12
  401d65:	mov    rax,QWORD PTR [rsi]
  401d68:	mov    QWORD PTR [rbp+0x18],rax
  401d6c:	mov    QWORD PTR [rsi],rbp
  401d6f:	add    rsp,0x20
  401d73:	pop    rbx
  401d74:	pop    rsi
  401d75:	pop    rdi
  401d76:	pop    rbp
  401d77:	pop    r12
  401d79:	ret    
  401d7a:	nop    WORD PTR [rax+rax*1+0x0]
  401d80:	push   r13
  401d82:	push   r12
  401d84:	push   rbp
  401d85:	push   rdi
  401d86:	push   rsi
  401d87:	push   rbx
  401d88:	sub    rsp,0x78
  401d8c:	mov    rbx,rcx
  401d8f:	mov    ecx,0x18
  401d94:	mov    edi,r8d
  401d97:	mov    r12,rdx
  401d9a:	mov    r13,r9
  401d9d:	call   0x402c80
  401da2:	mov    rsi,rax
  401da5:	call   0x402cb8
  401daa:	lea    r8,[rsp+0x30]
  401daf:	mov    rdx,rbx
  401db2:	mov    rcx,rsi
  401db5:	mov    QWORD PTR [rsi],rax
  401db8:	mov    QWORD PTR [rsi+0x8],0x18
  401dc0:	mov    DWORD PTR [rsi+0x10],edi
  401dc3:	call   0x401650
  401dc8:	mov    eax,DWORD PTR [rsi+0x10]
  401dcb:	mov    ebp,DWORD PTR [rsp+0x30]
  401dcf:	mov    ebx,DWORD PTR [rsp+0x34]
  401dd3:	mov    QWORD PTR [rsp+0x58],0x0
  401ddc:	mov    QWORD PTR [rsp+0x60],0x0
  401de5:	test   eax,eax
  401de7:	je     0x401f30
  401ded:	mov    DWORD PTR [rsp+0x50],0x47566172
  401df5:	mov    DWORD PTR [rsp+0x54],0x69616e74
  401dfd:	xor    ecx,ecx
  401dff:	call   0x402c10
  401e04:	mov    DWORD PTR [rsp+0x60],ebp
  401e08:	lea    rdx,[rsp+0x50]
  401e0d:	lea    rbp,[rsp+0x40]
  401e12:	mov    r8d,0x18
  401e18:	mov    rcx,rax
  401e1b:	mov    rdi,rax
  401e1e:	mov    DWORD PTR [rsp+0x64],ebx
  401e22:	call   0x402c28
  401e27:	mov    rcx,QWORD PTR [rsi]
  401e2a:	call   0x402cc0
  401e2f:	test   eax,eax
  401e31:	jne    0x401f45
  401e37:	mov    rcx,QWORD PTR [rsi]
  401e3a:	call   0x402cb0
  401e3f:	mov    rbx,rax
  401e42:	mov    rax,QWORD PTR [rdi+0x8]
  401e46:	mov    r8,QWORD PTR [rbx]
  401e49:	cmp    rax,r8
  401e4c:	je     0x401e92
  401e4e:	mov    QWORD PTR [rsp+0x40],0x0
  401e57:	jae    0x401ec0
  401e59:	sub    r8,rax
  401e5c:	cmp    r8,0x7
  401e60:	jbe    0x401ef0
  401e66:	lea    rax,[rip+0x5303]        # 0x407170
  401e6d:	lea    r9,[rip+0x533c]        # 0x4071b0
  401e74:	lea    rdx,[rip+0x5185]        # 0x407000
  401e7b:	lea    rcx,[rip+0x5192]        # 0x407014
  401e82:	mov    r8d,0x1dd
  401e88:	mov    QWORD PTR [rsp+0x20],rax
  401e8d:	call   0x402e28
  401e92:	mov    rdx,QWORD PTR [rbx+0x10]
  401e96:	mov    r8,QWORD PTR [rbx+0x8]
  401e9a:	mov    rcx,rdi
  401e9d:	call   0x402c28
  401ea2:	mov    rcx,QWORD PTR [rbx+0x10]
  401ea6:	call   0x402de0
  401eab:	mov    rdx,rbx
  401eae:	mov    ecx,0x18
  401eb3:	call   0x402c70
  401eb8:	jmp    0x401e27
  401ebd:	nop    DWORD PTR [rax]
  401ec0:	lea    rax,[rip+0x5289]        # 0x407150
  401ec7:	lea    r9,[rip+0x52e2]        # 0x4071b0
  401ece:	lea    rdx,[rip+0x512b]        # 0x407000
  401ed5:	lea    rcx,[rip+0x5138]        # 0x407014
  401edc:	mov    r8d,0x1dc
  401ee2:	mov    QWORD PTR [rsp+0x20],rax
  401ee7:	call   0x402e28
  401eec:	nop    DWORD PTR [rax+0x0]
  401ef0:	mov    rdx,rbp
  401ef3:	mov    rcx,rdi
  401ef6:	call   0x402c28
  401efb:	mov    rax,QWORD PTR [rbx]
  401efe:	cmp    QWORD PTR [rdi+0x8],rax
  401f02:	je     0x401e92
  401f04:	lea    rax,[rip+0x5285]        # 0x407190
  401f0b:	lea    r9,[rip+0x529e]        # 0x4071b0
  401f12:	lea    rdx,[rip+0x50e7]        # 0x407000
  401f19:	lea    rcx,[rip+0x50f4]        # 0x407014
  401f20:	mov    r8d,0x1e0
  401f26:	mov    QWORD PTR [rsp+0x20],rax
  401f2b:	call   0x402e28
  401f30:	mov    DWORD PTR [rsp+0x50],0x72615647
  401f38:	mov    DWORD PTR [rsp+0x54],0x746e6169
  401f40:	jmp    0x401dfd
  401f45:	mov    rcx,QWORD PTR [rsi]
  401f48:	call   0x402cc8
  401f4d:	mov    rdx,rsi
  401f50:	mov    ecx,0x18
  401f55:	call   0x402c70
  401f5a:	mov    r8,QWORD PTR [rdi+0x8]
  401f5e:	mov    rdx,QWORD PTR [rdi]
  401f61:	mov    r9,r13
  401f64:	mov    rcx,r12
  401f67:	call   0x402df8
  401f6c:	mov    edx,0x1
  401f71:	mov    ebx,eax
  401f73:	mov    rcx,rdi
  401f76:	call   0x402c20
  401f7b:	mov    eax,ebx
  401f7d:	add    rsp,0x78
  401f81:	pop    rbx
  401f82:	pop    rsi
  401f83:	pop    rdi
  401f84:	pop    rbp
  401f85:	pop    r12
  401f87:	pop    r13
  401f89:	ret    
  401f8a:	nop
  401f8b:	nop
  401f8c:	nop
  401f8d:	nop
  401f8e:	nop
  401f8f:	nop
  401f90:	push   rbx
  401f91:	sub    rsp,0x20
  401f95:	mov    rbx,rcx
  401f98:	mov    rcx,QWORD PTR [rcx]
  401f9b:	call   0x402de0
  401fa0:	mov    rcx,QWORD PTR [rbx+0x8]
  401fa4:	call   0x402de0
  401fa9:	mov    rcx,rbx
  401fac:	add    rsp,0x20
  401fb0:	pop    rbx
  401fb1:	jmp    0x402de0
  401fb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401fc0:	push   rbp
  401fc1:	push   rdi
  401fc2:	push   rsi
  401fc3:	push   rbx
  401fc4:	sub    rsp,0x38
  401fc8:	cmp    r8d,0x1
  401fcc:	mov    rbp,rcx
  401fcf:	mov    rsi,rdx
  401fd2:	mov    ebx,r8d
  401fd5:	je     0x402049
  401fd7:	movsxd rax,r8d
  401fda:	sub    rax,0x1
  401fde:	jmp    0x401fe3
  401fe0:	mov    rax,r8
  401fe3:	sub    ebx,0x1
  401fe6:	cmp    BYTE PTR [rsi+rax*1-0x1],0x2f
  401feb:	lea    r8,[rax-0x1]
  401fef:	jne    0x401fe0
  401ff1:	mov    BYTE PTR [rsi+rax*1],0x0
  401ff5:	mov    rdx,rsi
  401ff8:	mov    rcx,rbp
  401ffb:	call   0x402da8
  402000:	test   rax,rax
  402003:	je     0x40200e
  402005:	add    rsp,0x38
  402009:	pop    rbx
  40200a:	pop    rsi
  40200b:	pop    rdi
  40200c:	pop    rbp
  40200d:	ret    
  40200e:	mov    rdx,rsi
  402011:	mov    rcx,rbp
  402014:	call   0x401ad0
  402019:	mov    rdx,rsi
  40201c:	mov    r8d,ebx
  40201f:	mov    rcx,rbp
  402022:	mov    rdi,rax
  402025:	call   0x401fc0
  40202a:	mov    rdx,rax
  40202d:	mov    rax,rdi
  402030:	test   rdx,rdx
  402033:	je     0x402005
  402035:	mov    rcx,rdi
  402038:	mov    QWORD PTR [rsp+0x28],rdi
  40203d:	call   0x401cb0
  402042:	mov    rax,QWORD PTR [rsp+0x28]
  402047:	jmp    0x402005
  402049:	xor    eax,eax
  40204b:	jmp    0x402005
  40204d:	nop    DWORD PTR [rax]
  402050:	push   r15
  402052:	push   r14
  402054:	push   r13
  402056:	push   r12
  402058:	push   rbp
  402059:	push   rdi
  40205a:	push   rsi
  40205b:	push   rbx
  40205c:	sub    rsp,0x78
  402060:	lea    rdi,[rip+0x5219]        # 0x407280
  402067:	mov    ecx,0xa
  40206c:	mov    QWORD PTR [rsp+0x68],0x0
  402075:	mov    rsi,rdx
  402078:	mov    rbx,r8
  40207b:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40207d:	mov    r12,r9
  402080:	je     0x402124
  402086:	lea    rdi,[rip+0x51fd]        # 0x40728a
  40208d:	mov    ecx,0x5
  402092:	mov    rsi,rdx
  402095:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402097:	jne    0x402113
  402099:	mov    rax,QWORD PTR [r8+0x30]
  40209d:	mov    rbp,QWORD PTR [rax]
  4020a0:	mov    rax,QWORD PTR [r8+0x18]
  4020a4:	mov    r8,QWORD PTR [r8+0x10]
  4020a8:	test   rax,rax
  4020ab:	cmove  rax,rbp
  4020af:	test   r8,r8
  4020b2:	je     0x402270
  4020b8:	lea    rdx,[rip+0x51d0]        # 0x40728f
  4020bf:	mov    QWORD PTR [rsp+0x20],0x0
  4020c8:	mov    r9,rax
  4020cb:	mov    rcx,rdx
  4020ce:	call   0x402e18
  4020d3:	mov    r14,rax
  4020d6:	mov    rcx,QWORD PTR [rbx]
  4020d9:	mov    rdx,r14
  4020dc:	call   0x402da8
  4020e1:	test   rax,rax
  4020e4:	je     0x402140
  4020e6:	lea    rcx,[rip+0x51ab]        # 0x407298
  4020ed:	call   0x402e48
  4020f2:	mov    rbx,rax
  4020f5:	call   0x402d60
  4020fa:	mov    QWORD PTR [rsp+0x20],r14
  4020ff:	mov    edx,eax
  402101:	mov    r9,rbx
  402104:	mov    r8d,0x5
  40210a:	mov    rcx,r12
  40210d:	call   0x402c90
  402112:	nop
  402113:	add    rsp,0x78
  402117:	pop    rbx
  402118:	pop    rsi
  402119:	pop    rdi
  40211a:	pop    rbp
  40211b:	pop    r12
  40211d:	pop    r13
  40211f:	pop    r14
  402121:	pop    r15
  402123:	ret    
  402124:	mov    rcx,QWORD PTR [r8+0x10]
  402128:	call   0x402de0
  40212d:	mov    QWORD PTR [rbx+0x10],0x0
  402135:	jmp    0x402113
  402137:	nop    WORD PTR [rax+rax*1+0x0]
  402140:	cmp    QWORD PTR [rip+0x9ef8],0x0        # 0x40c040
  402148:	je     0x402560
  40214e:	mov    rcx,rbp
  402151:	call   0x402ce0
  402156:	test   eax,eax
  402158:	jne    0x4024c4
  40215e:	mov    rax,QWORD PTR [rip+0x9edb]        # 0x40c040
  402165:	xor    edi,edi
  402167:	mov    rdx,QWORD PTR [rax]
  40216a:	test   rdx,rdx
  40216d:	jne    0x402196
  40216f:	jmp    0x402290
  402174:	mov    rcx,rsi
  402177:	call   0x402de0
  40217c:	mov    rax,QWORD PTR [rip+0x9ebd]        # 0x40c040
  402183:	lea    edx,[rdi+0x1]
  402186:	mov    rdi,rdx
  402189:	mov    rdx,QWORD PTR [rax+rdx*8]
  40218d:	test   rdx,rdx
  402190:	je     0x402290
  402196:	lea    rcx,[rip+0x50f2]        # 0x40728f
  40219d:	xor    r9d,r9d
  4021a0:	mov    r8,rbp
  4021a3:	call   0x402e18
  4021a8:	mov    edx,0x10
  4021ad:	mov    rcx,rax
  4021b0:	mov    rsi,rax
  4021b3:	mov    r13,rax
  4021b6:	call   0x402df0
  4021bb:	test   eax,eax
  4021bd:	je     0x402174
  4021bf:	test   r13,r13
  4021c2:	je     0x402290
  4021c8:	mov    ecx,0x28
  4021cd:	call   0x402d78
  4021d2:	mov    rcx,r13
  4021d5:	mov    r15,rax
  4021d8:	call   0x402c40
  4021dd:	mov    edx,DWORD PTR [rbx+0x8]
  4021e0:	mov    QWORD PTR [r15],rax
  4021e3:	test   edx,edx
  4021e5:	je     0x402410
  4021eb:	mov    rcx,QWORD PTR [rbx+0x28]
  4021ef:	test   rcx,rcx
  4021f2:	je     0x402589
  4021f8:	lea    rdx,[rip+0x5124]        # 0x407323
  4021ff:	mov    r8d,0xffffffff
  402205:	call   0x402c08
  40220a:	mov    rbp,QWORD PTR [rax]
  40220d:	mov    r10,rax
  402210:	test   rbp,rbp
  402213:	je     0x402581
  402219:	xor    eax,eax
  40221b:	xor    r11d,r11d
  40221e:	xor    edx,edx
  402220:	lea    r9,[rip+0x50fe]        # 0x407325
  402227:	mov    r8d,0x10
  40222d:	jmp    0x40225b
  40222f:	nop
  402230:	lea    rdi,[rip+0x50fe]        # 0x407335
  402237:	mov    rsi,rbp
  40223a:	mov    ecx,0xb
  40223f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402241:	jne    0x4024d4
  402247:	mov    eax,0x1
  40224c:	lea    ecx,[rdx+0x1]
  40224f:	mov    rbp,QWORD PTR [r10+rcx*8]
  402253:	mov    rdx,rcx
  402256:	test   rbp,rbp
  402259:	je     0x4022c0
  40225b:	mov    rsi,rbp
  40225e:	mov    rdi,r9
  402261:	mov    rcx,r8
  402264:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402266:	jne    0x402230
  402268:	mov    r11d,0x1
  40226e:	jmp    0x40224c
  402270:	lea    rdx,[rip+0x5018]        # 0x40728f
  402277:	xor    r9d,r9d
  40227a:	mov    r8,rax
  40227d:	mov    rcx,rdx
  402280:	call   0x402e18
  402285:	mov    r14,rax
  402288:	jmp    0x4020d6
  40228d:	nop    DWORD PTR [rax]
  402290:	lea    rcx,[rip+0x5031]        # 0x4072c8
  402297:	call   0x402e48
  40229c:	mov    rbx,rax
  40229f:	call   0x402b70
  4022a4:	mov    QWORD PTR [rsp+0x20],rbp
  4022a9:	mov    edx,eax
  4022ab:	mov    r9,rbx
  4022ae:	xor    r8d,r8d
  4022b1:	mov    rcx,r12
  4022b4:	call   0x402c90
  4022b9:	jmp    0x402113
  4022be:	xchg   ax,ax
  4022c0:	mov    rcx,r10
  4022c3:	mov    DWORD PTR [rsp+0x50],r11d
  4022c8:	mov    ebp,eax
  4022ca:	call   0x402c30
  4022cf:	mov    r11d,DWORD PTR [rsp+0x50]
  4022d4:	test   r11d,r11d
  4022d7:	je     0x402430
  4022dd:	cmp    QWORD PTR [rip+0x9d53],0x0        # 0x40c038
  4022e5:	je     0x402430
  4022eb:	lea    rcx,[rip+0x506d]        # 0x40735f
  4022f2:	call   0x402c40
  4022f7:	mov    rcx,rax
  4022fa:	mov    rsi,rax
  4022fd:	call   0x402d28
  402302:	cmp    eax,0xffffffff
  402305:	je     0x4026e8
  40230b:	mov    ecx,eax
  40230d:	call   0x4043d0
  402312:	lea    rax,[rip+0x5086]        # 0x40739f
  402319:	mov    r8,QWORD PTR [rip+0x9d18]        # 0x40c038
  402320:	lea    r9,[rip+0x5070]        # 0x407397
  402327:	mov    rdx,r12
  40232a:	mov    ecx,0x8
  40232f:	mov    QWORD PTR [rsp+0x40],0x0
  402338:	mov    QWORD PTR [rsp+0x28],rax
  40233d:	lea    rax,[rip+0x5064]        # 0x4073a8
  402344:	mov    QWORD PTR [rsp+0x38],r13
  402349:	mov    QWORD PTR [rsp+0x30],rsi
  40234e:	mov    QWORD PTR [rsp+0x20],rax
  402353:	call   0x402b40
  402358:	mov    rcx,r13
  40235b:	mov    rdi,rax
  40235e:	call   0x402de0
  402363:	test   rdi,rdi
  402366:	je     0x4027a5
  40236c:	xor    edx,edx
  40236e:	mov    rcx,rdi
  402371:	mov    r8,r12
  402374:	call   0x402b38
  402379:	test   eax,eax
  40237b:	mov    rcx,rdi
  40237e:	jne    0x402790
  402384:	xor    edi,edi
  402386:	xor    r13d,r13d
  402389:	call   0x402b88
  40238e:	xchg   ax,ax
  402390:	mov    rcx,QWORD PTR [rbx+0x18]
  402394:	call   0x402de0
  402399:	mov    rcx,QWORD PTR [rbx+0x30]
  40239d:	mov    edx,0x1
  4023a2:	mov    QWORD PTR [rbx+0x18],0x0
  4023aa:	call   0x402c20
  4023af:	mov    rcx,QWORD PTR [rbx+0x28]
  4023b3:	mov    QWORD PTR [rbx+0x30],0x0
  4023bb:	call   0x402de0
  4023c0:	mov    QWORD PTR [rbx+0x28],0x0
  4023c8:	mov    rcx,r13
  4023cb:	call   0x402de0
  4023d0:	test   rsi,rsi
  4023d3:	je     0x4023e5
  4023d5:	mov    rcx,rsi
  4023d8:	call   0x4043d8
  4023dd:	mov    rcx,rsi
  4023e0:	call   0x402de0
  4023e5:	test   rdi,rdi
  4023e8:	je     0x4023fa
  4023ea:	mov    rcx,rdi
  4023ed:	call   0x4043d8
  4023f2:	mov    rcx,rdi
  4023f5:	call   0x402de0
  4023fa:	test   r15,r15
  4023fd:	je     0x402113
  402403:	mov    rcx,r15
  402406:	call   0x401f90
  40240b:	jmp    0x402113
  402410:	xor    edi,edi
  402412:	xor    esi,esi
  402414:	mov    rcx,QWORD PTR [rbx]
  402417:	mov    r8,r15
  40241a:	mov    rdx,r14
  40241d:	xor    r15d,r15d
  402420:	call   0x402dc0
  402425:	jmp    0x402390
  40242a:	nop    WORD PTR [rax+rax*1+0x0]
  402430:	xor    esi,esi
  402432:	test   ebp,ebp
  402434:	je     0x402671
  40243a:	cmp    QWORD PTR [rip+0x9bee],0x0        # 0x40c030
  402442:	je     0x4027af
  402448:	lea    rcx,[rip+0x4f10]        # 0x40735f
  40244f:	call   0x402c40
  402454:	mov    rcx,rax
  402457:	mov    rdi,rax
  40245a:	call   0x402d28
  40245f:	cmp    eax,0xffffffff
  402462:	je     0x402739
  402468:	mov    ecx,eax
  40246a:	call   0x4043d0
  40246f:	mov    r8,QWORD PTR [rip+0x9bba]        # 0x40c030
  402476:	mov    r9,r13
  402479:	mov    rdx,r12
  40247c:	mov    ecx,0x8
  402481:	mov    QWORD PTR [rsp+0x28],0x0
  40248a:	mov    QWORD PTR [rsp+0x20],rdi
  40248f:	call   0x402b40
  402494:	mov    rcx,r13
  402497:	mov    rbp,rax
  40249a:	call   0x402de0
  40249f:	xor    edx,edx
  4024a1:	mov    rcx,rbp
  4024a4:	mov    r8,r12
  4024a7:	call   0x402b38
  4024ac:	test   eax,eax
  4024ae:	mov    rcx,rbp
  4024b1:	jne    0x4026d3
  4024b7:	call   0x402b88
  4024bc:	xor    r13d,r13d
  4024bf:	jmp    0x402390
  4024c4:	mov    rcx,rbp
  4024c7:	call   0x402c40
  4024cc:	mov    r13,rax
  4024cf:	jmp    0x4021bf
  4024d4:	lea    rcx,[rip+0x4e65]        # 0x407340
  4024db:	mov    QWORD PTR [rsp+0x50],r10
  4024e0:	call   0x402e48
  4024e5:	mov    rsi,rax
  4024e8:	call   0x402d60
  4024ed:	mov    rcx,r12
  4024f0:	mov    edx,eax
  4024f2:	mov    QWORD PTR [rsp+0x20],rbp
  4024f7:	mov    r9,rsi
  4024fa:	mov    r8d,0x5
  402500:	call   0x402c90
  402505:	mov    r10,QWORD PTR [rsp+0x50]
  40250a:	mov    rcx,r10
  40250d:	call   0x402c30
  402512:	mov    rcx,QWORD PTR [rbx+0x18]
  402516:	call   0x402de0
  40251b:	mov    rcx,QWORD PTR [rbx+0x30]
  40251f:	mov    edx,0x1
  402524:	mov    QWORD PTR [rbx+0x18],0x0
  40252c:	call   0x402c20
  402531:	mov    rcx,QWORD PTR [rbx+0x28]
  402535:	mov    QWORD PTR [rbx+0x30],0x0
  40253d:	call   0x402de0
  402542:	mov    QWORD PTR [rbx+0x28],0x0
  40254a:	mov    rcx,r13
  40254d:	call   0x402de0
  402552:	jmp    0x402403
  402557:	nop    WORD PTR [rax+rax*1+0x0]
  402560:	mov    edx,0x10
  402565:	mov    rcx,rbp
  402568:	call   0x402df0
  40256d:	test   eax,eax
  40256f:	jne    0x4026c3
  402575:	lea    rcx,[rip+0x4d7c]        # 0x4072f8
  40257c:	jmp    0x402297
  402581:	mov    rcx,rax
  402584:	call   0x402c30
  402589:	xor    edi,edi
  40258b:	xor    esi,esi
  40258d:	lea    rbp,[rsp+0x68]
  402592:	lea    rdx,[r15+0x8]
  402596:	lea    r8,[r15+0x18]
  40259a:	mov    rcx,r13
  40259d:	mov    r9,rbp
  4025a0:	call   0x402e08
  4025a5:	test   eax,eax
  4025a7:	je     0x402678
  4025ad:	mov    rax,QWORD PTR [r15+0x18]
  4025b1:	add    rax,0x1
  4025b5:	mov    QWORD PTR [r15+0x10],rax
  4025b9:	mov    eax,DWORD PTR [rbx+0x20]
  4025bc:	test   eax,eax
  4025be:	je     0x402414
  4025c4:	lea    r9,[rip+0x815]        # 0x402de0
  4025cb:	lea    r8,[rip+0x6ce]        # 0x402ca0
  4025d2:	xor    edx,edx
  4025d4:	xor    ecx,ecx
  4025d6:	call   0x402b60
  4025db:	xor    ecx,ecx
  4025dd:	mov    rbp,rax
  4025e0:	mov    edx,0x9
  4025e5:	mov    QWORD PTR [rsp+0x50],rax
  4025ea:	call   0x402b30
  4025ef:	mov    rcx,rbp
  4025f2:	mov    rdx,rax
  4025f5:	mov    QWORD PTR [rsp+0x58],rax
  4025fa:	call   0x402b80
  4025ff:	mov    r8,QWORD PTR [r15+0x18]
  402603:	mov    rdx,QWORD PTR [r15+0x8]
  402607:	xor    r9d,r9d
  40260a:	mov    QWORD PTR [rsp+0x28],0x0
  402613:	mov    QWORD PTR [rsp+0x20],0x0
  40261c:	mov    rcx,rax
  40261f:	mov    rbp,rax
  402622:	call   0x402b48
  402627:	test   eax,eax
  402629:	je     0x402640
  40262b:	xor    r8d,r8d
  40262e:	xor    edx,edx
  402630:	mov    rcx,rbp
  402633:	call   0x402b50
  402638:	test   eax,eax
  40263a:	jne    0x4027cf
  402640:	lea    rcx,[rip+0x4df5]        # 0x40743c
  402647:	call   0x402e48
  40264c:	mov    rbp,rax
  40264f:	call   0x402d60
  402654:	mov    QWORD PTR [rsp+0x20],r13
  402659:	mov    edx,eax
  40265b:	mov    r9,rbp
  40265e:	mov    r8d,0x5
  402664:	mov    rcx,r12
  402667:	call   0x402c90
  40266c:	jmp    0x402390
  402671:	xor    edi,edi
  402673:	jmp    0x40258d
  402678:	mov    rax,QWORD PTR [rsp+0x68]
  40267d:	lea    rcx,[rip+0x4d9e]        # 0x407422
  402684:	mov    r14,QWORD PTR [rax+0x8]
  402688:	call   0x402e48
  40268d:	mov    QWORD PTR [rsp+0x50],rax
  402692:	call   0x402d60
  402697:	mov    r9,QWORD PTR [rsp+0x50]
  40269c:	mov    rcx,r12
  40269f:	mov    edx,eax
  4026a1:	mov    QWORD PTR [rsp+0x28],r14
  4026a6:	mov    QWORD PTR [rsp+0x20],r13
  4026ab:	mov    r8d,0x5
  4026b1:	call   0x402c90
  4026b6:	mov    rcx,rbp
  4026b9:	call   0x402e10
  4026be:	jmp    0x402390
  4026c3:	mov    rcx,rbp
  4026c6:	call   0x402c40
  4026cb:	mov    r13,rax
  4026ce:	jmp    0x4021c8
  4026d3:	call   0x402b88
  4026d8:	mov    rcx,rdi
  4026db:	call   0x402c40
  4026e0:	mov    r13,rax
  4026e3:	jmp    0x40258d
  4026e8:	call   QWORD PTR [rip+0xb356]        # 0x40da44
  4026ee:	mov    edi,DWORD PTR [rax]
  4026f0:	mov    ecx,edi
  4026f2:	call   0x402c38
  4026f7:	lea    rcx,[rip+0x4c7a]        # 0x407378
  4026fe:	mov    r14,rax
  402701:	call   0x402e48
  402706:	mov    ecx,edi
  402708:	mov    rbp,rax
  40270b:	call   0x402b78
  402710:	mov    edi,eax
  402712:	call   0x402b70
  402717:	mov    rcx,r12
  40271a:	mov    edx,eax
  40271c:	mov    QWORD PTR [rsp+0x20],r14
  402721:	mov    r9,rbp
  402724:	mov    r8d,edi
  402727:	call   0x402c90
  40272c:	mov    rcx,rsi
  40272f:	call   0x402de0
  402734:	jmp    0x402512
  402739:	call   QWORD PTR [rip+0xb305]        # 0x40da44
  40273f:	mov    ebp,DWORD PTR [rax]
  402741:	mov    ecx,ebp
  402743:	call   0x402c38
  402748:	lea    rcx,[rip+0x4c29]        # 0x407378
  40274f:	mov    r14,rax
  402752:	call   0x402e48
  402757:	mov    ecx,ebp
  402759:	mov    QWORD PTR [rsp+0x50],rax
  40275e:	call   0x402b78
  402763:	mov    ebp,eax
  402765:	call   0x402b70
  40276a:	mov    r9,QWORD PTR [rsp+0x50]
  40276f:	mov    edx,eax
  402771:	mov    r8d,ebp
  402774:	mov    rcx,r12
  402777:	mov    QWORD PTR [rsp+0x20],r14
  40277c:	call   0x402c90
  402781:	mov    rcx,rdi
  402784:	xor    edi,edi
  402786:	call   0x402de0
  40278b:	jmp    0x402390
  402790:	call   0x402b88
  402795:	mov    rcx,rsi
  402798:	call   0x402c40
  40279d:	mov    r13,rax
  4027a0:	jmp    0x402432
  4027a5:	xor    edi,edi
  4027a7:	xor    r13d,r13d
  4027aa:	jmp    0x402390
  4027af:	call   0x402b70
  4027b4:	lea    r9,[rip+0x4bfd]        # 0x4073b8
  4027bb:	xor    r8d,r8d
  4027be:	mov    edx,eax
  4027c0:	mov    rcx,r12
  4027c3:	xor    edi,edi
  4027c5:	call   0x402c88
  4027ca:	jmp    0x402390
  4027cf:	mov    rcx,QWORD PTR [r15+0x8]
  4027d3:	call   0x402de0
  4027d8:	mov    r12,QWORD PTR [rsp+0x50]
  4027dd:	mov    rcx,r12
  4027e0:	call   0x402b68
  4027e5:	mov    rcx,r12
  4027e8:	mov    QWORD PTR [r15+0x10],rax
  4027ec:	call   0x402b58
  4027f1:	mov    rcx,QWORD PTR [rsp+0x58]
  4027f6:	mov    QWORD PTR [r15+0x8],rax
  4027fa:	call   0x402b88
  4027ff:	mov    rcx,r12
  402802:	call   0x402b88
  402807:	mov    rcx,rbp
  40280a:	call   0x402b88
  40280f:	or     DWORD PTR [r15+0x20],0x1
  402814:	jmp    0x402414
  402819:	nop    DWORD PTR [rax+0x0]
  402820:	push   r15
  402822:	push   r14
  402824:	push   r13
  402826:	push   r12
  402828:	push   rbp
  402829:	push   rdi
  40282a:	push   rsi
  40282b:	push   rbx
  40282c:	sub    rsp,0x78
  402830:	mov    r13,QWORD PTR [rsp+0xe0]
  402838:	mov    r12,QWORD PTR [rsp+0xe8]
  402840:	lea    rdi,[rip+0x4c0f]        # 0x407456
  402847:	mov    rbp,rdx
  40284a:	mov    r14,r8
  40284d:	mov    r15,r9
  402850:	call   0x402d40
  402855:	mov    rax,QWORD PTR [rax+0x8]
  402859:	mov    ecx,0xb
  40285e:	test   rax,rax
  402861:	je     0x402990
  402867:	mov    rbx,QWORD PTR [rax]
  40286a:	test   rbx,rbx
  40286d:	je     0x402990
  402873:	mov    rsi,rbx
  402876:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402878:	mov    ecx,0xa
  40287d:	lea    rdi,[rip+0x49fc]        # 0x407280
  402884:	seta   dl
  402887:	setb   al
  40288a:	cmp    dl,al
  40288c:	jne    0x4028e0
  40288e:	mov    rsi,rbp
  402891:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402893:	je     0x4029e0
  402899:	lea    rcx,[rip+0x4be8]        # 0x407488
  4028a0:	call   0x402e48
  4028a5:	mov    rdi,rax
  4028a8:	call   0x402d60
  4028ad:	mov    r9,rdi
  4028b0:	mov    edx,eax
  4028b2:	mov    r8d,0x3
  4028b8:	mov    rcx,r12
  4028bb:	mov    QWORD PTR [rsp+0xe8],rbx
  4028c3:	mov    QWORD PTR [rsp+0xe0],rbp
  4028cb:	add    rsp,0x78
  4028cf:	pop    rbx
  4028d0:	pop    rsi
  4028d1:	pop    rdi
  4028d2:	pop    rbp
  4028d3:	pop    r12
  4028d5:	pop    r13
  4028d7:	pop    r14
  4028d9:	pop    r15
  4028db:	jmp    0x402c90
  4028e0:	mov    rsi,rbx
  4028e3:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4028e5:	jne    0x402899
  4028e7:	lea    rdi,[rip+0x499c]        # 0x40728a
  4028ee:	mov    ecx,0x5
  4028f3:	mov    rsi,rbp
  4028f6:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4028f8:	jne    0x402899
  4028fa:	lea    rax,[r13+0x28]
  4028fe:	mov    r9,r12
  402901:	mov    r8,r15
  402904:	mov    rdx,r14
  402907:	mov    rcx,rbp
  40290a:	mov    DWORD PTR [rsp+0x68],0x0
  402912:	mov    QWORD PTR [rsp+0x60],rax
  402917:	lea    rax,[rip+0x4b4a]        # 0x407468
  40291e:	mov    DWORD PTR [rsp+0x50],0x10002
  402926:	mov    DWORD PTR [rsp+0x38],0x10003
  40292e:	mov    DWORD PTR [rsp+0x20],0x10002
  402936:	mov    QWORD PTR [rsp+0x58],rax
  40293b:	lea    rax,[r13+0x20]
  40293f:	mov    QWORD PTR [rsp+0x48],rax
  402944:	lea    rax,[rip+0x4b28]        # 0x407473
  40294b:	mov    QWORD PTR [rsp+0x40],rax
  402950:	lea    rax,[r13+0x18]
  402954:	mov    QWORD PTR [rsp+0x30],rax
  402959:	lea    rax,[rip+0x4b1e]        # 0x40747e
  402960:	mov    QWORD PTR [rsp+0x28],rax
  402965:	call   0x402d68
  40296a:	lea    rcx,[rip+0x4b13]        # 0x407484
  402971:	call   0x402c10
  402976:	mov    QWORD PTR [r13+0x30],rax
  40297a:	add    rsp,0x78
  40297e:	pop    rbx
  40297f:	pop    rsi
  402980:	pop    rdi
  402981:	pop    rbp
  402982:	pop    r12
  402984:	pop    r13
  402986:	pop    r14
  402988:	pop    r15
  40298a:	ret    
  40298b:	nop    DWORD PTR [rax+rax*1+0x0]
  402990:	mov    rsi,rbp
  402993:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402995:	je     0x40297a
  402997:	lea    rcx,[rip+0x4b12]        # 0x4074b0
  40299e:	call   0x402e48
  4029a3:	mov    rbx,rax
  4029a6:	call   0x402d60
  4029ab:	mov    r9,rbx
  4029ae:	mov    edx,eax
  4029b0:	mov    r8d,0x3
  4029b6:	mov    rcx,r12
  4029b9:	mov    QWORD PTR [rsp+0xe0],rbp
  4029c1:	add    rsp,0x78
  4029c5:	pop    rbx
  4029c6:	pop    rsi
  4029c7:	pop    rdi
  4029c8:	pop    rbp
  4029c9:	pop    r12
  4029cb:	pop    r13
  4029cd:	pop    r14
  4029cf:	pop    r15
  4029d1:	jmp    0x402c90
  4029d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4029e0:	lea    rax,[rip+0x4a7a]        # 0x407461
  4029e7:	add    r13,0x10
  4029eb:	mov    DWORD PTR [rsp+0x38],0x0
  4029f3:	mov    QWORD PTR [rsp+0x30],r13
  4029f8:	mov    DWORD PTR [rsp+0x20],0x10002
  402a00:	mov    r9,r12
  402a03:	mov    QWORD PTR [rsp+0x28],rax
  402a08:	mov    r8,r15
  402a0b:	mov    rdx,r14
  402a0e:	mov    rcx,rbp
  402a11:	call   0x402d68
  402a16:	jmp    0x40297a
  402a1b:	nop    DWORD PTR [rax+rax*1+0x0]
  402a20:	push   rbx
  402a21:	sub    rsp,0x20
  402a25:	mov    rax,QWORD PTR [rcx+0x8]
  402a29:	mov    rbx,rcx
  402a2c:	lea    rcx,[rax+0x1]
  402a30:	cmp    rcx,QWORD PTR [rbx+0x10]
  402a34:	jae    0x402a55
  402a36:	mov    r8,QWORD PTR [rbx]
  402a39:	mov    QWORD PTR [rbx+0x8],rcx
  402a3d:	mov    BYTE PTR [r8+rax*1],dl
  402a41:	mov    rax,QWORD PTR [rbx+0x8]
  402a45:	mov    rdx,QWORD PTR [rbx]
  402a48:	mov    BYTE PTR [rdx+rax*1],0x0
  402a4c:	mov    rax,rbx
  402a4f:	add    rsp,0x20
  402a53:	pop    rbx
  402a54:	ret    
  402a55:	movsx  r8d,dl
  402a59:	mov    rcx,rbx
  402a5c:	mov    rdx,0xffffffffffffffff
  402a63:	call   0x402c18
  402a68:	mov    rax,rbx
  402a6b:	add    rsp,0x20
  402a6f:	pop    rbx
  402a70:	ret    
  402a71:	nop    DWORD PTR [rax+rax*1+0x0]
  402a76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402a80:	push   rdi
  402a81:	push   rsi
  402a82:	push   rbx
  402a83:	sub    rsp,0x20
  402a87:	mov    rsi,QWORD PTR [rsp+0x60]
  402a8c:	test   r8,r8
  402a8f:	je     0x402ac5
  402a91:	mov    rax,QWORD PTR [rip+0xab9c]        # 0x40d634
  402a98:	mov    r11,QWORD PTR [rax]
  402a9b:	movzx  eax,BYTE PTR [rdx]
  402a9e:	test   BYTE PTR [r11+rax*2+0x1],0x1
  402aa4:	je     0x402ad0
  402aa6:	lea    rax,[rdx+0x1]
  402aaa:	lea    rbx,[rdx+r8*1]
  402aae:	jmp    0x402ac0
  402ab0:	movzx  r10d,BYTE PTR [rax]
  402ab4:	add    rax,0x1
  402ab8:	test   BYTE PTR [r11+r10*2+0x1],0x1
  402abe:	je     0x402ad0
  402ac0:	cmp    rax,rbx
  402ac3:	jne    0x402ab0
  402ac5:	add    rsp,0x20
  402ac9:	pop    rbx
  402aca:	pop    rsi
  402acb:	pop    rdi
  402acc:	ret    
  402acd:	nop    DWORD PTR [rax]
  402ad0:	mov    rax,QWORD PTR [r9+0x30]
  402ad4:	test   rax,rax
  402ad7:	je     0x402ae8
  402ad9:	mov    rcx,rax
  402adc:	add    rsp,0x20
  402ae0:	pop    rbx
  402ae1:	pop    rsi
  402ae2:	pop    rdi
  402ae3:	jmp    0x402c28
  402ae8:	call   0x402d48
  402aed:	lea    rcx,[rip+0x49e4]        # 0x4074d8
  402af4:	mov    rdi,rax
  402af7:	call   0x402e48
  402afc:	mov    rbx,rax
  402aff:	call   0x402d60
  402b04:	mov    r9,rbx
  402b07:	mov    edx,eax
  402b09:	mov    r8d,0x5
  402b0f:	mov    rcx,rsi
  402b12:	mov    QWORD PTR [rsp+0x60],rdi
  402b17:	add    rsp,0x20
  402b1b:	pop    rbx
  402b1c:	pop    rsi
  402b1d:	pop    rdi
  402b1e:	jmp    0x402c90
  402b23:	nop
  402b24:	nop
  402b25:	nop
  402b26:	nop
  402b27:	nop
  402b28:	nop
  402b29:	nop
  402b2a:	nop
  402b2b:	nop
  402b2c:	nop
  402b2d:	nop
  402b2e:	nop
  402b2f:	nop
  402b30:	jmp    QWORD PTR [rip+0xaae6]        # 0x40d61c
  402b36:	nop
  402b37:	nop
  402b38:	jmp    QWORD PTR [rip+0xaad6]        # 0x40d614
  402b3e:	nop
  402b3f:	nop
  402b40:	jmp    QWORD PTR [rip+0xaac6]        # 0x40d60c
  402b46:	nop
  402b47:	nop
  402b48:	jmp    QWORD PTR [rip+0xaab6]        # 0x40d604
  402b4e:	nop
  402b4f:	nop
  402b50:	jmp    QWORD PTR [rip+0xaaa6]        # 0x40d5fc
  402b56:	nop
  402b57:	nop
  402b58:	jmp    QWORD PTR [rip+0xaa96]        # 0x40d5f4
  402b5e:	nop
  402b5f:	nop
  402b60:	jmp    QWORD PTR [rip+0xaa86]        # 0x40d5ec
  402b66:	nop
  402b67:	nop
  402b68:	jmp    QWORD PTR [rip+0xaa76]        # 0x40d5e4
  402b6e:	nop
  402b6f:	nop
  402b70:	jmp    QWORD PTR [rip+0xaa66]        # 0x40d5dc
  402b76:	nop
  402b77:	nop
  402b78:	jmp    QWORD PTR [rip+0xaa56]        # 0x40d5d4
  402b7e:	nop
  402b7f:	nop
  402b80:	jmp    QWORD PTR [rip+0xaa46]        # 0x40d5cc
  402b86:	nop
  402b87:	nop
  402b88:	jmp    QWORD PTR [rip+0xad56]        # 0x40d8e4
  402b8e:	nop
  402b8f:	nop
  402b90:	jmp    QWORD PTR [rip+0xad3e]        # 0x40d8d4
  402b96:	nop
  402b97:	nop
  402b98:	jmp    QWORD PTR [rip+0xad2e]        # 0x40d8cc
  402b9e:	nop
  402b9f:	nop
  402ba0:	jmp    QWORD PTR [rip+0xad1e]        # 0x40d8c4
  402ba6:	nop
  402ba7:	nop
  402ba8:	jmp    QWORD PTR [rip+0xad0e]        # 0x40d8bc
  402bae:	nop
  402baf:	nop
  402bb0:	jmp    QWORD PTR [rip+0xacfe]        # 0x40d8b4
  402bb6:	nop
  402bb7:	nop
  402bb8:	jmp    QWORD PTR [rip+0xacee]        # 0x40d8ac
  402bbe:	nop
  402bbf:	nop
  402bc0:	jmp    QWORD PTR [rip+0xacde]        # 0x40d8a4
  402bc6:	nop
  402bc7:	nop
  402bc8:	jmp    QWORD PTR [rip+0xacce]        # 0x40d89c
  402bce:	nop
  402bcf:	nop
  402bd0:	jmp    QWORD PTR [rip+0xacbe]        # 0x40d894
  402bd6:	nop
  402bd7:	nop
  402bd8:	jmp    QWORD PTR [rip+0xacae]        # 0x40d88c
  402bde:	nop
  402bdf:	nop
  402be0:	jmp    QWORD PTR [rip+0xac9e]        # 0x40d884
  402be6:	nop
  402be7:	nop
  402be8:	jmp    QWORD PTR [rip+0xac8e]        # 0x40d87c
  402bee:	nop
  402bef:	nop
  402bf0:	jmp    QWORD PTR [rip+0xac7e]        # 0x40d874
  402bf6:	nop
  402bf7:	nop
  402bf8:	jmp    QWORD PTR [rip+0xac6e]        # 0x40d86c
  402bfe:	nop
  402bff:	nop
  402c00:	jmp    QWORD PTR [rip+0xac5e]        # 0x40d864
  402c06:	nop
  402c07:	nop
  402c08:	jmp    QWORD PTR [rip+0xac4e]        # 0x40d85c
  402c0e:	nop
  402c0f:	nop
  402c10:	jmp    QWORD PTR [rip+0xac3e]        # 0x40d854
  402c16:	nop
  402c17:	nop
  402c18:	jmp    QWORD PTR [rip+0xac2e]        # 0x40d84c
  402c1e:	nop
  402c1f:	nop
  402c20:	jmp    QWORD PTR [rip+0xac1e]        # 0x40d844
  402c26:	nop
  402c27:	nop
  402c28:	jmp    QWORD PTR [rip+0xac0e]        # 0x40d83c
  402c2e:	nop
  402c2f:	nop
  402c30:	jmp    QWORD PTR [rip+0xabfe]        # 0x40d834
  402c36:	nop
  402c37:	nop
  402c38:	jmp    QWORD PTR [rip+0xabee]        # 0x40d82c
  402c3e:	nop
  402c3f:	nop
  402c40:	jmp    QWORD PTR [rip+0xabde]        # 0x40d824
  402c46:	nop
  402c47:	nop
  402c48:	jmp    QWORD PTR [rip+0xabce]        # 0x40d81c
  402c4e:	nop
  402c4f:	nop
  402c50:	jmp    QWORD PTR [rip+0xabbe]        # 0x40d814
  402c56:	nop
  402c57:	nop
  402c58:	jmp    QWORD PTR [rip+0xabae]        # 0x40d80c
  402c5e:	nop
  402c5f:	nop
  402c60:	jmp    QWORD PTR [rip+0xab9e]        # 0x40d804
  402c66:	nop
  402c67:	nop
  402c68:	jmp    QWORD PTR [rip+0xab8e]        # 0x40d7fc
  402c6e:	nop
  402c6f:	nop
  402c70:	jmp    QWORD PTR [rip+0xab7e]        # 0x40d7f4
  402c76:	nop
  402c77:	nop
  402c78:	jmp    QWORD PTR [rip+0xab6e]        # 0x40d7ec
  402c7e:	nop
  402c7f:	nop
  402c80:	jmp    QWORD PTR [rip+0xab5e]        # 0x40d7e4
  402c86:	nop
  402c87:	nop
  402c88:	jmp    QWORD PTR [rip+0xab4e]        # 0x40d7dc
  402c8e:	nop
  402c8f:	nop
  402c90:	jmp    QWORD PTR [rip+0xab3e]        # 0x40d7d4
  402c96:	nop
  402c97:	nop
  402c98:	jmp    QWORD PTR [rip+0xab2e]        # 0x40d7cc
  402c9e:	nop
  402c9f:	nop
  402ca0:	jmp    QWORD PTR [rip+0xab1e]        # 0x40d7c4
  402ca6:	nop
  402ca7:	nop
  402ca8:	jmp    QWORD PTR [rip+0xab0e]        # 0x40d7bc
  402cae:	nop
  402caf:	nop
  402cb0:	jmp    QWORD PTR [rip+0xaafe]        # 0x40d7b4
  402cb6:	nop
  402cb7:	nop
  402cb8:	jmp    QWORD PTR [rip+0xaaee]        # 0x40d7ac
  402cbe:	nop
  402cbf:	nop
  402cc0:	jmp    QWORD PTR [rip+0xaade]        # 0x40d7a4
  402cc6:	nop
  402cc7:	nop
  402cc8:	jmp    QWORD PTR [rip+0xaace]        # 0x40d79c
  402cce:	nop
  402ccf:	nop
  402cd0:	jmp    QWORD PTR [rip+0xaabe]        # 0x40d794
  402cd6:	nop
  402cd7:	nop
  402cd8:	jmp    QWORD PTR [rip+0xaaae]        # 0x40d78c
  402cde:	nop
  402cdf:	nop
  402ce0:	jmp    QWORD PTR [rip+0xaa9e]        # 0x40d784
  402ce6:	nop
  402ce7:	nop
  402ce8:	jmp    QWORD PTR [rip+0xaa8e]        # 0x40d77c
  402cee:	nop
  402cef:	nop
  402cf0:	jmp    QWORD PTR [rip+0xaa7e]        # 0x40d774
  402cf6:	nop
  402cf7:	nop
  402cf8:	jmp    QWORD PTR [rip+0xaa6e]        # 0x40d76c
  402cfe:	nop
  402cff:	nop
  402d00:	jmp    QWORD PTR [rip+0xaa5e]        # 0x40d764
  402d06:	nop
  402d07:	nop
  402d08:	jmp    QWORD PTR [rip+0xaa4e]        # 0x40d75c
  402d0e:	nop
  402d0f:	nop
  402d10:	jmp    QWORD PTR [rip+0xaa3e]        # 0x40d754
  402d16:	nop
  402d17:	nop
  402d18:	jmp    QWORD PTR [rip+0xaa2e]        # 0x40d74c
  402d1e:	nop
  402d1f:	nop
  402d20:	jmp    QWORD PTR [rip+0xaa1e]        # 0x40d744
  402d26:	nop
  402d27:	nop
  402d28:	jmp    QWORD PTR [rip+0xaa0e]        # 0x40d73c
  402d2e:	nop
  402d2f:	nop
  402d30:	jmp    QWORD PTR [rip+0xa9fe]        # 0x40d734
  402d36:	nop
  402d37:	nop
  402d38:	jmp    QWORD PTR [rip+0xa9ee]        # 0x40d72c
  402d3e:	nop
  402d3f:	nop
  402d40:	jmp    QWORD PTR [rip+0xa9de]        # 0x40d724
  402d46:	nop
  402d47:	nop
  402d48:	jmp    QWORD PTR [rip+0xa9ce]        # 0x40d71c
  402d4e:	nop
  402d4f:	nop
  402d50:	jmp    QWORD PTR [rip+0xa9be]        # 0x40d714
  402d56:	nop
  402d57:	nop
  402d58:	jmp    QWORD PTR [rip+0xa9ae]        # 0x40d70c
  402d5e:	nop
  402d5f:	nop
  402d60:	jmp    QWORD PTR [rip+0xa99e]        # 0x40d704
  402d66:	nop
  402d67:	nop
  402d68:	jmp    QWORD PTR [rip+0xa98e]        # 0x40d6fc
  402d6e:	nop
  402d6f:	nop
  402d70:	jmp    QWORD PTR [rip+0xa97e]        # 0x40d6f4
  402d76:	nop
  402d77:	nop
  402d78:	jmp    QWORD PTR [rip+0xa96e]        # 0x40d6ec
  402d7e:	nop
  402d7f:	nop
  402d80:	jmp    QWORD PTR [rip+0xa95e]        # 0x40d6e4
  402d86:	nop
  402d87:	nop
  402d88:	jmp    QWORD PTR [rip+0xa94e]        # 0x40d6dc
  402d8e:	nop
  402d8f:	nop
  402d90:	jmp    QWORD PTR [rip+0xa93e]        # 0x40d6d4
  402d96:	nop
  402d97:	nop
  402d98:	jmp    QWORD PTR [rip+0xa92e]        # 0x40d6cc
  402d9e:	nop
  402d9f:	nop
  402da0:	jmp    QWORD PTR [rip+0xa91e]        # 0x40d6c4
  402da6:	nop
  402da7:	nop
  402da8:	jmp    QWORD PTR [rip+0xa90e]        # 0x40d6bc
  402dae:	nop
  402daf:	nop
  402db0:	jmp    QWORD PTR [rip+0xa8fe]        # 0x40d6b4
  402db6:	nop
  402db7:	nop
  402db8:	jmp    QWORD PTR [rip+0xa8ee]        # 0x40d6ac
  402dbe:	nop
  402dbf:	nop
  402dc0:	jmp    QWORD PTR [rip+0xa8de]        # 0x40d6a4
  402dc6:	nop
  402dc7:	nop
  402dc8:	jmp    QWORD PTR [rip+0xa8ce]        # 0x40d69c
  402dce:	nop
  402dcf:	nop
  402dd0:	jmp    QWORD PTR [rip+0xa8be]        # 0x40d694
  402dd6:	nop
  402dd7:	nop
  402dd8:	jmp    QWORD PTR [rip+0xa8ae]        # 0x40d68c
  402dde:	nop
  402ddf:	nop
  402de0:	jmp    QWORD PTR [rip+0xa89e]        # 0x40d684
  402de6:	nop
  402de7:	nop
  402de8:	jmp    QWORD PTR [rip+0xa88e]        # 0x40d67c
  402dee:	nop
  402def:	nop
  402df0:	jmp    QWORD PTR [rip+0xa87e]        # 0x40d674
  402df6:	nop
  402df7:	nop
  402df8:	jmp    QWORD PTR [rip+0xa86e]        # 0x40d66c
  402dfe:	nop
  402dff:	nop
  402e00:	jmp    QWORD PTR [rip+0xa85e]        # 0x40d664
  402e06:	nop
  402e07:	nop
  402e08:	jmp    QWORD PTR [rip+0xa84e]        # 0x40d65c
  402e0e:	nop
  402e0f:	nop
  402e10:	jmp    QWORD PTR [rip+0xa83e]        # 0x40d654
  402e16:	nop
  402e17:	nop
  402e18:	jmp    QWORD PTR [rip+0xa82e]        # 0x40d64c
  402e1e:	nop
  402e1f:	nop
  402e20:	jmp    QWORD PTR [rip+0xa81e]        # 0x40d644
  402e26:	nop
  402e27:	nop
  402e28:	jmp    QWORD PTR [rip+0xa80e]        # 0x40d63c
  402e2e:	nop
  402e2f:	nop
  402e30:	jmp    QWORD PTR [rip+0xa7f6]        # 0x40d62c
  402e36:	nop
  402e37:	nop
  402e38:	jmp    QWORD PTR [rip+0xaade]        # 0x40d91c
  402e3e:	nop
  402e3f:	nop
  402e40:	jmp    QWORD PTR [rip+0xaace]        # 0x40d914
  402e46:	nop
  402e47:	nop
  402e48:	jmp    QWORD PTR [rip+0xaabe]        # 0x40d90c
  402e4e:	nop
  402e4f:	nop
  402e50:	jmp    QWORD PTR [rip+0xaaae]        # 0x40d904
  402e56:	nop
  402e57:	nop
  402e58:	jmp    QWORD PTR [rip+0xaa9e]        # 0x40d8fc
  402e5e:	nop
  402e5f:	nop
  402e60:	jmp    QWORD PTR [rip+0xaa8e]        # 0x40d8f4
  402e66:	nop
  402e67:	nop
  402e68:	nop    DWORD PTR [rax+rax*1+0x0]
  402e70:	push   rbx
  402e71:	sub    rsp,0x30
  402e75:	mov    rbx,rcx
  402e78:	mov    rcx,QWORD PTR [rip+0x9b91]        # 0x40ca10
  402e7f:	call   0x403420
  402e84:	cmp    rax,0xffffffffffffffff
  402e88:	mov    QWORD PTR [rsp+0x20],rax
  402e8d:	je     0x402f05
  402e8f:	mov    ecx,0x8
  402e94:	call   0x404470
  402e99:	mov    rcx,QWORD PTR [rip+0x9b70]        # 0x40ca10
  402ea0:	call   0x403420
  402ea5:	mov    rcx,QWORD PTR [rip+0x9b6c]        # 0x40ca18
  402eac:	mov    QWORD PTR [rsp+0x20],rax
  402eb1:	call   0x403420
  402eb6:	lea    rdx,[rsp+0x20]
  402ebb:	lea    r8,[rsp+0x28]
  402ec0:	mov    rcx,rbx
  402ec3:	mov    QWORD PTR [rsp+0x28],rax
  402ec8:	call   0x4044c0
  402ecd:	mov    rcx,QWORD PTR [rsp+0x20]
  402ed2:	mov    rbx,rax
  402ed5:	call   0x403430
  402eda:	mov    rcx,QWORD PTR [rsp+0x28]
  402edf:	mov    QWORD PTR [rip+0x9b2a],rax        # 0x40ca10
  402ee6:	call   0x403430
  402eeb:	mov    ecx,0x8
  402ef0:	mov    QWORD PTR [rip+0x9b21],rax        # 0x40ca18
  402ef7:	call   0x404460
  402efc:	mov    rax,rbx
  402eff:	add    rsp,0x30
  402f03:	pop    rbx
  402f04:	ret    
  402f05:	mov    rax,QWORD PTR [rip+0x64d4]        # 0x4093e0
  402f0c:	mov    rcx,rbx
  402f0f:	call   QWORD PTR [rax]
  402f11:	add    rsp,0x30
  402f15:	pop    rbx
  402f16:	ret    
  402f17:	nop    WORD PTR [rax+rax*1+0x0]
  402f20:	sub    rsp,0x28
  402f24:	call   0x402e70
  402f29:	test   rax,rax
  402f2c:	sete   al
  402f2f:	movzx  eax,al
  402f32:	neg    eax
  402f34:	add    rsp,0x28
  402f38:	ret    
  402f39:	nop
  402f3a:	nop
  402f3b:	nop
  402f3c:	nop
  402f3d:	nop
  402f3e:	nop
  402f3f:	nop
  402f40:	sub    rsp,0x28
  402f44:	mov    rax,QWORD PTR [rip+0x30c5]        # 0x406010
  402f4b:	mov    rax,QWORD PTR [rax]
  402f4e:	test   rax,rax
  402f51:	je     0x402f70
  402f53:	call   rax
  402f55:	mov    rax,QWORD PTR [rip+0x30b4]        # 0x406010
  402f5c:	lea    rdx,[rax+0x8]
  402f60:	mov    rax,QWORD PTR [rax+0x8]
  402f64:	mov    QWORD PTR [rip+0x30a5],rdx        # 0x406010
  402f6b:	test   rax,rax
  402f6e:	jne    0x402f53
  402f70:	add    rsp,0x28
  402f74:	ret    
  402f75:	nop
  402f76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402f80:	push   rsi
  402f81:	push   rbx
  402f82:	sub    rsp,0x28
  402f86:	mov    rsi,QWORD PTR [rip+0x63d3]        # 0x409360
  402f8d:	mov    rax,QWORD PTR [rsi]
  402f90:	cmp    eax,0xffffffff
  402f93:	mov    ebx,eax
  402f95:	je     0x402fc0
  402f97:	test   ebx,ebx
  402f99:	je     0x402faa
  402f9b:	nop    DWORD PTR [rax+rax*1+0x0]
  402fa0:	mov    eax,ebx
  402fa2:	call   QWORD PTR [rsi+rax*8]
  402fa5:	sub    ebx,0x1
  402fa8:	jne    0x402fa0
  402faa:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x402f40
  402fb1:	add    rsp,0x28
  402fb5:	pop    rbx
  402fb6:	pop    rsi
  402fb7:	jmp    0x402f20
  402fbc:	nop    DWORD PTR [rax+0x0]
  402fc0:	xor    ebx,ebx
  402fc2:	jmp    0x402fc6
  402fc4:	mov    ebx,eax
  402fc6:	lea    edx,[rbx+0x1]
  402fc9:	cmp    QWORD PTR [rsi+rdx*8],0x0
  402fce:	mov    rax,rdx
  402fd1:	jne    0x402fc4
  402fd3:	jmp    0x402f97
  402fd5:	nop
  402fd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402fe0:	mov    eax,DWORD PTR [rip+0x906a]        # 0x40c050
  402fe6:	test   eax,eax
  402fe8:	je     0x402ff0
  402fea:	repz ret 
  402fec:	nop    DWORD PTR [rax+0x0]
  402ff0:	mov    DWORD PTR [rip+0x9056],0x1        # 0x40c050
  402ffa:	jmp    0x402f80
  402ffc:	nop
  402ffd:	nop
  402ffe:	nop
  402fff:	nop
  403000:	mov    rax,QWORD PTR [rip+0xaa0d]        # 0x40da14
  403007:	rex.W jmp rax
  40300a:	nop
  40300b:	nop
  40300c:	nop
  40300d:	nop
  40300e:	nop
  40300f:	nop
  403010:	xor    eax,eax
  403012:	ret    
  403013:	nop
  403014:	nop
  403015:	nop
  403016:	nop
  403017:	nop
  403018:	nop
  403019:	nop
  40301a:	nop
  40301b:	nop
  40301c:	nop
  40301d:	nop
  40301e:	nop
  40301f:	nop
  403020:	push   r12
  403022:	push   rbp
  403023:	push   rdi
  403024:	push   rsi
  403025:	push   rbx
  403026:	sub    rsp,0x40
  40302a:	mov    rbx,QWORD PTR [rip+0x303f]        # 0x406070
  403031:	movabs rax,0x2b992ddfa232
  40303b:	mov    QWORD PTR [rsp+0x20],0x0
  403044:	cmp    rbx,rax
  403047:	je     0x403060
  403049:	not    rbx
  40304c:	mov    QWORD PTR [rip+0x302d],rbx        # 0x406080
  403053:	add    rsp,0x40
  403057:	pop    rbx
  403058:	pop    rsi
  403059:	pop    rdi
  40305a:	pop    rbp
  40305b:	pop    r12
  40305d:	ret    
  40305e:	xchg   ax,ax
  403060:	lea    rcx,[rsp+0x20]
  403065:	call   QWORD PTR [rip+0xa8f9]        # 0x40d964
  40306b:	mov    r12,QWORD PTR [rsp+0x20]
  403070:	call   QWORD PTR [rip+0xa8ce]        # 0x40d944
  403076:	mov    ebp,eax
  403078:	call   QWORD PTR [rip+0xa8ce]        # 0x40d94c
  40307e:	mov    edi,eax
  403080:	call   QWORD PTR [rip+0xa8e6]        # 0x40d96c
  403086:	lea    rcx,[rsp+0x30]
  40308b:	mov    esi,eax
  40308d:	call   QWORD PTR [rip+0xa8f1]        # 0x40d984
  403093:	xor    r12,QWORD PTR [rsp+0x30]
  403098:	mov    edx,edi
  40309a:	movabs rax,0xffffffffffff
  4030a4:	xor    rbp,r12
  4030a7:	mov    rdi,rbp
  4030aa:	xor    rdi,rdx
  4030ad:	mov    edx,esi
  4030af:	xor    rdi,rdx
  4030b2:	mov    rsi,rdi
  4030b5:	and    rsi,rax
  4030b8:	cmp    rsi,rbx
  4030bb:	je     0x4030e0
  4030bd:	mov    rax,rsi
  4030c0:	not    rax
  4030c3:	mov    QWORD PTR [rip+0x2fa6],rsi        # 0x406070
  4030ca:	mov    QWORD PTR [rip+0x2faf],rax        # 0x406080
  4030d1:	add    rsp,0x40
  4030d5:	pop    rbx
  4030d6:	pop    rsi
  4030d7:	pop    rdi
  4030d8:	pop    rbp
  4030d9:	pop    r12
  4030db:	ret    
  4030dc:	nop    DWORD PTR [rax+0x0]
  4030e0:	movabs rax,0xffffd466d2205dcc
  4030ea:	movabs rsi,0x2b992ddfa233
  4030f4:	jmp    0x4030c3
  4030f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403100:	push   rbp
  403101:	push   rsi
  403102:	push   rbx
  403103:	mov    rbp,rsp
  403106:	sub    rsp,0x70
  40310a:	mov    rsi,rcx
  40310d:	lea    rcx,[rip+0x8f6c]        # 0x40c080
  403114:	call   QWORD PTR [rip+0xa87a]        # 0x40d994
  40311a:	mov    rbx,QWORD PTR [rip+0x9057]        # 0x40c178
  403121:	xor    r8d,r8d
  403124:	lea    rdx,[rbp-0x28]
  403128:	mov    rcx,rbx
  40312b:	call   QWORD PTR [rip+0xa86b]        # 0x40d99c
  403131:	test   rax,rax
  403134:	mov    r9,rax
  403137:	je     0x4031e0
  40313d:	lea    rax,[rbp-0x20]
  403141:	mov    QWORD PTR [rsp+0x38],0x0
  40314a:	mov    r8,rbx
  40314d:	mov    rdx,QWORD PTR [rbp-0x28]
  403151:	xor    ecx,ecx
  403153:	mov    QWORD PTR [rsp+0x30],rax
  403158:	lea    rax,[rbp-0x18]
  40315c:	mov    QWORD PTR [rsp+0x28],rax
  403161:	lea    rax,[rip+0x8f18]        # 0x40c080
  403168:	mov    QWORD PTR [rsp+0x20],rax
  40316d:	call   QWORD PTR [rip+0xa831]        # 0x40d9a4
  403173:	mov    rax,QWORD PTR [rip+0x8ffe]        # 0x40c178
  40317a:	xor    ecx,ecx
  40317c:	mov    QWORD PTR [rip+0x8f7d],rsi        # 0x40c100
  403183:	mov    DWORD PTR [rip+0x93f3],0xc0000409        # 0x40c580
  40318d:	mov    DWORD PTR [rip+0x93ed],0x1        # 0x40c584
  403197:	mov    QWORD PTR [rip+0x93f2],rax        # 0x40c590
  40319e:	mov    rax,QWORD PTR [rip+0x2ecb]        # 0x406070
  4031a5:	mov    QWORD PTR [rbp-0x10],rax
  4031a9:	mov    rax,QWORD PTR [rip+0x2ed0]        # 0x406080
  4031b0:	mov    QWORD PTR [rbp-0x8],rax
  4031b4:	call   QWORD PTR [rip+0xa7f2]        # 0x40d9ac
  4031ba:	lea    rcx,[rip+0x5eff]        # 0x4090c0
  4031c1:	call   QWORD PTR [rip+0xa805]        # 0x40d9cc
  4031c7:	call   QWORD PTR [rip+0xa76f]        # 0x40d93c
  4031cd:	mov    edx,0xc0000409
  4031d2:	mov    rcx,rax
  4031d5:	call   QWORD PTR [rip+0xa7e1]        # 0x40d9bc
  4031db:	call   0x404458
  4031e0:	mov    rax,QWORD PTR [rbp+0x18]
  4031e4:	mov    QWORD PTR [rip+0x8f8d],rax        # 0x40c178
  4031eb:	lea    rax,[rbp+0x8]
  4031ef:	mov    QWORD PTR [rip+0x8f22],rax        # 0x40c118
  4031f6:	jmp    0x403173
  4031fb:	nop
  4031fc:	nop
  4031fd:	nop
  4031fe:	nop
  4031ff:	nop
  403200:	sub    rsp,0x28
  403204:	test   edx,edx
  403206:	je     0x403220
  403208:	cmp    edx,0x3
  40320b:	je     0x403220
  40320d:	mov    eax,0x1
  403212:	add    rsp,0x28
  403216:	ret    
  403217:	nop    WORD PTR [rax+rax*1+0x0]
  403220:	call   0x403f10
  403225:	mov    eax,0x1
  40322a:	add    rsp,0x28
  40322e:	ret    
  40322f:	nop
  403230:	push   rsi
  403231:	push   rbx
  403232:	sub    rsp,0x28
  403236:	mov    rax,QWORD PTR [rip+0x6103]        # 0x409340
  40323d:	cmp    DWORD PTR [rax],0x2
  403240:	je     0x403248
  403242:	mov    DWORD PTR [rax],0x2
  403248:	cmp    edx,0x2
  40324b:	je     0x403260
  40324d:	cmp    edx,0x1
  403250:	je     0x403292
  403252:	mov    eax,0x1
  403257:	add    rsp,0x28
  40325b:	pop    rbx
  40325c:	pop    rsi
  40325d:	ret    
  40325e:	xchg   ax,ax
  403260:	lea    rbx,[rip+0xbdf9]        # 0x40f060
  403267:	lea    rsi,[rip+0xbdf2]        # 0x40f060
  40326e:	cmp    rbx,rsi
  403271:	je     0x403252
  403273:	mov    rax,QWORD PTR [rbx]
  403276:	test   rax,rax
  403279:	je     0x40327d
  40327b:	call   rax
  40327d:	add    rbx,0x8
  403281:	cmp    rbx,rsi
  403284:	jne    0x403273
  403286:	mov    eax,0x1
  40328b:	add    rsp,0x28
  40328f:	pop    rbx
  403290:	pop    rsi
  403291:	ret    
  403292:	call   0x403f10
  403297:	jmp    0x403252
  403299:	nop    DWORD PTR [rax+0x0]
  4032a0:	xor    eax,eax
  4032a2:	ret    
  4032a3:	nop
  4032a4:	nop
  4032a5:	nop
  4032a6:	nop
  4032a7:	nop
  4032a8:	nop
  4032a9:	nop
  4032aa:	nop
  4032ab:	nop
  4032ac:	nop
  4032ad:	nop
  4032ae:	nop
  4032af:	nop
  4032b0:	sub    rsp,0x58
  4032b4:	mov    rax,QWORD PTR [rip+0x93a5]        # 0x40c660
  4032bb:	test   rax,rax
  4032be:	je     0x4032ec
  4032c0:	movsd  xmm0,QWORD PTR [rsp+0x80]
  4032c9:	mov    DWORD PTR [rsp+0x20],ecx
  4032cd:	lea    rcx,[rsp+0x20]
  4032d2:	mov    QWORD PTR [rsp+0x28],rdx
  4032d7:	movsd  QWORD PTR [rsp+0x30],xmm2
  4032dd:	movsd  QWORD PTR [rsp+0x38],xmm3
  4032e3:	movsd  QWORD PTR [rsp+0x40],xmm0
  4032e9:	call   rax
  4032eb:	nop
  4032ec:	add    rsp,0x58
  4032f0:	ret    
  4032f1:	nop    DWORD PTR [rax+rax*1+0x0]
  4032f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403300:	mov    QWORD PTR [rip+0x9359],rcx        # 0x40c660
  403307:	jmp    0x404498
  40330c:	nop    DWORD PTR [rax+0x0]
  403310:	push   rsi
  403311:	push   rbx
  403312:	sub    rsp,0x78
  403316:	movaps XMMWORD PTR [rsp+0x40],xmm6
  40331b:	movaps XMMWORD PTR [rsp+0x50],xmm7
  403320:	movaps XMMWORD PTR [rsp+0x60],xmm8
  403326:	cmp    DWORD PTR [rcx],0x6
  403329:	ja     0x403400
  40332f:	mov    edx,DWORD PTR [rcx]
  403331:	lea    rax,[rip+0x5ecc]        # 0x409204
  403338:	movsxd rdx,DWORD PTR [rax+rdx*4]
  40333c:	add    rax,rdx
  40333f:	jmp    rax
  403341:	lea    rbx,[rip+0x5d98]        # 0x4090e0
  403348:	nop    DWORD PTR [rax+rax*1+0x0]
  403350:	movsd  xmm8,QWORD PTR [rcx+0x20]
  403356:	mov    rsi,QWORD PTR [rcx+0x8]
  40335a:	movsd  xmm7,QWORD PTR [rcx+0x18]
  40335f:	movsd  xmm6,QWORD PTR [rcx+0x10]
  403364:	call   0x4044b0
  403369:	movsd  QWORD PTR [rsp+0x30],xmm8
  403370:	lea    rcx,[rax+0x60]
  403374:	lea    rdx,[rip+0x5e5d]        # 0x4091d8
  40337b:	movsd  QWORD PTR [rsp+0x28],xmm7
  403381:	mov    r9,rsi
  403384:	mov    r8,rbx
  403387:	movsd  QWORD PTR [rsp+0x20],xmm6
  40338d:	call   0x404430
  403392:	nop
  403393:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  403398:	xor    eax,eax
  40339a:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  40339f:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  4033a5:	add    rsp,0x78
  4033a9:	pop    rbx
  4033aa:	pop    rsi
  4033ab:	ret    
  4033ac:	nop    DWORD PTR [rax+0x0]
  4033b0:	lea    rbx,[rip+0x5d48]        # 0x4090ff
  4033b7:	jmp    0x403350
  4033b9:	nop    DWORD PTR [rax+0x0]
  4033c0:	lea    rbx,[rip+0x5d59]        # 0x409120
  4033c7:	jmp    0x403350
  4033c9:	nop    DWORD PTR [rax+0x0]
  4033d0:	lea    rbx,[rip+0x5db9]        # 0x409190
  4033d7:	jmp    0x403350
  4033dc:	nop    DWORD PTR [rax+0x0]
  4033e0:	lea    rbx,[rip+0x5d81]        # 0x409168
  4033e7:	jmp    0x403350
  4033ec:	nop    DWORD PTR [rax+0x0]
  4033f0:	lea    rbx,[rip+0x5d49]        # 0x409140
  4033f7:	jmp    0x403350
  4033fc:	nop    DWORD PTR [rax+0x0]
  403400:	lea    rbx,[rip+0x5dbf]        # 0x4091c6
  403407:	jmp    0x403350
  40340c:	nop
  40340d:	nop
  40340e:	nop
  40340f:	nop
  403410:	fninit 
  403412:	ret    
  403413:	nop
  403414:	nop
  403415:	nop
  403416:	nop
  403417:	nop
  403418:	nop
  403419:	nop
  40341a:	nop
  40341b:	nop
  40341c:	nop
  40341d:	nop
  40341e:	nop
  40341f:	nop
  403420:	mov    rax,rcx
  403423:	ret    
  403424:	xchg   ax,ax
  403426:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403430:	mov    rax,rcx
  403433:	ret    
  403434:	nop
  403435:	nop
  403436:	nop
  403437:	nop
  403438:	nop
  403439:	nop
  40343a:	nop
  40343b:	nop
  40343c:	nop
  40343d:	nop
  40343e:	nop
  40343f:	nop
  403440:	push   rsi
  403441:	push   rbx
  403442:	sub    rsp,0x38
  403446:	lea    rax,[rsp+0x58]
  40344b:	mov    rbx,rcx
  40344e:	mov    QWORD PTR [rsp+0x58],rdx
  403453:	mov    QWORD PTR [rsp+0x60],r8
  403458:	mov    QWORD PTR [rsp+0x68],r9
  40345d:	mov    QWORD PTR [rsp+0x28],rax
  403462:	call   0x4044b0
  403467:	lea    rcx,[rip+0x5db2]        # 0x409220
  40346e:	lea    r9,[rax+0x60]
  403472:	mov    r8d,0x1b
  403478:	mov    edx,0x1
  40347d:	call   0x404420
  403482:	mov    rsi,QWORD PTR [rsp+0x28]
  403487:	call   0x4044b0
  40348c:	lea    rcx,[rax+0x60]
  403490:	mov    rdx,rbx
  403493:	mov    r8,rsi
  403496:	call   0x4043e0
  40349b:	call   0x404458
  4034a0:	nop
  4034a1:	nop    DWORD PTR [rax+rax*1+0x0]
  4034a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4034b0:	push   r13
  4034b2:	push   r12
  4034b4:	push   rbp
  4034b5:	push   rdi
  4034b6:	push   rsi
  4034b7:	push   rbx
  4034b8:	sub    rsp,0x58
  4034bc:	movsxd rbp,DWORD PTR [rip+0x91c1]        # 0x40c684
  4034c3:	mov    rbx,rcx
  4034c6:	mov    rsi,rdx
  4034c9:	mov    rdi,r8
  4034cc:	test   ebp,ebp
  4034ce:	jle    0x4035ca
  4034d4:	mov    rax,QWORD PTR [rip+0x91ad]        # 0x40c688
  4034db:	xor    r9d,r9d
  4034de:	add    rax,0x8
  4034e2:	mov    r10,QWORD PTR [rax]
  4034e5:	cmp    rbx,r10
  4034e8:	jb     0x4034fe
  4034ea:	mov    rdx,QWORD PTR [rax+0x8]
  4034ee:	mov    r11d,DWORD PTR [rdx+0x8]
  4034f2:	add    r10,r11
  4034f5:	cmp    rbx,r10
  4034f8:	jb     0x4035b0
  4034fe:	add    r9d,0x1
  403502:	add    rax,0x18
  403506:	cmp    r9d,ebp
  403509:	jne    0x4034e2
  40350b:	mov    rcx,rbx
  40350e:	call   0x404120
  403513:	test   rax,rax
  403516:	mov    r12,rax
  403519:	je     0x403602
  40351f:	lea    rbp,[rbp+rbp*2+0x0]
  403524:	shl    rbp,0x3
  403528:	mov    r13,rbp
  40352b:	add    r13,QWORD PTR [rip+0x9156]        # 0x40c688
  403532:	mov    QWORD PTR [r13+0x10],rax
  403536:	mov    DWORD PTR [r13+0x0],0x0
  40353e:	call   0x404240
  403543:	mov    edx,DWORD PTR [r12+0xc]
  403548:	mov    r8d,0x30
  40354e:	add    rax,rdx
  403551:	lea    rdx,[rsp+0x20]
  403556:	mov    QWORD PTR [r13+0x8],rax
  40355a:	mov    rax,QWORD PTR [rip+0x9127]        # 0x40c688
  403561:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  403566:	call   QWORD PTR [rip+0xa470]        # 0x40d9dc
  40356c:	test   rax,rax
  40356f:	je     0x4035e5
  403571:	mov    eax,DWORD PTR [rsp+0x44]
  403575:	lea    edx,[rax-0x4]
  403578:	and    edx,0xfffffffb
  40357b:	je     0x4035a9
  40357d:	sub    eax,0x40
  403580:	and    eax,0xffffffbf
  403583:	je     0x4035a9
  403585:	mov    r9,rbp
  403588:	add    r9,QWORD PTR [rip+0x90f9]        # 0x40c688
  40358f:	mov    r8d,0x40
  403595:	mov    rdx,QWORD PTR [rsp+0x38]
  40359a:	mov    rcx,QWORD PTR [rsp+0x20]
  40359f:	call   QWORD PTR [rip+0xa42f]        # 0x40d9d4
  4035a5:	test   eax,eax
  4035a7:	je     0x4035d1
  4035a9:	add    DWORD PTR [rip+0x90d4],0x1        # 0x40c684
  4035b0:	mov    r8,rdi
  4035b3:	mov    rdx,rsi
  4035b6:	mov    rcx,rbx
  4035b9:	add    rsp,0x58
  4035bd:	pop    rbx
  4035be:	pop    rsi
  4035bf:	pop    rdi
  4035c0:	pop    rbp
  4035c1:	pop    r12
  4035c3:	pop    r13
  4035c5:	jmp    0x404410
  4035ca:	xor    ebp,ebp
  4035cc:	jmp    0x40350b
  4035d1:	call   QWORD PTR [rip+0xa37d]        # 0x40d954
  4035d7:	lea    rcx,[rip+0x5cba]        # 0x409298
  4035de:	mov    edx,eax
  4035e0:	call   0x403440
  4035e5:	mov    rax,QWORD PTR [rip+0x909c]        # 0x40c688
  4035ec:	mov    edx,DWORD PTR [r12+0x8]
  4035f1:	lea    rcx,[rip+0x5c68]        # 0x409260
  4035f8:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  4035fd:	call   0x403440
  403602:	lea    rcx,[rip+0x5c37]        # 0x409240
  403609:	mov    rdx,rbx
  40360c:	call   0x403440
  403611:	nop
  403612:	nop    DWORD PTR [rax+0x0]
  403616:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403620:	push   rbp
  403621:	push   r14
  403623:	push   r13
  403625:	push   r12
  403627:	push   rdi
  403628:	push   rsi
  403629:	push   rbx
  40362a:	mov    rbp,rsp
  40362d:	sub    rsp,0x60
  403631:	mov    ebx,DWORD PTR [rip+0x9049]        # 0x40c680
  403637:	test   ebx,ebx
  403639:	je     0x403650
  40363b:	mov    rsp,rbp
  40363e:	pop    rbx
  40363f:	pop    rsi
  403640:	pop    rdi
  403641:	pop    r12
  403643:	pop    r13
  403645:	pop    r14
  403647:	pop    rbp
  403648:	ret    
  403649:	nop    DWORD PTR [rax+0x0]
  403650:	mov    DWORD PTR [rip+0x9026],0x1        # 0x40c680
  40365a:	call   0x404170
  40365f:	cdqe   
  403661:	lea    rax,[rax+rax*2]
  403665:	lea    rax,[rax*8+0x1e]
  40366d:	and    rax,0xfffffffffffffff0
  403671:	call   0x404390
  403676:	mov    rsi,QWORD PTR [rip+0x5cf3]        # 0x409370
  40367d:	mov    rbx,QWORD PTR [rip+0x5cfc]        # 0x409380
  403684:	sub    rsp,rax
  403687:	mov    DWORD PTR [rip+0x8ff3],0x0        # 0x40c684
  403691:	lea    rax,[rsp+0x20]
  403696:	mov    QWORD PTR [rip+0x8feb],rax        # 0x40c688
  40369d:	mov    rax,rsi
  4036a0:	sub    rax,rbx
  4036a3:	cmp    rax,0x7
  4036a7:	jle    0x40363b
  4036a9:	cmp    rax,0xb
  4036ad:	jle    0x4036d5
  4036af:	mov    r11d,DWORD PTR [rbx]
  4036b2:	test   r11d,r11d
  4036b5:	jne    0x403800
  4036bb:	mov    r10d,DWORD PTR [rbx+0x4]
  4036bf:	test   r10d,r10d
  4036c2:	jne    0x403800
  4036c8:	mov    r9d,DWORD PTR [rbx+0x8]
  4036cc:	test   r9d,r9d
  4036cf:	jne    0x4036ec
  4036d1:	add    rbx,0xc
  4036d5:	mov    r8d,DWORD PTR [rbx]
  4036d8:	test   r8d,r8d
  4036db:	jne    0x403800
  4036e1:	mov    ecx,DWORD PTR [rbx+0x4]
  4036e4:	test   ecx,ecx
  4036e6:	jne    0x403800
  4036ec:	mov    edx,DWORD PTR [rbx+0x8]
  4036ef:	cmp    edx,0x1
  4036f2:	jne    0x40390c
  4036f8:	add    rbx,0xc
  4036fc:	cmp    rbx,rsi
  4036ff:	jae    0x40363b
  403705:	mov    r12,QWORD PTR [rip+0x5c94]        # 0x4093a0
  40370c:	lea    r13,[rbp-0x30]
  403710:	movabs r14,0xffffffff00000000
  40371a:	mov    ecx,DWORD PTR [rbx+0x4]
  40371d:	mov    eax,DWORD PTR [rbx]
  40371f:	movzx  edx,BYTE PTR [rbx+0x8]
  403723:	add    rax,r12
  403726:	add    rcx,r12
  403729:	cmp    edx,0x10
  40372c:	mov    r8,QWORD PTR [rax]
  40372f:	je     0x403876
  403735:	jbe    0x40383d
  40373b:	cmp    edx,0x20
  40373e:	je     0x4038bf
  403744:	cmp    edx,0x40
  403747:	jne    0x4038ab
  40374d:	sub    r8,rax
  403750:	mov    rdx,r13
  403753:	mov    rdi,r13
  403756:	mov    rax,r8
  403759:	add    rax,QWORD PTR [rcx]
  40375c:	mov    r8d,0x8
  403762:	mov    QWORD PTR [rbp-0x30],rax
  403766:	call   0x4034b0
  40376b:	add    rbx,0xc
  40376f:	cmp    rbx,rsi
  403772:	jb     0x40371a
  403774:	mov    eax,DWORD PTR [rip+0x8f0a]        # 0x40c684
  40377a:	xor    ebx,ebx
  40377c:	xor    esi,esi
  40377e:	test   eax,eax
  403780:	jle    0x40363b
  403786:	mov    r14,QWORD PTR [rip+0xa24f]        # 0x40d9dc
  40378d:	lea    r13,[rbp-0x34]
  403791:	mov    r12,QWORD PTR [rip+0xa23c]        # 0x40d9d4
  403798:	jmp    0x4037b3
  40379a:	nop    WORD PTR [rax+rax*1+0x0]
  4037a0:	add    esi,0x1
  4037a3:	add    rbx,0x18
  4037a7:	cmp    esi,DWORD PTR [rip+0x8ed7]        # 0x40c684
  4037ad:	jge    0x40363b
  4037b3:	mov    rax,rbx
  4037b6:	add    rax,QWORD PTR [rip+0x8ecb]        # 0x40c688
  4037bd:	mov    edx,DWORD PTR [rax]
  4037bf:	test   edx,edx
  4037c1:	je     0x4037a0
  4037c3:	mov    rcx,QWORD PTR [rax+0x8]
  4037c7:	mov    r8d,0x30
  4037cd:	mov    rdx,rdi
  4037d0:	call   r14
  4037d3:	test   rax,rax
  4037d6:	je     0x4038ee
  4037dc:	mov    rax,QWORD PTR [rip+0x8ea5]        # 0x40c688
  4037e3:	mov    r9,r13
  4037e6:	mov    rdx,QWORD PTR [rbp-0x18]
  4037ea:	mov    rcx,QWORD PTR [rbp-0x30]
  4037ee:	mov    r8d,DWORD PTR [rax+rbx*1]
  4037f2:	call   r12
  4037f5:	jmp    0x4037a0
  4037f7:	nop    WORD PTR [rax+rax*1+0x0]
  403800:	cmp    rbx,rsi
  403803:	jae    0x40363b
  403809:	mov    r12,QWORD PTR [rip+0x5b90]        # 0x4093a0
  403810:	lea    rdi,[rbp-0x30]
  403814:	mov    ecx,DWORD PTR [rbx+0x4]
  403817:	mov    eax,DWORD PTR [rbx]
  403819:	mov    r8d,0x4
  40381f:	mov    rdx,rdi
  403822:	add    rbx,0x8
  403826:	add    rcx,r12
  403829:	add    eax,DWORD PTR [rcx]
  40382b:	mov    DWORD PTR [rbp-0x30],eax
  40382e:	call   0x4034b0
  403833:	cmp    rbx,rsi
  403836:	jb     0x403814
  403838:	jmp    0x403774
  40383d:	cmp    edx,0x8
  403840:	jne    0x4038ab
  403842:	movzx  edx,BYTE PTR [rcx]
  403845:	mov    rdi,r13
  403848:	mov    r10,rdx
  40384b:	or     r10,0xffffffffffffff00
  403852:	test   dl,dl
  403854:	cmovs  rdx,r10
  403858:	sub    rdx,rax
  40385b:	lea    rax,[r8+rdx*1]
  40385f:	mov    r8d,0x1
  403865:	mov    rdx,r13
  403868:	mov    QWORD PTR [rbp-0x30],rax
  40386c:	call   0x4034b0
  403871:	jmp    0x40376b
  403876:	movzx  edx,WORD PTR [rcx]
  403879:	mov    rdi,r13
  40387c:	mov    r10,rdx
  40387f:	or     r10,0xffffffffffff0000
  403886:	test   dx,dx
  403889:	cmovs  rdx,r10
  40388d:	sub    rdx,rax
  403890:	lea    rax,[r8+rdx*1]
  403894:	mov    r8d,0x2
  40389a:	mov    rdx,r13
  40389d:	mov    QWORD PTR [rbp-0x30],rax
  4038a1:	call   0x4034b0
  4038a6:	jmp    0x40376b
  4038ab:	lea    rcx,[rip+0x5a46]        # 0x4092f8
  4038b2:	mov    QWORD PTR [rbp-0x30],0x0
  4038ba:	call   0x403440
  4038bf:	mov    edx,DWORD PTR [rcx]
  4038c1:	mov    rdi,r13
  4038c4:	mov    r10,rdx
  4038c7:	or     r10,r14
  4038ca:	test   edx,edx
  4038cc:	cmovs  rdx,r10
  4038d0:	sub    rdx,rax
  4038d3:	lea    rax,[r8+rdx*1]
  4038d7:	mov    r8d,0x4
  4038dd:	mov    rdx,r13
  4038e0:	mov    QWORD PTR [rbp-0x30],rax
  4038e4:	call   0x4034b0
  4038e9:	jmp    0x40376b
  4038ee:	add    rbx,QWORD PTR [rip+0x8d93]        # 0x40c688
  4038f5:	lea    rcx,[rip+0x5964]        # 0x409260
  4038fc:	mov    rax,QWORD PTR [rbx+0x10]
  403900:	mov    r8,QWORD PTR [rbx+0x8]
  403904:	mov    edx,DWORD PTR [rax+0x8]
  403907:	call   0x403440
  40390c:	lea    rcx,[rip+0x59ad]        # 0x4092c0
  403913:	call   0x403440
  403918:	nop
  403919:	nop
  40391a:	nop
  40391b:	nop
  40391c:	nop
  40391d:	nop
  40391e:	nop
  40391f:	nop
  403920:	sub    rsp,0x28
  403924:	mov    eax,DWORD PTR [rcx]
  403926:	cmp    eax,0xc0000091
  40392b:	ja     0x403990
  40392d:	cmp    eax,0xc000008d
  403932:	jae    0x4039af
  403934:	cmp    eax,0xc0000008
  403939:	je     0x403a50
  40393f:	ja     0x403a20
  403945:	cmp    eax,0x80000002
  40394a:	je     0x403a50
  403950:	cmp    eax,0xc0000005
  403955:	jne    0x403a2e
  40395b:	xor    edx,edx
  40395d:	mov    ecx,0xb
  403962:	call   0x404408
  403967:	cmp    rax,0x1
  40396b:	je     0x403ab0
  403971:	test   rax,rax
  403974:	je     0x403a90
  40397a:	mov    ecx,0xb
  40397f:	call   rax
  403981:	xor    eax,eax
  403983:	add    rsp,0x28
  403987:	ret    
  403988:	nop    DWORD PTR [rax+rax*1+0x0]
  403990:	cmp    eax,0xc0000094
  403995:	je     0x403a60
  40399b:	ja     0x4039e0
  40399d:	cmp    eax,0xc0000092
  4039a2:	je     0x403a50
  4039a8:	cmp    eax,0xc0000093
  4039ad:	jne    0x403a2e
  4039af:	xor    edx,edx
  4039b1:	mov    ecx,0x8
  4039b6:	call   0x404408
  4039bb:	cmp    rax,0x1
  4039bf:	mov    rdx,rax
  4039c2:	je     0x403a38
  4039c4:	test   rdx,rdx
  4039c7:	mov    eax,0x1
  4039cc:	je     0x403983
  4039ce:	mov    ecx,0x8
  4039d3:	call   rdx
  4039d5:	xor    eax,eax
  4039d7:	add    rsp,0x28
  4039db:	ret    
  4039dc:	nop    DWORD PTR [rax+0x0]
  4039e0:	cmp    eax,0xc0000095
  4039e5:	je     0x403a50
  4039e7:	cmp    eax,0xc0000096
  4039ec:	jne    0x403a2e
  4039ee:	xor    edx,edx
  4039f0:	mov    ecx,0x4
  4039f5:	call   0x404408
  4039fa:	cmp    rax,0x1
  4039fe:	je     0x403a9a
  403a04:	test   rax,rax
  403a07:	je     0x403a90
  403a0d:	mov    ecx,0x4
  403a12:	call   rax
  403a14:	xor    eax,eax
  403a16:	jmp    0x403983
  403a1b:	nop    DWORD PTR [rax+rax*1+0x0]
  403a20:	cmp    eax,0xc000001d
  403a25:	je     0x4039ee
  403a27:	cmp    eax,0xc000008c
  403a2c:	je     0x403a50
  403a2e:	mov    eax,0x1
  403a33:	add    rsp,0x28
  403a37:	ret    
  403a38:	mov    edx,0x1
  403a3d:	mov    ecx,0x8
  403a42:	call   0x404408
  403a47:	call   0x403410
  403a4c:	nop    DWORD PTR [rax+0x0]
  403a50:	xor    eax,eax
  403a52:	add    rsp,0x28
  403a56:	ret    
  403a57:	nop    WORD PTR [rax+rax*1+0x0]
  403a60:	xor    edx,edx
  403a62:	mov    ecx,0x8
  403a67:	call   0x404408
  403a6c:	cmp    rax,0x1
  403a70:	mov    rdx,rax
  403a73:	jne    0x4039c4
  403a79:	mov    edx,0x1
  403a7e:	mov    ecx,0x8
  403a83:	call   0x404408
  403a88:	xor    eax,eax
  403a8a:	jmp    0x403983
  403a8f:	nop
  403a90:	mov    eax,0x4
  403a95:	add    rsp,0x28
  403a99:	ret    
  403a9a:	mov    edx,0x1
  403a9f:	mov    ecx,0x4
  403aa4:	call   0x404408
  403aa9:	xor    eax,eax
  403aab:	jmp    0x403983
  403ab0:	mov    edx,0x1
  403ab5:	mov    ecx,0xb
  403aba:	call   0x404408
  403abf:	xor    eax,eax
  403ac1:	jmp    0x403983
  403ac6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403ad0:	push   r12
  403ad2:	push   rbp
  403ad3:	push   rdi
  403ad4:	push   rsi
  403ad5:	push   rbx
  403ad6:	sub    rsp,0x20
  403ada:	call   0x404240
  403adf:	mov    rbp,rax
  403ae2:	mov    eax,DWORD PTR [rip+0x8be0]        # 0x40c6c8
  403ae8:	test   eax,eax
  403aea:	jne    0x403b11
  403aec:	test   rbp,rbp
  403aef:	je     0x403b11
  403af1:	lea    rcx,[rip+0x5838]        # 0x409330
  403af8:	mov    DWORD PTR [rip+0x8bc6],0x1        # 0x40c6c8
  403b02:	call   0x404080
  403b07:	test   rax,rax
  403b0a:	je     0x403b20
  403b0c:	mov    eax,0x1
  403b11:	add    rsp,0x20
  403b15:	pop    rbx
  403b16:	pop    rsi
  403b17:	pop    rdi
  403b18:	pop    rbp
  403b19:	pop    r12
  403b1b:	ret    
  403b1c:	nop    DWORD PTR [rax+0x0]
  403b20:	lea    rbx,[rip+0x8cd9]        # 0x40c800
  403b27:	mov    ecx,0x30
  403b2c:	lea    rdx,[rip+0x8bcd]        # 0x40c700
  403b33:	lea    r12,[rip+0xfffffffffffffde6]        # 0x403920
  403b3a:	xor    esi,esi
  403b3c:	mov    rdi,rbx
  403b3f:	rep stos QWORD PTR es:[rdi],rax
  403b42:	mov    rdi,rdx
  403b45:	sub    r12,rbp
  403b48:	mov    cl,0x20
  403b4a:	rep stos QWORD PTR es:[rdi],rax
  403b4d:	mov    rdi,rdx
  403b50:	jmp    0x403b80
  403b52:	mov    BYTE PTR [rdi],0x9
  403b55:	mov    DWORD PTR [rdi+0x4],r12d
  403b59:	add    rsi,0x1
  403b5d:	mov    edx,DWORD PTR [rax+0xc]
  403b60:	add    rbx,0xc
  403b64:	mov    DWORD PTR [rbx-0xc],edx
  403b67:	add    edx,DWORD PTR [rax+0x8]
  403b6a:	mov    rax,rdi
  403b6d:	sub    rax,rbp
  403b70:	add    rdi,0x8
  403b74:	mov    DWORD PTR [rbx-0x4],eax
  403b77:	mov    DWORD PTR [rbx-0x8],edx
  403b7a:	cmp    rsi,0x20
  403b7e:	je     0x403bb5
  403b80:	mov    rcx,rsi
  403b83:	call   0x4041b0
  403b88:	test   rax,rax
  403b8b:	jne    0x403b52
  403b8d:	test   rsi,rsi
  403b90:	je     0x403b0c
  403b96:	mov    edx,esi
  403b98:	nop    DWORD PTR [rax+rax*1+0x0]
  403ba0:	mov    r8,rbp
  403ba3:	lea    rcx,[rip+0x8c56]        # 0x40c800
  403baa:	call   QWORD PTR [rip+0x9ddc]        # 0x40d98c
  403bb0:	jmp    0x403b0c
  403bb5:	mov    edx,0x20
  403bba:	jmp    0x403ba0
  403bbc:	nop    DWORD PTR [rax+0x0]
  403bc0:	push   rbx
  403bc1:	sub    rsp,0x20
  403bc5:	mov    rdx,QWORD PTR [rcx]
  403bc8:	mov    eax,DWORD PTR [rdx]
  403bca:	mov    r8d,eax
  403bcd:	and    r8d,0x20ffffff
  403bd4:	cmp    r8d,0x20474343
  403bdb:	je     0x403ce0
  403be1:	cmp    eax,0xc0000091
  403be6:	mov    rbx,rcx
  403be9:	ja     0x403c70
  403bef:	cmp    eax,0xc000008d
  403bf4:	jae    0x403c87
  403bfa:	cmp    eax,0xc0000008
  403bff:	je     0x403c33
  403c01:	ja     0x403c40
  403c03:	cmp    eax,0x80000002
  403c08:	je     0x403c33
  403c0a:	cmp    eax,0xc0000005
  403c0f:	jne    0x403c52
  403c11:	xor    edx,edx
  403c13:	mov    ecx,0xb
  403c18:	call   0x404408
  403c1d:	cmp    rax,0x1
  403c21:	je     0x403d50
  403c27:	test   rax,rax
  403c2a:	je     0x403c52
  403c2c:	mov    ecx,0xb
  403c31:	call   rax
  403c33:	mov    eax,0xffffffff
  403c38:	add    rsp,0x20
  403c3c:	pop    rbx
  403c3d:	ret    
  403c3e:	xchg   ax,ax
  403c40:	cmp    eax,0xc000001d
  403c45:	je     0x403d06
  403c4b:	cmp    eax,0xc000008c
  403c50:	je     0x403c33
  403c52:	mov    rax,QWORD PTR [rip+0x8a67]        # 0x40c6c0
  403c59:	test   rax,rax
  403c5c:	je     0x403c38
  403c5e:	mov    rcx,rbx
  403c61:	add    rsp,0x20
  403c65:	pop    rbx
  403c66:	rex.W jmp rax
  403c69:	nop    DWORD PTR [rax+0x0]
  403c70:	cmp    eax,0xc0000094
  403c75:	je     0x403cb2
  403c77:	ja     0x403cf0
  403c79:	cmp    eax,0xc0000092
  403c7e:	je     0x403c33
  403c80:	cmp    eax,0xc0000093
  403c85:	jne    0x403c52
  403c87:	xor    edx,edx
  403c89:	mov    ecx,0x8
  403c8e:	call   0x404408
  403c93:	cmp    rax,0x1
  403c97:	jne    0x403cc4
  403c99:	mov    edx,0x1
  403c9e:	mov    ecx,0x8
  403ca3:	call   0x404408
  403ca8:	call   0x403410
  403cad:	jmp    0x403c33
  403cb2:	xor    edx,edx
  403cb4:	mov    ecx,0x8
  403cb9:	call   0x404408
  403cbe:	cmp    rax,0x1
  403cc2:	je     0x403d32
  403cc4:	test   rax,rax
  403cc7:	je     0x403c52
  403cc9:	mov    ecx,0x8
  403cce:	call   rax
  403cd0:	mov    eax,0xffffffff
  403cd5:	jmp    0x403c38
  403cda:	nop    WORD PTR [rax+rax*1+0x0]
  403ce0:	test   BYTE PTR [rdx+0x4],0x1
  403ce4:	jne    0x403be1
  403cea:	jmp    0x403c33
  403cef:	nop
  403cf0:	cmp    eax,0xc0000095
  403cf5:	je     0x403c33
  403cfb:	cmp    eax,0xc0000096
  403d00:	jne    0x403c52
  403d06:	xor    edx,edx
  403d08:	mov    ecx,0x4
  403d0d:	call   0x404408
  403d12:	cmp    rax,0x1
  403d16:	je     0x403d64
  403d18:	test   rax,rax
  403d1b:	je     0x403c52
  403d21:	mov    ecx,0x4
  403d26:	call   rax
  403d28:	mov    eax,0xffffffff
  403d2d:	jmp    0x403c38
  403d32:	mov    edx,0x1
  403d37:	mov    ecx,0x8
  403d3c:	call   0x404408
  403d41:	jmp    0x403c33
  403d46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403d50:	mov    edx,0x1
  403d55:	mov    ecx,0xb
  403d5a:	call   0x404408
  403d5f:	jmp    0x403c33
  403d64:	mov    edx,0x1
  403d69:	mov    ecx,0x4
  403d6e:	call   0x404408
  403d73:	jmp    0x403c33
  403d78:	nop
  403d79:	nop
  403d7a:	nop
  403d7b:	nop
  403d7c:	nop
  403d7d:	nop
  403d7e:	nop
  403d7f:	nop
  403d80:	push   rbp
  403d81:	push   rdi
  403d82:	push   rsi
  403d83:	push   rbx
  403d84:	sub    rsp,0x28
  403d88:	lea    rcx,[rip+0x8c11]        # 0x40c9a0
  403d8f:	call   QWORD PTR [rip+0x9b9f]        # 0x40d934
  403d95:	mov    rbx,QWORD PTR [rip+0x8be4]        # 0x40c980
  403d9c:	test   rbx,rbx
  403d9f:	je     0x403dd4
  403da1:	mov    rbp,QWORD PTR [rip+0x9c1c]        # 0x40d9c4
  403da8:	mov    rdi,QWORD PTR [rip+0x9ba5]        # 0x40d954
  403daf:	nop
  403db0:	mov    ecx,DWORD PTR [rbx]
  403db2:	call   rbp
  403db4:	mov    rsi,rax
  403db7:	call   rdi
  403db9:	test   eax,eax
  403dbb:	jne    0x403dcb
  403dbd:	test   rsi,rsi
  403dc0:	je     0x403dcb
  403dc2:	mov    rax,QWORD PTR [rbx+0x8]
  403dc6:	mov    rcx,rsi
  403dc9:	call   rax
  403dcb:	mov    rbx,QWORD PTR [rbx+0x10]
  403dcf:	test   rbx,rbx
  403dd2:	jne    0x403db0
  403dd4:	mov    rax,QWORD PTR [rip+0x9ba1]        # 0x40d97c
  403ddb:	lea    rcx,[rip+0x8bbe]        # 0x40c9a0
  403de2:	add    rsp,0x28
  403de6:	pop    rbx
  403de7:	pop    rsi
  403de8:	pop    rdi
  403de9:	pop    rbp
  403dea:	rex.W jmp rax
  403ded:	nop    DWORD PTR [rax]
  403df0:	push   rdi
  403df1:	push   rsi
  403df2:	push   rbx
  403df3:	sub    rsp,0x20
  403df7:	mov    eax,DWORD PTR [rip+0x8b8b]        # 0x40c988
  403dfd:	test   eax,eax
  403dff:	jne    0x403e10
  403e01:	add    rsp,0x20
  403e05:	pop    rbx
  403e06:	pop    rsi
  403e07:	pop    rdi
  403e08:	ret    
  403e09:	nop    DWORD PTR [rax+0x0]
  403e10:	mov    rsi,rdx
  403e13:	mov    edi,ecx
  403e15:	mov    edx,0x18
  403e1a:	mov    ecx,0x1
  403e1f:	call   0x404450
  403e24:	test   rax,rax
  403e27:	mov    rbx,rax
  403e2a:	je     0x403e68
  403e2c:	mov    DWORD PTR [rax],edi
  403e2e:	mov    QWORD PTR [rax+0x8],rsi
  403e32:	lea    rcx,[rip+0x8b67]        # 0x40c9a0
  403e39:	call   QWORD PTR [rip+0x9af5]        # 0x40d934
  403e3f:	mov    rax,QWORD PTR [rip+0x8b3a]        # 0x40c980
  403e46:	lea    rcx,[rip+0x8b53]        # 0x40c9a0
  403e4d:	mov    QWORD PTR [rip+0x8b2c],rbx        # 0x40c980
  403e54:	mov    QWORD PTR [rbx+0x10],rax
  403e58:	call   QWORD PTR [rip+0x9b1e]        # 0x40d97c
  403e5e:	xor    eax,eax
  403e60:	add    rsp,0x20
  403e64:	pop    rbx
  403e65:	pop    rsi
  403e66:	pop    rdi
  403e67:	ret    
  403e68:	mov    eax,0xffffffff
  403e6d:	jmp    0x403e01
  403e6f:	nop
  403e70:	push   rbx
  403e71:	sub    rsp,0x20
  403e75:	mov    eax,DWORD PTR [rip+0x8b0d]        # 0x40c988
  403e7b:	test   eax,eax
  403e7d:	jne    0x403e90
  403e7f:	xor    eax,eax
  403e81:	add    rsp,0x20
  403e85:	pop    rbx
  403e86:	ret    
  403e87:	nop    WORD PTR [rax+rax*1+0x0]
  403e90:	mov    ebx,ecx
  403e92:	lea    rcx,[rip+0x8b07]        # 0x40c9a0
  403e99:	call   QWORD PTR [rip+0x9a95]        # 0x40d934
  403e9f:	mov    rdx,QWORD PTR [rip+0x8ada]        # 0x40c980
  403ea6:	test   rdx,rdx
  403ea9:	je     0x403ec7
  403eab:	mov    eax,DWORD PTR [rdx]
  403ead:	cmp    eax,ebx
  403eaf:	jne    0x403ebe
  403eb1:	jmp    0x403eff
  403eb3:	mov    r8d,DWORD PTR [rax]
  403eb6:	cmp    r8d,ebx
  403eb9:	je     0x403ee0
  403ebb:	mov    rdx,rax
  403ebe:	mov    rax,QWORD PTR [rdx+0x10]
  403ec2:	test   rax,rax
  403ec5:	jne    0x403eb3
  403ec7:	lea    rcx,[rip+0x8ad2]        # 0x40c9a0
  403ece:	call   QWORD PTR [rip+0x9aa8]        # 0x40d97c
  403ed4:	xor    eax,eax
  403ed6:	add    rsp,0x20
  403eda:	pop    rbx
  403edb:	ret    
  403edc:	nop    DWORD PTR [rax+0x0]
  403ee0:	mov    rcx,rax
  403ee3:	mov    rax,QWORD PTR [rax+0x10]
  403ee7:	mov    QWORD PTR [rdx+0x10],rax
  403eeb:	call   0x404428
  403ef0:	lea    rcx,[rip+0x8aa9]        # 0x40c9a0
  403ef7:	call   QWORD PTR [rip+0x9a7f]        # 0x40d97c
  403efd:	jmp    0x403ed4
  403eff:	mov    rax,QWORD PTR [rdx+0x10]
  403f03:	mov    rcx,rdx
  403f06:	mov    QWORD PTR [rip+0x8a73],rax        # 0x40c980
  403f0d:	jmp    0x403eeb
  403f0f:	nop
  403f10:	push   rbx
  403f11:	sub    rsp,0x20
  403f15:	cmp    edx,0x1
  403f18:	je     0x403fb0
  403f1e:	jb     0x403f50
  403f20:	cmp    edx,0x2
  403f23:	je     0x403f40
  403f25:	cmp    edx,0x3
  403f28:	jne    0x403f45
  403f2a:	mov    eax,DWORD PTR [rip+0x8a58]        # 0x40c988
  403f30:	test   eax,eax
  403f32:	je     0x403f45
  403f34:	call   0x403d80
  403f39:	jmp    0x403f45
  403f3b:	nop    DWORD PTR [rax+rax*1+0x0]
  403f40:	call   0x403410
  403f45:	mov    eax,0x1
  403f4a:	add    rsp,0x20
  403f4e:	pop    rbx
  403f4f:	ret    
  403f50:	mov    eax,DWORD PTR [rip+0x8a32]        # 0x40c988
  403f56:	test   eax,eax
  403f58:	jne    0x403fe0
  403f5e:	mov    eax,DWORD PTR [rip+0x8a24]        # 0x40c988
  403f64:	cmp    eax,0x1
  403f67:	jne    0x403f45
  403f69:	mov    rcx,QWORD PTR [rip+0x8a10]        # 0x40c980
  403f70:	test   rcx,rcx
  403f73:	je     0x403f86
  403f75:	mov    rbx,QWORD PTR [rcx+0x10]
  403f79:	call   0x404428
  403f7e:	test   rbx,rbx
  403f81:	mov    rcx,rbx
  403f84:	jne    0x403f75
  403f86:	lea    rcx,[rip+0x8a13]        # 0x40c9a0
  403f8d:	mov    QWORD PTR [rip+0x89e8],0x0        # 0x40c980
  403f98:	mov    DWORD PTR [rip+0x89e6],0x0        # 0x40c988
  403fa2:	call   QWORD PTR [rip+0x9984]        # 0x40d92c
  403fa8:	jmp    0x403f45
  403faa:	nop    WORD PTR [rax+rax*1+0x0]
  403fb0:	mov    eax,DWORD PTR [rip+0x89d2]        # 0x40c988
  403fb6:	test   eax,eax
  403fb8:	je     0x403fd0
  403fba:	mov    eax,0x1
  403fbf:	mov    DWORD PTR [rip+0x89bf],0x1        # 0x40c988
  403fc9:	add    rsp,0x20
  403fcd:	pop    rbx
  403fce:	ret    
  403fcf:	nop
  403fd0:	lea    rcx,[rip+0x89c9]        # 0x40c9a0
  403fd7:	call   QWORD PTR [rip+0x9997]        # 0x40d974
  403fdd:	jmp    0x403fba
  403fdf:	nop
  403fe0:	call   0x403d80
  403fe5:	jmp    0x403f5e
  403fea:	nop
  403feb:	nop
  403fec:	nop
  403fed:	nop
  403fee:	nop
  403fef:	nop
  403ff0:	movsxd rax,DWORD PTR [rcx+0x3c]
  403ff4:	add    rcx,rax
  403ff7:	xor    eax,eax
  403ff9:	cmp    DWORD PTR [rcx],0x4550
  403fff:	je     0x404003
  404001:	repz ret 
  404003:	xor    eax,eax
  404005:	cmp    WORD PTR [rcx+0x18],0x20b
  40400b:	sete   al
  40400e:	ret    
  40400f:	nop
  404010:	cmp    WORD PTR [rcx],0x5a4d
  404015:	je     0x404020
  404017:	xor    eax,eax
  404019:	ret    
  40401a:	nop    WORD PTR [rax+rax*1+0x0]
  404020:	jmp    0x403ff0
  404022:	nop    DWORD PTR [rax+0x0]
  404026:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404030:	movsxd rax,DWORD PTR [rcx+0x3c]
  404034:	add    rcx,rax
  404037:	movzx  eax,WORD PTR [rcx+0x14]
  40403b:	lea    rax,[rcx+rax*1+0x18]
  404040:	movzx  ecx,WORD PTR [rcx+0x6]
  404044:	test   ecx,ecx
  404046:	je     0x404071
  404048:	sub    ecx,0x1
  40404b:	lea    rcx,[rcx+rcx*4]
  40404f:	lea    r9,[rax+rcx*8+0x28]
  404054:	mov    r8d,DWORD PTR [rax+0xc]
  404058:	cmp    r8,rdx
  40405b:	mov    rcx,r8
  40405e:	ja     0x404068
  404060:	add    ecx,DWORD PTR [rax+0x8]
  404063:	cmp    rdx,rcx
  404066:	jb     0x404073
  404068:	add    rax,0x28
  40406c:	cmp    rax,r9
  40406f:	jne    0x404054
  404071:	xor    eax,eax
  404073:	repz ret 
  404075:	nop
  404076:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404080:	push   rdi
  404081:	push   rsi
  404082:	push   rbx
  404083:	sub    rsp,0x20
  404087:	mov    rsi,rcx
  40408a:	call   0x4043f0
  40408f:	cmp    rax,0x8
  404093:	ja     0x4040b0
  404095:	mov    rbx,QWORD PTR [rip+0x5304]        # 0x4093a0
  40409c:	xor    edi,edi
  40409e:	cmp    WORD PTR [rbx],0x5a4d
  4040a3:	je     0x4040c0
  4040a5:	mov    rax,rdi
  4040a8:	add    rsp,0x20
  4040ac:	pop    rbx
  4040ad:	pop    rsi
  4040ae:	pop    rdi
  4040af:	ret    
  4040b0:	xor    edi,edi
  4040b2:	mov    rax,rdi
  4040b5:	add    rsp,0x20
  4040b9:	pop    rbx
  4040ba:	pop    rsi
  4040bb:	pop    rdi
  4040bc:	ret    
  4040bd:	nop    DWORD PTR [rax]
  4040c0:	mov    rcx,rbx
  4040c3:	call   0x403ff0
  4040c8:	test   eax,eax
  4040ca:	je     0x4040a5
  4040cc:	movsxd rdx,DWORD PTR [rbx+0x3c]
  4040d0:	add    rdx,rbx
  4040d3:	movzx  eax,WORD PTR [rdx+0x14]
  4040d7:	lea    rbx,[rdx+rax*1+0x18]
  4040dc:	movzx  eax,WORD PTR [rdx+0x6]
  4040e0:	test   eax,eax
  4040e2:	je     0x4040a5
  4040e4:	sub    eax,0x1
  4040e7:	lea    rax,[rax+rax*4]
  4040eb:	lea    rdi,[rbx+rax*8+0x28]
  4040f0:	jmp    0x4040fb
  4040f2:	add    rbx,0x28
  4040f6:	cmp    rbx,rdi
  4040f9:	je     0x4040b0
  4040fb:	mov    r8d,0x8
  404101:	mov    rdx,rsi
  404104:	mov    rcx,rbx
  404107:	call   0x4043e8
  40410c:	test   eax,eax
  40410e:	jne    0x4040f2
  404110:	mov    rdi,rbx
  404113:	mov    rax,rdi
  404116:	add    rsp,0x20
  40411a:	pop    rbx
  40411b:	pop    rsi
  40411c:	pop    rdi
  40411d:	ret    
  40411e:	xchg   ax,ax
  404120:	push   rsi
  404121:	push   rbx
  404122:	sub    rsp,0x28
  404126:	mov    rbx,QWORD PTR [rip+0x5273]        # 0x4093a0
  40412d:	cmp    WORD PTR [rbx],0x5a4d
  404132:	je     0x404140
  404134:	xor    eax,eax
  404136:	add    rsp,0x28
  40413a:	pop    rbx
  40413b:	pop    rsi
  40413c:	ret    
  40413d:	nop    DWORD PTR [rax]
  404140:	mov    rsi,rcx
  404143:	mov    rcx,rbx
  404146:	call   0x403ff0
  40414b:	test   eax,eax
  40414d:	je     0x404134
  40414f:	sub    rsi,rbx
  404152:	mov    rcx,rbx
  404155:	mov    rdx,rsi
  404158:	add    rsp,0x28
  40415c:	pop    rbx
  40415d:	pop    rsi
  40415e:	jmp    0x404030
  404163:	nop    DWORD PTR [rax]
  404166:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404170:	push   rbx
  404171:	sub    rsp,0x20
  404175:	mov    rbx,QWORD PTR [rip+0x5224]        # 0x4093a0
  40417c:	xor    eax,eax
  40417e:	cmp    WORD PTR [rbx],0x5a4d
  404183:	je     0x404190
  404185:	add    rsp,0x20
  404189:	pop    rbx
  40418a:	ret    
  40418b:	nop    DWORD PTR [rax+rax*1+0x0]
  404190:	mov    rcx,rbx
  404193:	call   0x403ff0
  404198:	test   eax,eax
  40419a:	je     0x404185
  40419c:	movsxd rax,DWORD PTR [rbx+0x3c]
  4041a0:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  4041a5:	add    rsp,0x20
  4041a9:	pop    rbx
  4041aa:	ret    
  4041ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4041b0:	push   rdi
  4041b1:	push   rsi
  4041b2:	push   rbx
  4041b3:	sub    rsp,0x20
  4041b7:	mov    rsi,QWORD PTR [rip+0x51e2]        # 0x4093a0
  4041be:	xor    edi,edi
  4041c0:	mov    rbx,rcx
  4041c3:	cmp    WORD PTR [rsi],0x5a4d
  4041c8:	je     0x4041d5
  4041ca:	mov    rax,rdi
  4041cd:	add    rsp,0x20
  4041d1:	pop    rbx
  4041d2:	pop    rsi
  4041d3:	pop    rdi
  4041d4:	ret    
  4041d5:	mov    rcx,rsi
  4041d8:	call   0x403ff0
  4041dd:	test   eax,eax
  4041df:	je     0x4041ca
  4041e1:	movsxd rax,DWORD PTR [rsi+0x3c]
  4041e5:	add    rsi,rax
  4041e8:	movzx  eax,WORD PTR [rsi+0x14]
  4041ec:	lea    rdx,[rsi+rax*1+0x18]
  4041f1:	movzx  eax,WORD PTR [rsi+0x6]
  4041f5:	test   eax,eax
  4041f7:	je     0x4041ca
  4041f9:	sub    eax,0x1
  4041fc:	lea    rax,[rax+rax*4]
  404200:	lea    rax,[rdx+rax*8+0x28]
  404205:	test   BYTE PTR [rdx+0x27],0x20
  404209:	je     0x404214
  40420b:	test   rbx,rbx
  40420e:	je     0x404230
  404210:	sub    rbx,0x1
  404214:	add    rdx,0x28
  404218:	cmp    rdx,rax
  40421b:	jne    0x404205
  40421d:	xor    edi,edi
  40421f:	mov    rax,rdi
  404222:	add    rsp,0x20
  404226:	pop    rbx
  404227:	pop    rsi
  404228:	pop    rdi
  404229:	ret    
  40422a:	nop    WORD PTR [rax+rax*1+0x0]
  404230:	mov    rdi,rdx
  404233:	mov    rax,rdi
  404236:	add    rsp,0x20
  40423a:	pop    rbx
  40423b:	pop    rsi
  40423c:	pop    rdi
  40423d:	ret    
  40423e:	xchg   ax,ax
  404240:	push   rsi
  404241:	push   rbx
  404242:	sub    rsp,0x28
  404246:	mov    rsi,QWORD PTR [rip+0x5153]        # 0x4093a0
  40424d:	xor    ebx,ebx
  40424f:	cmp    WORD PTR [rsi],0x5a4d
  404254:	je     0x404260
  404256:	mov    rax,rbx
  404259:	add    rsp,0x28
  40425d:	pop    rbx
  40425e:	pop    rsi
  40425f:	ret    
  404260:	mov    rcx,rsi
  404263:	call   0x403ff0
  404268:	test   eax,eax
  40426a:	cmovne rbx,rsi
  40426e:	mov    rax,rbx
  404271:	add    rsp,0x28
  404275:	pop    rbx
  404276:	pop    rsi
  404277:	ret    
  404278:	nop    DWORD PTR [rax+rax*1+0x0]
  404280:	push   rsi
  404281:	push   rbx
  404282:	sub    rsp,0x28
  404286:	mov    rbx,QWORD PTR [rip+0x5113]        # 0x4093a0
  40428d:	xor    eax,eax
  40428f:	cmp    WORD PTR [rbx],0x5a4d
  404294:	je     0x4042a0
  404296:	add    rsp,0x28
  40429a:	pop    rbx
  40429b:	pop    rsi
  40429c:	ret    
  40429d:	nop    DWORD PTR [rax]
  4042a0:	mov    rsi,rcx
  4042a3:	mov    rcx,rbx
  4042a6:	call   0x403ff0
  4042ab:	test   eax,eax
  4042ad:	je     0x404296
  4042af:	sub    rsi,rbx
  4042b2:	mov    rcx,rbx
  4042b5:	mov    rdx,rsi
  4042b8:	call   0x404030
  4042bd:	test   rax,rax
  4042c0:	je     0x4042d1
  4042c2:	mov    eax,DWORD PTR [rax+0x24]
  4042c5:	not    eax
  4042c7:	shr    eax,0x1f
  4042ca:	add    rsp,0x28
  4042ce:	pop    rbx
  4042cf:	pop    rsi
  4042d0:	ret    
  4042d1:	xor    eax,eax
  4042d3:	jmp    0x404296
  4042d5:	nop
  4042d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4042e0:	push   rbp
  4042e1:	push   rdi
  4042e2:	push   rsi
  4042e3:	push   rbx
  4042e4:	sub    rsp,0x28
  4042e8:	mov    rdi,QWORD PTR [rip+0x50b1]        # 0x4093a0
  4042ef:	xor    ebp,ebp
  4042f1:	mov    esi,ecx
  4042f3:	cmp    WORD PTR [rdi],0x5a4d
  4042f8:	je     0x404310
  4042fa:	mov    rax,rbp
  4042fd:	add    rsp,0x28
  404301:	pop    rbx
  404302:	pop    rsi
  404303:	pop    rdi
  404304:	pop    rbp
  404305:	ret    
  404306:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404310:	mov    rcx,rdi
  404313:	call   0x403ff0
  404318:	test   eax,eax
  40431a:	je     0x4042fa
  40431c:	movsxd rax,DWORD PTR [rdi+0x3c]
  404320:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  404327:	test   edx,edx
  404329:	je     0x4042fa
  40432b:	mov    ebx,edx
  40432d:	mov    rcx,rdi
  404330:	mov    rdx,rbx
  404333:	call   0x404030
  404338:	test   rax,rax
  40433b:	je     0x4042fa
  40433d:	add    rbx,rdi
  404340:	mov    rdx,rbx
  404343:	jne    0x404357
  404345:	jmp    0x4042fa
  404347:	nop    WORD PTR [rax+rax*1+0x0]
  404350:	sub    esi,0x1
  404353:	add    rdx,0x14
  404357:	mov    ecx,DWORD PTR [rdx+0x4]
  40435a:	test   ecx,ecx
  40435c:	jne    0x404365
  40435e:	mov    eax,DWORD PTR [rdx+0xc]
  404361:	test   eax,eax
  404363:	je     0x404380
  404365:	test   esi,esi
  404367:	jg     0x404350
  404369:	mov    ebp,DWORD PTR [rdx+0xc]
  40436c:	add    rbp,rdi
  40436f:	mov    rax,rbp
  404372:	add    rsp,0x28
  404376:	pop    rbx
  404377:	pop    rsi
  404378:	pop    rdi
  404379:	pop    rbp
  40437a:	ret    
  40437b:	nop    DWORD PTR [rax+rax*1+0x0]
  404380:	xor    ebp,ebp
  404382:	mov    rax,rbp
  404385:	add    rsp,0x28
  404389:	pop    rbx
  40438a:	pop    rsi
  40438b:	pop    rdi
  40438c:	pop    rbp
  40438d:	ret    
  40438e:	nop
  40438f:	nop
  404390:	push   rcx
  404391:	push   rax
  404392:	cmp    rax,0x1000
  404398:	lea    rcx,[rsp+0x18]
  40439d:	jb     0x4043b8
  40439f:	sub    rcx,0x1000
  4043a6:	or     QWORD PTR [rcx],0x0
  4043aa:	sub    rax,0x1000
  4043b0:	cmp    rax,0x1000
  4043b6:	ja     0x40439f
  4043b8:	sub    rcx,rax
  4043bb:	or     QWORD PTR [rcx],0x0
  4043bf:	pop    rax
  4043c0:	pop    rcx
  4043c1:	ret    
  4043c2:	nop
  4043c3:	nop
  4043c4:	nop
  4043c5:	nop
  4043c6:	nop
  4043c7:	nop
  4043c8:	nop
  4043c9:	nop
  4043ca:	nop
  4043cb:	nop
  4043cc:	nop
  4043cd:	nop
  4043ce:	nop
  4043cf:	nop
  4043d0:	jmp    QWORD PTR [rip+0x9726]        # 0x40dafc
  4043d6:	nop
  4043d7:	nop
  4043d8:	jmp    QWORD PTR [rip+0x9716]        # 0x40daf4
  4043de:	nop
  4043df:	nop
  4043e0:	jmp    QWORD PTR [rip+0x9706]        # 0x40daec
  4043e6:	nop
  4043e7:	nop
  4043e8:	jmp    QWORD PTR [rip+0x96f6]        # 0x40dae4
  4043ee:	nop
  4043ef:	nop
  4043f0:	jmp    QWORD PTR [rip+0x96e6]        # 0x40dadc
  4043f6:	nop
  4043f7:	nop
  4043f8:	jmp    QWORD PTR [rip+0x96d6]        # 0x40dad4
  4043fe:	nop
  4043ff:	nop
  404400:	jmp    QWORD PTR [rip+0x96c6]        # 0x40dacc
  404406:	nop
  404407:	nop
  404408:	jmp    QWORD PTR [rip+0x96b6]        # 0x40dac4
  40440e:	nop
  40440f:	nop
  404410:	jmp    QWORD PTR [rip+0x96a6]        # 0x40dabc
  404416:	nop
  404417:	nop
  404418:	jmp    QWORD PTR [rip+0x9696]        # 0x40dab4
  40441e:	nop
  40441f:	nop
  404420:	jmp    QWORD PTR [rip+0x9686]        # 0x40daac
  404426:	nop
  404427:	nop
  404428:	jmp    QWORD PTR [rip+0x9676]        # 0x40daa4
  40442e:	nop
  40442f:	nop
  404430:	jmp    QWORD PTR [rip+0x9666]        # 0x40da9c
  404436:	nop
  404437:	nop
  404438:	jmp    QWORD PTR [rip+0x9656]        # 0x40da94
  40443e:	nop
  40443f:	nop
  404440:	jmp    QWORD PTR [rip+0x9646]        # 0x40da8c
  404446:	nop
  404447:	nop
  404448:	jmp    QWORD PTR [rip+0x9636]        # 0x40da84
  40444e:	nop
  40444f:	nop
  404450:	jmp    QWORD PTR [rip+0x9626]        # 0x40da7c
  404456:	nop
  404457:	nop
  404458:	jmp    QWORD PTR [rip+0x9616]        # 0x40da74
  40445e:	nop
  40445f:	nop
  404460:	jmp    QWORD PTR [rip+0x9606]        # 0x40da6c
  404466:	nop
  404467:	nop
  404468:	jmp    QWORD PTR [rip+0x95f6]        # 0x40da64
  40446e:	nop
  40446f:	nop
  404470:	jmp    QWORD PTR [rip+0x95e6]        # 0x40da5c
  404476:	nop
  404477:	nop
  404478:	jmp    QWORD PTR [rip+0x95d6]        # 0x40da54
  40447e:	nop
  40447f:	nop
  404480:	jmp    QWORD PTR [rip+0x95be]        # 0x40da44
  404486:	nop
  404487:	nop
  404488:	jmp    QWORD PTR [rip+0x95ae]        # 0x40da3c
  40448e:	nop
  40448f:	nop
  404490:	jmp    QWORD PTR [rip+0x959e]        # 0x40da34
  404496:	nop
  404497:	nop
  404498:	jmp    QWORD PTR [rip+0x9586]        # 0x40da24
  40449e:	nop
  40449f:	nop
  4044a0:	jmp    QWORD PTR [rip+0x9576]        # 0x40da1c
  4044a6:	nop
  4044a7:	nop
  4044a8:	jmp    QWORD PTR [rip+0x9566]        # 0x40da14
  4044ae:	nop
  4044af:	nop
  4044b0:	jmp    QWORD PTR [rip+0x9556]        # 0x40da0c
  4044b6:	nop
  4044b7:	nop
  4044b8:	jmp    QWORD PTR [rip+0x953e]        # 0x40d9fc
  4044be:	nop
  4044bf:	nop
  4044c0:	jmp    QWORD PTR [rip+0x952e]        # 0x40d9f4
  4044c6:	nop
  4044c7:	nop
  4044c8:	jmp    QWORD PTR [rip+0x951e]        # 0x40d9ec
  4044ce:	nop
  4044cf:	nop
  4044d0:	mov    rax,QWORD PTR [rip+0x8519]        # 0x40c9f0
  4044d7:	ret    
  4044d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4044e0:	mov    rax,rcx
  4044e3:	xchg   QWORD PTR [rip+0x8506],rax        # 0x40c9f0
  4044ea:	ret    
  4044eb:	nop
  4044ec:	nop
  4044ed:	nop
  4044ee:	nop
  4044ef:	nop
  4044f0:	jmp    QWORD PTR [rip+0x94e6]        # 0x40d9dc
  4044f6:	nop
  4044f7:	nop
  4044f8:	jmp    QWORD PTR [rip+0x94d6]        # 0x40d9d4
  4044fe:	nop
  4044ff:	nop
  404500:	jmp    QWORD PTR [rip+0x94c6]        # 0x40d9cc
  404506:	nop
  404507:	nop
  404508:	jmp    QWORD PTR [rip+0x94b6]        # 0x40d9c4
  40450e:	nop
  40450f:	nop
  404510:	jmp    QWORD PTR [rip+0x94a6]        # 0x40d9bc
  404516:	nop
  404517:	nop
  404518:	jmp    QWORD PTR [rip+0x9496]        # 0x40d9b4
  40451e:	nop
  40451f:	nop
  404520:	jmp    QWORD PTR [rip+0x9486]        # 0x40d9ac
  404526:	nop
  404527:	nop
  404528:	jmp    QWORD PTR [rip+0x9476]        # 0x40d9a4
  40452e:	nop
  40452f:	nop
  404530:	jmp    QWORD PTR [rip+0x9466]        # 0x40d99c
  404536:	nop
  404537:	nop
  404538:	jmp    QWORD PTR [rip+0x9456]        # 0x40d994
  40453e:	nop
  40453f:	nop
  404540:	jmp    QWORD PTR [rip+0x9446]        # 0x40d98c
  404546:	nop
  404547:	nop
  404548:	jmp    QWORD PTR [rip+0x9436]        # 0x40d984
  40454e:	nop
  40454f:	nop
  404550:	jmp    QWORD PTR [rip+0x9426]        # 0x40d97c
  404556:	nop
  404557:	nop
  404558:	jmp    QWORD PTR [rip+0x9416]        # 0x40d974
  40455e:	nop
  40455f:	nop
  404560:	jmp    QWORD PTR [rip+0x9406]        # 0x40d96c
  404566:	nop
  404567:	nop
  404568:	jmp    QWORD PTR [rip+0x93f6]        # 0x40d964
  40456e:	nop
  40456f:	nop
  404570:	jmp    QWORD PTR [rip+0x93e6]        # 0x40d95c
  404576:	nop
  404577:	nop
  404578:	jmp    QWORD PTR [rip+0x93d6]        # 0x40d954
  40457e:	nop
  40457f:	nop
  404580:	jmp    QWORD PTR [rip+0x93c6]        # 0x40d94c
  404586:	nop
  404587:	nop
  404588:	jmp    QWORD PTR [rip+0x93b6]        # 0x40d944
  40458e:	nop
  40458f:	nop
  404590:	jmp    QWORD PTR [rip+0x93a6]        # 0x40d93c
  404596:	nop
  404597:	nop
  404598:	jmp    QWORD PTR [rip+0x9396]        # 0x40d934
  40459e:	nop
  40459f:	nop
  4045a0:	jmp    QWORD PTR [rip+0x9386]        # 0x40d92c
  4045a6:	nop
  4045a7:	nop
  4045a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4045b0:	push   r15
  4045b2:	push   r14
  4045b4:	push   r13
  4045b6:	push   r12
  4045b8:	push   rbp
  4045b9:	push   rdi
  4045ba:	push   rsi
  4045bb:	push   rbx
  4045bc:	sub    rsp,0x3d8
  4045c3:	lea    rdi,[rsp+0x1f0]
  4045cb:	mov    DWORD PTR [rsp+0x420],ecx
  4045d2:	mov    QWORD PTR [rsp+0x428],rdx
  4045da:	call   0x402fe0
  4045df:	xor    eax,eax
  4045e1:	mov    ecx,0x3c
  4045e6:	mov    QWORD PTR [rsp+0x90],0x0
  4045f2:	rep stos QWORD PTR es:[rdi],rax
  4045f5:	lea    rax,[rip+0x2f8c]        # 0x407588
  4045fc:	mov    QWORD PTR [rsp+0x98],0x0
  404608:	mov    DWORD PTR [rsp+0x70],0x0
  404610:	mov    DWORD PTR [rsp+0x74],0x0
  404618:	mov    DWORD PTR [rsp+0x78],0x0
  404620:	lea    rdx,[rip+0x2e5d]        # 0x407484
  404627:	mov    QWORD PTR [rsp+0x1f0],rax
  40462f:	lea    rax,[rsp+0x90]
  404637:	mov    DWORD PTR [rsp+0x7c],0x0
  40463f:	mov    DWORD PTR [rsp+0x80],0x0
  40464a:	mov    DWORD PTR [rsp+0x84],0x0
  404655:	lea    rsi,[rsp+0x88]
  40465d:	mov    QWORD PTR [rsp+0x208],rax
  404665:	lea    rax,[rip+0x2f23]        # 0x40758f
  40466c:	mov    QWORD PTR [rsp+0xa0],0x0
  404678:	mov    DWORD PTR [rsp+0x200],0x4
  404683:	mov    DWORD PTR [rsp+0x230],0x6
  40468e:	mov    QWORD PTR [rsp+0x210],rax
  404696:	lea    rax,[rip+0x2f0a]        # 0x4075a7
  40469d:	mov    QWORD PTR [rsp+0x218],rax
  4046a5:	lea    rax,[rip+0x2f00]        # 0x4075ac
  4046ac:	mov    QWORD PTR [rsp+0x220],rax
  4046b4:	lea    rax,[rip+0x7985]        # 0x40c040
  4046bb:	mov    QWORD PTR [rsp+0x238],rax
  4046c3:	lea    rax,[rip+0x2eee]        # 0x4075b8
  4046ca:	mov    QWORD PTR [rsp+0x240],rax
  4046d2:	lea    rax,[rip+0x2f2e]        # 0x407607
  4046d9:	mov    QWORD PTR [rsp+0x248],rax
  4046e1:	lea    rax,[rip+0x2f29]        # 0x407611
  4046e8:	mov    QWORD PTR [rsp+0x250],rax
  4046f0:	lea    rax,[rsp+0x70]
  4046f5:	mov    QWORD PTR [rsp+0x268],rax
  4046fd:	lea    rax,[rip+0x2f1c]        # 0x407620
  404704:	mov    QWORD PTR [rsp+0x270],rax
  40470c:	lea    rax,[rip+0x2f59]        # 0x40766c
  404713:	mov    QWORD PTR [rsp+0x280],rax
  40471b:	lea    rax,[rsp+0x78]
  404720:	mov    QWORD PTR [rsp+0x298],rax
  404728:	lea    rax,[rip+0x2f4d]        # 0x40767c
  40472f:	mov    QWORD PTR [rsp+0x2a0],rax
  404737:	lea    rax,[rip+0x2f55]        # 0x407693
  40473e:	mov    QWORD PTR [rsp+0x2b0],rax
  404746:	lea    rax,[rsp+0x74]
  40474b:	mov    QWORD PTR [rsp+0x2c8],rax
  404753:	lea    rax,[rip+0x2f4e]        # 0x4076a8
  40475a:	mov    QWORD PTR [rsp+0x2d0],rax
  404762:	lea    rax,[rip+0x2f84]        # 0x4076ed
  404769:	mov    QWORD PTR [rsp+0x2e0],rax
  404771:	lea    rax,[rsp+0x84]
  404779:	mov    QWORD PTR [rsp+0x2f8],rax
  404781:	lea    rax,[rip+0x2f7b]        # 0x407703
  404788:	mov    QWORD PTR [rsp+0x300],rax
  404790:	lea    rax,[rip+0x2f85]        # 0x40771c
  404797:	mov    QWORD PTR [rsp+0x310],rax
  40479f:	lea    rax,[rsp+0x7c]
  4047a4:	mov    QWORD PTR [rsp+0x328],rax
  4047ac:	lea    rax,[rip+0x2f7d]        # 0x407730
  4047b3:	mov    DWORD PTR [rsp+0x380],0x1
  4047be:	mov    QWORD PTR [rsp+0x330],rax
  4047c6:	lea    rax,[rip+0x2f94]        # 0x407761
  4047cd:	mov    QWORD PTR [rsp+0x340],rax
  4047d5:	lea    rax,[rsp+0x80]
  4047dd:	mov    QWORD PTR [rsp+0x358],rax
  4047e5:	lea    rax,[rip+0x2f84]        # 0x407770
  4047ec:	mov    QWORD PTR [rsp+0x360],rax
  4047f4:	lea    rax,[rip+0x2faa]        # 0x4077a5
  4047fb:	mov    QWORD PTR [rsp+0x370],rax
  404803:	lea    rax,[rsp+0xa0]
  40480b:	mov    QWORD PTR [rsp+0x388],rax
  404813:	lea    rax,[rip+0x2f96]        # 0x4077b0
  40481a:	mov    QWORD PTR [rsp+0x390],rax
  404822:	call   0x402e40
  404827:	lea    rcx,[rip+0x2fb7]        # 0x4077e5
  40482e:	call   0x402e38
  404833:	call   0x402e30
  404838:	lea    rcx,[rip+0x2fa6]        # 0x4077e5
  40483f:	mov    rbx,rax
  404842:	mov    rdx,rax
  404845:	call   0x402e58
  40484a:	mov    rcx,rbx
  40484d:	call   0x402de0
  404852:	lea    rdx,[rip+0x2f93]        # 0x4077ec
  404859:	lea    rcx,[rip+0x2f85]        # 0x4077e5
  404860:	call   0x402e60
  404865:	lea    rcx,[rip+0x2d3b]        # 0x4075a7
  40486c:	call   0x402d10
  404871:	lea    rdx,[rip+0x2f6d]        # 0x4077e5
  404878:	mov    rcx,rax
  40487b:	mov    rbx,rax
  40487e:	call   0x402cf8
  404883:	lea    rdx,[rip+0x2f6e]        # 0x4077f8
  40488a:	mov    rcx,rbx
  40488d:	call   0x402d00
  404892:	lea    rdx,[rsp+0x1f0]
  40489a:	lea    r8,[rip+0x2f44]        # 0x4077e5
  4048a1:	mov    rcx,rbx
  4048a4:	call   0x402d20
  4048a9:	lea    r8,[rsp+0x428]
  4048b1:	lea    rdx,[rsp+0x420]
  4048b9:	mov    r9,rsi
  4048bc:	mov    rcx,rbx
  4048bf:	mov    QWORD PTR [rsp+0x88],0x0
  4048cb:	call   0x402d08
  4048d0:	test   eax,eax
  4048d2:	je     0x404b27
  4048d8:	mov    rcx,rbx
  4048db:	call   0x402d18
  4048e0:	cmp    DWORD PTR [rsp+0x420],0x2
  4048e8:	jne    0x404aed
  4048ee:	cmp    DWORD PTR [rsp+0x80],0x0
  4048f6:	lea    rdx,[rip+0x2bfb]        # 0x4074f8
  4048fd:	lea    rax,[rip+0x2bfb]        # 0x4074ff
  404904:	lea    rcx,[rip+0x2fcc]        # 0x4078d7
  40490b:	cmove  rax,rdx
  40490f:	mov    QWORD PTR [rsp+0x50],rax
  404914:	mov    rax,QWORD PTR [rsp+0x428]
  40491c:	mov    rax,QWORD PTR [rax+0x8]
  404920:	mov    QWORD PTR [rsp+0x48],rax
  404925:	call   0x402dd8
  40492a:	mov    rcx,rax
  40492d:	call   0x402c40
  404932:	test   rax,rax
  404935:	mov    QWORD PTR [rip+0x76fc],rax        # 0x40c038
  40493c:	je     0x4051a6
  404942:	lea    rcx,[rip+0x2feb]        # 0x407934
  404949:	call   0x402dd8
  40494e:	mov    rcx,rax
  404951:	call   0x402c40
  404956:	test   rax,rax
  404959:	mov    QWORD PTR [rip+0x76d0],rax        # 0x40c030
  404960:	je     0x40518e
  404966:	mov    rcx,QWORD PTR [rsp+0x90]
  40496e:	test   rcx,rcx
  404971:	je     0x4051d3
  404977:	cmp    DWORD PTR [rsp+0x70],0x0
  40497c:	jne    0x404c7a
  404982:	cmp    DWORD PTR [rsp+0x84],0x0
  40498a:	lea    rbp,[rsp+0xd0]
  404992:	lea    rbx,[rip+0xffffffffffffde87]        # 0x402820
  404999:	mov    ecx,0xa
  40499e:	lea    rdx,[rsp+0xb0]
  4049a6:	lea    r8,[rsp+0xb8]
  4049ae:	mov    rdi,rbp
  4049b1:	mov    QWORD PTR [rsp+0xa8],0x0
  4049bd:	sete   r12b
  4049c1:	xor    eax,eax
  4049c3:	rep stos DWORD PTR es:[rdi],eax
  4049c5:	mov    QWORD PTR [rsp+0xd0],rbx
  4049cd:	lea    rbx,[rip+0xffffffffffffd67c]        # 0x402050
  4049d4:	movzx  r13d,r12b
  4049d8:	mov    QWORD PTR [rsp+0xd8],rbx
  4049e0:	lea    rbx,[rip+0xffffffffffffe099]        # 0x402a80
  4049e7:	mov    QWORD PTR [rsp+0xe0],rbx
  4049ef:	lea    rbx,[rsp+0x130]
  4049f7:	mov    cl,0xe
  4049f9:	mov    rdi,rbx
  4049fc:	rep stos DWORD PTR es:[rdi],eax
  4049fe:	lea    rdi,[rsp+0xa8]
  404a06:	mov    rcx,QWORD PTR [rsp+0x48]
  404a0b:	mov    r9,rdi
  404a0e:	call   0x402e08
  404a13:	test   eax,eax
  404a15:	je     0x404f85
  404a1b:	lea    r9,[rip+0xffffffffffffd56e]        # 0x401f90
  404a22:	lea    r8,[rip+0xffffffffffffe3b7]        # 0x402de0
  404a29:	lea    rdx,[rip+0xffffffffffffe238]        # 0x402c68
  404a30:	lea    rcx,[rip+0xffffffffffffe219]        # 0x402c50
  404a37:	call   0x402da0
  404a3c:	xor    r9d,r9d
  404a3f:	mov    r8,rbx
  404a42:	mov    edx,0x6
  404a47:	mov    rcx,rbp
  404a4a:	mov    QWORD PTR [rsp+0x130],rax
  404a52:	mov    DWORD PTR [rsp+0x138],r13d
  404a5a:	call   0x402d38
  404a5f:	mov    r8,QWORD PTR [rsp+0xb8]
  404a67:	mov    rdx,QWORD PTR [rsp+0xb0]
  404a6f:	mov    r9,rdi
  404a72:	mov    rcx,rax
  404a75:	mov    r14,rax
  404a78:	call   0x402d30
  404a7d:	test   eax,eax
  404a7f:	jne    0x404b46
  404a85:	mov    rax,QWORD PTR [rsp+0xa8]
  404a8d:	mov    rdx,QWORD PTR [rsp+0x48]
  404a92:	lea    rcx,[rip+0x2ed7]        # 0x407970
  404a99:	mov    r8,QWORD PTR [rax+0x8]
  404a9d:	call   0x402cd0
  404aa2:	mov    rcx,rdi
  404aa5:	call   0x402e10
  404aaa:	mov    rcx,QWORD PTR [rsp+0x130]
  404ab2:	call   0x402d88
  404ab7:	mov    rcx,r14
  404aba:	call   0x402d50
  404abf:	mov    rcx,QWORD PTR [rsp+0xb0]
  404ac7:	call   0x402de0
  404acc:	mov    rcx,QWORD PTR [rsp+0x90]
  404ad4:	call   0x402de0
  404ad9:	mov    rcx,QWORD PTR [rsp+0xa0]
  404ae1:	call   0x402de0
  404ae6:	mov    eax,0x1
  404aeb:	jmp    0x404b13
  404aed:	lea    rcx,[rip+0x2dbc]        # 0x4078b0
  404af4:	call   0x402e48
  404af9:	mov    rcx,rax
  404afc:	call   0x402cd0
  404b01:	mov    rcx,QWORD PTR [rsp+0xa0]
  404b09:	call   0x402de0
  404b0e:	mov    eax,0x1
  404b13:	add    rsp,0x3d8
  404b1a:	pop    rbx
  404b1b:	pop    rsi
  404b1c:	pop    rdi
  404b1d:	pop    rbp
  404b1e:	pop    r12
  404b20:	pop    r13
  404b22:	pop    r14
  404b24:	pop    r15
  404b26:	ret    
  404b27:	mov    rax,QWORD PTR [rsp+0x88]
  404b2f:	lea    rcx,[rip+0x2d75]        # 0x4078ab
  404b36:	mov    rdx,QWORD PTR [rax+0x8]
  404b3a:	call   0x402cd0
  404b3f:	mov    eax,0x1
  404b44:	jmp    0x404b13
  404b46:	mov    rdx,rdi
  404b49:	mov    rcx,r14
  404b4c:	call   0x402d58
  404b51:	test   eax,eax
  404b53:	je     0x404a85
  404b59:	test   r12b,r12b
  404b5c:	jne    0x404c9b
  404b62:	mov    rcx,QWORD PTR [rsp+0x130]
  404b6a:	call   0x402d98
  404b6f:	mov    r13,rax
  404b72:	mov    rcx,QWORD PTR [rsp+0x130]
  404b7a:	call   0x402d88
  404b7f:	mov    rcx,r14
  404b82:	call   0x402d50
  404b87:	mov    rcx,QWORD PTR [rsp+0xb0]
  404b8f:	call   0x402de0
  404b94:	test   r13,r13
  404b97:	je     0x404acc
  404b9d:	cmp    DWORD PTR [rsp+0x84],0x0
  404ba5:	jne    0x404e6b
  404bab:	cmp    DWORD PTR [rsp+0x74],0x0
  404bb0:	je     0x404e33
  404bb6:	lea    rdx,[rsp+0x98]
  404bbe:	xor    r8d,r8d
  404bc1:	xor    ecx,ecx
  404bc3:	call   0x402e00
  404bc8:	cmp    eax,0xffffffff
  404bcb:	je     0x4053a6
  404bd1:	mov    ecx,eax
  404bd3:	call   0x4043d0
  404bd8:	mov    rdi,QWORD PTR [rsp+0xa0]
  404be0:	test   rdi,rdi
  404be3:	jne    0x404bfa
  404be5:	jmp    0x4052cc
  404bea:	nop    WORD PTR [rax+rax*1+0x0]
  404bf0:	add    rdi,0x1
  404bf4:	je     0x404e64
  404bfa:	cmp    BYTE PTR [rdi],0x5f
  404bfd:	je     0x404bf0
  404bff:	mov    rdx,QWORD PTR [rsp+0x98]
  404c07:	test   rdx,rdx
  404c0a:	je     0x404c22
  404c0c:	xor    r8d,r8d
  404c0f:	mov    r9,rsi
  404c12:	mov    rcx,r13
  404c15:	call   0x401d80
  404c1a:	test   eax,eax
  404c1c:	je     0x404f68
  404c22:	cmp    DWORD PTR [rsp+0x78],0x0
  404c27:	jne    0x404ebb
  404c2d:	cmp    DWORD PTR [rsp+0x74],0x0
  404c32:	jne    0x404f2b
  404c38:	mov    rcx,QWORD PTR [rsp+0x98]
  404c40:	call   0x402de0
  404c45:	mov    rcx,QWORD PTR [rsp+0x90]
  404c4d:	call   0x402de0
  404c52:	mov    rcx,r13
  404c55:	call   0x402dd0
  404c5a:	mov    rcx,QWORD PTR [rip+0x73d7]        # 0x40c038
  404c61:	call   0x402de0
  404c66:	mov    rcx,QWORD PTR [rsp+0xa0]
  404c6e:	call   0x402de0
  404c73:	xor    eax,eax
  404c75:	jmp    0x404b13
  404c7a:	lea    rdx,[rip+0x2ce9]        # 0x40796a
  404c81:	call   0x402c58
  404c86:	test   eax,eax
  404c88:	je     0x4050d0
  404c8e:	mov    DWORD PTR [rsp+0x74],0x1
  404c96:	jmp    0x404982
  404c9b:	xor    edx,edx
  404c9d:	xor    ecx,ecx
  404c9f:	lea    r12,[rsp+0x100]
  404ca7:	call   0x401c50
  404cac:	mov    rdx,QWORD PTR [rsp+0x130]
  404cb4:	mov    rcx,r12
  404cb7:	mov    r13,rax
  404cba:	lea    rdi,[rsp+0xc0]
  404cc2:	lea    rbp,[rsp+0x170]
  404cca:	call   0x402db8
  404ccf:	lea    rax,[rsp+0xc8]
  404cd7:	mov    QWORD PTR [rsp+0x58],r14
  404cdc:	mov    QWORD PTR [rsp+0x60],rbx
  404ce1:	mov    QWORD PTR [rsp+0x68],rsi
  404ce6:	mov    r14,rdi
  404ce9:	mov    r15,rax
  404cec:	jmp    0x404e09
  404cf1:	mov    rdx,QWORD PTR [rsp+0xc0]
  404cf9:	xor    eax,eax
  404cfb:	or     rcx,0xffffffffffffffff
  404cff:	mov    rdi,rdx
  404d02:	repnz scas al,BYTE PTR es:[rdi]
  404d04:	mov    rax,rcx
  404d07:	mov    rcx,rdx
  404d0a:	not    rax
  404d0d:	lea    rsi,[rax-0x1]
  404d11:	call   0x402c40
  404d16:	mov    rdx,QWORD PTR [rsp+0xc0]
  404d1e:	mov    rdi,rax
  404d21:	mov    rcx,r13
  404d24:	call   0x401ad0
  404d29:	mov    r8d,esi
  404d2c:	mov    rbx,rax
  404d2f:	mov    rdx,rdi
  404d32:	mov    rcx,r13
  404d35:	call   0x401fc0
  404d3a:	mov    rcx,rbx
  404d3d:	mov    rdx,rax
  404d40:	call   0x401cb0
  404d45:	mov    rcx,rdi
  404d48:	call   0x402de0
  404d4d:	lea    rcx,[rip+0x2c25]        # 0x407979
  404d54:	call   0x402b98
  404d59:	mov    rcx,rbp
  404d5c:	mov    rdx,rax
  404d5f:	call   0x402be0
  404d64:	mov    rax,QWORD PTR [rsp+0xc8]
  404d6c:	lea    rdx,[rip+0x2c0d]        # 0x407980
  404d73:	mov    rcx,rbp
  404d76:	mov    r8,QWORD PTR [rax+0x18]
  404d7a:	call   0x402bf8
  404d7f:	mov    rax,QWORD PTR [rsp+0xc8]
  404d87:	lea    rdx,[rip+0x2bf2]        # 0x407980
  404d8e:	mov    rcx,rbp
  404d91:	mov    r8d,DWORD PTR [rax+0x20]
  404d95:	call   0x402bf8
  404d9a:	mov    rax,QWORD PTR [rsp+0xc8]
  404da2:	lea    rcx,[rip+0x2bd9]        # 0x407982
  404da9:	mov    rsi,QWORD PTR [rax+0x8]
  404dad:	mov    rdi,QWORD PTR [rax+0x10]
  404db1:	call   0x402b98
  404db6:	mov    rdx,QWORD PTR [rip+0x4713]        # 0x4094d0
  404dbd:	mov    r9d,0x1
  404dc3:	mov    rcx,rax
  404dc6:	mov    r8,rdi
  404dc9:	mov    QWORD PTR [rsp+0x28],rsi
  404dce:	mov    QWORD PTR [rsp+0x20],rdx
  404dd3:	mov    rdx,rsi
  404dd6:	call   0x402bc0
  404ddb:	mov    rcx,rbp
  404dde:	mov    rdx,rax
  404de1:	call   0x402bf0
  404de6:	mov    rax,QWORD PTR [rsp+0xc8]
  404dee:	mov    rcx,rbp
  404df1:	mov    QWORD PTR [rax+0x8],0x0
  404df9:	call   0x402be8
  404dfe:	mov    rcx,rbx
  404e01:	mov    rdx,rax
  404e04:	call   0x401b60
  404e09:	mov    r8,r15
  404e0c:	mov    rdx,r14
  404e0f:	mov    rcx,r12
  404e12:	call   0x402db0
  404e17:	test   eax,eax
  404e19:	jne    0x404cf1
  404e1f:	mov    r14,QWORD PTR [rsp+0x58]
  404e24:	mov    rbx,QWORD PTR [rsp+0x60]
  404e29:	mov    rsi,QWORD PTR [rsp+0x68]
  404e2e:	jmp    0x404b72
  404e33:	cmp    DWORD PTR [rsp+0x78],0x0
  404e38:	jne    0x404bd8
  404e3e:	mov    rcx,QWORD PTR [rsp+0x90]
  404e46:	call   0x402c40
  404e4b:	mov    QWORD PTR [rsp+0x98],rax
  404e53:	mov    rdi,QWORD PTR [rsp+0xa0]
  404e5b:	test   rdi,rdi
  404e5e:	jne    0x404bfa
  404e64:	xor    edi,edi
  404e66:	jmp    0x404bff
  404e6b:	lea    rdi,[rsp+0x170]
  404e73:	mov    rdx,r13
  404e76:	lea    r12,[rsp+0x100]
  404e7e:	mov    rcx,rdi
  404e81:	call   0x402db8
  404e86:	jmp    0x404ea7
  404e88:	nop    DWORD PTR [rax+rax*1+0x0]
  404e90:	mov    rax,QWORD PTR [rsp+0x130]
  404e98:	lea    rcx,[rip+0x2a0c]        # 0x4078ab
  404e9f:	mov    rdx,QWORD PTR [rax]
  404ea2:	call   0x402cd8
  404ea7:	mov    r8,rbx
  404eaa:	mov    rdx,r12
  404ead:	mov    rcx,rdi
  404eb0:	call   0x402db0
  404eb5:	test   eax,eax
  404eb7:	jne    0x404e90
  404eb9:	jmp    0x404e53
  404ebb:	mov    rcx,QWORD PTR [rsp+0x90]
  404ec3:	lea    rdx,[rip+0x2ad1]        # 0x40799b
  404eca:	call   0x404438
  404ecf:	test   rax,rax
  404ed2:	mov    rbx,rax
  404ed5:	je     0x4053e6
  404edb:	mov    r8,QWORD PTR [rsp+0xa0]
  404ee3:	mov    rax,QWORD PTR [rsp+0x50]
  404ee8:	lea    rdx,[rip+0x2ac9]        # 0x4079b8
  404eef:	mov    rcx,rbx
  404ef2:	mov    QWORD PTR [rsp+0x28],r8
  404ef7:	mov    QWORD PTR [rsp+0x20],rax
  404efc:	mov    r9,r8
  404eff:	call   0x402e50
  404f04:	cmp    DWORD PTR [rsp+0x7c],0x0
  404f09:	jne    0x40529e
  404f0f:	lea    rdx,[rip+0x2b69]        # 0x407a7f
  404f16:	mov    rcx,rbx
  404f19:	call   0x402e50
  404f1e:	mov    rcx,rbx
  404f21:	call   0x404440
  404f26:	jmp    0x404c38
  404f2b:	mov    rcx,QWORD PTR [rsp+0x98]
  404f33:	lea    r8,[rsp+0x170]
  404f3b:	xor    r9d,r9d
  404f3e:	mov    rdx,rbx
  404f41:	call   0x402e08
  404f46:	test   eax,eax
  404f48:	jne    0x404faa
  404f4a:	lea    rcx,[rip+0x2b37]        # 0x407a88
  404f51:	call   0x402cd0
  404f56:	mov    rcx,QWORD PTR [rsp+0xa0]
  404f5e:	call   0x402de0
  404f63:	jmp    0x404ae6
  404f68:	mov    rax,QWORD PTR [rsp+0x88]
  404f70:	lea    rcx,[rip+0x2934]        # 0x4078ab
  404f77:	mov    rdx,QWORD PTR [rax+0x8]
  404f7b:	call   0x402cd0
  404f80:	jmp    0x404acc
  404f85:	mov    rax,QWORD PTR [rsp+0xa8]
  404f8d:	lea    rcx,[rip+0x2917]        # 0x4078ab
  404f94:	mov    rdx,QWORD PTR [rax+0x8]
  404f98:	call   0x402cd0
  404f9d:	mov    rcx,rdi
  404fa0:	call   0x402e10
  404fa5:	jmp    0x404acc
  404faa:	mov    rcx,QWORD PTR [rsp+0x98]
  404fb2:	call   0x402c00
  404fb7:	mov    rcx,QWORD PTR [rsp+0x90]
  404fbf:	lea    rdx,[rip+0x29d5]        # 0x40799b
  404fc6:	call   0x404438
  404fcb:	test   rax,rax
  404fce:	mov    rsi,rax
  404fd1:	je     0x405463
  404fd7:	mov    rax,QWORD PTR [rsp+0xa0]
  404fdf:	mov    r9,QWORD PTR [rsp+0x170]
  404fe7:	lea    rdx,[rip+0x2aba]        # 0x407aa8
  404fee:	mov    r8,rdi
  404ff1:	mov    rcx,rsi
  404ff4:	xor    ebx,ebx
  404ff6:	mov    QWORD PTR [rsp+0x20],rax
  404ffb:	call   0x402e50
  405000:	jmp    0x40502c
  405002:	lea    rdx,[rip+0x2bf7]        # 0x407c00
  405009:	mov    rcx,rsi
  40500c:	call   0x402e50
  405011:	cmp    rdi,0x7
  405015:	je     0x40506f
  405017:	mov    rax,QWORD PTR [rsp+0x170]
  40501f:	sub    rax,0x1
  405023:	cmp    rax,rbx
  405026:	je     0x40506f
  405028:	add    rbx,0x1
  40502c:	cmp    rbx,QWORD PTR [rsp+0x170]
  405034:	jae    0x4050f9
  40503a:	mov    rdi,rbx
  40503d:	and    edi,0x7
  405040:	je     0x405080
  405042:	mov    rax,QWORD PTR [rsp+0x130]
  40504a:	lea    rdx,[rip+0x2ba7]        # 0x407bf8
  405051:	mov    rcx,rsi
  405054:	movzx  r8d,BYTE PTR [rax+rbx*1]
  405059:	call   0x402e50
  40505e:	mov    rax,QWORD PTR [rsp+0x170]
  405066:	lea    rdx,[rax-0x1]
  40506a:	cmp    rdx,rbx
  40506d:	jne    0x405002
  40506f:	lea    rdx,[rip+0x2b8d]        # 0x407c03
  405076:	mov    rcx,rsi
  405079:	call   0x402e50
  40507e:	jmp    0x405028
  405080:	lea    rdx,[rip+0x2b6e]        # 0x407bf5
  405087:	mov    rcx,rsi
  40508a:	call   0x402e50
  40508f:	mov    rax,QWORD PTR [rsp+0x130]
  405097:	lea    rdx,[rip+0x2b5a]        # 0x407bf8
  40509e:	mov    rcx,rsi
  4050a1:	movzx  r8d,BYTE PTR [rax+rbx*1]
  4050a6:	call   0x402e50
  4050ab:	mov    rax,QWORD PTR [rsp+0x170]
  4050b3:	sub    rax,0x1
  4050b7:	cmp    rax,rbx
  4050ba:	je     0x40506f
  4050bc:	lea    rdx,[rip+0x2b3d]        # 0x407c00
  4050c3:	mov    rcx,rsi
  4050c6:	call   0x402e50
  4050cb:	jmp    0x405017
  4050d0:	mov    rcx,QWORD PTR [rsp+0x90]
  4050d8:	lea    rdx,[rip+0x288e]        # 0x40796d
  4050df:	call   0x402c58
  4050e4:	test   eax,eax
  4050e6:	je     0x405411
  4050ec:	mov    DWORD PTR [rsp+0x78],0x1
  4050f4:	jmp    0x404982
  4050f9:	lea    rdx,[rip+0x2b05]        # 0x407c05
  405100:	mov    rcx,rsi
  405103:	call   0x402e50
  405108:	mov    r8,QWORD PTR [rsp+0xa0]
  405110:	mov    rax,QWORD PTR [rsp+0x50]
  405115:	lea    rdx,[rip+0x2af4]        # 0x407c10
  40511c:	mov    rcx,rsi
  40511f:	mov    QWORD PTR [rsp+0x30],r8
  405124:	mov    QWORD PTR [rsp+0x28],r8
  405129:	mov    r9,r8
  40512c:	mov    QWORD PTR [rsp+0x20],rax
  405131:	call   0x402e50
  405136:	cmp    DWORD PTR [rsp+0x7c],0x0
  40513b:	je     0x40537c
  405141:	mov    r9,QWORD PTR [rsp+0xa0]
  405149:	mov    rax,QWORD PTR [rsp+0x50]
  40514e:	lea    rdx,[rip+0x2bbb]        # 0x407d10
  405155:	mov    rcx,rsi
  405158:	mov    QWORD PTR [rsp+0x38],r9
  40515d:	mov    QWORD PTR [rsp+0x30],r9
  405162:	mov    r8,rax
  405165:	mov    QWORD PTR [rsp+0x28],rax
  40516a:	mov    QWORD PTR [rsp+0x20],r9
  40516f:	call   0x402e50
  405174:	mov    rcx,rsi
  405177:	call   0x404440
  40517c:	mov    rcx,QWORD PTR [rsp+0x130]
  405184:	call   0x402de0
  405189:	jmp    0x404c38
  40518e:	lea    rcx,[rip+0x27b2]        # 0x407947
  405195:	call   0x402de8
  40519a:	mov    QWORD PTR [rip+0x6e8f],rax        # 0x40c030
  4051a1:	jmp    0x404966
  4051a6:	lea    rcx,[rip+0x2732]        # 0x4078df
  4051ad:	call   0x402de8
  4051b2:	test   rax,rax
  4051b5:	mov    QWORD PTR [rip+0x6e7c],rax        # 0x40c038
  4051bc:	jne    0x404942
  4051c2:	lea    rcx,[rip+0x271f]        # 0x4078e8
  4051c9:	call   0x402cd0
  4051ce:	jmp    0x404942
  4051d3:	mov    rbx,QWORD PTR [rsp+0x48]
  4051d8:	mov    rcx,rbx
  4051db:	call   0x402ce8
  4051e0:	mov    rcx,rbx
  4051e3:	mov    rbp,rax
  4051e6:	call   0x402cf0
  4051eb:	lea    rdx,[rip+0x2768]        # 0x40795a
  4051f2:	mov    rcx,rax
  4051f5:	mov    rbx,rax
  4051f8:	call   0x402c58
  4051fd:	test   eax,eax
  4051ff:	je     0x405217
  405201:	xor    eax,eax
  405203:	or     rcx,0xffffffffffffffff
  405207:	mov    rdi,rbx
  40520a:	repnz scas al,BYTE PTR es:[rdi]
  40520c:	mov    rax,rcx
  40520f:	not    rax
  405212:	mov    BYTE PTR [rbx+rax*1-0x5],0x0
  405217:	cmp    DWORD PTR [rsp+0x74],0x0
  40521c:	lea    rdx,[rip+0x273c]        # 0x40795f
  405223:	mov    rcx,rbx
  405226:	jne    0x40542a
  40522c:	cmp    DWORD PTR [rsp+0x78],0x0
  405231:	je     0x4053c9
  405237:	call   0x402c58
  40523c:	test   eax,eax
  40523e:	je     0x405256
  405240:	xor    eax,eax
  405242:	or     rcx,0xffffffffffffffff
  405246:	mov    rdi,rbx
  405249:	repnz scas al,BYTE PTR es:[rdi]
  40524b:	mov    rax,rcx
  40524e:	not    rax
  405251:	mov    BYTE PTR [rbx+rax*1-0xb],0x0
  405256:	lea    rdx,[rip+0x2710]        # 0x40796d
  40525d:	xor    r8d,r8d
  405260:	mov    rcx,rbx
  405263:	call   0x402c48
  405268:	mov    rdi,rax
  40526b:	xor    r8d,r8d
  40526e:	mov    rdx,rdi
  405271:	mov    rcx,rbp
  405274:	call   0x402e20
  405279:	mov    rcx,rdi
  40527c:	mov    QWORD PTR [rsp+0x90],rax
  405284:	call   0x402de0
  405289:	mov    rcx,rbp
  40528c:	call   0x402de0
  405291:	mov    rcx,rbx
  405294:	call   0x402de0
  405299:	jmp    0x404982
  40529e:	mov    rax,QWORD PTR [rsp+0x50]
  4052a3:	mov    r9,QWORD PTR [rsp+0xa0]
  4052ab:	lea    rdx,[rip+0x277e]        # 0x407a30
  4052b2:	mov    rcx,rbx
  4052b5:	mov    QWORD PTR [rsp+0x28],r9
  4052ba:	mov    QWORD PTR [rsp+0x20],rax
  4052bf:	mov    r8,rax
  4052c2:	call   0x402e50
  4052c7:	jmp    0x404f0f
  4052cc:	mov    rcx,QWORD PTR [rsp+0x48]
  4052d1:	call   0x402cf0
  4052d6:	mov    edx,0x2e
  4052db:	mov    rcx,rax
  4052de:	mov    rdi,rax
  4052e1:	call   0x404400
  4052e6:	test   rax,rax
  4052e9:	je     0x4052ee
  4052eb:	mov    BYTE PTR [rax],0x0
  4052ee:	lea    rcx,[rip+0x218f]        # 0x407484
  4052f5:	xor    r15d,r15d
  4052f8:	lea    r12,[rip+0x2249]        # 0x407548
  4052ff:	call   0x402c10
  405304:	mov    QWORD PTR [rsp+0x58],rbx
  405309:	mov    QWORD PTR [rsp+0x48],rax
  40530e:	mov    r14,rax
  405311:	jmp    0x405321
  405313:	mov    edx,ebx
  405315:	mov    rcx,r14
  405318:	call   0x402a20
  40531d:	add    r15,0x1
  405321:	movzx  ebp,BYTE PTR [rdi+r15*1]
  405326:	test   bpl,bpl
  405329:	je     0x40535e
  40532b:	lea    rcx,[rip+0x21de]        # 0x407510
  405332:	test   r15,r15
  405335:	movsx  ebx,bpl
  405339:	mov    edx,ebx
  40533b:	cmovne rcx,r12
  40533f:	call   0x404400
  405344:	test   rax,rax
  405347:	jne    0x405313
  405349:	cmp    bpl,0x2d
  40534d:	jne    0x40531d
  40534f:	mov    edx,0x5f
  405354:	mov    rcx,r14
  405357:	call   0x402a20
  40535c:	jmp    0x40531d
  40535e:	mov    rcx,QWORD PTR [rsp+0x48]
  405363:	xor    edx,edx
  405365:	mov    rbx,QWORD PTR [rsp+0x58]
  40536a:	call   0x402c20
  40536f:	mov    QWORD PTR [rsp+0xa0],rax
  405377:	jmp    0x404e53
  40537c:	lea    r8,[rip+0x2cfd]        # 0x408080
  405383:	lea    rdx,[rip+0x2a7b]        # 0x407e05
  40538a:	mov    rcx,rsi
  40538d:	call   0x402e50
  405392:	lea    rdx,[rip+0x2a6f]        # 0x407e08
  405399:	mov    rcx,rsi
  40539c:	call   0x402e50
  4053a1:	jmp    0x405174
  4053a6:	lea    rcx,[rip+0x25d8]        # 0x407985
  4053ad:	call   0x402cd0
  4053b2:	mov    rcx,QWORD PTR [rsp+0xa0]
  4053ba:	call   0x402de0
  4053bf:	mov    eax,0x1
  4053c4:	jmp    0x404b13
  4053c9:	call   0x402c58
  4053ce:	test   eax,eax
  4053d0:	je     0x405489
  4053d6:	mov    rcx,rbx
  4053d9:	call   0x402c40
  4053de:	mov    rdi,rax
  4053e1:	jmp    0x40526b
  4053e6:	mov    rdx,QWORD PTR [rsp+0x90]
  4053ee:	lea    rcx,[rip+0x25a8]        # 0x40799d
  4053f5:	call   0x402cd0
  4053fa:	mov    rcx,QWORD PTR [rsp+0xa0]
  405402:	call   0x402de0
  405407:	mov    eax,0x1
  40540c:	jmp    0x404b13
  405411:	mov    rcx,QWORD PTR [rsp+0x90]
  405419:	lea    rdx,[rip+0x253f]        # 0x40795f
  405420:	call   0x402c58
  405425:	jmp    0x404982
  40542a:	call   0x402c58
  40542f:	test   eax,eax
  405431:	je     0x405449
  405433:	xor    eax,eax
  405435:	or     rcx,0xffffffffffffffff
  405439:	mov    rdi,rbx
  40543c:	repnz scas al,BYTE PTR es:[rdi]
  40543e:	mov    rax,rcx
  405441:	not    rax
  405444:	mov    BYTE PTR [rbx+rax*1-0xb],0x0
  405449:	lea    rdx,[rip+0x251a]        # 0x40796a
  405450:	xor    r8d,r8d
  405453:	mov    rcx,rbx
  405456:	call   0x402c48
  40545b:	mov    rdi,rax
  40545e:	jmp    0x40526b
  405463:	mov    rdx,QWORD PTR [rsp+0x90]
  40546b:	lea    rcx,[rip+0x252b]        # 0x40799d
  405472:	call   0x402cd0
  405477:	mov    rcx,QWORD PTR [rsp+0xa0]
  40547f:	call   0x402de0
  405484:	jmp    0x404ae6
  405489:	lea    rdx,[rip+0x24cf]        # 0x40795f
  405490:	xor    r8d,r8d
  405493:	mov    rcx,rbx
  405496:	call   0x402c48
  40549b:	mov    rdi,rax
  40549e:	jmp    0x40526b
  4054a3:	nop
  4054a4:	nop
  4054a5:	nop
  4054a6:	nop
  4054a7:	nop
  4054a8:	nop
  4054a9:	nop
  4054aa:	nop
  4054ab:	nop
  4054ac:	nop
  4054ad:	nop
  4054ae:	nop
  4054af:	nop
  4054b0:	(bad)  
  4054b1:	(bad)  
  4054b2:	(bad)  
  4054b3:	(bad)  
  4054b4:	(bad)  
  4054b5:	(bad)  
  4054b6:	(bad)  
  4054b7:	inc    DWORD PTR [rax]
  4054b9:	add    BYTE PTR [rax],al
  4054bb:	add    BYTE PTR [rax],al
  4054bd:	add    BYTE PTR [rax],al
  4054bf:	add    bh,bh
  4054c1:	(bad)  
  4054c2:	(bad)  
  4054c3:	(bad)  
  4054c4:	(bad)  
  4054c5:	(bad)  
  4054c6:	(bad)  
  4054c7:	inc    DWORD PTR [rax]
  4054c9:	add    BYTE PTR [rax],al
  4054cb:	add    BYTE PTR [rax],al
  4054cd:	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

0000000000406000 <.data>:
  406000:	or     al,BYTE PTR [rax]
	...
  40600e:	add    BYTE PTR [rax],al
  406010:	enter  0x4054,0x0
	...
  406020:	(bad)  
  406021:	(bad)  
  406022:	(bad)  
  406023:	(bad)  
  406024:	(bad)  
  406025:	(bad)  
  406026:	(bad)  
  406027:	inc    DWORD PTR [rax]
  406029:	add    BYTE PTR [rax],al
  40602b:	add    BYTE PTR [rax],al
  40602d:	add    BYTE PTR [rax],al
  40602f:	add    bh,bh
	...
  40603d:	add    BYTE PTR [rax],al
  40603f:	add    BYTE PTR [rdx],al
	...
  40604d:	add    BYTE PTR [rax],al
  40604f:	add    bh,bh
  406051:	(bad)  
  406052:	(bad)  
  406053:	inc    DWORD PTR [rax]
	...
  40605d:	add    BYTE PTR [rax],al
  40605f:	add    al,dl
  406061:	rex.R
  406062:	add    BYTE PTR [rax],al
  406065:	add    BYTE PTR [rax],al
  406067:	add    al,ah
  406069:	rex.R
  40606a:	add    BYTE PTR [rax],al
  40606d:	add    BYTE PTR [rax],al
  40606f:	add    BYTE PTR [rdx],dh
  406071:	movabs ds:0x2b992ddf,al
  40607a:	add    BYTE PTR [rax],al
  40607c:	add    BYTE PTR [rax],al
  40607e:	add    BYTE PTR [rax],al
  406080:	int    0x5d
  406082:	and    dl,dl
  406084:	data16 (bad) 
  406086:	(bad)  
  406087:	inc    DWORD PTR [rax]
  406089:	add    BYTE PTR [rax],al
  40608b:	add    BYTE PTR [rax],al
  40608d:	add    BYTE PTR [rax],al
	...

Disassembly of section .rdata:

0000000000407000 <.rdata>:
  407000:	addr32 jbe 0x407067
  407003:	(bad)  
  407004:	(bad)  
  407005:	addr32 jbe 0x40706c
  407008:	(bad)  
  407009:	sub    eax,0x6c697562
  40700e:	fs gs jb 0x407040
  407012:	movsxd eax,DWORD PTR [rax]
  407014:	rex.RXB
  407015:	imul   r12,QWORD PTR [rdx+0x2d],0x4f4947
  40701d:	jae    0x407088
  40701f:	jp     0x407086
  407021:	and    BYTE PTR [rip+0x30203d],bh        # 0x709064
  407027:	add    BYTE PTR [rcx+0x6e],ch
  40702a:	fs gs js 0x40704e
  40702e:	cmp    eax,0x7567203d
  407033:	imul   ebp,DWORD PTR [rsi+0x74],0x665f3233
  40703a:	jb     0x4070ab
  40703c:	ins    DWORD PTR es:[rdi],dx
  40703d:	pop    rdi
  40703e:	ins    BYTE PTR es:[rdi],dx
  40703f:	and    BYTE PTR gs:[rax],ch
  407042:	imul   esi,DWORD PTR [rbp+riz*2+0x6d],0x73613e2d
  40704a:	jae    0x4070b5
  40704c:	outs   dx,BYTE PTR ds:[esi]
  40704e:	gs fs pop rdi
  407051:	imul   ebp,DWORD PTR [rsi+0x64],0x297865
  407058:	imul   esi,DWORD PTR [rbp+riz*2+0x6d],0x68633e2d
  407060:	imul   ebp,DWORD PTR [rsp+riz*2+0x20],0x4e203d3d
  407068:	push   rbp
  407069:	rex.WR
  40706a:	rex.WR and BYTE PTR [rsi],r12b
  40706d:	and    BYTE PTR es:[rcx+0x74],ch
  407071:	gs ins DWORD PTR es:[rdi],dx
  407073:	sub    eax,0x6261743e
  407078:	ins    BYTE PTR es:[rdi],dx
  407079:	and    BYTE PTR gs:[rip+0x554e203d],bh        # 0x558e90bd
  407080:	rex.WR
  407081:	rex.WR add BYTE PTR [rcx+0x74],r13b
  407085:	gs ins DWORD PTR es:[rdi],dx
  407087:	sub    eax,0x6261743e
  40708c:	ins    BYTE PTR es:[rdi],dx
  40708d:	and    BYTE PTR gs:[rip+0x554e203d],bh        # 0x558e90d1
  407094:	rex.WR
  407095:	rex.WR add BYTE PTR [rbx+0x68],r12b
  407099:	imul   ebp,DWORD PTR [rsp+riz*2+0x72],0x3d206e65
  4070a1:	cmp    eax,0x6920
  4070a6:	add    BYTE PTR [rax],al
  4070a8:	and    DWORD PTR [rcx+0x74],ebp
  4070ab:	gs ins DWORD PTR es:[rdi],dx
  4070ad:	sub    eax,0x6c61763e
  4070b2:	jne    0x407119
  4070b4:	and    BYTE PTR [rsi],ah
  4070b6:	and    BYTE PTR es:[rcx],ah
  4070b9:	imul   esi,DWORD PTR [rbp+riz*2+0x6d],0x61743e2d
  4070c1:	(bad)  
  4070c2:	ins    BYTE PTR es:[rdi],dx
  4070c3:	and    BYTE PTR gs:[rsi],ah
  4070c6:	and    BYTE PTR es:[rcx],ah
  4070c9:	imul   esi,DWORD PTR [rbp+riz*2+0x6d],0x68633e2d
  4070d1:	imul   ebp,DWORD PTR [rsp+riz*2+0x0],0x67000000
  4070d9:	pop    rdi
  4070da:	jae    0x407150
  4070dc:	jb     0x40713d
  4070de:	push   0x705f7361
  4070e3:	jb     0x40714a
  4070e5:	imul   di,WORD PTR [rax+0x20],0x6928
  4070eb:	je     0x407152
  4070ed:	ins    DWORD PTR es:[rdi],dx
  4070ee:	sub    eax,0x79656b3e
  4070f3:	sub    al,0x20
  4070f5:	jo     0x407158
  4070f7:	jb     0x40715e
  4070f9:	outs   dx,BYTE PTR ds:[rsi]
  4070fa:	je     0x407129
  4070fc:	imul   esp,DWORD PTR ds:[rbp+0x79],0x29
  407101:	add    BYTE PTR [rax],al
  407103:	add    BYTE PTR [rax],al
  407105:	add    BYTE PTR [rax],al
  407107:	add    BYTE PTR [rcx],ah
  407109:	jo     0x40716c
  40710b:	jb     0x407172
  40710d:	outs   dx,BYTE PTR ds:[rsi]
  40710e:	je     0x40713d
  407110:	ds jbe 0x407174
  407113:	ins    BYTE PTR es:[rdi],dx
  407114:	jne    0x40717b
  407116:	and    BYTE PTR [rsi],ah
  407118:	and    BYTE PTR es:[rcx],ah
  40711b:	jo     0x40717e
  40711d:	jb     0x407184
  40711f:	outs   dx,BYTE PTR ds:[rsi]
  407120:	je     0x40714f
  407122:	ds je  0x407186
  407125:	(bad)  
  407126:	ins    BYTE PTR es:[rdi],dx
  407127:	add    BYTE PTR gs:[rax],al
  40712a:	add    BYTE PTR [rax],al
  40712c:	add    BYTE PTR [rax],al
  40712e:	add    BYTE PTR [rax],al
  407130:	and    DWORD PTR [rcx+0x74],ebp
  407133:	gs ins DWORD PTR es:[rdi],dx
  407135:	sub    eax,0x7261703e
  40713a:	outs   dx,BYTE PTR gs:[rsi]
  40713c:	je     0x40715e
  40713e:	es and BYTE PTR es:[rcx],ah
  407142:	imul   esi,DWORD PTR [rbp+riz*2+0x6d],0x69733e2d
  40714a:	(bad)  
  40714b:	ins    BYTE PTR es:[rdi],dx
  40714c:	imul   ebp,DWORD PTR [rsi+0x67],0x75686300
  407153:	outs   dx,BYTE PTR ds:[rsi]
  407154:	imul   ebp,DWORD PTR [rip+0x66666f3e],0x73        # 0x66a6e099
  40715b:	gs je  0x40717e
  40715e:	and    BYTE PTR ds:[rdx+0x65],dh
  407162:	jae    0x4071d9
  407164:	ins    BYTE PTR es:[rdi],dx
  407165:	je     0x407194
  407167:	ds ins BYTE PTR es:[rdi],dx
  407169:	outs   dx,BYTE PTR gs:[rsi]
  40716b:	add    BYTE PTR [rax],al
  40716d:	add    BYTE PTR [rax],al
  40716f:	add    BYTE PTR [rbx+0x68],ah
  407172:	jne    0x4071e2
  407174:	imul   ebp,DWORD PTR [rip+0x66666f3e],0x73        # 0x66a6e0b9
  40717b:	gs je  0x40719e
  40717e:	sub    eax,0x73657220
  407183:	jne    0x4071f1
  407185:	je     0x4071b4
  407187:	ds ins BYTE PTR es:[rdi],dx
  407189:	outs   dx,BYTE PTR gs:[rsi]
  40718b:	and    BYTE PTR [rax+riz*1],bh
  40718e:	cmp    BYTE PTR [rax],al
  407190:	jb     0x4071f7
  407192:	jae    0x407209
  407194:	ins    BYTE PTR es:[rdi],dx
  407195:	je     0x4071c4
  407197:	ds ins BYTE PTR es:[rdi],dx
  407199:	outs   dx,BYTE PTR gs:[rsi]
  40719b:	and    BYTE PTR [rip+0x6863203d],bh        # 0x68a391de
  4071a1:	jne    0x407211
  4071a3:	imul   ebp,DWORD PTR [rip+0x66666f3e],0x73        # 0x66a6e0e8
  4071aa:	gs je  0x4071ad
  4071ad:	add    BYTE PTR [rax],al
  4071af:	add    BYTE PTR [rsi+0x69],ah
  4071b2:	ins    BYTE PTR es:[rdi],dx
  4071b3:	gs pop rdi
  4071b5:	(bad)  
  4071b6:	jne    0x407221
  4071b8:	ins    BYTE PTR es:[rdi],dx
  4071b9:	fs gs jb 0x40721c
  4071bd:	jae    0x407224
  4071bf:	jb     0x40722a
  4071c1:	(bad)  
  4071c2:	ins    BYTE PTR es:[rdi],dx
  4071c3:	imul   esi,DWORD PTR [rbx+0x65],0x0
  4071ca:	add    BYTE PTR [rax],al
  4071cc:	add    BYTE PTR [rax],al
  4071ce:	add    BYTE PTR [rax],al
  4071d0:	imul   bp,WORD PTR [rbp+riz*2+0x5f],0x7562
  4071d7:	imul   ebp,DWORD PTR [rsp+riz*2+0x65],0x6c615f72
  4071df:	ins    BYTE PTR es:[rdi],dx
  4071e0:	outs   dx,DWORD PTR ds:[rsi]
  4071e1:	movsxd esp,DWORD PTR [rcx+0x74]
  4071e4:	gs pop rdi
  4071e6:	outs   dx,WORD PTR ds:[rsi]
  4071e8:	jb     0x407249
  4071ea:	push   0x687361
  4071ef:	add    BYTE PTR [rsi+0x69],ah
  4071f2:	ins    BYTE PTR es:[rdi],dx
  4071f3:	gs pop rdi
  4071f5:	(bad)  
  4071f6:	jne    0x407261
  4071f8:	ins    BYTE PTR es:[rdi],dx
  4071f9:	fs gs jb 0x40725c
  4071fd:	(bad)  
  4071fe:	fs fs pop rdi
  407201:	push   0x687361
	...
  40720e:	add    BYTE PTR [rax],al
  407210:	addr32 jbe 0x407277
  407213:	(bad)  
  407214:	pop    rdi
  407215:	imul   esi,DWORD PTR [rbp+riz*2+0x6d],0x7465735f
  40721d:	pop    rdi
  40721e:	jo     0x407281
  407220:	jb     0x407287
  407222:	outs   dx,BYTE PTR ds:[rsi]
  407223:	je     0x407225
	...
  40722d:	add    BYTE PTR [rax],al
  40722f:	add    BYTE PTR [rdi+0x76],ah
  407232:	fs (bad) 
  407234:	pop    rdi
  407235:	imul   esi,DWORD PTR [rbp+riz*2+0x6d],0x7465735f
  40723d:	pop    rdi
  40723e:	push   0x5f687361
  407243:	je     0x4072a6
  407245:	(bad)  
  407246:	ins    BYTE PTR es:[rdi],dx
  407247:	add    BYTE PTR gs:[rax],al
  40724a:	add    BYTE PTR [rax],al
  40724c:	add    BYTE PTR [rax],al
  40724e:	add    BYTE PTR [rax],al
  407250:	addr32 jbe 0x4072b7
  407253:	(bad)  
  407254:	pop    rdi
  407255:	imul   esi,DWORD PTR [rbp+riz*2+0x6d],0x7465735f
  40725d:	pop    rdi
  40725e:	jbe    0x4072c1
  407260:	ins    BYTE PTR es:[rdi],dx
  407261:	jne    0x4072c8
	...
  40727f:	add    BYTE PTR [rdi+0x72],ah
  407282:	gs jae 0x4072f4
  407285:	jne    0x4072f9
  407287:	movsxd esp,DWORD PTR [rbp+0x0]
  40728a:	imul   bp,WORD PTR [rbp+riz*2+0x0],0x2f
  407291:	add    BYTE PTR [rax],al
  407293:	add    BYTE PTR [rax],al
  407295:	add    BYTE PTR [rax],al
  407297:	add    BYTE PTR [rsi+0x69],al
  40729a:	ins    BYTE PTR es:[rdi],dx
  40729b:	and    BYTE PTR gs:[rip+0x70612073],ah        # 0x70a19315
  4072a2:	jo     0x407309
  4072a4:	(bad)  
  4072a5:	jb     0x40731a
  4072a7:	and    BYTE PTR [rbp+0x75],ch
  4072aa:	ins    BYTE PTR es:[rdi],dx
  4072ab:	je     0x407316
  4072ad:	jo     0x40731b
  4072af:	and    BYTE PTR gs:[rcx+rbp*2+0x6d],dh
  4072b4:	gs jae 0x4072d7
  4072b7:	imul   ebp,DWORD PTR [rsi+0x20],0x20656874
  4072be:	jb     0x407325
  4072c0:	jae    0x407331
  4072c2:	jne    0x407336
  4072c4:	movsxd esp,DWORD PTR [rbp+0x0]
  4072c7:	add    BYTE PTR [rsi+0x61],al
  4072ca:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  4072d2:	ins    BYTE PTR es:[rdi],dx
  4072d3:	outs   dx,DWORD PTR ds:[rsi]
  4072d4:	movsxd esp,DWORD PTR [rcx+0x74]
  4072d7:	and    BYTE PTR gs:[rdi],ah
  4072da:	and    eax,0x69202773
  4072df:	outs   dx,BYTE PTR ds:[rsi]
  4072e0:	and    BYTE PTR [rcx+0x6e],ah
  4072e3:	jns    0x407305
  4072e5:	jae    0x407356
  4072e7:	jne    0x40735b
  4072e9:	movsxd esp,DWORD PTR [rbp+0x20]
  4072ec:	imul   esi,DWORD PTR fs:[rdx+0x65],0x726f7463
  4072f4:	jns    0x4072f6
  4072f6:	add    BYTE PTR [rax],al
  4072f8:	rex.RX (bad) 
  4072fa:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  407302:	ins    BYTE PTR es:[rdi],dx
  407303:	outs   dx,DWORD PTR ds:[rsi]
  407304:	movsxd esp,DWORD PTR [rcx+0x74]
  407307:	and    BYTE PTR gs:[rdi],ah
  40730a:	and    eax,0x69202773
  40730f:	outs   dx,BYTE PTR ds:[rsi]
  407310:	and    BYTE PTR [rbx+0x75],ah
  407313:	jb     0x407387
  407315:	outs   dx,BYTE PTR gs:[rsi]
  407317:	je     0x407339
  407319:	imul   esi,DWORD PTR fs:[rdx+0x65],0x726f7463
  407321:	jns    0x407323
  407323:	sub    al,0x0
  407325:	js     0x407394
  407327:	ins    BYTE PTR es:[rdi],dx
  407328:	sub    eax,0x69727473
  40732d:	jo     0x407391
  40732f:	ins    BYTE PTR es:[rdi],dx
  407330:	(bad)  
  407331:	outs   dx,BYTE PTR ds:[rsi]
  407332:	imul   esi,DWORD PTR [rbx+0x0],0x74
  407336:	outs   dx,DWORD PTR ds:[rsi]
  407337:	sub    eax,0x64786970
  40733c:	(bad)  
  40733d:	je     0x4073a0
  40733f:	add    BYTE PTR [rbp+0x6e],dl
  407342:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  407346:	outs   dx,BYTE PTR ds:[rsi]
  407347:	and    BYTE PTR [rax+0x72],dh
  40734a:	outs   dx,DWORD PTR ds:[rsi]
  40734b:	movsxd esp,DWORD PTR [rbp+0x73]
  40734e:	jae    0x4073b9
  407350:	outs   dx,BYTE PTR ds:[rsi]
  407351:	and    BYTE PTR [edi+0x70],ch
  407355:	je     0x4073c0
  407357:	outs   dx,DWORD PTR ds:[rsi]
  407358:	outs   dx,BYTE PTR ds:[rsi]
  407359:	and    BYTE PTR [rdx],ah
  40735b:	and    eax,0x72002273
  407360:	gs jae 0x4073d2
  407363:	jne    0x4073d7
  407365:	movsxd esp,DWORD PTR [rbp+0x2d]
  407368:	pop    rax
  407369:	pop    rax
  40736a:	pop    rax
  40736b:	pop    rax
  40736c:	pop    rax
  40736d:	pop    rax
  40736e:	pop    rax
  40736f:	pop    rax
	...
  407378:	rex.RX (bad) 
  40737a:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  407382:	movsxd esi,DWORD PTR [rdx+0x65]
  407385:	(bad)  
  407386:	je     0x4073ed
  407388:	and    BYTE PTR [rbp+riz*2+0x6d],dh
  40738c:	jo     0x4073ae
  40738e:	imul   bp,WORD PTR [rbp+riz*2+0x3a],0x2520
  407395:	jae    0x407397
  407397:	sub    eax,0x6e6f6e2d
  40739c:	gs je  0x40739f
  40739f:	sub    eax,0x74756f2d
  4073a4:	jo     0x40741b
  4073a6:	je     0x4073a8
  4073a8:	sub    eax,0x626f6e2d
  4073ad:	ins    BYTE PTR es:[rdi],dx
  4073ae:	(bad)  
  4073af:	outs   dx,BYTE PTR ds:[rsi]
  4073b0:	imul   esi,DWORD PTR [rbx+0x0],0x0
  4073b4:	add    BYTE PTR [rax],al
  4073b6:	add    BYTE PTR [rax],al
  4073b8:	je     0x407429
  4073ba:	sub    eax,0x62786970
  4073bf:	jne    0x407427
  4073c1:	and    BYTE PTR [rax+0x72],dh
  4073c4:	gs jo  0x407439
  4073c7:	outs   dx,DWORD PTR ds:[rsi]
  4073c8:	movsxd esp,DWORD PTR [rbp+0x73]
  4073cb:	jae    0x407436
  4073cd:	outs   dx,BYTE PTR ds:[rsi]
  4073ce:	and    BYTE PTR [edx+0x65],dh
  4073d2:	jno    0x407449
  4073d4:	gs jae 0x40744b
  4073d7:	gs and BYTE PTR fs:[rdx+0x75],ah
  4073dc:	je     0x4073fe
  4073de:	rex.RXB
  4073df:	rex.R
  4073e0:	rex.WXB pop r15
  4073e2:	push   rax
  4073e3:	rex.WB pop r8
  4073e5:	rex.X push rbp
  4073e7:	rex.RX pop rdi
  4073e9:	push   rax
  4073ea:	rex.WB pop r8
  4073ec:	rex.R
  4073ed:	push   r12
  4073ef:	and    BYTE PTR [r14+0x6f],bpl
  4073f3:	je     0x407415
  4073f5:	jae    0x40745c
  4073f7:	je     0x407419
  4073f9:	(bad)  
  4073fa:	outs   dx,BYTE PTR ds:[rsi]
  4073fb:	and    BYTE PTR fs:[rdi+0x64],ah
  4073ff:	imul   ebp,DWORD PTR [rip+0x62786970],0x75        # 0x62b8dd76
  407406:	sub    ax,0x6970
  40740a:	js     0x407470
  40740c:	(bad)  
  40740d:	je     0x407470
  40740f:	and    BYTE PTR [rsi+0x6f],ch
  407412:	je     0x407434
  407414:	outs   dx,WORD PTR ds:[rsi]
  407416:	jne    0x407486
  407418:	and    BYTE PTR fs:[rcx+0x6e],ch
  40741c:	and    BYTE PTR [rax+0x61],dh
  40741f:	je     0x407489
  407421:	add    BYTE PTR [rbp+0x72],al
  407424:	jb     0x407495
  407426:	jb     0x407448
  407428:	jb     0x40748f
  40742a:	(bad)  
  40742b:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x6c696620
  407433:	and    BYTE PTR gs:[rip+0x25203a73],ah        # 0x2560aead
  40743a:	jae    0x40743c
  40743c:	rex.RB jb 0x4074b1
  40743f:	outs   dx,DWORD PTR ds:[rsi]
  407440:	jb     0x407462
  407442:	movsxd ebp,DWORD PTR [rdi+0x6d]
  407445:	jo     0x4074b9
  407447:	gs jae 0x4074bd
  40744a:	imul   ebp,DWORD PTR [rsi+0x67],0x6c696620
  407451:	and    BYTE PTR gs:[rip+0x72670073],ah        # 0x72a774cb
  407458:	gs jae 0x4074ca
  40745b:	jne    0x4074cf
  40745d:	movsxd esp,DWORD PTR [rbp+0x73]
  407460:	add    BYTE PTR [rax+0x72],dh
  407463:	imul   di,WORD PTR gs:[rax+0x0],0x7270
  40746a:	gs jo  0x4074df
  40746d:	outs   dx,DWORD PTR ds:[rsi]
  40746e:	movsxd esp,DWORD PTR [rbp+0x73]
  407471:	jae    0x407473
  407473:	movsxd ebp,DWORD PTR [rdi+0x6d]
  407476:	jo     0x4074ea
  407478:	gs jae 0x4074ee
  40747b:	gs add BYTE PTR fs:[rcx+0x6c],ah
  407480:	imul   esp,DWORD PTR [rcx+0x73],0x0
  407487:	add    BYTE PTR [rbp+0x6c],al
  40748a:	gs ins DWORD PTR es:[rdi],dx
  40748c:	outs   dx,BYTE PTR gs:[rsi]
  40748e:	je     0x4074b0
  407490:	cmp    al,0x25
  407492:	jae    0x4074d2
  407494:	and    BYTE PTR [rsi+0x6f],ch
  407497:	je     0x4074b9
  407499:	(bad)  
  40749a:	ins    BYTE PTR es:[rdi],dx
  40749b:	ins    BYTE PTR es:[rdi],dx
  40749c:	outs   dx,DWORD PTR ds:[rsi]
  40749d:	ja     0x407504
  40749f:	and    BYTE PTR fs:[rcx+0x6e],ch
  4074a3:	jae    0x40750e
  4074a5:	fs and BYTE PTR gs:0x3e73,bh
  4074ae:	add    BYTE PTR [rax],al
  4074b0:	rex.RB ins BYTE PTR es:[rdi],dx
  4074b2:	gs ins DWORD PTR es:[rdi],dx
  4074b4:	outs   dx,BYTE PTR gs:[rsi]
  4074b6:	je     0x4074d8
  4074b8:	cmp    al,0x25
  4074ba:	jae    0x4074fa
  4074bc:	and    BYTE PTR [rsi+0x6f],ch
  4074bf:	je     0x4074e1
  4074c1:	(bad)  
  4074c2:	ins    BYTE PTR es:[rdi],dx
  4074c3:	ins    BYTE PTR es:[rdi],dx
  4074c4:	outs   dx,DWORD PTR ds:[rsi]
  4074c5:	ja     0x40752c
  4074c7:	and    BYTE PTR fs:[rcx+0x74],ah
  4074cb:	and    BYTE PTR [rdi+rbp*2+0x70],dh
  4074cf:	ins    BYTE PTR es:[rdi],dx
  4074d0:	gs jbe 0x407538
  4074d3:	ins    BYTE PTR es:[rdi],dx
  4074d4:	add    BYTE PTR [rax],al
  4074d6:	add    BYTE PTR [rax],al
  4074d8:	je     0x40753f
  4074da:	js     0x407550
  4074dc:	and    BYTE PTR [rbp+0x61],ch
  4074df:	jns    0x407501
  4074e1:	outs   dx,BYTE PTR ds:[rsi]
  4074e2:	outs   dx,DWORD PTR ds:[rsi]
  4074e3:	je     0x407505
  4074e5:	(bad)  
  4074e6:	jo     0x407558
  4074e8:	gs (bad) 
  4074ea:	jb     0x40750c
  4074ec:	imul   ebp,DWORD PTR [rsi+0x73],0x20656469
  4074f3:	cmp    al,0x25
  4074f5:	jae    0x407535
  4074f7:	add    BYTE PTR [rbp+0x78],ah
  4074fa:	je     0x407561
  4074fc:	jb     0x40756c
  4074fe:	add    BYTE PTR [rdi+0x5f],al
  407501:	rex.RXB
  407502:	rex.WRX push rbp
  407504:	rex.XB pop r15
  407506:	rex.WB
  407507:	rex.WRX push rsp
  407509:	rex.RB push r10
  40750b:	rex.WRX
  40750c:	rex.B
  40750d:	rex.WR add BYTE PTR [rax],r8b
  407510:	rex.B
  407511:	rex.X
  407512:	rex.XB
  407513:	rex.R
  407514:	rex.RB
  407515:	rex.RX
  407516:	rex.RXB
  407517:	rex.W
  407518:	rex.WB
  407519:	rex.WX
  40751a:	rex.WXB
  40751b:	rex.WR
  40751c:	rex.WRB
  40751d:	rex.WRX
  40751e:	rex.WRXB push r8
  407520:	push   rcx
  407521:	push   rdx
  407522:	push   rbx
  407523:	push   rsp
  407524:	push   rbp
  407525:	push   rsi
  407526:	push   rdi
  407527:	pop    rax
  407528:	pop    rcx
  407529:	pop    rdx
  40752a:	(bad)  
  40752b:	(bad)
  407530:	addr32 push 0x6c6b6a69
  407536:	ins    DWORD PTR es:[rdi],dx
  407537:	outs   dx,BYTE PTR ds:[rsi]
  407538:	outs   dx,DWORD PTR ds:[rsi]
  407539:	jo     0x4075ac
  40753b:	jb     0x4075b0
  40753d:	je     0x4075b4
  40753f:	jbe    0x4075b8
  407541:	js     0x4075bc
  407543:	jp     0x4075a4
  407545:	add    BYTE PTR [rax],al
  407547:	add    BYTE PTR [rcx+0x42],al
  40754a:	rex.XB
  40754b:	rex.R
  40754c:	rex.RB
  40754d:	rex.RX
  40754e:	rex.RXB
  40754f:	rex.W
  407550:	rex.WB
  407551:	rex.WX
  407552:	rex.WXB
  407553:	rex.WR
  407554:	rex.WRB
  407555:	rex.WRX
  407556:	rex.WRXB push r8
  407558:	push   rcx
  407559:	push   rdx
  40755a:	push   rbx
  40755b:	push   rsp
  40755c:	push   rbp
  40755d:	push   rsi
  40755e:	push   rdi
  40755f:	pop    rax
  407560:	pop    rcx
  407561:	pop    rdx
  407562:	(bad)  
  407563:	(bad)
  407568:	addr32 push 0x6c6b6a69
  40756e:	ins    DWORD PTR es:[rdi],dx
  40756f:	outs   dx,BYTE PTR ds:[rsi]
  407570:	outs   dx,DWORD PTR ds:[rsi]
  407571:	jo     0x4075e4
  407573:	jb     0x4075e8
  407575:	je     0x4075ec
  407577:	jbe    0x4075f0
  407579:	js     0x4075f4
  40757b:	jp     0x4075ad
  40757d:	xor    DWORD PTR [rdx],esi
  40757f:	xor    esi,DWORD PTR [rsi*1+0x39383736]
  407586:	pop    rdi
  407587:	add    BYTE PTR [rcx+riz*2+0x72],dh
  40758b:	addr32 gs je 0x40758f
  40758f:	outs   dx,BYTE PTR ds:[rsi]
  407590:	(bad)  
  407591:	ins    DWORD PTR es:[rdi],dx
  407592:	and    BYTE PTR gs:[rdi+0x66],ch
  407596:	and    BYTE PTR [rax+rbp*2+0x65],dh
  40759a:	and    BYTE PTR [rdi+0x75],ch
  40759d:	je     0x40760f
  40759f:	jne    0x407615
  4075a1:	and    BYTE PTR [rsi+0x69],ah
  4075a4:	ins    BYTE PTR es:[rdi],dx
  4075a5:	add    BYTE PTR gs:[rsi+0x49],al
  4075a9:	rex.WR
  4075aa:	add    BYTE PTR [r11+0x6f],r14b
  4075ae:	jne    0x407622
  4075b0:	movsxd esp,DWORD PTR [rbp+0x64]
  4075b3:	imul   esi,DWORD PTR [rdx+0x0],0x68540000
  4075ba:	and    BYTE PTR gs:[rcx+rbp*2+0x72],ah
  4075bf:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
  4075c4:	imul   esp,DWORD PTR [rbp+0x73],0x65687720
  4075cb:	jb     0x407632
  4075cd:	and    BYTE PTR [rsi+0x69],ah
  4075d0:	ins    BYTE PTR es:[rdi],dx
  4075d1:	gs jae 0x4075f4
  4075d4:	(bad)  
  4075d5:	jb     0x40763c
  4075d7:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  4075db:	(bad)  
  4075dc:	and    BYTE PTR gs:[rdx+0x65],dh
  4075e0:	(bad)  
  4075e1:	and    BYTE PTR fs:[rsi+0x72],ah
  4075e5:	outs   dx,DWORD PTR ds:[rsi]
  4075e6:	ins    DWORD PTR es:[rdi],dx
  4075e7:	and    BYTE PTR [rax],ch
  4075e9:	fs gs data16 (bad) 
  4075ed:	jne    0x40765b
  4075ef:	je     0x407611
  4075f1:	je     0x407662
  4075f3:	and    BYTE PTR [rbx+0x75],ah
  4075f6:	jb     0x40766a
  4075f8:	outs   dx,BYTE PTR gs:[rsi]
  4075fa:	je     0x40761c
  4075fc:	imul   esi,DWORD PTR fs:[rdx+0x65],0x726f7463
  407604:	jns    0x40762f
  407606:	add    BYTE PTR [rcx+rcx*2+0x52],al
  40760a:	rex.RB
  40760b:	rex.XB push r12
  40760d:	rex.WRXB push r10
  40760f:	pop    rcx
  407610:	add    BYTE PTR [rdi+0x65],ah
  407613:	outs   dx,BYTE PTR ds:[rsi]
  407614:	gs jb  0x407678
  407617:	je     0x40767e
  407619:	add    BYTE PTR [rax],al
  40761b:	add    BYTE PTR [rax],al
  40761d:	add    BYTE PTR [rax],al
  40761f:	add    BYTE PTR [rdi+0x65],al
  407622:	outs   dx,BYTE PTR ds:[rsi]
  407623:	gs jb  0x407687
  407626:	je     0x40768d
  407628:	and    BYTE PTR [rdi+0x75],ch
  40762b:	je     0x40769d
  40762d:	jne    0x4076a3
  40762f:	and    BYTE PTR [rcx+0x6e],ch
  407632:	and    BYTE PTR [rax+rbp*2+0x65],dh
  407636:	and    BYTE PTR [rsi+0x6f],ah
  407639:	jb     0x4076a8
  40763b:	(bad)  
  40763c:	je     0x40765e
  40763e:	jae    0x4076a5
  407640:	ins    BYTE PTR es:[rdi],dx
  407641:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  407646:	and    BYTE PTR [rsi+0x6f],ah
  407649:	jb     0x40766b
  40764b:	(bad)  
  40764c:	jns    0x40766e
  40764e:	je     0x4076b8
  407650:	and    BYTE PTR gs:[rcx+riz*2+0x72],dh
  407655:	addr32 gs je 0x407679
  407659:	imul   bp,WORD PTR [rbp+riz*2+0x6e],0x6d61
  407660:	and    BYTE PTR gs:[rbp+0x78],ah
  407664:	je     0x4076cb
  407666:	outs   dx,BYTE PTR ds:[rsi]
  407667:	jae    0x4076d2
  407669:	outs   dx,DWORD PTR ds:[rsi]
  40766a:	outs   dx,BYTE PTR ds:[rsi]
  40766b:	add    BYTE PTR [rdi+0x65],ah
  40766e:	outs   dx,BYTE PTR ds:[rsi]
  40766f:	gs jb  0x4076d3
  407672:	je     0x4076d9
  407674:	sub    eax,0x64616568
  407679:	gs jb  0x40767c
  40767c:	rex.RXB
  40767d:	outs   dx,BYTE PTR gs:[rsi]
  40767f:	gs jb  0x4076e3
  407682:	je     0x4076e9
  407684:	and    BYTE PTR [rbx+0x6f],dh
  407687:	jne    0x4076fb
  407689:	movsxd esp,DWORD PTR [rbp+0x20]
  40768c:	push   0x65646165
  407691:	jb     0x407693
  407693:	outs   dx,BYTE PTR gs:[esi]
  407696:	gs jb  0x4076fa
  407699:	je     0x407700
  40769b:	sub    eax,0x72756f73
  4076a0:	movsxd esp,DWORD PTR [rbp+0x0]
  4076a3:	add    BYTE PTR [rax],al
  4076a5:	add    BYTE PTR [rax],al
  4076a7:	add    BYTE PTR [rdi+0x65],al
  4076aa:	outs   dx,BYTE PTR ds:[rsi]
  4076ab:	gs jb  0x40770f
  4076ae:	je     0x407715
  4076b0:	and    BYTE PTR [rbx+0x6f],dh
  4076b3:	jne    0x407727
  4076b5:	movsxd esp,DWORD PTR [rbp+0x63]
  4076b8:	outs   dx,DWORD PTR ds:[rsi]
  4076b9:	fs and BYTE PTR gs:[rbp+0x73],dh
  4076be:	gs and BYTE PTR fs:[rdi+rbp*2+0x20],dh
  4076c4:	ins    BYTE PTR es:[rdi],dx
  4076c5:	imul   ebp,DWORD PTR [rsi+0x6b],0x206e6920
  4076cc:	je     0x407736
  4076ce:	and    BYTE PTR gs:[rdx+0x65],dh
  4076d2:	jae    0x407743
  4076d4:	jne    0x407748
  4076d6:	movsxd esp,DWORD PTR [rbp+0x20]
  4076d9:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x6e69
  4076e0:	je     0x407751
  4076e2:	and    BYTE PTR [rcx+0x6f],bh
  4076e5:	jne    0x407759
  4076e7:	and    BYTE PTR [rbx+0x6f],ah
  4076ea:	fs add BYTE PTR gs:[rdi+0x65],ah
  4076ef:	outs   dx,BYTE PTR ds:[rsi]
  4076f0:	gs jb  0x407754
  4076f3:	je     0x40775a
  4076f5:	sub    eax,0x65706564
  4076fa:	outs   dx,BYTE PTR ds:[rsi]
  4076fb:	fs outs dx,BYTE PTR gs:[rsi]
  4076fe:	movsxd ebp,DWORD PTR [rcx+0x65]
  407701:	jae    0x407703
  407703:	rex.RXB
  407704:	outs   dx,BYTE PTR gs:[rsi]
  407706:	gs jb  0x40776a
  407709:	je     0x407770
  40770b:	and    BYTE PTR [rbp+riz*2+0x70],ah
  40770f:	outs   dx,BYTE PTR gs:[rsi]
  407711:	fs outs dx,BYTE PTR gs:[rsi]
  407714:	movsxd edi,DWORD PTR [rcx+0x20]
  407717:	ins    BYTE PTR es:[rdi],dx
  407718:	imul   esi,DWORD PTR [rbx+0x74],0x6e616d00
  40771f:	jne    0x407782
  407721:	ins    BYTE PTR es:[rdi],dx
  407722:	sub    eax,0x69676572
  407727:	jae    0x40779d
  407729:	gs jb  0x40772c
  40772c:	add    BYTE PTR [rax],al
  40772e:	add    BYTE PTR [rax],al
  407730:	rex.R outs dx,DWORD PTR ds:[rsi]
  407732:	outs   dx,BYTE PTR ds:[rsi]
  407733:	(bad)  
  407734:	je     0x407756
  407736:	(bad)  
  407737:	jne    0x4077ad
  407739:	outs   dx,DWORD PTR ds:[rsi]
  40773a:	ins    DWORD PTR es:[rdi],dx
  40773b:	(bad)  
  40773c:	je     0x4077a7
  40773e:	movsxd esp,DWORD PTR [rcx+0x6c]
  407741:	ins    BYTE PTR es:[rdi],dx
  407742:	jns    0x407764
  407744:	movsxd esi,DWORD PTR [rdx+0x65]
  407747:	(bad)  
  407748:	je     0x4077af
  40774a:	and    BYTE PTR [rcx+0x6e],ah
  40774d:	and    BYTE PTR fs:[rdx+0x65],dh
  407751:	imul   esi,DWORD PTR [ebx+0x74],0x72207265
  407759:	gs jae 0x4077cb
  40775c:	jne    0x4077d0
  40775e:	movsxd esp,DWORD PTR [rbp+0x0]
  407761:	imul   ebp,DWORD PTR [rsi+0x74],0x616e7265
  407768:	ins    BYTE PTR es:[rdi],dx
  407769:	add    BYTE PTR [rax],al
  40776b:	add    BYTE PTR [rax],al
  40776d:	add    BYTE PTR [rax],al
  40776f:	add    BYTE PTR [rdi+rbp*2+0x6e],al
  407773:	(bad)  
  407774:	je     0x407796
  407776:	gs js  0x4077e9
  407779:	outs   dx,DWORD PTR ds:[rsi]
  40777a:	jb     0x4077f0
  40777c:	and    BYTE PTR [rsi+0x75],ah
  40777f:	outs   dx,BYTE PTR ds:[rsi]
  407780:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  407784:	outs   dx,BYTE PTR ds:[rsi]
  407785:	jae    0x4077c2
  407787:	and    BYTE PTR [rbp+riz*2+0x63],ah
  40778b:	ins    BYTE PTR es:[rdi],dx
  40778c:	(bad)  
  40778d:	jb     0x4077f4
  40778f:	and    BYTE PTR [rax+rbp*2+0x65],dh
  407793:	ins    DWORD PTR es:[rdi],dx
  407794:	and    BYTE PTR [rdi+0x5f],al
  407797:	rex.RXB
  407798:	rex.WRX push rbp
  40779a:	rex.XB pop r15
  40779c:	rex.WB
  40779d:	rex.WRX push rsp
  40779f:	rex.RB push r10
  4077a1:	rex.WRX
  4077a2:	rex.B
  4077a3:	rex.WR add BYTE PTR [rbx+0x2d],r12b
  4077a7:	outs   dx,BYTE PTR ds:[rsi]
  4077a8:	(bad)  
  4077a9:	ins    DWORD PTR es:[rdi],dx
  4077aa:	add    BYTE PTR gs:[rax],al
  4077ad:	add    BYTE PTR [rax],al
  4077af:	add    BYTE PTR [rbx+0x20],al
  4077b2:	imul   esp,DWORD PTR [rbp+riz*2+0x6e],0x69666974
  4077ba:	gs jb  0x4077dd
  4077bd:	outs   dx,BYTE PTR ds:[rsi]
  4077be:	(bad)  
  4077bf:	ins    DWORD PTR es:[rdi],dx
  4077c0:	and    BYTE PTR gs:[rbp+0x73],dh
  4077c4:	gs and BYTE PTR fs:[rsi+0x6f],ah
  4077c9:	jb     0x4077eb
  4077cb:	je     0x407835
  4077cd:	and    BYTE PTR gs:[rdi+0x65],ah
  4077d1:	outs   dx,BYTE PTR ds:[rsi]
  4077d2:	gs jb  0x407836
  4077d5:	je     0x40783c
  4077d7:	and    BYTE PTR fs:[rbx+0x6f],dh
  4077db:	jne    0x40784f
  4077dd:	movsxd esp,DWORD PTR [rbp+0x20]
  4077e0:	movsxd ebp,DWORD PTR [rdi+0x64]
  4077e3:	add    BYTE PTR gs:[rdi+0x6c],ah
  4077e7:	imul   esp,DWORD PTR [rdx+0x32],0x54550030
  4077ee:	rex.RX sub eax,0x38
  4077f4:	add    BYTE PTR [rax],al
  4077f6:	add    BYTE PTR [rax],al
  4077f8:	rex.XB outs dx,DWORD PTR ds:[rsi]
  4077fa:	ins    DWORD PTR es:[rdi],dx
  4077fb:	jo     0x407866
  4077fd:	ins    BYTE PTR es:[rdi],dx
  4077fe:	and    BYTE PTR gs:[rcx+0x20],ah
  407802:	jb     0x407869
  407804:	jae    0x407875
  407806:	jne    0x40787a
  407808:	movsxd esp,DWORD PTR [rbp+0x20]
  40780b:	jae    0x40787d
  40780d:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  407811:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
  407818:	and    BYTE PTR [rcx+0x6e],ch
  40781b:	je     0x40788c
  40781d:	and    BYTE PTR [rcx+0x20],ah
  407820:	jb     0x407887
  407822:	jae    0x407893
  407824:	jne    0x407898
  407826:	movsxd esp,DWORD PTR [rbp+0x20]
  407829:	imul   bp,WORD PTR [rbp+riz*2+0x2e],0x520a
  407830:	gs jae 0x4078a2
  407833:	jne    0x4078a7
  407835:	movsxd esp,DWORD PTR [rbp+0x20]
  407838:	jae    0x4078aa
  40783a:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  40783e:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
  407845:	and    BYTE PTR [rsi+0x69],ah
  407848:	ins    BYTE PTR es:[rdi],dx
  407849:	gs jae 0x40786c
  40784c:	push   0x20657661
  407851:	je     0x4078bb
  407853:	and    BYTE PTR gs:[rbp+0x78],ah
  407857:	je     0x4078be
  407859:	outs   dx,BYTE PTR ds:[rsi]
  40785a:	jae    0x4078c5
  40785c:	outs   dx,DWORD PTR ds:[rsi]
  40785d:	outs   dx,BYTE PTR ds:[rsi]
  40785e:	and    BYTE PTR [rsi],ch
  407860:	addr32 jb 0x4078c8
  407863:	jae    0x4078d4
  407865:	jne    0x4078d9
  407867:	movsxd esp,DWORD PTR [rbp+0x2e]
  40786a:	js     0x4078d9
  40786c:	ins    BYTE PTR es:[rdi],dx
  40786d:	sub    al,0xa
  40786f:	(bad)  
  407870:	outs   dx,BYTE PTR ds:[rsi]
  407871:	and    BYTE PTR fs:[rax+rbp*2+0x65],dh
  407876:	and    BYTE PTR [rdx+0x65],dh
  407879:	jae    0x4078ea
  40787b:	jne    0x4078ef
  40787d:	movsxd esp,DWORD PTR [rbp+0x20]
  407880:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x6168
  407887:	jbe    0x4078ee
  407889:	and    BYTE PTR [rax+rbp*2+0x65],dh
  40788d:	and    BYTE PTR [rbp+0x78],ah
  407890:	je     0x4078f7
  407892:	outs   dx,BYTE PTR ds:[rsi]
  407893:	jae    0x4078fe
  407895:	outs   dx,DWORD PTR ds:[rsi]
  407896:	outs   dx,BYTE PTR ds:[rsi]
  407897:	and    BYTE PTR [rbx+0x61],ah
  40789a:	ins    BYTE PTR es:[rdi],dx
  40789b:	ins    BYTE PTR es:[rdi],dx
  40789c:	gs and BYTE PTR fs:[rsi],ch
  4078a0:	addr32 jb 0x407908
  4078a3:	jae    0x407914
  4078a5:	jne    0x407919
  4078a7:	movsxd esp,DWORD PTR [rbp+0x2e]
  4078aa:	add    BYTE PTR [rip+0xa73],ah        # 0x408323
  4078b0:	pop    rcx
  4078b1:	outs   dx,DWORD PTR ds:[rsi]
  4078b2:	jne    0x4078d4
  4078b4:	jae    0x40791e
  4078b6:	outs   dx,DWORD PTR ds:[rsi]
  4078b7:	jne    0x407925
  4078b9:	and    BYTE PTR fs:[rdi+0x69],ah
  4078bd:	jbe    0x407924
  4078bf:	and    BYTE PTR [rbp+0x78],ah
  4078c2:	(bad)  
  4078c3:	movsxd esi,DWORD PTR [rsp+rbp*2+0x79]
  4078c7:	and    BYTE PTR [rdi+0x6e],ch
  4078ca:	and    BYTE PTR gs:[rsi+0x69],ah
  4078ce:	ins    BYTE PTR es:[rdi],dx
  4078cf:	and    BYTE PTR gs:[rsi+0x61],ch
  4078d3:	ins    DWORD PTR es:[rdi],dx
  4078d4:	or     al,BYTE PTR gs:[rax]
  4078d7:	pop    rax
  4078d8:	rex.WRB
  4078d9:	rex.WR
  4078da:	rex.WR
  4078db:	rex.WB
  4078dc:	rex.WRX push rsp
  4078de:	add    BYTE PTR [rax+0x6d],bh
  4078e1:	ins    BYTE PTR es:[rdi],dx
  4078e2:	ins    BYTE PTR es:[rdi],dx
  4078e3:	imul   ebp,DWORD PTR [rsi+0x74],0x4d580000
  4078ea:	rex.WR
  4078eb:	rex.WR
  4078ec:	rex.WB
  4078ed:	rex.WRX push rsp
  4078ef:	and    BYTE PTR [rsi+0x6f],ch
  4078f2:	je     0x407914
  4078f4:	jae    0x40795b
  4078f6:	je     0x407918
  4078f8:	(bad)  
  4078f9:	outs   dx,BYTE PTR ds:[rsi]
  4078fa:	and    BYTE PTR fs:[rax+0x6d],bh
  4078fe:	ins    BYTE PTR es:[rdi],dx
  4078ff:	ins    BYTE PTR es:[rdi],dx
  407900:	imul   ebp,DWORD PTR [rsi+0x74],0x746f6e20
  407907:	and    BYTE PTR [rsi+0x6f],ah
  40790a:	jne    0x40797a
  40790c:	and    BYTE PTR fs:[rcx+0x6e],ch
  407910:	and    BYTE PTR [rax+0x61],dh
  407913:	je     0x40797d
  407915:	cmp    esp,DWORD PTR [rax]
  407917:	jae    0x407984
  407919:	imul   esi,DWORD PTR [rax+0x70],0x20676e69
  407920:	js     0x40798f
  407922:	ins    BYTE PTR es:[rdi],dx
  407923:	and    BYTE PTR [rax+0x72],dh
  407926:	gs jo  0x40799b
  407929:	outs   dx,DWORD PTR ds:[rsi]
  40792a:	movsxd esp,DWORD PTR [rbp+0x73]
  40792d:	jae    0x407998
  40792f:	outs   dx,BYTE PTR ds:[rsi]
  407930:	or     al,BYTE PTR cs:[eax]
  407934:	rex.RXB
  407935:	rex.R
  407936:	rex.WXB pop r15
  407938:	push   rax
  407939:	rex.WB pop r8
  40793b:	rex.X push rbp
  40793d:	rex.RX pop rdi
  40793f:	push   rax
  407940:	rex.WB pop r8
  407942:	rex.R
  407943:	push   r12
  407945:	add    BYTE PTR [r15+0x64],spl
  407949:	imul   ebp,DWORD PTR [rip+0x62786970],0x75        # 0x62b8e2c0
  407950:	sub    ax,0x6970
  407954:	js     0x4079ba
  407956:	(bad)  
  407957:	je     0x4079ba
  407959:	add    BYTE PTR [rsi],ch
  40795b:	js     0x4079ca
  40795d:	ins    BYTE PTR es:[rdi],dx
  40795e:	add    BYTE PTR [rsi],ch
  407960:	addr32 jb 0x4079c8
  407963:	jae    0x4079d4
  407965:	jne    0x4079d9
  407967:	movsxd esp,DWORD PTR [rbp+0x0]
  40796a:	movsxd eax,DWORD PTR cs:[rax]
  40796d:	cs push 0x3a732500
  407973:	and    BYTE PTR [rip+0xa2e73],ah        # 0x4aa7ec
  407979:	sub    BYTE PTR [rbp+0x75],dh
  40797c:	(bad)  
  40797d:	jns    0x4079a8
  40797f:	add    BYTE PTR [rbp+0x0],dh
  407982:	(bad)  
  407983:	jns    0x407985
  407985:	rex.XB (bad) 
  407987:	outs   dx,BYTE PTR ds:[rsi]
  407988:	(bad)  
  407989:	je     0x4079ab
  40798b:	outs   dx,DWORD PTR ds:[rsi]
  40798c:	jo     0x4079f3
  40798e:	outs   dx,BYTE PTR ds:[rsi]
  40798f:	and    BYTE PTR [rbp+riz*2+0x6d],dh
  407993:	jo     0x4079b5
  407995:	imul   bp,WORD PTR [rbp+riz*2+0xa],0x7700
  40799c:	add    BYTE PTR [rbx+0x61],ah
  40799f:	outs   dx,BYTE PTR ds:[rsi]
  4079a0:	(bad)  
  4079a1:	je     0x4079c3
  4079a3:	ja     0x407a17
  4079a5:	imul   esi,DWORD PTR [rbp+riz*2+0x20],0x66206f74
  4079ad:	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x7325
  4079b5:	add    BYTE PTR [rax],al
  4079b7:	add    BYTE PTR [rbx],ah
  4079b9:	imul   esp,DWORD PTR [rsi+0x6e],0x20666564
  4079c0:	pop    rdi
  4079c1:	pop    rdi
  4079c2:	push   rdx
  4079c3:	rex.RB push r11
  4079c5:	rex.WRXB push r13
  4079c7:	push   rdx
  4079c8:	rex.XB
  4079c9:	rex.RB pop r15
  4079cb:	and    eax,0x5f485f73
  4079d0:	pop    rdi
  4079d1:	or     ah,BYTE PTR [rbx]
  4079d3:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5f20
  4079db:	pop    rdi
  4079dc:	push   rdx
  4079dd:	rex.RB push r11
  4079df:	rex.WRXB push r13
  4079e1:	push   rdx
  4079e2:	rex.XB
  4079e3:	rex.RB pop r15
  4079e5:	and    eax,0x5f485f73
  4079ea:	pop    rdi
  4079eb:	or     cl,BYTE PTR [rdx]
  4079ed:	and    ebp,DWORD PTR [rcx+0x6e]
  4079f0:	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
  4079f4:	and    BYTE PTR gs:[rdi+riz*2],bh
  4079f8:	imul   ebp,DWORD PTR [rdi+0x2f],0x2e6f6967
  4079ff:	push   0x250a0a3e
  407a04:	jae    0x407a26
  407a06:	rex.RXB push r10
  407a08:	gs jae 0x407a7a
  407a0b:	jne    0x407a7f
  407a0d:	movsxd esp,DWORD PTR [rbp+0x20]
  407a10:	sub    ah,BYTE PTR [rip+0x65675f73]        # 0x65a7d989
  407a16:	je     0x407a77
  407a18:	jb     0x407a7f
  407a1a:	jae    0x407a8b
  407a1c:	jne    0x407a90
  407a1e:	movsxd esp,DWORD PTR [rbp+0x20]
  407a21:	sub    BYTE PTR [rsi+0x6f],dh
  407a24:	imul   esp,DWORD PTR [rcx+rbp*1+0x3b],0xa
  407a2c:	add    BYTE PTR [rax],al
  407a2e:	add    BYTE PTR [rax],al
  407a30:	or     ah,BYTE PTR [rip+0x6f762073]        # 0x6fb69aa9
  407a36:	imul   esp,DWORD PTR [rax+riz*1+0x25],0x65725f73
  407a3e:	imul   esi,DWORD PTR [ebx+0x74],0x725f7265
  407a46:	gs jae 0x407ab8
  407a49:	jne    0x407abd
  407a4b:	movsxd esp,DWORD PTR [rbp+0x20]
  407a4e:	sub    BYTE PTR [rsi+0x6f],dh
  407a51:	imul   esp,DWORD PTR [rcx+rbp*1+0x3b],0x2073250a
  407a59:	jbe    0x407aca
  407a5b:	imul   esp,DWORD PTR [rax+riz*1+0x25],0x6e755f73
  407a63:	jb     0x407aca
  407a65:	imul   esi,DWORD PTR [ebx+0x74],0x725f7265
  407a6d:	gs jae 0x407adf
  407a70:	jne    0x407ae4
  407a72:	movsxd esp,DWORD PTR [rbp+0x20]
  407a75:	sub    BYTE PTR [rsi+0x6f],dh
  407a78:	imul   esp,DWORD PTR [rcx+rbp*1+0x3b],0x23000a0a
  407a80:	outs   dx,BYTE PTR gs:[rsi]
  407a82:	imul   esp,DWORD PTR fs:[rsi+0xa],0x61630000
  407a8a:	outs   dx,BYTE PTR ds:[rsi]
  407a8b:	(bad)  
  407a8c:	je     0x407aae
  407a8e:	jb     0x407af5
  407a90:	(bad)  
  407a91:	and    BYTE PTR fs:[rdx+0x61],ah
  407a95:	movsxd ebp,DWORD PTR [rbx+0x20]
  407a98:	je     0x407aff
  407a9a:	ins    DWORD PTR es:[rdi],dx
  407a9b:	jo     0x407b0c
  407a9d:	jb     0x407b00
  407a9f:	jb     0x407b1a
  407aa1:	and    BYTE PTR [rsi+0x69],ah
  407aa4:	ins    BYTE PTR es:[rdi],dx
  407aa5:	add    BYTE PTR gs:[rax],al
  407aa8:	and    ebp,DWORD PTR [rcx+0x6e]
  407aab:	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
  407aaf:	and    BYTE PTR gs:[rdi+riz*2],bh
  407ab3:	imul   ebp,DWORD PTR [rdi+0x2f],0x2e6f6967
  407aba:	push   0x230a0a3e
  407abf:	imul   esp,DWORD PTR [rsi+0x20],0x69666564
  407ac6:	outs   dx,BYTE PTR ds:[rsi]
  407ac7:	gs and BYTE PTR fs:[rax],ch
  407acb:	pop    rdi
  407acc:	pop    rdi
  407acd:	rex.RB
  407ace:	rex.WR
  407acf:	rex.RX pop rdi
  407ad1:	pop    rdi
  407ad2:	sub    DWORD PTR [rax],esp
  407ad4:	es and BYTE PTR es:[rax],ch
  407ad8:	and    BYTE PTR [rdi+0x5f],bl
  407adb:	rex.RXB
  407adc:	rex.WRX push rbp
  407ade:	rex.XB pop r15
  407ae0:	pop    rdi
  407ae1:	and    BYTE PTR [rsi],bh
  407ae3:	and    BYTE PTR [rdx],dh
  407ae5:	and    BYTE PTR [rsp+rdi*2+0x20],bh
  407ae9:	sub    BYTE PTR [rdi+0x5f],bl
  407aec:	rex.RXB
  407aed:	rex.WRX push rbp
  407aef:	rex.XB pop r15
  407af1:	pop    rdi
  407af2:	and    BYTE PTR [rip+0x2032203d],bh        # 0x20729b35
  407af8:	es and BYTE PTR es:[rdi+0x5f],bl
  407afd:	rex.RXB
  407afe:	rex.WRX push rbp
  407b00:	rex.XB pop r15
  407b02:	rex.WRB
  407b03:	rex.WB
  407b04:	rex.WRX
  407b05:	rex.WRXB push r10
  407b07:	pop    rdi
  407b08:	pop    rdi
  407b09:	and    BYTE PTR [rsi],bh
  407b0b:	cmp    eax,0x29293620
  407b10:	or     ah,BYTE PTR [rbx]
  407b12:	and    BYTE PTR [rbp+riz*2+0x66],ah
  407b16:	imul   ebp,DWORD PTR [rsi+0x65],0x43455320
  407b1d:	push   rsp
  407b1e:	rex.WB
  407b1f:	rex.WRXB
  407b20:	rex.WRX and BYTE PTR [rdi+0x5f],r11b
  407b24:	(bad)  
  407b25:	je     0x407b9b
  407b27:	jb     0x407b92
  407b29:	(bad)  
  407b2a:	jne    0x407ba0
  407b2c:	gs pop rdi
  407b2e:	pop    rdi
  407b2f:	and    BYTE PTR [rax],ch
  407b31:	sub    BYTE PTR [rbx+0x65],dh
  407b34:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  407b38:	outs   dx,BYTE PTR ds:[rsi]
  407b39:	and    BYTE PTR [rax],ch
  407b3b:	and    ch,BYTE PTR [rsi]
  407b3d:	addr32 jb 0x407ba5
  407b40:	jae    0x407bb1
  407b42:	jne    0x407bb6
  407b44:	movsxd esp,DWORD PTR [rbp+0x2e]
  407b47:	and    eax,0x2c292273
  407b4c:	and    BYTE PTR [rcx+0x6c],ah
  407b4f:	imul   esp,DWORD PTR [rdi+0x6e],0x28206465
  407b56:	cmp    BYTE PTR [rcx],ch
  407b58:	sub    DWORD PTR [rcx],ebp
  407b5a:	or     ah,BYTE PTR [rbx]
  407b5c:	gs ins BYTE PTR es:[rdi],dx
  407b5e:	jae    0x407bc5
  407b60:	or     ah,BYTE PTR [rbx]
  407b62:	and    BYTE PTR [rbp+riz*2+0x66],ah
  407b66:	imul   ebp,DWORD PTR [rsi+0x65],0x43455320
  407b6d:	push   rsp
  407b6e:	rex.WB
  407b6f:	rex.WRXB
  407b70:	rex.WRX or r12b,BYTE PTR [rbx]
  407b73:	outs   dx,BYTE PTR gs:[rsi]
  407b75:	imul   esp,DWORD PTR fs:[rsi+0xa],0x6174730a
  407b7d:	je     0x407be8
  407b7f:	movsxd esp,DWORD PTR [rax]
  407b81:	movsxd ebp,DWORD PTR [rdi+0x6e]
  407b84:	jae    0x407bfa
  407b86:	and    BYTE PTR [rbx+0x45],dl
  407b89:	rex.XB push r12
  407b8b:	rex.WB
  407b8c:	rex.WRXB
  407b8d:	rex.WRX and BYTE PTR [rbp+0x6e],r14b
  407b91:	imul   ebp,DWORD PTR [rdi+0x6e],0x63207b20
  407b98:	outs   dx,DWORD PTR ds:[rsi]
  407b99:	outs   dx,BYTE PTR ds:[rsi]
  407b9a:	jae    0x407c10
  407b9c:	and    BYTE PTR [rdi+0x75],ah
  407b9f:	imul   ebp,DWORD PTR [rsi+0x74],0x61642038
  407ba6:	je     0x407c09
  407ba8:	pop    rbx
  407ba9:	and    eax,0x75343649
  407bae:	pop    rbp
  407baf:	cmp    esp,DWORD PTR [rax]
  407bb1:	movsxd ebp,DWORD PTR [rdi+0x6e]
  407bb4:	jae    0x407c2a
  407bb6:	and    BYTE PTR [rdi+rbp*2+0x75],ah
  407bba:	(bad)  
  407bbb:	ins    BYTE PTR es:[rdi],dx
  407bbc:	and    BYTE PTR gs:[rcx+0x6c],ah
  407bc0:	imul   esp,DWORD PTR [rdi+0x6e],0x746e656d
  407bc7:	cmp    esp,DWORD PTR [rax]
  407bc9:	jbe    0x407c3a
  407bcb:	imul   esp,DWORD PTR [rax+riz*1+0x2a],0x6e6f6320
  407bd3:	jae    0x407c49
  407bd5:	and    BYTE PTR [rax+0x74],dh
  407bd8:	jb     0x407c15
  407bda:	jge    0x407bfc
  407bdc:	and    BYTE PTR [rip+0x65725f73],ah        # 0x65b2db55
  407be2:	jae    0x407c53
  407be4:	jne    0x407c58
  407be6:	movsxd esp,DWORD PTR [rbp+0x5f]
  407be9:	fs (bad) 
  407beb:	je     0x407c4e
  407bed:	and    BYTE PTR [rip+0x7b207b20],bh        # 0x7b60f713
  407bf3:	or     al,BYTE PTR [rax]
  407bf5:	and    BYTE PTR [rax],ah
  407bf7:	add    BYTE PTR [rax],dh
  407bf9:	js     0x407c20
  407bfb:	xor    ch,BYTE PTR [rsi]
  407bfd:	xor    bh,BYTE PTR [rax+0x0]
  407c00:	sub    al,0x20
  407c02:	add    BYTE PTR [rdx],cl
  407c04:	add    BYTE PTR [rbp+0x20],bh
  407c07:	jge    0x407c44
  407c09:	or     al,BYTE PTR [rax]
  407c0b:	add    BYTE PTR [rax],al
  407c0d:	add    BYTE PTR [rax],al
  407c0f:	add    BYTE PTR [rdx],cl
  407c11:	jae    0x407c87
  407c13:	(bad)  
  407c14:	je     0x407c7f
  407c16:	movsxd esp,DWORD PTR [rax]
  407c18:	rex.RXB push r11
  407c1a:	je     0x407c7d
  407c1c:	je     0x407c87
  407c1e:	movsxd edx,DWORD PTR [rdx+0x65]
  407c21:	jae    0x407c92
  407c23:	jne    0x407c97
  407c25:	movsxd esp,DWORD PTR [rbp+0x20]
  407c28:	jae    0x407c9e
  407c2a:	(bad)  
  407c2b:	je     0x407c96
  407c2d:	movsxd ebx,DWORD PTR [rdi+0x72]
  407c30:	gs jae 0x407ca2
  407c33:	jne    0x407ca7
  407c35:	movsxd esp,DWORD PTR [rbp+0x20]
  407c38:	cmp    eax,0x25207b20
  407c3d:	jae    0x407c9e
  407c3f:	jb     0x407ca6
  407c41:	jae    0x407cb2
  407c43:	jne    0x407cb7
  407c45:	movsxd esp,DWORD PTR [rbp+0x5f]
  407c48:	fs (bad) 
  407c4a:	je     0x407cad
  407c4c:	cs fs (bad) 
  407c4f:	je     0x407cb2
  407c51:	sub    al,0x20
  407c53:	jae    0x407cbe
  407c55:	jp     0x407cbc
  407c57:	outs   dx,DWORD PTR ds:[rsi]
  407c58:	data16 and BYTE PTR [rax],ch
  407c5b:	and    eax,0x65725f73
  407c60:	jae    0x407cd1
  407c62:	jne    0x407cd6
  407c64:	movsxd esp,DWORD PTR [rbp+0x5f]
  407c67:	fs (bad) 
  407c69:	je     0x407ccc
  407c6b:	cs fs (bad) 
  407c6e:	je     0x407cd1
  407c70:	sub    DWORD PTR [rax+riz*1],ebp
  407c73:	rex.WRX push rbp
  407c75:	rex.WR
  407c76:	rex.WR sub al,0x20
  407c79:	rex.WRX push rbp
  407c7b:	rex.WR
  407c7c:	rex.WR sub al,0x20
  407c7f:	rex.WRX push rbp
  407c81:	rex.WR
  407c82:	rex.WR and BYTE PTR [rbp+0x3b],r15b
  407c86:	or     ah,BYTE PTR [rip+0x52472073]        # 0x52879cff
  407c8c:	gs jae 0x407cfe
  407c8f:	jne    0x407d03
  407c91:	movsxd esp,DWORD PTR [rbp+0x20]
  407c94:	sub    ah,BYTE PTR [rip+0x65675f73]        # 0x65a7dc0d
  407c9a:	je     0x407cfb
  407c9c:	jb     0x407d03
  407c9e:	jae    0x407d0f
  407ca0:	jne    0x407d14
  407ca2:	movsxd esp,DWORD PTR [rbp+0x20]
  407ca5:	sub    BYTE PTR [rsi+0x6f],dh
  407ca8:	imul   esp,DWORD PTR [rcx+rbp*1+0x3b],0x6552470a
  407cb0:	jae    0x407d21
  407cb2:	jne    0x407d26
  407cb4:	movsxd esp,DWORD PTR [rbp+0x20]
  407cb7:	sub    ah,BYTE PTR [rip+0x65675f73]        # 0x65a7dc30
  407cbd:	je     0x407d1e
  407cbf:	jb     0x407d26
  407cc1:	jae    0x407d32
  407cc3:	jne    0x407d37
  407cc5:	movsxd esp,DWORD PTR [rbp+0x20]
  407cc8:	sub    BYTE PTR [rsi+0x6f],dh
  407ccb:	imul   esp,DWORD PTR [rcx+rbp*1+0xa],0x20200a7b
  407cd3:	jb     0x407d3a
  407cd5:	je     0x407d4c
  407cd7:	jb     0x407d47
  407cd9:	and    BYTE PTR [rdi+0x5f],ah
  407cdc:	jae    0x407d52
  407cde:	(bad)  
  407cdf:	je     0x407d4a
  407ce1:	movsxd ebx,DWORD PTR [rdi+0x72]
  407ce4:	gs jae 0x407d56
  407ce7:	jne    0x407d5b
  407ce9:	movsxd esp,DWORD PTR [rbp+0x5f]
  407cec:	addr32 gs je 0x407d4f
  407cf0:	jb     0x407d57
  407cf2:	jae    0x407d63
  407cf4:	jne    0x407d68
  407cf6:	movsxd esp,DWORD PTR [rbp+0x20]
  407cf9:	sub    BYTE PTR [rsi],ah
  407cfb:	jae    0x407d71
  407cfd:	(bad)  
  407cfe:	je     0x407d69
  407d00:	movsxd ebx,DWORD PTR [rdi+0x72]
  407d03:	gs jae 0x407d75
  407d06:	jne    0x407d7a
  407d08:	movsxd esp,DWORD PTR [rbp+0x29]
  407d0b:	cmp    ecx,DWORD PTR [rdx]
  407d0d:	jge    0x407d19
  407d0f:	add    BYTE PTR [rdx],cl
  407d11:	and    eax,0x6f762073
  407d16:	imul   esp,DWORD PTR [rax+riz*1+0x25],0x6e755f73
  407d1e:	jb     0x407d85
  407d20:	imul   esi,DWORD PTR [ebx+0x74],0x725f7265
  407d28:	gs jae 0x407d9a
  407d2b:	jne    0x407d9f
  407d2d:	movsxd esp,DWORD PTR [rbp+0x20]
  407d30:	sub    BYTE PTR [rsi+0x6f],dh
  407d33:	imul   esp,DWORD PTR [rcx+rbp*1+0x3b],0x696f760a
  407d3b:	and    BYTE PTR fs:[rip+0x6e755f73],ah        # 0x6eb5dcb5
  407d42:	jb     0x407da9
  407d44:	imul   esi,DWORD PTR [ebx+0x74],0x725f7265
  407d4c:	gs jae 0x407dbe
  407d4f:	jne    0x407dc3
  407d51:	movsxd esp,DWORD PTR [rbp+0x20]
  407d54:	sub    BYTE PTR [rsi+0x6f],dh
  407d57:	imul   esp,DWORD PTR [rcx+rbp*1+0xa],0x20200a7b
  407d5f:	addr32 pop rdi
  407d61:	jae    0x407dd7
  407d63:	(bad)  
  407d64:	je     0x407dcf
  407d66:	movsxd ebx,DWORD PTR [rdi+0x72]
  407d69:	gs jae 0x407ddb
  407d6c:	jne    0x407de0
  407d6e:	movsxd esp,DWORD PTR [rbp+0x5f]
  407d71:	imul   bp,WORD PTR [rsi+0x69],0x2820
  407d77:	es jae 0x407dee
  407d7a:	(bad)  
  407d7b:	je     0x407de6
  407d7d:	movsxd ebx,DWORD PTR [rdi+0x72]
  407d80:	gs jae 0x407df2
  407d83:	jne    0x407df7
  407d85:	movsxd esp,DWORD PTR [rbp+0x29]
  407d88:	cmp    ecx,DWORD PTR [rdx]
  407d8a:	jge    0x407d96
  407d8c:	or     ah,BYTE PTR [rip+0x6f762073]        # 0x6fb69e05
  407d92:	imul   esp,DWORD PTR [rax+riz*1+0x25],0x65725f73
  407d9a:	imul   esi,DWORD PTR [ebx+0x74],0x725f7265
  407da2:	gs jae 0x407e14
  407da5:	jne    0x407e19
  407da7:	movsxd esp,DWORD PTR [rbp+0x20]
  407daa:	sub    BYTE PTR [rsi+0x6f],dh
  407dad:	imul   esp,DWORD PTR [rcx+rbp*1+0x3b],0x696f760a
  407db5:	and    BYTE PTR fs:[rip+0x65725f73],ah        # 0x65b2dd2f
  407dbc:	imul   esi,DWORD PTR [ebx+0x74],0x725f7265
  407dc4:	gs jae 0x407e36
  407dc7:	jne    0x407e3b
  407dc9:	movsxd esp,DWORD PTR [rbp+0x20]
  407dcc:	sub    BYTE PTR [rsi+0x6f],dh
  407dcf:	imul   esp,DWORD PTR [rcx+rbp*1+0xa],0x20200a7b
  407dd7:	addr32 pop rdi
  407dd9:	jae    0x407e4f
  407ddb:	(bad)  
  407ddc:	je     0x407e47
  407dde:	movsxd ebx,DWORD PTR [rdi+0x72]
  407de1:	gs jae 0x407e53
  407de4:	jne    0x407e58
  407de6:	movsxd esp,DWORD PTR [rbp+0x5f]
  407de9:	imul   ebp,DWORD PTR [rsi+0x69],0x26282074
  407df0:	jae    0x407e66
  407df2:	(bad)  
  407df3:	je     0x407e5e
  407df5:	movsxd ebx,DWORD PTR [rdi+0x72]
  407df8:	gs jae 0x407e6a
  407dfb:	jne    0x407e6f
  407dfd:	movsxd esp,DWORD PTR [rbp+0x29]
  407e00:	cmp    ecx,DWORD PTR [rdx]
  407e02:	jge    0x407e0e
  407e04:	add    BYTE PTR [rip+0x230a0073],ah        # 0x234a7e7d
  407e0a:	imul   esp,DWORD PTR [rsi+0x64],0x47206665
  407e11:	pop    rdi
  407e12:	rex.W
  407e13:	push   r11
  407e15:	pop    rdi
  407e16:	rex.XB
  407e17:	rex.WRXB
  407e18:	rex.WRX push rbx
  407e1a:	push   rsp
  407e1b:	push   rdx
  407e1c:	push   rbp
  407e1d:	rex.XB push r12
  407e1f:	rex.WRXB push r10
  407e21:	push   rbx
  407e22:	or     cl,BYTE PTR [rdx]
  407e24:	and    ebp,DWORD PTR [rcx+0x66]
  407e27:	fs data16 and BYTE PTR gs:[rdi+0x5f],al
  407e2d:	rex.R
  407e2e:	rex.RB
  407e2f:	rex.RX
  407e30:	rex.WB
  407e31:	rex.WRX
  407e32:	rex.RB pop r15
  407e34:	rex.XB
  407e35:	rex.WRXB
  407e36:	rex.WRX push rbx
  407e38:	push   rsp
  407e39:	push   rdx
  407e3a:	push   rbp
  407e3b:	rex.XB push r12
  407e3d:	rex.WRXB push r10
  407e3f:	pop    rdi
  407e40:	rex.WRX
  407e41:	rex.RB
  407e42:	rex.RB
  407e43:	rex.R push rbx
  407e45:	pop    rdi
  407e46:	push   rax
  407e47:	push   rdx
  407e48:	rex.B
  407e49:	rex.RXB
  407e4a:	rex.WRB
  407e4b:	or     spl,BYTE PTR [r11]
  407e4e:	jo     0x407ec2
  407e50:	(bad)  
  407e51:	ins    DWORD PTR es:[edi],dx
  407e53:	(bad)  
  407e54:	and    BYTE PTR [rdi+0x5f],al
  407e57:	rex.R
  407e58:	rex.RB
  407e59:	rex.RX
  407e5a:	rex.WB
  407e5b:	rex.WRX
  407e5c:	rex.RB pop r15
  407e5e:	rex.XB
  407e5f:	rex.WRXB
  407e60:	rex.WRX push rbx
  407e62:	push   rsp
  407e63:	push   rdx
  407e64:	push   rbp
  407e65:	rex.XB push r12
  407e67:	rex.WRXB push r10
  407e69:	pop    rdi
  407e6a:	push   rax
  407e6b:	push   rdx
  407e6c:	rex.B
  407e6d:	rex.RXB
  407e6e:	rex.WRB
  407e6f:	pop    r15
  407e71:	push   r10
  407e73:	rex.RXB push r11
  407e75:	sub    BYTE PTR [rdx+0x65],dh
  407e78:	jae    0x407ee9
  407e7a:	jne    0x407eee
  407e7c:	movsxd esp,DWORD PTR [rbp+0x5f]
  407e7f:	movsxd ebp,DWORD PTR [rdi+0x6e]
  407e82:	jae    0x407ef8
  407e84:	jb     0x407efb
  407e86:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
  407e8a:	sub    DWORD PTR [rdx],ecx
  407e8c:	and    esp,DWORD PTR [rbp+0x6e]
  407e8f:	imul   esp,DWORD PTR fs:[rsi+0xa],0x45445f47
  407e97:	rex.RX
  407e98:	rex.WB
  407e99:	rex.WRX
  407e9a:	rex.RB pop r15
  407e9c:	rex.XB
  407e9d:	rex.WRXB
  407e9e:	rex.WRX push rbx
  407ea0:	push   rsp
  407ea1:	push   rdx
  407ea2:	push   rbp
  407ea3:	rex.XB push r12
  407ea5:	rex.WRXB push r10
  407ea7:	sub    BYTE PTR [rdx+0x65],dh
  407eaa:	jae    0x407f1b
  407eac:	jne    0x407f20
  407eae:	movsxd esp,DWORD PTR [rbp+0x5f]
  407eb1:	movsxd ebp,DWORD PTR [rdi+0x6e]
  407eb4:	jae    0x407f2a
  407eb6:	jb     0x407f2d
  407eb8:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
  407ebc:	sub    DWORD PTR [rdx],ecx
  407ebe:	and    ebp,DWORD PTR [rcx+0x66]
  407ec1:	fs data16 and BYTE PTR gs:[rdi+0x5f],al
  407ec7:	rex.R
  407ec8:	rex.RB
  407ec9:	rex.RX
  407eca:	rex.WB
  407ecb:	rex.WRX
  407ecc:	rex.RB pop r15
  407ece:	rex.R
  407ecf:	rex.RB push r11
  407ed1:	push   rsp
  407ed2:	push   rdx
  407ed3:	push   rbp
  407ed4:	rex.XB push r12
  407ed6:	rex.WRXB push r10
  407ed8:	pop    rdi
  407ed9:	rex.WRX
  407eda:	rex.RB
  407edb:	rex.RB
  407edc:	rex.R push rbx
  407ede:	pop    rdi
  407edf:	push   rax
  407ee0:	push   rdx
  407ee1:	rex.B
  407ee2:	rex.RXB
  407ee3:	rex.WRB
  407ee4:	or     spl,BYTE PTR [r11]
  407ee7:	jo     0x407f5b
  407ee9:	(bad)  
  407eea:	ins    DWORD PTR es:[edi],dx
  407eec:	(bad)  
  407eed:	and    BYTE PTR [rdi+0x5f],al
  407ef0:	rex.R
  407ef1:	rex.RB
  407ef2:	rex.RX
  407ef3:	rex.WB
  407ef4:	rex.WRX
  407ef5:	rex.RB pop r15
  407ef7:	rex.R
  407ef8:	rex.RB push r11
  407efa:	push   rsp
  407efb:	push   rdx
  407efc:	push   rbp
  407efd:	rex.XB push r12
  407eff:	rex.WRXB push r10
  407f01:	pop    rdi
  407f02:	push   rax
  407f03:	push   rdx
  407f04:	rex.B
  407f05:	rex.RXB
  407f06:	rex.WRB
  407f07:	pop    r15
  407f09:	push   r10
  407f0b:	rex.RXB push r11
  407f0d:	sub    BYTE PTR [rdx+0x65],dh
  407f10:	jae    0x407f81
  407f12:	jne    0x407f86
  407f14:	movsxd esp,DWORD PTR [rbp+0x5f]
  407f17:	fs gs jae 0x407f8f
  407f1b:	jb     0x407f92
  407f1d:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
  407f21:	sub    DWORD PTR [rdx],ecx
  407f23:	and    esp,DWORD PTR [rbp+0x6e]
  407f26:	imul   esp,DWORD PTR fs:[rsi+0xa],0x45445f47
  407f2e:	rex.RX
  407f2f:	rex.WB
  407f30:	rex.WRX
  407f31:	rex.RB pop r15
  407f33:	rex.R
  407f34:	rex.RB push r11
  407f36:	push   rsp
  407f37:	push   rdx
  407f38:	push   rbp
  407f39:	rex.XB push r12
  407f3b:	rex.WRXB push r10
  407f3d:	sub    BYTE PTR [rdx+0x65],dh
  407f40:	jae    0x407fb1
  407f42:	jne    0x407fb6
  407f44:	movsxd esp,DWORD PTR [rbp+0x5f]
  407f47:	fs gs jae 0x407fbf
  407f4b:	jb     0x407fc2
  407f4d:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
  407f51:	sub    DWORD PTR [rdx],ecx
  407f53:	or     ah,BYTE PTR [rbx]
  407f55:	gs ins BYTE PTR es:[rdi],dx
  407f57:	jae    0x407fbe
  407f59:	or     ah,BYTE PTR [rbx]
  407f5b:	ja     0x407fbe
  407f5d:	jb     0x407fcd
  407f5f:	imul   ebp,DWORD PTR [rsi+0x67],0x6f432220
  407f66:	outs   dx,BYTE PTR ds:[rsi]
  407f67:	jae    0x407fdd
  407f69:	jb     0x407fe0
  407f6b:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
  407f6f:	and    BYTE PTR [rsi+0x6f],ch
  407f72:	je     0x407f94
  407f74:	jae    0x407feb
  407f76:	jo     0x407fe8
  407f78:	outs   dx,DWORD PTR ds:[rsi]
  407f79:	jb     0x407fef
  407f7b:	gs and BYTE PTR fs:[rdi+0x6e],ch
  407f80:	and    BYTE PTR [rax+rbp*2+0x69],dh
  407f84:	jae    0x407fa6
  407f86:	movsxd ebp,DWORD PTR [rdi+0x6d]
  407f89:	jo     0x407ff4
  407f8b:	ins    BYTE PTR es:[rdi],dx
  407f8c:	gs jb  0x407fbb
  407f8f:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
  407f93:	imul   ebp,DWORD PTR [rcx+0x6e],0x67
  407f97:	and    BYTE PTR [rcx+0x6e],ch
  407f9a:	and    BYTE PTR [rdx+0x65],dh
  407f9d:	jae    0x40800e
  407f9f:	jne    0x408013
  407fa1:	movsxd esp,DWORD PTR [rbp+0x73]
  407fa4:	and    BYTE PTR [rdi+0x69],dh
  407fa7:	ins    BYTE PTR es:[rdi],dx
  407fa8:	ins    BYTE PTR es:[rdi],dx
  407fa9:	and    BYTE PTR [rsi+0x6f],ch
  407fac:	je     0x407fce
  407fae:	ja     0x40801f
  407fb0:	jb     0x40801d
  407fb2:	and    cl,BYTE PTR [rdx]
  407fb4:	and    esp,DWORD PTR [rbp+0x6e]
  407fb7:	imul   esp,DWORD PTR fs:[rsi+0xa],0x6174730a
  407fbf:	je     0x40802a
  407fc1:	movsxd esp,DWORD PTR [rax]
  407fc3:	jbe    0x408034
  407fc5:	imul   esp,DWORD PTR [rax+riz*1+0x72],0x756f7365
  407fcd:	jb     0x408032
  407fcf:	gs pop rdi
  407fd1:	movsxd ebp,DWORD PTR [rdi+0x6e]
  407fd4:	jae    0x40804a
  407fd6:	jb     0x40804d
  407fd8:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
  407fdc:	and    BYTE PTR [rax],ch
  407fde:	jbe    0x40804f
  407fe0:	imul   esp,DWORD PTR [rcx+rbp*1+0xa],0x20200a7b
  407fe8:	addr32 pop rdi
  407fea:	jae    0x408060
  407fec:	(bad)  
  407fed:	je     0x408058
  407fef:	movsxd ebx,DWORD PTR [rdi+0x72]
  407ff2:	gs jae 0x408064
  407ff5:	jne    0x408069
  407ff7:	movsxd esp,DWORD PTR [rbp+0x5f]
  407ffa:	imul   ebp,DWORD PTR [rsi+0x69],0x26282074
  408001:	jae    0x408077
  408003:	(bad)  
  408004:	je     0x40806f
  408006:	movsxd ebx,DWORD PTR [rdi+0x72]
  408009:	gs jae 0x40807b
  40800c:	jne    0x408080
  40800e:	movsxd esp,DWORD PTR [rbp+0x29]
  408011:	cmp    ecx,DWORD PTR [rdx]
  408013:	jge    0x40801f
  408015:	or     dh,BYTE PTR [rbx+0x74]
  408018:	(bad)  
  408019:	je     0x408084
  40801b:	movsxd esp,DWORD PTR [rax]
  40801d:	jbe    0x40808e
  40801f:	imul   esp,DWORD PTR [rax+riz*1+0x72],0x756f7365
  408027:	jb     0x40808c
  408029:	gs pop rdi
  40802b:	fs gs jae 0x4080a3
  40802f:	jb     0x4080a6
  408031:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
  408035:	and    BYTE PTR [rax],ch
  408037:	jbe    0x4080a8
  408039:	imul   esp,DWORD PTR [rcx+rbp*1+0xa],0x20200a7b
  408041:	addr32 pop rdi
  408043:	jae    0x4080b9
  408045:	(bad)  
  408046:	je     0x4080b1
  408048:	movsxd ebx,DWORD PTR [rdi+0x72]
  40804b:	gs jae 0x4080bd
  40804e:	jne    0x4080c2
  408050:	movsxd esp,DWORD PTR [rbp+0x5f]
  408053:	imul   bp,WORD PTR [rsi+0x69],0x2820
  408059:	es jae 0x4080d0
  40805c:	(bad)  
  40805d:	je     0x4080c8
  40805f:	movsxd ebx,DWORD PTR [rdi+0x72]
  408062:	gs jae 0x4080d4
  408065:	jne    0x4080d9
  408067:	movsxd esp,DWORD PTR [rbp+0x29]
  40806a:	cmp    ecx,DWORD PTR [rdx]
  40806c:	jge    0x408078
	...
  40807e:	add    BYTE PTR [rax],al
  408080:	(bad)  
  408081:	sub    cl,BYTE PTR [rdx]
  408083:	and    BYTE PTR [rax],ah
  408085:	rex.WB
  408086:	data16 and BYTE PTR [rdi+0x5f],al
  40808a:	rex.W
  40808b:	push   r11
  40808d:	pop    rdi
  40808e:	rex.XB
  40808f:	rex.WRXB
  408090:	rex.WRX push rbx
  408092:	push   rsp
  408093:	push   rdx
  408094:	push   rbp
  408095:	rex.XB push r12
  408097:	rex.WRXB push r10
  408099:	push   rbx
  40809a:	and    BYTE PTR [rcx+0x73],ch
  40809d:	and    BYTE PTR [rdx+rsi*2+0x75],dh
  4080a1:	and    BYTE PTR gs:[rax+rbp*2+0x65],dh
  4080a6:	outs   dx,BYTE PTR ds:[rsi]
  4080a7:	and    BYTE PTR [rax+rbp*2+0x65],dh
  4080ab:	and    BYTE PTR [rbx+0x6f],ah
  4080ae:	ins    DWORD PTR es:[rdi],dx
  4080af:	jo     0x40811a
  4080b1:	ins    BYTE PTR es:[rdi],dx
  4080b2:	gs jb  0x4080d5
  4080b5:	jae    0x40812c
  4080b7:	jo     0x408129
  4080b9:	outs   dx,DWORD PTR ds:[rsi]
  4080ba:	jb     0x408130
  4080bc:	and    BYTE PTR [rdx],ch
  4080be:	(bad)  
  4080bf:	outs   dx,DWORD PTR ds:[rsi]
  4080c0:	je     0x40812a
  4080c2:	sub    ah,BYTE PTR [rax]
  4080c4:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4080c7:	jae    0x40813d
  4080c9:	jb     0x408140
  4080cb:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
  4080cf:	jae    0x4080f1
  4080d1:	(bad)  
  4080d2:	outs   dx,BYTE PTR ds:[rsi]
  4080d3:	or     ah,BYTE PTR fs:[rax]
  4080d6:	and    BYTE PTR [rbp+riz*2+0x73],ah
  4080da:	je     0x40814e
  4080dc:	jne    0x408141
  4080de:	je     0x40814f
  4080e0:	jb     0x408155
  4080e2:	sub    al,0x20
  4080e4:	imul   ebp,DWORD PTR [rsi+0x20],0x61732061
  4080eb:	outs   dx,BYTE PTR ds:[rsi]
  4080ec:	and    BYTE PTR gs:[rdi+0x61],dh
  4080f0:	jns    0x40811e
  4080f2:	and    BYTE PTR [rcx+0x6e],ch
  4080f5:	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
  4080f9:	imul   ebp,DWORD PTR [rsi+0x67],0x672e6520
  408100:	and    BYTE PTR cs:[rdi+0x6e],ch
  408104:	and    BYTE PTR [rcx+rbp*2+0x62],ch
  408108:	jb     0x40816b
  40810a:	jb     0x408185
  40810c:	and    BYTE PTR [rbp+0x6e],dh
  40810f:	ins    BYTE PTR es:[rdi],dx
  408110:	outs   dx,DWORD PTR ds:[rsi]
  408111:	(bad)  
  408112:	fs and BYTE PTR cs:[rcx+0x66],cl
  408117:	and    BYTE PTR [rsi+0x6f],ch
  40811a:	je     0x40813c
  40811c:	jns    0x40818d
  40811e:	jne    0x408147
  408120:	jb     0x408187
  408122:	and    BYTE PTR [rdi+0x6e],ch
  408125:	or     ah,BYTE PTR [rax]
  408127:	and    BYTE PTR [rcx+0x6f],bh
  40812a:	jne    0x40819e
  40812c:	and    BYTE PTR [rdi+0x77],ch
  40812f:	outs   dx,BYTE PTR ds:[rsi]
  408130:	or     cl,BYTE PTR cs:[rdx]
  408133:	and    BYTE PTR [rax],ah
  408135:	push   rbx
  408136:	outs   dx,DWORD PTR ds:[rsi]
  408137:	ins    DWORD PTR es:[rdi],dx
  408138:	and    BYTE PTR gs:[rbx+0x6f],ah
  40813c:	ins    DWORD PTR es:[rdi],dx
  40813d:	jo     0x4081a8
  40813f:	ins    BYTE PTR es:[rdi],dx
  408140:	gs jb  0x4081b6
  408143:	and    BYTE PTR [rsi+0x65],ch
  408146:	gs and BYTE PTR fs:[rbx],ah
  40814a:	jo     0x4081be
  40814c:	(bad)  
  40814d:	ins    DWORD PTR es:[edi],dx
  40814f:	(bad)  
  408150:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  408154:	push   0x6c646e61
  408159:	and    BYTE PTR gs:[rax+rbp*2+0x69],dh
  40815e:	jae    0x40818c
  408160:	and    BYTE PTR [rdi+0x68],dh
  408163:	imul   esp,DWORD PTR [rbx+0x68],0x656f6420
  40816a:	jae    0x40818c
  40816c:	outs   dx,BYTE PTR ds:[rsi]
  40816d:	outs   dx,DWORD PTR ds:[rsi]
  40816e:	je     0x408190
  408170:	ja     0x4081e1
  408172:	jb     0x4081df
  408174:	and    BYTE PTR [rdi+0x69],dh
  408177:	je     0x4081e1
  408179:	and    BYTE PTR [rbp+0x61],ch
  40817c:	movsxd esi,DWORD PTR [rdx+0x6f]
  40817f:	jae    0x4081ad
  408181:	or     ah,BYTE PTR [rax]
  408183:	and    BYTE PTR [rbx+0x6f],dh
  408186:	and    BYTE PTR [rax+rbp*2+0x65],dh
  40818a:	and    BYTE PTR [rdi+0x61],dh
  40818d:	jns    0x4081af
  40818f:	jns    0x408200
  408191:	jne    0x4081b3
  408193:	outs   dx,BYTE PTR ds:[rsi]
  408194:	gs gs and BYTE PTR fs:[rdi+rbp*2+0x20],dh
  40819b:	jne    0x408210
  40819d:	and    BYTE PTR gs:[rax+rbp*2+0x69],dh
  4081a2:	jae    0x4081c4
  4081a4:	imul   esi,DWORD PTR [rbx+0x20],0x726f6628
  4081ab:	and    BYTE PTR [rbx+0x6f],ah
  4081ae:	outs   dx,BYTE PTR ds:[rsi]
  4081af:	jae    0x408225
  4081b1:	jb     0x408228
  4081b3:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
  4081b7:	jae    0x4081e2
  4081b9:	cmp    cl,BYTE PTR [rdx]
  4081bb:	or     ah,BYTE PTR [rax]
  4081bd:	and    BYTE PTR [rbx],ah
  4081bf:	imul   esp,DWORD PTR [rsi+0x64],0x47206665
  4081c6:	pop    rdi
  4081c7:	rex.R
  4081c8:	rex.RB
  4081c9:	rex.RX
  4081ca:	rex.WB
  4081cb:	rex.WRX
  4081cc:	rex.RB pop r15
  4081ce:	rex.XB
  4081cf:	rex.WRXB
  4081d0:	rex.WRX push rbx
  4081d2:	push   rsp
  4081d3:	push   rdx
  4081d4:	push   rbp
  4081d5:	rex.XB push r12
  4081d7:	rex.WRXB push r10
  4081d9:	pop    rdi
  4081da:	rex.WRX
  4081db:	rex.RB
  4081dc:	rex.RB
  4081dd:	rex.R push rbx
  4081df:	pop    rdi
  4081e0:	push   rax
  4081e1:	push   rdx
  4081e2:	rex.B
  4081e3:	rex.RXB
  4081e4:	rex.WRB
  4081e5:	or     spl,BYTE PTR [r8]
  4081e8:	and    BYTE PTR [rbx],ah
  4081ea:	jo     0x40825e
  4081ec:	(bad)  
  4081ed:	ins    DWORD PTR es:[edi],dx
  4081ef:	(bad)  
  4081f0:	and    BYTE PTR [rdi+0x5f],al
  4081f3:	rex.R
  4081f4:	rex.RB
  4081f5:	rex.RX
  4081f6:	rex.WB
  4081f7:	rex.WRX
  4081f8:	rex.RB pop r15
  4081fa:	rex.XB
  4081fb:	rex.WRXB
  4081fc:	rex.WRX push rbx
  4081fe:	push   rsp
  4081ff:	push   rdx
  408200:	push   rbp
  408201:	rex.XB push r12
  408203:	rex.WRXB push r10
  408205:	pop    rdi
  408206:	push   rax
  408207:	push   rdx
  408208:	rex.B
  408209:	rex.RXB
  40820a:	rex.WRB
  40820b:	pop    r15
  40820d:	push   r10
  40820f:	rex.RXB push r11
  408211:	sub    BYTE PTR [rbp+0x79],ch
  408214:	pop    rdi
  408215:	movsxd ebp,DWORD PTR [rdi+0x6e]
  408218:	jae    0x40828e
  40821a:	jb     0x408291
  40821c:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
  408220:	sub    DWORD PTR [rdx],ecx
  408222:	and    BYTE PTR [rax],ah
  408224:	and    esp,DWORD PTR [rbp+0x6e]
  408227:	imul   esp,DWORD PTR fs:[rsi+0xa],0x5f472020
  40822f:	rex.R
  408230:	rex.RB
  408231:	rex.RX
  408232:	rex.WB
  408233:	rex.WRX
  408234:	rex.RB pop r15
  408236:	rex.XB
  408237:	rex.WRXB
  408238:	rex.WRX push rbx
  40823a:	push   rsp
  40823b:	push   rdx
  40823c:	push   rbp
  40823d:	rex.XB push r12
  40823f:	rex.WRXB push r10
  408241:	sub    BYTE PTR [rbp+0x79],ch
  408244:	pop    rdi
  408245:	movsxd ebp,DWORD PTR [rdi+0x6e]
  408248:	jae    0x4082be
  40824a:	jb     0x4082c1
  40824c:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
  408250:	sub    DWORD PTR [rdx],ecx
  408252:	and    BYTE PTR [rax],ah
  408254:	jae    0x4082ca
  408256:	(bad)  
  408257:	je     0x4082c2
  408259:	movsxd esp,DWORD PTR [rax]
  40825b:	jbe    0x4082cc
  40825d:	imul   esp,DWORD PTR [rax+riz*1+0x6d],0x6f635f79
  408265:	outs   dx,BYTE PTR ds:[rsi]
  408266:	jae    0x4082dc
  408268:	jb     0x4082df
  40826a:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
  40826e:	sub    BYTE PTR [rsi+0x6f],dh
  408271:	imul   esp,DWORD PTR [rcx+rbp*1+0x20],0x20200a7b
  408279:	and    BYTE PTR [rsi],ch
  40827b:	cs or  ah,BYTE PTR cs:[rax]
  40827f:	and    BYTE PTR [rbp+0xa],bh
  408282:	or     ch,BYTE PTR [rdx]
  408284:	(bad)  
  408285:	or     cl,BYTE PTR [rdx]
  408287:	and    ebp,DWORD PTR [rcx+0x66]
  40828a:	outs   dx,BYTE PTR ds:[rsi]
  40828b:	fs data16 and BYTE PTR gs:[rdi+0x5f],bl
  408291:	rex.RXB push r12
  408293:	rex.WXB pop r15
  408295:	rex.R
  408296:	rex.WRXB
  408297:	rex.XB pop r15
  408299:	rex.WB
  40829a:	rex.RXB
  40829b:	rex.WRX
  40829c:	rex.WRXB push r10
  40829e:	rex.RB pop r15
  4082a0:	pop    rdi
  4082a1:	or     cl,BYTE PTR [rdx]
  4082a3:	and    ebp,DWORD PTR [rcx+0x66]
  4082a6:	and    BYTE PTR [rax],ah
  4082a8:	pop    rdi
  4082a9:	pop    rdi
  4082aa:	rex.RXB
  4082ab:	rex.WRX push rbp
  4082ad:	rex.XB pop r15
  4082af:	pop    rdi
  4082b0:	and    BYTE PTR [rsi],bh
  4082b2:	and    BYTE PTR [rdx],dh
  4082b4:	and    BYTE PTR [rsp+rdi*2+0x20],bh
  4082b8:	sub    BYTE PTR [rdi+0x5f],bl
  4082bb:	rex.RXB
  4082bc:	rex.WRX push rbp
  4082be:	rex.XB pop r15
  4082c0:	pop    rdi
  4082c1:	and    BYTE PTR [rip+0x2032203d],bh        # 0x2072a304
  4082c7:	es and BYTE PTR es:[rdi+0x5f],bl
  4082cc:	rex.RXB
  4082cd:	rex.WRX push rbp
  4082cf:	rex.XB pop r15
  4082d1:	rex.WRB
  4082d2:	rex.WB
  4082d3:	rex.WRX
  4082d4:	rex.WRXB push r10
  4082d6:	pop    rdi
  4082d7:	pop    rdi
  4082d8:	and    BYTE PTR [rsi],bh
  4082da:	cmp    eax,0xa293720
  4082df:	or     ah,BYTE PTR [rbx]
  4082e1:	fs imul bp,WORD PTR gs:[rsi+0x65],0x4720
  4082e9:	pop    rdi
  4082ea:	rex.W
  4082eb:	push   r11
  4082ed:	pop    rdi
  4082ee:	rex.XB
  4082ef:	rex.WRXB
  4082f0:	rex.WRX push rbx
  4082f2:	push   rsp
  4082f3:	push   rdx
  4082f4:	push   rbp
  4082f5:	rex.XB push r12
  4082f7:	rex.WRXB push r10
  4082f9:	push   rbx
  4082fa:	and    BYTE PTR [rcx],dh
  4082fc:	or     cl,BYTE PTR [rdx]
  4082fe:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  408302:	imul   ebp,DWORD PTR [rsi+0x65],0x445f4720
  408309:	rex.RB
  40830a:	rex.RX
  40830b:	rex.WB
  40830c:	rex.WRX
  40830d:	rex.RB pop r15
  40830f:	rex.XB
  408310:	rex.WRXB
  408311:	rex.WRX push rbx
  408313:	push   rsp
  408314:	push   rdx
  408315:	push   rbp
  408316:	rex.XB push r12
  408318:	rex.WRXB push r10
  40831a:	sub    BYTE PTR [rdi+0x66],bl
  40831d:	jne    0x40838d
  40831f:	movsxd ebp,DWORD PTR [rcx]
  408321:	and    BYTE PTR [rbx+0x74],dh
  408324:	(bad)  
  408325:	je     0x408390
  408327:	movsxd esp,DWORD PTR [rax]
  408329:	jbe    0x40839a
  40832b:	imul   esp,DWORD PTR [rax+riz*1+0x5f],0x7474615f
  408333:	jb     0x40839e
  408335:	(bad)  
  408336:	jne    0x4083ac
  408338:	gs pop rdi
  40833a:	pop    rdi
  40833b:	sub    BYTE PTR [rax],ch
  40833d:	movsxd ebp,DWORD PTR [rdi+0x6e]
  408340:	jae    0x4083b6
  408342:	jb     0x4083b9
  408344:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
  408348:	sub    DWORD PTR [rcx],ebp
  40834a:	and    BYTE PTR [rdi+0x66],bl
  40834d:	jne    0x4083bd
  40834f:	movsxd esp,DWORD PTR [rax]
  408351:	sub    BYTE PTR [rsi+0x6f],dh
  408354:	imul   esp,DWORD PTR [rcx+rbp*1+0x3b],0x6564230a
  40835c:	imul   bp,WORD PTR [rsi+0x65],0x4720
  408362:	pop    rdi
  408363:	rex.R
  408364:	rex.RB
  408365:	rex.RX
  408366:	rex.WB
  408367:	rex.WRX
  408368:	rex.RB pop r15
  40836a:	rex.R
  40836b:	rex.RB push r11
  40836d:	push   rsp
  40836e:	push   rdx
  40836f:	push   rbp
  408370:	rex.XB push r12
  408372:	rex.WRXB push r10
  408374:	sub    BYTE PTR [rdi+0x66],bl
  408377:	jne    0x4083e7
  408379:	movsxd ebp,DWORD PTR [rcx]
  40837b:	and    BYTE PTR [rbx+0x74],dh
  40837e:	(bad)  
  40837f:	je     0x4083ea
  408381:	movsxd esp,DWORD PTR [rax]
  408383:	jbe    0x4083f4
  408385:	imul   esp,DWORD PTR [rax+riz*1+0x5f],0x7474615f
  40838d:	jb     0x4083f8
  40838f:	(bad)  
  408390:	jne    0x408406
  408392:	gs pop rdi
  408394:	pop    rdi
  408395:	sub    BYTE PTR [rax],ch
  408397:	fs gs jae 0x40840f
  40839b:	jb     0x408412
  40839d:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
  4083a1:	sub    DWORD PTR [rcx],ebp
  4083a3:	and    BYTE PTR [rdi+0x66],bl
  4083a6:	jne    0x408416
  4083a8:	movsxd esp,DWORD PTR [rax]
  4083aa:	sub    BYTE PTR [rsi+0x6f],dh
  4083ad:	imul   esp,DWORD PTR [rcx+rbp*1+0x3b],0x65230a0a
  4083b5:	ins    BYTE PTR es:[rdi],dx
  4083b6:	imul   esp,DWORD PTR [rsi+0x20],0x69666564
  4083bd:	outs   dx,BYTE PTR ds:[rsi]
  4083be:	gs and BYTE PTR fs:[rax],ch
  4083c2:	pop    rdi
  4083c3:	rex.WRB push r11
  4083c5:	rex.XB pop r15
  4083c7:	push   rsi
  4083c8:	rex.RB push r10
  4083ca:	sub    DWORD PTR [rax],esp
  4083cc:	es and BYTE PTR es:[rax],ch
  4083d0:	pop    rdi
  4083d1:	rex.WRB push r11
  4083d3:	rex.XB pop r15
  4083d5:	push   rsi
  4083d6:	rex.RB push r10
  4083d8:	and    BYTE PTR [rsi],bh
  4083da:	cmp    eax,0x30353120
  4083df:	xor    BYTE PTR [rcx],ch
  4083e1:	or     ch,BYTE PTR [rdi]
  4083e3:	sub    ah,BYTE PTR [rax]
  4083e5:	push   rsi
  4083e6:	imul   esi,DWORD PTR [rbx+0x75],0x73206c61
  4083ed:	je     0x408464
  4083ef:	imul   ebp,DWORD PTR fs:[rdi+0x20],0x38303032
  4083f7:	and    BYTE PTR [rcx+0x6e],ah
  4083fa:	and    BYTE PTR fs:[rcx+riz*2+0x74],ch
  4083ff:	gs jb  0x408422
  408402:	push   0x5f207361
  408407:	push   rax
  408408:	jb     0x40846b
  40840a:	ins    DWORD PTR es:[edi],dx
  40840c:	(bad)  
  40840d:	and    BYTE PTR [rdx],ch
  40840f:	(bad)  
  408410:	or     cl,BYTE PTR [rdx]
  408412:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  408416:	imul   ebp,DWORD PTR [rsi+0x65],0x485f4720
  40841d:	push   r11
  40841f:	pop    rdi
  408420:	rex.XB
  408421:	rex.WRXB
  408422:	rex.WRX push rbx
  408424:	push   rsp
  408425:	push   rdx
  408426:	push   rbp
  408427:	rex.XB push r12
  408429:	rex.WRXB push r10
  40842b:	push   rbx
  40842c:	and    BYTE PTR [rcx],dh
  40842e:	or     cl,BYTE PTR [rdx]
  408430:	(bad)  
  408431:	sub    ah,BYTE PTR [rax]
  408433:	push   rdi
  408434:	and    BYTE PTR gs:[rdi+rbp*2+0x20],ah
  408439:	jae    0x4084aa
  40843b:	ins    DWORD PTR es:[rdi],dx
  40843c:	and    BYTE PTR gs:[rdi+0x65],dh
  408440:	imul   esi,DWORD PTR [rdx+0x64],0x69687420
  408447:	outs   dx,BYTE PTR ds:[rsi]
  408448:	addr32 jae 0x40846b
  40844b:	je     0x4084bc
  40844d:	and    BYTE PTR [rcx+0x76],ah
  408450:	outs   dx,DWORD PTR ds:[rsi]
  408451:	imul   esp,DWORD PTR [rax+riz*1+0x74],0x63206568
  408459:	outs   dx,DWORD PTR ds:[rsi]
  40845a:	outs   dx,BYTE PTR ds:[rsi]
  40845b:	jae    0x4084d1
  40845d:	jb     0x4084d4
  40845f:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
  408463:	jae    0x408485
  408465:	(bad)  
  408466:	imul   ebp,DWORD PTR gs:[rsi+0x67],0x74706f20
  40846e:	imul   ebp,DWORD PTR [rbp+0x69],0xa64657a
  408475:	and    BYTE PTR [rdx],ch
  408477:	and    BYTE PTR [rcx+0x77],ah
  40847a:	(bad)  
  40847b:	jns    0x40849d
  40847d:	outs   dx,DWORD PTR ds:[rsi]
  40847e:	outs   dx,BYTE PTR ds:[rsi]
  40847f:	and    BYTE PTR [rsi+0x53],dl
  408482:	xor    dh,BYTE PTR [rax]
  408484:	xor    DWORD PTR [rip+0x20666920],esi        # 0x20a6edaa
  40848a:	push   rdi
  40848b:	push   0x50656c6f
  408490:	jb     0x408501
  408492:	addr32 jb 0x4084f6
  408495:	ins    DWORD PTR es:[rdi],dx
  408496:	rex.WRXB jo 0x40850d
  408499:	imul   ebp,DWORD PTR [rbp+0x69],0x6974617a
  4084a0:	outs   dx,DWORD PTR ds:[rsi]
  4084a1:	outs   dx,BYTE PTR ds:[rsi]
  4084a2:	and    BYTE PTR [rcx+0x73],ch
  4084a5:	and    BYTE PTR [rbp+0x6e],ah
  4084a8:	(bad)  
  4084a9:	(bad)  
  4084aa:	ins    BYTE PTR es:[rdi],dx
  4084ab:	gs fs and BYTE PTR cs:[rsi+0x69],al
  4084b1:	jb     0x408526
  4084b3:	je     0x4084d5
  4084b5:	ja     0x40851c
  4084b7:	or     ah,BYTE PTR [rax]
  4084b9:	sub    ah,BYTE PTR [rax]
  4084bb:	ins    DWORD PTR es:[rdi],dx
  4084bc:	(bad)  
  4084bd:	imul   esp,DWORD PTR [rbp+0x20],0x61
  4084c1:	and    BYTE PTR [rdx+0x65],dh
  4084c4:	data16 gs jb 0x40852d
  4084c8:	outs   dx,BYTE PTR ds:[rsi]
  4084c9:	movsxd esp,DWORD PTR [rbp+0x20]
  4084cc:	je     0x40853d
  4084ce:	and    BYTE PTR [rax+rbp*2+0x65],dh
  4084d2:	and    BYTE PTR [rcx+0x72],ah
  4084d5:	jb     0x408538
  4084d7:	jns    0x4084f9
  4084d9:	data16 jb 0x40854b
  4084dc:	ins    DWORD PTR es:[rdi],dx
  4084dd:	and    BYTE PTR [rax+rbp*2+0x65],dh
  4084e1:	and    BYTE PTR [rdi+0x72],dh
  4084e4:	(bad)  
  4084e5:	jo     0x408557
  4084e7:	gs jb  0x40850a
  4084ea:	je     0x40855b
  4084ec:	and    BYTE PTR [rbp+0x61],ch
  4084ef:	imul   esp,DWORD PTR [rbp+0x20],0x73
  4084f3:	jne    0x408567
  4084f5:	and    BYTE PTR gs:[rcx+0x74],ch
  4084f9:	jae    0x408505
  4084fb:	and    BYTE PTR [rdx],ch
  4084fd:	and    BYTE PTR [rdx+0x65],dh
  408500:	data16 gs jb 0x408569
  408504:	outs   dx,BYTE PTR ds:[rsi]
  408505:	movsxd esp,DWORD PTR [rbp+0x73]
  408508:	and    BYTE PTR cs:[rax+rbp*2+0x65],dl
  40850d:	outs   dx,BYTE PTR ds:[rsi]
  40850e:	and    BYTE PTR [rdi+0x65],dh
  408511:	and    BYTE PTR [rbp+0x73],dh
  408514:	and    BYTE PTR gs:[rcx+0x20],ah
  408518:	jo     0x40858c
  40851a:	(bad)  
  40851b:	ins    DWORD PTR es:[edi],dx
  40851d:	(bad)  
  40851e:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  408522:	ins    DWORD PTR es:[rdi],dx
  408523:	(bad)  
  408524:	imul   esp,DWORD PTR [rbp+0x20],0x73
  408528:	jne    0x40859c
  40852a:	and    BYTE PTR gs:[rax+rbp*2+0x65],dh
  40852f:	and    BYTE PTR [rdi+0x72],dh
  408532:	(bad)  
  408533:	jo     0x4085a5
  408535:	gs jb  0x408558
  408538:	data16 jne 0x4085a9
  40853b:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  40853f:	outs   dx,BYTE PTR ds:[rsi]
  408540:	or     ah,BYTE PTR [rax]
  408542:	sub    ah,BYTE PTR [rax]
  408544:	jae    0x4085bf
  408546:	ins    DWORD PTR es:[rdi],dx
  408547:	(bad)  
  408548:	outs   dx,DWORD PTR ds:[rsi]
  408549:	ins    BYTE PTR es:[rdi],dx
  40854a:	and    BYTE PTR [rcx+0x73],ch
  40854d:	and    BYTE PTR [rcx+0x6c],ah
  408550:	ja     0x4085b3
  408552:	jns    0x4085c7
  408554:	and    BYTE PTR [rcx+0x6e],ch
  408557:	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
  40855b:	gs and BYTE PTR fs:[rcx+0x74],ah
  408560:	and    BYTE PTR [rax+rbp*2+0x65],dh
  408564:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
  408568:	imul   esp,DWORD PTR [rax],0x73
  40856b:	je     0x4085ce
  40856d:	gs and BYTE PTR cs:[ecx+0x6c],al
  408573:	jae    0x4085e4
  408575:	sub    al,0x20
  408577:	je     0x4085e1
  408579:	and    BYTE PTR gs:[rbx+0x79],dh
  40857d:	ins    DWORD PTR es:[rdi],dx
  40857e:	(bad)  
  40857f:	outs   dx,DWORD PTR ds:[rsi]
  408580:	ins    BYTE PTR es:[rdi],dx
  408581:	jae    0x40858d
  408583:	and    BYTE PTR [rdx],ch
  408585:	and    BYTE PTR [rsi+0x65],ch
  408588:	gs and BYTE PTR fs:[rdi+rbp*2+0x20],dh
  40858e:	(bad)  
  40858f:	and    BYTE PTR gs:[rbp+0x78],ah
  408593:	je     0x4085fa
  408595:	jb     0x408605
  408597:	and    BYTE PTR [rax],ch
  408599:	(bad)  
  40859a:	jne    0x408610
  40859c:	and    BYTE PTR [rsi+0x6f],ch
  40859f:	je     0x4085c1
  4085a1:	fs ins BYTE PTR es:[rdi],dx
  4085a3:	ins    BYTE PTR es:[rdi],dx
  4085a4:	gs js  0x408617
  4085a7:	outs   dx,DWORD PTR ds:[rsi]
  4085a8:	jb     0x40861e
  4085aa:	sub    DWORD PTR [rax+riz*1],ebp
  4085ad:	gs jbe 0x408615
  4085b0:	outs   dx,BYTE PTR ds:[rsi]
  4085b1:	and    BYTE PTR [rax+rbp*2+0x6f],dh
  4085b5:	jne    0x40861e
  4085b7:	push   0x65687420
  4085bc:	jns    0x4085de
  4085be:	(bad)  
  4085bf:	jb     0x408626
  4085c1:	and    BYTE PTR [rsi+0x6f],ch
  4085c4:	je     0x4085d0
  4085c6:	and    BYTE PTR [rdx],ch
  4085c8:	and    BYTE PTR [rdx+0x65],dh
  4085cb:	(bad)  
  4085cc:	ins    BYTE PTR es:[rdi],dx
  4085cd:	ins    BYTE PTR es:[rdi],dx
  4085ce:	jns    0x4085f0
  4085d0:	jne    0x408645
  4085d2:	gs and BYTE PTR fs:[rsi+0x72],ah
  4085d7:	outs   dx,DWORD PTR ds:[rsi]
  4085d8:	ins    DWORD PTR es:[rdi],dx
  4085d9:	and    BYTE PTR [rcx+0x6e],ah
  4085dc:	outs   dx,DWORD PTR ds:[rsi]
  4085dd:	je     0x408647
  4085df:	gs jb  0x408602
  4085e2:	outs   dx,DWORD PTR ds:[rsi]
  4085e3:	(bad)  
  4085e4:	push   0x65
  4085e6:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
  4085ea:	imul   ebp,DWORD PTR [rbp+riz*2+0x2e],0x2f2a200a
  4085f2:	or     cl,BYTE PTR [rdx]
  4085f4:	(bad)  
  4085f5:	sub    ah,BYTE PTR [rax]
  4085f7:	push   rdi
  4085f8:	and    BYTE PTR gs:[rsi+0x65],ch
  4085fc:	gs and BYTE PTR fs:[rdi+rbp*2+0x20],dh
  408602:	(bad)  
  408603:	movsxd esp,DWORD PTR [rbx+0x6f]
  408606:	jne    0x408676
  408608:	je     0x40862a
  40860a:	outs   dx,WORD PTR ds:[rsi]
  40860c:	jb     0x40862e
  40860e:	imul   esp,DWORD PTR fs:[rsi+0x66],0x6e657265
  408616:	movsxd esp,DWORD PTR [rbp+0x73]
  408619:	and    BYTE PTR [rdx+0x65],ah
  40861c:	je     0x408695
  40861e:	gs outs dx,BYTE PTR gs:[rsi]
  408621:	and    BYTE PTR [rax+rbp*2+0x65],dh
  408625:	and    BYTE PTR [rbp+0x61],ch
  408628:	outs   dx,BYTE PTR ds:[rsi]
  408629:	ins    BYTE PTR es:[edi],dx
  40862b:	imul   ebp,DWORD PTR [rsi+0x67],0x20666f20
  408632:	jae    0x4086ad
  408634:	ins    DWORD PTR es:[rdi],dx
  408635:	(bad)  
  408636:	outs   dx,DWORD PTR ds:[rsi]
  408637:	ins    BYTE PTR es:[rdi],dx
  408638:	jae    0x408644
  40863a:	and    BYTE PTR [rdx],ch
  40863c:	and    BYTE PTR [rsi+0x6f],ah
  40863f:	jb     0x408661
  408641:	push   rdi
  408642:	imul   ebp,DWORD PTR [rsi+0x33],0x78282032
  408649:	cmp    BYTE PTR [rsi],dh
  40864b:	sub    DWORD PTR [rax],esp
  40864d:	(bad)  
  40864e:	outs   dx,BYTE PTR ds:[rsi]
  40864f:	and    BYTE PTR fs:[rax+0x36],bh
  408653:	xor    al,0x20
  408655:	jo     0x4086c9
  408657:	outs   dx,DWORD PTR ds:[rsi]
  408658:	addr32 jb 0x4086bc
  40865b:	ins    DWORD PTR es:[rdi],dx
  40865c:	jae    0x40868a
  40865e:	and    BYTE PTR [rcx+0x73],ah
  408661:	and    BYTE PTR [rbx+0x79],dh
  408664:	ins    DWORD PTR es:[rdi],dx
  408665:	(bad)  
  408666:	outs   dx,DWORD PTR ds:[rsi]
  408667:	ins    BYTE PTR es:[rdi],dx
  408668:	jae    0x40868a
  40866a:	outs   dx,DWORD PTR ds:[rsi]
  40866b:	outs   dx,BYTE PTR ds:[rsi]
  40866c:	and    BYTE PTR [rdi+0x69],dl
  40866f:	outs   dx,BYTE PTR ds:[rsi]
  408670:	xor    esi,DWORD PTR [rdx]
  408672:	and    BYTE PTR [rcx+0x72],ah
  408675:	and    BYTE PTR gs:[rax+0x72],dh
  408679:	imul   di,WORD PTR gs:[rax+0x65],0xa64
  408680:	and    BYTE PTR [rdx],ch
  408682:	and    BYTE PTR [rdi+0x69],dh
  408685:	je     0x4086ef
  408687:	and    BYTE PTR [rcx+0x6e],ah
  40868a:	and    BYTE PTR [rbp+0x6e],dh
  40868d:	fs gs jb 0x408704
  408691:	movsxd ebp,DWORD PTR [rdi+0x72]
  408694:	and    BYTE PTR gs:[rdx+0x75],ah
  408698:	je     0x4086ba
  40869a:	jae    0x408715
  40869c:	ins    DWORD PTR es:[rdi],dx
  40869d:	(bad)  
  40869e:	outs   dx,DWORD PTR ds:[rsi]
  40869f:	ins    BYTE PTR es:[rdi],dx
  4086a0:	jae    0x4086c2
  4086a2:	outs   dx,DWORD PTR ds:[rsi]
  4086a3:	outs   dx,BYTE PTR ds:[rsi]
  4086a4:	and    BYTE PTR [rax+0x36],bh
  4086a7:	xor    al,0x20
  4086a9:	(bad)  
  4086aa:	jb     0x408711
  4086ac:	and    BYTE PTR [rsi+0x6f],ch
  4086af:	je     0x4086df
  4086b1:	or     ah,BYTE PTR [rax]
  4086b3:	sub    ch,BYTE PTR [rdi]
  4086b5:	or     ah,BYTE PTR [rbx]
  4086b7:	imul   esp,DWORD PTR [rsi+0x64],0x5f206665
  4086be:	push   rdi
  4086bf:	rex.WB
  4086c0:	rex.WRX
  4086c1:	ss xor al,0xa
  4086c4:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  4086c8:	imul   ebp,DWORD PTR [rsi+0x65],0x4d5f4720
  4086cf:	push   rbx
  4086d0:	push   rsi
  4086d1:	rex.XB pop r15
  4086d3:	push   rbx
  4086d4:	pop    rcx
  4086d5:	rex.WRB
  4086d6:	rex.X
  4086d7:	rex.WRXB
  4086d8:	rex.WR pop rdi
  4086da:	push   rax
  4086db:	push   rdx
  4086dc:	rex.RB
  4086dd:	rex.RX
  4086de:	rex.WB pop r8
  4086e0:	and    BYTE PTR [rdx],ah
  4086e2:	and    cl,BYTE PTR [rdx]
  4086e4:	and    esp,DWORD PTR [rbp+0x6c]
  4086e7:	jae    0x40874e
  4086e9:	or     ah,BYTE PTR [rbx]
  4086eb:	fs imul bp,WORD PTR gs:[rsi+0x65],0x4720
  4086f3:	pop    rdi
  4086f4:	rex.WRB push r11
  4086f6:	push   rsi
  4086f7:	rex.XB pop r15
  4086f9:	push   rbx
  4086fa:	pop    rcx
  4086fb:	rex.WRB
  4086fc:	rex.X
  4086fd:	rex.WRXB
  4086fe:	rex.WR pop rdi
  408700:	push   rax
  408701:	push   rdx
  408702:	rex.RB
  408703:	rex.RX
  408704:	rex.WB pop r8
  408706:	and    BYTE PTR [rdx],ah
  408708:	pop    rdi
  408709:	and    cl,BYTE PTR [rdx]
  40870b:	and    esp,DWORD PTR [rbp+0x6e]
  40870e:	imul   esp,DWORD PTR fs:[rsi+0xa],0x6564230a
  408716:	imul   bp,WORD PTR [rsi+0x65],0x4720
  40871c:	pop    rdi
  40871d:	rex.R
  40871e:	rex.RB
  40871f:	rex.RX
  408720:	rex.WB
  408721:	rex.WRX
  408722:	rex.RB pop r15
  408724:	rex.XB
  408725:	rex.WRXB
  408726:	rex.WRX push rbx
  408728:	push   rsp
  408729:	push   rdx
  40872a:	push   rbp
  40872b:	rex.XB push r12
  40872d:	rex.WRXB push r10
  40872f:	sub    BYTE PTR [rdi+0x66],bl
  408732:	jne    0x4087a2
  408734:	movsxd ebp,DWORD PTR [rcx]
  408736:	and    BYTE PTR [rdi+0x5f],al
  408739:	rex.WRB push r11
  40873b:	push   rsi
  40873c:	rex.XB pop r15
  40873e:	rex.XB push r12
  408740:	rex.WRXB push r10
  408742:	and    BYTE PTR [rax],ch
  408744:	pop    rdi
  408745:	data16 jne 0x4087b6
  408748:	movsxd ebp,DWORD PTR [rax+riz*1]
  40874b:	rex.RXB pop r15
  40874d:	rex.WRB push r11
  40874f:	push   rsi
  408750:	rex.XB pop r15
  408752:	push   rbx
  408753:	pop    rcx
  408754:	rex.WRB
  408755:	rex.X
  408756:	rex.WRXB
  408757:	rex.WR pop rdi
  408759:	push   rax
  40875a:	push   rdx
  40875b:	rex.RB
  40875c:	rex.RX
  40875d:	rex.WB pop r8
  40875f:	sub    DWORD PTR [rdx],ecx
  408761:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  408765:	imul   ebp,DWORD PTR [rsi+0x65],0x445f4720
  40876c:	rex.RB
  40876d:	rex.RX
  40876e:	rex.WB
  40876f:	rex.WRX
  408770:	rex.RB pop r15
  408772:	rex.R
  408773:	rex.RB push r11
  408775:	push   rsp
  408776:	push   rdx
  408777:	push   rbp
  408778:	rex.XB push r12
  40877a:	rex.WRXB push r10
  40877c:	sub    BYTE PTR [rdi+0x66],bl
  40877f:	jne    0x4087ef
  408781:	movsxd ebp,DWORD PTR [rcx]
  408783:	and    BYTE PTR [rdi+0x5f],al
  408786:	rex.WRB push r11
  408788:	push   rsi
  408789:	rex.XB pop r15
  40878b:	rex.R push rsp
  40878d:	rex.WRXB push r10
  40878f:	and    BYTE PTR [rax],ch
  408791:	pop    rdi
  408792:	data16 jne 0x408803
  408795:	movsxd ebp,DWORD PTR [rax+riz*1]
  408798:	rex.RXB pop r15
  40879a:	rex.WRB push r11
  40879c:	push   rsi
  40879d:	rex.XB pop r15
  40879f:	push   rbx
  4087a0:	pop    rcx
  4087a1:	rex.WRB
  4087a2:	rex.X
  4087a3:	rex.WRXB
  4087a4:	rex.WR pop rdi
  4087a6:	push   rax
  4087a7:	push   rdx
  4087a8:	rex.RB
  4087a9:	rex.RX
  4087aa:	rex.WB pop r8
  4087ac:	sub    DWORD PTR [rdx],ecx
  4087ae:	or     ah,BYTE PTR [rbx]
  4087b0:	fs imul bp,WORD PTR gs:[rsi+0x65],0x4720
  4087b8:	pop    rdi
  4087b9:	rex.WRB push r11
  4087bb:	push   rsi
  4087bc:	rex.XB pop r15
  4087be:	rex.XB push r12
  4087c0:	rex.WRXB push r10
  4087c2:	sub    BYTE PTR [rdi+0x66],bl
  4087c5:	jne    0x408835
  4087c7:	movsxd ebp,DWORD PTR [rdi+rbx*2]
  4087ca:	jae    0x408845
  4087cc:	ins    DWORD PTR es:[rdi],dx
  4087cd:	pop    rdi
  4087ce:	jo     0x408842
  4087d0:	imul   di,WORD PTR gs:[rax+0x29],0x5c20
  4087d7:	or     ah,BYTE PTR [rax]
  4087d9:	and    BYTE PTR [rbx+0x74],dh
  4087dc:	(bad)  
  4087dd:	je     0x408848
  4087df:	movsxd esp,DWORD PTR [rax]
  4087e1:	jbe    0x408852
  4087e3:	imul   esp,DWORD PTR [rax+riz*1+0x5f],0x636e7566
  4087eb:	sub    BYTE PTR [rsi+0x6f],dh
  4087ee:	imul   esp,DWORD PTR [rcx+rbp*1+0x3b],0x200a5c20
  4087f6:	and    BYTE PTR [rbp+0x78],ah
  4087f9:	je     0x408860
  4087fb:	jb     0x40886b
  4087fd:	and    BYTE PTR [rcx+0x6e],ch
  408800:	je     0x408822
  408802:	sub    BYTE PTR [rdx],ch
  408804:	and    BYTE PTR [rdi+0x61],bl
  408807:	jb     0x40887b
  408809:	(bad)  
  40880a:	jns    0x40882c
  40880c:	and    esp,DWORD PTR [rbx]
  40880e:	and    BYTE PTR [rdi+0x66],bl
  408811:	jne    0x408881
  408813:	movsxd ebp,DWORD PTR [rcx]
  408815:	sub    BYTE PTR [rsi+0x6f],dh
  408818:	imul   esp,DWORD PTR [rcx+rbp*1+0x3b],0x20202020
  408820:	and    BYTE PTR [rax],ah
  408822:	and    BYTE PTR [rax],ah
  408824:	and    BYTE PTR [rax],ah
  408826:	and    BYTE PTR [rax],ah
  408828:	and    BYTE PTR [rax],ah
  40882a:	pop    rsp
  40882b:	or     ah,BYTE PTR [rax]
  40882d:	and    BYTE PTR [rcx+0x6e],ch
  408830:	je     0x408852
  408832:	pop    rdi
  408833:	data16 jne 0x4088a4
  408836:	movsxd esp,DWORD PTR [rax]
  408838:	and    esp,DWORD PTR [rbx]
  40883a:	and    BYTE PTR [rdi+0x77],bl
  40883d:	jb     0x4088a0
  40883f:	jo     0x4088b1
  408841:	gs jb  0x40886c
  408844:	jbe    0x4088b5
  408846:	imul   esp,DWORD PTR [rcx+rbp*1+0x20],0x665f207b
  40884e:	jne    0x4088be
  408850:	movsxd ebp,DWORD PTR [rax]
  408852:	sub    DWORD PTR [rbx],edi
  408854:	and    BYTE PTR [rdi+0x5f],ah
  408857:	jae    0x4088c5
  408859:	imul   esi,DWORD PTR [rbx+0x74],0x6e69665f
  408860:	and    BYTE PTR fs:[rax],ch
  408863:	rex.WRX push rbp
  408865:	rex.WR
  408866:	rex.WR sub al,0x20
  408869:	and    BYTE PTR [rdi+0x61],bl
  40886c:	jb     0x4088e0
  40886e:	(bad)  
  40886f:	jns    0x408891
  408871:	and    esp,DWORD PTR [rbx]
  408873:	and    BYTE PTR [rdi+0x66],bl
  408876:	jne    0x4088e6
  408878:	movsxd ebp,DWORD PTR [rcx]
  40887a:	cmp    esp,DWORD PTR [rax]
  40887c:	jb     0x4088e3
  40887e:	je     0x4088f5
  408880:	jb     0x4088f0
  408882:	and    BYTE PTR [rax],dh
  408884:	cmp    esp,DWORD PTR [rax]
  408886:	jge    0x4088a8
  408888:	pop    rsp
  408889:	or     ah,BYTE PTR [rax]
  40888b:	and    BYTE PTR [rdi+0x5f],bl
  40888e:	jo     0x408902
  408890:	(bad)  
  408891:	ins    DWORD PTR es:[edi],dx
  408893:	(bad)  
  408894:	sub    BYTE PTR [rbx+0x6f],ah
  408897:	ins    DWORD PTR es:[rdi],dx
  408898:	ins    DWORD PTR es:[rdi],dx
  408899:	outs   dx,BYTE PTR gs:[rsi]
  40889b:	je     0x4088c5
  40889d:	ins    BYTE PTR es:[rdi],dx
  40889e:	imul   ebp,DWORD PTR [rsi+0x6b],0x222c7265
  4088a5:	(bad)  
  4088a6:	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  4088ad:	cmp    ah,BYTE PTR [rdx]
  4088af:	and    BYTE PTR [rdi+0x73],bl
  4088b2:	jns    0x408921
  4088b4:	pop    rdi
  4088b5:	jo     0x408929
  4088b7:	imul   di,WORD PTR gs:[rax+0x20],0x2023
  4088be:	pop    rdi
  4088bf:	data16 jne 0x408930
  4088c2:	movsxd esp,DWORD PTR [rax]
  4088c4:	and    bl,BYTE PTR [rdi+0x77]
  4088c7:	jb     0x40892a
  4088c9:	jo     0x40893b
  4088cb:	gs jb  0x4088f0
  4088ce:	sub    DWORD PTR [rcx],ebp
  4088d0:	and    BYTE PTR [rdx+rcx*1+0x20],bl
  4088d4:	and    BYTE PTR [rdi+0x5f],bl
  4088d7:	jo     0x40894b
  4088d9:	(bad)  
  4088da:	ins    DWORD PTR es:[edi],dx
  4088dc:	(bad)  
  4088dd:	sub    BYTE PTR [rbx+0x65],dh
  4088e0:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  4088e4:	outs   dx,BYTE PTR ds:[rsi]
  4088e5:	sub    BYTE PTR [rdx],ah
  4088e7:	cs rex.XB push r10
  4088ea:	push   rsp
  4088eb:	and    al,0x58
  4088ed:	rex.XB push r13
  4088ef:	and    ch,BYTE PTR [rdx+rsi*2]
  4088f2:	gs (bad) 
  4088f4:	sub    DWORD PTR fs:[rcx],ebp
  4088f7:	and    BYTE PTR [rdx+rcx*1+0x20],bl
  4088fb:	and    BYTE PTR [rdi+0x5f],bl
  4088fe:	fs movsxd ebp,DWORD PTR gs:[rbx+rsi*2+0x70]
  408904:	movsxd ebp,DWORD PTR gs:[rax]
  408907:	(bad)  
  408908:	ins    BYTE PTR es:[rdi],dx
  408909:	ins    BYTE PTR es:[rdi],dx
  40890a:	outs   dx,DWORD PTR ds:[rsi]
  40890b:	movsxd esp,DWORD PTR [rcx+0x74]
  40890e:	sub    BYTE PTR gs:[rdx],ah
  408911:	cs rex.XB push r10
  408914:	push   rsp
  408915:	and    al,0x58
  408917:	rex.XB push r13
  408919:	and    ch,BYTE PTR [rcx]
  40891b:	sub    DWORD PTR [rax],esp
  40891d:	imul   ebp,DWORD PTR [rsi+0x74],0x202a2820
  408924:	pop    rdi
  408925:	(bad)  
  408926:	jb     0x40899a
  408928:	(bad)  
  408929:	jns    0x40894b
  40892b:	and    esp,DWORD PTR [rbx]
  40892d:	and    BYTE PTR [rdi+0x66],bl
  408930:	jne    0x4089a0
  408932:	movsxd ebp,DWORD PTR [rcx]
  408934:	sub    BYTE PTR [rsi+0x6f],dh
  408937:	imul   esp,DWORD PTR [rcx+rbp*1+0x20],0x665f203d
  40893f:	jne    0x4089af
  408941:	movsxd esp,DWORD PTR [rax]
  408943:	and    esp,DWORD PTR [rbx]
  408945:	and    BYTE PTR [rdi+0x77],bl
  408948:	jb     0x4089ab
  40894a:	jo     0x4089bc
  40894c:	gs jb  0x40898a
  40894f:	or     cl,BYTE PTR [rdx]
  408951:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  408955:	imul   ebp,DWORD PTR [rsi+0x65],0x4d5f4720
  40895c:	push   rbx
  40895d:	push   rsi
  40895e:	rex.XB pop r15
  408960:	rex.R push rsp
  408962:	rex.WRXB push r10
  408964:	sub    BYTE PTR [rdi+0x66],bl
  408967:	jne    0x4089d7
  408969:	movsxd ebp,DWORD PTR [rdi+rbx*2]
  40896c:	jae    0x4089e7
  40896e:	ins    DWORD PTR es:[rdi],dx
  40896f:	pop    rdi
  408970:	jo     0x4089e4
  408972:	imul   di,WORD PTR gs:[rax+0x29],0x5c20
  408979:	or     ah,BYTE PTR [rax]
  40897b:	and    BYTE PTR [rbx+0x74],dh
  40897e:	(bad)  
  40897f:	je     0x4089ea
  408981:	movsxd esp,DWORD PTR [rax]
  408983:	jbe    0x4089f4
  408985:	imul   esp,DWORD PTR [rax+riz*1+0x5f],0x636e7566
  40898d:	sub    BYTE PTR [rsi+0x6f],dh
  408990:	imul   esp,DWORD PTR [rcx+rbp*1+0x3b],0x200a5c20
  408998:	and    BYTE PTR [rbp+0x78],ah
  40899b:	je     0x408a02
  40899d:	jb     0x408a0d
  40899f:	and    BYTE PTR [rcx+0x6e],ch
  4089a2:	je     0x4089c4
  4089a4:	sub    BYTE PTR [rdx],ch
  4089a6:	and    BYTE PTR [rdi+0x61],bl
  4089a9:	jb     0x408a1d
  4089ab:	(bad)  
  4089ac:	jns    0x4089ce
  4089ae:	and    esp,DWORD PTR [rbx]
  4089b0:	and    BYTE PTR [rdi+0x66],bl
  4089b3:	jne    0x408a23
  4089b5:	movsxd ebp,DWORD PTR [rcx]
  4089b7:	sub    BYTE PTR [rsi+0x6f],dh
  4089ba:	imul   esp,DWORD PTR [rcx+rbp*1+0x3b],0x20202020
  4089c2:	and    BYTE PTR [rax],ah
  4089c4:	and    BYTE PTR [rax],ah
  4089c6:	and    BYTE PTR [rax],ah
  4089c8:	and    BYTE PTR [rax],ah
  4089ca:	and    BYTE PTR [rax],ah
  4089cc:	pop    rsp
  4089cd:	or     ah,BYTE PTR [rax]
  4089cf:	and    BYTE PTR [rcx+0x6e],ch
  4089d2:	je     0x4089f4
  4089d4:	pop    rdi
  4089d5:	data16 jne 0x408a46
  4089d8:	movsxd esp,DWORD PTR [rax]
  4089da:	and    esp,DWORD PTR [rbx]
  4089dc:	and    BYTE PTR [rdi+0x63],bl
  4089df:	outs   dx,DWORD PTR ds:[rsi]
  4089e0:	outs   dx,BYTE PTR ds:[rsi]
  4089e1:	jae    0x408a57
  4089e3:	jb     0x408a5a
  4089e5:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
  4089e9:	sub    BYTE PTR [rsi+0x6f],dh
  4089ec:	imul   esp,DWORD PTR [rcx+rbp*1+0x20],0x7461207b
  4089f4:	gs js  0x408a60
  4089f7:	je     0x408a19
  4089f9:	sub    BYTE PTR [rdi+0x66],bl
  4089fc:	jne    0x408a6c
  4089fe:	movsxd ebp,DWORD PTR [rcx]
  408a00:	cmp    esp,DWORD PTR [rax]
  408a02:	addr32 pop rdi
  408a04:	jae    0x408a72
  408a06:	imul   esi,DWORD PTR [rbx+0x74],0x6e69665f
  408a0d:	and    BYTE PTR fs:[rax],ch
  408a10:	rex.WRX push rbp
  408a12:	rex.WR
  408a13:	rex.WR sub al,0x20
  408a16:	and    BYTE PTR [rdi+0x61],bl
  408a19:	jb     0x408a8d
  408a1b:	(bad)  
  408a1c:	jns    0x408a3e
  408a1e:	and    esp,DWORD PTR [rbx]
  408a20:	and    BYTE PTR [rdi+0x66],bl
  408a23:	jne    0x408a93
  408a25:	movsxd ebp,DWORD PTR [rcx]
  408a27:	cmp    esp,DWORD PTR [rax]
  408a29:	jb     0x408a90
  408a2b:	je     0x408aa2
  408a2d:	jb     0x408a9d
  408a2f:	and    BYTE PTR [rax],dh
  408a31:	cmp    esp,DWORD PTR [rax]
  408a33:	jge    0x408a55
  408a35:	pop    rsp
  408a36:	or     ah,BYTE PTR [rax]
  408a38:	and    BYTE PTR [rax],ah
  408a3a:	pop    rdi
  408a3b:	pop    rdi
  408a3c:	jo     0x408ab0
  408a3e:	(bad)  
  408a3f:	ins    DWORD PTR es:[edi],dx
  408a41:	(bad)  
  408a42:	sub    BYTE PTR [rbx+0x6f],ah
  408a45:	ins    DWORD PTR es:[rdi],dx
  408a46:	ins    DWORD PTR es:[rdi],dx
  408a47:	outs   dx,BYTE PTR gs:[rsi]
  408a49:	je     0x408a73
  408a4b:	ins    BYTE PTR es:[rdi],dx
  408a4c:	imul   ebp,DWORD PTR [rsi+0x6b],0x222c7265
  408a53:	(bad)  
  408a54:	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  408a5b:	cmp    ah,BYTE PTR [rdx]
  408a5d:	and    BYTE PTR [rdi+0x73],bl
  408a60:	jns    0x408acf
  408a62:	pop    rdi
  408a63:	jo     0x408ad7
  408a65:	imul   di,WORD PTR gs:[rax+0x20],0x2023
  408a6c:	pop    rdi
  408a6d:	data16 jne 0x408ade
  408a70:	movsxd esp,DWORD PTR [rax]
  408a72:	and    bl,BYTE PTR [rdi+0x63]
  408a75:	outs   dx,DWORD PTR ds:[rsi]
  408a76:	outs   dx,BYTE PTR ds:[rsi]
  408a77:	jae    0x408aed
  408a79:	jb     0x408af0
  408a7b:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
  408a7f:	and    ch,BYTE PTR [rcx]
  408a81:	sub    DWORD PTR [rax],esp
  408a83:	pop    rsp
  408a84:	or     ah,BYTE PTR [rax]
  408a86:	and    BYTE PTR [rdi+0x5f],bl
  408a89:	jo     0x408afd
  408a8b:	(bad)  
  408a8c:	ins    DWORD PTR es:[edi],dx
  408a8e:	(bad)  
  408a8f:	sub    BYTE PTR [rbx+0x65],dh
  408a92:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  408a96:	outs   dx,BYTE PTR ds:[rsi]
  408a97:	sub    BYTE PTR [rdx],ah
  408a99:	cs rex.XB push r10
  408a9c:	push   rsp
  408a9d:	and    al,0x58
  408a9f:	rex.XB push r13
  408aa1:	and    ch,BYTE PTR [rdx+rsi*2]
  408aa4:	gs (bad) 
  408aa6:	sub    DWORD PTR fs:[rcx],ebp
  408aa9:	and    BYTE PTR [rdx+rcx*1+0x20],bl
  408aad:	and    BYTE PTR [rdi+0x5f],bl
  408ab0:	fs movsxd ebp,DWORD PTR gs:[rbx+rsi*2+0x70]
  408ab6:	movsxd ebp,DWORD PTR gs:[rax]
  408ab9:	(bad)  
  408aba:	ins    BYTE PTR es:[rdi],dx
  408abb:	ins    BYTE PTR es:[rdi],dx
  408abc:	outs   dx,DWORD PTR ds:[rsi]
  408abd:	movsxd esp,DWORD PTR [rcx+0x74]
  408ac0:	sub    BYTE PTR gs:[rdx],ah
  408ac3:	cs rex.XB push r10
  408ac6:	push   rsp
  408ac7:	and    al,0x58
  408ac9:	rex.XB push r13
  408acb:	and    ch,BYTE PTR [rcx]
  408acd:	sub    DWORD PTR [rax],esp
  408acf:	imul   ebp,DWORD PTR [rsi+0x74],0x202a2820
  408ad6:	pop    rdi
  408ad7:	(bad)  
  408ad8:	jb     0x408b4c
  408ada:	(bad)  
  408adb:	jns    0x408afd
  408add:	and    esp,DWORD PTR [rbx]
  408adf:	and    BYTE PTR [rdi+0x66],bl
  408ae2:	jne    0x408b52
  408ae4:	movsxd ebp,DWORD PTR [rcx]
  408ae6:	sub    BYTE PTR [rsi+0x6f],dh
  408ae9:	imul   esp,DWORD PTR [rcx+rbp*1+0x20],0x665f203d
  408af1:	jne    0x408b61
  408af3:	movsxd esp,DWORD PTR [rax]
  408af5:	and    esp,DWORD PTR [rbx]
  408af7:	and    BYTE PTR [rdi+0x63],bl
  408afa:	outs   dx,DWORD PTR ds:[rsi]
  408afb:	outs   dx,BYTE PTR ds:[rsi]
  408afc:	jae    0x408b72
  408afe:	jb     0x408b75
  408b00:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
  408b04:	cmp    ecx,DWORD PTR [rdx]
  408b06:	or     ah,BYTE PTR [rbx]
  408b08:	gs ins BYTE PTR es:[rdi],dx
  408b0a:	imul   esp,DWORD PTR [rsi+0x20],0x69666564
  408b11:	outs   dx,BYTE PTR ds:[rsi]
  408b12:	gs and BYTE PTR fs:[rax],ch
  408b16:	pop    rdi
  408b17:	rex.WRB push r11
  408b19:	rex.XB pop r15
  408b1b:	push   rsi
  408b1c:	rex.RB push r10
  408b1e:	sub    DWORD PTR [rdx],ecx
  408b20:	or     ah,BYTE PTR [rbx]
  408b22:	fs imul bp,WORD PTR gs:[rsi+0x65],0x4720
  408b2a:	pop    rdi
  408b2b:	rex.W
  408b2c:	push   r11
  408b2e:	pop    rdi
  408b2f:	rex.XB
  408b30:	rex.WRXB
  408b31:	rex.WRX push rbx
  408b33:	push   rsp
  408b34:	push   rdx
  408b35:	push   rbp
  408b36:	rex.XB push r12
  408b38:	rex.WRXB push r10
  408b3a:	push   rbx
  408b3b:	and    BYTE PTR [rcx],dh
  408b3d:	or     cl,BYTE PTR [rdx]
  408b3f:	(bad)  
  408b40:	sub    ah,BYTE PTR [rax]
  408b42:	push   rax
  408b43:	jb     0x408baa
  408b45:	and    BYTE PTR [rsi+0x69],dl
  408b48:	jae    0x408bbf
  408b4a:	(bad)  
  408b4b:	ins    BYTE PTR es:[rdi],dx
  408b4c:	and    BYTE PTR [rbx+0x74],dh
  408b4f:	jne    0x408bb5
  408b51:	imul   ebp,DWORD PTR [rdi+0x20],0x38303032
  408b58:	and    BYTE PTR [rbp+0x75],ch
  408b5b:	jae    0x408bd1
  408b5d:	and    BYTE PTR [rbp+0x73],dh
  408b60:	and    BYTE PTR gs:[rbx],ah
  408b63:	jo     0x408bd7
  408b65:	(bad)  
  408b66:	ins    DWORD PTR es:[edi],dx
  408b68:	(bad)  
  408b69:	and    BYTE PTR [rbx+0x65],dh
  408b6c:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  408b70:	outs   dx,BYTE PTR ds:[rsi]
  408b71:	and    BYTE PTR [rdx],ch
  408b73:	(bad)  
  408b74:	or     ah,BYTE PTR [rbx]
  408b76:	fs imul bp,WORD PTR gs:[rsi+0x65],0x4720
  408b7e:	pop    rdi
  408b7f:	rex.R
  408b80:	rex.RB
  408b81:	rex.RX
  408b82:	rex.WB
  408b83:	rex.WRX
  408b84:	rex.RB pop r15
  408b86:	rex.XB
  408b87:	rex.WRXB
  408b88:	rex.WRX push rbx
  408b8a:	push   rsp
  408b8b:	push   rdx
  408b8c:	push   rbp
  408b8d:	rex.XB push r12
  408b8f:	rex.WRXB push r10
  408b91:	pop    rdi
  408b92:	rex.WRX
  408b93:	rex.RB
  408b94:	rex.RB
  408b95:	rex.R push rbx
  408b97:	pop    rdi
  408b98:	push   rax
  408b99:	push   rdx
  408b9a:	rex.B
  408b9b:	rex.RXB
  408b9c:	rex.WRB
  408b9d:	and    BYTE PTR [r9],sil
  408ba0:	or     ah,BYTE PTR [rbx]
  408ba2:	fs imul bp,WORD PTR gs:[rsi+0x65],0x4720
  408baa:	pop    rdi
  408bab:	rex.R
  408bac:	rex.RB
  408bad:	rex.RX
  408bae:	rex.WB
  408baf:	rex.WRX
  408bb0:	rex.RB pop r15
  408bb2:	rex.R
  408bb3:	rex.RB push r11
  408bb5:	push   rsp
  408bb6:	push   rdx
  408bb7:	push   rbp
  408bb8:	rex.XB push r12
  408bba:	rex.WRXB push r10
  408bbc:	pop    rdi
  408bbd:	rex.WRX
  408bbe:	rex.RB
  408bbf:	rex.RB
  408bc0:	rex.R push rbx
  408bc2:	pop    rdi
  408bc3:	push   rax
  408bc4:	push   rdx
  408bc5:	rex.B
  408bc6:	rex.RXB
  408bc7:	rex.WRB
  408bc8:	and    BYTE PTR [r9],sil
  408bcb:	or     cl,BYTE PTR [rdx]
  408bcd:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  408bd1:	imul   ebp,DWORD PTR [rsi+0x65],0x445f4720
  408bd8:	rex.RB
  408bd9:	rex.RX
  408bda:	rex.WB
  408bdb:	rex.WRX
  408bdc:	rex.RB pop r15
  408bde:	rex.XB
  408bdf:	rex.WRXB
  408be0:	rex.WRX push rbx
  408be2:	push   rsp
  408be3:	push   rdx
  408be4:	push   rbp
  408be5:	rex.XB push r12
  408be7:	rex.WRXB push r10
  408be9:	pop    rdi
  408bea:	push   rax
  408beb:	push   rdx
  408bec:	rex.B
  408bed:	rex.RXB
  408bee:	rex.WRB
  408bef:	pop    r15
  408bf1:	push   r10
  408bf3:	rex.RXB push r11
  408bf5:	sub    BYTE PTR [rdi+0x66],bl
  408bf8:	jne    0x408c68
  408bfa:	movsxd ebp,DWORD PTR [rcx]
  408bfc:	and    BYTE PTR [rdx+rcx*1+0x20],bl
  408c00:	and    BYTE PTR [rbx+0x65],dh
  408c03:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  408c07:	outs   dx,BYTE PTR ds:[rsi]
  408c08:	sub    BYTE PTR [rdx],ah
  408c0a:	cs rex.XB push r10
  408c0d:	push   rsp
  408c0e:	and    al,0x58
  408c10:	rex.XB push r13
  408c12:	and    ch,BYTE PTR [rdx+rsi*2]
  408c15:	gs (bad) 
  408c17:	sub    DWORD PTR fs:[rdx],ecx
  408c1a:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  408c1e:	imul   ebp,DWORD PTR [rsi+0x65],0x445f4720
  408c25:	rex.RB
  408c26:	rex.RX
  408c27:	rex.WB
  408c28:	rex.WRX
  408c29:	rex.RB pop r15
  408c2b:	rex.XB
  408c2c:	rex.WRXB
  408c2d:	rex.WRX push rbx
  408c2f:	push   rsp
  408c30:	push   rdx
  408c31:	push   rbp
  408c32:	rex.XB push r12
  408c34:	rex.WRXB push r10
  408c36:	sub    BYTE PTR [rdi+0x66],bl
  408c39:	jne    0x408ca9
  408c3b:	movsxd ebp,DWORD PTR [rcx]
  408c3d:	and    BYTE PTR [rdx+rcx*1+0x20],bl
  408c41:	and    BYTE PTR [rbx+0x74],dh
  408c44:	(bad)  
  408c45:	je     0x408cb0
  408c47:	movsxd esp,DWORD PTR [rax]
  408c49:	jbe    0x408cba
  408c4b:	imul   esp,DWORD PTR [rax+riz*1+0x5f],0x636e7566
  408c53:	sub    BYTE PTR [rsi+0x6f],dh
  408c56:	imul   esp,DWORD PTR [rcx+rbp*1+0x3b],0x200a5c20
  408c5e:	and    BYTE PTR [rbx+0x74],dh
  408c61:	(bad)  
  408c62:	je     0x408ccd
  408c64:	movsxd esp,DWORD PTR [rax]
  408c66:	imul   ebp,DWORD PTR [rsi+0x74],0x75665f20
  408c6d:	outs   dx,BYTE PTR ds:[rsi]
  408c6e:	movsxd esp,DWORD PTR [rax]
  408c70:	and    esp,DWORD PTR [rbx]
  408c72:	and    BYTE PTR [rdi+0x77],bl
  408c75:	jb     0x408cd8
  408c77:	jo     0x408ce9
  408c79:	gs jb  0x408ca4
  408c7c:	jbe    0x408ced
  408c7e:	imul   esp,DWORD PTR [rcx+rbp*1+0x20],0x665f207b
  408c86:	jne    0x408cf6
  408c88:	movsxd ebp,DWORD PTR [rax]
  408c8a:	sub    DWORD PTR [rbx],edi
  408c8c:	and    BYTE PTR [rdx+0x65],dh
  408c8f:	je     0x408d06
  408c91:	jb     0x408d01
  408c93:	and    BYTE PTR [rax],dh
  408c95:	cmp    esp,DWORD PTR [rax]
  408c97:	jge    0x408cb9
  408c99:	pop    rsp
  408c9a:	or     ah,BYTE PTR [rax]
  408c9c:	and    BYTE PTR [rdi+0x5f],bl
  408c9f:	fs movsxd ebp,DWORD PTR gs:[rbx+rsi*2+0x70]
  408ca5:	movsxd ebp,DWORD PTR gs:[rax]
  408ca8:	(bad)  
  408ca9:	ins    BYTE PTR es:[rdi],dx
  408caa:	ins    BYTE PTR es:[rdi],dx
  408cab:	outs   dx,DWORD PTR ds:[rsi]
  408cac:	movsxd esp,DWORD PTR [rcx+0x74]
  408caf:	sub    BYTE PTR gs:[rdx],ah
  408cb2:	cs rex.XB push r10
  408cb5:	push   rsp
  408cb6:	and    al,0x58
  408cb8:	rex.XB push r13
  408cba:	and    ch,BYTE PTR [rcx]
  408cbc:	sub    DWORD PTR [rax],esp
  408cbe:	jae    0x408d34
  408cc0:	(bad)  
  408cc1:	je     0x408d2c
  408cc3:	movsxd esp,DWORD PTR [rax]
  408cc5:	imul   ebp,DWORD PTR [rsi+0x74],0x702a2820
  408ccc:	sub    DWORD PTR [rax],ebp
  408cce:	jbe    0x408d3f
  408cd0:	imul   esp,DWORD PTR [rcx+rbp*1+0x20],0x665f203d
  408cd8:	jne    0x408d48
  408cda:	movsxd esp,DWORD PTR [rax]
  408cdc:	and    esp,DWORD PTR [rbx]
  408cde:	and    BYTE PTR [rdi+0x77],bl
  408ce1:	jb     0x408d44
  408ce3:	jo     0x408d55
  408ce5:	gs jb  0x408d23
  408ce8:	or     cl,BYTE PTR [rdx]
  408cea:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  408cee:	imul   ebp,DWORD PTR [rsi+0x65],0x445f4720
  408cf5:	rex.RB
  408cf6:	rex.RX
  408cf7:	rex.WB
  408cf8:	rex.WRX
  408cf9:	rex.RB pop r15
  408cfb:	rex.R
  408cfc:	rex.RB push r11
  408cfe:	push   rsp
  408cff:	push   rdx
  408d00:	push   rbp
  408d01:	rex.XB push r12
  408d03:	rex.WRXB push r10
  408d05:	pop    rdi
  408d06:	push   rax
  408d07:	push   rdx
  408d08:	rex.B
  408d09:	rex.RXB
  408d0a:	rex.WRB
  408d0b:	pop    r15
  408d0d:	push   r10
  408d0f:	rex.RXB push r11
  408d11:	sub    BYTE PTR [rdi+0x66],bl
  408d14:	jne    0x408d84
  408d16:	movsxd ebp,DWORD PTR [rcx]
  408d18:	and    BYTE PTR [rdx+rcx*1+0x20],bl
  408d1c:	and    BYTE PTR [rbx+0x65],dh
  408d1f:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  408d23:	outs   dx,BYTE PTR ds:[rsi]
  408d24:	sub    BYTE PTR [rdx],ah
  408d26:	cs rex.XB push r10
  408d29:	push   rsp
  408d2a:	and    al,0x58
  408d2c:	rex.XB push r13
  408d2e:	and    ch,BYTE PTR [rdx+rsi*2]
  408d31:	gs (bad) 
  408d33:	sub    DWORD PTR fs:[rdx],ecx
  408d36:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  408d3a:	imul   ebp,DWORD PTR [rsi+0x65],0x445f4720
  408d41:	rex.RB
  408d42:	rex.RX
  408d43:	rex.WB
  408d44:	rex.WRX
  408d45:	rex.RB pop r15
  408d47:	rex.R
  408d48:	rex.RB push r11
  408d4a:	push   rsp
  408d4b:	push   rdx
  408d4c:	push   rbp
  408d4d:	rex.XB push r12
  408d4f:	rex.WRXB push r10
  408d51:	sub    BYTE PTR [rdi+0x66],bl
  408d54:	jne    0x408dc4
  408d56:	movsxd ebp,DWORD PTR [rcx]
  408d58:	and    BYTE PTR [rdx+rcx*1+0x20],bl
  408d5c:	and    BYTE PTR [rbx+0x74],dh
  408d5f:	(bad)  
  408d60:	je     0x408dcb
  408d62:	movsxd esp,DWORD PTR [rax]
  408d64:	jbe    0x408dd5
  408d66:	imul   esp,DWORD PTR [rax+riz*1+0x5f],0x636e7566
  408d6e:	sub    BYTE PTR [rsi+0x6f],dh
  408d71:	imul   esp,DWORD PTR [rcx+rbp*1+0x3b],0x200a5c20
  408d79:	and    BYTE PTR [rbx+0x74],dh
  408d7c:	(bad)  
  408d7d:	je     0x408de8
  408d7f:	movsxd esp,DWORD PTR [rax]
  408d81:	imul   ebp,DWORD PTR [rsi+0x74],0x75665f20
  408d88:	outs   dx,BYTE PTR ds:[rsi]
  408d89:	movsxd esp,DWORD PTR [rax]
  408d8b:	and    esp,DWORD PTR [rbx]
  408d8d:	and    BYTE PTR [rdi+0x63],bl
  408d90:	outs   dx,DWORD PTR ds:[rsi]
  408d91:	outs   dx,BYTE PTR ds:[rsi]
  408d92:	jae    0x408e08
  408d94:	jb     0x408e0b
  408d96:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
  408d9a:	sub    BYTE PTR [rsi+0x6f],dh
  408d9d:	imul   esp,DWORD PTR [rcx+rbp*1+0x20],0x7461207b
  408da5:	gs js  0x408e11
  408da8:	je     0x408dca
  408daa:	sub    BYTE PTR [rdi+0x66],bl
  408dad:	jne    0x408e1d
  408daf:	movsxd ebp,DWORD PTR [rcx]
  408db1:	cmp    esp,DWORD PTR [rax]
  408db3:	jb     0x408e1a
  408db5:	je     0x408e2c
  408db7:	jb     0x408e27
  408db9:	and    BYTE PTR [rax],dh
  408dbb:	cmp    esp,DWORD PTR [rax]
  408dbd:	jge    0x408ddf
  408dbf:	pop    rsp
  408dc0:	or     ah,BYTE PTR [rax]
  408dc2:	and    BYTE PTR [rdi+0x5f],bl
  408dc5:	fs movsxd ebp,DWORD PTR gs:[rbx+rsi*2+0x70]
  408dcb:	movsxd ebp,DWORD PTR gs:[rax]
  408dce:	(bad)  
  408dcf:	ins    BYTE PTR es:[rdi],dx
  408dd0:	ins    BYTE PTR es:[rdi],dx
  408dd1:	outs   dx,DWORD PTR ds:[rsi]
  408dd2:	movsxd esp,DWORD PTR [rcx+0x74]
  408dd5:	sub    BYTE PTR gs:[rdx],ah
  408dd8:	cs rex.XB push r10
  408ddb:	push   rsp
  408ddc:	and    al,0x58
  408dde:	rex.XB push r13
  408de0:	and    ch,BYTE PTR [rcx]
  408de2:	sub    DWORD PTR [rax],esp
  408de4:	jae    0x408e5a
  408de6:	(bad)  
  408de7:	je     0x408e52
  408de9:	movsxd esp,DWORD PTR [rax]
  408deb:	imul   ebp,DWORD PTR [rsi+0x74],0x202a2820
  408df2:	pop    rdi
  408df3:	(bad)  
  408df4:	jb     0x408e68
  408df6:	(bad)  
  408df7:	jns    0x408e19
  408df9:	and    esp,DWORD PTR [rbx]
  408dfb:	and    BYTE PTR [rdi+0x66],bl
  408dfe:	jne    0x408e6e
  408e00:	movsxd ebp,DWORD PTR [rcx]
  408e02:	sub    BYTE PTR [rsi+0x6f],dh
  408e05:	imul   esp,DWORD PTR [rcx+rbp*1+0x20],0x665f203d
  408e0d:	jne    0x408e7d
  408e0f:	movsxd esp,DWORD PTR [rax]
  408e11:	and    esp,DWORD PTR [rbx]
  408e13:	and    BYTE PTR [rdi+0x63],bl
  408e16:	outs   dx,DWORD PTR ds:[rsi]
  408e17:	outs   dx,BYTE PTR ds:[rsi]
  408e18:	jae    0x408e8e
  408e1a:	jb     0x408e91
  408e1c:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
  408e20:	cmp    ecx,DWORD PTR [rdx]
  408e22:	or     ah,BYTE PTR [rbx]
  408e24:	gs ins BYTE PTR es:[rdi],dx
  408e26:	imul   esp,DWORD PTR [rsi+0x20],0x69666564
  408e2d:	outs   dx,BYTE PTR ds:[rsi]
  408e2e:	gs sub BYTE PTR fs:[rdi+0x5f],bl
  408e33:	push   rbx
  408e34:	push   rbp
  408e35:	rex.WRX push rax
  408e37:	push   rdx
  408e38:	rex.WRXB pop r15
  408e3a:	rex.XB sub DWORD PTR [r10],ecx
  408e3d:	or     ch,BYTE PTR [rdi]
  408e3f:	sub    ah,BYTE PTR [rax]
  408e41:	push   rsp
  408e42:	push   0x69207369
  408e47:	jae    0x408e69
  408e49:	outs   dx,BYTE PTR ds:[rsi]
  408e4a:	outs   dx,DWORD PTR ds:[rsi]
  408e4b:	je     0x408e6d
  408e4d:	je     0x408eb4
  408e4f:	jae    0x408ec5
  408e51:	gs fs sub al,0x20
  408e55:	(bad)  
  408e56:	jne    0x408ecc
  408e58:	and    BYTE PTR [rcx+0x20],ch
  408e5b:	(bad)  
  408e5c:	gs ins BYTE PTR es:[rdi],dx
  408e5e:	imul   esp,DWORD PTR [rbp+0x76],0x74692065
  408e65:	and    BYTE PTR [rbx+0x68],dh
  408e68:	outs   dx,DWORD PTR ds:[rsi]
  408e69:	jne    0x408ed7
  408e6b:	and    BYTE PTR fs:[rdi+0x6f],dh
  408e6f:	jb     0x408edc
  408e71:	sub    al,0x20
  408e73:	(bad)  
  408e75:	jae    0x408edc
  408e77:	and    BYTE PTR fs:[rdi+0x6e],ch
  408e7b:	cmp    cl,BYTE PTR [rdx]
  408e7d:	and    BYTE PTR [rdx],ch
  408e7f:	and    BYTE PTR [rax+0x74],ch
  408e82:	je     0x408ef4
  408e84:	cmp    ch,BYTE PTR [rdi]
  408e86:	(bad)  
  408e87:	outs   dx,DWORD PTR ds:[rsi]
  408e88:	jo     0x408eef
  408e8a:	outs   dx,BYTE PTR ds:[rsi]
  408e8b:	jae    0x408efc
  408e8d:	jne    0x408f01
  408e8f:	movsxd esp,DWORD PTR [rbp+0x2e]
  408e92:	(bad)  
  408e93:	jo     0x408f05
  408e95:	ins    BYTE PTR es:[rdi],dx
  408e96:	gs movsxd ebp,DWORD PTR cs:[rdi+0x6d]
  408e9b:	(bad)  
  408e9c:	jae    0x408f0d
  408e9e:	jne    0x408f12
  408ea0:	movsxd esp,DWORD PTR [rbp+0x2f]
  408ea3:	rex.WRXB jo 0x408f0b
  408ea6:	outs   dx,BYTE PTR ds:[rsi]
  408ea7:	push   rbx
  408ea8:	push   rbx
  408ea9:	rex.WR xor BYTE PTR [rcx],r15b
  408eac:	cmp    BYTE PTR [rdi],ch
  408eae:	rex.WRXB jo 0x408f16
  408eb1:	outs   dx,BYTE PTR ds:[rsi]
  408eb2:	push   rbx
  408eb3:	push   rbx
  408eb4:	rex.WR xor BYTE PTR [rcx],r15b
  408eb7:	cmp    BYTE PTR [rip+0x732f3533],ch        # 0x736fc3f0
  408ebd:	jb     0x408f22
  408ebf:	(bad)  
  408ec0:	imul   si,WORD PTR [rax+0x73],0x662f
  408ec6:	imul   esi,DWORD PTR [rax+0x73],0x6572705f
  408ecd:	ins    DWORD PTR es:[rdi],dx
  408ece:	(bad)  
  408ecf:	imul   ebp,DWORD PTR [rsi+0x2e],0x2a200a63
  408ed6:	(bad)  
  408ed7:	or     cl,BYTE PTR [rdx]
  408ed9:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  408edd:	imul   ebp,DWORD PTR [rsi+0x65],0x485f4720
  408ee4:	push   r11
  408ee6:	pop    rdi
  408ee7:	rex.XB
  408ee8:	rex.WRXB
  408ee9:	rex.WRX push rbx
  408eeb:	push   rsp
  408eec:	push   rdx
  408eed:	push   rbp
  408eee:	rex.XB push r12
  408ef0:	rex.WRXB push r10
  408ef2:	push   rbx
  408ef3:	and    BYTE PTR [rcx],dh
  408ef5:	or     cl,BYTE PTR [rdx]
  408ef7:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  408efb:	imul   ebp,DWORD PTR [rsi+0x65],0x445f4720
  408f02:	rex.RB
  408f03:	rex.RX
  408f04:	rex.WB
  408f05:	rex.WRX
  408f06:	rex.RB pop r15
  408f08:	rex.XB
  408f09:	rex.WRXB
  408f0a:	rex.WRX push rbx
  408f0c:	push   rsp
  408f0d:	push   rdx
  408f0e:	push   rbp
  408f0f:	rex.XB push r12
  408f11:	rex.WRXB push r10
  408f13:	pop    rdi
  408f14:	rex.WRX
  408f15:	rex.RB
  408f16:	rex.RB
  408f17:	rex.R push rbx
  408f19:	pop    rdi
  408f1a:	push   rax
  408f1b:	push   rdx
  408f1c:	rex.B
  408f1d:	rex.RXB
  408f1e:	rex.WRB
  408f1f:	and    BYTE PTR [r9],sil
  408f22:	or     ah,BYTE PTR [rbx]
  408f24:	fs imul bp,WORD PTR gs:[rsi+0x65],0x4720
  408f2c:	pop    rdi
  408f2d:	rex.R
  408f2e:	rex.RB
  408f2f:	rex.RX
  408f30:	rex.WB
  408f31:	rex.WRX
  408f32:	rex.RB pop r15
  408f34:	rex.R
  408f35:	rex.RB push r11
  408f37:	push   rsp
  408f38:	push   rdx
  408f39:	push   rbp
  408f3a:	rex.XB push r12
  408f3c:	rex.WRXB push r10
  408f3e:	pop    rdi
  408f3f:	rex.WRX
  408f40:	rex.RB
  408f41:	rex.RB
  408f42:	rex.R push rbx
  408f44:	pop    rdi
  408f45:	push   rax
  408f46:	push   rdx
  408f47:	rex.B
  408f48:	rex.RXB
  408f49:	rex.WRB
  408f4a:	and    BYTE PTR [r9],sil
  408f4d:	or     cl,BYTE PTR [rdx]
  408f4f:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  408f53:	imul   ebp,DWORD PTR [rsi+0x65],0x445f4720
  408f5a:	rex.RB
  408f5b:	rex.RX
  408f5c:	rex.WB
  408f5d:	rex.WRX
  408f5e:	rex.RB pop r15
  408f60:	rex.XB
  408f61:	rex.WRXB
  408f62:	rex.WRX push rbx
  408f64:	push   rsp
  408f65:	push   rdx
  408f66:	push   rbp
  408f67:	rex.XB push r12
  408f69:	rex.WRXB push r10
  408f6b:	pop    rdi
  408f6c:	push   rax
  408f6d:	push   rdx
  408f6e:	rex.B
  408f6f:	rex.RXB
  408f70:	rex.WRB
  408f71:	pop    r15
  408f73:	push   r10
  408f75:	rex.RXB push r11
  408f77:	sub    BYTE PTR [rdi+0x66],bl
  408f7a:	jne    0x408fea
  408f7c:	movsxd ebp,DWORD PTR [rcx]
  408f7e:	and    BYTE PTR [rdx+rcx*1+0x20],bl
  408f82:	and    BYTE PTR [rcx+0x6e],ch
  408f85:	imul   esi,DWORD PTR [rax+rbp*1+0x5f],0x636e7566
  408f8d:	sub    DWORD PTR [rdx],ecx
  408f8f:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  408f93:	imul   ebp,DWORD PTR [rsi+0x65],0x445f4720
  408f9a:	rex.RB
  408f9b:	rex.RX
  408f9c:	rex.WB
  408f9d:	rex.WRX
  408f9e:	rex.RB pop r15
  408fa0:	rex.XB
  408fa1:	rex.WRXB
  408fa2:	rex.WRX push rbx
  408fa4:	push   rsp
  408fa5:	push   rdx
  408fa6:	push   rbp
  408fa7:	rex.XB push r12
  408fa9:	rex.WRXB push r10
  408fab:	sub    BYTE PTR [rdi+0x66],bl
  408fae:	jne    0x40901e
  408fb0:	movsxd ebp,DWORD PTR [rcx]
  408fb2:	and    BYTE PTR [rdx+rcx*1+0x20],bl
  408fb6:	and    BYTE PTR [rbx+0x74],dh
  408fb9:	(bad)  
  408fba:	je     0x409025
  408fbc:	movsxd esp,DWORD PTR [rax]
  408fbe:	jbe    0x40902f
  408fc0:	imul   esp,DWORD PTR [rax+riz*1+0x5f],0x636e7566
  408fc8:	sub    BYTE PTR [rsi+0x6f],dh
  408fcb:	imul   esp,DWORD PTR [rcx+rbp*1+0x3b],0x64230a0a
  408fd3:	imul   bp,WORD PTR gs:[rsi+0x65],0x4720
  408fda:	pop    rdi
  408fdb:	rex.R
  408fdc:	rex.RB
  408fdd:	rex.RX
  408fde:	rex.WB
  408fdf:	rex.WRX
  408fe0:	rex.RB pop r15
  408fe2:	rex.R
  408fe3:	rex.RB push r11
  408fe5:	push   rsp
  408fe6:	push   rdx
  408fe7:	push   rbp
  408fe8:	rex.XB push r12
  408fea:	rex.WRXB push r10
  408fec:	pop    rdi
  408fed:	push   rax
  408fee:	push   rdx
  408fef:	rex.B
  408ff0:	rex.RXB
  408ff1:	rex.WRB
  408ff2:	pop    r15
  408ff4:	push   r10
  408ff6:	rex.RXB push r11
  408ff8:	sub    BYTE PTR [rdi+0x66],bl
  408ffb:	jne    0x40906b
  408ffd:	movsxd ebp,DWORD PTR [rcx]
  408fff:	and    BYTE PTR [rdx+rcx*1+0x20],bl
  409003:	and    BYTE PTR [rsi+0x69],ah
  409006:	outs   dx,BYTE PTR ds:[rsi]
  409007:	imul   ebp,DWORD PTR [rax],0x6e75665f
  40900d:	movsxd ebp,DWORD PTR [rcx]
  40900f:	or     ah,BYTE PTR [rbx]
  409011:	fs imul bp,WORD PTR gs:[rsi+0x65],0x4720
  409019:	pop    rdi
  40901a:	rex.R
  40901b:	rex.RB
  40901c:	rex.RX
  40901d:	rex.WB
  40901e:	rex.WRX
  40901f:	rex.RB pop r15
  409021:	rex.R
  409022:	rex.RB push r11
  409024:	push   rsp
  409025:	push   rdx
  409026:	push   rbp
  409027:	rex.XB push r12
  409029:	rex.WRXB push r10
  40902b:	sub    BYTE PTR [rdi+0x66],bl
  40902e:	jne    0x40909e
  409030:	movsxd ebp,DWORD PTR [rcx]
  409032:	and    BYTE PTR [rdx+rcx*1+0x20],bl
  409036:	and    BYTE PTR [rbx+0x74],dh
  409039:	(bad)  
  40903a:	je     0x4090a5
  40903c:	movsxd esp,DWORD PTR [rax]
  40903e:	jbe    0x4090af
  409040:	imul   esp,DWORD PTR [rax+riz*1+0x5f],0x636e7566
  409048:	sub    BYTE PTR [rsi+0x6f],dh
  40904b:	imul   esp,DWORD PTR [rcx+rbp*1+0x3b],0x65230a0a
  409053:	ins    BYTE PTR es:[rdi],dx
  409054:	jae    0x4090bb
  409056:	or     cl,BYTE PTR [rdx]
  409058:	(bad)  
  409059:	sub    ah,BYTE PTR [rax]
  40905b:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40905e:	jae    0x4090d4
  409060:	jb     0x4090d7
  409062:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
  409066:	jae    0x409088
  409068:	outs   dx,BYTE PTR ds:[rsi]
  409069:	outs   dx,DWORD PTR ds:[rsi]
  40906a:	je     0x40908c
  40906c:	jae    0x4090e3
  40906e:	jo     0x4090e0
  409070:	outs   dx,DWORD PTR ds:[rsi]
  409071:	jb     0x4090e7
  409073:	gs and BYTE PTR fs:[rsi+0x6f],ah
  409078:	jb     0x40909a
  40907a:	je     0x4090e4
  40907c:	imul   esi,DWORD PTR [rbx+0x20],0x706d6f63
  409083:	imul   ebp,DWORD PTR [rbp+riz*2+0x72],0xa2f2a20
  40908b:	or     ah,BYTE PTR [rbx]
  40908d:	outs   dx,BYTE PTR gs:[rsi]
  40908f:	imul   esp,DWORD PTR fs:[rsi+0xa],0x6e65230a
  409097:	imul   esp,DWORD PTR fs:[rsi+0x20],0x5f202a2f
  40909f:	pop    rdi
  4090a0:	rex.RXB push r12
  4090a2:	rex.WXB pop r15
  4090a4:	rex.R
  4090a5:	rex.WRXB
  4090a6:	rex.XB pop r15
  4090a8:	rex.WB
  4090a9:	rex.RXB
  4090aa:	rex.WRX
  4090ab:	rex.WRXB push r10
  4090ad:	rex.RB pop r15
  4090af:	pop    rdi
  4090b0:	and    BYTE PTR [rdx],ch
  4090b2:	(bad)  
  4090b3:	or     al,BYTE PTR [rax]
	...
  4090bd:	add    BYTE PTR [rax],al
  4090bf:	add    BYTE PTR [rax+0x40c5],al
  4090c5:	add    BYTE PTR [rax],al
  4090c7:	add    BYTE PTR [rax+0x40c0],al
  4090cd:	add    BYTE PTR [rax],al
  4090cf:	add    BYTE PTR [rax],dh
  4090d1:	xor    al,BYTE PTR [rax+0x0]
	...
  4090e0:	rex.B jb 0x40914a
  4090e3:	jne    0x409152
  4090e5:	outs   dx,BYTE PTR gs:[rsi]
  4090e7:	je     0x409109
  4090e9:	outs   dx,DWORD PTR fs:[rsi]
  4090eb:	ins    DWORD PTR es:[rdi],dx
  4090ec:	(bad)  
  4090ed:	imul   ebp,DWORD PTR [rsi+0x20],0x6f727265
  4090f4:	jb     0x409116
  4090f6:	sub    BYTE PTR [rdi+rcx*2+0x4d],al
  4090fa:	rex.B
  4090fb:	rex.WB
  4090fc:	rex.WRX sub QWORD PTR [rax],r8
  4090ff:	rex.B jb 0x409169
  409102:	jne    0x409171
  409104:	outs   dx,BYTE PTR gs:[rsi]
  409106:	je     0x409128
  409108:	jae    0x409173
  40910a:	outs   dx,BYTE PTR ds:[rsi]
  40910b:	addr32 jne 0x40917a
  40910e:	(bad)  
  40910f:	jb     0x40917a
  409111:	je     0x40918c
  409113:	and    BYTE PTR [rax],ch
  409115:	push   rbx
  409116:	rex.WB
  409117:	rex.RXB
  409118:	rex.WRX sub QWORD PTR [rax],r8
  40911b:	add    BYTE PTR [rax],al
  40911d:	add    BYTE PTR [rax],al
  40911f:	add    BYTE PTR [rdi+0x76],cl
  409122:	gs jb  0x40918b
  409125:	ins    BYTE PTR es:[rdi],dx
  409126:	outs   dx,DWORD PTR ds:[rsi]
  409127:	ja     0x409149
  409129:	jb     0x40918c
  40912b:	outs   dx,BYTE PTR ds:[rsi]
  40912c:	and    BYTE PTR gs:[ebp+0x72],ah
  409131:	jb     0x4091a2
  409133:	jb     0x409155
  409135:	sub    BYTE PTR [rdi+0x56],cl
  409138:	rex.RB push r10
  40913a:	rex.RX
  40913b:	rex.WR
  40913c:	rex.WRXB push r15
  40913e:	sub    DWORD PTR [rax],eax
  409140:	push   rax
  409141:	(bad)  
  409142:	jb     0x4091b8
  409144:	imul   esp,DWORD PTR [rcx+0x6c],0x736f6c20
  40914b:	jae    0x40916d
  40914d:	outs   dx,DWORD PTR ds:[rsi]
  40914e:	data16 and BYTE PTR [rbx+0x69],dh
  409152:	outs   dx,BYTE PTR ds:[esi]
  409154:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  40915b:	and    BYTE PTR gs:[rax],ch
  40915e:	push   rax
  40915f:	rex.WR
  409160:	rex.WRXB push r11
  409162:	push   rbx
  409163:	sub    DWORD PTR [rax],eax
  409165:	add    BYTE PTR [rax],al
  409167:	add    BYTE PTR [rdi+rbp*2+0x74],dl
  40916b:	(bad)  
  40916c:	ins    BYTE PTR es:[rdi],dx
  40916d:	and    BYTE PTR [rdi+rbp*2+0x73],ch
  409171:	jae    0x409193
  409173:	outs   dx,DWORD PTR ds:[rsi]
  409174:	data16 and BYTE PTR [rbx+0x69],dh
  409178:	outs   dx,BYTE PTR ds:[esi]
  40917a:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  409181:	and    BYTE PTR gs:[rax],ch
  409184:	push   rsp
  409185:	rex.WR
  409186:	rex.WRXB push r11
  409188:	push   rbx
  409189:	sub    DWORD PTR [rax],eax
  40918b:	add    BYTE PTR [rax],al
  40918d:	add    BYTE PTR [rax],al
  40918f:	add    BYTE PTR [rax+rbp*2+0x65],dl
  409193:	and    BYTE PTR [rdx+0x65],dh
  409196:	jae    0x40920d
  409198:	ins    BYTE PTR es:[rdi],dx
  409199:	je     0x4091bb
  40919b:	imul   esi,DWORD PTR [rbx+0x20],0x206f6f74
  4091a2:	jae    0x409211
  4091a4:	(bad)  
  4091a5:	ins    BYTE PTR es:[rdi],dx
  4091a6:	ins    BYTE PTR es:[rdi],dx
  4091a7:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  4091ab:	(bad)  
  4091ac:	and    BYTE PTR gs:[rdx+0x65],dh
  4091b0:	jo     0x409224
  4091b2:	gs jae 0x40921a
  4091b5:	outs   dx,BYTE PTR ds:[rsi]
  4091b6:	je     0x40921d
  4091b8:	and    BYTE PTR fs:[rax],ch
  4091bb:	push   rbp
  4091bc:	rex.WRX
  4091bd:	rex.R
  4091be:	rex.RB push r10
  4091c0:	rex.RX
  4091c1:	rex.WR
  4091c2:	rex.WRXB push r15
  4091c4:	sub    DWORD PTR [rax],eax
  4091c6:	push   rbp
  4091c7:	outs   dx,BYTE PTR ds:[rsi]
  4091c8:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  4091cc:	outs   dx,BYTE PTR ds:[rsi]
  4091cd:	and    BYTE PTR [rbp+0x72],ah
  4091d0:	jb     0x409241
  4091d2:	jb     0x4091d4
  4091d4:	add    BYTE PTR [rax],al
  4091d6:	add    BYTE PTR [rax],al
  4091d8:	pop    rdi
  4091d9:	ins    DWORD PTR es:[rdi],dx
  4091da:	(bad)  
  4091db:	je     0x409245
  4091dd:	gs jb  0x409252
  4091e0:	sub    BYTE PTR [rcx],ch
  4091e2:	cmp    ah,BYTE PTR [rax]
  4091e4:	and    eax,0x6e692073
  4091e9:	and    BYTE PTR [rip+0x67252873],ah        # 0x6765ba62
  4091ef:	sub    al,0x20
  4091f1:	and    eax,0x20202967
  4091f6:	sub    BYTE PTR [rdx+0x65],dh
  4091f9:	je     0x409271
  4091fb:	(bad)  
  4091fc:	ins    BYTE PTR es:[rdi],dx
  4091fd:	cmp    eax,0xa296725
  409202:	add    BYTE PTR [rax],al
  409204:	cld    
  409205:	movabs eax,ds:0xa1acffffa13dffff
  40920e:	(bad)  
  40920f:	(bad)  
  409210:	mov    esp,0xccffffa1
  409215:	movabs eax,ds:0xa1ecffffa1dcffff
  40921e:	(bad)  
  40921f:	dec    DWORD PTR [rbp+0x69]
  409222:	outs   dx,BYTE PTR ds:[rsi]
  409223:	addr32 ja 0x409253
  409226:	ja     0x40925e
  409228:	xor    al,0x20
  40922a:	jb     0x4092a1
  40922c:	outs   dx,BYTE PTR ds:[rsi]
  40922d:	je     0x409298
  40922f:	ins    DWORD PTR es:[rdi],dx
  409230:	and    BYTE PTR gs:[rsi+0x61],ah
  409234:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0xa3a65
  40923c:	add    BYTE PTR [rax],al
  40923e:	add    BYTE PTR [rax],al
  409240:	rex.B
  409241:	fs fs jb 0x4092aa
  409245:	jae    0x4092ba
  409247:	and    BYTE PTR [rip+0x61682070],ah        # 0x61a8b2bd
  40924d:	jae    0x40926f
  40924f:	outs   dx,BYTE PTR ds:[rsi]
  409250:	outs   dx,DWORD PTR ds:[rsi]
  409251:	and    BYTE PTR [rcx+0x6d],ch
  409254:	(bad)  
  409255:	addr32 gs sub eax,0x74636573
  40925c:	imul   ebp,DWORD PTR [rdi+0x6e],0x56202000
  409263:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  40926a:	jne    0x4092d1
  40926c:	jb     0x4092e7
  40926e:	and    BYTE PTR [rsi+0x61],ah
  409271:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x726f6620
  409279:	and    BYTE PTR [rip+0x79622064],ah        # 0x79a2b2e3
  40927f:	je     0x4092e6
  409281:	jae    0x4092a3
  409283:	(bad)  
  409284:	je     0x4092a6
  409286:	(bad)  
  409287:	fs fs jb 0x4092f0
  40928b:	jae    0x409300
  40928d:	and    BYTE PTR [rip+0x70],ah        # 0x409303
  409293:	add    BYTE PTR [rax],al
  409295:	add    BYTE PTR [rax],al
  409297:	add    BYTE PTR [rax],ah
  409299:	and    BYTE PTR [rsi+0x69],dl
  40929c:	jb     0x409312
  40929e:	jne    0x409301
  4092a0:	ins    BYTE PTR es:[rdi],dx
  4092a1:	push   rax
  4092a2:	jb     0x409313
  4092a4:	je     0x40930b
  4092a6:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
  4092aa:	(bad)  
  4092ab:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
  4092b3:	push   0x646f6320
  4092b8:	and    BYTE PTR gs:[rax],dh
  4092bb:	js     0x4092e2
  4092bd:	js     0x4092bf
  4092bf:	add    BYTE PTR [rax],ah
  4092c1:	and    BYTE PTR [rbp+0x6e],dl
  4092c4:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  4092c8:	outs   dx,BYTE PTR ds:[rsi]
  4092c9:	and    BYTE PTR [rax+0x73],dh
  4092cc:	gs jne 0x409333
  4092cf:	outs   dx,DWORD PTR ds:[rsi]
  4092d0:	and    BYTE PTR [rdx+0x65],dh
  4092d3:	ins    BYTE PTR es:[rdi],dx
  4092d4:	outs   dx,DWORD PTR ds:[rsi]
  4092d5:	movsxd esp,DWORD PTR [rcx+0x74]
  4092d8:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727020
  4092df:	je     0x409350
  4092e1:	movsxd ebp,DWORD PTR [rdi+0x6c]
  4092e4:	and    BYTE PTR [rsi+0x65],dh
  4092e7:	jb     0x40935c
  4092e9:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  4092f0:	or     al,BYTE PTR [rax]
  4092f2:	add    BYTE PTR [rax],al
  4092f4:	add    BYTE PTR [rax],al
  4092f6:	add    BYTE PTR [rax],al
  4092f8:	and    BYTE PTR [rax],ah
  4092fa:	push   rbp
  4092fb:	outs   dx,BYTE PTR ds:[rsi]
  4092fc:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  409300:	outs   dx,BYTE PTR ds:[rsi]
  409301:	and    BYTE PTR [rax+0x73],dh
  409304:	gs jne 0x40936b
  409307:	outs   dx,DWORD PTR ds:[rsi]
  409308:	and    BYTE PTR [rdx+0x65],dh
  40930b:	ins    BYTE PTR es:[rdi],dx
  40930c:	outs   dx,DWORD PTR ds:[rsi]
  40930d:	movsxd esp,DWORD PTR [rcx+0x74]
  409310:	imul   ebp,DWORD PTR [rdi+0x6e],0x74696220
  409317:	and    BYTE PTR [rbx+0x69],dh
  40931a:	jp     0x409381
  40931c:	and    BYTE PTR [rip+0xa2e64],ah        # 0x4ac186
	...
  40932e:	add    BYTE PTR [rax],al
  409330:	cs jo  0x409397
  409333:	(bad)  
  409334:	je     0x409397
	...
  40933e:	add    BYTE PTR [rax],al
  409340:	rex (bad) 
  409342:	add    BYTE PTR [rax],al
	...
  40934d:	add    BYTE PTR [rax],al
  40934f:	add    BYTE PTR [rax+0x60],dl
  409352:	add    BYTE PTR [rax],al
	...
  40935d:	add    BYTE PTR [rax],al
  40935f:	add    BYTE PTR [rax+0x4054],dh
	...
  40936d:	add    BYTE PTR [rax],al
  40936f:	add    al,ah
  409371:	cwde   
  409372:	add    BYTE PTR [rax],al
	...
  40937d:	add    BYTE PTR [rax],al
  40937f:	add    al,ah
  409381:	cwde   
  409382:	add    BYTE PTR [rax],al
	...
  40938d:	add    BYTE PTR [rax],al
  40938f:	add    al,dl
  409391:	nop
  409392:	add    BYTE PTR [rax],al
	...
  4093a1:	add    BYTE PTR [rax+0x0],al
	...
  4093b0:	add    al,0xda
  4093b2:	add    BYTE PTR [rax],al
	...
  4093bd:	add    BYTE PTR [rax],al
  4093bf:	add    BYTE PTR [rdx+rbx*8],ch
  4093c2:	add    BYTE PTR [rax],al
	...
  4093cd:	add    BYTE PTR [rax],al
  4093cf:	add    BYTE PTR [rdx+rbx*8+0x40],cl
	...
  4093df:	add    BYTE PTR [rdx+rbx*8+0x40],ah
	...
  4093ef:	add    al,al
  4093f1:	mov    BYTE PTR [rax+0x0],0x0
	...
  4093fd:	add    BYTE PTR [rax],al
  4093ff:	add    BYTE PTR [rax],ch
  409401:	retf   0x40
	...
  409410:	and    dl,cl
  409412:	add    BYTE PTR [rax],al
	...
  40941d:	add    BYTE PTR [rax],al
  40941f:	add    BYTE PTR [rax],dl
  409421:	retf   0x40
	...
  409430:	sbb    dl,cl
  409432:	add    BYTE PTR [rax],al
	...
  409441:	lock add BYTE PTR [rax],al
	...
  40944d:	add    BYTE PTR [rax],al
  40944f:	add    BYTE PTR [rax],dl
  409451:	lock add BYTE PTR [rax],al
	...
  40945d:	add    BYTE PTR [rax],al
  40945f:	add    BYTE PTR [rax],bl
  409461:	lock add BYTE PTR [rax],al
	...
  40946d:	add    BYTE PTR [rax],al
  40946f:	add    BYTE PTR [rax],dh
  409471:	lock add BYTE PTR [rax],al
	...
  40947d:	add    BYTE PTR [rax],al
  40947f:	add    BYTE PTR [rax-0x40],ah
  409482:	add    BYTE PTR [rax],al
	...
  40948d:	add    BYTE PTR [rax],al
  40948f:	add    BYTE PTR [rax+0x40c6],dl
	...
  40949d:	add    BYTE PTR [rax],al
  40949f:	add    al,al
  4094a1:	cmp    eax,DWORD PTR [rax+0x0]
	...
  4094b0:	adc    BYTE PTR [rbx],dh
  4094b2:	add    BYTE PTR [rax],al
	...
  4094bd:	add    BYTE PTR [rax],al
  4094bf:	add    BYTE PTR [rax-0x3a],al
  4094c2:	add    BYTE PTR [rax],al
	...
  4094cd:	add    BYTE PTR [rax],al
  4094cf:	add    al,ah
  4094d1:	sub    eax,0x40
	...
  4094de:	add    BYTE PTR [rax],al
  4094e0:	movabs al,ds:0x402c
  4094e9:	add    BYTE PTR [rax],al
  4094eb:	add    BYTE PTR [rax],al
  4094ed:	add    BYTE PTR [rax],al
  4094ef:	add    BYTE PTR [rax+0x2c],ch
  4094f2:	add    BYTE PTR [rax],al
	...
  4094fd:	add    BYTE PTR [rax],al
  4094ff:	add    BYTE PTR [rax+0x2c],dl
  409502:	add    BYTE PTR [rax],al
	...
  40950d:	add    BYTE PTR [rax],al
  40950f:	add    BYTE PTR [rax-0x3a],dh
  409512:	add    BYTE PTR [rax],al
	...
  40951d:	add    BYTE PTR [rax],al
  40951f:	add    BYTE PTR [rax-0x40],dh
  409522:	add    BYTE PTR [rax],al
	...
  40952d:	add    BYTE PTR [rax],al
  40952f:	add    BYTE PTR [rax-0x3a],bl
  409532:	add    BYTE PTR [rax],al
	...
  40953d:	add    BYTE PTR [rax],al
  40953f:	add    BYTE PTR [rsi+rax*8+0x40],dl
	...
  40954f:	add    BYTE PTR [rax-0x3a],dl
  409552:	add    BYTE PTR [rax],al
	...
  40955d:	add    BYTE PTR [rax],al
  40955f:	add    BYTE PTR [rdi+0x43],al
  409562:	rex.XB cmp spl,BYTE PTR [r8]
  409565:	sub    BYTE PTR [rdi+0x4e],al
  409568:	push   rbp
  409569:	sub    DWORD PTR [rax],esp
  40956b:	xor    al,0x2e
  40956d:	cmp    DWORD PTR [rsi],ebp
  40956f:	xor    al,0x0
	...
  40957d:	add    BYTE PTR [rax],al
  40957f:	add    BYTE PTR [rdi+0x43],al
  409582:	rex.XB cmp spl,BYTE PTR [r8]
  409585:	sub    BYTE PTR [rdi+0x4e],al
  409588:	push   rbp
  409589:	sub    DWORD PTR [rax],esp
  40958b:	xor    al,0x2e
  40958d:	cmp    DWORD PTR [rsi],ebp
  40958f:	xor    al,0x0
	...
  40959d:	add    BYTE PTR [rax],al
  40959f:	add    BYTE PTR [rdi+0x43],al
  4095a2:	rex.XB cmp spl,BYTE PTR [r8]
  4095a5:	sub    BYTE PTR [rdi+0x4e],al
  4095a8:	push   rbp
  4095a9:	sub    DWORD PTR [rax],esp
  4095ab:	xor    al,0x2e
  4095ad:	cmp    DWORD PTR [rsi],ebp
  4095af:	xor    al,0x0
	...
  4095bd:	add    BYTE PTR [rax],al
  4095bf:	add    BYTE PTR [rdi+0x43],al
  4095c2:	rex.XB cmp spl,BYTE PTR [r8]
  4095c5:	sub    BYTE PTR [rdi+0x4e],al
  4095c8:	push   rbp
  4095c9:	sub    DWORD PTR [rax],esp
  4095cb:	xor    al,0x2e
  4095cd:	cmp    DWORD PTR [rsi],ebp
  4095cf:	xor    al,0x0
	...
  4095dd:	add    BYTE PTR [rax],al
  4095df:	add    BYTE PTR [rdi+0x43],al
  4095e2:	rex.XB cmp spl,BYTE PTR [r8]
  4095e5:	sub    BYTE PTR [rdi+0x4e],al
  4095e8:	push   rbp
  4095e9:	sub    DWORD PTR [rax],esp
  4095eb:	xor    al,0x2e
  4095ed:	cmp    DWORD PTR [rsi],ebp
  4095ef:	xor    al,0x0
	...
  4095fd:	add    BYTE PTR [rax],al
  4095ff:	add    BYTE PTR [rdi+0x43],al
  409602:	rex.XB cmp spl,BYTE PTR [r8]
  409605:	sub    BYTE PTR [rdi+0x4e],al
  409608:	push   rbp
  409609:	sub    DWORD PTR [rax],esp
  40960b:	xor    al,0x2e
  40960d:	cmp    DWORD PTR [rsi],ebp
  40960f:	xor    al,0x0
	...
  40961d:	add    BYTE PTR [rax],al
  40961f:	add    BYTE PTR [rdi+0x43],al
  409622:	rex.XB cmp spl,BYTE PTR [r8]
  409625:	sub    BYTE PTR [rdi+0x4e],al
  409628:	push   rbp
  409629:	sub    DWORD PTR [rax],esp
  40962b:	xor    al,0x2e
  40962d:	cmp    DWORD PTR [rsi],ebp
  40962f:	xor    al,0x0
	...
  40963d:	add    BYTE PTR [rax],al
  40963f:	add    BYTE PTR [rdi+0x43],al
  409642:	rex.XB cmp spl,BYTE PTR [r8]
  409645:	sub    BYTE PTR [rdi+0x4e],al
  409648:	push   rbp
  409649:	sub    DWORD PTR [rax],esp
  40964b:	xor    al,0x2e
  40964d:	cmp    DWORD PTR [rsi],ebp
  40964f:	xor    al,0x0
	...
  40965d:	add    BYTE PTR [rax],al
  40965f:	add    BYTE PTR [rdi+0x43],al
  409662:	rex.XB cmp spl,BYTE PTR [r8]
  409665:	sub    BYTE PTR [rdi+0x4e],al
  409668:	push   rbp
  409669:	sub    DWORD PTR [rax],esp
  40966b:	xor    al,0x2e
  40966d:	cmp    DWORD PTR [rsi],ebp
  40966f:	xor    al,0x0
	...
  40967d:	add    BYTE PTR [rax],al
  40967f:	add    BYTE PTR [rdi+0x43],al
  409682:	rex.XB cmp spl,BYTE PTR [r8]
  409685:	sub    BYTE PTR [rdi+0x4e],al
  409688:	push   rbp
  409689:	sub    DWORD PTR [rax],esp
  40968b:	xor    al,0x2e
  40968d:	cmp    DWORD PTR [rsi],ebp
  40968f:	xor    al,0x0
	...
  40969d:	add    BYTE PTR [rax],al
  40969f:	add    BYTE PTR [rdi+0x43],al
  4096a2:	rex.XB cmp spl,BYTE PTR [r8]
  4096a5:	sub    BYTE PTR [rdi+0x4e],al
  4096a8:	push   rbp
  4096a9:	sub    DWORD PTR [rax],esp
  4096ab:	xor    al,0x2e
  4096ad:	cmp    DWORD PTR [rsi],ebp
  4096af:	xor    al,0x0
	...
  4096bd:	add    BYTE PTR [rax],al
  4096bf:	add    BYTE PTR [rdi+0x43],al
  4096c2:	rex.XB cmp spl,BYTE PTR [r8]
  4096c5:	sub    BYTE PTR [rdi+0x4e],al
  4096c8:	push   rbp
  4096c9:	sub    DWORD PTR [rax],esp
  4096cb:	xor    al,0x2e
  4096cd:	cmp    DWORD PTR [rsi],ebp
  4096cf:	xor    al,0x0
	...
  4096dd:	add    BYTE PTR [rax],al
  4096df:	add    BYTE PTR [rdi+0x43],al
  4096e2:	rex.XB cmp spl,BYTE PTR [r8]
  4096e5:	sub    BYTE PTR [rdi+0x4e],al
  4096e8:	push   rbp
  4096e9:	sub    DWORD PTR [rax],esp
  4096eb:	xor    al,0x2e
  4096ed:	cmp    DWORD PTR [rsi],ebp
  4096ef:	xor    al,0x0
	...
  4096fd:	add    BYTE PTR [rax],al
  4096ff:	add    BYTE PTR [rdi+0x43],al
  409702:	rex.XB cmp spl,BYTE PTR [r8]
  409705:	sub    BYTE PTR [rdi+0x4e],al
  409708:	push   rbp
  409709:	sub    DWORD PTR [rax],esp
  40970b:	xor    al,0x2e
  40970d:	cmp    DWORD PTR [rsi],ebp
  40970f:	xor    al,0x0
	...
  40971d:	add    BYTE PTR [rax],al
  40971f:	add    BYTE PTR [rdi+0x43],al
  409722:	rex.XB cmp spl,BYTE PTR [r8]
  409725:	sub    BYTE PTR [rdi+0x4e],al
  409728:	push   rbp
  409729:	sub    DWORD PTR [rax],esp
  40972b:	xor    al,0x2e
  40972d:	cmp    DWORD PTR [rsi],ebp
  40972f:	xor    al,0x0
	...
  40973d:	add    BYTE PTR [rax],al
  40973f:	add    BYTE PTR [rdi+0x43],al
  409742:	rex.XB cmp spl,BYTE PTR [r8]
  409745:	sub    BYTE PTR [rdi+0x4e],al
  409748:	push   rbp
  409749:	sub    DWORD PTR [rax],esp
  40974b:	xor    al,0x2e
  40974d:	cmp    DWORD PTR [rsi],ebp
  40974f:	xor    al,0x0
	...
  40975d:	add    BYTE PTR [rax],al
  40975f:	add    BYTE PTR [rdi+0x43],al
  409762:	rex.XB cmp spl,BYTE PTR [r8]
  409765:	sub    BYTE PTR [rdi+0x4e],al
  409768:	push   rbp
  409769:	sub    DWORD PTR [rax],esp
  40976b:	xor    al,0x2e
  40976d:	cmp    DWORD PTR [rsi],ebp
  40976f:	xor    al,0x0
	...
  40977d:	add    BYTE PTR [rax],al
  40977f:	add    BYTE PTR [rdi+0x43],al
  409782:	rex.XB cmp spl,BYTE PTR [r8]
  409785:	sub    BYTE PTR [rdi+0x4e],al
  409788:	push   rbp
  409789:	sub    DWORD PTR [rax],esp
  40978b:	xor    al,0x2e
  40978d:	cmp    DWORD PTR [rsi],ebp
  40978f:	xor    al,0x0
	...
  40979d:	add    BYTE PTR [rax],al
  40979f:	add    BYTE PTR [rdi+0x43],al
  4097a2:	rex.XB cmp spl,BYTE PTR [r8]
  4097a5:	sub    BYTE PTR [rdi+0x4e],al
  4097a8:	push   rbp
  4097a9:	sub    DWORD PTR [rax],esp
  4097ab:	xor    al,0x2e
  4097ad:	cmp    DWORD PTR [rsi],ebp
  4097af:	xor    al,0x0
	...
  4097bd:	add    BYTE PTR [rax],al
  4097bf:	add    BYTE PTR [rdi+0x43],al
  4097c2:	rex.XB cmp spl,BYTE PTR [r8]
  4097c5:	sub    BYTE PTR [rdi+0x4e],al
  4097c8:	push   rbp
  4097c9:	sub    DWORD PTR [rax],esp
  4097cb:	xor    al,0x2e
  4097cd:	cmp    DWORD PTR [rsi],ebp
  4097cf:	xor    al,0x0
	...
  4097dd:	add    BYTE PTR [rax],al
  4097df:	add    BYTE PTR [rdi+0x43],al
  4097e2:	rex.XB cmp spl,BYTE PTR [r8]
  4097e5:	sub    BYTE PTR [rdi+0x4e],al
  4097e8:	push   rbp
  4097e9:	sub    DWORD PTR [rax],esp
  4097eb:	xor    al,0x2e
  4097ed:	cmp    DWORD PTR [rsi],ebp
  4097ef:	xor    al,0x0
	...
  4097fd:	add    BYTE PTR [rax],al
  4097ff:	add    BYTE PTR [rdi+0x43],al
  409802:	rex.XB cmp spl,BYTE PTR [r8]
  409805:	sub    BYTE PTR [rdi+0x4e],al
  409808:	push   rbp
  409809:	sub    DWORD PTR [rax],esp
  40980b:	xor    al,0x2e
  40980d:	cmp    DWORD PTR [rsi],ebp
  40980f:	xor    al,0x0
	...
  40981d:	add    BYTE PTR [rax],al
  40981f:	add    BYTE PTR [rdi+0x43],al
  409822:	rex.XB cmp spl,BYTE PTR [r8]
  409825:	sub    BYTE PTR [rdi+0x4e],al
  409828:	push   rbp
  409829:	sub    DWORD PTR [rax],esp
  40982b:	xor    al,0x2e
  40982d:	cmp    DWORD PTR [rsi],ebp
  40982f:	xor    al,0x0
	...
  40983d:	add    BYTE PTR [rax],al
  40983f:	add    BYTE PTR [rdi+0x43],al
  409842:	rex.XB cmp spl,BYTE PTR [r8]
  409845:	sub    BYTE PTR [rdi+0x4e],al
  409848:	push   rbp
  409849:	sub    DWORD PTR [rax],esp
  40984b:	xor    al,0x2e
  40984d:	cmp    DWORD PTR [rsi],ebp
  40984f:	xor    al,0x0
	...
  40985d:	add    BYTE PTR [rax],al
  40985f:	add    BYTE PTR [rdi+0x43],al
  409862:	rex.XB cmp spl,BYTE PTR [r8]
  409865:	sub    BYTE PTR [rdi+0x4e],al
  409868:	push   rbp
  409869:	sub    DWORD PTR [rax],esp
  40986b:	xor    al,0x2e
  40986d:	cmp    DWORD PTR [rsi],ebp
  40986f:	xor    al,0x0
	...
  40987d:	add    BYTE PTR [rax],al
  40987f:	add    BYTE PTR [rdi+0x43],al
  409882:	rex.XB cmp spl,BYTE PTR [r8]
  409885:	sub    BYTE PTR [rdi+0x4e],al
  409888:	push   rbp
  409889:	sub    DWORD PTR [rax],esp
  40988b:	xor    al,0x2e
  40988d:	cmp    DWORD PTR [rsi],ebp
  40988f:	xor    al,0x0
	...
  40989d:	add    BYTE PTR [rax],al
  40989f:	add    BYTE PTR [rdi+0x43],al
  4098a2:	rex.XB cmp spl,BYTE PTR [r8]
  4098a5:	sub    BYTE PTR [rdi+0x4e],al
  4098a8:	push   rbp
  4098a9:	sub    DWORD PTR [rax],esp
  4098ab:	xor    al,0x2e
  4098ad:	cmp    DWORD PTR [rsi],ebp
  4098af:	xor    al,0x0
	...
  4098bd:	add    BYTE PTR [rax],al
  4098bf:	add    BYTE PTR [rdi+0x43],al
  4098c2:	rex.XB cmp spl,BYTE PTR [r8]
  4098c5:	sub    BYTE PTR [rdi+0x4e],al
  4098c8:	push   rbp
  4098c9:	sub    DWORD PTR [rax],esp
  4098cb:	xor    al,0x2e
  4098cd:	cmp    DWORD PTR [rsi],ebp
  4098cf:	xor    al,0x0
	...

Disassembly of section .pdata:

000000000040a000 <.pdata>:
  40a000:	add    BYTE PTR [rax],dl
  40a002:	add    BYTE PTR [rax],al
  40a004:	add    DWORD PTR [rax],edx
  40a006:	add    BYTE PTR [rax],al
  40a008:	add    BYTE PTR [rax+0x10100000],dh
  40a00e:	add    BYTE PTR [rax],al
  40a010:	push   rcx
  40a011:	adc    DWORD PTR [rax],eax
  40a013:	add    BYTE PTR [rax+rsi*4],al
  40a016:	add    BYTE PTR [rax],al
  40a018:	(bad)  
  40a019:	adc    DWORD PTR [rax],eax
  40a01b:	add    BYTE PTR [rsi+0xc000011],ch
  40a021:	mov    al,0x0
  40a023:	add    BYTE PTR [rax-0x31ffffef],dh
  40a029:	adc    al,0x0
  40a02b:	add    BYTE PTR [rax+rsi*4],dl
  40a02e:	add    BYTE PTR [rax],al
  40a030:	rcl    BYTE PTR [rax+rax*1],1
  40a033:	add    dl,dh
  40a035:	adc    al,0x0
  40a037:	add    BYTE PTR [rax],ch
  40a039:	mov    al,0x0
  40a03b:	add    BYTE PTR [rax],al
  40a03d:	adc    eax,0x15220000
  40a042:	add    BYTE PTR [rax],al
  40a044:	rex.W mov al,0x0
  40a047:	add    BYTE PTR [rax],dh
  40a049:	adc    eax,0x15750000
  40a04e:	add    BYTE PTR [rax],al
  40a050:	push   0xffffffff800000b0
  40a055:	adc    eax,0x15be0000
  40a05a:	add    BYTE PTR [rax],al
  40a05c:	ins    BYTE PTR es:[rdi],dx
  40a05d:	mov    al,0x0
  40a05f:	add    al,al
  40a061:	adc    eax,0x16430000
  40a066:	add    BYTE PTR [rax],al
  40a068:	je     0x40a01a
  40a06a:	add    BYTE PTR [rax],al
  40a06c:	push   rax
  40a06d:	(bad)  
  40a06e:	add    BYTE PTR [rax],al
  40a070:	ret    0x1a
  40a073:	add    BYTE PTR [rax+rsi*4+0x1ad00000],al
  40a07a:	add    BYTE PTR [rax],al
  40a07c:	push   rdi
  40a07d:	sbb    eax,DWORD PTR [rax]
  40a07f:	add    BYTE PTR [rax+rsi*4+0x1b600000],bl
  40a086:	add    BYTE PTR [rax],al
  40a088:	mov    bl,0x1b
  40a08a:	add    BYTE PTR [rax],al
  40a08c:	lods   al,BYTE PTR ds:[rsi]
  40a08d:	mov    al,0x0
  40a08f:	add    al,al
  40a091:	sbb    eax,DWORD PTR [rax]
  40a093:	add    dl,ch
  40a095:	sbb    eax,DWORD PTR [rax]
  40a097:	add    BYTE PTR [rax+rsi*4+0x1bf00000],dh
  40a09e:	add    BYTE PTR [rax],al
  40a0a0:	rex.XB sbb al,0x0
  40a0a3:	add    al,al
  40a0a5:	mov    al,0x0
  40a0a7:	add    BYTE PTR [rax+0x1c],dl
  40a0aa:	add    BYTE PTR [rax],al
  40a0ac:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  40a0ad:	sbb    al,0x0
  40a0af:	add    al,cl
  40a0b1:	mov    al,0x0
  40a0b3:	add    BYTE PTR [rax+0x7a00001c],dh
  40a0b9:	sbb    eax,0xb0d40000
  40a0be:	add    BYTE PTR [rax],al
  40a0c0:	sbb    BYTE PTR [rip+0x1f8a0000],0x0        # 0x1fcaa0c7
  40a0c7:	add    ah,ah
  40a0c9:	mov    al,0x0
  40a0cb:	add    BYTE PTR [rax-0x49ffffe1],dl
  40a0d1:	(bad)  
  40a0d2:	add    BYTE PTR [rax],al
  40a0d4:	clc    
  40a0d5:	mov    al,0x0
  40a0d7:	add    al,al
  40a0d9:	(bad)  
  40a0da:	add    BYTE PTR [rax],al
  40a0dc:	rex.WRB and BYTE PTR [r8],r8b
  40a0df:	add    BYTE PTR [rax],al
  40a0e1:	mov    cl,0x0
  40a0e3:	add    BYTE PTR [rax+0x20],dl
  40a0e6:	add    BYTE PTR [rax],al
  40a0e8:	sbb    DWORD PTR [rax],ebp
  40a0ea:	add    BYTE PTR [rax],al
  40a0ec:	adc    BYTE PTR [rcx+0x28200000],dh
  40a0f2:	add    BYTE PTR [rax],al
  40a0f4:	sbb    ebp,DWORD PTR [rdx]
  40a0f6:	add    BYTE PTR [rax],al
  40a0f8:	sub    BYTE PTR [rcx+0x2a200000],dh
  40a0fe:	add    BYTE PTR [rax],al
  40a100:	jno    0x40a12c
  40a102:	add    BYTE PTR [rax],al
  40a104:	mov    cl,0x0
  40a107:	add    BYTE PTR [rax+0x2300002a],al
  40a10d:	sub    eax,DWORD PTR [rax]
  40a10f:	add    BYTE PTR [rax-0x4f],cl
  40a112:	add    BYTE PTR [rax],al
  40a114:	jo     0x40a144
  40a116:	add    BYTE PTR [rax],al
  40a118:	(bad)  
  40a119:	(bad)  
  40a11a:	add    BYTE PTR [rax],al
  40a11c:	ins    BYTE PTR es:[rdi],dx
  40a11d:	mov    cl,0x0
  40a11f:	add    BYTE PTR [rax],ah
  40a121:	(bad)  
  40a122:	add    BYTE PTR [rax],al
  40a124:	cmp    DWORD PTR [rdi],ebp
  40a126:	add    BYTE PTR [rax],al
  40a128:	je     0x40a0db
  40a12a:	add    BYTE PTR [rax],al
  40a12c:	rex (bad) 
  40a12e:	add    BYTE PTR [rax],al
  40a130:	jne    0x40a161
  40a132:	add    BYTE PTR [rax],al
  40a134:	jl     0x40a0e7
  40a136:	add    BYTE PTR [rax],al
  40a138:	sub    BYTE PTR [rdi],0x0
  40a13b:	add    ch,dl
  40a13d:	(bad)  
  40a13e:	add    BYTE PTR [rax],al
  40a140:	test   BYTE PTR [rcx+0x2fe00000],dh
  40a146:	add    BYTE PTR [rax],al
  40a148:	cld    
  40a149:	(bad)  
  40a14a:	add    BYTE PTR [rax],al
  40a14c:	nop
  40a14d:	mov    cl,0x0
  40a14f:	add    BYTE PTR [rax],al
  40a151:	xor    BYTE PTR [rax],al
  40a153:	add    BYTE PTR [rdx],cl
  40a155:	xor    BYTE PTR [rax],al
  40a157:	add    BYTE PTR [rcx+rsi*4+0x30100000],dl
  40a15e:	add    BYTE PTR [rax],al
  40a160:	adc    esi,DWORD PTR [rax]
  40a162:	add    BYTE PTR [rax],al
  40a164:	cwde   
  40a165:	mov    cl,0x0
  40a167:	add    BYTE PTR [rax],ah
  40a169:	xor    BYTE PTR [rax],al
  40a16b:	add    dh,dh
  40a16d:	xor    BYTE PTR [rax],al
  40a16f:	add    BYTE PTR [rcx+rsi*4+0x31000000],bl
  40a176:	add    BYTE PTR [rax],al
  40a178:	sti    
  40a179:	xor    DWORD PTR [rax],eax
  40a17b:	add    BYTE PTR [rcx+rsi*4+0x32000000],ch
  40a182:	add    BYTE PTR [rax],al
  40a184:	(bad)  
  40a185:	xor    al,BYTE PTR [rax]
  40a187:	add    BYTE PTR [rcx+rsi*4+0x32300000],bh
  40a18e:	add    BYTE PTR [rax],al
  40a190:	cdq    
  40a191:	xor    al,BYTE PTR [rax]
  40a193:	add    ah,al
  40a195:	mov    cl,0x0
  40a197:	add    BYTE PTR [rax-0x5cffffce],ah
  40a19d:	xor    al,BYTE PTR [rax]
  40a19f:	add    al,dl
  40a1a1:	mov    cl,0x0
  40a1a3:	add    BYTE PTR [rax-0xeffffce],dh
  40a1a9:	xor    al,BYTE PTR [rax]
  40a1ab:	add    ah,dl
  40a1ad:	mov    cl,0x0
  40a1af:	add    BYTE PTR [rax],al
  40a1b1:	xor    eax,DWORD PTR [rax]
  40a1b3:	add    BYTE PTR [rbx+rsi*1],cl
  40a1b6:	add    BYTE PTR [rax],al
  40a1b8:	fdiv   QWORD PTR [rcx+0x33100000]
  40a1be:	add    BYTE PTR [rax],al
  40a1c0:	or     al,0x34
  40a1c2:	add    BYTE PTR [rax],al
  40a1c4:	loopne 0x40a177
  40a1c6:	add    BYTE PTR [rax],al
  40a1c8:	adc    BYTE PTR [rax+rax*1],dh
  40a1cb:	add    BYTE PTR [rbx],dl
  40a1cd:	xor    al,0x0
  40a1cf:	add    al,bh
  40a1d1:	mov    cl,0x0
  40a1d3:	add    BYTE PTR [rax],ah
  40a1d5:	xor    al,0x0
  40a1d7:	add    BYTE PTR [rsp+rsi*1],ah
  40a1da:	add    BYTE PTR [rax],al
  40a1dc:	cld    
  40a1dd:	mov    cl,0x0
  40a1df:	add    BYTE PTR [rax],dh
  40a1e1:	xor    al,0x0
  40a1e3:	add    BYTE PTR [rsp+rsi*1],dh
  40a1e6:	add    BYTE PTR [rax],al
  40a1e8:	add    BYTE PTR [rdx+0x34400000],dh
  40a1ee:	add    BYTE PTR [rax],al
  40a1f0:	movabs eax,ds:0xb00000b204000034
  40a1f9:	xor    al,0x0
  40a1fb:	add    BYTE PTR [rdx],dl
  40a1fd:	add    BYTE PTR ss:[rax],al
  40a200:	adc    BYTE PTR [rdx+0x36200000],dh
  40a206:	add    BYTE PTR [rax],al
  40a208:	sbb    DWORD PTR [rcx],edi
  40a20a:	add    BYTE PTR [rax],al
  40a20c:	and    al,0xb2
  40a20e:	add    BYTE PTR [rax],al
  40a210:	and    BYTE PTR [rcx],bh
  40a212:	add    BYTE PTR [rax],al
  40a214:	(bad)  
  40a215:	cmp    al,BYTE PTR [rax]
  40a217:	add    BYTE PTR [rdx+rsi*4],bh
  40a21a:	add    BYTE PTR [rax],al
  40a21c:	sar    BYTE PTR [rdx],1
  40a21e:	add    BYTE PTR [rax],al
  40a220:	mov    esp,0x4400003b
  40a225:	mov    dl,0x0
  40a227:	add    al,al
  40a229:	cmp    eax,DWORD PTR [rax]
  40a22b:	add    BYTE PTR [rax+0x3d],bh
  40a22e:	add    BYTE PTR [rax],al
  40a230:	push   rsp
  40a231:	mov    dl,0x0
  40a233:	add    BYTE PTR [rax-0x12ffffc3],al
  40a239:	cmp    eax,0xb25c0000
  40a23e:	add    BYTE PTR [rax],al
  40a240:	lock cmp eax,0x3e6f0000
  40a246:	add    BYTE PTR [rax],al
  40a248:	ins    BYTE PTR es:[rdi],dx
  40a249:	mov    dl,0x0
  40a24b:	add    BYTE PTR [rax+0x3e],dh
  40a24e:	add    BYTE PTR [rax],al
  40a250:	(bad)  
  40a252:	add    BYTE PTR [rax],al
  40a254:	js     0x40a208
  40a256:	add    BYTE PTR [rax],al
  40a258:	adc    BYTE PTR [rdi],bh
  40a25a:	add    BYTE PTR [rax],al
  40a25c:	(bad)  
  40a25d:	(bad)  
  40a25e:	add    BYTE PTR [rax],al
  40a260:	xor    BYTE PTR [rdx+0x3ff00000],0x0
  40a267:	add    BYTE PTR [rdi],cl
  40a269:	add    BYTE PTR [rax],al
  40a26c:	mov    BYTE PTR [rdx+0x40100000],dh
  40a272:	add    BYTE PTR [rax],al
  40a274:	and    al,BYTE PTR [rax+0x0]
  40a277:	add    BYTE PTR [rdx+rsi*4+0x40300000],cl
  40a27e:	add    BYTE PTR [rax],al
  40a280:	jne    0x40a2c2
  40a282:	add    BYTE PTR [rax],al
  40a284:	nop
  40a285:	mov    dl,0x0
  40a287:	add    BYTE PTR [rax+0x1e000040],al
  40a28d:	add    BYTE PTR [r8],al
  40a290:	xchg   esp,eax
  40a291:	mov    dl,0x0
  40a293:	add    BYTE PTR [rax],ah
  40a295:	add    BYTE PTR [r8],al
  40a298:	movsxd eax,DWORD PTR [rcx+0x0]
  40a29b:	add    BYTE PTR [rax+0x700000b2],ah
  40a2a1:	add    BYTE PTR [r8],al
  40a2a4:	stos   DWORD PTR es:[rdi],eax
  40a2a5:	add    BYTE PTR [r8],al
  40a2a8:	lods   al,BYTE PTR ds:[rsi]
  40a2a9:	mov    dl,0x0
  40a2ab:	add    BYTE PTR [rax+0x3e000041],dh
  40a2b1:	rex.X add BYTE PTR [rax],al
  40a2b4:	mov    ah,0xb2
  40a2b6:	add    BYTE PTR [rax],al
  40a2b8:	rex
  40a2b9:	rex.X add BYTE PTR [rax],al
  40a2bc:	js     0x40a300
  40a2be:	add    BYTE PTR [rax],al
  40a2c0:	shl    BYTE PTR [rdx+0x42800000],0x0
  40a2c7:	add    ch,dl
  40a2c9:	rex.X add BYTE PTR [rax],al
  40a2cc:	int3   
  40a2cd:	mov    dl,0x0
  40a2cf:	add    al,ah
  40a2d1:	rex.X add BYTE PTR [rax],al
  40a2d4:	mov    es,WORD PTR [rbx+0x0]
  40a2d7:	add    al,bl
  40a2d9:	mov    dl,0x0
  40a2db:	add    al,dl
  40a2dd:	add    BYTE PTR [rax],r8b
  40a2e0:	fadd   DWORD PTR [rax+rax*1+0x0]
  40a2e4:	call   0xffffffffe040a39b
  40a2e9:	add    BYTE PTR [rax],r8b
  40a2ec:	jmp    0x40a332
  40a2ee:	add    BYTE PTR [rax],al
  40a2f0:	in     al,dx
  40a2f1:	mov    dl,0x0
  40a2f3:	add    BYTE PTR [rax-0x5cffffbb],dh
  40a2f9:	push   rsp
  40a2fa:	add    BYTE PTR [rax],al
  40a2fc:	push   rsp
  40a2fd:	mov    cl,0x0
	...

Disassembly of section .xdata:

000000000040b000 <.xdata>:
  40b000:	add    DWORD PTR [rax],eax
  40b002:	add    BYTE PTR [rax],al
  40b004:	add    DWORD PTR [rcx+rax*1],eax
  40b007:	add    BYTE PTR [rdx+rax*2],al
  40b00a:	add    BYTE PTR [rax],al
  40b00c:	add    DWORD PTR [rcx+rax*1],eax
  40b00f:	add    BYTE PTR [rdx+riz*2],al
  40b012:	add    BYTE PTR [rax],al
  40b014:	add    DWORD PTR [rdi],ecx
  40b016:	or     BYTE PTR [rax],al
  40b018:	lgdt   [rbx]
  40b01b:	add    BYTE PTR [rax],cl
  40b01d:	xor    BYTE PTR [rdi],al
  40b01f:	(bad)  
  40b020:	(bad)  
  40b021:	jo     0x40b028
  40b023:	push   rax
  40b024:	add    al,0xc0
  40b026:	add    dl,al
  40b028:	or     DWORD PTR [rcx+rax*1],eax
  40b02b:	add    BYTE PTR [rdx+rax*2],al
  40b02e:	add    BYTE PTR [rax],al
  40b030:	enter  0x44,0x0
  40b034:	add    DWORD PTR [rax],eax
  40b036:	add    BYTE PTR [rax],al
  40b038:	(bad)  
  40b039:	adc    al,0x0
  40b03b:	add    ah,ch
  40b03d:	adc    al,0x0
  40b03f:	add    al,al
  40b041:	cmp    eax,DWORD PTR [rax]
  40b043:	add    ah,ch
  40b045:	adc    al,0x0
  40b047:	add    BYTE PTR [rcx],cl
  40b049:	add    al,0x1
  40b04b:	add    BYTE PTR [rdx+rax*2],al
  40b04e:	add    BYTE PTR [rax],al
  40b050:	enter  0x44,0x0
  40b054:	add    DWORD PTR [rax],eax
  40b056:	add    BYTE PTR [rax],al
  40b058:	add    al,0x15
  40b05a:	add    BYTE PTR [rax],al
  40b05c:	sbb    al,0x15
  40b05e:	add    BYTE PTR [rax],al
  40b060:	sar    BYTE PTR [rbx],0x0
  40b063:	add    BYTE PTR [rdx*1+0x10000],bl
  40b06a:	add    BYTE PTR [rax],al
  40b06c:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245b074
  40b072:	add    DWORD PTR [rax],esi
  40b074:	add    DWORD PTR [rdx],ecx
  40b076:	(bad)  
  40b077:	add    BYTE PTR [rdx],cl
  40b079:	xor    al,BYTE PTR [rsi]
  40b07b:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b0b4e1
  40b081:	push   rax
  40b082:	add    al,al
  40b084:	add    DWORD PTR [rax],edx
  40b086:	or     DWORD PTR [rax],eax
  40b088:	adc    BYTE PTR [rdx+0x600b300c],ah
  40b08e:	or     dh,BYTE PTR [rax+0x9]
  40b091:	push   rax
  40b092:	or     al,al
  40b094:	(bad)  
  40b095:	rol    BYTE PTR [rax+riz*8],1
  40b098:	add    dh,al
  40b09a:	add    BYTE PTR [rax],al
  40b09c:	add    DWORD PTR [rax],ecx
  40b09e:	add    eax,0x4420800
  40b0a3:	xor    BYTE PTR [rbx],al
  40b0a5:	(bad)  
  40b0a6:	add    dh,BYTE PTR [rax+0x1]
  40b0a9:	push   rax
  40b0aa:	add    BYTE PTR [rax],al
  40b0ac:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245b0b4
  40b0b2:	add    DWORD PTR [rax],esi
  40b0b4:	add    DWORD PTR [rsi],eax
  40b0b6:	add    eax,DWORD PTR [rax]
  40b0b8:	(bad)  
  40b0b9:	rex.X add sil,BYTE PTR [rax]
  40b0bc:	add    DWORD PTR [rax+0x0],esp
  40b0bf:	add    BYTE PTR [rcx],al
  40b0c1:	add    eax,0x32050002
  40b0c6:	add    DWORD PTR [rax],esi
  40b0c8:	add    DWORD PTR [rdi],eax
  40b0ca:	add    al,0x0
  40b0cc:	(bad)  
  40b0cd:	xor    al,BYTE PTR [rbx]
  40b0cf:	xor    BYTE PTR [rdx],al
  40b0d1:	(bad)  
  40b0d2:	add    DWORD PTR [rax+0x1],esi
  40b0d5:	or     al,BYTE PTR [rsi]
  40b0d7:	add    BYTE PTR [rdx],cl
  40b0d9:	xor    al,BYTE PTR [rsi]
  40b0db:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b0b541
  40b0e1:	push   rax
  40b0e2:	add    al,al
  40b0e4:	add    DWORD PTR [rdi+rax*1],ecx
  40b0e7:	add    BYTE PTR [rdx+riz*8],cl
  40b0ea:	or     BYTE PTR [rax],dh
  40b0ec:	(bad)  
  40b0ed:	(bad)  
  40b0ee:	(bad)  
  40b0ef:	jo     0x40b0f6
  40b0f1:	push   rax
  40b0f2:	add    al,0xc0
  40b0f4:	add    dl,al
  40b0f6:	add    BYTE PTR [rax],al
  40b0f8:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245b100
  40b0fe:	add    DWORD PTR [rax],esi
  40b100:	add    DWORD PTR [rax],ecx
  40b102:	add    eax,0x4620800
  40b107:	xor    BYTE PTR [rbx],al
  40b109:	(bad)  
  40b10a:	add    dh,BYTE PTR [rax+0x1]
  40b10d:	push   rax
  40b10e:	add    BYTE PTR [rax],al
  40b110:	add    DWORD PTR [rax],edx
  40b112:	or     DWORD PTR [rax],eax
  40b114:	adc    dl,ah
  40b116:	or     al,0x30
  40b118:	or     esp,DWORD PTR [rax+0xa]
  40b11b:	jo     0x40b126
  40b11d:	push   rax
  40b11e:	or     al,al
  40b120:	(bad)  
  40b121:	rol    BYTE PTR [rax+riz*8],1
  40b124:	add    dh,al
  40b126:	add    BYTE PTR [rax],al
  40b128:	add    DWORD PTR [rax],edx
  40b12a:	or     DWORD PTR [rax],eax
  40b12c:	adc    dl,ah
  40b12e:	or     al,0x30
  40b130:	or     esp,DWORD PTR [rax+0xa]
  40b133:	jo     0x40b13e
  40b135:	push   rax
  40b136:	or     al,al
  40b138:	(bad)  
  40b139:	rol    BYTE PTR [rax+riz*8],1
  40b13c:	add    dh,al
  40b13e:	add    BYTE PTR [rax],al
  40b140:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245b148
  40b146:	add    DWORD PTR [rax],esi
  40b148:	add    DWORD PTR [rdi],eax
  40b14a:	add    al,0x0
  40b14c:	(bad)  
  40b14d:	xor    al,BYTE PTR [rbx]
  40b14f:	xor    BYTE PTR [rdx],al
  40b151:	(bad)  
  40b152:	add    DWORD PTR [rax+0x1],esi
  40b155:	adc    ecx,DWORD PTR [rdx]
  40b157:	add    BYTE PTR [rbx],dl
  40b159:	add    DWORD PTR [rbx+0x0],edi
  40b15c:	or     al,0x30
  40b15e:	or     esp,DWORD PTR [rax+0xa]
  40b161:	jo     0x40b16c
  40b163:	push   rax
  40b164:	or     al,al
  40b166:	(bad)  
  40b167:	rol    BYTE PTR [rax+riz*8],1
  40b16a:	add    dh,al
  40b16c:	add    DWORD PTR [rip+0x52050002],eax        # 0x5245b174
  40b172:	add    DWORD PTR [rax],esi
  40b174:	add    DWORD PTR [rcx+rax*1],eax
  40b177:	add    BYTE PTR [rdx+rax*2],al
  40b17a:	add    BYTE PTR [rax],al
  40b17c:	add    DWORD PTR [rcx+rax*1],eax
  40b17f:	add    BYTE PTR [rdx+rax*2],al
  40b182:	add    BYTE PTR [rax],al
  40b184:	add    DWORD PTR [rsi],eax
  40b186:	add    eax,DWORD PTR [rax]
  40b188:	(bad)  
  40b189:	rex.X add sil,BYTE PTR [rax]
  40b18c:	add    DWORD PTR [rax+0x0],esp
  40b18f:	add    BYTE PTR [rcx],al
  40b191:	add    BYTE PTR [rax],al
  40b193:	add    BYTE PTR [rcx],al
  40b195:	add    BYTE PTR [rax],al
  40b197:	add    BYTE PTR [rcx],al
  40b199:	add    BYTE PTR [rax],al
  40b19b:	add    BYTE PTR [rcx],al
  40b19d:	or     al,BYTE PTR [rsi]
  40b19f:	add    BYTE PTR [rdx],cl
  40b1a1:	jb     0x40b1a9
  40b1a3:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b0b609
  40b1a9:	push   rax
  40b1aa:	add    al,al
  40b1ac:	add    DWORD PTR [rdx],ecx
  40b1ae:	add    eax,0x6d20a05
  40b1b3:	add    eax,DWORD PTR [rbx]
  40b1b5:	xor    BYTE PTR [rdx],al
  40b1b7:	(bad)  
  40b1b8:	add    DWORD PTR [rax+0x0],edx
  40b1bb:	add    BYTE PTR [rcx],al
  40b1bd:	add    al,0x1
  40b1bf:	add    BYTE PTR [rdx+rax*2],al
  40b1c2:	add    BYTE PTR [rax],al
  40b1c4:	add    DWORD PTR [rsi],eax
  40b1c6:	add    eax,DWORD PTR [rax]
  40b1c8:	(bad)  
  40b1c9:	rex.X add sil,BYTE PTR [rax]
  40b1cc:	add    DWORD PTR [rax+0x0],esp
  40b1cf:	add    BYTE PTR [rcx],al
  40b1d1:	add    BYTE PTR [rax],al
  40b1d3:	add    BYTE PTR [rcx],al
  40b1d5:	add    al,0x1
  40b1d7:	add    BYTE PTR [rdx+riz*4],al
  40b1da:	add    BYTE PTR [rax],al
  40b1dc:	add    DWORD PTR [rax],eax
  40b1de:	add    BYTE PTR [rax],al
  40b1e0:	add    DWORD PTR [rsi],edx
  40b1e2:	or     DWORD PTR [rax],eax
  40b1e4:	(bad)  
  40b1e5:	mov    BYTE PTR [rsi],al
  40b1e7:	add    BYTE PTR [rax],dl
  40b1e9:	js     0x40b1f0
  40b1eb:	add    BYTE PTR [rbx],cl
  40b1ed:	push   0xffffffffe2060004
  40b1f2:	add    dh,BYTE PTR [rax]
  40b1f4:	add    DWORD PTR [rax+0x0],esp
  40b1f7:	add    BYTE PTR [rcx],al
  40b1f9:	add    BYTE PTR [rax],al
  40b1fb:	add    BYTE PTR [rcx],al
  40b1fd:	add    BYTE PTR [rax],al
  40b1ff:	add    BYTE PTR [rcx],al
  40b201:	add    BYTE PTR [rax],al
  40b203:	add    BYTE PTR [rcx],al
  40b205:	(bad)  
  40b206:	add    eax,DWORD PTR [rax]
  40b208:	(bad)  
  40b209:	(bad)  
  40b20b:	xor    BYTE PTR [rcx],al
  40b20d:	(bad)  
  40b20e:	add    BYTE PTR [rax],al
  40b210:	add    DWORD PTR [rdi+rax*1],ecx
  40b213:	add    BYTE PTR [rdx+riz*4],cl
  40b216:	or     BYTE PTR [rax],dh
  40b218:	(bad)  
  40b219:	(bad)  
  40b21a:	(bad)  
  40b21b:	jo     0x40b222
  40b21d:	push   rax
  40b21e:	add    al,0xc0
  40b220:	add    dl,al
  40b222:	add    BYTE PTR [rax],al
  40b224:	add    DWORD PTR [rcx],edx
  40b226:	or     DWORD PTR [rip+0x30db211],eax        # 0x34e643d
  40b22c:	or     dh,BYTE PTR [rax]
  40b22e:	or     DWORD PTR [rax+0x8],esp
  40b231:	jo     0x40b23a
  40b233:	rol    BYTE PTR [rip+0x1e003d0],0x50        # 0x220b60a
  40b23a:	add    BYTE PTR [rax],al
  40b23c:	add    DWORD PTR [rcx+rax*1],eax
  40b23f:	add    BYTE PTR [rdx+rax*2],al
  40b242:	add    BYTE PTR [rax],al
  40b244:	add    DWORD PTR [rdx],ecx
  40b246:	(bad)  
  40b247:	add    BYTE PTR [rdx],cl
  40b249:	xor    al,BYTE PTR [rsi]
  40b24b:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b0b6b1
  40b251:	push   rax
  40b252:	add    al,al
  40b254:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245b25c
  40b25a:	add    DWORD PTR [rax],esi
  40b25c:	add    DWORD PTR [rax],ecx
  40b25e:	add    eax,0x4420800
  40b263:	xor    BYTE PTR [rbx],al
  40b265:	(bad)  
  40b266:	add    dh,BYTE PTR [rax+0x1]
  40b269:	push   rax
  40b26a:	add    BYTE PTR [rax],al
  40b26c:	add    DWORD PTR [rdi],eax
  40b26e:	add    al,0x0
  40b270:	(bad)  
  40b271:	xor    al,BYTE PTR [rbx]
  40b273:	xor    BYTE PTR [rdx],al
  40b275:	(bad)  
  40b276:	add    DWORD PTR [rax+0x1],esi
  40b279:	add    eax,0x32050002
  40b27e:	add    DWORD PTR [rax],esi
  40b280:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245b288
  40b286:	add    DWORD PTR [rax],esi
  40b288:	add    DWORD PTR [rax],eax
  40b28a:	add    BYTE PTR [rax],al
  40b28c:	add    DWORD PTR [rax],eax
  40b28e:	add    BYTE PTR [rax],al
  40b290:	add    DWORD PTR [rax],eax
  40b292:	add    BYTE PTR [rax],al
  40b294:	add    DWORD PTR [rdi],eax
  40b296:	add    al,0x0
  40b298:	(bad)  
  40b299:	xor    al,BYTE PTR [rbx]
  40b29b:	xor    BYTE PTR [rdx],al
  40b29d:	(bad)  
  40b29e:	add    DWORD PTR [rax+0x1],esi
  40b2a1:	(bad)  
  40b2a2:	add    eax,DWORD PTR [rax]
  40b2a4:	(bad)  
  40b2a5:	rex.X add sil,BYTE PTR [rax]
  40b2a8:	add    DWORD PTR [rax+0x0],esp
  40b2ab:	add    BYTE PTR [rcx],al
  40b2ad:	add    eax,0x32050002
  40b2b2:	add    DWORD PTR [rax],esi
  40b2b4:	add    DWORD PTR [rdi],eax
  40b2b6:	add    al,0x0
  40b2b8:	(bad)  
  40b2b9:	xor    al,BYTE PTR [rbx]
  40b2bb:	xor    BYTE PTR [rdx],al
  40b2bd:	(bad)  
  40b2be:	add    DWORD PTR [rax+0x1],esi
  40b2c1:	(bad)  
  40b2c2:	add    eax,DWORD PTR [rax]
  40b2c4:	(bad)  
  40b2c5:	rex.X add sil,BYTE PTR [rax]
  40b2c8:	add    DWORD PTR [rax+0x0],esp
  40b2cb:	add    BYTE PTR [rcx],al
  40b2cd:	(bad)  
  40b2ce:	add    eax,DWORD PTR [rax]
  40b2d0:	(bad)  
  40b2d1:	rex.X add sil,BYTE PTR [rax]
  40b2d4:	add    DWORD PTR [rax+0x0],esp
  40b2d7:	add    BYTE PTR [rcx],al
  40b2d9:	or     BYTE PTR [rip+0x4420800],al        # 0x482badf
  40b2df:	xor    BYTE PTR [rbx],al
  40b2e1:	(bad)  
  40b2e2:	add    dh,BYTE PTR [rax+0x1]
  40b2e5:	push   rax
  40b2e6:	add    BYTE PTR [rax],al
  40b2e8:	add    DWORD PTR [rax],eax
  40b2ea:	add    BYTE PTR [rax],al
  40b2ec:	add    DWORD PTR [rax],eax
	...

Disassembly of section .bss:

000000000040c000 <.bss>:
	...

Disassembly of section .idata:

000000000040d000 <.idata>:
  40d000:	mov    eax,ss
	...
  40d00a:	add    BYTE PTR [rax],al
  40d00c:	and    al,0xe8
  40d00e:	add    BYTE PTR [rax],al
  40d010:	int3   
  40d011:	(bad)  
  40d012:	add    BYTE PTR [rax],al
  40d014:	in     al,dx
  40d015:	rol    BYTE PTR [rax],1
	...
  40d01f:	add    BYTE PTR [rax+0x2c0000e9],dl
  40d025:	(bad)  
  40d026:	add    BYTE PTR [rax],al
  40d028:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40d029:	rol    DWORD PTR [rax],cl
	...
  40d033:	add    BYTE PTR [rax-0x1bffff17],ch
  40d039:	fadd   DWORD PTR [rax]
  40d03b:	add    BYTE PTR [rbx+rdx*8+0x0],dh
  40d042:	add    BYTE PTR [rax],al
  40d044:	add    BYTE PTR [rax],al
  40d046:	add    BYTE PTR [rax],al
  40d048:	fsubr  st,st(1)
  40d04a:	add    BYTE PTR [rax],al
  40d04c:	hlt    
  40d04d:	fadd   DWORD PTR [rax]
  40d04f:	add    ah,ch
  40d051:	rol    DWORD PTR [rax],cl
	...
  40d05b:	add    BYTE PTR [rdx+rbp*8+0x0],al
  40d05f:	add    BYTE PTR [rcx+rbx*8],ch
  40d062:	add    BYTE PTR [rax],al
  40d064:	lods   al,BYTE PTR ds:[rsi]
  40d065:	(bad)  
	...
  40d06e:	add    BYTE PTR [rax],al
  40d070:	loopne 0x40d05c
  40d072:	add    BYTE PTR [rax],al
  40d074:	in     al,dx
  40d075:	fld    DWORD PTR [rax]
	...
  40d08b:	add    BYTE PTR [rbx+rbx*8],cl
  40d08e:	add    BYTE PTR [rax],al
  40d090:	add    BYTE PTR [rax],al
  40d092:	add    BYTE PTR [rax],al
  40d094:	sub    al,0xdb
  40d096:	add    BYTE PTR [rax],al
  40d098:	add    BYTE PTR [rax],al
  40d09a:	add    BYTE PTR [rax],al
  40d09c:	rex.R fild DWORD PTR [rax]
  40d09f:	add    BYTE PTR [rax],al
  40d0a1:	add    BYTE PTR [rax],al
  40d0a3:	add    BYTE PTR [rax-0x25],bl
  40d0a6:	add    BYTE PTR [rax],al
  40d0a8:	add    BYTE PTR [rax],al
  40d0aa:	add    BYTE PTR [rax],al
  40d0ac:	jl     0x40d089
  40d0ae:	add    BYTE PTR [rax],al
  40d0b0:	add    BYTE PTR [rax],al
  40d0b2:	add    BYTE PTR [rax],al
  40d0b4:	pushf  
  40d0b5:	fild   DWORD PTR [rax]
  40d0b7:	add    BYTE PTR [rax],al
  40d0b9:	add    BYTE PTR [rax],al
  40d0bb:	add    al,al
  40d0bd:	fild   DWORD PTR [rax]
  40d0bf:	add    BYTE PTR [rax],al
  40d0c1:	add    BYTE PTR [rax],al
  40d0c3:	add    al,bl
  40d0c5:	fild   DWORD PTR [rax]
  40d0c7:	add    BYTE PTR [rax],al
  40d0c9:	add    BYTE PTR [rax],al
  40d0cb:	add    ah,dh
  40d0cd:	fild   DWORD PTR [rax]
  40d0cf:	add    BYTE PTR [rax],al
  40d0d1:	add    BYTE PTR [rax],al
  40d0d3:	add    BYTE PTR [rax],cl
  40d0d5:	fadd   QWORD PTR [rax]
  40d0d7:	add    BYTE PTR [rax],al
  40d0d9:	add    BYTE PTR [rax],al
  40d0db:	add    BYTE PTR [rsp+rbx*8],ah
	...
  40d0ea:	add    BYTE PTR [rax],al
  40d0ec:	cmp    al,0xdc
  40d0ee:	add    BYTE PTR [rax],al
  40d0f0:	add    BYTE PTR [rax],al
  40d0f2:	add    BYTE PTR [rax],al
  40d0f4:	push   rsp
  40d0f5:	fadd   QWORD PTR [rax]
  40d0f7:	add    BYTE PTR [rax],al
  40d0f9:	add    BYTE PTR [rax],al
  40d0fb:	add    BYTE PTR [rsp+rbx*8+0x0],ah
  40d0ff:	add    BYTE PTR [rax],al
  40d101:	add    BYTE PTR [rax],al
  40d103:	add    BYTE PTR [rax+0xdc],al
  40d109:	add    BYTE PTR [rax],al
  40d10b:	add    BYTE PTR [rsp+rbx*8+0x0],dl
  40d112:	add    BYTE PTR [rax],al
  40d114:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40d115:	fadd   QWORD PTR [rax]
  40d117:	add    BYTE PTR [rax],al
  40d119:	add    BYTE PTR [rax],al
  40d11b:	add    BYTE PTR [rsp+rbx*8+0x0],dh
  40d122:	add    BYTE PTR [rax],al
  40d124:	rcr    ah,1
  40d126:	add    BYTE PTR [rax],al
  40d128:	add    BYTE PTR [rax],al
  40d12a:	add    BYTE PTR [rax],al
  40d12c:	call   0x40d20d
  40d131:	add    BYTE PTR [rax],al
  40d133:	add    BYTE PTR [rax],al
  40d135:	fld    QWORD PTR [rax]
  40d137:	add    BYTE PTR [rax],al
  40d139:	add    BYTE PTR [rax],al
  40d13b:	add    BYTE PTR [rbx*8+0x0],dl
  40d142:	add    BYTE PTR [rax],al
  40d144:	xor    ch,bl
  40d146:	add    BYTE PTR [rax],al
  40d148:	add    BYTE PTR [rax],al
  40d14a:	add    BYTE PTR [rax],al
  40d14c:	cmp    al,0xdd
  40d14e:	add    BYTE PTR [rax],al
  40d150:	add    BYTE PTR [rax],al
  40d152:	add    BYTE PTR [rax],al
  40d154:	rex.WR fld QWORD PTR [rax]
  40d157:	add    BYTE PTR [rax],al
  40d159:	add    BYTE PTR [rax],al
  40d15b:	add    BYTE PTR [rbp+rbx*8+0x0],ah
  40d15f:	add    BYTE PTR [rax],al
  40d161:	add    BYTE PTR [rax],al
  40d163:	add    BYTE PTR [rbp+rbx*8+0x0],bh
  40d167:	add    BYTE PTR [rax],al
  40d169:	add    BYTE PTR [rax],al
  40d16b:	add    BYTE PTR [rbp+rbx*8+0x0],dl
  40d172:	add    BYTE PTR [rax],al
  40d174:	mov    al,0xdd
  40d176:	add    BYTE PTR [rax],al
  40d178:	add    BYTE PTR [rax],al
  40d17a:	add    BYTE PTR [rax],al
  40d17c:	int3   
  40d17d:	fld    QWORD PTR [rax]
  40d17f:	add    BYTE PTR [rax],al
  40d181:	add    BYTE PTR [rax],al
  40d183:	add    ah,ah
  40d185:	fld    QWORD PTR [rax]
  40d187:	add    BYTE PTR [rax],al
  40d189:	add    BYTE PTR [rax],al
  40d18b:	add    ah,bh
  40d18d:	fld    QWORD PTR [rax]
  40d18f:	add    BYTE PTR [rax],al
  40d191:	add    BYTE PTR [rax],al
  40d193:	add    BYTE PTR [rax],dl
  40d195:	fiadd  WORD PTR [rax]
  40d197:	add    BYTE PTR [rax],al
  40d199:	add    BYTE PTR [rax],al
  40d19b:	add    BYTE PTR [rsi+rbx*8],ah
  40d19e:	add    BYTE PTR [rax],al
  40d1a0:	add    BYTE PTR [rax],al
  40d1a2:	add    BYTE PTR [rax],al
  40d1a4:	cmp    al,0xde
  40d1a6:	add    BYTE PTR [rax],al
  40d1a8:	add    BYTE PTR [rax],al
  40d1aa:	add    BYTE PTR [rax],al
  40d1ac:	rex.W fiadd WORD PTR [rax]
  40d1af:	add    BYTE PTR [rax],al
  40d1b1:	add    BYTE PTR [rax],al
  40d1b3:	add    BYTE PTR [rsi+rbx*8+0x0],dl
  40d1b7:	add    BYTE PTR [rax],al
  40d1b9:	add    BYTE PTR [rax],al
  40d1bb:	add    BYTE PTR [rsi+rbx*8+0x0],ah
  40d1bf:	add    BYTE PTR [rax],al
  40d1c1:	add    BYTE PTR [rax],al
  40d1c3:	add    BYTE PTR [rsi+rbx*8+0x0],al
  40d1ca:	add    BYTE PTR [rax],al
  40d1cc:	pushf  
  40d1cd:	fiadd  WORD PTR [rax]
  40d1cf:	add    BYTE PTR [rax],al
  40d1d1:	add    BYTE PTR [rax],al
  40d1d3:	add    al,al
  40d1d5:	fiadd  WORD PTR [rax]
  40d1d7:	add    BYTE PTR [rax],al
  40d1d9:	add    BYTE PTR [rax],al
  40d1db:	add    al,ah
  40d1dd:	fiadd  WORD PTR [rax]
  40d1df:	add    BYTE PTR [rax],al
  40d1e1:	add    BYTE PTR [rax],al
  40d1e3:	add    BYTE PTR [rax],cl
  40d1e5:	fild   WORD PTR [rax]
  40d1e7:	add    BYTE PTR [rax],al
  40d1e9:	add    BYTE PTR [rax],al
  40d1eb:	add    BYTE PTR [rdi+rbx*8],dh
  40d1ee:	add    BYTE PTR [rax],al
  40d1f0:	add    BYTE PTR [rax],al
  40d1f2:	add    BYTE PTR [rax],al
  40d1f4:	push   rsp
  40d1f5:	fild   WORD PTR [rax]
  40d1f7:	add    BYTE PTR [rax],al
  40d1f9:	add    BYTE PTR [rax],al
  40d1fb:	add    BYTE PTR [rdi+rbx*8+0x0],dh
  40d1ff:	add    BYTE PTR [rax],al
  40d201:	add    BYTE PTR [rax],al
  40d203:	add    BYTE PTR [rax+0xdf],cl
  40d209:	add    BYTE PTR [rax],al
  40d20b:	add    BYTE PTR [rdi+rbx*8+0x0],ch
  40d212:	add    BYTE PTR [rax],al
  40d214:	(bad)  
  40d215:	fild   WORD PTR [rax]
  40d217:	add    BYTE PTR [rax],al
  40d219:	add    BYTE PTR [rax],al
  40d21b:	add    ah,bl
  40d21d:	fild   WORD PTR [rax]
  40d21f:	add    BYTE PTR [rax],al
  40d221:	add    BYTE PTR [rax],al
  40d223:	add    al,bh
  40d225:	fild   WORD PTR [rax]
  40d227:	add    BYTE PTR [rax],al
  40d229:	add    BYTE PTR [rax],al
  40d22b:	add    BYTE PTR [rax],bl
  40d22d:	loopne 0x40d22f
  40d22f:	add    BYTE PTR [rax],al
  40d231:	add    BYTE PTR [rax],al
  40d233:	add    BYTE PTR [rax+riz*8+0x0],al
  40d237:	add    BYTE PTR [rax],al
  40d239:	add    BYTE PTR [rax],al
  40d23b:	add    BYTE PTR [rax+riz*8+0x0],bl
  40d23f:	add    BYTE PTR [rax],al
  40d241:	add    BYTE PTR [rax],al
  40d243:	add    BYTE PTR [rax+riz*8+0x0],dh
  40d247:	add    BYTE PTR [rax],al
  40d249:	add    BYTE PTR [rax],al
  40d24b:	add    BYTE PTR [rax+riz*8+0x0],cl
  40d252:	add    BYTE PTR [rax],al
  40d254:	cwde   
  40d255:	loopne 0x40d257
  40d257:	add    BYTE PTR [rax],al
  40d259:	add    BYTE PTR [rax],al
  40d25b:	add    BYTE PTR [rax+0xe0],ch
  40d261:	add    BYTE PTR [rax],al
  40d263:	add    BYTE PTR [rax+0xe0],bh
  40d269:	add    BYTE PTR [rax],al
  40d26b:	add    ah,cl
  40d26d:	loopne 0x40d26f
  40d26f:	add    BYTE PTR [rax],al
  40d271:	add    BYTE PTR [rax],al
  40d273:	add    ah,bl
  40d275:	loopne 0x40d277
  40d277:	add    BYTE PTR [rax],al
  40d279:	add    BYTE PTR [rax],al
  40d27b:	add    al,dh
  40d27d:	loopne 0x40d27f
  40d27f:	add    BYTE PTR [rax],al
  40d281:	add    BYTE PTR [rax],al
  40d283:	add    BYTE PTR [rcx+riz*8],al
  40d286:	add    BYTE PTR [rax],al
  40d288:	add    BYTE PTR [rax],al
  40d28a:	add    BYTE PTR [rax],al
  40d28c:	adc    cl,ah
  40d28e:	add    BYTE PTR [rax],al
  40d290:	add    BYTE PTR [rax],al
  40d292:	add    BYTE PTR [rax],al
  40d294:	sub    al,0xe1
  40d296:	add    BYTE PTR [rax],al
  40d298:	add    BYTE PTR [rax],al
  40d29a:	add    BYTE PTR [rax],al
  40d29c:	cmp    al,0xe1
  40d29e:	add    BYTE PTR [rax],al
  40d2a0:	add    BYTE PTR [rax],al
  40d2a2:	add    BYTE PTR [rax],al
  40d2a4:	push   rsp
  40d2a5:	loope  0x40d2a7
  40d2a7:	add    BYTE PTR [rax],al
  40d2a9:	add    BYTE PTR [rax],al
  40d2ab:	add    BYTE PTR [rcx+riz*8+0x0],ah
  40d2af:	add    BYTE PTR [rax],al
  40d2b1:	add    BYTE PTR [rax],al
  40d2b3:	add    BYTE PTR [rax-0x1f],bh
  40d2b6:	add    BYTE PTR [rax],al
  40d2b8:	add    BYTE PTR [rax],al
  40d2ba:	add    BYTE PTR [rax],al
  40d2bc:	mov    cl,ah
  40d2be:	add    BYTE PTR [rax],al
  40d2c0:	add    BYTE PTR [rax],al
  40d2c2:	add    BYTE PTR [rax],al
  40d2c4:	cwde   
  40d2c5:	loope  0x40d2c7
  40d2c7:	add    BYTE PTR [rax],al
  40d2c9:	add    BYTE PTR [rax],al
  40d2cb:	add    BYTE PTR [rcx+riz*8+0x0],ch
  40d2d2:	add    BYTE PTR [rax],al
  40d2d4:	shl    cl,0x0
  40d2d7:	add    BYTE PTR [rax],al
  40d2d9:	add    BYTE PTR [rax],al
  40d2db:	add    al,dl
  40d2dd:	loope  0x40d2df
  40d2df:	add    BYTE PTR [rax],al
  40d2e1:	add    BYTE PTR [rax],al
  40d2e3:	add    al,ah
  40d2e5:	loope  0x40d2e7
  40d2e7:	add    BYTE PTR [rax],al
  40d2e9:	add    BYTE PTR [rax],al
  40d2eb:	add    ah,ch
  40d2ed:	loope  0x40d2ef
  40d2ef:	add    BYTE PTR [rax],al
  40d2f1:	add    BYTE PTR [rax],al
  40d2f3:	add    ah,bh
  40d2f5:	loope  0x40d2f7
  40d2f7:	add    BYTE PTR [rax],al
  40d2f9:	add    BYTE PTR [rax],al
  40d2fb:	add    BYTE PTR [rdx+riz*8],cl
  40d2fe:	add    BYTE PTR [rax],al
  40d300:	add    BYTE PTR [rax],al
  40d302:	add    BYTE PTR [rax],al
  40d304:	and    al,0xe2
  40d306:	add    BYTE PTR [rax],al
  40d308:	add    BYTE PTR [rax],al
  40d30a:	add    BYTE PTR [rax],al
  40d30c:	xor    al,0xe2
  40d30e:	add    BYTE PTR [rax],al
  40d310:	add    BYTE PTR [rax],al
  40d312:	add    BYTE PTR [rax],al
  40d314:	rex.W loop 0x40d317
  40d317:	add    BYTE PTR [rax],al
  40d319:	add    BYTE PTR [rax],al
  40d31b:	add    BYTE PTR [rax-0x1e],bl
  40d31e:	add    BYTE PTR [rax],al
  40d320:	add    BYTE PTR [rax],al
  40d322:	add    BYTE PTR [rax],al
  40d324:	push   0xe2
  40d329:	add    BYTE PTR [rax],al
  40d32b:	add    BYTE PTR [rdx+riz*8+0x0],dh
  40d32f:	add    BYTE PTR [rax],al
  40d331:	add    BYTE PTR [rax],al
  40d333:	add    BYTE PTR [rdx+riz*8+0x0],cl
  40d33a:	add    BYTE PTR [rax],al
  40d33c:	lods   al,BYTE PTR ds:[rsi]
  40d33d:	loop   0x40d33f
  40d33f:	add    BYTE PTR [rax],al
  40d341:	add    BYTE PTR [rax],al
  40d343:	add    ah,al
  40d345:	loop   0x40d347
  40d347:	add    BYTE PTR [rax],al
  40d349:	add    BYTE PTR [rax],al
  40d34b:	add    al,ah
  40d34d:	loop   0x40d34f
  40d34f:	add    BYTE PTR [rax],al
  40d351:	add    BYTE PTR [rax],al
  40d353:	add    al,bh
  40d355:	loop   0x40d357
  40d357:	add    BYTE PTR [rax],al
  40d359:	add    BYTE PTR [rax],al
  40d35b:	add    BYTE PTR [rbx+riz*8],dl
  40d35e:	add    BYTE PTR [rax],al
  40d360:	add    BYTE PTR [rax],al
  40d362:	add    BYTE PTR [rax],al
  40d364:	sub    al,0xe3
  40d366:	add    BYTE PTR [rax],al
  40d368:	add    BYTE PTR [rax],al
  40d36a:	add    BYTE PTR [rax],al
  40d36c:	rex.W jrcxz 0x40d36f
  40d36f:	add    BYTE PTR [rax],al
  40d371:	add    BYTE PTR [rax],al
  40d373:	add    BYTE PTR [rax-0x1d],ah
  40d376:	add    BYTE PTR [rax],al
  40d378:	add    BYTE PTR [rax],al
  40d37a:	add    BYTE PTR [rax],al
  40d37c:	js     0x40d361
  40d37e:	add    BYTE PTR [rax],al
  40d380:	add    BYTE PTR [rax],al
  40d382:	add    BYTE PTR [rax],al
  40d384:	nop
  40d385:	jrcxz  0x40d387
  40d387:	add    BYTE PTR [rax],al
  40d389:	add    BYTE PTR [rax],al
  40d38b:	add    BYTE PTR [rbx+riz*8+0x0],ah
  40d392:	add    BYTE PTR [rax],al
  40d394:	shl    bl,0x0
	...
  40d3a3:	add    ah,dl
  40d3a5:	jrcxz  0x40d3a7
	...
  40d3b3:	add    al,ch
  40d3b5:	jrcxz  0x40d3b7
  40d3b7:	add    BYTE PTR [rax],al
  40d3b9:	add    BYTE PTR [rax],al
  40d3bb:	add    BYTE PTR [rsp+riz*8],cl
  40d3be:	add    BYTE PTR [rax],al
  40d3c0:	add    BYTE PTR [rax],al
  40d3c2:	add    BYTE PTR [rax],al
  40d3c4:	sub    ah,ah
  40d3c6:	add    BYTE PTR [rax],al
  40d3c8:	add    BYTE PTR [rax],al
  40d3ca:	add    BYTE PTR [rax],al
  40d3cc:	cmp    al,0xe4
  40d3ce:	add    BYTE PTR [rax],al
  40d3d0:	add    BYTE PTR [rax],al
  40d3d2:	add    BYTE PTR [rax],al
  40d3d4:	push   rax
  40d3d5:	in     al,0x0
  40d3d7:	add    BYTE PTR [rax],al
  40d3d9:	add    BYTE PTR [rax],al
  40d3db:	add    BYTE PTR [rsp+riz*8+0x0],ah
	...
  40d3eb:	add    BYTE PTR [rsp+riz*8+0x0],bh
  40d3ef:	add    BYTE PTR [rax],al
  40d3f1:	add    BYTE PTR [rax],al
  40d3f3:	add    BYTE PTR [rsp+riz*8+0x0],dl
  40d3fa:	add    BYTE PTR [rax],al
  40d3fc:	lods   al,BYTE PTR ds:[rsi]
  40d3fd:	in     al,0x0
  40d3ff:	add    BYTE PTR [rax],al
  40d401:	add    BYTE PTR [rax],al
  40d403:	add    al,al
  40d405:	in     al,0x0
  40d407:	add    BYTE PTR [rax],al
  40d409:	add    BYTE PTR [rax],al
  40d40b:	add    dh,dl
  40d40d:	in     al,0x0
  40d40f:	add    BYTE PTR [rax],al
  40d411:	add    BYTE PTR [rax],al
  40d413:	add    ah,ch
  40d415:	in     al,0x0
  40d417:	add    BYTE PTR [rax],al
  40d419:	add    BYTE PTR [rax],al
  40d41b:	add    ah,bh
  40d41d:	in     al,0x0
  40d41f:	add    BYTE PTR [rax],al
  40d421:	add    BYTE PTR [rax],al
  40d423:	add    BYTE PTR [rsi],cl
  40d425:	in     eax,0x0
  40d427:	add    BYTE PTR [rax],al
  40d429:	add    BYTE PTR [rax],al
  40d42b:	add    BYTE PTR [rax],ch
  40d42d:	in     eax,0x0
  40d42f:	add    BYTE PTR [rax],al
  40d431:	add    BYTE PTR [rax],al
  40d433:	add    BYTE PTR [rax],bh
  40d435:	in     eax,0x0
  40d437:	add    BYTE PTR [rax],al
  40d439:	add    BYTE PTR [rax],al
  40d43b:	add    BYTE PTR [rbp+riz*8+0x0],dl
  40d43f:	add    BYTE PTR [rax],al
  40d441:	add    BYTE PTR [rax],al
  40d443:	add    BYTE PTR [rbp+riz*8+0x0],ch
  40d447:	add    BYTE PTR [rax],al
  40d449:	add    BYTE PTR [rax],al
  40d44b:	add    BYTE PTR [rsi+0xe5],al
  40d451:	add    BYTE PTR [rax],al
  40d453:	add    BYTE PTR [rbp+riz*8+0x0],bl
  40d45a:	add    BYTE PTR [rax],al
  40d45c:	mov    al,0xe5
  40d45e:	add    BYTE PTR [rax],al
  40d460:	add    BYTE PTR [rax],al
  40d462:	add    BYTE PTR [rax],al
  40d464:	retf   0xe5
  40d467:	add    BYTE PTR [rax],al
  40d469:	add    BYTE PTR [rax],al
  40d46b:	add    dh,bl
  40d46d:	in     eax,0x0
  40d46f:	add    BYTE PTR [rax],al
  40d471:	add    BYTE PTR [rax],al
  40d473:	add    ah,bh
  40d475:	in     eax,0x0
  40d477:	add    BYTE PTR [rax],al
  40d479:	add    BYTE PTR [rax],al
  40d47b:	add    BYTE PTR [rsi+riz*8],al
  40d47e:	add    BYTE PTR [rax],al
  40d480:	add    BYTE PTR [rax],al
  40d482:	add    BYTE PTR [rax],al
  40d484:	sbb    dh,ah
  40d486:	add    BYTE PTR [rax],al
  40d488:	add    BYTE PTR [rax],al
  40d48a:	add    BYTE PTR [rax],al
  40d48c:	es out 0x0,al
  40d48f:	add    BYTE PTR [rax],al
  40d491:	add    BYTE PTR [rax],al
  40d493:	add    BYTE PTR [rdx-0x1a],al
  40d496:	add    BYTE PTR [rax],al
  40d498:	add    BYTE PTR [rax],al
  40d49a:	add    BYTE PTR [rax],al
  40d49c:	push   rsp
  40d49d:	out    0x0,al
	...
  40d4ab:	add    BYTE PTR [rsi+riz*8+0x0],ah
  40d4af:	add    BYTE PTR [rax],al
  40d4b1:	add    BYTE PTR [rax],al
  40d4b3:	add    BYTE PTR [rsi+riz*8+0x0],bh
  40d4b7:	add    BYTE PTR [rax],al
  40d4b9:	add    BYTE PTR [rax],al
  40d4bb:	add    BYTE PTR [rdx+0xe6],cl
  40d4c1:	add    BYTE PTR [rax],al
  40d4c3:	add    BYTE PTR [rdx+0xe6],bl
  40d4c9:	add    BYTE PTR [rax],al
  40d4cb:	add    BYTE PTR [rsi+0xe6],ah
  40d4d1:	add    BYTE PTR [rax],al
  40d4d3:	add    BYTE PTR [rsi+riz*8+0x0],dh
  40d4da:	add    BYTE PTR [rax],al
  40d4dc:	(bad)  
  40d4dd:	out    0x0,al
  40d4df:	add    BYTE PTR [rax],al
  40d4e1:	add    BYTE PTR [rax],al
  40d4e3:	add    dh,dl
  40d4e5:	out    0x0,al
  40d4e7:	add    BYTE PTR [rax],al
  40d4e9:	add    BYTE PTR [rax],al
  40d4eb:	add    dl,ch
  40d4ed:	out    0x0,al
  40d4ef:	add    BYTE PTR [rax],al
  40d4f1:	add    BYTE PTR [rax],al
  40d4f3:	add    ah,dh
  40d4f5:	out    0x0,al
  40d4f7:	add    BYTE PTR [rax],al
  40d4f9:	add    BYTE PTR [rax],al
  40d4fb:	add    BYTE PTR [rdx],al
  40d4fd:	out    0x0,eax
  40d4ff:	add    BYTE PTR [rax],al
  40d501:	add    BYTE PTR [rax],al
  40d503:	add    BYTE PTR [rdi+riz*8],cl
  40d506:	add    BYTE PTR [rax],al
  40d508:	add    BYTE PTR [rax],al
  40d50a:	add    BYTE PTR [rax],al
  40d50c:	(bad)  
  40d50d:	out    0x0,eax
  40d50f:	add    BYTE PTR [rax],al
  40d511:	add    BYTE PTR [rax],al
  40d513:	add    BYTE PTR [rax],ah
  40d515:	out    0x0,eax
  40d517:	add    BYTE PTR [rax],al
  40d519:	add    BYTE PTR [rax],al
  40d51b:	add    BYTE PTR [rdi+riz*8],ch
  40d51e:	add    BYTE PTR [rax],al
  40d520:	add    BYTE PTR [rax],al
  40d522:	add    BYTE PTR [rax],al
  40d524:	xor    al,0xe7
  40d526:	add    BYTE PTR [rax],al
  40d528:	add    BYTE PTR [rax],al
  40d52a:	add    BYTE PTR [rax],al
  40d52c:	ds out 0x0,eax
  40d52f:	add    BYTE PTR [rax],al
  40d531:	add    BYTE PTR [rax],al
  40d533:	add    BYTE PTR [rax-0x19],cl
  40d536:	add    BYTE PTR [rax],al
  40d538:	add    BYTE PTR [rax],al
  40d53a:	add    BYTE PTR [rax],al
  40d53c:	push   rax
  40d53d:	out    0x0,eax
  40d53f:	add    BYTE PTR [rax],al
  40d541:	add    BYTE PTR [rax],al
  40d543:	add    BYTE PTR [rdx-0x19],bl
  40d546:	add    BYTE PTR [rax],al
  40d548:	add    BYTE PTR [rax],al
  40d54a:	add    BYTE PTR [rax],al
  40d54c:	(bad)  
  40d54d:	out    0x0,eax
  40d54f:	add    BYTE PTR [rax],al
  40d551:	add    BYTE PTR [rax],al
  40d553:	add    BYTE PTR [rdi+riz*8+0x0],ch
  40d557:	add    BYTE PTR [rax],al
  40d559:	add    BYTE PTR [rax],al
  40d55b:	add    BYTE PTR [rdi+riz*8+0x0],dh
  40d55f:	add    BYTE PTR [rax],al
  40d561:	add    BYTE PTR [rax],al
  40d563:	add    BYTE PTR [rsi-0x19],bh
  40d566:	add    BYTE PTR [rax],al
  40d568:	add    BYTE PTR [rax],al
  40d56a:	add    BYTE PTR [rax],al
  40d56c:	xchg   bh,ah
  40d56e:	add    BYTE PTR [rax],al
  40d570:	add    BYTE PTR [rax],al
  40d572:	add    BYTE PTR [rax],al
  40d574:	nop
  40d575:	out    0x0,eax
  40d577:	add    BYTE PTR [rax],al
  40d579:	add    BYTE PTR [rax],al
  40d57b:	add    BYTE PTR [rdx+0xe7],bl
  40d581:	add    BYTE PTR [rax],al
  40d583:	add    BYTE PTR [rdi+riz*8+0x0],ah
  40d58a:	add    BYTE PTR [rax],al
  40d58c:	scas   al,BYTE PTR es:[rdi]
  40d58d:	out    0x0,eax
  40d58f:	add    BYTE PTR [rax],al
  40d591:	add    BYTE PTR [rax],al
  40d593:	add    BYTE PTR [rax+0xe7],bh
  40d599:	add    BYTE PTR [rax],al
  40d59b:	add    dl,al
  40d59d:	out    0x0,eax
  40d59f:	add    BYTE PTR [rax],al
  40d5a1:	add    BYTE PTR [rax],al
  40d5a3:	add    ah,cl
  40d5a5:	out    0x0,eax
  40d5a7:	add    BYTE PTR [rax],al
  40d5a9:	add    BYTE PTR [rax],al
  40d5ab:	add    dh,dl
  40d5ad:	out    0x0,eax
  40d5af:	add    BYTE PTR [rax],al
  40d5b1:	add    BYTE PTR [rax],al
  40d5b3:	add    dl,ah
  40d5b5:	out    0x0,eax
  40d5b7:	add    BYTE PTR [rax],al
  40d5b9:	add    BYTE PTR [rax],al
  40d5bb:	add    ah,ch
  40d5bd:	out    0x0,eax
	...
  40d5cb:	add    BYTE PTR [rbx+rbx*8],cl
  40d5ce:	add    BYTE PTR [rax],al
  40d5d0:	add    BYTE PTR [rax],al
  40d5d2:	add    BYTE PTR [rax],al
  40d5d4:	sub    al,0xdb
  40d5d6:	add    BYTE PTR [rax],al
  40d5d8:	add    BYTE PTR [rax],al
  40d5da:	add    BYTE PTR [rax],al
  40d5dc:	rex.R fild DWORD PTR [rax]
  40d5df:	add    BYTE PTR [rax],al
  40d5e1:	add    BYTE PTR [rax],al
  40d5e3:	add    BYTE PTR [rax-0x25],bl
  40d5e6:	add    BYTE PTR [rax],al
  40d5e8:	add    BYTE PTR [rax],al
  40d5ea:	add    BYTE PTR [rax],al
  40d5ec:	jl     0x40d5c9
  40d5ee:	add    BYTE PTR [rax],al
  40d5f0:	add    BYTE PTR [rax],al
  40d5f2:	add    BYTE PTR [rax],al
  40d5f4:	pushf  
  40d5f5:	fild   DWORD PTR [rax]
  40d5f7:	add    BYTE PTR [rax],al
  40d5f9:	add    BYTE PTR [rax],al
  40d5fb:	add    al,al
  40d5fd:	fild   DWORD PTR [rax]
  40d5ff:	add    BYTE PTR [rax],al
  40d601:	add    BYTE PTR [rax],al
  40d603:	add    al,bl
  40d605:	fild   DWORD PTR [rax]
  40d607:	add    BYTE PTR [rax],al
  40d609:	add    BYTE PTR [rax],al
  40d60b:	add    ah,dh
  40d60d:	fild   DWORD PTR [rax]
  40d60f:	add    BYTE PTR [rax],al
  40d611:	add    BYTE PTR [rax],al
  40d613:	add    BYTE PTR [rax],cl
  40d615:	fadd   QWORD PTR [rax]
  40d617:	add    BYTE PTR [rax],al
  40d619:	add    BYTE PTR [rax],al
  40d61b:	add    BYTE PTR [rsp+rbx*8],ah
	...
  40d62a:	add    BYTE PTR [rax],al
  40d62c:	cmp    al,0xdc
  40d62e:	add    BYTE PTR [rax],al
  40d630:	add    BYTE PTR [rax],al
  40d632:	add    BYTE PTR [rax],al
  40d634:	push   rsp
  40d635:	fadd   QWORD PTR [rax]
  40d637:	add    BYTE PTR [rax],al
  40d639:	add    BYTE PTR [rax],al
  40d63b:	add    BYTE PTR [rsp+rbx*8+0x0],ah
  40d63f:	add    BYTE PTR [rax],al
  40d641:	add    BYTE PTR [rax],al
  40d643:	add    BYTE PTR [rax+0xdc],al
  40d649:	add    BYTE PTR [rax],al
  40d64b:	add    BYTE PTR [rsp+rbx*8+0x0],dl
  40d652:	add    BYTE PTR [rax],al
  40d654:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40d655:	fadd   QWORD PTR [rax]
  40d657:	add    BYTE PTR [rax],al
  40d659:	add    BYTE PTR [rax],al
  40d65b:	add    BYTE PTR [rsp+rbx*8+0x0],dh
  40d662:	add    BYTE PTR [rax],al
  40d664:	rcr    ah,1
  40d666:	add    BYTE PTR [rax],al
  40d668:	add    BYTE PTR [rax],al
  40d66a:	add    BYTE PTR [rax],al
  40d66c:	call   0x40d74d
  40d671:	add    BYTE PTR [rax],al
  40d673:	add    BYTE PTR [rax],al
  40d675:	fld    QWORD PTR [rax]
  40d677:	add    BYTE PTR [rax],al
  40d679:	add    BYTE PTR [rax],al
  40d67b:	add    BYTE PTR [rbx*8+0x0],dl
  40d682:	add    BYTE PTR [rax],al
  40d684:	xor    ch,bl
  40d686:	add    BYTE PTR [rax],al
  40d688:	add    BYTE PTR [rax],al
  40d68a:	add    BYTE PTR [rax],al
  40d68c:	cmp    al,0xdd
  40d68e:	add    BYTE PTR [rax],al
  40d690:	add    BYTE PTR [rax],al
  40d692:	add    BYTE PTR [rax],al
  40d694:	rex.WR fld QWORD PTR [rax]
  40d697:	add    BYTE PTR [rax],al
  40d699:	add    BYTE PTR [rax],al
  40d69b:	add    BYTE PTR [rbp+rbx*8+0x0],ah
  40d69f:	add    BYTE PTR [rax],al
  40d6a1:	add    BYTE PTR [rax],al
  40d6a3:	add    BYTE PTR [rbp+rbx*8+0x0],bh
  40d6a7:	add    BYTE PTR [rax],al
  40d6a9:	add    BYTE PTR [rax],al
  40d6ab:	add    BYTE PTR [rbp+rbx*8+0x0],dl
  40d6b2:	add    BYTE PTR [rax],al
  40d6b4:	mov    al,0xdd
  40d6b6:	add    BYTE PTR [rax],al
  40d6b8:	add    BYTE PTR [rax],al
  40d6ba:	add    BYTE PTR [rax],al
  40d6bc:	int3   
  40d6bd:	fld    QWORD PTR [rax]
  40d6bf:	add    BYTE PTR [rax],al
  40d6c1:	add    BYTE PTR [rax],al
  40d6c3:	add    ah,ah
  40d6c5:	fld    QWORD PTR [rax]
  40d6c7:	add    BYTE PTR [rax],al
  40d6c9:	add    BYTE PTR [rax],al
  40d6cb:	add    ah,bh
  40d6cd:	fld    QWORD PTR [rax]
  40d6cf:	add    BYTE PTR [rax],al
  40d6d1:	add    BYTE PTR [rax],al
  40d6d3:	add    BYTE PTR [rax],dl
  40d6d5:	fiadd  WORD PTR [rax]
  40d6d7:	add    BYTE PTR [rax],al
  40d6d9:	add    BYTE PTR [rax],al
  40d6db:	add    BYTE PTR [rsi+rbx*8],ah
  40d6de:	add    BYTE PTR [rax],al
  40d6e0:	add    BYTE PTR [rax],al
  40d6e2:	add    BYTE PTR [rax],al
  40d6e4:	cmp    al,0xde
  40d6e6:	add    BYTE PTR [rax],al
  40d6e8:	add    BYTE PTR [rax],al
  40d6ea:	add    BYTE PTR [rax],al
  40d6ec:	rex.W fiadd WORD PTR [rax]
  40d6ef:	add    BYTE PTR [rax],al
  40d6f1:	add    BYTE PTR [rax],al
  40d6f3:	add    BYTE PTR [rsi+rbx*8+0x0],dl
  40d6f7:	add    BYTE PTR [rax],al
  40d6f9:	add    BYTE PTR [rax],al
  40d6fb:	add    BYTE PTR [rsi+rbx*8+0x0],ah
  40d6ff:	add    BYTE PTR [rax],al
  40d701:	add    BYTE PTR [rax],al
  40d703:	add    BYTE PTR [rsi+rbx*8+0x0],al
  40d70a:	add    BYTE PTR [rax],al
  40d70c:	pushf  
  40d70d:	fiadd  WORD PTR [rax]
  40d70f:	add    BYTE PTR [rax],al
  40d711:	add    BYTE PTR [rax],al
  40d713:	add    al,al
  40d715:	fiadd  WORD PTR [rax]
  40d717:	add    BYTE PTR [rax],al
  40d719:	add    BYTE PTR [rax],al
  40d71b:	add    al,ah
  40d71d:	fiadd  WORD PTR [rax]
  40d71f:	add    BYTE PTR [rax],al
  40d721:	add    BYTE PTR [rax],al
  40d723:	add    BYTE PTR [rax],cl
  40d725:	fild   WORD PTR [rax]
  40d727:	add    BYTE PTR [rax],al
  40d729:	add    BYTE PTR [rax],al
  40d72b:	add    BYTE PTR [rdi+rbx*8],dh
  40d72e:	add    BYTE PTR [rax],al
  40d730:	add    BYTE PTR [rax],al
  40d732:	add    BYTE PTR [rax],al
  40d734:	push   rsp
  40d735:	fild   WORD PTR [rax]
  40d737:	add    BYTE PTR [rax],al
  40d739:	add    BYTE PTR [rax],al
  40d73b:	add    BYTE PTR [rdi+rbx*8+0x0],dh
  40d73f:	add    BYTE PTR [rax],al
  40d741:	add    BYTE PTR [rax],al
  40d743:	add    BYTE PTR [rax+0xdf],cl
  40d749:	add    BYTE PTR [rax],al
  40d74b:	add    BYTE PTR [rdi+rbx*8+0x0],ch
  40d752:	add    BYTE PTR [rax],al
  40d754:	(bad)  
  40d755:	fild   WORD PTR [rax]
  40d757:	add    BYTE PTR [rax],al
  40d759:	add    BYTE PTR [rax],al
  40d75b:	add    ah,bl
  40d75d:	fild   WORD PTR [rax]
  40d75f:	add    BYTE PTR [rax],al
  40d761:	add    BYTE PTR [rax],al
  40d763:	add    al,bh
  40d765:	fild   WORD PTR [rax]
  40d767:	add    BYTE PTR [rax],al
  40d769:	add    BYTE PTR [rax],al
  40d76b:	add    BYTE PTR [rax],bl
  40d76d:	loopne 0x40d76f
  40d76f:	add    BYTE PTR [rax],al
  40d771:	add    BYTE PTR [rax],al
  40d773:	add    BYTE PTR [rax+riz*8+0x0],al
  40d777:	add    BYTE PTR [rax],al
  40d779:	add    BYTE PTR [rax],al
  40d77b:	add    BYTE PTR [rax+riz*8+0x0],bl
  40d77f:	add    BYTE PTR [rax],al
  40d781:	add    BYTE PTR [rax],al
  40d783:	add    BYTE PTR [rax+riz*8+0x0],dh
  40d787:	add    BYTE PTR [rax],al
  40d789:	add    BYTE PTR [rax],al
  40d78b:	add    BYTE PTR [rax+riz*8+0x0],cl
  40d792:	add    BYTE PTR [rax],al
  40d794:	cwde   
  40d795:	loopne 0x40d797
  40d797:	add    BYTE PTR [rax],al
  40d799:	add    BYTE PTR [rax],al
  40d79b:	add    BYTE PTR [rax+0xe0],ch
  40d7a1:	add    BYTE PTR [rax],al
  40d7a3:	add    BYTE PTR [rax+0xe0],bh
  40d7a9:	add    BYTE PTR [rax],al
  40d7ab:	add    ah,cl
  40d7ad:	loopne 0x40d7af
  40d7af:	add    BYTE PTR [rax],al
  40d7b1:	add    BYTE PTR [rax],al
  40d7b3:	add    ah,bl
  40d7b5:	loopne 0x40d7b7
  40d7b7:	add    BYTE PTR [rax],al
  40d7b9:	add    BYTE PTR [rax],al
  40d7bb:	add    al,dh
  40d7bd:	loopne 0x40d7bf
  40d7bf:	add    BYTE PTR [rax],al
  40d7c1:	add    BYTE PTR [rax],al
  40d7c3:	add    BYTE PTR [rcx+riz*8],al
  40d7c6:	add    BYTE PTR [rax],al
  40d7c8:	add    BYTE PTR [rax],al
  40d7ca:	add    BYTE PTR [rax],al
  40d7cc:	adc    cl,ah
  40d7ce:	add    BYTE PTR [rax],al
  40d7d0:	add    BYTE PTR [rax],al
  40d7d2:	add    BYTE PTR [rax],al
  40d7d4:	sub    al,0xe1
  40d7d6:	add    BYTE PTR [rax],al
  40d7d8:	add    BYTE PTR [rax],al
  40d7da:	add    BYTE PTR [rax],al
  40d7dc:	cmp    al,0xe1
  40d7de:	add    BYTE PTR [rax],al
  40d7e0:	add    BYTE PTR [rax],al
  40d7e2:	add    BYTE PTR [rax],al
  40d7e4:	push   rsp
  40d7e5:	loope  0x40d7e7
  40d7e7:	add    BYTE PTR [rax],al
  40d7e9:	add    BYTE PTR [rax],al
  40d7eb:	add    BYTE PTR [rcx+riz*8+0x0],ah
  40d7ef:	add    BYTE PTR [rax],al
  40d7f1:	add    BYTE PTR [rax],al
  40d7f3:	add    BYTE PTR [rax-0x1f],bh
  40d7f6:	add    BYTE PTR [rax],al
  40d7f8:	add    BYTE PTR [rax],al
  40d7fa:	add    BYTE PTR [rax],al
  40d7fc:	mov    cl,ah
  40d7fe:	add    BYTE PTR [rax],al
  40d800:	add    BYTE PTR [rax],al
  40d802:	add    BYTE PTR [rax],al
  40d804:	cwde   
  40d805:	loope  0x40d807
  40d807:	add    BYTE PTR [rax],al
  40d809:	add    BYTE PTR [rax],al
  40d80b:	add    BYTE PTR [rcx+riz*8+0x0],ch
  40d812:	add    BYTE PTR [rax],al
  40d814:	shl    cl,0x0
  40d817:	add    BYTE PTR [rax],al
  40d819:	add    BYTE PTR [rax],al
  40d81b:	add    al,dl
  40d81d:	loope  0x40d81f
  40d81f:	add    BYTE PTR [rax],al
  40d821:	add    BYTE PTR [rax],al
  40d823:	add    al,ah
  40d825:	loope  0x40d827
  40d827:	add    BYTE PTR [rax],al
  40d829:	add    BYTE PTR [rax],al
  40d82b:	add    ah,ch
  40d82d:	loope  0x40d82f
  40d82f:	add    BYTE PTR [rax],al
  40d831:	add    BYTE PTR [rax],al
  40d833:	add    ah,bh
  40d835:	loope  0x40d837
  40d837:	add    BYTE PTR [rax],al
  40d839:	add    BYTE PTR [rax],al
  40d83b:	add    BYTE PTR [rdx+riz*8],cl
  40d83e:	add    BYTE PTR [rax],al
  40d840:	add    BYTE PTR [rax],al
  40d842:	add    BYTE PTR [rax],al
  40d844:	and    al,0xe2
  40d846:	add    BYTE PTR [rax],al
  40d848:	add    BYTE PTR [rax],al
  40d84a:	add    BYTE PTR [rax],al
  40d84c:	xor    al,0xe2
  40d84e:	add    BYTE PTR [rax],al
  40d850:	add    BYTE PTR [rax],al
  40d852:	add    BYTE PTR [rax],al
  40d854:	rex.W loop 0x40d857
  40d857:	add    BYTE PTR [rax],al
  40d859:	add    BYTE PTR [rax],al
  40d85b:	add    BYTE PTR [rax-0x1e],bl
  40d85e:	add    BYTE PTR [rax],al
  40d860:	add    BYTE PTR [rax],al
  40d862:	add    BYTE PTR [rax],al
  40d864:	push   0xe2
  40d869:	add    BYTE PTR [rax],al
  40d86b:	add    BYTE PTR [rdx+riz*8+0x0],dh
  40d86f:	add    BYTE PTR [rax],al
  40d871:	add    BYTE PTR [rax],al
  40d873:	add    BYTE PTR [rdx+riz*8+0x0],cl
  40d87a:	add    BYTE PTR [rax],al
  40d87c:	lods   al,BYTE PTR ds:[rsi]
  40d87d:	loop   0x40d87f
  40d87f:	add    BYTE PTR [rax],al
  40d881:	add    BYTE PTR [rax],al
  40d883:	add    ah,al
  40d885:	loop   0x40d887
  40d887:	add    BYTE PTR [rax],al
  40d889:	add    BYTE PTR [rax],al
  40d88b:	add    al,ah
  40d88d:	loop   0x40d88f
  40d88f:	add    BYTE PTR [rax],al
  40d891:	add    BYTE PTR [rax],al
  40d893:	add    al,bh
  40d895:	loop   0x40d897
  40d897:	add    BYTE PTR [rax],al
  40d899:	add    BYTE PTR [rax],al
  40d89b:	add    BYTE PTR [rbx+riz*8],dl
  40d89e:	add    BYTE PTR [rax],al
  40d8a0:	add    BYTE PTR [rax],al
  40d8a2:	add    BYTE PTR [rax],al
  40d8a4:	sub    al,0xe3
  40d8a6:	add    BYTE PTR [rax],al
  40d8a8:	add    BYTE PTR [rax],al
  40d8aa:	add    BYTE PTR [rax],al
  40d8ac:	rex.W jrcxz 0x40d8af
  40d8af:	add    BYTE PTR [rax],al
  40d8b1:	add    BYTE PTR [rax],al
  40d8b3:	add    BYTE PTR [rax-0x1d],ah
  40d8b6:	add    BYTE PTR [rax],al
  40d8b8:	add    BYTE PTR [rax],al
  40d8ba:	add    BYTE PTR [rax],al
  40d8bc:	js     0x40d8a1
  40d8be:	add    BYTE PTR [rax],al
  40d8c0:	add    BYTE PTR [rax],al
  40d8c2:	add    BYTE PTR [rax],al
  40d8c4:	nop
  40d8c5:	jrcxz  0x40d8c7
  40d8c7:	add    BYTE PTR [rax],al
  40d8c9:	add    BYTE PTR [rax],al
  40d8cb:	add    BYTE PTR [rbx+riz*8+0x0],ah
  40d8d2:	add    BYTE PTR [rax],al
  40d8d4:	shl    bl,0x0
	...
  40d8e3:	add    ah,dl
  40d8e5:	jrcxz  0x40d8e7
	...
  40d8f3:	add    al,ch
  40d8f5:	jrcxz  0x40d8f7
  40d8f7:	add    BYTE PTR [rax],al
  40d8f9:	add    BYTE PTR [rax],al
  40d8fb:	add    BYTE PTR [rsp+riz*8],cl
  40d8fe:	add    BYTE PTR [rax],al
  40d900:	add    BYTE PTR [rax],al
  40d902:	add    BYTE PTR [rax],al
  40d904:	sub    ah,ah
  40d906:	add    BYTE PTR [rax],al
  40d908:	add    BYTE PTR [rax],al
  40d90a:	add    BYTE PTR [rax],al
  40d90c:	cmp    al,0xe4
  40d90e:	add    BYTE PTR [rax],al
  40d910:	add    BYTE PTR [rax],al
  40d912:	add    BYTE PTR [rax],al
  40d914:	push   rax
  40d915:	in     al,0x0
  40d917:	add    BYTE PTR [rax],al
  40d919:	add    BYTE PTR [rax],al
  40d91b:	add    BYTE PTR [rsp+riz*8+0x0],ah
	...
  40d92b:	add    BYTE PTR [rsp+riz*8+0x0],bh
  40d92f:	add    BYTE PTR [rax],al
  40d931:	add    BYTE PTR [rax],al
  40d933:	add    BYTE PTR [rsp+riz*8+0x0],dl
  40d93a:	add    BYTE PTR [rax],al
  40d93c:	lods   al,BYTE PTR ds:[rsi]
  40d93d:	in     al,0x0
  40d93f:	add    BYTE PTR [rax],al
  40d941:	add    BYTE PTR [rax],al
  40d943:	add    al,al
  40d945:	in     al,0x0
  40d947:	add    BYTE PTR [rax],al
  40d949:	add    BYTE PTR [rax],al
  40d94b:	add    dh,dl
  40d94d:	in     al,0x0
  40d94f:	add    BYTE PTR [rax],al
  40d951:	add    BYTE PTR [rax],al
  40d953:	add    ah,ch
  40d955:	in     al,0x0
  40d957:	add    BYTE PTR [rax],al
  40d959:	add    BYTE PTR [rax],al
  40d95b:	add    ah,bh
  40d95d:	in     al,0x0
  40d95f:	add    BYTE PTR [rax],al
  40d961:	add    BYTE PTR [rax],al
  40d963:	add    BYTE PTR [rsi],cl
  40d965:	in     eax,0x0
  40d967:	add    BYTE PTR [rax],al
  40d969:	add    BYTE PTR [rax],al
  40d96b:	add    BYTE PTR [rax],ch
  40d96d:	in     eax,0x0
  40d96f:	add    BYTE PTR [rax],al
  40d971:	add    BYTE PTR [rax],al
  40d973:	add    BYTE PTR [rax],bh
  40d975:	in     eax,0x0
  40d977:	add    BYTE PTR [rax],al
  40d979:	add    BYTE PTR [rax],al
  40d97b:	add    BYTE PTR [rbp+riz*8+0x0],dl
  40d97f:	add    BYTE PTR [rax],al
  40d981:	add    BYTE PTR [rax],al
  40d983:	add    BYTE PTR [rbp+riz*8+0x0],ch
  40d987:	add    BYTE PTR [rax],al
  40d989:	add    BYTE PTR [rax],al
  40d98b:	add    BYTE PTR [rsi+0xe5],al
  40d991:	add    BYTE PTR [rax],al
  40d993:	add    BYTE PTR [rbp+riz*8+0x0],bl
  40d99a:	add    BYTE PTR [rax],al
  40d99c:	mov    al,0xe5
  40d99e:	add    BYTE PTR [rax],al
  40d9a0:	add    BYTE PTR [rax],al
  40d9a2:	add    BYTE PTR [rax],al
  40d9a4:	retf   0xe5
  40d9a7:	add    BYTE PTR [rax],al
  40d9a9:	add    BYTE PTR [rax],al
  40d9ab:	add    dh,bl
  40d9ad:	in     eax,0x0
  40d9af:	add    BYTE PTR [rax],al
  40d9b1:	add    BYTE PTR [rax],al
  40d9b3:	add    ah,bh
  40d9b5:	in     eax,0x0
  40d9b7:	add    BYTE PTR [rax],al
  40d9b9:	add    BYTE PTR [rax],al
  40d9bb:	add    BYTE PTR [rsi+riz*8],al
  40d9be:	add    BYTE PTR [rax],al
  40d9c0:	add    BYTE PTR [rax],al
  40d9c2:	add    BYTE PTR [rax],al
  40d9c4:	sbb    dh,ah
  40d9c6:	add    BYTE PTR [rax],al
  40d9c8:	add    BYTE PTR [rax],al
  40d9ca:	add    BYTE PTR [rax],al
  40d9cc:	es out 0x0,al
  40d9cf:	add    BYTE PTR [rax],al
  40d9d1:	add    BYTE PTR [rax],al
  40d9d3:	add    BYTE PTR [rdx-0x1a],al
  40d9d6:	add    BYTE PTR [rax],al
  40d9d8:	add    BYTE PTR [rax],al
  40d9da:	add    BYTE PTR [rax],al
  40d9dc:	push   rsp
  40d9dd:	out    0x0,al
	...
  40d9eb:	add    BYTE PTR [rsi+riz*8+0x0],ah
  40d9ef:	add    BYTE PTR [rax],al
  40d9f1:	add    BYTE PTR [rax],al
  40d9f3:	add    BYTE PTR [rsi+riz*8+0x0],bh
  40d9f7:	add    BYTE PTR [rax],al
  40d9f9:	add    BYTE PTR [rax],al
  40d9fb:	add    BYTE PTR [rdx+0xe6],cl
  40da01:	add    BYTE PTR [rax],al
  40da03:	add    BYTE PTR [rdx+0xe6],bl
  40da09:	add    BYTE PTR [rax],al
  40da0b:	add    BYTE PTR [rsi+0xe6],ah
  40da11:	add    BYTE PTR [rax],al
  40da13:	add    BYTE PTR [rsi+riz*8+0x0],dh
  40da1a:	add    BYTE PTR [rax],al
  40da1c:	(bad)  
  40da1d:	out    0x0,al
  40da1f:	add    BYTE PTR [rax],al
  40da21:	add    BYTE PTR [rax],al
  40da23:	add    dh,dl
  40da25:	out    0x0,al
  40da27:	add    BYTE PTR [rax],al
  40da29:	add    BYTE PTR [rax],al
  40da2b:	add    dl,ch
  40da2d:	out    0x0,al
  40da2f:	add    BYTE PTR [rax],al
  40da31:	add    BYTE PTR [rax],al
  40da33:	add    ah,dh
  40da35:	out    0x0,al
  40da37:	add    BYTE PTR [rax],al
  40da39:	add    BYTE PTR [rax],al
  40da3b:	add    BYTE PTR [rdx],al
  40da3d:	out    0x0,eax
  40da3f:	add    BYTE PTR [rax],al
  40da41:	add    BYTE PTR [rax],al
  40da43:	add    BYTE PTR [rdi+riz*8],cl
  40da46:	add    BYTE PTR [rax],al
  40da48:	add    BYTE PTR [rax],al
  40da4a:	add    BYTE PTR [rax],al
  40da4c:	(bad)  
  40da4d:	out    0x0,eax
  40da4f:	add    BYTE PTR [rax],al
  40da51:	add    BYTE PTR [rax],al
  40da53:	add    BYTE PTR [rax],ah
  40da55:	out    0x0,eax
  40da57:	add    BYTE PTR [rax],al
  40da59:	add    BYTE PTR [rax],al
  40da5b:	add    BYTE PTR [rdi+riz*8],ch
  40da5e:	add    BYTE PTR [rax],al
  40da60:	add    BYTE PTR [rax],al
  40da62:	add    BYTE PTR [rax],al
  40da64:	xor    al,0xe7
  40da66:	add    BYTE PTR [rax],al
  40da68:	add    BYTE PTR [rax],al
  40da6a:	add    BYTE PTR [rax],al
  40da6c:	ds out 0x0,eax
  40da6f:	add    BYTE PTR [rax],al
  40da71:	add    BYTE PTR [rax],al
  40da73:	add    BYTE PTR [rax-0x19],cl
  40da76:	add    BYTE PTR [rax],al
  40da78:	add    BYTE PTR [rax],al
  40da7a:	add    BYTE PTR [rax],al
  40da7c:	push   rax
  40da7d:	out    0x0,eax
  40da7f:	add    BYTE PTR [rax],al
  40da81:	add    BYTE PTR [rax],al
  40da83:	add    BYTE PTR [rdx-0x19],bl
  40da86:	add    BYTE PTR [rax],al
  40da88:	add    BYTE PTR [rax],al
  40da8a:	add    BYTE PTR [rax],al
  40da8c:	(bad)  
  40da8d:	out    0x0,eax
  40da8f:	add    BYTE PTR [rax],al
  40da91:	add    BYTE PTR [rax],al
  40da93:	add    BYTE PTR [rdi+riz*8+0x0],ch
  40da97:	add    BYTE PTR [rax],al
  40da99:	add    BYTE PTR [rax],al
  40da9b:	add    BYTE PTR [rdi+riz*8+0x0],dh
  40da9f:	add    BYTE PTR [rax],al
  40daa1:	add    BYTE PTR [rax],al
  40daa3:	add    BYTE PTR [rsi-0x19],bh
  40daa6:	add    BYTE PTR [rax],al
  40daa8:	add    BYTE PTR [rax],al
  40daaa:	add    BYTE PTR [rax],al
  40daac:	xchg   bh,ah
  40daae:	add    BYTE PTR [rax],al
  40dab0:	add    BYTE PTR [rax],al
  40dab2:	add    BYTE PTR [rax],al
  40dab4:	nop
  40dab5:	out    0x0,eax
  40dab7:	add    BYTE PTR [rax],al
  40dab9:	add    BYTE PTR [rax],al
  40dabb:	add    BYTE PTR [rdx+0xe7],bl
  40dac1:	add    BYTE PTR [rax],al
  40dac3:	add    BYTE PTR [rdi+riz*8+0x0],ah
  40daca:	add    BYTE PTR [rax],al
  40dacc:	scas   al,BYTE PTR es:[rdi]
  40dacd:	out    0x0,eax
  40dacf:	add    BYTE PTR [rax],al
  40dad1:	add    BYTE PTR [rax],al
  40dad3:	add    BYTE PTR [rax+0xe7],bh
  40dad9:	add    BYTE PTR [rax],al
  40dadb:	add    dl,al
  40dadd:	out    0x0,eax
  40dadf:	add    BYTE PTR [rax],al
  40dae1:	add    BYTE PTR [rax],al
  40dae3:	add    ah,cl
  40dae5:	out    0x0,eax
  40dae7:	add    BYTE PTR [rax],al
  40dae9:	add    BYTE PTR [rax],al
  40daeb:	add    dh,dl
  40daed:	out    0x0,eax
  40daef:	add    BYTE PTR [rax],al
  40daf1:	add    BYTE PTR [rax],al
  40daf3:	add    dl,ah
  40daf5:	out    0x0,eax
  40daf7:	add    BYTE PTR [rax],al
  40daf9:	add    BYTE PTR [rax],al
  40dafb:	add    ah,ch
  40dafd:	out    0x0,eax
	...
  40db0b:	add    dl,bl
  40db0d:	add    BYTE PTR [rdi+0x5f],ah
  40db10:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40db13:	jbe    0x40db7a
  40db15:	jb     0x40db8b
  40db17:	gs jb  0x40db79
  40db1a:	outs   dx,DWORD PTR ds:[rsi]
  40db1b:	jne    0x40db91
  40db1d:	jo     0x40db94
  40db1f:	je     0x40db80
  40db21:	jae    0x40db97
  40db23:	jb     0x40db8a
  40db25:	(bad)  
  40db26:	ins    DWORD PTR es:[rdi],dx
  40db27:	pop    rdi
  40db28:	outs   dx,BYTE PTR ds:[rsi]
  40db29:	gs ja  0x40db2c
  40db2c:	rol    BYTE PTR [rbx],0x67
  40db2f:	pop    rdi
  40db30:	imul   ebp,DWORD PTR [rdi+0x5f],0x6f727265
  40db37:	jb     0x40db98
  40db39:	data16 jb 0x40dbab
  40db3c:	ins    DWORD PTR es:[rdi],dx
  40db3d:	pop    rdi
  40db3e:	gs jb  0x40dbb3
  40db41:	outs   dx,BYTE PTR ds:[rsi]
  40db42:	outs   dx,DWORD PTR ds:[rsi]
  40db43:	add    dl,al
  40db45:	add    esp,DWORD PTR [rdi+0x5f]
  40db48:	imul   ebp,DWORD PTR [rdi+0x5f],0x6f727265
  40db4f:	jb     0x40dbb0
  40db51:	jno    0x40dbc8
  40db53:	(bad)  
  40db54:	jb     0x40dbc1
  40db56:	add    BYTE PTR [rax],al
  40db58:	add    eax,0x6d5f6704
  40db5d:	gs ins DWORD PTR es:[rdi],dx
  40db5f:	outs   dx,DWORD PTR ds:[rsi]
  40db60:	jb     0x40dbdb
  40db62:	pop    rdi
  40db63:	outs   dx,DWORD PTR ds:[rsi]
  40db64:	jne    0x40dbda
  40db66:	jo     0x40dbdd
  40db68:	je     0x40dbc9
  40db6a:	jae    0x40dbe0
  40db6c:	jb     0x40dbd3
  40db6e:	(bad)  
  40db6f:	ins    DWORD PTR es:[rdi],dx
  40db70:	pop    rdi
  40db71:	addr32 gs je 0x40dbd4
  40db75:	jae    0x40dbe0
  40db77:	jp     0x40dbde
  40db79:	add    BYTE PTR [rax],al
  40db7b:	add    BYTE PTR [rdi],al
  40db7d:	add    al,0x67
  40db7f:	pop    rdi
  40db80:	ins    DWORD PTR es:[rdi],dx
  40db81:	gs ins DWORD PTR es:[rdi],dx
  40db83:	outs   dx,DWORD PTR ds:[rsi]
  40db84:	jb     0x40dbff
  40db86:	pop    rdi
  40db87:	outs   dx,DWORD PTR ds:[rsi]
  40db88:	jne    0x40dbfe
  40db8a:	jo     0x40dc01
  40db8c:	je     0x40dbed
  40db8e:	jae    0x40dc04
  40db90:	jb     0x40dbf7
  40db92:	(bad)  
  40db93:	ins    DWORD PTR es:[rdi],dx
  40db94:	pop    rdi
  40db95:	outs   dx,BYTE PTR ds:[rsi]
  40db96:	gs ja  0x40db99
  40db99:	add    BYTE PTR [rax],al
  40db9b:	add    BYTE PTR [rdx],cl
  40db9d:	add    al,0x67
  40db9f:	pop    rdi
  40dba0:	ins    DWORD PTR es:[rdi],dx
  40dba1:	gs ins DWORD PTR es:[rdi],dx
  40dba3:	outs   dx,DWORD PTR ds:[rsi]
  40dba4:	jb     0x40dc1f
  40dba6:	pop    rdi
  40dba7:	outs   dx,DWORD PTR ds:[rsi]
  40dba8:	jne    0x40dc1e
  40dbaa:	jo     0x40dc21
  40dbac:	je     0x40dc0d
  40dbae:	jae    0x40dc24
  40dbb0:	jb     0x40dc17
  40dbb2:	(bad)  
  40dbb3:	ins    DWORD PTR es:[rdi],dx
  40dbb4:	pop    rdi
  40dbb5:	jae    0x40dc2b
  40dbb7:	gs (bad) 
  40dbb9:	ins    BYTE PTR es:[rdi],dx
  40dbba:	pop    rdi
  40dbbb:	fs (bad) 
  40dbbd:	je     0x40dc20
  40dbbf:	add    BYTE PTR [rax+0x6f5f6704],ah
  40dbc5:	jne    0x40dc3b
  40dbc7:	jo     0x40dc3e
  40dbc9:	je     0x40dc2a
  40dbcb:	jae    0x40dc41
  40dbcd:	jb     0x40dc34
  40dbcf:	(bad)  
  40dbd0:	ins    DWORD PTR es:[rdi],dx
  40dbd1:	pop    rdi
  40dbd2:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
  40dbd6:	add    BYTE PTR gs:[rdx+0x6f5f6704],dh
  40dbdd:	jne    0x40dc53
  40dbdf:	jo     0x40dc56
  40dbe1:	je     0x40dc42
  40dbe3:	jae    0x40dc59
  40dbe5:	jb     0x40dc4c
  40dbe7:	(bad)  
  40dbe8:	ins    DWORD PTR es:[rdi],dx
  40dbe9:	pop    rdi
  40dbea:	ja     0x40dc5e
  40dbec:	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x6c6c61
  40dbf4:	pop    rax
  40dbf5:	(bad)  
  40dbf6:	addr32 pop rdi
  40dbf8:	jae    0x40dc6f
  40dbfa:	(bad)  
  40dbfb:	jo     0x40dc6f
  40dbfd:	outs   dx,DWORD PTR ds:[rsi]
  40dbfe:	movsxd esp,DWORD PTR [rbp+0x73]
  40dc01:	jae    0x40dc62
  40dc03:	outs   dx,BYTE PTR ds:[rsi]
  40dc04:	gs ja  0x40dc07
  40dc07:	add    BYTE PTR [rsi+rax*1+0x67],bl
  40dc0b:	pop    rdi
  40dc0c:	jae    0x40dc83
  40dc0e:	(bad)  
  40dc0f:	jo     0x40dc83
  40dc11:	outs   dx,DWORD PTR ds:[rsi]
  40dc12:	movsxd esp,DWORD PTR [rbp+0x73]
  40dc15:	jae    0x40dc76
  40dc17:	ja     0x40dc7a
  40dc19:	imul   esi,DWORD PTR [rdi+rbx*2+0x63],0x6b636568
  40dc21:	add    BYTE PTR [rax],al
  40dc23:	add    BYTE PTR [rax+0x7],dl
  40dc26:	addr32 pop rdi
  40dc28:	jp     0x40dc96
  40dc2a:	imul   esp,DWORD PTR [rdx+0x5f],0x706d6f63
  40dc31:	jb     0x40dc98
  40dc33:	jae    0x40dca8
  40dc35:	outs   dx,DWORD PTR ds:[rsi]
  40dc36:	jb     0x40dc97
  40dc38:	outs   dx,BYTE PTR ds:[rsi]
  40dc39:	gs ja  0x40dc3c
  40dc3c:	add    DWORD PTR [rax],eax
  40dc3e:	pop    rdi
  40dc3f:	ins    BYTE PTR es:[edi],dx
  40dc41:	imul   esp,DWORD PTR [rdx+0x5f],0x5f746567
  40dc48:	ins    BYTE PTR es:[rdi],dx
  40dc49:	outs   dx,DWORD PTR ds:[rsi]
  40dc4a:	movsxd esp,DWORD PTR [rcx+0x6c]
  40dc4d:	gs pop rdi
  40dc4f:	imul   esi,DWORD PTR fs:[rdx+0x0],0x67001f00
  40dc57:	pop    rdi
  40dc58:	(bad)  
  40dc59:	jae    0x40dcbe
  40dc5b:	imul   ebp,DWORD PTR [rcx+0x5f],0x6c626174
  40dc62:	add    BYTE PTR gs:[rax],ch
  40dc65:	add    BYTE PTR [rdi+0x5f],ah
  40dc68:	(bad)  
  40dc69:	jae    0x40dcde
  40dc6b:	gs jb  0x40dce2
  40dc6e:	imul   ebp,DWORD PTR [rdi+0x6e],0x73656d5f
  40dc75:	jae    0x40dcd8
  40dc77:	addr32 gs pop rdi
  40dc7a:	gs js  0x40dced
  40dc7d:	jb     0x40dc7f
  40dc7f:	add    BYTE PTR [rbp+0x625f6700],cl
  40dc85:	jne    0x40dcf0
  40dc87:	ins    BYTE PTR es:[rdi],dx
  40dc88:	fs pop rdi
  40dc8a:	imul   bp,WORD PTR [rbp+riz*2+0x6e],0x6d61
  40dc91:	add    BYTE PTR gs:[rax],al
  40dc94:	pop    QWORD PTR [rax]
  40dc96:	addr32 pop rdi
  40dc98:	(bad)  
  40dc99:	jne    0x40dd04
  40dc9b:	ins    BYTE PTR es:[rdi],dx
  40dc9c:	fs pop rdi
  40dc9e:	jo     0x40dd01
  40dca0:	je     0x40dd0a
  40dca2:	add    BYTE PTR [rax],al
  40dca4:	ret    0x6700
  40dca7:	pop    rdi
  40dca8:	movsxd ebp,DWORD PTR [rbp+riz*2+0x61]
  40dcac:	jb     0x40dd0d
  40dcae:	gs jb  0x40dd23
  40dcb1:	outs   dx,DWORD PTR ds:[rsi]
  40dcb2:	jb     0x40dcb4
  40dcb4:	imul   eax,DWORD PTR [rcx],0x69665f67
  40dcba:	ins    BYTE PTR es:[rdi],dx
  40dcbb:	gs pop rdi
  40dcbd:	addr32 gs je 0x40dd20
  40dcc1:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40dcc4:	je     0x40dd2b
  40dcc6:	outs   dx,BYTE PTR ds:[rsi]
  40dcc7:	je     0x40dd3c
  40dcc9:	pop    rdi
  40dcca:	jne    0x40dd40
  40dccc:	data16 cmp BYTE PTR [rax],al
  40dccf:	add    BYTE PTR [rdx+0x1],ch
  40dcd2:	addr32 pop rdi
  40dcd4:	imul   bp,WORD PTR [rbp+riz*2+0x5f],0x706f
  40dcdb:	outs   dx,BYTE PTR gs:[rsi]
  40dcdd:	pop    rdi
  40dcde:	je     0x40dd4d
  40dce0:	jo     0x40dd41
  40dce2:	jne    0x40dd58
  40dce4:	data16 cmp BYTE PTR [rax],al
  40dce7:	add    BYTE PTR [rcx+rax*1+0x67],ch
  40dceb:	pop    rdi
  40dcec:	imul   bp,WORD PTR [rbp+riz*2+0x5f],0x6573
  40dcf3:	je     0x40dd54
  40dcf5:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40dcf8:	je     0x40dd5f
  40dcfa:	outs   dx,BYTE PTR ds:[rsi]
  40dcfb:	je     0x40dd70
  40dcfd:	add    BYTE PTR [rax],al
  40dcff:	add    BYTE PTR [rbp+0x1],ch
  40dd02:	addr32 pop rdi
  40dd04:	imul   bp,WORD PTR [rbp+riz*2+0x5f],0x6574
  40dd0b:	jae    0x40dd81
  40dd0d:	pop    rdi
  40dd0e:	jne    0x40dd84
  40dd10:	data16 cmp BYTE PTR [rax],al
  40dd13:	add    BYTE PTR [rcx+rax*1+0x67],dh
  40dd17:	pop    rdi
  40dd18:	imul   bp,WORD PTR [rsi+0x64],0x705f
  40dd1e:	jb     0x40dd8f
  40dd20:	addr32 jb 0x40dd84
  40dd23:	ins    DWORD PTR es:[rdi],dx
  40dd24:	pop    rdi
  40dd25:	imul   ebp,DWORD PTR [rsi+0x5f],0x68746170
  40dd2c:	add    BYTE PTR [rax],al
  40dd2e:	add    BYTE PTR [rax],al
  40dd30:	jp     0x40dd33
  40dd32:	addr32 pop rdi
  40dd34:	data16 jb 0x40dd9c
  40dd37:	add    BYTE PTR gs:[rax],al
  40dd3a:	add    BYTE PTR [rax],al
  40dd3c:	xchg   ebp,eax
  40dd3d:	add    DWORD PTR [rdi+0x5f],esp
  40dd40:	addr32 gs je 0x40dda9
  40dd44:	outs   dx,BYTE PTR ds:[rsi]
  40dd45:	jbe    0x40dda6
  40dd47:	jne    0x40ddbd
  40dd49:	data16 cmp BYTE PTR [rax],al
  40dd4c:	cwde   
  40dd4d:	add    DWORD PTR [rdi+0x5f],esp
  40dd50:	push   0x5f687361
  40dd55:	je     0x40ddb8
  40dd57:	(bad)  
  40dd58:	ins    BYTE PTR es:[rdi],dx
  40dd59:	gs pop rdi
  40dd5b:	fs gs jae 0x40ddd3
  40dd5f:	jb     0x40ddd0
  40dd61:	jns    0x40dd63
  40dd63:	add    BYTE PTR [rdx+0x685f6701],bl
  40dd69:	(bad)  
  40dd6a:	jae    0x40ddd4
  40dd6c:	pop    rdi
  40dd6d:	je     0x40ddd0
  40dd6f:	(bad)  
  40dd70:	ins    BYTE PTR es:[rdi],dx
  40dd71:	gs pop rdi
  40dd73:	outs   dx,WORD PTR ds:[rsi]
  40dd75:	jb     0x40dddc
  40dd77:	(bad)  
  40dd78:	movsxd ebp,DWORD PTR [rax+0x0]
  40dd7b:	add    BYTE PTR [rax+0x685f6701],ah
  40dd81:	(bad)  
  40dd82:	jae    0x40ddec
  40dd84:	pop    rdi
  40dd85:	je     0x40dde8
  40dd87:	(bad)  
  40dd88:	ins    BYTE PTR es:[rdi],dx
  40dd89:	gs pop rdi
  40dd8b:	imul   ebp,DWORD PTR [rsi+0x73],0x747265
  40dd92:	add    BYTE PTR [rax],al
  40dd94:	movabs ds:0x5f687361685f6701,al
  40dd9d:	je     0x40de00
  40dd9f:	(bad)  
  40dda0:	ins    BYTE PTR es:[rdi],dx
  40dda1:	gs pop rdi
  40dda3:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x696e695f
  40ddab:	je     0x40ddad
  40ddad:	add    BYTE PTR [rax],al
  40ddaf:	add    BYTE PTR [rbx+0x685f6701],ah
  40ddb5:	(bad)  
  40ddb6:	jae    0x40de20
  40ddb8:	pop    rdi
  40ddb9:	je     0x40de1c
  40ddbb:	(bad)  
  40ddbc:	ins    BYTE PTR es:[rdi],dx
  40ddbd:	gs pop rdi
  40ddbf:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x78656e5f
  40ddc7:	je     0x40ddc9
  40ddc9:	add    BYTE PTR [rax],al
  40ddcb:	add    BYTE PTR [rdi+0x685f6701],ah
  40ddd1:	(bad)  
  40ddd2:	jae    0x40de3c
  40ddd4:	pop    rdi
  40ddd5:	je     0x40de38
  40ddd7:	(bad)  
  40ddd8:	ins    BYTE PTR es:[rdi],dx
  40ddd9:	gs pop rdi
  40dddb:	ins    BYTE PTR es:[rdi],dx
  40dddc:	outs   dx,DWORD PTR ds:[rsi]
  40dddd:	outs   dx,DWORD PTR ds:[rsi]
  40ddde:	imul   esi,DWORD PTR [rbp+0x70],0x0
  40dde2:	add    BYTE PTR [rax],al
  40dde4:	stos   BYTE PTR es:[rdi],al
  40dde5:	add    DWORD PTR [rdi+0x5f],esp
  40dde8:	push   0x5f687361
  40dded:	je     0x40de50
  40ddef:	(bad)  
  40ddf0:	ins    BYTE PTR es:[rdi],dx
  40ddf1:	gs pop rdi
  40ddf3:	outs   dx,BYTE PTR ds:[rsi]
  40ddf4:	gs ja  0x40de56
  40ddf7:	data16 jne 0x40de66
  40ddfa:	ins    BYTE PTR es:[rdi],dx
  40ddfb:	add    BYTE PTR [rbx+0x685f6701],ch
  40de01:	(bad)  
  40de02:	jae    0x40de6c
  40de04:	pop    rdi
  40de05:	je     0x40de68
  40de07:	(bad)  
  40de08:	ins    BYTE PTR es:[rdi],dx
  40de09:	gs pop rdi
  40de0b:	jb     0x40de72
  40de0d:	data16 add BYTE PTR [rax],al
  40de10:	scas   eax,DWORD PTR es:[rdi]
  40de11:	add    DWORD PTR [rdi+0x5f],esp
  40de14:	push   0x5f687361
  40de19:	je     0x40de7c
  40de1b:	(bad)  
  40de1c:	ins    BYTE PTR es:[rdi],dx
  40de1d:	gs pop rdi
  40de1f:	jae    0x40de8a
  40de21:	jp     0x40de88
  40de23:	add    BYTE PTR [rdx+0x685f6701],dh
  40de29:	(bad)  
  40de2a:	jae    0x40de94
  40de2c:	pop    rdi
  40de2d:	je     0x40de90
  40de2f:	(bad)  
  40de30:	ins    BYTE PTR es:[rdi],dx
  40de31:	gs pop rdi
  40de33:	jne    0x40dea3
  40de35:	jb     0x40de9c
  40de37:	data16 add BYTE PTR [rax],al
  40de3a:	add    BYTE PTR [rax],al
  40de3c:	xchg   ebp,eax
  40de3d:	add    ah,BYTE PTR [rdi+0x5f]
  40de40:	ins    DWORD PTR es:[rdi],dx
  40de41:	(bad)  
  40de42:	ins    BYTE PTR es:[rdi],dx
  40de43:	ins    BYTE PTR es:[rdi],dx
  40de44:	outs   dx,DWORD PTR ds:[rsi]
  40de45:	movsxd eax,DWORD PTR [rax]
  40de47:	add    BYTE PTR [rsi+0x6d5f6702],dl
  40de4d:	(bad)  
  40de4e:	ins    BYTE PTR es:[rdi],dx
  40de4f:	ins    BYTE PTR es:[rdi],dx
  40de50:	outs   dx,DWORD PTR ds:[rsi]
  40de51:	movsxd esi,DWORD PTR [rax]
  40de53:	add    BYTE PTR [rdi+0x6d5f6702],dl
  40de59:	(bad)  
  40de5a:	ins    BYTE PTR es:[rdi],dx
  40de5b:	ins    BYTE PTR es:[rdi],dx
  40de5c:	outs   dx,DWORD PTR ds:[rsi]
  40de5d:	movsxd esi,DWORD PTR [rax]
  40de5f:	pop    rdi
  40de60:	outs   dx,BYTE PTR ds:[rsi]
  40de61:	add    BYTE PTR [rax],al
  40de63:	add    BYTE PTR [rcx+0x6d5f6702],ah
  40de69:	(bad)  
  40de6a:	jb     0x40ded7
  40de6c:	jne    0x40dede
  40de6e:	pop    rdi
  40de6f:	movsxd ebp,DWORD PTR [rdi+0x6c]
  40de72:	ins    BYTE PTR es:[rdi],dx
  40de73:	movsxd esi,DWORD PTR gs:[rdi+rbx*2+0x61]
  40de78:	je     0x40deee
  40de7a:	jb     0x40dee5
  40de7c:	(bad)  
  40de7d:	jne    0x40def3
  40de7f:	gs jae 0x40de82
  40de82:	add    BYTE PTR [rax],al
  40de84:	movabs ds:0x756b72616d5f6702,al
  40de8d:	jo     0x40deee
  40de8f:	gs jb  0x40df04
  40de92:	outs   dx,DWORD PTR ds:[rsi]
  40de93:	jb     0x40def4
  40de95:	jno    0x40df0c
  40de97:	(bad)  
  40de98:	jb     0x40df05
  40de9a:	add    BYTE PTR [rax],al
  40de9c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40de9d:	add    ah,BYTE PTR [rdi+0x5f]
  40dea0:	ins    DWORD PTR es:[rdi],dx
  40dea1:	(bad)  
  40dea2:	jb     0x40df0f
  40dea4:	jne    0x40df16
  40dea6:	pop    rdi
  40dea7:	jo     0x40df0a
  40dea9:	jb     0x40df1e
  40deab:	gs pop rdi
  40dead:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40deb0:	je     0x40df17
  40deb2:	js     0x40df28
  40deb4:	pop    rdi
  40deb5:	outs   dx,BYTE PTR gs:[rsi]
  40deb7:	fs pop rdi
  40deb9:	jo     0x40df1c
  40debb:	jb     0x40df30
  40debd:	add    BYTE PTR gs:[rax],al
  40dec0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  40dec1:	add    ah,BYTE PTR [rdi+0x5f]
  40dec4:	ins    DWORD PTR es:[rdi],dx
  40dec5:	(bad)  
  40dec6:	jb     0x40df33
  40dec8:	jne    0x40df3a
  40deca:	pop    rdi
  40decb:	jo     0x40df2e
  40decd:	jb     0x40df42
  40decf:	gs pop rdi
  40ded1:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40ded4:	je     0x40df3b
  40ded6:	js     0x40df4c
  40ded8:	pop    rdi
  40ded9:	data16 jb 0x40df41
  40dedc:	add    BYTE PTR gs:[rax],al
  40dedf:	add    BYTE PTR [rsi+0x6d5f6702],ah
  40dee5:	(bad)  
  40dee6:	jb     0x40df53
  40dee8:	jne    0x40df5a
  40deea:	pop    rdi
  40deeb:	jo     0x40df4e
  40deed:	jb     0x40df62
  40deef:	gs pop rdi
  40def1:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40def4:	je     0x40df5b
  40def6:	js     0x40df6c
  40def8:	pop    rdi
  40def9:	addr32 gs je 0x40df5c
  40defd:	gs ins BYTE PTR es:[rdi],dx
  40deff:	gs ins DWORD PTR es:[rdi],dx
  40df01:	outs   dx,BYTE PTR gs:[rsi]
  40df03:	je     0x40df05
  40df05:	add    BYTE PTR [rax],al
  40df07:	add    BYTE PTR [rdi+0x6d5f6702],ah
  40df0d:	(bad)  
  40df0e:	jb     0x40df7b
  40df10:	jne    0x40df82
  40df12:	pop    rdi
  40df13:	jo     0x40df76
  40df15:	jb     0x40df8a
  40df17:	gs pop rdi
  40df19:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40df1c:	je     0x40df83
  40df1e:	js     0x40df94
  40df20:	pop    rdi
  40df21:	addr32 gs je 0x40df84
  40df25:	gs ins BYTE PTR es:[rdi],dx
  40df27:	gs ins DWORD PTR es:[rdi],dx
  40df29:	outs   dx,BYTE PTR gs:[rsi]
  40df2b:	je     0x40df8c
  40df2d:	jae    0x40dfa3
  40df2f:	(bad)  
  40df30:	movsxd ebp,DWORD PTR [rbx+0x0]
  40df33:	add    BYTE PTR [rdx+0x6d5f6702],ch
  40df39:	(bad)  
  40df3a:	jb     0x40dfa7
  40df3c:	jne    0x40dfae
  40df3e:	pop    rdi
  40df3f:	jo     0x40dfa2
  40df41:	jb     0x40dfb6
  40df43:	gs pop rdi
  40df45:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40df48:	je     0x40dfaf
  40df4a:	js     0x40dfc0
  40df4c:	pop    rdi
  40df4d:	outs   dx,BYTE PTR ds:[rsi]
  40df4e:	gs ja  0x40df51
  40df51:	add    BYTE PTR [rax],al
  40df53:	add    BYTE PTR [rbx+0x6d5f6702],ch
  40df59:	(bad)  
  40df5a:	jb     0x40dfc7
  40df5c:	jne    0x40dfce
  40df5e:	pop    rdi
  40df5f:	jo     0x40dfc2
  40df61:	jb     0x40dfd6
  40df63:	gs pop rdi
  40df65:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40df68:	je     0x40dfcf
  40df6a:	js     0x40dfe0
  40df6c:	pop    rdi
  40df6d:	jo     0x40dfd0
  40df6f:	jb     0x40dfe4
  40df71:	add    BYTE PTR gs:[rax],al
  40df74:	(bad)  
  40df75:	add    ah,BYTE PTR [rdi+0x5f]
  40df78:	ins    DWORD PTR es:[rdi],dx
  40df79:	imul   esi,DWORD PTR [rbx+0x74],0x65
  40df7d:	ins    DWORD PTR es:[rdi],dx
  40df7e:	jo     0x40dfdf
  40df80:	jne    0x40dff6
  40df82:	data16 cmp BYTE PTR [rax],al
  40df85:	add    BYTE PTR [rax],al
  40df87:	add    BYTE PTR [rcx],al
  40df89:	add    esp,DWORD PTR [rdi+0x5f]
  40df8c:	outs   dx,DWORD PTR ds:[rsi]
  40df8d:	jo     0x40e003
  40df8f:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e6f635f
  40df96:	je     0x40dffd
  40df98:	js     0x40e00e
  40df9a:	pop    rdi
  40df9b:	(bad)  
  40df9c:	fs fs pop rdi
  40df9f:	ins    DWORD PTR es:[rdi],dx
  40dfa0:	(bad)  
  40dfa1:	imul   ebp,DWORD PTR [rsi+0x5f],0x72746e65
  40dfa8:	imul   esp,DWORD PTR [rbp+0x73],0x67030200
  40dfaf:	pop    rdi
  40dfb0:	outs   dx,DWORD PTR ds:[rsi]
  40dfb1:	jo     0x40e027
  40dfb3:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e6f635f
  40dfba:	je     0x40e021
  40dfbc:	js     0x40e032
  40dfbe:	pop    rdi
  40dfbf:	data16 jb 0x40e027
  40dfc2:	add    BYTE PTR gs:[rdx],cl
  40dfc5:	add    esp,DWORD PTR [rdi+0x5f]
  40dfc8:	outs   dx,DWORD PTR ds:[rsi]
  40dfc9:	jo     0x40e03f
  40dfcb:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e6f635f
  40dfd2:	je     0x40e039
  40dfd4:	js     0x40e04a
  40dfd6:	pop    rdi
  40dfd7:	outs   dx,BYTE PTR ds:[rsi]
  40dfd8:	gs ja  0x40dfdb
  40dfdb:	add    BYTE PTR [rbx],cl
  40dfdd:	add    esp,DWORD PTR [rdi+0x5f]
  40dfe0:	outs   dx,DWORD PTR ds:[rsi]
  40dfe1:	jo     0x40e057
  40dfe3:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e6f635f
  40dfea:	je     0x40e051
  40dfec:	js     0x40e062
  40dfee:	pop    rdi
  40dfef:	jo     0x40e052
  40dff1:	jb     0x40e066
  40dff3:	add    BYTE PTR gs:[rax],al
  40dff6:	add    BYTE PTR [rax],al
  40dff8:	adc    al,BYTE PTR [rbx]
  40dffa:	addr32 pop rdi
  40dffc:	outs   dx,DWORD PTR ds:[rsi]
  40dffd:	jo     0x40e073
  40dfff:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e6f635f
  40e006:	je     0x40e06d
  40e008:	js     0x40e07e
  40e00a:	pop    rdi
  40e00b:	jae    0x40e072
  40e00d:	je     0x40e06e
  40e00f:	jae    0x40e086
  40e011:	ins    DWORD PTR es:[rdi],dx
  40e012:	ins    DWORD PTR es:[rdi],dx
  40e013:	(bad)  
  40e014:	jb     0x40e08f
  40e016:	add    BYTE PTR [rax],al
  40e018:	adc    al,0x3
  40e01a:	addr32 pop rdi
  40e01c:	outs   dx,DWORD PTR ds:[rsi]
  40e01d:	jo     0x40e093
  40e01f:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e6f635f
  40e026:	je     0x40e08d
  40e028:	js     0x40e09e
  40e02a:	pop    rdi
  40e02b:	jae    0x40e092
  40e02d:	je     0x40e08e
  40e02f:	je     0x40e0a3
  40e031:	(bad)  
  40e032:	outs   dx,BYTE PTR ds:[rsi]
  40e033:	jae    0x40e0a1
  40e035:	(bad)  
  40e036:	je     0x40e0a1
  40e038:	outs   dx,DWORD PTR ds:[rsi]
  40e039:	outs   dx,BYTE PTR ds:[rsi]
  40e03a:	pop    rdi
  40e03b:	outs   dx,DWORD PTR fs:[rsi]
  40e03d:	ins    DWORD PTR es:[rdi],dx
  40e03e:	(bad)  
  40e03f:	imul   ebp,DWORD PTR [rsi+0x0],0x3200000
  40e046:	addr32 pop rdi
  40e048:	jo     0x40e0ab
  40e04a:	je     0x40e0b4
  40e04c:	pop    rdi
  40e04d:	addr32 gs je 0x40e0b0
  40e051:	(bad)  
  40e053:	jae    0x40e0ba
  40e055:	outs   dx,BYTE PTR ds:[rsi]
  40e056:	(bad)  
  40e057:	ins    DWORD PTR es:[rdi],dx
  40e058:	add    BYTE PTR gs:[rax],al
  40e05b:	add    BYTE PTR [rcx],ah
  40e05d:	add    esp,DWORD PTR [rdi+0x5f]
  40e060:	jo     0x40e0c3
  40e062:	je     0x40e0cc
  40e064:	pop    rdi
  40e065:	addr32 gs je 0x40e0c8
  40e069:	imul   esi,DWORD PTR fs:[rdx+0x6e],0x656d61
  40e071:	add    BYTE PTR [rax],al
  40e073:	add    BYTE PTR [rdx],ah
  40e075:	add    esp,DWORD PTR [rdi+0x5f]
  40e078:	jo     0x40e0db
  40e07a:	je     0x40e0e4
  40e07c:	pop    rdi
  40e07d:	imul   esi,DWORD PTR [rbx+0x5f],0x6f736261
  40e084:	ins    BYTE PTR es:[rdi],dx
  40e085:	jne    0x40e0fb
  40e087:	add    BYTE PTR gs:[rax],al
  40e08a:	add    BYTE PTR [rax],al
  40e08c:	(bad)  
  40e08d:	add    esp,DWORD PTR [rdi+0x5f]
  40e090:	jo     0x40e104
  40e092:	imul   ebp,DWORD PTR [rsi+0x74],0x30000000
  40e099:	add    esp,DWORD PTR [rdi+0x5f]
  40e09c:	jo     0x40e110
  40e09e:	imul   ebp,DWORD PTR [rsi+0x74],0x727265
  40e0a5:	add    BYTE PTR [rax],al
  40e0a7:	add    BYTE PTR [rdi+0x3],dl
  40e0aa:	addr32 pop rdi
  40e0ac:	jno    0x40e123
  40e0ae:	gs jne 0x40e116
  40e0b1:	pop    rdi
  40e0b2:	data16 jb 0x40e11a
  40e0b5:	add    BYTE PTR gs:[rax],al
  40e0b8:	pop    rdi
  40e0b9:	add    esp,DWORD PTR [rdi+0x5f]
  40e0bc:	jno    0x40e133
  40e0be:	gs jne 0x40e126
  40e0c1:	pop    rdi
  40e0c2:	imul   esi,DWORD PTR [rbx+0x5f],0x74706d65
  40e0c9:	jns    0x40e0cb
  40e0cb:	add    BYTE PTR [rcx+0x3],ah
  40e0ce:	addr32 pop rdi
  40e0d0:	jno    0x40e147
  40e0d2:	gs jne 0x40e13a
  40e0d5:	pop    rdi
  40e0d6:	outs   dx,BYTE PTR ds:[rsi]
  40e0d7:	gs ja  0x40e0da
  40e0da:	add    BYTE PTR [rax],al
  40e0dc:	push   0x715f6703
  40e0e1:	jne    0x40e148
  40e0e3:	jne    0x40e14a
  40e0e5:	pop    rdi
  40e0e6:	jo     0x40e157
  40e0e8:	jo     0x40e149
  40e0ea:	push   0x646165
  40e0ef:	add    BYTE PTR [rdx+0x3],dh
  40e0f2:	addr32 pop rdi
  40e0f4:	jno    0x40e16b
  40e0f6:	gs jne 0x40e15e
  40e0f9:	pop    rdi
  40e0fa:	jo     0x40e171
  40e0fc:	jae    0x40e166
  40e0fe:	pop    rdi
  40e0ff:	je     0x40e162
  40e101:	imul   ebp,DWORD PTR [rax+rax*1-0x77],0x725f6703
  40e109:	gs (bad) 
  40e10b:	ins    BYTE PTR es:[rdi],dx
  40e10c:	ins    BYTE PTR es:[rdi],dx
  40e10d:	outs   dx,DWORD PTR ds:[rsi]
  40e10e:	movsxd eax,DWORD PTR [rax]
  40e110:	mov    dh,0x3
  40e112:	addr32 pop rdi
  40e114:	jb     0x40e17b
  40e116:	je     0x40e18d
  40e118:	jb     0x40e188
  40e11a:	pop    rdi
  40e11b:	imul   esp,DWORD PTR [rsi+0x5f],0x6c696166
  40e122:	pop    rdi
  40e123:	ja     0x40e186
  40e125:	jb     0x40e195
  40e127:	imul   ebp,DWORD PTR [rsi+0x67],0x3fc0000
  40e12e:	addr32 pop rdi
  40e130:	jae    0x40e197
  40e132:	je     0x40e193
  40e134:	gs jb  0x40e1a9
  40e137:	outs   dx,DWORD PTR ds:[rsi]
  40e138:	jb     0x40e13a
  40e13a:	add    BYTE PTR [rax],al
  40e13c:	std    
  40e13d:	add    esp,DWORD PTR [rdi+0x5f]
  40e140:	jae    0x40e1a7
  40e142:	je     0x40e1a3
  40e144:	gs jb  0x40e1b9
  40e147:	outs   dx,DWORD PTR ds:[rsi]
  40e148:	jb     0x40e1a9
  40e14a:	ins    BYTE PTR es:[rdi],dx
  40e14b:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x6c61
  40e153:	add    BYTE PTR [rsi],al
  40e155:	add    al,0x67
  40e157:	pop    rdi
  40e158:	jae    0x40e1c6
  40e15a:	imul   esp,DWORD PTR [rbx+0x65],0x6c6c615f
  40e161:	outs   dx,DWORD PTR ds:[rsi]
  40e162:	movsxd eax,DWORD PTR [rax]
  40e164:	(bad)  
  40e165:	add    al,0x67
  40e167:	pop    rdi
  40e168:	jae    0x40e1d6
  40e16a:	imul   esp,DWORD PTR [rbx+0x65],0x6c6c615f
  40e171:	outs   dx,DWORD PTR ds:[rsi]
  40e172:	movsxd esi,DWORD PTR [rax]
  40e174:	add    BYTE PTR [rax],al
  40e176:	add    BYTE PTR [rax],al
  40e178:	or     DWORD PTR [rdi+riz*2],eax
  40e17b:	pop    rdi
  40e17c:	jae    0x40e1ea
  40e17e:	imul   esp,DWORD PTR [rbx+0x65],0x6572665f
  40e185:	xor    DWORD PTR gs:[rax],eax
  40e188:	outs   dx,BYTE PTR ds:[rsi]
  40e189:	add    al,0x67
  40e18b:	pop    rdi
  40e18c:	jae    0x40e202
  40e18e:	jb     0x40e1ef
  40e190:	gs jno 0x40e208
  40e193:	(bad)  
  40e194:	ins    BYTE PTR es:[rdi],dx
  40e195:	add    BYTE PTR [rax],al
  40e197:	add    BYTE PTR [rdi+0x4],ch
  40e19a:	addr32 pop rdi
  40e19c:	jae    0x40e212
  40e19e:	jb     0x40e1ff
  40e1a0:	push   0x705f7361
  40e1a5:	jb     0x40e20c
  40e1a7:	imul   di,WORD PTR [rax+0x0],0x7000
  40e1ad:	add    al,0x67
  40e1af:	pop    rdi
  40e1b0:	jae    0x40e226
  40e1b2:	jb     0x40e213
  40e1b4:	push   0x735f7361
  40e1b9:	jne    0x40e221
  40e1bb:	imul   di,WORD PTR [rax+0x0],0x7100
  40e1c1:	add    al,0x67
  40e1c3:	pop    rdi
  40e1c4:	jae    0x40e23a
  40e1c6:	jb     0x40e227
  40e1c8:	push   0x687361
  40e1cd:	add    BYTE PTR [rax],al
  40e1cf:	add    BYTE PTR [rsp+rax*1+0x67],bh
  40e1d3:	pop    rdi
  40e1d4:	jae    0x40e24a
  40e1d6:	jb     0x40e23b
  40e1d8:	outs   dx,DWORD PTR ds:[rsi]
  40e1d9:	outs   dx,BYTE PTR ds:[rsi]
  40e1da:	movsxd esp,DWORD PTR [rcx+0x74]
  40e1dd:	add    BYTE PTR [rax],al
  40e1df:	add    BYTE PTR [rdi+0x4],bh
  40e1e2:	addr32 pop rdi
  40e1e4:	jae    0x40e25a
  40e1e6:	jb     0x40e24c
  40e1e8:	jne    0x40e25a
  40e1ea:	add    BYTE PTR [rax],al
  40e1ec:	add    DWORD PTR [rdi+riz*2],0x5f
  40e1f0:	jae    0x40e266
  40e1f2:	jb     0x40e259
  40e1f4:	jb     0x40e268
  40e1f6:	outs   dx,DWORD PTR ds:[rsi]
  40e1f7:	jb     0x40e1f9
  40e1f9:	add    BYTE PTR [rax],al
  40e1fb:	add    BYTE PTR [rbp+0x735f6704],al
  40e201:	je     0x40e275
  40e203:	data16 jb 0x40e26b
  40e206:	gs jbe 0x40e209
  40e209:	add    BYTE PTR [rax],al
  40e20b:	add    BYTE PTR [rax+0x735f6704],cl
  40e211:	je     0x40e285
  40e213:	imul   ebp,DWORD PTR [rsi+0x67],0x7070615f
  40e21a:	outs   dx,BYTE PTR gs:[rsi]
  40e21c:	fs pop rdi
  40e21e:	ins    BYTE PTR es:[rdi],dx
  40e21f:	outs   dx,BYTE PTR gs:[rsi]
  40e221:	add    BYTE PTR [rax],al
  40e223:	add    BYTE PTR [rcx+0x735f6704],bl
  40e229:	je     0x40e29d
  40e22b:	imul   ebp,DWORD PTR [rsi+0x67],0x6572665f
  40e232:	add    BYTE PTR gs:[rbp+0x735f6704],bl
  40e239:	je     0x40e2ad
  40e23b:	imul   ebp,DWORD PTR [rsi+0x67],0x736e695f
  40e242:	gs jb  0x40e2b9
  40e245:	pop    rdi
  40e246:	movsxd eax,DWORD PTR [rax]
  40e248:	movabs al,ds:0x6e697274735f6704
  40e251:	addr32 pop rdi
  40e253:	outs   dx,BYTE PTR ds:[rsi]
  40e254:	gs ja  0x40e257
  40e257:	add    BYTE PTR [rdx+0x735f6704],bh
  40e25d:	je     0x40e2d1
  40e25f:	jae    0x40e2d1
  40e261:	ins    BYTE PTR es:[rdi],dx
  40e262:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x5730000
  40e26a:	addr32 pop rdi
  40e26c:	jne    0x40e2dc
  40e26e:	ins    BYTE PTR es:[rdi],dx
  40e26f:	imul   ebp,DWORD PTR [rsi+0x6b],0x5970000
  40e276:	addr32 pop rdi
  40e278:	jbe    0x40e2db
  40e27a:	jb     0x40e2e5
  40e27c:	(bad)  
  40e27d:	outs   dx,BYTE PTR ds:[rsi]
  40e27e:	je     0x40e2df
  40e280:	(bad)  
  40e281:	jne    0x40e2ec
  40e283:	ins    BYTE PTR es:[rdi],dx
  40e284:	fs gs jb 0x40e2e7
  40e288:	(bad)  
  40e289:	fs add BYTE PTR fs:[rcx+0x765f6705],bl
  40e291:	(bad)  
  40e292:	jb     0x40e2fd
  40e294:	(bad)  
  40e295:	outs   dx,BYTE PTR ds:[rsi]
  40e296:	je     0x40e2f7
  40e298:	(bad)  
  40e299:	jne    0x40e304
  40e29b:	ins    BYTE PTR es:[rdi],dx
  40e29c:	fs gs jb 0x40e2ff
  40e2a0:	(bad)  
  40e2a1:	fs fs pop rdi
  40e2a4:	jbe    0x40e307
  40e2a6:	ins    BYTE PTR es:[rdi],dx
  40e2a7:	jne    0x40e30e
  40e2a9:	add    BYTE PTR [rax],al
  40e2ab:	add    BYTE PTR [rbp+rax*1+0x61765f67],bl
  40e2b2:	jb     0x40e31d
  40e2b4:	(bad)  
  40e2b5:	outs   dx,BYTE PTR ds:[rsi]
  40e2b6:	je     0x40e317
  40e2b8:	(bad)  
  40e2b9:	jne    0x40e324
  40e2bb:	ins    BYTE PTR es:[rdi],dx
  40e2bc:	fs gs jb 0x40e31f
  40e2c0:	outs   dx,BYTE PTR gs:[rsi]
  40e2c2:	add    BYTE PTR fs:[rbp+0x765f6705],bl
  40e2c9:	(bad)  
  40e2ca:	jb     0x40e335
  40e2cc:	(bad)  
  40e2cd:	outs   dx,BYTE PTR ds:[rsi]
  40e2ce:	je     0x40e32f
  40e2d0:	(bad)  
  40e2d1:	jne    0x40e33c
  40e2d3:	ins    BYTE PTR es:[rdi],dx
  40e2d4:	fs gs jb 0x40e337
  40e2d8:	imul   ebp,DWORD PTR [rsi+0x69],0x74
  40e2df:	add    BYTE PTR [rdx+0x765f6705],ah
  40e2e5:	(bad)  
  40e2e6:	jb     0x40e351
  40e2e8:	(bad)  
  40e2e9:	outs   dx,BYTE PTR ds:[rsi]
  40e2ea:	je     0x40e34b
  40e2ec:	(bad)  
  40e2ed:	jns    0x40e363
  40e2ef:	gs jae 0x40e369
  40e2f2:	(bad)  
  40e2f3:	jo     0x40e2f5
  40e2f5:	add    BYTE PTR [rax],al
  40e2f7:	add    dl,cl
  40e2f9:	add    eax,0x61765f67
  40e2fe:	jb     0x40e369
  40e300:	(bad)  
  40e301:	outs   dx,BYTE PTR ds:[rsi]
  40e302:	je     0x40e363
  40e304:	addr32 gs je 0x40e367
  40e308:	outs   dx,BYTE PTR ds:[rsi]
  40e309:	outs   dx,DWORD PTR ds:[rsi]
  40e30a:	jb     0x40e379
  40e30c:	(bad)  
  40e30d:	ins    BYTE PTR es:[rdi],dx
  40e30e:	pop    rdi
  40e30f:	outs   dx,WORD PTR ds:[rsi]
  40e311:	jb     0x40e380
  40e313:	add    ah,cl
  40e315:	add    eax,0x61765f67
  40e31a:	jb     0x40e385
  40e31c:	(bad)  
  40e31d:	outs   dx,BYTE PTR ds:[rsi]
  40e31e:	je     0x40e37f
  40e320:	addr32 gs je 0x40e383
  40e324:	jae    0x40e38f
  40e326:	jp     0x40e38d
  40e328:	add    BYTE PTR [rax],al
  40e32a:	add    BYTE PTR [rax],al
  40e32c:	repnz add eax,0x61765f67
  40e332:	jb     0x40e39d
  40e334:	(bad)  
  40e335:	outs   dx,BYTE PTR ds:[rsi]
  40e336:	je     0x40e397
  40e338:	outs   dx,BYTE PTR ds:[rsi]
  40e339:	gs ja  0x40e39b
  40e33c:	data16 jb 0x40e3ae
  40e33f:	ins    DWORD PTR es:[rdi],dx
  40e340:	pop    rdi
  40e341:	fs (bad) 
  40e343:	je     0x40e3a6
  40e345:	add    BYTE PTR [rax],al
  40e347:	add    dh,bh
  40e349:	add    eax,0x61765f67
  40e34e:	jb     0x40e3b9
  40e350:	(bad)  
  40e351:	outs   dx,BYTE PTR ds:[rsi]
  40e352:	je     0x40e3b3
  40e354:	outs   dx,BYTE PTR ds:[rsi]
  40e355:	gs ja  0x40e3b7
  40e358:	jae    0x40e3ce
  40e35a:	jb     0x40e3c5
  40e35c:	outs   dx,BYTE PTR ds:[rsi]
  40e35d:	add    BYTE PTR [eax],al
  40e360:	(bad)  
  40e361:	(bad)  
  40e362:	addr32 pop rdi
  40e364:	jbe    0x40e3c7
  40e366:	jb     0x40e3d1
  40e368:	(bad)  
  40e369:	outs   dx,BYTE PTR ds:[rsi]
  40e36a:	je     0x40e3cb
  40e36c:	outs   dx,BYTE PTR ds:[rsi]
  40e36d:	gs ja  0x40e3cf
  40e370:	jbe    0x40e3d3
  40e372:	jb     0x40e3dd
  40e374:	(bad)  
  40e375:	outs   dx,BYTE PTR ds:[rsi]
  40e376:	je     0x40e378
  40e378:	(bad)  
  40e379:	(bad)  
  40e37a:	addr32 pop rdi
  40e37c:	jbe    0x40e3df
  40e37e:	jb     0x40e3e9
  40e380:	(bad)  
  40e381:	outs   dx,BYTE PTR ds:[rsi]
  40e382:	je     0x40e3e3
  40e384:	jb     0x40e3eb
  40e386:	pop    di
  40e388:	jae    0x40e3f3
  40e38a:	outs   dx,BYTE PTR ds:[rsi]
  40e38b:	imul   eax,DWORD PTR [rax],0x0
  40e38e:	add    BYTE PTR [rax],al
  40e390:	sbb    BYTE PTR [rsi],al
  40e392:	addr32 pop rdi
  40e394:	jbe    0x40e3f7
  40e396:	jb     0x40e401
  40e398:	(bad)  
  40e399:	outs   dx,BYTE PTR ds:[rsi]
  40e39a:	je     0x40e3fb
  40e39c:	jae    0x40e412
  40e39e:	outs   dx,DWORD PTR ds:[rsi]
  40e39f:	jb     0x40e406
  40e3a1:	add    BYTE PTR [rax],al
  40e3a3:	add    BYTE PTR [rdx],bl
  40e3a5:	(bad)  
  40e3a6:	addr32 pop rdi
  40e3a8:	jbe    0x40e40b
  40e3aa:	jb     0x40e415
  40e3ac:	(bad)  
  40e3ad:	outs   dx,BYTE PTR ds:[rsi]
  40e3ae:	je     0x40e40f
  40e3b0:	je     0x40e42b
  40e3b2:	jo     0x40e419
  40e3b4:	pop    rdi
  40e3b5:	movsxd ebp,DWORD PTR [rax+0x65]
  40e3b8:	movsxd ebp,DWORD PTR [rbx+0x65]
  40e3bb:	fs pop rdi
  40e3bd:	add    BYTE PTR [rax],al
  40e3bf:	add    BYTE PTR [rdx+0x6],al
  40e3c2:	addr32 pop rdi
  40e3c4:	jbe    0x40e427
  40e3c6:	jb     0x40e431
  40e3c8:	(bad)  
  40e3c9:	outs   dx,BYTE PTR ds:[rsi]
  40e3ca:	je     0x40e42b
  40e3cc:	jne    0x40e43c
  40e3ce:	jb     0x40e435
  40e3d0:	data16 add BYTE PTR [rax],al
  40e3d3:	add    BYTE PTR [rbx+0x6f5f6700],bl
  40e3d9:	(bad)  
  40e3da:	push   0x65
  40e3dc:	movsxd esi,DWORD PTR [rdi+rbx*2+0x75]
  40e3e0:	outs   dx,BYTE PTR ds:[rsi]
  40e3e1:	jb     0x40e448
  40e3e3:	data16 add BYTE PTR [rax],al
  40e3e6:	add    BYTE PTR [rax],al
  40e3e8:	sbb    eax,0x62696c00
  40e3ed:	imul   ebp,DWORD PTR [rsi+0x74],0x69625f6c
  40e3f4:	outs   dx,BYTE PTR ds:[rsi]
  40e3f5:	fs pop rdi
  40e3f7:	je     0x40e45e
  40e3f9:	js     0x40e46f
  40e3fb:	outs   dx,DWORD PTR fs:[rsi]
  40e3fd:	ins    DWORD PTR es:[rdi],dx
  40e3fe:	(bad)  
  40e3ff:	imul   ebp,DWORD PTR [rsi+0x5f],0x65646f63
  40e406:	jae    0x40e46d
  40e408:	je     0x40e40a
  40e40a:	add    BYTE PTR [rax],al
  40e40c:	(bad)  
  40e40d:	add    BYTE PTR [rcx+rbp*2+0x62],ch
  40e411:	imul   ebp,DWORD PTR [rsi+0x74],0x69625f6c
  40e418:	outs   dx,BYTE PTR ds:[rsi]
  40e419:	fs je  0x40e481
  40e41c:	js     0x40e492
  40e41e:	outs   dx,DWORD PTR fs:[rsi]
  40e420:	ins    DWORD PTR es:[rdi],dx
  40e421:	(bad)  
  40e422:	imul   ebp,DWORD PTR [rsi+0x0],0x24000000
  40e429:	add    BYTE PTR [rcx+rbp*2+0x62],ch
  40e42d:	imul   ebp,DWORD PTR [rsi+0x74],0x70665f6c
  40e434:	jb     0x40e49f
  40e436:	outs   dx,BYTE PTR ds:[rsi]
  40e437:	je     0x40e49f
  40e439:	add    BYTE PTR [rax],al
  40e43b:	add    BYTE PTR [rsi],ah
  40e43d:	add    BYTE PTR [rcx+rbp*2+0x62],ch
  40e441:	imul   ebp,DWORD PTR [rsi+0x74],0x65675f6c
  40e448:	je     0x40e4be
  40e44a:	gs js  0x40e4c1
  40e44d:	add    BYTE PTR [rax],al
  40e44f:	add    BYTE PTR [rcx+0x0],al
  40e452:	ins    BYTE PTR es:[rdi],dx
  40e453:	imul   esp,DWORD PTR [rdx+0x69],0x5f6c746e
  40e45a:	jae    0x40e4c1
  40e45c:	je     0x40e4ca
  40e45e:	outs   dx,DWORD PTR ds:[rsi]
  40e45f:	movsxd esp,DWORD PTR [rcx+0x6c]
  40e462:	add    BYTE PTR gs:[rbp+0x0],al
  40e466:	ins    BYTE PTR es:[rdi],dx
  40e467:	imul   esp,DWORD PTR [rdx+0x69],0x5f6c746e
  40e46e:	je     0x40e4d5
  40e470:	js     0x40e4e6
  40e472:	outs   dx,DWORD PTR fs:[rsi]
  40e474:	ins    DWORD PTR es:[rdi],dx
  40e475:	(bad)  
  40e476:	imul   ebp,DWORD PTR [rsi+0x0],0xd8000000
  40e47d:	add    BYTE PTR [rbp+riz*2+0x6c],al
  40e481:	gs je  0x40e4e9
  40e484:	rex.XB jb 0x40e4f0
  40e487:	je     0x40e4f2
  40e489:	movsxd esp,DWORD PTR [rcx+0x6c]
  40e48c:	push   rbx
  40e48d:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40e492:	outs   dx,BYTE PTR ds:[rsi]
  40e493:	add    al,bh
  40e495:	add    BYTE PTR [rbp+0x6e],al
  40e498:	je     0x40e4ff
  40e49a:	jb     0x40e4df
  40e49c:	jb     0x40e507
  40e49e:	je     0x40e509
  40e4a0:	movsxd esp,DWORD PTR [rcx+0x6c]
  40e4a3:	push   rbx
  40e4a4:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40e4a9:	outs   dx,BYTE PTR ds:[rsi]
  40e4aa:	add    BYTE PTR [rax],al
  40e4ac:	int    0x1
  40e4ae:	rex.RXB
  40e4af:	gs je  0x40e4f5
  40e4b2:	jne    0x40e526
  40e4b4:	jb     0x40e51b
  40e4b6:	outs   dx,BYTE PTR ds:[rsi]
  40e4b7:	je     0x40e509
  40e4b9:	jb     0x40e52a
  40e4bb:	movsxd esp,DWORD PTR [rbp+0x73]
  40e4be:	jae    0x40e4c0
  40e4c0:	(bad)  
  40e4c1:	add    DWORD PTR [rdi+0x65],eax
  40e4c4:	je     0x40e509
  40e4c6:	jne    0x40e53a
  40e4c8:	jb     0x40e52f
  40e4ca:	outs   dx,BYTE PTR ds:[rsi]
  40e4cb:	je     0x40e51d
  40e4cd:	jb     0x40e53e
  40e4cf:	movsxd esp,DWORD PTR [rbp+0x73]
  40e4d2:	jae    0x40e51d
  40e4d4:	fs add dl,dl
  40e4d7:	add    DWORD PTR [rdi+0x65],eax
  40e4da:	je     0x40e51f
  40e4dc:	jne    0x40e550
  40e4de:	jb     0x40e545
  40e4e0:	outs   dx,BYTE PTR ds:[rsi]
  40e4e1:	je     0x40e537
  40e4e3:	push   0x64616572
  40e4e8:	rex.WB
  40e4e9:	add    BYTE PTR fs:[rax],al
  40e4ec:	adc    BYTE PTR [rdx],al
  40e4ee:	rex.RXB
  40e4ef:	gs je  0x40e53e
  40e4f2:	(bad)  
  40e4f3:	jae    0x40e569
  40e4f5:	rex.RB jb 0x40e56a
  40e4f8:	outs   dx,DWORD PTR ds:[rsi]
  40e4f9:	jb     0x40e4fb
  40e4fb:	add    BYTE PTR [rbx+0x2],dh
  40e4fe:	rex.RXB
  40e4ff:	gs je  0x40e555
  40e502:	je     0x40e565
  40e504:	jb     0x40e57a
  40e506:	jne    0x40e578
  40e508:	rex.WB outs dx,BYTE PTR ds:[rsi]
  40e50a:	outs   dx,WORD PTR ds:[rsi]
  40e50c:	add    BYTE PTR [r10+0x74654702],cl
  40e513:	push   rbx
  40e514:	jns    0x40e589
  40e516:	je     0x40e57d
  40e518:	ins    DWORD PTR es:[rdi],dx
  40e519:	push   rsp
  40e51a:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
  40e521:	ins    BYTE PTR es:[rdi],dx
  40e522:	gs push rsp
  40e524:	imul   ebp,DWORD PTR [rbp+0x65],0x4702a500
  40e52b:	gs je  0x40e582
  40e52e:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
  40e535:	je     0x40e537
  40e537:	add    cl,bh
  40e539:	add    cl,BYTE PTR [rcx+0x6e]
  40e53c:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
  40e544:	rex.XB jb 0x40e5b0
  40e547:	je     0x40e5b2
  40e549:	movsxd esp,DWORD PTR [rcx+0x6c]
  40e54c:	push   rbx
  40e54d:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40e552:	outs   dx,BYTE PTR ds:[rsi]
  40e553:	add    BYTE PTR [rbx+0x3],cl
  40e556:	rex.WR
  40e557:	gs (bad) 
  40e559:	jbe    0x40e5c0
  40e55b:	rex.XB jb 0x40e5c7
  40e55e:	je     0x40e5c9
  40e560:	movsxd esp,DWORD PTR [rcx+0x6c]
  40e563:	push   rbx
  40e564:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40e569:	outs   dx,BYTE PTR ds:[rsi]
  40e56a:	add    BYTE PTR [rax],al
  40e56c:	mov    ebx,0x65755103
  40e571:	jb     0x40e5ec
  40e573:	push   rax
  40e574:	gs jb  0x40e5dd
  40e577:	outs   dx,DWORD PTR ds:[rsi]
  40e578:	jb     0x40e5e7
  40e57a:	(bad)  
  40e57b:	outs   dx,BYTE PTR ds:[rsi]
  40e57c:	movsxd esp,DWORD PTR [rbp+0x43]
  40e57f:	outs   dx,DWORD PTR ds:[rsi]
  40e580:	jne    0x40e5f0
  40e582:	je     0x40e5e9
  40e584:	jb     0x40e586
  40e586:	add    DWORD PTR [rdx+rdx*2],eax
  40e589:	je     0x40e5f7
  40e58b:	rex.B
  40e58c:	fs fs rex.RX jne 0x40e5ff
  40e591:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  40e595:	outs   dx,BYTE PTR ds:[rsi]
  40e596:	push   rsp
  40e597:	(bad)  
  40e598:	(bad)  
  40e599:	ins    BYTE PTR es:[rdi],dx
  40e59a:	add    BYTE PTR gs:[rdx],al
  40e59d:	add    al,0x52
  40e59f:	je     0x40e60d
  40e5a1:	rex.XB (bad) 
  40e5a3:	jo     0x40e619
  40e5a5:	jne    0x40e619
  40e5a7:	rex.XB outs dx,DWORD PTR gs:[rsi]
  40e5aa:	outs   dx,BYTE PTR ds:[rsi]
  40e5ab:	je     0x40e612
  40e5ad:	js     0x40e623
  40e5af:	add    BYTE PTR [rcx],cl
  40e5b1:	add    al,0x52
  40e5b3:	je     0x40e621
  40e5b5:	rex.WR outs dx,DWORD PTR ds:[rsi]
  40e5b7:	outs   dx,DWORD PTR ds:[rsi]
  40e5b8:	imul   esi,DWORD PTR [rbp+0x70],0x46
  40e5bc:	jne    0x40e62c
  40e5be:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  40e5c2:	outs   dx,BYTE PTR ds:[rsi]
  40e5c3:	rex.RB outs dx,BYTE PTR ds:[rsi]
  40e5c5:	je     0x40e639
  40e5c7:	jns    0x40e5c9
  40e5c9:	add    BYTE PTR [rax],dl
  40e5cb:	add    al,0x52
  40e5cd:	je     0x40e63b
  40e5cf:	push   rsi
  40e5d0:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
  40e5d7:	outs   dx,BYTE PTR ds:[rsi]
  40e5d8:	ja     0x40e643
  40e5da:	outs   dx,BYTE PTR ds:[rsi]
  40e5db:	add    BYTE PTR fs:[rax],al
  40e5de:	lahf   
  40e5df:	add    al,0x53
  40e5e1:	gs je  0x40e639
  40e5e4:	outs   dx,BYTE PTR ds:[rsi]
  40e5e5:	push   0x6c646e61
  40e5ea:	gs fs rex.RB js 0x40e652
  40e5ef:	gs jo  0x40e666
  40e5f2:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  40e5f9:	gs jb  0x40e5fc
  40e5fc:	lods   al,BYTE PTR ds:[rsi]
  40e5fd:	add    al,0x53
  40e5ff:	ins    BYTE PTR es:[rdi],dx
  40e600:	gs gs jo 0x40e604
  40e604:	mov    edx,0x72655404
  40e609:	ins    DWORD PTR es:[rdi],dx
  40e60a:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
  40e611:	outs   dx,DWORD PTR ds:[rsi]
  40e612:	movsxd esp,DWORD PTR [rbp+0x73]
  40e615:	jae    0x40e617
  40e617:	add    cl,al
  40e619:	add    al,0x54
  40e61b:	ins    BYTE PTR es:[rdi],dx
  40e61c:	jae    0x40e665
  40e61e:	gs je  0x40e677
  40e621:	(bad)  
  40e622:	ins    BYTE PTR es:[rdi],dx
  40e623:	jne    0x40e68a
  40e625:	add    dh,cl
  40e627:	add    al,0x55
  40e629:	outs   dx,BYTE PTR ds:[rsi]
  40e62a:	push   0x6c646e61
  40e62f:	gs fs rex.RB js 0x40e697
  40e634:	gs jo  0x40e6ab
  40e637:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  40e63e:	gs jb  0x40e641
  40e641:	add    ah,ch
  40e643:	add    al,0x56
  40e645:	imul   esi,DWORD PTR [rdx+0x74],0x506c6175
  40e64c:	jb     0x40e6bd
  40e64e:	je     0x40e6b5
  40e650:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  40e654:	out    dx,al
  40e655:	add    al,0x56
  40e657:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  40e65e:	jne    0x40e6c5
  40e660:	jb     0x40e6db
  40e662:	add    BYTE PTR [rax],al
  40e664:	(bad)  
  40e665:	add    BYTE PTR [rdi+0x5f],bl
  40e668:	rex.XB pop r15
  40e66a:	jae    0x40e6dc
  40e66c:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  40e670:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
  40e677:	ins    BYTE PTR es:[rdi],dx
  40e678:	gs jb  0x40e67b
  40e67b:	add    BYTE PTR [rsi+0x0],cl
  40e67e:	pop    rdi
  40e67f:	pop    rdi
  40e680:	fs ins BYTE PTR es:[rdi],dx
  40e682:	ins    BYTE PTR es:[rdi],dx
  40e683:	outs   dx,DWORD PTR ds:[rsi]
  40e684:	outs   dx,BYTE PTR ds:[rsi]
  40e685:	gs js  0x40e6f1
  40e688:	je     0x40e68a
  40e68a:	push   rcx
  40e68b:	add    BYTE PTR [rdi+0x5f],bl
  40e68e:	addr32 gs je 0x40e6ff
  40e692:	(bad)  
  40e693:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
  40e69a:	push   rdx
  40e69b:	add    BYTE PTR [rdi+0x5f],bl
  40e69e:	imul   ebp,DWORD PTR [rsi+0x69],0x766e6574
  40e6a5:	add    BYTE PTR [rbx+0x0],dl
  40e6a8:	pop    rdi
  40e6a9:	pop    rdi
  40e6aa:	imul   ebp,DWORD PTR [rdi+0x62],0x6e75665f
  40e6b1:	movsxd eax,DWORD PTR [rax]
  40e6b3:	add    BYTE PTR [rdx+0x0],bl
  40e6b6:	pop    rdi
  40e6b7:	pop    rdi
  40e6b8:	ins    BYTE PTR es:[rdi],dx
  40e6b9:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40e6bc:	jbe    0x40e71d
  40e6be:	imul   ebp,DWORD PTR [rsi+0x69],0x60000074
  40e6c5:	add    BYTE PTR [rdi+0x5f],bl
  40e6c8:	jae    0x40e72f
  40e6ca:	je     0x40e72b
  40e6cc:	(bad)  
  40e6cd:	jo     0x40e73f
  40e6cf:	pop    rdi
  40e6d0:	je     0x40e74b
  40e6d2:	jo     0x40e739
  40e6d4:	add    BYTE PTR [rax],al
  40e6d6:	(bad)  
  40e6d7:	add    BYTE PTR [rdi+0x5f],bl
  40e6da:	jae    0x40e741
  40e6dc:	je     0x40e753
  40e6de:	jae    0x40e745
  40e6e0:	jb     0x40e74f
  40e6e2:	(bad)  
  40e6e3:	je     0x40e74d
  40e6e5:	gs jb  0x40e75a
  40e6e8:	add    BYTE PTR [rax],al
  40e6ea:	jno    0x40e6ec
  40e6ec:	pop    rdi
  40e6ed:	(bad)  
  40e6ee:	movsxd ebp,DWORD PTR [rbp+0x64]
  40e6f1:	ins    BYTE PTR es:[rdi],dx
  40e6f2:	outs   dx,BYTE PTR ds:[rsi]
  40e6f3:	add    BYTE PTR [rax+0x0],bh
  40e6f6:	pop    rdi
  40e6f7:	(bad)  
  40e6f8:	ins    DWORD PTR es:[rdi],dx
  40e6f9:	jae    0x40e762
  40e6fb:	pop    rdi
  40e6fc:	gs js  0x40e768
  40e6ff:	je     0x40e701
  40e701:	add    BYTE PTR [rdx+0x65635f00],cl
  40e707:	js     0x40e772
  40e709:	je     0x40e70b
  40e70b:	add    BYTE PTR [rdx+0x72655f00],bh
  40e711:	jb     0x40e781
  40e713:	outs   dx,DWORD PTR ds:[rsi]
  40e714:	add    BYTE PTR [rax],al
  40e716:	fiadd  DWORD PTR [rax]
  40e718:	pop    rdi
  40e719:	ins    WORD PTR es:[rdi],dx
  40e71b:	outs   dx,DWORD PTR ds:[rsi]
  40e71c:	fs add BYTE PTR gs:[rax],al
  40e720:	sbb    al,BYTE PTR [rcx]
  40e722:	pop    rdi
  40e723:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
  40e72a:	ins    DWORD PTR es:[rdi],dx
  40e72b:	add    BYTE PTR [rax+0x6f6c5f01],al
  40e731:	movsxd ebp,DWORD PTR [rbx+0x0]
  40e734:	and    eax,0x6e6f5f02
  40e739:	gs js  0x40e7a5
  40e73c:	je     0x40e73e
  40e73e:	(bad)
  40e742:	outs   dx,BYTE PTR ds:[rsi]
  40e743:	ins    BYTE PTR es:[rdi],dx
  40e744:	outs   dx,DWORD PTR ds:[rsi]
  40e745:	movsxd ebp,DWORD PTR [rbx+0x0]
  40e748:	jg     0x40e74d
  40e74a:	(bad)  
  40e74b:	(bad)  
  40e74c:	outs   dx,DWORD PTR ds:[rsi]
  40e74d:	jb     0x40e7c3
  40e74f:	add    BYTE PTR [rax+0x6c616303],dl
  40e755:	ins    BYTE PTR es:[rdi],dx
  40e756:	outs   dx,DWORD PTR ds:[rsi]
  40e757:	movsxd eax,DWORD PTR [rax]
  40e759:	add    BYTE PTR [rbp+0x69786503],bl
  40e75f:	je     0x40e761
  40e761:	add    BYTE PTR [rcx+0x6c636603],ah
  40e767:	outs   dx,DWORD PTR ds:[rsi]
  40e768:	jae    0x40e7cf
  40e76a:	add    BYTE PTR [rax],al
  40e76c:	scas   al,BYTE PTR es:[rdi]
  40e76d:	add    esp,DWORD PTR [rsi+0x6f]
  40e770:	jo     0x40e7d7
  40e772:	outs   dx,BYTE PTR ds:[rsi]
  40e773:	add    BYTE PTR [rax+0x72706603],dh
  40e779:	imul   ebp,DWORD PTR [rsi+0x74],0x3b70066
  40e780:	data16 jb 0x40e7e8
  40e783:	add    BYTE PTR gs:[rax],al
  40e786:	ret    0x6603
  40e789:	ja     0x40e7fd
  40e78b:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x6d03f000
  40e793:	(bad)  
  40e794:	ins    BYTE PTR es:[rdi],dx
  40e795:	ins    BYTE PTR es:[rdi],dx
  40e796:	outs   dx,DWORD PTR ds:[rsi]
  40e797:	movsxd eax,DWORD PTR [rax]
  40e799:	add    al,bh
  40e79b:	add    ebp,DWORD PTR [rbp+0x65]
  40e79e:	ins    DWORD PTR es:[rdi],dx
  40e79f:	movsxd esi,DWORD PTR [rax+0x79]
  40e7a2:	add    BYTE PTR [rax],al
  40e7a4:	(bad)  
  40e7a5:	add    al,0x73
  40e7a7:	imul   esp,DWORD PTR [rdi+0x6e],0x6c61
  40e7ae:	and    eax,DWORD PTR [rbx+rsi*2]
  40e7b1:	je     0x40e825
  40e7b3:	movsxd ebp,DWORD PTR [rax+0x72]
  40e7b6:	add    BYTE PTR [rax],al
  40e7b8:	and    al,0x4
  40e7ba:	jae    0x40e830
  40e7bc:	jb     0x40e821
  40e7be:	ins    DWORD PTR es:[rdi],dx
  40e7bf:	jo     0x40e7c1
  40e7c1:	add    BYTE PTR [rbx],ch
  40e7c3:	add    al,0x73
  40e7c5:	je     0x40e839
  40e7c7:	ins    BYTE PTR es:[rdi],dx
  40e7c8:	outs   dx,BYTE PTR gs:[rsi]
  40e7ca:	add    BYTE PTR [rax],al
  40e7cc:	cs add al,0x73
  40e7cf:	je     0x40e843
  40e7d1:	outs   dx,BYTE PTR ds:[rsi]
  40e7d2:	movsxd ebp,DWORD PTR [rbp+0x70]
  40e7d5:	add    BYTE PTR [rsi+0x4],cl
  40e7d8:	jbe    0x40e840
  40e7da:	jo     0x40e84e
  40e7dc:	imul   ebp,DWORD PTR [rsi+0x74],0xaf000066
  40e7e3:	add    al,0x5f
  40e7e5:	jne    0x40e855
  40e7e7:	ins    BYTE PTR es:[rdi],dx
  40e7e8:	imul   ebp,DWORD PTR [rsi+0x6b],0x5f04fc00
  40e7ef:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
  40e7f3:	add    BYTE PTR gs:[rax],al
  40e7f6:	add    BYTE PTR [rax],al
  40e7f8:	add    al,dl
  40e7fa:	add    BYTE PTR [rax],al
  40e7fc:	add    al,dl
  40e7fe:	add    BYTE PTR [rax],al
  40e800:	add    al,dl
  40e802:	add    BYTE PTR [rax],al
  40e804:	add    al,dl
  40e806:	add    BYTE PTR [rax],al
  40e808:	add    al,dl
  40e80a:	add    BYTE PTR [rax],al
  40e80c:	add    al,dl
  40e80e:	add    BYTE PTR [rax],al
  40e810:	add    al,dl
  40e812:	add    BYTE PTR [rax],al
  40e814:	add    al,dl
  40e816:	add    BYTE PTR [rax],al
  40e818:	add    al,dl
  40e81a:	add    BYTE PTR [rax],al
  40e81c:	add    al,dl
  40e81e:	add    BYTE PTR [rax],al
  40e820:	add    al,dl
  40e822:	add    BYTE PTR [rax],al
  40e824:	ins    BYTE PTR es:[rdi],dx
  40e825:	imul   esp,DWORD PTR [rdx+0x67],0x322d6f69
  40e82c:	xor    BYTE PTR cs:[rip+0x6c642e30],ch        # 0x6ca51663
  40e833:	ins    BYTE PTR es:[rdi],dx
  40e834:	add    BYTE PTR [rax],al
  40e836:	add    BYTE PTR [rax],al
  40e838:	adc    al,0xd0
  40e83a:	add    BYTE PTR [rax],al
  40e83c:	adc    al,0xd0
  40e83e:	add    BYTE PTR [rax],al
  40e840:	adc    al,0xd0
  40e842:	add    BYTE PTR [rax],al
  40e844:	adc    al,0xd0
  40e846:	add    BYTE PTR [rax],al
  40e848:	adc    al,0xd0
  40e84a:	add    BYTE PTR [rax],al
  40e84c:	adc    al,0xd0
  40e84e:	add    BYTE PTR [rax],al
  40e850:	adc    al,0xd0
  40e852:	add    BYTE PTR [rax],al
  40e854:	adc    al,0xd0
  40e856:	add    BYTE PTR [rax],al
  40e858:	adc    al,0xd0
  40e85a:	add    BYTE PTR [rax],al
  40e85c:	adc    al,0xd0
  40e85e:	add    BYTE PTR [rax],al
  40e860:	adc    al,0xd0
  40e862:	add    BYTE PTR [rax],al
  40e864:	adc    al,0xd0
  40e866:	add    BYTE PTR [rax],al
  40e868:	adc    al,0xd0
  40e86a:	add    BYTE PTR [rax],al
  40e86c:	adc    al,0xd0
  40e86e:	add    BYTE PTR [rax],al
  40e870:	adc    al,0xd0
  40e872:	add    BYTE PTR [rax],al
  40e874:	adc    al,0xd0
  40e876:	add    BYTE PTR [rax],al
  40e878:	adc    al,0xd0
  40e87a:	add    BYTE PTR [rax],al
  40e87c:	adc    al,0xd0
  40e87e:	add    BYTE PTR [rax],al
  40e880:	adc    al,0xd0
  40e882:	add    BYTE PTR [rax],al
  40e884:	adc    al,0xd0
  40e886:	add    BYTE PTR [rax],al
  40e888:	adc    al,0xd0
  40e88a:	add    BYTE PTR [rax],al
  40e88c:	adc    al,0xd0
  40e88e:	add    BYTE PTR [rax],al
  40e890:	adc    al,0xd0
  40e892:	add    BYTE PTR [rax],al
  40e894:	adc    al,0xd0
  40e896:	add    BYTE PTR [rax],al
  40e898:	adc    al,0xd0
  40e89a:	add    BYTE PTR [rax],al
  40e89c:	adc    al,0xd0
  40e89e:	add    BYTE PTR [rax],al
  40e8a0:	adc    al,0xd0
  40e8a2:	add    BYTE PTR [rax],al
  40e8a4:	adc    al,0xd0
  40e8a6:	add    BYTE PTR [rax],al
  40e8a8:	adc    al,0xd0
  40e8aa:	add    BYTE PTR [rax],al
  40e8ac:	adc    al,0xd0
  40e8ae:	add    BYTE PTR [rax],al
  40e8b0:	adc    al,0xd0
  40e8b2:	add    BYTE PTR [rax],al
  40e8b4:	adc    al,0xd0
  40e8b6:	add    BYTE PTR [rax],al
  40e8b8:	adc    al,0xd0
  40e8ba:	add    BYTE PTR [rax],al
  40e8bc:	adc    al,0xd0
  40e8be:	add    BYTE PTR [rax],al
  40e8c0:	adc    al,0xd0
  40e8c2:	add    BYTE PTR [rax],al
  40e8c4:	adc    al,0xd0
  40e8c6:	add    BYTE PTR [rax],al
  40e8c8:	adc    al,0xd0
  40e8ca:	add    BYTE PTR [rax],al
  40e8cc:	adc    al,0xd0
  40e8ce:	add    BYTE PTR [rax],al
  40e8d0:	adc    al,0xd0
  40e8d2:	add    BYTE PTR [rax],al
  40e8d4:	adc    al,0xd0
  40e8d6:	add    BYTE PTR [rax],al
  40e8d8:	adc    al,0xd0
  40e8da:	add    BYTE PTR [rax],al
  40e8dc:	adc    al,0xd0
  40e8de:	add    BYTE PTR [rax],al
  40e8e0:	adc    al,0xd0
  40e8e2:	add    BYTE PTR [rax],al
  40e8e4:	adc    al,0xd0
  40e8e6:	add    BYTE PTR [rax],al
  40e8e8:	adc    al,0xd0
  40e8ea:	add    BYTE PTR [rax],al
  40e8ec:	adc    al,0xd0
  40e8ee:	add    BYTE PTR [rax],al
  40e8f0:	adc    al,0xd0
  40e8f2:	add    BYTE PTR [rax],al
  40e8f4:	adc    al,0xd0
  40e8f6:	add    BYTE PTR [rax],al
  40e8f8:	adc    al,0xd0
  40e8fa:	add    BYTE PTR [rax],al
  40e8fc:	adc    al,0xd0
  40e8fe:	add    BYTE PTR [rax],al
  40e900:	adc    al,0xd0
  40e902:	add    BYTE PTR [rax],al
  40e904:	adc    al,0xd0
  40e906:	add    BYTE PTR [rax],al
  40e908:	adc    al,0xd0
  40e90a:	add    BYTE PTR [rax],al
  40e90c:	adc    al,0xd0
  40e90e:	add    BYTE PTR [rax],al
  40e910:	adc    al,0xd0
  40e912:	add    BYTE PTR [rax],al
  40e914:	adc    al,0xd0
  40e916:	add    BYTE PTR [rax],al
  40e918:	adc    al,0xd0
  40e91a:	add    BYTE PTR [rax],al
  40e91c:	adc    al,0xd0
  40e91e:	add    BYTE PTR [rax],al
  40e920:	adc    al,0xd0
  40e922:	add    BYTE PTR [rax],al
  40e924:	adc    al,0xd0
  40e926:	add    BYTE PTR [rax],al
  40e928:	adc    al,0xd0
  40e92a:	add    BYTE PTR [rax],al
  40e92c:	adc    al,0xd0
  40e92e:	add    BYTE PTR [rax],al
  40e930:	adc    al,0xd0
  40e932:	add    BYTE PTR [rax],al
  40e934:	adc    al,0xd0
  40e936:	add    BYTE PTR [rax],al
  40e938:	adc    al,0xd0
  40e93a:	add    BYTE PTR [rax],al
  40e93c:	adc    al,0xd0
  40e93e:	add    BYTE PTR [rax],al
  40e940:	adc    al,0xd0
  40e942:	add    BYTE PTR [rax],al
  40e944:	adc    al,0xd0
  40e946:	add    BYTE PTR [rax],al
  40e948:	adc    al,0xd0
  40e94a:	add    BYTE PTR [rax],al
  40e94c:	adc    al,0xd0
  40e94e:	add    BYTE PTR [rax],al
  40e950:	adc    al,0xd0
  40e952:	add    BYTE PTR [rax],al
  40e954:	adc    al,0xd0
  40e956:	add    BYTE PTR [rax],al
  40e958:	adc    al,0xd0
  40e95a:	add    BYTE PTR [rax],al
  40e95c:	adc    al,0xd0
  40e95e:	add    BYTE PTR [rax],al
  40e960:	adc    al,0xd0
  40e962:	add    BYTE PTR [rax],al
  40e964:	adc    al,0xd0
  40e966:	add    BYTE PTR [rax],al
  40e968:	adc    al,0xd0
  40e96a:	add    BYTE PTR [rax],al
  40e96c:	adc    al,0xd0
  40e96e:	add    BYTE PTR [rax],al
  40e970:	adc    al,0xd0
  40e972:	add    BYTE PTR [rax],al
  40e974:	adc    al,0xd0
  40e976:	add    BYTE PTR [rax],al
  40e978:	adc    al,0xd0
  40e97a:	add    BYTE PTR [rax],al
  40e97c:	adc    al,0xd0
  40e97e:	add    BYTE PTR [rax],al
  40e980:	adc    al,0xd0
  40e982:	add    BYTE PTR [rax],al
  40e984:	adc    al,0xd0
  40e986:	add    BYTE PTR [rax],al
  40e988:	adc    al,0xd0
  40e98a:	add    BYTE PTR [rax],al
  40e98c:	adc    al,0xd0
  40e98e:	add    BYTE PTR [rax],al
  40e990:	ins    BYTE PTR es:[rdi],dx
  40e991:	imul   esp,DWORD PTR [rdx+0x67],0x2d62696c
  40e998:	xor    ch,BYTE PTR [rsi]
  40e99a:	xor    BYTE PTR [rip+0x6c642e30],ch        # 0x6ca517d0
  40e9a0:	ins    BYTE PTR es:[rdi],dx
  40e9a1:	add    BYTE PTR [rax],al
  40e9a3:	add    BYTE PTR [rax],ch
  40e9a5:	rol    BYTE PTR [rax],1
  40e9a7:	add    BYTE PTR [rcx+rbp*2+0x62],ch
  40e9ab:	outs   dx,DWORD PTR ds:[esi]
  40e9ad:	(bad)  
  40e9ae:	push   0x65
  40e9b0:	movsxd esi,DWORD PTR [rbp+rbp*1+0x32]
  40e9b4:	xor    BYTE PTR cs:[rip+0x6c642e30],ch        # 0x6ca517eb
  40e9bb:	ins    BYTE PTR es:[rdi],dx
  40e9bc:	add    BYTE PTR [rax],al
  40e9be:	add    BYTE PTR [rax],al
  40e9c0:	cmp    al,0xd0
  40e9c2:	add    BYTE PTR [rax],al
  40e9c4:	cmp    al,0xd0
  40e9c6:	add    BYTE PTR [rax],al
  40e9c8:	cmp    al,0xd0
  40e9ca:	add    BYTE PTR [rax],al
  40e9cc:	cmp    al,0xd0
  40e9ce:	add    BYTE PTR [rax],al
  40e9d0:	cmp    al,0xd0
  40e9d2:	add    BYTE PTR [rax],al
  40e9d4:	cmp    al,0xd0
  40e9d6:	add    BYTE PTR [rax],al
  40e9d8:	ins    BYTE PTR es:[rdi],dx
  40e9d9:	imul   esp,DWORD PTR [rdx+0x69],0x2d6c746e
  40e9e0:	cmp    BYTE PTR [rsi],ch
  40e9e2:	fs ins BYTE PTR es:[rdi],dx
  40e9e4:	ins    BYTE PTR es:[rdi],dx
  40e9e5:	add    BYTE PTR [rax],al
  40e9e7:	add    BYTE PTR [rax-0x30],dl
  40e9ea:	add    BYTE PTR [rax],al
  40e9ec:	push   rax
  40e9ed:	rol    BYTE PTR [rax],1
  40e9ef:	add    BYTE PTR [rax-0x30],dl
  40e9f2:	add    BYTE PTR [rax],al
  40e9f4:	push   rax
  40e9f5:	rol    BYTE PTR [rax],1
  40e9f7:	add    BYTE PTR [rax-0x30],dl
  40e9fa:	add    BYTE PTR [rax],al
  40e9fc:	push   rax
  40e9fd:	rol    BYTE PTR [rax],1
  40e9ff:	add    BYTE PTR [rax-0x30],dl
  40ea02:	add    BYTE PTR [rax],al
  40ea04:	push   rax
  40ea05:	rol    BYTE PTR [rax],1
  40ea07:	add    BYTE PTR [rax-0x30],dl
  40ea0a:	add    BYTE PTR [rax],al
  40ea0c:	push   rax
  40ea0d:	rol    BYTE PTR [rax],1
  40ea0f:	add    BYTE PTR [rax-0x30],dl
  40ea12:	add    BYTE PTR [rax],al
  40ea14:	push   rax
  40ea15:	rol    BYTE PTR [rax],1
  40ea17:	add    BYTE PTR [rax-0x30],dl
  40ea1a:	add    BYTE PTR [rax],al
  40ea1c:	push   rax
  40ea1d:	rol    BYTE PTR [rax],1
  40ea1f:	add    BYTE PTR [rax-0x30],dl
  40ea22:	add    BYTE PTR [rax],al
  40ea24:	push   rax
  40ea25:	rol    BYTE PTR [rax],1
  40ea27:	add    BYTE PTR [rax-0x30],dl
  40ea2a:	add    BYTE PTR [rax],al
  40ea2c:	push   rax
  40ea2d:	rol    BYTE PTR [rax],1
  40ea2f:	add    BYTE PTR [rax-0x30],dl
  40ea32:	add    BYTE PTR [rax],al
  40ea34:	push   rax
  40ea35:	rol    BYTE PTR [rax],1
  40ea37:	add    BYTE PTR [rax-0x30],dl
  40ea3a:	add    BYTE PTR [rax],al
  40ea3c:	push   rax
  40ea3d:	rol    BYTE PTR [rax],1
  40ea3f:	add    BYTE PTR [rax-0x30],dl
  40ea42:	add    BYTE PTR [rax],al
  40ea44:	rex.WXB
  40ea45:	rex.RB push r10
  40ea47:	rex.WRX
  40ea48:	rex.RB
  40ea49:	xor    r14,QWORD PTR [rdx]
  40ea4c:	cs fs ins BYTE PTR es:[rdi],dx
  40ea4f:	ins    BYTE PTR es:[rdi],dx
  40ea50:	add    BYTE PTR [rax],al
  40ea52:	add    BYTE PTR [rax],al
  40ea54:	rol    BYTE PTR fs:[rax],1
  40ea57:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40ea5b:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40ea5f:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40ea63:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40ea67:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40ea6b:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40ea6f:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40ea73:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40ea77:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40ea7b:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40ea7f:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40ea83:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40ea87:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40ea8b:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40ea8f:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40ea93:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40ea97:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40ea9b:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40ea9f:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40eaa3:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40eaa7:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40eaab:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40eaaf:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40eab3:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40eab7:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40eabb:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40eabf:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40eac3:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40eac7:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40eacb:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40eacf:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40ead3:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40ead7:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40eadb:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40eadf:	add    BYTE PTR [rbp+0x73],ch
  40eae2:	jbe    0x40eb47
  40eae4:	jb     0x40eb5a
  40eae6:	cs fs ins BYTE PTR es:[rdi],dx
  40eae9:	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .CRT:

000000000040f000 <.CRT>:
	...
  40f008:	(bad)  
  40f009:	adc    DWORD PTR [rax+0x0],eax
	...
  40f020:	adc    BYTE PTR [rax],dl
  40f022:	add    BYTE PTR [rax],al
  40f025:	add    BYTE PTR [rax],al
  40f027:	add    BYTE PTR [rax],al
  40f029:	xor    BYTE PTR [rax+0x0],al
	...
  40f040:	xor    BYTE PTR [rdx],dh
  40f042:	add    BYTE PTR [rax],al
  40f045:	add    BYTE PTR [rax],al
  40f047:	add    BYTE PTR [rax],al
  40f049:	xor    al,BYTE PTR [rax+0x0]
	...

Disassembly of section .tls:

0000000000410000 <.tls>:
	...
  410020:	add    BYTE PTR [rax],al
  410022:	add    BYTE PTR [r8],al
  410025:	add    BYTE PTR [rax],al
  410027:	add    BYTE PTR [rax+0x0],ah
  41002a:	add    BYTE PTR [r8],al
  41002d:	add    BYTE PTR [rax],al
  41002f:	add    BYTE PTR [rsi+rax*8+0x40],bl
  410033:	add    BYTE PTR [rax],al
  410035:	add    BYTE PTR [rax],al
  410037:	add    BYTE PTR [rax-0x10],al
  41003a:	add    BYTE PTR [rax],al
	...
