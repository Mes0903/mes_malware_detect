
e40f02f83a5747b8b47cbc21fc7c54e6b81b7b92c86410ccc62795274f639385.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0xb095]        # 0x40c0b0
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0xb096]        # 0x40c0c0
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0xb099]        # 0x40c0d0
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0xb05c]        # 0x40c0a0
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0xaeef]        # 0x40bf40
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0xb031]        # 0x40c090
  40105f:	mov    DWORD PTR [rip+0xdfa3],edx        # 0x40f008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x409298
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x403db0
  401081:	mov    rdx,QWORD PTR [rip+0xaf48]        # 0x40bfd0
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0xaf2e]        # 0x40bfc0
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0xafb4]        # 0x40c050
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0xaecb]        # 0x40bf70
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x403990
  4010af:	mov    rax,QWORD PTR [rip+0xae1a]        # 0x40bed0
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x409298
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0x2b69]        # 0x403c90
  401127:	call   0x403c80
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0xaf15]        # 0x40c080
  40116b:	lea    r8,[rip+0xdea6]        # 0x40f018
  401172:	lea    rdx,[rip+0xdea7]        # 0x40f020
  401179:	lea    rcx,[rip+0xdea8]        # 0x40f028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0xde78],eax        # 0x40f000
  401188:	lea    rax,[rip+0xde71]        # 0x40f000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0xaea5]        # 0x40c040
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x4092b0
  4011a3:	mov    DWORD PTR [rip+0xde67],eax        # 0x40f010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0xaeca]        # 0x40c090
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0xadab]        # 0x40bfa0
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0x1038e]        # 0x411590
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0xad87]        # 0x40bfb0
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0xddba],0x1        # 0x40f004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0xacbc]        # 0x40bf20
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x403fa0
  40127d:	lea    rcx,[rip+0x32bc]        # 0x404540
  401284:	call   QWORD PTR [rip+0x102fe]        # 0x411588
  40128a:	mov    rdx,QWORD PTR [rip+0xacff]        # 0x40bf90
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x404450
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x4092e0
  4012a5:	call   0x403d90
  4012aa:	mov    rax,QWORD PTR [rip+0xac8f]        # 0x40bf40
  4012b1:	mov    QWORD PTR [rip+0xf1a0],rax        # 0x410458
  4012b8:	mov    rax,QWORD PTR [rip+0xaca1]        # 0x40bf60
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0xf139],rax        # 0x410450
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x8cca],eax        # 0x40a000
  401336:	mov    r12d,DWORD PTR [rip+0xdceb]        # 0x40f028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x4091f0
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0xdcc2]        # 0x40f020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x4091b0
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x4091f0
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x4091e8
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0xdc6a],rbp        # 0x40f020
  4013b6:	call   0x403960
  4013bb:	mov    rax,QWORD PTR [rip+0xab8e]        # 0x40bf50
  4013c2:	mov    rdx,QWORD PTR [rip+0xdc4f]        # 0x40f018
  4013c9:	mov    ecx,DWORD PTR [rip+0xdc59]        # 0x40f028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0xdc3c]        # 0x40f018
  4013dc:	mov    rdx,QWORD PTR [rip+0xdc3d]        # 0x40f020
  4013e3:	call   0x4026a9
  4013e8:	mov    ecx,DWORD PTR [rip+0xdc1a]        # 0x40f008
  4013ee:	mov    DWORD PTR [rip+0xdc18],eax        # 0x40f00c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0xdc02]        # 0x40f004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x409280
  40140b:	mov    eax,DWORD PTR [rip+0xdbfb]        # 0x40f00c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0xab79]        # 0x40bfb0
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x409288
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0xabad]        # 0x40c010
  401463:	mov    rcx,QWORD PTR [rip+0xab96]        # 0x40c000
  40146a:	call   0x409270
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0x1009f]        # 0x411538
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0xab89]        # 0x40c030
  4014a7:	mov    rcx,QWORD PTR [rip+0xab72]        # 0x40c020
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x409270
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x409238
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0xabb5]        # 0x40c090
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x4039a0
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0xab85]        # 0x40c090
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x4039a0
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	push   rbp
  401531:	mov    rbp,rsp
  401534:	mov    DWORD PTR [rbp+0x10],ecx
  401537:	mov    eax,DWORD PTR [rbp+0x10]
  40153a:	cmp    eax,0x2
  40153d:	je     0x401567
  40153f:	cmp    eax,0x2
  401542:	jg     0x40154b
  401544:	cmp    eax,0x1
  401547:	je     0x40155e
  401549:	jmp    0x401579
  40154b:	cmp    eax,0x3
  40154e:	je     0x401570
  401550:	cmp    eax,0x4
  401553:	jne    0x401579
  401555:	lea    rax,[rip+0x9aa4]        # 0x40b000
  40155c:	jmp    0x401580
  40155e:	lea    rax,[rip+0x9aa2]        # 0x40b007
  401565:	jmp    0x401580
  401567:	lea    rax,[rip+0x9aa5]        # 0x40b013
  40156e:	jmp    0x401580
  401570:	lea    rax,[rip+0x9aaa]        # 0x40b021
  401577:	jmp    0x401580
  401579:	lea    rax,[rip+0x9aa7]        # 0x40b027
  401580:	pop    rbp
  401581:	ret    
  401582:	push   rbp
  401583:	mov    rbp,rsp
  401586:	sub    rsp,0x20
  40158a:	mov    DWORD PTR [rbp+0x10],ecx
  40158d:	jmp    0x40159b
  40158f:	lea    rcx,[rip+0x9aa8]        # 0x40b03e
  401596:	call   0x4091e0
  40159b:	mov    eax,DWORD PTR [rbp+0x10]
  40159e:	lea    edx,[rax-0x1]
  4015a1:	mov    DWORD PTR [rbp+0x10],edx
  4015a4:	test   eax,eax
  4015a6:	jg     0x40158f
  4015a8:	add    rsp,0x20
  4015ac:	pop    rbp
  4015ad:	ret    
  4015ae:	push   rbp
  4015af:	mov    rbp,rsp
  4015b2:	sub    rsp,0x30
  4015b6:	mov    QWORD PTR [rbp+0x10],rcx
  4015ba:	mov    DWORD PTR [rbp+0x18],edx
  4015bd:	mov    DWORD PTR [rbp+0x20],r8d
  4015c1:	lea    rcx,[rip+0x9a7a]        # 0x40b042
  4015c8:	call   0x4091d0
  4015cd:	mov    eax,DWORD PTR [rbp+0x20]
  4015d0:	add    eax,0x1
  4015d3:	mov    ecx,eax
  4015d5:	call   0x401582
  4015da:	mov    eax,DWORD PTR [rbp+0x20]
  4015dd:	not    eax
  4015df:	mov    edx,eax
  4015e1:	mov    eax,edx
  4015e3:	add    eax,eax
  4015e5:	add    eax,edx
  4015e7:	lea    ecx,[rax+0x50]
  4015ea:	mov    edx,0x55555556
  4015ef:	mov    eax,ecx
  4015f1:	imul   edx
  4015f3:	mov    eax,ecx
  4015f5:	sar    eax,0x1f
  4015f8:	sub    edx,eax
  4015fa:	mov    eax,edx
  4015fc:	mov    DWORD PTR [rbp-0x8],eax
  4015ff:	cmp    DWORD PTR [rbp-0x8],0x7
  401603:	ja     0x40160c
  401605:	mov    DWORD PTR [rbp-0x8],0x8
  40160c:	mov    DWORD PTR [rbp-0x4],0x0
  401613:	jmp    0x401673
  401615:	mov    edx,DWORD PTR [rbp-0x4]
  401618:	mov    rax,QWORD PTR [rbp+0x10]
  40161c:	add    rax,rdx
  40161f:	movzx  eax,BYTE PTR [rax]
  401622:	movzx  eax,al
  401625:	mov    edx,eax
  401627:	lea    rcx,[rip+0x9a25]        # 0x40b053
  40162e:	call   0x4091e0
  401633:	add    DWORD PTR [rbp-0x4],0x1
  401637:	mov    eax,DWORD PTR [rbp-0x4]
  40163a:	cmp    eax,DWORD PTR [rbp+0x18]
  40163d:	je     0x401673
  40163f:	mov    eax,DWORD PTR [rbp-0x4]
  401642:	mov    edx,0x0
  401647:	div    DWORD PTR [rbp-0x8]
  40164a:	mov    eax,edx
  40164c:	test   eax,eax
  40164e:	jne    0x401669
  401650:	mov    ecx,0xa
  401655:	call   0x4091d8
  40165a:	mov    eax,DWORD PTR [rbp+0x20]
  40165d:	add    eax,0x1
  401660:	mov    ecx,eax
  401662:	call   0x401582
  401667:	jmp    0x401673
  401669:	mov    ecx,0x20
  40166e:	call   0x4091d8
  401673:	mov    eax,DWORD PTR [rbp-0x4]
  401676:	cmp    eax,DWORD PTR [rbp+0x18]
  401679:	jb     0x401615
  40167b:	mov    ecx,0xa
  401680:	call   0x4091d8
  401685:	mov    eax,DWORD PTR [rbp+0x20]
  401688:	mov    ecx,eax
  40168a:	call   0x401582
  40168f:	lea    rcx,[rip+0x99c2]        # 0x40b058
  401696:	call   0x4091d0
  40169b:	nop
  40169c:	add    rsp,0x30
  4016a0:	pop    rbp
  4016a1:	ret    
  4016a2:	push   rbp
  4016a3:	mov    rbp,rsp
  4016a6:	sub    rsp,0x40
  4016aa:	mov    QWORD PTR [rbp+0x10],rcx
  4016ae:	mov    DWORD PTR [rbp+0x18],edx
  4016b1:	mov    DWORD PTR [rbp-0x4],0x1
  4016b8:	lea    rdx,[rbp-0x1c]
  4016bc:	lea    rax,[rbp-0x18]
  4016c0:	mov    r8,rdx
  4016c3:	mov    rdx,rax
  4016c6:	mov    rcx,QWORD PTR [rbp+0x10]
  4016ca:	mov    rax,QWORD PTR [rip+0xfdc7]        # 0x411498
  4016d1:	call   rax
  4016d3:	mov    DWORD PTR [rbp-0x8],0x0
  4016da:	jmp    0x40172d
  4016dc:	mov    rdx,QWORD PTR [rbp-0x18]
  4016e0:	mov    eax,DWORD PTR [rbp-0x8]
  4016e3:	cdqe   
  4016e5:	add    rax,rdx
  4016e8:	movzx  eax,BYTE PTR [rax]
  4016eb:	cmp    al,0x1f
  4016ed:	jbe    0x401702
  4016ef:	mov    rdx,QWORD PTR [rbp-0x18]
  4016f3:	mov    eax,DWORD PTR [rbp-0x8]
  4016f6:	cdqe   
  4016f8:	add    rax,rdx
  4016fb:	movzx  eax,BYTE PTR [rax]
  4016fe:	cmp    al,0x7e
  401700:	jbe    0x401729
  401702:	mov    eax,DWORD PTR [rbp-0x1c]
  401705:	sub    eax,0x1
  401708:	cmp    eax,DWORD PTR [rbp-0x8]
  40170b:	jg     0x401720
  40170d:	mov    rdx,QWORD PTR [rbp-0x18]
  401711:	mov    eax,DWORD PTR [rbp-0x8]
  401714:	cdqe   
  401716:	add    rax,rdx
  401719:	movzx  eax,BYTE PTR [rax]
  40171c:	test   al,al
  40171e:	je     0x401729
  401720:	mov    DWORD PTR [rbp-0x4],0x0
  401727:	jmp    0x401735
  401729:	add    DWORD PTR [rbp-0x8],0x1
  40172d:	mov    eax,DWORD PTR [rbp-0x1c]
  401730:	cmp    DWORD PTR [rbp-0x8],eax
  401733:	jl     0x4016dc
  401735:	cmp    DWORD PTR [rbp-0x4],0x0
  401739:	je     0x401772
  40173b:	mov    eax,DWORD PTR [rbp-0x1c]
  40173e:	test   eax,eax
  401740:	jle    0x401772
  401742:	mov    rax,QWORD PTR [rbp-0x18]
  401746:	mov    edx,DWORD PTR [rbp-0x1c]
  401749:	movsxd rdx,edx
  40174c:	sub    rdx,0x1
  401750:	add    rax,rdx
  401753:	movzx  eax,BYTE PTR [rax]
  401756:	test   al,al
  401758:	jne    0x401772
  40175a:	mov    rax,QWORD PTR [rbp-0x18]
  40175e:	mov    rdx,rax
  401761:	lea    rcx,[rip+0x98f2]        # 0x40b05a
  401768:	call   0x4091e0
  40176d:	jmp    0x40180b
  401772:	cmp    DWORD PTR [rbp-0x4],0x0
  401776:	je     0x4017f1
  401778:	mov    eax,DWORD PTR [rbp-0x1c]
  40177b:	add    eax,0x1
  40177e:	cdqe   
  401780:	mov    rcx,rax
  401783:	mov    rax,QWORD PTR [rip+0xfc9e]        # 0x411428
  40178a:	call   rax
  40178c:	mov    QWORD PTR [rbp-0x10],rax
  401790:	cmp    QWORD PTR [rbp-0x10],0x0
  401795:	jne    0x4017a3
  401797:	lea    rcx,[rip+0x98d6]        # 0x40b074
  40179e:	call   0x4035e0
  4017a3:	mov    eax,DWORD PTR [rbp-0x1c]
  4017a6:	movsxd rcx,eax
  4017a9:	mov    rdx,QWORD PTR [rbp-0x18]
  4017ad:	mov    rax,QWORD PTR [rbp-0x10]
  4017b1:	mov    r8,rcx
  4017b4:	mov    rcx,rax
  4017b7:	call   0x4091e8
  4017bc:	mov    eax,DWORD PTR [rbp-0x1c]
  4017bf:	movsxd rdx,eax
  4017c2:	mov    rax,QWORD PTR [rbp-0x10]
  4017c6:	add    rax,rdx
  4017c9:	mov    BYTE PTR [rax],0x0
  4017cc:	mov    rax,QWORD PTR [rbp-0x10]
  4017d0:	mov    rdx,rax
  4017d3:	lea    rcx,[rip+0x98ad]        # 0x40b087
  4017da:	call   0x4091e0
  4017df:	mov    rax,QWORD PTR [rbp-0x10]
  4017e3:	mov    rcx,rax
  4017e6:	mov    rax,QWORD PTR [rip+0xfc33]        # 0x411420
  4017ed:	call   rax
  4017ef:	jmp    0x40180b
  4017f1:	mov    eax,DWORD PTR [rbp-0x1c]
  4017f4:	mov    ecx,eax
  4017f6:	mov    rax,QWORD PTR [rbp-0x18]
  4017fa:	mov    edx,DWORD PTR [rbp+0x18]
  4017fd:	mov    r8d,edx
  401800:	mov    edx,ecx
  401802:	mov    rcx,rax
  401805:	call   0x4015ae
  40180a:	nop
  40180b:	add    rsp,0x40
  40180f:	pop    rbp
  401810:	ret    
  401811:	push   rbp
  401812:	mov    rbp,rsp
  401815:	sub    rsp,0xd0
  40181c:	mov    QWORD PTR [rbp+0x10],rcx
  401820:	mov    DWORD PTR [rbp+0x18],edx
  401823:	mov    DWORD PTR [rbp+0x20],r8d
  401827:	mov    rcx,QWORD PTR [rbp+0x10]
  40182b:	mov    rax,QWORD PTR [rip+0xfc56]        # 0x411488
  401832:	call   rax
  401834:	mov    DWORD PTR [rbp-0x8],eax
  401837:	cmp    DWORD PTR [rbp-0x8],0x0
  40183b:	jne    0x401842
  40183d:	jmp    0x401d8b
  401842:	mov    eax,DWORD PTR [rbp+0x20]
  401845:	mov    ecx,eax
  401847:	call   0x401582
  40184c:	mov    eax,DWORD PTR [rbp-0x8]
  40184f:	sub    eax,0x61
  401852:	cmp    eax,0x18
  401855:	ja     0x401d64
  40185b:	mov    eax,eax
  40185d:	lea    rdx,[rax*4+0x0]
  401865:	lea    rax,[rip+0x9930]        # 0x40b19c
  40186c:	mov    eax,DWORD PTR [rdx+rax*1]
  40186f:	movsxd rdx,eax
  401872:	lea    rax,[rip+0x9923]        # 0x40b19c
  401879:	add    rax,rdx
  40187c:	jmp    rax
  40187e:	lea    rax,[rbp-0x18]
  401882:	mov    rdx,rax
  401885:	mov    rcx,QWORD PTR [rbp+0x10]
  401889:	mov    rax,QWORD PTR [rip+0xfc00]        # 0x411490
  401890:	call   rax
  401892:	cmp    DWORD PTR [rbp+0x18],0x0
  401896:	jne    0x4018a4
  401898:	lea    rcx,[rip+0x97fd]        # 0x40b09c
  40189f:	call   0x4091e0
  4018a4:	mov    rax,QWORD PTR [rbp-0x18]
  4018a8:	mov    rdx,rax
  4018ab:	lea    rcx,[rip+0x97f3]        # 0x40b0a5
  4018b2:	call   0x4091e0
  4018b7:	cmp    DWORD PTR [rbp+0x18],0x0
  4018bb:	jne    0x4018c9
  4018bd:	lea    rcx,[rip+0x97e4]        # 0x40b0a8
  4018c4:	call   0x4091d0
  4018c9:	nop
  4018ca:	jmp    0x401d76
  4018cf:	lea    rax,[rbp-0x20]
  4018d3:	mov    rdx,rax
  4018d6:	mov    rcx,QWORD PTR [rbp+0x10]
  4018da:	mov    rax,QWORD PTR [rip+0xfbaf]        # 0x411490
  4018e1:	call   rax
  4018e3:	cmp    DWORD PTR [rbp+0x18],0x0
  4018e7:	jne    0x4018f5
  4018e9:	lea    rcx,[rip+0x97ba]        # 0x40b0aa
  4018f0:	call   0x4091e0
  4018f5:	mov    rax,QWORD PTR [rbp-0x20]
  4018f9:	mov    rdx,rax
  4018fc:	lea    rcx,[rip+0x97a2]        # 0x40b0a5
  401903:	call   0x4091e0
  401908:	cmp    DWORD PTR [rbp+0x18],0x0
  40190c:	jne    0x40191a
  40190e:	lea    rcx,[rip+0x9793]        # 0x40b0a8
  401915:	call   0x4091d0
  40191a:	nop
  40191b:	jmp    0x401d76
  401920:	lea    rax,[rbp-0x28]
  401924:	mov    rdx,rax
  401927:	mov    rcx,QWORD PTR [rbp+0x10]
  40192b:	mov    rax,QWORD PTR [rip+0xfb5e]        # 0x411490
  401932:	call   rax
  401934:	cmp    DWORD PTR [rbp+0x18],0x0
  401938:	jne    0x401946
  40193a:	lea    rcx,[rip+0x9775]        # 0x40b0b6
  401941:	call   0x4091e0
  401946:	mov    rax,QWORD PTR [rbp-0x28]
  40194a:	mov    rdx,rax
  40194d:	lea    rcx,[rip+0x9751]        # 0x40b0a5
  401954:	call   0x4091e0
  401959:	cmp    DWORD PTR [rbp+0x18],0x0
  40195d:	jne    0x40196b
  40195f:	lea    rcx,[rip+0x9742]        # 0x40b0a8
  401966:	call   0x4091d0
  40196b:	nop
  40196c:	jmp    0x401d76
  401971:	lea    rax,[rbp-0x2a]
  401975:	mov    rdx,rax
  401978:	mov    rcx,QWORD PTR [rbp+0x10]
  40197c:	mov    rax,QWORD PTR [rip+0xfb0d]        # 0x411490
  401983:	call   rax
  401985:	movzx  eax,WORD PTR [rbp-0x2a]
  401989:	cwde   
  40198a:	mov    edx,eax
  40198c:	lea    rcx,[rip+0x9731]        # 0x40b0c4
  401993:	call   0x4091e0
  401998:	nop
  401999:	jmp    0x401d76
  40199e:	lea    rax,[rbp-0x2c]
  4019a2:	mov    rdx,rax
  4019a5:	mov    rcx,QWORD PTR [rbp+0x10]
  4019a9:	mov    rax,QWORD PTR [rip+0xfae0]        # 0x411490
  4019b0:	call   rax
  4019b2:	movzx  eax,WORD PTR [rbp-0x2c]
  4019b6:	movzx  eax,ax
  4019b9:	mov    edx,eax
  4019bb:	lea    rcx,[rip+0x970c]        # 0x40b0ce
  4019c2:	call   0x4091e0
  4019c7:	nop
  4019c8:	jmp    0x401d76
  4019cd:	lea    rax,[rbp-0x30]
  4019d1:	mov    rdx,rax
  4019d4:	mov    rcx,QWORD PTR [rbp+0x10]
  4019d8:	mov    rax,QWORD PTR [rip+0xfab1]        # 0x411490
  4019df:	call   rax
  4019e1:	mov    eax,DWORD PTR [rbp-0x30]
  4019e4:	mov    edx,eax
  4019e6:	lea    rcx,[rip+0x96ec]        # 0x40b0d9
  4019ed:	call   0x4091e0
  4019f2:	nop
  4019f3:	jmp    0x401d76
  4019f8:	lea    rax,[rbp-0x34]
  4019fc:	mov    rdx,rax
  4019ff:	mov    rcx,QWORD PTR [rbp+0x10]
  401a03:	mov    rax,QWORD PTR [rip+0xfa86]        # 0x411490
  401a0a:	call   rax
  401a0c:	mov    eax,DWORD PTR [rbp-0x34]
  401a0f:	mov    edx,eax
  401a11:	lea    rcx,[rip+0x96cb]        # 0x40b0e3
  401a18:	call   0x4091e0
  401a1d:	nop
  401a1e:	jmp    0x401d76
  401a23:	lea    rax,[rbp-0x40]
  401a27:	mov    rdx,rax
  401a2a:	mov    rcx,QWORD PTR [rbp+0x10]
  401a2e:	mov    rax,QWORD PTR [rip+0xfa5b]        # 0x411490
  401a35:	call   rax
  401a37:	lea    rcx,[rip+0x96b0]        # 0x40b0ee
  401a3e:	call   0x4091d0
  401a43:	nop
  401a44:	jmp    0x401d76
  401a49:	lea    rax,[rbp-0x48]
  401a4d:	mov    rdx,rax
  401a50:	mov    rcx,QWORD PTR [rbp+0x10]
  401a54:	mov    rax,QWORD PTR [rip+0xfa35]        # 0x411490
  401a5b:	call   rax
  401a5d:	lea    rcx,[rip+0x969a]        # 0x40b0fe
  401a64:	call   0x4091d0
  401a69:	nop
  401a6a:	jmp    0x401d76
  401a6f:	lea    rax,[rbp-0x50]
  401a73:	mov    rdx,rax
  401a76:	mov    rcx,QWORD PTR [rbp+0x10]
  401a7a:	mov    rax,QWORD PTR [rip+0xfa0f]        # 0x411490
  401a81:	call   rax
  401a83:	mov    rax,QWORD PTR [rbp-0x50]
  401a87:	mov    rdx,rax
  401a8a:	mov    QWORD PTR [rbp-0xa8],rdx
  401a91:	movsd  xmm0,QWORD PTR [rbp-0xa8]
  401a99:	movapd xmm1,xmm0
  401a9d:	mov    rdx,rax
  401aa0:	lea    rcx,[rip+0x9668]        # 0x40b10f
  401aa7:	call   0x4091e0
  401aac:	nop
  401aad:	jmp    0x401d76
  401ab2:	lea    rax,[rbp-0x51]
  401ab6:	mov    rdx,rax
  401ab9:	mov    rcx,QWORD PTR [rbp+0x10]
  401abd:	mov    rax,QWORD PTR [rip+0xf9cc]        # 0x411490
  401ac4:	call   rax
  401ac6:	movzx  eax,BYTE PTR [rbp-0x51]
  401aca:	movzx  eax,al
  401acd:	mov    edx,eax
  401acf:	lea    rcx,[rip+0x9644]        # 0x40b11a
  401ad6:	call   0x4091e0
  401adb:	nop
  401adc:	jmp    0x401d76
  401ae1:	lea    rax,[rbp-0x58]
  401ae5:	mov    rdx,rax
  401ae8:	mov    rcx,QWORD PTR [rbp+0x10]
  401aec:	mov    rax,QWORD PTR [rip+0xf99d]        # 0x411490
  401af3:	call   rax
  401af5:	mov    eax,DWORD PTR [rbp-0x58]
  401af8:	test   eax,eax
  401afa:	je     0x401b05
  401afc:	lea    rax,[rip+0x9620]        # 0x40b123
  401b03:	jmp    0x401b0c
  401b05:	lea    rax,[rip+0x961c]        # 0x40b128
  401b0c:	mov    rdx,rax
  401b0f:	lea    rcx,[rip+0x9618]        # 0x40b12e
  401b16:	call   0x4091e0
  401b1b:	nop
  401b1c:	jmp    0x401d76
  401b21:	lea    rax,[rbp-0xa0]
  401b28:	mov    rdx,rax
  401b2b:	mov    rcx,QWORD PTR [rbp+0x10]
  401b2f:	mov    rax,QWORD PTR [rip+0xf98a]        # 0x4114c0
  401b36:	call   rax
  401b38:	lea    rcx,[rip+0x95fb]        # 0x40b13a
  401b3f:	call   0x4091e0
  401b44:	mov    eax,DWORD PTR [rbp+0x20]
  401b47:	lea    ecx,[rax+0x1]
  401b4a:	mov    edx,DWORD PTR [rbp+0x18]
  401b4d:	lea    rax,[rbp-0xa0]
  401b54:	mov    r8d,ecx
  401b57:	mov    rcx,rax
  401b5a:	call   0x401811
  401b5f:	nop
  401b60:	jmp    0x401d76
  401b65:	lea    rax,[rbp-0xa0]
  401b6c:	mov    rdx,rax
  401b6f:	mov    rcx,QWORD PTR [rbp+0x10]
  401b73:	mov    rax,QWORD PTR [rip+0xf946]        # 0x4114c0
  401b7a:	call   rax
  401b7c:	lea    rax,[rbp-0xa0]
  401b83:	mov    rcx,rax
  401b86:	mov    rax,QWORD PTR [rip+0xf8fb]        # 0x411488
  401b8d:	call   rax
  401b8f:	mov    DWORD PTR [rbp-0x4],eax
  401b92:	cmp    DWORD PTR [rbp-0x4],0x79
  401b96:	jne    0x401baf
  401b98:	mov    edx,DWORD PTR [rbp+0x20]
  401b9b:	lea    rax,[rbp-0xa0]
  401ba2:	mov    rcx,rax
  401ba5:	call   0x4016a2
  401baa:	jmp    0x401d76
  401baf:	lea    rcx,[rip+0x958d]        # 0x40b143
  401bb6:	call   0x4091d0
  401bbb:	jmp    0x401c11
  401bbd:	mov    eax,DWORD PTR [rbp+0x20]
  401bc0:	lea    ecx,[rax+0x1]
  401bc3:	mov    edx,DWORD PTR [rbp+0x18]
  401bc6:	lea    rax,[rbp-0xa0]
  401bcd:	mov    r8d,ecx
  401bd0:	mov    rcx,rax
  401bd3:	call   0x401811
  401bd8:	lea    rax,[rbp-0xa0]
  401bdf:	mov    rcx,rax
  401be2:	mov    rax,QWORD PTR [rip+0xf8c7]        # 0x4114b0
  401be9:	call   rax
  401beb:	lea    rax,[rbp-0xa0]
  401bf2:	mov    rcx,rax
  401bf5:	mov    rax,QWORD PTR [rip+0xf88c]        # 0x411488
  401bfc:	call   rax
  401bfe:	mov    DWORD PTR [rbp-0x4],eax
  401c01:	cmp    DWORD PTR [rbp-0x4],0x0
  401c05:	je     0x401c11
  401c07:	mov    ecx,0x2c
  401c0c:	call   0x4091d8
  401c11:	cmp    DWORD PTR [rbp-0x4],0x0
  401c15:	jne    0x401bbd
  401c17:	mov    eax,DWORD PTR [rbp+0x20]
  401c1a:	mov    ecx,eax
  401c1c:	call   0x401582
  401c21:	lea    rcx,[rip+0x9430]        # 0x40b058
  401c28:	call   0x4091d0
  401c2d:	nop
  401c2e:	jmp    0x401d76
  401c33:	lea    rax,[rbp-0xa0]
  401c3a:	mov    rdx,rax
  401c3d:	mov    rcx,QWORD PTR [rbp+0x10]
  401c41:	mov    rax,QWORD PTR [rip+0xf878]        # 0x4114c0
  401c48:	call   rax
  401c4a:	lea    rcx,[rip+0x94fa]        # 0x40b14b
  401c51:	call   0x4091d0
  401c56:	mov    eax,DWORD PTR [rbp+0x20]
  401c59:	lea    ecx,[rax+0x1]
  401c5c:	mov    edx,DWORD PTR [rbp+0x18]
  401c5f:	lea    rax,[rbp-0xa0]
  401c66:	mov    r8d,ecx
  401c69:	mov    rcx,rax
  401c6c:	call   0x401811
  401c71:	lea    rax,[rbp-0xa0]
  401c78:	mov    rcx,rax
  401c7b:	mov    rax,QWORD PTR [rip+0xf82e]        # 0x4114b0
  401c82:	call   rax
  401c84:	mov    eax,DWORD PTR [rbp+0x20]
  401c87:	lea    ecx,[rax+0x1]
  401c8a:	mov    edx,DWORD PTR [rbp+0x18]
  401c8d:	lea    rax,[rbp-0xa0]
  401c94:	mov    r8d,ecx
  401c97:	mov    rcx,rax
  401c9a:	call   0x401811
  401c9f:	mov    eax,DWORD PTR [rbp+0x20]
  401ca2:	mov    ecx,eax
  401ca4:	call   0x401582
  401ca9:	lea    rcx,[rip+0x94a7]        # 0x40b157
  401cb0:	call   0x4091d0
  401cb5:	nop
  401cb6:	jmp    0x401d76
  401cbb:	lea    rax,[rbp-0xa0]
  401cc2:	mov    rdx,rax
  401cc5:	mov    rcx,QWORD PTR [rbp+0x10]
  401cc9:	mov    rax,QWORD PTR [rip+0xf7f0]        # 0x4114c0
  401cd0:	call   rax
  401cd2:	lea    rcx,[rip+0x9480]        # 0x40b159
  401cd9:	call   0x4091d0
  401cde:	jmp    0x401d2f
  401ce0:	mov    eax,DWORD PTR [rbp+0x20]
  401ce3:	lea    ecx,[rax+0x1]
  401ce6:	mov    edx,DWORD PTR [rbp+0x18]
  401ce9:	lea    rax,[rbp-0xa0]
  401cf0:	mov    r8d,ecx
  401cf3:	mov    rcx,rax
  401cf6:	call   0x401811
  401cfb:	lea    rax,[rbp-0xa0]
  401d02:	mov    rcx,rax
  401d05:	mov    rax,QWORD PTR [rip+0xf7a4]        # 0x4114b0
  401d0c:	call   rax
  401d0e:	lea    rax,[rbp-0xa0]
  401d15:	mov    rcx,rax
  401d18:	mov    rax,QWORD PTR [rip+0xf769]        # 0x411488
  401d1f:	call   rax
  401d21:	test   eax,eax
  401d23:	je     0x401d2f
  401d25:	mov    ecx,0x2c
  401d2a:	call   0x4091d8
  401d2f:	lea    rax,[rbp-0xa0]
  401d36:	mov    rcx,rax
  401d39:	mov    rax,QWORD PTR [rip+0xf748]        # 0x411488
  401d40:	call   rax
  401d42:	mov    DWORD PTR [rbp-0xc],eax
  401d45:	cmp    DWORD PTR [rbp-0xc],0x0
  401d49:	jne    0x401ce0
  401d4b:	mov    eax,DWORD PTR [rbp+0x20]
  401d4e:	mov    ecx,eax
  401d50:	call   0x401582
  401d55:	lea    rcx,[rip+0x9406]        # 0x40b162
  401d5c:	call   0x4091d0
  401d61:	nop
  401d62:	jmp    0x401d76
  401d64:	mov    eax,DWORD PTR [rbp-0x8]
  401d67:	mov    edx,eax
  401d69:	lea    rcx,[rip+0x93f8]        # 0x40b168
  401d70:	call   0x4091e0
  401d75:	nop
  401d76:	mov    rcx,QWORD PTR [rbp+0x10]
  401d7a:	mov    rax,QWORD PTR [rip+0xf72f]        # 0x4114b0
  401d81:	call   rax
  401d83:	test   eax,eax
  401d85:	jne    0x401827
  401d8b:	add    rsp,0xd0
  401d92:	pop    rbp
  401d93:	ret    
  401d94:	push   rbp
  401d95:	push   rdi
  401d96:	push   rsi
  401d97:	push   rbx
  401d98:	sub    rsp,0x98
  401d9f:	lea    rbp,[rsp+0x80]
  401da7:	mov    QWORD PTR [rbp+0x40],rcx
  401dab:	mov    DWORD PTR [rbp+0x48],edx
  401dae:	mov    DWORD PTR [rbp+0x50],r8d
  401db2:	mov    DWORD PTR [rbp+0x58],r9d
  401db6:	mov    rcx,QWORD PTR [rbp+0x40]
  401dba:	mov    rax,QWORD PTR [rip+0xf6af]        # 0x411470
  401dc1:	call   rax
  401dc3:	mov    DWORD PTR [rbp+0xc],eax
  401dc6:	mov    rcx,QWORD PTR [rbp+0x40]
  401dca:	mov    rax,QWORD PTR [rip+0xf68f]        # 0x411460
  401dd1:	call   rax
  401dd3:	mov    QWORD PTR [rbp+0x0],rax
  401dd7:	mov    rcx,QWORD PTR [rbp+0x40]
  401ddb:	mov    rax,QWORD PTR [rip+0xf64e]        # 0x411430
  401de2:	call   rax
  401de4:	mov    QWORD PTR [rbp-0x8],rax
  401de8:	cmp    DWORD PTR [rbp+0x48],0x0
  401dec:	jne    0x401f8c
  401df2:	cmp    DWORD PTR [rbp+0x50],0x0
  401df6:	jne    0x401dfe
  401df8:	cmp    DWORD PTR [rbp+0x58],0x0
  401dfc:	je     0x401e5a
  401dfe:	cmp    QWORD PTR [rbp-0x8],0x0
  401e03:	je     0x401e0b
  401e05:	mov    rsi,QWORD PTR [rbp-0x8]
  401e09:	jmp    0x401e12
  401e0b:	lea    rsi,[rip+0x93ee]        # 0x40b200
  401e12:	cmp    QWORD PTR [rbp+0x0],0x0
  401e17:	je     0x401e1f
  401e19:	mov    rbx,QWORD PTR [rbp+0x0]
  401e1d:	jmp    0x401e26
  401e1f:	lea    rbx,[rip+0x93ed]        # 0x40b213
  401e26:	mov    eax,DWORD PTR [rbp+0xc]
  401e29:	mov    ecx,eax
  401e2b:	call   0x401530
  401e30:	mov    rcx,rax
  401e33:	mov    edx,DWORD PTR [rbp+0x58]
  401e36:	mov    eax,DWORD PTR [rbp+0x50]
  401e39:	mov    QWORD PTR [rsp+0x28],rsi
  401e3e:	mov    QWORD PTR [rsp+0x20],rbx
  401e43:	mov    r9d,edx
  401e46:	mov    r8d,eax
  401e49:	mov    rdx,rcx
  401e4c:	lea    rcx,[rip+0x93d5]        # 0x40b228
  401e53:	call   0x4091e0
  401e58:	jmp    0x401ea1
  401e5a:	cmp    QWORD PTR [rbp-0x8],0x0
  401e5f:	je     0x401e67
  401e61:	mov    rsi,QWORD PTR [rbp-0x8]
  401e65:	jmp    0x401e6e
  401e67:	lea    rsi,[rip+0x9392]        # 0x40b200
  401e6e:	cmp    QWORD PTR [rbp+0x0],0x0
  401e73:	je     0x401e7b
  401e75:	mov    rbx,QWORD PTR [rbp+0x0]
  401e79:	jmp    0x401e82
  401e7b:	lea    rbx,[rip+0x9391]        # 0x40b213
  401e82:	mov    eax,DWORD PTR [rbp+0xc]
  401e85:	mov    ecx,eax
  401e87:	call   0x401530
  401e8c:	mov    r9,rsi
  401e8f:	mov    r8,rbx
  401e92:	mov    rdx,rax
  401e95:	lea    rcx,[rip+0x93bc]        # 0x40b258
  401e9c:	call   0x4091e0
  401ea1:	mov    eax,DWORD PTR [rbp+0xc]
  401ea4:	cmp    eax,0x2
  401ea7:	je     0x401f22
  401ea9:	cmp    eax,0x2
  401eac:	jg     0x401eb8
  401eae:	cmp    eax,0x1
  401eb1:	je     0x401eca
  401eb3:	jmp    0x401f81
  401eb8:	cmp    eax,0x3
  401ebb:	je     0x401f51
  401ec1:	cmp    eax,0x4
  401ec4:	jne    0x401f81
  401eca:	mov    rcx,QWORD PTR [rbp+0x40]
  401ece:	mov    rax,QWORD PTR [rip+0xf573]        # 0x411448
  401ed5:	call   rax
  401ed7:	mov    rbx,rax
  401eda:	mov    rcx,QWORD PTR [rbp+0x40]
  401ede:	mov    rax,QWORD PTR [rip+0xf55b]        # 0x411440
  401ee5:	call   rax
  401ee7:	mov    rdi,rax
  401eea:	mov    rcx,QWORD PTR [rbp+0x40]
  401eee:	mov    rax,QWORD PTR [rip+0xf55b]        # 0x411450
  401ef5:	call   rax
  401ef7:	mov    rsi,rax
  401efa:	mov    rcx,QWORD PTR [rbp+0x40]
  401efe:	mov    rax,QWORD PTR [rip+0xf563]        # 0x411468
  401f05:	call   rax
  401f07:	mov    QWORD PTR [rsp+0x20],rbx
  401f0c:	mov    r9,rdi
  401f0f:	mov    r8,rsi
  401f12:	mov    edx,eax
  401f14:	lea    rcx,[rip+0x935d]        # 0x40b278
  401f1b:	call   0x4091e0
  401f20:	jmp    0x401f8c
  401f22:	mov    rcx,QWORD PTR [rbp+0x40]
  401f26:	mov    rax,QWORD PTR [rip+0xf52b]        # 0x411458
  401f2d:	call   rax
  401f2f:	mov    ebx,eax
  401f31:	mov    rcx,QWORD PTR [rbp+0x40]
  401f35:	mov    rax,QWORD PTR [rip+0xf52c]        # 0x411468
  401f3c:	call   rax
  401f3e:	mov    r8d,ebx
  401f41:	mov    edx,eax
  401f43:	lea    rcx,[rip+0x935b]        # 0x40b2a5
  401f4a:	call   0x4091e0
  401f4f:	jmp    0x401f8c
  401f51:	mov    rcx,QWORD PTR [rbp+0x40]
  401f55:	mov    rax,QWORD PTR [rip+0xf4fc]        # 0x411458
  401f5c:	call   rax
  401f5e:	mov    ebx,eax
  401f60:	mov    rcx,QWORD PTR [rbp+0x40]
  401f64:	mov    rax,QWORD PTR [rip+0xf4cd]        # 0x411438
  401f6b:	call   rax
  401f6d:	mov    r8d,ebx
  401f70:	mov    rdx,rax
  401f73:	lea    rcx,[rip+0x934e]        # 0x40b2c8
  401f7a:	call   0x4091e0
  401f7f:	jmp    0x401f8c
  401f81:	mov    ecx,0xa
  401f86:	call   0x4091d8
  401f8b:	nop
  401f8c:	lea    rax,[rbp-0x50]
  401f90:	mov    rdx,rax
  401f93:	mov    rcx,QWORD PTR [rbp+0x40]
  401f97:	mov    rax,QWORD PTR [rip+0xf502]        # 0x4114a0
  401f9e:	call   rax
  401fa0:	mov    edx,DWORD PTR [rbp+0x48]
  401fa3:	lea    rax,[rbp-0x50]
  401fa7:	mov    r8d,0x1
  401fad:	mov    rcx,rax
  401fb0:	call   0x401811
  401fb5:	mov    rax,QWORD PTR [rip+0xf62c]        # 0x4115e8
  401fbc:	call   rax
  401fbe:	add    rax,0x30
  401fc2:	mov    rcx,rax
  401fc5:	call   0x409230
  401fca:	nop
  401fcb:	add    rsp,0x98
  401fd2:	pop    rbx
  401fd3:	pop    rsi
  401fd4:	pop    rdi
  401fd5:	pop    rbp
  401fd6:	ret    
  401fd7:	nop
  401fd8:	nop
  401fd9:	nop
  401fda:	nop
  401fdb:	nop
  401fdc:	nop
  401fdd:	nop
  401fde:	nop
  401fdf:	nop
  401fe0:	push   rbp
  401fe1:	push   rbx
  401fe2:	sub    rsp,0x28
  401fe6:	lea    rbp,[rsp+0x80]
  401fee:	mov    DWORD PTR [rbp-0x40],ecx
  401ff1:	mov    rbx,QWORD PTR [rip+0xd038]        # 0x40f030
  401ff8:	mov    rax,QWORD PTR [rip+0xf5e9]        # 0x4115e8
  401fff:	call   rax
  402001:	add    rax,0x60
  402005:	mov    r8,rbx
  402008:	lea    rdx,[rip+0x92e1]        # 0x40b2f0
  40200f:	mov    rcx,rax
  402012:	call   0x409228
  402017:	mov    ecx,DWORD PTR [rbp-0x40]
  40201a:	call   0x409238
  40201f:	nop
  402020:	push   rbp
  402021:	push   rsi
  402022:	push   rbx
  402023:	mov    rbp,rsp
  402026:	sub    rsp,0x50
  40202a:	mov    QWORD PTR [rbp+0x20],rcx
  40202e:	mov    DWORD PTR [rbp+0x28],edx
  402031:	mov    QWORD PTR [rbp+0x30],r8
  402035:	mov    eax,DWORD PTR [rbp+0x28]
  402038:	sub    eax,0x62
  40203b:	cmp    eax,0x17
  40203e:	ja     0x402312
  402044:	mov    eax,eax
  402046:	lea    rdx,[rax*4+0x0]
  40204e:	lea    rax,[rip+0x93cb]        # 0x40b420
  402055:	mov    eax,DWORD PTR [rdx+rax*1]
  402058:	movsxd rdx,eax
  40205b:	lea    rax,[rip+0x93be]        # 0x40b420
  402062:	add    rax,rdx
  402065:	jmp    rax
  402067:	mov    rax,QWORD PTR [rbp+0x30]
  40206b:	mov    r8d,0x0
  402071:	mov    edx,0x0
  402076:	mov    rcx,rax
  402079:	call   0x409180
  40207e:	mov    BYTE PTR [rbp-0x29],al
  402081:	lea    rax,[rbp-0x29]
  402085:	mov    r8,rax
  402088:	mov    edx,0x79
  40208d:	mov    rcx,QWORD PTR [rbp+0x20]
  402091:	mov    rax,QWORD PTR [rip+0xf3e0]        # 0x411478
  402098:	call   rax
  40209a:	jmp    0x40234c
  40209f:	mov    rax,QWORD PTR [rbp+0x30]
  4020a3:	mov    edx,0x0
  4020a8:	mov    rcx,rax
  4020ab:	call   0x404d50
  4020b0:	movq   rax,xmm0
  4020b5:	mov    QWORD PTR [rbp-0x28],rax
  4020b9:	lea    rax,[rbp-0x28]
  4020bd:	mov    r8,rax
  4020c0:	mov    edx,0x64
  4020c5:	mov    rcx,QWORD PTR [rbp+0x20]
  4020c9:	mov    rax,QWORD PTR [rip+0xf3a8]        # 0x411478
  4020d0:	call   rax
  4020d2:	jmp    0x40234c
  4020d7:	mov    rax,QWORD PTR [rbp+0x30]
  4020db:	mov    r8d,0x0
  4020e1:	mov    edx,0x0
  4020e6:	mov    rcx,rax
  4020e9:	call   0x409188
  4020ee:	mov    WORD PTR [rbp-0x4],ax
  4020f2:	lea    rax,[rbp-0x4]
  4020f6:	mov    r8,rax
  4020f9:	mov    edx,0x6e
  4020fe:	mov    rcx,QWORD PTR [rbp+0x20]
  402102:	mov    rax,QWORD PTR [rip+0xf36f]        # 0x411478
  402109:	call   rax
  40210b:	jmp    0x40234c
  402110:	mov    rax,QWORD PTR [rbp+0x30]
  402114:	mov    r8d,0x0
  40211a:	mov    edx,0x0
  40211f:	mov    rcx,rax
  402122:	call   0x409180
  402127:	mov    WORD PTR [rbp-0x2],ax
  40212b:	lea    rax,[rbp-0x2]
  40212f:	mov    r8,rax
  402132:	mov    edx,0x71
  402137:	mov    rcx,QWORD PTR [rbp+0x20]
  40213b:	mov    rax,QWORD PTR [rip+0xf336]        # 0x411478
  402142:	call   rax
  402144:	jmp    0x40234c
  402149:	mov    rax,QWORD PTR [rbp+0x30]
  40214d:	mov    r8d,0x0
  402153:	mov    edx,0x0
  402158:	mov    rcx,rax
  40215b:	call   0x409188
  402160:	mov    DWORD PTR [rbp-0xc],eax
  402163:	lea    rax,[rbp-0xc]
  402167:	mov    r8,rax
  40216a:	mov    edx,0x69
  40216f:	mov    rcx,QWORD PTR [rbp+0x20]
  402173:	mov    rax,QWORD PTR [rip+0xf2fe]        # 0x411478
  40217a:	call   rax
  40217c:	jmp    0x40234c
  402181:	mov    rax,QWORD PTR [rbp+0x30]
  402185:	mov    r8d,0x0
  40218b:	mov    edx,0x0
  402190:	mov    rcx,rax
  402193:	call   0x409180
  402198:	mov    DWORD PTR [rbp-0x8],eax
  40219b:	lea    rax,[rbp-0x8]
  40219f:	mov    r8,rax
  4021a2:	mov    edx,0x75
  4021a7:	mov    rcx,QWORD PTR [rbp+0x20]
  4021ab:	mov    rax,QWORD PTR [rip+0xf2c6]        # 0x411478
  4021b2:	call   rax
  4021b4:	jmp    0x40234c
  4021b9:	mov    rax,QWORD PTR [rbp+0x30]
  4021bd:	mov    r8d,0x0
  4021c3:	mov    edx,0x0
  4021c8:	mov    rcx,rax
  4021cb:	call   0x404e30
  4021d0:	mov    QWORD PTR [rbp-0x20],rax
  4021d4:	lea    rax,[rbp-0x20]
  4021d8:	mov    r8,rax
  4021db:	mov    edx,0x78
  4021e0:	mov    rcx,QWORD PTR [rbp+0x20]
  4021e4:	mov    rax,QWORD PTR [rip+0xf28d]        # 0x411478
  4021eb:	call   rax
  4021ed:	jmp    0x40234c
  4021f2:	mov    rax,QWORD PTR [rbp+0x30]
  4021f6:	mov    r8d,0x0
  4021fc:	mov    edx,0x0
  402201:	mov    rcx,rax
  402204:	call   0x405090
  402209:	mov    QWORD PTR [rbp-0x18],rax
  40220d:	lea    rax,[rbp-0x18]
  402211:	mov    r8,rax
  402214:	mov    edx,0x74
  402219:	mov    rcx,QWORD PTR [rbp+0x20]
  40221d:	mov    rax,QWORD PTR [rip+0xf254]        # 0x411478
  402224:	call   rax
  402226:	jmp    0x40234c
  40222b:	lea    rax,[rbp+0x30]
  40222f:	mov    r8,rax
  402232:	mov    edx,0x73
  402237:	mov    rcx,QWORD PTR [rbp+0x20]
  40223b:	mov    rax,QWORD PTR [rip+0xf236]        # 0x411478
  402242:	call   rax
  402244:	jmp    0x40234c
  402249:	lea    rax,[rbp+0x30]
  40224d:	mov    r8,rax
  402250:	mov    edx,0x6f
  402255:	mov    rcx,QWORD PTR [rbp+0x20]
  402259:	mov    rax,QWORD PTR [rip+0xf218]        # 0x411478
  402260:	call   rax
  402262:	jmp    0x40234c
  402267:	mov    rax,QWORD PTR [rbp+0x30]
  40226b:	lea    rdx,[rip+0x914f]        # 0x40b3c1
  402272:	mov    rcx,rax
  402275:	call   0x4091b8
  40227a:	test   eax,eax
  40227c:	jne    0x4022a0
  40227e:	mov    DWORD PTR [rbp-0x30],0x1
  402285:	lea    rax,[rbp-0x30]
  402289:	mov    r8,rax
  40228c:	mov    edx,0x62
  402291:	mov    rcx,QWORD PTR [rbp+0x20]
  402295:	mov    rax,QWORD PTR [rip+0xf1dc]        # 0x411478
  40229c:	call   rax
  40229e:	jmp    0x402310
  4022a0:	mov    rax,QWORD PTR [rbp+0x30]
  4022a4:	lea    rdx,[rip+0x911b]        # 0x40b3c6
  4022ab:	mov    rcx,rax
  4022ae:	call   0x4091b8
  4022b3:	test   eax,eax
  4022b5:	jne    0x4022d9
  4022b7:	mov    DWORD PTR [rbp-0x30],0x0
  4022be:	lea    rax,[rbp-0x30]
  4022c2:	mov    r8,rax
  4022c5:	mov    edx,0x62
  4022ca:	mov    rcx,QWORD PTR [rbp+0x20]
  4022ce:	mov    rax,QWORD PTR [rip+0xf1a3]        # 0x411478
  4022d5:	call   rax
  4022d7:	jmp    0x402310
  4022d9:	mov    rsi,QWORD PTR [rbp+0x30]
  4022dd:	mov    rbx,QWORD PTR [rip+0xcd4c]        # 0x40f030
  4022e4:	mov    rax,QWORD PTR [rip+0xf2fd]        # 0x4115e8
  4022eb:	call   rax
  4022ed:	add    rax,0x60
  4022f1:	mov    r9,rsi
  4022f4:	mov    r8,rbx
  4022f7:	lea    rdx,[rip+0x90d2]        # 0x40b3d0
  4022fe:	mov    rcx,rax
  402301:	call   0x409228
  402306:	mov    ecx,0x1
  40230b:	call   0x409238
  402310:	jmp    0x40234c
  402312:	mov    eax,DWORD PTR [rbp+0x28]
  402315:	movsx  esi,al
  402318:	mov    rbx,QWORD PTR [rip+0xcd11]        # 0x40f030
  40231f:	mov    rax,QWORD PTR [rip+0xf2c2]        # 0x4115e8
  402326:	call   rax
  402328:	add    rax,0x60
  40232c:	mov    r9d,esi
  40232f:	mov    r8,rbx
  402332:	lea    rdx,[rip+0x90c7]        # 0x40b400
  402339:	mov    rcx,rax
  40233c:	call   0x409228
  402341:	mov    ecx,0x1
  402346:	call   0x409238
  40234b:	nop
  40234c:	add    rsp,0x50
  402350:	pop    rbx
  402351:	pop    rsi
  402352:	pop    rbp
  402353:	ret    
  402354:	push   rbp
  402355:	mov    rbp,rsp
  402358:	sub    rsp,0x30
  40235c:	mov    QWORD PTR [rbp+0x10],rcx
  402360:	mov    DWORD PTR [rbp+0x18],edx
  402363:	mov    QWORD PTR [rbp+0x20],r8
  402367:	mov    rax,QWORD PTR [rbp+0x20]
  40236b:	mov    rcx,rax
  40236e:	call   0x409170
  402373:	mov    QWORD PTR [rbp-0x10],rax
  402377:	mov    rax,QWORD PTR [rbp-0x10]
  40237b:	lea    rdx,[rip+0x90fe]        # 0x40b480
  402382:	mov    rcx,rax
  402385:	call   0x409190
  40238a:	mov    QWORD PTR [rbp-0x8],rax
  40238e:	jmp    0x4023ba
  402390:	mov    rdx,QWORD PTR [rbp-0x8]
  402394:	mov    eax,DWORD PTR [rbp+0x18]
  402397:	mov    r8,rdx
  40239a:	mov    edx,eax
  40239c:	mov    rcx,QWORD PTR [rbp+0x10]
  4023a0:	call   0x402020
  4023a5:	lea    rdx,[rip+0x90d4]        # 0x40b480
  4023ac:	mov    ecx,0x0
  4023b1:	call   0x409190
  4023b6:	mov    QWORD PTR [rbp-0x8],rax
  4023ba:	cmp    QWORD PTR [rbp-0x8],0x0
  4023bf:	jne    0x402390
  4023c1:	mov    rax,QWORD PTR [rbp-0x10]
  4023c5:	mov    rcx,rax
  4023c8:	call   0x409220
  4023cd:	nop
  4023ce:	add    rsp,0x30
  4023d2:	pop    rbp
  4023d3:	ret    
  4023d4:	push   rbp
  4023d5:	push   rbx
  4023d6:	sub    rsp,0x88
  4023dd:	lea    rbp,[rsp+0x80]
  4023e5:	mov    QWORD PTR [rbp+0x20],rcx
  4023e9:	mov    DWORD PTR [rbp+0x28],edx
  4023ec:	mov    DWORD PTR [rbp+0x30],r8d
  4023f0:	mov    QWORD PTR [rbp+0x38],r9
  4023f4:	mov    rax,QWORD PTR [rbp+0x38]
  4023f8:	mov    rcx,rax
  4023fb:	call   0x409170
  402400:	mov    QWORD PTR [rbp-0x10],rax
  402404:	mov    rax,QWORD PTR [rbp-0x10]
  402408:	lea    rdx,[rip+0x9071]        # 0x40b480
  40240f:	mov    rcx,rax
  402412:	call   0x409190
  402417:	mov    QWORD PTR [rbp-0x8],rax
  40241b:	jmp    0x4024e0
  402420:	lea    rax,[rbp-0x60]
  402424:	mov    r9,rax
  402427:	mov    r8d,0x0
  40242d:	mov    edx,0x65
  402432:	mov    rcx,QWORD PTR [rbp+0x20]
  402436:	mov    rax,QWORD PTR [rip+0xf07b]        # 0x4114b8
  40243d:	call   rax
  40243f:	mov    rcx,QWORD PTR [rbp-0x8]
  402443:	mov    edx,DWORD PTR [rbp+0x28]
  402446:	lea    rax,[rbp-0x60]
  40244a:	mov    r8,rcx
  40244d:	mov    rcx,rax
  402450:	call   0x402020
  402455:	lea    rdx,[rip+0x9024]        # 0x40b480
  40245c:	mov    ecx,0x0
  402461:	call   0x409190
  402466:	mov    QWORD PTR [rbp-0x8],rax
  40246a:	cmp    QWORD PTR [rbp-0x8],0x0
  40246f:	jne    0x4024a1
  402471:	mov    rbx,QWORD PTR [rip+0xcbb8]        # 0x40f030
  402478:	mov    rax,QWORD PTR [rip+0xf169]        # 0x4115e8
  40247f:	call   rax
  402481:	add    rax,0x60
  402485:	mov    r8,rbx
  402488:	lea    rdx,[rip+0x8ff3]        # 0x40b482
  40248f:	mov    rcx,rax
  402492:	call   0x409228
  402497:	mov    ecx,0x1
  40249c:	call   0x409238
  4024a1:	mov    rcx,QWORD PTR [rbp-0x8]
  4024a5:	mov    edx,DWORD PTR [rbp+0x30]
  4024a8:	lea    rax,[rbp-0x60]
  4024ac:	mov    r8,rcx
  4024af:	mov    rcx,rax
  4024b2:	call   0x402020
  4024b7:	lea    rax,[rbp-0x60]
  4024bb:	mov    rdx,rax
  4024be:	mov    rcx,QWORD PTR [rbp+0x20]
  4024c2:	mov    rax,QWORD PTR [rip+0xefb7]        # 0x411480
  4024c9:	call   rax
  4024cb:	lea    rdx,[rip+0x8fae]        # 0x40b480
  4024d2:	mov    ecx,0x0
  4024d7:	call   0x409190
  4024dc:	mov    QWORD PTR [rbp-0x8],rax
  4024e0:	cmp    QWORD PTR [rbp-0x8],0x0
  4024e5:	jne    0x402420
  4024eb:	mov    rax,QWORD PTR [rbp-0x10]
  4024ef:	mov    rcx,rax
  4024f2:	call   0x409220
  4024f7:	nop
  4024f8:	add    rsp,0x88
  4024ff:	pop    rbx
  402500:	pop    rbp
  402501:	ret    
  402502:	push   rbp
  402503:	push   rbx
  402504:	sub    rsp,0x38
  402508:	lea    rbp,[rsp+0x80]
  402510:	mov    QWORD PTR [rbp-0x30],rcx
  402514:	lea    rdx,[rip+0x8f81]        # 0x40b49c
  40251b:	mov    rcx,QWORD PTR [rbp-0x30]
  40251f:	call   0x4091b8
  402524:	test   eax,eax
  402526:	jne    0x402534
  402528:	mov    DWORD PTR [rbp-0x54],0x73
  40252f:	jmp    0x40269f
  402534:	lea    rdx,[rip+0x8f68]        # 0x40b4a3
  40253b:	mov    rcx,QWORD PTR [rbp-0x30]
  40253f:	call   0x4091b8
  402544:	test   eax,eax
  402546:	jne    0x402554
  402548:	mov    DWORD PTR [rbp-0x54],0x6e
  40254f:	jmp    0x40269f
  402554:	lea    rdx,[rip+0x8f4e]        # 0x40b4a9
  40255b:	mov    rcx,QWORD PTR [rbp-0x30]
  40255f:	call   0x4091b8
  402564:	test   eax,eax
  402566:	jne    0x402574
  402568:	mov    DWORD PTR [rbp-0x54],0x71
  40256f:	jmp    0x40269f
  402574:	lea    rdx,[rip+0x8f35]        # 0x40b4b0
  40257b:	mov    rcx,QWORD PTR [rbp-0x30]
  40257f:	call   0x4091b8
  402584:	test   eax,eax
  402586:	jne    0x402594
  402588:	mov    DWORD PTR [rbp-0x54],0x69
  40258f:	jmp    0x40269f
  402594:	lea    rdx,[rip+0x8f1b]        # 0x40b4b6
  40259b:	mov    rcx,QWORD PTR [rbp-0x30]
  40259f:	call   0x4091b8
  4025a4:	test   eax,eax
  4025a6:	jne    0x4025b4
  4025a8:	mov    DWORD PTR [rbp-0x54],0x75
  4025af:	jmp    0x40269f
  4025b4:	lea    rdx,[rip+0x8f02]        # 0x40b4bd
  4025bb:	mov    rcx,QWORD PTR [rbp-0x30]
  4025bf:	call   0x4091b8
  4025c4:	test   eax,eax
  4025c6:	jne    0x4025d4
  4025c8:	mov    DWORD PTR [rbp-0x54],0x78
  4025cf:	jmp    0x40269f
  4025d4:	lea    rdx,[rip+0x8ee8]        # 0x40b4c3
  4025db:	mov    rcx,QWORD PTR [rbp-0x30]
  4025df:	call   0x4091b8
  4025e4:	test   eax,eax
  4025e6:	jne    0x4025f4
  4025e8:	mov    DWORD PTR [rbp-0x54],0x74
  4025ef:	jmp    0x40269f
  4025f4:	lea    rdx,[rip+0x8ecf]        # 0x40b4ca
  4025fb:	mov    rcx,QWORD PTR [rbp-0x30]
  4025ff:	call   0x4091b8
  402604:	test   eax,eax
  402606:	jne    0x402614
  402608:	mov    DWORD PTR [rbp-0x54],0x64
  40260f:	jmp    0x40269f
  402614:	lea    rdx,[rip+0x8eb6]        # 0x40b4d1
  40261b:	mov    rcx,QWORD PTR [rbp-0x30]
  40261f:	call   0x4091b8
  402624:	test   eax,eax
  402626:	jne    0x402631
  402628:	mov    DWORD PTR [rbp-0x54],0x79
  40262f:	jmp    0x40269f
  402631:	lea    rdx,[rip+0x8e9e]        # 0x40b4d6
  402638:	mov    rcx,QWORD PTR [rbp-0x30]
  40263c:	call   0x4091b8
  402641:	test   eax,eax
  402643:	jne    0x40264e
  402645:	mov    DWORD PTR [rbp-0x54],0x62
  40264c:	jmp    0x40269f
  40264e:	lea    rdx,[rip+0x8e89]        # 0x40b4de
  402655:	mov    rcx,QWORD PTR [rbp-0x30]
  402659:	call   0x4091b8
  40265e:	test   eax,eax
  402660:	jne    0x40266b
  402662:	mov    DWORD PTR [rbp-0x54],0x6f
  402669:	jmp    0x40269f
  40266b:	mov    rbx,QWORD PTR [rip+0xc9be]        # 0x40f030
  402672:	mov    rax,QWORD PTR [rip+0xef6f]        # 0x4115e8
  402679:	call   rax
  40267b:	add    rax,0x60
  40267f:	mov    r9,QWORD PTR [rbp-0x30]
  402683:	mov    r8,rbx
  402686:	lea    rdx,[rip+0x8e59]        # 0x40b4e6
  40268d:	mov    rcx,rax
  402690:	call   0x409228
  402695:	mov    ecx,0x1
  40269a:	call   0x409238
  40269f:	mov    eax,DWORD PTR [rbp-0x54]
  4026a2:	add    rsp,0x38
  4026a6:	pop    rbx
  4026a7:	pop    rbp
  4026a8:	ret    
  4026a9:	push   rbp
  4026aa:	push   rsi
  4026ab:	push   rbx
  4026ac:	sub    rsp,0x1b0
  4026b3:	lea    rbp,[rsp+0x80]
  4026bb:	mov    DWORD PTR [rbp+0x150],ecx
  4026c1:	mov    QWORD PTR [rbp+0x158],rdx
  4026c8:	call   0x403960
  4026cd:	mov    DWORD PTR [rbp+0x10c],0x0
  4026d7:	mov    QWORD PTR [rbp+0x100],0x0
  4026e2:	mov    QWORD PTR [rbp+0xf8],0x0
  4026ed:	mov    QWORD PTR [rbp+0xf0],0x0
  4026f8:	mov    DWORD PTR [rbp+0xec],0x4
  402702:	mov    QWORD PTR [rbp+0xe0],0x0
  40270d:	mov    QWORD PTR [rbp+0xd8],0x0
  402718:	mov    DWORD PTR [rbp+0xd4],0x0
  402722:	mov    DWORD PTR [rbp+0xd0],0x0
  40272c:	mov    rax,QWORD PTR [rbp+0x158]
  402733:	mov    rax,QWORD PTR [rax]
  402736:	mov    QWORD PTR [rip+0xc8f3],rax        # 0x40f030
  40273d:	cmp    DWORD PTR [rbp+0x150],0x2
  402744:	jg     0x402750
  402746:	mov    ecx,0x1
  40274b:	call   0x401fe0
  402750:	mov    DWORD PTR [rbp+0x11c],0x0
  40275a:	mov    DWORD PTR [rbp+0x118],0x0
  402764:	mov    DWORD PTR [rbp+0x114],0xffffffff
  40276e:	mov    DWORD PTR [rbp+0x110],0x1
  402778:	jmp    0x402c03
  40277d:	mov    eax,DWORD PTR [rbp+0x110]
  402783:	cdqe   
  402785:	lea    rdx,[rax*8+0x0]
  40278d:	mov    rax,QWORD PTR [rbp+0x158]
  402794:	add    rax,rdx
  402797:	mov    rax,QWORD PTR [rax]
  40279a:	mov    QWORD PTR [rbp+0xa0],rax
  4027a1:	mov    rax,QWORD PTR [rbp+0xa0]
  4027a8:	lea    rdx,[rip+0x8d4e]        # 0x40b4fd
  4027af:	mov    rcx,rax
  4027b2:	call   0x4091b8
  4027b7:	test   eax,eax
  4027b9:	jne    0x4027d4
  4027bb:	mov    DWORD PTR [rbp+0x10c],0x1
  4027c5:	mov    DWORD PTR [rbp+0xd0],0x1
  4027cf:	jmp    0x402bfc
  4027d4:	mov    rax,QWORD PTR [rbp+0xa0]
  4027db:	lea    rdx,[rip+0x8d24]        # 0x40b506
  4027e2:	mov    rcx,rax
  4027e5:	call   0x4091b8
  4027ea:	test   eax,eax
  4027ec:	jne    0x402807
  4027ee:	mov    DWORD PTR [rbp+0x10c],0x0
  4027f8:	mov    DWORD PTR [rbp+0xd0],0x1
  402802:	jmp    0x402bfc
  402807:	mov    rax,QWORD PTR [rbp+0xa0]
  40280e:	lea    rdx,[rip+0x8cfb]        # 0x40b510
  402815:	mov    rcx,rax
  402818:	call   0x409198
  40281d:	cmp    rax,QWORD PTR [rbp+0xa0]
  402824:	je     0x402868
  402826:	mov    rax,QWORD PTR [rbp+0xa0]
  40282d:	lea    rdx,[rip+0x8ce3]        # 0x40b517
  402834:	mov    rcx,rax
  402837:	call   0x409198
  40283c:	cmp    rax,QWORD PTR [rbp+0xa0]
  402843:	je     0x402868
  402845:	mov    rax,QWORD PTR [rbp+0xa0]
  40284c:	lea    rdx,[rip+0x8ccc]        # 0x40b51f
  402853:	mov    rcx,rax
  402856:	call   0x409198
  40285b:	cmp    rax,QWORD PTR [rbp+0xa0]
  402862:	jne    0x402916
  402868:	mov    rax,QWORD PTR [rbp+0xa0]
  40286f:	add    rax,0x2
  402873:	movzx  eax,BYTE PTR [rax]
  402876:	cmp    al,0x62
  402878:	jne    0x402886
  40287a:	mov    DWORD PTR [rbp+0xd4],0x1
  402884:	jmp    0x4028ae
  402886:	mov    rax,QWORD PTR [rbp+0xa0]
  40288d:	add    rax,0x2
  402891:	movzx  eax,BYTE PTR [rax]
  402894:	cmp    al,0x70
  402896:	jne    0x4028a4
  402898:	mov    DWORD PTR [rbp+0xd4],0x0
  4028a2:	jmp    0x4028ae
  4028a4:	mov    DWORD PTR [rbp+0xd4],0x0
  4028ae:	mov    rax,QWORD PTR [rbp+0xa0]
  4028b5:	mov    edx,0x3d
  4028ba:	mov    rcx,rax
  4028bd:	call   0x4091c0
  4028c2:	add    rax,0x1
  4028c6:	mov    QWORD PTR [rbp+0xd8],rax
  4028cd:	mov    rax,QWORD PTR [rbp+0xd8]
  4028d4:	movzx  eax,BYTE PTR [rax]
  4028d7:	test   al,al
  4028d9:	jne    0x402911
  4028db:	mov    rax,QWORD PTR [rip+0xed06]        # 0x4115e8
  4028e2:	call   rax
  4028e4:	add    rax,0x60
  4028e8:	mov    r9,rax
  4028eb:	mov    r8d,0x2a
  4028f1:	mov    edx,0x1
  4028f6:	lea    rcx,[rip+0x8c33]        # 0x40b530
  4028fd:	call   0x409218
  402902:	mov    ecx,0x1
  402907:	call   0x401fe0
  40290c:	jmp    0x402bfc
  402911:	jmp    0x402bfc
  402916:	mov    rax,QWORD PTR [rbp+0xa0]
  40291d:	mov    r8d,0xd
  402923:	lea    rdx,[rip+0x8c31]        # 0x40b55b
  40292a:	mov    rcx,rax
  40292d:	call   0x4091a8
  402932:	test   eax,eax
  402934:	jne    0x4029ca
  40293a:	mov    DWORD PTR [rbp+0x11c],0x1
  402944:	mov    DWORD PTR [rbp+0xec],0x1
  40294e:	mov    rax,QWORD PTR [rbp+0xa0]
  402955:	add    rax,0xd
  402959:	lea    rdx,[rip+0x8c09]        # 0x40b569
  402960:	mov    rcx,rax
  402963:	call   0x4091b8
  402968:	test   eax,eax
  40296a:	jne    0x40297b
  40296c:	mov    DWORD PTR [rbp+0x118],0x1
  402976:	jmp    0x402bfc
  40297b:	mov    rax,QWORD PTR [rbp+0xa0]
  402982:	add    rax,0xd
  402986:	movzx  eax,BYTE PTR [rax]
  402989:	test   al,al
  40298b:	je     0x402bfc
  402991:	mov    rax,QWORD PTR [rbp+0xa0]
  402998:	lea    rbx,[rax+0xd]
  40299c:	mov    rax,QWORD PTR [rip+0xec45]        # 0x4115e8
  4029a3:	call   rax
  4029a5:	add    rax,0x60
  4029a9:	mov    r8,rbx
  4029ac:	lea    rdx,[rip+0x8bc5]        # 0x40b578
  4029b3:	mov    rcx,rax
  4029b6:	call   0x409228
  4029bb:	mov    ecx,0x1
  4029c0:	call   0x401fe0
  4029c5:	jmp    0x402bfc
  4029ca:	mov    rax,QWORD PTR [rbp+0xa0]
  4029d1:	lea    rdx,[rip+0x8bc7]        # 0x40b59f
  4029d8:	mov    rcx,rax
  4029db:	call   0x409198
  4029e0:	cmp    rax,QWORD PTR [rbp+0xa0]
  4029e7:	jne    0x402ac1
  4029ed:	mov    rax,QWORD PTR [rbp+0xa0]
  4029f4:	mov    edx,0x3d
  4029f9:	mov    rcx,rax
  4029fc:	call   0x4091c0
  402a01:	add    rax,0x1
  402a05:	movzx  eax,BYTE PTR [rax]
  402a08:	test   al,al
  402a0a:	jne    0x402a3d
  402a0c:	mov    rax,QWORD PTR [rip+0xebd5]        # 0x4115e8
  402a13:	call   rax
  402a15:	add    rax,0x60
  402a19:	mov    r9,rax
  402a1c:	mov    r8d,0x24
  402a22:	mov    edx,0x1
  402a27:	lea    rcx,[rip+0x8b82]        # 0x40b5b0
  402a2e:	call   0x409218
  402a33:	mov    ecx,0x1
  402a38:	call   0x401fe0
  402a3d:	mov    rax,QWORD PTR [rbp+0xa0]
  402a44:	mov    edx,0x3d
  402a49:	mov    rcx,rax
  402a4c:	call   0x4091c0
  402a51:	add    rax,0x1
  402a55:	mov    r8d,0xa
  402a5b:	mov    edx,0x0
  402a60:	mov    rcx,rax
  402a63:	call   0x409188
  402a68:	mov    DWORD PTR [rbp+0x114],eax
  402a6e:	cmp    DWORD PTR [rbp+0x114],0x0
  402a75:	jg     0x402bfc
  402a7b:	mov    rax,QWORD PTR [rbp+0xa0]
  402a82:	mov    edx,0x3d
  402a87:	mov    rcx,rax
  402a8a:	call   0x4091c0
  402a8f:	lea    rbx,[rax+0x1]
  402a93:	mov    rax,QWORD PTR [rip+0xeb4e]        # 0x4115e8
  402a9a:	call   rax
  402a9c:	add    rax,0x60
  402aa0:	mov    r8,rbx
  402aa3:	lea    rdx,[rip+0x8b2e]        # 0x40b5d8
  402aaa:	mov    rcx,rax
  402aad:	call   0x409228
  402ab2:	mov    ecx,0x1
  402ab7:	call   0x401fe0
  402abc:	jmp    0x402bfc
  402ac1:	mov    rax,QWORD PTR [rbp+0xa0]
  402ac8:	lea    rdx,[rip+0x8b32]        # 0x40b601
  402acf:	mov    rcx,rax
  402ad2:	call   0x409198
  402ad7:	cmp    rax,QWORD PTR [rbp+0xa0]
  402ade:	jne    0x402b54
  402ae0:	mov    rax,QWORD PTR [rbp+0xa0]
  402ae7:	mov    edx,0x3d
  402aec:	mov    rcx,rax
  402aef:	call   0x4091c0
  402af4:	add    rax,0x1
  402af8:	movzx  eax,BYTE PTR [rax]
  402afb:	test   al,al
  402afd:	jne    0x402b30
  402aff:	mov    rax,QWORD PTR [rip+0xeae2]        # 0x4115e8
  402b06:	call   rax
  402b08:	add    rax,0x60
  402b0c:	mov    r9,rax
  402b0f:	mov    r8d,0x1b
  402b15:	mov    edx,0x1
  402b1a:	lea    rcx,[rip+0x8ae8]        # 0x40b609
  402b21:	call   0x409218
  402b26:	mov    ecx,0x1
  402b2b:	call   0x401fe0
  402b30:	mov    rax,QWORD PTR [rbp+0xa0]
  402b37:	mov    edx,0x3d
  402b3c:	mov    rcx,rax
  402b3f:	call   0x4091c0
  402b44:	add    rax,0x1
  402b48:	mov    QWORD PTR [rbp+0x100],rax
  402b4f:	jmp    0x402bfc
  402b54:	mov    rax,QWORD PTR [rbp+0xa0]
  402b5b:	lea    rdx,[rip+0x8ac3]        # 0x40b625
  402b62:	mov    rcx,rax
  402b65:	call   0x409198
  402b6a:	cmp    rax,QWORD PTR [rbp+0xa0]
  402b71:	jne    0x402b94
  402b73:	mov    rax,QWORD PTR [rbp+0xa0]
  402b7a:	mov    edx,0x3d
  402b7f:	mov    rcx,rax
  402b82:	call   0x4091c0
  402b87:	add    rax,0x1
  402b8b:	mov    QWORD PTR [rbp+0xe0],rax
  402b92:	jmp    0x402bfc
  402b94:	mov    rax,QWORD PTR [rbp+0xa0]
  402b9b:	lea    rdx,[rip+0x8a8b]        # 0x40b62d
  402ba2:	mov    rcx,rax
  402ba5:	call   0x4091b8
  402baa:	test   eax,eax
  402bac:	jne    0x402bba
  402bae:	mov    ecx,0x0
  402bb3:	call   0x401fe0
  402bb8:	jmp    0x402bfc
  402bba:	mov    rax,QWORD PTR [rbp+0xa0]
  402bc1:	movzx  eax,BYTE PTR [rax]
  402bc4:	cmp    al,0x2d
  402bc6:	jne    0x402bd4
  402bc8:	mov    ecx,0x1
  402bcd:	call   0x401fe0
  402bd2:	jmp    0x402bfc
  402bd4:	cmp    QWORD PTR [rbp+0xf0],0x0
  402bdc:	jne    0x402bee
  402bde:	mov    rax,QWORD PTR [rbp+0xa0]
  402be5:	mov    QWORD PTR [rbp+0xf0],rax
  402bec:	jmp    0x402bfc
  402bee:	mov    rax,QWORD PTR [rbp+0xa0]
  402bf5:	mov    QWORD PTR [rbp+0xf8],rax
  402bfc:	add    DWORD PTR [rbp+0x110],0x1
  402c03:	mov    eax,DWORD PTR [rbp+0x110]
  402c09:	cmp    eax,DWORD PTR [rbp+0x150]
  402c0f:	jge    0x402c1f
  402c11:	cmp    QWORD PTR [rbp+0xf8],0x0
  402c19:	je     0x40277d
  402c1f:	cmp    QWORD PTR [rbp+0xf8],0x0
  402c27:	jne    0x402c33
  402c29:	mov    ecx,0x1
  402c2e:	call   0x401fe0
  402c33:	cmp    DWORD PTR [rbp+0xd0],0x0
  402c3a:	je     0x402c77
  402c3c:	cmp    QWORD PTR [rbp+0xd8],0x0
  402c44:	je     0x402c77
  402c46:	mov    rax,QWORD PTR [rip+0xe99b]        # 0x4115e8
  402c4d:	call   rax
  402c4f:	add    rax,0x60
  402c53:	mov    r9,rax
  402c56:	mov    r8d,0x44
  402c5c:	mov    edx,0x1
  402c61:	lea    rcx,[rip+0x89d0]        # 0x40b638
  402c68:	call   0x409218
  402c6d:	mov    ecx,0x1
  402c72:	call   0x401fe0
  402c77:	cmp    QWORD PTR [rbp+0xe0],0x0
  402c7f:	je     0x402cdc
  402c81:	mov    rax,QWORD PTR [rbp+0xe0]
  402c88:	mov    rcx,rax
  402c8b:	mov    rax,QWORD PTR [rip+0xe856]        # 0x4114e8
  402c92:	call   rax
  402c94:	mov    DWORD PTR [rbp+0xec],eax
  402c9a:	cmp    DWORD PTR [rbp+0xec],0x1
  402ca1:	je     0x402cdc
  402ca3:	cmp    DWORD PTR [rbp+0xec],0x4
  402caa:	je     0x402cdc
  402cac:	mov    rax,QWORD PTR [rip+0xe935]        # 0x4115e8
  402cb3:	call   rax
  402cb5:	add    rax,0x60
  402cb9:	mov    rdx,QWORD PTR [rbp+0xe0]
  402cc0:	mov    r8,rdx
  402cc3:	lea    rdx,[rip+0x89b6]        # 0x40b680
  402cca:	mov    rcx,rax
  402ccd:	call   0x409228
  402cd2:	mov    ecx,0x1
  402cd7:	call   0x409238
  402cdc:	lea    rax,[rbp+0x60]
  402ce0:	mov    rcx,rax
  402ce3:	mov    rax,QWORD PTR [rip+0xe726]        # 0x411410
  402cea:	call   rax
  402cec:	cmp    QWORD PTR [rbp+0x100],0x0
  402cf4:	je     0x402d41
  402cf6:	lea    rdx,[rbp+0x60]
  402cfa:	mov    rax,QWORD PTR [rbp+0x100]
  402d01:	mov    rcx,rax
  402d04:	mov    rax,QWORD PTR [rip+0xe7ed]        # 0x4114f8
  402d0b:	call   rax
  402d0d:	test   eax,eax
  402d0f:	jne    0x402d41
  402d11:	mov    rax,QWORD PTR [rip+0xe8d0]        # 0x4115e8
  402d18:	call   rax
  402d1a:	add    rax,0x60
  402d1e:	mov    rdx,QWORD PTR [rbp+0x100]
  402d25:	mov    r8,rdx
  402d28:	lea    rdx,[rip+0x8979]        # 0x40b6a8
  402d2f:	mov    rcx,rax
  402d32:	call   0x409228
  402d37:	mov    ecx,0x1
  402d3c:	call   0x401fe0
  402d41:	cmp    QWORD PTR [rbp+0xd8],0x0
  402d49:	je     0x402d6b
  402d4b:	lea    rdx,[rbp+0x60]
  402d4f:	mov    rax,QWORD PTR [rbp+0xd8]
  402d56:	mov    rcx,rax
  402d59:	mov    rax,QWORD PTR [rip+0xe688]        # 0x4113e8
  402d60:	call   rax
  402d62:	mov    QWORD PTR [rbp+0x128],rax
  402d69:	jmp    0x402d87
  402d6b:	lea    rdx,[rbp+0x60]
  402d6f:	mov    eax,DWORD PTR [rbp+0x10c]
  402d75:	mov    ecx,eax
  402d77:	mov    rax,QWORD PTR [rip+0xe652]        # 0x4113d0
  402d7e:	call   rax
  402d80:	mov    QWORD PTR [rbp+0x128],rax
  402d87:	cmp    QWORD PTR [rbp+0x128],0x0
  402d8f:	jne    0x402dfd
  402d91:	mov    rsi,QWORD PTR [rbp+0x68]
  402d95:	cmp    QWORD PTR [rbp+0xd8],0x0
  402d9d:	jne    0x402dba
  402d9f:	cmp    DWORD PTR [rbp+0x10c],0x1
  402da6:	jne    0x402db1
  402da8:	lea    rbx,[rip+0x8919]        # 0x40b6c8
  402daf:	jmp    0x402dc1
  402db1:	lea    rbx,[rip+0x8917]        # 0x40b6cf
  402db8:	jmp    0x402dc1
  402dba:	mov    rbx,QWORD PTR [rbp+0xd8]
  402dc1:	mov    rax,QWORD PTR [rip+0xe820]        # 0x4115e8
  402dc8:	call   rax
  402dca:	add    rax,0x60
  402dce:	mov    r9,rsi
  402dd1:	mov    r8,rbx
  402dd4:	lea    rdx,[rip+0x88fd]        # 0x40b6d8
  402ddb:	mov    rcx,rax
  402dde:	call   0x409228
  402de3:	lea    rax,[rbp+0x60]
  402de7:	mov    rcx,rax
  402dea:	mov    rax,QWORD PTR [rip+0xe617]        # 0x411408
  402df1:	call   rax
  402df3:	mov    ecx,0x1
  402df8:	call   0x409238
  402dfd:	cmp    QWORD PTR [rbp+0xd8],0x0
  402e05:	je     0x402e72
  402e07:	cmp    DWORD PTR [rbp+0xd4],0x0
  402e0e:	je     0x402e72
  402e10:	lea    rdx,[rbp+0x60]
  402e14:	mov    rax,QWORD PTR [rbp+0x128]
  402e1b:	mov    rcx,rax
  402e1e:	mov    rax,QWORD PTR [rip+0xe5b3]        # 0x4113d8
  402e25:	call   rax
  402e27:	test   eax,eax
  402e29:	jne    0x402e72
  402e2b:	mov    rbx,QWORD PTR [rbp+0x68]
  402e2f:	mov    rax,QWORD PTR [rip+0xe7b2]        # 0x4115e8
  402e36:	call   rax
  402e38:	add    rax,0x60
  402e3c:	mov    rdx,QWORD PTR [rbp+0xd8]
  402e43:	mov    r9,rbx
  402e46:	mov    r8,rdx
  402e49:	lea    rdx,[rip+0x88c0]        # 0x40b710
  402e50:	mov    rcx,rax
  402e53:	call   0x409228
  402e58:	lea    rax,[rbp+0x60]
  402e5c:	mov    rcx,rax
  402e5f:	mov    rax,QWORD PTR [rip+0xe5a2]        # 0x411408
  402e66:	call   rax
  402e68:	mov    ecx,0x1
  402e6d:	call   0x409238
  402e72:	cmp    DWORD PTR [rbp+0xec],0x1
  402e79:	jne    0x402f32
  402e7f:	mov    rax,QWORD PTR [rbp+0xf8]
  402e86:	mov    edx,0x2e
  402e8b:	mov    rcx,rax
  402e8e:	call   0x4091a0
  402e93:	mov    QWORD PTR [rbp+0x98],rax
  402e9a:	cmp    QWORD PTR [rbp+0x98],0x0
  402ea2:	jne    0x402ed4
  402ea4:	mov    rax,QWORD PTR [rip+0xe73d]        # 0x4115e8
  402eab:	call   rax
  402ead:	add    rax,0x60
  402eb1:	mov    rdx,QWORD PTR [rbp+0xf8]
  402eb8:	mov    r8,rdx
  402ebb:	lea    rdx,[rip+0x888e]        # 0x40b750
  402ec2:	mov    rcx,rax
  402ec5:	call   0x409228
  402eca:	mov    ecx,0x1
  402ecf:	call   0x409238
  402ed4:	mov    rax,QWORD PTR [rbp+0x98]
  402edb:	mov    BYTE PTR [rax],0x0
  402ede:	mov    rax,QWORD PTR [rbp+0x98]
  402ee5:	lea    rcx,[rax+0x1]
  402ee9:	mov    rdx,QWORD PTR [rbp+0xf8]
  402ef0:	mov    rax,QWORD PTR [rbp+0xf0]
  402ef7:	mov    r9,rcx
  402efa:	mov    r8,rdx
  402efd:	mov    rdx,rax
  402f00:	mov    ecx,0x0
  402f05:	mov    rax,QWORD PTR [rip+0xe5bc]        # 0x4114c8
  402f0c:	call   rax
  402f0e:	mov    QWORD PTR [rbp+0x120],rax
  402f15:	mov    rax,QWORD PTR [rbp+0x120]
  402f1c:	mov    edx,0x1
  402f21:	mov    rcx,rax
  402f24:	mov    rax,QWORD PTR [rip+0xe5ad]        # 0x4114d8
  402f2b:	call   rax
  402f2d:	jmp    0x403000
  402f32:	cmp    DWORD PTR [rbp+0xec],0x4
  402f39:	jne    0x402fcf
  402f3f:	mov    rax,QWORD PTR [rbp+0xf8]
  402f46:	mov    edx,0x2e
  402f4b:	mov    rcx,rax
  402f4e:	call   0x4091a0
  402f53:	mov    QWORD PTR [rbp+0x90],rax
  402f5a:	cmp    QWORD PTR [rbp+0x90],0x0
  402f62:	jne    0x402f94
  402f64:	mov    rax,QWORD PTR [rip+0xe67d]        # 0x4115e8
  402f6b:	call   rax
  402f6d:	add    rax,0x60
  402f71:	mov    rdx,QWORD PTR [rbp+0xf8]
  402f78:	mov    r8,rdx
  402f7b:	lea    rdx,[rip+0x8816]        # 0x40b798
  402f82:	mov    rcx,rax
  402f85:	call   0x409228
  402f8a:	mov    ecx,0x1
  402f8f:	call   0x409238
  402f94:	mov    rax,QWORD PTR [rbp+0x90]
  402f9b:	mov    BYTE PTR [rax],0x0
  402f9e:	mov    rax,QWORD PTR [rbp+0x90]
  402fa5:	lea    rcx,[rax+0x1]
  402fa9:	mov    rdx,QWORD PTR [rbp+0xf8]
  402fb0:	mov    rax,QWORD PTR [rbp+0xf0]
  402fb7:	mov    r8,rcx
  402fba:	mov    rcx,rax
  402fbd:	mov    rax,QWORD PTR [rip+0xe50c]        # 0x4114d0
  402fc4:	call   rax
  402fc6:	mov    QWORD PTR [rbp+0x120],rax
  402fcd:	jmp    0x403000
  402fcf:	mov    rax,QWORD PTR [rip+0xe612]        # 0x4115e8
  402fd6:	call   rax
  402fd8:	add    rax,0x60
  402fdc:	mov    r9,rax
  402fdf:	mov    r8d,0x25
  402fe5:	mov    edx,0x1
  402fea:	lea    rcx,[rip+0x87ef]        # 0x40b7e0
  402ff1:	call   0x409218
  402ff6:	mov    ecx,0x1
  402ffb:	call   0x409238
  403000:	cmp    QWORD PTR [rbp+0x120],0x0
  403008:	jne    0x40303b
  40300a:	mov    rax,QWORD PTR [rip+0xe5d7]        # 0x4115e8
  403011:	call   rax
  403013:	add    rax,0x60
  403017:	mov    r9,rax
  40301a:	mov    r8d,0x20
  403020:	mov    edx,0x1
  403025:	lea    rcx,[rip+0x87dc]        # 0x40b808
  40302c:	call   0x409218
  403031:	mov    ecx,0x1
  403036:	call   0x409238
  40303b:	cmp    QWORD PTR [rbp+0x100],0x0
  403043:	je     0x403094
  403045:	mov    rdx,QWORD PTR [rbp+0x100]
  40304c:	mov    rax,QWORD PTR [rbp+0x120]
  403053:	mov    rcx,rax
  403056:	mov    rax,QWORD PTR [rip+0xe483]        # 0x4114e0
  40305d:	call   rax
  40305f:	test   eax,eax
  403061:	jne    0x403094
  403063:	mov    rax,QWORD PTR [rip+0xe57e]        # 0x4115e8
  40306a:	call   rax
  40306c:	add    rax,0x60
  403070:	mov    r9,rax
  403073:	mov    r8d,0x12
  403079:	mov    edx,0x1
  40307e:	lea    rcx,[rip+0x87a4]        # 0x40b829
  403085:	call   0x409218
  40308a:	mov    ecx,0x1
  40308f:	call   0x409238
  403094:	lea    rdx,[rbp+0x10]
  403098:	mov    rax,QWORD PTR [rbp+0x120]
  40309f:	mov    rcx,rax
  4030a2:	mov    rax,QWORD PTR [rip+0xe3ff]        # 0x4114a8
  4030a9:	call   rax
  4030ab:	jmp    0x403478
  4030b0:	mov    DWORD PTR [rbp+0xbc],0x0
  4030ba:	mov    eax,DWORD PTR [rbp+0x110]
  4030c0:	lea    edx,[rax+0x1]
  4030c3:	mov    DWORD PTR [rbp+0x110],edx
  4030c9:	cdqe   
  4030cb:	lea    rdx,[rax*8+0x0]
  4030d3:	mov    rax,QWORD PTR [rbp+0x158]
  4030da:	add    rax,rdx
  4030dd:	mov    rax,QWORD PTR [rax]
  4030e0:	mov    QWORD PTR [rbp+0xc8],rax
  4030e7:	mov    rax,QWORD PTR [rbp+0xc8]
  4030ee:	mov    edx,0x3a
  4030f3:	mov    rcx,rax
  4030f6:	call   0x4091c0
  4030fb:	mov    QWORD PTR [rbp+0xc0],rax
  403102:	cmp    QWORD PTR [rbp+0xc0],0x0
  40310a:	jne    0x403149
  40310c:	mov    rax,QWORD PTR [rbp+0x158]
  403113:	mov    rbx,QWORD PTR [rax]
  403116:	mov    rax,QWORD PTR [rip+0xe4cb]        # 0x4115e8
  40311d:	call   rax
  40311f:	add    rax,0x60
  403123:	mov    rdx,QWORD PTR [rbp+0xc8]
  40312a:	mov    r9,rdx
  40312d:	mov    r8,rbx
  403130:	lea    rdx,[rip+0x8709]        # 0x40b840
  403137:	mov    rcx,rax
  40313a:	call   0x409228
  40313f:	mov    ecx,0x1
  403144:	call   0x409238
  403149:	mov    rax,QWORD PTR [rbp+0xc0]
  403150:	lea    rdx,[rax+0x1]
  403154:	mov    QWORD PTR [rbp+0xc0],rdx
  40315b:	mov    BYTE PTR [rax],0x0
  40315e:	mov    DWORD PTR [rbp+0xb4],0x0
  403168:	mov    rax,QWORD PTR [rbp+0xc8]
  40316f:	lea    rdx,[rip+0x86ee]        # 0x40b864
  403176:	mov    rcx,rax
  403179:	call   0x4091b8
  40317e:	test   eax,eax
  403180:	jne    0x40318e
  403182:	mov    DWORD PTR [rbp+0xb4],0x76
  40318c:	jmp    0x4031d8
  40318e:	mov    rax,QWORD PTR [rbp+0xc8]
  403195:	lea    rdx,[rip+0x86d0]        # 0x40b86c
  40319c:	mov    rcx,rax
  40319f:	call   0x4091b8
  4031a4:	test   eax,eax
  4031a6:	jne    0x4031b4
  4031a8:	mov    DWORD PTR [rbp+0xb4],0x61
  4031b2:	jmp    0x4031d8
  4031b4:	mov    rax,QWORD PTR [rbp+0xc8]
  4031bb:	lea    rdx,[rip+0x86b0]        # 0x40b872
  4031c2:	mov    rcx,rax
  4031c5:	call   0x4091b8
  4031ca:	test   eax,eax
  4031cc:	jne    0x4031d8
  4031ce:	mov    DWORD PTR [rbp+0xb4],0x65
  4031d8:	cmp    DWORD PTR [rbp+0xb4],0x0
  4031df:	je     0x40326a
  4031e5:	mov    rax,QWORD PTR [rbp+0xc0]
  4031ec:	mov    QWORD PTR [rbp+0xc8],rax
  4031f3:	mov    rax,QWORD PTR [rbp+0xc8]
  4031fa:	mov    edx,0x3a
  4031ff:	mov    rcx,rax
  403202:	call   0x4091c0
  403207:	mov    QWORD PTR [rbp+0xc0],rax
  40320e:	cmp    QWORD PTR [rbp+0xc0],0x0
  403216:	jne    0x403255
  403218:	mov    rax,QWORD PTR [rbp+0x158]
  40321f:	mov    rbx,QWORD PTR [rax]
  403222:	mov    rax,QWORD PTR [rip+0xe3bf]        # 0x4115e8
  403229:	call   rax
  40322b:	add    rax,0x60
  40322f:	mov    rdx,QWORD PTR [rbp+0xc8]
  403236:	mov    r9,rdx
  403239:	mov    r8,rbx
  40323c:	lea    rdx,[rip+0x85fd]        # 0x40b840
  403243:	mov    rcx,rax
  403246:	call   0x409228
  40324b:	mov    ecx,0x1
  403250:	call   0x409238
  403255:	mov    rax,QWORD PTR [rbp+0xc0]
  40325c:	lea    rdx,[rax+0x1]
  403260:	mov    QWORD PTR [rbp+0xc0],rdx
  403267:	mov    BYTE PTR [rax],0x0
  40326a:	mov    rax,QWORD PTR [rbp+0xc8]
  403271:	movzx  eax,BYTE PTR [rax]
  403274:	test   al,al
  403276:	jne    0x403284
  403278:	mov    DWORD PTR [rbp+0xbc],0x73
  403282:	jmp    0x403299
  403284:	mov    rax,QWORD PTR [rbp+0xc8]
  40328b:	mov    rcx,rax
  40328e:	call   0x402502
  403293:	mov    DWORD PTR [rbp+0xbc],eax
  403299:	cmp    DWORD PTR [rbp+0xb4],0x65
  4032a0:	jne    0x40338d
  4032a6:	mov    rax,QWORD PTR [rbp+0xc0]
  4032ad:	mov    QWORD PTR [rbp+0xc8],rax
  4032b4:	mov    rax,QWORD PTR [rbp+0xc0]
  4032bb:	mov    edx,0x3a
  4032c0:	mov    rcx,rax
  4032c3:	call   0x4091c0
  4032c8:	mov    QWORD PTR [rbp+0xc0],rax
  4032cf:	cmp    QWORD PTR [rbp+0xc0],0x0
  4032d7:	jne    0x403316
  4032d9:	mov    rax,QWORD PTR [rbp+0x158]
  4032e0:	mov    rbx,QWORD PTR [rax]
  4032e3:	mov    rax,QWORD PTR [rip+0xe2fe]        # 0x4115e8
  4032ea:	call   rax
  4032ec:	add    rax,0x60
  4032f0:	mov    rdx,QWORD PTR [rbp+0xc8]
  4032f7:	mov    r9,rdx
  4032fa:	mov    r8,rbx
  4032fd:	lea    rdx,[rip+0x853c]        # 0x40b840
  403304:	mov    rcx,rax
  403307:	call   0x409228
  40330c:	mov    ecx,0x1
  403311:	call   0x409238
  403316:	mov    rax,QWORD PTR [rbp+0xc0]
  40331d:	lea    rdx,[rax+0x1]
  403321:	mov    QWORD PTR [rbp+0xc0],rdx
  403328:	mov    BYTE PTR [rax],0x0
  40332b:	mov    rax,QWORD PTR [rbp+0xc8]
  403332:	mov    rcx,rax
  403335:	call   0x402502
  40333a:	mov    DWORD PTR [rbp+0xb8],eax
  403340:	mov    BYTE PTR [rbp+0x0],0x7b
  403344:	mov    eax,DWORD PTR [rbp+0xbc]
  40334a:	mov    BYTE PTR [rbp+0x1],al
  40334d:	mov    eax,DWORD PTR [rbp+0xb8]
  403353:	mov    BYTE PTR [rbp+0x2],al
  403356:	mov    BYTE PTR [rbp+0x3],0x7d
  40335a:	mov    BYTE PTR [rbp+0x4],0x0
  40335e:	lea    rcx,[rbp-0x60]
  403362:	mov    rdx,rbp
  403365:	lea    rax,[rbp+0x10]
  403369:	mov    r9,rcx
  40336c:	mov    r8,rdx
  40336f:	mov    edx,0x61
  403374:	mov    rcx,rax
  403377:	mov    rax,QWORD PTR [rip+0xe13a]        # 0x4114b8
  40337e:	call   rax
  403380:	lea    rax,[rbp-0x60]
  403384:	mov    QWORD PTR [rbp+0xa8],rax
  40338b:	jmp    0x4033df
  40338d:	cmp    DWORD PTR [rbp+0xb4],0x0
  403394:	je     0x4033d4
  403396:	mov    eax,DWORD PTR [rbp+0xbc]
  40339c:	mov    BYTE PTR [rbp-0x10],al
  40339f:	mov    BYTE PTR [rbp-0xf],0x0
  4033a3:	lea    r8,[rbp-0x60]
  4033a7:	lea    rcx,[rbp-0x10]
  4033ab:	mov    edx,DWORD PTR [rbp+0xb4]
  4033b1:	lea    rax,[rbp+0x10]
  4033b5:	mov    r9,r8
  4033b8:	mov    r8,rcx
  4033bb:	mov    rcx,rax
  4033be:	mov    rax,QWORD PTR [rip+0xe0f3]        # 0x4114b8
  4033c5:	call   rax
  4033c7:	lea    rax,[rbp-0x60]
  4033cb:	mov    QWORD PTR [rbp+0xa8],rax
  4033d2:	jmp    0x4033df
  4033d4:	lea    rax,[rbp+0x10]
  4033d8:	mov    QWORD PTR [rbp+0xa8],rax
  4033df:	cmp    DWORD PTR [rbp+0xb4],0x61
  4033e6:	jne    0x403409
  4033e8:	mov    rcx,QWORD PTR [rbp+0xc0]
  4033ef:	mov    edx,DWORD PTR [rbp+0xbc]
  4033f5:	mov    rax,QWORD PTR [rbp+0xa8]
  4033fc:	mov    r8,rcx
  4033ff:	mov    rcx,rax
  403402:	call   0x402354
  403407:	jmp    0x40345b
  403409:	cmp    DWORD PTR [rbp+0xb4],0x65
  403410:	jne    0x40343c
  403412:	mov    r8,QWORD PTR [rbp+0xc0]
  403419:	mov    ecx,DWORD PTR [rbp+0xb8]
  40341f:	mov    edx,DWORD PTR [rbp+0xbc]
  403425:	mov    rax,QWORD PTR [rbp+0xa8]
  40342c:	mov    r9,r8
  40342f:	mov    r8d,ecx
  403432:	mov    rcx,rax
  403435:	call   0x4023d4
  40343a:	jmp    0x40345b
  40343c:	mov    rcx,QWORD PTR [rbp+0xc0]
  403443:	mov    edx,DWORD PTR [rbp+0xbc]
  403449:	mov    rax,QWORD PTR [rbp+0xa8]
  403450:	mov    r8,rcx
  403453:	mov    rcx,rax
  403456:	call   0x402020
  40345b:	cmp    DWORD PTR [rbp+0xb4],0x0
  403462:	je     0x403478
  403464:	lea    rdx,[rbp-0x60]
  403468:	lea    rax,[rbp+0x10]
  40346c:	mov    rcx,rax
  40346f:	mov    rax,QWORD PTR [rip+0xe00a]        # 0x411480
  403476:	call   rax
  403478:	mov    eax,DWORD PTR [rbp+0x110]
  40347e:	cmp    eax,DWORD PTR [rbp+0x150]
  403484:	jl     0x4030b0
  40348a:	cmp    DWORD PTR [rbp+0x11c],0x0
  403491:	je     0x403577
  403497:	lea    rax,[rbp+0x60]
  40349b:	mov    rcx,rax
  40349e:	mov    rax,QWORD PTR [rip+0xdf6b]        # 0x411410
  4034a5:	call   rax
  4034a7:	lea    r8,[rbp+0x60]
  4034ab:	mov    ecx,DWORD PTR [rbp+0x114]
  4034b1:	mov    rdx,QWORD PTR [rbp+0x120]
  4034b8:	mov    rax,QWORD PTR [rbp+0x128]
  4034bf:	mov    r9,r8
  4034c2:	mov    r8d,ecx
  4034c5:	mov    rcx,rax
  4034c8:	mov    rax,QWORD PTR [rip+0xdf29]        # 0x4113f8
  4034cf:	call   rax
  4034d1:	mov    QWORD PTR [rbp+0x88],rax
  4034d8:	lea    rax,[rbp+0x60]
  4034dc:	mov    rcx,rax
  4034df:	mov    rax,QWORD PTR [rip+0xdf32]        # 0x411418
  4034e6:	call   rax
  4034e8:	test   eax,eax
  4034ea:	je     0x403520
  4034ec:	mov    rsi,QWORD PTR [rbp+0x68]
  4034f0:	mov    rbx,QWORD PTR [rbp+0x60]
  4034f4:	mov    rax,QWORD PTR [rip+0xe0ed]        # 0x4115e8
  4034fb:	call   rax
  4034fd:	add    rax,0x60
  403501:	mov    r9,rsi
  403504:	mov    r8,rbx
  403507:	lea    rdx,[rip+0x8369]        # 0x40b877
  40350e:	mov    rcx,rax
  403511:	call   0x409228
  403516:	mov    ecx,0x1
  40351b:	call   0x409238
  403520:	cmp    QWORD PTR [rbp+0x88],0x0
  403528:	je     0x403575
  40352a:	lea    rdx,[rbp-0x18]
  40352e:	lea    rax,[rbp-0x14]
  403532:	mov    rcx,rax
  403535:	mov    rax,QWORD PTR [rip+0xde8c]        # 0x4113c8
  40353c:	call   rax
  40353e:	mov    r8d,DWORD PTR [rbp-0x18]
  403542:	mov    ecx,DWORD PTR [rbp-0x14]
  403545:	mov    edx,DWORD PTR [rbp+0x118]
  40354b:	mov    rax,QWORD PTR [rbp+0x88]
  403552:	mov    r9d,r8d
  403555:	mov    r8d,ecx
  403558:	mov    rcx,rax
  40355b:	call   0x401d94
  403560:	mov    rax,QWORD PTR [rbp+0x88]
  403567:	mov    rcx,rax
  40356a:	mov    rax,QWORD PTR [rip+0xdf7f]        # 0x4114f0
  403571:	call   rax
  403573:	jmp    0x4035aa
  403575:	jmp    0x4035aa
  403577:	mov    rdx,QWORD PTR [rbp+0x120]
  40357e:	mov    rax,QWORD PTR [rbp+0x128]
  403585:	mov    r8d,0x0
  40358b:	mov    rcx,rax
  40358e:	mov    rax,QWORD PTR [rip+0xde5b]        # 0x4113f0
  403595:	call   rax
  403597:	mov    rax,QWORD PTR [rbp+0x128]
  40359e:	mov    rcx,rax
  4035a1:	mov    rax,QWORD PTR [rip+0xde38]        # 0x4113e0
  4035a8:	call   rax
  4035aa:	mov    rax,QWORD PTR [rbp+0x120]
  4035b1:	mov    rcx,rax
  4035b4:	mov    rax,QWORD PTR [rip+0xdf35]        # 0x4114f0
  4035bb:	call   rax
  4035bd:	mov    rax,QWORD PTR [rbp+0x128]
  4035c4:	mov    rcx,rax
  4035c7:	mov    rax,QWORD PTR [rip+0xde32]        # 0x411400
  4035ce:	call   rax
  4035d0:	mov    ecx,0x0
  4035d5:	call   0x409238
  4035da:	nop
  4035db:	nop
  4035dc:	nop
  4035dd:	nop
  4035de:	nop
  4035df:	nop
  4035e0:	push   rbp
  4035e1:	mov    rbp,rsp
  4035e4:	sub    rsp,0x20
  4035e8:	mov    QWORD PTR [rbp+0x10],rcx
  4035ec:	mov    rax,QWORD PTR [rip+0xdff5]        # 0x4115e8
  4035f3:	call   rax
  4035f5:	add    rax,0x60
  4035f9:	mov    r8,QWORD PTR [rbp+0x10]
  4035fd:	lea    rdx,[rip+0x828c]        # 0x40b890
  403604:	mov    rcx,rax
  403607:	call   0x409228
  40360c:	mov    ecx,0x1
  403611:	call   0x409238
  403616:	nop
  403617:	push   rbp
  403618:	mov    rbp,rsp
  40361b:	sub    rsp,0x40
  40361f:	mov    DWORD PTR [rbp+0x10],ecx
  403622:	mov    QWORD PTR [rbp+0x18],rdx
  403626:	mov    QWORD PTR [rbp+0x20],r8
  40362a:	mov    rax,QWORD PTR [rbp+0x18]
  40362e:	mov    QWORD PTR [rbp-0x8],rax
  403632:	mov    QWORD PTR [rbp-0x10],0x0
  40363a:	jmp    0x403699
  40363c:	mov    rax,QWORD PTR [rbp+0x20]
  403640:	mov    edx,eax
  403642:	mov    rax,QWORD PTR [rbp-0x10]
  403646:	sub    edx,eax
  403648:	mov    rax,QWORD PTR [rbp-0x8]
  40364c:	mov    r8d,edx
  40364f:	mov    rdx,rax
  403652:	mov    ecx,DWORD PTR [rbp+0x10]
  403655:	mov    rax,QWORD PTR [rip+0xdff4]        # 0x411650
  40365c:	call   rax
  40365e:	mov    DWORD PTR [rbp-0x14],eax
  403661:	cmp    DWORD PTR [rbp-0x14],0x0
  403665:	jns    0x403680
  403667:	mov    rax,QWORD PTR [rip+0xdfb2]        # 0x411620
  40366e:	call   rax
  403670:	mov    eax,DWORD PTR [rax]
  403672:	cmp    eax,0x4
  403675:	jne    0x403679
  403677:	jmp    0x403699
  403679:	mov    eax,0x0
  40367e:	jmp    0x4036a8
  403680:	mov    eax,DWORD PTR [rbp-0x14]
  403683:	cdqe   
  403685:	mov    QWORD PTR [rbp-0x20],rax
  403689:	mov    rax,QWORD PTR [rbp-0x20]
  40368d:	add    QWORD PTR [rbp-0x8],rax
  403691:	mov    rax,QWORD PTR [rbp-0x20]
  403695:	add    QWORD PTR [rbp-0x10],rax
  403699:	mov    rax,QWORD PTR [rbp+0x20]
  40369d:	cmp    rax,QWORD PTR [rbp-0x10]
  4036a1:	ja     0x40363c
  4036a3:	mov    eax,0x1
  4036a8:	add    rsp,0x40
  4036ac:	pop    rbp
  4036ad:	ret    
  4036ae:	nop
  4036af:	nop
  4036b0:	jmp    QWORD PTR [rip+0xde42]        # 0x4114f8
  4036b6:	nop
  4036b7:	nop
  4036b8:	jmp    QWORD PTR [rip+0xde32]        # 0x4114f0
  4036be:	nop
  4036bf:	nop
  4036c0:	jmp    QWORD PTR [rip+0xde22]        # 0x4114e8
  4036c6:	nop
  4036c7:	nop
  4036c8:	jmp    QWORD PTR [rip+0xde12]        # 0x4114e0
  4036ce:	nop
  4036cf:	nop
  4036d0:	jmp    QWORD PTR [rip+0xde02]        # 0x4114d8
  4036d6:	nop
  4036d7:	nop
  4036d8:	jmp    QWORD PTR [rip+0xddf2]        # 0x4114d0
  4036de:	nop
  4036df:	nop
  4036e0:	jmp    QWORD PTR [rip+0xdde2]        # 0x4114c8
  4036e6:	nop
  4036e7:	nop
  4036e8:	jmp    QWORD PTR [rip+0xddd2]        # 0x4114c0
  4036ee:	nop
  4036ef:	nop
  4036f0:	jmp    QWORD PTR [rip+0xddc2]        # 0x4114b8
  4036f6:	nop
  4036f7:	nop
  4036f8:	jmp    QWORD PTR [rip+0xddb2]        # 0x4114b0
  4036fe:	nop
  4036ff:	nop
  403700:	jmp    QWORD PTR [rip+0xdda2]        # 0x4114a8
  403706:	nop
  403707:	nop
  403708:	jmp    QWORD PTR [rip+0xdd92]        # 0x4114a0
  40370e:	nop
  40370f:	nop
  403710:	jmp    QWORD PTR [rip+0xdd82]        # 0x411498
  403716:	nop
  403717:	nop
  403718:	jmp    QWORD PTR [rip+0xdd72]        # 0x411490
  40371e:	nop
  40371f:	nop
  403720:	jmp    QWORD PTR [rip+0xdd62]        # 0x411488
  403726:	nop
  403727:	nop
  403728:	jmp    QWORD PTR [rip+0xdd52]        # 0x411480
  40372e:	nop
  40372f:	nop
  403730:	jmp    QWORD PTR [rip+0xdd42]        # 0x411478
  403736:	nop
  403737:	nop
  403738:	jmp    QWORD PTR [rip+0xdd32]        # 0x411470
  40373e:	nop
  40373f:	nop
  403740:	jmp    QWORD PTR [rip+0xdd22]        # 0x411468
  403746:	nop
  403747:	nop
  403748:	jmp    QWORD PTR [rip+0xdd12]        # 0x411460
  40374e:	nop
  40374f:	nop
  403750:	jmp    QWORD PTR [rip+0xdd02]        # 0x411458
  403756:	nop
  403757:	nop
  403758:	jmp    QWORD PTR [rip+0xdcf2]        # 0x411450
  40375e:	nop
  40375f:	nop
  403760:	jmp    QWORD PTR [rip+0xdce2]        # 0x411448
  403766:	nop
  403767:	nop
  403768:	jmp    QWORD PTR [rip+0xdcd2]        # 0x411440
  40376e:	nop
  40376f:	nop
  403770:	jmp    QWORD PTR [rip+0xdcc2]        # 0x411438
  403776:	nop
  403777:	nop
  403778:	jmp    QWORD PTR [rip+0xdcb2]        # 0x411430
  40377e:	nop
  40377f:	nop
  403780:	jmp    QWORD PTR [rip+0xdca2]        # 0x411428
  403786:	nop
  403787:	nop
  403788:	jmp    QWORD PTR [rip+0xdc92]        # 0x411420
  40378e:	nop
  40378f:	nop
  403790:	jmp    QWORD PTR [rip+0xdc82]        # 0x411418
  403796:	nop
  403797:	nop
  403798:	jmp    QWORD PTR [rip+0xdc72]        # 0x411410
  40379e:	nop
  40379f:	nop
  4037a0:	jmp    QWORD PTR [rip+0xdc62]        # 0x411408
  4037a6:	nop
  4037a7:	nop
  4037a8:	jmp    QWORD PTR [rip+0xdc52]        # 0x411400
  4037ae:	nop
  4037af:	nop
  4037b0:	jmp    QWORD PTR [rip+0xdc42]        # 0x4113f8
  4037b6:	nop
  4037b7:	nop
  4037b8:	jmp    QWORD PTR [rip+0xdc32]        # 0x4113f0
  4037be:	nop
  4037bf:	nop
  4037c0:	jmp    QWORD PTR [rip+0xdc22]        # 0x4113e8
  4037c6:	nop
  4037c7:	nop
  4037c8:	jmp    QWORD PTR [rip+0xdc12]        # 0x4113e0
  4037ce:	nop
  4037cf:	nop
  4037d0:	jmp    QWORD PTR [rip+0xdc02]        # 0x4113d8
  4037d6:	nop
  4037d7:	nop
  4037d8:	jmp    QWORD PTR [rip+0xdbf2]        # 0x4113d0
  4037de:	nop
  4037df:	nop
  4037e0:	jmp    QWORD PTR [rip+0xdbe2]        # 0x4113c8
  4037e6:	nop
  4037e7:	nop
  4037e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4037f0:	push   rbx
  4037f1:	sub    rsp,0x30
  4037f5:	mov    rbx,rcx
  4037f8:	mov    rcx,QWORD PTR [rip+0xcc61]        # 0x410460
  4037ff:	call   0x403da0
  403804:	cmp    rax,0xffffffffffffffff
  403808:	mov    QWORD PTR [rsp+0x20],rax
  40380d:	je     0x403885
  40380f:	mov    ecx,0x8
  403814:	call   0x409268
  403819:	mov    rcx,QWORD PTR [rip+0xcc40]        # 0x410460
  403820:	call   0x403da0
  403825:	mov    rcx,QWORD PTR [rip+0xcc3c]        # 0x410468
  40382c:	mov    QWORD PTR [rsp+0x20],rax
  403831:	call   0x403da0
  403836:	lea    rdx,[rsp+0x20]
  40383b:	lea    r8,[rsp+0x28]
  403840:	mov    rcx,rbx
  403843:	mov    QWORD PTR [rsp+0x28],rax
  403848:	call   0x4092b8
  40384d:	mov    rcx,QWORD PTR [rsp+0x20]
  403852:	mov    rbx,rax
  403855:	call   0x403db0
  40385a:	mov    rcx,QWORD PTR [rsp+0x28]
  40385f:	mov    QWORD PTR [rip+0xcbfa],rax        # 0x410460
  403866:	call   0x403db0
  40386b:	mov    ecx,0x8
  403870:	mov    QWORD PTR [rip+0xcbf1],rax        # 0x410468
  403877:	call   0x409258
  40387c:	mov    rax,rbx
  40387f:	add    rsp,0x30
  403883:	pop    rbx
  403884:	ret    
  403885:	mov    rax,QWORD PTR [rip+0x86f4]        # 0x40bf80
  40388c:	mov    rcx,rbx
  40388f:	call   QWORD PTR [rax]
  403891:	add    rsp,0x30
  403895:	pop    rbx
  403896:	ret    
  403897:	nop    WORD PTR [rax+rax*1+0x0]
  4038a0:	sub    rsp,0x28
  4038a4:	call   0x4037f0
  4038a9:	test   rax,rax
  4038ac:	sete   al
  4038af:	movzx  eax,al
  4038b2:	neg    eax
  4038b4:	add    rsp,0x28
  4038b8:	ret    
  4038b9:	nop
  4038ba:	nop
  4038bb:	nop
  4038bc:	nop
  4038bd:	nop
  4038be:	nop
  4038bf:	nop
  4038c0:	sub    rsp,0x28
  4038c4:	mov    rax,QWORD PTR [rip+0x6745]        # 0x40a010
  4038cb:	mov    rax,QWORD PTR [rax]
  4038ce:	test   rax,rax
  4038d1:	je     0x4038f0
  4038d3:	call   rax
  4038d5:	mov    rax,QWORD PTR [rip+0x6734]        # 0x40a010
  4038dc:	lea    rdx,[rax+0x8]
  4038e0:	mov    rax,QWORD PTR [rax+0x8]
  4038e4:	mov    QWORD PTR [rip+0x6725],rdx        # 0x40a010
  4038eb:	test   rax,rax
  4038ee:	jne    0x4038d3
  4038f0:	add    rsp,0x28
  4038f4:	ret    
  4038f5:	nop
  4038f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403900:	push   rsi
  403901:	push   rbx
  403902:	sub    rsp,0x28
  403906:	mov    rsi,QWORD PTR [rip+0x85d3]        # 0x40bee0
  40390d:	mov    rax,QWORD PTR [rsi]
  403910:	cmp    eax,0xffffffff
  403913:	mov    ebx,eax
  403915:	je     0x403940
  403917:	test   ebx,ebx
  403919:	je     0x40392a
  40391b:	nop    DWORD PTR [rax+rax*1+0x0]
  403920:	mov    eax,ebx
  403922:	call   QWORD PTR [rsi+rax*8]
  403925:	sub    ebx,0x1
  403928:	jne    0x403920
  40392a:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x4038c0
  403931:	add    rsp,0x28
  403935:	pop    rbx
  403936:	pop    rsi
  403937:	jmp    0x4038a0
  40393c:	nop    DWORD PTR [rax+0x0]
  403940:	xor    ebx,ebx
  403942:	jmp    0x403946
  403944:	mov    ebx,eax
  403946:	lea    edx,[rbx+0x1]
  403949:	cmp    QWORD PTR [rsi+rdx*8],0x0
  40394e:	mov    rax,rdx
  403951:	jne    0x403944
  403953:	jmp    0x403917
  403955:	nop
  403956:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403960:	mov    eax,DWORD PTR [rip+0xb6da]        # 0x40f040
  403966:	test   eax,eax
  403968:	je     0x403970
  40396a:	repz ret 
  40396c:	nop    DWORD PTR [rax+0x0]
  403970:	mov    DWORD PTR [rip+0xb6c6],0x1        # 0x40f040
  40397a:	jmp    0x403900
  40397c:	nop
  40397d:	nop
  40397e:	nop
  40397f:	nop
  403980:	mov    rax,QWORD PTR [rip+0xdc69]        # 0x4115f0
  403987:	rex.W jmp rax
  40398a:	nop
  40398b:	nop
  40398c:	nop
  40398d:	nop
  40398e:	nop
  40398f:	nop
  403990:	xor    eax,eax
  403992:	ret    
  403993:	nop
  403994:	nop
  403995:	nop
  403996:	nop
  403997:	nop
  403998:	nop
  403999:	nop
  40399a:	nop
  40399b:	nop
  40399c:	nop
  40399d:	nop
  40399e:	nop
  40399f:	nop
  4039a0:	push   r12
  4039a2:	push   rbp
  4039a3:	push   rdi
  4039a4:	push   rsi
  4039a5:	push   rbx
  4039a6:	sub    rsp,0x40
  4039aa:	mov    rbx,QWORD PTR [rip+0x66ef]        # 0x40a0a0
  4039b1:	movabs rax,0x2b992ddfa232
  4039bb:	mov    QWORD PTR [rsp+0x20],0x0
  4039c4:	cmp    rbx,rax
  4039c7:	je     0x4039e0
  4039c9:	not    rbx
  4039cc:	mov    QWORD PTR [rip+0x66dd],rbx        # 0x40a0b0
  4039d3:	add    rsp,0x40
  4039d7:	pop    rbx
  4039d8:	pop    rsi
  4039d9:	pop    rdi
  4039da:	pop    rbp
  4039db:	pop    r12
  4039dd:	ret    
  4039de:	xchg   ax,ax
  4039e0:	lea    rcx,[rsp+0x20]
  4039e5:	call   QWORD PTR [rip+0xdb55]        # 0x411540
  4039eb:	mov    r12,QWORD PTR [rsp+0x20]
  4039f0:	call   QWORD PTR [rip+0xdb2a]        # 0x411520
  4039f6:	mov    ebp,eax
  4039f8:	call   QWORD PTR [rip+0xdb2a]        # 0x411528
  4039fe:	mov    edi,eax
  403a00:	call   QWORD PTR [rip+0xdb42]        # 0x411548
  403a06:	lea    rcx,[rsp+0x30]
  403a0b:	mov    esi,eax
  403a0d:	call   QWORD PTR [rip+0xdb4d]        # 0x411560
  403a13:	xor    r12,QWORD PTR [rsp+0x30]
  403a18:	mov    edx,edi
  403a1a:	movabs rax,0xffffffffffff
  403a24:	xor    rbp,r12
  403a27:	mov    rdi,rbp
  403a2a:	xor    rdi,rdx
  403a2d:	mov    edx,esi
  403a2f:	xor    rdi,rdx
  403a32:	mov    rsi,rdi
  403a35:	and    rsi,rax
  403a38:	cmp    rsi,rbx
  403a3b:	je     0x403a60
  403a3d:	mov    rax,rsi
  403a40:	not    rax
  403a43:	mov    QWORD PTR [rip+0x6656],rsi        # 0x40a0a0
  403a4a:	mov    QWORD PTR [rip+0x665f],rax        # 0x40a0b0
  403a51:	add    rsp,0x40
  403a55:	pop    rbx
  403a56:	pop    rsi
  403a57:	pop    rdi
  403a58:	pop    rbp
  403a59:	pop    r12
  403a5b:	ret    
  403a5c:	nop    DWORD PTR [rax+0x0]
  403a60:	movabs rax,0xffffd466d2205dcc
  403a6a:	movabs rsi,0x2b992ddfa233
  403a74:	jmp    0x403a43
  403a76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403a80:	push   rbp
  403a81:	push   rsi
  403a82:	push   rbx
  403a83:	mov    rbp,rsp
  403a86:	sub    rsp,0x70
  403a8a:	mov    rsi,rcx
  403a8d:	lea    rcx,[rip+0xb5ec]        # 0x40f080
  403a94:	call   QWORD PTR [rip+0xdad6]        # 0x411570
  403a9a:	mov    rbx,QWORD PTR [rip+0xb6d7]        # 0x40f178
  403aa1:	xor    r8d,r8d
  403aa4:	lea    rdx,[rbp-0x28]
  403aa8:	mov    rcx,rbx
  403aab:	call   QWORD PTR [rip+0xdac7]        # 0x411578
  403ab1:	test   rax,rax
  403ab4:	mov    r9,rax
  403ab7:	je     0x403b60
  403abd:	lea    rax,[rbp-0x20]
  403ac1:	mov    QWORD PTR [rsp+0x38],0x0
  403aca:	mov    r8,rbx
  403acd:	mov    rdx,QWORD PTR [rbp-0x28]
  403ad1:	xor    ecx,ecx
  403ad3:	mov    QWORD PTR [rsp+0x30],rax
  403ad8:	lea    rax,[rbp-0x18]
  403adc:	mov    QWORD PTR [rsp+0x28],rax
  403ae1:	lea    rax,[rip+0xb598]        # 0x40f080
  403ae8:	mov    QWORD PTR [rsp+0x20],rax
  403aed:	call   QWORD PTR [rip+0xda8d]        # 0x411580
  403af3:	mov    rax,QWORD PTR [rip+0xb67e]        # 0x40f178
  403afa:	xor    ecx,ecx
  403afc:	mov    QWORD PTR [rip+0xb5fd],rsi        # 0x40f100
  403b03:	mov    DWORD PTR [rip+0xba73],0xc0000409        # 0x40f580
  403b0d:	mov    DWORD PTR [rip+0xba6d],0x1        # 0x40f584
  403b17:	mov    QWORD PTR [rip+0xba72],rax        # 0x40f590
  403b1e:	mov    rax,QWORD PTR [rip+0x657b]        # 0x40a0a0
  403b25:	mov    QWORD PTR [rbp-0x10],rax
  403b29:	mov    rax,QWORD PTR [rip+0x6580]        # 0x40a0b0
  403b30:	mov    QWORD PTR [rbp-0x8],rax
  403b34:	call   QWORD PTR [rip+0xda4e]        # 0x411588
  403b3a:	lea    rcx,[rip+0x7d5f]        # 0x40b8a0
  403b41:	call   QWORD PTR [rip+0xda61]        # 0x4115a8
  403b47:	call   QWORD PTR [rip+0xd9cb]        # 0x411518
  403b4d:	mov    edx,0xc0000409
  403b52:	mov    rcx,rax
  403b55:	call   QWORD PTR [rip+0xda3d]        # 0x411598
  403b5b:	call   0x409248
  403b60:	mov    rax,QWORD PTR [rbp+0x18]
  403b64:	mov    QWORD PTR [rip+0xb60d],rax        # 0x40f178
  403b6b:	lea    rax,[rbp+0x8]
  403b6f:	mov    QWORD PTR [rip+0xb5a2],rax        # 0x40f118
  403b76:	jmp    0x403af3
  403b7b:	nop
  403b7c:	nop
  403b7d:	nop
  403b7e:	nop
  403b7f:	nop
  403b80:	sub    rsp,0x28
  403b84:	test   edx,edx
  403b86:	je     0x403ba0
  403b88:	cmp    edx,0x3
  403b8b:	je     0x403ba0
  403b8d:	mov    eax,0x1
  403b92:	add    rsp,0x28
  403b96:	ret    
  403b97:	nop    WORD PTR [rax+rax*1+0x0]
  403ba0:	call   0x404890
  403ba5:	mov    eax,0x1
  403baa:	add    rsp,0x28
  403bae:	ret    
  403baf:	nop
  403bb0:	push   rsi
  403bb1:	push   rbx
  403bb2:	sub    rsp,0x28
  403bb6:	mov    rax,QWORD PTR [rip+0x8303]        # 0x40bec0
  403bbd:	cmp    DWORD PTR [rax],0x2
  403bc0:	je     0x403bc8
  403bc2:	mov    DWORD PTR [rax],0x2
  403bc8:	cmp    edx,0x2
  403bcb:	je     0x403be0
  403bcd:	cmp    edx,0x1
  403bd0:	je     0x403c12
  403bd2:	mov    eax,0x1
  403bd7:	add    rsp,0x28
  403bdb:	pop    rbx
  403bdc:	pop    rsi
  403bdd:	ret    
  403bde:	xchg   ax,ax
  403be0:	lea    rbx,[rip+0xf479]        # 0x413060
  403be7:	lea    rsi,[rip+0xf472]        # 0x413060
  403bee:	cmp    rbx,rsi
  403bf1:	je     0x403bd2
  403bf3:	mov    rax,QWORD PTR [rbx]
  403bf6:	test   rax,rax
  403bf9:	je     0x403bfd
  403bfb:	call   rax
  403bfd:	add    rbx,0x8
  403c01:	cmp    rbx,rsi
  403c04:	jne    0x403bf3
  403c06:	mov    eax,0x1
  403c0b:	add    rsp,0x28
  403c0f:	pop    rbx
  403c10:	pop    rsi
  403c11:	ret    
  403c12:	call   0x404890
  403c17:	jmp    0x403bd2
  403c19:	nop    DWORD PTR [rax+0x0]
  403c20:	xor    eax,eax
  403c22:	ret    
  403c23:	nop
  403c24:	nop
  403c25:	nop
  403c26:	nop
  403c27:	nop
  403c28:	nop
  403c29:	nop
  403c2a:	nop
  403c2b:	nop
  403c2c:	nop
  403c2d:	nop
  403c2e:	nop
  403c2f:	nop
  403c30:	sub    rsp,0x58
  403c34:	mov    rax,QWORD PTR [rip+0xba25]        # 0x40f660
  403c3b:	test   rax,rax
  403c3e:	je     0x403c6c
  403c40:	movsd  xmm0,QWORD PTR [rsp+0x80]
  403c49:	mov    DWORD PTR [rsp+0x20],ecx
  403c4d:	lea    rcx,[rsp+0x20]
  403c52:	mov    QWORD PTR [rsp+0x28],rdx
  403c57:	movsd  QWORD PTR [rsp+0x30],xmm2
  403c5d:	movsd  QWORD PTR [rsp+0x38],xmm3
  403c63:	movsd  QWORD PTR [rsp+0x40],xmm0
  403c69:	call   rax
  403c6b:	nop
  403c6c:	add    rsp,0x58
  403c70:	ret    
  403c71:	nop    DWORD PTR [rax+rax*1+0x0]
  403c76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403c80:	mov    QWORD PTR [rip+0xb9d9],rcx        # 0x40f660
  403c87:	jmp    0x409290
  403c8c:	nop    DWORD PTR [rax+0x0]
  403c90:	push   rsi
  403c91:	push   rbx
  403c92:	sub    rsp,0x78
  403c96:	movaps XMMWORD PTR [rsp+0x40],xmm6
  403c9b:	movaps XMMWORD PTR [rsp+0x50],xmm7
  403ca0:	movaps XMMWORD PTR [rsp+0x60],xmm8
  403ca6:	cmp    DWORD PTR [rcx],0x6
  403ca9:	ja     0x403d80
  403caf:	mov    edx,DWORD PTR [rcx]
  403cb1:	lea    rax,[rip+0x7d2c]        # 0x40b9e4
  403cb8:	movsxd rdx,DWORD PTR [rax+rdx*4]
  403cbc:	add    rax,rdx
  403cbf:	jmp    rax
  403cc1:	lea    rbx,[rip+0x7bf8]        # 0x40b8c0
  403cc8:	nop    DWORD PTR [rax+rax*1+0x0]
  403cd0:	movsd  xmm8,QWORD PTR [rcx+0x20]
  403cd6:	mov    rsi,QWORD PTR [rcx+0x8]
  403cda:	movsd  xmm7,QWORD PTR [rcx+0x18]
  403cdf:	movsd  xmm6,QWORD PTR [rcx+0x10]
  403ce4:	call   0x4092a8
  403ce9:	movsd  QWORD PTR [rsp+0x30],xmm8
  403cf0:	lea    rcx,[rax+0x60]
  403cf4:	lea    rdx,[rip+0x7cbd]        # 0x40b9b8
  403cfb:	movsd  QWORD PTR [rsp+0x28],xmm7
  403d01:	mov    r9,rsi
  403d04:	mov    r8,rbx
  403d07:	movsd  QWORD PTR [rsp+0x20],xmm6
  403d0d:	call   0x409228
  403d12:	nop
  403d13:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  403d18:	xor    eax,eax
  403d1a:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  403d1f:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  403d25:	add    rsp,0x78
  403d29:	pop    rbx
  403d2a:	pop    rsi
  403d2b:	ret    
  403d2c:	nop    DWORD PTR [rax+0x0]
  403d30:	lea    rbx,[rip+0x7ba8]        # 0x40b8df
  403d37:	jmp    0x403cd0
  403d39:	nop    DWORD PTR [rax+0x0]
  403d40:	lea    rbx,[rip+0x7bb9]        # 0x40b900
  403d47:	jmp    0x403cd0
  403d49:	nop    DWORD PTR [rax+0x0]
  403d50:	lea    rbx,[rip+0x7c19]        # 0x40b970
  403d57:	jmp    0x403cd0
  403d5c:	nop    DWORD PTR [rax+0x0]
  403d60:	lea    rbx,[rip+0x7be1]        # 0x40b948
  403d67:	jmp    0x403cd0
  403d6c:	nop    DWORD PTR [rax+0x0]
  403d70:	lea    rbx,[rip+0x7ba9]        # 0x40b920
  403d77:	jmp    0x403cd0
  403d7c:	nop    DWORD PTR [rax+0x0]
  403d80:	lea    rbx,[rip+0x7c1f]        # 0x40b9a6
  403d87:	jmp    0x403cd0
  403d8c:	nop
  403d8d:	nop
  403d8e:	nop
  403d8f:	nop
  403d90:	fninit 
  403d92:	ret    
  403d93:	nop
  403d94:	nop
  403d95:	nop
  403d96:	nop
  403d97:	nop
  403d98:	nop
  403d99:	nop
  403d9a:	nop
  403d9b:	nop
  403d9c:	nop
  403d9d:	nop
  403d9e:	nop
  403d9f:	nop
  403da0:	mov    rax,rcx
  403da3:	ret    
  403da4:	xchg   ax,ax
  403da6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403db0:	mov    rax,rcx
  403db3:	ret    
  403db4:	nop
  403db5:	nop
  403db6:	nop
  403db7:	nop
  403db8:	nop
  403db9:	nop
  403dba:	nop
  403dbb:	nop
  403dbc:	nop
  403dbd:	nop
  403dbe:	nop
  403dbf:	nop
  403dc0:	push   rsi
  403dc1:	push   rbx
  403dc2:	sub    rsp,0x38
  403dc6:	lea    rax,[rsp+0x58]
  403dcb:	mov    rbx,rcx
  403dce:	mov    QWORD PTR [rsp+0x58],rdx
  403dd3:	mov    QWORD PTR [rsp+0x60],r8
  403dd8:	mov    QWORD PTR [rsp+0x68],r9
  403ddd:	mov    QWORD PTR [rsp+0x28],rax
  403de2:	call   0x4092a8
  403de7:	lea    rcx,[rip+0x7c12]        # 0x40ba00
  403dee:	lea    r9,[rax+0x60]
  403df2:	mov    r8d,0x1b
  403df8:	mov    edx,0x1
  403dfd:	call   0x409218
  403e02:	mov    rsi,QWORD PTR [rsp+0x28]
  403e07:	call   0x4092a8
  403e0c:	lea    rcx,[rax+0x60]
  403e10:	mov    rdx,rbx
  403e13:	mov    r8,rsi
  403e16:	call   0x409178
  403e1b:	call   0x409248
  403e20:	nop
  403e21:	nop    DWORD PTR [rax+rax*1+0x0]
  403e26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403e30:	push   r13
  403e32:	push   r12
  403e34:	push   rbp
  403e35:	push   rdi
  403e36:	push   rsi
  403e37:	push   rbx
  403e38:	sub    rsp,0x58
  403e3c:	movsxd rbp,DWORD PTR [rip+0xb841]        # 0x40f684
  403e43:	mov    rbx,rcx
  403e46:	mov    rsi,rdx
  403e49:	mov    rdi,r8
  403e4c:	test   ebp,ebp
  403e4e:	jle    0x403f4a
  403e54:	mov    rax,QWORD PTR [rip+0xb82d]        # 0x40f688
  403e5b:	xor    r9d,r9d
  403e5e:	add    rax,0x8
  403e62:	mov    r10,QWORD PTR [rax]
  403e65:	cmp    rbx,r10
  403e68:	jb     0x403e7e
  403e6a:	mov    rdx,QWORD PTR [rax+0x8]
  403e6e:	mov    r11d,DWORD PTR [rdx+0x8]
  403e72:	add    r10,r11
  403e75:	cmp    rbx,r10
  403e78:	jb     0x403f30
  403e7e:	add    r9d,0x1
  403e82:	add    rax,0x18
  403e86:	cmp    r9d,ebp
  403e89:	jne    0x403e62
  403e8b:	mov    rcx,rbx
  403e8e:	call   0x404aa0
  403e93:	test   rax,rax
  403e96:	mov    r12,rax
  403e99:	je     0x403f82
  403e9f:	lea    rbp,[rbp+rbp*2+0x0]
  403ea4:	shl    rbp,0x3
  403ea8:	mov    r13,rbp
  403eab:	add    r13,QWORD PTR [rip+0xb7d6]        # 0x40f688
  403eb2:	mov    QWORD PTR [r13+0x10],rax
  403eb6:	mov    DWORD PTR [r13+0x0],0x0
  403ebe:	call   0x404bc0
  403ec3:	mov    edx,DWORD PTR [r12+0xc]
  403ec8:	mov    r8d,0x30
  403ece:	add    rax,rdx
  403ed1:	lea    rdx,[rsp+0x20]
  403ed6:	mov    QWORD PTR [r13+0x8],rax
  403eda:	mov    rax,QWORD PTR [rip+0xb7a7]        # 0x40f688
  403ee1:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  403ee6:	call   QWORD PTR [rip+0xd6cc]        # 0x4115b8
  403eec:	test   rax,rax
  403eef:	je     0x403f65
  403ef1:	mov    eax,DWORD PTR [rsp+0x44]
  403ef5:	lea    edx,[rax-0x4]
  403ef8:	and    edx,0xfffffffb
  403efb:	je     0x403f29
  403efd:	sub    eax,0x40
  403f00:	and    eax,0xffffffbf
  403f03:	je     0x403f29
  403f05:	mov    r9,rbp
  403f08:	add    r9,QWORD PTR [rip+0xb779]        # 0x40f688
  403f0f:	mov    r8d,0x40
  403f15:	mov    rdx,QWORD PTR [rsp+0x38]
  403f1a:	mov    rcx,QWORD PTR [rsp+0x20]
  403f1f:	call   QWORD PTR [rip+0xd68b]        # 0x4115b0
  403f25:	test   eax,eax
  403f27:	je     0x403f51
  403f29:	add    DWORD PTR [rip+0xb754],0x1        # 0x40f684
  403f30:	mov    r8,rdi
  403f33:	mov    rdx,rsi
  403f36:	mov    rcx,rbx
  403f39:	add    rsp,0x58
  403f3d:	pop    rbx
  403f3e:	pop    rsi
  403f3f:	pop    rdi
  403f40:	pop    rbp
  403f41:	pop    r12
  403f43:	pop    r13
  403f45:	jmp    0x4091e8
  403f4a:	xor    ebp,ebp
  403f4c:	jmp    0x403e8b
  403f51:	call   QWORD PTR [rip+0xd5d9]        # 0x411530
  403f57:	lea    rcx,[rip+0x7b1a]        # 0x40ba78
  403f5e:	mov    edx,eax
  403f60:	call   0x403dc0
  403f65:	mov    rax,QWORD PTR [rip+0xb71c]        # 0x40f688
  403f6c:	mov    edx,DWORD PTR [r12+0x8]
  403f71:	lea    rcx,[rip+0x7ac8]        # 0x40ba40
  403f78:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  403f7d:	call   0x403dc0
  403f82:	lea    rcx,[rip+0x7a97]        # 0x40ba20
  403f89:	mov    rdx,rbx
  403f8c:	call   0x403dc0
  403f91:	nop
  403f92:	nop    DWORD PTR [rax+0x0]
  403f96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403fa0:	push   rbp
  403fa1:	push   r14
  403fa3:	push   r13
  403fa5:	push   r12
  403fa7:	push   rdi
  403fa8:	push   rsi
  403fa9:	push   rbx
  403faa:	mov    rbp,rsp
  403fad:	sub    rsp,0x60
  403fb1:	mov    ebx,DWORD PTR [rip+0xb6c9]        # 0x40f680
  403fb7:	test   ebx,ebx
  403fb9:	je     0x403fd0
  403fbb:	mov    rsp,rbp
  403fbe:	pop    rbx
  403fbf:	pop    rsi
  403fc0:	pop    rdi
  403fc1:	pop    r12
  403fc3:	pop    r13
  403fc5:	pop    r14
  403fc7:	pop    rbp
  403fc8:	ret    
  403fc9:	nop    DWORD PTR [rax+0x0]
  403fd0:	mov    DWORD PTR [rip+0xb6a6],0x1        # 0x40f680
  403fda:	call   0x404af0
  403fdf:	cdqe   
  403fe1:	lea    rax,[rax+rax*2]
  403fe5:	lea    rax,[rax*8+0x1e]
  403fed:	and    rax,0xfffffffffffffff0
  403ff1:	call   0x404d10
  403ff6:	mov    rsi,QWORD PTR [rip+0x7ef3]        # 0x40bef0
  403ffd:	mov    rbx,QWORD PTR [rip+0x7efc]        # 0x40bf00
  404004:	sub    rsp,rax
  404007:	mov    DWORD PTR [rip+0xb673],0x0        # 0x40f684
  404011:	lea    rax,[rsp+0x20]
  404016:	mov    QWORD PTR [rip+0xb66b],rax        # 0x40f688
  40401d:	mov    rax,rsi
  404020:	sub    rax,rbx
  404023:	cmp    rax,0x7
  404027:	jle    0x403fbb
  404029:	cmp    rax,0xb
  40402d:	jle    0x404055
  40402f:	mov    r11d,DWORD PTR [rbx]
  404032:	test   r11d,r11d
  404035:	jne    0x404180
  40403b:	mov    r10d,DWORD PTR [rbx+0x4]
  40403f:	test   r10d,r10d
  404042:	jne    0x404180
  404048:	mov    r9d,DWORD PTR [rbx+0x8]
  40404c:	test   r9d,r9d
  40404f:	jne    0x40406c
  404051:	add    rbx,0xc
  404055:	mov    r8d,DWORD PTR [rbx]
  404058:	test   r8d,r8d
  40405b:	jne    0x404180
  404061:	mov    ecx,DWORD PTR [rbx+0x4]
  404064:	test   ecx,ecx
  404066:	jne    0x404180
  40406c:	mov    edx,DWORD PTR [rbx+0x8]
  40406f:	cmp    edx,0x1
  404072:	jne    0x40428c
  404078:	add    rbx,0xc
  40407c:	cmp    rbx,rsi
  40407f:	jae    0x403fbb
  404085:	mov    r12,QWORD PTR [rip+0x7eb4]        # 0x40bf40
  40408c:	lea    r13,[rbp-0x30]
  404090:	movabs r14,0xffffffff00000000
  40409a:	mov    ecx,DWORD PTR [rbx+0x4]
  40409d:	mov    eax,DWORD PTR [rbx]
  40409f:	movzx  edx,BYTE PTR [rbx+0x8]
  4040a3:	add    rax,r12
  4040a6:	add    rcx,r12
  4040a9:	cmp    edx,0x10
  4040ac:	mov    r8,QWORD PTR [rax]
  4040af:	je     0x4041f6
  4040b5:	jbe    0x4041bd
  4040bb:	cmp    edx,0x20
  4040be:	je     0x40423f
  4040c4:	cmp    edx,0x40
  4040c7:	jne    0x40422b
  4040cd:	sub    r8,rax
  4040d0:	mov    rdx,r13
  4040d3:	mov    rdi,r13
  4040d6:	mov    rax,r8
  4040d9:	add    rax,QWORD PTR [rcx]
  4040dc:	mov    r8d,0x8
  4040e2:	mov    QWORD PTR [rbp-0x30],rax
  4040e6:	call   0x403e30
  4040eb:	add    rbx,0xc
  4040ef:	cmp    rbx,rsi
  4040f2:	jb     0x40409a
  4040f4:	mov    eax,DWORD PTR [rip+0xb58a]        # 0x40f684
  4040fa:	xor    ebx,ebx
  4040fc:	xor    esi,esi
  4040fe:	test   eax,eax
  404100:	jle    0x403fbb
  404106:	mov    r14,QWORD PTR [rip+0xd4ab]        # 0x4115b8
  40410d:	lea    r13,[rbp-0x34]
  404111:	mov    r12,QWORD PTR [rip+0xd498]        # 0x4115b0
  404118:	jmp    0x404133
  40411a:	nop    WORD PTR [rax+rax*1+0x0]
  404120:	add    esi,0x1
  404123:	add    rbx,0x18
  404127:	cmp    esi,DWORD PTR [rip+0xb557]        # 0x40f684
  40412d:	jge    0x403fbb
  404133:	mov    rax,rbx
  404136:	add    rax,QWORD PTR [rip+0xb54b]        # 0x40f688
  40413d:	mov    edx,DWORD PTR [rax]
  40413f:	test   edx,edx
  404141:	je     0x404120
  404143:	mov    rcx,QWORD PTR [rax+0x8]
  404147:	mov    r8d,0x30
  40414d:	mov    rdx,rdi
  404150:	call   r14
  404153:	test   rax,rax
  404156:	je     0x40426e
  40415c:	mov    rax,QWORD PTR [rip+0xb525]        # 0x40f688
  404163:	mov    r9,r13
  404166:	mov    rdx,QWORD PTR [rbp-0x18]
  40416a:	mov    rcx,QWORD PTR [rbp-0x30]
  40416e:	mov    r8d,DWORD PTR [rax+rbx*1]
  404172:	call   r12
  404175:	jmp    0x404120
  404177:	nop    WORD PTR [rax+rax*1+0x0]
  404180:	cmp    rbx,rsi
  404183:	jae    0x403fbb
  404189:	mov    r12,QWORD PTR [rip+0x7db0]        # 0x40bf40
  404190:	lea    rdi,[rbp-0x30]
  404194:	mov    ecx,DWORD PTR [rbx+0x4]
  404197:	mov    eax,DWORD PTR [rbx]
  404199:	mov    r8d,0x4
  40419f:	mov    rdx,rdi
  4041a2:	add    rbx,0x8
  4041a6:	add    rcx,r12
  4041a9:	add    eax,DWORD PTR [rcx]
  4041ab:	mov    DWORD PTR [rbp-0x30],eax
  4041ae:	call   0x403e30
  4041b3:	cmp    rbx,rsi
  4041b6:	jb     0x404194
  4041b8:	jmp    0x4040f4
  4041bd:	cmp    edx,0x8
  4041c0:	jne    0x40422b
  4041c2:	movzx  edx,BYTE PTR [rcx]
  4041c5:	mov    rdi,r13
  4041c8:	mov    r10,rdx
  4041cb:	or     r10,0xffffffffffffff00
  4041d2:	test   dl,dl
  4041d4:	cmovs  rdx,r10
  4041d8:	sub    rdx,rax
  4041db:	lea    rax,[r8+rdx*1]
  4041df:	mov    r8d,0x1
  4041e5:	mov    rdx,r13
  4041e8:	mov    QWORD PTR [rbp-0x30],rax
  4041ec:	call   0x403e30
  4041f1:	jmp    0x4040eb
  4041f6:	movzx  edx,WORD PTR [rcx]
  4041f9:	mov    rdi,r13
  4041fc:	mov    r10,rdx
  4041ff:	or     r10,0xffffffffffff0000
  404206:	test   dx,dx
  404209:	cmovs  rdx,r10
  40420d:	sub    rdx,rax
  404210:	lea    rax,[r8+rdx*1]
  404214:	mov    r8d,0x2
  40421a:	mov    rdx,r13
  40421d:	mov    QWORD PTR [rbp-0x30],rax
  404221:	call   0x403e30
  404226:	jmp    0x4040eb
  40422b:	lea    rcx,[rip+0x78a6]        # 0x40bad8
  404232:	mov    QWORD PTR [rbp-0x30],0x0
  40423a:	call   0x403dc0
  40423f:	mov    edx,DWORD PTR [rcx]
  404241:	mov    rdi,r13
  404244:	mov    r10,rdx
  404247:	or     r10,r14
  40424a:	test   edx,edx
  40424c:	cmovs  rdx,r10
  404250:	sub    rdx,rax
  404253:	lea    rax,[r8+rdx*1]
  404257:	mov    r8d,0x4
  40425d:	mov    rdx,r13
  404260:	mov    QWORD PTR [rbp-0x30],rax
  404264:	call   0x403e30
  404269:	jmp    0x4040eb
  40426e:	add    rbx,QWORD PTR [rip+0xb413]        # 0x40f688
  404275:	lea    rcx,[rip+0x77c4]        # 0x40ba40
  40427c:	mov    rax,QWORD PTR [rbx+0x10]
  404280:	mov    r8,QWORD PTR [rbx+0x8]
  404284:	mov    edx,DWORD PTR [rax+0x8]
  404287:	call   0x403dc0
  40428c:	lea    rcx,[rip+0x780d]        # 0x40baa0
  404293:	call   0x403dc0
  404298:	nop
  404299:	nop
  40429a:	nop
  40429b:	nop
  40429c:	nop
  40429d:	nop
  40429e:	nop
  40429f:	nop
  4042a0:	sub    rsp,0x28
  4042a4:	mov    eax,DWORD PTR [rcx]
  4042a6:	cmp    eax,0xc0000091
  4042ab:	ja     0x404310
  4042ad:	cmp    eax,0xc000008d
  4042b2:	jae    0x40432f
  4042b4:	cmp    eax,0xc0000008
  4042b9:	je     0x4043d0
  4042bf:	ja     0x4043a0
  4042c5:	cmp    eax,0x80000002
  4042ca:	je     0x4043d0
  4042d0:	cmp    eax,0xc0000005
  4042d5:	jne    0x4043ae
  4042db:	xor    edx,edx
  4042dd:	mov    ecx,0xb
  4042e2:	call   0x4091c8
  4042e7:	cmp    rax,0x1
  4042eb:	je     0x404430
  4042f1:	test   rax,rax
  4042f4:	je     0x404410
  4042fa:	mov    ecx,0xb
  4042ff:	call   rax
  404301:	xor    eax,eax
  404303:	add    rsp,0x28
  404307:	ret    
  404308:	nop    DWORD PTR [rax+rax*1+0x0]
  404310:	cmp    eax,0xc0000094
  404315:	je     0x4043e0
  40431b:	ja     0x404360
  40431d:	cmp    eax,0xc0000092
  404322:	je     0x4043d0
  404328:	cmp    eax,0xc0000093
  40432d:	jne    0x4043ae
  40432f:	xor    edx,edx
  404331:	mov    ecx,0x8
  404336:	call   0x4091c8
  40433b:	cmp    rax,0x1
  40433f:	mov    rdx,rax
  404342:	je     0x4043b8
  404344:	test   rdx,rdx
  404347:	mov    eax,0x1
  40434c:	je     0x404303
  40434e:	mov    ecx,0x8
  404353:	call   rdx
  404355:	xor    eax,eax
  404357:	add    rsp,0x28
  40435b:	ret    
  40435c:	nop    DWORD PTR [rax+0x0]
  404360:	cmp    eax,0xc0000095
  404365:	je     0x4043d0
  404367:	cmp    eax,0xc0000096
  40436c:	jne    0x4043ae
  40436e:	xor    edx,edx
  404370:	mov    ecx,0x4
  404375:	call   0x4091c8
  40437a:	cmp    rax,0x1
  40437e:	je     0x40441a
  404384:	test   rax,rax
  404387:	je     0x404410
  40438d:	mov    ecx,0x4
  404392:	call   rax
  404394:	xor    eax,eax
  404396:	jmp    0x404303
  40439b:	nop    DWORD PTR [rax+rax*1+0x0]
  4043a0:	cmp    eax,0xc000001d
  4043a5:	je     0x40436e
  4043a7:	cmp    eax,0xc000008c
  4043ac:	je     0x4043d0
  4043ae:	mov    eax,0x1
  4043b3:	add    rsp,0x28
  4043b7:	ret    
  4043b8:	mov    edx,0x1
  4043bd:	mov    ecx,0x8
  4043c2:	call   0x4091c8
  4043c7:	call   0x403d90
  4043cc:	nop    DWORD PTR [rax+0x0]
  4043d0:	xor    eax,eax
  4043d2:	add    rsp,0x28
  4043d6:	ret    
  4043d7:	nop    WORD PTR [rax+rax*1+0x0]
  4043e0:	xor    edx,edx
  4043e2:	mov    ecx,0x8
  4043e7:	call   0x4091c8
  4043ec:	cmp    rax,0x1
  4043f0:	mov    rdx,rax
  4043f3:	jne    0x404344
  4043f9:	mov    edx,0x1
  4043fe:	mov    ecx,0x8
  404403:	call   0x4091c8
  404408:	xor    eax,eax
  40440a:	jmp    0x404303
  40440f:	nop
  404410:	mov    eax,0x4
  404415:	add    rsp,0x28
  404419:	ret    
  40441a:	mov    edx,0x1
  40441f:	mov    ecx,0x4
  404424:	call   0x4091c8
  404429:	xor    eax,eax
  40442b:	jmp    0x404303
  404430:	mov    edx,0x1
  404435:	mov    ecx,0xb
  40443a:	call   0x4091c8
  40443f:	xor    eax,eax
  404441:	jmp    0x404303
  404446:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404450:	push   r12
  404452:	push   rbp
  404453:	push   rdi
  404454:	push   rsi
  404455:	push   rbx
  404456:	sub    rsp,0x20
  40445a:	call   0x404bc0
  40445f:	mov    rbp,rax
  404462:	mov    eax,DWORD PTR [rip+0xb260]        # 0x40f6c8
  404468:	test   eax,eax
  40446a:	jne    0x404491
  40446c:	test   rbp,rbp
  40446f:	je     0x404491
  404471:	lea    rcx,[rip+0x7698]        # 0x40bb10
  404478:	mov    DWORD PTR [rip+0xb246],0x1        # 0x40f6c8
  404482:	call   0x404a00
  404487:	test   rax,rax
  40448a:	je     0x4044a0
  40448c:	mov    eax,0x1
  404491:	add    rsp,0x20
  404495:	pop    rbx
  404496:	pop    rsi
  404497:	pop    rdi
  404498:	pop    rbp
  404499:	pop    r12
  40449b:	ret    
  40449c:	nop    DWORD PTR [rax+0x0]
  4044a0:	lea    rbx,[rip+0xb359]        # 0x40f800
  4044a7:	mov    ecx,0x30
  4044ac:	lea    rdx,[rip+0xb24d]        # 0x40f700
  4044b3:	lea    r12,[rip+0xfffffffffffffde6]        # 0x4042a0
  4044ba:	xor    esi,esi
  4044bc:	mov    rdi,rbx
  4044bf:	rep stos QWORD PTR es:[rdi],rax
  4044c2:	mov    rdi,rdx
  4044c5:	sub    r12,rbp
  4044c8:	mov    cl,0x20
  4044ca:	rep stos QWORD PTR es:[rdi],rax
  4044cd:	mov    rdi,rdx
  4044d0:	jmp    0x404500
  4044d2:	mov    BYTE PTR [rdi],0x9
  4044d5:	mov    DWORD PTR [rdi+0x4],r12d
  4044d9:	add    rsi,0x1
  4044dd:	mov    edx,DWORD PTR [rax+0xc]
  4044e0:	add    rbx,0xc
  4044e4:	mov    DWORD PTR [rbx-0xc],edx
  4044e7:	add    edx,DWORD PTR [rax+0x8]
  4044ea:	mov    rax,rdi
  4044ed:	sub    rax,rbp
  4044f0:	add    rdi,0x8
  4044f4:	mov    DWORD PTR [rbx-0x4],eax
  4044f7:	mov    DWORD PTR [rbx-0x8],edx
  4044fa:	cmp    rsi,0x20
  4044fe:	je     0x404535
  404500:	mov    rcx,rsi
  404503:	call   0x404b30
  404508:	test   rax,rax
  40450b:	jne    0x4044d2
  40450d:	test   rsi,rsi
  404510:	je     0x40448c
  404516:	mov    edx,esi
  404518:	nop    DWORD PTR [rax+rax*1+0x0]
  404520:	mov    r8,rbp
  404523:	lea    rcx,[rip+0xb2d6]        # 0x40f800
  40452a:	call   QWORD PTR [rip+0xd038]        # 0x411568
  404530:	jmp    0x40448c
  404535:	mov    edx,0x20
  40453a:	jmp    0x404520
  40453c:	nop    DWORD PTR [rax+0x0]
  404540:	push   rbx
  404541:	sub    rsp,0x20
  404545:	mov    rdx,QWORD PTR [rcx]
  404548:	mov    eax,DWORD PTR [rdx]
  40454a:	mov    r8d,eax
  40454d:	and    r8d,0x20ffffff
  404554:	cmp    r8d,0x20474343
  40455b:	je     0x404660
  404561:	cmp    eax,0xc0000091
  404566:	mov    rbx,rcx
  404569:	ja     0x4045f0
  40456f:	cmp    eax,0xc000008d
  404574:	jae    0x404607
  40457a:	cmp    eax,0xc0000008
  40457f:	je     0x4045b3
  404581:	ja     0x4045c0
  404583:	cmp    eax,0x80000002
  404588:	je     0x4045b3
  40458a:	cmp    eax,0xc0000005
  40458f:	jne    0x4045d2
  404591:	xor    edx,edx
  404593:	mov    ecx,0xb
  404598:	call   0x4091c8
  40459d:	cmp    rax,0x1
  4045a1:	je     0x4046d0
  4045a7:	test   rax,rax
  4045aa:	je     0x4045d2
  4045ac:	mov    ecx,0xb
  4045b1:	call   rax
  4045b3:	mov    eax,0xffffffff
  4045b8:	add    rsp,0x20
  4045bc:	pop    rbx
  4045bd:	ret    
  4045be:	xchg   ax,ax
  4045c0:	cmp    eax,0xc000001d
  4045c5:	je     0x404686
  4045cb:	cmp    eax,0xc000008c
  4045d0:	je     0x4045b3
  4045d2:	mov    rax,QWORD PTR [rip+0xb0e7]        # 0x40f6c0
  4045d9:	test   rax,rax
  4045dc:	je     0x4045b8
  4045de:	mov    rcx,rbx
  4045e1:	add    rsp,0x20
  4045e5:	pop    rbx
  4045e6:	rex.W jmp rax
  4045e9:	nop    DWORD PTR [rax+0x0]
  4045f0:	cmp    eax,0xc0000094
  4045f5:	je     0x404632
  4045f7:	ja     0x404670
  4045f9:	cmp    eax,0xc0000092
  4045fe:	je     0x4045b3
  404600:	cmp    eax,0xc0000093
  404605:	jne    0x4045d2
  404607:	xor    edx,edx
  404609:	mov    ecx,0x8
  40460e:	call   0x4091c8
  404613:	cmp    rax,0x1
  404617:	jne    0x404644
  404619:	mov    edx,0x1
  40461e:	mov    ecx,0x8
  404623:	call   0x4091c8
  404628:	call   0x403d90
  40462d:	jmp    0x4045b3
  404632:	xor    edx,edx
  404634:	mov    ecx,0x8
  404639:	call   0x4091c8
  40463e:	cmp    rax,0x1
  404642:	je     0x4046b2
  404644:	test   rax,rax
  404647:	je     0x4045d2
  404649:	mov    ecx,0x8
  40464e:	call   rax
  404650:	mov    eax,0xffffffff
  404655:	jmp    0x4045b8
  40465a:	nop    WORD PTR [rax+rax*1+0x0]
  404660:	test   BYTE PTR [rdx+0x4],0x1
  404664:	jne    0x404561
  40466a:	jmp    0x4045b3
  40466f:	nop
  404670:	cmp    eax,0xc0000095
  404675:	je     0x4045b3
  40467b:	cmp    eax,0xc0000096
  404680:	jne    0x4045d2
  404686:	xor    edx,edx
  404688:	mov    ecx,0x4
  40468d:	call   0x4091c8
  404692:	cmp    rax,0x1
  404696:	je     0x4046e4
  404698:	test   rax,rax
  40469b:	je     0x4045d2
  4046a1:	mov    ecx,0x4
  4046a6:	call   rax
  4046a8:	mov    eax,0xffffffff
  4046ad:	jmp    0x4045b8
  4046b2:	mov    edx,0x1
  4046b7:	mov    ecx,0x8
  4046bc:	call   0x4091c8
  4046c1:	jmp    0x4045b3
  4046c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4046d0:	mov    edx,0x1
  4046d5:	mov    ecx,0xb
  4046da:	call   0x4091c8
  4046df:	jmp    0x4045b3
  4046e4:	mov    edx,0x1
  4046e9:	mov    ecx,0x4
  4046ee:	call   0x4091c8
  4046f3:	jmp    0x4045b3
  4046f8:	nop
  4046f9:	nop
  4046fa:	nop
  4046fb:	nop
  4046fc:	nop
  4046fd:	nop
  4046fe:	nop
  4046ff:	nop
  404700:	push   rbp
  404701:	push   rdi
  404702:	push   rsi
  404703:	push   rbx
  404704:	sub    rsp,0x28
  404708:	lea    rcx,[rip+0xb291]        # 0x40f9a0
  40470f:	call   QWORD PTR [rip+0xcdfb]        # 0x411510
  404715:	mov    rbx,QWORD PTR [rip+0xb264]        # 0x40f980
  40471c:	test   rbx,rbx
  40471f:	je     0x404754
  404721:	mov    rbp,QWORD PTR [rip+0xce78]        # 0x4115a0
  404728:	mov    rdi,QWORD PTR [rip+0xce01]        # 0x411530
  40472f:	nop
  404730:	mov    ecx,DWORD PTR [rbx]
  404732:	call   rbp
  404734:	mov    rsi,rax
  404737:	call   rdi
  404739:	test   eax,eax
  40473b:	jne    0x40474b
  40473d:	test   rsi,rsi
  404740:	je     0x40474b
  404742:	mov    rax,QWORD PTR [rbx+0x8]
  404746:	mov    rcx,rsi
  404749:	call   rax
  40474b:	mov    rbx,QWORD PTR [rbx+0x10]
  40474f:	test   rbx,rbx
  404752:	jne    0x404730
  404754:	mov    rax,QWORD PTR [rip+0xcdfd]        # 0x411558
  40475b:	lea    rcx,[rip+0xb23e]        # 0x40f9a0
  404762:	add    rsp,0x28
  404766:	pop    rbx
  404767:	pop    rsi
  404768:	pop    rdi
  404769:	pop    rbp
  40476a:	rex.W jmp rax
  40476d:	nop    DWORD PTR [rax]
  404770:	push   rdi
  404771:	push   rsi
  404772:	push   rbx
  404773:	sub    rsp,0x20
  404777:	mov    eax,DWORD PTR [rip+0xb20b]        # 0x40f988
  40477d:	test   eax,eax
  40477f:	jne    0x404790
  404781:	add    rsp,0x20
  404785:	pop    rbx
  404786:	pop    rsi
  404787:	pop    rdi
  404788:	ret    
  404789:	nop    DWORD PTR [rax+0x0]
  404790:	mov    rsi,rdx
  404793:	mov    edi,ecx
  404795:	mov    edx,0x18
  40479a:	mov    ecx,0x1
  40479f:	call   0x409240
  4047a4:	test   rax,rax
  4047a7:	mov    rbx,rax
  4047aa:	je     0x4047e8
  4047ac:	mov    DWORD PTR [rax],edi
  4047ae:	mov    QWORD PTR [rax+0x8],rsi
  4047b2:	lea    rcx,[rip+0xb1e7]        # 0x40f9a0
  4047b9:	call   QWORD PTR [rip+0xcd51]        # 0x411510
  4047bf:	mov    rax,QWORD PTR [rip+0xb1ba]        # 0x40f980
  4047c6:	lea    rcx,[rip+0xb1d3]        # 0x40f9a0
  4047cd:	mov    QWORD PTR [rip+0xb1ac],rbx        # 0x40f980
  4047d4:	mov    QWORD PTR [rbx+0x10],rax
  4047d8:	call   QWORD PTR [rip+0xcd7a]        # 0x411558
  4047de:	xor    eax,eax
  4047e0:	add    rsp,0x20
  4047e4:	pop    rbx
  4047e5:	pop    rsi
  4047e6:	pop    rdi
  4047e7:	ret    
  4047e8:	mov    eax,0xffffffff
  4047ed:	jmp    0x404781
  4047ef:	nop
  4047f0:	push   rbx
  4047f1:	sub    rsp,0x20
  4047f5:	mov    eax,DWORD PTR [rip+0xb18d]        # 0x40f988
  4047fb:	test   eax,eax
  4047fd:	jne    0x404810
  4047ff:	xor    eax,eax
  404801:	add    rsp,0x20
  404805:	pop    rbx
  404806:	ret    
  404807:	nop    WORD PTR [rax+rax*1+0x0]
  404810:	mov    ebx,ecx
  404812:	lea    rcx,[rip+0xb187]        # 0x40f9a0
  404819:	call   QWORD PTR [rip+0xccf1]        # 0x411510
  40481f:	mov    rdx,QWORD PTR [rip+0xb15a]        # 0x40f980
  404826:	test   rdx,rdx
  404829:	je     0x404847
  40482b:	mov    eax,DWORD PTR [rdx]
  40482d:	cmp    eax,ebx
  40482f:	jne    0x40483e
  404831:	jmp    0x40487f
  404833:	mov    r8d,DWORD PTR [rax]
  404836:	cmp    r8d,ebx
  404839:	je     0x404860
  40483b:	mov    rdx,rax
  40483e:	mov    rax,QWORD PTR [rdx+0x10]
  404842:	test   rax,rax
  404845:	jne    0x404833
  404847:	lea    rcx,[rip+0xb152]        # 0x40f9a0
  40484e:	call   QWORD PTR [rip+0xcd04]        # 0x411558
  404854:	xor    eax,eax
  404856:	add    rsp,0x20
  40485a:	pop    rbx
  40485b:	ret    
  40485c:	nop    DWORD PTR [rax+0x0]
  404860:	mov    rcx,rax
  404863:	mov    rax,QWORD PTR [rax+0x10]
  404867:	mov    QWORD PTR [rdx+0x10],rax
  40486b:	call   0x409220
  404870:	lea    rcx,[rip+0xb129]        # 0x40f9a0
  404877:	call   QWORD PTR [rip+0xccdb]        # 0x411558
  40487d:	jmp    0x404854
  40487f:	mov    rax,QWORD PTR [rdx+0x10]
  404883:	mov    rcx,rdx
  404886:	mov    QWORD PTR [rip+0xb0f3],rax        # 0x40f980
  40488d:	jmp    0x40486b
  40488f:	nop
  404890:	push   rbx
  404891:	sub    rsp,0x20
  404895:	cmp    edx,0x1
  404898:	je     0x404930
  40489e:	jb     0x4048d0
  4048a0:	cmp    edx,0x2
  4048a3:	je     0x4048c0
  4048a5:	cmp    edx,0x3
  4048a8:	jne    0x4048c5
  4048aa:	mov    eax,DWORD PTR [rip+0xb0d8]        # 0x40f988
  4048b0:	test   eax,eax
  4048b2:	je     0x4048c5
  4048b4:	call   0x404700
  4048b9:	jmp    0x4048c5
  4048bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4048c0:	call   0x403d90
  4048c5:	mov    eax,0x1
  4048ca:	add    rsp,0x20
  4048ce:	pop    rbx
  4048cf:	ret    
  4048d0:	mov    eax,DWORD PTR [rip+0xb0b2]        # 0x40f988
  4048d6:	test   eax,eax
  4048d8:	jne    0x404960
  4048de:	mov    eax,DWORD PTR [rip+0xb0a4]        # 0x40f988
  4048e4:	cmp    eax,0x1
  4048e7:	jne    0x4048c5
  4048e9:	mov    rcx,QWORD PTR [rip+0xb090]        # 0x40f980
  4048f0:	test   rcx,rcx
  4048f3:	je     0x404906
  4048f5:	mov    rbx,QWORD PTR [rcx+0x10]
  4048f9:	call   0x409220
  4048fe:	test   rbx,rbx
  404901:	mov    rcx,rbx
  404904:	jne    0x4048f5
  404906:	lea    rcx,[rip+0xb093]        # 0x40f9a0
  40490d:	mov    QWORD PTR [rip+0xb068],0x0        # 0x40f980
  404918:	mov    DWORD PTR [rip+0xb066],0x0        # 0x40f988
  404922:	call   QWORD PTR [rip+0xcbe0]        # 0x411508
  404928:	jmp    0x4048c5
  40492a:	nop    WORD PTR [rax+rax*1+0x0]
  404930:	mov    eax,DWORD PTR [rip+0xb052]        # 0x40f988
  404936:	test   eax,eax
  404938:	je     0x404950
  40493a:	mov    eax,0x1
  40493f:	mov    DWORD PTR [rip+0xb03f],0x1        # 0x40f988
  404949:	add    rsp,0x20
  40494d:	pop    rbx
  40494e:	ret    
  40494f:	nop
  404950:	lea    rcx,[rip+0xb049]        # 0x40f9a0
  404957:	call   QWORD PTR [rip+0xcbf3]        # 0x411550
  40495d:	jmp    0x40493a
  40495f:	nop
  404960:	call   0x404700
  404965:	jmp    0x4048de
  40496a:	nop
  40496b:	nop
  40496c:	nop
  40496d:	nop
  40496e:	nop
  40496f:	nop
  404970:	movsxd rax,DWORD PTR [rcx+0x3c]
  404974:	add    rcx,rax
  404977:	xor    eax,eax
  404979:	cmp    DWORD PTR [rcx],0x4550
  40497f:	je     0x404983
  404981:	repz ret 
  404983:	xor    eax,eax
  404985:	cmp    WORD PTR [rcx+0x18],0x20b
  40498b:	sete   al
  40498e:	ret    
  40498f:	nop
  404990:	cmp    WORD PTR [rcx],0x5a4d
  404995:	je     0x4049a0
  404997:	xor    eax,eax
  404999:	ret    
  40499a:	nop    WORD PTR [rax+rax*1+0x0]
  4049a0:	jmp    0x404970
  4049a2:	nop    DWORD PTR [rax+0x0]
  4049a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4049b0:	movsxd rax,DWORD PTR [rcx+0x3c]
  4049b4:	add    rcx,rax
  4049b7:	movzx  eax,WORD PTR [rcx+0x14]
  4049bb:	lea    rax,[rcx+rax*1+0x18]
  4049c0:	movzx  ecx,WORD PTR [rcx+0x6]
  4049c4:	test   ecx,ecx
  4049c6:	je     0x4049f1
  4049c8:	sub    ecx,0x1
  4049cb:	lea    rcx,[rcx+rcx*4]
  4049cf:	lea    r9,[rax+rcx*8+0x28]
  4049d4:	mov    r8d,DWORD PTR [rax+0xc]
  4049d8:	cmp    r8,rdx
  4049db:	mov    rcx,r8
  4049de:	ja     0x4049e8
  4049e0:	add    ecx,DWORD PTR [rax+0x8]
  4049e3:	cmp    rdx,rcx
  4049e6:	jb     0x4049f3
  4049e8:	add    rax,0x28
  4049ec:	cmp    rax,r9
  4049ef:	jne    0x4049d4
  4049f1:	xor    eax,eax
  4049f3:	repz ret 
  4049f5:	nop
  4049f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404a00:	push   rdi
  404a01:	push   rsi
  404a02:	push   rbx
  404a03:	sub    rsp,0x20
  404a07:	mov    rsi,rcx
  404a0a:	call   0x4091b0
  404a0f:	cmp    rax,0x8
  404a13:	ja     0x404a30
  404a15:	mov    rbx,QWORD PTR [rip+0x7524]        # 0x40bf40
  404a1c:	xor    edi,edi
  404a1e:	cmp    WORD PTR [rbx],0x5a4d
  404a23:	je     0x404a40
  404a25:	mov    rax,rdi
  404a28:	add    rsp,0x20
  404a2c:	pop    rbx
  404a2d:	pop    rsi
  404a2e:	pop    rdi
  404a2f:	ret    
  404a30:	xor    edi,edi
  404a32:	mov    rax,rdi
  404a35:	add    rsp,0x20
  404a39:	pop    rbx
  404a3a:	pop    rsi
  404a3b:	pop    rdi
  404a3c:	ret    
  404a3d:	nop    DWORD PTR [rax]
  404a40:	mov    rcx,rbx
  404a43:	call   0x404970
  404a48:	test   eax,eax
  404a4a:	je     0x404a25
  404a4c:	movsxd rdx,DWORD PTR [rbx+0x3c]
  404a50:	add    rdx,rbx
  404a53:	movzx  eax,WORD PTR [rdx+0x14]
  404a57:	lea    rbx,[rdx+rax*1+0x18]
  404a5c:	movzx  eax,WORD PTR [rdx+0x6]
  404a60:	test   eax,eax
  404a62:	je     0x404a25
  404a64:	sub    eax,0x1
  404a67:	lea    rax,[rax+rax*4]
  404a6b:	lea    rdi,[rbx+rax*8+0x28]
  404a70:	jmp    0x404a7b
  404a72:	add    rbx,0x28
  404a76:	cmp    rbx,rdi
  404a79:	je     0x404a30
  404a7b:	mov    r8d,0x8
  404a81:	mov    rdx,rsi
  404a84:	mov    rcx,rbx
  404a87:	call   0x4091a8
  404a8c:	test   eax,eax
  404a8e:	jne    0x404a72
  404a90:	mov    rdi,rbx
  404a93:	mov    rax,rdi
  404a96:	add    rsp,0x20
  404a9a:	pop    rbx
  404a9b:	pop    rsi
  404a9c:	pop    rdi
  404a9d:	ret    
  404a9e:	xchg   ax,ax
  404aa0:	push   rsi
  404aa1:	push   rbx
  404aa2:	sub    rsp,0x28
  404aa6:	mov    rbx,QWORD PTR [rip+0x7493]        # 0x40bf40
  404aad:	cmp    WORD PTR [rbx],0x5a4d
  404ab2:	je     0x404ac0
  404ab4:	xor    eax,eax
  404ab6:	add    rsp,0x28
  404aba:	pop    rbx
  404abb:	pop    rsi
  404abc:	ret    
  404abd:	nop    DWORD PTR [rax]
  404ac0:	mov    rsi,rcx
  404ac3:	mov    rcx,rbx
  404ac6:	call   0x404970
  404acb:	test   eax,eax
  404acd:	je     0x404ab4
  404acf:	sub    rsi,rbx
  404ad2:	mov    rcx,rbx
  404ad5:	mov    rdx,rsi
  404ad8:	add    rsp,0x28
  404adc:	pop    rbx
  404add:	pop    rsi
  404ade:	jmp    0x4049b0
  404ae3:	nop    DWORD PTR [rax]
  404ae6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404af0:	push   rbx
  404af1:	sub    rsp,0x20
  404af5:	mov    rbx,QWORD PTR [rip+0x7444]        # 0x40bf40
  404afc:	xor    eax,eax
  404afe:	cmp    WORD PTR [rbx],0x5a4d
  404b03:	je     0x404b10
  404b05:	add    rsp,0x20
  404b09:	pop    rbx
  404b0a:	ret    
  404b0b:	nop    DWORD PTR [rax+rax*1+0x0]
  404b10:	mov    rcx,rbx
  404b13:	call   0x404970
  404b18:	test   eax,eax
  404b1a:	je     0x404b05
  404b1c:	movsxd rax,DWORD PTR [rbx+0x3c]
  404b20:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  404b25:	add    rsp,0x20
  404b29:	pop    rbx
  404b2a:	ret    
  404b2b:	nop    DWORD PTR [rax+rax*1+0x0]
  404b30:	push   rdi
  404b31:	push   rsi
  404b32:	push   rbx
  404b33:	sub    rsp,0x20
  404b37:	mov    rsi,QWORD PTR [rip+0x7402]        # 0x40bf40
  404b3e:	xor    edi,edi
  404b40:	mov    rbx,rcx
  404b43:	cmp    WORD PTR [rsi],0x5a4d
  404b48:	je     0x404b55
  404b4a:	mov    rax,rdi
  404b4d:	add    rsp,0x20
  404b51:	pop    rbx
  404b52:	pop    rsi
  404b53:	pop    rdi
  404b54:	ret    
  404b55:	mov    rcx,rsi
  404b58:	call   0x404970
  404b5d:	test   eax,eax
  404b5f:	je     0x404b4a
  404b61:	movsxd rax,DWORD PTR [rsi+0x3c]
  404b65:	add    rsi,rax
  404b68:	movzx  eax,WORD PTR [rsi+0x14]
  404b6c:	lea    rdx,[rsi+rax*1+0x18]
  404b71:	movzx  eax,WORD PTR [rsi+0x6]
  404b75:	test   eax,eax
  404b77:	je     0x404b4a
  404b79:	sub    eax,0x1
  404b7c:	lea    rax,[rax+rax*4]
  404b80:	lea    rax,[rdx+rax*8+0x28]
  404b85:	test   BYTE PTR [rdx+0x27],0x20
  404b89:	je     0x404b94
  404b8b:	test   rbx,rbx
  404b8e:	je     0x404bb0
  404b90:	sub    rbx,0x1
  404b94:	add    rdx,0x28
  404b98:	cmp    rdx,rax
  404b9b:	jne    0x404b85
  404b9d:	xor    edi,edi
  404b9f:	mov    rax,rdi
  404ba2:	add    rsp,0x20
  404ba6:	pop    rbx
  404ba7:	pop    rsi
  404ba8:	pop    rdi
  404ba9:	ret    
  404baa:	nop    WORD PTR [rax+rax*1+0x0]
  404bb0:	mov    rdi,rdx
  404bb3:	mov    rax,rdi
  404bb6:	add    rsp,0x20
  404bba:	pop    rbx
  404bbb:	pop    rsi
  404bbc:	pop    rdi
  404bbd:	ret    
  404bbe:	xchg   ax,ax
  404bc0:	push   rsi
  404bc1:	push   rbx
  404bc2:	sub    rsp,0x28
  404bc6:	mov    rsi,QWORD PTR [rip+0x7373]        # 0x40bf40
  404bcd:	xor    ebx,ebx
  404bcf:	cmp    WORD PTR [rsi],0x5a4d
  404bd4:	je     0x404be0
  404bd6:	mov    rax,rbx
  404bd9:	add    rsp,0x28
  404bdd:	pop    rbx
  404bde:	pop    rsi
  404bdf:	ret    
  404be0:	mov    rcx,rsi
  404be3:	call   0x404970
  404be8:	test   eax,eax
  404bea:	cmovne rbx,rsi
  404bee:	mov    rax,rbx
  404bf1:	add    rsp,0x28
  404bf5:	pop    rbx
  404bf6:	pop    rsi
  404bf7:	ret    
  404bf8:	nop    DWORD PTR [rax+rax*1+0x0]
  404c00:	push   rsi
  404c01:	push   rbx
  404c02:	sub    rsp,0x28
  404c06:	mov    rbx,QWORD PTR [rip+0x7333]        # 0x40bf40
  404c0d:	xor    eax,eax
  404c0f:	cmp    WORD PTR [rbx],0x5a4d
  404c14:	je     0x404c20
  404c16:	add    rsp,0x28
  404c1a:	pop    rbx
  404c1b:	pop    rsi
  404c1c:	ret    
  404c1d:	nop    DWORD PTR [rax]
  404c20:	mov    rsi,rcx
  404c23:	mov    rcx,rbx
  404c26:	call   0x404970
  404c2b:	test   eax,eax
  404c2d:	je     0x404c16
  404c2f:	sub    rsi,rbx
  404c32:	mov    rcx,rbx
  404c35:	mov    rdx,rsi
  404c38:	call   0x4049b0
  404c3d:	test   rax,rax
  404c40:	je     0x404c51
  404c42:	mov    eax,DWORD PTR [rax+0x24]
  404c45:	not    eax
  404c47:	shr    eax,0x1f
  404c4a:	add    rsp,0x28
  404c4e:	pop    rbx
  404c4f:	pop    rsi
  404c50:	ret    
  404c51:	xor    eax,eax
  404c53:	jmp    0x404c16
  404c55:	nop
  404c56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404c60:	push   rbp
  404c61:	push   rdi
  404c62:	push   rsi
  404c63:	push   rbx
  404c64:	sub    rsp,0x28
  404c68:	mov    rdi,QWORD PTR [rip+0x72d1]        # 0x40bf40
  404c6f:	xor    ebp,ebp
  404c71:	mov    esi,ecx
  404c73:	cmp    WORD PTR [rdi],0x5a4d
  404c78:	je     0x404c90
  404c7a:	mov    rax,rbp
  404c7d:	add    rsp,0x28
  404c81:	pop    rbx
  404c82:	pop    rsi
  404c83:	pop    rdi
  404c84:	pop    rbp
  404c85:	ret    
  404c86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404c90:	mov    rcx,rdi
  404c93:	call   0x404970
  404c98:	test   eax,eax
  404c9a:	je     0x404c7a
  404c9c:	movsxd rax,DWORD PTR [rdi+0x3c]
  404ca0:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  404ca7:	test   edx,edx
  404ca9:	je     0x404c7a
  404cab:	mov    ebx,edx
  404cad:	mov    rcx,rdi
  404cb0:	mov    rdx,rbx
  404cb3:	call   0x4049b0
  404cb8:	test   rax,rax
  404cbb:	je     0x404c7a
  404cbd:	add    rbx,rdi
  404cc0:	mov    rdx,rbx
  404cc3:	jne    0x404cd7
  404cc5:	jmp    0x404c7a
  404cc7:	nop    WORD PTR [rax+rax*1+0x0]
  404cd0:	sub    esi,0x1
  404cd3:	add    rdx,0x14
  404cd7:	mov    ecx,DWORD PTR [rdx+0x4]
  404cda:	test   ecx,ecx
  404cdc:	jne    0x404ce5
  404cde:	mov    eax,DWORD PTR [rdx+0xc]
  404ce1:	test   eax,eax
  404ce3:	je     0x404d00
  404ce5:	test   esi,esi
  404ce7:	jg     0x404cd0
  404ce9:	mov    ebp,DWORD PTR [rdx+0xc]
  404cec:	add    rbp,rdi
  404cef:	mov    rax,rbp
  404cf2:	add    rsp,0x28
  404cf6:	pop    rbx
  404cf7:	pop    rsi
  404cf8:	pop    rdi
  404cf9:	pop    rbp
  404cfa:	ret    
  404cfb:	nop    DWORD PTR [rax+rax*1+0x0]
  404d00:	xor    ebp,ebp
  404d02:	mov    rax,rbp
  404d05:	add    rsp,0x28
  404d09:	pop    rbx
  404d0a:	pop    rsi
  404d0b:	pop    rdi
  404d0c:	pop    rbp
  404d0d:	ret    
  404d0e:	nop
  404d0f:	nop
  404d10:	push   rcx
  404d11:	push   rax
  404d12:	cmp    rax,0x1000
  404d18:	lea    rcx,[rsp+0x18]
  404d1d:	jb     0x404d38
  404d1f:	sub    rcx,0x1000
  404d26:	or     QWORD PTR [rcx],0x0
  404d2a:	sub    rax,0x1000
  404d30:	cmp    rax,0x1000
  404d36:	ja     0x404d1f
  404d38:	sub    rcx,rax
  404d3b:	or     QWORD PTR [rcx],0x0
  404d3f:	pop    rax
  404d40:	pop    rcx
  404d41:	ret    
  404d42:	nop
  404d43:	nop
  404d44:	nop
  404d45:	nop
  404d46:	nop
  404d47:	nop
  404d48:	nop
  404d49:	nop
  404d4a:	nop
  404d4b:	nop
  404d4c:	nop
  404d4d:	nop
  404d4e:	nop
  404d4f:	nop
  404d50:	push   rbx
  404d51:	sub    rsp,0x60
  404d55:	lea    r8,[rip+0x52f4]        # 0x40a050
  404d5c:	lea    rax,[rsp+0x50]
  404d61:	lea    r9,[rsp+0x4c]
  404d66:	mov    QWORD PTR [rsp+0x20],rax
  404d6b:	call   0x405810
  404d70:	mov    edx,eax
  404d72:	and    edx,0x7
  404d75:	cmp    edx,0x6
  404d78:	ja     0x404da5
  404d7a:	lea    rcx,[rip+0x6d9f]        # 0x40bb20
  404d81:	movsxd rdx,DWORD PTR [rcx+rdx*4]
  404d85:	add    rcx,rdx
  404d88:	jmp    rcx
  404d8a:	nop    WORD PTR [rax+rax*1+0x0]
  404d90:	mov    ebx,DWORD PTR [rsp+0x54]
  404d94:	mov    edx,DWORD PTR [rsp+0x50]
  404d98:	or     ebx,0x7ff00000
  404d9e:	shl    rbx,0x20
  404da2:	or     rbx,rdx
  404da5:	test   al,0x8
  404da7:	je     0x404dbe
  404da9:	mov    rax,rbx
  404dac:	mov    ebx,ebx
  404dae:	shr    rax,0x20
  404db2:	or     eax,0x80000000
  404db7:	shl    rax,0x20
  404dbb:	or     rbx,rax
  404dbe:	mov    QWORD PTR [rsp+0x38],rbx
  404dc3:	movsd  xmm0,QWORD PTR [rsp+0x38]
  404dc9:	add    rsp,0x60
  404dcd:	pop    rbx
  404dce:	ret    
  404dcf:	nop
  404dd0:	movabs rbx,0x7ff8000000000000
  404dda:	jmp    0x404da5
  404ddc:	nop    DWORD PTR [rax+0x0]
  404de0:	xor    ebx,ebx
  404de2:	jmp    0x404da5
  404de4:	mov    ebx,DWORD PTR [rsp+0x4c]
  404de8:	mov    edx,DWORD PTR [rsp+0x54]
  404dec:	add    ebx,0x433
  404df2:	and    edx,0xffefffff
  404df8:	shl    ebx,0x14
  404dfb:	or     ebx,edx
  404dfd:	mov    edx,DWORD PTR [rsp+0x50]
  404e01:	shl    rbx,0x20
  404e05:	or     rbx,rdx
  404e08:	jmp    0x404da5
  404e0a:	nop    WORD PTR [rax+rax*1+0x0]
  404e10:	mov    ebx,DWORD PTR [rsp+0x54]
  404e14:	mov    edx,DWORD PTR [rsp+0x50]
  404e18:	shl    rbx,0x20
  404e1c:	or     rbx,rdx
  404e1f:	jmp    0x404da5
  404e21:	movabs rbx,0x7ff0000000000000
  404e2b:	jmp    0x404da5
  404e30:	push   r15
  404e32:	push   r14
  404e34:	push   r13
  404e36:	push   r12
  404e38:	push   rbp
  404e39:	push   rdi
  404e3a:	push   rsi
  404e3b:	push   rbx
  404e3c:	sub    rsp,0x28
  404e40:	test   rdx,rdx
  404e43:	mov    rsi,rcx
  404e46:	mov    r12,rdx
  404e49:	mov    edi,r8d
  404e4c:	je     0x404e52
  404e4e:	mov    QWORD PTR [r12],rcx
  404e52:	cmp    edi,0x24
  404e55:	ja     0x404f33
  404e5b:	cmp    edi,0x1
  404e5e:	jne    0x404e69
  404e60:	jmp    0x404f33
  404e65:	add    rsi,0x1
  404e69:	movsx  ecx,BYTE PTR [rsi]
  404e6c:	mov    ebx,ecx
  404e6e:	call   0x409208
  404e73:	test   eax,eax
  404e75:	jne    0x404e65
  404e77:	lea    edx,[rbx-0x2b]
  404e7a:	mov    rcx,rsi
  404e7d:	mov    eax,ebx
  404e7f:	and    edx,0xfd
  404e85:	jne    0x404e8f
  404e87:	movzx  eax,BYTE PTR [rcx+0x1]
  404e8b:	add    rsi,0x1
  404e8f:	test   edi,edi
  404e91:	jne    0x404fd1
  404e97:	cmp    al,0x30
  404e99:	mov    dil,0xa
  404e9c:	je     0x405022
  404ea2:	movsx  r15d,al
  404ea6:	lea    edx,[r15-0x30]
  404eaa:	cmp    edx,0x9
  404ead:	ja     0x404fa0
  404eb3:	movsx  ecx,al
  404eb6:	sub    ecx,0x30
  404eb9:	cmp    edi,ecx
  404ebb:	jle    0x405050
  404ec1:	mov    eax,ecx
  404ec3:	shr    eax,0x1f
  404ec6:	test   al,al
  404ec8:	jne    0x405050
  404ece:	lea    r14,[rsi+0x1]
  404ed2:	movsxd r15,ecx
  404ed5:	xor    r13d,r13d
  404ed8:	movsxd rsi,edi
  404edb:	nop    DWORD PTR [rax+rax*1+0x0]
  404ee0:	movsx  ebp,BYTE PTR [r14]
  404ee4:	lea    r9d,[rbp-0x30]
  404ee8:	cmp    r9d,0x9
  404eec:	mov    ecx,r9d
  404eef:	jbe    0x404f54
  404ef1:	mov    ecx,ebp
  404ef3:	call   0x409200
  404ef8:	test   eax,eax
  404efa:	lea    ecx,[rbp-0x37]
  404efd:	jne    0x404f54
  404eff:	mov    ecx,ebp
  404f01:	call   0x409210
  404f06:	test   eax,eax
  404f08:	jne    0x404f51
  404f0a:	test   r12,r12
  404f0d:	je     0x404f13
  404f0f:	mov    QWORD PTR [r12],r14
  404f13:	cmp    bl,0x2d
  404f16:	je     0x405000
  404f1c:	test   r15,r15
  404f1f:	js     0x405070
  404f25:	test   r13d,r13d
  404f28:	jne    0x405070
  404f2e:	mov    rax,r15
  404f31:	jmp    0x404f40
  404f33:	call   0x409278
  404f38:	mov    DWORD PTR [rax],0x21
  404f3e:	xor    eax,eax
  404f40:	add    rsp,0x28
  404f44:	pop    rbx
  404f45:	pop    rsi
  404f46:	pop    rdi
  404f47:	pop    rbp
  404f48:	pop    r12
  404f4a:	pop    r13
  404f4c:	pop    r14
  404f4e:	pop    r15
  404f50:	ret    
  404f51:	lea    ecx,[rbp-0x57]
  404f54:	cmp    edi,ecx
  404f56:	jle    0x404f0a
  404f58:	test   ecx,ecx
  404f5a:	js     0x404f0a
  404f5c:	movabs rax,0x7fffffffffffffff
  404f66:	cqo    
  404f68:	idiv   rsi
  404f6b:	add    rax,0x2
  404f6f:	cmp    r15,rax
  404f72:	ja     0x404f90
  404f74:	imul   r15,rsi
  404f78:	movsxd rcx,ecx
  404f7b:	add    r15,rcx
  404f7e:	add    r14,0x1
  404f82:	jmp    0x404ee0
  404f87:	nop    WORD PTR [rax+rax*1+0x0]
  404f90:	mov    r13d,0x1
  404f96:	jmp    0x404f7e
  404f98:	nop    DWORD PTR [rax+rax*1+0x0]
  404fa0:	mov    ecx,r15d
  404fa3:	call   0x409200
  404fa8:	test   eax,eax
  404faa:	lea    ecx,[r15-0x37]
  404fae:	jne    0x404eb9
  404fb4:	mov    ecx,r15d
  404fb7:	call   0x409210
  404fbc:	mov    edx,eax
  404fbe:	xor    eax,eax
  404fc0:	test   edx,edx
  404fc2:	je     0x404f40
  404fc8:	lea    ecx,[r15-0x57]
  404fcc:	jmp    0x404eb9
  404fd1:	cmp    edi,0x10
  404fd4:	jne    0x404ea2
  404fda:	cmp    al,0x30
  404fdc:	jne    0x404ea2
  404fe2:	movzx  eax,BYTE PTR [rsi+0x1]
  404fe6:	and    eax,0xffffffdf
  404fe9:	cmp    al,0x58
  404feb:	je     0x405035
  404fed:	mov    eax,0x30
  404ff2:	jmp    0x404eb3
  404ff7:	nop    WORD PTR [rax+rax*1+0x0]
  405000:	movabs rbx,0x8000000000000000
  40500a:	cmp    r15,rbx
  40500d:	jbe    0x405060
  40500f:	call   0x409278
  405014:	mov    DWORD PTR [rax],0x22
  40501a:	mov    rax,rbx
  40501d:	jmp    0x404f40
  405022:	movzx  edx,BYTE PTR [rsi+0x1]
  405026:	mov    dil,0x8
  405029:	and    edx,0xffffffdf
  40502c:	cmp    dl,0x58
  40502f:	jne    0x404ea2
  405035:	movzx  eax,BYTE PTR [rsi+0x2]
  405039:	mov    edi,0x10
  40503e:	add    rsi,0x2
  405042:	jmp    0x404ea2
  405047:	nop    WORD PTR [rax+rax*1+0x0]
  405050:	xor    eax,eax
  405052:	jmp    0x404f40
  405057:	nop    WORD PTR [rax+rax*1+0x0]
  405060:	test   r13d,r13d
  405063:	jne    0x40500f
  405065:	mov    rax,r15
  405068:	neg    rax
  40506b:	jmp    0x404f40
  405070:	call   0x409278
  405075:	mov    DWORD PTR [rax],0x22
  40507b:	movabs rax,0x7fffffffffffffff
  405085:	jmp    0x404f40
  40508a:	nop
  40508b:	nop
  40508c:	nop
  40508d:	nop
  40508e:	nop
  40508f:	nop
  405090:	push   r15
  405092:	push   r14
  405094:	push   r13
  405096:	push   r12
  405098:	push   rbp
  405099:	push   rdi
  40509a:	push   rsi
  40509b:	push   rbx
  40509c:	sub    rsp,0x28
  4050a0:	test   rdx,rdx
  4050a3:	mov    rsi,rcx
  4050a6:	mov    r12,rdx
  4050a9:	mov    edi,r8d
  4050ac:	je     0x4050b2
  4050ae:	mov    QWORD PTR [r12],rcx
  4050b2:	cmp    edi,0x24
  4050b5:	ja     0x405193
  4050bb:	cmp    edi,0x1
  4050be:	jne    0x4050c9
  4050c0:	jmp    0x405193
  4050c5:	add    rsi,0x1
  4050c9:	movsx  ecx,BYTE PTR [rsi]
  4050cc:	mov    ebx,ecx
  4050ce:	call   0x409208
  4050d3:	test   eax,eax
  4050d5:	jne    0x4050c5
  4050d7:	lea    edx,[rbx-0x2b]
  4050da:	mov    rcx,rsi
  4050dd:	mov    eax,ebx
  4050df:	and    edx,0xfd
  4050e5:	jne    0x4050ef
  4050e7:	movzx  eax,BYTE PTR [rcx+0x1]
  4050eb:	add    rsi,0x1
  4050ef:	test   edi,edi
  4050f1:	jne    0x405225
  4050f7:	cmp    al,0x30
  4050f9:	mov    dil,0xa
  4050fc:	je     0x405280
  405102:	movsx  r15d,al
  405106:	lea    edx,[r15-0x30]
  40510a:	cmp    edx,0x9
  40510d:	ja     0x405200
  405113:	movsx  r15d,al
  405117:	sub    r15d,0x30
  40511b:	cmp    edi,r15d
  40511e:	jle    0x4052a5
  405124:	mov    eax,r15d
  405127:	shr    eax,0x1f
  40512a:	test   al,al
  40512c:	jne    0x4052a5
  405132:	lea    r14,[rsi+0x1]
  405136:	movsxd r15,r15d
  405139:	xor    r13d,r13d
  40513c:	movsxd rsi,edi
  40513f:	nop
  405140:	movsx  ebp,BYTE PTR [r14]
  405144:	lea    r9d,[rbp-0x30]
  405148:	cmp    r9d,0x9
  40514c:	mov    ecx,r9d
  40514f:	jbe    0x4051b4
  405151:	mov    ecx,ebp
  405153:	call   0x409200
  405158:	test   eax,eax
  40515a:	lea    ecx,[rbp-0x37]
  40515d:	jne    0x4051b4
  40515f:	mov    ecx,ebp
  405161:	call   0x409210
  405166:	test   eax,eax
  405168:	jne    0x4051b1
  40516a:	test   r12,r12
  40516d:	je     0x405173
  40516f:	mov    QWORD PTR [r12],r14
  405173:	test   r13d,r13d
  405176:	jne    0x405250
  40517c:	xor    edx,edx
  40517e:	cmp    bl,0x2d
  405181:	sete   dl
  405184:	mov    rax,rdx
  405187:	neg    rax
  40518a:	xor    r15,rax
  40518d:	lea    rax,[r15+rdx*1]
  405191:	jmp    0x4051a0
  405193:	call   0x409278
  405198:	mov    DWORD PTR [rax],0x21
  40519e:	xor    eax,eax
  4051a0:	add    rsp,0x28
  4051a4:	pop    rbx
  4051a5:	pop    rsi
  4051a6:	pop    rdi
  4051a7:	pop    rbp
  4051a8:	pop    r12
  4051aa:	pop    r13
  4051ac:	pop    r14
  4051ae:	pop    r15
  4051b0:	ret    
  4051b1:	lea    ecx,[rbp-0x57]
  4051b4:	cmp    edi,ecx
  4051b6:	jle    0x40516a
  4051b8:	test   ecx,ecx
  4051ba:	js     0x40516a
  4051bc:	xor    edx,edx
  4051be:	mov    rax,0xffffffffffffffff
  4051c5:	div    rsi
  4051c8:	add    rax,0x1
  4051cc:	cmp    r15,rax
  4051cf:	ja     0x4051f0
  4051d1:	mov    rax,r15
  4051d4:	movsxd rcx,ecx
  4051d7:	imul   rax,rsi
  4051db:	add    rcx,rax
  4051de:	cmp    r15,rcx
  4051e1:	ja     0x4051f0
  4051e3:	mov    r15,rcx
  4051e6:	add    r14,0x1
  4051ea:	jmp    0x405140
  4051ef:	nop
  4051f0:	mov    r13d,0x1
  4051f6:	jmp    0x4051e6
  4051f8:	nop    DWORD PTR [rax+rax*1+0x0]
  405200:	mov    ecx,r15d
  405203:	call   0x409200
  405208:	test   eax,eax
  40520a:	jne    0x405270
  40520c:	mov    ecx,r15d
  40520f:	call   0x409210
  405214:	mov    edx,eax
  405216:	xor    eax,eax
  405218:	test   edx,edx
  40521a:	je     0x4051a0
  40521c:	sub    r15d,0x57
  405220:	jmp    0x40511b
  405225:	cmp    edi,0x10
  405228:	jne    0x405102
  40522e:	cmp    al,0x30
  405230:	jne    0x405102
  405236:	movzx  eax,BYTE PTR [rsi+0x1]
  40523a:	and    eax,0xffffffdf
  40523d:	cmp    al,0x58
  40523f:	je     0x405293
  405241:	mov    eax,0x30
  405246:	jmp    0x405113
  40524b:	nop    DWORD PTR [rax+rax*1+0x0]
  405250:	call   0x409278
  405255:	mov    DWORD PTR [rax],0x22
  40525b:	mov    rax,0xffffffffffffffff
  405262:	jmp    0x4051a0
  405267:	nop    WORD PTR [rax+rax*1+0x0]
  405270:	sub    r15d,0x37
  405274:	jmp    0x40511b
  405279:	nop    DWORD PTR [rax+0x0]
  405280:	movzx  edx,BYTE PTR [rsi+0x1]
  405284:	mov    dil,0x8
  405287:	and    edx,0xffffffdf
  40528a:	cmp    dl,0x58
  40528d:	jne    0x405102
  405293:	movzx  eax,BYTE PTR [rsi+0x2]
  405297:	mov    edi,0x10
  40529c:	add    rsi,0x2
  4052a0:	jmp    0x405102
  4052a5:	xor    eax,eax
  4052a7:	jmp    0x4051a0
  4052ac:	nop
  4052ad:	nop
  4052ae:	nop
  4052af:	nop
  4052b0:	push   rsi
  4052b1:	push   rbx
  4052b2:	sub    rsp,0x28
  4052b6:	movsxd rax,DWORD PTR [rcx+0x14]
  4052ba:	lea    rdx,[rcx+0x18]
  4052be:	mov    rbx,rcx
  4052c1:	lea    r9,[rdx+rax*4]
  4052c5:	mov    rcx,rax
  4052c8:	jmp    0x4052e0
  4052ca:	nop    WORD PTR [rax+rax*1+0x0]
  4052d0:	add    rdx,0x4
  4052d4:	mov    DWORD PTR [rdx-0x4],0x0
  4052db:	cmp    r9,rdx
  4052de:	jbe    0x405300
  4052e0:	mov    r8d,DWORD PTR [rdx]
  4052e3:	cmp    r8d,0xffffffff
  4052e7:	je     0x4052d0
  4052e9:	add    r8d,0x1
  4052ed:	mov    rax,rbx
  4052f0:	mov    DWORD PTR [rdx],r8d
  4052f3:	add    rsp,0x28
  4052f7:	pop    rbx
  4052f8:	pop    rsi
  4052f9:	ret    
  4052fa:	nop    WORD PTR [rax+rax*1+0x0]
  405300:	cmp    ecx,DWORD PTR [rbx+0xc]
  405303:	jge    0x405320
  405305:	add    ecx,0x1
  405308:	mov    DWORD PTR [rbx+0x14],ecx
  40530b:	mov    DWORD PTR [rbx+rax*4+0x18],0x1
  405313:	mov    rax,rbx
  405316:	add    rsp,0x28
  40531a:	pop    rbx
  40531b:	pop    rsi
  40531c:	ret    
  40531d:	nop    DWORD PTR [rax]
  405320:	mov    eax,DWORD PTR [rbx+0x8]
  405323:	lea    ecx,[rax+0x1]
  405326:	call   0x408440
  40532b:	mov    rsi,rax
  40532e:	lea    rcx,[rax+0x10]
  405332:	movsxd rax,DWORD PTR [rbx+0x14]
  405336:	lea    rdx,[rbx+0x10]
  40533a:	lea    r8,[rax*4+0x8]
  405342:	call   0x4091e8
  405347:	mov    rcx,rbx
  40534a:	mov    rbx,rsi
  40534d:	call   0x408550
  405352:	movsxd rax,DWORD PTR [rsi+0x14]
  405356:	mov    rcx,rax
  405359:	jmp    0x405305
  40535b:	nop    DWORD PTR [rax+rax*1+0x0]
  405360:	push   r15
  405362:	push   r14
  405364:	push   r13
  405366:	push   r12
  405368:	push   rbp
  405369:	push   rdi
  40536a:	push   rsi
  40536b:	push   rbx
  40536c:	sub    rsp,0x48
  405370:	mov    rdi,rdx
  405373:	mov    r12,r8
  405376:	lea    rdx,[rsp+0x3c]
  40537b:	lea    r8,[rsp+0x38]
  405380:	movsd  xmm0,QWORD PTR [rcx]
  405384:	mov    r13,r9
  405387:	call   0x408d20
  40538c:	mov    r10d,DWORD PTR [rsp+0x38]
  405391:	mov    esi,DWORD PTR [rdi]
  405393:	mov    rbx,rax
  405396:	mov    edx,DWORD PTR [rsp+0x3c]
  40539a:	sub    r10d,esi
  40539d:	add    edx,r10d
  4053a0:	test   r10d,r10d
  4053a3:	mov    DWORD PTR [rsp+0x38],r10d
  4053a8:	mov    DWORD PTR [rsp+0x3c],edx
  4053ac:	jle    0x405570
  4053b2:	cmp    esi,0x35
  4053b5:	je     0x4055a0
  4053bb:	cmp    DWORD PTR [rsp+0xb8],0x1
  4053c3:	je     0x405474
  4053c9:	cmp    DWORD PTR [rsp+0xb8],0x2
  4053d1:	je     0x405400
  4053d3:	mov    eax,r10d
  4053d6:	sub    eax,0x1
  4053d9:	jne    0x405670
  4053df:	mov    ecx,DWORD PTR [rsp+0xb0]
  4053e6:	xor    r15d,r15d
  4053e9:	test   ecx,ecx
  4053eb:	je     0x4054f7
  4053f1:	test   BYTE PTR [rbx+0x18],0x2
  4053f5:	je     0x4055be
  4053fb:	nop    DWORD PTR [rax+rax*1+0x0]
  405400:	mov    edx,r10d
  405403:	mov    rcx,rbx
  405406:	call   0x4090e0
  40540b:	mov    edx,DWORD PTR [rsp+0x38]
  40540f:	mov    rcx,rbx
  405412:	mov    r14d,eax
  405415:	call   0x407d90
  40541a:	mov    rcx,rbx
  40541d:	call   0x4052b0
  405422:	mov    edx,esi
  405424:	mov    rbx,rax
  405427:	and    edx,0x1f
  40542a:	jne    0x405660
  405430:	mov    eax,DWORD PTR [rbx+0x14]
  405433:	sub    eax,0x1
  405436:	cdqe   
  405438:	bsr    eax,DWORD PTR [rbx+rax*4+0x18]
  40543d:	xor    eax,0x1f
  405440:	cmp    edx,eax
  405442:	je     0x4056f0
  405448:	test   r14d,r14d
  40544b:	jne    0x405455
  40544d:	mov    r14d,DWORD PTR [rbx+0x18]
  405451:	and    r14d,0x1
  405455:	mov    edx,0x1
  40545a:	mov    rcx,rbx
  40545d:	mov    ebp,0x20
  405462:	call   0x407d90
  405467:	mov    eax,DWORD PTR [rsp+0x3c]
  40546b:	lea    edx,[rax+0x1]
  40546e:	mov    DWORD PTR [rsp+0x3c],edx
  405472:	jmp    0x40549f
  405474:	mov    edx,r10d
  405477:	mov    rcx,rax
  40547a:	call   0x4090e0
  40547f:	test   eax,eax
  405481:	mov    r14d,eax
  405484:	jne    0x405513
  40548a:	mov    edx,DWORD PTR [rsp+0x38]
  40548e:	mov    rcx,rbx
  405491:	xor    r14d,r14d
  405494:	xor    ebp,ebp
  405496:	call   0x407d90
  40549b:	mov    edx,DWORD PTR [rsp+0x3c]
  40549f:	mov    eax,DWORD PTR [rdi+0x4]
  4054a2:	cmp    eax,edx
  4054a4:	jle    0x405530
  4054aa:	mov    r8d,eax
  4054ad:	mov    DWORD PTR [rsp+0x3c],eax
  4054b1:	sub    r8d,edx
  4054b4:	cmp    esi,r8d
  4054b7:	jge    0x4055f0
  4054bd:	mov    rdi,QWORD PTR [rsp+0xc0]
  4054c5:	mov    DWORD PTR [rbx+0x14],0x0
  4054cc:	mov    edx,eax
  4054ce:	xor    ebp,ebp
  4054d0:	mov    DWORD PTR [rdi],0x50
  4054d6:	mov    DWORD PTR [r12],edx
  4054da:	mov    r8,rbx
  4054dd:	mov    edx,esi
  4054df:	mov    rcx,r13
  4054e2:	mov    r15d,0x1
  4054e8:	call   0x409070
  4054ed:	mov    rax,QWORD PTR [rsp+0xc0]
  4054f5:	or     DWORD PTR [rax],ebp
  4054f7:	mov    rcx,rbx
  4054fa:	call   0x408550
  4054ff:	mov    eax,r15d
  405502:	add    rsp,0x48
  405506:	pop    rbx
  405507:	pop    rsi
  405508:	pop    rdi
  405509:	pop    rbp
  40550a:	pop    r12
  40550c:	pop    r13
  40550e:	pop    r14
  405510:	pop    r15
  405512:	ret    
  405513:	mov    edx,DWORD PTR [rsp+0x38]
  405517:	mov    rcx,rbx
  40551a:	mov    ebp,0x10
  40551f:	call   0x407d90
  405524:	jmp    0x40549b
  405529:	nop    DWORD PTR [rax+0x0]
  405530:	mov    eax,DWORD PTR [rdi+0x8]
  405533:	cmp    eax,edx
  405535:	jge    0x4054d6
  405537:	add    eax,0x1
  40553a:	xor    ebp,ebp
  40553c:	mov    DWORD PTR [rsp+0x3c],eax
  405540:	mov    rax,QWORD PTR [rsp+0xc0]
  405548:	mov    DWORD PTR [rax],0xa3
  40554e:	call   0x409278
  405553:	mov    DWORD PTR [rax],0x22
  405559:	mov    DWORD PTR [rbx+0x14],0x0
  405560:	mov    edx,DWORD PTR [rsp+0x3c]
  405564:	jmp    0x4054d6
  405569:	nop    DWORD PTR [rax+0x0]
  405570:	mov    r9d,DWORD PTR [rsp+0xb0]
  405578:	xor    r15d,r15d
  40557b:	test   r9d,r9d
  40557e:	je     0x4054f7
  405584:	test   r10d,r10d
  405587:	jne    0x4056d0
  40558d:	xor    r14d,r14d
  405590:	xor    ebp,ebp
  405592:	jmp    0x40549f
  405597:	nop    WORD PTR [rax+rax*1+0x0]
  4055a0:	mov    r8d,DWORD PTR [rsp+0xb0]
  4055a8:	xor    r15d,r15d
  4055ab:	test   r8d,r8d
  4055ae:	je     0x4054f7
  4055b4:	cmp    DWORD PTR [rdi+0xc],0x1
  4055b8:	jne    0x4054f7
  4055be:	mov    edx,r10d
  4055c1:	mov    rcx,rbx
  4055c4:	call   0x4090e0
  4055c9:	test   eax,eax
  4055cb:	mov    r14d,eax
  4055ce:	je     0x40548a
  4055d4:	mov    edx,DWORD PTR [rsp+0x38]
  4055d8:	mov    rcx,rbx
  4055db:	mov    ebp,0x10
  4055e0:	call   0x407d90
  4055e5:	mov    edx,DWORD PTR [rsp+0x3c]
  4055e9:	jmp    0x40549f
  4055ee:	xchg   ax,ax
  4055f0:	mov    edx,DWORD PTR [rdi+0x10]
  4055f3:	test   edx,edx
  4055f5:	jne    0x4054bd
  4055fb:	lea    edi,[r8-0x1]
  4055ff:	test   r14d,r14d
  405602:	sete   al
  405605:	test   edi,edi
  405607:	jle    0x4056ac
  40560d:	test   al,al
  40560f:	jne    0x405690
  405611:	mov    ecx,edi
  405613:	sar    edi,0x5
  405616:	mov    eax,0x1
  40561b:	movsxd rdi,edi
  40561e:	shl    eax,cl
  405620:	mov    edx,r8d
  405623:	and    eax,DWORD PTR [rbx+rdi*4+0x18]
  405627:	mov    rcx,rbx
  40562a:	mov    edi,eax
  40562c:	call   0x407d90
  405631:	mov    rax,QWORD PTR [rsp+0xc0]
  405639:	test   edi,edi
  40563b:	mov    DWORD PTR [rax],0x2
  405641:	jne    0x405700
  405647:	test   r14d,r14d
  40564a:	mov    edx,DWORD PTR [rsp+0x3c]
  40564e:	je     0x4054d6
  405654:	mov    ebp,0x50
  405659:	jmp    0x4054d6
  40565e:	xchg   ax,ax
  405660:	mov    eax,0x20
  405665:	sub    eax,edx
  405667:	mov    edx,eax
  405669:	jmp    0x405430
  40566e:	xchg   ax,ax
  405670:	mov    edx,eax
  405672:	sar    edx,0x5
  405675:	movsxd rdx,edx
  405678:	mov    edx,DWORD PTR [rbx+rdx*4+0x18]
  40567c:	bt     edx,eax
  40567f:	jb     0x405400
  405685:	jmp    0x4055be
  40568a:	nop    WORD PTR [rax+rax*1+0x0]
  405690:	mov    edx,edi
  405692:	mov    rcx,rbx
  405695:	mov    DWORD PTR [rsp+0x2c],r8d
  40569a:	call   0x4090e0
  40569f:	mov    r8d,DWORD PTR [rsp+0x2c]
  4056a4:	test   eax,eax
  4056a6:	mov    r14d,eax
  4056a9:	sete   al
  4056ac:	test   al,al
  4056ae:	je     0x405611
  4056b4:	mov    eax,DWORD PTR [rsp+0xb0]
  4056bb:	xor    r15d,r15d
  4056be:	test   eax,eax
  4056c0:	je     0x4054f7
  4056c6:	jmp    0x405611
  4056cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4056d0:	mov    edx,r10d
  4056d3:	mov    rcx,rbx
  4056d6:	neg    edx
  4056d8:	call   0x408950
  4056dd:	mov    edx,DWORD PTR [rsp+0x3c]
  4056e1:	mov    rbx,rax
  4056e4:	jmp    0x40558d
  4056e9:	nop    DWORD PTR [rax+0x0]
  4056f0:	mov    edx,DWORD PTR [rsp+0x3c]
  4056f4:	mov    ebp,0x20
  4056f9:	jmp    0x40549f
  4056fe:	xchg   ax,ax
  405700:	mov    rcx,rbx
  405703:	mov    ebp,0x60
  405708:	call   0x4052b0
  40570d:	mov    edx,DWORD PTR [rsp+0x3c]
  405711:	mov    rbx,rax
  405714:	jmp    0x4054d6
  405719:	nop    DWORD PTR [rax+0x0]
  405720:	movsxd rdx,DWORD PTR [rcx+0x14]
  405724:	lea    rax,[rcx+0x18]
  405728:	lea    rcx,[rax+rdx*4]
  40572c:	jmp    0x405740
  40572e:	xchg   ax,ax
  405730:	add    rax,0x4
  405734:	mov    DWORD PTR [rax-0x4],0xffffffff
  40573b:	cmp    rcx,rax
  40573e:	jbe    0x405750
  405740:	mov    edx,DWORD PTR [rax]
  405742:	test   edx,edx
  405744:	je     0x405730
  405746:	sub    edx,0x1
  405749:	mov    DWORD PTR [rax],edx
  40574b:	ret    
  40574c:	nop    DWORD PTR [rax+0x0]
  405750:	repz ret 
  405752:	nop    DWORD PTR [rax+0x0]
  405756:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405760:	push   rbx
  405761:	sub    rsp,0x30
  405765:	lea    ebx,[rdx+0x1f]
  405768:	mov    rax,rcx
  40576b:	sar    ebx,0x5
  40576e:	cmp    ebx,DWORD PTR [rcx+0x8]
  405771:	jg     0x4057f0
  405773:	mov    r9d,edx
  405776:	sar    r9d,0x5
  40577a:	and    edx,0x1f
  40577d:	je     0x4057d0
  40577f:	add    r9d,0x1
  405783:	lea    r8,[rax+0x18]
  405787:	mov    DWORD PTR [rax+0x14],r9d
  40578b:	movsxd r9,r9d
  40578e:	lea    r9,[r8+r9*4]
  405792:	cmp    r8,r9
  405795:	jae    0x4057b5
  405797:	nop    WORD PTR [rax+rax*1+0x0]
  4057a0:	add    r8,0x4
  4057a4:	mov    DWORD PTR [r8-0x4],0xffffffff
  4057ac:	cmp    r8,r9
  4057af:	jb     0x4057a0
  4057b1:	test   edx,edx
  4057b3:	je     0x4057c0
  4057b5:	mov    ecx,0x20
  4057ba:	sub    ecx,edx
  4057bc:	shr    DWORD PTR [r8-0x4],cl
  4057c0:	add    rsp,0x30
  4057c4:	pop    rbx
  4057c5:	ret    
  4057c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4057d0:	lea    r8,[rax+0x18]
  4057d4:	mov    DWORD PTR [rax+0x14],r9d
  4057d8:	movsxd r9,r9d
  4057db:	lea    r9,[r8+r9*4]
  4057df:	cmp    r8,r9
  4057e2:	jb     0x4057a0
  4057e4:	jmp    0x4057c0
  4057e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4057f0:	mov    DWORD PTR [rsp+0x2c],edx
  4057f4:	call   0x408550
  4057f9:	mov    ecx,ebx
  4057fb:	call   0x408440
  405800:	mov    edx,DWORD PTR [rsp+0x2c]
  405804:	jmp    0x405773
  405809:	nop    DWORD PTR [rax+0x0]
  405810:	push   r15
  405812:	push   r14
  405814:	push   r13
  405816:	push   r12
  405818:	push   rbp
  405819:	push   rdi
  40581a:	push   rsi
  40581b:	push   rbx
  40581c:	sub    rsp,0x138
  405823:	movaps XMMWORD PTR [rsp+0xd0],xmm6
  40582b:	movaps XMMWORD PTR [rsp+0xe0],xmm7
  405833:	movaps XMMWORD PTR [rsp+0xf0],xmm8
  40583c:	movaps XMMWORD PTR [rsp+0x100],xmm9
  405845:	movaps XMMWORD PTR [rsp+0x110],xmm10
  40584e:	movaps XMMWORD PTR [rsp+0x120],xmm11
  405857:	mov    rdi,rcx
  40585a:	mov    QWORD PTR [rsp+0x190],r8
  405862:	mov    QWORD PTR [rsp+0x188],rdx
  40586a:	mov    QWORD PTR [rsp+0x198],r9
  405872:	call   0x4091f8
  405877:	mov    rbp,QWORD PTR [rax]
  40587a:	mov    rcx,rbp
  40587d:	call   0x4091b0
  405882:	mov    r14,rax
  405885:	mov    rax,QWORD PTR [rsp+0x190]
  40588d:	mov    DWORD PTR [rsp+0xa4],0x0
  405898:	mov    QWORD PTR [rsp+0xb0],0x0
  4058a4:	mov    QWORD PTR [rsp+0xc8],0x0
  4058b0:	lea    rcx,[rip+0x6295]        # 0x40bb4c
  4058b7:	mov    QWORD PTR [rsp+0xc0],rdi
  4058bf:	mov    eax,DWORD PTR [rax]
  4058c1:	mov    DWORD PTR [rsp+0x40],eax
  4058c5:	mov    rax,rdi
  4058c8:	movzx  r8d,BYTE PTR [rax]
  4058cc:	cmp    r8b,0x2d
  4058d0:	ja     0x405a80
  4058d6:	movzx  edx,r8b
  4058da:	movsxd rdx,DWORD PTR [rcx+rdx*4]
  4058de:	add    rdx,rcx
  4058e1:	jmp    rdx
  4058e3:	mov    DWORD PTR [rsp+0xa4],0x6
  4058ee:	mov    QWORD PTR [rsp+0xc0],rdi
  4058f6:	xor    r8d,r8d
  4058f9:	mov    DWORD PTR [rsp+0x58],0x0
  405901:	cmp    QWORD PTR [rsp+0x188],0x0
  40590a:	je     0x40591f
  40590c:	mov    rax,QWORD PTR [rsp+0xc0]
  405914:	mov    rsi,QWORD PTR [rsp+0x188]
  40591c:	mov    QWORD PTR [rsi],rax
  40591f:	mov    eax,DWORD PTR [rsp+0x58]
  405923:	test   eax,eax
  405925:	jne    0x4059a0
  405927:	test   r8,r8
  40592a:	je     0x40594a
  40592c:	mov    rcx,QWORD PTR [rsp+0x1a0]
  405934:	mov    edx,DWORD PTR [rsp+0x40]
  405938:	call   0x409070
  40593d:	mov    rcx,QWORD PTR [rsp+0xc8]
  405945:	call   0x408550
  40594a:	mov    eax,DWORD PTR [rsp+0xa4]
  405951:	movaps xmm6,XMMWORD PTR [rsp+0xd0]
  405959:	movaps xmm7,XMMWORD PTR [rsp+0xe0]
  405961:	movaps xmm8,XMMWORD PTR [rsp+0xf0]
  40596a:	movaps xmm9,XMMWORD PTR [rsp+0x100]
  405973:	movaps xmm10,XMMWORD PTR [rsp+0x110]
  40597c:	movaps xmm11,XMMWORD PTR [rsp+0x120]
  405985:	add    rsp,0x138
  40598c:	pop    rbx
  40598d:	pop    rsi
  40598e:	pop    rdi
  40598f:	pop    rbp
  405990:	pop    r12
  405992:	pop    r13
  405994:	pop    r14
  405996:	pop    r15
  405998:	ret    
  405999:	nop    DWORD PTR [rax+0x0]
  4059a0:	or     DWORD PTR [rsp+0xa4],0x8
  4059a8:	jmp    0x405927
  4059ad:	nop    DWORD PTR [rax]
  4059b0:	mov    rdx,rax
  4059b3:	mov    DWORD PTR [rsp+0x58],0x0
  4059bb:	add    rax,0x1
  4059bf:	mov    QWORD PTR [rsp+0xc0],rax
  4059c7:	movzx  r8d,BYTE PTR [rdx+0x1]
  4059cc:	test   r8b,r8b
  4059cf:	je     0x4058e3
  4059d5:	xor    r12d,r12d
  4059d8:	cmp    r8b,0x30
  4059dc:	mov    r15,rax
  4059df:	je     0x405a98
  4059e5:	mov    rax,QWORD PTR [rsp+0x190]
  4059ed:	mov    eax,DWORD PTR [rax+0x10]
  4059f0:	mov    DWORD PTR [rsp+0x84],eax
  4059f7:	movsx  eax,r8b
  4059fb:	lea    edx,[rax-0x30]
  4059fe:	cmp    edx,0x9
  405a01:	ja     0x405af3
  405a07:	lea    rcx,[r15+0x1]
  405a0b:	xor    edx,edx
  405a0d:	xor    esi,esi
  405a0f:	xor    ebx,ebx
  405a11:	jmp    0x405a45
  405a13:	lea    eax,[rsi+rsi*4]
  405a16:	movsx  r8d,r8b
  405a1a:	lea    esi,[r8+rax*2-0x30]
  405a1f:	mov    QWORD PTR [rsp+0xc0],rcx
  405a27:	movsx  eax,BYTE PTR [rcx]
  405a2a:	add    ebx,0x1
  405a2d:	mov    r9,rcx
  405a30:	lea    rcx,[rcx+0x1]
  405a34:	lea    r10d,[rax-0x30]
  405a38:	mov    r8d,eax
  405a3b:	cmp    r10d,0x9
  405a3f:	ja     0x405b00
  405a45:	cmp    ebx,0x8
  405a48:	jle    0x405a13
  405a4a:	cmp    ebx,0xf
  405a4d:	jg     0x405a1f
  405a4f:	lea    eax,[rdx+rdx*4]
  405a52:	movsx  r8d,r8b
  405a56:	lea    edx,[r8+rax*2-0x30]
  405a5b:	jmp    0x405a1f
  405a5d:	nop    DWORD PTR [rax]
  405a60:	add    rax,0x1
  405a64:	mov    QWORD PTR [rsp+0xc0],rax
  405a6c:	movzx  r8d,BYTE PTR [rax]
  405a70:	cmp    r8b,0x2d
  405a74:	jbe    0x4058d6
  405a7a:	nop    WORD PTR [rax+rax*1+0x0]
  405a80:	xor    r12d,r12d
  405a83:	cmp    r8b,0x30
  405a87:	mov    DWORD PTR [rsp+0x58],0x0
  405a8f:	mov    r15,rax
  405a92:	jne    0x4059e5
  405a98:	movzx  edx,BYTE PTR [rax+0x1]
  405a9c:	cmp    dl,0x58
  405a9f:	je     0x406c5f
  405aa5:	add    rax,0x1
  405aa9:	cmp    dl,0x78
  405aac:	je     0x406c5f
  405ab2:	mov    r15,rax
  405ab5:	mov    QWORD PTR [rsp+0xc0],rax
  405abd:	add    rax,0x1
  405ac1:	movzx  edx,BYTE PTR [rax-0x1]
  405ac5:	cmp    dl,0x30
  405ac8:	je     0x405ab2
  405aca:	xor    r8d,r8d
  405acd:	test   dl,dl
  405acf:	je     0x405901
  405ad5:	mov    r8d,edx
  405ad8:	mov    r12d,0x1
  405ade:	jmp    0x4059e5
  405ae3:	mov    rdx,rax
  405ae6:	mov    DWORD PTR [rsp+0x58],0x1
  405aee:	jmp    0x4059bb
  405af3:	mov    r9,r15
  405af6:	xor    edx,edx
  405af8:	xor    esi,esi
  405afa:	xor    ebx,ebx
  405afc:	nop    DWORD PTR [rax+0x0]
  405b00:	movsx  ecx,BYTE PTR [rbp+0x0]
  405b04:	cmp    ecx,eax
  405b06:	je     0x405f04
  405b0c:	mov    ebp,ebx
  405b0e:	xor    ecx,ecx
  405b10:	xor    r13d,r13d
  405b13:	xor    r11d,r11d
  405b16:	mov    r8d,eax
  405b19:	and    r8d,0xffffffdf
  405b1d:	cmp    r8d,0x45
  405b21:	je     0x405c20
  405b27:	xor    r8d,r8d
  405b2a:	test   ebp,ebp
  405b2c:	jne    0x405d95
  405b32:	or     ecx,r12d
  405b35:	jne    0x405d88
  405b3b:	test   r11d,r11d
  405b3e:	jne    0x405d53
  405b44:	cmp    eax,0x4e
  405b47:	je     0x405b61
  405b49:	jle    0x405d4a
  405b4f:	cmp    eax,0x69
  405b52:	je     0x406eea
  405b58:	cmp    eax,0x6e
  405b5b:	jne    0x405d53
  405b61:	lea    rbx,[rsp+0xc0]
  405b69:	lea    rdx,[rip+0x5fd9]        # 0x40bb49
  405b70:	mov    rcx,rbx
  405b73:	call   0x409020
  405b78:	test   eax,eax
  405b7a:	je     0x405d53
  405b80:	mov    rax,QWORD PTR [rsp+0x190]
  405b88:	mov    rsi,QWORD PTR [rsp+0x198]
  405b90:	xor    ebp,ebp
  405b92:	mov    rdx,QWORD PTR [rsp+0xc0]
  405b9a:	mov    DWORD PTR [rsp+0xa4],0x4
  405ba5:	mov    eax,DWORD PTR [rax+0x8]
  405ba8:	mov    DWORD PTR [rsp+0x44],eax
  405bac:	add    eax,0x1
  405baf:	mov    DWORD PTR [rsi],eax
  405bb1:	cmp    BYTE PTR [rdx],0x28
  405bb4:	je     0x4072c6
  405bba:	nop    WORD PTR [rax+rax*1+0x0]
  405bc0:	mov    rsi,QWORD PTR [rsp+0x198]
  405bc8:	mov    DWORD PTR [rsi],eax
  405bca:	mov    r8,QWORD PTR [rsp+0xc8]
  405bd2:	test   ebp,ebp
  405bd4:	je     0x405901
  405bda:	mov    r9d,DWORD PTR [rsp+0x84]
  405be2:	test   r9d,r9d
  405be5:	jne    0x406314
  405beb:	mov    eax,DWORD PTR [rsp+0xa4]
  405bf2:	mov    ecx,DWORD PTR [r8+0x14]
  405bf6:	xor    edx,edx
  405bf8:	and    eax,0xfffffff8
  405bfb:	test   ecx,ecx
  405bfd:	setg   dl
  405c00:	add    edx,edx
  405c02:	or     eax,edx
  405c04:	test   al,0x30
  405c06:	jne    0x405d73
  405c0c:	mov    DWORD PTR [rsp+0xa4],eax
  405c13:	jmp    0x405901
  405c18:	nop    DWORD PTR [rax+rax*1+0x0]
  405c20:	mov    eax,ebp
  405c22:	or     eax,ecx
  405c24:	or     eax,r12d
  405c27:	je     0x405d53
  405c2d:	mov    rdi,QWORD PTR [rsp+0xc0]
  405c35:	lea    rax,[rdi+0x1]
  405c39:	mov    QWORD PTR [rsp+0xc0],rax
  405c41:	movsx  eax,BYTE PTR [rdi+0x1]
  405c45:	cmp    al,0x2b
  405c47:	je     0x406e08
  405c4d:	cmp    al,0x2d
  405c4f:	je     0x406211
  405c55:	mov    DWORD PTR [rsp+0x44],0x0
  405c5d:	lea    r8d,[rax-0x30]
  405c61:	cmp    r8d,0x9
  405c65:	ja     0x406340
  405c6b:	cmp    eax,0x30
  405c6e:	jne    0x405c95
  405c70:	mov    rax,QWORD PTR [rsp+0xc0]
  405c78:	lea    r8,[rax+0x1]
  405c7c:	nop    DWORD PTR [rax+0x0]
  405c80:	mov    QWORD PTR [rsp+0xc0],r8
  405c88:	movsx  eax,BYTE PTR [r8]
  405c8c:	add    r8,0x1
  405c90:	cmp    eax,0x30
  405c93:	je     0x405c80
  405c95:	lea    r9d,[rax-0x31]
  405c99:	xor    r8d,r8d
  405c9c:	cmp    r9d,0x8
  405ca0:	ja     0x405b2a
  405ca6:	lea    r9d,[rax-0x30]
  405caa:	mov    rax,QWORD PTR [rsp+0xc0]
  405cb2:	lea    r10,[rax+0x1]
  405cb6:	mov    QWORD PTR [rsp+0x50],rax
  405cbb:	mov    QWORD PTR [rsp+0xc0],r10
  405cc3:	mov    QWORD PTR [rsp+0x48],r10
  405cc8:	mov    r10,rax
  405ccb:	movsx  eax,BYTE PTR [rax+0x1]
  405ccf:	lea    r8d,[rax-0x30]
  405cd3:	cmp    r8d,0x9
  405cd7:	ja     0x405d13
  405cd9:	lea    r8,[r10+0x2]
  405cdd:	mov    DWORD PTR [rsp+0x5c],r11d
  405ce2:	lea    r9d,[r9+r9*4]
  405ce6:	mov    QWORD PTR [rsp+0xc0],r8
  405cee:	mov    r11,r8
  405cf1:	add    r8,0x1
  405cf5:	lea    r9d,[rax+r9*2-0x30]
  405cfa:	movsx  eax,BYTE PTR [r8-0x1]
  405cff:	lea    r10d,[rax-0x30]
  405d03:	cmp    r10d,0x9
  405d07:	jbe    0x405ce2
  405d09:	mov    QWORD PTR [rsp+0x48],r11
  405d0e:	mov    r11d,DWORD PTR [rsp+0x5c]
  405d13:	mov    r8,QWORD PTR [rsp+0x48]
  405d18:	sub    r8,QWORD PTR [rsp+0x50]
  405d1d:	cmp    r8,0x8
  405d21:	jg     0x406edf
  405d27:	cmp    r9d,0x4e1f
  405d2e:	jg     0x406edf
  405d34:	mov    r10d,DWORD PTR [rsp+0x44]
  405d39:	mov    r8d,r10d
  405d3c:	neg    r8d
  405d3f:	xor    r8d,r9d
  405d42:	add    r8d,r10d
  405d45:	jmp    0x405b2a
  405d4a:	cmp    eax,0x49
  405d4d:	je     0x406eea
  405d53:	mov    DWORD PTR [rsp+0xa4],0x6
  405d5e:	mov    QWORD PTR [rsp+0xc0],rdi
  405d66:	mov    r8,QWORD PTR [rsp+0xc8]
  405d6e:	jmp    0x405901
  405d73:	or     eax,0x40
  405d76:	mov    DWORD PTR [rsp+0xa4],eax
  405d7d:	call   0x409278
  405d82:	mov    DWORD PTR [rax],0x22
  405d88:	mov    r8,QWORD PTR [rsp+0xc8]
  405d90:	jmp    0x405901
  405d95:	mov    rax,QWORD PTR [rsp+0x190]
  405d9d:	mov    ecx,DWORD PTR [rsp+0x58]
  405da1:	sub    r8d,r13d
  405da4:	mov    DWORD PTR [rsp+0xa4],0x1
  405daf:	mov    DWORD PTR [rsp+0x68],r8d
  405db4:	mov    eax,DWORD PTR [rax+0xc]
  405db7:	mov    DWORD PTR [rsp+0x44],eax
  405dbb:	and    eax,0x3
  405dbe:	mov    edi,eax
  405dc0:	sub    edi,ecx
  405dc2:	cmp    eax,0x2
  405dc5:	mov    DWORD PTR [rsp+0x6c],edi
  405dc9:	je     0x405de3
  405dcb:	lea    edi,[rcx+0x1]
  405dce:	cmp    eax,0x3
  405dd1:	mov    DWORD PTR [rsp+0x6c],edi
  405dd5:	je     0x405de3
  405dd7:	test   eax,eax
  405dd9:	sete   al
  405ddc:	movzx  eax,al
  405ddf:	mov    DWORD PTR [rsp+0x6c],eax
  405de3:	pxor   xmm0,xmm0
  405de7:	mov    eax,esi
  405de9:	test   ebx,ebx
  405deb:	cmove  ebx,ebp
  405dee:	mov    edi,0x10
  405df3:	cmp    ebp,0x10
  405df6:	cmovle edi,ebp
  405df9:	cvtsi2sd xmm0,rax
  405dfe:	cmp    edi,0x9
  405e01:	movsd  QWORD PTR [rsp+0xb0],xmm0
  405e0a:	jle    0x405e33
  405e0c:	pxor   xmm1,xmm1
  405e10:	lea    eax,[rdi-0x9]
  405e13:	mov    rcx,QWORD PTR [rip+0x61c6]        # 0x40bfe0
  405e1a:	cdqe   
  405e1c:	cvtsi2sd xmm1,rdx
  405e21:	mulsd  xmm0,QWORD PTR [rcx+rax*8]
  405e26:	addsd  xmm0,xmm1
  405e2a:	movsd  QWORD PTR [rsp+0xb0],xmm0
  405e33:	cmp    ebp,0xf
  405e36:	jg     0x405fa5
  405e3c:	cmp    DWORD PTR [rsp+0x40],0x35
  405e41:	jg     0x405fa5
  405e47:	cmp    DWORD PTR [rsp+0x68],0x0
  405e4c:	je     0x406e30
  405e52:	jle    0x4062b9
  405e58:	cmp    DWORD PTR [rsp+0x68],0x16
  405e5d:	jg     0x406e5a
  405e63:	movsxd rcx,DWORD PTR [rsp+0x68]
  405e68:	mov    edx,DWORD PTR [rsp+0xb0]
  405e6f:	lea    rax,[rip+0x5dca]        # 0x40bc40
  405e76:	test   edx,edx
  405e78:	mov    r8d,DWORD PTR [rax+rcx*4]
  405e7c:	je     0x406f4e
  405e82:	tzcnt  edx,edx
  405e86:	mov    eax,0x35
  405e8b:	sub    eax,edx
  405e8d:	mov    rdx,QWORD PTR [rip+0x614c]        # 0x40bfe0
  405e94:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  405e9d:	add    eax,r8d
  405ea0:	cmp    eax,0x35
  405ea3:	mulsd  xmm0,QWORD PTR [rdx+rcx*8]
  405ea8:	lea    rdx,[rsp+0xa4]
  405eb0:	setle  al
  405eb3:	movzx  eax,al
  405eb6:	lea    rcx,[rsp+0xb0]
  405ebe:	mov    QWORD PTR [rsp+0x30],rdx
  405ec3:	mov    edx,DWORD PTR [rsp+0x6c]
  405ec7:	mov    DWORD PTR [rsp+0x20],eax
  405ecb:	mov    DWORD PTR [rsp+0x28],edx
  405ecf:	movsd  QWORD PTR [rsp+0xb0],xmm0
  405ed8:	mov    r9,QWORD PTR [rsp+0x1a0]
  405ee0:	mov    r8,QWORD PTR [rsp+0x198]
  405ee8:	mov    rdx,QWORD PTR [rsp+0x190]
  405ef0:	call   0x405360
  405ef5:	test   eax,eax
  405ef7:	jne    0x405d88
  405efd:	xor    eax,eax
  405eff:	jmp    0x405fa9
  405f04:	movzx  r8d,BYTE PTR [rbp+0x1]
  405f09:	test   r8b,r8b
  405f0c:	je     0x40718d
  405f12:	cmp    r8b,BYTE PTR [r9+0x1]
  405f16:	jne    0x405b0c
  405f1c:	mov    eax,0x2
  405f21:	jmp    0x405f32
  405f23:	add    rax,0x1
  405f27:	cmp    r8b,BYTE PTR [r9+rax*1-0x1]
  405f2c:	jne    0x406130
  405f32:	movzx  r8d,BYTE PTR [rbp+rax*1+0x0]
  405f38:	test   r8b,r8b
  405f3b:	jne    0x405f23
  405f3d:	lea    r8,[r9+rax*1]
  405f41:	test   ebx,ebx
  405f43:	mov    QWORD PTR [rsp+0xc0],r8
  405f4b:	movsx  eax,BYTE PTR [r8]
  405f4f:	je     0x40622e
  405f55:	lea    r8d,[rax-0x30]
  405f59:	xor    ecx,ecx
  405f5b:	xor    r13d,r13d
  405f5e:	mov    ebp,ebx
  405f60:	cmp    r8d,0x9
  405f64:	ja     0x405f9a
  405f66:	test   r8d,r8d
  405f69:	lea    eax,[rcx+0x1]
  405f6c:	mov    r9d,r8d
  405f6f:	jne    0x40710d
  405f75:	mov    r8,QWORD PTR [rsp+0xc0]
  405f7d:	mov    ecx,eax
  405f7f:	lea    rax,[r8+0x1]
  405f83:	mov    QWORD PTR [rsp+0xc0],rax
  405f8b:	movsx  eax,BYTE PTR [r8+0x1]
  405f90:	lea    r8d,[rax-0x30]
  405f94:	cmp    r8d,0x9
  405f98:	jbe    0x405f66
  405f9a:	mov    r11d,0x1
  405fa0:	jmp    0x405b16
  405fa5:	mov    eax,DWORD PTR [rsp+0x68]
  405fa9:	mov    edx,ebp
  405fab:	sub    edx,edi
  405fad:	add    edx,eax
  405faf:	cmp    edx,0x0
  405fb2:	jle    0x406cea
  405fb8:	mov    eax,edx
  405fba:	and    eax,0xf
  405fbd:	je     0x405fdf
  405fbf:	mov    rcx,QWORD PTR [rip+0x601a]        # 0x40bfe0
  405fc6:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  405fcf:	cdqe   
  405fd1:	mulsd  xmm0,QWORD PTR [rcx+rax*8]
  405fd6:	movsd  QWORD PTR [rsp+0xb0],xmm0
  405fdf:	and    edx,0xfffffff0
  405fe2:	jne    0x406141
  405fe8:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  405ff1:	xor    edi,edi
  405ff3:	lea    rdx,[rsp+0xac]
  405ffb:	lea    r8,[rsp+0xa8]
  406003:	call   0x408d20
  406008:	mov    edx,DWORD PTR [rsp+0xa8]
  40600f:	mov    r13d,DWORD PTR [rsp+0x40]
  406014:	add    edi,DWORD PTR [rsp+0xac]
  40601b:	mov    QWORD PTR [rsp+0xc8],rax
  406023:	mov    r12d,edx
  406026:	sub    r12d,r13d
  406029:	test   r12d,r12d
  40602c:	mov    DWORD PTR [rsp+0xac],edi
  406033:	jle    0x40605c
  406035:	mov    edx,r12d
  406038:	mov    rcx,rax
  40603b:	call   0x407d90
  406040:	mov    edi,DWORD PTR [rsp+0xac]
  406047:	mov    DWORD PTR [rsp+0xa8],r13d
  40604f:	mov    edx,r13d
  406052:	add    edi,r12d
  406055:	mov    DWORD PTR [rsp+0xac],edi
  40605c:	lea    eax,[rdi+rdx*1]
  40605f:	sub    eax,DWORD PTR [rsp+0x40]
  406063:	mov    ecx,eax
  406065:	mov    DWORD PTR [rsp+0x8c],eax
  40606c:	mov    rax,QWORD PTR [rsp+0x190]
  406074:	mov    eax,DWORD PTR [rax+0x8]
  406077:	mov    DWORD PTR [rsp+0x44],eax
  40607b:	add    eax,0x1
  40607e:	cmp    ecx,eax
  406080:	jg     0x406c25
  406086:	mov    rax,QWORD PTR [rsp+0x190]
  40608e:	mov    eax,DWORD PTR [rax+0x4]
  406091:	cmp    ecx,eax
  406093:	mov    DWORD PTR [rsp+0x50],eax
  406097:	jge    0x406e23
  40609d:	sub    edi,eax
  40609f:	cmp    edi,0x0
  4060a2:	jle    0x40628c
  4060a8:	mov    rcx,QWORD PTR [rsp+0xc8]
  4060b0:	mov    edx,edi
  4060b2:	call   0x408950
  4060b7:	add    DWORD PTR [rsp+0xa8],edi
  4060be:	mov    QWORD PTR [rsp+0xc8],rax
  4060c6:	mov    eax,DWORD PTR [rsp+0x50]
  4060ca:	mov    DWORD PTR [rsp+0xac],eax
  4060d1:	mov    eax,DWORD PTR [rsp+0x84]
  4060d8:	test   eax,eax
  4060da:	je     0x406350
  4060e0:	mov    eax,DWORD PTR [rsp+0x8c]
  4060e7:	add    eax,0x1
  4060ea:	cmp    DWORD PTR [rsp+0x50],eax
  4060ee:	jle    0x406350
  4060f4:	mov    r8,QWORD PTR [rsp+0xc8]
  4060fc:	mov    rax,QWORD PTR [rsp+0x198]
  406104:	mov    esi,DWORD PTR [rsp+0x50]
  406108:	mov    DWORD PTR [rsp+0xa4],0x50
  406113:	mov    DWORD PTR [r8+0x14],0x0
  40611b:	mov    DWORD PTR [r8+0x18],0x0
  406123:	mov    DWORD PTR [rax],esi
  406125:	jmp    0x405bda
  40612a:	nop    WORD PTR [rax+rax*1+0x0]
  406130:	mov    eax,ecx
  406132:	mov    ebp,ebx
  406134:	xor    ecx,ecx
  406136:	xor    r13d,r13d
  406139:	xor    r11d,r11d
  40613c:	jmp    0x405b16
  406141:	sar    edx,0x4
  406144:	cmp    edx,0xf
  406147:	jle    0x407213
  40614d:	mov    rax,QWORD PTR [rip+0x5dbc]        # 0x40bf10
  406154:	mov    ecx,edx
  406156:	xor    r8d,r8d
  406159:	movsd  xmm1,QWORD PTR [rax+0x20]
  40615e:	xchg   ax,ax
  406160:	mov    eax,DWORD PTR [rsp+0xb4]
  406167:	sub    ecx,0x10
  40616a:	mov    r9d,eax
  40616d:	and    eax,0x800fffff
  406172:	or     eax,0x3ff00000
  406177:	and    r9d,0x7ff00000
  40617e:	mov    DWORD PTR [rsp+0xb4],eax
  406185:	shr    r9d,0x14
  406189:	cmp    ecx,0xf
  40618c:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  406195:	lea    r8d,[r8+r9*1-0x3ff]
  40619d:	mulsd  xmm0,xmm1
  4061a1:	movsd  QWORD PTR [rsp+0xb0],xmm0
  4061aa:	jg     0x406160
  4061ac:	and    edx,0xf
  4061af:	mov    eax,DWORD PTR [rsp+0xb4]
  4061b6:	mov    ecx,eax
  4061b8:	and    eax,0x800fffff
  4061bd:	or     eax,0x3ff00000
  4061c2:	and    ecx,0x7ff00000
  4061c8:	shr    ecx,0x14
  4061cb:	mov    DWORD PTR [rsp+0xb4],eax
  4061d2:	test   edx,edx
  4061d4:	lea    edi,[r8+rcx*1-0x3ff]
  4061dc:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  4061e5:	mov    rax,QWORD PTR [rip+0x5d24]        # 0x40bf10
  4061ec:	je     0x405ff3
  4061f2:	test   dl,0x1
  4061f5:	je     0x4061fb
  4061f7:	mulsd  xmm0,QWORD PTR [rax]
  4061fb:	add    rax,0x8
  4061ff:	sar    edx,1
  406201:	jne    0x4061f2
  406203:	movsd  QWORD PTR [rsp+0xb0],xmm0
  40620c:	jmp    0x405ff3
  406211:	mov    DWORD PTR [rsp+0x44],0x1
  406219:	lea    rax,[rdi+0x2]
  40621d:	mov    QWORD PTR [rsp+0xc0],rax
  406225:	movsx  eax,BYTE PTR [rdi+0x2]
  406229:	jmp    0x405c5d
  40622e:	cmp    eax,0x30
  406231:	jne    0x407275
  406237:	add    r8,0x1
  40623b:	xor    ecx,ecx
  40623d:	nop    DWORD PTR [rax]
  406240:	mov    QWORD PTR [rsp+0xc0],r8
  406248:	movsx  eax,BYTE PTR [r8]
  40624c:	add    ecx,0x1
  40624f:	add    r8,0x1
  406253:	cmp    eax,0x30
  406256:	je     0x406240
  406258:	lea    r8d,[rax-0x31]
  40625c:	cmp    r8d,0x8
  406260:	ja     0x406ed5
  406266:	mov    r15,QWORD PTR [rsp+0xc0]
  40626e:	lea    r9d,[rax-0x30]
  406272:	lea    r13d,[rcx+0x1]
  406276:	mov    ebp,0x1
  40627b:	mov    r8,r15
  40627e:	lea    eax,[rsi+rsi*4]
  406281:	xor    ecx,ecx
  406283:	lea    esi,[r9+rax*2]
  406287:	jmp    0x405f7f
  40628c:	je     0x4060c6
  406292:	add    edx,edi
  406294:	test   edx,edx
  406296:	mov    DWORD PTR [rsp+0xa8],edx
  40629d:	jle    0x407236
  4062a3:	mov    rcx,QWORD PTR [rsp+0xc8]
  4062ab:	neg    edi
  4062ad:	mov    edx,edi
  4062af:	call   0x407d90
  4062b4:	jmp    0x4060c6
  4062b9:	mov    edx,DWORD PTR [rsp+0x68]
  4062bd:	cmp    edx,0xffffffea
  4062c0:	mov    eax,edx
  4062c2:	jl     0x405fa9
  4062c8:	mov    rdx,QWORD PTR [rip+0x5d11]        # 0x40bfe0
  4062cf:	neg    eax
  4062d1:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  4062da:	cdqe   
  4062dc:	divsd  xmm0,QWORD PTR [rdx+rax*8]
  4062e1:	lea    rax,[rsp+0xa4]
  4062e9:	movsd  QWORD PTR [rsp+0xb0],xmm0
  4062f2:	lea    rcx,[rsp+0xb0]
  4062fa:	mov    DWORD PTR [rsp+0x20],0x0
  406302:	mov    QWORD PTR [rsp+0x30],rax
  406307:	mov    eax,DWORD PTR [rsp+0x6c]
  40630b:	mov    DWORD PTR [rsp+0x28],eax
  40630f:	jmp    0x405ed8
  406314:	mov    DWORD PTR [r8+0x14],0x0
  40631c:	mov    DWORD PTR [rsp+0xa4],0x50
  406327:	call   0x409278
  40632c:	mov    r8,QWORD PTR [rsp+0xc8]
  406334:	mov    DWORD PTR [rax],0x22
  40633a:	jmp    0x405901
  40633f:	nop
  406340:	mov    QWORD PTR [rsp+0xc0],rdi
  406348:	xor    r8d,r8d
  40634b:	jmp    0x405b2a
  406350:	mov    eax,DWORD PTR [rsp+0x50]
  406354:	mov    DWORD PTR [rsp+0x44],0x1
  40635c:	mov    DWORD PTR [rsp+0x8c],eax
  406363:	mov    r8d,ebp
  406366:	mov    edx,ebx
  406368:	mov    DWORD PTR [rsp+0x20],r14d
  40636d:	mov    r9d,esi
  406370:	mov    rcx,r15
  406373:	call   0x408e60
  406378:	mov    QWORD PTR [rsp+0x70],rax
  40637d:	add    rax,0x10
  406381:	mov    QWORD PTR [rsp+0x78],rax
  406386:	mov    eax,DWORD PTR [rsp+0x40]
  40638a:	movsd  xmm8,QWORD PTR [rip+0x590d]        # 0x40bca0
  406393:	movsd  xmm9,QWORD PTR [rip+0x5914]        # 0x40bcb0
  40639c:	add    eax,0x1
  40639f:	movapd xmm11,xmm8
  4063a4:	mov    DWORD PTR [rsp+0x80],eax
  4063ab:	mov    eax,DWORD PTR [rsp+0x68]
  4063af:	movsd  xmm10,QWORD PTR [rip+0x5918]        # 0x40bcd0
  4063b8:	mov    edx,eax
  4063ba:	neg    edx
  4063bc:	test   eax,eax
  4063be:	mov    eax,0x0
  4063c3:	cmovs  eax,edx
  4063c6:	xor    ebp,ebp
  4063c8:	mov    DWORD PTR [rsp+0x5c],eax
  4063cc:	jmp    0x406610
  4063d1:	mov    rcx,rsi
  4063d4:	call   0x408950
  4063d9:	mov    rsi,rax
  4063dc:	test   r15d,r15d
  4063df:	je     0x4063ef
  4063e1:	mov    rcx,rdi
  4063e4:	mov    edx,r15d
  4063e7:	call   0x4087e0
  4063ec:	mov    rdi,rax
  4063ef:	test   r12d,r12d
  4063f2:	jle    0x406402
  4063f4:	mov    rcx,rdi
  4063f7:	mov    edx,r12d
  4063fa:	call   0x408950
  4063ff:	mov    rdi,rax
  406402:	test   r14d,r14d
  406405:	jle    0x406415
  406407:	mov    rcx,r13
  40640a:	mov    edx,r14d
  40640d:	call   0x408950
  406412:	mov    r13,rax
  406415:	mov    rdx,rdi
  406418:	mov    rcx,rsi
  40641b:	call   0x408ac0
  406420:	cmp    DWORD PTR [rax+0x14],0x1
  406424:	mov    rbx,rax
  406427:	jle    0x4067c0
  40642d:	mov    ebp,DWORD PTR [rbx+0x10]
  406430:	mov    rdx,r13
  406433:	mov    DWORD PTR [rbx+0x10],0x0
  40643a:	mov    rcx,rbx
  40643d:	call   0x408a70
  406442:	test   eax,eax
  406444:	jg     0x406750
  40644a:	mov    ecx,DWORD PTR [rsp+0x6c]
  40644e:	test   ecx,ecx
  406450:	je     0x406750
  406456:	mov    eax,ecx
  406458:	and    eax,0x1
  40645b:	xor    eax,ebp
  40645d:	mov    DWORD PTR [rsp+0x60],eax
  406461:	je     0x406f6b
  406467:	test   ebp,ebp
  406469:	je     0x4069c1
  40646f:	movsd  xmm6,QWORD PTR [rip+0x5829]        # 0x40bca0
  406477:	mov    DWORD PTR [rsp+0xa4],0x21
  406482:	xor    r12d,r12d
  406485:	mov    DWORD PTR [rsp+0x88],0x20
  406490:	xor    r14d,r14d
  406493:	movapd xmm7,xmm6
  406497:	mov    eax,DWORD PTR [rsp+0xa8]
  40649e:	mov    edx,DWORD PTR [rsp+0xac]
  4064a5:	mov    r8d,DWORD PTR [rsp+0x44]
  4064aa:	add    edx,eax
  4064ac:	test   r8d,r8d
  4064af:	mov    DWORD PTR [rsp+0x48],edx
  4064b3:	jne    0x4064bf
  4064b5:	cmp    DWORD PTR [rsp+0x40],eax
  4064b9:	jg     0x406b75
  4064bf:	lea    rdx,[rsp+0x9c]
  4064c7:	lea    r8,[rsp+0xa0]
  4064cf:	movapd xmm0,xmm6
  4064d3:	call   0x408d20
  4064d8:	mov    edx,DWORD PTR [rsp+0x9c]
  4064df:	mov    r15,rax
  4064e2:	test   edx,edx
  4064e4:	js     0x406bb0
  4064ea:	je     0x4064f7
  4064ec:	mov    rcx,rax
  4064ef:	call   0x408950
  4064f4:	mov    r15,rax
  4064f7:	mov    rbp,QWORD PTR [rsp+0xc8]
  4064ff:	test   r14d,r14d
  406502:	mov    rdx,r15
  406505:	mov    rcx,rbp
  406508:	je     0x4068f0
  40650e:	call   0x408ac0
  406513:	mov    ecx,DWORD PTR [rsp+0x44]
  406517:	mov    QWORD PTR [rsp+0xc8],rax
  40651f:	mov    edx,DWORD PTR [rbp+0x14]
  406522:	test   ecx,ecx
  406524:	jne    0x406a90
  40652a:	sub    edx,0x1
  40652d:	cmp    edx,DWORD PTR [rax+0x14]
  406530:	jge    0x40654d
  406532:	movsxd rdx,edx
  406535:	add    rdx,0x4
  406539:	bsr    ecx,DWORD PTR [rax+rdx*4+0x8]
  40653e:	bsr    edx,DWORD PTR [rbp+rdx*4+0x8]
  406543:	xor    ecx,0x1f
  406546:	xor    edx,0x1f
  406549:	cmp    ecx,edx
  40654b:	jle    0x406570
  40654d:	mov    ecx,DWORD PTR [rsp+0x50]
  406551:	cmp    DWORD PTR [rsp+0x8c],ecx
  406558:	jne    0x406970
  40655e:	sub    DWORD PTR [rsp+0xa8],0x1
  406566:	mov    DWORD PTR [rsp+0x44],0x1
  40656e:	xchg   ax,ax
  406570:	mov    rcx,r15
  406573:	call   0x408550
  406578:	mov    rcx,rbp
  40657b:	call   0x408550
  406580:	mov    r14d,DWORD PTR [rsp+0x60]
  406585:	test   r14d,r14d
  406588:	jne    0x4067d0
  40658e:	test   r12d,r12d
  406591:	je     0x4065d8
  406593:	mov    eax,DWORD PTR [rsp+0xa8]
  40659a:	add    eax,DWORD PTR [rsp+0xac]
  4065a1:	cmp    DWORD PTR [rsp+0x48],eax
  4065a5:	jne    0x4065d8
  4065a7:	mulsd  xmm6,QWORD PTR [rip+0x5719]        # 0x40bcc8
  4065af:	movapd xmm0,xmm7
  4065b3:	subsd  xmm0,QWORD PTR [rip+0x56fd]        # 0x40bcb8
  4065bb:	movapd xmm1,xmm6
  4065bf:	xorpd  xmm1,xmm10
  4065c4:	ucomisd xmm1,xmm0
  4065c8:	jbe    0x406b42
  4065ce:	ucomisd xmm7,xmm6
  4065d2:	ja     0x406b62
  4065d8:	mov    r12d,DWORD PTR [rsp+0x44]
  4065dd:	test   r12d,r12d
  4065e0:	je     0x4069a5
  4065e6:	mov    DWORD PTR [rsp+0x44],0x1
  4065ee:	xor    ebp,ebp
  4065f0:	mov    rcx,rsi
  4065f3:	call   0x408550
  4065f8:	mov    rcx,rdi
  4065fb:	call   0x408550
  406600:	mov    rcx,r13
  406603:	call   0x408550
  406608:	mov    rcx,rbx
  40660b:	call   0x408550
  406610:	mov    rsi,QWORD PTR [rsp+0x70]
  406615:	mov    r15d,0x0
  40661b:	mov    ecx,DWORD PTR [rsi+0x8]
  40661e:	call   0x408440
  406623:	lea    rcx,[rax+0x10]
  406627:	mov    rdi,rax
  40662a:	movsxd rax,DWORD PTR [rsi+0x14]
  40662e:	mov    rdx,QWORD PTR [rsp+0x78]
  406633:	lea    r8,[rax*4+0x8]
  40663b:	call   0x4091e8
  406640:	mov    rax,QWORD PTR [rsp+0xc8]
  406648:	mov    ecx,DWORD PTR [rax+0x8]
  40664b:	call   0x408440
  406650:	mov    rdx,QWORD PTR [rsp+0xc8]
  406658:	lea    rcx,[rax+0x10]
  40665c:	mov    rsi,rax
  40665f:	movsxd rax,DWORD PTR [rdx+0x14]
  406663:	add    rdx,0x10
  406667:	lea    r8,[rax*4+0x8]
  40666f:	call   0x4091e8
  406674:	mov    eax,DWORD PTR [rsp+0xa8]
  40667b:	mov    ecx,0x1
  406680:	mov    ebx,DWORD PTR [rsp+0xac]
  406687:	sub    eax,ebp
  406689:	add    ebx,ebp
  40668b:	mov    DWORD PTR [rsp+0x48],eax
  40668f:	call   0x408680
  406694:	mov    r13,rax
  406697:	mov    eax,DWORD PTR [rsp+0x68]
  40669b:	test   eax,eax
  40669d:	cmovg  r15d,eax
  4066a1:	test   ebx,ebx
  4066a3:	js     0x406960
  4066a9:	mov    eax,DWORD PTR [rsp+0x5c]
  4066ad:	mov    edx,r15d
  4066b0:	lea    r14d,[rax+rbx*1]
  4066b4:	mov    ecx,DWORD PTR [rsp+0x48]
  4066b8:	mov    eax,DWORD PTR [rsp+0x80]
  4066bf:	add    ebx,ecx
  4066c1:	sub    ebx,DWORD PTR [rsp+0x40]
  4066c5:	sub    eax,ecx
  4066c7:	cmp    DWORD PTR [rsp+0x50],ebx
  4066cb:	jle    0x4066d3
  4066cd:	sub    ebx,DWORD PTR [rsp+0x50]
  4066d1:	add    eax,ebx
  4066d3:	lea    ebx,[r14+rax*1]
  4066d7:	lea    r12d,[rdx+rax*1]
  4066db:	cmp    ebx,r12d
  4066de:	mov    eax,r12d
  4066e1:	cmovle eax,ebx
  4066e4:	cmp    eax,r14d
  4066e7:	cmovg  eax,r14d
  4066eb:	test   eax,eax
  4066ed:	jle    0x4066f7
  4066ef:	sub    ebx,eax
  4066f1:	sub    r12d,eax
  4066f4:	sub    r14d,eax
  4066f7:	mov    eax,DWORD PTR [rsp+0x5c]
  4066fb:	test   eax,eax
  4066fd:	je     0x40672c
  4066ff:	mov    rcx,r13
  406702:	mov    edx,eax
  406704:	call   0x4087e0
  406709:	mov    rdx,rsi
  40670c:	mov    rcx,rax
  40670f:	mov    r13,rax
  406712:	call   0x4086b0
  406717:	mov    rcx,rsi
  40671a:	mov    QWORD PTR [rsp+0x60],rax
  40671f:	call   0x408550
  406724:	mov    rax,QWORD PTR [rsp+0x60]
  406729:	mov    rsi,rax
  40672c:	sub    ebx,ebp
  40672e:	cmp    ebx,0x0
  406731:	mov    edx,ebx
  406733:	jg     0x4063d1
  406739:	je     0x4063dc
  40673f:	neg    edx
  406741:	mov    rcx,rsi
  406744:	call   0x407d90
  406749:	jmp    0x4063dc
  40674e:	xchg   ax,ax
  406750:	test   eax,eax
  406752:	js     0x406f82
  406758:	je     0x40704e
  40675e:	mov    rdx,r13
  406761:	mov    rcx,rbx
  406764:	call   0x408f60
  406769:	ucomisd xmm9,xmm0
  40676e:	jb     0x406aa0
  406774:	test   ebp,ebp
  406776:	jne    0x406bd0
  40677c:	mov    DWORD PTR [rsp+0x60],0x0
  406784:	cmp    DWORD PTR [rsp+0x48],0x1
  406789:	jg     0x406799
  40678b:	mov    r9d,DWORD PTR [rsp+0x44]
  406790:	test   r9d,r9d
  406793:	jne    0x40715a
  406799:	movapd xmm6,xmm8
  40679e:	xor    r12d,r12d
  4067a1:	mov    DWORD PTR [rsp+0x88],0x10
  4067ac:	movapd xmm7,xmm8
  4067b1:	mov    r14d,0x1
  4067b7:	jmp    0x406497
  4067bc:	nop    DWORD PTR [rax+0x0]
  4067c0:	mov    r15d,DWORD PTR [rax+0x18]
  4067c4:	test   r15d,r15d
  4067c7:	jne    0x40642d
  4067cd:	nop    DWORD PTR [rax]
  4067d0:	mov    ebp,DWORD PTR [rsp+0x44]
  4067d4:	test   ebp,ebp
  4067d6:	je     0x406cc8
  4067dc:	mov    eax,DWORD PTR [rsp+0xac]
  4067e3:	mov    ebp,0x1
  4067e8:	mov    rdx,QWORD PTR [rsp+0x198]
  4067f0:	mov    rcx,rsi
  4067f3:	mov    DWORD PTR [rdx],eax
  4067f5:	call   0x408550
  4067fa:	mov    rcx,rdi
  4067fd:	call   0x408550
  406802:	mov    rcx,r13
  406805:	call   0x408550
  40680a:	mov    rcx,QWORD PTR [rsp+0x70]
  40680f:	call   0x408550
  406814:	mov    rcx,rbx
  406817:	call   0x408550
  40681c:	mov    rax,QWORD PTR [rsp+0x190]
  406824:	mov    esi,DWORD PTR [rsp+0xac]
  40682b:	cmp    DWORD PTR [rax+0x8],esi
  40682e:	jge    0x405bca
  406834:	mov    rax,QWORD PTR [rsp+0x190]
  40683c:	mov    eax,DWORD PTR [rax+0xc]
  40683f:	mov    DWORD PTR [rsp+0x44],eax
  406843:	and    eax,0x3
  406846:	cmp    eax,0x2
  406849:	je     0x40703b
  40684f:	cmp    eax,0x3
  406852:	je     0x407028
  406858:	cmp    eax,0x1
  40685b:	je     0x406c27
  406861:	mov    rcx,QWORD PTR [rsp+0xc8]
  406869:	call   0x408550
  40686e:	mov    rax,QWORD PTR [rsp+0x190]
  406876:	mov    rsi,QWORD PTR [rsp+0x198]
  40687e:	mov    QWORD PTR [rsp+0xc8],0x0
  40688a:	mov    DWORD PTR [rsp+0xa4],0x11
  406895:	mov    eax,DWORD PTR [rax+0x8]
  406898:	mov    DWORD PTR [rsi],eax
  40689a:	mov    rax,QWORD PTR [rsp+0x190]
  4068a2:	mov    rsi,QWORD PTR [rsp+0x1a0]
  4068aa:	mov    ecx,DWORD PTR [rax]
  4068ac:	lea    eax,[rcx+0x1f]
  4068af:	sar    eax,0x5
  4068b2:	cdqe   
  4068b4:	lea    rdx,[rsi+rax*4]
  4068b8:	mov    rax,rsi
  4068bb:	cmp    rsi,rdx
  4068be:	jae    0x4068d0
  4068c0:	add    rax,0x4
  4068c4:	mov    DWORD PTR [rax-0x4],0xffffffff
  4068cb:	cmp    rdx,rax
  4068ce:	ja     0x4068c0
  4068d0:	and    ecx,0x1f
  4068d3:	je     0x4068e1
  4068d5:	mov    eax,0x20
  4068da:	sub    eax,ecx
  4068dc:	mov    ecx,eax
  4068de:	shr    DWORD PTR [rdx-0x4],cl
  4068e1:	xor    r8d,r8d
  4068e4:	jmp    0x405bd2
  4068e9:	nop    DWORD PTR [rax+0x0]
  4068f0:	call   0x407360
  4068f5:	mov    edx,DWORD PTR [rax+0x14]
  4068f8:	mov    QWORD PTR [rsp+0xc8],rax
  406900:	sub    edx,0x1
  406903:	cmp    edx,DWORD PTR [rbp+0x14]
  406906:	jge    0x406927
  406908:	movsxd rdx,edx
  40690b:	add    rdx,0x4
  40690f:	bsr    ecx,DWORD PTR [rax+rdx*4+0x8]
  406914:	bsr    edx,DWORD PTR [rbp+rdx*4+0x8]
  406919:	xor    ecx,0x1f
  40691c:	xor    edx,0x1f
  40691f:	cmp    ecx,edx
  406921:	jge    0x406570
  406927:	mov    edx,DWORD PTR [rsp+0x44]
  40692b:	test   edx,edx
  40692d:	je     0x406c00
  406933:	mov    eax,DWORD PTR [rsp+0xa8]
  40693a:	add    eax,0x1
  40693d:	cmp    DWORD PTR [rsp+0x40],eax
  406941:	mov    DWORD PTR [rsp+0xa8],eax
  406948:	setne  al
  40694b:	movzx  eax,al
  40694e:	mov    DWORD PTR [rsp+0x44],eax
  406952:	jmp    0x406570
  406957:	nop    WORD PTR [rax+rax*1+0x0]
  406960:	mov    edx,r15d
  406963:	mov    r14d,DWORD PTR [rsp+0x5c]
  406968:	sub    edx,ebx
  40696a:	jmp    0x4066b4
  40696f:	nop
  406970:	mov    edx,0x1
  406975:	mov    rcx,rax
  406978:	call   0x408950
  40697d:	mov    rcx,r15
  406980:	mov    QWORD PTR [rsp+0xc8],rax
  406988:	sub    DWORD PTR [rsp+0xac],0x1
  406990:	sub    DWORD PTR [rsp+0x8c],0x1
  406998:	call   0x408550
  40699d:	mov    rcx,rbp
  4069a0:	call   0x408550
  4069a5:	mov    rcx,QWORD PTR [rsp+0xc8]
  4069ad:	call   0x407e90
  4069b2:	mov    DWORD PTR [rsp+0x44],0x0
  4069ba:	mov    ebp,eax
  4069bc:	jmp    0x4065f0
  4069c1:	mov    edx,DWORD PTR [rsp+0x50]
  4069c5:	cmp    DWORD PTR [rsp+0x8c],edx
  4069cc:	mov    DWORD PTR [rsp+0xa4],0x11
  4069d7:	je     0x406784
  4069dd:	xor    ecx,ecx
  4069df:	cmp    DWORD PTR [rsp+0x40],0x1f
  4069e4:	mov    r9,QWORD PTR [rsp+0xc8]
  4069ec:	mov    eax,DWORD PTR [rsp+0x40]
  4069f0:	jle    0x406a2c
  4069f2:	mov    r14d,DWORD PTR [r9+0x18]
  4069f6:	test   r14d,r14d
  4069f9:	jne    0x406784
  4069ff:	lea    rdx,[r9+0x1c]
  406a03:	mov    eax,DWORD PTR [rsp+0x40]
  406a07:	xor    ecx,ecx
  406a09:	jmp    0x406a21
  406a0b:	nop    DWORD PTR [rax+rax*1+0x0]
  406a10:	add    rdx,0x4
  406a14:	mov    r12d,DWORD PTR [rdx-0x4]
  406a18:	test   r12d,r12d
  406a1b:	jne    0x406784
  406a21:	sub    eax,0x20
  406a24:	add    ecx,0x1
  406a27:	cmp    eax,0x1f
  406a2a:	jg     0x406a10
  406a2c:	cmp    eax,0x1
  406a2f:	jle    0x406a53
  406a31:	movsxd rcx,ecx
  406a34:	sub    eax,0x1
  406a37:	lea    r8,[r9+rcx*4]
  406a3b:	xor    ecx,ecx
  406a3d:	mov    edx,DWORD PTR [r8+0x18]
  406a41:	tzcnt  ecx,edx
  406a45:	shr    edx,cl
  406a47:	cmp    eax,ecx
  406a49:	mov    DWORD PTR [r8+0x18],edx
  406a4d:	jg     0x406784
  406a53:	mov    eax,DWORD PTR [rsp+0x8c]
  406a5a:	mov    rcx,r9
  406a5d:	sub    eax,0x1
  406a60:	mov    DWORD PTR [rsp+0xac],eax
  406a67:	mov    eax,DWORD PTR [rsp+0x40]
  406a6b:	mov    edx,eax
  406a6d:	mov    DWORD PTR [rsp+0xa8],eax
  406a74:	call   0x405760
  406a79:	mov    QWORD PTR [rsp+0xc8],rax
  406a81:	jmp    0x4067d0
  406a86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406a90:	mov    DWORD PTR [rsp+0x44],0x1
  406a98:	jmp    0x406570
  406a9d:	nop    DWORD PTR [rax]
  406aa0:	movapd xmm7,xmm0
  406aa4:	cmp    ebp,0x1
  406aa7:	movsd  xmm1,QWORD PTR [rip+0x5209]        # 0x40bcb8
  406aaf:	sbb    eax,eax
  406ab1:	and    eax,0x10
  406ab4:	movsd  xmm0,QWORD PTR [rip+0x5204]        # 0x40bcc0
  406abc:	mulsd  xmm7,xmm1
  406ac0:	add    eax,0x10
  406ac3:	xor    r14d,r14d
  406ac6:	cmp    ebp,0x1
  406ac9:	mov    DWORD PTR [rsp+0x88],eax
  406ad0:	setb   r14b
  406ad4:	ucomisd xmm0,xmm7
  406ad8:	jbe    0x406bc0
  406ade:	cvttsd2si r12d,xmm7
  406ae3:	pxor   xmm6,xmm6
  406ae7:	mov    eax,DWORD PTR [rsp+0x6c]
  406aeb:	cmp    eax,0x1
  406aee:	cvtsi2sd xmm6,r12d
  406af3:	subsd  xmm7,xmm6
  406af7:	je     0x406e15
  406afd:	cmp    eax,0x2
  406b00:	jne    0x406cb9
  406b06:	test   r14d,r14d
  406b09:	jne    0x406b35
  406b0b:	ucomisd xmm7,QWORD PTR [rip+0x5195]        # 0x40bca8
  406b13:	jbe    0x406b35
  406b15:	pxor   xmm6,xmm6
  406b19:	add    r12d,0x1
  406b1d:	mov    eax,0x30
  406b22:	sub    eax,DWORD PTR [rsp+0x88]
  406b29:	cvtsi2sd xmm6,r12d
  406b2e:	mov    DWORD PTR [rsp+0x88],eax
  406b35:	mov    DWORD PTR [rsp+0x60],0x0
  406b3d:	jmp    0x406497
  406b42:	ucomisd xmm0,xmm6
  406b46:	jbe    0x4065d8
  406b4c:	movsd  xmm0,QWORD PTR [rip+0x514c]        # 0x40bca0
  406b54:	subsd  xmm0,xmm6
  406b58:	ucomisd xmm0,xmm7
  406b5c:	jbe    0x4065d8
  406b62:	mov    eax,DWORD PTR [rsp+0x88]
  406b69:	or     DWORD PTR [rsp+0xa4],eax
  406b70:	jmp    0x4067d0
  406b75:	mov    r15d,DWORD PTR [rsp+0x40]
  406b7a:	mov    rcx,QWORD PTR [rsp+0xc8]
  406b82:	mov    ebp,r15d
  406b85:	sub    ebp,eax
  406b87:	mov    edx,ebp
  406b89:	call   0x408950
  406b8e:	sub    DWORD PTR [rsp+0xac],ebp
  406b95:	mov    QWORD PTR [rsp+0xc8],rax
  406b9d:	mov    DWORD PTR [rsp+0xa8],r15d
  406ba5:	jmp    0x4064bf
  406baa:	nop    WORD PTR [rax+rax*1+0x0]
  406bb0:	neg    edx
  406bb2:	mov    rcx,rax
  406bb5:	call   0x407d90
  406bba:	jmp    0x4064f7
  406bbf:	nop
  406bc0:	movapd xmm6,xmm7
  406bc4:	xor    r12d,r12d
  406bc7:	jmp    0x406b35
  406bcc:	nop    DWORD PTR [rax+0x0]
  406bd0:	movapd xmm6,xmm11
  406bd5:	xor    r12d,r12d
  406bd8:	movapd xmm7,xmm11
  406bdd:	mov    DWORD PTR [rsp+0x88],0x20
  406be8:	mov    DWORD PTR [rsp+0x60],0x0
  406bf0:	xor    r14d,r14d
  406bf3:	jmp    0x406497
  406bf8:	nop    DWORD PTR [rax+rax*1+0x0]
  406c00:	mov    edx,0x1
  406c05:	mov    rcx,rax
  406c08:	xor    r12d,r12d
  406c0b:	call   0x407d90
  406c10:	add    DWORD PTR [rsp+0xac],0x1
  406c18:	add    DWORD PTR [rsp+0x8c],0x1
  406c20:	jmp    0x406570
  406c25:	xor    ebp,ebp
  406c27:	mov    rax,QWORD PTR [rsp+0xc8]
  406c2f:	mov    DWORD PTR [rsp+0xa4],0xa3
  406c3a:	mov    DWORD PTR [rax+0x14],0x0
  406c41:	call   0x409278
  406c46:	mov    DWORD PTR [rax],0x22
  406c4c:	mov    rax,QWORD PTR [rsp+0x190]
  406c54:	mov    eax,DWORD PTR [rax+0x8]
  406c57:	add    eax,0x1
  406c5a:	jmp    0x405bc0
  406c5f:	mov    eax,DWORD PTR [rsp+0x58]
  406c63:	mov    r8,QWORD PTR [rsp+0x198]
  406c6b:	lea    rcx,[rsp+0xc0]
  406c73:	mov    rdx,QWORD PTR [rsp+0x190]
  406c7b:	lea    r9,[rsp+0xc8]
  406c83:	mov    DWORD PTR [rsp+0x20],eax
  406c87:	call   0x4074c0
  406c8c:	cmp    eax,0x6
  406c8f:	mov    DWORD PTR [rsp+0xa4],eax
  406c96:	mov    r8,QWORD PTR [rsp+0xc8]
  406c9e:	jne    0x405901
  406ca4:	mov    QWORD PTR [rsp+0xc0],rdi
  406cac:	mov    DWORD PTR [rsp+0x58],0x0
  406cb4:	jmp    0x405901
  406cb9:	ucomisd xmm7,xmm1
  406cbd:	jae    0x406b15
  406cc3:	jmp    0x406b35
  406cc8:	mov    eax,DWORD PTR [rsp+0xa8]
  406ccf:	mov    ebp,DWORD PTR [rsp+0x40]
  406cd3:	sub    ebp,eax
  406cd5:	cmp    ebp,0x0
  406cd8:	jne    0x406ea1
  406cde:	mov    eax,DWORD PTR [rsp+0xac]
  406ce5:	jmp    0x4067e8
  406cea:	je     0x405fe8
  406cf0:	neg    edx
  406cf2:	mov    eax,edx
  406cf4:	and    eax,0xf
  406cf7:	je     0x406d19
  406cf9:	mov    rcx,QWORD PTR [rip+0x52e0]        # 0x40bfe0
  406d00:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  406d09:	cdqe   
  406d0b:	divsd  xmm0,QWORD PTR [rcx+rax*8]
  406d10:	movsd  QWORD PTR [rsp+0xb0],xmm0
  406d19:	and    edx,0xfffffff0
  406d1c:	je     0x405fe8
  406d22:	mov    eax,edx
  406d24:	sar    eax,0x4
  406d27:	cmp    eax,0xf
  406d2a:	jle    0x4072f8
  406d30:	mov    rdx,QWORD PTR [rip+0x52b9]        # 0x40bff0
  406d37:	mov    ecx,eax
  406d39:	xor    r8d,r8d
  406d3c:	movsd  xmm1,QWORD PTR [rdx+0x20]
  406d41:	mov    edx,DWORD PTR [rsp+0xb4]
  406d48:	sub    ecx,0x10
  406d4b:	mov    r9d,edx
  406d4e:	and    edx,0x800fffff
  406d54:	or     edx,0x3ff00000
  406d5a:	and    r9d,0x7ff00000
  406d61:	mov    DWORD PTR [rsp+0xb4],edx
  406d68:	shr    r9d,0x14
  406d6c:	cmp    ecx,0xf
  406d6f:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  406d78:	lea    r8d,[r8+r9*1-0x3ff]
  406d80:	mulsd  xmm0,xmm1
  406d84:	movsd  QWORD PTR [rsp+0xb0],xmm0
  406d8d:	jg     0x406d41
  406d8f:	and    eax,0xf
  406d92:	mov    edx,DWORD PTR [rsp+0xb4]
  406d99:	mov    ecx,edx
  406d9b:	and    edx,0x800fffff
  406da1:	and    ecx,0x7ff00000
  406da7:	or     edx,0x3ff00000
  406dad:	shr    ecx,0x14
  406db0:	mov    DWORD PTR [rsp+0xb4],edx
  406db7:	test   eax,eax
  406db9:	lea    edi,[r8+rcx*1-0x3ff]
  406dc1:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  406dca:	jle    0x405ff3
  406dd0:	movsd  xmm1,QWORD PTR [rsp+0xb0]
  406dd9:	mov    rdx,QWORD PTR [rip+0x5210]        # 0x40bff0
  406de0:	movapd xmm0,xmm1
  406de4:	test   al,0x1
  406de6:	je     0x406df0
  406de8:	mulsd  xmm1,QWORD PTR [rdx]
  406dec:	movapd xmm0,xmm1
  406df0:	sar    eax,1
  406df2:	add    rdx,0x8
  406df6:	test   eax,eax
  406df8:	jg     0x406de4
  406dfa:	movsd  QWORD PTR [rsp+0xb0],xmm1
  406e03:	jmp    0x405ff3
  406e08:	mov    DWORD PTR [rsp+0x44],0x0
  406e10:	jmp    0x406219
  406e15:	test   r14d,r14d
  406e18:	je     0x406b35
  406e1e:	jmp    0x406b0b
  406e23:	mov    DWORD PTR [rsp+0x44],0x0
  406e2b:	jmp    0x406363
  406e30:	lea    rax,[rsp+0xa4]
  406e38:	lea    rcx,[rsp+0xb0]
  406e40:	mov    DWORD PTR [rsp+0x20],0x1
  406e48:	mov    QWORD PTR [rsp+0x30],rax
  406e4d:	mov    eax,DWORD PTR [rsp+0x6c]
  406e51:	mov    DWORD PTR [rsp+0x28],eax
  406e55:	jmp    0x405ed8
  406e5a:	mov    ecx,DWORD PTR [rsp+0x68]
  406e5e:	mov    edx,0x25
  406e63:	sub    edx,ebp
  406e65:	cmp    ecx,edx
  406e67:	mov    eax,ecx
  406e69:	jg     0x405fa9
  406e6f:	mov    rdx,QWORD PTR [rip+0x516a]        # 0x40bfe0
  406e76:	mov    eax,0xf
  406e7b:	sub    eax,ebp
  406e7d:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  406e86:	movsxd rcx,eax
  406e89:	mulsd  xmm0,QWORD PTR [rdx+rcx*8]
  406e8e:	mov    ecx,DWORD PTR [rsp+0x68]
  406e92:	sub    ecx,eax
  406e94:	movsxd rax,ecx
  406e97:	mulsd  xmm0,QWORD PTR [rdx+rax*8]
  406e9c:	jmp    0x4062e1
  406ea1:	mov    edx,ebp
  406ea3:	jle    0x4071ff
  406ea9:	mov    rcx,QWORD PTR [rsp+0xc8]
  406eb1:	call   0x408950
  406eb6:	mov    QWORD PTR [rsp+0xc8],rax
  406ebe:	mov    eax,DWORD PTR [rsp+0xac]
  406ec5:	sub    eax,ebp
  406ec7:	xor    ebp,ebp
  406ec9:	mov    DWORD PTR [rsp+0xac],eax
  406ed0:	jmp    0x4067e8
  406ed5:	xor    ebp,ebp
  406ed7:	xor    r13d,r13d
  406eda:	jmp    0x405f9a
  406edf:	mov    r9d,0x4e1f
  406ee5:	jmp    0x405d34
  406eea:	lea    rbx,[rsp+0xc0]
  406ef2:	lea    rdx,[rip+0x4c47]        # 0x40bb40
  406ef9:	mov    rcx,rbx
  406efc:	call   0x409020
  406f01:	test   eax,eax
  406f03:	je     0x405d53
  406f09:	lea    rdx,[rip+0x4c33]        # 0x40bb43
  406f10:	mov    rcx,rbx
  406f13:	sub    QWORD PTR [rsp+0xc0],0x1
  406f1c:	call   0x409020
  406f21:	test   eax,eax
  406f23:	jne    0x406f2e
  406f25:	add    QWORD PTR [rsp+0xc0],0x1
  406f2e:	mov    rax,QWORD PTR [rsp+0x190]
  406f36:	mov    DWORD PTR [rsp+0xa4],0x3
  406f41:	xor    ebp,ebp
  406f43:	mov    eax,DWORD PTR [rax+0x8]
  406f46:	add    eax,0x1
  406f49:	jmp    0x405bc0
  406f4e:	mov    edx,DWORD PTR [rsp+0xb4]
  406f55:	mov    eax,0x15
  406f5a:	or     edx,0x100000
  406f60:	tzcnt  edx,edx
  406f64:	sub    eax,edx
  406f66:	jmp    0x405e8d
  406f6b:	cmp    ebp,0x1
  406f6e:	sbb    eax,eax
  406f70:	and    eax,0x10
  406f73:	add    eax,0x11
  406f76:	mov    DWORD PTR [rsp+0xa4],eax
  406f7d:	jmp    0x4067d0
  406f82:	cmp    ebp,0x1
  406f85:	sbb    eax,eax
  406f87:	and    eax,0x10
  406f8a:	add    eax,0x11
  406f8d:	test   ebp,ebp
  406f8f:	mov    DWORD PTR [rsp+0xa4],eax
  406f96:	jne    0x4067d0
  406f9c:	cmp    DWORD PTR [rsp+0x48],0x1
  406fa1:	jg     0x4067d0
  406fa7:	mov    ebp,DWORD PTR [rsp+0x44]
  406fab:	test   ebp,ebp
  406fad:	jne    0x4067d0
  406fb3:	mov    edx,DWORD PTR [rsp+0x8c]
  406fba:	cmp    DWORD PTR [rsp+0x50],edx
  406fbe:	je     0x4067d0
  406fc4:	mov    rcx,rbx
  406fc7:	mov    edx,0x1
  406fcc:	call   0x408950
  406fd1:	mov    rdx,r13
  406fd4:	mov    rcx,rax
  406fd7:	mov    rbx,rax
  406fda:	call   0x408a70
  406fdf:	test   eax,eax
  406fe1:	jle    0x406cc8
  406fe7:	mov    DWORD PTR [rsp+0xa4],0x11
  406ff2:	mov    DWORD PTR [rsp+0x44],0x0
  406ffa:	mov    eax,DWORD PTR [rsp+0x40]
  406ffe:	mov    rcx,QWORD PTR [rsp+0xc8]
  407006:	sub    DWORD PTR [rsp+0xac],eax
  40700d:	mov    edx,eax
  40700f:	mov    DWORD PTR [rsp+0xa8],eax
  407016:	call   0x405760
  40701b:	mov    QWORD PTR [rsp+0xc8],rax
  407023:	jmp    0x4067d0
  407028:	mov    r10d,DWORD PTR [rsp+0x58]
  40702d:	test   r10d,r10d
  407030:	jne    0x406c27
  407036:	jmp    0x406861
  40703b:	mov    r11d,DWORD PTR [rsp+0x58]
  407040:	test   r11d,r11d
  407043:	je     0x406c27
  407049:	jmp    0x406861
  40704e:	test   ebp,ebp
  407050:	je     0x407197
  407056:	mov    r11d,DWORD PTR [rsp+0x44]
  40705b:	test   r11d,r11d
  40705e:	je     0x407265
  407064:	mov    ecx,DWORD PTR [rsp+0xa8]
  40706b:	mov    r8,QWORD PTR [rsp+0xc8]
  407073:	mov    edx,ecx
  407075:	lea    rax,[r8+0x18]
  407079:	sar    edx,0x5
  40707c:	movsxd rdx,edx
  40707f:	lea    rdx,[rax+rdx*4]
  407083:	cmp    rax,rdx
  407086:	jae    0x4070b3
  407088:	cmp    DWORD PTR [r8+0x18],0xffffffff
  40708d:	lea    rax,[r8+0x1c]
  407091:	je     0x4070ae
  407093:	jmp    0x407265
  407098:	nop    DWORD PTR [rax+rax*1+0x0]
  4070a0:	add    rax,0x4
  4070a4:	cmp    DWORD PTR [rax-0x4],0xffffffff
  4070a8:	jne    0x407265
  4070ae:	cmp    rdx,rax
  4070b1:	ja     0x4070a0
  4070b3:	and    ecx,0x1f
  4070b6:	je     0x4070ca
  4070b8:	or     edx,0xffffffff
  4070bb:	shl    edx,cl
  4070bd:	or     edx,DWORD PTR [rax]
  4070bf:	mov    eax,edx
  4070c1:	add    eax,0x1
  4070c4:	jne    0x407265
  4070ca:	mov    eax,DWORD PTR [rsp+0x40]
  4070ce:	mov    edx,DWORD PTR [rsp+0x50]
  4070d2:	mov    DWORD PTR [r8+0x14],0x1
  4070da:	mov    DWORD PTR [r8+0x18],0x1
  4070e2:	mov    DWORD PTR [rsp+0xa8],0x1
  4070ed:	mov    DWORD PTR [rsp+0xa4],0x21
  4070f8:	lea    eax,[rax+rdx*1-0x1]
  4070fc:	mov    DWORD PTR [rsp+0xac],eax
  407103:	mov    eax,0x1
  407108:	jmp    0x406ccf
  40710d:	add    r13d,eax
  407110:	cmp    eax,0x1
  407113:	je     0x40713c
  407115:	add    ecx,ebp
  407117:	mov    r10d,ecx
  40711a:	jmp    0x407125
  40711c:	lea    esi,[rsi+rsi*4]
  40711f:	add    esi,esi
  407121:	cmp    ebp,ecx
  407123:	je     0x40713f
  407125:	add    ebp,0x1
  407128:	lea    eax,[rbp-0x1]
  40712b:	cmp    eax,0x8
  40712e:	jle    0x40711c
  407130:	cmp    ebp,0x10
  407133:	jg     0x407121
  407135:	lea    edx,[rdx+rdx*4]
  407138:	add    edx,edx
  40713a:	jmp    0x407121
  40713c:	mov    r10d,ebp
  40713f:	cmp    r10d,0x8
  407143:	lea    ebp,[r10+0x1]
  407147:	jg     0x40721b
  40714d:	mov    r8,QWORD PTR [rsp+0xc0]
  407155:	jmp    0x40627e
  40715a:	mov    r9,QWORD PTR [rsp+0xc8]
  407162:	mov    DWORD PTR [rsp+0x44],0x1
  40716a:	mov    eax,DWORD PTR [rsp+0x50]
  40716e:	mov    DWORD PTR [r9+0x14],0x0
  407176:	mov    DWORD PTR [rsp+0xa4],0x50
  407181:	mov    DWORD PTR [rsp+0xac],eax
  407188:	jmp    0x4067d0
  40718d:	mov    eax,0x1
  407192:	jmp    0x405f3d
  407197:	cmp    DWORD PTR [rsp+0x48],0x1
  40719c:	je     0x40727c
  4071a2:	mov    DWORD PTR [rsp+0xa4],0x21
  4071ad:	mov    r10d,DWORD PTR [rsp+0x44]
  4071b2:	test   r10d,r10d
  4071b5:	jne    0x4071c5
  4071b7:	mov    edx,DWORD PTR [rsp+0x40]
  4071bb:	cmp    DWORD PTR [rsp+0x48],edx
  4071bf:	jl     0x406cc8
  4071c5:	mov    r9,QWORD PTR [rsp+0xc8]
  4071cd:	mov    eax,DWORD PTR [r9+0x18]
  4071d1:	test   al,0x1
  4071d3:	je     0x4067d0
  4071d9:	test   ebp,ebp
  4071db:	jne    0x407300
  4071e1:	cmp    DWORD PTR [rsp+0x48],0x1
  4071e6:	je     0x40716a
  4071e8:	sub    eax,0x1
  4071eb:	mov    DWORD PTR [rsp+0xa4],0x11
  4071f6:	mov    DWORD PTR [r9+0x18],eax
  4071fa:	jmp    0x4067d0
  4071ff:	mov    rcx,QWORD PTR [rsp+0xc8]
  407207:	neg    edx
  407209:	call   0x407d90
  40720e:	jmp    0x406ebe
  407213:	xor    r8d,r8d
  407216:	jmp    0x4061af
  40721b:	cmp    ebp,0x10
  40721e:	jg     0x407227
  407220:	lea    eax,[rdx+rdx*4]
  407223:	lea    edx,[r8+rax*2]
  407227:	mov    r8,QWORD PTR [rsp+0xc0]
  40722f:	xor    ecx,ecx
  407231:	jmp    0x405f7f
  407236:	cmp    edx,0xffffffff
  407239:	jl     0x4060f4
  40723f:	mov    rax,QWORD PTR [rsp+0xc8]
  407247:	mov    DWORD PTR [rsp+0xa8],0x1
  407252:	mov    DWORD PTR [rax+0x14],0x1
  407259:	mov    DWORD PTR [rax+0x18],0x1
  407260:	jmp    0x4060c6
  407265:	mov    DWORD PTR [rsp+0xa4],0x11
  407270:	jmp    0x4071ad
  407275:	xor    ecx,ecx
  407277:	jmp    0x406258
  40727c:	mov    edx,DWORD PTR [rsp+0x8c]
  407283:	cmp    DWORD PTR [rsp+0x50],edx
  407287:	jne    0x40734d
  40728d:	mov    rax,QWORD PTR [rsp+0xc8]
  407295:	mov    DWORD PTR [rsp+0xa4],0x21
  4072a0:	cmp    DWORD PTR [rax+0x14],0x1
  4072a4:	jne    0x4067d0
  4072aa:	cmp    DWORD PTR [rax+0x18],0x1
  4072ae:	mov    eax,DWORD PTR [rsp+0x48]
  4072b2:	cmovne eax,DWORD PTR [rsp+0x84]
  4072ba:	mov    DWORD PTR [rsp+0x84],eax
  4072c1:	jmp    0x4067d0
  4072c6:	mov    r8,QWORD PTR [rsp+0x1a0]
  4072ce:	mov    rdx,QWORD PTR [rsp+0x190]
  4072d6:	mov    rcx,rbx
  4072d9:	call   0x407f60
  4072de:	mov    DWORD PTR [rsp+0xa4],eax
  4072e5:	mov    rax,QWORD PTR [rsp+0x190]
  4072ed:	mov    eax,DWORD PTR [rax+0x8]
  4072f0:	add    eax,0x1
  4072f3:	jmp    0x405bc0
  4072f8:	xor    r8d,r8d
  4072fb:	jmp    0x406d92
  407300:	mov    rcx,r9
  407303:	call   0x4052b0
  407308:	mov    edx,DWORD PTR [rax+0x14]
  40730b:	mov    ecx,DWORD PTR [rsp+0xa8]
  407312:	mov    QWORD PTR [rsp+0xc8],rax
  40731a:	sub    edx,0x1
  40731d:	movsxd rdx,edx
  407320:	bsr    edx,DWORD PTR [rax+rdx*4+0x18]
  407325:	mov    eax,ecx
  407327:	neg    eax
  407329:	and    eax,0x1f
  40732c:	xor    edx,0x1f
  40732f:	cmp    edx,eax
  407331:	je     0x40733d
  407333:	add    ecx,0x1
  407336:	mov    DWORD PTR [rsp+0xa8],ecx
  40733d:	mov    DWORD PTR [rsp+0xa4],0x21
  407348:	jmp    0x4067d0
  40734d:	mov    DWORD PTR [rsp+0xa4],0x1
  407358:	jmp    0x406ffa
  40735d:	nop
  40735e:	nop
  40735f:	nop
  407360:	push   r13
  407362:	push   r12
  407364:	push   rbp
  407365:	push   rdi
  407366:	push   rsi
  407367:	push   rbx
  407368:	sub    rsp,0x28
  40736c:	mov    eax,DWORD PTR [rdx+0x14]
  40736f:	cmp    DWORD PTR [rcx+0x14],eax
  407372:	mov    rsi,rcx
  407375:	mov    rdi,rdx
  407378:	jge    0x407380
  40737a:	mov    rsi,rdx
  40737d:	mov    rdi,rcx
  407380:	mov    ecx,DWORD PTR [rsi+0x8]
  407383:	xor    r12d,r12d
  407386:	call   0x408440
  40738b:	movsxd rcx,DWORD PTR [rsi+0x14]
  40738f:	mov    rbx,rax
  407392:	lea    r11,[rdi+0x18]
  407396:	lea    r8,[rbx+0x18]
  40739a:	mov    DWORD PTR [rax+0x14],ecx
  40739d:	movsxd rdx,DWORD PTR [rdi+0x14]
  4073a1:	lea    rax,[rsi+0x18]
  4073a5:	lea    rdi,[r8+rdx*4]
  4073a9:	mov    rbp,rdx
  4073ac:	nop    DWORD PTR [rax+0x0]
  4073b0:	mov    r10d,DWORD PTR [rax]
  4073b3:	mov    r9d,DWORD PTR [r11]
  4073b6:	add    r8,0x4
  4073ba:	add    rax,0x4
  4073be:	add    r11,0x4
  4073c2:	movzx  r13d,r9w
  4073c6:	movzx  edx,r10w
  4073ca:	shr    r9d,0x10
  4073ce:	add    edx,r13d
  4073d1:	shr    r10d,0x10
  4073d5:	add    edx,r12d
  4073d8:	add    r10d,r9d
  4073db:	mov    r9d,edx
  4073de:	mov    WORD PTR [r8-0x4],dx
  4073e3:	and    r9d,0x10000
  4073ea:	shr    r9d,0x10
  4073ee:	add    r9d,r10d
  4073f1:	mov    r12d,r9d
  4073f4:	mov    WORD PTR [r8-0x2],r9w
  4073f9:	and    r12d,0x10000
  407400:	shr    r12d,0x10
  407404:	cmp    rdi,r8
  407407:	ja     0x4073b0
  407409:	mov    edx,DWORD PTR [rsi+0x14]
  40740c:	sub    edx,ebp
  40740e:	movsxd rdx,edx
  407411:	lea    r11,[rdi+rdx*4]
  407415:	cmp    r11,r8
  407418:	jbe    0x40745b
  40741a:	nop    WORD PTR [rax+rax*1+0x0]
  407420:	mov    r9d,DWORD PTR [rax]
  407423:	add    r8,0x4
  407427:	add    rax,0x4
  40742b:	movzx  r10d,r9w
  40742f:	shr    r9d,0x10
  407433:	add    r10d,r12d
  407436:	mov    edx,r10d
  407439:	mov    WORD PTR [r8-0x4],r10w
  40743e:	and    edx,0x10000
  407444:	shr    edx,0x10
  407447:	add    edx,r9d
  40744a:	mov    WORD PTR [r8-0x2],dx
  40744f:	mov    r12d,edx
  407452:	shr    r12d,0x10
  407456:	cmp    r11,r8
  407459:	ja     0x407420
  40745b:	test   r12d,r12d
  40745e:	je     0x407473
  407460:	cmp    ecx,DWORD PTR [rbx+0xc]
  407463:	je     0x407483
  407465:	lea    eax,[rcx+0x1]
  407468:	mov    DWORD PTR [rbx+0x14],eax
  40746b:	mov    DWORD PTR [rbx+rcx*4+0x18],0x1
  407473:	mov    rax,rbx
  407476:	add    rsp,0x28
  40747a:	pop    rbx
  40747b:	pop    rsi
  40747c:	pop    rdi
  40747d:	pop    rbp
  40747e:	pop    r12
  407480:	pop    r13
  407482:	ret    
  407483:	mov    eax,DWORD PTR [rbx+0x8]
  407486:	lea    ecx,[rax+0x1]
  407489:	call   0x408440
  40748e:	mov    rsi,rax
  407491:	lea    rcx,[rax+0x10]
  407495:	movsxd rax,DWORD PTR [rbx+0x14]
  407499:	lea    rdx,[rbx+0x10]
  40749d:	lea    r8,[rax*4+0x8]
  4074a5:	call   0x4091e8
  4074aa:	mov    rcx,rbx
  4074ad:	mov    rbx,rsi
  4074b0:	call   0x408550
  4074b5:	movsxd rcx,DWORD PTR [rsi+0x14]
  4074b9:	jmp    0x407465
  4074bb:	nop
  4074bc:	nop
  4074bd:	nop
  4074be:	nop
  4074bf:	nop
  4074c0:	push   r15
  4074c2:	push   r14
  4074c4:	push   r13
  4074c6:	push   r12
  4074c8:	push   rbp
  4074c9:	push   rdi
  4074ca:	push   rsi
  4074cb:	push   rbx
  4074cc:	sub    rsp,0x28
  4074d0:	mov    r14,rcx
  4074d3:	mov    r13,rdx
  4074d6:	mov    QWORD PTR [rsp+0x80],r8
  4074de:	mov    QWORD PTR [rsp+0x88],r9
  4074e6:	call   0x4091f8
  4074eb:	mov    rdi,QWORD PTR [rip+0x4a3e]        # 0x40bf30
  4074f2:	mov    rsi,QWORD PTR [rax]
  4074f5:	cmp    BYTE PTR [rdi+0x30],0x0
  4074f9:	je     0x407920
  4074ff:	mov    rax,QWORD PTR [rsp+0x88]
  407507:	xor    r8d,r8d
  40750a:	mov    QWORD PTR [rax],0x0
  407511:	mov    rbx,QWORD PTR [r14]
  407514:	movzx  edx,BYTE PTR [rbx+0x2]
  407518:	lea    rax,[rbx+0x3]
  40751c:	add    rbx,0x2
  407520:	cmp    dl,0x30
  407523:	jne    0x407539
  407525:	mov    rbx,rax
  407528:	add    rax,0x1
  40752c:	movzx  edx,BYTE PTR [rax-0x1]
  407530:	add    r8d,0x1
  407534:	cmp    dl,0x30
  407537:	je     0x407525
  407539:	cmp    BYTE PTR [rdi+rdx*1],0x0
  40753d:	jne    0x407690
  407543:	movzx  r9d,BYTE PTR [rsi]
  407547:	test   r9b,r9b
  40754a:	je     0x407b8a
  407550:	movzx  edx,BYTE PTR [rbx]
  407553:	cmp    r9b,dl
  407556:	jne    0x407933
  40755c:	mov    eax,0x1
  407561:	jmp    0x407571
  407563:	add    rax,0x1
  407567:	cmp    dl,BYTE PTR [rbx+rax*1-0x1]
  40756b:	jne    0x407930
  407571:	movzx  edx,BYTE PTR [rsi+rax*1]
  407575:	test   dl,dl
  407577:	jne    0x407563
  407579:	add    rax,rbx
  40757c:	movzx  ecx,BYTE PTR [rax]
  40757f:	movzx  r10d,BYTE PTR [rdi+rcx*1]
  407584:	mov    rdx,rcx
  407587:	test   r10b,r10b
  40758a:	jne    0x407a10
  407590:	cmp    dl,0x50
  407593:	je     0x407840
  407599:	cmp    dl,0x70
  40759c:	je     0x407840
  4075a2:	mov    rbp,rax
  4075a5:	mov    r11d,0x1
  4075ab:	xor    r12d,r12d
  4075ae:	xor    r15d,r15d
  4075b1:	xor    r10d,r10d
  4075b4:	test   r8d,r8d
  4075b7:	jne    0x4075bd
  4075b9:	lea    rax,[rbx-0x1]
  4075bd:	test   r11d,r11d
  4075c0:	mov    QWORD PTR [r14],rax
  4075c3:	jne    0x4078f0
  4075c9:	test   r10d,r10d
  4075cc:	je     0x407700
  4075d2:	test   r15d,r15d
  4075d5:	mov    eax,DWORD PTR [r13+0xc]
  4075d9:	jne    0x407980
  4075df:	cmp    eax,0x2
  4075e2:	je     0x407c28
  4075e8:	cmp    eax,0x3
  4075eb:	je     0x407c12
  4075f1:	cmp    eax,0x1
  4075f4:	je     0x4079f8
  4075fa:	mov    esi,DWORD PTR [r13+0x0]
  4075fe:	mov    ebx,esi
  407600:	and    esi,0x1f
  407603:	sar    ebx,0x5
  407606:	cmp    esi,0x1
  407609:	mov    edi,ebx
  40760b:	sbb    edi,0xffffffff
  40760e:	xor    ecx,ecx
  407610:	mov    eax,edi
  407612:	sar    eax,1
  407614:	je     0x407627
  407616:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407620:	add    ecx,0x1
  407623:	sar    eax,1
  407625:	jne    0x407620
  407627:	call   0x408440
  40762c:	mov    rcx,QWORD PTR [rsp+0x88]
  407634:	test   ebx,ebx
  407636:	mov    QWORD PTR [rcx],rax
  407639:	mov    DWORD PTR [rax+0x14],edi
  40763c:	jle    0x407d48
  407642:	lea    ecx,[rbx-0x1]
  407645:	lea    rdx,[rax+0x18]
  407649:	lea    rcx,[rax+rcx*4+0x1c]
  40764e:	xchg   ax,ax
  407650:	mov    DWORD PTR [rdx],0xffffffff
  407656:	add    rdx,0x4
  40765a:	cmp    rdx,rcx
  40765d:	jne    0x407650
  40765f:	mov    edx,ebx
  407661:	cmp    edi,ebx
  407663:	jle    0x407678
  407665:	movsxd r8,edx
  407668:	mov    edx,0x20
  40766d:	mov    ecx,edx
  40766f:	sub    ecx,esi
  407671:	sar    edx,cl
  407673:	mov    DWORD PTR [rax+r8*4+0x18],edx
  407678:	mov    eax,DWORD PTR [r13+0x4]
  40767c:	mov    rdi,QWORD PTR [rsp+0x80]
  407684:	mov    DWORD PTR [rdi],eax
  407686:	mov    eax,0x11
  40768b:	jmp    0x4078f2
  407690:	movzx  eax,BYTE PTR [rbx]
  407693:	movzx  r9d,BYTE PTR [rsi]
  407697:	add    r8d,0x1
  40769b:	xor    r11d,r11d
  40769e:	xor    r12d,r12d
  4076a1:	movzx  r10d,BYTE PTR [rdi+rax*1]
  4076a6:	mov    rdx,rax
  4076a9:	test   r10b,r10b
  4076ac:	mov    rax,rbx
  4076af:	je     0x4076c1
  4076b1:	add    rax,0x1
  4076b5:	movzx  ecx,BYTE PTR [rax]
  4076b8:	cmp    BYTE PTR [rdi+rcx*1],0x0
  4076bc:	mov    rdx,rcx
  4076bf:	jne    0x4076b1
  4076c1:	cmp    dl,r9b
  4076c4:	je     0x407940
  4076ca:	test   r12,r12
  4076cd:	movzx  edx,BYTE PTR [rax]
  4076d0:	je     0x4076d9
  4076d2:	sub    r12d,eax
  4076d5:	shl    r12d,0x2
  4076d9:	cmp    dl,0x50
  4076dc:	je     0x407849
  4076e2:	cmp    dl,0x70
  4076e5:	je     0x407849
  4076eb:	test   r11d,r11d
  4076ee:	mov    QWORD PTR [r14],rax
  4076f1:	mov    rbp,rax
  4076f4:	jne    0x4078f0
  4076fa:	nop    WORD PTR [rax+rax*1+0x0]
  407700:	mov    rax,rbp
  407703:	xor    ecx,ecx
  407705:	sub    rax,rbx
  407708:	sub    eax,0x1
  40770b:	cmp    eax,0x7
  40770e:	jle    0x40771a
  407710:	sar    eax,1
  407712:	add    ecx,0x1
  407715:	cmp    eax,0x7
  407718:	jg     0x407710
  40771a:	call   0x408440
  40771f:	cmp    BYTE PTR [rsi+0x1],0x0
  407723:	mov    r14,rax
  407726:	lea    r15,[rax+0x18]
  40772a:	je     0x407c3e
  407730:	mov    edx,0x1
  407735:	jmp    0x407743
  407737:	nop    WORD PTR [rax+rax*1+0x0]
  407740:	mov    rdx,rax
  407743:	cmp    BYTE PTR [rsi+rdx*1+0x1],0x0
  407748:	lea    rax,[rdx+0x1]
  40774c:	jne    0x407740
  40774e:	cmp    rbx,rbp
  407751:	jae    0x407c45
  407757:	add    rsi,rdx
  40775a:	mov    rax,r15
  40775d:	xor    r9d,r9d
  407760:	xor    r8d,r8d
  407763:	jmp    0x407791
  407765:	cmp    r8d,0x20
  407769:	je     0x407903
  40776f:	movzx  r10d,cl
  407773:	mov    ecx,r8d
  407776:	add    r8d,0x4
  40777a:	movzx  r10d,BYTE PTR [rdi+r10*1]
  40777f:	mov    rbp,r11
  407782:	and    r10d,0xf
  407786:	shl    r10d,cl
  407789:	or     r9d,r10d
  40778c:	cmp    rbx,rbp
  40778f:	jae    0x4077a8
  407791:	movzx  ecx,BYTE PTR [rbp-0x1]
  407795:	lea    r11,[rbp-0x1]
  407799:	cmp    cl,BYTE PTR [rsi]
  40779b:	jne    0x407765
  40779d:	sub    r11,rdx
  4077a0:	mov    rbp,r11
  4077a3:	cmp    rbx,rbp
  4077a6:	jb     0x407791
  4077a8:	bsr    edx,r9d
  4077ac:	xor    edx,0x1f
  4077af:	mov    DWORD PTR [rax],r9d
  4077b2:	add    rax,0x4
  4077b6:	mov    esi,DWORD PTR [r13+0x0]
  4077ba:	sub    rax,r15
  4077bd:	sar    rax,0x2
  4077c1:	mov    DWORD PTR [r14+0x14],eax
  4077c5:	shl    eax,0x5
  4077c8:	sub    eax,edx
  4077ca:	cmp    eax,esi
  4077cc:	jg     0x407a78
  4077d2:	mov    edi,0x0
  4077d7:	jl     0x407a4e
  4077dd:	cmp    r12d,DWORD PTR [r13+0x8]
  4077e1:	jg     0x4079f0
  4077e7:	mov    eax,DWORD PTR [r13+0x4]
  4077eb:	cmp    r12d,eax
  4077ee:	jge    0x407ad9
  4077f4:	mov    ebx,eax
  4077f6:	sub    ebx,r12d
  4077f9:	cmp    esi,ebx
  4077fb:	jg     0x407b37
  407801:	mov    edx,DWORD PTR [r13+0xc]
  407805:	cmp    edx,0x2
  407808:	je     0x407d12
  40780e:	cmp    edx,0x3
  407811:	je     0x407cef
  407817:	cmp    edx,0x1
  40781a:	je     0x407d22
  407820:	mov    rcx,r14
  407823:	call   0x408550
  407828:	call   0x409278
  40782d:	mov    DWORD PTR [rax],0x22
  407833:	mov    eax,0x50
  407838:	jmp    0x4078f2
  40783d:	nop    DWORD PTR [rax]
  407840:	xor    r12d,r12d
  407843:	mov    r11d,0x1
  407849:	movzx  edx,BYTE PTR [rax+0x1]
  40784d:	cmp    dl,0x2b
  407850:	je     0x407a70
  407856:	cmp    dl,0x2d
  407859:	je     0x407951
  40785f:	movzx  edx,BYTE PTR [rdi+rdx*1]
  407863:	xor    r15d,r15d
  407866:	lea    r9,[rax+0x1]
  40786a:	lea    ecx,[rdx-0x1]
  40786d:	cmp    cl,0x18
  407870:	ja     0x40796f
  407876:	lea    rcx,[r9+0x1]
  40787a:	movzx  r9d,BYTE PTR [r9+0x1]
  40787f:	sub    edx,0x10
  407882:	xor    r10d,r10d
  407885:	movzx  ebp,BYTE PTR [rdi+r9*1]
  40788a:	mov    r9d,ebp
  40788d:	sub    r9d,0x1
  407891:	cmp    r9b,0x18
  407895:	ja     0x4078d1
  407897:	nop    WORD PTR [rax+rax*1+0x0]
  4078a0:	test   edx,0xf8000000
  4078a6:	mov    r9d,0x1
  4078ac:	lea    edx,[rdx+rdx*4]
  4078af:	cmovne r10d,r9d
  4078b3:	add    rcx,0x1
  4078b7:	movzx  r9d,BYTE PTR [rcx]
  4078bb:	lea    edx,[rbp+rdx*2-0x10]
  4078bf:	movzx  ebp,BYTE PTR [rdi+r9*1]
  4078c4:	mov    r9d,ebp
  4078c7:	sub    r9d,0x1
  4078cb:	cmp    r9b,0x18
  4078cf:	jbe    0x4078a0
  4078d1:	mov    r9d,r15d
  4078d4:	mov    rbp,rax
  4078d7:	mov    rax,rcx
  4078da:	neg    r9d
  4078dd:	xor    edx,r9d
  4078e0:	add    edx,r15d
  4078e3:	add    r12d,edx
  4078e6:	jmp    0x4075b4
  4078eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4078f0:	xor    eax,eax
  4078f2:	add    rsp,0x28
  4078f6:	pop    rbx
  4078f7:	pop    rsi
  4078f8:	pop    rdi
  4078f9:	pop    rbp
  4078fa:	pop    r12
  4078fc:	pop    r13
  4078fe:	pop    r14
  407900:	pop    r15
  407902:	ret    
  407903:	mov    DWORD PTR [rax],r9d
  407906:	mov    r8d,0x4
  40790c:	movzx  r10d,BYTE PTR [rbp-0x1]
  407911:	add    rax,0x4
  407915:	xor    r9d,r9d
  407918:	xor    ecx,ecx
  40791a:	jmp    0x40777a
  40791f:	nop
  407920:	call   0x407ed0
  407925:	jmp    0x4074ff
  40792a:	nop    WORD PTR [rax+rax*1+0x0]
  407930:	mov    edx,r9d
  407933:	mov    rax,rbx
  407936:	jmp    0x407590
  40793b:	nop    DWORD PTR [rax+rax*1+0x0]
  407940:	test   r12,r12
  407943:	je     0x407c55
  407949:	movzx  edx,BYTE PTR [rax]
  40794c:	jmp    0x4076d2
  407951:	mov    r15d,0x1
  407957:	movzx  edx,BYTE PTR [rax+0x2]
  40795b:	lea    r9,[rax+0x2]
  40795f:	movzx  edx,BYTE PTR [rdi+rdx*1]
  407963:	lea    ecx,[rdx-0x1]
  407966:	cmp    cl,0x18
  407969:	jbe    0x407876
  40796f:	mov    rbp,rax
  407972:	xor    r10d,r10d
  407975:	jmp    0x4075b4
  40797a:	nop    WORD PTR [rax+rax*1+0x0]
  407980:	cmp    eax,0x2
  407983:	je     0x407b21
  407989:	cmp    eax,0x3
  40798c:	jne    0x407828
  407992:	mov    r10d,DWORD PTR [rsp+0x90]
  40799a:	test   r10d,r10d
  40799d:	je     0x407828
  4079a3:	xor    ecx,ecx
  4079a5:	call   0x408440
  4079aa:	mov    r14,rax
  4079ad:	mov    DWORD PTR [rax+0x14],0x1
  4079b4:	mov    DWORD PTR [rax+0x18],0x1
  4079bb:	mov    eax,DWORD PTR [r13+0x4]
  4079bf:	mov    rdi,QWORD PTR [rsp+0x88]
  4079c7:	mov    QWORD PTR [rdi],r14
  4079ca:	mov    rdi,QWORD PTR [rsp+0x80]
  4079d2:	mov    DWORD PTR [rdi],eax
  4079d4:	call   0x409278
  4079d9:	mov    DWORD PTR [rax],0x22
  4079df:	mov    eax,0x62
  4079e4:	jmp    0x4078f2
  4079e9:	nop    DWORD PTR [rax+0x0]
  4079f0:	mov    rcx,r14
  4079f3:	call   0x408550
  4079f8:	call   0x409278
  4079fd:	mov    DWORD PTR [rax],0x22
  407a03:	mov    eax,0xa3
  407a08:	jmp    0x4078f2
  407a0d:	nop    DWORD PTR [rax]
  407a10:	cmp    cl,0x30
  407a13:	mov    rbx,rax
  407a16:	jne    0x407a36
  407a18:	nop    DWORD PTR [rax+rax*1+0x0]
  407a20:	add    rbx,0x1
  407a24:	movzx  ecx,BYTE PTR [rbx]
  407a27:	cmp    cl,0x30
  407a2a:	je     0x407a20
  407a2c:	movzx  edx,cl
  407a2f:	movzx  r10d,BYTE PTR [rdi+rdx*1]
  407a34:	mov    edx,ecx
  407a36:	xor    r11d,r11d
  407a39:	test   r10b,r10b
  407a3c:	mov    r12,rax
  407a3f:	sete   r11b
  407a43:	mov    r8d,0x1
  407a49:	jmp    0x4076a9
  407a4e:	mov    ebx,esi
  407a50:	mov    rcx,r14
  407a53:	sub    ebx,eax
  407a55:	mov    edx,ebx
  407a57:	sub    r12d,ebx
  407a5a:	call   0x408950
  407a5f:	mov    r14,rax
  407a62:	lea    r15,[rax+0x18]
  407a66:	jmp    0x4077dd
  407a6b:	nop    DWORD PTR [rax+rax*1+0x0]
  407a70:	xor    r15d,r15d
  407a73:	jmp    0x407957
  407a78:	mov    ebx,eax
  407a7a:	mov    rcx,r14
  407a7d:	xor    edi,edi
  407a7f:	sub    ebx,esi
  407a81:	mov    edx,ebx
  407a83:	call   0x4090e0
  407a88:	test   eax,eax
  407a8a:	je     0x407ac7
  407a8c:	lea    ecx,[rbx-0x1]
  407a8f:	mov    r8d,0x1
  407a95:	mov    dil,0x1
  407a98:	mov    eax,ecx
  407a9a:	shl    r8d,cl
  407a9d:	sar    eax,0x5
  407aa0:	cdqe   
  407aa2:	test   DWORD PTR [r15+rax*4],r8d
  407aa6:	je     0x407ac7
  407aa8:	test   ecx,ecx
  407aaa:	jle    0x407cbf
  407ab0:	mov    edx,ecx
  407ab2:	mov    rcx,r14
  407ab5:	call   0x4090e0
  407aba:	test   eax,eax
  407abc:	je     0x407cbf
  407ac2:	mov    edi,0x3
  407ac7:	mov    edx,ebx
  407ac9:	mov    rcx,r14
  407acc:	add    r12d,ebx
  407acf:	call   0x407d90
  407ad4:	jmp    0x4077dd
  407ad9:	mov    ebx,0x1
  407ade:	test   edi,edi
  407ae0:	je     0x407b04
  407ae2:	mov    eax,DWORD PTR [r13+0xc]
  407ae6:	cmp    eax,0x2
  407ae9:	je     0x407b91
  407aef:	cmp    eax,0x3
  407af2:	je     0x407ba4
  407af8:	cmp    eax,0x1
  407afb:	je     0x407cc9
  407b01:	or     ebx,0x10
  407b04:	mov    rax,QWORD PTR [rsp+0x88]
  407b0c:	mov    QWORD PTR [rax],r14
  407b0f:	mov    rax,QWORD PTR [rsp+0x80]
  407b17:	mov    DWORD PTR [rax],r12d
  407b1a:	mov    eax,ebx
  407b1c:	jmp    0x4078f2
  407b21:	mov    r11d,DWORD PTR [rsp+0x90]
  407b29:	test   r11d,r11d
  407b2c:	jne    0x407828
  407b32:	jmp    0x4079a3
  407b37:	test   edi,edi
  407b39:	lea    ebp,[rbx-0x1]
  407b3c:	jne    0x407cb5
  407b42:	test   ebp,ebp
  407b44:	jle    0x407b52
  407b46:	mov    edx,ebp
  407b48:	mov    rcx,r14
  407b4b:	call   0x4090e0
  407b50:	mov    edi,eax
  407b52:	mov    eax,ebp
  407b54:	mov    ecx,ebp
  407b56:	mov    edx,edi
  407b58:	sar    eax,0x5
  407b5b:	mov    r8d,0x1
  407b61:	or     edx,0x2
  407b64:	cdqe   
  407b66:	shl    r8d,cl
  407b69:	mov    rcx,r14
  407b6c:	test   DWORD PTR [r15+rax*4],r8d
  407b70:	cmovne edi,edx
  407b73:	mov    edx,ebx
  407b75:	sub    esi,ebx
  407b77:	call   0x407d90
  407b7c:	mov    ebx,0x2
  407b81:	mov    r12d,DWORD PTR [r13+0x4]
  407b85:	jmp    0x407ade
  407b8a:	xor    eax,eax
  407b8c:	jmp    0x407579
  407b91:	mov    eax,0x1
  407b96:	sub    eax,DWORD PTR [rsp+0x90]
  407b9d:	mov    DWORD PTR [rsp+0x90],eax
  407ba4:	mov    eax,DWORD PTR [rsp+0x90]
  407bab:	test   eax,eax
  407bad:	je     0x407b01
  407bb3:	mov    rcx,r14
  407bb6:	movsxd rdi,DWORD PTR [r14+0x14]
  407bba:	call   0x4052b0
  407bbf:	cmp    ebx,0x2
  407bc2:	mov    r14,rax
  407bc5:	lea    r8,[rax+0x18]
  407bc9:	je     0x407d4f
  407bcf:	cmp    edi,DWORD PTR [rax+0x14]
  407bd2:	jl     0x407bed
  407bd4:	and    esi,0x1f
  407bd7:	je     0x407c08
  407bd9:	bsr    eax,DWORD PTR [r8+rdi*4-0x4]
  407bdf:	mov    edx,0x20
  407be4:	sub    edx,esi
  407be6:	xor    eax,0x1f
  407be9:	cmp    edx,eax
  407beb:	jle    0x407c08
  407bed:	mov    edx,0x1
  407bf2:	mov    rcx,r14
  407bf5:	add    r12d,0x1
  407bf9:	call   0x407d90
  407bfe:	cmp    r12d,DWORD PTR [r13+0x8]
  407c02:	jg     0x4079f0
  407c08:	mov    ebx,0x21
  407c0d:	jmp    0x407b04
  407c12:	mov    r8d,DWORD PTR [rsp+0x90]
  407c1a:	test   r8d,r8d
  407c1d:	jne    0x4079f8
  407c23:	jmp    0x4075fa
  407c28:	mov    r9d,DWORD PTR [rsp+0x90]
  407c30:	test   r9d,r9d
  407c33:	je     0x4079f8
  407c39:	jmp    0x4075fa
  407c3e:	xor    edx,edx
  407c40:	jmp    0x40774e
  407c45:	mov    rax,r15
  407c48:	mov    edx,0x20
  407c4d:	xor    r9d,r9d
  407c50:	jmp    0x4077af
  407c55:	movzx  edx,BYTE PTR [rsi+0x1]
  407c59:	test   dl,dl
  407c5b:	je     0x407d84
  407c61:	cmp    dl,BYTE PTR [rax+0x1]
  407c64:	jne    0x407ce4
  407c66:	mov    r12d,0x2
  407c6c:	jmp    0x407c7b
  407c6e:	xchg   ax,ax
  407c70:	add    r12,0x1
  407c74:	cmp    dl,BYTE PTR [rax+r12*1-0x1]
  407c79:	jne    0x407ce4
  407c7b:	movzx  edx,BYTE PTR [rsi+r12*1]
  407c80:	test   dl,dl
  407c82:	jne    0x407c70
  407c84:	add    r12,rax
  407c87:	movzx  eax,BYTE PTR [r12]
  407c8c:	cmp    BYTE PTR [rdi+rax*1],0x0
  407c90:	mov    rdx,rax
  407c93:	mov    rax,r12
  407c96:	je     0x4076d2
  407c9c:	nop    DWORD PTR [rax+0x0]
  407ca0:	add    rax,0x1
  407ca4:	movzx  ecx,BYTE PTR [rax]
  407ca7:	cmp    BYTE PTR [rdi+rcx*1],0x0
  407cab:	mov    rdx,rcx
  407cae:	jne    0x407ca0
  407cb0:	jmp    0x4076d2
  407cb5:	mov    edi,0x1
  407cba:	jmp    0x407b52
  407cbf:	mov    edi,0x2
  407cc4:	jmp    0x407ac7
  407cc9:	test   dil,0x2
  407ccd:	je     0x407b01
  407cd3:	or     edi,DWORD PTR [r15]
  407cd6:	and    edi,0x1
  407cd9:	jne    0x407bb3
  407cdf:	jmp    0x407b01
  407ce4:	movzx  edx,BYTE PTR [rax]
  407ce7:	xor    r12d,r12d
  407cea:	jmp    0x4076d9
  407cef:	mov    edx,DWORD PTR [rsp+0x90]
  407cf6:	test   edx,edx
  407cf8:	je     0x407820
  407cfe:	mov    DWORD PTR [r14+0x14],0x1
  407d06:	mov    DWORD PTR [r15],0x1
  407d0d:	jmp    0x4079bf
  407d12:	mov    ecx,DWORD PTR [rsp+0x90]
  407d19:	test   ecx,ecx
  407d1b:	je     0x407cfe
  407d1d:	jmp    0x407820
  407d22:	cmp    ebx,esi
  407d24:	jne    0x407820
  407d2a:	cmp    esi,0x1
  407d2d:	jle    0x407cfe
  407d2f:	lea    edx,[rsi-0x1]
  407d32:	mov    rcx,r14
  407d35:	call   0x4090e0
  407d3a:	test   eax,eax
  407d3c:	je     0x407820
  407d42:	mov    eax,DWORD PTR [r13+0x4]
  407d46:	jmp    0x407cfe
  407d48:	xor    edx,edx
  407d4a:	jmp    0x407661
  407d4f:	mov    eax,DWORD PTR [r13+0x0]
  407d53:	mov    bl,0x22
  407d55:	sub    eax,0x1
  407d58:	cmp    eax,esi
  407d5a:	jne    0x407b04
  407d60:	mov    edx,esi
  407d62:	mov    eax,0x1
  407d67:	mov    ecx,esi
  407d69:	sar    edx,0x5
  407d6c:	shl    eax,cl
  407d6e:	movsxd rdx,edx
  407d71:	and    eax,DWORD PTR [r8+rdx*4]
  407d75:	cmp    eax,0x1
  407d78:	sbb    ebx,ebx
  407d7a:	not    ebx
  407d7c:	add    ebx,0x22
  407d7f:	jmp    0x407b04
  407d84:	mov    r12d,0x1
  407d8a:	jmp    0x407c84
  407d8f:	nop
  407d90:	push   rbp
  407d91:	push   rdi
  407d92:	push   rsi
  407d93:	push   rbx
  407d94:	mov    rsi,rcx
  407d97:	lea    r10,[rcx+0x18]
  407d9b:	movsxd rcx,DWORD PTR [rcx+0x14]
  407d9f:	mov    eax,edx
  407da1:	sar    eax,0x5
  407da4:	cmp    eax,ecx
  407da6:	jge    0x407e30
  407dac:	cdqe   
  407dae:	and    edx,0x1f
  407db1:	lea    rbx,[r10+rcx*4]
  407db5:	lea    rdi,[r10+rax*4]
  407db9:	je     0x407e43
  407dbf:	mov    r9d,DWORD PTR [rdi]
  407dc2:	lea    r8,[rdi+0x4]
  407dc6:	mov    ebp,0x20
  407dcb:	mov    ecx,edx
  407dcd:	sub    ebp,edx
  407dcf:	shr    r9d,cl
  407dd2:	cmp    rbx,r8
  407dd5:	jbe    0x407e88
  407ddb:	mov    r11,r10
  407dde:	xchg   ax,ax
  407de0:	mov    eax,DWORD PTR [r8]
  407de3:	mov    ecx,ebp
  407de5:	add    r11,0x4
  407de9:	add    r8,0x4
  407ded:	shl    eax,cl
  407def:	mov    ecx,edx
  407df1:	or     eax,r9d
  407df4:	mov    DWORD PTR [r11-0x4],eax
  407df8:	mov    r9d,DWORD PTR [r8-0x4]
  407dfc:	shr    r9d,cl
  407dff:	cmp    rbx,r8
  407e02:	ja     0x407de0
  407e04:	sub    rbx,rdi
  407e07:	lea    rax,[rbx-0x5]
  407e0b:	shr    rax,0x2
  407e0f:	lea    rax,[r10+rax*4+0x4]
  407e14:	test   r9d,r9d
  407e17:	mov    DWORD PTR [rax],r9d
  407e1a:	je     0x407e20
  407e1c:	add    rax,0x4
  407e20:	sub    rax,r10
  407e23:	shr    rax,0x2
  407e27:	jmp    0x407e7c
  407e29:	nop    DWORD PTR [rax+0x0]
  407e30:	mov    DWORD PTR [rsi+0x14],0x0
  407e37:	mov    DWORD PTR [rsi+0x18],0x0
  407e3e:	pop    rbx
  407e3f:	pop    rsi
  407e40:	pop    rdi
  407e41:	pop    rbp
  407e42:	ret    
  407e43:	cmp    rbx,rdi
  407e46:	mov    rdx,r10
  407e49:	mov    rax,rdi
  407e4c:	jbe    0x407e30
  407e4e:	xchg   ax,ax
  407e50:	add    rax,0x4
  407e54:	mov    r8d,DWORD PTR [rax-0x4]
  407e58:	add    rdx,0x4
  407e5c:	cmp    rbx,rax
  407e5f:	mov    DWORD PTR [rdx-0x4],r8d
  407e63:	ja     0x407e50
  407e65:	not    rdi
  407e68:	lea    rax,[rdi+rbx*1]
  407e6c:	shr    rax,0x2
  407e70:	lea    rax,[rax*4+0x4]
  407e78:	shr    rax,0x2
  407e7c:	test   eax,eax
  407e7e:	mov    DWORD PTR [rsi+0x14],eax
  407e81:	je     0x407e37
  407e83:	pop    rbx
  407e84:	pop    rsi
  407e85:	pop    rdi
  407e86:	pop    rbp
  407e87:	ret    
  407e88:	mov    rax,r10
  407e8b:	jmp    0x407e14
  407e8d:	nop    DWORD PTR [rax]
  407e90:	movsxd rax,DWORD PTR [rcx+0x14]
  407e94:	lea    rdx,[rcx+0x18]
  407e98:	lea    r8,[rdx+rax*4]
  407e9c:	cmp    rdx,r8
  407e9f:	jae    0x407ecb
  407ea1:	mov    ecx,DWORD PTR [rcx+0x18]
  407ea4:	xor    eax,eax
  407ea6:	test   ecx,ecx
  407ea8:	je     0x407eb6
  407eaa:	jmp    0x407ec4
  407eac:	nop    DWORD PTR [rax+0x0]
  407eb0:	mov    ecx,DWORD PTR [rdx]
  407eb2:	test   ecx,ecx
  407eb4:	jne    0x407ec4
  407eb6:	add    rdx,0x4
  407eba:	add    eax,0x20
  407ebd:	cmp    r8,rdx
  407ec0:	ja     0x407eb0
  407ec2:	repz ret 
  407ec4:	tzcnt  ecx,ecx
  407ec8:	add    eax,ecx
  407eca:	ret    
  407ecb:	xor    eax,eax
  407ecd:	ret    
  407ece:	nop
  407ecf:	nop
  407ed0:	lea    r8,[rip+0x3e37]        # 0x40bd0e
  407ed7:	lea    rdx,[rip+0x85e2]        # 0x4104c0
  407ede:	mov    ecx,0x10
  407ee3:	mov    eax,0x30
  407ee8:	nop    DWORD PTR [rax+rax*1+0x0]
  407ef0:	mov    BYTE PTR [rdx+rax*1],cl
  407ef3:	movzx  eax,BYTE PTR [r8+0x1]
  407ef8:	add    ecx,0x1
  407efb:	add    r8,0x1
  407eff:	test   al,al
  407f01:	jne    0x407ef0
  407f03:	lea    r8,[rip+0x3dfd]        # 0x40bd07
  407f0a:	mov    ecx,0x1a
  407f0f:	mov    eax,0x61
  407f14:	mov    BYTE PTR [rdx+rax*1],cl
  407f17:	movzx  eax,BYTE PTR [r8+0x1]
  407f1c:	add    ecx,0x1
  407f1f:	add    r8,0x1
  407f23:	test   al,al
  407f25:	jne    0x407f14
  407f27:	lea    r8,[rip+0x3dd2]        # 0x40bd00
  407f2e:	mov    ecx,0x1a
  407f33:	mov    eax,0x41
  407f38:	nop    DWORD PTR [rax+rax*1+0x0]
  407f40:	mov    BYTE PTR [rdx+rax*1],cl
  407f43:	movzx  eax,BYTE PTR [r8+0x1]
  407f48:	add    ecx,0x1
  407f4b:	add    r8,0x1
  407f4f:	test   al,al
  407f51:	jne    0x407f40
  407f53:	ret    
  407f54:	nop
  407f55:	nop
  407f56:	nop
  407f57:	nop
  407f58:	nop
  407f59:	nop
  407f5a:	nop
  407f5b:	nop
  407f5c:	nop
  407f5d:	nop
  407f5e:	nop
  407f5f:	nop
  407f60:	push   r15
  407f62:	push   r14
  407f64:	push   r13
  407f66:	push   r12
  407f68:	push   rbp
  407f69:	push   rdi
  407f6a:	push   rsi
  407f6b:	push   rbx
  407f6c:	sub    rsp,0x48
  407f70:	mov    r14,QWORD PTR [rip+0x3fb9]        # 0x40bf30
  407f77:	mov    QWORD PTR [rsp+0x90],rcx
  407f7f:	cmp    BYTE PTR [r14+0x30],0x0
  407f84:	je     0x408256
  407f8a:	mov    eax,DWORD PTR [rdx]
  407f8c:	mov    edx,eax
  407f8e:	sar    edx,0x5
  407f91:	and    eax,0x1f
  407f94:	movsxd rdx,edx
  407f97:	mov    DWORD PTR [rsp+0x3c],eax
  407f9b:	mov    rax,QWORD PTR [rsp+0x90]
  407fa3:	lea    rdi,[r8+rdx*4]
  407fa7:	lea    rdx,[rdi+0x4]
  407fab:	mov    rax,QWORD PTR [rax]
  407fae:	cmove  rdx,rdi
  407fb2:	mov    QWORD PTR [rsp+0x30],rdx
  407fb7:	lea    rsi,[rdx-0x4]
  407fbb:	mov    DWORD PTR [rdx-0x4],0x0
  407fc2:	jmp    0x407fc8
  407fc4:	add    rax,0x1
  407fc8:	movzx  edx,BYTE PTR [rax+0x1]
  407fcc:	mov    ecx,edx
  407fce:	sub    edx,0x1
  407fd1:	cmp    edx,0x1f
  407fd4:	jbe    0x407fc4
  407fd6:	cmp    cl,0x30
  407fd9:	je     0x408274
  407fdf:	movzx  edx,BYTE PTR [rax+0x1]
  407fe3:	xor    r9d,r9d
  407fe6:	xor    r15d,r15d
  407fe9:	xor    r12d,r12d
  407fec:	test   edx,edx
  407fee:	mov    rbp,rsi
  407ff1:	mov    r11,rsi
  407ff4:	lea    rbx,[rax+0x1]
  407ff8:	je     0x4080a0
  407ffe:	xchg   ax,ax
  408000:	mov    ecx,edx
  408002:	movzx  ecx,BYTE PTR [r14+rcx*1]
  408007:	test   cl,cl
  408009:	jne    0x408174
  40800f:	cmp    edx,0x20
  408012:	ja     0x408225
  408018:	cmp    r12d,r15d
  40801b:	jle    0x4081b5
  408021:	cmp    r9d,0x7
  408025:	jg     0x40807a
  408027:	cmp    r11,rbp
  40802a:	jae    0x40807a
  40802c:	mov    edi,0x8
  408031:	mov    edx,DWORD PTR [r11]
  408034:	mov    r13d,0x20
  40803a:	sub    edi,r9d
  40803d:	mov    QWORD PTR [rsp+0x28],rax
  408042:	mov    r9,r11
  408045:	shl    edi,0x2
  408048:	sub    r13d,edi
  40804b:	nop    DWORD PTR [rax+rax*1+0x0]
  408050:	mov    r10d,DWORD PTR [r9+0x4]
  408054:	mov    ecx,r13d
  408057:	add    r9,0x4
  40805b:	mov    eax,r10d
  40805e:	shl    eax,cl
  408060:	mov    ecx,edi
  408062:	or     edx,eax
  408064:	mov    DWORD PTR [r9-0x4],edx
  408068:	mov    edx,r10d
  40806b:	shr    edx,cl
  40806d:	mov    DWORD PTR [r9],edx
  408070:	cmp    rbp,r9
  408073:	ja     0x408050
  408075:	mov    rax,QWORD PTR [rsp+0x28]
  40807a:	cmp    r11,r8
  40807d:	ja     0x4081a0
  408083:	mov    rax,rbx
  408086:	mov    r9d,0x8
  40808c:	nop    DWORD PTR [rax+0x0]
  408090:	movzx  edx,BYTE PTR [rax+0x1]
  408094:	lea    rbx,[rax+0x1]
  408098:	test   edx,edx
  40809a:	jne    0x408000
  4080a0:	test   r12d,r12d
  4080a3:	mov    eax,0x4
  4080a8:	je     0x408163
  4080ae:	mov    r10,r11
  4080b1:	cmp    r9d,0x7
  4080b5:	jg     0x408103
  4080b7:	cmp    rbp,r11
  4080ba:	jbe    0x408103
  4080bc:	mov    edi,0x8
  4080c1:	mov    eax,DWORD PTR [r11]
  4080c4:	mov    r12d,0x20
  4080ca:	sub    edi,r9d
  4080cd:	mov    r9,r11
  4080d0:	shl    edi,0x2
  4080d3:	sub    r12d,edi
  4080d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4080e0:	mov    ebx,DWORD PTR [r9+0x4]
  4080e4:	mov    ecx,r12d
  4080e7:	add    r9,0x4
  4080eb:	mov    edx,ebx
  4080ed:	shl    edx,cl
  4080ef:	mov    ecx,edi
  4080f1:	or     eax,edx
  4080f3:	mov    DWORD PTR [r9-0x4],eax
  4080f7:	mov    eax,ebx
  4080f9:	shr    eax,cl
  4080fb:	mov    DWORD PTR [r9],eax
  4080fe:	cmp    rbp,r9
  408101:	ja     0x4080e0
  408103:	cmp    r8,r11
  408106:	jae    0x4082a4
  40810c:	mov    rax,r8
  40810f:	nop
  408110:	add    r10,0x4
  408114:	mov    edx,DWORD PTR [r10-0x4]
  408118:	add    rax,0x4
  40811c:	cmp    rsi,r10
  40811f:	mov    DWORD PTR [rax-0x4],edx
  408122:	jae    0x408110
  408124:	add    rax,0x4
  408128:	mov    DWORD PTR [rax-0x4],0x0
  40812f:	cmp    rsi,rax
  408132:	jae    0x408124
  408134:	mov    rax,QWORD PTR [rsp+0x30]
  408139:	mov    eax,DWORD PTR [rax-0x4]
  40813c:	test   eax,eax
  40813e:	je     0x408153
  408140:	jmp    0x40829a
  408145:	sub    rsi,0x4
  408149:	mov    eax,DWORD PTR [rsi]
  40814b:	test   eax,eax
  40814d:	jne    0x40829a
  408153:	cmp    r8,rsi
  408156:	jne    0x408145
  408158:	mov    DWORD PTR [rsi],0x1
  40815e:	mov    eax,0x5
  408163:	add    rsp,0x48
  408167:	pop    rbx
  408168:	pop    rsi
  408169:	pop    rdi
  40816a:	pop    rbp
  40816b:	pop    r12
  40816d:	pop    r13
  40816f:	pop    r14
  408171:	pop    r15
  408173:	ret    
  408174:	add    r9d,0x1
  408178:	add    r12d,0x1
  40817c:	cmp    r9d,0x8
  408180:	jg     0x408200
  408182:	mov    eax,DWORD PTR [r11]
  408185:	shl    eax,0x4
  408188:	and    ecx,0xf
  40818b:	or     ecx,eax
  40818d:	mov    rax,rbx
  408190:	mov    DWORD PTR [r11],ecx
  408193:	jmp    0x408090
  408198:	nop    DWORD PTR [rax+rax*1+0x0]
  4081a0:	lea    rbp,[r11-0x4]
  4081a4:	mov    DWORD PTR [r11-0x4],0x0
  4081ac:	mov    r15d,r12d
  4081af:	xor    r9d,r9d
  4081b2:	mov    r11,rbp
  4081b5:	movzx  edx,BYTE PTR [rax+0x2]
  4081b9:	mov    rax,rbx
  4081bc:	cmp    dl,0x20
  4081bf:	ja     0x4081ce
  4081c1:	add    rax,0x1
  4081c5:	movzx  edx,BYTE PTR [rax+0x1]
  4081c9:	cmp    dl,0x20
  4081cc:	jbe    0x4081c1
  4081ce:	cmp    dl,0x30
  4081d1:	jne    0x408090
  4081d7:	movzx  edx,BYTE PTR [rax+0x2]
  4081db:	and    edx,0xffffffdf
  4081de:	cmp    dl,0x58
  4081e1:	jne    0x408090
  4081e7:	cmp    BYTE PTR [rax+0x3],0x21
  4081eb:	lea    rdx,[rax+0x2]
  4081ef:	cmovae rax,rdx
  4081f3:	jmp    0x408090
  4081f8:	nop    DWORD PTR [rax+rax*1+0x0]
  408200:	cmp    r11,r8
  408203:	mov    rax,rbx
  408206:	jbe    0x408090
  40820c:	mov    DWORD PTR [r11-0x4],0x0
  408214:	xor    eax,eax
  408216:	sub    r11,0x4
  40821a:	mov    r9d,0x1
  408220:	jmp    0x408188
  408225:	cmp    edx,0x29
  408228:	mov    rcx,rbx
  40822b:	sete   dl
  40822e:	test   r12d,r12d
  408231:	je     0x4082d0
  408237:	test   dl,dl
  408239:	je     0x4082d4
  40823f:	mov    rbx,QWORD PTR [rsp+0x90]
  408247:	add    rax,0x2
  40824b:	mov    r10,r11
  40824e:	mov    QWORD PTR [rbx],rax
  408251:	jmp    0x4080b1
  408256:	mov    QWORD PTR [rsp+0x30],r8
  40825b:	mov    QWORD PTR [rsp+0x28],rdx
  408260:	call   0x407ed0
  408265:	mov    r8,QWORD PTR [rsp+0x30]
  40826a:	mov    rdx,QWORD PTR [rsp+0x28]
  40826f:	jmp    0x407f8a
  408274:	movzx  edx,BYTE PTR [rax+0x2]
  408278:	and    edx,0xffffffdf
  40827b:	cmp    dl,0x58
  40827e:	jne    0x407fdf
  408284:	movzx  edx,BYTE PTR [rax+0x3]
  408288:	cmp    dl,0x20
  40828b:	jbe    0x407fdf
  408291:	add    rax,0x2
  408295:	jmp    0x407fe3
  40829a:	mov    eax,0x5
  40829f:	jmp    0x408163
  4082a4:	mov    edx,DWORD PTR [rsp+0x3c]
  4082a8:	test   edx,edx
  4082aa:	je     0x408134
  4082b0:	mov    ecx,0x20
  4082b5:	sub    ecx,DWORD PTR [rsp+0x3c]
  4082b9:	mov    rbx,QWORD PTR [rsp+0x30]
  4082be:	mov    eax,0xffffffff
  4082c3:	shr    eax,cl
  4082c5:	and    eax,DWORD PTR [rbx-0x4]
  4082c8:	mov    DWORD PTR [rbx-0x4],eax
  4082cb:	jmp    0x40813c
  4082d0:	test   dl,dl
  4082d2:	jne    0x4082f2
  4082d4:	movsx  eax,BYTE PTR [rbx+0x1]
  4082d8:	lea    rcx,[rbx+0x1]
  4082dc:	test   eax,eax
  4082de:	jne    0x4082ed
  4082e0:	jmp    0x40830b
  4082e2:	add    rcx,0x1
  4082e6:	movsx  eax,BYTE PTR [rcx]
  4082e9:	test   eax,eax
  4082eb:	je     0x40830b
  4082ed:	cmp    eax,0x29
  4082f0:	jne    0x4082e2
  4082f2:	mov    rax,QWORD PTR [rsp+0x90]
  4082fa:	add    rcx,0x1
  4082fe:	mov    QWORD PTR [rax],rcx
  408301:	mov    eax,0x4
  408306:	jmp    0x408163
  40830b:	mov    al,0x4
  40830d:	jmp    0x408163
  408312:	nop
  408313:	nop
  408314:	nop
  408315:	nop
  408316:	nop
  408317:	nop
  408318:	nop
  408319:	nop
  40831a:	nop
  40831b:	nop
  40831c:	nop
  40831d:	nop
  40831e:	nop
  40831f:	nop
  408320:	push   rsi
  408321:	push   rbx
  408322:	sub    rsp,0x28
  408326:	mov    eax,DWORD PTR [rip+0x8064]        # 0x410390
  40832c:	movsxd rsi,ecx
  40832f:	cmp    eax,0x2
  408332:	je     0x40839d
  408334:	test   eax,eax
  408336:	je     0x408362
  408338:	cmp    eax,0x1
  40833b:	jne    0x40835b
  40833d:	mov    rbx,QWORD PTR [rip+0x924c]        # 0x411590
  408344:	mov    ecx,0x1
  408349:	call   rbx
  40834b:	mov    eax,DWORD PTR [rip+0x803f]        # 0x410390
  408351:	cmp    eax,0x1
  408354:	je     0x408344
  408356:	cmp    eax,0x2
  408359:	je     0x40839d
  40835b:	add    rsp,0x28
  40835f:	pop    rbx
  408360:	pop    rsi
  408361:	ret    
  408362:	mov    al,0x1
  408364:	xchg   DWORD PTR [rip+0x8026],eax        # 0x410390
  40836a:	test   eax,eax
  40836c:	jne    0x4083c0
  40836e:	lea    rcx,[rip+0x804b]        # 0x4103c0
  408375:	mov    rbx,QWORD PTR [rip+0x91d4]        # 0x411550
  40837c:	call   rbx
  40837e:	lea    rcx,[rip+0x8063]        # 0x4103e8
  408385:	call   rbx
  408387:	lea    rcx,[rip+0x62]        # 0x4083f0
  40838e:	call   0x4038a0
  408393:	mov    DWORD PTR [rip+0x7ff3],0x2        # 0x410390
  40839d:	lea    rdx,[rsi+rsi*4]
  4083a1:	lea    rax,[rip+0x8018]        # 0x4103c0
  4083a8:	lea    rcx,[rax+rdx*8]
  4083ac:	mov    rax,QWORD PTR [rip+0x915d]        # 0x411510
  4083b3:	add    rsp,0x28
  4083b7:	pop    rbx
  4083b8:	pop    rsi
  4083b9:	rex.W jmp rax
  4083bc:	nop    DWORD PTR [rax+0x0]
  4083c0:	cmp    eax,0x2
  4083c3:	je     0x4083e0
  4083c5:	mov    eax,DWORD PTR [rip+0x7fc5]        # 0x410390
  4083cb:	cmp    eax,0x1
  4083ce:	je     0x40833d
  4083d4:	jmp    0x408356
  4083d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4083e0:	mov    DWORD PTR [rip+0x7fa6],0x2        # 0x410390
  4083ea:	jmp    0x40839d
  4083ec:	nop    DWORD PTR [rax+0x0]
  4083f0:	push   rbx
  4083f1:	sub    rsp,0x20
  4083f5:	mov    eax,0x3
  4083fa:	xchg   DWORD PTR [rip+0x7f90],eax        # 0x410390
  408400:	cmp    eax,0x2
  408403:	je     0x408410
  408405:	add    rsp,0x20
  408409:	pop    rbx
  40840a:	ret    
  40840b:	nop    DWORD PTR [rax+rax*1+0x0]
  408410:	mov    rbx,QWORD PTR [rip+0x90f1]        # 0x411508
  408417:	lea    rcx,[rip+0x7fa2]        # 0x4103c0
  40841e:	call   rbx
  408420:	lea    rcx,[rip+0x7fc1]        # 0x4103e8
  408427:	mov    rax,rbx
  40842a:	add    rsp,0x20
  40842e:	pop    rbx
  40842f:	rex.W jmp rax
  408432:	nop    DWORD PTR [rax+0x0]
  408436:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408440:	push   rdi
  408441:	push   rsi
  408442:	push   rbx
  408443:	sub    rsp,0x20
  408447:	mov    ebx,ecx
  408449:	xor    ecx,ecx
  40844b:	call   0x408320
  408450:	cmp    ebx,0x9
  408453:	jg     0x408490
  408455:	lea    rdx,[rip+0x7ee4]        # 0x410340
  40845c:	movsxd rcx,ebx
  40845f:	mov    rdi,QWORD PTR [rdx+rcx*8]
  408463:	test   rdi,rdi
  408466:	je     0x4084f0
  40846c:	cmp    DWORD PTR [rip+0x7f1d],0x2        # 0x410390
  408473:	mov    r8,QWORD PTR [rdi]
  408476:	mov    QWORD PTR [rdx+rcx*8],r8
  40847a:	jne    0x4084d6
  40847c:	lea    rcx,[rip+0x7f3d]        # 0x4103c0
  408483:	call   QWORD PTR [rip+0x90cf]        # 0x411558
  408489:	jmp    0x4084d6
  40848b:	nop    DWORD PTR [rax+rax*1+0x0]
  408490:	mov    eax,0x1
  408495:	mov    ecx,ebx
  408497:	shl    eax,cl
  408499:	mov    esi,eax
  40849b:	lea    eax,[rax-0x1]
  40849e:	cdqe   
  4084a0:	lea    rdx,[rax*4+0x27]
  4084a8:	shr    rdx,0x3
  4084ac:	mov    edx,edx
  4084ae:	lea    rcx,[rdx*8+0x0]
  4084b6:	call   0x4091f0
  4084bb:	test   rax,rax
  4084be:	mov    rdi,rax
  4084c1:	je     0x40854a
  4084c7:	cmp    DWORD PTR [rip+0x7ec2],0x2        # 0x410390
  4084ce:	mov    DWORD PTR [rdi+0x8],ebx
  4084d1:	mov    DWORD PTR [rdi+0xc],esi
  4084d4:	je     0x40847c
  4084d6:	mov    DWORD PTR [rdi+0x14],0x0
  4084dd:	mov    DWORD PTR [rdi+0x10],0x0
  4084e4:	mov    rax,rdi
  4084e7:	add    rsp,0x20
  4084eb:	pop    rbx
  4084ec:	pop    rsi
  4084ed:	pop    rdi
  4084ee:	ret    
  4084ef:	nop
  4084f0:	mov    ecx,ebx
  4084f2:	mov    eax,0x1
  4084f7:	mov    rdi,QWORD PTR [rip+0x1b82]        # 0x40a080
  4084fe:	shl    eax,cl
  408500:	lea    rcx,[rip+0x7539]        # 0x40fa40
  408507:	lea    edx,[rax-0x1]
  40850a:	mov    esi,eax
  40850c:	mov    rax,rdi
  40850f:	movsxd rdx,edx
  408512:	sub    rax,rcx
  408515:	lea    rdx,[rdx*4+0x27]
  40851d:	mov    rcx,rax
  408520:	sar    rcx,0x3
  408524:	shr    rdx,0x3
  408528:	mov    edx,edx
  40852a:	add    rcx,rdx
  40852d:	cmp    rcx,0x120
  408534:	ja     0x4084ae
  40853a:	lea    rdx,[rdi+rdx*8]
  40853e:	mov    QWORD PTR [rip+0x1b3b],rdx        # 0x40a080
  408545:	jmp    0x4084c7
  40854a:	xor    eax,eax
  40854c:	jmp    0x4084e7
  40854e:	xchg   ax,ax
  408550:	push   rbx
  408551:	sub    rsp,0x20
  408555:	test   rcx,rcx
  408558:	je     0x408589
  40855a:	cmp    DWORD PTR [rcx+0x8],0x9
  40855e:	jg     0x408590
  408560:	mov    rbx,rcx
  408563:	xor    ecx,ecx
  408565:	call   0x408320
  40856a:	movsxd rdx,DWORD PTR [rbx+0x8]
  40856e:	lea    rax,[rip+0x7dcb]        # 0x410340
  408575:	cmp    DWORD PTR [rip+0x7e14],0x2        # 0x410390
  40857c:	mov    rcx,QWORD PTR [rax+rdx*8]
  408580:	mov    QWORD PTR [rax+rdx*8],rbx
  408584:	mov    QWORD PTR [rbx],rcx
  408587:	je     0x4085a0
  408589:	add    rsp,0x20
  40858d:	pop    rbx
  40858e:	ret    
  40858f:	nop
  408590:	add    rsp,0x20
  408594:	pop    rbx
  408595:	jmp    0x409220
  40859a:	nop    WORD PTR [rax+rax*1+0x0]
  4085a0:	mov    rax,QWORD PTR [rip+0x8fb1]        # 0x411558
  4085a7:	lea    rcx,[rip+0x7e12]        # 0x4103c0
  4085ae:	add    rsp,0x20
  4085b2:	pop    rbx
  4085b3:	rex.W jmp rax
  4085b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4085c0:	push   rbp
  4085c1:	push   rdi
  4085c2:	push   rsi
  4085c3:	push   rbx
  4085c4:	sub    rsp,0x28
  4085c8:	mov    esi,DWORD PTR [rcx+0x14]
  4085cb:	xor    r9d,r9d
  4085ce:	lea    r10,[rcx+0x18]
  4085d2:	mov    rdi,rcx
  4085d5:	movsxd rbx,r8d
  4085d8:	movsxd rdx,edx
  4085db:	nop    DWORD PTR [rax+rax*1+0x0]
  4085e0:	mov    eax,DWORD PTR [r10+r9*4]
  4085e4:	imul   rax,rdx
  4085e8:	add    rax,rbx
  4085eb:	mov    rbx,rax
  4085ee:	mov    DWORD PTR [r10+r9*4],eax
  4085f2:	add    r9,0x1
  4085f6:	shr    rbx,0x20
  4085fa:	cmp    esi,r9d
  4085fd:	jg     0x4085e0
  4085ff:	test   rbx,rbx
  408602:	mov    rax,rdi
  408605:	je     0x40861c
  408607:	cmp    esi,DWORD PTR [rdi+0xc]
  40860a:	jge    0x408625
  40860c:	movsxd rax,esi
  40860f:	add    esi,0x1
  408612:	mov    DWORD PTR [rdi+rax*4+0x18],ebx
  408616:	mov    DWORD PTR [rdi+0x14],esi
  408619:	mov    rax,rdi
  40861c:	add    rsp,0x28
  408620:	pop    rbx
  408621:	pop    rsi
  408622:	pop    rdi
  408623:	pop    rbp
  408624:	ret    
  408625:	mov    eax,DWORD PTR [rdi+0x8]
  408628:	lea    ecx,[rax+0x1]
  40862b:	call   0x408440
  408630:	test   rax,rax
  408633:	mov    rbp,rax
  408636:	je     0x40866e
  408638:	lea    rcx,[rax+0x10]
  40863c:	movsxd rax,DWORD PTR [rdi+0x14]
  408640:	lea    rdx,[rdi+0x10]
  408644:	lea    r8,[rax*4+0x8]
  40864c:	call   0x4091e8
  408651:	mov    rcx,rdi
  408654:	mov    rdi,rbp
  408657:	call   0x408550
  40865c:	movsxd rax,esi
  40865f:	add    esi,0x1
  408662:	mov    DWORD PTR [rdi+rax*4+0x18],ebx
  408666:	mov    DWORD PTR [rdi+0x14],esi
  408669:	mov    rax,rdi
  40866c:	jmp    0x40861c
  40866e:	xor    eax,eax
  408670:	jmp    0x40861c
  408672:	nop    DWORD PTR [rax+0x0]
  408676:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408680:	push   rbx
  408681:	sub    rsp,0x20
  408685:	mov    ebx,ecx
  408687:	mov    ecx,0x1
  40868c:	call   0x408440
  408691:	test   rax,rax
  408694:	je     0x4086a0
  408696:	mov    DWORD PTR [rax+0x18],ebx
  408699:	mov    DWORD PTR [rax+0x14],0x1
  4086a0:	add    rsp,0x20
  4086a4:	pop    rbx
  4086a5:	ret    
  4086a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4086b0:	push   r14
  4086b2:	push   r13
  4086b4:	push   r12
  4086b6:	push   rbp
  4086b7:	push   rdi
  4086b8:	push   rsi
  4086b9:	push   rbx
  4086ba:	sub    rsp,0x20
  4086be:	movsxd r13,DWORD PTR [rcx+0x14]
  4086c2:	movsxd rbx,DWORD PTR [rdx+0x14]
  4086c6:	mov    r12,rcx
  4086c9:	mov    r14,rdx
  4086cc:	cmp    r13d,ebx
  4086cf:	jl     0x4087d1
  4086d5:	mov    eax,ebx
  4086d7:	movsxd rbx,r13d
  4086da:	movsxd r13,eax
  4086dd:	xor    eax,eax
  4086df:	lea    esi,[rbx+r13*1]
  4086e3:	cmp    esi,DWORD PTR [r12+0xc]
  4086e8:	setg   al
  4086eb:	add    eax,DWORD PTR [r12+0x8]
  4086f0:	mov    ecx,eax
  4086f2:	call   0x408440
  4086f7:	test   rax,rax
  4086fa:	je     0x4087dc
  408700:	lea    rdi,[rax+0x18]
  408704:	movsxd rdx,esi
  408707:	lea    rbp,[rdi+rdx*4]
  40870b:	mov    r8,rdi
  40870e:	cmp    rdi,rbp
  408711:	jae    0x408723
  408713:	mov    DWORD PTR [r8],0x0
  40871a:	add    r8,0x4
  40871e:	cmp    rbp,r8
  408721:	ja     0x408713
  408723:	lea    rdx,[r14+0x18]
  408727:	add    r12,0x18
  40872b:	lea    rbx,[r12+rbx*4]
  40872f:	lea    r13,[rdx+r13*4]
  408733:	cmp    rdx,r13
  408736:	jae    0x408799
  408738:	nop    DWORD PTR [rax+rax*1+0x0]
  408740:	add    rdx,0x4
  408744:	mov    r11d,DWORD PTR [rdx-0x4]
  408748:	test   r11d,r11d
  40874b:	je     0x408790
  40874d:	mov    r9,rdi
  408750:	mov    r8,r12
  408753:	xor    r10d,r10d
  408756:	jmp    0x408763
  408758:	nop    DWORD PTR [rax+rax*1+0x0]
  408760:	mov    r9,r14
  408763:	add    r8,0x4
  408767:	mov    ecx,DWORD PTR [r8-0x4]
  40876b:	mov    r14d,DWORD PTR [r9]
  40876e:	imul   rcx,r11
  408772:	add    rcx,r14
  408775:	lea    r14,[r9+0x4]
  408779:	add    rcx,r10
  40877c:	mov    r10,rcx
  40877f:	mov    DWORD PTR [r14-0x4],ecx
  408783:	shr    r10,0x20
  408787:	cmp    rbx,r8
  40878a:	ja     0x408760
  40878c:	mov    DWORD PTR [r9+0x4],r10d
  408790:	add    rdi,0x4
  408794:	cmp    r13,rdx
  408797:	ja     0x408740
  408799:	test   esi,esi
  40879b:	jle    0x4087bf
  40879d:	mov    r8d,DWORD PTR [rbp-0x4]
  4087a1:	lea    rdx,[rbp-0x4]
  4087a5:	test   r8d,r8d
  4087a8:	je     0x4087ba
  4087aa:	jmp    0x4087bf
  4087ac:	nop    DWORD PTR [rax+0x0]
  4087b0:	sub    rdx,0x4
  4087b4:	mov    ecx,DWORD PTR [rdx]
  4087b6:	test   ecx,ecx
  4087b8:	jne    0x4087bf
  4087ba:	sub    esi,0x1
  4087bd:	jne    0x4087b0
  4087bf:	mov    DWORD PTR [rax+0x14],esi
  4087c2:	add    rsp,0x20
  4087c6:	pop    rbx
  4087c7:	pop    rsi
  4087c8:	pop    rdi
  4087c9:	pop    rbp
  4087ca:	pop    r12
  4087cc:	pop    r13
  4087ce:	pop    r14
  4087d0:	ret    
  4087d1:	mov    r12,rdx
  4087d4:	mov    r14,rcx
  4087d7:	jmp    0x4086dd
  4087dc:	xor    eax,eax
  4087de:	jmp    0x4087c2
  4087e0:	push   rbp
  4087e1:	push   rdi
  4087e2:	push   rsi
  4087e3:	push   rbx
  4087e4:	sub    rsp,0x28
  4087e8:	mov    eax,edx
  4087ea:	mov    rbp,rcx
  4087ed:	mov    ebx,edx
  4087ef:	and    eax,0x3
  4087f2:	jne    0x408880
  4087f8:	sar    ebx,0x2
  4087fb:	mov    rax,rbp
  4087fe:	test   ebx,ebx
  408800:	je     0x40884c
  408802:	mov    rdi,QWORD PTR [rip+0x71f7]        # 0x40fa00
  408809:	test   rdi,rdi
  40880c:	jne    0x408822
  40880e:	jmp    0x4088cd
  408813:	sar    ebx,1
  408815:	je     0x408849
  408817:	mov    rsi,QWORD PTR [rdi]
  40881a:	test   rsi,rsi
  40881d:	je     0x408855
  40881f:	mov    rdi,rsi
  408822:	test   bl,0x1
  408825:	je     0x408813
  408827:	mov    rdx,rdi
  40882a:	mov    rcx,rbp
  40882d:	call   0x4086b0
  408832:	test   rax,rax
  408835:	mov    rsi,rax
  408838:	je     0x4088a3
  40883a:	mov    rcx,rbp
  40883d:	mov    rbp,rsi
  408840:	call   0x408550
  408845:	sar    ebx,1
  408847:	jne    0x408817
  408849:	mov    rax,rbp
  40884c:	add    rsp,0x28
  408850:	pop    rbx
  408851:	pop    rsi
  408852:	pop    rdi
  408853:	pop    rbp
  408854:	ret    
  408855:	mov    ecx,0x1
  40885a:	call   0x408320
  40885f:	mov    rsi,QWORD PTR [rdi]
  408862:	test   rsi,rsi
  408865:	je     0x4088ae
  408867:	cmp    DWORD PTR [rip+0x7b22],0x2        # 0x410390
  40886e:	jne    0x40881f
  408870:	lea    rcx,[rip+0x7b71]        # 0x4103e8
  408877:	call   QWORD PTR [rip+0x8cdb]        # 0x411558
  40887d:	jmp    0x40881f
  40887f:	nop
  408880:	sub    eax,0x1
  408883:	lea    rdx,[rip+0x34b6]        # 0x40bd40
  40888a:	xor    r8d,r8d
  40888d:	cdqe   
  40888f:	mov    edx,DWORD PTR [rdx+rax*4]
  408892:	call   0x4085c0
  408897:	test   rax,rax
  40889a:	mov    rbp,rax
  40889d:	jne    0x4087f8
  4088a3:	xor    eax,eax
  4088a5:	add    rsp,0x28
  4088a9:	pop    rbx
  4088aa:	pop    rsi
  4088ab:	pop    rdi
  4088ac:	pop    rbp
  4088ad:	ret    
  4088ae:	mov    rdx,rdi
  4088b1:	mov    rcx,rdi
  4088b4:	call   0x4086b0
  4088b9:	test   rax,rax
  4088bc:	mov    rsi,rax
  4088bf:	mov    QWORD PTR [rdi],rax
  4088c2:	je     0x4088a3
  4088c4:	mov    QWORD PTR [rax],0x0
  4088cb:	jmp    0x408867
  4088cd:	mov    ecx,0x1
  4088d2:	call   0x408320
  4088d7:	mov    rdi,QWORD PTR [rip+0x7122]        # 0x40fa00
  4088de:	test   rdi,rdi
  4088e1:	je     0x408902
  4088e3:	cmp    DWORD PTR [rip+0x7aa6],0x2        # 0x410390
  4088ea:	jne    0x408822
  4088f0:	lea    rcx,[rip+0x7af1]        # 0x4103e8
  4088f7:	call   QWORD PTR [rip+0x8c5b]        # 0x411558
  4088fd:	jmp    0x408822
  408902:	mov    ecx,0x1
  408907:	call   0x408440
  40890c:	test   rax,rax
  40890f:	mov    rdi,rax
  408912:	je     0x408932
  408914:	mov    DWORD PTR [rax+0x18],0x271
  40891b:	mov    DWORD PTR [rax+0x14],0x1
  408922:	mov    QWORD PTR [rip+0x70d7],rax        # 0x40fa00
  408929:	mov    QWORD PTR [rax],0x0
  408930:	jmp    0x4088e3
  408932:	mov    QWORD PTR [rip+0x70c3],0x0        # 0x40fa00
  40893d:	xor    eax,eax
  40893f:	jmp    0x4088a5
  408944:	xchg   ax,ax
  408946:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408950:	push   r13
  408952:	push   r12
  408954:	push   rbp
  408955:	push   rdi
  408956:	push   rsi
  408957:	push   rbx
  408958:	sub    rsp,0x28
  40895c:	mov    rdi,rcx
  40895f:	mov    ebp,edx
  408961:	mov    esi,edx
  408963:	mov    r12d,DWORD PTR [rdi+0x14]
  408967:	sar    ebp,0x5
  40896a:	mov    eax,DWORD PTR [rdi+0xc]
  40896d:	mov    ecx,DWORD PTR [rcx+0x8]
  408970:	add    r12d,ebp
  408973:	lea    ebx,[r12+0x1]
  408978:	cmp    ebx,eax
  40897a:	jle    0x408989
  40897c:	nop    DWORD PTR [rax+0x0]
  408980:	add    eax,eax
  408982:	add    ecx,0x1
  408985:	cmp    ebx,eax
  408987:	jg     0x408980
  408989:	call   0x408440
  40898e:	test   rax,rax
  408991:	mov    r13,rax
  408994:	je     0x408a5f
  40899a:	test   ebp,ebp
  40899c:	lea    r8,[rax+0x18]
  4089a0:	jle    0x408a57
  4089a6:	lea    eax,[rbp-0x1]
  4089a9:	lea    r9,[r8+rax*4+0x4]
  4089ae:	xchg   ax,ax
  4089b0:	add    r8,0x4
  4089b4:	mov    DWORD PTR [r8-0x4],0x0
  4089bc:	cmp    r8,r9
  4089bf:	jne    0x4089b0
  4089c1:	movsxd rax,DWORD PTR [rdi+0x14]
  4089c5:	lea    r8,[rdi+0x18]
  4089c9:	mov    edx,esi
  4089cb:	and    edx,0x1f
  4089ce:	lea    rbp,[r8+rax*4]
  4089d2:	je     0x408a40
  4089d4:	mov    eax,0x20
  4089d9:	xor    r11d,r11d
  4089dc:	sub    eax,edx
  4089de:	jmp    0x4089e3
  4089e0:	mov    r9,rsi
  4089e3:	mov    r10d,DWORD PTR [r8]
  4089e6:	mov    ecx,edx
  4089e8:	lea    rsi,[r9+0x4]
  4089ec:	add    r8,0x4
  4089f0:	shl    r10d,cl
  4089f3:	mov    ecx,eax
  4089f5:	or     r10d,r11d
  4089f8:	mov    DWORD PTR [rsi-0x4],r10d
  4089fc:	mov    r11d,DWORD PTR [r8-0x4]
  408a00:	shr    r11d,cl
  408a03:	cmp    rbp,r8
  408a06:	ja     0x4089e0
  408a08:	add    r12d,0x2
  408a0c:	test   r11d,r11d
  408a0f:	mov    DWORD PTR [r9+0x4],r11d
  408a13:	cmovne ebx,r12d
  408a17:	sub    ebx,0x1
  408a1a:	mov    rcx,rdi
  408a1d:	mov    DWORD PTR [r13+0x14],ebx
  408a21:	call   0x408550
  408a26:	mov    rax,r13
  408a29:	add    rsp,0x28
  408a2d:	pop    rbx
  408a2e:	pop    rsi
  408a2f:	pop    rdi
  408a30:	pop    rbp
  408a31:	pop    r12
  408a33:	pop    r13
  408a35:	ret    
  408a36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408a40:	add    r8,0x4
  408a44:	mov    edx,DWORD PTR [r8-0x4]
  408a48:	add    r9,0x4
  408a4c:	cmp    rbp,r8
  408a4f:	mov    DWORD PTR [r9-0x4],edx
  408a53:	ja     0x408a40
  408a55:	jmp    0x408a17
  408a57:	mov    r9,r8
  408a5a:	jmp    0x4089c1
  408a5f:	xor    eax,eax
  408a61:	jmp    0x408a29
  408a63:	nop    DWORD PTR [rax]
  408a66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408a70:	movsxd r8,DWORD PTR [rdx+0x14]
  408a74:	mov    eax,DWORD PTR [rcx+0x14]
  408a77:	sub    eax,r8d
  408a7a:	test   eax,eax
  408a7c:	jne    0x408ab2
  408a7e:	shl    r8,0x2
  408a82:	add    rcx,0x18
  408a86:	lea    rax,[rcx+r8*1]
  408a8a:	lea    rdx,[rdx+r8*1+0x18]
  408a8f:	jmp    0x408a96
  408a91:	cmp    rcx,rax
  408a94:	jae    0x408ab0
  408a96:	sub    rdx,0x4
  408a9a:	sub    rax,0x4
  408a9e:	mov    r9d,DWORD PTR [rdx]
  408aa1:	cmp    DWORD PTR [rax],r9d
  408aa4:	je     0x408a91
  408aa6:	sbb    eax,eax
  408aa8:	or     eax,0x1
  408aab:	ret    
  408aac:	nop    DWORD PTR [rax+0x0]
  408ab0:	xor    eax,eax
  408ab2:	repz ret 
  408ab4:	xchg   ax,ax
  408ab6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408ac0:	push   rdi
  408ac1:	push   rsi
  408ac2:	push   rbx
  408ac3:	sub    rsp,0x20
  408ac7:	mov    rsi,rcx
  408aca:	mov    rdi,rdx
  408acd:	call   0x408a70
  408ad2:	test   eax,eax
  408ad4:	je     0x408bc0
  408ada:	mov    ebx,0x0
  408adf:	js     0x408be2
  408ae5:	mov    ecx,DWORD PTR [rsi+0x8]
  408ae8:	call   0x408440
  408aed:	test   rax,rax
  408af0:	je     0x408bf2
  408af6:	movsxd rdx,DWORD PTR [rsi+0x14]
  408afa:	lea    rcx,[rsi+0x18]
  408afe:	mov    DWORD PTR [rax+0x10],ebx
  408b01:	lea    r10,[rdi+0x18]
  408b05:	xor    r9d,r9d
  408b08:	mov    rbx,rdx
  408b0b:	lea    rsi,[rcx+rdx*4]
  408b0f:	movsxd rdx,DWORD PTR [rdi+0x14]
  408b13:	lea    rdi,[r10+rdx*4]
  408b17:	lea    rdx,[rax+0x18]
  408b1b:	nop    DWORD PTR [rax+rax*1+0x0]
  408b20:	add    rcx,0x4
  408b24:	add    r10,0x4
  408b28:	mov    r11d,DWORD PTR [r10-0x4]
  408b2c:	mov    r8d,DWORD PTR [rcx-0x4]
  408b30:	add    rdx,0x4
  408b34:	sub    r8,r11
  408b37:	sub    r8,r9
  408b3a:	mov    r9,r8
  408b3d:	mov    r11d,r8d
  408b40:	mov    DWORD PTR [rdx-0x4],r8d
  408b44:	shr    r9,0x20
  408b48:	and    r9d,0x1
  408b4c:	cmp    rdi,r10
  408b4f:	ja     0x408b20
  408b51:	cmp    rsi,rcx
  408b54:	mov    rdi,rdx
  408b57:	mov    r10,rcx
  408b5a:	jbe    0x408b96
  408b5c:	nop    DWORD PTR [rax+0x0]
  408b60:	add    rcx,0x4
  408b64:	mov    r8d,DWORD PTR [rcx-0x4]
  408b68:	add    rdx,0x4
  408b6c:	sub    r8,r9
  408b6f:	mov    r9,r8
  408b72:	mov    r11d,r8d
  408b75:	mov    DWORD PTR [rdx-0x4],r8d
  408b79:	shr    r9,0x20
  408b7d:	and    r9d,0x1
  408b81:	cmp    rsi,rcx
  408b84:	ja     0x408b60
  408b86:	not    r10
  408b89:	lea    rdx,[r10+rsi*1]
  408b8d:	shr    rdx,0x2
  408b91:	lea    rdx,[rdi+rdx*4+0x4]
  408b96:	sub    rdx,0x4
  408b9a:	test   r11d,r11d
  408b9d:	jne    0x408bad
  408b9f:	nop
  408ba0:	sub    rdx,0x4
  408ba4:	mov    ecx,DWORD PTR [rdx]
  408ba6:	sub    ebx,0x1
  408ba9:	test   ecx,ecx
  408bab:	je     0x408ba0
  408bad:	mov    DWORD PTR [rax+0x14],ebx
  408bb0:	add    rsp,0x20
  408bb4:	pop    rbx
  408bb5:	pop    rsi
  408bb6:	pop    rdi
  408bb7:	ret    
  408bb8:	nop    DWORD PTR [rax+rax*1+0x0]
  408bc0:	xor    ecx,ecx
  408bc2:	call   0x408440
  408bc7:	test   rax,rax
  408bca:	je     0x408bf2
  408bcc:	mov    DWORD PTR [rax+0x14],0x1
  408bd3:	mov    DWORD PTR [rax+0x18],0x0
  408bda:	add    rsp,0x20
  408bde:	pop    rbx
  408bdf:	pop    rsi
  408be0:	pop    rdi
  408be1:	ret    
  408be2:	mov    rax,rsi
  408be5:	mov    bl,0x1
  408be7:	mov    rsi,rdi
  408bea:	mov    rdi,rax
  408bed:	jmp    0x408ae5
  408bf2:	xor    eax,eax
  408bf4:	jmp    0x408bb0
  408bf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408c00:	push   rsi
  408c01:	push   rbx
  408c02:	sub    rsp,0x18
  408c06:	movsxd rax,DWORD PTR [rcx+0x14]
  408c0a:	lea    r10,[rcx+0x18]
  408c0e:	mov    ecx,0x20
  408c13:	lea    r9,[r10+rax*4]
  408c17:	mov    eax,DWORD PTR [r9-0x4]
  408c1b:	lea    rbx,[r9-0x4]
  408c1f:	bsr    r8d,eax
  408c23:	xor    r8d,0x1f
  408c27:	sub    ecx,r8d
  408c2a:	cmp    r8d,0xa
  408c2e:	mov    DWORD PTR [rdx],ecx
  408c30:	jg     0x408c80
  408c32:	mov    ecx,0xb
  408c37:	mov    r11d,eax
  408c3a:	xor    esi,esi
  408c3c:	sub    ecx,r8d
  408c3f:	shr    r11d,cl
  408c42:	or     r11d,0x3ff00000
  408c49:	shl    r11,0x20
  408c4d:	cmp    r10,rbx
  408c50:	jae    0x408c58
  408c52:	mov    esi,DWORD PTR [r9-0x8]
  408c56:	shr    esi,cl
  408c58:	lea    ecx,[r8+0x15]
  408c5c:	shl    eax,cl
  408c5e:	mov    edx,eax
  408c60:	mov    eax,esi
  408c62:	or     eax,edx
  408c64:	or     rax,r11
  408c67:	mov    QWORD PTR [rsp+0x8],rax
  408c6c:	movsd  xmm0,QWORD PTR [rsp+0x8]
  408c72:	add    rsp,0x18
  408c76:	pop    rbx
  408c77:	pop    rsi
  408c78:	ret    
  408c79:	nop    DWORD PTR [rax+0x0]
  408c80:	cmp    r10,rbx
  408c83:	jae    0x408ce0
  408c85:	mov    r11d,r8d
  408c88:	lea    rsi,[r9-0x8]
  408c8c:	mov    edx,DWORD PTR [r9-0x8]
  408c90:	sub    r11d,0xb
  408c94:	je     0x408d02
  408c96:	mov    ebx,0x2b
  408c9b:	mov    ecx,r11d
  408c9e:	sub    ebx,r8d
  408ca1:	shl    eax,cl
  408ca3:	mov    r8d,edx
  408ca6:	mov    ecx,ebx
  408ca8:	shr    r8d,cl
  408cab:	or     eax,r8d
  408cae:	xor    r8d,r8d
  408cb1:	or     eax,0x3ff00000
  408cb6:	shl    rax,0x20
  408cba:	cmp    r10,rsi
  408cbd:	jae    0x408cc6
  408cbf:	mov    r8d,DWORD PTR [r9-0xc]
  408cc3:	shr    r8d,cl
  408cc6:	mov    ecx,r11d
  408cc9:	shl    edx,cl
  408ccb:	or     r8d,edx
  408cce:	movabs rdx,0xffffffff00000000
  408cd8:	and    rax,rdx
  408cdb:	or     rax,r8
  408cde:	jmp    0x408c67
  408ce0:	mov    r11d,r8d
  408ce3:	sub    r11d,0xb
  408ce7:	je     0x408d00
  408ce9:	mov    ecx,r11d
  408cec:	xor    r8d,r8d
  408cef:	xor    edx,edx
  408cf1:	shl    eax,cl
  408cf3:	or     eax,0x3ff00000
  408cf8:	shl    rax,0x20
  408cfc:	jmp    0x408cc6
  408cfe:	xchg   ax,ax
  408d00:	xor    edx,edx
  408d02:	or     eax,0x3ff00000
  408d07:	shl    rax,0x20
  408d0b:	or     rax,rdx
  408d0e:	jmp    0x408c67
  408d13:	nop    DWORD PTR [rax]
  408d16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408d20:	push   rdi
  408d21:	push   rsi
  408d22:	push   rbx
  408d23:	sub    rsp,0x20
  408d27:	mov    ecx,0x1
  408d2c:	movq   rbx,xmm0
  408d31:	mov    rdi,rdx
  408d34:	mov    rsi,r8
  408d37:	call   0x408440
  408d3c:	test   rax,rax
  408d3f:	je     0x408e25
  408d45:	mov    r9,rbx
  408d48:	shr    r9,0x20
  408d4c:	mov    r10d,r9d
  408d4f:	and    r9d,0x7fffffff
  408d56:	and    r10d,0xfffff
  408d5d:	shr    r9d,0x14
  408d61:	mov    edx,r10d
  408d64:	or     edx,0x100000
  408d6a:	test   r9d,r9d
  408d6d:	cmovne r10d,edx
  408d71:	test   ebx,ebx
  408d73:	jne    0x408db4
  408d75:	xor    ecx,ecx
  408d77:	mov    DWORD PTR [rax+0x14],0x1
  408d7e:	mov    edx,0x1
  408d83:	tzcnt  ecx,r10d
  408d88:	shr    r10d,cl
  408d8b:	test   r9d,r9d
  408d8e:	lea    r11d,[rcx+0x20]
  408d92:	mov    DWORD PTR [rax+0x18],r10d
  408d96:	je     0x408df3
  408d98:	lea    edx,[r11+r9*1-0x433]
  408da0:	mov    DWORD PTR [rdi],edx
  408da2:	mov    edx,0x35
  408da7:	sub    edx,r11d
  408daa:	mov    DWORD PTR [rsi],edx
  408dac:	add    rsp,0x20
  408db0:	pop    rbx
  408db1:	pop    rsi
  408db2:	pop    rdi
  408db3:	ret    
  408db4:	xor    r11d,r11d
  408db7:	tzcnt  r11d,ebx
  408dbc:	mov    ecx,r11d
  408dbf:	shr    ebx,cl
  408dc1:	test   r11d,r11d
  408dc4:	je     0x408e20
  408dc6:	mov    ecx,0x20
  408dcb:	mov    edx,r10d
  408dce:	sub    ecx,r11d
  408dd1:	shl    edx,cl
  408dd3:	mov    ecx,r11d
  408dd6:	or     ebx,edx
  408dd8:	shr    r10d,cl
  408ddb:	mov    DWORD PTR [rax+0x18],ebx
  408dde:	cmp    r10d,0x1
  408de2:	mov    DWORD PTR [rax+0x1c],r10d
  408de6:	sbb    edx,edx
  408de8:	add    edx,0x2
  408deb:	test   r9d,r9d
  408dee:	mov    DWORD PTR [rax+0x14],edx
  408df1:	jne    0x408d98
  408df3:	movsxd rcx,edx
  408df6:	shl    edx,0x5
  408df9:	sub    r11d,0x432
  408e00:	bsr    ecx,DWORD PTR [rax+rcx*4+0x14]
  408e05:	mov    DWORD PTR [rdi],r11d
  408e08:	xor    ecx,0x1f
  408e0b:	sub    edx,ecx
  408e0d:	mov    DWORD PTR [rsi],edx
  408e0f:	add    rsp,0x20
  408e13:	pop    rbx
  408e14:	pop    rsi
  408e15:	pop    rdi
  408e16:	ret    
  408e17:	nop    WORD PTR [rax+rax*1+0x0]
  408e20:	mov    DWORD PTR [rax+0x18],ebx
  408e23:	jmp    0x408dde
  408e25:	xor    eax,eax
  408e27:	jmp    0x408dac
  408e29:	nop    DWORD PTR [rax+0x0]
  408e30:	mov    rax,rcx
  408e33:	lea    rcx,[rdx+0x1]
  408e37:	movzx  edx,BYTE PTR [rdx]
  408e3a:	test   dl,dl
  408e3c:	mov    BYTE PTR [rax],dl
  408e3e:	je     0x408e52
  408e40:	add    rcx,0x1
  408e44:	movzx  edx,BYTE PTR [rcx-0x1]
  408e48:	add    rax,0x1
  408e4c:	test   dl,dl
  408e4e:	mov    BYTE PTR [rax],dl
  408e50:	jne    0x408e40
  408e52:	repz ret 
  408e54:	nop
  408e55:	nop
  408e56:	nop
  408e57:	nop
  408e58:	nop
  408e59:	nop
  408e5a:	nop
  408e5b:	nop
  408e5c:	nop
  408e5d:	nop
  408e5e:	nop
  408e5f:	nop
  408e60:	push   r13
  408e62:	push   r12
  408e64:	push   rbp
  408e65:	push   rdi
  408e66:	push   rsi
  408e67:	push   rbx
  408e68:	sub    rsp,0x28
  408e6c:	mov    rsi,rcx
  408e6f:	lea    ecx,[r8+0x8]
  408e73:	mov    ebp,edx
  408e75:	mov    edx,0x38e38e39
  408e7a:	mov    edi,r8d
  408e7d:	mov    ebx,r9d
  408e80:	mov    eax,ecx
  408e82:	sar    ecx,0x1f
  408e85:	imul   edx
  408e87:	sar    edx,1
  408e89:	sub    edx,ecx
  408e8b:	cmp    edx,0x1
  408e8e:	jle    0x408f54
  408e94:	mov    eax,0x1
  408e99:	xor    ecx,ecx
  408e9b:	nop    DWORD PTR [rax+rax*1+0x0]
  408ea0:	add    eax,eax
  408ea2:	add    ecx,0x1
  408ea5:	cmp    edx,eax
  408ea7:	jg     0x408ea0
  408ea9:	call   0x408440
  408eae:	cmp    ebp,0x9
  408eb1:	mov    DWORD PTR [rax+0x18],ebx
  408eb4:	mov    DWORD PTR [rax+0x14],0x1
  408ebb:	jle    0x408f40
  408ec1:	lea    rbx,[rsi+0x9]
  408ec5:	lea    r12d,[rbp-0xa]
  408ec9:	lea    r13,[rsi+r12*1+0xa]
  408ece:	mov    rsi,rbx
  408ed1:	add    rsi,0x1
  408ed5:	movsx  r8d,BYTE PTR [rsi-0x1]
  408eda:	mov    edx,0xa
  408edf:	mov    rcx,rax
  408ee2:	sub    r8d,0x30
  408ee6:	call   0x4085c0
  408eeb:	cmp    rsi,r13
  408eee:	jne    0x408ed1
  408ef0:	movsxd rdx,DWORD PTR [rsp+0x80]
  408ef8:	lea    r9,[r12+rdx*1+0x1]
  408efd:	add    rbx,r9
  408f00:	cmp    edi,ebp
  408f02:	jle    0x408f2f
  408f04:	sub    edi,0x1
  408f07:	sub    edi,ebp
  408f09:	lea    rsi,[rbx+rdi*1+0x1]
  408f0e:	xchg   ax,ax
  408f10:	add    rbx,0x1
  408f14:	movsx  r8d,BYTE PTR [rbx-0x1]
  408f19:	mov    edx,0xa
  408f1e:	mov    rcx,rax
  408f21:	sub    r8d,0x30
  408f25:	call   0x4085c0
  408f2a:	cmp    rbx,rsi
  408f2d:	jne    0x408f10
  408f2f:	add    rsp,0x28
  408f33:	pop    rbx
  408f34:	pop    rsi
  408f35:	pop    rdi
  408f36:	pop    rbp
  408f37:	pop    r12
  408f39:	pop    r13
  408f3b:	ret    
  408f3c:	nop    DWORD PTR [rax+0x0]
  408f40:	movsxd rdx,DWORD PTR [rsp+0x80]
  408f48:	mov    ebp,0x9
  408f4d:	lea    rbx,[rsi+rdx*1+0x9]
  408f52:	jmp    0x408f00
  408f54:	xor    ecx,ecx
  408f56:	jmp    0x408ea9
  408f5b:	nop    DWORD PTR [rax+rax*1+0x0]
  408f60:	push   rdi
  408f61:	push   rsi
  408f62:	push   rbx
  408f63:	sub    rsp,0x50
  408f67:	movaps XMMWORD PTR [rsp+0x40],xmm6
  408f6c:	mov    rsi,rdx
  408f6f:	lea    rdx,[rsp+0x38]
  408f74:	mov    rdi,rcx
  408f77:	call   0x408c00
  408f7c:	lea    rdx,[rsp+0x3c]
  408f81:	mov    rcx,rsi
  408f84:	movq   rbx,xmm0
  408f89:	movapd xmm6,xmm0
  408f8d:	call   0x408c00
  408f92:	mov    eax,DWORD PTR [rsp+0x38]
  408f96:	sub    eax,DWORD PTR [rsp+0x3c]
  408f9a:	movq   rcx,xmm0
  408f9f:	mov    r8d,eax
  408fa2:	mov    eax,DWORD PTR [rdi+0x14]
  408fa5:	sub    eax,DWORD PTR [rsi+0x14]
  408fa8:	shl    eax,0x5
  408fab:	add    eax,r8d
  408fae:	test   eax,eax
  408fb0:	jle    0x408ff0
  408fb2:	movq   rdx,xmm6
  408fb7:	shl    eax,0x14
  408fba:	shr    rdx,0x20
  408fbe:	add    eax,edx
  408fc0:	shl    rax,0x20
  408fc4:	mov    rdx,rax
  408fc7:	mov    eax,ebx
  408fc9:	or     rax,rdx
  408fcc:	mov    QWORD PTR [rsp+0x28],rax
  408fd1:	movsd  xmm6,QWORD PTR [rsp+0x28]
  408fd7:	divsd  xmm6,xmm0
  408fdb:	movapd xmm0,xmm6
  408fdf:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  408fe4:	add    rsp,0x50
  408fe8:	pop    rbx
  408fe9:	pop    rsi
  408fea:	pop    rdi
  408feb:	ret    
  408fec:	nop    DWORD PTR [rax+0x0]
  408ff0:	movq   rdx,xmm0
  408ff5:	shl    eax,0x14
  408ff8:	shr    rdx,0x20
  408ffc:	mov    ebx,edx
  408ffe:	sub    ebx,eax
  409000:	mov    rax,rbx
  409003:	shl    rax,0x20
  409007:	mov    rdx,rax
  40900a:	mov    eax,ecx
  40900c:	or     rax,rdx
  40900f:	mov    QWORD PTR [rsp+0x28],rax
  409014:	movsd  xmm0,QWORD PTR [rsp+0x28]
  40901a:	jmp    0x408fd7
  40901c:	nop    DWORD PTR [rax+0x0]
  409020:	mov    r8,QWORD PTR [rcx]
  409023:	jmp    0x40903e
  409025:	movsx  eax,BYTE PTR [r8]
  409029:	lea    r11d,[rax-0x41]
  40902d:	lea    r10d,[rax+0x20]
  409031:	cmp    r11d,0x19
  409035:	cmovbe eax,r10d
  409039:	cmp    eax,r9d
  40903c:	jne    0x409060
  40903e:	add    rdx,0x1
  409042:	movsx  r9d,BYTE PTR [rdx-0x1]
  409047:	add    r8,0x1
  40904b:	test   r9d,r9d
  40904e:	jne    0x409025
  409050:	mov    QWORD PTR [rcx],r8
  409053:	mov    eax,0x1
  409058:	ret    
  409059:	nop    DWORD PTR [rax+0x0]
  409060:	xor    eax,eax
  409062:	ret    
  409063:	nop    DWORD PTR [rax]
  409066:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409070:	sub    edx,0x1
  409073:	lea    rax,[r8+0x18]
  409077:	sar    edx,0x5
  40907a:	movsxd rdx,edx
  40907d:	lea    r11,[rcx+rdx*4+0x4]
  409082:	movsxd rdx,DWORD PTR [r8+0x14]
  409086:	lea    r10,[rax+rdx*4]
  40908a:	cmp    rax,r10
  40908d:	jae    0x4090cb
  40908f:	mov    rdx,rcx
  409092:	add    rax,0x4
  409096:	mov    r9d,DWORD PTR [rax-0x4]
  40909a:	add    rdx,0x4
  40909e:	cmp    r10,rax
  4090a1:	mov    DWORD PTR [rdx-0x4],r9d
  4090a5:	ja     0x409092
  4090a7:	sub    r10,r8
  4090aa:	lea    rax,[r10-0x19]
  4090ae:	shr    rax,0x2
  4090b2:	lea    rcx,[rcx+rax*4+0x4]
  4090b7:	cmp    r11,rcx
  4090ba:	jbe    0x4090d0
  4090bc:	nop    DWORD PTR [rax+0x0]
  4090c0:	add    rcx,0x4
  4090c4:	mov    DWORD PTR [rcx-0x4],0x0
  4090cb:	cmp    r11,rcx
  4090ce:	ja     0x4090c0
  4090d0:	repz ret 
  4090d2:	nop    DWORD PTR [rax+0x0]
  4090d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4090e0:	movsxd rax,DWORD PTR [rcx+0x14]
  4090e4:	mov    r9d,edx
  4090e7:	lea    r8,[rcx+0x18]
  4090eb:	sar    r9d,0x5
  4090ef:	cmp    eax,r9d
  4090f2:	jge    0x409121
  4090f4:	lea    r9,[r8+rax*4]
  4090f8:	cmp    r8,r9
  4090fb:	jae    0x409166
  4090fd:	mov    eax,DWORD PTR [r9-0x4]
  409101:	lea    rdx,[r9-0x4]
  409105:	test   eax,eax
  409107:	je     0x40911a
  409109:	jmp    0x409160
  40910b:	nop    DWORD PTR [rax+rax*1+0x0]
  409110:	sub    rdx,0x4
  409114:	mov    ecx,DWORD PTR [rdx]
  409116:	test   ecx,ecx
  409118:	jne    0x409160
  40911a:	cmp    r8,rdx
  40911d:	jb     0x409110
  40911f:	repz ret 
  409121:	jle    0x409150
  409123:	mov    ecx,edx
  409125:	movsxd r9,r9d
  409128:	and    ecx,0x1f
  40912b:	lea    r9,[r8+r9*4]
  40912f:	je     0x4090f8
  409131:	mov    r10d,DWORD PTR [r9]
  409134:	mov    eax,r10d
  409137:	shr    eax,cl
  409139:	shl    eax,cl
  40913b:	mov    edx,eax
  40913d:	mov    eax,0x1
  409142:	cmp    edx,r10d
  409145:	je     0x4090f8
  409147:	repz ret 
  409149:	nop    DWORD PTR [rax+0x0]
  409150:	movsxd r9,r9d
  409153:	lea    r9,[r8+r9*4]
  409157:	jmp    0x4090f8
  409159:	nop    DWORD PTR [rax+0x0]
  409160:	mov    eax,0x1
  409165:	ret    
  409166:	xor    eax,eax
  409168:	ret    
  409169:	nop
  40916a:	nop
  40916b:	nop
  40916c:	nop
  40916d:	nop
  40916e:	nop
  40916f:	nop
  409170:	jmp    QWORD PTR [rip+0x85ba]        # 0x411730
  409176:	nop
  409177:	nop
  409178:	jmp    QWORD PTR [rip+0x85aa]        # 0x411728
  40917e:	nop
  40917f:	nop
  409180:	jmp    QWORD PTR [rip+0x859a]        # 0x411720
  409186:	nop
  409187:	nop
  409188:	jmp    QWORD PTR [rip+0x858a]        # 0x411718
  40918e:	nop
  40918f:	nop
  409190:	jmp    QWORD PTR [rip+0x857a]        # 0x411710
  409196:	nop
  409197:	nop
  409198:	jmp    QWORD PTR [rip+0x856a]        # 0x411708
  40919e:	nop
  40919f:	nop
  4091a0:	jmp    QWORD PTR [rip+0x855a]        # 0x411700
  4091a6:	nop
  4091a7:	nop
  4091a8:	jmp    QWORD PTR [rip+0x854a]        # 0x4116f8
  4091ae:	nop
  4091af:	nop
  4091b0:	jmp    QWORD PTR [rip+0x853a]        # 0x4116f0
  4091b6:	nop
  4091b7:	nop
  4091b8:	jmp    QWORD PTR [rip+0x852a]        # 0x4116e8
  4091be:	nop
  4091bf:	nop
  4091c0:	jmp    QWORD PTR [rip+0x851a]        # 0x4116e0
  4091c6:	nop
  4091c7:	nop
  4091c8:	jmp    QWORD PTR [rip+0x850a]        # 0x4116d8
  4091ce:	nop
  4091cf:	nop
  4091d0:	jmp    QWORD PTR [rip+0x84fa]        # 0x4116d0
  4091d6:	nop
  4091d7:	nop
  4091d8:	jmp    QWORD PTR [rip+0x84ea]        # 0x4116c8
  4091de:	nop
  4091df:	nop
  4091e0:	jmp    QWORD PTR [rip+0x84da]        # 0x4116c0
  4091e6:	nop
  4091e7:	nop
  4091e8:	jmp    QWORD PTR [rip+0x84ca]        # 0x4116b8
  4091ee:	nop
  4091ef:	nop
  4091f0:	jmp    QWORD PTR [rip+0x84ba]        # 0x4116b0
  4091f6:	nop
  4091f7:	nop
  4091f8:	jmp    QWORD PTR [rip+0x84aa]        # 0x4116a8
  4091fe:	nop
  4091ff:	nop
  409200:	jmp    QWORD PTR [rip+0x849a]        # 0x4116a0
  409206:	nop
  409207:	nop
  409208:	jmp    QWORD PTR [rip+0x848a]        # 0x411698
  40920e:	nop
  40920f:	nop
  409210:	jmp    QWORD PTR [rip+0x847a]        # 0x411690
  409216:	nop
  409217:	nop
  409218:	jmp    QWORD PTR [rip+0x846a]        # 0x411688
  40921e:	nop
  40921f:	nop
  409220:	jmp    QWORD PTR [rip+0x845a]        # 0x411680
  409226:	nop
  409227:	nop
  409228:	jmp    QWORD PTR [rip+0x844a]        # 0x411678
  40922e:	nop
  40922f:	nop
  409230:	jmp    QWORD PTR [rip+0x843a]        # 0x411670
  409236:	nop
  409237:	nop
  409238:	jmp    QWORD PTR [rip+0x842a]        # 0x411668
  40923e:	nop
  40923f:	nop
  409240:	jmp    QWORD PTR [rip+0x841a]        # 0x411660
  409246:	nop
  409247:	nop
  409248:	jmp    QWORD PTR [rip+0x840a]        # 0x411658
  40924e:	nop
  40924f:	nop
  409250:	jmp    QWORD PTR [rip+0x83fa]        # 0x411650
  409256:	nop
  409257:	nop
  409258:	jmp    QWORD PTR [rip+0x83ea]        # 0x411648
  40925e:	nop
  40925f:	nop
  409260:	jmp    QWORD PTR [rip+0x83da]        # 0x411640
  409266:	nop
  409267:	nop
  409268:	jmp    QWORD PTR [rip+0x83ca]        # 0x411638
  40926e:	nop
  40926f:	nop
  409270:	jmp    QWORD PTR [rip+0x83ba]        # 0x411630
  409276:	nop
  409277:	nop
  409278:	jmp    QWORD PTR [rip+0x83a2]        # 0x411620
  40927e:	nop
  40927f:	nop
  409280:	jmp    QWORD PTR [rip+0x8392]        # 0x411618
  409286:	nop
  409287:	nop
  409288:	jmp    QWORD PTR [rip+0x8382]        # 0x411610
  40928e:	nop
  40928f:	nop
  409290:	jmp    QWORD PTR [rip+0x836a]        # 0x411600
  409296:	nop
  409297:	nop
  409298:	jmp    QWORD PTR [rip+0x835a]        # 0x4115f8
  40929e:	nop
  40929f:	nop
  4092a0:	jmp    QWORD PTR [rip+0x834a]        # 0x4115f0
  4092a6:	nop
  4092a7:	nop
  4092a8:	jmp    QWORD PTR [rip+0x833a]        # 0x4115e8
  4092ae:	nop
  4092af:	nop
  4092b0:	jmp    QWORD PTR [rip+0x8322]        # 0x4115d8
  4092b6:	nop
  4092b7:	nop
  4092b8:	jmp    QWORD PTR [rip+0x8312]        # 0x4115d0
  4092be:	nop
  4092bf:	nop
  4092c0:	jmp    QWORD PTR [rip+0x8302]        # 0x4115c8
  4092c6:	nop
  4092c7:	nop
  4092c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4092d0:	mov    rax,QWORD PTR [rip+0x7169]        # 0x410440
  4092d7:	ret    
  4092d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4092e0:	mov    rax,rcx
  4092e3:	xchg   QWORD PTR [rip+0x7156],rax        # 0x410440
  4092ea:	ret    
  4092eb:	nop
  4092ec:	nop
  4092ed:	nop
  4092ee:	nop
  4092ef:	nop
  4092f0:	jmp    QWORD PTR [rip+0x82c2]        # 0x4115b8
  4092f6:	nop
  4092f7:	nop
  4092f8:	jmp    QWORD PTR [rip+0x82b2]        # 0x4115b0
  4092fe:	nop
  4092ff:	nop
  409300:	jmp    QWORD PTR [rip+0x82a2]        # 0x4115a8
  409306:	nop
  409307:	nop
  409308:	jmp    QWORD PTR [rip+0x8292]        # 0x4115a0
  40930e:	nop
  40930f:	nop
  409310:	jmp    QWORD PTR [rip+0x8282]        # 0x411598
  409316:	nop
  409317:	nop
  409318:	jmp    QWORD PTR [rip+0x8272]        # 0x411590
  40931e:	nop
  40931f:	nop
  409320:	jmp    QWORD PTR [rip+0x8262]        # 0x411588
  409326:	nop
  409327:	nop
  409328:	jmp    QWORD PTR [rip+0x8252]        # 0x411580
  40932e:	nop
  40932f:	nop
  409330:	jmp    QWORD PTR [rip+0x8242]        # 0x411578
  409336:	nop
  409337:	nop
  409338:	jmp    QWORD PTR [rip+0x8232]        # 0x411570
  40933e:	nop
  40933f:	nop
  409340:	jmp    QWORD PTR [rip+0x8222]        # 0x411568
  409346:	nop
  409347:	nop
  409348:	jmp    QWORD PTR [rip+0x8212]        # 0x411560
  40934e:	nop
  40934f:	nop
  409350:	jmp    QWORD PTR [rip+0x8202]        # 0x411558
  409356:	nop
  409357:	nop
  409358:	jmp    QWORD PTR [rip+0x81f2]        # 0x411550
  40935e:	nop
  40935f:	nop
  409360:	jmp    QWORD PTR [rip+0x81e2]        # 0x411548
  409366:	nop
  409367:	nop
  409368:	jmp    QWORD PTR [rip+0x81d2]        # 0x411540
  40936e:	nop
  40936f:	nop
  409370:	jmp    QWORD PTR [rip+0x81c2]        # 0x411538
  409376:	nop
  409377:	nop
  409378:	jmp    QWORD PTR [rip+0x81b2]        # 0x411530
  40937e:	nop
  40937f:	nop
  409380:	jmp    QWORD PTR [rip+0x81a2]        # 0x411528
  409386:	nop
  409387:	nop
  409388:	jmp    QWORD PTR [rip+0x8192]        # 0x411520
  40938e:	nop
  40938f:	nop
  409390:	jmp    QWORD PTR [rip+0x8182]        # 0x411518
  409396:	nop
  409397:	nop
  409398:	jmp    QWORD PTR [rip+0x8172]        # 0x411510
  40939e:	nop
  40939f:	nop
  4093a0:	jmp    QWORD PTR [rip+0x8162]        # 0x411508
  4093a6:	nop
  4093a7:	nop
  4093a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4093b0:	(bad)  
  4093b1:	(bad)  
  4093b2:	(bad)  
  4093b3:	(bad)  
  4093b4:	(bad)  
  4093b5:	(bad)  
  4093b6:	(bad)  
  4093b7:	inc    DWORD PTR [rax]
  4093b9:	add    BYTE PTR [rax],al
  4093bb:	add    BYTE PTR [rax],al
  4093bd:	add    BYTE PTR [rax],al
  4093bf:	add    bh,bh
  4093c1:	(bad)  
  4093c2:	(bad)  
  4093c3:	(bad)  
  4093c4:	(bad)  
  4093c5:	(bad)  
  4093c6:	(bad)  
  4093c7:	inc    DWORD PTR [rax]
  4093c9:	add    BYTE PTR [rax],al
  4093cb:	add    BYTE PTR [rax],al
  4093cd:	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

000000000040a000 <.data>:
  40a000:	or     al,BYTE PTR [rax]
	...
  40a00e:	add    BYTE PTR [rax],al
  40a010:	enter  0x4093,0x0
	...
  40a020:	(bad)  
  40a021:	(bad)  
  40a022:	(bad)  
  40a023:	(bad)  
  40a024:	(bad)  
  40a025:	(bad)  
  40a026:	(bad)  
  40a027:	inc    DWORD PTR [rax]
  40a029:	add    BYTE PTR [rax],al
  40a02b:	add    BYTE PTR [rax],al
  40a02d:	add    BYTE PTR [rax],al
  40a02f:	add    bh,bh
	...
  40a03d:	add    BYTE PTR [rax],al
  40a03f:	add    BYTE PTR [rdx],al
	...
  40a04d:	add    BYTE PTR [rax],al
  40a04f:	add    BYTE PTR [rip+0xffffffffce000000],dh        # 0xffffffffce40a055
  40a055:	sti    
  40a056:	(bad)  
  40a057:	dec    ebx
  40a059:	add    eax,DWORD PTR [rax]
  40a05b:	add    BYTE PTR [rcx],al
  40a05d:	add    BYTE PTR [rax],al
  40a05f:	add    BYTE PTR [rax],al
  40a061:	add    BYTE PTR [rax],al
  40a063:	add    BYTE PTR [rsi],cl
	...
  40a06d:	add    BYTE PTR [rax],al
  40a06f:	add    bh,bh
  40a071:	(bad)  
  40a072:	(bad)  
  40a073:	inc    DWORD PTR [rax]
	...
  40a07d:	add    BYTE PTR [rax],al
  40a07f:	add    BYTE PTR [rax-0x6],al
  40a082:	add    BYTE PTR [rax],al
	...
  40a08d:	add    BYTE PTR [rax],al
  40a08f:	add    al,dl
  40a091:	xchg   edx,eax
  40a092:	add    BYTE PTR [rax],al
  40a095:	add    BYTE PTR [rax],al
  40a097:	add    al,ah
  40a099:	xchg   edx,eax
  40a09a:	add    BYTE PTR [rax],al
  40a09d:	add    BYTE PTR [rax],al
  40a09f:	add    BYTE PTR [rdx],dh
  40a0a1:	movabs ds:0x2b992ddf,al
  40a0aa:	add    BYTE PTR [rax],al
  40a0ac:	add    BYTE PTR [rax],al
  40a0ae:	add    BYTE PTR [rax],al
  40a0b0:	int    0x5d
  40a0b2:	and    dl,dl
  40a0b4:	data16 (bad) 
  40a0b6:	(bad)  
  40a0b7:	inc    DWORD PTR [rax]
  40a0b9:	add    BYTE PTR [rax],al
  40a0bb:	add    BYTE PTR [rax],al
  40a0bd:	add    BYTE PTR [rax],al
	...

Disassembly of section .rdata:

000000000040b000 <.rdata>:
  40b000:	jae    0x40b06b
  40b002:	outs   dx,BYTE PTR ds:[esi]
  40b004:	(bad)  
  40b005:	ins    BYTE PTR es:[rdi],dx
  40b006:	add    BYTE PTR [rbp+0x65],ch
  40b009:	je     0x40b073
  40b00b:	outs   dx,DWORD PTR ds:[rsi]
  40b00c:	and    BYTE PTR fs:[rbx+0x61],ah
  40b010:	ins    BYTE PTR es:[rdi],dx
  40b011:	ins    BYTE PTR es:[rdi],dx
  40b012:	add    BYTE PTR [rbp+0x65],ch
  40b015:	je     0x40b07f
  40b017:	outs   dx,DWORD PTR ds:[rsi]
  40b018:	and    BYTE PTR fs:[rdx+0x65],dh
  40b01c:	je     0x40b093
  40b01e:	jb     0x40b08e
  40b020:	add    BYTE PTR [rbp+0x72],ah
  40b023:	jb     0x40b094
  40b025:	jb     0x40b027
  40b027:	sub    BYTE PTR [rbp+0x6e],dh
  40b02a:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  40b02e:	outs   dx,BYTE PTR ds:[rsi]
  40b02f:	and    BYTE PTR [rbp+0x65],ch
  40b032:	jae    0x40b0a7
  40b034:	(bad)  
  40b035:	and    BYTE PTR gs:[ecx+edi*2+0x70],dh
  40b03b:	sub    DWORD PTR gs:[rax],eax
  40b03e:	and    BYTE PTR [rax],ah
  40b040:	and    BYTE PTR [rax],al
  40b042:	(bad)  
  40b043:	jb     0x40b0b7
  40b045:	(bad)  
  40b046:	jns    0x40b068
  40b048:	outs   dx,DWORD PTR ds:[rsi]
  40b049:	data16 and BYTE PTR [rdx+0x79],ah
  40b04d:	je     0x40b0b4
  40b04f:	jae    0x40b071
  40b051:	pop    rbx
  40b052:	add    BYTE PTR [rip+0x783230],ah        # 0xb8e288
  40b058:	pop    rbp
  40b059:	add    BYTE PTR [rcx+0x72],ah
  40b05c:	jb     0x40b0bf
  40b05e:	jns    0x40b080
  40b060:	outs   dx,DWORD PTR ds:[rsi]
  40b061:	data16 and BYTE PTR [rdx+0x79],ah
  40b065:	je     0x40b0cc
  40b067:	jae    0x40b089
  40b069:	and    ah,BYTE PTR [rip+0x2b202273]        # 0x2b60d2e2
  40b06f:	and    BYTE PTR [rax+rsi*1+0xa],bl
  40b073:	add    BYTE PTR [rbx+0x6f],ah
  40b076:	jo     0x40b0f1
  40b078:	imul   ebp,DWORD PTR [rsi+0x67],0x74796220
  40b07f:	gs jae 0x40b0f6
  40b082:	jb     0x40b0ed
  40b084:	outs   dx,BYTE PTR ds:[rsi]
  40b085:	add    BYTE PTR [ecx+0x72],ah
  40b089:	jb     0x40b0ec
  40b08b:	jns    0x40b0ad
  40b08d:	outs   dx,DWORD PTR ds:[rsi]
  40b08e:	data16 and BYTE PTR [rdx+0x79],ah
  40b092:	je     0x40b0f9
  40b094:	jae    0x40b0b6
  40b096:	and    ah,BYTE PTR [rip+0xa2273]        # 0x4ad30f
  40b09c:	jae    0x40b112
  40b09e:	jb     0x40b109
  40b0a0:	outs   dx,BYTE PTR ds:[rsi]
  40b0a1:	and    BYTE PTR [edx],ah
  40b0a4:	add    BYTE PTR [rip+0x220073],ah        # 0x62b11d
  40b0aa:	jae    0x40b115
  40b0ac:	outs   dx,BYTE PTR ds:[esi]
  40b0ae:	(bad)  
  40b0af:	je     0x40b126
  40b0b1:	jb     0x40b118
  40b0b3:	and    BYTE PTR [rdx],ah
  40b0b5:	add    BYTE PTR [rdi+0x62],ch
  40b0b8:	push   0x65
  40b0ba:	movsxd esi,DWORD PTR [rax+riz*1+0x70]
  40b0be:	(bad)  
  40b0bf:	je     0x40b129
  40b0c1:	and    BYTE PTR [rdx],ah
  40b0c3:	add    BYTE PTR [rcx+0x6e],ch
  40b0c6:	je     0x40b0f9
  40b0c8:	and    BYTE PTR ss:[rip+0x75000a64],ah        # 0x7540bb33
  40b0cf:	imul   ebp,DWORD PTR [rsi+0x74],0x25203631
  40b0d6:	jne    0x40b0e2
  40b0d8:	add    BYTE PTR [rcx+0x6e],ch
  40b0db:	je     0x40b110
  40b0dd:	xor    ah,BYTE PTR [rax]
  40b0df:	and    eax,0x75000a64
  40b0e4:	imul   ebp,DWORD PTR [rsi+0x74],0x25203233
  40b0eb:	jne    0x40b0f7
  40b0ed:	add    BYTE PTR [rcx+0x6e],ch
  40b0f0:	je     0x40b128
  40b0f2:	xor    al,0x20
  40b0f4:	sub    BYTE PTR [rdi+0x6d],ch
  40b0f7:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x75002964
  40b0ff:	imul   ebp,DWORD PTR [rsi+0x74],0x28203436
  40b106:	outs   dx,DWORD PTR ds:[rsi]
  40b107:	ins    DWORD PTR es:[rdi],dx
  40b108:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x64002964
  40b110:	outs   dx,DWORD PTR ds:[rsi]
  40b111:	jne    0x40b175
  40b113:	ins    BYTE PTR es:[rdi],dx
  40b114:	and    BYTE PTR gs:[rip+0x62000a67],ah        # 0x6240bb82
  40b11b:	jns    0x40b191
  40b11d:	and    BYTE PTR gs:[rip+0x74000a64],ah        # 0x7440bb88
  40b124:	jb     0x40b19b
  40b126:	add    BYTE PTR gs:[rsi+0x61],ah
  40b12a:	ins    BYTE PTR es:[rdi],dx
  40b12b:	jae    0x40b192
  40b12d:	add    BYTE PTR [rdx+0x6f],ah
  40b130:	outs   dx,DWORD PTR ds:[rsi]
  40b131:	ins    BYTE PTR es:[rdi],dx
  40b132:	gs (bad) 
  40b134:	outs   dx,BYTE PTR ds:[rsi]
  40b135:	and    BYTE PTR [rip+0x76000a73],ah        # 0x7640bbae
  40b13b:	(bad)  
  40b13c:	jb     0x40b1a7
  40b13e:	(bad)  
  40b13f:	outs   dx,BYTE PTR ds:[rsi]
  40b140:	je     0x40b162
  40b142:	add    BYTE PTR [rcx+0x72],ah
  40b145:	jb     0x40b1a8
  40b147:	jns    0x40b169
  40b149:	pop    rbx
  40b14a:	add    BYTE PTR [rcx+rbp*2+0x63],ah
  40b14e:	je     0x40b170
  40b150:	outs   dx,BYTE PTR gs:[rsi]
  40b152:	je     0x40b1c6
  40b154:	jns    0x40b17e
  40b156:	add    BYTE PTR [rcx],ch
  40b158:	add    BYTE PTR [rbx+0x74],dh
  40b15b:	jb     0x40b1d2
  40b15d:	movsxd esi,DWORD PTR [rax+riz*1+0x7b]
  40b161:	add    BYTE PTR [rbp+0x0],bh
  40b164:	add    BYTE PTR [rax],al
  40b166:	add    BYTE PTR [rax],al
  40b168:	and    BYTE PTR [rax],ch
  40b16a:	fs (bad) 
  40b16c:	jne    0x40b1e1
  40b16e:	sub    eax,0x696e6f6d
  40b173:	je     0x40b1e4
  40b175:	jb     0x40b197
  40b177:	je     0x40b1e8
  40b179:	outs   dx,DWORD PTR ds:[rsi]
  40b17a:	and    BYTE PTR [rbp+rsi*2+0x6d],ah
  40b17e:	(bad)  
  40b17f:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  40b183:	fs movsxd ebp,DWORD PTR gs:[rcx+0x70]
  40b188:	push   0x61207265
  40b18d:	jb     0x40b1f6
  40b18f:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  40b193:	and    BYTE PTR gs:[rdi],ah
  40b196:	and    eax,0xa292763
  40b19b:	add    cl,cl
  40b19d:	imul   edi,edi,0xff6945ff
  40b1a3:	dec    eax
  40b1a5:	imul   edi,edi,0xffffffff
  40b1a8:	shr    DWORD PTR [rax-0x1],cl
  40b1ab:	call   QWORD PTR [rdi-0x37000096]
  40b1b1:	imul   edi,edi,0xffffffff
  40b1b4:	xor    esp,DWORD PTR [rdi-0x1]
  40b1b7:	dec    eax
  40b1b9:	imul   edi,edi,0xffffffff
  40b1bc:	xor    DWORD PTR [rax-0x1],ebp
  40b1bf:	dec    eax
  40b1c1:	imul   edi,edi,0xffffffff
  40b1c4:	enter  0xff6b,0xff
  40b1c8:	enter  0xff6b,0xff
  40b1cc:	enter  0xff6b,0xff
  40b1d0:	(bad)  
  40b1d1:	addr32 (bad) 
  40b1d3:	inc    DWORD PTR [rdi+riz*2+0x6bc8ffff]
  40b1da:	(bad)  
  40b1db:	inc    DWORD PTR [rdx]
  40b1dd:	push   0x6b1fffff
  40b1e2:	(bad)  
  40b1e3:	jmp    rdx
  40b1e5:	data16 (bad) 
  40b1e7:	jmp    FWORD PTR [rbp+0x5cffff68]
  40b1ed:	push   0x6985ffff
  40b1f2:	(bad)  
  40b1f3:	dec    eax
  40b1f5:	imul   edi,edi,0xffffffff
  40b1f8:	xchg   DWORD PTR [rax-0x1],ebp
  40b1fb:	call   QWORD PTR [rsi]
  40b1fd:	imul   edi,edi,0x756e28ff
  40b203:	ins    BYTE PTR es:[rdi],dx
  40b204:	ins    BYTE PTR es:[rdi],dx
  40b205:	and    BYTE PTR [rbp+riz*2+0x73],ah
  40b209:	je     0x40b274
  40b20b:	outs   dx,BYTE PTR ds:[rsi]
  40b20c:	(bad)  
  40b20d:	je     0x40b278
  40b20f:	outs   dx,DWORD PTR ds:[rsi]
  40b210:	outs   dx,BYTE PTR ds:[rsi]
  40b211:	sub    DWORD PTR [rax],eax
  40b213:	sub    BYTE PTR [rsi+0x75],ch
  40b216:	ins    BYTE PTR es:[rdi],dx
  40b217:	ins    BYTE PTR es:[rdi],dx
  40b218:	and    BYTE PTR [rbx+0x65],dh
  40b21b:	outs   dx,BYTE PTR ds:[rsi]
  40b21c:	fs gs jb 0x40b249
	...
  40b228:	and    eax,0x69742073
  40b22d:	ins    DWORD PTR es:[rdi],dx
  40b22e:	gs cmp eax,0x2e646c25
  40b234:	and    eax,0x646c3630
  40b239:	and    BYTE PTR [rbx+0x65],dh
  40b23c:	outs   dx,BYTE PTR ds:[rsi]
  40b23d:	fs gs jb 0x40b27e
  40b241:	and    eax,0x3e2d2073
  40b246:	and    BYTE PTR [rbp+riz*2+0x73],ah
  40b24a:	je     0x40b2b5
  40b24c:	outs   dx,BYTE PTR ds:[rsi]
  40b24d:	(bad)  
  40b24e:	je     0x40b2b9
  40b250:	outs   dx,DWORD PTR ds:[rsi]
  40b251:	outs   dx,BYTE PTR ds:[rsi]
  40b252:	cmp    eax,0x7325
  40b257:	add    BYTE PTR [rip+0x65732073],ah        # 0x65b3d2d0
  40b25d:	outs   dx,BYTE PTR ds:[rsi]
  40b25e:	fs gs jb 0x40b29f
  40b262:	and    eax,0x3e2d2073
  40b267:	and    BYTE PTR [rbp+riz*2+0x73],ah
  40b26b:	je     0x40b2d6
  40b26d:	outs   dx,BYTE PTR ds:[rsi]
  40b26e:	(bad)  
  40b26f:	je     0x40b2da
  40b271:	outs   dx,DWORD PTR ds:[rsi]
  40b272:	outs   dx,BYTE PTR ds:[rsi]
  40b273:	cmp    eax,0x7325
  40b278:	and    BYTE PTR [rbx+0x65],dh
  40b27b:	jb     0x40b2e6
  40b27d:	(bad)  
  40b27e:	ins    BYTE PTR es:[rdi],dx
  40b27f:	cmp    eax,0x70207525
  40b284:	(bad)  
  40b285:	je     0x40b2ef
  40b287:	cmp    eax,0x203b7325
  40b28c:	imul   ebp,DWORD PTR [rsi+0x74],0x61667265
  40b293:	movsxd esp,DWORD PTR [rbp+0x3d]
  40b296:	and    eax,0x6d203b73
  40b29b:	gs ins DWORD PTR es:[rdi],dx
  40b29d:	(bad)  
  40b29e:	gs jb  0x40b2de
  40b2a1:	and    eax,0x20000a73
  40b2a6:	jae    0x40b30d
  40b2a8:	jb     0x40b313
  40b2aa:	(bad)  
  40b2ab:	ins    BYTE PTR es:[rdi],dx
  40b2ac:	cmp    eax,0x72207525
  40b2b1:	gs jo  0x40b320
  40b2b4:	jns    0x40b315
  40b2b6:	jae    0x40b31d
  40b2b8:	jb     0x40b323
  40b2ba:	(bad)  
  40b2bb:	ins    BYTE PTR es:[rdi],dx
  40b2bc:	cmp    eax,0xa7525
  40b2c1:	add    BYTE PTR [rax],al
  40b2c3:	add    BYTE PTR [rax],al
  40b2c5:	add    BYTE PTR [rax],al
  40b2c7:	add    BYTE PTR [rax],ah
  40b2c9:	gs jb  0x40b33e
  40b2cc:	outs   dx,DWORD PTR ds:[rsi]
  40b2cd:	jb     0x40b32e
  40b2cf:	outs   dx,BYTE PTR ds:[rsi]
  40b2d0:	(bad)  
  40b2d1:	ins    DWORD PTR es:[rdi],dx
  40b2d2:	gs cmp eax,0x72207325
  40b2d8:	gs jo  0x40b347
  40b2db:	jns    0x40b33c
  40b2dd:	jae    0x40b344
  40b2df:	jb     0x40b34a
  40b2e1:	(bad)  
  40b2e2:	ins    BYTE PTR es:[rdi],dx
  40b2e3:	cmp    eax,0xa7525
	...
  40b2f0:	push   rbp
  40b2f1:	jae    0x40b354
  40b2f3:	cmp    ah,BYTE PTR gs:[eax]
  40b2f7:	and    eax,0x2d5b2073
  40b2fc:	sub    eax,0x706c6568
  40b301:	pop    rbp
  40b302:	and    BYTE PTR [rbx+0x2d],bl
  40b305:	sub    eax,0x74737973
  40b30a:	gs ins DWORD PTR es:[rdi],dx
  40b30c:	and    BYTE PTR [rax+riz*1+0x2d],bh
  40b310:	sub    eax,0x73736573
  40b315:	imul   ebp,DWORD PTR [rdi+0x6e],0x2d207c20
  40b31c:	sub    eax,0x3d737562
  40b321:	rex.B
  40b322:	rex.R
  40b323:	rex.R push rdx
  40b325:	rex.RB push r11
  40b327:	push   rbx
  40b328:	and    BYTE PTR [rax+riz*1+0x2d],bh
  40b32c:	sub    eax,0x72656570
  40b331:	cmp    eax,0x52444441
  40b336:	rex.RB push r11
  40b338:	push   rbx
  40b339:	pop    rbp
  40b33a:	and    BYTE PTR [rbx+0x2d],bl
  40b33d:	sub    eax,0x74736564
  40b342:	cmp    eax,0x454d414e
  40b347:	pop    rbp
  40b348:	and    BYTE PTR [rbx+0x2d],bl
  40b34b:	sub    eax,0x65707974
  40b350:	cmp    eax,0x45505954
  40b355:	pop    rbp
  40b356:	and    BYTE PTR [rbx+0x2d],bl
  40b359:	sub    eax,0x6e697270
  40b35e:	je     0x40b38d
  40b360:	jb     0x40b3c7
  40b362:	jo     0x40b3d0
  40b364:	jns    0x40b3c1
  40b366:	cmp    eax,0x6574696c
  40b36b:	jb     0x40b3ce
  40b36d:	ins    BYTE PTR es:[rdi],dx
  40b36e:	pop    rbp
  40b36f:	pop    rbp
  40b370:	and    BYTE PTR [rbx+0x2d],bl
  40b373:	sub    eax,0x6c706572
  40b378:	jns    0x40b3a7
  40b37a:	je     0x40b3e5
  40b37c:	ins    DWORD PTR es:[rdi],dx
  40b37d:	outs   dx,DWORD PTR gs:[rsi]
  40b37f:	jne    0x40b3f5
  40b381:	cmp    eax,0x4345534d
  40b386:	pop    rbp
  40b387:	and    BYTE PTR [rsp+riz*2],bh
  40b38a:	gs jae 0x40b401
  40b38d:	imul   ebp,DWORD PTR [rsi+0x61],0x6e6f6974
  40b394:	and    BYTE PTR [rdi+0x62],ch
  40b397:	push   0x65
  40b399:	movsxd esi,DWORD PTR [rax+riz*1+0x70]
  40b39d:	(bad)  
  40b39e:	je     0x40b408
  40b3a0:	and    BYTE PTR ds:[rbp*2+0x61737365],bh
  40b3a8:	and    BYTE PTR gs:[esi+0x61],ch
  40b3ad:	ins    DWORD PTR es:[rdi],dx
  40b3ae:	gs and BYTE PTR ds:[rbx+0x63],bl
  40b3b3:	outs   dx,DWORD PTR ds:[rsi]
  40b3b4:	outs   dx,BYTE PTR ds:[rsi]
  40b3b5:	je     0x40b41c
  40b3b7:	outs   dx,BYTE PTR ds:[rsi]
  40b3b8:	je     0x40b42d
  40b3ba:	and    BYTE PTR [rsi],ch
  40b3bc:	cs cs pop rbp
  40b3bf:	or     al,BYTE PTR [rax]
  40b3c1:	je     0x40b435
  40b3c3:	jne    0x40b42a
  40b3c5:	add    BYTE PTR [rsi+0x61],ah
  40b3c8:	ins    BYTE PTR es:[rdi],dx
  40b3c9:	jae    0x40b430
  40b3cb:	add    BYTE PTR [rax],al
  40b3cd:	add    BYTE PTR [rax],al
  40b3cf:	add    BYTE PTR [rip+0x45203a73],ah        # 0x4560ee48
  40b3d5:	js     0x40b447
  40b3d7:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  40b3dc:	and    BYTE PTR [rdx],ah
  40b3de:	je     0x40b452
  40b3e0:	jne    0x40b447
  40b3e2:	and    ah,BYTE PTR [rax]
  40b3e4:	outs   dx,DWORD PTR ds:[rsi]
  40b3e5:	jb     0x40b407
  40b3e7:	and    ah,BYTE PTR [rsi+0x61]
  40b3ea:	ins    BYTE PTR es:[rdi],dx
  40b3eb:	jae    0x40b452
  40b3ed:	and    ah,BYTE PTR [rax]
  40b3ef:	imul   ebp,DWORD PTR [rsi+0x73],0x64616574
  40b3f6:	and    BYTE PTR [rdi+0x66],ch
  40b3f9:	and    BYTE PTR [rdx],ah
  40b3fb:	and    eax,0xa2273
  40b400:	and    eax,0x55203a73
  40b405:	outs   dx,BYTE PTR ds:[rsi]
  40b406:	jae    0x40b47d
  40b408:	jo     0x40b47a
  40b40a:	outs   dx,DWORD PTR ds:[rsi]
  40b40b:	jb     0x40b481
  40b40d:	gs and BYTE PTR fs:[rcx+riz*2+0x74],ah
  40b413:	(bad)  
  40b414:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  40b418:	and    BYTE PTR gs:[rip+0xa63],ah        # 0x40be82
  40b41f:	add    BYTE PTR [rdi+0x6e],al
  40b422:	(bad)  
  40b423:	push   rdx
  40b425:	outs   dx,BYTE PTR ds:[rsi]
  40b426:	(bad)  
  40b427:	(bad)  
  40b428:	jg     0x40b496
  40b42a:	(bad)  
  40b42b:	push   rdx
  40b42d:	outs   dx,BYTE PTR ds:[rsi]
  40b42e:	(bad)  
  40b42f:	push   rdx
  40b431:	outs   dx,BYTE PTR ds:[rsi]
  40b432:	(bad)  
  40b433:	push   rdx
  40b435:	outs   dx,BYTE PTR ds:[rsi]
  40b436:	(bad)  
  40b437:	push   rdx
  40b439:	outs   dx,BYTE PTR ds:[rsi]
  40b43a:	(bad)  
  40b43b:	jmp    FWORD PTR [rcx]
  40b43d:	ins    DWORD PTR es:[rdi],dx
  40b43e:	(bad)  
  40b43f:	push   rdx
  40b441:	outs   dx,BYTE PTR ds:[rsi]
  40b442:	(bad)  
  40b443:	push   rdx
  40b445:	outs   dx,BYTE PTR ds:[rsi]
  40b446:	(bad)  
  40b447:	push   rdx
  40b449:	outs   dx,BYTE PTR ds:[rsi]
  40b44a:	(bad)  
  40b44b:	push   rdx
  40b44d:	outs   dx,BYTE PTR ds:[rsi]
  40b44e:	(bad)  
  40b44f:	push   QWORD PTR [rdi+0x29ffff6c]
  40b455:	outs   dx,BYTE PTR ds:[rsi]
  40b456:	(bad)  
  40b457:	push   rdx
  40b459:	outs   dx,BYTE PTR ds:[rsi]
  40b45a:	(bad)  
  40b45b:	push   rax
  40b45d:	ins    BYTE PTR es:[rdi],dx
  40b45e:	(bad)  
  40b45f:	push   rdx
  40b461:	outs   dx,BYTE PTR ds:[rsi]
  40b462:	(bad)  
  40b463:	dec    DWORD PTR [rbx]
  40b465:	outs   dx,BYTE PTR ds:[rsi]
  40b466:	(bad)  
  40b467:	call   rdx
  40b469:	ins    DWORD PTR es:[rdi],dx
  40b46a:	(bad)  
  40b46b:	jmp    QWORD PTR [rcx+0x6d]
  40b46e:	(bad)  
  40b46f:	push   rdx
  40b471:	outs   dx,BYTE PTR ds:[rsi]
  40b472:	(bad)  
  40b473:	push   rdx
  40b475:	outs   dx,BYTE PTR ds:[rsi]
  40b476:	(bad)  
  40b477:	call   FWORD PTR [rcx+0x47ffff6d]
  40b47d:	ins    BYTE PTR es:[rdi],dx
  40b47e:	(bad)  
  40b47f:	jmp    FWORD PTR [rax+rax*1]
  40b482:	and    eax,0x4d203a73
  40b487:	(bad)  
  40b488:	ins    BYTE PTR es:[rdi],dx
  40b489:	outs   dx,WORD PTR ds:[rsi]
  40b48b:	jb     0x40b4fa
  40b48d:	gs and BYTE PTR fs:[rcx+rbp*2+0x63],ah
  40b493:	je     0x40b4fe
  40b495:	outs   dx,DWORD PTR ds:[rsi]
  40b496:	outs   dx,BYTE PTR ds:[rsi]
  40b497:	(bad)  
  40b498:	jb     0x40b513
  40b49a:	or     al,BYTE PTR [rax]
  40b49c:	jae    0x40b512
  40b49e:	jb     0x40b509
  40b4a0:	outs   dx,BYTE PTR ds:[rsi]
  40b4a1:	add    BYTE PTR [ecx+0x6e],ch
  40b4a5:	je     0x40b4d8
  40b4a7:	add    BYTE PTR ss:[rbp+0x69],dh
  40b4ab:	outs   dx,BYTE PTR ds:[rsi]
  40b4ac:	je     0x40b4df
  40b4ae:	add    BYTE PTR ss:[rcx+0x6e],ch
  40b4b2:	je     0x40b4e7
  40b4b4:	xor    al,BYTE PTR [rax]
  40b4b6:	jne    0x40b521
  40b4b8:	outs   dx,BYTE PTR ds:[rsi]
  40b4b9:	je     0x40b4ee
  40b4bb:	xor    al,BYTE PTR [rax]
  40b4bd:	imul   ebp,DWORD PTR [rsi+0x74],0x75003436
  40b4c4:	imul   ebp,DWORD PTR [rsi+0x74],0x64003436
  40b4cb:	outs   dx,DWORD PTR ds:[rsi]
  40b4cc:	jne    0x40b530
  40b4ce:	ins    BYTE PTR es:[rdi],dx
  40b4cf:	add    BYTE PTR gs:[rdx+0x79],ah
  40b4d3:	je     0x40b53a
  40b4d5:	add    BYTE PTR [rdx+0x6f],ah
  40b4d8:	outs   dx,DWORD PTR ds:[rsi]
  40b4d9:	ins    BYTE PTR es:[rdi],dx
  40b4da:	gs (bad) 
  40b4dc:	outs   dx,BYTE PTR ds:[rsi]
  40b4dd:	add    BYTE PTR [rdi+0x62],ch
  40b4e0:	push   0x70
  40b4e2:	(bad)  
  40b4e3:	je     0x40b54d
  40b4e5:	add    BYTE PTR [rip+0x55203a73],ah        # 0x5560ef5e
  40b4eb:	outs   dx,BYTE PTR ds:[rsi]
  40b4ec:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  40b4f0:	outs   dx,BYTE PTR ds:[rsi]
  40b4f1:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  40b4f5:	and    BYTE PTR gs:[rdx],ah
  40b4f8:	and    eax,0xa2273
  40b4fd:	sub    eax,0x7379732d
  40b502:	je     0x40b569
  40b504:	ins    DWORD PTR es:[rdi],dx
  40b505:	add    BYTE PTR [rip+0x7365732d],ch        # 0x73a62838
  40b50b:	jae    0x40b576
  40b50d:	outs   dx,DWORD PTR ds:[rsi]
  40b50e:	outs   dx,BYTE PTR ds:[rsi]
  40b50f:	add    BYTE PTR [rip+0x7375622d],ch        # 0x73b61742
  40b515:	cmp    eax,0x702d2d00
  40b51a:	gs gs jb 0x40b55b
  40b51e:	add    BYTE PTR [rip+0x6464612d],ch        # 0x64a51651
  40b524:	jb     0x40b58b
  40b526:	jae    0x40b59b
  40b528:	cmp    eax,0x0
  40b52d:	add    BYTE PTR [rax],al
  40b52f:	add    BYTE PTR [rdx],ah
  40b531:	sub    eax,0x6565702d
  40b536:	jb     0x40b575
  40b538:	and    ah,BYTE PTR [rax]
  40b53a:	(bad)  
  40b53b:	outs   dx,BYTE PTR ds:[rsi]
  40b53c:	and    BYTE PTR fs:[rdx],ah
  40b53f:	sub    eax,0x7375622d
  40b544:	cmp    eax,0x65722022
  40b549:	jno    0x40b5c0
  40b54b:	imul   esi,DWORD PTR [rdx+0x65],0x206e6120
  40b552:	rex.B
  40b553:	rex.R
  40b554:	rex.R push rdx
  40b556:	rex.RB push r11
  40b558:	push   rbx
  40b559:	or     al,BYTE PTR [rax]
  40b55b:	sub    eax,0x6972702d
  40b560:	outs   dx,BYTE PTR ds:[rsi]
  40b561:	je     0x40b590
  40b563:	jb     0x40b5ca
  40b565:	jo     0x40b5d3
  40b567:	jns    0x40b569
  40b569:	cmp    eax,0x6574696c
  40b56e:	jb     0x40b5d1
  40b570:	ins    BYTE PTR es:[rdi],dx
  40b571:	add    BYTE PTR [rax],al
  40b573:	add    BYTE PTR [rax],al
  40b575:	add    BYTE PTR [rax],al
  40b577:	add    BYTE PTR [rcx+0x6e],ch
  40b57a:	jbe    0x40b5dd
  40b57c:	ins    BYTE PTR es:[rdi],dx
  40b57d:	imul   esp,DWORD PTR [rax+riz*1+0x76],0x65756c61
  40b585:	and    BYTE PTR [rax],ch
  40b587:	and    eax,0x6f202973
  40b58c:	data16 and BYTE PTR [rdx],ah
  40b58f:	sub    eax,0x6972702d
  40b594:	outs   dx,BYTE PTR ds:[rsi]
  40b595:	je     0x40b5c4
  40b597:	jb     0x40b5fe
  40b599:	jo     0x40b607
  40b59b:	jns    0x40b5bf
  40b59d:	or     al,BYTE PTR [rax]
  40b59f:	sub    eax,0x7065722d
  40b5a4:	ins    BYTE PTR es:[rdi],dx
  40b5a5:	jns    0x40b5d4
  40b5a7:	je     0x40b612
  40b5a9:	ins    DWORD PTR es:[rdi],dx
  40b5aa:	outs   dx,DWORD PTR gs:[rsi]
  40b5ac:	jne    0x40b622
  40b5ae:	cmp    eax,0x2d2d2200
  40b5b3:	jb     0x40b61a
  40b5b5:	jo     0x40b623
  40b5b7:	jns    0x40b5e6
  40b5b9:	je     0x40b624
  40b5bb:	ins    DWORD PTR es:[rdi],dx
  40b5bc:	outs   dx,DWORD PTR gs:[rsi]
  40b5be:	jne    0x40b634
  40b5c0:	cmp    eax,0x65722022
  40b5c5:	jno    0x40b63c
  40b5c7:	imul   esi,DWORD PTR [rdx+0x65],0x6e612073
  40b5ce:	and    BYTE PTR [rbp+0x53],cl
  40b5d1:	rex.RB
  40b5d2:	rex.XB or al,BYTE PTR [r8]
  40b5d5:	add    BYTE PTR [rax],al
  40b5d7:	add    BYTE PTR [rcx+0x6e],ch
  40b5da:	jbe    0x40b63d
  40b5dc:	ins    BYTE PTR es:[rdi],dx
  40b5dd:	imul   esp,DWORD PTR [rax+riz*1+0x76],0x65756c61
  40b5e5:	and    BYTE PTR [rax],ch
  40b5e7:	and    eax,0x6f202973
  40b5ec:	data16 and BYTE PTR [rdx],ah
  40b5ef:	sub    eax,0x7065722d
  40b5f4:	ins    BYTE PTR es:[rdi],dx
  40b5f5:	jns    0x40b624
  40b5f7:	je     0x40b662
  40b5f9:	ins    DWORD PTR es:[rdi],dx
  40b5fa:	outs   dx,DWORD PTR gs:[rsi]
  40b5fc:	jne    0x40b672
  40b5fe:	and    cl,BYTE PTR [rdx]
  40b600:	add    BYTE PTR [rip+0x7365642d],ch        # 0x73a61a33
  40b606:	je     0x40b645
  40b608:	add    BYTE PTR [rdx],ah
  40b60a:	sub    eax,0x7365642d
  40b60f:	je     0x40b64e
  40b611:	and    ah,BYTE PTR [rax]
  40b613:	jb     0x40b67a
  40b615:	jno    0x40b68c
  40b617:	imul   esi,DWORD PTR [rdx+0x65],0x6e612073
  40b61e:	and    BYTE PTR [rsi+0x41],cl
  40b621:	rex.WRB
  40b622:	or     r8b,BYTE PTR [r8]
  40b625:	sub    eax,0x7079742d
  40b62a:	gs cmp eax,0x682d2d00
  40b630:	gs ins BYTE PTR es:[rdi],dx
  40b632:	jo     0x40b634
  40b634:	add    BYTE PTR [rax],al
  40b636:	add    BYTE PTR [rax],al
  40b638:	and    ch,BYTE PTR [rip+0x6565702d]        # 0x65a6266b
  40b63e:	jb     0x40b662
  40b640:	and    BYTE PTR [rcx+0x6e],ah
  40b643:	and    BYTE PTR fs:[rdx],ah
  40b646:	sub    eax,0x7375622d
  40b64b:	and    ah,BYTE PTR [rax]
  40b64d:	ins    DWORD PTR es:[rdi],dx
  40b64e:	(bad)  
  40b64f:	jns    0x40b671
  40b651:	outs   dx,BYTE PTR ds:[rsi]
  40b652:	outs   dx,DWORD PTR ds:[rsi]
  40b653:	je     0x40b675
  40b655:	(bad)  
  40b656:	and    BYTE PTR gs:[rbp+0x73],dh
  40b65a:	gs and BYTE PTR fs:[rdi+0x69],dh
  40b65f:	je     0x40b6c9
  40b661:	and    BYTE PTR [rdx],ah
  40b663:	sub    eax,0x7379732d
  40b668:	je     0x40b6cf
  40b66a:	ins    DWORD PTR es:[rdi],dx
  40b66b:	and    ah,BYTE PTR [rax]
  40b66d:	outs   dx,DWORD PTR ds:[rsi]
  40b66e:	jb     0x40b690
  40b670:	and    ch,BYTE PTR [rip+0x7365732d]        # 0x73a629a3
  40b676:	jae    0x40b6e1
  40b678:	outs   dx,DWORD PTR ds:[rsi]
  40b679:	outs   dx,BYTE PTR ds:[rsi]
  40b67a:	and    cl,BYTE PTR [rdx]
  40b67c:	add    BYTE PTR [rax],al
  40b67e:	add    BYTE PTR [rax],al
  40b680:	rex.WRB
  40b681:	gs jae 0x40b6f7
  40b684:	(bad)  
  40b685:	and    BYTE PTR gs:[ecx+edi*2+0x70],dh
  40b68b:	and    BYTE PTR gs:[rdx],ah
  40b68e:	and    eax,0x69202273
  40b693:	jae    0x40b6b5
  40b695:	outs   dx,BYTE PTR ds:[rsi]
  40b696:	outs   dx,DWORD PTR ds:[rsi]
  40b697:	je     0x40b6b9
  40b699:	jae    0x40b710
  40b69b:	jo     0x40b70d
  40b69d:	outs   dx,DWORD PTR ds:[rsi]
  40b69e:	jb     0x40b714
  40b6a0:	gs or  al,BYTE PTR fs:[rax]
  40b6a4:	add    BYTE PTR [rax],al
  40b6a6:	add    BYTE PTR [rax],al
  40b6a8:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
  40b6af:	and    BYTE PTR [rsi+0x61],dh
  40b6b2:	ins    BYTE PTR es:[rdi],dx
  40b6b3:	jne    0x40b71a
  40b6b5:	and    BYTE PTR [rax],ch
  40b6b7:	and    eax,0x6f202973
  40b6bc:	data16 and BYTE PTR [rdx],ah
  40b6bf:	sub    eax,0x7365642d
  40b6c4:	je     0x40b6e8
  40b6c6:	or     al,BYTE PTR [rax]
  40b6c8:	jae    0x40b743
  40b6ca:	jae    0x40b740
  40b6cc:	gs ins DWORD PTR es:[rdi],dx
  40b6ce:	add    BYTE PTR [rbx+0x65],dh
  40b6d1:	jae    0x40b746
  40b6d3:	imul   ebp,DWORD PTR [rdi+0x6e],0x61460000
  40b6da:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  40b6e2:	outs   dx,DWORD PTR ds:[rsi]
  40b6e3:	jo     0x40b74a
  40b6e5:	outs   dx,BYTE PTR ds:[rsi]
  40b6e6:	and    BYTE PTR [rbx+0x6f],ah
  40b6e9:	outs   dx,BYTE PTR ds:[rsi]
  40b6ea:	outs   dx,BYTE PTR ds:[rsi]
  40b6eb:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40b6f0:	outs   dx,BYTE PTR ds:[rsi]
  40b6f1:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  40b6f5:	and    ah,BYTE PTR [rip+0x6d202273]        # 0x6d60d96e
  40b6fb:	gs jae 0x40b771
  40b6fe:	(bad)  
  40b6ff:	and    BYTE PTR gs:[edx+0x75],ah
  40b704:	jae    0x40b740
  40b706:	and    BYTE PTR [rip+0xa73],ah        # 0x40c17f
  40b70c:	add    BYTE PTR [rax],al
  40b70e:	add    BYTE PTR [rax],al
  40b710:	rex.RX (bad) 
  40b712:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  40b71a:	jb     0x40b781
  40b71c:	imul   esi,DWORD PTR [ebx+0x74],0x6f207265
  40b724:	outs   dx,BYTE PTR ds:[rsi]
  40b725:	and    BYTE PTR [rbx+0x6f],ah
  40b728:	outs   dx,BYTE PTR ds:[rsi]
  40b729:	outs   dx,BYTE PTR ds:[rsi]
  40b72a:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40b72f:	outs   dx,BYTE PTR ds:[rsi]
  40b730:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  40b734:	and    ah,BYTE PTR [rip+0x6d202273]        # 0x6d60d9ad
  40b73a:	gs jae 0x40b7b0
  40b73d:	(bad)  
  40b73e:	and    BYTE PTR gs:[edx+0x75],ah
  40b743:	jae    0x40b77f
  40b745:	and    BYTE PTR [rip+0xa73],ah        # 0x40c1be
  40b74b:	add    BYTE PTR [rax],al
  40b74d:	add    BYTE PTR [rax],al
  40b74f:	add    BYTE PTR [rbp+0x75],cl
  40b752:	jae    0x40b7c8
  40b754:	and    BYTE PTR [rbp+0x73],dh
  40b757:	and    BYTE PTR gs:[rdi+0x72],ch
  40b75b:	cs ins DWORD PTR es:[edi],dx
  40b75e:	jns    0x40b7c4
  40b760:	outs   dx,DWORD PTR ds:[rsi]
  40b761:	ins    DWORD PTR es:[rdi],dx
  40b762:	(bad)  
  40b763:	imul   ebp,DWORD PTR [rsi+0x2e],0x65746e49
  40b76a:	jb     0x40b7d2
  40b76c:	(bad)  
  40b76d:	movsxd esp,DWORD PTR [rbp+0x2e]
  40b770:	rex.WRB
  40b771:	gs je  0x40b7dc
  40b774:	outs   dx,DWORD PTR ds:[rsi]
  40b775:	and    BYTE PTR fs:[rsi+0x6f],ch
  40b779:	je     0x40b7dc
  40b77b:	je     0x40b7e6
  40b77d:	outs   dx,DWORD PTR ds:[rsi]
  40b77e:	outs   dx,BYTE PTR ds:[rsi]
  40b77f:	sub    al,0x20
  40b781:	outs   dx,BYTE PTR ds:[rsi]
  40b782:	outs   dx,DWORD PTR ds:[rsi]
  40b783:	and    BYTE PTR [rdi+rbp*2+0x74],ah
  40b787:	and    BYTE PTR [rcx+0x6e],ch
  40b78a:	and    BYTE PTR [rdx],ah
  40b78c:	and    eax,0xa2273
  40b791:	add    BYTE PTR [rax],al
  40b793:	add    BYTE PTR [rax],al
  40b795:	add    BYTE PTR [rax],al
  40b797:	add    BYTE PTR [rbp+0x75],cl
  40b79a:	jae    0x40b810
  40b79c:	and    BYTE PTR [rbp+0x73],dh
  40b79f:	and    BYTE PTR gs:[rdi+0x72],ch
  40b7a3:	cs ins DWORD PTR es:[edi],dx
  40b7a6:	jns    0x40b80c
  40b7a8:	outs   dx,DWORD PTR ds:[rsi]
  40b7a9:	ins    DWORD PTR es:[rdi],dx
  40b7aa:	(bad)  
  40b7ab:	imul   ebp,DWORD PTR [rsi+0x2e],0x65746e49
  40b7b2:	jb     0x40b81a
  40b7b4:	(bad)  
  40b7b5:	movsxd esp,DWORD PTR [rbp+0x2e]
  40b7b8:	push   rbx
  40b7b9:	imul   esp,DWORD PTR [rdi+0x6e],0x6e206c61
  40b7c0:	outs   dx,DWORD PTR ds:[rsi]
  40b7c1:	je     0x40b824
  40b7c3:	je     0x40b82e
  40b7c5:	outs   dx,DWORD PTR ds:[rsi]
  40b7c6:	outs   dx,BYTE PTR ds:[rsi]
  40b7c7:	sub    al,0x20
  40b7c9:	outs   dx,BYTE PTR ds:[rsi]
  40b7ca:	outs   dx,DWORD PTR ds:[rsi]
  40b7cb:	and    BYTE PTR [rdi+rbp*2+0x74],ah
  40b7cf:	and    BYTE PTR [rcx+0x6e],ch
  40b7d2:	and    BYTE PTR [rdx],ah
  40b7d4:	and    eax,0xa2273
  40b7d9:	add    BYTE PTR [rax],al
  40b7db:	add    BYTE PTR [rax],al
  40b7dd:	add    BYTE PTR [rax],al
  40b7df:	add    BYTE PTR [rcx+0x6e],cl
  40b7e2:	je     0x40b849
  40b7e4:	jb     0x40b854
  40b7e6:	(bad)  
  40b7e7:	ins    BYTE PTR es:[rdi],dx
  40b7e8:	and    BYTE PTR [rbp+0x72],ah
  40b7eb:	jb     0x40b85c
  40b7ed:	jb     0x40b81b
  40b7ef:	and    BYTE PTR [rbp+0x6e],dh
  40b7f2:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  40b7f6:	outs   dx,BYTE PTR ds:[rsi]
  40b7f7:	and    BYTE PTR [rbp+0x65],ch
  40b7fa:	jae    0x40b86f
  40b7fc:	(bad)  
  40b7fd:	and    BYTE PTR gs:[ecx+edi*2+0x70],dh
  40b803:	or     al,BYTE PTR gs:[rax]
  40b806:	add    BYTE PTR [rax],al
  40b808:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40b80a:	jne    0x40b878
  40b80c:	outs   dx,BYTE PTR fs:[rsi]
  40b80e:	(bad)  
  40b80f:	je     0x40b831
  40b811:	(bad)  
  40b812:	ins    BYTE PTR es:[rdi],dx
  40b813:	ins    BYTE PTR es:[rdi],dx
  40b814:	outs   dx,DWORD PTR ds:[rsi]
  40b815:	movsxd esp,DWORD PTR [rcx+0x74]
  40b818:	and    BYTE PTR gs:[rbp+rbp*1+0x42],al
  40b81d:	jne    0x40b892
  40b81f:	and    BYTE PTR [rbp+0x65],ch
  40b822:	jae    0x40b897
  40b824:	(bad)  
  40b825:	or     al,BYTE PTR gs:[eax]
  40b829:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  40b82b:	je     0x40b84d
  40b82d:	outs   dx,BYTE PTR gs:[rsi]
  40b82f:	outs   dx,DWORD PTR ds:[rsi]
  40b830:	jne    0x40b899
  40b832:	push   0x6d656d20
  40b837:	outs   dx,DWORD PTR ds:[rsi]
  40b838:	jb     0x40b8b3
  40b83a:	or     al,BYTE PTR [rax]
  40b83c:	add    BYTE PTR [rax],al
  40b83e:	add    BYTE PTR [rax],al
  40b840:	and    eax,0x44203a73
  40b845:	(bad)  
  40b846:	je     0x40b8a9
  40b848:	and    BYTE PTR [rcx+0x74],ch
  40b84b:	gs ins DWORD PTR es:[rdi],dx
  40b84d:	and    BYTE PTR [rdx],ah
  40b84f:	and    eax,0x69202273
  40b854:	jae    0x40b876
  40b856:	(bad)
  40b85b:	and    BYTE PTR [rsi+0x6f],ah
  40b85e:	jb     0x40b8cd
  40b860:	gs or  al,BYTE PTR fs:[rax]
  40b864:	jbe    0x40b8c7
  40b866:	jb     0x40b8d1
  40b868:	(bad)  
  40b869:	outs   dx,BYTE PTR ds:[rsi]
  40b86a:	je     0x40b86c
  40b86c:	(bad)  
  40b86d:	jb     0x40b8e1
  40b86f:	(bad)  
  40b870:	jns    0x40b872
  40b872:	imul   esp,DWORD PTR fs:[rbx+0x74],0x72724500
  40b87a:	outs   dx,DWORD PTR ds:[rsi]
  40b87b:	jb     0x40b89d
  40b87d:	and    eax,0x25203a73
  40b882:	jae    0x40b88e
	...
  40b890:	rex.WRXB
  40b891:	rex.WRXB
  40b892:	rex.WRB and BYTE PTR [r15+0x68],r14b
  40b896:	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0xa7325
  40b89e:	add    BYTE PTR [rax],al
  40b8a0:	xor    ch,0x40
  40b8a3:	add    BYTE PTR [rax],al
  40b8a5:	add    BYTE PTR [rax],al
  40b8a7:	add    BYTE PTR [rax+0x40f0],al
  40b8ad:	add    BYTE PTR [rax],al
  40b8af:	add    BYTE PTR [rax+0x403b],dh
	...
  40b8bd:	add    BYTE PTR [rax],al
  40b8bf:	add    BYTE PTR [rcx+0x72],al
  40b8c2:	addr32 jne 0x40b932
  40b8c5:	outs   dx,BYTE PTR gs:[rsi]
  40b8c7:	je     0x40b8e9
  40b8c9:	outs   dx,DWORD PTR fs:[rsi]
  40b8cb:	ins    DWORD PTR es:[rdi],dx
  40b8cc:	(bad)  
  40b8cd:	imul   ebp,DWORD PTR [rsi+0x20],0x6f727265
  40b8d4:	jb     0x40b8f6
  40b8d6:	sub    BYTE PTR [rdi+rcx*2+0x4d],al
  40b8da:	rex.B
  40b8db:	rex.WB
  40b8dc:	rex.WRX sub QWORD PTR [rax],r8
  40b8df:	rex.B jb 0x40b949
  40b8e2:	jne    0x40b951
  40b8e4:	outs   dx,BYTE PTR gs:[rsi]
  40b8e6:	je     0x40b908
  40b8e8:	jae    0x40b953
  40b8ea:	outs   dx,BYTE PTR ds:[rsi]
  40b8eb:	addr32 jne 0x40b95a
  40b8ee:	(bad)  
  40b8ef:	jb     0x40b95a
  40b8f1:	je     0x40b96c
  40b8f3:	and    BYTE PTR [rax],ch
  40b8f5:	push   rbx
  40b8f6:	rex.WB
  40b8f7:	rex.RXB
  40b8f8:	rex.WRX sub QWORD PTR [rax],r8
  40b8fb:	add    BYTE PTR [rax],al
  40b8fd:	add    BYTE PTR [rax],al
  40b8ff:	add    BYTE PTR [rdi+0x76],cl
  40b902:	gs jb  0x40b96b
  40b905:	ins    BYTE PTR es:[rdi],dx
  40b906:	outs   dx,DWORD PTR ds:[rsi]
  40b907:	ja     0x40b929
  40b909:	jb     0x40b96c
  40b90b:	outs   dx,BYTE PTR ds:[rsi]
  40b90c:	and    BYTE PTR gs:[ebp+0x72],ah
  40b911:	jb     0x40b982
  40b913:	jb     0x40b935
  40b915:	sub    BYTE PTR [rdi+0x56],cl
  40b918:	rex.RB push r10
  40b91a:	rex.RX
  40b91b:	rex.WR
  40b91c:	rex.WRXB push r15
  40b91e:	sub    DWORD PTR [rax],eax
  40b920:	push   rax
  40b921:	(bad)  
  40b922:	jb     0x40b998
  40b924:	imul   esp,DWORD PTR [rcx+0x6c],0x736f6c20
  40b92b:	jae    0x40b94d
  40b92d:	outs   dx,DWORD PTR ds:[rsi]
  40b92e:	data16 and BYTE PTR [rbx+0x69],dh
  40b932:	outs   dx,BYTE PTR ds:[esi]
  40b934:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  40b93b:	and    BYTE PTR gs:[rax],ch
  40b93e:	push   rax
  40b93f:	rex.WR
  40b940:	rex.WRXB push r11
  40b942:	push   rbx
  40b943:	sub    DWORD PTR [rax],eax
  40b945:	add    BYTE PTR [rax],al
  40b947:	add    BYTE PTR [rdi+rbp*2+0x74],dl
  40b94b:	(bad)  
  40b94c:	ins    BYTE PTR es:[rdi],dx
  40b94d:	and    BYTE PTR [rdi+rbp*2+0x73],ch
  40b951:	jae    0x40b973
  40b953:	outs   dx,DWORD PTR ds:[rsi]
  40b954:	data16 and BYTE PTR [rbx+0x69],dh
  40b958:	outs   dx,BYTE PTR ds:[esi]
  40b95a:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  40b961:	and    BYTE PTR gs:[rax],ch
  40b964:	push   rsp
  40b965:	rex.WR
  40b966:	rex.WRXB push r11
  40b968:	push   rbx
  40b969:	sub    DWORD PTR [rax],eax
  40b96b:	add    BYTE PTR [rax],al
  40b96d:	add    BYTE PTR [rax],al
  40b96f:	add    BYTE PTR [rax+rbp*2+0x65],dl
  40b973:	and    BYTE PTR [rdx+0x65],dh
  40b976:	jae    0x40b9ed
  40b978:	ins    BYTE PTR es:[rdi],dx
  40b979:	je     0x40b99b
  40b97b:	imul   esi,DWORD PTR [rbx+0x20],0x206f6f74
  40b982:	jae    0x40b9f1
  40b984:	(bad)  
  40b985:	ins    BYTE PTR es:[rdi],dx
  40b986:	ins    BYTE PTR es:[rdi],dx
  40b987:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  40b98b:	(bad)  
  40b98c:	and    BYTE PTR gs:[rdx+0x65],dh
  40b990:	jo     0x40ba04
  40b992:	gs jae 0x40b9fa
  40b995:	outs   dx,BYTE PTR ds:[rsi]
  40b996:	je     0x40b9fd
  40b998:	and    BYTE PTR fs:[rax],ch
  40b99b:	push   rbp
  40b99c:	rex.WRX
  40b99d:	rex.R
  40b99e:	rex.RB push r10
  40b9a0:	rex.RX
  40b9a1:	rex.WR
  40b9a2:	rex.WRXB push r15
  40b9a4:	sub    DWORD PTR [rax],eax
  40b9a6:	push   rbp
  40b9a7:	outs   dx,BYTE PTR ds:[rsi]
  40b9a8:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  40b9ac:	outs   dx,BYTE PTR ds:[rsi]
  40b9ad:	and    BYTE PTR [rbp+0x72],ah
  40b9b0:	jb     0x40ba21
  40b9b2:	jb     0x40b9b4
  40b9b4:	add    BYTE PTR [rax],al
  40b9b6:	add    BYTE PTR [rax],al
  40b9b8:	pop    rdi
  40b9b9:	ins    DWORD PTR es:[rdi],dx
  40b9ba:	(bad)  
  40b9bb:	je     0x40ba25
  40b9bd:	gs jb  0x40ba32
  40b9c0:	sub    BYTE PTR [rcx],ch
  40b9c2:	cmp    ah,BYTE PTR [rax]
  40b9c4:	and    eax,0x6e692073
  40b9c9:	and    BYTE PTR [rip+0x67252873],ah        # 0x6765e242
  40b9cf:	sub    al,0x20
  40b9d1:	and    eax,0x20202967
  40b9d6:	sub    BYTE PTR [rdx+0x65],dh
  40b9d9:	je     0x40ba51
  40b9db:	(bad)  
  40b9dc:	ins    BYTE PTR es:[rdi],dx
  40b9dd:	cmp    eax,0xa296725
  40b9e2:	add    BYTE PTR [rax],al
  40b9e4:	pushf  
  40b9e5:	cmp    edi,0xffffffff
  40b9e8:	fld    QWORD PTR [rdx-0x7cb30001]
  40b9ee:	(bad)  
  40b9ef:	call   FWORD PTR [rbx+rax*4-0x1]
  40b9f3:	jmp    FWORD PTR [rbx+rax*4-0x1]
  40b9f7:	(bad)  
  40b9f8:	jl     0x40b97d
  40b9fa:	(bad)  
  40b9fb:	dec    DWORD PTR [rbx+rax*4+0x694dffff]
  40ba02:	outs   dx,BYTE PTR ds:[rsi]
  40ba03:	addr32 ja 0x40ba33
  40ba06:	ja     0x40ba3e
  40ba08:	xor    al,0x20
  40ba0a:	jb     0x40ba81
  40ba0c:	outs   dx,BYTE PTR ds:[rsi]
  40ba0d:	je     0x40ba78
  40ba0f:	ins    DWORD PTR es:[rdi],dx
  40ba10:	and    BYTE PTR gs:[rsi+0x61],ah
  40ba14:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0xa3a65
  40ba1c:	add    BYTE PTR [rax],al
  40ba1e:	add    BYTE PTR [rax],al
  40ba20:	rex.B
  40ba21:	fs fs jb 0x40ba8a
  40ba25:	jae    0x40ba9a
  40ba27:	and    BYTE PTR [rip+0x61682070],ah        # 0x61a8da9d
  40ba2d:	jae    0x40ba4f
  40ba2f:	outs   dx,BYTE PTR ds:[rsi]
  40ba30:	outs   dx,DWORD PTR ds:[rsi]
  40ba31:	and    BYTE PTR [rcx+0x6d],ch
  40ba34:	(bad)  
  40ba35:	addr32 gs sub eax,0x74636573
  40ba3c:	imul   ebp,DWORD PTR [rdi+0x6e],0x56202000
  40ba43:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  40ba4a:	jne    0x40bab1
  40ba4c:	jb     0x40bac7
  40ba4e:	and    BYTE PTR [rsi+0x61],ah
  40ba51:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x726f6620
  40ba59:	and    BYTE PTR [rip+0x79622064],ah        # 0x79a2dac3
  40ba5f:	je     0x40bac6
  40ba61:	jae    0x40ba83
  40ba63:	(bad)  
  40ba64:	je     0x40ba86
  40ba66:	(bad)  
  40ba67:	fs fs jb 0x40bad0
  40ba6b:	jae    0x40bae0
  40ba6d:	and    BYTE PTR [rip+0x70],ah        # 0x40bae3
  40ba73:	add    BYTE PTR [rax],al
  40ba75:	add    BYTE PTR [rax],al
  40ba77:	add    BYTE PTR [rax],ah
  40ba79:	and    BYTE PTR [rsi+0x69],dl
  40ba7c:	jb     0x40baf2
  40ba7e:	jne    0x40bae1
  40ba80:	ins    BYTE PTR es:[rdi],dx
  40ba81:	push   rax
  40ba82:	jb     0x40baf3
  40ba84:	je     0x40baeb
  40ba86:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
  40ba8a:	(bad)  
  40ba8b:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
  40ba93:	push   0x646f6320
  40ba98:	and    BYTE PTR gs:[rax],dh
  40ba9b:	js     0x40bac2
  40ba9d:	js     0x40ba9f
  40ba9f:	add    BYTE PTR [rax],ah
  40baa1:	and    BYTE PTR [rbp+0x6e],dl
  40baa4:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  40baa8:	outs   dx,BYTE PTR ds:[rsi]
  40baa9:	and    BYTE PTR [rax+0x73],dh
  40baac:	gs jne 0x40bb13
  40baaf:	outs   dx,DWORD PTR ds:[rsi]
  40bab0:	and    BYTE PTR [rdx+0x65],dh
  40bab3:	ins    BYTE PTR es:[rdi],dx
  40bab4:	outs   dx,DWORD PTR ds:[rsi]
  40bab5:	movsxd esp,DWORD PTR [rcx+0x74]
  40bab8:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727020
  40babf:	je     0x40bb30
  40bac1:	movsxd ebp,DWORD PTR [rdi+0x6c]
  40bac4:	and    BYTE PTR [rsi+0x65],dh
  40bac7:	jb     0x40bb3c
  40bac9:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  40bad0:	or     al,BYTE PTR [rax]
  40bad2:	add    BYTE PTR [rax],al
  40bad4:	add    BYTE PTR [rax],al
  40bad6:	add    BYTE PTR [rax],al
  40bad8:	and    BYTE PTR [rax],ah
  40bada:	push   rbp
  40badb:	outs   dx,BYTE PTR ds:[rsi]
  40badc:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  40bae0:	outs   dx,BYTE PTR ds:[rsi]
  40bae1:	and    BYTE PTR [rax+0x73],dh
  40bae4:	gs jne 0x40bb4b
  40bae7:	outs   dx,DWORD PTR ds:[rsi]
  40bae8:	and    BYTE PTR [rdx+0x65],dh
  40baeb:	ins    BYTE PTR es:[rdi],dx
  40baec:	outs   dx,DWORD PTR ds:[rsi]
  40baed:	movsxd esp,DWORD PTR [rcx+0x74]
  40baf0:	imul   ebp,DWORD PTR [rdi+0x6e],0x74696220
  40baf7:	and    BYTE PTR [rbx+0x69],dh
  40bafa:	jp     0x40bb61
  40bafc:	and    BYTE PTR [rip+0xa2e64],ah        # 0x4ae966
	...
  40bb0e:	add    BYTE PTR [rax],al
  40bb10:	cs jo  0x40bb77
  40bb13:	(bad)  
  40bb14:	je     0x40bb77
	...
  40bb1e:	add    BYTE PTR [rax],al
  40bb20:	rcl    BYTE PTR [rdx-0x6d3b0001],0xff
  40bb27:	push   rax
  40bb29:	xchg   edx,eax
  40bb2a:	(bad)  
  40bb2b:	inc    DWORD PTR [rcx]
  40bb2d:	xchg   ebx,eax
  40bb2e:	(bad)  
  40bb2f:	push   QWORD PTR [rax+0x70ffff92]
  40bb35:	xchg   edx,eax
  40bb36:	(bad)  
  40bb37:	inc    eax
  40bb39:	xchg   edx,eax
  40bb3a:	(bad)  
  40bb3b:	inc    DWORD PTR [rax]
  40bb3d:	add    BYTE PTR [rax],al
  40bb3f:	add    BYTE PTR [rsi+0x66],ch
  40bb42:	add    BYTE PTR [rcx+0x6e],ch
  40bb45:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x97006e61
  40bb4d:	popf   
  40bb4e:	(bad)  
  40bb4f:	push   QWORD PTR [rdi+rbx*4]
  40bb52:	(bad)  
  40bb53:	push   QWORD PTR [rdi+rbx*4]
  40bb56:	(bad)  
  40bb57:	push   QWORD PTR [rdi+rbx*4]
  40bb5a:	(bad)  
  40bb5b:	push   QWORD PTR [rdi+rbx*4]
  40bb5e:	(bad)  
  40bb5f:	push   QWORD PTR [rdi+rbx*4]
  40bb62:	(bad)  
  40bb63:	push   QWORD PTR [rdi+rbx*4]
  40bb66:	(bad)  
  40bb67:	push   QWORD PTR [rdi+rbx*4]
  40bb6a:	(bad)  
  40bb6b:	push   QWORD PTR [rdi+rbx*4]
  40bb6e:	(bad)  
  40bb6f:	call   QWORD PTR [rdi+rbx*4]
  40bb72:	(bad)  
  40bb73:	call   QWORD PTR [rdi+rbx*4]
  40bb76:	(bad)  
  40bb77:	call   QWORD PTR [rdi+rbx*4]
  40bb7a:	(bad)  
  40bb7b:	call   QWORD PTR [rdi+rbx*4]
  40bb7e:	(bad)  
  40bb7f:	call   QWORD PTR [rdi+rbx*4]
  40bb82:	(bad)  
  40bb83:	push   QWORD PTR [rdi+rbx*4]
  40bb86:	(bad)  
  40bb87:	push   QWORD PTR [rdi+rbx*4]
  40bb8a:	(bad)  
  40bb8b:	push   QWORD PTR [rdi+rbx*4]
  40bb8e:	(bad)  
  40bb8f:	push   QWORD PTR [rdi+rbx*4]
  40bb92:	(bad)  
  40bb93:	push   QWORD PTR [rdi+rbx*4]
  40bb96:	(bad)  
  40bb97:	push   QWORD PTR [rdi+rbx*4]
  40bb9a:	(bad)  
  40bb9b:	push   QWORD PTR [rdi+rbx*4]
  40bb9e:	(bad)  
  40bb9f:	push   QWORD PTR [rdi+rbx*4]
  40bba2:	(bad)  
  40bba3:	push   QWORD PTR [rdi+rbx*4]
  40bba6:	(bad)  
  40bba7:	push   QWORD PTR [rdi+rbx*4]
  40bbaa:	(bad)  
  40bbab:	push   QWORD PTR [rdi+rbx*4]
  40bbae:	(bad)  
  40bbaf:	push   QWORD PTR [rdi+rbx*4]
  40bbb2:	(bad)  
  40bbb3:	push   QWORD PTR [rdi+rbx*4]
  40bbb6:	(bad)  
  40bbb7:	push   QWORD PTR [rdi+rbx*4]
  40bbba:	(bad)  
  40bbbb:	push   QWORD PTR [rdi+rbx*4]
  40bbbe:	(bad)  
  40bbbf:	push   QWORD PTR [rdi+rbx*4]
  40bbc2:	(bad)  
  40bbc3:	push   QWORD PTR [rdi+rbx*4]
  40bbc6:	(bad)  
  40bbc7:	push   QWORD PTR [rdi+rbx*4]
  40bbca:	(bad)  
  40bbcb:	call   QWORD PTR [rdi+rbx*4]
  40bbce:	(bad)  
  40bbcf:	push   QWORD PTR [rdi+rbx*4]
  40bbd2:	(bad)  
  40bbd3:	push   QWORD PTR [rdi+rbx*4]
  40bbd6:	(bad)  
  40bbd7:	push   QWORD PTR [rdi+rbx*4]
  40bbda:	(bad)  
  40bbdb:	push   QWORD PTR [rdi+rbx*4]
  40bbde:	(bad)  
  40bbdf:	push   QWORD PTR [rdi+rbx*4]
  40bbe2:	(bad)  
  40bbe3:	push   QWORD PTR [rdi+rbx*4]
  40bbe6:	(bad)  
  40bbe7:	push   QWORD PTR [rdi+rbx*4]
  40bbea:	(bad)  
  40bbeb:	push   QWORD PTR [rdi+rbx*4]
  40bbee:	(bad)  
  40bbef:	push   QWORD PTR [rdi+rbx*4]
  40bbf2:	(bad)  
  40bbf3:	push   QWORD PTR [rdi+rbx*4]
  40bbf6:	(bad)  
  40bbf7:	jmp    QWORD PTR [rsi+rbx*4-0x1]
  40bbfb:	push   QWORD PTR [rdi+rbx*4]
  40bbfe:	(bad)  
  40bbff:	call   QWORD PTR [rdi+0xffff9f]
	...
  40bc41:	add    BYTE PTR [rax],al
  40bc43:	add    BYTE PTR [rbx],al
  40bc45:	add    BYTE PTR [rax],al
  40bc47:	add    BYTE PTR [rip+0x7000000],al        # 0x740bc4d
  40bc4d:	add    BYTE PTR [rax],al
  40bc4f:	add    BYTE PTR [rdx],cl
  40bc51:	add    BYTE PTR [rax],al
  40bc53:	add    BYTE PTR [rax+rax*1],cl
  40bc56:	add    BYTE PTR [rax],al
  40bc58:	(bad)  
  40bc59:	add    BYTE PTR [rax],al
  40bc5b:	add    BYTE PTR [rcx],dl
  40bc5d:	add    BYTE PTR [rax],al
  40bc5f:	add    BYTE PTR [rbx],dl
  40bc61:	add    BYTE PTR [rax],al
  40bc63:	add    BYTE PTR [rip+0x18000000],dl        # 0x1840bc69
  40bc69:	add    BYTE PTR [rax],al
  40bc6b:	add    BYTE PTR [rdx],bl
  40bc6d:	add    BYTE PTR [rax],al
  40bc6f:	add    BYTE PTR [rax+rax*1],bl
  40bc72:	add    BYTE PTR [rax],al
  40bc74:	(bad)  
  40bc75:	add    BYTE PTR [rax],al
  40bc77:	add    BYTE PTR [rcx],ah
  40bc79:	add    BYTE PTR [rax],al
  40bc7b:	add    BYTE PTR [rbx],ah
  40bc7d:	add    BYTE PTR [rax],al
  40bc7f:	add    BYTE PTR [rsi],ah
  40bc81:	add    BYTE PTR [rax],al
  40bc83:	add    BYTE PTR [rax],ch
  40bc85:	add    BYTE PTR [rax],al
  40bc87:	add    BYTE PTR [rdx],ch
  40bc89:	add    BYTE PTR [rax],al
  40bc8b:	add    BYTE PTR [rip+0x2f000000],ch        # 0x2f40bc91
  40bc91:	add    BYTE PTR [rax],al
  40bc93:	add    BYTE PTR [rcx],dh
  40bc95:	add    BYTE PTR [rax],al
  40bc97:	add    BYTE PTR [rax+rax*1],dh
	...
  40bca6:	lock (bad) 
	...
  40bcb4:	add    BYTE PTR [rax],al
  40bcb6:	add    BYTE PTR [rax+0x0],al
  40bcb9:	add    BYTE PTR [rax],al
  40bcbb:	add    BYTE PTR [rax],al
  40bcbd:	add    al,ah
  40bcbf:	(bad)  
  40bcc0:	add    BYTE PTR [rax],al
  40bcc2:	sar    bh,0xff
  40bcc5:	(bad)  
  40bcc6:	fild   WORD PTR [rcx+0x16]
  40bcc9:	push   rsi
  40bcca:	out    0x9e,eax
  40bccc:	scas   eax,DWORD PTR es:[rdi]
  40bccd:	add    eax,edx
  40bccf:	cmp    al,0x0
  40bcd1:	add    BYTE PTR [rax],al
  40bcd3:	add    BYTE PTR [rax],al
  40bcd5:	add    BYTE PTR [rax],al
  40bcd7:	add    BYTE PTR [rax],0x0
	...
  40bcfe:	add    BYTE PTR [rax],al
  40bd00:	rex.B
  40bd01:	rex.X
  40bd02:	rex.XB
  40bd03:	rex.R
  40bd04:	rex.RB
  40bd05:	rex.RX add BYTE PTR [rcx+0x62],r12b
  40bd09:	movsxd esp,DWORD PTR [rbp+riz*2+0x66]
  40bd0d:	add    BYTE PTR [rax],dh
  40bd0f:	xor    DWORD PTR [rdx],esi
  40bd11:	xor    esi,DWORD PTR [rsi*1+0x39383736]
	...
  40bd40:	add    eax,0x19000000
  40bd45:	add    BYTE PTR [rax],al
  40bd47:	add    BYTE PTR [rbp+0x0],bh
	...
  40bd86:	lock (bad) 
  40bd88:	add    BYTE PTR [rax],al
  40bd8a:	add    BYTE PTR [rax],al
  40bd8c:	add    BYTE PTR [rax],al
  40bd8e:	and    al,0x40
  40bd90:	add    BYTE PTR [rax],al
  40bd92:	add    BYTE PTR [rax],al
  40bd94:	add    BYTE PTR [rax],al
  40bd96:	pop    rcx
  40bd97:	add    BYTE PTR [rax],al
  40bd9a:	add    BYTE PTR [rax],al
  40bd9c:	add    BYTE PTR [rax-0x71],al
  40bd9f:	add    BYTE PTR [rax],al
  40bda2:	add    BYTE PTR [rax],al
  40bda4:	add    BYTE PTR [rax+0x40c3],cl
  40bdaa:	add    BYTE PTR [rax],al
  40bdac:	add    BYTE PTR [rdx-0x8],ch
  40bdaf:	add    BYTE PTR [rax],al
  40bdb2:	add    BYTE PTR [rax],al
  40bdb4:	add    BYTE PTR [rsi+rbp*1+0x41],0x0
  40bdbc:	rcl    BYTE PTR [rdx],1
  40bdbe:	movsxd eax,DWORD PTR [rcx+0x0]
  40bdc1:	add    BYTE PTR [rax],al
  40bdc3:	add    BYTE PTR [rdi+rdx*8+0x4197],al
  40bdca:	add    BYTE PTR [rax],al
  40bdcc:	gs int 0xcd
  40bdcf:	add    BYTE PTR [r8],al
  40bdd2:	add    BYTE PTR [rax],ah
  40bdd4:	pop    rdi
  40bdd5:	movabs al,ds:0x4876e80000004202
  40bdde:	(bad)  
  40bddf:	rex.X add BYTE PTR [rax],al
  40bde2:	add    BYTE PTR [rdx+0x426d1a94],ah
  40bde8:	add    BYTE PTR [rax],al
  40bdea:	rex in eax,0x9c
  40bded:	xor    BYTE PTR [rdx-0x6fffffbe],ah
  40bdf3:	(bad)  
  40bdf4:	(bad)  
  40bdf5:	mov    esp,0x42d6
  40bdfa:	xor    al,0x26
  40bdfc:	cmc    
  40bdfd:	imul   ecx,DWORD PTR [rbx+rax*2],0x0
  40be01:	and    al,0x37
  40be04:	jns    0x40bdc9
  40be06:	rex.B
  40be07:	rex.XB add BYTE PTR [r8+0x345785d8],spl
  40be0e:	jbe    0x40be53
  40be10:	add    al,cl
  40be12:	rex.WRX
  40be13:	ins    DWORD PTR es:[edi],dx
  40be15:	shr    DWORD PTR [rbx-0x6ec2ffbd],0x60
  40be1c:	in     al,0x58
  40be1e:	loope  0x40be63
  40be20:	rex mov WORD PTR [rbp+0x15af1d78],?
  40be27:	rex.R push rax
  40be29:	out    dx,eax
  40be2a:	loop   0x40be02
  40be2c:	in     al,0x1a
  40be2e:	rex.WXB
  40be2f:	rex.R xchg edx,eax
  40be31:	(bad)  
  40be32:	rex.WRB (bad) 
  40be34:	iret   
  40be35:	lock add BYTE PTR [rax+rax*1+0x0],0x0
  40be3b:	add    BYTE PTR [rax],al
  40be3d:	add    BYTE PTR [rax],al
  40be3f:	add    BYTE PTR [rcx+rcx*4-0x2d4d6828],bh
  40be46:	pushf  
  40be47:	cmp    al,0x33
  40be49:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  40be4a:	test   al,0xd5
  40be4c:	and    esi,esi
  40be4e:	cmp    QWORD PTR [rip+0xfffffffffd44f4a7],rdi        # 0xfffffffffd85b2fc
  40be55:	shld   DWORD PTR [rdx],esi,cl
  40be58:	popf   
  40be59:	xchg   edi,eax
  40be5a:	mov    edi,cs
  40be5c:	or     BYTE PTR [rdx+0x6f43255b],bh
  40be62:	lods   al,BYTE PTR ds:[rsi]
  40be63:	sub    BYTE PTR fs:[rsi],al
  40be66:	enter  0xa,0x0
	...
  40be7e:	add    BYTE PTR [rax],al
  40be80:	add    BYTE PTR [rax-0x3c86c820],al
  40be86:	rex.B
  40be87:	rex.XB (bad) 
  40be89:	outs   dx,BYTE PTR ds:[rsi]
  40be8a:	add    eax,0x93b8b5b5
  40be8f:	rex.RX cmc 
  40be91:	stc    
  40be92:	(bad)  
  40be93:	jmp    0x4d790d9b
  40be98:	xor    bl,BYTE PTR [rip+0x7748f930]        # 0x7789b7ce
  40be9e:	(bad)  
  40be9f:	pop    rdx
  40bea0:	cmp    al,0xbf
  40bea2:	jae    0x40bf23
  40bea4:	fisttp QWORD PTR [rdi+0x15]
  40bea7:	jne    0x40bea9
	...
  40bebd:	add    BYTE PTR [rax],al
  40bebf:	add    BYTE PTR [rax-0x60],al
  40bec2:	add    BYTE PTR [rax],al
	...
  40becd:	add    BYTE PTR [rax],al
  40becf:	add    BYTE PTR [rax-0x60],dh
  40bed2:	add    BYTE PTR [rax],al
	...
  40bedd:	add    BYTE PTR [rax],al
  40bedf:	add    BYTE PTR [rax+0x4093],dh
	...
  40beed:	add    BYTE PTR [rax],al
  40beef:	add    al,ah
  40bef1:	(bad)
	...
  40bf00:	loopne 0x40bec7
  40bf02:	add    BYTE PTR [rax],al
	...
  40bf0d:	add    BYTE PTR [rax],al
  40bf0f:	add    BYTE PTR [rax+0x40be],al
	...
  40bf1d:	add    BYTE PTR [rax],al
  40bf1f:	add    BYTE PTR [rax+0x40b8],dh
	...
  40bf2d:	add    BYTE PTR [rax],al
  40bf2f:	add    al,al
  40bf31:	add    al,0x41
	...
  40bf3f:	add    BYTE PTR [rax],al
  40bf41:	add    BYTE PTR [rax+0x0],al
	...
  40bf50:	loopne 0x40bf67
  40bf52:	add    BYTE PTR [r8],al
	...
  40bf5d:	add    BYTE PTR [rax],al
  40bf5f:	add    BYTE PTR [rax],cl
  40bf61:	(bad)  
  40bf62:	add    BYTE PTR [r8],al
	...
  40bf6d:	add    BYTE PTR [rax],al
  40bf6f:	add    BYTE PTR [rax],ch
  40bf71:	(bad)  
  40bf72:	add    BYTE PTR [r8],al
	...
  40bf7d:	add    BYTE PTR [rax],al
  40bf7f:	add    BYTE PTR [rax+0x16],al
  40bf82:	add    BYTE PTR [r8],al
	...
  40bf8d:	add    BYTE PTR [rax],al
  40bf8f:	add    al,al
  40bf91:	test   BYTE PTR [rax+0x0],0x0
	...
  40bf9d:	add    BYTE PTR [rax],al
  40bf9f:	add    BYTE PTR [rax+0x4],bh
  40bfa2:	add    BYTE PTR [r8],al
	...
  40bfad:	add    BYTE PTR [rax],al
  40bfaf:	add    BYTE PTR [rax+0x4],dh
  40bfb2:	add    BYTE PTR [r8],al
	...
  40bfbd:	add    BYTE PTR [rax],al
  40bfbf:	add    BYTE PTR [rax+0x4],ah
  40bfc2:	add    BYTE PTR [r8],al
	...
  40bfcd:	add    BYTE PTR [rax],al
  40bfcf:	add    BYTE PTR [rax+0x4],ch
  40bfd2:	add    BYTE PTR [r8],al
	...
  40bfdd:	add    BYTE PTR [rax],al
  40bfdf:	add    BYTE PTR [rax+0x40bd],al
	...
  40bfed:	add    BYTE PTR [rax],al
  40bfef:	add    BYTE PTR [rax-0x42],al
  40bff2:	add    BYTE PTR [rax],al
	...
  40c001:	xor    BYTE PTR [rcx+0x0],al
	...
  40c010:	adc    BYTE PTR [rax],dh
  40c012:	add    BYTE PTR [r8],al
	...
  40c01d:	add    BYTE PTR [rax],al
  40c01f:	add    BYTE PTR [rax],bl
  40c021:	xor    BYTE PTR [rcx+0x0],al
	...
  40c030:	xor    BYTE PTR [rax],dh
  40c032:	add    BYTE PTR [r8],al
	...
  40c03d:	add    BYTE PTR [rax],al
  40c03f:	add    BYTE PTR [rax-0x10],dl
  40c042:	add    BYTE PTR [rax],al
	...
  40c04d:	add    BYTE PTR [rax],al
  40c04f:	add    BYTE PTR [rax+0x40f6],dl
	...
  40c05d:	add    BYTE PTR [rax],al
  40c05f:	add    BYTE PTR [rax+0x45],al
  40c062:	add    BYTE PTR [rax],al
	...
  40c06d:	add    BYTE PTR [rax],al
  40c06f:	add    BYTE PTR [rax+0x403c],dl
	...
  40c07d:	add    BYTE PTR [rax],al
  40c07f:	add    BYTE PTR [rax-0xa],al
  40c082:	add    BYTE PTR [rax],al
	...
  40c08d:	add    BYTE PTR [rax],al
  40c08f:	add    BYTE PTR [rax-0xa],dh
  40c092:	add    BYTE PTR [rax],al
	...
  40c09d:	add    BYTE PTR [rax],al
  40c09f:	add    BYTE PTR [rax-0x10],ah
  40c0a2:	add    BYTE PTR [rax],al
	...
  40c0ad:	add    BYTE PTR [rax],al
  40c0af:	add    BYTE PTR [rax-0xa],bl
  40c0b2:	add    BYTE PTR [rax],al
	...
  40c0bd:	add    BYTE PTR [rax],al
  40c0bf:	add    BYTE PTR [rsi+rsi*8+0x40],dl
	...
  40c0cf:	add    BYTE PTR [rax-0xa],dl
  40c0d2:	add    BYTE PTR [rax],al
	...
  40c0dd:	add    BYTE PTR [rax],al
  40c0df:	add    BYTE PTR [rdi+0x43],al
  40c0e2:	rex.XB cmp spl,BYTE PTR [r8]
  40c0e5:	sub    BYTE PTR [rdi+0x4e],al
  40c0e8:	push   rbp
  40c0e9:	sub    DWORD PTR [rax],esp
  40c0eb:	xor    al,0x2e
  40c0ed:	cmp    DWORD PTR [rsi],ebp
  40c0ef:	xor    al,0x0
	...
  40c0fd:	add    BYTE PTR [rax],al
  40c0ff:	add    BYTE PTR [rdi+0x43],al
  40c102:	rex.XB cmp spl,BYTE PTR [r8]
  40c105:	sub    BYTE PTR [rdi+0x4e],al
  40c108:	push   rbp
  40c109:	sub    DWORD PTR [rax],esp
  40c10b:	xor    al,0x2e
  40c10d:	cmp    DWORD PTR [rsi],ebp
  40c10f:	xor    al,0x0
	...
  40c11d:	add    BYTE PTR [rax],al
  40c11f:	add    BYTE PTR [rdi+0x43],al
  40c122:	rex.XB cmp spl,BYTE PTR [r8]
  40c125:	sub    BYTE PTR [rdi+0x4e],al
  40c128:	push   rbp
  40c129:	sub    DWORD PTR [rax],esp
  40c12b:	xor    al,0x2e
  40c12d:	cmp    DWORD PTR [rsi],ebp
  40c12f:	xor    al,0x0
	...
  40c13d:	add    BYTE PTR [rax],al
  40c13f:	add    BYTE PTR [rdi+0x43],al
  40c142:	rex.XB cmp spl,BYTE PTR [r8]
  40c145:	sub    BYTE PTR [rdi+0x4e],al
  40c148:	push   rbp
  40c149:	sub    DWORD PTR [rax],esp
  40c14b:	xor    al,0x2e
  40c14d:	cmp    DWORD PTR [rsi],ebp
  40c14f:	xor    al,0x0
	...
  40c15d:	add    BYTE PTR [rax],al
  40c15f:	add    BYTE PTR [rdi+0x43],al
  40c162:	rex.XB cmp spl,BYTE PTR [r8]
  40c165:	sub    BYTE PTR [rdi+0x4e],al
  40c168:	push   rbp
  40c169:	sub    DWORD PTR [rax],esp
  40c16b:	xor    al,0x2e
  40c16d:	cmp    DWORD PTR [rsi],ebp
  40c16f:	xor    al,0x0
	...
  40c17d:	add    BYTE PTR [rax],al
  40c17f:	add    BYTE PTR [rdi+0x43],al
  40c182:	rex.XB cmp spl,BYTE PTR [r8]
  40c185:	sub    BYTE PTR [rdi+0x4e],al
  40c188:	push   rbp
  40c189:	sub    DWORD PTR [rax],esp
  40c18b:	xor    al,0x2e
  40c18d:	cmp    DWORD PTR [rsi],ebp
  40c18f:	xor    al,0x0
	...
  40c19d:	add    BYTE PTR [rax],al
  40c19f:	add    BYTE PTR [rdi+0x43],al
  40c1a2:	rex.XB cmp spl,BYTE PTR [r8]
  40c1a5:	sub    BYTE PTR [rdi+0x4e],al
  40c1a8:	push   rbp
  40c1a9:	sub    DWORD PTR [rax],esp
  40c1ab:	xor    al,0x2e
  40c1ad:	cmp    DWORD PTR [rsi],ebp
  40c1af:	xor    al,0x0
	...
  40c1bd:	add    BYTE PTR [rax],al
  40c1bf:	add    BYTE PTR [rdi+0x43],al
  40c1c2:	rex.XB cmp spl,BYTE PTR [r8]
  40c1c5:	sub    BYTE PTR [rdi+0x4e],al
  40c1c8:	push   rbp
  40c1c9:	sub    DWORD PTR [rax],esp
  40c1cb:	xor    al,0x2e
  40c1cd:	cmp    DWORD PTR [rsi],ebp
  40c1cf:	xor    al,0x0
	...
  40c1dd:	add    BYTE PTR [rax],al
  40c1df:	add    BYTE PTR [rdi+0x43],al
  40c1e2:	rex.XB cmp spl,BYTE PTR [r8]
  40c1e5:	sub    BYTE PTR [rdi+0x4e],al
  40c1e8:	push   rbp
  40c1e9:	sub    DWORD PTR [rax],esp
  40c1eb:	xor    al,0x2e
  40c1ed:	cmp    DWORD PTR [rsi],ebp
  40c1ef:	xor    al,0x0
	...
  40c1fd:	add    BYTE PTR [rax],al
  40c1ff:	add    BYTE PTR [rdi+0x43],al
  40c202:	rex.XB cmp spl,BYTE PTR [r8]
  40c205:	sub    BYTE PTR [rdi+0x4e],al
  40c208:	push   rbp
  40c209:	sub    DWORD PTR [rax],esp
  40c20b:	xor    al,0x2e
  40c20d:	cmp    DWORD PTR [rsi],ebp
  40c20f:	xor    al,0x0
	...
  40c21d:	add    BYTE PTR [rax],al
  40c21f:	add    BYTE PTR [rdi+0x43],al
  40c222:	rex.XB cmp spl,BYTE PTR [r8]
  40c225:	sub    BYTE PTR [rdi+0x4e],al
  40c228:	push   rbp
  40c229:	sub    DWORD PTR [rax],esp
  40c22b:	xor    al,0x2e
  40c22d:	cmp    DWORD PTR [rsi],ebp
  40c22f:	xor    al,0x0
	...
  40c23d:	add    BYTE PTR [rax],al
  40c23f:	add    BYTE PTR [rdi+0x43],al
  40c242:	rex.XB cmp spl,BYTE PTR [r8]
  40c245:	sub    BYTE PTR [rdi+0x4e],al
  40c248:	push   rbp
  40c249:	sub    DWORD PTR [rax],esp
  40c24b:	xor    al,0x2e
  40c24d:	cmp    DWORD PTR [rsi],ebp
  40c24f:	xor    al,0x0
	...
  40c25d:	add    BYTE PTR [rax],al
  40c25f:	add    BYTE PTR [rdi+0x43],al
  40c262:	rex.XB cmp spl,BYTE PTR [r8]
  40c265:	sub    BYTE PTR [rdi+0x4e],al
  40c268:	push   rbp
  40c269:	sub    DWORD PTR [rax],esp
  40c26b:	xor    al,0x2e
  40c26d:	cmp    DWORD PTR [rsi],ebp
  40c26f:	xor    al,0x0
	...
  40c27d:	add    BYTE PTR [rax],al
  40c27f:	add    BYTE PTR [rdi+0x43],al
  40c282:	rex.XB cmp spl,BYTE PTR [r8]
  40c285:	sub    BYTE PTR [rdi+0x4e],al
  40c288:	push   rbp
  40c289:	sub    DWORD PTR [rax],esp
  40c28b:	xor    al,0x2e
  40c28d:	cmp    DWORD PTR [rsi],ebp
  40c28f:	xor    al,0x0
	...
  40c29d:	add    BYTE PTR [rax],al
  40c29f:	add    BYTE PTR [rdi+0x43],al
  40c2a2:	rex.XB cmp spl,BYTE PTR [r8]
  40c2a5:	sub    BYTE PTR [rdi+0x4e],al
  40c2a8:	push   rbp
  40c2a9:	sub    DWORD PTR [rax],esp
  40c2ab:	xor    al,0x2e
  40c2ad:	cmp    DWORD PTR [rsi],ebp
  40c2af:	xor    al,0x0
	...
  40c2bd:	add    BYTE PTR [rax],al
  40c2bf:	add    BYTE PTR [rdi+0x43],al
  40c2c2:	rex.XB cmp spl,BYTE PTR [r8]
  40c2c5:	sub    BYTE PTR [rdi+0x4e],al
  40c2c8:	push   rbp
  40c2c9:	sub    DWORD PTR [rax],esp
  40c2cb:	xor    al,0x2e
  40c2cd:	cmp    DWORD PTR [rsi],ebp
  40c2cf:	xor    al,0x0
	...
  40c2dd:	add    BYTE PTR [rax],al
  40c2df:	add    BYTE PTR [rdi+0x43],al
  40c2e2:	rex.XB cmp spl,BYTE PTR [r8]
  40c2e5:	sub    BYTE PTR [rdi+0x4e],al
  40c2e8:	push   rbp
  40c2e9:	sub    DWORD PTR [rax],esp
  40c2eb:	xor    al,0x2e
  40c2ed:	cmp    DWORD PTR [rsi],ebp
  40c2ef:	xor    al,0x0
	...
  40c2fd:	add    BYTE PTR [rax],al
  40c2ff:	add    BYTE PTR [rdi+0x43],al
  40c302:	rex.XB cmp spl,BYTE PTR [r8]
  40c305:	sub    BYTE PTR [rdi+0x4e],al
  40c308:	push   rbp
  40c309:	sub    DWORD PTR [rax],esp
  40c30b:	xor    al,0x2e
  40c30d:	cmp    DWORD PTR [rsi],ebp
  40c30f:	xor    al,0x0
	...
  40c31d:	add    BYTE PTR [rax],al
  40c31f:	add    BYTE PTR [rdi+0x43],al
  40c322:	rex.XB cmp spl,BYTE PTR [r8]
  40c325:	sub    BYTE PTR [rdi+0x4e],al
  40c328:	push   rbp
  40c329:	sub    DWORD PTR [rax],esp
  40c32b:	xor    al,0x2e
  40c32d:	cmp    DWORD PTR [rsi],ebp
  40c32f:	xor    al,0x0
	...
  40c33d:	add    BYTE PTR [rax],al
  40c33f:	add    BYTE PTR [rdi+0x43],al
  40c342:	rex.XB cmp spl,BYTE PTR [r8]
  40c345:	sub    BYTE PTR [rdi+0x4e],al
  40c348:	push   rbp
  40c349:	sub    DWORD PTR [rax],esp
  40c34b:	xor    al,0x2e
  40c34d:	cmp    DWORD PTR [rsi],ebp
  40c34f:	xor    al,0x0
	...
  40c35d:	add    BYTE PTR [rax],al
  40c35f:	add    BYTE PTR [rdi+0x43],al
  40c362:	rex.XB cmp spl,BYTE PTR [r8]
  40c365:	sub    BYTE PTR [rdi+0x4e],al
  40c368:	push   rbp
  40c369:	sub    DWORD PTR [rax],esp
  40c36b:	xor    al,0x2e
  40c36d:	cmp    DWORD PTR [rsi],ebp
  40c36f:	xor    al,0x0
	...
  40c37d:	add    BYTE PTR [rax],al
  40c37f:	add    BYTE PTR [rdi+0x43],al
  40c382:	rex.XB cmp spl,BYTE PTR [r8]
  40c385:	sub    BYTE PTR [rdi+0x4e],al
  40c388:	push   rbp
  40c389:	sub    DWORD PTR [rax],esp
  40c38b:	xor    al,0x2e
  40c38d:	cmp    DWORD PTR [rsi],ebp
  40c38f:	xor    al,0x0
	...
  40c39d:	add    BYTE PTR [rax],al
  40c39f:	add    BYTE PTR [rdi+0x43],al
  40c3a2:	rex.XB cmp spl,BYTE PTR [r8]
  40c3a5:	sub    BYTE PTR [rdi+0x4e],al
  40c3a8:	push   rbp
  40c3a9:	sub    DWORD PTR [rax],esp
  40c3ab:	xor    al,0x2e
  40c3ad:	cmp    DWORD PTR [rsi],ebp
  40c3af:	xor    al,0x0
	...
  40c3bd:	add    BYTE PTR [rax],al
  40c3bf:	add    BYTE PTR [rdi+0x43],al
  40c3c2:	rex.XB cmp spl,BYTE PTR [r8]
  40c3c5:	sub    BYTE PTR [rdi+0x4e],al
  40c3c8:	push   rbp
  40c3c9:	sub    DWORD PTR [rax],esp
  40c3cb:	xor    al,0x2e
  40c3cd:	cmp    DWORD PTR [rsi],ebp
  40c3cf:	xor    al,0x0
	...
  40c3dd:	add    BYTE PTR [rax],al
  40c3df:	add    BYTE PTR [rdi+0x43],al
  40c3e2:	rex.XB cmp spl,BYTE PTR [r8]
  40c3e5:	sub    BYTE PTR [rdi+0x4e],al
  40c3e8:	push   rbp
  40c3e9:	sub    DWORD PTR [rax],esp
  40c3eb:	xor    al,0x2e
  40c3ed:	cmp    DWORD PTR [rsi],ebp
  40c3ef:	xor    al,0x0
	...
  40c3fd:	add    BYTE PTR [rax],al
  40c3ff:	add    BYTE PTR [rdi+0x43],al
  40c402:	rex.XB cmp spl,BYTE PTR [r8]
  40c405:	sub    BYTE PTR [rdi+0x4e],al
  40c408:	push   rbp
  40c409:	sub    DWORD PTR [rax],esp
  40c40b:	xor    al,0x2e
  40c40d:	cmp    DWORD PTR [rsi],ebp
  40c40f:	xor    al,0x0
	...
  40c41d:	add    BYTE PTR [rax],al
  40c41f:	add    BYTE PTR [rdi+0x43],al
  40c422:	rex.XB cmp spl,BYTE PTR [r8]
  40c425:	sub    BYTE PTR [rdi+0x4e],al
  40c428:	push   rbp
  40c429:	sub    DWORD PTR [rax],esp
  40c42b:	xor    al,0x2e
  40c42d:	cmp    DWORD PTR [rsi],ebp
  40c42f:	xor    al,0x0
	...
  40c43d:	add    BYTE PTR [rax],al
  40c43f:	add    BYTE PTR [rdi+0x43],al
  40c442:	rex.XB cmp spl,BYTE PTR [r8]
  40c445:	sub    BYTE PTR [rdi+0x4e],al
  40c448:	push   rbp
  40c449:	sub    DWORD PTR [rax],esp
  40c44b:	xor    al,0x2e
  40c44d:	cmp    DWORD PTR [rsi],ebp
  40c44f:	xor    al,0x0
	...
  40c45d:	add    BYTE PTR [rax],al
  40c45f:	add    BYTE PTR [rdi+0x43],al
  40c462:	rex.XB cmp spl,BYTE PTR [r8]
  40c465:	sub    BYTE PTR [rdi+0x4e],al
  40c468:	push   rbp
  40c469:	sub    DWORD PTR [rax],esp
  40c46b:	xor    al,0x2e
  40c46d:	cmp    DWORD PTR [rsi],ebp
  40c46f:	xor    al,0x0
	...
  40c47d:	add    BYTE PTR [rax],al
  40c47f:	add    BYTE PTR [rdi+0x43],al
  40c482:	rex.XB cmp spl,BYTE PTR [r8]
  40c485:	sub    BYTE PTR [rdi+0x4e],al
  40c488:	push   rbp
  40c489:	sub    DWORD PTR [rax],esp
  40c48b:	xor    al,0x2e
  40c48d:	cmp    DWORD PTR [rsi],ebp
  40c48f:	xor    al,0x0
	...
  40c49d:	add    BYTE PTR [rax],al
  40c49f:	add    BYTE PTR [rdi+0x43],al
  40c4a2:	rex.XB cmp spl,BYTE PTR [r8]
  40c4a5:	sub    BYTE PTR [rdi+0x4e],al
  40c4a8:	push   rbp
  40c4a9:	sub    DWORD PTR [rax],esp
  40c4ab:	xor    al,0x2e
  40c4ad:	cmp    DWORD PTR [rsi],ebp
  40c4af:	xor    al,0x0
	...
  40c4bd:	add    BYTE PTR [rax],al
  40c4bf:	add    BYTE PTR [rdi+0x43],al
  40c4c2:	rex.XB cmp spl,BYTE PTR [r8]
  40c4c5:	sub    BYTE PTR [rdi+0x4e],al
  40c4c8:	push   rbp
  40c4c9:	sub    DWORD PTR [rax],esp
  40c4cb:	xor    al,0x2e
  40c4cd:	cmp    DWORD PTR [rsi],ebp
  40c4cf:	xor    al,0x0
	...
  40c4dd:	add    BYTE PTR [rax],al
  40c4df:	add    BYTE PTR [rdi+0x43],al
  40c4e2:	rex.XB cmp spl,BYTE PTR [r8]
  40c4e5:	sub    BYTE PTR [rdi+0x4e],al
  40c4e8:	push   rbp
  40c4e9:	sub    DWORD PTR [rax],esp
  40c4eb:	xor    al,0x2e
  40c4ed:	cmp    DWORD PTR [rsi],ebp
  40c4ef:	xor    al,0x0
	...
  40c4fd:	add    BYTE PTR [rax],al
  40c4ff:	add    BYTE PTR [rdi+0x43],al
  40c502:	rex.XB cmp spl,BYTE PTR [r8]
  40c505:	sub    BYTE PTR [rdi+0x4e],al
  40c508:	push   rbp
  40c509:	sub    DWORD PTR [rax],esp
  40c50b:	xor    al,0x2e
  40c50d:	cmp    DWORD PTR [rsi],ebp
  40c50f:	xor    al,0x0
	...
  40c51d:	add    BYTE PTR [rax],al
  40c51f:	add    BYTE PTR [rdi+0x43],al
  40c522:	rex.XB cmp spl,BYTE PTR [r8]
  40c525:	sub    BYTE PTR [rdi+0x4e],al
  40c528:	push   rbp
  40c529:	sub    DWORD PTR [rax],esp
  40c52b:	xor    al,0x2e
  40c52d:	cmp    DWORD PTR [rsi],ebp
  40c52f:	xor    al,0x0
	...
  40c53d:	add    BYTE PTR [rax],al
  40c53f:	add    BYTE PTR [rdi+0x43],al
  40c542:	rex.XB cmp spl,BYTE PTR [r8]
  40c545:	sub    BYTE PTR [rdi+0x4e],al
  40c548:	push   rbp
  40c549:	sub    DWORD PTR [rax],esp
  40c54b:	xor    al,0x2e
  40c54d:	cmp    DWORD PTR [rsi],ebp
  40c54f:	xor    al,0x0
	...
  40c55d:	add    BYTE PTR [rax],al
  40c55f:	add    BYTE PTR [rdi+0x43],al
  40c562:	rex.XB cmp spl,BYTE PTR [r8]
  40c565:	sub    BYTE PTR [rdi+0x4e],al
  40c568:	push   rbp
  40c569:	sub    DWORD PTR [rax],esp
  40c56b:	xor    al,0x2e
  40c56d:	cmp    DWORD PTR [rsi],ebp
  40c56f:	xor    al,0x0
	...
  40c57d:	add    BYTE PTR [rax],al
  40c57f:	add    BYTE PTR [rdi+0x43],al
  40c582:	rex.XB cmp spl,BYTE PTR [r8]
  40c585:	sub    BYTE PTR [rdi+0x4e],al
  40c588:	push   rbp
  40c589:	sub    DWORD PTR [rax],esp
  40c58b:	xor    al,0x2e
  40c58d:	cmp    DWORD PTR [rsi],ebp
  40c58f:	xor    al,0x0
	...
  40c59d:	add    BYTE PTR [rax],al
  40c59f:	add    BYTE PTR [rdi+0x43],al
  40c5a2:	rex.XB cmp spl,BYTE PTR [r8]
  40c5a5:	sub    BYTE PTR [rdi+0x4e],al
  40c5a8:	push   rbp
  40c5a9:	sub    DWORD PTR [rax],esp
  40c5ab:	xor    al,0x2e
  40c5ad:	cmp    DWORD PTR [rsi],ebp
  40c5af:	xor    al,0x0
	...
  40c5bd:	add    BYTE PTR [rax],al
  40c5bf:	add    BYTE PTR [rdi+0x43],al
  40c5c2:	rex.XB cmp spl,BYTE PTR [r8]
  40c5c5:	sub    BYTE PTR [rdi+0x4e],al
  40c5c8:	push   rbp
  40c5c9:	sub    DWORD PTR [rax],esp
  40c5cb:	xor    al,0x2e
  40c5cd:	cmp    DWORD PTR [rsi],ebp
  40c5cf:	xor    al,0x0
	...

Disassembly of section .pdata:

000000000040d000 <.pdata>:
  40d000:	add    BYTE PTR [rax],dl
  40d002:	add    BYTE PTR [rax],al
  40d004:	add    DWORD PTR [rax],edx
  40d006:	add    BYTE PTR [rax],al
  40d008:	add    al,ah
  40d00a:	add    BYTE PTR [rax],al
  40d00c:	adc    BYTE PTR [rax],dl
  40d00e:	add    BYTE PTR [rax],al
  40d010:	push   rcx
  40d011:	adc    DWORD PTR [rax],eax
  40d013:	add    BYTE PTR [rax+riz*8],al
  40d016:	add    BYTE PTR [rax],al
  40d018:	(bad)  
  40d019:	adc    DWORD PTR [rax],eax
  40d01b:	add    BYTE PTR [rsi+0xc000011],ch
  40d021:	loopne 0x40d023
  40d023:	add    BYTE PTR [rax-0x31ffffef],dh
  40d029:	adc    al,0x0
  40d02b:	add    BYTE PTR [rax+riz*8],dl
  40d02e:	add    BYTE PTR [rax],al
  40d030:	rcl    BYTE PTR [rax+rax*1],1
  40d033:	add    dl,dh
  40d035:	adc    al,0x0
  40d037:	add    BYTE PTR [rax],ch
  40d039:	loopne 0x40d03b
  40d03b:	add    BYTE PTR [rax],al
  40d03d:	adc    eax,0x15220000
  40d042:	add    BYTE PTR [rax],al
  40d044:	rex.W loopne 0x40d047
  40d047:	add    BYTE PTR [rax],dh
  40d049:	adc    eax,0x15820000
  40d04e:	add    BYTE PTR [rax],al
  40d050:	push   0xffffffff820000e0
  40d055:	adc    eax,0x15ae0000
  40d05a:	add    BYTE PTR [rax],al
  40d05c:	jo     0x40d03e
  40d05e:	add    BYTE PTR [rax],al
  40d060:	scas   al,BYTE PTR es:[rdi]
  40d061:	adc    eax,0x16a20000
  40d066:	add    BYTE PTR [rax],al
  40d068:	jl     0x40d04a
  40d06a:	add    BYTE PTR [rax],al
  40d06c:	movabs ds:0x8800001811000016,al
  40d075:	loopne 0x40d077
  40d077:	add    BYTE PTR [rcx],dl
  40d079:	sbb    BYTE PTR [rax],al
  40d07b:	add    BYTE PTR [rbp+rbx*1-0x1f6c0000],dl
  40d082:	add    BYTE PTR [rax],al
  40d084:	xchg   esp,eax
  40d085:	sbb    eax,0x1fd70000
  40d08a:	add    BYTE PTR [rax],al
  40d08c:	movabs al,ds:0x2000001fe00000e0
  40d095:	and    BYTE PTR [rax],al
  40d097:	add    BYTE PTR [rax+riz*8+0x20200000],dh
  40d09e:	add    BYTE PTR [rax],al
  40d0a0:	push   rsp
  40d0a1:	and    eax,DWORD PTR [rax]
  40d0a3:	add    al,al
  40d0a5:	loopne 0x40d0a7
  40d0a7:	add    BYTE PTR [rbx+riz*1+0x0],dl
  40d0ab:	add    ah,dl
  40d0ad:	and    eax,DWORD PTR [rax]
  40d0af:	add    al,dl
  40d0b1:	loopne 0x40d0b3
  40d0b3:	add    ah,dl
  40d0b5:	and    eax,DWORD PTR [rax]
  40d0b7:	add    BYTE PTR [rdx],al
  40d0b9:	and    eax,0xe0dc0000
  40d0be:	add    BYTE PTR [rax],al
  40d0c0:	add    ah,BYTE PTR [rip+0x26a90000]        # 0x26e9d0c6
  40d0c6:	add    BYTE PTR [rax],al
  40d0c8:	in     al,dx
  40d0c9:	loopne 0x40d0cb
  40d0cb:	add    BYTE PTR [rcx-0x24ffffda],ch
  40d0d1:	xor    eax,0xe0f80000
  40d0d6:	add    BYTE PTR [rax],al
  40d0d8:	loopne 0x40d10f
  40d0da:	add    BYTE PTR [rax],al
  40d0dc:	(bad)  
  40d0dd:	add    BYTE PTR ss:[rax],al
  40d0e0:	or     cl,ah
  40d0e2:	add    BYTE PTR [rax],al
  40d0e4:	(bad)  
  40d0e5:	add    BYTE PTR ss:[rax],al
  40d0e8:	scas   al,BYTE PTR es:[rdi]
  40d0e9:	add    BYTE PTR ss:[rax],al
  40d0ec:	adc    al,0xe1
  40d0ee:	add    BYTE PTR [rax],al
  40d0f0:	lock (bad) 
  40d0f2:	add    BYTE PTR [rax],al
  40d0f4:	xchg   edi,eax
  40d0f5:	cmp    BYTE PTR [rax],al
  40d0f7:	add    BYTE PTR [rax],ah
  40d0f9:	loope  0x40d0fb
  40d0fb:	add    BYTE PTR [rax-0x46ffffc8],ah
  40d101:	cmp    BYTE PTR [rax],al
  40d103:	add    BYTE PTR [rax],ch
  40d105:	loope  0x40d107
  40d107:	add    al,al
  40d109:	cmp    BYTE PTR [rax],al
  40d10b:	add    ch,dh
  40d10d:	cmp    BYTE PTR [rax],al
  40d10f:	add    BYTE PTR [rax],dh
  40d111:	loope  0x40d113
  40d113:	add    BYTE PTR [rax],al
  40d115:	cmp    DWORD PTR [rax],eax
  40d117:	add    BYTE PTR [rbp+0x39],dl
  40d11a:	add    BYTE PTR [rax],al
  40d11c:	cmp    cl,ah
  40d11e:	add    BYTE PTR [rax],al
  40d120:	(bad)  
  40d121:	cmp    DWORD PTR [rax],eax
  40d123:	add    BYTE PTR [rcx+rdi*1+0x0],bh
  40d127:	add    BYTE PTR [rcx+riz*8+0x0],al
  40d12b:	add    BYTE PTR [rax-0x75ffffc7],al
  40d131:	cmp    DWORD PTR [rax],eax
  40d133:	add    BYTE PTR [rax-0x1f],cl
  40d136:	add    BYTE PTR [rax],al
  40d138:	nop
  40d139:	cmp    DWORD PTR [rax],eax
  40d13b:	add    BYTE PTR [rbx+0x4c000039],dl
  40d141:	loope  0x40d143
  40d143:	add    BYTE PTR [rax+0x76000039],ah
  40d149:	cmp    al,BYTE PTR [rax]
  40d14b:	add    BYTE PTR [rax-0x1f],dl
  40d14e:	add    BYTE PTR [rax],al
  40d150:	cmp    BYTE PTR [rdx],0x0
  40d153:	add    BYTE PTR [rbx+0x3b],bh
  40d156:	add    BYTE PTR [rax],al
  40d158:	(bad)  
  40d159:	loope  0x40d15b
  40d15b:	add    BYTE PTR [rax-0x50ffffc5],al
  40d161:	cmp    eax,DWORD PTR [rax]
  40d163:	add    BYTE PTR [rax-0x1f],dh
  40d166:	add    BYTE PTR [rax],al
  40d168:	mov    al,0x3b
  40d16a:	add    BYTE PTR [rax],al
  40d16c:	sbb    DWORD PTR [rax+rax*1],edi
  40d16f:	add    BYTE PTR [rax-0x1f],bh
  40d172:	add    BYTE PTR [rax],al
  40d174:	and    BYTE PTR [rax+rax*1],bh
  40d177:	add    BYTE PTR [rbx],ah
  40d179:	cmp    al,0x0
  40d17b:	add    BYTE PTR [rcx+riz*8+0x3c300000],al
  40d182:	add    BYTE PTR [rax],al
  40d184:	jno    0x40d1c2
  40d186:	add    BYTE PTR [rax],al
  40d188:	mov    cl,ah
  40d18a:	add    BYTE PTR [rax],al
  40d18c:	cmp    BYTE PTR [rax+rax*1],0x0
  40d190:	mov    WORD PTR [rax+rax*1],?
  40d193:	add    BYTE PTR [rax-0x6fffff1f],dl
  40d199:	cmp    al,0x0
  40d19b:	add    BYTE PTR [rbp+rdi*1-0x1e6c0000],cl
  40d1a2:	add    BYTE PTR [rax],al
  40d1a4:	nop
  40d1a5:	cmp    eax,0x3d930000
  40d1aa:	add    BYTE PTR [rax],al
  40d1ac:	lods   al,BYTE PTR ds:[rsi]
  40d1ad:	loope  0x40d1af
  40d1af:	add    BYTE PTR [rax-0x5bffffc3],ah
  40d1b5:	cmp    eax,0xe1b00000
  40d1ba:	add    BYTE PTR [rax],al
  40d1bc:	mov    al,0x3d
  40d1be:	add    BYTE PTR [rax],al
  40d1c0:	mov    ah,0x3d
  40d1c2:	add    BYTE PTR [rax],al
  40d1c4:	mov    ah,0xe1
  40d1c6:	add    BYTE PTR [rax],al
  40d1c8:	sar    BYTE PTR [rip+0x3e210000],0x0        # 0x3e61d1cf
  40d1cf:	add    BYTE PTR [rax+0x300000e1],bh
  40d1d5:	add    BYTE PTR ds:[rax],al
  40d1d8:	xchg   edx,eax
  40d1d9:	(bad)  
  40d1da:	add    BYTE PTR [rax],al
  40d1dc:	(bad)
  40d1e0:	movabs al,ds:0xd80000429900003f
  40d1e9:	loope  0x40d1eb
  40d1eb:	add    BYTE PTR [rax+0x46000042],ah
  40d1f1:	add    BYTE PTR [rax],r8b
  40d1f4:	lock loope 0x40d1f7
  40d1f7:	add    BYTE PTR [rax+0x44],dl
  40d1fa:	add    BYTE PTR [rax],al
  40d1fc:	cmp    al,0x45
  40d1fe:	add    BYTE PTR [rax],al
  40d200:	clc    
  40d201:	loope  0x40d203
  40d203:	add    BYTE PTR [rax+0x45],al
  40d206:	add    BYTE PTR [rax],al
  40d208:	clc    
  40d209:	rex.RX add BYTE PTR [rax],r8b
  40d20c:	or     dl,ah
  40d20e:	add    BYTE PTR [rax],al
  40d210:	add    BYTE PTR [rdi+0x0],al
  40d213:	add    BYTE PTR [rbp+0x47],ch
  40d216:	add    BYTE PTR [rax],al
  40d218:	adc    dl,ah
  40d21a:	add    BYTE PTR [rax],al
  40d21c:	jo     0x40d265
  40d21e:	add    BYTE PTR [rax],al
  40d220:	out    dx,eax
  40d221:	rex.RXB add BYTE PTR [r8],r8b
  40d224:	and    dl,ah
  40d226:	add    BYTE PTR [rax],al
  40d228:	lock rex.RXB add BYTE PTR [r8],r8b
  40d22c:	(bad)
  40d230:	sub    al,0xe2
  40d232:	add    BYTE PTR [rax],al
  40d234:	nop
  40d235:	rex.W add BYTE PTR [rax],al
  40d238:	push   0x49
  40d23a:	add    BYTE PTR [rax],al
  40d23c:	xor    al,0xe2
  40d23e:	add    BYTE PTR [rax],al
  40d240:	jo     0x40d28b
  40d242:	add    BYTE PTR [rax],al
  40d244:	(bad)
  40d248:	cmp    al,0xe2
  40d24a:	add    BYTE PTR [rax],al
  40d24c:	nop
  40d24d:	rex.WB add BYTE PTR [r8],al
  40d250:	movabs ds:0xb00000e240000049,al
  40d259:	rex.WB add BYTE PTR [r8],al
  40d25c:	cmc    
  40d25d:	rex.WB add BYTE PTR [r8],al
  40d260:	rex.R loop 0x40d263
  40d263:	add    BYTE PTR [rax],al
  40d265:	rex.WX add BYTE PTR [rax],al
  40d268:	sahf   
  40d269:	rex.WX add BYTE PTR [rax],al
  40d26c:	rex.W loop 0x40d26f
  40d26f:	add    BYTE PTR [rax-0x1cffffb6],ah
  40d275:	rex.WX add BYTE PTR [rax],al
  40d278:	push   rsp
  40d279:	loop   0x40d27b
  40d27b:	add    al,dh
  40d27d:	rex.WX add BYTE PTR [rax],al
  40d280:	sub    ecx,DWORD PTR [rbx+0x0]
  40d283:	add    BYTE PTR [rax-0x1e],ah
  40d286:	add    BYTE PTR [rax],al
  40d288:	xor    BYTE PTR [rbx+0x0],cl
  40d28b:	add    BYTE PTR [rsi+0x6800004b],bh
  40d291:	loop   0x40d293
  40d293:	add    al,al
  40d295:	rex.WXB add BYTE PTR [r8],al
  40d298:	clc    
  40d299:	rex.WXB add BYTE PTR [r8],al
  40d29c:	je     0x40d280
  40d29e:	add    BYTE PTR [rax],al
  40d2a0:	add    BYTE PTR [rax+rax*1+0x0],cl
  40d2a4:	push   rbp
  40d2a5:	rex.WR add BYTE PTR [rax],r8b
  40d2a8:	and    dl,0x0
  40d2ab:	add    BYTE PTR [rax+0x4c],ah
  40d2ae:	add    BYTE PTR [rax],al
  40d2b0:	(bad)  
  40d2b1:	rex.WRB add BYTE PTR [r8],r8b
  40d2b4:	mov    edx,fs
  40d2b6:	add    BYTE PTR [rax],al
  40d2b8:	push   rax
  40d2b9:	rex.WRB add BYTE PTR [r8],r8b
  40d2bc:	xor    BYTE PTR [rsi+0x0],cl
  40d2bf:	add    BYTE PTR [rdx+riz*8+0x4e300000],bl
  40d2c6:	add    BYTE PTR [rax],al
  40d2c8:	mov    dl,BYTE PTR [rax+0x0]
  40d2cb:	add    BYTE PTR [rdx+riz*8+0x50900000],ah
  40d2d2:	add    BYTE PTR [rax],al
  40d2d4:	lods   al,BYTE PTR ds:[rsi]
  40d2d5:	push   rdx
  40d2d6:	add    BYTE PTR [rax],al
  40d2d8:	mov    esp,0xb00000e2
  40d2dd:	push   rdx
  40d2de:	add    BYTE PTR [rax],al
  40d2e0:	pop    rbx
  40d2e1:	push   rbx
  40d2e2:	add    BYTE PTR [rax],al
  40d2e4:	(bad)  
  40d2e5:	loop   0x40d2e7
  40d2e7:	add    BYTE PTR [rax+0x53],ah
  40d2ea:	add    BYTE PTR [rax],al
  40d2ec:	sbb    DWORD PTR [rdi+0x0],edx
  40d2ef:	add    al,ah
  40d2f1:	loop   0x40d2f3
  40d2f3:	add    BYTE PTR [rax],ah
  40d2f5:	push   rdi
  40d2f6:	add    BYTE PTR [rax],al
  40d2f8:	push   rdx
  40d2f9:	push   rdi
  40d2fa:	add    BYTE PTR [rax],al
  40d2fc:	clc    
  40d2fd:	loop   0x40d2ff
  40d2ff:	add    BYTE PTR [rax+0x57],ah
  40d302:	add    BYTE PTR [rax],al
  40d304:	or     DWORD PTR [rax+0x0],ebx
  40d307:	add    ah,bh
  40d309:	loop   0x40d30b
  40d30b:	add    BYTE PTR [rax],dl
  40d30d:	pop    rax
  40d30e:	add    BYTE PTR [rax],al
  40d310:	pop    rbp
  40d311:	jae    0x40d313
  40d313:	add    BYTE PTR [rbx+riz*8],al
  40d316:	add    BYTE PTR [rax],al
  40d318:	(bad)  
  40d319:	jae    0x40d31b
  40d31b:	add    BYTE PTR [rbx+0x34000074],bh
  40d321:	jrcxz  0x40d323
  40d323:	add    al,al
  40d325:	je     0x40d327
  40d327:	add    BYTE PTR [rdi+0x4800007d],cl
  40d32d:	jrcxz  0x40d32f
  40d32f:	add    BYTE PTR [rax-0x72ffff83],dl
  40d335:	jle    0x40d337
  40d337:	add    BYTE PTR [rax-0x1d],ah
  40d33a:	add    BYTE PTR [rax],al
  40d33c:	nop
  40d33d:	jle    0x40d33f
  40d33f:	add    dh,cl
  40d341:	jle    0x40d343
  40d343:	add    BYTE PTR [rbx+riz*8+0x0],ch
  40d347:	add    al,dl
  40d349:	jle    0x40d34b
  40d34b:	add    BYTE PTR [rdi+rdi*2+0x0],dl
  40d34f:	add    BYTE PTR [rax-0x1d],dh
  40d352:	add    BYTE PTR [rax],al
  40d354:	(bad)  
  40d355:	jg     0x40d357
  40d357:	add    BYTE PTR [rdx],dl
  40d359:	add    DWORD PTR [rax],0x0
  40d35c:	je     0x40d341
  40d35e:	add    BYTE PTR [rax],al
  40d360:	and    BYTE PTR [rbx-0x7c140000],al
  40d366:	add    BYTE PTR [rax],al
  40d368:	mov    ebx,fs
  40d36a:	add    BYTE PTR [rax],al
  40d36c:	lock add DWORD PTR [rax],0x0
  40d370:	xor    al,BYTE PTR [rax+rax*1+0xe39800]
  40d377:	add    BYTE PTR [rax-0x7c],al
  40d37a:	add    BYTE PTR [rax],al
  40d37c:	rex.WRX test QWORD PTR [rax],r8
  40d37f:	add    BYTE PTR [rax+0x500000e3],ah
  40d385:	test   DWORD PTR [rax],eax
  40d387:	add    BYTE PTR [rsi-0x53ffff7b],dh
  40d38d:	jrcxz  0x40d38f
  40d38f:	add    al,al
  40d391:	test   DWORD PTR [rax],eax
  40d393:	add    BYTE PTR [rdx-0x7a],dh
  40d396:	add    BYTE PTR [rax],al
  40d398:	mov    ah,0xe3
  40d39a:	add    BYTE PTR [rax],al
  40d39c:	add    BYTE PTR [rsi-0x795a0000],0x0
  40d3a3:	add    ah,al
  40d3a5:	jrcxz  0x40d3a7
  40d3a7:	add    BYTE PTR [rax-0x1fffff7a],dh
  40d3ad:	xchg   DWORD PTR [rax],eax
  40d3af:	add    ah,cl
  40d3b1:	jrcxz  0x40d3b3
  40d3b3:	add    al,ah
  40d3b5:	xchg   DWORD PTR [rax],eax
  40d3b7:	add    BYTE PTR [rcx+rcx*4+0x0],al
  40d3bb:	add    al,ah
  40d3bd:	jrcxz  0x40d3bf
  40d3bf:	add    BYTE PTR [rax-0x77],dl
  40d3c2:	add    BYTE PTR [rax],al
  40d3c4:	movsxd ecx,DWORD PTR [rdx-0x1c100000]
  40d3ca:	add    BYTE PTR [rax],al
  40d3cc:	jo     0x40d358
  40d3ce:	add    BYTE PTR [rax],al
  40d3d0:	mov    ah,0x8a
  40d3d2:	add    BYTE PTR [rax],al
  40d3d4:	add    al,0xe4
  40d3d6:	add    BYTE PTR [rax],al
  40d3d8:	ror    BYTE PTR [rdx-0x740a0000],0x0
  40d3df:	add    BYTE PTR [rax],cl
  40d3e1:	in     al,0x0
  40d3e3:	add    BYTE PTR [rax],al
  40d3e5:	mov    WORD PTR [rax],es
  40d3e7:	add    BYTE PTR [rbx],dl
  40d3e9:	lea    eax,[rax]
  40d3eb:	add    BYTE PTR [rsp+riz*8],dl
  40d3ee:	add    BYTE PTR [rax],al
  40d3f0:	and    BYTE PTR [rbp-0x71d70000],cl
  40d3f6:	add    BYTE PTR [rax],al
  40d3f8:	and    ah,ah
  40d3fa:	add    BYTE PTR [rax],al
  40d3fc:	xor    BYTE PTR [rsi-0x71ac0000],cl
  40d402:	add    BYTE PTR [rax],al
  40d404:	sub    al,0xe4
  40d406:	add    BYTE PTR [rax],al
  40d408:	(bad)  
  40d409:	mov    es,WORD PTR [rax]
  40d40b:	add    BYTE PTR [rbx-0x71],bl
  40d40e:	add    BYTE PTR [rax],al
  40d410:	xor    ah,ah
  40d412:	add    BYTE PTR [rax],al
  40d414:	(bad)  
  40d415:	pop    QWORD PTR [rax]
  40d417:	add    BYTE PTR [rax+rdx*4],bl
  40d41a:	add    BYTE PTR [rax],al
  40d41c:	rex.R in al,0x0
  40d41f:	add    BYTE PTR [rax],ah
  40d421:	nop
  40d422:	add    BYTE PTR [rax],al
  40d424:	movsxd edx,DWORD PTR [rax-0x1bac0000]
  40d42a:	add    BYTE PTR [rax],al
  40d42c:	jo     0x40d3be
  40d42e:	add    BYTE PTR [rax],al
  40d430:	rcl    BYTE PTR [rax-0x1ba80000],cl
  40d436:	add    BYTE PTR [rax],al
  40d438:	loopne 0x40d3ca
  40d43a:	add    BYTE PTR [rax],al
  40d43c:	imul   edx,DWORD PTR [rcx-0x1ba40000],0x92d00000
  40d446:	add    BYTE PTR [rax],al
  40d448:	fcom   DWORD PTR [rdx-0x1ba00000]
  40d44e:	add    BYTE PTR [rax],al
  40d450:	loopne 0x40d3e4
  40d452:	add    BYTE PTR [rax],al
  40d454:	jmp    0x40d3e8
  40d456:	add    BYTE PTR [rax],al
  40d458:	fs in  al,0x0
	...

Disassembly of section .xdata:

000000000040e000 <.xdata>:
  40e000:	add    DWORD PTR [rax],eax
  40e002:	add    BYTE PTR [rax],al
  40e004:	add    DWORD PTR [rcx+rax*1],eax
  40e007:	add    BYTE PTR [rdx+rax*2],al
  40e00a:	add    BYTE PTR [rax],al
  40e00c:	add    DWORD PTR [rcx+rax*1],eax
  40e00f:	add    BYTE PTR [rdx+riz*2],al
  40e012:	add    BYTE PTR [rax],al
  40e014:	add    DWORD PTR [rdi],ecx
  40e016:	or     BYTE PTR [rax],al
  40e018:	lgdt   [rbx]
  40e01b:	add    BYTE PTR [rax],cl
  40e01d:	xor    BYTE PTR [rdi],al
  40e01f:	(bad)  
  40e020:	(bad)  
  40e021:	jo     0x40e028
  40e023:	push   rax
  40e024:	add    al,0xc0
  40e026:	add    dl,al
  40e028:	or     DWORD PTR [rcx+rax*1],eax
  40e02b:	add    BYTE PTR [rdx+rax*2],al
  40e02e:	add    BYTE PTR [rax],al
  40e030:	rcl    BYTE PTR [rdx+0x10000],0x0
  40e037:	add    ah,dl
  40e039:	adc    al,0x0
  40e03b:	add    ah,ch
  40e03d:	adc    al,0x0
  40e03f:	add    BYTE PTR [rax+0x45],al
  40e042:	add    BYTE PTR [rax],al
  40e044:	in     al,dx
  40e045:	adc    al,0x0
  40e047:	add    BYTE PTR [rcx],cl
  40e049:	add    al,0x1
  40e04b:	add    BYTE PTR [rdx+rax*2],al
  40e04e:	add    BYTE PTR [rax],al
  40e050:	rcl    BYTE PTR [rdx+0x10000],0x0
  40e057:	add    BYTE PTR [rdx*1+0x151c0000],al
  40e05e:	add    BYTE PTR [rax],al
  40e060:	rex
  40e061:	add    BYTE PTR [r8],r8b
  40e064:	sbb    al,0x15
  40e066:	add    BYTE PTR [rax],al
  40e068:	add    DWORD PTR [rdx+rax*1],eax
  40e06b:	add    eax,0x50010304
  40e070:	add    DWORD PTR [rax],ecx
  40e072:	add    eax,DWORD PTR [rip+0x3043208]        # 0x3451280
  40e078:	add    DWORD PTR [rax+0x0],edx
  40e07b:	add    BYTE PTR [rcx],al
  40e07d:	or     BYTE PTR [rbx],al
  40e07f:	add    eax,0x3045208
  40e084:	add    DWORD PTR [rax+0x0],edx
  40e087:	add    BYTE PTR [rcx],al
  40e089:	or     BYTE PTR [rbx],al
  40e08b:	add    eax,0x3047208
  40e090:	add    DWORD PTR [rax+0x0],edx
  40e093:	add    BYTE PTR [rcx],al
  40e095:	or     eax,DWORD PTR [rax*1+0x1a010b]
  40e09c:	add    al,0x3
  40e09e:	add    DWORD PTR [rax+0x1],edx
  40e0a1:	adc    eax,DWORD PTR [rdi]
  40e0a3:	test   DWORD PTR [rbx],edx
  40e0a5:	add    ecx,DWORD PTR [rbx]
  40e0a7:	add    DWORD PTR [rbx],edx
  40e0a9:	add    BYTE PTR [rax+rsi*1],al
  40e0ac:	add    esp,DWORD PTR [rax+0x2]
  40e0af:	jo     0x40e0b2
  40e0b1:	push   rax
  40e0b2:	add    BYTE PTR [rax],al
  40e0b4:	add    DWORD PTR [rsi],ecx
  40e0b6:	add    al,0x85
  40e0b8:	(bad)  
  40e0b9:	add    eax,DWORD PTR [rsi]
  40e0bb:	rex.X add sil,BYTE PTR [rax]
  40e0be:	add    DWORD PTR [rax+0x1],edx
  40e0c1:	or     al,BYTE PTR [rip+0x6920a05]        # 0x6d2eacc
  40e0c7:	add    eax,DWORD PTR [rbx]
  40e0c9:	xor    BYTE PTR [rdx],al
  40e0cb:	(bad)  
  40e0cc:	add    DWORD PTR [rax+0x0],edx
  40e0cf:	add    BYTE PTR [rcx],al
  40e0d1:	or     BYTE PTR [rbx],al
  40e0d3:	add    eax,0x3045208
  40e0d8:	add    DWORD PTR [rax+0x0],edx
  40e0db:	add    BYTE PTR [rcx],al
  40e0dd:	adc    DWORD PTR [rip+0x9031185],eax        # 0x943f268
  40e0e3:	add    DWORD PTR [rcx],edx
  40e0e5:	add    BYTE PTR [rdx],al
  40e0e7:	xor    BYTE PTR [rcx],al
  40e0e9:	push   rax
  40e0ea:	add    BYTE PTR [rax],al
  40e0ec:	add    DWORD PTR [rsi],ecx
  40e0ee:	add    al,0x85
  40e0f0:	(bad)  
  40e0f1:	add    eax,DWORD PTR [rsi]
  40e0f3:	(bad)  
  40e0f5:	xor    BYTE PTR [rcx],al
  40e0f7:	push   rax
  40e0f8:	add    DWORD PTR [rdx],edx
  40e0fa:	(bad)  
  40e0fb:	test   DWORD PTR [rdx],edx
  40e0fd:	add    ecx,DWORD PTR [rdx]
  40e0ff:	add    DWORD PTR [rsi],esi
  40e101:	add    BYTE PTR [rbx],al
  40e103:	xor    BYTE PTR [rdx],al
  40e105:	(bad)  
  40e106:	add    DWORD PTR [rax+0x1],edx
  40e109:	or     BYTE PTR [rbx],al
  40e10b:	add    eax,0x3043208
  40e110:	add    DWORD PTR [rax+0x0],edx
  40e113:	add    BYTE PTR [rcx],al
  40e115:	or     BYTE PTR [rbx],al
  40e117:	add    eax,0x3047208
  40e11c:	add    DWORD PTR [rax+0x0],edx
  40e11f:	add    BYTE PTR [rcx],al
  40e121:	add    eax,0x52050002
  40e126:	add    DWORD PTR [rax],esi
  40e128:	add    DWORD PTR [rcx+rax*1],eax
  40e12b:	add    BYTE PTR [rdx+rax*2],al
  40e12e:	add    BYTE PTR [rax],al
  40e130:	add    DWORD PTR [rcx+rax*1],eax
  40e133:	add    BYTE PTR [rdx+rax*2],al
  40e136:	add    BYTE PTR [rax],al
  40e138:	add    DWORD PTR [rsi],eax
  40e13a:	add    eax,DWORD PTR [rax]
  40e13c:	(bad)  
  40e13d:	rex.X add sil,BYTE PTR [rax]
  40e140:	add    DWORD PTR [rax+0x0],esp
  40e143:	add    BYTE PTR [rcx],al
  40e145:	add    BYTE PTR [rax],al
  40e147:	add    BYTE PTR [rcx],al
  40e149:	add    BYTE PTR [rax],al
  40e14b:	add    BYTE PTR [rcx],al
  40e14d:	add    BYTE PTR [rax],al
  40e14f:	add    BYTE PTR [rcx],al
  40e151:	or     al,BYTE PTR [rsi]
  40e153:	add    BYTE PTR [rdx],cl
  40e155:	jb     0x40e15d
  40e157:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b0e5bd
  40e15d:	push   rax
  40e15e:	add    al,al
  40e160:	add    DWORD PTR [rdx],ecx
  40e162:	add    eax,0x6d20a05
  40e167:	add    eax,DWORD PTR [rbx]
  40e169:	xor    BYTE PTR [rdx],al
  40e16b:	(bad)  
  40e16c:	add    DWORD PTR [rax+0x0],edx
  40e16f:	add    BYTE PTR [rcx],al
  40e171:	add    al,0x1
  40e173:	add    BYTE PTR [rdx+rax*2],al
  40e176:	add    BYTE PTR [rax],al
  40e178:	add    DWORD PTR [rsi],eax
  40e17a:	add    eax,DWORD PTR [rax]
  40e17c:	(bad)  
  40e17d:	rex.X add sil,BYTE PTR [rax]
  40e180:	add    DWORD PTR [rax+0x0],esp
  40e183:	add    BYTE PTR [rcx],al
  40e185:	add    BYTE PTR [rax],al
  40e187:	add    BYTE PTR [rcx],al
  40e189:	add    al,0x1
  40e18b:	add    BYTE PTR [rdx+riz*4],al
  40e18e:	add    BYTE PTR [rax],al
  40e190:	add    DWORD PTR [rax],eax
  40e192:	add    BYTE PTR [rax],al
  40e194:	add    DWORD PTR [rsi],edx
  40e196:	or     DWORD PTR [rax],eax
  40e198:	(bad)  
  40e199:	mov    BYTE PTR [rsi],al
  40e19b:	add    BYTE PTR [rax],dl
  40e19d:	js     0x40e1a4
  40e19f:	add    BYTE PTR [rbx],cl
  40e1a1:	push   0xffffffffe2060004
  40e1a6:	add    dh,BYTE PTR [rax]
  40e1a8:	add    DWORD PTR [rax+0x0],esp
  40e1ab:	add    BYTE PTR [rcx],al
  40e1ad:	add    BYTE PTR [rax],al
  40e1af:	add    BYTE PTR [rcx],al
  40e1b1:	add    BYTE PTR [rax],al
  40e1b3:	add    BYTE PTR [rcx],al
  40e1b5:	add    BYTE PTR [rax],al
  40e1b7:	add    BYTE PTR [rcx],al
  40e1b9:	(bad)  
  40e1ba:	add    eax,DWORD PTR [rax]
  40e1bc:	(bad)  
  40e1bd:	(bad)  
  40e1bf:	xor    BYTE PTR [rcx],al
  40e1c1:	(bad)  
  40e1c2:	add    BYTE PTR [rax],al
  40e1c4:	add    DWORD PTR [rdi+rax*1],ecx
  40e1c7:	add    BYTE PTR [rdx+riz*4],cl
  40e1ca:	or     BYTE PTR [rax],dh
  40e1cc:	(bad)  
  40e1cd:	(bad)  
  40e1ce:	(bad)  
  40e1cf:	jo     0x40e1d6
  40e1d1:	push   rax
  40e1d2:	add    al,0xc0
  40e1d4:	add    dl,al
  40e1d6:	add    BYTE PTR [rax],al
  40e1d8:	add    DWORD PTR [rcx],edx
  40e1da:	or     DWORD PTR [rip+0x30db211],eax        # 0x34e93f1
  40e1e0:	or     dh,BYTE PTR [rax]
  40e1e2:	or     DWORD PTR [rax+0x8],esp
  40e1e5:	jo     0x40e1ee
  40e1e7:	rol    BYTE PTR [rip+0x1e003d0],0x50        # 0x220e5be
  40e1ee:	add    BYTE PTR [rax],al
  40e1f0:	add    DWORD PTR [rcx+rax*1],eax
  40e1f3:	add    BYTE PTR [rdx+rax*2],al
  40e1f6:	add    BYTE PTR [rax],al
  40e1f8:	add    DWORD PTR [rdx],ecx
  40e1fa:	(bad)  
  40e1fb:	add    BYTE PTR [rdx],cl
  40e1fd:	xor    al,BYTE PTR [rsi]
  40e1ff:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b0e665
  40e205:	push   rax
  40e206:	add    al,al
  40e208:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245e210
  40e20e:	add    DWORD PTR [rax],esi
  40e210:	add    DWORD PTR [rax],ecx
  40e212:	add    eax,0x4420800
  40e217:	xor    BYTE PTR [rbx],al
  40e219:	(bad)  
  40e21a:	add    dh,BYTE PTR [rax+0x1]
  40e21d:	push   rax
  40e21e:	add    BYTE PTR [rax],al
  40e220:	add    DWORD PTR [rdi],eax
  40e222:	add    al,0x0
  40e224:	(bad)  
  40e225:	xor    al,BYTE PTR [rbx]
  40e227:	xor    BYTE PTR [rdx],al
  40e229:	(bad)  
  40e22a:	add    DWORD PTR [rax+0x1],esi
  40e22d:	add    eax,0x32050002
  40e232:	add    DWORD PTR [rax],esi
  40e234:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245e23c
  40e23a:	add    DWORD PTR [rax],esi
  40e23c:	add    DWORD PTR [rax],eax
  40e23e:	add    BYTE PTR [rax],al
  40e240:	add    DWORD PTR [rax],eax
  40e242:	add    BYTE PTR [rax],al
  40e244:	add    DWORD PTR [rax],eax
  40e246:	add    BYTE PTR [rax],al
  40e248:	add    DWORD PTR [rdi],eax
  40e24a:	add    al,0x0
  40e24c:	(bad)  
  40e24d:	xor    al,BYTE PTR [rbx]
  40e24f:	xor    BYTE PTR [rdx],al
  40e251:	(bad)  
  40e252:	add    DWORD PTR [rax+0x1],esi
  40e255:	(bad)  
  40e256:	add    eax,DWORD PTR [rax]
  40e258:	(bad)  
  40e259:	rex.X add sil,BYTE PTR [rax]
  40e25c:	add    DWORD PTR [rax+0x0],esp
  40e25f:	add    BYTE PTR [rcx],al
  40e261:	add    eax,0x32050002
  40e266:	add    DWORD PTR [rax],esi
  40e268:	add    DWORD PTR [rdi],eax
  40e26a:	add    al,0x0
  40e26c:	(bad)  
  40e26d:	xor    al,BYTE PTR [rbx]
  40e26f:	xor    BYTE PTR [rdx],al
  40e271:	(bad)  
  40e272:	add    DWORD PTR [rax+0x1],esi
  40e275:	(bad)  
  40e276:	add    eax,DWORD PTR [rax]
  40e278:	(bad)  
  40e279:	rex.X add sil,BYTE PTR [rax]
  40e27c:	add    DWORD PTR [rax+0x0],esp
  40e27f:	add    BYTE PTR [rcx],al
  40e281:	(bad)  
  40e282:	add    eax,DWORD PTR [rax]
  40e284:	(bad)  
  40e285:	rex.X add sil,BYTE PTR [rax]
  40e288:	add    DWORD PTR [rax+0x0],esp
  40e28b:	add    BYTE PTR [rcx],al
  40e28d:	or     BYTE PTR [rip+0x4420800],al        # 0x482ea93
  40e293:	xor    BYTE PTR [rbx],al
  40e295:	(bad)  
  40e296:	add    dh,BYTE PTR [rax+0x1]
  40e299:	push   rax
  40e29a:	add    BYTE PTR [rax],al
  40e29c:	add    DWORD PTR [rip+0xffffffffb2050002],eax        # 0xffffffffb245e2a4
  40e2a2:	add    DWORD PTR [rax],esi
  40e2a4:	add    DWORD PTR [rax],edx
  40e2a6:	or     DWORD PTR [rax],eax
  40e2a8:	adc    BYTE PTR [rdx+0xc],al
  40e2ab:	xor    BYTE PTR [rbx],cl
  40e2ad:	(bad)  
  40e2ae:	or     dh,BYTE PTR [rax+0x9]
  40e2b1:	push   rax
  40e2b2:	or     al,al
  40e2b4:	(bad)  
  40e2b5:	rol    BYTE PTR [rax+riz*8],1
  40e2b8:	add    dh,al
  40e2ba:	add    BYTE PTR [rax],al
  40e2bc:	add    DWORD PTR [rax],edx
  40e2be:	or     DWORD PTR [rax],eax
  40e2c0:	adc    BYTE PTR [rdx+0xc],al
  40e2c3:	xor    BYTE PTR [rbx],cl
  40e2c5:	(bad)  
  40e2c6:	or     dh,BYTE PTR [rax+0x9]
  40e2c9:	push   rax
  40e2ca:	or     al,al
  40e2cc:	(bad)  
  40e2cd:	rol    BYTE PTR [rax+riz*8],1
  40e2d0:	add    dh,al
  40e2d2:	add    BYTE PTR [rax],al
  40e2d4:	add    DWORD PTR [rsi],eax
  40e2d6:	add    eax,DWORD PTR [rax]
  40e2d8:	(bad)  
  40e2d9:	rex.X add sil,BYTE PTR [rax]
  40e2dc:	add    DWORD PTR [rax+0x0],esp
  40e2df:	add    BYTE PTR [rcx],al
  40e2e1:	adc    BYTE PTR [rcx],cl
  40e2e3:	add    BYTE PTR [rax],dl
  40e2e5:	(bad)  
  40e2e6:	or     al,0x30
  40e2e8:	or     esp,DWORD PTR [rax+0xa]
  40e2eb:	jo     0x40e2f6
  40e2ed:	push   rax
  40e2ee:	or     al,al
  40e2f0:	(bad)  
  40e2f1:	rol    BYTE PTR [rax+riz*8],1
  40e2f4:	add    dh,al
  40e2f6:	add    BYTE PTR [rax],al
  40e2f8:	add    DWORD PTR [rax],eax
  40e2fa:	add    BYTE PTR [rax],al
  40e2fc:	add    DWORD PTR [rip+0x52050002],eax        # 0x5245e304
  40e302:	add    DWORD PTR [rax],esi
  40e304:	add    DWORD PTR [rdi+0x16],eax
  40e307:	add    BYTE PTR [rdi-0x48],al
  40e30a:	adc    al,BYTE PTR [rax]
  40e30c:	ds test al,0x11
  40e30f:	add    BYTE PTR [rip+0x2c001098],dh        # 0x2c40f3ad
  40e315:	mov    BYTE PTR [rdi],cl
  40e317:	add    BYTE PTR [rbx],ah
  40e319:	js     0x40e329
  40e31b:	add    BYTE PTR [rbx],bl
  40e31d:	push   0x113000d
  40e322:	(bad)  
  40e323:	add    BYTE PTR [rax+rsi*1],cl
  40e326:	or     esp,DWORD PTR [rax+0xa]
  40e329:	jo     0x40e334
  40e32b:	push   rax
  40e32c:	or     al,al
  40e32e:	(bad)  
  40e32f:	rol    BYTE PTR [rax+riz*8],1
  40e332:	add    dh,al
  40e334:	add    DWORD PTR [rdi+rax*1],ecx
  40e337:	add    BYTE PTR [rdx+rax*2],cl
  40e33a:	or     BYTE PTR [rax],dh
  40e33c:	(bad)  
  40e33d:	(bad)  
  40e33e:	(bad)  
  40e33f:	jo     0x40e346
  40e341:	push   rax
  40e342:	add    al,0xc0
  40e344:	add    dl,al
  40e346:	add    BYTE PTR [rax],al
  40e348:	add    DWORD PTR [rax],edx
  40e34a:	or     DWORD PTR [rax],eax
  40e34c:	adc    BYTE PTR [rdx+0xc],al
  40e34f:	xor    BYTE PTR [rbx],cl
  40e351:	(bad)  
  40e352:	or     dh,BYTE PTR [rax+0x9]
  40e355:	push   rax
  40e356:	or     al,al
  40e358:	(bad)  
  40e359:	rol    BYTE PTR [rax+riz*8],1
  40e35c:	add    dh,al
  40e35e:	add    BYTE PTR [rax],al
  40e360:	add    DWORD PTR [rsp+rax*1],eax
  40e363:	add    BYTE PTR [rax+rsi*1],al
  40e366:	add    esp,DWORD PTR [rax+0x2]
  40e369:	jo     0x40e36c
  40e36b:	push   rax
  40e36c:	add    DWORD PTR [rax],eax
  40e36e:	add    BYTE PTR [rax],al
  40e370:	add    DWORD PTR [rax],eax
  40e372:	add    BYTE PTR [rax],al
  40e374:	add    DWORD PTR [rax],edx
  40e376:	or     DWORD PTR [rax],eax
  40e378:	adc    BYTE PTR [rdx+0x600b300c],al
  40e37e:	or     dh,BYTE PTR [rax+0x9]
  40e381:	push   rax
  40e382:	or     al,al
  40e384:	(bad)  
  40e385:	rol    BYTE PTR [rax+riz*8],1
  40e388:	add    dh,al
  40e38a:	add    BYTE PTR [rax],al
  40e38c:	add    DWORD PTR [rsi],eax
  40e38e:	add    eax,DWORD PTR [rax]
  40e390:	(bad)  
  40e391:	rex.X add sil,BYTE PTR [rax]
  40e394:	add    DWORD PTR [rax+0x0],esp
  40e397:	add    BYTE PTR [rcx],al
  40e399:	add    eax,0x32050002
  40e39e:	add    DWORD PTR [rax],esi
  40e3a0:	add    DWORD PTR [rdi],eax
  40e3a2:	add    al,0x0
  40e3a4:	(bad)  
  40e3a5:	xor    al,BYTE PTR [rbx]
  40e3a7:	xor    BYTE PTR [rdx],al
  40e3a9:	(bad)  
  40e3aa:	add    DWORD PTR [rax+0x1],esi
  40e3ad:	add    eax,0x32050002
  40e3b2:	add    DWORD PTR [rax],esi
  40e3b4:	add    DWORD PTR [rax],ecx
  40e3b6:	add    eax,0x4420800
  40e3bb:	xor    BYTE PTR [rbx],al
  40e3bd:	(bad)  
  40e3be:	add    dh,BYTE PTR [rax+0x1]
  40e3c1:	push   rax
  40e3c2:	add    BYTE PTR [rax],al
  40e3c4:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245e3cc
  40e3ca:	add    DWORD PTR [rax],esi
  40e3cc:	add    DWORD PTR [rsi],ecx
  40e3ce:	or     BYTE PTR [rax],al
  40e3d0:	(bad)  
  40e3d1:	xor    cl,BYTE PTR [rdx]
  40e3d3:	xor    BYTE PTR [rcx],cl
  40e3d5:	(bad)  
  40e3d6:	or     BYTE PTR [rax+0x7],dh
  40e3d9:	push   rax
  40e3da:	(bad)  
  40e3db:	rol    BYTE PTR [rax+rdx*8],0x2
  40e3df:	loopne 0x40e3e2
  40e3e1:	or     BYTE PTR [rip+0x4420800],al        # 0x482ebe7
  40e3e7:	xor    BYTE PTR [rbx],al
  40e3e9:	(bad)  
  40e3ea:	add    dh,BYTE PTR [rax+0x1]
  40e3ed:	push   rax
  40e3ee:	add    BYTE PTR [rax],al
  40e3f0:	add    DWORD PTR [rdi+rax*1],ecx
  40e3f3:	add    BYTE PTR [rdx+rax*2],cl
  40e3f6:	or     BYTE PTR [rax],dh
  40e3f8:	(bad)  
  40e3f9:	(bad)  
  40e3fa:	(bad)  
  40e3fb:	jo     0x40e402
  40e3fd:	push   rax
  40e3fe:	add    al,0xc0
  40e400:	add    dl,al
  40e402:	add    BYTE PTR [rax],al
  40e404:	add    DWORD PTR [rax],eax
  40e406:	add    BYTE PTR [rax],al
  40e408:	add    DWORD PTR [rdi],eax
  40e40a:	add    al,0x0
  40e40c:	(bad)  
  40e40d:	xor    al,BYTE PTR [rbx]
  40e40f:	xor    BYTE PTR [rdx],al
  40e411:	(bad)  
  40e412:	add    DWORD PTR [rax+0x1],esi
  40e415:	(bad)  
  40e416:	add    eax,DWORD PTR [rax]
  40e418:	(bad)  
  40e419:	and    al,BYTE PTR [rdx]
  40e41b:	xor    BYTE PTR [rcx],al
  40e41d:	(bad)  
  40e41e:	add    BYTE PTR [rax],al
  40e420:	add    DWORD PTR [rdi],eax
  40e422:	add    al,0x0
  40e424:	(bad)  
  40e425:	xor    al,BYTE PTR [rbx]
  40e427:	xor    BYTE PTR [rdx],al
  40e429:	(bad)  
  40e42a:	add    DWORD PTR [rax+0x1],esi
  40e42d:	add    BYTE PTR [rax],al
  40e42f:	add    BYTE PTR [rcx],al
  40e431:	or     al,0x7
  40e433:	add    BYTE PTR [rdx+rax*2],cl
  40e436:	or     BYTE PTR [rax],dh
  40e438:	(bad)  
  40e439:	(bad)  
  40e43a:	(bad)  
  40e43b:	jo     0x40e442
  40e43d:	push   rax
  40e43e:	add    al,0xc0
  40e440:	add    dl,al
  40e442:	add    BYTE PTR [rax],al
  40e444:	add    DWORD PTR [rsi+rax*1],ecx
  40e447:	add    BYTE PTR [rax+rbp*2],cl
  40e44a:	add    al,0x0
  40e44c:	(bad)  
  40e44d:	xchg   edx,eax
  40e44e:	add    esi,DWORD PTR [rax]
  40e450:	add    ah,BYTE PTR [rax+0x1]
  40e453:	jo     0x40e456
  40e455:	add    BYTE PTR [rax],al
  40e457:	add    BYTE PTR [rcx],al
  40e459:	add    BYTE PTR [rax],al
  40e45b:	add    BYTE PTR [rcx],al
  40e45d:	add    BYTE PTR [rax],al
  40e45f:	add    BYTE PTR [rcx],al
  40e461:	add    BYTE PTR [rax],al
  40e463:	add    BYTE PTR [rcx],al
  40e465:	add    BYTE PTR [rax],al
	...

Disassembly of section .bss:

000000000040f000 <.bss>:
	...

Disassembly of section .idata:

0000000000411000 <.idata>:
  411000:	push   rax
  411001:	adc    BYTE PTR [rcx],al
	...
  41100b:	add    BYTE PTR [rax+riz*1],al
  41100e:	add    DWORD PTR [rax],eax
  411010:	enter  0x113,0x0
  411014:	nop
  411015:	adc    DWORD PTR [rcx],eax
	...
  41101f:	add    BYTE PTR [rax+0x20],dh
  411022:	add    DWORD PTR [rax],eax
  411024:	or     BYTE PTR [rip+0x12500001],dl        # 0x1291102b
  41102a:	add    DWORD PTR [rax],eax
	...
  411034:	cmp    BYTE PTR [rcx],ah
  411036:	add    DWORD PTR [rax],eax
  411038:	enter  0x115,0x0
	...
  411050:	rex (bad) 
  411052:	add    DWORD PTR [rax],eax
  411054:	add    BYTE PTR [rax],al
  411056:	add    BYTE PTR [rax],al
  411058:	pop    rax
  411059:	(bad)  
  41105a:	add    DWORD PTR [rax],eax
  41105c:	add    BYTE PTR [rax],al
  41105e:	add    BYTE PTR [rax],al
  411060:	push   0x117
  411065:	add    BYTE PTR [rax],al
  411067:	add    BYTE PTR [rdi+rdx*1+0x1],bh
  41106b:	add    BYTE PTR [rax],al
  41106d:	add    BYTE PTR [rax],al
  41106f:	add    BYTE PTR [rdi+rdx*1+0x1],dl
  411076:	add    BYTE PTR [rax],al
  411078:	lods   al,BYTE PTR ds:[rsi]
  411079:	(bad)  
  41107a:	add    DWORD PTR [rax],eax
  41107c:	add    BYTE PTR [rax],al
  41107e:	add    BYTE PTR [rax],al
  411080:	(bad)  
  411081:	(bad)  
  411082:	add    DWORD PTR [rax],eax
  411084:	add    BYTE PTR [rax],al
  411086:	add    BYTE PTR [rax],al
  411088:	lock (bad) 
  41108a:	add    DWORD PTR [rax],eax
  41108c:	add    BYTE PTR [rax],al
  41108e:	add    BYTE PTR [rax],al
  411090:	or     BYTE PTR [rax],bl
  411092:	add    DWORD PTR [rax],eax
  411094:	add    BYTE PTR [rax],al
  411096:	add    BYTE PTR [rax],al
  411098:	sbb    al,0x18
  41109a:	add    DWORD PTR [rax],eax
  41109c:	add    BYTE PTR [rax],al
  41109e:	add    BYTE PTR [rax],al
  4110a0:	xor    BYTE PTR [rax],bl
  4110a2:	add    DWORD PTR [rax],eax
  4110a4:	add    BYTE PTR [rax],al
  4110a6:	add    BYTE PTR [rax],al
  4110a8:	sbb    BYTE PTR [rcx],r8b
  4110ab:	add    BYTE PTR [rax],al
  4110ad:	add    BYTE PTR [rax],al
  4110af:	add    BYTE PTR [rax+0x18],dl
  4110b2:	add    DWORD PTR [rax],eax
  4110b4:	add    BYTE PTR [rax],al
  4110b6:	add    BYTE PTR [rax],al
  4110b8:	(bad)  
  4110b9:	sbb    BYTE PTR [rcx],al
  4110bb:	add    BYTE PTR [rax],al
  4110bd:	add    BYTE PTR [rax],al
  4110bf:	add    BYTE PTR [rax+0x118],al
  4110c5:	add    BYTE PTR [rax],al
  4110c7:	add    BYTE PTR [rax+0x118],ah
  4110cd:	add    BYTE PTR [rax],al
  4110cf:	add    al,al
  4110d1:	sbb    BYTE PTR [rcx],al
  4110d3:	add    BYTE PTR [rax],al
  4110d5:	add    BYTE PTR [rax],al
  4110d7:	add    ah,bl
  4110d9:	sbb    BYTE PTR [rcx],al
  4110db:	add    BYTE PTR [rax],al
  4110dd:	add    BYTE PTR [rax],al
  4110df:	add    ah,dh
  4110e1:	sbb    BYTE PTR [rcx],al
  4110e3:	add    BYTE PTR [rax],al
  4110e5:	add    BYTE PTR [rax],al
  4110e7:	add    BYTE PTR [rcx+rbx*1],dl
  4110ea:	add    DWORD PTR [rax],eax
  4110ec:	add    BYTE PTR [rax],al
  4110ee:	add    BYTE PTR [rax],al
  4110f0:	xor    BYTE PTR [rcx],bl
  4110f2:	add    DWORD PTR [rax],eax
  4110f4:	add    BYTE PTR [rax],al
  4110f6:	add    BYTE PTR [rax],al
  4110f8:	sbb    QWORD PTR [rcx],r8
  4110fb:	add    BYTE PTR [rax],al
  4110fd:	add    BYTE PTR [rax],al
  4110ff:	add    BYTE PTR [rcx+rbx*1+0x1],ah
  411103:	add    BYTE PTR [rax],al
  411105:	add    BYTE PTR [rax],al
  411107:	add    BYTE PTR [rax+0x119],cl
  41110d:	add    BYTE PTR [rax],al
  41110f:	add    BYTE PTR [rcx+rbx*1+0x1],ch
  411116:	add    BYTE PTR [rax],al
  411118:	rcr    BYTE PTR [rcx],1
  41111a:	add    DWORD PTR [rax],eax
  41111c:	add    BYTE PTR [rax],al
  41111e:	add    BYTE PTR [rax],al
  411120:	lock sbb DWORD PTR [rcx],eax
  411123:	add    BYTE PTR [rax],al
  411125:	add    BYTE PTR [rax],al
  411127:	add    BYTE PTR [rdx+rbx*1],dl
  41112a:	add    DWORD PTR [rax],eax
  41112c:	add    BYTE PTR [rax],al
  41112e:	add    BYTE PTR [rax],al
  411130:	xor    BYTE PTR [rdx],bl
  411132:	add    DWORD PTR [rax],eax
  411134:	add    BYTE PTR [rax],al
  411136:	add    BYTE PTR [rax],al
  411138:	push   rax
  411139:	sbb    al,BYTE PTR [rcx]
  41113b:	add    BYTE PTR [rax],al
  41113d:	add    BYTE PTR [rax],al
  41113f:	add    BYTE PTR [rdx+rbx*1+0x1],ch
  411143:	add    BYTE PTR [rax],al
  411145:	add    BYTE PTR [rax],al
  411147:	add    BYTE PTR [rax+0x11a],dl
  41114d:	add    BYTE PTR [rax],al
  41114f:	add    BYTE PTR [rdx+rbx*1+0x1],ch
  411156:	add    BYTE PTR [rax],al
  411158:	int3   
  411159:	sbb    al,BYTE PTR [rcx]
  41115b:	add    BYTE PTR [rax],al
  41115d:	add    BYTE PTR [rax],al
  41115f:	add    al,ch
  411161:	sbb    al,BYTE PTR [rcx]
  411163:	add    BYTE PTR [rax],al
  411165:	add    BYTE PTR [rax],al
  411167:	add    BYTE PTR [rax],cl
  411169:	sbb    eax,DWORD PTR [rcx]
  41116b:	add    BYTE PTR [rax],al
  41116d:	add    BYTE PTR [rax],al
  41116f:	add    BYTE PTR [rax],ch
  411171:	sbb    eax,DWORD PTR [rcx]
  411173:	add    BYTE PTR [rax],al
  411175:	add    BYTE PTR [rax],al
  411177:	add    BYTE PTR [rax+0x1b],cl
  41117a:	add    DWORD PTR [rax],eax
  41117c:	add    BYTE PTR [rax],al
  41117e:	add    BYTE PTR [rax],al
  411180:	(bad)  
  411181:	sbb    eax,DWORD PTR [rcx]
	...
  41118f:	add    BYTE PTR [rbx+rbx*1+0x1],bh
  411193:	add    BYTE PTR [rax],al
  411195:	add    BYTE PTR [rax],al
  411197:	add    BYTE PTR [rbx+rbx*1+0x1],dl
  41119e:	add    BYTE PTR [rax],al
  4111a0:	lods   al,BYTE PTR ds:[rsi]
  4111a1:	sbb    eax,DWORD PTR [rcx]
  4111a3:	add    BYTE PTR [rax],al
  4111a5:	add    BYTE PTR [rax],al
  4111a7:	add    al,al
  4111a9:	sbb    eax,DWORD PTR [rcx]
  4111ab:	add    BYTE PTR [rax],al
  4111ad:	add    BYTE PTR [rax],al
  4111af:	add    dh,dl
  4111b1:	sbb    eax,DWORD PTR [rcx]
  4111b3:	add    BYTE PTR [rax],al
  4111b5:	add    BYTE PTR [rax],al
  4111b7:	add    ah,ch
  4111b9:	sbb    eax,DWORD PTR [rcx]
  4111bb:	add    BYTE PTR [rax],al
  4111bd:	add    BYTE PTR [rax],al
  4111bf:	add    ah,bh
  4111c1:	sbb    eax,DWORD PTR [rcx]
  4111c3:	add    BYTE PTR [rax],al
  4111c5:	add    BYTE PTR [rax],al
  4111c7:	add    BYTE PTR [rsi],cl
  4111c9:	sbb    al,0x1
  4111cb:	add    BYTE PTR [rax],al
  4111cd:	add    BYTE PTR [rax],al
  4111cf:	add    BYTE PTR [rax],ch
  4111d1:	sbb    al,0x1
  4111d3:	add    BYTE PTR [rax],al
  4111d5:	add    BYTE PTR [rax],al
  4111d7:	add    BYTE PTR [rax],bh
  4111d9:	sbb    al,0x1
  4111db:	add    BYTE PTR [rax],al
  4111dd:	add    BYTE PTR [rax],al
  4111df:	add    BYTE PTR [rsp+rbx*1+0x1],dl
  4111e3:	add    BYTE PTR [rax],al
  4111e5:	add    BYTE PTR [rax],al
  4111e7:	add    BYTE PTR [rsp+rbx*1+0x1],ch
  4111eb:	add    BYTE PTR [rax],al
  4111ed:	add    BYTE PTR [rax],al
  4111ef:	add    BYTE PTR [rsi+0x11c],al
  4111f5:	add    BYTE PTR [rax],al
  4111f7:	add    BYTE PTR [rsp+rbx*1+0x1],bl
  4111fe:	add    BYTE PTR [rax],al
  411200:	mov    al,0x1c
  411202:	add    DWORD PTR [rax],eax
  411204:	add    BYTE PTR [rax],al
  411206:	add    BYTE PTR [rax],al
  411208:	retf   0x11c
  41120b:	add    BYTE PTR [rax],al
  41120d:	add    BYTE PTR [rax],al
  41120f:	add    dh,bl
  411211:	sbb    al,0x1
  411213:	add    BYTE PTR [rax],al
  411215:	add    BYTE PTR [rax],al
  411217:	add    ah,bh
  411219:	sbb    al,0x1
  41121b:	add    BYTE PTR [rax],al
  41121d:	add    BYTE PTR [rax],al
  41121f:	add    BYTE PTR [rbx*1+0x1],al
  411226:	add    BYTE PTR [rax],al
  411228:	sbb    BYTE PTR [rip+0x1],bl        # 0x41122f
  41122e:	add    BYTE PTR [rax],al
  411230:	es sbb eax,0x1
  411236:	add    BYTE PTR [rax],al
  411238:	rex.X sbb eax,0x1
  41123e:	add    BYTE PTR [rax],al
  411240:	push   rsp
  411241:	sbb    eax,0x1
	...
  41124e:	add    BYTE PTR [rax],al
  411250:	fs sbb eax,0x1
  411256:	add    BYTE PTR [rax],al
  411258:	jl     0x411277
  41125a:	add    DWORD PTR [rax],eax
  41125c:	add    BYTE PTR [rax],al
  41125e:	add    BYTE PTR [rax],al
  411260:	mov    bl,BYTE PTR [rip+0x1]        # 0x411267
  411266:	add    BYTE PTR [rax],al
  411268:	(bad)  
  411269:	sbb    eax,0x1
  41126e:	add    BYTE PTR [rax],al
  411270:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  411271:	sbb    eax,0x1
  411276:	add    BYTE PTR [rax],al
  411278:	mov    ah,0x1d
  41127a:	add    DWORD PTR [rax],eax
  41127c:	add    BYTE PTR [rax],al
  41127e:	add    BYTE PTR [rax],al
  411280:	(bad)  
  411281:	sbb    eax,0x1
  411286:	add    BYTE PTR [rax],al
  411288:	(bad)  
  411289:	sbb    eax,0x1
  41128e:	add    BYTE PTR [rax],al
  411290:	(bad)  
  411291:	sbb    eax,0x1
  411296:	add    BYTE PTR [rax],al
  411298:	hlt    
  411299:	sbb    eax,0x1
  41129e:	add    BYTE PTR [rax],al
  4112a0:	add    bl,BYTE PTR [rsi]
  4112a2:	add    DWORD PTR [rax],eax
  4112a4:	add    BYTE PTR [rax],al
  4112a6:	add    BYTE PTR [rax],al
  4112a8:	or     al,0x1e
  4112aa:	add    DWORD PTR [rax],eax
  4112ac:	add    BYTE PTR [rax],al
  4112ae:	add    BYTE PTR [rax],al
  4112b0:	(bad)  
  4112b1:	(bad)  
  4112b2:	add    DWORD PTR [rax],eax
  4112b4:	add    BYTE PTR [rax],al
  4112b6:	add    BYTE PTR [rax],al
  4112b8:	and    BYTE PTR [rsi],bl
  4112ba:	add    DWORD PTR [rax],eax
  4112bc:	add    BYTE PTR [rax],al
  4112be:	add    BYTE PTR [rax],al
  4112c0:	sub    al,0x1e
  4112c2:	add    DWORD PTR [rax],eax
  4112c4:	add    BYTE PTR [rax],al
  4112c6:	add    BYTE PTR [rax],al
  4112c8:	xor    al,0x1e
  4112ca:	add    DWORD PTR [rax],eax
  4112cc:	add    BYTE PTR [rax],al
  4112ce:	add    BYTE PTR [rax],al
  4112d0:	ds (bad) 
  4112d2:	add    DWORD PTR [rax],eax
  4112d4:	add    BYTE PTR [rax],al
  4112d6:	add    BYTE PTR [rax],al
  4112d8:	rex.W (bad) 
  4112da:	add    DWORD PTR [rax],eax
  4112dc:	add    BYTE PTR [rax],al
  4112de:	add    BYTE PTR [rax],al
  4112e0:	push   rdx
  4112e1:	(bad)  
  4112e2:	add    DWORD PTR [rax],eax
  4112e4:	add    BYTE PTR [rax],al
  4112e6:	add    BYTE PTR [rax],al
  4112e8:	pop    rdx
  4112e9:	(bad)  
  4112ea:	add    DWORD PTR [rax],eax
  4112ec:	add    BYTE PTR [rax],al
  4112ee:	add    BYTE PTR [rax],al
  4112f0:	fs (bad) 
  4112f2:	add    DWORD PTR [rax],eax
  4112f4:	add    BYTE PTR [rax],al
  4112f6:	add    BYTE PTR [rax],al
  4112f8:	ins    BYTE PTR es:[rdi],dx
  4112f9:	(bad)  
  4112fa:	add    DWORD PTR [rax],eax
  4112fc:	add    BYTE PTR [rax],al
  4112fe:	add    BYTE PTR [rax],al
  411300:	jbe    0x411320
  411302:	add    DWORD PTR [rax],eax
  411304:	add    BYTE PTR [rax],al
  411306:	add    BYTE PTR [rax],al
  411308:	sbb    BYTE PTR [rsi],0x1
  41130b:	add    BYTE PTR [rax],al
  41130d:	add    BYTE PTR [rax],al
  41130f:	add    BYTE PTR [rax+0x11e],cl
  411315:	add    BYTE PTR [rax],al
  411317:	add    BYTE PTR [rdx+0x11e],dl
  41131d:	add    BYTE PTR [rax],al
  41131f:	add    BYTE PTR [rsi+rbx*1+0x1],bl
  411326:	add    BYTE PTR [rax],al
  411328:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  411329:	(bad)  
  41132a:	add    DWORD PTR [rax],eax
  41132c:	add    BYTE PTR [rax],al
  41132e:	add    BYTE PTR [rax],al
  411330:	mov    al,0x1e
  411332:	add    DWORD PTR [rax],eax
  411334:	add    BYTE PTR [rax],al
  411336:	add    BYTE PTR [rax],al
  411338:	mov    esi,0x11e
  41133d:	add    BYTE PTR [rax],al
  41133f:	add    al,cl
  411341:	(bad)  
  411342:	add    DWORD PTR [rax],eax
  411344:	add    BYTE PTR [rax],al
  411346:	add    BYTE PTR [rax],al
  411348:	rcr    BYTE PTR [rsi],cl
  41134a:	add    DWORD PTR [rax],eax
  41134c:	add    BYTE PTR [rax],al
  41134e:	add    BYTE PTR [rax],al
  411350:	fcomp  QWORD PTR [rsi]
  411352:	add    DWORD PTR [rax],eax
  411354:	add    BYTE PTR [rax],al
  411356:	add    BYTE PTR [rax],al
  411358:	out    0x1e,al
  41135a:	add    DWORD PTR [rax],eax
  41135c:	add    BYTE PTR [rax],al
  41135e:	add    BYTE PTR [rax],al
  411360:	out    dx,al
  411361:	(bad)  
  411362:	add    DWORD PTR [rax],eax
  411364:	add    BYTE PTR [rax],al
  411366:	add    BYTE PTR [rax],al
  411368:	clc    
  411369:	(bad)  
  41136a:	add    DWORD PTR [rax],eax
  41136c:	add    BYTE PTR [rax],al
  41136e:	add    BYTE PTR [rax],al
  411370:	add    bl,BYTE PTR [rdi]
  411372:	add    DWORD PTR [rax],eax
  411374:	add    BYTE PTR [rax],al
  411376:	add    BYTE PTR [rax],al
  411378:	or     al,0x1f
  41137a:	add    DWORD PTR [rax],eax
  41137c:	add    BYTE PTR [rax],al
  41137e:	add    BYTE PTR [rax],al
  411380:	(bad)  
  411381:	(bad)  
  411382:	add    DWORD PTR [rax],eax
  411384:	add    BYTE PTR [rax],al
  411386:	add    BYTE PTR [rax],al
  411388:	and    BYTE PTR [rdi],bl
  41138a:	add    DWORD PTR [rax],eax
  41138c:	add    BYTE PTR [rax],al
  41138e:	add    BYTE PTR [rax],al
  411390:	sub    bl,BYTE PTR [rdi]
  411392:	add    DWORD PTR [rax],eax
  411394:	add    BYTE PTR [rax],al
  411396:	add    BYTE PTR [rax],al
  411398:	xor    al,0x1f
  41139a:	add    DWORD PTR [rax],eax
  41139c:	add    BYTE PTR [rax],al
  41139e:	add    BYTE PTR [rax],al
  4113a0:	ds (bad) 
  4113a2:	add    DWORD PTR [rax],eax
  4113a4:	add    BYTE PTR [rax],al
  4113a6:	add    BYTE PTR [rax],al
  4113a8:	rex.W (bad) 
  4113aa:	add    DWORD PTR [rax],eax
  4113ac:	add    BYTE PTR [rax],al
  4113ae:	add    BYTE PTR [rax],al
  4113b0:	push   rdx
  4113b1:	(bad)  
  4113b2:	add    DWORD PTR [rax],eax
  4113b4:	add    BYTE PTR [rax],al
  4113b6:	add    BYTE PTR [rax],al
  4113b8:	pop    rsi
  4113b9:	(bad)  
  4113ba:	add    DWORD PTR [rax],eax
	...
  4113c8:	rex (bad) 
  4113ca:	add    DWORD PTR [rax],eax
  4113cc:	add    BYTE PTR [rax],al
  4113ce:	add    BYTE PTR [rax],al
  4113d0:	pop    rax
  4113d1:	(bad)  
  4113d2:	add    DWORD PTR [rax],eax
  4113d4:	add    BYTE PTR [rax],al
  4113d6:	add    BYTE PTR [rax],al
  4113d8:	push   0x117
  4113dd:	add    BYTE PTR [rax],al
  4113df:	add    BYTE PTR [rdi+rdx*1+0x1],bh
  4113e3:	add    BYTE PTR [rax],al
  4113e5:	add    BYTE PTR [rax],al
  4113e7:	add    BYTE PTR [rdi+rdx*1+0x1],dl
  4113ee:	add    BYTE PTR [rax],al
  4113f0:	lods   al,BYTE PTR ds:[rsi]
  4113f1:	(bad)  
  4113f2:	add    DWORD PTR [rax],eax
  4113f4:	add    BYTE PTR [rax],al
  4113f6:	add    BYTE PTR [rax],al
  4113f8:	(bad)  
  4113f9:	(bad)  
  4113fa:	add    DWORD PTR [rax],eax
  4113fc:	add    BYTE PTR [rax],al
  4113fe:	add    BYTE PTR [rax],al
  411400:	lock (bad) 
  411402:	add    DWORD PTR [rax],eax
  411404:	add    BYTE PTR [rax],al
  411406:	add    BYTE PTR [rax],al
  411408:	or     BYTE PTR [rax],bl
  41140a:	add    DWORD PTR [rax],eax
  41140c:	add    BYTE PTR [rax],al
  41140e:	add    BYTE PTR [rax],al
  411410:	sbb    al,0x18
  411412:	add    DWORD PTR [rax],eax
  411414:	add    BYTE PTR [rax],al
  411416:	add    BYTE PTR [rax],al
  411418:	xor    BYTE PTR [rax],bl
  41141a:	add    DWORD PTR [rax],eax
  41141c:	add    BYTE PTR [rax],al
  41141e:	add    BYTE PTR [rax],al
  411420:	sbb    BYTE PTR [rcx],r8b
  411423:	add    BYTE PTR [rax],al
  411425:	add    BYTE PTR [rax],al
  411427:	add    BYTE PTR [rax+0x18],dl
  41142a:	add    DWORD PTR [rax],eax
  41142c:	add    BYTE PTR [rax],al
  41142e:	add    BYTE PTR [rax],al
  411430:	(bad)  
  411431:	sbb    BYTE PTR [rcx],al
  411433:	add    BYTE PTR [rax],al
  411435:	add    BYTE PTR [rax],al
  411437:	add    BYTE PTR [rax+0x118],al
  41143d:	add    BYTE PTR [rax],al
  41143f:	add    BYTE PTR [rax+0x118],ah
  411445:	add    BYTE PTR [rax],al
  411447:	add    al,al
  411449:	sbb    BYTE PTR [rcx],al
  41144b:	add    BYTE PTR [rax],al
  41144d:	add    BYTE PTR [rax],al
  41144f:	add    ah,bl
  411451:	sbb    BYTE PTR [rcx],al
  411453:	add    BYTE PTR [rax],al
  411455:	add    BYTE PTR [rax],al
  411457:	add    ah,dh
  411459:	sbb    BYTE PTR [rcx],al
  41145b:	add    BYTE PTR [rax],al
  41145d:	add    BYTE PTR [rax],al
  41145f:	add    BYTE PTR [rcx+rbx*1],dl
  411462:	add    DWORD PTR [rax],eax
  411464:	add    BYTE PTR [rax],al
  411466:	add    BYTE PTR [rax],al
  411468:	xor    BYTE PTR [rcx],bl
  41146a:	add    DWORD PTR [rax],eax
  41146c:	add    BYTE PTR [rax],al
  41146e:	add    BYTE PTR [rax],al
  411470:	sbb    QWORD PTR [rcx],r8
  411473:	add    BYTE PTR [rax],al
  411475:	add    BYTE PTR [rax],al
  411477:	add    BYTE PTR [rcx+rbx*1+0x1],ah
  41147b:	add    BYTE PTR [rax],al
  41147d:	add    BYTE PTR [rax],al
  41147f:	add    BYTE PTR [rax+0x119],cl
  411485:	add    BYTE PTR [rax],al
  411487:	add    BYTE PTR [rcx+rbx*1+0x1],ch
  41148e:	add    BYTE PTR [rax],al
  411490:	rcr    BYTE PTR [rcx],1
  411492:	add    DWORD PTR [rax],eax
  411494:	add    BYTE PTR [rax],al
  411496:	add    BYTE PTR [rax],al
  411498:	lock sbb DWORD PTR [rcx],eax
  41149b:	add    BYTE PTR [rax],al
  41149d:	add    BYTE PTR [rax],al
  41149f:	add    BYTE PTR [rdx+rbx*1],dl
  4114a2:	add    DWORD PTR [rax],eax
  4114a4:	add    BYTE PTR [rax],al
  4114a6:	add    BYTE PTR [rax],al
  4114a8:	xor    BYTE PTR [rdx],bl
  4114aa:	add    DWORD PTR [rax],eax
  4114ac:	add    BYTE PTR [rax],al
  4114ae:	add    BYTE PTR [rax],al
  4114b0:	push   rax
  4114b1:	sbb    al,BYTE PTR [rcx]
  4114b3:	add    BYTE PTR [rax],al
  4114b5:	add    BYTE PTR [rax],al
  4114b7:	add    BYTE PTR [rdx+rbx*1+0x1],ch
  4114bb:	add    BYTE PTR [rax],al
  4114bd:	add    BYTE PTR [rax],al
  4114bf:	add    BYTE PTR [rax+0x11a],dl
  4114c5:	add    BYTE PTR [rax],al
  4114c7:	add    BYTE PTR [rdx+rbx*1+0x1],ch
  4114ce:	add    BYTE PTR [rax],al
  4114d0:	int3   
  4114d1:	sbb    al,BYTE PTR [rcx]
  4114d3:	add    BYTE PTR [rax],al
  4114d5:	add    BYTE PTR [rax],al
  4114d7:	add    al,ch
  4114d9:	sbb    al,BYTE PTR [rcx]
  4114db:	add    BYTE PTR [rax],al
  4114dd:	add    BYTE PTR [rax],al
  4114df:	add    BYTE PTR [rax],cl
  4114e1:	sbb    eax,DWORD PTR [rcx]
  4114e3:	add    BYTE PTR [rax],al
  4114e5:	add    BYTE PTR [rax],al
  4114e7:	add    BYTE PTR [rax],ch
  4114e9:	sbb    eax,DWORD PTR [rcx]
  4114eb:	add    BYTE PTR [rax],al
  4114ed:	add    BYTE PTR [rax],al
  4114ef:	add    BYTE PTR [rax+0x1b],cl
  4114f2:	add    DWORD PTR [rax],eax
  4114f4:	add    BYTE PTR [rax],al
  4114f6:	add    BYTE PTR [rax],al
  4114f8:	(bad)  
  4114f9:	sbb    eax,DWORD PTR [rcx]
	...
  411507:	add    BYTE PTR [rbx+rbx*1+0x1],bh
  41150b:	add    BYTE PTR [rax],al
  41150d:	add    BYTE PTR [rax],al
  41150f:	add    BYTE PTR [rbx+rbx*1+0x1],dl
  411516:	add    BYTE PTR [rax],al
  411518:	lods   al,BYTE PTR ds:[rsi]
  411519:	sbb    eax,DWORD PTR [rcx]
  41151b:	add    BYTE PTR [rax],al
  41151d:	add    BYTE PTR [rax],al
  41151f:	add    al,al
  411521:	sbb    eax,DWORD PTR [rcx]
  411523:	add    BYTE PTR [rax],al
  411525:	add    BYTE PTR [rax],al
  411527:	add    dh,dl
  411529:	sbb    eax,DWORD PTR [rcx]
  41152b:	add    BYTE PTR [rax],al
  41152d:	add    BYTE PTR [rax],al
  41152f:	add    ah,ch
  411531:	sbb    eax,DWORD PTR [rcx]
  411533:	add    BYTE PTR [rax],al
  411535:	add    BYTE PTR [rax],al
  411537:	add    ah,bh
  411539:	sbb    eax,DWORD PTR [rcx]
  41153b:	add    BYTE PTR [rax],al
  41153d:	add    BYTE PTR [rax],al
  41153f:	add    BYTE PTR [rsi],cl
  411541:	sbb    al,0x1
  411543:	add    BYTE PTR [rax],al
  411545:	add    BYTE PTR [rax],al
  411547:	add    BYTE PTR [rax],ch
  411549:	sbb    al,0x1
  41154b:	add    BYTE PTR [rax],al
  41154d:	add    BYTE PTR [rax],al
  41154f:	add    BYTE PTR [rax],bh
  411551:	sbb    al,0x1
  411553:	add    BYTE PTR [rax],al
  411555:	add    BYTE PTR [rax],al
  411557:	add    BYTE PTR [rsp+rbx*1+0x1],dl
  41155b:	add    BYTE PTR [rax],al
  41155d:	add    BYTE PTR [rax],al
  41155f:	add    BYTE PTR [rsp+rbx*1+0x1],ch
  411563:	add    BYTE PTR [rax],al
  411565:	add    BYTE PTR [rax],al
  411567:	add    BYTE PTR [rsi+0x11c],al
  41156d:	add    BYTE PTR [rax],al
  41156f:	add    BYTE PTR [rsp+rbx*1+0x1],bl
  411576:	add    BYTE PTR [rax],al
  411578:	mov    al,0x1c
  41157a:	add    DWORD PTR [rax],eax
  41157c:	add    BYTE PTR [rax],al
  41157e:	add    BYTE PTR [rax],al
  411580:	retf   0x11c
  411583:	add    BYTE PTR [rax],al
  411585:	add    BYTE PTR [rax],al
  411587:	add    dh,bl
  411589:	sbb    al,0x1
  41158b:	add    BYTE PTR [rax],al
  41158d:	add    BYTE PTR [rax],al
  41158f:	add    ah,bh
  411591:	sbb    al,0x1
  411593:	add    BYTE PTR [rax],al
  411595:	add    BYTE PTR [rax],al
  411597:	add    BYTE PTR [rbx*1+0x1],al
  41159e:	add    BYTE PTR [rax],al
  4115a0:	sbb    BYTE PTR [rip+0x1],bl        # 0x4115a7
  4115a6:	add    BYTE PTR [rax],al
  4115a8:	es sbb eax,0x1
  4115ae:	add    BYTE PTR [rax],al
  4115b0:	rex.X sbb eax,0x1
  4115b6:	add    BYTE PTR [rax],al
  4115b8:	push   rsp
  4115b9:	sbb    eax,0x1
	...
  4115c6:	add    BYTE PTR [rax],al
  4115c8:	fs sbb eax,0x1
  4115ce:	add    BYTE PTR [rax],al
  4115d0:	jl     0x4115ef
  4115d2:	add    DWORD PTR [rax],eax
  4115d4:	add    BYTE PTR [rax],al
  4115d6:	add    BYTE PTR [rax],al
  4115d8:	mov    bl,BYTE PTR [rip+0x1]        # 0x4115df
  4115de:	add    BYTE PTR [rax],al
  4115e0:	(bad)  
  4115e1:	sbb    eax,0x1
  4115e6:	add    BYTE PTR [rax],al
  4115e8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4115e9:	sbb    eax,0x1
  4115ee:	add    BYTE PTR [rax],al
  4115f0:	mov    ah,0x1d
  4115f2:	add    DWORD PTR [rax],eax
  4115f4:	add    BYTE PTR [rax],al
  4115f6:	add    BYTE PTR [rax],al
  4115f8:	(bad)  
  4115f9:	sbb    eax,0x1
  4115fe:	add    BYTE PTR [rax],al
  411600:	(bad)  
  411601:	sbb    eax,0x1
  411606:	add    BYTE PTR [rax],al
  411608:	(bad)  
  411609:	sbb    eax,0x1
  41160e:	add    BYTE PTR [rax],al
  411610:	hlt    
  411611:	sbb    eax,0x1
  411616:	add    BYTE PTR [rax],al
  411618:	add    bl,BYTE PTR [rsi]
  41161a:	add    DWORD PTR [rax],eax
  41161c:	add    BYTE PTR [rax],al
  41161e:	add    BYTE PTR [rax],al
  411620:	or     al,0x1e
  411622:	add    DWORD PTR [rax],eax
  411624:	add    BYTE PTR [rax],al
  411626:	add    BYTE PTR [rax],al
  411628:	(bad)  
  411629:	(bad)  
  41162a:	add    DWORD PTR [rax],eax
  41162c:	add    BYTE PTR [rax],al
  41162e:	add    BYTE PTR [rax],al
  411630:	and    BYTE PTR [rsi],bl
  411632:	add    DWORD PTR [rax],eax
  411634:	add    BYTE PTR [rax],al
  411636:	add    BYTE PTR [rax],al
  411638:	sub    al,0x1e
  41163a:	add    DWORD PTR [rax],eax
  41163c:	add    BYTE PTR [rax],al
  41163e:	add    BYTE PTR [rax],al
  411640:	xor    al,0x1e
  411642:	add    DWORD PTR [rax],eax
  411644:	add    BYTE PTR [rax],al
  411646:	add    BYTE PTR [rax],al
  411648:	ds (bad) 
  41164a:	add    DWORD PTR [rax],eax
  41164c:	add    BYTE PTR [rax],al
  41164e:	add    BYTE PTR [rax],al
  411650:	rex.W (bad) 
  411652:	add    DWORD PTR [rax],eax
  411654:	add    BYTE PTR [rax],al
  411656:	add    BYTE PTR [rax],al
  411658:	push   rdx
  411659:	(bad)  
  41165a:	add    DWORD PTR [rax],eax
  41165c:	add    BYTE PTR [rax],al
  41165e:	add    BYTE PTR [rax],al
  411660:	pop    rdx
  411661:	(bad)  
  411662:	add    DWORD PTR [rax],eax
  411664:	add    BYTE PTR [rax],al
  411666:	add    BYTE PTR [rax],al
  411668:	fs (bad) 
  41166a:	add    DWORD PTR [rax],eax
  41166c:	add    BYTE PTR [rax],al
  41166e:	add    BYTE PTR [rax],al
  411670:	ins    BYTE PTR es:[rdi],dx
  411671:	(bad)  
  411672:	add    DWORD PTR [rax],eax
  411674:	add    BYTE PTR [rax],al
  411676:	add    BYTE PTR [rax],al
  411678:	jbe    0x411698
  41167a:	add    DWORD PTR [rax],eax
  41167c:	add    BYTE PTR [rax],al
  41167e:	add    BYTE PTR [rax],al
  411680:	sbb    BYTE PTR [rsi],0x1
  411683:	add    BYTE PTR [rax],al
  411685:	add    BYTE PTR [rax],al
  411687:	add    BYTE PTR [rax+0x11e],cl
  41168d:	add    BYTE PTR [rax],al
  41168f:	add    BYTE PTR [rdx+0x11e],dl
  411695:	add    BYTE PTR [rax],al
  411697:	add    BYTE PTR [rsi+rbx*1+0x1],bl
  41169e:	add    BYTE PTR [rax],al
  4116a0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4116a1:	(bad)  
  4116a2:	add    DWORD PTR [rax],eax
  4116a4:	add    BYTE PTR [rax],al
  4116a6:	add    BYTE PTR [rax],al
  4116a8:	mov    al,0x1e
  4116aa:	add    DWORD PTR [rax],eax
  4116ac:	add    BYTE PTR [rax],al
  4116ae:	add    BYTE PTR [rax],al
  4116b0:	mov    esi,0x11e
  4116b5:	add    BYTE PTR [rax],al
  4116b7:	add    al,cl
  4116b9:	(bad)  
  4116ba:	add    DWORD PTR [rax],eax
  4116bc:	add    BYTE PTR [rax],al
  4116be:	add    BYTE PTR [rax],al
  4116c0:	rcr    BYTE PTR [rsi],cl
  4116c2:	add    DWORD PTR [rax],eax
  4116c4:	add    BYTE PTR [rax],al
  4116c6:	add    BYTE PTR [rax],al
  4116c8:	fcomp  QWORD PTR [rsi]
  4116ca:	add    DWORD PTR [rax],eax
  4116cc:	add    BYTE PTR [rax],al
  4116ce:	add    BYTE PTR [rax],al
  4116d0:	out    0x1e,al
  4116d2:	add    DWORD PTR [rax],eax
  4116d4:	add    BYTE PTR [rax],al
  4116d6:	add    BYTE PTR [rax],al
  4116d8:	out    dx,al
  4116d9:	(bad)  
  4116da:	add    DWORD PTR [rax],eax
  4116dc:	add    BYTE PTR [rax],al
  4116de:	add    BYTE PTR [rax],al
  4116e0:	clc    
  4116e1:	(bad)  
  4116e2:	add    DWORD PTR [rax],eax
  4116e4:	add    BYTE PTR [rax],al
  4116e6:	add    BYTE PTR [rax],al
  4116e8:	add    bl,BYTE PTR [rdi]
  4116ea:	add    DWORD PTR [rax],eax
  4116ec:	add    BYTE PTR [rax],al
  4116ee:	add    BYTE PTR [rax],al
  4116f0:	or     al,0x1f
  4116f2:	add    DWORD PTR [rax],eax
  4116f4:	add    BYTE PTR [rax],al
  4116f6:	add    BYTE PTR [rax],al
  4116f8:	(bad)  
  4116f9:	(bad)  
  4116fa:	add    DWORD PTR [rax],eax
  4116fc:	add    BYTE PTR [rax],al
  4116fe:	add    BYTE PTR [rax],al
  411700:	and    BYTE PTR [rdi],bl
  411702:	add    DWORD PTR [rax],eax
  411704:	add    BYTE PTR [rax],al
  411706:	add    BYTE PTR [rax],al
  411708:	sub    bl,BYTE PTR [rdi]
  41170a:	add    DWORD PTR [rax],eax
  41170c:	add    BYTE PTR [rax],al
  41170e:	add    BYTE PTR [rax],al
  411710:	xor    al,0x1f
  411712:	add    DWORD PTR [rax],eax
  411714:	add    BYTE PTR [rax],al
  411716:	add    BYTE PTR [rax],al
  411718:	ds (bad) 
  41171a:	add    DWORD PTR [rax],eax
  41171c:	add    BYTE PTR [rax],al
  41171e:	add    BYTE PTR [rax],al
  411720:	rex.W (bad) 
  411722:	add    DWORD PTR [rax],eax
  411724:	add    BYTE PTR [rax],al
  411726:	add    BYTE PTR [rax],al
  411728:	push   rdx
  411729:	(bad)  
  41172a:	add    DWORD PTR [rax],eax
  41172c:	add    BYTE PTR [rax],al
  41172e:	add    BYTE PTR [rax],al
  411730:	pop    rsi
  411731:	(bad)  
  411732:	add    DWORD PTR [rax],eax
	...
  411740:	cmp    eax,DWORD PTR [rax]
  411742:	pop    rdi
  411743:	fs (bad) 
  411745:	jne    0x4117ba
  411747:	pop    rdi
  411748:	addr32 gs je 0x4117ab
  41174c:	jb     0x4117b3
  41174e:	(bad)  
  41174f:	ins    BYTE PTR es:[rdi],dx
  411750:	pop    rdi
  411751:	je     0x4117bc
  411753:	ins    DWORD PTR es:[rdi],dx
  411754:	add    BYTE PTR gs:[rax],al
  411757:	add    BYTE PTR [rbx],dl
  411759:	add    DWORD PTR [rdx+riz*2+0x75],esp
  41175d:	jae    0x4117be
  41175f:	(bad)  
  411760:	jne    0x4117d5
  411762:	pop    rdi
  411763:	addr32 gs je 0x411767
  411767:	add    BYTE PTR [rcx],bl
  411769:	add    DWORD PTR [rdx+riz*2+0x75],esp
  41176d:	jae    0x4117ce
  41176f:	(bad)  
  411770:	jne    0x4117e5
  411772:	pop    rdi
  411773:	jb     0x4117da
  411775:	imul   esi,DWORD PTR [ebx+0x74],0x25007265
  41177d:	add    DWORD PTR [rdx+riz*2+0x75],esp
  411781:	jae    0x4117e2
  411783:	movsxd ebp,DWORD PTR [rdi+0x6e]
  411786:	outs   dx,BYTE PTR ds:[rsi]
  411787:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  41178c:	outs   dx,BYTE PTR ds:[rsi]
  41178d:	pop    rdi
  41178e:	data16 ins BYTE PTR es:[rdi],dx
  411790:	jne    0x411805
  411792:	push   0x64013d00
  411797:	(bad)  
  411798:	jne    0x41180d
  41179a:	pop    rdi
  41179b:	movsxd ebp,DWORD PTR [rdi+0x6e]
  41179e:	outs   dx,BYTE PTR ds:[rsi]
  41179f:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  4117a4:	outs   dx,BYTE PTR ds:[rsi]
  4117a5:	pop    rdi
  4117a6:	outs   dx,DWORD PTR ds:[rsi]
  4117a7:	jo     0x41180e
  4117a9:	outs   dx,BYTE PTR ds:[rsi]
  4117aa:	add    BYTE PTR [rax],al
  4117ac:	add    QWORD PTR [rdx+riz*2+0x75],rsp
  4117b1:	jae    0x411812
  4117b3:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4117b6:	outs   dx,BYTE PTR ds:[rsi]
  4117b7:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  4117bc:	outs   dx,BYTE PTR ds:[rsi]
  4117bd:	pop    rdi
  4117be:	jae    0x411825
  4117c0:	outs   dx,BYTE PTR ds:[rsi]
  4117c1:	add    BYTE PTR fs:[rax],al
  4117c4:	add    QWORD PTR [r10+r12*2+0x75],rsp
  4117c9:	jae    0x41182a
  4117cb:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4117ce:	outs   dx,BYTE PTR ds:[rsi]
  4117cf:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  4117d4:	outs   dx,BYTE PTR ds:[rsi]
  4117d5:	pop    rdi
  4117d6:	jae    0x41183d
  4117d8:	outs   dx,BYTE PTR ds:[rsi]
  4117d9:	fs pop rdi
  4117db:	ja     0x411846
  4117dd:	je     0x411847
  4117df:	pop    rdi
  4117e0:	jb     0x411847
  4117e2:	jo     0x411850
  4117e4:	jns    0x411845
  4117e6:	(bad)  
  4117e7:	outs   dx,BYTE PTR ds:[rsi]
  4117e8:	fs pop rdi
  4117ea:	(bad)  
  4117eb:	ins    BYTE PTR es:[rdi],dx
  4117ec:	outs   dx,DWORD PTR ds:[rsi]
  4117ed:	movsxd ebp,DWORD PTR [rbx+0x0]
  4117f0:	pop    rsi
  4117f1:	add    DWORD PTR [rdx+riz*2+0x75],esp
  4117f5:	jae    0x411856
  4117f7:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4117fa:	outs   dx,BYTE PTR ds:[rsi]
  4117fb:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  411800:	outs   dx,BYTE PTR ds:[rsi]
  411801:	pop    rdi
  411802:	jne    0x411872
  411804:	jb     0x41186b
  411806:	data16 add BYTE PTR [rax+0x1],ah
  41180a:	fs (bad) 
  41180c:	jne    0x411881
  41180e:	pop    rdi
  41180f:	gs jb  0x411884
  411812:	outs   dx,DWORD PTR ds:[rsi]
  411813:	jb     0x411874
  411815:	data16 jb 0x41187d
  411818:	add    BYTE PTR gs:[rax],al
  41181b:	add    BYTE PTR [rdx+0x1],ah
  41181e:	fs (bad) 
  411820:	jne    0x411895
  411822:	pop    rdi
  411823:	gs jb  0x411898
  411826:	outs   dx,DWORD PTR ds:[rsi]
  411827:	jb     0x411888
  411829:	imul   ebp,DWORD PTR [rsi+0x69],0x74
  411830:	movsxd eax,DWORD PTR [rcx]
  411832:	fs (bad) 
  411834:	jne    0x4118a9
  411836:	pop    rdi
  411837:	gs jb  0x4118ac
  41183a:	outs   dx,DWORD PTR ds:[rsi]
  41183b:	jb     0x41189c
  41183d:	imul   esi,DWORD PTR [rbx+0x5f],0x746573
  411844:	add    DWORD PTR fs:[rdx+riz*2+0x75],esp
  411849:	jae    0x4118aa
  41184b:	data16 jb 0x4118b3
  41184e:	add    BYTE PTR gs:[rax+0x1],ch
  411852:	fs (bad) 
  411854:	jne    0x4118c9
  411856:	pop    rdi
  411857:	ins    DWORD PTR es:[rdi],dx
  411858:	(bad)  
  411859:	ins    BYTE PTR es:[rdi],dx
  41185a:	ins    BYTE PTR es:[rdi],dx
  41185b:	outs   dx,DWORD PTR ds:[rsi]
  41185c:	movsxd eax,DWORD PTR [rax]
  41185e:	add    BYTE PTR [rax],al
  411860:	ja     0x411863
  411862:	fs (bad) 
  411864:	jne    0x4118d9
  411866:	pop    rdi
  411867:	ins    DWORD PTR es:[rdi],dx
  411868:	gs jae 0x4118de
  41186b:	(bad)  
  41186c:	addr32 gs pop rdi
  41186f:	addr32 gs je 0x4118d2
  411873:	fs gs jae 0x4118eb
  411877:	imul   ebp,DWORD PTR [rsi+0x61],0x6e6f6974
  41187e:	add    BYTE PTR [rax],al
  411880:	js     0x411883
  411882:	fs (bad) 
  411884:	jne    0x4118f9
  411886:	pop    rdi
  411887:	ins    DWORD PTR es:[rdi],dx
  411888:	gs jae 0x4118fe
  41188b:	(bad)  
  41188c:	addr32 gs pop rdi
  41188f:	addr32 gs je 0x4118f2
  411893:	gs jb  0x411908
  411896:	outs   dx,DWORD PTR ds:[rsi]
  411897:	jb     0x4118f8
  411899:	outs   dx,BYTE PTR ds:[rsi]
  41189a:	(bad)  
  41189b:	ins    DWORD PTR es:[rdi],dx
  41189c:	add    BYTE PTR gs:[rax],al
  41189f:	add    BYTE PTR [rcx+0x1],bh
  4118a2:	fs (bad) 
  4118a4:	jne    0x411919
  4118a6:	pop    rdi
  4118a7:	ins    DWORD PTR es:[rdi],dx
  4118a8:	gs jae 0x41191e
  4118ab:	(bad)  
  4118ac:	addr32 gs pop rdi
  4118af:	addr32 gs je 0x411912
  4118b3:	imul   ebp,DWORD PTR [rsi+0x74],0x61667265
  4118ba:	movsxd esp,DWORD PTR [rbp+0x0]
  4118bd:	add    BYTE PTR [rax],al
  4118bf:	add    BYTE PTR [rdx+0x1],bh
  4118c2:	fs (bad) 
  4118c4:	jne    0x411939
  4118c6:	pop    rdi
  4118c7:	ins    DWORD PTR es:[rdi],dx
  4118c8:	gs jae 0x41193e
  4118cb:	(bad)  
  4118cc:	addr32 gs pop rdi
  4118cf:	addr32 gs je 0x411932
  4118d3:	ins    DWORD PTR es:[rdi],dx
  4118d4:	gs ins DWORD PTR es:[rdi],dx
  4118d6:	(bad)  
  4118d7:	gs jb  0x4118da
  4118da:	add    BYTE PTR [rax],al
  4118dc:	jl     0x4118df
  4118de:	fs (bad) 
  4118e0:	jne    0x411955
  4118e2:	pop    rdi
  4118e3:	ins    DWORD PTR es:[rdi],dx
  4118e4:	gs jae 0x41195a
  4118e7:	(bad)  
  4118e8:	addr32 gs pop rdi
  4118eb:	addr32 gs je 0x41194e
  4118ef:	jo     0x411952
  4118f1:	je     0x41195b
  4118f3:	add    BYTE PTR [rsi+0x1],bh
  4118f6:	fs (bad) 
  4118f8:	jne    0x41196d
  4118fa:	pop    rdi
  4118fb:	ins    DWORD PTR es:[rdi],dx
  4118fc:	gs jae 0x411972
  4118ff:	(bad)  
  411900:	addr32 gs pop rdi
  411903:	addr32 gs je 0x411966
  411907:	jb     0x41196e
  411909:	jo     0x411977
  41190b:	jns    0x41196c
  41190d:	jae    0x411974
  41190f:	jb     0x41197a
  411911:	(bad)  
  411912:	ins    BYTE PTR es:[rdi],dx
  411913:	add    BYTE PTR [rdi+0x1],bh
  411916:	fs (bad) 
  411918:	jne    0x41198d
  41191a:	pop    rdi
  41191b:	ins    DWORD PTR es:[rdi],dx
  41191c:	gs jae 0x411992
  41191f:	(bad)  
  411920:	addr32 gs pop rdi
  411923:	addr32 gs je 0x411986
  411927:	jae    0x41198e
  411929:	outs   dx,BYTE PTR ds:[rsi]
  41192a:	fs gs jb 0x41192e
  41192e:	add    BYTE PTR [rax],al
  411930:	add    BYTE PTR [rcx],0x64
  411933:	(bad)  
  411934:	jne    0x4119a9
  411936:	pop    rdi
  411937:	ins    DWORD PTR es:[rdi],dx
  411938:	gs jae 0x4119ae
  41193b:	(bad)  
  41193c:	addr32 gs pop rdi
  41193f:	addr32 gs je 0x4119a2
  411943:	jae    0x4119aa
  411945:	jb     0x4119b0
  411947:	(bad)  
  411948:	ins    BYTE PTR es:[rdi],dx
  411949:	add    BYTE PTR [rax],al
  41194b:	add    BYTE PTR [rdx+0x75626401],al
  411951:	jae    0x4119b2
  411953:	ins    DWORD PTR es:[rdi],dx
  411954:	gs jae 0x4119ca
  411957:	(bad)  
  411958:	addr32 gs pop rdi
  41195b:	addr32 gs je 0x4119be
  41195f:	je     0x4119da
  411961:	jo     0x4119c8
  411963:	add    BYTE PTR [rbp+0x75626401],cl
  411969:	jae    0x4119ca
  41196b:	ins    DWORD PTR es:[rdi],dx
  41196c:	gs jae 0x4119e2
  41196f:	(bad)  
  411970:	addr32 gs pop rdi
  411973:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x7070615f
  41197b:	outs   dx,BYTE PTR gs:[rsi]
  41197d:	fs pop rdi
  41197f:	(bad)  
  411981:	jae    0x4119ec
  411983:	movsxd eax,DWORD PTR [rax]
  411985:	add    BYTE PTR [rax],al
  411987:	add    BYTE PTR [rdi+0x75626401],cl
  41198d:	jae    0x4119ee
  41198f:	ins    DWORD PTR es:[rdi],dx
  411990:	gs jae 0x411a06
  411993:	(bad)  
  411994:	addr32 gs pop rdi
  411997:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x6f6c635f
  41199f:	jae    0x411a06
  4119a1:	pop    rdi
  4119a2:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4119a5:	je     0x411a08
  4119a7:	imul   ebp,DWORD PTR [rsi+0x65],0x1900072
  4119ae:	fs (bad) 
  4119b0:	jne    0x411a25
  4119b2:	pop    rdi
  4119b3:	ins    DWORD PTR es:[rdi],dx
  4119b4:	gs jae 0x411a2a
  4119b7:	(bad)  
  4119b8:	addr32 gs pop rdi
  4119bb:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x7465675f
  4119c3:	pop    rdi
  4119c4:	(bad)  
  4119c5:	jb     0x411a2e
  4119c7:	pop    rdi
  4119c8:	je     0x411a43
  4119ca:	jo     0x411a31
  4119cc:	add    BYTE PTR [rax],al
  4119ce:	add    BYTE PTR [rax],al
  4119d0:	xchg   edx,eax
  4119d1:	add    DWORD PTR [rdx+riz*2+0x75],esp
  4119d5:	jae    0x411a36
  4119d7:	ins    DWORD PTR es:[rdi],dx
  4119d8:	gs jae 0x411a4e
  4119db:	(bad)  
  4119dc:	addr32 gs pop rdi
  4119df:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x7465675f
  4119e7:	pop    rdi
  4119e8:	(bad)  
  4119ea:	jae    0x411a55
  4119ec:	movsxd eax,DWORD PTR [rax]
  4119ee:	add    BYTE PTR [rax],al
  4119f0:	xchg   ebp,eax
  4119f1:	add    DWORD PTR [rdx+riz*2+0x75],esp
  4119f5:	jae    0x411a56
  4119f7:	ins    DWORD PTR es:[rdi],dx
  4119f8:	gs jae 0x411a6e
  4119fb:	(bad)  
  4119fc:	addr32 gs pop rdi
  4119ff:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x7465675f
  411a07:	pop    rdi
  411a08:	imul   di,WORD PTR [rax+0x65],0x5f64
  411a0e:	(bad)  
  411a0f:	jb     0x411a83
  411a11:	(bad)  
  411a12:	jns    0x411a14
  411a14:	cwde   
  411a15:	add    DWORD PTR [rdx+riz*2+0x75],esp
  411a19:	jae    0x411a7a
  411a1b:	ins    DWORD PTR es:[rdi],dx
  411a1c:	gs jae 0x411a92
  411a1f:	(bad)  
  411a20:	addr32 gs pop rdi
  411a23:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x696e695f
  411a2b:	je     0x411a2d
  411a2d:	add    BYTE PTR [rax],al
  411a2f:	add    BYTE PTR [rcx+0x75626401],bl
  411a35:	jae    0x411a96
  411a37:	ins    DWORD PTR es:[rdi],dx
  411a38:	gs jae 0x411aae
  411a3b:	(bad)  
  411a3c:	addr32 gs pop rdi
  411a3f:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x696e695f
  411a47:	je     0x411aa8
  411a49:	(bad)  
  411a4a:	jo     0x411abc
  411a4c:	outs   dx,BYTE PTR gs:[rsi]
  411a4e:	add    BYTE PTR fs:[rdx+0x75626401],bl
  411a55:	jae    0x411ab6
  411a57:	ins    DWORD PTR es:[rdi],dx
  411a58:	gs jae 0x411ace
  411a5b:	(bad)  
  411a5c:	addr32 gs pop rdi
  411a5f:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x78656e5f
  411a67:	je     0x411a69
  411a69:	add    BYTE PTR [rax],al
  411a6b:	add    BYTE PTR [rbx+0x75626401],bl
  411a71:	jae    0x411ad2
  411a73:	ins    DWORD PTR es:[rdi],dx
  411a74:	gs jae 0x411aea
  411a77:	(bad)  
  411a78:	addr32 gs pop rdi
  411a7b:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x65706f5f
  411a83:	outs   dx,BYTE PTR ds:[rsi]
  411a84:	pop    rdi
  411a85:	movsxd ebp,DWORD PTR [rdi+0x6e]
  411a88:	je     0x411aeb
  411a8a:	imul   ebp,DWORD PTR [rsi+0x65],0x9c000072
  411a91:	add    DWORD PTR [rdx+riz*2+0x75],esp
  411a95:	jae    0x411af6
  411a97:	ins    DWORD PTR es:[rdi],dx
  411a98:	gs jae 0x411b0e
  411a9b:	(bad)  
  411a9c:	addr32 gs pop rdi
  411a9f:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x6365725f
  411aa7:	jne    0x411b1b
  411aa9:	jae    0x411b10
  411aab:	add    BYTE PTR [rdx+0x75626401],ah
  411ab1:	jae    0x411b12
  411ab3:	ins    DWORD PTR es:[rdi],dx
  411ab4:	gs jae 0x411b2a
  411ab7:	(bad)  
  411ab8:	addr32 gs pop rdi
  411abb:	outs   dx,BYTE PTR ds:[rsi]
  411abc:	gs ja  0x411b1e
  411abf:	ins    DWORD PTR es:[rdi],dx
  411ac0:	gs je  0x411b2b
  411ac3:	outs   dx,DWORD PTR ds:[rsi]
  411ac4:	fs pop rdi
  411ac6:	movsxd esp,DWORD PTR [rcx+0x6c]
  411ac9:	ins    BYTE PTR es:[rdi],dx
  411aca:	add    BYTE PTR [rax],al
  411acc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  411acd:	add    DWORD PTR [rdx+riz*2+0x75],esp
  411ad1:	jae    0x411b32
  411ad3:	ins    DWORD PTR es:[rdi],dx
  411ad4:	gs jae 0x411b4a
  411ad7:	(bad)  
  411ad8:	addr32 gs pop rdi
  411adb:	outs   dx,BYTE PTR ds:[rsi]
  411adc:	gs ja  0x411b3e
  411adf:	jae    0x411b4a
  411ae1:	outs   dx,BYTE PTR ds:[esi]
  411ae3:	(bad)  
  411ae4:	ins    BYTE PTR es:[rdi],dx
  411ae5:	add    BYTE PTR [rax],al
  411ae7:	add    BYTE PTR [rdi+0x75626401],ah
  411aed:	jae    0x411b4e
  411aef:	ins    DWORD PTR es:[rdi],dx
  411af0:	gs jae 0x411b66
  411af3:	(bad)  
  411af4:	addr32 gs pop rdi
  411af7:	jae    0x411b5e
  411af9:	je     0x411b5a
  411afb:	(bad)  
  411afc:	jne    0x411b72
  411afe:	outs   dx,DWORD PTR ds:[rsi]
  411aff:	pop    rdi
  411b00:	jae    0x411b76
  411b02:	(bad)  
  411b03:	jb     0x411b79
  411b05:	add    BYTE PTR [rax],al
  411b07:	add    BYTE PTR [rcx+0x75626401],ch
  411b0d:	jae    0x411b6e
  411b0f:	ins    DWORD PTR es:[rdi],dx
  411b10:	gs jae 0x411b86
  411b13:	(bad)  
  411b14:	addr32 gs pop rdi
  411b17:	jae    0x411b7e
  411b19:	je     0x411b7a
  411b1b:	fs gs jae 0x411b93
  411b1f:	imul   ebp,DWORD PTR [rsi+0x61],0x6e6f6974
  411b26:	add    BYTE PTR [rax],al
  411b28:	mov    dl,0x1
  411b2a:	fs (bad) 
  411b2c:	jne    0x411ba1
  411b2e:	pop    rdi
  411b2f:	ins    DWORD PTR es:[rdi],dx
  411b30:	gs jae 0x411ba6
  411b33:	(bad)  
  411b34:	addr32 gs pop rdi
  411b37:	je     0x411bb2
  411b39:	jo     0x411ba0
  411b3b:	pop    rdi
  411b3c:	data16 jb 0x411bae
  411b3f:	ins    DWORD PTR es:[rdi],dx
  411b40:	pop    rdi
  411b41:	jae    0x411bb7
  411b43:	jb     0x411bae
  411b45:	outs   dx,BYTE PTR ds:[rsi]
  411b46:	add    BYTE PTR [ecx+eax*1+0x73756264],dh
  411b4e:	pop    rdi
  411b4f:	ins    DWORD PTR es:[rdi],dx
  411b50:	gs jae 0x411bc6
  411b53:	(bad)  
  411b54:	addr32 gs pop rdi
  411b57:	jne    0x411bc7
  411b59:	jb     0x411bc0
  411b5b:	data16 add BYTE PTR [rax],al
  411b5e:	add    BYTE PTR [rax],al
  411b60:	(bad)  
  411b61:	add    DWORD PTR [rdx+riz*2+0x75],esp
  411b65:	jae    0x411bc6
  411b67:	jbe    0x411bca
  411b69:	ins    BYTE PTR es:[rdi],dx
  411b6a:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x75625f65
  411b72:	jae    0x411bd3
  411b74:	outs   dx,BYTE PTR ds:[rsi]
  411b75:	(bad)  
  411b76:	ins    DWORD PTR es:[rdi],dx
  411b77:	add    BYTE PTR gs:[rax],al
  411b7a:	add    BYTE PTR [rax],al
  411b7c:	fadd   DWORD PTR [rax]
  411b7e:	rex.R
  411b7f:	gs ins BYTE PTR es:[rdi],dx
  411b81:	gs je  0x411be9
  411b84:	rex.XB jb 0x411bf0
  411b87:	je     0x411bf2
  411b89:	movsxd esp,DWORD PTR [rcx+0x6c]
  411b8c:	push   rbx
  411b8d:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  411b92:	outs   dx,BYTE PTR ds:[rsi]
  411b93:	add    al,bh
  411b95:	add    BYTE PTR [rbp+0x6e],al
  411b98:	je     0x411bff
  411b9a:	jb     0x411bdf
  411b9c:	jb     0x411c07
  411b9e:	je     0x411c09
  411ba0:	movsxd esp,DWORD PTR [rcx+0x6c]
  411ba3:	push   rbx
  411ba4:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  411ba9:	outs   dx,BYTE PTR ds:[rsi]
  411baa:	add    BYTE PTR [rax],al
  411bac:	int    0x1
  411bae:	rex.RXB
  411baf:	gs je  0x411bf5
  411bb2:	jne    0x411c26
  411bb4:	jb     0x411c1b
  411bb6:	outs   dx,BYTE PTR ds:[rsi]
  411bb7:	je     0x411c09
  411bb9:	jb     0x411c2a
  411bbb:	movsxd esp,DWORD PTR [rbp+0x73]
  411bbe:	jae    0x411bc0
  411bc0:	(bad)  
  411bc1:	add    DWORD PTR [rdi+0x65],eax
  411bc4:	je     0x411c09
  411bc6:	jne    0x411c3a
  411bc8:	jb     0x411c2f
  411bca:	outs   dx,BYTE PTR ds:[rsi]
  411bcb:	je     0x411c1d
  411bcd:	jb     0x411c3e
  411bcf:	movsxd esp,DWORD PTR [rbp+0x73]
  411bd2:	jae    0x411c1d
  411bd4:	fs add dl,dl
  411bd7:	add    DWORD PTR [rdi+0x65],eax
  411bda:	je     0x411c1f
  411bdc:	jne    0x411c50
  411bde:	jb     0x411c45
  411be0:	outs   dx,BYTE PTR ds:[rsi]
  411be1:	je     0x411c37
  411be3:	push   0x64616572
  411be8:	rex.WB
  411be9:	add    BYTE PTR fs:[rax],al
  411bec:	adc    BYTE PTR [rdx],al
  411bee:	rex.RXB
  411bef:	gs je  0x411c3e
  411bf2:	(bad)  
  411bf3:	jae    0x411c69
  411bf5:	rex.RB jb 0x411c6a
  411bf8:	outs   dx,DWORD PTR ds:[rsi]
  411bf9:	jb     0x411bfb
  411bfb:	add    BYTE PTR [rbx+0x2],dh
  411bfe:	rex.RXB
  411bff:	gs je  0x411c55
  411c02:	je     0x411c65
  411c04:	jb     0x411c7a
  411c06:	jne    0x411c78
  411c08:	rex.WB outs dx,BYTE PTR ds:[rsi]
  411c0a:	outs   dx,WORD PTR ds:[rsi]
  411c0c:	add    BYTE PTR [r10+0x74654702],cl
  411c13:	push   rbx
  411c14:	jns    0x411c89
  411c16:	je     0x411c7d
  411c18:	ins    DWORD PTR es:[rdi],dx
  411c19:	push   rsp
  411c1a:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
  411c21:	ins    BYTE PTR es:[rdi],dx
  411c22:	gs push rsp
  411c24:	imul   ebp,DWORD PTR [rbp+0x65],0x4702a500
  411c2b:	gs je  0x411c82
  411c2e:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
  411c35:	je     0x411c37
  411c37:	add    cl,bh
  411c39:	add    cl,BYTE PTR [rcx+0x6e]
  411c3c:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
  411c44:	rex.XB jb 0x411cb0
  411c47:	je     0x411cb2
  411c49:	movsxd esp,DWORD PTR [rcx+0x6c]
  411c4c:	push   rbx
  411c4d:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  411c52:	outs   dx,BYTE PTR ds:[rsi]
  411c53:	add    BYTE PTR [rbx+0x3],cl
  411c56:	rex.WR
  411c57:	gs (bad) 
  411c59:	jbe    0x411cc0
  411c5b:	rex.XB jb 0x411cc7
  411c5e:	je     0x411cc9
  411c60:	movsxd esp,DWORD PTR [rcx+0x6c]
  411c63:	push   rbx
  411c64:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  411c69:	outs   dx,BYTE PTR ds:[rsi]
  411c6a:	add    BYTE PTR [rax],al
  411c6c:	mov    ebx,0x65755103
  411c71:	jb     0x411cec
  411c73:	push   rax
  411c74:	gs jb  0x411cdd
  411c77:	outs   dx,DWORD PTR ds:[rsi]
  411c78:	jb     0x411ce7
  411c7a:	(bad)  
  411c7b:	outs   dx,BYTE PTR ds:[rsi]
  411c7c:	movsxd esp,DWORD PTR [rbp+0x43]
  411c7f:	outs   dx,DWORD PTR ds:[rsi]
  411c80:	jne    0x411cf0
  411c82:	je     0x411ce9
  411c84:	jb     0x411c86
  411c86:	add    DWORD PTR [rdx+rdx*2],eax
  411c89:	je     0x411cf7
  411c8b:	rex.B
  411c8c:	fs fs rex.RX jne 0x411cff
  411c91:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  411c95:	outs   dx,BYTE PTR ds:[rsi]
  411c96:	push   rsp
  411c97:	(bad)  
  411c98:	(bad)  
  411c99:	ins    BYTE PTR es:[rdi],dx
  411c9a:	add    BYTE PTR gs:[rdx],al
  411c9d:	add    al,0x52
  411c9f:	je     0x411d0d
  411ca1:	rex.XB (bad) 
  411ca3:	jo     0x411d19
  411ca5:	jne    0x411d19
  411ca7:	rex.XB outs dx,DWORD PTR gs:[rsi]
  411caa:	outs   dx,BYTE PTR ds:[rsi]
  411cab:	je     0x411d12
  411cad:	js     0x411d23
  411caf:	add    BYTE PTR [rcx],cl
  411cb1:	add    al,0x52
  411cb3:	je     0x411d21
  411cb5:	rex.WR outs dx,DWORD PTR ds:[rsi]
  411cb7:	outs   dx,DWORD PTR ds:[rsi]
  411cb8:	imul   esi,DWORD PTR [rbp+0x70],0x46
  411cbc:	jne    0x411d2c
  411cbe:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  411cc2:	outs   dx,BYTE PTR ds:[rsi]
  411cc3:	rex.RB outs dx,BYTE PTR ds:[rsi]
  411cc5:	je     0x411d39
  411cc7:	jns    0x411cc9
  411cc9:	add    BYTE PTR [rax],dl
  411ccb:	add    al,0x52
  411ccd:	je     0x411d3b
  411ccf:	push   rsi
  411cd0:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
  411cd7:	outs   dx,BYTE PTR ds:[rsi]
  411cd8:	ja     0x411d43
  411cda:	outs   dx,BYTE PTR ds:[rsi]
  411cdb:	add    BYTE PTR fs:[rax],al
  411cde:	lahf   
  411cdf:	add    al,0x53
  411ce1:	gs je  0x411d39
  411ce4:	outs   dx,BYTE PTR ds:[rsi]
  411ce5:	push   0x6c646e61
  411cea:	gs fs rex.RB js 0x411d52
  411cef:	gs jo  0x411d66
  411cf2:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  411cf9:	gs jb  0x411cfc
  411cfc:	lods   al,BYTE PTR ds:[rsi]
  411cfd:	add    al,0x53
  411cff:	ins    BYTE PTR es:[rdi],dx
  411d00:	gs gs jo 0x411d04
  411d04:	mov    edx,0x72655404
  411d09:	ins    DWORD PTR es:[rdi],dx
  411d0a:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
  411d11:	outs   dx,DWORD PTR ds:[rsi]
  411d12:	movsxd esp,DWORD PTR [rbp+0x73]
  411d15:	jae    0x411d17
  411d17:	add    cl,al
  411d19:	add    al,0x54
  411d1b:	ins    BYTE PTR es:[rdi],dx
  411d1c:	jae    0x411d65
  411d1e:	gs je  0x411d77
  411d21:	(bad)  
  411d22:	ins    BYTE PTR es:[rdi],dx
  411d23:	jne    0x411d8a
  411d25:	add    dh,cl
  411d27:	add    al,0x55
  411d29:	outs   dx,BYTE PTR ds:[rsi]
  411d2a:	push   0x6c646e61
  411d2f:	gs fs rex.RB js 0x411d97
  411d34:	gs jo  0x411dab
  411d37:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  411d3e:	gs jb  0x411d41
  411d41:	add    ah,ch
  411d43:	add    al,0x56
  411d45:	imul   esi,DWORD PTR [rdx+0x74],0x506c6175
  411d4c:	jb     0x411dbd
  411d4e:	je     0x411db5
  411d50:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  411d54:	out    dx,al
  411d55:	add    al,0x56
  411d57:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  411d5e:	jne    0x411dc5
  411d60:	jb     0x411ddb
  411d62:	add    BYTE PTR [rax],al
  411d64:	(bad)  
  411d65:	add    BYTE PTR [rdi+0x5f],bl
  411d68:	rex.XB pop r15
  411d6a:	jae    0x411ddc
  411d6c:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  411d70:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
  411d77:	ins    BYTE PTR es:[rdi],dx
  411d78:	gs jb  0x411d7b
  411d7b:	add    BYTE PTR [rsi+0x0],cl
  411d7e:	pop    rdi
  411d7f:	pop    rdi
  411d80:	fs ins BYTE PTR es:[rdi],dx
  411d82:	ins    BYTE PTR es:[rdi],dx
  411d83:	outs   dx,DWORD PTR ds:[rsi]
  411d84:	outs   dx,BYTE PTR ds:[rsi]
  411d85:	gs js  0x411df1
  411d88:	je     0x411d8a
  411d8a:	push   rcx
  411d8b:	add    BYTE PTR [rdi+0x5f],bl
  411d8e:	addr32 gs je 0x411dff
  411d92:	(bad)  
  411d93:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
  411d9a:	push   rdx
  411d9b:	add    BYTE PTR [rdi+0x5f],bl
  411d9e:	imul   ebp,DWORD PTR [rsi+0x69],0x766e6574
  411da5:	add    BYTE PTR [rbx+0x0],dl
  411da8:	pop    rdi
  411da9:	pop    rdi
  411daa:	imul   ebp,DWORD PTR [rdi+0x62],0x6e75665f
  411db1:	movsxd eax,DWORD PTR [rax]
  411db3:	add    BYTE PTR [rdx+0x0],bl
  411db6:	pop    rdi
  411db7:	pop    rdi
  411db8:	ins    BYTE PTR es:[rdi],dx
  411db9:	movsxd ebp,DWORD PTR [rdi+0x6e]
  411dbc:	jbe    0x411e1d
  411dbe:	imul   ebp,DWORD PTR [rsi+0x69],0x60000074
  411dc5:	add    BYTE PTR [rdi+0x5f],bl
  411dc8:	jae    0x411e2f
  411dca:	je     0x411e2b
  411dcc:	(bad)  
  411dcd:	jo     0x411e3f
  411dcf:	pop    rdi
  411dd0:	je     0x411e4b
  411dd2:	jo     0x411e39
  411dd4:	add    BYTE PTR [rax],al
  411dd6:	(bad)  
  411dd7:	add    BYTE PTR [rdi+0x5f],bl
  411dda:	jae    0x411e41
  411ddc:	je     0x411e53
  411dde:	jae    0x411e45
  411de0:	jb     0x411e4f
  411de2:	(bad)  
  411de3:	je     0x411e4d
  411de5:	gs jb  0x411e5a
  411de8:	add    BYTE PTR [rax],al
  411dea:	jno    0x411dec
  411dec:	pop    rdi
  411ded:	(bad)  
  411dee:	movsxd ebp,DWORD PTR [rbp+0x64]
  411df1:	ins    BYTE PTR es:[rdi],dx
  411df2:	outs   dx,BYTE PTR ds:[rsi]
  411df3:	add    BYTE PTR [rax+0x0],bh
  411df6:	pop    rdi
  411df7:	(bad)  
  411df8:	ins    DWORD PTR es:[rdi],dx
  411df9:	jae    0x411e62
  411dfb:	pop    rdi
  411dfc:	gs js  0x411e68
  411dff:	je     0x411e01
  411e01:	add    BYTE PTR [rdx+0x65635f00],cl
  411e07:	js     0x411e72
  411e09:	je     0x411e0b
  411e0b:	add    BYTE PTR [rdx+0x72655f00],bh
  411e11:	jb     0x411e81
  411e13:	outs   dx,DWORD PTR ds:[rsi]
  411e14:	add    BYTE PTR [rax],al
  411e16:	fiadd  DWORD PTR [rax]
  411e18:	pop    rdi
  411e19:	ins    WORD PTR es:[rdi],dx
  411e1b:	outs   dx,DWORD PTR ds:[rsi]
  411e1c:	fs add BYTE PTR gs:[rax],al
  411e20:	sbb    al,BYTE PTR [rcx]
  411e22:	pop    rdi
  411e23:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
  411e2a:	ins    DWORD PTR es:[rdi],dx
  411e2b:	add    BYTE PTR [rax+0x6f6c5f01],al
  411e31:	movsxd ebp,DWORD PTR [rbx+0x0]
  411e34:	and    eax,0x6e6f5f02
  411e39:	gs js  0x411ea5
  411e3c:	je     0x411e3e
  411e3e:	(bad)
  411e42:	outs   dx,BYTE PTR ds:[rsi]
  411e43:	ins    BYTE PTR es:[rdi],dx
  411e44:	outs   dx,DWORD PTR ds:[rsi]
  411e45:	movsxd ebp,DWORD PTR [rbx+0x0]
  411e48:	pop    rax
  411e49:	add    ebx,DWORD PTR [rdi+0x77]
  411e4c:	jb     0x411eb7
  411e4e:	je     0x411eb5
  411e50:	add    BYTE PTR [rax],al
  411e52:	jg     0x411e57
  411e54:	(bad)  
  411e55:	(bad)  
  411e56:	outs   dx,DWORD PTR ds:[rsi]
  411e57:	jb     0x411ecd
  411e59:	add    BYTE PTR [rax+0x6c616303],dl
  411e5f:	ins    BYTE PTR es:[rdi],dx
  411e60:	outs   dx,DWORD PTR ds:[rsi]
  411e61:	movsxd eax,DWORD PTR [rax]
  411e63:	add    BYTE PTR [rbp+0x69786503],bl
  411e69:	je     0x411e6b
  411e6b:	add    BYTE PTR [rbx+rax*1+0x756c6666],ah
  411e72:	jae    0x411edc
  411e74:	add    BYTE PTR [rax],al
  411e76:	mov    al,0x3
  411e78:	data16 jo 0x411eed
  411e7b:	imul   ebp,DWORD PTR [rsi+0x74],0x3b70066
  411e82:	data16 jb 0x411eea
  411e85:	add    BYTE PTR gs:[rax],al
  411e88:	ret    0x6603
  411e8b:	ja     0x411eff
  411e8d:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x6903d400
  411e95:	jae    0x411f03
  411e97:	outs   dx,DWORD PTR ds:[rsi]
  411e98:	ja     0x411eff
  411e9a:	jb     0x411e9c
  411e9c:	xlat   BYTE PTR ds:[rbx]
  411e9d:	add    ebp,DWORD PTR [rcx+0x73]
  411ea0:	jae    0x411f12
  411ea2:	(bad)  
  411ea3:	movsxd esp,DWORD PTR [rbp+0x0]
  411ea6:	fadd   DWORD PTR [rbx]
  411ea8:	imul   esi,DWORD PTR [rbx+0x75],0x72657070
  411eaf:	add    dl,ch
  411eb1:	add    ebp,DWORD PTR [rdi+rbp*2+0x63]
  411eb5:	(bad)  
  411eb6:	ins    BYTE PTR es:[rdi],dx
  411eb7:	movsxd ebp,DWORD PTR gs:[rdi+0x6e]
  411ebb:	jbe    0x411ebd
  411ebd:	add    al,dh
  411ebf:	add    ebp,DWORD PTR [rbp+0x61]
  411ec2:	ins    BYTE PTR es:[rdi],dx
  411ec3:	ins    BYTE PTR es:[rdi],dx
  411ec4:	outs   dx,DWORD PTR ds:[rsi]
  411ec5:	movsxd eax,DWORD PTR [rax]
  411ec7:	add    al,bh
  411ec9:	add    ebp,DWORD PTR [rbp+0x65]
  411ecc:	ins    DWORD PTR es:[rdi],dx
  411ecd:	movsxd esi,DWORD PTR [rax+0x79]
  411ed0:	add    BYTE PTR [rax],al
  411ed2:	add    DWORD PTR [rax+rsi*2],eax
  411ed5:	jb     0x411f40
  411ed7:	outs   dx,BYTE PTR ds:[rsi]
  411ed8:	je     0x411f40
  411eda:	add    BYTE PTR [rax],al
  411edc:	add    al,0x4
  411ede:	jo     0x411f55
  411ee0:	je     0x411f45
  411ee2:	push   0x5007261
  411ee7:	add    al,0x70
  411ee9:	jne    0x411f5f
  411eeb:	jae    0x411eed
  411eed:	add    BYTE PTR [rsi],dl
  411eef:	add    al,0x73
  411ef1:	imul   esp,DWORD PTR [rdi+0x6e],0x6c61
  411ef8:	and    eax,DWORD PTR [rbx+rsi*2]
  411efb:	je     0x411f6f
  411efd:	movsxd ebp,DWORD PTR [rax+0x72]
  411f00:	add    BYTE PTR [rax],al
  411f02:	and    al,0x4
  411f04:	jae    0x411f7a
  411f06:	jb     0x411f6b
  411f08:	ins    DWORD PTR es:[rdi],dx
  411f09:	jo     0x411f0b
  411f0b:	add    BYTE PTR [rbx],ch
  411f0d:	add    al,0x73
  411f0f:	je     0x411f83
  411f11:	ins    BYTE PTR es:[rdi],dx
  411f12:	outs   dx,BYTE PTR gs:[rsi]
  411f14:	add    BYTE PTR [rax],al
  411f16:	cs add al,0x73
  411f19:	je     0x411f8d
  411f1b:	outs   dx,BYTE PTR ds:[rsi]
  411f1c:	movsxd ebp,DWORD PTR [rbp+0x70]
  411f1f:	add    BYTE PTR [rdx],dh
  411f21:	add    al,0x73
  411f23:	je     0x411f97
  411f25:	jb     0x411f8a
  411f27:	push   0x4340072
  411f2c:	jae    0x411fa2
  411f2e:	jb     0x411fa3
  411f30:	je     0x411fa4
  411f32:	add    BYTE PTR [rax],al
  411f34:	ss add al,0x73
  411f37:	je     0x411fab
  411f39:	je     0x411faa
  411f3b:	imul   eax,DWORD PTR [rax],0x0
  411f3e:	cmp    BYTE PTR [rbx+rsi*2],al
  411f41:	je     0x411fb5
  411f43:	je     0x411fb4
  411f45:	ins    BYTE PTR es:[rdi],dx
  411f46:	add    BYTE PTR [rax],al
  411f48:	cmp    DWORD PTR [rbx+rsi*2],eax
  411f4b:	je     0x411fbf
  411f4d:	je     0x411fbe
  411f4f:	jne    0x411fbd
  411f51:	add    BYTE PTR [rsi+0x4],cl
  411f54:	jbe    0x411fbc
  411f56:	jo     0x411fca
  411f58:	imul   ebp,DWORD PTR [rsi+0x74],0xbe000066
  411f5f:	add    al,0x5f
  411f61:	jae    0x411fd7
  411f63:	jb     0x411fc9
  411f65:	jne    0x411fd7
  411f67:	add    BYTE PTR [rax],al
  411f69:	adc    BYTE PTR [rcx],al
  411f6b:	add    BYTE PTR [rax],al
  411f6d:	adc    BYTE PTR [rcx],al
  411f6f:	add    BYTE PTR [rax],al
  411f71:	adc    BYTE PTR [rcx],al
  411f73:	add    BYTE PTR [rax],al
  411f75:	adc    BYTE PTR [rcx],al
  411f77:	add    BYTE PTR [rax],al
  411f79:	adc    BYTE PTR [rcx],al
  411f7b:	add    BYTE PTR [rax],al
  411f7d:	adc    BYTE PTR [rcx],al
  411f7f:	add    BYTE PTR [rax],al
  411f81:	adc    BYTE PTR [rcx],al
  411f83:	add    BYTE PTR [rax],al
  411f85:	adc    BYTE PTR [rcx],al
  411f87:	add    BYTE PTR [rax],al
  411f89:	adc    BYTE PTR [rcx],al
  411f8b:	add    BYTE PTR [rax],al
  411f8d:	adc    BYTE PTR [rcx],al
  411f8f:	add    BYTE PTR [rax],al
  411f91:	adc    BYTE PTR [rcx],al
  411f93:	add    BYTE PTR [rax],al
  411f95:	adc    BYTE PTR [rcx],al
  411f97:	add    BYTE PTR [rax],al
  411f99:	adc    BYTE PTR [rcx],al
  411f9b:	add    BYTE PTR [rax],al
  411f9d:	adc    BYTE PTR [rcx],al
  411f9f:	add    BYTE PTR [rax],al
  411fa1:	adc    BYTE PTR [rcx],al
  411fa3:	add    BYTE PTR [rax],al
  411fa5:	adc    BYTE PTR [rcx],al
  411fa7:	add    BYTE PTR [rax],al
  411fa9:	adc    BYTE PTR [rcx],al
  411fab:	add    BYTE PTR [rax],al
  411fad:	adc    BYTE PTR [rcx],al
  411faf:	add    BYTE PTR [rax],al
  411fb1:	adc    BYTE PTR [rcx],al
  411fb3:	add    BYTE PTR [rax],al
  411fb5:	adc    BYTE PTR [rcx],al
  411fb7:	add    BYTE PTR [rax],al
  411fb9:	adc    BYTE PTR [rcx],al
  411fbb:	add    BYTE PTR [rax],al
  411fbd:	adc    BYTE PTR [rcx],al
  411fbf:	add    BYTE PTR [rax],al
  411fc1:	adc    BYTE PTR [rcx],al
  411fc3:	add    BYTE PTR [rax],al
  411fc5:	adc    BYTE PTR [rcx],al
  411fc7:	add    BYTE PTR [rax],al
  411fc9:	adc    BYTE PTR [rcx],al
  411fcb:	add    BYTE PTR [rax],al
  411fcd:	adc    BYTE PTR [rcx],al
  411fcf:	add    BYTE PTR [rax],al
  411fd1:	adc    BYTE PTR [rcx],al
  411fd3:	add    BYTE PTR [rax],al
  411fd5:	adc    BYTE PTR [rcx],al
  411fd7:	add    BYTE PTR [rax],al
  411fd9:	adc    BYTE PTR [rcx],al
  411fdb:	add    BYTE PTR [rax],al
  411fdd:	adc    BYTE PTR [rcx],al
  411fdf:	add    BYTE PTR [rax],al
  411fe1:	adc    BYTE PTR [rcx],al
  411fe3:	add    BYTE PTR [rax],al
  411fe5:	adc    BYTE PTR [rcx],al
  411fe7:	add    BYTE PTR [rax],al
  411fe9:	adc    BYTE PTR [rcx],al
  411feb:	add    BYTE PTR [rax],al
  411fed:	adc    BYTE PTR [rcx],al
  411fef:	add    BYTE PTR [rax],al
  411ff1:	adc    BYTE PTR [rcx],al
  411ff3:	add    BYTE PTR [rax],al
  411ff5:	adc    BYTE PTR [rcx],al
  411ff7:	add    BYTE PTR [rax],al
  411ff9:	adc    BYTE PTR [rcx],al
  411ffb:	add    BYTE PTR [rax],al
  411ffd:	adc    BYTE PTR [rcx],al
  411fff:	add    BYTE PTR [rax],al
  412001:	adc    BYTE PTR [rcx],al
  412003:	add    BYTE PTR [rcx+rbp*2+0x62],ch
  412007:	fs (bad) 
  412009:	jne    0x41207e
  41200b:	sub    eax,0x2e332d31
  412010:	fs ins BYTE PTR es:[rdi],dx
  412012:	ins    BYTE PTR es:[rdi],dx
  412013:	add    BYTE PTR [rax+rdx*1],dl
  412016:	add    DWORD PTR [rax],eax
  412018:	adc    al,0x10
  41201a:	add    DWORD PTR [rax],eax
  41201c:	adc    al,0x10
  41201e:	add    DWORD PTR [rax],eax
  412020:	adc    al,0x10
  412022:	add    DWORD PTR [rax],eax
  412024:	adc    al,0x10
  412026:	add    DWORD PTR [rax],eax
  412028:	adc    al,0x10
  41202a:	add    DWORD PTR [rax],eax
  41202c:	adc    al,0x10
  41202e:	add    DWORD PTR [rax],eax
  412030:	adc    al,0x10
  412032:	add    DWORD PTR [rax],eax
  412034:	adc    al,0x10
  412036:	add    DWORD PTR [rax],eax
  412038:	adc    al,0x10
  41203a:	add    DWORD PTR [rax],eax
  41203c:	adc    al,0x10
  41203e:	add    DWORD PTR [rax],eax
  412040:	adc    al,0x10
  412042:	add    DWORD PTR [rax],eax
  412044:	adc    al,0x10
  412046:	add    DWORD PTR [rax],eax
  412048:	adc    al,0x10
  41204a:	add    DWORD PTR [rax],eax
  41204c:	adc    al,0x10
  41204e:	add    DWORD PTR [rax],eax
  412050:	adc    al,0x10
  412052:	add    DWORD PTR [rax],eax
  412054:	adc    al,0x10
  412056:	add    DWORD PTR [rax],eax
  412058:	adc    al,0x10
  41205a:	add    DWORD PTR [rax],eax
  41205c:	adc    al,0x10
  41205e:	add    DWORD PTR [rax],eax
  412060:	adc    al,0x10
  412062:	add    DWORD PTR [rax],eax
  412064:	adc    al,0x10
  412066:	add    DWORD PTR [rax],eax
  412068:	adc    al,0x10
  41206a:	add    DWORD PTR [rax],eax
  41206c:	adc    al,0x10
  41206e:	add    DWORD PTR [rax],eax
  412070:	rex.WXB
  412071:	rex.RB push r10
  412073:	rex.WRX
  412074:	rex.RB
  412075:	xor    r14,QWORD PTR [rdx]
  412078:	cs fs ins BYTE PTR es:[rdi],dx
  41207b:	ins    BYTE PTR es:[rdi],dx
  41207c:	add    BYTE PTR [rax],al
  41207e:	add    BYTE PTR [rax],al
  412080:	sub    BYTE PTR [rax],dl
  412082:	add    DWORD PTR [rax],eax
  412084:	sub    BYTE PTR [rax],dl
  412086:	add    DWORD PTR [rax],eax
  412088:	sub    BYTE PTR [rax],dl
  41208a:	add    DWORD PTR [rax],eax
  41208c:	sub    BYTE PTR [rax],dl
  41208e:	add    DWORD PTR [rax],eax
  412090:	sub    BYTE PTR [rax],dl
  412092:	add    DWORD PTR [rax],eax
  412094:	sub    BYTE PTR [rax],dl
  412096:	add    DWORD PTR [rax],eax
  412098:	sub    BYTE PTR [rax],dl
  41209a:	add    DWORD PTR [rax],eax
  41209c:	sub    BYTE PTR [rax],dl
  41209e:	add    DWORD PTR [rax],eax
  4120a0:	sub    BYTE PTR [rax],dl
  4120a2:	add    DWORD PTR [rax],eax
  4120a4:	sub    BYTE PTR [rax],dl
  4120a6:	add    DWORD PTR [rax],eax
  4120a8:	sub    BYTE PTR [rax],dl
  4120aa:	add    DWORD PTR [rax],eax
  4120ac:	sub    BYTE PTR [rax],dl
  4120ae:	add    DWORD PTR [rax],eax
  4120b0:	sub    BYTE PTR [rax],dl
  4120b2:	add    DWORD PTR [rax],eax
  4120b4:	sub    BYTE PTR [rax],dl
  4120b6:	add    DWORD PTR [rax],eax
  4120b8:	sub    BYTE PTR [rax],dl
  4120ba:	add    DWORD PTR [rax],eax
  4120bc:	sub    BYTE PTR [rax],dl
  4120be:	add    DWORD PTR [rax],eax
  4120c0:	sub    BYTE PTR [rax],dl
  4120c2:	add    DWORD PTR [rax],eax
  4120c4:	sub    BYTE PTR [rax],dl
  4120c6:	add    DWORD PTR [rax],eax
  4120c8:	sub    BYTE PTR [rax],dl
  4120ca:	add    DWORD PTR [rax],eax
  4120cc:	sub    BYTE PTR [rax],dl
  4120ce:	add    DWORD PTR [rax],eax
  4120d0:	sub    BYTE PTR [rax],dl
  4120d2:	add    DWORD PTR [rax],eax
  4120d4:	sub    BYTE PTR [rax],dl
  4120d6:	add    DWORD PTR [rax],eax
  4120d8:	sub    BYTE PTR [rax],dl
  4120da:	add    DWORD PTR [rax],eax
  4120dc:	sub    BYTE PTR [rax],dl
  4120de:	add    DWORD PTR [rax],eax
  4120e0:	sub    BYTE PTR [rax],dl
  4120e2:	add    DWORD PTR [rax],eax
  4120e4:	sub    BYTE PTR [rax],dl
  4120e6:	add    DWORD PTR [rax],eax
  4120e8:	sub    BYTE PTR [rax],dl
  4120ea:	add    DWORD PTR [rax],eax
  4120ec:	sub    BYTE PTR [rax],dl
  4120ee:	add    DWORD PTR [rax],eax
  4120f0:	sub    BYTE PTR [rax],dl
  4120f2:	add    DWORD PTR [rax],eax
  4120f4:	sub    BYTE PTR [rax],dl
  4120f6:	add    DWORD PTR [rax],eax
  4120f8:	sub    BYTE PTR [rax],dl
  4120fa:	add    DWORD PTR [rax],eax
  4120fc:	sub    BYTE PTR [rax],dl
  4120fe:	add    DWORD PTR [rax],eax
  412100:	sub    BYTE PTR [rax],dl
  412102:	add    DWORD PTR [rax],eax
  412104:	sub    BYTE PTR [rax],dl
  412106:	add    DWORD PTR [rax],eax
  412108:	sub    BYTE PTR [rax],dl
  41210a:	add    DWORD PTR [rax],eax
  41210c:	sub    BYTE PTR [rax],dl
  41210e:	add    DWORD PTR [rax],eax
  412110:	sub    BYTE PTR [rax],dl
  412112:	add    DWORD PTR [rax],eax
  412114:	sub    BYTE PTR [rax],dl
  412116:	add    DWORD PTR [rax],eax
  412118:	sub    BYTE PTR [rax],dl
  41211a:	add    DWORD PTR [rax],eax
  41211c:	sub    BYTE PTR [rax],dl
  41211e:	add    DWORD PTR [rax],eax
  412120:	sub    BYTE PTR [rax],dl
  412122:	add    DWORD PTR [rax],eax
  412124:	sub    BYTE PTR [rax],dl
  412126:	add    DWORD PTR [rax],eax
  412128:	sub    BYTE PTR [rax],dl
  41212a:	add    DWORD PTR [rax],eax
  41212c:	sub    BYTE PTR [rax],dl
  41212e:	add    DWORD PTR [rax],eax
  412130:	sub    BYTE PTR [rax],dl
  412132:	add    DWORD PTR [rax],eax
  412134:	sub    BYTE PTR [rax],dl
  412136:	add    DWORD PTR [rax],eax
  412138:	ins    DWORD PTR es:[rdi],dx
  412139:	jae    0x4121b1
  41213b:	movsxd esi,DWORD PTR [rdx+0x74]
  41213e:	cs fs ins BYTE PTR es:[rdi],dx
  412141:	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .CRT:

0000000000413000 <.CRT>:
	...
  413008:	(bad)  
  413009:	adc    DWORD PTR [rax+0x0],eax
	...
  413020:	adc    BYTE PTR [rax],dl
  413022:	add    BYTE PTR [rax],al
  413025:	add    BYTE PTR [rax],al
  413027:	add    BYTE PTR [rax+0x4039],al
	...
  41303d:	add    BYTE PTR [rax],al
  41303f:	add    BYTE PTR [rax+0x403b],dh
  413045:	add    BYTE PTR [rax],al
  413047:	add    BYTE PTR [rax+0x403b],al
	...

Disassembly of section .tls:

0000000000414000 <.tls>:
	...
  414020:	add    BYTE PTR [rax+0x41],al
  414023:	add    BYTE PTR [rax],al
  414025:	add    BYTE PTR [rax],al
  414027:	add    BYTE PTR [rax+0x40],ah
  41402a:	add    BYTE PTR [r8],al
  41402d:	add    BYTE PTR [rax],al
  41402f:	add    BYTE PTR [rsi+rsi*8+0x40],bl
  414033:	add    BYTE PTR [rax],al
  414035:	add    BYTE PTR [rax],al
  414037:	add    BYTE PTR [rax+0x30],al
  41403a:	add    BYTE PTR [r8],al
	...
