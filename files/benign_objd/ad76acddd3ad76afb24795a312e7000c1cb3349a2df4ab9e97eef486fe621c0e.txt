
ad76acddd3ad76afb24795a312e7000c1cb3349a2df4ab9e97eef486fe621c0e.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
	...
   140001008:	rex push rbx
   14000100a:	sub    rsp,0x20
   14000100e:	mov    rbx,rcx
   140001011:	call   QWORD PTR [rip+0x2051]        # 0x140003068
   140001017:	mov    r8,rbx
   14000101a:	mov    edx,0x8
   14000101f:	mov    rcx,rax
   140001022:	add    rsp,0x20
   140001026:	pop    rbx
   140001027:	rex.W jmp QWORD PTR [rip+0x209a]        # 0x1400030c8
   14000102e:	int3   
   14000102f:	int3   
   140001030:	int3   
   140001031:	int3   
   140001032:	int3   
   140001033:	int3   
   140001034:	test   rcx,rcx
   140001037:	je     0x14000105a
   140001039:	push   rbx
   14000103a:	sub    rsp,0x20
   14000103e:	mov    rbx,rcx
   140001041:	call   QWORD PTR [rip+0x2021]        # 0x140003068
   140001047:	mov    r8,rbx
   14000104a:	xor    edx,edx
   14000104c:	mov    rcx,rax
   14000104f:	call   QWORD PTR [rip+0x206b]        # 0x1400030c0
   140001055:	add    rsp,0x20
   140001059:	pop    rbx
   14000105a:	ret    
   14000105b:	int3   
   14000105c:	int3   
   14000105d:	int3   
   14000105e:	int3   
   14000105f:	int3   
   140001060:	int3   
   140001061:	int3   
   140001062:	int3   
   140001063:	int3   
   140001064:	mov    QWORD PTR [rsp+0x10],rbx
   140001069:	mov    QWORD PTR [rsp+0x18],rsi
   14000106e:	push   rdi
   14000106f:	sub    rsp,0x30
   140001073:	mov    edi,0x80004005
   140001078:	call   QWORD PTR [rip+0x1fa2]        # 0x140003020
   14000107e:	mov    rcx,rax
   140001081:	lea    rdx,[rsp+0x40]
   140001086:	call   QWORD PTR [rip+0x1fd4]        # 0x140003060
   14000108c:	test   eax,eax
   14000108e:	je     0x140001167
   140001094:	cmp    DWORD PTR [rsp+0x40],0x0
   140001099:	je     0x140001167
   14000109f:	mov    rcx,QWORD PTR [rip+0x461a]        # 0x1400056c0
   1400010a6:	cmp    rcx,QWORD PTR [rip+0x2373]        # 0x140003420
   1400010ad:	mov    rax,QWORD PTR [rip+0x4614]        # 0x1400056c8
   1400010b4:	jne    0x1400010bf
   1400010b6:	cmp    rax,QWORD PTR [rip+0x236b]        # 0x140003428
   1400010bd:	je     0x1400010d9
   1400010bf:	cmp    rcx,QWORD PTR [rip+0x234a]        # 0x140003410
   1400010c6:	jne    0x140001167
   1400010cc:	cmp    rax,QWORD PTR [rip+0x2345]        # 0x140003418
   1400010d3:	jne    0x140001167
   1400010d9:	xor    edi,edi
   1400010db:	lea    ebx,[rdi+0x1]
   1400010de:	mov    eax,ebx
   1400010e0:	xchg   DWORD PTR [rip+0x4502],eax        # 0x1400055e8
   1400010e6:	test   eax,eax
   1400010e8:	jne    0x140001167
   1400010ea:	lea    ecx,[rdi+0x10]
   1400010ed:	call   0x140001008
   1400010f2:	mov    rsi,rax
   1400010f5:	test   rax,rax
   1400010f8:	je     0x140001117
   1400010fa:	lea    rax,[rip+0x222f]        # 0x140003330
   140001101:	mov    DWORD PTR [rsi+0x8],ebx
   140001104:	mov    QWORD PTR [rsi],rax
   140001107:	mov    DWORD PTR [rsi+0xc],0x80070005
   14000110e:	lock add DWORD PTR [rip+0x44df],ebx        # 0x1400055f4
   140001115:	jmp    0x140001119
   140001117:	xor    esi,esi
   140001119:	mov    rax,rsi
   14000111c:	neg    rax
   14000111f:	sbb    edi,edi
   140001121:	not    edi
   140001123:	and    edi,0x8007000e
   140001129:	jl     0x140001167
   14000112b:	lea    rax,[rip+0x44be]        # 0x1400055f0
   140001132:	mov    r9d,ebx
   140001135:	mov    r8d,0x4
   14000113b:	mov    QWORD PTR [rsp+0x20],rax
   140001140:	mov    rdx,rsi
   140001143:	lea    rcx,[rip+0x4576]        # 0x1400056c0
   14000114a:	call   QWORD PTR [rip+0x2118]        # 0x140003268
   140001150:	mov    rdx,QWORD PTR [rsi]
   140001153:	mov    edi,eax
   140001155:	mov    rbx,QWORD PTR [rdx+0x10]
   140001159:	mov    rcx,rbx
   14000115c:	call   QWORD PTR [rip+0x213e]        # 0x1400032a0
   140001162:	mov    rcx,rsi
   140001165:	call   rbx
   140001167:	mov    rbx,QWORD PTR [rsp+0x48]
   14000116c:	mov    eax,edi
   14000116e:	mov    rsi,QWORD PTR [rsp+0x50]
   140001173:	add    rsp,0x30
   140001177:	pop    rdi
   140001178:	ret    
   140001179:	int3   
   14000117a:	int3   
   14000117b:	int3   
   14000117c:	int3   
   14000117d:	int3   
   14000117e:	int3   
   14000117f:	int3   
   140001180:	rex push rbx
   140001182:	sub    rsp,0x20
   140001186:	xor    eax,eax
   140001188:	xchg   DWORD PTR [rip+0x445a],eax        # 0x1400055e8
   14000118e:	cmp    eax,0x1
   140001191:	jne    0x1400011b5
   140001193:	mov    ecx,DWORD PTR [rip+0x4457]        # 0x1400055f0
   140001199:	call   QWORD PTR [rip+0x20d1]        # 0x140003270
   14000119f:	mov    rcx,QWORD PTR [rip+0x443a]        # 0x1400055e0
   1400011a6:	mov    ebx,eax
   1400011a8:	test   rcx,rcx
   1400011ab:	je     0x1400011b7
   1400011ad:	call   QWORD PTR [rip+0x1e7d]        # 0x140003030
   1400011b3:	jmp    0x1400011b7
   1400011b5:	xor    ebx,ebx
   1400011b7:	mov    eax,ebx
   1400011b9:	add    rsp,0x20
   1400011bd:	pop    rbx
   1400011be:	ret    
   1400011bf:	int3   
   1400011c0:	int3   
   1400011c1:	int3   
   1400011c2:	int3   
   1400011c3:	int3   
   1400011c4:	int3   
   1400011c5:	int3   
   1400011c6:	int3   
   1400011c7:	int3   
   1400011c8:	int3   
   1400011c9:	int3   
   1400011ca:	int3   
   1400011cb:	int3   
   1400011cc:	int3   
   1400011cd:	int3   
   1400011ce:	int3   
   1400011cf:	int3   
   1400011d0:	lock inc DWORD PTR [rcx+0x8]
   1400011d4:	mov    eax,DWORD PTR [rcx+0x8]
   1400011d7:	ret    
   1400011d8:	int3   
   1400011d9:	int3   
   1400011da:	int3   
   1400011db:	int3   
   1400011dc:	int3   
   1400011dd:	int3   
   1400011de:	int3   
   1400011df:	int3   
   1400011e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400011e5:	push   rdi
   1400011e6:	sub    rsp,0x20
   1400011ea:	mov    rbx,rcx
   1400011ed:	or     ecx,0xffffffff
   1400011f0:	mov    edi,ecx
   1400011f2:	lock xadd DWORD PTR [rbx+0x8],edi
   1400011f7:	add    edi,ecx
   1400011f9:	jne    0x14000123a
   1400011fb:	test   rbx,rbx
   1400011fe:	je     0x14000123a
   140001200:	lea    rax,[rip+0x2129]        # 0x140003330
   140001207:	mov    QWORD PTR [rbx],rax
   14000120a:	mov    eax,ecx
   14000120c:	lock xadd DWORD PTR [rip+0x43e0],eax        # 0x1400055f4
   140001214:	add    eax,ecx
   140001216:	jne    0x140001232
   140001218:	mov    rcx,QWORD PTR [rip+0x43d9]        # 0x1400055f8
   14000121f:	test   rcx,rcx
   140001222:	je     0x14000122a
   140001224:	call   QWORD PTR [rip+0x1e86]        # 0x1400030b0
   14000122a:	xor    ecx,ecx
   14000122c:	call   QWORD PTR [rip+0x1f16]        # 0x140003148
   140001232:	mov    rcx,rbx
   140001235:	call   0x140001034
   14000123a:	mov    eax,edi
   14000123c:	mov    rbx,QWORD PTR [rsp+0x30]
   140001241:	add    rsp,0x20
   140001245:	pop    rdi
   140001246:	ret    
   140001247:	int3   
   140001248:	int3   
   140001249:	int3   
   14000124a:	int3   
   14000124b:	int3   
   14000124c:	int3   
   14000124d:	int3   
   14000124e:	int3   
   14000124f:	int3   
   140001250:	sub    rsp,0x28
   140001254:	cmp    edx,0x1
   140001257:	jne    0x140001260
   140001259:	call   0x140001608
   14000125e:	jmp    0x140001265
   140001260:	call   0x1400015a0
   140001265:	xor    eax,eax
   140001267:	add    rsp,0x28
   14000126b:	ret    
   14000126c:	int3   
   14000126d:	int3   
   14000126e:	int3   
   14000126f:	int3   
   140001270:	int3   
   140001271:	int3   
   140001272:	int3   
   140001273:	int3   
   140001274:	int3   
   140001275:	int3   
   140001276:	int3   
   140001277:	int3   
   140001278:	int3   
   140001279:	int3   
   14000127a:	int3   
   14000127b:	int3   
   14000127c:	int3   
   14000127d:	int3   
   14000127e:	int3   
   14000127f:	int3   
   140001280:	mov    QWORD PTR [rsp+0x8],rbx
   140001285:	push   rdi
   140001286:	sub    rsp,0x20
   14000128a:	mov    rax,QWORD PTR [rdx]
   14000128d:	mov    rdi,rcx
   140001290:	cmp    rax,QWORD PTR [rip+0x2199]        # 0x140003430
   140001297:	jne    0x1400012a6
   140001299:	mov    rax,QWORD PTR [rdx+0x8]
   14000129d:	cmp    rax,QWORD PTR [rip+0x2194]        # 0x140003438
   1400012a4:	je     0x1400012bf
   1400012a6:	mov    rax,QWORD PTR [rdx]
   1400012a9:	cmp    rax,QWORD PTR [rip+0x2190]        # 0x140003440
   1400012b0:	jne    0x1400012db
   1400012b2:	mov    rax,QWORD PTR [rdx+0x8]
   1400012b6:	cmp    rax,QWORD PTR [rip+0x218b]        # 0x140003448
   1400012bd:	jne    0x1400012db
   1400012bf:	mov    QWORD PTR [r8],rcx
   1400012c2:	mov    rax,QWORD PTR [rcx]
   1400012c5:	mov    rbx,QWORD PTR [rax+0x8]
   1400012c9:	mov    rcx,rbx
   1400012cc:	call   QWORD PTR [rip+0x1fce]        # 0x1400032a0
   1400012d2:	mov    rcx,rdi
   1400012d5:	call   rbx
   1400012d7:	xor    eax,eax
   1400012d9:	jmp    0x1400012e5
   1400012db:	xor    eax,eax
   1400012dd:	mov    QWORD PTR [r8],rax
   1400012e0:	mov    eax,0x80004002
   1400012e5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400012ea:	add    rsp,0x20
   1400012ee:	pop    rdi
   1400012ef:	ret    
   1400012f0:	int3   
   1400012f1:	int3   
   1400012f2:	int3   
   1400012f3:	int3   
   1400012f4:	int3   
   1400012f5:	int3   
   1400012f6:	int3   
   1400012f7:	int3   
   1400012f8:	int3   
   1400012f9:	int3   
   1400012fa:	int3   
   1400012fb:	int3   
   1400012fc:	int3   
   1400012fd:	int3   
   1400012fe:	int3   
   1400012ff:	int3   
   140001300:	rex push rbx
   140001302:	sub    rsp,0x30
   140001306:	mov    rcx,QWORD PTR [rip+0x43b3]        # 0x1400056c0
   14000130d:	mov    ebx,0x80004002
   140001312:	cmp    rcx,QWORD PTR [rip+0x2107]        # 0x140003420
   140001319:	mov    rax,QWORD PTR [rip+0x43a8]        # 0x1400056c8
   140001320:	jne    0x14000132b
   140001322:	cmp    rax,QWORD PTR [rip+0x20ff]        # 0x140003428
   140001329:	je     0x14000133d
   14000132b:	cmp    rcx,QWORD PTR [rip+0x20de]        # 0x140003410
   140001332:	jne    0x140001364
   140001334:	cmp    rax,QWORD PTR [rip+0x20dd]        # 0x140003418
   14000133b:	jne    0x140001364
   14000133d:	mov    QWORD PTR [rsp+0x20],r9
   140001342:	lea    rcx,[rip+0x4377]        # 0x1400056c0
   140001349:	mov    r9,r8
   14000134c:	mov    r8d,0x80004
   140001352:	call   QWORD PTR [rip+0x1f20]        # 0x140003278
   140001358:	mov    ebx,eax
   14000135a:	call   0x140001608
   14000135f:	call   0x1400015a0
   140001364:	mov    eax,ebx
   140001366:	add    rsp,0x30
   14000136a:	pop    rbx
   14000136b:	ret    
   14000136c:	int3   
   14000136d:	int3   
   14000136e:	int3   
   14000136f:	int3   
   140001370:	int3   
   140001371:	int3   
   140001372:	int3   
   140001373:	int3   
   140001374:	rex push rbp
   140001376:	push   rbx
   140001377:	push   rsi
   140001378:	push   r12
   14000137a:	mov    rbp,rsp
   14000137d:	sub    rsp,0x58
   140001381:	xor    r12d,r12d
   140001384:	lea    rax,[rbp+0x40]
   140001388:	mov    QWORD PTR [rsp+0x38],r12
   14000138d:	lea    r9,[rbp+0x38]
   140001391:	mov    QWORD PTR [rsp+0x30],r12
   140001396:	lea    r8,[rbp+0x30]
   14000139a:	mov    QWORD PTR [rsp+0x20],rax
   14000139f:	mov    QWORD PTR [rbp+0x30],r12
   1400013a3:	mov    QWORD PTR [rbp+0x38],r12
   1400013a7:	mov    QWORD PTR [rbp+0x40],r12
   1400013ab:	call   0x140001f30
   1400013b0:	test   eax,eax
   1400013b2:	js     0x14000155d
   1400013b8:	mov    rcx,QWORD PTR [rbp+0x30]
   1400013bc:	call   QWORD PTR [rip+0x1cee]        # 0x1400030b0
   1400013c2:	test   eax,eax
   1400013c4:	je     0x14000155d
   1400013ca:	mov    rcx,QWORD PTR [rbp+0x38]
   1400013ce:	mov    edx,0xea60
   1400013d3:	call   QWORD PTR [rip+0x1cdf]        # 0x1400030b8
   1400013d9:	test   eax,eax
   1400013db:	jne    0x140001523
   1400013e1:	lea    rax,[rbp-0x18]
   1400013e5:	mov    QWORD PTR [rbp-0x18],r12
   1400013e9:	mov    QWORD PTR [rsp+0x38],rax
   1400013ee:	xor    r9d,r9d
   1400013f1:	lea    rax,[rbp-0x10]
   1400013f5:	mov    QWORD PTR [rbp-0x10],r12
   1400013f9:	mov    QWORD PTR [rsp+0x30],rax
   1400013fe:	xor    r8d,r8d
   140001401:	mov    QWORD PTR [rsp+0x20],r12
   140001406:	call   0x140001f30
   14000140b:	mov    rbx,QWORD PTR [rbp-0x18]
   14000140f:	mov    esi,eax
   140001411:	test   eax,eax
   140001413:	js     0x1400014ea
   140001419:	test   rbx,rbx
   14000141c:	je     0x1400014ea
   140001422:	mov    edx,DWORD PTR [rbx]
   140001424:	test   edx,edx
   140001426:	je     0x14000148e
   140001428:	cmp    edx,0x1
   14000142b:	jne    0x1400014ea
   140001431:	mov    eax,DWORD PTR [rbx+0xb04c]
   140001437:	lea    rdx,[rbx+0x104c]
   14000143e:	cmp    BYTE PTR [rbx+0xb054],r12b
   140001445:	lea    r8,[rbx+0x604c]
   14000144c:	mov    DWORD PTR [rbp+0x28],eax
   14000144f:	lea    rcx,[rbx+0x4]
   140001453:	mov    eax,DWORD PTR [rbx+0xb050]
   140001459:	lea    r9,[rbp+0x28]
   14000145d:	cmovne rdx,r12
   140001461:	mov    QWORD PTR [rsp+0x28],r12
   140001466:	mov    DWORD PTR [rsp+0x20],eax
   14000146a:	call   QWORD PTR [rip+0x1d00]        # 0x140003170
   140001470:	test   eax,eax
   140001472:	je     0x1400014c6
   140001474:	mov    eax,DWORD PTR [rbp+0x28]
   140001477:	cmp    eax,DWORD PTR [rbx+0xb04c]
   14000147d:	jbe    0x140001486
   14000147f:	mov    ecx,0x8007007a
   140001484:	jmp    0x1400014da
   140001486:	mov    DWORD PTR [rbx+0xb04c],eax
   14000148c:	jmp    0x1400014c1
   14000148e:	cmp    BYTE PTR [rbx+0xb054],r12b
   140001495:	lea    rdx,[rbx+0x104c]
   14000149c:	mov    r9d,DWORD PTR [rbx+0xb050]
   1400014a3:	lea    r8,[rbx+0x604c]
   1400014aa:	cmovne rdx,r12
   1400014ae:	mov    QWORD PTR [rsp+0x20],r12
   1400014b3:	lea    rcx,[rbx+0x4]
   1400014b7:	call   QWORD PTR [rip+0x1cbb]        # 0x140003178
   1400014bd:	test   eax,eax
   1400014bf:	je     0x1400014c6
   1400014c1:	mov    ecx,r12d
   1400014c4:	jmp    0x1400014da
   1400014c6:	call   QWORD PTR [rip+0x1b84]        # 0x140003050
   1400014cc:	movzx  ecx,ax
   1400014cf:	or     ecx,0x80070000
   1400014d5:	test   eax,eax
   1400014d7:	cmovle ecx,eax
   1400014da:	mov    DWORD PTR [rbx+0xb058],ecx
   1400014e0:	xor    ecx,ecx
   1400014e2:	call   QWORD PTR [rip+0x1b58]        # 0x140003040
   1400014e8:	jmp    0x1400014ef
   1400014ea:	mov    esi,0x80070057
   1400014ef:	test   rbx,rbx
   1400014f2:	je     0x1400014fd
   1400014f4:	mov    rcx,rbx
   1400014f7:	call   QWORD PTR [rip+0x1bd3]        # 0x1400030d0
   1400014fd:	mov    rcx,QWORD PTR [rbp-0x10]
   140001501:	test   rcx,rcx
   140001504:	je     0x14000150c
   140001506:	call   QWORD PTR [rip+0x1b24]        # 0x140003030
   14000150c:	test   esi,esi
   14000150e:	js     0x14000152d
   140001510:	mov    rcx,QWORD PTR [rbp+0x40]
   140001514:	call   QWORD PTR [rip+0x1b96]        # 0x1400030b0
   14000151a:	test   eax,eax
   14000151c:	je     0x14000152d
   14000151e:	jmp    0x1400013b8
   140001523:	mov    rcx,QWORD PTR [rbp+0x30]
   140001527:	call   QWORD PTR [rip+0x1b0b]        # 0x140003038
   14000152d:	cmp    QWORD PTR [rbp+0x30],r12
   140001531:	je     0x14000153d
   140001533:	mov    rcx,QWORD PTR [rbp+0x30]
   140001537:	call   QWORD PTR [rip+0x1af3]        # 0x140003030
   14000153d:	cmp    QWORD PTR [rbp+0x38],r12
   140001541:	je     0x14000154d
   140001543:	mov    rcx,QWORD PTR [rbp+0x38]
   140001547:	call   QWORD PTR [rip+0x1ae3]        # 0x140003030
   14000154d:	cmp    QWORD PTR [rbp+0x40],r12
   140001551:	je     0x14000155d
   140001553:	mov    rcx,QWORD PTR [rbp+0x40]
   140001557:	call   QWORD PTR [rip+0x1ad3]        # 0x140003030
   14000155d:	add    rsp,0x58
   140001561:	pop    r12
   140001563:	pop    rsi
   140001564:	pop    rbx
   140001565:	pop    rbp
   140001566:	ret    
   140001567:	int3   
   140001568:	int3   
   140001569:	int3   
   14000156a:	int3   
   14000156b:	int3   
   14000156c:	int3   
   14000156d:	int3   
   14000156e:	int3   
   14000156f:	int3   
   140001570:	rex push rbx
   140001572:	sub    rsp,0x20
   140001576:	mov    ebx,DWORD PTR [rcx]
   140001578:	call   0x140001034
   14000157d:	mov    rcx,QWORD PTR [rip+0x4074]        # 0x1400055f8
   140001584:	mov    edx,ebx
   140001586:	call   QWORD PTR [rip+0x1b2c]        # 0x1400030b8
   14000158c:	call   0x140001180
   140001591:	xor    eax,eax
   140001593:	add    rsp,0x20
   140001597:	pop    rbx
   140001598:	ret    
   140001599:	int3   
   14000159a:	int3   
   14000159b:	int3   
   14000159c:	int3   
   14000159d:	int3   
   14000159e:	int3   
   14000159f:	int3   
   1400015a0:	rex push rbx
   1400015a2:	sub    rsp,0x30
   1400015a6:	or     ebx,0xffffffff
   1400015a9:	lock xadd DWORD PTR [rip+0x3a6f],ebx        # 0x140005020
   1400015b1:	sub    ebx,0x1
   1400015b4:	jne    0x1400015f7
   1400015b6:	lea    ecx,[rbx+0x4]
   1400015b9:	call   0x140001008
   1400015be:	and    QWORD PTR [rsp+0x28],0x0
   1400015c4:	lea    r8,[rip+0xffffffffffffffa5]        # 0x140001570
   1400015cb:	and    DWORD PTR [rsp+0x20],ebx
   1400015cf:	mov    r9,rax
   1400015d2:	xor    edx,edx
   1400015d4:	xor    ecx,ecx
   1400015d6:	mov    DWORD PTR [rax],0x493e0
   1400015dc:	call   QWORD PTR [rip+0x1a36]        # 0x140003018
   1400015e2:	test   rax,rax
   1400015e5:	je     0x1400015f2
   1400015e7:	mov    rcx,rax
   1400015ea:	call   QWORD PTR [rip+0x1a40]        # 0x140003030
   1400015f0:	jmp    0x1400015f7
   1400015f2:	call   0x140001180
   1400015f7:	mov    eax,ebx
   1400015f9:	add    rsp,0x30
   1400015fd:	pop    rbx
   1400015fe:	ret    
   1400015ff:	int3   
   140001600:	int3   
   140001601:	int3   
   140001602:	int3   
   140001603:	int3   
   140001604:	int3   
   140001605:	int3   
   140001606:	int3   
   140001607:	int3   
   140001608:	sub    rsp,0x28
   14000160c:	lock inc DWORD PTR [rip+0x3a0d]        # 0x140005020
   140001613:	jne    0x140001653
   140001615:	lock inc DWORD PTR [rip+0x3a04]        # 0x140005020
   14000161c:	mov    rcx,QWORD PTR [rip+0x409d]        # 0x1400056c0
   140001623:	cmp    rcx,QWORD PTR [rip+0x1df6]        # 0x140003420
   14000162a:	mov    rax,QWORD PTR [rip+0x4097]        # 0x1400056c8
   140001631:	jne    0x14000163c
   140001633:	cmp    rax,QWORD PTR [rip+0x1dee]        # 0x140003428
   14000163a:	je     0x14000164e
   14000163c:	cmp    rcx,QWORD PTR [rip+0x1dcd]        # 0x140003410
   140001643:	jne    0x140001653
   140001645:	cmp    rax,QWORD PTR [rip+0x1dcc]        # 0x140003418
   14000164c:	jne    0x140001653
   14000164e:	call   0x140001064
   140001653:	mov    eax,DWORD PTR [rip+0x39c7]        # 0x140005020
   140001659:	add    rsp,0x28
   14000165d:	ret    
   14000165e:	int3   
   14000165f:	int3   
   140001660:	int3   
   140001661:	int3   
   140001662:	int3   
   140001663:	int3   
   140001664:	mov    QWORD PTR [rsp+0x10],rbx
   140001669:	push   rbp
   14000166a:	push   rsi
   14000166b:	push   rdi
   14000166c:	push   r12
   14000166e:	push   r13
   140001670:	push   r14
   140001672:	push   r15
   140001674:	lea    rbp,[rsp-0x27]
   140001679:	sub    rsp,0xc0
   140001680:	mov    rax,QWORD PTR [rip+0x3981]        # 0x140005008
   140001687:	xor    rax,rsp
   14000168a:	mov    QWORD PTR [rbp+0x17],rax
   14000168e:	movsd  xmm0,QWORD PTR [rip+0x1cc2]        # 0x140003358
   140001696:	xor    edi,edi
   140001698:	movzx  eax,WORD PTR [rip+0x1cc1]        # 0x140003360
   14000169f:	mov    r14,r8
   1400016a2:	movsd  QWORD PTR [rbp+0x7],xmm0
   1400016a7:	mov    ebx,0x80070057
   1400016ac:	movups xmm0,XMMWORD PTR [rip+0x1d9d]        # 0x140003450
   1400016b3:	mov    WORD PTR [rbp+0xf],ax
   1400016b7:	mov    esi,edi
   1400016b9:	mov    al,BYTE PTR [rip+0x3f51]        # 0x140005610
   1400016bf:	mov    r13d,edi
   1400016c2:	mov    QWORD PTR [rbp-0x31],rcx
   1400016c6:	mov    r12d,edi
   1400016c9:	mov    QWORD PTR [rbp-0x39],rdi
   1400016cd:	mov    r15d,edi
   1400016d0:	mov    DWORD PTR [rbp-0x49],edi
   1400016d3:	movdqu XMMWORD PTR [rip+0x3fe5],xmm0        # 0x1400056c0
   1400016db:	test   al,al
   1400016dd:	jne    0x1400016fd
   1400016df:	lea    rcx,[rip+0x3f3a]        # 0x140005620
   1400016e6:	mov    DWORD PTR [rip+0x3f30],0x9c        # 0x140005620
   1400016f0:	call   QWORD PTR [rip+0x19e2]        # 0x1400030d8
   1400016f6:	mov    BYTE PTR [rip+0x3f13],0x1        # 0x140005610
   1400016fd:	cmp    DWORD PTR [rip+0x3f2c],0x2        # 0x140005630
   140001704:	jne    0x140001753
   140001706:	cmp    DWORD PTR [rip+0x3f17],0x6        # 0x140005624
   14000170d:	jne    0x140001753
   14000170f:	cmp    DWORD PTR [rip+0x3f12],0x1        # 0x140005628
   140001716:	jne    0x140001753
   140001718:	lea    rcx,[rbp-0x45]
   14000171c:	mov    DWORD PTR [rbp-0x45],edi
   14000171f:	call   QWORD PTR [rip+0x1b03]        # 0x140003228
   140001725:	test   eax,eax
   140001727:	jne    0x140001753
   140001729:	movzx  eax,BYTE PTR [rbp-0x45]
   14000172d:	add    eax,0x1
   140001730:	mov    DWORD PTR [rbp-0x45],eax
   140001733:	je     0x140001753
   140001735:	xor    ecx,ecx
   140001737:	mov    edx,0x10000
   14000173c:	mov    r8d,0x2000
   140001742:	lea    r9d,[rcx+0x1]
   140001746:	call   QWORD PTR [rip+0x190c]        # 0x140003058
   14000174c:	inc    edi
   14000174e:	cmp    edi,DWORD PTR [rbp-0x45]
   140001751:	jb     0x140001735
   140001753:	xor    r9d,r9d
   140001756:	xor    r8d,r8d
   140001759:	xor    ecx,ecx
   14000175b:	lea    edx,[r9+0x1]
   14000175f:	call   QWORD PTR [rip+0x18ab]        # 0x140003010
   140001765:	lea    r8,[rbp-0x39]
   140001769:	mov    rcx,r14
   14000176c:	lea    rdx,[rbp+0x7]
   140001770:	call   QWORD PTR [rip+0x1a92]        # 0x140003208
   140001776:	mov    rdi,rax
   140001779:	test   rax,rax
   14000177c:	je     0x140001b0f
   140001782:	mov    r14d,0xb
   140001788:	lea    rdx,[rip+0x1bd9]        # 0x140003368
   14000178f:	mov    r8d,r14d
   140001792:	mov    rcx,rdi
   140001795:	call   QWORD PTR [rip+0x1a85]        # 0x140003220
   14000179b:	test   eax,eax
   14000179d:	jne    0x1400017ac
   14000179f:	lea    r14d,[rax+0x1]
   1400017a3:	mov    DWORD PTR [rbp-0x49],r14d
   1400017a7:	jmp    0x14000188c
   1400017ac:	mov    r8,r14
   1400017af:	lea    rdx,[rip+0x1bca]        # 0x140003380
   1400017b6:	mov    rcx,rdi
   1400017b9:	call   QWORD PTR [rip+0x1a61]        # 0x140003220
   1400017bf:	test   eax,eax
   1400017c1:	je     0x140001882
   1400017c7:	mov    r8,r14
   1400017ca:	lea    rdx,[rip+0x1bc7]        # 0x140003398
   1400017d1:	mov    rcx,rdi
   1400017d4:	call   QWORD PTR [rip+0x1a46]        # 0x140003220
   1400017da:	test   eax,eax
   1400017dc:	je     0x140001882
   1400017e2:	mov    r14d,0xd
   1400017e8:	lea    rdx,[rip+0x1bc1]        # 0x1400033b0
   1400017ef:	mov    r8d,r14d
   1400017f2:	mov    rcx,rdi
   1400017f5:	call   QWORD PTR [rip+0x1a25]        # 0x140003220
   1400017fb:	test   eax,eax
   1400017fd:	je     0x14000187a
   1400017ff:	mov    r8d,r14d
   140001802:	lea    rdx,[rip+0x1bc7]        # 0x1400033d0
   140001809:	mov    rcx,rdi
   14000180c:	call   QWORD PTR [rip+0x1a0e]        # 0x140003220
   140001812:	test   eax,eax
   140001814:	je     0x14000187a
   140001816:	lea    r8d,[r14-0x6]
   14000181a:	mov    rcx,rdi
   14000181d:	lea    rdx,[rip+0x1bcc]        # 0x1400033f0
   140001824:	call   QWORD PTR [rip+0x19f6]        # 0x140003220
   14000182a:	test   eax,eax
   14000182c:	jne    0x140001841
   14000182e:	lea    rcx,[rdi+0xe]
   140001832:	lea    rdx,[rip+0x3e87]        # 0x1400056c0
   140001839:	call   QWORD PTR [rip+0x1a49]        # 0x140003288
   14000183f:	jmp    0x140001888
   140001841:	mov    r8d,0x5
   140001847:	lea    rdx,[rip+0x1bb2]        # 0x140003400
   14000184e:	mov    rcx,rdi
   140001851:	call   QWORD PTR [rip+0x19c9]        # 0x140003220
   140001857:	test   eax,eax
   140001859:	jne    0x140001888
   14000185b:	lea    rcx,[rdi+0xa]
   14000185f:	call   QWORD PTR [rip+0x19ab]        # 0x140003210
   140001865:	mov    DWORD PTR [rip+0x3d81],eax        # 0x1400055ec
   14000186b:	dec    eax
   14000186d:	cmp    eax,0x7d
   140001870:	ja     0x140001888
   140001872:	mov    r15d,0x1
   140001878:	jmp    0x140001888
   14000187a:	mov    r12d,0x1
   140001880:	jmp    0x140001888
   140001882:	mov    r13d,0x1
   140001888:	mov    r14d,DWORD PTR [rbp-0x49]
   14000188c:	lea    r8,[rbp-0x39]
   140001890:	xor    ecx,ecx
   140001892:	lea    rdx,[rbp+0x7]
   140001896:	inc    esi
   140001898:	call   QWORD PTR [rip+0x196a]        # 0x140003208
   14000189e:	mov    rdi,rax
   1400018a1:	test   rax,rax
   1400018a4:	jne    0x140001782
   1400018aa:	cmp    esi,0x1
   1400018ad:	je     0x1400018dc
   1400018af:	cmp    esi,0x2
   1400018b2:	jne    0x140001b0f
   1400018b8:	mov    rax,QWORD PTR [rip+0x3e01]        # 0x1400056c0
   1400018bf:	cmp    rax,QWORD PTR [rip+0x1b8a]        # 0x140003450
   1400018c6:	jne    0x1400018dc
   1400018c8:	mov    rax,QWORD PTR [rip+0x3df9]        # 0x1400056c8
   1400018cf:	cmp    rax,QWORD PTR [rip+0x1b82]        # 0x140003458
   1400018d6:	je     0x140001b0f
   1400018dc:	xor    esi,esi
   1400018de:	test   r12d,r12d
   1400018e1:	jne    0x1400018e8
   1400018e3:	test   r13d,r13d
   1400018e6:	je     0x1400018f2
   1400018e8:	mov    ebx,0x80004001
   1400018ed:	jmp    0x140001b0f
   1400018f2:	test   r14d,r14d
   1400018f5:	je     0x140001b05
   1400018fb:	xor    r9d,r9d
   1400018fe:	xor    r8d,r8d
   140001901:	xor    ecx,ecx
   140001903:	lea    r14d,[r9+0x1]
   140001907:	mov    edx,r14d
   14000190a:	call   QWORD PTR [rip+0x1738]        # 0x140003048
   140001910:	mov    QWORD PTR [rip+0x3ce1],rax        # 0x1400055f8
   140001917:	test   rax,rax
   14000191a:	je     0x140001aef
   140001920:	xor    edx,edx
   140001922:	xor    ecx,ecx
   140001924:	call   QWORD PTR [rip+0x1936]        # 0x140003260
   14000192a:	mov    ebx,eax
   14000192c:	test   eax,eax
   14000192e:	js     0x140001ae0
   140001934:	mov    rdi,QWORD PTR [rbp-0x31]
   140001938:	mov    edx,r14d
   14000193b:	mov    rcx,rdi
   14000193e:	call   0x140001bb0
   140001943:	test   eax,eax
   140001945:	je     0x140001ada
   14000194b:	mov    QWORD PTR [rsp+0x40],rsi
   140001950:	or     r15,0xffffffffffffffff
   140001954:	mov    DWORD PTR [rsp+0x38],esi
   140001958:	xor    r9d,r9d
   14000195b:	mov    QWORD PTR [rsp+0x30],rsi
   140001960:	xor    r8d,r8d
   140001963:	mov    DWORD PTR [rsp+0x28],0x3
   14000196b:	mov    edx,r15d
   14000196e:	xor    ecx,ecx
   140001970:	mov    DWORD PTR [rsp+0x20],0x2
   140001978:	call   QWORD PTR [rip+0x1912]        # 0x140003290
   14000197e:	mov    ebx,eax
   140001980:	test   eax,eax
   140001982:	js     0x140001aac
   140001988:	mov    rcx,QWORD PTR [rip+0x3d31]        # 0x1400056c0
   14000198f:	mov    ebx,esi
   140001991:	cmp    rcx,QWORD PTR [rip+0x1a88]        # 0x140003420
   140001998:	mov    rax,QWORD PTR [rip+0x3d29]        # 0x1400056c8
   14000199f:	mov    QWORD PTR [rip+0x3c5a],rdi        # 0x140005600
   1400019a6:	jne    0x1400019b1
   1400019a8:	cmp    rax,QWORD PTR [rip+0x1a79]        # 0x140003428
   1400019af:	je     0x1400019c3
   1400019b1:	cmp    rcx,QWORD PTR [rip+0x1a58]        # 0x140003410
   1400019b8:	jne    0x1400019ca
   1400019ba:	cmp    rax,QWORD PTR [rip+0x1a57]        # 0x140003418
   1400019c1:	jne    0x1400019ca
   1400019c3:	call   0x140001064
   1400019c8:	mov    ebx,eax
   1400019ca:	test   ebx,ebx
   1400019cc:	js     0x140001aac
   1400019d2:	xor    r8d,r8d
   1400019d5:	lea    rcx,[rip+0x1bcc]        # 0x1400035a8
   1400019dc:	xor    edx,edx
   1400019de:	call   QWORD PTR [rip+0x16a4]        # 0x140003088
   1400019e4:	mov    rbx,rax
   1400019e7:	test   rax,rax
   1400019ea:	je     0x140001a18
   1400019ec:	lea    rdx,[rip+0x1bcd]        # 0x1400035c0
   1400019f3:	mov    rcx,rax
   1400019f6:	call   QWORD PTR [rip+0x160c]        # 0x140003008
   1400019fc:	mov    rdi,rax
   1400019ff:	test   rax,rax
   140001a02:	je     0x140001a0f
   140001a04:	mov    rcx,rax
   140001a07:	call   QWORD PTR [rip+0x1893]        # 0x1400032a0
   140001a0d:	call   rdi
   140001a0f:	mov    rcx,rbx
   140001a12:	call   QWORD PTR [rip+0x1610]        # 0x140003028
   140001a18:	mov    rax,QWORD PTR [rip+0x3bd9]        # 0x1400055f8
   140001a1f:	mov    ebx,esi
   140001a21:	mov    QWORD PTR [rbp-0x41],rax
   140001a25:	mov    r12d,0x4ff
   140001a2b:	or     edi,0xffffffff
   140001a2e:	jmp    0x140001a65
   140001a30:	test   eax,eax
   140001a32:	je     0x140001a81
   140001a34:	jmp    0x140001a4a
   140001a36:	lea    rcx,[rbp-0x29]
   140001a3a:	call   QWORD PTR [rip+0x1710]        # 0x140003150
   140001a40:	lea    rcx,[rbp-0x29]
   140001a44:	call   QWORD PTR [rip+0x170e]        # 0x140003158
   140001a4a:	xor    r9d,r9d
   140001a4d:	mov    DWORD PTR [rsp+0x20],r14d
   140001a52:	xor    r8d,r8d
   140001a55:	lea    rcx,[rbp-0x29]
   140001a59:	xor    edx,edx
   140001a5b:	call   QWORD PTR [rip+0x16ff]        # 0x140003160
   140001a61:	test   eax,eax
   140001a63:	jne    0x140001a36
   140001a65:	mov    r9d,edi
   140001a68:	mov    DWORD PTR [rsp+0x20],r12d
   140001a6d:	xor    r8d,r8d
   140001a70:	lea    rdx,[rbp-0x41]
   140001a74:	mov    ecx,r14d
   140001a77:	call   QWORD PTR [rip+0x16c3]        # 0x140003140
   140001a7d:	cmp    eax,edi
   140001a7f:	jne    0x140001a30
   140001a81:	mov    eax,esi
   140001a83:	xchg   DWORD PTR [rip+0x3b5f],eax        # 0x1400055e8
   140001a89:	cmp    eax,r14d
   140001a8c:	jne    0x140001aac
   140001a8e:	mov    ecx,DWORD PTR [rip+0x3b5c]        # 0x1400055f0
   140001a94:	call   QWORD PTR [rip+0x17d6]        # 0x140003270
   140001a9a:	mov    rcx,QWORD PTR [rip+0x3b3f]        # 0x1400055e0
   140001aa1:	test   rcx,rcx
   140001aa4:	je     0x140001aac
   140001aa6:	call   QWORD PTR [rip+0x1584]        # 0x140003030
   140001aac:	mov    rcx,QWORD PTR [rip+0x3575]        # 0x140005028
   140001ab3:	cmp    rcx,r15
   140001ab6:	je     0x140001ac5
   140001ab8:	call   QWORD PTR [rip+0x15ea]        # 0x1400030a8
   140001abe:	mov    QWORD PTR [rip+0x3563],r15        # 0x140005028
   140001ac5:	mov    rax,QWORD PTR [rip+0x3c04]        # 0x1400056d0
   140001acc:	test   rax,rax
   140001acf:	cmovne rax,r15
   140001ad3:	mov    QWORD PTR [rip+0x3bf6],rax        # 0x1400056d0
   140001ada:	call   QWORD PTR [rip+0x17a0]        # 0x140003280
   140001ae0:	mov    rcx,QWORD PTR [rip+0x3b11]        # 0x1400055f8
   140001ae7:	call   QWORD PTR [rip+0x1543]        # 0x140003030
   140001aed:	jmp    0x140001b0f
   140001aef:	call   QWORD PTR [rip+0x155b]        # 0x140003050
   140001af5:	movzx  ebx,ax
   140001af8:	or     ebx,0x80070000
   140001afe:	test   eax,eax
   140001b00:	cmovle ebx,eax
   140001b03:	jmp    0x140001b0f
   140001b05:	test   r15d,r15d
   140001b08:	je     0x140001b0f
   140001b0a:	call   0x140001374
   140001b0f:	mov    eax,ebx
   140001b11:	mov    rcx,QWORD PTR [rbp+0x17]
   140001b15:	xor    rcx,rsp
   140001b18:	call   0x1400024f0
   140001b1d:	mov    rbx,QWORD PTR [rsp+0x108]
   140001b25:	add    rsp,0xc0
   140001b2c:	pop    r15
   140001b2e:	pop    r14
   140001b30:	pop    r13
   140001b32:	pop    r12
   140001b34:	pop    rdi
   140001b35:	pop    rsi
   140001b36:	pop    rbp
   140001b37:	ret    
   140001b38:	int3   
   140001b39:	int3   
   140001b3a:	int3   
   140001b3b:	int3   
   140001b3c:	int3   
   140001b3d:	int3   
   140001b3e:	int3   
   140001b3f:	int3   
   140001b40:	rex push rbx
   140001b42:	sub    rsp,0x20
   140001b46:	and    QWORD PTR [rcx],0x0
   140001b4a:	mov    rbx,rcx
   140001b4d:	mov    rcx,QWORD PTR [rip+0x34d4]        # 0x140005028
   140001b54:	cmp    rcx,0xffffffffffffffff
   140001b58:	jne    0x140001b97
   140001b5a:	mov    rcx,QWORD PTR [rip+0x3b6f]        # 0x1400056d0
   140001b61:	test   rcx,rcx
   140001b64:	je     0x140001b8c
   140001b66:	cmp    rcx,0xffffffffffffffff
   140001b6a:	jne    0x140001b74
   140001b6c:	xor    eax,eax
   140001b6e:	add    rsp,0x20
   140001b72:	pop    rbx
   140001b73:	ret    
   140001b74:	mov    edx,DWORD PTR [rip+0x3b5e]        # 0x1400056d8
   140001b7a:	call   0x140001bb0
   140001b7f:	mov    rcx,QWORD PTR [rip+0x34a2]        # 0x140005028
   140001b86:	cmp    rcx,0xffffffffffffffff
   140001b8a:	jne    0x140001b97
   140001b8c:	mov    eax,0x1
   140001b91:	add    rsp,0x20
   140001b95:	pop    rbx
   140001b96:	ret    
   140001b97:	and    QWORD PTR [rbx],0x0
   140001b9b:	mov    rdx,rbx
   140001b9e:	add    rsp,0x20
   140001ba2:	pop    rbx
   140001ba3:	rex.W jmp QWORD PTR [rip+0x14f6]        # 0x1400030a0
   140001baa:	int3   
   140001bab:	int3   
   140001bac:	int3   
   140001bad:	int3   
   140001bae:	int3   
   140001baf:	int3   
   140001bb0:	mov    QWORD PTR [rsp+0x18],rbx
   140001bb5:	mov    QWORD PTR [rsp+0x20],rsi
   140001bba:	push   rdi
   140001bbb:	sub    rsp,0x280
   140001bc2:	mov    rax,QWORD PTR [rip+0x343f]        # 0x140005008
   140001bc9:	xor    rax,rsp
   140001bcc:	mov    QWORD PTR [rsp+0x270],rax
   140001bd4:	xor    ebx,ebx
   140001bd6:	mov    esi,edx
   140001bd8:	cmp    QWORD PTR [rip+0x3448],0xffffffffffffffff        # 0x140005028
   140001be0:	mov    rdi,rcx
   140001be3:	jne    0x140001c7e
   140001be9:	xor    edx,edx
   140001beb:	mov    DWORD PTR [rsp+0x20],ebx
   140001bef:	lea    r8d,[rbx+0x34]
   140001bf3:	lea    rcx,[rsp+0x24]
   140001bf8:	call   0x140002a96
   140001bfd:	test   rdi,rdi
   140001c00:	jne    0x140001c0d
   140001c02:	xor    ecx,ecx
   140001c04:	call   QWORD PTR [rip+0x13f6]        # 0x140003000
   140001c0a:	mov    rdi,rax
   140001c0d:	mov    r8d,0x104
   140001c13:	lea    rdx,[rsp+0x60]
   140001c18:	mov    rcx,rdi
   140001c1b:	call   QWORD PTR [rip+0x146f]        # 0x140003090
   140001c21:	movzx  ecx,si
   140001c24:	lea    rax,[rsp+0x60]
   140001c29:	mov    QWORD PTR [rsp+0x40],rcx
   140001c2e:	lea    rcx,[rsp+0x20]
   140001c33:	mov    DWORD PTR [rsp+0x20],0x38
   140001c3b:	mov    QWORD PTR [rsp+0x28],rax
   140001c40:	mov    DWORD PTR [rsp+0x24],0x88
   140001c48:	mov    QWORD PTR [rsp+0x50],rdi
   140001c4d:	call   QWORD PTR [rip+0x14dd]        # 0x140003130
   140001c53:	mov    rcx,rax
   140001c56:	cmp    rax,0xffffffffffffffff
   140001c5a:	je     0x140001c76
   140001c5c:	or     rax,0xffffffffffffffff
   140001c60:	lock cmpxchg QWORD PTR [rip+0x33bf],rcx        # 0x140005028
   140001c69:	je     0x140001c71
   140001c6b:	call   QWORD PTR [rip+0x1437]        # 0x1400030a8
   140001c71:	call   0x140001d08
   140001c76:	cmp    QWORD PTR [rip+0x33aa],0xffffffffffffffff        # 0x140005028
   140001c7e:	setne  bl
   140001c81:	mov    eax,ebx
   140001c83:	mov    rcx,QWORD PTR [rsp+0x270]
   140001c8b:	xor    rcx,rsp
   140001c8e:	call   0x1400024f0
   140001c93:	lea    r11,[rsp+0x280]
   140001c9b:	mov    rbx,QWORD PTR [r11+0x20]
   140001c9f:	mov    rsi,QWORD PTR [r11+0x28]
   140001ca3:	mov    rsp,r11
   140001ca6:	pop    rdi
   140001ca7:	ret    
   140001ca8:	int3   
   140001ca9:	int3   
   140001caa:	int3   
   140001cab:	int3   
   140001cac:	int3   
   140001cad:	int3   
   140001cae:	int3   
   140001caf:	int3   
   140001cb0:	mov    QWORD PTR [rsp+0x8],rcx
   140001cb5:	push   rbx
   140001cb6:	sub    rsp,0x20
   140001cba:	and    QWORD PTR [rsp+0x30],0x0
   140001cc0:	lea    rcx,[rsp+0x30]
   140001cc5:	call   0x140001b40
   140001cca:	test   eax,eax
   140001ccc:	jne    0x140001cd2
   140001cce:	xor    eax,eax
   140001cd0:	jmp    0x140001cfc
   140001cd2:	xor    r8d,r8d
   140001cd5:	lea    rcx,[rip+0x1784]        # 0x140003460
   140001cdc:	xor    edx,edx
   140001cde:	call   QWORD PTR [rip+0x13a4]        # 0x140003088
   140001ce4:	mov    rdx,QWORD PTR [rsp+0x30]
   140001ce9:	mov    rbx,rax
   140001cec:	test   rdx,rdx
   140001cef:	je     0x140001cf9
   140001cf1:	xor    ecx,ecx
   140001cf3:	call   QWORD PTR [rip+0x139f]        # 0x140003098
   140001cf9:	mov    rax,rbx
   140001cfc:	add    rsp,0x20
   140001d00:	pop    rbx
   140001d01:	ret    
   140001d02:	int3   
   140001d03:	int3   
   140001d04:	int3   
   140001d05:	int3   
   140001d06:	int3   
   140001d07:	int3   
   140001d08:	rex push rbx
   140001d0a:	sub    rsp,0x20
   140001d0e:	mov    rax,QWORD PTR [rip+0x38f3]        # 0x140005608
   140001d15:	xor    ebx,ebx
   140001d17:	test   rax,rax
   140001d1a:	jne    0x140001d49
   140001d1c:	call   0x140001cb0
   140001d21:	mov    QWORD PTR [rip+0x38e0],rax        # 0x140005608
   140001d28:	test   rax,rax
   140001d2b:	jne    0x140001d49
   140001d2d:	xor    r8d,r8d
   140001d30:	lea    rcx,[rip+0x1729]        # 0x140003460
   140001d37:	xor    edx,edx
   140001d39:	call   QWORD PTR [rip+0x1349]        # 0x140003088
   140001d3f:	mov    QWORD PTR [rip+0x38c2],rax        # 0x140005608
   140001d46:	test   rax,rax
   140001d49:	setne  bl
   140001d4c:	mov    eax,ebx
   140001d4e:	add    rsp,0x20
   140001d52:	pop    rbx
   140001d53:	ret    
   140001d54:	int3   
   140001d55:	int3   
   140001d56:	int3   
   140001d57:	int3   
   140001d58:	int3   
   140001d59:	int3   
   140001d5a:	int3   
   140001d5b:	int3   
   140001d5c:	mov    QWORD PTR [rsp+0x18],r8
   140001d61:	mov    QWORD PTR [rsp+0x20],r9
   140001d66:	push   rbx
   140001d67:	push   rbp
   140001d68:	push   rsi
   140001d69:	push   rdi
   140001d6a:	sub    rsp,0x28
   140001d6e:	xor    ebp,ebp
   140001d70:	lea    rax,[rdx-0x1]
   140001d74:	cmp    rax,0x7ffffffe
   140001d7a:	mov    rsi,rcx
   140001d7d:	mov    edi,ebp
   140001d7f:	mov    ecx,0x80070057
   140001d84:	cmova  edi,ecx
   140001d87:	test   edi,edi
   140001d89:	js     0x140001dc0
   140001d8b:	lea    rbx,[rdx-0x1]
   140001d8f:	mov    rcx,rsi
   140001d92:	mov    rdx,rbx
   140001d95:	lea    r9,[rsp+0x68]
   140001d9a:	mov    edi,ebp
   140001d9c:	call   QWORD PTR [rip+0x148e]        # 0x140003230
   140001da2:	test   eax,eax
   140001da4:	js     0x140001db5
   140001da6:	cdqe   
   140001da8:	cmp    rax,rbx
   140001dab:	ja     0x140001db5
   140001dad:	jne    0x140001dc8
   140001daf:	mov    WORD PTR [rsi+rbx*2],bp
   140001db3:	jmp    0x140001dc8
   140001db5:	mov    WORD PTR [rsi+rbx*2],bp
   140001db9:	mov    edi,0x8007007a
   140001dbe:	jmp    0x140001dc8
   140001dc0:	test   rdx,rdx
   140001dc3:	je     0x140001dc8
   140001dc5:	mov    WORD PTR [rsi],bp
   140001dc8:	mov    eax,edi
   140001dca:	add    rsp,0x28
   140001dce:	pop    rdi
   140001dcf:	pop    rsi
   140001dd0:	pop    rbp
   140001dd1:	pop    rbx
   140001dd2:	ret    
   140001dd3:	int3   
   140001dd4:	int3   
   140001dd5:	int3   
   140001dd6:	int3   
   140001dd7:	int3   
   140001dd8:	int3   
   140001dd9:	int3   
   140001dda:	int3   
   140001ddb:	int3   
   140001ddc:	mov    QWORD PTR [rsp+0x10],rbx
   140001de1:	push   rdi
   140001de2:	sub    rsp,0x250
   140001de9:	mov    rax,QWORD PTR [rip+0x3218]        # 0x140005008
   140001df0:	xor    rax,rsp
   140001df3:	mov    QWORD PTR [rsp+0x240],rax
   140001dfb:	mov    edi,r9d
   140001dfe:	mov    rbx,rcx
   140001e01:	test   r8d,r8d
   140001e04:	je     0x140001e49
   140001e06:	sub    r8d,0x1
   140001e0a:	je     0x140001e40
   140001e0c:	sub    r8d,0x1
   140001e10:	je     0x140001e37
   140001e12:	sub    r8d,0x1
   140001e16:	je     0x140001e2e
   140001e18:	cmp    r8d,0x1
   140001e1c:	je     0x140001e25
   140001e1e:	mov    eax,0x80070057
   140001e23:	jmp    0x140001e7d
   140001e25:	lea    r8,[rip+0x1734]        # 0x140003560
   140001e2c:	jmp    0x140001e50
   140001e2e:	lea    r8,[rip+0x16fb]        # 0x140003530
   140001e35:	jmp    0x140001e50
   140001e37:	lea    r8,[rip+0x16b2]        # 0x1400034f0
   140001e3e:	jmp    0x140001e50
   140001e40:	lea    r8,[rip+0x1671]        # 0x1400034b8
   140001e47:	jmp    0x140001e50
   140001e49:	lea    r8,[rip+0x1630]        # 0x140003480
   140001e50:	mov    edx,0x104
   140001e55:	lea    rcx,[rsp+0x30]
   140001e5a:	call   QWORD PTR [rip+0x1328]        # 0x140003188
   140001e60:	lea    r9,[rsp+0x30]
   140001e65:	mov    DWORD PTR [rsp+0x20],edi
   140001e69:	lea    r8,[rip+0x1728]        # 0x140003598
   140001e70:	mov    edx,0x104
   140001e75:	mov    rcx,rbx
   140001e78:	call   0x140001d5c
   140001e7d:	mov    rcx,QWORD PTR [rsp+0x240]
   140001e85:	xor    rcx,rsp
   140001e88:	call   0x1400024f0
   140001e8d:	mov    rbx,QWORD PTR [rsp+0x268]
   140001e95:	add    rsp,0x250
   140001e9c:	pop    rdi
   140001e9d:	ret    
   140001e9e:	int3   
   140001e9f:	int3   
   140001ea0:	int3   
   140001ea1:	int3   
   140001ea2:	int3   
   140001ea3:	int3   
   140001ea4:	mov    QWORD PTR [rsp+0x8],rbx
   140001ea9:	push   rdi
   140001eaa:	sub    rsp,0x240
   140001eb1:	mov    rax,QWORD PTR [rip+0x3150]        # 0x140005008
   140001eb8:	xor    rax,rsp
   140001ebb:	mov    QWORD PTR [rsp+0x230],rax
   140001ec3:	mov    rdi,r9
   140001ec6:	lea    rcx,[rsp+0x20]
   140001ecb:	mov    r9d,edx
   140001ece:	call   0x140001ddc
   140001ed3:	mov    ebx,eax
   140001ed5:	test   eax,eax
   140001ed7:	js     0x140001f07
   140001ed9:	lea    r8,[rsp+0x20]
   140001ede:	xor    edx,edx
   140001ee0:	mov    ecx,0x100002
   140001ee5:	call   QWORD PTR [rip+0x1185]        # 0x140003070
   140001eeb:	mov    QWORD PTR [rdi],rax
   140001eee:	test   rax,rax
   140001ef1:	jne    0x140001f07
   140001ef3:	call   QWORD PTR [rip+0x1157]        # 0x140003050
   140001ef9:	movzx  ebx,ax
   140001efc:	or     ebx,0x80070000
   140001f02:	test   eax,eax
   140001f04:	cmovle ebx,eax
   140001f07:	mov    eax,ebx
   140001f09:	mov    rcx,QWORD PTR [rsp+0x230]
   140001f11:	xor    rcx,rsp
   140001f14:	call   0x1400024f0
   140001f19:	mov    rbx,QWORD PTR [rsp+0x250]
   140001f21:	add    rsp,0x240
   140001f28:	pop    rdi
   140001f29:	ret    
   140001f2a:	int3   
   140001f2b:	int3   
   140001f2c:	int3   
   140001f2d:	int3   
   140001f2e:	int3   
   140001f2f:	int3   
   140001f30:	mov    QWORD PTR [rsp+0x8],rbx
   140001f35:	mov    QWORD PTR [rsp+0x10],rbp
   140001f3a:	push   rsi
   140001f3b:	push   rdi
   140001f3c:	push   r12
   140001f3e:	push   r14
   140001f40:	push   r15
   140001f42:	sub    rsp,0x250
   140001f49:	mov    rax,QWORD PTR [rip+0x30b8]        # 0x140005008
   140001f50:	xor    rax,rsp
   140001f53:	mov    QWORD PTR [rsp+0x240],rax
   140001f5b:	mov    r15,QWORD PTR [rsp+0x2a0]
   140001f63:	xor    ebx,ebx
   140001f65:	mov    rdi,QWORD PTR [rsp+0x2b0]
   140001f6d:	mov    r14,r9
   140001f70:	mov    rbp,QWORD PTR [rsp+0x2b8]
   140001f78:	mov    r12,r8
   140001f7b:	mov    esi,DWORD PTR [rip+0x366b]        # 0x1400055ec
   140001f81:	test   r8,r8
   140001f84:	je     0x140001f9d
   140001f86:	mov    r9,r8
   140001f89:	mov    edx,esi
   140001f8b:	xor    r8d,r8d
   140001f8e:	call   0x140001ea4
   140001f93:	mov    ebx,eax
   140001f95:	test   eax,eax
   140001f97:	js     0x14000206e
   140001f9d:	test   r14,r14
   140001fa0:	je     0x140001fb4
   140001fa2:	mov    r9,r14
   140001fa5:	mov    r8d,0x1
   140001fab:	mov    edx,esi
   140001fad:	call   0x140001ea4
   140001fb2:	mov    ebx,eax
   140001fb4:	test   ebx,ebx
   140001fb6:	js     0x14000206e
   140001fbc:	test   r15,r15
   140001fbf:	je     0x140001fd3
   140001fc1:	mov    r9,r15
   140001fc4:	mov    r8d,0x2
   140001fca:	mov    edx,esi
   140001fcc:	call   0x140001ea4
   140001fd1:	mov    ebx,eax
   140001fd3:	test   ebx,ebx
   140001fd5:	js     0x14000206e
   140001fdb:	test   rdi,rdi
   140001fde:	je     0x14000206a
   140001fe4:	mov    r9d,esi
   140001fe7:	lea    rcx,[rsp+0x30]
   140001fec:	mov    r8d,0x4
   140001ff2:	call   0x140001ddc
   140001ff7:	mov    ebx,eax
   140001ff9:	test   eax,eax
   140001ffb:	js     0x14000206e
   140001ffd:	xor    edx,edx
   140001fff:	lea    r8,[rsp+0x30]
   140002004:	lea    ecx,[rdx+0x6]
   140002007:	call   QWORD PTR [rip+0x106b]        # 0x140003078
   14000200d:	mov    QWORD PTR [rdi],rax
   140002010:	mov    esi,0x80070000
   140002015:	test   rax,rax
   140002018:	jne    0x14000202a
   14000201a:	call   QWORD PTR [rip+0x1030]        # 0x140003050
   140002020:	movzx  ebx,ax
   140002023:	or     ebx,esi
   140002025:	test   eax,eax
   140002027:	cmovle ebx,eax
   14000202a:	test   ebx,ebx
   14000202c:	js     0x14000206e
   14000202e:	mov    rcx,QWORD PTR [rdi]
   140002031:	test   rcx,rcx
   140002034:	je     0x14000206a
   140002036:	test   rbp,rbp
   140002039:	je     0x14000206a
   14000203b:	and    QWORD PTR [rsp+0x20],0x0
   140002041:	xor    r9d,r9d
   140002044:	xor    r8d,r8d
   140002047:	lea    edx,[r9+0x2]
   14000204b:	call   QWORD PTR [rip+0x102f]        # 0x140003080
   140002051:	mov    QWORD PTR [rbp+0x0],rax
   140002055:	test   rax,rax
   140002058:	jne    0x14000206a
   14000205a:	call   QWORD PTR [rip+0xff0]        # 0x140003050
   140002060:	movzx  ebx,ax
   140002063:	or     ebx,esi
   140002065:	test   eax,eax
   140002067:	cmovle ebx,eax
   14000206a:	test   ebx,ebx
   14000206c:	jns    0x1400020ce
   14000206e:	test   r12,r12
   140002071:	je     0x140002082
   140002073:	mov    rcx,QWORD PTR [r12]
   140002077:	test   rcx,rcx
   14000207a:	je     0x140002082
   14000207c:	call   QWORD PTR [rip+0xfae]        # 0x140003030
   140002082:	test   r14,r14
   140002085:	je     0x140002095
   140002087:	mov    rcx,QWORD PTR [r14]
   14000208a:	test   rcx,rcx
   14000208d:	je     0x140002095
   14000208f:	call   QWORD PTR [rip+0xf9b]        # 0x140003030
   140002095:	test   r15,r15
   140002098:	je     0x1400020a8
   14000209a:	mov    rcx,QWORD PTR [r15]
   14000209d:	test   rcx,rcx
   1400020a0:	je     0x1400020a8
   1400020a2:	call   QWORD PTR [rip+0xf88]        # 0x140003030
   1400020a8:	test   rbp,rbp
   1400020ab:	je     0x1400020bb
   1400020ad:	mov    rcx,QWORD PTR [rbp+0x0]
   1400020b1:	test   rcx,rcx
   1400020b4:	je     0x1400020bb
   1400020b6:	call   0x140002102
   1400020bb:	test   rdi,rdi
   1400020be:	je     0x1400020ce
   1400020c0:	mov    rcx,QWORD PTR [rdi]
   1400020c3:	test   rcx,rcx
   1400020c6:	je     0x1400020ce
   1400020c8:	call   QWORD PTR [rip+0xf62]        # 0x140003030
   1400020ce:	mov    eax,ebx
   1400020d0:	mov    rcx,QWORD PTR [rsp+0x240]
   1400020d8:	xor    rcx,rsp
   1400020db:	call   0x1400024f0
   1400020e0:	lea    r11,[rsp+0x250]
   1400020e8:	mov    rbx,QWORD PTR [r11+0x30]
   1400020ec:	mov    rbp,QWORD PTR [r11+0x38]
   1400020f0:	mov    rsp,r11
   1400020f3:	pop    r15
   1400020f5:	pop    r14
   1400020f7:	pop    r12
   1400020f9:	pop    rdi
   1400020fa:	pop    rsi
   1400020fb:	ret    
   1400020fc:	int3   
   1400020fd:	int3   
   1400020fe:	int3   
   1400020ff:	int3   
   140002100:	int3   
   140002101:	int3   
   140002102:	jmp    QWORD PTR [rip+0xfc8]        # 0x1400030d0
   140002108:	int3   
   140002109:	int3   
   14000210a:	int3   
   14000210b:	int3   
   14000210c:	int3   
   14000210d:	int3   
   14000210e:	int3   
   14000210f:	int3   
   140002110:	sub    rsp,0x28
   140002114:	mov    eax,0x5a4d
   140002119:	cmp    WORD PTR [rip+0xffffffffffffdee0],ax        # 0x140000000
   140002120:	je     0x140002126
   140002122:	xor    eax,eax
   140002124:	jmp    0x140002175
   140002126:	movsxd rcx,DWORD PTR [rip+0xffffffffffffdf0f]        # 0x14000003c
   14000212d:	lea    rax,[rip+0xffffffffffffdecc]        # 0x140000000
   140002134:	add    rcx,rax
   140002137:	cmp    DWORD PTR [rcx],0x4550
   14000213d:	jne    0x140002122
   14000213f:	movzx  eax,WORD PTR [rcx+0x18]
   140002143:	cmp    eax,0x10b
   140002148:	je     0x140002164
   14000214a:	cmp    eax,0x20b
   14000214f:	jne    0x140002122
   140002151:	xor    eax,eax
   140002153:	cmp    DWORD PTR [rcx+0x84],0xe
   14000215a:	jbe    0x140002175
   14000215c:	cmp    DWORD PTR [rcx+0xf8],eax
   140002162:	jmp    0x140002172
   140002164:	xor    eax,eax
   140002166:	cmp    DWORD PTR [rcx+0x74],0xe
   14000216a:	jbe    0x140002175
   14000216c:	cmp    DWORD PTR [rcx+0xe8],eax
   140002172:	setne  al
   140002175:	mov    ecx,0x2
   14000217a:	mov    DWORD PTR [rip+0x2ed0],eax        # 0x140005050
   140002180:	call   0x1400025e8
   140002185:	mov    ecx,eax
   140002187:	call   QWORD PTR [rip+0x1013]        # 0x1400031a0
   14000218d:	mov    rcx,QWORD PTR [rip+0x104c]        # 0x1400031e0
   140002194:	or     rax,0xffffffffffffffff
   140002198:	mov    QWORD PTR [rip+0x3541],rax        # 0x1400056e0
   14000219f:	mov    QWORD PTR [rip+0x3542],rax        # 0x1400056e8
   1400021a6:	mov    eax,DWORD PTR [rip+0x2eb8]        # 0x140005064
   1400021ac:	mov    DWORD PTR [rcx],eax
   1400021ae:	mov    rcx,QWORD PTR [rip+0x1033]        # 0x1400031e8
   1400021b5:	mov    eax,DWORD PTR [rip+0x2e9d]        # 0x140005058
   1400021bb:	mov    DWORD PTR [rcx],eax
   1400021bd:	call   0x140002640
   1400021c2:	cmp    DWORD PTR [rip+0x2e37],0x0        # 0x140005000
   1400021c9:	jne    0x1400021d8
   1400021cb:	lea    rcx,[rip+0x46e]        # 0x140002640
   1400021d2:	call   QWORD PTR [rip+0xfe8]        # 0x1400031c0
   1400021d8:	xor    eax,eax
   1400021da:	add    rsp,0x28
   1400021de:	ret    
   1400021df:	int3   
   1400021e0:	int3   
   1400021e1:	int3   
   1400021e2:	int3   
   1400021e3:	int3   
   1400021e4:	int3   
   1400021e5:	int3   
   1400021e6:	int3   
   1400021e7:	int3   
   1400021e8:	int3   
   1400021e9:	int3   
   1400021ea:	int3   
   1400021eb:	int3   
   1400021ec:	int3   
   1400021ed:	int3   
   1400021ee:	int3   
   1400021ef:	int3   
   1400021f0:	sub    rsp,0x38
   1400021f4:	mov    eax,DWORD PTR [rip+0x2e66]        # 0x140005060
   1400021fa:	lea    r8,[rip+0x2e47]        # 0x140005048
   140002201:	mov    r9d,DWORD PTR [rip+0x2e54]        # 0x14000505c
   140002208:	lea    rdx,[rip+0x2e31]        # 0x140005040
   14000220f:	mov    DWORD PTR [rip+0x2e3f],eax        # 0x140005054
   140002215:	lea    rcx,[rip+0x2e1c]        # 0x140005038
   14000221c:	lea    rax,[rip+0x2e31]        # 0x140005054
   140002223:	mov    QWORD PTR [rsp+0x20],rax
   140002228:	call   QWORD PTR [rip+0xf6a]        # 0x140003198
   14000222e:	mov    DWORD PTR [rip+0x2e08],eax        # 0x14000503c
   140002234:	add    rsp,0x38
   140002238:	ret    
   140002239:	int3   
   14000223a:	int3   
   14000223b:	int3   
   14000223c:	int3   
   14000223d:	int3   
   14000223e:	int3   
   14000223f:	int3   
   140002240:	mov    QWORD PTR [rsp+0x8],rbx
   140002245:	mov    QWORD PTR [rsp+0x10],rsi
   14000224a:	mov    QWORD PTR [rsp+0x18],rdi
   14000224f:	push   r12
   140002251:	push   r14
   140002253:	push   r15
   140002255:	sub    rsp,0xb0
   14000225c:	xor    r15d,r15d
   14000225f:	mov    DWORD PTR [rsp+0x20],r15d
   140002264:	lea    rcx,[rsp+0x40]
   140002269:	call   QWORD PTR [rip+0xe79]        # 0x1400030e8
   14000226f:	nop
   140002270:	mov    rax,QWORD PTR gs:0x30
   140002279:	mov    rbx,QWORD PTR [rax+0x8]
   14000227d:	mov    r14d,r15d
   140002280:	xor    eax,eax
   140002282:	lock cmpxchg QWORD PTR [rip+0x3465],rbx        # 0x1400056f0
   14000228b:	je     0x1400022a9
   14000228d:	cmp    rax,rbx
   140002290:	jne    0x14000229c
   140002292:	mov    edi,0x1
   140002297:	mov    r14d,edi
   14000229a:	jmp    0x1400022ae
   14000229c:	mov    ecx,0x3e8
   1400022a1:	call   QWORD PTR [rip+0xe39]        # 0x1400030e0
   1400022a7:	jmp    0x140002280
   1400022a9:	mov    edi,0x1
   1400022ae:	mov    eax,DWORD PTR [rip+0x3444]        # 0x1400056f8
   1400022b4:	cmp    eax,edi
   1400022b6:	jne    0x1400022c6
   1400022b8:	mov    esi,0x1f
   1400022bd:	mov    ecx,esi
   1400022bf:	call   0x140002634
   1400022c4:	jmp    0x140002337
   1400022c6:	mov    eax,DWORD PTR [rip+0x342c]        # 0x1400056f8
   1400022cc:	test   eax,eax
   1400022ce:	jne    0x14000232c
   1400022d0:	mov    DWORD PTR [rip+0x3422],edi        # 0x1400056f8
   1400022d6:	lea    r12,[rip+0x1003]        # 0x1400032e0
   1400022dd:	lea    rbx,[rip+0xfe4]        # 0x1400032c8
   1400022e4:	mov    QWORD PTR [rsp+0x30],rbx
   1400022e9:	mov    eax,r15d
   1400022ec:	mov    DWORD PTR [rsp+0x24],eax
   1400022f0:	cmp    rbx,r12
   1400022f3:	jae    0x14000231e
   1400022f5:	test   eax,eax
   1400022f7:	jne    0x140002322
   1400022f9:	mov    rsi,QWORD PTR [rbx]
   1400022fc:	test   rsi,rsi
   1400022ff:	je     0x140002313
   140002301:	mov    rcx,rsi
   140002304:	mov    rax,QWORD PTR [rip+0xf95]        # 0x1400032a0
   14000230b:	call   rax
   14000230d:	call   rsi
   14000230f:	mov    DWORD PTR [rsp+0x24],eax
   140002313:	add    rbx,0x8
   140002317:	mov    QWORD PTR [rsp+0x30],rbx
   14000231c:	jmp    0x1400022f0
   14000231e:	test   eax,eax
   140002320:	je     0x140002332
   140002322:	mov    eax,0xff
   140002327:	jmp    0x140002493
   14000232c:	mov    DWORD PTR [rip+0x2d02],edi        # 0x140005034
   140002332:	mov    esi,0x1f
   140002337:	mov    eax,DWORD PTR [rip+0x33bb]        # 0x1400056f8
   14000233d:	cmp    eax,edi
   14000233f:	jne    0x14000235e
   140002341:	lea    rdx,[rip+0xf78]        # 0x1400032c0
   140002348:	lea    rcx,[rip+0xf61]        # 0x1400032b0
   14000234f:	call   0x14000280a
   140002354:	mov    DWORD PTR [rip+0x339a],0x2        # 0x1400056f8
   14000235e:	test   r14d,r14d
   140002361:	jne    0x14000236d
   140002363:	mov    rax,r15
   140002366:	xchg   QWORD PTR [rip+0x3383],rax        # 0x1400056f0
   14000236d:	cmp    QWORD PTR [rip+0x338c],r15        # 0x140005700
   140002374:	je     0x1400023a4
   140002376:	lea    rcx,[rip+0x3383]        # 0x140005700
   14000237d:	call   0x1400026a0
   140002382:	test   eax,eax
   140002384:	je     0x1400023a4
   140002386:	mov    rbx,QWORD PTR [rip+0x3373]        # 0x140005700
   14000238d:	mov    rcx,rbx
   140002390:	mov    rax,QWORD PTR [rip+0xf09]        # 0x1400032a0
   140002397:	call   rax
   140002399:	xor    r8d,r8d
   14000239c:	lea    edx,[r8+0x2]
   1400023a0:	xor    ecx,ecx
   1400023a2:	call   rbx
   1400023a4:	mov    rax,QWORD PTR [rip+0xe6d]        # 0x140003218
   1400023ab:	mov    rdx,QWORD PTR [rax]
   1400023ae:	test   rdx,rdx
   1400023b1:	jne    0x1400023bd
   1400023b3:	mov    eax,0xff
   1400023b8:	jmp    0x140002493
   1400023bd:	mov    QWORD PTR [rsp+0x28],rdx
   1400023c2:	mov    ecx,DWORD PTR [rsp+0x20]
   1400023c6:	cmp    WORD PTR [rdx],0x20
   1400023ca:	ja     0x140002444
   1400023cc:	cmp    WORD PTR [rdx],r15w
   1400023d0:	je     0x1400023d6
   1400023d2:	test   ecx,ecx
   1400023d4:	jne    0x140002444
   1400023d6:	movzx  eax,WORD PTR [rdx]
   1400023d9:	sub    ax,di
   1400023dc:	cmp    ax,si
   1400023df:	ja     0x1400023ec
   1400023e1:	add    rdx,0x2
   1400023e5:	mov    QWORD PTR [rsp+0x28],rdx
   1400023ea:	jmp    0x1400023d6
   1400023ec:	mov    ecx,DWORD PTR [rsp+0x7c]
   1400023f0:	movzx  eax,WORD PTR [rsp+0x80]
   1400023f8:	mov    r9d,0xa
   1400023fe:	and    cl,dil
   140002401:	cmovne r9d,eax
   140002405:	mov    r8,rdx
   140002408:	xor    edx,edx
   14000240a:	lea    rcx,[rip+0xffffffffffffdbef]        # 0x140000000
   140002411:	call   0x140001664
   140002416:	mov    DWORD PTR [rip+0x2c14],eax        # 0x140005030
   14000241c:	cmp    DWORD PTR [rip+0x2c2d],r15d        # 0x140005050
   140002423:	jne    0x14000242d
   140002425:	mov    ecx,eax
   140002427:	call   QWORD PTR [rip+0xd7b]        # 0x1400031a8
   14000242d:	cmp    DWORD PTR [rip+0x2c00],r15d        # 0x140005034
   140002434:	jne    0x140002442
   140002436:	call   QWORD PTR [rip+0xd7c]        # 0x1400031b8
   14000243c:	mov    eax,DWORD PTR [rip+0x2bee]        # 0x140005030
   140002442:	jmp    0x140002493
   140002444:	cmp    WORD PTR [rdx],0x22
   140002448:	jne    0x140002458
   14000244a:	mov    eax,r15d
   14000244d:	test   ecx,ecx
   14000244f:	sete   al
   140002452:	mov    ecx,eax
   140002454:	mov    DWORD PTR [rsp+0x20],eax
   140002458:	add    rdx,0x2
   14000245c:	mov    QWORD PTR [rsp+0x28],rdx
   140002461:	jmp    0x1400023c6
   140002466:	mov    DWORD PTR [rip+0x2bc4],eax        # 0x140005030
   14000246c:	cmp    DWORD PTR [rip+0x2bdd],0x0        # 0x140005050
   140002473:	jne    0x14000247e
   140002475:	mov    ecx,eax
   140002477:	call   QWORD PTR [rip+0xd33]        # 0x1400031b0
   14000247d:	int3   
   14000247e:	cmp    DWORD PTR [rip+0x2baf],0x0        # 0x140005034
   140002485:	jne    0x140002493
   140002487:	call   QWORD PTR [rip+0xd2b]        # 0x1400031b8
   14000248d:	mov    eax,DWORD PTR [rip+0x2b9d]        # 0x140005030
   140002493:	lea    r11,[rsp+0xb0]
   14000249b:	mov    rbx,QWORD PTR [r11+0x20]
   14000249f:	mov    rsi,QWORD PTR [r11+0x28]
   1400024a3:	mov    rdi,QWORD PTR [r11+0x30]
   1400024a7:	mov    rsp,r11
   1400024aa:	pop    r15
   1400024ac:	pop    r14
   1400024ae:	pop    r12
   1400024b0:	ret    
   1400024b1:	int3   
   1400024b2:	int3   
   1400024b3:	int3   
   1400024b4:	int3   
   1400024b5:	int3   
   1400024b6:	int3   
   1400024b7:	int3   
   1400024b8:	int3   
   1400024b9:	int3   
   1400024ba:	int3   
   1400024bb:	int3   
   1400024bc:	int3   
   1400024bd:	int3   
   1400024be:	int3   
   1400024bf:	int3   
   1400024c0:	sub    rsp,0x28
   1400024c4:	call   0x140002734
   1400024c9:	add    rsp,0x28
   1400024cd:	jmp    0x140002240
   1400024d2:	int3   
   1400024d3:	int3   
   1400024d4:	int3   
   1400024d5:	int3   
   1400024d6:	int3   
   1400024d7:	int3   
   1400024d8:	int3   
   1400024d9:	int3   
   1400024da:	int3   
   1400024db:	int3   
   1400024dc:	int3   
   1400024dd:	int3   
   1400024de:	int3   
   1400024df:	int3   
   1400024e0:	int3   
   1400024e1:	int3   
   1400024e2:	int3   
   1400024e3:	int3   
   1400024e4:	int3   
   1400024e5:	int3   
   1400024e6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400024f0:	cmp    rcx,QWORD PTR [rip+0x2b11]        # 0x140005008
   1400024f7:	jne    0x140002509
   1400024f9:	rol    rcx,0x10
   1400024fd:	test   cx,0xffff
   140002502:	jne    0x140002505
   140002504:	ret    
   140002505:	ror    rcx,0x10
   140002509:	jmp    0x140002880
   14000250e:	int3   
   14000250f:	int3   
   140002510:	int3   
   140002511:	int3   
   140002512:	int3   
   140002513:	int3   
   140002514:	int3   
   140002515:	int3   
   140002516:	int3   
   140002517:	int3   
   140002518:	int3   
   140002519:	int3   
   14000251a:	int3   
   14000251b:	int3   
   14000251c:	int3   
   14000251d:	int3   
   14000251e:	int3   
   14000251f:	int3   
   140002520:	sub    rsp,0x28
   140002524:	mov    rax,QWORD PTR [rcx]
   140002527:	cmp    DWORD PTR [rax],0xe06d7363
   14000252d:	jne    0x140002552
   14000252f:	cmp    DWORD PTR [rax+0x18],0x4
   140002533:	jne    0x140002552
   140002535:	mov    ecx,DWORD PTR [rax+0x20]
   140002538:	lea    eax,[rcx-0x19930520]
   14000253e:	cmp    eax,0x2
   140002541:	jbe    0x14000254b
   140002543:	cmp    ecx,0x1994000
   140002549:	jne    0x140002552
   14000254b:	call   QWORD PTR [rip+0xc9f]        # 0x1400031f0
   140002551:	int3   
   140002552:	xor    eax,eax
   140002554:	add    rsp,0x28
   140002558:	ret    
   140002559:	int3   
   14000255a:	int3   
   14000255b:	int3   
   14000255c:	int3   
   14000255d:	int3   
   14000255e:	int3   
   14000255f:	int3   
   140002560:	sub    rsp,0x28
   140002564:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x140002520
   14000256b:	call   QWORD PTR [rip+0xb7f]        # 0x1400030f0
   140002571:	xor    eax,eax
   140002573:	add    rsp,0x28
   140002577:	ret    
   140002578:	int3   
   140002579:	int3   
   14000257a:	int3   
   14000257b:	int3   
   14000257c:	int3   
   14000257d:	int3   
   14000257e:	jmp    QWORD PTR [rip+0xc74]        # 0x1400031f8
   140002584:	int3   
   140002585:	int3   
   140002586:	int3   
   140002587:	int3   
   140002588:	int3   
   140002589:	int3   
   14000258a:	int3   
   14000258b:	int3   
   14000258c:	sub    rsp,0x18
   140002590:	xor    edx,edx
   140002592:	lea    rax,[rcx-0x1]
   140002596:	cmp    rax,0xfffffffffffffffd
   14000259a:	ja     0x1400025d8
   14000259c:	mov    eax,0x5a4d
   1400025a1:	cmp    WORD PTR [rcx],ax
   1400025a4:	jne    0x1400025d0
   1400025a6:	cmp    DWORD PTR [rcx+0x3c],edx
   1400025a9:	jl     0x1400025d0
   1400025ab:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   1400025b2:	jae    0x1400025d0
   1400025b4:	movsxd rax,DWORD PTR [rcx+0x3c]
   1400025b8:	add    rax,rcx
   1400025bb:	mov    QWORD PTR [rsp],rax
   1400025bf:	cmp    DWORD PTR [rax],0x4550
   1400025c5:	cmovne rax,rdx
   1400025c9:	mov    rdx,rax
   1400025cc:	mov    QWORD PTR [rsp],rax
   1400025d0:	jmp    0x1400025d8
   1400025d2:	xor    edx,edx
   1400025d4:	mov    QWORD PTR [rsp],rdx
   1400025d8:	mov    rax,rdx
   1400025db:	add    rsp,0x18
   1400025df:	ret    
   1400025e0:	int3   
   1400025e1:	int3   
   1400025e2:	int3   
   1400025e3:	int3   
   1400025e4:	int3   
   1400025e5:	int3   
   1400025e6:	int3   
   1400025e7:	int3   
   1400025e8:	rex push rbx
   1400025ea:	sub    rsp,0x20
   1400025ee:	mov    ebx,ecx
   1400025f0:	xor    ecx,ecx
   1400025f2:	call   QWORD PTR [rip+0xa08]        # 0x140003000
   1400025f8:	test   rax,rax
   1400025fb:	je     0x140002625
   1400025fd:	mov    rcx,rax
   140002600:	call   0x14000258c
   140002605:	test   rax,rax
   140002608:	je     0x140002625
   14000260a:	mov    ecx,0x2
   14000260f:	cmp    WORD PTR [rax+0x5c],cx
   140002613:	jne    0x140002619
   140002615:	mov    eax,ecx
   140002617:	jmp    0x140002627
   140002619:	cmp    WORD PTR [rax+0x5c],0x3
   14000261e:	mov    eax,0x1
   140002623:	je     0x140002627
   140002625:	mov    eax,ebx
   140002627:	add    rsp,0x20
   14000262b:	pop    rbx
   14000262c:	ret    
   14000262d:	int3   
   14000262e:	int3   
   14000262f:	int3   
   140002630:	int3   
   140002631:	int3   
   140002632:	int3   
   140002633:	int3   
   140002634:	jmp    QWORD PTR [rip+0xb9e]        # 0x1400031d8
   14000263a:	int3   
   14000263b:	int3   
   14000263c:	int3   
   14000263d:	int3   
   14000263e:	int3   
   14000263f:	int3   
   140002640:	xor    eax,eax
   140002642:	ret    
   140002643:	int3   
   140002644:	int3   
   140002645:	int3   
   140002646:	int3   
   140002647:	int3   
   140002648:	int3   
   140002649:	int3   
   14000264a:	int3   
   14000264b:	int3   
   14000264c:	int3   
   14000264d:	int3   
   14000264e:	int3   
   14000264f:	int3   
   140002650:	movsxd r8,DWORD PTR [rcx+0x3c]
   140002654:	xor    r9d,r9d
   140002657:	add    r8,rcx
   14000265a:	mov    r10,rdx
   14000265d:	movzx  eax,WORD PTR [r8+0x14]
   140002662:	movzx  r11d,WORD PTR [r8+0x6]
   140002667:	add    rax,0x18
   14000266b:	add    rax,r8
   14000266e:	test   r11d,r11d
   140002671:	je     0x140002691
   140002673:	mov    edx,DWORD PTR [rax+0xc]
   140002676:	cmp    r10,rdx
   140002679:	jb     0x140002685
   14000267b:	mov    ecx,DWORD PTR [rax+0x8]
   14000267e:	add    ecx,edx
   140002680:	cmp    r10,rcx
   140002683:	jb     0x140002693
   140002685:	inc    r9d
   140002688:	add    rax,0x28
   14000268c:	cmp    r9d,r11d
   14000268f:	jb     0x140002673
   140002691:	xor    eax,eax
   140002693:	ret    
   140002694:	int3   
   140002695:	int3   
   140002696:	int3   
   140002697:	int3   
   140002698:	int3   
   140002699:	int3   
   14000269a:	int3   
   14000269b:	int3   
   14000269c:	int3   
   14000269d:	int3   
   14000269e:	int3   
   14000269f:	int3   
   1400026a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400026a5:	push   rdi
   1400026a6:	sub    rsp,0x20
   1400026aa:	mov    rbx,rcx
   1400026ad:	lea    rdi,[rip+0xffffffffffffd94c]        # 0x140000000
   1400026b4:	mov    rcx,rdi
   1400026b7:	call   0x140002700
   1400026bc:	test   eax,eax
   1400026be:	je     0x1400026e2
   1400026c0:	sub    rbx,rdi
   1400026c3:	mov    rdx,rbx
   1400026c6:	mov    rcx,rdi
   1400026c9:	call   0x140002650
   1400026ce:	test   rax,rax
   1400026d1:	je     0x1400026e2
   1400026d3:	mov    eax,DWORD PTR [rax+0x24]
   1400026d6:	shr    eax,0x1f
   1400026d9:	not    eax
   1400026db:	and    eax,0x1
   1400026de:	jmp    0x1400026e2
   1400026e0:	xor    eax,eax
   1400026e2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400026e7:	add    rsp,0x20
   1400026eb:	pop    rdi
   1400026ec:	ret    
   1400026ed:	int3   
   1400026ee:	int3   
   1400026ef:	int3   
   1400026f0:	int3   
   1400026f1:	int3   
   1400026f2:	int3   
   1400026f3:	int3   
   1400026f4:	int3   
   1400026f5:	int3   
   1400026f6:	int3   
   1400026f7:	int3   
   1400026f8:	int3   
   1400026f9:	int3   
   1400026fa:	int3   
   1400026fb:	int3   
   1400026fc:	int3   
   1400026fd:	int3   
   1400026fe:	int3   
   1400026ff:	int3   
   140002700:	mov    rax,rcx
   140002703:	mov    ecx,0x5a4d
   140002708:	cmp    WORD PTR [rax],cx
   14000270b:	je     0x140002710
   14000270d:	xor    eax,eax
   14000270f:	ret    
   140002710:	movsxd rcx,DWORD PTR [rax+0x3c]
   140002714:	add    rcx,rax
   140002717:	xor    eax,eax
   140002719:	cmp    DWORD PTR [rcx],0x4550
   14000271f:	jne    0x14000272d
   140002721:	mov    edx,0x20b
   140002726:	cmp    WORD PTR [rcx+0x18],dx
   14000272a:	sete   al
   14000272d:	ret    
   14000272e:	int3   
   14000272f:	int3   
   140002730:	int3   
   140002731:	int3   
   140002732:	int3   
   140002733:	int3   
   140002734:	mov    QWORD PTR [rsp+0x20],rbx
   140002739:	push   rbp
   14000273a:	mov    rbp,rsp
   14000273d:	sub    rsp,0x20
   140002741:	and    QWORD PTR [rbp+0x18],0x0
   140002746:	movabs rbx,0x2b992ddfa232
   140002750:	mov    rax,QWORD PTR [rip+0x28b1]        # 0x140005008
   140002757:	cmp    rax,rbx
   14000275a:	jne    0x1400027ef
   140002760:	lea    rcx,[rbp+0x18]
   140002764:	call   QWORD PTR [rip+0x9a6]        # 0x140003110
   14000276a:	mov    rax,QWORD PTR [rbp+0x18]
   14000276e:	mov    QWORD PTR [rbp+0x10],rax
   140002772:	call   QWORD PTR [rip+0x988]        # 0x140003100
   140002778:	mov    eax,eax
   14000277a:	xor    QWORD PTR [rbp+0x10],rax
   14000277e:	call   QWORD PTR [rip+0x984]        # 0x140003108
   140002784:	mov    eax,eax
   140002786:	xor    QWORD PTR [rbp+0x10],rax
   14000278a:	call   QWORD PTR [rip+0x988]        # 0x140003118
   140002790:	mov    eax,eax
   140002792:	shl    rax,0x18
   140002796:	xor    QWORD PTR [rbp+0x10],rax
   14000279a:	call   QWORD PTR [rip+0x978]        # 0x140003118
   1400027a0:	mov    eax,eax
   1400027a2:	lea    rcx,[rbp+0x10]
   1400027a6:	xor    rax,QWORD PTR [rbp+0x10]
   1400027aa:	xor    rax,rcx
   1400027ad:	lea    rcx,[rbp+0x20]
   1400027b1:	mov    QWORD PTR [rbp+0x10],rax
   1400027b5:	call   QWORD PTR [rip+0x93d]        # 0x1400030f8
   1400027bb:	mov    eax,DWORD PTR [rbp+0x20]
   1400027be:	movabs rcx,0xffffffffffff
   1400027c8:	shl    rax,0x20
   1400027cc:	xor    rax,QWORD PTR [rbp+0x20]
   1400027d0:	xor    rax,QWORD PTR [rbp+0x10]
   1400027d4:	and    rax,rcx
   1400027d7:	movabs rcx,0x2b992ddfa233
   1400027e1:	cmp    rax,rbx
   1400027e4:	cmove  rax,rcx
   1400027e8:	mov    QWORD PTR [rip+0x2819],rax        # 0x140005008
   1400027ef:	mov    rbx,QWORD PTR [rsp+0x48]
   1400027f4:	not    rax
   1400027f7:	mov    QWORD PTR [rip+0x2812],rax        # 0x140005010
   1400027fe:	add    rsp,0x20
   140002802:	pop    rbp
   140002803:	ret    
   140002804:	int3   
   140002805:	int3   
   140002806:	int3   
   140002807:	int3   
   140002808:	int3   
   140002809:	int3   
   14000280a:	jmp    QWORD PTR [rip+0x9b8]        # 0x1400031c8
   140002810:	int3   
   140002811:	int3   
   140002812:	int3   
   140002813:	int3   
   140002814:	int3   
   140002815:	int3   
   140002816:	jmp    QWORD PTR [rip+0x9b4]        # 0x1400031d0
   14000281c:	int3   
   14000281d:	int3   
   14000281e:	int3   
   14000281f:	int3   
   140002820:	int3   
   140002821:	int3   
   140002822:	int3   
   140002823:	int3   
   140002824:	int3   
   140002825:	int3   
   140002826:	int3   
   140002827:	int3   
   140002828:	int3   
   140002829:	int3   
   14000282a:	int3   
   14000282b:	int3   
   14000282c:	int3   
   14000282d:	int3   
   14000282e:	int3   
   14000282f:	int3   
   140002830:	ret    0x0
   140002833:	int3   
   140002834:	int3   
   140002835:	int3   
   140002836:	int3   
   140002837:	int3   
   140002838:	int3   
   140002839:	int3   
   14000283a:	int3   
   14000283b:	int3   
   14000283c:	rex push rbx
   14000283e:	sub    rsp,0x20
   140002842:	mov    rbx,rcx
   140002845:	xor    ecx,ecx
   140002847:	call   QWORD PTR [rip+0x8a3]        # 0x1400030f0
   14000284d:	mov    rcx,rbx
   140002850:	call   QWORD PTR [rip+0x8ca]        # 0x140003120
   140002856:	call   QWORD PTR [rip+0x7c4]        # 0x140003020
   14000285c:	mov    rcx,rax
   14000285f:	mov    edx,0xc0000409
   140002864:	add    rsp,0x20
   140002868:	pop    rbx
   140002869:	rex.W jmp QWORD PTR [rip+0x8b8]        # 0x140003128
   140002870:	int3   
   140002871:	int3   
   140002872:	int3   
   140002873:	int3   
   140002874:	int3   
   140002875:	int3   
   140002876:	int3   
   140002877:	int3   
   140002878:	int3   
   140002879:	int3   
   14000287a:	int3   
   14000287b:	int3   
   14000287c:	int3   
   14000287d:	int3   
   14000287e:	int3   
   14000287f:	int3   
   140002880:	mov    QWORD PTR [rsp+0x8],rcx
   140002885:	sub    rsp,0x88
   14000288c:	lea    rcx,[rip+0x287d]        # 0x140005110
   140002893:	call   QWORD PTR [rip+0x9b7]        # 0x140003250
   140002899:	mov    rax,QWORD PTR [rip+0x2968]        # 0x140005208
   1400028a0:	mov    QWORD PTR [rsp+0x48],rax
   1400028a5:	xor    r8d,r8d
   1400028a8:	lea    rdx,[rsp+0x50]
   1400028ad:	mov    rcx,QWORD PTR [rsp+0x48]
   1400028b2:	call   QWORD PTR [rip+0x988]        # 0x140003240
   1400028b8:	mov    QWORD PTR [rsp+0x40],rax
   1400028bd:	cmp    QWORD PTR [rsp+0x40],0x0
   1400028c3:	je     0x140002907
   1400028c5:	mov    QWORD PTR [rsp+0x38],0x0
   1400028ce:	lea    rax,[rsp+0x58]
   1400028d3:	mov    QWORD PTR [rsp+0x30],rax
   1400028d8:	lea    rax,[rsp+0x60]
   1400028dd:	mov    QWORD PTR [rsp+0x28],rax
   1400028e2:	lea    rax,[rip+0x2827]        # 0x140005110
   1400028e9:	mov    QWORD PTR [rsp+0x20],rax
   1400028ee:	mov    r9,QWORD PTR [rsp+0x40]
   1400028f3:	mov    r8,QWORD PTR [rsp+0x48]
   1400028f8:	mov    rdx,QWORD PTR [rsp+0x50]
   1400028fd:	xor    ecx,ecx
   1400028ff:	call   QWORD PTR [rip+0x943]        # 0x140003248
   140002905:	jmp    0x14000292a
   140002907:	mov    rax,QWORD PTR [rip+0x289a]        # 0x1400051a8
   14000290e:	mov    rax,QWORD PTR [rax]
   140002911:	mov    QWORD PTR [rip+0x28f0],rax        # 0x140005208
   140002918:	mov    rax,QWORD PTR [rip+0x2889]        # 0x1400051a8
   14000291f:	add    rax,0x8
   140002923:	mov    QWORD PTR [rip+0x287e],rax        # 0x1400051a8
   14000292a:	mov    rax,QWORD PTR [rip+0x28d7]        # 0x140005208
   140002931:	mov    QWORD PTR [rip+0x2748],rax        # 0x140005080
   140002938:	mov    rax,QWORD PTR [rsp+0x90]
   140002940:	mov    QWORD PTR [rip+0x2849],rax        # 0x140005190
   140002947:	mov    DWORD PTR [rip+0x271f],0xc0000409        # 0x140005070
   140002951:	mov    DWORD PTR [rip+0x2719],0x1        # 0x140005074
   14000295b:	mov    DWORD PTR [rip+0x2723],0x3        # 0x140005088
   140002965:	mov    eax,0x8
   14000296a:	imul   rax,rax,0x0
   14000296e:	lea    rcx,[rip+0x271b]        # 0x140005090
   140002975:	mov    QWORD PTR [rcx+rax*1],0x2
   14000297d:	mov    eax,0x8
   140002982:	imul   rax,rax,0x1
   140002986:	lea    rcx,[rip+0x2703]        # 0x140005090
   14000298d:	mov    rdx,QWORD PTR [rip+0x2674]        # 0x140005008
   140002994:	mov    QWORD PTR [rcx+rax*1],rdx
   140002998:	mov    eax,0x8
   14000299d:	imul   rax,rax,0x2
   1400029a1:	lea    rcx,[rip+0x26e8]        # 0x140005090
   1400029a8:	mov    rdx,QWORD PTR [rip+0x2661]        # 0x140005010
   1400029af:	mov    QWORD PTR [rcx+rax*1],rdx
   1400029b3:	mov    eax,0x8
   1400029b8:	imul   rax,rax,0x0
   1400029bc:	mov    rcx,QWORD PTR [rip+0x2645]        # 0x140005008
   1400029c3:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   1400029c8:	mov    eax,0x8
   1400029cd:	imul   rax,rax,0x1
   1400029d1:	mov    rcx,QWORD PTR [rip+0x2638]        # 0x140005010
   1400029d8:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   1400029dd:	lea    rcx,[rip+0x93c]        # 0x140003320
   1400029e4:	call   0x14000283c
   1400029e9:	add    rsp,0x88
   1400029f0:	ret    
   1400029f1:	int3   
   1400029f2:	int3   
   1400029f3:	int3   
   1400029f4:	int3   
   1400029f5:	int3   
   1400029f6:	int3   
   1400029f7:	int3   
   1400029f8:	int3   
   1400029f9:	int3   
   1400029fa:	int3   
   1400029fb:	int3   
   1400029fc:	int3   
   1400029fd:	int3   
   1400029fe:	int3   
   1400029ff:	int3   
   140002a00:	int3   
   140002a01:	int3   
   140002a02:	int3   
   140002a03:	int3   
   140002a04:	int3   
   140002a05:	int3   
   140002a06:	int3   
   140002a07:	int3   
   140002a08:	sub    rsp,0x28
   140002a0c:	mov    r8,QWORD PTR [r9+0x38]
   140002a10:	mov    rcx,rdx
   140002a13:	mov    rdx,r9
   140002a16:	call   0x140002a2c
   140002a1b:	mov    eax,0x1
   140002a20:	add    rsp,0x28
   140002a24:	ret    
   140002a25:	int3   
   140002a26:	int3   
   140002a27:	int3   
   140002a28:	int3   
   140002a29:	int3   
   140002a2a:	int3   
   140002a2b:	int3   
   140002a2c:	rex push rbx
   140002a2e:	sub    rsp,0x20
   140002a32:	mov    r11d,DWORD PTR [r8]
   140002a35:	mov    rbx,rdx
   140002a38:	and    r11d,0xfffffff8
   140002a3c:	mov    r9,rcx
   140002a3f:	test   BYTE PTR [r8],0x4
   140002a43:	mov    r10,rcx
   140002a46:	je     0x140002a5b
   140002a48:	mov    eax,DWORD PTR [r8+0x8]
   140002a4c:	movsxd r10,DWORD PTR [r8+0x4]
   140002a50:	neg    eax
   140002a52:	add    r10,rcx
   140002a55:	movsxd rcx,eax
   140002a58:	and    r10,rcx
   140002a5b:	movsxd rax,r11d
   140002a5e:	mov    rdx,QWORD PTR [rax+r10*1]
   140002a62:	mov    rax,QWORD PTR [rbx+0x10]
   140002a66:	mov    ecx,DWORD PTR [rax+0x8]
   140002a69:	add    rcx,QWORD PTR [rbx+0x8]
   140002a6d:	test   BYTE PTR [rcx+0x3],0xf
   140002a71:	je     0x140002a7f
   140002a73:	movzx  eax,BYTE PTR [rcx+0x3]
   140002a77:	and    eax,0xfffffff0
   140002a7a:	cdqe   
   140002a7c:	add    r9,rax
   140002a7f:	xor    r9,rdx
   140002a82:	mov    rcx,r9
   140002a85:	add    rsp,0x20
   140002a89:	pop    rbx
   140002a8a:	jmp    0x1400024f0
   140002a8f:	int3   
   140002a90:	int3   
   140002a91:	int3   
   140002a92:	int3   
   140002a93:	int3   
   140002a94:	int3   
   140002a95:	int3   
   140002a96:	jmp    QWORD PTR [rip+0x764]        # 0x140003200
   140002a9c:	int3   
   140002a9d:	int3   
   140002a9e:	int3   
   140002a9f:	int3   
   140002aa0:	int3   
   140002aa1:	int3   
   140002aa2:	int3   
   140002aa3:	int3   
   140002aa4:	int3   
   140002aa5:	int3   
   140002aa6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140002ab0:	jmp    rax
   140002ab2:	int3   
   140002ab3:	int3   
   140002ab4:	int3   
   140002ab5:	int3   
   140002ab6:	int3   
   140002ab7:	int3   
   140002ab8:	int3   
   140002ab9:	int3   
   140002aba:	int3   
   140002abb:	int3   
   140002abc:	int3   
   140002abd:	int3   
   140002abe:	int3   
   140002abf:	int3   
   140002ac0:	int3   
   140002ac1:	int3   
   140002ac2:	int3   
   140002ac3:	int3   
   140002ac4:	int3   
   140002ac5:	int3   
   140002ac6:	rex push rbp
   140002ac8:	sub    rsp,0x20
   140002acc:	mov    rbp,rdx
   140002acf:	mov    rax,QWORD PTR [rcx]
   140002ad2:	mov    rdx,rcx
   140002ad5:	mov    ecx,DWORD PTR [rax]
   140002ad7:	call   0x14000257e
   140002adc:	nop
   140002add:	add    rsp,0x20
   140002ae1:	pop    rbp
   140002ae2:	ret    
   140002ae3:	int3   
   140002ae4:	int3   
   140002ae5:	int3   
   140002ae6:	int3   
   140002ae7:	int3   
   140002ae8:	int3   
   140002ae9:	int3   
   140002aea:	int3   
   140002aeb:	int3   
   140002aec:	int3   
   140002aed:	int3   
   140002aee:	int3   
   140002aef:	int3   
   140002af0:	rex push rbp
   140002af2:	sub    rsp,0x20
   140002af6:	mov    rbp,rdx
   140002af9:	mov    rax,QWORD PTR [rcx]
   140002afc:	xor    ecx,ecx
   140002afe:	cmp    DWORD PTR [rax],0xc0000005
   140002b04:	sete   cl
   140002b07:	mov    eax,ecx
   140002b09:	add    rsp,0x20
   140002b0d:	pop    rbp
   140002b0e:	ret    
   140002b0f:	int3   

Disassembly of section .rdata:

0000000140003000 <.rdata>:
   140003000:	pushf  
   140003001:	add    BYTE PTR ds:[rax],al
   140003004:	add    BYTE PTR [rax],al
   140003006:	add    BYTE PTR [rax],al
   140003008:	mov    al,0x3e
   14000300a:	add    BYTE PTR [rax],al
   14000300c:	add    BYTE PTR [rax],al
   14000300e:	add    BYTE PTR [rax],al
   140003010:	sar    BYTE PTR [rsi],cl
   140003012:	add    BYTE PTR [rax],al
   140003014:	add    BYTE PTR [rax],al
   140003016:	add    BYTE PTR [rax],al
   140003018:	call   0x14000305b
   14000301d:	add    BYTE PTR [rax],al
   14000301f:	add    BYTE PTR [rax+0x3e],cl
   140003025:	add    BYTE PTR [rax],al
   140003027:	add    BYTE PTR [rdx+0x3e],bh
   14000302a:	add    BYTE PTR [rax],al
   14000302c:	add    BYTE PTR [rax],al
   14000302e:	add    BYTE PTR [rax],al
   140003030:	ins    BYTE PTR es:[rdi],dx
   140003031:	add    BYTE PTR ds:[rax],al
   140003034:	add    BYTE PTR [rax],al
   140003036:	add    BYTE PTR [rax],al
   140003038:	pop    rsi
   140003039:	add    BYTE PTR ds:[rax],al
   14000303c:	add    BYTE PTR [rax],al
   14000303e:	add    BYTE PTR [rax],al
   140003040:	rex.WRX
   140003041:	add    BYTE PTR ds:[rax],al
   140003044:	add    BYTE PTR [rax],al
   140003046:	add    BYTE PTR [rax],al
   140003048:	ret    0x3e
   14000304b:	add    BYTE PTR [rax],al
   14000304d:	add    BYTE PTR [rax],al
   14000304f:	add    BYTE PTR [rsi],bh
   140003051:	add    BYTE PTR ds:[rax],al
   140003054:	add    BYTE PTR [rax],al
   140003056:	add    BYTE PTR [rax],al
   140003058:	rex.XB add BYTE PTR es:[r8],al
   14000305c:	add    BYTE PTR [rax],al
   14000305e:	add    BYTE PTR [rax],al
   140003060:	adc    al,0x43
   140003062:	add    BYTE PTR [rax],al
   140003064:	add    BYTE PTR [rax],al
   140003066:	add    BYTE PTR [rax],al
   140003068:	sub    al,0x3e
   14000306a:	add    BYTE PTR [rax],al
   14000306c:	add    BYTE PTR [rax],al
   14000306e:	add    BYTE PTR [rax],al
   140003070:	test   BYTE PTR [rdx+0x0],0x0
   140003074:	add    BYTE PTR [rax],al
   140003076:	add    BYTE PTR [rax],al
   140003078:	loop   0x1400030bc
   14000307a:	add    BYTE PTR [rax],al
   14000307c:	add    BYTE PTR [rax],al
   14000307e:	add    BYTE PTR [rax],al
   140003080:	rol    BYTE PTR [rdx+0x0],cl
   140003083:	add    BYTE PTR [rax],al
   140003085:	add    BYTE PTR [rax],al
   140003087:	add    al,al
   140003089:	rex.X add BYTE PTR [rax],al
   14000308c:	add    BYTE PTR [rax],al
   14000308e:	add    BYTE PTR [rax],al
   140003090:	stos   BYTE PTR es:[rdi],al
   140003091:	rex.X add BYTE PTR [rax],al
   140003094:	add    BYTE PTR [rax],al
   140003096:	add    BYTE PTR [rax],al
   140003098:	xchg   esi,eax
   140003099:	rex.X add BYTE PTR [rax],al
   14000309c:	add    BYTE PTR [rax],al
   14000309e:	add    BYTE PTR [rax],al
   1400030a0:	test   BYTE PTR [rdx+0x0],al
   1400030a3:	add    BYTE PTR [rax],al
   1400030a5:	add    BYTE PTR [rax],al
   1400030a7:	add    BYTE PTR [rdx+rax*2+0x0],dh
   1400030ab:	add    BYTE PTR [rax],al
   1400030ad:	add    BYTE PTR [rax],al
   1400030af:	add    BYTE PTR [rax],ah
   1400030b1:	add    BYTE PTR ds:[rax],al
   1400030b4:	add    BYTE PTR [rax],al
   1400030b6:	add    BYTE PTR [rax],al
   1400030b8:	or     bh,BYTE PTR [rsi]
   1400030ba:	add    BYTE PTR [rax],al
   1400030bc:	add    BYTE PTR [rax],al
   1400030be:	add    BYTE PTR [rax],al
   1400030c0:	(bad)  
   1400030c1:	cmp    eax,0x0
   1400030c6:	add    BYTE PTR [rax],al
   1400030c8:	repnz cmp eax,0x0
   1400030ce:	add    BYTE PTR [rax],al
   1400030d0:	loopne 0x14000310f
   1400030d2:	add    BYTE PTR [rax],al
   1400030d4:	add    BYTE PTR [rax],al
   1400030d6:	add    BYTE PTR [rax],al
   1400030d8:	add    al,0x43
   1400030da:	add    BYTE PTR [rax],al
   1400030dc:	add    BYTE PTR [rax],al
   1400030de:	add    BYTE PTR [rax],al
   1400030e0:	mov    WORD PTR [rcx+0x0],es
   1400030e3:	add    BYTE PTR [rax],al
   1400030e5:	add    BYTE PTR [rax],al
   1400030e7:	add    BYTE PTR [rcx+rax*2+0x0],dl
   1400030ee:	add    BYTE PTR [rax],al
   1400030f0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400030f1:	add    BYTE PTR [r8],al
   1400030f4:	add    BYTE PTR [rax],al
   1400030f6:	add    BYTE PTR [rax],al
   1400030f8:	(bad)
   1400030fc:	add    BYTE PTR [rax],al
   1400030fe:	add    BYTE PTR [rax],al
   140003100:	fiadd  WORD PTR [rcx+0x0]
   140003103:	add    BYTE PTR [rax],al
   140003105:	add    BYTE PTR [rax],al
   140003107:	add    ah,dh
   140003109:	add    BYTE PTR [r8],al
   14000310c:	add    BYTE PTR [rax],al
   14000310e:	add    BYTE PTR [rax],al
   140003110:	or     al,BYTE PTR [rdx+0x0]
   140003113:	add    BYTE PTR [rax],al
   140003115:	add    BYTE PTR [rax],al
   140003117:	add    BYTE PTR [rdx+rax*2],ah
   14000311a:	add    BYTE PTR [rax],al
   14000311c:	add    BYTE PTR [rax],al
   14000311e:	add    BYTE PTR [rax],al
   140003120:	xor    al,0x42
   140003122:	add    BYTE PTR [rax],al
   140003124:	add    BYTE PTR [rax],al
   140003126:	add    BYTE PTR [rax],al
   140003128:	push   rax
   140003129:	rex.X add BYTE PTR [rax],al
   14000312c:	add    BYTE PTR [rax],al
   14000312e:	add    BYTE PTR [rax],al
   140003130:	rex.X add BYTE PTR fs:[rax],al
	...
   140003140:	ds (bad) 
   140003142:	add    BYTE PTR [rax],al
   140003144:	add    BYTE PTR [rax],al
   140003146:	add    BYTE PTR [rax],al
   140003148:	pop    rdx
   140003149:	(bad)  
   14000314a:	add    BYTE PTR [rax],al
   14000314c:	add    BYTE PTR [rax],al
   14000314e:	add    BYTE PTR [rax],al
   140003150:	sub    bh,BYTE PTR [rdi]
   140003152:	add    BYTE PTR [rax],al
   140003154:	add    BYTE PTR [rax],al
   140003156:	add    BYTE PTR [rax],al
   140003158:	(bad)  
   140003159:	(bad)  
   14000315a:	add    BYTE PTR [rax],al
   14000315c:	add    BYTE PTR [rax],al
   14000315e:	add    BYTE PTR [rax],al
   140003160:	sbb    bh,BYTE PTR [rdi]
	...
   14000316e:	add    BYTE PTR [rax],al
   140003170:	push   0x41
   140003175:	add    BYTE PTR [rax],al
   140003177:	add    BYTE PTR [rax+0x41],dl
	...
   140003186:	add    BYTE PTR [rax],al
   140003188:	rol    BYTE PTR [rcx],cl
   14000318a:	add    BYTE PTR [rax],al
   14000318c:	add    BYTE PTR [rax],al
   14000318e:	add    BYTE PTR [rax+0x0],al
   140003194:	add    BYTE PTR [rax],al
   140003196:	add    BYTE PTR [rax],al
   140003198:	mov    ah,0x3f
   14000319a:	add    BYTE PTR [rax],al
   14000319c:	add    BYTE PTR [rax],al
   14000319e:	add    BYTE PTR [rax],al
   1400031a0:	(bad)  
   1400031a1:	(bad)  
   1400031a2:	add    BYTE PTR [rax],al
   1400031a4:	add    BYTE PTR [rax],al
   1400031a6:	add    BYTE PTR [rax],al
   1400031a8:	fdivr  DWORD PTR [rdi]
   1400031aa:	add    BYTE PTR [rax],al
   1400031ac:	add    BYTE PTR [rax],al
   1400031ae:	add    BYTE PTR [rax],al
   1400031b0:	loopne 0x1400031f1
   1400031b2:	add    BYTE PTR [rax],al
   1400031b4:	add    BYTE PTR [rax],al
   1400031b6:	add    BYTE PTR [rax],al
   1400031b8:	call   0x1400031fc
   1400031bd:	add    BYTE PTR [rax],al
   1400031bf:	add    dl,dh
   1400031c1:	(bad)  
   1400031c2:	add    BYTE PTR [rax],al
   1400031c4:	add    BYTE PTR [rax],al
   1400031c6:	add    BYTE PTR [rax],al
   1400031c8:	(bad)  
   1400031c9:	add    BYTE PTR [rax],al
   1400031cc:	add    BYTE PTR [rax],al
   1400031ce:	add    BYTE PTR [rax],al
   1400031d0:	adc    al,BYTE PTR [rax+0x0]
   1400031d3:	add    BYTE PTR [rax],al
   1400031d5:	add    BYTE PTR [rax],al
   1400031d7:	add    BYTE PTR [rsi+0x3f],ah
   1400031dd:	add    BYTE PTR [rax],al
   1400031df:	add    BYTE PTR [rax+rax*2],dh
   1400031e2:	add    BYTE PTR [rax],al
   1400031e4:	add    BYTE PTR [rax],al
   1400031e6:	add    BYTE PTR [rax],al
   1400031e8:	add    BYTE PTR ds:[rax],al
   1400031ec:	add    BYTE PTR [rax],al
   1400031ee:	add    BYTE PTR [rax],al
   1400031f0:	push   rsi
   1400031f1:	add    BYTE PTR [rax],al
   1400031f4:	add    BYTE PTR [rax],al
   1400031f6:	add    BYTE PTR [rax],al
   1400031f8:	cwde   
   1400031f9:	(bad)  
   1400031fa:	add    BYTE PTR [rax],al
   1400031fc:	add    BYTE PTR [rax],al
   1400031fe:	add    BYTE PTR [rax],al
   140003200:	pop    rsp
   140003201:	rex.XB add BYTE PTR [r8],al
   140003204:	add    BYTE PTR [rax],al
   140003206:	add    BYTE PTR [rax],al
   140003208:	mov    WORD PTR [rdi],?
   14000320a:	add    BYTE PTR [rax],al
   14000320c:	add    BYTE PTR [rax],al
   14000320e:	add    BYTE PTR [rax],al
   140003210:	js     0x140003251
   140003212:	add    BYTE PTR [rax],al
   140003214:	add    BYTE PTR [rax],al
   140003216:	add    BYTE PTR [rax],al
   140003218:	sub    al,BYTE PTR [rax+0x0]
   14000321b:	add    BYTE PTR [rax],al
   14000321d:	add    BYTE PTR [rax],al
   14000321f:	add    BYTE PTR [rax+0x3f],al
   140003225:	add    BYTE PTR [rax],al
   140003227:	add    BYTE PTR [rbx+rax*2+0x0],al
   14000322b:	add    BYTE PTR [rax],al
   14000322d:	add    BYTE PTR [rax],al
   14000322f:	add    BYTE PTR [rsi],dh
   140003231:	rex.XB add BYTE PTR [r8],al
	...
   140003240:	jle    0x140003282
   140003242:	add    BYTE PTR [rax],al
   140003244:	add    BYTE PTR [rax],al
   140003246:	add    BYTE PTR [rax],al
   140003248:	cwde   
   140003249:	add    BYTE PTR [rax],al
   14000324c:	add    BYTE PTR [rax],al
   14000324e:	add    BYTE PTR [rax],al
   140003250:	push   0x40
	...
   14000325e:	add    BYTE PTR [rax],al
   140003260:	xor    al,0x41
   140003262:	add    BYTE PTR [rax],al
   140003264:	add    BYTE PTR [rax],al
   140003266:	add    BYTE PTR [rax],al
   140003268:	loopne 0x1400032aa
   14000326a:	add    BYTE PTR [rax],al
   14000326c:	add    BYTE PTR [rax],al
   14000326e:	add    BYTE PTR [rax],al
   140003270:	retf   0x40
   140003273:	add    BYTE PTR [rax],al
   140003275:	add    BYTE PTR [rax],al
   140003277:	add    BYTE PTR [rsi+0x40],dh
   14000327d:	add    BYTE PTR [rax],al
   14000327f:	add    al,bh
   140003281:	add    BYTE PTR [rax],al
   140003284:	add    BYTE PTR [rax],al
   140003286:	add    BYTE PTR [rax],al
   140003288:	or     al,BYTE PTR [rcx+0x0]
   14000328b:	add    BYTE PTR [rax],al
   14000328d:	add    BYTE PTR [rax],al
   14000328f:	add    BYTE PTR [rcx+rax*2],bl
	...
   14000329e:	add    BYTE PTR [rax],al
   1400032a0:	xor    BYTE PTR [rax],ch
   1400032a2:	add    BYTE PTR [rax+0x1],al
   1400032a5:	add    BYTE PTR [rax],al
   1400032a7:	add    BYTE PTR [rax+0x140002a],dh
	...
   1400032b5:	add    BYTE PTR [rax],al
   1400032b7:	add    al,dh
   1400032b9:	and    DWORD PTR [rax],eax
   1400032bb:	rex add DWORD PTR [rax],eax
	...
   1400032ce:	add    BYTE PTR [rax],al
   1400032d0:	adc    BYTE PTR [rcx],ah
   1400032d2:	add    BYTE PTR [rax+0x1],al
   1400032d5:	add    BYTE PTR [rax],al
   1400032d7:	add    BYTE PTR [rax+0x25],ah
   1400032da:	add    BYTE PTR [rax+0x1],al
	...
   1400032e5:	add    BYTE PTR [rax],al
   1400032e7:	add    al,dl
   1400032e9:	adc    DWORD PTR [rax],eax
   1400032eb:	add    al,ah
   1400032ed:	adc    DWORD PTR [rax],eax
   1400032ef:	add    BYTE PTR [rax+0x12],dl
   1400032f2:	add    BYTE PTR [rax],al
   1400032f4:	adc    BYTE PTR [rdx],0x0
   1400032f7:	add    BYTE PTR [rax],al
   1400032f9:	adc    eax,DWORD PTR [rax]
   1400032fb:	add    BYTE PTR [rax+0x15],dh
   1400032fe:	add    BYTE PTR [rax],al
   140003300:	adc    BYTE PTR [rcx],ah
   140003302:	add    BYTE PTR [rax],al
   140003304:	lock and DWORD PTR [rax],eax
   140003307:	add    al,al
   140003309:	and    al,0x0
   14000330b:	add    BYTE PTR [rax],ah
   14000330d:	and    eax,0x25600000
   140003312:	add    BYTE PTR [rax],al
   140003314:	rex
   140003315:	add    BYTE PTR es:[rax],al
   140003318:	xor    BYTE PTR [rax],ch
   14000331a:	add    BYTE PTR [rax],al
   14000331c:	sub    BYTE PTR [rax],0x0
   14000331f:	add    BYTE PTR [rax+0x50],dh
   140003322:	add    BYTE PTR [rax+0x1],al
   140003325:	add    BYTE PTR [rax],al
   140003327:	add    BYTE PTR [rax],dl
   140003329:	push   rcx
   14000332a:	add    BYTE PTR [rax+0x1],al
   14000332d:	add    BYTE PTR [rax],al
   14000332f:	add    BYTE PTR [rax+0x1400012],al
   140003335:	add    BYTE PTR [rax],al
   140003337:	add    al,dl
   140003339:	adc    DWORD PTR [rax],eax
   14000333b:	rex add DWORD PTR [rax],eax
   14000333e:	add    BYTE PTR [rax],al
   140003340:	loopne 0x140003353
   140003342:	add    BYTE PTR [rax+0x1],al
   140003345:	add    BYTE PTR [rax],al
   140003347:	add    BYTE PTR [rax],al
   140003349:	adc    eax,DWORD PTR [rax]
   14000334b:	rex add DWORD PTR [rax],eax
   14000334e:	add    BYTE PTR [rax],al
   140003350:	push   rax
   140003351:	adc    al,BYTE PTR [rax]
   140003353:	rex add DWORD PTR [rax],eax
   140003356:	add    BYTE PTR [rax],al
   140003358:	and    BYTE PTR [rax],al
   14000335a:	sub    al,0x0
   14000335c:	or     DWORD PTR [rax],eax
   14000335e:	or     al,BYTE PTR [rax]
	...
   140003368:	sub    eax,0x6d004500
   14000336d:	add    BYTE PTR [rdx+0x0],ah
   140003370:	add    BYTE PTR gs:[rax+rax*1+0x64],ah
   140003375:	add    BYTE PTR [rcx+0x0],ch
   140003378:	outs   dx,BYTE PTR ds:[rsi]
   140003379:	add    BYTE PTR [rdi+0x0],ah
   14000337c:	add    BYTE PTR [rax],al
   14000337e:	add    BYTE PTR [rax],al
   140003380:	(bad)  
   140003381:	add    BYTE PTR [rdx+0x0],dl
   140003384:	add    BYTE PTR [r15+0x0],r8b
   140003388:	push   rbx
   140003389:	add    BYTE PTR [rbp+0x0],al
   14000338c:	push   rdx
   14000338d:	add    BYTE PTR [rsi+0x0],dl
   140003390:	add    BYTE PTR [r10+0x0],r10b
   140003394:	add    BYTE PTR [rax],al
   140003396:	add    BYTE PTR [rax],al
   140003398:	sub    eax,0x45005200
   14000339d:	add    BYTE PTR [rdi+0x0],al
   1400033a0:	push   rbx
   1400033a1:	add    BYTE PTR [rbp+0x0],al
   1400033a4:	push   rdx
   1400033a5:	add    BYTE PTR [rsi+0x0],dl
   1400033a8:	add    BYTE PTR [r10+0x0],r10b
   1400033ac:	add    BYTE PTR [rax],al
   1400033ae:	add    BYTE PTR [rax],al
   1400033b0:	(bad)  
   1400033b1:	add    BYTE PTR [rbp+0x0],dl
   1400033b4:	rex.WRX add BYTE PTR [rdx+0x0],r10b
   1400033b8:	add    BYTE PTR [r15+0x0],r8b
   1400033bc:	push   rbx
   1400033bd:	add    BYTE PTR [rbp+0x0],al
   1400033c0:	push   rdx
   1400033c1:	add    BYTE PTR [rsi+0x0],dl
   1400033c4:	add    BYTE PTR [r10+0x0],r10b
	...
   1400033d0:	sub    eax,0x4e005500
   1400033d5:	add    BYTE PTR [rdx+0x0],dl
   1400033d8:	add    BYTE PTR [r15+0x0],r8b
   1400033dc:	push   rbx
   1400033dd:	add    BYTE PTR [rbp+0x0],al
   1400033e0:	push   rdx
   1400033e1:	add    BYTE PTR [rsi+0x0],dl
   1400033e4:	add    BYTE PTR [r10+0x0],r10b
	...
   1400033f0:	sub    eax,0x4c004300
   1400033f5:	add    BYTE PTR [rbx+0x0],dl
   1400033f8:	rex.WB add BYTE PTR [r8+rax*1+0x3a],al
   1400033fd:	add    BYTE PTR [rax],al
   1400033ff:	add    BYTE PTR [rip+0x49005000],ch        # 0x189008405
   140003405:	add    BYTE PTR [rax+rax*1+0x3a],al
   140003409:	add    BYTE PTR [rax],al
   14000340b:	add    BYTE PTR [rax],al
   14000340d:	add    BYTE PTR [rax],al
   14000340f:	add    BYTE PTR [rip+0xfd5e804],bl        # 0x14fd61c19
   140003415:	xchg   edx,eax
   140003416:	jmp    0xf1fbec60
   14000341b:	fidivr WORD PTR [rax+0x15e6e2c]
   140003421:	fild   WORD PTR [rdx]
   140003423:	add    BYTE PTR [rax],al
   140003425:	add    BYTE PTR [rax],al
   140003427:	add    al,al
   140003429:	add    BYTE PTR [rax],al
   14000342b:	add    BYTE PTR [rax],al
   14000342d:	add    BYTE PTR [rax],al
   14000342f:	rex.RX add BYTE PTR [rax],r8b
   140003432:	add    BYTE PTR [rax],al
   140003434:	add    BYTE PTR [rax],al
   140003436:	add    BYTE PTR [rax],al
   140003438:	rol    BYTE PTR [rax],0x0
   14000343b:	add    BYTE PTR [rax],al
   14000343d:	add    BYTE PTR [rax],al
   14000343f:	rex.RX add DWORD PTR [rax],r8d
   140003442:	add    BYTE PTR [rax],al
   140003444:	add    BYTE PTR [rax],al
   140003446:	add    BYTE PTR [rax],al
   140003448:	rol    BYTE PTR [rax],0x0
   14000344b:	add    BYTE PTR [rax],al
   14000344d:	add    BYTE PTR [rax],al
   14000344f:	rex.RX add BYTE PTR [rax],r8b
	...
   14000345e:	add    BYTE PTR [rax],al
   140003460:	movsxd eax,DWORD PTR [rax]
   140003462:	outs   dx,DWORD PTR ds:[rsi]
   140003463:	add    BYTE PTR [rbp+0x0],ch
   140003466:	movsxd eax,DWORD PTR [rax]
   140003468:	je     0x14000346a
   14000346a:	ins    BYTE PTR es:[rdi],dx
   14000346b:	add    BYTE PTR [rbx],dh
   14000346d:	add    BYTE PTR [rdx],dh
   14000346f:	add    BYTE PTR [rsi],ch
   140003471:	add    BYTE PTR [rax+rax*1+0x6c],ah
   140003475:	add    BYTE PTR [rax+rax*1+0x0],ch
   140003479:	add    BYTE PTR [rax],al
   14000347b:	add    BYTE PTR [rax],al
   14000347d:	add    BYTE PTR [rax],al
   14000347f:	add    BYTE PTR [rcx+0x0],cl
   140003482:	add    BYTE PTR [r8+rax*1+0x6f],r9b
   140003487:	add    BYTE PTR [rdi+0x0],dh
   14000348a:	push   rbp
   14000348b:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000348f:	add    BYTE PTR [rax+rax*1+0x42],ch
   140003493:	add    BYTE PTR [rdx+0x0],dh
   140003496:	outs   dx,DWORD PTR ds:[rsi]
   140003497:	add    BYTE PTR [rbx+0x0],ch
   14000349a:	add    BYTE PTR gs:[rdx+0x0],dh
   14000349e:	push   rdx
   14000349f:	add    BYTE PTR [rbp+0x0],ah
   1400034a2:	(bad)  
   1400034a3:	add    BYTE PTR [rax+rax*1+0x79],ah
   1400034a7:	add    BYTE PTR [rbp+0x0],al
   1400034aa:	jbe    0x1400034ac
   1400034ac:	add    BYTE PTR gs:[rsi+0x0],ch
   1400034b0:	je     0x1400034b2
   1400034b2:	add    BYTE PTR ss:[rax+rax*1],dh
   1400034b6:	add    BYTE PTR [rax],al
   1400034b8:	rex.WB add BYTE PTR [r13+0x0],al
   1400034bc:	rex.WR add BYTE PTR [rdi+0x0],r13b
   1400034c0:	ja     0x1400034c2
   1400034c2:	push   rbp
   1400034c3:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400034c7:	add    BYTE PTR [rax+rax*1+0x42],ch
   1400034cb:	add    BYTE PTR [rdx+0x0],dh
   1400034ce:	outs   dx,DWORD PTR ds:[rsi]
   1400034cf:	add    BYTE PTR [rbx+0x0],ch
   1400034d2:	add    BYTE PTR gs:[rdx+0x0],dh
   1400034d6:	add    BYTE PTR [rcx+0x0],r12b
   1400034da:	je     0x1400034dc
   1400034dc:	(bad)  
   1400034dd:	add    BYTE PTR [rbp+0x0],al
   1400034e0:	jbe    0x1400034e2
   1400034e2:	add    BYTE PTR gs:[rsi+0x0],ch
   1400034e6:	je     0x1400034e8
   1400034e8:	add    BYTE PTR ss:[rax+rax*1],dh
   1400034ec:	add    BYTE PTR [rax],al
   1400034ee:	add    BYTE PTR [rax],al
   1400034f0:	rex.WB add BYTE PTR [r13+0x0],al
   1400034f4:	rex.WR add BYTE PTR [rdi+0x0],r13b
   1400034f8:	ja     0x1400034fa
   1400034fa:	push   rbp
   1400034fb:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400034ff:	add    BYTE PTR [rax+rax*1+0x42],ch
   140003503:	add    BYTE PTR [rdx+0x0],dh
   140003506:	outs   dx,DWORD PTR ds:[rsi]
   140003507:	add    BYTE PTR [rbx+0x0],ch
   14000350a:	add    BYTE PTR gs:[rdx+0x0],dh
   14000350e:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140003512:	outs   dx,BYTE PTR ds:[rsi]
   140003513:	add    BYTE PTR [rcx+0x0],ch
   140003516:	jae    0x140003518
   140003518:	push   0x64006500
   14000351d:	add    BYTE PTR [rbp+0x0],al
   140003520:	jbe    0x140003522
   140003522:	add    BYTE PTR gs:[rsi+0x0],ch
   140003526:	je     0x140003528
   140003528:	add    BYTE PTR ss:[rax+rax*1],dh
   14000352c:	add    BYTE PTR [rax],al
   14000352e:	add    BYTE PTR [rax],al
   140003530:	rex.WB add BYTE PTR [r13+0x0],al
   140003534:	rex.WR add BYTE PTR [rdi+0x0],r13b
   140003538:	ja     0x14000353a
   14000353a:	push   rbp
   14000353b:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000353f:	add    BYTE PTR [rax+rax*1+0x42],ch
   140003543:	add    BYTE PTR [rdx+0x0],dh
   140003546:	outs   dx,DWORD PTR ds:[rsi]
   140003547:	add    BYTE PTR [rbx+0x0],ch
   14000354a:	add    BYTE PTR gs:[rdx+0x0],dh
   14000354e:	rex.WRB add BYTE PTR [r13+0x0],r14b
   140003552:	je     0x140003554
   140003554:	add    BYTE PTR gs:[rax+0x0],bh
   140003558:	add    BYTE PTR ss:[rax+rax*1],dh
   14000355c:	add    BYTE PTR [rax],al
   14000355e:	add    BYTE PTR [rax],al
   140003560:	rex.WB add BYTE PTR [r13+0x0],al
   140003564:	rex.WR add BYTE PTR [rdi+0x0],r13b
   140003568:	ja     0x14000356a
   14000356a:	push   rbp
   14000356b:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000356f:	add    BYTE PTR [rax+rax*1+0x42],ch
   140003573:	add    BYTE PTR [rdx+0x0],dh
   140003576:	outs   dx,DWORD PTR ds:[rsi]
   140003577:	add    BYTE PTR [rbx+0x0],ch
   14000357a:	add    BYTE PTR gs:[rdx+0x0],dh
   14000357e:	push   rbx
   14000357f:	add    BYTE PTR [rax+0x0],ch
   140003582:	(bad)  
   140003583:	add    BYTE PTR [rdx+0x0],dh
   140003586:	add    BYTE PTR gs:[rax+rax*1+0x4d],ah
   14000358b:	add    BYTE PTR [rbp+0x0],ah
   14000358e:	ins    DWORD PTR es:[rdi],dx
   14000358f:	add    BYTE PTR [rsi],dh
   140003591:	add    BYTE PTR [rax+rax*1],dh
   140003594:	add    BYTE PTR [rax],al
   140003596:	add    BYTE PTR [rax],al
   140003598:	and    eax,0x25007300
   14000359d:	add    BYTE PTR [rax+rax*1+0x0],ah
   1400035a1:	add    BYTE PTR [rax],al
   1400035a3:	add    BYTE PTR [rax],al
   1400035a5:	add    BYTE PTR [rax],al
   1400035a7:	add    BYTE PTR [rbp+0x0],dh
   1400035aa:	jae    0x1400035ac
   1400035ac:	add    BYTE PTR gs:[rdx+0x0],dh
   1400035b0:	xor    eax,DWORD PTR [rax]
   1400035b2:	xor    al,BYTE PTR [rax]
   1400035b4:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   1400035b9:	add    BYTE PTR [rax+rax*1+0x0],ch
   1400035bd:	add    BYTE PTR [rax],al
   1400035bf:	add    BYTE PTR [rbx+0x65],dl
   1400035c2:	je     0x140003614
   1400035c4:	jb     0x140003635
   1400035c6:	movsxd esp,DWORD PTR [rbp+0x73]
   1400035c9:	jae    0x14000360f
   1400035cb:	push   rax
   1400035cc:	rex.WB
   1400035cd:	rex.B ja 0x140003631
   1400035d0:	jb     0x140003637
	...
   1400035e2:	add    BYTE PTR [rax],al
   1400035e4:	fnstcw WORD PTR [rcx]
   1400035e6:	lahf   
   1400035e7:	push   rbp
   1400035e8:	add    BYTE PTR [rax],al
   1400035ea:	add    BYTE PTR [rax],al
   1400035ec:	add    al,BYTE PTR [rax]
   1400035ee:	add    BYTE PTR [rax],al
   1400035f0:	add    BYTE PTR es:[rax],al
   1400035f3:	add    al,ah
   1400035f5:	add    BYTE PTR ss:[rax],al
   1400035f8:	loopne 0x140003620
   1400035fa:	add    BYTE PTR [rax],al
   1400035fc:	add    BYTE PTR [rax],al
   1400035fe:	add    BYTE PTR [rax],al
   140003600:	fnstcw WORD PTR [rcx]
   140003602:	lahf   
   140003603:	push   rbp
   140003604:	add    BYTE PTR [rax],al
   140003606:	add    BYTE PTR [rax],al
   140003608:	or     eax,0xe0000000
   14000360d:	add    DWORD PTR [rax],eax
   14000360f:	add    BYTE PTR [rdi+rsi*1],bl
   140003612:	add    BYTE PTR [rax],al
   140003614:	sbb    al,0x27
	...
   14000363e:	add    BYTE PTR [rax],al
   140003640:	movabs al,ds:0x0
	...
   140003695:	add    BYTE PTR [rax],al
   140003697:	add    BYTE PTR [rax],cl
   140003699:	push   rax
   14000369a:	add    BYTE PTR [rax+0x1],al
	...
   1400036ad:	add    BYTE PTR [rax],al
   1400036af:	add    BYTE PTR [rax+0x1400032],ah
   1400036b5:	add    BYTE PTR [rax],al
   1400036b7:	add    BYTE PTR [rax+0x1400032],ch
   1400036bd:	add    BYTE PTR [rax],al
   1400036bf:	add    al,ch
   1400036c1:	xor    al,BYTE PTR [rax]
   1400036c3:	rex add DWORD PTR [rax],eax
   1400036c6:	add    BYTE PTR [rax],al
   1400036c8:	(bad)  
	...
   1400036d1:	xor    eax,0x0
	...
   1400036de:	add    BYTE PTR [rax],al
   1400036e0:	push   rdx
   1400036e1:	push   rbx
   1400036e2:	rex.R push rbx
   1400036e4:	outs   dx,BYTE PTR ds:[rsi]
   1400036e5:	jmp    0xf69a585f
   1400036ea:	rex.WRXB
   1400036eb:	rex.XB mov r13b,0x99
   1400036ee:	addr32 push rdx
   1400036f0:	imul   edi,DWORD PTR [rbx-0x6a],0x1a9
   1400036f7:	add    BYTE PTR [rcx+0x65],ch
   1400036fa:	ins    BYTE PTR es:[rdi],dx
   1400036fb:	outs   dx,DWORD PTR ds:[rsi]
   1400036fc:	ja     0x140003773
   1400036fe:	je     0x140003769
   140003700:	ins    BYTE PTR es:[rdi],dx
   140003701:	cs jo  0x140003768
   140003704:	(bad)  
	...
   140003719:	add    BYTE PTR [rax],al
   14000371b:	add    BYTE PTR [rdi+0x43],al
   14000371e:	push   rsp
   14000371f:	rex.WR add BYTE PTR [rax],r10b
   140003722:	add    BYTE PTR [rax],al
   140003724:	pushf  
   140003725:	sbb    al,BYTE PTR [rax]
   140003727:	add    BYTE PTR [rsi],ch
   140003729:	je     0x140003790
   14000372b:	js     0x1400037a1
   14000372d:	and    al,0x6d
   14000372f:	outs   dx,BYTE PTR ds:[rsi]
   140003730:	add    BYTE PTR [rax],al
   140003732:	add    BYTE PTR [rax],al
   140003734:	movabs al,ds:0x2e0000001200002a
   14000373d:	je     0x1400037a4
   14000373f:	js     0x1400037b5
   140003741:	and    al,0x6d
   140003743:	outs   dx,BYTE PTR ds:[rsi]
   140003744:	and    al,0x30
   140003746:	xor    BYTE PTR [rax],al
   140003748:	shr    BYTE PTR [rdx],0x0
   14000374b:	add    BYTE PTR [rax+0x0],dl
   14000374e:	add    BYTE PTR [rax],al
   140003750:	cs je  0x1400037b8
   140003753:	js     0x1400037c9
   140003755:	and    al,0x78
   140003757:	add    BYTE PTR [rax],al
   140003759:	xor    BYTE PTR [rax],al
   14000375b:	add    BYTE PTR [rax+0x2e000002],ah
   140003761:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x352461
   140003769:	add    BYTE PTR [rax],al
   14000376b:	add    BYTE PTR [rax+0x10000032],ah
   140003771:	add    BYTE PTR [rax],al
   140003773:	add    BYTE PTR [rsi],ch
   140003775:	xor    BYTE PTR [rax],dh
   140003777:	movsxd esp,DWORD PTR [rsi+0x67]
   14000377a:	add    BYTE PTR [rax],al
   14000377c:	mov    al,0x32
   14000377e:	add    BYTE PTR [rax],al
   140003780:	or     BYTE PTR [rax],al
   140003782:	add    BYTE PTR [rax],al
   140003784:	cs rex.XB push r10
   140003787:	push   rsp
   140003788:	and    al,0x58
   14000378a:	rex.XB
   14000378b:	add    BYTE PTR [r8],al
   14000378e:	add    BYTE PTR [rax],al
   140003790:	mov    eax,0x8000032
   140003795:	add    BYTE PTR [rax],al
   140003797:	add    BYTE PTR [rsi],ch
   140003799:	rex.XB push r10
   14000379b:	push   rsp
   14000379c:	and    al,0x58
   14000379e:	rex.XB
   14000379f:	rex.B
   1400037a0:	add    BYTE PTR [r8],al
   1400037a3:	add    al,al
   1400037a5:	xor    al,BYTE PTR [rax]
   1400037a7:	add    BYTE PTR [rax],cl
   1400037a9:	add    BYTE PTR [rax],al
   1400037ab:	add    BYTE PTR [rsi],ch
   1400037ad:	rex.XB push r10
   1400037af:	push   rsp
   1400037b0:	and    al,0x58
   1400037b2:	rex.XB pop r10
   1400037b4:	add    BYTE PTR [rax],al
   1400037b6:	add    BYTE PTR [rax],al
   1400037b8:	enter  0x32,0x0
   1400037bc:	or     BYTE PTR [rax],al
   1400037be:	add    BYTE PTR [rax],al
   1400037c0:	cs rex.XB push r10
   1400037c3:	push   rsp
   1400037c4:	and    al,0x58
   1400037c6:	rex.WB
   1400037c7:	add    BYTE PTR [r8],al
   1400037ca:	add    BYTE PTR [rax],al
   1400037cc:	shl    BYTE PTR [rdx],1
   1400037ce:	add    BYTE PTR [rax],al
   1400037d0:	or     BYTE PTR [rax],al
   1400037d2:	add    BYTE PTR [rax],al
   1400037d4:	cs rex.XB push r10
   1400037d7:	push   rsp
   1400037d8:	and    al,0x58
   1400037da:	rex.WB
   1400037db:	rex.B
   1400037dc:	add    BYTE PTR [r8],al
   1400037df:	add    al,bl
   1400037e1:	xor    al,BYTE PTR [rax]
   1400037e3:	add    BYTE PTR [rax],cl
   1400037e5:	add    BYTE PTR [rax],al
   1400037e7:	add    BYTE PTR [rsi],ch
   1400037e9:	rex.XB push r10
   1400037eb:	push   rsp
   1400037ec:	and    al,0x58
   1400037ee:	rex.WB pop r9
   1400037f0:	add    BYTE PTR [rax],al
   1400037f2:	add    BYTE PTR [rax],al
   1400037f4:	loopne 0x140003828
   1400037f6:	add    BYTE PTR [rax],al
   1400037f8:	or     BYTE PTR [rax],al
   1400037fa:	add    BYTE PTR [rax],al
   1400037fc:	cs rex.XB push r10
   1400037ff:	push   rsp
   140003800:	and    al,0x58
   140003802:	rex.WB pop r10
   140003804:	add    BYTE PTR [rax],al
   140003806:	add    BYTE PTR [rax],al
   140003808:	call   0x17800383f
   14000380d:	add    BYTE PTR [rax],al
   14000380f:	add    BYTE PTR [rsi],ch
   140003811:	imul   sp,WORD PTR [ebx+esi*2+0x24],0x78
   140003819:	add    BYTE PTR [rax],al
   14000381b:	add    BYTE PTR [rax],ah
   14000381d:	xor    eax,DWORD PTR [rax]
   14000381f:	add    al,al
   140003821:	add    eax,DWORD PTR [rax]
   140003823:	add    BYTE PTR [rsi],ch
   140003825:	jb     0x14000388b
   140003827:	(bad)  
   140003828:	je     0x14000388b
   14000382a:	add    BYTE PTR [rax],al
   14000382c:	loopne 0x140003864
   14000382e:	add    BYTE PTR [rax],al
   140003830:	sbb    al,0x2
   140003832:	add    BYTE PTR [rax],al
   140003834:	cs jb  0x14000389b
   140003837:	(bad)  
   140003838:	je     0x14000389b
   14000383a:	and    al,0x7a
   14000383c:	jp     0x1400038b8
   14000383e:	fs (bad) 
   140003840:	add    BYTE PTR [eax],al
   140003843:	add    BYTE PTR [rax],al
   140003845:	cmp    DWORD PTR [rax],eax
   140003847:	add    BYTE PTR [rcx+rax*1+0x782e0000],bl
   14000384e:	fs (bad) 
   140003850:	je     0x1400038b3
   140003852:	add    BYTE PTR [rax],al
   140003854:	pushf  
   140003855:	cmp    al,BYTE PTR [rax]
   140003857:	add    BYTE PTR [rax+rax*1+0x692e0000],cl
   14000385e:	fs (bad) 
   140003860:	je     0x1400038c3
   140003862:	and    al,0x32
   140003864:	add    BYTE PTR [rax],al
   140003866:	add    BYTE PTR [rax],al
   140003868:	sub    BYTE PTR [rbx],bh
   14000386a:	add    BYTE PTR [rax],al
   14000386c:	adc    al,0x0
   14000386e:	add    BYTE PTR [rax],al
   140003870:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x332461
   140003879:	add    BYTE PTR [rax],al
   14000387b:	add    BYTE PTR [rax+0x3b],al
   14000387e:	add    BYTE PTR [rax],al
   140003880:	movabs al,ds:0x746164692e000002
   140003889:	(bad)  
   14000388a:	and    al,0x34
   14000388c:	add    BYTE PTR [rax],al
   14000388e:	add    BYTE PTR [rax],al
   140003890:	loopne 0x1400038cf
   140003892:	add    BYTE PTR [rax],al
   140003894:	xchg   BYTE PTR [rip+0x692e0000],al        # 0x1a92e389a
   14000389a:	fs (bad) 
   14000389c:	je     0x1400038ff
   14000389e:	and    al,0x36
   1400038a0:	add    BYTE PTR [rax],al
   1400038a2:	add    BYTE PTR [rax],al
   1400038a4:	add    BYTE PTR [rax+0x0],dl
   1400038a7:	add    BYTE PTR [rax],dh
   1400038a9:	add    BYTE PTR [rax],al
   1400038ab:	add    BYTE PTR [rsi],ch
   1400038ad:	fs (bad) 
   1400038af:	je     0x140003912
   1400038b1:	add    BYTE PTR [rax],al
   1400038b3:	add    BYTE PTR [rax],dh
   1400038b5:	push   rax
   1400038b6:	add    BYTE PTR [rax],al
   1400038b8:	fadd   QWORD PTR [rsi]
   1400038ba:	add    BYTE PTR [rax],al
   1400038bc:	cs (bad) 
   1400038bf:	jae    0x1400038c1
   1400038c1:	add    BYTE PTR [rax],al
   1400038c3:	add    BYTE PTR [rax],al
   1400038c5:	(bad)  
   1400038c6:	add    BYTE PTR [rax],al
   1400038c8:	(bad)  
   1400038c9:	add    DWORD PTR [rax],eax
   1400038cb:	add    BYTE PTR [rsi],ch
   1400038cd:	jo     0x140003933
   1400038cf:	(bad)  
   1400038d0:	je     0x140003933
   1400038d2:	add    BYTE PTR [rax],al
   1400038d4:	add    BYTE PTR [rax+0x0],dh
   1400038d7:	add    BYTE PTR [rax],bl
   1400038d9:	add    al,0x0
   1400038db:	add    BYTE PTR [rsi],ch
   1400038dd:	jb     0x140003952
   1400038df:	jb     0x140003944
   1400038e1:	and    al,0x30
   1400038e3:	xor    DWORD PTR [rax],eax
   1400038e5:	add    BYTE PTR [rax],al
   1400038e7:	add    BYTE PTR [rax],ah
   1400038e9:	je     0x1400038eb
   1400038eb:	add    BYTE PTR [rax+0x28],dh
   1400038ee:	add    eax,DWORD PTR [rax]
   1400038f0:	cs jb  0x140003966
   1400038f3:	jb     0x140003958
   1400038f5:	and    al,0x30
   1400038f7:	xor    al,BYTE PTR [rax]
   1400038f9:	add    BYTE PTR [rax],al
   1400038fb:	add    BYTE PTR [rax],al
   1400038fd:	add    BYTE PTR [rax],al
   1400038ff:	add    BYTE PTR [rcx],al
   140003901:	(bad)  
   140003902:	add    al,BYTE PTR [rax]
   140003904:	(bad)  
   140003905:	xor    al,BYTE PTR [rdx]
   140003907:	xor    BYTE PTR [rcx],al
   140003909:	or     al,BYTE PTR [rdx]
   14000390b:	add    BYTE PTR [rdx],cl
   14000390d:	xor    al,BYTE PTR [rsi]
   14000390f:	xor    BYTE PTR [rcx],al
   140003911:	clts   
   140003913:	add    BYTE PTR [rdi],cl
   140003915:	or     al,BYTE PTR fs:[rax]
   140003918:	sysenter 
   14000391a:	or     DWORD PTR [rax],eax
   14000391c:	rsqrtps xmm1,XMMWORD PTR [rbx]
   14000391f:	jo     0x140003922
   140003921:	or     al,BYTE PTR [rax+rax*1]
   140003924:	or     dh,BYTE PTR [rsi+rax*1]
   140003927:	add    BYTE PTR [rdx],cl
   140003929:	xor    al,BYTE PTR [rsi]
   14000392b:	jo     0x14000392e
   14000392d:	add    al,0x1
   14000392f:	add    BYTE PTR [rdx+rax*2],al
   140003932:	add    BYTE PTR [rax],al
   140003934:	add    DWORD PTR [rsi],eax
   140003936:	add    al,BYTE PTR [rax]
   140003938:	(bad)  
   140003939:	push   rdx
   14000393a:	add    dh,BYTE PTR [rax]
   14000393c:	add    DWORD PTR [rip+0xffffffffa20d0005],ecx        # 0xe20d3947
   140003942:	(bad)  
   140003943:	rol    BYTE PTR [rax+riz*2],0x3
   140003947:	xor    BYTE PTR [rdx],al
   140003949:	push   rax
   14000394a:	add    BYTE PTR [rax],al
   14000394c:	sbb    DWORD PTR [rdx],ebp
   14000394e:	or     eax,DWORD PTR [rax]
   140003950:	sbb    al,0x34
   140003952:	and    DWORD PTR [rax],eax
   140003954:	sbb    al,0x1
   140003956:	sbb    BYTE PTR [rax],al
   140003958:	adc    al,dh
   14000395a:	(bad)  
   14000395b:	loopne 0x140003969
   14000395d:	ror    BYTE PTR [rdx],1
   14000395f:	ror    BYTE PTR [rax],0x70
   140003962:	(bad)  
   140003963:	(bad)  
   140003964:	(bad)  
   140003965:	push   rax
   140003966:	add    BYTE PTR [rax],al
   140003968:	or     BYTE PTR [rdx],ch
   14000396a:	add    BYTE PTR [rax],al
   14000396c:	mov    al,0x0
   14000396e:	add    BYTE PTR [rax],al
   140003970:	sbb    DWORD PTR [rdi+rax*1],esp
   140003973:	add    BYTE PTR [rdx],dl
   140003975:	fs push rbp
   140003977:	add    BYTE PTR [rdx],dl
   140003979:	xor    al,0x54
   14000397b:	add    BYTE PTR [rdx],dl
   14000397d:	add    DWORD PTR [rax+0x0],edx
   140003980:	or     esi,DWORD PTR [rax+0x0]
   140003983:	add    BYTE PTR [rax],cl
   140003985:	sub    al,BYTE PTR [rax]
   140003987:	add    BYTE PTR [rax+0x2],dh
   14000398a:	add    BYTE PTR [rax],al
   14000398c:	add    DWORD PTR [rdx],edx
   14000398e:	add    eax,0xe421200
   140003993:	jo     0x1400039a2
   140003995:	(bad)  
   140003996:	or     al,0x50
   140003998:	or     esi,DWORD PTR [rax]
   14000399a:	add    BYTE PTR [rax],al
   14000399c:	sbb    DWORD PTR [rdi],ebx
   14000399e:	add    eax,0x4d340d00
   1400039a3:	add    BYTE PTR [rip+0x6004a01],cl        # 0x1460083aa
   1400039a9:	jo     0x1400039ab
   1400039ab:	add    BYTE PTR [rax],cl
   1400039ad:	sub    al,BYTE PTR [rax]
   1400039af:	add    BYTE PTR [rax+0x2],al
   1400039b2:	add    BYTE PTR [rax],al
   1400039b4:	sbb    DWORD PTR [rdi],ebx
   1400039b6:	add    eax,0x4a340d00
   1400039bb:	add    BYTE PTR [rip+0x6004801],cl        # 0x1460081c2
   1400039c1:	jo     0x1400039c3
   1400039c3:	add    BYTE PTR [rax],cl
   1400039c5:	sub    al,BYTE PTR [rax]
   1400039c7:	add    BYTE PTR [rax],dh
   1400039c9:	add    al,BYTE PTR [rax]
   1400039cb:	add    BYTE PTR [rcx],bl
   1400039cd:	sub    ecx,DWORD PTR [rbx]
   1400039cf:	add    BYTE PTR [rcx],bl
   1400039d1:	push   rsp
   1400039d2:	push   rcx
   1400039d3:	add    BYTE PTR [rcx],bl
   1400039d5:	xor    al,0x50
   1400039d7:	add    BYTE PTR [rcx],bl
   1400039d9:	add    DWORD PTR [rdx+0x0],ecx
   1400039dc:	adc    dh,al
   1400039de:	adc    al,ah
   1400039e0:	(bad)  
   1400039e1:	ror    BYTE PTR [rax+rsi*2],0xb
   1400039e5:	(bad)  
   1400039e6:	add    BYTE PTR [rax],al
   1400039e8:	or     BYTE PTR [rdx],ch
   1400039ea:	add    BYTE PTR [rax],al
   1400039ec:	add    al,BYTE PTR [rax]
   1400039ef:	add    BYTE PTR [rcx],al
   1400039f1:	add    al,0x1
   1400039f3:	add    BYTE PTR [rdx+riz*2],al
   1400039f6:	add    BYTE PTR [rax],al
   1400039f8:	or     DWORD PTR [rbx+rcx*1],ebx
   1400039fb:	add    BYTE PTR [rsp+rsi*2],bl
   1400039fe:	sbb    al,0x0
   140003a00:	sbb    al,0x64
   140003a02:	sbb    eax,DWORD PTR [rax]
   140003a04:	sbb    al,0x34
   140003a06:	sbb    al,BYTE PTR [rax]
   140003a08:	sbb    al,0x1
   140003a0a:	(bad)  
   140003a0b:	add    BYTE PTR [rip+0x11e013f0],dl        # 0x151e04e01
   140003a11:	rol    BYTE PTR [rax],0x0
   140003a14:	(bad)  
   140003a15:	sub    BYTE PTR [rax],al
   140003a17:	add    BYTE PTR [rcx],al
   140003a19:	add    BYTE PTR [rax],al
   140003a1b:	add    BYTE PTR [rax+0x22],dh
   140003a1e:	add    BYTE PTR [rax],al
   140003a20:	data16 and al,0x0
   140003a23:	add    dh,al
   140003a25:	sub    al,BYTE PTR [rax]
   140003a27:	add    BYTE PTR [rsi+0x24],ah
   140003a2a:	add    BYTE PTR [rax],al
   140003a2c:	add    BYTE PTR [rax],al
   140003a2e:	add    BYTE PTR [rax],al
   140003a30:	add    DWORD PTR [rax],eax
   140003a32:	add    BYTE PTR [rax],al
   140003a34:	or     DWORD PTR [rcx+rax*1],eax
   140003a37:	add    BYTE PTR [rdx+riz*1],al
   140003a3a:	add    BYTE PTR [rax],al
   140003a3c:	(bad)  
   140003a3d:	sub    BYTE PTR [rax],al
   140003a3f:	add    BYTE PTR [rcx],al
   140003a41:	add    BYTE PTR [rax],al
   140003a43:	add    BYTE PTR [rbp+riz*1+0x25d20000],bl
   140003a4a:	add    BYTE PTR [rax],al
   140003a4c:	add    DWORD PTR [rax],eax
   140003a4e:	add    BYTE PTR [rax],al
   140003a50:	shl    BYTE PTR [rip+0xa090000],cl        # 0x14a093a56
   140003a56:	add    al,0x0
   140003a58:	or     dh,BYTE PTR [rsi+rax*1]
   140003a5b:	add    BYTE PTR [rdx],cl
   140003a5d:	xor    al,BYTE PTR [rsi]
   140003a5f:	jo     0x140003a77
   140003a61:	sub    BYTE PTR [rax],al
   140003a63:	add    BYTE PTR [rcx],al
   140003a65:	add    BYTE PTR [rax],al
   140003a67:	add    BYTE PTR [rbp-0x1fffffda],ch
   140003a6d:	add    BYTE PTR es:[rax],al
   140003a70:	lock sub al,BYTE PTR [rax]
   140003a73:	add    al,ah
   140003a75:	add    BYTE PTR es:[rax],al
   140003a78:	add    DWORD PTR [rsi],eax
   140003a7a:	add    al,BYTE PTR [rax]
   140003a7c:	(bad)  
   140003a7d:	xor    al,BYTE PTR [rdx]
   140003a7f:	push   rax
   140003a80:	add    DWORD PTR [rip+0x340d0004],ecx        # 0x1740d3a8a
   140003a86:	or     DWORD PTR [rax],eax
   140003a88:	or     eax,0x1500632
   140003a8d:	or     al,0x2
   140003a8f:	add    BYTE PTR [rcx+rax*1],cl
   140003a92:	adc    DWORD PTR [rax],eax
   140003a94:	add    BYTE PTR [rax],al
   140003a96:	add    BYTE PTR [rax],al
   140003a98:	add    DWORD PTR [rax],eax
   140003a9a:	add    BYTE PTR [rax],al
   140003a9c:	rex cmp eax,DWORD PTR [rax]
	...
   140003aa7:	add    al,bh
   140003aa9:	add    BYTE PTR ds:[rax],al
   140003aac:	add    BYTE PTR [rax],dh
   140003aae:	add    BYTE PTR [rax],al
   140003ab0:	cmp    BYTE PTR [rax+rax*1],0x0
	...
   140003abc:	ins    BYTE PTR es:[rdi],dx
   140003abd:	(bad)  
   140003abe:	add    BYTE PTR [rax],al
   140003ac0:	rex xor DWORD PTR [rax],eax
   140003ac3:	add    al,bl
   140003ac5:	cmp    al,0x0
	...
   140003acf:	add    BYTE PTR [rdx+0x40],cl
   140003ad2:	add    BYTE PTR [rax],al
   140003ad4:	cwde   
   140003ad5:	xor    DWORD PTR [rax],eax
   140003ad7:	add    BYTE PTR [rax+0x3d],al
   140003add:	add    BYTE PTR [rax],al
   140003adf:	add    BYTE PTR [rax],al
   140003ae1:	add    BYTE PTR [rax],al
   140003ae3:	add    BYTE PTR [rax+rax*2+0x32400000],ch
   140003aea:	add    BYTE PTR [rax],al
   140003aec:	movabs al,ds:0x3d
   140003af5:	add    BYTE PTR [rax],al
   140003af7:	add    BYTE PTR [rsi+0x41],al
   140003afa:	add    BYTE PTR [rax],al
   140003afc:	(bad)  
   140003afd:	xor    al,BYTE PTR [rax]
   140003aff:	add    BYTE PTR [rax+0x3c],dh
   140003b05:	add    BYTE PTR [rax],al
   140003b07:	add    BYTE PTR [rax],al
   140003b09:	add    BYTE PTR [rax],al
   140003b0b:	add    BYTE PTR [rax+0x70000041],al
   140003b11:	xor    DWORD PTR [rax],eax
   140003b13:	add    al,cl
   140003b15:	cmp    al,0x0
	...
   140003b1f:	add    BYTE PTR [rsi+0x43],cl
   140003b22:	add    BYTE PTR [rax],al
   140003b24:	mov    BYTE PTR [rcx],dh
	...
   140003b3e:	add    BYTE PTR [rax],al
   140003b40:	pushf  
   140003b41:	add    BYTE PTR ds:[rax],al
   140003b44:	add    BYTE PTR [rax],al
   140003b46:	add    BYTE PTR [rax],al
   140003b48:	mov    al,0x3e
   140003b4a:	add    BYTE PTR [rax],al
   140003b4c:	add    BYTE PTR [rax],al
   140003b4e:	add    BYTE PTR [rax],al
   140003b50:	sar    BYTE PTR [rsi],cl
   140003b52:	add    BYTE PTR [rax],al
   140003b54:	add    BYTE PTR [rax],al
   140003b56:	add    BYTE PTR [rax],al
   140003b58:	call   0x140003b9b
   140003b5d:	add    BYTE PTR [rax],al
   140003b5f:	add    BYTE PTR [rax+0x3e],cl
   140003b65:	add    BYTE PTR [rax],al
   140003b67:	add    BYTE PTR [rdx+0x3e],bh
   140003b6a:	add    BYTE PTR [rax],al
   140003b6c:	add    BYTE PTR [rax],al
   140003b6e:	add    BYTE PTR [rax],al
   140003b70:	ins    BYTE PTR es:[rdi],dx
   140003b71:	add    BYTE PTR ds:[rax],al
   140003b74:	add    BYTE PTR [rax],al
   140003b76:	add    BYTE PTR [rax],al
   140003b78:	pop    rsi
   140003b79:	add    BYTE PTR ds:[rax],al
   140003b7c:	add    BYTE PTR [rax],al
   140003b7e:	add    BYTE PTR [rax],al
   140003b80:	rex.WRX
   140003b81:	add    BYTE PTR ds:[rax],al
   140003b84:	add    BYTE PTR [rax],al
   140003b86:	add    BYTE PTR [rax],al
   140003b88:	ret    0x3e
   140003b8b:	add    BYTE PTR [rax],al
   140003b8d:	add    BYTE PTR [rax],al
   140003b8f:	add    BYTE PTR [rsi],bh
   140003b91:	add    BYTE PTR ds:[rax],al
   140003b94:	add    BYTE PTR [rax],al
   140003b96:	add    BYTE PTR [rax],al
   140003b98:	rex.XB add BYTE PTR es:[r8],al
   140003b9c:	add    BYTE PTR [rax],al
   140003b9e:	add    BYTE PTR [rax],al
   140003ba0:	adc    al,0x43
   140003ba2:	add    BYTE PTR [rax],al
   140003ba4:	add    BYTE PTR [rax],al
   140003ba6:	add    BYTE PTR [rax],al
   140003ba8:	sub    al,0x3e
   140003baa:	add    BYTE PTR [rax],al
   140003bac:	add    BYTE PTR [rax],al
   140003bae:	add    BYTE PTR [rax],al
   140003bb0:	test   BYTE PTR [rdx+0x0],0x0
   140003bb4:	add    BYTE PTR [rax],al
   140003bb6:	add    BYTE PTR [rax],al
   140003bb8:	loop   0x140003bfc
   140003bba:	add    BYTE PTR [rax],al
   140003bbc:	add    BYTE PTR [rax],al
   140003bbe:	add    BYTE PTR [rax],al
   140003bc0:	rol    BYTE PTR [rdx+0x0],cl
   140003bc3:	add    BYTE PTR [rax],al
   140003bc5:	add    BYTE PTR [rax],al
   140003bc7:	add    al,al
   140003bc9:	rex.X add BYTE PTR [rax],al
   140003bcc:	add    BYTE PTR [rax],al
   140003bce:	add    BYTE PTR [rax],al
   140003bd0:	stos   BYTE PTR es:[rdi],al
   140003bd1:	rex.X add BYTE PTR [rax],al
   140003bd4:	add    BYTE PTR [rax],al
   140003bd6:	add    BYTE PTR [rax],al
   140003bd8:	xchg   esi,eax
   140003bd9:	rex.X add BYTE PTR [rax],al
   140003bdc:	add    BYTE PTR [rax],al
   140003bde:	add    BYTE PTR [rax],al
   140003be0:	test   BYTE PTR [rdx+0x0],al
   140003be3:	add    BYTE PTR [rax],al
   140003be5:	add    BYTE PTR [rax],al
   140003be7:	add    BYTE PTR [rdx+rax*2+0x0],dh
   140003beb:	add    BYTE PTR [rax],al
   140003bed:	add    BYTE PTR [rax],al
   140003bef:	add    BYTE PTR [rax],ah
   140003bf1:	add    BYTE PTR ds:[rax],al
   140003bf4:	add    BYTE PTR [rax],al
   140003bf6:	add    BYTE PTR [rax],al
   140003bf8:	or     bh,BYTE PTR [rsi]
   140003bfa:	add    BYTE PTR [rax],al
   140003bfc:	add    BYTE PTR [rax],al
   140003bfe:	add    BYTE PTR [rax],al
   140003c00:	(bad)  
   140003c01:	cmp    eax,0x0
   140003c06:	add    BYTE PTR [rax],al
   140003c08:	repnz cmp eax,0x0
   140003c0e:	add    BYTE PTR [rax],al
   140003c10:	loopne 0x140003c4f
   140003c12:	add    BYTE PTR [rax],al
   140003c14:	add    BYTE PTR [rax],al
   140003c16:	add    BYTE PTR [rax],al
   140003c18:	add    al,0x43
   140003c1a:	add    BYTE PTR [rax],al
   140003c1c:	add    BYTE PTR [rax],al
   140003c1e:	add    BYTE PTR [rax],al
   140003c20:	mov    WORD PTR [rcx+0x0],es
   140003c23:	add    BYTE PTR [rax],al
   140003c25:	add    BYTE PTR [rax],al
   140003c27:	add    BYTE PTR [rcx+rax*2+0x0],dl
   140003c2e:	add    BYTE PTR [rax],al
   140003c30:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140003c31:	add    BYTE PTR [r8],al
   140003c34:	add    BYTE PTR [rax],al
   140003c36:	add    BYTE PTR [rax],al
   140003c38:	(bad)
   140003c3c:	add    BYTE PTR [rax],al
   140003c3e:	add    BYTE PTR [rax],al
   140003c40:	fiadd  WORD PTR [rcx+0x0]
   140003c43:	add    BYTE PTR [rax],al
   140003c45:	add    BYTE PTR [rax],al
   140003c47:	add    ah,dh
   140003c49:	add    BYTE PTR [r8],al
   140003c4c:	add    BYTE PTR [rax],al
   140003c4e:	add    BYTE PTR [rax],al
   140003c50:	or     al,BYTE PTR [rdx+0x0]
   140003c53:	add    BYTE PTR [rax],al
   140003c55:	add    BYTE PTR [rax],al
   140003c57:	add    BYTE PTR [rdx+rax*2],ah
   140003c5a:	add    BYTE PTR [rax],al
   140003c5c:	add    BYTE PTR [rax],al
   140003c5e:	add    BYTE PTR [rax],al
   140003c60:	xor    al,0x42
   140003c62:	add    BYTE PTR [rax],al
   140003c64:	add    BYTE PTR [rax],al
   140003c66:	add    BYTE PTR [rax],al
   140003c68:	push   rax
   140003c69:	rex.X add BYTE PTR [rax],al
   140003c6c:	add    BYTE PTR [rax],al
   140003c6e:	add    BYTE PTR [rax],al
   140003c70:	rex.X add BYTE PTR fs:[rax],al
	...
   140003c80:	ds (bad) 
   140003c82:	add    BYTE PTR [rax],al
   140003c84:	add    BYTE PTR [rax],al
   140003c86:	add    BYTE PTR [rax],al
   140003c88:	pop    rdx
   140003c89:	(bad)  
   140003c8a:	add    BYTE PTR [rax],al
   140003c8c:	add    BYTE PTR [rax],al
   140003c8e:	add    BYTE PTR [rax],al
   140003c90:	sub    bh,BYTE PTR [rdi]
   140003c92:	add    BYTE PTR [rax],al
   140003c94:	add    BYTE PTR [rax],al
   140003c96:	add    BYTE PTR [rax],al
   140003c98:	(bad)  
   140003c99:	(bad)  
   140003c9a:	add    BYTE PTR [rax],al
   140003c9c:	add    BYTE PTR [rax],al
   140003c9e:	add    BYTE PTR [rax],al
   140003ca0:	sbb    bh,BYTE PTR [rdi]
	...
   140003cae:	add    BYTE PTR [rax],al
   140003cb0:	push   0x41
   140003cb5:	add    BYTE PTR [rax],al
   140003cb7:	add    BYTE PTR [rax+0x41],dl
	...
   140003cc6:	add    BYTE PTR [rax],al
   140003cc8:	rol    BYTE PTR [rcx],cl
   140003cca:	add    BYTE PTR [rax],al
   140003ccc:	add    BYTE PTR [rax],al
   140003cce:	add    BYTE PTR [rax+0x0],al
   140003cd4:	add    BYTE PTR [rax],al
   140003cd6:	add    BYTE PTR [rax],al
   140003cd8:	mov    ah,0x3f
   140003cda:	add    BYTE PTR [rax],al
   140003cdc:	add    BYTE PTR [rax],al
   140003cde:	add    BYTE PTR [rax],al
   140003ce0:	(bad)  
   140003ce1:	(bad)  
   140003ce2:	add    BYTE PTR [rax],al
   140003ce4:	add    BYTE PTR [rax],al
   140003ce6:	add    BYTE PTR [rax],al
   140003ce8:	fdivr  DWORD PTR [rdi]
   140003cea:	add    BYTE PTR [rax],al
   140003cec:	add    BYTE PTR [rax],al
   140003cee:	add    BYTE PTR [rax],al
   140003cf0:	loopne 0x140003d31
   140003cf2:	add    BYTE PTR [rax],al
   140003cf4:	add    BYTE PTR [rax],al
   140003cf6:	add    BYTE PTR [rax],al
   140003cf8:	call   0x140003d3c
   140003cfd:	add    BYTE PTR [rax],al
   140003cff:	add    dl,dh
   140003d01:	(bad)  
   140003d02:	add    BYTE PTR [rax],al
   140003d04:	add    BYTE PTR [rax],al
   140003d06:	add    BYTE PTR [rax],al
   140003d08:	(bad)  
   140003d09:	add    BYTE PTR [rax],al
   140003d0c:	add    BYTE PTR [rax],al
   140003d0e:	add    BYTE PTR [rax],al
   140003d10:	adc    al,BYTE PTR [rax+0x0]
   140003d13:	add    BYTE PTR [rax],al
   140003d15:	add    BYTE PTR [rax],al
   140003d17:	add    BYTE PTR [rsi+0x3f],ah
   140003d1d:	add    BYTE PTR [rax],al
   140003d1f:	add    BYTE PTR [rax+rax*2],dh
   140003d22:	add    BYTE PTR [rax],al
   140003d24:	add    BYTE PTR [rax],al
   140003d26:	add    BYTE PTR [rax],al
   140003d28:	add    BYTE PTR ds:[rax],al
   140003d2c:	add    BYTE PTR [rax],al
   140003d2e:	add    BYTE PTR [rax],al
   140003d30:	push   rsi
   140003d31:	add    BYTE PTR [rax],al
   140003d34:	add    BYTE PTR [rax],al
   140003d36:	add    BYTE PTR [rax],al
   140003d38:	cwde   
   140003d39:	(bad)  
   140003d3a:	add    BYTE PTR [rax],al
   140003d3c:	add    BYTE PTR [rax],al
   140003d3e:	add    BYTE PTR [rax],al
   140003d40:	pop    rsp
   140003d41:	rex.XB add BYTE PTR [r8],al
   140003d44:	add    BYTE PTR [rax],al
   140003d46:	add    BYTE PTR [rax],al
   140003d48:	mov    WORD PTR [rdi],?
   140003d4a:	add    BYTE PTR [rax],al
   140003d4c:	add    BYTE PTR [rax],al
   140003d4e:	add    BYTE PTR [rax],al
   140003d50:	js     0x140003d91
   140003d52:	add    BYTE PTR [rax],al
   140003d54:	add    BYTE PTR [rax],al
   140003d56:	add    BYTE PTR [rax],al
   140003d58:	sub    al,BYTE PTR [rax+0x0]
   140003d5b:	add    BYTE PTR [rax],al
   140003d5d:	add    BYTE PTR [rax],al
   140003d5f:	add    BYTE PTR [rax+0x3f],al
   140003d65:	add    BYTE PTR [rax],al
   140003d67:	add    BYTE PTR [rbx+rax*2+0x0],al
   140003d6b:	add    BYTE PTR [rax],al
   140003d6d:	add    BYTE PTR [rax],al
   140003d6f:	add    BYTE PTR [rsi],dh
   140003d71:	rex.XB add BYTE PTR [r8],al
	...
   140003d80:	jle    0x140003dc2
   140003d82:	add    BYTE PTR [rax],al
   140003d84:	add    BYTE PTR [rax],al
   140003d86:	add    BYTE PTR [rax],al
   140003d88:	cwde   
   140003d89:	add    BYTE PTR [rax],al
   140003d8c:	add    BYTE PTR [rax],al
   140003d8e:	add    BYTE PTR [rax],al
   140003d90:	push   0x40
	...
   140003d9e:	add    BYTE PTR [rax],al
   140003da0:	xor    al,0x41
   140003da2:	add    BYTE PTR [rax],al
   140003da4:	add    BYTE PTR [rax],al
   140003da6:	add    BYTE PTR [rax],al
   140003da8:	loopne 0x140003dea
   140003daa:	add    BYTE PTR [rax],al
   140003dac:	add    BYTE PTR [rax],al
   140003dae:	add    BYTE PTR [rax],al
   140003db0:	retf   0x40
   140003db3:	add    BYTE PTR [rax],al
   140003db5:	add    BYTE PTR [rax],al
   140003db7:	add    BYTE PTR [rsi+0x40],dh
   140003dbd:	add    BYTE PTR [rax],al
   140003dbf:	add    al,bh
   140003dc1:	add    BYTE PTR [rax],al
   140003dc4:	add    BYTE PTR [rax],al
   140003dc6:	add    BYTE PTR [rax],al
   140003dc8:	or     al,BYTE PTR [rcx+0x0]
   140003dcb:	add    BYTE PTR [rax],al
   140003dcd:	add    BYTE PTR [rax],al
   140003dcf:	add    BYTE PTR [rcx+rax*2],bl
	...
   140003dde:	add    BYTE PTR [rax],al
   140003de0:	movabs eax,ds:0x695670616d6e5505
   140003de9:	gs ja  0x140003e3b
   140003dec:	imul   r13w,WORD PTR [rbp+r12*2+0x0],0x33c
   140003df4:	rex.W
   140003df5:	gs (bad) 
   140003df7:	jo     0x140003e3a
   140003df9:	ins    BYTE PTR es:[rdi],dx
   140003dfa:	ins    BYTE PTR es:[rdi],dx
   140003dfb:	outs   dx,DWORD PTR ds:[rsi]
   140003dfc:	movsxd eax,DWORD PTR [rax]
   140003dfe:	rex add ecx,DWORD PTR [rax+0x65]
   140003e02:	(bad)  
   140003e03:	jo     0x140003e4b
   140003e05:	jb     0x140003e6c
   140003e07:	add    BYTE PTR gs:[rax],al
   140003e0a:	enter  0x5705,0x61
   140003e0e:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x6e695372
   140003e16:	ins    BYTE PTR es:[edi],dx
   140003e18:	gs rex.WRXB (bad) 
   140003e1b:	push   0x65
   140003e1d:	movsxd esi,DWORD PTR [rax+rax*1+0x8]
   140003e21:	add    eax,0x45746553
   140003e26:	jbe    0x140003e8d
   140003e28:	outs   dx,BYTE PTR ds:[rsi]
   140003e29:	je     0x140003e2b
   140003e2b:	add    BYTE PTR [rbx+0x74654702],ch
   140003e31:	push   rax
   140003e32:	jb     0x140003ea3
   140003e34:	movsxd esp,DWORD PTR [rbp+0x73]
   140003e37:	jae    0x140003e81
   140003e39:	gs (bad) 
   140003e3b:	jo     0x140003e3d
   140003e3d:	add    BYTE PTR [rdi+0x2],dl
   140003e40:	rex.RXB
   140003e41:	gs je  0x140003e90
   140003e44:	(bad)  
   140003e45:	jae    0x140003ebb
   140003e47:	rex.RB jb 0x140003ebc
   140003e4a:	outs   dx,DWORD PTR ds:[rsi]
   140003e4b:	jb     0x140003e4d
   140003e4d:	add    BYTE PTR [rbx],ah
   140003e4f:	add    eax,0x4c746553
   140003e54:	(bad)  
   140003e55:	jae    0x140003ecb
   140003e57:	rex.RB jb 0x140003ecc
   140003e5a:	outs   dx,DWORD PTR ds:[rsi]
   140003e5b:	jb     0x140003e5d
   140003e5d:	add    BYTE PTR [rdi+0x73655204],ch
   140003e63:	gs je  0x140003eab
   140003e66:	jbe    0x140003ecd
   140003e68:	outs   dx,BYTE PTR ds:[rsi]
   140003e69:	je     0x140003e6b
   140003e6b:	add    BYTE PTR [rbp+0x0],bh
   140003e6e:	rex.XB ins BYTE PTR es:[rdi],dx
   140003e70:	outs   dx,DWORD PTR ds:[rsi]
   140003e71:	jae    0x140003ed8
   140003e73:	rex.W (bad) 
   140003e75:	outs   dx,BYTE PTR ds:[rsi]
   140003e76:	fs ins BYTE PTR es:[rdi],dx
   140003e78:	add    BYTE PTR gs:[rcx+rax*1+0x65657246],ah
   140003e80:	imul   r12,QWORD PTR [rdx+0x72],0x797261
   140003e88:	adc    BYTE PTR [rdx],al
   140003e8a:	rex.RXB
   140003e8b:	gs je  0x140003ed1
   140003e8e:	jne    0x140003f02
   140003e90:	jb     0x140003ef7
   140003e92:	outs   dx,BYTE PTR ds:[rsi]
   140003e93:	je     0x140003ee5
   140003e95:	jb     0x140003f06
   140003e97:	movsxd esp,DWORD PTR [rbp+0x73]
   140003e9a:	jae    0x140003e9c
   140003e9c:	outs   dx,BYTE PTR ds:[rsi]
   140003e9d:	add    al,BYTE PTR [rdi+0x65]
   140003ea0:	je     0x140003eef
   140003ea2:	outs   dx,DWORD PTR ds:[rsi]
   140003ea3:	fs jne 0x140003f12
   140003ea6:	gs rex.W (bad) 
   140003ea9:	outs   dx,BYTE PTR ds:[rsi]
   140003eaa:	fs ins BYTE PTR es:[rdi],dx
   140003eac:	gs push rdi
   140003eae:	add    BYTE PTR [rax],al
   140003eb0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140003eb1:	add    al,BYTE PTR [rdi+0x65]
   140003eb4:	je     0x140003f06
   140003eb6:	jb     0x140003f27
   140003eb8:	movsxd eax,DWORD PTR [rcx+0x64]
   140003ebb:	fs jb  0x140003f23
   140003ebe:	jae    0x140003f33
   140003ec0:	add    BYTE PTR [rax],al
   140003ec2:	mov    ah,0x0
   140003ec4:	rex.XB jb 0x140003f2c
   140003ec7:	(bad)  
   140003ec8:	je     0x140003f2f
   140003eca:	rex.RB jbe 0x140003f32
   140003ecd:	outs   dx,BYTE PTR ds:[rsi]
   140003ece:	je     0x140003f27
   140003ed0:	add    BYTE PTR [rax],al
   140003ed2:	add    r9d,DWORD PTR [rax+0x65]
   140003ed6:	(bad)  
   140003ed7:	jo     0x140003f2c
   140003ed9:	gs je  0x140003f25
   140003edc:	outs   dx,BYTE PTR ds:[rsi]
   140003edd:	outs   dx,WORD PTR ds:[rsi]
   140003edf:	jb     0x140003f4e
   140003ee1:	(bad)  
   140003ee2:	je     0x140003f4d
   140003ee4:	outs   dx,DWORD PTR ds:[rsi]
   140003ee5:	outs   dx,BYTE PTR ds:[rsi]
   140003ee6:	add    BYTE PTR [rax],al
   140003ee8:	out    0x0,al
   140003eea:	rex.XB jb 0x140003f52
   140003eed:	(bad)  
   140003eee:	je     0x140003f55
   140003ef0:	push   rsp
   140003ef1:	push   0x64616572
   140003ef6:	add    BYTE PTR [rax],al
   140003ef8:	rex.WXB
   140003ef9:	rex.RB push r10
   140003efb:	rex.WRX
   140003efc:	rex.RB
   140003efd:	xor    r14,QWORD PTR [rdx]
   140003f00:	cs fs ins BYTE PTR es:[rdi],dx
   140003f03:	ins    BYTE PTR es:[rdi],dx
   140003f04:	add    BYTE PTR [rax],al
   140003f06:	mov    dh,0x0
   140003f08:	imul   r14d,DWORD PTR [rbx+0x70],0x68637461
   140003f10:	rex.WRB
   140003f11:	gs jae 0x140003f87
   140003f14:	(bad)  
   140003f15:	addr32 gs push rdi
   140003f18:	add    BYTE PTR [rax],al
   140003f1a:	jg     0x140003f1e
   140003f1c:	push   rax
   140003f1d:	gs imul ecx,DWORD PTR gs:[rbp+0x65],0x73
   140003f23:	jae    0x140003f86
   140003f25:	addr32 gs push rdi
   140003f28:	add    BYTE PTR [rax],al
   140003f2a:	imul   eax,DWORD PTR [rbx],0x54
   140003f2d:	jb     0x140003f90
   140003f2f:	outs   dx,BYTE PTR ds:[rsi]
   140003f30:	jae    0x140003f9e
   140003f32:	(bad)  
   140003f33:	je     0x140003f9a
   140003f35:	rex.WRB
   140003f36:	gs jae 0x140003fac
   140003f39:	(bad)  
   140003f3a:	add    BYTE PTR gs:[eax],al
   140003f3e:	add    cl,BYTE PTR [ebp+0x73]
   140003f42:	addr32 push rdi
   140003f44:	(bad)  
   140003f45:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x6c754d72
   140003f4d:	je     0x140003fb8
   140003f4f:	jo     0x140003fbd
   140003f51:	gs rex.WRXB (bad) 
   140003f54:	push   0x65
   140003f56:	movsxd esi,DWORD PTR [rbx+rsi*2+0x0]
   140003f5a:	test   BYTE PTR [rdx],al
   140003f5c:	push   rax
   140003f5d:	outs   dx,DWORD PTR ds:[rsi]
   140003f5e:	jae    0x140003fd4
   140003f60:	push   rcx
   140003f61:	jne    0x140003fcc
   140003f63:	je     0x140003fb2
   140003f65:	gs jae 0x140003fdb
   140003f68:	(bad)  
   140003f69:	add    BYTE PTR gs:[ebp+0x53],dl
   140003f6e:	rex.RB push r10
   140003f70:	xor    esi,DWORD PTR [rdx]
   140003f72:	cs fs ins BYTE PTR es:[rdi],dx
   140003f75:	ins    BYTE PTR es:[rdi],dx
   140003f76:	add    BYTE PTR [rax],al
   140003f78:	add    eax,0x74775f04
   140003f7d:	outs   dx,DWORD PTR ds:[rsi]
   140003f7e:	imul   eax,DWORD PTR [rax],0x775f0394
   140003f84:	movsxd esi,DWORD PTR [rbx+0x6e]
   140003f87:	imul   esp,DWORD PTR [rbx+0x6d],0x5170070
   140003f8e:	ja     0x140003ff3
   140003f90:	jae    0x140004006
   140003f92:	outs   dx,DWORD PTR ds:[rsi]
   140003f93:	imul   ebx,DWORD PTR [rdi+0x73],0x0
   140003f97:	add    BYTE PTR [rbp+0x0],dl
   140003f9a:	pop    rdi
   140003f9b:	pop    rax
   140003f9c:	movsxd esi,DWORD PTR [rax+0x74]
   140003f9f:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0xae0072
   140003fa8:	pop    rdi
   140003fa9:	(bad)  
   140003faa:	ins    DWORD PTR es:[rdi],dx
   140003fab:	jae    0x140004014
   140003fad:	pop    rdi
   140003fae:	gs js  0x14000401a
   140003fb1:	je     0x140003fb3
   140003fb3:	add    BYTE PTR [rbp+0x775f5f00],bl
   140003fb9:	addr32 gs je 0x14000402a
   140003fbd:	(bad)  
   140003fbe:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   140003fc5:	add    BYTE PTR [rsi+0x735f5f00],cl
   140003fcb:	gs je  0x14000402d
   140003fce:	(bad)  
   140003fcf:	jo     0x140004041
   140003fd1:	pop    rdi
   140003fd2:	je     0x14000404d
   140003fd4:	jo     0x14000403b
   140003fd6:	add    BYTE PTR [rax],al
   140003fd8:	xor    al,BYTE PTR [riz*2+0x746978]
   140003fdf:	add    BYTE PTR [rsi],cl
   140003fe1:	add    DWORD PTR [rdi+0x65],ebx
   140003fe4:	js     0x14000404f
   140003fe6:	je     0x140003fe8
   140003fe8:	rol    DWORD PTR [rax],0x5f
   140003feb:	movsxd esp,DWORD PTR [rbp+0x78]
   140003fee:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x5f5f0090
   140003ff6:	jae    0x14000405d
   140003ff8:	je     0x14000406f
   140003ffa:	jae    0x140004061
   140003ffc:	jb     0x14000406b
   140003ffe:	(bad)  
   140003fff:	je     0x140004069
   140004001:	gs jb  0x140004076
   140004004:	add    BYTE PTR [rax],al
   140004006:	jge    0x140004009
   140004008:	pop    rdi
   140004009:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   140004010:	ins    DWORD PTR es:[rdi],dx
   140004011:	add    BYTE PTR [rdi+0x0],dl
   140004014:	pop    rdi
   140004015:	pop    rdi
   140004016:	rex.XB pop r15
   140004018:	jae    0x14000408a
   14000401a:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   14000401e:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   140004025:	ins    BYTE PTR es:[rdi],dx
   140004026:	gs jb  0x140004029
   140004029:	add    BYTE PTR [rdx+0x63775f03],al
   14000402f:	ins    DWORD PTR es:[rdi],dx
   140004030:	fs ins BYTE PTR es:[rdi],dx
   140004032:	outs   dx,BYTE PTR ds:[rsi]
   140004033:	add    BYTE PTR [rdi],ah
   140004035:	add    DWORD PTR [rdi+0x66],ebx
   140004038:	ins    DWORD PTR es:[rdi],dx
   140004039:	outs   dx,DWORD PTR ds:[rsi]
   14000403a:	fs add BYTE PTR gs:[rax],al
   14000403e:	rol    BYTE PTR [rax],cl
   140004040:	pop    rdi
   140004041:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140004044:	ins    DWORD PTR es:[rdi],dx
   140004045:	outs   dx,DWORD PTR ds:[rsi]
   140004046:	fs add BYTE PTR gs:[rax],al
   14000404a:	ins    DWORD PTR es:[rdi],dx
   14000404b:	jae    0x1400040c3
   14000404d:	movsxd esi,DWORD PTR [rdx+0x74]
   140004050:	cs fs ins BYTE PTR es:[rdi],dx
   140004053:	ins    BYTE PTR es:[rdi],dx
   140004054:	add    BYTE PTR [rax],al
   140004056:	(bad)  
   140004057:	add    BYTE PTR [rdi],bh
   140004059:	je     0x1400040c0
   14000405b:	jb     0x1400040ca
   14000405d:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   140004064:	pop    rcx
   140004065:	pop    r8
   140004067:	pop    rax
   140004068:	pop    rdx
   140004069:	add    dh,al
   14000406b:	add    dl,BYTE PTR [rdx+0x74]
   14000406e:	ins    BYTE PTR es:[rdi],dx
   14000406f:	rex.XB (bad) 
   140004071:	jo     0x1400040e7
   140004073:	jne    0x1400040e7
   140004075:	rex.XB outs dx,DWORD PTR gs:[rsi]
   140004078:	outs   dx,BYTE PTR ds:[rsi]
   140004079:	je     0x1400040e0
   14000407b:	js     0x1400040f1
   14000407d:	add    BYTE PTR [rdi+0x4],dh
   140004080:	push   rdx
   140004081:	je     0x1400040ef
   140004083:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140004085:	outs   dx,DWORD PTR ds:[rsi]
   140004086:	imul   esi,DWORD PTR [rbp+0x70],0x46
   14000408a:	jne    0x1400040fa
   14000408c:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140004090:	outs   dx,BYTE PTR ds:[rsi]
   140004091:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140004093:	je     0x140004107
   140004095:	jns    0x140004097
   140004097:	add    BYTE PTR [rbx+0x6c745205],cl
   14000409d:	push   rsi
   14000409e:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   1400040a5:	outs   dx,BYTE PTR ds:[rsi]
   1400040a6:	ja     0x140004111
   1400040a8:	outs   dx,BYTE PTR ds:[rsi]
   1400040a9:	add    BYTE PTR fs:[rax],al
   1400040ac:	outs   dx,BYTE PTR ds:[rsi]
   1400040ad:	je     0x140004113
   1400040af:	ins    BYTE PTR es:[rdi],dx
   1400040b0:	ins    BYTE PTR es:[rdi],dx
   1400040b1:	cs fs ins BYTE PTR es:[rdi],dx
   1400040b4:	ins    BYTE PTR es:[rdi],dx
   1400040b5:	add    BYTE PTR [rbx],ch
   1400040b7:	add    BYTE PTR [rbx+0x6f],al
   1400040ba:	rex.XB jb 0x140004122
   1400040bd:	(bad)  
   1400040be:	je     0x140004125
   1400040c0:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400040c2:	jae    0x140004138
   1400040c4:	(bad)  
   1400040c5:	outs   dx,BYTE PTR ds:[rsi]
   1400040c6:	movsxd esp,DWORD PTR [rbp+0x0]
   1400040c9:	add    BYTE PTR [rdx+0x526f4300],al
   1400040cf:	gs jbe 0x140004141
   1400040d2:	imul   esp,DWORD PTR [rbp+0x43],0x6c
   1400040d6:	(bad)  
   1400040d7:	jae    0x14000414c
   1400040d9:	rex.WRXB (bad) 
   1400040db:	push   0x65
   1400040dd:	movsxd esi,DWORD PTR [rax+rax*1+0x76]
   1400040e1:	add    BYTE PTR [rbx+0x6f],al
   1400040e4:	push   rdx
   1400040e5:	imul   esi,DWORD PTR gs:[ebx+0x74],0x6c437265
   1400040ee:	(bad)  
   1400040ef:	jae    0x140004164
   1400040f1:	rex.WRXB (bad) 
   1400040f3:	push   0x65
   1400040f5:	movsxd esi,DWORD PTR [rax+rax*1-0x70]
   1400040f9:	add    BYTE PTR [rbx+0x6f],al
   1400040fc:	push   rbp
   1400040fd:	outs   dx,BYTE PTR ds:[rsi]
   1400040fe:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   140004105:	imul   edi,DWORD PTR [rdx+0x65],0x100000
   14000410c:	rex.XB
   14000410d:	rex.WR push rbx
   14000410f:	rex.WB
   140004110:	rex.R
   140004111:	rex.RX jb 0x140004183
   140004114:	ins    DWORD PTR es:[rdi],dx
   140004115:	push   rbx
   140004116:	je     0x14000418a
   140004118:	imul   ebp,DWORD PTR [rsi+0x67],0x43006200
   14000411f:	outs   dx,DWORD PTR ds:[rsi]
   140004120:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140004122:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000412a:	push   rbx
   14000412b:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14000412f:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x43006100
   140004137:	outs   dx,DWORD PTR ds:[rsi]
   140004138:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000413a:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140004142:	rex.RB js 0x140004145
   140004145:	add    BYTE PTR [rdi+0x6c],ch
   140004148:	xor    esi,DWORD PTR gs:[rdx]
   14000414b:	cs fs ins BYTE PTR es:[rdi],dx
   14000414e:	ins    BYTE PTR es:[rdi],dx
   14000414f:	add    ah,dl
   140004151:	add    BYTE PTR [rcx+0x6e],cl
   140004154:	je     0x1400041bb
   140004156:	jb     0x1400041c6
   140004158:	gs je  0x1400041ae
   14000415b:	gs je  0x1400041a1
   14000415e:	outs   dx,DWORD PTR ds:[rsi]
   14000415f:	outs   dx,DWORD PTR ds:[rsi]
   140004160:	imul   ebp,DWORD PTR [rcx+0x65],0x45
   140004164:	js     0x1400041bd
   140004166:	add    BYTE PTR [rax],al
   140004168:	mov    ah,0x0
   14000416a:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000416c:	je     0x1400041d3
   14000416e:	jb     0x1400041de
   140004170:	gs je  0x1400041ba
   140004173:	gs je  0x1400041b9
   140004176:	outs   dx,DWORD PTR ds:[rsi]
   140004177:	outs   dx,DWORD PTR ds:[rsi]
   140004178:	imul   ebp,DWORD PTR [rcx+0x65],0x45
   14000417c:	js     0x1400041d5
   14000417e:	add    BYTE PTR [rax],al
   140004180:	push   rdi
   140004181:	rex.WB
   140004182:	rex.WRX
   140004183:	rex.WB
   140004184:	rex.WRX
   140004185:	rex.RB push r12
   140004187:	cs fs ins BYTE PTR es:[rdi],dx
   14000418a:	ins    BYTE PTR es:[rdi],dx
   14000418b:	add    BYTE PTR [rbp+0x5],ch
   14000418e:	push   rbx
   14000418f:	ins    BYTE PTR es:[rdi],dx
   140004190:	gs gs jo 0x140004194
   140004194:	mov    DWORD PTR [rdx],0x53746547
   14000419a:	je     0x1400041fd
   14000419c:	jb     0x140004212
   14000419e:	jne    0x140004210
   1400041a0:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400041a2:	outs   dx,WORD PTR ds:[rsi]
   1400041a4:	push   rdi
   1400041a5:	add    BYTE PTR [rsi+0x5],bl
   1400041a8:	push   rbx
   1400041a9:	gs je  0x140004201
   1400041ac:	outs   dx,BYTE PTR ds:[rsi]
   1400041ad:	push   0x6c646e61
   1400041b2:	gs fs rex.RB js 0x14000421a
   1400041b7:	gs jo  0x14000422e
   1400041ba:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   1400041c1:	gs jb  0x1400041c4
   1400041c4:	ss add al,0x51
   1400041c7:	jne    0x14000422e
   1400041c9:	jb     0x140004244
   1400041cb:	push   rax
   1400041cc:	gs jb  0x140004235
   1400041cf:	outs   dx,DWORD PTR ds:[rsi]
   1400041d0:	jb     0x14000423f
   1400041d2:	(bad)  
   1400041d3:	outs   dx,BYTE PTR ds:[rsi]
   1400041d4:	movsxd esp,DWORD PTR [rbp+0x43]
   1400041d7:	outs   dx,DWORD PTR ds:[rsi]
   1400041d8:	jne    0x140004248
   1400041da:	je     0x140004241
   1400041dc:	jb     0x1400041de
   1400041de:	adc    DWORD PTR [rdx],eax
   1400041e0:	rex.RXB
   1400041e1:	gs je  0x140004227
   1400041e4:	jne    0x140004258
   1400041e6:	jb     0x14000424d
   1400041e8:	outs   dx,BYTE PTR ds:[rsi]
   1400041e9:	je     0x14000423b
   1400041eb:	jb     0x14000425c
   1400041ed:	movsxd esp,DWORD PTR [rbp+0x73]
   1400041f0:	jae    0x14000423b
   1400041f2:	add    BYTE PTR fs:[rip+0x74654702],dl        # 0x1b46588fb
   1400041f9:	rex.XB jne 0x14000426e
   1400041fc:	jb     0x140004263
   1400041fe:	outs   dx,BYTE PTR ds:[rsi]
   1400041ff:	je     0x140004255
   140004201:	push   0x64616572
   140004206:	rex.WB
   140004207:	add    BYTE PTR fs:[rax],al
   14000420a:	loopne 0x14000420e
   14000420c:	rex.RXB
   14000420d:	gs je  0x140004263
   140004210:	jns    0x140004285
   140004212:	je     0x140004279
   140004214:	ins    DWORD PTR es:[rdi],dx
   140004215:	push   rsp
   140004216:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   14000421d:	ins    BYTE PTR es:[rdi],dx
   14000421e:	gs push rsp
   140004220:	imul   ebp,DWORD PTR [rbp+0x65],0x4702fd00
   140004227:	gs je  0x14000427e
   14000422a:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   140004231:	je     0x140004233
   140004233:	add    BYTE PTR [rsi+0x686e5505],bl
   140004239:	(bad)  
   14000423a:	outs   dx,BYTE PTR ds:[rsi]
   14000423b:	fs ins BYTE PTR es:[rdi],dx
   14000423d:	gs fs rex.RB js 0x1400042a5
   140004242:	gs jo  0x1400042b9
   140004245:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000424c:	gs jb  0x14000424f
   14000424f:	add    BYTE PTR [rbp+rax*1+0x54],bh
   140004253:	gs jb  0x1400042c3
   140004256:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   14000425d:	outs   dx,DWORD PTR ds:[rsi]
   14000425e:	movsxd esp,DWORD PTR [rbp+0x73]
   140004261:	jae    0x140004263
   140004263:	add    BYTE PTR [rsi+0x65724300],ah
   140004269:	(bad)  
   14000426a:	je     0x1400042d1
   14000426c:	movsxd esi,DWORD PTR [r11+rax*2+0x74]
   140004271:	js     0x1400042ca
   140004273:	add    BYTE PTR [rdi+0x6c655204],dl
   140004279:	gs (bad) 
   14000427b:	jae    0x1400042e2
   14000427d:	movsxd esi,DWORD PTR [r11+rax*2+0x74]
   140004282:	js     0x140004284
   140004284:	add    al,BYTE PTR [rax]
   140004286:	movsxd esi,DWORD PTR [r9+rbp*2+0x76]
   14000428b:	(bad)  
   14000428c:	je     0x1400042f3
   14000428e:	movsxd esi,DWORD PTR [r11+rax*2+0x74]
   140004293:	js     0x140004295
   140004295:	add    bh,dh
   140004297:	add    BYTE PTR [rbp+riz*2+0x61],al
   14000429b:	movsxd esi,DWORD PTR [rcx+rbp*2+0x76]
   14000429f:	(bad)  
   1400042a0:	je     0x140004307
   1400042a2:	movsxd esi,DWORD PTR [r11+rax*2+0x74]
   1400042a7:	js     0x1400042a9
   1400042a9:	add    BYTE PTR [rdx+0x2],ch
   1400042ac:	rex.RXB
   1400042ad:	gs je  0x1400042fd
   1400042b0:	outs   dx,DWORD PTR ds:[rsi]
   1400042b1:	fs jne 0x140004320
   1400042b4:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x57656d61
   1400042be:	add    BYTE PTR [rax],al
   1400042c0:	scas   al,BYTE PTR es:[rdi]
   1400042c1:	add    ecx,DWORD PTR [rdi+rbp*2+0x61]
   1400042c5:	imul   r12,QWORD PTR fs:[rdx+0x72],0x45797261
   1400042ce:	js     0x140004327
   1400042d0:	add    BYTE PTR [rax],al
   1400042d2:	mov    DWORD PTR [rbx],0x5670614d
   1400042d8:	imul   esp,DWORD PTR [rbp+0x77],0x6946664f
   1400042df:	ins    BYTE PTR es:[rdi],dx
   1400042e0:	gs add dh,ch
   1400042e3:	add    ecx,DWORD PTR [rdi+0x70]
   1400042e6:	outs   dx,BYTE PTR gs:[rsi]
   1400042e8:	imul   r13d,DWORD PTR [rbp+r12*2+0x4d],0x69707061
   1400042f1:	outs   dx,BYTE PTR ds:[rsi]
   1400042f2:	addr32 push rdi
   1400042f4:	add    BYTE PTR [rax],al
   1400042f6:	(bad)  
   1400042f7:	add    ecx,DWORD PTR [rdi+0x70]
   1400042fa:	outs   dx,BYTE PTR gs:[rsi]
   1400042fc:	rex.RB jbe 0x140004364
   1400042ff:	outs   dx,BYTE PTR ds:[rsi]
   140004300:	je     0x140004359
   140004302:	add    BYTE PTR [rax],al
   140004304:	adc    DWORD PTR [rbx],eax
   140004306:	rex.RXB
   140004307:	gs je  0x140004360
   14000430a:	gs jb  0x140004380
   14000430d:	imul   ebp,DWORD PTR [rdi+0x6e],0x417845
   140004314:	jle    0x140004319
   140004316:	rex.WB jae 0x140004370
   140004319:	outs   dx,DWORD PTR ds:[rsi]
   14000431a:	ja     0x140004352
   14000431c:	xor    al,0x50
   14000431e:	jb     0x14000438f
   140004320:	movsxd esp,DWORD PTR [rbp+0x73]
   140004323:	jae    0x140004325
   140004325:	add    BYTE PTR [rdi+0x72695605],dh
   14000432b:	je     0x1400043a2
   14000432d:	(bad)  
   14000432e:	ins    BYTE PTR es:[rdi],dx
   14000432f:	rex.B ins BYTE PTR es:[rdi],dx
   140004331:	ins    BYTE PTR es:[rdi],dx
   140004332:	outs   dx,DWORD PTR ds:[rsi]
   140004333:	movsxd eax,DWORD PTR [rax]
   140004335:	add    BYTE PTR [rcx+0x3],ch
   140004338:	pop    rdi
   140004339:	jbe    0x1400043ae
   14000433b:	outs   dx,BYTE PTR ds:[rsi]
   14000433c:	ja     0x1400043ae
   14000433e:	jb     0x1400043a9
   140004340:	outs   dx,BYTE PTR ds:[rsi]
   140004341:	je     0x1400043a9
   140004343:	add    BYTE PTR [rax+0x6e617204],ch
   140004349:	fs pop rdi
   14000434b:	jae    0x14000434d
   14000434d:	add    BYTE PTR [rcx+0x65],ch
   140004350:	jb     0x1400043c6
   140004352:	jne    0x1400043c8
   140004354:	imul   ebp,DWORD PTR [rsi+rbp*1+0x64],0x6c6c
   14000435c:	xchg   esi,eax
   14000435d:	add    al,0x6d
   14000435f:	gs ins DWORD PTR es:[rdi],dx
   140004361:	jae    0x1400043c8
   140004363:	je     0x140004365
	...

Disassembly of section .data:

0000000140005000 <.data>:
   140005000:	add    DWORD PTR [rax],eax
   140005002:	add    BYTE PTR [rax],al
   140005004:	add    BYTE PTR [rax],al
   140005006:	add    BYTE PTR [rax],al
   140005008:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   14000500e:	add    BYTE PTR [rax],al
   140005010:	int    0x5d
   140005012:	and    dl,dl
   140005014:	data16 (bad) 
   140005016:	(bad)  
   140005017:	inc    DWORD PTR [rax]
   140005019:	add    BYTE PTR [rax],al
   14000501b:	add    BYTE PTR [rax],al
   14000501d:	add    BYTE PTR [rax],al
   14000501f:	add    bh,bh
   140005021:	(bad)  
   140005022:	(bad)  
   140005023:	inc    DWORD PTR [rax]
   140005025:	add    BYTE PTR [rax],al
   140005027:	add    bh,bh
   140005029:	(bad)  
   14000502a:	(bad)  
   14000502b:	(bad)  
   14000502c:	(bad)  
   14000502d:	(bad)  
   14000502e:	(bad)  
   14000502f:	inc    DWORD PTR [rax]
	...

Disassembly of section .pdata:

0000000140006000 <.pdata>:
   140006000:	or     BYTE PTR [rax],dl
   140006002:	add    BYTE PTR [rax],al
   140006004:	adc    BYTE PTR cs:[rax],al
   140006007:	add    BYTE PTR [rax],al
   140006009:	cmp    DWORD PTR [rax],eax
   14000600b:	add    BYTE PTR [rax+rdx*1],dh
   14000600e:	add    BYTE PTR [rax],al
   140006010:	pop    rbx
   140006011:	adc    BYTE PTR [rax],al
   140006013:	add    BYTE PTR [rax],cl
   140006015:	cmp    DWORD PTR [rax],eax
   140006017:	add    BYTE PTR [rax+rdx*1+0x0],ah
   14000601b:	add    BYTE PTR [rcx+0x11],bh
   14000601e:	add    BYTE PTR [rax],al
   140006020:	adc    BYTE PTR [rcx],bh
   140006022:	add    BYTE PTR [rax],al
   140006024:	adc    BYTE PTR [rcx],0x0
   140006027:	add    BYTE PTR [rdi+0x11],bh
   14000602d:	cmp    DWORD PTR [rax],eax
   14000602f:	add    al,ah
   140006031:	adc    DWORD PTR [rax],eax
   140006033:	add    BYTE PTR [rdi+0x12],al
   140006036:	add    BYTE PTR [rax],al
   140006038:	and    BYTE PTR [rcx],bh
   14000603a:	add    BYTE PTR [rax],al
   14000603c:	push   rax
   14000603d:	adc    al,BYTE PTR [rax]
   14000603f:	add    BYTE PTR [rdx+rdx*1+0x0],ch
   140006043:	add    BYTE PTR [rcx+rdi*1],ch
   140006046:	add    BYTE PTR [rax],al
   140006048:	adc    BYTE PTR [rdx],0x0
   14000604b:	add    al,dh
   14000604d:	adc    al,BYTE PTR [rax]
   14000604f:	add    BYTE PTR [rax],ah
   140006051:	cmp    DWORD PTR [rax],eax
   140006053:	add    BYTE PTR [rax],al
   140006055:	adc    eax,DWORD PTR [rax]
   140006057:	add    BYTE PTR [rbx+rdx*1+0x0],ch
   14000605b:	add    BYTE PTR [rcx+rdi*1],dh
   14000605e:	add    BYTE PTR [rax],al
   140006060:	je     0x140006075
   140006062:	add    BYTE PTR [rax],al
   140006064:	addr32 adc eax,0x393c0000
   14000606a:	add    BYTE PTR [rax],al
   14000606c:	jo     0x140006083
   14000606e:	add    BYTE PTR [rax],al
   140006070:	cdq    
   140006071:	adc    eax,0x39000000
   140006076:	add    BYTE PTR [rax],al
   140006078:	movabs al,ds:0x34000015ff000015
   140006081:	cmp    DWORD PTR [rax],eax
   140006083:	add    BYTE PTR [rax],cl
   140006085:	(bad)  
   140006086:	add    BYTE PTR [rax],al
   140006088:	pop    rsi
   140006089:	(bad)  
   14000608a:	add    BYTE PTR [rax],al
   14000608c:	sub    al,0x39
   14000608e:	add    BYTE PTR [rax],al
   140006090:	fs (bad) 
   140006092:	add    BYTE PTR [rax],al
   140006094:	cmp    BYTE PTR [rbx],bl
   140006096:	add    BYTE PTR [rax],al
   140006098:	cmp    QWORD PTR [rax],r8
   14000609b:	add    BYTE PTR [rax+0x1b],al
   14000609e:	add    BYTE PTR [rax],al
   1400060a0:	stos   BYTE PTR es:[rdi],al
   1400060a1:	sbb    eax,DWORD PTR [rax]
   1400060a3:	add    BYTE PTR [rax],al
   1400060a5:	cmp    DWORD PTR [rax],eax
   1400060a7:	add    BYTE PTR [rax-0x57ffffe5],dh
   1400060ad:	sbb    al,0x0
   1400060af:	add    BYTE PTR [rax+0x39],dh
   1400060b2:	add    BYTE PTR [rax],al
   1400060b4:	mov    al,0x1c
   1400060b6:	add    BYTE PTR [rax],al
   1400060b8:	add    bl,BYTE PTR [rip+0x39080000]        # 0x1790860be
   1400060be:	add    BYTE PTR [rax],al
   1400060c0:	or     BYTE PTR [rip+0x1d540000],bl        # 0x15d5460c6
   1400060c6:	add    BYTE PTR [rax],al
   1400060c8:	add    BYTE PTR [rcx],bh
   1400060ca:	add    BYTE PTR [rax],al
   1400060cc:	pop    rsp
   1400060cd:	sbb    eax,0x1dd30000
   1400060d2:	add    BYTE PTR [rax],al
   1400060d4:	mov    WORD PTR [rcx],?
   1400060d6:	add    BYTE PTR [rax],al
   1400060d8:	fcomp  QWORD PTR [rip+0x1e9e0000]        # 0x15e9e60de
   1400060de:	add    BYTE PTR [rax],al
   1400060e0:	pushf  
   1400060e1:	cmp    DWORD PTR [rax],eax
   1400060e3:	add    BYTE PTR [rsi+rbx*1+0x1f2a0000],ah
   1400060ea:	add    BYTE PTR [rax],al
   1400060ec:	mov    ah,0x39
   1400060ee:	add    BYTE PTR [rax],al
   1400060f0:	xor    BYTE PTR [rdi],bl
   1400060f2:	add    BYTE PTR [rax],al
   1400060f4:	cld    
   1400060f5:	and    BYTE PTR [rax],al
   1400060f7:	add    ah,cl
   1400060f9:	cmp    DWORD PTR [rax],eax
   1400060fb:	add    BYTE PTR [rax],dl
   1400060fd:	and    DWORD PTR [rax],eax
   1400060ff:	add    bh,bl
   140006101:	and    DWORD PTR [rax],eax
   140006103:	add    BYTE PTR [rcx+rdi*1],ch
   140006106:	add    BYTE PTR [rax],al
   140006108:	lock and DWORD PTR [rax],eax
   14000610b:	add    BYTE PTR [rcx],bh
   14000610d:	and    al,BYTE PTR [rax]
   14000610f:	add    al,dh
   140006111:	cmp    DWORD PTR [rax],eax
   140006113:	add    BYTE PTR [rax+0x22],al
   140006116:	add    BYTE PTR [rax],al
   140006118:	mov    cl,0x24
   14000611a:	add    BYTE PTR [rax],al
   14000611c:	clc    
   14000611d:	cmp    DWORD PTR [rax],eax
   14000611f:	add    al,al
   140006121:	and    al,0x0
   140006123:	add    dl,dl
   140006125:	and    al,0x0
   140006127:	add    BYTE PTR [rcx+rdi*1],ch
   14000612a:	add    BYTE PTR [rax],al
   14000612c:	lock and al,0x0
   14000612f:	add    BYTE PTR [rsi],cl
   140006131:	and    eax,0x3a300000
   140006136:	add    BYTE PTR [rax],al
   140006138:	and    BYTE PTR [rip+0x25590000],ah        # 0x16559613e
   14000613e:	add    BYTE PTR [rax],al
   140006140:	sub    al,0x39
   140006142:	add    BYTE PTR [rax],al
   140006144:	(bad)  
   140006145:	and    eax,0x25780000
   14000614a:	add    BYTE PTR [rax],al
   14000614c:	sub    al,0x39
   14000614e:	add    BYTE PTR [rax],al
   140006150:	mov    WORD PTR [rip+0x25e00000],fs        # 0x165e06156
   140006156:	add    BYTE PTR [rax],al
   140006158:	xor    al,0x3a
   14000615a:	add    BYTE PTR [rax],al
   14000615c:	call   0x16d006186
   140006161:	add    BYTE PTR es:[rax],al
   140006164:	add    BYTE PTR [rcx],bh
   140006166:	add    BYTE PTR [rax],al
   140006168:	movabs al,ds:0x54000026ed000026
   140006171:	cmp    al,BYTE PTR [rax]
   140006173:	add    BYTE PTR [rdi+riz*1],dh
   140006176:	add    BYTE PTR [rax],al
   140006178:	add    al,0x28
   14000617a:	add    BYTE PTR [rax],al
   14000617c:	cmp    BYTE PTR [rdx],0x0
   14000617f:	add    BYTE PTR [rax+rbp*1],bh
   140006182:	add    BYTE PTR [rax],al
   140006184:	jo     0x1400061ae
   140006186:	add    BYTE PTR [rax],al
   140006188:	add    BYTE PTR [rcx],bh
   14000618a:	add    BYTE PTR [rax],al
   14000618c:	sub    BYTE PTR [rax],0x0
   14000618f:	add    cl,dh
   140006191:	sub    DWORD PTR [rax],eax
   140006193:	add    BYTE PTR [rdx+rdi*1+0x2a080000],cl
   14000619a:	add    BYTE PTR [rax],al
   14000619c:	and    eax,0x2c00002a
   1400061a1:	cmp    DWORD PTR [rax],eax
   1400061a3:	add    BYTE PTR [rdx+rbp*1],ch
   1400061a6:	add    BYTE PTR [rax],al
   1400061a8:	(bad)
   1400061ac:	add    BYTE PTR [rcx],bh
   1400061ae:	add    BYTE PTR [rax],al
   1400061b0:	mov    al,0x2a
   1400061b2:	add    BYTE PTR [rax],al
   1400061b4:	mov    dl,0x2a
   1400061b6:	add    BYTE PTR [rax],al
   1400061b8:	cwde   
   1400061b9:	cmp    al,BYTE PTR [rax]
   1400061bb:	add    dh,al
   1400061bd:	sub    al,BYTE PTR [rax]
   1400061bf:	add    ah,ah
   1400061c1:	sub    al,BYTE PTR [rax]
   1400061c3:	add    BYTE PTR [rax+0x3a],bh
   1400061c6:	add    BYTE PTR [rax],al
   1400061c8:	lock sub al,BYTE PTR [rax]
   1400061cb:	add    BYTE PTR [rax],dl
   1400061cd:	sub    eax,DWORD PTR [rax]
   1400061cf:	add    BYTE PTR [rax+0x3a],bh
	...

Disassembly of section .rsrc:

0000000140007000 <.rsrc>:
	...
   14000700c:	add    BYTE PTR [rax],al
   14000700e:	add    al,0x0
   140007010:	add    eax,DWORD PTR [rax]
   140007012:	add    BYTE PTR [rax],al
   140007014:	xor    BYTE PTR [rax],al
   140007016:	add    BYTE PTR [rax+0xe],al
   14000701c:	rol    BYTE PTR [rax],0x0
   14000701f:	adc    BYTE PTR [rax],0x0
   140007022:	add    BYTE PTR [rax],al
   140007024:	fadd   DWORD PTR [rax]
   140007026:	add    BYTE PTR [rax+0x18],al
   14000702c:	lock add BYTE PTR [rax],al
   14000702f:	add    BYTE PTR [rax],0x0
	...
   14000703e:	adc    BYTE PTR [rax],al
   140007040:	add    DWORD PTR [rax],eax
   140007042:	add    BYTE PTR [rax],al
   140007044:	or     BYTE PTR [rcx],al
   140007046:	add    BYTE PTR [rax+0x2],al
   14000704c:	and    BYTE PTR [rcx],al
   14000704e:	add    BYTE PTR [rax+0x3],al
   140007054:	cmp    BYTE PTR [rcx],al
   140007056:	add    BYTE PTR [rax+0x4],al
   14000705c:	push   rax
   14000705d:	add    DWORD PTR [rax],eax
   14000705f:	add    BYTE PTR [rip+0x68000000],0x1        # 0x1a8007066
   140007066:	add    BYTE PTR [rax+0x6],al
   14000706c:	add    BYTE PTR [rcx],0x0
   14000706f:	add    BYTE PTR [rdi],0x0
   140007072:	add    BYTE PTR [rax],al
   140007074:	cwde   
   140007075:	add    DWORD PTR [rax],eax
   140007077:	or     BYTE PTR [rax],0x0
   14000707a:	add    BYTE PTR [rax],al
   14000707c:	mov    al,0x1
   14000707e:	add    BYTE PTR [rax+0x9],al
   140007084:	enter  0x1,0x80
   140007088:	or     al,BYTE PTR [rax]
   14000708a:	add    BYTE PTR [rax],al
   14000708c:	loopne 0x14000708f
   14000708e:	add    BYTE PTR [rax+0xb],al
   140007094:	clc    
   140007095:	add    DWORD PTR [rax],eax
   140007097:	or     BYTE PTR [rax+rax*1],0x0
   14000709b:	add    BYTE PTR [rax],dl
   14000709d:	add    al,BYTE PTR [rax]
   14000709f:	or     BYTE PTR [rip+0x28000000],0x2        # 0x1680070a6
   1400070a6:	add    BYTE PTR [rax+0xe],al
   1400070ac:	add    al,BYTE PTR [rax]
   1400070af:	or     BYTE PTR [rdi],0x0
   1400070b2:	add    BYTE PTR [rax],al
   1400070b4:	pop    rax
   1400070b5:	add    al,BYTE PTR [rax]
   1400070b7:	adc    BYTE PTR [rax],0x0
   1400070ba:	add    BYTE PTR [rax],al
   1400070bc:	jo     0x1400070c0
   1400070be:	add    BYTE PTR [rax+0x0],al
	...
   1400070cc:	add    DWORD PTR [rax],eax
   1400070ce:	add    BYTE PTR [rax],al
   1400070d0:	add    BYTE PTR [rax+rax*1],al
   1400070d3:	or     BYTE PTR [rax+0x800002],0x0
	...
   1400070e6:	add    DWORD PTR [rax],eax
   1400070e8:	add    DWORD PTR [rax],eax
   1400070ea:	add    BYTE PTR [rax],al
   1400070ec:	movabs al,ds:0x800002
	...
   1400070fd:	add    BYTE PTR [rcx],al
   1400070ff:	add    BYTE PTR [rcx],al
   140007101:	add    BYTE PTR [rax],al
   140007103:	add    BYTE PTR [rax+0x800002],bh
	...
   140007115:	add    BYTE PTR [rcx],al
   140007117:	add    BYTE PTR [rcx],cl
   140007119:	add    al,0x0
   14000711b:	add    al,dl
   14000711d:	add    al,BYTE PTR [rax]
	...
   14000712b:	add    BYTE PTR [rax],al
   14000712d:	add    BYTE PTR [rcx],al
   14000712f:	add    BYTE PTR [rcx],cl
   140007131:	add    al,0x0
   140007133:	add    al,ah
   140007135:	add    al,BYTE PTR [rax]
	...
   140007143:	add    BYTE PTR [rax],al
   140007145:	add    BYTE PTR [rcx],al
   140007147:	add    BYTE PTR [rcx],cl
   140007149:	add    al,0x0
   14000714b:	add    al,dh
   14000714d:	add    al,BYTE PTR [rax]
	...
   14000715b:	add    BYTE PTR [rax],al
   14000715d:	add    BYTE PTR [rcx],al
   14000715f:	add    BYTE PTR [rcx],cl
   140007161:	add    al,0x0
   140007163:	add    BYTE PTR [rax],al
   140007165:	add    eax,DWORD PTR [rax]
	...
   140007173:	add    BYTE PTR [rax],al
   140007175:	add    BYTE PTR [rcx],al
   140007177:	add    BYTE PTR [rcx],cl
   140007179:	add    al,0x0
   14000717b:	add    BYTE PTR [rax],dl
   14000717d:	add    eax,DWORD PTR [rax]
	...
   14000718b:	add    BYTE PTR [rax],al
   14000718d:	add    BYTE PTR [rcx],al
   14000718f:	add    BYTE PTR [rcx],cl
   140007191:	add    al,0x0
   140007193:	add    BYTE PTR [rax],ah
   140007195:	add    eax,DWORD PTR [rax]
	...
   1400071a3:	add    BYTE PTR [rax],al
   1400071a5:	add    BYTE PTR [rcx],al
   1400071a7:	add    BYTE PTR [rcx],cl
   1400071a9:	add    al,0x0
   1400071ab:	add    BYTE PTR [rax],dh
   1400071ad:	add    eax,DWORD PTR [rax]
	...
   1400071bb:	add    BYTE PTR [rax],al
   1400071bd:	add    BYTE PTR [rcx],al
   1400071bf:	add    BYTE PTR [rcx],cl
   1400071c1:	add    al,0x0
   1400071c3:	add    BYTE PTR [rax+0x3],al
	...
   1400071d6:	add    DWORD PTR [rax],eax
   1400071d8:	or     DWORD PTR [rax+rax*1],eax
   1400071db:	add    BYTE PTR [rax+0x3],dl
	...
   1400071ee:	add    DWORD PTR [rax],eax
   1400071f0:	or     DWORD PTR [rax+rax*1],eax
   1400071f3:	add    BYTE PTR [rax+0x3],ah
	...
   140007206:	add    DWORD PTR [rax],eax
   140007208:	or     DWORD PTR [rax+rax*1],eax
   14000720b:	add    BYTE PTR [rax+0x3],dh
	...
   14000721e:	add    DWORD PTR [rax],eax
   140007220:	or     DWORD PTR [rax+rax*1],eax
   140007223:	add    BYTE PTR [rax+0x3],al
	...
   140007235:	add    BYTE PTR [rcx],al
   140007237:	add    BYTE PTR [rcx],cl
   140007239:	add    al,0x0
   14000723b:	add    BYTE PTR [rax+0x3],dl
	...
   14000724d:	add    BYTE PTR [rcx],al
   14000724f:	add    BYTE PTR [rcx],cl
   140007251:	add    al,0x0
   140007253:	add    BYTE PTR [rax+0x3],ah
	...
   140007265:	add    BYTE PTR [rcx],al
   140007267:	add    BYTE PTR [rcx],cl
   140007269:	add    al,0x0
   14000726b:	add    BYTE PTR [rax+0x3],dh
	...
   14000727d:	add    BYTE PTR [rcx],al
   14000727f:	add    BYTE PTR [rcx],cl
   140007281:	add    al,0x0
   140007283:	add    al,al
   140007285:	add    eax,DWORD PTR [rax]
	...
   140007293:	add    BYTE PTR [rax],al
   140007295:	add    BYTE PTR [rcx],al
   140007297:	add    BYTE PTR [rcx],cl
   140007299:	add    al,0x0
   14000729b:	add    al,dl
   14000729d:	add    eax,DWORD PTR [rax]
	...
   1400072ab:	add    BYTE PTR [rax],al
   1400072ad:	add    BYTE PTR [rcx],al
   1400072af:	add    BYTE PTR [rcx],cl
   1400072b1:	add    al,0x0
   1400072b3:	add    al,ah
   1400072b5:	add    eax,DWORD PTR [rax]
	...
   1400072c3:	add    BYTE PTR [rax],al
   1400072c5:	add    BYTE PTR [rcx],al
   1400072c7:	add    BYTE PTR [rcx],cl
   1400072c9:	add    al,0x0
   1400072cb:	add    al,dh
   1400072cd:	add    eax,DWORD PTR [rax]
   1400072cf:	add    BYTE PTR [rax+0x79],al
   1400072d2:	add    BYTE PTR [rax],al
   1400072d4:	push   0x6
   1400072d9:	add    BYTE PTR [rax],al
   1400072db:	add    BYTE PTR [rax],al
   1400072dd:	add    BYTE PTR [rax],al
   1400072df:	add    BYTE PTR [rax-0x17ffff81],ch
   1400072e5:	add    al,BYTE PTR [rax]
	...
   1400072ef:	add    BYTE PTR [rax-0x17ffff7e],dl
   1400072f5:	add    DWORD PTR [rax],eax
	...
   1400072ff:	add    BYTE PTR [rax-0x7c],bh
   140007302:	add    BYTE PTR [rax],al
   140007304:	sub    BYTE PTR [rcx],al
	...
   14000730e:	add    BYTE PTR [rax],al
   140007310:	movabs al,ds:0xea8000085
   140007319:	add    BYTE PTR [rax],al
   14000731b:	add    BYTE PTR [rax],al
   14000731d:	add    BYTE PTR [rax],al
   14000731f:	add    BYTE PTR [rax-0x6c],cl
   140007322:	add    BYTE PTR [rax],al
   140007324:	test   al,0x8
	...
   14000732e:	add    BYTE PTR [rax],al
   140007330:	lock pushf 
   140007332:	add    BYTE PTR [rax],al
   140007334:	enter  0x6,0x0
	...
   140007340:	mov    eax,0x680000a3
   140007345:	add    eax,0x0
   14000734a:	add    BYTE PTR [rax],al
   14000734c:	add    BYTE PTR [rax],al
   14000734e:	add    BYTE PTR [rax],al
   140007350:	and    BYTE PTR [rcx-0x34330000],ch
	...
   14000735e:	add    BYTE PTR [rax],al
   140007360:	lock je 0x140007364
   140007363:	add    BYTE PTR [rax],ch
   140007365:	or     BYTE PTR [rcx],al
	...
   14000736f:	add    BYTE PTR [rax],bl
   140007371:	jge    0x140007375
   140007373:	add    BYTE PTR [rax+0x94],ch
   140007379:	add    BYTE PTR [rax],al
   14000737b:	add    BYTE PTR [rax],al
   14000737d:	add    BYTE PTR [rax],al
   14000737f:	add    al,al
   140007381:	adc    DWORD PTR [rbx],eax
   140007383:	add    BYTE PTR [rax],ch
   140007385:	rex.X add BYTE PTR [rax],al
	...
   140007390:	call   0xe80076e8
   140007395:	and    eax,0x0
   14000739a:	add    BYTE PTR [rax],al
   14000739c:	add    BYTE PTR [rax],al
   14000739e:	add    BYTE PTR [rax],al
   1400073a0:	nop
   1400073a1:	jns    0x1400073a6
   1400073a3:	add    BYTE PTR [rax+0x10],ch
   1400073a9:	add    BYTE PTR [rax],al
   1400073ab:	add    BYTE PTR [rax],al
   1400073ad:	add    BYTE PTR [rax],al
   1400073af:	add    BYTE PTR [rax],bh
   1400073b1:	mov    al,BYTE PTR [rbx]
   1400073b3:	add    BYTE PTR [rax+0x9],cl
   1400073b9:	add    BYTE PTR [rax],al
   1400073bb:	add    BYTE PTR [rax],al
   1400073bd:	add    BYTE PTR [rax],al
   1400073bf:	add    al,al
   1400073c1:	xchg   ebx,eax
   1400073c2:	add    eax,DWORD PTR [rax]
   1400073c4:	push   0x4
   1400073c9:	add    BYTE PTR [rax],al
   1400073cb:	add    BYTE PTR [rax],al
   1400073cd:	add    BYTE PTR [rax],al
   1400073cf:	add    BYTE PTR [rax],ch
   1400073d1:	cwde   
   1400073d2:	add    eax,DWORD PTR [rax]
   1400073d4:	out    0x0,al
	...
   1400073de:	add    BYTE PTR [rax],al
   1400073e0:	adc    BYTE PTR [rcx+0x3800003],bl
	...
   1400073ee:	add    BYTE PTR [rax],al
   1400073f0:	and    BYTE PTR [rax+rax*1+0x0],dh
   1400073f4:	sbb    eax,0x5
   1400073f9:	add    BYTE PTR [rax],al
   1400073fb:	add    BYTE PTR [rax],al
   1400073fd:	add    BYTE PTR [rax],al
   1400073ff:	add    BYTE PTR [rbx],cl
   140007401:	add    BYTE PTR [rcx+0x0],cl
   140007404:	add    BYTE PTR [rcx+0x0],r9b
   140007408:	pop    rdi
   140007409:	add    BYTE PTR [rcx+0x0],al
   14000740c:	push   rax
   14000740d:	add    BYTE PTR [rax+0x0],dl
   140007410:	rex.WB add BYTE PTR [r11+0x0],al
   140007414:	rex.WRXB add BYTE PTR [r14+0x0],r9b
	...
   140007420:	cmp    al,0x3f
   140007422:	js     0x140007491
   140007424:	ins    BYTE PTR es:[rdi],dx
   140007425:	and    BYTE PTR [rsi+0x65],dh
   140007428:	jb     0x14000749d
   14000742a:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   140007431:	xor    BYTE PTR [rdx],ah
   140007433:	and    BYTE PTR [rbp+0x6e],ah
   140007436:	movsxd ebp,DWORD PTR [rdi+0x64]
   140007439:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
   140007440:	rex.RX sub eax,0x73202238
   140007446:	je     0x1400074a9
   140007448:	outs   dx,BYTE PTR ds:[rsi]
   140007449:	fs (bad) 
   14000744b:	ins    BYTE PTR es:[rdi],dx
   14000744c:	outs   dx,DWORD PTR ds:[rsi]
   14000744d:	outs   dx,BYTE PTR ds:[rsi]
   14000744e:	gs cmp eax,0x73657922
   140007454:	and    bh,BYTE PTR [rdi]
   140007456:	ds or  eax,0x2d213c0a
   14000745c:	sub    eax,0x706f4320
   140007461:	jns    0x1400074d5
   140007463:	imul   esp,DWORD PTR [rdi+0x68],0x63282074
   14000746a:	sub    DWORD PTR [rax],esp
   14000746c:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   140007474:	je     0x140007496
   140007476:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140007478:	jb     0x1400074ea
   14000747a:	outs   dx,DWORD PTR ds:[rsi]
   14000747b:	jb     0x1400074de
   14000747d:	je     0x1400074e8
   14000747f:	outs   dx,DWORD PTR ds:[rsi]
   140007480:	outs   dx,BYTE PTR ds:[rsi]
   140007481:	and    BYTE PTR [rip+0xa0d3e2d],ch        # 0x14a0db2b4
   140007487:	cmp    al,0x61
   140007489:	jae    0x1400074fe
   14000748b:	gs ins DWORD PTR es:[rdi],dx
   14000748d:	(bad)  
   14000748e:	ins    BYTE PTR es:[rdi],dx
   14000748f:	jns    0x1400074b1
   140007491:	js     0x140007500
   140007493:	ins    BYTE PTR es:[rdi],dx
   140007494:	outs   dx,BYTE PTR ds:[rsi]
   140007495:	jae    0x1400074d4
   140007497:	and    dh,BYTE PTR [rbp+0x72]
   14000749a:	outs   dx,BYTE PTR ds:[rsi]
   14000749b:	cmp    dh,BYTE PTR [rbx+0x63]
   14000749e:	push   0x73616d65
   1400074a3:	sub    eax,0x7263696d
   1400074a8:	outs   dx,DWORD PTR ds:[rsi]
   1400074a9:	jae    0x14000751a
   1400074ab:	data16 je 0x1400074db
   1400074ae:	movsxd ebp,DWORD PTR [rdi+0x6d]
   1400074b1:	cmp    ah,BYTE PTR [rcx+0x73]
   1400074b4:	ins    DWORD PTR es:[rdi],dx
   1400074b5:	cs jbe 0x1400074e9
   1400074b8:	and    ah,BYTE PTR [rax]
   1400074ba:	ins    DWORD PTR es:[rdi],dx
   1400074bb:	(bad)  
   1400074bc:	outs   dx,BYTE PTR ds:[rsi]
   1400074bd:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   1400074c4:	jb     0x140007539
   1400074c6:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   1400074cd:	xor    BYTE PTR [rdx],ah
   1400074cf:	ds or  eax,0x200a0d0a
   1400074d5:	and    BYTE PTR [rax],ah
   1400074d7:	and    BYTE PTR [rcx+riz*2],bh
   1400074da:	jae    0x14000754f
   1400074dc:	gs ins DWORD PTR es:[rdi],dx
   1400074de:	(bad)  
   1400074df:	ins    BYTE PTR es:[rdi],dx
   1400074e0:	jns    0x14000752b
   1400074e2:	fs outs dx,BYTE PTR gs:[rsi]
   1400074e5:	je     0x140007550
   1400074e7:	je     0x140007562
   1400074e9:	and    BYTE PTR [rsi+0x65],dh
   1400074ec:	jb     0x140007561
   1400074ee:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e35223d
   1400074f5:	xor    DWORD PTR [rsi],ebp
   1400074f7:	xor    BYTE PTR [rsi],ch
   1400074f9:	xor    BYTE PTR [rdx],ah
   1400074fb:	or     eax,0x2020200a
   140007500:	and    BYTE PTR [rax],ah
   140007502:	and    BYTE PTR [rax],ah
   140007504:	jo     0x140007578
   140007506:	outs   dx,DWORD PTR ds:[rsi]
   140007507:	movsxd esp,DWORD PTR [rbp+0x73]
   14000750a:	jae    0x14000757b
   14000750c:	jb     0x14000754f
   14000750e:	jb     0x140007573
   140007510:	push   0x63657469
   140007515:	je     0x14000758c
   140007517:	jb     0x14000757e
   140007519:	cmp    eax,0x646d6122
   14000751e:	ss xor al,0x22
   140007521:	or     eax,0x2020200a
   140007526:	and    BYTE PTR [rax],ah
   140007528:	and    BYTE PTR [rax],ah
   14000752a:	outs   dx,BYTE PTR ds:[rsi]
   14000752b:	(bad)  
   14000752c:	ins    DWORD PTR es:[rdi],dx
   14000752d:	gs cmp eax,0x6c656922
   140007533:	outs   dx,DWORD PTR ds:[rsi]
   140007534:	ja     0x1400075ab
   140007536:	je     0x1400075a1
   140007538:	ins    BYTE PTR es:[rdi],dx
   140007539:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x160209549
   14000753f:	and    BYTE PTR [rax],ah
   140007541:	and    BYTE PTR [rax],ah
   140007543:	je     0x1400075be
   140007545:	jo     0x1400075ac
   140007547:	cmp    eax,0x6e697722
   14000754c:	xor    esi,DWORD PTR [rdx]
   14000754e:	and    ch,BYTE PTR [rdi]
   140007550:	ds or  eax,0x200a0d0a
   140007556:	and    BYTE PTR [rax],ah
   140007558:	and    BYTE PTR [rsp+riz*2],bh
   14000755b:	gs jae 0x1400075c1
   14000755e:	jb     0x1400075c9
   140007560:	jo     0x1400075d6
   140007562:	imul   ebp,DWORD PTR [rdi+0x6e],0x2045493e
   140007569:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000756b:	ja     0x14000758d
   14000756d:	push   rbp
   14000756e:	je     0x1400075d9
   140007570:	ins    BYTE PTR es:[rdi],dx
   140007571:	and    BYTE PTR [rdx+0x72],al
   140007574:	outs   dx,DWORD PTR ds:[rsi]
   140007575:	imul   esp,DWORD PTR [rbp+0x72],0x3c
   140007579:	(bad)  
   14000757a:	fs gs jae 0x1400075e1
   14000757e:	jb     0x1400075e9
   140007580:	jo     0x1400075f6
   140007582:	imul   ebp,DWORD PTR [rdi+0x6e],0xd0a0d3e
   140007589:	or     ah,BYTE PTR [rax]
   14000758b:	and    BYTE PTR [rax],ah
   14000758d:	and    BYTE PTR [rsp+riz*2],bh
   140007590:	gs jo  0x1400075f8
   140007593:	outs   dx,BYTE PTR ds:[rsi]
   140007594:	fs outs dx,BYTE PTR gs:[rsi]
   140007597:	movsxd edi,DWORD PTR [rcx+0x3e]
   14000759a:	or     eax,0x2020200a
   14000759f:	and    BYTE PTR [rax],ah
   1400075a1:	and    BYTE PTR [rax],ah
   1400075a3:	and    BYTE PTR [rsp+riz*2],bh
   1400075a6:	gs jo  0x14000760e
   1400075a9:	outs   dx,BYTE PTR ds:[rsi]
   1400075aa:	fs outs dx,BYTE PTR gs:[rsi]
   1400075ad:	je     0x1400075f0
   1400075af:	jae    0x140007624
   1400075b1:	gs ins DWORD PTR es:[rdi],dx
   1400075b3:	(bad)  
   1400075b4:	ins    BYTE PTR es:[rdi],dx
   1400075b5:	jns    0x1400075f5
   1400075b7:	or     eax,0x2020200a
   1400075bc:	and    BYTE PTR [rax],ah
   1400075be:	and    BYTE PTR [rax],ah
   1400075c0:	and    BYTE PTR [rax],ah
   1400075c2:	and    BYTE PTR [rax],ah
   1400075c4:	and    BYTE PTR [rcx+riz*2],bh
   1400075c7:	jae    0x14000763c
   1400075c9:	gs ins DWORD PTR es:[rdi],dx
   1400075cb:	(bad)  
   1400075cc:	ins    BYTE PTR es:[rdi],dx
   1400075cd:	jns    0x140007618
   1400075cf:	fs outs dx,BYTE PTR gs:[rsi]
   1400075d2:	je     0x14000763d
   1400075d4:	je     0x14000764f
   1400075d6:	or     eax,0x2020200a
   1400075db:	and    BYTE PTR [rax],ah
   1400075dd:	and    BYTE PTR [rax],ah
   1400075df:	and    BYTE PTR [rax],ah
   1400075e1:	and    BYTE PTR [rax],ah
   1400075e3:	and    BYTE PTR [rax],ah
   1400075e5:	and    BYTE PTR [rax],ah
   1400075e7:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   1400075eb:	gs cmp eax,0x6e697722
   1400075f1:	xor    esi,DWORD PTR [rdx]
   1400075f3:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x160209603
   1400075f9:	and    BYTE PTR [rax],ah
   1400075fb:	and    BYTE PTR [rax],ah
   1400075fd:	and    BYTE PTR [rax],ah
   1400075ff:	and    BYTE PTR [rax],ah
   140007601:	and    BYTE PTR [rax],ah
   140007603:	and    BYTE PTR [rax],ah
   140007605:	and    BYTE PTR [rsi+0x61],ch
   140007608:	ins    DWORD PTR es:[rdi],dx
   140007609:	gs cmp eax,0x63694d22
   14000760f:	jb     0x140007680
   140007611:	jae    0x140007682
   140007613:	data16 je 0x140007644
   140007616:	push   rdi
   140007617:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   14000761e:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140007620:	ins    DWORD PTR es:[rdi],dx
   140007621:	ins    DWORD PTR es:[rdi],dx
   140007622:	outs   dx,DWORD PTR ds:[rsi]
   140007623:	outs   dx,BYTE PTR ds:[rsi]
   140007624:	sub    eax,0x746e6f43
   140007629:	jb     0x14000769a
   14000762b:	ins    BYTE PTR es:[rdi],dx
   14000762c:	jae    0x140007650
   14000762e:	or     eax,0x2020200a
   140007633:	and    BYTE PTR [rax],ah
   140007635:	and    BYTE PTR [rax],ah
   140007637:	and    BYTE PTR [rax],ah
   140007639:	and    BYTE PTR [rax],ah
   14000763b:	and    BYTE PTR [rax],ah
   14000763d:	and    BYTE PTR [rax],ah
   14000763f:	and    BYTE PTR [rsi+0x65],dh
   140007642:	jb     0x1400076b7
   140007644:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e36223d
   14000764b:	xor    BYTE PTR [rsi],ch
   14000764d:	xor    BYTE PTR [rsi],ch
   14000764f:	xor    BYTE PTR [rdx],ah
   140007651:	or     eax,0x2020200a
   140007656:	and    BYTE PTR [rax],ah
   140007658:	and    BYTE PTR [rax],ah
   14000765a:	and    BYTE PTR [rax],ah
   14000765c:	and    BYTE PTR [rax],ah
   14000765e:	and    BYTE PTR [rax],ah
   140007660:	and    BYTE PTR [rax],ah
   140007662:	and    BYTE PTR [rax+0x72],dh
   140007665:	outs   dx,DWORD PTR ds:[rsi]
   140007666:	movsxd esp,DWORD PTR [rbp+0x73]
   140007669:	jae    0x1400076da
   14000766b:	jb     0x1400076ae
   14000766d:	jb     0x1400076d2
   14000766f:	push   0x63657469
   140007674:	je     0x1400076eb
   140007676:	jb     0x1400076dd
   140007678:	cmp    eax,0xd222a22
   14000767d:	or     ah,BYTE PTR [rax]
   14000767f:	and    BYTE PTR [rax],ah
   140007681:	and    BYTE PTR [rax],ah
   140007683:	and    BYTE PTR [rax],ah
   140007685:	and    BYTE PTR [rax],ah
   140007687:	and    BYTE PTR [rax],ah
   140007689:	and    BYTE PTR [rax],ah
   14000768b:	and    BYTE PTR [rax],ah
   14000768d:	and    BYTE PTR [rax+0x75],dh
   140007690:	(bad)  
   140007691:	ins    BYTE PTR es:[rdi],dx
   140007692:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
   140007699:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
   14000769d:	and    dh,BYTE PTR [rsi]
   14000769f:	xor    eax,0x36623539
   1400076a4:	xor    al,0x31
   1400076a6:	xor    al,0x34
   1400076a8:	movsxd esp,DWORD PTR [rbx+0x66]
   1400076ab:	xor    DWORD PTR [rsi+riz*2+0x22],esp
   1400076af:	or     eax,0x2020200a
   1400076b4:	and    BYTE PTR [rax],ah
   1400076b6:	and    BYTE PTR [rax],ah
   1400076b8:	and    BYTE PTR [rax],ah
   1400076ba:	and    BYTE PTR [rax],ah
   1400076bc:	and    BYTE PTR [rax],ah
   1400076be:	and    BYTE PTR [rax],ah
   1400076c0:	and    BYTE PTR [rcx+riz*2+0x6e],ch
   1400076c4:	addr32 jne 0x140007728
   1400076c7:	addr32 gs cmp eax,0xd222a22
   1400076ce:	or     ah,BYTE PTR [rax]
   1400076d0:	and    BYTE PTR [rax],ah
   1400076d2:	and    BYTE PTR [rax],ah
   1400076d4:	and    BYTE PTR [rax],ah
   1400076d6:	and    BYTE PTR [rax],ah
   1400076d8:	and    BYTE PTR [rax],ah
   1400076da:	and    BYTE PTR [rdi],ch
   1400076dc:	ds or  eax,0x2020200a
   1400076e2:	and    BYTE PTR [rax],ah
   1400076e4:	and    BYTE PTR [rax],ah
   1400076e6:	and    BYTE PTR [rdi+rbp*1],bh
   1400076e9:	fs gs jo 0x140007752
   1400076ed:	outs   dx,BYTE PTR ds:[rsi]
   1400076ee:	fs outs dx,BYTE PTR gs:[rsi]
   1400076f1:	je     0x140007734
   1400076f3:	jae    0x140007768
   1400076f5:	gs ins DWORD PTR es:[rdi],dx
   1400076f7:	(bad)  
   1400076f8:	ins    BYTE PTR es:[rdi],dx
   1400076f9:	jns    0x140007739
   1400076fb:	or     eax,0x2020200a
   140007700:	and    BYTE PTR [rdi+rbp*1],bh
   140007703:	fs gs jo 0x14000776c
   140007707:	outs   dx,BYTE PTR ds:[rsi]
   140007708:	fs outs dx,BYTE PTR gs:[rsi]
   14000770b:	movsxd edi,DWORD PTR [rcx+0x3e]
   14000770e:	or     eax,0x200a0d0a
   140007713:	and    BYTE PTR [rax],ah
   140007715:	and    BYTE PTR [rsp+rsi*2],bh
   140007718:	jb     0x14000778f
   14000771a:	jae    0x140007790
   14000771c:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000771e:	outs   dx,WORD PTR ds:[rsi]
   140007720:	and    BYTE PTR [rax+0x6d],bh
   140007723:	ins    BYTE PTR es:[rdi],dx
   140007724:	outs   dx,BYTE PTR ds:[rsi]
   140007725:	jae    0x140007764
   140007727:	and    dh,BYTE PTR [rbp+0x72]
   14000772a:	outs   dx,BYTE PTR ds:[rsi]
   14000772b:	cmp    dh,BYTE PTR [rbx+0x63]
   14000772e:	push   0x73616d65
   140007733:	sub    eax,0x7263696d
   140007738:	outs   dx,DWORD PTR ds:[rsi]
   140007739:	jae    0x1400077aa
   14000773b:	data16 je 0x14000776b
   14000773e:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140007741:	cmp    ah,BYTE PTR [rcx+0x73]
   140007744:	ins    DWORD PTR es:[rdi],dx
   140007745:	cs jbe 0x14000777b
   140007748:	and    bh,BYTE PTR [rsi]
   14000774a:	or     eax,0x2020200a
   14000774f:	and    BYTE PTR [rax],ah
   140007751:	and    BYTE PTR [rax],ah
   140007753:	and    BYTE PTR [rbx+rsi*2],bh
   140007756:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14000775a:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   140007762:	and    BYTE PTR [rax],ah
   140007764:	and    BYTE PTR [rax],ah
   140007766:	and    BYTE PTR [rax],ah
   140007768:	and    BYTE PTR [rax],ah
   14000776a:	and    BYTE PTR [rax],ah
   14000776c:	cmp    al,0x72
   14000776e:	gs jno 0x1400077e6
   140007771:	gs jae 0x1400077e8
   140007774:	gs fs push rax
   140007777:	jb     0x1400077e2
   140007779:	jbe    0x1400077e4
   14000777b:	ins    BYTE PTR es:[rdi],dx
   14000777c:	gs addr32 gs jae 0x1400077bf
   140007781:	or     eax,0x2020200a
   140007786:	and    BYTE PTR [rax],ah
   140007788:	and    BYTE PTR [rax],ah
   14000778a:	and    BYTE PTR [rax],ah
   14000778c:	and    BYTE PTR [rax],ah
   14000778e:	and    BYTE PTR [rax],ah
   140007790:	and    BYTE PTR [rax],ah
   140007792:	and    BYTE PTR [rdx+rsi*2],bh
   140007795:	gs jno 0x14000780d
   140007798:	gs jae 0x14000780f
   14000779b:	gs fs rex.RB js 0x140007805
   1400077a0:	movsxd esi,DWORD PTR [rbp+0x74]
   1400077a3:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   1400077aa:	ins    BYTE PTR es:[rdi],dx
   1400077ab:	and    BYTE PTR [rbp+riz*2+0x76],ch
   1400077af:	gs ins BYTE PTR es:[rdi],dx
   1400077b1:	cmp    eax,0x49736122
   1400077b6:	outs   dx,BYTE PTR ds:[rsi]
   1400077b7:	jbe    0x140007828
   1400077b9:	imul   esp,DWORD PTR [rbp+0x72],0x22
   1400077bd:	and    BYTE PTR [rdi],ch
   1400077bf:	ds or  eax,0x2020200a
   1400077c5:	and    BYTE PTR [rax],ah
   1400077c7:	and    BYTE PTR [rax],ah
   1400077c9:	and    BYTE PTR [rax],ah
   1400077cb:	and    BYTE PTR [rax],ah
   1400077cd:	and    BYTE PTR [rdi+rbp*1],bh
   1400077d0:	jb     0x140007837
   1400077d2:	jno    0x140007849
   1400077d4:	gs jae 0x14000784b
   1400077d7:	gs fs push rax
   1400077da:	jb     0x140007845
   1400077dc:	jbe    0x140007847
   1400077de:	ins    BYTE PTR es:[rdi],dx
   1400077df:	gs addr32 gs jae 0x140007822
   1400077e4:	or     eax,0x2020200a
   1400077e9:	and    BYTE PTR [rax],ah
   1400077eb:	and    BYTE PTR [rax],ah
   1400077ed:	and    BYTE PTR [rdi+rbp*1],bh
   1400077f0:	jae    0x140007857
   1400077f2:	movsxd esi,DWORD PTR [rbp+0x72]
   1400077f5:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   1400077fd:	and    BYTE PTR [rax],ah
   1400077ff:	cmp    al,0x2f
   140007801:	je     0x140007875
   140007803:	jne    0x140007878
   140007805:	je     0x140007850
   140007807:	outs   dx,BYTE PTR ds:[rsi]
   140007808:	outs   dx,WORD PTR ds:[rsi]
   14000780a:	ds or  eax,0x2020200a
   140007810:	and    BYTE PTR [rbx+riz*2],bh
   140007813:	outs   dx,DWORD PTR ds:[rsi]
   140007814:	ins    DWORD PTR es:[rdi],dx
   140007815:	jo     0x140007878
   140007817:	je     0x140007882
   140007819:	(bad)  
   14000781a:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x6d782079
   140007822:	ins    BYTE PTR es:[rdi],dx
   140007823:	outs   dx,BYTE PTR ds:[rsi]
   140007824:	jae    0x140007863
   140007826:	and    dh,BYTE PTR [rbp+0x72]
   140007829:	outs   dx,BYTE PTR ds:[rsi]
   14000782a:	cmp    dh,BYTE PTR [rbx+0x63]
   14000782d:	push   0x73616d65
   140007832:	sub    eax,0x7263696d
   140007837:	outs   dx,DWORD PTR ds:[rsi]
   140007838:	jae    0x1400078a9
   14000783a:	data16 je 0x14000786a
   14000783d:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140007840:	cmp    ah,BYTE PTR [rbx+0x6f]
   140007843:	ins    DWORD PTR es:[rdi],dx
   140007844:	jo     0x1400078a7
   140007846:	je     0x1400078b1
   140007848:	(bad)  
   140007849:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x31762e79
   140007851:	and    bh,BYTE PTR [rsi]
   140007853:	or     eax,0x2020200a
   140007858:	and    BYTE PTR [rax],ah
   14000785a:	and    BYTE PTR [rax],ah
   14000785c:	and    BYTE PTR [rcx+riz*2],bh
   14000785f:	jo     0x1400078d1
   140007861:	ins    BYTE PTR es:[rdi],dx
   140007862:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   140007869:	ds or  eax,0x2020200a
   14000786f:	and    BYTE PTR [rax],ah
   140007871:	and    BYTE PTR [rax],ah
   140007873:	and    BYTE PTR [rax],ah
   140007875:	and    BYTE PTR [rax],ah
   140007877:	and    BYTE PTR [rcx+riz*1],bh
   14000787a:	sub    eax,0x6568542d
   14000787f:	and    BYTE PTR [rcx+0x44],cl
   140007882:	and    BYTE PTR [rdx+0x65],ah
   140007885:	ins    BYTE PTR es:[rdi],dx
   140007886:	outs   dx,DWORD PTR ds:[rsi]
   140007887:	ja     0x1400078a9
   140007889:	imul   ebp,DWORD PTR [rsi+0x64],0x74616369
   140007890:	gs jae 0x1400078b3
   140007893:	(bad)  
   140007894:	jo     0x140007906
   140007896:	ins    BYTE PTR es:[rdi],dx
   140007897:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14000789e:	and    BYTE PTR [rbx+0x75],dh
   1400078a1:	jo     0x140007913
   1400078a3:	outs   dx,DWORD PTR ds:[rsi]
   1400078a4:	jb     0x14000791a
   1400078a6:	and    BYTE PTR [rsi+0x6f],ah
   1400078a9:	jb     0x1400078cb
   1400078ab:	push   rdi
   1400078ac:	imul   ebp,DWORD PTR [rsi+0x64],0x2073776f
   1400078b3:	cmp    BYTE PTR [rax],ah
   1400078b5:	sub    eax,0xa0d3e2d
   1400078ba:	and    BYTE PTR [rax],ah
   1400078bc:	and    BYTE PTR [rax],ah
   1400078be:	and    BYTE PTR [rax],ah
   1400078c0:	and    BYTE PTR [rax],ah
   1400078c2:	and    BYTE PTR [rax],ah
   1400078c4:	and    BYTE PTR [rax],ah
   1400078c6:	cmp    al,0x73
   1400078c8:	jne    0x14000793a
   1400078ca:	jo     0x14000793b
   1400078cc:	jb     0x140007942
   1400078ce:	gs fs rex.WRXB push r11
   1400078d2:	and    BYTE PTR [rcx+0x64],cl
   1400078d5:	cmp    eax,0x61347b22
   1400078da:	xor    ah,BYTE PTR [rsi+0x32]
   1400078dd:	cmp    BYTE PTR [rbp+0x33],ah
   1400078e0:	sub    eax,0x39623335
   1400078e5:	sub    eax,0x31343434
   1400078ea:	sub    eax,0x63396162
   1400078ef:	sub    eax,0x64393664
   1400078f4:	xor    al,0x61
   1400078f6:	xor    al,0x61
   1400078f8:	ss xor edi,DWORD PTR gs:[rax]
   1400078fc:	jge    0x140007920
   1400078fe:	(bad)  
   1400078ff:	ds or  eax,0x2020200a
   140007905:	and    BYTE PTR [rax],ah
   140007907:	and    BYTE PTR [rax],ah
   140007909:	and    BYTE PTR [rdi+rbp*1],bh
   14000790c:	(bad)  
   14000790d:	jo     0x14000797f
   14000790f:	ins    BYTE PTR es:[rdi],dx
   140007910:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   140007917:	ds or  eax,0x2020200a
   14000791d:	and    BYTE PTR [rdi+rbp*1],bh
   140007920:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140007923:	jo     0x140007986
   140007925:	je     0x140007990
   140007927:	(bad)  
   140007928:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0xa0d3e79
   140007930:	cmp    al,0x2f
   140007932:	(bad)  
   140007933:	jae    0x1400079a8
   140007935:	gs ins DWORD PTR es:[rdi],dx
   140007937:	(bad)  
   140007938:	ins    BYTE PTR es:[rdi],dx
   140007939:	jns    0x140007979
   14000793b:	or     eax,0xa
   140007940:	sub    BYTE PTR [rax],al
   140007942:	add    BYTE PTR [rax],al
   140007944:	xor    BYTE PTR [rax],al
   140007946:	add    BYTE PTR [rax],al
   140007948:	(bad)  
   140007949:	add    BYTE PTR [rax],al
   14000794b:	add    BYTE PTR [rcx],al
   14000794d:	add    BYTE PTR [rax+rax*1],al
   140007950:	add    BYTE PTR [rax],al
   140007952:	add    BYTE PTR [rax],al
   140007954:	add    BYTE PTR [rax+rax*1],0x0
	...
   14000796c:	add    BYTE PTR [rax],al
   14000796e:	add    BYTE PTR [rax],0x0
   140007971:	add    BYTE PTR [rax],0x0
   140007974:	add    BYTE PTR [rax+0x800080],al
   14000797a:	add    BYTE PTR [rax],al
   14000797c:	add    BYTE PTR [rax],0x80
   14000797f:	add    BYTE PTR [rax-0x7fffff80],al
   140007985:	add    BYTE PTR [rax-0x3f3f4000],0x0
   14000798c:	add    BYTE PTR [rax],al
   14000798e:	inc    DWORD PTR [rax]
   140007990:	add    bh,bh
   140007992:	add    BYTE PTR [rax],al
   140007994:	add    bh,bh
   140007996:	inc    DWORD PTR [rax]
   140007998:	inc    DWORD PTR [rax]
   14000799a:	add    BYTE PTR [rax],al
   14000799c:	inc    DWORD PTR [rax]
   14000799e:	inc    DWORD PTR [rax]
   1400079a0:	(bad)  
   1400079a1:	inc    DWORD PTR [rax]
   1400079a3:	add    bh,bh
   1400079a5:	(bad)  
   1400079a6:	inc    DWORD PTR [rax]
	...
   1400079f0:	add    BYTE PTR [rax],al
   1400079f2:	or     edi,DWORD PTR [rbx+0xbbbb]
   1400079f8:	add    BYTE PTR [rax],al
   1400079fa:	int3   
   1400079fb:	int3   
   1400079fc:	int3   
   1400079fd:	int3   
   1400079fe:	int3   
	...
   140007a07:	add    BYTE PTR [rax],al
   140007a09:	add    BYTE PTR [rbx-0x44444445],bh
   140007a0f:	add    BYTE PTR [rsp+rcx*8],cl
   140007a12:	out    dx,al
   140007a13:	out    dx,al
   140007a14:	out    dx,al
   140007a15:	out    dx,al
   140007a16:	out    dx,al
   140007a17:	int3   
   140007a18:	rol    BYTE PTR [rax],0x0
   140007a1b:	add    BYTE PTR [rax],al
   140007a1d:	add    BYTE PTR [rax],al
   140007a1f:	add    BYTE PTR [rax],al
   140007a21:	or     edi,DWORD PTR [rbx+0xb0000b0]
   140007a27:	or     al,0xce
   140007a29:	out    dx,al
   140007a2a:	out    dx,al
   140007a2b:	out    dx,al
   140007a2c:	out    dx,al
   140007a2d:	out    dx,al
   140007a2e:	out    dx,al
   140007a2f:	out    dx,al
   140007a30:	in     al,dx
   140007a31:	rol    BYTE PTR [rax],0x0
   140007a34:	add    BYTE PTR [rax],al
   140007a36:	add    BYTE PTR [rax],al
   140007a38:	add    BYTE PTR [rbx+0xbb],bh
   140007a3e:	add    dh,cl
   140007a40:	out    dx,al
   140007a41:	out    dx,al
   140007a42:	out    dx,al
   140007a43:	out    dx,al
   140007a44:	out    dx,al
   140007a45:	out    dx,al
   140007a46:	out    dx,al
   140007a47:	out    dx,al
   140007a48:	out    dx,al
   140007a49:	in     al,dx
   140007a4a:	rol    BYTE PTR [rax],0x0
   140007a4d:	add    BYTE PTR [rax],al
   140007a4f:	add    BYTE PTR [rax],al
   140007a51:	mov    ebx,0xb0
   140007a56:	or     al,0xee
   140007a58:	out    dx,al
   140007a59:	out    dx,al
   140007a5a:	out    dx,al
   140007a5b:	out    dx,al
   140007a5c:	out    dx,al
   140007a5d:	out    dx,al
   140007a5e:	out    dx,al
   140007a5f:	out    dx,al
   140007a60:	out    dx,al
   140007a61:	out    dx,al
   140007a62:	in     al,dx
   140007a63:	add    BYTE PTR [rax],al
   140007a65:	add    BYTE PTR [rax],al
   140007a67:	add    BYTE PTR [rax],al
   140007a69:	mov    ebx,0xb0
   140007a6e:	(bad)  
   140007a6f:	out    dx,al
   140007a70:	out    dx,al
   140007a71:	out    dx,al
   140007a72:	out    dx,al
   140007a73:	out    dx,al
   140007a74:	out    dx,al
   140007a75:	out    dx,al
   140007a76:	out    dx,al
   140007a77:	out    dx,al
   140007a78:	out    dx,al
   140007a79:	out    dx,al
   140007a7a:	out    dx,al
   140007a7b:	rol    BYTE PTR [rax],0x0
   140007a7e:	add    BYTE PTR [rax],al
   140007a80:	or     edi,DWORD PTR [rbx+0xc0000b0]
   140007a86:	out    dx,al
   140007a87:	out    dx,al
   140007a88:	out    dx,al
   140007a89:	out    dx,al
   140007a8a:	out    dx,al
   140007a8b:	out    dx,al
   140007a8c:	out    dx,al
   140007a8d:	out    dx,al
   140007a8e:	out    dx,al
   140007a8f:	out    dx,al
   140007a90:	out    dx,al
   140007a91:	out    dx,al
   140007a92:	out    dx,al
   140007a93:	in     al,dx
   140007a94:	add    BYTE PTR [rax],al
   140007a96:	add    BYTE PTR [rax],al
   140007a98:	or     edi,DWORD PTR [rbx-0x31ffff50]
   140007a9e:	out    dx,al
   140007a9f:	out    dx,al
   140007aa0:	out    dx,al
   140007aa1:	out    dx,al
   140007aa2:	out    dx,al
   140007aa3:	out    dx,al
   140007aa4:	out    dx,al
   140007aa5:	out    dx,al
   140007aa6:	out    dx,al
   140007aa7:	out    dx,al
   140007aa8:	out    dx,al
   140007aa9:	out    dx,al
   140007aaa:	out    dx,al
   140007aab:	out    dx,al
   140007aac:	rol    BYTE PTR [rax],0x0
   140007aaf:	add    BYTE PTR [rbx],cl
   140007ab1:	mov    ebx,0xee0c00b0
   140007ab6:	out    dx,al
   140007ab7:	out    dx,al
   140007ab8:	out    dx,al
   140007ab9:	out    dx,al
   140007aba:	out    dx,al
   140007abb:	out    dx,al
   140007abc:	out    dx,al
   140007abd:	out    dx,al
   140007abe:	out    dx,al
   140007abf:	out    dx,al
   140007ac0:	out    dx,al
   140007ac1:	out    dx,al
   140007ac2:	out    dx,al
   140007ac3:	out    dx,al
   140007ac4:	in     al,dx
   140007ac5:	add    BYTE PTR [rax],al
   140007ac7:	add    BYTE PTR [rbx],cl
   140007ac9:	mov    ebx,0xeece00bb
   140007ace:	out    dx,al
   140007acf:	out    dx,al
   140007ad0:	out    dx,al
   140007ad1:	out    dx,al
   140007ad2:	out    dx,al
   140007ad3:	int3   
   140007ad4:	int3   
   140007ad5:	int3   
   140007ad6:	int3   
   140007ad7:	out    dx,al
   140007ad8:	out    dx,al
   140007ad9:	out    dx,al
   140007ada:	out    dx,al
   140007adb:	out    dx,al
   140007adc:	out    dx,al
   140007add:	rol    BYTE PTR [rax],0x0
   140007ae0:	add    BYTE PTR [rbx-0x1131ff45],bh
   140007ae6:	out    dx,al
   140007ae7:	out    dx,al
   140007ae8:	out    dx,al
   140007ae9:	out    dx,al
   140007aea:	in     al,dx
   140007aeb:	add    BYTE PTR [rax],al
   140007aed:	add    BYTE PTR [rax],al
   140007aef:	int3   
   140007af0:	out    dx,al
   140007af1:	out    dx,al
   140007af2:	out    dx,al
   140007af3:	out    dx,al
   140007af4:	out    dx,al
   140007af5:	rol    BYTE PTR [rax],0x0
   140007af8:	add    BYTE PTR [rbx-0x1111f345],bh
   140007afe:	out    dx,al
   140007aff:	out    dx,al
   140007b00:	out    dx,al
   140007b01:	out    dx,al
   140007b02:	rol    BYTE PTR [rax],0x0
   140007b05:	add    BYTE PTR [rax],al
   140007b07:	add    dh,cl
   140007b09:	out    dx,al
   140007b0a:	out    dx,al
   140007b0b:	out    dx,al
   140007b0c:	out    dx,al
   140007b0d:	in     al,dx
   140007b0e:	add    BYTE PTR [rax],al
   140007b10:	add    BYTE PTR [rbx-0x1111c345],bh
   140007b16:	out    dx,al
   140007b17:	out    dx,al
   140007b18:	out    dx,al
   140007b19:	in     al,dx
   140007b1a:	add    BYTE PTR [rax],al
   140007b1c:	add    BYTE PTR [rax],al
   140007b1e:	add    BYTE PTR [rax],al
   140007b20:	or     al,0xce
   140007b22:	out    dx,al
   140007b23:	out    dx,al
   140007b24:	out    dx,al
   140007b25:	out    dx,al
   140007b26:	rol    BYTE PTR [rax],0x0
   140007b29:	mov    ebx,0xeeee3ebb
   140007b2e:	out    dx,al
   140007b2f:	out    dx,al
   140007b30:	out    dx,al
   140007b31:	rol    BYTE PTR [rax],0x0
   140007b34:	add    BYTE PTR [rax],al
   140007b36:	add    BYTE PTR [rax],al
   140007b38:	add    BYTE PTR [rsp+rcx*8],cl
   140007b3b:	int3   
   140007b3c:	int3   
   140007b3d:	int3   
   140007b3e:	rol    BYTE PTR [rax],0x0
   140007b41:	or     edi,DWORD PTR [rbx-0x1111114d]
   140007b47:	out    dx,al
   140007b48:	in     al,dx
	...
   140007b59:	or     edi,DWORD PTR [rbx-0x1111814d]
   140007b5f:	out    dx,al
   140007b60:	in     al,dx
	...
   140007b71:	add    BYTE PTR [rbx-0x1111c145],bh
   140007b77:	out    dx,al
   140007b78:	in     al,dx
	...
   140007b89:	add    BYTE PTR [rbx-0x1111cc45],bh
   140007b8f:	out    dx,al
   140007b90:	in     al,dx
   140007b91:	int3   
   140007b92:	int3   
   140007b93:	int3   
   140007b94:	int3   
   140007b95:	int3   
   140007b96:	int3   
   140007b97:	int3   
   140007b98:	int3   
   140007b99:	int3   
   140007b9a:	int3   
   140007b9b:	int3   
   140007b9c:	int3   
   140007b9d:	int3   
   140007b9e:	int3   
   140007b9f:	add    BYTE PTR [rax],al
   140007ba1:	add    BYTE PTR [rbx-0x11114c45],bh
   140007ba7:	out    dx,al
   140007ba8:	out    dx,al
   140007ba9:	out    dx,al
   140007baa:	out    dx,al
   140007bab:	out    dx,al
   140007bac:	out    dx,al
   140007bad:	out    dx,al
   140007bae:	out    dx,al
   140007baf:	out    dx,al
   140007bb0:	out    dx,al
   140007bb1:	out    dx,al
   140007bb2:	out    dx,al
   140007bb3:	out    dx,al
   140007bb4:	out    dx,al
   140007bb5:	out    dx,al
   140007bb6:	in     al,dx
   140007bb7:	add    BYTE PTR [rax],al
   140007bb9:	add    BYTE PTR [rbx],cl
   140007bbb:	mov    ebx,0xeeee3eb3
   140007bc0:	out    dx,al
   140007bc1:	out    dx,al
   140007bc2:	out    dx,al
   140007bc3:	out    dx,al
   140007bc4:	out    dx,al
   140007bc5:	out    dx,al
   140007bc6:	out    dx,al
   140007bc7:	out    dx,al
   140007bc8:	out    dx,al
   140007bc9:	out    dx,al
   140007bca:	out    dx,al
   140007bcb:	out    dx,al
   140007bcc:	out    dx,al
   140007bcd:	out    dx,al
   140007bce:	in     al,dx
   140007bcf:	add    BYTE PTR [rax],al
   140007bd1:	add    BYTE PTR [rbx+rdi*4],cl
   140007bd4:	mov    ebx,0xeeeeee3e
   140007bd9:	out    dx,al
   140007bda:	out    dx,al
   140007bdb:	out    dx,al
   140007bdc:	out    dx,al
   140007bdd:	out    dx,al
   140007bde:	out    dx,al
   140007bdf:	out    dx,al
   140007be0:	out    dx,al
   140007be1:	out    dx,al
   140007be2:	out    dx,al
   140007be3:	out    dx,al
   140007be4:	out    dx,al
   140007be5:	out    dx,al
   140007be6:	in     al,dx
   140007be7:	add    BYTE PTR [rax],al
   140007be9:	add    BYTE PTR [rbx+rbp*8],cl
   140007bec:	mov    ebx,0xeeeeeeb3
   140007bf1:	out    dx,al
   140007bf2:	out    dx,al
   140007bf3:	out    dx,al
   140007bf4:	out    dx,al
   140007bf5:	out    dx,al
   140007bf6:	out    dx,al
   140007bf7:	out    dx,al
   140007bf8:	out    dx,al
   140007bf9:	out    dx,al
   140007bfa:	out    dx,al
   140007bfb:	out    dx,al
   140007bfc:	out    dx,al
   140007bfd:	out    dx,al
   140007bfe:	in     al,dx
   140007bff:	add    BYTE PTR [rax],al
   140007c01:	add    BYTE PTR [rbx+rbp*8],cl
   140007c04:	mov    ebx,0xeeee3eb3
   140007c09:	out    dx,al
   140007c0a:	out    dx,al
   140007c0b:	out    dx,al
   140007c0c:	out    dx,al
   140007c0d:	out    dx,al
   140007c0e:	out    dx,al
   140007c0f:	out    dx,al
   140007c10:	out    dx,al
   140007c11:	out    dx,al
   140007c12:	out    dx,al
   140007c13:	out    dx,al
   140007c14:	out    dx,al
   140007c15:	out    dx,al
   140007c16:	in     al,dx
   140007c17:	add    BYTE PTR [rax],al
   140007c19:	add    BYTE PTR [rsi+rbp*8],cl
   140007c1c:	mov    ebx,0xecee33bb
   140007c21:	int3   
   140007c22:	int3   
   140007c23:	int3   
   140007c24:	int3   
   140007c25:	int3   
   140007c26:	int3   
   140007c27:	int3   
   140007c28:	int3   
   140007c29:	out    dx,al
   140007c2a:	out    dx,al
   140007c2b:	out    dx,al
   140007c2c:	out    dx,al
   140007c2d:	out    dx,al
   140007c2e:	in     al,dx
   140007c2f:	add    BYTE PTR [rax],al
   140007c31:	add    BYTE PTR [rsi+rbp*8],cl
   140007c34:	jmp    0x140007bf1
   140007c36:	mov    bl,0x3e
   140007c38:	in     al,dx
   140007c39:	add    BYTE PTR [rax],al
   140007c3b:	add    BYTE PTR [rax],al
   140007c3d:	add    BYTE PTR [rax],al
   140007c3f:	add    BYTE PTR [rsi+rbp*8],cl
   140007c42:	out    dx,al
   140007c43:	out    dx,al
   140007c44:	out    dx,al
   140007c45:	out    dx,al
   140007c46:	in     al,dx
   140007c47:	add    BYTE PTR [rax],al
   140007c49:	add    BYTE PTR [rax],al
   140007c4b:	(bad)  
   140007c4c:	out    dx,al
   140007c4d:	mov    ebx,0xec33bb
   140007c52:	add    BYTE PTR [rax],al
   140007c54:	add    BYTE PTR [rax],al
   140007c56:	add    BYTE PTR [rax],al
   140007c58:	or     al,0xee
   140007c5a:	out    dx,al
   140007c5b:	out    dx,al
   140007c5c:	out    dx,al
   140007c5d:	out    dx,al
   140007c5e:	rol    BYTE PTR [rax],0x0
   140007c61:	add    BYTE PTR [rax],al
   140007c63:	(bad)  
   140007c64:	out    dx,al
   140007c65:	mov    ebx,0x3cb3bb
   140007c6a:	add    BYTE PTR [rax],al
   140007c6c:	add    BYTE PTR [rax],al
   140007c6e:	add    BYTE PTR [rax],al
   140007c70:	or     al,0xee
   140007c72:	out    dx,al
   140007c73:	out    dx,al
   140007c74:	out    dx,al
   140007c75:	out    dx,al
   140007c76:	rol    BYTE PTR [rax],0x0
   140007c79:	add    BYTE PTR [rax],al
   140007c7b:	(bad)  
   140007c7c:	out    dx,al
   140007c7d:	jmp    0x140007c3a
   140007c7f:	mov    ebx,0xc033
   140007c84:	add    BYTE PTR [rax],al
   140007c86:	add    BYTE PTR [rax],al
   140007c88:	(bad)  
   140007c89:	out    dx,al
   140007c8a:	out    dx,al
   140007c8b:	out    dx,al
   140007c8c:	out    dx,al
   140007c8d:	out    dx,al
   140007c8e:	rol    BYTE PTR [rax],0x0
   140007c91:	add    BYTE PTR [rax],al
   140007c93:	or     al,0xee
   140007c95:	out    dx,al
   140007c96:	mov    ebx,0xc0b3bb
   140007c9b:	add    BYTE PTR [rax],al
   140007c9d:	add    BYTE PTR [rax],al
   140007c9f:	add    dh,cl
   140007ca1:	out    dx,al
   140007ca2:	out    dx,al
   140007ca3:	out    dx,al
   140007ca4:	out    dx,al
   140007ca5:	in     al,dx
   140007ca6:	add    BYTE PTR [rax],al
   140007ca8:	add    BYTE PTR [rax],al
   140007caa:	add    BYTE PTR [rsi+rbp*8],cl
   140007cad:	out    dx,al
   140007cae:	jmp    0x140007c6b
   140007cb0:	mov    ebx,0x33
   140007cb5:	add    BYTE PTR [rax],al
   140007cb7:	or     al,0xee
   140007cb9:	out    dx,al
   140007cba:	out    dx,al
   140007cbb:	out    dx,al
   140007cbc:	out    dx,al
   140007cbd:	in     al,dx
   140007cbe:	add    BYTE PTR [rax],al
   140007cc0:	add    BYTE PTR [rax],al
   140007cc2:	add    BYTE PTR [rax],al
   140007cc4:	(bad)  
   140007cc5:	out    dx,al
   140007cc6:	out    dx,al
   140007cc7:	mov    ebx,0x30b3bb
   140007ccc:	add    BYTE PTR [rax],al
   140007cce:	add    dh,cl
   140007cd0:	out    dx,al
   140007cd1:	out    dx,al
   140007cd2:	out    dx,al
   140007cd3:	out    dx,al
   140007cd4:	out    dx,al
   140007cd5:	rol    BYTE PTR [rax],0x0
   140007cd8:	add    BYTE PTR [rax],al
   140007cda:	add    BYTE PTR [rax],al
   140007cdc:	(bad)  
   140007cdd:	out    dx,al
   140007cde:	out    dx,al
   140007cdf:	jmp    0x140007c9c
   140007ce1:	mov    ebx,0xc033
   140007ce6:	int3   
   140007ce7:	out    dx,al
   140007ce8:	out    dx,al
   140007ce9:	out    dx,al
   140007cea:	out    dx,al
   140007ceb:	out    dx,al
   140007cec:	out    dx,al
   140007ced:	rol    BYTE PTR [rax],0x0
   140007cf0:	add    BYTE PTR [rax],al
   140007cf2:	add    BYTE PTR [rax],al
   140007cf4:	or     al,0xee
   140007cf6:	out    dx,al
   140007cf7:	out    dx,al
   140007cf8:	mov    ebx,0xcc3cb3bb
   140007cfd:	int3   
   140007cfe:	out    dx,al
   140007cff:	out    dx,al
   140007d00:	out    dx,al
   140007d01:	out    dx,al
   140007d02:	out    dx,al
   140007d03:	out    dx,al
   140007d04:	in     al,dx
   140007d05:	or     eax,DWORD PTR [rax]
   140007d07:	add    BYTE PTR [rax],al
   140007d09:	add    BYTE PTR [rax],al
   140007d0b:	add    BYTE PTR [rax],al
   140007d0d:	(bad)  
   140007d0e:	out    dx,al
   140007d0f:	out    dx,al
   140007d10:	jmp    0x140007ccd
   140007d12:	mov    ebx,0xeeee3e33
   140007d17:	out    dx,al
   140007d18:	out    dx,al
   140007d19:	out    dx,al
   140007d1a:	out    dx,al
   140007d1b:	out    dx,al
   140007d1c:	rol    BYTE PTR [rax],0xb0
   140007d1f:	add    BYTE PTR [rax],al
   140007d21:	add    BYTE PTR [rax],al
   140007d23:	add    BYTE PTR [rax],al
   140007d25:	or     al,0xee
   140007d27:	out    dx,al
   140007d28:	out    dx,al
   140007d29:	mov    ebx,0xee33bbbb
   140007d2e:	out    dx,al
   140007d2f:	out    dx,al
   140007d30:	out    dx,al
   140007d31:	out    dx,al
   140007d32:	out    dx,al
   140007d33:	in     al,dx
   140007d34:	add    BYTE PTR [rax],al
   140007d36:	mov    al,0x0
   140007d38:	add    BYTE PTR [rax],al
   140007d3a:	add    BYTE PTR [rax],al
   140007d3c:	add    BYTE PTR [rax],al
   140007d3e:	(bad)  
   140007d3f:	out    dx,al
   140007d40:	out    dx,al
   140007d41:	jmp    0x140007cfe
   140007d43:	mov    ebx,0xeeee3ebb
   140007d48:	out    dx,al
   140007d49:	out    dx,al
   140007d4a:	out    dx,al
   140007d4b:	rol    BYTE PTR [rax],0x0
   140007d4e:	mov    ebx,0x0
   140007d53:	add    BYTE PTR [rax],al
   140007d55:	add    BYTE PTR [rsi+rbp*8],cl
   140007d58:	out    dx,al
   140007d59:	out    dx,al
   140007d5a:	mov    ebx,0x3eb3bbbb
   140007d5f:	out    dx,al
   140007d60:	out    dx,al
   140007d61:	out    dx,al
   140007d62:	in     al,dx
   140007d63:	add    BYTE PTR [rax],al
   140007d65:	add    BYTE PTR [rbx+0x0],bh
   140007d6b:	add    BYTE PTR [rax],al
   140007d6d:	add    BYTE PTR [rax],al
   140007d6f:	int3   
   140007d70:	out    dx,al
   140007d71:	out    dx,al
   140007d72:	jmp    0x140007d2f
   140007d74:	mov    ebx,0xeeeeb3bb
   140007d79:	in     al,dx
   140007d7a:	rol    BYTE PTR [rax],0x0
   140007d7d:	add    BYTE PTR [rbx+0x0],bh
   140007d83:	add    BYTE PTR [rax],al
   140007d85:	add    BYTE PTR [rax],al
   140007d87:	add    ah,cl
   140007d89:	out    dx,al
   140007d8a:	out    dx,al
   140007d8b:	jmp    0x140007d48
   140007d8d:	mov    ebx,0xc0cc33bb
   140007d92:	add    BYTE PTR [rax],al
   140007d94:	add    BYTE PTR [rax],al
   140007d96:	mov    ebx,0x0
   140007d9b:	add    BYTE PTR [rax],al
   140007d9d:	add    BYTE PTR [rax],al
   140007d9f:	add    BYTE PTR [rax],al
   140007da1:	int3   
   140007da2:	(bad)  
   140007da3:	out    dx,al
   140007da4:	mov    ebx,0xbbbbbbbb
   140007da9:	add    BYTE PTR [rax],al
   140007dab:	add    BYTE PTR [rax],al
   140007dad:	or     esi,DWORD PTR [rax+0x0]
   140007db3:	add    BYTE PTR [rax],al
   140007db5:	add    BYTE PTR [rax],al
   140007db7:	add    BYTE PTR [rax],al
   140007db9:	add    BYTE PTR [rsp+rcx*8],cl
   140007dbc:	int3   
   140007dbd:	retf   
   140007dbe:	mov    ebx,0xb0bbbbbb
   140007dc3:	add    BYTE PTR [rax],al
   140007dc5:	mov    ebx,0xb0
	...
   140007dd6:	mov    ebx,0xbbbbbbbb
   140007ddb:	mov    ebx,0xb0bbbb
	...
   140007dec:	add    BYTE PTR [rax],al
   140007dee:	add    BYTE PTR [rbx-0x44444445],bh
   140007df4:	mov    ebx,0xbb
	...
   140007e05:	add    BYTE PTR [rax],al
   140007e07:	add    BYTE PTR [rbx],cl
   140007e09:	mov    ebx,0xbbbbbb
	...
   140007e26:	add    BYTE PTR [rax],al
   140007e28:	(bad)  
   140007e29:	(bad)  
   140007e2a:	(bad)  
   140007e2b:	(bad)  
   140007e2c:	(bad)  
   140007e2d:	inc    DWORD PTR [rax]
   140007e2f:	add    bh,bh
   140007e31:	(bad)  
   140007e32:	(bad)  
   140007e33:	(bad)  
   140007e34:	(bad)  
   140007e35:	inc    DWORD PTR [rax]
   140007e37:	add    bh,bh
   140007e39:	(bad)  
   140007e3a:	(bad)  
   140007e3b:	(bad)  
   140007e3c:	(bad)  
   140007e3d:	inc    DWORD PTR [rax]
   140007e3f:	add    al,bh
   140007e41:	(bad)  
   140007e43:	add    edi,edi
   140007e45:	inc    DWORD PTR [rax]
   140007e47:	add    al,dh
   140007e49:	add    eax,DWORD PTR [rax+0xff7f00]
   140007e4f:	add    cl,ah
   140007e51:	cli    
   140007e52:	add    BYTE PTR [rax],al
   140007e54:	(bad)  
   140007e55:	inc    DWORD PTR [rax]
   140007e57:	add    bl,al
   140007e59:	cld    
   140007e5a:	add    BYTE PTR [rax],al
   140007e5c:	(bad)  
   140007e5d:	inc    DWORD PTR [rax]
   140007e5f:	add    bh,al
   140007e61:	clc    
   140007e62:	add    BYTE PTR [rax],al
   140007e64:	add    edi,edi
   140007e66:	add    BYTE PTR [rax],al
   140007e68:	(bad)  
   140007e69:	lock add BYTE PTR [rax],al
   140007e6c:	add    edi,edi
   140007e6e:	add    BYTE PTR [rax],al
   140007e70:	xchg   eax,esp
   140007e72:	add    BYTE PTR [rax],al
   140007e74:	add    bh,bh
   140007e76:	add    BYTE PTR [rax],al
   140007e78:	xchg   eax,eax
   140007e7a:	add    BYTE PTR [rax],al
   140007e7c:	add    BYTE PTR [rdi+0x0],bh
   140007e7f:	add    BYTE PTR [rdi+0x80],al
   140007e85:	(bad)  
   140007e86:	add    BYTE PTR [rax],al
   140007e88:	add    DWORD PTR [rax],0x0
   140007e8b:	add    BYTE PTR [rax],al
   140007e8d:	(bad)  
   140007e8e:	add    BYTE PTR [rax],al
   140007e90:	ret    
   140007e91:	add    BYTE PTR [rbx],al
   140007e93:	cld    
   140007e94:	add    BYTE PTR [rdi],bl
   140007e96:	add    BYTE PTR [rax],al
   140007e98:	ret    0x700
   140007e9b:	inc    DWORD PTR [rax]
   140007e9d:	sldt   WORD PTR [rax]
   140007ea0:	rol    BYTE PTR [rax],0xf
   140007ea3:	inc    DWORD PTR [rax-0x3ffffff9]
   140007ea9:	add    BYTE PTR [rdi],bl
   140007eab:	jmp    rax
   140007ead:	(bad)  
   140007eae:	add    BYTE PTR [rax],al
   140007eb0:	loopne 0x140007eb2
   140007eb2:	(bad)  
   140007eb3:	(bad)  
   140007eb4:	(bad)  
   140007eb5:	inc    DWORD PTR [rax]
   140007eb7:	add    al,ah
   140007eb9:	add    BYTE PTR [rdi],bh
   140007ebb:	(bad)  
   140007ebc:	(bad)  
   140007ebd:	inc    DWORD PTR [rax]
   140007ebf:	add    al,dh
   140007ec1:	add    BYTE PTR [rdi],bh
   140007ec3:	(bad)  
   140007ec4:	(bad)  
   140007ec5:	inc    DWORD PTR [rax]
   140007ec7:	add    al,dh
   140007ec9:	add    BYTE PTR [rax],al
   140007ecb:	add    BYTE PTR [rax],al
   140007ecd:	add    eax,DWORD PTR [rax]
   140007ecf:	add    al,dh
   140007ed1:	add    BYTE PTR [rax],al
   140007ed3:	add    BYTE PTR [rax],al
   140007ed5:	add    eax,DWORD PTR [rax]
   140007ed7:	add    al,bh
   140007ed9:	add    BYTE PTR [rax],al
   140007edb:	add    BYTE PTR [rax],al
   140007edd:	add    eax,DWORD PTR [rax]
   140007edf:	add    al,bh
   140007ee1:	add    BYTE PTR [rax],al
   140007ee3:	add    BYTE PTR [rax],al
   140007ee5:	add    eax,DWORD PTR [rax]
   140007ee7:	add    al,bh
   140007ee9:	add    BYTE PTR [rax],al
   140007eeb:	add    BYTE PTR [rax],al
   140007eed:	add    eax,DWORD PTR [rax]
   140007eef:	add    al,bh
   140007ef1:	add    BYTE PTR [rax],al
   140007ef3:	add    BYTE PTR [rax],al
   140007ef5:	add    eax,DWORD PTR [rax]
   140007ef7:	add    al,bh
   140007ef9:	add    BYTE PTR [rax],al
   140007efb:	add    BYTE PTR [rax],al
   140007efd:	add    eax,DWORD PTR [rax]
   140007eff:	add    al,bh
   140007f01:	add    BYTE PTR [rdi],bh
   140007f03:	inc    DWORD PTR [rax-0x3fffffd]
   140007f09:	add    BYTE PTR [rdi],bh
   140007f0b:	inc    DWORD PTR [rax-0x3fffff9]
   140007f11:	add    BYTE PTR [rdi],bh
   140007f13:	inc    DWORD PTR [rax-0x3fffff9]
   140007f19:	add    BYTE PTR [rdi],bl
   140007f1b:	inc    DWORD PTR [rax]
   140007f1d:	(bad)  
   140007f1e:	add    BYTE PTR [rax],al
   140007f20:	inc    BYTE PTR [rax]
   140007f22:	(bad)  
   140007f23:	inc    DWORD PTR [rax]
   140007f25:	sldt   WORD PTR [rax]
   140007f28:	inc    BYTE PTR [rax]
   140007f2a:	paddd  mm0,QWORD PTR [rax]
   140007f2d:	sldt   WORD PTR [rax]
   140007f30:	inc    DWORD PTR [rax]
   140007f32:	(bad)  
   140007f33:	cld    
   140007f34:	add    BYTE PTR [rdi],bl
   140007f36:	add    BYTE PTR [rax],al
   140007f38:	inc    DWORD PTR [rax]
   140007f3a:	add    eax,esi
   140007f3c:	add    BYTE PTR [rdi],bl
   140007f3e:	add    BYTE PTR [rax],al
   140007f40:	inc    DWORD PTR [rax+0x2f000000]
   140007f46:	add    BYTE PTR [rax],al
   140007f48:	inc    eax
   140007f4a:	add    BYTE PTR [rax],al
   140007f4c:	add    BYTE PTR [rdi+0x0],dh
   140007f4f:	add    bh,bh
   140007f51:	loopne 0x140007f53
   140007f53:	add    BYTE PTR [rax],al
   140007f55:	test   DWORD PTR [rax],0xf0ff00
   140007f5b:	add    BYTE PTR [rcx],al
   140007f5d:	repz add BYTE PTR [rax],al
   140007f60:	(bad)  
   140007f61:	clc    
   140007f62:	add    BYTE PTR [rax],al
   140007f64:	add    esi,ebx
   140007f66:	add    BYTE PTR [rax],al
   140007f68:	(bad)  
   140007f69:	cld    
   140007f6a:	add    BYTE PTR [rax],al
   140007f6c:	(bad)  
   140007f6d:	repz add BYTE PTR [rax],al
   140007f70:	(bad)  
   140007f71:	inc    DWORD PTR [rax]
   140007f73:	add    BYTE PTR [rdi],bl
   140007f75:	repz add BYTE PTR [rax],al
   140007f78:	(bad)  
   140007f79:	inc    eax
   140007f7b:	add    BYTE PTR [rdi],bh
   140007f7d:	out    0x0,eax
   140007f7f:	add    bh,bh
   140007f81:	(bad)  
   140007f82:	clc    
   140007f83:	add    BYTE PTR [rdi],al
   140007f85:	mov    DWORD PTR [rax],0xffffff00
   140007f8b:	lock add BYTE PTR [rdi],al
   140007f8e:	add    BYTE PTR [rax],al
   140007f90:	(bad)  
   140007f91:	(bad)  
   140007f92:	(bad)  
   140007f93:	cld    
   140007f94:	add    BYTE PTR [rdi],cl
   140007f96:	add    BYTE PTR [rax],al
   140007f98:	(bad)  
   140007f99:	(bad)  
   140007f9a:	(bad)  
   140007f9b:	inc    DWORD PTR [rax-0xffffc1]
   140007fa1:	(bad)  
   140007fa2:	(bad)  
   140007fa3:	(bad)  
   140007fa4:	(bad)  
   140007fa5:	inc    DWORD PTR [rax]
   140007fa7:	add    BYTE PTR [rax],ch
   140007fa9:	add    BYTE PTR [rax],al
   140007fab:	add    BYTE PTR [rax],ah
   140007fad:	add    BYTE PTR [rax],al
   140007faf:	add    BYTE PTR [rax+0x0],al
   140007fb2:	add    BYTE PTR [rax],al
   140007fb4:	add    DWORD PTR [rax],eax
   140007fb6:	add    al,0x0
   140007fb8:	add    BYTE PTR [rax],al
   140007fba:	add    BYTE PTR [rax],al
   140007fbc:	add    BYTE PTR [rdx],al
	...
   140007fd6:	add    BYTE PTR [rax],0x0
   140007fd9:	add    BYTE PTR [rax],0x0
   140007fdc:	add    BYTE PTR [rax+0x800080],al
   140007fe2:	add    BYTE PTR [rax],al
   140007fe4:	add    BYTE PTR [rax],0x80
   140007fe7:	add    BYTE PTR [rax-0x7fffff80],al
   140007fed:	add    BYTE PTR [rax-0x3f3f4000],0x0
   140007ff4:	add    BYTE PTR [rax],al
   140007ff6:	inc    DWORD PTR [rax]
   140007ff8:	add    bh,bh
   140007ffa:	add    BYTE PTR [rax],al
   140007ffc:	add    bh,bh
   140007ffe:	inc    DWORD PTR [rax]
   140008000:	inc    DWORD PTR [rax]
   140008002:	add    BYTE PTR [rax],al
   140008004:	inc    DWORD PTR [rax]
   140008006:	inc    DWORD PTR [rax]
   140008008:	(bad)  
   140008009:	inc    DWORD PTR [rax]
   14000800b:	add    bh,bh
   14000800d:	(bad)  
   14000800e:	inc    DWORD PTR [rax]
	...
   140008030:	add    BYTE PTR [rax],al
   140008032:	mov    ebx,0xbb
   140008037:	int3   
   140008038:	int3   
   140008039:	int3   
   14000803a:	add    BYTE PTR [rax],al
   14000803c:	add    BYTE PTR [rax],al
   14000803e:	add    BYTE PTR [rax],al
   140008040:	add    BYTE PTR [rbx],cl
   140008042:	mov    al,0x0
   140008044:	mov    al,0xc
   140008046:	int3   
   140008047:	out    dx,al
   140008048:	out    dx,al
   140008049:	out    dx,al
   14000804a:	int3   
   14000804b:	rol    BYTE PTR [rax],0x0
   14000804e:	add    BYTE PTR [rax],al
   140008050:	add    BYTE PTR [rbx-0x31f40000],bh
   140008056:	out    dx,al
   140008057:	out    dx,al
   140008058:	out    dx,al
   140008059:	out    dx,al
   14000805a:	out    dx,al
   14000805b:	in     al,dx
   14000805c:	rol    BYTE PTR [rax],0x0
   14000805f:	add    BYTE PTR [rax],al
   140008061:	mov    ebx,0xeece0000
   140008066:	out    dx,al
   140008067:	out    dx,al
   140008068:	out    dx,al
   140008069:	out    dx,al
   14000806a:	out    dx,al
   14000806b:	out    dx,al
   14000806c:	in     al,dx
   14000806d:	add    BYTE PTR [rax],al
   14000806f:	add    BYTE PTR [rbx],cl
   140008071:	mov    bl,0x0
   140008073:	or     al,0xee
   140008075:	out    dx,al
   140008076:	out    dx,al
   140008077:	out    dx,al
   140008078:	out    dx,al
   140008079:	out    dx,al
   14000807a:	out    dx,al
   14000807b:	out    dx,al
   14000807c:	out    dx,al
   14000807d:	rol    BYTE PTR [rax],0x0
   140008080:	or     esi,DWORD PTR [rbx-0x11113200]
   140008086:	out    dx,al
   140008087:	out    dx,al
   140008088:	out    dx,al
   140008089:	out    dx,al
   14000808a:	out    dx,al
   14000808b:	out    dx,al
   14000808c:	out    dx,al
   14000808d:	in     al,dx
   14000808e:	add    BYTE PTR [rax],al
   140008090:	or     esi,DWORD PTR [rbx-0x111111f4]
   140008096:	out    dx,al
   140008097:	int3   
   140008098:	int3   
   140008099:	int3   
   14000809a:	out    dx,al
   14000809b:	out    dx,al
   14000809c:	out    dx,al
   14000809d:	out    dx,al
   14000809e:	rol    BYTE PTR [rax],0xb
   1400080a1:	mov    ebx,0xeeeeee3e
   1400080a6:	in     al,dx
   1400080a7:	add    BYTE PTR [rax],al
   1400080a9:	add    dh,cl
   1400080ab:	out    dx,al
   1400080ac:	out    dx,al
   1400080ad:	out    dx,al
   1400080ae:	rol    BYTE PTR [rax],0x0
   1400080b1:	mov    ebx,0xeeeeee3e
   1400080b6:	rol    BYTE PTR [rax],0x0
   1400080b9:	add    BYTE PTR [rsi+rbp*8],cl
   1400080bc:	out    dx,al
   1400080bd:	out    dx,al
   1400080be:	in     al,dx
   1400080bf:	add    BYTE PTR [rax],al
   1400080c1:	mov    ebx,0xeceeeeb3
   1400080c6:	add    BYTE PTR [rax],al
   1400080c8:	add    BYTE PTR [rax],al
   1400080ca:	add    ah,cl
   1400080cc:	int3   
   1400080cd:	int3   
   1400080ce:	int3   
   1400080cf:	add    BYTE PTR [rax],al
   1400080d1:	mov    ebx,0xeceeeeb3
	...
   1400080de:	add    BYTE PTR [rax],al
   1400080e0:	add    BYTE PTR [rbx],cl
   1400080e2:	mov    ebx,0xecee3e
	...
   1400080ef:	add    BYTE PTR [rax],al
   1400080f1:	or     edi,DWORD PTR [rbx-0x331311c2]
   1400080f7:	int3   
   1400080f8:	int3   
   1400080f9:	int3   
   1400080fa:	int3   
   1400080fb:	int3   
   1400080fc:	int3   
   1400080fd:	int3   
   1400080fe:	int3   
   1400080ff:	add    BYTE PTR [rax],al
   140008101:	or     al,0xbb
   140008103:	mov    bl,0xee
   140008105:	out    dx,al
   140008106:	out    dx,al
   140008107:	out    dx,al
   140008108:	out    dx,al
   140008109:	out    dx,al
   14000810a:	out    dx,al
   14000810b:	out    dx,al
   14000810c:	out    dx,al
   14000810d:	out    dx,al
   14000810e:	out    dx,al
   14000810f:	rol    BYTE PTR [rax],0xc
   140008112:	mov    ebx,0xeeee3ebb
   140008117:	out    dx,al
   140008118:	out    dx,al
   140008119:	out    dx,al
   14000811a:	out    dx,al
   14000811b:	out    dx,al
   14000811c:	out    dx,al
   14000811d:	out    dx,al
   14000811e:	out    dx,al
   14000811f:	rol    BYTE PTR [rax],0xc
   140008122:	jmp    0x1400080df
   140008124:	ds out dx,al
   140008126:	out    dx,al
   140008127:	out    dx,al
   140008128:	out    dx,al
   140008129:	out    dx,al
   14000812a:	out    dx,al
   14000812b:	out    dx,al
   14000812c:	out    dx,al
   14000812d:	out    dx,al
   14000812e:	out    dx,al
   14000812f:	rol    BYTE PTR [rax],0xc
   140008132:	out    dx,al
   140008133:	mov    ebx,0xcccceeb3
   140008138:	int3   
   140008139:	int3   
   14000813a:	int3   
   14000813b:	(bad)  
   14000813c:	out    dx,al
   14000813d:	out    dx,al
   14000813e:	out    dx,al
   14000813f:	rol    BYTE PTR [rax],0xc
   140008142:	out    dx,al
   140008143:	jmp    0x140008100
   140008145:	cmp    al,0x0
   140008147:	add    BYTE PTR [rax],al
   140008149:	add    BYTE PTR [rax],al
   14000814b:	(bad)  
   14000814c:	out    dx,al
   14000814d:	out    dx,al
   14000814e:	out    dx,al
   14000814f:	rol    BYTE PTR [rax],0x0
   140008152:	(bad)  
   140008153:	jmp    0x140008110
   140008155:	mov    bl,0x0
   140008157:	add    BYTE PTR [rax],al
   140008159:	add    BYTE PTR [rax],al
   14000815b:	(bad)  
   14000815c:	out    dx,al
   14000815d:	out    dx,al
   14000815e:	in     al,dx
   14000815f:	add    BYTE PTR [rax],al
   140008161:	add    dh,cl
   140008163:	out    dx,al
   140008164:	mov    ebx,0x30bb
   140008169:	add    BYTE PTR [rsi+rbp*8],cl
   14000816c:	out    dx,al
   14000816d:	out    dx,al
   14000816e:	in     al,dx
   14000816f:	add    BYTE PTR [rax],al
   140008171:	add    BYTE PTR [rsi+rbp*8],cl
   140008174:	jmp    0x140008131
   140008176:	mov    bl,0x0
   140008178:	add    BYTE PTR [rax],al
   14000817a:	(bad)  
   14000817b:	out    dx,al
   14000817c:	out    dx,al
   14000817d:	out    dx,al
   14000817e:	rol    BYTE PTR [rax],0x0
   140008181:	add    BYTE PTR [rsi+rbp*8],cl
   140008184:	out    dx,al
   140008185:	mov    ebx,0xcccc3cbb
   14000818a:	out    dx,al
   14000818b:	out    dx,al
   14000818c:	out    dx,al
   14000818d:	out    dx,al
   14000818e:	rol    BYTE PTR [rax],0x0
   140008191:	add    BYTE PTR [rax],al
   140008193:	(bad)  
   140008194:	out    dx,al
   140008195:	jmp    0x140008152
   140008197:	mov    bl,0xee
   140008199:	out    dx,al
   14000819a:	out    dx,al
   14000819b:	out    dx,al
   14000819c:	out    dx,al
   14000819d:	in     al,dx
   14000819e:	or     eax,DWORD PTR [rax]
   1400081a0:	add    BYTE PTR [rax],al
   1400081a2:	add    BYTE PTR [rsi+rbp*8],cl
   1400081a5:	out    dx,al
   1400081a6:	mov    ebx,0xeeee33bb
   1400081ab:	out    dx,al
   1400081ac:	out    dx,al
   1400081ad:	ror    BYTE PTR [rbx],0x0
   1400081b0:	add    BYTE PTR [rax],al
   1400081b2:	add    BYTE PTR [rax],al
   1400081b4:	(bad)  
   1400081b5:	out    dx,al
   1400081b6:	jmp    0x140008173
   1400081b8:	mov    ebx,0xeceeee3e
   1400081bd:	add    BYTE PTR [rbx],cl
   1400081bf:	add    BYTE PTR [rax],al
   1400081c1:	add    BYTE PTR [rax],al
   1400081c3:	add    BYTE PTR [rsi+rcx*8],cl
   1400081c6:	out    dx,al
   1400081c7:	jmp    0x140008184
   1400081c9:	mov    bl,0xee
   1400081cb:	in     al,dx
   1400081cc:	rol    BYTE PTR [rax],0xbb
   1400081cf:	add    BYTE PTR [rax],al
   1400081d1:	add    BYTE PTR [rax],al
   1400081d3:	add    BYTE PTR [rax],al
   1400081d5:	or     al,0xcc
   1400081d7:	out    dx,al
   1400081d8:	mov    ebx,0xc03cbb
   1400081dd:	add    BYTE PTR [rbx+0x0],bh
   1400081e3:	add    BYTE PTR [rax],al
   1400081e5:	add    BYTE PTR [rax],al
   1400081e7:	int3   
   1400081e8:	int3   
   1400081e9:	mov    ebx,0xb0030b3
   1400081ee:	mov    ebx,0x0
   1400081f3:	add    BYTE PTR [rax],al
   1400081f5:	add    BYTE PTR [rax],al
   1400081f7:	add    BYTE PTR [rax],al
   1400081f9:	or     edi,DWORD PTR [rbx-0x4f444445]
	...
   14000820b:	mov    ebx,0xb0bb
   140008210:	(bad)  
   140008211:	(bad)  
   140008212:	(bad)  
   140008213:	(bad)  
   140008214:	(bad)  
   140008215:	(bad)  
   140008216:	(bad)  
   140008217:	push   rax
   140008219:	cld    
   14000821a:	ud0    esp,edi
   14000821d:	(bad)  
   14000821e:	add    edi,edi
   140008220:	iret   
   140008221:	add    BYTE PTR [rax],0x7f
   140008224:	iret   
   140008225:	add    BYTE PTR [rax],al
   140008227:	(bad)  
   140008228:	mov    es,WORD PTR [rax]
   14000822a:	add    BYTE PTR [rdi],bl
   14000822c:	mov    WORD PTR [rax],es
   14000822e:	add    BYTE PTR [rdi],cl
   140008230:	mov    BYTE PTR [rax],al
   140008232:	add    BYTE PTR [rdi],al
   140008234:	add    BYTE PTR [rbx],0xf0
   140008237:	(bad)  
   140008238:	rol    BYTE PTR [rdi],0xf8
   14000823b:	add    eax,eax
   14000823d:	paddb  mm0,QWORD PTR [rbx]
   140008240:	ror    BYTE PTR [rdi],0xff
   140008243:	jmp    rax
   140008245:	ud0    edi,edi
   140008248:	loopne 0x14000824a
   14000824a:	add    BYTE PTR [rbx],al
   14000824c:	loopne 0x14000824e
   14000824e:	add    BYTE PTR [rcx],al
   140008250:	loopne 0x140008252
   140008252:	add    BYTE PTR [rcx],al
   140008254:	loopne 0x140008256
   140008256:	add    BYTE PTR [rcx],al
   140008258:	loopne 0x14000825a
   14000825a:	add    BYTE PTR [rcx],al
   14000825c:	loopne 0x14000826d
   14000825e:	cld    
   14000825f:	add    eax,esi
   140008261:	paddb  mm0,QWORD PTR [rbx]
   140008264:	lock (bad) 
   140008266:	clc    
   140008267:	add    edi,eax
   140008269:	add    esi,eax
   14000826b:	(bad)  
   14000826c:	clc    
   14000826d:	add    BYTE PTR [rax],al
   14000826f:	(bad)  
   140008270:	cld    
   140008271:	add    BYTE PTR [rax],al
   140008273:	or     edi,esi
   140008275:	add    BYTE PTR [rax],al
   140008277:	sbb    edi,edi
   140008279:	add    BYTE PTR [rax],al
   14000827b:	cmp    edi,edi
   14000827d:	add    BYTE PTR [rax],0x73
   140008280:	jmp    rax
   140008282:	add    ebx,esi
   140008284:	(bad)  
   140008285:	cld    
   140008286:	add    ebx,esp
   140008288:	(bad)  
   140008289:	jmp    rax
   14000828b:	(bad)  
   14000828c:	(bad)  
   14000828d:	(bad)  
   14000828e:	cld    
   14000828f:	(bad)  
   140008290:	sub    BYTE PTR [rax],al
   140008292:	add    BYTE PTR [rax],al
   140008294:	sbb    BYTE PTR [rax],al
   140008296:	add    BYTE PTR [rax],al
   140008298:	xor    BYTE PTR [rax],al
   14000829a:	add    BYTE PTR [rax],al
   14000829c:	add    DWORD PTR [rax],eax
   14000829e:	add    al,0x0
   1400082a0:	add    BYTE PTR [rax],al
   1400082a2:	add    BYTE PTR [rax],al
   1400082a4:	and    BYTE PTR [rcx],al
	...
   1400082be:	add    BYTE PTR [rax],0x0
   1400082c1:	add    BYTE PTR [rax],0x0
   1400082c4:	add    BYTE PTR [rax+0x800080],al
   1400082ca:	add    BYTE PTR [rax],al
   1400082cc:	add    BYTE PTR [rax],0x80
   1400082cf:	add    BYTE PTR [rax-0x7fffff80],al
   1400082d5:	add    BYTE PTR [rax-0x3f3f4000],0x0
   1400082dc:	add    BYTE PTR [rax],al
   1400082de:	inc    DWORD PTR [rax]
   1400082e0:	add    bh,bh
   1400082e2:	add    BYTE PTR [rax],al
   1400082e4:	add    bh,bh
   1400082e6:	inc    DWORD PTR [rax]
   1400082e8:	inc    DWORD PTR [rax]
   1400082ea:	add    BYTE PTR [rax],al
   1400082ec:	inc    DWORD PTR [rax]
   1400082ee:	inc    DWORD PTR [rax]
   1400082f0:	(bad)  
   1400082f1:	inc    DWORD PTR [rax]
   1400082f3:	add    bh,bh
   1400082f5:	(bad)  
   1400082f6:	inc    DWORD PTR [rax]
	...
   140008304:	add    BYTE PTR [rbx-0x33f3ff50],bh
   14000830a:	int3   
   14000830b:	int3   
   14000830c:	add    BYTE PTR [rax],al
   14000830e:	add    BYTE PTR [rax],al
   140008310:	or     esi,DWORD PTR [rax-0x1131f3f5]
   140008316:	out    dx,al
   140008317:	out    dx,al
   140008318:	int3   
   140008319:	add    BYTE PTR [rax],al
   14000831b:	add    BYTE PTR [rbx],cl
   14000831d:	mov    al,0x0
   14000831f:	(bad)  
   140008320:	out    dx,al
   140008321:	out    dx,al
   140008322:	out    dx,al
   140008323:	out    dx,al
   140008324:	out    dx,al
   140008325:	rol    BYTE PTR [rax],0x0
   140008328:	or     eax,DWORD PTR [rax]
   14000832a:	or     al,0xee
   14000832c:	out    dx,al
   14000832d:	out    dx,al
   14000832e:	out    dx,al
   14000832f:	out    dx,al
   140008330:	out    dx,al
   140008331:	in     al,dx
   140008332:	add    BYTE PTR [rax],al
   140008334:	or     esi,DWORD PTR [rax-0x33111132]
   14000833a:	int3   
   14000833b:	(bad)  
   14000833c:	out    dx,al
   14000833d:	out    dx,al
   14000833e:	rol    BYTE PTR [rax],0xb
   140008341:	mov    bl,0xee
   140008343:	out    dx,al
   140008344:	in     al,dx
   140008345:	add    BYTE PTR [rax],al
   140008347:	or     al,0xee
   140008349:	out    dx,al
   14000834a:	in     al,dx
   14000834b:	add    BYTE PTR [rbx],cl
   14000834d:	mov    bl,0xee
   14000834f:	out    dx,al
   140008350:	rol    BYTE PTR [rax],0x0
   140008353:	add    ah,cl
   140008355:	int3   
   140008356:	int3   
   140008357:	add    BYTE PTR [rbx],cl
   140008359:	mov    ebx,0xc0ee3e
   14000835e:	add    BYTE PTR [rax],al
   140008360:	add    BYTE PTR [rax],al
   140008362:	add    BYTE PTR [rax],al
   140008364:	add    BYTE PTR [rbx+0xc0ee3e],bh
   14000836a:	add    BYTE PTR [rax],al
   14000836c:	add    BYTE PTR [rax],al
   14000836e:	add    BYTE PTR [rax],al
   140008370:	add    BYTE PTR [rbx-0x3333114d],bh
   140008376:	int3   
   140008377:	int3   
   140008378:	int3   
   140008379:	int3   
   14000837a:	int3   
   14000837b:	add    BYTE PTR [rax],al
   14000837d:	retf   
   14000837e:	mov    bl,0xee
   140008380:	out    dx,al
   140008381:	out    dx,al
   140008382:	out    dx,al
   140008383:	out    dx,al
   140008384:	out    dx,al
   140008385:	out    dx,al
   140008386:	out    dx,al
   140008387:	rol    BYTE PTR [rax],0xcb
   14000838a:	mov    ebx,0xeeeeee3e
   14000838f:	out    dx,al
   140008390:	out    dx,al
   140008391:	out    dx,al
   140008392:	out    dx,al
   140008393:	rol    BYTE PTR [rax],0xce
   140008396:	mov    ebx,0xccccecb3
   14000839b:	int3   
   14000839c:	(bad)  
   14000839d:	out    dx,al
   14000839e:	out    dx,al
   14000839f:	rol    BYTE PTR [rax],0xc
   1400083a2:	mov    ebx,0xc0b3
   1400083a7:	add    dh,cl
   1400083a9:	out    dx,al
   1400083aa:	in     al,dx
   1400083ab:	add    BYTE PTR [rax],al
   1400083ad:	or     al,0xeb
   1400083af:	mov    ebx,0x30
   1400083b4:	(bad)  
   1400083b5:	out    dx,al
   1400083b6:	in     al,dx
   1400083b7:	add    BYTE PTR [rax],al
   1400083b9:	or     al,0xee
   1400083bb:	mov    ebx,0xc0000b3
   1400083c0:	out    dx,al
   1400083c1:	out    dx,al
   1400083c2:	in     al,dx
   1400083c3:	add    BYTE PTR [rax],al
   1400083c5:	add    dh,cl
   1400083c7:	jmp    0x140008384
   1400083c9:	cmp    al,0xcc
   1400083cb:	(bad)  
   1400083cc:	out    dx,al
   1400083cd:	out    dx,al
   1400083ce:	rol    BYTE PTR [rax],0x0
   1400083d1:	add    BYTE PTR [rsi+rbp*8],cl
   1400083d4:	mov    ebx,0xeeeeeeb3
   1400083d9:	in     al,dx
   1400083da:	or     eax,DWORD PTR [rax]
   1400083dc:	add    BYTE PTR [rax],al
   1400083de:	add    dh,cl
   1400083e0:	jmp    0x14000839d
   1400083e2:	ds out dx,al
   1400083e4:	out    dx,al
   1400083e5:	ror    BYTE PTR [rbx],0x0
   1400083e8:	add    BYTE PTR [rax],al
   1400083ea:	add    BYTE PTR [rsi+rcx*8],cl
   1400083ed:	mov    ebx,0xcc3eb3
   1400083f2:	or     eax,DWORD PTR [rax]
   1400083f4:	add    BYTE PTR [rax],al
   1400083f6:	add    BYTE PTR [rax],al
   1400083f8:	or     al,0xcc
   1400083fa:	mov    ebx,0xbb0030b3
   1400083ff:	add    BYTE PTR [rax],al
   140008401:	add    BYTE PTR [rax],al
   140008403:	add    BYTE PTR [rax],al
   140008405:	add    BYTE PTR [rbx],cl
   140008407:	mov    ebx,0xbbbbbb
   14000840c:	add    BYTE PTR [rax],al
   14000840e:	add    BYTE PTR [rax],al
   140008410:	add    BYTE PTR [rax],al
   140008412:	add    BYTE PTR [rbx],cl
   140008414:	mov    ebx,0xff00b0bb
   140008419:	(bad)  
   14000841a:	inc    DWORD PTR [rax]
   14000841c:	mov    DWORD PTR [rax+0x9a00ff],0x9c003f
   140008426:	(bad)  
   140008427:	add    BYTE PTR [rax-0x6ffff100],bh
   14000842d:	add    BYTE PTR [rdi],al
   14000842f:	add    BYTE PTR [rax-0x7ffffcc2],al
   140008435:	jg     0x14000843a
   140008437:	add    BYTE PTR [rax-0x3fff0081],al
   14000843d:	jg     0x14000843e
   14000843f:	add    al,al
   140008441:	add    BYTE PTR [rbx],al
   140008443:	add    al,al
   140008445:	add    BYTE PTR [rcx],al
   140008447:	add    al,al
   140008449:	add    BYTE PTR [rcx],al
   14000844b:	add    al,al
   14000844d:	add    BYTE PTR [rcx],al
   14000844f:	add    al,ah
   140008451:	jg     0x140008456
   140008453:	add    al,ah
   140008455:	jg     0x14000845a
   140008457:	add    al,ah
   140008459:	add    eax,DWORD PTR ds:[rax]
   14000845c:	lock add BYTE PTR [rdi],al
   14000845f:	add    al,bh
   140008461:	add    BYTE PTR [rbx],cl
   140008463:	add    ah,bh
   140008465:	add    BYTE PTR [rbx],bl
   140008467:	add    dh,bh
   140008469:	add    BYTE PTR [rbx],bh
   14000846b:	add    bh,bh
   14000846d:	xor    BYTE PTR [rbx+0x0],0xff
   140008471:	clc    
   140008472:	add    eax,DWORD PTR [rax]
   140008474:	(bad)  
   140008475:	inc    BYTE PTR [rdi]
   140008477:	add    BYTE PTR [rax],ch
   140008479:	add    BYTE PTR [rax],al
   14000847b:	add    BYTE PTR [rax],dl
   14000847d:	add    BYTE PTR [rax],al
   14000847f:	add    BYTE PTR [rax],ah
   140008481:	add    BYTE PTR [rax],al
   140008483:	add    BYTE PTR [rcx],al
   140008485:	add    BYTE PTR [rax+rax*1],al
   140008488:	add    BYTE PTR [rax],al
   14000848a:	add    BYTE PTR [rax],al
   14000848c:	add    BYTE PTR [rax],0x0
	...
   1400084a3:	add    BYTE PTR [rax],al
   1400084a5:	add    BYTE PTR [rax+0x800000],al
   1400084ab:	add    BYTE PTR [rax],al
   1400084ad:	add    BYTE PTR [rax+0x8000],0x0
   1400084b4:	add    BYTE PTR [rax],0x80
   1400084b7:	add    BYTE PTR [rax-0x7fffff80],al
   1400084bd:	add    BYTE PTR [rax-0x3f3f4000],0x0
   1400084c4:	add    BYTE PTR [rax],al
   1400084c6:	inc    DWORD PTR [rax]
   1400084c8:	add    bh,bh
   1400084ca:	add    BYTE PTR [rax],al
   1400084cc:	add    bh,bh
   1400084ce:	inc    DWORD PTR [rax]
   1400084d0:	inc    DWORD PTR [rax]
   1400084d2:	add    BYTE PTR [rax],al
   1400084d4:	inc    DWORD PTR [rax]
   1400084d6:	inc    DWORD PTR [rax]
   1400084d8:	(bad)  
   1400084d9:	inc    DWORD PTR [rax]
   1400084db:	add    bh,bh
   1400084dd:	(bad)  
   1400084de:	inc    DWORD PTR [rax]
   1400084e0:	or     edi,DWORD PTR [rbx-0x3f333400]
   1400084e6:	add    BYTE PTR [rax],al
   1400084e8:	mov    al,0x0
   1400084ea:	int3   
   1400084eb:	out    dx,al
   1400084ec:	out    dx,al
   1400084ed:	in     al,dx
   1400084ee:	rol    BYTE PTR [rax],0xb0
   1400084f1:	or     al,0xee
   1400084f3:	out    dx,al
   1400084f4:	out    dx,al
   1400084f5:	out    dx,al
   1400084f6:	in     al,dx
   1400084f7:	add    BYTE PTR [rbx-0x33331132],dh
   1400084fd:	(bad)  
   1400084fe:	out    dx,al
   1400084ff:	sar    BYTE PTR [rbx+0xecce],0xc
   140008506:	int3   
   140008507:	int3   
   140008508:	mov    ebx,0xec3e
   14000850d:	add    BYTE PTR [rax],al
   14000850f:	add    BYTE PTR [rbx],cl
   140008511:	ds out dx,al
   140008513:	int3   
   140008514:	int3   
   140008515:	int3   
   140008516:	int3   
   140008517:	int3   
   140008518:	or     esi,DWORD PTR [rbx-0x11111112]
   14000851e:	out    dx,al
   14000851f:	in     al,dx
   140008520:	or     al,0xbb
   140008522:	cmp    al,0xcc
   140008524:	int3   
   140008525:	int3   
   140008526:	out    dx,al
   140008527:	in     al,dx
   140008528:	or     al,0xeb
   14000852a:	mov    bl,0x0
   14000852c:	add    BYTE PTR [rsi+rbp*8],cl
   14000852f:	in     al,dx
   140008530:	add    dh,cl
   140008532:	mov    ebx,0xee0c0030
   140008537:	rol    BYTE PTR [rax],0xce
   14000853a:	jmp    0x1400084ef
   14000853c:	int3   
   14000853d:	(bad)  
   14000853e:	out    dx,al
   14000853f:	retf   
   140008540:	add    BYTE PTR [rsi+rbp*8],cl
   140008543:	mov    ebx,0xbecee3e
   140008548:	add    BYTE PTR [rax],al
   14000854a:	int3   
   14000854b:	jmp    0x140008500
   14000854d:	cmp    al,0xc0
   14000854f:	or     eax,DWORD PTR [rax]
   140008551:	add    BYTE PTR [rax],al
   140008553:	int3   
   140008554:	retf   
   140008555:	mov    ebx,0xbb30
   14000855a:	add    BYTE PTR [rax],al
   14000855c:	add    BYTE PTR [rbx],cl
   14000855e:	mov    ebx,0x1f8cb0
   140008563:	add    BYTE PTR [rax+0x7],dh
   140008566:	add    BYTE PTR [rax],al
   140008568:	(bad)  
   140008569:	add    eax,DWORD PTR [rax]
   14000856b:	add    BYTE PTR [rax],al
   14000856d:	add    DWORD PTR [rax],eax
   14000856f:	add    BYTE PTR [rbx],al
   140008571:	loopne 0x140008573
   140008573:	add    BYTE PTR [rbx],al
   140008575:	inc    DWORD PTR [rax]
   140008577:	add    BYTE PTR [rax-0x80000000],al
   14000857d:	add    BYTE PTR [rax],al
   14000857f:	add    BYTE PTR [rax-0x7d000000],al
   140008585:	loopne 0x140008587
   140008587:	add    cl,al
   140008589:	loope  0x14000858b
   14000858b:	add    al,al
   14000858d:	add    BYTE PTR [rax],al
   14000858f:	add    al,ah
   140008591:	add    al,BYTE PTR [rax]
   140008593:	add    al,dh
   140008595:	(bad)  
   140008596:	add    BYTE PTR [rax],al
   140008598:	cld    
   140008599:	add    al,0x0
   14000859b:	add    bh,bh
   14000859d:	loope  0x14000859f
   14000859f:	add    BYTE PTR [rax],ch
   1400085a1:	add    BYTE PTR [rax],al
   1400085a3:	add    BYTE PTR [rax],dh
   1400085a5:	add    BYTE PTR [rax],al
   1400085a7:	add    BYTE PTR [rax+0x0],ah
   1400085aa:	add    BYTE PTR [rax],al
   1400085ac:	add    DWORD PTR [rax],eax
   1400085ae:	or     BYTE PTR [rax],al
   1400085b0:	add    BYTE PTR [rax],al
   1400085b2:	add    BYTE PTR [rax],al
   1400085b4:	add    BYTE PTR [rcx],cl
	...
   1400085be:	add    BYTE PTR [rax],al
   1400085c0:	add    BYTE PTR [rcx],al
   1400085c2:	add    BYTE PTR [rax],al
   1400085c4:	add    BYTE PTR [rcx],al
   1400085c6:	add    BYTE PTR [rax],al
   1400085c8:	add    BYTE PTR [rax],al
   1400085ca:	add    BYTE PTR [rax],al
   1400085cc:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400085cd:	jns    0x14000860b
   1400085cf:	add    BYTE PTR [rdx-0x55ffc284],ch
   1400085d5:	jge    0x140008618
   1400085d7:	add    BYTE PTR [rdi-0x77],bh
   1400085da:	jl     0x1400085dc
   1400085dc:	mov    ah,0x83
   1400085de:	cmp    eax,0x3a87ba00
   1400085e3:	add    BYTE PTR [rcx+rcx*4-0x682dffc5],bh
   1400085ea:	sbb    al,0x0
   1400085ec:	iret   
   1400085ed:	xchg   ebp,eax
   1400085ee:	and    al,0x0
   1400085f0:	rcr    DWORD PTR [rax-0x763effd7],cl
   1400085f6:	xor    eax,0x3597ce00
   1400085fb:	add    dh,dl
   1400085fd:	popf   
   1400085fe:	cmp    eax,DWORD PTR [rax]
   140008600:	fisubr DWORD PTR [rdx-0x563bffd6]
   140008606:	cmp    eax,0x34a6d800
   14000860b:	add    dl,ah
   14000860d:	movabs ds:0xa9e5002db6e4002f,eax
   140008616:	cmp    BYTE PTR [rax],al
   140008618:	(bad)  
   140008619:	mov    eax,0xbbf00039
   14000861e:	(bad)  
   14000861f:	add    bl,ch
   140008621:	(bad)  
   140008622:	cmp    eax,0x4e828c00
   140008627:	add    BYTE PTR [rsi-0x52ffa16e],al
   14000862d:	add    DWORD PTR [rbx+0x0],0x4b80a7
   140008634:	stos   DWORD PTR es:[rdi],eax
   140008635:	(bad)  
   140008636:	rex.WX add BYTE PTR [rdx-0x49ffbc7c],sil
   14000863d:	mov    BYTE PTR [rsi+0x0],al
   140008640:	mov    eax,0xb1004589
   140008645:	xchg   BYTE PTR [rcx+0x0],cl
   140008648:	mov    bh,0x8a
   14000864a:	rex.W add BYTE PTR [rdx-0x43ffb574],dil
   140008651:	xchg   ecx,eax
   140008652:	rex.WRB add BYTE PTR [r14-0x50ffac75],r12b
   140008659:	mov    BYTE PTR [rbx+0x0],dl
   14000865c:	stos   DWORD PTR es:[rdi],eax
   14000865d:	mov    WORD PTR [rdx+0x0],ds
   140008660:	mov    ch,0x8d
   140008662:	push   rdi
   140008663:	add    BYTE PTR [rbp+rcx*4-0x6f43ffa8],dh
   14000866a:	push   rcx
   14000866b:	add    BYTE PTR [rdi-0x47ffa56f],dh
   140008671:	xchg   edx,eax
   140008672:	pop    rbp
   140008673:	add    BYTE PTR [rdi-0x44ffa065],dh
   140008679:	cdq    
   14000867a:	pop    rsp
   14000867b:	add    BYTE PTR [rdi-0x78ffa456],dh
   140008681:	mov    ebp,DWORD PTR [rbx+0x0]
   140008684:	xchg   esi,eax
   140008685:	mov    BYTE PTR [rax+0x0],ch
   140008688:	mov    ds,WORD PTR [rdx-0x686aff8d]
   14000868e:	jnp    0x140008690
   140008690:	mov    esp,0xb800619a
   140008695:	xchg   esi,eax
   140008696:	imul   eax,DWORD PTR [rax],0x6a99bb
   14000869c:	mov    ebx,0x9500769d
   1400086a1:	mov    ecx,0xa1b5007f
   1400086a6:	push   0x6fb5ba00
   1400086ab:	add    BYTE PTR [rdx-0x3eff894d],ah
   1400086b1:	pop    QWORD PTR [rax+0x0]
   1400086b4:	ret    
   1400086b5:	xchg   edx,eax
   1400086b6:	rex.X add bl,cl
   1400086b9:	xchg   esi,eax
   1400086ba:	add    bl,cl
   1400086bd:	fwait
   1400086be:	rex.X add bl,al
   1400086c1:	xchg   ebp,eax
   1400086c2:	rex.WX add dl,al
   1400086c5:	cwde   
   1400086c6:	rex.WRXB add r12b,r8b
   1400086c9:	cwde   
   1400086ca:	push   rbp
   1400086cb:	add    bh,cl
   1400086cd:	movabs al,ds:0xa3d90044a1d30048
   1400086d6:	add    bpl,r11b
   1400086d9:	lods   al,BYTE PTR ds:[rsi]
   1400086da:	add    dl,r11b
   1400086dd:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400086de:	rex.WB add r11b,bl
   1400086e1:	scas   eax,DWORD PTR es:[rdi]
   1400086e2:	rex.WX add dil,bl
   1400086e5:	mov    al,0x4a
   1400086e7:	add    bh,dl
   1400086e9:	mov    edi,0xa2cb004e
   1400086ee:	push   rdi
   1400086ef:	add    cl,dl
   1400086f1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400086f2:	pop    rcx
   1400086f3:	add    ah,cl
   1400086f5:	mov    dh,0x57
   1400086f7:	add    ah,bl
   1400086f9:	mov    ch,0x5d
   1400086fb:	add    ah,ah
   1400086fd:	lods   al,BYTE PTR ds:[rsi]
   1400086fe:	add    sil,spl
   140008701:	mov    ch,0x44
   140008703:	add    dl,ch
   140008705:	mov    ch,0x42
   140008707:	add    dh,ch
   140008709:	mov    edx,0xb3e50045
   14000870e:	rex.WX add al,bpl
   140008711:	mov    dh,0x4c
   140008713:	add    ch,ah
   140008715:	mov    edx,0xbdec004f
   14000871a:	rex.WB add r8b,sil
   14000871d:	mov    esi,0xbdec004e
   140008722:	push   rsi
   140008723:	add    cl,al
   140008725:	pushf  
   140008726:	addr32 add cl,cl
   140008729:	movabs ds:0xb1ce0060afd40067,eax
   140008732:	(bad)  
   140008733:	add    bl,bl
   140008735:	mov    eax,0xa4c50065
   14000873a:	ja     0x14000873c
   14000873c:	shr    BYTE PTR [rsi-0x4e2bff87],cl
   140008742:	jle    0x140008744
   140008744:	loop   0x140008704
   140008746:	add    BYTE PTR [eax-0x27ff8e36],bh
   14000874d:	retf   
   14000874e:	pop    rdi
   14000874f:	add    ch,ch
   140008751:	rol    BYTE PTR [rdi+0x0],0xea
   140008755:	int3   
   140008756:	add    r13b,r13b
   140008759:	ror    DWORD PTR [rbx+0x0],0xe3
   14000875d:	leave  
   14000875e:	rex.WX add sil,bpl
   140008761:	(bad)  
   140008762:	rex.WXB add r10b,sil
   140008765:	ret    
   140008766:	add    dl,r14b
   140008769:	int    0x44
   14000876b:	add    cl,dh
   14000876d:	ret    0x4b
   140008770:	hlt    
   140008771:	retf   
   140008772:	rex.WXB add r8b,dil
   140008775:	int    0x4f
   140008777:	add    dh,ch
   140008779:	ror    DWORD PTR [rbx+0x0],cl
   14000877c:	hlt    
   14000877d:	(bad)  
   14000877e:	rex.RXB add r12b,r14b
   140008781:	ror    DWORD PTR [rbx+0x0],cl
   140008784:	clc    
   140008785:	ror    BYTE PTR [rdi+0x0],cl
   140008788:	cmc    
   140008789:	fmul   DWORD PTR [rdx+0x0]
   14000878c:	stc    
   14000878d:	(bad)  [rdi+0x0]
   140008790:	out    dx,al
   140008791:	rcl    BYTE PTR [rcx+0x0],0xe8
   140008795:	rcr    BYTE PTR [rax+rax*1-0xe],0xc6
   14000879a:	push   rdx
   14000879b:	add    ah,dh
   14000879d:	retf   0x53
   1400087a0:	clc    
   1400087a1:	int    0x51
   1400087a3:	add    dl,dh
   1400087a5:	int3   
   1400087a6:	pop    rdx
   1400087a7:	add    al,ch
   1400087a9:	fcomp  DWORD PTR [rdi+0x0]
   1400087ac:	clc    
   1400087ad:	fcom   DWORD PTR [rdi+0x0]
   1400087b0:	clc    
   1400087b1:	jrcxz  0x14000880e
   1400087b3:	add    ch,bl
   1400087b5:	enter  0x67,0xc4
   1400087b9:	leave  
   1400087ba:	jge    0x1400087bc
   1400087bc:	(bad)  
   1400087bd:	int3   
   1400087be:	jnp    0x1400087c0
   1400087c0:	jmp    0x13600ef8e
   1400087c5:	int    0x68
   1400087c7:	add    bh,ah
   1400087c9:	(bad)  
   1400087ca:	push   0x65dafa00
   1400087cf:	add    al,ch
   1400087d1:	fnstcw WORD PTR [rax+0x0]
   1400087d4:	cmc    
   1400087d5:	fidiv  DWORD PTR [rax+rax*1-0x3]
   1400087d9:	out    0x68,al
   1400087db:	add    ah,bh
   1400087dd:	lock ins DWORD PTR es:[rdi],dx
   1400087df:	add    ch,bh
   1400087e1:	jmp    0x132fe885d
   1400087e6:	jns    0x1400087e8
   1400087e8:	xor    eax,0x24009282
   1400087ed:	(bad)  
   1400087ee:	mov    ah,0x0
   1400087f0:	xor    ecx,DWORD PTR [rdx-0x61c8ff50]
   1400087f6:	mov    edx,0xbea03200
   1400087fb:	add    BYTE PTR [rbx-0x6a],dh
   1400087fe:	add    BYTE PTR [rax],0x7e
   140008801:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140008802:	mov    es,WORD PTR [rax]
   140008804:	outs   dx,BYTE PTR ds:[rsi]
   140008805:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140008806:	lahf   
   140008807:	add    BYTE PTR [rdi-0x53],cl
   14000880a:	mov    esp,0xb6b56600
   14000880f:	add    BYTE PTR [rbp-0x45],bh
   140008812:	mov    dl,0x0
   140008814:	jge    0x1400087df
   140008816:	stos   BYTE PTR es:[rdi],al
   140008817:	add    BYTE PTR [rsp+rcx*8-0x49],dh
   14000881b:	add    BYTE PTR [rdx],cl
   14000881d:	sahf   
   14000881e:	icebp  
   14000881f:	add    BYTE PTR [rcx],cl
   140008821:	test   eax,0xac1b00e9
   140008826:	jrcxz  0x140008828
   140008828:	add    ebp,DWORD PTR [rbx-0x5fe6ff09]
   14000882e:	icebp  
   14000882f:	add    BYTE PTR [rcx],al
   140008831:	mov    eax,0xbb1b00fd
   140008836:	inc    BYTE PTR [rax]
   140008838:	sub    edi,DWORD PTR [rbx-0x43d7ff1f]
   14000883e:	inc    BYTE PTR [rax]
   140008840:	(bad)  
   140008841:	mov    dl,0xfb
   140008843:	add    BYTE PTR [rax-0x68],cl
   140008846:	fiadd  DWORD PTR [rax]
   140008848:	rex.B scas eax,DWORD PTR es:[rdi]
   14000884a:	(bad)  
   14000884b:	add    BYTE PTR [rdx-0x51],al
   14000884e:	cld    
   14000884f:	add    BYTE PTR [rbx-0x54],ch
   140008852:	out    dx,al
   140008853:	add    BYTE PTR [rcx-0x4c],ch
   140008856:	lock add BYTE PTR [rcx],al
   140008859:	(bad)  
   14000885a:	inc    BYTE PTR [rax]
   14000885c:	sbb    al,ah
   14000885e:	inc    DWORD PTR [rax]
   140008860:	sbb    cl,bl
   140008862:	inc    DWORD PTR [rax]
   140008864:	add    eax,ebx
   140008866:	inc    BYTE PTR [rax]
   140008868:	(bad)  
   140008869:	(bad)  
   14000886a:	std    
   14000886b:	add    BYTE PTR [rcx],bl
   14000886d:	sar    bh,cl
   14000886f:	add    BYTE PTR [rdx],bl
   140008871:	fcos   
   140008873:	add    BYTE PTR [rsi],ah
   140008875:	sar    esi,0x0
   140008878:	sub    al,bl
   14000887a:	inc    BYTE PTR [rax]
   14000887c:	es int3 
   14000887e:	inc    DWORD PTR [rax]
   140008880:	cs retf 0xfe
   140008884:	and    eax,0x2300f4d6
   140008889:	(bad)  
   14000888a:	inc    DWORD PTR [rax]
   14000888c:	sub    al,0xd9
   14000888e:	stc    
   14000888f:	add    BYTE PTR [rdi],bh
   140008891:	sar    esi,1
   140008893:	add    BYTE PTR [rip+0x1a00ffe4],al        # 0x15a01887d
   140008899:	in     al,0xff
   14000889b:	add    BYTE PTR [rbx],ch
   14000889d:	jmp    0x1283889a0
   1400088a2:	cld    
   1400088a3:	add    BYTE PTR [rdx],bh
   1400088a5:	repnz inc DWORD PTR [rax]
   1400088a8:	imul   ecx,ebp,0xffffffc4
   1400088ab:	add    BYTE PTR [rax-0x2b],ch
   1400088ae:	xlat   BYTE PTR ds:[rbx]
   1400088af:	add    BYTE PTR [rdx-0x28],dl
   1400088b2:	out    0x0,eax
   1400088b4:	rex.B (bad) 
   1400088b6:	cld    
   1400088b7:	add    BYTE PTR [rax-0x33],al
   1400088ba:	inc    BYTE PTR [rax]
   1400088bc:	push   rdi
   1400088bd:	retf   
   1400088be:	sti    
   1400088bf:	add    BYTE PTR [rax+rcx*8-0x7],bl
   1400088c3:	add    BYTE PTR [rcx-0x2b],al
   1400088c6:	inc    BYTE PTR [rax]
   1400088c8:	pop    rdx
   1400088c9:	sar    esi,cl
   1400088cb:	add    BYTE PTR [rbx-0x24],dl
   1400088ce:	inc    BYTE PTR [rax]
   1400088d0:	pop    rcx
   1400088d1:	(bad)  
   1400088d3:	add    BYTE PTR [rbx-0x28],ch
   1400088d6:	loop   0x1400088d8
   1400088d8:	jb     0x1400088b8
   1400088da:	in     al,0x0
   1400088dc:	movsxd ecx,ecx
   1400088de:	sti    
   1400088df:	add    BYTE PTR [rax-0x36],dh
   1400088e2:	clc    
   1400088e3:	add    BYTE PTR [rdx-0x2f],ch
   1400088e6:	cld    
   1400088e7:	add    BYTE PTR [rdx-0x21],ah
   1400088ea:	inc    DWORD PTR [rax]
   1400088ec:	jns    0x1400088c3
   1400088ee:	cli    
   1400088ef:	add    BYTE PTR [rcx-0x16],cl
   1400088f2:	stc    
   1400088f3:	add    BYTE PTR [rcx-0xc],cl
   1400088f6:	inc    DWORD PTR [rax]
   1400088f8:	push   rdi
   1400088f9:	idiv   dh
   1400088fb:	add    BYTE PTR [rbx-0x20],dh
   1400088fe:	loop   0x140008900
   140008900:	imul   ebp,edx,0xe07d00fb
   140008906:	inc    DWORD PTR [rax]
   140008908:	jo     0x1400088f5
   14000890a:	inc    BYTE PTR [rax]
   14000890c:	jl     0x1400088fa
   14000890e:	cli    
   14000890f:	add    BYTE PTR [rcx-0x6],ch
   140008912:	inc    BYTE PTR [rax]
   140008914:	js     0x140008910
   140008916:	std    
   140008917:	add    BYTE PTR [rbx-0x5bff7764],cl
   14000891d:	xchg   esi,eax
   14000891e:	add    BYTE PTR [rax],0x93
   140008921:	stos   BYTE PTR es:[rdi],al
   140008922:	test   DWORD PTR [rax],eax
   140008924:	(bad)  
   140008925:	scas   eax,DWORD PTR es:[rdi]
   140008926:	xchg   ecx,eax
   140008927:	add    BYTE PTR [rdx-0x7bff6c5a],bl
   14000892d:	mov    dh,0x9d
   14000892f:	add    BYTE PTR [rbp-0x56ff6449],dl
   140008935:	mov    bh,0x85
   140008937:	add    BYTE PTR [rdx-0x4fff6a42],ch
   14000893d:	mov    cl,0x99
   14000893f:	add    BYTE PTR [rdx+rsi*4-0x5539ff60],al
   140008946:	(bad)  
   140008947:	add    ah,cl
   140008949:	mov    cl,0x8b
   14000894b:	add    cl,dl
   14000894d:	mov    dl,0x85
   14000894f:	add    dh,al
   140008951:	mov    bl,0x94
   140008953:	add    BYTE PTR [rbp-0x4fff723f],ch
   140008959:	(bad)  
   14000895a:	cdq    
   14000895b:	add    BYTE PTR [rdi-0x45ff6f2e],ah
   140008961:	fstp   QWORD PTR [rdx-0x52307d00]
   140008967:	add    BYTE PTR [rbp-0x46ff5325],bl
   14000896d:	fisub  WORD PTR [rsi-0x5e1f4800]
   140008973:	add    ah,al
   140008975:	(bad)  
   140008976:	mov    DWORD PTR [rax],eax
   140008978:	enter  0x8edf,0x0
   14000897c:	(bad)  
   14000897d:	xlat   BYTE PTR ds:[rbx]
   14000897e:	test   DWORD PTR [rax],eax
   140008980:	ret    0x99cd
   140008983:	add    dh,cl
   140008985:	(bad)  
   140008986:	cwde   
   140008987:	add    bl,ah
   140008989:	(bad)  [rcx-0x68182800]
   14000898f:	add    bl,ch
   140008991:	(bad)  
   140008992:	mov    al,BYTE PTR [rax]
   140008994:	std    
   140008995:	in     al,dx
   140008996:	test   BYTE PTR [rax],al
   140008998:	(bad)  
   140008999:	xrelease mov BYTE PTR [rax],al
   14000899c:	jmp    0x13e012087
   1400089a1:	not    BYTE PTR [rdi-0x5f1e3800]
   1400089a7:	add    dh,bh
   1400089a9:	sti    
   1400089aa:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400089ab:	add    BYTE PTR [rdi-0x69ff0204],al
   1400089b1:	std    
   1400089b2:	std    
   1400089b3:	add    BYTE PTR [rsi+0xfefe],ah
	...
   1400089c1:	add    BYTE PTR [rax],al
   1400089c3:	add    bh,bh
   1400089c5:	(bad)  
   1400089c6:	inc    DWORD PTR [rax]
	...
   140008a5c:	add    dh,al
   140008a5e:	mov    ebx,0xc0bcaeac
	...
   140008a6b:	add    BYTE PTR [rax],al
   140008a6d:	add    al,ah
   140008a6f:	xor    al,0x27
   140008a71:	add    DWORD PTR [rcx],eax
   140008a73:	add    DWORD PTR [rbx+rsi*1],esp
	...
   140008a8a:	add    BYTE PTR [rax],al
   140008a8c:	scas   al,BYTE PTR es:[rdi]
   140008a8d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140008a8e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140008a8f:	lods   eax,DWORD PTR ds:[rsi]
   140008a90:	mov    edi,0xc8c2c1c1
   140008a95:	iret   
   140008a96:	add    BYTE PTR [rax],al
   140008a98:	add    BYTE PTR [rax],al
   140008a9a:	add    BYTE PTR [rcx],ch
   140008a9c:	add    eax,0x4444423b
   140008aa1:	rex.WRX push rdx
   140008aa3:	push   rdx
   140008aa4:	rex.RXB
   140008aa5:	cmp    r11d,DWORD PTR [r11+rbx*1]
	...
   140008ab9:	add    BYTE PTR [rax],al
   140008abb:	mov    al,0xa9
   140008abd:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140008abe:	mov    ebp,0x0
   140008ac3:	add    BYTE PTR [rax],al
   140008ac5:	iret   
   140008ac6:	iret   
   140008ac7:	add    ch,bl
   140008ac9:	sbb    edi,DWORD PTR [rip+0x66624e44]        # 0x1a662d913
   140008acf:	push   0x6e
   140008ad1:	outs   dx,BYTE PTR ds:[rsi]
   140008ad2:	push   0x6f
   140008ad4:	push   0x75
   140008ad6:	je     0x140008b4a
   140008ad8:	push   rdx
   140008ad9:	cmp    eax,DWORD PTR [rcx]
	...
   140008ae7:	add    BYTE PTR [rax],al
   140008ae9:	add    cl,al
   140008aeb:	test   eax,0xbba6
   140008af0:	add    BYTE PTR [rax],al
   140008af2:	add    BYTE PTR [rax],al
   140008af4:	add    BYTE PTR [rax],al
   140008af6:	add    BYTE PTR [rbx],ah
   140008af8:	cmp    eax,0x6e6e1414
   140008afd:	jno    0x140008b70
   140008aff:	jno    0x140008b72
   140008b01:	jno    0x140008b7d
   140008b03:	jno    0x140008b76
   140008b05:	jno    0x140008b76
   140008b07:	push   0x69
   140008b09:	push   rbp
   140008b0a:	push   rdx
   140008b0b:	cmp    bl,BYTE PTR [rdx]
	...
   140008b19:	add    BYTE PTR [rcx+rbp*4+0xa6],dh
   140008b20:	add    BYTE PTR [rax],al
   140008b22:	add    BYTE PTR [rax],al
   140008b24:	add    BYTE PTR [rdi+0x3d],dl
   140008b27:	adc    BYTE PTR [rax+rbp*2],dl
   140008b2a:	jo     0x140008ba6
   140008b2c:	jp     0x140008ba8
   140008b2e:	jp     0x140008ab4
   140008b30:	test   BYTE PTR [rdx+rdi*2+0x7a7a7a84],al
   140008b37:	jno    0x140008baa
   140008b39:	imul   ebp,DWORD PTR [rcx+0x50],0x545
	...
   140008b48:	add    BYTE PTR [rax],al
   140008b4a:	mov    ah,0xa9
   140008b4c:	stos   DWORD PTR es:[rdi],eax
   140008b4d:	add    BYTE PTR [rax],al
   140008b4f:	add    BYTE PTR [rax],al
   140008b51:	add    BYTE PTR [rax],al
   140008b53:	add    BYTE PTR [rax],ch
   140008b55:	or     al,0x12
   140008b57:	(bad)  
   140008b58:	ins    DWORD PTR es:[rdi],dx
   140008b59:	jo     0x140008bd5
   140008b5b:	jp     0x140008ae1
   140008b5d:	xchg   DWORD PTR [rdi-0x78787b79],eax
   140008b63:	xchg   DWORD PTR [rsi+0x7a817a84],eax
   140008b69:	jno    0x140008bd5
   140008b6b:	addr32 adc eax,0xdf074d
	...
   140008b79:	shl    BYTE PTR [rcx+rbp*4+0x9d],1
   140008b80:	add    BYTE PTR [rax],al
   140008b82:	add    BYTE PTR [rsi],bl
   140008b84:	or     DWORD PTR [rdx],edx
   140008b86:	(bad)  
   140008b87:	ins    DWORD PTR es:[rdi],dx
   140008b88:	jno    0x140008b0e
   140008b8a:	test   DWORD PTR [rdi-0xc797979],eax
   140008b90:	repz repz xchg ebx,esi
   140008b94:	xchg   BYTE PTR [rsi-0x7e7e787a],al
   140008b9a:	jno    0x140008c12
   140008b9c:	addr32 adc eax,0x35064d
   140008ba2:	add    BYTE PTR [rax],al
   140008ba4:	add    BYTE PTR [rax],al
   140008ba6:	add    BYTE PTR [rax],al
   140008ba8:	add    dh,cl
   140008baa:	mov    ah,0xa9
   140008bac:	stos   DWORD PTR es:[rdi],eax
   140008bad:	add    BYTE PTR [rax],al
   140008baf:	add    BYTE PTR [rax],al
   140008bb1:	add    BYTE PTR [rax],ch
   140008bb3:	or     BYTE PTR [rdx],dl
   140008bb5:	push   0xffffffff857a716d
   140008bba:	test   DWORD PTR [rdi-0xb0b0b0d],eax
   140008bc0:	hlt    
   140008bc1:	hlt    
   140008bc2:	hlt    
   140008bc3:	hlt    
   140008bc4:	hlt    
   140008bc5:	hlt    
   140008bc6:	xrelease xchg BYTE PTR [rdi+0x6a7a8184],al
   140008bcd:	addr32 adc eax,0xb13
   140008bd3:	add    BYTE PTR [rax],al
   140008bd5:	add    BYTE PTR [rax],al
   140008bd7:	add    BYTE PTR [rax],al
   140008bd9:	(bad)  
   140008bda:	mov    ah,0xa9
   140008bdc:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140008bdd:	add    BYTE PTR [rax],al
   140008bdf:	add    BYTE PTR [rax],al
   140008be1:	sub    al,0x9
   140008be3:	adc    dl,BYTE PTR [rsi]
   140008be5:	jo     0x140008c61
   140008be7:	jp     0x140008b6e
   140008be9:	xchg   DWORD PTR [rdi-0x7d0b0b0c],eax
   140008bef:	rex.WB and bl,BYTE PTR [r15]
   140008bf2:	sbb    al,0x28
   140008bf4:	sub    BYTE PTR [rdi-0xd],bl
   140008bf7:	xrelease xchg BYTE PTR [rsi+0x767a8184],al
   140008bfe:	addr32 adc al,0x11
   140008c01:	add    eax,0x0
   140008c06:	add    BYTE PTR [rax],al
   140008c08:	add    cl,dl
   140008c0a:	mov    ah,0xb4
   140008c0c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140008c0d:	movabs ds:0x716d68120ce10000,al
   140008c16:	jp     0x140008b9d
   140008c18:	test   DWORD PTR [rdi+0x2280f4f4],eax
   140008c1e:	pop    rsp
   140008c1f:	add    BYTE PTR [rax],al
   140008c21:	add    BYTE PTR [rax],al
   140008c23:	add    BYTE PTR [rax],al
   140008c25:	loopne 0x140008c2a
   140008c27:	pop    rbx
   140008c28:	repz xrelease xchg BYTE PTR [rdi+0x676a7181],al
   140008c30:	adc    al,0xa
   140008c32:	add    DWORD PTR [rax],eax
   140008c34:	add    BYTE PTR [rax],al
   140008c36:	add    BYTE PTR [rax],al
   140008c38:	add    BYTE PTR [rax],al
   140008c3a:	mov    bh,0xb4
   140008c3c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140008c3d:	movabs eax,ds:0x7a7168160e3e0000
   140008c46:	test   DWORD PTR [rbp+0x4cf4f487],eax
   140008c4c:	push   rdi
	...
   140008c55:	add    BYTE PTR [rax],al
   140008c57:	pop    rsp
   140008c58:	rex.WB
   140008c59:	xrelease xchg BYTE PTR [rdi+0x69718181],al
   140008c60:	adc    eax,0x350b11
   140008c65:	add    BYTE PTR [rax],al
   140008c67:	add    BYTE PTR [rax],al
   140008c69:	add    bl,cl
   140008c6b:	retf   
   140008c6c:	mov    ah,0x9d
   140008c6e:	add    BYTE PTR [rdx+rcx*1],dh
   140008c71:	adc    al,0x63
   140008c73:	jo     0x140008cef
   140008c75:	test   DWORD PTR [rbp+0x7bf4f487],eax
   140008c7b:	pop    rsp
	...
   140008c88:	fisttp WORD PTR [rcx-0xd]
   140008c8b:	xrelease xchg BYTE PTR [rcx+rax*4+0x11156776],al
   140008c93:	add    al,BYTE PTR [rax]
   140008c95:	add    BYTE PTR [rax],al
   140008c97:	add    BYTE PTR [rax],al
   140008c99:	add    ah,cl
   140008c9b:	int3   
   140008c9c:	mov    ah,0xa5
   140008c9e:	lahf   
   140008c9f:	and    cl,BYTE PTR [rsi]
   140008ca1:	movsxd ebp,DWORD PTR [rdx+rdi*2+0x7a]
   140008ca5:	test   DWORD PTR [rdi+0x3286f4f4],eax
	...
   140008cb7:	add    BYTE PTR [rax],al
   140008cb9:	sub    bl,BYTE PTR [rdi-0xd]
   140008cbc:	xchg   BYTE PTR [rsi+0x74778186],al
   140008cc2:	push   rcx
   140008cc3:	(bad)  
   140008cc4:	xor    eax,DWORD PTR [rax]
   140008cc6:	add    BYTE PTR [rax],al
   140008cc8:	add    BYTE PTR [rax],al
   140008cca:	ror    esp,1
   140008ccc:	mov    bh,0xa9
   140008cce:	cdq    
   140008ccf:	(bad)  
   140008cd0:	adc    BYTE PTR [rbx+0x70],ah
   140008cd3:	test   BYTE PTR [rbp-0x90b0b79],al
   140008cd9:	rex.WB add BYTE PTR [r8],al
	...
   140008ce8:	add    BYTE PTR [rax],al
   140008cea:	add    BYTE PTR [rbp+rsi*1+0x29],bl
   140008cee:	(bad)  
   140008cef:	sbb    ebx,DWORD PTR [rbx]
   140008cf1:	add    DWORD PTR [rcx],eax
   140008cf3:	and    al,0xdf
   140008cf5:	add    BYTE PTR [rax],al
   140008cf7:	add    BYTE PTR [rax],al
   140008cf9:	add    BYTE PTR [rax],al
   140008cfb:	rcl    dl,cl
   140008cfd:	mov    dh,0x9a
   140008cff:	mov    BYTE PTR [rdi],cl
   140008d01:	gs js  0x140008c89
   140008d04:	test   DWORD PTR [rdi+0x5787f6f4],eax
	...
   140008d2a:	add    dl,dl
   140008d2c:	cli    
   140008d2d:	int3   
   140008d2e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140008d2f:	xchg   ebp,eax
   140008d30:	sbb    BYTE PTR [rax+0x7a],cl
   140008d33:	test   DWORD PTR [rbp+0x5af6f6f4],eax
	...
   140008d59:	add    BYTE PTR [rax],al
   140008d5b:	add    dl,bh
   140008d5d:	shr    DWORD PTR [rdi+0x782d899a],cl
   140008d63:	test   DWORD PTR [rdi+0x3ff6f6f6],eax
	...
   140008d89:	add    BYTE PTR [rax],al
   140008d8b:	add    bl,dl
   140008d8d:	stc    
   140008d8e:	mov    edx,0x618d98a7
   140008d93:	test   edx,esi
   140008d95:	hlt    
   140008d96:	idiv   al
   140008d98:	rex.WB (bad) 
   140008d9a:	sub    BYTE PTR [rsi+rbx*1],bl
   140008d9d:	sub    BYTE PTR [rsi+rbx*1],bl
   140008da0:	sbb    eax,0x1c1c1d1c
   140008da5:	sbb    al,0x1c
   140008da7:	sbb    al,0x1c
   140008da9:	sbb    al,0x1c
   140008dab:	sbb    eax,DWORD PTR [rip+0x2021b03]        # 0x14202a8b4
   140008db1:	add    eax,DWORD PTR [rdx]
   140008db3:	add    ah,BYTE PTR [rax+rax*1]
   140008db6:	add    BYTE PTR [rax],al
   140008db8:	add    BYTE PTR [rax],al
   140008dba:	add    BYTE PTR [rax],al
   140008dbc:	cli    
   140008dbd:	cli    
   140008dbe:	shl    DWORD PTR [rcx-0x7dc6695c],cl
   140008dc4:	hlt    
   140008dc5:	idiv   al
   140008dc7:	idiv   al
   140008dc9:	clc    
   140008dca:	idiv   al
   140008dcc:	clc    
   140008dcd:	clc    
   140008dce:	clc    
   140008dcf:	clc    
   140008dd0:	clc    
   140008dd1:	clc    
   140008dd2:	clc    
   140008dd3:	clc    
   140008dd4:	clc    
   140008dd5:	clc    
   140008dd6:	clc    
   140008dd7:	clc    
   140008dd8:	clc    
   140008dd9:	idiv   al
   140008ddb:	div    dh
   140008ddd:	div    bl
   140008ddf:	xrelease xchg BYTE PTR [rbx+0x5c45567f],al
   140008de6:	add    BYTE PTR [rax],al
   140008de8:	add    BYTE PTR [rax],al
   140008dea:	add    BYTE PTR [rax],al
   140008dec:	add    ah,al
   140008dee:	cli    
   140008def:	retf   
   140008df0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140008df1:	(bad)  
   140008df2:	mov    edi,DWORD PTR [rdx+rsi*8-0xa]
   140008df6:	clc    
   140008df7:	clc    
   140008df8:	clc    
   140008df9:	clc    
   140008dfa:	clc    
   140008dfb:	clc    
   140008dfc:	clc    
   140008dfd:	clc    
   140008dfe:	clc    
   140008dff:	clc    
   140008e00:	clc    
   140008e01:	clc    
   140008e02:	clc    
   140008e03:	clc    
   140008e04:	clc    
   140008e05:	clc    
   140008e06:	clc    
   140008e07:	idiv   al
   140008e09:	clc    
   140008e0a:	div    dh
   140008e0c:	div    bl
   140008e0e:	xrelease xchg BYTE PTR [rcx+0x1355747f],al
   140008e15:	sbb    eax,DWORD PTR [rax]
   140008e17:	add    BYTE PTR [rax],al
   140008e19:	add    BYTE PTR [rax],al
   140008e1b:	add    BYTE PTR [rax],al
   140008e1d:	fsincos 
   140008e1f:	stc    
   140008e20:	mov    ch,0xa7
   140008e22:	(bad)  
   140008e23:	(bad)  
   140008e24:	in     eax,dx
   140008e25:	div    dh
   140008e27:	clc    
   140008e28:	clc    
   140008e29:	clc    
   140008e2a:	clc    
   140008e2b:	clc    
   140008e2c:	clc    
   140008e2d:	clc    
   140008e2e:	clc    
   140008e2f:	clc    
   140008e30:	clc    
   140008e31:	clc    
   140008e32:	clc    
   140008e33:	clc    
   140008e34:	clc    
   140008e35:	clc    
   140008e36:	clc    
   140008e37:	clc    
   140008e38:	clc    
   140008e39:	div    dh
   140008e3b:	div    dh
   140008e3d:	xrelease xchg BYTE PTR [rsi+0x4f557981],al
   140008e44:	adc    DWORD PTR [rbx],eax
   140008e46:	add    BYTE PTR [rax],al
   140008e48:	add    BYTE PTR [rax],al
   140008e4a:	add    BYTE PTR [rax],al
   140008e4c:	add    BYTE PTR [rdi],dh
   140008e4e:	(bad)  
   140008e4f:	sti    
   140008e50:	shl    BYTE PTR [rdx+rbx*4-0x90e2566],cl
   140008e57:	clc    
   140008e58:	clc    
   140008e59:	clc    
   140008e5a:	clc    
   140008e5b:	clc    
   140008e5c:	clc    
   140008e5d:	clc    
   140008e5e:	clc    
   140008e5f:	clc    
   140008e60:	clc    
   140008e61:	clc    
   140008e62:	clc    
   140008e63:	clc    
   140008e64:	clc    
   140008e65:	clc    
   140008e66:	clc    
   140008e67:	clc    
   140008e68:	idiv   al
   140008e6a:	div    dh
   140008e6c:	div    bl
   140008e6e:	repz test BYTE PTR [rcx+0xd156977],al
   140008e75:	(bad)  
   140008e76:	add    BYTE PTR [rax],al
   140008e78:	add    BYTE PTR [rax],al
   140008e7a:	add    BYTE PTR [rax],al
   140008e7c:	add    BYTE PTR [rax+0x36],bl
   140008e7f:	cli    
   140008e80:	cli    
   140008e81:	mov    bh,0xa7
   140008e83:	(bad)  
   140008e84:	xchg   edi,eax
   140008e85:	in     al,0xf5
   140008e87:	clc    
   140008e88:	clc    
   140008e89:	clc    
   140008e8a:	clc    
   140008e8b:	clc    
   140008e8c:	clc    
   140008e8d:	clc    
   140008e8e:	clc    
   140008e8f:	clc    
   140008e90:	clc    
   140008e91:	clc    
   140008e92:	clc    
   140008e93:	clc    
   140008e94:	clc    
   140008e95:	clc    
   140008e96:	clc    
   140008e97:	idiv   al
   140008e99:	div    dh
   140008e9b:	div    ah
   140008e9d:	hlt    
   140008e9e:	xchg   BYTE PTR [rsi+0x4f557981],al
   140008ea4:	or     eax,0x28
   140008ea9:	add    BYTE PTR [rax],al
   140008eab:	add    BYTE PTR [rax],al
   140008ead:	pop    rsi
   140008eae:	pop    rdx
   140008eaf:	xchg   esp,eax
   140008eb0:	sti    
   140008eb1:	shl    BYTE PTR [rbx-0x115f655c],cl
   140008eb7:	cmc    
   140008eb8:	rex.WB (bad) 
   140008eba:	sub    BYTE PTR [rax],ch
   140008ebc:	sub    BYTE PTR [rax],ch
   140008ebe:	sub    DWORD PTR [rax],ebp
   140008ec0:	sub    BYTE PTR [rax],ch
   140008ec2:	(bad)  
   140008ec3:	sub    BYTE PTR [rax],ch
   140008ec5:	sbb    al,0x1f
   140008ec7:	and    BYTE PTR [rdi],bl
   140008ec9:	and    BYTE PTR [rax-0xa],al
   140008ecc:	repz repz repz add DWORD PTR [rcx+0xc4f5076],0x35
   140008ed9:	add    BYTE PTR [rax],al
   140008edb:	add    BYTE PTR [rax],al
   140008edd:	add    BYTE PTR [rdi+0x60],al
   140008ee0:	(bad)  
   140008ee1:	cli    
   140008ee2:	int3   
   140008ee3:	mov    bl,0xa4
   140008ee5:	(bad)  
   140008ee6:	xchg   ecx,eax
   140008ee7:	out    dx,eax
   140008ee8:	sub    DWORD PTR [rax],eax
	...
   140008efa:	and    dh,dh
   140008efc:	div    bl
   140008efe:	xchg   BYTE PTR [rsi+0x13557481],al
   140008f04:	cmp    al,0x0
	...
   140008f0e:	rex.WB ins BYTE PTR es:[rdi],dx
   140008f10:	in     eax,0xf9
   140008f12:	cli    
   140008f13:	mov    bh,0xb3
   140008f15:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140008f16:	(bad)  
   140008f17:	xchg   edx,eax
   140008f18:	push   rdi
	...
   140008f29:	add    BYTE PTR [rax-0xc],al
   140008f2c:	repz xrelease xchg BYTE PTR [rcx+0x13506a7f],al
   140008f34:	(bad)  
	...
   140008f3d:	add    BYTE PTR [rax+0x66],al
   140008f40:	adc    BYTE PTR [rbx-0x58480506],0xa4
   140008f47:	(bad)  
   140008f48:	xlat   BYTE PTR ds:[rbx]
   140008f49:	pop    rsp
	...
   140008f5a:	pop    rcx
   140008f5b:	div    bl
   140008f5d:	repz add DWORD PTR [rcx+0x13507479],0x1c
	...
   140008f6d:	add    BYTE PTR [rsi+0x53],bl
   140008f70:	jp     0x140008f5f
   140008f72:	mov    eax,0xa7b5f9fa
   140008f77:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140008f78:	(bad)  
   140008f79:	add    BYTE PTR cs:[rax],al
	...
   140008f88:	add    BYTE PTR [rdi-0x7a],dl
   140008f8b:	repz xrelease xchg BYTE PTR [rsi+0x4f557581],al
   140008f93:	cmp    al,0xdf
	...
   140008f9d:	add    BYTE PTR [rax],al
   140008f9f:	rex.WX jno 0x140008f27
   140008fa2:	in     al,dx
   140008fa3:	mov    ecx,0xa7b5d3fb
   140008fa8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140008fa9:	(bad)  
   140008faa:	xor    DWORD PTR [rax],eax
	...
   140008fb8:	add    BYTE PTR [rcx-0xa],cl
   140008fbb:	repz xrelease xchg BYTE PTR [rcx+0x4d50757f],al
   140008fc3:	(bad)  
	...
   140008fcc:	add    BYTE PTR [rax],al
   140008fce:	add    BYTE PTR [rax+0x54],bl
   140008fd1:	jp     0x140008f5a
   140008fd3:	out    0xc3,al
   140008fd5:	sti    
   140008fd6:	shl    DWORD PTR [rbp-0x27655b59],cl
	...
   140008fe8:	xchg   spl,sil
   140008feb:	repz repz add DWORD PTR [rcx+0x3c4f6979],0x57
	...
   140009000:	rex.WB jp 0x140008f88
   140009003:	xchg   edx,ebp
   140009005:	(bad)  
   140009006:	sti    
   140009007:	shl    DWORD PTR [rbp-0x2b656559],cl
	...
   140009015:	add    BYTE PTR [rax],al
   140009017:	rex xor esi,0xfffffff3
   14000901b:	xrelease xchg BYTE PTR [rcx+0x4d557479],al
   140009022:	(bad)  
	...
   14000902f:	add    BYTE PTR [rsi+0x47],bl
   140009032:	test   DWORD PTR [rbp-0x43c160c],eax
   140009038:	shl    DWORD PTR [rdi-0x72655b59],cl
   14000903e:	loopne 0x140009040
   140009040:	add    BYTE PTR [rax],al
   140009042:	add    BYTE PTR [rax],al
   140009044:	add    BYTE PTR [rbp+0x3f],bl
   140009047:	xchg   ah,dh
   140009049:	hlt    
   14000904a:	repz add DWORD PTR [rcx+rax*4+0x3b4f6977],0xffffffe1
   140009053:	iret   
	...
   140009060:	add    BYTE PTR [rcx+0x64],cl
   140009063:	test   esp,esi
   140009065:	hlt    
   140009066:	jmp    0xf7d48c2e
   14000906b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000906c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000906d:	(bad)  
   14000906e:	xchg   ecx,eax
   14000906f:	sub    edi,DWORD PTR [rdi]
   140009071:	sub    BYTE PTR [rcx+0x4a],cl
   140009075:	xor    esi,0xfffffff4
   140009078:	hlt    
   140009079:	xrelease xchg BYTE PTR [rsi+0x50747781],al
   140009080:	cmp    al,0x57
   140009082:	add    bh,cl
	...
   140009090:	add    BYTE PTR [rax],al
   140009092:	rex.WX jno 0x14000901a
   140009095:	hlt    
   140009096:	hlt    
   140009097:	(bad)  
   140009098:	mov    ecx,0xb3b7fafa
   14000909d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000909e:	(bad)  
   14000909f:	pushf  
   1400090a0:	fsub   st(5),st
   1400090a2:	cmc    
   1400090a3:	div    dh
   1400090a5:	hlt    
   1400090a6:	div    ah
   1400090a8:	xrelease xchg BYTE PTR [rcx+0x55747981],al
   1400090af:	or     eax,0x40
   1400090b4:	iret   
	...
   1400090c1:	add    BYTE PTR [rax],al
   1400090c3:	rex.WX add QWORD PTR [rdi-0x47080b0c],0xffffffffb3cbfafa
   1400090ce:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400090cf:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400090d0:	(bad)  
   1400090d1:	fsubp  st(3),st
   1400090d3:	lock repnz hlt 
   1400090d6:	xrelease xchg BYTE PTR [rsi+0x74818186],al
   1400090dd:	push   rbp
   1400090de:	and    DWORD PTR [r8],r8d
   1400090e1:	add    BYTE PTR [rax],al
   1400090e3:	add    bh,cl
	...
   1400090f1:	add    BYTE PTR [rax],al
   1400090f3:	add    BYTE PTR [rcx+0x7e],cl
   1400090f6:	test   esp,esi
   1400090f8:	hlt    
   1400090f9:	icebp  
   1400090fa:	xchg   esp,eax
   1400090fb:	stc    
   1400090fc:	cli    
   1400090fd:	int3   
   1400090fe:	mov    bl,0xa7
   140009100:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009101:	(bad)  
   140009102:	nop
   140009103:	fstp   TBYTE PTR [rbp-0x7e]
   140009106:	xchg   BYTE PTR [rsi+0x747f8181],al
   14000910c:	push   rsi
   14000910d:	and    DWORD PTR [r8],eax
   140009110:	add    BYTE PTR [rax],al
   140009112:	add    BYTE PTR [rax],al
   140009114:	iret   
   140009115:	iret   
	...
   140009122:	add    BYTE PTR [rax],al
   140009124:	add    BYTE PTR [rcx+0x5b],cl
   140009127:	xchg   BYTE PTR [rdi-0x2e170d0d],al
   14000912d:	cli    
   14000912e:	ror    ebx,cl
   140009130:	mov    dh,0xa7
   140009132:	(bad)  
   140009133:	xchg   esi,eax
   140009134:	mov    ?,WORD PTR [rax]
   140009136:	jnp    0x1400091b6
   140009138:	jg     0x1400091b1
   14000913a:	jae    0x140009188
   14000913c:	ds push rdi
   14000913e:	add    BYTE PTR [rax],al
   140009140:	add    BYTE PTR [rax],al
   140009142:	add    BYTE PTR [rax],al
   140009144:	iret   
   140009145:	leave  
	...
   140009156:	pop    rbp
   140009157:	rex.WX jle 0x1400090e0
   14000915a:	xchg   BYTE PTR [rdi-0x505461a],al
   140009160:	ror    esp,cl
   140009162:	mov    ch,0xa4
   140009164:	(bad)  
   140009165:	mov    WORD PTR [rax],?
   140009167:	sub    eax,0x24575a5a
   14000916c:	loop   0x14000916e
   14000916e:	add    BYTE PTR [rax],al
   140009170:	add    BYTE PTR [rax],al
   140009172:	add    BYTE PTR [rax],al
   140009174:	iret   
   140009175:	mov    DWORD PTR [rax],0x0
	...
   140009187:	add    BYTE PTR [rax+0x49],bl
   14000918a:	pop    rdi
   14000918b:	(bad)  
   14000918c:	sub    ebp,0xffffffe7
   14000918f:	(bad)  
   140009190:	sti    
   140009191:	cli    
   140009192:	shl    DWORD PTR [rdi-0x75675b57],cl
   140009198:	add    al,0x2f
   14000919a:	(bad)  
	...
   1400091a3:	add    BYTE PTR [rdx+0xc5],dh
	...
   1400091b9:	add    cl,ah
   1400091bb:	rex.WB
   1400091bc:	rex.WB pop r9
   1400091be:	pop    rdi
   1400091bf:	jrcxz  0x14000917a
   1400091c1:	cli    
   1400091c2:	sti    
   1400091c3:	cli    
   1400091c4:	int3   
   1400091c5:	mov    cl,0x9a
   1400091c7:	cwde   
   1400091c8:	xchg   ebp,eax
   1400091c9:	lahf   
	...
   1400091d2:	add    cl,cl
   1400091d4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
	...
   1400091ed:	add    BYTE PTR [rax+rbx*2+0x32],bl
   1400091f1:	(bad)  
   1400091f2:	mov    edx,0xb6d1fafa
   1400091f7:	test   al,0xa4
   1400091f9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400091fa:	fwait
   1400091fb:	sahf   
   1400091fc:	movabs ds:0xaca6be0000000000,eax
	...
   140009221:	add    BYTE PTR [rax],al
   140009223:	add    dh,cl
   140009225:	cli    
   140009226:	cli    
   140009227:	ror    dl,cl
   140009229:	mov    ah,0xa8
   14000922b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000922c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000922d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000922e:	popf   
   14000922f:	lods   al,BYTE PTR ds:[rsi]
   140009230:	lods   al,BYTE PTR ds:[rsi]
   140009231:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140009232:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140009233:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140009234:	leave  
	...
   140009255:	add    dh,cl
   140009257:	sar    edx,cl
   140009259:	stc    
   14000925a:	int3   
   14000925b:	mov    ch,0xaa
   14000925d:	test   eax,0xa6a9a6a9
   140009262:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140009263:	mov    DWORD PTR [rax],0x0
	...
   140009289:	(bad)  
   14000928a:	rcl    ebx,1
   14000928c:	retf   
   14000928d:	mov    ch,0xb4
   14000928f:	mov    ah,0xb0
   140009291:	mov    edi,0x0
	...
   1400092c6:	add    BYTE PTR [rax],al
   1400092c8:	(bad)  
   1400092c9:	(bad)  
   1400092ca:	(bad)  
   1400092cb:	(bad)  
   1400092cc:	(bad)  
   1400092cd:	inc    DWORD PTR [rax]
   1400092cf:	add    bh,bh
   1400092d1:	(bad)  
   1400092d2:	(bad)  
   1400092d3:	(bad)  
   1400092d4:	(bad)  
   1400092d5:	inc    DWORD PTR [rax]
   1400092d7:	add    bh,bh
   1400092d9:	(bad)  
   1400092da:	(bad)  
   1400092db:	(bad)  
   1400092dc:	(bad)  
   1400092dd:	inc    DWORD PTR [rax]
   1400092df:	add    al,bh
   1400092e1:	(bad)  
   1400092e2:	cld    
   1400092e3:	add    edi,edi
   1400092e5:	inc    DWORD PTR [rax]
   1400092e7:	add    al,dh
   1400092e9:	add    esp,eax
   1400092eb:	add    BYTE PTR [rdi-0x1],bh
   1400092ee:	add    BYTE PTR [rax],al
   1400092f0:	loope  0x1400092eb
   1400092f2:	add    BYTE PTR [rax],al
   1400092f4:	(bad)  
   1400092f5:	inc    DWORD PTR [rax]
   1400092f7:	add    bl,al
   1400092f9:	inc    BYTE PTR [rax]
   1400092fb:	add    BYTE PTR [rdi],al
   1400092fd:	inc    DWORD PTR [rax]
   1400092ff:	add    bh,al
   140009301:	clc    
   140009302:	add    BYTE PTR [rax],al
   140009304:	add    edi,edi
   140009306:	add    BYTE PTR [rax],al
   140009308:	(bad)  
   140009309:	lock add BYTE PTR [rax],al
   14000930c:	add    bh,bh
   14000930e:	add    BYTE PTR [rax],al
   140009310:	xchg   eax,esp
   140009312:	add    BYTE PTR [rax],al
   140009314:	add    BYTE PTR [rdi+0x0],bh
   140009317:	add    BYTE PTR [rdi+0xc0],al
   14000931d:	jg     0x14000931f
   14000931f:	add    BYTE PTR [rdi+0x80],al
   140009325:	(bad)  
   140009326:	add    BYTE PTR [rax],al
   140009328:	add    DWORD PTR [rax],0x1
   14000932b:	clc    
   14000932c:	add    BYTE PTR [rdi],bl
   14000932e:	add    BYTE PTR [rax],al
   140009330:	ret    
   140009331:	add    BYTE PTR [rdi],al
   140009333:	inc    BYTE PTR [rax]
   140009335:	sldt   WORD PTR [rax]
   140009338:	ret    0xf00
   14000933b:	inc    DWORD PTR [rax]
   14000933d:	sldt   WORD PTR [rax]
   140009340:	rol    BYTE PTR [rax],0x1f
   140009343:	inc    DWORD PTR [rax-0x3ffffff9]
   140009349:	add    BYTE PTR [rdi],bh
   14000934b:	jmp    rax
   14000934d:	(bad)  
   14000934e:	add    BYTE PTR [rax],al
   140009350:	loopne 0x140009352
   140009352:	(bad)  
   140009353:	(bad)  
   140009354:	(bad)  
   140009355:	inc    DWORD PTR [rax]
   140009357:	add    al,ah
   140009359:	add    BYTE PTR [rdi-0x1],bh
   14000935c:	(bad)  
   14000935d:	inc    DWORD PTR [rax]
   14000935f:	add    al,dh
   140009361:	add    BYTE PTR [rdi-0x1],bh
   140009364:	(bad)  
   140009365:	inc    DWORD PTR [rax]
   140009367:	add    al,dh
   140009369:	add    BYTE PTR [rax],al
   14000936b:	add    BYTE PTR [rax],al
   14000936d:	(bad)  
   14000936e:	add    BYTE PTR [rax],al
   140009370:	lock add BYTE PTR [rax],al
   140009373:	add    BYTE PTR [rax],al
   140009375:	add    eax,DWORD PTR [rax]
   140009377:	add    al,bh
   140009379:	add    BYTE PTR [rax],al
   14000937b:	add    BYTE PTR [rax],al
   14000937d:	add    eax,DWORD PTR [rax]
   14000937f:	add    al,bh
   140009381:	add    BYTE PTR [rax],al
   140009383:	add    BYTE PTR [rax],al
   140009385:	add    eax,DWORD PTR [rax]
   140009387:	add    al,bh
   140009389:	add    BYTE PTR [rax],al
   14000938b:	add    BYTE PTR [rax],al
   14000938d:	add    eax,DWORD PTR [rax]
   14000938f:	add    al,bh
   140009391:	add    BYTE PTR [rax],al
   140009393:	add    BYTE PTR [rax],al
   140009395:	add    eax,DWORD PTR [rax]
   140009397:	add    al,bh
   140009399:	add    BYTE PTR [rax],al
   14000939b:	add    BYTE PTR [rax],al
   14000939d:	add    eax,DWORD PTR [rax]
   14000939f:	add    ah,bh
   1400093a1:	add    BYTE PTR [rdi-0x1],bh
   1400093a4:	rol    BYTE PTR [rdi],0x0
   1400093a7:	add    ah,bh
   1400093a9:	add    BYTE PTR [rdi-0x1],bh
   1400093ac:	rol    BYTE PTR [rdi],0x0
   1400093af:	add    ah,bh
   1400093b1:	add    BYTE PTR [rdi],bh
   1400093b3:	inc    eax
   1400093b5:	(bad)  
   1400093b6:	add    BYTE PTR [rax],al
   1400093b8:	cld    
   1400093b9:	add    BYTE PTR [rdi],bh
   1400093bb:	inc    DWORD PTR [rax-0x1fffff9]
   1400093c1:	add    BYTE PTR [rdi],bl
   1400093c3:	inc    DWORD PTR [rax-0x1fffff1]
   1400093c9:	add    BYTE PTR [rdi],cl
   1400093cb:	inc    DWORD PTR [rax]
   1400093cd:	sldt   WORD PTR [rax]
   1400093d0:	inc    DWORD PTR [rax]
   1400093d2:	(bad)  
   1400093d3:	inc    BYTE PTR [rax]
   1400093d5:	(bad)  
   1400093d6:	add    BYTE PTR [rax],al
   1400093d8:	inc    DWORD PTR [rax]
   1400093da:	add    eax,edi
   1400093dc:	add    BYTE PTR [rdi],cl
   1400093de:	add    BYTE PTR [rax],al
   1400093e0:	inc    DWORD PTR [rax+0x2f000000]
   1400093e6:	add    BYTE PTR [rax],al
   1400093e8:	inc    eax
   1400093ea:	add    BYTE PTR [rax],al
   1400093ec:	add    BYTE PTR [rdi+0x0],dh
   1400093ef:	add    bh,bh
   1400093f1:	loopne 0x1400093f3
   1400093f3:	add    BYTE PTR [rax],al
   1400093f5:	test   DWORD PTR [rax],0xf0ff00
   1400093fb:	add    BYTE PTR [rcx],al
   1400093fd:	repz add BYTE PTR [rax],al
   140009400:	(bad)  
   140009401:	clc    
   140009402:	add    BYTE PTR [rax],al
   140009404:	add    esi,ebx
   140009406:	add    BYTE PTR [rax],al
   140009408:	(bad)  
   140009409:	cld    
   14000940a:	add    BYTE PTR [rax],al
   14000940c:	(bad)  
   14000940d:	repz add BYTE PTR [rax],al
   140009410:	(bad)  
   140009411:	inc    DWORD PTR [rax]
   140009413:	add    BYTE PTR [rdi],bl
   140009415:	repz add BYTE PTR [rax],al
   140009418:	(bad)  
   140009419:	inc    eax
   14000941b:	add    BYTE PTR [rdi],bh
   14000941d:	out    0x0,eax
   14000941f:	add    bh,bh
   140009421:	(bad)  
   140009422:	cld    
   140009423:	add    BYTE PTR [rdi],al
   140009425:	mov    DWORD PTR [rax],0xffffff00
   14000942b:	lock add BYTE PTR [rdi],al
   14000942e:	add    BYTE PTR [rax],al
   140009430:	(bad)  
   140009431:	(bad)  
   140009432:	(bad)  
   140009433:	cld    
   140009434:	add    BYTE PTR [rdi],cl
   140009436:	add    BYTE PTR [rax],al
   140009438:	(bad)  
   140009439:	(bad)  
   14000943a:	(bad)  
   14000943b:	inc    DWORD PTR [rax-0xffffc1]
   140009441:	(bad)  
   140009442:	(bad)  
   140009443:	(bad)  
   140009444:	(bad)  
   140009445:	inc    DWORD PTR [rax]
   140009447:	add    BYTE PTR [rax],ch
   140009449:	add    BYTE PTR [rax],al
   14000944b:	add    BYTE PTR [rax],ah
   14000944d:	add    BYTE PTR [rax],al
   14000944f:	add    BYTE PTR [rax+0x0],al
   140009452:	add    BYTE PTR [rax],al
   140009454:	add    DWORD PTR [rax],eax
   140009456:	or     BYTE PTR [rax],al
   140009458:	add    BYTE PTR [rax],al
   14000945a:	add    BYTE PTR [rax],al
   14000945c:	add    BYTE PTR [rax+rax*1],al
	...
   140009467:	add    BYTE PTR [rax],al
   140009469:	add    DWORD PTR [rax],eax
   14000946b:	add    BYTE PTR [rax],al
   14000946d:	add    DWORD PTR [rax],eax
   14000946f:	add    BYTE PTR [rax],al
   140009471:	add    BYTE PTR [rax],al
   140009473:	add    BYTE PTR [rsi-0x42ffc691],bl
   140009479:	jg     0x14000949b
   14000947b:	add    BYTE PTR [rsi+rsi*2+0x77a60034],ch
   140009482:	cmp    al,0x0
   140009484:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140009485:	jnp    0x1400094c4
   140009487:	add    BYTE PTR [rcx-0x4effc184],ch
   14000948d:	js     0x1400094bf
   14000948f:	add    BYTE PTR [rbx-0x5cffbc89],ah
   140009495:	jns    0x1400094db
   140009497:	add    BYTE PTR [rbp-0x44ffbf81],ch
   14000949d:	test   BYTE PTR [rdi],ch
   14000949f:	add    BYTE PTR [rbp-0x43ffc47b],dh
   1400094a5:	xchg   DWORD PTR [rdi],edi
   1400094a7:	add    dl,cl
   1400094a9:	test   DWORD PTR [rdi],edx
   1400094ab:	add    cl,cl
   1400094ad:	mov    bl,BYTE PTR [rax]
   1400094af:	add    ah,dl
   1400094b1:	xchg   ebp,eax
   1400094b2:	(bad)  
   1400094b3:	add    al,al
   1400094b5:	and    DWORD PTR [rax],0x2990ce00
   1400094bb:	add    al,bl
   1400094bd:	xchg   edi,eax
   1400094be:	es add ah,bl
   1400094c1:	(bad)  
   1400094c2:	and    eax,0x2995d400
   1400094c7:	add    ch,dl
   1400094c9:	fwait
   1400094ca:	sub    BYTE PTR [rax],al
   1400094cc:	ret    0x3789
   1400094cf:	add    bl,cl
   1400094d1:	xchg   ecx,eax
   1400094d2:	xor    DWORD PTR [rax],eax
   1400094d4:	rcl    DWORD PTR [rcx-0x6835ffc1],0x39
   1400094db:	add    al,bl
   1400094dd:	pushf  
   1400094de:	xor    eax,DWORD PTR [rax]
   1400094e0:	fbld   TBYTE PTR [rdx+rbp*1+0x37a4d600]
   1400094e7:	add    bh,bl
   1400094e9:	lods   al,BYTE PTR ds:[rsi]
   1400094ea:	ss add dh,dl
   1400094ed:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400094ee:	cmp    DWORD PTR [rax],eax
   1400094f0:	fsubr  QWORD PTR [rax+rdi*1+0x27a6e400]
   1400094f7:	add    bh,ah
   1400094f9:	stos   BYTE PTR es:[rdi],al
   1400094fa:	and    eax,0x2aace600
   1400094ff:	add    bl,ch
   140009501:	scas   eax,DWORD PTR es:[rdi]
   140009502:	cs add cl,ch
   140009505:	mov    cl,0x2a
   140009507:	add    bl,ah
   140009509:	lods   al,BYTE PTR ds:[rsi]
   14000950a:	xor    al,0x0
   14000950c:	loopne 0x1400094bc
   14000950e:	cmp    al,BYTE PTR [rax]
   140009510:	in     al,dx
   140009511:	mov    dh,0x30
   140009513:	add    ch,ch
   140009515:	mov    edx,0xb0e80033
   14000951a:	cmp    BYTE PTR [rax],al
   14000951c:	out    dx,eax
   14000951d:	mov    esi,0xbef00038
   140009522:	cmp    al,BYTE PTR [rax]
   140009524:	scas   al,BYTE PTR es:[rdi]
   140009525:	add    DWORD PTR [rdx+0x0],0x4c81ab
   14000952c:	mov    bl,0x84
   14000952e:	add    BYTE PTR [rdi-0x47ffb878],r14b
   140009535:	mov    DWORD PTR [rbp+0x0],eax
   140009538:	mov    bl,0x89
   14000953a:	rex.WRXB add BYTE PTR [r10-0x43ffb675],r15b
   140009541:	nop
   140009542:	rex.WXB add BYTE PTR [r15-0x4cffa475],bpl
   140009549:	mov    dl,BYTE PTR [rcx+0x0]
   14000954c:	mov    bl,0x8e
   14000954e:	pop    rbx
   14000954f:	add    BYTE PTR [rax-0x41ffa06f],ch
   140009555:	xchg   ecx,eax
   140009556:	push   rdx
   140009557:	add    BYTE PTR [rbx-0x4dffa56d],bh
   14000955d:	(bad)  
   14000955e:	(bad)  
   14000955f:	add    BYTE PTR [rbp-0x42ff9e6b],ch
   140009565:	cwde   
   140009566:	add    BYTE PTR gs:[rbp-0x44ff976c],dh
   14000956d:	cdq    
   14000956e:	ins    BYTE PTR es:[rdi],dx
   14000956f:	add    BYTE PTR [rbx-0x68ff8f65],bh
   140009575:	test   eax,0xa1af0072
   14000957a:	jb     0x14000957c
   14000957c:	int3   
   14000957d:	xchg   esi,eax
   14000957e:	add    bpl,cl
   140009581:	cwde   
   140009582:	rex.X add dl,al
   140009585:	xchg   edx,eax
   140009586:	rex.WX add dl,al
   140009589:	xchg   ebp,eax
   14000958a:	push   rbx
   14000958b:	add    ah,al
   14000958d:	(bad)  
   14000958e:	push   rdx
   14000958f:	add    ah,cl
   140009591:	fwait
   140009592:	push   rdi
   140009593:	add    ah,cl
   140009595:	sahf   
   140009596:	pop    rbp
   140009597:	add    ah,al
   140009599:	movabs ds:0xa1ca004bafdd0043,al
   1400095a2:	pop    rcx
   1400095a3:	add    dh,cl
   1400095a5:	test   al,0x5c
   1400095a7:	add    cl,dl
   1400095a9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400095aa:	pop    rbx
   1400095ab:	add    bl,dl
   1400095ad:	stos   BYTE PTR es:[rdi],al
   1400095ae:	pop    rsp
   1400095af:	add    al,bl
   1400095b1:	lods   al,BYTE PTR ds:[rsi]
   1400095b2:	pop    rdx
   1400095b3:	add    ah,ch
   1400095b5:	mov    edx,0xbfe60042
   1400095ba:	rex.W add sil,bpl
   1400095bd:	mov    esi,0x9ac3004b
   1400095c2:	(bad)  
   1400095c3:	add    dl,al
   1400095c5:	pushf  
   1400095c6:	push   0x0
   1400095c8:	(bad)  
   1400095c9:	movabs al,ds:0xaad0006ca6ce006e
   1400095d2:	(bad)  
   1400095d3:	add    ch,cl
   1400095d5:	mov    edi,0xb6dc006e
   1400095da:	addr32 add dh,dl
   1400095dd:	mov    bl,0x68
   1400095df:	add    dh,dl
   1400095e1:	mov    esp,0xb8da006b
   1400095e6:	imul   eax,DWORD PTR [rax],0xffffffc5
   1400095e9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400095ea:	ja     0x1400095ec
   1400095ec:	retf   0x74a6
   1400095ef:	add    bh,al
   1400095f1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400095f2:	jp     0x1400095f4
   1400095f4:	leave  
   1400095f5:	test   eax,0xaed2007b
   1400095fa:	jns    0x1400095fc
   1400095fc:	shl    DWORD PTR [rbp-0x3e11ff89],cl
   140009602:	add    r12b,r13b
   140009605:	ret    
   140009606:	rex.WR add dl,r14b
   140009609:	(bad)
   14000960d:	(bad)  
   14000960e:	rex.WRB add r12b,r14b
   140009611:	int3   
   140009612:	rex.WXB add r14b,sil
   140009615:	ror    DWORD PTR [rdi+0x0],1
   140009618:	out    0xc7,eax
   14000961a:	push   rsi
   14000961b:	add    bl,dh
   14000961d:	retf   
   14000961e:	push   rsi
   14000961f:	add    dh,ch
   140009621:	rcr    BYTE PTR [rdi+0x0],cl
   140009624:	not    dl
   140009626:	push   rcx
   140009627:	add    al,bh
   140009629:	rcl    DWORD PTR [rax+rax*1-0xb],cl
   14000962d:	rcr    BYTE PTR [rbx+0x0],cl
   140009630:	clc    
   140009631:	(bad)  
   140009632:	pop    rdx
   140009633:	add    ah,bh
   140009635:	fcomp  QWORD PTR [rax+rax*1-0x2a]
   140009639:	retf   
   14000963a:	jp     0x14000963c
   14000963c:	jmp    0x12800fa04
   140009641:	iret   
   140009642:	(bad)  
   140009643:	add    ch,ah
   140009645:	shr    DWORD PTR [rax+rax*1-0x11],0xcf
   14000964a:	outs   dx,BYTE PTR ds:[rsi]
   14000964b:	add    dl,dh
   14000964d:	shl    BYTE PTR [rax+0x0],cl
   140009650:	clc    
   140009651:	(bad)  
   140009652:	(bad)  
   140009653:	add    cl,bh
   140009655:	(bad)  [rdx+0x0]
   140009658:	repnz shr BYTE PTR [rdx+0x0],cl
   14000965c:	repz fld TBYTE PTR [rdx+0x0]
   140009660:	sti    
   140009661:	(bad)  [rbx+0x0]
   140009664:	jrcxz  0x14000962d
   140009666:	jne    0x140009668
   140009668:	out    0xca,al
   14000966a:	jne    0x14000966c
   14000966c:	call   0x12f010d3c
   140009671:	fdiv   QWORD PTR [rsi+0x0]
   140009674:	in     eax,dx
   140009675:	sar    BYTE PTR [rdi+0x0],cl
   140009678:	(bad)  
   140009679:	fdivr  DWORD PTR [rbp+0x0]
   14000967c:	repz shl BYTE PTR [rax+0x0],cl
   140009680:	neg    dl
   140009682:	jnp    0x140009684
   140009684:	clc    
   140009685:	fidivr WORD PTR [rsi+0x0]
   140009688:	std    
   140009689:	loopne 0x1400096ef
   14000968b:	add    ah,bh
   14000968d:	loop   0x1400096fa
   14000968f:	add    ch,dh
   140009691:	loopne 0x140009706
   140009693:	add    ch,bh
   140009695:	in     eax,0x73
   140009697:	add    bh,bh
   140009699:	jmp    0x125fd9714
   14000969e:	jp     0x1400096a0
   1400096a0:	(bad)  
   1400096a1:	jmp    0xd32e9723
   1400096a6:	mov    dh,0x0
   1400096a8:	(bad)  
   1400096a9:	xchg   edi,eax
   1400096aa:	mov    dh,0x0
   1400096ac:	imul   esp,DWORD PTR [rcx+rbx*4-0x53539300],0x0
   1400096b4:	jp     0x14000965b
   1400096b6:	lods   eax,DWORD PTR ds:[rsi]
   1400096b7:	add    BYTE PTR [rdi+rbp*4-0x4c],ch
   1400096bb:	add    BYTE PTR [rdi],ah
   1400096bd:	sahf   
   1400096be:	(bad)
   1400096c1:	fwait
   1400096c2:	mov    DWORD PTR [rax],0xdba71f
   1400096c8:	(bad)  
   1400096c9:	popf   
   1400096ca:	in     al,dx
   1400096cb:	add    BYTE PTR [rcx],al
   1400096cd:	popf   
   1400096ce:	sti    
   1400096cf:	add    BYTE PTR [rdx],cl
   1400096d1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400096d2:	jmp    0x120a6a8d7
   1400096d7:	add    BYTE PTR [rbx+rbp*4],cl
   1400096da:	repz add BYTE PTR [rcx],al
   1400096dd:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400096de:	std    
   1400096df:	add    BYTE PTR [rax],al
   1400096e1:	scas   al,BYTE PTR es:[rdi]
   1400096e2:	inc    DWORD PTR [rax]
   1400096e4:	add    BYTE PTR [rsi-0x41ddff01],dh
   1400096ea:	inc    BYTE PTR [rax]
   1400096ec:	xor    eax,0x5c00fabb
   1400096f1:	mov    ch,0xcd
   1400096f3:	add    BYTE PTR [rax*8-0x3cedff05],al
   1400096fa:	inc    DWORD PTR [rax]
   1400096fc:	sbb    al,cl
   1400096fe:	inc    DWORD PTR [rax]
   140009700:	sbb    cl,bl
   140009702:	inc    BYTE PTR [rax]
   140009704:	add    bl,al
   140009706:	inc    BYTE PTR [rax]
   140009708:	adc    al,0xd7
   14000970a:	cmc    
   14000970b:	add    BYTE PTR [rbx],bl
   14000970d:	sar    bh,cl
   14000970f:	add    BYTE PTR [rdi],dl
   140009711:	fdiv   st(3),st
   140009713:	add    BYTE PTR [rcx],bl
   140009715:	fcos   
   140009717:	add    BYTE PTR [rip+0x2200ffc8],ah        # 0x1620196e5
   14000971d:	fcos   
   14000971f:	add    BYTE PTR [rip+0x1b00f5e1],dl        # 0x15b018d06
   140009725:	in     al,0xf7
   140009727:	add    BYTE PTR [rcx],dl
   140009729:	jrcxz  0x14000972a
   14000972b:	add    BYTE PTR [rcx],bl
   14000972d:	loope  0x14000972c
   14000972f:	add    BYTE PTR [rcx],bl
   140009731:	jmp    0x129249835
   140009736:	std    
   140009737:	add    BYTE PTR [rbp*8-0xcd5ff08],dh
   14000973e:	inc    DWORD PTR [rax]
   140009740:	outs   dx,DWORD PTR ds:[rsi]
   140009741:	mov    ebp,0xfdc44b00
   140009747:	add    BYTE PTR [rdx-0x35],al
   14000974a:	inc    BYTE PTR [rax]
   14000974c:	rex.WR retf 0xfd
   140009750:	push   rbp
   140009751:	retf   0xfc
   140009754:	pop    rsp
   140009755:	retf   0xfc
   140009758:	rex.WRXB sar r15b,1
   14000975b:	add    BYTE PTR [rax-0x2d],dl
   14000975e:	inc    DWORD PTR [rax]
   140009760:	pop    rsi
   140009761:	(bad)  
   140009762:	inc    BYTE PTR [rax]
   140009764:	(bad)  
   140009765:	fsubrp st(5),st
   140009767:	add    BYTE PTR [rcx-0x32],ah
   14000976a:	cld    
   14000976b:	add    BYTE PTR [rdi-0x35],dh
   14000976e:	test   BYTE PTR [rax],0x6b
   140009771:	fsin   
   140009773:	add    BYTE PTR [rcx-0x2b],dh
   140009776:	sti    
   140009777:	add    BYTE PTR [rbp-0x12],al
   14000977a:	clc    
   14000977b:	add    BYTE PTR [rax-0x16],bl
   14000977e:	test   BYTE PTR [rax],0x48
   140009781:	repnz inc DWORD PTR [rax]
   140009784:	pop    rbx
   140009785:	clc    
   140009786:	inc    DWORD PTR [rax]
   140009788:	addr32 (bad) 
   14000978a:	inc    BYTE PTR [rax]
   14000978c:	jle    0x14000977b
   14000978e:	inc    DWORD PTR [rax]
   140009790:	movsxd esi,eax
   140009792:	inc    DWORD PTR [rax]
   140009794:	imul   esi,eax,0xffffffff
   140009797:	add    BYTE PTR [rsi+rdi*8-0x1],ch
   14000979b:	add    BYTE PTR [rcx-0x7],bh
   14000979e:	inc    BYTE PTR [rax]
   1400097a0:	test   BYTE PTR [rbx-0x5068ff64],ch
   1400097a6:	nop
   1400097a7:	add    BYTE PTR [rdi-0x5dff795f],ch
   1400097ad:	mov    al,0x8d
   1400097af:	add    BYTE PTR [rbp-0x5cff704a],dh
   1400097b5:	mov    dl,0x90
   1400097b7:	add    BYTE PTR [rax-0x2fff5d4d],cl
   1400097bd:	mov    ch,0x81
   1400097bf:	add    BYTE PTR [rsi-0x47ff623f],ah
   1400097c5:	ret    0x95
   1400097c8:	xchg   edi,eax
   1400097c9:	enter  0xb8,0xb2
   1400097cd:	(bad)  
   1400097ce:	mov    eax,0x8cc0c200
   1400097d3:	add    cl,dl
   1400097d5:	leave  
   1400097d6:	xchg   DWORD PTR [rax],eax
   1400097d8:	(bad)  
   1400097da:	mov    DWORD PTR [rax],eax
   1400097dc:	ror    ecx,0x91
   1400097df:	add    ah,dl
   1400097e1:	(bad)  
   1400097e2:	nop
   1400097e3:	add    ah,dh
   1400097e5:	fld    QWORD PTR [rbp-0x7f1e0600]
   1400097eb:	add    ch,bh
   1400097ed:	in     al,dx
   1400097ee:	add    DWORD PTR [rax],0xfffffff5
   1400097f1:	loope  0x14000977c
   1400097f3:	add    ah,bh
   1400097f5:	in     al,dx
   1400097f6:	mov    eax,DWORD PTR [rax]
   1400097f8:	std    
   1400097f9:	icebp  
   1400097fa:	lea    eax,[rax]
   1400097fc:	(bad)  
   1400097fd:	in     eax,0x94
   1400097ff:	add    dl,bh
   140009801:	jmp    0x140009795
   140009803:	add    ch,bh
   140009805:	repnz xchg ebx,eax
   140009807:	add    ah,dh
   140009809:	lock fwait
   14000980b:	add    ch,bh
   14000980d:	cmc    
   14000980e:	(bad)  
   14000980f:	add    dh,bh
   140009811:	stc    
   140009812:	pushf  
   140009813:	add    ah,cl
   140009815:	fisubr WORD PTR [rbp-0x5e222e00]
   14000981b:	add    cl,bl
   14000981d:	jrcxz  0x1400097c5
   14000981f:	add    dh,bh
   140009821:	std    
   140009822:	movabs ds:0xcbc78600c2ad8300,al
   14000982b:	add    BYTE PTR [rbp-0x74ff3232],dl
   140009831:	rcr    ah,cl
   140009833:	add    BYTE PTR [rdi-0x72ff2c30],dl
   140009839:	fsub   st,st(5)
   14000983b:	add    BYTE PTR [rbx-0x6dff1824],dl
   140009841:	fcomip st,st(5)
   140009843:	add    BYTE PTR [rbx-0x62ff131f],al
   140009849:	in     al,dx
   14000984a:	test   BYTE PTR [rax],0x81
   14000984d:	repnz inc DWORD PTR [rax]
   140009850:	mov    bl,dh
   140009852:	inc    DWORD PTR [rax]
   140009854:	test   bh,bh
   140009856:	inc    DWORD PTR [rax]
   140009858:	xchg   ebp,eax
   140009859:	(bad)  
   14000985a:	inc    DWORD PTR [rax]
   14000985c:	movabs ds:0xb900fdfaaa00efe5,al
   140009865:	std    
   140009866:	inc    BYTE PTR [rax]
   140009868:	add    BYTE PTR [rax],al
   14000986a:	add    BYTE PTR [rax],al
   14000986c:	(bad)  
   14000986d:	(bad)  
   14000986e:	inc    DWORD PTR [rax]
	...
   1400098b4:	mov    esi,0xc0bbb6
   1400098b9:	add    BYTE PTR [rax],al
   1400098bb:	add    BYTE PTR [rax],al
   1400098bd:	add    BYTE PTR [rbp+0x3a],dl
   1400098c0:	(bad)  
   1400098c1:	add    eax,0x5537
	...
   1400098d2:	add    BYTE PTR [rdi+rsi*4-0x3f400000],ah
   1400098d9:	add    BYTE PTR [rax],al
   1400098db:	cmp    cl,BYTE PTR [rdx+rbx*1]
   1400098de:	(bad)  
   1400098df:	sub    DWORD PTR es:[rax],ebp
   1400098e2:	sbb    al,0x16
   1400098e4:	or     eax,DWORD PTR [rbx]
   1400098e6:	xor    eax,0x0
   1400098eb:	add    BYTE PTR [rax],al
   1400098ed:	add    BYTE PTR [rax],al
   1400098ef:	add    BYTE PTR [rax],al
   1400098f1:	add    BYTE PTR [rbx+0xaa],ch
   1400098f7:	add    BYTE PTR [rax],al
   1400098f9:	push   rsi
   1400098fa:	sbb    DWORD PTR [rdi],esp
   1400098fc:	pushw  0x6d69
   140009900:	ins    DWORD PTR es:[rdi],dx
   140009901:	ins    DWORD PTR es:[rdi],dx
   140009902:	push   0x10252b66
   140009907:	(bad)  
   140009908:	cmp    eax,DWORD PTR [rax]
	...
   140009912:	test   eax,0xb8
   140009917:	add    BYTE PTR [rbx*1-0x7988969c],dh
   14000991e:	xchg   DWORD PTR [rdi+0x71868787],eax
   140009924:	outs   dx,BYTE PTR ds:[rsi]
   140009925:	push   0x811222c
   14000992a:	add    BYTE PTR [rax],al
   14000992c:	add    BYTE PTR [rax],al
   14000992e:	add    BYTE PTR [rax],al
   140009930:	add    bh,al
   140009932:	test   eax,0xb9
   140009937:	xor    DWORD PTR [rax],esp
   140009939:	gs ja  0x1400098c2
   14000993c:	mov    BYTE PTR [rdi+rbx*8-0x73202021],cl
   140009943:	mov    cl,BYTE PTR [rcx+0x25666e71]
   140009949:	sgdt   [rax]
   14000994c:	add    BYTE PTR [rax],al
   14000994e:	add    BYTE PTR [rax],al
   140009950:	add    cl,cl
   140009952:	test   eax,0x390000b5
   140009957:	and    BYTE PTR [rbp+0x77],ah
   14000995a:	xchg   edi,ebx
   14000995c:	(bad)  
   14000995e:	loop   0x140009941
   140009960:	loopne 0x140009942
   140009962:	fstp   st(6)
   140009964:	mov    WORD PTR [rdx+0x24667087],cs
   14000996a:	(bad)  
   14000996b:	or     DWORD PTR [rax],eax
   14000996d:	add    BYTE PTR [rax],al
   14000996f:	add    BYTE PTR [rax],al
   140009971:	leave  
   140009972:	test   eax,0x1d55009e
   140009977:	gs ins BYTE PTR es:[rdi],dx
   140009979:	mov    bh,bl
   14000997b:	loop   0x140009962
   14000997d:	in     al,0x7d
   14000997f:	rex.RXB (bad) 
   140009981:	sub    eax,0xde815834
   140009986:	mov    bh,BYTE PTR [rax+rsi*2+0x66]
   14000998a:	and    eax,DWORD PTR [rdx]
   14000998c:	add    BYTE PTR ds:[rax],al
   14000998f:	add    BYTE PTR [rax],al
   140009991:	clc    
   140009992:	scas   eax,DWORD PTR es:[rdi]
   140009993:	movabs ds:0xe5e2df886c522fed,eax
   14000999c:	in     al,0x58
   14000999e:	push   rbp
   14000999f:	add    BYTE PTR [rax],al
   1400099a1:	add    BYTE PTR [rax],al
   1400099a3:	add    BYTE PTR [rdi],ch
   1400099a5:	pop    rbx
   1400099a6:	test   DWORD PTR [rdi+rax*4+0x3216677],ecx
   1400099ad:	add    BYTE PTR [rax],al
   1400099af:	add    BYTE PTR [rax],al
   1400099b1:	add    BYTE PTR [rax+0x6a4a94a4],dh
   1400099b7:	jnp    0x140009999
   1400099b9:	loop   0x1400099a0
   1400099bb:	in     eax,0x58
	...
   1400099c5:	xor    bl,BYTE PTR [rbp-0x7b]
   1400099c8:	test   DWORD PTR [rbp+0x55437376],eax
   1400099ce:	add    BYTE PTR [rax],al
   1400099d0:	add    BYTE PTR [rax],al
   1400099d2:	mov    bl,0xa9
   1400099d4:	(bad)  
   1400099d5:	rex.B je 0x140009958
   1400099d8:	(bad)  
   1400099da:	out    0x7d,eax
   1400099dc:	push   rsi
	...
   1400099e5:	add    BYTE PTR [rsi+0x3d],bl
   1400099e8:	xor    ch,BYTE PTR [rip+0x402e0406]        # 0x1802e9df4
   1400099ee:	add    BYTE PTR [rax],al
   1400099f0:	add    BYTE PTR [rax],al
   1400099f2:	mov    ebp,0x5993a1ac
   1400099f7:	(bad)  
   1400099f8:	loop   0x1400099e1
   1400099fa:	out    0x4c,eax
	...
   140009a10:	add    BYTE PTR [rax],al
   140009a12:	sti    
   140009a13:	mov    dl,0xa6
   140009a15:	fwait
   140009a16:	(bad)  
   140009a17:	jb     0x1400099fe
   140009a19:	out    0xe7,eax
   140009a1b:	xor    al,0x0
	...
   140009a31:	add    BYTE PTR [rax],al
   140009a33:	ret    0xa1c3
   140009a36:	xchg   esi,eax
   140009a37:	int    0xe6
   140009a39:	in     al,dx
   140009a3a:	in     al,dx
   140009a3b:	rex.R
   140009a3c:	rex.RB xor al,0x2f
   140009a3f:	xor    al,0x2f
   140009a41:	(bad)  
   140009a42:	(bad)  
   140009a43:	(bad)  
   140009a44:	(bad)  
   140009a45:	(bad)  
   140009a46:	(bad)  
   140009a47:	(bad)  
   140009a48:	sub    eax,0x6062d2d
   140009a4d:	(bad)  
   140009a4e:	add    BYTE PTR [rax],al
   140009a50:	add    BYTE PTR [rax],al
   140009a52:	add    BYTE PTR [rsi+rsi*8-0x236c6254],dh
   140009a59:	in     al,dx
   140009a5a:	in     al,dx
   140009a5b:	in     al,dx
   140009a5c:	in     al,dx
   140009a5d:	in     al,dx
   140009a5e:	in     al,dx
   140009a5f:	in     al,dx
   140009a60:	in     al,dx
   140009a61:	in     al,dx
   140009a62:	in     al,dx
   140009a63:	in     al,dx
   140009a64:	in     al,dx
   140009a65:	in     al,dx
   140009a66:	out    0xe5,eax
   140009a68:	loop   0x1400099f6
   140009a6a:	xchg   DWORD PTR [rdi+0x51],esi
   140009a6d:	adc    al,0x32
   140009a6f:	add    BYTE PTR [rax],al
   140009a71:	add    BYTE PTR [rax],al
   140009a73:	rex.X test bl,0xa5
   140009a77:	xchg   edi,eax
   140009a78:	nop
   140009a79:	jrcxz  0x140009a67
   140009a7b:	in     al,dx
   140009a7c:	in     al,dx
   140009a7d:	in     al,dx
   140009a7e:	in     al,dx
   140009a7f:	in     al,dx
   140009a80:	in     al,dx
   140009a81:	in     al,dx
   140009a82:	in     al,dx
   140009a83:	in     al,dx
   140009a84:	in     al,dx
   140009a85:	call   0xcce38272
   140009a8a:	xchg   DWORD PTR [rax+0x51],esi
   140009a8d:	adc    al,0x32
   140009a8f:	add    BYTE PTR [rax],al
   140009a91:	add    BYTE PTR [rax],al
   140009a93:	push   rsp
   140009a94:	out    dx,al
   140009a95:	cld    
   140009a96:	(bad)
   140009a9a:	out    0xec,al
   140009a9c:	in     al,dx
   140009a9d:	in     al,dx
   140009a9e:	in     al,dx
   140009a9f:	in     al,dx
   140009aa0:	in     al,dx
   140009aa1:	in     al,dx
   140009aa2:	in     al,dx
   140009aa3:	in     al,dx
   140009aa4:	out    0xe8,eax
   140009aa6:	out    0xe5,eax
   140009aa8:	loop   0x140009a89
   140009aaa:	jl     0x140009b1c
   140009aac:	push   rcx
   140009aad:	adc    edi,DWORD PTR [rdx]
   140009aaf:	add    BYTE PTR [rax],al
   140009ab1:	add    BYTE PTR [rax],al
   140009ab3:	(bad)  
   140009ab4:	fcomi  st,st(4)
   140009ab6:	cld    
   140009ab7:	mov    cl,0x9d
   140009ab9:	xchg   esi,eax
   140009aba:	(bad)  
   140009abb:	rex.R
   140009abc:	rex.RX xor al,0x34
   140009abf:	xor    esi,DWORD PTR [rbx]
   140009ac1:	xor    esi,DWORD PTR [rbx]
   140009ac3:	xor    DWORD PTR [rbx],esi
   140009ac5:	xor    BYTE PTR [rdi],dl
   140009ac7:	loope  0x140009aab
   140009ac9:	mov    WORD PTR [rbx+rbp*2+0x51],?
   140009acd:	adc    ah,BYTE PTR [rax+0x0]
   140009ad0:	add    BYTE PTR [rax],al
   140009ad2:	add    BYTE PTR [rax],al
   140009ad4:	jne    0x140009aad
   140009ad6:	cld    
   140009ad7:	cli    
   140009ad8:	scas   al,BYTE PTR es:[rdi]
   140009ad9:	popf   
   140009ada:	cdq    
   140009adb:	cmp    BYTE PTR [rax],al
	...
   140009ae5:	add    BYTE PTR [rcx+riz*8],dh
   140009ae8:	loope  0x140009ac8
   140009aea:	xchg   BYTE PTR [rbx+0x28],ch
   140009aed:	(bad)  
   140009aee:	add    BYTE PTR [rax],al
   140009af0:	add    BYTE PTR [rax],al
   140009af2:	add    BYTE PTR [rax],al
   140009af4:	rex.WRX jrcxz 0x140009ae6
   140009af7:	std    
   140009af8:	stc    
   140009af9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140009afa:	popf   
   140009afb:	mov    es,WORD PTR [rax]
	...
   140009b05:	add    BYTE PTR [rcx+riz*8-0x21],cl
   140009b09:	mov    dh,BYTE PTR [rax+0x65]
   140009b0c:	es (bad) 
   140009b0e:	add    BYTE PTR [rax],al
   140009b10:	add    BYTE PTR [rax],al
   140009b12:	add    BYTE PTR [rax],al
   140009b14:	push   rdi
   140009b15:	sub    ebx,0xfffffff0
   140009b18:	std    
   140009b19:	retf   
   140009b1a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140009b1b:	pushf  
   140009b1c:	mov    es,WORD PTR [rax]
   140009b1e:	add    BYTE PTR [rax],al
   140009b20:	add    BYTE PTR [rax],al
   140009b22:	add    BYTE PTR [rax],al
   140009b24:	add    BYTE PTR [rbp+rdi*2-0x1f],dl
   140009b28:	mov    WORD PTR [rdi+rsi*2+0x51],?
   140009b2c:	adc    dl,BYTE PTR [rbp+0x0]
   140009b2f:	add    BYTE PTR [rax],al
   140009b31:	add    BYTE PTR [rax],al
   140009b33:	add    BYTE PTR [rax],al
   140009b35:	push   rax
   140009b36:	fucomip st,st(3)
   140009b38:	repnz std 
   140009b3a:	retf   0x9ca5
   140009b3d:	lea    eax,[rax]
   140009b3f:	add    BYTE PTR [rax],al
   140009b41:	add    BYTE PTR [rax],al
   140009b43:	add    BYTE PTR [rcx],bh
   140009b45:	pop    rdx
   140009b46:	loope  0x140009b27
   140009b48:	mov    bh,BYTE PTR [rax+0x67]
   140009b4b:	sub    dl,BYTE PTR [rdi]
	...
   140009b55:	(bad)
   140009b5a:	std    
   140009b5b:	retf   0x9da5
   140009b5e:	xchg   ebx,eax
   140009b5f:	cmp    al,0x34
   140009b61:	xor    al,0x47
   140009b63:	pop    rdx
   140009b64:	fucom  st(1)
   140009b66:	(bad)  
   140009b68:	xchg   BYTE PTR [rbx+0x51],ch
   140009b6b:	sbb    BYTE PTR [rcx+0x0],ah
	...
   140009b76:	and    r13,0xffffffffffffffe9
   140009b7a:	repz std 
   140009b7c:	retf   
   140009b7d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140009b7e:	popf   
   140009b7f:	xchg   ebp,eax
   140009b80:	iret   
   140009b81:	(bad)  
   140009b83:	in     al,0xe2
   140009b85:	loope  0x140009b13
   140009b87:	jl     0x140009bf9
   140009b89:	push   rbx
   140009b8a:	sbb    edi,DWORD PTR [rdx]
   140009b8c:	rol    BYTE PTR [rax],0x0
	...
   140009b97:	and    rdx,0xffffffffffffffe9
   140009b9b:	lock std 
   140009b9d:	stc    
   140009b9e:	scas   al,BYTE PTR es:[rdi]
   140009b9f:	popf   
   140009ba0:	cwde   
   140009ba1:	int3   
   140009ba2:	fabs   
   140009ba4:	(bad)  
   140009ba6:	xchg   DWORD PTR [rax+0x53],esi
   140009ba9:	sbb    esi,DWORD PTR [rax+rax*1]
   140009bac:	rol    al,0x0
	...
   140009bb7:	add    BYTE PTR [rbx+rsi*2-0x21],cl
   140009bbb:	(bad)  
   140009bbc:	out    dx,eax
   140009bbd:	std    
   140009bbe:	cli    
   140009bbf:	mov    bl,0xa1
   140009bc1:	fwait
   140009bc2:	xchg   edx,eax
   140009bc3:	fadd   DWORD PTR [rdx+0x1f536b7c]
   140009bc9:	rex.RX add BYTE PTR [rax],r8b
   140009bcc:	add    al,al
	...
   140009bd6:	add    BYTE PTR [rax],al
   140009bd8:	add    BYTE PTR [rdx+0x50],ah
   140009bdb:	jbe    0x140009bb9
   140009bdd:	(bad)  
   140009bde:	cld    
   140009bdf:	cld    
   140009be0:	(bad)
   140009be3:	movabs al,ds:0x5f454b5dd1
   140009bec:	add    BYTE PTR [rdx+0x0],bh
	...
   140009bfa:	add    BYTE PTR [rdi+0x4e],dl
   140009bfd:	movsxd edx,ebp
   140009bff:	icebp  
   140009c00:	cld    
   140009c01:	retf   
   140009c02:	mov    cl,0xa4
   140009c04:	lahf   
   140009c05:	xchg   ecx,eax
   140009c06:	(bad)  
   140009c07:	add    BYTE PTR [rax],al
   140009c09:	add    BYTE PTR [rax],al
   140009c0b:	add    cl,al
   140009c0d:	mov    ecx,0x0
	...
   140009c1e:	(bad)  
   140009c20:	shl    ch,1
   140009c22:	mov    dl,0xad
   140009c24:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140009c25:	movabs ds:0xa2bf000000bf9e,al
	...
   140009c42:	add    bh,dh
   140009c44:	mov    bl,0xad
   140009c46:	test   al,0xa7
   140009c48:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009c49:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009c4a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009c4b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140009c4c:	mov    esp,0x0
	...
   140009c65:	add    bh,dh
   140009c67:	enter  0xc4c4,0xc6
   140009c6b:	add    BYTE PTR [rax],al
   140009c6d:	add    BYTE PTR [rax],al
   140009c6f:	add    bh,bh
   140009c71:	(bad)  
   140009c72:	(bad)  
   140009c73:	(bad)  
   140009c74:	(bad)  
   140009c75:	(bad)  
   140009c76:	(bad)  
   140009c77:	push   rax
   140009c79:	cld    
   140009c7a:	ud0    esp,esi
   140009c7d:	(bad)  
   140009c7e:	add    edi,edi
   140009c80:	iret   
   140009c81:	add    BYTE PTR [rax],0x7f
   140009c84:	iret   
   140009c85:	add    BYTE PTR [rax],al
   140009c87:	(bad)  
   140009c88:	mov    es,WORD PTR [rax]
   140009c8a:	add    BYTE PTR [rdi],bl
   140009c8c:	mov    WORD PTR [rax],es
   140009c8e:	add    BYTE PTR [rdi],cl
   140009c90:	mov    BYTE PTR [rax],al
   140009c92:	add    BYTE PTR [rdi],al
   140009c94:	add    BYTE PTR [rcx],0xf0
   140009c97:	(bad)  
   140009c98:	rol    BYTE PTR [rdi],0xf8
   140009c9b:	add    eax,eax
   140009c9d:	(bad)  
   140009c9e:	cld    
   140009c9f:	add    eax,eax
   140009ca1:	ud0    edi,edi
   140009ca4:	ror    BYTE PTR [rdi],0xff
   140009ca7:	jmp    rax
   140009ca9:	add    BYTE PTR [rax],al
   140009cab:	add    esp,eax
   140009cad:	add    BYTE PTR [rax],al
   140009caf:	add    eax,esp
   140009cb1:	add    BYTE PTR [rax],al
   140009cb3:	add    eax,esp
   140009cb5:	add    BYTE PTR [rax],al
   140009cb7:	add    eax,esp
   140009cb9:	add    BYTE PTR [rax],al
   140009cbb:	add    eax,esi
   140009cbd:	paddb  mm0,QWORD PTR [rbx]
   140009cc0:	lock paddb mm0,QWORD PTR [rbx]
   140009cc4:	lock (bad) 
   140009cc6:	clc    
   140009cc7:	add    edi,eax
   140009cc9:	add    esi,eax
   140009ccb:	(bad)  
   140009ccc:	clc    
   140009ccd:	add    BYTE PTR [rax],al
   140009ccf:	(bad)  
   140009cd0:	cld    
   140009cd1:	add    BYTE PTR [rax],al
   140009cd3:	(bad)  
   140009cd4:	inc    BYTE PTR [rax]
   140009cd6:	add    BYTE PTR [rbx],dl
   140009cd8:	inc    DWORD PTR [rax]
   140009cda:	add    BYTE PTR [rbx],bh
   140009cdc:	inc    DWORD PTR [rax-0x1f008500]
   140009ce2:	add    ebx,esi
   140009ce4:	(bad)  
   140009ce5:	cld    
   140009ce6:	add    bh,ah
   140009ce8:	(bad)  
   140009ce9:	jmp    rax
   140009ceb:	(bad)  
   140009cec:	(bad)  
   140009ced:	(bad)  
   140009cee:	cld    
   140009cef:	(bad)  
   140009cf0:	sub    BYTE PTR [rax],al
   140009cf2:	add    BYTE PTR [rax],al
   140009cf4:	sbb    BYTE PTR [rax],al
   140009cf6:	add    BYTE PTR [rax],al
   140009cf8:	xor    BYTE PTR [rax],al
   140009cfa:	add    BYTE PTR [rax],al
   140009cfc:	add    DWORD PTR [rax],eax
   140009cfe:	or     BYTE PTR [rax],al
   140009d00:	add    BYTE PTR [rax],al
   140009d02:	add    BYTE PTR [rax],al
   140009d04:	add    al,BYTE PTR [rax]
	...
   140009d0f:	add    BYTE PTR [rax],al
   140009d11:	add    DWORD PTR [rax],eax
   140009d13:	add    BYTE PTR [rax],al
   140009d15:	add    DWORD PTR [rax],eax
   140009d17:	add    BYTE PTR [rax],al
   140009d19:	add    BYTE PTR [rax],al
   140009d1b:	add    BYTE PTR [rcx-0x58ffc189],ah
   140009d21:	jnp    0x140009d60
   140009d23:	add    BYTE PTR [rbp-0x57ffc585],ch
   140009d29:	jnp    0x140009d68
   140009d2b:	add    BYTE PTR [rdx-0x53ffc183],ch
   140009d31:	jle    0x140009d72
   140009d33:	add    BYTE PTR [rsi-0x57ffb883],ah
   140009d39:	jl     0x140009d7c
   140009d3b:	add    BYTE PTR [rbp-0x38ffbf81],ch
   140009d41:	xchg   ecx,eax
   140009d42:	xor    eax,DWORD PTR [rax]
   140009d44:	int    0x94
   140009d46:	(bad)  
   140009d47:	add    bl,bl
   140009d49:	movabs eax,ds:0xa3dc003aa2db002e
   140009d52:	cmp    al,BYTE PTR [rax]
   140009d54:	(bad)  [rdi-0x511fffc1]
   140009d5a:	cmp    eax,DWORD PTR [rax]
   140009d5c:	scas   al,BYTE PTR es:[rdi]
   140009d5d:	add    DWORD PTR [rcx+0x0],0x4383b0
   140009d64:	mov    dh,0x85
   140009d66:	rex.X add BYTE PTR [rcx-0x4dffbb7d],sil
   140009d6d:	test   DWORD PTR [rax+rax*1-0x4c],eax
   140009d71:	xchg   BYTE PTR [rax+rax*1-0x4a],al
   140009d75:	mov    BYTE PTR [rsi+0x0],al
   140009d78:	mov    ebp,0xb8004189
   140009d7d:	mov    DWORD PTR [rdi+0x0],eax
   140009d80:	mov    dl,0x86
   140009d82:	rex.WX add BYTE PTR [rdx+r9*4-0x7547ffb2],sil
   140009d8a:	rex.WB add BYTE PTR [r10-0x43ffb574],dil
   140009d91:	lea    ecx,[rbx+0x0]
   140009d94:	mov    eax,0xb9004c8b
   140009d99:	lea    ecx,[rbp+0x0]
   140009d9c:	mov    esp,0xaf004c8e
   140009da1:	xchg   DWORD PTR [rcx+0x0],edx
   140009da4:	mov    ch,0x8b
   140009da6:	push   rdx
   140009da7:	add    BYTE PTR [rbp-0x45ffad74],dh
   140009dad:	(bad)  
   140009dae:	push   rcx
   140009daf:	add    BYTE PTR [rdx-0x41ffa071],dh
   140009db5:	xchg   ecx,eax
   140009db6:	push   rdx
   140009db7:	add    BYTE PTR [rdx-0x47ffa96f],bh
   140009dbd:	xchg   edx,eax
   140009dbe:	pop    rsi
   140009dbf:	add    BYTE PTR [rbx-0x4aff9371],dl
   140009dc5:	xchg   edx,eax
   140009dc6:	(bad)  
   140009dc7:	add    BYTE PTR [rdx+rdx*4-0x6951ff9b],dh
   140009dce:	jne    0x140009dd0
   140009dd0:	mov    esp,0xb700719c
   140009dd5:	movabs eax,ds:0x99cd004292c4006e
   140009dde:	rex.WXB add r13b,al
   140009de1:	xchg   edi,eax
   140009de2:	push   rbx
   140009de3:	add    dl,al
   140009de5:	xchg   edi,eax
   140009de6:	push   rsp
   140009de7:	add    bh,al
   140009de9:	popf   
   140009dea:	push   rbx
   140009deb:	add    al,al
   140009ded:	cwde   
   140009dee:	push   rsp
   140009def:	add    bl,al
   140009df1:	popf   
   140009df2:	push   rdi
   140009df3:	add    al,cl
   140009df5:	fwait
   140009df6:	pop    rdx
   140009df7:	add    cl,cl
   140009df9:	popf   
   140009dfa:	pop    rcx
   140009dfb:	add    bh,dl
   140009dfd:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140009dfe:	add    r10b,r11b
   140009e01:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140009e02:	add    spl,bl
   140009e05:	test   al,0x42
   140009e07:	add    dh,bl
   140009e09:	mov    al,0x41
   140009e0b:	add    bh,cl
   140009e0d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009e0e:	push   rax
   140009e0f:	add    bh,al
   140009e11:	movabs al,ds:0xa6ce005aa0cb005a
   140009e1a:	pop    rdi
   140009e1b:	add    dh,dl
   140009e1d:	scas   al,BYTE PTR es:[rdi]
   140009e1e:	push   rdx
   140009e1f:	add    cl,dl
   140009e21:	stos   BYTE PTR es:[rdi],al
   140009e22:	push   rsi
   140009e23:	add    cl,bl
   140009e25:	scas   al,BYTE PTR es:[rdi]
   140009e26:	push   rcx
   140009e27:	add    bl,dl
   140009e29:	stos   DWORD PTR es:[rdi],eax
   140009e2a:	pop    rbp
   140009e2b:	add    bl,ah
   140009e2d:	mov    bh,0x45
   140009e2f:	add    al,ch
   140009e31:	mov    cl,0x41
   140009e33:	add    al,ch
   140009e35:	mov    eax,0xbeed0043
   140009e3a:	add    dl,spl
   140009e3d:	mov    esi,0xbeee004f
   140009e42:	rex.WRB add r11b,r8b
   140009e45:	popf   
   140009e46:	push   0x6c9dc100
   140009e4b:	add    cl,al
   140009e4d:	lahf   
   140009e4e:	jno    0x140009e50
   140009e50:	(bad)  
   140009e51:	movabs al,ds:0xadd0006aa4c9006e
   140009e5a:	movsxd eax,DWORD PTR [rax]
   140009e5c:	shr    BYTE PTR [rbp-0x5c3cff9c],cl
   140009e62:	ja     0x140009e64
   140009e64:	leave  
   140009e65:	test   eax,0xacd1007d
   140009e6a:	jbe    0x140009e6c
   140009e6c:	(bad)  
   140009e6d:	mov    al,0x79
   140009e6f:	add    dh,bl
   140009e71:	mov    ebp,0xbce00079
   140009e76:	ins    BYTE PTR es:[rdi],dx
   140009e77:	add    ch,ch
   140009e79:	(bad)  
   140009e7a:	rex.WR add bpl,r14b
   140009e7d:	leave  
   140009e7e:	rex.WR add bl,r13b
   140009e81:	leave  
   140009e82:	push   rdi
   140009e83:	add    bh,ch
   140009e85:	int    0x57
   140009e87:	add    bh,ch
   140009e89:	(bad)  
   140009e8a:	pop    rcx
   140009e8b:	add    ch,ch
   140009e8d:	(bad)  
   140009e8e:	pop    rdx
   140009e8f:	add    cl,dh
   140009e91:	(bad)
   140009e94:	icebp  
   140009e95:	enter  0x59,0xf4
   140009e99:	retf   
   140009e9a:	pop    rcx
   140009e9b:	add    dl,dh
   140009e9d:	retf   0x5c
   140009ea0:	hlt    
   140009ea1:	iret   
   140009ea2:	pop    rsi
   140009ea3:	add    bh,dh
   140009ea5:	rcl    DWORD PTR [rax+rax*1-0x8],1
   140009ea9:	rcl    BYTE PTR [rdi+0x0],cl
   140009eac:	cmc    
   140009ead:	(bad)  
   140009eae:	pop    rsp
   140009eaf:	add    bh,bl
   140009eb1:	shl    BYTE PTR [rax+rax*1-0x1f],0xc9
   140009eb6:	movsxd eax,DWORD PTR [rax]
   140009eb8:	loope  0x140009e7c
   140009eba:	outs   dx,BYTE PTR ds:[rsi]
   140009ebb:	add    bl,bh
   140009ebd:	(bad)  [rax+0x0]
   140009ec0:	cld    
   140009ec1:	fsub   QWORD PTR [rbp+0x0]
   140009ec4:	not    dh
   140009ec6:	outs   dx,DWORD PTR ds:[rsi]
   140009ec7:	add    al,dh
   140009ec9:	fldcw  WORD PTR [rax+rax*1-0x7]
   140009ecd:	fisubr DWORD PTR [rcx+0x0]
   140009ed0:	stc    
   140009ed1:	(bad)  [rdx+0x0]
   140009ed4:	cld    
   140009ed5:	(bad)  [rcx+0x0]
   140009ed8:	cli    
   140009ed9:	fisubr DWORD PTR [rax+rax*1-0x1c]
   140009edd:	ret    
   140009ede:	jb     0x140009ee0
   140009ee0:	jrcxz  0x140009ea9
   140009ee2:	ja     0x140009ee4
   140009ee4:	loop   0x140009eaa
   140009ee6:	jle    0x140009ee8
   140009ee8:	out    dx,al
   140009ee9:	sar    DWORD PTR [rax+0x0],1
   140009eec:	cmc    
   140009eed:	fbstp  TBYTE PTR [rcx+0x0]
   140009ef0:	cmc    
   140009ef1:	fbstp  TBYTE PTR [rax+rax*1-0x7]
   140009ef5:	fnsave [rax+0x0]
   140009ef8:	cld    
   140009ef9:	fidiv  WORD PTR [rcx+0x0]
   140009efc:	stc    
   140009efd:	fnsave [rbp+0x0]
   140009f00:	lock (bad) 
   140009f02:	jnp    0x140009f04
   140009f04:	neg    ebx
   140009f06:	jnp    0x140009f08
   140009f08:	neg    dh
   140009f0a:	jnp    0x140009f0c
   140009f0c:	repz fdivr DWORD PTR [rbp+0x0]
   140009f10:	cmc    
   140009f11:	fidivr DWORD PTR [rbp+0x0]
   140009f14:	sti    
   140009f15:	loope  0x140009f82
   140009f17:	add    dl,bh
   140009f19:	loope  0x140009f89
   140009f1b:	add    dh,bh
   140009f1d:	loope  0x140009f91
   140009f1f:	add    ah,dh
   140009f21:	jrcxz  0x140009f9d
   140009f23:	add    bh,bh
   140009f25:	in     eax,0x78
   140009f27:	add    bl,bh
   140009f29:	out    0x7f,eax
   140009f2b:	add    bh,bh
   140009f2d:	out    0x7e,al
   140009f2f:	add    bh,bh
   140009f31:	call   0xcc659fb3
   140009f36:	xchg   DWORD PTR [rax],eax
   140009f38:	lods   al,BYTE PTR fs:[rsi]
   140009f3a:	mov    ch,0x0
   140009f3c:	(bad)  
   140009f3d:	lahf   
   140009f3e:	sti    
   140009f3f:	add    BYTE PTR [rbx+riz*4],dl
   140009f42:	jmp    0x140009f44
   140009f44:	add    eax,0x100fca2
   140009f49:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140009f4a:	inc    BYTE PTR [rax]
   140009f4c:	add    eax,0x100fca5
   140009f51:	test   eax,0xab1b00fd
   140009f56:	cmc    
   140009f57:	add    BYTE PTR [rip+0x100f9b0],al        # 0x14101990d
   140009f5d:	mov    bl,0xfe
   140009f5f:	add    BYTE PTR [rax+rsi*4],al
   140009f62:	std    
   140009f63:	add    BYTE PTR [rax],al
   140009f65:	mov    ch,0xff
   140009f67:	add    BYTE PTR [rax],al
   140009f69:	mov    edx,0xbf1800fe
   140009f6e:	cld    
   140009f6f:	add    BYTE PTR [rip+0x2a00eab6],ah        # 0x16a018a2b
   140009f75:	mov    ecx,0xbf6200fd
   140009f7a:	cli    
   140009f7b:	add    BYTE PTR [rax*8-0x3cffff09],al
   140009f82:	inc    BYTE PTR [rax]
   140009f84:	add    ecx,edi
   140009f86:	stc    
   140009f87:	add    BYTE PTR [rax],al
   140009f89:	(bad)  
   140009f8a:	inc    DWORD PTR [rax]
   140009f8c:	sbb    edi,ecx
   140009f8e:	inc    DWORD PTR [rax]
   140009f90:	add    cl,dl
   140009f92:	inc    DWORD PTR [rax]
   140009f94:	add    ch,dl
   140009f96:	inc    DWORD PTR [rax]
   140009f98:	add    al,bl
   140009f9a:	inc    DWORD PTR [rax]
   140009f9c:	add    bh,bl
   140009f9e:	inc    DWORD PTR [rax]
   140009fa0:	(bad)  
   140009fa1:	fdiv   st(0),st
   140009fa3:	add    BYTE PTR [rip+0x1a00f5d5],dl        # 0x15a01957e
   140009fa9:	(bad)  
   140009faa:	inc    DWORD PTR [rax]
   140009fac:	sbb    bl,dl
   140009fae:	inc    DWORD PTR [rax]
   140009fb0:	and    ecx,eax
   140009fb2:	inc    DWORD PTR [rax]
   140009fb4:	xor    esp,eax
   140009fb6:	std    
   140009fb7:	add    BYTE PTR [rax],bh
   140009fb9:	sar    ch,0x0
   140009fbc:	or     esp,esp
   140009fbe:	inc    BYTE PTR [rax]
   140009fc0:	or     eax,0x1f00fee7
   140009fc5:	jrcxz  0x140009fbb
   140009fc7:	add    BYTE PTR [rcx],bl
   140009fc9:	loopne 0x140009fca
   140009fcb:	add    BYTE PTR [rsi],bl
   140009fcd:	loope  0x140009fce
   140009fcf:	add    BYTE PTR [rax],ch
   140009fd1:	jmp    0x12630a0d5
   140009fd6:	stc    
   140009fd7:	add    BYTE PTR [rax],bh
   140009fd9:	cmc    
   140009fda:	inc    DWORD PTR [rax]
   140009fdc:	cmp    al,0xf6
   140009fde:	inc    DWORD PTR [rax]
   140009fe0:	je     0x140009fab
   140009fe2:	retf   
   140009fe3:	add    BYTE PTR [rdx-0x2b],bh
   140009fe6:	fild   DWORD PTR [rax]
   140009fe8:	sar    r12d,0x0
   140009fec:	push   rbp
   140009fed:	(bad)  
   140009fef:	add    BYTE PTR [rax-0x32],ah
   140009ff2:	sti    
   140009ff3:	add    BYTE PTR [rdi-0x34],ah
   140009ff6:	cli    
   140009ff7:	add    BYTE PTR [rbp-0x32],ch
   140009ffa:	stc    
   140009ffb:	add    BYTE PTR [rsi-0x32],ch
   140009ffe:	cld    
   140009fff:	add    BYTE PTR [rcx-0x3b],bh
   14000a002:	clc    
   14000a003:	add    BYTE PTR [rax-0x2a],bh
   14000a006:	cld    
   14000a007:	add    BYTE PTR [rdi-0x25],dh
   14000a00a:	std    
   14000a00b:	add    BYTE PTR [rsi-0x20],bl
   14000a00e:	in     eax,dx
   14000a00f:	add    BYTE PTR [rcx-0x20],cl
   14000a012:	inc    DWORD PTR [rax]
   14000a014:	push   rdi
   14000a015:	loop   0x14000a016
   14000a017:	add    BYTE PTR [rax-0x12],dl
   14000a01a:	sti    
   14000a01b:	add    BYTE PTR [rbx-0x16],bl
   14000a01e:	inc    BYTE PTR [rax]
   14000a020:	rex.XB stc 
   14000a022:	inc    DWORD PTR [rax]
   14000a024:	rex.WR cli 
   14000a026:	inc    DWORD PTR [rax]
   14000a028:	push   rdi
   14000a029:	cmc    
   14000a02a:	std    
   14000a02b:	add    BYTE PTR [rdi-0x1a],ah
   14000a02e:	inc    DWORD PTR [rax]
   14000a030:	jb     0x14000a021
   14000a032:	inc    DWORD PTR [rax]
   14000a034:	mov    DWORD PTR [rdx-0x4561ff80],edx
   14000a03a:	lahf   
   14000a03b:	add    BYTE PTR [rbp-0x50ff5241],al
   14000a041:	mov    ebx,0xa9c400b5
   14000a046:	test   DWORD PTR [rax],eax
   14000a048:	retf   
   14000a049:	mov    bh,0x80
   14000a04b:	add    bh,cl
   14000a04d:	mov    bl,0x8c
   14000a04f:	add    ah,dl
   14000a051:	mov    cl,0x80
   14000a053:	add    dh,dl
   14000a055:	mov    ah,0x84
   14000a057:	add    BYTE PTR [rbp-0x55ff4834],dl
   14000a05d:	(bad)  
   14000a05e:	movabs ds:0x9edcce00bdd0a600,al
   14000a067:	add    ah,ah
   14000a069:	rol    DWORD PTR [rax+rax*1+0x8fd4e2],cl
   14000a070:	neg    ebp
   14000a072:	(bad)  
   14000a073:	add    bh,dh
   14000a075:	loope  0x140009ff9
   14000a077:	add    bh,dh
   14000a079:	loop   0x14000a000
   14000a07b:	add    dl,bh
   14000a07d:	loop   0x14000a000
   14000a07f:	add    cl,bh
   14000a081:	out    0x84,al
   14000a083:	add    cl,bh
   14000a085:	jmp    0x12bffa10d
   14000a08a:	add    DWORD PTR [rax],0x86ebfb
   14000a090:	std    
   14000a091:	jmp    0x12cfaa11a
   14000a096:	xchg   DWORD PTR [rax],eax
   14000a098:	(bad)  
   14000a099:	in     eax,dx
   14000a09a:	test   DWORD PTR [rax],eax
   14000a09c:	hlt    
   14000a09d:	jmp    0x12cffa131
   14000a0a2:	mov    al,BYTE PTR [rax]
   14000a0a4:	sti    
   14000a0a5:	icebp  
   14000a0a6:	pop    QWORD PTR [rax]
   14000a0a8:	sti    
   14000a0a9:	out    dx,al
   14000a0aa:	nop
   14000a0ab:	add    ah,bh
   14000a0ad:	out    dx,al
   14000a0ae:	nop
   14000a0af:	add    cl,dh
   14000a0b1:	out    dx,eax
   14000a0b2:	fwait
   14000a0b3:	add    dh,bh
   14000a0b5:	out    dx,al
   14000a0b6:	popf   
   14000a0b7:	add    ch,bh
   14000a0b9:	lock nop
   14000a0bb:	add    bl,bh
   14000a0bd:	icebp  
   14000a0be:	xchg   edi,eax
   14000a0bf:	add    bh,bh
   14000a0c1:	repnz xchg ebp,eax
   14000a0c3:	add    ch,dh
   14000a0c5:	repnz sahf 
   14000a0c7:	add    ch,bh
   14000a0c9:	repnz cdq 
   14000a0cb:	add    dh,bh
   14000a0cd:	neg    BYTE PTR [rsi-0x61070200]
   14000a0d3:	add    dh,dl
   14000a0d5:	out    0xb7,al
   14000a0d7:	add    dh,bl
   14000a0d9:	in     eax,0xb3
   14000a0db:	add    dh,bh
   14000a0dd:	repnz movabs ds:0xa1fdfe00a0fafe00,al
   14000a0e7:	add    bl,bh
   14000a0e9:	imul   BYTE PTR [rsi-0x51090200]
   14000a0ef:	add    bl,bh
   14000a0f1:	clc    
   14000a0f2:	mov    dl,0x0
   14000a0f4:	test   edx,ebp
   14000a0f6:	icebp  
   14000a0f7:	add    BYTE PTR [rdi-0x60ff0a0b],dl
   14000a0fd:	cmc    
   14000a0fe:	icebp  
   14000a0ff:	add    BYTE PTR [rbx-0x44ff1e0b],bh
   14000a105:	mul    bh
   14000a107:	add    BYTE PTR [rcx-0x2bff0d0a],ah
   14000a10d:	hlt    
   14000a10e:	(bad)  
   14000a10f:	add    BYTE PTR [rax],al
   14000a111:	add    BYTE PTR [rax],al
   14000a113:	add    bh,bh
   14000a115:	(bad)  
   14000a116:	inc    DWORD PTR [rax]
	...
   14000a130:	add    BYTE PTR [rax],al
   14000a132:	mov    eax,0xbbb4
   14000a137:	add    BYTE PTR [rax],al
   14000a139:	add    BYTE PTR [rbp+0x29],cl
   14000a13c:	add    cl,BYTE PTR [rax]
   14000a13e:	sub    ecx,ebx
	...
   14000a148:	add    BYTE PTR [rbp-0x43ffff58],dh
   14000a14e:	mov    esp,0x433414cd
   14000a153:	rex.RB
   14000a154:	rex.W
   14000a155:	cmp    QWORD PTR [rax],rsi
   14000a158:	(bad)  
   14000a159:	sub    eax,DWORD PTR [rax]
   14000a15b:	add    BYTE PTR [rax],al
   14000a15d:	add    BYTE PTR [rax],al
   14000a15f:	add    BYTE PTR [rax],al
   14000a161:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000a162:	mov    edx,0x28000000
   14000a167:	cmp    eax,0x806e6558
   14000a16c:	sub    BYTE PTR [rsi+0x69],0x63
   14000a170:	rex.W or al,BYTE PTR [rcx]
   14000a173:	add    BYTE PTR [rax],al
   14000a175:	add    BYTE PTR [rax],al
   14000a177:	add    BYTE PTR [rax],al
   14000a179:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000a17a:	add    BYTE PTR [rax],al
   14000a17c:	add    BYTE PTR [rdi],bl
   14000a17e:	cvtdq2ps xmm6,XMMWORD PTR [rbp-0x7c]
   14000a182:	(bad)  
   14000a184:	xlat   BYTE PTR ds:[rbx]
   14000a185:	jl     0x14000a200
   14000a187:	sub    DWORD PTR [rcx+0x59],0x60c
   14000a18e:	add    BYTE PTR [rax],al
   14000a190:	add    BYTE PTR [rbp+0x3c240098],ah
   14000a196:	pop    rbp
   14000a197:	jne    0x14000a177
   14000a199:	in     al,0x66
   14000a19b:	xor    al,0x11
   14000a19d:	adc    al,0x36
   14000a19f:	push   0x10646e79
   14000a1a4:	(bad)  
   14000a1a5:	add    BYTE PTR [rax],al
   14000a1a7:	add    BYTE PTR [rax],al
   14000a1a9:	lods   eax,DWORD PTR ds:[rsi]
   14000a1aa:	xchg   edi,eax
   14000a1ab:	sub    eax,0xdf755b42
   14000a1b0:	in     al,0x50
   14000a1b2:	rex.WRX add BYTE PTR [rax],r8b
   14000a1b5:	add    BYTE PTR [rax],al
   14000a1b7:	and    al,0x44
   14000a1b9:	imul   edi,DWORD PTR [rcx+0x6e],0x43
   14000a1bd:	add    BYTE PTR es:[rax],al
   14000a1c0:	add    BYTE PTR [rsi+0x6c498795],ch
   14000a1c6:	(bad)  
   14000a1c8:	jb     0x14000a218
   14000a1ca:	add    BYTE PTR [rax],al
   14000a1cc:	add    BYTE PTR [rax],al
   14000a1ce:	add    BYTE PTR [rax],al
   14000a1d0:	and    al,0x8
   14000a1d2:	or     DWORD PTR [rsi],eax
   14000a1d4:	and    ch,BYTE PTR [rsi]
   14000a1d6:	add    BYTE PTR [rax],al
   14000a1d8:	add    dh,al
   14000a1da:	movabs ds:0x36e9e382678a,eax
	...
   14000a1ef:	add    BYTE PTR [rax],al
   14000a1f1:	add    BYTE PTR [rbx-0x111e3670],ch
   14000a1f7:	jmp    0x14000a21b
	...
   14000a208:	add    BYTE PTR [rax],al
   14000a20a:	mov    ebp,0xedd38e9b
   14000a20f:	repz (bad) 
   14000a211:	(bad)  
   14000a212:	sbb    DWORD PTR [rcx],ebx
   14000a214:	(bad)  
   14000a215:	adc    al,0x14
   14000a217:	adc    al,0x14
   14000a219:	adc    al,0x11
   14000a21b:	adc    DWORD PTR [rax],ecx
   14000a21d:	(bad)  
   14000a21e:	push   rdx
   14000a21f:	add    BYTE PTR [rax],al
   14000a221:	add    al,cl
   14000a223:	scas   eax,DWORD PTR es:[rdi]
   14000a224:	(bad)  
   14000a225:	xchg   esi,eax
   14000a226:	out    0xf3,al
   14000a228:	repz repz repz repz repz repz repz repz jmp 0x19f82811e
   14000a235:	(bad)  
   14000a236:	sbb    al,BYTE PTR [rax]
   14000a238:	add    BYTE PTR [rax],al
   14000a23a:	rex.WRXB imul QWORD PTR [r10-0xc144d70]
   14000a241:	repz jmp 0x12eef963a
   14000a247:	out    dx,al
   14000a248:	jmp    0x19f828230
   14000a24d:	(bad)  
   14000a24e:	sbb    eax,DWORD PTR [rax]
   14000a250:	add    BYTE PTR [rax],al
   14000a252:	push   rsp
   14000a253:	(bad)
   14000a258:	and    ebx,DWORD PTR [rdi]
   14000a25a:	(bad)  
   14000a25b:	(bad)  
   14000a25c:	(bad)  
   14000a25d:	sbb    DWORD PTR [rcx],ebx
   14000a25f:	(bad)  
   14000a260:	(bad)  
   14000a261:	fcmovu st,st(6)
   14000a263:	sbb    DWORD PTR [rsi+0xb],0x4e
   14000a26a:	add    BYTE PTR [rdx-0x3],dh
   14000a26d:	ret    
   14000a26e:	movabs al,ds:0xc78c
   14000a277:	add    BYTE PTR [rdi],bl
   14000a279:	(bad)  
   14000a27a:	fisubr WORD PTR [rsi+0x4a]
   14000a27d:	sbb    BYTE PTR [rax],al
   14000a27f:	add    BYTE PTR [rax],al
   14000a281:	add    BYTE PTR [rax],al
   14000a283:	(bad)  
   14000a284:	in     eax,dx
   14000a285:	sti    
   14000a286:	ret    0x8c9e
   14000a289:	add    BYTE PTR [rax],al
   14000a28b:	add    BYTE PTR [rax],al
   14000a28d:	add    BYTE PTR [rax],al
   14000a28f:	add    BYTE PTR [rax-0x26],al
   14000a292:	and    DWORD PTR [rbp+0x46],0x14
   14000a299:	add    BYTE PTR [rax],al
   14000a29b:	(bad)  
   14000a29c:	push   0xffffffff9bb1fcf6
   14000a2a1:	mov    edx,ecx
   14000a2a3:	add    BYTE PTR [rax],al
   14000a2a5:	add    BYTE PTR [rax],al
   14000a2a7:	(bad)  
   14000a2a8:	je     0x14000a230
   14000a2aa:	outs   dx,BYTE PTR ds:[rsi]
   14000a2ab:	rex.WX xor BYTE PTR [rbx+0x0],dl
   14000a2af:	add    BYTE PTR [rax],al
   14000a2b1:	add    BYTE PTR [rax],al
   14000a2b3:	add    BYTE PTR [rdi],bh
   14000a2b5:	jle    0x14000a2ad
   14000a2b7:	clc    
   14000a2b8:	mov    cl,0x9b
   14000a2ba:	mov    WORD PTR [rdx],gs
   14000a2bc:	sbb    dh,BYTE PTR [rdx]
   14000a2be:	push   rax
   14000a2bf:	jl     0x14000a245
   14000a2c1:	jns    0x14000a324
   14000a2c3:	cmp    ah,BYTE PTR [rbx]
	...
   14000a2cd:	xor    bh,BYTE PTR [rbx-0xc]
   14000a2d0:	cld    
   14000a2d1:	mov    cl,0x9e
   14000a2d3:	xchg   edx,eax
   14000a2d4:	rcl    esp,1
   14000a2d6:	fcmovu st,st(2)
   14000a2d8:	test   BYTE PTR [rcx+0x3a],ah
   14000a2db:	(bad)  
   14000a2dc:	mov    esp,0x0
   14000a2e1:	add    BYTE PTR [rax],al
   14000a2e3:	add    BYTE PTR [rax],al
   14000a2e5:	add    BYTE PTR [rdi],bh
   14000a2e7:	push   rdi
   14000a2e8:	out    0xfa,eax
   14000a2ea:	mov    cl,0xa1
   14000a2ec:	nop
   14000a2ed:	rcl    ch,cl
   14000a2ef:	jp     0x14000a34f
   14000a2f1:	xor    DWORD PTR [rdx],esi
   14000a2f3:	add    BYTE PTR [rax],al
   14000a2f5:	mov    esp,0x0
   14000a2fa:	add    BYTE PTR [rax],al
   14000a2fc:	add    BYTE PTR [rax],al
   14000a2fe:	add    dh,cl
   14000a300:	rex push rsi
   14000a302:	out    dx,eax
   14000a303:	shr    BYTE PTR [rdx+0x1b2f8894],0x53
   14000a30a:	add    BYTE PTR [rax],al
   14000a30c:	add    BYTE PTR [rsi+0x0],dh
	...
   14000a31a:	push   rbp
   14000a31b:	int3   
   14000a31c:	mov    bl,0xa2
   14000a31e:	cdq    
   14000a31f:	pop    QWORD PTR [rax]
   14000a321:	add    BYTE PTR [rax],al
   14000a323:	add    BYTE PTR [rax],al
   14000a325:	xchg   edi,eax
	...
   14000a336:	shr    DWORD PTR [rbp-0x49495863],0xa6
   14000a33d:	mov    ecx,0x0
	...
   14000a34e:	add    BYTE PTR [rax],al
   14000a350:	add    ch,al
   14000a352:	mov    esi,0xbf
   14000a357:	add    bh,bh
   14000a359:	(bad)  
   14000a35a:	inc    DWORD PTR [rax]
   14000a35c:	mov    eax,0x9800ff
   14000a362:	(bad)  
   14000a363:	add    BYTE PTR [rax+rax*1+0xb8001f],bl
   14000a36a:	lldt   WORD PTR [rax-0x7ffff900]
   14000a371:	(bad)  
   14000a372:	add    eax,DWORD PTR [rax]
   14000a374:	cmp    BYTE PTR [rdi],0x3
   14000a377:	add    BYTE PTR [rax-0x3fff0081],al
   14000a37d:	jg     0x14000a37e
   14000a37f:	add    al,al
   14000a381:	add    BYTE PTR [rcx],al
   14000a383:	add    al,al
   14000a385:	add    BYTE PTR [rcx],al
   14000a387:	add    al,al
   14000a389:	add    BYTE PTR [rcx],al
   14000a38b:	add    al,al
   14000a38d:	add    BYTE PTR [rcx],al
   14000a38f:	add    al,ah
   14000a391:	jg     0x14000a396
   14000a393:	add    al,ah
   14000a395:	jg     0x14000a39a
   14000a397:	add    al,ah
   14000a399:	(bad)  
   14000a39a:	add    eax,DWORD PTR [rax]
   14000a39c:	lock add BYTE PTR [rdi],al
   14000a39f:	add    al,bh
   14000a3a1:	add    BYTE PTR [rdi],al
   14000a3a3:	add    ah,bh
   14000a3a5:	add    BYTE PTR [rbx],bl
   14000a3a7:	add    dh,bh
   14000a3a9:	add    BYTE PTR [rbx],bh
   14000a3ab:	add    bh,bh
   14000a3ad:	sar    bl,0x0
   14000a3b0:	(bad)  
   14000a3b1:	cld    
   14000a3b2:	add    eax,DWORD PTR [rax]
   14000a3b4:	(bad)  
   14000a3b5:	dec    DWORD PTR [rdi+0x2800]
   14000a3bb:	add    BYTE PTR [rax],dl
   14000a3bd:	add    BYTE PTR [rax],al
   14000a3bf:	add    BYTE PTR [rax],ah
   14000a3c1:	add    BYTE PTR [rax],al
   14000a3c3:	add    BYTE PTR [rcx],al
   14000a3c5:	add    BYTE PTR [rax],cl
   14000a3c7:	add    BYTE PTR [rax],al
   14000a3c9:	add    BYTE PTR [rax],al
   14000a3cb:	add    BYTE PTR [rax],al
   14000a3cd:	add    DWORD PTR [rax],eax
	...
   14000a3d7:	add    BYTE PTR [rax],al
   14000a3d9:	add    DWORD PTR [rax],eax
   14000a3db:	add    BYTE PTR [rax],al
   14000a3dd:	add    DWORD PTR [rax],eax
   14000a3df:	add    BYTE PTR [rax],al
   14000a3e1:	add    BYTE PTR [rax],al
   14000a3e3:	add    BYTE PTR [rax-0x46ffcb7d],bh
   14000a3e9:	test   DWORD PTR [rip+0x3787bc00],esi        # 0x177885fef
   14000a3ef:	add    BYTE PTR [rbp-0x3fffc778],bh
   14000a3f5:	mov    bh,BYTE PTR [rbx]
   14000a3f7:	add    ch,al
   14000a3f9:	mov    ?,WORD PTR [rbx]
   14000a3fb:	add    al,al
   14000a3fd:	mov    edi,DWORD PTR [rax+rax*1]
   14000a400:	mov    ebx,0xbd00408a
   14000a405:	mov    eax,DWORD PTR [rax+0x0]
   14000a408:	mov    esi,0xbc00428d
   14000a40d:	mov    eax,DWORD PTR [rax+rax*1-0x42]
   14000a411:	pop    QWORD PTR [rdi+0x0]
   14000a414:	mov    edi,0xaf004a91
   14000a419:	cdq    
   14000a41a:	(bad)  
   14000a41b:	add    BYTE PTR [rbp-0x3dff8853],dh
   14000a421:	lea    eax,[rcx+0x0]
   14000a424:	(bad)  
   14000a425:	xchg   ecx,eax
   14000a426:	add    r12b,al
   14000a429:	xchg   esp,eax
   14000a42a:	add    r9b,r9b
   14000a42d:	xchg   ebp,eax
   14000a42e:	add    r14b,r9b
   14000a431:	pushf  
   14000a432:	add    spl,cl
   14000a435:	cwde   
   14000a436:	rex.RXB add r8b,r8b
   14000a439:	xchg   ecx,eax
   14000a43a:	rex.WX add spl,al
   14000a43d:	xchg   edx,eax
   14000a43e:	rex.WX add spl,al
   14000a441:	xchg   esi,eax
   14000a442:	rex.WXB add r12b,al
   14000a445:	xchg   esi,eax
   14000a446:	rex.WR add dil,r9b
   14000a449:	popf   
   14000a44a:	rex.WX add dl,cl
   14000a44d:	pushf  
   14000a44e:	rex.WRX add bpl,r9b
   14000a451:	sahf   
   14000a452:	rex.WRX add spl,r8b
   14000a455:	cdq    
   14000a456:	push   rbp
   14000a457:	add    cl,cl
   14000a459:	(bad)  
   14000a45a:	push   rcx
   14000a45b:	add    al,cl
   14000a45d:	fwait
   14000a45e:	push   rsi
   14000a45f:	add    ah,cl
   14000a461:	pushf  
   14000a462:	push   rbp
   14000a463:	add    ch,al
   14000a465:	fwait
   14000a466:	pop    rcx
   14000a467:	add    dh,al
   14000a469:	popf   
   14000a46a:	pop    rsi
   14000a46b:	add    dl,cl
   14000a46d:	pushf  
   14000a46e:	pop    rcx
   14000a46f:	add    ah,cl
   14000a471:	lahf   
   14000a472:	pop    rsp
   14000a473:	add    ch,dl
   14000a475:	movabs ds:0xa2d5004aa1d10040,eax
   14000a47e:	rex.WB add r15b,al
   14000a481:	movabs al,ds:0xa0d00059a1ce005e
   14000a48a:	push   rcx
   14000a48b:	add    ch,dl
   14000a48d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000a48e:	push   rax
   14000a48f:	add    bl,bl
   14000a491:	mov    al,0x5f
   14000a493:	add    dl,ah
   14000a495:	mov    dl,0x53
   14000a497:	add    dl,ah
   14000a499:	mov    dh,0x57
   14000a49b:	add    dl,ah
   14000a49d:	mov    ah,0x59
   14000a49f:	add    dh,ah
   14000a4a1:	mov    esi,0xa1c7005f
   14000a4a6:	(bad)  
   14000a4a7:	add    cl,cl
   14000a4a9:	movabs eax,ds:0xa7cc006ea7c90064
   14000a4b2:	outs   dx,BYTE PTR ds:[rsi]
   14000a4b3:	add    bl,dl
   14000a4b5:	test   al,0x63
   14000a4b7:	add    ch,dl
   14000a4b9:	test   eax,0xacd80064
   14000a4be:	data16 add ch,cl
   14000a4c1:	test   eax,0xaccf0076
   14000a4c6:	jbe    0x14000a4c8
   14000a4c8:	shr    BYTE PTR [rbx-0x532eff90],cl
   14000a4ce:	jne    0x14000a4d0
   14000a4d0:	shr    BYTE PTR [rsi-0x502eff88],1
   14000a4d6:	jl     0x14000a4d8
   14000a4d8:	out    0xba,al
   14000a4da:	(bad)  
   14000a4db:	add    cl,ch
   14000a4dd:	mov    esi,0xbfe90063
   14000a4e2:	fs add cl,ah
   14000a4e5:	mov    ah,0x6b
   14000a4e7:	add    bh,ah
   14000a4e9:	shr    BYTE PTR [rsi+0x0],0xeb
   14000a4ed:	ret    0x68
   14000a4f0:	in     al,dx
   14000a4f1:	ret    0x69
   14000a4f4:	out    dx,eax
   14000a4f5:	(bad)  
   14000a4f6:	push   0x0
   14000a4f8:	in     al,dx
   14000a4f9:	ret    
   14000a4fa:	ins    BYTE PTR es:[rdi],dx
   14000a4fb:	add    dl,dh
   14000a4fd:	retf   
   14000a4fe:	ins    DWORD PTR es:[rdi],dx
   14000a4ff:	add    al,ch
   14000a501:	shl    BYTE PTR [rbx+0x0],0xed
   14000a505:	ret    0x73
   14000a508:	(bad)  
   14000a509:	ret    0x75
   14000a50c:	out    dx,eax
   14000a50d:	(bad)
   14000a510:	out    dx,al
   14000a511:	ret    0x7c
   14000a514:	repnz retf 0x70
   14000a518:	cmc    
   14000a519:	iret   
   14000a51a:	jae    0x14000a51c
   14000a51c:	hlt    
   14000a51d:	int    0x76
   14000a51f:	add    ch,dh
   14000a521:	retf   
   14000a522:	jl     0x14000a524
   14000a524:	hlt    
   14000a525:	shl    BYTE PTR [rbp+0x0],1
   14000a528:	hlt    
   14000a529:	sar    BYTE PTR [rbp+0x0],cl
   14000a52c:	jae    0x14000a4d1
   14000a52e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000a52f:	add    BYTE PTR [rbp-0x5b],ah
   14000a532:	mov    cl,0x0
   14000a534:	(bad)  
   14000a535:	int    0xbf
   14000a537:	add    BYTE PTR [rsi],bh
   14000a539:	pop    rsp
   14000a53b:	add    BYTE PTR [rdi],bh
   14000a53d:	cwde   
   14000a53e:	fld    QWORD PTR [rax]
   14000a540:	add    BYTE PTR [rax-0x62ebff1c],dl
   14000a546:	out    0x0,eax
   14000a548:	and    ebx,DWORD PTR [rdx-0x64ceff1b]
   14000a54e:	loope  0x14000a550
   14000a550:	adc    ah,BYTE PTR [rdi-0x5befff17]
   14000a556:	out    dx,eax
   14000a557:	add    BYTE PTR [rip+0xb00f1bb],al        # 0x14b019718
   14000a55d:	mov    ebx,0xbf0000f2
   14000a562:	inc    BYTE PTR [rax]
   14000a564:	adc    DWORD PTR [rcx+rsi*8-0x114ed900],edi
   14000a56b:	add    BYTE PTR [rsi-0x6a],al
   14000a56e:	int    0x0
   14000a570:	rex cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000a572:	fild   WORD PTR [rax]
   14000a574:	pop    rbp
   14000a575:	stos   BYTE PTR es:[rdi],al
   14000a576:	(bad)  
   14000a577:	add    BYTE PTR [rsi-0x44],bl
   14000a57a:	out    dx,al
   14000a57b:	add    BYTE PTR [rax-0x43],al
   14000a57e:	lock add BYTE PTR [rsi],cl
   14000a581:	ret    
   14000a582:	repz add BYTE PTR [rax],al
   14000a585:	retf   
   14000a586:	test   DWORD PTR [rax],0xfec700
   14000a58c:	add    cl,cl
   14000a58e:	inc    BYTE PTR [rax]
   14000a590:	adc    dl,al
   14000a592:	hlt    
   14000a593:	add    BYTE PTR [rcx],dl
   14000a595:	retf   
   14000a596:	cmc    
   14000a597:	add    BYTE PTR [rax],al
   14000a599:	fdivp  st(6),st
   14000a59b:	add    BYTE PTR [rdx],dh
   14000a59d:	fldl2e 
   14000a59f:	add    BYTE PTR [rdi],ah
   14000a5a1:	ret    
   14000a5a2:	repz add BYTE PTR [rcx],cl
   14000a5a5:	in     eax,0xfe
   14000a5a7:	add    BYTE PTR [rax],dl
   14000a5a9:	in     al,0xfa
   14000a5ab:	add    BYTE PTR [rdx],ah
   14000a5ad:	in     al,0xf3
   14000a5af:	add    BYTE PTR [rip+0x2900fae1],ch        # 0x16901a096
   14000a5b5:	in     al,dx
   14000a5b6:	cli    
   14000a5b7:	add    BYTE PTR [rip+0x3900f9ed],ch        # 0x179019faa
   14000a5bd:	in     eax,dx
   14000a5be:	hlt    
   14000a5bf:	add    BYTE PTR [rax],bh
   14000a5c1:	in     al,0xfd
   14000a5c3:	add    BYTE PTR [rdx+rdx*8-0xa],bl
   14000a5c7:	add    BYTE PTR [rbp-0x2e],ch
   14000a5ca:	cmc    
   14000a5cb:	add    BYTE PTR [rbp+rbp*8-0xe],al
   14000a5cf:	add    BYTE PTR [rsi-0x1a],ah
   14000a5d2:	loop   0x14000a5d4
   14000a5d4:	jae    0x14000a5be
   14000a5d6:	loopne 0x14000a5d8
   14000a5d8:	jle    0x14000a5ce
   14000a5da:	inc    BYTE PTR [rax]
   14000a5dc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000a5dd:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000a5de:	test   DWORD PTR [rax],eax
   14000a5e0:	fdivr  DWORD PTR [rbx-0x326fff71]
   14000a5e6:	mov    ah,0x0
   14000a5e8:	mov    esi,0xf200b1d1
   14000a5ed:	(bad)  
   14000a5ee:	test   BYTE PTR [rax],al
   14000a5f0:	clc    
   14000a5f1:	fiadd  DWORD PTR [rdx-0x7a230600]
   14000a5f7:	add    ah,ah
   14000a5f9:	(bad)  
   14000a5fa:	xchg   edx,eax
   14000a5fb:	add    ah,ah
   14000a5fd:	(bad)  
   14000a5fe:	xchg   ebp,eax
   14000a5ff:	add    bh,dl
   14000a601:	(bad)  
   14000a602:	test   al,0x0
   14000a604:	call   0x113014adf
   14000a609:	in     al,0xbb
   14000a60b:	add    bl,bl
   14000a60d:	out    0xbb,al
   14000a60f:	add    ch,cl
   14000a611:	(bad)  
   14000a612:	retf   0x0
	...
   14000a7d9:	add    BYTE PTR [rax],al
   14000a7db:	add    bh,bh
   14000a7dd:	(bad)  
   14000a7de:	inc    DWORD PTR [rax]
   14000a7e0:	add    BYTE PTR [rdi+0x58],ah
   14000a7e3:	pop    rdx
   14000a7e4:	add    BYTE PTR [rax],al
   14000a7e6:	cmp    DWORD PTR [rip+0x3d2208],ecx        # 0x1403dc9f4
   14000a7ec:	add    BYTE PTR [rax],al
   14000a7ee:	add    BYTE PTR [rax],al
   14000a7f0:	jns    0x14000a7f2
   14000a7f2:	add    BYTE PTR [rax],al
   14000a7f4:	(bad)  
   14000a7f5:	or     BYTE PTR [rax],bl
   14000a7f7:	adc    al,0x25
   14000a7f9:	es sbb al,0x18
   14000a7fc:	sbb    eax,0x61000000
   14000a801:	add    BYTE PTR [rax],al
   14000a803:	or     BYTE PTR [rcx],dl
   14000a805:	cs rex.RB
   14000a807:	rex.WRX
   14000a808:	rex.WRX
   14000a809:	rex.WRX
   14000a80a:	rex.RXB
   14000a80b:	cs sbb al,0x9
   14000a80e:	add    BYTE PTR [rax],al
   14000a810:	push   0x4006227a
   14000a815:	rex.WRX
   14000a816:	rex.X sbb al,0x3
   14000a819:	or     BYTE PTR [rsi],bl
   14000a81b:	rex.WB
   14000a81c:	rex.RXB (bad) 
   14000a81e:	or     eax,0x335c7800
   14000a823:	cs rex.WRX sub al,0x3a
   14000a827:	add    BYTE PTR [rax],al
   14000a829:	add    BYTE PTR [rax],al
   14000a82b:	xor    al,BYTE PTR [rbx]
   14000a82d:	add    DWORD PTR [rbx],eax
   14000a82f:	add    BYTE PTR [rsi+0x69],bh
   14000a832:	push   rbx
   14000a833:	push   rdx
   14000a834:	push   rdx
   14000a835:	(bad)  
	...
   14000a83e:	add    BYTE PTR [rax],al
   14000a840:	add    BYTE PTR [rbx+0x5d],dh
   14000a843:	xchg   BYTE PTR [rbp+rdx*1+0x3090409],al
   14000a84a:	add    eax,DWORD PTR [rbx]
   14000a84c:	add    eax,DWORD PTR [rcx]
   14000a84e:	add    esi,DWORD PTR [rbx]
   14000a850:	add    BYTE PTR [rcx-0x7a79a48f],al
   14000a856:	test   BYTE PTR [rsp+rax*4+0x52848484],al
   14000a85d:	sbb    r9b,BYTE PTR [r8]
   14000a860:	add    BYTE PTR [rcx],dh
   14000a862:	jl     0x14000a8d2
   14000a864:	gs and al,0x11
   14000a867:	(bad)  
   14000a868:	(bad)  
   14000a869:	or     DWORD PTR [rsi],eax
   14000a86b:	adc    DWORD PTR [rax+0x45],edx
   14000a86e:	sub    ebx,DWORD PTR [rax]
   14000a870:	add    BYTE PTR [rdx],bh
   14000a872:	mov    BYTE PTR [rdi+0x6b],dh
   14000a875:	push   rdi
   14000a876:	add    BYTE PTR [rax],al
   14000a878:	add    BYTE PTR [rax],al
   14000a87a:	add    BYTE PTR [rsi],bl
   14000a87c:	rex.WR (bad) 
   14000a87e:	(bad)  
   14000a87f:	cmp    eax,0x8a360000
   14000a884:	jne    0x14000a8e6
   14000a886:	movsxd eax,DWORD PTR [rax]
   14000a888:	add    BYTE PTR [rax],al
   14000a88a:	add    BYTE PTR [rsi],dh
   14000a88c:	rex.WB
   14000a88d:	sbb    BYTE PTR ds:[rax],al
   14000a890:	add    BYTE PTR [rax],al
   14000a892:	and    ecx,DWORD PTR [rcx-0x74]
   14000a895:	jne    0x14000a901
   14000a897:	push   rsi
   14000a898:	sub    BYTE PTR [rsi],bl
   14000a89a:	push   r10
   14000a89c:	rex.RB sbb al,0x39
   14000a89f:	add    BYTE PTR [rax],al
   14000a8a1:	add    BYTE PTR [rax],al
   14000a8a3:	sbb    BYTE PTR [rcx-0x75],cl
   14000a8a6:	jnp    0x14000a916
   14000a8a8:	fs (bad) 
   14000a8aa:	cmp    DWORD PTR [rsi],0x11
   14000a8ad:	cmp    BYTE PTR [rax],al
   14000a8af:	data16 add BYTE PTR [rax],al
   14000a8b2:	add    BYTE PTR [rax],al
   14000a8b4:	and    esi,DWORD PTR [rdi]
   14000a8b6:	mov    DWORD PTR [rbp+0x72],edi
   14000a8b9:	pop    rbp
   14000a8ba:	push   rsp
   14000a8bb:	jg     0x14000a83d
   14000a8bd:	add    BYTE PTR [rax],al
   14000a8bf:	pop    rcx
   14000a8c0:	add    BYTE PTR [rax],al
   14000a8c2:	add    BYTE PTR [rax],al
   14000a8c4:	add    BYTE PTR [rax],al
   14000a8c6:	cmp    cl,BYTE PTR [rdi]
   14000a8c8:	push   rbp
   14000a8c9:	outs   dx,DWORD PTR ds:[rsi]
   14000a8ca:	push   0x7a5f
   14000a8cf:	(bad)  
	...
   14000a8d8:	add    BYTE PTR [rax],al
   14000a8da:	add    BYTE PTR [rbp+rbp*2+0x5e],dh
   14000a8de:	jo     0x14000a8e0
   14000a8e0:	mov    WORD PTR [rdi],ds
   14000a8e2:	add    BYTE PTR [rax],al
   14000a8e4:	jo     0x14000a8ed
   14000a8e6:	add    BYTE PTR [rax],al
   14000a8e8:	(bad)  
   14000a8e9:	add    eax,DWORD PTR [rax]
   14000a8eb:	add    BYTE PTR [rax],al
   14000a8ed:	add    DWORD PTR [rax],eax
   14000a8ef:	add    BYTE PTR [rcx],al
   14000a8f1:	loope  0x14000a8f3
   14000a8f3:	add    BYTE PTR [rbx],al
   14000a8f5:	inc    DWORD PTR [rax]
   14000a8f7:	add    BYTE PTR [rax-0x80000000],al
   14000a8fd:	add    BYTE PTR [rax],al
   14000a8ff:	add    BYTE PTR [rax-0x7d000000],al
   14000a905:	loopne 0x14000a907
   14000a907:	add    cl,al
   14000a909:	loope  0x14000a90b
   14000a90b:	add    al,al
   14000a90d:	add    DWORD PTR [rax],eax
   14000a90f:	add    al,ah
   14000a911:	add    al,BYTE PTR [rax]
   14000a913:	add    al,dh
   14000a915:	(bad)  
   14000a916:	add    BYTE PTR [rax],al
   14000a918:	cld    
   14000a919:	(bad)  
   14000a91a:	add    BYTE PTR [rax],al
   14000a91c:	jmp    rcx
   14000a91e:	add    BYTE PTR [rax],al
   14000a920:	mov    DWORD PTR [rax+0x4e],edx
   14000a923:	rex.RXB or eax,0xa1a0a
   14000a929:	add    BYTE PTR [rax],al
   14000a92b:	or     eax,0x52444849
   14000a930:	add    BYTE PTR [rax],al
   14000a932:	add    DWORD PTR [rax],eax
   14000a934:	add    BYTE PTR [rax],al
   14000a936:	add    DWORD PTR [rax],eax
   14000a938:	or     BYTE PTR [rsi],al
   14000a93a:	add    BYTE PTR [rax],al
   14000a93c:	add    BYTE PTR [rdx+rsi*2-0x58],bl
   14000a940:	data16 add BYTE PTR [rax],al
   14000a943:	and    BYTE PTR [rax],al
   14000a945:	rex.WB
   14000a946:	rex.R
   14000a947:	push   r12
   14000a949:	js     0x14000a8e7
   14000a94b:	in     al,dx
   14000a94c:	mov    ebp,0x5765bc79
   14000a951:	pop    rcx
   14000a952:	out    0xfd,eax
   14000a954:	jge    0x14000a92c
   14000a956:	(bad)  
   14000a958:	or     al,0xf7
   14000a95a:	fidivr WORD PTR [rdx-0x6522909]
   14000a960:	(bad)  
   14000a961:	jo     0x14000a9ce
   14000a963:	rex.W sub cl,BYTE PTR [rcx+0x25]
   14000a967:	and    ebx,esi
   14000a969:	rex.R cwde 
   14000a96b:	mov    DWORD PTR [rbp+rbx*8+0x144ec071],esi
   14000a972:	rcl    BYTE PTR [rdi+0x5a],1
   14000a975:	sti    
   14000a976:	push   rbp
   14000a977:	jns    0x14000a97a
   14000a979:	movabs ds:0x1f280edafabd4228,eax
   14000a982:	xchg   DWORD PTR [rsi+0x24],esi
   14000a985:	jbe    0x14000a962
   14000a987:	rol    BYTE PTR [rbx-0x6cfef7de],cl
   14000a98d:	or     BYTE PTR [rbp+rax*2+0x6c],dh
   14000a991:	adc    eax,0x4084a035
   14000a996:	(bad)  
   14000a997:	rex.WB or r12b,0x53
   14000a99b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000a99c:	out    0x79,al
   14000a99e:	mov    eax,0xaf7b39e3
   14000a9a3:	cmc    
   14000a9a4:	mov    esp,0xf6b5ac7f
   14000a9a9:	fincstp 
   14000a9ab:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000a9ac:	add    cl,BYTE PTR [rcx-0x5b]
   14000a9af:	xchg   edx,eax
   14000a9b0:	rex jb 0x14000a951
   14000a9b3:	cli    
   14000a9b4:	pushf  
   14000a9b5:	mov    edx,0x9f7bd867
   14000a9ba:	jae    0x14000a9b2
   14000a9bc:	fnstcw WORD PTR [rdi-0x3cc20799]
   14000a9c2:	(bad)  
   14000a9c3:	mov    esi,0x7d2fa5f4
   14000a9c8:	jmp    0x112fb0918
   14000a9cd:	xchg   edi,eax
   14000a9ce:	mov    esi,0x7d2fa5f4
   14000a9d3:	jmp    0x112fb0923
   14000a9d8:	xchg   edi,eax
   14000a9d9:	mov    esi,0x7d2fa5f4
   14000a9de:	jmp    0x112fb092e
   14000a9e3:	xchg   edi,eax
   14000a9e4:	mov    esi,0x7d2fa5f4
   14000a9e9:	jmp    0x112fb0939
   14000a9ee:	xchg   edi,eax
   14000a9ef:	mov    esi,0x7d2fa5f4
   14000a9f4:	jmp    0x112fb0944
   14000a9f9:	xchg   edi,eax
   14000a9fa:	mov    esi,0x7d2fa5f4
   14000a9ff:	jmp    0x132fb094f
   14000aa04:	in     eax,dx
   14000aa05:	and    al,0xf2
   14000aa07:	rex.X jg 0x14000a98a
   14000aa0a:	mov    esi,0x555be5f4
   14000aa0f:	pushf  
   14000aa10:	mov    esi,0xc3e169ed
   14000aa15:	retf   0xe89f
   14000aa18:	jae    0x14000aa17
   14000aa1a:	pop    rcx
   14000aa1b:	sahf   
   14000aa1c:	sub    ebp,ecx
   14000aa1e:	sub    eax,DWORD PTR [rax+0x2564bcbe]
   14000aa24:	add    bh,BYTE PTR [rcx+riz*1+0x6]
   14000aa28:	mov    WORD PTR [rsi],ds
   14000aa2a:	(bad)  
   14000aa2b:	(bad)
   14000aa2e:	jg     0x14000a9c1
   14000aa30:	push   rdi
   14000aa31:	(bad)  
   14000aa32:	mov    cl,BYTE PTR [rdx-0x16b279a8]
   14000aa38:	iret   
   14000aa39:	(bad)  
   14000aa3a:	adc    BYTE PTR [rdi+0x53a9c157],dh
   14000aa40:	(bad)
   14000aa43:	rex.WR test rax,0xffffffffc3326be6
   14000aa49:	int3   
   14000aa4a:	idiv   BYTE PTR [rbp-0x39]
   14000aa4d:	mov    esi,0xe99ca87c
   14000aa52:	pop    rsi
   14000aa53:	stc    
   14000aa54:	out    0x4d,al
   14000aa56:	ds sbb eax,0x395d5bec
   14000aa5c:	hlt    
   14000aa5d:	adc    eax,0xf45e5f40
   14000aa62:	jb     0x14000aa66
   14000aa64:	movabs al,ds:0xcfe71857f88f160f
   14000aa6d:	(bad)  
   14000aa6e:	call   0x141b7bbe5
   14000aa73:	icebp  
   14000aa74:	mov    ecx,DWORD PTR [rcx+rbp*1+0x1b9b24c6]
   14000aa7b:	adc    edx,ebp
   14000aa7d:	or     al,0x14
   14000aa7f:	pushf  
   14000aa80:	(bad)  
   14000aa81:	adc    al,0x34
   14000aa83:	loop   0x14000aa5e
   14000aa85:	sub    ebp,DWORD PTR [rax]
   14000aa87:	or     bh,BYTE PTR [rsi]
   14000aa89:	sbb    al,0x4b
   14000aa8b:	xor    eax,0xbb84af3d
   14000aa90:	(bad)  
   14000aa91:	rex.RXB popf 
   14000aa93:	outs   dx,DWORD PTR ds:[rsi]
   14000aa94:	out    dx,al
   14000aa95:	jne    0x14000aa74
   14000aa97:	(bad)  
   14000aa98:	jrcxz  0x14000aa48
   14000aa9a:	int3   
   14000aa9b:	(bad)  
   14000aa9c:	jno    0x14000aa71
   14000aa9e:	jb     0x14000aa77
   14000aaa0:	sar    DWORD PTR [rbp-0x4d],0x9f
   14000aaa4:	std    
   14000aaa5:	loop   0x14000aa64
   14000aaa7:	cmp    ecx,DWORD PTR [rdi]
   14000aaa9:	mov    esi,0xe2bed7e5
   14000aaae:	stc    
   14000aaaf:	(bad)  
   14000aab0:	xchg   ebx,eax
   14000aab1:	mov    esi,0x8bcbe802
   14000aab6:	rex.WX push 0x6e
   14000aab9:	mov    ebx,0x64674600
   14000aabe:	(bad)  
   14000aabf:	in     eax,dx
   14000aac0:	icebp  
   14000aac1:	scas   eax,DWORD PTR es:[rdi]
   14000aac2:	adc    esp,edi
   14000aac4:	and    eax,0xc966dc46
   14000aac9:	retf   
   14000aaca:	cmc    
   14000aacb:	es lahf 
   14000aacd:	pop    rbp
   14000aace:	add    ch,BYTE PTR [rdx+0x21]
   14000aad1:	push   rdi
   14000aad2:	pop    rsp
   14000aad3:	and    DWORD PTR [rax],ecx
   14000aad5:	mov    ch,BYTE PTR [rbx]
   14000aad7:	add    DWORD PTR [rbx],esp
   14000aad9:	mov    eax,0x1d5bd86e
   14000aade:	clc    
   14000aadf:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000aae0:	add    BYTE PTR [rax+rcx*1+0x2a3bc570],dl
   14000aae7:	mov    al,0xe3
   14000aae9:	adc    eax,0x11aaa08f
   14000aaee:	rex.WX (bad) 
   14000aaf0:	xchg   eax,esi
   14000aaf2:	cmp    BYTE PTR [rdx-0x4d47d0f1],cl
   14000aaf8:	std    
   14000aaf9:	pop    rax
   14000aafa:	stos   BYTE PTR es:[edi],al
   14000aafc:	jne    0x14000aae5
   14000aafe:	in     al,dx
   14000aaff:	push   rcx
   14000ab00:	repz jmp 0x11bbea745
   14000ab06:	outs   dx,BYTE PTR ds:[rsi]
   14000ab07:	mov    ebp,0xdd7bf3f7
   14000ab0c:	rex.WRB jmp 0x134a0da5a
   14000ab12:	adc    eax,0xadbe5f40
   14000ab17:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000ab18:	(bad)  
   14000ab19:	js     0x14000ab1e
   14000ab1b:	xor    al,0xfd
   14000ab1d:	add    DWORD PTR [rcx],edi
   14000ab1f:	rex.XB (bad) 
   14000ab21:	std    
   14000ab22:	push   rbp
   14000ab23:	(bad)  
   14000ab24:	fsub   QWORD PTR [rip+0x619ceb26]        # 0x1a19d9650
   14000ab2a:	sbb    bl,ch
   14000ab2c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000ab2d:	cwde   
   14000ab2e:	sbb    al,0x24
   14000ab30:	add    ebx,edx
   14000ab32:	mov    cl,cl
   14000ab34:	add    al,0xe7
   14000ab36:	movabs al,ds:0xce071d00326e093b
   14000ab3f:	adc    ecx,eax
   14000ab41:	or     ebp,edx
   14000ab43:	adc    al,0x10
   14000ab45:	mov    esp,0x7d583e02
   14000ab4a:	push   fs
   14000ab4c:	(bad)  
   14000ab4d:	add    ah,dl
   14000ab4f:	adc    eax,0x157de9a7
   14000ab54:	or     eax,0xaa541f96
   14000ab59:	mov    DWORD PTR [rcx],0xb8fa82dc
   14000ab5f:	(bad)  
   14000ab60:	test   bh,al
   14000ab62:	test   al,0xf7
   14000ab64:	int    0xfd
   14000ab66:	xor    eax,DWORD PTR [rdi-0x79]
   14000ab69:	outs   dx,BYTE PTR ds:[rsi]
   14000ab6a:	fnstenv [rdi-0x40700035]
   14000ab70:	mov    edx,0xef9dbee5
   14000ab75:	mov    ecx,0xbcf771f9
   14000ab7a:	pushf  
   14000ab7b:	lods   al,BYTE PTR ds:[rsi]
   14000ab7c:	adc    ecx,DWORD PTR [rax+0x5f]
   14000ab7f:	add    esp,esi
   14000ab81:	in     eax,0xdb
   14000ab83:	rex.WRX pushf 
   14000ab85:	mov    esi,0xd6bbc4cd
   14000ab8a:	(bad)  
   14000ab8b:	xor    BYTE PTR [rbx+0x2d5fca74],bl
   14000ab91:	(bad)  
   14000ab92:	pop    rbp
   14000ab93:	(bad)  
   14000ab94:	repnz out dx,al
   14000ab96:	sbb    DWORD PTR [rsi-0x596f391f],esp
   14000ab9c:	(bad)  
   14000ab9d:	(bad)  
   14000ab9e:	or     ecx,ebx
   14000aba0:	sub    al,ah
   14000aba2:	movabs eax,ds:0xde0d394ae3ca0473
   14000abab:	rex.WXB mov r8b,0xee
   14000abae:	rex.WRX push rcx
   14000abb0:	(bad)  
   14000abb1:	js     0x14000abba
   14000abb3:	test   al,0x46
   14000abb5:	imul   ebp,DWORD PTR [rdi],0xffffff95
   14000abb8:	fucomi st,st(7)
   14000abba:	movabs ds:0xffb838803a464812,al
   14000abc3:	and    DWORD PTR [r8+0x15],ecx
   14000abc7:	add    ecx,esp
   14000abc9:	(bad)  
   14000abca:	jl     0x14000ac44
   14000abcc:	(bad)  
   14000abcd:	movabs ds:0x514013d107052180,eax
   14000abd6:	or     dl,BYTE PTR [rip+0x5b0a5172]        # 0x19b0afd4e
   14000abdc:	(bad)  
   14000abdd:	(bad)  
   14000abde:	cs cli 
   14000abe0:	mov    ebx,0xdff88fed
   14000abe5:	inc    ch
   14000abe7:	ja     0x14000ac65
   14000abe9:	not    cl
   14000abeb:	fwait
   14000abec:	loopne 0x14000ac67
   14000abee:	push   rdi
   14000abef:	add    al,0x7d
   14000abf1:	add    eax,0x796f97d0
   14000abf6:	pop    rcx
   14000abf7:	adc    bl,al
   14000abf9:	psubb  mm3,mm5
   14000abfc:	out    0xe5,al
   14000abfe:	je     0x14000abfd
   14000ac00:	fwait
   14000ac01:	rex.WR movabs ds:0x2107638eeed332fb,rax
   14000ac0b:	pop    rbx
   14000ac0c:	or     al,0xd9
   14000ac0e:	adc    dh,BYTE PTR [rax]
   14000ac10:	cmp    esp,ecx
   14000ac12:	sbb    eax,0x2861ce85
   14000ac17:	(bad)  
   14000ac18:	add    ebx,ebp
   14000ac1a:	adc    bl,cl
   14000ac1c:	mov    ebx,0x38eac432
   14000ac21:	movabs eax,ds:0x42beb14bbd716a2c
   14000ac2a:	sbb    DWORD PTR [rsp+rdi*4],ebp
   14000ac2d:	(bad)  
   14000ac2e:	jp     0x14000ac36
   14000ac30:	xchg   ebp,eax
   14000ac31:	mov    ebx,DWORD PTR [rsi]
   14000ac33:	sub    al,0xbc
   14000ac35:	xchg   edx,eax
   14000ac36:	pop    rsi
   14000ac37:	mov    WORD PTR [rax+0x13cad017],es
   14000ac3d:	lock js 0x14000ac8c
   14000ac40:	mov    BYTE PTR [rbx],bl
   14000ac42:	rex.WR push rax
   14000ac44:	add    al,0xf5
   14000ac46:	mov    BYTE PTR [rdi+0x55],bl
   14000ac49:	sub    dl,al
   14000ac4b:	mov    ebp,0x18221ef0
   14000ac50:	adc    al,0x8c
   14000ac52:	loopne 0x14000abf9
   14000ac54:	cwde   
   14000ac55:	sahf   
   14000ac56:	sbb    bh,cl
   14000ac58:	stos   DWORD PTR es:[rdi],eax
   14000ac59:	push   QWORD PTR [rbx+0x3efbc0ed]
   14000ac5f:	cli    
   14000ac60:	(bad)  
   14000ac61:	ja     0x14000ac82
   14000ac63:	mov    ebx,0xcf9efe69
   14000ac68:	test   eax,0x5f4015f4
   14000ac6d:	mov    esi,0x7a06a525
   14000ac72:	add    DWORD PTR [rsi-0x24],eax
   14000ac75:	adc    esi,esi
   14000ac77:	lea    esp,[rdx]
   14000ac79:	in     eax,0x1b
   14000ac7b:	ins    BYTE PTR es:[rdi],dx
   14000ac7c:	mov    bl,0x73
   14000ac7e:	mov    esi,0xc6986434
   14000ac83:	or     ch,BYTE PTR [rax+0x2c]
   14000ac86:	add    edi,DWORD PTR [rbx+0x30537158]
   14000ac8c:	ja     0x14000acde
   14000ac8e:	sub    DWORD PTR [rsi],ecx
   14000ac90:	or     bl,ch
   14000ac92:	imul   eax,DWORD PTR [rdx-0x2ffba0b5],0x8a94073b
   14000ac9c:	cmp    dh,BYTE PTR [rax+0x4e]
   14000ac9f:	push   rax
   14000aca0:	add    eax,0x9e18901f
   14000aca5:	rex.WXB (bad) 
   14000aca7:	fld    TBYTE PTR [rbx]
   14000aca9:	stos   BYTE PTR es:[rdi],al
   14000acaa:	add    eax,eax
   14000acac:	rex.WRX or rax,0xffffffffe007f075
   14000acb2:	neg    DWORD PTR [rsi]
   14000acb4:	rex.XB mov dil,r13b
   14000acb7:	imul   ecx,DWORD PTR [rax],0xffffffaa
   14000acba:	pushf  
   14000acbb:	test   DWORD PTR [rax],edx
   14000acbd:	or     bh,BYTE PTR [rax+0x7c]
   14000acc0:	ins    DWORD PTR es:[rdi],dx
   14000acc1:	pop    rdi
   14000acc2:	sub    dl,ah
   14000acc4:	(bad)  
   14000acc5:	leave  
   14000acc6:	and    esi,DWORD PTR [rax+0x35]
   14000acc9:	call   0xfbc22cf7
   14000acce:	jl     0x14000ac9f
   14000acd0:	(bad)  
   14000acd1:	(bad)  
   14000acd2:	rex.RX mov sil,0xfe
   14000acd5:	in     al,dx
   14000acd6:	(bad)  
   14000acd7:	std    
   14000acd8:	fucom  st(7)
   14000acda:	and    bh,0x85
   14000acdd:	and    ebp,eax
   14000acdf:	sub    eax,DWORD PTR [rax+0x494b7cbe]
   14000ace5:	or     eax,0xeddcbf8
   14000acea:	repz push rsi
   14000acec:	movsxd ecx,DWORD PTR [rbx-0x4c4cb355]
   14000acf2:	rex.WB sbb bpl,r13b
   14000acf5:	add    DWORD PTR [rdx+0x15634a15],esi
   14000acfb:	fcom   DWORD PTR [rsi+0x0]
   14000acfe:	ja     0x14000acf7
   14000ad00:	and    BYTE PTR [rsi+rcx*1+0x41],dh
   14000ad04:	jns    0x14000ad22
   14000ad06:	jl     0x14000ad1f
   14000ad08:	jl     0x14000acb3
   14000ad0a:	add    eax,edi
   14000ad0c:	add    eax,0x1c294e0
   14000ad11:	rex.WRX
   14000ad12:	lock gs je 0x14000ad0f
   14000ad16:	jge    0x14000ad88
   14000ad18:	stc    
   14000ad19:	push   rbp
   14000ad1a:	and    esp,DWORD PTR [rbx+0xf7ddd1f]
   14000ad20:	loopne 0x14000ad34
   14000ad22:	ret    
   14000ad23:	setne  BYTE PTR [rbp+0x14780356]
   14000ad2a:	rex.B and al,0x2
   14000ad2d:	fadd   DWORD PTR [rdi-0x15]
   14000ad30:	ins    BYTE PTR es:[rdi],dx
   14000ad31:	push   0x64
   14000ad33:	movsxd esi,DWORD PTR [rdx+rdi*8-0x7b5087e0]
   14000ad3a:	mov    ebp,0x41e07792
   14000ad3f:	movabs al,ds:0x6f8c549d4a6c25eb
   14000ad48:	(bad)  
   14000ad49:	xchg   ecx,eax
   14000ad4a:	(bad)  
   14000ad4b:	adc    BYTE PTR [rax-0x1c],dl
   14000ad4e:	enter  0x6591,0xbf
   14000ad52:	jmp    rbx
   14000ad54:	outs   dx,DWORD PTR ds:[rsi]
   14000ad55:	cli    
   14000ad56:	in     al,dx
   14000ad57:	cmc    
   14000ad58:	rex idiv DWORD PTR [rcx+0x57d0256]
   14000ad5f:	rcl    BYTE PTR [rdi-0x5f95a3e9],1
   14000ad65:	pop    rdi
   14000ad66:	in     al,0x76
   14000ad68:	cdq    
   14000ad69:	out    dx,eax
   14000ad6a:	adc    al,0xd5
   14000ad6c:	(bad)  
   14000ad6d:	mov    al,0x3
   14000ad6f:	jae    0x14000ad88
   14000ad71:	movsxd rsp,DWORD PTR [rax-0x80]
   14000ad75:	(bad)  
   14000ad76:	cmp    BYTE PTR [rsi+rdx*2],dh
   14000ad79:	sub    BYTE PTR [rax+rax*2+0x418e280b],dh
   14000ad80:	out    0x0,eax
   14000ad82:	je     0x14000ad13
   14000ad84:	sub    bl,BYTE PTR [rdx-0x80]
   14000ad87:	jmp    0x14000adb3
   14000ad89:	fiadd  DWORD PTR [rbp-0x5ed7eb5e]
   14000ad8f:	in     al,dx
   14000ad90:	sub    bl,dh
   14000ad92:	or     edx,ebp
   14000ad94:	xchg   edx,eax
   14000ad95:	(bad)  
   14000ad96:	(bad)  
   14000ad97:	(bad)  
   14000ad98:	pop    rsi
   14000ad99:	movsxd edi,DWORD PTR [rdi+rbp*1-0x1fd7bdc8]
   14000ada0:	mov    ebp,0x313cee8f
   14000ada5:	xchg   di,ax
   14000ada7:	rex.W cli 
   14000ada9:	adc    DWORD PTR [rdi-0x73ff9df5],ebx
   14000adaf:	loop   0x14000ad6e
   14000adb1:	sub    cl,0x6d
   14000adb4:	(bad)  
   14000adb5:	mov    ah,BYTE PTR [rcx]
   14000adb7:	jp     0x14000adc4
   14000adb9:	lock add esp,DWORD PTR es:[rcx]
   14000adbd:	(bad)  
   14000adbe:	cmovp  esp,DWORD PTR [rbx]
   14000adc1:	sbb    eax,0x76c788a8
   14000adc6:	(bad)  
   14000adc7:	mov    dh,0x9
   14000adc9:	sti    
   14000adca:	xchg   BYTE PTR [rdi+0x1303b0bd],bh
   14000add0:	pop    rax
   14000add1:	add    ebp,DWORD PTR [rdi]
   14000add3:	cmp    bh,BYTE PTR [rip+0xffffffffff53f8b5]        # 0x13f54a68e
   14000add9:	loope  0x14000adb5
   14000addb:	pop    rbx
   14000addc:	mov    bh,0x2
   14000adde:	jae    0x14000adaf
   14000ade0:	rex.W rcl BYTE PTR gs:[rdi+0x0],1
   14000ade5:	jge    0x14000ae60
   14000ade7:	shl    DWORD PTR [rdx+rdx*4],0x79
   14000adeb:	mov    ecx,0xa52f6fdf
   14000adf0:	stos   DWORD PTR es:[rdi],eax
   14000adf1:	(bad)  
   14000adf2:	(bad)  
   14000adf3:	pop    rbx
   14000adf4:	jae    0x14000ae4d
   14000adf6:	xor    rbx,QWORD PTR [rdi+0x4a]
   14000adfa:	jae    0x14000ae58
   14000adfc:	imul   ebp,DWORD PTR [rbp+rax*1+0x7e77049a],0x801ee94e
   14000ae07:	(bad)  
   14000ae08:	rex.B jo 0x14000ae28
   14000ae0b:	shr    BYTE PTR [rsi-0x4c],1
   14000ae0e:	hlt    
   14000ae0f:	frstor [rax-0x5afe83ec]
   14000ae15:	or     ecx,edi
   14000ae17:	imul   esi,DWORD PTR [rdx+0x3e704ef6],0x15af032a
   14000ae21:	clc    
   14000ae22:	push   rsp
   14000ae23:	movsxd edi,DWORD PTR [rdx-0x71]
   14000ae26:	pop    rsi
   14000ae27:	out    dx,al
   14000ae28:	(bad)  
   14000ae29:	jl     0x14000addb
   14000ae2b:	mul    BYTE PTR [rdx-0x196f2ae8]
   14000ae31:	push   rdi
   14000ae32:	add    DWORD PTR [rcx],ecx
   14000ae34:	mov    WORD PTR [rsi+0x13ef910],?
   14000ae3a:	movabs ds:0x7852780ca8982f6b,al
   14000ae43:	rex cmc 
   14000ae45:	jg     0x14000ae0b
   14000ae47:	xchg   edi,eax
   14000ae48:	sub    bl,BYTE PTR [rbp+0x25]
   14000ae4b:	xchg   BYTE PTR [rip+0x6e43ef16],al        # 0x1ae449d67
   14000ae51:	shl    DWORD PTR [rdi],1
   14000ae53:	lock jnp 0x14000ade3
   14000ae56:	mov    esp,0x60318281
   14000ae5b:	cmp    eax,0x1e999d78
   14000ae60:	std    
   14000ae61:	(bad)  
   14000ae62:	ja     0x14000ae60
   14000ae64:	clc    
   14000ae65:	sbb    eax,0x6bce793f
   14000ae6a:	push   rdi
   14000ae6b:	int    0x3e
   14000ae6d:	push   rdi
   14000ae6e:	cdq    
   14000ae6f:	(bad)  
   14000ae70:	mov    esi,0xf3cbe802
   14000ae75:	sub    dl,cl
   14000ae77:	ficomp DWORD PTR [rbx]
   14000ae79:	in     eax,dx
   14000ae7a:	retf   0xeeb8
   14000ae7d:	xor    ebp,DWORD PTR [rdi+0x33]
   14000ae80:	(bad)  
   14000ae81:	loop   0x14000ae62
   14000ae83:	(bad)  
   14000ae84:	add    DWORD PTR [rsi],esp
   14000ae86:	push   0x38c684ae
   14000ae8b:	mov    al,0x28
   14000ae8d:	(bad)  
   14000ae8e:	leave  
   14000ae8f:	cmp    DWORD PTR [rbx],0x420e74ae
   14000ae95:	neg    DWORD PTR [rax+0x50]
   14000ae98:	add    ch,BYTE PTR [rsi+0x7c51df00]
   14000ae9e:	sbb    esp,ebx
   14000aea0:	cld    
   14000aea1:	add    dh,bh
   14000aea3:	clc    
   14000aea4:	jl     0x14000ae83
   14000aea6:	fidivr DWORD PTR [rbx]
   14000aea8:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000aea9:	sub    BYTE PTR [rcx],al
   14000aeab:	(bad)  
   14000aeac:	fistp  DWORD PTR [rdi]
   14000aeae:	pop    rsp
   14000aeaf:	ja     0x14000aebe
   14000aeb1:	outs   dx,BYTE PTR ds:[rsi]
   14000aeb2:	mov    edi,0x80f462f4
   14000aeb7:	imul   eax,DWORD PTR [rcx+0x45],0x528e1782
   14000aebe:	add    BYTE PTR [rcx+0x1c7b7d84],bh
   14000aec4:	add    BYTE PTR [rbp+0x5],r15b
   14000aec8:	js     0x14000aece
   14000aeca:	test   eax,0x8c7f09b6
   14000aecf:	and    al,0xb0
   14000aed1:	rex.RXB xor r10b,BYTE PTR [r8]
   14000aed4:	(bad)  
   14000aed5:	mov    DWORD PTR [rsi-0x5f],eax
   14000aed8:	rex movsxd edi,DWORD PTR [rax]
   14000aedb:	movabs al,ds:0x3400f06805e09578
   14000aee4:	(bad)  
   14000aee5:	adc    ah,BYTE PTR [rax]
   14000aee7:	js     0x14000af33
   14000aee9:	or     al,0x6
   14000aeeb:	(bad)  
   14000aeec:	mov    BYTE PTR [rcx],al
   14000aeee:	test   BYTE PTR [rbx+0x47],ah
   14000aef1:	rex.RXB (bad) 
   14000aef3:	icebp  
   14000aef4:	jg     0x14000aef5
   14000aef6:	sar    BYTE PTR [rdi-0x4cfcd04],1
   14000aefc:	pop    rsp
   14000aefd:	js     0x14000af01
   14000aeff:	jge    0x14000af06
   14000af01:	rcl    BYTE PTR [rdi+0x2e6a5ce7],1
   14000af07:	jle    0x14000af4c
   14000af09:	pminub mm5,QWORD PTR [rbx]
   14000af0c:	call   0x120cdeaf9
   14000af11:	in     al,dx
   14000af12:	retf   
   14000af13:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000af14:	mov    ebp,0x1d6345ac
   14000af19:	enter  0x4252,0x6
   14000af1d:	rex.WR adc rax,0xffffffffc08f280a
   14000af23:	fsub   QWORD PTR [rcx]
   14000af25:	(bad)
   14000af28:	(bad)  
   14000af29:	mov    edi,0xef2b06e8
   14000af2e:	mov    ebx,0x6b04eb8a
   14000af33:	iret   
   14000af34:	sbb    al,0x94
   14000af36:	pop    rsi
   14000af37:	jno    0x14000af16
   14000af39:	(bad)  
   14000af3a:	call   0x162c0badc
   14000af3f:	(bad)  
   14000af40:	cmp    eax,0x2448ee14
   14000af45:	in     eax,dx
   14000af46:	add    esi,DWORD PTR [rax]
   14000af48:	and    DWORD PTR [rip+0xffffffff9f8b0257],0xffffff82        # 0xdf8bb1a6
   14000af4f:	icebp  
   14000af50:	nop
   14000af51:	push   rsi
   14000af52:	sub    al,0x24
   14000af54:	add    BYTE PTR [rdx],bh
   14000af56:	(bad)  
   14000af57:	in     al,dx
   14000af58:	jl     0x14000af6a
   14000af5a:	add    eax,0xa1e74491
   14000af5f:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000af60:	ja     0x14000afa1
   14000af62:	sub    DWORD PTR [rax],eax
   14000af64:	add    DWORD PTR [rcx],0xfffffff1
   14000af67:	js     0x14000af76
   14000af69:	int3   
   14000af6a:	mov    esi,0xa90885af
   14000af6f:	jbe    0x14000af71
   14000af71:	minps  xmm0,xmm2
   14000af74:	ja     0x14000af6a
   14000af76:	(bad)  
   14000af77:	icebp  
   14000af78:	fdivrp st(6),st
   14000af7a:	push   0xb
   14000af7c:	mov    esp,0x55e01c7
   14000af81:	cmc    
   14000af82:	(bad)  
   14000af83:	mov    WORD PTR [rbp+0x25],es
   14000af86:	test   al,0x4
   14000af88:	or     al,0x7b
   14000af8a:	imul   DWORD PTR [rip+0x785fc3fd]        # 0x1b860738d
   14000af90:	out    dx,eax
   14000af91:	xchg   edi,eax
   14000af92:	jmp    rsp
   14000af94:	clc    
   14000af95:	movabs eax,ds:0x4015f409cd53d9d9
   14000af9e:	pop    rdi
   14000af9f:	sahf   
   14000afa0:	xor    ecx,DWORD PTR [rcx+0x1605be2e]
   14000afa6:	sti    
   14000afa7:	popf   
   14000afa8:	test   BYTE PTR [rdi+0x4c],0x56
   14000afac:	pop    rsi
   14000afad:	imul   eax,DWORD PTR [rsi+0x135a66dc],0x42
   14000afb4:	mov    dh,0xe
   14000afb6:	push   0xffffffffa03a0046
   14000afbb:	stos   DWORD PTR es:[rdi],eax
   14000afbc:	je     0x14000af4c
   14000afbe:	rex test DWORD PTR [rax],0x1da28eb8
   14000afc5:	sub    BYTE PTR [rdx],bh
   14000afc7:	sahf   
   14000afc8:	mov    dl,0x23
   14000afca:	ror    BYTE PTR [rip+0xffffffff832bbdb1],1        # 0xc32c6d81
   14000afd0:	(bad)
   14000afd3:	adc    al,0x5
   14000afd5:	loopne 0x14000b00c
   14000afd7:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000afd8:	clc    
   14000afd9:	cmp    al,0xea
   14000afdb:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000afdc:	and    dh,cl
   14000afde:	pop    rsp
   14000afdf:	xchg   ebp,eax
   14000afe0:	scas   eax,DWORD PTR es:[rdi]
   14000afe1:	movabs ds:0x2113fb948a513207,eax
   14000afea:	(bad)  
   14000afeb:	nop
   14000afec:	sbb    BYTE PTR [rdi+0x22fa009b],bl
   14000aff2:	ret    0x4721
   14000aff5:	movabs ds:0xbc188c79fe48d04e,al
   14000affe:	or     DWORD PTR [rdi+rbx*1],eax
   14000b001:	adc    dl,BYTE PTR [rcx-0x5b780b6d]
   14000b007:	rex and DWORD PTR [rsi+0x1],edx
   14000b00b:	rex.RX ret 0xd630
   14000b00f:	(bad)  
   14000b010:	rex.RXB
   14000b011:	rex.WXB out dx,eax
   14000b013:	rex.B sub eax,0x81cd425d
   14000b019:	rex.RX scas al,BYTE PTR es:[rdi]
   14000b01b:	sar    DWORD PTR [rbx],0x13
   14000b01e:	adc    eax,0x700ef440
   14000b023:	sub    BYTE PTR [rdx+0x47c60b7a],al
   14000b029:	(bad)  
   14000b02a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000b02b:	mov    esp,0x7e475ff3
   14000b030:	hlt    
   14000b031:	(bad)  
   14000b032:	scas   eax,DWORD PTR es:[rdi]
   14000b033:	mov    edi,0xf474be7
   14000b038:	int3   
   14000b039:	je     0x14000b089
   14000b03b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000b03c:	adc    cl,al
   14000b03e:	rex.WRX (bad) 
   14000b040:	cmp    edx,0x4e2497d2
   14000b046:	fbld   TBYTE PTR [rsi-0x7f]
   14000b049:	xchg   BYTE PTR [rsi],bl
   14000b04b:	(bad)  
   14000b04c:	addr32 jo 0x14000afeb
   14000b04f:	lahf   
   14000b050:	xor    eax,0xb36beeed
   14000b055:	and    eax,0x36b4c5ad
   14000b05a:	sub    DWORD PTR [rdx],esi
   14000b05c:	(bad)  
   14000b05d:	adc    eax,0x3a2a55eb
   14000b062:	(bad)  
   14000b063:	frstor [rbx]
   14000b065:	push   rax
   14000b066:	sbb    al,0x51
   14000b068:	retf   0x259
   14000b06b:	movabs eax,ds:0xa9095d7059f8a737
   14000b074:	mov    esp,0x296528e
   14000b079:	pop    rbp
   14000b07a:	(bad)
   14000b07d:	fdivrp st(3),st
   14000b07f:	shl    DWORD PTR [rdx+0x3a],1
   14000b082:	rex.RB mov r13d,0x957a7909
   14000b088:	retf   0xe49
   14000b08b:	cs mov bh,0x50
   14000b08e:	loopne 0x14000b039
   14000b090:	pop    rsp
   14000b091:	js     0x14000b01c
   14000b093:	(bad)  
   14000b094:	cmp    al,0x45
   14000b096:	mov    ecx,fs
   14000b098:	jae    0x14000b01e
   14000b09a:	ret    0xa006
   14000b09d:	(bad)  
   14000b09e:	or     BYTE PTR [rcx-0x80],ah
   14000b0a1:	xor    eax,0x6e0f3dc1
   14000b0a6:	mov    ebp,0xb5fc2622
   14000b0ab:	adc    al,dl
   14000b0ad:	(bad)  
   14000b0ae:	sahf   
   14000b0af:	jae    0x14000b0c1
   14000b0b1:	mov    ebp,0x51700208
   14000b0b6:	or     esp,DWORD PTR [rdx+rbp*4-0x6e7e9dff]
   14000b0bd:	mov    DWORD PTR [rcx+riz*4-0xf2d543b],edi
   14000b0c4:	push   rax
   14000b0c5:	sbb    BYTE PTR [rbp+0x31],al
   14000b0c8:	cmp    bh,ch
   14000b0ca:	xor    BYTE PTR [rsi],dh
   14000b0cc:	sbb    BYTE PTR [rdi],0x6f
   14000b0cf:	xor    BYTE PTR [rax],ch
   14000b0d1:	(bad)  
   14000b0d2:	adc    esi,DWORD PTR [rbp-0x7aa3f06a]
   14000b0d8:	push   rcx
   14000b0d9:	push   rsp
   14000b0da:	mov    bl,0xf3
   14000b0dc:	(bad)  
   14000b0dd:	sahf   
   14000b0de:	jns    0x14000b0df
   14000b0e0:	cmp    edi,esp
   14000b0e2:	sub    al,0x7e
   14000b0e4:	shr    DWORD PTR [rsi-0x230212dd],cl
   14000b0ea:	jne    0x14000b094
   14000b0ec:	cmp    al,0x55
   14000b0ee:	mov    edi,0xe803df55
   14000b0f3:	retf   
   14000b0f4:	sub    DWORD PTR [rbx],edx
   14000b0f6:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000b0f7:	outs   dx,DWORD PTR ds:[rsi]
   14000b0f8:	retf   
   14000b0f9:	xor    DWORD PTR [rsi+0x3097361e],0x70ec7bc7
   14000b103:	out    0x32,eax
   14000b105:	ins    DWORD PTR es:[rdi],dx
   14000b106:	mov    ?,WORD PTR [rdi]
   14000b108:	leave  
   14000b109:	(bad)  
   14000b10a:	and    DWORD PTR [rcx+rdx*1],ecx
   14000b10d:	rep outs dx,DWORD PTR ds:[rsi]
   14000b10f:	xchg   ecx,eax
   14000b110:	sub    bl,BYTE PTR [rbx-0x5aee117b]
   14000b116:	cmp    BYTE PTR [rdx],cl
   14000b118:	in     eax,0x6c
   14000b11a:	add    BYTE PTR [rcx+0xd9f80eb],bh
   14000b120:	outs   dx,BYTE PTR ds:[rsi]
   14000b121:	mov    ebp,0x51d140eb
   14000b126:	mov    ah,0x4
   14000b128:	push   rdi
   14000b129:	rex.R
   14000b12a:	rex.WXB out dx,eax
   14000b12c:	(bad)  
   14000b12d:	add    cl,BYTE PTR [rax]
   14000b12f:	movabs al,ds:0xeb726d8dd69aa48f
   14000b138:	xor    eax,0xa292dbb8
   14000b13d:	jl     0x14000b15e
   14000b13f:	sbb    al,0x91
   14000b141:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000b142:	or     BYTE PTR [rsp+rsi*2-0xd],ch
   14000b146:	shl    DWORD PTR [rax-0x54],1
   14000b149:	lea    esp,[rdx+0x6d]
   14000b14c:	or     BYTE PTR [rbx],al
   14000b14e:	add    al,0x8f
   14000b150:	sbb    al,cl
   14000b152:	rex.RX xchg esi,eax
   14000b154:	ficomp WORD PTR [rax-0x71]
   14000b157:	and    dh,cl
   14000b159:	xor    eax,0x8f673b0e
   14000b15e:	adc    al,0xd3
   14000b160:	fldz   
   14000b162:	leave  
   14000b163:	ret    
   14000b164:	(bad)  
   14000b165:	xchg   ecx,eax
   14000b166:	jge    0x14000b123
   14000b168:	out    0x1e,eax
   14000b16a:	fwait
   14000b16b:	popf   
   14000b16c:	sub    DWORD PTR [rdi-0x75],esp
   14000b16f:	push   rdx
   14000b170:	fnstsw WORD PTR [rsi+0x6f47931d]
   14000b176:	dec    al
   14000b178:	xlat   BYTE PTR ds:[rbx]
   14000b179:	jbe    0x14000b174
   14000b17b:	scas   al,BYTE PTR es:[rdi]
   14000b17c:	ja     0x14000b1e3
   14000b17e:	jmp    0xed584478
   14000b183:	sbb    DWORD PTR [rdx-0x7],edi
   14000b186:	jmp    0x14000b15f
   14000b188:	rex.WRXB or al,0xe
   14000b18b:	(bad)  
   14000b18d:	(bad)  
   14000b18e:	jne    0x14000b193
   14000b190:	sbb    eax,DWORD PTR [rdi]
   14000b192:	xchg   BYTE PTR [rbp+0x55],dh
   14000b195:	imul   esp,DWORD PTR [rax+rdi*1+0x13b3b33d],0xffffff82
   14000b19d:	sbb    eax,eax
   14000b19f:	sti    
   14000b1a0:	(bad)  
   14000b1a1:	scas   al,BYTE PTR es:[rdi]
   14000b1a2:	xor    ebp,DWORD PTR [rax-0x7de0b5ad]
   14000b1a8:	jge    0x14000b191
   14000b1aa:	adc    al,0xe7
   14000b1ac:	movsxd ebx,DWORD PTR [rax-0xe4ba31e]
   14000b1b2:	sbb    DWORD PTR [rsi+0x7d],ecx
   14000b1b5:	clc    
   14000b1b6:	(bad)  
   14000b1b7:	(bad)  
   14000b1b8:	sbb    al,0x3b
   14000b1ba:	mov    edx,0xbdd713f8
   14000b1bf:	jmp    0x14000b1ec
   14000b1c1:	out    dx,eax
   14000b1c2:	jnp    0x14000b19d
   14000b1c4:	jmp    0x14000b18c
   14000b1c6:	addr32 rex.WRX adc rax,0x57d829
   14000b1cd:	(bad)  
   14000b1ce:	jno    0x14000b1a9
   14000b1d0:	cld    
   14000b1d1:	mov    ebx,DWORD PTR [rdi+0xc8c5d39]
   14000b1d7:	or     DWORD PTR [rdx+0x6a591ac9],edi
   14000b1dd:	mov    WORD PTR [rdi+rsi*4],gs
   14000b1e0:	(bad)  
   14000b1e1:	in     al,0x46
   14000b1e3:	fs xchg ebx,eax
   14000b1e5:	mov    cl,0x22
   14000b1e7:	rex.RX
   14000b1e8:	xor    BYTE PTR fs:[rbx],dh
   14000b1eb:	mov    dl,0xc6
   14000b1ed:	rex.RX lods al,BYTE PTR fs:[rsi]
   14000b1f0:	xor    DWORD PTR [rdx+0x4d],esp
   14000b1f3:	mov    BYTE PTR cs:[rax+0x18d62235],0x93
   14000b1fb:	pop    rcx
   14000b1fc:	xchg   ecx,eax
   14000b1fd:	push   rsi
   14000b1fe:	rcr    ecx,cl
   14000b200:	add    DWORD PTR [rsi-0x39],0xfb6cb65f
   14000b207:	fcomp  QWORD PTR [rbx]
   14000b209:	xlat   BYTE PTR ds:[rbx]
   14000b20a:	fdivr  QWORD PTR [rbx+0x392e97e]
   14000b210:	mov    esi,DWORD PTR [rbp+rsi*1+0x22357601]
   14000b217:	push   rsi
   14000b218:	and    eax,0x1e23d060
   14000b21d:	movabs eax,ds:0xfc077c531c5f4013
   14000b226:	sub    al,0x52
   14000b228:	int3   
   14000b229:	xchg   al,bh
   14000b22b:	mov    esi,0x627680ec
   14000b230:	int3   
   14000b231:	fild   WORD PTR [rip+0x10be3ce7]        # 0x150beef1e
   14000b237:	rex.WX (bad) 
   14000b239:	or     DWORD PTR [rbx-0x54e507f6],esi
   14000b23f:	jo     0x14000b1f6
   14000b241:	(bad)  
   14000b242:	mov    edi,esp
   14000b244:	sub    DWORD PTR [rax+0x4544061],ecx
   14000b24a:	leave  
   14000b24b:	adc    ebp,DWORD PTR [rdi+0x18]
   14000b24e:	rex.RXB and DWORD PTR [r14],r8d
   14000b251:	mov    WORD PTR [rdi],cs
   14000b253:	push   rsi
   14000b254:	fiadd  WORD PTR [rsi+0x15635de2]
   14000b25a:	mov    esp,eax
   14000b25c:	sahf   
   14000b25d:	mov    cl,0x21
   14000b25f:	mov    dh,0x17
   14000b261:	movabs ds:0x753c3d9933a76dea,eax
   14000b26a:	and    al,0xbb
   14000b26c:	idiv   esi
   14000b26e:	scas   eax,DWORD PTR es:[rdi]
   14000b26f:	sbb    eax,0x7f43e3bf
   14000b274:	jo     0x14000b23d
   14000b276:	xlat   BYTE PTR ds:[rbx]
   14000b277:	mov    ds,WORD PTR [rdx+rbx*4]
   14000b27a:	cdq    
   14000b27b:	and    eax,esp
   14000b27d:	sub    ah,BYTE PTR [rbp-0x13]
   14000b280:	out    0x88,al
   14000b282:	(bad)  
   14000b283:	ds cmp eax,0xe7b926b7
   14000b289:	fisubr WORD PTR es:[rsp+rdi*4+0x65]
   14000b28e:	rex dec BYTE PTR [rbx-0x41]
   14000b292:	(bad)  
   14000b293:	fcmove st,st(3)
   14000b295:	es ss in al,0x17
   14000b299:	comiss xmm3,DWORD PTR [rcx+0x6768837c]
   14000b2a0:	sbb    BYTE PTR [rdi-0x18e18afa],ah
   14000b2a6:	or     al,0x4e
   14000b2a8:	jrcxz  0x14000b2a1
   14000b2aa:	mov    ebx,DWORD PTR [rcx-0x61f070f6]
   14000b2b0:	rex.WR test BYTE PTR [rcx+0x6f6fe297],r13b
   14000b2b7:	ins    DWORD PTR es:[rdi],dx
   14000b2b8:	inc    DWORD PTR [rdi-0x221e01f1]
   14000b2be:	(bad)  
   14000b2bf:	jp     0x14000b2d4
   14000b2c1:	int3   
   14000b2c2:	popf   
   14000b2c3:	mov    bl,bh
   14000b2c5:	mov    edi,0x225e00af
   14000b2ca:	mov    dl,0xf1
   14000b2cc:	out    0x6f,eax
   14000b2ce:	(bad)  [rax+rsi*2+0x2f5911a6]
   14000b2d5:	(bad)  
   14000b2d6:	lods   al,BYTE PTR es:[rsi]
   14000b2d8:	(bad)  
   14000b2d9:	mov    ebp,0x62b5911
   14000b2de:	mov    WORD PTR [rcx],?
   14000b2e0:	(bad)  
   14000b2e1:	sbb    ah,BYTE PTR [rcx]
   14000b2e3:	retf   
   14000b2e4:	mov    WORD PTR [rax-0x773a9d4f],cs
   14000b2ea:	int    0x33
   14000b2ec:	mov    cl,0xe1
   14000b2ee:	movabs eax,ds:0x92358c4633246358
   14000b2f7:	sbb    DWORD PTR [rdx+0x60c8b022],eax
   14000b2fd:	rcr    DWORD PTR [rcx+0x7e64f6b1],cl
   14000b303:	(bad)
   14000b306:	(bad)  
   14000b307:	scas   eax,DWORD PTR es:[rdi]
   14000b308:	pop    rdx
   14000b309:	cli    
   14000b30a:	loopne 0x14000b2fc
   14000b30c:	lock fcom DWORD PTR [rcx-0x3fec197a]
   14000b313:	or     dl,BYTE PTR [rsp+rbp*1+0x3d]
   14000b317:	rex.WR add BYTE PTR [rcx+riz*4],r10b
   14000b31b:	xor    al,0xb7
   14000b31d:	cmp    ecx,DWORD PTR [rcx-0x3170a608]
   14000b323:	sub    al,ch
   14000b325:	sub    al,0xe2
   14000b327:	cmp    ebp,DWORD PTR [rdx-0x24]
   14000b32a:	pushf  
   14000b32b:	(bad)  
   14000b32c:	fisttp WORD PTR [rcx-0x3ab881cf]
   14000b332:	(bad)  
   14000b333:	pop    rdx
   14000b334:	std    
   14000b335:	mov    dl,ch
   14000b337:	mul    DWORD PTR [rcx]
   14000b339:	scas   eax,DWORD PTR es:[rdi]
   14000b33a:	out    dx,al
   14000b33b:	(bad)  
   14000b33c:	(bad)  
   14000b33d:	es sbb al,0xad
   14000b340:	xchg   edx,eax
   14000b341:	js     0x14000b388
   14000b343:	in     eax,0xde
   14000b345:	jnp    0x14000b2e3
   14000b347:	push   0xffffffffffffffac
   14000b349:	(bad)  
   14000b34a:	icebp  
   14000b34b:	mov    BYTE PTR [rcx+0x1156f9b1],ch
   14000b351:	adc    edi,DWORD PTR [rcx+0x3d]
   14000b354:	stos   DWORD PTR es:[rdi],eax
   14000b355:	add    esp,0xde9704b3
   14000b35b:	movabs al,ds:0xb23e1e358f76cec6
   14000b364:	rex.WRXB out dx,al
   14000b366:	mov    edx,0xff03b6f3
   14000b36b:	cld    
   14000b36c:	loope  0x14000b3ad
   14000b36e:	mov    edx,0xf0b2e1e3
   14000b373:	add    eax,0xb74bb681
   14000b378:	cmp    ah,al
   14000b37a:	jmp    0x14000b333
   14000b37c:	clc    
   14000b37d:	(bad)  
   14000b37e:	push   0xffffffffa6bf363d
   14000b383:	xchg   edi,eax
   14000b384:	adc    BYTE PTR [r10-0x36],dil
   14000b388:	rcl    BYTE PTR [rax],0x14
   14000b38b:	movsxd edi,r13d
   14000b38e:	imul   esp,DWORD PTR [rbx+0x43],0x8bd5feef
   14000b395:	scas   al,BYTE PTR es:[rdi]
   14000b396:	pop    rbp
   14000b397:	mov    esi,0x2b5afa7a
   14000b39c:	jae    0x14000b349
   14000b39e:	jo     0x14000b36e
   14000b3a0:	jrcxz  0x14000b3ec
   14000b3a2:	shr    DWORD PTR [rcx-0x7cb49671],0x73
   14000b3a9:	(bad)  
   14000b3aa:	adc    eax,0x14d0917
   14000b3af:	xor    DWORD PTR [rbx-0x3a0bc4d],esi
   14000b3b5:	mov    cl,0x9f
   14000b3b7:	clc    
   14000b3b8:	(bad)  
   14000b3b9:	cmp    esi,DWORD PTR [rsi]
   14000b3bb:	pop    rbp
   14000b3bc:	mov    eax,0x7dafd8f4
   14000b3c1:	jle    0x14000b3b2
   14000b3c3:	mov    bl,0xf6
   14000b3c5:	add    bh,dl
   14000b3c7:	or     ah,al
   14000b3c9:	sub    r11b,r13b
   14000b3cc:	mov    bh,0x6e
   14000b3ce:	pop    rbx
   14000b3cf:	(bad)  
   14000b3d0:	jo     0x14000b373
   14000b3d2:	or     BYTE PTR [rdi+0x19],ah
   14000b3d5:	xor    DWORD PTR [rdi+0xb],esp
   14000b3d8:	pushf  
   14000b3d9:	lods   al,BYTE PTR gs:[rsi]
   14000b3db:	xor    al,0xc4
   14000b3dd:	sbb    BYTE PTR [rax+rbx*1-0x29ce539d],ch
   14000b3e4:	sbb    ch,BYTE PTR [rax+riz*1+0x746c64b]
   14000b3eb:	(bad)  
   14000b3ec:	xchg   DWORD PTR [rdx-0x73],ebx
   14000b3ef:	shl    ecx,1
   14000b3f1:	push   rsi
   14000b3f2:	imul   edx,ecx,0x50
   14000b3f5:	mov    bl,0xd9
   14000b3f7:	sbb    ch,BYTE PTR [rbp+riz*8-0x67]
   14000b3fb:	xor    eax,0x35943832
   14000b400:	lods   al,BYTE PTR ds:[rsi]
   14000b401:	or     esp,0xdb68191a
   14000b407:	xchg   BYTE PTR [rdx+rbx*2+0x4c],al
   14000b40b:	(bad)  
   14000b40c:	shl    DWORD PTR [rdx],cl
   14000b40e:	sbb    eax,0x6738e65a
   14000b413:	xchg   esi,eax
   14000b414:	ja     0x14000b3c6
   14000b416:	fnstcw WORD PTR [rsi-0x6f]
   14000b419:	mov    esp,0xeb668d35
   14000b41e:	rex push rdi
   14000b420:	rol    ebx,1
   14000b422:	test   BYTE PTR [rdi],ah
   14000b424:	lock pop rcx
   14000b426:	fst    QWORD PTR [rax-0x57]
   14000b429:	xlat   BYTE PTR ds:[rbx]
   14000b42a:	cmp    eax,0xe03394ae
   14000b42f:	retw   
   14000b431:	lods   eax,DWORD PTR ds:[rsi]
   14000b432:	in     al,dx
   14000b433:	movabs ds:0x4e222eb81cdc0765,al
   14000b43c:	sub    DWORD PTR [rbx],ecx
   14000b43e:	adc    eax,0x2ea37a5f
   14000b443:	je     0x14000b42a
   14000b445:	js     0x14000b3f6
   14000b447:	sub    BYTE PTR [rdx],ch
   14000b449:	sahf   
   14000b44a:	in     al,dx
   14000b44c:	add    eax,0xa2295f32
   14000b451:	(bad)  
   14000b452:	(bad)  
   14000b453:	or     BYTE PTR [rax+0x41],dh
   14000b456:	jno    0x14000b4d0
   14000b458:	mov    WORD PTR [rax-0x379df0e8],es
   14000b45e:	lods   eax,DWORD PTR ds:[rsi]
   14000b45f:	(bad)  
   14000b460:	jrcxz  0x14000b472
   14000b462:	adc    DWORD PTR [rcx+rcx*1-0x6be4a4c5],ecx
   14000b469:	rex.B
   14000b46a:	movabs es:0xf6e77da87d363b2e,al
   14000b474:	sti    
   14000b475:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000b476:	(bad)  
   14000b477:	test   DWORD PTR [rdi],0xcf85f2bf
   14000b47d:	rex.WRXB (bad) 
   14000b47f:	out    dx,eax
   14000b480:	je     0x14000b44c
   14000b482:	ret    0x8075
   14000b485:	(bad)  
   14000b486:	add    eax,esi
   14000b488:	add    eax,0xe6e9f001
   14000b48d:	rex.WRXB add rax,0x4f4d76f9
   14000b493:	and    DWORD PTR [rax+rax*2+0x63],esp
   14000b497:	jmp    0x19fe2568e
   14000b49c:	cli    
   14000b49d:	popf   
   14000b49e:	sub    edi,esi
   14000b4a0:	std    
   14000b4a1:	mov    dh,cl
   14000b4a3:	leave  
   14000b4a4:	(bad)  
   14000b4a5:	mov    ah,0x32
   14000b4a7:	mov    bl,0x12
   14000b4a9:	scas   eax,DWORD PTR es:[rdi]
   14000b4aa:	sahf   
   14000b4ab:	rol    BYTE PTR [rbp+0xeaf25a6],cl
   14000b4b1:	out    0x33,eax
   14000b4b3:	push   rax
   14000b4b4:	xchg   DWORD PTR [rdi],esp
   14000b4b6:	add    ebp,DWORD PTR [rcx]
   14000b4b8:	push   rcx
   14000b4b9:	in     eax,0xcb
   14000b4bb:	ja     0x14000b44a
   14000b4bd:	pop    rsi
   14000b4be:	mul    DWORD PTR [rcx-0x148bc171]
   14000b4c4:	fiadd  WORD PTR [rdi-0x72]
   14000b4c7:	cmp    eax,0x5f40aceb
   14000b4cc:	add    DWORD PTR [rax+rcx*1-0x49149d9c],edi
   14000b4d3:	and    eax,edx
   14000b4d5:	mov    eax,DWORD PTR [rax+0x2e]
   14000b4d8:	mov    ah,0xd6
   14000b4da:	pop    rsp
   14000b4db:	(bad)  
   14000b4dc:	mov    edx,0x3588c44e
   14000b4e1:	(bad)  
   14000b4e2:	mov    ch,0xd6
   14000b4e4:	sbb    BYTE PTR [rbx+0x58],ch
   14000b4e7:	mov    dl,0x64
   14000b4e9:	js     0x14000b553
   14000b4eb:	in     eax,0x8a
   14000b4ed:	mov    cl,0x45
   14000b4ef:	movsxd esp,DWORD PTR [rbx+0x3]
   14000b4f2:	in     eax,dx
   14000b4f3:	and    r13d,DWORD PTR [r13+0x3ca2d0d6]
   14000b4fa:	(bad)  
   14000b4fb:	sbb    cl,al
   14000b4fd:	sbb    ah,BYTE PTR [rdx]
   14000b4ff:	(bad)  
   14000b500:	rex.W and al,0xbb
   14000b503:	adc    esi,edi
   14000b505:	sbb    eax,0xee9b6e59
   14000b50a:	sub    bl,BYTE PTR [rax-0x1d]
   14000b50d:	imul   ebx,ebx,0xb24cda69
   14000b513:	test   eax,0xf22d9bbc
   14000b518:	(bad)  
   14000b519:	fs int 0xe
   14000b51c:	xor    al,0x36
   14000b51e:	(bad)  
   14000b51f:	cs and ax,si
   14000b523:	rol    DWORD PTR [rcx+0x79],0x14
   14000b527:	in     eax,dx
   14000b528:	(bad)  
   14000b529:	(bad)  
   14000b52a:	(bad)  
   14000b52b:	(bad)  
   14000b52c:	in     eax,0x74
   14000b52e:	mov    bl,ch
   14000b530:	fisttp QWORD PTR [rax+rax*1+0x7f]
   14000b534:	xor    DWORD PTR [rdi-0x181dfa6a],eax
   14000b53a:	push   rsp
   14000b53b:	popf   
   14000b53c:	(bad)  
   14000b53d:	ja     0x14000b4c7
   14000b53f:	ja     0x14000b5a9
   14000b541:	sbb    DWORD PTR [rbx+rbp*4],ecx
   14000b544:	adc    al,0xb1
   14000b546:	(bad)  
   14000b547:	xlat   BYTE PTR ds:[rbx]
   14000b548:	movabs ds:0xaaf0f21f578a9c56,eax
   14000b551:	(bad)  
   14000b552:	add    eax,0x5be217a9
   14000b557:	(bad)  
   14000b558:	push   rdx
   14000b559:	jne    0x14000b5a1
   14000b55b:	adc    ebp,0x37
   14000b55e:	mov    bl,al
   14000b560:	test   al,0x10
   14000b562:	lods   al,BYTE PTR ds:[rsi]
   14000b563:	(bad)  
   14000b564:	pop    rdx
   14000b565:	rex.B (bad) 
   14000b567:	test   eax,0xc3d99de4
   14000b56c:	int    0xdb
   14000b56e:	(bad)  
   14000b56f:	stc    
   14000b570:	(bad)  
   14000b572:	fistp  QWORD PTR [rdi-0x42602201]
   14000b578:	mov    ch,0x2c
   14000b57a:	jl     0x14000b503
   14000b57c:	loopne 0x14000b5c8
   14000b57e:	ja     0x14000b589
   14000b580:	shr    BYTE PTR [rdi-0x5c1804a4],0x21
   14000b587:	(bad)  
   14000b588:	sub    al,BYTE PTR [rbx-0x1d4297f4]
   14000b58e:	stos   BYTE PTR es:[rdi],al
   14000b58f:	mov    DWORD PTR [rbp+0x6f],esp
   14000b592:	sti    
   14000b593:	(bad)  [rcx-0x70c891a1]
   14000b599:	mov    ebp,0x29301632
   14000b59e:	gs retf 0x6810
   14000b5a2:	push   0x46
   14000b5a4:	repnz or BYTE PTR [rbp+rcx*2-0x71],0xdc
   14000b5aa:	cli    
   14000b5ab:	xchg   ebx,eax
   14000b5ac:	(bad)  
   14000b5ad:	repz cmc 
   14000b5af:	lahf   
   14000b5b0:	pop    rdi
   14000b5b1:	mov    bh,0x65
   14000b5b3:	hlt    
   14000b5b4:	lock mov bl,0xf5
   14000b5b7:	add    bh,dl
   14000b5b9:	or     ah,al
   14000b5bb:	fist   DWORD PTR [rdx+rax*1-0x18]
   14000b5bf:	jns    0x14000b5fa
   14000b5c1:	lock jp 0x14000b5d5
   14000b5c4:	mov    ecx,0xb83c845c
   14000b5c9:	repnz rex.RX (bad) 
   14000b5cc:	(bad)  
   14000b5cd:	pop    rbx
   14000b5ce:	lea    esi,[rbp-0x53726995]
   14000b5d4:	pop    rdx
   14000b5d5:	mov    ecx,0xd9747878
   14000b5da:	shl    al,0xe8
   14000b5dd:	push   0x31acc8de
   14000b5e2:	(bad)
   14000b5e7:	jo     0x14000b5fc
   14000b5e9:	rex.WXB pop r11
   14000b5eb:	rex.X jmp 0x14000b579
   14000b5ee:	(bad)  
   14000b5ef:	loop   0x14000b5dc
   14000b5f1:	xchg   BYTE PTR [rsi],bl
   14000b5f3:	mov    bh,0x6d
   14000b5f5:	(bad)
   14000b5f8:	mov    ?,WORD PTR [rbx]
   14000b5fa:	sub    bh,al
   14000b5fc:	pop    rax
   14000b5fd:	push   rbx
   14000b5fe:	ds rcr cl,0x7a
   14000b602:	sbb    ecx,ebp
   14000b604:	not    BYTE PTR [rcx+0x34]
   14000b607:	fisttp WORD PTR [rsp+rax*2]
   14000b60a:	loopne 0x14000b5b3
   14000b60c:	(bad)  
   14000b60d:	jp     0x14000b5e0
   14000b60f:	push   rax
   14000b610:	mov    edi,esp
   14000b612:	data16 movabs al,ds:0xcfc167740cfc087b
   14000b61c:	rex.RX movabs ds:0x1daf8b02e62d0e6f,al
   14000b626:	sub    BYTE PTR [rbx+0x70],cl
   14000b629:	mov    bh,BYTE PTR [rdx+0x3d437c38]
   14000b62f:	fimul  DWORD PTR [rcx]
   14000b631:	push   rsp
   14000b632:	mov    esi,0x50e08277
   14000b637:	(bad)  
   14000b638:	imul   ebp,DWORD PTR [rsi+0x54],0x10
   14000b63c:	adc    DWORD PTR [rdi],ebp
   14000b63e:	test   al,0xb7
   14000b640:	xchg   BYTE PTR [rdx+0x60abcec0],dl
   14000b646:	add    al,0xb1
   14000b648:	rex.WX and rax,QWORD PTR [rdx+0x6050409d]
   14000b64f:	lods   al,BYTE PTR ds:[rsi]
   14000b650:	(bad)  
   14000b651:	lods   al,BYTE PTR ds:[rsi]
   14000b652:	ret    
   14000b653:	pop    rax
   14000b654:	mov    cl,BYTE PTR [rsi-0x1d]
   14000b657:	loope  0x14000b65c
   14000b659:	bswap  ebx
   14000b65b:	addr32 (bad) 
   14000b65d:	jmp    0x14000b6ce
   14000b65f:	fdiv   st(6),st
   14000b661:	leave  
   14000b662:	sti    
   14000b663:	mov    edi,0x128e07a
   14000b668:	in     al,dx
   14000b669:	jae    0x14000b65c
   14000b66b:	outs   dx,DWORD PTR ds:[rsi]
   14000b66c:	gs jmp 0x15d025ed1
   14000b672:	xor    eax,0xc1f03045
   14000b677:	sbb    ebp,DWORD PTR [rsi-0x6d272486]
   14000b67d:	std    
   14000b67e:	(bad)  
   14000b67f:	xchg   BYTE PTR [rbx+0x16],dh
   14000b682:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000b683:	ds (bad) 
   14000b685:	cmp    ch,dh
   14000b687:	mov    cl,BYTE PTR [rbx+0x7dd4e0c0]
   14000b68d:	hlt    
   14000b68e:	data16 repz out 0x9b,al
   14000b692:	(bad)  
   14000b693:	not    al
   14000b695:	std    
   14000b696:	iret   
   14000b697:	xchg   esi,eax
   14000b698:	or     ebp,eax
   14000b69a:	sub    eax,DWORD PTR [rax-0x8a6dc91]
   14000b6a0:	fisubr WORD PTR [rbp+0x43]
   14000b6a3:	and    dh,BYTE PTR [rip+0xffffffffd62e43d0]        # 0x1162efa79
   14000b6a9:	rex.WX
   14000b6aa:	lea    bx,[rcx+0x78b55898]
   14000b6b1:	fstp   st(2)
   14000b6b3:	mov    cl,0xd1
   14000b6b5:	gs jrcxz 0x14000b63b
   14000b6b8:	mov    eax,DWORD PTR [rsi+0x1b2d9a47]
   14000b6be:	cld    
   14000b6bf:	cmc    
   14000b6c0:	lock add ebx,DWORD PTR [rbx-0x5edc9580]
   14000b6c7:	(bad)
   14000b6cb:	(bad)  
   14000b6cc:	and    ah,BYTE PTR [rsp+rsi*8-0x6e]
   14000b6d0:	movsxd ebx,DWORD PTR [rdx]
   14000b6d2:	(bad)  
   14000b6d3:	mov    ch,0xd1
   14000b6d5:	(bad)  
   14000b6d6:	psubusw mm4,QWORD PTR [rbx-0x533c26f4]
   14000b6dd:	sub    bl,BYTE PTR [rsi]
   14000b6df:	(bad)  
   14000b6e0:	rex.WXB stc 
   14000b6e2:	rex.RB fcmove st,st(5)
   14000b6e5:	std    
   14000b6e6:	push   0x396034f3
   14000b6eb:	repz rex.XB (bad) 
   14000b6ee:	rex.RXB (bad) 
   14000b6f0:	jrcxz  0x14000b759
   14000b6f2:	movabs eax,ds:0x72829cb4198a187b
   14000b6fb:	cmp    BYTE PTR es:[rdi+0x7eae0b98],0xd1
   14000b703:	or     eax,0x7b2ca20a
   14000b708:	push   rbp
   14000b709:	jnp    0x14000b6e9
   14000b70b:	xor    edi,0x68
   14000b70e:	(bad)  
   14000b70f:	jp     0x14000b706
   14000b711:	cs repnz (bad) 
   14000b714:	rex.WRX (bad) 
   14000b716:	cmp    DWORD PTR [rbp-0x58],edi
   14000b719:	fdivrp st(3),st
   14000b71b:	or     dl,ah
   14000b71d:	rex.XB rcr DWORD PTR [r14+0x254aea09],1
   14000b724:	xor    ecx,esi
   14000b726:	data16 (bad) 
   14000b728:	xchg   ebx,eax
   14000b729:	pop    rbx
   14000b72a:	(bad)  
   14000b72b:	xor    eax,0x6b05622a
   14000b730:	sbb    eax,0x9b254562
   14000b735:	sahf   
   14000b736:	(bad)  
   14000b738:	cli    
   14000b739:	in     al,dx
   14000b73a:	out    0xff,eax
   14000b73c:	jbe    0x14000b72d
   14000b73e:	(bad)  
   14000b73f:	ds je  0x14000b73f
   14000b742:	xchg   edi,eax
   14000b743:	out    dx,eax
   14000b744:	sub    eax,0xcc03aebb
   14000b749:	adc    al,BYTE PTR [rax]
   14000b74b:	push   rbx
   14000b74c:	shl    BYTE PTR [rbx-0x17f7d00c],1
   14000b752:	rex.WRXB and al,0xd7
   14000b755:	add    al,0xdd
   14000b757:	(bad)  
   14000b759:	cmc    
   14000b75a:	jmp    0x14000b7bb
   14000b75c:	jnp    0x14000b733
   14000b75e:	sbb    DWORD PTR [rdi+0x1c],esp
   14000b761:	std    
   14000b762:	adc    eax,0x2076dd71
   14000b767:	(bad)  
   14000b768:	pop    rbp
   14000b769:	in     al,dx
   14000b76a:	and    ecx,DWORD PTR [rax-0x26e1b99b]
   14000b770:	ja     0x14000b7e2
   14000b772:	in     al,dx
   14000b773:	ret    
   14000b774:	out    dx,eax
   14000b775:	jl     0x14000b772
   14000b777:	xchg   edi,eax
   14000b778:	scas   al,BYTE PTR es:[rdi]
   14000b779:	(bad)  
   14000b77a:	mov    ?,WORD PTR [rdi]
   14000b77c:	sbb    ebp,DWORD PTR [rdi-0x5b]
   14000b77f:	scas   eax,DWORD PTR es:[rdi]
   14000b780:	add    BYTE PTR [rsi+0x7bdd65c5],bh
   14000b786:	mov    bh,0x35
   14000b788:	adc    DWORD PTR [rdi+0x3],0x2e4637af
   14000b78f:	(bad)  
   14000b790:	jb     0x14000b7f5
   14000b792:	lods   eax,DWORD PTR ds:[rsi]
   14000b793:	sbb    BYTE PTR [rbx+0x65],ah
   14000b796:	ret    
   14000b797:	(bad)  
   14000b798:	adc    eax,0xac361b63
   14000b79d:	pop    rax
   14000b79e:	mov    dl,0x66
   14000b7a0:	in     eax,dx
   14000b7a1:	loopne 0x14000b7eb
   14000b7a3:	fidiv  WORD PTR [rdx+0x542a9316]
   14000b7a9:	rex.XB rcr DWORD PTR [r10+0x58f091],0x31
   14000b7b1:	push   rdx
   14000b7b2:	mov    ch,0xb1
   14000b7b4:	mov    BYTE PTR [rax],cl
   14000b7b6:	pop    rcx
   14000b7b7:	(bad)  
   14000b7b8:	pop    rbx
   14000b7b9:	(bad)  
   14000b7ba:	sahf   
   14000b7bb:	jb     0x14000b7b1
   14000b7bd:	(bad)  
   14000b7be:	mov    eax,es
   14000b7c0:	and    bh,BYTE PTR [rbx-0x7c]
   14000b7c3:	and    eax,0x8b8b1766
   14000b7c8:	mov    ebp,0x997c599c
   14000b7cd:	add    esi,0x46d686e
   14000b7d3:	push   rdx
   14000b7d4:	mov    WORD PTR [rdi],?
   14000b7d6:	(bad)  
   14000b7d7:	clc    
   14000b7d8:	stos   BYTE PTR es:[rdi],al
   14000b7d9:	sbb    eax,0xdc147ba4
   14000b7de:	adc    al,0x5a
   14000b7e0:	rex.WRX sbb QWORD PTR [rbx-0x675fb5f2],0x3
   14000b7e8:	fild   WORD PTR [rcx+0x65b4346e]
   14000b7ee:	mov    WORD PTR [r15+0x63],gs
   14000b7f2:	sub    DWORD PTR [rdi],ebp
   14000b7f4:	and    DWORD PTR [rsi-0x6e45e109],ecx
   14000b7fa:	retf   
   14000b7fb:	jae    0x14000b7ae
   14000b7fd:	push   rbx
   14000b7fe:	rex.RX
   14000b7ff:	pop    r13
   14000b801:	and    al,0xee
   14000b803:	mov    esp,0x5ef4a9a0
   14000b808:	lea    ebp,[rdx]
   14000b80a:	(bad)  
   14000b80b:	mov    cl,0x6
   14000b80d:	adc    eax,0x1aacb483
   14000b812:	imul   edx,ebp,0xffffff98
   14000b815:	int3   
   14000b816:	cdq    
   14000b817:	fdivr  QWORD PTR [rax]
   14000b819:	push   rdi
   14000b81a:	in     al,0x4f
   14000b81c:	in     al,dx
   14000b81d:	jg     0x14000b7e3
   14000b81f:	fdivrp st(0),st
   14000b821:	stos   DWORD PTR es:[rdi],eax
   14000b822:	xlat   BYTE PTR ds:[rbx]
   14000b823:	std    
   14000b824:	rcr    DWORD PTR [rdi+0x1e],cl
   14000b827:	fdivr  QWORD PTR [rdi]
   14000b829:	cmp    DWORD PTR [rbp-0x31],eax
   14000b82c:	rcl    BYTE PTR [rdi+0x2e],cl
   14000b82f:	(bad)  
   14000b830:	mov    bh,0x12
   14000b832:	call   0x146f5024e
   14000b837:	(bad)  
   14000b838:	mov    edi,0xf75edffd
   14000b83d:	sbb    eax,0xf81e371b
   14000b842:	rex.WRB or r10b,BYTE PTR [r15-0x781359ad]
   14000b849:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000b84a:	xchg   edx,eax
   14000b84b:	(bad)  
   14000b84c:	mov    ah,BYTE PTR [rdx-0xa40f07]
   14000b852:	jrcxz  0x14000b851
   14000b854:	push   QWORD PTR [rcx+0x6e877398]
   14000b85a:	mov    dh,BYTE PTR [rip+0x7d232786]        # 0x1bd23dfe6
   14000b860:	add    eax,0xeb2a2df0
   14000b865:	fidivr WORD PTR [rbx+0x3f0096d]
   14000b86b:	and    bh,BYTE PTR [rdi+rbp*4-0x78]
   14000b86f:	or     al,0x8b
   14000b871:	mov    cl,0x62
   14000b873:	mov    WORD PTR [rcx-0x71a9e473],ss
   14000b879:	lods   eax,DWORD PTR ds:[rsi]
   14000b87a:	fbstp  TBYTE PTR [rax+0x759ac97c]
   14000b880:	rex.XB and edi,DWORD PTR [r9-0x25]
   14000b884:	pop    rdx
   14000b885:	xchg   ecx,eax
   14000b886:	push   rsp
   14000b887:	jle    0x14000b8eb
   14000b889:	(bad)  
   14000b88a:	retf   
   14000b88b:	(bad)  
   14000b88c:	mov    edx,DWORD PTR [rsp-0x33]
   14000b890:	fwait
   14000b891:	mov    BYTE PTR [rdx+0x20],cl
   14000b894:	cmp    al,BYTE PTR [rax+rcx*1]
   14000b897:	(bad)  
   14000b898:	adc    eax,0x5f98b5b0
   14000b89d:	or     BYTE PTR [rax],bh
   14000b89f:	imul   ecx,ebx,0x14
   14000b8a2:	sub    ebp,esp
   14000b8a4:	movabs ds:0xa8615f53cd97b28c,eax
   14000b8ad:	mov    ebp,0x41eb9a13
   14000b8b2:	push   rdi
   14000b8b3:	xor    edi,DWORD PTR [rdi]
   14000b8b5:	rcl    DWORD PTR [rbp-0x11f8b13e],cl
   14000b8bb:	cmp    BYTE PTR [rax+rsi*8+0x53],al
   14000b8bf:	xchg   QWORD PTR [rbx+0x745a1ce],r11
   14000b8c6:	retf   0x484e
   14000b8c9:	out    0x95,eax
   14000b8cb:	cs mov eax,0x9aa4aef9
   14000b8d1:	mov    ch,0xe7
   14000b8d3:	mov    ch,0x77
   14000b8d5:	cwde   
   14000b8d6:	cs mov cl,0x6f
   14000b8d9:	(bad)  
   14000b8da:	mov    ebp,0x98dec485
   14000b8df:	cwde   
   14000b8e0:	rex push rsp
   14000b8e2:	rex.B
   14000b8e3:	rex.WRB (bad) 
   14000b8e5:	rex.X (bad) 
   14000b8e7:	sub    al,0x62
   14000b8e9:	sub    eax,0x29a458de
   14000b8ee:	mov    ch,BYTE PTR [rbp+0x20]
   14000b8f1:	cdq    
   14000b8f2:	in     eax,0xd1
   14000b8f4:	cmp    eax,0xfbffa6ab
   14000b8f9:	xlat   BYTE PTR ds:[rbx]
   14000b8fa:	ss out dx,eax
   14000b8fc:	cld    
   14000b8fd:	xchg   edi,eax
   14000b8fe:	fisttp QWORD PTR [rbx-0x2]
   14000b901:	fs inc bx
   14000b905:	lahf   
   14000b906:	sbb    al,0xfc
   14000b908:	mov    ebx,edi
   14000b90a:	(bad)  
   14000b90b:	sbb    bh,BYTE PTR [rip+0xffffffff885eef6b]        # 0xc85fa87c
   14000b911:	imul   edi,DWORD PTR [rbx],0x9512b27
   14000b917:	in     al,0x1f
   14000b919:	mov    esp,0x8dd7f5e1
   14000b91e:	(bad)  
   14000b91f:	in     al,dx
   14000b920:	std    
   14000b921:	mov    DWORD PTR [rax-0x4],edx
   14000b924:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000b925:	adc    ah,dh
   14000b927:	sbb    DWORD PTR [rax-0x1e],esp
   14000b92a:	in     al,dx
   14000b92b:	add    bh,BYTE PTR [rsi]
   14000b92d:	jp     0x14000b9a2
   14000b92f:	test   BYTE PTR [rbx+0x37],0xdf
   14000b933:	lock rcl bh,1
   14000b936:	outs   dx,BYTE PTR ds:[rsi]
   14000b937:	(bad)  
   14000b938:	jmp    0xfeb036d0
   14000b93d:	add    bh,al
   14000b93f:	(bad)  
   14000b940:	xchg   ebx,eax
   14000b941:	jne    0x14000b99e
   14000b943:	mov    bh,0x6d
   14000b945:	rex.B stc 
   14000b947:	add    DWORD PTR [rcx],edx
   14000b949:	mov    ecx,0xad63110a
   14000b94e:	xor    ebx,ebp
   14000b950:	(bad)  
   14000b951:	push   rsi
   14000b952:	fidivr WORD PTR cs:[rax+0x35d2c569]
   14000b959:	jmp    0x14000b972
   14000b95b:	lea    esi,[rdx+rbx*8]
   14000b95e:	(bad)  
   14000b95f:	stos   BYTE PTR es:[rdi],al
   14000b960:	or     ecx,DWORD PTR [rbx*4+0x32c18431]
   14000b967:	shl    edx,1
   14000b969:	mov    eax,DWORD PTR [rbx+rcx*2]
   14000b96c:	(bad)  
   14000b96d:	test   bh,dl
   14000b96f:	test   al,ah
   14000b971:	(bad)  
   14000b972:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000b973:	push   rax
   14000b974:	rcl    BYTE PTR [rax],0xdc
   14000b977:	dec    edx
   14000b979:	loop   0x14000b98e
   14000b97b:	scas   eax,DWORD PTR es:[rdi]
   14000b97c:	xor    al,0x4a
   14000b97e:	xchg   esi,eax
   14000b97f:	cdq    
   14000b980:	(bad)  
   14000b981:	pop    rax
   14000b982:	push   0x77
   14000b984:	mov    al,0x6e
   14000b986:	repnz ds xchg esi,eax
   14000b989:	(bad)  
   14000b98a:	out    dx,al
   14000b98b:	xchg   esi,esp
   14000b98d:	cmp    al,cl
   14000b98f:	cli    
   14000b990:	clc    
   14000b991:	test   eax,0xa8ee29ea
   14000b996:	add    ah,bl
   14000b998:	rex.WR test al,0xe0
   14000b99b:	jae    0x14000b9f0
   14000b99d:	push   rax
   14000b99e:	rex.WRX
   14000b99f:	rex.RB xchg r10d,eax
   14000b9a1:	outs   dx,DWORD PTR ds:[rsi]
   14000b9a2:	ss mov eax,0xdc1baefd
   14000b9a8:	jge    0x14000b999
   14000b9aa:	movabs al,ds:0x6bbac17a1d8928
   14000b9b3:	mov    esi,0x7df00257
   14000b9b8:	push   rsp
   14000b9b9:	sub    al,0xc9
   14000b9bb:	es jnp 0x14000b951
   14000b9be:	fdivr  st,st(5)
   14000b9c0:	lock jmp 0xcb25ff52
   14000b9c6:	outs   dx,BYTE PTR ds:[rsi]
   14000b9c7:	rex.WX clc 
   14000b9c9:	rcl    dl,cl
   14000b9cb:	int3   
   14000b9cc:	xchg   ecx,eax
   14000b9cd:	lods   al,BYTE PTR ds:[rsi]
   14000b9ce:	add    DWORD PTR [rcx-0x7d],ebx
   14000b9d1:	(bad)  
   14000b9d2:	addr32 (bad) 
   14000b9d4:	idiv   DWORD PTR [rdi-0x2]
   14000b9d7:	clc    
   14000b9d8:	and    eax,0xde3eb7d3
   14000b9dd:	cmp    al,0x70
   14000b9df:	clc    
   14000b9e0:	lock in al,0xa4
   14000b9e3:	mul    edx
   14000b9e5:	xor    BYTE PTR [rsi+0x6bbb3b76],al
   14000b9eb:	jo     0x14000ba0d
   14000b9ed:	mov    edi,0xbf5b0bf9
   14000b9f2:	repz xchg esi,eax
   14000b9f4:	out    0xfe,eax
   14000b9f6:	push   rdi
   14000b9f7:	cmp    esi,ebp
   14000b9f9:	xchg   edx,eax
   14000b9fa:	cmp    al,0x81
   14000b9fc:	(bad)  
   14000b9fd:	cld    
   14000b9fe:	(bad)  
   14000b9ff:	xchg   ebp,eax
   14000ba00:	(bad)  
   14000ba01:	push   0xffffffff8d5e47e5
   14000ba06:	jp     0x14000b98b
   14000ba08:	sub    ebp,DWORD PTR [rbp-0x38]
   14000ba0b:	rex.RXB js 0x14000ba53
   14000ba0e:	push   rbp
   14000ba0f:	mov    bh,0xef
   14000ba11:	pop    rsi
   14000ba12:	test   BYTE PTR [rdi-0x11],0x7e
   14000ba16:	xlat   BYTE PTR ds:[rbx]
   14000ba17:	xchg   edi,eax
   14000ba18:	dec    BYTE PTR [rdi+riz*2+0x15f40611]
   14000ba1f:	shl    BYTE PTR [rdi-0x2293b380],0x66
   14000ba26:	adc    bh,0x29
   14000ba29:	cld    
   14000ba2a:	and    BYTE PTR [rax],0xe7
   14000ba2d:	mov    BYTE PTR [rax-0xc9a94a8],cl
   14000ba33:	cdq    
   14000ba34:	imul   edx,DWORD PTR [rdi-0x2a98c693],0xffffffca
   14000ba3b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000ba3c:	sub    ebx,DWORD PTR [rdx+0x3]
   14000ba3f:	test   eax,0xa82b04b5
   14000ba44:	(bad)  
   14000ba45:	add    BYTE PTR [rip+0x60fbdc9b],0xd1        # 0x1a0fc96e7
   14000ba4c:	adc    ecx,eax
   14000ba4e:	and    eax,0x4097d59
   14000ba53:	lahf   
   14000ba54:	and    DWORD PTR [rax+0x6],edi
   14000ba57:	leave  
   14000ba58:	rol    BYTE PTR [rdi],cl
   14000ba5a:	cmp    ecx,DWORD PTR [rdx]
   14000ba5c:	(bad)  
   14000ba5d:	(bad)  
   14000ba5e:	xchg   esp,eax
   14000ba5f:	mov    ebp,0xb00f32ac
   14000ba64:	ins    BYTE PTR es:[rdi],dx
   14000ba65:	jbe    0x14000baa2
   14000ba67:	jmp    0x14000ba21
   14000ba69:	adc    edx,ebx
   14000ba6b:	(bad)  
   14000ba6c:	(bad)  
   14000ba6d:	jnp    0x14000ba89
   14000ba6f:	(bad)  
   14000ba70:	mov    edx,0x57c0f9d8
   14000ba75:	movabs al,ds:0x3bbe802c797e2c13
   14000ba7e:	sbb    DWORD PTR [rcx+rax*4-0x20e9f465],edx
   14000ba85:	jne    0x14000ba09
   14000ba87:	stos   DWORD PTR es:[rdi],eax
   14000ba88:	out    dx,eax
   14000ba89:	jmp    0x14000ba79
   14000ba8b:	jle    0x14000ba29
   14000ba8d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000ba8e:	sbb    ebx,ebp
   14000ba90:	jnp    0x14000ba4c
   14000ba92:	add    al,0xe2
   14000ba94:	mov    al,0x24
   14000ba96:	push   rsp
   14000ba97:	retf   
   14000ba98:	mov    cl,BYTE PTR [rcx]
   14000ba9a:	push   rsi
   14000ba9b:	jg     0x14000bafe
   14000ba9d:	fcmovu st,st(4)
   14000ba9f:	(bad)  
   14000baa0:	(bad)  
   14000baa1:	(bad)  
   14000baa2:	jb     0x14000ba6c
   14000baa4:	rex.WRB add BYTE PTR [r13+0x706b21cd],r15b
   14000baab:	xlat   BYTE PTR ds:[rbx]
   14000baac:	in     al,dx
   14000baad:	xchg   ebp,eax
   14000baae:	fdivr  QWORD PTR [rbx+rsi*2]
   14000bab1:	xor    eax,0x62196487
   14000bab6:	sub    eax,0x8e7421a6
   14000babb:	imul   esi,DWORD PTR [rdi-0x9],0xffffffae
   14000babf:	std    
   14000bac0:	(bad)  
   14000bac1:	imul   edi
   14000bac3:	cmp    eax,0x72726c78
   14000bac8:	data16 rex.RX (bad) 
   14000bacb:	stos   DWORD PTR es:[rdi],eax
   14000bacc:	adc    ecx,ebx
   14000bace:	fild   QWORD PTR [rdx-0x27]
   14000bad1:	sbb    ebx,edx
   14000bad3:	lods   eax,DWORD PTR ds:[rsi]
   14000bad4:	in     al,dx
   14000bad5:	(bad)  
   14000bad6:	fcmovnu st,st(6)
   14000bad8:	jae    0x14000baaf
   14000bada:	in     al,dx
   14000badb:	repz repnz sbb DWORD PTR [rsi-0x1bf946de],0xffffffed
   14000bae4:	pop    rbx
   14000bae5:	(bad)  
   14000bae6:	pop    rcx
   14000bae7:	cmc    
   14000bae8:	mov    edx,0x5a7dce57
   14000baed:	jo     0x14000bb12
   14000baef:	xchg   esp,eax
   14000baf0:	(bad)  
   14000baf1:	loop   0x14000bb6f
   14000baf3:	sbb    BYTE PTR [rsi-0x16],dl
   14000baf6:	pushf  
   14000baf7:	lahf   
   14000baf8:	pushf  
   14000baf9:	sbb    eax,0xfe8fecf9
   14000bafe:	call   0x1780aba60
   14000bb03:	jl     0x14000bb18
   14000bb05:	jno    0x14000bae7
   14000bb07:	fdiv   DWORD PTR [rbx]
   14000bb09:	xchg   esp,eax
   14000bb0a:	mov    esi,0x65017802
   14000bb0f:	(bad)  
   14000bb10:	jmp    0x14000bac8
   14000bb12:	sbb    al,0xf8
   14000bb14:	ds loopne 0x14000bb44
   14000bb17:	and    BYTE PTR [rbx],ch
   14000bb19:	(bad)  
   14000bb1a:	sbb    bl,BYTE PTR [rcx-0x42]
   14000bb1d:	ins    BYTE PTR es:[rdi],dx
   14000bb1e:	icebp  
   14000bb1f:	sar    dl,1
   14000bb21:	or     eax,0x6f37462b
   14000bb26:	pop    rcx
   14000bb27:	mov    dh,0x62
   14000bb29:	movabs al,ds:0xc88af616859ae59d
   14000bb32:	mov    esp,DWORD PTR [rsi-0x25]
   14000bb35:	es nop
   14000bb37:	fisttp DWORD PTR [rax]
   14000bb39:	hlt    
   14000bb3a:	pop    rdx
   14000bb3b:	pop    rsp
   14000bb3c:	(bad)  
   14000bb3d:	cmc    
   14000bb3e:	rex.R in eax,0xf6
   14000bb41:	fwait
   14000bb42:	pop    rax
   14000bb43:	mov    esi,0x4512a9e
   14000bb48:	movabs eax,ds:0xfbb4b00f32ac532d
   14000bb51:	add    al,0x1b
   14000bb53:	mov    edi,DWORD PTR [rbx]
   14000bb55:	imul   esi,DWORD PTR [rsi+0xb7cd1a6],0xa72788b0
   14000bb5f:	hlt    
   14000bb60:	(bad)
   14000bb65:	movabs rsi,0xc3222869fc5a3a72
   14000bb6f:	pop    rdi
   14000bb70:	jbe    0x14000bbd4
   14000bb72:	lea    edi,[rsi+0x37]
   14000bb75:	add    bl,BYTE PTR [rsi+0x23]
   14000bb78:	rcl    DWORD PTR [rdi+0x73],1
   14000bb7b:	test   DWORD PTR [rbx],0xb120aa87
   14000bb81:	rex.RXB
   14000bb82:	rex.RX jge 0x14000bb6f
   14000bb85:	test   eax,0x242a9f09
   14000bb8a:	hlt    
   14000bb8b:	sub    eax,0x336a0c62
   14000bb90:	mov    ah,0x61
   14000bb92:	adc    BYTE PTR [rdx+rdx*4],cl
   14000bb95:	mov    BYTE PTR gs:[rbp+0x40],ch
   14000bb99:	and    esp,edi
   14000bb9b:	mov    esi,0x44f9cbce
   14000bba0:	icebp  
   14000bba1:	cmp    eax,0x412b37ec
   14000bba6:	sub    al,0x6a
   14000bba8:	rex.X sbb DWORD PTR [rdi-0x5f29172b],0xffffffa8
   14000bbb0:	push   rbx
   14000bbb1:	fnstsw WORD PTR [rdi-0x226e371d]
   14000bbb7:	cmp    esi,esi
   14000bbb9:	sbb    eax,0xc8e8743c
   14000bbbe:	xchg   esp,eax
   14000bbbf:	xchg   esi,eax
   14000bbc0:	fimul  WORD PTR [rbx+0x333cf1e8]
   14000bbc6:	lahf   
   14000bbc7:	adc    cl,dl
   14000bbc9:	(bad)  
   14000bbca:	jle    0x14000bbb9
   14000bbcc:	jge    0x14000bbad
   14000bbce:	xor    eax,0xcafdfcf9
   14000bbd3:	iret   
   14000bbd4:	rex.WRX scas al,BYTE PTR es:[rdi]
   14000bbd6:	add    ebx,edi
   14000bbd8:	(bad)  
   14000bbd9:	(bad)  
   14000bbda:	icebp  
   14000bbdb:	(bad)  
   14000bbdc:	lahf   
   14000bbdd:	(bad)  
   14000bbde:	imul   ebp,edi,0x55e077d
   14000bbe4:	out    0x25,eax
   14000bbe6:	xchg   edx,eax
   14000bbe7:	(bad)  
   14000bbe8:	xchg   esp,eax
   14000bbe9:	scas   al,BYTE PTR es:[rdi]
   14000bbea:	stc    
   14000bbeb:	clc    
   14000bbec:	fwait
   14000bbed:	jg     0x14000bbd7
   14000bbef:	(bad)  
   14000bbf0:	mov    bh,0x2
   14000bbf2:	(bad)  
   14000bbf3:	rex.WRX
   14000bbf4:	ss sbb edx,eax
   14000bbf7:	push   rdi
   14000bbf8:	add    BYTE PTR [rdi],ch
   14000bbfa:	nop
   14000bbfb:	rex.WR ins BYTE PTR es:[rdi],dx
   14000bbfd:	(bad)  
   14000bbff:	(bad)  
   14000bc00:	loopne 0x14000bbc9
   14000bc02:	rex.R
   14000bc03:	fs or  eax,0x6b3598c6
   14000bc09:	xchg   edi,eax
   14000bc0a:	movq   mm7,QWORD PTR [rsi]
   14000bc0d:	jae    0x14000bc8b
   14000bc0f:	stc    
   14000bc10:	(bad)  
   14000bc11:	lea    esp,[rbx+0x4b13c84b]
   14000bc17:	(bad)  
   14000bc18:	pop    rsp
   14000bc19:	jl     0x14000bc30
   14000bc1b:	enter  0x8244,0xa5
   14000bc1f:	mov    bh,0x84
   14000bc21:	adc    al,0x5e
   14000bc23:	pushf  
   14000bc24:	mov    ebx,DWORD PTR [rbx+0x4ecb7cc9]
   14000bc2a:	(bad)  
   14000bc2b:	leave  
   14000bc2c:	stos   DWORD PTR es:[rdi],eax
   14000bc2d:	(bad)  
   14000bc2e:	push   rdx
   14000bc2f:	add    edi,DWORD PTR [rsi-0x4dad97ef]
   14000bc35:	(bad)  
   14000bc36:	cmp    al,0xc6
   14000bc38:	jb     0x14000bcb7
   14000bc3a:	test   ch,dh
   14000bc3c:	rcr    DWORD PTR [rdi+0x65],cl
   14000bc3f:	mov    eax,0x6e6d1db9
   14000bc44:	(bad)  
   14000bc45:	push   rsi
   14000bc46:	(bad)  
   14000bc47:	pop    rdx
   14000bc48:	fsub   st(3),st
   14000bc4a:	shl    bh,0x21
   14000bc4d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000bc4e:	out    dx,eax
   14000bc4f:	(bad)  
   14000bc50:	(bad)  
   14000bc51:	jb     0x14000bc65
   14000bc53:	mov    edx,0xc8fddc9
   14000bc58:	jg     0x14000bc81
   14000bc5a:	(bad)  
   14000bc5b:	int    0x94
   14000bc5d:	add    BYTE PTR [r10+rax*1-0x43],r15b
   14000bc62:	repz icebp 
   14000bc64:	outs   dx,DWORD PTR ds:[rsi]
   14000bc65:	je     0x14000bc56
   14000bc67:	or     esp,DWORD PTR [rdx-0x56]
   14000bc6a:	(bad)  
   14000bc6b:	sbb    eax,0x55cd363a
   14000bc70:	lahf   
   14000bc71:	(bad)  
   14000bc72:	(bad)  
   14000bc73:	in     al,0x21
   14000bc75:	(bad)  
   14000bc76:	mov    bh,0xc1
   14000bc78:	loop   0x14000bc9d
   14000bc7a:	(bad)  
   14000bc7b:	repnz es xor al,0x72
   14000bc7f:	(bad)  
   14000bc80:	cs cs loope 0x14000bc67
   14000bc84:	jp     0x14000bc93
   14000bc86:	sti    
   14000bc87:	fs sbb al,0x30
   14000bc8a:	rex.B
   14000bc8b:	rex.WB (bad) 
   14000bc8d:	shl    BYTE PTR [rcx+rbp*4],1
   14000bc90:	rex.WXB
   14000bc91:	rex.XB (bad) 
   14000bc93:	push   r12
   14000bc95:	jrcxz  0x14000bcef
   14000bc97:	(bad)  
   14000bc98:	push   rax
   14000bc99:	fnstcw WORD PTR [rbx+0x78]
   14000bc9c:	iret   
   14000bc9d:	in     al,0xe4
   14000bc9f:	(bad)  
   14000bca0:	in     eax,dx
   14000bca1:	jnp    0x14000bcb1
   14000bca3:	in     al,dx
   14000bca4:	fbstp  TBYTE PTR [rbx-0x20]
   14000bca7:	test   al,0xf7
   14000bca9:	stos   BYTE PTR es:[rdi],al
   14000bcaa:	test   al,0x9b
   14000bcac:	xor    DWORD PTR [rsi+0x1f2b584f],eax
   14000bcb2:	mov    edx,0xe7bfd7ef
   14000bcb7:	fild   DWORD PTR [rdx+0x11]
   14000bcba:	cld    
   14000bcbb:	(bad)  
   14000bcbd:	pop    rbp
   14000bcbe:	mov    ah,0xf8
   14000bcc0:	cmc    
   14000bcc1:	scas   eax,DWORD PTR es:[rdi]
   14000bcc2:	sahf   
   14000bcc3:	std    
   14000bcc4:	rex.RXB jno 0x14000bc75
   14000bcc7:	(bad)  
   14000bcc8:	neg    DWORD PTR [rcx-0x1c]
   14000bccb:	add    edx,DWORD PTR [rax+rbp*1]
   14000bcce:	jle    0x14000bcc7
   14000bcd0:	mov    edi,0xb6f9bdcc
   14000bcd5:	iret   
   14000bcd6:	out    dx,eax
   14000bcd7:	jns    0x14000bcc1
   14000bcd9:	fs jns 0x14000bc5c
   14000bcdc:	mov    esi,0x659e7802
   14000bce1:	(bad)  
   14000bce2:	jmp    0x14000bc9a
   14000bce4:	repz sub bl,0x44
   14000bce8:	mov    ebx,DWORD PTR fs:[rax]
   14000bceb:	and    ebp,DWORD PTR [rbx-0x29]
   14000bcee:	sub    eax,0xc2f73d1f
   14000bcf3:	jne    0x14000bca0
   14000bcf5:	push   rsi
   14000bcf6:	lea    ecx,[rdi]
   14000bcf8:	lea    esp,[rax+0x5]
   14000bcfb:	out    dx,eax
   14000bcfc:	movsxd esi,DWORD PTR [rbx-0x56a7f9a7]
   14000bd02:	sub    bl,BYTE PTR [rax+0x23]
   14000bd05:	std    
   14000bd06:	adc    eax,0xd298e2c2
   14000bd0b:	rex.WXB mov r9b,0x7e
   14000bd0e:	jb     0x14000bd0b
   14000bd10:	jnp    0x14000bd28
   14000bd12:	mov    esi,0xb3d33de6
   14000bd17:	cli    
   14000bd18:	mov    esp,DWORD PTR [rbp+0x2f]
   14000bd1b:	jmp    0x14000bce9
   14000bd1d:	pop    rbp
   14000bd1e:	sub    al,0x9e
   14000bd20:	fcmove st,st(1)
   14000bd22:	(bad)  
   14000bd23:	in     al,dx
   14000bd24:	outs   dx,BYTE PTR ds:[rsi]
   14000bd25:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000bd26:	mov    ebp,0xdc636412
   14000bd2b:	and    dh,BYTE PTR [rcx-0x40888a05]
   14000bd31:	or     BYTE PTR [rsi-0x1536e82],ch
   14000bd37:	adc    al,0x14
   14000bd39:	xor    esi,DWORD PTR [rcx]
   14000bd3b:	(bad)  
   14000bd3c:	lahf   
   14000bd3d:	mov    ebp,ecx
   14000bd3f:	mov    esp,0xb165a2e
   14000bd44:	(bad)  
   14000bd45:	cld    
   14000bd46:	test   al,0x0
   14000bd48:	xchg   esp,eax
   14000bd49:	add    dl,bh
   14000bd4b:	xchg   edx,eax
   14000bd4c:	movabs al,ds:0xfbb9525949a43c08
   14000bd55:	(bad)  
   14000bd56:	or     BYTE PTR [rdi+rbx*1],ah
   14000bd59:	(bad)  
   14000bd5a:	and    cl,BYTE PTR [rbp-0x1b3a02a0]
   14000bd60:	nop
   14000bd61:	addr32 cmp al,0xe1
   14000bd64:	cs out 0x46,al
   14000bd67:	mov    ecx,0xf5f22796
   14000bd6c:	mov    BYTE PTR [rax],bl
   14000bd6e:	xor    BYTE PTR [rsi],dl
   14000bd70:	icebp  
   14000bd71:	movabs eax,ds:0xad0cb7ab0e26281c
   14000bd7a:	mul    BYTE PTR [rcx+0x51ef1058]
   14000bd80:	lea    esi,[rbx-0x47]
   14000bd83:	adc    eax,0x4f4ff726
   14000bd88:	out    dx,eax
   14000bd89:	js     0x14000bdf7
   14000bd8b:	iret   
   14000bd8c:	mov    esi,0x1ef7bb3d
   14000bd91:	(bad)  
   14000bd92:	mov    al,0xd1
   14000bd94:	xor    DWORD PTR [rdi+rdi*1-0x3406cc33],eax
   14000bd9b:	sti    
   14000bd9c:	(bad)  
   14000bd9e:	mov    ebp,0xfeaea4a7
   14000bda3:	mov    ecx,0x7cc06b92
   14000bda8:	clc    
   14000bda9:	(bad)  
   14000bdaa:	push   rdi
   14000bdab:	cld    
   14000bdac:	push   rsi
   14000bdad:	cmp    edi,DWORD PTR [rdi]
   14000bdaf:	lock pop rbp
   14000bdb1:	cmp    BYTE PTR [rdi+0x63],ch
   14000bdb4:	rex.W push rbp
   14000bdb6:	loop   0x14000bdf5
   14000bdb8:	push   rsp
   14000bdba:	in     eax,0x91
   14000bdbc:	lods   eax,DWORD PTR ds:[rsi]
   14000bdbd:	(bad)  
   14000bdbe:	std    
   14000bdbf:	rex.WRXB out dx,al
   14000bdc1:	sti    
   14000bdc2:	pop    rsp
   14000bdc3:	stos   BYTE PTR es:[edi],al
   14000bdc5:	jnp    0x14000bdc3
   14000bdc7:	fs mov dl,0x1b
   14000bdca:	std    
   14000bdcb:	jbe    0x14000bdad
   14000bdcd:	out    0x49,eax
   14000bdcf:	es mov dh,0x6e
   14000bdd2:	pop    rbx
   14000bdd3:	(bad)  
   14000bdd4:	mov    esp,0x2357845d
   14000bdd9:	rex.RX push rsi
   14000bddb:	lods   al,BYTE PTR ds:[rsi]
   14000bddc:	pop    rax
   14000bddd:	xor    dh,BYTE PTR [rsi+rbp*8+0x79]
   14000bde1:	imul   eax,edi,0xffffffd7
   14000bde4:	lahf   
   14000bde5:	mov    esi,0x1a6d4c78
   14000bdea:	or     esp,DWORD PTR [rdi]
   14000bdec:	cwde   
   14000bded:	(bad)  
   14000bdee:	adc    eax,0xe55552b7
   14000bdf4:	or     DWORD PTR [rcx-0x3353a254],esp
   14000bdfa:	mov    esp,ecx
   14000bdfc:	jnp    0x14000bdea
   14000bdfe:	mov    esi,0x3df8093c
   14000be03:	jmp    0x14000be34
   14000be05:	xor    al,0xe8
   14000be07:	mov    dl,0xce
   14000be09:	fadd   st(3),st
   14000be0b:	repnz bnd jle 0x14000bde5
   14000be0f:	int3   
   14000be10:	fmul   QWORD PTR [rbx+0x63]
   14000be13:	rol    BYTE PTR [rcx+0x76],0x31
   14000be17:	shl    BYTE PTR [rdx],1
   14000be19:	pop    rsp
   14000be1a:	xor    esp,DWORD PTR [rip+0xffffffffddf78a4f]        # 0x11df8486f
   14000be20:	or     al,0x94
   14000be22:	xchg   DWORD PTR [rcx+0x93f0498],esp
   14000be28:	fstp   QWORD PTR [rcx-0x7a3209b8]
   14000be2e:	adc    al,0x9e
   14000be30:	mov    eax,DWORD PTR [rip+0x2e21ce3d]        # 0x16e228c73
   14000be36:	mov    dl,0x7a
   14000be38:	movabs eax,ds:0x3543e02bf2e43745
   14000be41:	xor    DWORD PTR [rbx],ebp
   14000be43:	mov    dh,0x5
   14000be45:	(bad)
   14000be48:	xor    al,0x31
   14000be4a:	cdq    
   14000be4b:	ss hlt 
   14000be4d:	retf   0xcb48
   14000be50:	and    BYTE PTR [rsi],dh
   14000be52:	xchg   DWORD PTR [rdi+riz*4],ebp
   14000be55:	and    edx,DWORD PTR [rbx]
   14000be57:	cld    
   14000be58:	cdq    
   14000be59:	(bad)  
   14000be5a:	xor    BYTE PTR [rdi],cl
   14000be5c:	mov    ch,0xcf
   14000be5e:	add    DWORD PTR [rbx+0x69],esp
   14000be61:	test   al,0x4
   14000be63:	ja     0x14000bec4
   14000be65:	ret    0xdefe
   14000be68:	rex.RB clc 
   14000be6a:	jnp    0x14000bead
   14000be6c:	cmp    al,0x18
   14000be6e:	adc    edi,DWORD PTR [rdx-0x6f1cba7f]
   14000be74:	jle    0x14000bea7
   14000be76:	push   rax
   14000be77:	(bad)  
   14000be78:	(bad)  
   14000be79:	and    dl,BYTE PTR [rcx+rax*8+0x5b838365]
   14000be80:	xchg   esi,eax
   14000be81:	outs   dx,BYTE PTR ds:[rsi]
   14000be82:	fidivr DWORD PTR [rax-0x66551f0a]
   14000be88:	in     eax,dx
   14000be89:	(bad)  
   14000be8a:	out    dx,al
   14000be8b:	fidiv  DWORD PTR [rdi-0x2bc10889]
   14000be91:	stc    
   14000be92:	lahf   
   14000be93:	out    dx,al
   14000be94:	je     0x14000be93
   14000be96:	fwait
   14000be97:	(bad)  
   14000be98:	mov    esp,0x793fe6e7
   14000be9d:	in     al,dx
   14000be9e:	(bad)  
   14000be9f:	(bad)  
   14000bea0:	sti    
   14000bea1:	rex.WRXB (bad) 
   14000bea3:	xlat   BYTE PTR ds:[rbx]
   14000bea4:	xlat   BYTE PTR ds:[rbx]
   14000bea5:	ror    cl,0xca
   14000bea8:	rex.WRB loopne 0x14000beaa
   14000beab:	js     0x14000bf1b
   14000bead:	loopne 0x14000be62
   14000beaf:	in     eax,dx
   14000beb0:	pushf  
   14000beb1:	stos   DWORD PTR es:[rdi],eax
   14000beb2:	or     ecx,DWORD PTR [r9+rcx*1+0x6e209b8b]
   14000beba:	fstp   DWORD PTR [rax-0x42]
   14000bebd:	fdivr  QWORD PTR [rbx]
   14000bebf:	(bad)  
   14000bec0:	sub    BYTE PTR [rbp-0xb8b376d],bl
   14000bec6:	adc    eax,0x132c73c0
   14000becb:	pop    rbx
   14000becc:	outs   dx,DWORD PTR ds:[rsi]
   14000becd:	sbb    DWORD PTR [rip+0xffffffff8de031fd],eax        # 0xcde0f0d0
   14000bed3:	(bad)  
   14000bed4:	mov    WORD PTR [rip+0xffffffff9e6ed45a],ds        # 0xde6f9334
   14000beda:	repz mov dl,0xd
   14000bedd:	stos   DWORD PTR es:[rdi],eax
   14000bede:	(bad)  
   14000bedf:	cmp    DWORD PTR [rdi-0x7],ebp
   14000bee2:	rex.WX mov bpl,0x6
   14000bee5:	(bad)  
   14000bee6:	and    BYTE PTR [rdx],ch
   14000bee8:	push   0x6de18846
   14000beed:	mov    ah,0xec
   14000beef:	xor    esi,ebp
   14000bef1:	rex.WRXB mov WORD PTR [r13+0x56],?
   14000bef5:	iret   
   14000bef6:	jmp    0x1425f33c2
   14000befb:	jnp    0x14000bead
   14000befd:	movabs eax,ds:0xb2c58104295f8b3d
   14000bf06:	xchg   ebx,eax
   14000bf07:	or     DWORD PTR [rcx-0x89c0e75],edi
   14000bf0d:	xor    edx,ebx
   14000bf0f:	fimul  DWORD PTR [rsi]
   14000bf11:	ret    
   14000bf12:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000bf13:	add    ebp,DWORD PTR [rbx]
   14000bf15:	jmp    0x1169f7d1b
   14000bf1a:	mov    edx,esp
   14000bf1c:	jl     0x14000bf97
   14000bf1e:	xor    al,0x8c
   14000bf20:	loope  0x14000bf4c
   14000bf22:	(bad)  
   14000bf23:	rex.XB pop r10
   14000bf25:	scas   eax,DWORD PTR es:[rdi]
   14000bf26:	pushf  
   14000bf27:	lods   al,BYTE PTR ds:[rsi]
   14000bf28:	rex.WX js 0x14000beee
   14000bf2b:	add    al,0x9e
   14000bf2d:	mov    dl,0xe7
   14000bf2f:	out    dx,al
   14000bf30:	xchg   edi,eax
   14000bf31:	(bad)  
   14000bf32:	ror    ch,1
   14000bf34:	(bad)  
   14000bf35:	in     eax,0x1d
   14000bf37:	rex.W pushf 
   14000bf39:	(bad)  
   14000bf3a:	push   rcx
   14000bf3b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000bf3c:	hlt    
   14000bf3d:	(bad)  
   14000bf3e:	(bad)  
   14000bf3f:	mov    esp,DWORD PTR [rsi]
   14000bf41:	xor    eax,0x60fd5915
   14000bf46:	shl    DWORD PTR [rbx],1
   14000bf48:	mov    ah,0x69
   14000bf4a:	xor    DWORD PTR [rsi],esi
   14000bf4c:	rex.RXB
   14000bf4d:	repz (bad) 
   14000bf4f:	rex.WRX xabort 0xdf
   14000bf53:	jp     0x14000bf82
   14000bf55:	mov    bh,0xb5
   14000bf57:	pop    rsi
   14000bf58:	(bad)  
   14000bf59:	(bad)  
   14000bf5a:	mov    al,0x26
   14000bf5c:	mov    cl,0x9d
   14000bf5e:	loope  0x14000bfa4
   14000bf60:	rex.W push 0xfffffffffffffffd
   14000bf63:	(bad)  
   14000bf64:	loop   0x14000bfb3
   14000bf66:	jl     0x14000bf54
   14000bf68:	ret    
   14000bf69:	or     bl,BYTE PTR [rbp-0x1e]
   14000bf6c:	add    eax,0x9123e135
   14000bf71:	xchg   DWORD PTR [rsp+rax*1],eax
   14000bf74:	mov    cl,0xfe
   14000bf76:	shr    DWORD PTR [rcx+0x38325ed2],0xb0
   14000bf7d:	gs leave 
   14000bf7f:	imul   ebx,DWORD PTR [rbx],0x5f2df7c6
   14000bf85:	mov    dh,0xe3
   14000bf87:	xchg   ecx,eax
   14000bf88:	popf   
   14000bf89:	(bad)  
   14000bf8a:	imul   bh
   14000bf8c:	(bad)  
   14000bf8d:	ins    BYTE PTR es:[rdi],dx
   14000bf8e:	jl     0x14000bf79
   14000bf90:	jg     0x14000bffb
   14000bf92:	std    
   14000bf93:	mov    ebx,0x5546ba6f
   14000bf98:	fistp  QWORD PTR [rdi+0x7daef7fd]
   14000bf9e:	lock mov ecx,0x4e4e22bd
   14000bfa4:	outs   dx,BYTE PTR ds:[rsi]
   14000bfa5:	std    
   14000bfa6:	in     al,dx
   14000bfa7:	(bad)  
   14000bfa8:	pop    rbx
   14000bfa9:	scas   eax,DWORD PTR es:[rdi]
   14000bfaa:	jns    0x14000bf4f
   14000bfac:	popf   
   14000bfad:	adc    bh,ah
   14000bfaf:	rex cld 
   14000bfb1:	rex.X (bad) 
   14000bfb3:	mov    esp,0x56320e8c
   14000bfb8:	int3   
   14000bfb9:	mov    edx,0x54938c
   14000bfbe:	std    
   14000bfbf:	adc    al,ah
   14000bfc1:	cmp    DWORD PTR [rcx+rcx*4+0x1bcb7ad],edx
   14000bfc8:	hlt    
   14000bfc9:	out    0xc4,eax
   14000bfcb:	cwde   
   14000bfcc:	and    DWORD PTR [rcx],edx
   14000bfce:	movsxd ecx,esi
   14000bfd0:	cmp    ebp,DWORD PTR [rdi-0x1d]
   14000bfd3:	stos   BYTE PTR es:[rdi],al
   14000bfd4:	xchg   edi,eax
   14000bfd5:	pop    rbp
   14000bfd6:	xor    bh,BYTE PTR [rsi]
   14000bfd8:	fisubr WORD PTR [rax+0x67]
   14000bfdb:	cdq    
   14000bfdc:	ror    DWORD PTR [rax-0x18],cl
   14000bfdf:	test   DWORD PTR [rbx*2+0x618d13f8],edi
   14000bfe6:	sbb    ch,BYTE PTR [rdi]
   14000bfe8:	or     BYTE PTR [ecx+0x3d],ch
   14000bfec:	pop    rbx
   14000bfed:	mov    ecx,0x2fb2b1f3
   14000bff2:	(bad)  
   14000bff3:	mov    esi,0x94f7e6ee
   14000bff8:	rex fsub DWORD PTR [rsi+0x33ac7329]
   14000bfff:	ja     0x14000bfb4
   14000c001:	jl     0x14000bff9
   14000c003:	pop    rsi
   14000c004:	push   rsi
   14000c005:	jmp    0x14000c044
   14000c007:	fcom   st(6)
   14000c009:	xor    al,bl
   14000c00b:	xor    edi,DWORD PTR [rcx+0x6a]
   14000c00e:	ja     0x14000bfef
   14000c010:	(bad)  
   14000c011:	push   rdx
   14000c012:	(bad)  
   14000c013:	pop    rcx
   14000c014:	std    
   14000c015:	jb     0x14000bfc9
   14000c017:	(bad)  
   14000c018:	jmp    0x14000bfc1
   14000c01a:	rex.WX
   14000c01b:	ds push rdi
   14000c01d:	add    al,0xf0
   14000c01f:	(bad)  
   14000c020:	scas   al,BYTE PTR es:[rdi]
   14000c021:	rex.RXB hlt 
   14000c023:	push   rbp
   14000c024:	and    al,0x5f
   14000c026:	mov    esp,0x8b874ddf
   14000c02b:	test   al,0xb
   14000c02d:	xchg   ebp,eax
   14000c02e:	jl     0x14000bfb1
   14000c030:	call   0x15653db48
   14000c035:	pop    rcx
   14000c036:	add    BYTE PTR [rbp-0x3d],dh
   14000c039:	xchg   bl,bh
   14000c03b:	jns    0x14000bfc3
   14000c03d:	shl    dl,cl
   14000c03f:	rex.WXB idiv BYTE PTR [r11-0x720cb308]
   14000c046:	je     0x14000bffb
   14000c048:	ss xchg edx,eax
   14000c04a:	pop    rcx
   14000c04b:	(bad)  
   14000c04c:	fcom   DWORD PTR [rax]
   14000c04e:	xor    ah,BYTE PTR [rax]
   14000c050:	adc    eax,0xffb5507d
   14000c055:	add    ebx,DWORD PTR [rdx-0x3a]
   14000c058:	js     0x14000c0b9
   14000c05a:	or     DWORD PTR [rbx+0x7f],eax
   14000c05d:	jge    0x14000c0c7
   14000c05f:	and    dl,ah
   14000c061:	hlt    
   14000c062:	jne    0x14000c038
   14000c064:	(bad)  
   14000c065:	(bad)  
   14000c066:	pop    rdx
   14000c067:	rex.RB pop r12
   14000c069:	sbb    al,0xfd
   14000c06b:	out    dx,eax
   14000c06c:	adc    al,0xca
   14000c06e:	cmp    BYTE PTR [rsi],cl
   14000c070:	push   rax
   14000c071:	loope  0x14000c053
   14000c073:	sahf   
   14000c074:	rex.XB (bad) 
   14000c076:	sahf   
   14000c077:	js     0x14000c05d
   14000c079:	mov    DWORD PTR [rbp-0x60e0f1b9],edi
   14000c07f:	push   rsi
   14000c080:	scas   eax,DWORD PTR es:[rdi]
   14000c081:	stos   BYTE PTR es:[rdi],al
   14000c082:	stos   BYTE PTR es:[rdi],al
   14000c083:	(bad)  
   14000c084:	stos   DWORD PTR es:[rdi],eax
   14000c085:	cli    
   14000c086:	(bad)  
   14000c087:	(bad)  
   14000c089:	(bad)  
   14000c08a:	(bad)  
   14000c08b:	jo     0x14000c089
   14000c08d:	jns    0x14000c047
   14000c08f:	rex.R sahf 
   14000c091:	mov    dh,0x5c
   14000c093:	add    esi,edx
   14000c095:	rcr    DWORD PTR [rbx-0x794c05d2],1
   14000c09b:	sbb    al,0x3f
   14000c09d:	(bad)  
   14000c09e:	push   rbp
   14000c09f:	sar    DWORD PTR [rcx],0x87
   14000c0a2:	(bad)  
   14000c0a3:	sbb    al,0x3e
   14000c0a5:	mov    dh,0xf8
   14000c0a7:	xchg   esi,eax
   14000c0a8:	lahf   
   14000c0a9:	js     0x14000c086
   14000c0ab:	push   rdi
   14000c0ac:	scas   al,BYTE PTR es:[rdi]
   14000c0ad:	(bad)  
   14000c0ae:	rex.WRX stos BYTE PTR es:[rdi],al
   14000c0b0:	and    BYTE PTR [rax+0x73c01ef],ch
   14000c0b6:	adc    ch,BYTE PTR [rsi+rdi*1+0x2d5f415b]
   14000c0bd:	(bad)  
   14000c0be:	(bad)  
   14000c0bf:	xor    ecx,esi
   14000c0c1:	pop    rax
   14000c0c2:	mov    ebx,0xd64b82f4
   14000c0c7:	lods   eax,DWORD PTR ds:[rsi]
   14000c0c8:	sbb    DWORD PTR [rdx],ebx
   14000c0ca:	int    0x9b
   14000c0cc:	push   0x4
   14000c0ce:	outs   dx,DWORD PTR ds:[rsi]
   14000c0cf:	adc    al,BYTE PTR [rbp+0x15]
   14000c0d2:	shr    BYTE PTR [rip+0x5a961b11],0xf5        # 0x19a96dbea
   14000c0d9:	pop    rsi
   14000c0da:	add    al,0x37
   14000c0dc:	hlt    
   14000c0dd:	sbb    bh,bh
   14000c0df:	mov    edx,0x7c2c9fdb
   14000c0e4:	(bad)
   14000c0e7:	sahf   
   14000c0e8:	pop    rbx
   14000c0e9:	sub    al,0x3b
   14000c0eb:	cdq    
   14000c0ec:	sar    BYTE PTR [rbx],1
   14000c0ee:	pop    rcx
   14000c0ef:	cmp    edi,ecx
   14000c0f1:	push   rbp
   14000c0f2:	(bad)  
   14000c0f3:	fwait
   14000c0f4:	(bad)  
   14000c0f5:	movabs al,ds:0x1387ddcf42303679
   14000c0fe:	pop    rbx
   14000c0ff:	std    
   14000c100:	movabs ds:0x23f7625ed4a7ead1,eax
   14000c109:	ret    
   14000c10a:	pop    rdi
   14000c10b:	rex.RX loopne 0x14000c149
   14000c10e:	jmp    QWORD PTR [rbx+rbp*4]
   14000c111:	(bad)  
   14000c112:	cli    
   14000c113:	pop    rax
   14000c114:	jb     0x14000c0e9
   14000c116:	jae    0x14000c10f
   14000c118:	add    ecx,edx
   14000c11a:	mov    dl,0x9a
   14000c11c:	fist   DWORD PTR [rdx-0x1b7d34bf]
   14000c122:	rcr    r9d,cl
   14000c125:	or     al,0x32
   14000c127:	retf   
   14000c128:	jrcxz  0x14000c110
   14000c12a:	or     ch,BYTE PTR [rsi+0x6a]
   14000c12d:	std    
   14000c12e:	pop    rdi
   14000c12f:	sbb    al,0x69
   14000c131:	xchg   BYTE PTR [rsi+rbx*2-0x7cebcc9a],dl
   14000c138:	sbb    BYTE PTR [rcx+0x6a862cc0],ch
   14000c13e:	scas   al,BYTE PTR es:[rdi]
   14000c13f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000c140:	(bad)  
   14000c141:	fwait
   14000c142:	retf   
   14000c143:	add    al,0x71
   14000c145:	push   rsp
   14000c146:	mov    bl,0x37
   14000c148:	lea    ecx,[rcx]
   14000c14a:	(bad)  
   14000c14b:	test   BYTE PTR [rcx+0x64],ch
   14000c14e:	add    cl,0x54
   14000c151:	mov    ch,BYTE PTR [rax+0x6814060a]
   14000c157:	test   DWORD PTR [rdx+0x3a],r10d
   14000c15b:	rex.RX push rdi
   14000c15d:	lea    ecx,[rbp+0x1918ad8c]
   14000c163:	jns    0x14000c161
   14000c165:	rcr    ebp,0x7b
   14000c168:	(bad)  
   14000c169:	jg     0x14000c163
   14000c16b:	mov    DWORD PTR [rbp-0x22],edi
   14000c16e:	xchg   ebp,eax
   14000c16f:	xlat   BYTE PTR ds:[rbx]
   14000c170:	loopne 0x14000c13f
   14000c172:	imul   edx,edi,0xffffffbe
   14000c175:	jmp    0x14000c1a6
   14000c177:	jg     0x14000c1f0
   14000c179:	(bad)  
   14000c17a:	(bad)  
   14000c17b:	jl     0x14000c17c
   14000c17d:	fistp  QWORD PTR [rdi+rsi*2]
   14000c180:	push   rdi
   14000c181:	leave  
   14000c182:	xor    edx,DWORD PTR [rbx-0x28f4bf65]
   14000c188:	mov    esi,0x3f1d91af
   14000c18d:	xchg   edi,eax
   14000c18e:	pop    rdx
   14000c18f:	jrcxz  0x14000c1d6
   14000c191:	pop    bp
   14000c193:	cmp    ebp,DWORD PTR [rbx+0x58]
   14000c196:	push   rbx
   14000c197:	jbe    0x14000c176
   14000c199:	sbb    r11,rsi
   14000c19c:	mov    esi,0x32c53802
   14000c1a1:	mov    cl,0xf5
   14000c1a3:	xchg   esi,eax
   14000c1a4:	push   rdi
   14000c1a5:	add    ebx,DWORD PTR [rbx-0x3b]
   14000c1a8:	enter  0xd0e8,0x50
   14000c1ac:	mov    ebx,0xcfcbd979
   14000c1b1:	pop    rsp
   14000c1b2:	mov    edi,0x63c5ccf1
   14000c1b7:	sahf   
   14000c1b8:	add    BYTE PTR [rax+rcx*1+0x44],bh
   14000c1bc:	cwde   
   14000c1bd:	xor    eax,0x69c43582
   14000c1c2:	push   rbx
   14000c1c3:	adc    esp,ebx
   14000c1c5:	cmc    
   14000c1c6:	pop    rsp
   14000c1c7:	jge    0x14000c1cb
   14000c1c9:	ja     0x14000c158
   14000c1cb:	(bad)  
   14000c1cc:	rex.WRXB
   14000c1cd:	mov    dil,0x75
   14000c1d0:	(bad)  
   14000c1d1:	rex movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000c1d3:	jp     0x14000c171
   14000c1d5:	rex.WXB sar QWORD PTR [r10],0xb9
   14000c1d9:	xchg   DWORD PTR [rbp+0x73],edx
   14000c1dc:	ja     0x14000c211
   14000c1de:	scas   al,BYTE PTR es:[rdi]
   14000c1df:	ja     0x14000c204
   14000c1e1:	and    ebp,DWORD PTR [rbx]
   14000c1e3:	sub    BYTE PTR [rbx],0xe9
   14000c1e6:	movabs eax,ds:0x3a6e73de9b6aaa8
   14000c1ef:	clc    
   14000c1f0:	fnsave [rcx+0xe9fd398]
   14000c1f6:	icebp  
   14000c1f7:	mov    esi,0x5f8b074e
   14000c1fc:	mov    eax,0x2c6bfae8
   14000c201:	fild   QWORD PTR [rbp-0x5f4702a5]
   14000c207:	xchg   di,ax
   14000c209:	stos   BYTE PTR es:[rdi],al
   14000c20a:	shl    BYTE PTR [rdi],0x7c
   14000c20d:	shr    DWORD PTR [rax-0x6d446d72],0x8a
   14000c214:	(bad)  
   14000c215:	sbb    bl,BYTE PTR [rcx]
   14000c217:	fs pop rcx
   14000c219:	(bad)  
   14000c21a:	stc    
   14000c21b:	ins    DWORD PTR es:[rdi],dx
   14000c21c:	rex.RX imul r10d,DWORD PTR [rdi-0xd],0x7987fc89
   14000c224:	jo     0x14000c216
   14000c226:	jl     0x14000c24c
   14000c228:	iret   
   14000c229:	enter  0x1cb3,0x51
   14000c22d:	add    esi,0x5c
   14000c230:	addr32 cli 
   14000c232:	mov    BYTE PTR [rax],bl
   14000c234:	jo     0x14000c248
   14000c236:	adc    eax,DWORD PTR [rbp+0xa744c91]
   14000c23c:	(bad)  
   14000c23d:	sub    ebx,eax
   14000c23f:	js     0x14000c29f
   14000c241:	sbb    eax,0xa0465fa1
   14000c246:	(bad)  
   14000c247:	add    eax,0xd97ae2
   14000c24c:	adc    DWORD PTR [rcx-0x54],eax
   14000c24f:	(bad)
   14000c254:	jrcxz  0x14000c224
   14000c256:	add    cl,BYTE PTR [rdi-0x20]
   14000c259:	rex.R pop rax
   14000c25b:	mov    edi,0x15aaf579
   14000c260:	stos   DWORD PTR es:[rdi],eax
   14000c261:	xchg   esi,eax
   14000c262:	sub    eax,0x47a1ec7d
   14000c267:	jbe    0x14000c256
   14000c269:	fnsave [rbp-0x38]
   14000c26c:	loopne 0x14000c26b
   14000c26e:	sti    
   14000c26f:	xlat   BYTE PTR ds:[rbx]
   14000c270:	mov    esi,0xa0df2feb
   14000c275:	(bad)  
   14000c276:	jg     0x14000c2eb
   14000c278:	out    0x1f,eax
   14000c27a:	mov    esi,0x7773ff69
   14000c27f:	(bad)
   14000c282:	sub    DWORD PTR [rbx+rsi*8+0x51],edi
   14000c286:	ret    0x8ed9
   14000c289:	fistp  WORD PTR [rax+0x55]
   14000c28c:	shr    BYTE PTR [rdx],0x98
   14000c28f:	rol    ebp,0x4d
   14000c292:	ret    
   14000c293:	xchg   ecx,eax
   14000c294:	(bad)  
   14000c295:	xor    edi,DWORD PTR [rsi]
   14000c297:	pop    di
   14000c299:	add    DWORD PTR [rdx+riz*1-0x34852767],ebx
   14000c2a0:	adc    al,dh
   14000c2a2:	jae    0x14000c264
   14000c2a4:	sbb    eax,esp
   14000c2a6:	sbb    bl,cl
   14000c2a8:	jl     0x14000c270
   14000c2aa:	fisub  DWORD PTR [rbp+0x57]
   14000c2ad:	mov    esp,0xde44fd72
   14000c2b2:	mov    dh,0x99
   14000c2b4:	rex.WXB int 0x37
   14000c2b7:	push   0xffffffffffffff90
   14000c2b9:	mov    esp,0xb35f7b56
   14000c2be:	imul   BYTE PTR [rcx+0x75a81f3e]
   14000c2c4:	in     eax,0x85
   14000c2c6:	cmp    BYTE PTR [rdi],bh
   14000c2c8:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000c2c9:	pop    rsi
   14000c2ca:	retf   0x3c9b
   14000c2cd:	test   DWORD PTR [rdx-0x37],ebx
   14000c2d0:	mov    eax,es
   14000c2d2:	mov    al,0xec
   14000c2d4:	movsxd esp,DWORD PTR [rbx]
   14000c2d6:	dec    esp
   14000c2d8:	clc    
   14000c2d9:	(bad)  
   14000c2da:	std    
   14000c2db:	or     al,0xe
   14000c2dd:	(bad)  
   14000c2de:	test   ah,ch
   14000c2e0:	add    ah,BYTE PTR [rax-0x80]
   14000c2e3:	retf   0xf458
   14000c2e6:	repnz outs dx,DWORD PTR ds:[rsi]
   14000c2e8:	loope  0x14000c337
   14000c2ea:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000c2eb:	mov    WORD PTR [rdi+rdi*8],cs
   14000c2ee:	shl    DWORD PTR [rax-0x3eeeb928],1
   14000c2f4:	pop    rdi
   14000c2f5:	je     0x14000c359
   14000c2f7:	iret   
   14000c2f8:	jle    0x14000c2a1
   14000c2fa:	out    0xee,eax
   14000c2fc:	(bad)  
   14000c2fd:	xchg   bh,bl
   14000c2ff:	imul   ebp,DWORD PTR [rax],0x3eacade5
   14000c305:	rep lods eax,DWORD PTR ds:[rsi]
   14000c307:	ds leave 
   14000c309:	(bad)  
   14000c30a:	(bad)  
   14000c30b:	push   0xffffffffffffffbe
   14000c30d:	stos   BYTE PTR es:[rdi],al
   14000c30e:	pop    rdx
   14000c30f:	sub    DWORD PTR [rbx+0x1b],eax
   14000c312:	sbb    DWORD PTR [rdx+0x33],esp
   14000c315:	enter  0x3472,0x6f
   14000c319:	repz adc eax,0x3ff96ff3
   14000c31f:	in     eax,dx
   14000c320:	out    dx,eax
   14000c321:	(bad)
   14000c324:	push   0xffffffffe6d43236
   14000c329:	mov    cl,0xbe
   14000c32b:	mov    edi,0x64957c07
   14000c330:	fld    QWORD PTR [rbx-0x3c]
   14000c333:	jmp    0x14000c369
   14000c335:	push   0x45
   14000c337:	icebp  
   14000c338:	loope  0x14000c2e4
   14000c33a:	(bad)  
   14000c33b:	movabs eax,ds:0xca05c40cd14e3054
   14000c344:	rol    ebp,0xf3
   14000c347:	test   eax,0x78c256
   14000c34c:	pminsw mm4,QWORD PTR [rdx+rsi*8-0xb73dfa]
   14000c354:	xor    BYTE PTR [rbp-0x35],dh
   14000c357:	addr32 (bad) 
   14000c359:	xchg   esi,eax
   14000c35a:	xchg   dl,dl
   14000c35c:	jnp    0x14000c378
   14000c35e:	rex.XB jns 0x14000c31f
   14000c361:	stc    
   14000c362:	cld    
   14000c363:	xor    edx,edi
   14000c365:	(bad)  
   14000c366:	sub    eax,0xd1f4783f
   14000c36b:	sti    
   14000c36c:	(bad)  
   14000c36d:	(bad)  [rip+0x6afb333b]        # 0x1aafbf6ae
   14000c373:	mov    esp,0xa7e6b45c
   14000c378:	ds (bad) 
   14000c37a:	fstp   TBYTE PTR [rbx]
   14000c37c:	(bad)  
   14000c37d:	lock cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000c37f:	(bad)  
   14000c380:	mov    esp,0xed2cb0a2
   14000c385:	(bad)  
   14000c386:	sbb    ah,BYTE PTR [rcx-0x68]
   14000c389:	and    ah,cl
   14000c38b:	mov    dh,dl
   14000c38d:	movabs eax,ds:0xf4b19e958c4d5241
   14000c396:	adc    eax,0x899029c0
   14000c39b:	lods   eax,DWORD PTR ds:[rsi]
   14000c39c:	mov    bh,0x5c
   14000c39e:	(bad)  
   14000c39f:	cld    
   14000c3a0:	mov    esp,0xd5acb318
   14000c3a5:	(bad)  
   14000c3a6:	repz sub ebx,DWORD PTR [rsi+0x7e]
   14000c3aa:	(bad)  
   14000c3ab:	(bad)  
   14000c3ac:	imul   esp,DWORD PTR [rdi-0x71],0x6612732d
   14000c3b3:	push   rsp
   14000c3b4:	mov    dh,BYTE PTR [rip+0x7a7cdc1]        # 0x147a8917b
   14000c3ba:	jle    0x14000c41e
   14000c3bc:	or     DWORD PTR [rdi],ebp
   14000c3be:	mov    ch,0xe7
   14000c3c0:	(bad)  
   14000c3c1:	(bad)  
   14000c3c2:	sub    esp,ecx
   14000c3c4:	(bad)  
   14000c3c5:	xor    esp,ecx
   14000c3c7:	addr32 (bad) 
   14000c3c9:	in     eax,dx
   14000c3ca:	add    ah,al
   14000c3cc:	pop    rbx
   14000c3cd:	cmp    al,0x6b
   14000c3cf:	in     eax,0x2e
   14000c3d1:	es mov edx,0xddd4b1b7
   14000c3d7:	(bad)  
   14000c3d8:	sbb    DWORD PTR [rcx+0x5],ebx
   14000c3db:	pop    rsp
   14000c3dc:	adc    DWORD PTR [rdi],edi
   14000c3de:	fst    DWORD PTR [rbx-0x3c]
   14000c3e1:	cli    
   14000c3e2:	int3   
   14000c3e3:	test   DWORD PTR [rsi-0x23],esi
   14000c3e6:	out    dx,al
   14000c3e7:	jno    0x14000c3d9
   14000c3e9:	(bad)  
   14000c3ea:	movabs al,ds:0x889fab757b531d3b
   14000c3f3:	mov    esi,0x9dfab0a7
   14000c3f8:	or     dl,bh
   14000c3fa:	jns    0x14000c452
   14000c3fc:	lahf   
   14000c3fd:	(bad)  
   14000c3fe:	clc    
   14000c3ff:	movsxd ebx,DWORD PTR [rdx-0x71]
   14000c402:	cmp    al,0x87
   14000c404:	sub    al,0x82
   14000c406:	fbld   TBYTE PTR [rsi+0x4c]
   14000c409:	data16 addr32 jno 0x14000c450
   14000c40d:	jrcxz  0x14000c456
   14000c40f:	cmp    al,bl
   14000c411:	pop    rsi
   14000c412:	mov    ebp,DWORD PTR [rcx+0x34]
   14000c415:	enter  0x1cf2,0xb1
   14000c419:	sbb    DWORD PTR [rdx+0x4c],ebp
   14000c41c:	sbb    ch,ch
   14000c41e:	adc    ecx,edi
   14000c420:	pop    rcx
   14000c421:	jl     0x14000c47e
   14000c423:	or     edx,DWORD PTR [rax]
   14000c425:	(bad)  
   14000c426:	std    
   14000c427:	(bad)  
   14000c428:	js     0x14000c488
   14000c42a:	and    eax,0x3ce24f84
   14000c42f:	(bad)  
   14000c430:	add    DWORD PTR [rcx-0x36],ebx
   14000c433:	cmp    al,BYTE PTR [rsi]
   14000c435:	imul   ebp,DWORD PTR [rdi-0x1e],0xffffffda
   14000c439:	pushf  
   14000c43a:	es xchg ecx,eax
   14000c43c:	add    DWORD PTR [rdx+rax*1],0x50
   14000c440:	xor    eax,0xa02f449e
   14000c445:	ss mov dl,0xb
   14000c448:	and    DWORD PTR [rdx+rsi*2],esp
   14000c44b:	adc    al,dl
   14000c44d:	(bad)  
   14000c44e:	adc    eax,0x74be3258
   14000c453:	je     0x14000c446
   14000c455:	fsubr  st,st(0)
   14000c457:	shl    BYTE PTR [rbx+0xf],1
   14000c45a:	cmp    al,0xba
   14000c45c:	xlat   BYTE PTR ds:[ebx]
   14000c45e:	adc    edi,ebx
   14000c460:	add    al,0xf1
   14000c462:	out    dx,eax
   14000c463:	pop    rbx
   14000c464:	sti    
   14000c465:	rcr    DWORD PTR [rdi],cl
   14000c467:	jg     0x14000c3fe
   14000c469:	sub    bh,BYTE PTR [rdi+0x6f03f3b6]
   14000c46f:	(bad)  
   14000c470:	cmp    dh,BYTE PTR [rbp+0x17d3cf57]
   14000c476:	out    0xd8,eax
   14000c478:	unpcklps xmm2,xmm1
   14000c47b:	mov    ch,0xf2
   14000c47d:	sbb    BYTE PTR [rbp+rcx*8+0x6943385c],cl
   14000c484:	rex.X shl BYTE PTR [rbx],cl
   14000c487:	xchg   esp,eax
   14000c488:	mov    esi,0x32167802
   14000c48d:	mov    cl,0xf5
   14000c48f:	xchg   esi,eax
   14000c490:	sbb    al,0xb8
   14000c492:	(bad)  
   14000c493:	mov    eax,0x8d918c56
   14000c498:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000c499:	lods   eax,DWORD PTR ds:[rsi]
   14000c49a:	pop    rcx
   14000c49b:	jb     0x14000c462
   14000c49d:	imul   edx,esi,0xffffffaf
   14000c4a0:	outs   dx,DWORD PTR ds:[rsi]
   14000c4a1:	or     eax,0xd58bb9e4
   14000c4a6:	lods   eax,DWORD PTR ds:[rsi]
   14000c4a7:	and    al,BYTE PTR [rcx]
   14000c4a9:	cld    
   14000c4aa:	add    BYTE PTR [rsi],dh
   14000c4ac:	stc    
   14000c4ad:	lock adc eax,esp
   14000c4b0:	cwde   
   14000c4b1:	stc    
   14000c4b2:	mov    cl,0x7c
   14000c4b4:	cwde   
   14000c4b5:	push   rsp
   14000c4b6:	popf   
   14000c4b7:	pop    rsp
   14000c4b8:	jle    0x14000c4db
   14000c4ba:	in     eax,0x76
   14000c4bc:	(bad)  
   14000c4bd:	xchg   BYTE PTR [rax],al
   14000c4bf:	pop    rcx
   14000c4c0:	jl     0x14000c49e
   14000c4c2:	out    0x38,al
   14000c4c4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000c4c5:	cdq    
   14000c4c6:	jg     0x14000c528
   14000c4c8:	cmc    
   14000c4c9:	(bad)  
   14000c4ca:	cmp    eax,0x9f6fd621
   14000c4cf:	rex.WRXB test al,0xe4
   14000c4d2:	rex.WXB (bad) 
   14000c4d4:	jg     0x14000c517
   14000c4d6:	ucomiss xmm2,xmm14
   14000c4da:	out    dx,al
   14000c4db:	(bad)  
   14000c4dc:	or     ch,dh
   14000c4de:	jle    0x14000c46a
   14000c4e0:	test   ebx,0x5acbf168
   14000c4e6:	lods   al,BYTE PTR ds:[rsi]
   14000c4e7:	(bad)  
   14000c4e8:	iret   
   14000c4e9:	(bad)  
   14000c4ea:	(bad)  
   14000c4eb:	mov    esp,0xff746d7e
   14000c4f0:	mov    esp,0x63d7849
   14000c4f5:	and    dl,BYTE PTR [rdx]
   14000c4f7:	jge    0x14000c4fb
   14000c4f9:	mov    dh,0x11
   14000c4fb:	movabs rsi,0xdfc45b240db789bc
   14000c505:	(bad)  
   14000c506:	fmulp  st(4),st
   14000c508:	push   rdi
   14000c509:	fisubr DWORD PTR [rdi-0x1be5c93e]
   14000c50f:	lea    ebx,[rcx+rcx*8]
   14000c512:	mov    dl,0x9e
   14000c514:	mov    ebx,0x9365f043
   14000c519:	adc    cl,BYTE PTR [rax-0x3defddec]
   14000c51f:	sbb    al,0x17
   14000c521:	es cli 
   14000c523:	(bad)  
   14000c524:	rex.WR clc 
   14000c526:	sub    BYTE PTR [rdx-0x3b3e5220],ah
   14000c52c:	mov    cl,0x79
   14000c52e:	rex.RX add eax,0x42690f8c
   14000c534:	scas   eax,DWORD PTR es:[rdi]
   14000c535:	and    DWORD PTR [rdi+0x29],0x93a40743
   14000c53c:	js     0x14000c52c
   14000c53e:	jrcxz  0x14000c50a
   14000c540:	fisub  WORD PTR [rdx]
   14000c542:	rex.WX sub QWORD PTR [rcx-0x7e73b798],rsp
   14000c549:	pop    rsp
   14000c54a:	xor    DWORD PTR [rbp-0x795a2371],eax
   14000c550:	lods   al,BYTE PTR ds:[rsi]
   14000c551:	sub    r9,rbx
   14000c554:	ss sahf 
   14000c556:	jge    0x14000c552
   14000c558:	(bad)  
   14000c55a:	and    eax,0x723d164b
   14000c55f:	out    dx,eax
   14000c560:	ret    
   14000c561:	cmp    edi,DWORD PTR [rbx]
   14000c563:	jae    0x14000c502
   14000c565:	out    dx,eax
   14000c566:	adc    ah,bh
   14000c568:	pop    rcx
   14000c569:	imul   edi,DWORD PTR [rsi-0x16],0xffffffe3
   14000c56d:	mov    edi,0x6f03f3b8
   14000c572:	mov    edx,0x4d5fd4e7
   14000c577:	fistp  WORD PTR [rsp+rbx*2-0x5f]
   14000c57b:	add    eax,0x2607ece1
   14000c580:	xlat   BYTE PTR ds:[rbx]
   14000c581:	jrcxz  0x14000c5e0
   14000c583:	(bad)  
   14000c584:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000c585:	rex.WRXB (bad) 
   14000c587:	cli    
   14000c588:	rex.XB pop r15
   14000c58a:	add    DWORD PTR [rsp+rsi*4+0x65bd6c4c],ebx
   14000c591:	sbb    eax,esi
   14000c593:	jle    0x14000c5a6
   14000c595:	cmp    DWORD PTR [rdi],edx
   14000c597:	movsxd esp,esp
   14000c599:	retf   0x9d57
   14000c59c:	mov    ebp,0x2d979ce1
   14000c5a1:	pop    rbx
   14000c5a2:	ficom  WORD PTR [rcx]
   14000c5a4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000c5a5:	mov    WORD PTR [rsi],gs
   14000c5a7:	push   0xffffffffb2a7d1a8
   14000c5ac:	(bad)  
   14000c5ad:	and    al,0xb7
   14000c5af:	(bad)  
   14000c5b0:	(bad)  
   14000c5b1:	hlt    
   14000c5b2:	(bad)  
   14000c5b3:	cmp    eax,0x58903f26
   14000c5b8:	push   rsp
   14000c5b9:	loopne 0x14000c60a
   14000c5bb:	nop
   14000c5bc:	mov    dl,0x89
   14000c5be:	icebp  
   14000c5bf:	addr32 mov esi,0xc7931fe5
   14000c5c5:	fcomp  DWORD PTR [rsp+rdi*8+0x3d]
   14000c5c9:	stos   DWORD PTR es:[rdi],eax
   14000c5ca:	retf   0x61af
   14000c5cd:	(bad)  
   14000c5ce:	lea    eax,[rcx-0x2617d44]
   14000c5d4:	cmp    al,0x91
   14000c5d6:	(bad)  
   14000c5d7:	(bad)  
   14000c5d8:	(bad)  
   14000c5d9:	(bad)  
   14000c5da:	(bad)  
   14000c5db:	pop    rbp
   14000c5dd:	adc    DWORD PTR [rbp+0x29],ebx
   14000c5e0:	mov    ch,0x17
   14000c5e2:	rcr    DWORD PTR [rdi-0x6c],0x54
   14000c5e6:	sub    ebp,esi
   14000c5e8:	cmp    BYTE PTR [rdi],dl
   14000c5ea:	shr    dh,0x6a
   14000c5ed:	rex.R pop rdi
   14000c5ef:	popf   
   14000c5f0:	loope  0x14000c5a1
   14000c5f2:	adc    r8b,r12b
   14000c5f5:	pushf  
   14000c5f6:	jle    0x14000c65d
   14000c5f8:	cmc    
   14000c5f9:	push   rbx
   14000c5fa:	lods   al,BYTE PTR ds:[rsi]
   14000c5fb:	outs   dx,DWORD PTR ds:[rsi]
   14000c5fc:	sub    eax,0x32c84d64
   14000c601:	jbe    0x14000c66a
   14000c603:	push   rdi
   14000c604:	lock test eax,0xd3a61fc1
   14000c60a:	sbb    al,0xa5
   14000c60c:	xchg   ecx,eax
   14000c60d:	(bad)  
   14000c60e:	xor    BYTE PTR [rcx-0x72],bl
   14000c611:	int    0x32
   14000c613:	pop    rsp
   14000c614:	and    bh,cl
   14000c616:	call   0x19749d804
   14000c61b:	jae    0x14000c5f1
   14000c61d:	add    BYTE PTR [rcx-0x7b],cl
   14000c620:	and    eax,0x9823511e
   14000c625:	popf   
   14000c626:	punpcklwd mm0,DWORD PTR [rcx]
   14000c629:	ss mov edx,0x9a88a2f6
   14000c62f:	pop    rax
   14000c630:	(bad)  
   14000c631:	and    BYTE PTR [rax-0x7a74db86],cl
   14000c637:	rex.RXB jno 0x14000c679
   14000c63a:	and    al,0xa6
   14000c63c:	or     ebx,ecx
   14000c63e:	push   rax
   14000c63f:	cmp    ch,ah
   14000c641:	lods   eax,DWORD PTR ds:[rsi]
   14000c642:	(bad)  
   14000c643:	mov    esp,0x808e4652
   14000c648:	rex.WRX loopne 0x14000c651
   14000c64b:	xchg   esp,eax
   14000c64c:	xor    BYTE PTR [rbx-0x40],bh
   14000c64f:	sbb    esp,DWORD PTR [rbp-0x37]
   14000c652:	stos   BYTE PTR es:[rdi],al
   14000c653:	mov    cl,0xd1
   14000c655:	loope  0x14000c61c
   14000c657:	out    0xf,eax
   14000c659:	ds repnz cmc 
   14000c65c:	xchg   DWORD PTR [rdi+0x1e],esi
   14000c65f:	fdivr  DWORD PTR [rbx+0x8]
   14000c662:	sar    ebp,0xaf
   14000c665:	xor    eax,0x7c3753f
   14000c66a:	jbe    0x14000c6ea
   14000c66c:	loopne 0x14000c63b
   14000c66e:	jg     0x14000c66e
   14000c670:	pop    rsp
   14000c671:	pop    rsp
   14000c672:	push   rdi
   14000c673:	fisttp WORD PTR [rax-0x44]
   14000c676:	(bad)  
   14000c677:	xor    al,0x50
   14000c679:	xchg   BYTE PTR [rax-0xac7d732],dh
   14000c67f:	sbb    dl,bh
   14000c681:	xor    edi,ebp
   14000c683:	sub    eax,0xa48cfe53
   14000c688:	scas   eax,DWORD PTR es:[rdi]
   14000c689:	add    BYTE PTR [rsi+0x42],cl
   14000c68c:	es mov dh,0xde
   14000c68f:	jb     0x14000c6a2
   14000c691:	lock imul esp,DWORD PTR [rdx-0x34],0xffffffe2
   14000c696:	gs sub eax,edi
   14000c699:	xchg   BYTE PTR [rdi-0x5],bl
   14000c69c:	sbb    eax,0xb45c6d67
   14000c6a1:	mov    eax,0xa808ead1
   14000c6a6:	xor    DWORD PTR [rcx],eax
   14000c6a8:	(bad)  
   14000c6a9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000c6aa:	xlat   BYTE PTR ds:[rbx]
   14000c6ab:	nop
   14000c6ac:	and    edx,DWORD PTR [rcx]
   14000c6ae:	and    ebx,DWORD PTR [rcx-0x6fa1d9f8]
   14000c6b4:	pop    rcx
   14000c6b5:	sub    eax,0x411e4fc6
   14000c6ba:	xchg   ebp,eax
   14000c6bb:	retf   0x97a3
   14000c6be:	fidiv  DWORD PTR [rbx-0x6de2f426]
   14000c6c4:	retf   
   14000c6c5:	(bad)  
   14000c6c6:	(bad)  
   14000c6c7:	out    dx,al
   14000c6c8:	(bad)  
   14000c6c9:	shl    esp,cl
   14000c6cb:	sbb    DWORD PTR [esi-0x13],ebp
   14000c6cf:	(bad)  
   14000c6d0:	movabs eax,ds:0x6bf5e61679930973
   14000c6d9:	or     al,BYTE PTR [rax+0x67]
   14000c6dc:	ret    0xba4a
   14000c6df:	rex.RB lods eax,DWORD PTR ds:[rsi]
   14000c6e1:	add    DWORD PTR [rdi-0x59],0x800ddba0
   14000c6e8:	(bad)  
   14000c6e9:	cmp    edx,ecx
   14000c6eb:	ret    0xf397
   14000c6ee:	sbb    esi,DWORD PTR [rdi+0x2a]
   14000c6f1:	stos   DWORD PTR es:[rdi],eax
   14000c6f2:	out    dx,eax
   14000c6f3:	movabs eax,ds:0x69d0a87600b3e908
   14000c6fc:	or     al,0x10
   14000c6fe:	mov    ebx,0xc11e6cf5
   14000c703:	(bad)  
   14000c704:	(bad)  
   14000c705:	jge    0x14000c6a6
   14000c707:	(bad)  
   14000c708:	icebp  
   14000c709:	(bad)  
   14000c70a:	lea    esi,[rdi-0x345d1f0e]
   14000c710:	xor    DWORD PTR [rcx-0x7d],edi
   14000c713:	rex.RX sahf 
   14000c715:	and    edi,DWORD PTR [rcx+0x1e]
   14000c718:	retf   0x3578
   14000c71b:	pop    rsp
   14000c71c:	jl     0x14000c6a7
   14000c71e:	mov    ebx,0xa207dd4e
   14000c723:	adc    cl,BYTE PTR [rbx-0x60]
   14000c726:	ret    
   14000c727:	fcmovnb st,st(4)
   14000c729:	imul   edi,DWORD PTR [rsi-0x6c],0x2aeab44
   14000c730:	stos   BYTE PTR es:[rdi],al
   14000c731:	xchg   ebp,eax
   14000c732:	(bad)  
   14000c733:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000c734:	pop    rsi
   14000c735:	lock rex.RX xor BYTE PTR [rsi],r11b
   14000c739:	mov    esp,0x4a3cf0fa
   14000c73e:	adc    DWORD PTR [rbx-0x5a],edx
   14000c741:	(bad)  
   14000c742:	stos   BYTE PTR es:[rdi],al
   14000c743:	ja     0x14000c6e9
   14000c745:	sub    edx,DWORD PTR [rdx+rax*8+0x1]
   14000c749:	ins    DWORD PTR es:[rdi],dx
   14000c74a:	fs push rdx
   14000c74c:	retf   0x8cd0
   14000c74f:	(bad)  
   14000c750:	rex.WR sub BYTE PTR [rsi],r10b
   14000c753:	rol    BYTE PTR [rsi+0x3b984520],cl
   14000c759:	movabs al,ds:0xfccd5b60dea06331
   14000c762:	mov    ebx,?
   14000c764:	iret   
   14000c765:	fcmovbe st,st(0)
   14000c767:	jp     0x14000c7d1
   14000c769:	(bad)  
   14000c76a:	out    dx,al
   14000c76b:	sbb    eax,0x4fbe3c8f
   14000c770:	(bad)  
   14000c771:	mov    edi,0xdd4ff56b
   14000c776:	jo     0x14000c786
   14000c778:	lock lahf 
   14000c77a:	jbe    0x14000c7f9
   14000c77c:	loopne 0x14000c74b
   14000c77e:	iret   
   14000c77f:	pushf  
   14000c780:	jns    0x14000c7bd
   14000c782:	xor    QWORD PTR [r14+0x32],rdx
   14000c786:	movabs al,ds:0xcd2ba88c1394570c
   14000c78f:	push   rsp
   14000c790:	in     eax,dx
   14000c791:	hlt    
   14000c792:	cmp    eax,0x802be963
   14000c797:	sub    BYTE PTR [ebx],dl
   14000c79a:	pop    rbx
   14000c79b:	outs   dx,DWORD PTR ds:[rsi]
   14000c79c:	mov    ecx,0x18977816
   14000c7a1:	imul   ecx,edi,0xffffffd8
   14000c7a4:	mov    dl,0x6e
   14000c7a6:	(bad)
   14000c7a9:	sahf   
   14000c7aa:	cwde   
   14000c7ab:	xor    BYTE PTR [rip+0xffffffff94f1126b],cl        # 0xd4f1da1c
   14000c7b1:	or     BYTE PTR [rbp-0x5b90b8d6],bh
   14000c7b7:	jp     0x14000c755
   14000c7b9:	add    BYTE PTR [r11+0x362a7709],dil
   14000c7c0:	jg     0x14000c803
   14000c7c2:	pop    rsp
   14000c7c3:	lahf   
   14000c7c4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000c7c5:	hlt    
   14000c7c6:	push   rsp
   14000c7c7:	lods   al,BYTE PTR ds:[rsi]
   14000c7c8:	(bad)  
   14000c7c9:	rex.B (bad) 
   14000c7cb:	in     al,0x4c
   14000c7cd:	jae    0x14000c809
   14000c7cf:	lahf   
   14000c7d0:	gs std 
   14000c7d2:	(bad)  
   14000c7d3:	(bad)  
   14000c7d4:	push   0x57d8090c
   14000c7d9:	ror    bl,1
   14000c7db:	jmp    0x14000c7e0
   14000c7dd:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000c7df:	push   rsp
   14000c7e0:	(bad)  
   14000c7e1:	xchg   edi,eax
   14000c7e2:	call   FWORD PTR [rax+0x6c]
   14000c7e5:	loopne 0x14000c820
   14000c7e7:	(bad)  
   14000c7e8:	(bad)  
   14000c7e9:	(bad)  
   14000c7ea:	jb     0x14000c822
   14000c7ec:	xchg   BYTE PTR [rcx],al
   14000c7ee:	popf   
   14000c7ef:	fdivr  DWORD PTR [rax+0x5ef763e3]
   14000c7f5:	and    al,0xf7
   14000c7f7:	retf   0x7fb8
   14000c7fa:	mov    edx,0xe71a405f
   14000c7ff:	(bad)  
   14000c800:	(bad)  
   14000c801:	rcr    BYTE PTR [rdi-0x59db0a46],0xf3
   14000c808:	sbb    dh,BYTE PTR [rsi-0x4cdc2b16]
   14000c80e:	sbb    al,0xc8
   14000c810:	(bad)  
   14000c811:	jrcxz  0x14000c7f9
   14000c813:	rex.RB call QWORD PTR [r9+0x4694636e]
   14000c81a:	movabs ds:0xaf92b1b326396481,eax
   14000c823:	test   DWORD PTR [rcx-0x2e241dcd],0xf69a743b
   14000c82d:	xchg   edi,eax
   14000c82e:	push   rsi
   14000c82f:	rcl    DWORD PTR [rsi+0x51],1
   14000c832:	mov    dl,0xb8
   14000c834:	rex.WRB
   14000c835:	lock (bad) 
   14000c837:	(bad)  
   14000c838:	enter  0x2920,0xcc
   14000c83c:	sar    BYTE PTR [rax],cl
   14000c83e:	ret    0xc4cc
   14000c841:	outs   dx,BYTE PTR ds:[rsi]
   14000c842:	(bad)  
   14000c843:	rex.WRXB out 0xc2,al
   14000c846:	rex.X cmp esp,DWORD PTR [rbp+0x51033ec6]
   14000c84d:	xor    al,BYTE PTR [rdx-0x53]
   14000c850:	add    BYTE PTR [rdx],cl
   14000c852:	(bad)  
   14000c853:	sub    esp,DWORD PTR [rdx+0x25]
   14000c856:	test   BYTE PTR [rdx],al
   14000c858:	ds mov eax,0x87e36208
   14000c85e:	sub    dl,BYTE PTR [rdx-0x57]
   14000c861:	lea    esp,[rax+0x8b557c6]
   14000c867:	jmp    0x14000c8b7
   14000c869:	pop    rdi
   14000c86a:	(bad)  
   14000c86b:	cmp    dh,BYTE PTR ds:[rsi]
   14000c86e:	xor    bh,BYTE PTR [rdi+rbx*8+0x3d]
   14000c872:	imul   DWORD PTR [rbp-0x11]
   14000c875:	(bad)  
   14000c876:	jne    0x14000c836
   14000c878:	add    ebp,DWORD PTR [rdi+0x775f572b]
   14000c87e:	ret    
   14000c87f:	iret   
   14000c880:	in     al,dx
   14000c881:	mov    edx,0x4e87cdfe
   14000c886:	leave  
   14000c887:	(bad)
   14000c88a:	(bad)  
   14000c88b:	sbb    BYTE PTR [rdx+0x40],dh
   14000c88e:	icebp  
   14000c88f:	pop    rdx
   14000c890:	movabs ds:0x1326d36653a54e28,al
   14000c899:	(bad)  
   14000c89a:	enter  0x2949,0x81
   14000c89e:	mov    esi,0x329a7802
   14000c8a3:	mov    cl,0xf5
   14000c8a5:	(bad)  
   14000c8a6:	add    edi,DWORD PTR [rbx+rcx*1-0x6a53a948]
   14000c8ad:	repz fnstcw WORD PTR cs:[rdx+rdi*8-0x52a8341e]
   14000c8b6:	sub    eax,0x292e7549
   14000c8bb:	test   DWORD PTR [rdi],edx
   14000c8bd:	jmp    0x14000c8b6
   14000c8bf:	jrcxz  0x14000c905
   14000c8c1:	sahf   
   14000c8c2:	fs in  eax,dx
   14000c8c4:	movsxd eax,DWORD PTR [rip+0xffffffffcf32192b]        # 0x10f32e1f5
   14000c8ca:	movabs ds:0xf9caa07a2a5ed657,al
   14000c8d3:	xlat   BYTE PTR ds:[rbx]
   14000c8d4:	movsxd edi,edi
   14000c8d6:	push   rcx
   14000c8d7:	fxch   st(5)
   14000c8d9:	jmp    0x11c6788bb
   14000c8de:	fild   WORD PTR [rbp-0x29fb90f4]
   14000c8e4:	rol    DWORD PTR [rbx],1
   14000c8e6:	jl     0x14000c8c5
   14000c8e8:	(bad)  
   14000c8e9:	rex.XB in eax,0xf2
   14000c8ec:	xchg   edi,eax
   14000c8ed:	(bad)  
   14000c8ee:	push   0x15
   14000c8f0:	jge    0x14000c885
   14000c8f2:	mov    cl,0x94
   14000c8f4:	(bad)  
   14000c8f5:	out    0xf5,al
   14000c8f7:	mov    edx,DWORD PTR [rcx+rdx*8-0x19]
   14000c8fb:	imul   ebp,DWORD PTR [rsi],0x7f
   14000c8fe:	stos   BYTE PTR es:[rdi],al
   14000c8ff:	in     eax,0x8f
   14000c901:	(bad)  
   14000c902:	mov    ebx,0x1031bf3a
   14000c907:	ret    0xf427
   14000c90a:	mov    cl,0x2d
   14000c90c:	rcr    eax,1
   14000c90e:	add    eax,0x6f81bf56
   14000c913:	mov    ?,edx
   14000c915:	rex.WRXB out 0x2d,al
   14000c918:	fdivr  QWORD PTR [rbx]
   14000c91a:	cld    
   14000c91b:	sub    ch,BYTE PTR [rbx+rsi*4+0x49]
   14000c91f:	xor    ecx,edi
   14000c921:	xor    DWORD PTR [rcx-0x7a],edi
   14000c924:	mov    bh,0x41
   14000c926:	jns    0x14000c94c
   14000c928:	(bad)  
   14000c929:	xor    eax,0x14c438d5
   14000c92e:	jle    0x14000c8f5
   14000c930:	(bad)  
   14000c931:	xchg   esp,eax
   14000c932:	icebp  
   14000c933:	jno    0x14000c8ea
   14000c935:	fimul  WORD PTR [rsi]
   14000c937:	add    esp,ebx
   14000c939:	sub    bh,BYTE PTR [rbp+0x1634e1f3]
   14000c93f:	sbb    ch,BYTE PTR [rdx+0x78]
   14000c942:	pop    rsp
   14000c943:	adc    ah,dh
   14000c945:	sbb    DWORD PTR [rdx+0x1],0x9618cd5c
   14000c94c:	add    eax,DWORD PTR [rax]
   14000c94e:	add    BYTE PTR [rax],ah
   14000c950:	add    BYTE PTR [rcx+0x44],cl
   14000c953:	push   r12
   14000c955:	sub    BYTE PTR [rcx],cl
   14000c957:	jbe    0x14000c97f
   14000c959:	sbb    al,0x23
   14000c95b:	rex.XB (bad) 
   14000c95d:	jrcxz  0x14000c981
   14000c95f:	movabs al,ds:0x6e16ac3fde108331
   14000c968:	lea    ecx,[rcx]
   14000c96a:	rex.WXB cmc 
   14000c96c:	pop    rcx
   14000c96d:	adc    edi,DWORD PTR [rdx-0x465d42ec]
   14000c973:	and    al,BYTE PTR [rbp-0x20]
   14000c976:	or     bh,BYTE PTR [rbx+rdx*1+0x4a481f50]
   14000c97d:	cmc    
   14000c97e:	or     al,0x2d
   14000c980:	sbb    DWORD PTR [rcx],ebx
   14000c982:	cmp    ch,bh
   14000c984:	mov    dl,0xf3
   14000c986:	(bad)  
   14000c987:	(bad)  
   14000c988:	js     0x14000c959
   14000c98a:	jge    0x14000c967
   14000c98c:	(bad)  
   14000c98d:	sbb    eax,0xaa0e7e3e
   14000c992:	(bad)  
   14000c993:	pop    rsi
   14000c994:	jge    0x14000c973
   14000c996:	(bad)  
   14000c997:	jle    0x14000ca03
   14000c999:	xlat   BYTE PTR ds:[rbx]
   14000c99a:	cmc    
   14000c99b:	outs   dx,DWORD PTR ds:[rsi]
   14000c99c:	jns    0x14000c996
   14000c99e:	xchg   esp,eax
   14000c99f:	pop    rsp
   14000c9a0:	push   0xffffffffa58c40df
   14000c9a5:	or     eax,0x1f3a9ba6
   14000c9aa:	adc    cl,dh
   14000c9ac:	push   rbx
   14000c9ad:	sar    esi,cl
   14000c9af:	push   0x30539ae0
   14000c9b4:	cmc    
   14000c9b5:	int3   
   14000c9b6:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000c9b7:	scas   eax,DWORD PTR es:[rdi]
   14000c9b8:	add    BYTE PTR [rsi-0x4293b37a],bl
   14000c9be:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000c9bf:	or     esp,edi
   14000c9c1:	adc    cl,al
   14000c9c3:	jmp    0x14000c975
   14000c9c5:	(bad)  
   14000c9c6:	jl     0x14000c9af
   14000c9c8:	sbb    ebp,DWORD PTR [rdi]
   14000c9ca:	fdivr  QWORD PTR [rdx+rbp*2-0x4d2e5d33]
   14000c9d1:	loop   0x14000c991
   14000c9d3:	fisub  WORD PTR fs:[rax-0x547c94f3]
   14000c9da:	lahf   
   14000c9db:	enter  0x34bd,0x80
   14000c9df:	xor    edx,DWORD PTR [rip+0xffffffffb3d358f2]        # 0xf3d422d7
   14000c9e5:	clc    
   14000c9e6:	or     ecx,DWORD PTR [rbx]
   14000c9e8:	jns    0x14000ca16
   14000c9ea:	xchg   edx,eax
   14000c9eb:	(bad)  
   14000c9ec:	add    DWORD PTR [rcx],esi
   14000c9ee:	test   BYTE PTR [rip+0x3dcdc66a],al        # 0x17dce905e
   14000c9f4:	ins    BYTE PTR es:[rdi],dx
   14000c9f5:	sahf   
   14000c9f6:	cli    
   14000c9f7:	sbb    eax,DWORD PTR [rsi+0x7da03b9b]
   14000c9fd:	adc    DWORD PTR [rax],esi
   14000c9ff:	enter  0xc893,0xbd
   14000ca03:	or     bh,ah
   14000ca05:	mov    ?,WORD PTR [rax]
   14000ca07:	fwait
   14000ca08:	out    dx,eax
   14000ca09:	(bad)  
   14000ca0a:	rex.WR icebp 
   14000ca0c:	vdivps ymm7,ymm1,YMMWORD PTR [rcx]
   14000ca10:	adc    eax,0xa2a57346
   14000ca15:	sahf   
   14000ca16:	push   rsp
   14000ca17:	retf   0xc09b
   14000ca1a:	mov    esi,0xd2ebe890
   14000ca1f:	jae    0x14000ca47
   14000ca21:	sbb    BYTE PTR [rsi],0x74
   14000ca24:	ins    DWORD PTR es:[rdi],dx
   14000ca25:	mov    bh,ch
   14000ca27:	and    eax,0xc8df9c6
   14000ca2c:	sbb    cl,BYTE PTR [rip+0x1a0719b0]        # 0x15a07e3e2
   14000ca32:	xchg   edi,eax
   14000ca33:	icebp  
   14000ca34:	test   eax,0xb740ff81
   14000ca39:	mov    ecx,0x89b34698
   14000ca3e:	(bad)  
   14000ca3f:	iret   
   14000ca40:	and    esp,ecx
   14000ca42:	jnp    0x14000c9cc
   14000ca44:	(bad)  
   14000ca45:	push   0x55
   14000ca47:	jne    0x14000ca47
   14000ca49:	push   rcx
   14000ca4a:	rex.WRB mov r11,ss
   14000ca4d:	mov    bl,0xda
   14000ca4f:	gs sbb al,0xb2
   14000ca52:	lea    eax,[rcx+0x59c64f99]
   14000ca58:	xor    eax,0x63cad7dd
   14000ca5d:	or     ah,ah
   14000ca5f:	movabs eax,ds:0xb41f0f7d69029184
   14000ca68:	lea    edi,[rdx-0x3f]
   14000ca6b:	mov    dl,BYTE PTR fs:[rsi-0x3abfb05f]
   14000ca72:	(bad)  
   14000ca73:	rex.WR sbb BYTE PTR [rbx+0x656362f],r15b
   14000ca7a:	pop    rdx
   14000ca7b:	cmp    DWORD PTR [rax],0x42
   14000ca7e:	and    DWORD PTR [rcx+0x16],edx
   14000ca81:	not    BYTE PTR [rcx+0x3c]
   14000ca84:	pop    rdx
   14000ca85:	add    al,0x2f
   14000ca87:	add    DWORD PTR [rdi-0x40],ebp
   14000ca8a:	imul   ebp,esp,0x81f25440
   14000ca90:	push   rsi
   14000ca91:	jle    0x14000ca79
   14000ca93:	test   DWORD PTR [rdi+0x6f],esp
   14000ca96:	js     0x14000ca8c
   14000ca98:	fiadd  WORD PTR [rdi-0x4227e389]
   14000ca9e:	pop    rdi
   14000ca9f:	push   rax
   14000caa0:	(bad)  
   14000caa1:	ins    BYTE PTR es:[rdi],dx
   14000caa2:	cmc    
   14000caa3:	jne    0x14000cac4
   14000caa5:	jnp    0x14000ca96
   14000caa7:	scas   al,BYTE PTR es:[rdi]
   14000caa8:	jmp    0x14000ca89
   14000caaa:	repnz test DWORD PTR [rdi+0x71],esp
   14000caae:	cdq    
   14000caaf:	jge    0x14000cb04
   14000cab1:	leave  
   14000cab2:	xor    eax,DWORD PTR [rsi+0x49e27430]
   14000cab8:	hlt    
   14000cab9:	sbb    BYTE PTR [rdi-0x3bed9e62],0xa5
   14000cac0:	jp     0x14000ca54
   14000cac2:	sub    bh,BYTE PTR [ebp+0x5]
   14000cac6:	lock rex.WRB
   14000cac8:	fs (bad) 
   14000caca:	jmp    0x14000caf9
   14000cacc:	ins    DWORD PTR es:[rdi],dx
   14000cacd:	loopne 0x14000cade
   14000cacf:	rex.RB in al,0x9c
   14000cad2:	(bad)  
   14000cad3:	loopne 0x14000cb15
   14000cad5:	repz (bad) 
   14000cad7:	imul   ebp,DWORD PTR [rdi],0x3c
   14000cada:	imul   esi,DWORD PTR [rsp+riz*4-0x2f],0x2a
   14000cadf:	imul   esp,DWORD PTR [rsi+0x5b],0x22
   14000cae3:	fcom   DWORD PTR [rbx+0x35]
   14000cae6:	lahf   
   14000cae7:	adc    r13b,BYTE PTR [rdi]
   14000caea:	adc    eax,0x3c4d8f2
   14000caef:	adc    BYTE PTR [rdx+0x4f],ch
   14000caf2:	xchg   edx,eax
   14000caf3:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000caf4:	iret   
   14000caf5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000caf6:	rcr    BYTE PTR [rdi],cl
   14000caf8:	and    DWORD PTR [rdi-0x65034bb1],esi
   14000cafe:	loop   0x14000cafd
   14000cb00:	cmps   DWORD PTR cs:[rsi],DWORD PTR es:[rdi]
   14000cb02:	repz pop rcx
   14000cb04:	ss rex.WRX jg 0x14000ca96
   14000cb08:	(bad)  
   14000cb09:	movabs al,ds:0x62b794b0df257b07
   14000cb12:	stc    
   14000cb13:	je     0x17c7c8a51
   14000cb19:	add    BYTE PTR [rdi+0x67],bl
   14000cb1c:	movabs al,ds:0xed396f4f4a781b1b
   14000cb25:	(bad)  
   14000cb26:	retf   
   14000cb27:	pop    rdi
   14000cb28:	push   0x50
   14000cb2a:	add    BYTE PTR [rip+0x64be89f3],al        # 0x1a4bf5523
   14000cb30:	movabs ds:0x99b794b13ff1098d,al
   14000cb39:	(bad)  
   14000cb3a:	shr    BYTE PTR [rdi],cl
   14000cb3c:	imul   esp,DWORD PTR [rax-0x6523ba73],0xffffffff
   14000cb43:	xor    bh,dh
   14000cb45:	divps  xmm1,XMMWORD PTR [rcx+0x3569356d]
   14000cb4c:	(bad)  
   14000cb4d:	cwde   
   14000cb4e:	rex.RX movabs ds:0x9712af1eb969f332,eax
   14000cb58:	xlat   BYTE PTR ds:[rbx]
   14000cb59:	or     esi,DWORD PTR [rcx-0x484f8281]
   14000cb5f:	shl    BYTE PTR [rbx],1
   14000cb61:	sti    
   14000cb62:	(bad)  
   14000cb63:	fistp  DWORD PTR [rdi]
   14000cb65:	(bad)  
   14000cb66:	rex.XB cmc 
   14000cb68:	or     eax,0x897eaab5
   14000cb6d:	fiadd  WORD PTR [rax-0x28]
   14000cb70:	xor    esp,DWORD PTR [rip+0xce44c22]        # 0x14ce51798
   14000cb76:	rex.R xor eax,0x716a0270
   14000cb7c:	(bad)  
   14000cb7d:	adc    cl,dl
   14000cb7f:	rcl    BYTE PTR [rdi-0x6f],1
   14000cb82:	sub    DWORD PTR [rdi],0x45e7e903
   14000cb88:	mov    al,0x36
   14000cb8a:	add    BYTE PTR [rip+0xffffffffc918d71f],bl        # 0x10919a2af
   14000cb90:	cmp    al,0x94
   14000cb92:	(bad)  
   14000cb93:	(bad)  
   14000cb94:	ds and edx,DWORD PTR cs:[rax]
   14000cb98:	mov    BYTE PTR [rbx],bl
   14000cb9a:	xlat   BYTE PTR ds:[rbx]
   14000cb9b:	or     eax,0xd8da813c
   14000cba0:	(bad)  
   14000cba1:	movabs al,ds:0x97f4f6e66dba8c61
   14000cbaa:	popf   
   14000cbab:	mov    ch,0x3e
   14000cbad:	outs   dx,DWORD PTR ds:[rsi]
   14000cbae:	in     al,0xbb
   14000cbb0:	ja     0x14000cc21
   14000cbb2:	fistp  QWORD PTR [rbp+0x5fafef1f]
   14000cbb8:	jge    0x14000cb97
   14000cbba:	(bad)  
   14000cbbb:	jle    0x14000cc3c
   14000cbbd:	xlat   BYTE PTR ds:[rbx]
   14000cbbe:	cmc    
   14000cbbf:	outs   dx,DWORD PTR ds:[rsi]
   14000cbc0:	stc    
   14000cbc1:	enter  0xbda9,0x2
   14000cbc5:	jnp    0x14000cc29
   14000cbc7:	vshufpd ymm12,ymm10,YMMWORD PTR [rdi+0x75f0a8d2],0x77
   14000cbd0:	in     al,dx
   14000cbd1:	jmp    0x10368f2f2
   14000cbd6:	jle    0x14000cbe0
   14000cbd8:	jo     0x14000cb84
   14000cbda:	and    eax,0x9efcf716
   14000cbdf:	sbb    BYTE PTR [rcx],bh
   14000cbe1:	ja     0x14000cbbc
   14000cbe3:	stos   BYTE PTR es:[rdi],al
   14000cbe4:	gs ret 
   14000cbe6:	push   rdi
   14000cbe7:	std    
   14000cbe8:	mov    ebx,0xd6f4f33
   14000cbed:	out    0x79,al
   14000cbef:	xchg   ecx,eax
   14000cbf0:	jp     0x14000cbe4
   14000cbf2:	imul   edx,DWORD PTR [rbx-0x7dbb389],0x4c
   14000cbf9:	(bad)  
   14000cbfa:	(bad)  
   14000cbfb:	stos   DWORD PTR es:[rdi],eax
   14000cbfc:	out    0x7a,eax
   14000cbfe:	(bad)  
   14000cbff:	jmp    0x14000cbb2
   14000cc01:	mov    esi,0x30029e95
   14000cc06:	hlt    
   14000cc07:	pop    rdx
   14000cc08:	jns    0x14000cbdd
   14000cc0a:	imul   ecx,DWORD PTR [rbp-0x5a],0xffffffd9
   14000cc0e:	push   rdx
   14000cc0f:	jl     0x14000cba3
   14000cc11:	mov    ch,0xdc
   14000cc13:	xchg   BYTE PTR [rdx+rbx*4],ch
   14000cc16:	add    BYTE PTR [rsi],dh
   14000cc18:	rol    BYTE PTR [rbx],1
   14000cc1a:	inc    dl
   14000cc1c:	(bad)  
   14000cc1d:	sahf   
   14000cc1e:	sbb    BYTE PTR [rip+0x3b810f77],bl        # 0x17b81db9b
   14000cc24:	add    al,ch
   14000cc26:	jno    0x14000cc50
   14000cc28:	(bad)  
   14000cc29:	fistp  QWORD PTR [rsi+0x77]
   14000cc2c:	ss js  0x14000cc33
   14000cc2f:	scas   al,BYTE PTR es:[rdi]
   14000cc30:	lea    esi,ss:[rdi]
   14000cc33:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000cc34:	test   DWORD PTR [rsi-0x1c],0xd13abbf2
   14000cc3b:	(bad)  
   14000cc3c:	adc    eax,0xcaf549f8
   14000cc41:	shl    ebp,1
   14000cc43:	iret   
   14000cc44:	sbb    edx,DWORD PTR [rax+0x33b27465]
   14000cc4a:	mov    eax,0x30fffdb9
   14000cc4f:	xor    eax,0xfd5832b0
   14000cc54:	data16 (bad) 
   14000cc56:	(bad)  
   14000cc57:	and    eax,0xfdd4ee36
   14000cc5c:	push   rdx
   14000cc5d:	sub    edi,DWORD PTR [rbp-0x7fef4a9c]
   14000cc63:	pushf  
   14000cc64:	sbb    al,0xe
   14000cc66:	(bad)  
   14000cc67:	fistp  WORD PTR [rbp-0x28581d18]
   14000cc6d:	sar    edx,cl
   14000cc6f:	mov    eax,0x1b3f6d65
   14000cc74:	iret   
   14000cc75:	rex int3 
   14000cc77:	clc    
   14000cc78:	add    eax,0x2f224434
   14000cc7d:	in     eax,dx
   14000cc7e:	sub    edx,DWORD PTR [rsi]
   14000cc80:	rex.R sub eax,0xd71a2a52
   14000cc86:	cli    
   14000cc87:	xchg   esp,eax
   14000cc88:	sub    al,0xc6
   14000cc8a:	sti    
   14000cc8b:	pop    rsi
   14000cc8c:	xchg   ecx,eax
   14000cc8d:	mov    eax,0x82c9b098
   14000cc92:	addr32 loopne 0x14000cc1f
   14000cc95:	sar    dl,0xb
   14000cc98:	push   rsp
   14000cc99:	or     DWORD PTR [rdx-0x2c],0xa
   14000cc9d:	es (bad) 
   14000cc9f:	clc    
   14000cca0:	scas   al,BYTE PTR es:[rdi]
   14000cca1:	(bad)  
   14000cca2:	retf   
   14000cca3:	adc    BYTE PTR [rax-0x3c],bl
   14000cca6:	jp     0x14000cc64
   14000cca8:	xor    DWORD PTR [rax+0x28],edx
   14000ccab:	fidivr WORD PTR [rdx-0x2a]
   14000ccae:	popf   
   14000ccaf:	jno    0x14000cc8b
   14000ccb1:	mov    eax,0xe7661acd
   14000ccb6:	and    ebx,ebx
   14000ccb8:	imul   DWORD PTR [rcx-0x544c089]
   14000ccbe:	mov    edx,0xbc069d8f
   14000ccc3:	jg     0x14000cc9c
   14000ccc5:	cmc    
   14000ccc6:	outs   dx,DWORD PTR ds:[rsi]
   14000ccc7:	cmp    DWORD PTR [rcx+0x48df3d09],ebp
   14000cccd:	lods   al,BYTE PTR ds:[rsi]
   14000ccce:	jmp    0x1495871ff
   14000ccd3:	sub    BYTE PTR [rax-0x15938094],ah
   14000ccd9:	test   al,0x8
   14000ccdb:	scas   al,BYTE PTR es:[rdi]
   14000ccdc:	ror    eax,1
   14000ccde:	xor    al,0xcc
   14000cce0:	cmp    eax,0x57d2667d
   14000cce5:	add    BYTE PTR [rdi+0x21],cl
   14000cce8:	adc    esp,edi
   14000ccea:	(bad)  
   14000cceb:	adc    BYTE PTR [rbx],ah
   14000cced:	addr32 sub eax,0xd16cb55b
   14000ccf3:	push   rbp
   14000ccf4:	push   rdi
   14000ccf5:	outs   dx,DWORD PTR ds:[rsi]
   14000ccf6:	cmp    DWORD PTR [rbp+0x67736035],ebp
   14000ccfc:	test   eax,0x7627eae6
   14000cd01:	fbld   TBYTE PTR [rax]
   14000cd03:	push   rbp
   14000cd04:	mov    ebp,0x45926e7e
   14000cd09:	(bad)  
   14000cd0a:	mov    ecx,0xfe0ea6fd
   14000cd0f:	or     ah,bh
   14000cd11:	xor    al,0x92
   14000cd13:	or     ebp,DWORD PTR [rdx-0x25]
   14000cd16:	adc    BYTE PTR [rsi+0x38fb2459],dh
   14000cd1c:	jg     0x14000cd18
   14000cd1e:	movsxd ecx,DWORD PTR [rbp+rsi*1+0x5e6811f]
   14000cd25:	test   ah,bl
   14000cd27:	jle    0x14000cd96
   14000cd29:	xor    cl,bh
   14000cd2b:	xchg   ebx,eax
   14000cd2c:	lods   al,BYTE PTR ds:[rsi]
   14000cd2d:	jg     0x14000cd66
   14000cd2f:	sub    al,0xab
   14000cd31:	pop    rbp
   14000cd32:	(bad)  
   14000cd33:	(bad)  
   14000cd34:	stc    
   14000cd35:	std    
   14000cd36:	movsxd eax,ecx
   14000cd38:	fidiv  DWORD PTR [rdi-0x19]
   14000cd3b:	rex.X sti 
   14000cd3d:	scas   al,BYTE PTR es:[rdi]
   14000cd3e:	scas   eax,DWORD PTR es:[rdi]
   14000cd3f:	xlat   BYTE PTR ds:[rbx]
   14000cd40:	icebp  
   14000cd41:	lahf   
   14000cd42:	mov    ch,ah
   14000cd44:	pop    rdi
   14000cd45:	loopne 0x14000cd39
   14000cd47:	push   rdi
   14000cd48:	push   rsp
   14000cd49:	(bad)  
   14000cd4a:	in     eax,dx
   14000cd4b:	adc    DWORD PTR [rbp+0x62],edi
   14000cd4e:	movabs eax,ds:0xe4d641967efc8595
   14000cd57:	sar    esp,0xdf
   14000cd5a:	icebp  
   14000cd5b:	mov    ecx,0x66906ba1
   14000cd60:	mov    eax,DWORD PTR [rsi-0x45]
   14000cd63:	(bad)  
   14000cd64:	leave  
   14000cd65:	jae    0x14000cdb3
   14000cd67:	(bad)  
   14000cd68:	mov    dl,0x1b
   14000cd6a:	add    BYTE PTR [rbx+rax*8],bl
   14000cd6d:	clc    
   14000cd6e:	sub    bl,dh
   14000cd70:	fst    st(4)
   14000cd72:	hlt    
   14000cd73:	pop    rdx
   14000cd74:	pop    rdx
   14000cd75:	out    0x2b,eax
   14000cd77:	test   eax,0x3bd1334
   14000cd7c:	xchg   ebp,eax
   14000cd7d:	sahf   
   14000cd7e:	cs retf 0x3362
   14000cd82:	push   rax
   14000cd83:	rex.WB scas rax,QWORD PTR es:[rdi]
   14000cd85:	sbb    DWORD PTR [rax+0x34],edx
   14000cd88:	cmp    DWORD PTR [rcx],ebx
   14000cd8a:	add    eax,esp
   14000cd8c:	(bad)  
   14000cd8d:	(bad)  
   14000cd8e:	in     al,dx
   14000cd8f:	xor    esi,0xb32d448
   14000cd95:	(bad)  
   14000cd96:	(bad)  
   14000cd97:	sub    eax,0x18afc942
   14000cd9c:	and    eax,0x36d88a03
   14000cda1:	sbb    al,0x9a
   14000cda3:	or     ah,BYTE PTR [rax+rbp*1]
   14000cda6:	(bad)  
   14000cda7:	(bad)  
   14000cda8:	sbb    BYTE PTR [rcx-0x5c18f1f8],dh
   14000cdae:	(bad)  
   14000cdaf:	(bad)  
   14000cdb0:	sbb    al,BYTE PTR [rsi]
   14000cdb3:	rcl    DWORD PTR [rbp-0x44],cl
   14000cdb6:	jp     0x14000cd8c
   14000cdb8:	fwait
   14000cdb9:	loopne 0x14000cd8c
   14000cdbb:	pop    rax
   14000cdbc:	bswap  esi
   14000cdbe:	xor    ch,0xac
   14000cdc1:	cmp    DWORD PTR [rbp-0x23],ebp
   14000cdc4:	retf   0xc591
   14000cdc7:	rex.XB
   14000cdc8:	rex.XB neg r15d
   14000cdcb:	jne    0x14000cdac
   14000cdcd:	movsxd esp,DWORD PTR [rbp+0x51]
   14000cdd0:	mov    esi,0x5747ef11
   14000cdd5:	jmp    rsp
   14000cdd7:	rex.RXB fbstp TBYTE PTR [r11-0xf817015]
   14000cdde:	xchg   esp,eax
   14000cddf:	sub    al,BYTE PTR [rcx+0x9774cc]
   14000cde5:	sbb    cl,BYTE PTR [rax]
   14000cde7:	or     al,0xe3
   14000cde9:	shr    cl,0x9d
   14000cdec:	ja     0x14000ce0c
   14000cdee:	pushf  
   14000cdef:	rex.RX jo 0x14000ce39
   14000cdf2:	test   BYTE PTR [rbp-0x61],0x94
   14000cdf6:	(bad)  
   14000cdf7:	(bad)  
   14000cdf8:	rex.WRX in eax,0x7
   14000cdfb:	jl     0x14000cdae
   14000cdfd:	enter  0xd6c4,0x5b
   14000ce01:	xchg   BYTE PTR [rcx+0x7ab15fe0],cl
   14000ce07:	stc    
   14000ce08:	enter  0x5755,0x9f
   14000ce0c:	mov    ebp,0x1b6839b9
   14000ce11:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000ce12:	or     eax,0x89a69f64
   14000ce17:	cmp    al,0x26
   14000ce19:	xor    al,0xea
   14000ce1b:	cwde   
   14000ce1c:	clc    
   14000ce1d:	fadd   st,st(6)
   14000ce1f:	loop   0x14000ce40
   14000ce21:	fwait
   14000ce22:	pop    rax
   14000ce23:	(bad)  
   14000ce24:	js     0x14000ce27
   14000ce26:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000ce27:	cmp    BYTE PTR [rdi],bh
   14000ce29:	pop    rdi
   14000ce2a:	push   0xffffffffa83293f5
   14000ce2f:	icebp  
   14000ce30:	add    BYTE PTR [rbx-0x34],cl
   14000ce33:	movsxd ebx,DWORD PTR [rsi+rdi*1-0xb]
   14000ce37:	(bad)  
   14000ce38:	mov    WORD PTR [rip+0xffffffff95e681ec],cs        # 0xd5e7502a
   14000ce3e:	hlt    
   14000ce3f:	rex.RX je 0x14000ce67
   14000ce42:	(bad)  
   14000ce43:	jl     0x14000cdc6
   14000ce45:	retf   
   14000ce46:	scas   eax,DWORD PTR es:[rdi]
   14000ce47:	xchg   ebx,eax
   14000ce48:	rcr    cl,1
   14000ce4a:	sbb    eax,0x68e74014
   14000ce4f:	fs cld 
   14000ce51:	(bad)  
   14000ce52:	movabs eax,ds:0xc9e28a12cbf77b13
   14000ce5b:	stc    
   14000ce5c:	std    
   14000ce5d:	rol    BYTE PTR [rdi-0x819c8a5],cl
   14000ce63:	sub    edi,DWORD PTR [rsi]
   14000ce65:	xor    DWORD PTR [rsi+0x9],edi
   14000ce68:	(bad)  
   14000ce69:	jnp    0x14000ce60
   14000ce6b:	(bad)
   14000ce6e:	mov    bh,0x9a
   14000ce70:	and    DWORD PTR [rdi-0x68fc861],ebp
   14000ce76:	rex.WX
   14000ce77:	ds xor esi,eax
   14000ce7a:	jae    0x14000ce58
   14000ce7c:	cmp    dh,dl
   14000ce7e:	es in  al,dx
   14000ce80:	loopne 0x14000ce92
   14000ce82:	int    0xc1
   14000ce84:	rex.B ins BYTE PTR es:[rdi],dx
   14000ce86:	movabs ds:0x93749260de76b581,eax
   14000ce8f:	enter  0x1219,0x3d
   14000ce93:	and    DWORD PTR [rax+0x7bd2feb9],ebp
   14000ce99:	xchg   esp,eax
   14000ce9a:	mov    bh,cl
   14000ce9c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000ce9d:	xor    BYTE PTR [rsi*1+0xd4b1225],cl
   14000cea4:	out    0x35,al
   14000cea6:	or     DWORD PTR [rax+0x1da42dc8],r11d
   14000cead:	mov    dl,0xe4
   14000ceaf:	xchg   ecx,eax
   14000ceb0:	xchg   ecx,eax
   14000ceb1:	ret    0x10ac
   14000ceb4:	mov    gs,WORD PTR [rcx+0x26]
   14000ceb7:	xchg   ebp,eax
   14000ceb8:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000ceb9:	xchg   BYTE PTR [rcx],dl
   14000cebb:	xor    ch,BYTE PTR [rbx]
   14000cebd:	icebp  
   14000cebe:	mov    ch,0xb8
   14000cec0:	xor    DWORD PTR [rip+0xfffffffffe7a2c98],0xffffffd6        # 0x13e7afb5f
   14000cec7:	rex.R sahf 
   14000cec9:	es mov esp,0x86904626
   14000cecf:	(bad)  
   14000ced0:	(bad)  
   14000ced1:	and    BYTE PTR [rsi],ah
   14000ced3:	(bad)  
   14000ced4:	or     al,0x58
   14000ced6:	or     DWORD PTR [rcx-0x79fab747],0xffffffc6
   14000cedd:	rex.RX xchg esi,r9d
   14000cee0:	mov    ebp,0x5b33c2e2
   14000cee5:	in     eax,dx
   14000cee6:	push   rsi
   14000cee7:	or     edx,DWORD PTR [rcx-0x4f80ff29]
   14000ceed:	cli    
   14000ceee:	(bad)  
   14000ceef:	(bad)  
   14000cef0:	fidivr DWORD PTR ds:0x3c946417
   14000cef7:	fwait
   14000cef8:	pop    rbx
   14000cef9:	mov    ?,edx
   14000cefb:	cmp    DWORD PTR [rsi+rsi*2+0x3ae66650],edi
   14000cf02:	int    0x1d
   14000cf04:	rcl    DWORD PTR [rbx-0x23],cl
   14000cf07:	ret    0x9318
   14000cf0a:	(bad)  
   14000cf0b:	sahf   
   14000cf0c:	lahf   
   14000cf0d:	mov    cl,0xf4
   14000cf0f:	adc    eax,0x9d8902c0
   14000cf14:	jl     0x14000ceed
   14000cf16:	mov    ecx,eax
   14000cf18:	pop    rcx
   14000cf19:	retf   
   14000cf1a:	push   rdi
   14000cf1b:	(bad)  
   14000cf1c:	(bad)  
   14000cf1d:	jle    0x14000cf0c
   14000cf1f:	mov    edi,0x7cb4eb3b
   14000cf24:	shl    ah,0xa5
   14000cf27:	xor    rax,0xffffffffabc4df6b
   14000cf2d:	outs   dx,DWORD PTR ds:[rsi]
   14000cf2e:	(bad)  
   14000cf2f:	clc    
   14000cf30:	jmp    0x1ba63c1fa
   14000cf35:	int3   
   14000cf36:	jg     0x14000cf4e
   14000cf38:	outs   dx,DWORD PTR ds:[rsi]
   14000cf39:	jns    0x14000cfb0
   14000cf3b:	(bad)  
   14000cf3c:	or     dh,BYTE PTR [rsi]
   14000cf3e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000cf3f:	add    bl,ch
   14000cf41:	push   rbp
   14000cf42:	jle    0x14000cedd
   14000cf44:	sub    BYTE PTR [rbx],bl
   14000cf46:	clc    
   14000cf47:	addr32 cs lahf 
   14000cf4a:	std    
   14000cf4b:	outs   dx,DWORD PTR ds:[rsi]
   14000cf4c:	or     al,0xc
   14000cf4e:	add    ebx,ecx
   14000cf50:	rex.RB cmp al,0x75
   14000cf53:	mov    esp,0xb83280ef
   14000cf58:	sti    
   14000cf59:	jae    0x14000cf56
   14000cf5b:	jp     0x14000cf96
   14000cf5d:	(bad)  
   14000cf5e:	loop   0x14000cfc8
   14000cf60:	je     0x14000cf5d
   14000cf62:	shl    DWORD PTR [rax-0x32],cl
   14000cf65:	outs   dx,BYTE PTR ds:[rsi]
   14000cf66:	(bad)  
   14000cf67:	fisubr WORD PTR [rdi]
   14000cf69:	movsxd edi,DWORD PTR [rdi+rbp*8-0xc40f09d]
   14000cf70:	shl    ebp,0x2f
   14000cf73:	movabs ds:0x627f2e54742d0832,eax
   14000cf7c:	stc    
   14000cf7d:	mov    bl,0x6
   14000cf7f:	xor    al,0x23
   14000cf81:	rcl    edi,1
   14000cf83:	push   0x1971a470
   14000cf88:	(bad)  
   14000cf89:	or     al,0xbf
   14000cf8b:	(bad)  
   14000cf8c:	jge    0x14000cf19
   14000cf8e:	(bad)  
   14000cf8f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000cf90:	cmp    eax,0x5a2b4030
   14000cf95:	inc    BYTE PTR [rsi+0x58]
   14000cf98:	imul   esi,DWORD PTR [rax-0x6e1dc81e],0xffffffc2
   14000cf9f:	sub    eax,0xf3cce9d4
   14000cfa4:	(bad)  
   14000cfa5:	out    0xf7,al
   14000cfa7:	xor    ch,BYTE PTR [rax+0x2f]
   14000cfaa:	ins    BYTE PTR es:[rdi],dx
   14000cfab:	(bad)  
   14000cfac:	fisubr WORD PTR [rbx+rax*8-0x48]
   14000cfb0:	pop    rdi
   14000cfb1:	repnz adc al,0x84
   14000cfb4:	loopne 0x14000cfa0
   14000cfb6:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000cfb7:	cmc    
   14000cfb8:	or     eax,0xa98de094
   14000cfbd:	(bad)  
   14000cfbe:	cli    
   14000cfbf:	mov    bl,BYTE PTR [rax]
   14000cfc1:	rex.RXB fdivr DWORD PTR [r8+0x62]
   14000cfc5:	ror    edx,cl
   14000cfc7:	rex.RXB
   14000cfc8:	ss (bad) 
   14000cfca:	(bad)  
   14000cfcb:	adc    BYTE PTR [rcx],al
   14000cfcd:	outs   dx,DWORD PTR ds:[rsi]
   14000cfce:	adc    DWORD PTR [rcx+rsi*1-0x4e35e9b8],ecx
   14000cfd5:	lea    ecx,[rip+0x42631b4a]        # 0x18263eb25
   14000cfdb:	fnstenv [rsi-0x46]
   14000cfde:	(bad)  
   14000cfdf:	xchg   ebp,eax
   14000cfe0:	xchg   BYTE PTR [rbp+riz*1-0x60],al
   14000cfe4:	int    0x50
   14000cfe6:	mov    ch,0x98
   14000cfe8:	sub    bh,BYTE PTR [rbx]
   14000cfea:	mov    DWORD PTR [rip+0xffffffffc0d098de],esp        # 0x100d168ce
   14000cff0:	xchg   esp,eax
   14000cff1:	(bad)  
   14000cff3:	repnz xor ebp,DWORD PTR [rdi]
   14000cff6:	ds ja  0x14000cfdc
   14000cff9:	rcl    al,0x60
   14000cffc:	adc    edx,DWORD PTR [rcx-0x63f07ed5]
   14000d002:	sub    ah,BYTE PTR [rip+0xffffffffefc6f470]        # 0x12fc7c478
   14000d008:	(bad)  
   14000d009:	xor    BYTE PTR [rbx+rcx*4],dl
   14000d00c:	jrcxz  0x14000cfd7
   14000d00e:	in     eax,dx
   14000d00f:	add    bh,dh
   14000d011:	clc    
   14000d012:	push   rsp
   14000d013:	mov    esi,0xe6d2845b
   14000d018:	out    0xa4,al
   14000d01a:	(bad)  
   14000d01b:	cmp    cl,ch
   14000d01d:	sub    eax,DWORD PTR [rax-0xfbb66]
   14000d023:	movabs eax,ds:0xafc5f2dd62bcd918
   14000d02c:	jmp    FWORD PTR [rsi-0x25c858d3]
   14000d032:	ss ja  0x14000d09e
   14000d035:	and    BYTE PTR [rdi+0x22],ah
   14000d038:	sti    
   14000d039:	mov    WORD PTR [rbx+rcx*8-0x63],es
   14000d03d:	data16 in al,dx
   14000d03f:	xchg   DWORD PTR [rbx],ecx
   14000d041:	mov    bl,0xb2
   14000d043:	cld    
   14000d044:	test   BYTE PTR [rbx-0x4d9568d1],cl
   14000d04a:	push   rdi
   14000d04b:	xor    eax,0x105f23c4
   14000d050:	(bad)  
   14000d051:	in     al,0x12
   14000d053:	(bad)  
   14000d054:	jb     0x14000cff5
   14000d056:	pop    rcx
   14000d057:	cld    
   14000d058:	outs   dx,DWORD PTR ds:[rsi]
   14000d059:	(bad)  
   14000d05a:	jmp    0xf837193d
   14000d05f:	adc    ah,ah
   14000d061:	rex.WR jp 0x14000cfe4
   14000d064:	scas   eax,DWORD PTR es:[rdi]
   14000d065:	pop    rbx
   14000d066:	call   FWORD PTR [rdx]
   14000d068:	clc    
   14000d069:	retf   
   14000d06a:	jge    0x14000d03c
   14000d06c:	cmp    DWORD PTR [rax],eax
   14000d06e:	vpunpcklbw xmm7,xmm11,xmm1
   14000d072:	mov    esp,DWORD PTR [rbx+0x31]
   14000d075:	out    dx,al
   14000d076:	lahf   
   14000d077:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d078:	(bad)  
   14000d079:	scas   al,BYTE PTR es:[rdi]
   14000d07a:	sub    eax,esi
   14000d07c:	cld    
   14000d07d:	or     eax,esi
   14000d07f:	(bad)  
   14000d080:	(bad)  
   14000d081:	pop    rsi
   14000d082:	jle    0x14000d009
   14000d084:	mov    ecx,0xac1001c4
   14000d089:	jle    0x14000d03d
   14000d08b:	cdq    
   14000d08c:	mov    cl,0x79
   14000d08e:	(bad)  
   14000d08f:	xchg   ebx,eax
   14000d090:	rex.XB stos DWORD PTR es:[rdi],eax
   14000d092:	add    DWORD PTR [rbp+0x344d1a1c],ebp
   14000d098:	sbb    esp,esp
   14000d09a:	(bad)  
   14000d09b:	out    0x8f,al
   14000d09d:	lock leave 
   14000d09f:	shr    ebx,1
   14000d0a1:	sub    BYTE PTR [rdi],al
   14000d0a3:	xchg   edi,eax
   14000d0a4:	rcr    BYTE PTR [rax],cl
   14000d0a6:	sbb    al,0x24
   14000d0a8:	imul   esi,DWORD PTR [rbp+0x1ac59930],0xffffffa9
   14000d0af:	scas   al,BYTE PTR es:[rdi]
   14000d0b0:	mov    esi,0xa8891379
   14000d0b5:	sbb    DWORD PTR [rdx+rdx*4],0x7d115d47
   14000d0bc:	adc    dl,BYTE PTR [rcx+0x2906055d]
   14000d0c2:	out    dx,eax
   14000d0c3:	rex.WRXB scas rax,QWORD PTR es:[rdi]
   14000d0c5:	test   cl,0x26
   14000d0c8:	pop    QWORD PTR [rcx+0x7a]
   14000d0cb:	fisttp DWORD PTR [rax+0x254815e9]
   14000d0d1:	add    dl,BYTE PTR [rax+0x1c4ddd68]
   14000d0d7:	(bad)  
   14000d0d8:	(bad)  
   14000d0d9:	cli    
   14000d0da:	es rex.WR
   14000d0dc:	bnd ret 0x6090
   14000d0e0:	mov    cl,0x13
   14000d0e2:	rcl    DWORD PTR [rax],1
   14000d0e4:	ja     0x14000d11a
   14000d0e6:	jns    0x14000d098
   14000d0e8:	in     al,dx
   14000d0e9:	mov    BYTE PTR [rsi+rcx*1+0x20b230cd],0x2
   14000d0f1:	cmp    eax,0xa0da1075
   14000d0f6:	add    BYTE PTR [rcx+rax*1+0x31ca0cd3],cl
   14000d0fd:	sub    al,0x37
   14000d0ff:	or     BYTE PTR [rax-0x75],bl
   14000d102:	(bad)  
   14000d103:	test   al,0x30
   14000d105:	push   rsp
   14000d106:	push   0x33f3b60c
   14000d10b:	cmp    bh,BYTE PTR cs:[rbx-0x2d]
   14000d10f:	shl    al,0xa2
   14000d112:	and    dl,BYTE PTR ss:[rdi+0x2a7c7f02]
   14000d119:	xchg   esp,eax
   14000d11a:	sub    bl,0x76
   14000d11d:	mov    ebx,0x11814f0f
   14000d123:	(bad)  
   14000d124:	enter  0x23e1,0xe6
   14000d128:	xor    BYTE PTR [rax-0x56],dl
   14000d12b:	sahf   
   14000d12c:	pop    rsp
   14000d12d:	or     dl,BYTE PTR [rax]
   14000d12f:	cli    
   14000d130:	or     ah,BYTE PTR [rax-0x1f76e]
   14000d136:	(bad)  
   14000d137:	enter  0x2be9,0xd6
   14000d13b:	scas   al,BYTE PTR es:[rdi]
   14000d13c:	pop    rax
   14000d13d:	cld    
   14000d13e:	fisubr DWORD PTR [rbx+0x5bca6cb7]
   14000d144:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d145:	add    bh,BYTE PTR [rdi+0x226f4b44]
   14000d14b:	clc    
   14000d14c:	or     eax,0xa97d79b5
   14000d151:	retf   0x24f
   14000d154:	retf   
   14000d155:	pop    rdi
   14000d156:	adc    DWORD PTR [rbp+rdx*1+0x18],edi
   14000d15a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d15b:	xchg   edi,eax
   14000d15c:	or     eax,0x2ce567a0
   14000d161:	nop
   14000d162:	shl    ebp,cl
   14000d164:	(bad)  
   14000d165:	(bad)  [rdi+0x3bf9ba70]
   14000d16b:	int3   
   14000d16c:	rcr    cl,0xc0
   14000d16f:	pop    rdx
   14000d170:	jp     0x14000d1a2
   14000d172:	test   al,0x3
   14000d174:	(bad)  
   14000d175:	out    0xf6,al
   14000d177:	jne    0x14000d17f
   14000d179:	mov    edx,0x50ee61bb
   14000d17e:	ins    BYTE PTR es:[rdi],dx
   14000d17f:	call   0xddfd0f0d
   14000d184:	jmp    0x168a489b9
   14000d189:	movabs al,ds:0x52f82a170bd002eb
   14000d192:	mov    ?,WORD PTR [rdi-0x1440a974]
   14000d198:	jnp    0x14000d209
   14000d19a:	xchg   ecx,eax
   14000d19b:	lods   al,BYTE PTR ds:[rsi]
   14000d19c:	mov    esi,0x4fd581b7
   14000d1a1:	test   DWORD PTR [rip+0xfffffffff97446ad],edi        # 0x139751854
   14000d1a7:	fstp   TBYTE PTR [rax+0x353e1ae6]
   14000d1ad:	cld    
   14000d1ae:	retf   
   14000d1af:	fdiv   QWORD PTR [rbx]
   14000d1b1:	cli    
   14000d1b2:	(bad)  
   14000d1b3:	repnz rol DWORD PTR [rcx+0x1a],0x83
   14000d1b8:	add    ebx,DWORD PTR [rax-0x266cfcba]
   14000d1be:	sbb    dh,BYTE PTR [rdx]
   14000d1c0:	out    0xcb,eax
   14000d1c2:	rex.X
   14000d1c3:	rex.RB push r8
   14000d1c5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d1c6:	cmc    
   14000d1c7:	shr    ebx,cl
   14000d1c9:	rex.WX (bad) 
   14000d1cb:	jne    0x14000d17a
   14000d1cd:	push   rdx
   14000d1ce:	gs add al,0xaa
   14000d1d1:	in     eax,dx
   14000d1d2:	xchg   ebx,eax
   14000d1d3:	test   DWORD PTR [rdi-0x20],ebx
   14000d1d6:	add    DWORD PTR [rax+0x2d],ecx
   14000d1d9:	addr32 pop rdx
   14000d1db:	gs push rsp
   14000d1dd:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d1de:	div    BYTE PTR [rdi]
   14000d1e0:	(bad)  
   14000d1e1:	fmul   QWORD PTR [rax+0x18]
   14000d1e4:	movabs eax,ds:0x11848c5c4833ea96
   14000d1ed:	add    eax,0x531387e9
   14000d1f2:	ins    DWORD PTR es:[rdi],dx
   14000d1f3:	xchg   edi,eax
   14000d1f4:	mov    eax,0x58c1321c
   14000d1f9:	adc    ebp,DWORD PTR [rip+0xffffffffb7f5c13f]        # 0xf7f6933e
   14000d1ff:	push   rdx
   14000d200:	xchg   ebp,eax
   14000d201:	jno    0x14000d19e
   14000d203:	or     al,0x30
   14000d205:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d206:	xlat   BYTE PTR ds:[rbx]
   14000d207:	test   al,0x55
   14000d209:	(bad)
   14000d20c:	sub    ah,BYTE PTR [rbp+rbp*8+0x76]
   14000d210:	jle    0x14000d1d8
   14000d212:	stc    
   14000d213:	ins    DWORD PTR es:[edi],dx
   14000d215:	sbb    BYTE PTR [rdx],bl
   14000d217:	pop    rcx
   14000d218:	xor    al,0x88
   14000d21a:	enter  0xa085,0xbf
   14000d21e:	mov    ch,0xfa
   14000d220:	(bad)  
   14000d221:	jmp    QWORD PTR [rdx]
   14000d223:	jg     0x14000d25b
   14000d225:	xlat   BYTE PTR ds:[rbx]
   14000d226:	outs   dx,BYTE PTR ds:[esi]
   14000d228:	out    0x26,eax
   14000d22a:	ret    0x6005
   14000d22d:	loop   0x14000d1de
   14000d22f:	out    0xcb,al
   14000d231:	mov    ebx,0x5fb53ebf
   14000d236:	rex.R mov edx,0x3c67d4be
   14000d23c:	or     DWORD PTR [rax],ebp
   14000d23e:	rex.WB pop r15
   14000d240:	add    DWORD PTR [rax+0x35],edx
   14000d243:	cmc    
   14000d244:	cld    
   14000d245:	sbb    ah,BYTE PTR [rdx]
   14000d247:	sbb    eax,edi
   14000d249:	(bad)  
   14000d24a:	lods   al,BYTE PTR ds:[rsi]
   14000d24b:	pop    rsp
   14000d24c:	repnz fisubr DWORD PTR [rbx+0x3794dccf]
   14000d253:	rex.WR out 0x4c,al
   14000d256:	je     0x14000d291
   14000d258:	imul   esp,eax,0xffffffb7
   14000d25b:	xor    eax,0x67a667f0
   14000d260:	pop    rbp
   14000d261:	push   rdx
   14000d262:	lods   al,BYTE PTR ds:[rsi]
   14000d263:	pop    rdi
   14000d264:	mov    bh,0x3c
   14000d266:	cmc    
   14000d267:	sti    
   14000d268:	sbb    DWORD PTR [rip+0x7f81206f],edi        # 0x1bf81f2dd
   14000d26e:	mov    BYTE PTR [rcx-0x52],ch
   14000d271:	cwde   
   14000d272:	cli    
   14000d273:	scas   eax,DWORD PTR es:[rdi]
   14000d274:	mov    WORD PTR [rdi-0x68e5ea02],?
   14000d27a:	adc    al,BYTE PTR [rsi+0x1c4e3876]
   14000d280:	out    dx,eax
   14000d281:	sub    esp,DWORD PTR [rcx+0x2c]
   14000d284:	idiv   DWORD PTR [rsi]
   14000d286:	call   0x188e354a7
   14000d28b:	sub    dl,dh
   14000d28d:	jmp    0xdd4299e0
   14000d292:	shr    edx,1
   14000d294:	xlat   BYTE PTR ds:[rbx]
   14000d295:	leave  
   14000d296:	ds (bad) 
   14000d298:	push   0x5d7de3d
   14000d29d:	cmp    ah,BYTE PTR [rbp+0x78a7a916]
   14000d2a3:	(bad)  
   14000d2a4:	imul   eax,DWORD PTR [rax-0x4d],0x1
   14000d2a8:	lea    esp,[rsi+0x74]
   14000d2ab:	stc    
   14000d2ac:	(bad)  
   14000d2ad:	in     eax,0x86
   14000d2af:	loope  0x14000d310
   14000d2b1:	loope  0x14000d2ab
   14000d2b3:	loopne 0x14000d2fb
   14000d2b5:	pop    rdx
   14000d2b6:	add    eax,DWORD PTR [rbx-0x29c9529c]
   14000d2bc:	mov    bp,0x675
   14000d2c0:	call   0x16470c81e
   14000d2c5:	cmc    
   14000d2c6:	mov    al,0x20
   14000d2c8:	mov    ah,0xae
   14000d2ca:	(bad)  
   14000d2cb:	push   0xfffffffffffffffe
   14000d2cd:	ror    DWORD PTR [rdx-0x630b2b00],1
   14000d2d3:	(bad)  
   14000d2d4:	fbstp  TBYTE PTR [rdi+0xa4ea92a]
   14000d2da:	and    DWORD PTR [rdx],ebp
   14000d2dc:	mov    ah,cl
   14000d2de:	sbb    dl,0x9e
   14000d2e1:	adc    ah,BYTE PTR [rax+0x6449be76]
   14000d2e7:	movabs al,ds:0x8e24182248db6004
   14000d2f0:	push   rbx
   14000d2f1:	(bad)  
   14000d2f2:	jae    0x14000d2f6
   14000d2f4:	movabs ds:0x60f0c4229b554f05,al
   14000d2fd:	mov    esi,0x5f88a812
   14000d302:	sbb    esp,DWORD PTR [rcx+0x68]
   14000d305:	rex.WRB sub al,0xf8
   14000d308:	or     ch,bl
   14000d30a:	xor    al,0xa4
   14000d30c:	pop    rax
   14000d30d:	push   rax
   14000d30e:	add    al,0xb2
   14000d310:	jbe    0x14000d34d
   14000d312:	(bad)  
   14000d314:	mov    dl,0x33
   14000d316:	xlat   BYTE PTR ds:[rbx]
   14000d317:	(bad)  
   14000d318:	(bad)  
   14000d319:	sub    cl,BYTE PTR [rsi-0x20]
   14000d31c:	push   rdi
   14000d31d:	lahf   
   14000d31e:	(bad)  
   14000d31f:	adc    eax,0x666964f9
   14000d324:	push   rbx
   14000d325:	adc    eax,DWORD PTR [rbx+rcx*1-0x2b47699f]
   14000d32c:	fldcw  WORD PTR [rbp-0x1]
   14000d32f:	jl     0x14000d311
   14000d331:	or     BYTE PTR [rdx+0x39],al
   14000d334:	cmp    ebx,ecx
   14000d336:	in     eax,dx
   14000d337:	sub    eax,DWORD PTR [rax+0x5ef2967]
   14000d33d:	cs pop rsi
   14000d33f:	mov    esp,0xabe0f16c
   14000d344:	mov    edi,0x794d8cf3
   14000d349:	rol    DWORD PTR [rsi],cl
   14000d34b:	lock (bad) 
   14000d34d:	sbb    bh,bl
   14000d34f:	rex.RX neg esi
   14000d352:	es mov al,0xdb
   14000d355:	fs jge 0x14000d3d2
   14000d358:	sbb    al,0x40
   14000d35a:	mov    dh,ch
   14000d35c:	jmp    0x14000d2f4
   14000d35e:	fisttp WORD PTR [rdx-0x7e5bde70]
   14000d364:	ins    DWORD PTR es:[rdi],dx
   14000d365:	push   rsi
   14000d366:	and    BYTE PTR [rdi-0xb74d37b],cl
   14000d36c:	adc    BYTE PTR [rdi+0x4e],dl
   14000d36f:	std    
   14000d370:	(bad)  
   14000d371:	movabs ds:0x84e4d0397b217bc3,eax
   14000d37a:	jne    0x14000d378
   14000d37c:	push   rbp
   14000d37d:	jle    0x14000d37e
   14000d37f:	and    BYTE PTR [rdi+rax*1+0x4a4f4363],dl
   14000d386:	cmc    
   14000d387:	(bad)
   14000d38a:	mov    dl,0x1b
   14000d38c:	rcr    DWORD PTR [rdi-0x76220496],0xe3
   14000d393:	std    
   14000d394:	xor    al,0xaa
   14000d396:	mov    ebx,0x1689f96e
   14000d39b:	(bad)  
   14000d39c:	cmp    DWORD PTR [rdi-0x23ae786f],0x9b7b9b79
   14000d3a6:	outs   dx,DWORD PTR ds:[rsi]
   14000d3a7:	loop   0x14000d3fc
   14000d3a9:	movabs ds:0x620c0c68c607e1d7,eax
   14000d3b2:	fwait
   14000d3b3:	rex.WRB ins BYTE PTR es:[rdi],dx
   14000d3b5:	stos   WORD PTR es:[rdi],ax
   14000d3b7:	ss out 0xba,al
   14000d3ba:	sub    al,0x54
   14000d3bc:	(bad)  
   14000d3bd:	jne    0x14000d3f1
   14000d3bf:	scas   eax,DWORD PTR es:[rdi]
   14000d3c0:	mov    esi,0xac2a6a8d
   14000d3c5:	(bad)  
   14000d3c6:	iret   
   14000d3c7:	rex.WB or rax,0xffffffffd16044f8
   14000d3cd:	add    edi,DWORD PTR [rdx+0x45]
   14000d3d0:	add    al,dh
   14000d3d2:	jrcxz  0x14000d429
   14000d3d4:	pop    rsi
   14000d3d5:	(bad)  
   14000d3d6:	neg    BYTE PTR [rdi+rcx*4+0xd4507cc]
   14000d3dd:	mov    ch,0xb
   14000d3df:	cmp    al,BYTE PTR [rsi+0x20a4690f]
   14000d3e5:	push   rcx
   14000d3e6:	pop    rcx
   14000d3e7:	addr32 mov cl,0xe4
   14000d3ea:	mov    bh,0x5a
   14000d3ec:	sub    eax,DWORD PTR [rcx+0x62]
   14000d3ef:	rcl    DWORD PTR [rax+0x74],1
   14000d3f2:	retf   
   14000d3f3:	mov    WORD PTR [rcx],?
   14000d3f5:	push   rbp
   14000d3f6:	cli    
   14000d3f7:	ss (bad) 
   14000d3f9:	ja     0x14000d413
   14000d3fb:	(bad)  
   14000d3fc:	fsub   DWORD PTR [rax-0x7bd29c20]
   14000d402:	sbb    BYTE PTR [rbx+0x312708b4],al
   14000d408:	push   0x27
   14000d40a:	rex.XB push r8
   14000d40c:	add    bl,BYTE PTR [rdx-0x33]
   14000d40f:	rex.X add sil,0xc0
   14000d413:	rex jle 0x14000d3dc
   14000d416:	test   edi,esp
   14000d418:	ins    BYTE PTR es:[rdi],dx
   14000d419:	int3   
   14000d41a:	sbb    cl,BYTE PTR [rbp-0x51201ae4]
   14000d420:	jle    0x14000d409
   14000d422:	pop    rdi
   14000d423:	cld    
   14000d424:	ret    0xb8d3
   14000d427:	(bad)  
   14000d428:	lahf   
   14000d429:	and    al,0xc7
   14000d42b:	outs   dx,BYTE PTR ds:[rsi]
   14000d42c:	cli    
   14000d42d:	(bad)  
   14000d42e:	fwait
   14000d42f:	addr32 mov bl,0xab
   14000d432:	add    DWORD PTR [rax-0x18],0xd9998a78
   14000d439:	(bad)  
   14000d43a:	mov    ds,ebp
   14000d43c:	jnp    0x14000d464
   14000d43e:	cmp    eax,esi
   14000d440:	rex.W pop rdx
   14000d442:	(bad)  
   14000d444:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d445:	in     al,0x25
   14000d447:	scas   eax,DWORD PTR es:[rdi]
   14000d448:	add    BYTE PTR [rsi],ah
   14000d44a:	mov    dh,0xde
   14000d44c:	bnd ret 
   14000d44e:	rcl    ch,0xb6
   14000d451:	xchg   ecx,eax
   14000d452:	fld    TBYTE PTR [rbx+0x339cf7be]
   14000d458:	mov    bl,0xa6
   14000d45a:	mov    ch,0xa9
   14000d45c:	fwait
   14000d45d:	iret   
   14000d45e:	mov    BYTE PTR [rax+riz*4],al
   14000d461:	mov    edx,0x90582111
   14000d467:	push   0xffffffffffffffb9
   14000d469:	sub    eax,0x14fd59e9
   14000d46e:	mul    DWORD PTR [rdi+0x357a32e7]
   14000d474:	add    BYTE PTR [rsi-0x49680630],dl
   14000d47a:	pop    rcx
   14000d47b:	in     al,dx
   14000d47c:	(bad)  
   14000d47d:	out    0x95,eax
   14000d47f:	popf   
   14000d480:	fbld   TBYTE PTR [rax+0x5c81923d]
   14000d486:	movabs rax,0x7dde92a7ef144e8a
   14000d490:	sar    BYTE PTR [rcx],1
   14000d492:	sbb    BYTE PTR [rsi-0x23],ch
   14000d495:	and    esp,DWORD PTR [rcx]
   14000d497:	(bad)  
   14000d498:	push   rdi
   14000d499:	test   QWORD PTR [rbp+0x39],r8
   14000d49d:	ror    BYTE PTR [rdx+0x3c],cl
   14000d4a0:	cs xchg esi,eax
   14000d4a2:	cmc    
   14000d4a3:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d4a4:	(bad)  
   14000d4a5:	sahf   
   14000d4a6:	outs   dx,DWORD PTR ds:[rsi]
   14000d4a7:	sbb    ch,bh
   14000d4a9:	rex.RXB
   14000d4aa:	fs (bad) 
   14000d4ac:	sub    eax,0x8d01ab7f
   14000d4b1:	(bad)  
   14000d4b2:	mov    esi,0x6dbf84b9
   14000d4b7:	mov    edi,0x7c8f2f9b
   14000d4bc:	vmwrite rdi,QWORD PTR [rbx-0x80]
   14000d4c0:	mov    esp,0x637e5d1d
   14000d4c5:	jp     0x14000d487
   14000d4c7:	lods   eax,DWORD PTR ds:[rsi]
   14000d4c8:	(bad)  [rdx]
   14000d4ca:	mov    ebx,DWORD PTR [rip+0x73cca26f]        # 0x1b3cd773f
   14000d4d0:	jmp    0x1722fd700
   14000d4d5:	test   BYTE PTR [rbx],0xc
   14000d4d8:	jl     0x14000d4ff
   14000d4da:	jno    0x14000d478
   14000d4dc:	jg     0x14000d543
   14000d4de:	leave  
   14000d4df:	pop    rcx
   14000d4e0:	jo     0x14000d4ce
   14000d4e2:	cli    
   14000d4e3:	jnp    0x14000d48b
   14000d4e5:	stc    
   14000d4e6:	add    BYTE PTR [rcx],ch
   14000d4e8:	mov    dh,0xc8
   14000d4ea:	xor    al,0x90
   14000d4ec:	jg     0x14000d52b
   14000d4ee:	outs   dx,BYTE PTR ds:[rsi]
   14000d4ef:	sub    DWORD PTR [rdx-0x55e14504],0xa0a48d89
   14000d4f9:	add    eax,0xdb2ca693
   14000d4fe:	push   rax
   14000d4ff:	movabs al,ds:0x15b90c6647f40864
   14000d508:	rex.WR (bad) 
   14000d50a:	sub    edx,ecx
   14000d50c:	xchg   ecx,eax
   14000d50d:	sub    ah,BYTE PTR [rax+rcx*2-0x4b3e5fbc]
   14000d514:	rex.X or al,0x62
   14000d517:	movabs ds:0xd38b3406642467bb,al
   14000d520:	sbb    ecx,DWORD PTR [rip+0x7ced03e4]        # 0x1bcedd90a
   14000d526:	retf   
   14000d527:	(bad)
   14000d52a:	xchg   BYTE PTR [rbp-0x2a0107fa],dh
   14000d530:	out    dx,eax
   14000d531:	cld    
   14000d532:	mov    ebx,DWORD PTR [rdi]
   14000d534:	jle    0x14000d4dc
   14000d536:	xlat   BYTE PTR ds:[rbx]
   14000d537:	push   0xffffffff96aeedd1
   14000d53c:	jo     0x14000d528
   14000d53e:	rex.WXB xor BYTE PTR [r14],cl
   14000d541:	xor    bl,bh
   14000d543:	div    BYTE PTR [rip+0x31d20af6]        # 0x171d2e03f
   14000d549:	cdq    
   14000d54a:	jns    0x14000d5a2
   14000d54c:	mov    ebx,DWORD PTR [rbp-0x3fea5b42]
   14000d552:	(bad)  
   14000d553:	(bad)  
   14000d554:	pop    rbx
   14000d555:	pop    rsi
   14000d556:	or     DWORD PTR [rbp+rbx*2-0xe20ce73],edi
   14000d55d:	(bad)  
   14000d55e:	or     ecx,edi
   14000d560:	ins    BYTE PTR es:[rdi],dx
   14000d561:	(bad)  
   14000d562:	gs mov ecx,0x3d568d13
   14000d568:	pop    rax
   14000d569:	jl     0x14000d5be
   14000d56b:	add    edi,DWORD PTR [rdi-0x336de8b7]
   14000d571:	(bad)  
   14000d572:	ja     0x14000d5d6
   14000d574:	cld    
   14000d575:	lods   eax,DWORD PTR ds:[rsi]
   14000d576:	test   eax,0x7f43f8e7
   14000d57b:	jg     0x14000d523
   14000d57d:	mov    ebp,0x5e300dd7
   14000d582:	fmulp  st(5),st
   14000d584:	retf   
   14000d585:	mov    ecx,DWORD PTR [rdi]
   14000d587:	nop
   14000d588:	or     eax,0x8f4e06ae
   14000d58d:	lahf   
   14000d58e:	fs (bad) 
   14000d590:	jno    0x14000d5a1
   14000d592:	icebp  
   14000d593:	jle    0x14000d59c
   14000d595:	mov    edx,0x70ee607b
   14000d59a:	mov    al,0xfc
   14000d59c:	adc    eax,0x271537d1
   14000d5a1:	not    DWORD PTR [rdi*1-0x15f2c069]
   14000d5a8:	sub    al,0x23
   14000d5aa:	clc    
   14000d5ab:	rex.WXB test QWORD PTR [r13-0x1e],0x6fc005fd
   14000d5b3:	(bad)  
   14000d5b4:	and    DWORD PTR [rdi+0x32],ebp
   14000d5b7:	xlat   BYTE PTR ds:[rbx]
   14000d5b8:	cmp    al,0x93
   14000d5ba:	fwait
   14000d5bb:	(bad)  
   14000d5bc:	ffreep st(7)
   14000d5be:	mov    esi,0xb668f3e1
   14000d5c3:	(bad)  
   14000d5c4:	push   0x59e4dbb4
   14000d5c9:	(bad)  
   14000d5ca:	cmp    ebx,DWORD PTR [rcx]
   14000d5cc:	test   eax,0x2dfafd18
   14000d5d1:	pop    rcx
   14000d5d2:	std    
   14000d5d3:	cmp    ah,BYTE PTR [rsi-0x15]
   14000d5d6:	jg     0x14000d5db
   14000d5d8:	mov    ebx,0x9067d5a7
   14000d5dd:	(bad)  
   14000d5de:	xchg   edx,eax
   14000d5df:	test   al,0xd3
   14000d5e1:	push   rdi
   14000d5e2:	jne    0x14000d5c9
   14000d5e4:	push   rax
   14000d5e5:	pop    rcx
   14000d5e6:	stc    
   14000d5e7:	(bad)  
   14000d5e9:	push   0xffffffffffffffbb
   14000d5eb:	clc    
   14000d5ec:	(bad)  
   14000d5ed:	lods   eax,DWORD PTR ds:[rsi]
   14000d5ee:	sbb    eax,0x9add813e
   14000d5f3:	pop    rsi
   14000d5f4:	cmp    BYTE PTR [rsi],bh
   14000d5f6:	rex.WRXB (bad) 
   14000d5f8:	(bad)  
   14000d5f9:	in     al,dx
   14000d5fa:	rex
   14000d5fb:	rex.WX
   14000d5fc:	rex.WXB fisubr DWORD PTR [r8-0x5b]
   14000d600:	add    ebp,DWORD PTR [rax+0x4070f5e9]
   14000d606:	mov    ch,0x91
   14000d608:	(bad)  
   14000d609:	stos   BYTE PTR es:[rdi],al
   14000d60a:	scas   al,BYTE PTR es:[rdi]
   14000d60b:	xor    dl,ah
   14000d60d:	rol    ah,0x2a
   14000d610:	call   0x19130e8b3
   14000d615:	or     DWORD PTR [rax+0x6c11086a],ecx
   14000d61b:	cli    
   14000d61c:	popf   
   14000d61d:	and    eax,0x20a816f4
   14000d622:	push   0xffffffffffffffc8
   14000d624:	xchg   edx,ebx
   14000d626:	(bad)  
   14000d627:	shr    DWORD PTR [rdi],cl
   14000d629:	fdiv   DWORD PTR [rdx+0x7f0de631]
   14000d62f:	data16 cmc 
   14000d631:	cmp    edi,DWORD PTR [rdi]
   14000d633:	jb     0x14000d62e
   14000d635:	sar    DWORD PTR [rdi-0x30665eb6],cl
   14000d63b:	ins    BYTE PTR es:[rdi],dx
   14000d63c:	ret    0x63d7
   14000d63f:	rex.XB sub eax,0xbbb87dee
   14000d645:	pop    fs
   14000d647:	mov    al,0xb9
   14000d649:	cmp    DWORD PTR [rcx-0x15],ebp
   14000d64c:	lahf   
   14000d64d:	mov    esi,0x26524bea
   14000d652:	mov    dh,0xde
   14000d654:	mov    dl,0x5
   14000d656:	hlt    
   14000d657:	jge    0x14000d671
   14000d659:	and    edx,DWORD PTR [rdi-0x44]
   14000d65c:	(bad)  
   14000d65d:	mov    esp,0x7c7cb8d
   14000d662:	(bad)  
   14000d663:	and    eax,0xc5d2996
   14000d668:	mov    eax,edi
   14000d66a:	adc    ebp,DWORD PTR [rbp+0x8117e11]
   14000d670:	cmp    DWORD PTR [rbp-0xdd4168],edi
   14000d676:	mov    BYTE PTR [rdi],dl
   14000d678:	fwait
   14000d679:	or     bh,BYTE PTR [rcx]
   14000d67b:	xor    eax,0xdb70800e
   14000d680:	sar    BYTE PTR [rbp-0x6007f46b],1
   14000d686:	cwde   
   14000d687:	adc    ebx,0x93f1d580
   14000d68d:	sub    al,0x6c
   14000d68f:	out    0x49,al
   14000d691:	mov    edi,0x3afb2471
   14000d696:	rex.RXB ret 0x8f00
   14000d69a:	xor    al,0xa2
   14000d69c:	fcmovne st,st(5)
   14000d69e:	test   BYTE PTR [rsi-0x62],al
   14000d6a1:	xor    ch,BYTE PTR [rsi+0x3ec893c6]
   14000d6a7:	(bad)  
   14000d6a8:	push   rbp
   14000d6a9:	fistp  QWORD PTR [rsi-0x36]
   14000d6ac:	out    dx,eax
   14000d6ad:	push   rdi
   14000d6ae:	test   DWORD PTR [rsi],edi
   14000d6b0:	(bad)  
   14000d6b1:	sub    al,0x3f
   14000d6b3:	repz push rbx
   14000d6b5:	jl     0x14000d644
   14000d6b7:	rex.W div BYTE PTR [rip+0xffffffffbade3c9a]        # 0xfadf1358
   14000d6be:	(bad)  
   14000d6bf:	fwait
   14000d6c0:	rex.RX jle 0x14000d644
   14000d6c3:	(bad)  
   14000d6c4:	ror    BYTE PTR [rdx-0xe],1
   14000d6c7:	or     eax,0x44f9dbf2
   14000d6cd:	pop    rdi
   14000d6ce:	sbb    eax,0xa79175e8
   14000d6d3:	mov    eax,0x10278425
   14000d6d8:	xlat   BYTE PTR ds:[rbx]
   14000d6d9:	lods   eax,DWORD PTR ds:[rsi]
   14000d6da:	jg     0x14000d6ce
   14000d6dc:	(bad)  
   14000d6dd:	(bad)  
   14000d6de:	mov    ah,BYTE PTR [rax-0x7f505f2]
   14000d6e4:	rex.X outs dx,DWORD PTR ds:[rsi]
   14000d6e6:	mov    ebp,0x43ee05d0
   14000d6eb:	retf   0x5412
   14000d6ee:	(bad)  
   14000d6ef:	xchg   esp,esi
   14000d6f1:	xchg   esp,eax
   14000d6f2:	add    DWORD PTR [rax-0x4b],edx
   14000d6f5:	adc    esp,DWORD PTR [rdi]
   14000d6f7:	test   DWORD PTR [rax+0x63],esp
   14000d6fa:	ins    DWORD PTR es:[rdi],dx
   14000d6fb:	adc    esp,DWORD PTR [rsi]
   14000d6fd:	cld    
   14000d6fe:	rex.WRX and r8b,cl
   14000d701:	adc    edx,DWORD PTR [rax]
   14000d703:	sub    edx,ebp
   14000d705:	or     al,0x7
   14000d707:	mov    DWORD PTR [rdi],edi
   14000d709:	(bad)  
   14000d70a:	xor    ecx,eax
   14000d70c:	rcr    BYTE PTR [rbx+0x1b],cl
   14000d70f:	xlat   BYTE PTR ds:[rbx]
   14000d710:	(bad)  
   14000d711:	and    al,0x81
   14000d713:	pop    rsp
   14000d714:	sub    cl,BYTE PTR [rsi-0x40]
   14000d717:	mov    BYTE PTR [rcx-0x66],al
   14000d71a:	xchg   esi,eax
   14000d71b:	xor    al,0x77
   14000d71d:	shl    BYTE PTR [rbp+rbp*2-0x76edcbfb],1
   14000d724:	test   al,0xb0
   14000d726:	push   0xfffffffff2d0d8c9
   14000d72b:	cmc    
   14000d72c:	stos   DWORD PTR es:[rdi],eax
   14000d72d:	xchg   edi,eax
   14000d72e:	movsxd eax,esp
   14000d730:	sub    ah,bh
   14000d732:	xabort 0x3b
   14000d735:	(bad)  
   14000d736:	mov    dl,0x9a
   14000d738:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000d739:	sub    DWORD PTR [rbp+0x4246d8fc],ebp
   14000d73f:	xchg   ecx,eax
   14000d740:	jbe    0x14000d79c
   14000d742:	(bad)  
   14000d743:	mov    esp,0xeedfecfc
   14000d748:	cmp    DWORD PTR [rbx+rsi*1+0x53],ebp
   14000d74c:	cwde   
   14000d74d:	xor    BYTE PTR [rbp+rdi*8-0x56da1a5c],al
   14000d754:	add    dl,al
   14000d756:	xor    BYTE PTR [rdi],cl
   14000d758:	std    
   14000d759:	or     eax,0xbccfb4c4
   14000d75e:	loopne 0x14000d714
   14000d760:	(bad)  
   14000d761:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000d762:	outs   dx,DWORD PTR ds:[rsi]
   14000d763:	pop    rcx
   14000d764:	mov    esp,0x62f014ac
   14000d769:	push   rdx
   14000d76a:	stos   DWORD PTR es:[rdi],eax
   14000d76b:	cmp    ah,al
   14000d76d:	cwde   
   14000d76e:	lahf   
   14000d76f:	(bad)  
   14000d770:	in     eax,0x4f
   14000d772:	push   rbx
   14000d773:	jp     0x14000d7c7
   14000d775:	sub    ch,BYTE PTR [rdi]
   14000d777:	fnsave [rdx+0x68c3968]
   14000d77d:	movabs ds:0xe50c806fcc5e9729,al
   14000d786:	lods   al,BYTE PTR ds:[rsi]
   14000d787:	mov    ecx,0xb9b6724f
   14000d78c:	or     DWORD PTR [rcx-0x62],ebp
   14000d78f:	(bad)  
   14000d790:	sub    al,0xa5
   14000d792:	push   rdi
   14000d793:	xlat   BYTE PTR ds:[rbx]
   14000d794:	mov    dh,0xd0
   14000d796:	in     eax,0x4f
   14000d798:	fistp  WORD PTR fs:[rsi+0x5d177e00]
   14000d79f:	dec    BYTE PTR [rsi+0x5c]
   14000d7a2:	xchg   ebp,eax
   14000d7a3:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000d7a4:	call   0x1b57b227f
   14000d7a9:	add    ecx,ebx
   14000d7ab:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000d7ac:	repz leave 
   14000d7ae:	mov    esi,0xe2908d3a
   14000d7b3:	std    
   14000d7b4:	mov    ch,cl
   14000d7b6:	(bad)  
   14000d7b7:	icebp  
   14000d7b8:	jle    0x14000d75d
   14000d7ba:	or     ebp,ebp
   14000d7bc:	and    DWORD PTR [rsi+0x3e09fcdc],edi
   14000d7c2:	(bad)  
   14000d7c3:	cld    
   14000d7c4:	sbb    DWORD PTR [rax-0x3f06df0a],0x0
   14000d7cb:	jns    0x14000d770
   14000d7cd:	push   rcx
   14000d7ce:	cmp    edi,0xf05ea049
   14000d7d4:	mov    eax,0x5254011e
   14000d7d9:	sub    eax,0x3edbd5d1
   14000d7de:	(bad)  [rcx-0x38062e0a]
   14000d7e4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d7e5:	scas   al,BYTE PTR es:[rdi]
   14000d7e6:	or     dl,ah
   14000d7e8:	jg     0x14000d7f4
   14000d7ea:	cmp    eax,0xaf3d23cf
   14000d7ef:	repz (bad) 
   14000d7f1:	cdq    
   14000d7f2:	rex.X mov al,0xf4
   14000d7f5:	and    DWORD PTR [rdx+rsi*8+0x4a],ecx
   14000d7f9:	xchg   edx,eax
   14000d7fa:	adc    bl,BYTE PTR [rax+0x10]
   14000d7fd:	adc    ah,BYTE PTR [rbp+rsi*8+0x4a54d14]
   14000d804:	loop   0x14000d875
   14000d806:	sbb    al,0x95
   14000d808:	or     BYTE PTR [rbp-0x12],0x3e
   14000d80c:	xor    DWORD PTR [rbx+0x4c6b0460],ecx
   14000d812:	mov    ah,0xee
   14000d814:	(bad)  
   14000d815:	xchg   ebx,eax
   14000d816:	push   rbx
   14000d817:	adc    DWORD PTR [rbx+0x6929a31a],eax
   14000d81d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d81e:	(bad)  
   14000d81f:	adc    BYTE PTR [rcx-0x5e7d1fdd],cl
   14000d825:	lock (bad) 
   14000d827:	movabs al,ds:0x8d561b4df1851062
   14000d830:	lods   eax,DWORD PTR ds:[rsi]
   14000d831:	pop    rdx
   14000d832:	mov    cl,0x4
   14000d834:	xchg   ecx,eax
   14000d835:	(bad)
   14000d838:	(bad)  
   14000d839:	mov    edi,0x34df23f3
   14000d83e:	cmp    eax,0xff43ebb8
   14000d843:	data16 xor al,0x33
   14000d846:	in     eax,0x20
   14000d848:	ror    BYTE PTR [rbp-0x3622bffb],1
   14000d84e:	test   eax,0x1dcec76c
   14000d853:	(bad)  
   14000d854:	cmp    esp,DWORD PTR [rdx-0x5c]
   14000d857:	cmp    BYTE PTR [rsi+0x68],bh
   14000d85a:	mul    BYTE PTR [rbp+rbx*8+0x7b79d27f]
   14000d861:	sub    DWORD PTR [rcx-0x18],ecx
   14000d864:	in     al,dx
   14000d865:	rcr    edi,cl
   14000d867:	rex.XB
   14000d868:	fs stc 
   14000d86a:	xchg   BYTE PTR [rbx],dh
   14000d86c:	(bad)  
   14000d86d:	sub    eax,0x6b15f4bd
   14000d872:	(bad)  
   14000d873:	xchg   esi,eax
   14000d874:	shr    edi,1
   14000d876:	xor    edx,DWORD PTR [rax+0x25]
   14000d879:	in     eax,dx
   14000d87a:	jnp    0x14000d871
   14000d87c:	cld    
   14000d87d:	cmp    eax,0x57b10bf0
   14000d882:	(bad)  
   14000d883:	push   rdx
   14000d884:	icebp  
   14000d885:	pop    rax
   14000d886:	jo     0x14000d877
   14000d888:	xor    eax,0xae85f555
   14000d88d:	mov    bh,0x7a
   14000d88f:	(bad)  
   14000d890:	iret   
   14000d891:	loop   0x14000d8cb
   14000d893:	ja     0x14000d88b
   14000d895:	jrcxz  0x14000d843
   14000d897:	imul   edi,DWORD PTR [rbp+0x9],0x64084bb2
   14000d89e:	pop    rdi
   14000d89f:	mov    dl,0xf4
   14000d8a1:	(bad)  
   14000d8a2:	and    bh,bl
   14000d8a4:	mov    es,WORD PTR [rax+rdi*1+0x7a1a3cbf]
   14000d8ab:	clc    
   14000d8ac:	mov    ebx,DWORD PTR [rcx-0x5c140698]
   14000d8b2:	mov    ecx,0xf775aa4b
   14000d8b7:	retf   0xa8a7
   14000d8ba:	out    0x77,eax
   14000d8bc:	leave  
   14000d8bd:	jle    0x14000d905
   14000d8bf:	(bad)  
   14000d8c0:	cmp    eax,0xbc9a2e95
   14000d8c5:	xchg   esi,eax
   14000d8c6:	out    0xcb,al
   14000d8c8:	lock stc 
   14000d8ca:	or     bh,dh
   14000d8cc:	mov    dh,0xfd
   14000d8ce:	jbe    0x14000d8de
   14000d8d0:	or     eax,0xd5ab459c
   14000d8d5:	or     dh,BYTE PTR [rbp+0x5a4679fc]
   14000d8db:	fwait
   14000d8dc:	loopne 0x14000d887
   14000d8de:	lods   al,BYTE PTR ds:[rsi]
   14000d8df:	jge    0x14000d8a6
   14000d8e1:	(bad)  
   14000d8e2:	rex.WXB iretq 
   14000d8e4:	mov    dl,BYTE PTR [rbx+rsi*4+0x41]
   14000d8e8:	jrcxz  0x14000d86a
   14000d8ea:	cmp    ah,BYTE PTR [rcx+0x5e]
   14000d8ed:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d8ee:	scas   eax,DWORD PTR es:[rdi]
   14000d8ef:	mov    BYTE PTR [rip+0xffffffffb51eb150],0xc3        # 0xf51f8a46
   14000d8f6:	hlt    
   14000d8f7:	mov    ch,BYTE PTR es:[rdi]
   14000d8fa:	add    BYTE PTR [rax-0xb584051],bh
   14000d900:	mov    ds,WORD PTR [rbx-0x3b]
   14000d903:	sti    
   14000d904:	rex.X (bad) 
   14000d906:	sub    al,0x44
   14000d908:	(bad)  
   14000d909:	jge    0x14000d95c
   14000d90b:	ja     0x14000d964
   14000d90d:	lea    eax,[rsp+rdx*8-0x22]
   14000d911:	(bad)  
   14000d912:	std    
   14000d913:	int3   
   14000d914:	loope  0x14000d924
   14000d916:	xchg   ebp,eax
   14000d917:	(bad)  
   14000d918:	push   rsp
   14000d919:	movabs ds:0x14cfa0ae61777dc1,eax
   14000d922:	sub    DWORD PTR [rdx+0x4c15e027],eax
   14000d928:	data16 lock gs clc 
   14000d92c:	(bad)  
   14000d92d:	xchg   edx,eax
   14000d92e:	or     DWORD PTR [rcx+riz*4-0xfe73f49],edx
   14000d935:	(bad)  
   14000d936:	(bad)  
   14000d937:	jb     0x14000d8c8
   14000d939:	(bad)  
   14000d93a:	ret    0x454a
   14000d93d:	xchg   edx,eax
   14000d93e:	sbb    eax,esi
   14000d940:	movabs eax,ds:0xd67bc6c929c7c8b1
   14000d949:	sahf   
   14000d94a:	mov    cl,0x69
   14000d94c:	mov    esp,0x8f75ccec
   14000d951:	sbb    eax,0xaf19ba3a
   14000d956:	mov    edi,0x27bffc0a
   14000d95b:	cmp    ch,al
   14000d95d:	xchg   ebp,eax
   14000d95e:	mov    WORD PTR [rsi*2+0x62f12237],cs
   14000d965:	xor    DWORD PTR [rdx],esp
   14000d967:	cmp    ch,dl
   14000d969:	rex.RXB (bad) 
   14000d96b:	int    0x77
   14000d96d:	and    BYTE PTR [rsp+rdx*8+0x6b],dh
   14000d971:	mul    DWORD PTR [rdi+rdx*4+0x5]
   14000d975:	rex.WRXB
   14000d976:	repnz adc dh,ah
   14000d979:	add    ah,dh
   14000d97b:	cmp    ah,al
   14000d97d:	mov    ah,0x95
   14000d97f:	jmp    0x14000d9d7
   14000d981:	mov    WORD PTR [rsi-0xe],ds
   14000d984:	cli    
   14000d985:	cmc    
   14000d986:	sbb    ecx,DWORD PTR [rdx]
   14000d988:	add    DWORD PTR [rdi],ebp
   14000d98a:	push   rdx
   14000d98b:	sub    eax,0x552aaf4b
   14000d990:	push   rbp
   14000d991:	pop    rdi
   14000d992:	(bad)  
   14000d993:	mov    ch,0x1b
   14000d995:	sub    eax,0x4ade7c7f
   14000d99a:	sub    eax,0x8089549e
   14000d99f:	xchg   edi,eax
   14000d9a0:	cwde   
   14000d9a1:	loop   0x14000d9b6
   14000d9a3:	repnz sub cl,BYTE PTR [rax+rbp*8+0x72]
   14000d9a8:	loope  0x14000d976
   14000d9aa:	lahf   
   14000d9ab:	mov    dl,0xa6
   14000d9ad:	jne    0x14000d9b6
   14000d9af:	fs xchg edi,eax
   14000d9b1:	repnz lea ebx,[rcx-0x34dcd02]
   14000d9b8:	(bad)  
   14000d9b9:	rex.X mov bpl,BYTE PTR [rdi-0x1de9e5c4]
   14000d9c0:	sub    al,0xa6
   14000d9c2:	rex.WRX or al,0xfe
   14000d9c5:	fs in  eax,dx
   14000d9c7:	lahf   
   14000d9c8:	mov    ch,ah
   14000d9ca:	rex.WXB movabs ds:0x3b4f717afe5a35b9,rax
   14000d9d4:	xchg   esp,eax
   14000d9d5:	hlt    
   14000d9d6:	jbe    0x14000d9f2
   14000d9d8:	addr32 lock test eax,0xf0e45fa1
   14000d9df:	rcl    BYTE PTR [rsi],1
   14000d9e1:	mov    dl,0x81
   14000d9e3:	add    DWORD PTR [rdx+rbp*4-0x19],ebp
   14000d9e7:	rex.RXB out 0xc5,al
   14000d9ea:	clc    
   14000d9eb:	or     ecx,DWORD PTR [rcx-0x42]
   14000d9ee:	jo     0x14000da0a
   14000d9f0:	jnp    0x14000da71
   14000d9f2:	xchg   ebx,eax
   14000d9f3:	or     ebx,DWORD PTR [rdi]
   14000d9f5:	rex.RX ror esi,cl
   14000d9f8:	(bad)  
   14000d9f9:	jmp    0x14000da55
   14000d9fb:	add    ebp,DWORD PTR [rax-0x4e]
   14000d9fe:	cli    
   14000d9ff:	xchg   ebp,eax
   14000da00:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000da01:	rex.WRX
   14000da02:	fwait
   14000da03:	imul   ecx,ebp,0x5db7a149
   14000da09:	xor    eax,0x78d7dccd
   14000da0e:	sbb    edx,0x7da91357
   14000da14:	(bad)  
   14000da15:	push   0xffffffffffffffe0
   14000da17:	mov    ?,WORD PTR [rdi+0x2b]
   14000da1a:	(bad)  
   14000da1b:	rex push 0xffffffffffffffe1
   14000da1e:	rex.B cli 
   14000da20:	imul   esp,DWORD PTR [rdx+0x38],0x40
   14000da24:	(bad)  
   14000da25:	cmp    al,0xc8
   14000da27:	push   rdx
   14000da28:	test   al,0x67
   14000da2a:	add    al,0x43
   14000da2c:	push   rax
   14000da2d:	add    dh,BYTE PTR [rsi]
   14000da2f:	(bad)  
   14000da30:	(bad)  
   14000da31:	(bad)  
   14000da32:	rex.WRB pop r9
   14000da34:	add    eax,DWORD PTR [rbx+0x24056425]
   14000da3a:	adc    ebp,DWORD PTR [rsp+rax*1-0x229db03e]
   14000da41:	mov    bh,0x10
   14000da43:	sbb    al,0x2c
   14000da45:	rex.B ret 0xe692
   14000da49:	adc    cl,BYTE PTR [rsi-0x49de6e59]
   14000da4f:	xor    ebp,DWORD PTR ss:[rbx-0x31]
   14000da53:	fidivr DWORD PTR [rsi+rsi*1-0x1fcdcb91]
   14000da5a:	fisttp WORD PTR [rdi+rdi*4-0xdc0dc1d]
   14000da61:	push   rsp
   14000da62:	push   rdi
   14000da63:	(bad)  
   14000da64:	icebp  
   14000da65:	mov    edi,0x1b34b37e
   14000da6a:	rex.RXB
   14000da6b:	movabs eax,ss:0xdbf9ff78258059a4
   14000da75:	(bad)  
   14000da76:	out    dx,eax
   14000da77:	(bad)  
   14000da78:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000da79:	rex.XB scas eax,DWORD PTR es:[rdi]
   14000da7b:	rex.RXB (bad) 
   14000da7d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000da7e:	in     eax,0x25
   14000da80:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000da81:	add    BYTE PTR [rsi],ah
   14000da83:	mov    dh,0x6e
   14000da85:	jnp    0x14000dac0
   14000da87:	jo     0x14000da16
   14000da89:	sbb    ch,BYTE PTR [rbx+0x2e]
   14000da8c:	jns    0x14000da6b
   14000da8e:	imul   ebx,DWORD PTR [rbx],0x554d6e6c
   14000da94:	fistp  DWORD PTR [rdi]
   14000da96:	jg     0x14000dac0
   14000da98:	sub    esp,DWORD PTR [rcx+0x10]
   14000da9b:	and    r8b,BYTE PTR [rsi+0x7a434230]
   14000daa2:	(bad)  
   14000daa3:	push   rbx
   14000daa4:	xchg   esi,eax
   14000daa5:	pop    rsp
   14000daa6:	rex.RXB movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000daa8:	xchg   edi,eax
   14000daa9:	sbb    dh,BYTE PTR [rcx+riz*1]
   14000daac:	(bad)  
   14000daad:	addr32 jmp 0x1264e5ac4
   14000dab3:	mov    eax,0xac83ea64
   14000dab8:	sbb    BYTE PTR [rdx+0x0],bh
   14000dabb:	mov    dl,0xcb
   14000dabd:	or     BYTE PTR [rsi+0x3fde3d43],bh
   14000dac3:	adc    eax,edi
   14000dac5:	movsxd ecx,DWORD PTR [rcx-0x51]
   14000dac8:	cmp    ebx,DWORD PTR [rdx]
   14000daca:	or     bh,BYTE PTR [rbx-0x36]
   14000dacd:	jmp    0x17518cdb2
   14000dad2:	lock (bad) 
   14000dad4:	(bad)  
   14000dad5:	scas   eax,DWORD PTR es:[rdi]
   14000dad6:	push   0xffffffffffffffe6
   14000dad8:	mov    DWORD PTR [rsi],ebp
   14000dada:	call   FWORD PTR [rsp+rbp*1-0x19]
   14000dade:	lods   eax,DWORD PTR ds:[rsi]
   14000dadf:	pop    rsp
   14000dae0:	jle    0x14000daa4
   14000dae2:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000dae3:	test   QWORD PTR [rip+0xffffffffcfc00b36],rdi        # 0x10fc0e620
   14000daea:	jb     0x14000db54
   14000daec:	xor    al,0x38
   14000daee:	(bad)  
   14000daef:	mov    eax,0x7e471b92
   14000daf4:	cmp    DWORD PTR [rcx-0x7e4d8e5f],0x3366b241
   14000dafe:	mov    eax,0x799027fc
   14000db03:	outs   dx,BYTE PTR ds:[rsi]
   14000db04:	cmp    cl,ah
   14000db06:	add    ebx,DWORD PTR [rbp+0x2]
   14000db09:	je     0x14000db0b
   14000db0b:	ins    BYTE PTR es:[rdi],dx
   14000db0c:	sub    bl,cl
   14000db0e:	rex.WRB add BYTE PTR [r15-0x5eb6886d],r13b
   14000db15:	sub    ebp,DWORD PTR es:[rsi+0x172563b5]
   14000db1c:	(bad)  
   14000db1d:	call   0x1a1d3d8c7
   14000db22:	push   rdx
   14000db23:	push   rsi
   14000db24:	ins    DWORD PTR es:[rdi],dx
   14000db25:	add    eax,edx
   14000db27:	xchg   ebx,eax
   14000db28:	xchg   edx,eax
   14000db29:	(bad)  
   14000db2a:	jp     0x14000daf0
   14000db2c:	loop   0x14000dab0
   14000db2e:	iret   
   14000db2f:	cdq    
   14000db30:	mov    esp,0xa0847982
   14000db35:	(bad)  
   14000db36:	outs   dx,BYTE PTR ds:[rsi]
   14000db37:	push   rax
   14000db38:	(bad)
   14000db3b:	ror    al,0x48
   14000db3e:	int3   
   14000db3f:	adc    BYTE PTR [rax-0x27982aa2],bl
   14000db45:	pop    rsi
   14000db46:	xor    BYTE PTR [rcx+0x4cfd389],bl
   14000db4c:	stos   DWORD PTR es:[rdi],eax
   14000db4d:	mov    dh,0x77
   14000db4f:	pushf  
   14000db50:	cwde   
   14000db51:	cmp    ah,BYTE PTR [rdi+rsi*1]
   14000db54:	shl    BYTE PTR [rax],1
   14000db56:	(bad)  
   14000db57:	adc    ah,al
   14000db59:	out    dx,eax
   14000db5a:	(bad)  
   14000db5b:	imul   ebx,DWORD PTR [rcx-0x7eaf9cfe],0xffffffbc
   14000db62:	fxch   st(2)
   14000db64:	xlat   BYTE PTR ds:[rbx]
   14000db65:	outs   dx,DWORD PTR ds:[rsi]
   14000db66:	cmp    DWORD PTR [rbx+0x22],ebp
   14000db69:	in     al,dx
   14000db6a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000db6b:	(bad)  
   14000db6c:	cmp    eax,0x9f0f8efe
   14000db71:	nop
   14000db72:	adc    al,0x9c
   14000db74:	cmp    bh,BYTE PTR [rax+0x64]
   14000db77:	and    al,0x13
   14000db79:	xlat   BYTE PTR ds:[rbx]
   14000db7a:	es (bad) 
   14000db7c:	std    
   14000db7d:	pop    rbp
   14000db7e:	movabs al,ds:0x67badf3fd8e61653
   14000db87:	(bad)  
   14000db88:	fs push rdx
   14000db8a:	je     0x14000dbf3
   14000db8c:	retf   
   14000db8d:	addr32 add r10b,r8b
   14000db91:	rex.WXB
   14000db92:	add    QWORD PTR [rsp+rbp*2-0x23],rcx
   14000db97:	ss or  bh,ah
   14000db9a:	cmp    al,0x62
   14000db9c:	mov    eax,0x5b2fd5ec
   14000dba1:	(bad)  
   14000dba2:	xor    bl,ah
   14000dba4:	push   0x3bcd497a
   14000dba9:	add    al,0x2b
   14000dbab:	and    DWORD PTR [rip+0x3f813c72],edi        # 0x17f821823
   14000dbb1:	xchg   ecx,eax
   14000dbb2:	jns    0x14000dbdd
   14000dbb4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000dbb5:	rex.WRXB test QWORD PTR [r15],r15
   14000dbb8:	cmc    
   14000dbb9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000dbba:	sahf   
   14000dbbb:	sub    cl,bh
   14000dbbd:	rex.WRXB movabs r8,0x9dff53c5cd321a98
   14000dbc7:	mov    cl,0xa1
   14000dbc9:	pop    rbp
   14000dbca:	and    BYTE PTR [rdi],dl
   14000dbcc:	shl    DWORD PTR [rbx+0x78],cl
   14000dbcf:	rex.WRXB (bad) 
   14000dbd1:	(bad)  
   14000dbd2:	sbb    edx,ebx
   14000dbd4:	jl     0x14000dbb3
   14000dbd6:	and    DWORD PTR [rcx+0x247bafaa],0xffffffc4
   14000dbdd:	sti    
   14000dbde:	outs   dx,BYTE PTR ds:[rsi]
   14000dbdf:	sub    al,BYTE PTR [rax-0x6a38d2c1]
   14000dbe5:	shr    bh,0x5c
   14000dbe8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000dbe9:	(bad)  
   14000dbea:	push   0x4c
   14000dbec:	jg     0x14000dba0
   14000dbee:	cli    
   14000dbef:	rex.WB scas rax,QWORD PTR es:[rdi]
   14000dbf1:	push   rsp
   14000dbf2:	imul   edi,DWORD PTR [rsi],0x879fc113
   14000dbf8:	loop   0x14000db98
   14000dbfa:	mov    esp,0xee01cd01
   14000dbff:	ins    DWORD PTR es:[rdi],dx
   14000dc00:	mov    esi,0x7d1ebf85
   14000dc05:	(bad)  
   14000dc06:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000dc07:	mov    ebp,0xc6ddac88
   14000dc0c:	ss sbb cl,al
   14000dc0f:	add    dh,al
   14000dc11:	(bad)  
   14000dc12:	xchg   ebp,eax
   14000dc13:	loope  0x14000dc74
   14000dc15:	mov    eax,0xbd5e424d
   14000dc1a:	movsxd eax,DWORD PTR [rcx+0x6b]
   14000dc1d:	lods   al,BYTE PTR ds:[rsi]
   14000dc1e:	fnstsw WORD PTR [rdi+riz*4]
   14000dc21:	and    DWORD PTR [rdx+0x1bb5aaf5],esi
   14000dc27:	cmp    eax,0x8c146145
   14000dc2c:	scas   eax,DWORD PTR es:[rdi]
   14000dc2d:	xchg   ecx,eax
   14000dc2e:	test   BYTE PTR [rip+0x1d4d5f0b],dh        # 0x15d4e3b3f
   14000dc34:	(bad)  
   14000dc35:	scas   eax,DWORD PTR es:[rdi]
   14000dc36:	stc    
   14000dc37:	mov    eax,0xc5fa4563
   14000dc3c:	(bad)  
   14000dc3d:	xchg   edx,eax
   14000dc3e:	retf   0x2b82
   14000dc41:	(bad)  
   14000dc42:	scas   al,BYTE PTR es:[rdi]
   14000dc43:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000dc44:	add    al,0xc
   14000dc46:	cmp    eax,0x3293052
   14000dc4b:	or     ebp,DWORD PTR [rcx+0x66]
   14000dc4e:	rex.WB in al,0x4
   14000dc51:	mov    BYTE PTR [rip+0x6e12bdc0],ah        # 0x1ae139a17
   14000dc57:	fwait
   14000dc58:	cmc    
   14000dc59:	cmp    al,0xa2
   14000dc5b:	sub    al,0x35
   14000dc5d:	jle    0x14000dc23
   14000dc5f:	int3   
   14000dc60:	mov    bpl,0x60
   14000dc63:	stos   DWORD PTR es:[rdi],eax
   14000dc64:	add    al,0xaf
   14000dc66:	and    esp,esi
   14000dc68:	adc    al,BYTE PTR [rbx+rax*4-0x4d5eaca9]
   14000dc6f:	lock mov fs,WORD PTR [rcx+0x29]
   14000dc73:	mov    eax,0x2d0c0fc0
   14000dc78:	sbb    DWORD PTR [rcx],ebx
   14000dc7a:	pop    rdx
   14000dc7b:	ss mov cl,0x66
   14000dc7e:	gs sub rax,rsi
   14000dc82:	pop    rbx
   14000dc83:	jrcxz  0x14000dc74
   14000dc85:	clc    
   14000dc86:	lock xchg ebx,eax
   14000dc88:	rol    rcx,0xe6
   14000dc8c:	hlt    
   14000dc8d:	pop    rdx
   14000dc8e:	test   BYTE PTR [rsi],cl
   14000dc90:	push   rax
   14000dc91:	movabs al,ds:0x7f28781e66783be
   14000dc9a:	mov    esp,0x89dcf0d3
   14000dc9f:	jg     0x14000dc37
   14000dca1:	addr32 and al,0x2f
   14000dca4:	and    eax,0x222b600e
   14000dca9:	rex.WXB
   14000dcaa:	ss sahf 
   14000dcac:	mov    ch,0x76
   14000dcae:	(bad)  
   14000dcb0:	jae    0x14000dc79
   14000dcb2:	xchg   esi,eax
   14000dcb3:	xchg   edi,eax
   14000dcb4:	shl    DWORD PTR [rdx-0x9],1
   14000dcb7:	sub    BYTE PTR [rdi],0x95
   14000dcba:	pop    rbx
   14000dcbb:	pop    rdi
   14000dcbc:	pop    rcx
   14000dcbd:	ja     0x14000dc4c
   14000dcbf:	or     ah,BYTE PTR [rcx]
   14000dcc1:	std    
   14000dcc2:	lods   eax,DWORD PTR ds:[rsi]
   14000dcc3:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000dcc4:	inc    DWORD PTR [rdx+rdi*2+0x94bdf9c]
   14000dccb:	mov    dh,0x38
   14000dccd:	(bad)  
   14000dcce:	test   DWORD PTR [rbx-0x2f273581],edx
   14000dcd4:	(bad)  
   14000dcd5:	mov    al,0x17
   14000dcd7:	(bad)  
   14000dcd8:	mov    bh,0x7e
   14000dcda:	sub    dh,al
   14000dcdc:	ja     0x14000dd00
   14000dcde:	lock and ecx,ebx
   14000dce1:	pop    rdi
   14000dce2:	rex.WRX (bad) 
   14000dce4:	stc    
   14000dce5:	cld    
   14000dce6:	mov    bl,0xc1
   14000dce8:	(bad)  
   14000dce9:	mov    ebx,0x47706f6e
   14000dcee:	adc    DWORD PTR [rbp-0x2cc19842],ebp
   14000dcf4:	lahf   
   14000dcf5:	(bad)  
   14000dcf6:	or     eax,0x540a5cc1
   14000dcfb:	vandnps xmm14,xmm14,XMMWORD PTR [rcx+0x4f]
   14000dd00:	push   0xffffffffcc3b51e6
   14000dd05:	out    0xda,eax
   14000dd07:	(bad)  
   14000dd08:	(bad)  
   14000dd09:	mov    es,ecx
   14000dd0b:	rex.WXB leave 
   14000dd0d:	fisubr DWORD PTR [rip+0xffffffff9b1366b2]        # 0xdb1443c5
   14000dd13:	test   DWORD PTR [rbx-0x3527a6c1],ebp
   14000dd19:	(bad)  
   14000dd1a:	(bad)  
   14000dd1b:	vandnpd ymm0,ymm9,YMMWORD PTR [rcx+0x40cdf6b3]
   14000dd23:	sub    esi,DWORD PTR [rdi+0xa09ad3b]
   14000dd29:	mov    ch,0xf8
   14000dd2b:	mov    edi,0xcfa238fe
   14000dd30:	(bad)  
   14000dd31:	ins    DWORD PTR es:[rdi],dx
   14000dd32:	test   DWORD PTR [rdx+0x5b1f12c3],ebx
   14000dd38:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000dd39:	sbb    dl,BYTE PTR [rsi]
   14000dd3b:	(bad)  
   14000dd3c:	xchg   esp,eax
   14000dd3d:	rex loop 0x14000dd50
   14000dd40:	cmp    BYTE PTR [rcx+0x73],0x6
   14000dd44:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000dd45:	cli    
   14000dd46:	scas   eax,DWORD PTR es:[rdi]
   14000dd47:	(bad)  
   14000dd48:	mov    ah,BYTE PTR [rax*8-0x60ec7162]
   14000dd4f:	jae    0x14000dd42
   14000dd51:	js     0x14000dd48
   14000dd53:	out    0x93,eax
   14000dd55:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000dd56:	(bad)  
   14000dd57:	mov    bl,0xa0
   14000dd59:	movsxd eax,ebp
   14000dd5b:	xor    ch,0xe0
   14000dd5e:	or     dl,bl
   14000dd60:	movabs ds:0x515042b8392201a,eax
   14000dd69:	xor    eax,0x5870ea61
   14000dd6e:	rcl    DWORD PTR [rip+0xffffffff97871f51],0x4        # 0xd787fcc6
   14000dd75:	outs   dx,DWORD PTR ds:[rsi]
   14000dd76:	rex.B lods eax,DWORD PTR ds:[rsi]
   14000dd78:	test   esp,ebx
   14000dd7a:	movsxd edi,DWORD PTR [rdx+0x1bd58de1]
   14000dd80:	(bad)  
   14000dd81:	js     0x14000dd3f
   14000dd83:	(bad)  
   14000dd84:	sbb    BYTE PTR [rcx-0x4e2bfb0d],cl
   14000dd8a:	jp     0x14000dd6f
   14000dd8c:	xchg   BYTE PTR [rip+0x716edda],dl        # 0x14717cb6c
   14000dd92:	ja     0x14000dd83
   14000dd94:	push   rbx
   14000dd95:	push   rsp
   14000dd96:	jg     0x14000ddb1
   14000dd98:	clc    
   14000dd99:	mov    DWORD PTR [rdx+rbp*1-0x72],esi
   14000dd9d:	jge    0x14000dd91
   14000dd9f:	sti    
   14000dda0:	xor    BYTE PTR fs:[rdi+0x6c],bh
   14000dda4:	sbb    eax,0x72acc2e0
   14000dda9:	and    esp,eax
   14000ddab:	hlt    
   14000ddac:	out    dx,eax
   14000ddad:	(bad)  
   14000ddae:	(bad)  
   14000ddaf:	lock and DWORD PTR [rsi+rcx*4+0x26cf1488],eax
   14000ddb7:	call   FWORD PTR [rdi+0x1e125e4]
   14000ddbd:	rex.WR ins BYTE PTR es:[rdi],dx
   14000ddbf:	(bad)  
   14000ddc1:	ffree  st(0)
   14000ddc3:	stos   DWORD PTR es:[rdi],eax
   14000ddc4:	fild   DWORD PTR [rbx-0x507a1913]
   14000ddca:	pop    rcx
   14000ddcb:	(bad)  
   14000ddcc:	loope  0x14000dd5a
   14000ddce:	movabs ds:0x2ba65864174922f1,al
   14000ddd7:	xor    cl,al
   14000ddd9:	mov    ecx,0x556cf109
   14000ddde:	mov    ebx,0xa401ea9f
   14000dde3:	out    0xd,al
   14000dde5:	rex (bad) 
   14000dde7:	(bad)  
   14000dde8:	xchg   edi,eax
   14000dde9:	(bad)  
   14000ddea:	icebp  
   14000ddeb:	sbb    al,ah
   14000dded:	sbb    BYTE PTR [rdi],dl
   14000ddef:	rex.WRXB dec BYTE PTR [r15]
   14000ddf2:	mov    BYTE PTR [rsi-0x7fac08a],0x93
   14000ddf9:	mov    ebp,0x286cc073
   14000ddfe:	jmp    0x14000de4d
   14000de00:	jge    0x14000ddfe
   14000de02:	in     eax,0xb1
   14000de04:	nop
   14000de05:	fisttp WORD PTR [rdi+0x69]
   14000de08:	mov    esi,0x7b42fe04
   14000de0d:	imul   edi,DWORD PTR [rsi],0xbf4d5ad5
   14000de13:	jmp    0x14000de6e
   14000de15:	cld    
   14000de16:	or     QWORD PTR [rdi+r12*8-0x28],rax
   14000de1b:	sbb    BYTE PTR [rax],dh
   14000de1d:	lea    ebx,[rdx+0x71]
   14000de20:	rex.WRXB push 0xffffffff83dffde1
   14000de26:	dec    DWORD PTR [rcx+0x232e8b9d]
   14000de2c:	imul   esi,DWORD PTR [rdi+0x6c2d5ac9],0xffffff96
   14000de33:	push   rdi
   14000de34:	or     eax,0x8f9fe939
   14000de39:	mov    bh,0x85
   14000de3b:	xchg   DWORD PTR [rsi-0x28],ebx
   14000de3e:	xchg   ebx,eax
   14000de3f:	cmp    bh,bl
   14000de41:	loop   0x14000ddca
   14000de43:	(bad)  
   14000de44:	push   rsi
   14000de45:	cmc    
   14000de46:	jmp    0x18ccbdd7e
   14000de4b:	cmp    al,0x42
   14000de4d:	pop    rax
   14000de4e:	test   al,0xb3
   14000de50:	push   rdi
   14000de51:	mov    WORD PTR [rax+0x23f17c0],ds
   14000de57:	mov    ch,0x3f
   14000de59:	(bad)  
   14000de5a:	or     eax,0x976ded00
   14000de5f:	out    dx,al
   14000de60:	(bad)  
   14000de61:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000de62:	push   rdx
   14000de63:	mov    edi,0xaf359370
   14000de68:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000de69:	and    eax,0x5260c752
   14000de6e:	(bad)  
   14000de6f:	(bad)  
   14000de70:	inc    BYTE PTR [rsi+0x6c]
   14000de73:	div    DWORD PTR [rdx-0x5a3316fc]
   14000de79:	push   rsp
   14000de7a:	outs   dx,DWORD PTR ds:[rsi]
   14000de7b:	jp     0x14000de3f
   14000de7d:	test   BYTE PTR [rax],dl
   14000de7f:	rol    ah,0x8d
   14000de82:	and    eax,0xb3300a6
   14000de87:	(bad)  
   14000de88:	rex.WRB (bad) 
   14000de8a:	sbb    al,0x66
   14000de8c:	(bad)  
   14000de8e:	(bad)  
   14000de8f:	lods   rax,QWORD PTR ds:[rsi]
   14000de91:	mov    dh,BYTE PTR [rax]
   14000de93:	cmc    
   14000de94:	sbb    DWORD PTR [rdx+rdi*4-0x7035e4fc],esp
   14000de9b:	xchg   ecx,eax
   14000de9c:	movabs al,ds:0x36d3aae9806131a7
   14000dea5:	mov    cs,WORD PTR [rdi]
   14000dea7:	or     al,0xd
   14000dea9:	mov    dh,0x81
   14000deab:	rex.WXB (bad) 
   14000dead:	fcomip st,st(1)
   14000deaf:	loope  0x14000dea0
   14000deb1:	rex.WXB fild QWORD PTR [r9+0x66353d33]
   14000deb8:	ret    
   14000deb9:	pop    rdx
   14000deba:	xchg   DWORD PTR [rbp+0x42],ebx
   14000debd:	mov    ch,0x9f
   14000debf:	(bad)  
   14000dec0:	or     bl,bl
   14000dec2:	mov    ecx,0xcef65fed
   14000dec7:	mov    DWORD PTR [rcx-0x8f5612],edx
   14000decd:	loope  0x14000def4
   14000decf:	loopne 0x14000ded2
   14000ded1:	rex.WR ins BYTE PTR es:[rdi],dx
   14000ded3:	fnsave [rsi]
   14000ded5:	(bad)  
   14000ded6:	cld    
   14000ded7:	mov    WORD PTR [rdx-0x1540e8cf],cs
   14000dedd:	in     al,dx
   14000dede:	lea    ecx,[rbp+0x7a4acd86]
   14000dee4:	xor    edi,esp
   14000dee6:	rex.X mov bpl,0x5f
   14000dee9:	scas   eax,DWORD PTR es:[rdi]
   14000deea:	sbb    BYTE PTR [rdi+rdx*2+0x78810be2],ah
   14000def1:	lea    esp,[rbp-0x40]
   14000def4:	push   rax
   14000def5:	mov    cl,0xfb
   14000def7:	test   eax,0x2b72afa2
   14000defc:	add    DWORD PTR [rcx+0xe],0x87e4c171
   14000df03:	sbb    BYTE PTR [rip+0xfffffffffedd1fde],bl        # 0x13eddfee7
   14000df09:	cmp    cl,BYTE PTR [rsi+rdx*1-0x6e]
   14000df0d:	jle    0x14000df42
   14000df0f:	rcr    cl,1
   14000df11:	(bad)  
   14000df12:	leave  
   14000df13:	mov    esi,0x3babb638
   14000df18:	adc    eax,0xadd77ddc
   14000df1d:	(bad)  
   14000df1e:	repz imul ebp,DWORD PTR [rdi-0x30f2f848],0xffffffcf
   14000df26:	mov    r13b,0xe
   14000df29:	pop    rdi
   14000df2a:	(bad)  
   14000df2b:	cli    
   14000df2c:	adc    eax,0x26aeb548
   14000df31:	xor    ebp,edi
   14000df33:	mov    cl,0x93
   14000df35:	(bad)  
   14000df36:	iret   
   14000df37:	jmp    0xebf8fb22
   14000df3c:	movabs eax,ds:0xe2b568d097b450f7
   14000df45:	lods   al,BYTE PTR ds:[rsi]
   14000df46:	ds mov eax,esi
   14000df49:	(bad)  
   14000df4a:	jb     0x14000dfb6
   14000df4c:	imul   edi,esi,0xf198144a
   14000df52:	(bad)  
   14000df53:	test   BYTE PTR [rdi-0x69],0x33
   14000df57:	xchg   ebx,eax
   14000df58:	xchg   DWORD PTR [rbx-0x2c222112],ecx
   14000df5e:	jae    0x14000df27
   14000df60:	(bad)  
   14000df61:	int    0x76
   14000df63:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000df64:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000df65:	out    0xca,eax
   14000df67:	(bad)  
   14000df68:	mov    dh,0xe3
   14000df6a:	imul   dh
   14000df6c:	cmp    edi,DWORD PTR [rdi+rdx*1]
   14000df6f:	cld    
   14000df70:	test   BYTE PTR [rax-0x23],bl
   14000df73:	out    0x85,eax
   14000df75:	xor    eax,0xf206c7ab
   14000df7a:	jbe    0x14000df9f
   14000df7c:	sbb    ebx,DWORD PTR [rcx]
   14000df7e:	sbb    DWORD PTR [rax+0x2c],ebp
   14000df81:	pop    rsi
   14000df82:	cmp    bl,al
   14000df84:	sbb    al,0x1d
   14000df86:	imul   esi,DWORD PTR [rdi+rax*8],0x46
   14000df8a:	fwait
   14000df8b:	int    0xc5
   14000df8d:	in     eax,dx
   14000df8e:	lods   al,BYTE PTR ds:[rsi]
   14000df8f:	mov    DWORD PTR [rsi-0x4fcb068e],eax
   14000df95:	and    ebp,DWORD PTR [rcx]
   14000df97:	mov    edi,DWORD PTR [rdx+0x31bd5057]
   14000df9d:	int3   
   14000df9e:	add    esi,DWORD PTR [rdx-0x2b3cef3a]
   14000dfa4:	mul    BYTE PTR [rdi]
   14000dfa6:	cmp    eax,0xc0b2efae
   14000dfab:	pop    rbx
   14000dfac:	xor    dl,bl
   14000dfae:	repz shl BYTE PTR cs:[rsi+0x4b69c256],cl
   14000dfb6:	(bad)  
   14000dfb7:	mov    BYTE PTR [rcx-0x167dd862],dl
   14000dfbd:	sub    DWORD PTR [rsi-0x5c9e7834],eax
   14000dfc3:	loope  0x14000dfe5
   14000dfc5:	shl    BYTE PTR [rbx],cl
   14000dfc7:	repz loop 0x14000dfd1
   14000dfca:	iret   
   14000dfcb:	ins    BYTE PTR es:[rdi],dx
   14000dfcc:	stos   BYTE PTR es:[rdi],al
   14000dfcd:	lods   al,BYTE PTR ds:[rsi]
   14000dfce:	mov    fs,edi
   14000dfd0:	rcr    BYTE PTR [rdx],0xc4
   14000dfd3:	stc    
   14000dfd4:	movabs al,ds:0x8a940dcd597c2428
   14000dfdd:	icebp  
   14000dfde:	(bad)  
   14000dfdf:	mov    ch,0xd
   14000dfe1:	add    eax,0x6f3b6135
   14000dfe6:	ret    0x2402
   14000dfe9:	in     al,0xb9
   14000dfeb:	pop    rcx
   14000dfec:	mov    esi,0xc78afd61
   14000dff1:	mov    edi,0x7813ef76
   14000dff6:	imul   esi
   14000dff8:	icebp  
   14000dff9:	mov    bh,0xff
   14000dffb:	stc    
   14000dffc:	mov    edi,0xb7e3feec
   14000e001:	out    dx,al
   14000e002:	(bad)  
   14000e003:	pop    rcx
   14000e004:	je     0x14000e072
   14000e006:	cmp    eax,0xc3eaa050
   14000e00b:	and    al,0x12
   14000e00d:	cld    
   14000e00e:	jge    0x14000e007
   14000e010:	fcmovnb st,st(7)
   14000e012:	mov    esp,0x61ac9df3
   14000e017:	mov    ebx,0x7f5814ee
   14000e01c:	js     0x14000dfaf
   14000e01e:	sub    eax,DWORD PTR [rax+0xcdbad89]
   14000e024:	lock sub ecx,DWORD PTR [rax-0x11816097]
   14000e02b:	xchg   BYTE PTR [rip+0xffffffff8f0d376b],dl        # 0xcf0e179c
   14000e031:	xchg   esi,eax
   14000e032:	hlt    
   14000e033:	mov    BYTE PTR [rbp+0x292b9baa],bl
   14000e039:	add    al,dl
   14000e03b:	(bad)  
   14000e03c:	xchg   esp,eax
   14000e03d:	stos   BYTE PTR es:[rdi],al
   14000e03e:	test   BYTE PTR [rdx+0x67],0x5f
   14000e042:	(bad)  
   14000e043:	adc    ah,BYTE PTR [rbx+0x5e]
   14000e046:	stos   DWORD PTR es:[rdi],eax
   14000e047:	outs   dx,DWORD PTR ds:[rsi]
   14000e048:	jge    0x14000dfd0
   14000e04a:	fbld   TBYTE PTR [rdx]
   14000e04c:	div    BYTE PTR [rbx-0x1f]
   14000e04f:	in     al,0x9f
   14000e051:	xor    esi,DWORD PTR [rdx]
   14000e053:	jl     0x14000e065
   14000e055:	in     al,0x22
   14000e057:	rex.WRX ins BYTE PTR es:[rdi],dx
   14000e059:	and    esp,ebx
   14000e05b:	jge    0x14000dffa
   14000e05d:	in     al,dx
   14000e05e:	or     eax,0xff532cec
   14000e063:	inc    dl
   14000e065:	xor    al,0xdf
   14000e067:	add    dh,al
   14000e069:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e06a:	xor    al,0xdf
   14000e06c:	sbb    al,0xf4
   14000e06e:	push   rsi
   14000e06f:	(bad)  
   14000e070:	rcr    DWORD PTR [rsi],1
   14000e072:	lock xchg ebx,eax
   14000e074:	mov    ecx,0xb4730b4a
   14000e079:	sbb    dl,BYTE PTR [rbp-0x24]
   14000e07c:	jg     0x14000e0ba
   14000e07e:	mov    ebx,0xf45ebf88
   14000e083:	jbe    0x14000e0e1
   14000e085:	imul   edx,DWORD PTR [rcx],0x59
   14000e088:	stos   DWORD PTR es:[rdi],eax
   14000e089:	test   esp,esp
   14000e08b:	or     eax,0x4afc20e2
   14000e090:	push   rdx
   14000e091:	sub    al,0x3e
   14000e093:	jmp    0x180fc9214
   14000e098:	addr32 out 0xf1,al
   14000e09b:	(bad)  
   14000e09c:	(bad)  
   14000e09d:	sbb    al,0xdb
   14000e09f:	(bad)  
   14000e0a0:	call   0x13bbeaa26
   14000e0a5:	(bad)  
   14000e0a6:	iret   
   14000e0a7:	xchg   BYTE PTR [rip+0xfffffffff4e07c74],al        # 0x134e15d21
   14000e0ad:	add    ah,bl
   14000e0af:	(bad)  
   14000e0b0:	fisubr WORD PTR [rbx-0x4b]
   14000e0b3:	adc    dl,BYTE PTR [rbp+0x6f]
   14000e0b6:	jns    0x14000e126
   14000e0b8:	js     0x14000e0a2
   14000e0ba:	shr    ecx,0x49
   14000e0bd:	or     ecx,esi
   14000e0bf:	test   BYTE PTR [rdx],ah
   14000e0c1:	(bad)  
   14000e0c2:	rex.R
   14000e0c3:	rex.R (bad) 
   14000e0c5:	mov    BYTE PTR [rax+0x63],bl
   14000e0c8:	cmp    DWORD PTR [rbp-0xd],edi
   14000e0cb:	clc    
   14000e0cc:	enter  0xcdfa,0xcb
   14000e0d0:	xchg   edi,eax
   14000e0d2:	xlat   BYTE PTR ds:[rbx]
   14000e0d3:	sbb    bl,BYTE PTR cs:[rax+0x36]
   14000e0d7:	(bad)  
   14000e0d8:	push   0xffffffffa110b50b
   14000e0dd:	jmp    0xcfcc
   14000e0e1:	rex.XB add eax,0x14460f68
   14000e0e7:	(bad)  
   14000e0e8:	jg     0x14000e099
   14000e0ea:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e0eb:	add    al,0xaa
   14000e0ed:	rol    BYTE PTR [rdx-0x43b7f6e2],1
   14000e0f3:	pop    rdi
   14000e0f4:	(bad)  
   14000e0f5:	mov    esi,0xa0a19deb
   14000e0fa:	xchg   rdx,rax
   14000e0fc:	rex.X rcr DWORD PTR [rsi-0x36],1
   14000e100:	rol    bh,1
   14000e102:	std    
   14000e103:	(bad)  
   14000e104:	xchg   BYTE PTR [rip+0x26349bc],bl        # 0x142642ac6
   14000e10a:	ret    
   14000e10b:	xchg   DWORD PTR [rax-0x63b3d258],edx
   14000e111:	sub    eax,0xb3262a88
   14000e116:	cwde   
   14000e117:	ret    0x4a81
   14000e11a:	sub    BYTE PTR [rsi+0x160e4c24],ch
   14000e120:	and    ebx,DWORD PTR [rax]
   14000e122:	(bad)  
   14000e123:	pop    rsp
   14000e124:	sbb    BYTE PTR [rdi-0x7bccc87b],bl
   14000e12a:	iret   
   14000e12b:	lahf   
   14000e12c:	js     0x14000e138
   14000e12e:	lea    ebp,[rcx-0x5d38eef4]
   14000e134:	movsxd esp,DWORD PTR gs:[rbx]
   14000e137:	rex.WXB push r15
   14000e139:	sub    eax,0x6bb83b1f
   14000e13e:	scas   eax,DWORD PTR es:[rdi]
   14000e13f:	(bad)  
   14000e140:	std    
   14000e141:	test   DWORD PTR [rdi-0x48141402],eax
   14000e147:	sbb    al,BYTE PTR ss:[rdi-0x5e9d1ee9]
   14000e14e:	mov    BYTE PTR [rcx],dl
   14000e150:	xor    DWORD PTR [rbx-0x27],0xffffffc7
   14000e154:	(bad)  
   14000e155:	mov    dh,0xef
   14000e157:	xor    al,dl
   14000e159:	sub    eax,0xfba4ee3a
   14000e15e:	call   QWORD PTR [rdi]
   14000e160:	retf   0x5a8b
   14000e163:	add    DWORD PTR [rax],eax
   14000e165:	outs   dx,DWORD PTR ds:[rsi]
   14000e166:	add    esi,ecx
   14000e168:	sbb    DWORD PTR [rbx-0x42],ebx
   14000e16b:	rol    DWORD PTR fs:[rbp-0x51],1
   14000e16f:	pop    rsp
   14000e170:	mov    bh,0x2e
   14000e172:	lods   al,BYTE PTR ds:[rsi]
   14000e173:	xor    edx,edi
   14000e175:	(bad)  [rdi+0x22]
   14000e179:	punpcklbw mm1,DWORD PTR [rax]
   14000e17c:	icebp  
   14000e17d:	jle    0x14000e134
   14000e17f:	jle    0x14000e1a0
   14000e181:	test   eax,0xf317afb2
   14000e186:	sbb    ecx,DWORD PTR [rcx-0x23298b75]
   14000e18c:	retf   0x180c
   14000e18f:	data16 (bad) 
   14000e191:	(bad)  
   14000e192:	rex.WRX std 
   14000e194:	cmp    ebx,eax
   14000e196:	ret    
   14000e197:	(bad)  
   14000e198:	sahf   
   14000e199:	add    bh,ah
   14000e19b:	xor    eax,0xc38f5fc6
   14000e1a0:	fadd   QWORD PTR [rcx-0x2cb01470]
   14000e1a6:	jp     0x14000e163
   14000e1a8:	shl    DWORD PTR [rcx+0x54],cl
   14000e1ab:	test   edx,0x1cf55db1
   14000e1b1:	jg     0x14000e194
   14000e1b3:	jp     0x14000e20b
   14000e1b5:	ffreep st(7)
   14000e1b7:	rex.WXB movabs r11,0xbb6e5a7eb18b8d2a
   14000e1c1:	xchg   ecx,eax
   14000e1c2:	rex.RXB cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e1c4:	mov    edi,0xf5fccec5
   14000e1c9:	cld    
   14000e1ca:	ret    
   14000e1cb:	lock pop rbx
   14000e1cd:	mov    cl,0xcd
   14000e1cf:	es pop rcx
   14000e1d1:	mov    bl,0x85
   14000e1d3:	mov    rsi,QWORD PTR [r10-0x3c]
   14000e1d7:	cmp    eax,0x7c2c9815
   14000e1dc:	idiv   DWORD PTR [rsi+0x3c8f2707]
   14000e1e2:	jl     0x14000e1e3
   14000e1e4:	sahf   
   14000e1e5:	movsxd ecx,DWORD PTR [rdi]
   14000e1e7:	cmp    eax,0x7878ebb8
   14000e1ec:	xor    DWORD PTR [rax-0x16c555fa],edi
   14000e1f2:	pushf  
   14000e1f3:	mov    edi,0xdbbf7bcf
   14000e1f8:	jns    0x14000e1f9
   14000e1fa:	movabs al,ds:0x9e28521ebdebdbaa
   14000e203:	clc    
   14000e204:	fnstsw WORD PTR [rdi-0x1]
   14000e207:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e208:	xor    eax,ebx
   14000e20a:	jmp    0x14000e28a
   14000e20c:	mul    dh
   14000e20e:	mov    bl,0x8
   14000e210:	(bad)  
   14000e211:	sar    DWORD PTR [rax+0x6416ac88],0x8d
   14000e218:	mov    BYTE PTR [rcx+riz*1-0x22298de],bl
   14000e21f:	scas   eax,DWORD PTR es:[rdi]
   14000e220:	(bad)  
   14000e221:	sbb    al,0xfe
   14000e223:	(bad)  
   14000e224:	fisttp QWORD PTR [rdi-0x3529cee2]
   14000e22a:	mov    dl,0xa5
   14000e22c:	sub    DWORD PTR [rbp+0xed79b4d],0x6f
   14000e233:	mov    ecx,0xf2d8d560
   14000e238:	xchg   ecx,eax
   14000e239:	mov    bx,0xfe32
   14000e23d:	sub    DWORD PTR [rax+rsi*1],esi
   14000e240:	int3   
   14000e241:	movsxd ecx,DWORD PTR [rdi]
   14000e243:	and    eax,0xb3d2c602
   14000e248:	fisubr DWORD PTR [rcx-0x58]
   14000e24b:	push   0x3dd7dcda
   14000e250:	mov    BYTE PTR [rax+rdi*4-0x1d],ah
   14000e254:	ret    
   14000e255:	hlt    
   14000e256:	cli    
   14000e257:	xchg   ebx,eax
   14000e258:	xchg   BYTE PTR [rbx-0xa83f30c],cl
   14000e25e:	xlat   BYTE PTR ds:[rbx]
   14000e25f:	sub    ah,BYTE PTR [rax-0x3d]
   14000e262:	sbb    QWORD PTR [r10d],rcx
   14000e266:	addr32 ret 0xe1f5
   14000e26a:	(bad)  
   14000e26b:	push   0x50
   14000e26d:	xchg   ebx,eax
   14000e26e:	push   rdi
   14000e26f:	adc    BYTE PTR [rdx+0x1140a159],0x1f
   14000e276:	sub    ch,BYTE PTR [rbp+rax*8-0x77351a3b]
   14000e27d:	xchg   BYTE PTR [rsi-0x5d],al
   14000e280:	retf   
   14000e281:	out    dx,eax
   14000e282:	rex.WRB
   14000e283:	rex.W out 0x1b,eax
   14000e286:	adc    BYTE PTR [rdx+riz*8],cl
   14000e289:	add    eax,DWORD PTR [rdi+0x5852a2e0]
   14000e28f:	mov    cl,0x69
   14000e291:	jrcxz  0x14000e23d
   14000e293:	jrcxz  0x14000e21c
   14000e295:	(bad)  
   14000e296:	rex.WRX jbe 0x14000e300
   14000e299:	pop    di
   14000e29b:	mov    bl,0x75
   14000e29d:	out    0x1b,eax
   14000e29f:	fidivr WORD PTR [rax-0x2d]
   14000e2a2:	xchg   BYTE PTR [rdi+0x17b620ee],cl
   14000e2a8:	add    DWORD PTR [rsi+rcx*2+0x66],ecx
   14000e2ac:	xchg   DWORD PTR [rdi],ebx
   14000e2ae:	mov    eax,0x6ca50ff
   14000e2b3:	pushf  
   14000e2b4:	adc    dh,bh
   14000e2b6:	(bad)  
   14000e2b7:	jp     0x14000e303
   14000e2b9:	repz rex.RB (bad) 
   14000e2bc:	adc    ebx,DWORD PTR [rbx-0x49]
   14000e2bf:	sub    eax,0x3141b853
   14000e2c4:	add    edx,DWORD PTR [rdi+0x7d]
   14000e2c7:	jmp    QWORD PTR [rbp+0x5b]
   14000e2ca:	xchg   esi,eax
   14000e2cb:	lea    esi,[rdi+0x6db63587]
   14000e2d1:	ficom  DWORD PTR [rbx+rdx*4]
   14000e2d4:	(bad)
   14000e2d7:	xchg   edi,eax
   14000e2d8:	pop    rsi
   14000e2d9:	or     BYTE PTR [rax+0x4d],ah
   14000e2dc:	retf   0x48e6
   14000e2df:	rex.WR sti 
   14000e2e1:	rex.WB add rax,0x17d91ef6
   14000e2e7:	stos   BYTE PTR es:[rdi],al
   14000e2e8:	std    
   14000e2e9:	(bad)  
   14000e2ea:	fs (bad) 
   14000e2ec:	out    0x1e,eax
   14000e2ee:	(bad)  
   14000e2ef:	cmp    BYTE PTR [rbx],ah
   14000e2f1:	ret    
   14000e2f2:	rex.RXB
   14000e2f3:	rex (bad) 
   14000e2f5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e2f6:	rex.WX jmp 0x13f0731fd
   14000e2fc:	push   rcx
   14000e2fd:	cwde   
   14000e2fe:	cmp    ebx,DWORD PTR [rax]
   14000e300:	lods   eax,DWORD PTR ds:[rsi]
   14000e301:	(bad)  
   14000e302:	rcr    eax,1
   14000e304:	ret    0x3b1b
   14000e307:	stc    
   14000e308:	stos   BYTE PTR es:[rdi],al
   14000e309:	rcr    DWORD PTR [rip+0x3d7f1cb5],0xcd        # 0x17d7fffc5
   14000e310:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e311:	sbb    dl,bl
   14000e313:	jl     0x14000e2e1
   14000e315:	out    0x11,eax
   14000e317:	xor    DWORD PTR [rsp+rdi*8+0x7f6e0dbe],eax
   14000e31e:	sub    esp,DWORD PTR [rax+rdi*8-0x24232438]
   14000e325:	mov    eax,0xae863b96
   14000e32a:	(bad)  
   14000e32b:	mov    dh,0x22
   14000e32d:	fst    DWORD PTR [rdi+0x6a3d20e7]
   14000e333:	out    dx,eax
   14000e334:	jmp    0x14000e311
   14000e336:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e337:	(bad)  
   14000e338:	fistp  QWORD PTR [rbp-0x39]
   14000e33b:	(bad)  
   14000e33c:	or     DWORD PTR [rdi],0x3d
   14000e33f:	mov    eax,0xe2a838eb
   14000e344:	adc    eax,0x4b2a9d55
   14000e349:	ja     0x14000e306
   14000e34b:	jae    0x14000e33b
   14000e34d:	out    dx,al
   14000e34e:	sar    BYTE PTR [rcx-0x11004825],cl
   14000e354:	idiv   DWORD PTR [rip+0xffffffff8b7e2a76]        # 0xcb7f0dd0
   14000e35a:	xor    eax,0xa6cbfaef
   14000e35f:	adc    DWORD PTR [rcx],edi
   14000e361:	pop    rdi
   14000e362:	rex.R
   14000e363:	cs adc ah,cl
   14000e366:	xor    dl,BYTE PTR [rcx]
   14000e368:	jae    0x14000e320
   14000e36a:	sbb    BYTE PTR [rbx+rcx*8],ah
   14000e36d:	xor    dh,BYTE PTR [rbx-0x5e552c8f]
   14000e373:	xor    ebx,DWORD PTR [rsi-0x4a]
   14000e376:	data16 hlt 
   14000e378:	gs pop rbx
   14000e37a:	xchg   esi,eax
   14000e37b:	sub    eax,0x71491111
   14000e380:	jle    0x14000e367
   14000e382:	adc    esp,edx
   14000e384:	sub    eax,0xe9e3bc7d
   14000e389:	xchg   ecx,eax
   14000e38a:	test   BYTE PTR [rbp+0x33],dh
   14000e38d:	pop    rax
   14000e38e:	out    0x23,eax
   14000e390:	rcl    BYTE PTR [rbx],cl
   14000e392:	cmc    
   14000e393:	(bad)
   14000e398:	out    0xff,al
   14000e39a:	push   rbp
   14000e39b:	movabs ds:0x1a04855c57db8902,al
   14000e3a4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e3a5:	xchg   esp,eax
   14000e3a6:	test   al,0x9c
   14000e3a8:	mov    esp,0x7de29de2
   14000e3ad:	sub    BYTE PTR [rsi],dl
   14000e3af:	jb     0x14000e362
   14000e3b1:	fcmovbe st,st(1)
   14000e3b3:	(bad)  
   14000e3b4:	ds (bad) 
   14000e3b6:	push   rsp
   14000e3b7:	loope  0x14000e42e
   14000e3b9:	pushf  
   14000e3ba:	loop   0x14000e42c
   14000e3bc:	clc    
   14000e3bd:	rol    BYTE PTR [rdi-0x557dc413],cl
   14000e3c3:	loop   0x14000e381
   14000e3c5:	rex.XB mov r13d,0x6211652
   14000e3cb:	jb     0x14000e3ab
   14000e3cd:	movabs eax,ds:0x3bee4cf4bf2f06a5
   14000e3d6:	jo     0x14000e43c
   14000e3d8:	sti    
   14000e3d9:	jge    0x14000e3d2
   14000e3db:	out    dx,eax
   14000e3dc:	pop    rax
   14000e3dd:	fstp   TBYTE PTR [rdx]
   14000e3df:	cmp    bh,ch
   14000e3e1:	ror    DWORD PTR [rbx-0x686102c1],0x2d
   14000e3e8:	(bad)  
   14000e3ea:	rex sbb edi,DWORD PTR [rax]
   14000e3ed:	(bad)  
   14000e3ee:	lahf   
   14000e3ef:	stc    
   14000e3f0:	rex.WR stc 
   14000e3f2:	clc    
   14000e3f3:	(bad)  
   14000e3f4:	cld    
   14000e3f5:	outs   dx,DWORD PTR ds:[rsi]
   14000e3f6:	cldemote BYTE PTR [rbx]
   14000e3f9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e3fa:	outs   dx,DWORD PTR ds:[rsi]
   14000e3fb:	or     bl,BYTE PTR [rcx]
   14000e3fd:	adc    BYTE PTR [rbx+0x22],0x2f
   14000e401:	pop    rdx
   14000e402:	add    eax,0xb6eb6eb0
   14000e407:	pop    rdi
   14000e408:	add    DWORD PTR [rcx-0x3d],edi
   14000e40b:	(bad)  
   14000e40c:	mov    bl,0xd7
   14000e40e:	scas   eax,DWORD PTR es:[rdi]
   14000e40f:	mov    esp,0x361b75e2
   14000e414:	adc    al,0x99
   14000e416:	jmp    0x1a931d328
   14000e41b:	mov    eax,0x4bf0443
   14000e420:	rex.WRXB rcr BYTE PTR [r10+0x721be654],0xff
   14000e428:	add    QWORD PTR [r12+rsi*1+0x7f595e5f],rsp
   14000e430:	(bad)  
   14000e431:	test   eax,0xa996ce3c
   14000e436:	rex.WRXB xor QWORD PTR [r14],r14
   14000e439:	mov    ah,0xf
   14000e43b:	in     al,0x2
   14000e43d:	mov    esi,0x123fe5b1
   14000e442:	sub    al,0x7f
   14000e444:	jns    0x14000e472
   14000e446:	fdivr  QWORD PTR [rdx+0x2bec8133]
   14000e44c:	movsxd ecx,DWORD PTR [rsi-0xfd7d021]
   14000e452:	pop    rcx
   14000e453:	cwde   
   14000e454:	jrcxz  0x14000e405
   14000e456:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e457:	not    esi
   14000e459:	loop   0x14000e458
   14000e45b:	fs stc 
   14000e45d:	imul   esp,DWORD PTR [rbx-0x45],0xffffffd4
   14000e461:	ss xchg ecx,eax
   14000e463:	out    0x20,al
   14000e465:	lahf   
   14000e466:	outs   dx,DWORD PTR ds:[rsi]
   14000e467:	std    
   14000e468:	cmp    BYTE PTR [rdi-0x7ea1a1f3],cl
   14000e46e:	pop    rdi
   14000e46f:	and    dl,bl
   14000e471:	pop    rdi
   14000e472:	sub    bh,BYTE PTR [rdx-0x5]
   14000e475:	pop    rbp
   14000e476:	xchg   esi,esi
   14000e478:	cmp    al,0x72
   14000e47a:	fucomip st,st(6)
   14000e47c:	movsxd ecx,DWORD PTR [rdi+0xa6fbe3d]
   14000e482:	cmc    
   14000e483:	test   al,0x32
   14000e485:	jrcxz  0x14000e451
   14000e487:	repnz pop rdi
   14000e489:	mov    dh,BYTE PTR [rdx-0x169ac004]
   14000e48f:	outs   dx,BYTE PTR ds:[rsi]
   14000e490:	fcomi  st,st(1)
   14000e492:	sti    
   14000e493:	xlat   BYTE PTR ds:[rbx]
   14000e494:	pushf  
   14000e495:	repnz imul esi,DWORD PTR [rsi+0x4fcd650b],0x18dc627f
   14000e4a0:	repz fld QWORD PTR [rdx]
   14000e4a3:	push   rdi
   14000e4a4:	mov    edx,DWORD PTR [rcx+0x595ac6d5]
   14000e4aa:	mov    ebp,0xcb606c66
   14000e4af:	mov    ecx,0xb82ec61b
   14000e4b4:	jo     0x14000e48b
   14000e4b6:	xchg   edx,eax
   14000e4b7:	sub    al,0x33
   14000e4b9:	data16 fimul WORD PTR [rbx+rbx*1-0x56f5ac2d]
   14000e4c1:	jl     0x14000e4fb
   14000e4c3:	sub    DWORD PTR [rcx-0x56d81d1c],eax
   14000e4c9:	sub    eax,DWORD PTR [rcx]
   14000e4cb:	lea    ecx,[rdi-0x2c]
   14000e4ce:	cmp    eax,0x214caa9e
   14000e4d3:	pop    rdx
   14000e4d4:	cld    
   14000e4d5:	in     al,0x75
   14000e4d7:	push   rsp
   14000e4d8:	mov    ebx,DWORD PTR [rdi]
   14000e4da:	push   rcx
   14000e4db:	cmp    edx,ebp
   14000e4dd:	sub    al,BYTE PTR cs:[rbx]
   14000e4e0:	or     eax,0x12a8b3f
   14000e4e5:	clc    
   14000e4e6:	(bad)  
   14000e4e7:	xlat   BYTE PTR ds:[rbx]
   14000e4e8:	pop    rsp
   14000e4e9:	sbb    al,0x14
   14000e4eb:	pop    rdx
   14000e4ec:	rex.X jmp 0x1161b8f2e
   14000e4f2:	push   rbp
   14000e4f3:	sub    eax,0x17c4a515
   14000e4f8:	adc    BYTE PTR ds:[rsi+0x1a6d8d1d],bl
   14000e4ff:	mov    dh,BYTE PTR [rdi+0x2e]
   14000e502:	cld    
   14000e503:	sub    eax,0xf6177bc0
   14000e508:	ja     0x14000e548
   14000e50a:	rex.WR
   14000e50b:	fs jae 0x14000e4ac
   14000e50e:	mov    ebp,0xc3bbdef7
   14000e513:	sbb    eax,0xaeb939d9
   14000e518:	jge    0x14000e50e
   14000e51a:	(bad)  
   14000e51b:	ds jae 0x14000e503
   14000e51e:	xchg   edi,edi
   14000e520:	adc    al,0xd5
   14000e522:	ss (bad) 
   14000e524:	repz (bad) 
   14000e526:	(bad)  
   14000e527:	jp     0x14000e519
   14000e529:	(bad)  
   14000e52a:	cdq    
   14000e52b:	jmp    0x1bb98fb92
   14000e530:	mov    dh,0xd5
   14000e532:	jg     0x14000e5a9
   14000e534:	jns    0x14000e587
   14000e536:	sub    al,BYTE PTR [rax+0x76ddef75]
   14000e53c:	cmp    dh,al
   14000e53e:	movabs eax,ds:0xcfcbd6fd5f99ab46
   14000e547:	imul   ecx,DWORD PTR [rsi],0x66
   14000e54a:	mov    ecx,0x8f626937
   14000e54f:	push   rsp
   14000e550:	rex.RB (bad) 
   14000e552:	mov    ecx,0xf53f81e9
   14000e557:	repnz cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e559:	movabs ds:0xb425fe6351f3509e,al
   14000e562:	hlt    
   14000e563:	pop    rdx
   14000e564:	test   BYTE PTR [rbp-0x32c9de1a],dl
   14000e56a:	cld    
   14000e56b:	or     eax,0xc03bdacb
   14000e570:	pop    rsp
   14000e571:	adc    al,0xdf
   14000e573:	cmc    
   14000e574:	rex.R loopne 0x14000e5c6
   14000e577:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000e578:	mov    ebp,0xa3ce5169
   14000e57d:	(bad)  
   14000e57e:	rex.WR ja 0x14000e5ba
   14000e581:	adc    ecx,eax
   14000e583:	mov    esi,0xa3ebf83a
   14000e588:	mov    edx,0xa0bf8e53
   14000e58d:	rex.RXB add BYTE PTR [r10],r15b
   14000e590:	test   al,0x4a
   14000e592:	loopne 0x14000e5be
   14000e594:	mov    bh,0x3f
   14000e596:	rex.WRX jmp 0x17791cc09
   14000e59c:	lock lea esi,[rcx]
   14000e59f:	(bad)  
   14000e5a0:	mov    dh,0xf9
   14000e5a2:	jbe    0x14000e59a
   14000e5a4:	setge  BYTE PTR [rbx]
   14000e5a7:	(bad)  
   14000e5a8:	ja     0x14000e5de
   14000e5aa:	fwait
   14000e5ab:	mov    BYTE PTR [rip+0xfffffffffe7d71cb],cl        # 0x13e7e577c
   14000e5b1:	mov    eax,DWORD PTR [rdi]
   14000e5b3:	jbe    0x14000e632
   14000e5b5:	cmc    
   14000e5b6:	sahf   
   14000e5b7:	(bad)  
   14000e5b8:	(bad)  
   14000e5b9:	(bad)  
   14000e5ba:	cmp    al,0x70
   14000e5bc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e5bd:	add    ebp,DWORD PTR [rdx-0x75384432]
   14000e5c3:	outs   dx,BYTE PTR ds:[rsi]
   14000e5c4:	jno    0x14000e609
   14000e5c6:	push   rcx
   14000e5c7:	xchg   esp,eax
   14000e5c8:	jg     0x14000e587
   14000e5ca:	jrcxz  0x14000e5c3
   14000e5cc:	scas   eax,DWORD PTR es:[rdi]
   14000e5cd:	jns    0x14000e5ad
   14000e5cf:	(bad)  
   14000e5d0:	mov    bh,0x5b
   14000e5d2:	sub    BYTE PTR [rbx-0x21],ch
   14000e5d5:	cmc    
   14000e5d6:	mov    DWORD PTR [rbx+0x4],ecx
   14000e5d9:	stc    
   14000e5da:	jno    0x14000e5e8
   14000e5dc:	(bad)  
   14000e5dd:	pop    rcx
   14000e5de:	imul   esp,DWORD PTR [rcx+rbp*8-0xe],0xffffff91
   14000e5e3:	(bad)  
   14000e5e4:	in     eax,0xaf
   14000e5e6:	fdiv   QWORD PTR [rdx+0x5673bcec]
   14000e5ec:	cs pop rbp
   14000e5ee:	push   0x41bd53dd
   14000e5f3:	in     eax,0xc2
   14000e5f5:	add    ecx,DWORD PTR [rsi-0x3e]
   14000e5f8:	push   0xffffffff95b6fa91
   14000e5fd:	(bad)  
   14000e5fe:	(bad)  
   14000e5ff:	fisub  DWORD PTR [rax-0x5eabb2ea]
   14000e605:	rex.X push rdx
   14000e607:	adc    BYTE PTR [rcx+0x546bd8fc],ch
   14000e60d:	(bad)  
   14000e60e:	leave  
   14000e60f:	and    ecx,DWORD PTR [rax+0x508d220a]
   14000e615:	jo     0x14000e61b
   14000e617:	gs loope 0x14000e5d7
   14000e61a:	xchg   BYTE PTR [rbx],bl
   14000e61c:	(bad)  
   14000e61d:	out    dx,eax
   14000e61e:	push   0x54
   14000e620:	adc    BYTE PTR [rsi+0x4931f0b2],bl
   14000e626:	movabs ds:0xaf00bc9f142853c1,eax
   14000e62f:	test   al,0x17
   14000e631:	retf   0xc78e
   14000e634:	cmp    ecx,DWORD PTR [rdi]
   14000e636:	ror    DWORD PTR [rbx],1
   14000e638:	push   rax
   14000e639:	push   rbp
   14000e63a:	mov    esp,0x78f7a8f3
   14000e63f:	(bad)  
   14000e640:	mov    esp,0x5b373f00
   14000e645:	outs   dx,BYTE PTR ds:[rsi]
   14000e646:	mov    edi,0x5a878ef3
   14000e64b:	cmp    ah,BYTE PTR [rbp-0x41054421]
   14000e651:	pop    rdi
   14000e652:	sti    
   14000e653:	cmc    
   14000e654:	xor    edi,esi
   14000e656:	loope  0x14000e629
   14000e658:	(bad)  
   14000e659:	(bad)  
   14000e65a:	xchg   ebx,eax
   14000e65b:	movabs ds:0x40c308fb3dd779ef,eax
   14000e664:	rex.WRX
   14000e665:	rex.WB cli 
   14000e667:	(bad)  
   14000e668:	leave  
   14000e669:	mov    edx,DWORD PTR [rbp+0x1]
   14000e66c:	cld    
   14000e66d:	xor    DWORD PTR [rdx-0x32],esp
   14000e670:	(bad)  
   14000e671:	jmp    0x14000e605
   14000e673:	int    0x6b
   14000e675:	(bad)  
   14000e676:	mov    eax,0x99757c74
   14000e67b:	rex.WB in al,dx
   14000e67d:	stc    
   14000e67e:	xchg   esi,eax
   14000e67f:	fmul   st,st(6)
   14000e681:	sbb    ebx,esp
   14000e683:	stc    
   14000e684:	adc    al,0x6
   14000e686:	cwde   
   14000e687:	xor    al,0xcc
   14000e689:	rex.XB stos BYTE PTR es:[rdi],al
   14000e68b:	cmp    DWORD PTR [rsi+rsi*4+0x66],esi
   14000e68f:	std    
   14000e690:	push   rbx
   14000e691:	mov    esi,0xcb56033f
   14000e696:	add    ecx,DWORD PTR [rsp+rcx*8-0x3]
   14000e69a:	adc    ebp,DWORD PTR [rbx]
   14000e69c:	repnz (bad) 
   14000e69e:	and    DWORD PTR [rdi+0x7a3d9e94],edi
   14000e6a4:	sub    dh,al
   14000e6a6:	xlat   BYTE PTR ds:[rbx]
   14000e6a7:	fdiv   st(6),st
   14000e6a9:	(bad)  
   14000e6aa:	pop    rsp
   14000e6ab:	mov    al,0xfc
   14000e6ad:	scas   al,BYTE PTR es:[rdi]
   14000e6ae:	cmp    BYTE PTR [rcx],al
   14000e6b0:	clc    
   14000e6b1:	movsxd eax,DWORD PTR [rcx-0x407e5071]
   14000e6b7:	sub    dh,al
   14000e6b9:	push   rcx
   14000e6ba:	out    0xd7,al
   14000e6bc:	mov    edi,0x527955c6
   14000e6c1:	or     DWORD PTR [rdi-0x5d],0xf256cb81
   14000e6c8:	jmp    0x1b264864e
   14000e6cd:	(bad)  
   14000e6ce:	ins    DWORD PTR es:[rdi],dx
   14000e6cf:	scas   eax,DWORD PTR es:[rdi]
   14000e6d0:	mov    eax,0xf9dcb327
   14000e6d5:	loopne 0x14000e688
   14000e6d7:	add    esi,DWORD PTR [rdi-0x21]
   14000e6da:	(bad)  
   14000e6db:	clc    
   14000e6dc:	and    DWORD PTR [rdi],0x19fefb6
   14000e6e2:	push   rbp
   14000e6e3:	out    0xfc,eax
   14000e6e5:	sbb    eax,0xa1fba2dd
   14000e6ea:	(bad)  
   14000e6eb:	push   rbx
   14000e6ed:	sbb    ebp,DWORD PTR [rdi+0x7f]
   14000e6f0:	(bad)  
   14000e6f1:	jg     0x14000e68c
   14000e6f3:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e6f4:	xchg   esi,eax
   14000e6f5:	xor    eax,0xb3f1fd3f
   14000e6fa:	rex.R in al,0xc7
   14000e6fd:	add    eax,0xaccd8d79
   14000e702:	pushf  
   14000e703:	mov    ecx,0xe5f0dd65
   14000e708:	scas   eax,DWORD PTR es:[rdi]
   14000e709:	cmp    DWORD PTR [rbx-0x3b],esp
   14000e70c:	clc    
   14000e70d:	repnz rol ecx,0x85
   14000e711:	push   rdi
   14000e712:	jnp    0x14000e736
   14000e714:	add    DWORD PTR [rbx],edx
   14000e716:	push   rbp
   14000e717:	lock xchg esp,eax
   14000e719:	rex.WX movabs al,ds:0x500bdd664dd405e6
   14000e723:	jp     0x14000e713
   14000e725:	jle    0x14000e6d4
   14000e727:	movsxd edi,DWORD PTR [rcx+0x50a409e7]
   14000e72d:	and    BYTE PTR [rbp+0x63],al
   14000e730:	(bad)  
   14000e731:	mov    esp,0x1c08f06a
   14000e736:	cmp    BYTE PTR [rdi],dl
   14000e738:	(bad)  
   14000e739:	adc    DWORD PTR [rbp+0x4f],edx
   14000e73c:	(bad)  [rbp+0x7682805e]
   14000e742:	adc    eax,0x7bad17
   14000e747:	mov    ecx,0x7d18a5c6
   14000e74c:	or     al,0x13
   14000e74e:	cmp    al,0x65
   14000e750:	or     edx,ebp
   14000e752:	sbb    eax,0x47c47bce
   14000e757:	rex.RB push r9
   14000e759:	jp     0x14000e6e9
   14000e75b:	out    dx,al
   14000e75c:	fdiv   QWORD PTR [rcx-0x8]
   14000e75f:	shl    BYTE PTR [rbx-0x25a112f1],0x98
   14000e766:	fdivrp st(3),st
   14000e768:	cdq    
   14000e769:	sub    edi,DWORD PTR [rdi]
   14000e76b:	repnz fdivp st(7),st
   14000e76e:	cmc    
   14000e76f:	mov    ebx,0xfb713f8f
   14000e774:	(bad)  
   14000e775:	test   ch,0x1
   14000e778:	popf   
   14000e779:	fwait
   14000e77a:	rex.WRX (bad) 
   14000e77c:	cld    
   14000e77d:	comiss xmm0,DWORD PTR [rdx+0x5]
   14000e781:	mov    al,0xee
   14000e783:	mov    ebp,0xc220dedb
   14000e788:	scas   eax,DWORD PTR es:[rdi]
   14000e789:	mov    WORD PTR [rbp+0x6ff43258],gs
   14000e78f:	mov    esi,0xcb73dcff
   14000e794:	int3   
   14000e795:	rex.X add al,0xb3
   14000e798:	xor    DWORD PTR [rcx+0x11],ecx
   14000e79b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e79c:	cs mov esi,0x113a1e30
   14000e7a2:	jl     0x14000e7fa
   14000e7a4:	(bad)  
   14000e7a5:	(bad)  
   14000e7a6:	pop    rdi
   14000e7a7:	and    al,0x0
   14000e7a9:	sbb    ecx,DWORD PTR [rcx+0x19]
   14000e7ac:	nop
   14000e7ad:	sar    BYTE PTR [rdi+0x1f],0x6b
   14000e7b1:	mov    ebp,DWORD PTR [rdi]
   14000e7b3:	xor    BYTE PTR [rsi+0x42f607dd],bl
   14000e7b9:	out    0x97,al
   14000e7bb:	mul    DWORD PTR [rsi]
   14000e7bd:	lock rex.RXB add eax,0x7f0f62e0
   14000e7c4:	push   0xffffffffffffffea
   14000e7c6:	jmp    0xde809f0f
   14000e7cb:	in     eax,0x77
   14000e7cd:	(bad)  
   14000e7ce:	(bad)  
   14000e7cf:	jg     0x14000e78e
   14000e7d1:	rol    bh,0xd7
   14000e7d4:	ror    BYTE PTR [rdi+0x16],0x4b
   14000e7d8:	fsub   QWORD PTR [rdx+0x21376fe5]
   14000e7de:	imul   edx,DWORD PTR [rax+0x36],0xffffffd6
   14000e7e2:	lock push rdi
   14000e7e4:	in     eax,dx
   14000e7e5:	lahf   
   14000e7e6:	movsxd esi,DWORD PTR [rsi+0x60]
   14000e7e9:	gs push 0x39366de1
   14000e7ef:	fdivr  st(1),st
   14000e7f1:	mov    bl,0x7f
   14000e7f3:	neg    DWORD PTR [rcx+0x703c7787]
   14000e7f9:	fisttp WORD PTR [rsi-0x10c75f9d]
   14000e7ff:	out    dx,eax
   14000e800:	out    dx,eax
   14000e801:	jbe    0x14000e7be
   14000e803:	jg     0x14000e7f5
   14000e805:	clc    
   14000e806:	jg     0x14000e886
   14000e808:	jrcxz  0x14000e861
   14000e80a:	sahf   
   14000e80b:	call   FWORD PTR [rdi-0x1b]
   14000e80e:	jmp    0x13aa082de
   14000e813:	clc    
   14000e814:	and    r14b,r10b
   14000e817:	dec    DWORD PTR [rdx+0x668d8d91]
   14000e81d:	outs   dx,BYTE PTR ds:[rsi]
   14000e81e:	scas   eax,DWORD PTR es:[rdi]
   14000e81f:	jl     0x14000e806
   14000e821:	cmp    ebx,ecx
   14000e823:	scas   eax,DWORD PTR es:[rdi]
   14000e824:	jl     0x14000e7fb
   14000e826:	xchg   BYTE PTR [rbp-0x1a9b0338],dl
   14000e82c:	cmp    al,0x40
   14000e82e:	add    edi,esi
   14000e830:	fwait
   14000e831:	js     0x14000e835
   14000e833:	or     esi,DWORD PTR [rbx-0x5d908afa]
   14000e839:	cmp    cl,ch
   14000e83b:	int3   
   14000e83c:	push   rdi
   14000e83d:	add    ch,cl
   14000e83f:	(bad)  
   14000e840:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e841:	push   rbp
   14000e842:	ror    BYTE PTR [rbx],cl
   14000e844:	xchg   edx,eax
   14000e845:	(bad)  
   14000e846:	mov    al,0xd8
   14000e849:	rex.W jo 0x14000e831
   14000e84c:	push   rbp
   14000e84d:	push   rcx
   14000e84e:	out    dx,eax
   14000e84f:	sub    DWORD PTR [rax+rbx*2+0x6a],ebx
   14000e853:	int3   
   14000e854:	imul   esi,esp,0x494aba02
   14000e85a:	test   al,0xe5
   14000e85c:	lock (bad) 
   14000e85e:	add    esi,DWORD PTR [rdi+0x30]
   14000e861:	out    0x71,eax
   14000e863:	push   rcx
   14000e864:	mov    bl,0x94
   14000e866:	rcl    DWORD PTR [rbx+0x50],1
   14000e869:	jne    0x14000e7fc
   14000e86b:	pop    rbx
   14000e86c:	or     BYTE PTR [rdx+0x46],bl
   14000e86f:	mov    ebp,0x5fabfbb2
   14000e874:	jge    0x14000e852
   14000e876:	sbb    eax,0xe67533dd
   14000e87b:	loopne 0x14000e7fe
   14000e87d:	pminub mm3,mm7
   14000e880:	cld    
   14000e881:	(bad)  
   14000e882:	(bad)  
   14000e883:	(bad)  
   14000e884:	loope  0x14000e873
   14000e886:	rex.WRXB test rax,0xffffffffdf5e87f5
   14000e88c:	(bad)  
   14000e88d:	mov    eax,DWORD PTR [rdx-0x2a]
   14000e890:	mov    ebp,0xfc0e5b77
   14000e895:	(bad)  
   14000e896:	(bad)  
   14000e897:	xchg   BYTE PTR [rdi],ch
   14000e899:	js     0x14000e860
   14000e89b:	cdq    
   14000e89c:	sbb    eax,DWORD PTR [rdi+0x6adbb497]
   14000e8a2:	jp     0x14000e8a7
   14000e8a4:	(bad)  
   14000e8a5:	(bad)
   14000e8a8:	(bad)  
   14000e8a9:	pushf  
   14000e8aa:	shl    dl,1
   14000e8ac:	imul   esp,DWORD PTR [rbx-0x37],0x13fb8a6f
   14000e8b3:	clc    
   14000e8b4:	or     eax,0x9a5e90d0
   14000e8b9:	(bad)  
   14000e8ba:	adc    ebx,DWORD PTR [rax+0x23]
   14000e8bd:	div    DWORD PTR [rcx+0x71917dc6]
   14000e8c3:	mov    esi,0x1117e48a
   14000e8c8:	push   rsp
   14000e8c9:	(bad)  
   14000e8ca:	mov    DWORD PTR [rdi+rdi*4],ebp
   14000e8cd:	xchg   edx,esi
   14000e8cf:	jo     0x14000e869
   14000e8d1:	(bad)  
   14000e8d2:	pop    rbx
   14000e8d3:	pop    rcx
   14000e8d4:	(bad)  
   14000e8d5:	jmp    0x1b4f8c62a
   14000e8da:	rcr    DWORD PTR [rdi+0x235a7e2c],0xdb
   14000e8e1:	(bad)  
   14000e8e2:	cli    
   14000e8e3:	sbb    ecx,DWORD PTR fs:[rcx-0x41]
   14000e8e7:	lods   al,BYTE PTR ds:[rsi]
   14000e8e8:	xor    DWORD PTR [rsi],0x6ebeccc3
   14000e8ee:	jrcxz  0x14000e964
   14000e8f0:	outs   dx,BYTE PTR ds:[rsi]
   14000e8f1:	sbb    bl,dl
   14000e8f3:	rex.WX
   14000e8f4:	addr32 (bad) 
   14000e8f6:	sbb    DWORD PTR [rcx-0x45],ebx
   14000e8f9:	lea    ebp,[rcx+0x36]
   14000e8fc:	stc    
   14000e8fd:	out    0x3b,eax
   14000e8ff:	(bad)  
   14000e900:	in     al,dx
   14000e901:	inc    ah
   14000e903:	or     eax,0xc0f47a5f
   14000e908:	mov    esi,0x7eaa73a3
   14000e90d:	outs   dx,DWORD PTR ds:[rsi]
   14000e90e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e90f:	(bad)  
   14000e911:	lods   eax,DWORD PTR ds:[rsi]
   14000e912:	rex.RXB jle 0x14000e908
   14000e915:	mov    ebx,0x17e8e77f
   14000e91a:	outs   dx,BYTE PTR ds:[rsi]
   14000e91b:	fdiv   st,st(3)
   14000e91d:	(bad)  
   14000e91e:	cld    
   14000e91f:	xor    bh,cl
   14000e921:	rex mov ds,edi
   14000e924:	jle    0x14000e909
   14000e926:	sahf   
   14000e927:	loope  0x14000e8f4
   14000e929:	scas   al,BYTE PTR es:[rdi]
   14000e92a:	mov    ebp,0x5da75549
   14000e92f:	jmp    0x131e36703
   14000e934:	mov    ebp,0xa6fbfddd
   14000e939:	addr32 (bad) 
   14000e93b:	(bad)  
   14000e93c:	sbb    ebp,DWORD PTR cs:[rbp+rsi*1+0x6a]
   14000e941:	cmc    
   14000e942:	retf   0x14f1
   14000e945:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000e946:	int3   
   14000e947:	(bad)  
   14000e948:	rex.WRXB cmp rax,0xffffffff9544f4f4
   14000e94e:	push   rcx
   14000e94f:	lods   al,BYTE PTR ds:[rsi]
   14000e950:	ins    DWORD PTR es:[rdi],dx
   14000e951:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e952:	cmc    
   14000e953:	sub    eax,0x318dfaa4
   14000e958:	jle    0x14000e95a
   14000e95a:	add    BYTE PTR [rax],ah
   14000e95c:	add    BYTE PTR [rcx+0x44],cl
   14000e95f:	push   r12
   14000e961:	mov    dh,0x5d
   14000e963:	lea    edx,[rsp+rdx*4-0x6]
   14000e967:	popf   
   14000e968:	enter  0x6001,0x42
   14000e96c:	xchg   al,al
   14000e96e:	xlat   BYTE PTR ds:[rbx]
   14000e96f:	test   BYTE PTR [rcx],0xb
   14000e972:	adc    eax,0x4cc4c4a
   14000e977:	rex.XB movabs ds:0x1af6e261a5689351,al
   14000e981:	cmp    cl,BYTE PTR [rdx]
   14000e983:	xor    eax,0xb085156a
   14000e988:	mov    WORD PTR [rcx],ds
   14000e98a:	(bad)  
   14000e98b:	(bad)  
   14000e98c:	mov    cl,BYTE PTR [rcx-0x37]
   14000e98f:	push   rbp
   14000e990:	push   rbp
   14000e991:	ins    BYTE PTR es:[rdi],dx
   14000e992:	(bad)  
   14000e993:	int3   
   14000e994:	(bad)  
   14000e995:	out    dx,al
   14000e996:	fistp  QWORD PTR [rdi+0x6c]
   14000e999:	test   esp,0xcb63a6d0
   14000e99f:	(bad)  
   14000e9a0:	jge    0x14000ea1e
   14000e9a2:	fld    DWORD PTR [rbx-0x49]
   14000e9a5:	popf   
   14000e9a6:	rcr    al,cl
   14000e9a8:	(bad)  
   14000e9a9:	leave  
   14000e9aa:	mov    ecx,DWORD PTR [rdx+0x1]
   14000e9ad:	mov    WORD PTR [rcx+rdi*8-0x7d],ds
   14000e9b1:	(bad)  
   14000e9b2:	and    al,0x22
   14000e9b4:	scas   eax,DWORD PTR es:[rdi]
   14000e9b5:	pop    rbx
   14000e9b6:	mov    ebp,0x79d8e561
   14000e9bb:	xchg   edi,eax
   14000e9bc:	lods   eax,DWORD PTR ds:[rsi]
   14000e9bd:	pop    rcx
   14000e9be:	jrcxz  0x14000ea2d
   14000e9c0:	sbb    al,0xd8
   14000e9c2:	add    BYTE PTR [rax-0x5b005ad4],bl
   14000e9c8:	xchg   edi,eax
   14000e9c9:	add    eax,0x313fc548
   14000e9ce:	adc    edx,eax
   14000e9d0:	retf   
   14000e9d1:	cmc    
   14000e9d2:	rex.WXB iretq 
   14000e9d4:	in     eax,dx
   14000e9d5:	(bad)  
   14000e9d6:	loopne 0x14000e9f7
   14000e9d8:	div    DWORD PTR [rdi-0x50]
   14000e9db:	(bad)  
   14000e9dc:	fisttp QWORD PTR [rbp-0x285fd0cc]
   14000e9e2:	(bad)  
   14000e9e3:	xchg   edi,eax
   14000e9e4:	mov    bh,BYTE PTR [rdx+rdx*8-0x11]
   14000e9e8:	push   rdx
   14000e9e9:	(bad)  
   14000e9ea:	rcr    BYTE PTR [rdi-0x7f31897a],0x9b
   14000e9f1:	cmp    ecx,DWORD PTR [rcx]
   14000e9f3:	lock rol DWORD PTR [rbx],cl
   14000e9f6:	mov    edi,0x3546b1b1
   14000e9fb:	or     al,0xef
   14000e9fd:	rcl    BYTE PTR [rsi+0x3],1
   14000ea00:	imul   esi,DWORD PTR [rcx+rbx*4],0xcdc65fcd
   14000ea07:	sub    edi,0xffffffc6
   14000ea0a:	or     eax,0x7b5928c
   14000ea0f:	cmp    BYTE PTR [rsi+0x6da9f3a6],ch
   14000ea15:	(bad)  
   14000ea17:	cli    
   14000ea18:	in     eax,0x2f
   14000ea1a:	ds je  0x14000ea5d
   14000ea1d:	mov    ebp,0x5fe59452
   14000ea22:	jne    0x14000e9de
   14000ea24:	popf   
   14000ea25:	imul   DWORD PTR [rdi+rdi*8-0x63]
   14000ea29:	out    dx,eax
   14000ea2a:	mov    ebx,0x39f805ff
   14000ea2f:	rex.WRX pop rdx
   14000ea31:	mov    ds,edi
   14000ea33:	jle    0x14000e9d8
   14000ea35:	(bad)  
   14000ea36:	mov    edi,0x867bc6fd
   14000ea3b:	(bad)  
   14000ea3c:	mov    ebx,0xd7bc1fe6
   14000ea41:	nop    DWORD PTR [rsi+rsi*4]
   14000ea46:	call   0x13dbbe9f6
   14000ea4b:	enter  0x75ca,0xcb
   14000ea4f:	(bad)  
   14000ea50:	(bad)  
   14000ea51:	(bad)  
   14000ea52:	mov    dh,0x9b
   14000ea54:	rex push rbp
   14000ea56:	out    0x5f,eax
   14000ea58:	cmc    
   14000ea59:	add    esp,edx
   14000ea5b:	(bad)  
   14000ea5c:	(bad)  
   14000ea5d:	jl     0x14000eaac
   14000ea5f:	or     DWORD PTR [rax+rax*4-0x52],edx
   14000ea63:	mov    ah,0x41
   14000ea65:	rex.WRXB stos BYTE PTR es:[rdi],al
   14000ea67:	out    0xd3,eax
   14000ea69:	mov    dh,0xd2
   14000ea6b:	push   rbx
   14000ea6c:	(bad)  
   14000ea6d:	imul   esi,ebx,0x97bc6538
   14000ea73:	pop    rcx
   14000ea74:	rex.W movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000ea76:	and    DWORD PTR [rcx+0x3a8a8833],ecx
   14000ea7c:	push   0xffffffffffffff8d
   14000ea7e:	push   rsp
   14000ea7f:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000ea80:	pop    rsp
   14000ea81:	ins    DWORD PTR es:[rdi],dx
   14000ea82:	out    dx,al
   14000ea83:	imul   esi,DWORD PTR [rbx+0x11],0x34
   14000ea87:	jo     0x14000ea8a
   14000ea89:	jmp    0x17c6179d3
   14000ea8e:	js     0x14000ea44
   14000ea90:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000ea91:	or     al,0xc2
   14000ea93:	mov    ebx,DWORD PTR [rcx-0x4d]
   14000ea96:	shr    DWORD PTR [rax],1
   14000ea98:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000ea99:	addr32 cmp edx,ebx
   14000ea9c:	xor    esi,DWORD PTR [rbx-0x26]
   14000ea9f:	pop    rcx
   14000eaa0:	mov    ah,0x8c
   14000eaa2:	mov    ch,0x77
   14000eaa4:	jle    0x14000ea90
   14000eaa6:	mov    esi,edi
   14000eaa8:	cmp    eax,0x54fa738b
   14000eaad:	repnz movabs ds:0xf0196dbbdeeb0051,al
   14000eab7:	jmp    0x14000eae3
   14000eab9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000eaba:	jns    0x14000ea85
   14000eabc:	sbb    esi,DWORD PTR [rsi-0x33e3e594]
   14000eac2:	sbb    ebx,esi
   14000eac4:	(bad)  
   14000eac5:	push   0xffffffffffffffb8
   14000eac7:	rex.XB sbb r10b,bpl
   14000eaca:	sbb    BYTE PTR [rax+rax*1],dl
   14000eacd:	sub    DWORD PTR [rax+rcx*4],ecx
   14000ead0:	popf   
   14000ead1:	jle    0x14000eb28
   14000ead3:	jno    0x14000eb24
   14000ead5:	sub    eax,0xbfc0982d
   14000eada:	push   rsi
   14000eadb:	mov    esi,0x93bd2ace
   14000eae0:	mov    ch,0xc5
   14000eae2:	push   rdi
   14000eae3:	xor    ch,ch
   14000eae5:	mov    bl,0x9
   14000eae7:	sub    esi,ebx
   14000eae9:	(bad)  
   14000eaea:	rcr    DWORD PTR [rdi-0x7fec39e4],0xbf
   14000eaf1:	js     0x14000eb0d
   14000eaf3:	loopne 0x14000eb44
   14000eaf5:	not    DWORD PTR [rbx]
   14000eaf7:	clc    
   14000eaf8:	adc    ebx,ecx
   14000eafa:	push   rdi
   14000eafb:	(bad)  
   14000eafc:	jg     0x14000ea88
   14000eafe:	imul   DWORD PTR [rbp+0x68]
   14000eb01:	out    0x95,eax
   14000eb03:	mov    esp,0xafcc1c9
   14000eb08:	ds mov ebp,0x7b681de8
   14000eb0e:	adc    DWORD PTR [rsi+0x23f6c03d],esi
   14000eb14:	out    dx,al
   14000eb15:	clc    
   14000eb16:	(bad)  
   14000eb17:	jmp    rdx
   14000eb19:	mov    es,WORD PTR [rdi+0x3838ed77]
   14000eb1f:	jrcxz  0x14000eaf6
   14000eb21:	out    dx,eax
   14000eb22:	out    dx,al
   14000eb23:	je     0x14000eb60
   14000eb25:	pop    rbx
   14000eb26:	(bad)  
   14000eb27:	sti    
   14000eb28:	in     eax,dx
   14000eb29:	out    dx,eax
   14000eb2a:	stc    
   14000eb2b:	(bad)  
   14000eb2c:	mov    cl,0xdb
   14000eb2e:	ds (bad) 
   14000eb30:	pushf  
   14000eb31:	mov    bl,0xfa
   14000eb33:	iret   
   14000eb34:	xchg   ebp,eax
   14000eb35:	sbb    al,0xbf
   14000eb37:	std    
   14000eb38:	(bad)  
   14000eb39:	movsxd ecx,DWORD PTR [rbx-0x2c0944d2]
   14000eb3f:	stos   BYTE PTR es:[rdi],al
   14000eb40:	or     al,0x96
   14000eb42:	test   DWORD PTR [rbx],edi
   14000eb44:	out    0x81,eax
   14000eb46:	scas   eax,DWORD PTR es:[rdi]
   14000eb47:	out    dx,eax
   14000eb48:	cmp    al,0x96
   14000eb4a:	(bad)  
   14000eb4b:	(bad)  
   14000eb4c:	fs int 0x9a
   14000eb4f:	xchg   ecx,eax
   14000eb50:	rex.B cwde 
   14000eb52:	pop    rdi
   14000eb53:	stc    
   14000eb54:	(bad)  
   14000eb55:	sub    al,0xbc
   14000eb57:	push   rsp
   14000eb58:	or     BYTE PTR [rsi-0x55],0xd
   14000eb5c:	sub    al,0xb4
   14000eb5e:	cli    
   14000eb5f:	or     esp,DWORD PTR [rbx-0x22]
   14000eb62:	(bad)  
   14000eb63:	movabs eax,ds:0x1e4eb6db5e40d428
   14000eb6c:	or     dl,BYTE PTR [rax+0x75]
   14000eb6f:	pop    rax
   14000eb70:	(bad)  
   14000eb71:	cld    
   14000eb72:	cmp    eax,0x786961aa
   14000eb77:	or     eax,0xeb8d1307
   14000eb7c:	adc    ebp,DWORD PTR [rdx+0x54]
   14000eb7f:	(bad)  
   14000eb80:	icebp  
   14000eb81:	sbb    eax,0x2beebe35
   14000eb86:	rex.X and bpl,BYTE PTR [rsi]
   14000eb89:	cdq    
   14000eb8a:	stos   BYTE PTR es:[rdi],al
   14000eb8b:	adc    DWORD PTR [rsp+rcx*1-0x11],0x3785fe95
   14000eb93:	(bad)  
   14000eb94:	pop    rbx
   14000eb95:	lods   eax,DWORD PTR ds:[rsi]
   14000eb96:	(bad)  
   14000eb97:	xchg   ecx,eax
   14000eb98:	mov    ebp,0x9c2a8efb
   14000eb9d:	mov    ch,0xe3
   14000eb9f:	loop   0x14000eb90
   14000eba1:	std    
   14000eba2:	(bad)  
   14000eba3:	(bad)  
   14000eba4:	sbb    eax,0x967e9a9f
   14000eba9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000ebaa:	hlt    
   14000ebab:	rex.WB
   14000ebac:	repnz movabs ds:0x228fe0fe57230051,al
   14000ebb6:	jb     0x14000eb99
   14000ebb8:	jmp    0x1b1609b24
   14000ebbd:	ficom  DWORD PTR [rsi+0x665c2b65]
   14000ebc3:	(bad)  
   14000ebc4:	test   edi,ecx
   14000ebc6:	jp     0x14000ec0c
   14000ebc8:	(bad)  
   14000ebc9:	es mov edx,0x5fb4c4fe
   14000ebcf:	cmp    eax,0x1194fc6
   14000ebd4:	rex.X jbe 0x14000ebf7
   14000ebd7:	adc    ebx,DWORD PTR [rax+0x25]
   14000ebda:	pop    rdi
   14000ebdb:	addr32 adc eax,0x73a6b377
   14000ebe1:	pcmpeqd mm4,QWORD PTR [rax+0x33]
   14000ebe5:	xor    dl,cl
   14000ebe7:	mov    ecx,eax
   14000ebe9:	out    dx,eax
   14000ebea:	sahf   
   14000ebeb:	or     al,0xfe
   14000ebed:	repnz sub eax,eax
   14000ebf0:	pop    rdi
   14000ebf1:	mov    eax,0xe74fba5a
   14000ebf6:	sbb    DWORD PTR [rdi+0x5d],0x95572f98
   14000ebfd:	and    esp,DWORD PTR [rbp+0x3b131f02]
   14000ec03:	cli    
   14000ec04:	pop    rdx
   14000ec05:	(bad)  
   14000ec06:	outs   dx,BYTE PTR ds:[rsi]
   14000ec07:	fild   QWORD PTR [rsi-0x3203aa3a]
   14000ec0d:	lock (bad) 
   14000ec0f:	(bad)  
   14000ec10:	fiadd  DWORD PTR [rbx-0x48c9129c]
   14000ec16:	fistp  QWORD PTR [rbp+0x74]
   14000ec19:	iret   
   14000ec1a:	rex.WRB jg 0x14000ec16
   14000ec1d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000ec1e:	(bad)  
   14000ec1f:	cmp    dh,BYTE PTR [rbx+0x5d]
   14000ec22:	push   rdi
   14000ec23:	cmp    dh,bh
   14000ec25:	mov    ecx,0x93f3a74e
   14000ec2a:	fstp   TBYTE PTR [rdi-0x19]
   14000ec2d:	sti    
   14000ec2e:	mov    dh,0xbf
   14000ec30:	and    BYTE PTR [rdi],bh
   14000ec32:	(bad)  
   14000ec33:	sub    DWORD PTR [rsi-0xb902437],edx
   14000ec39:	xchg   ebx,eax
   14000ec3a:	mov    bh,0xdf
   14000ec3c:	clc    
   14000ec3d:	test   DWORD PTR [rbp-0x69],eax
   14000ec40:	pop    rsi
   14000ec41:	sti    
   14000ec42:	test   BYTE PTR [rbx],ch
   14000ec44:	std    
   14000ec45:	sub    ebx,DWORD PTR [rdi-0x63008388]
   14000ec4b:	cwde   
   14000ec4c:	pop    rsp
   14000ec4d:	xlat   BYTE PTR ds:[rbx]
   14000ec4e:	rex.WRB mov WORD PTR [rip+0xffffffffa813cf41],cs        # 0xe814bb96
   14000ec55:	add    ebx,edi
   14000ec57:	cmp    al,0x85
   14000ec59:	adc    cl,BYTE PTR [rax+0x71]
   14000ec5c:	mov    dl,0xd2
   14000ec5f:	or     eax,DWORD PTR [rbx-0x7f]
   14000ec62:	push   rsp
   14000ec63:	gs cmp bh,cl
   14000ec66:	or     ecx,DWORD PTR [rax+0x2b2aa20a]
   14000ec6c:	mov    fs,esp
   14000ec6e:	movabs ds:0x3fc7be208f0769ab,eax
   14000ec77:	test   ch,al
   14000ec79:	(bad)
   14000ec7c:	push   rsi
   14000ec7d:	clc    
   14000ec7e:	fdivr  DWORD PTR [rdx-0x359a3b58]
   14000ec84:	jl     0x14000ed03
   14000ec86:	(bad)  
   14000ec88:	jl     0x14000ec6e
   14000ec8a:	jmp    0x14000ecb6
   14000ec8c:	and    BYTE PTR [rsi+0x8],bh
   14000ec8f:	xchg   ebx,eax
   14000ec90:	in     eax,0xb9
   14000ec92:	out    dx,eax
   14000ec93:	jbe    0x14000ec1f
   14000ec95:	fldcw  WORD PTR [rcx-0x159ffd17]
   14000ec9b:	mov    cs,WORD PTR [rdi-0x62]
   14000ec9e:	repnz in eax,0xc7
   14000eca1:	pop    rdi
   14000eca2:	adc    al,0xa
   14000eca4:	(bad)  
   14000eca5:	fnstsw WORD PTR [rbx-0x49]
   14000eca8:	or     eax,0x4c43ef01
   14000ecad:	repz shr bh,cl
   14000ecb0:	cmp    BYTE PTR [rbx+0x63],ch
   14000ecb3:	mov    ebx,0x4d5ae59d
   14000ecb8:	jl     0x14000ecef
   14000ecba:	mov    ebp,0xd4269ee1
   14000ecbf:	jae    0x14000ec68
   14000ecc1:	adc    bl,bh
   14000ecc3:	fdivr  st(4),st
   14000ecc5:	enter  0xd4bf,0xe5
   14000ecc9:	(bad)  [rax-0x466a802a]
   14000eccf:	(bad)  
   14000ecd0:	(bad)  
   14000ecd1:	jb     0x14000ed0a
   14000ecd3:	jrcxz  0x14000eca8
   14000ecd5:	(bad)  
   14000ecd7:	sbb    BYTE PTR [rdx+0x9],bl
   14000ecda:	sub    al,0x63
   14000ecdc:	(bad)  
   14000ecdd:	loopne 0x14000ec9e
   14000ecdf:	sbb    eax,edi
   14000ece1:	retf   
   14000ece2:	cmp    bh,al
   14000ece4:	or     edi,DWORD PTR [rdx-0x7d]
   14000ece7:	cmp    edx,DWORD PTR [rdx+0x1f83afa5]
   14000eced:	jo     0x14000ed21
   14000ecef:	(bad)  
   14000ecf0:	cld    
   14000ecf1:	rex.R stos DWORD PTR es:[rdi],eax
   14000ecf3:	outs   dx,DWORD PTR ds:[rsi]
   14000ecf4:	ins    BYTE PTR es:[rdi],dx
   14000ecf5:	(bad)  
   14000ecf6:	lock imul esi,DWORD PTR [rsi],0x79
   14000ecfa:	and    al,0xff
   14000ecfc:	(bad)  
   14000ecfd:	(bad)  
   14000ecfe:	jno    0x14000ecf8
   14000ed00:	sub    eax,0xddaf9ba1
   14000ed05:	data16 fstp TBYTE PTR [rdi]
   14000ed08:	out    dx,al
   14000ed09:	jp     0x14000ed07
   14000ed0b:	repz lahf 
   14000ed0d:	mov    ebx,0x74a0af77
   14000ed12:	mov    esp,edx
   14000ed14:	or     DWORD PTR [rdi-0x881904],0xffffffe6
   14000ed1b:	mov    bh,0xb3
   14000ed1d:	(bad)  
   14000ed1e:	jg     0x14000ed4a
   14000ed20:	cdq    
   14000ed21:	cld    
   14000ed22:	ror    BYTE PTR [rbp-0xb45d0f1],cl
   14000ed28:	fisubr DWORD PTR [rdi-0x4ca11888]
   14000ed2e:	xrelease mov DWORD PTR [rbx],eax
   14000ed31:	gs jmp 0x12362ac6a
   14000ed37:	fsub   DWORD PTR [rdx+0x2527e014]
   14000ed3d:	nop
   14000ed3e:	rex imul ecx,DWORD PTR [rax],0x77
   14000ed42:	sahf   
   14000ed43:	adc    al,0xdb
   14000ed45:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000ed46:	(bad)  
   14000ed47:	xor    eax,0xe48038a9
   14000ed4c:	(bad)  
   14000ed4d:	retf   
   14000ed4e:	cld    
   14000ed4f:	xlat   BYTE PTR ds:[rbx]
   14000ed50:	loop   0x14000ecf3
   14000ed52:	add    dl,al
   14000ed54:	(bad)  
   14000ed55:	jg     0x14000ed4d
   14000ed57:	fidivr WORD PTR [rbx]
   14000ed59:	int3   
   14000ed5a:	mov    dl,0xab
   14000ed5c:	mov    edx,0x7dadfc17
   14000ed61:	(bad)  
   14000ed62:	mov    ecx,0x750762a1
   14000ed67:	ja     0x14000edde
   14000ed69:	nop
   14000ed6a:	pop    rdx
   14000ed6b:	pop    rcx
   14000ed6c:	rex.X adc al,BYTE PTR [rdx+0x8]
   14000ed70:	add    al,0x22
   14000ed72:	or     DWORD PTR [rax+0x26031e11],esi
   14000ed78:	sbb    BYTE PTR [rax-0x239fc7f3],dh
   14000ed7e:	(bad)  
   14000ed7f:	adc    esp,edi
   14000ed81:	fldcw  WORD PTR [rdi+0x3c]
   14000ed84:	(bad)  
   14000ed85:	xor    ebp,edi
   14000ed87:	or     eax,0xe7e7de6f
   14000ed8c:	jns    0x14000ed6d
   14000ed8e:	cmp    al,0x1b
   14000ed90:	jrcxz  0x14000ed92
   14000ed92:	cmp    cl,cl
   14000ed94:	and    DWORD PTR [rbx+rdx*1+0x6c],0x3cc87a0d
   14000ed9c:	xor    BYTE PTR [rax+0x8],bh
   14000ed9f:	sbb    DWORD PTR es:[rsp+rbp*1+0x28121092],eax
   14000eda7:	mov    ch,0xd4
   14000eda9:	push   rdx
   14000edaa:	ja     0x14000ed57
   14000edac:	movsxd esi,DWORD PTR [rbp+0x57]
   14000edaf:	mov    eax,0xd7bd9ef7
   14000edb4:	cld    
   14000edb5:	mov    cl,0xd6
   14000edb7:	fisub  DWORD PTR [rdi-0x61]
   14000edba:	push   rbx
   14000edbb:	mov    bh,0xaa
   14000edbd:	stos   DWORD PTR es:[rdi],eax
   14000edbe:	xchg   ebx,eax
   14000edbf:	(bad)  
   14000edc0:	sub    eax,0xfaafead5
   14000edc5:	ficom  WORD PTR [rbx-0x50842231]
   14000edcb:	pushf  
   14000edcc:	push   rax
   14000edcd:	adc    DWORD PTR [rip+0xffffffffa598833b],eax        # 0xe599710e
   14000edd3:	and    DWORD PTR [rdx+0x40],ebp
   14000edd6:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000edd7:	cs xchg esi,eax
   14000edd9:	scas   al,BYTE PTR es:[rdi]
   14000edda:	ins    BYTE PTR es:[rdi],dx
   14000eddb:	stos   BYTE PTR es:[rdi],al
   14000eddc:	(bad)  
   14000eddd:	mov    ecx,0x5da68219
   14000ede2:	push   rsi
   14000ede3:	icebp  
   14000ede4:	(bad)  
   14000ede5:	sub    al,0x46
   14000ede7:	movsxd r15d,ebx
   14000edea:	cli    
   14000edeb:	movsxd eax,DWORD PTR [rax+rcx*2-0x62454bc8]
   14000edf2:	(bad)  
   14000edf3:	mov    esi,0x1e7687
   14000edf8:	repz stc 
   14000edfa:	jrcxz  0x14000ee4b
   14000edfc:	jge    0x14000edf7
   14000edfe:	or     eax,0xe379bf87
   14000ee03:	cld    
   14000ee04:	or     DWORD PTR [rax],ebx
   14000ee06:	(bad)  
   14000ee07:	or     BYTE PTR [rdi-0x683f936b],cl
   14000ee0d:	sub    DWORD PTR [rax-0x1c],0xad37f3ac
   14000ee14:	popf   
   14000ee15:	pop    rax
   14000ee16:	(bad)  
   14000ee17:	sbb    bl,BYTE PTR [rcx]
   14000ee19:	pop    rax
   14000ee1a:	rex.W outs dx,DWORD PTR ds:[rsi]
   14000ee1c:	outs   dx,BYTE PTR ds:[rsi]
   14000ee1d:	cmc    
   14000ee1e:	fst    QWORD PTR [rcx]
   14000ee20:	imul   esi,edi,0xffffff8b
   14000ee23:	and    BYTE PTR [rax-0x17],dl
   14000ee26:	mov    esp,DWORD PTR [rsi-0x103765c5]
   14000ee2c:	add    BYTE PTR [rax+riz*4+0x3b],ch
   14000ee30:	mov    al,0x85
   14000ee32:	outs   dx,BYTE PTR ds:[rsi]
   14000ee33:	(bad)
   14000ee36:	out    dx,al
   14000ee37:	rex.RXB
   14000ee38:	addr32 mov esp,0x750a600b
   14000ee3e:	sub    edi,DWORD PTR [rdi]
   14000ee40:	stos   BYTE PTR es:[rdi],al
   14000ee41:	out    dx,eax
   14000ee42:	jle    0x14000ee7d
   14000ee44:	enter  0x49cf,0x3a
   14000ee48:	out    dx,eax
   14000ee49:	xor    ah,ah
   14000ee4b:	push   rdi
   14000ee4c:	xor    esi,DWORD PTR [rbp+0x0]
   14000ee4f:	and    dh,dl
   14000ee51:	xchg   ebx,eax
   14000ee52:	data16 cmc 
   14000ee54:	jne    0x14000eeb0
   14000ee56:	loopne 0x14000eec6
   14000ee58:	or     ebx,DWORD PTR [rdi+rsi*4-0x30294210]
   14000ee5f:	loope  0x14000ee2c
   14000ee61:	adc    ebp,DWORD PTR [rdi-0x58a0c8ea]
   14000ee67:	mov    ecx,DWORD PTR [rdi+0x7c]
   14000ee6a:	data16 sti 
   14000ee6c:	fnsave [rdi-0x783c0324]
   14000ee72:	rcr    esp,0x9b
   14000ee75:	out    dx,eax
   14000ee76:	cmc    
   14000ee77:	jle    0x14000ee76
   14000ee79:	out    dx,al
   14000ee7a:	(bad)  
   14000ee7b:	(bad)  
   14000ee7c:	sar    BYTE PTR [rdi-0x2b8bb86],cl
   14000ee82:	adc    DWORD PTR [rsi-0x460110e3],eax
   14000ee88:	pop    rbx
   14000ee89:	cwde   
   14000ee8a:	stc    
   14000ee8b:	or     eax,0xe7b97e83
   14000ee90:	(bad)  
   14000ee92:	cmc    
   14000ee93:	mov    ebx,0xe7ebff0f
   14000ee98:	out    dx,eax
   14000ee99:	fimul  WORD PTR [rcx]
   14000ee9b:	sub    al,0xd4
   14000ee9d:	icebp  
   14000ee9e:	sbb    eax,0x5031b9d7
   14000eea3:	gs rex.WR cdqe 
   14000eea6:	sbb    bh,bl
   14000eea8:	push   rsp
   14000eea9:	or     esp,ebp
   14000eeab:	xor    esi,DWORD PTR [rbx]
   14000eead:	(bad)  
   14000eeaf:	cmp    ebp,ebp
   14000eeb1:	fisub  WORD PTR [rsi+0x10]
   14000eeb4:	(bad)  
   14000eeb5:	rex.WR (bad) 
   14000eeb7:	adc    BYTE PTR [rbx-0x773f42af],al
   14000eebd:	push   rsp
   14000eebe:	add    DWORD PTR [rsi+0x35a1981a],eax
   14000eec4:	(bad)  
   14000eec5:	adc    BYTE PTR [r13+0xc],0x96
   14000eeca:	clc    
   14000eecb:	jg     0x14000ee66
   14000eecd:	pop    rdx
   14000eece:	rex pop rbx
   14000eed1:	sar    DWORD PTR [rcx],0x6
   14000eed4:	rex.W (bad) 
   14000eed6:	lods   al,BYTE PTR ss:[rsi]
   14000eed8:	sub    DWORD PTR [rcx-0x2443738d],ebp
   14000eede:	in     eax,dx
   14000eedf:	lods   al,BYTE PTR ds:[rsi]
   14000eee0:	pop    rcx
   14000eee1:	mov    edi,0xa3441276
   14000eee6:	(bad)  
   14000eee7:	mov    esp,0x268dc4e6
   14000eeec:	loop   0x14000eea6
   14000eeee:	pushf  
   14000eeef:	(bad)  
   14000eef0:	movabs al,ds:0xbe5ce7440157ff96
   14000eef9:	gs retf 0x78ea
   14000eefd:	cmp    DWORD PTR [rbp+0x3924b264],ebx
   14000ef03:	push   rsp
   14000ef04:	sbb    DWORD PTR [rsp+rax*1-0x3c],edi
   14000ef08:	call   0x10c2b914b
   14000ef0d:	xlat   BYTE PTR ds:[rbx]
   14000ef0e:	add    DWORD PTR [rax-0x698ec45e],ebx
   14000ef14:	mov    ebx,0x77871305
   14000ef19:	movsxd esp,DWORD PTR [rdx-0x1e]
   14000ef1c:	xor    BYTE PTR [rax-0x1b8ae8d],al
   14000ef22:	(bad)  
   14000ef23:	(bad)  
   14000ef24:	adc    ebx,DWORD PTR [rbp+0x7d]
   14000ef27:	rex.RXB mov r12d,r15d
   14000ef2a:	repz push rsi
   14000ef2c:	enter  0x8803,0x49
   14000ef30:	cmp    eax,0x43ea2201
   14000ef35:	vsubss xmm0,xmm0,DWORD PTR [rbp-0x2]
   14000ef3a:	pop    rsp
   14000ef3b:	or     al,0x7f
   14000ef3d:	fucomip st,st(6)
   14000ef3f:	cld    
   14000ef40:	add    ch,BYTE PTR [rsi+0x19]
   14000ef43:	jg     0x14000ef76
   14000ef45:	mov    dl,0x6e
   14000ef47:	(bad)  
   14000ef48:	push   0x4ff1f177
   14000ef4d:	fcomip st,st(7)
   14000ef4f:	movabs ds:0x9e1c381f6bbd6f5b,eax
   14000ef58:	out    dx,eax
   14000ef59:	cmc    
   14000ef5a:	fidiv  WORD PTR [rdx-0x11]
   14000ef5d:	out    dx,eax
   14000ef5e:	mov    edi,0xe08f6bfc
   14000ef63:	mov    al,0x3f
   14000ef65:	push   0xffffffffffffffb0
   14000ef67:	jrcxz  0x14000ef46
   14000ef69:	scas   eax,DWORD PTR es:[rdi]
   14000ef6a:	stc    
   14000ef6b:	adc    DWORD PTR [rbx],esi
   14000ef6d:	pop    rdi
   14000ef6e:	(bad)  
   14000ef6f:	call   0x132bef70b
   14000ef74:	(bad)
   14000ef77:	cli    
   14000ef78:	ficom  DWORD PTR [rdi-0x2e9a2211]
   14000ef7e:	add    edx,0x623ce5f5
   14000ef84:	sub    eax,0x26731a66
   14000ef89:	adc    al,BYTE PTR [rdx]
   14000ef8b:	movabs al,ds:0x7e4529e91376e91b
   14000ef94:	mov    ebx,0x16b4b127
   14000ef99:	movsxd ecx,DWORD PTR [rcx+0x4e]
   14000ef9c:	jb     0x14000ef8f
   14000ef9e:	jl     0x14000f01d
   14000efa0:	xchg   esi,eax
   14000efa1:	(bad)  
   14000efa2:	mov    WORD PTR [rdx+riz*1-0x378eeadc],ss
   14000efa9:	mov    BYTE PTR [rdx+0x5aa4127b],ch
   14000efaf:	xor    BYTE PTR [rbx+0x55],dl
   14000efb2:	movsxd esp,DWORD PTR [rdx]
   14000efb4:	(bad)  
   14000efb5:	sub    al,0x11
   14000efb7:	rex.RB (bad) 
   14000efb9:	rol    DWORD PTR [rdx+0x620424a2],cl
   14000efbf:	jb     0x14000efa4
   14000efc1:	cdq    
   14000efc2:	imul   edx,DWORD PTR [rbp-0x3903023e],0x37
   14000efc9:	std    
   14000efca:	in     eax,dx
   14000efcb:	enter  0x1c89,0xcf
   14000efcf:	rcr    DWORD PTR [rsi+0x71f80000],cl
   14000efd5:	and    bl,dl
   14000efd7:	mov    al,0xe5
   14000efd9:	in     al,dx
   14000efda:	or     eax,0x754c36ab
   14000efdf:	mov    ah,0x6a
   14000efe2:	pop    rbx
   14000efe3:	(bad)  
   14000efe4:	jp     0x14000efb0
   14000efe6:	icebp  
   14000efe7:	and    DWORD PTR [rax+riz*4-0x3efbaaf9],0xd0367f82
   14000eff2:	pop    rbp
   14000eff3:	cmp    BYTE PTR [rbx-0x23317642],dl
   14000eff9:	and    DWORD PTR [rbp+rbx*1+0x52e009d9],ebp
   14000f000:	enter  0xb28a,0xea
   14000f004:	mov    ebp,0x80064ab6
   14000f009:	fild   QWORD PTR [rbx-0x68d24753]
   14000f00f:	jg     0x14000f067
   14000f011:	xchg   edx,eax
   14000f012:	jp     0x14000f07e
   14000f014:	cmp    bh,BYTE PTR [rdi+0x13]
   14000f017:	stc    
   14000f018:	and    eax,ecx
   14000f01a:	iret   
   14000f01b:	(bad)  
   14000f01c:	adc    esp,esp
   14000f01e:	push   rdi
   14000f01f:	rex.WXB movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   14000f021:	rcl    DWORD PTR [rsi+rbx*8-0x44],cl
   14000f025:	add    BYTE PTR [rdi-0x18a90746],dh
   14000f02b:	(bad)  
   14000f02c:	icebp  
   14000f02d:	in     eax,dx
   14000f02e:	icebp  
   14000f02f:	(bad)  
   14000f030:	and    ch,bh
   14000f032:	jbe    0x14000efc4
   14000f034:	jne    0x14000f070
   14000f036:	clc    
   14000f037:	(bad)  
   14000f038:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000f039:	out    dx,eax
   14000f03a:	sti    
   14000f03b:	shl    DWORD PTR [rdi-0x41],1
   14000f03e:	jge    0x14000f037
   14000f040:	jle    0x14000f0b2
   14000f042:	fdiv   DWORD PTR [rdi]
   14000f044:	fucomip st,st(3)
   14000f046:	pop    rdi
   14000f047:	ja     0x14000f028
   14000f049:	cmp    ebx,DWORD PTR [rdi-0x2]
   14000f04c:	fld    QWORD PTR [rdi+0x78]
   14000f04f:	int3   
   14000f050:	(bad)  
   14000f051:	push   rbp
   14000f052:	push   rax
   14000f053:	and    dh,al
   14000f055:	mov    dh,0x41
   14000f057:	scas   eax,DWORD PTR es:[rdi]
   14000f058:	pushf  
   14000f059:	stc    
   14000f05a:	loop   0x14000f043
   14000f05c:	outs   dx,BYTE PTR ds:[rsi]
   14000f05d:	(bad)  
   14000f05f:	int    0x6f
   14000f061:	fdiv   st(7),st
   14000f063:	xor    BYTE PTR [rax-0x1bcf0178],dl
   14000f069:	adc    eax,0x3021802b
   14000f06e:	push   0xffffffffffffffc7
   14000f070:	xchg   BYTE PTR [rax+0x1],cl
   14000f073:	rex.B movs BYTE PTR es:[rdi],BYTE PTR es:[rsi]
   14000f076:	push   rdx
   14000f077:	rex jb 0x14000f0cb
   14000f07a:	lods   al,BYTE PTR ds:[rsi]
   14000f07b:	cmp    DWORD PTR [rax],eax
   14000f07d:	(bad)  
   14000f07e:	jb     0x14000f071
   14000f080:	xchg   esi,eax
   14000f081:	test   DWORD PTR [rbp-0x6],ecx
   14000f084:	sub    al,0x52
   14000f086:	mov    ch,0x13
   14000f088:	retf   0x4c58
   14000f08b:	rex.WX mov al,0x2a
   14000f08e:	mov    dl,0x4e
   14000f090:	or     DWORD PTR [rsi],eax
   14000f092:	fucompp 
   14000f094:	jnp    0x14000f09e
   14000f096:	stc    
   14000f097:	xor    ah,ah
   14000f099:	addr32 cqo 
   14000f09c:	cmp    ch,BYTE PTR [rbx+0x1f1ad42c]
   14000f0a2:	in     eax,dx
   14000f0a3:	scas   al,BYTE PTR es:[rdi]
   14000f0a4:	cmp    ah,BYTE PTR [rbx-0x33]
   14000f0a7:	and    al,0x80
   14000f0a9:	xor    DWORD PTR [rax],eax
   14000f0ab:	scas   eax,DWORD PTR es:[rdi]
   14000f0ac:	cmp    cl,dh
   14000f0ae:	loope  0x14000f05b
   14000f0b0:	shl    DWORD PTR [rbx-0x7f],0x0
   14000f0b4:	mov    esp,0xccee0886
   14000f0b9:	mov    esi,DWORD PTR [rsi]
   14000f0bb:	scas   eax,DWORD PTR es:[rdi]
   14000f0bc:	or     eax,DWORD PTR [rax+rcx*1+0x1a]
   14000f0c0:	fisttp DWORD PTR [rdi]
   14000f0c2:	and    eax,0xfee0dc04
   14000f0c7:	imul   ecx,DWORD PTR [rsi],0x6014c53f
   14000f0cd:	loopne 0x14000f0db
   14000f0cf:	mov    edx,0x37d0e70f
   14000f0d4:	nop
   14000f0d5:	stc    
   14000f0d6:	ds ss data16 (bad) 
   14000f0da:	add    dh,BYTE PTR [rdx-0x31d5dd9]
   14000f0e0:	rex test DWORD PTR [rcx-0x2be03f83],ebp
   14000f0e7:	pop    rdx
   14000f0e8:	std    
   14000f0e9:	(bad)  
   14000f0ea:	iret   
   14000f0eb:	fbstp  TBYTE PTR [rdi]
   14000f0ed:	in     al,0xef
   14000f0ef:	sub    eax,0x90d5f834
   14000f0f4:	mov    edi,0x2c3f904c
   14000f0f9:	cmp    esp,0x756febea
   14000f0ff:	jno    0x14000f14c
   14000f101:	sti    
   14000f102:	xchg   edi,eax
   14000f103:	icebp  
   14000f104:	popf   
   14000f105:	icebp  
   14000f106:	imul   edx,ebp,0xffffffc7
   14000f109:	ffreep st(1)
   14000f10b:	(bad)  
   14000f10c:	ds mov ebx,0x7cef9efd
   14000f112:	sti    
   14000f113:	scas   al,BYTE PTR es:[rdi]
   14000f114:	add    ecx,esp
   14000f116:	(bad)  
   14000f117:	(bad)  
   14000f118:	jl     0x14000f0c9
   14000f11a:	ja     0x14000f0f9
   14000f11c:	jge    0x14000f10d
   14000f11e:	jl     0x14000f119
   14000f120:	popf   
   14000f121:	(bad)  
   14000f122:	in     al,dx
   14000f123:	jo     0x14000f0c4
   14000f125:	sbb    dh,BYTE PTR [rax-0x650221d]
   14000f12b:	(bad)  
   14000f12c:	xor    edi,edi
   14000f12e:	xchg   esi,edi
   14000f130:	pop    rsp
   14000f131:	mov    edi,0xdccff9f7
   14000f136:	mov    dl,0xf3
   14000f138:	add    DWORD PTR [rdi],0xa98767a7
   14000f13e:	add    al,BYTE PTR [rax-0x4c4d0077]
   14000f144:	sub    DWORD PTR [rip+0xffffffffa50b1f24],eax        # 0xe50c106e
   14000f14a:	and    esp,0xffffffb3
   14000f14d:	sub    ah,BYTE PTR [rip+0xffffffffe4c555c6]        # 0x124c64719
   14000f153:	test   al,ah
   14000f155:	cmp    BYTE PTR [rbx-0x3c1aaa38],bh
   14000f15b:	sub    dl,BYTE PTR [rip+0xffffffffaa1018c1]        # 0xea110a22
   14000f161:	(bad)  
   14000f163:	jo     0x14000f11f
   14000f165:	lahf   
   14000f166:	xchg   edx,eax
   14000f167:	stos   DWORD PTR es:[edi],eax
   14000f169:	sub    al,0x61
   14000f16b:	cld    
   14000f16c:	sub    edi,DWORD PTR [rcx-0x5f]
   14000f16f:	leave  
   14000f170:	lea    ebx,[rbx-0x49b09529]
   14000f176:	lahf   
   14000f177:	cmp    DWORD PTR [rsi+0x69c06b81],ebp
   14000f17d:	rex.WRB add r14b,r9b
   14000f180:	jp     0x14000f17d
   14000f182:	(bad)  
   14000f183:	cmp    eax,0x6e17088d
   14000f188:	fdiv   DWORD PTR [rsi+rbp*2+0x63b9cb62]
   14000f18f:	imul   eax,DWORD PTR [rax],0x15
   14000f192:	stos   DWORD PTR es:[rdi],eax
   14000f193:	pop    rsp
   14000f194:	(bad)  
   14000f195:	in     al,0x31
   14000f197:	test   BYTE PTR [rax-0x4a56027d],0x9f
   14000f19e:	stos   BYTE PTR es:[rdi],al
   14000f19f:	sbb    bh,bh
   14000f1a1:	xor    eax,0xa3ce076e
   14000f1a6:	scas   eax,DWORD PTR es:[rdi]
   14000f1a7:	add    eax,0xedfd338
   14000f1ad:	push   0x5f
   14000f1af:	(bad)  
   14000f1b0:	sub    cl,dl
   14000f1b2:	(bad)  
   14000f1b3:	mov    esi,ebp
   14000f1b5:	add    DWORD PTR [rdi-0x2a100c1c],0xffffffd2
   14000f1bc:	fld    QWORD PTR [rdi-0x2303766a]
   14000f1c2:	loopne 0x14000f1c0
   14000f1c4:	test   al,0x90
   14000f1c6:	pop    rdi
   14000f1c7:	xchg   ebp,eax
   14000f1c8:	bswap  esi
   14000f1ca:	repnz enter 0x39f9,0x6f
   14000f1cf:	sbb    DWORD PTR [rbx-0x5d],0x57fb46f8
   14000f1d6:	jo     0x14000f1b3
   14000f1d8:	fdiv   st,st(3)
   14000f1da:	nop
   14000f1db:	ja     0x14000f218
   14000f1dd:	jo     0x14000f1cc
   14000f1df:	(bad)  
   14000f1e0:	ds std 
   14000f1e2:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000f1e3:	xchg   esi,ebp
   14000f1e5:	mov    ebp,0xed1f96f5
   14000f1ea:	add    DWORD PTR [rdi-0x1420cbd],eax
   14000f1f0:	scas   eax,DWORD PTR es:[rdi]
   14000f1f1:	fcomip st,st(7)
   14000f1f3:	(bad)  
   14000f1f4:	adc    edx,DWORD PTR [rbx-0x3d458853]
   14000f1fa:	mov    ?,WORD PTR [rdi-0x41]
   14000f1fd:	out    0x1b,al
   14000f1ff:	int3   
   14000f200:	cld    
   14000f201:	jnp    0x14000f1f6
   14000f203:	jae    0x14000f1c2
   14000f205:	jo     0x14000f1ea
   14000f207:	rex.RXB mov r14d,0x6f6cef72
   14000f20d:	push   rax
   14000f20e:	add    dh,BYTE PTR [rbp+0x55]
   14000f211:	sar    BYTE PTR [rsi+0x2a8966],0x1c
   14000f218:	pop    rcx
   14000f219:	or     cl,BYTE PTR [rax+0x2417a617]
   14000f21f:	push   0x43
   14000f221:	in     eax,0x79
   14000f223:	jo     0x14000f276
   14000f225:	mov    edi,0x4d6898f
   14000f22a:	and    bh,cl
   14000f22c:	(bad)  
   14000f22e:	pop    rcx
   14000f22f:	test   al,0xf1
   14000f231:	pop    rcx
   14000f232:	scas   al,BYTE PTR es:[rdi]
   14000f233:	push   rbp
   14000f234:	rex.WRXB (bad) 
   14000f236:	xchg   di,ax
   14000f238:	xor    BYTE PTR gs:[rsi],0x16
   14000f23c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000f23d:	rex.W sbb al,0x88
   14000f240:	adc    al,bl
   14000f242:	movabs eax,ds:0x9f191c9c99d01498
   14000f24b:	pushf  
   14000f24c:	sbb    al,0x3
   14000f24e:	mov    al,0x75
   14000f250:	jrcxz  0x14000f1ed
   14000f252:	(bad)  
   14000f253:	neg    BYTE PTR [rcx-0x39]
   14000f256:	cmp    al,0x68
   14000f258:	or     eax,0x9ad38
   14000f25d:	sar    BYTE PTR [rdi],0x7
   14000f260:	and    cl,BYTE PTR [rbp+rbx*4-0x45]
   14000f264:	loope  0x14000f1f2
   14000f266:	rol    BYTE PTR [rax-0x38],0x2c
   14000f26a:	xor    al,BYTE PTR [rbp+rsi*4+0xd224439]
   14000f271:	mov    eax,0x1c87ec44
   14000f276:	retf   
   14000f277:	or     DWORD PTR [rax+0x45],ebx
   14000f27a:	mov    ebx,0x57d0170
   14000f27f:	add    al,0xc6
   14000f281:	out    0xd9,al
   14000f283:	(bad)  
   14000f284:	and    bl,ch
   14000f286:	pushf  
   14000f287:	add    eax,0x7d750460
   14000f28c:	pop    rdi
   14000f28d:	mov    cl,0x96
   14000f28f:	(bad)  
   14000f291:	loope  0x14000f250
   14000f293:	xchg   DWORD PTR [rdi+rdx*4],esi
   14000f296:	jg     0x14000f306
   14000f298:	and    edx,esi
   14000f29a:	push   rdi
   14000f29b:	rex.B jrcxz 0x14000f2a7
   14000f29e:	repnz pop rbx
   14000f2a0:	xchg   ecx,eax
   14000f2a1:	xsave  [rbx]
   14000f2a4:	mov    edi,0xa450b4cb
   14000f2a9:	xchg   esi,eax
   14000f2aa:	in     al,dx
   14000f2ab:	(bad)  
   14000f2ac:	or     esp,DWORD PTR [rax+0x74af8a35]
   14000f2b2:	fimul  WORD PTR [rax-0x76503825]
   14000f2b8:	pushf  
   14000f2b9:	dec    esi
   14000f2bb:	popf   
   14000f2bc:	repz (bad) 
   14000f2be:	mov    esi,0x3c1fd5fe
   14000f2c3:	rex.WR loopne 0x14000f296
   14000f2c6:	jmp    0x14000f2bf
   14000f2c8:	call   rbx
   14000f2ca:	jge    0x14000f2bb
   14000f2cc:	jl     0x14000f2c7
   14000f2ce:	imul   edx,DWORD PTR [rip+0x60b273dc],0xfb5e7bc7        # 0x1a0b366b4
   14000f2d8:	nop    eax
   14000f2db:	lahf   
   14000f2dc:	(bad)  
   14000f2dd:	in     al,dx
   14000f2de:	cmp    eax,0xa7dcf834
   14000f2e3:	outs   dx,BYTE PTR ds:[rsi]
   14000f2e4:	jnp    0x14000f2b6
   14000f2e6:	fdivr  QWORD PTR [rbp+0x4]
   14000f2e9:	rex.R xchg edi,eax
   14000f2eb:	popf   
   14000f2ec:	shl    DWORD PTR [rdx-0x5b],0x0
   14000f2f0:	rex.X adc eax,0x12235a11
   14000f2f6:	pop    rsp
   14000f2f7:	popf   
   14000f2f8:	(bad)  
   14000f2f9:	jge    0x14000f31d
   14000f2fb:	pop    rsp
   14000f2fc:	jrcxz  0x14000f35c
   14000f2fe:	(bad)  
   14000f2ff:	jnp    0x14000f323
   14000f301:	sub    eax,0xe210a2e
   14000f306:	test   al,0x24
   14000f308:	or     DWORD PTR [rdx-0x55e167e8],0xa1c03be7
   14000f312:	sub    ah,BYTE PTR [rcx]
   14000f314:	rex.RX stos BYTE PTR es:[rdi],al
   14000f316:	rex.XB adc BYTE PTR [r13-0x2f],dl
   14000f31a:	xchg   DWORD PTR [rbx+0x509dac67],esp
   14000f320:	mov    cl,0xe0
   14000f322:	addr32 rex.WRXB (bad) 
   14000f325:	clc    
   14000f326:	popf   
   14000f327:	mov    dh,0x4
   14000f329:	loopne 0x14000f2d7
   14000f32b:	mov    bh,0xdf
   14000f32d:	je     0x14000f2bd
   14000f32f:	jae    0x14000f3a5
   14000f331:	cmc    
   14000f332:	(bad)  
   14000f333:	in     al,0x68
   14000f335:	out    0xdc,eax
   14000f337:	rex.WXB (bad) 
   14000f339:	lods   al,BYTE PTR ds:[rsi]
   14000f33a:	xor    eax,0xf745ab8b
   14000f33f:	mov    DWORD PTR [rax+0xf4155cf],edi
   14000f345:	push   rax
   14000f346:	or     al,0xf4
   14000f348:	leave  
   14000f349:	xor    al,0xfa
   14000f34b:	outs   dx,DWORD PTR ds:[rsi]
   14000f34c:	pushf  
   14000f34d:	mul    cl
   14000f34f:	or     esi,ebp
   14000f351:	mov    ecx,eax
   14000f353:	loopne 0x14000f3c6
   14000f355:	(bad)  
   14000f356:	loope  0x14000f35f
   14000f358:	rcr    BYTE PTR [rsi],1
   14000f35a:	fwait
   14000f35b:	xor    BYTE PTR [rbp+rbp*8+0x31],0xe4
   14000f360:	mov    bh,0xc6
   14000f362:	stos   DWORD PTR es:[rdi],eax
   14000f363:	xchg   r9d,eax
   14000f365:	fild   QWORD PTR [rdx-0xa]
   14000f368:	imul   eax,ebx,0xffffff8e
   14000f36b:	jb     0x14000f316
   14000f36d:	lock faddp st(4),st
   14000f370:	ficomp DWORD PTR [rdi]
   14000f372:	rex.WXB js 0x14000f3c6
   14000f375:	adc    eax,0xec1c87e5
   14000f37a:	or     cl,BYTE PTR [rip+0xfffffffffe744def]        # 0x13e75416f
   14000f380:	test   BYTE PTR [rsi+rdi*4],0xd4
   14000f384:	jge    0x14000f3b9
   14000f386:	out    dx,al
   14000f387:	sbb    bh,BYTE PTR [rdi+0x6]
   14000f38a:	mov    ch,dh
   14000f38c:	or     dl,dh
   14000f38e:	rex.WRX (bad) 
   14000f390:	xchg   DWORD PTR [rcx-0xe4560fa],ebx
   14000f396:	pop    rbx
   14000f397:	fisttp DWORD PTR [rcx-0x3e0205fd]
   14000f39d:	(bad)  
   14000f39e:	cmp    eax,0x477e0c5e
   14000f3a3:	add    edi,edi
   14000f3a5:	int    0xfb
   14000f3a7:	mov    al,0xfd
   14000f3a9:	mov    ebx,0xe075deb7
   14000f3ae:	mov    dh,0xef
   14000f3b0:	out    dx,eax
   14000f3b1:	fmul   QWORD PTR [rdi]
   14000f3b3:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f3b4:	loop   0x14000f369
   14000f3b6:	or     BYTE PTR [rcx+0x1],0x69
   14000f3ba:	mov    dh,0x80
   14000f3bc:	and    eax,edi
   14000f3be:	add    ah,al
   14000f3c0:	(bad)  
   14000f3c1:	test   ah,dl
   14000f3c3:	mov    ebp,0x4881d518
   14000f3c8:	rex.W cmp BYTE PTR [rdx-0x3a598f66],bpl
   14000f3cf:	add    edx,esi
   14000f3d1:	and    ecx,esi
   14000f3d3:	fcmove st,st(3)
   14000f3d5:	leave  
   14000f3d6:	ja     0x14000f41d
   14000f3d8:	push   0x35a17458
   14000f3dd:	rex.WX mov bpl,0x2a
   14000f3e0:	ret    0x68fa
   14000f3e3:	and    dh,BYTE PTR [rcx-0x2d7616ac]
   14000f3e9:	stos   BYTE PTR es:[rdi],al
   14000f3ea:	rex.R movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f3ec:	or     DWORD PTR [rcx-0x56a8144b],0x1a
   14000f3f3:	jo     0x14000f3c2
   14000f3f5:	(bad)  
   14000f3f6:	(bad)  
   14000f3f7:	std    
   14000f3f8:	int    0xc6
   14000f3fa:	jrcxz  0x14000f41a
   14000f3fc:	xor    eax,0x8004c69c
   14000f401:	mov    BYTE PTR [rsi-0x3f],bl
   14000f404:	add    BYTE PTR [rbp+0x3a],ch
   14000f407:	ja     0x14000f3ec
   14000f409:	pop    rdx
   14000f40a:	(bad)  
   14000f40b:	cmp    BYTE PTR [rbx-0x1b],ch
   14000f40e:	ins    DWORD PTR es:[rdi],dx
   14000f40f:	cs cmp eax,0xd4ceb8a3
   14000f415:	add    al,bl
   14000f417:	add    al,0xca
   14000f419:	test   BYTE PTR [rcx+rdi*4+0x7dc4b883],cl
   14000f420:	add    DWORD PTR [rsi],ecx
   14000f422:	add    ebp,ebx
   14000f424:	stc    
   14000f425:	add    ebx,DWORD PTR [rax+0x70069f1c]
   14000f42b:	(bad)  
   14000f42c:	(bad)  
   14000f42d:	loopne 0x14000f496
   14000f42f:	pop    rsp
   14000f430:	fistp  WORD PTR [rax-0xb]
   14000f433:	mov    esp,0xa03ce736
   14000f438:	ins    DWORD PTR es:[rdi],dx
   14000f439:	mov    ecx,0x8bbcce93
   14000f43e:	rex.RX clc 
   14000f440:	(bad)  
   14000f441:	cmp    DWORD PTR [rsi+rdx*1-0x48],0xfffffffa
   14000f446:	pushf  
   14000f447:	not    BYTE PTR [rdi+riz*4-0x1bca2fea]
   14000f44e:	(bad)  
   14000f44f:	(bad)  
   14000f450:	(bad)  
   14000f451:	cmp    ch,BYTE PTR [rdi-0x3f]
   14000f454:	mov    ebp,0xde434f63
   14000f459:	sbb    eax,0x369d141
   14000f45e:	pop    rcx
   14000f45f:	xchg   BYTE PTR [rdi+0x7f],cl
   14000f462:	repnz scas al,BYTE PTR es:[rdi]
   14000f464:	jnp    0x14000f475
   14000f466:	(bad)  
   14000f467:	cwde   
   14000f468:	in     eax,dx
   14000f469:	xchg   ebp,eax
   14000f46a:	fdivp  st(7),st
   14000f46c:	jmp    0x14000f44b
   14000f46e:	mov    edi,0x3c8fd2f7
   14000f473:	sbb    ah,bl
   14000f475:	jge    0x14000f4a1
   14000f477:	ret    
   14000f478:	mov    ?,edi
   14000f47a:	mov    esp,0xefc01676
   14000f47f:	(bad)  
   14000f480:	cli    
   14000f481:	and    eax,0x374dcbff
   14000f486:	(bad)  
   14000f487:	cmp    BYTE PTR [rbx],dh
   14000f489:	(bad)  
   14000f48a:	lock rex movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000f48d:	or     cl,BYTE PTR [rbx+rbx*2]
   14000f490:	in     al,0x69
   14000f492:	adc    eax,0xd4c04364
   14000f497:	or     BYTE PTR [rax+0x0],0xa4
   14000f49b:	xchg   esp,eax
   14000f49c:	push   rdi
   14000f49d:	mov    ch,0x2f
   14000f49f:	cmc    
   14000f4a0:	or     BYTE PTR [rax-0x2bb39edc],al
   14000f4a6:	add    DWORD PTR [rdx+0xc713738],ebp
   14000f4ac:	rex.R mov dl,0xab
   14000f4af:	repz rex.W
   14000f4b1:	rex xchg esp,eax
   14000f4b3:	xchg   r9,rax
   14000f4b5:	mov    esp,edi
   14000f4b7:	push   rdx
   14000f4b8:	retf   
   14000f4b9:	scas   al,BYTE PTR es:[rdi]
   14000f4ba:	add    edi,DWORD PTR [rax]
   14000f4bc:	and    edi,DWORD PTR [rax]
   14000f4be:	jbe    0x14000f4e2
   14000f4c0:	stc    
   14000f4c1:	jmp    0x14000f44e
   14000f4c3:	adc    DWORD PTR [rbx+0x2a],eax
   14000f4c6:	adc    al,0x81
   14000f4c8:	adc    BYTE PTR [rsi-0x1f],0xd6
   14000f4cc:	outs   dx,BYTE PTR ds:[rsi]
   14000f4cd:	fdiv   QWORD PTR [rax-0x157f2dfa]
   14000f4d3:	gs (bad) 
   14000f4d5:	(bad)  
   14000f4d6:	in     al,dx
   14000f4d7:	rex.WRX
   14000f4d8:	rex.WXB add sil,BYTE PTR [r8-0x2a]
   14000f4dc:	fld    TBYTE PTR [rdi+0x2a]
   14000f4df:	add    BYTE PTR [rsi+0x21],bh
   14000f4e2:	loopne 0x14000f4cc
   14000f4e4:	in     al,dx
   14000f4e5:	(bad)  
   14000f4e6:	lods   al,BYTE PTR ds:[rsi]
   14000f4e7:	pop    rbx
   14000f4e8:	(bad)  
   14000f4e9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f4ea:	mov    WORD PTR [rdi+0x11a450ea],gs
   14000f4f0:	push   rdi
   14000f4f1:	or     eax,0xcb489fdd
   14000f4f6:	jg     0x14000f4f9
   14000f4f8:	jrcxz  0x14000f56e
   14000f4fa:	or     BYTE PTR [rdi+0x40a1cfba],dl
   14000f500:	ud1    ebx,DWORD PTR [rdi]
   14000f503:	(bad)  
   14000f504:	movsxd esi,DWORD PTR [rcx+0xf]
   14000f507:	rex xchg edi,eax
   14000f509:	movabs al,ds:0xef549e8fce13f5d2
   14000f512:	rex.WRB xchg r9,rax
   14000f514:	(bad)  
   14000f515:	sbb    dl,dh
   14000f517:	jnp    0x14000f561
   14000f519:	int    0xfe
   14000f51b:	adc    al,0xf9
   14000f51d:	sub    DWORD PTR [rcx],ecx
   14000f51f:	out    dx,eax
   14000f520:	xor    eax,0xd8890029
   14000f525:	(bad)
   14000f529:	mov    cl,BYTE PTR [rax-0x1e709704]
   14000f52f:	pop    rdi
   14000f530:	mov    ebx,0xf181e1d7
   14000f535:	sub    edx,DWORD PTR [rcx+0x45a44775]
   14000f53b:	push   rdi
   14000f53c:	xchg   esi,eax
   14000f53d:	loope  0x14000f592
   14000f53f:	pop    rdi
   14000f540:	js     0x14000f5a2
   14000f542:	sti    
   14000f543:	in     eax,dx
   14000f544:	mov    bh,0xdd
   14000f546:	ja     0x14000f4c8
   14000f548:	cdq    
   14000f549:	div    esi
   14000f54b:	sti    
   14000f54c:	sbb    edi,0x79
   14000f54f:	(bad)  
   14000f550:	(bad)  
   14000f551:	sti    
   14000f552:	xor    al,0x81
   14000f554:	sbb    eax,0x37ed79ef
   14000f559:	cwde   
   14000f55a:	ret    
   14000f55b:	(bad)  
   14000f55c:	nop    DWORD PTR [rdx-0x460540d5]
   14000f563:	cmp    esi,DWORD PTR [rdi+0x2]
   14000f566:	pop    rax
   14000f567:	enter  0xa9dd,0x92
   14000f56b:	add    bl,BYTE PTR [rdx+0x6002ffba]
   14000f571:	(bad)  
   14000f572:	outs   dx,BYTE PTR ds:[rsi]
   14000f573:	push   0xffffffffffffffd4
   14000f575:	cmp    al,0x51
   14000f577:	(bad)  
   14000f57a:	or     DWORD PTR [rbp+0x6923c330],edx
   14000f580:	stos   BYTE PTR es:[rdi],al
   14000f581:	cmp    DWORD PTR [rax-0x55636e38],eax
   14000f587:	add    al,0xd5
   14000f589:	stc    
   14000f58a:	ret    0xd3dd
   14000f58d:	cmc    
   14000f58e:	or     al,BYTE PTR [rdx+0x795739b6]
   14000f594:	and    ch,BYTE PTR [rbx+0x60048c0c]
   14000f59a:	in     al,dx
   14000f59b:	mov    WORD PTR [rcx+0x7fd2ba55],gs
   14000f5a1:	push   0xffffffffffffffb9
   14000f5a3:	movsxd esi,DWORD PTR [rbx+0x4969c14]
   14000f5a9:	or     BYTE PTR [rax],0xcf
   14000f5ac:	and    al,0xa2
   14000f5ae:	mov    ebp,ecx
   14000f5b0:	out    0x4c,eax
   14000f5b2:	lods   eax,DWORD PTR ds:[rsi]
   14000f5b3:	(bad)  
   14000f5b4:	sbb    DWORD PTR [rdi],ebp
   14000f5b6:	fisub  DWORD PTR [rax+0x52]
   14000f5b9:	push   0x2c
   14000f5bb:	rex.RX adc eax,0xaab79b4b
   14000f5c1:	mov    edi,0x847ff5a9
   14000f5c6:	out    0x70,al
   14000f5c8:	pop    rcx
   14000f5c9:	idiv   BYTE PTR [rcx]
   14000f5cb:	mov    ah,0x30
   14000f5cd:	(bad)  
   14000f5ce:	xor    bl,ah
   14000f5d0:	lods   al,BYTE PTR ds:[rsi]
   14000f5d1:	repnz ss push rax
   14000f5d4:	jno    0x14000f55f
   14000f5d6:	fidivr WORD PTR [rcx]
   14000f5d8:	jne    0x14000f5cf
   14000f5da:	sbb    edx,esi
   14000f5dc:	imul   esp,DWORD PTR [rip+0xfffffffff4b4c19f],0xffffffe8        # 0x134b5b782
   14000f5e3:	or     esi,DWORD PTR [rbx+0x40]
   14000f5e6:	jg     0x14000f619
   14000f5e8:	(bad)  
   14000f5e9:	rex.WRXB (bad) 
   14000f5eb:	mov    esi,0x248fa3d8
   14000f5f0:	and    cl,BYTE PTR [rbp+rbx*4+0x4b5dfb58]
   14000f5f7:	ret    
   14000f5f8:	jnp    0x14000f5d5
   14000f5fa:	loopne 0x14000f66a
   14000f5fc:	rex.RXB jmp 0x14000f5f5
   14000f5ff:	(bad)  
   14000f600:	loope  0x14000f64d
   14000f602:	popf   
   14000f603:	(bad)  
   14000f604:	loop   0x14000f5c4
   14000f606:	icebp  
   14000f607:	stos   DWORD PTR es:[rdi],eax
   14000f608:	loopne 0x14000f5e4
   14000f60a:	and    esi,DWORD PTR [rcx-0x66313870]
   14000f610:	rcr    esp,0x37
   14000f613:	mov    esi,0xcc5d83fa
   14000f618:	sbb    al,0x7a
   14000f61a:	std    
   14000f61b:	fidivr WORD PTR [rbx]
   14000f61d:	mov    dh,0xff
   14000f61f:	shr    DWORD PTR [rbx],0xa6
   14000f622:	(bad)  
   14000f623:	test   ecx,esp
   14000f625:	ds popf 
   14000f627:	loopne 0x14000f5b8
   14000f629:	jl     0x14000f614
   14000f62b:	idiv   ebp
   14000f62d:	sti    
   14000f62e:	int    0x77
   14000f630:	in     al,dx
   14000f631:	(bad)  [rcx+0x502cd0f3]
   14000f637:	sbb    esp,ebp
   14000f639:	mov    ah,0xb6
   14000f63b:	out    0x50,eax
   14000f63d:	mov    BYTE PTR [rsi],bh
   14000f63f:	jg     0x14000f675
   14000f641:	lock fdivr QWORD PTR [rsi]
   14000f644:	adc    ebp,DWORD PTR [rcx+0x1]
   14000f647:	(bad)  
   14000f648:	in     eax,0x4d
   14000f64a:	or     eax,0x526ceae0
   14000f64f:	ja     0x14000f6a4
   14000f651:	push   0x48
   14000f653:	xor    al,0x5f
   14000f655:	(bad)  
   14000f656:	add    BYTE PTR [rax+0x1d96124b],dl
   14000f65c:	mov    ah,0xaf
   14000f65e:	rex and eax,0x3bb50695
   14000f664:	add    al,0xf3
   14000f666:	(bad)  
   14000f667:	nop
   14000f668:	rex.W (bad) 
   14000f66a:	rex.RX and BYTE PTR [rax],r11b
   14000f66d:	rex
   14000f66e:	addr32 jl 0x14000f625
   14000f671:	cmp    esi,DWORD PTR [rsi]
   14000f673:	cmp    DWORD PTR [rcx],esi
   14000f675:	or     ah,BYTE PTR [rax-0x15]
   14000f678:	(bad)  
   14000f679:	(bad)  
   14000f67a:	dec    ch
   14000f67c:	xchg   ebx,eax
   14000f67d:	mov    ?,WORD PTR [rdx-0x7c]
   14000f680:	sbb    dh,BYTE PTR [rax+0x5a]
   14000f683:	adc    al,BYTE PTR [rax]
   14000f685:	add    BYTE PTR [rdi],ch
   14000f687:	add    ah,BYTE PTR [rbp+0x34]
   14000f68a:	mov    ch,0x75
   14000f68c:	std    
   14000f68d:	pop    rdx
   14000f68e:	jb     0x14000f618
   14000f690:	push   rcx
   14000f691:	cmp    eax,0x9caaf54e
   14000f696:	fwait
   14000f697:	enter  0x9c2f,0xbf
   14000f69b:	lea    ebx,[rsi]
   14000f69d:	sahf   
   14000f69e:	cwde   
   14000f69f:	jge    0x14000f6a2
   14000f6a1:	ins    DWORD PTR es:[rdi],dx
   14000f6a2:	int3   
   14000f6a3:	(bad)  
   14000f6a4:	rex fdiv DWORD PTR [rbx+rdi*2]
   14000f6a8:	(bad)  
   14000f6a9:	mov    dl,0xee
   14000f6ab:	(bad)  
   14000f6ac:	push   rsp
   14000f6ad:	or     eax,0x9f80d33b
   14000f6b2:	push   r13
   14000f6b4:	int3   
   14000f6b5:	movabs ds:0x4be001fdfce2b07f,eax
   14000f6be:	xor    eax,0x798b35ea
   14000f6c3:	clc    
   14000f6c4:	jp     0x14000f67d
   14000f6c6:	sahf   
   14000f6c7:	enter  0x59f9,0xfd
   14000f6cb:	mov    ebx,0x5c4682d6
   14000f6d0:	jge    0x14000f666
   14000f6d2:	rex imul eax,DWORD PTR [edi+ebx*2],0x6f
   14000f6d8:	dec    DWORD PTR [rdx]
   14000f6da:	out    dx,al
   14000f6db:	sbb    eax,0xcead1abf
   14000f6e0:	or     BYTE PTR [rdx-0x755b8b2],cl
   14000f6e6:	add    al,bh
   14000f6e8:	shl    BYTE PTR [rdi-0x11],cl
   14000f6eb:	fld    DWORD PTR [rcx]
   14000f6ed:	(bad)  
   14000f6ee:	sub    bl,cl
   14000f6f0:	repnz jrcxz 0x14000f6ea
   14000f6f3:	(bad)  
   14000f6f4:	dec    bl
   14000f6f6:	mov    edi,0xf48ca8f9
   14000f6fb:	imul   eax,DWORD PTR [rbx+rdi*1],0x83baf3de
   14000f702:	(bad)  
   14000f703:	cld    
   14000f704:	gs jg  0x14000f6c5
   14000f707:	out    dx,eax
   14000f708:	outs   dx,DWORD PTR ds:[rsi]
   14000f709:	stc    
   14000f70a:	repnz nop DWORD PTR [rsi]
   14000f70e:	(bad)  
   14000f70f:	or     BYTE PTR [rbp-0x1f],ch
   14000f712:	mov    esi,0xb473f699
   14000f717:	fiadd  WORD PTR [rcx]
   14000f719:	adc    DWORD PTR [rax+0x76d41db2],ebp
   14000f71f:	pop    rbx
   14000f720:	push   rax
   14000f721:	cdq    
   14000f722:	ins    DWORD PTR es:[rdi],dx
   14000f723:	sbb    edx,DWORD PTR [rdi+0x525f6a77]
   14000f729:	xor    DWORD PTR [rbx-0x6c],0x2b
   14000f72d:	mov    dl,0xea
   14000f72f:	xchg   BYTE PTR ds:[rdx+0x19],ah
   14000f733:	sub    ah,BYTE PTR [rdi+rcx*8+0x13]
   14000f737:	rex.WB
   14000f738:	rex.B push 0xffffffffffffffff
   14000f73b:	add    edx,eax
   14000f73d:	adc    ah,dh
   14000f73f:	(bad)  
   14000f740:	xlat   BYTE PTR ds:[rbx]
   14000f741:	(bad)  
   14000f742:	rex.WRB rol QWORD PTR [r9+0x18],0x88
   14000f747:	jp     0x14000f752
   14000f749:	cwde   
   14000f74a:	sbb    eax,0x1eacd646
   14000f74f:	test   DWORD PTR [rdi+rcx*2-0x704e0e84],edx
   14000f756:	push   rsi
   14000f757:	cli    
   14000f758:	jbe    0x14000f701
   14000f75a:	adc    DWORD PTR [rbp+rdi*8-0x13],ebp
   14000f75e:	fwait
   14000f75f:	es mov al,ch
   14000f762:	pop    rcx
   14000f763:	rex.WR jo 0x14000f7c1
   14000f766:	(bad)  
   14000f767:	sbb    ebx,DWORD PTR [rdi-0x1b]
   14000f76a:	pop    rbp
   14000f76b:	gs rex.R mov cl,0x64
   14000f76f:	mov    ebp,DWORD PTR [rax-0x3f]
   14000f772:	add    eax,0xb40266d4
   14000f777:	push   0x2ff3cb80
   14000f77c:	(bad)  
   14000f77d:	xchg   esp,eax
   14000f77e:	(bad)  
   14000f77f:	add    BYTE PTR [rax],0x4c
   14000f782:	int3   
   14000f783:	out    dx,al
   14000f784:	shr    eax,0xb8
   14000f787:	add    esi,DWORD PTR [rax+0x31e11116]
   14000f78d:	rex xchg ebp,eax
   14000f78f:	fnstenv [rdi-0x68094d45]
   14000f795:	xor    eax,DWORD PTR [rax-0x68]
   14000f798:	add    eax,0xf4203d06
   14000f79d:	push   rcx
   14000f79e:	adc    eax,0xbf1154f0
   14000f7a3:	xchg   esi,eax
   14000f7a4:	rcr    bl,cl
   14000f7a6:	rex jle 0x14000f79a
   14000f7a9:	or     DWORD PTR [rcx],eax
   14000f7ab:	enter  0xd284,0xe7
   14000f7af:	adc    r12b,r12b
   14000f7b2:	xor    eax,DWORD PTR [rdx-0x3f90c465]
   14000f7b8:	sbb    eax,0xd646cf13
   14000f7bd:	sbb    DWORD PTR [rcx-0x1f5a4895],eax
   14000f7c3:	cmp    al,0x80
   14000f7c5:	(bad)  
   14000f7c6:	fdiv   QWORD PTR [rdi]
   14000f7c8:	mov    bl,0xef
   14000f7ca:	mov    dh,0xdb
   14000f7cc:	mov    dh,0xef
   14000f7ce:	addr32 (bad) 
   14000f7d0:	sar    ebp,cl
   14000f7d2:	dec    r15d
   14000f7d5:	(bad)  
   14000f7d6:	test   eax,0xc00c7df1
   14000f7db:	or     eax,0xefcef021
   14000f7e0:	jg     0x14000f7d1
   14000f7e2:	sahf   
   14000f7e3:	xor    edi,0xffffffef
   14000f7e6:	cmp    BYTE PTR [rax],bh
   14000f7e8:	adc    ebp,DWORD PTR [rbp-0x27415e04]
   14000f7ee:	rol    esp,cl
   14000f7f0:	cli    
   14000f7f1:	xlat   BYTE PTR es:[rbx]
   14000f7f3:	(bad)  
   14000f7f4:	fisttp DWORD PTR [rbp-0x5]
   14000f7f7:	rex.B and al,0xe
   14000f7fa:	jne    0x14000f84d
   14000f7fc:	rex.X jl 0x14000f7fd
   14000f7ff:	leave  
   14000f800:	test   DWORD PTR [rsi],edx
   14000f802:	test   DWORD PTR [rax+0x76],ebp
   14000f805:	add    DWORD PTR [rdi],eax
   14000f807:	mov    esp,ebp
   14000f809:	rex.WRX (bad) 
   14000f80b:	jp     0x14000f7e6
   14000f80d:	data16 xor BYTE PTR [rcx],bh
   14000f810:	mov    eax,0x4c521a56
   14000f815:	jb     0x14000f7b5
   14000f817:	test   eax,0x38592a0b
   14000f81c:	xchg   esi,eax
   14000f81d:	sti    
   14000f81e:	mov    dl,0x3
   14000f820:	rex.RX xlat BYTE PTR ds:[rbx]
   14000f822:	lods   al,BYTE PTR ds:[rsi]
   14000f823:	lahf   
   14000f824:	add    BYTE PTR [rcx],bh
   14000f826:	(bad)  
   14000f827:	loopne 0x14000f803
   14000f829:	lea    ebp,[rdi-0x4]
   14000f82c:	jmp    0x14000f811
   14000f82e:	ret    0xd3e1
   14000f831:	mov    es,WORD PTR [rax]
   14000f833:	add    BYTE PTR [rax+0x3e],bh
   14000f836:	xor    DWORD PTR [rdx+0x73382fb3],0xffffffad
   14000f83d:	sub    ebx,DWORD PTR [rsi+rdx*4+0x41]
   14000f841:	sub    al,0xeb
   14000f843:	mov    gs,WORD PTR [rcx]
   14000f845:	push   rdx
   14000f846:	(bad)  
   14000f847:	jmp    0x13d7e271d
   14000f84c:	(bad)  
   14000f84d:	fstp   QWORD PTR [rdx]
   14000f84f:	jo     0x14000f89a
   14000f851:	(bad)  
   14000f852:	gs mov ebx,ss
   14000f855:	jle    0x14000f857
   14000f857:	test   BYTE PTR [rsi+0x7f],dh
   14000f85a:	(bad)  
   14000f85b:	sbb    edi,DWORD PTR [rdx+0x738020f]
   14000f861:	adc    eax,0xf5144fc7
   14000f866:	jb     0x14000f877
   14000f868:	rcr    BYTE PTR [rdi+0x439f20d6],1
   14000f86e:	push   rbp
   14000f86f:	xchg   ebx,eax
   14000f870:	(bad)  
   14000f871:	mov    ah,0x69
   14000f873:	xchg   DWORD PTR [rbp-0x7bd30d19],esi
   14000f879:	movabs al,ds:0x7ed6affad43ee0f4
   14000f882:	cmp    BYTE PTR [rax],ah
   14000f884:	cmp    BYTE PTR [rax+0x394c1cb],dh
   14000f88a:	jns    0x14000f89a
   14000f88c:	out    dx,al
   14000f88d:	je     0x14000f84f
   14000f88f:	pop    rcx
   14000f890:	add    DWORD PTR [rsi+rax*2+0x2fceadf0],esi
   14000f897:	loope  0x14000f88f
   14000f899:	leave  
   14000f89a:	imul   edx,DWORD PTR [rax-0x4d604a57],0x2c
   14000f8a1:	mov    ch,BYTE PTR [rcx-0x44a0101]
   14000f8a7:	jbe    0x14000f8ec
   14000f8a9:	lods   al,BYTE PTR ds:[rsi]
   14000f8aa:	(bad)  
   14000f8ab:	jg     0x14000f863
   14000f8ad:	std    
   14000f8ae:	movd   DWORD PTR [rdx+0x45],mm7
   14000f8b2:	hlt    
   14000f8b3:	pop    rdi
   14000f8b4:	es in  al,dx
   14000f8b6:	js     0x14000f8a7
   14000f8b8:	jmp    0x14000f8c0
   14000f8ba:	add    dh,bh
   14000f8bc:	(bad)  
   14000f8bd:	rcr    BYTE PTR [rbx],1
   14000f8bf:	lock sub eax,0x9ee1fe5f
   14000f8c5:	(bad)
   14000f8c8:	sbb    BYTE PTR [rsi+riz*2],cl
   14000f8cb:	push   rsi
   14000f8cc:	inc    ah
   14000f8ce:	or     BYTE PTR [rax-0x1f],ch
   14000f8d1:	loop   0x14000f8fc
   14000f8d3:	xor    DWORD PTR [rax-0x46],ebp
   14000f8d6:	sti    
   14000f8d7:	sub    al,0x5c
   14000f8d9:	xlat   BYTE PTR ds:[rbx]
   14000f8da:	mov    dh,0xe3
   14000f8dc:	cmp    DWORD PTR [rdx-0x75],ebp
   14000f8df:	(bad)  
   14000f8e0:	rex.WX sub rax,0xffffffff9380400d
   14000f8e6:	test   BYTE PTR [rcx],ah
   14000f8e8:	xor    esi,eax
   14000f8ea:	rex.XB cmp eax,DWORD PTR [r14]
   14000f8ed:	and    edi,DWORD PTR [rbp+0xe6cab89]
   14000f8f3:	mov    edx,0xcc25edae
   14000f8f8:	out    dx,eax
   14000f8f9:	add    BYTE PTR [rdx+0x3e35a76e],cl
   14000f900:	cmp    DWORD PTR [rcx],esi
   14000f902:	or     dh,al
   14000f904:	cmp    al,BYTE PTR [rax]
   14000f906:	push   rdi
   14000f907:	sbb    al,0xf5
   14000f909:	and    BYTE PTR [rip+0x334e1c6],dh        # 0x14335dad5
   14000f90f:	mov    edx,0x36e739c6
   14000f914:	lahf   
   14000f915:	mov    ebx,0xb49c1d76
   14000f91a:	cmc    
   14000f91b:	ss sbb eax,0xa023533f
   14000f921:	mov    BYTE PTR [rdi-0x54],dh
   14000f924:	xchg   esi,eax
   14000f925:	pop    rdx
   14000f926:	mov    ch,0xd9
   14000f929:	push   rdi
   14000f92a:	jo     0x14000f932
   14000f92c:	in     eax,dx
   14000f92d:	(bad)  
   14000f92e:	adc    DWORD PTR [rax-0xf4c7f7b],0x3
   14000f935:	and    BYTE PTR [rbx-0x783b8ae8],bh
   14000f93b:	jl     0x14000f96c
   14000f93d:	(bad)  
   14000f93e:	(bad)  
   14000f93f:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000f940:	sbb    eax,0xfdf90507
   14000f945:	(bad)  
   14000f946:	rex.B jl 0x14000f928
   14000f949:	stos   DWORD PTR es:[rdi],eax
   14000f94a:	xlat   BYTE PTR ds:[rbx]
   14000f94b:	in     eax,dx
   14000f94c:	(bad)  
   14000f94d:	(bad)  
   14000f94e:	jnp    0x14000f9a5
   14000f950:	sbb    ch,al
   14000f952:	xor    ebp,DWORD PTR [rax+0x33457bd4]
   14000f958:	(bad)  
   14000f959:	mov    esi,esi
   14000f95b:	or     cl,cl
   14000f95d:	out    0x6f,eax
   14000f95f:	and    r15,rcx
   14000f962:	movabs ds:0x3c4def80bfdb5b8d,al
   14000f96b:	vmwrite rdi,QWORD PTR [rbx-0x4c449ad5]
   14000f972:	push   0x2a
   14000f974:	mov    esi,0x7de1df77
   14000f979:	ja     0x14000f958
   14000f97b:	mov    ebp,0x70e050e3
   14000f980:	jmp    QWORD PTR [rax+0x50]
   14000f983:	jle    0x14000f981
   14000f985:	xchg   ecx,eax
   14000f986:	sbb    ebx,ebx
   14000f988:	(bad)  
   14000f989:	or     al,0x7c
   14000f98b:	and    al,BYTE PTR [rax+rsi*4-0x49c47115]
   14000f992:	rex.WRXB out dx,eax
   14000f994:	cmp    esi,DWORD PTR [rax]
   14000f996:	fild   QWORD PTR [rbx-0x16]
   14000f999:	repnz or esi,DWORD PTR [rax+0x5534187b]
   14000f9a0:	add    esp,0x97ee979e
   14000f9a6:	data16 mov cl,0x75
   14000f9a9:	sbb    eax,DWORD PTR [rdx-0x624be228]
   14000f9af:	lahf   
   14000f9b0:	(bad)  
   14000f9b1:	mov    cl,0x6c
   14000f9b3:	push   rbx
   14000f9b4:	or     ebx,esi
   14000f9b6:	jne    0x14000f97a
   14000f9b8:	in     eax,0x6b
   14000f9ba:	fiadd  WORD PTR [rbx]
   14000f9bc:	test   al,0x7
   14000f9be:	rex.WXB movabs r8,0xd85907255eba157c
   14000f9c8:	sub    dh,BYTE PTR [rbx]
   14000f9ca:	rcr    BYTE PTR [rbp-0x4d],1
   14000f9cd:	push   0x4c
   14000f9cf:	(bad)  
   14000f9d0:	sub    BYTE PTR [rbx-0x72],0x65
   14000f9d4:	or     BYTE PTR [rsi+rcx*2],0x2b
   14000f9d8:	add    dh,BYTE PTR [rax-0x6590480b]
   14000f9de:	jo     0x14000f96e
   14000f9e0:	scas   al,BYTE PTR es:[rdi]
   14000f9e1:	add    al,0xc8
   14000f9e3:	lods   eax,DWORD PTR ds:[rsi]
   14000f9e4:	fnstsw WORD PTR [rsi+rsi*1]
   14000f9e7:	or     DWORD PTR es:[rdi],ebx
   14000f9ea:	push   rsp
   14000f9eb:	rex.WXB retf 0x7eb0
   14000f9ef:	jle    0x14000f98a
   14000f9f1:	adc    al,BYTE PTR [rdx+0x61efb273]
   14000f9f7:	retf   0xa43d
   14000f9fa:	(bad)  
   14000f9fb:	cwde   
   14000f9fc:	jo     0x14000f9e4
   14000f9fe:	cld    
   14000f9ff:	sbb    eax,0x20f39d70
   14000fa04:	(bad)  
   14000fa05:	fst    QWORD PTR [rax+0x12803df]
   14000fa0b:	sahf   
   14000fa0c:	push   rsi
   14000fa0d:	movsxd ebx,edi
   14000fa0f:	je     0x14000f993
   14000fa11:	cld    
   14000fa12:	cmp    eax,0xfc86fee5
   14000fa17:	data16 (bad) 
   14000fa1a:	sub    dl,BYTE PTR [rcx-0x7bf9f85b]
   14000fa20:	fsub   DWORD PTR [rsi+0x64da43cb]
   14000fa26:	xchg   DWORD PTR [rcx+rbx*2-0x77],ebx
   14000fa2a:	xchg   esi,eax
   14000fa2b:	jmp    0x14000f9fb
   14000fa2d:	popf   
   14000fa2e:	call   0x12f824030
   14000fa33:	mov    ?,WORD PTR [rsi+rcx*1+0x31f89ddf]
   14000fa3a:	in     al,0xdd
   14000fa3c:	push   rcx
   14000fa3d:	fs popf 
   14000fa3f:	(bad)  
   14000fa40:	pop    rsp
   14000fa41:	pop    rsi
   14000fa42:	cmc    
   14000fa43:	addr32 (bad) 
   14000fa45:	add    bh,bl
   14000fa47:	mov    ebp,0xc187fef9
   14000fa4c:	mov    WORD PTR [rcx+0x6f],es
   14000fa4f:	lock movabs eax,ds:0xd40cbc2795f0fffb
   14000fa59:	movsxd ebx,DWORD PTR [rip+0x75f7bc76]        # 0x1b5f8b6d5
   14000fa5f:	add    DWORD PTR [rcx-0x20c04e5],0xde6f9df0
   14000fa69:	mov    bh,0x2f
   14000fa6b:	rex.RB hlt 
   14000fa6d:	movabs eax,ds:0xa41c9407a42c3d86
   14000fa76:	(bad)  
   14000fa77:	mov    esi,0x552bb6a
   14000fa7c:	shl    BYTE PTR [rax],cl
   14000fa7e:	movabs eax,ds:0x81b6246c9101c814
   14000fa87:	(bad)  
   14000fa88:	(bad)  
   14000fa89:	rcl    BYTE PTR [rsi-0x6c],0x12
   14000fa8d:	sub    bh,BYTE PTR [rax]
   14000fa8f:	mov    dl,0x64
   14000fa91:	adc    eax,0xd67e7292
   14000fa96:	js     0x14000fa9c
   14000fa98:	mov    ah,BYTE PTR [rdi]
   14000fa9a:	adc    BYTE PTR [rsi+0x26],al
   14000fa9d:	(bad)  
   14000fa9e:	mov    WORD PTR [rcx+0x21f8f01a],gs
   14000faa4:	add    BYTE PTR [rax],al
   14000faa6:	pop    rbp
   14000faa7:	rex.WRB
   14000faa8:	rex ja 0x14000fa96
   14000faab:	stc    
   14000faac:	fwait
   14000faad:	xlat   BYTE PTR ds:[rbx]
   14000faae:	fs rex.WRX ins BYTE PTR es:[rdi],dx
   14000fab1:	stos   BYTE PTR es:[rdi],al
   14000fab2:	sbb    DWORD PTR [rbx],eax
   14000fab4:	rcr    BYTE PTR [rax-0x20edf896],1
   14000faba:	lods   eax,DWORD PTR ds:[rsi]
   14000fabb:	(bad)  
   14000fabc:	neg    eax
   14000fabe:	pushf  
   14000fabf:	fld    QWORD PTR [rbx+0x600fddb3]
   14000fac5:	mov    al,cl
   14000fac7:	sbb    DWORD PTR [rbx],esi
   14000fac9:	mov    ebx,0x811b19d0
   14000face:	rex.R cli 
   14000fad0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000fad1:	(bad)  
   14000fad2:	mov    esi,0x8d19e01e
   14000fad7:	repnz push rbx
   14000fad9:	push   rdi
   14000fada:	lahf   
   14000fadb:	lahf   
   14000fadc:	xchg   edi,eax
   14000fadd:	adc    bh,bl
   14000fadf:	mov    esi,0xb92cfb1a
   14000fae4:	(bad)  
   14000fae5:	stos   DWORD PTR es:[rdi],eax
   14000fae6:	movabs eax,ds:0x15b00fa00f600caf
   14000faef:	(bad)  
   14000faf0:	not    DWORD PTR [rbp+0x44825865]
   14000faf6:	mov    dl,0x4
   14000faf8:	stc    
   14000faf9:	fild   DWORD PTR [rax-0x2f]
   14000fafc:	shr    ebp,0xdd
   14000faff:	lahf   
   14000fb00:	(bad)
   14000fb03:	pop    rdi
   14000fb04:	mov    BYTE PTR [rbx+rdi*1-0x7f1128fe],ch
   14000fb0b:	xor    al,BYTE PTR [rcx+0x7e]
   14000fb0e:	retf   
   14000fb0f:	push   0xfffffffffccf77bb
   14000fb14:	hlt    
   14000fb15:	pxor   mm3,mm4
   14000fb18:	jno    0x14000faa2
   14000fb1a:	add    ebp,edi
   14000fb1c:	sbb    eax,0x7cffe594
   14000fb21:	adc    al,0x6
   14000fb23:	stc    
   14000fb24:	mov    cl,0x2
   14000fb26:	(bad)  
   14000fb27:	js     0x14000fb48
   14000fb29:	cld    
   14000fb2a:	mov    edi,0x7d8ee37f
   14000fb2f:	adc    DWORD PTR [rdx+0x4a],0xffffffee
   14000fb33:	(bad)  
   14000fb34:	lock xor edx,DWORD PTR [rip+0xffffffffd18919db]        # 0x1118a1516
   14000fb3b:	scas   al,BYTE PTR es:[rdi]
   14000fb3c:	add    bl,bl
   14000fb3e:	(bad)  
   14000fb3f:	sub    al,0x9a
   14000fb41:	adc    DWORD PTR [rbp+0x3b],ecx
   14000fb44:	mov    edx,ebx
   14000fb46:	and    bh,dh
   14000fb48:	nop
   14000fb49:	xchg   DWORD PTR [rax+0x62eed9e1],ebx
   14000fb4f:	mov    ecx,0x9549b204
   14000fb54:	sbb    eax,0x55031220
   14000fb59:	pop    rbx
   14000fb5a:	xchg   ebp,eax
   14000fb5b:	mov    DWORD PTR [rcx-0x55e2f547],edx
   14000fb61:	rex.W
   14000fb62:	rex.X cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000fb64:	(bad)  
   14000fb65:	add    dh,ah
   14000fb67:	mov    ecx,0xbb58e8f9
   14000fb6c:	(bad)  [rcx+0x17]
   14000fb6f:	(bad)  
   14000fb70:	pop    rsp
   14000fb71:	mov    al,0xf1
   14000fb73:	push   rdi
   14000fb74:	(bad)  
   14000fb75:	cli    
   14000fb76:	cwde   
   14000fb77:	add    DWORD PTR [rdx+0x40022b4e],0xffffffc0
   14000fb7e:	mov    bl,0x41
   14000fb80:	mov    ?,WORD PTR [rsi]
   14000fb82:	ins    BYTE PTR es:[rdi],dx
   14000fb83:	pop    rbp
   14000fb84:	mov    ebx,0xb5d5601a
   14000fb89:	push   rsp
   14000fb8a:	mov    esp,0x53fc8d62
   14000fb8f:	sbb    eax,0x89db9d6c
   14000fb94:	mov    esi,DWORD PTR [rbx-0x64b65ea5]
   14000fb9a:	sub    dl,cl
   14000fb9c:	(bad)  
   14000fb9d:	(bad)  
   14000fb9e:	(bad)  
   14000fb9f:	cmp    al,0x8
   14000fba1:	(bad)  
   14000fba2:	adc    ebp,edx
   14000fba4:	rex.RB cmp eax,0xe81ac03c
   14000fbaa:	sar    DWORD PTR [rdi],cl
   14000fbac:	add    al,0xf8
   14000fbae:	mov    ah,0x45
   14000fbb0:	mov    bh,0x17
   14000fbb2:	or     eax,eax
   14000fbb4:	mov    edx,0x7bf21af4
   14000fbb9:	add    BYTE PTR [rcx],ah
   14000fbbb:	cmp    BYTE PTR [rdx+0x5e],0x2c
   14000fbbf:	cld    
   14000fbc0:	sbb    al,0xc0
   14000fbc2:	xchg   DWORD PTR [r10],esi
   14000fbc5:	mov    BYTE PTR [rsi],ch
   14000fbc7:	(bad)  
   14000fbc8:	pop    rcx
   14000fbc9:	add    DWORD PTR [rcx+rdi*4-0x18],esp
   14000fbcd:	cmc    
   14000fbce:	popf   
   14000fbcf:	(bad)  
   14000fbd0:	push   rax
   14000fbd1:	mov    ah,0x71
   14000fbd3:	ja     0x14000fbbc
   14000fbd5:	rex.RB clc 
   14000fbd7:	out    0xe4,al
   14000fbd9:	mov    edx,DWORD PTR [rcx-0x48ad4589]
   14000fbdf:	(bad)  
   14000fbe0:	iret   
   14000fbe1:	int    0xe1
   14000fbe3:	add    ebp,eax
   14000fbe5:	(bad)  
   14000fbe7:	sti    
   14000fbe8:	xlat   BYTE PTR ds:[rbx]
   14000fbe9:	(bad)  
   14000fbea:	jl     0x14000fc04
   14000fbec:	cmp    DWORD PTR [rcx-0x1383e7c1],0x7fd7acd1
   14000fbf6:	mov    edx,0xfdef83c3
   14000fbfb:	stc    
   14000fbfc:	fld    QWORD PTR [rax]
   14000fbfe:	mov    esi,0xfd73f34
   14000fc03:	cmp    ebx,DWORD PTR [rsi]
   14000fc05:	cmp    bh,BYTE PTR [rax-0x28]
   14000fc08:	mul    BYTE PTR [rdi-0x411cfbc3]
   14000fc0e:	and    edi,DWORD PTR [rbp+0x37]
   14000fc11:	loop   0x14000fba4
   14000fc13:	js     0x14000fc18
   14000fc15:	or     BYTE PTR [rbx+rsi*8+0x6],bl
   14000fc19:	rex.R mov ebx,0x9c14d981
   14000fc1f:	rex.RX or al,0x2a
   14000fc22:	xchg   esi,eax
   14000fc23:	rex.WXB fnstenv [r8]
   14000fc26:	pop    rdx
   14000fc27:	and    BYTE PTR [rbp+0x54],al
   14000fc2a:	cmp    bh,BYTE PTR [rdi]
   14000fc2c:	adc    BYTE PTR [rbx],ah
   14000fc2e:	mov    ah,ch
   14000fc30:	js     0x14000fbd2
   14000fc32:	sub    bl,BYTE PTR [rbp-0x63211b67]
   14000fc38:	mov    BYTE PTR [rsi],cl
   14000fc3a:	movabs ds:0x14b31f0685956ab,eax
   14000fc43:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000fc44:	or     eax,0xb7eb3801
   14000fc49:	outs   dx,BYTE PTR ds:[rsi]
   14000fc4a:	jb     0x14000fc1a
   14000fc4c:	rcl    ebp,1
   14000fc4e:	add    BYTE PTR [rcx-0x39b964cb],bh
   14000fc54:	lods   eax,DWORD PTR ds:[rsi]
   14000fc55:	xlat   BYTE PTR ds:[rbx]
   14000fc56:	mov    bl,0x53
   14000fc58:	cmp    eax,0xa30b39c9
   14000fc5d:	add    al,0x56
   14000fc5f:	sar    DWORD PTR [rsi+0x3c],cl
   14000fc62:	xor    edi,edi
   14000fc64:	(bad)  
   14000fc65:	(bad)  
   14000fc66:	push   rbp
   14000fc67:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000fc68:	push   rax
   14000fc69:	jrcxz  0x14000fca4
   14000fc6b:	(bad)  
   14000fc6c:	sti    
   14000fc6d:	rex jbe 0x14000fcae
   14000fc70:	(bad)  
   14000fc71:	leave  
   14000fc72:	cmp    eax,0x301e8025
   14000fc77:	js     0x14000fc91
   14000fc79:	sbb    BYTE PTR [rsp+rdx*1],bl
   14000fc7c:	in     al,0xb7
   14000fc7e:	repnz (bad) 
   14000fc81:	jle    0x14000fc08
   14000fc83:	cld    
   14000fc84:	(bad)  
   14000fc85:	stc    
   14000fc86:	(bad)  
   14000fc87:	mov    edx,0x5f40cccf
   14000fc8c:	stos   DWORD PTR es:[rdi],eax
   14000fc8d:	mov    eax,0xf0149084
   14000fc92:	and    al,0xb0
   14000fc94:	sub    eax,eax
   14000fc96:	pop    rcx
   14000fc97:	add    edx,ecx
   14000fc99:	sbb    al,0x38
   14000fc9b:	mov    bl,0x28
   14000fc9d:	mov    edi,0x3f6a1e36
   14000fca2:	(bad)  
   14000fca3:	pop    rdi
   14000fca4:	pop    rsi
   14000fca5:	std    
   14000fca6:	xor    esp,DWORD PTR [rax+0x70f3148e]
   14000fcac:	jns    0x14000fc6c
   14000fcae:	shr    BYTE PTR [rip+0xffffffffbcb9e73d],0xed        # 0xfcbae3f2
   14000fcb5:	mov    ebx,0x3803ecf7
   14000fcba:	or     al,0x6
   14000fcbc:	in     eax,0x8d
   14000fcbe:	(bad)  
   14000fcbf:	(bad)  
   14000fcc0:	fdivr  DWORD PTR [rsi]
   14000fcc2:	xor    cx,0x65cf
   14000fcc7:	mov    edi,0x72ddb70c
   14000fccc:	out    dx,eax
   14000fccd:	and    DWORD PTR [rbp-0x58],0x8d1911fb
   14000fcd4:	stc    
   14000fcd5:	(bad)  
   14000fcd6:	mov    ecx,0x618afd5f
   14000fcdb:	push   rdx
   14000fcdc:	rex.XB push r11
   14000fcde:	add    eax,0xce07f448
   14000fce3:	or     BYTE PTR [rcx-0x44],bh
   14000fce6:	xchg   esi,eax
   14000fce7:	rex (bad) 
   14000fce9:	(bad)  
   14000fcea:	(bad)  
   14000fceb:	(bad)  
   14000fcec:	sub    al,0xfd
   14000fcee:	xlat   BYTE PTR ds:[rbx]
   14000fcef:	(bad)
   14000fcf2:	jnp    0x14000fca0
   14000fcf4:	adc    cl,BYTE PTR [rsi]
   14000fcf6:	rex.RXB (bad) 
   14000fcf8:	cmp    esi,DWORD PTR [rax]
   14000fcfa:	rcr    BYTE PTR [rbp+0x7d],1
   14000fcfd:	(bad)  
   14000fcfe:	sub    BYTE PTR [rax+0x5ccfc01c],cl
   14000fd04:	loop   0x14000fced
   14000fd06:	sub    eax,0x10da709
   14000fd0b:	enter  0x7a32,0x2
   14000fd0f:	adc    DWORD PTR [rsi],esp
   14000fd11:	(bad)  
   14000fd12:	ins    BYTE PTR es:[rdi],dx
   14000fd13:	pop    rsp
   14000fd14:	cmp    ebx,esi
   14000fd16:	cs pop rsp
   14000fd18:	outs   dx,BYTE PTR ds:[rsi]
   14000fd19:	test   eax,0x596a2694
   14000fd1e:	(bad)  
   14000fd1f:	fbstp  TBYTE PTR [rcx]
   14000fd21:	(bad)  
   14000fd22:	sub    DWORD PTR [rbx],0xffffff8b
   14000fd25:	(bad)  
   14000fd26:	(bad)  
   14000fd27:	jae    0x14000fd0c
   14000fd29:	jo     0x14000fd11
   14000fd2b:	in     al,dx
   14000fd2c:	(bad)  
   14000fd2d:	nop
   14000fd2e:	ja     0x14000fd67
   14000fd30:	rex.X test BYTE PTR [rcx-0x5060594c],dil
   14000fd37:	cmp    BYTE PTR [rdi+0x79],bh
   14000fd3a:	pop    rax
   14000fd3b:	mov    ebx,0xd1a8cef4
   14000fd40:	outs   dx,DWORD PTR ds:[rsi]
   14000fd41:	push   rax
   14000fd42:	mov    ecx,0x3eccd2f9
   14000fd47:	mul    BYTE PTR [rax-0x6e01ce87]
   14000fd4d:	not    DWORD PTR [rbp+0x40099fc5]
   14000fd53:	(bad)  
   14000fd54:	and    ah,BYTE PTR [rdi]
   14000fd56:	jle    0x14000fd54
   14000fd58:	lods   al,BYTE PTR ds:[rsi]
   14000fd59:	sub    eax,0x16f23b4d
   14000fd5e:	div    BYTE PTR [rdi-0x51307961]
   14000fd64:	jns    0x14000fda3
   14000fd66:	mov    dl,0x56
   14000fd68:	(bad)  
   14000fd69:	pop    rcx
   14000fd6a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000fd6b:	sub    edx,DWORD PTR [rdx-0x7f]
   14000fd6e:	cmp    DWORD PTR [rsi-0x48fff98],0x1fb33dd
   14000fd78:	rex.RX pop rcx
   14000fd7a:	cli    
   14000fd7b:	(bad)  
   14000fd7c:	outs   dx,DWORD PTR ds:[rsi]
   14000fd7d:	jg     0x14000fd56
   14000fd7f:	rex.WRXB out dx,eax
   14000fd81:	jg     0x14000fdc7
   14000fd83:	(bad)  
   14000fd84:	div    BYTE PTR [rcx-0x3ef460f3]
   14000fd8a:	iret   
   14000fd8b:	jmp    rax
   14000fd8d:	sti    
   14000fd8e:	(bad)  [rdi+0x51a90fbd]
   14000fd94:	jle    0x14000fd97
   14000fd96:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000fd97:	mov    bh,0x14
   14000fd99:	ficomp WORD PTR [rdx]
   14000fd9b:	rex.X (bad) 
   14000fd9d:	rex.W js 0x14000fd90
   14000fda0:	(bad)  
   14000fda1:	xlat   BYTE PTR ds:[rbx]
   14000fda2:	paddusw mm2,mm0
   14000fda5:	pop    rbp
   14000fda6:	rex.WRX pop rsp
   14000fda8:	add    BYTE PTR [rax],0x1a
   14000fdab:	xor    DWORD PTR [rdx],eax
   14000fdad:	jb     0x14000fdb0
   14000fdaf:	test   eax,0x67b50b34
   14000fdb4:	(bad)  
   14000fdb5:	call   0xee264a06
   14000fdba:	ret    0xed82
   14000fdbd:	push   rsi
   14000fdbe:	in     eax,dx
   14000fdbf:	icebp  
   14000fdc0:	icebp  
   14000fdc1:	scas   al,BYTE PTR es:[rdi]
   14000fdc2:	mov    esi,0x7ea753fa
   14000fdc7:	cmc    
   14000fdc8:	scas   eax,DWORD PTR es:[rdi]
   14000fdc9:	mov    cs,WORD PTR [rcx]
   14000fdcb:	xchg   edi,eax
   14000fdcc:	rex.WRXB sbb r8,QWORD PTR [r10]
   14000fdcf:	add    al,ah
   14000fdd1:	sub    al,BYTE PTR [rdx]
   14000fdd3:	(bad)  
   14000fdd4:	fucom  st(6)
   14000fdd6:	(bad)  
   14000fdd7:	xchg   ebx,eax
   14000fdd8:	jo     0x14000fe08
   14000fdda:	mov    edx,0x2790ac61
   14000fddf:	add    BYTE PTR [rcx+rbp*4-0x4188d871],dh
   14000fde6:	(bad)  
   14000fde7:	(bad)  
   14000fde8:	rex.WX lea rax,[rbx]
   14000fdeb:	(bad)  
   14000fdec:	mov    edi,cs
   14000fdee:	sbb    eax,0xf58c4c0
   14000fdf3:	push   rdx
   14000fdf4:	rex.WXB
   14000fdf5:	lea    edi,[r13+0x31]
   14000fdf9:	rol    BYTE PTR [rdi+0x75],1
   14000fdfc:	(bad)  
   14000fdfd:	xor    BYTE PTR [rip+0x356b0ff4],cl        # 0x1756c0df7
   14000fe03:	lahf   
   14000fe04:	rex.B (bad) 
   14000fe06:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000fe07:	xor    esi,DWORD PTR [rdx+0x7d]
   14000fe0a:	retf   
   14000fe0b:	in     al,dx
   14000fe0c:	repz fisub DWORD PTR [rdx-0x207a7425]
   14000fe13:	add    edx,esi
   14000fe15:	cmp    al,0x8e
   14000fe17:	cwde   
   14000fe18:	xor    al,0x9f
   14000fe1a:	(bad)  
   14000fe1b:	add    edx,DWORD PTR [rbx+0xe]
   14000fe1e:	push   0x67
   14000fe20:	rex stos DWORD PTR es:[rdi],eax
   14000fe22:	test   DWORD PTR [rcx-0x58071a0a],ebx
   14000fe28:	(bad)  
   14000fe29:	fist   DWORD PTR [rax-0x4437c54b]
   14000fe2f:	movabs ds:0xc02e0391bcf3c8,eax
   14000fe38:	out    dx,al
   14000fe39:	mov    edx,0x3041d77d
   14000fe3e:	movabs ds:0xd8fa43323ecfcb2c,eax
   14000fe47:	xchg   BYTE PTR [rdi],al
   14000fe49:	push   rsp
   14000fe4b:	out    0x7b,eax
   14000fe4d:	add    BYTE PTR [rsi+0x1e],ch
   14000fe50:	hlt    
   14000fe51:	(bad)  
   14000fe52:	mov    esp,0x52ae7a67
   14000fe57:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000fe58:	xchg   esi,eax
   14000fe59:	and    eax,0x5336340e
   14000fe5e:	loop   0x14000fdf1
   14000fe60:	sbb    dl,dh
   14000fe62:	pop    rsp
   14000fe63:	movsxd ebx,DWORD PTR [rdi+0x3c]
   14000fe66:	mov    bh,0x61
   14000fe68:	(bad)  
   14000fe69:	xor    BYTE PTR [rcx+0x5048d59e],dh
   14000fe6f:	xchg   ebx,eax
   14000fe70:	cmp    cl,BYTE PTR [rax+rbp*2+0xea91ce4]
   14000fe77:	cmp    DWORD PTR [rdi],edx
   14000fe79:	mov    DWORD PTR [rsi],eax
   14000fe7b:	rex.B stos BYTE PTR es:[rdi],al
   14000fe7d:	add    eax,ebp
   14000fe7f:	pop    rbx
   14000fe80:	stos   DWORD PTR es:[rdi],eax
   14000fe81:	jnp    0x14000fe53
   14000fe83:	in     eax,0x79
   14000fe85:	(bad)  
   14000fe86:	sbb    eax,0xaa42eb1b
   14000fe8b:	(bad)  
   14000fe8c:	sahf   
   14000fe8d:	mov    bh,0xc4
   14000fe8f:	scas   eax,DWORD PTR es:[rdi]
   14000fe90:	pop    rdx
   14000fe91:	adc    al,0x4e
   14000fe93:	sbb    eax,DWORD PTR [rdx]
   14000fe95:	test   BYTE PTR [rdi-0x7e],spl
   14000fe99:	sbb    al,0xad
   14000fe9b:	fidiv  DWORD PTR [rdx]
   14000fe9d:	cmp    DWORD PTR [rsi+0x4e],ecx
   14000fea0:	or     esi,DWORD PTR [rdx+rdx*4]
   14000fea3:	(bad)  
   14000fea4:	cld    
   14000fea5:	and    BYTE PTR [rax],ah
   14000fea7:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000fea8:	and    BYTE PTR [rdi],0xb6
   14000feab:	mov    esi,0x899a5181
   14000feb0:	adc    al,0x34
   14000feb2:	out    0x12,eax
   14000feb4:	pop    rbx
   14000feb5:	(bad)  [rdi+0x0]
   14000feb8:	mov    ah,0x5
   14000feba:	cmc    
   14000febb:	sub    BYTE PTR [rdi],bh
   14000febd:	(bad)  
   14000febe:	mov    BYTE PTR [rdi+0x4e],bl
   14000fec1:	push   rdi
   14000fec2:	cmp    ebp,edi
   14000fec4:	(bad)  
   14000fec5:	rex.WRX or al,0x7f
   14000fec8:	jle    0x14000fe6a
   14000feca:	jp     0x14000ff4a
   14000fecc:	adc    ah,ch
   14000fece:	(bad)  
   14000fecf:	and    BYTE PTR [rdx+0x112bcc0],dl
   14000fed5:	xchg   ebx,eax
   14000fed6:	or     al,0x40
   14000fed8:	(bad)  
   14000fed9:	test   eax,0xd2760c31
   14000fede:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000fedf:	xchg   edi,eax
   14000fee0:	mov    esi,DWORD PTR [rsi+0x756bf1d4]
   14000fee6:	shr    DWORD PTR [rdi-0x63],1
   14000fee9:	sbb    DWORD PTR [rbx],0x27
   14000feec:	fild   WORD PTR [rsi]
   14000feee:	outs   dx,BYTE PTR ds:[rsi]
   14000feef:	rex.WRXB shl BYTE PTR [r13+0x46],0xe1
   14000fef4:	repnz add dl,BYTE PTR [rbp-0x2e]
   14000fef8:	ja     0x14000fef7
   14000fefa:	div    DWORD PTR [rcx]
   14000fefc:	sub    DWORD PTR [rdi-0x41],0x1fb6d
   14000ff03:	movabs eax,ds:0x37c1c4efdb257ef4
   14000ff0c:	retf   
   14000ff0d:	sbb    DWORD PTR [r14],ebx
   14000ff10:	mov    edx,0x32acdf67
   14000ff15:	(bad)  
   14000ff16:	stos   BYTE PTR es:[rdi],al
   14000ff17:	ins    BYTE PTR es:[rdi],dx
   14000ff18:	pop    rax
   14000ff19:	cld    
   14000ff1a:	scas   eax,DWORD PTR es:[rdi]
   14000ff1b:	add    DWORD PTR [rsp+rdi*8-0x79d2f0cb],edx
   14000ff22:	xor    DWORD PTR [rax+rdi*4],eax
   14000ff25:	and    bh,dh
   14000ff27:	(bad)  
   14000ff28:	cmp    eax,DWORD PTR [rax-0x486489e7]
   14000ff2e:	rex.WRX or QWORD PTR [rdx-0x24],r8
   14000ff32:	leave  
   14000ff33:	(bad)  
   14000ff34:	test   al,0x6
   14000ff36:	push   rbp
   14000ff37:	mov    dh,0x5
   14000ff39:	add    BYTE PTR [rcx],dh
   14000ff3b:	enter  0x6a48,0x4
   14000ff3f:	enter  0x6645,0x84
   14000ff43:	add    BYTE PTR fs:[rbx],ah
   14000ff46:	stos   DWORD PTR es:[rdi],eax
   14000ff47:	es rex.RXB xchg r13d,eax
   14000ff4a:	cli    
   14000ff4b:	pop    rsp
   14000ff4c:	mov    ecx,0x22c28e4
   14000ff51:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000ff52:	add    eax,0xb7eb3801
   14000ff57:	ds ror esi,1
   14000ff5a:	pushf  
   14000ff5b:	mov    ebx,0x4dc8cb38
   14000ff60:	scas   al,BYTE PTR es:[rdi]
   14000ff61:	out    dx,al
   14000ff62:	je     0x14000ff65
   14000ff64:	and    bh,dl
   14000ff66:	mov    al,0x5f
   14000ff68:	jne    0x14000ff67
   14000ff6a:	jrcxz  0x14000ff3e
   14000ff6c:	div    BYTE PTR [rdi-0x3849b990]
   14000ff72:	mov    ah,0x25
   14000ff74:	adc    BYTE PTR [rax],cl
   14000ff76:	out    0xf5,eax
   14000ff78:	mov    edi,0x62b62a07
   14000ff7d:	pop    r9
   14000ff7f:	(bad)  
   14000ff80:	jg     0x14000ffca
   14000ff82:	pop    rsp
   14000ff83:	jge    0x14000ffe3
   14000ff85:	rex.XB jl 0x14000ff53
   14000ff88:	pop    rcx
   14000ff89:	shl    edi,1
   14000ff8b:	(bad)  
   14000ff8c:	sti    
   14000ff8d:	sti    
   14000ff8e:	add    r10b,al
   14000ff91:	sub    BYTE PTR [rdi],bh
   14000ff93:	test   BYTE PTR [rax+rbx*2-0x4bed2a36],0x83
   14000ff9b:	push   0x1ae59c67
   14000ffa0:	mov    esi,0xc8a8059
   14000ffa5:	(bad)  
   14000ffa6:	xchg   edx,eax
   14000ffa7:	jbe    0x140010006
   14000ffa9:	(bad)  
   14000ffaa:	lods   al,BYTE PTR ds:[rsi]
   14000ffab:	cli    
   14000ffac:	rex.WRB clc 
   14000ffae:	(bad)  
   14000ffaf:	add    al,0xb2
   14000ffb1:	(bad)  
   14000ffb2:	sub    BYTE PTR [rdx-0x7fa5d4aa],dh
   14000ffb8:	ins    DWORD PTR es:[rdi],dx
   14000ffb9:	jp     0x14000ffe8
   14000ffbb:	or     BYTE PTR [rax+rax*1],0x1e
   14000ffbf:	pushf  
   14000ffc0:	sbb    esp,ecx
   14000ffc2:	(bad)  
   14000ffc3:	cdq    
   14000ffc4:	mov    esp,0xfedddff7
   14000ffc9:	scas   al,BYTE PTR es:[rdi]
   14000ffca:	xchg   ebp,eax
   14000ffcb:	rcr    BYTE PTR [rdi-0x748f7ed],0x32
   14000ffd2:	loopne 0x14000ff82
   14000ffd4:	cmp    ebx,DWORD PTR [rdi]
   14000ffd6:	mov    ah,BYTE PTR [rbx-0x66]
   14000ffd9:	xor    ah,BYTE PTR [rsi-0x5]
   14000ffdc:	pop    rsp
   14000ffdd:	movabs al,ds:0xf858251879dfa7bb
   14000ffe6:	xor    eax,0x9239ed75
   14000ffeb:	pushf  
   14000ffec:	(bad)  
   14000ffed:	and    BYTE PTR [rcx-0x692765fc],dl
   14000fff3:	(bad)  
   14000fff4:	rex.RX ret 
   14000fff6:	lods   al,BYTE PTR ds:[rsi]
   14000fff7:	jle    0x140010028
   14000fff9:	imul   ecx,DWORD PTR [rax+0x22],0xffffff84
   14000fffd:	(bad)  
   14000fffe:	stos   BYTE PTR es:[rdi],al
   14000ffff:	in     al,0x24
   140010001:	mov    bl,0x2b
   140010003:	(bad)  
   140010004:	cmp    esi,DWORD PTR [rbp-0x544d939]
   14001000a:	loopne 0x14001006f
   14001000c:	or     cl,BYTE PTR [rax]
   14001000e:	cmp    ch,BYTE PTR [rip+0xffffffffbb9e4008]        # 0xfb9f401c
   140010014:	rex.WXB xor rsi,QWORD PTR [r8+0x7b]
   140010018:	jrcxz  0x14000ffb3
   14001001a:	jmp    0x140010072
   14001001c:	in     eax,0x8e
   14001001e:	popf   
   14001001f:	adc    al,0x50
   140010021:	and    BYTE PTR [rsp+0x1d],ah
   140010025:	push   rbp
   140010026:	cs sub al,0x6e
   140010029:	(bad)  
   14001002a:	out    0xfc,al
   14001002c:	jle    0x14001009f
   14001002e:	xchg   edi,eax
   14001002f:	push   0xffffffff9986e034
   140010034:	sti    
   140010035:	(bad)  
   140010036:	in     eax,0xd7
   140010038:	rex.X
   140010039:	rex.WRB out dx,eax
   14001003b:	div    DWORD PTR [rbx-0x140e2ab]
   140010041:	ins    BYTE PTR es:[rdi],dx
   140010042:	gs icebp 
   140010044:	mul    DWORD PTR [rbp-0x6ba40de]
   14001004a:	jno    0x140010000
   14001004c:	mul    BYTE PTR [rbx+0x597ea0f4]
   140010052:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010053:	stc    
   140010054:	push   0x5a
   140010056:	(bad)  
   140010057:	rex.WXB stos BYTE PTR es:[rdi],al
   140010059:	(bad)  
   14001005a:	enter  0x7039,0xde
   14001005e:	add    DWORD PTR [rdi+0x2d],esp
   140010061:	jo     0x14001000e
   140010063:	lea    esi,[rdx+0x4e3701b5]
   140010069:	cld    
   14001006a:	(bad)  
   14001006b:	cli    
   14001006c:	popf   
   14001006d:	mov    ch,0xc8
   14001006f:	mov    edx,0xaddac863
   140010074:	cmp    dh,ch
   140010076:	rex.WRX shr BYTE PTR [rax-0x19047107],0x67
   14001007e:	ror    ah,0xa5
   140010081:	neg    edi
   140010083:	jp     0x1400100c9
   140010085:	(bad)  
   140010086:	div    DWORD PTR [rcx+0x7330770f]
   14001008c:	jg     0x140010089
   14001008e:	mov    ebp,0x7e8d66bb
   140010093:	add    ebx,DWORD PTR [rax]
   140010095:	test   BYTE PTR es:[rip+0xffffffff8f770487],cl        # 0xcf780523
   14001009c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001009d:	cmp    esp,eax
   14001009f:	jp     0x140010120
   1400100a1:	int    0x3
   1400100a3:	es adc eax,0x86250000
   1400100a9:	rex (bad) [rbp-0x6e]
   1400100ad:	add    cl,BYTE PTR [rcx+0xabcc015]
   1400100b3:	xor    eax,0x11fea431
   1400100b8:	(bad)  
   1400100b9:	fisub  DWORD PTR [rbx+0x9256da3]
   1400100bf:	rex.WRXB pop r12
   1400100c1:	(bad)  
   1400100c2:	iret   
   1400100c3:	imul   eax,edx,0x32004169
   1400100c9:	test   BYTE PTR [rdi],ah
   1400100cb:	ret    
   1400100cc:	cmp    DWORD PTR [rdx+0x3d],ebx
   1400100cf:	mov    ch,0x7a
   1400100d1:	sbb    al,0x20
   1400100d3:	push   rax
   1400100d4:	rex.WRX jno 0x1400100a7
   1400100d7:	mov    dh,0x14
   1400100d9:	pavgb  mm7,QWORD PTR [rdx+riz*8-0x7699ad79]
   1400100e1:	add    DWORD PTR [rax+0x61ecab43],edx
   1400100e7:	push   0x7c
   1400100e9:	(bad)  
   1400100ea:	stos   BYTE PTR es:[rdi],al
   1400100eb:	loop   0x14001010b
   1400100ed:	and    eax,0xdd5403c0
   1400100f2:	jnp    0x14001009a
   1400100f4:	and    eax,0xe71bd7bc
   1400100f9:	test   DWORD PTR [rcx-0x50],0xf8fa058f
   140010100:	sub    dl,al
   140010102:	addr32 ds push rsp
   140010105:	icebp  
   140010106:	(bad)  
   140010107:	sahf   
   140010108:	movsxd esp,DWORD PTR [rdi+0x17]
   14001010b:	jb     0x140010146
   14001010d:	cwde   
   14001010e:	pop    rdx
   14001010f:	(bad)  
   140010110:	sub    al,BYTE PTR [rax-0x63]
   140010113:	add    bl,BYTE PTR [rax]
   140010115:	jmp    0x1b1ac5c9a
   14001011a:	sar    eax,cl
   14001011c:	jg     0x1400100de
   14001011e:	loope  0x1400100b1
   140010120:	rex.WRB enter 0xa33a,0x40
   140010125:	push   rcx
   140010126:	rex.R (bad) 
   140010128:	lahf   
   140010129:	rex.X jae 0x1400101a7
   14001012c:	(bad)  
   14001012d:	cmp    eax,0x1830efb
   140010132:	out    dx,eax
   140010133:	std    
   140010134:	ins    DWORD PTR es:[rdi],dx
   140010135:	(bad)  
   140010136:	jns    0x140010170
   140010138:	(bad)  
   140010139:	push   rdi
   14001013a:	lock loopne 0x1400100dc
   14001013d:	inc    dl
   14001013f:	add    al,al
   140010141:	frstor [rbp-0x17]
   140010144:	ret    
   140010145:	in     al,dx
   140010146:	(bad)  
   140010147:	push   rax
   140010148:	es sbb al,al
   14001014b:	add    bl,BYTE PTR [rax+0xe]
   14001014e:	xor    ah,BYTE PTR [rsi+rax*4-0x5a31253f]
   140010155:	mov    dh,0xe3
   140010157:	std    
   140010158:	push   rbx
   140010159:	lahf   
   14001015a:	lahf   
   14001015b:	(bad)  
   14001015c:	add    eax,0xa487a058
   140010161:	fisttp DWORD PTR [rcx+0x68771064]
   140010167:	je     0x14001010a
   140010169:	test   eax,0x896ad41a
   14001016e:	push   rcx
   14001016f:	mov    ecx,edi
   140010171:	lods   al,BYTE PTR ds:[rsi]
   140010172:	test   eax,0x2d8fd76d
   140010177:	jrcxz  0x1400101a0
   140010179:	xor    al,0xde
   14001017b:	jmp    0xf2cb01b4
   140010180:	rex.WXB pushf 
   140010182:	sbb    DWORD PTR [rbx+0x16323758],0x23
   140010189:	or     WORD PTR [rax-0x6b],bx
   14001018d:	sbb    eax,0x6f9da5c4
   140010192:	add    edx,DWORD PTR [rax+0x65069fc]
   140010198:	add    dh,BYTE PTR [rax-0x62]
   14001019b:	mov    edi,0xa0b6c80d
   1400101a0:	rex.WX
   1400101a1:	lock push rcx
   1400101a3:	icebp  
   1400101a4:	mov    edi,0xf3f2bfbf
   1400101a9:	pop    rbx
   1400101aa:	rex.RB lahf 
   1400101ac:	mov    dl,0xf
   1400101ae:	or     al,0x12
   1400101b0:	mov    edi,DWORD PTR [rdi+0x589f2097]
   1400101b6:	shl    DWORD PTR [rdi-0x3c1d52f1],1
   1400101bc:	push   rbp
   1400101bd:	cmp    bl,BYTE PTR [rcx]
   1400101bf:	rex.R fist WORD PTR [rdi-0x6bfd2fc8]
   1400101c6:	(bad)  
   1400101c7:	loopne 0x140010205
   1400101c9:	(bad)  
   1400101ca:	mov    ch,0xba
   1400101cc:	clc    
   1400101cd:	(bad)  
   1400101ce:	enter  0xd875,0x3f
   1400101d2:	jp     0x1400101ea
   1400101d4:	mov    dl,0xce
   1400101d6:	sub    BYTE PTR [rbx+rbp*4+0x5],bl
   1400101da:	out    0xdc,eax
   1400101dc:	add    ch,BYTE PTR [rdx+0x498248cd]
   1400101e2:	add    BYTE PTR [rax],ah
   1400101e4:	add    BYTE PTR [rdi],cl
   1400101e6:	ds mov eax,0x11e19677
   1400101ec:	(bad)  
   1400101ed:	pop    rdi
   1400101ee:	sub    ebp,esi
   1400101f0:	jne    0x1400101b4
   1400101f2:	sub    edi,0xc3c7a50e
   1400101f8:	nop    DWORD PTR [rax-0x5c4bb975]
   1400101ff:	add    BYTE PTR [rdx],al
   140010201:	movabs ds:0xcf350c8fd0ed5dc8,al
   14001020a:	rex.B
   14001020b:	repz ret 0x18
   14001020f:	xchg   esp,eax
   140010210:	and    eax,0xb5229e68
   140010215:	push   rbp
   140010216:	adc    edx,DWORD PTR [rdx-0x6b]
   140010219:	ss push rbp
   14001021b:	rex.WXB cmp BYTE PTR [r9],dil
   14001021e:	(bad)  
   14001021f:	rol    BYTE PTR [rbp-0x174e0b4c],cl
   140010225:	cs xor al,0x31
   140010228:	cmp    DWORD PTR [rcx],edi
   14001022a:	or     bl,cl
   14001022c:	jnp    0x14001021f
   14001022e:	push   rcx
   14001022f:	std    
   140010230:	xor    BYTE PTR [rsi+rax*1+0x5fe6e004],bl
   140010237:	sbb    eax,0x29708ca3
   14001023c:	cmp    edi,esp
   14001023e:	es push rsi
   140010240:	adc    eax,0x632000ed
   140010245:	(bad)  
   140010246:	or     dh,ah
   140010248:	jno    0x14001028f
   14001024a:	mul    DWORD PTR [rsi+0x14]
   14001024d:	ror    BYTE PTR [rsi+0x1a3ad45],cl
   140010253:	jmp    0x1400102bb
   140010255:	jbe    0x1400101f7
   140010257:	xor    eax,0xcd0a823a
   14001025c:	je     0x140010276
   14001025e:	(bad)  
   14001025f:	xchg   DWORD PTR [rsi*4-0x1a554989],esi
   140010266:	push   rdi
   140010267:	(bad)  
   140010268:	sub    dl,BYTE PTR [rcx+0x56fa863f]
   14001026e:	or     DWORD PTR [rsi],edi
   140010270:	fadd   QWORD PTR [rdi-0x5cc274e4]
   140010276:	sub    edi,edx
   140010278:	iret   
   140010279:	enter  0xf915,0x33
   14001027d:	test   eax,0xc11adbe2
   140010282:	(bad)  
   140010283:	rex.RXB pop r14
   140010285:	(bad)  
   140010286:	popf   
   140010287:	jrcxz  0x140010220
   140010289:	and    ch,bl
   14001028b:	mov    WORD PTR [rcx-0x2b7292a6],es
   140010291:	test   BYTE PTR [rsi+0x44e3075f],bl
   140010297:	rex.WR rol al,0x87
   14001029b:	jo     0x14001027d
   14001029d:	shl    BYTE PTR [rcx-0x84ce7c2],0xfd
   1400102a4:	shr    DWORD PTR [rbx],0x77
   1400102a7:	sahf   
   1400102a8:	int3   
   1400102a9:	icebp  
   1400102aa:	jl     0x140010308
   1400102ac:	add    ah,BYTE PTR [rbx+0x7b]
   1400102af:	or     BYTE PTR [rsi-0x146213f1],bl
   1400102b5:	(bad)  
   1400102b6:	pmullw mm5,QWORD PTR [rbp+rdi*2+0x54]
   1400102bb:	fistp  WORD PTR [rsi-0x6c]
   1400102be:	rex.WR sub al,0x82
   1400102c1:	lock mov ah,0xe0
   1400102c4:	rex.WXB jrcxz 0x14001032f
   1400102c7:	movabs ds:0x5660c99eaf1e8876,al
   1400102d0:	dec    dl
   1400102d2:	(bad)  
   1400102d3:	(bad)
   1400102d7:	fisub  WORD PTR [rsi+0x4cb41ee6]
   1400102dd:	add    r13b,al
   1400102e0:	clc    
   1400102e1:	cwde   
   1400102e2:	fld    DWORD PTR [rcx]
   1400102e4:	cs pop rsp
   1400102e6:	in     al,dx
   1400102e7:	xchg   ebp,eax
   1400102e8:	(bad)  
   1400102e9:	adc    DWORD PTR [rbx-0x62],0x0
   1400102ed:	mov    esp,0xa707fd7e
   1400102f2:	pushf  
   1400102f3:	ret    
   1400102f4:	fcmove st,st(1)
   1400102f6:	leave  
   1400102f7:	outs   dx,BYTE PTR ds:[rsi]
   1400102f8:	mov    ebx,0xdc4cbb95
   1400102fd:	jle    0x140010300
   1400102ff:	push   rdi
   140010300:	je     0x1400102c1
   140010302:	mov    DWORD PTR [rsi],ecx
   140010304:	cmc    
   140010305:	(bad)  
   140010306:	movabs eax,ds:0xe479b0f7cb422040
   14001030f:	add    esp,edx
   140010311:	pop    rsp
   140010312:	jle    0x1400102f0
   140010314:	xchg   edi,eax
   140010315:	cwde   
   140010316:	(bad)  
   140010317:	repnz adc dh,0xee
   14001031b:	lahf   
   14001031c:	xchg   ebp,eax
   14001031d:	(bad)  
   14001031e:	pop    rsi
   14001031f:	scas   eax,DWORD PTR es:[rdi]
   140010320:	lea    edi,[rbx]
   140010322:	int3   
   140010323:	call   0xe3f6f3ff
   140010328:	pop    rdi
   140010329:	(bad)  
   14001032a:	mov    esp,0x386afca5
   14001032f:	mov    esi,0x5cb9f865
   140010334:	xchg   edx,eax
   140010335:	jp     0x140010369
   140010337:	jno    0x14001032e
   140010339:	movabs eax,ds:0xf1cee3979d3be368
   140010342:	stos   DWORD PTR es:[rdi],eax
   140010343:	loope  0x14001037f
   140010345:	and    esi,DWORD PTR [rax-0x53]
   140010348:	ss pushf 
   14001034a:	xor    eax,DWORD PTR [rdx+0x21]
   14001034d:	test   al,0xe2
   140010350:	test   DWORD PTR [rdx+0xe],edx
   140010353:	adc    bl,BYTE PTR [rax]
   140010355:	cmp    BYTE PTR [rax],dh
   140010357:	pop    rdi
   140010358:	(bad)  
   140010359:	ret    
   14001035a:	jnp    0x14001038a
   14001035c:	rex.XB js 0x14001033f
   14001035f:	xchg   ecx,eax
   140010360:	sbb    dl,bh
   140010362:	(bad)  
   140010363:	sbb    esp,ebp
   140010365:	or     al,0x81
   140010367:	jno    0x1400103d1
   140010369:	jp     0x1400103d9
   14001036b:	nop
   14001036c:	pop    rdx
   14001036d:	clc    
   14001036e:	mov    ecx,0x310afd86
   140010373:	rex.WRB jo 0x14001037e
   140010376:	rex.X (bad) 
   140010378:	shl    BYTE PTR [rdi+0x44],cl
   14001037b:	rex.WXB outs dx,BYTE PTR ds:[rsi]
   14001037d:	adc    BYTE PTR [rax],dl
   14001037f:	stos   BYTE PTR es:[rdi],al
   140010380:	test   BYTE PTR [rbx],0x58
   140010383:	adc    BYTE PTR [rdi+0x5c],al
   140010386:	(bad)
   140010389:	lods   al,BYTE PTR ds:[rsi]
   14001038a:	and    dl,BYTE PTR [rax-0x76]
   14001038d:	test   DWORD PTR [rbx+rax*1-0x7bfda590],edx
   140010394:	adc    ah,BYTE PTR [rdx-0x55abcb2f]
   14001039a:	add    eax,0xdd140199
   14001039f:	jno    0x140010354
   1400103a1:	add    ebx,DWORD PTR [rax+rsi*4-0x64]
   1400103a5:	shr    DWORD PTR [rax-0x2],0xdc
   1400103a9:	push   rbx
   1400103aa:	(bad)  
   1400103ab:	outs   dx,BYTE PTR ds:[rsi]
   1400103ac:	(bad)  
   1400103ad:	(bad)  
   1400103ae:	xor    DWORD PTR [rdx],eax
   1400103b0:	fadd   QWORD PTR [rbp-0x1c]
   1400103b3:	mov    BYTE PTR [rsi],ah
   1400103b5:	xlat   BYTE PTR ds:[rbx]
   1400103b6:	rex.WRX mov ?,WORD PTR [rdx]
   1400103b9:	add    edx,DWORD PTR [rax+rax*4]
   1400103bc:	rex.WXB cmp sil,BYTE PTR [r15+0x50765563]
   1400103c3:	cmp    DWORD PTR [rbx-0x3],r10d
   1400103c7:	mov    r8d,0x280f7fc0
   1400103cd:	and    dh,BYTE PTR ss:[rdx+0x7e]
   1400103d1:	test   BYTE PTR [rdx-0x5dfc021c],0xef
   1400103d8:	(bad)  
   1400103d9:	outs   dx,BYTE PTR ds:[rsi]
   1400103da:	mov    ebp,0x650c2103
   1400103df:	loop   0x1400103cc
   1400103e1:	out    0x20,eax
   1400103e3:	sbb    al,0xde
   1400103e5:	rex.XB fnstsw WORD PTR [r13+0x24]
   1400103e9:	fstp   QWORD PTR [rbp+0x3d]
   1400103ec:	fs jg  0x14001037f
   1400103ef:	sbb    DWORD PTR [rax-0x6be340b8],edx
   1400103f5:	out    0xe0,eax
   1400103f7:	jbe    0x140010414
   1400103f9:	fsubr  QWORD PTR [rdx-0x1f]
   1400103fc:	rcl    esi,0xb3
   1400103ff:	jno    0x1400103f4
   140010401:	in     al,0x8b
   140010403:	nop
   140010404:	mov    bh,0xbb
   140010406:	jo     0x1400103f5
   140010408:	scas   al,BYTE PTR es:[rdi]
   140010409:	add    rax,0x6be84a0a
   14001040f:	push   rax
   140010410:	adc    DWORD PTR [rcx],eax
   140010412:	adc    ebx,edi
   140010414:	data16 addr32 jge 0x1400103e1
   140010418:	add    BYTE PTR [rax+0x6247dec3],bl
   14001041e:	pop    rsp
   14001041f:	(bad)  
   140010420:	xchg   DWORD PTR [rax-0x10866665],esi
   140010426:	scas   al,BYTE PTR es:[rdi]
   140010427:	cmp    DWORD PTR [rbp-0x2d],0xffffff9f
   14001042b:	(bad)  
   14001042c:	(bad)  
   14001042d:	(bad)  
   14001042e:	rex.WX add rax,0xffffffffdc426fc3
   140010434:	cmp    dh,ah
   140010436:	(bad)  
   140010437:	mov    ebx,0x94a7725f
   14001043c:	pop    rax
   14001043d:	or     al,0xb1
   14001043f:	and    esi,edx
   140010441:	and    al,0xe
   140010443:	mov    bh,0x50
   140010445:	test   ecx,ecx
   140010447:	fistp  DWORD PTR [rbp+0x1c970696]
   14001044d:	jne    0x14001047b
   14001044f:	shr    BYTE PTR [rcx],0x4d
   140010452:	add    BYTE PTR [rax],al
   140010454:	sar    BYTE PTR [rcx],0x3a
   140010457:	mov    ebx,0xc9b1b805
   14001045c:	xchg   ecx,eax
   14001045d:	adc    DWORD PTR [rdi-0x74],eax
   140010460:	jae    0x14001049c
   140010462:	(bad)  [rcx+0x230edf39]
   140010468:	jrcxz  0x14001040f
   14001046a:	push   rdx
   14001046b:	retf   0x330d
   14001046e:	mul    DWORD PTR [rbx+0x5529a63d]
   140010474:	imul   eax,DWORD PTR [rcx+0x46a0f28f],0xaf8869f9
   14001047e:	xlat   BYTE PTR ds:[rbx]
   14001047f:	rex.WX movabs rsi,0xfa2acfe1abf8b37d
   140010489:	pop    rax
   14001048a:	adc    eax,0x5be4ab5f
   14001048f:	mov    ebp,0x5032e009
   140010494:	out    0x40,al
   140010496:	add    esi,DWORD PTR cs:[rdi+0x31c8a00b]
   14001049d:	fnstsw WORD PTR [rsi+0x12]
   1400104a0:	ds mov ecx,0xdae097ea
   1400104a6:	ins    DWORD PTR es:[rdi],dx
   1400104a7:	push   rax
   1400104a8:	jnp    0x1400104de
   1400104aa:	data16 mul BYTE PTR [rbp+0x488a6473]
   1400104b1:	cmp    ch,BYTE PTR [rbp+0x69]
   1400104b4:	mov    bl,bh
   1400104b6:	in     al,dx
   1400104b7:	movabs eax,ds:0x38010af302001f41
   1400104c0:	cmp    DWORD PTR [rax+0x10],esi
   1400104c3:	or     al,0xcc
   1400104c5:	sbb    al,0x3a
   1400104c7:	pop    rsp
   1400104c8:	fimul  DWORD PTR [rsi+0x43a81044]
   1400104ce:	movsxd eax,DWORD PTR [rdi]
   1400104d0:	(bad)  
   1400104d1:	(bad)  
   1400104d2:	call   0xc86dbd1e
   1400104d7:	(bad)  
   1400104d8:	jo     0x1400104f2
   1400104da:	data16 rex.XB fild DWORD PTR [r15]
   1400104de:	imul   edi,edx,0xeefd607a
   1400104e4:	(bad)  
   1400104e5:	out    0x50,eax
   1400104e7:	popf   
   1400104e8:	(bad)  
   1400104e9:	enter  0x998b,0xa8
   1400104ed:	rex.B enter 0x10c5,0x8
   1400104f2:	add    BYTE PTR [rbx-0x6a],bl
   1400104f5:	cmc    
   1400104f6:	mov    dl,0x9
   1400104f8:	in     al,0x47
   1400104fa:	ds in  eax,0x51
   1400104fd:	add    eax,0x93e74472
   140010502:	jae    0x14001051c
   140010504:	popf   
   140010505:	call   0x14eb6dc80
   14001050a:	loopne 0x14001048e
   14001050c:	mov    ds,edx
   14001050e:	enter  0x60a4,0x1a
   140010512:	jb     0x140010524
   140010514:	(bad)  
   140010516:	sub    al,0xb6
   140010518:	mov    WORD PTR [rsi+0x7],gs
   14001051b:	js     0x140010540
   14001051d:	rex pop rdx
   14001051f:	sbb    DWORD PTR [rdi],0x5e
   140010522:	rex.X jl 0x140010520
   140010525:	xchg   DWORD PTR [rbx],ebp
   140010527:	rcr    edi,1
   140010529:	iret   
   14001052a:	imul   edx,DWORD PTR [rbx],0x19f20b0f
   140010530:	push   rsp
   140010531:	jns    0x140010530
   140010533:	push   rsi
   140010534:	loopne 0x1400104d9
   140010536:	scas   eax,DWORD PTR es:[rdi]
   140010537:	(bad)  
   140010538:	shl    BYTE PTR [rax],0x2e
   14001053b:	rex.RX add al,0x2d
   14001053e:	int    0xec
   140010540:	(bad)  
   140010541:	enter  0x6708,0xc9
   140010545:	cmp    eax,0xe7dbf42d
   14001054a:	loop   0x14001056b
   14001054c:	(bad)  
   14001054d:	fisttp WORD PTR [rax]
   14001054f:	je     0x14001050b
   140010551:	rex imul edi,DWORD PTR [rsi+rdx*4+0x2bd54bd6],0x46
   14001055a:	xor    BYTE PTR [rdi+0x32db887f],bh
   140010560:	lods   eax,DWORD PTR ds:[rsi]
   140010561:	fwait
   140010562:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140010563:	cmp    ah,bl
   140010565:	rex.RB loope 0x1400105c4
   140010568:	sbb    BYTE PTR [rdi+rdi*1],dl
   14001056b:	jne    0x14001055e
   14001056d:	jg     0x140010569
   14001056f:	lahf   
   140010570:	(bad)  
   140010571:	(bad)  
   140010572:	data16 xor al,0xfe
   140010575:	mov    BYTE PTR [rcx-0x21],ah
   140010578:	add    DWORD PTR [rax-0x29f06f0a],esi
   14001057e:	rex.WRB sahf 
   140010580:	sbb    edx,DWORD PTR [rdx+0x6]
   140010583:	rex.RXB cmc 
   140010585:	mov    dl,0x7a
   140010587:	xor    dh,BYTE PTR [rax+0x1e9aee98]
   14001058d:	lods   al,BYTE PTR ds:[rsi]
   14001058e:	(bad)
   140010591:	ret    0x4be3
   140010594:	add    BYTE PTR [rip+0x79167510],ch        # 0x1b9177aaa
   14001059a:	(bad)  
   14001059b:	shl    BYTE PTR [rdi-0x15787a1d],cl
   1400105a1:	out    dx,eax
   1400105a2:	mov    cl,0x34
   1400105a4:	rex.RX
   1400105a5:	cs repnz (bad) 
   1400105a8:	rex.R in al,0xce
   1400105ab:	cmp    ch,BYTE PTR [rbx-0x3]
   1400105ae:	push   0x15ea5edc
   1400105b3:	mov    es,WORD PTR [rdx+rbp*2]
   1400105b6:	fmul   QWORD PTR [rbx-0x19ee970d]
   1400105bc:	(bad)  
   1400105bd:	(bad)  
   1400105be:	fs (bad) 
   1400105c0:	cmp    al,0x35
   1400105c2:	fidivr DWORD PTR [rbx-0x52]
   1400105c5:	sahf   
   1400105c6:	rex.RXB (bad) 
   1400105c8:	or     BYTE PTR [rcx+0x6f],ch
   1400105cb:	icebp  
   1400105cc:	xor    al,0xf4
   1400105ce:	cwde   
   1400105cf:	(bad)  
   1400105d0:	jns    0x1400105f9
   1400105d2:	mov    dl,0xd4
   1400105d4:	cmc    
   1400105d5:	(bad)  
   1400105d6:	jnp    0x1400105c3
   1400105d8:	jge    0x14001058d
   1400105da:	and    dh,BYTE PTR [rbx]
   1400105dc:	(bad)
   1400105df:	test   eax,0xec597f6d
   1400105e4:	cld    
   1400105e5:	stos   DWORD PTR es:[rdi],eax
   1400105e6:	(bad)  
   1400105e7:	cs mov ebx,0x4b29f43b
   1400105ed:	add    BYTE PTR [rsp+rdi*8+0x7],al
   1400105f1:	mov    dl,0xcc
   1400105f3:	popf   
   1400105f4:	out    dx,eax
   1400105f5:	xor    bh,BYTE PTR [rax-0x526b98f3]
   1400105fb:	retf   
   1400105fc:	mov    ebx,0x4dc481df
   140010601:	jmp    0x140010633
   140010603:	xor    BYTE PTR [rcx-0x6ae8e78],al
   140010609:	cmp    eax,0xfcb89ba0
   14001060e:	add    dh,BYTE PTR [rdx+rsi*4]
   140010611:	out    dx,eax
   140010612:	nop
   140010613:	data16 cmc 
   140010615:	int    0x2
   140010617:	cmp    al,0x27
   140010619:	cs mov ebp,0x8cf11490
   14001061f:	push   rsi
   140010620:	jg     0x140010647
   140010622:	add    dl,BYTE PTR [rsi-0x2f]
   140010625:	(bad)  
   140010626:	rex.W (bad) 
   140010628:	(bad)  
   140010629:	push   rbx
   14001062a:	cs iret 
   14001062c:	adc    DWORD PTR [rbx],0xffffffe5
   14001062f:	sub    al,0x2b
   140010631:	and    al,0xc6
   140010633:	mov    edi,0x4f6ca368
   140010638:	loope  0x14001065d
   14001063a:	jrcxz  0x1400105fb
   14001063c:	(bad)  
   14001063d:	fistp  WORD PTR [rcx-0x7fb3147c]
   140010643:	mov    al,BYTE PTR [rdx+0x7c]
   140010646:	std    
   140010647:	or     al,0xad
   140010649:	shl    DWORD PTR [rax],cl
   14001064b:	jmp    0x1400106c1
   14001064d:	cwde   
   14001064e:	(bad)  
   140010650:	in     al,dx
   140010651:	add    DWORD PTR [rsi+0x3],esp
   140010654:	cwde   
   140010655:	in     al,dx
   140010656:	adc    al,0xed
   140010658:	jmp    0x140010610
   14001065a:	pop    rbp
   14001065b:	jge    0x14001064e
   14001065d:	rex.WRB (bad) 
   14001065f:	fnstsw WORD PTR [rcx+0x1fbbaefd]
   140010665:	cmp    cl,BYTE PTR [rdx+rax*1]
   140010668:	cmp    esp,DWORD PTR [rdx]
   14001066a:	(bad)  
   14001066b:	int3   
   14001066c:	fs iretq 
   14001066f:	lods   al,BYTE PTR ds:[rsi]
   140010670:	mov    ebp,0x100123e3
   140010675:	(bad)  
   140010676:	(bad)  
   140010677:	rex.WRXB test rax,0x8013dd6
   14001067d:	mov    ah,0x0
   14001067f:	vmread rcx,rax
   140010682:	xchg   edi,eax
   140010683:	fcmovb st,st(1)
   140010685:	and    esp,DWORD PTR [rax]
   140010687:	fst    QWORD PTR [rdx+0x53]
   14001068a:	and    eax,0x8821a9d6
   14001068f:	addr32 mov edi,0x45969235
   140010695:	outs   dx,BYTE PTR ds:[rsi]
   140010696:	xchg   edi,eax
   140010697:	mov    ss,WORD PTR [rbx+rdx*2-0x7e]
   14001069b:	scas   al,BYTE PTR es:[rdi]
   14001069c:	jrcxz  0x140010699
   14001069e:	xor    dl,BYTE PTR [rax-0x41f730a1]
   1400106a4:	xchg   edx,eax
   1400106a5:	mov    cl,0xce
   1400106a7:	fdiv   QWORD PTR [rdx-0xc431b8a]
   1400106ad:	lea    edi,ss:[rdi]
   1400106b0:	out    dx,eax
   1400106b1:	jns    0x1400106ca
   1400106b3:	ins    DWORD PTR es:[rdi],dx
   1400106b4:	lock mov ebx,esp
   1400106b7:	and    DWORD PTR [rbp-0x54],eax
   1400106ba:	(bad)  
   1400106bb:	(bad)
   1400106bf:	and    DWORD PTR [rcx],edi
   1400106c1:	jno    0x1400106eb
   1400106c3:	xor    ecx,edx
   1400106c5:	(bad)  
   1400106c6:	mov    edi,0x7c4dbf60
   1400106cb:	mov    ah,0x15
   1400106cd:	cmp    BYTE PTR [rbp-0x6a0405da],ah
   1400106d3:	imul   ecx,DWORD PTR [rax-0x7e],0x70
   1400106d7:	push   0xffffffffe24f2f5c
   1400106dc:	mov    bl,BYTE PTR [rsi]
   1400106de:	enter  0x4435,0xd4
   1400106e2:	sbb    eax,0x4dcd6919
   1400106e7:	(bad)  
   1400106e8:	hlt    
   1400106e9:	adc    BYTE PTR [rcx],ch
   1400106eb:	loopne 0x14001068b
   1400106ed:	loope  0x1400106ae
   1400106ef:	jb     0x140010712
   1400106f1:	pushf  
   1400106f2:	mov    dl,0x4
   1400106f4:	add    BYTE PTR [rax],al
   1400106f6:	(bad)  
   1400106f7:	mov    ecx,0x39ccfcf5
   1400106fc:	cmp    bh,BYTE PTR [rbx-0x2a26f525]
   140010702:	imul   edi,DWORD PTR [rsi+0x4818e79f],0x4a
   140010709:	gs xor dl,cl
   14001070c:	jmp    0x1400106f4
   14001070e:	(bad)  
   14001070f:	imul   r10d,DWORD PTR [rdx],0xffffffa8
   140010713:	je     0x140010793
   140010715:	pshufw mm5,QWORD PTR [rcx+0x22c3ff16],0xf6
   14001071d:	jae    0x14001076e
   14001071f:	mov    dl,0xfb
   140010721:	(bad)  
   140010722:	xchg   esi,eax
   140010723:	hlt    
   140010724:	stos   BYTE PTR es:[rdi],al
   140010725:	test   edx,edi
   140010727:	rex.X mov eax,0xe3f2d6bf
   14001072d:	and    ch,al
   14001072f:	sbb    BYTE PTR [rax],al
   140010731:	rex.R movabs ds:0xd402b28fabd2671f,eax
   14001073b:	int    0x11
   14001073d:	mov    dh,BYTE PTR [rcx+0x7c]
   140010740:	jl     0x14001072e
   140010742:	rex.WRB cdqe 
   140010744:	sbb    ebx,DWORD PTR [rcx+0xf]
   140010747:	push   0xffffffffffffff8f
   140010749:	rex.WXB popf 
   14001074b:	mov    edi,0x29fdf121
   140010750:	add    al,0xa0
   140010752:	sahf   
   140010753:	call   0xd94147b9
   140010758:	cmp    ecx,DWORD PTR [rsi+rbp*4-0x16]
   14001075c:	jbe    0x1400107dd
   14001075e:	(bad)  
   14001075f:	(bad)  
   140010760:	sahf   
   140010761:	je     0x1400106f4
   140010763:	movabs ds:0x5b13a2daf98b5927,eax
   14001076c:	rex.X test DWORD PTR [rax+0x2d4b0436],ebp
   140010773:	(bad)  
   140010774:	(bad)  
   140010775:	movsxd edx,DWORD PTR [rsi+0x1c28be3c]
   14001077b:	xor    ebx,DWORD PTR [rbx+0x2d5bba3c]
   140010781:	test   ecx,ebx
   140010783:	retf   
   140010784:	jns    0x14001070b
   140010786:	xchg   esp,eax
   140010787:	(bad)  
   140010788:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010789:	hlt    
   14001078a:	mov    BYTE PTR [rcx-0x2f],al
   14001078d:	sbb    DWORD PTR [rbx],0x78
   140010790:	xor    DWORD PTR [rsi],ecx
   140010792:	mov    ebx,0x2eb53dc8
   140010797:	jg     0x140010813
   140010799:	int    0x30
   14001079b:	xchg   ebp,eax
   14001079c:	(bad)  
   14001079d:	push   0x7faa16c5
   1400107a2:	(bad)  
   1400107a3:	(bad)  
   1400107a4:	test   DWORD PTR [rbp+0x6],edx
   1400107a7:	pop    rsp
   1400107a8:	in     al,0x5d
   1400107aa:	push   0x52
   1400107ac:	rex
   1400107ad:	rex.XB
   1400107ae:	rex.RXB test eax,0xc3faf913
   1400107b4:	repnz rex.WRX mov dil,0x8d
   1400107b8:	jmp    0x1778141a6
   1400107bd:	jrcxz  0x140010770
   1400107bf:	rex.X add sil,dil
   1400107c2:	gs in  eax,dx
   1400107c4:	stos   DWORD PTR es:[rdi],eax
   1400107c5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400107c6:	mov    dl,0x2c
   1400107c8:	mov    ah,0x5e
   1400107ca:	jp     0x1400107c5
   1400107cc:	sahf   
   1400107cd:	xor    eax,0xab88f9a3
   1400107d2:	push   rax
   1400107d3:	mov    al,ah
   1400107d5:	shr    BYTE PTR [rax+0x73],0xc0
   1400107d9:	(bad)  
   1400107da:	out    dx,al
   1400107db:	cmp    eax,0x151f8090
   1400107e0:	jrcxz  0x14001078b
   1400107e2:	xchg   esp,eax
   1400107e3:	(bad)  
   1400107e4:	fidivr WORD PTR [rsi+0x6facfc1a]
   1400107ea:	pop    rdi
   1400107eb:	sub    ch,dl
   1400107ed:	mov    edi,0x6a7e7a6f
   1400107f2:	icebp  
   1400107f3:	test   DWORD PTR [rax],0x4b1d4d6c
   1400107f9:	mov    BYTE PTR [rcx+0x55],bh
   1400107fc:	or     ecx,DWORD PTR [rbx]
   1400107fe:	cmp    cl,cl
   140010800:	out    dx,al
   140010801:	xor    DWORD PTR [rbx-0x20],0x6e
   140010805:	add    DWORD PTR [rdx+rdi*4+0x2fc8ccf8],esi
   14001080c:	(bad)  
   14001080d:	imul   eax
   14001080f:	rex.RB enter 0xa3da,0x70
   140010814:	rex.RB
   140010815:	rex.WXB sub rdi,r14
   140010818:	(bad)  
   140010819:	xchg   DWORD PTR [rbp+rcx*1-0x58],edx
   14001081d:	jae    0x1400107e3
   14001081f:	sbb    r9b,BYTE PTR [rax+0x26]
   140010823:	popf   
   140010824:	(bad)  
   140010825:	sub    al,0xb8
   140010827:	in     al,0xd3
   140010829:	hlt    
   14001082a:	rex.W pop rbp
   14001082c:	rcl    ah,1
   14001082e:	mov    eax,0x2f0d7a4f
   140010833:	or     bl,BYTE PTR es:[rdi]
   140010836:	(bad)  
   140010837:	int3   
   140010838:	(bad)
   14001083c:	jle    0x140010832
   14001083e:	or     DWORD PTR [rcx+rbx*1-0x4174810f],esp
   140010845:	mov    BYTE PTR [rdx],0x9d
   140010848:	ffree  st(6)
   14001084a:	mov    al,0x1a
   14001084c:	sub    ebp,DWORD PTR [rdi+0x173251a7]
   140010852:	rex mov edx,0x5f82549a
   140010858:	rex.X (bad) 
   14001085a:	and    BYTE PTR [rax],al
   14001085c:	cs nop
   14001085e:	fadd   DWORD PTR [rdx+0x22331c87]
   140010864:	nop
   140010865:	or     BYTE PTR [rdi+0x42],bh
   140010868:	cmp    al,0x1a
   14001086a:	fcomp  QWORD PTR [rdx]
   14001086c:	sbb    DWORD PTR [rax-0x221df68e],eax
   140010872:	fadd   st,st(1)
   140010874:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140010875:	xor    al,0x3a
   140010877:	add    ah,BYTE PTR [rbp+0x6a8e8c91]
   14001087d:	mov    esp,DWORD PTR [rbp-0x35a58918]
   140010883:	and    eax,0x700eca8e
   140010888:	sub    dl,BYTE PTR [rbx]
   14001088a:	add    BYTE PTR [rdx],ch
   14001088c:	test   eax,0x5b69eb38
   140010891:	jl     0x17fb2c636
   140010897:	rex.WX cmp al,0x2
   14001089a:	rex.RXB sub al,0xae
   14001089d:	adc    esp,DWORD PTR [rsi-0x80]
   1400108a0:	or     BYTE PTR [rdi],dl
   1400108a2:	imul   BYTE PTR [rsi+0x3]
   1400108a5:	rex.WRB stos BYTE PTR es:[rdi],al
   1400108a7:	retf   
   1400108a8:	(bad)  
   1400108a9:	xor    eax,0x2337b7dc
   1400108ae:	push   rcx
   1400108af:	jle    0x1400108ed
   1400108b1:	(bad)  
   1400108b2:	loop   0x140010933
   1400108b4:	push   rax
   1400108b5:	stos   DWORD PTR es:[rdi],eax
   1400108b6:	mov    edi,0x5f14932f
   1400108bb:	(bad)  
   1400108bc:	ret    
   1400108bd:	jp     0x140010938
   1400108bf:	sahf   
   1400108c0:	rex (bad) 
   1400108c2:	jo     0x1400108e5
   1400108c4:	cmp    BYTE PTR [rip+0xffffffffd5573981],0x2        # 0x11558424c
   1400108cb:	(bad)  
   1400108cc:	in     al,dx
   1400108cd:	retf   
   1400108ce:	or     dl,BYTE PTR [rax-0x6a]
   1400108d1:	and    DWORD PTR [rax+0x45],ebp
   1400108d4:	lahf   
   1400108d5:	out    dx,eax
   1400108d6:	mov    dh,0x5e
   1400108d8:	mov    bh,BYTE PTR [rbx]
   1400108da:	(bad)  
   1400108db:	lahf   
   1400108dc:	add    DWORD PTR [rdi+0x74],edx
   1400108df:	and    BYTE PTR [rdx-0x6c5f52d3],0x49
   1400108e6:	xor    ecx,DWORD PTR [rsi+0x1f]
   1400108e9:	in     eax,dx
   1400108ea:	(bad)  
   1400108eb:	sub    al,0x8
   1400108ed:	fisubr WORD PTR [rcx+rax*2]
   1400108f0:	fst    QWORD PTR [rcx+rbp*1]
   1400108f3:	ins    DWORD PTR es:[rdi],dx
   1400108f4:	xor    DWORD PTR [rax+0x1b031968],ebx
   1400108fa:	sbb    esp,DWORD PTR [rdx-0x6dddcf1c]
   140010900:	out    dx,al
   140010901:	(bad)  
   140010902:	sti    
   140010903:	(bad)  
   140010904:	xor    DWORD PTR [rbp-0x29],esi
   140010907:	sahf   
   140010908:	ja     0x14001094e
   14001090a:	popf   
   14001090b:	std    
   14001090c:	or     BYTE PTR [rax+0x24],dh
   14001090f:	push   0x72
   140010911:	add    ch,BYTE PTR [rax]
   140010913:	rex.B popf 
   140010915:	add    BYTE PTR [rsi],bl
   140010917:	stc    
   140010918:	pop    rsp
   140010919:	or     edi,DWORD PTR [rcx+0x235b2656]
   14001091f:	xchg   esp,eax
   140010920:	adc    DWORD PTR [rdx+0x6def5d6c],ebx
   140010926:	jbe    0x1400108c3
   140010928:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010929:	fidivr WORD PTR [rbx-0x28]
   14001092c:	loope  0x140010942
   14001092e:	cdq    
   14001092f:	(bad)  
   140010930:	in     al,0x61
   140010932:	or     BYTE PTR [rbx-0x4569fa88],cl
   140010938:	inc    DWORD PTR [rdx-0x355e878d]
   14001093e:	out    0x5a,al
   140010940:	sub    eax,0x338f8e2d
   140010945:	mov    ?,WORD PTR [rax+0x79]
   140010948:	or     eax,0xa002494e
   14001094d:	cli    
   14001094e:	(bad)  
   14001094f:	cmp    eax,0x2bf9fcf5
   140010954:	sahf   
   140010955:	jp     0x140010935
   140010957:	loope  0x140010962
   140010959:	in     al,0xe3
   14001095b:	test   DWORD PTR [rip+0xffffffff98843453],esi        # 0xd8853db4
   140010961:	add    ch,ah
   140010963:	xchg   ebx,eax
   140010964:	add    BYTE PTR [rax],al
   140010966:	add    BYTE PTR [rax],ah
   140010968:	add    BYTE PTR [rcx+0x44],cl
   14001096b:	push   r12
   14001096d:	call   0x1ac7d6cc1
   140010972:	(bad)  
   140010973:	rcl    BYTE PTR [rbx+0x67b04a00],0x10
   14001097a:	iret   
   14001097b:	stos   BYTE PTR es:[rdi],al
   14001097c:	(bad)  
   14001097e:	add    ecx,DWORD PTR [rdi]
   140010980:	out    0x40,al
   140010982:	ins    BYTE PTR es:[rdi],dx
   140010983:	push   rcx
   140010984:	jle    0x14001091c
   140010986:	fadd   st(3),st
   140010988:	mov    ch,0x8a
   14001098a:	ds lock (bad) 
   14001098d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001098e:	xchg   edx,eax
   14001098f:	add    BYTE PTR [rdi],al
   140010991:	mov    ch,0xb3
   140010993:	xor    al,bl
   140010995:	sub    al,0xfe
   140010997:	xor    DWORD PTR [rbp+0x5a06d3b7],edi
   14001099d:	sbb    eax,0x869fccec
   1400109a2:	iret   
   1400109a3:	scas   eax,DWORD PTR es:[rdi]
   1400109a4:	jle    0x1400109df
   1400109a6:	pop    rsp
   1400109a7:	rol    DWORD PTR [rsi],1
   1400109a9:	mov    ch,0xbb
   1400109ab:	adc    al,BYTE PTR [rdi]
   1400109ad:	rcl    BYTE PTR [rbp+0x974aa66],0x40
   1400109b4:	pop    rbp
   1400109b5:	in     al,0x37
   1400109b7:	and    ah,BYTE PTR [rax-0x4a]
   1400109ba:	movabs ds:0x9f5c8ba6f7f458b8,al
   1400109c3:	(bad)  
   1400109c4:	xchg   ecx,eax
   1400109c5:	ds in  eax,0x38
   1400109c8:	lods   al,BYTE PTR ds:[rsi]
   1400109c9:	(bad)  
   1400109ca:	add    al,0xc
   1400109cc:	mov    DWORD PTR [rbp-0x4f1ac6db],0xad589773
   1400109d6:	(bad)  
   1400109d7:	rex.WRB sbb al,0x70
   1400109da:	adc    al,0x2f
   1400109dc:	jae    0x1400109fa
   1400109de:	(bad)  
   1400109df:	adc    eax,0x6dbc1672
   1400109e4:	push   0x6d
   1400109e6:	sbb    eax,0x5c3b3506
   1400109eb:	sbb    eax,0x1bee38ed
   1400109f0:	jp     0x1400109ec
   1400109f2:	(bad)  
   1400109f3:	jge    0x140010a00
   1400109f5:	div    bl
   1400109f7:	lock ins DWORD PTR es:[rdi],dx
   1400109f9:	xchg   BYTE PTR [rcx+rbx*4],ch
   1400109fc:	movabs al,ds:0xdadd8b1d80223a26
   140010a05:	fidivr WORD PTR [rcx-0x57]
   140010a08:	imul   DWORD PTR [rbp-0x44]
   140010a0b:	or     ecx,ebp
   140010a0d:	jnp    0x140010a21
   140010a0f:	add    DWORD PTR [rcx+rbx*2+0x2e4c396d],edx
   140010a16:	jno    0x1400109af
   140010a18:	add    eax,0x124a70
   140010a1d:	add    BYTE PTR [rax-0x1301c018],bh
   140010a23:	call   0xef7cdddd
   140010a28:	cmp    eax,0x9642d738
   140010a2d:	cmp    DWORD PTR gs:[rcx],esi
   140010a30:	add    al,0x31
   140010a33:	and    ebp,edx
   140010a35:	and    bh,dl
   140010a37:	cs cwde 
   140010a39:	push   rsi
   140010a3a:	mov    eax,ecx
   140010a3c:	(bad)  
   140010a3d:	pop    rax
   140010a3e:	imul   rdi,QWORD PTR [rcx+0x48],0x1b
   140010a43:	jbe    0x140010a13
   140010a45:	mov    dh,bl
   140010a47:	(bad)  
   140010a48:	push   rax
   140010a49:	mov    ebp,0xedd76d3f
   140010a4e:	rex.XB in eax,0xff
   140010a51:	lahf   
   140010a52:	(bad)  
   140010a53:	in     al,0x7
   140010a55:	enter  0x47b,0xca
   140010a59:	adc    eax,0x1c881d69
   140010a5e:	rex.X (bad) 
   140010a60:	(bad)  
   140010a61:	jne    0x140010a87
   140010a63:	(bad)  
   140010a64:	mov    bh,0x97
   140010a66:	outs   dx,DWORD PTR ds:[rsi]
   140010a67:	vorps  ymm7,ymm7,YMMWORD PTR [rdi-0x6d692bff]
   140010a6f:	fisubr WORD PTR [rbp+rax*2-0x33372dc3]
   140010a76:	add    bl,BYTE PTR es:[rdx]
   140010a79:	(bad)  
   140010a7a:	ja     0x140010a36
   140010a7c:	rex.WX and spl,BYTE PTR [rcx+0x52d1c240]
   140010a83:	data16 (bad) 
   140010a85:	(bad)  
   140010a86:	jne    0x140010a4b
   140010a88:	nop
   140010a89:	cmp    DWORD PTR [rdx-0x58],esi
   140010a8c:	in     al,0x1e
   140010a8e:	xchg   esp,eax
   140010a8f:	pop    rsp
   140010a90:	xlat   BYTE PTR ds:[ebx]
   140010a92:	(bad)  
   140010a93:	adc    eax,0xd8e45811
   140010a98:	xor    dl,ah
   140010a9a:	jo     0x140010ade
   140010a9c:	mov    dl,al
   140010a9e:	push   rcx
   140010a9f:	cmp    BYTE PTR [rsi],dl
   140010aa2:	xchg   DWORD PTR [rbp+0xa],edi
   140010aa5:	int    0xcb
   140010aa7:	xchg   edi,eax
   140010aa8:	icebp  
   140010aa9:	cli    
   140010aaa:	rex.WXB pop r13
   140010aac:	shl    BYTE PTR [rbp+rbp*8+0x1e],cl
   140010ab0:	int    0x7d
   140010ab2:	mov    WORD PTR [rax],ds
   140010ab4:	add    eax,0xc48b858f
   140010ab9:	mov    DWORD PTR [rdx+rcx*4],edx
   140010abc:	and    bl,ah
   140010abe:	(bad)  
   140010abf:	sub    BYTE PTR [rbp-0x6489e1a3],bl
   140010ac5:	add    eax,0xb7974606
   140010aca:	sbb    eax,0xe9f06600
   140010acf:	(bad)  
   140010ad0:	add    DWORD PTR [rax],eax
   140010ad2:	rex ja 0x140010aa8
   140010ad5:	mov    edx,0xbc33e457
   140010ada:	(bad)  
   140010adb:	rex.R xchg esp,eax
   140010add:	gs cdq 
   140010adf:	sbb    BYTE PTR [rax+rcx*8-0x7f],ah
   140010ae3:	adc    DWORD PTR [rax+0x643efe75],esi
   140010ae9:	xchg   ebx,eax
   140010aea:	cdq    
   140010aeb:	and    BYTE PTR [rcx+0x21c34ff9],bh
   140010af1:	and    ah,dh
   140010af3:	(bad)  
   140010af4:	iret   
   140010af5:	(bad)  
   140010af6:	scas   eax,DWORD PTR es:[rdi]
   140010af7:	leave  
   140010af8:	cmp    eax,0xfe4fb7d6
   140010afd:	fadd   DWORD PTR [rbx]
   140010aff:	in     al,0x59
   140010b01:	lea    edi,[rsi+0x6a]
   140010b04:	mov    BYTE PTR [rcx+0x5],dl
   140010b07:	pushf  
   140010b08:	xchg   ecx,eax
   140010b09:	or     DWORD PTR [rdi+0x72800ace],esp
   140010b0f:	sub    edi,edx
   140010b11:	in     al,0x32
   140010b13:	push   rax
   140010b14:	xchg   esi,eax
   140010b15:	ret    
   140010b16:	out    0x6b,eax
   140010b18:	lock or DWORD PTR [rcx-0x444bde49],0xb8518ac8
   140010b23:	sub    al,0x53
   140010b25:	rex.WB test BYTE PTR [r13+0x44ea012e],spl
   140010b2c:	and    BYTE PTR [rax+0x4cdb76c4],dh
   140010b32:	xchg   DWORD PTR [rsi-0x4636ffe3],eax
   140010b38:	jmp    0x160241a71
   140010b3d:	xor    eax,0x94d0afee
   140010b42:	sbb    al,0x86
   140010b44:	jmp    0xf0c3590a
   140010b49:	sbb    BYTE PTR [rcx*4-0x7aed6f2c],bl
   140010b50:	push   rbx
   140010b51:	test   eax,0x90f1f154
   140010b56:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010b57:	loope  0x140010b9f
   140010b59:	mov    ebp,0xa9a88d4a
   140010b5e:	pop    ax
   140010b60:	cmp    BYTE PTR [rdi-0xf],bh
   140010b63:	mov    ebx,0x6ec371ce
   140010b68:	push   rdi
   140010b69:	adc    esp,0x75
   140010b6c:	cwde   
   140010b6d:	retf   0xec2d
   140010b70:	xchg   ebx,eax
   140010b71:	jnp    0x140010b24
   140010b73:	pushf  
   140010b74:	push   rdi
   140010b75:	rcl    DWORD PTR [rax+rcx*1],cl
   140010b78:	rex.X and BYTE PTR [rsi-0x6d02dfef],al
   140010b7f:	gs jns 0x140010b28
   140010b82:	(bad)  
   140010b83:	(bad)  
   140010b84:	sub    cl,BYTE PTR [rcx]
   140010b86:	loopne 0x140010b1c
   140010b88:	or     al,0x4
   140010b8a:	jp     0x140010b7e
   140010b8c:	lahf   
   140010b8d:	(bad)  
   140010b8e:	cli    
   140010b8f:	xor    eax,DWORD PTR [rcx+0x38]
   140010b92:	ja     0x140010b52
   140010b94:	int3   
   140010b95:	rex.RXB sbb al,0x1c
   140010b98:	mov    ecx,0x22bea48c
   140010b9d:	xor    eax,DWORD PTR [rsi+0x7d]
   140010ba0:	(bad)  
   140010ba1:	pop    rbx
   140010ba2:	rex.RX out dx,eax
   140010ba4:	add    dl,BYTE PTR [rax+0x54]
   140010ba7:	jno    0x140010ba3
   140010ba9:	fidiv  WORD PTR [rdx]
   140010bab:	sti    
   140010bac:	xor    al,0xc8
   140010bae:	(bad)  
   140010baf:	cmovo  esi,DWORD PTR [rcx]
   140010bb2:	mov    bh,0x9f
   140010bb4:	(bad)
   140010bb7:	or     al,0xa
   140010bb9:	rcl    dl,cl
   140010bbb:	mov    edi,ebx
   140010bbd:	rex.B
   140010bbe:	rex.WR (bad) 
   140010bc0:	sbb    dh,al
   140010bc2:	rex.XB (bad) 
   140010bc4:	pop    rax
   140010bc5:	(bad)  
   140010bc6:	(bad)  
   140010bc8:	push   rdx
   140010bc9:	stos   DWORD PTR es:[rdi],eax
   140010bca:	lea    ecx,[rbx+0x41dbb80e]
   140010bd0:	push   0x461fe18f
   140010bd5:	fild   WORD PTR [rcx+rbx*4+0x62e0f591]
   140010bdc:	push   rsp
   140010bdd:	pop    rsp
   140010bde:	and    DWORD PTR [rsi+0x4e789a67],0x36a56188
   140010be8:	xor    ebp,ecx
   140010bea:	add    eax,0x3d3d1013
   140010bef:	jno    0x140010b8c
   140010bf1:	push   rbx
   140010bf2:	movabs ds:0x100b0a4dd42454a0,al
   140010bfb:	ins    DWORD PTR es:[rdi],dx
   140010bfc:	mov    cl,0xc5
   140010bfe:	rex.WRX test al,0x2f
   140010c01:	outs   dx,BYTE PTR ds:[rsi]
   140010c03:	out    dx,al
   140010c04:	pop    rsp
   140010c05:	add    cl,bl
   140010c07:	pop    QWORD PTR [rip+0x77f25c81]        # 0x1b7f3688e
   140010c0d:	xor    ah,al
   140010c0f:	fs enter 0xb1a,0xd
   140010c14:	ins    BYTE PTR es:[rdi],dx
   140010c15:	xchg   BYTE PTR [rbp+0x343d4e95],dh
   140010c1b:	mov    cl,0x27
   140010c1d:	movabs eax,ds:0x1b5027e9e3b16e92
   140010c26:	out    dx,eax
   140010c27:	and    al,0x85
   140010c29:	rex.R out dx,al
   140010c2b:	adc    DWORD PTR [rdi],ecx
   140010c2d:	push   rsp
   140010c2e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010c2f:	and    eax,0x11788a64
   140010c34:	rex.RXB
   140010c35:	addr32 jne 0x140010c1b
   140010c38:	out    0x78,al
   140010c3a:	rex.RXB xlat BYTE PTR ds:[rbx]
   140010c3c:	jae    0x140010bdc
   140010c3e:	fst    DWORD PTR [rbp-0x1ff54859]
   140010c44:	stc    
   140010c45:	(bad)  
   140010c46:	lahf   
   140010c47:	add    eax,0x663cf0e
   140010c4c:	xchg   ebp,eax
   140010c4d:	gs (bad) 
   140010c4f:	adc    al,BYTE PTR [rsi+0x4c]
   140010c52:	sbb    ah,BYTE PTR [rdx+rax*2-0x48]
   140010c56:	rcr    bh,1
   140010c58:	(bad)  
   140010c59:	jbe    0x140010bfe
   140010c5b:	(bad)  
   140010c5c:	loopne 0x140010c22
   140010c5e:	stos   BYTE PTR es:[rdi],al
   140010c5f:	fistp  WORD PTR [rbx+0x5a]
   140010c62:	outs   dx,DWORD PTR ds:[rsi]
   140010c63:	rex.WRXB movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140010c65:	add    bh,BYTE PTR [rdi]
   140010c67:	add    bl,bh
   140010c69:	push   rdx
   140010c6a:	hlt    
   140010c6b:	sti    
   140010c6c:	rcl    BYTE PTR [rdi+0x62],cl
   140010c6f:	mov    edi,0x1791fc66
   140010c74:	mov    cl,0x9f
   140010c76:	cmp    eax,0x98930c45
   140010c7b:	in     al,dx
   140010c7c:	sbb    al,0x21
   140010c7e:	iret   
   140010c7f:	pop    r9
   140010c81:	add    DWORD PTR [rsp-0x524c0824],esi
   140010c88:	xlat   BYTE PTR ds:[rbx]
   140010c89:	loop   0x140010c0c
   140010c8b:	icebp  
   140010c8c:	rex.WXB and BYTE PTR [r10+0x4],0xae
   140010c91:	push   0xffffffffa6ce74d7
   140010c96:	mov    eax,0x4a77529d
   140010c9b:	mov    dh,0xc1
   140010c9d:	mov    ch,0xf
   140010c9f:	cmp    DWORD PTR [rdi+0x4dc9afb1],esp
   140010ca5:	cmp    BYTE PTR [rcx],bh
   140010ca7:	(bad)  
   140010ca8:	lock jo 0x140010c6e
   140010cab:	pop    rdi
   140010cac:	or     cl,BYTE PTR [rbx+0x2c3abdac]
   140010cb2:	adc    BYTE PTR [rip+0xffffffffab1fd7ea],bl        # 0xeb20e4a2
   140010cb8:	shr    BYTE PTR [rbp-0x75],0xf2
   140010cbc:	push   rsp
   140010cbd:	xchg   edx,eax
   140010cbe:	or     cl,BYTE PTR [rsi-0x3164b6fc]
   140010cc4:	add    eax,0xfcc681fb
   140010cc9:	or     eax,0x1366181
   140010cce:	rex.RX in al,0x29
   140010cd1:	push   rcx
   140010cd2:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140010cd3:	mov    esi,ebx
   140010cd5:	int3   
   140010cd6:	iretw  
   140010cd8:	or     DWORD PTR [rdx+0x52],edx
   140010cdb:	movabs ds:0x36a38b27a58d7579,al
   140010ce4:	sub    edx,esi
   140010ce6:	(bad)  
   140010ce7:	(bad)  
   140010ce8:	out    dx,eax
   140010ce9:	popf   
   140010cea:	mov    ecx,0xf1eb532c
   140010cef:	jmp    0x13e790e1f
   140010cf4:	mov    edi,0x2bc0046
   140010cf9:	and    BYTE PTR [rdi],al
   140010cfb:	xchg   BYTE PTR [rdi],cl
   140010cfd:	cmp    DWORD PTR [rdx],0x99eb620c
   140010d03:	jbe    0x140010ccb
   140010d05:	(bad)  
   140010d06:	(bad)  
   140010d07:	rex.RX
   140010d08:	rex.RX (bad) 
   140010d0a:	add    ah,BYTE PTR [rax-0x70]
   140010d0d:	ss out 0xe4,eax
   140010d10:	or     DWORD PTR [rdx+0x5c5f65fe],0xe82b037e
   140010d1a:	cdq    
   140010d1b:	adc    al,0xf7
   140010d1d:	push   0x2073f6e4
   140010d22:	jo     0x140010ccc
   140010d24:	rex.RX xchg edi,eax
   140010d26:	xchg   ecx,eax
   140010d27:	rex.WXB movabs r9,0x40e56a0651032c95
   140010d31:	rol    edx,1
   140010d33:	popf   
   140010d34:	(bad)
   140010d37:	jmp    0x140010ce3
   140010d39:	out    0x80,eax
   140010d3b:	pop    rbx
   140010d3c:	sbb    eax,0x92d1de70
   140010d41:	sub    al,0xb
   140010d43:	and    DWORD PTR [rsi],esp
   140010d45:	or     esi,DWORD PTR [rsi]
   140010d47:	je     0x140010d41
   140010d49:	hlt    
   140010d4a:	sbb    BYTE PTR [rdi],ah
   140010d4c:	sti    
   140010d4d:	fcomi  st,st(1)
   140010d50:	ds leave 
   140010d52:	jle    0x140010d87
   140010d54:	mul    BYTE PTR [rbp+0x7738d1fb]
   140010d5a:	sar    DWORD PTR [rbx+0x2c],0x32
   140010d5e:	scas   al,BYTE PTR es:[rdi]
   140010d5f:	or     ebp,DWORD PTR [rbp+0x1e76c3e0]
   140010d65:	(bad)  
   140010d66:	xlat   BYTE PTR ds:[rbx]
   140010d67:	cmp    eax,0x71c11299
   140010d6c:	add    esp,DWORD PTR [rdi-0x701796a1]
   140010d72:	lods   eax,DWORD PTR ds:[rsi]
   140010d73:	test   eax,0x66a4cb03
   140010d78:	fsub   QWORD PTR [rax]
   140010d7a:	stos   BYTE PTR es:[rdi],al
   140010d7b:	rex.RX add al,0x86
   140010d7e:	out    0x0,al
   140010d80:	js     0x140010dbd
   140010d82:	enter  0xee0b,0xcf
   140010d86:	rex push rbp
   140010d88:	repnz fwait
   140010d8a:	sbb    ebp,ebx
   140010d8c:	movabs ds:0x6e5c001df9b9f941,al
   140010d95:	jb     0x140010dff
   140010d97:	jnp    0x140010e12
   140010d99:	outs   dx,DWORD PTR ds:[rsi]
   140010d9a:	scas   al,BYTE PTR es:[rdi]
   140010d9b:	xchg   edi,eax
   140010d9c:	sbb    eax,0x1327c9cd
   140010da1:	cmp    al,0xff
   140010da3:	(bad)  
   140010da4:	(bad)  
   140010da5:	ror    BYTE PTR [rbx+0x1],1
   140010da8:	sbb    ah,BYTE PTR [rdi+0x66]
   140010dab:	(bad)  
   140010dac:	mov    bl,BYTE PTR [rcx-0x735dfbeb]
   140010db2:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140010db3:	jno    0x140010d8b
   140010db5:	stc    
   140010db6:	stc    
   140010db7:	ins    DWORD PTR es:[rdi],dx
   140010db8:	add    dl,bl
   140010dba:	(bad)  
   140010dbb:	or     QWORD PTR [r10-0x23],rdx
   140010dbf:	xchg   DWORD PTR [rax+0x1e],edi
   140010dc2:	sbb    ah,cl
   140010dc4:	mov    esi,ecx
   140010dc6:	outs   dx,DWORD PTR ds:[rsi]
   140010dc7:	nop
   140010dc8:	and    al,0xf9
   140010dca:	add    al,0x35
   140010dcc:	cld    
   140010dcd:	xchg   ebp,eax
   140010dce:	sbb    dh,cl
   140010dd0:	(bad)  
   140010dd1:	add    bh,BYTE PTR [rax+0x3def13af]
   140010dd7:	pushf  
   140010dd8:	sbb    DWORD PTR [rbp*4-0x47b6e499],eax
   140010ddf:	(bad)  
   140010de0:	ja     0x140010d87
   140010de2:	stos   BYTE PTR es:[rdi],al
   140010de3:	iret   
   140010de4:	ins    BYTE PTR es:[rdi],dx
   140010de5:	jno    0x140010e05
   140010de7:	outs   dx,BYTE PTR ds:[rsi]
   140010de8:	pushf  
   140010de9:	cld    
   140010dea:	sbb    DWORD PTR [rax],esp
   140010dec:	outs   dx,DWORD PTR ds:[rsi]
   140010ded:	xor    ebx,0xffffffd1
   140010df0:	pop    rax
   140010df1:	leave  
   140010df2:	xchg   edi,eax
   140010df3:	test   eax,0x182dd9ce
   140010df8:	(bad)  
   140010df9:	(bad)  
   140010dfa:	(bad)  
   140010dfb:	cwde   
   140010dfc:	rex.RX movabs ds:0x12235205b6a45275,eax
   140010e07:	(bad)  
   140010e08:	jmp    0x140010ddc
   140010e0a:	add    eax,0x8b82dd10
   140010e0f:	pushf  
   140010e10:	(bad)  
   140010e11:	and    edi,ebx
   140010e13:	fwait
   140010e14:	jo     0x140010e4a
   140010e16:	mov    BYTE PTR [rbp+0x22],bh
   140010e19:	rex.R out dx,eax
   140010e1b:	push   rbx
   140010e1c:	push   cx
   140010e1e:	sub    eax,0xfcc4c302
   140010e23:	rex.RB ins DWORD PTR es:[rdi],dx
   140010e25:	es mov esp,0x929bbc70
   140010e2b:	fld    QWORD PTR [rdx-0x4af32a85]
   140010e31:	and    ch,BYTE PTR [rbx+0x10]
   140010e34:	(bad)  
   140010e35:	mov    dh,0xa
   140010e37:	scas   eax,DWORD PTR es:[rdi]
   140010e38:	pop    rdi
   140010e39:	mov    rcx,QWORD PTR [rbp+0x62]
   140010e3d:	rex.R
   140010e3e:	lock push rax
   140010e40:	movabs ds:0x18a9bc6b915f43d5,eax
   140010e49:	jb     0x140010e15
   140010e4b:	movabs ds:0x5ce00d5d15cd0a70,al
   140010e54:	mov    al,ah
   140010e56:	fs add eax,0x10239d7f
   140010e5c:	jno    0x140010e1e
   140010e5e:	pop    rcx
   140010e5f:	std    
   140010e60:	in     eax,dx
   140010e61:	enter  0x9a5b,0xb5
   140010e65:	out    0x83,eax
   140010e67:	and    BYTE PTR [rdx-0x5a625929],bh
   140010e6d:	jbe    0x140010e5c
   140010e6f:	in     eax,0x52
   140010e71:	and    edi,edx
   140010e73:	xchg   edx,eax
   140010e74:	retf   0xcc3e
   140010e77:	mov    al,0x60
   140010e79:	(bad)  
   140010e7a:	mov    cl,0x1
   140010e7c:	sbb    bh,ah
   140010e7e:	ja     0x140010ee0
   140010e80:	(bad)  
   140010e81:	jp     0x140010ec2
   140010e83:	mov    ecx,0x10b79c0c
   140010e88:	mov    dl,0x36
   140010e8a:	nop
   140010e8b:	mov    ch,0xe0
   140010e8d:	repz push rbp
   140010e8f:	clc    
   140010e90:	rcr    al,0x36
   140010e93:	jo     0x140010f10
   140010e95:	adc    al,0x3e
   140010e97:	(bad)  
   140010e98:	add    DWORD PTR [rbx+0x51],ebp
   140010e9b:	setnp  BYTE PTR [rbx+0x11378b94]
   140010ea2:	ror    DWORD PTR [rax],cl
   140010ea4:	mov    edi,0x4758ed51
   140010ea9:	add    al,0x1a
   140010eab:	lock rcr DWORD PTR [rax+0x50],cl
   140010eaf:	xor    eax,0x5fb8dfae
   140010eb4:	jge    0x140010f2e
   140010eb6:	stos   BYTE PTR es:[rdi],al
   140010eb7:	jrcxz  0x140010ee2
   140010eb9:	sub    al,0x47
   140010ebb:	xor    bl,BYTE PTR [rax+0x6a]
   140010ebe:	push   rcx
   140010ec0:	sahf   
   140010ec1:	mov    ebx,0xb429c18
   140010ec6:	imul   edx,DWORD PTR [rcx+0x48],0xffffff99
   140010eca:	mov    bh,0x71
   140010ecc:	push   QWORD PTR [rax]
   140010ece:	in     al,0x78
   140010ed0:	cli    
   140010ed1:	mov    ecx,0x44e74740
   140010ed6:	push   rdx
   140010ed7:	outs   dx,DWORD PTR ds:[rsi]
   140010ed8:	sbb    al,0xa3
   140010eda:	fs imul esi,DWORD PTR ss:[rdi-0x29],0xb
   140010ee0:	(bad)  
   140010ee1:	and    BYTE PTR [rdi-0x3d],dh
   140010ee4:	fist   DWORD PTR [rcx+0x13]
   140010ee7:	(bad)  
   140010ee8:	sbb    bl,BYTE PTR [rsi+rdi*2-0x10b9dc7f]
   140010eef:	ret    
   140010ef0:	xchg   ecx,eax
   140010ef1:	add    esi,ecx
   140010ef3:	push   rcx
   140010ef4:	test   eax,0x3cc4a7f5
   140010ef9:	jns    0x140010ef9
   140010efb:	popf   
   140010efc:	sub    eax,0xd9559e00
   140010f01:	push   rcx
   140010f02:	test   DWORD PTR [rcx+0x3a],eax
   140010f05:	and    ah,BYTE PTR [rdx]
   140010f07:	adc    cl,BYTE PTR [rbx-0x22295906]
   140010f0d:	mov    BYTE PTR [rcx+0x54],ah
   140010f10:	in     al,dx
   140010f11:	mov    ch,0x98
   140010f13:	out    0x0,eax
   140010f15:	sbb    al,0x7a
   140010f17:	retf   0xcbf5
   140010f1a:	sub    ah,al
   140010f1c:	xchg   DWORD PTR [rip+0xfffffffffb683fbe],esi        # 0x13b694ee0
   140010f22:	scas   al,BYTE PTR es:[rdi]
   140010f23:	jns    0x140010f2b
   140010f25:	jnp    0x140010f4e
   140010f27:	movabs ds:0x3828131fd7127bf,al
   140010f30:	addr32 cdq 
   140010f32:	test   dl,bh
   140010f34:	add    ax,0x93a8
   140010f38:	add    ebp,ebp
   140010f3a:	(bad)  
   140010f3b:	outs   dx,BYTE PTR ds:[rsi]
   140010f3c:	call   0x1b40f323d
   140010f41:	xlat   BYTE PTR ds:[rbx]
   140010f42:	ret    
   140010f43:	(bad)  
   140010f44:	movabs ds:0xc4dae27a798a42a0,eax
   140010f4d:	sbb    BYTE PTR [rdi],al
   140010f4f:	pop    rdi
   140010f50:	(bad)  
   140010f51:	int3   
   140010f52:	adc    edx,0xffffff9d
   140010f55:	mov    eax,0x880891cd
   140010f5a:	cwde   
   140010f5b:	(bad)  
   140010f5c:	pushf  
   140010f5d:	js     0x140010f23
   140010f5f:	jmp    0x140010fb4
   140010f61:	push   rcx
   140010f62:	xor    bl,ch
   140010f64:	pop    QWORD PTR [rbp+0x4177d3fb]
   140010f6a:	jrcxz  0x140010f08
   140010f6c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010f6d:	mov    dh,0x17
   140010f6f:	fistp  QWORD PTR [rcx-0x1e]
   140010f72:	loopne 0x140010fe8
   140010f74:	mov    bl,0x7
   140010f76:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140010f77:	nop
   140010f78:	(bad)  
   140010f79:	or     DWORD PTR [rip+0x44e5ac13],eax        # 0x184e6bb92
   140010f7f:	mov    cl,0xfb
   140010f81:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140010f82:	scas   rax,QWORD PTR es:[rdi]
   140010f84:	sti    
   140010f85:	(bad)  
   140010f86:	cmc    
   140010f87:	nop
   140010f88:	sub    bh,bh
   140010f8a:	or     esi,eax
   140010f8c:	mov    edx,DWORD PTR [rdx]
   140010f8e:	sub    DWORD PTR [rax+0xf],edx
   140010f91:	jmp    0x140011012
   140010f93:	test   eax,0xbe0b005f
   140010f98:	movntps XMMWORD PTR [rcx],xmm6
   140010f9b:	pop    rsp
   140010f9c:	cmp    eax,0xe6454193
   140010fa1:	add    BYTE PTR [rsi],ah
   140010fa3:	xor    BYTE PTR [rsi-0x72],al
   140010fa6:	lock jae 0x140011014
   140010fa9:	lock test al,0x13
   140010fac:	add    bh,cl
   140010fae:	push   QWORD PTR [rbp-0x1a9d1000]
   140010fb4:	cli    
   140010fb5:	and    DWORD PTR [rdx+0x44c00365],ebx
   140010fbb:	add    eax,0xc1e2e881
   140010fc0:	cmovno ebp,DWORD PTR [rip+0xffffffffefc5b302]        # 0x12fc6c2c9
   140010fc7:	iret   
   140010fc8:	test   eax,0x90abdf9e
   140010fcd:	fiadd  WORD PTR [rdx+0x7d]
   140010fd0:	cmp    DWORD PTR [rax],eax
   140010fd2:	adc    DWORD PTR [rax],0xfffffff5
   140010fd5:	jg     0x140010fc9
   140010fd7:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010fd8:	mov    eax,0x935782ff
   140010fdd:	sub    eax,DWORD PTR [rcx-0x2e]
   140010fe0:	mov    bh,0x72
   140010fe2:	pop    rax
   140010fe3:	jbe    0x140011004
   140010fe5:	gs cmp eax,edx
   140010fe8:	(bad)  
   140010fe9:	cmp    DWORD PTR [rbp+rcx*4+0x710bdd9b],0xe815d8c7
   140010ff4:	(bad)  
   140010ff5:	movabs ds:0x2ebba9bd6133e452,eax
   140010ffe:	add    bl,BYTE PTR [rbx-0x39645048]
   140011004:	stc    
   140011005:	xchg   ebx,eax
   140011006:	jae    0x140011055
   140011008:	xor    BYTE PTR [r15+0x40],r9b
   14001100c:	xchg   ebx,eax
   14001100d:	jrcxz  0x140011056
   14001100f:	jne    0x140010f91
   140011011:	(bad)  
   140011012:	rex.WX add al,bl
   140011015:	mov    al,al
   140011017:	mov    al,0xed
   140011019:	es sub al,0x49
   14001101c:	(bad)  
   14001101d:	xchg   esi,eax
   14001101e:	cmp    esp,0x341f4ac7
   140011024:	(bad)  
   140011025:	repz xchg esp,eax
   140011027:	and    DWORD PTR [rsi-0x63a3d098],0x5ffad1c1
   140011031:	int    0x6f
   140011033:	push   0xffffffffb75c985e
   140011038:	(bad)  
   140011039:	cmp    al,0x74
   14001103b:	xor    BYTE PTR [rbx-0x1d],ch
   14001103e:	sbb    esi,DWORD PTR [rbp*4+0x638233d7]
   140011045:	shl    BYTE PTR [rax],1
   140011047:	retf   0x10bc
   14001104a:	(bad)  
   14001104b:	and    eax,DWORD PTR [rsi+rax*4]
   14001104e:	fs mov cl,0xb3
   140011051:	test   BYTE PTR [rdi+rbp*1],bl
   140011054:	pushf  
   140011055:	je     0x1400110b2
   140011057:	fs (bad) 
   140011059:	mov    edx,0x8efdc6a6
   14001105e:	(bad)  
   14001105f:	rcr    BYTE PTR [rsi],cl
   140011061:	jne    0x140011065
   140011063:	add    al,ah
   140011065:	mov    DWORD PTR [rax],0xbaf4409a
   14001106b:	fisubr DWORD PTR [rax-0x36e216f6]
   140011071:	cli    
   140011072:	outs   dx,BYTE PTR ds:[rsi]
   140011073:	in     eax,dx
   140011074:	call   0x1836d0376
   140011079:	nop
   14001107a:	xor    BYTE PTR [rdx],ch
   14001107c:	(bad)  
   14001107d:	(bad)  
   14001107e:	lock cmp al,0x50
   140011081:	(bad)  
   140011082:	rex mov esi,0x52bfae2f
   140011088:	sub    edi,esp
   14001108a:	clc    
   14001108b:	rex.R out dx,eax
   14001108d:	mov    bh,0xc
   14001108f:	(bad)  
   140011090:	data16 int 0x10
   140011093:	mul    BYTE PTR [rax-0x189e70e0]
   140011099:	xor    al,0xd2
   14001109b:	(bad)  
   14001109c:	rex.RXB push 0xffffffff85a281b7
   1400110a2:	(bad)  
   1400110a4:	gs clc 
   1400110a6:	in     al,0xe4
   1400110a8:	sub    esp,eax
   1400110aa:	pop    rbx
   1400110ab:	pop    rbp
   1400110ac:	jo     0x1400110ec
   1400110ae:	add    cl,dh
   1400110b0:	(bad)  
   1400110b1:	push   rbp
   1400110b2:	jge    0x140011086
   1400110b4:	fsubr  QWORD PTR [rbx+rdx*1]
   1400110b7:	idiv   DWORD PTR [rcx]
   1400110b9:	fldcw  WORD PTR [rdi-0x6c]
   1400110bc:	jge    0x140011056
   1400110be:	push   0xffffffffc3db218f
   1400110c3:	mov    WORD PTR [rbp+0x602242c0],es
   1400110c9:	sbb    eax,ebx
   1400110cb:	adc    BYTE PTR [rbx+0x59],ch
   1400110ce:	add    al,0x22
   1400110d0:	jns    0x140011073
   1400110d2:	xchg   ebx,eax
   1400110d3:	movabs eax,ds:0xef1cbf88ba3c040a
   1400110dc:	(bad)
   1400110df:	sbb    eax,0xf7a56e5b
   1400110e4:	imul   esi,DWORD PTR [rax-0x9],0x6708a9f8
   1400110eb:	(bad)  
   1400110ed:	mov    edx,0xf4b31174
   1400110f2:	add    ah,dl
   1400110f4:	cmp    edx,esi
   1400110f6:	or     BYTE PTR [rdx+0x22],al
   1400110f9:	out    0x1b,al
   1400110fb:	xor    DWORD PTR [rax-0x59472862],ebp
   140011101:	out    0xe6,al
   140011103:	(bad)  
   140011104:	nop
   140011105:	xor    dx,WORD PTR [rdx]
   140011108:	test   al,0x26
   14001110a:	sub    eax,0x4e40dd58
   14001110f:	jne    0x14001111f
   140011111:	cmp    eax,0x60f4da4e
   140011116:	ret    
   140011117:	jmp    0x1400110f8
   140011119:	fucomi st,st(4)
   14001111b:	addr32 mov edx,0x4aa3c28
   140011121:	shl    bl,0xff
   140011124:	jge    0x140011127
   140011126:	rex xchg edi,eax
   140011128:	rex.X call 0x135458ac6
   14001112e:	cmp    esi,DWORD PTR [rbx]
   140011130:	cmp    DWORD PTR [rdi+riz*4-0x6688488c],eax
   140011137:	pop    rdx
   140011138:	(bad)  
   140011139:	(bad)  
   14001113a:	jrcxz  0x1400110bd
   14001113c:	clc    
   14001113d:	sti    
   14001113e:	rex.XB (bad) 
   140011140:	sbb    BYTE PTR [rax],ch
   140011142:	ret    0x9307
   140011145:	or     bh,BYTE PTR [rax-0x58]
   140011148:	fisubr WORD PTR [rdi]
   14001114a:	xlat   BYTE PTR ds:[rbx]
   14001114b:	sbb    DWORD PTR [rsi],eax
   14001114d:	xchg   rsp,rax
   14001114f:	and    eax,DWORD PTR ds:[rdi]
   140011152:	addr32 mov ecx,0xa0e7f9c6
   140011158:	sub    al,0x47
   14001115a:	cdq    
   14001115b:	scas   eax,DWORD PTR es:[rdi]
   14001115c:	(bad)  
   14001115d:	pop    rdi
   14001115e:	mov    ?,WORD PTR [rbp+0x50779c11]
   140011164:	movabs ds:0xa592666f81922042,ax
   14001116e:	enter  0xbf1a,0x33
   140011172:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140011173:	mov    eax,0xdb1ce0b6
   140011178:	test   BYTE PTR [rbx-0x7674fe58],0x7f
   14001117f:	mov    ebx,DWORD PTR [rbp-0x567cf74d]
   140011185:	adc    DWORD PTR [rbp+0x7ea2193],edx
   14001118b:	pushf  
   14001118c:	jl     0x140011132
   14001118e:	(bad)  
   14001118f:	push   rsi
   140011190:	xchg   edi,eax
   140011191:	in     al,0x92
   140011193:	xor    BYTE PTR [rbx+rax*1-0x5aebab65],al
   14001119a:	movabs ds:0x544d04157bf5bf64,eax
   1400111a3:	rol    dh,0x98
   1400111a6:	retf   0x1cb5
   1400111a9:	or     DWORD PTR [rax-0x42ec0907],ecx
   1400111af:	pop    rsp
   1400111b0:	inc    BYTE PTR [rip+0xffffffffcf4a54a0]        # 0x10f4b6656
   1400111b6:	add    DWORD PTR [rdx],edx
   1400111b8:	pop    rcx
   1400111b9:	cdq    
   1400111ba:	mov    al,BYTE PTR [rax+0x5e38be71]
   1400111c0:	gs mov ebp,0xe5e34328
   1400111c6:	push   0x5c
   1400111c8:	lahf   
   1400111c9:	add    BYTE PTR [rax+0x66],bh
   1400111cc:	xchg   esi,eax
   1400111cd:	(bad)  
   1400111ce:	cli    
   1400111cf:	pop    rbp
   1400111d0:	out    dx,eax
   1400111d1:	jnp    0x1400111be
   1400111d3:	adc    DWORD PTR [rdx],esi
   1400111d5:	(bad)  
   1400111d6:	sub    bh,BYTE PTR [rax-0x2c]
   1400111d9:	or     BYTE PTR [rax+0x5d6ffe7],al
   1400111df:	jo     0x14001118e
   1400111e1:	cli    
   1400111e2:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400111e3:	(bad)  
   1400111e4:	push   rbx
   1400111e5:	adc    eax,DWORD PTR [rax]
   1400111e7:	movabs ds:0x42c1ed6c6ce1f9f5,al
   1400111f0:	mov    al,0xaf
   1400111f2:	(bad)  
   1400111f3:	and    BYTE PTR [rdi-0x774d8362],bl
   1400111f9:	(bad)  
   1400111fa:	pop    rsp
   1400111fb:	sub    al,BYTE PTR [rcx]
   1400111fd:	add    ah,0xfb
   140011200:	jae    0x14001122b
   140011202:	cli    
   140011203:	mov    ebp,0x4ee50318
   140011208:	mov    cl,0xac
   14001120a:	(bad)  
   14001120b:	add    eax,DWORD PTR [rcx]
   14001120d:	test   DWORD PTR [rax+rdi*8+0x31],esp
   140011211:	add    DWORD PTR [rcx-0x7f],edi
   140011214:	shr    ch,1
   140011216:	sbb    bl,0x5d
   140011219:	cld    
   14001121a:	jne    0x140011207
   14001121c:	push   rdi
   14001121d:	xor    bl,bl
   14001121f:	(bad)  
   140011220:	rex (bad) 
   140011223:	xchg   edx,eax
   140011224:	pop    rsi
   140011225:	fs es pushf 
   140011228:	jp     0x140011234
   14001122a:	scas   al,BYTE PTR es:[rdi]
   14001122b:	jno    0x140011226
   14001122d:	xchg   esp,eax
   14001122e:	fwait
   14001122f:	(bad)  
   140011230:	adc    al,0x90
   140011232:	outs   dx,BYTE PTR ds:[rsi]
   140011233:	imul   ebx,DWORD PTR [rbp-0x2f],0x5
   140011237:	xchg   edx,eax
   140011238:	rex mov esp,0x6b0ab247
   14001123e:	(bad)
   140011242:	jrcxz  0x140011294
   140011244:	out    0x60,eax
   140011246:	div    BYTE PTR [rbp+0x4a901b19]
   14001124c:	or     ecx,DWORD PTR [rbx+0x21]
   14001124f:	(bad)  
   140011250:	rcl    eax,1
   140011252:	add    al,0x1b
   140011254:	ret    0x9b47
   140011257:	retf   
   140011258:	(bad)  
   140011259:	or     DWORD PTR [rsi],edx
   14001125b:	and    eax,0x18e43c18
   140011260:	adc    ebx,DWORD PTR [rdx+0x62537f7a]
   140011266:	rex.WX movabs ds:0x412c0c82ef52cc04,rax
   140011270:	clc    
   140011271:	rex.WXB push r12
   140011273:	retf   
   140011274:	fwait
   140011275:	add    al,0x81
   140011277:	push   rcx
   140011278:	pop    rcx
   140011279:	add    DWORD PTR [rbx+0x58],0x30
   14001127d:	ja     0x140011290
   14001127f:	cdq    
   140011280:	imul   ecx,DWORD PTR [rbx],0x43
   140011283:	cs or  al,0x89
   140011286:	sub    BYTE PTR [rax-0x4d],bl
   140011289:	or     bl,al
   14001128b:	rex.RXB mov BYTE PTR [r15],r12b
   14001128e:	(bad)  
   14001128f:	xor    al,0x47
   140011291:	(bad)  
   140011292:	push   rax
   140011293:	ins    BYTE PTR es:[rdi],dx
   140011294:	(bad)  
   140011295:	xchg   ecx,ebx
   140011297:	loope  0x14001129c
   140011299:	xor    DWORD PTR [rsi+rbx*1],ebx
   14001129c:	or     r8,r12
   14001129f:	mov    DWORD PTR [rcx],0x6a659f52
   1400112a5:	movsxd esp,DWORD PTR [rdi]
   1400112a7:	mov    BYTE PTR [rdi+0xe],cl
   1400112aa:	mov    eax,0x319ef262
   1400112af:	jo     0x1400112d2
   1400112b1:	enter  0xa26f,0x7f
   1400112b5:	int3   
   1400112b6:	in     al,dx
   1400112b7:	xor    edi,DWORD PTR [rdi-0x41]
   1400112ba:	xchg   dl,bh
   1400112bc:	xchg   esi,eax
   1400112bd:	add    DWORD PTR [rax],ebx
   1400112bf:	js     0x140011292
   1400112c1:	cmc    
   1400112c2:	jnp    0x1400112e9
   1400112c4:	js     0x1400112e6
   1400112c6:	or     DWORD PTR [rsi],edi
   1400112c8:	movabs ds:0xcb83820e47ba5836,al
   1400112d1:	pushf  
   1400112d2:	(bad)  
   1400112d3:	jmp    0x140011344
   1400112d5:	rex.WB ror r15b,1
   1400112d8:	mov    edi,0xcf714bd0
   1400112dd:	call   0x14ba3f327
   1400112e2:	fs xchg edx,eax
   1400112e4:	fistp  DWORD PTR [rdi]
   1400112e6:	jne    0x1400112de
   1400112e8:	in     al,0x85
   1400112ea:	push   rbx
   1400112eb:	fs (bad) 
   1400112ed:	fimul  DWORD PTR es:[rdi]
   1400112f0:	jae    0x1400112e1
   1400112f2:	(bad)  
   1400112f3:	hlt    
   1400112f4:	jnp    0x14001130b
   1400112f6:	rex.WRX sub al,0x53
   1400112f9:	sub    eax,0x525c1224
   1400112fe:	adc    DWORD PTR [rdx-0x7dd3d952],ebp
   140011304:	lods   eax,DWORD PTR ds:[rsi]
   140011305:	mov    esp,DWORD PTR [rcx]
   140011307:	(bad)  
   140011308:	sar    dl,1
   14001130a:	or     ebx,0xffffff84
   14001130d:	movabs es:0x42c052b47ec8da3f,al
   140011317:	rex.R
   140011318:	rex.WRXB mov gs,WORD PTR [r9-0x28569328]
   14001131f:	(bad)  
   140011320:	rcl    edi,1
   140011322:	hlt    
   140011323:	mov    cl,0xdb
   140011325:	or     ah,BYTE PTR [rax+rax*1+0xe]
   140011329:	push   rbp
   14001132a:	fs pop rsi
   14001132c:	or     cl,ch
   14001132e:	jno    0x1400112e5
   140011330:	and    DWORD PTR [rax],eax
   140011332:	rex.XB xchg r8d,eax
   140011334:	pop    rbx
   140011335:	scas   eax,DWORD PTR es:[rdi]
   140011336:	addr32 and esi,esi
   140011339:	(bad)  
   14001133a:	xor    BYTE PTR [rsi],bl
   14001133c:	imul   eax,DWORD PTR [rdx+0x1b],0x94d092b8
   140011343:	shl    BYTE PTR [rbx],0x41
   140011346:	or     al,0xd4
   140011348:	test   al,0x6e
   14001134a:	(bad)  
   14001134b:	add    eax,0x47bf9a60
   140011350:	outs   dx,DWORD PTR ds:[rsi]
   140011351:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011352:	add    al,0x1
   140011354:	or     BYTE PTR [rbp+0x7c317ad7],ah
   14001135a:	push   rsp
   14001135b:	sub    eax,0x2151fe5
   140011360:	loopne 0x14001135b
   140011362:	(bad)  
   140011363:	mov    ecx,0x65f3a014
   140011368:	sub    ebp,DWORD PTR [rdx]
   14001136a:	xor    edx,DWORD PTR [rip+0x340a26ad]        # 0x1740b3a1d
   140011370:	fnstsw WORD PTR [rbx+0x17eb18ac]
   140011376:	(bad)
   14001137b:	shr    DWORD PTR [rdi-0x2a5f7edc],cl
   140011381:	jl     0x1400113ce
   140011383:	(bad)  
   140011384:	in     eax,0xbd
   140011386:	mov    ch,0x49
   140011388:	(bad)  
   140011389:	stos   DWORD PTR es:[rdi],eax
   14001138a:	inc    BYTE PTR [rsp+rbx*1+0x40]
   14001138e:	and    eax,eax
   140011390:	sti    
   140011391:	rex.WR (bad) 
   140011393:	push   rdx
   140011394:	jae    0x140011390
   140011396:	xor    eax,DWORD PTR [rdi]
   140011398:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140011399:	pop    rsp
   14001139a:	xor    bh,ah
   14001139c:	mov    dl,BYTE PTR [rsi]
   14001139e:	jbe    0x140011385
   1400113a0:	xchg   edi,eax
   1400113a1:	loopne 0x1400113d6
   1400113a3:	movabs ds:0xec1b5908daca093f,eax
   1400113ac:	pop    rsp
   1400113ad:	xor    eax,0x1d510db8
   1400113b2:	push   rax
   1400113b3:	(bad)  
   1400113b4:	popf   
   1400113b5:	rex.W add spl,BYTE PTR [rip+0x3d394914]        # 0x17d3a5cd0
   1400113bc:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400113bd:	loop   0x1400113b3
   1400113bf:	movabs rsi,0xa9fa0d26bd3e24d7
   1400113c9:	jno    0x140011448
   1400113cb:	std    
   1400113cc:	scas   eax,DWORD PTR es:[rdi]
   1400113cd:	push   rsi
   1400113ce:	push   rdx
   1400113cf:	sub    al,0x65
   1400113d1:	sbb    al,0xe9
   1400113d3:	std    
   1400113d4:	fwait
   1400113d5:	adc    DWORD PTR [rbp-0x35],eax
   1400113d8:	adc    BYTE PTR [rax+rdx*4-0x7026f6e3],0xf2
   1400113e0:	(bad)  
   1400113e1:	(bad)  
   1400113e2:	ds sub al,0xf2
   1400113e5:	sbb    DWORD PTR [rdx-0x48b2805e],0xffffff86
   1400113ec:	and    DWORD PTR [rbp+0x7d],edx
   1400113ef:	shl    BYTE PTR [rip+0x1239cf5],1        # 0x14124b0ea
   1400113f5:	and    DWORD PTR [rsi-0x291ab10f],edx
   1400113fb:	nop
   1400113fc:	rex.WR jl 0x140011407
   1400113ff:	leave  
   140011400:	in     eax,0x1
   140011402:	movabs al,ds:0xf8a935d5cf3cf1c0
   14001140b:	(bad)  
   14001140c:	adc    al,0xa2
   14001140e:	ror    DWORD PTR [rdi-0x79d73ab0],1
   140011414:	nop
   140011415:	retf   0x409f
   140011418:	add    ch,al
   14001141a:	cmc    
   14001141b:	push   rdx
   14001141c:	std    
   14001141d:	es cmp eax,0x4aaf7bd7
   140011423:	retf   0xe5c1
   140011426:	paddq  mm4,QWORD PTR [rbx-0xc3ffc0]
   14001142d:	test   DWORD PTR [rcx],0x4d41cf00
   140011433:	cmp    BYTE PTR [rbx-0x75],cl
   140011436:	sub    ebp,DWORD PTR [rbx-0x69]
   140011439:	hlt    
   14001143a:	loop   0x14001142c
   14001143c:	mov    bl,0xc0
   14001143e:	cdq    
   14001143f:	jb     0x1400114b9
   140011441:	xor    eax,0x2fe719f4
   140011446:	rex.WXB jo 0x140011475
   140011449:	out    dx,eax
   14001144a:	gs int 0x3a
   14001144d:	and    eax,0x83e69fbe
   140011452:	(bad)  
   140011454:	mov    BYTE PTR [rsi+0xe],bl
   140011457:	or     al,0x46
   140011459:	(bad)  
   14001145a:	jbe    0x140011436
   14001145c:	mov    edx,0xde7039db
   140011461:	(bad)  
   140011462:	mov    dl,0x2
   140011464:	ds pop rbx
   140011466:	mov    edi,DWORD PTR [rdi]
   140011468:	outs   dx,DWORD PTR ds:[rsi]
   140011469:	mov    ebp,0x940bc801
   14001146e:	jns    0x1400114c5
   140011470:	int    0x37
   140011472:	mov    bl,BYTE PTR [rsi+0x9]
   140011475:	xchg   edi,eax
   140011476:	mov    BYTE PTR [rax-0x39],cl
   140011479:	or     eax,0x6c0bd524
   14001147e:	mov    ebp,0x6db639d9
   140011483:	(bad)  
   140011484:	lahf   
   140011485:	or     ebp,DWORD PTR [rbx+rdi*8+0x45e1f76]
   14001148c:	stc    
   14001148d:	xchg   BYTE PTR [rip+0x513fb927],bh        # 0x19140cdba
   140011493:	and    eax,0x74b90c4d
   140011498:	shl    esi,0xf1
   14001149b:	jb     0x140011494
   14001149d:	rex.RXB mov r9d,DWORD PTR [r8]
   1400114a0:	sbb    al,0x95
   1400114a2:	adc    al,0xd0
   1400114a4:	and    BYTE PTR [rax+0x4bb0e0b],bl
   1400114aa:	icebp  
   1400114ab:	cmp    DWORD PTR [rcx+0x75],ebx
   1400114ae:	jp     0x14001147d
   1400114b0:	(bad)  
   1400114b1:	ret    0x262d
   1400114b4:	xchg   ecx,eax
   1400114b5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400114b6:	ds pop rdi
   1400114b8:	movabs al,ds:0x9e0e35764aa4c8ca
   1400114c1:	pop    rsi
   1400114c2:	rex.RXB add BYTE PTR [r10+0x689bb145],r8b
   1400114c9:	movabs al,ds:0x41b92491300f62b7
   1400114d2:	(bad)  
   1400114d3:	rex.WRXB xchg r10,rax
   1400114d5:	movabs ds:0x9187c9b5376cd7b,al
   1400114de:	shl    BYTE PTR [rdi-0xf],1
   1400114e1:	(bad)  
   1400114e2:	sbb    dh,dl
   1400114e4:	jge    0x140011521
   1400114e6:	jae    0x1400114c7
   1400114e8:	xchg   ecx,eax
   1400114e9:	(bad)  
   1400114ea:	stos   BYTE PTR es:[rdi],al
   1400114eb:	(bad)  
   1400114ec:	rex.RXB xchg r12d,eax
   1400114ee:	add    BYTE PTR [rax-0x2],bh
   1400114f1:	cmp    eax,0x2205e007
   1400114f6:	cli    
   1400114f7:	rex.RXB xchg r9d,eax
   1400114f9:	(bad)  
   1400114fa:	sbb    DWORD PTR [rsi],ebp
   1400114fc:	fld    DWORD PTR [rdi-0x5]
   1400114ff:	addr32 sahf 
   140011501:	rex.WR sub rax,0xffffffff9607124c
   140011507:	pop    rax
   140011508:	(bad)  
   140011509:	mov    ecx,0x425fc2c4
   14001150e:	bnd call rbp
   140011511:	(bad)  
   140011512:	iret   
   140011513:	rex.WX jbe 0x140011593
   140011516:	add    ch,dh
   140011518:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011519:	or     BYTE PTR cs:[rax+0x4080efe],0xe
   140011521:	pop    rdx
   140011522:	int3   
   140011523:	xchg   ebx,eax
   140011524:	or     al,cl
   140011526:	xor    al,BYTE PTR [rcx-0x2]
   140011529:	rex.WRX (bad) 
   14001152b:	push   0xffffffffffffffb5
   14001152d:	lock xchg edi,eax
   14001152f:	fldcw  WORD PTR [rdi]
   140011531:	loope  0x1400115a3
   140011533:	imul   edx,DWORD PTR [rip+0xfffffffffdb92e42],0xffffffa9        # 0x13dba437c
   14001153a:	(bad)  
   14001153b:	(bad)  
   14001153d:	mov    WORD PTR [rbp+rbx*8+0x10],es
   140011541:	xor    esi,DWORD PTR [rax-0x2c]
   140011544:	sti    
   140011545:	or     eax,0x5ce37d99
   14001154a:	mov    eax,DWORD PTR [rdi]
   14001154c:	xor    BYTE PTR [rsi+rbp*2+0x46],ch
   140011550:	or     esp,DWORD PTR [rsi+0x236936f7]
   140011556:	cmp    DWORD PTR [rbp-0x397308ca],edi
   14001155c:	mov    esi,0x661f42c6
   140011561:	in     eax,0x56
   140011563:	movabs eax,ds:0x718d2168e2355168
   14001156c:	(bad)  
   14001156d:	(bad)  
   14001156e:	jg     0x140011539
   140011570:	iret   
   140011571:	pop    rcx
   140011572:	(bad)  
   140011573:	xchg   esp,eax
   140011574:	and    DWORD PTR [rdi+0x20940a2c],edx
   14001157a:	test   al,0x8d
   14001157c:	imul   ebx,DWORD PTR [rdx-0x68c4ac8c],0x1b
   140011583:	cli    
   140011584:	jle    0x140011580
   140011586:	mov    al,0xc6
   140011588:	std    
   140011589:	push   rsp
   14001158a:	rex.X (bad) 
   14001158c:	mov    edi,DWORD PTR [rsi-0x13772352]
   140011592:	(bad)  
   140011593:	xor    DWORD PTR [rsi+0x3caca5cb],0xead1acc7
   14001159d:	fst    DWORD PTR [rdx-0x27]
   1400115a0:	xchg   DWORD PTR [rax],eax
   1400115a2:	push   rax
   1400115a3:	or     BYTE PTR [rax],ah
   1400115a5:	stos   DWORD PTR es:[rdi],eax
   1400115a6:	rex.WRX add rax,0xffffffffb9e4cb80
   1400115ac:	xor    ebp,r15d
   1400115af:	pop    rdx
   1400115b0:	mov    BYTE PTR [rax],cl
   1400115b2:	and    eax,0x6225a92b
   1400115b8:	mov    gs,WORD PTR [rbx+rax*2-0x2b7cd7c1]
   1400115bf:	mov    ebx,fs
   1400115c1:	movabs ds:0x1cba2064e11e0092,eax
   1400115ca:	shl    BYTE PTR [rsi+0x15],0xa2
   1400115ce:	sbb    dh,BYTE PTR [rsp+rdx*2+0x7f]
   1400115d2:	or     eax,0xfd35a883
   1400115d7:	sub    al,0x46
   1400115d9:	es (bad) 
   1400115db:	(bad)  
   1400115dc:	movabs al,ds:0xd5fd150003e7e51
   1400115e5:	jg     0x1400115cb
   1400115e7:	sti    
   1400115e8:	xor    bh,ah
   1400115ea:	cmp    dh,bh
   1400115ec:	rex.WRB hlt 
   1400115ee:	(bad)  
   1400115ef:	xchg   edi,eax
   1400115f0:	(bad)  
   1400115f1:	(bad)  
   1400115f2:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400115f3:	outs   dx,BYTE PTR ds:[rsi]
   1400115f4:	mov    fs,WORD PTR [rdx+rax*8-0x706e96e9]
   1400115fb:	push   rsi
   1400115fc:	add    esp,esp
   1400115fe:	ins    DWORD PTR es:[rdi],dx
   1400115ff:	jl     0x14001162a
   140011601:	pop    rsp
   140011602:	mov    edi,DWORD PTR [rbx]
   140011604:	mov    edx,0xbd332197
   140011609:	pop    rdi
   14001160a:	add    DWORD PTR [rbx],0x5540f044
   140011610:	push   rbx
   140011611:	and    dl,BYTE PTR [rbx-0x6b21b4c9]
   140011617:	(bad)  
   14001161a:	sbb    al,0x42
   14001161c:	mov    edi,0x1fa0923b
   140011621:	(bad)  
   140011622:	mov    cl,BYTE PTR [rbx]
   140011624:	iret   
   140011625:	xor    DWORD PTR [rbx+0x3a],ebp
   140011628:	mov    al,0xf0
   14001162a:	adc    eax,0x70902fbb
   14001162f:	and    al,BYTE PTR [rbx+0x7e]
   140011632:	adc    eax,0x90598d31
   140011637:	lea    ecx,[rsi]
   140011639:	movsxd eax,DWORD PTR [rcx+0x4a]
   14001163c:	mov    cl,0x2d
   14001163e:	in     al,0x66
   140011640:	in     eax,0xe1
   140011642:	adc    al,0xd9
   140011644:	imul   esp,DWORD PTR [rdx],0x2f
   140011647:	push   rdi
   140011648:	and    ebx,DWORD PTR [rsi]
   14001164a:	div    DWORD PTR [rip+0xffffffffbb0c59ce]        # 0xfb0d701e
   140011650:	(bad)  
   140011651:	jp     0x140011641
   140011653:	icebp  
   140011654:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140011655:	jmp    0x17168f531
   14001165a:	mov    WORD PTR [rsi-0x1e],ds
   14001165d:	sbb    ebp,ecx
   14001165f:	rex.WXB xchg BYTE PTR [r13+0x5a3be9a],bl
   140011666:	jg     0x140011682
   140011668:	(bad)  
   140011669:	(bad)  
   14001166a:	push   rax
   14001166b:	rex.RXB and al,0x54
   14001166e:	in     eax,0x37
   140011670:	movabs ds:0xfd199e727fba6d4e,eax
   140011679:	loop   0x1400116e8
   14001167b:	mov    WORD PTR [rax-0x59],ss
   14001167e:	jrcxz  0x1400116c3
   140011680:	repnz ins BYTE PTR es:[rdi],dx
   140011682:	and    ebp,DWORD PTR [rdx]
   140011684:	movabs ds:0xaab48b31ee32a28a,al
   14001168d:	test   BYTE PTR [rdi+0x24],al
   140011690:	xchg   DWORD PTR [rdx+rdi*8+0x22aed147],eax
   140011697:	sbb    ch,BYTE PTR [rsi]
   140011699:	add    BYTE PTR [rcx-0x41adc89e],ah
   14001169f:	mov    ds,WORD PTR [rax]
   1400116a1:	sahf   
   1400116a2:	push   rax
   1400116a3:	(bad)
   1400116a6:	cmp    eax,0xa3efd62f
   1400116ab:	push   rbx
   1400116ac:	add    DWORD PTR [rsi],ebx
   1400116ae:	xor    DWORD PTR [rdx],eax
   1400116b0:	loopne 0x1400116ab
   1400116b2:	popf   
   1400116b3:	adc    eax,DWORD PTR [rax]
   1400116b5:	pop    rdi
   1400116b6:	fstp   QWORD PTR [rax-0x3a]
   1400116b9:	mov    edx,0xc9e5aa04
   1400116be:	sti    
   1400116bf:	(bad)  
   1400116c0:	pop    rsi
   1400116c1:	in     eax,0xc6
   1400116c3:	push   0xffffffffe222079c
   1400116c8:	mov    bl,0xef
   1400116ca:	sub    edx,DWORD PTR [rbp-0x76601ccc]
   1400116d0:	cld    
   1400116d1:	repnz leave 
   1400116d3:	sahf   
   1400116d4:	add    DWORD PTR [rcx],0x11a83a40
   1400116da:	xchg   ebx,eax
   1400116db:	loopne 0x14001169d
   1400116dd:	and    BYTE PTR [rax],dh
   1400116df:	sar    BYTE PTR [ebx+esi*1+0x37d4242b],cl
   1400116e7:	(bad)  
   1400116e8:	jo     0x1400116b2
   1400116ea:	popf   
   1400116eb:	cmp    DWORD PTR [rdi+0x2c],0x5e
   1400116ef:	(bad)  
   1400116f0:	sub    dh,BYTE PTR [rdx+0x78]
   1400116f3:	xlat   BYTE PTR ds:[rbx]
   1400116f4:	rex.RX
   1400116f5:	data16 (bad) 
   1400116f7:	jle    0x1400116bf
   1400116f9:	add    bl,BYTE PTR [rcx+0x4793a188]
   1400116ff:	test   BYTE PTR [rdi+rcx*8+0x49],cl
   140011703:	rex.WXB jl 0x140011777
   140011706:	jb     0x14001176e
   140011708:	sbb    al,BYTE PTR [rsp+riz*2]
   14001170b:	push   0xffffffffffffff84
   14001170d:	xchg   edx,eax
   14001170e:	mov    ch,0x4a
   140011710:	jg     0x1400116e6
   140011712:	jae    0x140011770
   140011714:	and    cl,BYTE PTR [rsi]
   140011716:	push   rsi
   140011717:	ret    
   140011718:	push   rcx
   140011719:	out    0x78,eax
   14001171b:	mov    dh,0x86
   14001171d:	push   rbx
   14001171e:	movsxd esp,DWORD PTR [rcx]
   140011720:	(bad)  
   140011721:	clc    
   140011722:	(bad)  
   140011723:	(bad)  
   140011724:	fnsave [rax+0x59]
   140011727:	mov    eax,0x84ffca99
   14001172c:	movabs eax,ds:0xf72c988c3052c3d2
   140011735:	mov    edx,0x2be3b6a5
   14001173a:	or     eax,0xc460c21
   14001173f:	add    ebp,0xaf7b7cc5
   140011745:	pop    rdx
   140011746:	fidiv  DWORD PTR [rbp-0x76397ad4]
   14001174c:	adc    eax,0x4bb6daf2
   140011751:	scas   al,BYTE PTR es:[rdi]
   140011752:	xor    ebp,DWORD PTR [rcx]
   140011754:	shl    dh,0xb1
   140011757:	out    0x99,al
   140011759:	rex.WB
   14001175a:	es sub dh,dl
   14001175d:	add    al,ah
   14001175f:	rex.WX fisub DWORD PTR [rbx]
   140011762:	in     eax,0xfa
   140011764:	sbb    al,0x6b
   140011766:	mov    ecx,0x5b5bc005
   14001176b:	js     0x14001179a
   14001176d:	in     eax,dx
   14001176e:	out    dx,al
   14001176f:	and    cl,al
   140011771:	rex.X out 0x69,al
   140011774:	xor    cl,BYTE PTR [rdi+0x15]
   140011777:	retf   
   140011778:	mov    dh,BYTE PTR [rcx]
   14001177a:	mul    DWORD PTR [rax]
   14001177c:	cmp    DWORD PTR [rax],esp
   14001177e:	xchg   esp,eax
   14001177f:	ins    BYTE PTR es:[rdi],dx
   140011780:	(bad)  
   140011781:	xchg   edx,eax
   140011782:	xchg   ecx,eax
   140011783:	or     BYTE PTR [rbp-0x6b99dfc7],dh
   140011789:	std    
   14001178a:	sahf   
   14001178b:	or     DWORD PTR [rax-0x31707945],esp
   140011791:	jo     0x14001180b
   140011793:	and    al,0x25
   140011795:	and    bh,0xcb
   140011798:	rex.WRXB
   140011799:	rex.WX xor rax,0xf648a4
   14001179f:	xor    BYTE PTR [rbx-0xb09446f],al
   1400117a5:	xor    eax,eax
   1400117a7:	cdq    
   1400117a8:	xchg   ah,dh
   1400117aa:	idiv   BYTE PTR [rax]
   1400117ac:	data16 test BYTE PTR [rip+0xffffffffb7b20631],0x96        # 0xf7b31de5
   1400117b4:	pop    rbp
   1400117b5:	rex.X add BYTE PTR [rax+0x20],bpl
   1400117b9:	xor    DWORD PTR [rax],eax
   1400117bb:	in     al,dx
   1400117bc:	and    DWORD PTR [rsi-0x4d67f0c3],ebp
   1400117c2:	out    0x41,eax
   1400117c4:	jo     0x14001177f
   1400117c6:	xchg   ebx,eax
   1400117c7:	sub    bh,BYTE PTR [rdi]
   1400117c9:	pop    rcx
   1400117ca:	(bad)  
   1400117cb:	out    dx,al
   1400117cc:	adc    al,0xa0
   1400117ce:	(bad)  
   1400117cf:	add    al,0x7f
   1400117d1:	rex.X mov edi,0x81b4508c
   1400117d7:	mov    esp,0x9165dc8b
   1400117dc:	or     ch,BYTE PTR [rbx-0x1d]
   1400117df:	(bad)  
   1400117e0:	mov    edx,0x1b846de8
   1400117e5:	(bad)  
   1400117e6:	add    BYTE PTR [rsi+rdx*1-0x5d27791c],dh
   1400117ed:	out    0xb1,eax
   1400117ef:	push   rsi
   1400117f0:	adc    dl,BYTE PTR [rdx+0x38b6ce62]
   1400117f6:	(bad)  
   1400117f7:	out    0x50,eax
   1400117f9:	and    al,0x5
   1400117fb:	mov    al,0xd0
   1400117fd:	adc    edx,DWORD PTR [rbx-0x4565f3e6]
   140011803:	and    ebp,DWORD PTR [rdx-0x47a73e35]
   140011809:	call   0x16c05309b
   14001180e:	add    ebp,ecx
   140011810:	rol    DWORD PTR [rbp-0x25],cl
   140011813:	cmp    al,0xb4
   140011815:	pop    rsp
   140011816:	movabs ds:0x37dfb50913bae431,al
   14001181f:	in     al,0x85
   140011821:	sub    BYTE PTR [rcx],bh
   140011823:	addr32 test eax,0xa57cdb47
   140011829:	(bad)  
   14001182a:	and    eax,0xe3b6643
   14001182f:	call   0x1ad480130
   140011834:	cs push rcx
   140011836:	lea    edi,[rcx]
   140011838:	push   rax
   140011839:	xchg   edi,eax
   14001183a:	add    BYTE PTR [rdx-0x2c],ch
   14001183d:	sbb    DWORD PTR [rcx-0x53c4dfbc],ebp
   140011843:	(bad)  
   140011844:	addr32 xor edi,esi
   140011847:	(bad)  
   140011848:	mov    BYTE PTR [rbx],ch
   14001184a:	mov    ebx,0x2fa8a850
   14001184f:	test   DWORD PTR [rsp+rbx*4+0x41c4a97b],esp
   140011856:	(bad)  
   140011857:	sbb    BYTE PTR [rcx+rax*1+0x47],ah
   14001185b:	scas   al,BYTE PTR es:[rdi]
   14001185c:	iret   
   14001185d:	mov    edx,0xc9462a0
   140011862:	adc    BYTE PTR [rdi],dl
   140011864:	adc    DWORD PTR [rcx-0x7e020420],eax
   14001186a:	mov    esi,0x86259ef9
   14001186f:	add    DWORD PTR [edx+eiz*1],edi
   140011873:	add    al,0xc0
   140011875:	repz mov ebx,0x6378052e
   14001187b:	mov    dl,0xdc
   14001187d:	xor    ah,BYTE PTR [rcx-0x4eed5b85]
   140011883:	shl    BYTE PTR [rbx],1
   140011885:	fidivr WORD PTR [rbx+0x26e19ff]
   14001188b:	movabs ds:0x7d42afbfe263bc12,eax
   140011894:	std    
   140011895:	rex
   140011896:	rex.RX fsubr st,st(2)
   140011899:	cli    
   14001189a:	stos   DWORD PTR es:[rdi],eax
   14001189b:	cmp    BYTE PTR [rbp+0x5a],al
   14001189e:	(bad)  
   14001189f:	sbb    eax,ecx
   1400118a1:	retf   
   1400118a2:	(bad)  
   1400118a3:	pop    rax
   1400118a4:	or     eax,0xcfc3d27e
   1400118a9:	addr32 sub eax,0x570176b8
   1400118af:	in     al,0xb8
   1400118b1:	and    DWORD PTR [rdx+rax*1+0x10a746bb],edi
   1400118b8:	pop    rdx
   1400118b9:	sbb    eax,0xc80b5964
   1400118be:	test   al,0x8a
   1400118c0:	scas   al,BYTE PTR es:[rdi]
   1400118c1:	rex.X (bad) 
   1400118c3:	jo     0x14001192d
   1400118c5:	(bad)  
   1400118c6:	ja     0x14001192d
   1400118c8:	(bad)  
   1400118c9:	cmc    
   1400118ca:	or     al,0x64
   1400118cc:	stos   BYTE PTR es:[rdi],al
   1400118cd:	(bad)  
   1400118ce:	add    al,0x91
   1400118d0:	stc    
   1400118d1:	rcl    DWORD PTR [rax+0x9171f00],0x86
   1400118d8:	jl     0x1400118a3
   1400118da:	movabs al,ds:0x40ea6a33bb93637a
   1400118e3:	rex.WRB xor rax,0x5cd45d40
   1400118e9:	ins    BYTE PTR es:[rdi],dx
   1400118ea:	(bad)
   1400118ed:	mov    ebp,0x27607a98
   1400118f2:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400118f3:	adc    al,ah
   1400118f5:	nop
   1400118f6:	jnp    0x14001189d
   1400118f8:	xlat   BYTE PTR ds:[rbx]
   1400118f9:	sub    al,0xf5
   1400118fb:	mov    esp,0x6b71c2e5
   140011900:	or     bl,al
   140011902:	or     al,0x9b
   140011904:	rex.WRB leave 
   140011906:	int3   
   140011907:	mov    BYTE PTR [rbp-0x7d],ah
   14001190a:	pop    rdx
   14001190b:	pop    rdx
   14001190c:	(bad)  
   14001190e:	add    eax,0xe3834b6a
   140011913:	add    ecx,DWORD PTR [rdx+0x4]
   140011916:	rex.X and eax,0xeef2013d
   14001191c:	pop    rsi
   14001191d:	(bad)  
   14001191e:	cdq    
   14001191f:	fcomp  DWORD PTR [rdi]
   140011921:	(bad)  
   140011923:	cwde   
   140011924:	or     esi,0xd9586ea1
   14001192a:	jno    0x1400118d4
   14001192c:	sub    eax,0x11e99e40
   140011931:	cmp    al,0x25
   140011933:	loop   0x1400118f4
   140011935:	stos   BYTE PTR es:[rdi],al
   140011936:	xchg   ebp,eax
   140011937:	(bad)  
   140011938:	sub    DWORD PTR [rax-0x6fa781ab],ecx
   14001193e:	fild   QWORD PTR [rcx-0x40]
   140011941:	rex.WRXB test al,0x59
   140011944:	imul   ebx,DWORD PTR [rcx-0x73],0x44192a7f
   14001194b:	(bad)  
   14001194c:	mov    dl,0x5c
   14001194e:	(bad)  
   14001194f:	hlt    
   140011950:	in     eax,0xc3
   140011952:	(bad)  
   140011953:	push   rax
   140011954:	sub    dh,ch
   140011956:	cmp    ebp,DWORD PTR [rdx]
   140011958:	and    esp,eax
   14001195a:	rex.WB (bad) 
   14001195c:	add    BYTE PTR [rsi-0x1feb8f01],bl
   140011962:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140011963:	jmp    0x18e898d3a
   140011968:	xchg   esp,eax
   140011969:	or     dh,cl
   14001196b:	add    DWORD PTR [rax],edx
   14001196d:	(bad)  
   14001196e:	iret   
   14001196f:	pop    rsp
   140011970:	mul    eax
   140011972:	shl    ecx,cl
   140011974:	sbb    eax,0xf42825c0
   140011979:	loope  0x1400119f7
   14001197b:	leave  
   14001197c:	int3   
   14001197d:	(bad)  
   14001197e:	hlt    
   14001197f:	mov    bl,0xa2
   140011981:	(bad)  
   140011982:	fs add eax,0x2aac073e
   140011988:	rex ror BYTE PTR [rcx+0x64],1
   14001198c:	test   eax,0xc8d8a3e6
   140011991:	ficom  DWORD PTR [rdx-0x67]
   140011994:	xchg   ecx,eax
   140011995:	ret    
   140011996:	mov    ch,0x25
   140011998:	mov    edi,0x865c41ff
   14001199d:	(bad)  
   14001199e:	mov    ah,0x9f
   1400119a0:	sbb    esi,DWORD PTR [rbx]
   1400119a2:	push   QWORD PTR [rdx]
   1400119a4:	push   rdx
   1400119a5:	mov    ebx,0x81c0ac6b
   1400119aa:	cmp    cl,cl
   1400119ac:	add    DWORD PTR [rdx-0xeb7f925],esi
   1400119b2:	cmp    al,0x9e
   1400119b4:	out    0x53,al
   1400119b6:	ss (bad) 
   1400119b8:	adc    DWORD PTR fs:[rdx],0x59004a33
   1400119bf:	pop    rsp
   1400119c0:	and    DWORD PTR [rip+0x2f6ea8b1],edx        # 0x16f6fc277
   1400119c6:	(bad)  
   1400119c7:	cmp    al,0xa0
   1400119c9:	or     ah,BYTE PTR [rdi]
   1400119cb:	xor    eax,0xd1245460
   1400119d0:	mov    dh,0x8d
   1400119d2:	xor    esi,DWORD PTR [rip+0x67513491]        # 0x1a7524e69
   1400119d8:	xchg   edx,eax
   1400119da:	(bad)  
   1400119db:	or     al,0x75
   1400119dd:	rcl    DWORD PTR [rax+rbx*8+0x61],1
   1400119e1:	(bad)  
   1400119e2:	cs jbe 0x1400119d4
   1400119e5:	rex.RB (bad) 
   1400119e7:	mov    edx,0xb8fe0594
   1400119ec:	test   eax,0x34288342
   1400119f1:	mov    DWORD PTR [rbx+rbp*8],ebx
   1400119f4:	or     esi,DWORD PTR [riz*4+0x512705a7]
   1400119fb:	cmc    
   1400119fc:	(bad)  
   1400119fd:	sub    DWORD PTR [rdx-0x3b3b9f9],eax
   140011a03:	xor    DWORD PTR [rsi+rcx*2],eax
   140011a06:	or     DWORD PTR [rip+0xffffffff9a921031],esi        # 0xda932a3d
   140011a0c:	pop    rsi
   140011a0d:	(bad)
   140011a12:	(bad)  
   140011a13:	rex.RB (bad) 
   140011a15:	movabs al,ds:0x38ad00b6aef96256
   140011a1e:	rex.R sahf 
   140011a20:	mov    ch,0xb8
   140011a22:	mov    esi,DWORD PTR [rax+0x7a]
   140011a25:	jbe    0x140011a33
   140011a27:	cs int 0x3
   140011a2a:	(bad)  
   140011a2b:	mov    bh,0x96
   140011a2d:	mov    esi,0xc5d46417
   140011a32:	push   0xffffffffd2a20307
   140011a37:	xchg   edx,eax
   140011a38:	fcom   DWORD PTR [rip+0xffffffffe79ebbec]        # 0x1279fd62a
   140011a3e:	jnp    0x140011a33
   140011a40:	add    esi,DWORD PTR [rax]
   140011a42:	(bad)  
   140011a43:	(bad)  
   140011a44:	jo     0x140011a9a
   140011a46:	in     eax,dx
   140011a47:	in     eax,0x1e
   140011a49:	or     DWORD PTR [rcx],ecx
   140011a4b:	loopne 0x140011aa6
   140011a4d:	add    ch,ah
   140011a4f:	mov    dh,cl
   140011a51:	adc    BYTE PTR [rdx-0x37],dh
   140011a54:	jb     0x1400119fc
   140011a56:	cmp    ah,cl
   140011a58:	sti    
   140011a59:	neg    BYTE PTR [rdi+0x43]
   140011a5c:	jrcxz  0x140011a3a
   140011a5e:	adc    ebp,edi
   140011a60:	mov    esi,0xf3940f
   140011a65:	jnp    0x140011a58
   140011a67:	add    dl,BYTE PTR [rdx+rbx*8-0x4d52c1c]
   140011a6e:	push   0x70
   140011a70:	packssdw mm4,QWORD PTR [rbx+0xf]
   140011a74:	(bad)  
   140011a75:	xchg   bl,dl
   140011a77:	(bad)  
   140011a78:	sahf   
   140011a79:	xor    dh,BYTE PTR [rcx+0x39]
   140011a7c:	pushf  
   140011a7d:	and    esi,DWORD PTR [rax+0x56]
   140011a80:	add    BYTE PTR [rcx+0xe],bl
   140011a83:	(bad)  
   140011a84:	or     esi,DWORD PTR [rax]
   140011a86:	(bad)  
   140011a87:	loope  0x140011ab8
   140011a89:	lock push 0xffffffffffffff84
   140011a8c:	mov    esp,0x645d7780
   140011a91:	xchg   esp,eax
   140011a92:	(bad)
   140011a95:	test   eax,0xdac466c8
   140011a9a:	sbb    DWORD PTR [rdi+0x4ccd8457],eax
   140011aa0:	push   rdi
   140011aa1:	es jns 0x140011a42
   140011aa4:	push   rcx
   140011aa5:	jl     0x140011a52
   140011aa7:	(bad)  
   140011aa8:	xchg   esi,eax
   140011aa9:	sbb    bl,BYTE PTR [rax+0x562a7f6c]
   140011aaf:	(bad)  
   140011ab0:	mov    DWORD PTR [rdi-0x3b],eax
   140011ab3:	in     eax,dx
   140011ab4:	pop    rbx
   140011ab5:	gs out dx,al
   140011ab8:	sbb    DWORD PTR [rbx],edi
   140011aba:	ja     0x140011b09
   140011abc:	iret   
   140011abd:	jl     0x140011aa5
   140011abf:	push   rbx
   140011ac0:	(bad)  
   140011ac2:	jno    0x140011a9b
   140011ac4:	fisttp QWORD PTR [rdi]
   140011ac6:	iret   
   140011ac7:	mov    BYTE PTR [rip+0xffffffffc3eee938],al        # 0x103f00405
   140011acd:	rex.W (bad) 
   140011acf:	icebp  
   140011ad0:	xor    eax,0x235aacb0
   140011ad5:	add    BYTE PTR [rax+0x19],bh
   140011ad8:	in     eax,dx
   140011ad9:	mov    ecx,0x7a18f71a
   140011ade:	cmp    dl,bh
   140011ae0:	prefetchwt1 BYTE PTR [rdi]
   140011ae3:	xchg   r14,rax
   140011ae5:	rex.RX jmp 0x19c930acc
   140011aeb:	jae    0x140011ad1
   140011aed:	ja     0x140011b37
   140011aef:	jbe    0x140011b44
   140011af1:	mov    dl,0xbb
   140011af3:	jbe    0x140011b31
   140011af5:	and    eax,0xa7a2758e
   140011afa:	sbb    BYTE PTR [rbx-0x3a29f408],dh
   140011b00:	xchg   edx,ebx
   140011b02:	cmp    esi,DWORD PTR [rax-0x53]
   140011b05:	jmp    QWORD PTR [rsi-0x53]
   140011b08:	popf   
   140011b09:	sub    BYTE PTR [rdi],ch
   140011b0b:	cmp    BYTE PTR [rcx+0x1d50b79],bh
   140011b11:	rcr    edi,cl
   140011b13:	push   rdi
   140011b14:	mov    DWORD PTR [rcx],edx
   140011b16:	xor    eax,0x1cfd7ecf
   140011b1b:	(bad)  
   140011b1c:	fcom   st(5)
   140011b1e:	(bad)  
   140011b1f:	sbb    eax,0x422aebb5
   140011b24:	sub    si,WORD PTR [rcx]
   140011b27:	cmp    eax,0xfdc01981
   140011b2c:	add    BYTE PTR [rdi],bh
   140011b2e:	xor    al,0xf4
   140011b30:	in     eax,0x16
   140011b32:	adc    DWORD PTR [rbx-0xc3ffb6],0xb78056f1
   140011b3c:	movabs ds:0x4011da2264755212,al
   140011b45:	add    DWORD PTR [rdx+rcx*1],ebx
   140011b48:	(bad)  
   140011b49:	(bad)  
   140011b4a:	mov    esp,0x7f532112
   140011b4f:	call   FWORD PTR [rbx+rax*1]
   140011b52:	int3   
   140011b53:	(bad)  
   140011b54:	jge    0x140011b5f
   140011b56:	movabs al,ds:0x1c08f04206519e0e
   140011b5f:	loopne 0x140011b67
   140011b61:	mov    WORD PTR [rax-0x1f],ds
   140011b64:	(bad)  
   140011b65:	test   BYTE PTR [rax+rdx*1],ah
   140011b68:	mov    BYTE PTR [rcx-0x318f0bb8],0xa
   140011b6f:	icebp  
   140011b70:	std    
   140011b71:	ja     0x140011b97
   140011b73:	(bad)  
   140011b74:	jmp    QWORD PTR [rbx-0x2]
   140011b77:	in     eax,0xd8
   140011b79:	(bad)  
   140011b7b:	or     BYTE PTR [rax+0x17],dl
   140011b7e:	jo     0x140011b39
   140011b80:	mov    esi,0x4502810a
   140011b85:	ins    BYTE PTR es:[rdi],dx
   140011b86:	lods   al,BYTE PTR ds:[rsi]
   140011b87:	lods   al,BYTE PTR ds:[rsi]
   140011b88:	stc    
   140011b89:	mov    BYTE PTR [rbx],dl
   140011b8b:	popf   
   140011b8c:	and    ch,BYTE PTR [rbx+0x336bc83]
   140011b92:	movabs ds:0xa559ba630c95659f,al
   140011b9b:	add    dl,ah
   140011b9d:	cmp    eax,DWORD PTR [rcx]
   140011b9f:	xor    eax,0xc0b6ffad
   140011ba4:	jp     0x140011b5f
   140011ba6:	ret    
   140011ba7:	sahf   
   140011ba8:	(bad)  
   140011ba9:	test   edi,0x5f83ffbc
   140011baf:	mov    ecx,0xce7a766b
   140011bb4:	xchg   DWORD PTR [rax],esp
   140011bb6:	data16 rex.RX jnp 0x140011c06
   140011bba:	rex.R in eax,dx
   140011bbc:	js     0x140011b95
   140011bbe:	rex.RB loope 0x140011b45
   140011bc1:	and    edi,edi
   140011bc3:	rcr    ch,1
   140011bc5:	retf   
   140011bc6:	rex.RX jle 0x140011c27
   140011bc9:	in     al,dx
   140011bca:	xor    eax,0xf8644513
   140011bcf:	jmp    0x140011bfd
   140011bd1:	repnz (bad) 
   140011bd3:	rex.XB xchg r9d,eax
   140011bd5:	mov    edi,0x9b7eadf9
   140011bda:	outs   dx,WORD PTR ds:[rsi]
   140011bdc:	(bad)  
   140011bdd:	rex.RB (bad) 
   140011bdf:	pop    rax
   140011be0:	xchg   ebx,eax
   140011be1:	out    dx,eax
   140011be2:	jrcxz  0x140011bb2
   140011be4:	add    eax,0x45fc4c82
   140011be9:	rex.WXB and BYTE PTR [r15-0xb],dil
   140011bed:	sahf   
   140011bee:	int3   
   140011bef:	ret    
   140011bf0:	fidiv  WORD PTR [rbx]
   140011bf2:	and    dh,BYTE PTR [rcx-0xd]
   140011bf5:	fxch   st(1)
   140011bf7:	jae    0x140011ba4
   140011bf9:	adc    edx,DWORD PTR [rsi-0x2942628b]
   140011bff:	or     al,0x24
   140011c01:	cld    
   140011c02:	ja     0x140011c33
   140011c04:	shl    BYTE PTR [rdi+0x3],0x38
   140011c08:	xor    eax,0xff9e006c
   140011c0d:	and    al,0x87
   140011c0f:	pop    rax
   140011c10:	std    
   140011c11:	rex.WRB iretq 
   140011c13:	(bad)
   140011c17:	add    al,0x81
   140011c19:	imul   esi
   140011c1b:	jnp    0x140011ba3
   140011c1d:	sbb    esp,edi
   140011c1f:	(bad)  
   140011c20:	mov    esp,0xe180f067
   140011c25:	rex.WXB rcr BYTE PTR [r10-0x42da9303],cl
   140011c2c:	cwde   
   140011c2d:	test   ebx,edi
   140011c2f:	push   rbx
   140011c30:	pop    rdi
   140011c31:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011c32:	add    BYTE PTR [rbp-0xb],dh
   140011c35:	or     DWORD PTR [rbx+0x22],esp
   140011c38:	xor    BYTE PTR [rbx],0x58
   140011c3b:	(bad)  
   140011c3c:	mov    edi,0x8abda560
   140011c41:	sbb    al,0x54
   140011c43:	adc    al,0xb8
   140011c45:	(bad)  
   140011c46:	cmp    al,0x9
   140011c48:	call   QWORD PTR [rdx+0x2de4035f]
   140011c4e:	jo     0x140011c26
   140011c50:	(bad)  
   140011c51:	and    edx,DWORD PTR [rdi+0x73]
   140011c54:	repz add r10d,DWORD PTR [r11-0x4c]
   140011c59:	rex.W or BYTE PTR [rdi-0x676ab309],al
   140011c60:	(bad)  
   140011c61:	or     al,0xaf
   140011c63:	jle    0x140011ca5
   140011c65:	imul   edi,esp,0xffffffe1
   140011c68:	cdq    
   140011c69:	xor    eax,0xd032b4a4
   140011c6e:	add    al,0xaa
   140011c70:	or     al,0x85
   140011c72:	rex.RX pop rbx
   140011c74:	push   0x1c
   140011c76:	sub    bl,BYTE PTR [rcx+0x2ea2cf4b]
   140011c7c:	in     al,dx
   140011c7d:	fidiv  DWORD PTR [rdi]
   140011c7f:	xor    edi,DWORD PTR [rdi]
   140011c81:	call   0x130fcde1b
   140011c86:	movabs eax,ds:0x73593aef73f27f1d
   140011c8f:	mov    dl,0x2
   140011c91:	sub    edx,eax
   140011c93:	test   BYTE PTR [rbx+0x39740819],dl
   140011c99:	rex and eax,DWORD PTR [rax+0x2ed14469]
   140011ca0:	mov    ecx,DWORD PTR [rdx+0x5b]
   140011ca3:	and    al,0x0
   140011ca5:	in     al,0x5c
   140011ca7:	mov    cl,0xff
   140011ca9:	sub    DWORD PTR [rdx-0x3],esp
   140011cac:	sub    BYTE PTR [rcx],al
   140011cae:	(bad)  
   140011caf:	scas   eax,DWORD PTR es:[rdi]
   140011cb0:	ds xchg ebp,eax
   140011cb2:	and    DWORD PTR [rsi+rbp*8+0x110bc0e],0xa87ee00e
   140011cbd:	or     al,0x80
   140011cbf:	ds cdqe 
   140011cc2:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011cc3:	(bad)  
   140011cc4:	adc    ah,bl
   140011cc6:	cwde   
   140011cc7:	xchg   ebp,eax
   140011cc8:	repz addr32 rex
   140011ccb:	es (bad) 
   140011ccd:	(bad)  
   140011cce:	outs   dx,BYTE PTR ds:[rsi]
   140011ccf:	mov    bh,0xe1
   140011cd1:	imul   eax,DWORD PTR [rdx],0x20d7827f
   140011cd7:	in     al,0x5
   140011cd9:	rex.WX xlat BYTE PTR ds:[rbx]
   140011cdb:	lea    esi,[rbp+0x75519893]
   140011ce1:	(bad)  
   140011ce2:	rex.WXB movabs r8,0x373597f5badb51b6
   140011cec:	rex
   140011ced:	rex.WRX mov WORD PTR [rsi-0x5ce31b1e],ss
   140011cf4:	(bad)  
   140011cf5:	(bad)  
   140011cf6:	push   rbx
   140011cf7:	sbb    esp,esp
   140011cf9:	pop    rax
   140011cfa:	push   0x15
   140011cfc:	data16 jo 0x140011ccc
   140011cff:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011d00:	addr32 push rax
   140011d02:	adc    al,0x99
   140011d04:	sub    edi,DWORD PTR [rdx-0x45c7e353]
   140011d0a:	(bad)  
   140011d0b:	(bad)  
   140011d0c:	sub    esi,DWORD PTR [rax+0x270bc702]
   140011d12:	test   DWORD PTR [rax],eax
   140011d14:	js     0x140011d94
   140011d16:	iret   
   140011d17:	sbb    dl,BYTE PTR [rcx+rbp*2-0x42]
   140011d1b:	ret    
   140011d1c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011d1d:	cmp    DWORD PTR [rdx-0x20884311],esi
   140011d23:	push   rbx
   140011d24:	test   eax,0x8d8263c5
   140011d29:	cmp    eax,0xa5f7eeb5
   140011d2e:	loope  0x140011cb7
   140011d30:	mov    rdx,cr6
   140011d33:	ins    BYTE PTR es:[rdi],dx
   140011d34:	leave  
   140011d35:	ds adc al,0x12
   140011d38:	rcr    DWORD PTR [rdi-0x4b015ca7],1
   140011d3e:	test   al,0x3
   140011d40:	add    eax,ecx
   140011d42:	sbb    al,0x38
   140011d44:	imul   ecx,DWORD PTR [rcx-0x48],0x6f
   140011d48:	mov    ebx,0xde39e500
   140011d4d:	fistp  QWORD PTR [rbx+0x25]
   140011d50:	(bad)  
   140011d51:	mov    eax,0x8ef328b5
   140011d56:	(bad)  
   140011d57:	stc    
   140011d58:	(bad)  
   140011d59:	push   rdx
   140011d5a:	gs or  eax,0x2ae0c9b6
   140011d60:	jb     0x140011db0
   140011d62:	xor    DWORD PTR [rbx+riz*1+0x715957e2],ebx
   140011d69:	mov    cl,0x6
   140011d6b:	movabs al,ds:0x68c4208c184685e
   140011d74:	rex.WR push rbp
   140011d76:	ss xor al,0xbf
   140011d79:	jae    0x140011d90
   140011d7b:	pushf  
   140011d7c:	rex.X
   140011d7d:	rex
   140011d7e:	addr32 mov ds:0xe977d2d3,al
   140011d84:	sahf   
   140011d85:	test   al,0x39
   140011d87:	pop    rax
   140011d88:	adc    DWORD PTR [rip+0x2c9c0e58],0x312ae009        # 0x16c9d2bea
   140011d92:	neg    BYTE PTR [rcx+0x6cfd4fa1]
   140011d98:	(bad)  
   140011d99:	ror    BYTE PTR [rax+0x24],1
   140011d9c:	and    al,0xf2
   140011d9f:	add    ecx,DWORD PTR [rdi+0x17]
   140011da2:	xor    edi,DWORD PTR [rsi]
   140011da4:	mov    ebx,DWORD PTR [rbx+0x7b00078f]
   140011daa:	rol    BYTE PTR [rdi],0x51
   140011dad:	(bad)  
   140011dae:	rex.WX (bad) 
   140011db0:	fcom   st(2)
   140011db2:	xlat   BYTE PTR ds:[rbx]
   140011db3:	retf   0xdabe
   140011db6:	(bad)  
   140011db7:	sub    esi,DWORD PTR [rsi-0x57]
   140011dba:	sar    DWORD PTR [rax+0x4f],1
   140011dbd:	data16 (bad) 
   140011dbf:	and    BYTE PTR [rbx],dl
   140011dc1:	xchg   ecx,eax
   140011dc2:	mov    ebp,0xbb9f4490
   140011dc7:	retf   
   140011dc8:	sub    esi,eax
   140011dca:	rex.RB test DWORD PTR [r12+rax*4-0x44],0xf0759005
   140011dd3:	ins    DWORD PTR es:[rdi],dx
   140011dd4:	fidiv  DWORD PTR [rbx+0x2a]
   140011dd7:	in     al,0x55
   140011dd9:	ret    
   140011dda:	adc    DWORD PTR [rax],ebx
   140011ddc:	mov    dh,al
   140011dde:	test   eax,0xeec8ab3a
   140011de3:	sbb    DWORD PTR [rdx+0x74],ecx
   140011de6:	adc    r12,rcx
   140011de9:	js     0x140011e17
   140011deb:	(bad)  
   140011dec:	sti    
   140011ded:	test   eax,0x848580f4
   140011df2:	movabs al,ds:0xe741ea6772cf4569
   140011dfb:	mov    eax,0x56057d46
   140011e00:	loopne 0x140011e2a
   140011e02:	loope  0x140011d88
   140011e04:	adc    eax,DWORD PTR [rax]
   140011e06:	iret   
   140011e07:	jg     0x140011dc3
   140011e09:	add    eax,0x15b275a0
   140011e0e:	xchg   ecx,eax
   140011e0f:	popf   
   140011e10:	xchg   DWORD PTR [rax-0x4821f02],ecx
   140011e16:	(bad)  
   140011e17:	movabs eax,ds:0x30ef594b302afcce
   140011e20:	(bad)  
   140011e21:	clc    
   140011e22:	add    ebx,eax
   140011e24:	jnp    0x140011e6c
   140011e26:	jmp    0xc3cbe860
   140011e2b:	out    0x13,eax
   140011e2d:	outs   dx,BYTE PTR ds:[rsi]
   140011e2e:	out    dx,eax
   140011e2f:	sbb    DWORD PTR [rcx+0x455bfa9d],eax
   140011e35:	sbb    edx,DWORD PTR [rdi]
   140011e37:	mov    bh,0x89
   140011e39:	rex.XB movabs al,ds:0xe34c0cad40b5c102
   140011e43:	js     0x140011eb4
   140011e45:	out    dx,eax
   140011e46:	xchg   ebp,eax
   140011e47:	loopne 0x140011e75
   140011e49:	and    DWORD PTR [rdi+0x2823d08e],0x67
   140011e50:	mov    cs,WORD PTR [rax-0x31]
   140011e53:	xchg   ecx,eax
   140011e54:	stos   DWORD PTR es:[rdi],eax
   140011e55:	(bad)  [rcx]
   140011e57:	jne    0x140011e08
   140011e59:	rex.RX
   140011e5a:	rex.X rcr BYTE PTR [rdx],0xc6
   140011e5e:	leave  
   140011e5f:	push   rax
   140011e60:	(bad)  
   140011e61:	rex.WRX or sil,r8b
   140011e64:	xor    bl,bl
   140011e66:	nop
   140011e67:	and    DWORD PTR [rcx+0x50],edi
   140011e6a:	pop    rbp
   140011e6b:	and    DWORD PTR [rbp-0x2],eax
   140011e6e:	mov    edx,0x4c638b27
   140011e73:	rex.W
   140011e74:	addr32 in eax,dx
   140011e76:	mov    eax,0x3eac46e5
   140011e7b:	add    DWORD PTR [rbx-0x50],edx
   140011e7e:	add    ch,BYTE PTR [rbx]
   140011e80:	mov    al,0x6c
   140011e82:	cmp    BYTE PTR [rcx-0x600c3ffc],ah
   140011e88:	add    BYTE PTR gs:[rsi-0x6b48fbac],ch
   140011e8f:	or     DWORD PTR [rax],ebp
   140011e91:	loop   0x140011e3e
   140011e93:	mov    dh,0x1e
   140011e95:	or     DWORD PTR [rdx+0x70],eax
   140011e98:	mov    ah,0xef
   140011e9a:	fld    st(2)
   140011e9c:	push   0x3d
   140011e9e:	shl    BYTE PTR [rbx+0x12],0xce
   140011ea2:	out    0x59,eax
   140011ea4:	retf   0xb379
   140011ea7:	(bad)  
   140011ea8:	retf   0x283e
   140011eab:	test   BYTE PTR [rax-0x10],al
   140011eae:	rol    BYTE PTR [rdi],cl
   140011eb0:	and    BYTE PTR [rsp+rax*1],al
   140011eb3:	adc    BYTE PTR [rax+0x3b],cl
   140011eb6:	stc    
   140011eb7:	mov    bh,cl
   140011eb9:	lahf   
   140011eba:	add    dl,cl
   140011ebc:	rex.R test edi,0xe71fc6a5
   140011ec3:	sub    eax,0x27f870dc
   140011ec8:	mov    cl,0xbb
   140011eca:	mov    ch,0xe
   140011ecc:	ds jmp 0x140011e57
   140011ecf:	rex.WX or BYTE PTR [rdx+0x7c],0x7
   140011ed4:	nop
   140011ed5:	cwde   
   140011ed6:	jbe    0x140011f2d
   140011ed8:	je     0x140011e91
   140011eda:	ins    DWORD PTR es:[rdi],dx
   140011edb:	out    0xe8,al
   140011edd:	(bad)  
   140011ede:	data16 rex.WRB clc 
   140011ee1:	sub    DWORD PTR [rbx],esp
   140011ee3:	adc    eax,esp
   140011ee5:	stos   BYTE PTR es:[rdi],al
   140011ee6:	mov    dl,0xaf
   140011ee8:	adc    DWORD PTR [rdx+0x7c04d950],eax
   140011eee:	mov    esp,0xa044939e
   140011ef3:	(bad)  
   140011ef4:	std    
   140011ef5:	int    0xc6
   140011ef7:	nop
   140011ef8:	fadd   DWORD PTR [rdx]
   140011efa:	jb     0x140011f43
   140011efc:	mov    ds,WORD PTR [rcx+rdx*1]
   140011eff:	xor    BYTE PTR [rbp+0x27],0x72
   140011f03:	ds push rsi
   140011f05:	(bad)  
   140011f06:	add    eax,0x5a27048e
   140011f0b:	add    bh,BYTE PTR [rax-0x2ce5ff0]
   140011f11:	sahf   
   140011f12:	pop    rax
   140011f13:	cli    
   140011f14:	loope  0x140011f29
   140011f16:	and    esp,DWORD PTR [rax+0x0]
   140011f19:	mov    cl,bh
   140011f1b:	rol    BYTE PTR [rcx+0x3c38a873],0x5
   140011f22:	add    BYTE PTR [rax],cl
   140011f24:	cmp    eax,0x58781aae
   140011f29:	in     al,0x9f
   140011f2b:	and    al,0x43
   140011f2d:	adc    ecx,DWORD PTR [rbx-0x44]
   140011f30:	and    al,0xab
   140011f32:	movabs ds:0xfd1a808009042ed,al
   140011f3b:	cdq    
   140011f3c:	jbe    0x140011f30
   140011f3e:	sub    eax,0xc2dbafe4
   140011f43:	jle    0x140011fc4
   140011f45:	(bad)  
   140011f46:	outs   dx,BYTE PTR ds:[rsi]
   140011f47:	(bad)  
   140011f48:	repz rcl DWORD PTR [rax+riz*1+0x50],0xe2
   140011f4e:	call   0x126301023
   140011f53:	test   bl,ch
   140011f55:	add    ebx,DWORD PTR [rdx]
   140011f57:	clc    
   140011f58:	movabs eax,ds:0x67090749bf38c224
   140011f61:	wbinvd 
   140011f63:	and    dh,BYTE PTR [rbx+0x4164fd89]
   140011f69:	and    al,0x1c
   140011f6b:	lea    eax,[rbp+0x313ef886]
   140011f71:	(bad)  
   140011f72:	(bad)  
   140011f73:	repz rcr cl,1
   140011f76:	scas   al,BYTE PTR es:[rdi]
   140011f77:	cmp    al,0x23
   140011f79:	rex.RXB cdq 
   140011f7b:	add    eax,eax
   140011f7d:	sbb    esi,DWORD PTR [rdi]
   140011f7f:	(bad)  
   140011f80:	fiadd  DWORD PTR [rdi-0x4515571]
   140011f86:	or     ch,BYTE PTR [rax+rax*8+0x2309c0f1]
   140011f8d:	add    BYTE PTR [rsi-0x17ff5d01],bl
   140011f93:	or     DWORD PTR [rax-0x1fd50154],ebp
   140011f99:	adc    al,BYTE PTR [rbx]
   140011f9b:	xchg   esp,eax
   140011f9c:	jmp    0x161282b1f
   140011fa1:	sub    dh,bh
   140011fa3:	cmp    eax,0x1af42e47
   140011fa8:	loop   0x140011f95
   140011faa:	adc    edx,0x81cff88b
   140011fb0:	lods   eax,DWORD PTR ds:[rsi]
   140011fb1:	jne    0x140011f6a
   140011fb3:	or     eax,DWORD PTR [rcx-0x74b667ef]
   140011fb9:	jl     0x140011f6d
   140011fbb:	xchg   edi,eax
   140011fbc:	(bad)  
   140011fbd:	jg     0x140011f4b
   140011fbf:	or     al,0x1e
   140011fc1:	sub    eax,0xf7d49c10
   140011fc6:	add    DWORD PTR [rbx],0x65
   140011fc9:	loop   0x140011fc5
   140011fcb:	sti    
   140011fcc:	movabs ds:0x2d1f42d4944af43,eax
   140011fd5:	pushf  
   140011fd6:	stos   DWORD PTR es:[rdi],eax
   140011fd7:	xchg   ebp,eax
   140011fd8:	fs scas al,BYTE PTR es:[rdi]
   140011fda:	pop    rcx
   140011fdb:	lock adc eax,0x4f01a3ab
   140011fe1:	xor    DWORD PTR [rsi-0x12381467],ebx
   140011fe7:	jp     0x140012024
   140011fe9:	(bad)  
   140011fea:	mov    cl,0xe1
   140011fec:	(bad)  
   140011fed:	shr    bh,1
   140011fef:	jne    0x140012014
   140011ff1:	rex.WX sbb rcx,QWORD PTR [rcx+0x54]
   140011ff5:	sbb    DWORD PTR [rdx+0x1f1572e7],ebx
   140011ffb:	mov    al,0x7e
   140011ffd:	std    
   140011ffe:	(bad)  
   140011fff:	mov    BYTE PTR cs:[rax+rax*4],bl
   140012003:	test   eax,0x2b273513
   140012008:	mov    al,0x2
   14001200a:	rex.RXB (bad) 
   14001200c:	adc    ebp,DWORD PTR [rcx]
   14001200e:	add    DWORD PTR [rsi+rbp*1+0x11],ebx
   140012012:	jg     0x14001207a
   140012014:	pop    QWORD PTR [eax+eax*2+0x3f]
   140012019:	or     eax,0xdcf1c9f9
   14001201e:	cld    
   14001201f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012020:	jmp    0x140012070
   140012022:	outs   dx,DWORD PTR ds:[rsi]
   140012023:	adc    eax,0x7d0b40d9
   140012028:	add    al,0x8d
   14001202a:	cli    
   14001202b:	movsxd ebp,DWORD PTR [rbx-0x1d]
   14001202e:	in     eax,dx
   14001202f:	lods   eax,DWORD PTR ds:[rsi]
   140012030:	test   eax,0xb81f3b27
   140012035:	rex.X push rsp
   140012037:	add    ah,al
   140012039:	(bad)  
   14001203a:	mov    eax,0x4c0e7064
   14001203f:	(bad)  
   140012040:	fsubr  QWORD PTR [rdx]
   140012042:	xor    BYTE PTR [rsi-0x7f],0x7f
   140012046:	cdq    
   140012047:	jle    0x140012087
   140012049:	outs   dx,BYTE PTR ds:[rsi]
   14001204a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001204b:	repz in al,0x55
   14001204e:	sub    al,0xd1
   140012050:	(bad)  
   140012051:	cmp    al,0xe
   140012053:	mov    DWORD PTR [rax+0xf],edi
   140012056:	and    dh,dl
   140012058:	adc    BYTE PTR [rip+0xfffffffffa8ee709],cl        # 0x13a900767
   14001205e:	(bad)  
   14001205f:	push   rdi
   140012060:	jp     0x14001209d
   140012062:	(bad)  
   140012063:	or     BYTE PTR [rbp+0x61],ch
   140012066:	ficomp DWORD PTR [rsi-0x21cd885d]
   14001206c:	(bad)  
   14001206d:	lods   eax,DWORD PTR ds:[rsi]
   14001206e:	(bad)  
   14001206f:	(bad)  
   140012070:	xchg   BYTE PTR [rsi-0x1b75d5e8],bh
   140012076:	jle    0x1400120bb
   140012078:	or     al,cl
   14001207a:	(bad)  
   14001207b:	fldcw  WORD PTR [rbx+0x47]
   14001207e:	pop    rsp
   14001207f:	out    0x8,al
   140012081:	rol    BYTE PTR [rbp+0x27],0x70
   140012085:	rex.WRX push rsi
   140012087:	(bad)  
   140012088:	add    eax,0x42138496
   14001208d:	add    BYTE PTR [rdx],al
   14001208f:	pop    rdi
   140012090:	(bad)  
   140012091:	rex.RX movabs al,ds:0x88055119fc595073
   14001209b:	mov    r9b,0x6a
   14001209e:	add    eax,DWORD PTR [rax-0x61843c59]
   1400120a4:	and    esp,DWORD PTR [rsi+0x7b]
   1400120a7:	data16 jo 0x140012039
   1400120aa:	movsxd edi,DWORD PTR [rdx+0x6f]
   1400120ad:	jmp    0x18a8132d3
   1400120b2:	add    al,cl
   1400120b4:	(bad)  
   1400120b5:	sbb    bh,BYTE PTR [rax+0x26]
   1400120b8:	out    dx,eax
   1400120b9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400120ba:	retf   
   1400120bb:	push   rsi
   1400120bc:	loopne 0x1400120d6
   1400120be:	add    ecx,ebp
   1400120c0:	push   0xfffffffffffffffc
   1400120c2:	rex.XB xchg r14d,eax
   1400120c4:	mov    eax,DWORD PTR [rbp-0x5b5c6241]
   1400120ca:	jne    0x1400120c4
   1400120cc:	rex out dx,eax
   1400120ce:	and    eax,0x2ca39760
   1400120d3:	pop    rdx
   1400120d4:	mov    cl,0xb2
   1400120d6:	scas   eax,DWORD PTR es:[rdi]
   1400120d7:	jo     0x14001213b
   1400120d9:	(bad)  
   1400120da:	(bad)  
   1400120db:	loopne 0x140012087
   1400120dd:	(bad)  
   1400120de:	test   al,0x4e
   1400120e0:	out    dx,eax
   1400120e1:	adc    DWORD PTR [rcx],0x3
   1400120e4:	jne    0x1400120e5
   1400120e6:	test   eax,0x6b999f13
   1400120eb:	(bad)
   1400120ee:	and    bl,BYTE PTR [rcx]
   1400120f0:	test   al,0x24
   1400120f2:	mov    ah,BYTE PTR [rax+0x26cd3fac]
   1400120f8:	imul   edx,DWORD PTR [rsi],0x18
   1400120fb:	pop    rcx
   1400120fc:	(bad)  
   1400120fd:	sti    
   1400120fe:	(bad)  
   1400120ff:	cmp    DWORD PTR [rbx+0x46],ebp
   140012102:	mov    bl,0x3c
   140012104:	(bad)  
   140012105:	add    BYTE PTR [rdi+0x5939889e],dl
   14001210b:	adc    DWORD PTR [rip+0x289c0e58],0x72e009        # 0x1689d2f6d
   140012115:	movabs al,ds:0xc6fa869fe333eae8
   14001211e:	in     al,0x1f
   140012120:	add    ah,cl
   140012122:	mov    ds,edx
   140012124:	(bad)  
   140012125:	sahf   
   140012126:	push   rax
   140012127:	jno    0x1400121a8
   140012129:	adc    edi,ebp
   14001212b:	push   rbp
   14001212c:	out    dx,eax
   14001212d:	(bad)  
   14001212e:	retf   
   14001212f:	sbb    al,ch
   140012131:	movsxd ecx,DWORD PTR [rbp+0x3a89c9d3]
   140012137:	sbb    eax,0xacccc642
   14001213c:	(bad)
   14001213f:	test   BYTE PTR [rax+rax*1+0x72b50393],ch
   140012146:	push   rax
   140012147:	faddp  st(2),st
   140012149:	jnp    0x140012159
   14001214b:	mov    esp,0x46e330c
   140012150:	push   rdx
   140012151:	stc    
   140012152:	push   rdi
   140012153:	and    ah,BYTE PTR [rbx+0x43]
   140012156:	and    dl,dh
   140012158:	fwait
   140012159:	jl     0x140012129
   14001215b:	sub    WORD PTR [rdi-0x78],0x16f6
   140012161:	or     edx,DWORD PTR [rax]
   140012163:	test   eax,0x5201da86
   140012168:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012169:	mov    dh,0x12
   14001216b:	pop    rdi
   14001216c:	xchg   esi,eax
   14001216d:	jns    0x14001211b
   14001216f:	xlat   BYTE PTR ds:[ebx]
   140012171:	lea    eax,[rip+0x210bee48]        # 0x1610d0fbf
   140012177:	(bad)  
   140012178:	add    dl,dl
   14001217a:	rex.WR shr BYTE PTR [rax-0x7f],1
   14001217e:	xor    BYTE PTR [rip+0xffffffffd1dadd60],dh        # 0x111dbfee4
   140012184:	mov    gs,WORD PTR [rbx]
   140012186:	jb     0x14001218f
   140012188:	loopne 0x1400121b3
   14001218a:	(bad)  
   14001218b:	push   0x560564e
   140012190:	mov    cs,WORD PTR [rax]
   140012192:	(bad)  
   140012193:	rex.WRB add BYTE PTR [r10],r8b
   140012196:	call   rbp
   140012198:	jp     0x14001211a
   14001219a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001219b:	sub    al,0x98
   14001219d:	xchg   esi,eax
   14001219e:	(bad)  
   14001219f:	push   rsi
   1400121a0:	jmp    rsp
   1400121a2:	rex.WR xchg rdx,rax
   1400121a4:	mov    ah,0x9d
   1400121a6:	mov    ebp,0xae4e9ebb
   1400121ab:	(bad)  
   1400121ac:	and    ch,BYTE PTR [rdi+rsi*2]
   1400121af:	adc    BYTE PTR [rbx-0x56cbef02],ah
   1400121b5:	(bad)  
   1400121b6:	(bad)  
   1400121b7:	sti    
   1400121b8:	xor    bl,al
   1400121ba:	xor    edx,DWORD PTR [rbx]
   1400121bc:	jae    0x1400121a7
   1400121be:	cwde   
   1400121bf:	leave  
   1400121c0:	xor    DWORD PTR [rsp+rsi*1],esp
   1400121c3:	sbb    BYTE PTR [rsi],cl
   1400121c5:	xchg   edx,eax
   1400121c6:	jge    0x140012167
   1400121c8:	add    DWORD PTR [rcx+rax*4-0x3123e30e],edx
   1400121cf:	jno    0x1400121a0
   1400121d1:	in     al,dx
   1400121d2:	(bad)  
   1400121d5:	jg     0x1400121e1
   1400121d7:	fsub   DWORD PTR [rbp+0x8]
   1400121da:	cs and ebp,0x64
   1400121de:	push   rsp
   1400121df:	rex.W
   1400121e0:	rex.WRX xchg rbp,rax
   1400121e2:	fisubr WORD PTR [rbp-0x3b]
   1400121e5:	(bad)  
   1400121e6:	mov    eax,0xb92cc32a
   1400121eb:	fcom   DWORD PTR [rbp+0x79201fc8]
   1400121f1:	add    BYTE PTR [rax+rdx*4],bl
   1400121f4:	fadd   DWORD PTR [rcx]
   1400121f6:	adc    al,0xa5
   1400121f8:	lea    ecx,[rax]
   1400121fa:	pop    rax
   1400121fb:	and    al,0x21
   1400121fd:	in     al,dx
   1400121fe:	pop    rsi
   1400121ff:	mov    BYTE PTR [rcx+riz*4-0x965a7ba],al
   140012206:	(bad)  
   140012207:	and    dh,bh
   140012209:	outs   dx,DWORD PTR ds:[rsi]
   14001220a:	fild   WORD PTR [rsi+0x3b]
   14001220d:	rex.RB xchg r9d,eax
   14001220f:	mov    bh,0xb
   140012211:	(bad)  
   140012212:	loopne 0x1400121a6
   140012214:	int    0xbf
   140012216:	mul    cl
   140012218:	movabs ds:0x70ac702b02bcf16a,eax
   140012221:	add    ah,BYTE PTR [rax+rax*1]
   140012224:	jp     0x140012228
   140012226:	(bad)  
   140012227:	add    DWORD PTR [rsi],edi
   140012229:	fmul   QWORD PTR [rsi+rsi*8]
   14001222c:	rex.B int3 
   14001222e:	jl     0x140012256
   140012230:	adc    ch,ch
   140012232:	jnp    0x1400121de
   140012234:	push   rsp
   140012235:	rex.WB push r9
   140012237:	imul   edi,DWORD PTR [rdi],0xfffffff7
   14001223a:	stos   DWORD PTR es:[rdi],eax
   14001223b:	call   0x103f9cb7e
   140012240:	or     BYTE PTR [rsi-0x16],bl
   140012243:	fwait
   140012244:	or     eax,0x119cf040
   140012249:	(bad)  
   14001224a:	rex.WRXB in al,dx
   14001224c:	add    eax,ecx
   14001224e:	xchg   ecx,eax
   14001224f:	hlt    
   140012250:	pop    rcx
   140012251:	int    0x1
   140012253:	rex.RXB rcl r10b,cl
   140012256:	sub    ebp,DWORD PTR [rdi]
   140012258:	rex jns 0x140012272
   14001225b:	jg     0x1400122d5
   14001225d:	clc    
   14001225e:	gs jo  0x14001222f
   140012261:	movabs eax,ds:0x2d5b1d2097201ca4
   14001226a:	adc    DWORD PTR [rcx],edx
   14001226c:	jrcxz  0x1400122a3
   14001226e:	test   bh,cl
   140012270:	adc    BYTE PTR [rax],bl
   140012272:	push   rax
   140012273:	xchg   ecx,eax
   140012274:	(bad)  
   140012275:	mov    DWORD PTR [rsi],ebp
   140012277:	(bad)  
   140012278:	rex.WRB cld 
   14001227a:	mov    esp,DWORD PTR [rbx]
   14001227c:	mov    cl,0xa5
   14001227e:	(bad)
   140012282:	rex.WX stos QWORD PTR es:[rdi],rax
   140012284:	(bad)
   140012288:	or     DWORD PTR [rdx+0x51480fc2],edx
   14001228e:	mov    edi,0xe023afba
   140012293:	shr    BYTE PTR [rbx],cl
   140012295:	(bad)  
   140012296:	pop    rcx
   140012297:	rex.WRB cqo 
   140012299:	retf   
   14001229a:	sar    esp,0xcc
   14001229d:	jrcxz  0x14001223e
   14001229f:	xchg   edi,eax
   1400122a0:	adc    eax,0xc3238158
   1400122a5:	jno    0x1400122b8
   1400122a7:	add    al,0x7f
   1400122aa:	mov    bl,0x11
   1400122ac:	movabs al,ds:0x7d547f0c46952a89
   1400122b5:	(bad)  
   1400122b6:	and    al,BYTE PTR [rax]
   1400122b8:	sbb    BYTE PTR [rax-0x38c411f1],0xb5
   1400122bf:	addr32 (bad) 
   1400122c1:	or     eax,DWORD PTR [rsi]
   1400122c3:	pop    rcx
   1400122c4:	mov    edi,ebp
   1400122c6:	push   rax
   1400122c7:	(bad)  
   1400122c8:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400122c9:	push   rdi
   1400122ca:	ss pop rsp
   1400122cc:	xor    ch,BYTE PTR [rcx]
   1400122ce:	push   rcx
   1400122cf:	mov    BYTE PTR [rax+0x19ec442],bh
   1400122d5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400122d6:	ror    BYTE PTR [rsp+riz*8-0x80],0x2c
   1400122db:	add    esi,DWORD PTR [rdx-0x17]
   1400122de:	jmp    0x1970508da
   1400122e3:	loope  0x1400122c3
   1400122e5:	mov    al,0x5
   1400122e7:	and    eax,0x20544872
   1400122ec:	rex.RXB outs dx,BYTE PTR ds:[rsi]
   1400122ee:	ffree  st(4)
   1400122f0:	(bad)  
   1400122f1:	jae    0x1400122e2
   1400122f3:	imul   esp,edi,0x7b38aa5
   1400122f9:	rex.RB
   1400122fa:	lock (bad) 
   1400122fc:	and    BYTE PTR [rax+0x4842e888],bl
   140012302:	sub    ah,BYTE PTR [rdx-0x7bc9ac00]
   140012308:	cwde   
   140012309:	mov    WORD PTR [rax],ds
   14001230b:	sub    ah,ah
   14001230d:	(bad)  
   14001230e:	rex.X adc BYTE PTR [rbx-0x5f326583],cl
   140012315:	movabs eax,ds:0xb15de701043b4406
   14001231e:	jno    0x140012342
   140012320:	retf   
   140012321:	jae    0x14001232a
   140012323:	loopne 0x1400122de
   140012325:	(bad)  
   140012326:	xor    ebp,DWORD PTR [rdi]
   140012328:	sub    esi,DWORD PTR [rax+0x6385cb02]
   14001232e:	add    BYTE PTR es:[rcx-0x45ff6901],al
   140012335:	add    BYTE PTR [rbp-0x1f96032],dl
   14001233b:	pop    rax
   14001233c:	add    dh,BYTE PTR [rbp+0x59]
   14001233f:	mov    ecx,0xff34c103
   140012344:	lock xor eax,0xa5f7b215
   14001234a:	cdq    
   14001234b:	xchg   DWORD PTR [rdi],ebp
   14001234d:	(bad)  
   14001234e:	loopne 0x1400123a7
   140012350:	mov    dl,0xc6
   140012352:	add    DWORD PTR [rax],esi
   140012354:	cmp    al,0x33
   140012356:	cli    
   140012357:	sub    bl,BYTE PTR [rdi-0x5d9f3f05]
   14001235d:	mov    eax,fs
   14001235f:	mov    DWORD PTR [rcx],ecx
   140012361:	rex.WR movabs rcx,0x1b8017900564f424
   14001236b:	(bad)  
   14001236c:	pop    rdi
   14001236d:	int3   
   14001236e:	mov    esp,0xbc194418
   140012373:	xchg   esp,eax
   140012374:	out    dx,eax
   140012375:	rex.WR mov WORD PTR [rbp+0x55],?
   140012379:	adc    ch,BYTE PTR [rbp-0x64cb1ba9]
   14001237f:	add    BYTE PTR [rcx+0xa489f88],bl
   140012385:	xchg   esi,eax
   140012386:	jae    0x1400123b5
   140012388:	mov    edx,0x301aa27e
   14001238d:	push   rdi
   14001238e:	(bad)  
   14001238f:	cmp    eax,0x66abf3d
   140012394:	pop    rdx
   140012395:	jno    0x140012396
   140012397:	movabs al,ds:0x18902c134a5e0131
   1400123a0:	lods   al,BYTE PTR ds:[rsi]
   1400123a1:	rol    BYTE PTR [rbp+rdx*2-0x57],1
   1400123a5:	mov    bh,0xae
   1400123a7:	(bad)  
   1400123a8:	ins    BYTE PTR es:[rdi],dx
   1400123a9:	cmp    al,0x63
   1400123ab:	mov    esp,0x45bb79b
   1400123b0:	loopne 0x14001242b
   1400123b2:	fcomip st,st(6)
   1400123b5:	mul    DWORD PTR [rbx+0x58]
   1400123b8:	adc    DWORD PTR [rip+0x1c70c938],0x46d0012        # 0x15c71ecfa
   1400123c2:	xor    BYTE PTR [rdx+0x5003d390],dh
   1400123c8:	or     DWORD PTR [rax-0x47df68d6],eax
   1400123ce:	xlat   BYTE PTR ds:[rbx]
   1400123cf:	sbb    esi,DWORD PTR [rbx-0x23]
   1400123d2:	std    
   1400123d3:	out    0x81,eax
   1400123d5:	mov    esp,0x10f67e70
   1400123da:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400123db:	rex.WRXB xor r10b,r9b
   1400123de:	(bad)  
   1400123df:	rex.RB inc r8b
   1400123e2:	push   rdx
   1400123e3:	pop    rdx
   1400123e4:	rex.RB (bad) 
   1400123e6:	outs   dx,DWORD PTR ds:[rsi]
   1400123e7:	mov    DWORD PTR [rsp+rdx*4-0x36d78ca3],ebx
   1400123ee:	adc    DWORD PTR [rdx+0x26],eax
   1400123f1:	cs ds (bad) 
   1400123f4:	in     al,0xf8
   1400123f6:	loopne 0x1400123bb
   1400123f8:	(bad)  
   1400123f9:	rol    BYTE PTR [rcx+0x4c],0x22
   1400123fd:	push   rax
   1400123fe:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400123ff:	add    eax,0x5bf63955
   140012404:	movups XMMWORD PTR [rcx+0x72befa9b],xmm0
   14001240b:	jp     0x14001245a
   14001240d:	xor    ecx,DWORD PTR [rax]
   14001240f:	movabs eax,ds:0x9aa215009da20092
   140012418:	xor    cl,ah
   14001241a:	(bad)  
   14001241b:	js     0x1400123b5
   14001241d:	jp     0x140012431
   14001241f:	mov    WORD PTR [rax],?
   140012421:	cwde   
   140012422:	cmp    esi,DWORD PTR [rcx-0x5be601ce]
   140012428:	add    bh,bh
   14001242a:	jo     0x14001245c
   14001242c:	movabs ds:0x56f394f65d941452,al
   140012435:	xchg   ecx,eax
   140012436:	jae    0x140012455
   140012438:	add    BYTE PTR [rdi],bh
   14001243a:	jno    0x140012428
   14001243c:	jae    0x1400123f1
   14001243e:	add    ch,BYTE PTR [rbx]
   140012440:	mov    al,0x3c
   140012442:	cmp    BYTE PTR [rsi],ah
   140012444:	add    dl,BYTE PTR [rax]
   140012446:	clc    
   140012447:	std    
   140012448:	add    al,0xd0
   14001244a:	mov    ecx,0x598fb049
   14001244f:	cli    
   140012450:	rex.XB
   140012451:	repnz sbb eax,0xf0f19988
   140012457:	cmp    BYTE PTR [rax-0x37af950d],bh
   14001245d:	and    eax,0x7c4137d4
   140012462:	js     0x140012428
   140012464:	push   0xffffffffffffffbf
   140012466:	in     al,dx
   140012467:	stos   DWORD PTR es:[rdi],eax
   140012468:	or     BYTE PTR [rax+rax*8+0x87182c],bl
   14001246f:	(bad)  
   140012470:	cwde   
   140012471:	loopne 0x140012417
   140012473:	test   BYTE PTR [rdi-0x3bb98e95],dl
   140012479:	pop    rsp
   14001247a:	je     0x14001244c
   14001247c:	(bad)  
   14001247d:	lods   al,BYTE PTR ds:[rsi]
   14001247e:	rol    edi,0xe7
   140012481:	lahf   
   140012482:	lea    eax,[rax+0xe]
   140012485:	add    DWORD PTR [rcx],ebx
   140012487:	cwde   
   140012488:	or     DWORD PTR [rcx+0x43],eax
   14001248b:	repz cld 
   14001248d:	rcl    ah,0x0
   140012490:	rex.R sbb al,0xb4
   140012493:	rex lahf 
   140012495:	adc    BYTE PTR [rcx+0x33],bl
   140012498:	mov    esp,0x7d7ea09e
   14001249e:	mov    cl,0x13
   1400124a0:	pop    rax
   1400124a1:	cmp    BYTE PTR [rdi-0x1bb794ca],ch
   1400124a7:	cli    
   1400124a8:	mov    ah,0x32
   1400124aa:	mov    ecx,DWORD PTR [rdi+0x50]
   1400124ad:	cmp    eax,0x1d5c2b2a
   1400124b2:	mov    bh,0x36
   1400124b4:	push   rsp
   1400124b5:	mov    ch,0x66
   1400124b7:	movabs al,ds:0xba57b2204f505446
   1400124c0:	call   0x10eae8cae
   1400124c5:	and    eax,0xc7d5f039
   1400124ca:	xor    dh,BYTE PTR [rdi]
   1400124cc:	sub    esi,DWORD PTR [rax-0x38fcb8fe]
   1400124d2:	sub    BYTE PTR [rcx],al
   1400124d4:	sar    BYTE PTR [rdx-0x40],1
   1400124d7:	xor    dl,bh
   1400124d9:	movabs ds:0xb84005b2bf915fcf,al
   1400124e2:	(bad)  
   1400124e3:	adc    DWORD PTR [rax+0x2e5df688],ecx
   1400124e9:	rex.B
   1400124ea:	ds sbb ah,bh
   1400124ed:	out    dx,eax
   1400124ee:	(bad)  
   1400124ef:	pop    rdx
   1400124f0:	out    0x4f,eax
   1400124f2:	adc    edi,ebx
   1400124f4:	xchg   DWORD PTR [rax+0xf804052],esp
   1400124fa:	movabs eax,ds:0x77b965300005b84a
   140012503:	rex.RB
   140012504:	movabs al,ss:0xfe19da982b2108c
   14001250e:	idiv   esp
   140012510:	adc    al,0xfa
   140012512:	scas   al,BYTE PTR es:[rdi]
   140012513:	or     eax,0xc45579cf
   140012518:	adc    DWORD PTR [rax-0x17733078],ecx
   14001251e:	(bad)  
   140012520:	add    BYTE PTR [rbp+0x3e157ed],cl
   140012526:	xchg   ebp,eax
   140012527:	rex.WRB movabs al,ds:0x7e8d360574701132
   140012531:	imul   ecx,DWORD PTR [rax],0x54255470
   140012537:	or     DWORD PTR [rdi+0x71c9ce08],0x24
   14001253e:	rex.R shl DWORD PTR [rax-0x78],0x30
   140012543:	(bad)  
   140012544:	(bad)  
   140012545:	(bad)
   140012548:	pop    rcx
   140012549:	imul   eax,DWORD PTR [rdi+0x47],0xffffffcf
   14001254d:	mov    ebp,0x1138cb70
   140012552:	pop    rbp
   140012553:	mov    esp,0xff7f6df9
   140012558:	mov    ah,0x63
   14001255a:	fwait
   14001255b:	lahf   
   14001255c:	adc    eax,0xc1e58158
   140012561:	mov    cl,0xaa
   140012563:	add    BYTE PTR [rbx+0x17],bl
   140012566:	rex.RX cli 
   140012568:	ror    DWORD PTR [rax],0x81
   14001256b:	test   ebx,edi
   14001256d:	ret    0x87be
   140012570:	cmp    ebx,0x37
   140012573:	mov    ecx,0xc17accf6
   140012578:	sub    al,0x23
   14001257a:	add    cl,dl
   14001257c:	std    
   14001257d:	loope  0x140012598
   14001257f:	add    ecx,edi
   140012581:	adc    bl,ch
   140012583:	ret    
   140012584:	rex fistp QWORD PTR [rbx-0x66109b68]
   14001258b:	loopne 0x14001259e
   14001258d:	add    bh,al
   14001258f:	jo     0x140012595
   140012591:	rex.RXB (bad) 
   140012593:	pop    rcx
   140012594:	xchg   al,ah
   140012596:	mov    cl,BYTE PTR [rbx+rdi*1]
   140012599:	(bad)  
   14001259a:	ins    DWORD PTR es:[rdi],dx
   14001259b:	cmc    
   14001259c:	(bad)  
   14001259d:	(bad)  
   14001259f:	adc    eax,0x8300a018
   1400125a4:	xchg   edx,eax
   1400125a5:	test   al,0x3c
   1400125a7:	shl    ah,0x74
   1400125aa:	imul   edx,DWORD PTR [rax],0x7b821a8a
   1400125b0:	rex.XB cli 
   1400125b2:	shl    ch,0xf4
   1400125b5:	fiadd  WORD PTR [rbp+rdx*2+0x60]
   1400125b9:	rex pop rbp
   1400125bb:	(bad)  
   1400125bc:	cmc    
   1400125bd:	mov    eax,0xd1384a80
   1400125c2:	pop    rbp
   1400125c3:	mov    esi,0x7e22a64e
   1400125c8:	xchg   DWORD PTR [rax],edi
   1400125ca:	add    cl,dl
   1400125cc:	gs call 0x1986e447b
   1400125d2:	or     BYTE PTR [r14],r12b
   1400125d5:	(bad)  
   1400125d6:	add    al,0x6
   1400125d8:	mov    esp,0xfa7c2e03
   1400125dd:	cmp    DWORD PTR [rbx+0x4e56b3],ebp
   1400125e3:	mov    edi,0x67e718f5
   1400125e8:	add    eax,0x70596056
   1400125ed:	(bad)  
   1400125ee:	add    al,0x20
   1400125f0:	lock xchg esi,ecx
   1400125f3:	add    BYTE PTR [rax+0x4f81580b],ch
   1400125f9:	mov    esi,ebp
   1400125fb:	rex.XB lods al,BYTE PTR ds:[rsi]
   1400125fd:	mov    WORD PTR [rdi+0x73],ss
   140012600:	add    eax,DWORD PTR [rsi]
   140012602:	add    BYTE PTR [rdx],0xcd
   140012605:	in     eax,dx
   140012606:	jle    0x14001266e
   140012608:	(bad)  
   140012609:	push   rax
   14001260a:	fild   QWORD PTR [rdi+0x56594088]
   140012610:	lods   al,BYTE PTR ds:[rsi]
   140012611:	(bad)  
   140012612:	lods   al,BYTE PTR ds:[rsi]
   140012613:	inc    BYTE PTR [rcx-0x75]
   140012616:	add    esi,DWORD PTR [rax-0x7c7f0076]
   14001261c:	retf   
   14001261d:	add    BYTE PTR [rax],bh
   14001261f:	rex.X sahf 
   140012621:	xor    ebp,esp
   140012623:	jns    0x14001263e
   140012625:	repnz ss scas al,BYTE PTR es:[rdi]
   140012628:	mov    edi,0xb3fb69ef
   14001262d:	sub    al,0x3
   14001262f:	jae    0x1400125d7
   140012631:	sar    BYTE PTR [rbp+rdx*2-0x7d58ca08],cl
   140012638:	xchg   ebp,eax
   140012639:	jmp    0x1b55c9846
   14001263e:	repnz (bad) 
   140012640:	(bad)  
   140012641:	jbe    0x140012608
   140012643:	adc    ah,cl
   140012645:	and    BYTE PTR [rax],ch
   140012647:	(bad)  
   140012648:	cmp    DWORD PTR [rcx],ecx
   14001264a:	jmp    0x140012659
   14001264c:	(bad)  
   14001264d:	ficomp WORD PTR [rbx]
   14001264f:	rex.R push rbx
   140012651:	and    DWORD PTR [rbx+riz*1+0x4c2c624],0x807bcd71
   14001265c:	mov    edx,0xf7e80f68
   140012661:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140012662:	stos   BYTE PTR es:[rdi],al
   140012663:	out    0x35,eax
   140012665:	mov    ds,WORD PTR [rcx-0x7a168fec]
   14001266b:	imul   edx,DWORD PTR [rdi-0x63],0x75
   14001266f:	(bad)  
   140012670:	xchg   esi,eax
   140012671:	push   rcx
   140012672:	jb     0x140012668
   140012674:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012675:	int    0x6f
   140012677:	std    
   140012678:	mov    ebx,0x1ced1ee7
   14001267d:	lods   eax,DWORD PTR ds:[rsi]
   14001267e:	ror    BYTE PTR [rdx],0x2c
   140012681:	(bad)  
   140012682:	mov    fs,WORD PTR [rbp+0x5416e026]
   140012688:	ins    DWORD PTR es:[rdi],dx
   140012689:	mov    ebp,0xd8fa26bc
   14001268e:	imul   DWORD PTR [rdx+0x610a6da]
   140012694:	add    bl,al
   140012696:	push   rcx
   140012697:	imul   edi,edi,0x25
   14001269a:	adc    ecx,ebp
   14001269c:	jge    0x1400126c0
   14001269e:	xchg   edi,eax
   14001269f:	(bad)  
   1400126a0:	es or  al,0x2
   1400126a3:	movabs ds:0x97d57df46070381c,eax
   1400126ac:	jnp    0x14001270e
   1400126ae:	not    eax
   1400126b0:	sbb    bl,BYTE PTR [rsi-0x32]
   1400126b3:	jns    0x140012657
   1400126b5:	sbb    al,0x79
   1400126b7:	out    dx,al
   1400126b8:	retf   0xf6fb
   1400126bb:	outs   dx,DWORD PTR ds:[rsi]
   1400126bc:	call   0x138e89b9e
   1400126c1:	(bad)  
   1400126c2:	int    0x57
   1400126c4:	mov    ecx,0xe532555
   1400126c9:	imul   di,WORD PTR [rdi-0x4f75b66c],0x763
   1400126d2:	mov    al,0x48
   1400126d4:	add    eax,0x4b5c3018
   1400126d9:	retf   
   1400126da:	xor    DWORD PTR [rbx-0x7b4bedbe],ebp
   1400126e0:	mov    bh,0x63
   1400126e2:	or     eax,0x3af2720a
   1400126e7:	add    al,0x29
   1400126e9:	test   DWORD PTR [rdi+rax*8],0x380ce26
   1400126f0:	movsxd esp,eax
   1400126f2:	stos   BYTE PTR es:[rdi],al
   1400126f3:	and    DWORD PTR [rdx-0x3b],0xcf53ab70
   1400126fa:	nop
   1400126fb:	mul    DWORD PTR [rbp+0x6b18044c]
   140012701:	(bad)  
   140012702:	(bad)  
   140012703:	outs   dx,DWORD PTR ds:[rsi]
   140012704:	or     BYTE PTR [rdx-0x1],0x8f
   140012708:	in     eax,dx
   140012709:	mov    ebp,0x6232ac
   14001270e:	nop
   14001270f:	leave  
   140012710:	mov    bl,0xa5
   140012712:	adc    BYTE PTR [rcx-0xf76d0e6],ch
   140012718:	in     al,0x1f
   14001271a:	mov    edi,0x1ff6dd68
   14001271f:	cmp    eax,0xfefa5330
   140012724:	fwait
   140012725:	(bad)  
   140012726:	mov    edi,0xb4beeff5
   14001272b:	jrcxz  0x1400126ea
   14001272d:	scas   eax,DWORD PTR es:[rdi]
   14001272e:	rex.WXB sbb al,0x88
   140012731:	sub    esi,DWORD PTR [rax+0x24]
   140012734:	cwde   
   140012735:	fidiv  DWORD PTR [rsi-0x3]
   140012738:	and    eax,0x600dde00
   14001273d:	rex.XB mov r10b,0x9b
   140012740:	rex.WR (bad) 
   140012742:	stos   DWORD PTR es:[rdi],eax
   140012743:	movabs al,ds:0xd96451503f5cd6a2
   14001274c:	rex.W pop rdx
   14001274e:	or     BYTE PTR [rsi],ah
   140012750:	sti    
   140012751:	(bad)  
   140012752:	pop    rsp
   140012753:	(bad)  
   140012754:	in     al,0xfe
   140012756:	pushf  
   140012757:	cmp    al,0xfb
   140012759:	push   0xffffffff8a3dabae
   14001275e:	cmc    
   14001275f:	(bad)  
   140012760:	cwde   
   140012761:	(bad)  
   140012762:	out    0x19,al
   140012764:	rex.W icebp 
   140012766:	iret   
   140012767:	std    
   140012768:	add    dh,bh
   14001276a:	jb     0x14001273b
   14001276c:	xchg   edi,edi
   14001276e:	mov    bh,0xaf
   140012770:	jrcxz  0x14001278a
   140012772:	loope  0x14001271c
   140012774:	or     BYTE PTR [rax-0x20],al
   140012777:	mov    edi,0x5a30071b
   14001277c:	sub    eax,0x52ea58dd
   140012781:	rex.RB jg 0x140012772
   140012784:	add    edx,esp
   140012786:	(bad)  
   140012787:	(bad)
   14001278b:	adc    BYTE PTR [rsi],bl
   14001278d:	mov    esi,0x7b5929ff
   140012792:	outs   dx,BYTE PTR ds:[rsi]
   140012793:	sbb    al,0x3
   140012795:	(bad)  
   140012796:	mov    bh,BYTE PTR [rdi]
   140012798:	(bad)  
   140012799:	xchg   ebp,eax
   14001279a:	rol    DWORD PTR [rdi+0x1d48fd1a],cl
   1400127a0:	repz fiadd DWORD PTR [rdx+0x37]
   1400127a4:	xor    rax,0xfffffffff20bc04e
   1400127aa:	push   rbx
   1400127ab:	add    BYTE PTR [rbp+0x40],ah
   1400127ae:	out    0x1c,al
   1400127b0:	repnz sub al,0xa3
   1400127b3:	outs   dx,BYTE PTR ds:[rsi]
   1400127b4:	or     DWORD PTR [rdi+0x3fd17ade],0xe5c5dd83
   1400127be:	loope  0x14001279e
   1400127c0:	je     0x14001275a
   1400127c2:	push   0x3da71ad
   1400127c7:	cwde   
   1400127c8:	pop    rax
   1400127c9:	outs   dx,BYTE PTR ds:[rsi]
   1400127ca:	addr32 xor eax,eax
   1400127cd:	sar    BYTE PTR [rbp+0x15],cl
   1400127d0:	or     BYTE PTR [rbx-0x37e3d600],al
   1400127d6:	imul   esi,DWORD PTR [rbx+0x2e4012c6],0x8b91d5f5
   1400127e0:	scas   eax,DWORD PTR es:[rdi]
   1400127e1:	and    al,BYTE PTR [rdx+rax*4]
   1400127e4:	jae    0x1400127bb
   1400127e6:	cmc    
   1400127e7:	add    DWORD PTR [rbp+0x3b],edx
   1400127ea:	(bad)  
   1400127eb:	(bad)  
   1400127ec:	jmp    0x10e0f8f0e
   1400127f1:	movabs al,ds:0x3d203aa92860acfb
   1400127fa:	add    eax,0x103f9b59
   1400127ff:	nop
   140012800:	and    eax,0x24c9e87d
   140012805:	(bad)  
   140012806:	shl    BYTE PTR [rsi-0x7d],cl
   140012809:	adc    eax,0x2a888d
   14001280e:	rex.R jp 0x140012881
   140012811:	add    al,0x5c
   140012813:	mov    eax,0x5c4f575
   140012818:	xchg   edi,eax
   140012819:	sahf   
   14001281a:	xor    esi,ecx
   14001281c:	sbb    DWORD PTR [rbx+0x7f],0x78
   140012820:	xor    DWORD PTR [rdi+0x370052f0],eax
   140012826:	(bad)  
   140012827:	retf   
   140012828:	add    al,0x3f
   14001282a:	(bad)  
   14001282b:	(bad)  
   14001282c:	push   0xffffffffffffffdb
   14001282e:	cmc    
   14001282f:	(bad)  
   140012830:	shr    bh,0x64
   140012833:	jns    0x14001286b
   140012835:	(bad)  
   140012836:	sbb    ebp,ebp
   140012838:	mov    eax,0x3ad2dda2
   14001283d:	scas   al,BYTE PTR es:[rdi]
   14001283e:	pop    rsp
   14001283f:	ret    
   140012840:	stos   DWORD PTR es:[rdi],eax
   140012841:	pop    rax
   140012842:	adc    ch,BYTE PTR [rsi]
   140012844:	(bad)  
   140012845:	lea    esp,[rax]
   140012847:	rex.WX jne 0x1400128b4
   14001284a:	and    eax,0xa164e3b2
   14001284f:	in     al,0xac
   140012851:	lods   eax,DWORD PTR ds:[rsi]
   140012852:	jnp    0x1400128c0
   140012854:	cmp    ebp,DWORD PTR [rax-0x38aba891]
   14001285a:	pop    rax
   14001285b:	movabs eax,ds:0x936f5544245b6d9a
   140012864:	fcom   DWORD PTR [rax+rax*8-0x822a574]
   14001286b:	pop    rdx
   14001286c:	loop   0x1400127f6
   14001286e:	retf   0x4c98
   140012871:	fisub  DWORD PTR [rdi-0x34]
   140012874:	jp     0x14001287e
   140012876:	add    esp,DWORD PTR [rax+0x1e]
   140012879:	(bad)  
   14001287a:	xor    BYTE PTR [rsi],al
   14001287c:	lock jp 0x14001287f
   14001287f:	ja     0x140012881
   140012881:	cld    
   140012882:	int    0xe3
   140012884:	sbb    DWORD PTR [rbx+0x680094a3],ebp
   14001288a:	xchg   ebx,eax
   14001288b:	cld    
   14001288c:	or     ah,bl
   14001288e:	jno    0x1400128fc
   140012890:	cli    
   140012891:	(bad)  
   140012892:	test   BYTE PTR [rax],ch
   140012894:	push   rax
   140012895:	rcl    DWORD PTR [rax-0x109ebffc],1
   14001289b:	rol    esp,cl
   14001289d:	mov    ah,0xae
   14001289f:	(bad)  
   1400128a0:	js     0x1400128c3
   1400128a2:	or     BYTE PTR [rcx],ah
   1400128a4:	or     BYTE PTR [rax],al
   1400128a6:	mov    esp,0x39de557
   1400128ab:	(bad)  
   1400128ac:	ins    BYTE PTR es:[rdi],dx
   1400128ad:	fcomp  QWORD PTR [rdi+0x49aebcc4]
   1400128b3:	rex.R
   1400128b4:	rex.WRX out 0x8e,eax
   1400128b7:	xor    al,BYTE PTR [rsi]
   1400128b9:	movabs eax,gs:0xef45df373be4787f
   1400128c3:	jrcxz  0x140012873
   1400128c5:	sti    
   1400128c6:	(bad)  
   1400128c8:	adc    ebx,0x7
   1400128cb:	cmp    ch,BYTE PTR [rbx-0x296b28da]
   1400128d1:	push   0xffffffff90b24bc3
   1400128d6:	in     al,0xe6
   1400128d8:	imul   eax,esi,0x60
   1400128db:	rcr    BYTE PTR [rax*1-0x39bd6cea],1
   1400128e2:	add    DWORD PTR [rsp-0xb],eax
   1400128e6:	rex.RX jb 0x140012909
   1400128e9:	xchg   ebx,eax
   1400128ea:	sub    bl,BYTE PTR [rsi]
   1400128ec:	jo     0x14001293c
   1400128ee:	cmp    edi,DWORD PTR [rax-0x7cfd1f80]
   1400128f4:	popf   
   1400128f5:	xor    eax,0x20706116
   1400128fa:	clc    
   1400128fb:	xchg   BYTE PTR [rax+rax*2],dl
   1400128fe:	sbb    DWORD PTR [rcx+rcx*8+0x41c08243],esi
   140012905:	cdq    
   140012906:	mov    eax,0x7111e1b3
   14001290b:	and    BYTE PTR [rsi],dh
   14001290d:	movabs ds:0x2f07d284b30c1880,al
   140012916:	in     eax,0xc
   140012918:	in     al,0xc9
   14001291a:	push   0xa
   14001291c:	and    DWORD PTR [rcx],edi
   14001291e:	out    dx,eax
   14001291f:	retf   0xb89f
   140012922:	push   0xffffffffb83f5ddd
   140012927:	out    dx,eax
   140012928:	push   rax
   140012929:	jg     0x140012991
   14001292b:	(bad)  
   14001292c:	(bad)  
   14001292d:	ss mov edi,0xdf9f43f5
   140012933:	icebp  
   140012934:	ficomp WORD PTR [rdi-0x703955c1]
   14001293a:	(bad)  
   14001293b:	movsxd edi,DWORD PTR [rax-0x4b]
   14001293e:	retf   
   14001293f:	fcom   QWORD PTR [rbx]
   140012941:	cs jp  0x140012926
   140012944:	(bad)  
   140012946:	mov    edi,0x9ee7fafc
   14001294b:	sbb    DWORD PTR [rax+0x6c184830],ecx
   140012951:	pop    rdx
   140012952:	clc    
   140012953:	cmp    ebx,DWORD PTR [rdx]
   140012955:	ins    DWORD PTR es:[rdi],dx
   140012956:	xchg   ebx,eax
   140012957:	test   ah,0xd1
   14001295a:	cmp    eax,ebx
   14001295c:	(bad)  
   14001295d:	sub    edx,DWORD PTR [rdx-0x3b]
   140012960:	sbb    DWORD PTR [rax+0x5b],0x1510b20a
   140012967:	rsqrtps xmm0,XMMWORD PTR ss:[rax]
   14001296b:	mov    esp,0x62bcd8aa
   140012970:	cld    
   140012971:	add    BYTE PTR [rax],al
   140012973:	and    BYTE PTR [rax],al
   140012975:	rex.WB
   140012976:	rex.R
   140012977:	push   r12
   140012979:	mov    WORD PTR [rax+riz*8],ds
   14001297c:	(bad)  
   14001297d:	jb     0x1400129a2
   14001297f:	mov    DWORD PTR [rdx],edx
   140012981:	gs xchg esp,eax
   140012983:	sbb    bl,ah
   140012985:	sbb    bh,dl
   140012987:	and    bh,0xa0
   14001298a:	jno    0x1400129ad
   14001298c:	(bad)  
   14001298d:	cmp    al,0x90
   14001298f:	rcl    bh,0x10
   140012992:	or     ah,ch
   140012994:	add    eax,DWORD PTR [rdx]
   140012996:	xchg   DWORD PTR [rdx-0x43496af6],ebp
   14001299c:	addr32 cmc 
   14001299e:	mov    cl,BYTE PTR [rdi]
   1400129a0:	(bad)  
   1400129a1:	add    ebx,edi
   1400129a3:	out    0x4a,eax
   1400129a5:	cmp    al,0x74
   1400129a7:	sti    
   1400129a8:	neg    DWORD PTR [rsi]
   1400129aa:	fidiv  WORD PTR [rbp+0x7ddefd]
   1400129b0:	jg     0x140012a18
   1400129b2:	iret   
   1400129b3:	xchg   DWORD PTR [rdi-0x35],edi
   1400129b6:	jrcxz  0x1400129f0
   1400129b8:	(bad)  
   1400129b9:	fld    DWORD PTR [rax+riz*1]
   1400129bc:	lock xchg ebx,ebx
   1400129bf:	add    BYTE PTR [rdi+0x22],cl
   1400129c2:	(bad)  
   1400129c3:	hlt    
   1400129c4:	(bad)  
   1400129c5:	gs mov ebp,0xd26b2283
   1400129cb:	jmp    0xe0de7317
   1400129d0:	fbstp  TBYTE PTR [rcx-0x13]
   1400129d3:	add    esp,edi
   1400129d5:	stos   DWORD PTR es:[rdi],eax
   1400129d6:	xchg   ebx,eax
   1400129d7:	pop    rsp
   1400129d8:	jge    0x140012a46
   1400129da:	sbb    al,BYTE PTR [rbx]
   1400129dc:	rcr    BYTE PTR [rsi-0x4],0x68
   1400129e0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400129e1:	(bad)  
   1400129e2:	js     0x140012a33
   1400129e4:	adc    dh,ch
   1400129e6:	(bad)  
   1400129e7:	pop    rax
   1400129e8:	imul   esi,DWORD PTR [rcx+0x3b],0x21
   1400129ec:	rcl    BYTE PTR [rcx+rax*4+0x32cb23c8],0x50
   1400129f4:	(bad)  
   1400129f5:	mov    ah,0x32
   1400129f7:	jl     0x1400129f8
   1400129f9:	fwait
   1400129fa:	mov    ebp,0xe372de3f
   1400129ff:	mov    ebx,0x17fbb96e
   140012a04:	push   QWORD PTR [rsi-0x5]
   140012a07:	sahf   
   140012a08:	fld    QWORD PTR [rdi]
   140012a0a:	mov    bl,0xb3
   140012a0c:	ss ins DWORD PTR es:[rdi],dx
   140012a0e:	sahf   
   140012a0f:	out    0xc2,eax
   140012a11:	jne    0x140012a37
   140012a13:	rex.W
   140012a14:	rex.W je 0x140012a94
   140012a17:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140012a18:	add    eax,0xc26bc9fb
   140012a1d:	mov    cs,WORD PTR [rbx]
   140012a1f:	movabs al,ds:0xf6e2949cb5c101
   140012a28:	jb     0x140012a6b
   140012a2a:	ins    BYTE PTR es:[rdi],dx
   140012a2b:	and    dl,BYTE PTR [rsi+0x48212556]
   140012a31:	add    dl,BYTE PTR [rcx+0x60]
   140012a34:	js     0x140012a3d
   140012a36:	cmp    BYTE PTR [rsi],cl
   140012a38:	mov    cl,0x6b
   140012a3a:	stos   DWORD PTR es:[rdi],eax
   140012a3b:	adc    eax,0xe404f731
   140012a40:	and    ch,BYTE PTR [rbx-0x58]
   140012a43:	fsubr  DWORD PTR [rsi-0x17b2075b]
   140012a49:	mov    al,0xbc
   140012a4b:	rex.RXB scas al,BYTE PTR es:[rdi]
   140012a4d:	pop    rdx
   140012a4e:	rex cdq 
   140012a50:	xchg   ebp,eax
   140012a51:	and    eax,0x1b7df44b
   140012a56:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140012a57:	fsub   DWORD PTR [rsp+rsi*1-0x18]
   140012a5b:	movabs ds:0x8dd65b0110518aa4,al
   140012a64:	lea    edi,[rsi]
   140012a66:	stc    
   140012a67:	cdq    
   140012a68:	xchg   edi,eax
   140012a69:	scas   al,BYTE PTR es:[rdi]
   140012a6a:	mov    ebp,0x6b7f3f9
   140012a6f:	pop    rdi
   140012a70:	cli    
   140012a71:	call   QWORD PTR [rbx]
   140012a73:	shr    BYTE PTR [rdi+0x1d],0xcf
   140012a77:	fs (bad) 
   140012a79:	(bad)  
   140012a7a:	(bad)  
   140012a7b:	push   0xffffffffffffffdb
   140012a7d:	cmc    
   140012a7e:	jmp    0x140012a81
   140012a80:	cld    
   140012a81:	mov    bx,0x76db
   140012a85:	(bad)  
   140012a86:	not    BYTE PTR [rdx+0x13ebaea7]
   140012a8c:	movabs eax,ds:0xee48ab30cd76e2af
   140012a95:	(bad)  
   140012a96:	push   rcx
   140012a97:	sub    eax,0xa6555bea
   140012a9c:	sub    eax,0xe746bd04
   140012aa1:	sbb    eax,0x2cd6e241
   140012aa6:	xchg   ecx,eax
   140012aa7:	sub    al,0x18
   140012aa9:	jb     0x140012ade
   140012aab:	imul   edx,DWORD PTR [rax],0xffffffab
   140012aae:	lods   al,BYTE PTR ds:[rsi]
   140012aaf:	and    DWORD PTR [rsi+0x7160b658],esi
   140012ab5:	es or  al,0xef
   140012ab8:	add    ebx,eax
   140012aba:	(bad)  
   140012abb:	mov    DWORD PTR [rdi+0x1b],esi
   140012abe:	add    al,0x9
   140012ac0:	and    BYTE PTR [rbp+0x6],0x87
   140012ac4:	and    al,cl
   140012ac6:	out    dx,eax
   140012ac7:	in     eax,0xdc
   140012ac9:	movabs al,ds:0xa0c0845d7b5ee88
   140012ad2:	idiv   r11b
   140012ad5:	cmp    dh,0x40
   140012ad8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012ad9:	xchg   BYTE PTR [rbx-0x5],al
   140012adc:	test   ebp,0xe4fd7f28
   140012ae2:	icebp  
   140012ae3:	mov    ss,edi
   140012ae5:	push   rcx
   140012ae6:	sbb    BYTE PTR [rcx],al
   140012ae8:	imul   edi,DWORD PTR [rbp-0x3b],0x4067e3f9
   140012aef:	xchg   ebp,eax
   140012af0:	out    dx,al
   140012af1:	fwait
   140012af2:	add    rsp,rdx
   140012af5:	adc    cl,BYTE PTR [rbx+rdi*2]
   140012af8:	out    dx,eax
   140012af9:	jg     0x140012b01
   140012afb:	js     0x140012a8d
   140012afd:	mov    ebx,eax
   140012aff:	(bad)  
   140012b00:	rex.W sub dil,sil
   140012b03:	mov    al,0x94
   140012b05:	std    
   140012b06:	mov    dl,0x1c
   140012b08:	pop    rbx
   140012b09:	imul   esi,ebx,0x92d5e0e5
   140012b0f:	(bad)  
   140012b10:	loopne 0x140012ad3
   140012b12:	and    BYTE PTR [rax],bh
   140012b14:	out    0x81,eax
   140012b16:	mov    eax,fs
   140012b18:	xor    al,BYTE PTR [rsi+0x7a6f42cb]
   140012b1e:	in     al,0x1b
   140012b20:	out    dx,eax
   140012b21:	cld    
   140012b22:	iret   
   140012b23:	pop    rdi
   140012b24:	stc    
   140012b25:	test   DWORD PTR [rcx-0x5b9b90b9],0x846219f5
   140012b2f:	repnz rol cl,0xfd
   140012b33:	xor    dl,BYTE PTR [rcx+0x55]
   140012b36:	ja     0x140012b18
   140012b38:	rcl    BYTE PTR [rsi],0xbd
   140012b3b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140012b3c:	(bad)  
   140012b3d:	cmp    eax,0x7e85fb75
   140012b42:	mov    BYTE PTR [rbp-0x42],ah
   140012b45:	(bad)  
   140012b46:	(bad)  
   140012b47:	jp     0x140012bac
   140012b49:	cmp    DWORD PTR [rax+0x5a],ecx
   140012b4c:	xchg   esp,eax
   140012b4d:	enter  0xdf06,0xa4
   140012b51:	mov    dl,0x78
   140012b53:	(bad)  
   140012b54:	push   rsp
   140012b55:	pop    rsi
   140012b56:	add    al,0x15
   140012b58:	jrcxz  0x140012b4e
   140012b5a:	jo     0x140012ae8
   140012b5c:	and    ch,BYTE PTR [rbp+rbp*2-0x47de7925]
   140012b63:	xchg   edi,eax
   140012b64:	or     DWORD PTR [rbp+0x3],ecx
   140012b67:	test   edx,esp
   140012b69:	loope  0x140012aff
   140012b6b:	cmp    eax,DWORD PTR [rcx]
   140012b6d:	mov    ch,0x0
   140012b6f:	movabs ds:0xce9bb586c17b5d67,eax
   140012b78:	call   0x1aed89f0d
   140012b7d:	jp     0x140012b6a
   140012b7f:	xchg   DWORD PTR [rsi+0x7a],ebx
   140012b82:	in     al,dx
   140012b83:	push   rbx
   140012b84:	std    
   140012b85:	mov    eax,0x8accdf81
   140012b8a:	jl     0x140012b80
   140012b8c:	cdq    
   140012b8d:	iret   
   140012b8e:	mov    edi,0x7586ed72
   140012b93:	movsxd ebx,DWORD PTR [rbp+0x7626231e]
   140012b99:	test   eax,0x2f7e3ab5
   140012b9e:	rex.B ret 0xc159
   140012ba2:	sub    cl,al
   140012ba4:	sub    BYTE PTR [rcx-0x72],bl
   140012ba7:	cmc    
   140012ba8:	sbb    DWORD PTR [rax],ebx
   140012baa:	add    BYTE PTR [rax],bl
   140012bac:	xor    BYTE PTR [rax],0x20
   140012baf:	pop    rcx
   140012bb0:	sahf   
   140012bb1:	and    DWORD PTR [rax],0xffffffc7
   140012bb4:	(bad)  
   140012bb5:	sub    al,0x84
   140012bb7:	(bad)  
   140012bb8:	push   rax
   140012bb9:	rex.WX (bad) 
   140012bbb:	cli    
   140012bbc:	movabs al,ds:0x8497e8cc940c9424
   140012bc5:	sahf   
   140012bc6:	(bad)  
   140012bc7:	out    0x83,al
   140012bc9:	sub    al,0xef
   140012bcb:	add    r10b,dil
   140012bce:	and    eax,0xe6325fa3
   140012bd3:	cmp    eax,0x6101fd0
   140012bd8:	and    eax,0xac483e63
   140012bdd:	pop    rbx
   140012bde:	scas   eax,DWORD PTR es:[rdi]
   140012bdf:	iret   
   140012be0:	cwde   
   140012be1:	(bad)  
   140012be2:	sbb    DWORD PTR [rsi-0x37],0xbcc00f98
   140012be9:	(bad)  
   140012bea:	out    0xcb,al
   140012bec:	add    BYTE PTR [rcx-0x37],0xe8
   140012bf0:	xchg   edi,eax
   140012bf1:	(bad)  
   140012bf2:	adc    edx,0xffffffc7
   140012bf5:	jrcxz  0x140012c74
   140012bf7:	in     eax,0xf3
   140012bf9:	(bad)  
   140012bfa:	ja     0x140012beb
   140012bfc:	cmp    BYTE PTR [rbx+rdi*1],dh
   140012bff:	cmp    eax,0x3be303dd
   140012c04:	jnp    0x140012c44
   140012c06:	repnz pop rbx
   140012c08:	neg    DWORD PTR [rsi]
   140012c0a:	out    dx,eax
   140012c0b:	(bad)  
   140012c0c:	sub    eax,0xfe04008b
   140012c11:	push   0x126d600e
   140012c16:	cmc    
   140012c17:	out    0x2b,eax
   140012c19:	or     DWORD PTR [rax],esp
   140012c1b:	or     eax,0x113adf7
   140012c20:	loop   0x140012c1f
   140012c22:	rex.WRXB mov WORD PTR [r9-0x2278a150],?
   140012c29:	mov    bl,0x4a
   140012c2b:	add    BYTE PTR [rdx],ch
   140012c2d:	cmp    al,0x4
   140012c2f:	mov    dh,0x88
   140012c31:	sbb    ch,BYTE PTR [rcx]
   140012c33:	clc    
   140012c34:	(bad)  
   140012c35:	adc    bh,BYTE PTR [rbx+0x4f12653a]
   140012c3b:	nop
   140012c3c:	push   rcx
   140012c3d:	and    BYTE PTR [rbx],0xa0
   140012c40:	in     eax,0xe8
   140012c42:	jmp    0x140012ca3
   140012c44:	cmp    eax,0x9159e7f4
   140012c49:	int    0x71
   140012c4b:	loopne 0x140012cab
   140012c4d:	(bad)  
   140012c4e:	sbb    ebx,esp
   140012c50:	(bad)  
   140012c51:	or     ch,ah
   140012c53:	xor    edi,0x3e
   140012c56:	mov    eax,0xc01443a7
   140012c5b:	sbb    al,0x93
   140012c5d:	or     BYTE PTR [rcx+0x54],ah
   140012c60:	xchg   ebx,eax
   140012c61:	sbb    esp,ecx
   140012c63:	add    DWORD PTR [rsi-0xe],ebx
   140012c66:	or     esp,DWORD PTR [rdx+0x64]
   140012c69:	movabs al,ds:0xb95c14252102237
   140012c72:	sar    BYTE PTR [rax],1
   140012c74:	(bad)  
   140012c75:	scas   eax,DWORD PTR es:[rdi]
   140012c76:	xchg   edx,eax
   140012c77:	test   BYTE PTR [rcx+riz*8+0x9],cl
   140012c7b:	retf   0xcc4d
   140012c7e:	mov    ebx,DWORD PTR [rcx-0x5ab023c]
   140012c84:	movabs gs:0x788a92e50335a5ce,al
   140012c8e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012c8f:	(bad)  
   140012c90:	out    dx,al
   140012c91:	rex.X
   140012c92:	rex.WRX scas al,BYTE PTR es:[rdi]
   140012c94:	(bad)  
   140012c95:	and    BYTE PTR [rdx+0x5f0bd970],0x77
   140012c9c:	cmc    
   140012c9d:	xchg   esi,eax
   140012c9e:	imul   BYTE PTR [rax-0x39]
   140012ca1:	adc    ecx,edx
   140012ca3:	jg     0x140012c81
   140012ca5:	hlt    
   140012ca6:	(bad)  
   140012ca7:	shrd   DWORD PTR [rsp+rcx*1],edx,cl
   140012cab:	pop    rcx
   140012cac:	add    al,0xa6
   140012cae:	mov    dh,0x5d
   140012cb0:	push   QWORD PTR [rbx-0x53684632]
   140012cb6:	pop    rcx
   140012cb7:	mov    bh,0xaa
   140012cb9:	cmc    
   140012cba:	mov    edi,fs
   140012cbc:	pop    rbp
   140012cbd:	mov    al,0xc6
   140012cbf:	add    ecx,DWORD PTR [rax]
   140012cc1:	(bad)  
   140012cc2:	mov    ch,0x42
   140012cc4:	sub    eax,0x73f22540
   140012cc9:	xor    bl,BYTE PTR [rdi+0x4d]
   140012ccc:	(bad)  
   140012ccd:	sbb    al,0xd2
   140012ccf:	std    
   140012cd0:	lods   al,BYTE PTR ds:[rsi]
   140012cd1:	pop    rsi
   140012cd2:	(bad)  
   140012cd3:	pop    rbx
   140012cd4:	scas   al,BYTE PTR es:[rdi]
   140012cd5:	add    eax,esi
   140012cd7:	and    al,0x39
   140012cd9:	(bad)  
   140012cda:	rex.B movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140012cdc:	(bad)  
   140012cdd:	mov    eax,0xdd499a4
   140012ce2:	rex.WR and r15b,al
   140012ce5:	and    cl,BYTE PTR [rax+0x9103864]
   140012ceb:	rol    edi,0xac
   140012cee:	push   rsp
   140012cef:	lods   eax,DWORD PTR ds:[rsi]
   140012cf0:	(bad)  
   140012cf1:	test   eax,0xe6364f7
   140012cf6:	rcl    esp,0xc
   140012cf9:	xor    eax,0x2be75b62
   140012cfe:	xor    DWORD PTR [rip+0xf43d0e0],esi        # 0x14f44fde4
   140012d04:	rex.WRB jmp 0x140012d36
   140012d07:	stc    
   140012d08:	lock mov DWORD PTR [rax],ebx
   140012d0b:	mov    bl,0xe5
   140012d0d:	rex.WX add BYTE PTR [rbx-0x38a0a3e6],bpl
   140012d14:	sub    BYTE PTR [rsi],dh
   140012d16:	cld    
   140012d17:	or     BYTE PTR [rax+0xb8b3f8c],dl
   140012d1d:	(bad)  
   140012d1e:	(bad)  
   140012d1f:	hlt    
   140012d20:	cmp    ch,BYTE PTR [rsi-0x4b8982cd]
   140012d26:	inc    BYTE PTR [rdi]
   140012d28:	repz inc DWORD PTR [rdi-0x7e0d6eb6]
   140012d2f:	rcl    edi,1
   140012d31:	xchg   esi,eax
   140012d32:	mov    esi,0x7e784bde
   140012d37:	(bad)  
   140012d38:	rcl    DWORD PTR [rdx+0xef1cc59],cl
   140012d3e:	jo     0x140012d59
   140012d40:	test   DWORD PTR [rsi],0x17fadc8d
   140012d46:	mov    edi,0x7db7f37f
   140012d4b:	jmp    0x17cef2437
   140012d50:	sar    bh,1
   140012d52:	loop   0x140012d53
   140012d54:	(bad)  
   140012d55:	mov    dl,0x7
   140012d57:	mov    dl,BYTE PTR [rsi-0x2]
   140012d5a:	push   rbp
   140012d5b:	loop   0x140012dad
   140012d5d:	cli    
   140012d5e:	rex.XB mov r11b,0xd3
   140012d61:	sbb    al,0xaa
   140012d63:	or     al,0x3f
   140012d65:	lahf   
   140012d66:	(bad)  
   140012d67:	xor    DWORD PTR [rdi],eax
   140012d69:	int    0x6
   140012d6b:	xor    al,0x9d
   140012d6d:	push   0xffffffffffffff90
   140012d6f:	in     al,dx
   140012d70:	push   rdi
   140012d71:	scas   al,BYTE PTR es:[rdi]
   140012d72:	pop    rdi
   140012d73:	(bad)  
   140012d74:	retf   
   140012d75:	adc    eax,0x217a28e0
   140012d7a:	rex.W and BYTE PTR [rdx],spl
   140012d7d:	jmp    0x140012d2e
   140012d7f:	mov    dh,0x49
   140012d81:	stos   DWORD PTR es:[rdi],eax
   140012d82:	cmp    BYTE PTR [rdi+0xb619eac],bh
   140012d88:	imul   r8d,DWORD PTR [r11+0x44],0x17157068
   140012d90:	add    BYTE PTR [rsi+0x3d530413],ch
   140012d96:	push   rbx
   140012d97:	(bad)  
   140012d98:	(bad)  
   140012d99:	div    edx
   140012d9b:	jp     0x140012dfd
   140012d9d:	retf   
   140012d9e:	cli    
   140012d9f:	mov    cl,0xd1
   140012da1:	imul   ebx,DWORD PTR [rsi+0x76],0xffffffd5
   140012da5:	push   rsp
   140012da6:	fisubr WORD PTR [rcx-0x73]
   140012da9:	xor    cl,0x47
   140012dac:	fdivrp st(2),st
   140012daf:	movabs eax,ds:0xfd76da980dc1ea95
   140012db8:	ror    ecx,cl
   140012dba:	sar    edi,1
   140012dbc:	rcr    DWORD PTR [rcx],1
   140012dbe:	jmp    0x140012e26
   140012dc0:	(bad)  
   140012dc1:	sti    
   140012dc2:	sub    edi,DWORD PTR [rdi]
   140012dc4:	jle    0x140012e2c
   140012dc6:	push   rcx
   140012dc7:	fs cdq 
   140012dc9:	push   rdi
   140012dca:	sti    
   140012dcb:	lea    esp,[rax+rcx*4]
   140012dce:	test   eax,0x7000587
   140012dd3:	sar    al,cl
   140012dd5:	or     eax,0x4d84dd8e
   140012dda:	loop   0x140012de6
   140012ddc:	int    0xef
   140012dde:	retf   0x98bf
   140012de1:	and    eax,0x65d45a4c
   140012de7:	ins    BYTE PTR es:[rdi],dx
   140012de8:	jbe    0x140012daf
   140012dea:	add    BYTE PTR [rax+rcx*2-0x576f35f6],dl
   140012df1:	xchg   edx,eax
   140012df2:	or     dl,dh
   140012df4:	cld    
   140012df5:	sbb    BYTE PTR [rdi-0x7e],ch
   140012df8:	or     bl,cl
   140012dfa:	lea    r12d,[r8]
   140012dfd:	add    al,0x95
   140012dff:	rex.X mov esp,0x7098a49
   140012e05:	(bad)  
   140012e06:	nop
   140012e07:	sub    rcx,QWORD PTR [rdx+r10*1-0x787c467c]
   140012e0f:	jp     0x140012e18
   140012e11:	(bad)  
   140012e12:	fidivr WORD PTR [rip+0xffffffffc01f6003]        # 0x100208e1b
   140012e18:	lahf   
   140012e19:	cmp    dl,BYTE PTR [rcx]
   140012e1b:	jrcxz  0x140012dd3
   140012e1d:	rex.WR add r8b,BYTE PTR [rax-0x55]
   140012e21:	adc    DWORD PTR [rbx+0x4646acfd],esp
   140012e27:	(bad)  
   140012e28:	jmp    0x140012e95
   140012e2a:	(bad)  
   140012e2b:	lods   al,BYTE PTR ds:[rsi]
   140012e2c:	rex.W sbb al,0x7c
   140012e2f:	fdiv   DWORD PTR [rbx-0x1]
   140012e32:	xchg   ebp,eax
   140012e33:	rex mov edi,0x70fdab1d
   140012e39:	mov    al,0xcc
   140012e3b:	(bad)  
   140012e3c:	mov    es,ebp
   140012e3e:	ds jl  0x140012dd1
   140012e41:	cdq    
   140012e42:	icebp  
   140012e43:	(bad)  
   140012e44:	or     cl,ch
   140012e46:	std    
   140012e47:	(bad)  
   140012e48:	xor    DWORD PTR [rbx+0xe],0x19
   140012e4c:	xor    DWORD PTR [rdx],esi
   140012e4e:	xor    esi,edi
   140012e50:	jge    0x140012e51
   140012e52:	(bad)  
   140012e53:	(bad)  
   140012e54:	fistp  QWORD PTR [rcx+0xfe6f5cc]
   140012e5a:	cmc    
   140012e5b:	jp     0x140012ead
   140012e5d:	jl     0x140012ec8
   140012e5f:	(bad)  
   140012e60:	out    dx,al
   140012e61:	and    esp,DWORD PTR [rcx]
   140012e63:	add    BYTE PTR [rdi],0x7b
   140012e66:	imul   esi
   140012e68:	retf   
   140012e69:	xor    esi,DWORD PTR [rcx-0x23777a36]
   140012e6f:	mov    DWORD PTR [rax+rax*4],edx
   140012e72:	movabs al,ds:0x1fc5681abf5405ed
   140012e7b:	in     eax,0xfa
   140012e7d:	and    dh,BYTE PTR [rcx]
   140012e7f:	and    dl,ch
   140012e81:	je     0x140012e2f
   140012e83:	loop   0x140012ea5
   140012e85:	sbb    BYTE PTR [rax],0x48
   140012e88:	adc    al,0xf3
   140012e8a:	or     BYTE PTR [rax-0x3f],ah
   140012e8d:	rex.RB sub al,0x92
   140012e90:	rex.RB and DWORD PTR [r8],0xffffffc8
   140012e94:	rex.RB cli 
   140012e96:	(bad)  
   140012e97:	cmovno ebp,DWORD PTR [rsp+rdx*2+0x2a]
   140012e9c:	(bad)  
   140012e9d:	or     eax,0x472aa026
   140012ea2:	movabs ds:0x94f95c00850456a9,al
   140012eac:	sub    eax,0xcd7a9eeb
   140012eb1:	gs imul esi,ebx,0x56
   140012eb5:	mov    cl,0x11
   140012eb7:	loopne 0x140012f30
   140012eb9:	outs   dx,BYTE PTR ds:[rsi]
   140012eba:	jp     0x140012e87
   140012ebc:	(bad)  
   140012ebd:	push   rdi
   140012ebe:	mov    al,BYTE PTR [rdi-0x4492b3d6]
   140012ec4:	inc    BYTE PTR [rdx]
   140012ec6:	and    bh,dl
   140012ec8:	jrcxz  0x140012f40
   140012eca:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140012ecb:	fnstsw WORD PTR [rsi-0x2f]
   140012ece:	iret   
   140012ecf:	cmp    al,0x67
   140012ed1:	push   0xfffffffffffffffd
   140012ed3:	mov    edx,0x75f4b6b1
   140012ed8:	movabs al,ds:0x9024a3f90a81cdc8
   140012ee1:	mov    edx,0xd02a4969
   140012ee6:	(bad)  
   140012ee7:	in     al,dx
   140012ee8:	add    al,0x4a
   140012eea:	or     DWORD PTR [rbx+rsi*8+0x3d6a7d6b],ecx
   140012ef1:	rex.RXB sbb BYTE PTR [r9+0x60],r9b
   140012ef5:	scas   al,BYTE PTR es:[rdi]
   140012ef6:	ins    BYTE PTR es:[rdi],dx
   140012ef7:	adc    r9b,r9b
   140012efa:	add    BYTE PTR [rcx+0xd],al
   140012efd:	jle    0x140012ea7
   140012eff:	sub    al,BYTE PTR [rcx+rcx*4+0x5b]
   140012f03:	fidiv  DWORD PTR [rsp+rbx*2]
   140012f06:	push   rsp
   140012f07:	jne    0x140012f2f
   140012f09:	add    ah,ah
   140012f0b:	cli    
   140012f0c:	add    BYTE PTR [rax+rcx*1+0x5a46fb1a],dl
   140012f13:	mov    DWORD PTR [rdx-0x67f19c06],edi
   140012f19:	jle    0x140012f0b
   140012f1b:	sahf   
   140012f1c:	cmp    edx,0xffffffb6
   140012f1f:	(bad)  
   140012f20:	fcomip st,st(3)
   140012f22:	xchg   ecx,eax
   140012f23:	mov    bh,0xcf
   140012f25:	lahf   
   140012f26:	mov    BYTE PTR [rcx+0x801223b],dh
   140012f2c:	cld    
   140012f2d:	mov    db0,rax
   140012f30:	mov    ch,0x2b
   140012f32:	(bad)  
   140012f33:	pop    rdi
   140012f34:	adc    esi,ebx
   140012f36:	push   rbp
   140012f37:	mov    edx,0x2129b2a2
   140012f3c:	cmp    dh,bl
   140012f3e:	mul    DWORD PTR [rax+rbx*4+0x6225cf80]
   140012f45:	(bad)  
   140012f46:	mov    esi,0x2f4592f7
   140012f4b:	mov    ecx,0x1296a00
   140012f50:	rex.XB cmp dil,BYTE PTR [r11+0x4]
   140012f54:	test   eax,0x23195e3
   140012f59:	xchg   ebp,eax
   140012f5a:	out    0xe0,al
   140012f5d:	mov    dl,0x30
   140012f5f:	call   0x13bf5add9
   140012f64:	jmp    rbp
   140012f66:	stos   DWORD PTR es:[rdi],eax
   140012f67:	pop    rdi
   140012f68:	(bad)  
   140012f69:	iret   
   140012f6a:	mov    bl,0x0
   140012f6c:	(bad)  
   140012f6d:	(bad)  
   140012f6e:	call   0xcefc0e0b
   140012f73:	lahf   
   140012f74:	cld    
   140012f75:	(bad)  
   140012f76:	xchg   edi,eax
   140012f77:	icebp  
   140012f78:	emms   
   140012f7a:	out    dx,al
   140012f7b:	cmp    al,0x30
   140012f7d:	lea    edi,[rcx-0x56de6302]
   140012f83:	sbb    BYTE PTR [rax-0x56],ch
   140012f86:	rex.WB or al,0x9a
   140012f89:	ja     0x140012fdb
   140012f8b:	mov    dl,0x71
   140012f8d:	clc    
   140012f8e:	add    dh,ch
   140012f90:	retf   
   140012f91:	movsxd edi,DWORD PTR [rbp-0xdbe77b1]
   140012f97:	(bad)  
   140012f98:	mov    edi,0x8057311d
   140012f9d:	cmp    esi,esp
   140012f9f:	or     edx,esi
   140012fa1:	nop
   140012fa2:	cmp    ah,ch
   140012fa4:	sbb    BYTE PTR [rbp-0x63abc158],dh
   140012faa:	mov    esi,0x7feb2ab2
   140012faf:	leave  
   140012fb0:	rex.WB mov r14b,0xf8
   140012fb3:	add    BYTE PTR [rbx+0x675d5fe],ah
   140012fb9:	pop    rsi
   140012fba:	in     eax,0xac
   140012fbc:	out    0x5c,eax
   140012fbe:	jnp    0x140012fa1
   140012fc0:	(bad)  
   140012fc1:	jae    0x140012ff2
   140012fc3:	cmp    edi,DWORD PTR [rbx+0x32]
   140012fc6:	retf   
   140012fc7:	mov    bl,0xa7
   140012fc9:	add    bh,al
   140012fcb:	popf   
   140012fcc:	and    ecx,DWORD PTR [rdi-0x11]
   140012fcf:	movsxd ebx,DWORD PTR [rdi]
   140012fd1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012fd2:	mov    dh,0x5d
   140012fd4:	mov    edi,0x171fc01a
   140012fd9:	in     eax,dx
   140012fda:	(bad)
   140012fdf:	(bad)  
   140012fe0:	cli    
   140012fe1:	sub    ebp,DWORD PTR [rsi]
   140012fe3:	fbstp  TBYTE PTR [rdx]
   140012fe5:	test   eax,0xf535a5f1
   140012fea:	sub    al,0x90
   140012fec:	jp     0x140013046
   140012fee:	push   rax
   140012fef:	adc    DWORD PTR [rbx+rdx*4-0x22],ebp
   140012ff3:	ins    BYTE PTR es:[rdi],dx
   140012ff4:	(bad)  
   140012ff5:	jrcxz  0x140013016
   140012ff7:	in     al,dx
   140012ff8:	pop    QWORD PTR [rsp+rdx*8+0x7]
   140012ffc:	(bad)  
   140012ffd:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012ffe:	(bad)  
   140012fff:	rex.XB
   140013000:	and    edx,DWORD PTR es:[rax+0x55]
   140013004:	cli    
   140013005:	pop    rbp
   140013006:	or     BYTE PTR [rax*2+0x435b36c4],al
   14001300d:	hlt    
   14001300e:	sub    al,0x4
   140013010:	shl    BYTE PTR [rbx],0x8
   140013013:	loope  0x14001300c
   140013015:	loop   0x140012ff9
   140013017:	adc    DWORD PTR [rip+0xffffffff8cc13481],edx        # 0xccc2649e
   14001301d:	push   rax
   14001301e:	(bad)  
   14001301f:	mov    ebx,0x66fbb6b0
   140013024:	rex.WRB ins BYTE PTR es:[rdi],dx
   140013026:	or     ecx,DWORD PTR [rax+riz*8+0x40]
   14001302a:	sbb    ah,dh
   14001302c:	cli    
   14001302d:	in     eax,0xde
   14001302f:	(bad)  
   140013030:	(bad)  
   140013031:	cmp    BYTE PTR [rax],ch
   140013033:	enter  0xf84,0x9d
   140013037:	test   al,0xf1
   140013039:	pop    rbx
   14001303a:	xchg   BYTE PTR [rax+rax*2],al
   14001303d:	xchg   ebx,eax
   14001303e:	xor    ah,BYTE PTR [rsi-0x1e]
   140013041:	adc    eax,0x4ba87dd7
   140013046:	add    dh,dh
   140013048:	xor    edx,DWORD PTR [rbp+0x65a08408]
   14001304e:	mov    edi,0x27fe2a42
   140013053:	fs push rdx
   140013055:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013056:	add    cl,cl
   140013058:	cli    
   140013059:	push   rbx
   14001305a:	xchg   edx,eax
   14001305b:	rex.WX or al,0xf
   14001305e:	(bad)  
   14001305f:	push   rcx
   140013060:	xchg   ebx,eax
   140013061:	cmp    eax,0xb621239c
   140013066:	in     al,0xb6
   140013068:	(bad)  
   14001306a:	outs   dx,BYTE PTR ds:[rsi]
   14001306b:	movabs al,ds:0xa69121ef3b457a8c
   140013074:	add    DWORD PTR [rax],esp
   140013076:	jae    0x14001306c
   140013078:	pavgb  mm2,QWORD PTR [rax]
   14001307b:	(bad)  
   14001307c:	jnp    0x140013074
   14001307e:	in     eax,dx
   14001307f:	(bad)  
   140013080:	or     BYTE PTR [rax],cl
   140013082:	rol    DWORD PTR [rbx+0x5c414199],0x33
   140013089:	push   rbp
   14001308a:	fsubr  DWORD PTR [rdi-0x3b2a2a8]
   140013090:	(bad)  
   140013091:	data16 jo 0x1400130b3
   140013094:	push   rcx
   140013095:	sbb    eax,0x72815b10
   14001309a:	loope  0x14001305c
   14001309c:	xchg   ebp,eax
   14001309d:	rex.RB (bad) 
   14001309f:	xchg   ebp,eax
   1400130a0:	ins    DWORD PTR es:[rdi],dx
   1400130a1:	and    BYTE PTR [rdx],al
   1400130a3:	push   rdi
   1400130a4:	or     ecx,DWORD PTR [rsi+rdx*1]
   1400130a7:	push   rdx
   1400130a8:	mov    WORD PTR [rdx],cs
   1400130aa:	mov    edi,0x8a20b553
   1400130af:	dec    DWORD PTR [rcx]
   1400130b1:	(bad)  
   1400130b2:	(bad)  
   1400130b3:	mov    dh,dh
   1400130b5:	push   rbx
   1400130b6:	sub    eax,0x21022146
   1400130bb:	mov    ecx,0x7d541c47
   1400130c0:	mov    al,0x67
   1400130c2:	and    bl,cl
   1400130c4:	sbb    al,0xbd
   1400130c6:	clc    
   1400130c7:	mov    ch,0x4f
   1400130c9:	cmp    ebx,esi
   1400130cb:	mov    ebp,cs
   1400130cd:	addr32 je 0x14001312c
   1400130d0:	sahf   
   1400130d1:	mov    ebp,0x3e5bd368
   1400130d6:	clc    
   1400130d7:	mov    fs,WORD PTR [rbx]
   1400130d9:	iret   
   1400130da:	fbld   TBYTE PTR [rbx+0x17]
   1400130dd:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400130de:	mov    dh,0x5d
   1400130e0:	(bad)  
   1400130e1:	rex.WB
   1400130e2:	rex.R jg 0x14001307f
   1400130e5:	mov    bh,0x8a
   1400130e7:	mov    bl,0xaf
   1400130e9:	jp     0x1400130b9
   1400130eb:	adc    eax,0xecfe9eab
   1400130f0:	jae    0x1400130c9
   1400130f2:	xchg   esp,eax
   1400130f3:	test   al,0x10
   1400130f5:	push   rbx
   1400130f6:	fwait
   1400130f7:	rex.RX leave 
   1400130f9:	cwde   
   1400130fa:	(bad)  
   1400130fb:	stos   BYTE PTR es:[rdi],al
   1400130fc:	push   rsp
   1400130fd:	xor    al,0x3b
   1400130ff:	(bad)  
   140013100:	leave  
   140013101:	lahf   
   140013102:	mov    ecx,0xb254d6b
   140013107:	mov    BYTE PTR [rip+0xffffffffba3763df],ah        # 0xfa3894ec
   14001310d:	add    BYTE PTR [rcx],ah
   14001310f:	and    al,cl
   140013111:	or     al,0xce
   140013113:	and    bh,BYTE PTR [rcx]
   140013115:	(bad)  
   140013116:	(bad)  
   140013117:	inc    BYTE PTR [rax+rcx*8]
   14001311a:	cmc    
   14001311b:	imul   ebp,DWORD PTR [rsi],0x1f826789
   140013121:	push   rax
   140013122:	pop    rsp
   140013123:	xchg   DWORD PTR [rsi],ebx
   140013125:	rex sbb DWORD PTR [rdx+0x52a1bbda],eax
   14001312c:	xor    BYTE PTR [rcx+0x4981ae42],r8b
   140013133:	popf   
   140013134:	sbb    dl,BYTE PTR [rbx+0x7e1c042]
   14001313a:	out    dx,al
   14001313b:	cmp    ah,BYTE PTR [rax]
   14001313d:	stos   DWORD PTR es:[rdi],eax
   14001313e:	adc    ebx,DWORD PTR [rdi-0x486e0c26]
   140013144:	(bad)  
   140013145:	push   rbp
   140013146:	or     esi,eax
   140013148:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013149:	(bad)  
   14001314a:	rex.WB add dl,BYTE PTR [r8]
   14001314d:	clc    
   14001314e:	(bad)  
   14001314f:	add    dh,BYTE PTR [rax]
   140013151:	push   rsi
   140013152:	jmp    0x1bf453d53
   140013157:	fild   DWORD PTR [rdi-0x440f841c]
   14001315d:	out    dx,eax
   14001315e:	mov    ebp,0x16df309c
   140013163:	add    eax,0x16b158ca
   140013168:	cld    
   140013169:	nop
   14001316a:	jp     0x1400131eb
   14001316c:	(bad)  
   14001316d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001316e:	rex.WXB adc rax,0xffffffff9f13a876
   140013174:	rcl    dl,0xc4
   140013177:	iret   
   140013178:	xor    DWORD PTR [rsi+rax*1+0x1f],ebx
   14001317c:	mov    bh,BYTE PTR [rbp-0x50710841]
   140013182:	push   QWORD PTR [rbx-0x55]
   140013185:	xchg   ebp,eax
   140013186:	iret   
   140013187:	(bad)  
   140013188:	fidiv  DWORD PTR [rdi]
   14001318a:	shl    DWORD PTR [rbx],cl
   14001318c:	out    dx,al
   14001318d:	outs   dx,DWORD PTR ds:[rsi]
   14001318e:	shr    cl,1
   140013190:	in     al,0x37
   140013192:	adc    DWORD PTR [rbx-0x9],esp
   140013195:	(bad)  
   140013196:	(bad)  
   140013197:	jbe    0x1400131b8
   140013199:	enter  0x7efa,0xde
   14001319d:	je     0x140013217
   14001319f:	mov    esi,ecx
   1400131a1:	xchg   edi,eax
   1400131a2:	test   BYTE PTR [rdx],0x41
   1400131a5:	mov    BYTE PTR [rcx-0x54fde266],al
   1400131ab:	sti    
   1400131ac:	and    eax,0x2f988404
   1400131b1:	and    BYTE PTR [rdi+rdx*8+0x74326487],dl
   1400131b8:	and    bh,BYTE PTR [rcx+rbp*4+0x54b9aa01]
   1400131bf:	cmp    ah,BYTE PTR [rdx+0x6de6449c]
   1400131c5:	rex sbb eax,0x74d06df1
   1400131cb:	jae    0x14001318e
   1400131cd:	lahf   
   1400131ce:	test   eax,0x202f3102
   1400131d3:	loope  0x140013207
   1400131d5:	imul   ebx,DWORD PTR [rax+rcx*2+0x2a],0x2cf27455
   1400131dd:	jnp    0x1400131cc
   1400131df:	fwait
   1400131e0:	lahf   
   1400131e1:	jg     0x1400131c1
   1400131e3:	in     al,0xba
   1400131e5:	push   rbp
   1400131e6:	lods   eax,DWORD PTR ds:[rsi]
   1400131e7:	sub    al,0xcf
   1400131e9:	pop    rsi
   1400131ea:	mov    ch,0xe9
   1400131ec:	sub    eax,0xa6c77c1f
   1400131f1:	mov    bh,0x7c
   1400131f3:	lock fs ss jns 0x140013235
   1400131f8:	and    eax,0xf5db6a61
   1400131fd:	sbb    eax,DWORD PTR [rcx]
   1400131ff:	jl     0x140013239
   140013201:	sub    esi,edx
   140013203:	(bad)  
   140013204:	cmp    eax,0x4c27aae9
   140013209:	mov    esp,0x6e9725e0
   14001320e:	lock test al,0xc4
   140013211:	clc    
   140013212:	cmp    BYTE PTR [rsi+0x3a],ah
   140013215:	xor    BYTE PTR [rbp-0x73432f47],0x80
   14001321c:	stos   BYTE PTR es:[rdi],al
   14001321d:	jbe    0x140013262
   14001321f:	sub    eax,0x7f659b7c
   140013224:	mov    ah,0xe3
   140013226:	sub    BYTE PTR [rcx-0x50],dl
   140013229:	cwde   
   14001322a:	add    BYTE PTR [rdi],cl
   14001322c:	push   rbp
   14001322d:	add    eax,0xa1dc4542
   140013232:	test   BYTE PTR [rdi],ah
   140013234:	cwde   
   140013235:	out    dx,eax
   140013236:	(bad)  
   140013237:	rex.RX
   140013238:	rex.W sbb sil,bl
   14001323b:	jnp    0x1400132b5
   14001323d:	xor    eax,0x81002173
   140013242:	or     BYTE PTR [rcx],ah
   140013244:	add    al,0x78
   140013246:	add    al,0xf8
   140013248:	and    BYTE PTR [rcx],bl
   14001324a:	lods   al,BYTE PTR ds:[rsi]
   14001324b:	push   rdx
   14001324c:	cli    
   14001324d:	(bad)  
   14001324e:	adc    al,BYTE PTR [rbx+0x6050bcb3]
   140013254:	add    BYTE PTR [rbx-0x4a25e3ce],al
   14001325a:	repz mov al,0xfe
   14001325d:	nop
   14001325e:	mov    edi,0x78e3913e
   140013263:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140013264:	test   DWORD PTR [rbx],esi
   140013266:	xchg   esi,eax
   140013267:	sbb    cl,bh
   140013269:	push   rax
   14001326a:	(bad)  
   14001326b:	repz xchg ecx,eax
   14001326d:	in     al,dx
   14001326e:	(bad)  
   14001326f:	adc    al,BYTE PTR [rdx]
   140013271:	add    eax,DWORD PTR [rax]
   140013273:	test   DWORD PTR [rip+0x60238ccf],edi        # 0x1a024bf48
   140013279:	scas   al,BYTE PTR es:[rdi]
   14001327a:	(bad)  
   14001327b:	(bad)  
   14001327c:	and    eax,esp
   14001327e:	rcr    BYTE PTR [rdi],0xc2
   140013281:	and    BYTE PTR [rbp+0x3b],0x6
   140013285:	icebp  
   140013286:	xor    dh,BYTE PTR [edx]
   140013289:	rex.WR add al,0x47
   14001328c:	add    esi,ecx
   14001328e:	jns    0x1400132a0
   140013290:	stc    
   140013291:	jge    0x14001324e
   140013293:	rex.RX
   140013294:	ds jge 0x14001330f
   140013297:	jbe    0x140013317
   140013299:	ss xor bh,cl
   14001329c:	add    DWORD PTR [rcx+0x5b84670e],esi
   1400132a2:	fcomip st,st(1)
   1400132a4:	movabs ds:0xc3c1fbd830fe393e,al
   1400132ad:	jnp    0x1400132ce
   1400132af:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400132b0:	sbb    BYTE PTR [rdi+0x40aeea1b],al
   1400132b6:	xor    edx,eax
   1400132b8:	cwde   
   1400132b9:	ins    DWORD PTR es:[rdi],dx
   1400132ba:	add    dl,dh
   1400132bc:	rex.WX (bad) 
   1400132be:	adc    BYTE PTR [rbx+0x6d],cl
   1400132c1:	test   al,0xb8
   1400132c3:	mov    edx,0xa8e2f5b4
   1400132c8:	movabs ds:0x79522ff62c6a2101,eax
   1400132d1:	push   rbx
   1400132d2:	or     eax,DWORD PTR [rdx+0xc76396a]
   1400132d8:	es data16 (bad) 
   1400132db:	cmp    DWORD PTR [rbp+0x4d],edi
   1400132de:	jl     0x140013329
   1400132e0:	and    dl,BYTE PTR ss:[rcx-0x4f]
   1400132e4:	jnp    0x140013300
   1400132e6:	and    DWORD PTR [rcx+0x30],edx
   1400132e9:	ror    DWORD PTR [rcx],0x0
   1400132ec:	cmp    bl,BYTE PTR [rbp-0x500284c4]
   1400132f2:	pop    rdi
   1400132f3:	jnp    0x1400132b6
   1400132f5:	in     al,0xfa
   1400132f7:	push   rbp
   1400132f8:	lods   eax,DWORD PTR ds:[rsi]
   1400132f9:	sub    al,0x77
   1400132fb:	scas   eax,DWORD PTR es:[rdi]
   1400132fc:	add    dh,bl
   1400132fe:	mov    ebx,0x3f9bd37
   140013303:	(bad)  
   140013304:	fwait
   140013305:	(bad)  
   140013306:	ret    0xdb53
   140013309:	scas   al,BYTE PTR es:[rdi]
   14001330a:	jg     0x14001332e
   14001330c:	or     BYTE PTR [rdi-0x631d12ec],0xa7
   140013313:	pop    rdi
   140013314:	jae    0x14001330f
   140013316:	(bad)  
   140013317:	xchg   edi,eax
   140013318:	mov    esp,0x1c9b29fa
   14001331d:	cmp    DWORD PTR [rdx],ebp
   14001331f:	rol    DWORD PTR [rax-0x2],1
   140013322:	in     al,0xd3
   140013324:	(bad)  
   140013325:	mov    cs,ebp
   140013327:	rex.WRXB push 0x7f
   14001332a:	loope  0x1400133a0
   14001332c:	in     al,dx
   14001332d:	adc    esp,esp
   14001332f:	xchg   ebp,eax
   140013330:	jb     0x1400133a1
   140013332:	movabs ds:0x5708426b1c79cb8f,al
   14001333b:	movabs al,ds:0x96b926b6b8a811e8
   140013344:	rex pop rcx
   140013346:	xor    bh,BYTE PTR [rcx+rbx*2+0x31]
   14001334a:	xchg   esp,eax
   14001334b:	movabs al,ds:0xc541cf128de65e01
   140013354:	cmp    al,0xa0
   140013356:	and    bh,BYTE PTR [rdi-0x6beeaa99]
   14001335c:	icebp  
   14001335d:	sbb    al,0x7c
   14001335f:	loopne 0x14001334f
   140013361:	add    esi,ebx
   140013363:	mov    bl,0x33
   140013365:	cmp    eax,0xe7b4be30
   14001336a:	movabs ds:0x811e58e44fdbf6f,eax
   140013373:	xor    BYTE PTR [rbp-0x7],0xa9
   140013377:	jmp    0x143757473
   14001337c:	(bad)  
   14001337d:	std    
   14001337e:	pop    rsp
   14001337f:	jge    0x1400133d3
   140013381:	movabs al,ds:0xac57dbead239e0ec
   14001338a:	push   rbx
   14001338b:	(bad)  
   14001338c:	jge    0x140013402
   14001338e:	(bad)  [rdx+0x63586102]
   140013394:	adc    al,BYTE PTR [rax-0x1e92db7]
   14001339a:	(bad)  
   14001339b:	clc    
   14001339c:	sti    
   14001339d:	neg    ebp
   14001339f:	jns    0x1400133e4
   1400133a1:	push   rsi
   1400133a2:	fs jae 0x1400133d8
   1400133a5:	sti    
   1400133a6:	addr32 (bad) 
   1400133a8:	jo     0x140013429
   1400133aa:	add    eax,0xffffffb8
   1400133ad:	add    eax,esp
   1400133af:	jmp    0x17af12b51
   1400133b4:	push   rax
   1400133b5:	xchg   esp,eax
   1400133b6:	movabs eax,ds:0xc0029501ac188087
   1400133bf:	push   r13
   1400133c1:	add    ch,al
   1400133c3:	ins    DWORD PTR es:[rdi],dx
   1400133c4:	ins    DWORD PTR es:[rdi],dx
   1400133c5:	xor    ah,dl
   1400133c7:	cdq    
   1400133c8:	sar    DWORD PTR [rbp-0x3d],0x58
   1400133cc:	mov    eax,edx
   1400133ce:	sub    cl,BYTE PTR [rbx+0x54]
   1400133d1:	fiadd  WORD PTR [rax]
   1400133d3:	jrcxz  0x14001339b
   1400133d5:	adc    eax,0x4f70b04d
   1400133da:	jns    0x140013412
   1400133dc:	adc    al,BYTE PTR [rdx-0x70]
   1400133df:	nop
   1400133e0:	(bad)  
   1400133e1:	fld    TBYTE PTR [rdi]
   1400133e3:	push   rax
   1400133e4:	frstor [rbx]
   1400133e6:	cmp    eax,0x4727ba2e
   1400133eb:	ret    0x8010
   1400133ee:	cwde   
   1400133ef:	(bad)  
   1400133f0:	or     al,0x70
   1400133f2:	push   rbp
   1400133f3:	(bad)
   1400133f6:	push   rbx
   1400133f7:	and    ch,BYTE PTR [rip+0xfffffffff6793b74]        # 0x1367a6f71
   1400133fd:	retf   
   1400133fe:	mov    edi,0x5b05ed7e
   140013403:	(bad)  
   140013404:	fidiv  DWORD PTR [rdx]
   140013406:	(bad)  
   140013407:	adc    eax,0xe889b3f9
   14001340c:	scas   eax,DWORD PTR es:[rdi]
   14001340d:	ss mov ebp,0x2c6703f9
   140013413:	cmp    eax,0x4c3fa79f
   140013418:	ins    DWORD PTR es:[rdi],dx
   140013419:	mov    ebx,0xe8e4f9fe
   14001341e:	std    
   14001341f:	in     eax,dx
   140013420:	xchg   ecx,eax
   140013421:	(bad)  
   140013422:	cli    
   140013423:	out    0xfe,eax
   140013425:	(bad)  
   140013426:	push   rbp
   140013427:	imul   ebp,DWORD PTR [rdi+0x362ba9fd],0xffffffb0
   14001342e:	jae    0x140013404
   140013430:	rex.RXB xchg r10d,eax
   140013432:	mov    dl,0x8d
   140013434:	(bad)
   14001343a:	xor    al,0x90
   14001343c:	pop    rax
   14001343d:	(bad)  
   14001343e:	push   rax
   14001343f:	push   rdi
   140013440:	retf   
   140013441:	mov    eax,gs
   140013443:	(bad)  
   140013444:	add    BYTE PTR fs:[rip+0x724c315d],dh        # 0x1b24d65a8
   14001344b:	push   rsp
   14001344c:	(bad)  
   14001344d:	(bad)  
   14001344e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001344f:	pop    rbp
   140013450:	fadd   st(0),st
   140013452:	sahf   
   140013453:	pop    rcx
   140013454:	(bad)  
   140013455:	rol    BYTE PTR [rbx-0x68],0x8b
   140013459:	and    DWORD PTR [rbx-0x3c735a86],edi
   14001345f:	rex.RXB sti 
   140013461:	rex.WRX push rsp
   140013463:	rex.WXB stos QWORD PTR es:[rdi],rax
   140013465:	std    
   140013466:	loop   0x140013476
   140013468:	adc    al,0xa4
   14001346a:	(bad)  
   14001346b:	and    ah,BYTE PTR [rax]
   14001346d:	iret   
   14001346e:	repz or al,ah
   140013471:	loopne 0x1400134ec
   140013473:	cli    
   140013474:	movabs eax,ds:0x8f44fcfe0de90e07
   14001347d:	out    0xa2,eax
   14001347f:	add    al,0x20
   140013481:	lock (bad) 
   140013483:	jae    0x140013485
   140013485:	fld    QWORD PTR [rsi]
   140013487:	xchg   edx,eax
   140013488:	jmp    0x140013422
   14001348a:	rex.RB test eax,0x41c62420
   140013490:	loope  0x140013427
   140013492:	sti    
   140013493:	ja     0x140013503
   140013495:	je     0x140013470
   140013497:	int3   
   140013498:	fcmove st,st(2)
   14001349a:	test   eax,0xa7404469
   14001349f:	(bad)  
   1400134a0:	mov    BYTE PTR [rax-0x64],al
   1400134a3:	sub    eax,0xc699c3a3
   1400134a8:	(bad)
   1400134ab:	scas   al,BYTE PTR es:[rdi]
   1400134ac:	rex.R xchg esi,eax
   1400134ae:	shr    esp,1
   1400134b0:	loope  0x140013463
   1400134b2:	outs   dx,DWORD PTR ds:[rsi]
   1400134b3:	jge    0x1400134b2
   1400134b5:	retf   
   1400134b6:	paddsb mm5,mm2
   1400134b9:	mov    ah,0x3b
   1400134bb:	mov    bl,0x18
   1400134bd:	ret    0xdfd
   1400134c0:	out    dx,al
   1400134c1:	cli    
   1400134c2:	mov    ebp,0x2180cc57
   1400134c7:	push   rdx
   1400134c8:	shr    dh,0x3d
   1400134cb:	lsl    ebx,WORD PTR [rcx*4-0x457de8a]
   1400134d3:	iret   
   1400134d4:	pop    rsp
   1400134d5:	adc    DWORD PTR [rax],0xfad81042
   1400134db:	mov    cs,eax
   1400134dd:	adc    cl,BYTE PTR [rax]
   1400134df:	add    ecx,DWORD PTR [rsi-0x733f3f7a]
   1400134e5:	push   rdx
   1400134e6:	addr32 xchg edx,eax
   1400134e8:	rex.WRB or r9b,BYTE PTR [r8]
   1400134eb:	xchg   ebp,eax
   1400134ec:	adc    al,0x80
   1400134ee:	xchg   esp,eax
   1400134ef:	rcr    DWORD PTR [rbx-0x59e6f91e],cl
   1400134f5:	sbb    BYTE PTR [rsp+rax*4+0x17353164],al
   1400134fc:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400134fd:	scas   al,BYTE PTR es:[rdi]
   1400134fe:	fld    TBYTE PTR ds:[rsi+0x2c40a4e9]
   140013505:	and    al,0x62
   140013507:	(bad)  
   140013508:	fnstenv [rcx]
   14001350a:	cdq    
   14001350b:	xchg   edi,eax
   14001350c:	(bad)  
   14001350d:	jle    0x1400134fc
   14001350f:	jbe    0x1400134af
   140013511:	mov    ebp,0x3ecf0dea
   140013516:	sti    
   140013517:	repnz cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140013519:	pop    rdi
   14001351a:	mov    esp,0x97e56f3a
   14001351f:	add    eax,edi
   140013521:	shl    BYTE PTR [rsi-0x4d1f80c9],1
   140013527:	and    ecx,esi
   140013529:	cli    
   14001352a:	imul   ecx,DWORD PTR [rax],0x77aedb53
   140013530:	push   rbx
   140013531:	fld    TBYTE PTR [rsi-0x8c6dc81]
   140013537:	(bad)  
   140013538:	popf   
   140013539:	shr    esi,1
   14001353b:	enter  0x5e8b,0xf9
   14001353f:	in     al,dx
   140013540:	test   eax,0x9e0bfe7
   140013545:	jmp    0x1400134df
   140013547:	je     0x14001354a
   140013549:	sbb    dl,BYTE PTR [rcx-0x2aad002c]
   14001354f:	retf   
   140013550:	vcmpss xmm5,xmm6,DWORD PTR ds:[rax],0x2b
   140013556:	fistp  DWORD PTR [rbp+rsi*1-0xa]
   14001355a:	or     DWORD PTR [rcx+0x44f388],esi
   140013560:	and    DWORD PTR [rdx+0x1f3660ca],0xffffff94
   140013567:	stos   BYTE PTR es:[rdi],al
   140013568:	mov    edx,0x8de924a9
   14001356d:	imul   eax,DWORD PTR [rdi],0x2
   140013570:	xchg   edi,eax
   140013571:	(bad)  
   140013572:	jmp    0x1400135da
   140013574:	add    al,0xf8
   140013576:	xchg   edx,eax
   140013577:	mov    ch,0x99
   140013579:	lods   eax,DWORD PTR ds:[rsi]
   14001357a:	lods   al,BYTE PTR ds:[rsi]
   14001357b:	xchg   ebx,eax
   14001357c:	xchg   edx,eax
   14001357d:	movabs eax,ds:0x4931b3025e8a7dfe
   140013586:	idiv   BYTE PTR [rbx]
   140013588:	movsxd edx,DWORD PTR [rax]
   14001358a:	je     0x1400135d9
   14001358c:	mov    dl,0x8
   14001358e:	retf   0xef07
   140013591:	std    
   140013592:	sar    DWORD PTR [rsi-0xc3c1e22],1
   140013598:	add    BYTE PTR [rdi+0x75],bh
   14001359b:	iret   
   14001359c:	rex.RXB jg 0x14001359a
   14001359f:	xchg   esi,eax
   1400135a0:	adc    edi,DWORD PTR [rip+0x484bae]        # 0x140498154
   1400135a6:	(bad)  
   1400135a7:	rex.WRB cld 
   1400135a9:	std    
   1400135aa:	rex.WRB pop r13
   1400135ac:	lahf   
   1400135ad:	adc    ebx,DWORD PTR [rbx+0x0]
   1400135b0:	adc    al,BYTE PTR [rdx-0xc43c740]
   1400135b6:	mov    cl,BYTE PTR [rdx+0x59]
   1400135b9:	cs in  eax,0x54
   1400135bc:	rex.WXB cli 
   1400135be:	sub    DWORD PTR [rbp-0x1a],edx
   1400135c1:	jmp    0x1407a56cd
   1400135c6:	and    edi,DWORD PTR [rax]
   1400135c8:	mov    dh,cl
   1400135ca:	xchg   edi,eax
   1400135cb:	(bad)  
   1400135cc:	out    dx,al
   1400135cd:	push   rdi
   1400135ce:	lahf   
   1400135cf:	jae    0x1400135b8
   1400135d1:	in     eax,dx
   1400135d2:	or     DWORD PTR [rdi-0x4a],0xffffffba
   1400135d6:	in     eax,dx
   1400135d7:	mov    esi,0x437fa10f
   1400135dc:	rex.XB jp 0x14001364d
   1400135df:	add    ah,BYTE PTR [rbx]
   1400135e1:	cld    
   1400135e2:	sbb    eax,0xb9d81f33
   1400135e7:	jge    0x1400135d0
   1400135e9:	mov    esi,0x267befbc
   1400135ee:	out    0x99,eax
   1400135f0:	mov    ch,0x37
   1400135f2:	sub    bl,ch
   1400135f4:	mov    bh,0xa2
   1400135f6:	rex.XB
   1400135f7:	pop    r9
   1400135f9:	test   BYTE PTR [rbp+rbp*2-0x28d45f16],al
   140013600:	(bad)  
   140013601:	and    al,0x2b
   140013603:	int    0x23
   140013605:	loopne 0x140013632
   140013607:	lahf   
   140013608:	mov    esp,0xe1867889
   14001360d:	jmp    0x18c364054
   140013612:	rex.RB adc eax,0xa4e7aa4e
   140013618:	(bad)  
   14001361a:	cdq    
   14001361b:	adc    eax,0xa4afae5
   140013620:	mov    al,0x35
   140013622:	data16 int 0x48
   140013625:	in     eax,dx
   140013626:	mov    ecx,0x9fa8c8d1
   14001362b:	rex.RX add al,0xf2
   14001362e:	int3   
   14001362f:	gs dec ebx
   140013632:	sub    ebp,DWORD PTR [rdi+0x17ccf2d8]
   140013638:	pop    rsi
   140013639:	mov    ecx,0xd9da3dae
   14001363e:	rex.X mov ?,WORD PTR [rsi]
   140013641:	mov    ah,0xe9
   140013643:	int    0xef
   140013645:	jg     0x14001361a
   140013647:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140013648:	(bad)  
   140013649:	mov    edi,0x176331ff
   14001364e:	cwde   
   14001364f:	fidiv  DWORD PTR [rsi-0x3]
   140013652:	add    eax,0x32e23e00
   140013657:	neg    DWORD PTR [rbx]
   140013659:	movabs ds:0x6d8fc2fc57ada393,eax
   140013662:	jl     0x14001362e
   140013664:	push   rbp
   140013665:	pop    rbx
   140013666:	push   rdi
   140013667:	or     eax,0x52baf248
   14001366c:	mov    edi,0x80fa19bd
   140013671:	test   BYTE PTR [rax+0x5eae3572],bl
   140013677:	jrcxz  0x1400136cf
   140013679:	jge    0x1400136ed
   14001367b:	mov    ds,WORD PTR [rbp+0x10]
   14001367e:	mov    DWORD PTR [rdi+0x54],eax
   140013681:	sbb    DWORD PTR [rbp+0x1e],esp
   140013684:	jl     0x14001362f
   140013686:	or     BYTE PTR [rsi-0x7321592f],ch
   14001368c:	mov    eax,DWORD PTR [rcx]
   14001368e:	sbb    ah,al
   140013690:	push   rbx
   140013691:	jno    0x140013712
   140013693:	cdq    
   140013694:	imul   ecx,DWORD PTR [rcx+0x1d],0x13
   140013698:	loop   0x1400136bb
   14001369a:	(bad)  
   14001369b:	and    BYTE PTR [rdx+rdi*1-0x5e651fb9],ah
   1400136a2:	rex.WRXB stos BYTE PTR es:[rdi],al
   1400136a4:	push   rdx
   1400136a5:	retf   
   1400136a6:	sub    dh,BYTE PTR [rax+0x9]
   1400136a9:	mov    cl,0xe1
   1400136ab:	shl    DWORD PTR [rax],0x4c
   1400136ae:	(bad)  
   1400136af:	mov    eax,0xfc2f5a7d
   1400136b4:	movabs ds:0x226e922d4bb63193,eax
   1400136bd:	repnz fwait
   1400136bf:	add    al,0x50
   1400136c1:	movabs ds:0xf80d553a309ff79e,al
   1400136ca:	loopne 0x14001365f
   1400136cc:	movabs ds:0x8d3c9b3d7f52cdf5,al
   1400136d5:	push   0xffffffffffffff94
   1400136d7:	sbb    al,0x6b
   1400136d9:	xchg   esp,eax
   1400136da:	test   DWORD PTR [rsi-0x703da4eb],ecx
   1400136e0:	rex.RXB xchg r14d,eax
   1400136e2:	cmp    DWORD PTR [rdi+0x16],ebx
   1400136e5:	mov    ebx,0x37bbf9df
   1400136ea:	jg     0x140013681
   1400136ec:	sbb    bl,dh
   1400136ee:	(bad)  
   1400136ef:	(bad)  
   1400136f0:	ds pop rax
   1400136f2:	(bad)  
   1400136f3:	jmp    0x10ef5137f
   1400136f8:	push   rdi
   1400136f9:	int    0x80
   1400136fb:	stc    
   1400136fc:	jge    0x1400136de
   1400136fe:	loopne 0x1400136cb
   140013700:	cmp    eax,0x6b8b76fb
   140013705:	push   rsi
   140013706:	sub    eax,0x4db56af8
   14001370b:	movabs ds:0x291635c4dfefa303,eax
   140013714:	adc    BYTE PTR [rbp+0x72],0x61
   140013718:	gs or  esi,ebx
   14001371b:	xor    edi,edx
   14001371d:	(bad)  
   14001371e:	jmp    0x15404c9c8
   140013723:	xor    ebp,ecx
   140013725:	or     BYTE PTR [rax-0x4a],ch
   140013728:	add    DWORD PTR [rax],eax
   14001372a:	xchg   ecx,eax
   14001372b:	xor    ebx,DWORD PTR [rax]
   14001372d:	(bad)  
   14001372e:	mov    bh,0x99
   140013730:	ss mov edx,0x36e8860
   140013736:	xchg   edi,eax
   140013737:	jb     0x1400137b3
   140013739:	and    al,0xfb
   14001373b:	int3   
   14001373c:	rex.RX (bad) 
   14001373e:	fisttp WORD PTR [rbp+0x524d5ab]
   140013744:	std    
   140013745:	and    eax,DWORD PTR [rdi-0xc]
   140013748:	in     al,dx
   140013749:	(bad)  
   14001374a:	pop    rsp
   14001374b:	cmp    ch,dh
   14001374d:	movabs ds:0x96d1ead8d37b3ed7,al
   140013756:	retf   
   140013757:	fcomp  QWORD PTR [rbx+0x1]
   14001375a:	mov    esp,0xdf9bd36f
   14001375f:	mov    edi,0x76e348f9
   140013764:	sub    al,bl
   140013766:	(bad)  
   140013767:	mov    dh,0xeb
   140013769:	mov    ebp,DWORD PTR [rcx-0x66402893]
   14001376f:	mov    BYTE PTR [rsi],bh
   140013771:	push   rsi
   140013772:	mov    ah,0x8b
   140013774:	retf   
   140013775:	cs mov ecx,0x37f1bce2
   14001377b:	std    
   14001377c:	out    0x4b,al
   14001377e:	iret   
   14001377f:	mov    ecx,0x130de2e4
   140013784:	jge    0x140013793
   140013786:	ror    DWORD PTR [rbp-0x74],1
   140013789:	push   rcx
   14001378a:	xchg   ecx,eax
   14001378b:	and    BYTE PTR [rbx],al
   14001378d:	or     DWORD PTR [rdi],eax
   14001378f:	rex.WRXB xchg r8,rax
   140013791:	(bad)  
   140013792:	lea    esi,[rbx+0x22]
   140013795:	push   rcx
   140013796:	xlat   BYTE PTR ds:[rbx]
   140013797:	jmp    0x14001379c
   140013799:	cdq    
   14001379a:	mov    BYTE PTR [rdi+0x3832d604],ch
   1400137a0:	movabs eax,ds:0xf8ac5ec09bdc8837
   1400137a9:	fmulp  st(6),st
   1400137ab:	rol    DWORD PTR [rdi+0x42a93308],1
   1400137b1:	int3   
   1400137b2:	pop    rcx
   1400137b3:	cmp    DWORD PTR [rcx+0x7a0f9095],edi
   1400137b9:	int3   
   1400137ba:	sbb    BYTE PTR [rcx],cl
   1400137bc:	mov    cl,0xd4
   1400137be:	mov    ebp,0x98704243
   1400137c3:	test   BYTE PTR [rax],ch
   1400137c5:	sbb    al,0xba
   1400137c7:	out    0x8e,eax
   1400137c9:	mov    ebp,0x3ed9b983
   1400137ce:	or     bh,0xee
   1400137d1:	stc    
   1400137d2:	call   0x1a4e8b746
   1400137d7:	mov    ecx,?
   1400137d9:	push   rax
   1400137da:	add    dl,BYTE PTR [rax]
   1400137dc:	clc    
   1400137dd:	jg     0x140013817
   1400137df:	rex.W pop rdx
   1400137e1:	(bad)  
   1400137e2:	sbb    al,0xe0
   1400137e5:	and    edx,ebp
   1400137e7:	(bad)  
   1400137e8:	jge    0x14001380c
   1400137ea:	sbb    eax,0x10038978
   1400137ef:	and    ah,cl
   1400137f1:	pop    rdx
   1400137f2:	rcr    DWORD PTR [rbx+0x61],cl
   1400137f5:	sar    DWORD PTR [rip+0xffffffff8cc04930],0x7d        # 0xccc1812c
   1400137fc:	mov    edx,0x43d07c6d
   140013801:	xchg   BYTE PTR [rbp-0x2ad5baa3],bl
   140013807:	(bad)  
   140013808:	mov    eax,0xf3f7776f
   14001380d:	cdq    
   14001380e:	jae    0x14001380d
   140013810:	shl    BYTE PTR [rcx-0x58],0xf1
   140013814:	outs   dx,DWORD PTR ds:[rsi]
   140013815:	cmp    al,dh
   140013817:	(bad)  
   140013818:	xor    dh,bl
   14001381a:	scas   al,BYTE PTR es:[rdi]
   14001381b:	popf   
   14001381c:	fistp  DWORD PTR [rdi]
   14001381e:	fcomp  QWORD PTR [rdi-0x34]
   140013821:	(bad)  
   140013823:	mov    eax,0x681e950c
   140013828:	rex.W pop rax
   14001382a:	mov    dl,0x88
   14001382c:	imul   ecx,DWORD PTR [rdx+0x342ee6f4],0x880784e1
   140013836:	(bad)  
   140013837:	cdq    
   140013838:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013839:	pop    rsi
   14001383a:	or     ebp,DWORD PTR [rdi-0x7e75be7f]
   140013840:	rex.RX add al,0xec
   140013843:	ficom  WORD PTR [rcx]
   140013845:	sub    ebp,esi
   140013847:	mov    ebx,0xc38a9930
   14001384c:	retf   
   14001384d:	(bad)  
   14001384f:	retf   0x6c6a
   140013852:	and    eax,DWORD PTR [rax]
   140013854:	loope  0x14001387a
   140013856:	sahf   
   140013857:	vpunpckhbw ymm5,ymm4,ymm6
   14001385b:	(bad)  
   14001385c:	sub    BYTE PTR [rip+0x5aab1128],ch        # 0x19aac498a
   140013862:	xchg   edi,eax
   140013863:	xlat   BYTE PTR ds:[rbx]
   140013864:	mov    DWORD PTR [rsi+0x30],eax
   140013867:	sbb    eax,DWORD PTR [rcx-0x761b4412]
   14001386d:	sbb    edx,DWORD PTR [rdi-0x41]
   140013870:	loope  0x1400138f1
   140013872:	jge    0x140013845
   140013874:	stc    
   140013875:	(bad)  
   140013876:	(bad)  
   140013877:	stc    
   140013878:	cld    
   140013879:	mov    DWORD PTR [rdx+0x40993c5d],esp
   14001387f:	(bad)  
   140013880:	fbstp  TBYTE PTR [rbp+rbx*8-0x5]
   140013884:	fbstp  TBYTE PTR [rdx-0x48084517]
   14001388a:	xchg   edi,eax
   14001388b:	(bad)  
   14001388c:	jle    0x140013835
   14001388e:	(bad)  
   14001388f:	push   0x5cc7ff3e
   140013894:	out    0xde,al
   140013896:	xor    bh,BYTE PTR ss:[rcx]
   140013899:	fidivr DWORD PTR [rbp-0xf]
   14001389c:	iret   
   14001389d:	cmp    al,0x77
   14001389f:	(bad)  
   1400138a0:	xor    eax,0x96cd78bf
   1400138a5:	mov    DWORD PTR [rcx-0x7cb02eb2],ecx
   1400138ab:	jbe    0x140013865
   1400138ad:	mov    ?,esp
   1400138af:	ss (bad) 
   1400138b1:	xchg   ah,bh
   1400138b3:	rex cmc 
   1400138b5:	fst    QWORD PTR [rax+0x7d1e3d35]
   1400138bb:	stc    
   1400138bc:	adc    bh,BYTE PTR [rdi-0x46fde76d]
   1400138c2:	stos   BYTE PTR es:[rdi],al
   1400138c3:	(bad)  
   1400138c4:	add    ebp,DWORD PTR [rsi-0xdd3eb27]
   1400138ca:	(bad)  
   1400138cb:	int    0xb3
   1400138cd:	lods   eax,DWORD PTR ds:[rsi]
   1400138ce:	fcomp  QWORD PTR [rdi-0x56]
   1400138d1:	fmul   st,st(3)
   1400138d3:	or     al,0x73
   1400138d5:	sub    edx,edi
   1400138d7:	mov    esi,0x61a94667
   1400138dc:	mov    ebp,0xc2c48381
   1400138e1:	and    DWORD PTR [rdx+0x1d6838a1],0xf8920e4b
   1400138eb:	jrcxz  0x140013906
   1400138ed:	loopne 0x14001392d
   1400138ef:	movabs ds:0x3aeefbbec1d999c,eax
   1400138f8:	mov    dh,BYTE PTR [rax]
   1400138fa:	out    dx,eax
   1400138fb:	ds pop rcx
   1400138fd:	jrcxz  0x1400138bb
   1400138ff:	mov    BYTE PTR [rax+rax*2],al
   140013902:	sbb    eax,0x8b5fae44
   140013907:	std    
   140013908:	push   gs
   14001390a:	jnp    0x14001390c
   14001390c:	cmp    BYTE PTR [rcx],bh
   14001390e:	(bad)  
   14001390f:	clc    
   140013910:	popf   
   140013911:	(bad)  
   140013912:	mov    esp,0x84ecdc90
   140013917:	es stc 
   140013919:	push   rax
   14001391a:	int3   
   14001391b:	add    ah,BYTE PTR [rax+rcx*2-0x68]
   14001391f:	frstor [rax]
   140013921:	add    BYTE PTR [rbp-0x70],bh
   140013924:	cli    
   140013925:	mov    edi,0x2a28e01c
   14001392a:	(bad)  
   14001392b:	adc    dl,0x17
   14001392e:	rex.RXB and BYTE PTR [r10],r11b
   140013931:	jl     0x140013915
   140013933:	jrcxz  0x140013944
   140013935:	jl     0x140013969
   140013937:	retf   
   140013938:	mov    bl,0xd9
   14001393a:	cdq    
   14001393b:	std    
   14001393c:	mov    bl,0xfd
   14001393e:	(bad)
   140013941:	rex.WRB movabs r8,0xd7f0e619eaf5df7
   14001394b:	data16 (bad) 
   14001394d:	mov    edi,0x3caee773
   140013952:	rex.WXB pushf 
   140013954:	mov    dl,0xea
   140013956:	fld    TBYTE PTR [rdi-0x6aca10ab]
   14001395c:	rex mov DWORD PTR [rcx+0x2031260f],eax
   140013963:	(bad)  
   140013964:	or     al,0x78
   140013966:	pop    rbp
   140013967:	rex.RB sbb al,0x58
   14001396a:	push   rdx
   14001396b:	rex.WX jge 0x1400138f6
   14001396e:	movabs ds:0x17adcc02931611be,al
   140013977:	repz retf 
   140013979:	rol    DWORD PTR [rbp+0x69],cl
   14001397c:	jg     0x140013938
   14001397e:	nop
   14001397f:	mov    ebx,es
   140013981:	(bad)  
   140013982:	rex.RX sub eax,0x42b5381c
   140013988:	lar    esp,WORD PTR [rdx-0x16]
   14001398c:	push   0x7a
   14001398e:	jge    0x14001395a
   140013990:	shl    edx,1
   140013992:	rex.X shl BYTE PTR [rbx+0x63],cl
   140013996:	jrcxz  0x140013985
   140013998:	loop   0x140013941
   14001399a:	pop    rdi
   14001399b:	ja     0x140013992
   14001399d:	(bad)  
   14001399e:	(bad)  
   14001399f:	mov    esi,0x469b19f2
   1400139a4:	push   rdi
   1400139a5:	(bad)  
   1400139a6:	mov    fs,WORD PTR [rbp+0x79]
   1400139a9:	jbe    0x1400139c8
   1400139ab:	cmp    bh,0xb1
   1400139ae:	jmp    0x1569f316d
   1400139b3:	push   rbp
   1400139b4:	xchg   BYTE PTR [rdi-0x2180a24a],ah
   1400139ba:	(bad)  
   1400139bb:	mov    dh,0xeb
   1400139bd:	fild   WORD PTR [rbp+0x44]
   1400139c0:	(bad)  
   1400139c1:	imul   esi,DWORD PTR [rbp+0x5a],0x17
   1400139c5:	pop    rbp
   1400139c6:	jle    0x14001399d
   1400139c8:	and    eax,0xf6f2dfab
   1400139cd:	xchg   edi,eax
   1400139ce:	popf   
   1400139cf:	sti    
   1400139d0:	(bad)  
   1400139d1:	stos   DWORD PTR es:[rdi],eax
   1400139d2:	mov    dh,0xae
   1400139d4:	(bad)  
   1400139d5:	cmp    BYTE PTR [rax-0x60],ah
   1400139d8:	enter  0xc71f,0x12
   1400139dc:	mov    bl,ah
   1400139de:	pushf  
   1400139df:	sbb    bl,BYTE PTR [rsi+0x6d]
   1400139e2:	mov    esp,0x720f293c
   1400139e7:	sbb    al,0x89
   1400139e9:	mov    ah,0x21
   1400139eb:	mov    ebx,0xe00d0f10
   1400139f0:	ror    esp,1
   1400139f2:	push   rcx
   1400139f3:	rex.B js 0x1400139b1
   1400139f6:	cmp    BYTE PTR [rcx],ah
   1400139f8:	xor    bl,BYTE PTR [rdx]
   1400139fa:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400139fb:	and    DWORD PTR [rsp+rbx*4+0x6c5f4663],eax
   140013a02:	cmp    dl,BYTE PTR [rbx]
   140013a04:	cmp    BYTE PTR [rdx],ah
   140013a06:	jbe    0x140013a41
   140013a08:	(bad)  
   140013a09:	test   dl,dl
   140013a0b:	add    cl,ah
   140013a0d:	rex.R push rdi
   140013a0f:	mov    BYTE PTR [rip+0xffffffffa808cceb],ah        # 0xe80a0700
   140013a15:	cmps   DWORD PTR cs:[rsi],DWORD PTR es:[rdi]
   140013a17:	adc    BYTE PTR [rdx],al
   140013a19:	push   rax
   140013a1a:	add    bl,BYTE PTR [rsi]
   140013a1c:	rex.WRX xlat BYTE PTR ds:[rbx]
   140013a1e:	xchg   ebp,eax
   140013a1f:	add    eax,DWORD PTR [rcx]
   140013a21:	cmp    BYTE PTR [rdi+rsi*8-0x9],bh
   140013a25:	imul   DWORD PTR [rdx+0x7b63ea81]
   140013a2b:	ds cli 
   140013a2d:	(bad)  [rdi-0x62]
   140013a30:	lods   al,BYTE PTR ds:[rsi]
   140013a31:	icebp  
   140013a32:	pop    rsi
   140013a33:	sub    al,0x1d
   140013a35:	mov    eax,0x57ed2a83
   140013a3a:	mov    ch,0x26
   140013a3c:	push   rsi
   140013a3d:	rex.R mov dil,0x4f
   140013a40:	and    cl,bl
   140013a42:	out    0x0,eax
   140013a44:	add    bh,dl
   140013a46:	sti    
   140013a47:	cs rex.RXB
   140013a49:	fwait
   140013a4a:	push   rcx
   140013a4b:	pop    rcx
   140013a4c:	fdivr  QWORD PTR [rdx+rbx*2+0x5c0c1a3b]
   140013a53:	rex.RX cmp eax,0x1ad02620
   140013a59:	cmp    BYTE PTR [rdx+0x76cfcc23],al
   140013a5f:	mov    edi,0xdc2fe5f3
   140013a64:	stc    
   140013a65:	adc    BYTE PTR [rax],cl
   140013a67:	cmp    eax,0x6cb79a88
   140013a6c:	or     BYTE PTR [rcx-0x718a001],al
   140013a72:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140013a73:	idiv   DWORD PTR [rsp+rsi*4]
   140013a76:	not    DWORD PTR [rdx-0x59942a57]
   140013a7c:	jns    0x140013a32
   140013a7e:	cmp    eax,DWORD PTR [rcx]
   140013a80:	nop
   140013a81:	mov    esp,0x51434b21
   140013a86:	mov    DWORD PTR es:[rdx+0x66],ebp
   140013a8a:	adc    BYTE PTR [rbx+rsi*2-0x6cbbcb38],bh
   140013a91:	rex.WB fdiv DWORD PTR [r9]
   140013a94:	xchg   ebx,eax
   140013a95:	push   rax
   140013a96:	jo     0x140013a6f
   140013a98:	(bad)  
   140013a99:	cs loopne 0x140013a40
   140013a9c:	retf   0x1800
   140013a9f:	sbb    DWORD PTR [rsi],eax
   140013aa1:	add    al,0x14
   140013aa3:	pop    rsi
   140013aa4:	(bad)  
   140013aa6:	imul   esi,DWORD PTR [rcx+rbx*4+0xf],0xeb9d0c12
   140013aae:	rex.X xor DWORD PTR [rbp+0x48c6a249],esp
   140013ab5:	rex.W cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140013ab7:	(bad)  
   140013ab8:	sbb    esi,DWORD PTR [rcx+0x4741418a]
   140013abe:	(bad)  
   140013abf:	pop    rcx
   140013ac0:	sub    al,0x3a
   140013ac2:	rol    DWORD PTR [r12+rsi*4-0x4a],cl
   140013ac7:	cmp    esi,0x4640cf1e
   140013acd:	add    DWORD PTR [rcx+0x12973c5d],eax
   140013ad3:	scas   al,BYTE PTR es:[rdi]
   140013ad4:	in     eax,0x14
   140013ad6:	or     DWORD PTR [rdx],esi
   140013ad8:	pop    rbp
   140013ad9:	movabs al,ds:0xbd9f57c9e05f52c4
   140013ae2:	out    0xc2,al
   140013ae4:	rex.WXB (bad) 
   140013ae6:	(bad)  
   140013ae7:	(bad)  
   140013ae8:	(bad)  
   140013aea:	outs   dx,BYTE PTR ds:[rsi]
   140013aeb:	(bad)  
   140013aed:	lods   eax,DWORD PTR ds:[rsi]
   140013aee:	jg     0x140013aab
   140013af0:	ret    
   140013af1:	int    0xcf
   140013af3:	idiv   BYTE PTR [rsi+0x7f]
   140013af6:	jrcxz  0x140013b6d
   140013af8:	out    dx,eax
   140013af9:	sti    
   140013afa:	adc    eax,0xf003ef00
   140013aff:	jmp    0x135fe398b
   140013b04:	rex.WXB ficom DWORD PTR [r14+r11*1+0x69]
   140013b09:	push   rax
   140013b0a:	mov    ?,edi
   140013b0c:	rex.WXB
   140013b0d:	rex.R hlt 
   140013b0f:	xchg   ebx,eax
   140013b10:	jns    0x140013aa3
   140013b12:	imul   esp,DWORD PTR [edi-0x46048aa],0xffffff93
   140013b1a:	push   rdi
   140013b1b:	scas   al,BYTE PTR es:[rdi]
   140013b1c:	jnp    0x140013b00
   140013b1e:	and    eax,0x8098279b
   140013b23:	sahf   
   140013b24:	(bad)  
   140013b25:	sti    
   140013b26:	xchg   esp,eax
   140013b27:	and    bh,BYTE PTR [rip+0xffffffff98678b57]        # 0xd868c684
   140013b2d:	fsubp  st(7),st
   140013b2f:	or     DWORD PTR [rdx+0x403c64c4],eax
   140013b35:	movabs ds:0x259fc6907a7a94fa,eax
   140013b3e:	neg    BYTE PTR [rcx]
   140013b40:	mov    ebp,0x1042504b
   140013b45:	(bad)  
   140013b46:	sub    dh,BYTE PTR [rip+0x219e8e78]        # 0x1619fc9c4
   140013b4c:	rex.WRXB mov r11b,0xc4
   140013b50:	ret    0x9a53
   140013b53:	mov    ebp,0x3ef807c7
   140013b58:	xlat   BYTE PTR ds:[rbx]
   140013b59:	adc    al,al
   140013b5b:	adc    ah,cl
   140013b5d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013b5e:	imul   ebp,DWORD PTR [rsi+0x69],0x65
   140013b62:	(bad)  
   140013b63:	int3   
   140013b64:	push   rbp
   140013b65:	mov    esi,0xedffff3f
   140013b6a:	mov    ebp,0x57649879
   140013b6f:	jne    0x140013b98
   140013b71:	clc    
   140013b72:	cmp    esi,edi
   140013b74:	rex.RB
   140013b75:	fs lods ax,WORD PTR gs:[rsi]
   140013b79:	sub    dl,ch
   140013b7b:	pop    rsi
   140013b7c:	and    eax,0x63242123
   140013b81:	mov    al,0x8c
   140013b83:	lea    esi,[rdi-0x7844b24f]
   140013b89:	outs   dx,BYTE PTR ds:[rsi]
   140013b8a:	int3   
   140013b8b:	(bad)  
   140013b8c:	(bad)  
   140013b8d:	mov    ebx,0x663dc661
   140013b92:	(bad)  
   140013b93:	ss ss ss mov eax,0xbda199b1
   140013b9b:	test   al,0x3c
   140013b9d:	mov    dh,0x7b
   140013b9f:	mov    esi,0xcc7cf1a6
   140013ba4:	je     0x140013b61
   140013ba6:	(bad)  [rax]
   140013ba8:	(bad)  
   140013ba9:	movsxd esp,DWORD PTR [rcx+rcx*8+0x18]
   140013bad:	mov    WORD PTR [rdx+rsi*4-0x4f],ss
   140013bb1:	pop    rcx
   140013bb2:	(bad)  
   140013bb3:	pop    rbp
   140013bb4:	xor    al,0x20
   140013bb6:	(bad)  
   140013bb7:	or     esp,eax
   140013bb9:	movabs ds:0x559992d52aa4a91d,al
   140013bc2:	mov    ecx,0xef1199ef
   140013bc7:	fidiv  WORD PTR [rbx-0x1a]
   140013bca:	(bad)  
   140013bcb:	jae    0x140013b9b
   140013bcd:	jge    0x140013c06
   140013bcf:	mov    dl,0xaa
   140013bd1:	mov    al,0xa
   140013bd3:	push   rbp
   140013bd4:	rex.WB and rax,0x545f5388
   140013bda:	fs mov esp,0x788bdf77
   140013be0:	out    dx,eax
   140013be1:	fnsave [rbx+0x1d72cefd]
   140013be7:	push   0x32b93d56
   140013bec:	xor    eax,0x627b3cb6
   140013bf1:	fs sahf 
   140013bf3:	and    BYTE PTR [rbx+0x22],dh
   140013bf6:	out    0xc7,eax
   140013bf8:	div    DWORD PTR [rdi+0x3a]
   140013bfb:	add    DWORD PTR [rax],0xffffffa0
   140013bfe:	xchg   esi,eax
   140013bff:	retf   0x22b
   140013c02:	jb     0x140013c82
   140013c04:	push   rsp
   140013c05:	leave  
   140013c06:	cld    
   140013c07:	mov    esi,0x4b7bda0f
   140013c0c:	fwait
   140013c0d:	std    
   140013c0e:	xor    DWORD PTR [rax],0x77
   140013c11:	push   rbp
   140013c12:	out    dx,al
   140013c13:	clc    
   140013c14:	add    ebp,eax
   140013c16:	adc    eax,0x375f25b1
   140013c1b:	or     eax,0x344d9441
   140013c20:	(bad)  
   140013c21:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013c22:	out    0x66,eax
   140013c24:	or     BYTE PTR [rdx-0x30],al
   140013c27:	(bad)  [rdi]
   140013c29:	(bad)  
   140013c2a:	jb     0x140013ca8
   140013c2c:	loopne 0x140013c64
   140013c2e:	movabs ds:0xd6ff039fe7708b50,al
   140013c37:	shl    cl,cl
   140013c39:	mov    bh,0xbc
   140013c3b:	mov    BYTE PTR [rdi],ch
   140013c3d:	jns    0x140013c3c
   140013c3f:	(bad)  
   140013c40:	xlat   BYTE PTR ds:[rbx]
   140013c41:	add    BYTE PTR [rbp+rcx*8-0x24],dh
   140013c45:	mov    cl,0x91
   140013c47:	adc    edx,DWORD PTR [rdi]
   140013c49:	cmp    eax,0x9d8dcafd
   140013c4e:	fist   DWORD PTR es:[rax]
   140013c51:	push   rdx
   140013c52:	test   eax,0x43c9523c
   140013c57:	test   al,0x2c
   140013c59:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013c5a:	mov    bl,0x12
   140013c5c:	jge    0x140013c26
   140013c5e:	mov    cl,0x2
   140013c60:	ficom  DWORD PTR [rcx]
   140013c62:	nop
   140013c63:	xchg   esi,eax
   140013c64:	adc    eax,0x563f9874
   140013c69:	and    DWORD PTR [rax],0x24071060
   140013c6f:	(bad)  
   140013c70:	and    BYTE PTR [rip+0xffffffffeed89d5b],al        # 0x12ed9d9d1
   140013c76:	adc    BYTE PTR [rax],0x92
   140013c79:	or     BYTE PTR [rdx],ch
   140013c7b:	addr32 jb 0x140013c7f
   140013c7e:	cwde   
   140013c7f:	add    al,0x95
   140013c81:	add    BYTE PTR [rsp+riz*4-0x74],cl
   140013c85:	rex.WX fimul DWORD PTR [rcx-0x38]
   140013c89:	idiv   DWORD PTR [rbx+0x1f]
   140013c8c:	add    DWORD PTR [rdi],edx
   140013c8e:	mov    ch,0xce
   140013c90:	enter  0x8060,0x83
   140013c94:	cmc    
   140013c95:	adc    al,0x80
   140013c97:	or     DWORD PTR [rbx],eax
   140013c99:	shl    BYTE PTR [rcx+rcx*8+0x7c1e8c60],cl
   140013ca0:	push   rdx
   140013ca1:	mov    ebx,0x271d2010
   140013ca6:	rex mov esi,0x38de19e
   140013cac:	in     eax,dx
   140013cad:	out    0xfc,eax
   140013caf:	loop   0x140013ce4
   140013cb1:	idiv   dh
   140013cb3:	loopne 0x140013d04
   140013cb5:	pop    rsp
   140013cb6:	mov    dh,0xf5
   140013cb8:	mov    dh,0x9b
   140013cba:	out    dx,eax
   140013cbb:	sbb    edi,DWORD PTR [rdi-0x60786101]
   140013cc1:	ficomp WORD PTR [rbp-0x17]
   140013cc4:	mov    esi,0xceff1399
   140013cc9:	out    dx,al
   140013cca:	fistp  QWORD PTR [rdx+0x3e003dfe]
   140013cd0:	cmp    dh,dh
   140013cd2:	xchg   edi,eax
   140013cd3:	mov    edi,0x1935b8fa
   140013cd8:	fprem1 
   140013cda:	sbb    edi,DWORD PTR [rdi+0x35]
   140013cdd:	or     al,ah
   140013cdf:	cmp    DWORD PTR [rax],eax
   140013ce1:	pop    rsi
   140013ce2:	rex.R
   140013ce3:	rex.R iret 
   140013ce5:	ins    BYTE PTR es:[rdi],dx
   140013ce6:	or     eax,0x86dd68b4
   140013ceb:	jne    0x140013c9a
   140013ced:	out    0x3c,eax
   140013cef:	jmp    QWORD PTR [rdi]
   140013cf1:	jbe    0x140013d2f
   140013cf3:	jrcxz  0x140013d3c
   140013cf5:	(bad)  
   140013cf6:	(bad)  [rdx+rbp*1+0x2c402d50]
   140013cfd:	adc    dh,BYTE PTR [rbp-0x64]
   140013d00:	mov    cl,0x5c
   140013d02:	or     BYTE PTR [rdx],al
   140013d04:	mov    ebp,0x9f7a42ef
   140013d09:	add    DWORD PTR [rdx+0x66],ebp
   140013d0c:	xor    BYTE PTR [rbx+rsi*1],ah
   140013d0f:	jg     0x140013ca4
   140013d11:	loope  0x140013d6a
   140013d13:	xor    BYTE PTR [rdi+0x19],bh
   140013d16:	lods   eax,DWORD PTR ds:[rsi]
   140013d17:	xchg   BYTE PTR [rbx],dh
   140013d19:	mov    edx,0xb04c3c62
   140013d1e:	(bad)
   140013d23:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140013d24:	ficomp DWORD PTR [rbp+0x691dc8a5]
   140013d2a:	cmp    al,0x30
   140013d2d:	jp     0x140013cd2
   140013d2f:	fnsave [rax-0x3a987ed8]
   140013d35:	mov    ebx,0x9a63b0b0
   140013d3a:	shl    BYTE PTR [rdx-0x7dbf77f6],1
   140013d40:	(bad)  
   140013d41:	and    eax,DWORD PTR [rdi]
   140013d43:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140013d44:	rex.WB pop r8
   140013d46:	rex.R in al,0x2d
   140013d49:	push   rbx
   140013d4a:	(bad)  
   140013d4b:	scas   al,BYTE PTR es:[rdi]
   140013d4c:	ds scas eax,DWORD PTR es:[rdi]
   140013d4e:	iret   
   140013d4f:	xchg   esi,edx
   140013d51:	outs   dx,BYTE PTR ds:[rsi]
   140013d52:	(bad)  
   140013d53:	stc    
   140013d54:	or     rdx,QWORD PTR [rax-0x4919af53]
   140013d5b:	push   rbp
   140013d5c:	cmp    BYTE PTR [rbp-0x2401a137],ch
   140013d62:	test   DWORD PTR [rcx-0x10563d51],0x206e07a3
   140013d6c:	sub    al,0x6d
   140013d6e:	in     al,dx
   140013d70:	pop    rdx
   140013d71:	shl    DWORD PTR [rdi+rdx*1+0x48],0x11
   140013d76:	call   0xd2c0384f
   140013d7b:	add    al,0x75
   140013d7d:	ins    BYTE PTR es:[rdi],dx
   140013d7e:	fadd   QWORD PTR [rcx]
   140013d80:	pop    rdi
   140013d81:	out    dx,al
   140013d82:	xor    DWORD PTR [rbp+0x9540fe2],0x5a
   140013d89:	ins    DWORD PTR es:[rdi],dx
   140013d8a:	mov    esp,0xbe2ebfe5
   140013d8f:	in     al,dx
   140013d90:	out    dx,al
   140013d91:	cmp    esp,DWORD PTR [rdi+0x1e]
   140013d94:	pushf  
   140013d95:	(bad)  
   140013d96:	fwait
   140013d97:	sahf   
   140013d98:	cld    
   140013d99:	(bad)  
   140013d9a:	or     eax,0x5d359eb7
   140013d9f:	repnz cli 
   140013da1:	sbb    edi,edi
   140013da3:	add    dl,BYTE PTR [rsi+rdi*2]
   140013da6:	jbe    0x140013d7f
   140013da8:	xchg   ebx,eax
   140013da9:	imul   ebp
   140013dab:	rex.WRX (bad) [rdi+0x1b4014ee]
   140013db2:	js     0x140013db8
   140013db4:	add    al,BYTE PTR [rdx]
   140013db6:	movabs eax,ds:0x1454205022d0f7b2
   140013dbf:	rex adc eax,0xaf31369
   140013dc5:	push   0x241a0085
   140013dca:	push   rax
   140013dcb:	shr    ch,1
   140013dcd:	sub    eax,0x14a4ded2
   140013dd2:	sub    dl,BYTE PTR [rbp+rdx*1+0x40]
   140013dd6:	push   rbp
   140013dd7:	rex
   140013dd8:	rex.RB
   140013dd9:	rex stos DWORD PTR es:[rdi],eax
   140013ddb:	and    dl,BYTE PTR [rax+0x45]
   140013dde:	or     BYTE PTR [rdx+rbx*8-0x40],al
   140013de2:	int3   
   140013de3:	(bad)  
   140013de4:	lods   eax,DWORD PTR ds:[rsi]
   140013de5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140013de6:	(bad)  
   140013de7:	push   rsp
   140013de8:	or     r11b,BYTE PTR [rbx+0x550b6912]
   140013def:	call   0x19b6b7eaa
   140013df4:	push   rbp
   140013df5:	xor    BYTE PTR [rbx],cl
   140013df7:	ret    
   140013df8:	sbb    BYTE PTR [rax],bh
   140013dfa:	clc    
   140013dfb:	js     0x140013de5
   140013dfd:	(bad)  
   140013dfe:	(bad)  
   140013dff:	jg     0x140013db8
   140013e01:	mov    ah,0xaf
   140013e03:	push   rcx
   140013e04:	(bad)  
   140013e05:	rex.WXB push 0x573f07ac
   140013e0b:	ds (bad) 
   140013e0d:	out    dx,al
   140013e0e:	rex.B
   140013e0f:	rex movsxd ebp,DWORD PTR [rbx+0x1f1808b5]
   140013e16:	lahf   
   140013e17:	pop    rdi
   140013e18:	dec    dl
   140013e1a:	addr32 (bad) 
   140013e1c:	cwde   
   140013e1d:	mov    esi,0xf3c38ef7
   140013e22:	popf   
   140013e23:	in     eax,0x55
   140013e25:	rex.WRX xor QWORD PTR [rbp+0x1],r14
   140013e29:	jl     0x140013e3c
   140013e2b:	rol    BYTE PTR [rdi],0x1
   140013e2e:	jl     0x140013eae
   140013e30:	in     al,dx
   140013e31:	(bad)  
   140013e32:	jg     0x140013e21
   140013e34:	cmp    edi,DWORD PTR [rdx-0x44bc9829]
   140013e3a:	pop    rsi
   140013e3b:	std    
   140013e3c:	out    dx,al
   140013e3d:	ss add al,0x3f
   140013e40:	add    eax,0x3c0073c8
   140013e45:	(bad)  
   140013e46:	push   rsp
   140013e47:	(bad)  
   140013e48:	jrcxz  0x140013e0a
   140013e4a:	loopne 0x140013e4c
   140013e4c:	pop    rbp
   140013e4d:	repnz in al,0x5d
   140013e50:	ret    
   140013e51:	iret   
   140013e52:	cld    
   140013e53:	cdq    
   140013e54:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140013e55:	pop    rsi
   140013e56:	hlt    
   140013e57:	(bad)  
   140013e58:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140013e59:	out    dx,al
   140013e5a:	fcmovbe st,st(0)
   140013e5c:	push   0x55
   140013e5e:	sar    DWORD PTR [rbp-0x4],0x54
   140013e62:	cli    
   140013e63:	repnz in eax,0x89
   140013e66:	or     dl,BYTE PTR [rdi+0x29]
   140013e69:	out    dx,eax
   140013e6a:	adc    esp,DWORD PTR [rax]
   140013e6c:	cdq    
   140013e6d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013e6e:	xchg   ebp,eax
   140013e6f:	sbb    edi,DWORD PTR [rbx-0x6c]
   140013e72:	int3   
   140013e73:	lahf   
   140013e74:	sbb    bl,ah
   140013e76:	imul   r8d,DWORD PTR [r11],0xfffffff4
   140013e7a:	out    dx,eax
   140013e7b:	sbb    BYTE PTR [rbp+0x55cad59],bl
   140013e81:	data16 (bad) 
   140013e83:	mov    ebx,0xf2865f79
   140013e88:	fmul   st,st(2)
   140013e8a:	push   rdi
   140013e8b:	xchg   edx,eax
   140013e8c:	(bad)  
   140013e8d:	out    dx,eax
   140013e8e:	fcmovu st,st(4)
   140013e90:	rex.WX mov bl,0x4a
   140013e93:	push   rbx
   140013e94:	adc    dh,BYTE PTR [rax-0x49]
   140013e97:	mov    cl,0x14
   140013e99:	and    al,0x8a
   140013e9b:	and    eax,0x4c526bf
   140013ea0:	and    al,0x21
   140013ea2:	pop    rcx
   140013ea3:	cwde   
   140013ea4:	push   rax
   140013ea5:	fwait
   140013ea6:	test   DWORD PTR [rbx+rbp*8-0x7d],eax
   140013eaa:	rex.XB (bad) 
   140013eac:	shl    DWORD PTR [rcx],1
   140013eae:	or     eax,DWORD PTR [rdi]
   140013eb0:	out    dx,eax
   140013eb1:	(bad)  
   140013eb2:	pushf  
   140013eb3:	jge    0x140013ead
   140013eb5:	loopne 0x140013e6b
   140013eb7:	or     bh,bl
   140013eb9:	or     esp,eax
   140013ebb:	fisttp WORD PTR [rsi+0x1d]
   140013ebe:	mov    eax,0x5fe211fa
   140013ec3:	fistp  WORD PTR [rcx]
   140013ec5:	popf   
   140013ec6:	(bad)  
   140013ec7:	add    bl,BYTE PTR [rax]
   140013ec9:	sub    BYTE PTR [rbp+rdi*1+0x7f17f6ec],dh
   140013ed0:	mov    ebx,0x404c75ec
   140013ed5:	sub    al,BYTE PTR [rax+0x3d0e2784]
   140013edb:	test   eax,0x23d756aa
   140013ee0:	mov    edx,0x2870e4e3
   140013ee5:	hlt    
   140013ee6:	xchg   esi,eax
   140013ee7:	imul   ebx,DWORD PTR [rdi],0x0
   140013eea:	xchg   ebp,eax
   140013eeb:	in     eax,0x89
   140013eed:	xor    eax,0x6b110246
   140013ef2:	fld    QWORD PTR [rax-0x422298b2]
   140013efa:	fistp  QWORD PTR [rbp+rdi*8-0x62eefb10]
   140013f01:	add    eax,0xb12a77f8
   140013f06:	enter  0x13ff,0xc0
   140013f0a:	(bad)  
   140013f0b:	cmp    dh,BYTE PTR [rsi-0x18]
   140013f0e:	clc    
   140013f0f:	clc    
   140013f10:	sahf   
   140013f11:	sbb    r14,QWORD PTR [r15]
   140013f14:	jne    0x140013f1c
   140013f16:	pop    rdx
   140013f17:	jmp    0x140013f1d
   140013f19:	(bad)  
   140013f1b:	push   rbx
   140013f1c:	int3   
   140013f1d:	(bad)  
   140013f1e:	or     al,0x4
   140013f20:	jo     0x140013f26
   140013f22:	rex.X or ecx,DWORD PTR [rax-0x6b]
   140013f26:	movabs al,ds:0xad1a456080848162
   140013f2f:	cs rex.B (bad) 
   140013f32:	(bad)  
   140013f33:	or     cl,BYTE PTR [rax+0x41]
   140013f36:	je     0x140013f0d
   140013f38:	rex.XB xor BYTE PTR [r8],dil
   140013f3b:	add    al,0x4
   140013f3d:	data16 adc rax,0xffffffff98cd5910
   140013f44:	push   rsi
   140013f45:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013f46:	xchg   edi,eax
   140013f47:	sbb    DWORD PTR [rbx+rcx*8],edi
   140013f4a:	nop
   140013f4b:	mov    ah,0xc7
   140013f4d:	(bad)  
   140013f4e:	and    ah,BYTE PTR [rax-0x1320d51b]
   140013f54:	jg     0x140013ee3
   140013f56:	(bad)  
   140013f57:	xor    al,0xda
   140013f59:	sbb    al,0x10
   140013f5b:	add    al,0x43
   140013f5d:	mov    bh,ch
   140013f5f:	out    dx,eax
   140013f60:	ins    BYTE PTR es:[rdi],dx
   140013f61:	jae    0x140013f64
   140013f63:	add    BYTE PTR [rcx],ah
   140013f65:	mov    bh,0x12
   140013f67:	jrcxz  0x140013fcb
   140013f69:	(bad)  
   140013f6a:	fwait
   140013f6b:	or     eax,ecx
   140013f6d:	push   rdx
   140013f6e:	cmp    BYTE PTR [rcx],0xd4
   140013f71:	mov    esp,0x10a11a31
   140013f76:	add    eax,0xd37dbad8
   140013f7b:	lock (bad) 
   140013f7d:	cld    
   140013f7e:	repnz (bad) 
   140013f80:	or     eax,0x9f73ccff
   140013f85:	(bad)  
   140013f86:	mov    ecx,0xcf0fabeb
   140013f8b:	jle    0x140013f8a
   140013f8d:	mov    dh,0x7
   140013f8f:	push   di
   140013f91:	(bad)  
   140013f92:	push   rsi
   140013f93:	(bad)  
   140013f94:	push   rbp
   140013f95:	(bad)  [rcx+0x1789cd9f]
   140013f9b:	jbe    0x140013f9c
   140013f9d:	(bad)  
   140013f9e:	jne    0x140013f57
   140013fa0:	add    eax,edi
   140013fa2:	(bad)  
   140013fa3:	and    BYTE PTR [rdi+0x1e],bl
   140013fa6:	sti    
   140013fa7:	retf   
   140013fa8:	push   rdi
   140013fa9:	sbb    eax,0xfdef4efc
   140013fae:	pop    rdx
   140013faf:	(bad)  
   140013fb1:	(bad)  
   140013fb2:	ja     0x140013ff3
   140013fb4:	adc    eax,0x78024fc0
   140013fb9:	es add al,0x3f
   140013fbc:	adc    eax,0xd6fad02
   140013fc1:	mov    dh,0x69
   140013fc3:	jo     0x140013fa2
   140013fc5:	(bad)  
   140013fc6:	clc    
   140013fc7:	rcr    DWORD PTR [rdi],0x7e
   140013fca:	retf   0x67a6
   140013fcd:	(bad)  
   140013fce:	hlt    
   140013fcf:	in     eax,0x5b
   140013fd1:	jbe    0x140013fc2
   140013fd3:	fdivr  DWORD PTR [rsi+rcx*8-0x4ca20f9d]
   140013fda:	push   0x464bc19c
   140013fdf:	(bad)  
   140013fe0:	sti    
   140013fe1:	scas   eax,DWORD PTR es:[rdi]
   140013fe2:	lock sbb esi,ebp
   140013fe5:	jle    0x14001401a
   140013fe7:	rcl    BYTE PTR [rbp-0x5f11a647],0x92
   140013fee:	rex.WRX xor rax,0xffffffff96927202
   140013ff4:	rex.WRX fiadd DWORD PTR [rsi-0x46b71407]
   140013ffb:	loopne 0x140014028
   140013ffd:	xor    DWORD PTR [rip+0xffffffffad049d91],esi        # 0xed05dd94
   140014003:	sbb    al,0x34
   140014005:	rcr    DWORD PTR [rdi],cl
   140014007:	(bad)  
   140014009:	sbb    edi,ebp
   14001400b:	add    ah,BYTE PTR [rsi+rax*4]
   14001400e:	clc    
   14001400f:	adc    eax,DWORD PTR [rbx+0x2073e712]
   140014015:	sti    
   140014016:	stc    
   140014017:	rex loop 0x140014082
   14001401a:	clc    
   14001401b:	(bad)  
   14001401c:	(bad)  
   14001401d:	rex.WR movabs ds:0xd631b98a8e7206d6,al
   140014027:	(bad)  
   140014028:	sub    al,0x2d
   14001402a:	(bad)  
   14001402b:	(bad)  
   14001402c:	xor    eax,DWORD PTR [rdi+0x1e]
   14001402f:	(bad)  
   140014030:	xor    DWORD PTR [rax+0x4],0x37ce1ff0
   140014037:	repz add esp,DWORD PTR [rdi+0x2ad40015]
   14001403e:	mov    WORD PTR [rcx+rax*2],gs
   140014041:	rcr    ebp,cl
   140014043:	(bad)  
   140014044:	cli    
   140014045:	ja     0x14001407d
   140014047:	stc    
   140014048:	pop    rbx
   140014049:	jp     0x140014004
   14001404b:	(bad)  
   14001404c:	es enter 0xc4d2,0xd3
   140014051:	xor    BYTE PTR [rax+rsi*2-0x59],ah
   140014055:	and    al,0x31
   140014057:	push   rdi
   140014058:	xor    BYTE PTR [rsi+rdx*1-0x4f746e00],0x59
   140014060:	int3   
   140014061:	push   0xffffffff9b5a764d
   140014066:	mov    edx,0xd155a00c
   14001406b:	clc    
   14001406c:	leave  
   14001406d:	shr    DWORD PTR [rdi],0xa7
   140014070:	xchg   esp,eax
   140014071:	mov    edx,0x5b3ea814
   140014076:	repz mov edi,0xbcb791a4
   14001407c:	clc    
   14001407d:	(bad)  
   14001407e:	mov    esi,0xede1bddf
   140014083:	adc    dh,bh
   140014085:	std    
   140014086:	xchg   ebp,eax
   140014087:	jrcxz  0x1400140ac
   140014089:	movsxd eax,ebx
   14001408b:	rex.WRXB movabs r9,0x40243f92acabc9f4
   140014095:	sub    bh,ch
   140014097:	test   eax,0x828e0014
   14001409c:	add    BYTE PTR [rsi-0x56],al
   14001409f:	or     BYTE PTR [rcx+0x18],al
   1400140a2:	int3   
   1400140a3:	or     ch,BYTE PTR [rcx-0x3c]
   1400140a6:	and    BYTE PTR [rax+0x3],ch
   1400140a9:	cli    
   1400140aa:	shl    BYTE PTR [rax+rbp*8],0x2f
   1400140ae:	(bad)  
   1400140af:	xor    BYTE PTR [rsi+rax*2],0xa4
   1400140b3:	rex.WR pop rcx
   1400140b5:	rex.B xor eax,0x6a4c3d8f
   1400140bb:	cdq    
   1400140bc:	mov    DWORD PTR [rsi-0x25],ebp
   1400140bf:	sub    ch,BYTE PTR [rax]
   1400140c1:	add    BYTE PTR [rip+0xb2d033c],dl        # 0x14b2e4403
   1400140c7:	add    bh,BYTE PTR [rbp+0x518c1225]
   1400140cd:	or     edi,edi
   1400140cf:	mov    edi,0xc410814
   1400140d4:	test   DWORD PTR [rcx-0x583d0a58],eax
   1400140da:	or     al,BYTE PTR [rcx]
   1400140dc:	cmp    al,BYTE PTR [rbx+0xa492810]
   1400140e2:	mov    r8b,0x69
   1400140e5:	repz lock loopne 0x1400140a8
   1400140e9:	clc    
   1400140ea:	mov    ecx,0xd67ceda7
   1400140ef:	mov    edi,0xf18eea7a
   1400140f4:	adc    esi,ebx
   1400140f6:	sub    esi,DWORD PTR [rdi+0x7c]
   1400140f9:	in     eax,0xf0
   1400140fb:	in     al,dx
   1400140fc:	mov    bh,0xee
   1400140fe:	jle    0x1400140b8
   140014100:	fstp   QWORD PTR [rbp-0x53]
   140014103:	lahf   
   140014104:	fucomi st,st(5)
   140014106:	je     0x140014187
   140014108:	cs jbe 0x1400140ad
   14001410b:	in     al,dx
   14001410c:	dec    ch
   14001410e:	mov    edi,0x2f70039e
   140014113:	add    BYTE PTR [rbx+0x38030e00],0x6
   14001411a:	(bad)  
   14001411b:	rcr    DWORD PTR [rax-0x11],0xa1
   14001411f:	mov    cl,0x77
   140014121:	std    
   140014122:	jp     0x1400140cb
   140014124:	cmp    al,0xff
   140014126:	out    dx,al
   140014127:	push   rdi
   140014128:	pop    rdi
   140014129:	jnp    0x140014164
   14001412b:	add    BYTE PTR [rcx+0x40],0x2e
   14001412f:	adc    esp,DWORD PTR [rax+0x33]
   140014132:	sub    BYTE PTR [rbx],0x0
   140014135:	cmp    al,0x15
   140014137:	shl    ch,0x44
   14001413a:	xor    al,0xdc
   14001413c:	push   0x57
   14001413e:	movabs eax,ds:0xff7d36c181a6d035
   140014147:	shr    DWORD PTR [rdi],cl
   140014149:	fcomi  st,st(4)
   14001414b:	mov    WORD PTR [rdi-0x112c8b44],ds
   140014151:	pop    rbp
   140014152:	pop    rbx
   140014153:	xchg   dl,bl
   140014155:	in     eax,dx
   140014156:	stos   BYTE PTR es:[rdi],al
   140014157:	(bad)  
   140014158:	test   al,0x99
   14001415a:	(bad)  
   14001415b:	push   0xffffffffb8af5f18
   140014160:	sar    esi,1
   140014162:	xchg   edx,eax
   140014163:	jmp    FWORD PTR [rbx-0x24]
   140014166:	add    edi,ebx
   140014168:	xchg   esp,eax
   140014169:	adc    DWORD PTR [rdi+rsi*8+0x36],0xad1fcca1
   140014171:	(bad)  
   140014172:	jnp    0x140014126
   140014174:	imul   edx,DWORD PTR [rdi+0x1],0xffffffd3
   140014178:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140014179:	fiadd  WORD PTR [rsi+0x50]
   14001417c:	mov    ?,eax
   14001417e:	in     al,0x5
   140014180:	fs jb  0x1400141df
   140014183:	sahf   
   140014184:	sub    al,0x5c
   140014186:	addr32 test eax,0xed6d20df
   14001418c:	in     eax,0x26
   14001418e:	cmp    al,0x3
   140014190:	adc    cl,BYTE PTR [rbx]
   140014192:	(bad)  
   140014193:	(bad)  
   140014194:	(bad)  
   140014195:	je     0x1400141e3
   140014197:	sti    
   140014198:	or     eax,DWORD PTR [rcx+0x52]
   14001419b:	push   rdx
   14001419c:	movsxd r11d,r9d
   14001419f:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400141a0:	scas   al,BYTE PTR es:[rdi]
   1400141a1:	cmovno ebp,DWORD PTR [rdx+rax*2-0x7c]
   1400141a6:	sbb    esp,DWORD PTR [rax-0xe9dd128]
   1400141ac:	sar    BYTE PTR [rbp+0xc4e093],1
   1400141b2:	outs   dx,BYTE PTR ds:[rsi]
   1400141b3:	cwde   
   1400141b4:	cmp    dh,BYTE PTR [rax-0xb]
   1400141b7:	jns    0x1400141c2
   1400141b9:	sti    
   1400141ba:	lods   eax,DWORD PTR ds:[rsi]
   1400141bb:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400141bc:	(bad)  
   1400141bd:	add    eax,eax
   1400141bf:	repnz push rcx
   1400141c1:	jb     0x140014150
   1400141c3:	pop    rsi
   1400141c4:	xor    BYTE PTR [rax+rbx*2+0x3],bh
   1400141c8:	cli    
   1400141c9:	stc    
   1400141ca:	mov    dh,0x4
   1400141cc:	jne    0x1400141d3
   1400141ce:	je     0x14001416c
   1400141d0:	int3   
   1400141d1:	std    
   1400141d2:	rex
   1400141d3:	rex.WRXB ins BYTE PTR es:[rdi],dx
   1400141d5:	ret    
   1400141d6:	xlat   BYTE PTR ds:[rbx]
   1400141d7:	int    0x12
   1400141d9:	adc    BYTE PTR [rax],bh
   1400141db:	(bad)  
   1400141dc:	rex.WXB (bad) 
   1400141de:	stos   BYTE PTR es:[rdi],al
   1400141df:	sub    BYTE PTR [rdi*4-0x637f3cb6],dh
   1400141e6:	cmp    esp,esi
   1400141e8:	or     ebx,esi
   1400141ea:	addr32 (bad) 
   1400141ec:	xor    edi,esi
   1400141ee:	adc    DWORD PTR gs:[rcx+0x59],ebx
   1400141f2:	(bad)  
   1400141f3:	pop    rsi
   1400141f4:	(bad)  
   1400141f5:	fimul  DWORD PTR ds:[rbx+0x440dc113]
   1400141fc:	js     0x1400141ec
   1400141fe:	int3   
   1400141ff:	clc    
   140014200:	in     al,dx
   140014201:	(bad)  
   140014202:	movd   mm3,DWORD PTR [rsi-0x32293f63]
   140014209:	fcmovnb st,st(1)
   14001420b:	rex.WRB pop r11
   14001420d:	jo     0x1400141ae
   14001420f:	cmp    eax,0x739b4814
   140014214:	xchg   edx,eax
   140014215:	(bad)  
   140014216:	add    DWORD PTR [rdx+rbx*2-0x5a],0x5d882440
   14001421e:	and    BYTE PTR [rdx+rax*2],cl
   140014221:	lods   eax,DWORD PTR ds:[rsi]
   140014222:	add    esi,DWORD PTR [rbx-0xafe6a27]
   140014228:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140014229:	or     ebp,ecx
   14001422b:	in     eax,dx
   14001422c:	adc    eax,ebp
   14001422e:	popf   
   14001422f:	mov    edx,DWORD PTR [rcx+0x67da5a10]
   140014235:	xor    BYTE PTR [rcx-0x7e7b3c6f],bh
   14001423b:	movabs al,ds:0x69e6608002b1b293
   140014244:	sub    BYTE PTR [rsi],ah
   140014246:	mov    ebp,0x67fe0719
   14001424b:	cmps   BYTE PTR ss:[rsi],BYTE PTR es:[rdi]
   14001424d:	pushf  
   14001424e:	mov    ebx,0xf9030183
   140014253:	(bad)  
   140014254:	nop
   140014255:	retf   
   140014256:	adc    ax,WORD PTR [rsi]
   140014259:	push   0xffffffffbcf280b0
   14001425e:	add    al,0x67
   140014260:	mov    WORD PTR [rsi],es
   140014262:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140014263:	or     BYTE PTR [rbx+riz*2-0x181e6931],r14b
   14001426b:	(bad)  
   14001426c:	scas   eax,DWORD PTR es:[rdi]
   14001426d:	(bad)  
   14001426e:	xor    bh,ah
   140014270:	jae    0x140014231
   140014272:	clc    
   140014273:	or     al,0x59
   140014275:	pop    rdx
   140014276:	(bad)  
   140014277:	(bad)
   14001427b:	xchg   edi,eax
   14001427c:	out    dx,eax
   14001427d:	(bad)  
   14001427e:	cli    
   14001427f:	loope  0x14001423a
   140014281:	shl    DWORD PTR [rbx+0x53],1
   140014284:	add    esi,DWORD PTR [rcx-0x29dd00b2]
   14001428a:	icebp  
   14001428b:	pop    rcx
   14001428c:	sbb    al,0x13
   14001428e:	cwde   
   14001428f:	rex.RB
   140014290:	sbb    BYTE PTR [rbx+rdx*4],r11b
   140014294:	xor    BYTE PTR [rbx+0x6bcdfeec],cl
   14001429a:	jnp    0x140014270
   14001429c:	xor    BYTE PTR [rcx],dl
   14001429e:	push   rcx
   14001429f:	(bad)  
   1400142a0:	and    al,BYTE PTR [rdx+0x8]
   1400142a3:	adc    al,0xaa
   1400142a5:	sub    BYTE PTR [rdx-0x48952bf6],0x42
   1400142ac:	(bad)  
   1400142ad:	outs   dx,BYTE PTR ds:[rsi]
   1400142ae:	(bad)  
   1400142af:	out    dx,eax
   1400142b0:	and    eax,0xc1fbaf17
   1400142b5:	(bad)  
   1400142b6:	jge    0x1400142aa
   1400142b8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400142b9:	jge    0x140014252
   1400142bb:	ins    BYTE PTR es:[rdi],dx
   1400142bc:	pop    rbx
   1400142bd:	mov    bh,0x69
   1400142bf:	jrcxz  0x140014301
   1400142c1:	fwait
   1400142c2:	rex.X and BYTE PTR [rdi+0x6dfb1d2a],bl
   1400142c9:	mov    esi,0xec09427e
   1400142ce:	sar    DWORD PTR gs:[rdi+0x35a50210],cl
   1400142d5:	add    BYTE PTR [rdi],bh
   1400142d7:	rex.WRX (bad) 
   1400142d9:	in     eax,dx
   1400142da:	out    dx,al
   1400142db:	or     al,BYTE PTR [rbx+rdx*4-0x7e]
   1400142df:	add    ch,BYTE PTR [rax]
   1400142e1:	(bad)  
   1400142e2:	out    dx,eax
   1400142e3:	push   rcx
   1400142e4:	add    BYTE PTR [rbx-0x48bacb64],al
   1400142ea:	(bad)  
   1400142eb:	jle    0x1400142ed
   1400142ed:	and    dl,ah
   1400142ef:	xchg   esp,eax
   1400142f0:	mov    WORD PTR [rdi],fs
   1400142f2:	(bad)  
   1400142f3:	std    
   1400142f4:	(bad)  
   1400142f7:	shl    DWORD PTR ss:[rax-0x2],0x7f
   1400142fc:	ins    BYTE PTR es:[rdi],dx
   1400142fd:	adc    bh,BYTE PTR [rax+rbx*2+0x7642c0c]
   140014304:	adc    al,0xd
   140014306:	lock movsxd eax,DWORD PTR [rax+0xc]
   14001430a:	shl    al,0x88
   14001430d:	add    DWORD PTR [rdi-0x4c900ce8],0xb1cad3c8
   140014317:	(bad)  
   140014318:	addr32 out 0xc6,eax
   14001431b:	rex.RX (bad) 
   14001431d:	add    BYTE PTR [rcx],bl
   14001431f:	add    esi,eax
   140014321:	pop    rdi
   140014322:	(bad)  
   140014323:	shl    esp,0x3e
   140014326:	(bad)  
   140014327:	mov    ah,0xd6
   140014329:	add    ch,BYTE PTR [rax]
   14001432b:	pop    rdx
   14001432c:	jge    0x140014325
   14001432e:	cwde   
   14001432f:	cld    
   140014330:	pop    rsp
   140014331:	in     al,dx
   140014332:	jrcxz  0x140014396
   140014334:	(bad)  
   140014335:	mov    ecx,0x5681c075
   14001433a:	cs leave 
   14001433c:	push   rax
   14001433d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001433e:	retf   
   14001433f:	in     al,0x6
   140014341:	or     DWORD PTR [rcx],edx
   140014343:	(bad)  
   140014344:	and    BYTE PTR [rbp-0x1],0x1
   140014348:	cs div esp
   14001434b:	xor    al,0x3e
   14001434d:	rex.WRB movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   14001434f:	out    dx,al
   140014350:	(bad)  
   140014351:	(bad)  
   140014353:	jmp    0xfc7d22e7
   140014358:	push   0x55
   14001435a:	sbb    eax,0xdff30a3c
   14001435f:	imul   esp,esp,0xbde62fad
   140014365:	mov    edi,0x48fffef3
   14001436a:	rex.R out dx,eax
   14001436c:	(bad)  
   14001436d:	jnp    0x14001435f
   14001436f:	enter  0xbd89,0xcf
   140014373:	jl     0x14001436f
   140014375:	out    0x4e,al
   140014377:	stos   DWORD PTR es:[rdi],eax
   140014378:	sbb    dl,al
   14001437a:	fidiv  WORD PTR ss:[rsi-0x73]
   14001437e:	or     r10b,dl
   140014381:	cdq    
   140014382:	outs   dx,DWORD PTR ds:[rsi]
   140014383:	out    0xea,eax
   140014385:	xor    al,0x58
   140014387:	sahf   
   140014388:	adc    dl,BYTE PTR [rcx]
   14001438a:	rcr    BYTE PTR [rip+0xffffffff95050680],0x99        # 0xd5064a11
   140014391:	or     al,0x2
   140014393:	and    BYTE PTR [rip+0x920288d],al        # 0x149216c26
   140014399:	pop    rdx
   14001439a:	adc    eax,0x55e07e5
   14001439f:	add    BYTE PTR [rax+rcx*4+0x24],cl
   1400143a3:	or     BYTE PTR [rax],ah
   1400143a5:	(bad)  
   1400143a6:	push   0x40
   1400143a8:	sub    eax,0x83b47eea
   1400143ad:	or     bl,BYTE PTR [rax]
   1400143af:	mov    ch,0x39
   1400143b1:	or     ah,al
   1400143b3:	(bad)  
   1400143b4:	rex add eax,0x3fdf4f31
   1400143ba:	(bad)  
   1400143bb:	xchg   ebx,eax
   1400143bc:	(bad)  
   1400143bd:	vcvtsi2sd xmm8,xmm13,DWORD PTR [rax+r8*4+0x850b20a]
   1400143c7:	add    DWORD PTR [rdi],edx
   1400143c9:	and    BYTE PTR [rsi+rax*8-0x5f198fbb],al
   1400143d0:	data16 rex.W (bad) 
   1400143d3:	mov    bh,BYTE PTR [rcx]
   1400143d5:	rcr    BYTE PTR [rbx+0x5],1
   1400143d8:	pop    rdx
   1400143d9:	mov    edi,0xa9fb5d69
   1400143de:	push   rdi
   1400143df:	in     eax,dx
   1400143e0:	(bad)  
   1400143e2:	mov    ah,0xab
   1400143e4:	imul   BYTE PTR [rbp+0x16]
   1400143e7:	(bad)  
   1400143e8:	je     0x140014440
   1400143ea:	movsxd ebx,DWORD PTR [rax+rbx*2-0x16]
   1400143ee:	(bad)  
   1400143ef:	fldl2t 
   1400143f1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400143f2:	(bad)  
   1400143f3:	fmul   st(4),st
   1400143f5:	jb     0x1400143a3
   1400143f7:	jmp    0x1400143c1
   1400143f9:	push   rbx
   1400143fa:	(bad)  
   1400143fb:	out    0xba,al
   1400143fd:	movabs ds:0x80b005ceb1ab93a3,eax
   140014406:	xor    BYTE PTR [rsi-0x4fc72093],0x7b
   14001440d:	fcomip st,st(6)
   14001440f:	loope  0x1400143de
   140014411:	fcmovnbe st,st(6)
   140014413:	push   rdi
   140014414:	fwait
   140014415:	(bad)  
   140014416:	pop    rdx
   140014417:	(bad)  
   140014418:	mov    al,0x71
   14001441a:	ret    
   14001441b:	push   rax
   14001441c:	imul   eax,ebx,0xfffffff0
   14001441f:	(bad)  
   140014420:	imul   esp,DWORD PTR [rax-0x7a5b5523],0x22
   140014427:	jle    0x140014407
   140014429:	and    cl,bh
   14001442b:	cdq    
   14001442c:	jmp    0x11cd4041e
   140014431:	retf   
   140014432:	int3   
   140014433:	pop    rsi
   140014434:	or     al,BYTE PTR [rsp+rsi*8]
   140014437:	pop    rdx
   140014438:	add    al,0x4c
   14001443a:	cmp    al,BYTE PTR [rbx]
   14001443c:	fld    QWORD PTR [rdx]
   14001443e:	sub    BYTE PTR [rcx-0x63f5e8be],al
   140014444:	add    BYTE PTR [rcx],cl
   140014446:	or     eax,0x422c900e
   14001444b:	in     eax,dx
   14001444c:	rex.WR call 0x189dbadcb
   140014452:	retf   0x7534
   140014455:	add    dl,BYTE PTR [rax+0x6197e4ac]
   14001445b:	rex.WX sbb QWORD PTR [rbp+0x2f],rcx
   14001445f:	sbb    esi,esi
   140014461:	push   rsp
   140014462:	jo     0x140014411
   140014464:	(bad)  
   140014465:	loope  0x14001444f
   140014467:	sub    esp,esp
   140014469:	xchg   esi,eax
   14001446a:	sub    eax,0x49a315e8
   14001446f:	icebp  
   140014470:	sbb    DWORD PTR [rdx+rsi*2],0xbcab15f6
   140014477:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140014478:	sbb    BYTE PTR [rsi+0x41],ah
   14001447b:	sub    al,0x2e
   14001447d:	jbe    0x1400144a6
   14001447f:	mov    edi,0x3584f775
   140014484:	movabs ds:0x9ab3e5eae0753fd8,al
   14001448d:	call   0x148d7c721
   140014492:	add    dl,dh
   140014494:	(bad)  
   140014495:	mov    esi,0x2c7234c5
   14001449a:	shl    BYTE PTR [rcx+0x17],0xef
   14001449e:	cli    
   14001449f:	rex.WXB
   1400144a0:	rex.WB jne 0x1400144c1
   1400144a3:	sbb    BYTE PTR [rax+0x5ec2d540],ah
   1400144a9:	xor    al,0x35
   1400144ab:	(bad)  
   1400144ac:	(bad)  
   1400144ad:	je     0x140014470
   1400144af:	hlt    
   1400144b0:	lods   al,BYTE PTR ds:[rsi]
   1400144b1:	(bad)  
   1400144b2:	jg     0x1400144e0
   1400144b4:	mov    dh,0x9f
   1400144b6:	(bad)
   1400144b9:	add    esi,edx
   1400144bb:	pop    rsp
   1400144bc:	je     0x14001452f
   1400144be:	jns    0x1400144b0
   1400144c0:	add    DWORD PTR [rcx],edx
   1400144c2:	jmp    0x1347c7f37
   1400144c7:	dec    DWORD PTR [rsp+rsi*1-0xe]
   1400144cb:	(bad)  
   1400144cc:	xchg   edi,eax
   1400144cd:	sbb    al,0xda
   1400144cf:	sti    
   1400144d0:	cmp    ebp,edi
   1400144d2:	mov    edi,0xedafc096
   1400144d7:	mov    cs,WORD PTR [rsi+rbx*4-0x6d1347e8]
   1400144de:	out    dx,eax
   1400144df:	jmp    0x140014507
   1400144e1:	mov    dh,0xe
   1400144e3:	sar    BYTE PTR [rdx-0x3b],0x81
   1400144e7:	test   DWORD PTR [r8],r8d
   1400144ea:	xor    DWORD PTR [rax],edi
   1400144ec:	add    eax,0x1199ff3
   1400144f1:	rex.B sub eax,0x5d884083
   1400144f7:	xor    DWORD PTR [rcx+rax*4+0x839a916],0xe00e0462
   140014502:	mov    dl,BYTE PTR [rcx+0x15850358]
   140014508:	nop
   140014509:	sti    
   14001450a:	mov    esp,0x4100055
   14001450f:	jne    0x140014531
   140014511:	push   rsp
   140014512:	adc    BYTE PTR [rsp+rax*1-0x4d352df0],dh
   140014519:	(bad)  
   14001451a:	cdq    
   14001451b:	leave  
   14001451c:	outs   dx,DWORD PTR ds:[rsi]
   14001451d:	mov    bh,0x92
   14001451f:	fst    DWORD PTR [r15-0x57602089]
   140014526:	adc    DWORD PTR [rdx],eax
   140014528:	jbe    0x14001451d
   14001452a:	adc    esp,ebp
   14001452c:	test   eax,0xbf806924
   140014531:	(bad)  
   140014532:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140014533:	stos   DWORD PTR es:[rdi],eax
   140014534:	ja     0x14001455e
   140014536:	(bad)  
   140014537:	(bad)  
   140014538:	mov    eax,0x89e0ba1e
   14001453d:	(bad)  
   14001453e:	jg     0x140014566
   140014540:	and    BYTE PTR [r13-0x19822fe0],al
   140014547:	xchg   BYTE PTR [rdx+rax*8],al
   14001454a:	shl    BYTE PTR [rax-0x45],0xb5
   14001454e:	ins    DWORD PTR es:[rdi],dx
   14001454f:	mov    eax,0x7db6dadd
   140014554:	ret    
   140014555:	nop
   140014556:	rcr    DWORD PTR [rdi],0x79
   140014559:	rex.WB sbb r8b,spl
   14001455c:	push   rsp
   14001455d:	rex.WRXB ret 
   14001455f:	cdq    
   140014560:	xor    edi,DWORD PTR [rdi-0x7a]
   140014563:	(bad)
   140014566:	xchg   ecx,eax
   140014567:	cld    
   140014568:	sti    
   140014569:	fs int 0x98
   14001456c:	jb     0x1400145b1
   14001456e:	repnz xor cx,WORD PTR [rax]
   140014572:	add    al,0xf8
   140014574:	cmp    eax,0x56517206
   140014579:	sbb    DWORD PTR [rsi+rcx*8-0x58],ecx
   14001457d:	cmp    dh,BYTE PTR [rip+0xfffffffff7b5efcc]        # 0x137b7354f
   140014583:	fidivr WORD PTR [rbp+0x3406e617]
   140014589:	xchg   ebp,eax
   14001458a:	jns    0x140014554
   14001458c:	push   rbp
   14001458d:	jle    0x1400145fb
   14001458f:	leave  
   140014590:	add    bl,BYTE PTR [rsi+0x3802e590]
   140014596:	cmp    dh,bl
   140014598:	(bad)  
   140014599:	pop    rdi
   14001459a:	imul   ecx,DWORD PTR [rdx],0xe323f739
   1400145a0:	add    eax,esp
   1400145a2:	pushf  
   1400145a3:	rex.WR loopne 0x140014533
   1400145a6:	fsub   QWORD PTR gs:[rbx]
   1400145a9:	outs   dx,BYTE PTR ds:[rsi]
   1400145aa:	rex.WX xchg QWORD PTR [rbx+0x2ed1550a],rcx
   1400145b1:	mov    edi,0x39dc0f8b
   1400145b6:	test   eax,0x99ef01d2
   1400145bb:	cmp    dh,BYTE PTR [rax-0xb]
   1400145be:	lods   eax,DWORD PTR ds:[rsi]
   1400145bf:	js     0x1400145cd
   1400145c1:	imul   ebp,DWORD PTR [rbp+0x22],0x8818d550
   1400145c8:	outs   dx,BYTE PTR ds:[rsi]
   1400145c9:	mul    bh
   1400145cb:	pop    rsi
   1400145cc:	add    BYTE PTR [rsi+0x13dbd04d],bh
   1400145d2:	rex js 0x1400145b7
   1400145d5:	lock (bad) 
   1400145d7:	or     bl,ch
   1400145d9:	cmc    
   1400145da:	rex.W (bad) 
   1400145dc:	push   0xffffffffe33ad5f2
   1400145e1:	mov    ebx,0xc93c5fff
   1400145e6:	data16 test al,0xde
   1400145e9:	jne    0x1400145db
   1400145eb:	mov    cl,0x63
   1400145ed:	jl     0x140014646
   1400145ef:	push   0xffffffffd9a5d585
   1400145f4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400145f5:	mov    bl,0x8a
   1400145f7:	std    
   1400145f8:	(bad)  
   1400145f9:	add    bh,BYTE PTR [rdx+0x4e0e444e]
   1400145ff:	sahf   
   140014600:	cwde   
   140014601:	(bad)  
   140014602:	test   eax,0xbca667c7
   140014607:	neg    BYTE PTR [rdi]
   140014609:	or     al,0x10
   14001460b:	(bad)  
   14001460c:	(bad)  
   14001460d:	sbb    bl,bl
   14001460f:	outs   dx,DWORD PTR ds:[rsi]
   140014610:	adc    al,0x4b
   140014612:	(bad)  
   140014613:	repnz movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140014615:	movlhps xmm2,xmm6
   140014618:	mov    ecx,es
   14001461a:	sub    dh,dl
   14001461c:	pop    rdx
   14001461d:	lods   al,BYTE PTR ds:[rsi]
   14001461e:	jmp    0x19e53f4fa
   140014623:	mov    ah,0x60
   140014625:	add    al,0x9a
   140014627:	cmp    cl,BYTE PTR [rsi+rsi*8]
   14001462a:	and    al,0x10
   14001462c:	std    
   14001462d:	pop    rbx
   14001462e:	or     eax,0x2fbaa685
   140014633:	and    eax,0x300c79e8
   140014638:	test   bh,al
   14001463a:	xchg   ebp,ebp
   14001463c:	push   rsi
   14001463d:	call   0x1661fdd0f
   140014642:	lock xor BYTE PTR [rcx-0x7d],ah
   140014646:	outs   dx,BYTE PTR ds:[rsi]
   140014647:	(bad)  [rsi+0x48071cd0]
   14001464d:	data16 js 0x1400145df
   140014650:	imul   edi,ebx,0xffffffed
   140014653:	outs   dx,DWORD PTR cs:[rsi]
   140014655:	std    
   140014656:	jmp    0x18f3c1cb9
   14001465b:	ret    
   14001465c:	pop    rsi
   14001465d:	test   BYTE PTR [rdx+0x20],0x44
   140014661:	push   0x30e6bbed
   140014666:	nop
   140014667:	scas   eax,DWORD PTR es:[rdi]
   140014668:	out    0xa8,al
   14001466a:	mov    ch,0x12
   14001466c:	(bad)
   14001466f:	push   0xffffffffcb80cbf3
   140014674:	jl     0x140014634
   140014676:	rex.WX (bad) 
   140014678:	rex.RB iret 
   14001467a:	not    DWORD PTR [rsi]
   14001467c:	adc    cl,cl
   14001467e:	scas   eax,DWORD PTR es:[rdi]
   14001467f:	(bad)  
   140014680:	mov    edi,0xdfcbbafc
   140014685:	call   0xe5a75a49
   14001468a:	rex.RB
   14001468b:	rex.XB test BYTE PTR [r8],dl
   14001468e:	rex.RXB out dx,al
   140014690:	fwait
   140014691:	jrcxz  0x14001462c
   140014693:	(bad)  
   140014694:	stc    
   140014695:	rcr    DWORD PTR [rax],1
   140014697:	movabs ds:0xed115fb4e461467e,al
   1400146a0:	call   0x17924c490
   1400146a5:	pop    rcx
   1400146a6:	sahf   
   1400146a7:	mov    esi,0x7ce27033
   1400146ac:	mov    ebp,0x29664dc2
   1400146b1:	lods   al,BYTE PTR ds:[rsi]
   1400146b2:	icebp  
   1400146b3:	or     al,0xd7
   1400146b5:	xchg   esi,eax
   1400146b6:	rex.WR
   1400146b7:	fisubr WORD PTR es:[rsi+riz*1+0x35]
   1400146bc:	ins    DWORD PTR es:[rdi],dx
   1400146bd:	mov    esi,0x5a2a11a5
   1400146c2:	sub    esp,DWORD PTR [rax+0x501a8455]
   1400146c8:	(bad)  
   1400146c9:	sbb    esi,DWORD PTR [rsi]
   1400146cb:	test   eax,0x13f3935d
   1400146d1:	movsxd ecx,DWORD PTR [rbx-0xff9e380]
   1400146d7:	out    0x8f,eax
   1400146d9:	jp     0x140014681
   1400146db:	lahf   
   1400146dc:	and    eax,0x640011ad
   1400146e1:	push   rsi
   1400146e2:	out    0xda,eax
   1400146e4:	lods   al,BYTE PTR ds:[rsi]
   1400146e5:	mov    edi,0x68a0469e
   1400146ea:	mov    dh,0x69
   1400146ec:	pop    rdx
   1400146ed:	xor    BYTE PTR [rdi],ch
   1400146ef:	lea    ebx,[rdi-0x6a]
   1400146f2:	gs add al,0xc3
   1400146f5:	(bad)
   1400146f8:	push   rdx
   1400146f9:	and    eax,0x729012ee
   1400146fe:	or     ebx,DWORD PTR [rcx-0x51809ef0]
   140014704:	add    dl,r10b
   140014707:	int    0x9f
   140014709:	ds jle 0x140014773
   14001470c:	stos   DWORD PTR es:[rdi],eax
   14001470d:	stos   BYTE PTR es:[rdi],al
   14001470e:	push   0x3f
   140014710:	repnz pop rsp
   140014712:	ror    eax,1
   140014714:	pop    rbx
   140014715:	pop    rdi
   140014716:	push   rdx
   140014717:	add    edi,eax
   140014719:	(bad)  
   14001471a:	and    dl,BYTE PTR [rdx+0x3a3a1fc6]
   140014720:	sbb    BYTE PTR ss:[rbx+0x47],dl
   140014724:	adc    eax,0x7a6f9581
   140014729:	sbb    dh,BYTE PTR [rax-0x71eed1b8]
   14001472f:	es or  al,0xca
   140014732:	or     al,BYTE PTR [rcx-0x28]
   140014735:	rex.XB
   140014736:	rex.WRB outs dx,BYTE PTR ds:[rsi]
   140014738:	repnz xchg ebp,eax
   14001473a:	adc    bl,dh
   14001473c:	cli    
   14001473d:	mov    edx,0xe4aeea6b
   140014742:	sub    dh,BYTE PTR [rax+0x32018594]
   140014748:	(bad)  
   140014749:	in     al,0x75
   14001474b:	jmp    0x140014786
   14001474d:	(bad)  
   14001474e:	add    al,0x64
   140014750:	and    DWORD PTR [rax],eax
   140014752:	and    bh,ah
   140014754:	mov    ch,BYTE PTR [rbx+0x7168d889]
   14001475a:	adc    al,0xc7
   14001475c:	stc    
   14001475d:	fild   QWORD PTR [rsi]
   14001475f:	add    al,0x1a
   140014761:	stc    
   140014762:	pop    rdx
   140014763:	adc    al,0x93
   140014765:	fdiv   DWORD PTR [rsi]
   140014767:	xlat   BYTE PTR ds:[rbx]
   140014768:	mov    esi,0xdaed2fa5
   14001476d:	int    0x3f
   14001476f:	sti    
   140014770:	mov    dh,0x92
   140014772:	lea    edx,fs:[rax-0x30]
   140014776:	icebp  
   140014777:	je     0x140014703
   140014779:	movabs al,ds:0x3b1739ad79ef6670
   140014782:	js     0x1400147da
   140014784:	sahf   
   140014785:	(bad)  
   140014786:	fild   WORD PTR [rbx]
   140014788:	in     al,0xa9
   14001478a:	shl    DWORD PTR [rbx],cl
   14001478c:	shr    BYTE PTR [rsp+rbx*4-0xb],0xd1
   140014791:	call   0x1af42ae4f
   140014796:	(bad)  
   140014797:	rex.WRXB
   140014798:	fidiv  WORD PTR cs:[rcx+0x1]
   14001479c:	and    DWORD PTR [rdx],ebp
   14001479e:	rcr    BYTE PTR [rsp+rsi*4],0x3
   1400147a2:	lods   al,BYTE PTR ds:[rsi]
   1400147a3:	and    eax,0xa2898d9c
   1400147a8:	pop    rdi
   1400147a9:	adc    bl,ch
   1400147ab:	in     al,dx
   1400147ac:	mov    bh,0xbb
   1400147ae:	and    al,dl
   1400147b0:	jmp    0x1969a897f
   1400147b5:	in     eax,0x39
   1400147b7:	imul   edi,DWORD PTR [rdi+0x7e],0x71
   1400147bb:	data16 mov dh,0x57
   1400147be:	sub    eax,0x32e6d240
   1400147c3:	(bad)  
   1400147c4:	jbe    0x140014794
   1400147c6:	(bad)  
   1400147c7:	adc    dl,BYTE PTR [rsp+rbx*2-0x5c665186]
   1400147ce:	data16 (bad) 
   1400147d0:	mov    bl,0xd6
   1400147d2:	cwde   
   1400147d3:	js     0x1400147c4
   1400147d5:	leave  
   1400147d6:	(bad)  
   1400147d7:	clc    
   1400147d8:	enter  0xecd2,0xc3
   1400147dc:	bswap  ebp
   1400147de:	rex jnp 0x14001483e
   1400147e1:	mov    esp,0xd5c0ea61
   1400147e6:	out    0xa4,eax
   1400147e8:	iret   
   1400147e9:	(bad)  
   1400147eb:	rcr    BYTE PTR [rdx+0xb],1
   1400147ee:	or     BYTE PTR [rdx],0x2d
   1400147f1:	pop    rdi
   1400147f2:	mov    esi,0xbf32a703
   1400147f7:	fsub   DWORD PTR [rdi-0x5e]
   1400147fa:	mov    eax,0x89b66978
   1400147ff:	cld    
   140014800:	sar    DWORD PTR [rbx-0x28],1
   140014803:	(bad)  
   140014804:	cdq    
   140014805:	push   rdi
   140014806:	stos   BYTE PTR es:[rdi],al
   140014807:	push   rdx
   140014808:	rcr    DWORD PTR [rsp+rbx*2],cl
   14001480b:	jae    0x140014791
   14001480d:	(bad)  
   14001480e:	stos   BYTE PTR es:[rdi],al
   14001480f:	add    eax,0x1bae3a82
   140014814:	mov    ecx,0x33d3ebe3
   140014819:	ret    0xe2e8
   14001481c:	sbb    al,0xb
   14001481e:	add    BYTE PTR [rax],al
   140014820:	sbb    BYTE PTR [rcx-0x15],bh
   140014823:	rex.WXB out dx,al
   140014825:	(bad)  
   140014826:	lock (bad) 
   140014828:	loop   0x1400147be
   14001482a:	data16 out dx,al
   14001482c:	(bad)  
   14001482d:	je     0x1400147e3
   14001482f:	or     eax,0x7abe8e4a
   140014834:	mov    ebx,0x60cf3726
   140014839:	fidivr DWORD PTR [rcx]
   14001483b:	imul   esi,DWORD PTR [rbx+0x46],0x2e
   14001483f:	and    al,0x42
   140014841:	xlat   BYTE PTR ds:[rbx]
   140014842:	and    al,0xb9
   140014844:	stc    
   140014845:	mov    cl,bl
   140014847:	sbb    dh,BYTE PTR [rax+0x4f35e473]
   14001484d:	(bad)  
   14001484e:	sub    eax,0x300ce409
   140014853:	pop    rdi
   140014854:	mov    eax,eax
   140014856:	cdq    
   140014857:	fstp   st(3)
   140014859:	push   rdi
   14001485a:	(bad)
   14001485d:	int3   
   14001485e:	fld    QWORD PTR [rcx-0x665bd784]
   140014864:	hlt    
   140014865:	ss xchg ecx,eax
   140014867:	popf   
   140014868:	jno    0x14001489c
   14001486a:	and    ecx,DWORD PTR [rbx]
   14001486c:	jb     0x1400148a2
   14001486e:	pop    r12
   140014870:	jo     0x140014812
   140014872:	adc    BYTE PTR [rsp+riz*8],dl
   140014875:	pop    rdx
   140014876:	stos   DWORD PTR es:[rdi],eax
   140014877:	xor    DWORD PTR [rcx+0x208d4cf5],edx
   14001487d:	sub    BYTE PTR [rsi],bl
   14001487f:	jb     0x140014850
   140014881:	mov    dh,0xb5
   140014883:	push   rsi
   140014884:	rex.X and al,0x68
   140014887:	es sbb al,0xd1
   14001488a:	imul   eax,edi,0x9ed8d5ac
   140014890:	xchg   DWORD PTR gs:[rdx-0x61],esi
   140014894:	xor    al,0xd7
   140014896:	push   rbx
   140014897:	outs   dx,BYTE PTR ds:[rsi]
   140014898:	rex.XB jno 0x1400148a7
   14001489b:	movabs al,ds:0x57b06d4404b1e0c
   1400148a4:	jns    0x1400148a4
   1400148a6:	(bad)  
   1400148a7:	mov    bh,0xac
   1400148a9:	in     al,dx
   1400148aa:	out    dx,eax
   1400148ab:	fs (bad) 
   1400148ad:	out    0x46,al
   1400148af:	sbb    edx,DWORD PTR [rax+0x1aa8355c]
   1400148b5:	pop    rdi
   1400148b6:	lahf   
   1400148b7:	push   rcx
   1400148b8:	je     0x140014925
   1400148ba:	cmp    al,0x15
   1400148bd:	pop    rsp
   1400148be:	(bad)  
   1400148bf:	xor    DWORD PTR [rax+rcx*8-0x15],edx
   1400148c3:	jrcxz  0x140014918
   1400148c5:	xchg   BYTE PTR [rsi+0x2ff75a09],cl
   1400148cb:	add    dl,BYTE PTR [rcx-0x69d7085c]
   1400148d1:	(bad)  
   1400148d2:	(bad)  
   1400148d3:	xchg   esi,eax
   1400148d4:	(bad)  
   1400148d5:	ror    BYTE PTR [rax],1
   1400148d7:	mov    ebx,0xb801fdc
   1400148dc:	push   rax
   1400148dd:	shl    bh,1
   1400148df:	fdiv   DWORD PTR [rdx+0x27]
   1400148e2:	rex.WRX fdivrp st(3),st
   1400148e5:	int    0x93
   1400148e7:	ss icebp 
   1400148e9:	(bad)  
   1400148ea:	ins    BYTE PTR es:[rdi],dx
   1400148eb:	(bad)  
   1400148ec:	rcl    ch,0xe7
   1400148ef:	mov    ah,0xd1
   1400148f1:	(bad)  
   1400148f2:	and    esp,DWORD PTR [rbp+0x3e58002c]
   1400148f8:	adc    esi,edx
   1400148fa:	cwde   
   1400148fb:	jmp    FWORD PTR [rbx-0x22]
   1400148fe:	sbb    eax,0x408dc807
   140014903:	pop    rbp
   140014904:	jnp    0x140014939
   140014906:	mov    al,0xba
   140014908:	iret   
   140014909:	add    al,al
   14001490b:	movabs ds:0x5b4b2812e7607e0,al
   140014914:	stos   BYTE PTR es:[rdi],al
   140014915:	cmp    al,0x3f
   140014917:	(bad)  
   140014918:	ins    DWORD PTR es:[rdi],dx
   140014919:	push   rsi
   14001491a:	movabs ds:0x298ea810bba1a5e5,eax
   140014923:	mov    BYTE PTR [rdi-0x66],0xfb
   140014927:	jg     0x1400148df
   140014929:	xor    al,0xf2
   14001492b:	(bad)  
   14001492c:	xchg   edi,eax
   14001492d:	cld    
   14001492e:	or     eax,0x2caecf80
   140014933:	cs (bad) 
   140014935:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140014936:	xchg   ecx,eax
   140014937:	xchg   ecx,eax
   140014938:	xchg   ebx,eax
   140014939:	sub    eax,0xe6e25997
   14001493e:	pop    rsi
   14001493f:	ret    
   140014940:	pushf  
   140014941:	cs add al,0xd8
   140014944:	adc    ah,bl
   140014946:	fcomp  QWORD PTR [rsi-0x74]
   140014949:	movabs eax,ds:0xe2cd20210a0b8ecb
   140014952:	and    dl,BYTE PTR [rax-0x1a13cc1a]
   140014958:	loope  0x14001497c
   14001495a:	and    BYTE PTR [rdi-0x7c],ah
   14001495d:	shl    DWORD PTR [rbp+0x24c24d91],0xbe
   140014964:	xor    BYTE PTR [rbp+0x49dcaa6a],al
   14001496a:	rex.W (bad) 
   14001496c:	leave  
   14001496d:	lods   eax,DWORD PTR ds:[rsi]
   14001496e:	fimul  DWORD PTR [rcx]
   140014970:	int    0x3e
   140014972:	addr32 push 0x1480171f
   140014978:	pop    rsp
   140014979:	shl    BYTE PTR [rsi+0xd113],1
   14001497f:	and    BYTE PTR [rax],al
   140014981:	rex.WB
   140014982:	rex.R
   140014983:	push   r12
   140014985:	js     0x1400149bf
   140014987:	(bad)  
   140014988:	fnsave [rax]
   14001498a:	shr    QWORD PTR [rsp+riz*4-0x29],cl
   14001498f:	pop    rsp
   140014990:	ds adc esi,ebx
   140014993:	mov    edx,0x3e6b4dd6
   140014998:	jmp    0x1400149a3
   14001499a:	jp     0x140014963
   14001499c:	cmp    ebx,DWORD PTR [rbp-0x195be7aa]
   1400149a2:	sti    
   1400149a3:	and    BYTE PTR [rdi+0x3e],ah
   1400149a6:	cs adc eax,0x10097d3e
   1400149ac:	jp     0x14001498c
   1400149ae:	mov    esi,0x68d0335f
   1400149b3:	call   rdx
   1400149b5:	(bad)  
   1400149b6:	jo     0x1400149e3
   1400149b8:	rex.X out dx,eax
   1400149ba:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400149bb:	pop    rbx
   1400149bc:	rex.WXB jp 0x140014a1e
   1400149bf:	mov    ebp,0xbfcebfde
   1400149c4:	(bad)  
   1400149c5:	lods   eax,DWORD PTR ds:[rsi]
   1400149c6:	xor    al,0x69
   1400149c8:	cwde   
   1400149c9:	rcl    DWORD PTR [rdi-0x3d15751a],cl
   1400149cf:	jp     0x140014a0e
   1400149d1:	or     BYTE PTR [rdi+rbx*4-0x2],ch
   1400149d5:	(bad)  
   1400149d6:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400149d7:	div    DWORD PTR [rbp+rax*8-0x26]
   1400149db:	retf   0x73f9
   1400149de:	mov    ch,0x39
   1400149e0:	adc    bl,BYTE PTR [rcx+0x20]
   1400149e3:	xchg   esi,eax
   1400149e4:	pop    rdx
   1400149e5:	cwde   
   1400149e6:	jl     0x140014a36
   1400149e8:	mov    BYTE PTR [rdi],bh
   1400149ea:	rex.WXB movabs r13,0x993f6f7bd9966208
   1400149f4:	cmp    ch,BYTE PTR [rbx-0x61e03fcb]
   1400149fa:	cmp    dh,BYTE PTR [rax-0x66dc3f01]
   140014a00:	mov    edi,0xb0a83e7
   140014a05:	and    BYTE PTR [rdi-0x6685f90a],dh
   140014a0b:	fild   WORD PTR [rdi]
   140014a0d:	pushf  
   140014a0e:	xor    BYTE PTR [r8-0x78],al
   140014a12:	push   rsi
   140014a13:	neg    dl
   140014a15:	jrcxz  0x1400149eb
   140014a17:	mov    ecx,0xca023d80
   140014a1d:	(bad)  
   140014a1e:	push   rbx
   140014a1f:	iret   
   140014a20:	cs call 0x1615c5e83
   140014a26:	jno    0x140014a38
   140014a28:	lea    ecx,[rbp+0x55157dd3]
   140014a2e:	jne    0x1400149db
   140014a30:	(bad)  
   140014a31:	cmp    dl,bh
   140014a33:	(bad)  
   140014a34:	call   FWORD PTR [rdx-0x6]
   140014a37:	jo     0x17e39e959
   140014a3d:	ds xchg ebp,eax
   140014a3f:	es (bad) 
   140014a41:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140014a42:	rol    BYTE PTR [rbp-0x5e],0x87
   140014a46:	stc    
   140014a47:	sub    BYTE PTR [rsi],0xa5
   140014a4a:	ffree  st(4)
   140014a4c:	rex.RXB in al,0x6c
   140014a4f:	mul    BYTE PTR [rdi]
   140014a51:	div    ebp
   140014a53:	mov    edx,0x62c7008a
   140014a58:	lahf   
   140014a59:	(bad)
   140014a5e:	xor    eax,0x790121da
   140014a63:	mov    edi,?
   140014a65:	(bad)  
   140014a66:	ja     0x140014aa1
   140014a68:	jmp    0x18a848587
   140014a6d:	leave  
   140014a6e:	mov    ch,0xa0
   140014a70:	jle    0x140014a09
   140014a72:	(bad)  
   140014a73:	xor    al,0x73
   140014a75:	sub    eax,0x421706fc
   140014a7a:	rcr    BYTE PTR [rcx],0xa3
   140014a7d:	hlt    
   140014a7e:	movabs eax,ds:0x8d2d4d6e6ab46853
   140014a87:	test   bh,0x7e
   140014a8a:	mov    dl,0x34
   140014a8c:	jrcxz  0x140014a58
   140014a8e:	std    
   140014a8f:	out    dx,al
   140014a90:	xlat   BYTE PTR ds:[rbx]
   140014a91:	sti    
   140014a92:	fistp  QWORD PTR [rip+0x2610a2c7]        # 0x16611ed5f
   140014a98:	push   0x45380ac
   140014a9d:	add    al,0x90
   140014a9f:	lods   eax,DWORD PTR ds:[rsi]
   140014aa0:	movabs eax,ds:0x3712ae7bd04582b5
   140014aa9:	sub    bl,al
   140014aab:	jp     0x140014b19
   140014aad:	xlat   BYTE PTR ds:[rbx]
   140014aae:	(bad)  
   140014aaf:	add    dl,al
   140014ab1:	cs (bad) 
   140014ab3:	addr32 (bad) 
   140014ab5:	xchg   esi,eax
   140014ab6:	sbb    bl,bh
   140014ab8:	or     al,0xb7
   140014aba:	sub    al,0x14
   140014abc:	add    DWORD PTR [rbp-0x7a],edi
   140014abf:	in     eax,0x75
   140014ac1:	rex.R call FWORD PTR [rip+0x2dd6cf6]        # 0x142deb7be
   140014ac8:	(bad)  
   140014ac9:	nop
   140014aca:	(bad)  
   140014acb:	(bad)  
   140014acc:	out    0x3d,al
   140014ace:	jmp    0x12c570290
   140014ad3:	mov    esp,0x80313bbc
   140014ad8:	scas   al,BYTE PTR es:[rdi]
   140014ad9:	sub    DWORD PTR [rax-0x305fd864],eax
   140014adf:	pop    rsp
   140014ae0:	or     dh,BYTE PTR [rdi+0x66660b30]
   140014ae6:	sub    eax,0xd0eb75f7
   140014aeb:	jle    0x140014ad1
   140014aed:	cld    
   140014aee:	jge    0x140014acf
   140014af0:	pushf  
   140014af1:	pop    rax
   140014af2:	pushf  
   140014af3:	cmp    BYTE PTR [rcx+0x3f004],bh
   140014af9:	(bad)  
   140014afa:	hlt    
   140014afb:	sbb    al,0xcc
   140014afd:	jmp    0x1a2d7e3f1
   140014b02:	add    dh,bh
   140014b04:	pop    rsi
   140014b05:	xor    bh,BYTE PTR [rax-0x57]
   140014b08:	icebp  
   140014b09:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140014b0a:	xor    bh,bh
   140014b0c:	std    
   140014b0d:	pop    rbp
   140014b0e:	test   al,0xb5
   140014b10:	mov    edx,0x6a609f4d
   140014b15:	pop    rdx
   140014b16:	popf   
   140014b17:	(bad)  
   140014b18:	in     al,dx
   140014b19:	adc    BYTE PTR [rax+riz*4],dh
   140014b1c:	xor    esp,eax
   140014b1e:	enter  0xaba0,0x21
   140014b22:	cmp    eax,0xee4440a3
   140014b27:	mov    esi,0x8181fe77
   140014b2c:	jne    0x140014b83
   140014b2e:	out    0x91,eax
   140014b30:	(bad)  
   140014b31:	(bad)  
   140014b32:	(bad)  
   140014b33:	sbb    bl,BYTE PTR [rdx]
   140014b35:	mov    ecx,0x73a5e6
   140014b3a:	jle    0x140014b5b
   140014b3c:	and    ch,BYTE PTR [rbx-0x39b978ed]
   140014b42:	(bad)  
   140014b43:	mov    edx,0x57d82af5
   140014b48:	pop    rdi
   140014b49:	imul   esi,DWORD PTR [rax-0x80],0x4af01306
   140014b50:	cs xor eax,0x3556c10b
   140014b56:	push   0x36b13d0f
   140014b5b:	adc    cl,BYTE PTR [rbp-0x2f]
   140014b5e:	pop    rdx
   140014b5f:	mov    WORD PTR [rbx-0x69db1bc2],?
   140014b65:	(bad)  
   140014b66:	sahf   
   140014b67:	je     0x140014bc5
   140014b69:	jmp    0x148218761
   140014b6e:	mov    eax,0x372670d0
   140014b73:	(bad)  
   140014b74:	(bad)  
   140014b75:	sbb    ch,BYTE PTR [rdx+rax*1]
   140014b78:	rex.W out dx,al
   140014b7a:	xchg   edx,ebx
   140014b7c:	mov    esi,0xe60a042c
   140014b81:	(bad)  
   140014b82:	cmps   DWORD PTR es:[rsi],DWORD PTR es:[rdi]
   140014b84:	fist   WORD PTR [rdx+0x29]
   140014b87:	add    BYTE PTR [rax],bh
   140014b89:	sbb    ebx,DWORD PTR [rbx+rcx*2+0x1f30d18a]
   140014b90:	ins    BYTE PTR es:[rdi],dx
   140014b91:	in     al,dx
   140014b92:	pop    rdx
   140014b93:	xor    bh,cl
   140014b95:	cmp    DWORD PTR [rbx],esi
   140014b97:	pop    rbx
   140014b98:	(bad)  
   140014b99:	(bad)
   140014b9c:	mov    al,0xbd
   140014b9e:	fs out 0xb4,al
   140014ba1:	out    0x3b,al
   140014ba3:	jo     0x140014b3f
   140014ba5:	jrcxz  0x140014ba4
   140014ba7:	mov    bl,0x63
   140014ba9:	(bad)  
   140014baa:	or     eax,0x8d072273
   140014baf:	rex.WRX adc QWORD PTR [rsi],r11
   140014bb2:	lods   al,BYTE PTR ds:[rsi]
   140014bb3:	cs cmp eax,0xab6427f7
   140014bba:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140014bbb:	(bad)  
   140014bbc:	test   DWORD PTR [rax],0x23d4d3d2
   140014bc2:	or     DWORD PTR [rdx],ebx
   140014bc4:	pushf  
   140014bc5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140014bc6:	not    BYTE PTR [rbp+0x3b3b54a1]
   140014bcc:	shl    bh,0xae
   140014bcf:	rex.WX
   140014bd0:	rex.WX retf 0x91fc
   140014bd4:	(bad)  
   140014bd5:	mov    r14b,r12b
   140014bd8:	cli    
   140014bd9:	test   eax,0x1ef51871
   140014bde:	add    r15d,r10d
   140014be1:	adc    ecx,ebx
   140014be3:	cmp    eax,0x41486c74
   140014be8:	lahf   
   140014be9:	or     al,0x6
   140014beb:	imul   esp,DWORD PTR [rdi-0x5d7f3697],0xffffff88
   140014bf2:	(bad)  
   140014bf3:	out    dx,al
   140014bf4:	sar    DWORD PTR [rbx+0x67],0xe6
   140014bf8:	mov    ?,WORD PTR [rsi]
   140014bfa:	cmp    al,0x7
   140014bfc:	rex.WB push r11
   140014bfe:	adc    BYTE PTR [rsi+rbp*2-0x38013f16],bh
   140014c05:	sub    al,0xe4
   140014c07:	ja     0x140014c43
   140014c09:	sub    ch,BYTE PTR [rip+0xffffffffd9cb0f00]        # 0x119cc5b0f
   140014c0f:	jae    0x140014bdc
   140014c11:	in     eax,dx
   140014c12:	mov    esi,0x80f05381
   140014c17:	xchg   cl,bh
   140014c19:	add    DWORD PTR [rax],esi
   140014c1b:	movabs eax,ds:0x721aaa2b4db21173
   140014c24:	and    al,0x0
   140014c26:	add    BYTE PTR [rax+0x2a8f2eb1],ah
   140014c2c:	(bad)  
   140014c2d:	(bad)  
   140014c2e:	adc    eax,0x8242c0a
   140014c33:	retf   
   140014c34:	lahf   
   140014c35:	mov    ebx,0xd5b46c79
   140014c3a:	scas   al,BYTE PTR es:[rdi]
   140014c3b:	(bad)  
   140014c3d:	cmp    al,0xaf
   140014c3f:	xor    al,0x72
   140014c41:	int    0x4b
   140014c43:	out    dx,eax
   140014c44:	add    esi,eax
   140014c46:	call   QWORD PTR [rcx-0x10476590]
   140014c4c:	loopne 0x140014bdf
   140014c4e:	ss nop
   140014c50:	(bad)  
   140014c51:	adc    ch,BYTE PTR [rsi]
   140014c53:	(bad)  
   140014c54:	jo     0x140014c8e
   140014c56:	imul   eax,esi,0xffffffbc
   140014c59:	push   rsi
   140014c5a:	add    BYTE PTR [rbx],cl
   140014c5c:	(bad)  
   140014c5d:	add    al,0x60
   140014c5f:	jne    0x140014c3f
   140014c61:	xchg   edx,eax
   140014c62:	sbb    BYTE PTR [rax+0x921371b],ch
   140014c68:	and    eax,DWORD PTR [rbp+0x7]
   140014c6b:	xchg   esi,eax
   140014c6c:	cmp    al,0xd4
   140014c6e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140014c6f:	adc    DWORD PTR [rdx],eax
   140014c71:	and    al,0x9f
   140014c73:	adc    al,0xc8
   140014c75:	(bad)  
   140014c76:	movabs ds:0x342c7c26c13f0b16,al
   140014c7f:	mov    dl,0x4d
   140014c81:	loopne 0x140014c8b
   140014c83:	rex.WRB sub al,0xa9
   140014c86:	sbb    DWORD PTR [rax+0x2883dd59],ebp
   140014c8c:	fisubr DWORD PTR [rbx-0xb654ac0]
   140014c92:	xor    BYTE PTR [rax+0x46ec2633],cl
   140014c98:	(bad)  
   140014c99:	fs and eax,0x18a9a4b4
   140014c9f:	adc    DWORD PTR [rsi],ebp
   140014ca1:	pop    rax
   140014ca2:	jp     0x140014cd9
   140014ca4:	jge    0x140014cbc
   140014ca6:	or     BYTE PTR [rax-0x3d],bl
   140014ca9:	(bad)  
   140014cab:	xor    BYTE PTR [rbp+0x2f],ch
   140014cae:	int3   
   140014caf:	outs   dx,DWORD PTR ds:[rsi]
   140014cb0:	rex.X retf 
   140014cb2:	(bad)  
   140014cb3:	neg    BYTE PTR [rax+0x9]
   140014cb6:	test   eax,0xe794b7f7
   140014cbb:	pop    rsi
   140014cbc:	sti    
   140014cbd:	repnz test al,0xc2
   140014cc0:	sub    esi,ebp
   140014cc2:	mov    BYTE PTR [rdi+0x13],cl
   140014cc5:	jmp    FWORD PTR [rbp-0x74]
   140014cc8:	(bad)  
   140014cca:	iret   
   140014ccb:	jg     0x140014d00
   140014ccd:	scas   eax,DWORD PTR es:[rdi]
   140014cce:	cmp    DWORD PTR [rsi],edx
   140014cd0:	push   rax
   140014cd1:	or     ecx,ebx
   140014cd3:	jmp    0x140014ccf
   140014cd5:	retf   
   140014cd6:	test   DWORD PTR [rsi],edi
   140014cd8:	cmp    BYTE PTR [rcx],cl
   140014cda:	push   rax
   140014cdb:	rex.WXB out dx,al
   140014cdd:	mov    ebx,0x3268590
   140014ce2:	(bad)  
   140014ce3:	push   rbp
   140014ce4:	cmp    edx,DWORD PTR [rdx]
   140014ce6:	add    eax,0x94437ad1
   140014ceb:	retf   
   140014cec:	(bad)  
   140014ced:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140014cee:	sub    BYTE PTR [rax+0x52ea444e],dl
   140014cf4:	ror    DWORD PTR [rbp+0x1a],cl
   140014cf7:	rex mov ?,ebx
   140014cfa:	xchg   edi,eax
   140014cfb:	cmp    BYTE PTR [rcx],dl
   140014cfd:	(bad)  
   140014cfe:	push   rsi
   140014cff:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140014d00:	mov    ebx,0xba4cae96
   140014d05:	push   rbx
   140014d06:	movsxd ebp,DWORD PTR [rbx]
   140014d08:	repz xchg esi,ebp
   140014d0b:	lahf   
   140014d0c:	test   BYTE PTR [rdx+rbx*1-0x22b3c87e],ah
   140014d13:	mov    ah,0xff
   140014d15:	call   0xcfcceabd
   140014d1a:	xchg   esi,eax
   140014d1b:	(bad)  
   140014d1c:	(bad)  
   140014d1d:	xor    BYTE PTR [rdx-0x16],0x90
   140014d21:	jb     0x140014d3c
   140014d23:	mov    al,0xfc
   140014d25:	cmp    DWORD PTR [rdi-0x69],ebp
   140014d28:	test   DWORD PTR [rcx-0x3c45eb8b],ecx
   140014d2e:	rex.RB xchg r10d,eax
   140014d30:	(bad)  
   140014d31:	sahf   
   140014d32:	xchg   DWORD PTR [rbx+0x3e],edi
   140014d35:	adc    eax,0xc0a5a4ef
   140014d3a:	(bad)  
   140014d3b:	test   eax,0xc6200012
   140014d40:	or     DWORD PTR [rcx+0x4114e595],0x6ffd3dd4
   140014d4a:	cmp    bh,dh
   140014d4c:	xor    al,0x72
   140014d4e:	int    0x4b
   140014d50:	outs   dx,DWORD PTR ds:[rsi]
   140014d51:	add    ah,ah
   140014d53:	movabs ds:0x42323e1eacedd3b1,eax
   140014d5c:	or     al,0x71
   140014d5e:	fistp  WORD PTR [rip+0x12f00502]        # 0x152f15266
   140014d64:	out    0x89,eax
   140014d66:	loopne 0x140014d4e
   140014d68:	sbb    eax,0x9b5c9958
   140014d6d:	test   BYTE PTR [rax],cl
   140014d6f:	cwde   
   140014d70:	pop    rcx
   140014d71:	push   rdi
   140014d72:	sbb    ah,BYTE PTR [rdx+0x4f]
   140014d75:	add    cl,dl
   140014d77:	xor    BYTE PTR [rax-0xc],dl
   140014d7a:	xchg   edi,ebp
   140014d7c:	and    r10d,DWORD PTR [r8]
   140014d7f:	pop    rbp
   140014d80:	rex.RXB (bad) 
   140014d82:	pushf  
   140014d83:	(bad)  
   140014d84:	call   0x15355b5c7
   140014d89:	sar    DWORD PTR [rbx],cl
   140014d8b:	or     al,0x89
   140014d8d:	movabs eax,ds:0xb4deb5d8e6965955
   140014d96:	fadd   QWORD PTR [rdi+0xe]
   140014d99:	xchg   edx,eax
   140014d9a:	lods   eax,DWORD PTR ds:[rsi]
   140014d9b:	xchg   BYTE PTR [rax+0x13],ch
   140014d9e:	(bad)  
   140014d9f:	ret    0x304
   140014da2:	and    esi,DWORD PTR [rbx]
   140014da4:	mov    ebx,0xfcf93619
   140014da9:	(bad)  
   140014daa:	mov    edi,0x47e7ac8e
   140014daf:	and    ecx,DWORD PTR [rip+0x1775ade3]        # 0x15776fb98
   140014db5:	pushf  
   140014db6:	jb     0x140014dec
   140014db8:	adc    BYTE PTR [rax+0x1338e5bb],0xbb
   140014dbf:	mov    ecx,0xb4bdcfee
   140014dc4:	or     ah,bh
   140014dc6:	push   rbp
   140014dc7:	sahf   
   140014dc8:	stos   DWORD PTR es:[rdi],eax
   140014dc9:	adc    al,0x2
   140014dcb:	outs   dx,BYTE PTR ds:[rsi]
   140014dcc:	repnz rex.WXB xor QWORD PTR [r14-0xce6efb9],rbp
   140014dd4:	mov    ebx,0x51411390
   140014dd9:	movabs eax,ds:0xc62e1276d5270c87
   140014de2:	rex.XB sub al,0xc1
   140014de5:	(bad)  
   140014de6:	test   BYTE PTR [rsi+0xb],0xbc
   140014dea:	scas   eax,DWORD PTR es:[rdi]
   140014deb:	add    DWORD PTR [rax],0x1a
   140014dee:	fimul  WORD PTR [rcx+rcx*2-0x3425bf05]
   140014df5:	rex.XB (bad) 
   140014df7:	retf   0x29cc
   140014dfa:	mov    bh,0xfc
   140014dfc:	outs   dx,BYTE PTR ds:[rsi]
   140014dfd:	sub    al,0xb
   140014dff:	or     ebp,ebp
   140014e01:	jns    0x140014e64
   140014e03:	(bad)
   140014e07:	xchg   edx,eax
   140014e08:	cmp    DWORD PTR [rip+0x71031fc0],edx        # 0x1b1046dce
   140014e0e:	outs   dx,BYTE PTR ds:[rsi]
   140014e0f:	mov    esi,0xdbd5fe3b
   140014e14:	mov    ds,ebx
   140014e16:	rex.X cmp dil,dil
   140014e19:	imul   ebp,edx,0x698ffda6
   140014e1f:	mov    esp,0x26544cff
   140014e24:	add    ch,BYTE PTR [rbp-0x34ee03b7]
   140014e2a:	mov    bl,0x92
   140014e2c:	push   rax
   140014e2d:	and    al,0xff
   140014e2f:	fsubr  DWORD PTR [rip+0xffffffff9c43dbcb]        # 0xdc452a00
   140014e35:	cmp    al,0xba
   140014e37:	movsxd esp,DWORD PTR [rax+0x8a2baca]
   140014e3d:	out    dx,al
   140014e3e:	fcmovnu st,st(4)
   140014e40:	adc    dl,bh
   140014e42:	cmc    
   140014e43:	and    bh,BYTE PTR [rcx+0x73]
   140014e46:	add    BYTE PTR [rcx-0x271d279a],ah
   140014e4c:	(bad)  
   140014e4d:	in     eax,dx
   140014e4e:	(bad)  
   140014e4f:	(bad)  
   140014e50:	lods   eax,DWORD PTR ds:[rsi]
   140014e51:	pop    rdx
   140014e52:	push   rbp
   140014e53:	int    0x29
   140014e55:	icebp  
   140014e56:	stc    
   140014e57:	add    al,BYTE PTR [rax]
   140014e59:	iret   
   140014e5a:	rex dec DWORD PTR [rcx]
   140014e5d:	nop
   140014e5e:	rex.WXB
   140014e5f:	data16 (bad) 
   140014e61:	addr32 jle 0x140014e4c
   140014e64:	loop   0x140014de7
   140014e66:	push   rsi
   140014e67:	or     edi,ebx
   140014e69:	imul   dh
   140014e6b:	(bad)  
   140014e6c:	mov    dh,0xd0
   140014e6e:	rex.RX
   140014e6f:	gs pop rbp
   140014e71:	pop    rdx
   140014e72:	movabs al,ds:0xc71a0890aca84129
   140014e7b:	rex.WRB leave 
   140014e7d:	retf   0x5b70
   140014e80:	retf   0x150c
   140014e83:	sub    ecx,DWORD PTR [rbx+0xc2942a]
   140014e89:	add    ah,BYTE PTR [rdx+0x10]
   140014e8c:	mov    ah,0x10
   140014e8e:	xor    al,0xc9
   140014e90:	sub    BYTE PTR [rcx],dh
   140014e92:	or     BYTE PTR [rcx],al
   140014e94:	xchg   r15,rax
   140014e96:	ds rex.B adc eax,0x56ec1208
   140014e9d:	jnp    0x140014eb0
   140014e9f:	rex.WX
   140014ea0:	rex.RB (bad) 
   140014ea2:	adc    dh,BYTE PTR [rax+rbx*4+0x2512c410]
   140014ea9:	sub    edi,DWORD PTR [rbp-0x3beb655b]
   140014eaf:	adc    BYTE PTR [rcx],ah
   140014eb1:	jo     0x140014e83
   140014eb3:	pop    rbx
   140014eb4:	push   rsp
   140014eb5:	pop    rcx
   140014eb6:	(bad)  
   140014eb7:	sbb    DWORD PTR [rdi-0x38],ecx
   140014eba:	(bad)  
   140014ebb:	adc    al,al
   140014ebd:	push   0x16
   140014ebf:	stos   BYTE PTR es:[rdi],al
   140014ec0:	in     al,0xf2
   140014ec2:	(bad)  
   140014ec3:	mov    ecx,0x559958b4
   140014ec8:	mov    bl,0xd
   140014eca:	or     DWORD PTR [rax],0x3c
   140014ecd:	cmp    bl,ah
   140014ecf:	pop    rdx
   140014ed0:	rcr    BYTE PTR [rcx],0xd4
   140014ed3:	or     ecx,DWORD PTR [rax-0xbd7b980]
   140014ed9:	rex.W ja 0x140014f46
   140014edc:	jl     0x140014e99
   140014ede:	xchg   edx,eax
   140014edf:	ins    BYTE PTR es:[rdi],dx
   140014ee0:	ins    DWORD PTR es:[rdi],dx
   140014ee1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140014ee2:	push   rbx
   140014ee3:	mov    dh,0x17
   140014ee5:	mov    bl,0x1
   140014ee7:	sub    BYTE PTR [rsi+0x152809ab],cl
   140014eed:	cmp    DWORD PTR [r14-0x65cb6383],r9d
   140014ef4:	pop    rdi
   140014ef5:	mov    eax,0x78010a00
   140014efa:	mov    ah,0x43
   140014efc:	fmul   DWORD PTR [rsp+rdi*2-0x65]
   140014f00:	popf   
   140014f01:	shl    DWORD PTR [rsi+0x6e],1
   140014f04:	rex.WX fdivrp st(6),st
   140014f07:	mov    ebp,0xf3021411
   140014f0c:	shr    DWORD PTR [rip+0xffffffffa4602844],1        # 0xe4617756
   140014f12:	cmp    ah,BYTE PTR [rbp+0x17]
   140014f15:	nop
   140014f16:	(bad)
   140014f19:	adc    DWORD PTR [rax],edx
   140014f1b:	repz fistp QWORD PTR [rcx+0xa020a43]
   140014f22:	xor    al,0x17
   140014f24:	rex (bad) 
   140014f26:	xor    WORD PTR [rdx-0x2f],sp
   140014f2a:	add    dh,BYTE PTR [rdx-0x467dbf96]
   140014f30:	add    cl,dh
   140014f32:	cld    
   140014f33:	and    ah,al
   140014f35:	in     eax,0xd5
   140014f37:	cmp    cl,dh
   140014f39:	mov    ch,0x2f
   140014f3b:	sbb    al,0x7
   140014f3d:	rex.RXB xchg r8b,r9b
   140014f40:	mov    ebx,0x7fda6ea6
   140014f45:	rex.WRX (bad) 
   140014f47:	idiv   BYTE PTR [rdi+rdx*1]
   140014f4a:	push   rsp
   140014f4b:	mov    edx,0x59b20000
   140014f50:	pop    rdi
   140014f51:	cmp    al,0xf2
   140014f53:	sahf   
   140014f54:	clc    
   140014f55:	jg     0x140014f10
   140014f57:	pop    rbp
   140014f58:	fnstsw WORD PTR [rbp+0x72ba2b4]
   140014f5e:	jno    0x140014fa6
   140014f60:	test   BYTE PTR [rsi+rbp*2-0x54],bh
   140014f64:	leave  
   140014f65:	stc    
   140014f66:	(bad)  
   140014f67:	xor    bh,BYTE PTR [rsi-0x6b97a681]
   140014f6d:	rex (bad) 
   140014f6f:	push   rsi
   140014f70:	push   rbx
   140014f71:	push   rsp
   140014f72:	sub    DWORD PTR [rcx+0x263e3909],0xcbcd7234
   140014f7c:	xchg   esi,eax
   140014f7d:	and    eax,edi
   140014f7f:	pop    rbp
   140014f80:	rex mov cs,WORD PTR [rbp+rcx*4+0x4c]
   140014f85:	rex.WR ror BYTE PTR [rcx+0x70a1e393],cl
   140014f8c:	sub    dh,BYTE PTR [rbx-0x3bd21911]
   140014f92:	cmp    eax,0xbb35902a
   140014f97:	push   0x70
   140014f99:	sub    eax,0xdedf750b
   140014f9e:	sub    bh,BYTE PTR [rbx-0x25d404d4]
   140014fa4:	ds xor eax,0xf7b9d5fd
   140014faa:	(bad)  
   140014fab:	mov    al,0x9e
   140014fad:	push   rsi
   140014fae:	(bad)  
   140014faf:	ins    BYTE PTR es:[rdi],dx
   140014fb0:	out    0x3a,al
   140014fb2:	sub    bl,BYTE PTR [rbp+0x17]
   140014fb5:	loopne 0x140014f4c
   140014fb7:	xlat   BYTE PTR ds:[rbx]
   140014fb8:	push   rbp
   140014fb9:	gs mov edi,0xce868d17
   140014fbf:	sub    ecx,DWORD PTR [rip+0x21747117]        # 0x16175c0dc
   140014fc5:	xchg   BYTE PTR [rax],dl
   140014fc7:	and    edx,DWORD PTR [rcx-0x20416e7e]
   140014fcd:	(bad)  
   140014fce:	push   0xffffffffd49dfc92
   140014fd3:	pop    rax
   140014fd4:	add    eax,0x28dcf924
   140014fd9:	(bad)  
   140014fda:	pop    rdi
   140014fdb:	push   0x69
   140014fdd:	ss push rdi
   140014fdf:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140014fe0:	in     al,dx
   140014fe1:	xchg   ebx,eax
   140014fe2:	xchg   edi,eax
   140014fe3:	xor    eax,0x72af173b
   140014fe8:	cmp    ebx,DWORD PTR [rdx]
   140014fea:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140014feb:	cs xor eax,0xd7404d7c
   140014ff1:	ret    0x3d74
   140014ff4:	outs   dx,BYTE PTR ds:[rsi]
   140014ff5:	rex.X xor DWORD PTR [rsi],ecx
   140014ff8:	xor    BYTE PTR [rbx],dh
   140014ffa:	ficomp WORD PTR [rsi]
   140014ffc:	rex.RXB mov WORD PTR [r10-0x27],gs
   140015000:	call   0xc61f4b1d
   140015005:	adc    esp,DWORD PTR [rax+rax*1-0x11902c91]
   14001500c:	(bad)  
   14001500d:	xor    DWORD PTR [rcx],esi
   14001500f:	hlt    
   140015010:	jnp    0x140014fa4
   140015012:	xchg   DWORD PTR [rbp+0x61],esp
   140015015:	iret   
   140015016:	rex.WXB
   140015017:	rex.WR cdqe 
   140015019:	and    BYTE PTR [rcx+0x1f],bl
   14001501c:	rex.W (bad) 
   14001501e:	pop    rbp
   14001501f:	and    eax,0x4926eb97
   140015024:	(bad)  
   140015025:	es jo  0x14001502f
   140015028:	xchg   bl,bl
   14001502a:	js     0x140015030
   14001502c:	rcr    BYTE PTR [rsi-0x7fe194d1],0x27
   140015033:	or     ch,al
   140015035:	push   rsp
   140015036:	or     BYTE PTR [rdi],cl
   140015038:	jae    0x140015049
   14001503a:	sbb    BYTE PTR [r8+rdi*4-0x541d8ee],r15b
   140015042:	mov    ecx,0xb97571e3
   140015047:	xchg   al,cl
   140015049:	rex.RXB cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001504b:	outs   dx,BYTE PTR ds:[rsi]
   14001504c:	(bad)  
   14001504e:	cwde   
   14001504f:	(bad)  
   140015050:	sti    
   140015051:	jl     0x14001508e
   140015053:	sub    bl,BYTE PTR [rbp+0x0]
   140015056:	pop    rdx
   140015057:	ret    
   140015058:	cld    
   140015059:	mov    dl,0x46
   14001505b:	sub    BYTE PTR [rax],dh
   14001505d:	(bad)
   140015061:	mov    cl,0xb3
   140015063:	add    DWORD PTR [rax*2+0x18ec06aa],ebp
   14001506a:	add    BYTE PTR [rbp+0x6ad9bf88],bh
   140015070:	sbb    DWORD PTR [rdi],ecx
   140015072:	push   rsp
   140015073:	mov    eax,DWORD PTR [rcx-0x7c]
   140015076:	xchg   edi,eax
   140015077:	xchg   edi,eax
   140015078:	fninit 
   14001507a:	and    DWORD PTR [rax+0x5a],edx
   14001507d:	pop    rcx
   14001507e:	stos   BYTE PTR es:[rdi],al
   14001507f:	iret   
   140015080:	jnp    0x14001507b
   140015082:	jrcxz  0x1400150de
   140015084:	sbb    bh,BYTE PTR [rcx-0x25]
   140015087:	retf   
   140015088:	data16 add ah,bh
   14001508b:	cmp    ecx,DWORD PTR [rax+0x191e4f4c]
   140015091:	sbb    edx,DWORD PTR [rdi+0x409313f1]
   140015097:	jrcxz  0x14001508c
   140015099:	jnp    0x140015119
   14001509b:	sbb    BYTE PTR [rbx-0x4b2df689],0x11
   1400150a2:	rex.WXB out dx,al
   1400150a4:	add    ch,BYTE PTR [rax+0x7a474010]
   1400150aa:	repnz (bad) 
   1400150ac:	jb     0x140015075
   1400150ae:	(bad)  
   1400150af:	or     ecx,DWORD PTR [rdi]
   1400150b1:	and    eax,0xb6d040a8
   1400150b6:	shr    BYTE PTR [rax+rdi*4+0x1],cl
   1400150ba:	je     0x140015068
   1400150bc:	and    edx,ecx
   1400150be:	(bad)  
   1400150bf:	mov    al,0xf6
   1400150c1:	jge    0x14001508c
   1400150c3:	xor    al,0x57
   1400150c5:	fnstcw WORD PTR [rdx+0x2a]
   1400150c8:	fwait
   1400150c9:	enter  0x6052,0x0
   1400150cd:	(bad)  
   1400150ce:	jne    0x1400150ce
   1400150d0:	adc    al,0xdc
   1400150d2:	rex iret 
   1400150d4:	sbb    BYTE PTR [rdx*1-0x2f35b87e],al
   1400150db:	adc    al,0x65
   1400150dd:	(bad)  
   1400150de:	nop
   1400150df:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400150e0:	(bad)  
   1400150e1:	jb     0x140015140
   1400150e3:	push   rsi
   1400150e4:	mov    ebx,0xc033e997
   1400150e9:	xchg   DWORD PTR [rsi-0x3a],ebx
   1400150ec:	(bad)  
   1400150ed:	sbb    DWORD PTR [rsi-0x7de66a84],edi
   1400150f3:	pop    rcx
   1400150f4:	jo     0x140015097
   1400150f6:	(bad)  
   1400150f7:	rex
   1400150f8:	addr32 hlt 
   1400150fa:	mov    WORD PTR [rbx],es
   1400150fc:	fsub   DWORD PTR [rdi+0x5e]
   1400150ff:	xor    esi,DWORD PTR [rsi]
   140015101:	fldcw  WORD PTR [rax+rdx*1-0x5136142f]
   140015108:	xchg   ecx,eax
   140015109:	in     eax,0x9
   14001510b:	mov    al,0x33
   14001510d:	mov    edi,0xcf5118c0
   140015112:	xchg   ebp,eax
   140015113:	pop    rbp
   140015114:	add    bh,BYTE PTR [rax+0x2c]
   140015117:	lahf   
   140015118:	jb     0x14001512d
   14001511a:	fsub   DWORD PTR [rcx+rcx*1]
   14001511d:	test   al,0x81
   14001511f:	(bad)  
   140015120:	lods   al,BYTE PTR ds:[rsi]
   140015121:	sub    eax,0xfd8b6abc
   140015126:	rex.RXB jae 0x140015102
   140015129:	cwde   
   14001512a:	nop
   14001512b:	push   0xffffffffffffffce
   14001512d:	rex.WXB (bad) 
   14001512f:	mov    bl,0x15
   140015131:	mov    bh,0xa6
   140015133:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140015134:	iret   
   140015135:	(bad)  
   140015136:	sbb    eax,0x4c361d3
   14001513b:	add    BYTE PTR [rsi],r14b
   14001513e:	xchg   edi,eax
   14001513f:	shl    DWORD PTR [rbx-0x1da86900],1
   140015145:	in     al,0xd7
   140015147:	ds (bad) 
   140015149:	push   rdx
   14001514a:	(bad)  
   14001514b:	iret   
   14001514c:	ja     0x14001516e
   14001514e:	repnz sub DWORD PTR [rax],eax
   140015151:	sti    
   140015152:	iret   
   140015153:	stc    
   140015154:	add    al,0x7e
   140015156:	xchg   esp,eax
   140015157:	je     0x140015193
   140015159:	or     eax,eax
   14001515b:	(bad)  
   14001515d:	or     al,BYTE PTR [rbx]
   14001515f:	cmp    ebp,ebx
   140015161:	cmp    esp,DWORD PTR [rcx]
   140015163:	outs   dx,BYTE PTR ds:[rsi]
   140015164:	rex.X jle 0x14001514d
   140015167:	movabs ds:0xdc8e9d1c6b619fda,al
   140015170:	adc    eax,0x100b9900
   140015175:	xchg   esi,eax
   140015176:	mov    edx,0xabb5533c
   14001517b:	adc    al,0xc2
   14001517d:	movsxd ebp,DWORD PTR [rbx+0x1]
   140015180:	cmp    BYTE PTR [rbp-0x389a1244],cl
   140015186:	add    BYTE PTR [rsi+rax*1+0x479373c2],bh
   14001518d:	rex.RX
   14001518e:	rex.WRXB movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140015190:	icebp  
   140015191:	leave  
   140015192:	cdq    
   140015193:	pushf  
   140015194:	sbb    al,0x94
   140015196:	add    eax,0x4f7a4a81
   14001519b:	std    
   14001519c:	rex.WRB (bad) 
   14001519e:	and    esi,esi
   1400151a0:	xor    al,0x50
   1400151a2:	sbb    al,bh
   1400151a4:	(bad)  
   1400151a5:	pop    rbp
   1400151a6:	test   DWORD PTR [rip+0x88f38ed],0x98602b30        # 0x148908a9d
   1400151b0:	cmp    BYTE PTR [rdx],0x87
   1400151b3:	cwde   
   1400151b4:	sbb    BYTE PTR [rcx+0x59dfeb59],cl
   1400151ba:	nop
   1400151bb:	adc    ah,BYTE PTR [rdi-0x3a]
   1400151be:	repnz push 0xffffffffb704ff83
   1400151c4:	movabs ds:0xc1c04262336ef58d,al
   1400151ce:	lods   eax,DWORD PTR ds:[rsi]
   1400151cf:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400151d0:	jrcxz  0x14001515e
   1400151d2:	mov    edi,0x8d001f2c
   1400151d7:	out    0xd6,al
   1400151d9:	(bad)  
   1400151da:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400151db:	push   rcx
   1400151dc:	mov    ah,BYTE PTR [rdi+rbp*1+0x65]
   1400151e0:	hlt    
   1400151e1:	(bad)  
   1400151e2:	sbb    ah,cl
   1400151e4:	or     al,0x6b
   1400151e6:	cwde   
   1400151e7:	rex.X leave 
   1400151e9:	hlt    
   1400151ea:	cmp    eax,0xabc505b9
   1400151ef:	mov    eax,0xba3cb95d
   1400151f4:	(bad)  
   1400151f5:	adc    ebx,DWORD PTR [rax-0x7c5e304c]
   1400151fb:	je     0x140015216
   1400151fd:	fwait
   1400151fe:	loopne 0x1400151e6
   140015200:	outs   dx,DWORD PTR ds:[rsi]
   140015201:	(bad)  
   140015202:	fldenv [rdi+0x41]
   140015205:	movsxd esi,DWORD PTR [rbp+0x52d7964]
   14001520b:	push   rcx
   14001520c:	sbb    DWORD PTR [rcx+0x53],ebx
   14001520f:	jno    0x14001519e
   140015211:	fs rex.X
   140015213:	ss xor eax,0xfb27aa80
   140015219:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001521a:	fs jle 0x1400151d7
   14001521d:	mov    ecx,0x5a56ec4b
   140015222:	add    al,0x22
   140015224:	imul   eax,DWORD PTR [rbx-0x5636fb72],0xffffffd9
   14001522b:	(bad)  
   14001522c:	neg    DWORD PTR [rdx-0x46]
   14001522f:	xchg   esi,eax
   140015230:	stc    
   140015231:	neg    DWORD PTR [edx+0x9bfb5c5]
   140015238:	test   eax,ebp
   14001523a:	fcom   DWORD PTR [rax-0x18840219]
   140015240:	push   0x57570f03
   140015245:	loop   0x14001520b
   140015247:	push   rdi
   140015248:	outs   dx,DWORD PTR ds:[rsi]
   140015249:	cmp    esi,ebx
   14001524b:	pop    rbp
   14001524c:	(bad)  
   14001524d:	pop    rdi
   14001524e:	add    eax,0xbc0067cb
   140015253:	(bad)  
   140015254:	(bad)  
   140015255:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140015256:	std    
   140015257:	out    0xbd,eax
   140015259:	loope  0x140015225
   14001525b:	fst    DWORD PTR [rdx+0x69]
   14001525e:	add    DWORD PTR [rbp+rdx*8-0x310ca704],ebp
   140015265:	call   0xf6c171c3
   14001526a:	jae    0x140015286
   14001526c:	test   BYTE PTR [rax-0x7d],bh
   14001526f:	comiss xmm1,DWORD PTR [rdx+0x15]
   140015273:	(bad)  
   140015274:	enter  0x9a9f,0x1e
   140015278:	adc    BYTE PTR [rdx+0x33659041],dh
   14001527e:	add    BYTE PTR [rsi-0x68],bl
   140015281:	rex.WRXB jae 0x140015225
   140015284:	and    bl,BYTE PTR [rsi-0x49]
   140015287:	imul   esi,DWORD PTR [rax+0x2c788cc7],0x2f6de469
   140015291:	mov    ebx,0xf7f805f
   140015296:	loope  0x14001526d
   140015298:	jmp    0x11a491a60
   14001529d:	sub    ebx,DWORD PTR [rbp+0x35bf1ce5]
   1400152a3:	lock rex.WRXB test QWORD PTR [r8+0x32],r8
   1400152a8:	adc    BYTE PTR [rax+0x43],0x74
   1400152ac:	and    eax,0xe3b9458
   1400152b1:	fwait
   1400152b2:	data16 xchg r9,rax
   1400152b5:	fwait
   1400152b6:	not    BYTE PTR [rcx-0x2f]
   1400152b9:	adc    eax,DWORD PTR [rdi-0x31c27f3c]
   1400152bf:	sub    eax,0x44c0bda4
   1400152c4:	sub    DWORD PTR [rdx-0x32],0xac9b0c8c
   1400152cb:	sahf   
   1400152cc:	or     bl,ah
   1400152ce:	xor    eax,0xd3bc51eb
   1400152d3:	mov    WORD PTR [rcx],?
   1400152d5:	rex.W
   1400152d6:	repnz push rax
   1400152d8:	push   rsi
   1400152d9:	add    DWORD PTR [rsi],ebx
   1400152db:	cli    
   1400152dc:	or     esp,DWORD PTR [rbp-0x56720b7]
   1400152e2:	sbb    esp,esp
   1400152e4:	retf   
   1400152e5:	lahf   
   1400152e6:	cmp    eax,0xa6cca5dc
   1400152eb:	rex.WB
   1400152ec:	rex.WB
   1400152ed:	rex.WRB js 0x1400152be
   1400152f0:	push   rdi
   1400152f1:	js     0x1400152de
   1400152f3:	(bad)  
   1400152f4:	repnz ins BYTE PTR es:[rdi],dx
   1400152f6:	movabs eax,ds:0x606addcdabd24bb8
   1400152ff:	cmp    ecx,DWORD PTR [rdi+0x6d]
   140015302:	rex.WRXB test QWORD PTR [r8+r8*8-0x60],0xffffffffd9244e7f
   14001530b:	xor    eax,0x88e5172a
   140015310:	mov    al,0x56
   140015312:	loopne 0x14001538a
   140015314:	repnz in al,dx
   140015316:	ret    0x5f44
   140015319:	push   rax
   14001531a:	add    eax,DWORD PTR [rbp+0x5e]
   14001531d:	and    ch,0x51
   140015320:	cwde   
   140015321:	out    0x46,al
   140015323:	jle    0x14001537b
   140015325:	sub    cl,ch
   140015327:	push   rdx
   140015328:	rex.WX mov cl,cl
   14001532b:	out    dx,al
   14001532c:	test   eax,0xed367d69
   140015331:	out    dx,al
   140015332:	jle    0x1400152f1
   140015334:	not    BYTE PTR ss:[rax+rdx*1-0x50]
   140015339:	pop    rsp
   14001533a:	pop    rsp
   14001533b:	push   rsi
   14001533c:	movabs ds:0x805f3983b8d8c73d,al
   140015345:	add    eax,0xc712b2bc
   14001534a:	outs   dx,DWORD PTR ds:[rsi]
   14001534b:	sti    
   14001534c:	cld    
   14001534d:	icebp  
   14001534e:	jp     0x1400153b9
   140015350:	mov    esi,0x14f9603
   140015355:	js     0x140015354
   140015357:	test   eax,ecx
   140015359:	cld    
   14001535a:	rex scas eax,DWORD PTR es:[rdi]
   14001535c:	add    eax,0x4ce37360
   140015361:	test   eax,0x260a7c0
   140015366:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140015367:	lock div DWORD PTR [rdi]
   14001536a:	xor    DWORD PTR [rdi+rbx*8+0x36],edi
   14001536e:	adc    BYTE PTR [rcx+0x7170c62e],ah
   140015374:	movabs ds:0xf5cd75570684c10,al
   14001537d:	(bad)  
   14001537e:	scas   eax,DWORD PTR es:[rdi]
   14001537f:	jrcxz  0x14001534e
   140015381:	cmp    esi,DWORD PTR [rdi-0x7fe9d1c4]
   140015387:	shr    eax,cl
   140015389:	fistp  DWORD PTR [rsi-0x2]
   14001538c:	adc    eax,0xc24a7f00
   140015391:	imul   ebp,esp,0x1e1d6fce
   140015397:	pop    rax
   140015398:	in     eax,dx
   140015399:	scas   al,BYTE PTR es:[rdi]
   14001539a:	in     al,0x7c
   14001539c:	add    BYTE PTR [rbx+0x6b],dl
   14001539f:	cs add al,0xd8
   1400153a2:	mov    ah,0xbe
   1400153a4:	(bad)  
   1400153a5:	sti    
   1400153a6:	push   0xffffffffaefec014
   1400153ab:	frndint 
   1400153ad:	ret    
   1400153ae:	(bad)  
   1400153af:	sbb    dh,al
   1400153b1:	mov    dh,0xe4
   1400153b3:	sub    DWORD PTR [rdx],esi
   1400153b5:	movabs ds:0xfd1c8639c4c7c328,al
   1400153be:	sbb    al,0xac
   1400153c0:	rex.X and BYTE PTR [rdx-0x70dcc7cf],sil
   1400153c7:	ja     0x140015368
   1400153c9:	push   rdi
   1400153ca:	(bad)  
   1400153cb:	mov    ecx,0x157376e8
   1400153d0:	jl     0x1400153ef
   1400153d2:	xchg   esi,eax
   1400153d3:	in     al,0xb5
   1400153d5:	or     al,0xa7
   1400153d7:	movsxd edx,DWORD PTR [rax+0x51]
   1400153da:	jae    0x1400153b2
   1400153dc:	pop    rbx
   1400153dd:	xor    eax,0x32504bb8
   1400153e2:	outs   dx,DWORD PTR ds:[rsi]
   1400153e3:	or     DWORD PTR [rax-0x63d9135b],ebx
   1400153e9:	retf   0xe5d0
   1400153ec:	ret    
   1400153ed:	mul    DWORD PTR [rbx+0x4b]
   1400153f0:	movabs eax,ds:0x964c58ec2680e3e3
   1400153f9:	rex.RX call 0x10f0e6e3f
   1400153ff:	div    BYTE PTR [rdi+0x6a]
   140015402:	ret    0x897b
   140015405:	mov    ebx,edi
   140015407:	out    0x33,al
   140015409:	int    0x7f
   14001540b:	fwait
   14001540c:	imul   esp,DWORD PTR [rdi+0x47],0x350093f7
   140015413:	(bad)  
   140015414:	jnp    0x1400153bd
   140015416:	mov    esi,0x24de96bd
   14001541b:	cs rex.WRB ja 0x140015484
   14001541f:	jle    0x1400153d2
   140015421:	mov    edi,0xdb0ef273
   140015426:	jae    0x1400153db
   140015428:	xor    BYTE PTR [rax-0x8448096],ah
   14001542e:	push   rcx
   14001542f:	add    eax,0x9282c643
   140015434:	ds pop rbx
   140015436:	leave  
   140015437:	outs   dx,BYTE PTR ds:[rsi]
   140015438:	sbb    BYTE PTR [rdx-0x7e],0xbc
   14001543c:	mov    esp,0xf6de4f12
   140015441:	mov    ecx,0xa16971e3
   140015446:	add    edx,DWORD PTR [rsi-0x2afd1fb1]
   14001544c:	cld    
   14001544d:	rex.WRX
   14001544e:	addr32 push 0xb
   140015451:	(bad)  
   140015452:	in     eax,dx
   140015453:	cwde   
   140015454:	mov    edi,0xd4883847
   140015459:	sbb    ecx,edx
   14001545b:	add    edx,edi
   14001545d:	pushf  
   14001545e:	rex.W rol BYTE PTR [rsi+0x1903da36],1
   140015465:	rex.WR popf 
   140015467:	mov    edi,0xc0414055
   14001546c:	mov    bl,dh
   14001546e:	retf   
   14001546f:	mov    esp,0xa1ed6142
   140015474:	(bad)  
   140015475:	jge    0x15fe74239
   14001547b:	and    eax,0x4d
   14001547e:	and    al,0x29
   140015480:	mov    ds,esi
   140015482:	jno    0x140015463
   140015484:	movabs eax,ds:0x8037c7e605676af6
   14001548d:	and    BYTE PTR [rdi+rcx*2],ch
   140015490:	shl    dl,0x5
   140015493:	or     ah,BYTE PTR [rcx]
   140015495:	nop
   140015496:	push   rsp
   140015497:	imul   r15,QWORD PTR [r10],0x69
   14001549b:	(bad)  
   14001549c:	mov    dh,0xb
   14001549e:	fild   DWORD PTR [rdx+rsi*1+0x1]
   1400154a2:	(bad)  
   1400154a3:	cmp    esp,esp
   1400154a5:	adc    BYTE PTR [rbx],dh
   1400154a7:	cmp    eax,0x43cedd2d
   1400154ac:	rex.WRB movabs r14,0x89b9fe8d1b2e792c
   1400154b6:	cmp    DWORD PTR [rbx+0x74],ecx
   1400154b9:	(bad)  
   1400154ba:	mov    ecx,0x7fbb7357
   1400154bf:	sub    al,0xee
   1400154c1:	ds cwde 
   1400154c3:	leave  
   1400154c4:	in     eax,dx
   1400154c5:	(bad)  
   1400154c6:	pop    rdx
   1400154c7:	add    esp,DWORD PTR [rax]
   1400154c9:	xchg   esi,eax
   1400154ca:	xchg   esi,eax
   1400154cb:	(bad)  
   1400154cc:	adc    al,0x6e
   1400154ce:	rex.WRX xor r11,QWORD PTR [rsi]
   1400154d1:	loop   0x1400154d1
   1400154d3:	mov    dl,0x64
   1400154d5:	or     esp,DWORD PTR [rcx-0x2206fbec]
   1400154db:	iret   
   1400154dc:	fistp  DWORD PTR [rsi+rdx*4]
   1400154df:	not    ebp
   1400154e1:	cmp    eax,0x7661a142
   1400154e6:	rex.WRXB mov r14,QWORD PTR [r13+0x1f]
   1400154ea:	(bad)  
   1400154eb:	addr32 rex (bad) 
   1400154ee:	mov    ebx,0x1a11a891
   1400154f3:	sahf   
   1400154f4:	sbb    ch,ah
   1400154f6:	sbb    rcx,r10
   1400154f9:	xor    BYTE PTR [rsi+rdx*1+0x12],bh
   1400154fd:	and    ah,dh
   1400154ff:	jg     0x1400154ac
   140015501:	push   rax
   140015502:	rex.WRX push rcx
   140015504:	icebp  
   140015505:	(bad)  
   140015506:	scas   eax,DWORD PTR es:[rdi]
   140015507:	out    0x8b,al
   140015509:	jne    0x14001550d
   14001550b:	rex.RXB mov r13b,0xa8
   14001550e:	push   0xffffffffffffffc3
   140015510:	push   rdx
   140015511:	and    bh,BYTE PTR [rbx-0x74879a4b]
   140015517:	pop    rbx
   140015518:	imul   esp,DWORD PTR [rsi-0x2f],0xffffffb1
   14001551c:	(bad)
   14001551f:	sti    
   140015520:	push   rbx
   140015521:	pop    rax
   140015522:	push   rax
   140015523:	mov    bl,0x87
   140015525:	(bad)  
   140015526:	fnstcw WORD PTR [rdx-0x5f7a8506]
   14001552c:	rex xchg esi,eax
   14001552e:	(bad)  
   14001552f:	jrcxz  0x1400154fa
   140015531:	scas   eax,DWORD PTR es:[rdi]
   140015532:	jle    0x14001558a
   140015534:	cdq    
   140015535:	pop    rdi
   140015536:	in     al,0x13
   140015538:	add    BYTE PTR [rsi-0x11],bh
   14001553b:	rex.X
   14001553c:	data16 jle 0x14001551f
   14001553f:	(bad)  
   140015540:	rex.WR rcr BYTE PTR [rsi],0x50
   140015544:	(bad)  
   140015545:	mov    ebp,0xb3f6becc
   14001554a:	sub    cl,BYTE PTR [rbx]
   14001554c:	movabs eax,ds:0x573b3f2978b6336e
   140015555:	mov    ebx,0x3b36d032
   14001555a:	mov    edx,0xa58ca749
   14001555f:	or     BYTE PTR [rdi-0xe0e16],al
   140015565:	rex.WRXB
   140015566:	rex.RXB movabs ds:0x1248de004df97f6f,eax
   140015570:	rcr    eax,cl
   140015572:	sbb    eax,0x9eea1df7
   140015577:	pushf  
   140015578:	cwde   
   140015579:	int    0xc0
   14001557b:	adc    eax,0x1efe7d43
   140015580:	lods   eax,DWORD PTR ds:[rsi]
   140015581:	iret   
   140015582:	pop    rcx
   140015583:	mov    ebx,0xca49ab08
   140015588:	sahf   
   140015589:	rex.WR rcl BYTE PTR [rcx+0x63ca5dbc],cl
   140015590:	or     al,0x44
   140015592:	rex.WX xchg dl,dil
   140015595:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140015596:	pop    rdx
   140015597:	xor    al,0xe5
   140015599:	pop    rax
   14001559a:	int3   
   14001559b:	cmp    eax,0x1a1c0e48
   1400155a0:	lock adc eax,0xe6efcd1b
   1400155a6:	jno    0x1400155f2
   1400155a8:	mov    al,0x9c
   1400155aa:	add    al,0xcb
   1400155ac:	adc    esi,DWORD PTR ds:[rbx+0x4d1ae00c]
   1400155b3:	sbb    DWORD PTR [rip+0x6f87c9a1],ebp        # 0x1af891f5a
   1400155b9:	sbb    BYTE PTR [rbx-0x54b9259f],bh
   1400155bf:	(bad)  
   1400155c0:	call   FWORD PTR [rax-0x5c]
   1400155c3:	adc    BYTE PTR [rax],dl
   1400155c5:	vcmpps xmm2,xmm8,XMMWORD PTR [rbp-0x78],0x62
   1400155cb:	es jo  0x140015647
   1400155ce:	pushf  
   1400155cf:	loope  0x1400155e2
   1400155d1:	mov    ch,0xff
   1400155d3:	(bad)  
   1400155d4:	sti    
   1400155d5:	out    0x52,eax
   1400155d7:	rex cdq 
   1400155d9:	shr    bh,cl
   1400155db:	movabs ds:0xd640bb960c40fc9b,eax
   1400155e4:	(bad)  
   1400155e5:	mov    ebp,ds
   1400155e7:	cmc    
   1400155e8:	mov    al,0x7b
   1400155ea:	ror    BYTE PTR [rbp-0x6c25081],0x4d
   1400155f1:	jrcxz  0x1400155a6
   1400155f3:	in     eax,0x5c
   1400155f5:	rcl    BYTE PTR [rdi-0x67d3948e],0x6c
   1400155fc:	pop    rbp
   1400155fd:	jne    0x14001561a
   1400155ff:	or     al,0x47
   140015601:	mov    edi,DWORD PTR [rbp-0x678f39ae]
   140015607:	fstp   DWORD PTR [rdx+rbp*1-0x49]
   14001560b:	(bad)  
   14001560c:	ins    BYTE PTR es:[rdi],dx
   14001560d:	sub    DWORD PTR [rcx-0x4d],edi
   140015610:	or     al,0x6a
   140015612:	out    0x5c,al
   140015614:	(bad)  
   140015615:	(bad)  
   140015617:	or     al,0x34
   140015619:	jb     0x140015669
   14001561b:	adc    eax,0x93d41117
   140015620:	adc    ebp,DWORD PTR [rbx]
   140015622:	and    ebx,DWORD PTR [rdi-0x8]
   140015625:	hlt    
   140015626:	xchg   ecx,eax
   140015627:	mov    eax,0x6184f8b4
   14001562c:	jle    0x14001560e
   14001562e:	push   rsp
   14001562f:	adc    BYTE PTR [rax],dl
   140015631:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140015632:	push   0xffffffffffffffff
   140015634:	(bad)  
   140015635:	add    DWORD PTR [rax-0x64c901e],0xb13792b1
   14001563f:	mov    bh,0x10
   140015641:	out    dx,eax
   140015642:	or     DWORD PTR [rbx],esp
   140015644:	(bad)  
   140015645:	fist   WORD PTR [rsp+rsi*2]
   140015648:	fwait
   140015649:	out    0x4,al
   14001564b:	jp     0x140015610
   14001564d:	sbb    ebx,DWORD PTR [rdx]
   14001564f:	pop    rsi
   140015650:	pop    rdi
   140015651:	or     eax,0x6fdc305f
   140015656:	xor    al,0xfa
   140015658:	not    BYTE PTR [rdi+0x3f8003ff]
   14001565e:	and    DWORD PTR [rcx-0xb],ecx
   140015661:	fadd   st(3),st
   140015663:	mov    DWORD PTR [rsi+0x30],0xb8dd3e3e
   14001566a:	add    ch,BYTE PTR [rdx+0x3e]
   14001566d:	sbb    ah,BYTE PTR [rdx]
   14001566f:	(bad)  
   140015670:	adc    al,0x13
   140015672:	rex.XB xor eax,0xdf2e4d94
   140015678:	(bad)  
   140015679:	adc    DWORD PTR [rsi+rcx*4+0x534b0da7],esp
   140015680:	cs pop rsp
   140015682:	push   0xffffffff84cc649b
   140015687:	push   0x3469a100
   14001568c:	lahf   
   14001568d:	js     0x14001569b
   14001568f:	iret   
   140015690:	sbb    al,0x34
   140015692:	in     al,0xdf
   140015694:	icebp  
   140015695:	or     DWORD PTR [rbx+0x6e],esp
   140015698:	rex.WRXB sub r10b,r9b
   14001569b:	cdq    
   14001569c:	(bad)  
   14001569d:	ss add esi,DWORD PTR es:[rsi+0x62]
   1400156a2:	jne    0x1400156ac
   1400156a4:	scas   al,BYTE PTR es:[rdi]
   1400156a5:	sub    DWORD PTR [rbp-0x6fbef4ff],ebx
   1400156ab:	rex.WRB stc 
   1400156ad:	cld    
   1400156ae:	sub    cl,BYTE PTR [rsp+rsi*2+0x77]
   1400156b2:	adc    eax,0x37c589a4
   1400156b7:	(bad)  
   1400156b8:	mov    ebp,0x816a2cb1
   1400156bd:	(bad)  
   1400156be:	xlat   BYTE PTR ds:[rbx]
   1400156bf:	test   DWORD PTR [rbx+0x277593d2],edi
   1400156c5:	(bad)  
   1400156c6:	(bad)  
   1400156c7:	pop    rdx
   1400156c8:	cli    
   1400156c9:	scas   eax,DWORD PTR es:[rdi]
   1400156ca:	scas   eax,DWORD PTR es:[rdi]
   1400156cb:	mov    bl,0x97
   1400156cd:	xor    DWORD PTR [rcx],ecx
   1400156cf:	repz pop rcx
   1400156d1:	cmp    al,0xa4
   1400156d3:	out    0x8d,al
   1400156d5:	rex.W pop rsp
   1400156d7:	push   0xffffffffec2d8625
   1400156dc:	(bad)  
   1400156dd:	outs   dx,BYTE PTR ds:[rsi]
   1400156de:	adc    ecx,esp
   1400156e0:	sbb    dh,BYTE PTR [rax-0x32b1bf58]
   1400156e6:	gs push rcx
   1400156e8:	loopne 0x140015698
   1400156ea:	push   rsi
   1400156eb:	mov    DWORD PTR [rbx],edx
   1400156ed:	rex.WRB jnp 0x14001573b
   1400156f0:	(bad)
   1400156f5:	mov    ch,0x16
   1400156f7:	rex.WRB out 0xb2,al
   1400156fa:	jge    0x1400156c9
   1400156fc:	or     bh,BYTE PTR [rsi-0x22a7aa92]
   140015702:	xchg   DWORD PTR [rbx],ecx
   140015704:	jo     0x140015699
   140015706:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140015707:	movabs ds:0xc9ccd6fa1fe60c7e,al
   140015710:	fld    TBYTE PTR [rdi+0x39]
   140015713:	mov    ds,WORD PTR [rax]
   140015715:	adc    eax,DWORD PTR [rsi+rbx*8-0x79]
   140015719:	or     ebx,esp
   14001571b:	in     al,dx
   14001571c:	(bad)  
   14001571d:	imul   ebp,DWORD PTR [rbp+0x47],0x24f1820
   140015724:	rex.WRB
   140015725:	rex.X xchg eax,eax
   140015727:	jg     0x14001578f
   140015729:	int    0x72
   14001572b:	adc    DWORD PTR [rax-0x6fd5f197],esp
   140015731:	shr    BYTE PTR [rcx+0x7c],1
   140015734:	jnp    0x1400156ed
   140015736:	adc    bh,BYTE PTR [rdx+0x4e]
   140015739:	enter  0xd608,0x74
   14001573d:	rex.WRXB cmp r9,QWORD PTR [r8-0x7d694b97]
   140015744:	and    BYTE PTR [rax-0x7b],dh
   140015747:	test   BYTE PTR [rsp+rdi*1],dh
   14001574a:	rex add edx,DWORD PTR [rdx-0x4ea0897c]
   140015751:	(bad)  
   140015752:	clc    
   140015753:	ret    0xceb7
   140015756:	repz and eax,0x7d1a723f
   14001575c:	sti    
   14001575d:	sub    edi,DWORD PTR [rsi]
   14001575f:	mov    ah,0xe7
   140015761:	mov    bh,0xff
   140015763:	mov    dh,0x43
   140015765:	ret    0x9a6f
   140015768:	cmp    bh,BYTE PTR [rsp+rdi*2+0x6c]
   14001576c:	cmp    eax,eax
   14001576e:	mov    ah,0x63
   140015770:	out    0x36,eax
   140015772:	jno    0x14001575c
   140015774:	cdq    
   140015775:	je     0x140015739
   140015777:	push   rsi
   140015778:	(bad)  
   140015779:	rex.W and BYTE PTR [rax],dl
   14001577c:	(bad)  
   14001577d:	js     0x1400157a6
   14001577f:	movabs eax,ds:0x101fad96a2de954
   140015788:	add    ch,dh
   14001578a:	add    al,0xd0
   14001578c:	and    BYTE PTR [rdx-0x28],dh
   14001578f:	stos   BYTE PTR es:[rdi],al
   140015790:	rex.X mov bl,0xb0
   140015793:	(bad)  
   140015794:	pop    rdx
   140015795:	shl    BYTE PTR [rip+0xffffffff8f9348e1],1        # 0xcf94a07c
   14001579b:	sub    BYTE PTR [rdx],dl
   14001579d:	pop    rdx
   14001579e:	mov    al,0xe
   1400157a0:	(bad)  
   1400157a1:	sub    eax,0xeaef0e65
   1400157a6:	shl    DWORD PTR [rdx],cl
   1400157a8:	rex.WRB (bad) 
   1400157aa:	stos   BYTE PTR es:[rdi],al
   1400157ab:	rex.R xor al,0x1
   1400157ae:	xchg   ebx,eax
   1400157af:	(bad)  
   1400157b0:	ins    DWORD PTR es:[rdi],dx
   1400157b1:	int    0xa0
   1400157b3:	call   0x1992360c4
   1400157b8:	rcl    edx,cl
   1400157ba:	(bad)  
   1400157bb:	imul   edx,DWORD PTR [rbx],0x78
   1400157be:	push   rbx
   1400157bf:	punpckhbw mm7,QWORD PTR [rdi-0x6c48bfbe]
   1400157c6:	xor    eax,0xe3f6f26c
   1400157cb:	cmp    ch,0x9e
   1400157ce:	push   rdx
   1400157cf:	mov    ebx,es
   1400157d1:	(bad)  
   1400157d2:	rex.B
   1400157d3:	repz push 0x75ebbc15
   1400157d9:	fcmovne st,st(2)
   1400157db:	xor    bl,BYTE PTR [rbp+0x4f]
   1400157de:	sbb    ebx,ecx
   1400157e0:	and    DWORD PTR [rax-0x16],0xae402d1d
   1400157e7:	clc    
   1400157e8:	shl    esp,cl
   1400157ea:	cmp    BYTE PTR [rbx-0x5c],ch
   1400157ed:	push   0xffffffffffffffd3
   1400157ef:	sub    eax,0x7371fd57
   1400157f4:	adc    BYTE PTR [rsp+rcx*1-0x77b53971],0xf6
   1400157fc:	mov    ebx,0x250b9a38
   140015801:	shl    BYTE PTR [rsp+rbp*1-0x7b2baf8a],1
   140015808:	(bad)  
   140015809:	ins    BYTE PTR es:[rdi],dx
   14001580a:	test   BYTE PTR [rdi],bl
   14001580c:	pop    rbx
   14001580d:	cld    
   14001580e:	xor    bl,BYTE PTR [rdi]
   140015810:	xchg   ebx,eax
   140015811:	(bad)  
   140015812:	push   rbp
   140015813:	fwait
   140015814:	(bad)  
   140015815:	out    0x77,eax
   140015817:	add    al,dl
   140015819:	sbb    eax,DWORD PTR [rcx+0x239fcfba]
   14001581f:	cmp    al,0xfa
   140015821:	jrcxz  0x140015809
   140015823:	pmaxub mm6,QWORD PTR [rbx]
   140015826:	cmp    DWORD PTR [rdi-0x18],esi
   140015829:	(bad)  
   14001582a:	sbb    DWORD PTR [rsp+rdx*2-0x564c07fd],esp
   140015831:	fwait
   140015832:	idiv   BYTE PTR [rdi-0x50316e11]
   140015838:	or     eax,DWORD PTR [rcx-0x4baffef6]
   14001583e:	stos   DWORD PTR es:[rdi],eax
   14001583f:	ins    DWORD PTR es:[rdi],dx
   140015840:	cwde   
   140015841:	(bad)  
   140015842:	rex.RB (bad) 
   140015844:	loopne 0x14001582f
   140015846:	ficomp WORD PTR [rcx]
   140015848:	test   al,0xe6
   14001584a:	in     eax,dx
   14001584b:	add    al,0x7a
   14001584d:	mov    esp,0x5905fc37
   140015852:	rex.XB mov r12d,0x6b354010
   140015858:	adc    edi,DWORD PTR [rsi+0x11]
   14001585b:	lods   eax,DWORD PTR ds:[rsi]
   14001585c:	es add DWORD PTR ss:[rbx+0xd],esp
   140015861:	rex.B
   140015862:	ss or  al,0x87
   140015865:	lea    edx,[rdx-0x62f0d8fc]
   14001586b:	mov    eax,0x82808030
   140015870:	rex.RX (bad) 
   140015873:	mov    cl,BYTE PTR [rdi-0x14]
   140015876:	stc    
   140015877:	in     eax,dx
   140015878:	mov    edi,0xb7e1249d
   14001587d:	rex.WRX (bad) 
   14001587f:	ds fist DWORD PTR es:[rdx+0x4c]
   140015884:	(bad)  
   140015885:	iret   
   140015886:	sahf   
   140015887:	sbb    eax,0x88e5d62c
   14001588c:	je     0x140015820
   14001588e:	push   rdx
   14001588f:	add    al,0x24
   140015891:	push   0xa931fb6
   140015896:	add    DWORD PTR [rdx+0x42],esp
   140015899:	and    al,BYTE PTR [rsi]
   14001589b:	mov    ch,0x8
   14001589d:	movabs al,ds:0xa101080957871da0
   1400158a6:	and    eax,0x9140cb40
   1400158ab:	add    BYTE PTR [rsp+rbp*2+0x4c],dl
   1400158af:	sub    al,cl
   1400158b1:	jbe    0x14001590c
   1400158b3:	pop    rbp
   1400158b4:	or     edx,ebx
   1400158b6:	adc    al,BYTE PTR [rax-0x4f]
   1400158b9:	adc    DWORD PTR [rcx+rax*8],eax
   1400158bc:	sbb    bl,BYTE PTR [rdx+rsi*1-0x74]
   1400158c0:	rol    DWORD PTR [rbp+0x17],0x2d
   1400158c4:	icebp  
   1400158c5:	call   0x17eb35df4
   1400158ca:	rex.WRB sub r15b,BYTE PTR [r15+0x42442fa3]
   1400158d1:	xor    BYTE PTR [rdi],0x2f
   1400158d4:	cmc    
   1400158d5:	xchg   BYTE PTR [rax+0x7d9695b9],al
   1400158db:	(bad)  
   1400158dc:	add    DWORD PTR [rsi],eax
   1400158de:	(bad)  
   1400158df:	and    BYTE PTR [rbx+0x67],bh
   1400158e2:	cmp    DWORD PTR [rdi],edi
   1400158e4:	(bad)  
   1400158e5:	sahf   
   1400158e6:	rex.WR
   1400158e7:	ss in  eax,dx
   1400158e9:	test   al,0x99
   1400158eb:	and    eax,0x9409e36c
   1400158f0:	xchg   edi,eax
   1400158f1:	xor    dh,bl
   1400158f3:	mov    cl,0xdc
   1400158f5:	jl     0x1400158cb
   1400158f7:	jrcxz  0x1400158fd
   1400158f9:	(bad)  [rbx]
   1400158fb:	je     0x1400158d1
   1400158fd:	fisub  WORD PTR [rbp+0x4b]
   140015900:	hlt    
   140015901:	movsxd ebx,esp
   140015903:	cmp    dh,BYTE PTR [rcx-0x365a679d]
   140015909:	xor    DWORD PTR [rbp+0x34],esp
   14001590c:	sub    edi,esi
   14001590e:	cwde   
   14001590f:	cmp    eax,DWORD PTR [rdx]
   140015911:	nop
   140015912:	(bad)
   140015915:	mov    ecx,0x155e2593
   14001591a:	(bad)  
   14001591b:	sahf   
   14001591c:	imul   esi,edx,0x9225e0dc
   140015922:	xor    dh,BYTE PTR [rbx+0x1b15b5b]
   140015928:	(bad)  
   140015929:	jae    0x140015925
   14001592b:	ja     0x140015979
   14001592d:	fldcw  WORD PTR [rdx]
   14001592f:	leave  
   140015930:	and    BYTE PTR [rdi-0x4e],bl
   140015933:	jge    0x140015912
   140015935:	pop    rdx
   140015936:	(bad)  
   140015937:	mov    esi,0xdcf8c775
   14001593c:	icebp  
   14001593d:	and    esi,ebx
   14001593f:	imul   rdx,QWORD PTR [rcx],0xfffffffff2dff48a
   140015946:	push   0x41e3dae6
   14001594b:	add    al,BYTE PTR [ecx]
   14001594e:	sbb    DWORD PTR [rsi-0x41],0xf09ac01f
   140015955:	lahf   
   140015956:	ins    DWORD PTR es:[rdi],dx
   140015957:	rex.WRXB xor al,0x78
   14001595a:	xor    ch,BYTE PTR [rdi+0xc]
   14001595d:	lea    eax,ss:[rdx]
   140015960:	imul   esp,DWORD PTR [rsi+0x3eaa911f],0xa078204
   14001596a:	add    ebp,DWORD PTR [rcx-0x11]
   14001596d:	in     eax,dx
   14001596e:	add    BYTE PTR [rbp-0x5e],ch
   140015971:	rex.RXB movabs al,ds:0xe6d58ebaa2e9eb8d
   14001597b:	popf   
   14001597c:	pop    rbx
   14001597d:	cmp    BYTE PTR cs:[rcx],al
   140015980:	add    BYTE PTR [rax],al
   140015982:	movabs ds:0x3015f900d7c57f6f,eax
   14001598b:	lahf   
   14001598c:	pushf  
   14001598d:	cmp    al,0x32
   14001598f:	cmp    bl,dh
   140015991:	jge    0x140015983
   140015993:	rcl    cl,1
   140015995:	push   rsi
   140015996:	in     al,0xd4
   140015998:	fmul   st,st(6)
   14001599a:	xchg   edx,eax
   14001599b:	rex.WRB jle 0x1400159e7
   14001599e:	or     al,0x44
   1400159a0:	xor    eax,0xbc138527
   1400159a5:	push   0xffffffffffffff90
   1400159a7:	adc    edx,DWORD PTR [rdi]
   1400159a9:	xchg   ebx,eax
   1400159aa:	ror    DWORD PTR [rdx-0x7cfd5db7],1
   1400159b0:	(bad)  
   1400159b1:	(bad)  
   1400159b2:	outs   dx,DWORD PTR ds:[rsi]
   1400159b3:	jle    0x140015a32
   1400159b5:	rex.RX cwde 
   1400159b7:	xor    eax,0xb9ba2871
   1400159bc:	sbb    edi,DWORD PTR [rbp-0xd1b730d]
   1400159c2:	shr    DWORD PTR [rax],cl
   1400159c4:	(bad)  
   1400159c5:	cs pop rbx
   1400159c7:	mul    BYTE PTR [rax]
   1400159c9:	add    al,0xb5
   1400159cb:	imul   DWORD PTR [rax-0x23256c89]
   1400159d1:	mov    gs,eax
   1400159d3:	rex.WR add BYTE PTR [rdi+rbx*4+0x3c],r12b
   1400159d8:	xor    ebx,DWORD PTR [rdx-0x6c111765]
   1400159de:	fwait
   1400159df:	or     al,0xaf
   1400159e1:	shl    DWORD PTR [rbx+rsi*8],1
   1400159e4:	and    al,0x6e
   1400159e6:	pop    rsi
   1400159e7:	sahf   
   1400159e8:	sbb    esp,DWORD PTR [rax+0x22318d2e]
   1400159ee:	or     DWORD PTR [rdx],edx
   1400159f0:	mov    ecx,0x3c2660c3
   1400159f5:	cmp    ebx,eax
   1400159f7:	(bad)  
   1400159f8:	pop    rcx
   1400159f9:	fsubp  st(3),st
   1400159fb:	loop   0x140015a17
   1400159fd:	rex (bad) 
   1400159ff:	and    DWORD PTR [rdi+0x31004aee],eax
   140015a05:	(bad)  
   140015a06:	ds adc eax,0xcd9e28af
   140015a0c:	xchg   DWORD PTR [rsi+rsi*8],ebx
   140015a0f:	push   rbx
   140015a10:	in     al,dx
   140015a11:	(bad)
   140015a15:	push   rbx
   140015a16:	rex.WB (bad) 
   140015a18:	or     eax,0x94801cd1
   140015a1d:	push   rcx
   140015a1e:	jnp    0x140015a27
   140015a20:	rex.WR movabs rax,ds:0x32d70b462330798b
   140015a2a:	lods   al,BYTE PTR ds:[rsi]
   140015a2b:	in     eax,0xb7
   140015a2d:	pop    rax
   140015a2e:	xchg   BYTE PTR ds:[rax+0x756ef8f],ch
   140015a35:	(bad)  
   140015a36:	(bad)  
   140015a37:	lahf   
   140015a38:	rcl    DWORD PTR [rax-0x4cb5a6b],0x8d
   140015a3f:	pop    rbx
   140015a40:	rex.RXB out 0x8e,eax
   140015a43:	cmp    eax,0x4694873c
   140015a48:	add    BYTE PTR [rax+rdi*8-0x3f033777],bh
   140015a4f:	jmp    0xffcb5b47
   140015a54:	gs or  eax,0x164f73d3
   140015a5a:	and    al,al
   140015a5c:	(bad)  
   140015a5d:	loopne 0x140015a05
   140015a5f:	icebp  
   140015a60:	sahf   
   140015a61:	xchg   esp,eax
   140015a62:	mov    al,0x53
   140015a64:	sub    al,0x3d
   140015a66:	add    bl,dl
   140015a68:	out    0xf7,al
   140015a6a:	(bad)  
   140015a6b:	and    dh,BYTE PTR [rip+0xffffffffdf9ac9fd]        # 0x11f9c246e
   140015a71:	sub    dh,BYTE PTR [rax]
   140015a73:	xor    BYTE PTR [rsi+rbp*4+0x34c24dde],bh
   140015a7a:	(bad)  
   140015a7b:	ss push rbx
   140015a7d:	loope  0x140015a81
   140015a7f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140015a80:	shl    DWORD PTR [rdi-0x7fdf0d41],1
   140015a86:	xchg   edi,eax
   140015a87:	rex.XB in al,0xce
   140015a8a:	fyl2x  
   140015a8c:	jmp    0x12f3d448a
   140015a91:	jns    0x140015a3b
   140015a93:	(bad)  
   140015a94:	jmp    0xc842d70d
   140015a99:	sahf   
   140015a9a:	in     al,dx
   140015a9b:	rex jrcxz 0x140015a40
   140015a9e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140015a9f:	xor    eax,0x2b89f594
   140015aa4:	rex.WX xchg BYTE PTR [rcx+0x36c2ccab],dil
   140015aab:	fnstcw WORD PTR [rdx+rax*8+0x46]
   140015aaf:	movabs r9,0xfffab0b330895d47
   140015ab9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140015aba:	call   0x1b41df834
   140015abf:	ins    BYTE PTR es:[rdi],dx
   140015ac0:	lock (bad) 
   140015ac2:	fs leave 
   140015ac4:	mov    r13b,0x1
   140015ac7:	mov    edx,DWORD PTR [rcx-0x5caffd4b]
   140015acd:	add    DWORD PTR [rsi-0x48263767],ebx
   140015ad3:	idiv   esi
   140015ad5:	sbb    ecx,0xffffffa5
   140015ad8:	ja     0x140015a67
   140015ada:	pop    rsp
   140015adb:	xor    ah,BYTE PTR [rsi+0x2e3a0934]
   140015ae1:	sbb    ah,dh
   140015ae3:	outs   dx,DWORD PTR ds:[rsi]
   140015ae4:	(bad)  
   140015ae5:	add    bh,BYTE PTR [rip+0xffffffffcd8cd604]        # 0x10d8e30ef
   140015aeb:	rex.X sar DWORD PTR [rsi+0x229c76a7],0x59
   140015af3:	movabs ds:0x23e0582d9cfe7163,al
   140015afc:	mov    esi,0xa024bca2
   140015b01:	fwait
   140015b02:	(bad)  
   140015b03:	(bad)  
   140015b05:	rex.RB adc al,0x1a
   140015b08:	pop    rbp
   140015b09:	(bad)  
   140015b0a:	imul   ebp,DWORD PTR [rax-0x2b],0xffffff84
   140015b0e:	push   sp
   140015b10:	repz ds fcmove st,st(2)
   140015b14:	ror    BYTE PTR [rbp+0x7c],1
   140015b17:	fist   WORD PTR [rsi-0x1b]
   140015b1a:	jmp    0xcd9158f9
   140015b1f:	rex.RB xchg r8d,eax
   140015b21:	(bad)  
   140015b22:	add    al,0xef
   140015b24:	cli    
   140015b25:	adc    ecx,DWORD PTR [rbp+0x70]
   140015b28:	(bad)  
   140015b29:	shr    BYTE PTR [rsi],0x37
   140015b2c:	cmp    DWORD PTR [rcx],ecx
   140015b2e:	int3   
   140015b2f:	mov    BYTE PTR [rdi],ah
   140015b31:	(bad)  
   140015b32:	xchg   esi,eax
   140015b33:	rex.RXB
   140015b34:	ds (bad) 
   140015b36:	jmp    0x18f2872c2
   140015b3b:	sub    al,0x82
   140015b3d:	stc    
   140015b3e:	(bad)  
   140015b3f:	add    bh,bh
   140015b41:	sti    
   140015b42:	(bad)  
   140015b43:	rex.WRB sti 
   140015b45:	iret   
   140015b46:	fnclex 
   140015b48:	popf   
   140015b49:	out    0x9b,eax
   140015b4b:	rex.WX adc al,dl
   140015b4e:	sbb    ebx,ebx
   140015b50:	(bad)  
   140015b51:	fs or  ebp,esp
   140015b54:	or     al,0x39
   140015b56:	add    al,BYTE PTR [rax]
   140015b58:	or     BYTE PTR [rcx-0x5],ch
   140015b5b:	xor    eax,esi
   140015b5d:	and    DWORD PTR [rcx],esp
   140015b5f:	add    al,BYTE PTR [rcx+0x72]
   140015b62:	js     0x140015b93
   140015b64:	lahf   
   140015b65:	xor    ah,BYTE PTR [rdi-0x1]
   140015b68:	fwait
   140015b69:	jne    0x140015b4b
   140015b6b:	sti    
   140015b6c:	rex.W add BYTE PTR [rdx+0x2b],dl
   140015b70:	and    BYTE PTR [rdx+rbx*1],al
   140015b73:	sbb    ch,ah
   140015b75:	pop    rsp
   140015b76:	shr    ch,cl
   140015b78:	(bad)  
   140015b79:	push   rsi
   140015b7a:	jnp    0x140015b59
   140015b7c:	rcr    BYTE PTR [rcx],0x2c
   140015b7f:	xchg   edx,eax
   140015b80:	or     eax,DWORD PTR [rbx-0x350e20ba]
   140015b86:	adc    eax,DWORD PTR [rax]
   140015b88:	jle    0x140015ba7
   140015b8a:	nop
   140015b8b:	(bad)  
   140015b8c:	jne    0x140015b25
   140015b8e:	push   rdi
   140015b8f:	cmp    ah,BYTE PTR [rbx+0x10fddfb7]
   140015b95:	(bad)  
   140015b96:	lahf   
   140015b97:	pushf  
   140015b98:	and    DWORD PTR [rbx+0x1a],esp
   140015b9b:	cwde   
   140015b9c:	jns    0x140015bc7
   140015b9e:	xor    eax,0xb7206b67
   140015ba3:	add    eax,0xdb5232f3
   140015ba8:	lahf   
   140015ba9:	movabs ds:0x721aba98495a3b80,al
   140015bb2:	rex.WX (bad) 
   140015bb4:	ror    BYTE PTR [rax-0x54],1
   140015bb7:	(bad)  
   140015bb8:	(bad)  
   140015bb9:	data16 jbe 0x140015c02
   140015bbc:	in     eax,dx
   140015bbd:	rex.X movabs ds:0xa310445a13a4589,eax
   140015bc7:	(bad)  
   140015bc8:	lods   eax,DWORD PTR ds:[rsi]
   140015bc9:	test   eax,0xb35591ac
   140015bce:	(bad)  
   140015bcf:	outs   dx,BYTE PTR ds:[rsi]
   140015bd0:	sbb    BYTE PTR [rsi+0x668ac80d],bl
   140015bd6:	sub    esp,edx
   140015bd8:	push   rax
   140015bd9:	sub    BYTE PTR [rsi],0x1a
   140015bdc:	stos   BYTE PTR es:[rdi],al
   140015bdd:	lods   eax,DWORD PTR ds:[rsi]
   140015bde:	loope  0x140015b8d
   140015be0:	test   BYTE PTR [rax+0x1a8c1a84],cl
   140015be6:	pop    rdx
   140015be7:	mov    ch,0xe8
   140015be9:	leave  
   140015bea:	cmp    al,0x3d
   140015bec:	jns    0x140015bf2
   140015bee:	lock push 0xffffffffaedc9582
   140015bf4:	adc    DWORD PTR [rax],edx
   140015bf6:	cmp    DWORD PTR [rsi],esi
   140015bf8:	sahf   
   140015bf9:	add    DWORD PTR [rax],edi
   140015bfb:	sti    
   140015bfc:	scas   al,BYTE PTR es:[rdi]
   140015bfd:	sbb    al,0x8f
   140015bff:	mov    bh,0x6c
   140015c01:	rex.RB mul r11d
   140015c04:	(bad)  
   140015c05:	(bad)  
   140015c06:	mov    eax,0x242b77a6
   140015c0b:	ret    0xefba
   140015c0e:	pop    rdx
   140015c0f:	push   0x2860b92f
   140015c14:	cld    
   140015c15:	jb     0x140015c18
   140015c17:	(bad)  
   140015c18:	and    al,0x8d
   140015c1a:	(bad)  
   140015c1c:	add    ah,BYTE PTR [rdx+rbp*1]
   140015c1f:	rcl    BYTE PTR [rdi+0x5b],1
   140015c22:	sbb    ah,dl
   140015c24:	mov    bl,0x0
   140015c26:	test   DWORD PTR [rbx+0x2c2e9d0a],esp
   140015c2c:	mov    cl,0xca
   140015c2e:	xchg   edi,eax
   140015c2f:	repnz (bad) 
   140015c31:	jo     0x140015c10
   140015c33:	test   al,bh
   140015c35:	push   rdx
   140015c36:	rex.WX (bad) 
   140015c38:	add    al,0x16
   140015c3a:	out    0xbe,al
   140015c3c:	or     DWORD PTR [rbp+0x3e2c9290],esp
   140015c42:	jo     0x140015c3b
   140015c44:	in     al,0x89
   140015c46:	scas   eax,DWORD PTR es:[rdi]
   140015c47:	fnstsw WORD PTR [rdx]
   140015c49:	and    bl,ch
   140015c4b:	outs   dx,BYTE PTR ds:[rsi]
   140015c4c:	add    cl,bl
   140015c4e:	add    DWORD PTR [rax],eax
   140015c50:	scas   eax,DWORD PTR es:[rdi]
   140015c51:	pushf  
   140015c52:	mov    edx,0xe3e4ff69
   140015c57:	(bad)  
   140015c58:	and    ebx,DWORD PTR [rdi]
   140015c5a:	cmp    eax,0xd0200c65
   140015c5f:	mov    edi,0x61cf9614
   140015c64:	(bad)  
   140015c65:	(bad)  
   140015c66:	out    dx,eax
   140015c67:	sahf   
   140015c68:	sbb    BYTE PTR [rbp+0x158e6d9],ch
   140015c6e:	or     eax,0x7898d96f
   140015c73:	ins    BYTE PTR es:[rdi],dx
   140015c74:	clc    
   140015c75:	js     0x140015cdf
   140015c77:	int    0x3d
   140015c79:	test   eax,0x1297c527
   140015c7e:	in     eax,0x15
   140015c80:	xor    BYTE PTR [rcx*1-0x68404ac0],0xa9
   140015c88:	push   rbp
   140015c89:	adc    al,0x10
   140015c8b:	(bad)  
   140015c8c:	mov    ebx,DWORD PTR [rax]
   140015c8e:	push   0xffffffff96015e2d
   140015c93:	mov    dh,0xc8
   140015c95:	cdq    
   140015c96:	pop    rsp
   140015c97:	xchg   edx,eax
   140015c98:	or     eax,DWORD PTR [rdi-0x350e20ba]
   140015c9e:	(bad)  
   140015c9f:	cmp    BYTE PTR [rdi],0xdc
   140015ca2:	repz (bad) 
   140015ca5:	fmul   QWORD PTR [rdi+0x12]
   140015ca8:	jg     0x140015d21
   140015caa:	cli    
   140015cab:	movabs eax,ds:0xb3ded3b763dba3a3
   140015cb4:	outs   dx,DWORD PTR ds:[rsi]
   140015cb5:	addr32 int 0x81
   140015cb8:	rex.X
   140015cb9:	rex.WRXB shl QWORD PTR [r9+r8*4],0x2b
   140015cbe:	add    eax,0x3f657c0a
   140015cc3:	add    DWORD PTR [rbx+0x413062ac],eax
   140015cc9:	(bad)  
   140015cca:	jmp    0x140015d1c
   140015ccc:	add    eax,0x9b401750
   140015cd1:	and    DWORD PTR [rdx-0x7d5ddab5],esp
   140015cd7:	xchg   esi,eax
   140015cd8:	mov    al,0xda
   140015cda:	rol    BYTE PTR [rax-0x7f],cl
   140015cdd:	lods   eax,DWORD PTR ds:[rsi]
   140015cde:	rex.WRB jns 0x140015ce1
   140015ce1:	and    BYTE PTR [rbx+rax*2+0x6d56c129],bl
   140015ce8:	or     al,0x89
   140015cea:	push   rcx
   140015ceb:	jae    0x140015d2d
   140015ced:	test   al,0x94
   140015cef:	add    DWORD PTR [rbx],0xd46b1501
   140015cf5:	xchg   ebp,eax
   140015cf6:	fsubr  st(0),st
   140015cf8:	adc    dh,BYTE PTR [rcx+0x61c35932]
   140015cfe:	sbb    eax,0x77804807
   140015d03:	outs   dx,DWORD PTR ds:[rsi]
   140015d04:	push   rcx
   140015d05:	adc    BYTE PTR [rdx-0x389bcb29],dh
   140015d0b:	ins    DWORD PTR es:[rdi],dx
   140015d0c:	jge    0x140015cd1
   140015d0e:	pop    rdx
   140015d0f:	xor    al,0xcf
   140015d11:	xor    QWORD PTR [rbx-0x2c1e29a],rax
   140015d18:	rex.WX jmp 0x1011cc037
   140015d1e:	mov    al,0x44
   140015d20:	jo     0x140015d1a
   140015d22:	cmp    dh,BYTE PTR [rcx+0x363eb4ca]
   140015d28:	cmp    DWORD PTR [rsi+rbx*2-0x58],0xffffff94
   140015d2d:	adc    edi,DWORD PTR [rsi-0x5c]
   140015d30:	jno    0x140015d8d
   140015d32:	int3   
   140015d33:	mov    eax,?
   140015d35:	ins    BYTE PTR es:[rdi],dx
   140015d36:	cmp    al,0x4f
   140015d38:	xchg   edi,eax
   140015d39:	xchg   BYTE PTR [rcx+0x7e],ch
   140015d3c:	(bad)  
   140015d3d:	push   rdx
   140015d3e:	mov    esp,DWORD PTR [rdi-0x3655948a]
   140015d44:	loope  0x140015d96
   140015d46:	rex.WXB (bad) 
   140015d48:	fst    QWORD PTR [rsi+riz*4+0x463a791]
   140015d4f:	sbb    al,ch
   140015d51:	mov    al,0x30
   140015d53:	(bad)  
   140015d54:	in     al,dx
   140015d55:	ins    BYTE PTR es:[rdi],dx
   140015d56:	addr32 out 0xfe,al
   140015d59:	cmp    esp,DWORD PTR [rdi]
   140015d5b:	(bad)  
   140015d5c:	(bad)  
   140015d5d:	rex.WRX
   140015d5e:	cmp    DWORD PTR cs:[rcx+0x9],0x6ea71bc0
   140015d66:	(bad)  
   140015d68:	(bad)  
   140015d69:	addr32 (bad) 
   140015d6b:	jnp    0x140015d9b
   140015d6d:	cmp    al,0x3a
   140015d6f:	rex.WRB (bad) 
   140015d71:	adc    BYTE PTR [rbx-0x3],0x7c
   140015d75:	movabs al,ds:0x4a4022d2b6e90c88
   140015d7e:	ret    
   140015d7f:	xchg   eax,edx
   140015d81:	xor    ebp,DWORD PTR [rip+0xffffffff81ed4e8a]        # 0xc1eeac11
   140015d87:	adc    BYTE PTR [rax],0x4
   140015d8a:	ins    DWORD PTR es:[rdi],dx
   140015d8b:	stos   DWORD PTR es:[rdi],eax
   140015d8c:	sub    cl,BYTE PTR [rsi]
   140015d8e:	and    al,0xba
   140015d90:	xor    ah,BYTE PTR [rdi]
   140015d92:	add    al,0x15
   140015d94:	xor    DWORD PTR [rdx],eax
   140015d96:	xor    DWORD PTR [rbp+0x58],edx
   140015d99:	inc    edx
   140015d9b:	(bad)  
   140015d9c:	cmp    eax,0xb57af2e9
   140015da1:	(bad)  
   140015da3:	mov    ebx,0x2f97ebff
   140015da8:	js     0x140015dcb
   140015daa:	add    BYTE PTR [rax],al
   140015dac:	movabs ds:0x80df8035fe578ef,eax
   140015db5:	(bad)  
   140015db6:	rex.WRB sbb al,0x1e
   140015db9:	fwait
   140015dba:	pop    rax
   140015dbb:	mov    eax,0xedc3fef7
   140015dc0:	(bad)  
   140015dc1:	(bad)  
   140015dc2:	stos   BYTE PTR es:[rdi],al
   140015dc3:	js     0x140015d4b
   140015dc5:	rex.WRB
   140015dc6:	repnz nop
   140015dc8:	(bad)  
   140015dc9:	sbb    edi,esi
   140015dcb:	push   rdi
   140015dcc:	out    0x39,eax
   140015dce:	rex.WRXB xor al,0x4f
   140015dd1:	sbb    eax,0x77e7e68e
   140015dd6:	vrsqrtps ymm10,ymm1
   140015dda:	jno    0x140015e42
   140015ddc:	loop   0x140015e58
   140015dde:	stos   DWORD PTR es:[rdi],eax
   140015ddf:	mov    dl,0x24
   140015de1:	leave  
   140015de2:	es cmp esp,esi
   140015de5:	cmp    BYTE PTR [rsi+0x32da9a5],dh
   140015deb:	nop
   140015dec:	xchg   ecx,eax
   140015ded:	jb     0x140015de9
   140015def:	jno    0x140015d9b
   140015df1:	xchg   ecx,eax
   140015df2:	mov    ch,0xb5
   140015df4:	xchg   DWORD PTR [rdi],ebx
   140015df6:	mov    bl,0xd6
   140015df8:	(bad)  
   140015df9:	(bad)  
   140015dfa:	retf   
   140015dfb:	mov    bx,0x7a6b
   140015dff:	xlat   BYTE PTR ds:[rbx]
   140015e00:	(bad)  
   140015e01:	mov    cl,0xdc
   140015e03:	mov    ch,0x58
   140015e06:	rex.RX
   140015e07:	rex.WRX (bad) 
   140015e09:	xchg   esi,eax
   140015e0a:	mov    dl,0x32
   140015e0c:	enter  0x1f0,0xb7
   140015e10:	cs jb  0x140015dd1
   140015e13:	add    BYTE PTR [rdi-0x2e7cc318],0xcd
   140015e1a:	jnp    0x140015dcd
   140015e1c:	mov    esi,0x35196605
   140015e21:	jne    0x140015e32
   140015e23:	(bad)  
   140015e24:	cs push rsp
   140015e26:	xchg   ebx,eax
   140015e27:	xchg   edi,eax
   140015e28:	mov    ecx,0x6688ba0e
   140015e2d:	adc    DWORD PTR [rcx+0x63cf3344],0x54
   140015e34:	(bad)  
   140015e35:	sub    bl,BYTE PTR [rdx-0x46933f6b]
   140015e3b:	add    edx,DWORD PTR [rsi-0x2f]
   140015e3e:	xchg   edi,eax
   140015e3f:	push   0x73
   140015e41:	mov    ebx,0x508b80a2
   140015e46:	lahf   
   140015e47:	fisub  WORD PTR [rdi+0x6e]
   140015e4a:	cwde   
   140015e4b:	fistp  WORD PTR [rbp-0x7a]
   140015e4e:	sbb    al,0xef
   140015e50:	addr32 add al,0x61
   140015e53:	sub    al,0x1e
   140015e55:	mov    esp,0x4bf47a67
   140015e5a:	lahf   
   140015e5b:	cmp    DWORD PTR [rsi-0x369d8ec8],esi
   140015e61:	rex.WR (bad) 
   140015e63:	(bad)  
   140015e64:	jle    0x140015e1d
   140015e66:	xor    BYTE PTR [rdi],bh
   140015e68:	lock iret 
   140015e6a:	ss add al,0x39
   140015e6d:	sbb    r8b,r9b
   140015e70:	test   eax,0xf520963
   140015e75:	cmp    al,0x98
   140015e77:	mov    edx,edx
   140015e79:	jne    0x140015e08
   140015e7b:	pop    rbx
   140015e7c:	push   rcx
   140015e7d:	(bad)  
   140015e7e:	(bad)  
   140015e7f:	(bad)  
   140015e80:	rex.WRX shr dil,cl
   140015e83:	shl    ebp,1
   140015e85:	jae    0x140015edc
   140015e87:	adc    dl,BYTE PTR [rcx+rax*4+0x40]
   140015e8b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140015e8c:	push   rax
   140015e8d:	(bad)  
   140015e8e:	add    BYTE PTR [rsi-0x18],bh
   140015e91:	mov    dl,dh
   140015e93:	rex.WRXB scas al,BYTE PTR es:[rdi]
   140015e95:	int3   
   140015e96:	sub    eax,0xa74667b7
   140015e9b:	sahf   
   140015e9c:	adc    BYTE PTR [rdx],al
   140015e9e:	add    BYTE PTR [rax],al
   140015ea0:	rex.RX fcomip st,st(1)
   140015ea3:	sub    esi,DWORD PTR [rdi-0x7f340fbd]
   140015ea9:	jl     0x140015f14
   140015eab:	jno    0x140015f13
   140015ead:	outs   dx,BYTE PTR ds:[rsi]
   140015eae:	imul   esi,esp,0xd10f3bf6
   140015eb4:	fsubr  st,st(0)
   140015eb6:	sbb    r12d,DWORD PTR [rdx]
   140015eb9:	cmp    r14,QWORD PTR [r9-0x58]
   140015ebd:	adc    BYTE PTR [rax-0x7d8bf3d6],cl
   140015ec3:	mov    cl,0x61
   140015ec5:	add    al,0x26
   140015ec7:	or     al,0x92
   140015ec9:	or     al,BYTE PTR [rcx+0x28213514]
   140015ecf:	jne    0x140015eec
   140015ed1:	(bad)  
   140015ed2:	sub    dh,BYTE PTR [rcx-0x2e]
   140015ed5:	fiadd  DWORD PTR [rdx]
   140015ed7:	ja     0x140015f02
   140015ed9:	pop    rax
   140015eda:	fld    QWORD PTR [rbx+0x3dc9ac1a]
   140015ee0:	fimul  WORD PTR [rdi+0x3bd27c50]
   140015ee6:	pop    rsi
   140015ee7:	loopne 0x140015f4f
   140015ee9:	scas   al,BYTE PTR es:[rdi]
   140015eea:	or     DWORD PTR [rip+0x2498befb],edx        # 0x1649a1deb
   140015ef0:	ja     0x140015ef7
   140015ef2:	mov    cl,dh
   140015ef4:	nop
   140015ef5:	test   esi,esi
   140015ef7:	rex.WR
   140015ef8:	pop    dx
   140015efa:	cmp    ebp,DWORD PTR [rax+0x36090a56]
   140015f00:	pop    rdi
   140015f01:	cmp    al,0xf7
   140015f03:	rex.WR test sil,r14b
   140015f06:	jnp    0x140015ef5
   140015f08:	mov    BYTE PTR [rsi+0x398c82ba],bh
   140015f0e:	push   0xfffffffff48a0e92
   140015f13:	(bad)  
   140015f14:	jne    0x140015f6f
   140015f16:	jb     0x140015f17
   140015f18:	mov    esp,0x168bd9e4
   140015f1d:	sub    DWORD PTR [rax],esi
   140015f1f:	xchg   ebx,eax
   140015f20:	mov    esp,0x9e3f504e
   140015f25:	xchg   ecx,eax
   140015f26:	jae    0x140015f4b
   140015f28:	cmp    al,0xbf
   140015f2a:	movabs eax,ds:0xeeb263df374a6cb6
   140015f33:	int3   
   140015f34:	(bad)  
   140015f35:	loopne 0x140015f19
   140015f37:	mov    ch,0x17
   140015f39:	leave  
   140015f3a:	mov    ah,0x79
   140015f3c:	push   rdi
   140015f3d:	int3   
   140015f3e:	gs xchg edx,eax
   140015f40:	pushf  
   140015f41:	rcr    BYTE PTR [rbx-0x5111fe5d],cl
   140015f47:	imul   r13d,esi,0x59
   140015f4b:	cmp    al,0x17
   140015f4d:	mov    al,0x20
   140015f4f:	(bad)  
   140015f50:	int    0x76
   140015f52:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140015f53:	mov    esi,0xe9d1a5f6
   140015f58:	(bad)  
   140015f59:	out    dx,al
   140015f5a:	fwait
   140015f5b:	rex.R stos BYTE PTR es:[rdi],al
   140015f5d:	push   rdi
   140015f5e:	shl    edx,0x5f
   140015f61:	add    DWORD PTR [rsp+riz*8+0x73e2e842],edi
   140015f68:	imul   ebp,DWORD PTR cs:[rbp+0x1e],0x68afdb80
   140015f70:	fs rex.B fsubrp st(6),st
   140015f74:	sbb    DWORD PTR [rdi+0x59b3f2],0xdb54df43
   140015f7e:	or     esi,DWORD PTR [rsi-0x5f60591e]
   140015f84:	rcl    BYTE PTR [rbx],0x88
   140015f87:	sbb    BYTE PTR [rcx+rax*8],ah
   140015f8a:	fadd   QWORD PTR [rcx+0x10de4b64]
   140015f90:	rex mov WORD PTR [rdx*8+0x3f8b2d96],fs
   140015f98:	push   rsi
   140015f99:	scas   eax,DWORD PTR es:[rdi]
   140015f9a:	(bad)  
   140015f9b:	add    esi,ebx
   140015f9d:	adc    esi,ebx
   140015f9f:	add    esi,DWORD PTR [rax+0x89e6505]
   140015fa5:	xor    al,0xfa
   140015fa7:	(bad)  
   140015fa8:	pop    rdi
   140015fa9:	cdq    
   140015faa:	add    eax,esi
   140015fac:	(bad)  
   140015fad:	cmp    eax,0x979bf9af
   140015fb2:	xchg   ecx,eax
   140015fb3:	lock jmp 0x140015f7c
   140015fb6:	nop    DWORD PTR [rbp-0x3d]
   140015fba:	xchg   ebx,eax
   140015fbb:	xor    esi,ebx
   140015fbd:	fwait
   140015fbe:	(bad)  
   140015fbf:	mov    edi,0x1faf1774
   140015fc4:	pop    rsi
   140015fc5:	(bad)  
   140015fc6:	or     BYTE PTR [rax+0x64],cl
   140015fc9:	or     DWORD PTR [rax+0x10e5d009],edx
   140015fcf:	add    cl,BYTE PTR [rax+0x12]
   140015fd2:	rex.W je 0x140015fce
   140015fd5:	icebp  
   140015fd6:	(bad)  
   140015fd7:	icebp  
   140015fd8:	rex.R scas eax,DWORD PTR es:[rdi]
   140015fda:	mov    ecx,0x190a35d7
   140015fdf:	movabs eax,ds:0x5b42431084a845
   140015fe8:	rex.RX or BYTE PTR [rax-0x6dfdd580],0x6
   140015ff0:	push   rsi
   140015ff1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140015ff2:	adc    dl,BYTE PTR [rax]
   140015ff4:	xchg   DWORD PTR [rsp+rax*8-0x4dbfbaa9],edi
   140015ffb:	js     0x140015f9f
   140015ffd:	rex
   140015ffe:	gs scas al,BYTE PTR es:[rdi]
   140016000:	xchg   BYTE PTR [rdi],al
   140016002:	(bad)  
   140016003:	outs   dx,BYTE PTR ds:[rsi]
   140016004:	or     eax,DWORD PTR [rdx]
   140016006:	adc    BYTE PTR [rbx-0x3a],cl
   140016009:	(bad)  
   14001600a:	jge    0x140015fc5
   14001600c:	jno    0x14001607b
   14001600e:	(bad)  
   14001600f:	test   BYTE PTR [rsi+0x7f95],bl
   140016015:	push   rdx
   140016016:	outs   dx,BYTE PTR fs:[rsi]
   140016018:	push   rbx
   140016019:	mov    cl,0xd2
   14001601b:	(bad)  
   14001601c:	out    dx,eax
   14001601d:	int3   
   14001601e:	loope  0x140016061
   140016020:	retf   0xfc9b
   140016023:	loope  0x14001600a
   140016025:	nop
   140016026:	movabs eax,ds:0x7626173eb1ecef34
   14001602f:	mov    edx,0x129aac90
   140016034:	cmp    bh,BYTE PTR [rbp-0x732d37a8]
   14001603a:	fwait
   14001603b:	test   BYTE PTR [rbx],bl
   14001603d:	pop    rdi
   14001603e:	mov    edx,0x2e0df1cb
   140016043:	add    al,0x2c
   140016045:	(bad)  
   140016046:	xor    dh,BYTE PTR [rax+0x3db3cad0]
   14001604c:	pop    rsp
   14001604d:	out    0xc9,eax
   14001604f:	pop    rax
   140016050:	rex.WB (bad) 
   140016052:	xchg   edx,eax
   140016053:	sbb    BYTE PTR [rax],dl
   140016055:	(bad)  
   140016056:	cmp    DWORD PTR [rcx],eax
   140016058:	push   rdx
   140016059:	test   dh,bh
   14001605b:	cwde   
   14001605c:	adc    DWORD PTR [rdx-0x6e],edx
   14001605f:	test   DWORD PTR [rbx+0x3d4f4df7],eax
   140016065:	js     0x1400160d7
   140016067:	rex.RX ret 
   140016069:	cs jl  0x1400160ab
   14001606c:	add    al,0xbf
   14001606e:	test   DWORD PTR [rsi+rax*1-0x6],0x129d1dbe
   140016076:	jbe    0x1400160db
   140016078:	stc    
   140016079:	jl     0x140016000
   14001607b:	sahf   
   14001607c:	in     eax,0x29
   14001607e:	popf   
   14001607f:	cmp    al,0xcb
   140016081:	out    dx,eax
   140016082:	(bad)  
   140016083:	neg    DWORD PTR [rcx+0x7ebcbebb]
   140016089:	imul   edi,ebx,0xffffffe6
   14001608c:	(bad)  
   14001608d:	add    esi,DWORD PTR [rcx-0x30]
   140016090:	add    ch,BYTE PTR [rsi+rcx*1+0x64821b63]
   140016097:	stos   BYTE PTR es:[rdi],al
   140016098:	sub    DWORD PTR [rip+0xe35aac1],esp        # 0x14e370b5f
   14001609e:	(bad)  
   14001609f:	fsub   QWORD PTR [rbp+riz*4+0x1f2c1545]
   1400160a6:	cld    
   1400160a7:	in     al,0xe6
   1400160a9:	push   rdi
   1400160aa:	fdiv   st(1),st
   1400160ac:	add    dh,ch
   1400160ae:	clc    
   1400160af:	jrcxz  0x140016100
   1400160b1:	(bad)  
   1400160b2:	fisttp WORD PTR [rbx-0x294fa17f]
   1400160b8:	jae    0x140016076
   1400160ba:	loopne 0x140016125
   1400160bc:	imul   DWORD PTR [rbx-0x52]
   1400160bf:	fisttp WORD PTR [rip+0x3c004fe0]        # 0x17c01b0a5
   1400160c5:	or     edx,DWORD PTR [rdx+rbp*4]
   1400160c8:	sbb    eax,0x78b9ee97
   1400160cd:	(bad)  
   1400160ce:	fistp  QWORD PTR [rsi-0x757aca93]
   1400160d4:	enter  0x2252,0x2
   1400160d8:	(bad)  
   1400160d9:	(bad)  
   1400160da:	outs   dx,DWORD PTR ds:[rsi]
   1400160db:	pop    rcx
   1400160dc:	push   rax
   1400160dd:	test   BYTE PTR [rsp+rdx*8],al
   1400160e0:	or     al,BYTE PTR [rax]
   1400160e2:	add    eax,0x7f042050
   1400160e7:	outs   dx,DWORD PTR ds:[rsi]
   1400160e8:	or     DWORD PTR [rdx+rbp*1-0xf9dfcac],eax
   1400160ef:	or     DWORD PTR [rcx-0x7f7b7dde],esp
   1400160f5:	stos   BYTE PTR es:[rdi],al
   1400160f6:	and    cl,BYTE PTR [rbx-0x24]
   1400160f9:	and    DWORD PTR [rax+0x34acf322],esp
   1400160ff:	(bad)  
   140016100:	rex (bad) 
   140016102:	(bad)  
   140016103:	xor    al,0x3b
   140016105:	mov    WORD PTR [rax-0x3209aeb0],es
   14001610b:	xor    esi,DWORD PTR [rbx-0x25]
   14001610e:	fbld   TBYTE PTR [rcx+rax*4-0x1]
   140016112:	pushf  
   140016113:	repz and esi,DWORD PTR [rax-0xa4a1711]
   14001611a:	rex.WRX (bad) 
   14001611c:	fwait
   14001611d:	lods   eax,DWORD PTR ds:[rsi]
   14001611e:	(bad)  
   14001611f:	loopne 0x140016121
   140016121:	pop    rsp
   140016122:	jl     0x140016118
   140016124:	mov    ch,0xa
   140016126:	jge    0x1400160c3
   140016128:	or     ebx,DWORD PTR [rbx]
   14001612a:	cs add al,0x41
   14001612d:	sub    ebx,DWORD PTR [rcx+0x158dc8a3]
   140016133:	nop
   140016134:	in     al,dx
   140016135:	pop    rsp
   140016136:	xor    cl,al
   140016138:	ror    BYTE PTR [rcx+rbx*1+0x17],0x88
   14001613d:	movabs ds:0x91818bbfe3638b42,al
   140016146:	push   0xffffffffffffffc2
   140016148:	sub    edx,DWORD PTR [rax-0x77]
   14001614b:	mov    edx,0x817aa909
   140016150:	(bad)  
   140016151:	push   rdi
   140016152:	jmp    0x12e7fa418
   140016157:	fstp   TBYTE PTR [rbx-0x2e]
   14001615a:	nop
   14001615b:	(bad)  
   14001615c:	mov    bh,0x9
   14001615e:	stos   DWORD PTR es:[rdi],eax
   14001615f:	movabs ds:0x34bd383a1e1716c7,eax
   140016168:	xor    esi,DWORD PTR [rbx+0x2b490a]
   14001616e:	fimul  WORD PTR [rcx]
   140016170:	shl    DWORD PTR [rbp-0x41536bb1],0xef
   140016177:	test   BYTE PTR [rsi+0x27],cl
   14001617a:	add    ah,cl
   14001617c:	jo     0x1400161bd
   14001617e:	or     BYTE PTR [r8+0x3],r10b
   140016182:	or     dh,dh
   140016184:	or     al,BYTE PTR [rcx-0x4f660e47]
   14001618a:	loope  0x140016150
   14001618c:	(bad)  
   14001618e:	shr    BYTE PTR [rdx+0x4d],1
   140016191:	push   QWORD PTR [rax-0x9bb0976]
   140016197:	adc    al,0xa8
   140016199:	mov    DWORD PTR [rcx-0x4f],eax
   14001619c:	imul   dx,sp,0x20
   1400161a0:	ins    DWORD PTR es:[rdi],dx
   1400161a1:	xchg   ebx,eax
   1400161a2:	and    esp,DWORD PTR [rdx-0x4bcf78f5]
   1400161a8:	and    BYTE PTR [rip+0xfffffffff9db9d98],bl        # 0x139dcff46
   1400161ae:	(bad)  
   1400161af:	(bad)  
   1400161b0:	sti    
   1400161b1:	iret   
   1400161b2:	(bad)  
   1400161b3:	(bad)  
   1400161b4:	cld    
   1400161b5:	rcr    BYTE PTR [rdi],cl
   1400161b7:	mov    ecx,0x5ddfe67c
   1400161bc:	imul   ecx
   1400161be:	(bad)  
   1400161bf:	mov    WORD PTR [rip+0xffffffffbf7696b0],ss        # 0xff77f875
   1400161c5:	out    0xfa,al
   1400161c7:	out    0x3,eax
   1400161c9:	fmul   DWORD PTR [rdi]
   1400161cb:	movabs ds:0xe53db70686eb032d,al
   1400161d4:	repnz pop rbp
   1400161d6:	(bad)  
   1400161d7:	retf   
   1400161d8:	out    0x8d,al
   1400161da:	xchg   ecx,eax
   1400161db:	(bad)  
   1400161dc:	xor    esp,DWORD PTR [rdx]
   1400161de:	and    dh,BYTE PTR [rsp+rbx*4+0x46a82943]
   1400161e5:	je     0x165a96475
   1400161eb:	lea    esi,[rax]
   1400161ed:	or     BYTE PTR [rdx+0x34],bl
   1400161f0:	mov    DWORD PTR [rax+0x40],eax
   1400161f3:	pop    rbx
   1400161f4:	add    eax,0x5080a046
   1400161f9:	shl    ecx,0x14
   1400161fc:	mov    ah,0xc
   1400161fe:	lahf   
   1400161ff:	or     eax,0x26e4d72d
   140016204:	(bad)  
   140016205:	in     al,dx
   140016206:	xchg   ebp,eax
   140016207:	jrcxz  0x1400161b3
   140016209:	xchg   esi,eax
   14001620a:	sahf   
   14001620b:	loope  0x14001620f
   14001620d:	enter  0xb829,0x10
   140016211:	sub    BYTE PTR [rsi+0x42],ah
   140016214:	sub    DWORD PTR [rsp+rdi*2],ebx
   140016217:	(bad)  
   140016218:	movabs eax,ds:0x29dc76a2393d0a11
   140016221:	ins    DWORD PTR es:[rdi],dx
   140016222:	(bad)
   140016225:	mov    ch,0x33
   140016227:	adc    ecx,DWORD PTR [rax-0x71]
   14001622a:	nop
   14001622b:	adc    DWORD PTR [rcx+0x40],ebp
   14001622e:	rex.X (bad) 
   140016230:	adc    al,0xae
   140016232:	jmp    0x18a9cde90
   140016237:	test   ah,bl
   140016239:	add    BYTE PTR [rax+riz*4-0x7],al
   14001623d:	adc    eax,0x185d2682
   140016242:	push   0xffffffffd7acf5b2
   140016247:	rex.X mov ecx,0x30e713c2
   14001624d:	stos   BYTE PTR es:[rdi],al
   14001624e:	mov    ecx,0xa0006209
   140016253:	mov    ch,0x5b
   140016255:	(bad)  
   140016256:	imul   ecx,esp,0xbe8785fd
   14001625c:	xor    eax,0xf8fc7b33
   140016261:	(bad)  
   140016262:	movabs eax,ds:0xbe0753a7f0065f88
   14001626b:	mov    ebx,0xd1d3fdcc
   140016270:	fcmovbe st,st(5)
   140016272:	add    DWORD PTR [rcx-0xcaffc14],0x1afe32a7
   14001627c:	popf   
   14001627d:	shr    ah,1
   14001627f:	fstp   TBYTE PTR [rbx+riz*8+0x343d5e22]
   140016286:	cld    
   140016287:	test   esi,edx
   140016289:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001628a:	jmp    0xe2efa3ae
   14001628f:	rex.B movabs eax,ds:0x153d9b2acf33b927
   140016299:	add    al,BYTE PTR [rax+rbx*1+0xc53c81c]
   1400162a0:	outs   dx,DWORD PTR ss:[rsi]
   1400162a2:	sahf   
   1400162a3:	js     0x140016283
   1400162a5:	push   rbp
   1400162a6:	(bad)  
   1400162a7:	mov    ah,0xf1
   1400162a9:	outs   dx,DWORD PTR ds:[rsi]
   1400162aa:	rex.WRXB (bad) 
   1400162ac:	lods   eax,DWORD PTR cs:[rsi]
   1400162ae:	add    BYTE PTR [rax+0x3c],bl
   1400162b1:	jg     0x14001624a
   1400162b3:	jge    0x140016333
   1400162b5:	imul   ebp,esp,0xd1fabf9d
   1400162bb:	cmp    eax,0x56febdaf
   1400162c0:	(bad)  
   1400162c1:	mov    ecx,0xfcb4bbba
   1400162c6:	mov    esp,0x39ef3bd1
   1400162cb:	mov    dh,0x6d
   1400162cd:	fcomip st,st(6)
   1400162cf:	int    0x43
   1400162d1:	mov    ebx,0xeb2c5f76
   1400162d6:	xchg   DWORD PTR [rdi+0x7d1ac884],eax
   1400162dc:	(bad)  
   1400162dd:	add    al,0x72
   1400162df:	out    dx,eax
   1400162e0:	mov    al,al
   1400162e2:	(bad)  
   1400162e3:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400162e4:	in     eax,dx
   1400162e5:	sub    eax,0xb1081088
   1400162ea:	or     cl,BYTE PTR [rax]
   1400162ec:	lods   al,BYTE PTR ds:[rsi]
   1400162ed:	sub    edx,DWORD PTR [rcx]
   1400162ef:	(bad)  
   1400162f0:	add    ah,BYTE PTR [rbp+rcx*8+0x40e15160]
   1400162f7:	or     al,0x44
   1400162f9:	sbb    DWORD PTR [rbx+0x28],0x36
   1400162fd:	pop    rdx
   1400162fe:	lahf   
   1400162ff:	pop    rdx
   140016300:	(bad)  
   140016301:	outs   dx,DWORD PTR ds:[rsi]
   140016302:	or     BYTE PTR [rcx],ah
   140016304:	(bad)  
   140016305:	xor    al,0x22
   140016307:	int    0xd2
   140016309:	repz xchg esp,eax
   14001630b:	pop    rsi
   14001630c:	addr32 rex.W
   14001630e:	sub    eax,DWORD PTR ss:[rdx+rcx*4+0x46]
   140016313:	sub    BYTE PTR [rip+0x358d6ae3],0x98        # 0x1758ecdfd
   14001631a:	mov    ebx,0x7b8a7440
   14001631f:	adc    BYTE PTR [rax],al
   140016321:	lods   eax,DWORD PTR ds:[rsi]
   140016322:	mov    eax,DWORD PTR [rax-0x338efd56]
   140016328:	(bad)  
   140016329:	push   0xfffffffffffffffc
   14001632b:	xchg   ecx,eax
   14001632c:	pop    rsi
   14001632d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001632e:	sahf   
   14001632f:	(bad)  [rbx+0x7f]
   140016332:	rex
   140016333:	ss add eax,0x339fe832
   140016339:	(bad)  
   14001633a:	(bad)  
   14001633c:	(bad)  
   14001633d:	push   0x32
   14001633f:	in     eax,dx
   140016340:	sbb    al,0xa1
   140016342:	mov    ebp,0x9795bd13
   140016347:	sub    BYTE PTR [rax-0x6b65f6b9],al
   14001634d:	rol    DWORD PTR [rbp-0x3a],cl
   140016350:	and    al,0x3c
   140016352:	movabs ds:0x9a82746a25e1800f,eax
   14001635b:	mov    cl,BYTE PTR [rbp+0x17]
   14001635e:	adc    BYTE PTR [rax+0x41],ah
   140016361:	pop    rsp
   140016362:	pop    rax
   140016363:	test   al,0x97
   140016365:	(bad)  
   140016366:	fistp  QWORD PTR [rdi]
   140016368:	xor    edi,ebp
   14001636a:	lock sar DWORD PTR [rcx],1
   14001636d:	retf   
   14001636e:	add    edi,DWORD PTR [rsi]
   140016370:	(bad)  
   140016371:	enter  0xa79b,0xe
   140016375:	in     al,dx
   140016376:	call   rsp
   140016378:	mov    ecx,0x3e170999
   14001637d:	popf   
   14001637e:	(bad)  
   14001637f:	mov    edx,0x68003733
   140016384:	lods   al,BYTE PTR ds:[rsi]
   140016385:	add    BYTE PTR [rax+0x56e7a79],ah
   14001638b:	hlt    
   14001638c:	pop    rdx
   14001638d:	add    ah,BYTE PTR [rdi]
   14001638f:	ds jne 0x140016375
   140016392:	imul   ebp
   140016394:	fidivr WORD PTR [rbx-0x11]
   140016397:	(bad)  
   140016398:	and    DWORD PTR [rcx+0x5d545f05],esi
   14001639e:	xchg   edx,eax
   14001639f:	scas   eax,DWORD PTR es:[rdi]
   1400163a0:	or     al,0xdc
   1400163a2:	adc    al,0xad
   1400163a4:	(bad)  
   1400163a5:	rex.WB call 0x112ab23ed
   1400163ab:	sub    al,0x3a
   1400163ad:	stos   DWORD PTR es:[rdi],eax
   1400163ae:	je     0x140016381
   1400163b0:	mov    dl,0x32
   1400163b2:	(bad)  
   1400163b3:	(bad)  
   1400163b6:	fidiv  WORD PTR [rdi]
   1400163b8:	mov    edi,0x7fcffa65
   1400163bd:	not    BYTE PTR [rip+0xffffffffde7b9ecf]        # 0x11e7d0292
   1400163c3:	jmp    0x1400163a3
   1400163c5:	stc    
   1400163c6:	test   BYTE PTR [rbp-0x430963fe],dh
   1400163cc:	out    0xba,al
   1400163ce:	sqrtps xmm7,XMMWORD PTR [ebp-0x96aa281]
   1400163d6:	lods   eax,DWORD PTR ds:[rsi]
   1400163d7:	(bad)  
   1400163d8:	add    BYTE PTR [rbx],bl
   1400163da:	ja     0x1400163cb
   1400163dc:	fnstenv [rax+rsi*4]
   1400163df:	addr32 out dx,eax
   1400163e1:	ss pop rsi
   1400163e3:	(bad)  
   1400163e4:	cmp    al,cl
   1400163e6:	fs nop
   1400163e8:	or     BYTE PTR [rcx],dl
   1400163ea:	stos   BYTE PTR es:[rdi],al
   1400163eb:	rex.WX add rax,0x6d9ab524
   1400163f1:	push   rdx
   1400163f2:	test   eax,0x57df249c
   1400163f7:	jmp    0xe412b4ba
   1400163fc:	adc    eax,0x4d3042d4
   140016401:	(bad)
   140016405:	pop    rdx
   140016406:	(bad)  
   140016407:	jbe    0x1400163f9
   140016409:	rex.RX movabs al,ds:0x6d89acfa8bab58a4
   140016413:	jg     0x140016485
   140016415:	pop    rcx
   140016416:	out    dx,eax
   140016417:	movabs eax,ds:0x37f541ab379bc6c2
   140016420:	mov    ecx,0x408b705a
   140016425:	(bad)  
   140016426:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140016427:	lahf   
   140016428:	xchg   DWORD PTR [rbx+0x73],ecx
   14001642b:	pushf  
   14001642c:	retf   
   14001642d:	stc    
   14001642e:	lods   al,BYTE PTR ds:[rsi]
   14001642f:	cmp    al,BYTE PTR [rax+rsi*8]
   140016432:	test   DWORD PTR [rdx+rsi*4-0x45],eax
   140016436:	and    BYTE PTR [rdx],al
   140016438:	mov    cl,BYTE PTR [rbp-0x34]
   14001643b:	mov    BYTE PTR [rcx],ah
   14001643d:	sub    dl,ah
   14001643f:	or     al,0xb
   140016441:	adc    dh,dl
   140016443:	pushfw 
   140016445:	ss (bad) 
   140016447:	sbb    ch,BYTE PTR [rdi+0x8]
   14001644a:	mov    eax,0x8fbd342e
   14001644f:	cmc    
   140016450:	pop    rsp
   140016451:	jle    0x1400164c3
   140016453:	(bad)  
   140016454:	sbb    BYTE PTR [rcx],ah
   140016456:	out    dx,al
   140016457:	sbb    ah,BYTE PTR [rsi+riz*4+0x69009343]
   14001645e:	jle    0x14001641e
   140016460:	pop    rsi
   140016461:	jl     0x14001644b
   140016463:	sbb    DWORD PTR [rcx-0x19b8dc57],0xc8826291
   14001646d:	xor    al,BYTE PTR [rax-0x28dfe89]
   140016473:	(bad)  
   140016474:	cmp    ebp,0x7cfaf98f
   14001647a:	(bad)  
   14001647b:	(bad)  
   14001647c:	popf   
   14001647d:	add    r12b,bl
   140016480:	loop   0x140016474
   140016482:	sbb    al,0x8f
   140016484:	push   rsp
   140016485:	or     BYTE PTR [rdi+rdi*4],bl
   140016488:	div    DWORD PTR [rax-0x4b]
   14001648b:	imul   esp,ebp,0x3
   14001648e:	out    dx,eax
   14001648f:	imul   ecx,DWORD PTR [rdi],0x4d
   140016492:	std    
   140016493:	sbb    BYTE PTR [rax+0x48],bl
   140016496:	lahf   
   140016497:	adc    al,0x0
   140016499:	xor    ch,ah
   14001649b:	loop   0x140016494
   14001649d:	and    al,0xa4
   14001649f:	push   rax
   1400164a0:	scas   eax,DWORD PTR es:[rdi]
   1400164a1:	rol    ebx,0x62
   1400164a4:	ins    DWORD PTR es:[rdi],dx
   1400164a5:	jno    0x140016463
   1400164a7:	test   DWORD PTR [rbx],ecx
   1400164a9:	and    DWORD PTR [rax],0xffffffd4
   1400164ac:	std    
   1400164ad:	(bad)  
   1400164ae:	mov    bh,0x6e
   1400164b0:	sti    
   1400164b1:	mov    ch,0x5b
   1400164b3:	mov    edi,0xfab8ef19
   1400164b8:	ret    
   1400164b9:	jg     0x14001646d
   1400164bb:	adc    al,0xe8
   1400164bd:	fistp  QWORD PTR [rcx+riz*8]
   1400164c0:	mov    al,0x0
   1400164c2:	add    BYTE PTR [rax+0x502fc0fb],bl
   1400164c8:	addr32 jno 0x140016541
   1400164cb:	repz mov dh,0xcd
   1400164ce:	adc    edx,DWORD PTR [rdi+0x4383d5ce]
   1400164d4:	jg     0x14001654a
   1400164d6:	iret   
   1400164d7:	jae    0x140016558
   1400164d9:	(bad)  
   1400164da:	jmp    0x14001648f
   1400164dc:	jnp    0x1400164dd
   1400164de:	in     eax,dx
   1400164df:	ins    BYTE PTR es:[rdi],dx
   1400164e0:	mov    ebp,0xcb2cb6e
   1400164e5:	xchg   BYTE PTR [rbx+0x3cd9edf7],cl
   1400164eb:	mov    ah,0x67
   1400164ed:	out    dx,eax
   1400164ee:	mov    dh,0x38
   1400164f0:	cmp    al,dl
   1400164f2:	jbe    0x140016567
   1400164f4:	pop    rsi
   1400164f5:	mov    ch,0xb7
   1400164f7:	(bad)  
   1400164f8:	rex.WB fcomp QWORD PTR [r15-0x555feff1]
   1400164ff:	(bad)  
   140016500:	mov    cl,0x13
   140016502:	repz stc 
   140016504:	sbb    DWORD PTR [rdx+0x2d0115ee],0x15
   14001650b:	add    BYTE PTR [rcx],ah
   14001650d:	rex cdq 
   14001650f:	fisttp WORD PTR [rdi+0x661f9375]
   140016515:	out    0x9b,al
   140016517:	jg     0x1400164a9
   140016519:	(bad)  
   14001651a:	push   rdi
   14001651b:	add    BYTE PTR [rcx],dh
   14001651d:	jmp    0x16ce71594
   140016522:	lock movsxd ecx,edx
   140016525:	rex.WRB shl QWORD PTR [r9+0x12e9dedf],0x2
   14001652d:	xor    eax,0x1c52feb9
   140016532:	push   rbx
   140016533:	cwde   
   140016534:	or     ah,BYTE PTR [rsi+rdi*1+0x41]
   140016538:	sub    cl,BYTE PTR [rdi]
   14001653a:	mov    ah,0x16
   14001653c:	xchg   edx,eax
   14001653d:	in     al,dx
   14001653e:	addr32 mov ah,0x24
   140016541:	movabs al,ds:0x1618dd135208a19c
   14001654a:	data16 out 0xa7,al
   14001654d:	rex.X movs DWORD PTR es:[rdi],DWORD PTR fs:[rsi]
   140016550:	xor    ah,BYTE PTR cs:[rax]
   140016553:	xchg   ebx,eax
   140016554:	or     eax,DWORD PTR [rax]
   140016556:	lea    edi,[rsi+0x78]
   140016559:	mov    bl,0x80
   14001655b:	fs stc 
   14001655d:	(bad)  
   14001655e:	or     eax,0xb48201e
   140016563:	mov    esi,ebp
   140016565:	ret    0xfba1
   140016568:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
   14001656a:	(bad)  
   14001656b:	xor    cl,BYTE PTR ds:[rdi-0x401cc4a8]
   140016572:	(bad)  
   140016573:	shl    BYTE PTR [rbp+0x53],0x7
   140016577:	scas   al,BYTE PTR es:[rdi]
   140016578:	sahf   
   140016579:	sti    
   14001657a:	mov    ds,WORD PTR [rsi]
   14001657c:	hlt    
   14001657d:	adc    ebx,DWORD PTR [rsi+rcx*2-0x7fffffd5]
   140016584:	in     eax,0x96
   140016586:	push   rax
   140016587:	loopne 0x140016589
   140016589:	fild   WORD PTR [rsi+0x8]
   14001658c:	cwde   
   14001658d:	sub    eax,0xe6ee600b
   140016592:	ja     0x140016551
   140016594:	(bad)  
   140016595:	retf   
   140016596:	mov    es,WORD PTR [rdi-0x6b18c301]
   14001659c:	ret    0xbeb4
   14001659f:	(bad)  
   1400165a0:	(bad)  
   1400165a1:	xchg   DWORD PTR [rcx+riz*4+0x51],ebx
   1400165a5:	and    esp,DWORD PTR [rdx]
   1400165a7:	fst    DWORD PTR [rdx+0x48a08c95]
   1400165ad:	lea    esp,[rbx]
   1400165af:	(bad)  
   1400165b0:	rex sbb eax,0xe6b81f87
   1400165b6:	popf   
   1400165b7:	fst    QWORD PTR [rdi-0x53]
   1400165ba:	(bad)  
   1400165bb:	mov    esi,0xeb7f26cb
   1400165c0:	(bad)  
   1400165c1:	(bad)  
   1400165c2:	(bad)  
   1400165c3:	cmp    DWORD PTR [rdi],ecx
   1400165c5:	xlat   BYTE PTR ds:[rbx]
   1400165c6:	jge    0x1400165a6
   1400165c8:	push   0x40bf03ee
   1400165cd:	rcr    BYTE PTR [rbp-0x22964a27],cl
   1400165d3:	in     al,0x53
   1400165d5:	movabs rsp,0x5bbb471cc09056c
   1400165df:	jg     0x140016651
   1400165e1:	xlat   BYTE PTR ds:[rbx]
   1400165e2:	repz sahf 
   1400165e4:	jge    0x1400165b5
   1400165e6:	ret    0x5f8e
   1400165e9:	pop    rdx
   1400165ea:	rex.WX
   1400165eb:	rex.XB
   1400165ec:	fwait
   1400165ed:	cmp    dl,dl
   1400165ef:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400165f0:	ins    DWORD PTR es:[rdi],dx
   1400165f1:	xchg   edi,eax
   1400165f2:	out    dx,al
   1400165f3:	mov    ebp,0xdecf7068
   1400165f8:	mov    esp,DWORD PTR [rbx+0x7b]
   1400165fb:	movabs al,ds:0x127b8190240819c5
   140016604:	or     BYTE PTR [rcx],ah
   140016606:	push   rsp
   140016607:	and    BYTE PTR [rdx-0x3d],ah
   14001660a:	lar    eax,WORD PTR [rdx+0x45]
   14001660e:	stos   BYTE PTR es:[rdi],al
   14001660f:	shr    DWORD PTR [rcx],0x64
   140016612:	rcr    DWORD PTR [rsi+rax*1+0xc],cl
   140016616:	and    eax,DWORD PTR [rax]
   140016618:	in     al,dx
   140016619:	pop    rax
   14001661a:	adc    eax,DWORD PTR [rax+rax*2]
   14001661d:	(bad)  
   14001661e:	(bad)  
   14001661f:	rol    DWORD PTR [rax+rax*2+0x2938f65],0x7a
   140016627:	int    0x7a
   140016629:	push   0xffffffffffffff92
   14001662b:	jns    0x1400165b7
   14001662d:	rex.WRB fldenv [r9]
   140016630:	pop    rsp
   140016631:	jmp    0x140016636
   140016633:	fs pop rsp
   140016635:	sub    BYTE PTR [rax],0x97
   140016638:	xchg   ebp,esp
   14001663a:	jge    0x140016610
   14001663c:	push   0xffffffffe271b17a
   140016641:	nop
   140016642:	mov    edi,0x1710b720
   140016647:	add    dh,bl
   140016649:	shl    BYTE PTR [rcx+rdi*2],1
   14001664c:	imul   esp,DWORD PTR [rcx+rdx*4-0x22],0xd75203ec
   140016654:	jmp    0x140016660
   140016656:	sub    BYTE PTR [rbx-0x67],bh
   140016659:	(bad)  
   14001665a:	ret    
   14001665b:	xlat   BYTE PTR ds:[rbx]
   14001665c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001665d:	mov    edi,0xa8a49ad9
   140016662:	and    BYTE PTR [rax-0x4f],ah
   140016665:	jo     0x14001660a
   140016667:	or     dl,dl
   140016669:	fadd   QWORD PTR [rdx+0x77]
   14001666c:	icebp  
   14001666d:	lock rcr ecx,0xa9
   140016671:	xchg   DWORD PTR [rdi],ebx
   140016673:	sahf   
   140016674:	xchg   edi,eax
   140016675:	adc    al,0x13
   140016677:	cwde   
   140016678:	mov    edi,0xe9df19e7
   14001667d:	fisttp DWORD PTR [rcx]
   14001667f:	adc    BYTE PTR [rdx-0x3d],0xa3
   140016683:	sar    dl,1
   140016685:	pop    rax
   140016686:	and    eax,DWORD PTR [rax+riz*8]
   140016689:	push   rsi
   14001668a:	rcr    BYTE PTR [rip+0xffffffffad2bfdff],0xab        # 0xed2d6490
   140016691:	jbe    0x140016711
   140016693:	cli    
   140016694:	and    edx,ebp
   140016696:	rol    dl,0x95
   140016699:	sub    ch,BYTE PTR [rsi+0x34ec71b9]
   14001669f:	rex.WRX movabs ds:0x89cbbef100352199,rax
   1400166a9:	loopne 0x140016694
   1400166ab:	jmp    0xd72c00dc
   1400166b0:	cwde   
   1400166b1:	(bad)  
   1400166b2:	xchg   edi,eax
   1400166b3:	jbe    0x140016731
   1400166b5:	loopne 0x1400166b6
   1400166b7:	mov    ebp,0x3f8de166
   1400166bc:	std    
   1400166bd:	movabs ds:0xc171deebde785d9f,al
   1400166c6:	mov    ebx,0x97fcf702
   1400166cb:	addr32 or eax,0xdeafb25c
   1400166d1:	mov    ebx,0xc9ea7061
   1400166d6:	add    al,0xb4
   1400166d8:	shr    DWORD PTR [rbx+rcx*4+0x22d5d8fa],0x49
   1400166e0:	rex.R movabs al,ds:0x7fda5efcc7789608
   1400166ea:	(bad)  
   1400166ec:	repnz cld 
   1400166ee:	xchg   ecx,eax
   1400166ef:	(bad)  
   1400166f0:	rex.WRB movabs r15,0x8b843c8bc3032ab4
   1400166fa:	imul   ebp
   1400166fc:	fidiv  DWORD PTR [rsp+rsi*4]
   1400166ff:	jnp    0x1400166f8
   140016701:	rex.RB (bad) 
   140016703:	xchg   cl,ah
   140016705:	jne    0x1400166d8
   140016707:	in     al,dx
   140016708:	jae    0x14001672c
   14001670a:	rex.X test al,0xdc
   14001670d:	(bad)  
   14001670e:	push   rdi
   14001670f:	loope  0x140016751
   140016711:	(bad)  
   140016712:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140016713:	adc    eax,0xa0e88019
   140016718:	popf   
   140016719:	sbb    BYTE PTR [r8-0x70],r8b
   14001671d:	add    DWORD PTR [rdi],eax
   14001671f:	add    DWORD PTR [rip+0xffffffff9b182c44],ecx        # 0xdb199369
   140016725:	jb     0x1400166ff
   140016727:	scas   eax,DWORD PTR es:[rdi]
   140016728:	stc    
   140016729:	in     eax,dx
   14001672a:	sbb    ecx,edx
   14001672c:	(bad)  
   14001672d:	cmp    ch,BYTE PTR [rbp+0xf0d8716]
   140016733:	xchg   esi,eax
   140016734:	in     eax,0x57
   140016736:	outs   dx,BYTE PTR ds:[rsi]
   140016737:	add    esi,DWORD PTR [rdx+rdi*1+0x36bbdb4f]
   14001673e:	sti    
   14001673f:	xlat   BYTE PTR ds:[rbx]
   140016740:	adc    al,0x99
   140016742:	in     al,0x65
   140016744:	mov    esp,0x57c66400
   140016749:	jmp    0x14001678b
   14001674b:	jae    0x14001675d
   14001674d:	add    eax,0xa4d0a776
   140016752:	sti    
   140016753:	sub    dl,dl
   140016755:	iret   
   140016756:	(bad)  
   140016757:	repz repz mov ebp,0xabd9624f
   14001675e:	rcl    DWORD PTR [rcx-0x574a1082],1
   140016764:	outs   dx,BYTE PTR ds:[rsi]
   140016765:	add    DWORD PTR [rbx],esp
   140016767:	and    al,0x60
   140016769:	cmc    
   14001676a:	in     al,0xf8
   14001676c:	bnd ret 0x87d1
   140016770:	out    0x66,al
   140016772:	mov    cs,WORD PTR [rdi+0x1645222e]
   140016778:	xchg   esi,eax
   140016779:	rex fimul WORD PTR gs:[rbx]
   14001677d:	loopne 0x140016759
   14001677f:	out    dx,eax
   140016780:	jne    0x140016748
   140016782:	ja     0x1400167be
   140016784:	movabs ds:0xd1eb8c5015b20000,eax
   14001678d:	cli    
   14001678e:	sub    BYTE PTR [rsi+0x789c1001],dh
   140016794:	push   0xfffffffff03e0c24
   140016799:	rcl    DWORD PTR [rdi],0x6c
   14001679c:	fnstsw WORD PTR [rbp-0x14]
   14001679f:	mov    edi,0xb64a5ce5
   1400167a4:	cmp    BYTE PTR [rbx+0x1989bfc3],cl
   1400167aa:	xor    eax,0xe600132a
   1400167af:	fdiv   QWORD PTR [rcx]
   1400167b1:	and    eax,DWORD PTR [rcx-0x75]
   1400167b4:	jmp    0x16465c18e
   1400167b9:	out    0x99,al
   1400167bb:	mov    ecx,0xc77eef7d
   1400167c0:	jnp    0x140016759
   1400167c2:	fistp  QWORD PTR [rcx-0x27]
   1400167c5:	xor    ebp,DWORD PTR [rdi]
   1400167c7:	pop    rdi
   1400167c8:	jl     0x1400167b3
   1400167ca:	fwait
   1400167cb:	outs   dx,BYTE PTR ds:[rsi]
   1400167cc:	in     al,dx
   1400167cd:	mov    cl,0x22
   1400167cf:	(bad)  
   1400167d0:	adc    al,0x3a
   1400167d2:	icebp  
   1400167d3:	(bad)  
   1400167d4:	push   rbx
   1400167d6:	(bad)  
   1400167d7:	int    0xc3
   1400167d9:	rcl    DWORD PTR [rdi+0xe],cl
   1400167dc:	mov    ch,0x17
   1400167de:	imul   DWORD PTR [rcx]
   1400167e0:	sub    ah,BYTE PTR [rip+0x22094411]        # 0x1620aabf7
   1400167e6:	xor    eax,0x1a960c40
   1400167eb:	rex or eax,0x199f6491
   1400167f1:	add    ebp,ebx
   1400167f3:	outs   dx,BYTE PTR ds:[rsi]
   1400167f4:	xchg   DWORD PTR [rsi-0xa],edx
   1400167f7:	(bad)  
   1400167f9:	in     al,dx
   1400167fa:	cli    
   1400167fb:	xchg   cl,bh
   1400167fd:	(bad)  
   1400167fe:	jnp    0x140016799
   140016800:	push   rsp
   140016801:	add    edi,edi
   140016803:	(bad)  
   140016804:	xor    DWORD PTR [rsi],0xa2e15420
   14001680a:	popf   
   14001680b:	pop    rbx
   14001680c:	xlat   BYTE PTR ds:[rbx]
   14001680d:	(bad)  
   14001680f:	(bad)  [rcx-0x29248f87]
   140016815:	or     eax,0x125555a9
   14001681a:	adc    al,0x14
   14001681c:	or     al,0x16
   14001681e:	repnz or eax,DWORD PTR [rcx+0x6900f7b4]
   140016825:	(bad)  
   140016826:	add    DWORD PTR [rcx+0x2a815081],eax
   14001682c:	pop    QWORD PTR [rax]
   14001682e:	stos   BYTE PTR es:[rdi],al
   14001682f:	out    0x27,al
   140016831:	rex.RXB
   140016832:	lock pop rbx
   140016834:	mov    bl,BYTE PTR [rcx]
   140016836:	rex ja 0x14001685a
   140016839:	or     ch,dh
   14001683b:	(bad)  
   14001683c:	lock cmp al,0x84
   14001683f:	cwde   
   140016840:	(bad)  
   140016841:	add    BYTE PTR [rcx],bh
   140016843:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140016844:	sub    edx,DWORD PTR [rbx+rdx*8]
   140016847:	ret    
   140016848:	xor    eax,0x3cb79a3d
   14001684d:	sbb    esi,DWORD PTR [rdx+0x123d6095]
   140016853:	jp     0x140016887
   140016855:	rex pop rax
   140016857:	jge    0x1400168d5
   140016859:	xor    dl,BYTE PTR [rbx+0x447bfc5c]
   14001685f:	adc    DWORD PTR [rdx+rcx*1-0x72],edi
   140016863:	lock jmp 0x14001687f
   140016866:	pop    rbp
   140016867:	jmp    0x1400167f4
   140016869:	rex.WRB add rax,0x56c9de2f
   14001686f:	add    DWORD PTR [rax+0x4b],ebx
   140016872:	scas   eax,DWORD PTR es:[rdi]
   140016873:	rex.WRB xchg r15,rax
   140016875:	mov    BYTE PTR [rax],cl
   140016877:	enter  0x8592,0x0
   14001687b:	sub    DWORD PTR [rbp*4+0x6391e5a4],0xa3a38b0b
   140016886:	rex.WXB
   140016887:	repz jrcxz 0x14001689d
   14001688a:	retf   
   14001688b:	xchg   esi,eax
   14001688c:	adc    BYTE PTR [rax],dh
   14001688e:	and    eax,0xbde3a8da
   140016893:	jge    0x14001685b
   140016895:	out    dx,eax
   140016896:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140016897:	outs   dx,DWORD PTR ds:[rsi]
   140016898:	sub    eax,DWORD PTR [rax]
   14001689a:	adc    bl,0xa
   14001689d:	xor    DWORD PTR [rip+0xffffffffb7f94056],0xedffa3e0        # 0xf7faa8fd
   1400168a7:	add    ebp,DWORD PTR [rbp+0x3c8fce7]
   1400168ad:	xlat   BYTE PTR ds:[rbx]
   1400168ae:	movd   mm3,DWORD PTR [rsi+rdi*8-0x38ca7f97]
   1400168b6:	add    eax,0x82336dc9
   1400168bb:	pop    rax
   1400168bc:	add    eax,0xba2e1778
   1400168c1:	sub    esi,DWORD PTR [rbp+0x11]
   1400168c4:	(bad)  
   1400168c5:	xor    BYTE PTR [rsi],ch
   1400168c7:	jmp    0x171228924
   1400168cc:	int    0x2e
   1400168ce:	in     al,dx
   1400168cf:	jnp    0x1400168a8
   1400168d1:	xor    eax,0xe3be2dd7
   1400168d6:	repnz (bad) 
   1400168d8:	mov    edi,0x1142f962
   1400168dd:	add    dh,BYTE PTR [rbx+0x7f]
   1400168e0:	(bad)  
   1400168e1:	mov    esp,0x9fe77496
   1400168e6:	mov    ah,0x7e
   1400168e8:	(bad)  
   1400168e9:	loop   0x140016872
   1400168eb:	pop    rbx
   1400168ec:	push   rsp
   1400168ed:	cmovb  ebp,DWORD PTR [rdi-0x80]
   1400168f1:	shl    BYTE PTR ss:[rbp-0x57],1
   1400168f5:	adc    DWORD PTR [rax],ebp
   1400168f7:	imul   esp,ebx,0xd7749cf9
   1400168fd:	add    DWORD PTR [rbx],esi
   1400168ff:	add    esp,DWORD PTR [rcx]
   140016901:	(bad)
   140016904:	cmc    
   140016905:	cmp    eax,DWORD PTR [rdi]
   140016907:	(bad)  
   140016908:	(bad)  
   140016909:	loop   0x140016938
   14001690b:	xchg   DWORD PTR [rsi],edx
   14001690d:	cmp    ebp,DWORD PTR [rbx+0x77880231]
   140016913:	std    
   140016914:	loop   0x1400168eb
   140016916:	(bad)  
   140016917:	ret    0xa7ae
   14001691a:	cmp    al,0x1f
   14001691c:	rex.R (bad) 
   14001691e:	(bad)  
   14001691f:	lock add esp,DWORD PTR [rax-0x12af5f00]
   140016926:	mov    esp,0xa196f76c
   14001692b:	pop    rbp
   14001692c:	jnp    0x14001695d
   14001692e:	movabs ds:0xb501f9948983430d,al
   140016937:	or     dh,BYTE PTR [rdx]
   140016939:	sub    bl,BYTE PTR [rdi]
   14001693b:	or     al,0x34
   14001693d:	xor    al,0xa1
   14001693f:	loopne 0x1400168e2
   140016941:	add    BYTE PTR [rdi-0x5],dh
   140016944:	test   eax,0x8d001370
   140016949:	adc    BYTE PTR [rax+0x2c9aa800],bh
   14001694f:	(bad)  
   140016950:	jnp    0x140016905
   140016952:	jrcxz  0x14001696d
   140016954:	push   0xffffffffffffff81
   140016956:	cmp    BYTE PTR [rdx],cl
   140016958:	add    al,0xd2
   14001695a:	in     al,0xef
   14001695c:	es (bad) 
   14001695e:	sbb    DWORD PTR [rsi+0x10e42b43],0x5f
   140016965:	iret   
   140016966:	xchg   esp,eax
   140016967:	jb     0x14001691c
   140016969:	fistp  WORD PTR [rsi]
   14001696b:	test   eax,0xe6ba8283
   140016970:	xchg   esp,eax
   140016971:	jle    0x14001693d
   140016973:	pop    rdx
   140016974:	fcmovne st,st(7)
   140016976:	imul   ebx,DWORD PTR [rip+0x599377],0x0        # 0x1405afcf4
   14001697d:	xor    al,0xad
   14001697f:	mov    edx,0xa2a1d848
   140016984:	add    dh,cl
   140016986:	sub    BYTE PTR [rcx+0xb000000],bh
   14001698c:	rex.WR
   14001698d:	rex.WB
   14001698e:	rex.R
   14001698f:	push   r12
   140016991:	rex.W
   140016992:	adc    BYTE PTR [rdx-0x6e],r12b
   140016996:	(bad)  
   140016997:	icebp  
   140016998:	mov    ebp,esp
   14001699a:	(bad)
   14001699d:	(bad)  
   14001699e:	rex.WRX sbb rax,0xffffffffac40591b
   1400169a4:	fst    DWORD PTR [rdx]
   1400169a6:	shr    esi,cl
   1400169a8:	add    al,0xf0
   1400169aa:	ds adc ecx,edi
   1400169ad:	call   0xffaceb86
   1400169b2:	imul   esp,DWORD PTR [rbx-0x7],0xffffff8f
   1400169b6:	xchg   BYTE PTR [rsi],bl
   1400169b8:	mov    DWORD PTR [rax],eax
   1400169ba:	pop    rax
   1400169bb:	jrcxz  0x1400169c7
   1400169bd:	add    BYTE PTR [rbx+0x4c],ch
   1400169c0:	call   FWORD PTR [rsi+0x7aef476d]
   1400169c6:	or     BYTE PTR [rbx+0x5f],cl
   1400169c9:	std    
   1400169ca:	lock push rbx
   1400169cc:	jle    0x1400169ae
   1400169ce:	stos   BYTE PTR es:[rdi],al
   1400169cf:	icebp  
   1400169d0:	jg     0x1400169f2
   1400169d2:	stos   BYTE PTR es:[rdi],al
   1400169d3:	(bad)  
   1400169d4:	pop    rbx
   1400169d5:	ret    0x138
   1400169d8:	(bad)  
   1400169d9:	fst    QWORD PTR [rip+0x20a1a818]        # 0x160a311f7
   1400169df:	and    eax,eax
   1400169e1:	mul    BYTE PTR [rbp+rbx*8+0x70c900d]
   1400169e8:	or     ebp,ebx
   1400169ea:	xor    al,0x4c
   1400169ec:	test   al,0x97
   1400169ee:	mov    ebx,0x91f23f3b
   1400169f3:	rex.WRXB retf 
   1400169f5:	fwait
   1400169f6:	rol    DWORD PTR [rbp+0x4f],cl
   1400169f9:	(bad)  
   1400169fa:	jp     0x1400169b8
   1400169fc:	test   al,al
   1400169fe:	in     al,dx
   1400169ff:	fistp  QWORD PTR [rdi]
   140016a01:	mov    edi,0xfb4b3a95
   140016a06:	xchg   bl,bl
   140016a08:	mov    bl,0x97
   140016a0a:	(bad)  
   140016a0c:	out    0x9f,al
   140016a0e:	lods   al,BYTE PTR ds:[rsi]
   140016a0f:	js     0x140016996
   140016a11:	or     BYTE PTR [rax+0xad1011a],al
   140016a17:	jmp    0x141133634
   140016a1c:	or     DWORD PTR [rsi+rcx*1+0x7488200],ecx
   140016a23:	movabs al,ds:0xec6ad6fe7f2c9294
   140016a2c:	cli    
   140016a2d:	jmp    0x140016a76
   140016a2f:	xchg   esi,eax
   140016a30:	xchg   edi,eax
   140016a31:	(bad)  
   140016a32:	jmp    0x140016a3c
   140016a34:	adc    eax,0x2a401181
   140016a39:	xchg   edi,eax
   140016a3a:	rex.XB (bad) 
   140016a3d:	(bad)  
   140016a3e:	imul   ebp,DWORD PTR [rdi+0x12f002],0xffffffcf
   140016a45:	add    eax,0x551090d1
   140016a4a:	fwait
   140016a4b:	mov    dh,0x6d
   140016a4d:	sbb    DWORD PTR [rsi-0x41],ebx
   140016a50:	movsxd ebx,ebx
   140016a52:	xchg   cl,al
   140016a54:	mov    esi,DWORD PTR [rdi-0x2814f793]
   140016a5a:	or     eax,0x1e18824
   140016a5f:	ror    ah,1
   140016a61:	(bad)  
   140016a62:	(bad)  
   140016a63:	pop    rdx
   140016a64:	pop    rsi
   140016a65:	(bad)  
   140016a66:	or     al,BYTE PTR [rsi]
   140016a68:	xor    dl,BYTE PTR [rdi-0x3e]
   140016a6b:	xor    DWORD PTR [rax-0x36],eax
   140016a6e:	ficomp DWORD PTR [rdx]
   140016a70:	rex.X or bpl,bpl
   140016a73:	pop    rsi
   140016a74:	add    DWORD PTR [rax+0xee2a0c0],esp
   140016a7a:	jns    0x140016a2f
   140016a7c:	add    DWORD PTR [rax-0x1d56658c],eax
   140016a82:	or     eax,0x20249a43
   140016a87:	jae    0x140016aaa
   140016a89:	(bad)  
   140016a8a:	(bad)  
   140016a8b:	mov    esi,esi
   140016a8d:	in     eax,dx
   140016a8e:	rcl    bl,cl
   140016a90:	push   0xffffffffffffffa6
   140016a92:	(bad)  
   140016a93:	sbb    al,0x80
   140016a95:	cmp    BYTE PTR [rbx+0x30362fd0],0x10
   140016a9c:	fsub   st(0),st
   140016a9e:	(bad)  
   140016a9f:	loopne 0x140016ad6
   140016aa1:	clc    
   140016aa2:	leave  
   140016aa3:	add    BYTE PTR [rcx-0x3d],al
   140016aa6:	xchg   ebx,eax
   140016aa7:	test   eax,0x3e32b24e
   140016aac:	mov    cl,0xbc
   140016aae:	xor    al,0x7a
   140016ab0:	ins    BYTE PTR es:[rdi],dx
   140016ab1:	jno    0x140016a95
   140016ab3:	call   0xe75eb0a9
   140016ab8:	cmp    eax,0x1e78409
   140016abd:	jl     0x140016ac3
   140016abf:	rcr    bh,0x4f
   140016ac2:	fdivp  st(0),st
   140016ac4:	xchg   edi,esi
   140016ac6:	pushf  
   140016ac7:	cmc    
   140016ac8:	cmp    esi,0x1e
   140016acb:	movabs ds:0x38a0423d0000567f,eax
   140016ad4:	out    dx,al
   140016ad5:	xchg   esp,eax
   140016ad6:	mov    BYTE PTR [rax-0x42b07201],al
   140016adc:	repz ret 
   140016ade:	loope  0x140016a79
   140016ae0:	mov    ebx,0xb6e17c1f
   140016ae5:	cmp    eax,0xa359ff23
   140016aea:	add    BYTE PTR [rsi],cl
   140016aec:	or     BYTE PTR [rdx],cl
   140016aee:	movabs eax,ds:0x10033f5ea54808e6
   140016af7:	(bad)  
   140016af8:	mov    bl,0xae
   140016afa:	cwde   
   140016afb:	(bad)  
   140016afc:	and    BYTE PTR [rcx+rcx*4],ah
   140016aff:	lock mov dl,0x39
   140016b02:	int    0xf6
   140016b04:	adc    BYTE PTR [rax],al
   140016b06:	pushf  
   140016b07:	rcl    al,cl
   140016b09:	rcl    DWORD PTR [rcx-0x190220f],1
   140016b0f:	mov    ebx,0xe17c2e0f
   140016b14:	rex.WB (bad) 
   140016b16:	je     0x140016b71
   140016b18:	std    
   140016b19:	shl    BYTE PTR [rdi],cl
   140016b1b:	fstp   QWORD PTR [rax+0x26]
   140016b1e:	lahf   
   140016b1f:	popf   
   140016b20:	(bad)  
   140016b21:	(bad)  
   140016b22:	sti    
   140016b23:	sti    
   140016b24:	out    0x57,eax
   140016b26:	jne    0x140016b8f
   140016b28:	jne    0x140016b19
   140016b2a:	cli    
   140016b2b:	(bad)  
   140016b2c:	(bad)  
   140016b2d:	rol    DWORD PTR [rdi+0x257f35a],cl
   140016b33:	xor    al,BYTE PTR [rax]
   140016b35:	rex.RX or eax,0xb4102af0
   140016b3b:	xchg   esi,eax
   140016b3c:	(bad)  
   140016b3d:	rex.W (bad) 
   140016b3f:	out    0xc6,al
   140016b41:	stos   BYTE PTR es:[rdi],al
   140016b42:	in     eax,dx
   140016b43:	sbb    BYTE PTR [r8+0x40748855],r12b
   140016b4a:	rex mov WORD PTR [rdi+rdi*4],ss
   140016b4e:	dec    ch
   140016b50:	and    DWORD PTR [rbx-0x2e088711],0x6eb985b9
   140016b5a:	or     eax,0x942efc65
   140016b5f:	icebp  
   140016b60:	iret   
   140016b61:	js     0x140016b70
   140016b63:	mov    ebx,0x66ed7d5f
   140016b68:	rex (bad) 
   140016b6a:	(bad)  
   140016b6b:	add    DWORD PTR [rsi+0xc],ebx
   140016b6e:	(bad)  
   140016b6f:	(bad)  
   140016b70:	mov    BYTE PTR [rax+0x42],cl
   140016b73:	push   rbp
   140016b74:	lods   eax,DWORD PTR ds:[rsi]
   140016b75:	fistp  QWORD PTR [rax-0x112c9f82]
   140016b7b:	ins    DWORD PTR es:[rdi],dx
   140016b7c:	sbb    edx,edi
   140016b7e:	ins    DWORD PTR es:[rdi],dx
   140016b7f:	fbstp  TBYTE PTR [rcx+0x3c34dab1]
   140016b85:	adc    BYTE PTR [rbp+0x4b7f6b28],al
   140016b8b:	adc    BYTE PTR [rdx],ah
   140016b8d:	push   0x4
   140016b8f:	add    DWORD PTR [rsi+0x4],0x4c6822dc
   140016b96:	jl     0x140016b2c
   140016b98:	rex.WR outs dx,BYTE PTR ds:[rsi]
   140016b9a:	sti    
   140016b9b:	repnz fs lock in al,dx
   140016b9f:	nop
   140016ba0:	ins    BYTE PTR es:[rdi],dx
   140016ba1:	rex.RX fsub DWORD PTR [rdi-0x5a]
   140016ba5:	ins    BYTE PTR es:[rdi],dx
   140016ba6:	adc    eax,0x8053c800
   140016bab:	retf   0x64cf
   140016bae:	sub    edx,ecx
   140016bb0:	neg    BYTE PTR [rcx+0xd]
   140016bb3:	and    BYTE PTR [rsi-0x63],0x18
   140016bb7:	add    DWORD PTR [rax-0x2f],eax
   140016bba:	stos   DWORD PTR es:[rdi],eax
   140016bbb:	add    DWORD PTR [rcx],ebp
   140016bbd:	retf   
   140016bbe:	cld    
   140016bbf:	or     WORD PTR [rbp-0x4d],bp
   140016bc3:	(bad)  
   140016bc4:	add    al,0xda
   140016bc6:	fld    st(7)
   140016bc8:	int    0xfc
   140016bca:	add    al,0x50
   140016bcc:	sbb    eax,0x62626579
   140016bd1:	gs icebp 
   140016bd3:	clc    
   140016bd4:	shl    DWORD PTR [rbp+0xba3a3c9],1
   140016bda:	mov    edx,0x88124f74
   140016bdf:	lods   al,BYTE PTR ds:[rsi]
   140016be0:	rex
   140016be1:	lock and eax,0xe0023e40
   140016be7:	xor    edx,DWORD PTR [rbx-0x81e01c9]
   140016bed:	push   rsp
   140016bee:	sub    bh,ch
   140016bf0:	rcl    eax,1
   140016bf2:	and    edx,DWORD PTR [rdx]
   140016bf4:	add    al,al
   140016bf6:	imul   eax,DWORD PTR [rbp+0x8054e00],0xf17f7d9b
   140016c00:	loop   0x140016c39
   140016c02:	(bad)  
   140016c03:	mov    esi,0xfdd657ea
   140016c08:	lahf   
   140016c09:	fwait
   140016c0a:	mov    dh,0x8e
   140016c0c:	(bad)  
   140016c0d:	xchg   esi,eax
   140016c0e:	ss scas al,BYTE PTR es:[rdi]
   140016c10:	xor    edi,eax
   140016c12:	mov    bh,0x66
   140016c14:	push   rcx
   140016c15:	jg     0x140016baf
   140016c17:	sub    DWORD PTR [rcx+0x7d],0x45
   140016c1b:	mov    BYTE PTR [rax],bl
   140016c1d:	add    BYTE PTR [rdx+riz*1],ah
   140016c20:	stc    
   140016c21:	cmp    dl,BYTE PTR [rsi+0x6b15062c]
   140016c27:	cdq    
   140016c28:	fwait
   140016c29:	xchg   esi,eax
   140016c2a:	xchg   esp,eax
   140016c2b:	movabs ds:0xbfa2e6627e7eb693,eax
   140016c34:	cmp    eax,0xbe57dff0
   140016c39:	mov    edx,0xf13dcafb
   140016c3e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140016c3f:	outs   dx,DWORD PTR ds:[rsi]
   140016c40:	cmp    dh,BYTE PTR [rax+0x4e]
   140016c43:	add    eax,0xfcf789c1
   140016c48:	jmp    0x140016be7
   140016c4a:	jmp    0x140016c52
   140016c4c:	push   rsi
   140016c4d:	(bad)  
   140016c4e:	sbb    esp,DWORD PTR [rcx+rdi*8-0x33cf8b5]
   140016c55:	mul    DWORD PTR [rbx]
   140016c57:	adc    al,al
   140016c59:	call   0x191af1460
   140016c5e:	pop    rbp
   140016c5f:	add    ah,BYTE PTR [rsi+rax*1-0x4f414b38]
   140016c66:	stc    
   140016c67:	cld    
   140016c68:	pop    rbp
   140016c69:	mov    ebp,0x88404e1a
   140016c6e:	retf   
   140016c6f:	retf   
   140016c70:	xor    al,0xfd
   140016c72:	xchg   ecx,eax
   140016c73:	rex.WRXB jrcxz 0x140016c6e
   140016c76:	xchg   DWORD PTR [rsi],edi
   140016c78:	cmp    BYTE PTR [rdx+0x2312bab4],bh
   140016c7e:	adc    BYTE PTR [rbp+0x34],0x5a
   140016c82:	jmp    FWORD PTR [rsi+rdx*1-0x150a22bf]
   140016c89:	ja     0x140016cea
   140016c8b:	add    eax,esp
   140016c8d:	cmp    DWORD PTR [rax],eax
   140016c8f:	sahf   
   140016c90:	or     eax,0x50069e0
   140016c95:	or     DWORD PTR [rbx+rax*1+0x43],eax
   140016c99:	rex.XB in eax,dx
   140016c9b:	sub    eax,0x586db7bb
   140016ca0:	mov    bh,0x73
   140016ca2:	out    0x86,eax
   140016ca4:	(bad)  
   140016ca5:	(bad)  
   140016ca6:	cmc    
   140016ca7:	xor    DWORD PTR [rax+rdx*8],0x6e
   140016cab:	and    eax,0x995bfa47
   140016cb0:	(bad)  
   140016cb1:	add    DWORD PTR [rdx],0x10029454
   140016cb7:	je     0x140016d10
   140016cb9:	and    BYTE PTR [rbx],cl
   140016cbb:	and    DWORD PTR [rax-0x1a],0x54ddf17e
   140016cc2:	(bad)  
   140016cc3:	sub    BYTE PTR [rsi-0x61],al
   140016cc6:	and    ch,BYTE PTR [rax+rax*1]
   140016cc9:	push   rax
   140016cca:	fucomp st(4)
   140016ccc:	icebp  
   140016ccd:	mov    esp,DWORD PTR [rbx]
   140016ccf:	imul   esi,DWORD PTR [rdi+rdi*4-0x45b27aba],0xf9606bbb
   140016cda:	mov    edi,0x4c431262
   140016cdf:	(bad)  
   140016ce0:	add    BYTE PTR [rcx],0xea
   140016ce3:	rex.RX scas al,BYTE PTR es:[rdi]
   140016ce5:	out    0x17,eax
   140016ce7:	mov    edx,0xac4f27cb
   140016cec:	int3   
   140016ced:	(bad)  
   140016cee:	lea    ebp,[rsi]
   140016cf0:	sub    eax,0x6aadcd4c
   140016cf5:	(bad)
   140016cf8:	or     BYTE PTR [rdi],ch
   140016cfa:	add    eax,edi
   140016cfc:	and    al,BYTE PTR [rdi+rbx*1]
   140016cff:	add    dh,al
   140016d01:	(bad)
   140016d04:	jmp    QWORD PTR [rax-0x7]
   140016d07:	xchg   ecx,eax
   140016d08:	fmulp  st(7),st
   140016d0a:	ds xor eax,0x588f4
   140016d10:	jo     0x140016d4c
   140016d12:	and    DWORD PTR [rax-0x26],esi
   140016d15:	enter  0x100,0xc0
   140016d19:	sar    DWORD PTR [rbx+0x3fc6e10e],1
   140016d1f:	mov    ecx,0xbfb5e876
   140016d24:	mov    ecx,0x6e368ff1
   140016d29:	cmp    eax,0x62d40af1
   140016d2e:	push   0xffffffffffffff80
   140016d30:	sub    DWORD PTR [rbx-0x6af10c8a],ecx
   140016d36:	mov    ch,0x99
   140016d38:	sub    al,0x12
   140016d3a:	(bad)  
   140016d3b:	rol    DWORD PTR [rax+0x16],0x48
   140016d3f:	and    ch,dh
   140016d41:	popf   
   140016d42:	in     eax,dx
   140016d43:	or     edx,DWORD PTR [rax+rcx*2]
   140016d46:	adc    ecx,DWORD PTR [rax]
   140016d48:	push   rdx
   140016d49:	in     al,0x75
   140016d4b:	pcmpeqd mm2,mm2
   140016d4e:	(bad)
   140016d51:	jbe    0x140016d59
   140016d53:	mov    edi,0xf491d0f1
   140016d58:	mov    ch,0x87
   140016d5a:	(bad)  
   140016d5b:	mov    dh,0x2d
   140016d5d:	popf   
   140016d5e:	lods   eax,DWORD PTR ds:[rsi]
   140016d5f:	xor    BYTE PTR [rax-0x14861643],bl
   140016d65:	and    eax,0x56419dc5
   140016d6a:	div    DWORD PTR [rsi+0x43e5c2c3]
   140016d70:	lods   eax,DWORD PTR ds:[rsi]
   140016d71:	stc    
   140016d72:	sub    ecx,DWORD PTR [rax-0x6cd7991d]
   140016d78:	cs cdq 
   140016d7a:	jp     0x140016d06
   140016d7c:	retf   0xdaec
   140016d7f:	stos   BYTE PTR es:[rdi],al
   140016d80:	add    ebp,DWORD PTR [rdx]
   140016d82:	or     BYTE PTR [rdx],dl
   140016d84:	adc    BYTE PTR [rdx],dl
   140016d86:	test   BYTE PTR [rbx+0x55bb15f0],bh
   140016d8c:	rex.W je 0x140016df6
   140016d8f:	out    0x7,eax
   140016d91:	data16 outs dx,BYTE PTR ds:[rsi]
   140016d93:	cli    
   140016d94:	push   rax
   140016d95:	out    0xc8,eax
   140016d97:	(bad)  
   140016d98:	(bad)  
   140016d99:	xor    DWORD PTR [rsi+0x341d222a],esi
   140016d9f:	mov    WORD PTR [rdi-0x1d],ds
   140016da2:	sub    al,0x19
   140016da4:	push   QWORD PTR [rsp+rsi*4-0x15]
   140016da8:	(bad)  
   140016da9:	fidivr WORD PTR [rbp+0x2e7901b]
   140016daf:	js     0x140016dc7
   140016db1:	sbb    BYTE PTR [rdi-0x7b60870e],0x10
   140016db8:	fiadd  DWORD PTR [rbx+0x3]
   140016dbb:	lods   eax,DWORD PTR ds:[rsi]
   140016dbc:	int    0x3b
   140016dbe:	mov    dh,0xe
   140016dc0:	scas   eax,DWORD PTR es:[rdi]
   140016dc1:	mov    ebx,0xadf5e2f8
   140016dc6:	sbb    r10,r15
   140016dc9:	mov    ch,0x86
   140016dcb:	xchg   DWORD PTR [rdx-0x58],ebx
   140016dce:	sub    cl,BYTE PTR [rdx+0x40]
   140016dd1:	xchg   ecx,eax
   140016dd2:	sub    BYTE PTR [rbx+rax*4],al
   140016dd5:	hlt    
   140016dd6:	jnp    0x140016d63
   140016dd8:	rex.WXB or rsp,QWORD PTR cs:[r8+0x4783e407]
   140016de0:	(bad)  
   140016de1:	jp     0x140016e62
   140016de3:	mov    dh,0x18
   140016de5:	pop    rsi
   140016de6:	adc    BYTE PTR [rdx],dh
   140016de8:	repz xchg esi,eax
   140016dea:	xchg   esi,eax
   140016deb:	add    BYTE PTR [rcx-0x6d4e081a],bl
   140016df1:	sub    eax,0x623e9f00
   140016df6:	loopne 0x140016df8
   140016df8:	sbb    DWORD PTR [rax],ebx
   140016dfa:	pop    rax
   140016dfb:	mov    cl,0x20
   140016dfd:	scas   al,BYTE PTR es:[rdi]
   140016dfe:	lods   al,BYTE PTR ds:[rsi]
   140016dff:	rex.R pop rsi
   140016e01:	pop    rdx
   140016e02:	mov    DWORD PTR [rbx],ebp
   140016e04:	(bad)  
   140016e05:	rex.WRXB lods al,BYTE PTR ds:[rsi]
   140016e07:	int3   
   140016e08:	mov    cs,WORD PTR [rbp+rbp*1+0x75cecd2d]
   140016e0f:	rex.R sti 
   140016e11:	jae    0x140016e7c
   140016e13:	add    eax,0xe009300f
   140016e18:	sub    esp,DWORD PTR [rsi+0x7934bfe9]
   140016e1e:	ret    
   140016e1f:	(bad)  
   140016e20:	hlt    
   140016e21:	xor    eax,0xb3a4a3fd
   140016e26:	adc    al,BYTE PTR [rax]
   140016e28:	rcr    cl,0x9
   140016e2b:	sbb    DWORD PTR [rbx-0x22],0x7b3e3377
   140016e32:	std    
   140016e33:	mov    DWORD PTR [rsi-0x126508a1],0xfb75b9bf
   140016e3d:	call   0x108607041
   140016e42:	cmp    eax,0x9ce002e3
   140016e47:	add    ah,ah
   140016e49:	mov    ds,WORD PTR [rdi+0x67ea7865]
   140016e4f:	push   rsp
   140016e50:	out    0x5b,al
   140016e52:	or     ecx,DWORD PTR [rax-0x6e]
   140016e55:	cs jge 0x140016ec3
   140016e58:	cwde   
   140016e59:	xor    ebx,ebx
   140016e5b:	mov    bl,cl
   140016e5d:	adc    DWORD PTR [rdx],0xbcbb9658
   140016e63:	jmp    0x15dd80366
   140016e68:	(bad)  
   140016e69:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140016e6a:	movabs eax,ds:0xdba7538885684587
   140016e73:	ds fmul DWORD PTR ds:[rsi+0x223514bb]
   140016e7b:	mov    ah,0xc2
   140016e7d:	(bad)  
   140016e7e:	pop    rsi
   140016e7f:	(bad)  
   140016e80:	mov    ah,0x5b
   140016e82:	(bad)  
   140016e83:	jne    0x140016f00
   140016e85:	rex.WXB xchg r14,rax
   140016e87:	test   BYTE PTR [rip+0x47edebd4],0x33        # 0x187ef5a62
   140016e8e:	and    BYTE PTR [rip+0x1ebaa280],bl        # 0x15ebc1114
   140016e94:	call   0xe8039419
   140016e99:	xor    eax,0x103a1182
   140016e9e:	push   0xffffffffc7423f83
   140016ea3:	cs mov bl,0xab
   140016ea6:	rex.WR scas rax,QWORD PTR es:[rdi]
   140016ea8:	test   eax,0x86464768
   140016ead:	divps  xmm6,xmm7
   140016eb0:	mov    esi,0xefbbd199
   140016eb5:	(bad)  
   140016eb6:	stos   BYTE PTR es:[rdi],al
   140016eb7:	movabs eax,ds:0xf8c47383a002bf4c
   140016ec0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140016ec1:	movabs ds:0xe082a19b57f1bf5d,eax
   140016eca:	pop    rcx
   140016ecb:	add    BYTE PTR [rsi-0x48cd1bfe],ch
   140016ed1:	std    
   140016ed2:	and    eax,0xb4408084
   140016ed7:	jle    0x140016eac
   140016ed9:	mov    cl,0xd
   140016edc:	cmp    esi,DWORD PTR [rsi-0x41909052]
   140016ee2:	push   0xffffffffad038308
   140016ee7:	xor    ebp,0x42b46d43
   140016eed:	or     BYTE PTR [rbx],al
   140016eef:	lods   eax,DWORD PTR ds:[rsi]
   140016ef0:	(bad)  
   140016ef1:	rex.WXB jnp 0x140016ea5
   140016ef4:	add    BYTE PTR [rax-0x5f],0x87
   140016ef8:	sbb    DWORD PTR [rbx],0x78df5fa8
   140016efe:	int    0xac
   140016f00:	jno    0x140016e9b
   140016f02:	and    dl,ah
   140016f04:	and    al,0xf6
   140016f06:	add    BYTE PTR [rax+0x5c],ch
   140016f09:	or     BYTE PTR [rcx+rcx*1-0x3917d228],0x14
   140016f11:	push   rdi
   140016f12:	push   rsi
   140016f13:	cmp    DWORD PTR [rsi],ebp
   140016f15:	cs jne 0x140016f53
   140016f18:	xor    edx,ebx
   140016f1a:	popf   
   140016f1b:	in     eax,0x89
   140016f1d:	mov    DWORD PTR [rbp-0x71665607],edx
   140016f23:	and    al,0x66
   140016f25:	jno    0x140016f34
   140016f27:	scas   eax,DWORD PTR es:[rdi]
   140016f28:	and    dh,bl
   140016f2a:	and    al,0x20
   140016f2c:	pop    rdi
   140016f2d:	and    eax,0x56
   140016f30:	add    BYTE PTR [rdi-0x40f21b2],dh
   140016f36:	xchg   edi,ecx
   140016f38:	fxch   st(5)
   140016f3a:	jmp    0x140016f4f
   140016f3c:	sub    bh,0x40
   140016f3f:	add    BYTE PTR [rax],al
   140016f41:	(bad)  
   140016f42:	pop    rax
   140016f43:	or     BYTE PTR [rax],al
   140016f45:	add    ch,bl
   140016f47:	repnz mov esi,0xb789f19b
   140016f4d:	std    
   140016f4e:	jrcxz  0x140016f0a
   140016f50:	xlat   BYTE PTR ds:[rbx]
   140016f51:	(bad)  
   140016f52:	idiv   BYTE PTR [rsi+0x73ddee17]
   140016f58:	(bad)  
   140016f59:	(bad)  
   140016f5a:	test   DWORD PTR [rax-0x2c3666b7],edi
   140016f60:	rol    DWORD PTR [rdx+rbx*2],0xa6
   140016f64:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140016f65:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140016f66:	push   rsi
   140016f67:	cmc    
   140016f68:	(bad)  
   140016f69:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140016f6a:	mov    dh,0xda
   140016f6c:	mov    DWORD PTR [rsi],ebp
   140016f6e:	sbb    ah,al
   140016f70:	cld    
   140016f71:	imul   ebp,DWORD PTR [rbx],0x1d
   140016f74:	xchg   edx,eax
   140016f75:	add    al,0x50
   140016f77:	popf   
   140016f78:	push   rbp
   140016f79:	or     esp,DWORD PTR [rcx-0x2b]
   140016f7c:	(bad)  
   140016f7d:	xchg   edx,eax
   140016f7e:	imul   esp,edx,0xffffffef
   140016f81:	ret    0x7ade
   140016f84:	(bad)  
   140016f85:	cmp    bl,BYTE PTR [rbp+0x5]
   140016f88:	add    dh,BYTE PTR [rbx-0x63]
   140016f8b:	jg     0x140016f31
   140016f8d:	push   0xffffffffffffffe8
   140016f8f:	push   0xffffffffd9823c5a
   140016f94:	fucomi st,st(6)
   140016f96:	ja     0x140016fd9
   140016f98:	mov    BYTE PTR [rax],dl
   140016f9a:	lods   al,BYTE PTR ds:[rsi]
   140016f9b:	fisub  DWORD PTR [rbp+0x84960d4]
   140016fa1:	call   0x1bcfe3928
   140016fa6:	(bad)  
   140016fa7:	rex.WXB retf 
   140016fa9:	lods   eax,DWORD PTR ds:[rsi]
   140016faa:	icebp  
   140016fab:	(bad)  
   140016fac:	jle    0x140016f6b
   140016fae:	jne    0x140016fa4
   140016fb0:	ror    BYTE PTR [rbp-0x5d],0xd3
   140016fb4:	mov    bl,0xd3
   140016fb6:	stos   DWORD PTR es:[rdi],eax
   140016fb7:	sbb    eax,0x779fc328
   140016fbc:	(bad)  
   140016fbd:	(bad)  
   140016fbe:	adc    ebp,ebp
   140016fc0:	cli    
   140016fc1:	cmc    
   140016fc2:	ja     0x140017031
   140016fc4:	add    al,0x70
   140016fc6:	xchg   ebp,eax
   140016fc7:	mov    esi,0xae0019e4
   140016fcc:	(bad)  
   140016fcd:	(bad)  
   140016fce:	stos   DWORD PTR es:[rdi],eax
   140016fcf:	adc    BYTE PTR [rax],cl
   140016fd1:	and    DWORD PTR [rax+0x34040704],edx
   140016fd7:	gs jo  0x140016fad
   140016fda:	rex.RB
   140016fdb:	fwait
   140016fdc:	(bad)  
   140016fdd:	stos   DWORD PTR es:[rdi],eax
   140016fde:	cmc    
   140016fdf:	ret    
   140016fe0:	sub    ebx,0x36
   140016fe3:	ins    DWORD PTR es:[rdi],dx
   140016fe4:	sbb    DWORD PTR [rax+0x30068786],ebp
   140016fea:	shr    BYTE PTR [rsi-0x147cbbfc],1
   140016ff0:	(bad)  
   140016ff1:	add    edx,DWORD PTR [rdi+0x1840ff31]
   140016ff7:	sbb    ch,BYTE PTR [rdi+rsi*4-0x2e]
   140016ffb:	imul   esp,DWORD PTR [rsi+0x4b],0x12762005
   140017002:	(bad)  
   140017003:	(bad)  
   140017004:	sbb    ah,BYTE PTR [rbx+0x2]
   140017007:	adc    BYTE PTR [rbp+riz*4-0x2bdb16a2],al
   14001700e:	mov    DWORD PTR [rbx-0x534ab4b5],edi
   140017014:	sub    al,0xc7
   140017016:	in     eax,0x85
   140017018:	(bad)
   14001701b:	sub    al,0x76
   14001701d:	xchg   edi,eax
   14001701e:	(bad)  
   14001701f:	(bad)  
   140017020:	mov    edx,0x15d11660
   140017025:	ss mov ebp,0x7c99f71
   14001702b:	mov    ecx,0x83c007
   140017030:	mov    esi,0x938be009
   140017035:	out    dx,eax
   140017036:	(bad)  
   140017037:	mov    ebp,0x9c62faef
   14001703c:	(bad)  
   14001703d:	fwait
   14001703e:	mov    esi,0x54e00123
   140017043:	test   BYTE PTR [rax],cl
   140017045:	icebp  
   140017046:	ins    DWORD PTR es:[rdi],dx
   140017047:	add    BYTE PTR [rdx-0x24],al
   14001704a:	std    
   14001704b:	leave  
   14001704c:	fucomi st,st(1)
   14001704e:	mov    ebp,0xf06afffb
   140017053:	out    0x5f,eax
   140017055:	mov    al,0xfd
   140017057:	sti    
   140017058:	jmp    QWORD PTR [rdi+0xd37909f]
   14001705e:	mov    ah,0xe6
   140017060:	jle    0x1400170b2
   140017062:	mov    ebx,0x38004864
   140017067:	pop    rcx
   140017068:	movabs eax,ds:0x18288e17b180e5bb
   140017071:	test   al,0xfd
   140017073:	scas   eax,DWORD PTR es:[rdi]
   140017074:	add    BYTE PTR [rdi-0x396eccea],cl
   14001707a:	fsub   DWORD PTR [rcx]
   14001707c:	(bad)  
   14001707d:	scas   al,BYTE PTR es:[rdi]
   14001707e:	adc    DWORD PTR [rdx+0x0],eax
   140017081:	mov    al,0x6a
   140017083:	(bad)  
   140017084:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140017085:	push   0x6f
   140017087:	leave  
   140017088:	imul   ebx,DWORD PTR [rsp+rax*1-0x50],0x35
   14001708d:	xlat   BYTE PTR ds:[rbx]
   14001708e:	adc    cl,BYTE PTR [rcx-0x28f7fbe0]
   140017094:	cli    
   140017095:	sbb    eax,DWORD PTR [rbx]
   140017097:	adc    DWORD PTR [rcx+0x43],0x58
   14001709b:	add    eax,0xd5018f80
   1400170a0:	push   0xffffffffffffffd2
   1400170a2:	rex.WXB (bad) 
   1400170a4:	sar    ah,1
   1400170a6:	adc    eax,0xd410400
   1400170ab:	jo     0x140017034
   1400170ad:	and    eax,0x68783cac
   1400170b2:	clc    
   1400170b3:	ror    DWORD PTR [rdi],0x7e
   1400170b6:	jl     0x140017126
   1400170b8:	in     al,0xb6
   1400170ba:	pop    rbx
   1400170bb:	(bad)  
   1400170bc:	pushf  
   1400170bd:	fst    DWORD PTR [rdi-0x10]
   1400170c0:	sub    BYTE PTR [rsp+rdi*8-0xd],bh
   1400170c4:	cmp    rbx,QWORD PTR [r15-0xb]
   1400170c8:	(bad)  
   1400170c9:	jge    0x14001711b
   1400170cb:	movabs eax,ds:0x801a7802b6440570
   1400170d4:	lods   eax,DWORD PTR ds:[rsi]
   1400170d5:	add    BYTE PTR [rsi+0x37],dh
   1400170d8:	(bad)  
   1400170d9:	add    ebp,DWORD PTR [rdi+0xc]
   1400170dc:	adc    BYTE PTR [rdx],al
   1400170de:	or     BYTE PTR [rdx],al
   1400170e0:	adc    BYTE PTR [rcx-0x17],cl
   1400170e3:	adc    edi,DWORD PTR [rax-0x421bbfc7]
   1400170e9:	int    0x8a
   1400170eb:	gs movsxd ebx,eax
   1400170ee:	in     eax,dx
   1400170ef:	jns    0x1400170bc
   1400170f1:	hlt    
   1400170f2:	retf   
   1400170f3:	rex.W (bad) 
   1400170f5:	(bad)  
   1400170f6:	xchg   edi,eax
   1400170f7:	out    0xf1,al
   1400170f9:	adc    eax,0x27ae3c4a
   1400170fe:	cmp    BYTE PTR [rdx],cl
   140017100:	enter  0x83,0xe
   140017104:	rex.X sbb esi,edi
   140017107:	or     DWORD PTR [rcx-0x20080441],0x17f6f595
   140017111:	cmp    bh,BYTE PTR [rip+0x12a]        # 0x140017241
   140017117:	sub    al,0x9f
   140017119:	ja     0x140017126
   14001711b:	adc    BYTE PTR [rdi+0x77700611],ah
   140017121:	loopne 0x140017111
   140017123:	rex.WRXB fimul WORD PTR [r14+0x37]
   140017127:	mov    ebp,0x596d3df1
   14001712c:	pop    rbp
   14001712d:	fdiv   st,st(4)
   14001712f:	cli    
   140017130:	(bad)  
   140017131:	pop    rsp
   140017132:	(bad)  
   140017133:	imul   edx,DWORD PTR [rdi],0x5f
   140017136:	cmp    al,0xfe
   140017138:	rex.WX movabs ds:0x665d16243853437a,al
   140017142:	ret    
   140017143:	add    al,0x60
   140017145:	in     eax,0x60
   140017147:	loop   0x1400170ff
   140017149:	sbb    DWORD PTR [rax-0x233fe187],0x286c5401
   140017153:	adc    ebx,DWORD PTR [rbx+0x2]
   140017156:	test   eax,0x546d696a
   14001715b:	movabs ds:0x8c411856d51a04f9,eax
   140017164:	movabs eax,ds:0xb0a74e8268647a1d
   14001716d:	add    BYTE PTR [rdx+0x6d],ch
   140017170:	rex.WRB ror QWORD PTR [r9],0x8
   140017174:	xor    eax,0xaf305d04
   140017179:	add    BYTE PTR [rdi+riz*1+0x67],al
   14001717d:	(bad)  
   14001717e:	cmp    al,0x70
   140017180:	(bad)  [rdi]
   140017182:	shl    cl,cl
   140017184:	jg     0x140017180
   140017186:	(bad)  
   140017187:	jrcxz  0x1400171bc
   140017189:	repz jae 0x1400171e9
   14001718c:	imul   ebp
   14001718e:	rex.WXB ins DWORD PTR es:[rdi],dx
   140017190:	jmp    FWORD PTR [rbp+0x51]
   140017193:	std    
   140017194:	or     edx,DWORD PTR [rcx-0x2415018a]
   14001719a:	(bad)  
   14001719b:	(bad)  
   14001719c:	mov    al,0x55
   14001719e:	pop    rbp
   14001719f:	(bad)  
   1400171a0:	in     al,dx
   1400171a1:	xchg   al,ah
   1400171a3:	and    al,bl
   1400171a5:	out    dx,eax
   1400171a6:	scas   eax,DWORD PTR es:[rdi]
   1400171a7:	add    al,0xd0
   1400171a9:	(bad)  
   1400171aa:	rcr    BYTE PTR [rax-0x7f6a3f13],1
   1400171b0:	fdiv   DWORD PTR [rsi+0x471bcfb5]
   1400171b6:	rex.RB
   1400171b7:	movabs eax,fs:0x32c0007910d7538
   1400171c1:	cmp    BYTE PTR [rax+riz*2],cl
   1400171c4:	add    DWORD PTR [rax+0x4dcc10a3],edx
   1400171ca:	cld    
   1400171cb:	fstp   QWORD PTR [rbx]
   1400171cd:	mov    ds,WORD PTR [rdi-0x2c15b439]
   1400171d3:	pop    rcx
   1400171d4:	shl    BYTE PTR [rbx-0x72b1ffea],cl
   1400171da:	and    al,cl
   1400171dc:	add    DWORD PTR [rax+0x40239b5],esp
   1400171e2:	or     dh,bl
   1400171e4:	inc    DWORD PTR [rdi-0x29]
   1400171e7:	rcr    BYTE PTR [rbp-0x61],cl
   1400171ea:	mov    edx,0x7fd3dd7d
   1400171ef:	(bad)  
   1400171f0:	jo     0x1400171d1
   1400171f2:	or     ebx,DWORD PTR [rsi-0x48]
   1400171f5:	in     eax,0xb7
   1400171f7:	(bad)  
   1400171f8:	(bad)  
   1400171f9:	(bad)  
   1400171fa:	(bad)  
   1400171fb:	cmp    al,0x38
   1400171fd:	mov    ecx,0x55001696
   140017202:	ror    DWORD PTR [rbx-0x35],cl
   140017205:	mov    edx,0x682a09ce
   14001720a:	(bad)  
   14001720b:	sbb    DWORD PTR [rbp+0x30],esp
   14001720e:	int    0xb8
   140017210:	rcl    DWORD PTR [rbp-0x54],cl
   140017213:	xor    al,0xc1
   140017215:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140017216:	xchg   BYTE PTR [rdx-0x3087a207],bl
   14001721c:	sbb    DWORD PTR [rsi],edx
   14001721e:	sub    DWORD PTR [rsi-0x74ad2dbe],0xc1dfa040
   140017228:	adc    DWORD PTR [rdx-0x57fef17a],edi
   14001722e:	rcr    esp,0x5
   140017231:	(bad)  
   140017232:	call   0x181dbbdad
   140017237:	rex.W pushf 
   140017239:	mov    al,0x3c
   14001723b:	xor    DWORD PTR [rbx-0x21d0210f],edi
   140017241:	pop    rsi
   140017242:	(bad)  
   140017243:	cli    
   140017244:	clc    
   140017245:	mov    DWORD PTR [rsi-0x59],0xbb56a7a7
   14001724c:	push   rax
   14001724d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001724e:	out    dx,eax
   14001724f:	adc    al,0xef
   140017251:	(bad)  
   140017252:	xchg   esp,eax
   140017253:	mov    dh,0xef
   140017255:	push   rbx
   140017256:	lahf   
   140017257:	(bad)  
   140017258:	xchg   esi,eax
   140017259:	(bad)  
   14001725a:	cdq    
   14001725b:	add    BYTE PTR [rax+0x52],dh
   14001725e:	rex.B jo 0x140017227
   140017261:	mov    es,WORD PTR [rdx+0x0]
   140017264:	add    al,0x1f
   140017266:	jg     0x140017243
   140017268:	(bad)  
   140017269:	jmp    0x11cddaa39
   14001726e:	sahf   
   14001726f:	sbb    eax,0x99fa1d9f
   140017274:	ins    DWORD PTR es:[edi],dx
   140017276:	std    
   140017277:	mov    esi,0x5bd7fb9f
   14001727c:	pop    rsi
   14001727d:	mov    ah,0x65
   14001727f:	shl    esp,cl
   140017281:	iret   
   140017282:	(bad)  
   140017283:	je     0x1400172bc
   140017285:	add    DWORD PTR [rsi+0x38],ebx
   140017288:	push   rsp
   140017289:	adc    al,0x90
   14001728b:	jno    0x1400172d7
   14001728d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001728e:	in     eax,0xc9
   140017290:	push   rdx
   140017291:	imul   ebp,DWORD PTR [rbp+0x301d1446],0x13
   140017298:	(bad)  
   140017299:	xor    ah,BYTE PTR [rdx-0x37e60ade]
   14001729f:	and    eax,DWORD PTR [rbp-0x10]
   1400172a2:	xchg   r10b,bl
   1400172a5:	adc    esi,DWORD PTR [rdi+rdx*8]
   1400172a8:	and    BYTE PTR [rcx],bl
   1400172aa:	lock (bad) 
   1400172ac:	out    0x94,eax
   1400172ae:	scas   al,BYTE PTR es:[rdi]
   1400172af:	xchg   esp,esi
   1400172b1:	push   rsi
   1400172b2:	jrcxz  0x140017284
   1400172b4:	mov    DWORD PTR [rbx-0x4210146d],edx
   1400172ba:	in     eax,dx
   1400172bb:	sbb    ecx,ebx
   1400172bd:	rex.RXB
   1400172be:	ds cld 
   1400172c0:	movabs eax,ds:0xe1868bb1cb2b1363
   1400172c9:	cmp    eax,0x3bc9ef7e
   1400172ce:	rex.WRXB sub BYTE PTR [r13-0x21],r13b
   1400172d2:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400172d3:	ds popf 
   1400172d5:	mov    cs,esi
   1400172d7:	mov    ecx,0xf9627000
   1400172dc:	pushf  
   1400172dd:	xor    edi,DWORD PTR [rcx+rbp*2+0x9]
   1400172e1:	adc    BYTE PTR [rdx],cl
   1400172e3:	jmp    0x1400172c5
   1400172e5:	jrcxz  0x140017356
   1400172e7:	sti    
   1400172e8:	(bad)  
   1400172e9:	cli    
   1400172ea:	in     al,dx
   1400172eb:	pop    rdi
   1400172ec:	jg     0x14001735a
   1400172ee:	jo     0x1400172e6
   1400172f0:	(bad)  
   1400172f1:	hlt    
   1400172f2:	loopne 0x1400172c2
   1400172f4:	pop    rbp
   1400172f5:	in     eax,dx
   1400172f6:	rex.WRB (bad) 
   1400172f8:	jnp    0x1400172df
   1400172fa:	xchg   ebx,eax
   1400172fb:	jmp    rbp
   1400172fd:	ficomp WORD PTR [rbp-0x17]
   140017300:	xchg   BYTE PTR [edi-0x5fc3809a],al
   140017307:	mov    ebx,0xbfe66c19
   14001730c:	pop    rax
   14001730d:	in     eax,dx
   14001730e:	test   al,0x88
   140017310:	(bad)  
   140017311:	add    eax,0xbda6a175
   140017316:	xor    esi,DWORD PTR [rdx]
   140017318:	sar    al,1
   14001731a:	stc    
   14001731b:	or     al,0xe1
   14001731d:	scas   al,BYTE PTR es:[rdi]
   14001731e:	(bad)  
   14001731f:	shr    edx,0x8f
   140017322:	(bad)  
   140017323:	(bad)  
   140017324:	es mov ch,0x99
   140017327:	dec    DWORD PTR [rcx]
   140017329:	or     al,0x5a
   14001732b:	sbb    r11,QWORD PTR [r14]
   14001732e:	cmp    al,0x39
   140017330:	xor    eax,0x87fddf74
   140017335:	jmp    0x14001731a
   140017337:	lahf   
   140017338:	sti    
   140017339:	int3   
   14001733a:	(bad)  
   14001733b:	leave  
   14001733c:	sti    
   14001733d:	mov    edi,0x868cbd35
   140017342:	sar    DWORD PTR [rbx],1
   140017344:	push   0x401177c2
   140017349:	in     al,dx
   14001734a:	imul   edi,edx,0x3e
   14001734d:	jge    0x140017306
   14001734f:	sar    DWORD PTR [rcx+0x13],1
   140017352:	add    BYTE PTR [rip+0x4cf67cb1],ah        # 0x18cf7f009
   140017358:	rex.WB
   140017359:	add    r9b,BYTE PTR [rax]
   14001735c:	outs   dx,BYTE PTR ds:[rsi]
   14001735d:	clc    
   14001735e:	jrcxz  0x14001734b
   140017360:	ret    0x375d
   140017363:	jg     0x1400173d2
   140017365:	(bad)  
   140017366:	out    dx,al
   140017367:	(bad)  
   140017368:	je     0x1400173e5
   14001736a:	movabs eax,gs:0x3c37faf43d631433
   140017374:	std    
   140017375:	(bad)  
   140017376:	imul   esi
   140017378:	outs   dx,BYTE PTR ds:[rsi]
   140017379:	pop    rbp
   14001737a:	mov    ecx,0x29f74371
   14001737f:	sub    DWORD PTR [rbp-0x4ba5d47b],0xffffffb2
   140017386:	sbb    eax,0x4341e4ca
   14001738b:	sub    DWORD PTR [rcx+rdi*4+0x78200af7],0xffffffde
   140017393:	mov    ebp,0xc8bfd6c0
   140017398:	stc    
   140017399:	add    esp,DWORD PTR [rdx]
   14001739b:	call   0xdd656946
   1400173a0:	cmp    BYTE PTR [rax],bh
   1400173a2:	mov    ch,0xbc
   1400173a4:	fdivr  QWORD PTR [rdx]
   1400173a6:	cmp    DWORD PTR [rsi],esi
   1400173a8:	cs rex.RXB (bad) 
   1400173ab:	lea    esi,[rsi-0x5a]
   1400173ae:	(bad)  
   1400173af:	stc    
   1400173b0:	rcl    ecx,1
   1400173b2:	mov    cl,0xb1
   1400173b4:	adc    ecx,DWORD PTR [rbx-0x12]
   1400173b7:	mov    edi,0xf6d7d33b
   1400173bc:	repnz rep movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400173bf:	ds shl edi,cl
   1400173c2:	jmp    0x153200d82
   1400173c7:	add    DWORD PTR [rax-0x3801a76a],esi
   1400173cd:	sbb    ch,bl
   1400173cf:	rex jns 0x1400173be
   1400173d2:	xchg   esi,eax
   1400173d3:	neg    ebp
   1400173d5:	rex.WR mov dil,0xff
   1400173d8:	rcl    DWORD PTR [rdi],cl
   1400173da:	stos   BYTE PTR es:[rdi],al
   1400173db:	xchg   ebx,eax
   1400173dc:	xchg   esi,eax
   1400173de:	pop    rdx
   1400173df:	mov    edx,ebx
   1400173e1:	repz in eax,dx
   1400173e3:	(bad)  
   1400173e4:	(bad)
   1400173e7:	rex.WX test rax,0xffffffffccda9ccd
   1400173ed:	fdivr  QWORD PTR [rdx-0x3b]
   1400173f0:	stos   DWORD PTR es:[rdi],eax
   1400173f1:	scas   al,BYTE PTR es:[rdi]
   1400173f2:	mov    eax,0x6b70fd72
   1400173f7:	ret    
   1400173f8:	out    dx,al
   1400173f9:	in     eax,dx
   1400173fa:	(bad)  
   1400173fb:	jbe    0x14001744b
   1400173fd:	jp     0x1400173eb
   1400173ff:	(bad)  
   140017400:	(bad)  
   140017401:	ins    BYTE PTR es:[rdi],dx
   140017402:	test   eax,0xe6a60690
   140017407:	push   0x52988414
   14001740c:	ret    0x5cc2
   14001740f:	(bad)  
   140017410:	sbb    edi,DWORD PTR [rcx]
   140017412:	fstp   DWORD PTR [rcx-0x7e0ccab7]
   140017418:	idiv   DWORD PTR [rdi]
   14001741a:	xor    al,0x6
   14001741c:	xor    eax,0xa35333d7
   140017421:	shr    edx,1
   140017423:	jne    0x1400173d6
   140017425:	sub    eax,0xbef9fd41
   14001742a:	imul   ebx,edi,0x7a19efa7
   140017430:	pop    rsp
   140017431:	add    al,0xc0
   140017433:	cdq    
   140017434:	mov    ch,ah
   140017436:	out    0x6c,al
   140017438:	and    eax,0xd7c7f0dc
   14001743d:	sar    DWORD PTR [rbp-0x72d90261],1
   140017443:	sbb    eax,0x8ecd6b1c
   140017448:	rex.WRXB imul r14,r15,0x2a
   14001744c:	or     eax,0x59abfb3b
   140017451:	jne    0x1400173f3
   140017453:	sub    DWORD PTR [rdi],edi
   140017455:	test   esi,0x97f28e73
   14001745b:	scas   eax,DWORD PTR es:[rdi]
   14001745c:	je     0x1400173f8
   14001745e:	ins    DWORD PTR es:[rdi],dx
   14001745f:	jge    0x140017461
   140017461:	scas   eax,DWORD PTR es:[rdi]
   140017462:	rex.WRXB (bad) 
   140017465:	je     0x1400174a8
   140017467:	or     DWORD PTR [rax-0x56817181],eax
   14001746d:	xchg   edi,eax
   14001746e:	loope  0x140017447
   140017470:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140017471:	lods   al,BYTE PTR ds:[rsi]
   140017472:	fwait
   140017473:	rex.WXB rcl QWORD PTR [r11],1
   140017476:	mov    ecx,esp
   140017478:	scas   eax,DWORD PTR es:[rdi]
   140017479:	movabs ds:0xfa9f53ea7d4fa9f7,eax
   140017483:	(bad)  
   140017484:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140017485:	ds cmc 
   140017487:	test   eax,0x53ea7d4f
   14001748c:	lahf   
   14001748d:	cli    
   14001748e:	(bad)  
   14001748f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140017490:	ds cmc 
   140017492:	test   eax,0x53ea7d4f
   140017497:	lahf   
   140017498:	cli    
   140017499:	(bad)  
   14001749a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001749b:	ds cmc 
   14001749d:	test   eax,0x53ea7d4f
   1400174a2:	lahf   
   1400174a3:	cli    
   1400174a4:	(bad)  
   1400174a5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400174a6:	ds cmc 
   1400174a8:	test   eax,0x53ea7d4f
   1400174ad:	lahf   
   1400174ae:	cli    
   1400174af:	(bad)  
   1400174b0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400174b1:	ds cmc 
   1400174b3:	test   eax,0x53ea7d4f
   1400174b8:	lahf   
   1400174b9:	cli    
   1400174ba:	(bad)  
   1400174bb:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400174bc:	ds cmc 
   1400174be:	test   eax,0x53ea7d4f
   1400174c3:	lahf   
   1400174c4:	cli    
   1400174c5:	(bad)  
   1400174c6:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400174c7:	ds cmc 
   1400174c9:	test   eax,0x53ea7d4f
   1400174ce:	lahf   
   1400174cf:	cli    
   1400174d0:	(bad)  
   1400174d1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400174d2:	ds cmc 
   1400174d4:	jmp    0x18000b562
   1400174d9:	jo     0x140017544
   1400174db:	shl    BYTE PTR [rcx+0x36],0x93
   1400174df:	adc    al,0xbd
   1400174e1:	add    BYTE PTR [rax],al
   1400174e3:	add    BYTE PTR [rax],al
   1400174e5:	rex.WB
   1400174e6:	rex.RB
   1400174e7:	rex.WRX
   1400174e8:	rex.R scas al,BYTE PTR es:[rdi]
   1400174ea:	rex.X (bad) 
   1400174ec:	(bad)  
   1400174ed:	add    BYTE PTR [rax],al
   1400174ef:	add    BYTE PTR [rax],ch
   1400174f1:	add    BYTE PTR [rax],al
   1400174f3:	add    BYTE PTR [rax+0x0],al
   1400174f9:	add    DWORD PTR [rax],eax
   1400174fb:	add    BYTE PTR [rcx],al
   1400174fd:	add    BYTE PTR [rax],ah
   1400174ff:	add    BYTE PTR [rax],al
   140017501:	add    BYTE PTR [rax],al
   140017503:	add    BYTE PTR [rax],al
   140017505:	or     BYTE PTR [rcx],al
	...
   140018367:	add    BYTE PTR [rax],al
   140018369:	add    BYTE PTR [rbp+0x2],dl
   14001836c:	add    BYTE PTR [rax],al
   14001836e:	push   rbp
   14001836f:	add    eax,0x8550000
   140018374:	add    BYTE PTR [rax],al
   140018376:	push   rbp
   140018377:	or     al,BYTE PTR [rax]
   140018379:	add    BYTE PTR [rbp+0xb],dl
   14001837c:	add    BYTE PTR [rax],al
   14001837e:	push   rbp
   14001837f:	or     eax,DWORD PTR [rax]
   140018381:	add    BYTE PTR [rbp+0xb],dl
   140018384:	add    BYTE PTR [rax],al
   140018386:	push   rbp
   140018387:	or     al,BYTE PTR [rax]
   140018389:	add    BYTE PTR [rbp+0x9],dl
   14001838c:	add    BYTE PTR [rax],al
   14001838e:	push   rbp
   14001838f:	or     BYTE PTR [rax],al
   140018391:	add    BYTE PTR [rbp+0x6],dl
   140018394:	add    BYTE PTR [rax],al
   140018396:	push   rbp
   140018397:	add    eax,0x3550000
   14001839c:	add    BYTE PTR [rax],al
   14001839e:	push   rbp
   14001839f:	add    DWORD PTR [rax],eax
	...
   14001855d:	add    BYTE PTR [rbp+0x2],dl
   140018560:	add    BYTE PTR [rax],al
   140018562:	push   rbp
   140018563:	(bad)  
   140018564:	or     cl,BYTE PTR [rsi]
   140018566:	pop    rsi
   140018567:	or     eax,0x11550000
   14001856c:	add    BYTE PTR [rax],al
   14001856e:	push   rbp
   14001856f:	(bad)  
   140018570:	add    BYTE PTR [rax],al
   140018572:	push   rbp
   140018573:	sbb    eax,0x1f550000
   140018578:	add    BYTE PTR [rax],al
   14001857a:	push   rbp
   14001857b:	and    DWORD PTR [rax],eax
   14001857d:	add    BYTE PTR [rbp+0x22],dl
   140018580:	add    BYTE PTR [rax],al
   140018582:	push   rbp
   140018583:	and    eax,DWORD PTR [rax]
   140018585:	add    BYTE PTR [rbp+0x20],dl
   140018588:	add    BYTE PTR [rax],al
   14001858a:	push   rbp
   14001858b:	(bad)  
   14001858c:	add    BYTE PTR [rax],al
   14001858e:	push   rbp
   14001858f:	sbb    eax,DWORD PTR [rax]
   140018591:	add    BYTE PTR [rbp+0x19],dl
   140018594:	add    BYTE PTR [rax],al
   140018596:	push   rbp
   140018597:	(bad)  
   140018598:	add    BYTE PTR [rax],al
   14001859a:	push   rbp
   14001859b:	adc    al,BYTE PTR [rax]
   14001859d:	add    BYTE PTR [rbp+0xd],dl
   1400185a0:	add    BYTE PTR [rax],al
   1400185a2:	push   rbp
   1400185a3:	or     BYTE PTR [rax],al
   1400185a5:	add    BYTE PTR [rbp+0x5],dl
   1400185a8:	add    BYTE PTR [rax],al
   1400185aa:	push   rbp
   1400185ab:	add    al,BYTE PTR [rax]
	...
   14001874d:	add    BYTE PTR [rax],al
   14001874f:	add    cl,al
   140018751:	(bad)  
   140018752:	inc    BYTE PTR [rcx]
   140018754:	pop    rsi
   140018755:	jge    0x1400186ff
   140018757:	add    al,0x2b
   140018759:	cmp    bh,BYTE PTR [rbx+0xa]
   14001875c:	(bad)  
   14001875d:	(bad)  
   14001875e:	imul   edx,DWORD PTR [rax],0x1a61120e
   140018764:	sub    ch,BYTE PTR [rcx-0x4d]
   140018767:	xor    al,0x98
   14001876a:	in     eax,0x72
   14001876c:	xor    ah,BYTE PTR [rdx+rsi*8-0x955cd6d]
   140018773:	mov    cl,0x30
   140018775:	stos   BYTE PTR es:[rdi],al
   140018776:	imul   BYTE PTR [rdi+rbp*1+0x31bcf8a9]
   14001877d:	test   eax,0xa52fb9f8
   140018782:	cmc    
   140018783:	lahf   
   140018784:	xor    BYTE PTR [rcx-0x69d2730e],ah
   14001878a:	jmp    0x140018803
   14001878c:	xor    ecx,DWORD PTR [rsi+0x7e3065de]
   140018792:	retf   
   140018793:	push   rbx
   140018794:	sub    ebp,DWORD PTR [rax-0x4a]
   140018797:	rex.X or BYTE PTR [rax],dl
   14001879a:	movsxd ebp,DWORD PTR [rcx]
   14001879c:	add    BYTE PTR [rax],al
   14001879e:	push   rbp
   14001879f:	and    al,BYTE PTR [rax]
   1400187a1:	add    BYTE PTR [rbp+0x1c],dl
   1400187a4:	add    BYTE PTR [rax],al
   1400187a6:	push   rbp
   1400187a7:	adc    eax,0xe550000
   1400187ac:	add    BYTE PTR [rax],al
   1400187ae:	push   rbp
   1400187af:	or     DWORD PTR [rax],eax
   1400187b1:	add    BYTE PTR [rbp+0x5],dl
   1400187b4:	add    BYTE PTR [rax],al
   1400187b6:	push   rbp
   1400187b7:	add    al,BYTE PTR [rax]
   1400187b9:	add    BYTE PTR [rbp+0x1],dl
	...
   140018944:	ret    
   140018945:	(bad)  
   140018946:	inc    BYTE PTR [rcx]
   140018948:	ret    0xfeff
   14001894b:	add    al,cl
   14001894d:	(bad)  
   14001894e:	inc    BYTE PTR [rbx]
   140018950:	rex.WRX
   140018951:	addr32 (bad) 
   140018953:	add    eax,0xf732c21
   140018958:	and    al,0x51
   14001895a:	popf   
   14001895b:	sub    DWORD PTR [rsi],esi
   14001895d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001895e:	repnz sub DWORD PTR [rdi],0xffffffb4
   140018962:	sti    
   140018963:	int3   
   140018964:	sub    BYTE PTR [rsi-0x4cdc2302],dh
   14001896a:	(bad)  
   14001896b:	(bad)  [rbx]
   14001896d:	mov    bl,0xff
   14001896f:	fsub   DWORD PTR [rax]
   140018971:	mov    al,0xff
   140018973:	shl    DWORD PTR [rax],cl
   140018975:	mov    al,0xff
   140018977:	(bad)  
   140018978:	(bad)  
   140018979:	scas   eax,DWORD PTR es:[rdi]
   14001897a:	dec    edx
   14001897c:	and    BYTE PTR [rbp-0x53e03b01],ch
   140018982:	(bad)  
   140018983:	mov    ebp,0xb4ffac1f
   140018988:	(bad)  
   140018989:	stos   BYTE PTR es:[rdi],al
   14001898a:	jmp    FWORD PTR [rdx-0x600055e3]
   140018990:	(bad)  
   140018991:	test   eax,0xa82296fe
   140018996:	std    
   140018997:	nop
   140018998:	cmps   BYTE PTR cs:[rsi],BYTE PTR es:[rdi]
   14001899a:	test   DWORD PTR [rbx+0x67ea992f],0x48cc7c2e
   1400189a4:	(bad)  
   1400189a5:	xchg   DWORD PTR ss:[rsi],ebp
   1400189a8:	add    BYTE PTR [rax],al
   1400189aa:	push   rbp
   1400189ab:	and    DWORD PTR [rax],eax
   1400189ad:	add    BYTE PTR [rbp+0x1b],dl
   1400189b0:	add    BYTE PTR [rax],al
   1400189b2:	push   rbp
   1400189b3:	adc    al,0x0
   1400189b5:	add    BYTE PTR [rbp+0xc],dl
   1400189b8:	add    BYTE PTR [rax],al
   1400189ba:	push   rbp
   1400189bb:	(bad)  
   1400189bc:	add    BYTE PTR [rax],al
   1400189be:	push   rbp
   1400189bf:	add    eax,DWORD PTR [rax]
   1400189c1:	add    BYTE PTR [rbp+0x1],dl
	...
   140018b3c:	(bad)  
   140018b3d:	(bad)  
   140018b3e:	inc    BYTE PTR [rcx]
   140018b40:	ret    
   140018b41:	(bad)  
   140018b42:	inc    BYTE PTR [rdx]
   140018b44:	ret    0xfeff
   140018b47:	add    cl,BYTE PTR [rsi+0x3a04d2bb]
   140018b4d:	rex.WR mov BYTE PTR [rdi],r8b
   140018b50:	and    eax,0x371a954b
   140018b55:	scas   eax,DWORD PTR es:[rdi]
   140018b56:	hlt    
   140018b57:	mov    DWORD PTR [rdi*4-0x43d62802],ebp
   140018b5e:	(bad)  
   140018b5f:	fbld   TBYTE PTR [rdi]
   140018b61:	mov    edx,0xb926deff
   140018b66:	(bad)  
   140018b67:	fsub   QWORD PTR [rsi+rsi*4]
   140018b6a:	(bad)  
   140018b6b:	fldenv [rbx]
   140018b6d:	mov    ch,0xff
   140018b6f:	fsub   DWORD PTR [rdx]
   140018b71:	mov    bl,0xff
   140018b73:	(bad)  
   140018b74:	and    BYTE PTR [rdx-0x4ddd3001],dh
   140018b7a:	dec    edx
   140018b7c:	and    BYTE PTR [rdi-0x50df3c01],ch
   140018b82:	(bad)  
   140018b83:	mov    esp,0xb3ffaf20
   140018b88:	(bad)  
   140018b89:	lods   al,BYTE PTR ds:[rsi]
   140018b8a:	jmp    FWORD PTR [rcx-0x620052e1]
   140018b90:	(bad)  
   140018b91:	lods   al,BYTE PTR ds:[rsi]
   140018b92:	call   QWORD PTR [rdi+rbx*1+0x1d8effaa]
   140018b99:	stos   BYTE PTR es:[rdi],al
   140018b9a:	dec    DWORD PTR [rbx-0x760056e3]
   140018ba0:	sbb    eax,0x2480ffa6
   140018ba5:	test   al,0xfc
   140018ba7:	je     0x140018bd9
   140018ba9:	movabs ds:0x4b1f3dd383315cf3,eax
   140018bb2:	(bad)  
   140018bb3:	sub    BYTE PTR [rcx],al
   140018bb5:	add    DWORD PTR [rsi+0x1b],edx
   140018bb8:	add    BYTE PTR [rax],al
   140018bba:	push   rbp
   140018bbb:	adc    eax,DWORD PTR [rax]
   140018bbd:	add    BYTE PTR [rbp+0xc],dl
   140018bc0:	add    BYTE PTR [rax],al
   140018bc2:	push   rbp
   140018bc3:	(bad)  
   140018bc4:	add    BYTE PTR [rax],al
   140018bc6:	push   rbp
   140018bc7:	add    eax,DWORD PTR [rax]
   140018bc9:	add    BYTE PTR [rbp+0x1],dl
	...
   140018c0c:	(bad)  
   140018c0d:	sbb    DWORD PTR fs:[rcx],ebx
   140018c10:	(bad)  
   140018c11:	sbb    DWORD PTR fs:[rdi],edi
   140018c14:	cdq    
   140018c15:	movsxd ebx,DWORD PTR [rcx]
   140018c17:	pop    rbp
   140018c18:	cdq    
   140018c19:	movsxd ebx,DWORD PTR [rcx]
   140018c1b:	sbb    BYTE PTR [rax-0x686fe69e],0x62
   140018c22:	sbb    DWORD PTR [rbx-0x54e69d69],ebp
   140018c28:	xchg   esi,eax
   140018c29:	(bad)  
   140018c2a:	sbb    BYTE PTR [rbx-0x29e79e6a],ch
   140018c30:	xchg   ebp,eax
   140018c31:	(bad)  
   140018c32:	sbb    dh,dl
   140018c34:	xchg   ebp,eax
   140018c35:	(bad)  
   140018c36:	sbb    dh,dl
   140018c38:	xchg   esp,eax
   140018c39:	pop    rdi
   140018c3a:	sbb    dh,dl
   140018c3c:	xchg   ebx,eax
   140018c3d:	pop    rdi
   140018c3e:	sbb    bh,dl
   140018c40:	xchg   ebx,eax
   140018c41:	pop    rdi
   140018c42:	sbb    bl,al
   140018c44:	xchg   edx,eax
   140018c45:	pop    rsi
   140018c46:	(bad)  
   140018c47:	lods   al,BYTE PTR ds:[rsi]
   140018c48:	xchg   edx,eax
   140018c49:	pop    rsi
   140018c4a:	(bad)  
   140018c4b:	test   eax,0x81175d91
   140018c50:	xchg   ecx,eax
   140018c51:	pop    rbp
   140018c52:	(bad)  
   140018c53:	ja     0x140018be5
   140018c55:	pop    rbp
   140018c56:	(bad)  
   140018c57:	push   rsi
   140018c58:	nop
   140018c59:	pop    rsp
   140018c5a:	(bad)  
   140018c5b:	cs (bad) 
   140018c5d:	pop    rsp
   140018c5e:	(bad)  
   140018c5f:	or     BYTE PTR [rax],al
	...
   140018d31:	add    BYTE PTR [rax],al
   140018d33:	add    ch,al
   140018d35:	(bad)  
   140018d36:	inc    BYTE PTR [rcx]
   140018d38:	(bad)  
   140018d39:	(bad)  
   140018d3a:	inc    BYTE PTR [rdx]
   140018d3c:	ret    
   140018d3d:	(bad)  
   140018d3e:	inc    BYTE PTR [rdx]
   140018d40:	ret    0xfeff
   140018d43:	add    eax,ecx
   140018d45:	(bad)  
   140018d46:	inc    BYTE PTR [rbx]
   140018d48:	rex.RX pop rsp
   140018d4a:	xchg   edx,eax
   140018d4b:	or     BYTE PTR [rip+0x332ec078],ch        # 0x173304dc9
   140018d51:	mov    esi,0xc32fbffc
   140018d56:	jmp    rdx
   140018d58:	sub    al,0xc0
   140018d5a:	jmp    rcx
   140018d5c:	sub    DWORD PTR [rbp-0x43d82001],edi
   140018d62:	(bad)  
   140018d63:	fisub  WORD PTR [rsi]
   140018d65:	mov    ecx,0xb924dcff
   140018d6a:	(bad)  
   140018d6b:	fisub  DWORD PTR [rbx]
   140018d6d:	mov    dh,0xff
   140018d6f:	xlat   BYTE PTR ds:[rbx]
   140018d70:	and    esi,DWORD PTR [rbp-0x4cdd2c01]
   140018d76:	dec    esi
   140018d78:	and    dh,BYTE PTR [rdx-0x4cdc3601]
   140018d7e:	inc    ebx
   140018d80:	and    esi,DWORD PTR [rax-0x4ddb4501]
   140018d86:	(bad)  
   140018d87:	mov    cl,0x24
   140018d89:	mov    al,0xfe
   140018d8b:	test   eax,0x9cffb023
   140018d90:	and    ch,BYTE PTR [rdi-0x52df6f01]
   140018d96:	dec    DWORD PTR [rax-0x7d0052e1]
   140018d9c:	(bad)  
   140018d9d:	lods   eax,DWORD PTR ds:[rsi]
   140018d9e:	(bad)  
   140018d9f:	jg     0x140018dc0
   140018da1:	stos   BYTE PTR es:[rdi],al
   140018da2:	(bad)  
   140018da3:	jnp    0x140018dc4
   140018da5:	stos   BYTE PTR es:[rdi],al
   140018da6:	push   QWORD PTR [rdi+rbx*1-0x56]
   140018daa:	jmp    FWORD PTR [rbx+0x1e]
   140018dad:	test   al,0xff
   140018daf:	pop    rbp
   140018db0:	es test al,0xfc
   140018db3:	rex.WRX xor QWORD PTR [rbx+0x63273beb],r11
   140018dba:	mov    dl,0x24
   140018dbc:	or     DWORD PTR [rbx],edx
   140018dbe:	data16 (bad) 
   140018dc0:	add    BYTE PTR [rax],al
   140018dc2:	push   rbp
   140018dc3:	adc    BYTE PTR [rax],al
   140018dc5:	add    BYTE PTR [rbp+0xa],dl
   140018dc8:	add    BYTE PTR [rax],al
   140018dca:	push   rbp
   140018dcb:	add    eax,0x3550000
   140018dd0:	add    BYTE PTR [rax],al
   140018dd2:	push   rbp
   140018dd3:	add    DWORD PTR [rax],eax
	...
   140018df5:	add    BYTE PTR [rax],al
   140018df7:	add    BYTE PTR [rbp-0x62fde59a],bl
   140018dfd:	data16 sbb dh,BYTE PTR [rbx*4-0x639be59a]
   140018e05:	sbb    dl,BYTE PTR gs:[rcx-0x41e59a64]
   140018e0c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140018e0d:	jo     0x140018e30
   140018e0f:	fnsave [rdx-0x4317d882]
   140018e15:	mov    ch,BYTE PTR [rbx]
   140018e17:	out    dx,eax
   140018e18:	(bad)
   140018e1b:	test   ah,0x99
   140018e1e:	cs clc 
   140018e20:	(bad)  
   140018e21:	movabs al,ds:0xa2d5fb30a2d4fb30
   140018e2a:	xor    bl,bh
   140018e2c:	fisubr DWORD PTR [rdx-0x542200d3]
   140018e32:	sub    eax,0x2dacddff
   140018e37:	(bad)  
   140018e38:	(bad)  [rbx-0x552200d3]
   140018e3e:	sub    eax,0x2fa7daff
   140018e43:	(bad)  
   140018e44:	(bad)  
   140018e45:	movabs ds:0x93c5fb2f9fd2fb30,eax
   140018e4e:	cs test cl,0x8f
   140018e52:	sub    eax,0x2984b7f5
   140018e57:	out    dx,eax
   140018e58:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140018e59:	jae    0x140018e7e
   140018e5b:	in     eax,0x94
   140018e5d:	(bad)  
   140018e5e:	sbb    bl,cl
   140018e60:	(bad)  
   140018e61:	pop    rsp
   140018e62:	(bad)  
   140018e63:	mov    edx,0x8e165b8f
   140018e68:	mov    ds,WORD PTR [rbx+0x16]
   140018e6b:	push   rcx
   140018e6c:	mov    ds,WORD PTR [rbx+0x16]
   140018e6f:	sbb    al,0x0
	...
   140018f2d:	add    BYTE PTR [rax],al
   140018f2f:	add    ch,al
   140018f31:	(bad)  
   140018f32:	inc    BYTE PTR [rcx]
   140018f34:	(bad)  
   140018f35:	(bad)  
   140018f36:	inc    BYTE PTR [rdx]
   140018f38:	ret    
   140018f39:	(bad)  
   140018f3a:	inc    BYTE PTR [rbx]
   140018f3c:	ret    0xfeff
   140018f3f:	add    eax,ecx
   140018f41:	(bad)  
   140018f42:	inc    BYTE PTR [rbx+rbp*2]
   140018f45:	mov    WORD PTR [rdx-0x145bc2fb],?
   140018f4b:	rex.XB xor ecx,r8d
   140018f4e:	call   rsi
   140018f50:	xor    al,cl
   140018f52:	jmp    rdx
   140018f54:	sub    eax,0x2ae1ffc4
   140018f59:	sar    bh,0xe1
   140018f5c:	sub    DWORD PTR [rdi-0x43d91f01],edi
   140018f62:	(bad)  
   140018f63:	frstor [rsi]
   140018f65:	mov    edx,0xb624dcff
   140018f6a:	(bad)  
   140018f6b:	(bad)  [rbx]
   140018f6d:	mov    ch,0xff
   140018f6f:	xlat   BYTE PTR ds:[rbx]
   140018f70:	and    al,0xb5
   140018f72:	call   rbx
   140018f74:	cs mov cl,0xfb
   140018f77:	mov    ah,0x38
   140018f79:	scas   eax,DWORD PTR es:[rdi]
   140018f7a:	div    BYTE PTR [rdx+0x3e]
   140018f7d:	test   al,0xf0
   140018f7f:	(bad)  
   140018f80:	rex.XB movabs ds:0xffae037834221ee7,eax
   140018f8a:	inc    BYTE PTR [rcx]
   140018f8c:	rex.R scas eax,DWORD PTR es:[rdi]
   140018f8e:	hlt    
   140018f8f:	adc    bh,BYTE PTR [rdi]
   140018f91:	lods   al,BYTE PTR ds:[rsi]
   140018f92:	repz (bad) 
   140018f94:	ss test eax,0xaa3336f4
   140018f9a:	cmc    
   140018f9b:	cmp    ch,BYTE PTR [rdx]
   140018f9d:	scas   al,BYTE PTR es:[rdi]
   140018f9e:	cli    
   140018f9f:	rex.WX and rax,0x2060fcae
   140018fa5:	lods   eax,DWORD PTR ds:[rsi]
   140018fa6:	jmp    QWORD PTR [rdi+0x20]
   140018fa9:	lods   eax,DWORD PTR ds:[rsi]
   140018faa:	jmp    QWORD PTR [rax+riz*1-0x54]
   140018fae:	call   FWORD PTR [rbp+0x1f]
   140018fb1:	stos   BYTE PTR es:[rdi],al
   140018fb2:	call   QWORD PTR [rsi+0x20]
   140018fb5:	stos   BYTE PTR es:[rdi],al
   140018fb6:	dec    DWORD PTR [rbx+0x1f]
   140018fb9:	test   eax,0xa52d40fe
   140018fbe:	div    BYTE PTR [rsp+rbp*1]
   140018fc1:	jns    0x140018f8b
   140018fc3:	(bad)  
   140018fc4:	adc    al,0x2d
   140018fc6:	jg     0x140018fdb
   140018fc8:	add    BYTE PTR [rax],al
   140018fca:	push   rbp
   140018fcb:	or     al,0x0
   140018fcd:	add    BYTE PTR [rbp+0x8],dl
   140018fd0:	add    BYTE PTR [rax],al
   140018fd2:	push   rbp
   140018fd3:	add    al,0x0
   140018fd5:	add    BYTE PTR [rbp+0x2],dl
   140018fd8:	add    BYTE PTR [rax],al
   140018fda:	push   rbp
   140018fdb:	add    DWORD PTR [rax],eax
	...
   140018fe9:	add    BYTE PTR [rax],al
   140018feb:	add    BYTE PTR [rsi-0x61f5e599],bl
   140018ff1:	sbb    cl,BYTE PTR [eax-0x62]
   140018ff5:	sbb    dl,BYTE PTR [ecx-0x34e59963]
   140018ffc:	mov    al,0x7a
   140018ffe:	es out 0xbd,al
   140019001:	mov    ch,BYTE PTR [rbx]
   140019003:	icebp  
   140019004:	retf   0x2d96
   140019007:	clc    
   140019008:	(bad)  
   140019009:	movabs eax,ds:0xacddff2ba8d9fe2d
   140019012:	cs (bad) 
   140019014:	fbstp  TBYTE PTR [rcx-0x4d1d00d1]
   14001901a:	xor    edi,edi
   14001901c:	loop   0x140018fd3
   14001901e:	xor    edi,edi
   140019020:	in     al,0xb7
   140019022:	xor    al,0xff
   140019024:	in     eax,0xb8
   140019026:	ss jmp rsi
   140019029:	mov    ecx,0xbce7ff37
   14001902e:	cmp    bh,bh
   140019030:	out    0xbc,al
   140019032:	cmp    bh,bh
   140019034:	out    0xbb,eax
   140019036:	cmp    bh,bh
   140019038:	out    0xbc,al
   14001903a:	cmp    bh,bh
   14001903c:	out    0xbb,al
   14001903e:	cmp    bh,bh
   140019040:	call   0x12600c8fe
   140019045:	mov    edx,0xb8e5ff36
   14001904a:	ss jmp rbx
   14001904d:	mov    bh,0x35
   14001904f:	jmp    rdx
   140019051:	mov    bl,0x34
   140019053:	jmp    rcx
   140019055:	mov    al,0x32
   140019057:	(bad)  
   140019058:	fisubr WORD PTR [rbp-0x562300cf]
   14001905e:	cs call rbp
   140019061:	movabs al,ds:0x7eb1f82c91c8fc2f
   14001906a:	es out dx,al
   14001906c:	(bad)  
   14001906d:	push   0x5b8ee01d
   140019072:	(bad)  
   140019073:	mov    edi,0x7a165a8d
   140019078:	lea    ebx,[rdx+0x16]
   14001907b:	xor    eax,DWORD PTR [rax]
	...
   140019129:	add    BYTE PTR [rax],al
   14001912b:	add    ch,al
   14001912d:	(bad)  
   14001912e:	inc    BYTE PTR [rcx]
   140019130:	(bad)  
   140019131:	(bad)  
   140019132:	inc    BYTE PTR [rdx]
   140019134:	ret    
   140019135:	(bad)  
   140019136:	inc    BYTE PTR [rbx]
   140019138:	ret    0xfeff
   14001913b:	add    eax,edx
   14001913d:	(bad)  
   14001913e:	inc    BYTE PTR [rax+rbx*4]
   140019141:	leave  
   140019142:	fiadd  DWORD PTR [rdx+rdi*1]
   140019145:	(bad)  
   140019146:	shl    BYTE PTR [rsp+rsi*1],cl
   140019149:	retf   
   14001914a:	call   rbx
   14001914c:	xor    al,0xcd
   14001914e:	jmp    rbx
   140019150:	xor    al,cl
   140019152:	jmp    rdx
   140019154:	sub    eax,0x2ae1ffc4
   140019159:	sar    bh,0xe1
   14001915c:	sub    DWORD PTR [rbp-0x46d92001],edi
   140019162:	(bad)  
   140019163:	fisub  WORD PTR [rdi+rsi*4]
   140019166:	(bad)  
   140019167:	fsub   QWORD PTR [rbx]
   140019169:	mov    ch,0xff
   14001916b:	fnstenv [rax]
   14001916d:	mov    dl,0xfb
   14001916f:	vpminsw ymm11,ymm11,YMMWORD PTR [r9+0x29]
   140019175:	cmp    edi,DWORD PTR [rbp+0x8]
   140019178:	add    BYTE PTR [rax],al
   14001917a:	push   rbp
   14001917b:	add    DWORD PTR [rax],eax
	...
   1400191a1:	add    BYTE PTR [rax],al
   1400191a3:	add    BYTE PTR [rbx-0x4b],al
   1400191a6:	test   DWORD PTR [rbx],0x25f5b43a
   1400191ac:	sub    esi,DWORD PTR [rbx-0x50ddc005]
   1400191b2:	call   QWORD PTR [rax+0x22]
   1400191b5:	lods   eax,DWORD PTR ds:[rsi]
   1400191b6:	dec    DWORD PTR [rax+riz*1-0x54]
   1400191ba:	inc    DWORD PTR [rbp+0x22]
   1400191bd:	lods   al,BYTE PTR ds:[rsi]
   1400191be:	(bad)  
   1400191bf:	and    BYTE PTR ds:[rdx-0x56d4ce01],ch
   1400191c6:	sti    
   1400191c7:	and    eax,0x17e09534
   1400191cc:	sbb    edi,DWORD PTR [rsi]
   1400191ce:	lea    ecx,[rip+0x8550000]        # 0x1485691d4
   1400191d4:	add    BYTE PTR [rax],al
   1400191d6:	push   rbp
   1400191d7:	add    eax,0x2550000
   1400191dc:	add    BYTE PTR [rax],al
   1400191de:	push   rbp
   1400191df:	add    DWORD PTR [rax],eax
   1400191e1:	add    BYTE PTR [rax],al
   1400191e3:	add    BYTE PTR [rdi-0x60d2e499],bl
   1400191e9:	sbb    eax,DWORD PTR [esi-0x31e49862]
   1400191f0:	mov    dh,0x82
   1400191f2:	sub    ebp,ebx
   1400191f4:	(bad)  
   1400191f5:	xchg   ebx,eax
   1400191f6:	sub    al,0xf8
   1400191f8:	rcr    BYTE PTR [rbp-0x5a2701d6],cl
   1400191fe:	sub    al,0xff
   140019200:	fld    TBYTE PTR [rdx-0x512000d1]
   140019206:	xor    edi,edi
   140019208:	loope  0x1400191bd
   14001920a:	xor    edi,edi
   14001920c:	in     al,0xb9
   14001920e:	xor    eax,0x36bbe5ff
   140019213:	jmp    rdi
   140019215:	mov    ebp,0xbde8ff3a
   14001921a:	cmp    bh,bh
   14001921c:	jmp    0x12a00cce1
   140019221:	ret    0xff3a
   140019224:	(bad)  
   140019225:	sar    BYTE PTR [rip+0x3dc3ebff],0xff        # 0x17dc57e2b
   14001922c:	jmp    0x1400191f2
   14001922e:	cmp    eax,0x3ec4ebff
   140019233:	(bad)  
   140019234:	jmp    0x1400191fb
   140019236:	cmp    eax,0x3fc5ebff
   14001923b:	(bad)  
   14001923c:	in     al,dx
   14001923d:	(bad)
   140019240:	in     eax,dx
   140019241:	(bad)
   140019244:	in     eax,dx
   140019245:	ret    
   140019246:	(bad)  
   140019247:	(bad)  
   140019248:	in     eax,dx
   140019249:	ret    
   14001924a:	(bad)  
   14001924b:	(bad)  
   14001924c:	in     al,dx
   14001924d:	sar    DWORD PTR [rdi],0xff
   140019250:	(bad)  
   140019251:	sar    DWORD PTR [rsi],0xff
   140019254:	jmp    0x140019216
   140019256:	cmp    al,0xff
   140019258:	out    0xbc,eax
   14001925a:	cmp    edi,edi
   14001925c:	out    0xba,eax
   14001925e:	cmp    edi,edi
   140019260:	in     eax,0xb7
   140019262:	cmp    bh,bh
   140019264:	loope  0x140019216
   140019266:	xor    al,0xff
   140019268:	fisubr WORD PTR [rbx-0x5b2600cf]
   14001926e:	cs call rbx
   140019271:	fwait
   140019272:	sub    edi,esp
   140019274:	mov    ebx,0xa3f52887
   140019279:	outs   dx,DWORD PTR ds:[rsi]
   14001927a:	and    esi,esp
   14001927c:	lea    ebx,[rdx+0x16]
   14001927f:	ror    DWORD PTR [rdx+rbx*2+0x598c7516],0x16
   140019287:	(bad)  
	...
   140019328:	(bad)  
   14001932b:	add    esp,eax
   14001932d:	(bad)  
   14001932e:	inc    BYTE PTR [rbx]
   140019330:	ret    
   140019331:	(bad)  
   140019332:	inc    BYTE PTR [rbx]
   140019334:	ret    0xfeff
   140019337:	add    al,0xc2
   140019339:	(bad)  
   14001933a:	inc    BYTE PTR [rcx+rax*8]
   14001933d:	(bad)  
   14001933e:	inc    BYTE PTR [rdx+rdx*2]
   140019341:	(bad)  
   140019342:	mov    ch,0xd
   140019344:	cmp    bl,cl
   140019346:	std    
   140019347:	mov    dl,0x36
   140019349:	(bad)  
   14001934a:	jmp    rsp
   14001934c:	xor    ecx,ebp
   14001934e:	jmp    rdx
   140019350:	xor    dl,cl
   140019352:	jmp    rdx
   140019354:	sub    al,0xc3
   140019356:	jmp    rcx
   140019358:	(bad)  
   140019359:	mov    edi,0xba26e1ff
   14001935e:	jmp    rax
   140019360:	and    esi,DWORD PTR [rdi-0x4adc2101]
   140019366:	(bad)  
   140019367:	fdivr  QWORD PTR [rdx]
   140019369:	mov    al,0xf6
   14001936b:	mov    cl,0x3d
   14001936d:	add    bl,0x25
   140019370:	and    BYTE PTR [rip+0x474],ch        # 0x1400197ea
	...
   1400193ae:	add    BYTE PTR [rax],al
   1400193b0:	mov    r13b,0xf7
   1400193b3:	add    eax,0x1cf6b134
   1400193b8:	and    eax,0x2435fcaf
   1400193bd:	mov    al,0xff
   1400193bf:	cmp    al,0x23
   1400193c1:	scas   eax,DWORD PTR es:[rdi]
   1400193c2:	push   QWORD PTR [rip+0x2cffaf23]        # 0x16d0142eb
   1400193c8:	and    ebp,DWORD PTR [rbp-0x53d5df01]
   1400193ce:	cld    
   1400193cf:	(bad)  
   1400193d0:	xor    eax,0x190edf94
   1400193d5:	(bad)  
   1400193d6:	xchg   DWORD PTR [rsi],eax
   1400193d8:	jbe    0x140019427
   1400193da:	sub    al,BYTE PTR [rdi]
   1400193dc:	lahf   
   1400193dd:	sbb    ecx,DWORD PTR [ebp-0x61]
   1400193e1:	push   0x79aea61b
   1400193e6:	(bad)  
   1400193e7:	loop   0x1400193ae
   1400193e9:	(bad)  
   1400193ea:	sub    esi,esi
   1400193ec:	rcr    DWORD PTR [rbx-0x5c2901d8],1
   1400193f2:	sub    al,0xff
   1400193f4:	fisubr DWORD PTR [rcx-0x512100d0]
   1400193fa:	xor    bh,bh
   1400193fc:	loope  0x1400193b3
   1400193fe:	ss jmp rsp
   140019401:	mov    bh,0x37
   140019403:	jmp    rbp
   140019405:	mov    ebx,0xbee7ff37
   14001940a:	cmp    bh,bh
   14001940c:	jmp    0x12b00d0d2
   140019411:	ret    
   140019412:	cmp    eax,0x3fc7ebff
   140019417:	(bad)  
   140019418:	in     eax,dx
   140019419:	(bad)  
   14001941a:	(bad)  
   14001941b:	(bad)  
   14001941c:	in     eax,dx
   14001941d:	enter  0xff40,0xee
   140019421:	leave  
   140019422:	rex.X (bad) 
   140019424:	in     eax,dx
   140019425:	retf   0xff43
   140019428:	out    dx,al
   140019429:	int3   
   14001942a:	rex.XB (bad) 
   14001942c:	out    dx,eax
   14001942d:	int3   
   14001942e:	rex.R push rax
   140019431:	int    0x43
   140019433:	push   rax
   140019435:	int    0x46
   140019437:	push   rax
   140019439:	int    0x45
   14001943b:	push   rax
   14001943d:	int    0x46
   14001943f:	push   rcx
   140019441:	int    0x45
   140019443:	push   rcx
   140019445:	int    0x46
   140019447:	push   rdx
   140019449:	retf   
   14001944a:	rex.XB push r9
   14001944d:	leave  
   14001944e:	rex.RB (bad) 
   140019450:	out    dx,eax
   140019451:	retf   0xff44
   140019454:	out    dx,eax
   140019455:	leave  
   140019456:	rex.XB (bad) 
   140019458:	out    dx,al
   140019459:	mov    DWORD PTR [rbx-0x1],0xff42c3eb
   140019460:	jmp    0x140019423
   140019462:	(bad)  
   140019463:	(bad)  
   140019464:	jmp    0x12900d327
   140019469:	mov    ebx,0xb5e4ff3c
   14001946e:	cmp    bh,bh
   140019470:	loope  0x140019422
   140019472:	ss (bad) 
   140019474:	fsubr  QWORD PTR [rax-0x5d2700cf]
   14001947a:	sub    eax,0x2898d1ff
   14001947f:	(bad)  
   140019480:	mov    ecx,0x99f52684
   140019485:	data16 sbb al,0xe2
   140019488:	mov    WORD PTR [rcx+0x16],ds
   14001948b:	fwait
   14001948c:	mov    ebx,DWORD PTR [rcx+0x16]
   14001948f:	cmp    eax,0x0
	...
   140019528:	(bad)  
   140019529:	(bad)  
   14001952a:	inc    BYTE PTR [rbx]
   14001952c:	ret    
   14001952d:	(bad)  
   14001952e:	inc    BYTE PTR [rbx]
   140019530:	ret    
   140019531:	(bad)  
   140019532:	inc    BYTE PTR [rdx+rax*8]
   140019535:	(bad)  
   140019536:	inc    BYTE PTR [rcx+rax*8]
   140019539:	(bad)  
   14001953a:	inc    BYTE PTR [riz*4+0x3e06e6dc]
   140019541:	mov    edi,0xd23a62f8
   140019546:	jmp    rsp
   140019548:	ss sar edi,1
   14001954b:	jrcxz  0x140019580
   14001954d:	int    0xff
   14001954f:	jrcxz  0x140019580
   140019551:	enter  0xe2ff,0x2a
   140019555:	ret    
   140019556:	jmp    rcx
   140019558:	(bad)  
   140019559:	mov    ebp,0xb924e1ff
   14001955e:	jmp    rax
   140019560:	and    dh,BYTE PTR [rbp-0x4fc52001]
   140019566:	div    BYTE PTR [rsi+0x20a76536]
   14001956c:	sbb    esp,DWORD PTR [rsi]
   14001956e:	outs   dx,DWORD PTR ds:[rsi]
   14001956f:	add    eax,0x0
	...
   1400195bc:	xor    al,0xa4
   1400195be:	(bad)  
   1400195bf:	or     ebp,DWORD PTR [rbx]
   1400195c1:	mov    cl,0xf9
   1400195c3:	(bad)  
   1400195c4:	es mov dl,0xff
   1400195c7:	sub    DWORD PTR [rdx+rsi*4],esp
   1400195ca:	jmp    QWORD PTR [rbx]
   1400195cc:	and    al,0xb0
   1400195ce:	call   QWORD PTR [rdi]
   1400195d0:	and    al,0xaf
   1400195d2:	dec    DWORD PTR [rsi]
   1400195d4:	xchg   edi,eax
   1400195d5:	outs   dx,DWORD PTR ds:[rsi]
   1400195d6:	sub    eax,0x1d6aa054
   1400195db:	mov    esp,0xeb2b82b8
   1400195e0:	retf   
   1400195e1:	xchg   esp,eax
   1400195e2:	sub    bh,bl
   1400195e4:	rcr    DWORD PTR [rdi+riz*1+0x2da4d8ff],cl
   1400195eb:	(bad)  
   1400195ec:	fld    TBYTE PTR [rdx-0x4f2100cf]
   1400195f2:	xor    al,0xff
   1400195f4:	loop   0x1400195aa
   1400195f6:	(bad)  
   1400195f7:	jmp    rbx
   1400195f9:	mov    eax,0xbbe7ff36
   1400195fe:	cmp    edi,edi
   140019600:	out    0xbf,eax
   140019602:	cmp    edi,edi
   140019604:	(bad)  
   140019605:	ret    0xff3e
   140019608:	jmp    0x1400195cf
   14001960a:	(bad)  
   14001960b:	(bad)  
   14001960c:	in     al,dx
   14001960d:	retf   0xff42
   140019610:	out    dx,al
   140019611:	int3   
   140019612:	rex.X (bad) 
   140019614:	out    dx,eax
   140019615:	(bad)  
   140019616:	rex.R (bad) 
   140019618:	out    dx,eax
   140019619:	(bad)  
   14001961a:	rex.RX push rcx
   14001961d:	iret   
   14001961e:	rex.W push rcx
   140019621:	ror    DWORD PTR [rax-0x1],1
   140019624:	repnz ror DWORD PTR [rcx-0x1],1
   140019628:	repnz ror BYTE PTR [rcx-0x1],cl
   14001962c:	repnz ror DWORD PTR [rdx-0x1],1
   140019630:	repnz ror BYTE PTR [rbx-0x1],cl
   140019634:	repz ror DWORD PTR [rbx-0x1],cl
   140019638:	repz (bad) 
   14001963a:	rex.WXB push r12
   14001963d:	ror    BYTE PTR [rdi+rdi*8-0xc],cl
   140019641:	(bad)  
   140019642:	rex.WR push rsp
   140019645:	(bad)  
   140019646:	rex.WR push rsp
   140019649:	(bad)  
   14001964a:	rex.WXB push r11
   14001964d:	ror    BYTE PTR [rdx-0x1],1
   140019650:	repnz ror BYTE PTR [rdx-0x1],1
   140019654:	repz iret 
   140019656:	rex.WB push r9
   140019659:	iret   
   14001965a:	rex.RX push rax
   14001965d:	int3   
   14001965e:	rex.W (bad) 
   140019660:	out    dx,eax
   140019661:	enter  0xff45,0xee
   140019665:	(bad)
   140019668:	in     eax,dx
   140019669:	ret    0xff42
   14001966c:	(bad)  
   14001966d:	mov    edi,0xbce9ff40
   140019672:	cmp    eax,0x39b9e5ff
   140019677:	jmp    rsp
   140019679:	mov    dl,0x38
   14001967b:	jmp    rax
   14001967d:	lods   al,BYTE PTR ds:[rsi]
   14001967e:	xor    al,0xff
   140019680:	fsub   QWORD PTR [rbp-0x602a00d2]
   140019686:	sub    bh,bh
   140019688:	ror    DWORD PTR [rcx+0x71a5f926],0x20
   14001968f:	jmp    0xf217f01f
   140019694:	mov    ebx,DWORD PTR [rcx+0x16]
   140019697:	rex.WR add BYTE PTR [rax],r8b
	...
   140019722:	add    BYTE PTR [rax],al
   140019724:	(bad)  
   140019725:	(bad)  
   140019726:	inc    BYTE PTR [rdx]
   140019728:	ret    
   140019729:	(bad)  
   14001972a:	inc    BYTE PTR [rbx+rax*8]
   14001972d:	(bad)  
   14001972e:	inc    BYTE PTR [rdx+rax*8]
   140019731:	(bad)  
   140019732:	inc    BYTE PTR [rcx+rax*8]
   140019735:	(bad)  
   140019736:	inc    BYTE PTR [rip+0x7feffc0]        # 0x1480096fc
   14001973c:	nop
   14001973d:	(bad)  
   14001973e:	(bad)  [rbx+rdi*1]
   140019741:	sar    bh,cl
   140019743:	sar    DWORD PTR [rdx],0xd5
   140019746:	jmp    rsp
   140019748:	ss sar edi,1
   14001974b:	in     al,0x31
   14001974d:	retf   
   14001974e:	jmp    rsp
   140019750:	sub    eax,0x29e2ffc7
   140019755:	sar    bh,0xe1
   140019758:	es mov ecx,0xb523e1ff
   14001975e:	jmp    rax
   140019760:	xor    BYTE PTR [rcx+0x7e3ddafb],dh
   140019766:	sar    DWORD PTR [rip+0x962130f],0x0        # 0x14963aa7c
	...
   1400197c1:	add    BYTE PTR [rax],al
   1400197c3:	add    BYTE PTR [rip+0x2f03f9b7],bh        # 0x16f059180
   1400197c9:	mov    edx,0x7a840ffe
   1400197ce:	push   rax
   1400197cf:	rex.WRB
   1400197d0:	fwait
   1400197d1:	ins    DWORD PTR es:[rdi],dx
   1400197d2:	(bad)  
   1400197d3:	mov    al,0xb6
   1400197d5:	test   BYTE PTR [rcx],dh
   1400197d7:	in     al,dx
   1400197d8:	retf   0x2792
   1400197db:	sti    
   1400197dc:	rcr    BYTE PTR [rbp-0x5b2800d6],cl
   1400197e2:	cs (bad) 
   1400197e4:	fisubr DWORD PTR [rcx-0x502000cf]
   1400197ea:	xor    edi,edi
   1400197ec:	loopne 0x1400197a1
   1400197ee:	xor    eax,0x37b6e2ff
   1400197f3:	jmp    rbp
   1400197f5:	mov    esp,0xc0e7ff3b
   1400197fa:	cmp    eax,0x40c3e9ff
   1400197ff:	(bad)  
   140019800:	jmp    0x1400197ca
   140019802:	rex.B (bad) 
   140019804:	in     eax,dx
   140019805:	retf   0xff43
   140019808:	out    dx,eax
   140019809:	int3   
   14001980a:	rex.RB (bad) 
   14001980c:	out    dx,eax
   14001980d:	(bad)  
   14001980e:	rex.RXB push r9
   140019811:	rol    BYTE PTR [rdi-0x1],1
   140019814:	repnz ror DWORD PTR [rdx-0x1],1
   140019818:	repnz (bad) 
   14001981a:	rex.WXB push r12
   14001981d:	(bad)  
   14001981e:	rex.WR push rsp
   140019821:	fmul   DWORD PTR [rdi-0x1]
   140019824:	cmc    
   140019825:	fmul   DWORD PTR [rdi-0x1]
   140019828:	cmc    
   140019829:	fcom   DWORD PTR [rax-0x1]
   14001982c:	cmc    
   14001982d:	fcom   DWORD PTR [rcx-0x1]
   140019830:	cmc    
   140019831:	fcom   DWORD PTR [rax-0x1]
   140019834:	cmc    
   140019835:	fst    DWORD PTR [rcx-0x1]
   140019838:	neg    bl
   14001983a:	push   rax
   14001983b:	push   rsi
   14001983d:	ficom  DWORD PTR [rcx-0x1]
   140019840:	neg    dl
   140019842:	push   rax
   140019843:	push   rsi
   140019845:	fcom   DWORD PTR [rcx-0x1]
   140019848:	neg    al
   14001984a:	push   rdx
   14001984b:	push   rsi
   14001984d:	fst    DWORD PTR [rcx-0x1]
   140019850:	neg    al
   140019852:	push   rax
   140019853:	push   rbp
   140019855:	(bad)  
   140019856:	push   rax
   140019857:	push   rbp
   140019859:	(bad)  
   14001985a:	rex.WRXB push r11
   14001985d:	ror    BYTE PTR [rsi-0x1],cl
   140019860:	repnz ror BYTE PTR [rdi+rdi*8-0xf],1
   140019865:	(bad)  
   140019866:	rex.WXB push r8
   140019869:	int3   
   14001986a:	rex.WX (bad) 
   14001986c:	out    dx,eax
   14001986d:	mov    DWORD PTR [rdi-0x1],0xff44c4ed
   140019874:	jmp    0x140019834
   140019876:	rex.B (bad) 
   140019878:	call   0x12700d838
   14001987d:	mov    eax,0xb4e4ff3c
   140019882:	cmp    edi,edi
   140019884:	loopne 0x140019833
   140019886:	xor    al,0xff
   140019888:	fsub   QWORD PTR [rsi-0x632b00d2]
   14001988e:	sub    bh,bh
   140019890:	(bad)  
   140019891:	mov    esp,DWORD PTR [rdx]
   140019893:	cli    
   140019894:	test   al,0x72
   140019896:	and    ch,ah
   140019898:	mov    ebx,DWORD PTR [rcx+0x16]
   14001989b:	scas   eax,DWORD PTR es:[rdi]
   14001989c:	mov    bl,BYTE PTR [rax+0x15]
   14001989f:	cmp    al,BYTE PTR [rax]
	...
   140019921:	add    BYTE PTR [rax],al
   140019923:	add    ah,al
   140019925:	(bad)  
   140019926:	inc    BYTE PTR [rbx+rax*8]
   140019929:	(bad)  
   14001992a:	inc    BYTE PTR [rdx+rax*8]
   14001992d:	(bad)  
   14001992e:	inc    BYTE PTR [rcx+rax*8]
   140019931:	(bad)  
   140019932:	inc    BYTE PTR [rip+0x7feffc0]        # 0x1480098f8
   140019938:	mov    edi,0x4f09feff
   14001993d:	ret    0x39f5
   140019940:	cmp    eax,0x39e4ffd7
   140019945:	(bad)  
   140019946:	jmp    rsp
   140019948:	xor    al,0xd1
   14001994a:	jmp    rbp
   14001994c:	(bad)  
   14001994d:	retf   
   14001994e:	jmp    rsp
   140019950:	sub    al,cl
   140019952:	jmp    rdx
   140019954:	es mov ebp,0xb623e2ff
   14001995a:	jmp    rcx
   14001995c:	and    dh,BYTE PTR [rdx-0x58ba2002]
   140019962:	jmp    0x1400198f7
   140019964:	adc    ebx,DWORD PTR [rbx]
   140019966:	push   0x55000012
   14001996b:	add    eax,DWORD PTR [rax]
	...
   1400199c1:	add    BYTE PTR [rax],al
   1400199c3:	add    BYTE PTR [rdx-0x5debe496],ah
   1400199c9:	push   0x1b
   1400199cb:	(bad)  
   1400199cc:	mov    ch,0x7f
   1400199ce:	sub    esp,edi
   1400199d0:	(bad)  
   1400199d1:	(bad)  
   1400199d2:	es sti 
   1400199d4:	rcr    DWORD PTR [rcx+rbp*1+0x2ea2d6ff],1
   1400199db:	(bad)  
   1400199dc:	fsubr  DWORD PTR [rcx-0x502200ce]
   1400199e2:	xor    al,0xff
   1400199e4:	fbstp  TBYTE PTR [rcx-0x4a1d00c9]
   1400199ea:	(bad)  
   1400199eb:	jmp    rsp
   1400199ed:	mov    edx,0xbee7ff3a
   1400199f2:	cmp    eax,0x3fc2e9ff
   1400199f7:	(bad)  
   1400199f8:	jmp    0x1400199c1
   1400199fa:	rex.X (bad) 
   1400199fc:	in     eax,dx
   1400199fd:	enter  0xff44,0xef
   140019a01:	int    0x46
   140019a03:	push   rax
   140019a05:	iret   
   140019a06:	rex.W push rax
   140019a09:	ror    DWORD PTR [rdx-0x1],1
   140019a0c:	repz (bad) 
   140019a0e:	rex.WRB push r11
   140019a11:	xlat   BYTE PTR ds:[rbx]
   140019a12:	rex.WRB push r12
   140019a15:	fimul  DWORD PTR [rdi-0x1]
   140019a18:	cmc    
   140019a19:	fist   DWORD PTR [rcx-0x1]
   140019a1c:	neg    ah
   140019a1e:	push   rbx
   140019a1f:	push   rsi
   140019a21:	fcom   QWORD PTR [rdi+rdi*8-0xa]
   140019a25:	fst    QWORD PTR [rdi+rdi*8-0x9]
   140019a29:	fst    QWORD PTR [rsi-0x1]
   140019a2c:	neg    ebp
   140019a2e:	push   rsi
   140019a2f:	push   rdi
   140019a31:	ficom  WORD PTR [rdi-0x1]
   140019a34:	neg    edi
   140019a36:	push   rsi
   140019a37:	push   rdi
   140019a39:	fistp  WORD PTR [rax-0x1]
   140019a3c:	neg    ebp
   140019a3e:	pop    rax
   140019a3f:	push   rdi
   140019a41:	ficomp WORD PTR [rcx-0x1]
   140019a44:	neg    edi
   140019a46:	push   rsi
   140019a47:	(bad)  
   140019a48:	clc    
   140019a49:	ficom  WORD PTR [rdi-0x1]
   140019a4c:	clc    
   140019a4d:	ficomp WORD PTR [rax-0x1]
   140019a50:	clc    
   140019a51:	fst    QWORD PTR [rdi-0x1]
   140019a54:	neg    ebp
   140019a56:	push   rsi
   140019a57:	push   rdi
   140019a59:	fcom   QWORD PTR [rbx-0x1]
   140019a5c:	neg    dl
   140019a5e:	push   rbx
   140019a5f:	push   rsi
   140019a61:	fst    DWORD PTR [rcx-0x1]
   140019a64:	cmc    
   140019a65:	xlat   BYTE PTR ds:[rbx]
   140019a66:	push   rcx
   140019a67:	push   rsp
   140019a69:	ror    DWORD PTR [rsi-0x1],1
   140019a6c:	repz (bad) 
   140019a6e:	rex.WR push rax
   140019a71:	int3   
   140019a72:	rex.WB (bad) 
   140019a74:	out    dx,eax
   140019a75:	retf   0xff47
   140019a78:	in     eax,dx
   140019a79:	ret    0xff44
   140019a7c:	jmp    0x140019a3c
   140019a7e:	rex (bad) 
   140019a80:	call   0x12900d940
   140019a85:	mov    ch,0x3d
   140019a87:	jmp    rbp
   140019a89:	mov    dl,0x38
   140019a8b:	jmp    rax
   140019a8d:	stos   DWORD PTR es:[rdi],eax
   140019a8e:	xor    al,0xff
   140019a90:	(bad)  [rsi+rbp*1+0x279ad5ff]
   140019a97:	(bad)  
   140019a98:	mov    edi,0xa2fa1e85
   140019a9d:	ins    BYTE PTR es:[rdi],dx
   140019a9e:	and    cl,ch
   140019aa0:	mov    bl,BYTE PTR [rax+0x15]
   140019aa3:	xchg   ecx,eax
   140019aa4:	mov    bl,BYTE PTR [rax+0x15]
   140019aa7:	adc    al,0x0
	...
   140019b1d:	add    BYTE PTR [rax],al
   140019b1f:	add    ah,al
   140019b21:	(bad)  
   140019b22:	inc    BYTE PTR [rcx]
   140019b24:	ret    
   140019b25:	(bad)  
   140019b26:	inc    BYTE PTR [rdx+rax*8]
   140019b29:	(bad)  
   140019b2a:	inc    BYTE PTR [rcx+rax*8]
   140019b2d:	(bad)  
   140019b2e:	inc    BYTE PTR [rip+0x7feffc0]        # 0x148009af4
   140019b34:	mov    edi,0xbe09feff
   140019b39:	(bad)  
   140019b3a:	dec    BYTE PTR [rbx]
   140019b3c:	rex.XB sar r12b,1
   140019b3f:	jnp    0x140019b7e
   140019b41:	fdivr  st,st(7)
   140019b43:	in     al,0x39
   140019b45:	(bad)  
   140019b46:	jmp    rsp
   140019b48:	xor    ecx,esi
   140019b4a:	jmp    rsp
   140019b4c:	sub    eax,0x29e3ffc8
   140019b51:	mov    edi,0xb924e3ff
   140019b56:	jmp    rdx
   140019b58:	and    BYTE PTR [rdx-0x52ce1e01],dh
   140019b5e:	stc    
   140019b5f:	fidivr WORD PTR [rax]
   140019b61:	jae    0x140019b19
   140019b63:	cmp    eax,0xb61110d
	...
   140019bc0:	movabs ds:0xbdc81b6aa34d1c6a,eax
   140019bc9:	test   DWORD PTR [rip+0x2599d0f4],esp        # 0x1659b6cc3
   140019bcf:	call   rbp
   140019bd1:	movabs eax,ds:0xaddcff2ea8d9ff2b
   140019bda:	xor    bh,bh
   140019bdc:	fidiv  WORD PTR [rax-0x4a1f00cc]
   140019be2:	(bad)  
   140019be3:	jmp    rdx
   140019be5:	mov    eax,0xbce5ff3a
   140019bea:	cmp    eax,0x3fc0e7ff
   140019bef:	(bad)  
   140019bf0:	jmp    0x12d00dcb9
   140019bf5:	enter  0xff43,0xee
   140019bf9:	retf   
   140019bfa:	rex.RB push r8
   140019bfd:	iret   
   140019bfe:	rex.WB push r9
   140019c01:	ror    BYTE PTR [rbx-0x1],cl
   140019c04:	repnz (bad) 
   140019c06:	rex.WRXB push r12
   140019c09:	xlat   BYTE PTR ds:[rbx]
   140019c0a:	push   rax
   140019c0b:	push   rsp
   140019c0d:	fist   DWORD PTR [rdx-0x1]
   140019c10:	cmc    
   140019c11:	fcom   QWORD PTR [rbx-0x1]
   140019c14:	neg    esi
   140019c16:	push   rsi
   140019c17:	push   rdi
   140019c19:	ficom  WORD PTR [rsi-0x1]
   140019c1c:	neg    edi
   140019c1e:	pop    rcx
   140019c1f:	(bad)  
   140019c20:	clc    
   140019c21:	loopne 0x140019c7d
   140019c23:	(bad)  
   140019c24:	clc    
   140019c25:	loopne 0x140019c83
   140019c27:	(bad)  
   140019c28:	clc    
   140019c29:	loope  0x140019c87
   140019c2b:	(bad)  
   140019c2c:	clc    
   140019c2d:	loope  0x140019c8e
   140019c2f:	(bad)  
   140019c30:	clc    
   140019c31:	loope  0x140019c92
   140019c33:	(bad)  
   140019c34:	clc    
   140019c35:	loope  0x140019c97
   140019c37:	(bad)  
   140019c38:	cli    
   140019c39:	in     al,0x5e
   140019c3b:	(bad)  
   140019c3c:	cli    
   140019c3d:	jrcxz  0x140019c9d
   140019c3f:	(bad)  
   140019c40:	cli    
   140019c41:	in     al,0x5e
   140019c43:	(bad)  
   140019c44:	cli    
   140019c45:	in     al,0x5d
   140019c47:	(bad)  
   140019c48:	cli    
   140019c49:	in     al,0x5f
   140019c4b:	(bad)  
   140019c4c:	stc    
   140019c4d:	in     al,0x5e
   140019c4f:	(bad)  
   140019c50:	stc    
   140019c51:	in     al,0x5e
   140019c53:	(bad)  
   140019c54:	stc    
   140019c55:	loop   0x140019cb4
   140019c57:	(bad)  
   140019c58:	stc    
   140019c59:	loope  0x140019cb7
   140019c5b:	(bad)  
   140019c5c:	clc    
   140019c5d:	jrcxz  0x140019cb8
   140019c5f:	(bad)  
   140019c60:	clc    
   140019c61:	fistp  DWORD PTR [rax-0x1]
   140019c64:	neg    ecx
   140019c66:	push   rsi
   140019c67:	push   rdi
   140019c69:	xlat   BYTE PTR ds:[rbx]
   140019c6a:	push   rbx
   140019c6b:	push   rbp
   140019c6d:	(bad)  
   140019c6e:	push   rcx
   140019c6f:	push   rbp
   140019c71:	ror    BYTE PTR [rbp-0x1],cl
   140019c74:	hlt    
   140019c75:	ror    BYTE PTR [rbx-0x1],1
   140019c78:	lock retf 
   140019c7a:	rex.WB push r8
   140019c7d:	(bad)
   140019c80:	in     eax,dx
   140019c81:	ret    0xff45
   140019c84:	jmp    0x140019c42
   140019c86:	rex (bad) 
   140019c88:	jmp    0x12700da49
   140019c8d:	mov    ch,0x3a
   140019c8f:	jmp    rbx
   140019c91:	mov    al,0x36
   140019c93:	jmp    rax
   140019c95:	stos   BYTE PTR es:[rdi],al
   140019c96:	xor    edi,edi
   140019c98:	fldenv [rax-0x692d00d5]
   140019c9e:	and    al,0xff
   140019ca0:	mov    ah,0x7a
   140019ca2:	(bad)  
   140019ca3:	cmc    
   140019ca4:	mov    WORD PTR [rcx+0x14],ds
   140019ca7:	iret   
   140019ca8:	mov    bl,BYTE PTR [rax+0x15]
   140019cab:	pop    rbx
	...
   140019d20:	ret    
   140019d21:	(bad)  
   140019d22:	inc    BYTE PTR [rbx]
   140019d24:	ret    0xfeff
   140019d27:	add    al,0xc1
   140019d29:	(bad)  
   140019d2a:	inc    BYTE PTR [rip+0x6feffc0]        # 0x147009cf0
   140019d30:	mov    edi,0xbe09feff
   140019d35:	(bad)  
   140019d36:	dec    BYTE PTR [rbx]
   140019d38:	mov    esi,0x3f0dfeff
   140019d3d:	fdivr  st,st(7)
   140019d3f:	scas   al,BYTE PTR es:[rdi]
   140019d40:	cmp    eax,0x37e5ffd8
   140019d45:	(bad)  
   140019d46:	jmp    rsp
   140019d48:	xor    ebp,ecx
   140019d4a:	jmp    rsp
   140019d4c:	sub    al,0xc7
   140019d4e:	jmp    rbx
   140019d50:	es mov ebp,0xb522e3ff
   140019d56:	jmp    rdx
   140019d58:	(bad)  
   140019d59:	scas   eax,DWORD PTR es:[rdi]
   140019d5a:	jmp    rcx
   140019d5c:	(bad)  
   140019d5d:	stos   BYTE PTR es:[rdi],al
   140019d5e:	icebp  
   140019d5f:	mov    ah,0x13
   140019d61:	sbb    ch,BYTE PTR [rax+0x1a]
   140019d64:	add    BYTE PTR [rax],al
   140019d66:	push   rbp
   140019d67:	(bad)  
	...
   140019db8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140019db9:	ins    BYTE PTR es:[rdi],dx
   140019dba:	sbb    eax,0x1c6ba30a
   140019dbf:	xchg   ecx,eax
   140019dc0:	mov    ecx,0xc8eb2d83
   140019dc5:	nop
   140019dc6:	(bad)  
   140019dc7:	sti    
   140019dc8:	rcr    DWORD PTR [rbp-0x5a2700d9],cl
   140019dce:	sub    al,0xff
   140019dd0:	fsubr  QWORD PTR [rbx-0x502100d0]
   140019dd6:	xor    bh,bh
   140019dd8:	loope  0x140019d8c
   140019dda:	xor    al,0xff
   140019ddc:	loop   0x140019d94
   140019dde:	(bad)  
   140019ddf:	jmp    rbx
   140019de1:	mov    ebx,0xbee6ff3b
   140019de6:	ds (bad) 
   140019de8:	call   0x12c00dfae
   140019ded:	mov    DWORD PTR [rbx-0x1],0xff45caec
   140019df4:	out    dx,eax
   140019df5:	int3   
   140019df6:	rex.WB push r9
   140019df9:	ror    BYTE PTR [rdi+rdi*8-0xe],cl
   140019dfd:	(bad)  
   140019dfe:	rex.WRB push r11
   140019e01:	fcom   DWORD PTR [rcx-0x1]
   140019e04:	cmc    
   140019e05:	fist   DWORD PTR [rbx-0x1]
   140019e08:	neg    ch
   140019e0a:	push   rsi
   140019e0b:	push   rdi
   140019e0d:	fist   WORD PTR [rdi-0x1]
   140019e10:	neg    edi
   140019e12:	pop    rcx
   140019e13:	(bad)  
   140019e14:	clc    
   140019e15:	loope  0x140019e72
   140019e17:	(bad)  
   140019e18:	stc    
   140019e19:	loope  0x140019e78
   140019e1b:	(bad)  
   140019e1c:	stc    
   140019e1d:	in     eax,0x5e
   140019e1f:	(bad)  
   140019e20:	stc    
   140019e21:	out    0x5f,al
   140019e23:	(bad)  
   140019e24:	stc    
   140019e25:	out    0x61,al
   140019e27:	(bad)  
   140019e28:	cli    
   140019e29:	jmp    0x127fc9d90
   140019e2e:	fs (bad) 
   140019e30:	cli    
   140019e31:	jmp    0x128fc9d9a
   140019e36:	movsxd edi,edi
   140019e38:	sti    
   140019e39:	call   0x128fd9da2
   140019e3e:	fs (bad) 
   140019e40:	sti    
   140019e41:	out    0x65,eax
   140019e43:	(bad)  
   140019e44:	sti    
   140019e45:	jmp    0x128fc9daf
   140019e4a:	fs (bad) 
   140019e4c:	cli    
   140019e4d:	call   0x127fc9db4
   140019e52:	(bad)  
   140019e53:	(bad)  
   140019e54:	sti    
   140019e55:	call   0x125fe9dbc
   140019e5a:	(bad)  
   140019e5b:	(bad)  
   140019e5c:	sti    
   140019e5d:	in     al,0x61
   140019e5f:	(bad)  
   140019e60:	sti    
   140019e61:	loop   0x140019ec2
   140019e63:	(bad)  
   140019e64:	cli    
   140019e65:	loope  0x140019ec3
   140019e67:	(bad)  
   140019e68:	cli    
   140019e69:	loopne 0x140019ec4
   140019e6b:	(bad)  
   140019e6c:	clc    
   140019e6d:	fst    QWORD PTR [rdi-0x1]
   140019e70:	neg    cl
   140019e72:	push   rsp
   140019e73:	push   rdi
   140019e75:	(bad)  
   140019e76:	push   rax
   140019e77:	push   rsi
   140019e79:	iret   
   140019e7a:	rex.WRX push rsp
   140019e7d:	int    0x4c
   140019e7f:	push   rdx
   140019e81:	retf   0xff49
   140019e84:	(bad)
   140019e88:	in     eax,dx
   140019e89:	rol    BYTE PTR [rdx-0x1],0xeb
   140019e8d:	mov    esi,0xb9e8ff41
   140019e92:	cmp    al,0xff
   140019e94:	in     eax,0xb2
   140019e96:	cmp    bh,bh
   140019e98:	loop   0x140019e48
   140019e9a:	ss (bad) 
   140019e9c:	fisub  WORD PTR [rbp-0x632800d1]
   140019ea2:	sub    edi,edi
   140019ea4:	leave  
   140019ea5:	mov    ebx,DWORD PTR [rsi]
   140019ea7:	cld    
   140019ea8:	stos   DWORD PTR es:[rdi],eax
   140019ea9:	jb     0x140019ecb
   140019eab:	out    dx,eax
   140019eac:	mov    bl,BYTE PTR [rax+0x15]
   140019eaf:	movabs ds:0x19155889,eax
	...
   140019f20:	ret    0xfeff
   140019f23:	add    al,0xc1
   140019f25:	(bad)  
   140019f26:	inc    BYTE PTR [rax+rax*8]
   140019f29:	(bad)  
   140019f2a:	inc    BYTE PTR [rsi]
   140019f2c:	sar    bh,0xfe
   140019f2f:	or     BYTE PTR [rdi-0x41f50101],bh
   140019f35:	(bad)  
   140019f36:	dec    BYTE PTR [rdi*4+0x400dfeff]
   140019f3d:	(bad)  
   140019f3f:	sar    BYTE PTR [rip+0x37e5ffda],1        # 0x177e79f1f
   140019f45:	sar    bh,cl
   140019f47:	in     al,0x31
   140019f49:	retf   
   140019f4a:	jmp    rsp
   140019f4c:	sub    al,cl
   140019f4e:	jmp    rsp
   140019f50:	and    edi,DWORD PTR [rcx-0x4fdf1c01]
   140019f56:	jmp    rdx
   140019f58:	and    BYTE PTR [rsi+rdi*8-0x1b61bb1f],ch
   140019f5f:	test   BYTE PTR [rbx],cl
   140019f61:	adc    BYTE PTR [rdi+0x16],bl
   140019f64:	add    BYTE PTR [rax],al
   140019f66:	push   rbp
   140019f67:	add    al,0x0
	...
   140019fb1:	add    BYTE PTR [rax],al
   140019fb3:	add    BYTE PTR [rbx+rbp*2+0x6aa4221c],ah
   140019fba:	sbb    al,0xb7
   140019fbc:	mov    esp,0xd1f32483
   140019fc1:	(bad)  
   140019fc2:	and    eax,0x2aa3d5ff
   140019fc7:	(bad)  
   140019fc8:	fisubr DWORD PTR [rcx-0x522300d1]
   140019fce:	xor    bh,bh
   140019fd0:	fbstp  TBYTE PTR [rax-0x4b1d00ce]
   140019fd6:	ss jmp rbx
   140019fd9:	mov    edx,0xbde6ff37
   140019fde:	cmp    edi,edi
   140019fe0:	call   0x12b00dda7
   140019fe5:	(bad)  
   140019fe9:	retf   0xff44
   140019fec:	out    dx,al
   140019fed:	int    0x48
   140019fef:	push   rax
   140019ff1:	ror    DWORD PTR [rbx-0x1],1
   140019ff4:	repnz (bad) 
   140019ff6:	rex.WRB push r11
   140019ff9:	fcom   DWORD PTR [rcx-0x1]
   140019ffc:	cmc    
   140019ffd:	ficom  DWORD PTR [rbx-0x1]
   14001a000:	cmc    
   14001a001:	fcom   QWORD PTR [rdi-0x1]
   14001a004:	neg    esi
   14001a006:	pop    rax
   14001a007:	(bad)  
   14001a008:	clc    
   14001a009:	loop   0x14001a065
   14001a00b:	(bad)  
   14001a00c:	stc    
   14001a00d:	jrcxz  0x14001a06a
   14001a00f:	(bad)  
   14001a010:	stc    
   14001a011:	in     eax,0x61
   14001a013:	(bad)  
   14001a014:	stc    
   14001a015:	in     eax,0x63
   14001a017:	(bad)  
   14001a018:	cli    
   14001a019:	out    0x64,al
   14001a01b:	(bad)  
   14001a01c:	sti    
   14001a01d:	(bad)  
   14001a01e:	data16 (bad) 
   14001a020:	sti    
   14001a021:	(bad)  
   14001a022:	push   0x69eafbff
   14001a027:	(bad)  
   14001a028:	sti    
   14001a029:	jmp    0x12bfd9f97
   14001a02e:	push   0xffffffffffffffff
   14001a030:	sti    
   14001a031:	jmp    0x14001a09e
   14001a033:	(bad)  
   14001a034:	sti    
   14001a035:	jmp    0x14001a0a4
   14001a037:	(bad)  
   14001a038:	sti    
   14001a039:	jmp    0x14001a0a6
   14001a03b:	(bad)  
   14001a03c:	sti    
   14001a03d:	jmp    0x14001a0a9
   14001a03f:	(bad)  
   14001a040:	sti    
   14001a041:	(bad)  
   14001a042:	push   0xffffffffffffffff
   14001a044:	sti    
   14001a045:	(bad)  
   14001a046:	push   0xffffffffffffffff
   14001a048:	cld    
   14001a049:	jmp    0x14001a0b4
   14001a04b:	(bad)  
   14001a04c:	cld    
   14001a04d:	jmp    0x14001a0ba
   14001a04f:	(bad)  
   14001a050:	cld    
   14001a051:	jmp    0x14001a0bc
   14001a053:	(bad)  
   14001a054:	cld    
   14001a055:	out    0x6a,eax
   14001a057:	(bad)  
   14001a058:	sti    
   14001a059:	out    0x67,eax
   14001a05b:	(bad)  
   14001a05c:	sti    
   14001a05d:	out    0x67,al
   14001a05f:	(bad)  
   14001a060:	cld    
   14001a061:	jrcxz  0x14001a0c7
   14001a063:	(bad)  
   14001a064:	cld    
   14001a065:	in     al,0x61
   14001a067:	(bad)  
   14001a068:	sti    
   14001a069:	loop   0x14001a0cb
   14001a06b:	(bad)  
   14001a06c:	sti    
   14001a06d:	loope  0x14001a0cc
   14001a06f:	(bad)  
   14001a070:	cli    
   14001a071:	ficomp WORD PTR [rdx-0x1]
   14001a074:	cli    
   14001a075:	ficomp DWORD PTR [rax-0x1]
   14001a078:	not    edi
   14001a07a:	push   rbp
   14001a07b:	push   rdi
   14001a07d:	(bad)  
   14001a07e:	push   rcx
   14001a07f:	push   rbp
   14001a081:	iret   
   14001a082:	rex.WRX push rbx
   14001a085:	int3   
   14001a086:	rex.WXB push r9
   14001a089:	enter  0xff48,0xee
   14001a08d:	ret    0xff46
   14001a090:	in     eax,dx
   14001a091:	mov    edi,0xbbeaff43
   14001a096:	notrack jmp rdi
   14001a099:	mov    ah,0x3b
   14001a09b:	jmp    rsp
   14001a09d:	mov    cl,0x38
   14001a09f:	jmp    rax
   14001a0a1:	stos   BYTE PTR es:[rdi],al
   14001a0a2:	xor    bh,bh
   14001a0a4:	fisub  DWORD PTR [rdx-0x692c00d4]
   14001a0aa:	and    al,0xff
   14001a0ac:	mov    ah,0x7a
   14001a0ae:	sbb    dh,dh
   14001a0b0:	mov    WORD PTR [rcx+0x14],ds
   14001a0b3:	iret   
   14001a0b4:	mov    bl,BYTE PTR [rax+0x15]
   14001a0b7:	add    BYTE PTR [rax],al
	...
   14001a11a:	add    BYTE PTR [rax],al
   14001a11c:	ret    0xfeff
   14001a11f:	add    ecx,eax
   14001a121:	(bad)  
   14001a122:	inc    BYTE PTR [rcx+rax*8]
   14001a125:	(bad)  
   14001a126:	inc    BYTE PTR [rip+0x7feffc0]        # 0x14800a0ec
   14001a12c:	mov    edi,0xbe09feff
   14001a131:	(bad)  
   14001a132:	dec    BYTE PTR [rdi*4-0x66f20101]
   14001a139:	in     al,0xf5
   14001a13b:	adc    eax,0xe4ffdb3e
   14001a140:	cmp    eax,0x36e5ffd7
   14001a145:	sar    edi,1
   14001a147:	in     al,0x2f
   14001a149:	enter  0xe4ff,0x27
   14001a14d:	mov    edi,0xb523e4ff
   14001a152:	jmp    rbx
   14001a154:	(bad)  
   14001a155:	lods   eax,DWORD PTR ds:[rsi]
   14001a156:	jmp    rbx
   14001a158:	sub    BYTE PTR [rcx-0x74bf1e05],ch
   14001a15e:	shl    BYTE PTR [rcx+0xd],cl
   14001a161:	adc    esp,DWORD PTR [rdx+0x13]
   14001a164:	add    BYTE PTR [rax],al
   14001a166:	push   rbp
   14001a167:	add    al,BYTE PTR [rax]
	...
   14001a1ad:	add    BYTE PTR [rax],al
   14001a1af:	add    BYTE PTR [rbx+rbp*2+0x6aa5421c],ah
   14001a1b6:	sbb    cl,ah
   14001a1b8:	rol    DWORD PTR [rsi-0x632c08e2],0x26
   14001a1bf:	call   rdi
   14001a1c1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001a1c2:	sub    al,0xff
   14001a1c4:	fsubr  QWORD PTR [rbx-0x522200d1]
   14001a1ca:	xor    edi,edi
   14001a1cc:	fbstp  TBYTE PTR [rsp+rsi*1+0x36b8e1ff]
   14001a1d3:	jmp    rsp
   14001a1d5:	mov    edx,0xbfe7ff3a
   14001a1da:	cmp    al,0xff
   14001a1dc:	(bad)  
   14001a1dd:	(bad)  
   14001a1de:	rex (bad) 
   14001a1e0:	jmp    0x14001a1aa
   14001a1e2:	rex (bad) 
   14001a1e4:	out    dx,al
   14001a1e5:	int3   
   14001a1e6:	rex.RB push r8
   14001a1e9:	ror    BYTE PTR [rdx-0x1],1
   14001a1ec:	lock (bad) 
   14001a1ee:	rex.WRB push r11
   14001a1f1:	xlat   BYTE PTR ds:[rbx]
   14001a1f2:	rex.WRXB push r12
   14001a1f5:	fst    DWORD PTR [rbx-0x1]
   14001a1f8:	cmc    
   14001a1f9:	ficom  WORD PTR [rsi-0x1]
   14001a1fc:	mul    ecx
   14001a1fe:	pop    rbx
   14001a1ff:	(bad)  
   14001a200:	clc    
   14001a201:	loop   0x14001a25e
   14001a203:	(bad)  
   14001a204:	stc    
   14001a205:	in     al,0x61
   14001a207:	(bad)  
   14001a208:	stc    
   14001a209:	in     al,0x62
   14001a20b:	(bad)  
   14001a20c:	cli    
   14001a20d:	jmp    0x129fca174
   14001a212:	push   0x67eafbff
   14001a217:	(bad)  
   14001a218:	sti    
   14001a219:	(bad)  
   14001a21a:	push   0xffffffffffffffff
   14001a21c:	sti    
   14001a21d:	in     eax,dx
   14001a21e:	imul   edi,edi,0xfffffffb
   14001a221:	jmp    0x14001a28f
   14001a223:	(bad)  
   14001a224:	sti    
   14001a225:	in     al,dx
   14001a226:	ins    DWORD PTR es:[rdi],dx
   14001a227:	(bad)  
   14001a228:	sti    
   14001a229:	jmp    0x14001a299
   14001a22b:	(bad)  
   14001a22c:	cld    
   14001a22d:	in     al,dx
   14001a22e:	outs   dx,BYTE PTR ds:[rsi]
   14001a22f:	(bad)  
   14001a230:	sti    
   14001a231:	jmp    0x14001a2a1
   14001a233:	(bad)  
   14001a234:	cld    
   14001a235:	in     al,dx
   14001a236:	outs   dx,DWORD PTR ds:[rsi]
   14001a237:	(bad)  
   14001a238:	cld    
   14001a239:	in     al,dx
   14001a23a:	jo     0x14001a23b
   14001a23c:	cld    
   14001a23d:	in     al,dx
   14001a23e:	jo     0x14001a23f
   14001a240:	cld    
   14001a241:	in     al,dx
   14001a242:	jno    0x14001a243
   14001a244:	cld    
   14001a245:	in     al,dx
   14001a246:	outs   dx,DWORD PTR ds:[rsi]
   14001a247:	(bad)  
   14001a248:	cld    
   14001a249:	in     al,dx
   14001a24a:	outs   dx,DWORD PTR ds:[rsi]
   14001a24b:	(bad)  
   14001a24c:	cld    
   14001a24d:	in     eax,dx
   14001a24e:	jno    0x14001a24f
   14001a250:	cld    
   14001a251:	in     eax,dx
   14001a252:	jo     0x14001a253
   14001a254:	cld    
   14001a255:	in     al,dx
   14001a256:	outs   dx,DWORD PTR ds:[rsi]
   14001a257:	(bad)  
   14001a258:	cld    
   14001a259:	(bad)  
   14001a25a:	outs   dx,DWORD PTR ds:[rsi]
   14001a25b:	(bad)  
   14001a25c:	cld    
   14001a25d:	call   0x128fea1cf
   14001a262:	push   0xffffffffffffffff
   14001a264:	cld    
   14001a265:	call   0x126fea1d2
   14001a26a:	data16 (bad) 
   14001a26c:	std    
   14001a26d:	jrcxz  0x14001a2d1
   14001a26f:	(bad)  
   14001a270:	sti    
   14001a271:	jrcxz  0x14001a2d2
   14001a273:	(bad)  
   14001a274:	cld    
   14001a275:	loope  0x14001a2d5
   14001a277:	(bad)  
   14001a278:	sti    
   14001a279:	fstp   QWORD PTR [rdx-0x1]
   14001a27c:	clc    
   14001a27d:	fst    DWORD PTR [rdi-0x1]
   14001a280:	not    esi
   14001a282:	push   rbx
   14001a283:	push   rsi
   14001a285:	rcl    BYTE PTR [rax-0x1],cl
   14001a288:	repnz int 0x4e
   14001a28b:	push   rdx
   14001a28d:	retf   0xff4b
   14001a290:	out    dx,eax
   14001a291:	ret    
   14001a292:	rex.W (bad) 
   14001a294:	in     eax,dx
   14001a295:	rol    BYTE PTR [rbx-0x1],0xeb
   14001a299:	mov    ebx,0xb6e9ff42
   14001a29e:	cmp    al,0xff
   14001a2a0:	call   0x12200db57
   14001a2a5:	lods   eax,DWORD PTR ds:[rsi]
   14001a2a6:	xor    al,0xff
   14001a2a8:	(bad)  [rbx-0x652a00d1]
   14001a2ae:	sub    bh,bh
   14001a2b0:	mov    esi,0xa1f91a82
   14001a2b5:	imul   ebx,DWORD PTR [rdi],0xffffffe9
   14001a2b8:	mov    bl,BYTE PTR [rax+0x15]
   14001a2bb:	push   0x0
	...
   14001a31c:	ret    0xfeff
   14001a31f:	add    ecx,eax
   14001a321:	(bad)  
   14001a322:	inc    BYTE PTR [rip+0x6feffc0]        # 0x14700a2e8
   14001a328:	mov    edi,0xbe09feff
   14001a32d:	(bad)  
   14001a32e:	dec    BYTE PTR [rbx]
   14001a330:	mov    ebp,0xbc0dfeff
   14001a335:	(bad)  
   14001a336:	dec    BYTE PTR [rsi]
   14001a338:	jl     0x14001a311
   14001a33a:	imul   DWORD PTR [rcx]
   14001a33c:	rex.B fdiv st(7),st
   14001a33f:	in     al,0x3c
   14001a341:	xlat   BYTE PTR ds:[rbx]
   14001a342:	jmp    rsp
   14001a344:	xor    al,0xcf
   14001a346:	jmp    rsp
   14001a348:	(bad)  
   14001a349:	enter  0xe4ff,0x27
   14001a34d:	mov    ebp,0xb320e3ff
   14001a352:	jmp    rbx
   14001a354:	sbb    eax,0x2ee2ffad
   14001a359:	test   al,0xf9
   14001a35b:	loope  0x14001a398
   14001a35d:	jns    0x14001a31c
   14001a35f:	rex.WRX or BYTE PTR [rbx],r9b
   14001a362:	pop    rbp
   14001a363:	sldt   WORD PTR [rax]
   14001a366:	push   rbp
   14001a367:	add    al,BYTE PTR [rax]
	...
   14001a3a9:	add    BYTE PTR [rax],al
   14001a3ab:	add    BYTE PTR [rbp-0x47ace394],ah
   14001a3b1:	(bad)  
   14001a3b2:	sub    eax,0x1c8cc7e7
   14001a3b7:	cli    
   14001a3b8:	(bad)  
   14001a3b9:	movabs al,ds:0xabdcff2da7d8ff27
   14001a3c2:	xor    bh,bh
   14001a3c4:	fidiv  WORD PTR [rax-0x4a1e00cc]
   14001a3ca:	xor    eax,0x37b9e3ff
   14001a3cf:	jmp    rsp
   14001a3d1:	mov    ebp,0xc1e8ff39
   14001a3d6:	cmp    eax,0x3fc4eaff
   14001a3db:	(bad)  
   14001a3dc:	in     eax,dx
   14001a3dd:	retf   
   14001a3de:	rex.XB (bad) 
   14001a3e0:	out    dx,eax
   14001a3e1:	(bad)  
   14001a3e2:	rex.RXB push r8
   14001a3e5:	ror    BYTE PTR [rbx-0x1],cl
   14001a3e8:	repnz (bad) 
   14001a3ea:	rex.WR push rsp
   14001a3ed:	fst    DWORD PTR [rax-0x1]
   14001a3f0:	cmc    
   14001a3f1:	fst    QWORD PTR [rsi-0x1]
   14001a3f4:	mul    al
   14001a3f6:	pop    rcx
   14001a3f7:	(bad)  
   14001a3f8:	clc    
   14001a3f9:	loop   0x14001a457
   14001a3fb:	(bad)  
   14001a3fc:	clc    
   14001a3fd:	jrcxz  0x14001a45f
   14001a3ff:	(bad)  
   14001a400:	cli    
   14001a401:	in     eax,0x62
   14001a403:	(bad)  
   14001a404:	cli    
   14001a405:	out    0x64,eax
   14001a407:	(bad)  
   14001a408:	sti    
   14001a409:	jmp    0x14001a471
   14001a40b:	(bad)  
   14001a40c:	sti    
   14001a40d:	jmp    0x14001a477
   14001a40f:	(bad)  
   14001a410:	sti    
   14001a411:	(bad)  
   14001a412:	ins    BYTE PTR es:[rdi],dx
   14001a413:	(bad)  
   14001a414:	sti    
   14001a415:	in     eax,dx
   14001a416:	outs   dx,BYTE PTR ds:[rsi]
   14001a417:	(bad)  
   14001a418:	sti    
   14001a419:	in     al,dx
   14001a41a:	jno    0x14001a41b
   14001a41c:	sti    
   14001a41d:	out    dx,al
   14001a41e:	jb     0x14001a41f
   14001a420:	cld    
   14001a421:	out    dx,al
   14001a422:	jo     0x14001a423
   14001a424:	cld    
   14001a425:	out    dx,al
   14001a426:	je     0x14001a427
   14001a428:	cld    
   14001a429:	out    dx,al
   14001a42a:	je     0x14001a42b
   14001a42c:	cld    
   14001a42d:	out    dx,al
   14001a42e:	jae    0x14001a42f
   14001a430:	cld    
   14001a431:	out    dx,al
   14001a432:	jne    0x14001a433
   14001a434:	cld    
   14001a435:	out    dx,al
   14001a436:	jne    0x14001a437
   14001a438:	std    
   14001a439:	out    dx,al
   14001a43a:	jbe    0x14001a43b
   14001a43c:	std    
   14001a43d:	out    dx,eax
   14001a43e:	je     0x14001a43f
   14001a440:	std    
   14001a441:	out    dx,eax
   14001a442:	je     0x14001a443
   14001a444:	std    
   14001a445:	out    dx,eax
   14001a446:	je     0x14001a447
   14001a448:	std    
   14001a449:	icebp  
   14001a44a:	jne    0x14001a44b
   14001a44c:	std    
   14001a44d:	lock je 0x14001a44f
   14001a450:	std    
   14001a451:	lock jne 0x14001a453
   14001a454:	cld    
   14001a455:	out    dx,eax
   14001a456:	je     0x14001a457
   14001a458:	cld    
   14001a459:	in     eax,dx
   14001a45a:	jae    0x14001a45b
   14001a45c:	std    
   14001a45d:	jmp    0x14001a4d1
   14001a45f:	(bad)  
   14001a460:	std    
   14001a461:	jmp    0x12cffa3d5
   14001a466:	ins    DWORD PTR es:[rdi],dx
   14001a467:	(bad)  
   14001a468:	cld    
   14001a469:	out    0x6c,eax
   14001a46b:	(bad)  
   14001a46c:	cld    
   14001a46d:	out    0x69,eax
   14001a46f:	(bad)  
   14001a470:	cld    
   14001a471:	out    0x66,al
   14001a473:	(bad)  
   14001a474:	cld    
   14001a475:	in     eax,0x62
   14001a477:	(bad)  
   14001a478:	cld    
   14001a479:	jrcxz  0x14001a4db
   14001a47b:	(bad)  
   14001a47c:	sti    
   14001a47d:	fistp  WORD PTR [rsi-0x1]
   14001a480:	stc    
   14001a481:	ficomp DWORD PTR [rbx-0x1]
   14001a484:	neg    eax
   14001a486:	push   rsi
   14001a487:	push   rsi
   14001a489:	(bad)  
   14001a48a:	push   rbx
   14001a48b:	push   rbx
   14001a48d:	rcl    DWORD PTR [rax-0x1],1
   14001a490:	repnz int3 
   14001a492:	rex.WRB push r8
   14001a495:	(bad)  
   14001a496:	rex.W (bad) 
   14001a498:	out    dx,al
   14001a499:	rol    DWORD PTR [rbp-0x1],0xec
   14001a49d:	mov    esp,0xb6e9ff42
   14001a4a2:	notrack jmp rdi
   14001a4a5:	mov    dl,0x3a
   14001a4a7:	jmp    rbx
   14001a4a9:	scas   al,BYTE PTR es:[rdi]
   14001a4aa:	(bad)  
   14001a4ab:	(bad)  
   14001a4ac:	fbld   TBYTE PTR [rbp-0x622800d0]
   14001a4b2:	sub    bh,bh
   14001a4b4:	retf   0x1d8a
   14001a4b7:	(bad)  
   14001a4b8:	test   eax,0x8aef1f6f
   14001a4bd:	pop    rax
   14001a4be:	adc    eax,0x15578987
   14001a4c3:	add    eax,0x0
	...
   14001a51c:	sar    edi,0xfe
   14001a51f:	add    al,al
   14001a521:	(bad)  
   14001a522:	inc    BYTE PTR [rsi]
   14001a524:	mov    edi,0xbe08feff
   14001a529:	(bad)  
   14001a52a:	dec    BYTE PTR [rdx]
   14001a52c:	mov    ebp,0xbc0cfeff
   14001a531:	(bad)  
   14001a532:	dec    BYTE PTR [rsi]
   14001a534:	mov    ebx,0x7311feff
   14001a539:	shl    edi,cl
   14001a53b:	(bad)  
   14001a53c:	rex.B fdiv st(7),st
   14001a53f:	in     eax,0x3a
   14001a541:	xlat   BYTE PTR ds:[rbx]
   14001a542:	jmp    rsp
   14001a544:	xor    ecx,esi
   14001a546:	jmp    rsp
   14001a548:	sub    eax,0x26e4ffc7
   14001a54d:	mov    esp,0xb220e4ff
   14001a552:	jmp    rbx
   14001a554:	sbb    eax,0x31e2ffaa
   14001a559:	test   al,0xf7
   14001a55b:	loope  0x14001a593
   14001a55d:	push   0xffffffffffffffaf
   14001a55f:	or     BYTE PTR [r11*2+0x5500000f],cl
   14001a567:	add    al,BYTE PTR [rax]
	...
   14001a5a5:	add    BYTE PTR [rax],al
   14001a5a7:	add    BYTE PTR [rbp-0x43a0e394],ah
   14001a5ad:	xchg   BYTE PTR [rsi],ch
   14001a5af:	in     al,dx
   14001a5b0:	retf   
   14001a5b1:	xchg   ecx,eax
   14001a5b2:	sbb    edi,esp
   14001a5b4:	(bad)  
   14001a5b5:	movabs ds:0xaddcff2ea9d9ff29,al
   14001a5be:	xor    bh,bh
   14001a5c0:	fbstp  TBYTE PTR [rdx-0x491d00cc]
   14001a5c6:	xor    eax,0x38bae4ff
   14001a5cb:	jmp    rsi
   14001a5cd:	mov    edi,0xc2e8ff3a
   14001a5d2:	cmp    eax,0x41c7ebff
   14001a5d7:	(bad)  
   14001a5d8:	in     eax,dx
   14001a5d9:	int    0x44
   14001a5db:	(bad)  
   14001a5dc:	out    dx,eax
   14001a5dd:	ror    DWORD PTR [rcx-0x1],1
   14001a5e0:	icebp  
   14001a5e1:	(bad)  
   14001a5e2:	rex.WXB push r11
   14001a5e5:	(bad)  [rsi-0x1]
   14001a5e8:	hlt    
   14001a5e9:	fst    QWORD PTR [rbp-0x1]
   14001a5ec:	neg    bh
   14001a5ee:	push   rdi
   14001a5ef:	push   rdi
   14001a5f1:	loope  0x14001a64f
   14001a5f3:	(bad)  
   14001a5f4:	clc    
   14001a5f5:	in     al,0x5d
   14001a5f7:	(bad)  
   14001a5f8:	cli    
   14001a5f9:	in     eax,0x61
   14001a5fb:	(bad)  
   14001a5fc:	cli    
   14001a5fd:	jmp    0x128fca567
   14001a602:	push   0x6aebfbff
   14001a607:	(bad)  
   14001a608:	sti    
   14001a609:	out    dx,al
   14001a60a:	ins    DWORD PTR es:[rdi],dx
   14001a60b:	(bad)  
   14001a60c:	sti    
   14001a60d:	out    dx,eax
   14001a60e:	outs   dx,DWORD PTR ds:[rsi]
   14001a60f:	(bad)  
   14001a610:	cld    
   14001a611:	lock jno 0x14001a613
   14001a614:	cld    
   14001a615:	lock jb 0x14001a617
   14001a618:	std    
   14001a619:	lock jae 0x14001a61b
   14001a61c:	std    
   14001a61d:	lock jbe 0x14001a61f
   14001a620:	std    
   14001a621:	lock jbe 0x14001a623
   14001a624:	std    
   14001a625:	lock jns 0x14001a627
   14001a628:	std    
   14001a629:	lock jns 0x14001a62b
   14001a62c:	std    
   14001a62d:	repz jnp 0x14001a62f
   14001a630:	std    
   14001a631:	repz jnp 0x14001a633
   14001a634:	std    
   14001a635:	bnd jge 0x14001a637
   14001a638:	std    
   14001a639:	repz jge 0x14001a63b
   14001a63c:	std    
   14001a63d:	repz jge 0x14001a63f
   14001a640:	std    
   14001a641:	bnd jl 0x14001a643
   14001a644:	(bad)  
   14001a645:	bnd jl 0x14001a647
   14001a648:	(bad)  
   14001a649:	icebp  
   14001a64a:	jp     0x14001a64b
   14001a64c:	(bad)  
   14001a64d:	icebp  
   14001a64e:	jp     0x14001a64f
   14001a650:	(bad)  
   14001a651:	lock jns 0x14001a653
   14001a654:	(bad)  
   14001a655:	out    dx,eax
   14001a656:	js     0x14001a657
   14001a658:	(bad)  
   14001a659:	out    dx,al
   14001a65a:	ja     0x14001a65b
   14001a65c:	(bad)  
   14001a65d:	in     eax,dx
   14001a65e:	jbe    0x14001a65f
   14001a660:	std    
   14001a661:	out    dx,al
   14001a662:	jne    0x14001a663
   14001a664:	std    
   14001a665:	in     eax,dx
   14001a666:	jae    0x14001a667
   14001a668:	std    
   14001a669:	in     al,dx
   14001a66a:	jno    0x14001a66b
   14001a66c:	std    
   14001a66d:	jmp    0x14001a6de
   14001a66f:	(bad)  
   14001a670:	std    
   14001a671:	(bad)  
   14001a672:	imul   edi,edi,0xfffffffc
   14001a675:	out    0x69,eax
   14001a677:	(bad)  
   14001a678:	sti    
   14001a679:	out    0x65,al
   14001a67b:	(bad)  
   14001a67c:	sti    
   14001a67d:	loope  0x14001a6e0
   14001a67f:	(bad)  
   14001a680:	cli    
   14001a681:	loopne 0x14001a6e1
   14001a683:	(bad)  
   14001a684:	stc    
   14001a685:	ficomp WORD PTR [rsi-0x1]
   14001a688:	clc    
   14001a689:	fcomp  DWORD PTR [rcx-0x1]
   14001a68c:	not    ch
   14001a68e:	push   rsp
   14001a68f:	push   rsp
   14001a691:	rcl    DWORD PTR [rcx-0x1],1
   14001a694:	repz int 0x4d
   14001a697:	push   rax
   14001a699:	leave  
   14001a69a:	rex.WX (bad) 
   14001a69c:	out    dx,al
   14001a69d:	ret    0xff47
   14001a6a0:	in     eax,dx
   14001a6a1:	mov    ebp,0xbaeaff44
   14001a6a6:	rex jmp rdi
   14001a6a9:	mov    ah,0x3b
   14001a6ab:	jmp    rsp
   14001a6ad:	scas   al,BYTE PTR es:[rdi]
   14001a6ae:	ss jmp rax
   14001a6b1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001a6b2:	xor    edi,edi
   14001a6b4:	fcomp  DWORD PTR [rsi-0x702f00d4]
   14001a6ba:	and    bh,bh
   14001a6bc:	stos   DWORD PTR es:[rdi],eax
   14001a6bd:	jno    0x14001a6db
   14001a6bf:	repnz mov ebx,DWORD PTR [rcx+0x15]
   14001a6c3:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001a6c4:	mov    DWORD PTR [rax+0x15],ebx
   14001a6c7:	or     eax,0x0
	...
   14001a71c:	sar    bh,0xfe
   14001a71f:	add    edi,DWORD PTR [rdi-0x41f80101]
   14001a725:	(bad)  
   14001a726:	dec    BYTE PTR [rcx]
   14001a728:	mov    ebp,0xbc0cfeff
   14001a72d:	(bad)  
   14001a72e:	dec    BYTE PTR [rip+0xffeffbb]        # 0x15000a6ef
   14001a734:	mov    edx,0x7312feff
   14001a739:	shl    edi,cl
   14001a73b:	cmp    al,BYTE PTR [rbx-0x22]
   14001a73e:	jmp    rbp
   14001a740:	cmp    al,0xd7
   14001a742:	jmp    rbp
   14001a744:	xor    al,0xcf
   14001a746:	jmp    rsp
   14001a748:	sub    eax,0x24e4ffc4
   14001a74d:	mov    edx,0xb020e4ff
   14001a752:	jmp    rbx
   14001a754:	sbb    eax,0x31e2ffaa
   14001a759:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001a75a:	mul    eax
   14001a75c:	(bad)  
   14001a75d:	imul   ebp,DWORD PTR [rdi+0x55000044],0x10
   14001a764:	add    BYTE PTR [rax],al
   14001a766:	push   rbp
   14001a767:	add    al,BYTE PTR [rax]
	...
   14001a7a1:	add    BYTE PTR [rax],al
   14001a7a3:	add    BYTE PTR [rsi-0x4396e393],ah
   14001a7a9:	xchg   BYTE PTR [rip+0x1e93ceec],ch        # 0x15e95769b
   14001a7af:	std    
   14001a7b0:	(bad)  
   14001a7b1:	movabs ds:0xaedcff2faadaff2a,al
   14001a7ba:	xor    edi,edi
   14001a7bc:	fbstp  TBYTE PTR [rbx-0x491e00cc]
   14001a7c2:	ss jmp rbp
   14001a7c5:	mov    edx,0xbfe7ff37
   14001a7ca:	cmp    al,0xff
   14001a7cc:	(bad)  
   14001a7cd:	(bad)  
   14001a7ce:	ds (bad) 
   14001a7d0:	jmp    0x14001a79d
   14001a7d2:	rex.B (bad) 
   14001a7d4:	out    dx,al
   14001a7d5:	iret   
   14001a7d6:	rex.RB push r8
   14001a7d9:	rol    BYTE PTR [rdi-0x1],cl
   14001a7dc:	repnz (bad) [rdi+rdi*8-0xd]
   14001a7e1:	ficom  DWORD PTR [rax-0x1]
   14001a7e4:	cmc    
   14001a7e5:	ficom  WORD PTR [rdi-0x1]
   14001a7e8:	mul    eax
   14001a7ea:	pop    rax
   14001a7eb:	(bad)  
   14001a7ec:	clc    
   14001a7ed:	jrcxz  0x14001a84b
   14001a7ef:	(bad)  
   14001a7f0:	stc    
   14001a7f1:	jrcxz  0x14001a853
   14001a7f3:	(bad)  
   14001a7f4:	cli    
   14001a7f5:	out    0x65,al
   14001a7f7:	(bad)  
   14001a7f8:	cli    
   14001a7f9:	(bad)  
   14001a7fa:	push   0x6decfbff
   14001a7ff:	(bad)  
   14001a800:	sti    
   14001a801:	out    dx,al
   14001a802:	outs   dx,BYTE PTR ds:[rsi]
   14001a803:	(bad)  
   14001a804:	sti    
   14001a805:	out    dx,eax
   14001a806:	jo     0x14001a807
   14001a808:	std    
   14001a809:	lock jb 0x14001a80b
   14001a80c:	std    
   14001a80d:	lock jne 0x14001a80f
   14001a810:	std    
   14001a811:	lock jbe 0x14001a813
   14001a814:	std    
   14001a815:	bnd jp 0x14001a817
   14001a818:	(bad)  
   14001a819:	bnd jp 0x14001a81b
   14001a81c:	(bad)  
   14001a81d:	bnd jnp 0x14001a81f
   14001a820:	std    
   14001a821:	repz jge 0x14001a823
   14001a824:	std    
   14001a825:	repz jle 0x14001a827
   14001a828:	std    
   14001a829:	repz jg 0x14001a82b
   14001a82c:	std    
   14001a82d:	hlt    
   14001a82e:	cmp    bh,0xfd
   14001a831:	repz jle 0x14001a833
   14001a834:	(bad)  
   14001a835:	repz jg 0x14001a837
   14001a838:	(bad)  
   14001a839:	repz jg 0x14001a83b
   14001a83c:	(bad)  
   14001a83d:	repz cmp bh,0xfe
   14001a841:	repnz cmp bh,0xfe
   14001a845:	bnd jg 0x14001a847
   14001a848:	(bad)  
   14001a849:	repnz cmp bh,0xfe
   14001a84d:	bnd jg 0x14001a84f
   14001a850:	(bad)  
   14001a851:	icebp  
   14001a852:	jle    0x14001a853
   14001a854:	(bad)  
   14001a855:	repz jle 0x14001a857
   14001a858:	(bad)  
   14001a859:	icebp  
   14001a85a:	jl     0x14001a85b
   14001a85c:	(bad)  
   14001a85d:	lock jl 0x14001a85f
   14001a860:	(bad)  
   14001a861:	out    dx,eax
   14001a862:	jp     0x14001a863
   14001a864:	(bad)  
   14001a865:	out    dx,al
   14001a866:	ja     0x14001a867
   14001a868:	std    
   14001a869:	in     eax,dx
   14001a86a:	jne    0x14001a86b
   14001a86c:	std    
   14001a86d:	in     eax,dx
   14001a86e:	jae    0x14001a86f
   14001a870:	std    
   14001a871:	in     al,dx
   14001a872:	jb     0x14001a873
   14001a874:	std    
   14001a875:	jmp    0x129ffa7ea
   14001a87a:	imul   edi,edi,0xfffffffc
   14001a87d:	out    0x66,eax
   14001a87f:	(bad)  
   14001a880:	cli    
   14001a881:	jrcxz  0x14001a8e8
   14001a883:	(bad)  
   14001a884:	cld    
   14001a885:	loopne 0x14001a8e8
   14001a887:	(bad)  
   14001a888:	sti    
   14001a889:	fistp  WORD PTR [rsi-0x1]
   14001a88c:	stc    
   14001a88d:	fstp   DWORD PTR [rdx-0x1]
   14001a890:	not    dh
   14001a892:	push   rbp
   14001a893:	push   rsp
   14001a895:	rcl    BYTE PTR [rcx-0x1],cl
   14001a898:	hlt    
   14001a899:	(bad)  
   14001a89a:	rex.WRX push rdx
   14001a89d:	leave  
   14001a89e:	rex.WX (bad) 
   14001a8a0:	out    dx,eax
   14001a8a1:	ret    
   14001a8a2:	rex.W (bad) 
   14001a8a4:	in     eax,dx
   14001a8a5:	mov    edi,0xbbebff44
   14001a8aa:	jmp    r15
   14001a8ad:	mov    ah,0x3c
   14001a8af:	jmp    rbx
   14001a8b1:	scas   al,BYTE PTR es:[rdi]
   14001a8b2:	cmp    bh,bh
   14001a8b4:	loopne 0x14001a85e
   14001a8b6:	xor    edi,edi
   14001a8b8:	ficomp DWORD PTR [rsi-0x6d2e00d5]
   14001a8be:	and    edi,edi
   14001a8c0:	lods   eax,DWORD PTR ds:[rsi]
   14001a8c1:	jb     0x14001a8dd
   14001a8c3:	hlt    
   14001a8c4:	mov    ebx,DWORD PTR [rcx+0x15]
   14001a8c7:	lods   eax,DWORD PTR ds:[rsi]
   14001a8c8:	mov    DWORD PTR [rax+0x15],ebx
   14001a8cb:	or     eax,0x0
	...
   14001a91c:	mov    edi,0xbe04feff
   14001a921:	(bad)  
   14001a922:	dec    BYTE PTR [rax]
   14001a924:	mov    ebp,0xbc0bfeff
   14001a929:	(bad)  
   14001a92a:	dec    BYTE PTR [rip+0xefeffbb]        # 0x14f00a8eb
   14001a930:	mov    edx,0xb912feff
   14001a935:	(bad)  
   14001a936:	(bad)  
   14001a937:	adc    eax,0x35f8d87a
   14001a93c:	rex.XB fdivp st(7),st
   14001a93f:	in     eax,0x3c
   14001a941:	xlat   BYTE PTR ds:[rbx]
   14001a942:	jmp    rbp
   14001a944:	xor    al,0xcf
   14001a946:	jmp    rbp
   14001a948:	sub    eax,0x24e4ffc4
   14001a94d:	mov    edx,0xb020e4ff
   14001a952:	jmp    rsp
   14001a954:	sbb    eax,0x32e3ffaa
   14001a959:	test   al,0xf7
   14001a95b:	loope  0x14001a998
   14001a95d:	js     0x14001a91b
   14001a95f:	rex.WR add BYTE PTR [rax],r8b
   14001a962:	push   rbp
   14001a963:	adc    al,BYTE PTR [rax]
   14001a965:	add    BYTE PTR [rbp+0x3],dl
	...
   14001a9a0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001a9a1:	ins    DWORD PTR es:[rdi],dx
   14001a9a2:	sbb    eax,0x2e88bd58
   14001a9a7:	in     al,dx
   14001a9a8:	iret   
   14001a9a9:	xchg   esi,eax
   14001a9aa:	and    esi,edi
   14001a9ac:	(bad)  
   14001a9ad:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001a9ae:	sub    bh,bh
   14001a9b0:	fldcw  WORD PTR [rdx-0x502200d0]
   14001a9b6:	xor    bh,bh
   14001a9b8:	fbstp  TBYTE PTR [rsp+rsi*1+0x35b7e3ff]
   14001a9bf:	jmp    rsp
   14001a9c1:	mov    ebx,0xc0e7ff38
   14001a9c6:	cmp    edi,edi
   14001a9c8:	(bad)  
   14001a9c9:	(bad)
   14001a9cc:	in     al,dx
   14001a9cd:	retf   
   14001a9ce:	rex.XB (bad) 
   14001a9d0:	out    dx,eax
   14001a9d1:	iret   
   14001a9d2:	rex.RB push r9
   14001a9d5:	ror    DWORD PTR [rdx-0x1],cl
   14001a9d8:	repz (bad) [rsi-0x1]
   14001a9dc:	cmc    
   14001a9dd:	fcom   QWORD PTR [rdi+rdi*8-0xb]
   14001a9e1:	ficomp WORD PTR [rax-0x1]
   14001a9e4:	mul    edx
   14001a9e6:	pop    rdx
   14001a9e7:	(bad)  
   14001a9e8:	stc    
   14001a9e9:	in     al,0x5f
   14001a9eb:	(bad)  
   14001a9ec:	cli    
   14001a9ed:	out    0x61,eax
   14001a9ef:	(bad)  
   14001a9f0:	cli    
   14001a9f1:	jmp    0x12cfda95c
   14001a9f6:	imul   edi,edi,0xfffffffb
   14001a9f9:	in     al,dx
   14001a9fa:	ins    DWORD PTR es:[rdi],dx
   14001a9fb:	(bad)  
   14001a9fc:	sti    
   14001a9fd:	lock outs dx,DWORD PTR ds:[rsi]
   14001a9ff:	(bad)  
   14001aa00:	std    
   14001aa01:	lock jb 0x14001aa03
   14001aa04:	(bad)  
   14001aa05:	out    dx,eax
   14001aa06:	jne    0x14001aa07
   14001aa08:	(bad)  
   14001aa09:	icebp  
   14001aa0a:	js     0x14001aa0b
   14001aa0c:	(bad)  
   14001aa0d:	icebp  
   14001aa0e:	jp     0x14001aa0f
   14001aa10:	(bad)  
   14001aa11:	bnd jnp 0x14001aa13
   14001aa14:	(bad)  
   14001aa15:	hlt    
   14001aa16:	jle    0x14001aa17
   14001aa18:	(bad)  
   14001aa19:	hlt    
   14001aa1a:	jle    0x14001aa1b
   14001aa1c:	std    
   14001aa1d:	hlt    
   14001aa1e:	jg     0x14001aa1f
   14001aa20:	std    
   14001aa21:	hlt    
   14001aa22:	cmp    edi,0xff82f4fe
   14001aa28:	(bad)  
   14001aa29:	hlt    
   14001aa2a:	cmp    edi,0xff82f4fe
   14001aa30:	(bad)  
   14001aa31:	hlt    
   14001aa32:	(bad)  
   14001aa33:	(bad)  
   14001aa34:	(bad)  
   14001aa35:	hlt    
   14001aa36:	test   bh,bh
   14001aa38:	(bad)  
   14001aa39:	hlt    
   14001aa3a:	test   bh,bh
   14001aa3c:	(bad)  
   14001aa3d:	cmc    
   14001aa3e:	test   edi,edi
   14001aa40:	(bad)  
   14001aa41:	hlt    
   14001aa42:	test   bh,bh
   14001aa44:	(bad)  
   14001aa45:	hlt    
   14001aa46:	test   bh,bh
   14001aa48:	(bad)  
   14001aa49:	hlt    
   14001aa4a:	cmp    edi,0xfffffffe
   14001aa4d:	repz cmp edi,0xfffffffe
   14001aa51:	repz cmp edi,0xfffffffe
   14001aa55:	repnz cmp edi,0xfffffffe
   14001aa59:	repnz (bad) 
   14001aa5b:	(bad)  
   14001aa5c:	(bad)  
   14001aa5d:	repz cmp edi,0xff7ef0fe
   14001aa64:	(bad)  
   14001aa65:	icebp  
   14001aa66:	jl     0x14001aa67
   14001aa68:	(bad)  
   14001aa69:	out    dx,eax
   14001aa6a:	jnp    0x14001aa6b
   14001aa6c:	(bad)  
   14001aa6d:	out    dx,al
   14001aa6e:	ja     0x14001aa6f
   14001aa70:	std    
   14001aa71:	out    dx,al
   14001aa72:	je     0x14001aa73
   14001aa74:	std    
   14001aa75:	in     eax,dx
   14001aa76:	jae    0x14001aa77
   14001aa78:	std    
   14001aa79:	(bad)  
   14001aa7a:	jb     0x14001aa7b
   14001aa7c:	std    
   14001aa7d:	jmp    0x128ffa9ee
   14001aa82:	imul   edi,edi,0xff67e5fc
   14001aa88:	cld    
   14001aa89:	loop   0x14001aaee
   14001aa8b:	(bad)  
   14001aa8c:	cld    
   14001aa8d:	fstp   QWORD PTR [rdi-0x1]
   14001aa90:	stc    
   14001aa91:	ficomp DWORD PTR [rdi+rdi*8-0x9]
   14001aa95:	xlat   BYTE PTR ds:[rbx]
   14001aa96:	pop    rax
   14001aa97:	push   rsp
   14001aa99:	rcl    DWORD PTR [rbx-0x1],1
   14001aa9c:	repz int 0x4f
   14001aa9f:	push   rax
   14001aaa1:	leave  
   14001aaa2:	rex.WR (bad) 
   14001aaa4:	out    dx,eax
   14001aaa5:	(bad)
   14001aaa8:	in     eax,dx
   14001aaa9:	mov    esi,0xbbebff44
   14001aaae:	jmp    r15
   14001aab1:	mov    dl,0x3d
   14001aab3:	jmp    rsp
   14001aab5:	scas   al,BYTE PTR es:[rdi]
   14001aab6:	ss jmp rax
   14001aab9:	test   al,0x33
   14001aabb:	(bad)  
   14001aabc:	fsub   QWORD PTR [rcx-0x6d2e00d4]
   14001aac2:	and    edi,edi
   14001aac4:	lods   eax,DWORD PTR ds:[rsi]
   14001aac5:	jno    0x14001aae0
   14001aac7:	hlt    
   14001aac8:	mov    ebx,DWORD PTR [rcx+0x15]
   14001aacb:	stos   DWORD PTR es:[rdi],eax
   14001aacc:	mov    DWORD PTR [rax+0x15],ebx
   14001aacf:	or     eax,0x0
	...
   14001ab1c:	mov    esi,0xbd04feff
   14001ab21:	(bad)  
   14001ab22:	dec    BYTE PTR [rdx]
   14001ab24:	mov    esp,0xbb0cfeff
   14001ab29:	(bad)  
   14001ab2a:	dec    BYTE PTR [rip+0x10feffba]        # 0x15100aaea
   14001ab30:	mov    ecx,0xb814feff
   14001ab35:	(bad)  
   14001ab36:	(bad)  
   14001ab37:	(bad)  
   14001ab38:	sbb    ebp,0xfffffff8
   14001ab3b:	xor    BYTE PTR [rbx-0x22],al
   14001ab3e:	jmp    rbp
   14001ab40:	cmp    eax,0x34e5ffd7
   14001ab45:	iret   
   14001ab46:	jmp    rbp
   14001ab48:	sub    eax,0x26e4ffc4
   14001ab4d:	mov    edx,0xb220e4ff
   14001ab52:	jmp    rsp
   14001ab54:	sbb    eax,0x2fe2ffaa
   14001ab59:	test   al,0xf8
   14001ab5b:	loope  0x14001ab9b
   14001ab5d:	add    esp,0x55000057
   14001ab63:	adc    eax,0x4550000
	...
   14001ab9c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001ab9d:	ins    DWORD PTR es:[rdi],dx
   14001ab9e:	sbb    eax,0x2f86bc49
   14001aba3:	jmp    0x13d1f3e74
   14001aba8:	(bad)  
   14001aba9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001abaa:	sub    bh,bh
   14001abac:	fisubr DWORD PTR [rdx-0x4f2200d0]
   14001abb2:	xor    bh,bh
   14001abb4:	loopne 0x14001ab68
   14001abb6:	xor    edi,edi
   14001abb8:	loop   0x14001ab71
   14001abba:	ss jmp rsp
   14001abbd:	mov    ebp,0xc3e7ff38
   14001abc2:	cmp    al,0xff
   14001abc4:	(bad)  
   14001abc5:	enter  0xff3f,0xec
   14001abc9:	int    0x43
   14001abcb:	(bad)  
   14001abcc:	out    dx,al
   14001abcd:	rol    BYTE PTR [rbp-0x1],cl
   14001abd0:	repnz (bad) 
   14001abd2:	rex.WR push rbx
   14001abd5:	ficom  DWORD PTR [rax-0x1]
   14001abd8:	cmc    
   14001abd9:	ficom  WORD PTR [rbp-0x1]
   14001abdc:	cmc    
   14001abdd:	fistp  WORD PTR [rax-0x1]
   14001abe0:	clc    
   14001abe1:	loop   0x14001ac3e
   14001abe3:	(bad)  
   14001abe4:	stc    
   14001abe5:	in     eax,0x5f
   14001abe7:	(bad)  
   14001abe8:	cli    
   14001abe9:	(bad)  
   14001abea:	movsxd edi,edi
   14001abec:	cli    
   14001abed:	jmp    0x14001ac57
   14001abef:	(bad)  
   14001abf0:	sti    
   14001abf1:	in     eax,dx
   14001abf2:	ins    DWORD PTR es:[rdi],dx
   14001abf3:	(bad)  
   14001abf4:	cld    
   14001abf5:	in     eax,dx
   14001abf6:	jo     0x14001abf7
   14001abf8:	std    
   14001abf9:	out    dx,al
   14001abfa:	jno    0x14001abfb
   14001abfc:	(bad)  
   14001abfd:	out    dx,eax
   14001abfe:	jne    0x14001abff
   14001ac00:	(bad)  
   14001ac01:	lock js 0x14001ac03
   14001ac04:	(bad)  
   14001ac05:	repz jp 0x14001ac07
   14001ac08:	(bad)  
   14001ac09:	repz jl 0x14001ac0b
   14001ac0c:	(bad)  
   14001ac0d:	hlt    
   14001ac0e:	jl     0x14001ac0f
   14001ac10:	(bad)  
   14001ac11:	hlt    
   14001ac12:	jg     0x14001ac13
   14001ac14:	std    
   14001ac15:	hlt    
   14001ac16:	cmp    bh,0xfe
   14001ac19:	cmc    
   14001ac1a:	(bad)  
   14001ac1b:	(bad)  
   14001ac1c:	(bad)  
   14001ac1d:	cmc    
   14001ac1e:	cmp    edi,0xfffffffe
   14001ac21:	test   BYTE PTR [rbx-0x7a0a0001],0xff
   14001ac28:	push   rbp
   14001ac2a:	test   edi,edi
   14001ac2c:	(bad)  
   14001ac2d:	test   BYTE PTR [rax-0x77090101],0xff
   14001ac34:	(bad)  
   14001ac35:	cmc    
   14001ac36:	mov    bh,bh
   14001ac38:	(bad)  
   14001ac39:	cmc    
   14001ac3a:	mov    bh,bh
   14001ac3c:	(bad)  
   14001ac3d:	cmc    
   14001ac3e:	mov    bh,bh
   14001ac40:	(bad)  
   14001ac41:	cmc    
   14001ac42:	mov    edi,edi
   14001ac44:	(bad)  
   14001ac45:	hlt    
   14001ac46:	xchg   edi,edi
   14001ac48:	(bad)  
   14001ac49:	hlt    
   14001ac4a:	xchg   bh,bh
   14001ac4c:	(bad)  
   14001ac4d:	hlt    
   14001ac4e:	xchg   edi,edi
   14001ac50:	(bad)  
   14001ac51:	hlt    
   14001ac52:	xchg   edi,edi
   14001ac54:	(bad)  
   14001ac55:	repz test edi,edi
   14001ac58:	(bad)  
   14001ac59:	repz test edi,edi
   14001ac5c:	(bad)  
   14001ac5d:	repz test bh,bh
   14001ac60:	(bad)  
   14001ac61:	repnz cmp edi,0xfffffffe
   14001ac65:	repz cmp edi,0xff7eeffe
   14001ac6c:	(bad)  
   14001ac6d:	lock jl 0x14001ac6f
   14001ac70:	(bad)  
   14001ac71:	out    dx,al
   14001ac72:	jnp    0x14001ac73
   14001ac74:	(bad)  
   14001ac75:	in     al,dx
   14001ac76:	js     0x14001ac77
   14001ac78:	(bad)  
   14001ac79:	in     eax,dx
   14001ac7a:	je     0x14001ac7b
   14001ac7c:	std    
   14001ac7d:	jmp    0x14001acef
   14001ac7f:	(bad)  
   14001ac80:	std    
   14001ac81:	call   0x129ffabf4
   14001ac86:	push   0xffffffffffffffff
   14001ac88:	std    
   14001ac89:	in     eax,0x66
   14001ac8b:	(bad)  
   14001ac8c:	cld    
   14001ac8d:	loop   0x14001acf2
   14001ac8f:	(bad)  
   14001ac90:	cld    
   14001ac91:	fistp  WORD PTR [rdi-0x1]
   14001ac94:	cli    
   14001ac95:	fistp  DWORD PTR [rsi-0x1]
   14001ac98:	not    esp
   14001ac9a:	pop    rdx
   14001ac9b:	push   rbp
   14001ac9d:	rcl    DWORD PTR [rbx-0x1],1
   14001aca0:	repz int 0x50
   14001aca3:	push   rcx
   14001aca5:	retf   0xff4b
   14001aca8:	out    dx,eax
   14001aca9:	ret    0xff48
   14001acac:	in     eax,dx
   14001acad:	mov    edi,0xbaebff45
   14001acb2:	(bad)  
   14001acb3:	(bad)  
   14001acb4:	call   0x12600e96d
   14001acb9:	scas   al,BYTE PTR es:[rdi]
   14001acba:	cmp    bh,bh
   14001acbc:	loopne 0x14001ac67
   14001acbe:	xor    edi,edi
   14001acc0:	fisub  DWORD PTR [rax-0x6e2f00d4]
   14001acc6:	and    edi,edi
   14001acc8:	lods   al,BYTE PTR ds:[rsi]
   14001acc9:	outs   dx,DWORD PTR ds:[rsi]
   14001acca:	sbb    ebx,esi
   14001accc:	mov    bl,BYTE PTR [rcx+0x15]
   14001accf:	test   eax,0x8155889
	...
   14001ad1c:	mov    ebp,0xbc04feff
   14001ad21:	(bad)  
   14001ad22:	dec    BYTE PTR [rbx]
   14001ad24:	mov    ebx,0xba0dfeff
   14001ad29:	(bad)  
   14001ad2a:	dec    BYTE PTR [rdi]
   14001ad2c:	mov    ecx,0xb813feff
   14001ad31:	(bad)  
   14001ad32:	(bad)  
   14001ad33:	(bad)  
   14001ad34:	mov    bh,0xff
   14001ad36:	(bad)  
   14001ad37:	sbb    BYTE PTR [rbx+0x4426fcef],bl
   14001ad3d:	fdivp  st(7),st
   14001ad3f:	in     eax,0x3d
   14001ad41:	fdivr  st,st(7)
   14001ad43:	in     eax,0x36
   14001ad45:	iret   
   14001ad46:	jmp    rsp
   14001ad48:	sub    eax,0x26e4ffc7
   14001ad4d:	mov    edx,0xb220e4ff
   14001ad52:	jmp    rsp
   14001ad54:	sbb    eax,0x2ce3ffac
   14001ad59:	test   eax,0x9344e2fa
   14001ad5e:	xlat   BYTE PTR ds:[rbx]
   14001ad5f:	outs   dx,DWORD PTR ds:[rsi]
   14001ad60:	add    eax,0x195a07
   14001ad65:	add    BYTE PTR [rbp+0x6],dl
	...
   14001ad98:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001ad99:	outs   dx,BYTE PTR ds:[rsi]
   14001ad9a:	sbb    eax,0x1b6da936
   14001ad9f:	(bad)  
   14001ada0:	retf   0x1c90
   14001ada3:	cld    
   14001ada4:	(bad)  
   14001ada5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001ada6:	sub    bh,bh
   14001ada8:	fisubr DWORD PTR [rcx-0x502200d1]
   14001adae:	xor    bh,bh
   14001adb0:	fbstp  TBYTE PTR [rbx-0x461d00cd]
   14001adb6:	ss jmp rbp
   14001adb9:	mov    ebp,0xc3e7ff38
   14001adbe:	cmp    eax,0x3fc8eaff
   14001adc3:	(bad)  
   14001adc4:	in     al,dx
   14001adc5:	(bad)  
   14001adc6:	rex.R (bad) 
   14001adc8:	out    dx,al
   14001adc9:	ror    BYTE PTR [rax-0x1],cl
   14001adcc:	icebp  
   14001adcd:	(bad)  
   14001adce:	rex.WXB push r12
   14001add1:	ficom  DWORD PTR [rax-0x1]
   14001add4:	cmc    
   14001add5:	fist   WORD PTR [rbx-0x1]
   14001add8:	mul    dl
   14001adda:	pop    rax
   14001addb:	(bad)  
   14001addc:	clc    
   14001addd:	loop   0x14001ae3b
   14001addf:	(bad)  
   14001ade0:	stc    
   14001ade1:	out    0x61,eax
   14001ade3:	(bad)  
   14001ade4:	cli    
   14001ade5:	(bad)  
   14001ade6:	data16 (bad) 
   14001ade8:	cli    
   14001ade9:	in     al,dx
   14001adea:	imul   edi,edi,0xff6cedfc
   14001adf0:	std    
   14001adf1:	out    dx,al
   14001adf2:	outs   dx,BYTE PTR ds:[rsi]
   14001adf3:	(bad)  
   14001adf4:	std    
   14001adf5:	out    dx,eax
   14001adf6:	jb     0x14001adf7
   14001adf8:	(bad)  
   14001adf9:	icebp  
   14001adfa:	jbe    0x14001adfb
   14001adfc:	(bad)  
   14001adfd:	icebp  
   14001adfe:	jns    0x14001adff
   14001ae00:	(bad)  
   14001ae01:	hlt    
   14001ae02:	jnp    0x14001ae03
   14001ae04:	(bad)  
   14001ae05:	hlt    
   14001ae06:	jle    0x14001ae07
   14001ae08:	(bad)  
   14001ae09:	cmc    
   14001ae0a:	jg     0x14001ae0b
   14001ae0c:	std    
   14001ae0d:	cmc    
   14001ae0e:	(bad)  
   14001ae0f:	(bad)  
   14001ae10:	(bad)  
   14001ae11:	test   BYTE PTR [rbx-0x7a0a0001],0xff
   14001ae18:	push   rbp
   14001ae1a:	xchg   bh,bh
   14001ae1c:	push   rbp
   14001ae1e:	xchg   edi,edi
   14001ae20:	(bad)  
   14001ae21:	test   BYTE PTR [rcx-0x74090101],0xff
   14001ae28:	(bad)  
   14001ae29:	test   BYTE PTR [rbx-0x73090101],0xff
   14001ae30:	(bad)  
   14001ae31:	test   BYTE PTR [rdi+rdi*8-0x730902],0xfe
   14001ae39:	test   BYTE PTR [rbp-0x72090101],0xff
   14001ae40:	(bad)  
   14001ae41:	cmc    
   14001ae42:	(bad)  
   14001ae43:	(bad)  
   14001ae44:	(bad)  
   14001ae45:	cmc    
   14001ae46:	(bad)  
   14001ae47:	(bad)  
   14001ae48:	(bad)  
   14001ae49:	cmc    
   14001ae4a:	mov    edi,?
   14001ae4c:	(bad)  
   14001ae4d:	cmc    
   14001ae4e:	mov    bh,bh
   14001ae50:	(bad)  
   14001ae51:	hlt    
   14001ae52:	mov    bh,bh
   14001ae54:	(bad)  
   14001ae55:	hlt    
   14001ae56:	mov    edi,edi
   14001ae58:	(bad)  
   14001ae59:	hlt    
   14001ae5a:	xchg   edi,edi
   14001ae5c:	(bad)  
   14001ae5d:	hlt    
   14001ae5e:	xchg   edi,edi
   14001ae60:	(bad)  
   14001ae61:	repz xchg bh,bh
   14001ae64:	(bad)  
   14001ae65:	repnz xchg bh,bh
   14001ae68:	(bad)  
   14001ae69:	icebp  
   14001ae6a:	test   bh,bh
   14001ae6c:	(bad)  
   14001ae6d:	icebp  
   14001ae6e:	cmp    edi,0xff7deffe
   14001ae74:	(bad)  
   14001ae75:	out    dx,eax
   14001ae76:	jl     0x14001ae77
   14001ae78:	(bad)  
   14001ae79:	out    dx,al
   14001ae7a:	jl     0x14001ae7b
   14001ae7c:	(bad)  
   14001ae7d:	in     al,dx
   14001ae7e:	jne    0x14001ae7f
   14001ae80:	(bad)  
   14001ae81:	jmp    0x14001aef5
   14001ae83:	(bad)  
   14001ae84:	std    
   14001ae85:	jmp    0x129ffadf9
   14001ae8a:	ins    BYTE PTR es:[rdi],dx
   14001ae8b:	(bad)  
   14001ae8c:	cld    
   14001ae8d:	in     eax,0x67
   14001ae8f:	(bad)  
   14001ae90:	cld    
   14001ae91:	jrcxz  0x14001aef8
   14001ae93:	(bad)  
   14001ae94:	cld    
   14001ae95:	fbld   TBYTE PTR [rcx-0x1]
   14001ae98:	cli    
   14001ae99:	fistp  DWORD PTR [rsi-0x1]
   14001ae9c:	not    edi
   14001ae9e:	push   rdi
   14001ae9f:	push   rbp
   14001aea1:	(bad)  
   14001aea2:	push   rbp
   14001aea3:	push   rdx
   14001aea5:	int3   
   14001aea6:	push   rax
   14001aea7:	push   rcx
   14001aea9:	enter  0xff4d,0xef
   14001aead:	ret    0xff49
   14001aeb0:	in     eax,dx
   14001aeb1:	mov    esi,0xbbeaff45
   14001aeb6:	(bad)  
   14001aeb7:	jmp    rdi
   14001aeb9:	mov    bl,0x3d
   14001aebb:	jmp    rsp
   14001aebd:	scas   al,BYTE PTR es:[rdi]
   14001aebe:	(bad)  
   14001aebf:	jmp    rax
   14001aec1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001aec2:	xor    edi,edi
   14001aec4:	fsub   QWORD PTR [rax-0x6e2f00d4]
   14001aeca:	and    edi,edi
   14001aecc:	test   eax,0x8af11b6e
   14001aed1:	pop    rax
   14001aed2:	adc    eax,0x93
	...
   14001af1b:	add    BYTE PTR [rbp-0x43fb0101],bh
   14001af21:	(bad)  
   14001af22:	dec    BYTE PTR [rbx+rdi*4]
   14001af25:	(bad)  
   14001af26:	dec    BYTE PTR [rip+0x11feffb9]        # 0x15200aee5
   14001af2c:	mov    eax,0xb715feff
   14001af31:	(bad)  
   14001af32:	(bad)  
   14001af33:	(bad)  
   14001af34:	mov    dh,0xff
   14001af36:	(bad)  
   14001af37:	sbb    dh,BYTE PTR [rbp+0x461dfeff]
   14001af3d:	fdivp  st(7),st
   14001af3f:	fiadd  WORD PTR [rcx-0x25]
   14001af42:	jmp    rbp
   14001af44:	(bad)  
   14001af45:	sar    bh,cl
   14001af47:	in     al,0x2f
   14001af49:	enter  0xe5ff,0x27
   14001af4d:	mov    ebp,0xb222e4ff
   14001af52:	jmp    rsp
   14001af54:	(bad)  
   14001af55:	lods   eax,DWORD PTR ds:[rsi]
   14001af56:	jmp    rsp
   14001af58:	and    eax,0x49e2fdaa
   14001af5d:	movabs al,ds:0x1c5906048be4
   14001af66:	push   rbp
   14001af67:	or     DWORD PTR [rax],eax
	...
   14001af91:	add    BYTE PTR [rax],al
   14001af93:	add    BYTE PTR [rax-0x56e9e292],ch
   14001af99:	outs   dx,BYTE PTR ds:[rsi]
   14001af9a:	sbb    al,0xc4
   14001af9c:	enter  0x1e8e,0xfa
   14001afa0:	(bad)  
   14001afa1:	movabs ds:0xafddff30aad9ff2a,eax
   14001afaa:	xor    edi,edi
   14001afac:	fbstp  TBYTE PTR [rdx-0x461d00cc]
   14001afb2:	ss jmp rsp
   14001afb5:	mov    ebp,0xc2e7ff39
   14001afba:	cmp    eax,0x41c9eaff
   14001afbf:	(bad)  
   14001afc0:	in     eax,dx
   14001afc1:	(bad)  
   14001afc2:	rex.R (bad) 
   14001afc4:	out    dx,al
   14001afc5:	ror    BYTE PTR [rcx-0x1],cl
   14001afc8:	icebp  
   14001afc9:	(bad)  
   14001afca:	rex.WXB push r12
   14001afcd:	fcom   QWORD PTR [rax-0x1]
   14001afd0:	neg    bh
   14001afd2:	push   rbp
   14001afd3:	(bad)  
   14001afd4:	clc    
   14001afd5:	loop   0x14001b02f
   14001afd7:	(bad)  
   14001afd8:	clc    
   14001afd9:	out    0x5f,al
   14001afdb:	(bad)  
   14001afdc:	stc    
   14001afdd:	jmp    0x12afcaf44
   14001afe2:	push   0x69edfbff
   14001afe7:	(bad)  
   14001afe8:	std    
   14001afe9:	out    dx,al
   14001afea:	ins    DWORD PTR es:[rdi],dx
   14001afeb:	(bad)  
   14001afec:	std    
   14001afed:	out    dx,eax
   14001afee:	jo     0x14001afef
   14001aff0:	std    
   14001aff1:	lock je 0x14001aff3
   14001aff4:	(bad)  
   14001aff5:	icebp  
   14001aff6:	ja     0x14001aff7
   14001aff8:	(bad)  
   14001aff9:	icebp  
   14001affa:	jns    0x14001affb
   14001affc:	(bad)  
   14001affd:	cmc    
   14001affe:	jl     0x14001afff
   14001b000:	(bad)  
   14001b001:	cmc    
   14001b002:	jle    0x14001b003
   14001b004:	(bad)  
   14001b005:	cmc    
   14001b006:	cmp    bh,0xfe
   14001b009:	cmc    
   14001b00a:	cmp    edi,0xffffffff
   14001b00d:	cmc    
   14001b00e:	test   edi,edi
   14001b010:	push   rsi
   14001b012:	xchg   bh,bh
   14001b014:	push   rdi
   14001b016:	mov    bh,bh
   14001b018:	(bad)  
   14001b019:	test   DWORD PTR [rbx-0x74080101],0x8df8feff
   14001b023:	(bad)  
   14001b024:	(bad)  
   14001b025:	clc    
   14001b026:	mov    ?,edi
   14001b028:	(bad)  
   14001b029:	clc    
   14001b02a:	mov    ?,edi
   14001b02c:	(bad)  
   14001b02d:	clc    
   14001b02e:	mov    ?,edi
   14001b030:	(bad)  
   14001b031:	test   BYTE PTR [rsi-0x70090101],0xff
   14001b038:	(bad)  
   14001b039:	not    BYTE PTR [rax-0x6f090101]
   14001b03f:	(bad)  
   14001b040:	(bad)  
   14001b041:	not    BYTE PTR [rax-0x6f090101]
   14001b047:	(bad)  
   14001b048:	(bad)  
   14001b049:	cmc    
   14001b04a:	(bad)  
   14001b04b:	(bad)  
   14001b04c:	(bad)  
   14001b04d:	cmc    
   14001b04e:	(bad)  
   14001b04f:	(bad)  
   14001b050:	(bad)  
   14001b051:	cmc    
   14001b052:	mov    ?,edi
   14001b054:	(bad)  
   14001b055:	cmc    
   14001b056:	mov    bh,bh
   14001b058:	(bad)  
   14001b059:	cmc    
   14001b05a:	mov    bh,bh
   14001b05c:	(bad)  
   14001b05d:	cmc    
   14001b05e:	mov    edi,edi
   14001b060:	(bad)  
   14001b061:	hlt    
   14001b062:	mov    edi,edi
   14001b064:	(bad)  
   14001b065:	hlt    
   14001b066:	mov    bh,bh
   14001b068:	(bad)  
   14001b069:	repnz xchg edi,edi
   14001b06c:	(bad)  
   14001b06d:	repnz test edi,edi
   14001b070:	(bad)  
   14001b071:	repnz (bad) 
   14001b073:	(bad)  
   14001b074:	(bad)  
   14001b075:	lock jg 0x14001b077
   14001b078:	(bad)  
   14001b079:	out    dx,eax
   14001b07a:	jge    0x14001b07b
   14001b07c:	(bad)  
   14001b07d:	lock jns 0x14001b07f
   14001b080:	(bad)  
   14001b081:	out    dx,al
   14001b082:	ja     0x14001b083
   14001b084:	(bad)  
   14001b085:	jmp    0x14001b0f9
   14001b087:	(bad)  
   14001b088:	std    
   14001b089:	(bad)  
   14001b08a:	jo     0x14001b08b
   14001b08c:	std    
   14001b08d:	call   0x125feaffd
   14001b092:	imul   edi,edi,0xff64e3fd
   14001b098:	sti    
   14001b099:	fisub  WORD PTR [rbx-0x1]
   14001b09c:	stc    
   14001b09d:	fistp  DWORD PTR [rbp-0x1]
   14001b0a0:	clc    
   14001b0a1:	(bad)  
   14001b0a2:	pop    rcx
   14001b0a3:	push   rbp
   14001b0a5:	rcl    BYTE PTR [rdi+rdi*8-0xd],cl
   14001b0a9:	int    0x50
   14001b0ab:	push   rdx
   14001b0ad:	retf   0xff4b
   14001b0b0:	out    dx,eax
   14001b0b1:	ret    0xff48
   14001b0b4:	in     eax,dx
   14001b0b5:	mov    esi,0xbaebff44
   14001b0ba:	jmp    r15
   14001b0bd:	mov    dl,0x3b
   14001b0bf:	jmp    rbp
   14001b0c1:	scas   al,BYTE PTR es:[rdi]
   14001b0c2:	cmp    bh,bh
   14001b0c4:	loope  0x14001b06d
   14001b0c6:	xor    bh,bh
   14001b0c8:	ficomp DWORD PTR [rsi-0x713000d3]
   14001b0ce:	and    edi,edi
   14001b0d0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001b0d1:	ins    BYTE PTR es:[rdi],dx
   14001b0d2:	sbb    eax,0x15588aee
   14001b0d7:	jb     0x14001b0d9
	...
   14001b119:	add    BYTE PTR [rax],al
   14001b11b:	add    BYTE PTR [rdi+rdi*8-0x44fc02],bh
   14001b122:	dec    BYTE PTR [rip+0xffeffba]        # 0x15000b0e2
   14001b128:	mov    ecx,0xb713feff
   14001b12d:	(bad)  
   14001b12e:	(bad)  
   14001b12f:	(bad)  
   14001b130:	mov    dh,0xff
   14001b132:	(bad)  
   14001b133:	sbb    DWORD PTR [rbp-0x4be20101],esi
   14001b139:	(bad)  
   14001b13a:	(bad)  
   14001b13b:	and    BYTE PTR [rax-0x1f],cl
   14001b13e:	dec    eax
   14001b140:	rex.XB fdiv st(7),st
   14001b143:	in     eax,0x39
   14001b145:	sar    bh,cl
   14001b147:	in     eax,0x30
   14001b149:	enter  0xe4ff,0x27
   14001b14d:	mov    edi,0xb522e4ff
   14001b152:	jmp    rsp
   14001b154:	(bad)  
   14001b155:	lods   al,BYTE PTR ds:[rsi]
   14001b156:	jmp    rdx
   14001b158:	and    ch,BYTE PTR [rdx-0x55b41d02]
   14001b15e:	in     eax,dx
   14001b15f:	stos   DWORD PTR es:[rdi],eax
   14001b160:	add    al,0x5
   14001b162:	pop    rcx
   14001b163:	and    al,BYTE PTR [rax]
   14001b165:	add    BYTE PTR [rbp+0xb],dl
	...
   14001b190:	test   al,0x6e
   14001b192:	sbb    eax,0x1d6ea905
   14001b197:	lahf   
   14001b198:	ret    
   14001b199:	mov    DWORD PTR [rbx],esp
   14001b19b:	cmc    
   14001b19c:	(bad)  
   14001b19d:	movabs ds:0xaedbff2fa8d9ff29,eax
   14001b1a6:	xor    edi,edi
   14001b1a8:	fbstp  TBYTE PTR [rsp+rsi*1+0x36b8e2ff]
   14001b1af:	jmp    rsp
   14001b1b1:	mov    esi,0xc2e7ff3a
   14001b1b6:	cmp    al,0xff
   14001b1b8:	jmp    0x12e00f386
   14001b1bd:	int    0x45
   14001b1bf:	(bad)  
   14001b1c0:	out    dx,eax
   14001b1c1:	ror    BYTE PTR [rcx-0x1],cl
   14001b1c4:	icebp  
   14001b1c5:	(bad)  
   14001b1c6:	rex.WRX push rbx
   14001b1c9:	ficom  DWORD PTR [rdx-0x1]
   14001b1cc:	mul    cl
   14001b1ce:	push   rbx
   14001b1cf:	(bad)  
   14001b1d0:	clc    
   14001b1d1:	jrcxz  0x14001b230
   14001b1d3:	(bad)  
   14001b1d4:	clc    
   14001b1d5:	out    0x5f,al
   14001b1d7:	(bad)  
   14001b1d8:	stc    
   14001b1d9:	jmp    0x12bfcb143
   14001b1de:	push   0x6aedfbff
   14001b1e3:	(bad)  
   14001b1e4:	std    
   14001b1e5:	out    dx,al
   14001b1e6:	ins    BYTE PTR es:[rdi],dx
   14001b1e7:	(bad)  
   14001b1e8:	std    
   14001b1e9:	bnd jno 0x14001b1eb
   14001b1ec:	std    
   14001b1ed:	icebp  
   14001b1ee:	je     0x14001b1ef
   14001b1f0:	(bad)  
   14001b1f1:	repz ja 0x14001b1f3
   14001b1f4:	(bad)  
   14001b1f5:	repz jge 0x14001b1f7
   14001b1f8:	(bad)  
   14001b1f9:	cmc    
   14001b1fa:	jg     0x14001b1fb
   14001b1fc:	(bad)  
   14001b1fd:	cmc    
   14001b1fe:	cmp    bh,0xff
   14001b201:	test   BYTE PTR [rbx-0x79080101],0xff
   14001b208:	push   rdi
   14001b20a:	mov    bh,bh
   14001b20c:	push   rdi
   14001b20e:	mov    bh,bh
   14001b210:	(bad)  
   14001b211:	test   DWORD PTR [rdx-0x73080101],0x8df8feff
   14001b21b:	(bad)  
   14001b21c:	(bad)  
   14001b21d:	clc    
   14001b21e:	mov    ?,edi
   14001b220:	(bad)  
   14001b221:	stc    
   14001b222:	(bad)  
   14001b223:	(bad)  
   14001b224:	(bad)  
   14001b225:	stc    
   14001b226:	nop
   14001b227:	(bad)  
   14001b228:	(bad)  
   14001b229:	stc    
   14001b22a:	nop
   14001b22b:	(bad)  
   14001b22c:	(bad)  
   14001b22d:	stc    
   14001b22e:	xchg   ecx,eax
   14001b22f:	(bad)  
   14001b230:	(bad)  
   14001b231:	stc    
   14001b232:	xchg   edx,eax
   14001b233:	(bad)  
   14001b234:	(bad)  
   14001b235:	stc    
   14001b236:	xchg   edx,eax
   14001b237:	(bad)  
   14001b238:	(bad)  
   14001b239:	stc    
   14001b23a:	xchg   edx,eax
   14001b23b:	(bad)  
   14001b23c:	(bad)  
   14001b23d:	not    BYTE PTR [rbx-0x6d090101]
   14001b243:	(bad)  
   14001b244:	(bad)  
   14001b245:	not    BYTE PTR [rdx-0x6d090101]
   14001b24b:	(bad)  
   14001b24c:	(bad)  
   14001b24d:	cmc    
   14001b24e:	xchg   edx,eax
   14001b24f:	(bad)  
   14001b250:	(bad)  
   14001b251:	cmc    
   14001b252:	xchg   ecx,eax
   14001b253:	(bad)  
   14001b254:	(bad)  
   14001b255:	cmc    
   14001b256:	nop
   14001b257:	(bad)  
   14001b258:	(bad)  
   14001b259:	cmc    
   14001b25a:	mov    ?,edi
   14001b25c:	(bad)  
   14001b25d:	hlt    
   14001b25e:	(bad)  
   14001b25f:	(bad)  
   14001b260:	(bad)  
   14001b261:	test   BYTE PTR [rdx-0x750a0101],0xff
   14001b268:	(bad)  
   14001b269:	hlt    
   14001b26a:	mov    edi,edi
   14001b26c:	(bad)  
   14001b26d:	repnz mov bh,bh
   14001b270:	(bad)  
   14001b271:	repnz xchg bh,bh
   14001b274:	(bad)  
   14001b275:	repnz test bh,bh
   14001b278:	(bad)  
   14001b279:	icebp  
   14001b27a:	jg     0x14001b27b
   14001b27c:	(bad)  
   14001b27d:	out    dx,eax
   14001b27e:	jge    0x14001b27f
   14001b280:	(bad)  
   14001b281:	lock jp 0x14001b283
   14001b284:	(bad)  
   14001b285:	out    dx,eax
   14001b286:	jns    0x14001b287
   14001b288:	(bad)  
   14001b289:	in     al,dx
   14001b28a:	jne    0x14001b28b
   14001b28c:	(bad)  
   14001b28d:	call   0x128ffb204
   14001b292:	ins    BYTE PTR es:[rdi],dx
   14001b293:	(bad)  
   14001b294:	cld    
   14001b295:	out    0x69,al
   14001b297:	(bad)  
   14001b298:	cld    
   14001b299:	jrcxz  0x14001b300
   14001b29b:	(bad)  
   14001b29c:	cli    
   14001b29d:	fisub  WORD PTR [rdx-0x1]
   14001b2a0:	stc    
   14001b2a1:	fistp  DWORD PTR [rbp-0x1]
   14001b2a4:	clc    
   14001b2a5:	(bad)  
   14001b2a6:	pop    rcx
   14001b2a7:	push   rbp
   14001b2a9:	rcl    DWORD PTR [rdi+rdi*8-0xc],cl
   14001b2ad:	(bad)  
   14001b2ae:	push   rax
   14001b2af:	push   rcx
   14001b2b1:	enter  0xff4d,0xef
   14001b2b5:	rol    DWORD PTR [rdi-0x1],0xed
   14001b2b9:	mov    ebp,0xb8e9ff44
   14001b2be:	(bad)  
   14001b2bf:	jmp    rdi
   14001b2c1:	mov    bl,0x3a
   14001b2c3:	jmp    rsp
   14001b2c5:	lods   al,BYTE PTR ds:[rsi]
   14001b2c6:	(bad)  
   14001b2c7:	jmp    rax
   14001b2c9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001b2ca:	xor    bh,bh
   14001b2cc:	fcomp  DWORD PTR [rbx-0x773400d6]
   14001b2d2:	(bad)  
   14001b2d3:	(bad)  
   14001b2d4:	movabs eax,ds:0x4c15588aeb1e69
	...
   14001b319:	add    BYTE PTR [rax],al
   14001b31b:	add    BYTE PTR [rbx-0x45fe0101],bh
   14001b321:	(bad)  
   14001b322:	dec    BYTE PTR [rsi]
   14001b324:	mov    ecx,0xb812feff
   14001b329:	(bad)  
   14001b32a:	(bad)  
   14001b32b:	adc    eax,0x18feffb6
   14001b330:	mov    ch,0xff
   14001b332:	(bad)  
   14001b333:	sbb    al,0xb4
   14001b335:	(bad)  
   14001b336:	(bad)  
   14001b337:	(bad)  
   14001b338:	mov    bl,0xff
   14001b33a:	(bad)  
   14001b33b:	and    ecx,DWORD PTR [rcx+riz*8-0x1]
   14001b33f:	mov    ah,0x44
   14001b341:	fdivp  st(7),st
   14001b343:	in     eax,0x3c
   14001b345:	(bad)  
   14001b346:	jmp    rbp
   14001b348:	xor    ebx,ecx
   14001b34a:	jmp    rsp
   14001b34c:	sub    eax,eax
   14001b34e:	jmp    rsp
   14001b350:	and    esi,DWORD PTR [rsi-0x50df1b01]
   14001b356:	jmp    rbx
   14001b358:	and    BYTE PTR [rdi+rdi*8-0xb52bc1d],ch
   14001b35f:	(bad)  
   14001b360:	adc    bl,BYTE PTR [rcx+rbp*2]
   14001b363:	sub    DWORD PTR [rax],eax
   14001b365:	add    BYTE PTR [rbp+0xf],dl
   14001b368:	add    BYTE PTR [rax],al
   14001b36a:	push   rbp
   14001b36b:	add    al,BYTE PTR [rax]
	...
   14001b38d:	add    BYTE PTR [rax],al
   14001b38f:	add    BYTE PTR [rcx-0x3f8de291],ch
   14001b395:	mov    ch,BYTE PTR [rdi+rbp*8]
   14001b398:	(bad)  
   14001b399:	movabs al,ds:0xaedbff2ea8d8ff28
   14001b3a2:	xor    edi,edi
   14001b3a4:	fbstp  TBYTE PTR [rdx-0x471d00cc]
   14001b3aa:	ss jmp rsp
   14001b3ad:	mov    ebp,0xc2e6ff39
   14001b3b2:	cmp    eax,0x41c8eaff
   14001b3b7:	(bad)  
   14001b3b8:	in     eax,dx
   14001b3b9:	int    0x46
   14001b3bb:	(bad)  
   14001b3bc:	out    dx,eax
   14001b3bd:	ror    BYTE PTR [rcx-0x1],cl
   14001b3c0:	icebp  
   14001b3c1:	xlat   BYTE PTR ds:[rbx]
   14001b3c2:	rex.WRB push r11
   14001b3c5:	fst    QWORD PTR [rcx-0x1]
   14001b3c8:	cmc    
   14001b3c9:	loope  0x14001b421
   14001b3cb:	push   rdi
   14001b3cd:	in     al,0x5b
   14001b3cf:	(bad)  
   14001b3d0:	clc    
   14001b3d1:	out    0x61,eax
   14001b3d3:	(bad)  
   14001b3d4:	stc    
   14001b3d5:	(bad)  
   14001b3d6:	fs (bad) 
   14001b3d8:	cli    
   14001b3d9:	jmp    0x14001b442
   14001b3db:	(bad)  
   14001b3dc:	cld    
   14001b3dd:	in     eax,dx
   14001b3de:	imul   edi,edi,0xff70f1fd
   14001b3e4:	std    
   14001b3e5:	bnd je 0x14001b3e7
   14001b3e8:	(bad)  
   14001b3e9:	icebp  
   14001b3ea:	js     0x14001b3eb
   14001b3ec:	(bad)  
   14001b3ed:	bnd jns 0x14001b3ef
   14001b3f0:	(bad)  
   14001b3f1:	idiv   BYTE PTR [rbp-0x1]
   14001b3f4:	(bad)  
   14001b3f5:	idiv   BYTE PTR [rdi-0x1]
   14001b3f8:	(bad)  
   14001b3f9:	test   BYTE PTR [rcx-0x7c090001],0xff
   14001b400:	push   rsi
   14001b402:	xchg   bh,bh
   14001b404:	push   rdi
   14001b406:	mov    edi,edi
   14001b408:	push   rdi
   14001b40a:	mov    bh,bh
   14001b40c:	(bad)  
   14001b40d:	test   DWORD PTR [rbp-0x70080101],0x8ff9feff
   14001b417:	(bad)  
   14001b418:	(bad)  
   14001b419:	stc    
   14001b41a:	xchg   ecx,eax
   14001b41b:	(bad)  
   14001b41c:	(bad)  
   14001b41d:	stc    
   14001b41e:	xchg   edx,eax
   14001b41f:	(bad)  
   14001b420:	(bad)  
   14001b421:	stc    
   14001b422:	xchg   ebx,eax
   14001b423:	(bad)  
   14001b424:	(bad)  
   14001b425:	stc    
   14001b426:	xchg   esp,eax
   14001b427:	(bad)  
   14001b428:	(bad)  
   14001b429:	stc    
   14001b42a:	xchg   esp,eax
   14001b42b:	(bad)  
   14001b42c:	(bad)  
   14001b42d:	stc    
   14001b42e:	xchg   ebp,eax
   14001b42f:	(bad)  
   14001b430:	(bad)  
   14001b431:	stc    
   14001b432:	xchg   esi,eax
   14001b433:	(bad)  
   14001b434:	(bad)  
   14001b435:	stc    
   14001b436:	xchg   esi,eax
   14001b437:	(bad)  
   14001b438:	(bad)  
   14001b439:	not    DWORD PTR [rbp-0x68080101]
   14001b43f:	(bad)  
   14001b440:	(bad)  
   14001b441:	not    DWORD PTR [rsi-0x6a080101]
   14001b447:	(bad)  
   14001b448:	(bad)  
   14001b449:	not    DWORD PTR [rbp-0x6b080101]
   14001b44f:	(bad)  
   14001b450:	(bad)  
   14001b451:	not    BYTE PTR [rdi+rdi*8-0x6d0802]
   14001b458:	(bad)  
   14001b459:	not    BYTE PTR [rcx-0x70090101]
   14001b45f:	(bad)  
   14001b460:	(bad)  
   14001b461:	test   BYTE PTR [rdi-0x710a0101],0xff
   14001b468:	(bad)  
   14001b469:	cmc    
   14001b46a:	mov    edi,edi
   14001b46c:	(bad)  
   14001b46d:	cmc    
   14001b46e:	mov    bh,bh
   14001b470:	(bad)  
   14001b471:	repnz mov edi,edi
   14001b474:	(bad)  
   14001b475:	repz xchg bh,bh
   14001b478:	(bad)  
   14001b479:	repnz test bh,bh
   14001b47c:	(bad)  
   14001b47d:	repnz cmp bh,0xfe
   14001b481:	out    dx,eax
   14001b482:	jg     0x14001b483
   14001b484:	(bad)  
   14001b485:	lock jnp 0x14001b487
   14001b488:	(bad)  
   14001b489:	out    dx,eax
   14001b48a:	jns    0x14001b48b
   14001b48c:	(bad)  
   14001b48d:	in     eax,dx
   14001b48e:	jbe    0x14001b48f
   14001b490:	(bad)  
   14001b491:	call   0x128ffb408
   14001b496:	ins    BYTE PTR es:[rdi],dx
   14001b497:	(bad)  
   14001b498:	cld    
   14001b499:	in     eax,0x69
   14001b49b:	(bad)  
   14001b49c:	cld    
   14001b49d:	loope  0x14001b505
   14001b49f:	(bad)  
   14001b4a0:	stc    
   14001b4a1:	fisub  WORD PTR [rdx-0x1]
   14001b4a4:	stc    
   14001b4a5:	fstp   DWORD PTR [rbp-0x1]
   14001b4a8:	clc    
   14001b4a9:	xlat   BYTE PTR ds:[rbx]
   14001b4aa:	pop    rax
   14001b4ab:	push   rsi
   14001b4ad:	rcl    BYTE PTR [rdi+rdi*8-0xe],1
   14001b4b1:	int    0x51
   14001b4b3:	push   rax
   14001b4b5:	enter  0xff4c,0xef
   14001b4b9:	ror    DWORD PTR [rax-0x1],0xec
   14001b4bd:	mov    ebx,0xb6eaff45
   14001b4c2:	notrack jmp rdi
   14001b4c5:	mov    al,0x3a
   14001b4c7:	jmp    rbx
   14001b4c9:	stos   BYTE PTR es:[rdi],al
   14001b4ca:	ss (bad) 
   14001b4cc:	fbld   TBYTE PTR [rbp-0x682700d0]
   14001b4d2:	(bad)  
   14001b4d3:	(bad)  
   14001b4d4:	mov    ebp,0x8bfa1a7e
   14001b4d9:	pop    rax
   14001b4da:	adc    edx,ecx
   14001b4dc:	mov    bl,BYTE PTR [rax+0x15]
   14001b4df:	and    DWORD PTR [rax],eax
	...
   14001b51d:	add    BYTE PTR [rax],al
   14001b51f:	add    BYTE PTR [rcx-0x47f20101],bh
   14001b525:	(bad)  
   14001b526:	(bad)  
   14001b527:	adc    al,0xb7
   14001b529:	(bad)  
   14001b52a:	(bad)  
   14001b52b:	(bad)  
   14001b52c:	mov    ch,0xff
   14001b52e:	(bad)  
   14001b52f:	sbb    dh,BYTE PTR [rdi+rdi*8-0x4ce102]
   14001b536:	(bad)  
   14001b537:	and    dh,BYTE PTR [rdx+0x5225feff]
   14001b53d:	out    0xff,al
   14001b53f:	(bad)  
   14001b540:	rex.RXB (bad) 
   14001b543:	in     eax,0x3d
   14001b545:	fdivr  st,st(7)
   14001b547:	in     eax,0x34
   14001b549:	(bad)  
   14001b54a:	jmp    rbp
   14001b54c:	sub    al,0xc3
   14001b54e:	jmp    rsp
   14001b550:	and    al,0xb7
   14001b552:	jmp    rbp
   14001b554:	and    BYTE PTR [rax-0x52dd1b01],dh
   14001b55a:	jmp    rdx
   14001b55c:	cmp    BYTE PTR [rbp+0x783de2f8],ch
   14001b562:	mov    eax,0x55000049
   14001b567:	(bad)  
   14001b568:	add    BYTE PTR [rax],al
   14001b56a:	push   rbp
   14001b56b:	add    eax,0x0
	...
   14001b58c:	test   eax,0xb9351d6f
   14001b591:	(bad)  
   14001b592:	sub    eax,0x269dd2e1
   14001b597:	(bad)  
   14001b598:	fsub   DWORD PTR [rdi-0x522400d2]
   14001b59e:	xor    bh,bh
   14001b5a0:	fbstp  TBYTE PTR [rdx-0x481e00cc]
   14001b5a6:	(bad)  
   14001b5a7:	jmp    rsp
   14001b5a9:	mov    esp,0xc2e6ff3b
   14001b5ae:	ds (bad) 
   14001b5b0:	call   0x12c00f87c
   14001b5b5:	int    0x45
   14001b5b7:	(bad)  
   14001b5b8:	out    dx,al
   14001b5b9:	ror    BYTE PTR [rcx-0x1],cl
   14001b5bc:	icebp  
   14001b5bd:	fmul   DWORD PTR [rdi-0x1]
   14001b5c0:	repz ficom WORD PTR [rbx-0x1]
   14001b5c4:	cmc    
   14001b5c5:	loope  0x14001b61c
   14001b5c7:	push   rdi
   14001b5c9:	in     al,0x58
   14001b5cb:	(bad)  
   14001b5cc:	clc    
   14001b5cd:	out    0x60,eax
   14001b5cf:	(bad)  
   14001b5d0:	stc    
   14001b5d1:	jmp    0x12dfdb53a
   14001b5d6:	imul   edi,edi,0xff6ceefc
   14001b5dc:	std    
   14001b5dd:	lock jo 0x14001b5df
   14001b5e0:	std    
   14001b5e1:	bnd jb 0x14001b5e3
   14001b5e4:	(bad)  
   14001b5e5:	icebp  
   14001b5e6:	ja     0x14001b5e7
   14001b5e8:	(bad)  
   14001b5e9:	hlt    
   14001b5ea:	jp     0x14001b5eb
   14001b5ec:	(bad)  
   14001b5ed:	idiv   BYTE PTR [rbp-0x1]
   14001b5f0:	(bad)  
   14001b5f1:	idiv   BYTE PTR [rdi-0x1]
   14001b5f4:	(bad)  
   14001b5f5:	test   BYTE PTR [rcx-0x7c090001],0xff
   14001b5fc:	push   rsi
   14001b5fe:	xchg   edi,edi
   14001b600:	push   rdi
   14001b602:	mov    edi,?
   14001b604:	push   rdi
   14001b606:	(bad)  
   14001b607:	(bad)  
   14001b608:	(bad)  
   14001b609:	clc    
   14001b60a:	(bad)  
   14001b60b:	(bad)  
   14001b60c:	(bad)  
   14001b60d:	stc    
   14001b60e:	nop
   14001b60f:	(bad)  
   14001b610:	(bad)  
   14001b611:	cli    
   14001b612:	xchg   ebx,eax
   14001b613:	(bad)  
   14001b614:	(bad)  
   14001b615:	stc    
   14001b616:	xchg   esp,eax
   14001b617:	(bad)  
   14001b618:	(bad)  
   14001b619:	stc    
   14001b61a:	xchg   esp,eax
   14001b61b:	(bad)  
   14001b61c:	(bad)  
   14001b61d:	stc    
   14001b61e:	xchg   ebp,eax
   14001b61f:	(bad)  
   14001b620:	(bad)  
   14001b621:	stc    
   14001b622:	xchg   edi,eax
   14001b623:	(bad)  
   14001b624:	(bad)  
   14001b625:	stc    
   14001b626:	cwde   
   14001b627:	(bad)  
   14001b628:	(bad)  
   14001b629:	neg    DWORD PTR [rcx-0x65080101]
   14001b62f:	(bad)  
   14001b630:	(bad)  
   14001b631:	neg    BYTE PTR [rbx-0x64090101]
   14001b637:	(bad)  
   14001b638:	(bad)  
   14001b639:	neg    BYTE PTR [rbx-0x64090101]
   14001b63f:	(bad)  
   14001b640:	(bad)  
   14001b641:	neg    BYTE PTR [rbx-0x64090101]
   14001b647:	(bad)  
   14001b648:	(bad)  
   14001b649:	neg    DWORD PTR [rdx-0x65080101]
   14001b64f:	(bad)  
   14001b650:	(bad)  
   14001b651:	clc    
   14001b652:	cwde   
   14001b653:	(bad)  
   14001b654:	(bad)  
   14001b655:	clc    
   14001b656:	xchg   edi,eax
   14001b657:	(bad)  
   14001b658:	(bad)  
   14001b659:	clc    
   14001b65a:	xchg   esi,eax
   14001b65b:	(bad)  
   14001b65c:	(bad)  
   14001b65d:	not    DWORD PTR [rdi+rdi*8-0x6d0802]
   14001b664:	(bad)  
   14001b665:	not    BYTE PTR [rcx-0x710a0101]
   14001b66b:	(bad)  
   14001b66c:	(bad)  
   14001b66d:	cmc    
   14001b66e:	(bad)  
   14001b66f:	(bad)  
   14001b670:	(bad)  
   14001b671:	cmc    
   14001b672:	mov    bh,bh
   14001b674:	(bad)  
   14001b675:	repz mov edi,edi
   14001b678:	(bad)  
   14001b679:	repz mov bh,bh
   14001b67c:	(bad)  
   14001b67d:	repnz xchg bh,bh
   14001b680:	(bad)  
   14001b681:	repz cmp edi,0xff7ff1fe
   14001b688:	(bad)  
   14001b689:	lock jnp 0x14001b68b
   14001b68c:	(bad)  
   14001b68d:	out    dx,eax
   14001b68e:	jns    0x14001b68f
   14001b690:	(bad)  
   14001b691:	in     eax,dx
   14001b692:	jbe    0x14001b693
   14001b694:	(bad)  
   14001b695:	(bad)  
   14001b696:	jb     0x14001b697
   14001b698:	(bad)  
   14001b699:	out    0x6c,eax
   14001b69b:	(bad)  
   14001b69c:	std    
   14001b69d:	in     eax,0x6a
   14001b69f:	(bad)  
   14001b6a0:	cld    
   14001b6a1:	loopne 0x14001b709
   14001b6a3:	(bad)  
   14001b6a4:	stc    
   14001b6a5:	frstor [rdx-0x1]
   14001b6a8:	clc    
   14001b6a9:	fstp   DWORD PTR [rbp-0x1]
   14001b6ac:	not    ebp
   14001b6ae:	pop    rcx
   14001b6af:	push   rbp
   14001b6b1:	rcl    BYTE PTR [rbp-0x1],1
   14001b6b4:	repz int3 
   14001b6b6:	rex.WRXB push r10
   14001b6b9:	(bad)
   14001b6bc:	out    dx,eax
   14001b6bd:	rol    BYTE PTR [rdi-0x1],0xec
   14001b6c1:	mov    esp,0xb5e9ff43
   14001b6c6:	(bad)  
   14001b6c7:	jmp    rbp
   14001b6c9:	scas   eax,DWORD PTR es:[rdi]
   14001b6ca:	cmp    bh,bh
   14001b6cc:	jrcxz  0x14001b678
   14001b6ce:	xor    eax,0x2fa3deff
   14001b6d3:	call   rsp
   14001b6d5:	xchg   ebp,eax
   14001b6d6:	jmp    FWORD PTR es:[rdi-0x730be58d]
   14001b6dd:	pop    rcx
   14001b6de:	(bad)  
   14001b6df:	stos   DWORD PTR es:[rdi],eax
   14001b6e0:	mov    bl,BYTE PTR [rax+0x15]
   14001b6e3:	add    eax,0x0
	...
   14001b720:	mov    eax,0xb70dfeff
   14001b725:	(bad)  
   14001b726:	(bad)  
   14001b727:	adc    eax,0x18feffb6
   14001b72c:	mov    ah,0xff
   14001b72e:	(bad)  
   14001b72f:	sbb    eax,0x20feffb3
   14001b734:	mov    dl,0xff
   14001b736:	(bad)  
   14001b737:	and    eax,0x28feffb1
   14001b73c:	pop    rdi
   14001b73d:	out    0xfe,eax
   14001b73f:	jae    0x14001b78b
   14001b741:	loop   0x14001b742
   14001b743:	in     eax,0x40
   14001b745:	(bad)  
   14001b747:	in     eax,0x36
   14001b749:	sar    edi,1
   14001b74b:	in     al,0x2d
   14001b74d:	(bad)  
   14001b74e:	jmp    rsp
   14001b750:	es mov edx,0xb220e5ff
   14001b756:	jmp    rsp
   14001b758:	and    ch,BYTE PTR [rbp-0x52ce1c01]
   14001b75e:	sti    
   14001b75f:	loope  0x14001b7af
   14001b761:	lahf   
   14001b762:	fistp  QWORD PTR [rcx+0x3]
   14001b765:	(bad)  
   14001b766:	pop    rax
   14001b767:	sbb    eax,0x8550000
	...
   14001b788:	stos   BYTE PTR es:[rdi],al
   14001b789:	outs   dx,DWORD PTR ds:[rsi]
   14001b78a:	sbb    eax,0x1d6faa0a
   14001b78f:	mov    ah,0xcb
   14001b791:	xchg   edx,eax
   14001b792:	and    bh,dl
   14001b794:	xlat   BYTE PTR ds:[rbx]
   14001b795:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001b796:	sub    al,0xff
   14001b798:	fisubr DWORD PTR [rax+rsi*1+0x33b1deff]
   14001b79f:	jmp    rax
   14001b7a1:	mov    dh,0x36
   14001b7a3:	jmp    rbx
   14001b7a5:	mov    edx,0xc1e5ff3a
   14001b7aa:	ds (bad) 
   14001b7ac:	call   0x12c00f779
   14001b7b1:	int    0x44
   14001b7b3:	(bad)  
   14001b7b4:	in     eax,dx
   14001b7b5:	(bad)  
   14001b7b6:	rex.WX push rax
   14001b7b9:	xlat   BYTE PTR ds:[rbx]
   14001b7ba:	rex.WRXB push r11
   14001b7bd:	fcom   QWORD PTR [rbx-0x1]
   14001b7c0:	cmc    
   14001b7c1:	loopne 0x14001b817
   14001b7c3:	push   rdi
   14001b7c5:	in     al,0x5b
   14001b7c7:	(bad)  
   14001b7c8:	clc    
   14001b7c9:	out    0x62,eax
   14001b7cb:	(bad)  
   14001b7cc:	stc    
   14001b7cd:	(bad)  
   14001b7ce:	data16 (bad) 
   14001b7d0:	cli    
   14001b7d1:	in     al,dx
   14001b7d2:	push   0x6beefcff
   14001b7d7:	(bad)  
   14001b7d8:	std    
   14001b7d9:	lock jo 0x14001b7db
   14001b7dc:	std    
   14001b7dd:	hlt    
   14001b7de:	jno    0x14001b7df
   14001b7e0:	(bad)  
   14001b7e1:	repz ja 0x14001b7e3
   14001b7e4:	(bad)  
   14001b7e5:	hlt    
   14001b7e6:	jns    0x14001b7e7
   14001b7e8:	(bad)  
   14001b7e9:	idiv   BYTE PTR [rdi+rdi*8-0x2]
   14001b7ed:	idiv   BYTE PTR [rdi-0x1]
   14001b7f0:	(bad)  
   14001b7f1:	test   DWORD PTR [rbx-0x7a080001],0x89f6ffff
   14001b7fb:	(bad)  
   14001b7fc:	push   rdi
   14001b7fe:	mov    edi,edi
   14001b800:	push   rdi
   14001b802:	(bad)  
   14001b803:	(bad)  
   14001b804:	(bad)  
   14001b805:	clc    
   14001b806:	(bad)  
   14001b807:	(bad)  
   14001b808:	(bad)  
   14001b809:	stc    
   14001b80a:	xchg   ecx,eax
   14001b80b:	(bad)  
   14001b80c:	(bad)  
   14001b80d:	cli    
   14001b80e:	xchg   esp,eax
   14001b80f:	(bad)  
   14001b810:	(bad)  
   14001b811:	stc    
   14001b812:	xchg   esp,eax
   14001b813:	(bad)  
   14001b814:	(bad)  
   14001b815:	stc    
   14001b816:	xchg   esi,eax
   14001b817:	(bad)  
   14001b818:	(bad)  
   14001b819:	stc    
   14001b81a:	xchg   edi,eax
   14001b81b:	(bad)  
   14001b81c:	std    
   14001b81d:	cmc    
   14001b81e:	xchg   edi,eax
   14001b81f:	(bad)  
   14001b820:	hlt    
   14001b821:	out    0x8b,eax
   14001b823:	stc    
   14001b824:	loope  0x14001b7ef
   14001b826:	jb     0x14001b818
   14001b828:	fnstcw WORD PTR [rbx-0x60371398]
   14001b82e:	push   rax
   14001b82f:	jrcxz  0x14001b7e7
   14001b831:	mov    BYTE PTR [rdx],bh
   14001b833:	fstp   QWORD PTR [rdi-0x5b2ce498]
   14001b839:	jo     0x14001b85d
   14001b83b:	(bad)  
   14001b83c:	(bad)  
   14001b83d:	movabs al,ds:0xcde4e657a6cae352
   14001b846:	jnp    0x14001b83a
   14001b848:	repz in eax,0x90
   14001b84b:	stc    
   14001b84c:	sti    
   14001b84d:	repz pushf 
   14001b84f:	std    
   14001b850:	(bad)  
   14001b851:	clc    
   14001b852:	sahf   
   14001b853:	(bad)  
   14001b854:	(bad)  
   14001b855:	neg    DWORD PTR [rbx-0x65080101]
   14001b85b:	(bad)  
   14001b85c:	(bad)  
   14001b85d:	clc    
   14001b85e:	cwde   
   14001b85f:	(bad)  
   14001b860:	(bad)  
   14001b861:	not    DWORD PTR [rsi-0x6c080101]
   14001b867:	(bad)  
   14001b868:	(bad)  
   14001b869:	not    DWORD PTR [rdx-0x700a0101]
   14001b86f:	(bad)  
   14001b870:	(bad)  
   14001b871:	cmc    
   14001b872:	mov    ?,edi
   14001b874:	(bad)  
   14001b875:	hlt    
   14001b876:	(bad)  
   14001b877:	(bad)  
   14001b878:	(bad)  
   14001b879:	repz mov edi,edi
   14001b87c:	(bad)  
   14001b87d:	hlt    
   14001b87e:	mov    bh,bh
   14001b880:	(bad)  
   14001b881:	repz xchg bh,bh
   14001b884:	(bad)  
   14001b885:	repnz (bad) 
   14001b887:	(bad)  
   14001b888:	(bad)  
   14001b889:	icebp  
   14001b88a:	jg     0x14001b88b
   14001b88c:	(bad)  
   14001b88d:	lock jl 0x14001b88f
   14001b890:	(bad)  
   14001b891:	out    dx,eax
   14001b892:	jp     0x14001b893
   14001b894:	(bad)  
   14001b895:	out    dx,al
   14001b896:	jbe    0x14001b897
   14001b898:	(bad)  
   14001b899:	jmp    0x14001b90e
   14001b89b:	(bad)  
   14001b89c:	(bad)  
   14001b89d:	out    0x6c,eax
   14001b89f:	(bad)  
   14001b8a0:	cld    
   14001b8a1:	in     al,0x69
   14001b8a3:	(bad)  
   14001b8a4:	sti    
   14001b8a5:	loopne 0x14001b90d
   14001b8a7:	(bad)  
   14001b8a8:	stc    
   14001b8a9:	(bad)  [rdx-0x1]
   14001b8ac:	stc    
   14001b8ad:	xlat   BYTE PTR ds:[rbx]
   14001b8ae:	pop    rbp
   14001b8af:	push   rsi
   14001b8b1:	(bad)  
   14001b8b2:	pop    rdx
   14001b8b3:	push   rsp
   14001b8b5:	rcl    BYTE PTR [rdi+rdi*8-0xe],1
   14001b8b9:	retf   
   14001b8ba:	push   rax
   14001b8bb:	push   rcx
   14001b8bd:	(bad)  
   14001b8be:	rex.WR (bad) 
   14001b8c0:	out    dx,al
   14001b8c1:	rol    BYTE PTR [rdi-0x1],0xea
   14001b8c5:	mov    eax,0xb5e7ff42
   14001b8ca:	(bad)  
   14001b8cb:	jmp    rsi
   14001b8cd:	scas   eax,DWORD PTR es:[rdi]
   14001b8ce:	cmp    bh,bh
   14001b8d0:	loop   0x14001b87a
   14001b8d2:	xor    edi,edi
   14001b8d4:	fistp  DWORD PTR [rsi-0x712e00d3]
   14001b8da:	and    edi,edi
   14001b8dc:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001b8dd:	ins    BYTE PTR es:[rdi],dx
   14001b8de:	sbb    eax,0x16598bee
   14001b8e3:	jo     0x14001b8e5
	...
   14001b91d:	add    BYTE PTR [rax],al
   14001b91f:	add    BYTE PTR [rdi-0x49f70101],dh
   14001b925:	(bad)  
   14001b926:	(bad)  
   14001b927:	(bad)  
   14001b928:	mov    ch,0xff
   14001b92a:	(bad)  
   14001b92b:	sbb    esi,DWORD PTR [rbx-0x4de00101]
   14001b931:	(bad)  
   14001b932:	(bad)  
   14001b933:	and    esi,DWORD PTR [rcx-0x4fd80101]
   14001b939:	(bad)  
   14001b93a:	(bad)  
   14001b93b:	sub    edi,DWORD PTR [rcx+rsi*8-0x3]
   14001b93f:	rex.WR
   14001b940:	rex.WRB in eax,0xff
   14001b943:	in     eax,0x43
   14001b945:	fdivp  st(7),st
   14001b947:	in     al,0x3a
   14001b949:	(bad)  
   14001b94a:	jmp    rbp
   14001b94c:	xor    dl,cl
   14001b94e:	jmp    rbp
   14001b950:	(bad)  
   14001b951:	mov    esp,0xb523e5ff
   14001b956:	jmp    rsp
   14001b958:	and    ch,BYTE PTR [rdi-0x50d91b01]
   14001b95e:	(bad)  
   14001b95f:	loop   0x14001b9b1
   14001b961:	scas   eax,DWORD PTR es:[rdi]
   14001b962:	out    dx,eax
   14001b963:	mov    dl,0x4
   14001b965:	add    al,0x59
   14001b967:	and    eax,DWORD PTR [rax]
   14001b969:	add    BYTE PTR [rbp+0xd],dl
   14001b96c:	add    BYTE PTR [rax],al
   14001b96e:	push   rbp
   14001b96f:	add    DWORD PTR [rax],eax
	...
   14001b985:	add    BYTE PTR [rax],al
   14001b987:	add    BYTE PTR [rdx-0x3b8de290],ch
   14001b98d:	mov    gs,WORD PTR [rsi]
   14001b98f:	out    dx,eax
   14001b990:	xlat   BYTE PTR ds:[rbx]
   14001b991:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001b992:	sub    edi,edi
   14001b994:	fld    TBYTE PTR [rcx+rsi*1+0x33b0ddff]
   14001b99b:	jmp    rax
   14001b99d:	mov    ch,0x36
   14001b99f:	jmp    rcx
   14001b9a1:	mov    edx,0xc0e5ff39
   14001b9a6:	cmp    al,0xff
   14001b9a8:	call   0x12c00fa74
   14001b9ad:	int3   
   14001b9ae:	rex.XB (bad) 
   14001b9b0:	in     eax,dx
   14001b9b1:	ror    DWORD PTR [rdx-0x1],cl
   14001b9b4:	lock (bad) 
   14001b9b6:	rex.WRX push rdx
   14001b9b9:	fist   DWORD PTR [rcx-0x1]
   14001b9bc:	hlt    
   14001b9bd:	loope  0x14001ba14
   14001b9bf:	push   rdi
   14001b9c1:	jrcxz  0x14001ba1d
   14001b9c3:	(bad)  
   14001b9c4:	clc    
   14001b9c5:	out    0x60,eax
   14001b9c7:	(bad)  
   14001b9c8:	stc    
   14001b9c9:	(bad)  
   14001b9ca:	fs (bad) 
   14001b9cc:	cli    
   14001b9cd:	in     al,dx
   14001b9ce:	addr32 (bad) 
   14001b9d0:	cld    
   14001b9d1:	out    dx,eax
   14001b9d2:	push   0xffffffffffffffff
   14001b9d4:	std    
   14001b9d5:	repnz outs dx,DWORD PTR ds:[rsi]
   14001b9d7:	(bad)  
   14001b9d8:	std    
   14001b9d9:	hlt    
   14001b9da:	jno    0x14001b9db
   14001b9dc:	std    
   14001b9dd:	hlt    
   14001b9de:	jne    0x14001b9df
   14001b9e0:	(bad)  
   14001b9e1:	cmc    
   14001b9e2:	jnp    0x14001b9e3
   14001b9e4:	(bad)  
   14001b9e5:	idiv   BYTE PTR [rsi-0x1]
   14001b9e8:	(bad)  
   14001b9e9:	test   BYTE PTR [rax-0x7c080001],0xff
   14001b9f0:	push   rdi
   14001b9f2:	test   edi,edi
   14001b9f4:	push   rsi
   14001b9f6:	mov    edi,edi
   14001b9f8:	push   rdi
   14001b9fa:	mov    edi,edi
   14001b9fc:	push   rdi
   14001b9fe:	(bad)  
   14001b9ff:	(bad)  
   14001ba00:	(bad)  
   14001ba01:	clc    
   14001ba02:	(bad)  
   14001ba03:	(bad)  
   14001ba04:	(bad)  
   14001ba05:	stc    
   14001ba06:	xchg   ecx,eax
   14001ba07:	(bad)  
   14001ba08:	(bad)  
   14001ba09:	cli    
   14001ba0a:	xchg   esp,eax
   14001ba0b:	(bad)  
   14001ba0c:	(bad)  
   14001ba0d:	stc    
   14001ba0e:	xchg   esp,eax
   14001ba0f:	(bad)  
   14001ba10:	(bad)  
   14001ba11:	not    DWORD PTR [rdi-0x7a1c0d01]
   14001ba17:	not    ecx
   14001ba19:	lods   eax,DWORD PTR ds:[rsi]
   14001ba1a:	pop    rax
   14001ba1b:	out    0xa1,eax
   14001ba1d:	imul   ebx,DWORD PTR [rbx],0x1b69a1c1
   14001ba23:	lea    esp,[rcx-0x5fa9e497]
   14001ba29:	push   0x68a0461b
   14001ba2e:	sbb    ebp,DWORD PTR [rdx]
   14001ba30:	movabs al,ds:0x9f00000000161b68
   14001ba39:	push   0x689f051b
   14001ba3e:	sbb    ebp,DWORD PTR [rdx]
   14001ba40:	lahf   
   14001ba41:	sbb    ebp,DWORD PTR [edi]
   14001ba44:	lahf   
   14001ba45:	sbb    ebx,DWORD PTR [esi+ebx*4+0x67]
   14001ba4a:	sbb    cl,BYTE PTR [rcx-0x46e59862]
   14001ba50:	(bad)  
   14001ba51:	movabs al,ds:0xf4fcf789dcede552
   14001ba5a:	sahf   
   14001ba5b:	(bad)  
   14001ba5c:	(bad)  
   14001ba5d:	clc    
   14001ba5e:	sahf   
   14001ba5f:	(bad)  
   14001ba60:	(bad)  
   14001ba61:	neg    BYTE PTR [rdi+rdi*8-0x670902]
   14001ba68:	(bad)  
   14001ba69:	not    DWORD PTR [rbp-0x6d080101]
   14001ba6f:	(bad)  
   14001ba70:	(bad)  
   14001ba71:	test   BYTE PTR [rdi-0x700a0101],0xff
   14001ba78:	(bad)  
   14001ba79:	hlt    
   14001ba7a:	(bad)  
   14001ba7b:	(bad)  
   14001ba7c:	(bad)  
   14001ba7d:	hlt    
   14001ba7e:	mov    bh,bh
   14001ba80:	(bad)  
   14001ba81:	cmc    
   14001ba82:	xchg   edi,edi
   14001ba84:	(bad)  
   14001ba85:	repz xchg bh,bh
   14001ba88:	(bad)  
   14001ba89:	repnz cmp edi,0xfffffffe
   14001ba8d:	icebp  
   14001ba8e:	cmp    edi,0xff7bf1fe
   14001ba94:	(bad)  
   14001ba95:	lock jns 0x14001ba97
   14001ba98:	(bad)  
   14001ba99:	in     eax,dx
   14001ba9a:	jbe    0x14001ba9b
   14001ba9c:	(bad)  
   14001ba9d:	call   0x12900ba15
   14001baa2:	ins    BYTE PTR es:[rdi],dx
   14001baa3:	(bad)  
   14001baa4:	cld    
   14001baa5:	jrcxz  0x14001bb0f
   14001baa7:	(bad)  
   14001baa8:	cld    
   14001baa9:	fbld   TBYTE PTR [rdi+rdi*8-0x6]
   14001baad:	(bad)  [rcx-0x1]
   14001bab0:	stc    
   14001bab1:	xlat   BYTE PTR ds:[rbx]
   14001bab2:	pop    rsp
   14001bab3:	push   rbp
   14001bab5:	rcr    BYTE PTR [rcx-0x1],cl
   14001bab8:	repz int 0x54
   14001babb:	push   rdx
   14001babd:	retf   0xff4e
   14001bac0:	out    dx,eax
   14001bac1:	ret    
   14001bac2:	rex.WXB (bad) 
   14001bac4:	in     al,dx
   14001bac5:	mov    edi,0xb8eaff47
   14001baca:	jmp    r14
   14001bacd:	mov    cl,0x3d
   14001bacf:	jmp    rdx
   14001bad1:	stos   DWORD PTR es:[rdi],eax
   14001bad2:	(bad)  
   14001bad3:	(bad)  
   14001bad4:	fbld   TBYTE PTR [rsi-0x652600cd]
   14001bada:	sub    edi,edi
   14001badc:	enter  0x1c84,0xfd
   14001bae0:	mov    edx,DWORD PTR [rsi+0x13]
   14001bae3:	fimul  DWORD PTR [rbx+0x291659]
	...
   14001bb1d:	add    BYTE PTR [rax],al
   14001bb1f:	add    BYTE PTR [rsi-0x4afb0101],dh
   14001bb25:	(bad)  
   14001bb26:	(bad)  
   14001bb27:	sbb    DWORD PTR [rdi+rdi*8-0x4de202],esi
   14001bb2e:	(bad)  
   14001bb2f:	and    DWORD PTR [rcx-0x4fda0101],esi
   14001bb35:	(bad)  
   14001bb36:	(bad)  
   14001bb37:	sub    DWORD PTR [rdi-0x55d10101],ebp
   14001bb3d:	std    
   14001bb3e:	(bad)  
   14001bb3f:	xor    ecx,DWORD PTR [rbx-0x1c]
   14001bb42:	(bad)  
   14001bb43:	fild   WORD PTR [rdi-0x21]
   14001bb46:	jmp    rsp
   14001bb48:	cmp    eax,0x33e5ffd7
   14001bb4d:	retf   
   14001bb4e:	jmp    rbp
   14001bb50:	sub    al,al
   14001bb52:	jmp    rsp
   14001bb54:	and    esi,DWORD PTR [rdi-0x4fdd1b01]
   14001bb5a:	jmp    rsp
   14001bb5c:	and    al,0xb0
   14001bb5e:	jmp    rbx
   14001bb60:	rex.XB mov r11b,0xf7
   14001bb63:	fsubr  QWORD PTR [rip+0x389250]        # 0x1403a4db9
   14001bb69:	add    BYTE PTR [rbp+0x14],dl
   14001bb6c:	add    BYTE PTR [rax],al
   14001bb6e:	push   rbp
   14001bb6f:	add    eax,0x0
	...
   14001bb84:	stos   BYTE PTR es:[rdi],al
   14001bb85:	jo     0x14001bba5
   14001bb87:	(bad)  
   14001bb88:	lods   al,BYTE PTR ds:[rsi]
   14001bb89:	outs   dx,DWORD PTR ds:[rsi]
   14001bb8a:	sbb    al,0xd3
   14001bb8c:	(bad)  
   14001bb8d:	lahf   
   14001bb8e:	(bad)  
   14001bb8f:	(bad)  
   14001bb90:	fldcw  WORD PTR [rdx-0x4f2200d0]
   14001bb96:	xor    edi,edi
   14001bb98:	fbstp  TBYTE PTR [rdi+rsi*1+0x3ab9e1ff]
   14001bb9f:	jmp    rsp
   14001bba1:	mov    esi,0xc3e7ff3b
   14001bba6:	rex (bad) 
   14001bba8:	(bad)  
   14001bba9:	retf   0xff44
   14001bbac:	in     eax,dx
   14001bbad:	ror    DWORD PTR [rdx-0x1],1
   14001bbb0:	lock (bad) 
   14001bbb2:	rex.WRB push r10
   14001bbb5:	ficom  DWORD PTR [rcx-0x1]
   14001bbb8:	hlt    
   14001bbb9:	ficom  WORD PTR [rbp-0x1]
   14001bbbc:	mul    ah
   14001bbbe:	pop    rcx
   14001bbbf:	push   rdi
   14001bbc1:	out    0x60,al
   14001bbc3:	(bad)  
   14001bbc4:	clc    
   14001bbc5:	(bad)  
   14001bbc6:	fs (bad) 
   14001bbc8:	cli    
   14001bbc9:	in     eax,dx
   14001bbca:	addr32 (bad) 
   14001bbcc:	cld    
   14001bbcd:	out    dx,eax
   14001bbce:	imul   edi,edi,0xff70f2fd
   14001bbd4:	std    
   14001bbd5:	repz jae 0x14001bbd7
   14001bbd8:	std    
   14001bbd9:	hlt    
   14001bbda:	jbe    0x14001bbdb
   14001bbdc:	(bad)  
   14001bbdd:	hlt    
   14001bbde:	jp     0x14001bbdf
   14001bbe0:	(bad)  
   14001bbe1:	cmc    
   14001bbe2:	jge    0x14001bbe3
   14001bbe4:	(bad)  
   14001bbe5:	test   BYTE PTR [rax-0x7c080101],0xff
   14001bbec:	push   rdi
   14001bbee:	test   bh,bh
   14001bbf0:	push   rsi
   14001bbf2:	mov    bh,bh
   14001bbf4:	push   rdi
   14001bbf6:	mov    edi,edi
   14001bbf8:	push   rdi
   14001bbfa:	(bad)  
   14001bbfb:	(bad)  
   14001bbfc:	(bad)  
   14001bbfd:	clc    
   14001bbfe:	(bad)  
   14001bbff:	(bad)  
   14001bc00:	(bad)  
   14001bc01:	cli    
   14001bc02:	xchg   edx,eax
   14001bc03:	(bad)  
   14001bc04:	(bad)  
   14001bc05:	stc    
   14001bc06:	xchg   esp,eax
   14001bc07:	(bad)  
   14001bc08:	(bad)  
   14001bc09:	stc    
   14001bc0a:	xchg   esi,eax
   14001bc0b:	push   rbx
   14001bc0d:	jrcxz  0x14001bb8f
   14001bc0f:	test   al,0x94
   14001bc12:	fisub  WORD PTR [r10-0x5d77e496]
   14001bc19:	imul   ebx,DWORD PTR [rbx],0x39
	...
   14001bc4f:	add    BYTE PTR [rsi-0x61d5e599],bl
   14001bc55:	sbb    dh,BYTE PTR [ebp-0x60]
   14001bc59:	imul   ebx,DWORD PTR [rip+0x74c4dfc2],0x9df2fbf0        # 0x1b4c69c25
   14001bc63:	cld    
   14001bc64:	std    
   14001bc65:	neg    DWORD PTR [rsi-0x64080201]
   14001bc6b:	(bad)  
   14001bc6c:	std    
   14001bc6d:	neg    DWORD PTR [rax-0x6a080101]
   14001bc73:	(bad)  
   14001bc74:	(bad)  
   14001bc75:	not    BYTE PTR [rcx-0x6f0b0101]
   14001bc7b:	(bad)  
   14001bc7c:	(bad)  
   14001bc7d:	hlt    
   14001bc7e:	mov    ?,edi
   14001bc80:	(bad)  
   14001bc81:	hlt    
   14001bc82:	mov    edi,?
   14001bc84:	(bad)  
   14001bc85:	cmc    
   14001bc86:	xchg   edi,edi
   14001bc88:	std    
   14001bc89:	repz test edi,edi
   14001bc8c:	(bad)  
   14001bc8d:	repnz cmp edi,0xfffffffe
   14001bc91:	icebp  
   14001bc92:	cmp    edi,0xff7bf1fe
   14001bc98:	(bad)  
   14001bc99:	out    dx,eax
   14001bc9a:	jns    0x14001bc9b
   14001bc9c:	(bad)  
   14001bc9d:	out    dx,al
   14001bc9e:	ja     0x14001bc9f
   14001bca0:	(bad)  
   14001bca1:	jmp    0x14001bd14
   14001bca3:	(bad)  
   14001bca4:	std    
   14001bca5:	out    0x6b,al
   14001bca7:	(bad)  
   14001bca8:	cld    
   14001bca9:	jrcxz  0x14001bd14
   14001bcab:	(bad)  
   14001bcac:	stc    
   14001bcad:	frstor [rsi-0x1]
   14001bcb0:	stc    
   14001bcb1:	fisub  DWORD PTR [rax-0x1]
   14001bcb4:	clc    
   14001bcb5:	(bad)  
   14001bcb6:	pop    rbx
   14001bcb7:	push   rbp
   14001bcb9:	iret   
   14001bcba:	push   rdi
   14001bcbb:	push   rbx
   14001bcbd:	retf   
   14001bcbe:	push   rdx
   14001bcbf:	push   rdx
   14001bcc1:	(bad)  
   14001bcc2:	rex.WRB (bad) 
   14001bcc4:	out    dx,eax
   14001bcc5:	mov    edi,0xbcedff49
   14001bcca:	rex.RB (bad) 
   14001bccc:	jmp    0x12700ff88
   14001bcd1:	scas   eax,DWORD PTR es:[rdi]
   14001bcd2:	cmp    edi,edi
   14001bcd4:	loop   0x14001bc7f
   14001bcd6:	ss (bad) 
   14001bcd8:	fisub  WORD PTR [rax-0x6b2c00cf]
   14001bcde:	(bad)  
   14001bcdf:	jmp    FWORD PTR [rdi-0x740be28d]
   14001bce5:	pop    rcx
   14001bce6:	(bad)  
   14001bce7:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
	...
   14001bd24:	mov    ah,0xff
   14001bd26:	(bad)  
   14001bd27:	(bad)  
   14001bd28:	mov    bl,0xff
   14001bd2a:	(bad)  
   14001bd2b:	(bad)  
   14001bd2c:	mov    cl,0xff
   14001bd2e:	(bad)  
   14001bd2f:	and    al,0xb0
   14001bd31:	(bad)  
   14001bd32:	(bad)  
   14001bd33:	sub    BYTE PTR [rdi-0x51d30101],ch
   14001bd39:	(bad)  
   14001bd3a:	(bad)  
   14001bd3b:	xor    BYTE PTR [rbp+0x5035feff],ch
   14001bd41:	out    0xff,eax
   14001bd43:	mov    ebp,0xe5ffe44a
   14001bd48:	rex (bad) 
   14001bd4b:	in     eax,0x36
   14001bd4d:	iret   
   14001bd4e:	jmp    rbp
   14001bd50:	sub    eax,0x26e4ffc3
   14001bd55:	mov    ecx,0xb323e4ff
   14001bd5a:	jmp    rsp
   14001bd5c:	and    al,0xb0
   14001bd5e:	jmp    rbx
   14001bd60:	cmp    BYTE PTR [rdx-0x5dae1e05],dh
   14001bd66:	fnsave [rdi+0x4]
   14001bd69:	(bad)  
   14001bd6a:	pop    rcx
   14001bd6b:	sbb    eax,0x9550000
   14001bd70:	add    BYTE PTR [rax],al
   14001bd72:	push   rbp
   14001bd73:	add    DWORD PTR [rax],eax
	...
   14001bd81:	add    BYTE PTR [rax],al
   14001bd83:	add    BYTE PTR [rbx-0x3467e190],ch
   14001bd89:	xchg   esp,eax
   14001bd8a:	sub    esi,esi
   14001bd8c:	fsubr  DWORD PTR [rax-0x512300d2]
   14001bd92:	xor    bh,bh
   14001bd94:	fidiv  WORD PTR [rbx-0x461e00ca]
   14001bd9a:	cmp    bh,bh
   14001bd9c:	in     al,0xbe
   14001bd9e:	cmp    al,0xff
   14001bda0:	out    0xc2,al
   14001bda2:	rex (bad) 
   14001bda4:	call   0x12d010172
   14001bda9:	iret   
   14001bdaa:	rex.RXB (bad) 
   14001bdac:	out    dx,al
   14001bdad:	(bad)  
   14001bdae:	rex.WR push rax
   14001bdb1:	ficom  DWORD PTR [rax-0x1]
   14001bdb4:	hlt    
   14001bdb5:	ficom  WORD PTR [rbp-0x1]
   14001bdb8:	mul    dl
   14001bdba:	pop    rcx
   14001bdbb:	push   rdi
   14001bdbd:	call   0x12afabd21
   14001bdc2:	(bad)  
   14001bdc3:	(bad)  
   14001bdc4:	cli    
   14001bdc5:	in     eax,dx
   14001bdc6:	addr32 (bad) 
   14001bdc8:	cld    
   14001bdc9:	out    dx,eax
   14001bdca:	push   0xffffffffffffffff
   14001bdcc:	cld    
   14001bdcd:	repnz outs dx,BYTE PTR ds:[rsi]
   14001bdcf:	(bad)  
   14001bdd0:	std    
   14001bdd1:	repz jb 0x14001bdd3
   14001bdd4:	std    
   14001bdd5:	hlt    
   14001bdd6:	je     0x14001bdd7
   14001bdd8:	(bad)  
   14001bdd9:	hlt    
   14001bdda:	jns    0x14001bddb
   14001bddc:	(bad)  
   14001bddd:	cmc    
   14001bdde:	jl     0x14001bddf
   14001bde0:	(bad)  
   14001bde1:	idiv   BYTE PTR [rdi-0x1]
   14001bde4:	(bad)  
   14001bde5:	test   DWORD PTR [rdx-0x7b080001],0x87f7ffff
   14001bdef:	(bad)  
   14001bdf0:	push   rdi
   14001bdf2:	mov    edi,edi
   14001bdf4:	push   rdi
   14001bdf6:	(bad)  
   14001bdf7:	(bad)  
   14001bdf8:	(bad)  
   14001bdf9:	clc    
   14001bdfa:	(bad)  
   14001bdfb:	(bad)  
   14001bdfc:	(bad)  
   14001bdfd:	clc    
   14001bdfe:	xchg   ebx,eax
   14001bdff:	(bad)  
   14001be00:	(bad)  
   14001be01:	stc    
   14001be02:	xchg   esp,eax
   14001be03:	(bad)  
   14001be04:	clc    
   14001be05:	in     eax,dx
   14001be06:	test   dl,bh
   14001be08:	(bad)  
   14001be09:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001be0a:	push   rax
   14001be0b:	in     al,0xa3
   14001be0d:	push   0x1c
   14001be0f:	xchg   esi,eax
   14001be10:	movabs ds:0x221b6a,al
	...
   14001be55:	add    BYTE PTR [rax],al
   14001be57:	add    BYTE PTR [rsi-0x61fde599],bl
   14001be5d:	data16 sbb dl,BYTE PTR [rdx-0x61]
   14001be61:	imul   ebx,DWORD PTR [rip+0x74c4dfbb],0x9cf3fcf0        # 0x1b4c69e26
   14001be6b:	std    
   14001be6c:	std    
   14001be6d:	neg    DWORD PTR [rbp-0x65080201]
   14001be73:	(bad)  
   14001be74:	(bad)  
   14001be75:	not    DWORD PTR [rbp-0x6c090101]
   14001be7b:	(bad)  
   14001be7c:	(bad)  
   14001be7d:	hlt    
   14001be7e:	nop
   14001be7f:	(bad)  
   14001be80:	(bad)  
   14001be81:	hlt    
   14001be82:	mov    ?,edi
   14001be84:	(bad)  
   14001be85:	hlt    
   14001be86:	(bad)  
   14001be87:	(bad)  
   14001be88:	(bad)  
   14001be89:	cmc    
   14001be8a:	mov    edi,edi
   14001be8c:	(bad)  
   14001be8d:	repz test edi,edi
   14001be90:	(bad)  
   14001be91:	repnz (bad) 
   14001be93:	(bad)  
   14001be94:	(bad)  
   14001be95:	icebp  
   14001be96:	jg     0x14001be97
   14001be98:	(bad)  
   14001be99:	lock jnp 0x14001be9b
   14001be9c:	(bad)  
   14001be9d:	out    dx,eax
   14001be9e:	jns    0x14001be9f
   14001bea0:	(bad)  
   14001bea1:	in     al,dx
   14001bea2:	jbe    0x14001bea3
   14001bea4:	(bad)  
   14001bea5:	jmp    0x14001bf16
   14001bea7:	(bad)  
   14001bea8:	std    
   14001bea9:	in     eax,0x6c
   14001beab:	(bad)  
   14001beac:	sti    
   14001bead:	jrcxz  0x14001bf18
   14001beaf:	(bad)  
   14001beb0:	stc    
   14001beb1:	frstor [rbp-0x1]
   14001beb4:	clc    
   14001beb5:	fsub   DWORD PTR [rcx-0x1]
   14001beb8:	not    esp
   14001beba:	pop    rdx
   14001bebb:	push   rsp
   14001bebd:	iret   
   14001bebe:	push   rdi
   14001bebf:	push   rcx
   14001bec1:	leave  
   14001bec2:	push   rbx
   14001bec3:	(bad)  
   14001bec4:	out    dx,al
   14001bec5:	ret    
   14001bec6:	rex.WRB (bad) 
   14001bec8:	in     eax,dx
   14001bec9:	mov    ebp,0xb8eaff49
   14001bece:	rex.R jmp rdi
   14001bed1:	mov    cl,0x3e
   14001bed3:	jmp    rbx
   14001bed5:	lods   eax,DWORD PTR ds:[rsi]
   14001bed6:	cmp    edi,edi
   14001bed8:	loope  0x14001be81
   14001beda:	xor    edi,edi
   14001bedc:	ficomp DWORD PTR [rbp-0x753100d2]
   14001bee2:	and    edi,edi
   14001bee4:	movabs eax,ds:0x4c16598bea1f69
	...
   14001bf21:	add    BYTE PTR [rax],al
   14001bf23:	add    BYTE PTR [rbx-0x4eee0101],dh
   14001bf29:	(bad)  
   14001bf2a:	(bad)  
   14001bf2b:	and    DWORD PTR [rax-0x50da0101],esi
   14001bf31:	(bad)  
   14001bf32:	(bad)  
   14001bf33:	sub    ch,BYTE PTR [rsi-0x52d00101]
   14001bf39:	(bad)  
   14001bf3a:	(bad)  
   14001bf3b:	xor    ebp,DWORD PTR [rbx+0x5b37feff]
   14001bf41:	in     al,dx
   14001bf42:	(bad)  
   14001bf43:	xchg   ebp,eax
   14001bf44:	rex.WRB in eax,0xff
   14001bf47:	in     eax,0x43
   14001bf49:	fdiv   st(7),st
   14001bf4b:	in     eax,0x3a
   14001bf4d:	(bad)  
   14001bf4e:	jmp    rbp
   14001bf50:	(bad)  
   14001bf51:	(bad)  
   14001bf52:	jmp    rsp
   14001bf54:	(bad)  
   14001bf55:	mov    esp,0xb523e4ff
   14001bf5a:	jmp    rsp
   14001bf5c:	and    al,0xb2
   14001bf5e:	jmp    rbx
   14001bf60:	sub    esi,DWORD PTR [rbx-0x4aab1d02]
   14001bf66:	lock mov ecx,0x2762130c
   14001bf6c:	add    BYTE PTR [rax],al
   14001bf6e:	push   rbp
   14001bf6f:	adc    DWORD PTR [rax],eax
   14001bf71:	add    BYTE PTR [rbp+0x3],dl
	...
   14001bf80:	stos   DWORD PTR es:[rdi],eax
   14001bf81:	jno    0x14001bfa2
   14001bf83:	cmp    eax,0xe33289bf
   14001bf88:	xlat   BYTE PTR ds:[rbx]
   14001bf89:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001bf8a:	cs (bad) 
   14001bf8c:	fld    TBYTE PTR [rbx-0x4d2100ce]
   14001bf92:	ss jmp rax
   14001bf95:	mov    dh,0x39
   14001bf97:	jmp    rbx
   14001bf99:	mov    esp,0xc1e6ff3b
   14001bf9e:	ds (bad) 
   14001bfa0:	jmp    0x12c01036d
   14001bfa5:	(bad)  
   14001bfa6:	rex.RXB (bad) 
   14001bfa8:	in     eax,dx
   14001bfa9:	ror    DWORD PTR [rbx-0x1],cl
   14001bfac:	icebp  
   14001bfad:	xlat   BYTE PTR ds:[rbx]
   14001bfae:	push   rax
   14001bfaf:	push   rbx
   14001bfb1:	fst    QWORD PTR [rbp-0x1]
   14001bfb4:	cmc    
   14001bfb5:	loop   0x14001c011
   14001bfb7:	push   rdi
   14001bfb9:	out    0x5e,eax
   14001bfbb:	(bad)  
   14001bfbc:	stc    
   14001bfbd:	jmp    0x14001c021
   14001bfbf:	(bad)  
   14001bfc0:	cli    
   14001bfc1:	out    dx,al
   14001bfc2:	gs (bad) 
   14001bfc4:	sti    
   14001bfc5:	out    dx,al
   14001bfc6:	imul   edi,edi,0xff6df1fc
   14001bfcc:	std    
   14001bfcd:	repz jb 0x14001bfcf
   14001bfd0:	std    
   14001bfd1:	hlt    
   14001bfd2:	je     0x14001bfd3
   14001bfd4:	(bad)  
   14001bfd5:	cmc    
   14001bfd6:	js     0x14001bfd7
   14001bfd8:	(bad)  
   14001bfd9:	idiv   BYTE PTR [rbx-0x1]
   14001bfdc:	(bad)  
   14001bfdd:	idiv   DWORD PTR [rdi-0x1]
   14001bfe0:	(bad)  
   14001bfe1:	test   DWORD PTR [rcx-0x7c070001],0x87f8ffff
   14001bfeb:	(bad)  
   14001bfec:	push   rdi
   14001bfee:	mov    bh,bh
   14001bff0:	(bad)  
   14001bff1:	clc    
   14001bff2:	mov    edi,?
   14001bff4:	(bad)  
   14001bff5:	clc    
   14001bff6:	(bad)  
   14001bff7:	(bad)  
   14001bff8:	(bad)  
   14001bff9:	stc    
   14001bffa:	xchg   edx,eax
   14001bffb:	(bad)  
   14001bffc:	(bad)  
   14001bffd:	stc    
   14001bffe:	xchg   ebx,eax
   14001bfff:	(bad)  
   14001c000:	out    dx,al
   14001c001:	xlat   BYTE PTR ds:[rbx]
   14001c002:	outs   dx,BYTE PTR ds:[rsi]
   14001c003:	repnz test al,0x71
   14001c006:	and    DWORD PTR [rdx+0x361c6ba3],esi
	...
   14001c060:	sahf   
   14001c061:	data16 sbb al,BYTE PTR [rdx]
   14001c064:	popf   
   14001c065:	data16 sbb dl,BYTE PTR [rdx-0x53]
   14001c069:	jge    0x14001c09c
   14001c06b:	iret   
   14001c06c:	repz in al,0x8f
   14001c06f:	idiv   ebp
   14001c071:	neg    DWORD PTR [rdi-0x63080201]
   14001c077:	(bad)  
   14001c078:	(bad)  
   14001c079:	not    DWORD PTR [rdi-0x6b090101]
   14001c07f:	(bad)  
   14001c080:	(bad)  
   14001c081:	hlt    
   14001c082:	nop
   14001c083:	(bad)  
   14001c084:	(bad)  
   14001c085:	hlt    
   14001c086:	(bad)  
   14001c087:	(bad)  
   14001c088:	(bad)  
   14001c089:	hlt    
   14001c08a:	mov    edi,?
   14001c08c:	(bad)  
   14001c08d:	hlt    
   14001c08e:	mov    edi,edi
   14001c090:	(bad)  
   14001c091:	repnz test edi,edi
   14001c094:	(bad)  
   14001c095:	icebp  
   14001c096:	(bad)  
   14001c097:	(bad)  
   14001c098:	(bad)  
   14001c099:	out    dx,eax
   14001c09a:	cmp    edi,0xff7cf0fe
   14001c0a0:	(bad)  
   14001c0a1:	in     eax,dx
   14001c0a2:	jns    0x14001c0a3
   14001c0a4:	(bad)  
   14001c0a5:	in     al,dx
   14001c0a6:	jne    0x14001c0a7
   14001c0a8:	std    
   14001c0a9:	jmp    0x124fec01e
   14001c0ae:	push   0xffffffffffffffff
   14001c0b0:	sti    
   14001c0b1:	loop   0x14001c11a
   14001c0b3:	(bad)  
   14001c0b4:	clc    
   14001c0b5:	frstor [rdi+rdi*8-0x9]
   14001c0b9:	(bad)  
   14001c0ba:	pop    rdi
   14001c0bb:	push   rsi
   14001c0bd:	rcr    BYTE PTR [rdx-0x1],cl
   14001c0c0:	repnz int 0x55
   14001c0c3:	push   rax
   14001c0c5:	(bad)  
   14001c0c6:	push   rdx
   14001c0c7:	(bad)  
   14001c0c8:	out    dx,al
   14001c0c9:	ret    0xff4d
   14001c0cc:	in     al,dx
   14001c0cd:	mov    esp,0xb6e8ff4a
   14001c0d2:	rex.R jmp rdi
   14001c0d5:	scas   eax,DWORD PTR es:[rdi]
   14001c0d6:	cmp    eax,0x39ace2ff
   14001c0db:	(bad)  
   14001c0dc:	fisub  WORD PTR [rcx-0x692a00ce]
   14001c0e2:	sub    bh,bh
   14001c0e4:	mov    ecx,0x8cf91c7b
   14001c0e9:	pop    rcx
   14001c0ea:	(bad)  
   14001c0eb:	ret    
   14001c0ec:	mov    ebx,DWORD PTR [rcx+0x16]
   14001c0ef:	or     al,BYTE PTR [rax]
	...
   14001c121:	add    BYTE PTR [rax],al
   14001c123:	add    BYTE PTR [rdx-0x4ff70101],dh
   14001c129:	(bad)  
   14001c12a:	(bad)  
   14001c12b:	and    al,0xaf
   14001c12d:	(bad)  
   14001c12e:	(bad)  
   14001c12f:	sub    BYTE PTR [rsi-0x52d10101],ch
   14001c135:	(bad)  
   14001c136:	(bad)  
   14001c137:	xor    DWORD PTR [rdi+rdi*8-0x55c902],ebp
   14001c13e:	(bad)  
   14001c13f:	cmp    bh,BYTE PTR [rcx-0xb]
   14001c142:	(bad)  
   14001c143:	(bad)  
   14001c144:	push   rcx
   14001c145:	call   0x12149a749
   14001c14a:	jmp    rbp
   14001c14c:	cmp    eax,0x31e5ffd8
   14001c151:	retf   
   14001c152:	jmp    rbp
   14001c154:	sub    al,al
   14001c156:	jmp    rsp
   14001c158:	and    al,0xb7
   14001c15a:	jmp    rsp
   14001c15c:	and    esi,DWORD PTR [rbx-0x4cd81c01]
   14001c162:	jmp    rbx
   14001c164:	rex.R mov bpl,0xf8
   14001c167:	jrcxz  0x14001c1b2
   14001c169:	mov    al,ah
   14001c16b:	pop    rax
   14001c16c:	add    BYTE PTR [rax],al
   14001c16e:	push   rbp
   14001c16f:	sbb    BYTE PTR [rax],al
   14001c171:	add    BYTE PTR [rbp+0x7],dl
	...
   14001c17c:	(bad)  
   14001c17d:	cdq    
   14001c17e:	add    rbp,QWORD PTR [rbx-0x2d58e18f]
   14001c185:	fwait
   14001c186:	sub    al,0xf9
   14001c188:	fld    TBYTE PTR [rdx-0x4f2300ce]
   14001c18e:	xor    eax,0x38b5dfff
   14001c193:	jmp    rbx
   14001c195:	mov    edx,0xbee5ff3b
   14001c19a:	notrack jmp rdi
   14001c19d:	(bad)
   14001c1a0:	jmp    0x14001c170
   14001c1a2:	rex.RXB (bad) 
   14001c1a4:	in     eax,dx
   14001c1a5:	ror    DWORD PTR [rbx-0x1],cl
   14001c1a8:	lock xlat BYTE PTR ds:[rbx]
   14001c1aa:	rex.WRB push r10
   14001c1ad:	fist   DWORD PTR [rdx-0x1]
   14001c1b0:	hlt    
   14001c1b1:	loope  0x14001c20c
   14001c1b3:	push   rsi
   14001c1b5:	out    0x5e,al
   14001c1b7:	push   rdi
   14001c1b9:	(bad)  
   14001c1ba:	(bad)  
   14001c1bb:	(bad)  
   14001c1bc:	stc    
   14001c1bd:	in     eax,dx
   14001c1be:	gs (bad) 
   14001c1c0:	sti    
   14001c1c1:	out    dx,al
   14001c1c2:	imul   edi,edi,0xff6df1fc
   14001c1c8:	std    
   14001c1c9:	hlt    
   14001c1ca:	jo     0x14001c1cb
   14001c1cc:	std    
   14001c1cd:	hlt    
   14001c1ce:	je     0x14001c1cf
   14001c1d0:	std    
   14001c1d1:	cmc    
   14001c1d2:	ja     0x14001c1d3
   14001c1d4:	(bad)  
   14001c1d5:	cmc    
   14001c1d6:	jnp    0x14001c1d7
   14001c1d8:	(bad)  
   14001c1d9:	idiv   DWORD PTR [rsi-0x1]
   14001c1dc:	(bad)  
   14001c1dd:	test   DWORD PTR [rcx-0x7b070001],0x86f8ffff
   14001c1e7:	(bad)  
   14001c1e8:	push   rdi
   14001c1ea:	mov    bh,bh
   14001c1ec:	(bad)  
   14001c1ed:	clc    
   14001c1ee:	(bad)  
   14001c1ef:	(bad)  
   14001c1f0:	(bad)  
   14001c1f1:	stc    
   14001c1f2:	mov    ?,edi
   14001c1f4:	(bad)  
   14001c1f5:	stc    
   14001c1f6:	(bad)  
   14001c1f7:	(bad)  
   14001c1f8:	(bad)  
   14001c1f9:	test   BYTE PTR [rbp+0x63c4e4fd],0xed
   14001c200:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001c201:	imul   ebx,DWORD PTR [rbx+rcx*4],0xffffffa4
   14001c205:	imul   ebx,DWORD PTR [rdi+rax*1],0x0
	...
   14001c265:	add    BYTE PTR [rax],al
   14001c267:	add    BYTE PTR [rbp-0x62e9e59a],bl
   14001c26d:	data16 sbb bl,BYTE PTR [rax-0xf86371f]
   14001c274:	std    
   14001c275:	cmc    
   14001c276:	sahf   
   14001c277:	std    
   14001c278:	(bad)  
   14001c279:	neg    DWORD PTR [rdi+rdi*8-0x690802]
   14001c280:	(bad)  
   14001c281:	not    BYTE PTR [rbx-0x6f0b0101]
   14001c287:	(bad)  
   14001c288:	(bad)  
   14001c289:	hlt    
   14001c28a:	(bad)  
   14001c28b:	(bad)  
   14001c28c:	(bad)  
   14001c28d:	hlt    
   14001c28e:	mov    edi,?
   14001c290:	(bad)  
   14001c291:	hlt    
   14001c292:	mov    edi,edi
   14001c294:	(bad)  
   14001c295:	repz xchg bh,bh
   14001c298:	(bad)  
   14001c299:	icebp  
   14001c29a:	cmp    edi,0xfffffffe
   14001c29d:	out    dx,eax
   14001c29e:	jg     0x14001c29f
   14001c2a0:	std    
   14001c2a1:	out    dx,eax
   14001c2a2:	jl     0x14001c2a3
   14001c2a4:	std    
   14001c2a5:	in     eax,dx
   14001c2a6:	jns    0x14001c2a7
   14001c2a8:	std    
   14001c2a9:	jmp    0x128fec223
   14001c2ae:	outs   dx,DWORD PTR ds:[rsi]
   14001c2af:	(bad)  
   14001c2b0:	sti    
   14001c2b1:	jrcxz  0x14001c31c
   14001c2b3:	(bad)  
   14001c2b4:	stc    
   14001c2b5:	fisub  WORD PTR [rsi-0x1]
   14001c2b8:	neg    edx
   14001c2ba:	(bad)  
   14001c2bb:	push   rsi
   14001c2bd:	(bad)  
   14001c2be:	pop    rsi
   14001c2bf:	push   rbx
   14001c2c1:	iret   
   14001c2c2:	pop    rax
   14001c2c3:	push   rcx
   14001c2c5:	retf   0xff54
   14001c2c8:	lock (bad) 
   14001c2ca:	push   rax
   14001c2cb:	(bad)  
   14001c2cc:	in     eax,dx
   14001c2cd:	mov    edi,0xb9e9ff4c
   14001c2d2:	rex.RXB jmp r14
   14001c2d5:	mov    bl,0x43
   14001c2d7:	jmp    rbx
   14001c2d9:	lods   eax,DWORD PTR ds:[rsi]
   14001c2da:	cmp    al,0xff
   14001c2dc:	loopne 0x14001c286
   14001c2de:	(bad)  
   14001c2df:	(bad)  
   14001c2e0:	fistp  DWORD PTR [rsi-0x713100d1]
   14001c2e6:	jmp    QWORD PTR es:[rbp-0x7311e095]
   14001c2ed:	pop    rdx
   14001c2ee:	(bad)  
   14001c2ef:	imul   eax,DWORD PTR [rax],0x0
	...
   14001c326:	add    BYTE PTR [rax],al
   14001c328:	scas   eax,DWORD PTR es:[rdi]
   14001c329:	(bad)  
   14001c32a:	(bad)  
   14001c32b:	and    ch,BYTE PTR [rsi-0x52d30101]
   14001c331:	(bad)  
   14001c332:	(bad)  
   14001c333:	xor    BYTE PTR [rdi+rdi*8-0x55ca02],ch
   14001c33a:	(bad)  
   14001c33b:	cmp    DWORD PTR [rcx-0x5bc20101],ebp
   14001c341:	(bad)  
   14001c342:	inc    BYTE PTR [rdx+0x53]
   14001c345:	jmp    0x1244da149
   14001c34a:	jmp    rbp
   14001c34c:	rex.B (bad) 
   14001c34f:	in     eax,0x36
   14001c351:	sar    edi,1
   14001c353:	in     eax,0x2d
   14001c355:	ret    
   14001c356:	jmp    rbp
   14001c358:	es mov edx,0xb523e4ff
   14001c35e:	jmp    rbx
   14001c360:	es mov ch,0xff
   14001c363:	jrcxz  0x14001c399
   14001c365:	mov    dh,0xfd
   14001c367:	jrcxz  0x14001c3c3
   14001c369:	mov    ch,0xec
   14001c36b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001c36c:	add    al,0x5
   14001c36e:	pop    rdx
   14001c36f:	and    al,BYTE PTR [rax]
   14001c371:	add    BYTE PTR [rbp+0xd],dl
   14001c374:	add    BYTE PTR [rax],al
   14001c376:	push   rbp
   14001c377:	add    bh,bh
   14001c379:	cld    
   14001c37a:	mov    cl,0x1
   14001c37c:	lods   eax,DWORD PTR ds:[rsi]
   14001c37d:	jae    0x14001c39f
   14001c37f:	rex.W ret 
   14001c381:	lea    esi,[rip+0x2fa7dae7]        # 0x16fa99e6e
   14001c387:	(bad)  
   14001c388:	fsubr  QWORD PTR [rsi-0x4b2000cb]
   14001c38e:	cmp    bh,bh
   14001c390:	loop   0x14001c34b
   14001c392:	cmp    edi,edi
   14001c394:	in     eax,0xbd
   14001c396:	notrack jmp rdi
   14001c399:	(bad)  
   14001c39d:	retf   0xff46
   14001c3a0:	in     eax,dx
   14001c3a1:	ror    BYTE PTR [rax-0x1],1
   14001c3a4:	out    dx,eax
   14001c3a5:	(bad)  
   14001c3a6:	rex.WRX push rcx
   14001c3a9:	ficom  DWORD PTR [rbx-0x1]
   14001c3ac:	repz fistp WORD PTR [rax-0x1]
   14001c3b0:	mul    ah
   14001c3b2:	pop    rbp
   14001c3b3:	push   rdi
   14001c3b5:	jmp    0x12bfbc31a
   14001c3ba:	movsxd edi,edi
   14001c3bc:	cli    
   14001c3bd:	out    dx,al
   14001c3be:	push   0x6cf0fcff
   14001c3c3:	(bad)  
   14001c3c4:	cld    
   14001c3c5:	rep outs dx,DWORD PTR ds:[rsi]
   14001c3c7:	(bad)  
   14001c3c8:	std    
   14001c3c9:	hlt    
   14001c3ca:	je     0x14001c3cb
   14001c3cc:	std    
   14001c3cd:	cmc    
   14001c3ce:	jbe    0x14001c3cf
   14001c3d0:	(bad)  
   14001c3d1:	cmc    
   14001c3d2:	jns    0x14001c3d3
   14001c3d4:	(bad)  
   14001c3d5:	idiv   DWORD PTR [rsi-0x1]
   14001c3d8:	(bad)  
   14001c3d9:	test   DWORD PTR [rcx-0x7c070001],0x85f8ffff
   14001c3e3:	(bad)  
   14001c3e4:	(bad)  
   14001c3e5:	clc    
   14001c3e6:	mov    edi,edi
   14001c3e8:	push   rdi
   14001c3ea:	mov    edi,?
   14001c3ec:	(bad)  
   14001c3ed:	stc    
   14001c3ee:	(bad)  
   14001c3ef:	(bad)  
   14001c3f0:	(bad)  
   14001c3f1:	stc    
   14001c3f2:	(bad)  
   14001c3f3:	(bad)  
   14001c3f4:	std    
   14001c3f5:	test   BYTE PTR [rax+0x55b4dbfb],0xe9
   14001c3fc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001c3fd:	imul   ebx,DWORD PTR [rcx+rbp*2],0x0
	...
   14001c46d:	add    BYTE PTR [rax],al
   14001c46f:	add    BYTE PTR [rbp-0x38a5e59a],bl
   14001c475:	movabs al,ds:0xf6fefd9bf1fce154
   14001c47e:	pushf  
   14001c47f:	(bad)  
   14001c480:	(bad)  
   14001c481:	not    BYTE PTR [rsi-0x6b0a0101]
   14001c487:	(bad)  
   14001c488:	(bad)  
   14001c489:	hlt    
   14001c48a:	xchg   ecx,eax
   14001c48b:	(bad)  
   14001c48c:	(bad)  
   14001c48d:	hlt    
   14001c48e:	mov    ?,edi
   14001c490:	(bad)  
   14001c491:	hlt    
   14001c492:	mov    edi,?
   14001c494:	(bad)  
   14001c495:	hlt    
   14001c496:	mov    bh,bh
   14001c498:	(bad)  
   14001c499:	repnz test bh,bh
   14001c49c:	(bad)  
   14001c49d:	icebp  
   14001c49e:	(bad)  
   14001c49f:	(bad)  
   14001c4a0:	std    
   14001c4a1:	lock jg 0x14001c4a3
   14001c4a4:	std    
   14001c4a5:	out    dx,eax
   14001c4a6:	jge    0x14001c4a7
   14001c4a8:	std    
   14001c4a9:	in     al,dx
   14001c4aa:	jns    0x14001c4ab
   14001c4ac:	std    
   14001c4ad:	jmp    0x126fdc425
   14001c4b2:	jno    0x14001c4b3
   14001c4b4:	cli    
   14001c4b5:	loope  0x14001c521
   14001c4b7:	push   rdi
   14001c4b9:	fsub   QWORD PTR [rsi-0x1]
   14001c4bc:	neg    eax
   14001c4be:	(bad)  
   14001c4bf:	push   rsp
   14001c4c1:	rcr    DWORD PTR [rsi-0x1],cl
   14001c4c4:	icebp  
   14001c4c5:	int    0x58
   14001c4c7:	(bad)  
   14001c4c8:	out    dx,eax
   14001c4c9:	(bad)
   14001c4cc:	in     eax,dx
   14001c4cd:	ret    0xff4e
   14001c4d0:	(bad)  
   14001c4d1:	mov    edx,0xb4e7ff4b
   14001c4d6:	rex.RXB jmp r12
   14001c4d9:	scas   eax,DWORD PTR es:[rdi]
   14001c4da:	rex jmp rax
   14001c4dd:	stos   BYTE PTR es:[rdi],al
   14001c4de:	cmp    bh,bh
   14001c4e0:	fsub   QWORD PTR [rsi+rsi*1+0x2f96d3ff]
   14001c4e7:	inc    eax
   14001c4e9:	and    DWORD PTR [rdx],0x16598cfc
   14001c4ef:	retf   0x5a8c
   14001c4f2:	(bad)  
   14001c4f3:	or     al,BYTE PTR [rax]
	...
   14001c525:	add    BYTE PTR [rax],al
   14001c527:	add    BYTE PTR [rsi-0x52e90101],ch
   14001c52d:	(bad)  
   14001c52e:	(bad)  
   14001c52f:	sub    eax,0x32feffac
   14001c534:	stos   DWORD PTR es:[rdi],eax
   14001c535:	(bad)  
   14001c536:	(bad)  
   14001c537:	ss test eax,0xa83bfeff
   14001c53d:	(bad)  
   14001c53e:	(bad)  
   14001c53f:	(bad)  
   14001c540:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001c541:	(bad)  
   14001c542:	inc    BYTE PTR [rdx+0x59]
   14001c545:	out    dx,al
   14001c546:	push   QWORD PTR [rbp-0x1a0017b0]
   14001c54c:	rex.RX (bad) 
   14001c54f:	in     eax,0x3a
   14001c551:	(bad)  
   14001c552:	jmp    rbp
   14001c554:	xor    edx,ecx
   14001c556:	jmp    rsp
   14001c558:	sub    DWORD PTR [rdi-0x49dc1b01],edi
   14001c55e:	jmp    rsp
   14001c560:	es mov bl,0xff
   14001c563:	in     al,0x2d
   14001c565:	mov    dh,0xff
   14001c567:	in     al,0x51
   14001c569:	mov    ebx,0x6537def6
   14001c56e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001c56f:	(bad)  
   14001c570:	add    BYTE PTR [rax],al
   14001c572:	push   rbp
   14001c573:	adc    al,0x0
   14001c575:	add    BYTE PTR [rbp+0x5],dl
   14001c578:	(bad)  
   14001c579:	cld    
   14001c57a:	mov    cl,0x3
   14001c57c:	lods   al,BYTE PTR ds:[rsi]
   14001c57d:	jno    0x14001c59d
   14001c57f:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001c580:	xlat   BYTE PTR ds:[rbx]
   14001c581:	movabs al,ds:0xb1dfff35acdcfb32
   14001c58a:	cmp    bh,bh
   14001c58c:	loop   0x14001c546
   14001c58e:	cmp    edi,edi
   14001c590:	in     al,0xbb
   14001c592:	notrack jmp rdi
   14001c595:	ret    0xff42
   14001c598:	jmp    0x12c010b66
   14001c59d:	(bad)  
   14001c59e:	rex.RXB (bad) 
   14001c5a0:	out    dx,al
   14001c5a1:	ror    BYTE PTR [rsi-0x1],cl
   14001c5a4:	lock fcom DWORD PTR [rcx-0x1]
   14001c5a8:	repz ficomp WORD PTR [rax-0x1]
   14001c5ac:	hlt    
   14001c5ad:	loop   0x14001c60b
   14001c5af:	push   rdi
   14001c5b1:	out    0x60,eax
   14001c5b3:	(bad)  
   14001c5b4:	stc    
   14001c5b5:	jmp    0x14001c619
   14001c5b7:	(bad)  
   14001c5b8:	cli    
   14001c5b9:	out    dx,al
   14001c5ba:	addr32 (bad) 
   14001c5bc:	sti    
   14001c5bd:	out    dx,eax
   14001c5be:	imul   edi,edi,0xfffffffc
   14001c5c1:	repnz outs dx,DWORD PTR ds:[rsi]
   14001c5c3:	(bad)  
   14001c5c4:	std    
   14001c5c5:	hlt    
   14001c5c6:	jb     0x14001c5c7
   14001c5c8:	std    
   14001c5c9:	div    BYTE PTR [rbp-0x1]
   14001c5cc:	(bad)  
   14001c5cd:	idiv   BYTE PTR [rcx-0x1]
   14001c5d0:	(bad)  
   14001c5d1:	idiv   DWORD PTR [rdi+rdi*8-0x2]
   14001c5d5:	cli    
   14001c5d6:	jg     0x14001c5d7
   14001c5d8:	(bad)  
   14001c5d9:	stc    
   14001c5da:	(bad)  
   14001c5db:	(bad)  
   14001c5dc:	(bad)  
   14001c5dd:	stc    
   14001c5de:	test   bh,bh
   14001c5e0:	(bad)  
   14001c5e1:	stc    
   14001c5e2:	mov    bh,bh
   14001c5e4:	(bad)  
   14001c5e5:	cli    
   14001c5e6:	mov    bh,bh
   14001c5e8:	(bad)  
   14001c5e9:	clc    
   14001c5ea:	mov    ?,edi
   14001c5ec:	(bad)  
   14001c5ed:	cli    
   14001c5ee:	(bad)  
   14001c5ef:	(bad)  
   14001c5f0:	(bad)  
   14001c5f1:	clc    
   14001c5f2:	xchg   ch,bh
   14001c5f4:	fidiv  DWORD PTR [rcx+0x6ca5e750]
   14001c5fa:	sbb    al,0x4c
	...
   14001c674:	popf   
   14001c675:	data16 sbb al,BYTE PTR [rbx-0x41]
   14001c679:	xchg   esi,eax
   14001c67a:	rex.WB (bad) 
   14001c67d:	icebp  
   14001c67e:	cdq    
   14001c67f:	cld    
   14001c680:	(bad)  
   14001c681:	neg    BYTE PTR [rdi+rdi*8-0x680902]
   14001c688:	(bad)  
   14001c689:	cmc    
   14001c68a:	xchg   ebx,eax
   14001c68b:	(bad)  
   14001c68c:	(bad)  
   14001c68d:	hlt    
   14001c68e:	xchg   ecx,eax
   14001c68f:	(bad)  
   14001c690:	(bad)  
   14001c691:	cmc    
   14001c692:	mov    ?,edi
   14001c694:	(bad)  
   14001c695:	hlt    
   14001c696:	mov    edi,?
   14001c698:	(bad)  
   14001c699:	hlt    
   14001c69a:	mov    bh,bh
   14001c69c:	std    
   14001c69d:	repnz test edi,edi
   14001c6a0:	(bad)  
   14001c6a1:	icebp  
   14001c6a2:	(bad)  
   14001c6a3:	(bad)  
   14001c6a4:	std    
   14001c6a5:	out    dx,eax
   14001c6a6:	jg     0x14001c6a7
   14001c6a8:	std    
   14001c6a9:	in     al,dx
   14001c6aa:	jl     0x14001c6ab
   14001c6ac:	std    
   14001c6ad:	jmp    0x14001c725
   14001c6af:	(bad)  
   14001c6b0:	cld    
   14001c6b1:	call   0x122fdc62a
   14001c6b6:	outs   dx,BYTE PTR ds:[rsi]
   14001c6b7:	(bad)  
   14001c6b8:	stc    
   14001c6b9:	(bad)  [rdx-0x1]
   14001c6bc:	cmc    
   14001c6bd:	fldenv [rbp-0x1]
   14001c6c0:	cmc    
   14001c6c1:	(bad)  
   14001c6c2:	(bad)  
   14001c6c3:	push   rdx
   14001c6c5:	iret   
   14001c6c6:	pop    rbx
   14001c6c7:	(bad)  
   14001c6c8:	out    dx,eax
   14001c6c9:	leave  
   14001c6ca:	pop    rcx
   14001c6cb:	(bad)  
   14001c6cc:	in     al,dx
   14001c6cd:	ret    
   14001c6ce:	push   rbx
   14001c6cf:	(bad)  
   14001c6d0:	(bad)  
   14001c6d1:	mov    ebp,0xb8e7ff4f
   14001c6d6:	rex.WX jmp rsp
   14001c6d9:	mov    bl,0x45
   14001c6db:	jmp    rax
   14001c6dd:	lods   al,BYTE PTR ds:[rsi]
   14001c6de:	rex (bad) 
   14001c6e0:	frstor [rbp-0x612700c4]
   14001c6e6:	ss dec esp
   14001c6e9:	lea    ebp,[rdi+rdi*8]
   14001c6ec:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001c6ed:	ins    BYTE PTR es:[rdi],dx
   14001c6ee:	and    ch,dh
   14001c6f0:	lea    ebx,[rdx+0x16]
   14001c6f3:	data16 add BYTE PTR [rax],al
	...
   14001c726:	add    BYTE PTR [rax],al
   14001c728:	lods   eax,DWORD PTR ds:[rsi]
   14001c729:	(bad)  
   14001c72a:	dec    BYTE PTR [rcx]
   14001c72c:	lods   al,BYTE PTR ds:[rsi]
   14001c72d:	(bad)  
   14001c72e:	(bad)  
   14001c72f:	(bad)  
   14001c730:	stos   DWORD PTR es:[rdi],eax
   14001c731:	(bad)  
   14001c732:	(bad)  
   14001c733:	xor    al,0xa9
   14001c735:	(bad)  
   14001c736:	(bad)  
   14001c737:	cmp    DWORD PTR [rax-0x58c20101],ebp
   14001c73d:	(bad)  
   14001c73e:	inc    BYTE PTR [rdx-0x5a]
   14001c741:	(bad)  
   14001c742:	inc    BYTE PTR [rsi+0x70]
   14001c745:	idiv   esi
   14001c747:	jg     0x14001c7a0
   14001c749:	jmp    0x14001c74a
   14001c74b:	in     eax,0x4a
   14001c74d:	in     al,0xff
   14001c74f:	in     eax,0x3e
   14001c751:	fdivr  st,st(7)
   14001c753:	in     eax,0x34
   14001c755:	(bad)  
   14001c756:	jmp    rsp
   14001c758:	sub    al,cl
   14001c75a:	jmp    rsp
   14001c75c:	es mov ecx,0xb526e4ff
   14001c762:	jmp    rbp
   14001c764:	sub    DWORD PTR [rbp-0x46c11901],esi
   14001c76a:	sti    
   14001c76b:	call   0xceea78cc
   14001c770:	add    al,0x7
   14001c772:	pop    rcx
   14001c773:	sbb    eax,0xa632828
   14001c778:	scas   eax,DWORD PTR es:[rdi]
   14001c779:	jbe    0x14001c7a1
   14001c77b:	xor    al,0xbe
   14001c77d:	mov    BYTE PTR [rcx],dh
   14001c77f:	(bad)  
   14001c781:	stos   BYTE PTR es:[rdi],al
   14001c782:	xor    edi,edi
   14001c784:	fbstp  TBYTE PTR [rax-0x491d00c7]
   14001c78a:	cmp    al,0xff
   14001c78c:	jrcxz  0x14001c749
   14001c78e:	notrack jmp rdi
   14001c791:	rol    DWORD PTR [rbx-0x1],0xe8
   14001c795:	mov    DWORD PTR [rbp-0x1],0xff47cdea
   14001c79c:	in     al,dx
   14001c79d:	ror    DWORD PTR [rdi+rdi*8-0x10],1
   14001c7a1:	(bad)  
   14001c7a2:	push   rax
   14001c7a3:	push   rdx
   14001c7a5:	fst    QWORD PTR [rsi-0x1]
   14001c7a8:	hlt    
   14001c7a9:	loop   0x14001c805
   14001c7ab:	push   rsi
   14001c7ad:	out    0x5e,al
   14001c7af:	(bad)  
   14001c7b0:	clc    
   14001c7b1:	(bad)  
   14001c7b2:	(bad)  
   14001c7b3:	(bad)  
   14001c7b4:	stc    
   14001c7b5:	in     eax,dx
   14001c7b6:	fs (bad) 
   14001c7b8:	cli    
   14001c7b9:	out    dx,eax
   14001c7ba:	push   0xffffffffffffffff
   14001c7bc:	cld    
   14001c7bd:	icebp  
   14001c7be:	ins    DWORD PTR es:[rdi],dx
   14001c7bf:	(bad)  
   14001c7c0:	std    
   14001c7c1:	hlt    
   14001c7c2:	jo     0x14001c7c3
   14001c7c4:	std    
   14001c7c5:	div    BYTE PTR [rdi+rdi*8-0x3]
   14001c7c9:	idiv   DWORD PTR [rax-0x1]
   14001c7cc:	(bad)  
   14001c7cd:	idiv   DWORD PTR [rbx-0x1]
   14001c7d0:	(bad)  
   14001c7d1:	stc    
   14001c7d2:	cmp    bh,0xfe
   14001c7d5:	stc    
   14001c7d6:	(bad)  
   14001c7d7:	(bad)  
   14001c7d8:	(bad)  
   14001c7d9:	stc    
   14001c7da:	test   bh,bh
   14001c7dc:	(bad)  
   14001c7dd:	stc    
   14001c7de:	mov    bh,bh
   14001c7e0:	(bad)  
   14001c7e1:	stc    
   14001c7e2:	mov    edi,edi
   14001c7e4:	(bad)  
   14001c7e5:	sti    
   14001c7e6:	mov    edi,?
   14001c7e8:	(bad)  
   14001c7e9:	sti    
   14001c7ea:	(bad)  
   14001c7eb:	(bad)  
   14001c7ec:	(bad)  
   14001c7ed:	clc    
   14001c7ee:	mov    edi,edi
   14001c7f0:	jrcxz  0x14001c7af
   14001c7f2:	push   rbp
   14001c7f3:	jmp    0x14001c79a
   14001c7f5:	ins    BYTE PTR es:[rdi],dx
   14001c7f6:	sbb    al,0x67
	...
   14001c878:	popf   
   14001c879:	data16 sbb dh,BYTE PTR [rdi+rdi*4]
   14001c87d:	xchg   ebp,eax
   14001c87e:	rex.WB fdiv st(5),st
   14001c881:	repz pushf 
   14001c883:	std    
   14001c884:	(bad)  
   14001c885:	neg    BYTE PTR [rdi+rdi*8-0x690902]
   14001c88c:	(bad)  
   14001c88d:	cmc    
   14001c88e:	xchg   ebx,eax
   14001c88f:	(bad)  
   14001c890:	(bad)  
   14001c891:	hlt    
   14001c892:	xchg   edx,eax
   14001c893:	(bad)  
   14001c894:	(bad)  
   14001c895:	hlt    
   14001c896:	mov    ?,edi
   14001c898:	(bad)  
   14001c899:	repz mov edi,?
   14001c89c:	std    
   14001c89d:	repnz mov edi,edi
   14001c8a0:	std    
   14001c8a1:	icebp  
   14001c8a2:	xchg   edi,edi
   14001c8a4:	std    
   14001c8a5:	lock test bh,bh
   14001c8a8:	std    
   14001c8a9:	out    dx,eax
   14001c8aa:	jg     0x14001c8ab
   14001c8ac:	cld    
   14001c8ad:	jmp    0x14001c92a
   14001c8af:	(bad)  
   14001c8b0:	cld    
   14001c8b1:	(bad)  
   14001c8b2:	jbe    0x14001c8b3
   14001c8b4:	sti    
   14001c8b5:	out    0x73,al
   14001c8b7:	(bad)  
   14001c8b8:	stc    
   14001c8b9:	loope  0x14001c928
   14001c8bb:	(bad)  
   14001c8bc:	clc    
   14001c8bd:	fsubr  QWORD PTR [rcx-0x1]
   14001c8c0:	repz (bad) 
   14001c8c2:	gs push rbx
   14001c8c5:	rcr    BYTE PTR [rdi-0x1],cl
   14001c8c8:	out    dx,eax
   14001c8c9:	retf   
   14001c8ca:	pop    rbx
   14001c8cb:	(bad)  
   14001c8cc:	in     eax,dx
   14001c8cd:	(bad)
   14001c8d0:	jmp    0x129011b96
   14001c8d5:	mov    esp,0xb5e5ff4d
   14001c8da:	rex.WXB jmp r9
   14001c8dd:	scas   eax,DWORD PTR es:[rdi]
   14001c8de:	rex.R (bad) 
   14001c8e0:	(bad)  [rax-0x5d2400c1]
   14001c8e6:	cmp    al,0xff
   14001c8e8:	rcr    DWORD PTR [rax-0x7f4500cb],1
   14001c8ee:	sub    bl,bh
   14001c8f0:	mov    WORD PTR [rcx+0x16],ds
   14001c8f3:	(bad)  
   14001c8f4:	lea    ebx,[rdx+0x16]
   14001c8f7:	or     BYTE PTR [rax],al
	...
   14001c929:	add    BYTE PTR [rax],al
   14001c92b:	add    BYTE PTR [rbx-0x55d90101],ch
   14001c931:	(bad)  
   14001c932:	(bad)  
   14001c933:	(bad)  
   14001c934:	test   al,0xff
   14001c936:	(bad)  
   14001c937:	cmp    esp,DWORD PTR [rdi-0x59bf0101]
   14001c93d:	(bad)  
   14001c93e:	inc    BYTE PTR [rbx-0x5c]
   14001c941:	(bad)  
   14001c942:	dec    BYTE PTR [rcx-0x62]
   14001c945:	(bad)  
   14001c946:	dec    BYTE PTR [rsi+0x57]
   14001c949:	in     al,dx
   14001c94a:	(bad)  
   14001c94b:	fcom   QWORD PTR [rax-0x19]
   14001c94e:	jmp    rbp
   14001c950:	rex.XB fdiv st(7),st
   14001c953:	in     eax,0x39
   14001c955:	sar    bh,cl
   14001c957:	in     eax,0x2f
   14001c959:	(bad)  
   14001c95a:	jmp    rbp
   14001c95c:	(bad)  
   14001c95d:	mov    esp,0xb626e5ff
   14001c962:	jmp    rsi
   14001c964:	(bad)  
   14001c965:	mov    ch,0xff
   14001c967:	out    0x30,eax
   14001c969:	mov    ecx,0xbd58e9ff
   14001c96e:	cmc    
   14001c96f:	(bad)  
   14001c970:	and    dh,BYTE PTR [rsi]
   14001c972:	jnp    0x14001c99c
   14001c974:	cmp    edi,DWORD PTR [rdx]
   14001c976:	ins    BYTE PTR es:[rdi],dx
   14001c977:	adc    DWORD PTR [rbx-0x2a6ddf8e],ebp
   14001c97d:	lahf   
   14001c97e:	xor    al,0xf6
   14001c980:	fild   QWORD PTR [rdi-0x4a1d00c9]
   14001c986:	cmp    al,0xff
   14001c988:	jrcxz  0x14001c944
   14001c98a:	notrack jmp rsi
   14001c98d:	mov    edi,0xc5e8ff40
   14001c992:	rex.R (bad) 
   14001c994:	(bad)  
   14001c995:	retf   
   14001c996:	rex.W (bad) 
   14001c998:	in     al,dx
   14001c999:	iret   
   14001c99a:	rex.WRB (bad) 
   14001c99c:	out    dx,eax
   14001c99d:	(bad)  
   14001c99e:	rex.WRXB push r9
   14001c9a1:	fist   DWORD PTR [rbp-0x1]
   14001c9a4:	hlt    
   14001c9a5:	loopne 0x14001ca01
   14001c9a7:	push   rsp
   14001c9a9:	in     eax,0x5d
   14001c9ab:	(bad)  
   14001c9ac:	clc    
   14001c9ad:	(bad)  
   14001c9ae:	(bad)  
   14001c9af:	(bad)  
   14001c9b0:	stc    
   14001c9b1:	jmp    0x14001ca17
   14001c9b3:	(bad)  
   14001c9b4:	cli    
   14001c9b5:	out    dx,eax
   14001c9b6:	addr32 (bad) 
   14001c9b8:	sti    
   14001c9b9:	icebp  
   14001c9ba:	imul   edi,edi,0xfffffffc
   14001c9bd:	hlt    
   14001c9be:	outs   dx,DWORD PTR ds:[rsi]
   14001c9bf:	(bad)  
   14001c9c0:	std    
   14001c9c1:	div    BYTE PTR [rdi+rdi*8-0x3]
   14001c9c5:	div    BYTE PTR [rdi-0x1]
   14001c9c8:	(bad)  
   14001c9c9:	idiv   BYTE PTR [rdx-0x1]
   14001c9cc:	(bad)  
   14001c9cd:	clc    
   14001c9ce:	jge    0x14001c9cf
   14001c9d0:	(bad)  
   14001c9d1:	cli    
   14001c9d2:	cmp    edi,0xff83f9ff
   14001c9d8:	(bad)  
   14001c9d9:	stc    
   14001c9da:	xchg   bh,bh
   14001c9dc:	(bad)  
   14001c9dd:	stc    
   14001c9de:	mov    bh,bh
   14001c9e0:	(bad)  
   14001c9e1:	cli    
   14001c9e2:	mov    edi,?
   14001c9e4:	(bad)  
   14001c9e5:	sti    
   14001c9e6:	(bad)  
   14001c9e7:	(bad)  
   14001c9e8:	(bad)  
   14001c9e9:	cli    
   14001c9ea:	mov    edi,edi
   14001c9ec:	in     al,dx
   14001c9ed:	retf   0xed57
   14001c9f0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001c9f1:	ins    DWORD PTR es:[rdi],dx
   14001c9f2:	sbb    al,0x86
	...
   14001ca7c:	popf   
   14001ca7d:	data16 sbb cl,BYTE PTR [rbx-0x26]
   14001ca81:	mov    ebx,0xf5feee6d
   14001ca86:	sahf   
   14001ca87:	(bad)  
   14001ca88:	(bad)  
   14001ca89:	neg    BYTE PTR [rbx-0x6a090101]
   14001ca8f:	(bad)  
   14001ca90:	(bad)  
   14001ca91:	cmc    
   14001ca92:	xchg   ebx,eax
   14001ca93:	(bad)  
   14001ca94:	(bad)  
   14001ca95:	cmc    
   14001ca96:	xchg   edx,eax
   14001ca97:	(bad)  
   14001ca98:	(bad)  
   14001ca99:	hlt    
   14001ca9a:	mov    ?,edi
   14001ca9c:	(bad)  
   14001ca9d:	repz (bad) 
   14001ca9f:	(bad)  
   14001caa0:	std    
   14001caa1:	repnz mov bh,bh
   14001caa4:	std    
   14001caa5:	icebp  
   14001caa6:	test   edi,edi
   14001caa8:	std    
   14001caa9:	lock cmp edi,0xfffffffd
   14001caad:	in     eax,dx
   14001caae:	jle    0x14001caaf
   14001cab0:	cld    
   14001cab1:	jmp    0x14001cb2c
   14001cab3:	(bad)  
   14001cab4:	sti    
   14001cab5:	call   0x122fbca30
   14001caba:	jb     0x14001cabb
   14001cabc:	neg    ebp
   14001cabe:	ins    DWORD PTR es:[rdi],dx
   14001cabf:	push   rbp
   14001cac1:	fldcw  WORD PTR [rax-0x1]
   14001cac4:	repnz (bad) 
   14001cac6:	(bad)  
   14001cac7:	(bad)  
   14001cac8:	out    dx,al
   14001cac9:	int    0x5f
   14001cacb:	(bad)  
   14001cacc:	jmp    0x14001ca96
   14001cace:	pop    rdx
   14001cacf:	(bad)  
   14001cad0:	jmp    0x128012197
   14001cad5:	mov    ebp,0xb6e3ff51
   14001cada:	rex.WRB jmp r9
   14001cadd:	mov    cl,0x49
   14001cadf:	(bad)  
   14001cae0:	(bad)  [rbp+rax*2+0x42a7daff]
   14001cae7:	call   rbp
   14001cae9:	movabs al,ds:0x6ba1ff328dcaff3d
   14001caf2:	and    al,0xea
   14001caf4:	lea    ebx,[rdx+0x16]
   14001caf7:	push   rcx
	...
   14001cb2c:	stos   BYTE PTR es:[rdi],al
   14001cb2d:	(bad)  
   14001cb2e:	(bad)  
   14001cb2f:	adc    ch,BYTE PTR [rax-0x58c60101]
   14001cb35:	(bad)  
   14001cb36:	(bad)  
   14001cb37:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001cb39:	(bad)  
   14001cb3a:	inc    BYTE PTR [rdx-0x5b]
   14001cb3d:	(bad)  
   14001cb3e:	inc    BYTE PTR [rdi-0x5d]
   14001cb41:	(bad)  
   14001cb42:	dec    BYTE PTR [rbx-0x5f]
   14001cb45:	(bad)  
   14001cb46:	dec    BYTE PTR [rsi+0x5e]
   14001cb49:	repz push QWORD PTR [rsi-0x1a0014ac]
   14001cb50:	rex.W loope 0x14001cb52
   14001cb53:	in     eax,0x3c
   14001cb55:	xlat   BYTE PTR ds:[rbx]
   14001cb56:	jmp    rbp
   14001cb58:	xor    ebx,ecx
   14001cb5a:	jmp    rsi
   14001cb5c:	sub    eax,eax
   14001cb5e:	jmp    rsi
   14001cb60:	es mov ecx,0xb526e6ff
   14001cb66:	(bad)  
   14001cb67:	call   0x12c018198
   14001cb6c:	rex.XB mov r11d,0xae5bedfa
   14001cb72:	loop   0x14001cbee
   14001cb74:	outs   dx,BYTE PTR ds:[rsi]
   14001cb75:	push   rdx
   14001cb76:	xor    DWORD PTR [rbx-0x2227d483],r14d
   14001cb7d:	lods   eax,DWORD PTR ds:[rsi]
   14001cb7e:	xor    al,0xff
   14001cb80:	loopne 0x14001cb35
   14001cb82:	cmp    al,0xff
   14001cb84:	jrcxz  0x14001cb3f
   14001cb86:	(bad)  
   14001cb87:	jmp    rsi
   14001cb89:	mov    ebp,0xc4e8ff40
   14001cb8e:	rex.RB (bad) 
   14001cb90:	jmp    0x12d01145e
   14001cb95:	int    0x4a
   14001cb97:	(bad)  
   14001cb98:	out    dx,al
   14001cb99:	(bad)  
   14001cb9a:	rex.WRXB push r9
   14001cb9d:	fst    DWORD PTR [rbx-0x1]
   14001cba0:	repnz fistp WORD PTR [rcx-0x1]
   14001cba4:	cmc    
   14001cba5:	jrcxz  0x14001cc02
   14001cba7:	push   rsi
   14001cba9:	call   0x12bfacb0f
   14001cbae:	(bad)  
   14001cbaf:	(bad)  
   14001cbb0:	stc    
   14001cbb1:	out    dx,eax
   14001cbb2:	addr32 (bad) 
   14001cbb4:	cli    
   14001cbb5:	icebp  
   14001cbb6:	ins    BYTE PTR es:[rdi],dx
   14001cbb7:	(bad)  
   14001cbb8:	cld    
   14001cbb9:	rep outs dx,DWORD PTR ds:[rsi]
   14001cbbb:	(bad)  
   14001cbbc:	std    
   14001cbbd:	cmc    
   14001cbbe:	jae    0x14001cbbf
   14001cbc0:	std    
   14001cbc1:	div    BYTE PTR [rsi-0x1]
   14001cbc4:	std    
   14001cbc5:	clc    
   14001cbc6:	jp     0x14001cbc7
   14001cbc8:	(bad)  
   14001cbc9:	stc    
   14001cbca:	jl     0x14001cbcb
   14001cbcc:	(bad)  
   14001cbcd:	cld    
   14001cbce:	cmp    bh,0xff
   14001cbd1:	cld    
   14001cbd2:	(bad)  
   14001cbd3:	(bad)  
   14001cbd4:	(bad)  
   14001cbd5:	cld    
   14001cbd6:	test   edi,edi
   14001cbd8:	(bad)  
   14001cbd9:	cli    
   14001cbda:	xchg   edi,edi
   14001cbdc:	(bad)  
   14001cbdd:	cli    
   14001cbde:	mov    bh,bh
   14001cbe0:	(bad)  
   14001cbe1:	sti    
   14001cbe2:	mov    ?,edi
   14001cbe4:	(bad)  
   14001cbe5:	sti    
   14001cbe6:	mov    edi,?
   14001cbe8:	neg    esi
   14001cbea:	gs hlt 
   14001cbec:	test   eax,0xa6a71e71
   14001cbf1:	ins    DWORD PTR es:[rdi],dx
   14001cbf2:	sbb    al,0x7
	...
   14001cc80:	popf   
   14001cc81:	data16 sbb ch,BYTE PTR [rbx-0x19]
   14001cc85:	iret   
   14001cc86:	jle    0x14001cc7b
   14001cc88:	(bad)  
   14001cc89:	mul    BYTE PTR [rcx-0x64090101]
   14001cc8f:	(bad)  
   14001cc90:	(bad)  
   14001cc91:	not    BYTE PTR [rdi-0x6a0a0101]
   14001cc97:	(bad)  
   14001cc98:	(bad)  
   14001cc99:	cmc    
   14001cc9a:	xchg   ebx,eax
   14001cc9b:	(bad)  
   14001cc9c:	(bad)  
   14001cc9d:	hlt    
   14001cc9e:	xchg   ecx,eax
   14001cc9f:	(bad)  
   14001cca0:	(bad)  
   14001cca1:	repz (bad) 
   14001cca3:	(bad)  
   14001cca4:	std    
   14001cca5:	repz (bad) 
   14001cca7:	(bad)  
   14001cca8:	std    
   14001cca9:	icebp  
   14001ccaa:	mov    bh,bh
   14001ccac:	cld    
   14001ccad:	out    dx,eax
   14001ccae:	test   edi,edi
   14001ccb0:	cld    
   14001ccb1:	in     eax,dx
   14001ccb2:	cmp    edi,0xff7de9fb
   14001ccb8:	stc    
   14001ccb9:	in     al,0x78
   14001ccbb:	push   rdi
   14001ccbd:	fbstp  TBYTE PTR [rdi+rdi*8-0xa]
   14001ccc1:	fdiv   QWORD PTR [rax-0x1]
   14001ccc4:	repz (bad) 
   14001ccc6:	push   0xffffffffffffffff
   14001ccc8:	lock shl DWORD PTR [rsi-0x1],1
   14001cccc:	in     eax,dx
   14001cccd:	int3   
   14001ccce:	movsxd edi,edi
   14001ccd0:	(bad)  
   14001ccd1:	(bad)
   14001ccd4:	out    0xc1,eax
   14001ccd6:	pop    rbx
   14001ccd7:	jmp    rsp
   14001ccd9:	mov    esp,0xb5e3ff55
   14001ccde:	rex.WRXB jmp r8
   14001cce1:	mov    al,0x4d
   14001cce3:	(bad)  
   14001cce4:	fsubr  QWORD PTR [rbp-0x582500b6]
   14001ccea:	rex.RB call r12
   14001cced:	sahf   
   14001ccee:	push   QWORD PTR ds:[rdi-0x7107d082]
   14001ccf5:	pop    rbx
   14001ccf6:	(bad)  
   14001ccf7:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
	...
   14001cd2c:	test   eax,0xa702feff
   14001cd31:	(bad)  
   14001cd32:	(bad)  
   14001cd33:	cmps   BYTE PTR ss:[rsi],BYTE PTR es:[rdi]
   14001cd35:	(bad)  
   14001cd36:	inc    BYTE PTR [rcx-0x5b]
   14001cd39:	(bad)  
   14001cd3a:	inc    BYTE PTR [rbp-0x5d]
   14001cd3d:	(bad)  
   14001cd3e:	dec    BYTE PTR [rcx-0x5e]
   14001cd41:	(bad)  
   14001cd42:	dec    BYTE PTR [rbp-0x5f]
   14001cd45:	(bad)  
   14001cd46:	(bad)  
   14001cd47:	push   rcx
   14001cd48:	jne    0x14001cd44
   14001cd4a:	(bad)  
   14001cd4b:	jge    0x14001cda7
   14001cd4d:	out    dx,eax
   14001cd4e:	jmp    rbp
   14001cd50:	rex.WRX in eax,0xff
   14001cd53:	in     eax,0x41
   14001cd55:	(bad)  
   14001cd57:	in     eax,0x37
   14001cd59:	sar    edi,1
   14001cd5b:	out    0x2f,al
   14001cd5d:	(bad)  
   14001cd5e:	jmp    rsi
   14001cd60:	(bad)  
   14001cd61:	mov    ebp,0xb727e9ff
   14001cd66:	(bad)  
   14001cd67:	(bad)  
   14001cd68:	sub    DWORD PTR [rsi-0x45cd1301],esi
   14001cd6e:	(bad)  
   14001cd6f:	out    dx,eax
   14001cd70:	pop    rsp
   14001cd71:	mov    edi,0x6a8bd8f4
   14001cd76:	cmp    edi,DWORD PTR [rbx-0x3b]
   14001cd79:	xchg   ebp,eax
   14001cd7a:	cmp    esi,ebp
   14001cd7c:	fbstp  TBYTE PTR [rcx-0x461c00c6]
   14001cd82:	rex jmp rbp
   14001cd85:	mov    ebp,0xc1e8ff41
   14001cd8a:	rex.XB (bad) 
   14001cd8c:	jmp    0x14001cd56
   14001cd8e:	rex.RXB (bad) 
   14001cd90:	in     al,dx
   14001cd91:	int    0x4b
   14001cd93:	(bad)  
   14001cd94:	out    dx,al
   14001cd95:	ror    DWORD PTR [rdi-0x1],cl
   14001cd98:	icebp  
   14001cd99:	fcom   DWORD PTR [rdi+rdi*8-0xe]
   14001cd9d:	fstp   QWORD PTR [rax-0x1]
   14001cda0:	hlt    
   14001cda1:	loop   0x14001cdfe
   14001cda3:	push   rbp
   14001cda5:	out    0x61,eax
   14001cda7:	push   rdi
   14001cda9:	(bad)  
   14001cdaa:	(bad)  
   14001cdab:	(bad)  
   14001cdac:	stc    
   14001cdad:	out    dx,al
   14001cdae:	gs (bad) 
   14001cdb0:	cli    
   14001cdb1:	lock push 0xffffffffffffffff
   14001cdb4:	sti    
   14001cdb5:	icebp  
   14001cdb6:	outs   dx,BYTE PTR ds:[rsi]
   14001cdb7:	(bad)  
   14001cdb8:	cld    
   14001cdb9:	hlt    
   14001cdba:	jb     0x14001cdbb
   14001cdbc:	std    
   14001cdbd:	clc    
   14001cdbe:	je     0x14001cdbf
   14001cdc0:	std    
   14001cdc1:	clc    
   14001cdc2:	ja     0x14001cdc3
   14001cdc4:	(bad)  
   14001cdc5:	clc    
   14001cdc6:	jnp    0x14001cdc7
   14001cdc8:	(bad)  
   14001cdc9:	cli    
   14001cdca:	jle    0x14001cdcb
   14001cdcc:	(bad)  
   14001cdcd:	cld    
   14001cdce:	cmp    edi,0xff83fcff
   14001cdd4:	(bad)  
   14001cdd5:	cld    
   14001cdd6:	xchg   bh,bh
   14001cdd8:	(bad)  
   14001cdd9:	cli    
   14001cdda:	mov    bh,bh
   14001cddc:	(bad)  
   14001cddd:	cld    
   14001cdde:	mov    edi,?
   14001cde0:	(bad)  
   14001cde1:	sti    
   14001cde2:	mov    ?,edi
   14001cde4:	(bad)  
   14001cde5:	stc    
   14001cde6:	test   edi,edi
   14001cde8:	mov    ah,0x7c
   14001cdea:	and    ecx,edx
   14001cdec:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001cded:	ins    DWORD PTR es:[rdi],dx
   14001cdee:	sbb    eax,0x27
	...
   14001ce7f:	add    BYTE PTR [rsi-0x5ffae59a],bl
   14001ce85:	imul   ebx,DWORD PTR [rdi],0xffffffb6
   14001ce88:	clc    
   14001ce89:	out    dx,al
   14001ce8a:	cdq    
   14001ce8b:	sti    
   14001ce8c:	(bad)  
   14001ce8d:	mul    DWORD PTR [rbx-0x5f0a0101]
   14001ce93:	(bad)  
   14001ce94:	(bad)  
   14001ce95:	cmc    
   14001ce96:	popf   
   14001ce97:	(bad)  
   14001ce98:	(bad)  
   14001ce99:	neg    BYTE PTR [rbx-0x650a0101]
   14001ce9f:	(bad)  
   14001cea0:	(bad)  
   14001cea1:	repz cwde 
   14001cea3:	(bad)  
   14001cea4:	std    
   14001cea5:	repnz xchg esi,eax
   14001cea7:	(bad)  
   14001cea8:	std    
   14001cea9:	icebp  
   14001ceaa:	xchg   esp,eax
   14001ceab:	(bad)  
   14001ceac:	cld    
   14001cead:	lock xchg edx,eax
   14001ceaf:	(bad)  
   14001ceb0:	cld    
   14001ceb1:	out    dx,eax
   14001ceb2:	(bad)  
   14001ceb3:	(bad)  
   14001ceb4:	cli    
   14001ceb5:	in     al,dx
   14001ceb6:	mov    edi,edi
   14001ceb8:	stc    
   14001ceb9:	call   0x125f9ce47
   14001cebe:	xchg   edi,edi
   14001cec0:	cmc    
   14001cec1:	loope  0x14001ce46
   14001cec3:	push   rbx
   14001cec5:	fadd   QWORD PTR [rax+0x7dd8f2ff]
   14001cecb:	(bad)  
   14001cecc:	out    dx,al
   14001cecd:	(bad)  
   14001cece:	jp     0x14001cecf
   14001ced0:	jmp    0x14001cea1
   14001ced2:	jns    0x14001ced3
   14001ced4:	(bad)  
   14001ced5:	retf   
   14001ced6:	jae    0x14001ced7
   14001ced8:	call   0x1260140a4
   14001cedd:	shr    BYTE PTR [rdi-0x1],0xe3
   14001cee1:	mov    ebp,0xb9e0ff6c
   14001cee6:	imul   edi,edi,0xff67b5de
   14001ceec:	fldcw  WORD PTR [rdx-0x6c3300a7]
   14001cef2:	cmp    edi,edi
   14001cef4:	cwde   
   14001cef5:	(bad)  
   14001cef6:	sbb    eax,0x165b8edf
   14001cefb:	and    DWORD PTR [rax],eax
	...
   14001cf2d:	add    BYTE PTR [rax],al
   14001cf2f:	add    BYTE PTR [rsi-0x5ae10101],ah
   14001cf35:	(bad)  
   14001cf36:	inc    BYTE PTR [rdx-0x5c]
   14001cf39:	(bad)  
   14001cf3a:	inc    BYTE PTR [rsi-0x5e]
   14001cf3d:	(bad)  
   14001cf3e:	dec    BYTE PTR [rbx-0x5f]
   14001cf41:	(bad)  
   14001cf42:	dec    BYTE PTR [rdi-0x60]
   14001cf45:	(bad)  
   14001cf46:	(bad)  
   14001cf47:	push   rdx
   14001cf48:	fwait
   14001cf49:	(bad)  
   14001cf4a:	(bad)  
   14001cf4b:	push   rbp
   14001cf4c:	pop    rdx
   14001cf4d:	out    dx,eax
   14001cf4e:	(bad)  
   14001cf4f:	fst    DWORD PTR [rcx+rbp*8-0x1]
   14001cf53:	in     eax,0x48
   14001cf55:	loop   0x14001cf56
   14001cf57:	in     eax,0x3a
   14001cf59:	(bad)  
   14001cf5a:	jmp    rsi
   14001cf5c:	xor    ebp,ecx
   14001cf5e:	jmp    rdi
   14001cf60:	sub    al,al
   14001cf62:	(bad)  
   14001cf63:	jmp    0x12c01868e
   14001cf68:	(bad)  
   14001cf69:	mov    dh,0xff
   14001cf6b:	out    dx,al
   14001cf6c:	sub    eax,0x45f0ffb9
   14001cf71:	mov    ebp,0x9d7bf3fb
   14001cf76:	sahf   
   14001cf77:	(bad)  
   14001cf79:	movabs ds:0xbce4ff3fb5e0fb3b,eax
   14001cf82:	rex.XB jmp r14
   14001cf85:	mov    edi,0xc5eaff44
   14001cf8a:	rex.RXB (bad) 
   14001cf8c:	jmp    0x14001cf5a
   14001cf8e:	rex.WB (bad) 
   14001cf90:	out    dx,al
   14001cf91:	ror    BYTE PTR [rbp-0x1],1
   14001cf94:	out    dx,eax
   14001cf95:	(bad)  
   14001cf96:	push   rcx
   14001cf97:	push   rcx
   14001cf99:	fst    QWORD PTR [rsi-0x1]
   14001cf9c:	repz loope 0x14001cffb
   14001cf9f:	push   rbp
   14001cfa1:	in     eax,0x5f
   14001cfa3:	push   rdi
   14001cfa5:	jmp    0x12cfbcf0c
   14001cfaa:	movsxd edi,edi
   14001cfac:	stc    
   14001cfad:	lock imul edi,edi,0xff6df2fb
   14001cfb4:	cld    
   14001cfb5:	cmc    
   14001cfb6:	jo     0x14001cfb7
   14001cfb8:	std    
   14001cfb9:	div    DWORD PTR [rbx-0x1]
   14001cfbc:	std    
   14001cfbd:	clc    
   14001cfbe:	jbe    0x14001cfbf
   14001cfc0:	std    
   14001cfc1:	clc    
   14001cfc2:	jp     0x14001cfc3
   14001cfc4:	(bad)  
   14001cfc5:	cli    
   14001cfc6:	jg     0x14001cfc7
   14001cfc8:	(bad)  
   14001cfc9:	cld    
   14001cfca:	(bad)  
   14001cfcb:	(bad)  
   14001cfcc:	(bad)  
   14001cfcd:	cld    
   14001cfce:	test   edi,edi
   14001cfd0:	(bad)  
   14001cfd1:	cld    
   14001cfd2:	xchg   bh,bh
   14001cfd4:	(bad)  
   14001cfd5:	cli    
   14001cfd6:	mov    bh,bh
   14001cfd8:	(bad)  
   14001cfd9:	sti    
   14001cfda:	mov    edi,edi
   14001cfdc:	(bad)  
   14001cfdd:	cld    
   14001cfde:	mov    edi,?
   14001cfe0:	(bad)  
   14001cfe1:	sti    
   14001cfe2:	mov    edi,edi
   14001cfe4:	jmp    0x14001cfb0
   14001cfe6:	pop    rbx
   14001cfe7:	out    dx,eax
   14001cfe8:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001cfe9:	outs   dx,BYTE PTR ds:[rsi]
   14001cfea:	sbb    eax,0x77
	...
   14001d083:	add    BYTE PTR [rsi-0x62e7e59a],bl
   14001d089:	data16 sbb ah,BYTE PTR [rdi-0x63]
   14001d08d:	data16 sbb bh,BYTE PTR [rcx-0x63]
   14001d091:	data16 sbb al,BYTE PTR [rax-0x7ee59963]
   14001d098:	pushf  
   14001d099:	sbb    al,BYTE PTR gs:[rbx-0x79e59a64]
   14001d0a0:	fwait
   14001d0a1:	sbb    cl,BYTE PTR gs:[rax-0x74e69b66]
   14001d0a8:	(bad)  
   14001d0a9:	sbb    DWORD PTR fs:[rax-0x6ae69c67],edx
   14001d0b0:	cdq    
   14001d0b1:	movsxd ebx,DWORD PTR [rcx]
   14001d0b3:	fwait
   14001d0b4:	cwde   
   14001d0b5:	(bad)  
   14001d0b6:	sbb    DWORD PTR [rcx-0x58e69d69],esp
   14001d0bc:	xchg   edi,eax
   14001d0bd:	(bad)  
   14001d0be:	sbb    DWORD PTR [rsi-0x4be79e6a],ebp
   14001d0c4:	xchg   esi,eax
   14001d0c5:	(bad)  
   14001d0c6:	sbb    BYTE PTR [rcx-0x40e79f6b],bh
   14001d0cc:	xchg   ebp,eax
   14001d0cd:	(bad)  
   14001d0ce:	sbb    ah,al
   14001d0d0:	xchg   esp,eax
   14001d0d1:	pop    rdi
   14001d0d2:	sbb    al,cl
   14001d0d4:	xchg   ebx,eax
   14001d0d5:	pop    rdi
   14001d0d6:	sbb    ch,cl
   14001d0d8:	xchg   ebx,eax
   14001d0d9:	pop    rdi
   14001d0da:	sbb    bh,cl
   14001d0dc:	xchg   edx,eax
   14001d0dd:	pop    rsi
   14001d0de:	(bad)  
   14001d0df:	rcl    BYTE PTR [rdx-0x6e2be8a2],cl
   14001d0e5:	pop    rbp
   14001d0e6:	(bad)  
   14001d0e7:	(bad)  
   14001d0e8:	xchg   ecx,eax
   14001d0e9:	pop    rbp
   14001d0ea:	(bad)  
   14001d0eb:	xlat   BYTE PTR ds:[rbx]
   14001d0ec:	nop
   14001d0ed:	pop    rbp
   14001d0ee:	(bad)  
   14001d0ef:	xlat   BYTE PTR ds:[rbx]
   14001d0f0:	nop
   14001d0f1:	pop    rsp
   14001d0f2:	(bad)  
   14001d0f3:	xlat   BYTE PTR ds:[rbx]
   14001d0f4:	(bad)  
   14001d0f5:	pop    rsp
   14001d0f6:	(bad)  
   14001d0f7:	ret    0x5b8e
   14001d0fa:	(bad)  
   14001d0fb:	imul   eax,DWORD PTR [rax],0x0
	...
   14001d12e:	add    BYTE PTR [rax],al
   14001d130:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001d131:	(bad)  
   14001d132:	inc    BYTE PTR [rsp+riz*4]
   14001d135:	(bad)  
   14001d136:	inc    BYTE PTR [rax-0x5e]
   14001d139:	(bad)  
   14001d13a:	dec    BYTE PTR [rax-0x5f]
   14001d13d:	(bad)  
   14001d13e:	dec    BYTE PTR [rsi-0x60]
   14001d141:	(bad)  
   14001d142:	(bad)  
   14001d143:	push   rax
   14001d144:	sahf   
   14001d145:	(bad)  
   14001d146:	(bad)  
   14001d147:	push   rsp
   14001d148:	pushf  
   14001d149:	(bad)  
   14001d14a:	(bad)  
   14001d14b:	push   rdi
   14001d14c:	pop    rdi
   14001d14d:	repnz push QWORD PTR [rdx-0x1a0010a6]
   14001d154:	rex.WRB in eax,0xff
   14001d157:	out    0x40,al
   14001d159:	(bad)  
   14001d15b:	out    0x36,al
   14001d15d:	sar    edi,1
   14001d15f:	call   0x12b019891
   14001d164:	sub    DWORD PTR [rbp-0x48d81201],edi
   14001d16a:	push   rax
   14001d16c:	sub    dh,BYTE PTR [rsi-0x47cb0d02]
   14001d172:	sti    
   14001d173:	mul    DWORD PTR [rdx-0x47]
   14001d176:	out    0xfc,al
   14001d178:	int3   
   14001d179:	lods   al,BYTE PTR ds:[rsi]
   14001d17a:	rex.RXB (bad) 
   14001d17c:	fistp  QWORD PTR [rax-0x401a00be]
   14001d182:	rex.RB (bad) 
   14001d184:	call   0x12d01184d
   14001d189:	retf   
   14001d18a:	rex.WX (bad) 
   14001d18c:	in     eax,dx
   14001d18d:	(bad)  
   14001d18e:	rex.WR push rax
   14001d191:	(bad)  
   14001d192:	push   rax
   14001d193:	push   rdx
   14001d195:	ficom  DWORD PTR [rsi-0x1]
   14001d198:	repz loopne 0x14001d1f5
   14001d19b:	push   rbp
   14001d19d:	jrcxz  0x14001d1fd
   14001d19f:	push   rbp
   14001d1a1:	call   0x12bfad108
   14001d1a6:	movsxd edi,edi
   14001d1a8:	cli    
   14001d1a9:	out    dx,eax
   14001d1aa:	imul   edi,edi,0xff6cf1fa
   14001d1b0:	sti    
   14001d1b1:	rep outs dx,DWORD PTR ds:[rsi]
   14001d1b3:	(bad)  
   14001d1b4:	cld    
   14001d1b5:	div    BYTE PTR [rdx-0x1]
   14001d1b8:	std    
   14001d1b9:	clc    
   14001d1ba:	jne    0x14001d1bb
   14001d1bc:	std    
   14001d1bd:	clc    
   14001d1be:	jp     0x14001d1bf
   14001d1c0:	(bad)  
   14001d1c1:	stc    
   14001d1c2:	jle    0x14001d1c3
   14001d1c4:	(bad)  
   14001d1c5:	cld    
   14001d1c6:	cmp    bh,0xff
   14001d1c9:	std    
   14001d1ca:	(bad)  
   14001d1cb:	(bad)  
   14001d1cc:	(bad)  
   14001d1cd:	std    
   14001d1ce:	test   edi,edi
   14001d1d0:	(bad)  
   14001d1d1:	std    
   14001d1d2:	mov    bh,bh
   14001d1d4:	(bad)  
   14001d1d5:	cli    
   14001d1d6:	mov    edi,edi
   14001d1d8:	(bad)  
   14001d1d9:	cld    
   14001d1da:	(bad)  
   14001d1db:	(bad)  
   14001d1dc:	(bad)  
   14001d1dd:	cld    
   14001d1de:	mov    edi,?
   14001d1e0:	(bad)  
   14001d1e1:	stc    
   14001d1e2:	cmp    esi,0xffffffb0
   14001d1e5:	jbe    0x14001d206
   14001d1e7:	retf   
   14001d1e8:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001d1e9:	outs   dx,BYTE PTR ds:[rsi]
   14001d1ea:	sbb    eax,0x16
	...
   14001d333:	add    BYTE PTR [rbx-0x5edc0101],ah
   14001d339:	(bad)  
   14001d33a:	dec    BYTE PTR [rbx-0x60]
   14001d33d:	(bad)  
   14001d33e:	dec    BYTE PTR [rdi-0x61]
   14001d341:	(bad)  
   14001d342:	(bad)  
   14001d343:	push   rbx
   14001d344:	popf   
   14001d345:	(bad)  
   14001d346:	(bad)  
   14001d347:	push   rsi
   14001d348:	pushf  
   14001d349:	(bad)  
   14001d34a:	(bad)  
   14001d34b:	pop    rax
   14001d34c:	jns    0x14001d347
   14001d34e:	(bad)  
   14001d34f:	js     0x14001d3ae
   14001d351:	bnd jmp rbp
   14001d354:	push   rbx
   14001d355:	jmp    0x11f48ba59
   14001d35a:	jmp    rdi
   14001d35c:	cmp    ebp,edx
   14001d35e:	(bad)  
   14001d35f:	call   0x12c019e95
   14001d364:	sub    eax,eax
   14001d366:	(bad)  
   14001d367:	out    dx,al
   14001d368:	(bad)  
   14001d369:	mov    edx,0xb528f0ff
   14001d36e:	std    
   14001d36f:	hlt    
   14001d370:	(bad)  
   14001d371:	mov    bl,0xf9
   14001d373:	cli    
   14001d374:	rex.RX mov ebx,0xbc93fff4
   14001d37a:	stos   BYTE PTR es:[rdi],al
   14001d37b:	(bad)  
   14001d37c:	fidivr WORD PTR [rdx-0x3f1a00b9]
   14001d382:	rex.RX (bad) 
   14001d384:	jmp    0x14001d350
   14001d386:	rex.WX (bad) 
   14001d388:	in     eax,dx
   14001d389:	iret   
   14001d38a:	rex.WR (bad) 
   14001d38c:	out    dx,eax
   14001d38d:	(bad)  
   14001d38e:	push   rax
   14001d38f:	push   rcx
   14001d391:	fst    DWORD PTR [rsi-0x1]
   14001d394:	repz ficomp WORD PTR [rbx-0x1]
   14001d398:	hlt    
   14001d399:	jrcxz  0x14001d3f8
   14001d39b:	push   rsi
   14001d39d:	out    0x61,eax
   14001d39f:	push   rdi
   14001d3a1:	jmp    0x14001d408
   14001d3a3:	(bad)  
   14001d3a4:	stc    
   14001d3a5:	out    dx,al
   14001d3a6:	push   0x6af0faff
   14001d3ab:	(bad)  
   14001d3ac:	cli    
   14001d3ad:	rep outs dx,BYTE PTR ds:[rsi]
   14001d3af:	(bad)  
   14001d3b0:	cld    
   14001d3b1:	div    BYTE PTR [rcx-0x1]
   14001d3b4:	std    
   14001d3b5:	div    DWORD PTR [rdi-0x1]
   14001d3b8:	std    
   14001d3b9:	clc    
   14001d3ba:	jns    0x14001d3bb
   14001d3bc:	std    
   14001d3bd:	sti    
   14001d3be:	jge    0x14001d3bf
   14001d3c0:	(bad)  
   14001d3c1:	cld    
   14001d3c2:	cmp    bh,0xfe
   14001d3c5:	std    
   14001d3c6:	(bad)  
   14001d3c7:	(bad)  
   14001d3c8:	(bad)  
   14001d3c9:	std    
   14001d3ca:	test   edi,edi
   14001d3cc:	(bad)  
   14001d3cd:	std    
   14001d3ce:	xchg   edi,edi
   14001d3d0:	(bad)  
   14001d3d1:	std    
   14001d3d2:	mov    edi,edi
   14001d3d4:	(bad)  
   14001d3d5:	std    
   14001d3d6:	mov    edi,?
   14001d3d8:	(bad)  
   14001d3d9:	cld    
   14001d3da:	mov    ?,edi
   14001d3dc:	(bad)  
   14001d3dd:	dec    BYTE PTR [rdx+0x63d3edff]
   14001d3e3:	repnz test al,0x6e
   14001d3e6:	sbb    eax,0x7a
	...
   14001d533:	add    BYTE PTR [rcx-0x5ffb0101],ah
   14001d539:	(bad)  
   14001d53a:	dec    BYTE PTR [rax-0x61]
   14001d53d:	(bad)  
   14001d53e:	(bad)  
   14001d53f:	push   rax
   14001d540:	sahf   
   14001d541:	(bad)  
   14001d542:	(bad)  
   14001d543:	push   rsp
   14001d544:	pushf  
   14001d545:	(bad)  
   14001d546:	(bad)  
   14001d547:	push   rdi
   14001d548:	fwait
   14001d549:	(bad)  
   14001d54a:	std    
   14001d54b:	pop    rdx
   14001d54c:	xchg   esi,eax
   14001d54d:	(bad)  
   14001d54e:	(bad)  
   14001d54f:	pop    rsi
   14001d550:	pop    rdx
   14001d551:	icebp  
   14001d552:	call   rbx
   14001d554:	pop    rbx
   14001d555:	out    dx,eax
   14001d556:	jmp    rsi
   14001d558:	rex.WXB in al,0xff
   14001d55b:	out    0x40,eax
   14001d55d:	(bad)  
   14001d55f:	(bad)  
   14001d560:	ss sar edi,1
   14001d563:	in     eax,dx
   14001d564:	sub    eax,0x27f0ffc7
   14001d569:	mov    ebp,0xb526f3ff
   14001d56e:	cld    
   14001d56f:	cmc    
   14001d570:	sub    al,0xaf
   14001d572:	idiv   ch
   14001d574:	ss mov eax,0xc161fff8
   14001d57a:	in     al,dx
   14001d57b:	dec    esi
   14001d57d:	mov    ebp,0xc2e5ff60
   14001d582:	rex.RXB (bad) 
   14001d584:	jmp    0x14001d552
   14001d586:	rex.WR (bad) 
   14001d588:	in     eax,dx
   14001d589:	ror    DWORD PTR [rsi-0x1],1
   14001d58c:	lock xlat BYTE PTR ds:[rbx]
   14001d58e:	push   rdx
   14001d58f:	push   rdx
   14001d591:	fcomp  QWORD PTR [rcx-0x1]
   14001d594:	hlt    
   14001d595:	loope  0x14001d5f2
   14001d597:	push   rsi
   14001d599:	out    0x60,al
   14001d59b:	push   rsi
   14001d59d:	jmp    0x12dfad506
   14001d5a2:	addr32 (bad) 
   14001d5a4:	stc    
   14001d5a5:	out    dx,eax
   14001d5a6:	push   0xffffffffffffffff
   14001d5a8:	sti    
   14001d5a9:	rep outs dx,BYTE PTR ds:[rsi]
   14001d5ab:	(bad)  
   14001d5ac:	sti    
   14001d5ad:	repz jo 0x14001d5af
   14001d5b0:	cld    
   14001d5b1:	div    DWORD PTR [rdi-0x1]
   14001d5b4:	std    
   14001d5b5:	clc    
   14001d5b6:	jns    0x14001d5b7
   14001d5b8:	std    
   14001d5b9:	stc    
   14001d5ba:	jl     0x14001d5bb
   14001d5bc:	(bad)  
   14001d5bd:	sti    
   14001d5be:	jg     0x14001d5bf
   14001d5c0:	(bad)  
   14001d5c1:	cld    
   14001d5c2:	cmp    edi,0xff83fdfe
   14001d5c8:	(bad)  
   14001d5c9:	std    
   14001d5ca:	xchg   bh,bh
   14001d5cc:	(bad)  
   14001d5cd:	std    
   14001d5ce:	mov    bh,bh
   14001d5d0:	(bad)  
   14001d5d1:	std    
   14001d5d2:	mov    bh,bh
   14001d5d4:	(bad)  
   14001d5d5:	dec    BYTE PTR [rbp-0x71030001]
   14001d5db:	(bad)  
   14001d5dc:	(bad)  
   14001d5dd:	sti    
   14001d5de:	xchg   bh,bh
   14001d5e0:	(bad)
   14001d5e3:	fisubr WORD PTR [rax+0x291d6e]
	...
   14001d735:	add    BYTE PTR [rax],al
   14001d737:	add    BYTE PTR [rdi-0x61d50101],bl
   14001d73d:	(bad)  
   14001d73e:	(bad)  
   14001d73f:	push   rbx
   14001d740:	pushf  
   14001d741:	(bad)  
   14001d742:	(bad)  
   14001d743:	push   rsi
   14001d744:	fwait
   14001d745:	(bad)  
   14001d746:	std    
   14001d747:	pop    rcx
   14001d748:	(bad)  
   14001d749:	(bad)  
   14001d74a:	std    
   14001d74b:	pop    rsp
   14001d74c:	cwde   
   14001d74d:	(bad)  
   14001d74e:	std    
   14001d74f:	pop    rdi
   14001d750:	gs clc 
   14001d752:	(bad)  
   14001d753:	popf   
   14001d754:	(bad)  
   14001d755:	bnd jmp rdi
   14001d758:	push   rcx
   14001d759:	jmp    0x12148c05d
   14001d75e:	(bad)  
   14001d75f:	jmp    0x14001d79b
   14001d761:	xlat   BYTE PTR ds:[rbx]
   14001d762:	(bad)  
   14001d763:	out    dx,al
   14001d764:	xor    ch,cl
   14001d766:	push   rcx
   14001d768:	sub    bh,BYTE PTR [rdi-0x4bd90b02]
   14001d76e:	cli    
   14001d76f:	stc    
   14001d770:	sub    DWORD PTR [rcx-0x4ccf010a],esi
   14001d776:	idiv   edi
   14001d778:	mov    r13d,0xc38efff7
   14001d77e:	mov    ebp,0x4dc7e2ff
   14001d783:	(bad)  
   14001d784:	(bad)  
   14001d785:	int    0x4d
   14001d787:	(bad)  
   14001d788:	out    dx,al
   14001d789:	(bad)  
   14001d78a:	push   rdx
   14001d78b:	push   rdx
   14001d78d:	fistp  DWORD PTR [rax-0x1]
   14001d790:	repz fistp WORD PTR [rbx-0x1]
   14001d794:	cmc    
   14001d795:	jrcxz  0x14001d7f7
   14001d797:	push   rsi
   14001d799:	call   0x12cf9d702
   14001d79e:	addr32 (bad) 
   14001d7a0:	stc    
   14001d7a1:	out    dx,eax
   14001d7a2:	imul   edi,edi,0xff6cf3fa
   14001d7a8:	cld    
   14001d7a9:	hlt    
   14001d7aa:	jo     0x14001d7ab
   14001d7ac:	cld    
   14001d7ad:	cmc    
   14001d7ae:	jbe    0x14001d7af
   14001d7b0:	cld    
   14001d7b1:	clc    
   14001d7b2:	js     0x14001d7b3
   14001d7b4:	std    
   14001d7b5:	stc    
   14001d7b6:	jl     0x14001d7b7
   14001d7b8:	std    
   14001d7b9:	sti    
   14001d7ba:	jle    0x14001d7bb
   14001d7bc:	(bad)  
   14001d7bd:	cld    
   14001d7be:	cmp    bh,0xfe
   14001d7c1:	std    
   14001d7c2:	cmp    edi,0xfffffffe
   14001d7c5:	std    
   14001d7c6:	test   edi,edi
   14001d7c8:	(bad)  
   14001d7c9:	std    
   14001d7ca:	xchg   bh,bh
   14001d7cc:	(bad)  
   14001d7cd:	std    
   14001d7ce:	mov    edi,edi
   14001d7d0:	(bad)  
   14001d7d1:	std    
   14001d7d2:	mov    bh,bh
   14001d7d4:	(bad)  
   14001d7d5:	dec    BYTE PTR [rbp-0x73030001]
   14001d7db:	(bad)  
   14001d7dc:	cld    
   14001d7dd:	cmc    
   14001d7de:	jge    0x14001d7dc
   14001d7e0:	test   eax,0xb61d6f
	...
   14001d935:	add    BYTE PTR [rax],al
   14001d937:	add    BYTE PTR [rsi-0x63fa0101],bl
   14001d93d:	(bad)  
   14001d93e:	dec    BYTE PTR [rsi-0x65]
   14001d941:	(bad)  
   14001d942:	std    
   14001d943:	push   rdi
   14001d944:	(bad)  
   14001d945:	(bad)  
   14001d946:	std    
   14001d947:	pop    rbx
   14001d948:	cdq    
   14001d949:	(bad)  
   14001d94a:	std    
   14001d94b:	pop    rsi
   14001d94c:	xchg   edi,eax
   14001d94d:	(bad)  
   14001d94e:	std    
   14001d94f:	pop    rdi
   14001d950:	mov    ebp,?
   14001d952:	(bad)  
   14001d953:	push   0xffffffffe2fff260
   14001d958:	pop    rdx
   14001d959:	out    dx,eax
   14001d95a:	(bad)  
   14001d95b:	call   0x12c01beaa
   14001d960:	rex.B fdiv st(7),st
   14001d963:	out    dx,eax
   14001d964:	ss sar edi,1
   14001d967:	bnd cs ret 
   14001d96a:	(bad)  
   14001d96b:	hlt    
   14001d96c:	sub    DWORD PTR [rbp-0x4dd80408],esi
   14001d972:	idiv   bh
   14001d974:	sub    al,0xb3
   14001d976:	idiv   edi
   14001d978:	xor    edi,DWORD PTR [rax-0x3ea80007]
   14001d97e:	hlt    
   14001d97f:	inc    edx
   14001d981:	retf   0xff7a
   14001d984:	call   0x12f012a56
   14001d989:	(bad)  
   14001d98a:	push   rbx
   14001d98b:	push   rbx
   14001d98d:	fstp   QWORD PTR [rcx-0x1]
   14001d990:	hlt    
   14001d991:	loop   0x14001d9f2
   14001d993:	push   rbp
   14001d995:	out    0x62,al
   14001d997:	push   rdi
   14001d999:	(bad)  
   14001d99a:	data16 (bad) 
   14001d99c:	stc    
   14001d99d:	out    dx,al
   14001d99e:	push   0xffffffffffffffff
   14001d9a0:	cli    
   14001d9a1:	lock ins BYTE PTR es:[rdi],dx
   14001d9a3:	(bad)  
   14001d9a4:	cli    
   14001d9a5:	rep outs dx,DWORD PTR ds:[rsi]
   14001d9a7:	(bad)  
   14001d9a8:	cld    
   14001d9a9:	hlt    
   14001d9aa:	jno    0x14001d9ab
   14001d9ac:	cld    
   14001d9ad:	idiv   BYTE PTR [rcx-0x1]
   14001d9b0:	std    
   14001d9b1:	stc    
   14001d9b2:	jl     0x14001d9b3
   14001d9b4:	std    
   14001d9b5:	cli    
   14001d9b6:	jge    0x14001d9b7
   14001d9b8:	(bad)  
   14001d9b9:	sti    
   14001d9ba:	cmp    edi,0xff82fcfe
   14001d9c0:	(bad)  
   14001d9c1:	std    
   14001d9c2:	test   bh,bh
   14001d9c4:	(bad)  
   14001d9c5:	std    
   14001d9c6:	xchg   edi,edi
   14001d9c8:	(bad)  
   14001d9c9:	std    
   14001d9ca:	mov    edi,edi
   14001d9cc:	(bad)  
   14001d9cd:	std    
   14001d9ce:	mov    bh,bh
   14001d9d0:	(bad)  
   14001d9d1:	dec    BYTE PTR [rdi+rdi*8-0x710101]
   14001d9d8:	(bad)  
   14001d9d9:	cld    
   14001d9da:	mov    edi,edi
   14001d9dc:	out    dx,al
   14001d9dd:	fsubr  DWORD PTR [rax-0xd]
   14001d9e0:	test   eax,0x791d6f
	...
   14001db39:	add    BYTE PTR [rax],al
   14001db3b:	add    BYTE PTR [rbx-0x65db0201],bl
   14001db41:	(bad)  
   14001db42:	std    
   14001db43:	pop    rcx
   14001db44:	cdq    
   14001db45:	(bad)  
   14001db46:	std    
   14001db47:	pop    rsp
   14001db48:	xchg   edi,eax
   14001db49:	(bad)  
   14001db4a:	std    
   14001db4b:	pop    rdi
   14001db4c:	xchg   esi,eax
   14001db4d:	(bad)  
   14001db4e:	std    
   14001db4f:	(bad)  
   14001db50:	xchg   esp,eax
   14001db51:	(bad)  
   14001db52:	std    
   14001db53:	fs (bad) 
   14001db55:	idiv   edi
   14001db57:	mov    eax,0xe9fff361
   14001db5c:	push   rcx
   14001db5d:	in     al,dx
   14001db5e:	(bad)  
   14001db5f:	in     al,dx
   14001db60:	rex.RX loope 0x14001db62
   14001db63:	out    dx,eax
   14001db64:	cmp    al,0xd7
   14001db66:	push   rsp
   14001db68:	(bad)  
   14001db69:	enter  0xf7fd,0x2b
   14001db6d:	mov    eax,0xb427fcf7
   14001db72:	idiv   edi
   14001db74:	sub    dh,BYTE PTR [rbx-0x4ad10008]
   14001db7a:	stc    
   14001db7b:	(bad)  
   14001db7c:	cmp    al,0xbe
   14001db7e:	cli    
   14001db7f:	(bad)  
   14001db80:	jle    0x14001db49
   14001db82:	(bad)  
   14001db83:	jmp    rdx
   14001db85:	iret   
   14001db86:	pop    rax
   14001db87:	(bad)  
   14001db88:	jmp    0x14001db5f
   14001db8a:	push   rsi
   14001db8b:	push   rcx
   14001db8d:	fistp  WORD PTR [rbp-0x1]
   14001db90:	cmc    
   14001db91:	in     al,0x60
   14001db93:	push   rdi
   14001db95:	jmp    0x12dfadaff
   14001db9a:	imul   edi,edi,0xff6df1f9
   14001dba0:	cli    
   14001dba1:	rep ins DWORD PTR es:[rdi],dx
   14001dba3:	(bad)  
   14001dba4:	cld    
   14001dba5:	hlt    
   14001dba6:	jae    0x14001dba7
   14001dba8:	cld    
   14001dba9:	idiv   BYTE PTR [rcx-0x1]
   14001dbac:	cld    
   14001dbad:	stc    
   14001dbae:	jnp    0x14001dbaf
   14001dbb0:	std    
   14001dbb1:	stc    
   14001dbb2:	jge    0x14001dbb3
   14001dbb4:	std    
   14001dbb5:	sti    
   14001dbb6:	cmp    bh,0xfe
   14001dbb9:	cld    
   14001dbba:	(bad)  
   14001dbbb:	(bad)  
   14001dbbc:	(bad)  
   14001dbbd:	std    
   14001dbbe:	test   bh,bh
   14001dbc0:	(bad)  
   14001dbc1:	std    
   14001dbc2:	test   edi,edi
   14001dbc4:	(bad)  
   14001dbc5:	std    
   14001dbc6:	xchg   edi,edi
   14001dbc8:	(bad)  
   14001dbc9:	std    
   14001dbca:	mov    bh,bh
   14001dbcc:	(bad)  
   14001dbcd:	std    
   14001dbce:	mov    edi,edi
   14001dbd0:	(bad)  
   14001dbd1:	dec    BYTE PTR [rdi+rdi*8-0x710101]
   14001dbd8:	(bad)  
   14001dbd9:	std    
   14001dbda:	mov    bh,bh
   14001dbdc:	fnstenv [rax+rdx*2+0x1d6fa9e7]
   14001dbe3:	rex.WB add BYTE PTR [r8],al
	...
   14001dd3a:	add    BYTE PTR [rax],al
   14001dd3c:	(bad)  
   14001dd3d:	(bad)  
   14001dd3e:	std    
   14001dd3f:	add    DWORD PTR [rcx-0x68b20201],ebx
   14001dd45:	(bad)  
   14001dd46:	std    
   14001dd47:	pop    rsi
   14001dd48:	xchg   esi,eax
   14001dd49:	(bad)  
   14001dd4a:	std    
   14001dd4b:	pop    rdi
   14001dd4c:	xchg   ebp,eax
   14001dd4d:	(bad)  
   14001dd4e:	std    
   14001dd4f:	(bad)  
   14001dd50:	xchg   esp,eax
   14001dd51:	(bad)  
   14001dd52:	std    
   14001dd53:	data16 jl 0x14001dd50
   14001dd56:	(bad)  
   14001dd57:	jnp    0x14001ddbb
   14001dd59:	cmc    
   14001dd5a:	(bad)  
   14001dd5b:	jmp    0x12e01ceb8
   14001dd60:	rex.WRB out 0xff,eax
   14001dd63:	icebp  
   14001dd64:	rex (bad) 
   14001dd67:	hlt    
   14001dd68:	xor    ecx,esp
   14001dd6a:	cld    
   14001dd6b:	clc    
   14001dd6c:	sub    al,0xbd
   14001dd6e:	idiv   esi
   14001dd70:	sub    DWORD PTR [rdi-0x4cd80009],esi
   14001dd76:	stc    
   14001dd77:	jmp    FWORD PTR [rdx]
   14001dd79:	mov    dl,0xfa
   14001dd7b:	push   QWORD PTR [rbx]
   14001dd7d:	mov    ecx,0xc049fffa
   14001dd82:	idiv   edi
   14001dd84:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001dd85:	int    0xa5
   14001dd87:	(bad)  
   14001dd88:	call   0x130013762
   14001dd8d:	ficomp WORD PTR [rbp-0x1]
   14001dd90:	cmc    
   14001dd91:	in     eax,0x63
   14001dd93:	push   rdi
   14001dd95:	jmp    0x14001ddfe
   14001dd97:	(bad)  
   14001dd98:	clc    
   14001dd99:	out    dx,eax
   14001dd9a:	push   0xffffffffffffffff
   14001dd9c:	cli    
   14001dd9d:	repnz outs dx,DWORD PTR ds:[rsi]
   14001dd9f:	(bad)  
   14001dda0:	sti    
   14001dda1:	hlt    
   14001dda2:	jb     0x14001dda3
   14001dda4:	cld    
   14001dda5:	idiv   BYTE PTR [rcx-0x1]
   14001dda8:	std    
   14001dda9:	stc    
   14001ddaa:	jnp    0x14001ddab
   14001ddac:	std    
   14001ddad:	stc    
   14001ddae:	jge    0x14001ddaf
   14001ddb0:	std    
   14001ddb1:	cli    
   14001ddb2:	jg     0x14001ddb3
   14001ddb4:	std    
   14001ddb5:	cld    
   14001ddb6:	(bad)  
   14001ddb7:	(bad)  
   14001ddb8:	(bad)  
   14001ddb9:	cld    
   14001ddba:	test   bh,bh
   14001ddbc:	(bad)  
   14001ddbd:	std    
   14001ddbe:	xchg   edi,edi
   14001ddc0:	(bad)  
   14001ddc1:	std    
   14001ddc2:	mov    bh,bh
   14001ddc4:	(bad)  
   14001ddc5:	std    
   14001ddc6:	mov    bh,bh
   14001ddc8:	(bad)  
   14001ddc9:	std    
   14001ddca:	mov    bh,bh
   14001ddcc:	(bad)  
   14001ddcd:	dec    BYTE PTR [rdi+rdi*8-0x700101]
   14001ddd4:	(bad)  
   14001ddd5:	dec    BYTE PTR [rsi-0x77010001]
   14001dddb:	inc    edi
   14001dddd:	cwde   
   14001ddde:	cmp    al,0xdd
   14001dde0:	test   eax,0x271d6f
	...
   14001df3d:	add    BYTE PTR [rax],al
   14001df3f:	add    BYTE PTR [rax-0x69e40201],bl
   14001df45:	(bad)  
   14001df46:	std    
   14001df47:	pop    rdi
   14001df48:	xchg   ebp,eax
   14001df49:	(bad)  
   14001df4a:	std    
   14001df4b:	(bad)  
   14001df4c:	xchg   esp,eax
   14001df4d:	(bad)  
   14001df4e:	std    
   14001df4f:	fs xchg edx,eax
   14001df51:	(bad)  
   14001df52:	std    
   14001df53:	addr32 (bad) 
   14001df55:	(bad)  
   14001df56:	std    
   14001df57:	push   0x60
   14001df59:	clc    
   14001df5a:	dec    eax
   14001df5c:	fs cmc 
   14001df5e:	(bad)  
   14001df5f:	in     eax,dx
   14001df60:	push   rsp
   14001df61:	in     al,dx
   14001df62:	push   rcx
   14001df64:	rex.RX loope 0x14001df65
   14001df67:	cmc    
   14001df68:	(bad)  
   14001df69:	sar    dl,1
   14001df6b:	stc    
   14001df6c:	xor    edx,eax
   14001df6e:	clc    
   14001df6f:	(bad)  
   14001df70:	sub    edi,DWORD PTR [rbx-0x48d80009]
   14001df76:	stc    
   14001df77:	jmp    FWORD PTR [rcx]
   14001df79:	mov    ah,0xfb
   14001df7b:	jmp    FWORD PTR [rsi]
   14001df7d:	mov    dh,0xfb
   14001df7f:	(bad)  
   14001df80:	cmp    BYTE PTR [rbp-0x37990005],bh
   14001df86:	out    dx,eax
   14001df87:	call   rbx
   14001df89:	(bad)  
   14001df8a:	jne    0x14001df8b
   14001df8c:	in     eax,dx
   14001df8d:	fstp   QWORD PTR [rdi-0x1]
   14001df90:	repz out 0x64,eax
   14001df93:	(bad)  
   14001df94:	clc    
   14001df95:	in     al,dx
   14001df96:	push   0xffffffffffffffff
   14001df98:	stc    
   14001df99:	lock outs dx,DWORD PTR ds:[rsi]
   14001df9b:	(bad)  
   14001df9c:	sti    
   14001df9d:	hlt    
   14001df9e:	jo     0x14001df9f
   14001dfa0:	sti    
   14001dfa1:	cmc    
   14001dfa2:	jne    0x14001dfa3
   14001dfa4:	cld    
   14001dfa5:	idiv   DWORD PTR [rbx-0x1]
   14001dfa8:	std    
   14001dfa9:	stc    
   14001dfaa:	jge    0x14001dfab
   14001dfac:	std    
   14001dfad:	cli    
   14001dfae:	jg     0x14001dfaf
   14001dfb0:	std    
   14001dfb1:	cld    
   14001dfb2:	(bad)  
   14001dfb3:	(bad)  
   14001dfb4:	(bad)  
   14001dfb5:	cld    
   14001dfb6:	test   edi,edi
   14001dfb8:	(bad)  
   14001dfb9:	std    
   14001dfba:	xchg   edi,edi
   14001dfbc:	(bad)  
   14001dfbd:	std    
   14001dfbe:	mov    bh,bh
   14001dfc0:	(bad)  
   14001dfc1:	std    
   14001dfc2:	mov    bh,bh
   14001dfc4:	(bad)  
   14001dfc5:	std    
   14001dfc6:	mov    edi,?
   14001dfc8:	(bad)  
   14001dfc9:	std    
   14001dfca:	(bad)  
   14001dfcb:	(bad)  
   14001dfcc:	(bad)  
   14001dfcd:	dec    BYTE PTR [rsi-0x70010001]
   14001dfd3:	(bad)  
   14001dfd4:	(bad)  
   14001dfd5:	dec    BYTE PTR [rdi-0x77020001]
   14001dfdb:	push   QWORD PTR [rbx-0x552bd782]
   14001dfe1:	outs   dx,DWORD PTR ds:[rsi]
   14001dfe2:	sbb    eax,0xc
	...
   14001e143:	add    BYTE PTR [rbp-0x6bbc0201],dl
   14001e149:	(bad)  
   14001e14a:	std    
   14001e14b:	movsxd edx,DWORD PTR [rdx-0x6e9a0201]
   14001e151:	(bad)  
   14001e152:	std    
   14001e153:	push   0x6afdff90
   14001e158:	je     0x14001e154
   14001e15a:	inc    BYTE PTR [rbp-0x11000798]
   14001e160:	pop    rbp
   14001e161:	out    dx,eax
   14001e162:	push   rdx
   14001e164:	rex.WR in eax,0xfe
   14001e167:	idiv   BYTE PTR [rsi]
   14001e169:	(bad)  
   14001e16a:	stc    
   14001e16b:	sti    
   14001e16c:	xor    eax,0x2dfff8c8
   14001e171:	sar    ecx,0xff
   14001e174:	sub    bh,BYTE PTR [rcx-0x4ad80006]
   14001e17a:	sti    
   14001e17b:	jmp    FWORD PTR [rdx]
   14001e17d:	mov    dh,0xfc
   14001e17f:	push   QWORD PTR [rcx]
   14001e181:	mov    edx,0xc142fffc
   14001e186:	cli    
   14001e187:	dec    DWORD PTR [rdx-0x18002f33]
   14001e18d:	fsub   QWORD PTR [rbx-0x1]
   14001e190:	lock jrcxz 0x14001e1f8
   14001e193:	push   rsi
   14001e195:	in     al,dx
   14001e196:	imul   edi,edi,0xfffffffa
   14001e199:	bnd jno 0x14001e19b
   14001e19c:	sti    
   14001e19d:	hlt    
   14001e19e:	jb     0x14001e19f
   14001e1a0:	cld    
   14001e1a1:	div    DWORD PTR [rdi-0x1]
   14001e1a4:	std    
   14001e1a5:	idiv   DWORD PTR [rbp-0x1]
   14001e1a8:	std    
   14001e1a9:	cli    
   14001e1aa:	jle    0x14001e1ab
   14001e1ac:	std    
   14001e1ad:	cli    
   14001e1ae:	cmp    edi,0xfffffffd
   14001e1b1:	cld    
   14001e1b2:	test   edi,edi
   14001e1b4:	(bad)  
   14001e1b5:	std    
   14001e1b6:	xchg   edi,edi
   14001e1b8:	(bad)  
   14001e1b9:	std    
   14001e1ba:	mov    edi,edi
   14001e1bc:	(bad)  
   14001e1bd:	dec    BYTE PTR [rdx-0x73020001]
   14001e1c3:	(bad)  
   14001e1c4:	(bad)  
   14001e1c5:	std    
   14001e1c6:	(bad)  
   14001e1c7:	(bad)  
   14001e1c8:	(bad)  
   14001e1c9:	dec    BYTE PTR [rdi-0x70010001]
   14001e1cf:	(bad)  
   14001e1d0:	(bad)  
   14001e1d1:	dec    BYTE PTR [rdi-0x70010001]
   14001e1d7:	(bad)  
   14001e1d8:	(bad)  
   14001e1d9:	std    
   14001e1da:	mov    edi,edi
   14001e1dc:	stos   BYTE PTR es:[rdi],al
   14001e1dd:	jo     0x14001e1fc
   14001e1df:	int    0x0
	...
   14001e341:	add    BYTE PTR [rax],al
   14001e343:	add    BYTE PTR [rdi+rdi*8-0x6cf203],dl
   14001e34a:	std    
   14001e34b:	pop    rdi
   14001e34c:	xchg   ecx,eax
   14001e34d:	(bad)  
   14001e34e:	std    
   14001e34f:	xchg   ax,ax
   14001e351:	(bad)  
   14001e352:	std    
   14001e353:	push   0x6afdff8f
   14001e358:	mov    bh,bh
   14001e35a:	std    
   14001e35b:	outs   dx,BYTE PTR ds:[rsi]
   14001e35c:	(bad)  
   14001e35d:	clc    
   14001e35e:	call   rbx
   14001e360:	addr32 idiv bh
   14001e363:	repnz push rbx
   14001e365:	call   0x11846da67
   14001e36a:	stc    
   14001e36b:	cld    
   14001e36c:	cmp    esi,ecx
   14001e36e:	clc    
   14001e36f:	push   QWORD PTR [rcx]
   14001e371:	(bad)  
   14001e374:	sub    al,0xbf
   14001e376:	cli    
   14001e377:	jmp    FWORD PTR [rcx]
   14001e379:	mov    edx,0xb628fffb
   14001e37e:	cld    
   14001e37f:	jmp    FWORD PTR [rip+0x36fffcb7]        # 0x17701e03c
   14001e385:	mov    ebp,0xc44efffb
   14001e38a:	clc    
   14001e38b:	jmp    FWORD PTR [rsi-0x1600572b]
   14001e391:	fbld   TBYTE PTR [rsi-0x1]
   14001e394:	repnz (bad) 
   14001e396:	imul   edi,edi,0xfffffff9
   14001e399:	lock jb 0x14001e39b
   14001e39c:	cld    
   14001e39d:	cmc    
   14001e39e:	ja     0x14001e39f
   14001e3a0:	cld    
   14001e3a1:	idiv   DWORD PTR [rbx-0x1]
   14001e3a4:	std    
   14001e3a5:	stc    
   14001e3a6:	cmp    bh,0xfe
   14001e3a9:	cli    
   14001e3aa:	(bad)  
   14001e3ab:	(bad)  
   14001e3ac:	(bad)  
   14001e3ad:	sti    
   14001e3ae:	xchg   bh,bh
   14001e3b0:	(bad)  
   14001e3b1:	cld    
   14001e3b2:	mov    bh,bh
   14001e3b4:	(bad)  
   14001e3b5:	std    
   14001e3b6:	mov    bh,bh
   14001e3b8:	(bad)  
   14001e3b9:	std    
   14001e3ba:	mov    edi,edi
   14001e3bc:	(bad)  
   14001e3bd:	dec    BYTE PTR [rdi+rdi*8-0x710101]
   14001e3c4:	(bad)  
   14001e3c5:	dec    BYTE PTR [rdi-0x6f010001]
   14001e3cb:	(bad)  
   14001e3cc:	(bad)  
   14001e3cd:	dec    BYTE PTR [rdi-0x6f010001]
   14001e3d3:	(bad)  
   14001e3d4:	(bad)  
   14001e3d5:	dec    BYTE PTR [rbp-0x78050101]
   14001e3db:	(bad)  
   14001e3dc:	stos   DWORD PTR es:[rdi],eax
   14001e3dd:	jo     0x14001e3fd
   14001e3df:	mov    edi,0x0
	...
   14001e548:	xchg   ecx,eax
   14001e549:	(bad)  
   14001e54a:	std    
   14001e54b:	xor    BYTE PTR [rax-0x70980201],dl
   14001e551:	(bad)  
   14001e552:	std    
   14001e553:	imul   ecx,DWORD PTR [rsi-0x73930201],0x6f70fdff
   14001e55d:	cli    
   14001e55e:	(bad)  
   14001e55f:	xchg   esp,eax
   14001e560:	outs   dx,BYTE PTR ds:[rsi]
   14001e561:	clc    
   14001e562:	push   rbx
   14001e564:	pop    rbp
   14001e565:	in     eax,dx
   14001e566:	std    
   14001e567:	test   DWORD PTR [rsp+rbx*8-0x8],0xf9d33ffc
   14001e56f:	push   QWORD PTR [rsi]
   14001e571:	int    0xfa
   14001e573:	jmp    FWORD PTR [rsi]
   14001e575:	ret    
   14001e576:	cli    
   14001e577:	jmp    FWORD PTR [rcx]
   14001e579:	mov    esi,0xb92afffb
   14001e57e:	cld    
   14001e57f:	jmp    FWORD PTR [rdx]
   14001e581:	mov    bh,0xfd
   14001e583:	jmp    FWORD PTR [rdi]
   14001e585:	mov    eax,0xc139fffc
   14001e58a:	std    
   14001e58b:	jmp    FWORD PTR [rax-0x36]
   14001e58e:	out    dx,eax
   14001e58f:	call   rcx
   14001e591:	fdivr  QWORD PTR [rdi-0x1]
   14001e594:	in     al,dx
   14001e595:	in     al,0x6c
   14001e597:	push   rsi
   14001e599:	out    dx,al
   14001e59a:	jne    0x14001e59b
   14001e59c:	sti    
   14001e59d:	cmc    
   14001e59e:	js     0x14001e59f
   14001e5a0:	cld    
   14001e5a1:	idiv   DWORD PTR [rsi-0x1]
   14001e5a4:	std    
   14001e5a5:	cli    
   14001e5a6:	cmp    edi,0xff84fafe
   14001e5ac:	(bad)  
   14001e5ad:	sti    
   14001e5ae:	mov    bh,bh
   14001e5b0:	(bad)  
   14001e5b1:	std    
   14001e5b2:	mov    bh,bh
   14001e5b4:	(bad)  
   14001e5b5:	dec    BYTE PTR [rbp-0x71020101]
   14001e5bb:	(bad)  
   14001e5bc:	(bad)  
   14001e5bd:	dec    BYTE PTR [rsi-0x6f010001]
   14001e5c3:	(bad)  
   14001e5c4:	(bad)  
   14001e5c5:	std    
   14001e5c6:	xchg   ecx,eax
   14001e5c7:	(bad)  
   14001e5c8:	(bad)  
   14001e5c9:	(bad)  
   14001e5ca:	xchg   edx,eax
   14001e5cb:	(bad)  
   14001e5cc:	(bad)  
   14001e5cd:	(bad)  
   14001e5ce:	xchg   ecx,eax
   14001e5cf:	(bad)  
   14001e5d0:	(bad)  
   14001e5d1:	(bad)  
   14001e5d2:	xchg   ecx,eax
   14001e5d3:	(bad)  
   14001e5d4:	(bad)  
   14001e5d5:	(bad)  
   14001e5d6:	xchg   ecx,eax
   14001e5d7:	(bad)  
   14001e5d8:	(bad)  
   14001e5d9:	dec    BYTE PTR [rdi+0x59b0d2ff]
   14001e5df:	out    0xab,eax
   14001e5e1:	jo     0x14001e601
   14001e5e3:	int    0xaa
   14001e5e5:	jo     0x14001e605
   14001e5e7:	int    0xaa
   14001e5e9:	jo     0x14001e608
   14001e5eb:	(bad)  
   14001e5ec:	stos   BYTE PTR es:[rdi],al
   14001e5ed:	outs   dx,DWORD PTR ds:[rsi]
   14001e5ee:	sbb    eax,0x1d6faace
   14001e5f3:	(bad)  
   14001e5f4:	test   eax,0xa9ce1d6f
   14001e5f9:	outs   dx,DWORD PTR ds:[rsi]
   14001e5fa:	sbb    eax,0x1d6fa9ce
   14001e5ff:	(bad)  
   14001e600:	test   eax,0xa8ce1d6f
   14001e605:	outs   dx,BYTE PTR ds:[rsi]
   14001e606:	sbb    eax,0x1d6ea8cf
   14001e60b:	iret   
   14001e60c:	test   al,0x6e
   14001e60e:	sbb    eax,0x1d6ea8cf
   14001e613:	iret   
   14001e614:	test   al,0x6e
   14001e616:	sbb    eax,0x1d6ea7cf
   14001e61b:	iret   
   14001e61c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001e61d:	ins    DWORD PTR es:[rdi],dx
   14001e61e:	sbb    eax,0x1d6da7cf
   14001e623:	iret   
   14001e624:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001e625:	ins    DWORD PTR es:[rdi],dx
   14001e626:	sbb    eax,0x1c6da6cf
   14001e62b:	iret   
   14001e62c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001e62d:	ins    DWORD PTR es:[rdi],dx
   14001e62e:	sbb    al,0xcf
   14001e630:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001e631:	ins    DWORD PTR es:[rdi],dx
   14001e632:	sbb    al,0xcf
   14001e634:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001e635:	ins    BYTE PTR es:[rdi],dx
   14001e636:	sbb    al,0xcf
   14001e638:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001e639:	ins    BYTE PTR es:[rdi],dx
   14001e63a:	sbb    al,0xd0
   14001e63c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001e63d:	ins    BYTE PTR es:[rdi],dx
   14001e63e:	sbb    al,0xd0
   14001e640:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001e641:	ins    BYTE PTR es:[rdi],dx
   14001e642:	sbb    al,0xd0
   14001e644:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001e645:	ins    BYTE PTR es:[rdi],dx
   14001e646:	sbb    al,0xd0
   14001e648:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001e649:	imul   ebx,DWORD PTR [rax+rdx*8],0xffffffa4
   14001e64d:	imul   ebx,DWORD PTR [rax+rdx*8],0xffffffa4
   14001e651:	imul   ebx,DWORD PTR [rax+rdx*8],0xffffffa4
   14001e655:	imul   ebx,DWORD PTR [rcx+rdx*8],0xffffffa3
   14001e659:	imul   ebx,DWORD PTR [rcx+rdx*8],0xffffffa3
   14001e65d:	imul   ebx,DWORD PTR [rcx+rdx*8],0xffffffa3
   14001e661:	push   0x1c
   14001e663:	shl    DWORD PTR [rbx-0x5d2ee396],1
   14001e669:	push   0x1c
   14001e66b:	shl    DWORD PTR [rdx-0x5d2ee496],1
   14001e671:	push   0x1b
   14001e673:	shl    BYTE PTR [rdx-0x5e2de497],cl
   14001e679:	imul   ebx,DWORD PTR [rbx],0x1b69a1d2
   14001e67f:	shl    BYTE PTR [rcx-0x5e2de497],cl
   14001e685:	imul   ebx,DWORD PTR [rbx],0x1b69a0d2
   14001e68b:	shl    BYTE PTR [rax-0x5f2ce498],cl
   14001e691:	push   0x68a0d31b
   14001e696:	sbb    edx,ebx
   14001e698:	lahf   
   14001e699:	push   0x689fd31b
   14001e69e:	sbb    edx,ebx
   14001e6a0:	lahf   
   14001e6a1:	addr32 sbb edx,ebx
   14001e6a4:	lahf   
   14001e6a5:	addr32 sbb edx,ebx
   14001e6a8:	sahf   
   14001e6a9:	addr32 sbb edx,esp
   14001e6ac:	sahf   
   14001e6ad:	addr32 sbb dl,ah
   14001e6b0:	sahf   
   14001e6b1:	addr32 sbb dl,ah
   14001e6b4:	sahf   
   14001e6b5:	addr32 sbb dl,ah
   14001e6b8:	popf   
   14001e6b9:	data16 sbb dl,ah
   14001e6bc:	popf   
   14001e6bd:	data16 sbb dl,ah
   14001e6c0:	popf   
   14001e6c1:	data16 sbb dl,ah
   14001e6c4:	popf   
   14001e6c5:	data16 sbb dl,ch
   14001e6c8:	pushf  
   14001e6c9:	data16 sbb dl,ch
   14001e6cc:	pushf  
   14001e6cd:	gs sbb dl,ch
   14001e6d0:	fwait
   14001e6d1:	gs sbb dl,ch
   14001e6d4:	fwait
   14001e6d5:	fs sbb dl,ch
   14001e6d8:	(bad)  
   14001e6d9:	fs sbb ebp,edx
   14001e6dc:	cdq    
   14001e6dd:	movsxd ebx,DWORD PTR [rcx]
   14001e6df:	(bad)  
   14001e6e0:	cdq    
   14001e6e1:	movsxd ebx,DWORD PTR [rcx]
   14001e6e3:	(bad)  
   14001e6e4:	cwde   
   14001e6e5:	movsxd ebx,DWORD PTR [rcx]
   14001e6e7:	(bad)  
   14001e6e8:	cwde   
   14001e6e9:	(bad)  
   14001e6ea:	sbb    esi,edx
   14001e6ec:	xchg   edi,eax
   14001e6ed:	(bad)  
   14001e6ee:	sbb    esi,edx
   14001e6f0:	xchg   esi,eax
   14001e6f1:	(bad)  
   14001e6f2:	sbb    dh,dl
   14001e6f4:	xchg   esi,eax
   14001e6f5:	(bad)  
   14001e6f6:	sbb    dh,dl
   14001e6f8:	xchg   ebp,eax
   14001e6f9:	(bad)  
   14001e6fa:	sbb    dh,dl
   14001e6fc:	xchg   ebp,eax
   14001e6fd:	(bad)  
   14001e6fe:	sbb    BYTE PTR [rbp+0x6a186094],ch
	...
   14001e748:	nop
   14001e749:	(bad)  
   14001e74a:	std    
   14001e74b:	add    cl,BYTE PTR [rdi-0x71aa0201]
   14001e751:	(bad)  
   14001e752:	std    
   14001e753:	push   0xffffffffffffff8c
   14001e755:	(bad)  
   14001e756:	std    
   14001e757:	ins    DWORD PTR es:[rdi],dx
   14001e758:	mov    edi,edi
   14001e75a:	std    
   14001e75b:	jo     0x14001e6e3
   14001e75d:	(bad)  
   14001e75e:	(bad)  
   14001e75f:	jae    0x14001e7c6
   14001e761:	clc    
   14001e762:	(bad)  
   14001e763:	fisub  DWORD PTR [rsi-0xf]
   14001e766:	cld    
   14001e767:	not    DWORD PTR [rdx-0x20]
   14001e76a:	idiv   ebp
   14001e76c:	rex.RB (bad) 
   14001e76f:	(bad)  
   14001e770:	cmp    edx,edx
   14001e772:	cli    
   14001e773:	push   QWORD PTR [rbx]
   14001e775:	retf   
   14001e776:	cld    
   14001e777:	jmp    FWORD PTR [rsi]
   14001e779:	ret    0xfffb
   14001e77c:	sub    edi,DWORD PTR [rbp-0x47d70004]
   14001e782:	std    
   14001e783:	jmp    FWORD PTR [rbx]
   14001e785:	mov    eax,0xbd33fffc
   14001e78a:	std    
   14001e78b:	inc    DWORD PTR [rcx-0x3d]
   14001e78e:	sti    
   14001e78f:	inc    DWORD PTR [rsi-0x1e002830]
   14001e795:	fbstp  TBYTE PTR [rdx-0x1]
   14001e798:	lock call 0x133fbe713
   14001e79e:	js     0x14001e79f
   14001e7a0:	cld    
   14001e7a1:	clc    
   14001e7a2:	cmp    bh,0xfd
   14001e7a5:	cli    
   14001e7a6:	test   bh,bh
   14001e7a8:	(bad)  
   14001e7a9:	cld    
   14001e7aa:	mov    edi,edi
   14001e7ac:	(bad)  
   14001e7ad:	cld    
   14001e7ae:	mov    edi,edi
   14001e7b0:	(bad)  
   14001e7b1:	std    
   14001e7b2:	mov    edi,?
   14001e7b4:	(bad)  
   14001e7b5:	dec    BYTE PTR [rdi-0x70010101]
   14001e7bb:	(bad)  
   14001e7bc:	(bad)  
   14001e7bd:	(bad)  
   14001e7be:	nop
   14001e7bf:	(bad)  
   14001e7c0:	(bad)  
   14001e7c1:	(bad)  
   14001e7c2:	xchg   ebx,eax
   14001e7c3:	(bad)  
   14001e7c4:	(bad)  
   14001e7c5:	(bad)  
   14001e7c6:	xchg   esp,eax
   14001e7c7:	(bad)  
   14001e7c8:	(bad)  
   14001e7c9:	(bad)  
   14001e7ca:	xchg   ebx,eax
   14001e7cb:	(bad)  
   14001e7cc:	(bad)  
   14001e7cd:	(bad)  
   14001e7ce:	xchg   ebx,eax
   14001e7cf:	(bad)  
   14001e7d0:	(bad)  
   14001e7d1:	(bad)  
   14001e7d2:	xchg   edx,eax
   14001e7d3:	(bad)  
   14001e7d4:	(bad)  
   14001e7d5:	(bad)  
   14001e7d6:	xchg   ebx,eax
   14001e7d7:	(bad)  
   14001e7d8:	(bad)  
   14001e7d9:	(bad)  
   14001e7da:	xchg   ebx,eax
   14001e7db:	(bad)  
   14001e7dc:	(bad)  
   14001e7dd:	cld    
   14001e7de:	nop
   14001e7df:	(bad)  
   14001e7e0:	(bad)  
   14001e7e1:	cld    
   14001e7e2:	(bad)  
   14001e7e3:	(bad)  
   14001e7e4:	(bad)  
   14001e7e5:	sti    
   14001e7e6:	mov    edi,?
   14001e7e8:	(bad)  
   14001e7e9:	sti    
   14001e7ea:	mov    edi,edi
   14001e7ec:	(bad)  
   14001e7ed:	sti    
   14001e7ee:	(bad)  
   14001e7ef:	(bad)  
   14001e7f0:	(bad)  
   14001e7f1:	sti    
   14001e7f2:	mov    edi,edi
   14001e7f4:	(bad)  
   14001e7f5:	cli    
   14001e7f6:	mov    edi,edi
   14001e7f8:	(bad)  
   14001e7f9:	sti    
   14001e7fa:	mov    edi,edi
   14001e7fc:	push   rdi
   14001e7fe:	mov    bh,bh
   14001e800:	push   rdi
   14001e802:	mov    edi,edi
   14001e804:	push   rsi
   14001e806:	mov    edi,?
   14001e808:	push   rsi
   14001e80a:	(bad)  
   14001e80b:	(bad)  
   14001e80c:	push   rsi
   14001e80e:	(bad)  
   14001e80f:	(bad)  
   14001e810:	push   rdi
   14001e812:	mov    ?,edi
   14001e814:	(bad)  
   14001e815:	clc    
   14001e816:	(bad)  
   14001e817:	(bad)  
   14001e818:	(bad)  
   14001e819:	clc    
   14001e81a:	(bad)  
   14001e81b:	(bad)  
   14001e81c:	(bad)  
   14001e81d:	clc    
   14001e81e:	(bad)  
   14001e81f:	(bad)  
   14001e820:	(bad)  
   14001e821:	clc    
   14001e822:	(bad)  
   14001e823:	(bad)  
   14001e824:	(bad)  
   14001e825:	clc    
   14001e826:	(bad)  
   14001e827:	(bad)  
   14001e828:	(bad)  
   14001e829:	clc    
   14001e82a:	nop
   14001e82b:	(bad)  
   14001e82c:	(bad)  
   14001e82d:	clc    
   14001e82e:	xchg   ecx,eax
   14001e82f:	(bad)  
   14001e830:	(bad)  
   14001e831:	clc    
   14001e832:	xchg   edx,eax
   14001e833:	(bad)  
   14001e834:	(bad)  
   14001e835:	clc    
   14001e836:	xchg   ecx,eax
   14001e837:	(bad)  
   14001e838:	push   rdi
   14001e83a:	xchg   edx,eax
   14001e83b:	(bad)  
   14001e83c:	push   rdi
   14001e83e:	xchg   edx,eax
   14001e83f:	(bad)  
   14001e840:	push   rdi
   14001e842:	xchg   ebx,eax
   14001e843:	(bad)  
   14001e844:	push   rdi
   14001e846:	xchg   ebx,eax
   14001e847:	(bad)  
   14001e848:	push   rsi
   14001e84a:	xchg   ebp,eax
   14001e84b:	(bad)  
   14001e84c:	push   rsi
   14001e84e:	xchg   ebp,eax
   14001e84f:	(bad)  
   14001e850:	push   rsi
   14001e852:	xchg   ebp,eax
   14001e853:	(bad)  
   14001e854:	push   rsi
   14001e856:	xchg   esi,eax
   14001e857:	(bad)  
   14001e858:	push   rdi
   14001e85a:	xchg   esi,eax
   14001e85b:	(bad)  
   14001e85c:	push   rdi
   14001e85e:	xchg   esi,eax
   14001e85f:	(bad)  
   14001e860:	push   rdi
   14001e862:	xchg   esi,eax
   14001e863:	(bad)  
   14001e864:	push   rdi
   14001e866:	xchg   esi,eax
   14001e867:	(bad)  
   14001e868:	push   rdi
   14001e86a:	xchg   edi,eax
   14001e86b:	(bad)  
   14001e86c:	push   rdi
   14001e86e:	xchg   edi,eax
   14001e86f:	(bad)  
   14001e870:	push   rdi
   14001e872:	xchg   edi,eax
   14001e873:	(bad)  
   14001e874:	push   rdi
   14001e876:	xchg   edi,eax
   14001e877:	(bad)  
   14001e878:	(bad)  
   14001e879:	clc    
   14001e87a:	xchg   esi,eax
   14001e87b:	(bad)  
   14001e87c:	(bad)  
   14001e87d:	clc    
   14001e87e:	xchg   ebp,eax
   14001e87f:	(bad)  
   14001e880:	(bad)  
   14001e881:	clc    
   14001e882:	xchg   ebp,eax
   14001e883:	(bad)  
   14001e884:	push   rdi
   14001e886:	xchg   ebx,eax
   14001e887:	(bad)  
   14001e888:	push   rsi
   14001e88a:	xchg   ebx,eax
   14001e88b:	(bad)  
   14001e88c:	push   rsi
   14001e88e:	xchg   ebx,eax
   14001e88f:	(bad)  
   14001e890:	(bad)  
   14001e891:	not    BYTE PTR [rbx-0x6d0a0101]
   14001e897:	(bad)  
   14001e898:	(bad)  
   14001e899:	hlt    
   14001e89a:	(bad)  
   14001e89b:	(bad)  
   14001e89c:	(bad)  
   14001e89d:	repz mov edi,?
   14001e8a0:	(bad)  
   14001e8a1:	icebp  
   14001e8a2:	mov    edi,?
   14001e8a4:	(bad)  
   14001e8a5:	lock mov edi,edi
   14001e8a8:	(bad)  
   14001e8a9:	icebp  
   14001e8aa:	xchg   bh,bh
   14001e8ac:	(bad)  
   14001e8ad:	lock xchg bh,bh
   14001e8b0:	(bad)  
   14001e8b1:	out    dx,al
   14001e8b2:	cmp    edi,0xfffffffe
   14001e8b5:	in     eax,dx
   14001e8b6:	cmp    bh,0xfe
   14001e8b9:	(bad)  
   14001e8ba:	jp     0x14001e8bb
   14001e8bc:	std    
   14001e8bd:	out    0x77,al
   14001e8bf:	(bad)  
   14001e8c0:	cld    
   14001e8c1:	in     al,0x73
   14001e8c3:	(bad)  
   14001e8c4:	sti    
   14001e8c5:	loope  0x14001e936
   14001e8c7:	(bad)  
   14001e8c8:	cli    
   14001e8c9:	fld    TBYTE PTR [rdx-0x1]
   14001e8cc:	not    esp
   14001e8ce:	movsxd edi,edi
   14001e8d0:	repz rcr BYTE PTR [rsi-0x1],1
   14001e8d4:	icebp  
   14001e8d5:	retf   
   14001e8d6:	pop    rax
   14001e8d7:	(bad)  
   14001e8d8:	out    dx,eax
   14001e8d9:	(bad)  
   14001e8da:	push   rbx
   14001e8db:	(bad)  
   14001e8dc:	jmp    0x14001e89c
   14001e8de:	rex.WR (bad) 
   14001e8e0:	call   0x12301309c
   14001e8e5:	mov    dl,0x42
   14001e8e7:	jmp    rcx
   14001e8e9:	lods   al,BYTE PTR ds:[rsi]
   14001e8ea:	cmp    al,0xff
   14001e8ec:	fbld   TBYTE PTR [rbp-0x5d2500c9]
   14001e8f2:	xor    eax,0x319ad6ff
   14001e8f7:	call   rsp
   14001e8f9:	xchg   ebx,eax
   14001e8fa:	sub    eax,0x277dbaff
   14001e8ff:	hlt    
   14001e900:	xchg   ebp,eax
   14001e901:	(bad)  
   14001e902:	sbb    BYTE PTR [rdx+0x0],cl
	...
   14001e94c:	mov    ?,edi
   14001e94e:	std    
   14001e94f:	(bad)  
   14001e950:	(bad)  
   14001e951:	(bad)  
   14001e952:	std    
   14001e953:	push   0xffffffffffffff8b
   14001e955:	(bad)  
   14001e956:	std    
   14001e957:	ins    DWORD PTR es:[rdi],dx
   14001e958:	mov    bh,bh
   14001e95a:	std    
   14001e95b:	jno    0x14001e8e6
   14001e95d:	(bad)  
   14001e95e:	std    
   14001e95f:	je     0x14001e9cf
   14001e961:	cli    
   14001e962:	(bad)  
   14001e963:	xchg   esp,eax
   14001e964:	ins    BYTE PTR es:[rdi],dx
   14001e965:	repz cld 
   14001e967:	neg    DWORD PTR [rsp+riz*8-0x9]
   14001e96b:	std    
   14001e96c:	rex.WRB fdivp st(1),st
   14001e96f:	inc    DWORD PTR [rdx-0x28]
   14001e972:	cli    
   14001e973:	push   QWORD PTR [rdi]
   14001e975:	sar    ah,cl
   14001e977:	push   QWORD PTR [rdx]
   14001e979:	leave  
   14001e97a:	sti    
   14001e97b:	jmp    FWORD PTR [rip+0x29fffcc1]        # 0x16a01e642
   14001e981:	mov    ebp,0xb929fffd
   14001e986:	std    
   14001e987:	jmp    FWORD PTR [rdx+rdi*4]
   14001e98a:	std    
   14001e98b:	push   QWORD PTR [rsi]
   14001e98d:	mov    esi,0xc44dfffd
   14001e992:	clc    
   14001e993:	jmp    QWORD PTR [rsi-0x1700492a]
   14001e999:	loop   0x14001ea11
   14001e99b:	push   rsp
   14001e99d:	out    dx,eax
   14001e99e:	jp     0x14001e99f
   14001e9a0:	cld    
   14001e9a1:	test   DWORD PTR [rdx-0x7a050101],0x89fcfeff
   14001e9ab:	(bad)  
   14001e9ac:	(bad)  
   14001e9ad:	cld    
   14001e9ae:	mov    edi,?
   14001e9b0:	(bad)  
   14001e9b1:	std    
   14001e9b2:	mov    ?,edi
   14001e9b4:	(bad)  
   14001e9b5:	(bad)  
   14001e9b6:	xchg   edx,eax
   14001e9b7:	(bad)  
   14001e9b8:	(bad)  
   14001e9b9:	(bad)  
   14001e9ba:	xchg   edx,eax
   14001e9bb:	(bad)  
   14001e9bc:	(bad)  
   14001e9bd:	(bad)  
   14001e9be:	xchg   ebp,eax
   14001e9bf:	(bad)  
   14001e9c0:	(bad)  
   14001e9c1:	std    
   14001e9c2:	xchg   ebp,eax
   14001e9c3:	(bad)  
   14001e9c4:	(bad)  
   14001e9c5:	(bad)  
   14001e9c6:	xchg   esi,eax
   14001e9c7:	(bad)  
   14001e9c8:	(bad)  
   14001e9c9:	(bad)  
   14001e9ca:	xchg   ebp,eax
   14001e9cb:	(bad)  
   14001e9cc:	(bad)  
   14001e9cd:	(bad)  
   14001e9ce:	xchg   ebp,eax
   14001e9cf:	(bad)  
   14001e9d0:	(bad)  
   14001e9d1:	(bad)  
   14001e9d2:	xchg   esp,eax
   14001e9d3:	(bad)  
   14001e9d4:	(bad)  
   14001e9d5:	(bad)  
   14001e9d6:	xchg   esp,eax
   14001e9d7:	(bad)  
   14001e9d8:	(bad)  
   14001e9d9:	(bad)  
   14001e9da:	xchg   ebx,eax
   14001e9db:	(bad)  
   14001e9dc:	(bad)  
   14001e9dd:	(bad)  
   14001e9de:	xchg   esp,eax
   14001e9df:	(bad)  
   14001e9e0:	(bad)  
   14001e9e1:	cld    
   14001e9e2:	xchg   ebx,eax
   14001e9e3:	(bad)  
   14001e9e4:	(bad)  
   14001e9e5:	cld    
   14001e9e6:	xchg   edx,eax
   14001e9e7:	(bad)  
   14001e9e8:	(bad)  
   14001e9e9:	cld    
   14001e9ea:	xchg   edx,eax
   14001e9eb:	(bad)  
   14001e9ec:	(bad)  
   14001e9ed:	cli    
   14001e9ee:	xchg   ebx,eax
   14001e9ef:	(bad)  
   14001e9f0:	(bad)  
   14001e9f1:	cld    
   14001e9f2:	xchg   ebx,eax
   14001e9f3:	(bad)  
   14001e9f4:	(bad)  
   14001e9f5:	cld    
   14001e9f6:	xchg   ebx,eax
   14001e9f7:	(bad)  
   14001e9f8:	(bad)  
   14001e9f9:	cli    
   14001e9fa:	xchg   esp,eax
   14001e9fb:	(bad)  
   14001e9fc:	(bad)  
   14001e9fd:	cli    
   14001e9fe:	xchg   ebp,eax
   14001e9ff:	(bad)  
   14001ea00:	(bad)  
   14001ea01:	cli    
   14001ea02:	xchg   ebp,eax
   14001ea03:	(bad)  
   14001ea04:	(bad)  
   14001ea05:	sti    
   14001ea06:	xchg   esi,eax
   14001ea07:	(bad)  
   14001ea08:	(bad)  
   14001ea09:	sti    
   14001ea0a:	xchg   edi,eax
   14001ea0b:	(bad)  
   14001ea0c:	(bad)  
   14001ea0d:	sti    
   14001ea0e:	xchg   edi,eax
   14001ea0f:	(bad)  
   14001ea10:	(bad)  
   14001ea11:	sti    
   14001ea12:	cwde   
   14001ea13:	(bad)  
   14001ea14:	(bad)  
   14001ea15:	sti    
   14001ea16:	cwde   
   14001ea17:	(bad)  
   14001ea18:	(bad)  
   14001ea19:	stc    
   14001ea1a:	cdq    
   14001ea1b:	(bad)  
   14001ea1c:	(bad)  
   14001ea1d:	cli    
   14001ea1e:	(bad)  
   14001ea1f:	(bad)  
   14001ea20:	(bad)  
   14001ea21:	cli    
   14001ea22:	(bad)  
   14001ea23:	(bad)  
   14001ea24:	(bad)  
   14001ea25:	cli    
   14001ea26:	(bad)  
   14001ea27:	(bad)  
   14001ea28:	(bad)  
   14001ea29:	cli    
   14001ea2a:	fwait
   14001ea2b:	(bad)  
   14001ea2c:	(bad)  
   14001ea2d:	cli    
   14001ea2e:	pushf  
   14001ea2f:	(bad)  
   14001ea30:	(bad)  
   14001ea31:	cli    
   14001ea32:	pushf  
   14001ea33:	(bad)  
   14001ea34:	(bad)  
   14001ea35:	cli    
   14001ea36:	popf   
   14001ea37:	(bad)  
   14001ea38:	(bad)  
   14001ea39:	stc    
   14001ea3a:	sahf   
   14001ea3b:	(bad)  
   14001ea3c:	(bad)  
   14001ea3d:	stc    
   14001ea3e:	sahf   
   14001ea3f:	(bad)  
   14001ea40:	(bad)  
   14001ea41:	stc    
   14001ea42:	lahf   
   14001ea43:	(bad)  
   14001ea44:	(bad)  
   14001ea45:	stc    
   14001ea46:	sahf   
   14001ea47:	(bad)  
   14001ea48:	(bad)  
   14001ea49:	stc    
   14001ea4a:	sahf   
   14001ea4b:	(bad)  
   14001ea4c:	(bad)  
   14001ea4d:	stc    
   14001ea4e:	sahf   
   14001ea4f:	(bad)  
   14001ea50:	(bad)  
   14001ea51:	stc    
   14001ea52:	lahf   
   14001ea53:	(bad)  
   14001ea54:	(bad)  
   14001ea55:	stc    
   14001ea56:	movabs al,ds:0xa2faffffa0f9ffff
   14001ea5f:	(bad)  
   14001ea60:	(bad)  
   14001ea61:	cli    
   14001ea62:	movabs ds:0xa2faffffa2faffff,al
   14001ea6b:	(bad)  
   14001ea6c:	(bad)  
   14001ea6d:	cli    
   14001ea6e:	movabs ds:0xa2f9ffffa3f9ffff,eax
   14001ea77:	(bad)  
   14001ea78:	(bad)  
   14001ea79:	stc    
   14001ea7a:	movabs ds:0x9ff9ffffa2f9ffff,al
   14001ea83:	(bad)  
   14001ea84:	(bad)  
   14001ea85:	stc    
   14001ea86:	lahf   
   14001ea87:	(bad)  
   14001ea88:	(bad)  
   14001ea89:	stc    
   14001ea8a:	lahf   
   14001ea8b:	(bad)  
   14001ea8c:	(bad)  
   14001ea8d:	stc    
   14001ea8e:	lahf   
   14001ea8f:	(bad)  
   14001ea90:	(bad)  
   14001ea91:	stc    
   14001ea92:	popf   
   14001ea93:	(bad)  
   14001ea94:	(bad)  
   14001ea95:	clc    
   14001ea96:	pushf  
   14001ea97:	(bad)  
   14001ea98:	push   rsi
   14001ea9a:	cdq    
   14001ea9b:	(bad)  
   14001ea9c:	push   rsi
   14001ea9e:	cdq    
   14001ea9f:	(bad)  
   14001eaa0:	push   rsi
   14001eaa2:	xchg   esi,eax
   14001eaa3:	(bad)  
   14001eaa4:	push   rsi
   14001eaa6:	xchg   esp,eax
   14001eaa7:	(bad)  
   14001eaa8:	push   rsi
   14001eaaa:	xchg   ebx,eax
   14001eaab:	(bad)  
   14001eaac:	push   rbp
   14001eaae:	xchg   ecx,eax
   14001eaaf:	(bad)  
   14001eab0:	push   rbp
   14001eab2:	(bad)  
   14001eab3:	(bad)  
   14001eab4:	push   rdx
   14001eab6:	mov    edi,edi
   14001eab8:	push   rcx
   14001eaba:	xchg   edi,edi
   14001eabc:	push   rcx
   14001eabe:	cmp    edi,0xffffffff
   14001eac1:	out    dx,eax
   14001eac2:	jle    0x14001eac3
   14001eac4:	(bad)  
   14001eac5:	in     eax,dx
   14001eac6:	js     0x14001eac7
   14001eac8:	(bad)  
   14001eac9:	out    0x72,eax
   14001eacb:	(bad)  
   14001eacc:	sti    
   14001eacd:	loop   0x14001eb3d
   14001eacf:	(bad)  
   14001ead0:	stc    
   14001ead1:	frstor [rdi-0x1]
   14001ead4:	clc    
   14001ead5:	xlat   BYTE PTR ds:[rbx]
   14001ead6:	movsxd edi,edi
   14001ead8:	not    ah
   14001eada:	pop    rsp
   14001eadb:	push   rdx
   14001eadd:	int    0x57
   14001eadf:	push   rax
   14001eae1:	(bad)
   14001eae4:	in     eax,dx
   14001eae5:	ror    BYTE PTR [rbx-0x1],0xeb
   14001eae9:	mov    ecx,0xb3e6ff47
   14001eaee:	jmp    r12
   14001eaf1:	scas   eax,DWORD PTR es:[rdi]
   14001eaf2:	cmp    al,0xff
   14001eaf4:	loopne 0x14001ea9c
   14001eaf6:	cmp    bh,bh
   14001eaf8:	fstp   QWORD PTR [rsi-0x773c00cc]
   14001eafe:	sub    dh,dh
   14001eb00:	xchg   ebp,eax
   14001eb01:	(bad)  
   14001eb02:	sbb    BYTE PTR [rax+rax*1+0x0],bl
	...
   14001eb4d:	add    BYTE PTR [rax],al
   14001eb4f:	add    BYTE PTR [rbx-0x75c60201],cl
   14001eb55:	(bad)  
   14001eb56:	std    
   14001eb57:	outs   dx,DWORD PTR ds:[rsi]
   14001eb58:	mov    edi,edi
   14001eb5a:	std    
   14001eb5b:	jb     0x14001eae5
   14001eb5d:	(bad)  
   14001eb5e:	std    
   14001eb5f:	jne    0x14001eae3
   14001eb61:	(bad)  
   14001eb62:	std    
   14001eb63:	jns    0x14001ebc6
   14001eb65:	in     eax,dx
   14001eb66:	cld    
   14001eb67:	fsubr  QWORD PTR [rax-0x16]
   14001eb6a:	idiv   esi
   14001eb6c:	push   rdi
   14001eb6d:	in     al,0xf9
   14001eb6f:	dec    DWORD PTR [rcx-0x23]
   14001eb72:	cli    
   14001eb73:	(bad)  
   14001eb74:	cmp    eax,0x35fffbd6
   14001eb79:	sar    ch,1
   14001eb7b:	jmp    FWORD PTR [rdi]
   14001eb7d:	enter  0xfffd,0x2a
   14001eb81:	sar    ebp,0xff
   14001eb84:	sub    BYTE PTR [rbp+rdi*8-0x146d401],bh
   14001eb8b:	jmp    FWORD PTR [rdi]
   14001eb8d:	mov    ebx,0xc138fffd
   14001eb92:	std    
   14001eb93:	jmp    QWORD PTR [rax-0x37]
   14001eb96:	hlt    
   14001eb97:	inc    edi
   14001eb99:	fcom   QWORD PTR [rsi+0x79e8ecff]
   14001eb9f:	push   rdi
   14001eba1:	repz cmp edi,0xff87fafd
   14001eba8:	(bad)  
   14001eba9:	std    
   14001ebaa:	mov    edi,?
   14001ebac:	(bad)  
   14001ebad:	std    
   14001ebae:	(bad)  
   14001ebaf:	(bad)  
   14001ebb0:	(bad)  
   14001ebb1:	std    
   14001ebb2:	xchg   ecx,eax
   14001ebb3:	(bad)  
   14001ebb4:	(bad)  
   14001ebb5:	(bad)  
   14001ebb6:	xchg   esp,eax
   14001ebb7:	(bad)  
   14001ebb8:	(bad)  
   14001ebb9:	(bad)  
   14001ebba:	xchg   ebp,eax
   14001ebbb:	(bad)  
   14001ebbc:	(bad)  
   14001ebbd:	(bad)  
   14001ebbe:	xchg   esi,eax
   14001ebbf:	(bad)  
   14001ebc0:	(bad)  
   14001ebc1:	(bad)  
   14001ebc2:	cwde   
   14001ebc3:	(bad)  
   14001ebc4:	(bad)  
   14001ebc5:	(bad)  
   14001ebc6:	cwde   
   14001ebc7:	(bad)  
   14001ebc8:	(bad)  
   14001ebc9:	(bad)  
   14001ebca:	cwde   
   14001ebcb:	(bad)  
   14001ebcc:	(bad)  
   14001ebcd:	(bad)  
   14001ebce:	xchg   ebp,eax
   14001ebcf:	(bad)  
   14001ebd0:	(bad)  
   14001ebd1:	(bad)  
   14001ebd2:	xchg   ebp,eax
   14001ebd3:	(bad)  
   14001ebd4:	(bad)  
   14001ebd5:	(bad)  
   14001ebd6:	xchg   esi,eax
   14001ebd7:	(bad)  
   14001ebd8:	(bad)  
   14001ebd9:	(bad)  
   14001ebda:	xchg   ebp,eax
   14001ebdb:	(bad)  
   14001ebdc:	(bad)  
   14001ebdd:	(bad)  
   14001ebde:	xchg   ebp,eax
   14001ebdf:	(bad)  
   14001ebe0:	(bad)  
   14001ebe1:	(bad)  
   14001ebe2:	xchg   ebp,eax
   14001ebe3:	(bad)  
   14001ebe4:	(bad)  
   14001ebe5:	std    
   14001ebe6:	xchg   ebp,eax
   14001ebe7:	(bad)  
   14001ebe8:	(bad)  
   14001ebe9:	cld    
   14001ebea:	xchg   esp,eax
   14001ebeb:	(bad)  
   14001ebec:	(bad)  
   14001ebed:	cld    
   14001ebee:	xchg   ebx,eax
   14001ebef:	(bad)  
   14001ebf0:	(bad)  
   14001ebf1:	std    
   14001ebf2:	xchg   esp,eax
   14001ebf3:	(bad)  
   14001ebf4:	(bad)  
   14001ebf5:	cld    
   14001ebf6:	xchg   ebp,eax
   14001ebf7:	(bad)  
   14001ebf8:	(bad)  
   14001ebf9:	cld    
   14001ebfa:	xchg   ebp,eax
   14001ebfb:	(bad)  
   14001ebfc:	(bad)  
   14001ebfd:	cld    
   14001ebfe:	xchg   ebp,eax
   14001ebff:	(bad)  
   14001ec00:	(bad)  
   14001ec01:	cld    
   14001ec02:	xchg   esi,eax
   14001ec03:	(bad)  
   14001ec04:	(bad)  
   14001ec05:	cld    
   14001ec06:	xchg   esi,eax
   14001ec07:	(bad)  
   14001ec08:	(bad)  
   14001ec09:	sti    
   14001ec0a:	xchg   edi,eax
   14001ec0b:	(bad)  
   14001ec0c:	(bad)  
   14001ec0d:	sti    
   14001ec0e:	cwde   
   14001ec0f:	(bad)  
   14001ec10:	(bad)  
   14001ec11:	sti    
   14001ec12:	cdq    
   14001ec13:	(bad)  
   14001ec14:	(bad)  
   14001ec15:	sti    
   14001ec16:	cdq    
   14001ec17:	(bad)  
   14001ec18:	(bad)  
   14001ec19:	sti    
   14001ec1a:	(bad)  
   14001ec1b:	(bad)  
   14001ec1c:	(bad)  
   14001ec1d:	cld    
   14001ec1e:	fwait
   14001ec1f:	(bad)  
   14001ec20:	(bad)  
   14001ec21:	cli    
   14001ec22:	fwait
   14001ec23:	(bad)  
   14001ec24:	(bad)  
   14001ec25:	cli    
   14001ec26:	pushf  
   14001ec27:	(bad)  
   14001ec28:	(bad)  
   14001ec29:	cli    
   14001ec2a:	popf   
   14001ec2b:	(bad)  
   14001ec2c:	(bad)  
   14001ec2d:	cli    
   14001ec2e:	popf   
   14001ec2f:	(bad)  
   14001ec30:	(bad)  
   14001ec31:	cli    
   14001ec32:	pushf  
   14001ec33:	(bad)  
   14001ec34:	(bad)  
   14001ec35:	cli    
   14001ec36:	popf   
   14001ec37:	(bad)  
   14001ec38:	(bad)  
   14001ec39:	cli    
   14001ec3a:	sahf   
   14001ec3b:	(bad)  
   14001ec3c:	(bad)  
   14001ec3d:	stc    
   14001ec3e:	lahf   
   14001ec3f:	(bad)  
   14001ec40:	(bad)  
   14001ec41:	stc    
   14001ec42:	lahf   
   14001ec43:	(bad)  
   14001ec44:	(bad)  
   14001ec45:	stc    
   14001ec46:	movabs al,ds:0xa0f9ffffa0f9ffff
   14001ec4f:	(bad)  
   14001ec50:	(bad)  
   14001ec51:	cli    
   14001ec52:	movabs ds:0xa2faffffa2faffff,al
   14001ec5b:	(bad)  
   14001ec5c:	(bad)  
   14001ec5d:	cli    
   14001ec5e:	movabs ds:0xa2faffffa2faffff,al
   14001ec67:	(bad)  
   14001ec68:	(bad)  
   14001ec69:	cli    
   14001ec6a:	movabs ds:0xa2faffffa2faffff,al
   14001ec73:	(bad)  
   14001ec74:	(bad)  
   14001ec75:	cli    
   14001ec76:	movabs ds:0xa2faffffa2faffff,al
   14001ec7f:	(bad)  
   14001ec80:	(bad)  
   14001ec81:	cli    
   14001ec82:	movabs ds:0xa1f9ffffa1f9ffff,al
   14001ec8b:	(bad)  
   14001ec8c:	(bad)  
   14001ec8d:	stc    
   14001ec8e:	movabs al,ds:0x9ef7ffff9ef7ffff
   14001ec97:	(bad)  
   14001ec98:	(bad)  
   14001ec99:	clc    
   14001ec9a:	fwait
   14001ec9b:	(bad)  
   14001ec9c:	(bad)  
   14001ec9d:	clc    
   14001ec9e:	cdq    
   14001ec9f:	(bad)  
   14001eca0:	push   rdi
   14001eca2:	cdq    
   14001eca3:	(bad)  
   14001eca4:	push   rdi
   14001eca6:	xchg   esi,eax
   14001eca7:	(bad)  
   14001eca8:	push   rsi
   14001ecaa:	xchg   esp,eax
   14001ecab:	(bad)  
   14001ecac:	push   rbp
   14001ecae:	xchg   ecx,eax
   14001ecaf:	(bad)  
   14001ecb0:	push   rsp
   14001ecb2:	(bad)  
   14001ecb3:	(bad)  
   14001ecb4:	push   rbp
   14001ecb6:	mov    edi,edi
   14001ecb8:	push   rbx
   14001ecba:	mov    bh,bh
   14001ecbc:	push   rdx
   14001ecbe:	cmp    edi,0xffffffff
   14001ecc1:	lock jg 0x14001ecc3
   14001ecc4:	(bad)  
   14001ecc5:	in     al,dx
   14001ecc6:	jns    0x14001ecc7
   14001ecc8:	(bad)  
   14001ecc9:	call   0x12601ec41
   14001ecce:	outs   dx,BYTE PTR ds:[rsi]
   14001eccf:	(bad)  
   14001ecd0:	sti    
   14001ecd1:	fild   QWORD PTR [rax-0x1]
   14001ecd4:	stc    
   14001ecd5:	fsub   DWORD PTR [rbx-0x1]
   14001ecd8:	not    esp
   14001ecda:	pop    rbp
   14001ecdb:	push   rdx
   14001ecdd:	iret   
   14001ecde:	pop    rcx
   14001ecdf:	push   rcx
   14001ece1:	(bad)  
   14001ece2:	push   rbx
   14001ece3:	(bad)  
   14001ece4:	out    dx,al
   14001ece5:	ror    BYTE PTR [rsi-0x1],0xec
   14001ece9:	mov    edx,0xb4e7ff48
   14001ecee:	rex.XB jmp r13
   14001ecf1:	scas   eax,DWORD PTR es:[rdi]
   14001ecf2:	notrack jmp rbx
   14001ecf5:	test   eax,0xa1ddff3b
   14001ecfa:	(bad)  
   14001ecfb:	dec    ebx
   14001ecfd:	mov    gs,WORD PTR [rip+0x186196fb]        # 0x1586383fe
   14001ed03:	mov    al,0x0
	...
   14001ed4d:	add    BYTE PTR [rax],al
   14001ed4f:	add    BYTE PTR [rdx-0x76fc0201],cl
   14001ed55:	(bad)  
   14001ed56:	std    
   14001ed57:	pop    rcx
   14001ed58:	mov    bh,bh
   14001ed5a:	std    
   14001ed5b:	jae    0x14001ece3
   14001ed5d:	(bad)  
   14001ed5e:	std    
   14001ed5f:	jbe    0x14001ece6
   14001ed61:	(bad)  
   14001ed62:	std    
   14001ed63:	jp     0x14001edcc
   14001ed65:	in     eax,dx
   14001ed66:	stc    
   14001ed67:	fwait
   14001ed68:	push   0xffffffffffffffe9
   14001ed6a:	idiv   esi
   14001ed6c:	(bad)  
   14001ed6d:	jmp    0x12354ed6b
   14001ed72:	cli    
   14001ed73:	inc    DWORD PTR [rbp+rbx*8-0x4]
   14001ed77:	(bad)  
   14001ed78:	cmp    dl,dh
   14001ed7a:	std    
   14001ed7b:	push   QWORD PTR [rbx]
   14001ed7d:	iret   
   14001ed7e:	std    
   14001ed7f:	jmp    FWORD PTR [rax+rcx*8]
   14001ed82:	(bad)  
   14001ed83:	jmp    FWORD PTR [rbx]
   14001ed85:	sar    ch,0xff
   14001ed88:	sub    edi,DWORD PTR [rbp+rdi*8-0x245d401]
   14001ed8f:	push   QWORD PTR [rdx]
   14001ed91:	mov    ebp,0xc23efffd
   14001ed96:	cld    
   14001ed97:	push   QWORD PTR [rdi-0x32]
   14001ed9a:	call   0xc2e5cc9e
   14001ed9f:	push   rax
   14001eda1:	out    dx,al
   14001eda2:	(bad)  
   14001eda3:	(bad)  
   14001eda4:	cli    
   14001eda5:	clc    
   14001eda6:	mov    edi,edi
   14001eda8:	(bad)  
   14001eda9:	std    
   14001edaa:	mov    ?,edi
   14001edac:	(bad)  
   14001edad:	std    
   14001edae:	nop
   14001edaf:	(bad)  
   14001edb0:	(bad)  
   14001edb1:	std    
   14001edb2:	xchg   ebx,eax
   14001edb3:	(bad)  
   14001edb4:	(bad)  
   14001edb5:	(bad)  
   14001edb6:	xchg   ebp,eax
   14001edb7:	(bad)  
   14001edb8:	(bad)  
   14001edb9:	(bad)  
   14001edba:	xchg   edi,eax
   14001edbb:	(bad)  
   14001edbc:	(bad)  
   14001edbd:	(bad)  
   14001edbe:	cwde   
   14001edbf:	(bad)  
   14001edc0:	(bad)  
   14001edc1:	(bad)  
   14001edc2:	cdq    
   14001edc3:	(bad)  
   14001edc4:	(bad)  
   14001edc5:	(bad)  
   14001edc6:	cdq    
   14001edc7:	(bad)  
   14001edc8:	(bad)  
   14001edc9:	(bad)  
   14001edca:	cdq    
   14001edcb:	(bad)  
   14001edcc:	(bad)  
   14001edcd:	(bad)  
   14001edce:	cwde   
   14001edcf:	(bad)  
   14001edd0:	(bad)  
   14001edd1:	(bad)  
   14001edd2:	xchg   edi,eax
   14001edd3:	(bad)  
   14001edd4:	(bad)  
   14001edd5:	(bad)  
   14001edd6:	xchg   esi,eax
   14001edd7:	(bad)  
   14001edd8:	(bad)  
   14001edd9:	(bad)  
   14001edda:	xchg   edi,eax
   14001eddb:	(bad)  
   14001eddc:	(bad)  
   14001eddd:	(bad)  
   14001edde:	xchg   esi,eax
   14001eddf:	(bad)  
   14001ede0:	(bad)  
   14001ede1:	(bad)  
   14001ede2:	xchg   esi,eax
   14001ede3:	(bad)  
   14001ede4:	(bad)  
   14001ede5:	std    
   14001ede6:	xchg   esi,eax
   14001ede7:	(bad)  
   14001ede8:	(bad)  
   14001ede9:	cld    
   14001edea:	xchg   esp,eax
   14001edeb:	(bad)  
   14001edec:	(bad)  
   14001eded:	std    
   14001edee:	xchg   ebp,eax
   14001edef:	(bad)  
   14001edf0:	(bad)  
   14001edf1:	std    
   14001edf2:	xchg   ebp,eax
   14001edf3:	(bad)  
   14001edf4:	(bad)  
   14001edf5:	std    
   14001edf6:	xchg   ebp,eax
   14001edf7:	(bad)  
   14001edf8:	(bad)  
   14001edf9:	std    
   14001edfa:	xchg   esi,eax
   14001edfb:	(bad)  
   14001edfc:	(bad)  
   14001edfd:	std    
   14001edfe:	xchg   esi,eax
   14001edff:	(bad)  
   14001ee00:	(bad)  
   14001ee01:	sti    
   14001ee02:	xchg   edi,eax
   14001ee03:	(bad)  
   14001ee04:	(bad)  
   14001ee05:	sti    
   14001ee06:	cdq    
   14001ee07:	(bad)  
   14001ee08:	(bad)  
   14001ee09:	sti    
   14001ee0a:	cdq    
   14001ee0b:	(bad)  
   14001ee0c:	(bad)  
   14001ee0d:	sti    
   14001ee0e:	cwde   
   14001ee0f:	(bad)  
   14001ee10:	(bad)  
   14001ee11:	sti    
   14001ee12:	cdq    
   14001ee13:	(bad)  
   14001ee14:	(bad)  
   14001ee15:	sti    
   14001ee16:	cdq    
   14001ee17:	(bad)  
   14001ee18:	(bad)  
   14001ee19:	cld    
   14001ee1a:	fwait
   14001ee1b:	(bad)  
   14001ee1c:	(bad)  
   14001ee1d:	cld    
   14001ee1e:	fwait
   14001ee1f:	(bad)  
   14001ee20:	(bad)  
   14001ee21:	cld    
   14001ee22:	fwait
   14001ee23:	(bad)  
   14001ee24:	(bad)  
   14001ee25:	cld    
   14001ee26:	pushf  
   14001ee27:	(bad)  
   14001ee28:	(bad)  
   14001ee29:	cld    
   14001ee2a:	popf   
   14001ee2b:	(bad)  
   14001ee2c:	(bad)  
   14001ee2d:	cld    
   14001ee2e:	popf   
   14001ee2f:	(bad)  
   14001ee30:	(bad)  
   14001ee31:	cli    
   14001ee32:	popf   
   14001ee33:	(bad)  
   14001ee34:	(bad)  
   14001ee35:	cli    
   14001ee36:	sahf   
   14001ee37:	(bad)  
   14001ee38:	(bad)  
   14001ee39:	sti    
   14001ee3a:	lahf   
   14001ee3b:	(bad)  
   14001ee3c:	(bad)  
   14001ee3d:	cli    
   14001ee3e:	lahf   
   14001ee3f:	(bad)  
   14001ee40:	(bad)  
   14001ee41:	stc    
   14001ee42:	movabs al,ds:0xa0fbffffa0fbffff
   14001ee4b:	(bad)  
   14001ee4c:	(bad)  
   14001ee4d:	sti    
   14001ee4e:	movabs al,ds:0xa2faffffa2fbffff
   14001ee57:	(bad)  
   14001ee58:	(bad)  
   14001ee59:	cli    
   14001ee5a:	movabs ds:0xa2faffffa2faffff,al
   14001ee63:	(bad)  
   14001ee64:	(bad)  
   14001ee65:	cli    
   14001ee66:	movabs ds:0xa2faffffa2faffff,al
   14001ee6f:	(bad)  
   14001ee70:	(bad)  
   14001ee71:	cli    
   14001ee72:	movabs ds:0xa2faffffa2faffff,al
   14001ee7b:	(bad)  
   14001ee7c:	(bad)  
   14001ee7d:	cli    
   14001ee7e:	movabs ds:0xa3faffffa3faffff,al
   14001ee87:	(bad)  
   14001ee88:	(bad)  
   14001ee89:	stc    
   14001ee8a:	movabs al,ds:0x9ef9ffff9ff9ffff
   14001ee93:	(bad)  
   14001ee94:	push   rdi
   14001ee96:	sahf   
   14001ee97:	(bad)  
   14001ee98:	push   rdi
   14001ee9a:	pushf  
   14001ee9b:	(bad)  
   14001ee9c:	(bad)  
   14001ee9d:	clc    
   14001ee9e:	(bad)  
   14001ee9f:	(bad)  
   14001eea0:	(bad)  
   14001eea1:	clc    
   14001eea2:	cwde   
   14001eea3:	(bad)  
   14001eea4:	push   rdi
   14001eea6:	xchg   ebp,eax
   14001eea7:	(bad)  
   14001eea8:	push   rdi
   14001eeaa:	xchg   ebx,eax
   14001eeab:	(bad)  
   14001eeac:	push   rbp
   14001eeae:	xchg   ecx,eax
   14001eeaf:	(bad)  
   14001eeb0:	push   rbp
   14001eeb2:	mov    ?,edi
   14001eeb4:	push   rsp
   14001eeb6:	mov    bh,bh
   14001eeb8:	push   rdx
   14001eeba:	xchg   edi,edi
   14001eebc:	push   rdx
   14001eebe:	(bad)  
   14001eebf:	(bad)  
   14001eec0:	push   rax
   14001eec2:	cmp    bh,0xff
   14001eec5:	in     al,dx
   14001eec6:	jns    0x14001eec7
   14001eec8:	(bad)  
   14001eec9:	call   0x12601ee41
   14001eece:	outs   dx,BYTE PTR ds:[rsi]
   14001eecf:	(bad)  
   14001eed0:	sti    
   14001eed1:	fild   QWORD PTR [rax-0x1]
   14001eed4:	cli    
   14001eed5:	fisub  DWORD PTR [rdi+rdi*8-0x8]
   14001eed9:	(bad)  
   14001eeda:	pop    rbp
   14001eedb:	push   rsp
   14001eedd:	iret   
   14001eede:	pop    rcx
   14001eedf:	push   rdx
   14001eee1:	retf   0xff53
   14001eee4:	out    dx,al
   14001eee5:	ret    0xff4f
   14001eee8:	jmp    0x14001eea6
   14001eeea:	rex.WB jmp r15
   14001eeed:	mov    ch,0x45
   14001eeef:	jmp    rbp
   14001eef1:	mov    cl,0x40
   14001eef3:	jmp    rcx
   14001eef5:	test   eax,0xa2deff3c
   14001eefa:	(bad)  
   14001eefb:	dec    edi
   14001eefd:	xchg   ecx,eax
   14001eefe:	cs std 
   14001ef00:	xchg   edi,eax
   14001ef01:	(bad)  
   14001ef02:	sbb    DWORD PTR [rdi+0x0],edi
	...
   14001ef54:	mov    bh,bh
   14001ef56:	std    
   14001ef57:	ja     0xc56fed5c
   14001ef5d:	(bad)  
   14001ef5e:	std    
   14001ef5f:	jbe    0x14001eee5
   14001ef61:	(bad)  
   14001ef62:	std    
   14001ef63:	jns    0x14001efda
   14001ef65:	icebp  
   14001ef66:	clc    
   14001ef67:	(bad)  
   14001ef68:	imul   ebx,ebx,0xfffffff3
   14001ef6b:	imul   DWORD PTR [rsi-0x12]
   14001ef6e:	stc    
   14001ef6f:	call   FWORD PTR [rdi-0x18]
   14001ef72:	cli    
   14001ef73:	dec    DWORD PTR [rsi-0x1d]
   14001ef76:	cld    
   14001ef77:	inc    DWORD PTR [rcx-0x24]
   14001ef7a:	std    
   14001ef7b:	(bad)  
   14001ef7c:	cmp    ebp,edx
   14001ef7e:	(bad)  
   14001ef7f:	push   QWORD PTR [rax]
   14001ef81:	int    0xfe
   14001ef83:	jmp    FWORD PTR [rax*8-0x3fd50001]
   14001ef8a:	(bad)  
   14001ef8b:	jmp    FWORD PTR [rbx]
   14001ef8d:	mov    edx,0xb92efffe
   14001ef92:	(bad)  
   14001ef93:	push   QWORD PTR [rdi*4-0x3cb80003]
   14001ef9a:	cli    
   14001ef9b:	call   QWORD PTR [rbp-0x17002f2a]
   14001efa1:	out    0x82,eax
   14001efa3:	push   rsp
   14001efa5:	repnz mov edi,edi
   14001efa8:	sti    
   14001efa9:	cli    
   14001efaa:	(bad)  
   14001efab:	(bad)  
   14001efac:	(bad)  
   14001efad:	std    
   14001efae:	xchg   ebx,eax
   14001efaf:	(bad)  
   14001efb0:	(bad)  
   14001efb1:	std    
   14001efb2:	xchg   esp,eax
   14001efb3:	(bad)  
   14001efb4:	(bad)  
   14001efb5:	(bad)  
   14001efb6:	xchg   esi,eax
   14001efb7:	(bad)  
   14001efb8:	(bad)  
   14001efb9:	(bad)  
   14001efba:	cdq    
   14001efbb:	(bad)  
   14001efbc:	(bad)  
   14001efbd:	(bad)  
   14001efbe:	fwait
   14001efbf:	(bad)  
   14001efc0:	(bad)  
   14001efc1:	(bad)  
   14001efc2:	pushf  
   14001efc3:	(bad)  
   14001efc4:	(bad)  
   14001efc5:	(bad)  
   14001efc6:	fwait
   14001efc7:	(bad)  
   14001efc8:	(bad)  
   14001efc9:	(bad)  
   14001efca:	(bad)  
   14001efcb:	(bad)  
   14001efcc:	(bad)  
   14001efcd:	(bad)  
   14001efce:	fwait
   14001efcf:	(bad)  
   14001efd0:	(bad)  
   14001efd1:	(bad)  
   14001efd2:	(bad)  
   14001efd3:	(bad)  
   14001efd4:	(bad)  
   14001efd5:	(bad)  
   14001efd6:	cwde   
   14001efd7:	(bad)  
   14001efd8:	(bad)  
   14001efd9:	(bad)  
   14001efda:	cwde   
   14001efdb:	(bad)  
   14001efdc:	(bad)  
   14001efdd:	(bad)  
   14001efde:	cwde   
   14001efdf:	(bad)  
   14001efe0:	(bad)  
   14001efe1:	(bad)  
   14001efe2:	xchg   edi,eax
   14001efe3:	(bad)  
   14001efe4:	(bad)  
   14001efe5:	(bad)  
   14001efe6:	xchg   edi,eax
   14001efe7:	(bad)  
   14001efe8:	(bad)  
   14001efe9:	std    
   14001efea:	xchg   esi,eax
   14001efeb:	(bad)  
   14001efec:	(bad)  
   14001efed:	std    
   14001efee:	xchg   esi,eax
   14001efef:	(bad)  
   14001eff0:	(bad)  
   14001eff1:	std    
   14001eff2:	xchg   esi,eax
   14001eff3:	(bad)  
   14001eff4:	(bad)  
   14001eff5:	std    
   14001eff6:	xchg   esi,eax
   14001eff7:	(bad)  
   14001eff8:	(bad)  
   14001eff9:	std    
   14001effa:	xchg   esi,eax
   14001effb:	(bad)  
   14001effc:	(bad)  
   14001effd:	std    
   14001effe:	cwde   
   14001efff:	(bad)  
   14001f000:	(bad)  
   14001f001:	std    
   14001f002:	cwde   
   14001f003:	(bad)  
   14001f004:	(bad)  
   14001f005:	std    
   14001f006:	cdq    
   14001f007:	(bad)  
   14001f008:	(bad)  
   14001f009:	std    
   14001f00a:	cdq    
   14001f00b:	(bad)  
   14001f00c:	(bad)  
   14001f00d:	std    
   14001f00e:	(bad)  
   14001f00f:	(bad)  
   14001f010:	(bad)  
   14001f011:	std    
   14001f012:	(bad)  
   14001f013:	(bad)  
   14001f014:	(bad)  
   14001f015:	cld    
   14001f016:	pushf  
   14001f017:	(bad)  
   14001f018:	(bad)  
   14001f019:	cld    
   14001f01a:	pushf  
   14001f01b:	(bad)  
   14001f01c:	(bad)  
   14001f01d:	cld    
   14001f01e:	pushf  
   14001f01f:	(bad)  
   14001f020:	(bad)  
   14001f021:	cld    
   14001f022:	fwait
   14001f023:	(bad)  
   14001f024:	(bad)  
   14001f025:	cld    
   14001f026:	pushf  
   14001f027:	(bad)  
   14001f028:	(bad)  
   14001f029:	cld    
   14001f02a:	popf   
   14001f02b:	(bad)  
   14001f02c:	(bad)  
   14001f02d:	cld    
   14001f02e:	popf   
   14001f02f:	(bad)  
   14001f030:	(bad)  
   14001f031:	cld    
   14001f032:	popf   
   14001f033:	(bad)  
   14001f034:	(bad)  
   14001f035:	cld    
   14001f036:	lahf   
   14001f037:	(bad)  
   14001f038:	(bad)  
   14001f039:	cld    
   14001f03a:	lahf   
   14001f03b:	(bad)  
   14001f03c:	(bad)  
   14001f03d:	stc    
   14001f03e:	movabs al,ds:0xa1fbffffa1faffff
   14001f047:	(bad)  
   14001f048:	(bad)  
   14001f049:	sti    
   14001f04a:	movabs eax,ds:0xa2fbffffa1fbffff
   14001f053:	(bad)  
   14001f054:	(bad)  
   14001f055:	sti    
   14001f056:	movabs ds:0xa2fbffffa2fbffff,al
   14001f05f:	(bad)  
   14001f060:	(bad)  
   14001f061:	sti    
   14001f062:	movabs ds:0xa2faffffa2fbffff,al
   14001f06b:	(bad)  
   14001f06c:	(bad)  
   14001f06d:	cli    
   14001f06e:	movabs ds:0xa2faffffa2faffff,al
   14001f077:	(bad)  
   14001f078:	(bad)  
   14001f079:	cli    
   14001f07a:	movabs ds:0xa3faffffa3faffff,eax
   14001f083:	(bad)  
   14001f084:	(bad)  
   14001f085:	cli    
   14001f086:	movabs ds:0xa0f8ffffa0f9ffff,eax
   14001f08f:	(bad)  
   14001f090:	(bad)  
   14001f091:	clc    
   14001f092:	movabs al,ds:0x9cf8ffff9df9ffff
   14001f09b:	(bad)  
   14001f09c:	(bad)  
   14001f09d:	stc    
   14001f09e:	cdq    
   14001f09f:	(bad)  
   14001f0a0:	(bad)  
   14001f0a1:	clc    
   14001f0a2:	cwde   
   14001f0a3:	(bad)  
   14001f0a4:	push   rdi
   14001f0a6:	xchg   ebp,eax
   14001f0a7:	(bad)  
   14001f0a8:	push   rdi
   14001f0aa:	xchg   esp,eax
   14001f0ab:	(bad)  
   14001f0ac:	push   rbp
   14001f0ae:	xchg   edx,eax
   14001f0af:	(bad)  
   14001f0b0:	push   rbp
   14001f0b2:	mov    ?,edi
   14001f0b4:	push   rsp
   14001f0b6:	mov    edi,edi
   14001f0b8:	push   rdx
   14001f0ba:	xchg   edi,edi
   14001f0bc:	push   rcx
   14001f0be:	cmp    edi,0xffffffff
   14001f0c1:	out    dx,eax
   14001f0c2:	cmp    bh,0xff
   14001f0c5:	out    dx,al
   14001f0c6:	jnp    0x14001f0c7
   14001f0c8:	(bad)  
   14001f0c9:	(bad)  
   14001f0ca:	je     0x14001f0cb
   14001f0cc:	jmp    rbp
   14001f0ce:	outs   dx,BYTE PTR ds:[rsi]
   14001f0cf:	(bad)  
   14001f0d0:	sti    
   14001f0d1:	fild   QWORD PTR [rdx-0x1]
   14001f0d4:	cli    
   14001f0d5:	fisub  DWORD PTR [rdi+rdi*8-0x8]
   14001f0d9:	(bad)  
   14001f0da:	pop    rbp
   14001f0db:	push   rsp
   14001f0dd:	iret   
   14001f0de:	pop    rcx
   14001f0df:	push   rdx
   14001f0e1:	leave  
   14001f0e2:	push   rsp
   14001f0e3:	(bad)  
   14001f0e4:	out    dx,eax
   14001f0e5:	ret    
   14001f0e6:	rex.WRX (bad) 
   14001f0e8:	in     al,dx
   14001f0e9:	mov    esp,0xb6e9ff4a
   14001f0ee:	rex.RB jmp r14
   14001f0f1:	mov    al,0x41
   14001f0f3:	jmp    rbx
   14001f0f5:	stos   BYTE PTR es:[rdi],al
   14001f0f6:	cmp    edi,edi
   14001f0f8:	fisub  WORD PTR [rbp-0x6b2c00c9]
   14001f0fe:	(bad)  
   14001f0ff:	std    
   14001f100:	xchg   edi,eax
   14001f101:	(bad)  
   14001f102:	sbb    ecx,ecx
	...
   14001f158:	test   edi,edi
   14001f15a:	std    
   14001f15b:	sub    eax,DWORD PTR [rdi+rdi*8-0x7c8803]
   14001f162:	std    
   14001f163:	jp     0x14001f1de
   14001f165:	repz stc 
   14001f167:	or     DWORD PTR [rbp+0x6fecbcd4],0x6dfff9eb
   14001f171:	out    dx,al
   14001f172:	cli    
   14001f173:	call   FWORD PTR [rcx-0x18]
   14001f176:	cld    
   14001f177:	dec    DWORD PTR [rbx-0x1f]
   14001f17a:	std    
   14001f17b:	(bad)  
   14001f17c:	(bad)  
   14001f17d:	(bad)  
   14001f17f:	push   QWORD PTR [rip+0x30fffed3]        # 0x17101f058
   14001f185:	int    0xff
   14001f187:	jmp    FWORD PTR [rip+0x2afffec4]        # 0x16b01f051
   14001f18d:	mov    ebp,0xba2bfffe
   14001f192:	(bad)  
   14001f193:	jmp    FWORD PTR [rsi]
   14001f195:	mov    edx,0xc036fffd
   14001f19a:	std    
   14001f19b:	call   QWORD PTR [rcx-0x3b]
   14001f19e:	clc    
   14001f19f:	jmp    FWORD PTR [rdi-0x13004725]
   14001f1a5:	jmp    0x14001f130
   14001f1a7:	push   rsi
   14001f1a9:	cmc    
   14001f1aa:	mov    ?,edi
   14001f1ac:	cld    
   14001f1ad:	sti    
   14001f1ae:	xchg   ebx,eax
   14001f1af:	(bad)  
   14001f1b0:	(bad)  
   14001f1b1:	(bad)  
   14001f1b2:	cwde   
   14001f1b3:	(bad)  
   14001f1b4:	(bad)  
   14001f1b5:	(bad)  
   14001f1b6:	cdq    
   14001f1b7:	(bad)  
   14001f1b8:	(bad)  
   14001f1b9:	(bad)  
   14001f1ba:	fwait
   14001f1bb:	(bad)  
   14001f1bc:	(bad)  
   14001f1bd:	(bad)  
   14001f1be:	pushf  
   14001f1bf:	(bad)  
   14001f1c0:	(bad)  
   14001f1c1:	(bad)  
   14001f1c2:	sahf   
   14001f1c3:	(bad)  
   14001f1c4:	(bad)  
   14001f1c5:	(bad)  
   14001f1c6:	sahf   
   14001f1c7:	(bad)  
   14001f1c8:	(bad)  
   14001f1c9:	(bad)  
   14001f1ca:	popf   
   14001f1cb:	(bad)  
   14001f1cc:	(bad)  
   14001f1cd:	(bad)  
   14001f1ce:	pushf  
   14001f1cf:	(bad)  
   14001f1d0:	(bad)  
   14001f1d1:	(bad)  
   14001f1d2:	pushf  
   14001f1d3:	(bad)  
   14001f1d4:	(bad)  
   14001f1d5:	(bad)  
   14001f1d6:	pushf  
   14001f1d7:	(bad)  
   14001f1d8:	(bad)  
   14001f1d9:	(bad)  
   14001f1da:	cdq    
   14001f1db:	(bad)  
   14001f1dc:	(bad)  
   14001f1dd:	(bad)  
   14001f1de:	cdq    
   14001f1df:	(bad)  
   14001f1e0:	(bad)  
   14001f1e1:	(bad)  
   14001f1e2:	cdq    
   14001f1e3:	(bad)  
   14001f1e4:	(bad)  
   14001f1e5:	std    
   14001f1e6:	(bad)  
   14001f1e7:	(bad)  
   14001f1e8:	(bad)  
   14001f1e9:	std    
   14001f1ea:	cdq    
   14001f1eb:	(bad)  
   14001f1ec:	(bad)  
   14001f1ed:	std    
   14001f1ee:	cdq    
   14001f1ef:	(bad)  
   14001f1f0:	(bad)  
   14001f1f1:	std    
   14001f1f2:	cwde   
   14001f1f3:	(bad)  
   14001f1f4:	(bad)  
   14001f1f5:	std    
   14001f1f6:	cwde   
   14001f1f7:	(bad)  
   14001f1f8:	(bad)  
   14001f1f9:	std    
   14001f1fa:	cwde   
   14001f1fb:	(bad)  
   14001f1fc:	(bad)  
   14001f1fd:	std    
   14001f1fe:	cwde   
   14001f1ff:	(bad)  
   14001f200:	(bad)  
   14001f201:	std    
   14001f202:	cdq    
   14001f203:	(bad)  
   14001f204:	(bad)  
   14001f205:	std    
   14001f206:	cdq    
   14001f207:	(bad)  
   14001f208:	(bad)  
   14001f209:	std    
   14001f20a:	(bad)  
   14001f20b:	(bad)  
   14001f20c:	(bad)  
   14001f20d:	std    
   14001f20e:	(bad)  
   14001f20f:	(bad)  
   14001f210:	(bad)  
   14001f211:	std    
   14001f212:	(bad)  
   14001f213:	(bad)  
   14001f214:	(bad)  
   14001f215:	std    
   14001f216:	pushf  
   14001f217:	(bad)  
   14001f218:	(bad)  
   14001f219:	std    
   14001f21a:	pushf  
   14001f21b:	(bad)  
   14001f21c:	(bad)  
   14001f21d:	std    
   14001f21e:	pushf  
   14001f21f:	(bad)  
   14001f220:	(bad)  
   14001f221:	cld    
   14001f222:	popf   
   14001f223:	(bad)  
   14001f224:	(bad)  
   14001f225:	cld    
   14001f226:	sahf   
   14001f227:	(bad)  
   14001f228:	(bad)  
   14001f229:	cld    
   14001f22a:	sahf   
   14001f22b:	(bad)  
   14001f22c:	(bad)  
   14001f22d:	cld    
   14001f22e:	popf   
   14001f22f:	(bad)  
   14001f230:	(bad)  
   14001f231:	cld    
   14001f232:	sahf   
   14001f233:	(bad)  
   14001f234:	(bad)  
   14001f235:	cld    
   14001f236:	lahf   
   14001f237:	(bad)  
   14001f238:	(bad)  
   14001f239:	sti    
   14001f23a:	movabs al,ds:0xa1fcffffa0fbffff
   14001f243:	(bad)  
   14001f244:	(bad)  
   14001f245:	sti    
   14001f246:	movabs eax,ds:0xa2fbffffa1fbffff
   14001f24f:	(bad)  
   14001f250:	(bad)  
   14001f251:	sti    
   14001f252:	movabs ds:0xa2fbffffa2fbffff,eax
   14001f25b:	(bad)  
   14001f25c:	(bad)  
   14001f25d:	sti    
   14001f25e:	movabs ds:0xa2fbffffa2fbffff,al
   14001f267:	(bad)  
   14001f268:	(bad)  
   14001f269:	sti    
   14001f26a:	movabs ds:0xa2fbffffa2fbffff,al
   14001f273:	(bad)  
   14001f274:	(bad)  
   14001f275:	cli    
   14001f276:	movabs ds:0xa3faffffa2faffff,eax
   14001f27f:	(bad)  
   14001f280:	(bad)  
   14001f281:	cli    
   14001f282:	movabs ds:0xa0f9ffffa2faffff,eax
   14001f28b:	(bad)  
   14001f28c:	(bad)  
   14001f28d:	clc    
   14001f28e:	movabs al,ds:0x9cf9ffff9ff8ffff
   14001f297:	(bad)  
   14001f298:	(bad)  
   14001f299:	stc    
   14001f29a:	pushf  
   14001f29b:	(bad)  
   14001f29c:	(bad)  
   14001f29d:	clc    
   14001f29e:	(bad)  
   14001f29f:	(bad)  
   14001f2a0:	(bad)  
   14001f2a1:	clc    
   14001f2a2:	xchg   edi,eax
   14001f2a3:	(bad)  
   14001f2a4:	push   rdi
   14001f2a6:	xchg   edi,eax
   14001f2a7:	(bad)  
   14001f2a8:	push   rdi
   14001f2aa:	xchg   esp,eax
   14001f2ab:	(bad)  
   14001f2ac:	push   rbp
   14001f2ae:	xchg   edx,eax
   14001f2af:	(bad)  
   14001f2b0:	push   rbp
   14001f2b2:	mov    ?,edi
   14001f2b4:	push   rbp
   14001f2b6:	mov    edi,edi
   14001f2b8:	push   rbx
   14001f2ba:	xchg   bh,bh
   14001f2bc:	push   rcx
   14001f2be:	test   bh,bh
   14001f2c0:	(bad)  
   14001f2c1:	out    dx,eax
   14001f2c2:	jg     0x14001f2c3
   14001f2c4:	(bad)  
   14001f2c5:	out    dx,al
   14001f2c6:	jp     0x14001f2c7
   14001f2c8:	(bad)  
   14001f2c9:	(bad)  
   14001f2ca:	jae    0x14001f2cb
   14001f2cc:	jmp    rbp
   14001f2ce:	outs   dx,BYTE PTR ds:[rsi]
   14001f2cf:	(bad)  
   14001f2d0:	sti    
   14001f2d1:	loope  0x14001f33d
   14001f2d3:	(bad)  
   14001f2d4:	cli    
   14001f2d5:	fisub  DWORD PTR [rdi+rdi*8-0x9]
   14001f2d9:	(bad)  
   14001f2da:	pop    rdi
   14001f2db:	push   rbp
   14001f2dd:	iret   
   14001f2de:	pop    rcx
   14001f2df:	push   rdx
   14001f2e1:	leave  
   14001f2e2:	push   rsp
   14001f2e3:	(bad)  
   14001f2e4:	out    dx,eax
   14001f2e5:	ret    
   14001f2e6:	rex.WRX (bad) 
   14001f2e8:	jmp    0x14001f2a6
   14001f2ea:	rex.WX (bad) 
   14001f2ec:	call   0x1260139a6
   14001f2f1:	mov    al,0x41
   14001f2f3:	jmp    rcx
   14001f2f5:	stos   DWORD PTR es:[rdi],eax
   14001f2f6:	cmp    al,0xff
   14001f2f8:	fbld   TBYTE PTR [rbp-0x682a00c8]
   14001f2fe:	xor    bh,bh
   14001f300:	cwde   
   14001f301:	(bad)  
   14001f302:	sbb    esi,edx
	...
   14001f35c:	cmp    edi,0xfffffffd
   14001f35f:	rex.WR (bad) 
   14001f361:	(bad)  
   14001f362:	std    
   14001f363:	jp     0x14001f3dd
   14001f365:	repz stc 
   14001f367:	adc    DWORD PTR [rbp-0x7a135032],0x75ffefef
   14001f371:	repnz cli 
   14001f373:	jmp    FWORD PTR [rcx-0x13]
   14001f376:	cld    
   14001f377:	call   QWORD PTR [rsi-0x17]
   14001f37a:	std    
   14001f37b:	inc    DWORD PTR [rsi-0x1f]
   14001f37e:	std    
   14001f37f:	(bad)  
   14001f380:	cmp    al,0xd9
   14001f382:	(bad)  
   14001f383:	push   QWORD PTR [rcx+rdx*8]
   14001f386:	(bad)  
   14001f387:	push   QWORD PTR [rax]
   14001f389:	retf   
   14001f38a:	(bad)  
   14001f38b:	jmp    FWORD PTR [rbx]
   14001f38d:	ret    
   14001f38e:	(bad)  
   14001f38f:	jmp    FWORD PTR [rdx]
   14001f391:	mov    ebp,0xb92bfffe
   14001f396:	(bad)  
   14001f397:	push   QWORD PTR [rcx]
   14001f399:	mov    ebx,0xc138fffe
   14001f39e:	(bad)  
   14001f39f:	jmp    QWORD PTR [rbx-0x35]
   14001f3a2:	hlt    
   14001f3a3:	dec    eax
   14001f3a5:	loop   0x14001f34d
   14001f3a7:	(bad)  
   14001f3a8:	out    dx,eax
   14001f3a9:	out    dx,al
   14001f3aa:	(bad)  
   14001f3ab:	(bad)  
   14001f3ac:	clc    
   14001f3ad:	not    DWORD PTR [rbx-0x67020201]
   14001f3b3:	(bad)  
   14001f3b4:	(bad)  
   14001f3b5:	(bad)  
   14001f3b6:	pushf  
   14001f3b7:	(bad)  
   14001f3b8:	(bad)  
   14001f3b9:	(bad)  
   14001f3ba:	popf   
   14001f3bb:	(bad)  
   14001f3bc:	(bad)  
   14001f3bd:	(bad)  
   14001f3be:	lahf   
   14001f3bf:	(bad)  
   14001f3c0:	(bad)  
   14001f3c1:	(bad)  
   14001f3c2:	lahf   
   14001f3c3:	(bad)  
   14001f3c4:	(bad)  
   14001f3c5:	(bad)  
   14001f3c6:	movabs al,ds:0x9ffeffffa0feffff
   14001f3cf:	(bad)  
   14001f3d0:	(bad)  
   14001f3d1:	(bad)  
   14001f3d2:	popf   
   14001f3d3:	(bad)  
   14001f3d4:	(bad)  
   14001f3d5:	(bad)  
   14001f3d6:	sahf   
   14001f3d7:	(bad)  
   14001f3d8:	(bad)  
   14001f3d9:	(bad)  
   14001f3da:	popf   
   14001f3db:	(bad)  
   14001f3dc:	(bad)  
   14001f3dd:	(bad)  
   14001f3de:	fwait
   14001f3df:	(bad)  
   14001f3e0:	(bad)  
   14001f3e1:	std    
   14001f3e2:	fwait
   14001f3e3:	(bad)  
   14001f3e4:	(bad)  
   14001f3e5:	std    
   14001f3e6:	(bad)  
   14001f3e7:	(bad)  
   14001f3e8:	(bad)  
   14001f3e9:	std    
   14001f3ea:	(bad)  
   14001f3eb:	(bad)  
   14001f3ec:	(bad)  
   14001f3ed:	std    
   14001f3ee:	(bad)  
   14001f3ef:	(bad)  
   14001f3f0:	(bad)  
   14001f3f1:	std    
   14001f3f2:	(bad)  
   14001f3f3:	(bad)  
   14001f3f4:	(bad)  
   14001f3f5:	std    
   14001f3f6:	(bad)  
   14001f3f7:	(bad)  
   14001f3f8:	(bad)  
   14001f3f9:	std    
   14001f3fa:	cwde   
   14001f3fb:	(bad)  
   14001f3fc:	(bad)  
   14001f3fd:	std    
   14001f3fe:	cdq    
   14001f3ff:	(bad)  
   14001f400:	(bad)  
   14001f401:	std    
   14001f402:	cdq    
   14001f403:	(bad)  
   14001f404:	(bad)  
   14001f405:	std    
   14001f406:	(bad)  
   14001f407:	(bad)  
   14001f408:	(bad)  
   14001f409:	std    
   14001f40a:	(bad)  
   14001f40b:	(bad)  
   14001f40c:	(bad)  
   14001f40d:	std    
   14001f40e:	(bad)  
   14001f40f:	(bad)  
   14001f410:	(bad)  
   14001f411:	std    
   14001f412:	pushf  
   14001f413:	(bad)  
   14001f414:	(bad)  
   14001f415:	std    
   14001f416:	pushf  
   14001f417:	(bad)  
   14001f418:	(bad)  
   14001f419:	std    
   14001f41a:	pushf  
   14001f41b:	(bad)  
   14001f41c:	(bad)  
   14001f41d:	std    
   14001f41e:	pushf  
   14001f41f:	(bad)  
   14001f420:	(bad)  
   14001f421:	std    
   14001f422:	sahf   
   14001f423:	(bad)  
   14001f424:	(bad)  
   14001f425:	std    
   14001f426:	sahf   
   14001f427:	(bad)  
   14001f428:	(bad)  
   14001f429:	cld    
   14001f42a:	sahf   
   14001f42b:	(bad)  
   14001f42c:	(bad)  
   14001f42d:	cld    
   14001f42e:	sahf   
   14001f42f:	(bad)  
   14001f430:	(bad)  
   14001f431:	cld    
   14001f432:	lahf   
   14001f433:	(bad)  
   14001f434:	(bad)  
   14001f435:	cld    
   14001f436:	lahf   
   14001f437:	(bad)  
   14001f438:	(bad)  
   14001f439:	sti    
   14001f43a:	movabs al,ds:0xa1fcffffa1fbffff
   14001f443:	(bad)  
   14001f444:	(bad)  
   14001f445:	cld    
   14001f446:	movabs eax,ds:0xa2fbffffa2fbffff
   14001f44f:	(bad)  
   14001f450:	(bad)  
   14001f451:	sti    
   14001f452:	movabs ds:0xa2fbffffa2fbffff,eax
   14001f45b:	(bad)  
   14001f45c:	(bad)  
   14001f45d:	sti    
   14001f45e:	movabs ds:0xa2fbffffa2fbffff,al
   14001f467:	(bad)  
   14001f468:	(bad)  
   14001f469:	sti    
   14001f46a:	movabs ds:0xa3fbffffa2fbffff,al
   14001f473:	(bad)  
   14001f474:	(bad)  
   14001f475:	sti    
   14001f476:	movabs ds:0xa3faffffa3fbffff,eax
   14001f47f:	(bad)  
   14001f480:	(bad)  
   14001f481:	cli    
   14001f482:	movabs ds:0xa0f9ffffa2faffff,al
   14001f48b:	(bad)  
   14001f48c:	(bad)  
   14001f48d:	clc    
   14001f48e:	movabs al,ds:0x9cf9ffff9ff8ffff
   14001f497:	(bad)  
   14001f498:	(bad)  
   14001f499:	cli    
   14001f49a:	fwait
   14001f49b:	(bad)  
   14001f49c:	(bad)  
   14001f49d:	clc    
   14001f49e:	(bad)  
   14001f49f:	(bad)  
   14001f4a0:	(bad)  
   14001f4a1:	stc    
   14001f4a2:	cwde   
   14001f4a3:	(bad)  
   14001f4a4:	(bad)  
   14001f4a5:	clc    
   14001f4a6:	xchg   esi,eax
   14001f4a7:	(bad)  
   14001f4a8:	push   rsi
   14001f4aa:	xchg   ebx,eax
   14001f4ab:	(bad)  
   14001f4ac:	push   rbp
   14001f4ae:	xchg   ecx,eax
   14001f4af:	(bad)  
   14001f4b0:	push   rsi
   14001f4b2:	mov    ?,edi
   14001f4b4:	push   rbp
   14001f4b6:	mov    edi,edi
   14001f4b8:	push   rbx
   14001f4ba:	xchg   edi,edi
   14001f4bc:	push   rcx
   14001f4be:	test   bh,bh
   14001f4c0:	push   rax
   14001f4c2:	jg     0x14001f4c3
   14001f4c4:	(bad)  
   14001f4c5:	out    dx,al
   14001f4c6:	jnp    0x14001f4c7
   14001f4c8:	(bad)  
   14001f4c9:	(bad)  
   14001f4ca:	jae    0x14001f4cb
   14001f4cc:	jmp    rbp
   14001f4ce:	ins    DWORD PTR es:[rdi],dx
   14001f4cf:	(bad)  
   14001f4d0:	sti    
   14001f4d1:	loope  0x14001f53d
   14001f4d3:	(bad)  
   14001f4d4:	cli    
   14001f4d5:	fisub  DWORD PTR [rbx-0x1]
   14001f4d8:	not    esi
   14001f4da:	pop    rdi
   14001f4db:	push   rbp
   14001f4dd:	rcr    BYTE PTR [rbx-0x1],1
   14001f4e0:	repnz retf 0xff54
   14001f4e4:	out    dx,eax
   14001f4e5:	ret    
   14001f4e6:	rex.WRX (bad) 
   14001f4e8:	jmp    0x14001f4a6
   14001f4ea:	rex.WX (bad) 
   14001f4ec:	call   0x126013ba6
   14001f4f1:	mov    al,0x42
   14001f4f3:	jmp    rcx
   14001f4f5:	stos   DWORD PTR es:[rdi],eax
   14001f4f6:	cmp    eax,0x39a5dfff
   14001f4fb:	call   rsi
   14001f4fd:	cwde   
   14001f4fe:	xor    bh,bh
   14001f500:	cdq    
   14001f501:	movsxd ebx,DWORD PTR [rcx]
   14001f503:	(bad)  
	...
   14001f55c:	(bad)  
   14001f55d:	(bad)  
   14001f55e:	std    
   14001f55f:	(bad)  
   14001f560:	cmp    edi,0xf4786cfd
   14001f566:	stc    
   14001f567:	adc    DWORD PTR [rbp-0x51184e34],0x76ffc4ec
   14001f571:	lock cli 
   14001f573:	push   QWORD PTR [rdi-0xb]
   14001f576:	cld    
   14001f577:	jmp    QWORD PTR [rsi-0x11]
   14001f57a:	std    
   14001f57b:	call   QWORD PTR [rcx-0x19]
   14001f57e:	std    
   14001f57f:	inc    DWORD PTR [rbp-0x20]
   14001f582:	(bad)  
   14001f583:	(bad)  
   14001f584:	cmp    ecx,ebx
   14001f586:	(bad)  
   14001f587:	push   QWORD PTR [rbx]
   14001f589:	sar    edi,1
   14001f58b:	jmp    FWORD PTR [rip+0x2bffffca]        # 0x16c01f55b
   14001f591:	sar    esi,0xff
   14001f594:	sub    edi,DWORD PTR [rsi+rdi*8-0x144d301]
   14001f59b:	push   QWORD PTR [rdx]
   14001f59d:	mov    esp,0xc23dfffe
   14001f5a2:	std    
   14001f5a3:	push   QWORD PTR [rbx-0x32]
   14001f5a6:	in     al,dx
   14001f5a7:	(bad)  
   14001f5a8:	fucomi st,st(0)
   14001f5aa:	fwait
   14001f5ab:	push   rcx
   14001f5ad:	lock xchg ecx,eax
   14001f5af:	(bad)  
   14001f5b0:	cli    
   14001f5b1:	cli    
   14001f5b2:	cwde   
   14001f5b3:	(bad)  
   14001f5b4:	(bad)  
   14001f5b5:	std    
   14001f5b6:	popf   
   14001f5b7:	(bad)  
   14001f5b8:	(bad)  
   14001f5b9:	(bad)  
   14001f5ba:	lahf   
   14001f5bb:	(bad)  
   14001f5bc:	(bad)  
   14001f5bd:	(bad)  
   14001f5be:	movabs eax,ds:0xa2feffffa2feffff
   14001f5c7:	(bad)  
   14001f5c8:	(bad)  
   14001f5c9:	(bad)  
   14001f5ca:	movabs ds:0xa1feffffa2feffff,al
   14001f5d3:	(bad)  
   14001f5d4:	(bad)  
   14001f5d5:	(bad)  
   14001f5d6:	lahf   
   14001f5d7:	(bad)  
   14001f5d8:	(bad)  
   14001f5d9:	(bad)  
   14001f5da:	lahf   
   14001f5db:	(bad)  
   14001f5dc:	(bad)  
   14001f5dd:	std    
   14001f5de:	popf   
   14001f5df:	(bad)  
   14001f5e0:	(bad)  
   14001f5e1:	std    
   14001f5e2:	popf   
   14001f5e3:	(bad)  
   14001f5e4:	(bad)  
   14001f5e5:	std    
   14001f5e6:	pushf  
   14001f5e7:	(bad)  
   14001f5e8:	(bad)  
   14001f5e9:	std    
   14001f5ea:	pushf  
   14001f5eb:	(bad)  
   14001f5ec:	(bad)  
   14001f5ed:	std    
   14001f5ee:	fwait
   14001f5ef:	(bad)  
   14001f5f0:	(bad)  
   14001f5f1:	std    
   14001f5f2:	(bad)  
   14001f5f3:	(bad)  
   14001f5f4:	(bad)  
   14001f5f5:	std    
   14001f5f6:	cdq    
   14001f5f7:	(bad)  
   14001f5f8:	(bad)  
   14001f5f9:	std    
   14001f5fa:	(bad)  
   14001f5fb:	(bad)  
   14001f5fc:	(bad)  
   14001f5fd:	std    
   14001f5fe:	cdq    
   14001f5ff:	(bad)  
   14001f600:	(bad)  
   14001f601:	std    
   14001f602:	cdq    
   14001f603:	(bad)  
   14001f604:	(bad)  
   14001f605:	std    
   14001f606:	fwait
   14001f607:	(bad)  
   14001f608:	(bad)  
   14001f609:	std    
   14001f60a:	fwait
   14001f60b:	(bad)  
   14001f60c:	(bad)  
   14001f60d:	std    
   14001f60e:	pushf  
   14001f60f:	(bad)  
   14001f610:	(bad)  
   14001f611:	std    
   14001f612:	pushf  
   14001f613:	(bad)  
   14001f614:	(bad)  
   14001f615:	std    
   14001f616:	pushf  
   14001f617:	(bad)  
   14001f618:	(bad)  
   14001f619:	std    
   14001f61a:	pushf  
   14001f61b:	(bad)  
   14001f61c:	(bad)  
   14001f61d:	std    
   14001f61e:	sahf   
   14001f61f:	(bad)  
   14001f620:	(bad)  
   14001f621:	std    
   14001f622:	sahf   
   14001f623:	(bad)  
   14001f624:	(bad)  
   14001f625:	std    
   14001f626:	sahf   
   14001f627:	(bad)  
   14001f628:	(bad)  
   14001f629:	cld    
   14001f62a:	sahf   
   14001f62b:	(bad)  
   14001f62c:	(bad)  
   14001f62d:	cld    
   14001f62e:	lahf   
   14001f62f:	(bad)  
   14001f630:	(bad)  
   14001f631:	cld    
   14001f632:	lahf   
   14001f633:	(bad)  
   14001f634:	(bad)  
   14001f635:	sti    
   14001f636:	movabs al,ds:0xa1fcffffa0fbffff
   14001f63f:	(bad)  
   14001f640:	(bad)  
   14001f641:	cld    
   14001f642:	movabs eax,ds:0xa3fbffffa1fcffff
   14001f64b:	(bad)  
   14001f64c:	(bad)  
   14001f64d:	sti    
   14001f64e:	movabs ds:0xa2fbffffa3fbffff,eax
   14001f657:	(bad)  
   14001f658:	(bad)  
   14001f659:	sti    
   14001f65a:	movabs ds:0xa2fbffffa2fbffff,al
   14001f663:	(bad)  
   14001f664:	(bad)  
   14001f665:	sti    
   14001f666:	movabs ds:0xa2fbffffa2fbffff,al
   14001f66f:	(bad)  
   14001f670:	(bad)  
   14001f671:	sti    
   14001f672:	movabs ds:0xa3fbffffa3fbffff,eax
   14001f67b:	(bad)  
   14001f67c:	(bad)  
   14001f67d:	cli    
   14001f67e:	movabs ds:0xa2faffffa3faffff,eax
   14001f687:	(bad)  
   14001f688:	(bad)  
   14001f689:	stc    
   14001f68a:	movabs al,ds:0x9ff8ffffa0f8ffff
   14001f693:	(bad)  
   14001f694:	(bad)  
   14001f695:	stc    
   14001f696:	pushf  
   14001f697:	(bad)  
   14001f698:	(bad)  
   14001f699:	cli    
   14001f69a:	fwait
   14001f69b:	(bad)  
   14001f69c:	(bad)  
   14001f69d:	clc    
   14001f69e:	cdq    
   14001f69f:	(bad)  
   14001f6a0:	(bad)  
   14001f6a1:	stc    
   14001f6a2:	cwde   
   14001f6a3:	(bad)  
   14001f6a4:	(bad)  
   14001f6a5:	clc    
   14001f6a6:	xchg   esi,eax
   14001f6a7:	(bad)  
   14001f6a8:	push   rsi
   14001f6aa:	xchg   ebx,eax
   14001f6ab:	(bad)  
   14001f6ac:	push   rsi
   14001f6ae:	xchg   ecx,eax
   14001f6af:	(bad)  
   14001f6b0:	push   rsi
   14001f6b2:	mov    ?,edi
   14001f6b4:	push   rbp
   14001f6b6:	mov    edi,edi
   14001f6b8:	push   rbx
   14001f6ba:	xchg   bh,bh
   14001f6bc:	push   rcx
   14001f6be:	cmp    edi,0xffffffff
   14001f6c1:	lock jg 0x14001f6c3
   14001f6c4:	(bad)  
   14001f6c5:	out    dx,al
   14001f6c6:	jns    0x14001f6c7
   14001f6c8:	(bad)  
   14001f6c9:	(bad)  
   14001f6ca:	jae    0x14001f6cb
   14001f6cc:	jmp    rsi
   14001f6ce:	outs   dx,BYTE PTR ds:[rsi]
   14001f6cf:	(bad)  
   14001f6d0:	sti    
   14001f6d1:	loope  0x14001f73d
   14001f6d3:	(bad)  
   14001f6d4:	cli    
   14001f6d5:	fisub  DWORD PTR [rdi+rdi*8-0x9]
   14001f6d9:	(bad)  
   14001f6da:	pop    rdi
   14001f6db:	push   rbp
   14001f6dd:	rcr    BYTE PTR [rbx-0x1],1
   14001f6e0:	repnz retf 0xff54
   14001f6e4:	lock ret 
   14001f6e6:	rex.WRXB (bad) 
   14001f6e8:	jmp    0x14001f6a6
   14001f6ea:	rex.WX (bad) 
   14001f6ec:	call   0x126013da7
   14001f6f1:	mov    al,0x42
   14001f6f3:	jmp    rdx
   14001f6f5:	stos   DWORD PTR es:[rdi],eax
   14001f6f6:	cmp    eax,0x39a5dfff
   14001f6fb:	call   rsp
   14001f6fd:	xchg   esi,eax
   14001f6fe:	xor    ch,bh
   14001f700:	cdq    
   14001f701:	movsxd ebx,DWORD PTR [rcx]
   14001f703:	retf   
	...
   14001f760:	cmp    bh,0xfd
   14001f763:	sbb    bh,BYTE PTR [rax-0xb]
   14001f766:	cli    
   14001f767:	adc    BYTE PTR [rdx-0x521b4f35],0xe7
   14001f76e:	mov    esi,0xe6f192fe
   14001f773:	(bad)  
   14001f774:	jge    0x14001f76c
   14001f776:	cld    
   14001f777:	push   QWORD PTR [rdi-0xb]
   14001f77a:	std    
   14001f77b:	jmp    QWORD PTR [rax-0x12]
   14001f77e:	(bad)  
   14001f77f:	dec    DWORD PTR [rdi-0x19]
   14001f782:	(bad)  
   14001f783:	inc    DWORD PTR [rax-0x22]
   14001f786:	(bad)  
   14001f787:	(bad)  
   14001f788:	cmp    edi,edx
   14001f78a:	(bad)  
   14001f78b:	push   QWORD PTR [rcx]
   14001f78d:	iret   
   14001f78e:	(bad)  
   14001f78f:	jmp    FWORD PTR [rdi+rax*8]
   14001f792:	(bad)  
   14001f793:	jmp    FWORD PTR [rdx]
   14001f795:	sar    dh,0xff
   14001f798:	sub    bh,BYTE PTR [rdi+rdi*8-0x145d301]
   14001f79f:	push   QWORD PTR [rbx]
   14001f7a1:	mov    ebp,0xc445fffe
   14001f7a6:	sti    
   14001f7a7:	dec    DWORD PTR [rcx-0x1a00222d]
   14001f7ad:	(bad)  
   14001f7ae:	xchg   ebp,eax
   14001f7af:	push   rbx
   14001f7b1:	repz xchg esi,eax
   14001f7b3:	(bad)  
   14001f7b4:	sti    
   14001f7b5:	cli    
   14001f7b6:	sahf   
   14001f7b7:	(bad)  
   14001f7b8:	(bad)  
   14001f7b9:	(bad)  
   14001f7ba:	movabs eax,ds:0xa4ffffffa4ffffff
   14001f7c3:	(bad)  
   14001f7c4:	(bad)  
   14001f7c5:	(bad)  
   14001f7c6:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001f7c7:	(bad)  
   14001f7c8:	(bad)  
   14001f7c9:	(bad)  
   14001f7ca:	movabs ds:0xa3feffffa4feffff,eax
   14001f7d3:	(bad)  
   14001f7d4:	(bad)  
   14001f7d5:	(bad)  
   14001f7d6:	movabs eax,ds:0xa0fdffffa1feffff
   14001f7df:	(bad)  
   14001f7e0:	(bad)  
   14001f7e1:	std    
   14001f7e2:	sahf   
   14001f7e3:	(bad)  
   14001f7e4:	(bad)  
   14001f7e5:	std    
   14001f7e6:	popf   
   14001f7e7:	(bad)  
   14001f7e8:	(bad)  
   14001f7e9:	std    
   14001f7ea:	pushf  
   14001f7eb:	(bad)  
   14001f7ec:	(bad)  
   14001f7ed:	std    
   14001f7ee:	fwait
   14001f7ef:	(bad)  
   14001f7f0:	(bad)  
   14001f7f1:	std    
   14001f7f2:	fwait
   14001f7f3:	(bad)  
   14001f7f4:	(bad)  
   14001f7f5:	std    
   14001f7f6:	fwait
   14001f7f7:	(bad)  
   14001f7f8:	(bad)  
   14001f7f9:	std    
   14001f7fa:	(bad)  
   14001f7fb:	(bad)  
   14001f7fc:	(bad)  
   14001f7fd:	std    
   14001f7fe:	fwait
   14001f7ff:	(bad)  
   14001f800:	(bad)  
   14001f801:	std    
   14001f802:	fwait
   14001f803:	(bad)  
   14001f804:	(bad)  
   14001f805:	std    
   14001f806:	fwait
   14001f807:	(bad)  
   14001f808:	(bad)  
   14001f809:	std    
   14001f80a:	pushf  
   14001f80b:	(bad)  
   14001f80c:	(bad)  
   14001f80d:	std    
   14001f80e:	pushf  
   14001f80f:	(bad)  
   14001f810:	(bad)  
   14001f811:	std    
   14001f812:	pushf  
   14001f813:	(bad)  
   14001f814:	(bad)  
   14001f815:	std    
   14001f816:	pushf  
   14001f817:	(bad)  
   14001f818:	(bad)  
   14001f819:	std    
   14001f81a:	sahf   
   14001f81b:	(bad)  
   14001f81c:	(bad)  
   14001f81d:	std    
   14001f81e:	sahf   
   14001f81f:	(bad)  
   14001f820:	(bad)  
   14001f821:	cld    
   14001f822:	sahf   
   14001f823:	(bad)  
   14001f824:	(bad)  
   14001f825:	cld    
   14001f826:	sahf   
   14001f827:	(bad)  
   14001f828:	(bad)  
   14001f829:	cld    
   14001f82a:	lahf   
   14001f82b:	(bad)  
   14001f82c:	(bad)  
   14001f82d:	cld    
   14001f82e:	lahf   
   14001f82f:	(bad)  
   14001f830:	(bad)  
   14001f831:	cld    
   14001f832:	lahf   
   14001f833:	(bad)  
   14001f834:	(bad)  
   14001f835:	sti    
   14001f836:	movabs al,ds:0xa1fcffffa1fbffff
   14001f83f:	(bad)  
   14001f840:	(bad)  
   14001f841:	cld    
   14001f842:	movabs eax,ds:0xa3fbffffa2fbffff
   14001f84b:	(bad)  
   14001f84c:	(bad)  
   14001f84d:	sti    
   14001f84e:	movabs ds:0xa2fbffffa2fbffff,eax
   14001f857:	(bad)  
   14001f858:	(bad)  
   14001f859:	sti    
   14001f85a:	movabs ds:0xa2fbffffa2fbffff,al
   14001f863:	(bad)  
   14001f864:	(bad)  
   14001f865:	cli    
   14001f866:	movabs ds:0xa3faffffa3faffff,al
   14001f86f:	(bad)  
   14001f870:	(bad)  
   14001f871:	cli    
   14001f872:	movabs ds:0xa3faffffa3faffff,eax
   14001f87b:	(bad)  
   14001f87c:	(bad)  
   14001f87d:	cli    
   14001f87e:	movabs ds:0xa2faffffa3faffff,eax
   14001f887:	(bad)  
   14001f888:	(bad)  
   14001f889:	stc    
   14001f88a:	movabs al,ds:0x9ff8ffff9ff8ffff
   14001f893:	(bad)  
   14001f894:	(bad)  
   14001f895:	stc    
   14001f896:	pushf  
   14001f897:	(bad)  
   14001f898:	(bad)  
   14001f899:	clc    
   14001f89a:	fwait
   14001f89b:	(bad)  
   14001f89c:	(bad)  
   14001f89d:	clc    
   14001f89e:	cdq    
   14001f89f:	(bad)  
   14001f8a0:	(bad)  
   14001f8a1:	stc    
   14001f8a2:	cwde   
   14001f8a3:	(bad)  
   14001f8a4:	(bad)  
   14001f8a5:	clc    
   14001f8a6:	xchg   esi,eax
   14001f8a7:	(bad)  
   14001f8a8:	push   rsi
   14001f8aa:	xchg   edx,eax
   14001f8ab:	(bad)  
   14001f8ac:	push   rsi
   14001f8ae:	xchg   ecx,eax
   14001f8af:	(bad)  
   14001f8b0:	push   rsi
   14001f8b2:	(bad)  
   14001f8b3:	(bad)  
   14001f8b4:	push   rsi
   14001f8b6:	mov    bh,bh
   14001f8b8:	push   rbx
   14001f8ba:	xchg   bh,bh
   14001f8bc:	push   rax
   14001f8be:	cmp    edi,0xffffffff
   14001f8c1:	lock jg 0x14001f8c3
   14001f8c4:	(bad)  
   14001f8c5:	out    dx,al
   14001f8c6:	jns    0x14001f8c7
   14001f8c8:	(bad)  
   14001f8c9:	(bad)  
   14001f8ca:	jae    0x14001f8cb
   14001f8cc:	jmp    rsi
   14001f8ce:	outs   dx,BYTE PTR ds:[rsi]
   14001f8cf:	(bad)  
   14001f8d0:	sti    
   14001f8d1:	loope  0x14001f93d
   14001f8d3:	(bad)  
   14001f8d4:	cli    
   14001f8d5:	fisub  DWORD PTR [rbx-0x1]
   14001f8d8:	not    ebp
   14001f8da:	pop    rdi
   14001f8db:	push   rbp
   14001f8dd:	rcr    BYTE PTR [rbx-0x1],1
   14001f8e0:	repnz retf 0xff54
   14001f8e4:	lock ret 
   14001f8e6:	push   rax
   14001f8e7:	(bad)  
   14001f8e8:	jmp    0x14001f8a6
   14001f8ea:	rex.WXB (bad) 
   14001f8ec:	call   0x1260140a8
   14001f8f1:	scas   eax,DWORD PTR es:[rdi]
   14001f8f2:	rex.X jmp rdx
   14001f8f5:	stos   DWORD PTR es:[rdi],eax
   14001f8f6:	cmp    al,0xff
   14001f8f8:	fbld   TBYTE PTR [rbp-0x6a2b00c6]
   14001f8fe:	xor    ch,bh
   14001f900:	(bad)  
   14001f901:	fs sbb eax,ecx
	...
   14001f964:	jb     0x14001f955
   14001f966:	clc    
   14001f967:	xchg   r8d,eax
   14001f969:	int    0xb2
   14001f96b:	fisubr WORD PTR [rbp+riz*8-0xf500245]
   14001f972:	(bad)  
   14001f973:	inc    DWORD PTR [rsi+rsi*8-0x77f0004]
   14001f97a:	std    
   14001f97b:	push   QWORD PTR [rbp-0xc]
   14001f97e:	(bad)  
   14001f97f:	call   FWORD PTR [rbp+rbp*8-0x2]
   14001f983:	dec    DWORD PTR [rdx-0x1c]
   14001f986:	(bad)  
   14001f987:	(bad)  
   14001f988:	cmp    eax,0x36ffffdc
   14001f98d:	(bad)  
   14001f98e:	(bad)  
   14001f98f:	push   QWORD PTR [rax]
   14001f991:	(bad)  
   14001f992:	(bad)  
   14001f993:	jmp    FWORD PTR [rsp+rax*8]
   14001f996:	(bad)  
   14001f997:	jmp    FWORD PTR [rdx]
   14001f999:	mov    edi,0xbc2bffff
   14001f99e:	(bad)  
   14001f99f:	jmp    FWORD PTR [rsi]
   14001f9a1:	mov    ecx,0xc035fffe
   14001f9a6:	(bad)  
   14001f9a7:	dec    DWORD PTR [rdx-0x3b]
   14001f9aa:	cli    
   14001f9ab:	call   FWORD PTR [rdx-0x16002d29]
   14001f9b1:	jmp    0x14001f94b
   14001f9b3:	push   rbp
   14001f9b5:	hlt    
   14001f9b6:	pushf  
   14001f9b7:	(bad)  
   14001f9b8:	cld    
   14001f9b9:	cld    
   14001f9ba:	movabs ds:0xa6ffffffa4ffffff,al
   14001f9c3:	(bad)  
   14001f9c4:	(bad)  
   14001f9c5:	(bad)  
   14001f9c6:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001f9c7:	(bad)  
   14001f9c8:	(bad)  
   14001f9c9:	(bad)  
   14001f9ca:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001f9cb:	(bad)  
   14001f9cc:	(bad)  
   14001f9cd:	(bad)  
   14001f9ce:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001f9cf:	(bad)  
   14001f9d0:	(bad)  
   14001f9d1:	(bad)  
   14001f9d2:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001f9d3:	(bad)  
   14001f9d4:	(bad)  
   14001f9d5:	(bad)  
   14001f9d6:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001f9d7:	(bad)  
   14001f9d8:	(bad)  
   14001f9d9:	(bad)  
   14001f9da:	movabs ds:0xa0fdffffa1feffff,al
   14001f9e3:	(bad)  
   14001f9e4:	(bad)  
   14001f9e5:	std    
   14001f9e6:	lahf   
   14001f9e7:	(bad)  
   14001f9e8:	(bad)  
   14001f9e9:	std    
   14001f9ea:	sahf   
   14001f9eb:	(bad)  
   14001f9ec:	(bad)  
   14001f9ed:	std    
   14001f9ee:	popf   
   14001f9ef:	(bad)  
   14001f9f0:	(bad)  
   14001f9f1:	std    
   14001f9f2:	pushf  
   14001f9f3:	(bad)  
   14001f9f4:	(bad)  
   14001f9f5:	std    
   14001f9f6:	pushf  
   14001f9f7:	(bad)  
   14001f9f8:	(bad)  
   14001f9f9:	std    
   14001f9fa:	pushf  
   14001f9fb:	(bad)  
   14001f9fc:	(bad)  
   14001f9fd:	std    
   14001f9fe:	pushf  
   14001f9ff:	(bad)  
   14001fa00:	(bad)  
   14001fa01:	std    
   14001fa02:	fwait
   14001fa03:	(bad)  
   14001fa04:	(bad)  
   14001fa05:	std    
   14001fa06:	pushf  
   14001fa07:	(bad)  
   14001fa08:	(bad)  
   14001fa09:	std    
   14001fa0a:	pushf  
   14001fa0b:	(bad)  
   14001fa0c:	(bad)  
   14001fa0d:	std    
   14001fa0e:	pushf  
   14001fa0f:	(bad)  
   14001fa10:	(bad)  
   14001fa11:	std    
   14001fa12:	pushf  
   14001fa13:	(bad)  
   14001fa14:	(bad)  
   14001fa15:	std    
   14001fa16:	sahf   
   14001fa17:	(bad)  
   14001fa18:	(bad)  
   14001fa19:	std    
   14001fa1a:	sahf   
   14001fa1b:	(bad)  
   14001fa1c:	(bad)  
   14001fa1d:	std    
   14001fa1e:	sahf   
   14001fa1f:	(bad)  
   14001fa20:	(bad)  
   14001fa21:	std    
   14001fa22:	sahf   
   14001fa23:	(bad)  
   14001fa24:	(bad)  
   14001fa25:	cld    
   14001fa26:	lahf   
   14001fa27:	(bad)  
   14001fa28:	(bad)  
   14001fa29:	cld    
   14001fa2a:	movabs al,ds:0xa0fbffff9ffcffff
   14001fa33:	(bad)  
   14001fa34:	(bad)  
   14001fa35:	sti    
   14001fa36:	movabs al,ds:0xa1fbffffa1fbffff
   14001fa3f:	(bad)  
   14001fa40:	(bad)  
   14001fa41:	sti    
   14001fa42:	movabs eax,ds:0xa3fbffffa3fbffff
   14001fa4b:	(bad)  
   14001fa4c:	(bad)  
   14001fa4d:	sti    
   14001fa4e:	movabs ds:0xa2faffffa2fbffff,al
   14001fa57:	(bad)  
   14001fa58:	(bad)  
   14001fa59:	cli    
   14001fa5a:	movabs ds:0xa2faffffa2faffff,al
   14001fa63:	(bad)  
   14001fa64:	(bad)  
   14001fa65:	cli    
   14001fa66:	movabs ds:0xa4faffffa4faffff,al
   14001fa6f:	(bad)  
   14001fa70:	(bad)  
   14001fa71:	cli    
   14001fa72:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001fa73:	(bad)  
   14001fa74:	(bad)  
   14001fa75:	cli    
   14001fa76:	movabs ds:0xa3faffffa3faffff,eax
   14001fa7f:	(bad)  
   14001fa80:	(bad)  
   14001fa81:	cli    
   14001fa82:	movabs ds:0xa0f9ffffa2faffff,eax
   14001fa8b:	(bad)  
   14001fa8c:	(bad)  
   14001fa8d:	clc    
   14001fa8e:	movabs al,ds:0x9df8feff9ff8ffff
   14001fa97:	(bad)  
   14001fa98:	(bad)  
   14001fa99:	clc    
   14001fa9a:	fwait
   14001fa9b:	(bad)  
   14001fa9c:	(bad)  
   14001fa9d:	clc    
   14001fa9e:	cdq    
   14001fa9f:	(bad)  
   14001faa0:	(bad)  
   14001faa1:	stc    
   14001faa2:	xchg   edi,eax
   14001faa3:	(bad)  
   14001faa4:	(bad)  
   14001faa5:	clc    
   14001faa6:	xchg   esi,eax
   14001faa7:	(bad)  
   14001faa8:	push   rsi
   14001faaa:	xchg   edx,eax
   14001faab:	(bad)  
   14001faac:	push   rbp
   14001faae:	xchg   ecx,eax
   14001faaf:	(bad)  
   14001fab0:	push   rsi
   14001fab2:	(bad)  
   14001fab3:	(bad)  
   14001fab4:	push   rsp
   14001fab6:	mov    bh,bh
   14001fab8:	push   rbx
   14001faba:	xchg   bh,bh
   14001fabc:	push   rcx
   14001fabe:	(bad)  
   14001fabf:	(bad)  
   14001fac0:	push   rax
   14001fac2:	jle    0x14001fac3
   14001fac4:	(bad)  
   14001fac5:	in     eax,dx
   14001fac6:	jns    0x14001fac7
   14001fac8:	(bad)  
   14001fac9:	jmp    0x14001fb3f
   14001facb:	(bad)  
   14001facc:	jmp    rsi
   14001face:	outs   dx,BYTE PTR ds:[rsi]
   14001facf:	(bad)  
   14001fad0:	sti    
   14001fad1:	loope  0x14001fb3d
   14001fad3:	(bad)  
   14001fad4:	cli    
   14001fad5:	fisub  DWORD PTR [rdi+rdi*8-0x9]
   14001fad9:	(bad)  
   14001fada:	pop    rdi
   14001fadb:	push   rbp
   14001fadd:	rcr    BYTE PTR [rbx-0x1],1
   14001fae0:	repnz retf 0xff54
   14001fae4:	lock ret 
   14001fae6:	push   rax
   14001fae7:	(bad)  
   14001fae8:	in     al,dx
   14001fae9:	mov    ebx,0xb6e8ff4b
   14001faee:	rex.W jmp rsp
   14001faf1:	mov    cl,0x42
   14001faf3:	jmp    rdx
   14001faf5:	stos   DWORD PTR es:[rdi],eax
   14001faf6:	cmp    eax,0x39a5ddff
   14001fafb:	dec    edi
   14001fafd:	xchg   edx,eax
   14001fafe:	(bad)  
   14001faff:	sti    
   14001fb00:	fwait
   14001fb01:	sbb    bh,BYTE PTR fs:[rcx+0x0]
	...
   14001fb64:	xor    DWORD PTR [rcx-0x3d69f924],ebx
   14001fb6a:	movabs al,ds:0xc2efaffbb8e1aac6
   14001fb73:	jmp    QWORD PTR [rbx+rsi*8-0x77a0027]
   14001fb7a:	std    
   14001fb7b:	inc    DWORD PTR [rbx+0x6ffffefb]
   14001fb81:	idiv   dh
   14001fb83:	call   FWORD PTR [rcx-0x13]
   14001fb86:	(bad)  
   14001fb87:	inc    DWORD PTR [rdi-0x1c]
   14001fb8a:	(bad)  
   14001fb8b:	(bad)  
   14001fb8c:	cmp    al,0xdb
   14001fb8e:	(bad)  
   14001fb8f:	push   QWORD PTR [rsp+rdx*8]
   14001fb92:	(bad)  
   14001fb93:	jmp    FWORD PTR [rdi]
   14001fb95:	retf   
   14001fb96:	(bad)  
   14001fb97:	jmp    FWORD PTR [rip+0x2affffc4]        # 0x16b01fb61
   14001fb9d:	mov    ebp,0xba2bffff
   14001fba2:	(bad)  
   14001fba3:	jmp    FWORD PTR [rsi]
   14001fba5:	mov    ebx,0xbf36fffe
   14001fbaa:	(bad)  
   14001fbab:	call   QWORD PTR [rcx-0x3c]
   14001fbae:	stc    
   14001fbaf:	jmp    FWORD PTR [rsi-0x12003a22]
   14001fbb5:	in     eax,dx
   14001fbb6:	pushf  
   14001fbb7:	push   rdi
   14001fbb9:	mul    DWORD PTR [rdx-0x5b020201]
   14001fbbf:	(bad)  
   14001fbc0:	(bad)  
   14001fbc1:	jmp    QWORD PTR [rdi-0x56010001]
   14001fbc7:	(bad)  
   14001fbc8:	(bad)  
   14001fbc9:	(bad)  
   14001fbca:	test   al,0xff
   14001fbcc:	(bad)  
   14001fbcd:	(bad)  
   14001fbce:	test   eax,0xa6feffff
   14001fbd3:	(bad)  
   14001fbd4:	(bad)  
   14001fbd5:	(bad)  
   14001fbd6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001fbd7:	(bad)  
   14001fbd8:	(bad)  
   14001fbd9:	(bad)  
   14001fbda:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001fbdb:	(bad)  
   14001fbdc:	(bad)  
   14001fbdd:	cld    
   14001fbde:	movabs ds:0xa1fdffffa3fdffff,eax
   14001fbe7:	(bad)  
   14001fbe8:	(bad)  
   14001fbe9:	cld    
   14001fbea:	movabs al,ds:0x9ffcffffa0fcffff
   14001fbf3:	(bad)  
   14001fbf4:	(bad)  
   14001fbf5:	cld    
   14001fbf6:	sahf   
   14001fbf7:	(bad)  
   14001fbf8:	(bad)  
   14001fbf9:	cld    
   14001fbfa:	sahf   
   14001fbfb:	(bad)  
   14001fbfc:	(bad)  
   14001fbfd:	cld    
   14001fbfe:	sahf   
   14001fbff:	(bad)  
   14001fc00:	(bad)  
   14001fc01:	cld    
   14001fc02:	popf   
   14001fc03:	(bad)  
   14001fc04:	(bad)  
   14001fc05:	cld    
   14001fc06:	popf   
   14001fc07:	(bad)  
   14001fc08:	(bad)  
   14001fc09:	cld    
   14001fc0a:	lahf   
   14001fc0b:	(bad)  
   14001fc0c:	(bad)  
   14001fc0d:	cld    
   14001fc0e:	lahf   
   14001fc0f:	(bad)  
   14001fc10:	(bad)  
   14001fc11:	cld    
   14001fc12:	lahf   
   14001fc13:	(bad)  
   14001fc14:	(bad)  
   14001fc15:	cld    
   14001fc16:	sahf   
   14001fc17:	(bad)  
   14001fc18:	(bad)  
   14001fc19:	sti    
   14001fc1a:	lahf   
   14001fc1b:	(bad)  
   14001fc1c:	(bad)  
   14001fc1d:	sti    
   14001fc1e:	lahf   
   14001fc1f:	(bad)  
   14001fc20:	(bad)  
   14001fc21:	sti    
   14001fc22:	movabs al,ds:0xa1fafeffa1fbfeff
   14001fc2b:	(bad)  
   14001fc2c:	(bad)  
   14001fc2d:	cli    
   14001fc2e:	movabs eax,ds:0xa2faffffa2faffff
   14001fc37:	(bad)  
   14001fc38:	(bad)  
   14001fc39:	sti    
   14001fc3a:	movabs ds:0xa2fbffffa1fbffff,al
   14001fc43:	(bad)  
   14001fc44:	(bad)  
   14001fc45:	cli    
   14001fc46:	movabs ds:0xa3faffffa3faffff,eax
   14001fc4f:	(bad)  
   14001fc50:	(bad)  
   14001fc51:	cli    
   14001fc52:	movabs ds:0xa3faffffa3faffff,eax
   14001fc5b:	(bad)  
   14001fc5c:	(bad)  
   14001fc5d:	cli    
   14001fc5e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001fc5f:	(bad)  
   14001fc60:	(bad)  
   14001fc61:	cli    
   14001fc62:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001fc63:	(bad)  
   14001fc64:	(bad)  
   14001fc65:	cli    
   14001fc66:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001fc67:	(bad)  
   14001fc68:	(bad)  
   14001fc69:	cli    
   14001fc6a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001fc6b:	(bad)  
   14001fc6c:	(bad)  
   14001fc6d:	cli    
   14001fc6e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001fc6f:	(bad)  
   14001fc70:	(bad)  
   14001fc71:	cli    
   14001fc72:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001fc73:	(bad)  
   14001fc74:	(bad)  
   14001fc75:	cli    
   14001fc76:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001fc77:	(bad)  
   14001fc78:	(bad)  
   14001fc79:	cli    
   14001fc7a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001fc7b:	(bad)  
   14001fc7c:	(bad)  
   14001fc7d:	cli    
   14001fc7e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001fc7f:	(bad)  
   14001fc80:	(bad)  
   14001fc81:	cli    
   14001fc82:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001fc83:	(bad)  
   14001fc84:	(bad)  
   14001fc85:	cli    
   14001fc86:	movabs ds:0x9ff9ffffa2f9ffff,eax
   14001fc8f:	(bad)  
   14001fc90:	(bad)  
   14001fc91:	stc    
   14001fc92:	sahf   
   14001fc93:	(bad)  
   14001fc94:	(bad)  
   14001fc95:	clc    
   14001fc96:	popf   
   14001fc97:	(bad)  
   14001fc98:	(bad)  
   14001fc99:	clc    
   14001fc9a:	pushf  
   14001fc9b:	(bad)  
   14001fc9c:	(bad)  
   14001fc9d:	clc    
   14001fc9e:	cdq    
   14001fc9f:	(bad)  
   14001fca0:	(bad)  
   14001fca1:	stc    
   14001fca2:	cwde   
   14001fca3:	(bad)  
   14001fca4:	push   rdi
   14001fca6:	xchg   ebp,eax
   14001fca7:	(bad)  
   14001fca8:	push   rsi
   14001fcaa:	xchg   edx,eax
   14001fcab:	(bad)  
   14001fcac:	push   rbp
   14001fcae:	nop
   14001fcaf:	(bad)  
   14001fcb0:	push   rsi
   14001fcb2:	(bad)  
   14001fcb3:	(bad)  
   14001fcb4:	push   rbp
   14001fcb6:	mov    bh,bh
   14001fcb8:	push   rsp
   14001fcba:	test   edi,edi
   14001fcbc:	push   rcx
   14001fcbe:	(bad)  
   14001fcbf:	(bad)  
   14001fcc0:	(bad)  
   14001fcc1:	out    dx,eax
   14001fcc2:	jle    0x14001fcc3
   14001fcc4:	(bad)  
   14001fcc5:	in     eax,dx
   14001fcc6:	jns    0x14001fcc7
   14001fcc8:	(bad)  
   14001fcc9:	jmp    0x14001fd3e
   14001fccb:	(bad)  
   14001fccc:	jmp    rsi
   14001fcce:	outs   dx,BYTE PTR ds:[rsi]
   14001fccf:	(bad)  
   14001fcd0:	sti    
   14001fcd1:	loope  0x14001fd3d
   14001fcd3:	(bad)  
   14001fcd4:	cli    
   14001fcd5:	fisub  DWORD PTR [rbx-0x1]
   14001fcd8:	not    ebp
   14001fcda:	pop    rdi
   14001fcdb:	push   rbp
   14001fcdd:	rcr    BYTE PTR [rbx-0x1],1
   14001fce0:	repnz leave 
   14001fce2:	push   rsp
   14001fce3:	push   rax
   14001fce5:	ret    
   14001fce6:	push   rax
   14001fce7:	(bad)  
   14001fce8:	(bad)  
   14001fce9:	mov    ebx,0xb7e8ff4b
   14001fcee:	rex.RX jmp rsp
   14001fcf1:	mov    al,0x42
   14001fcf3:	jmp    rdx
   14001fcf5:	stos   BYTE PTR es:[rdi],al
   14001fcf6:	cmp    eax,0x3aa3ddff
   14001fcfb:	dec    ebx
   14001fcfd:	(bad)  
   14001fcfe:	xor    eax,edi
   14001fd00:	fwait
   14001fd01:	sbb    ch,BYTE PTR gs:[rdx+0x0]
	...
   14001fd64:	or     al,0x67
   14001fd66:	retf   
   14001fd67:	add    esi,DWORD PTR [rcx-0x5571aa6a]
   14001fd6d:	fld    TBYTE PTR [rdi-0x3d0f5107]
   14001fd73:	jmp    FWORD PTR [rdi-0x6d003a0d]
   14001fd79:	clc    
   14001fd7a:	cli    
   14001fd7b:	dec    DWORD PTR [rbx-0x7c000105]
   14001fd81:	cld    
   14001fd82:	(bad)  
   14001fd83:	jmp    FWORD PTR [rdx-0xe]
   14001fd86:	(bad)  
   14001fd87:	call   QWORD PTR [rbx-0x16]
   14001fd8a:	(bad)  
   14001fd8b:	inc    DWORD PTR [rbx-0x1e]
   14001fd8e:	(bad)  
   14001fd8f:	(bad)  
   14001fd90:	cmp    bl,dl
   14001fd92:	(bad)  
   14001fd93:	push   QWORD PTR [rdx+rdx*8]
   14001fd96:	(bad)  
   14001fd97:	jmp    FWORD PTR [rdi]
   14001fd99:	retf   
   14001fd9a:	(bad)  
   14001fd9b:	jmp    FWORD PTR [rbx]
   14001fd9d:	ret    
   14001fd9e:	(bad)  
   14001fd9f:	jmp    FWORD PTR [rdx]
   14001fda1:	mov    esp,0xba2bffff
   14001fda6:	(bad)  
   14001fda7:	push   QWORD PTR [rax]
   14001fda9:	mov    esp,0xc038ffff
   14001fdae:	(bad)  
   14001fdaf:	call   FWORD PTR [rbp-0x38]
   14001fdb2:	idiv   bh
   14001fdb4:	mov    esi,0xefffbae1
   14001fdb9:	out    dx,al
   14001fdba:	sahf   
   14001fdbb:	(bad)  
   14001fdbc:	clc    
   14001fdbd:	mul    DWORD PTR [rdi+rdi*8-0x570202]
   14001fdc4:	(bad)  
   14001fdc5:	(bad)  
   14001fdc6:	test   eax,0xa9feffff
   14001fdcb:	(bad)  
   14001fdcc:	(bad)  
   14001fdcd:	(bad)  
   14001fdce:	test   eax,0xa8feffff
   14001fdd3:	(bad)  
   14001fdd4:	(bad)  
   14001fdd5:	std    
   14001fdd6:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001fdd7:	(bad)  
   14001fdd8:	(bad)  
   14001fdd9:	std    
   14001fdda:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001fddb:	(bad)  
   14001fddc:	(bad)  
   14001fddd:	cld    
   14001fdde:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001fddf:	(bad)  
   14001fde0:	(bad)  
   14001fde1:	cld    
   14001fde2:	movabs ds:0xa1fafeffa2fbfeff,eax
   14001fdeb:	(bad)  
   14001fdec:	(bad)  
   14001fded:	cli    
   14001fdee:	lahf   
   14001fdef:	(bad)  
   14001fdf0:	(bad)  
   14001fdf1:	cli    
   14001fdf2:	lahf   
   14001fdf3:	(bad)  
   14001fdf4:	(bad)  
   14001fdf5:	stc    
   14001fdf6:	sahf   
   14001fdf7:	(bad)  
   14001fdf8:	(bad)  
   14001fdf9:	stc    
   14001fdfa:	sahf   
   14001fdfb:	(bad)  
   14001fdfc:	(bad)  
   14001fdfd:	stc    
   14001fdfe:	sahf   
   14001fdff:	(bad)  
   14001fe00:	(bad)  
   14001fe01:	stc    
   14001fe02:	popf   
   14001fe03:	(bad)  
   14001fe04:	(bad)  
   14001fe05:	stc    
   14001fe06:	sahf   
   14001fe07:	(bad)  
   14001fe08:	(bad)  
   14001fe09:	stc    
   14001fe0a:	sahf   
   14001fe0b:	(bad)  
   14001fe0c:	(bad)  
   14001fe0d:	stc    
   14001fe0e:	sahf   
   14001fe0f:	(bad)  
   14001fe10:	(bad)  
   14001fe11:	stc    
   14001fe12:	sahf   
   14001fe13:	(bad)  
   14001fe14:	(bad)  
   14001fe15:	stc    
   14001fe16:	sahf   
   14001fe17:	(bad)  
   14001fe18:	(bad)  
   14001fe19:	stc    
   14001fe1a:	sahf   
   14001fe1b:	(bad)  
   14001fe1c:	(bad)  
   14001fe1d:	stc    
   14001fe1e:	sahf   
   14001fe1f:	(bad)  
   14001fe20:	(bad)  
   14001fe21:	stc    
   14001fe22:	lahf   
   14001fe23:	(bad)  
   14001fe24:	(bad)  
   14001fe25:	stc    
   14001fe26:	lahf   
   14001fe27:	(bad)  
   14001fe28:	(bad)  
   14001fe29:	clc    
   14001fe2a:	movabs al,ds:0xa1f8feffa0f8feff
   14001fe33:	(bad)  
   14001fe34:	(bad)  
   14001fe35:	clc    
   14001fe36:	movabs eax,ds:0xa2f9feffa1f8feff
   14001fe3f:	(bad)  
   14001fe40:	(bad)  
   14001fe41:	mul    DWORD PTR [rdx-0x5d070101]
   14001fe47:	(bad)  
   14001fe48:	(bad)  
   14001fe49:	clc    
   14001fe4a:	movabs ds:0xa2f8feffa2f8feff,al
   14001fe53:	(bad)  
   14001fe54:	(bad)  
   14001fe55:	clc    
   14001fe56:	movabs ds:0xa3f8feffa3f8feff,al
   14001fe5f:	(bad)  
   14001fe60:	(bad)  
   14001fe61:	clc    
   14001fe62:	movabs ds:0xa4f8feffa4f8feff,eax
   14001fe6b:	(bad)  
   14001fe6c:	(bad)  
   14001fe6d:	clc    
   14001fe6e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001fe6f:	(bad)  
   14001fe70:	(bad)  
   14001fe71:	clc    
   14001fe72:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001fe73:	(bad)  
   14001fe74:	(bad)  
   14001fe75:	clc    
   14001fe76:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001fe77:	(bad)  
   14001fe78:	(bad)  
   14001fe79:	clc    
   14001fe7a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001fe7b:	(bad)  
   14001fe7c:	(bad)  
   14001fe7d:	clc    
   14001fe7e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001fe7f:	(bad)  
   14001fe80:	(bad)  
   14001fe81:	clc    
   14001fe82:	movabs ds:0xa2f7feffa2f8feff,al
   14001fe8b:	(bad)  
   14001fe8c:	(bad)  
   14001fe8d:	mul    DWORD PTR [rcx-0x60070001]
   14001fe93:	(bad)  
   14001fe94:	(bad)  
   14001fe95:	clc    
   14001fe96:	popf   
   14001fe97:	(bad)  
   14001fe98:	(bad)  
   14001fe99:	clc    
   14001fe9a:	fwait
   14001fe9b:	(bad)  
   14001fe9c:	(bad)  
   14001fe9d:	clc    
   14001fe9e:	cdq    
   14001fe9f:	(bad)  
   14001fea0:	(bad)  
   14001fea1:	clc    
   14001fea2:	xchg   edi,eax
   14001fea3:	(bad)  
   14001fea4:	push   rdi
   14001fea6:	xchg   ebp,eax
   14001fea7:	(bad)  
   14001fea8:	push   rsi
   14001feaa:	xchg   edx,eax
   14001feab:	(bad)  
   14001feac:	push   rbp
   14001feae:	nop
   14001feaf:	(bad)  
   14001feb0:	push   rdi
   14001feb2:	mov    edi,?
   14001feb4:	push   rsp
   14001feb6:	mov    bh,bh
   14001feb8:	push   rsp
   14001feba:	test   edi,edi
   14001febc:	push   rcx
   14001febe:	(bad)  
   14001febf:	(bad)  
   14001fec0:	push   rax
   14001fec2:	jge    0x14001fec3
   14001fec4:	(bad)  
   14001fec5:	in     eax,dx
   14001fec6:	js     0x14001fec7
   14001fec8:	(bad)  
   14001fec9:	jmp    0x14001ff3e
   14001fecb:	(bad)  
   14001fecc:	jmp    rbp
   14001fece:	outs   dx,BYTE PTR ds:[rsi]
   14001fecf:	(bad)  
   14001fed0:	sti    
   14001fed1:	loope  0x14001ff3d
   14001fed3:	(bad)  
   14001fed4:	cli    
   14001fed5:	fisub  DWORD PTR [rbx-0x1]
   14001fed8:	not    ebp
   14001feda:	pop    rdi
   14001fedb:	push   rbp
   14001fedd:	rcr    BYTE PTR [rcx-0x1],1
   14001fee0:	repnz leave 
   14001fee2:	push   rsp
   14001fee3:	push   rax
   14001fee5:	ret    
   14001fee6:	push   rax
   14001fee7:	(bad)  
   14001fee8:	(bad)  
   14001fee9:	mov    esp,0xb6e7ff4b
   14001feee:	rex.RX jmp rsp
   14001fef1:	scas   eax,DWORD PTR es:[rdi]
   14001fef2:	rex.X jmp rdx
   14001fef5:	stos   BYTE PTR es:[rdi],al
   14001fef6:	ds (bad) 
   14001fef8:	fsub   QWORD PTR [rcx-0x743800c7]
   14001fefe:	cs cmc 
   14001ff00:	pushf  
   14001ff01:	sbb    dl,BYTE PTR gs:[rsi+0x0]
	...
   14001ff64:	or     al,0x67
   14001ff66:	retf   
   14001ff67:	add    dh,BYTE PTR [rsi-0x3696bb73]
   14001ff6d:	mov    edx,0xf0b0ee70
   14001ff72:	mov    esi,0xc4f4b0ff
   14001ff77:	push   QWORD PTR [rax-0x70002f09]
   14001ff7d:	sti    
   14001ff7e:	(bad)  
   14001ff7f:	dec    DWORD PTR [rbp-0x7b000103]
   14001ff85:	std    
   14001ff86:	(bad)  
   14001ff87:	jmp    QWORD PTR [rdi-0xf]
   14001ff8a:	(bad)  
   14001ff8b:	call   QWORD PTR [rax-0x18]
   14001ff8e:	(bad)  
   14001ff8f:	inc    DWORD PTR [rax-0x1f]
   14001ff92:	(bad)  
   14001ff93:	push   QWORD PTR [rdi]
   14001ff95:	fdivr  st,st(7)
   14001ff97:	push   QWORD PTR [rbx]
   14001ff99:	sar    edi,1
   14001ff9b:	jmp    FWORD PTR [rsi]
   14001ff9d:	retf   0xffff
   14001ffa0:	sub    al,cl
   14001ffa2:	(bad)  
   14001ffa3:	jmp    FWORD PTR [rdx]
   14001ffa5:	mov    ebp,0xba2bffff
   14001ffaa:	(bad)  
   14001ffab:	push   QWORD PTR [rax]
   14001ffad:	mov    esp,0xc13affff
   14001ffb2:	(bad)  
   14001ffb3:	jmp    FWORD PTR [rcx-0x34]
   14001ffb6:	repz call rax
   14001ffb9:	out    0xb2,al
   14001ffbb:	push   rcx
   14001ffbd:	lock movabs eax,ds:0xa9fdfeffa7f8f9ff
   14001ffc7:	(bad)  
   14001ffc8:	(bad)  
   14001ffc9:	(bad)  
   14001ffca:	stos   BYTE PTR es:[rdi],al
   14001ffcb:	(bad)  
   14001ffcc:	(bad)  
   14001ffcd:	(bad)  
   14001ffce:	stos   BYTE PTR es:[rdi],al
   14001ffcf:	(bad)  
   14001ffd0:	(bad)  
   14001ffd1:	(bad)  
   14001ffd2:	stos   DWORD PTR es:[rdi],eax
   14001ffd3:	(bad)  
   14001ffd4:	(bad)  
   14001ffd5:	std    
   14001ffd6:	test   eax,0xa5fcfeff
   14001ffdb:	(bad)  
   14001ffdc:	call   0xf7e971a8
   14001ffe1:	sub    BYTE PTR [rdx],0xcf
   14001ffe4:	scas   al,BYTE PTR es:[rdi]
   14001ffe5:	jb     0x140020005
   14001ffe7:	retf   
   14001ffe8:	lods   eax,DWORD PTR ds:[rsi]
   14001ffe9:	jb     0x140020009
   14001ffeb:	int3   
   14001ffec:	lods   eax,DWORD PTR ds:[rsi]
   14001ffed:	jb     0x14002000d
   14001ffef:	int3   
   14001fff0:	lods   eax,DWORD PTR ds:[rsi]
   14001fff1:	jb     0x140020011
   14001fff3:	int3   
   14001fff4:	lods   eax,DWORD PTR ds:[rsi]
   14001fff5:	jb     0x140020015
   14001fff7:	int3   
   14001fff8:	lods   al,BYTE PTR ds:[rsi]
   14001fff9:	jno    0x140020019
   14001fffb:	int3   
   14001fffc:	lods   al,BYTE PTR ds:[rsi]
   14001fffd:	jno    0x14002001d
   14001ffff:	int3   
   140020000:	lods   al,BYTE PTR ds:[rsi]
   140020001:	jno    0x140020021
   140020003:	int3   
   140020004:	lods   al,BYTE PTR ds:[rsi]
   140020005:	jno    0x140020025
   140020007:	int    0xac
   140020009:	jno    0x140020029
   14002000b:	int    0xab
   14002000d:	jno    0x14002002d
   14002000f:	int    0xab
   140020011:	jo     0x140020031
   140020013:	int    0xab
   140020015:	jo     0x140020035
   140020017:	int    0xab
   140020019:	jo     0x140020039
   14002001b:	int    0xaa
   14002001d:	jo     0x14002003d
   14002001f:	int    0xaa
   140020021:	jo     0x140020040
   140020023:	(bad)  
   140020024:	stos   BYTE PTR es:[rdi],al
   140020025:	jo     0x140020044
   140020027:	(bad)  
   140020028:	stos   BYTE PTR es:[rdi],al
   140020029:	outs   dx,DWORD PTR ds:[rsi]
   14002002a:	sbb    eax,0x1d6fa9ce
   14002002f:	(bad)  
   140020030:	test   eax,0xa9ce1d6f
   140020035:	outs   dx,DWORD PTR ds:[rsi]
   140020036:	sbb    eax,0x1d6fa9ce
   14002003b:	(bad)  
   14002003c:	test   eax,0xa8cf1d6f
   140020041:	outs   dx,BYTE PTR ds:[rsi]
   140020042:	sbb    eax,0x1d6ea8cf
   140020047:	iret   
   140020048:	test   al,0x6e
   14002004a:	sbb    eax,0x1d6ea8cf
   14002004f:	iret   
   140020050:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140020051:	outs   dx,BYTE PTR ds:[rsi]
   140020052:	sbb    eax,0x1d6da7cf
   140020057:	iret   
   140020058:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140020059:	ins    DWORD PTR es:[rdi],dx
   14002005a:	sbb    eax,0x1d6da7cf
   14002005f:	iret   
   140020060:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140020061:	ins    DWORD PTR es:[rdi],dx
   140020062:	sbb    eax,0x1c6da6cf
   140020067:	iret   
   140020068:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140020069:	ins    DWORD PTR es:[rdi],dx
   14002006a:	sbb    al,0xcf
   14002006c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002006d:	ins    BYTE PTR es:[rdi],dx
   14002006e:	sbb    al,0xcf
   140020070:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140020071:	ins    BYTE PTR es:[rdi],dx
   140020072:	sbb    al,0xcf
   140020074:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140020075:	ins    BYTE PTR es:[rdi],dx
   140020076:	sbb    al,0xd0
   140020078:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140020079:	ins    BYTE PTR es:[rdi],dx
   14002007a:	sbb    al,0xd0
   14002007c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002007d:	ins    BYTE PTR es:[rdi],dx
   14002007e:	sbb    al,0xd0
   140020080:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140020081:	ins    BYTE PTR es:[rdi],dx
   140020082:	sbb    al,0xd0
   140020084:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140020085:	imul   ebx,DWORD PTR [rax+rdx*8],0xffffffad
   140020089:	js     0x1400200b3
   14002008b:	rcr    esp,cl
   14002008d:	shl    BYTE PTR [rsi-0x14],0xfe
   140020091:	neg    BYTE PTR [rdi-0x62080001]
   140020097:	(bad)  
   140020098:	(bad)  
   140020099:	neg    DWORD PTR [rbx-0x65080101]
   14002009f:	(bad)  
   1400200a0:	(bad)  
   1400200a1:	clc    
   1400200a2:	xchg   edi,eax
   1400200a3:	(bad)  
   1400200a4:	(bad)  
   1400200a5:	not    BYTE PTR [rdi+rdi*8-0x6d0901]
   1400200ac:	push   rbp
   1400200ae:	nop
   1400200af:	(bad)  
   1400200b0:	push   rsi
   1400200b2:	mov    edi,?
   1400200b4:	push   rbx
   1400200b6:	mov    bh,bh
   1400200b8:	push   rsp
   1400200ba:	test   edi,edi
   1400200bc:	push   rcx
   1400200be:	cmp    edi,0xff7df0ff
   1400200c4:	(bad)  
   1400200c5:	in     eax,dx
   1400200c6:	js     0x1400200c7
   1400200c8:	(bad)  
   1400200c9:	jmp    0x14002013e
   1400200cb:	(bad)  
   1400200cc:	(bad)  
   1400200cd:	in     eax,0x6d
   1400200cf:	(bad)  
   1400200d0:	sti    
   1400200d1:	loopne 0x14002013b
   1400200d3:	(bad)  
   1400200d4:	cli    
   1400200d5:	fisub  DWORD PTR [rbx-0x1]
   1400200d8:	not    ebp
   1400200da:	pop    rdi
   1400200db:	push   rbp
   1400200dd:	rcr    BYTE PTR [rcx-0x1],1
   1400200e0:	repnz leave 
   1400200e2:	push   rsp
   1400200e3:	(bad)  
   1400200e4:	out    dx,eax
   1400200e5:	ret    0xff50
   1400200e8:	(bad)  
   1400200e9:	mov    edx,0xb6e7ff4a
   1400200ee:	rex.RB jmp r12
   1400200f1:	scas   eax,DWORD PTR es:[rdi]
   1400200f2:	rex.X jmp rdx
   1400200f5:	test   eax,0xa2dcff3e
   1400200fa:	cmp    edi,edi
   1400200fc:	rol    DWORD PTR [rsi+0x669df22b],0x1a
   140020103:	add    BYTE PTR [rax],0x0
	...
   140020162:	add    BYTE PTR [rax],al
   140020164:	or     al,0x67
   140020166:	retf   
   140020167:	add    DWORD PTR [rdi-0x33bdbc72],esi
   14002016d:	lahf   
   14002016e:	rex.WR fcompp 
   140020171:	call   0x134b3010d
   140020176:	(bad)  
   140020177:	push   QWORD PTR [rax-0x5b00380a]
   14002017d:	stc    
   14002017e:	out    0xff,eax
   140020180:	xchg   esi,eax
   140020181:	std    
   140020182:	(bad)  
   140020183:	call   QWORD PTR [rax+0x7ffffffe]
   140020189:	cli    
   14002018a:	(bad)  
   14002018b:	jmp    QWORD PTR [rcx-0x11]
   14002018e:	(bad)  
   14002018f:	dec    DWORD PTR [rdx-0x18]
   140020192:	(bad)  
   140020193:	(bad)  
   140020194:	cmp    eax,0x37ffffde
   140020199:	xlat   BYTE PTR ds:[rbx]
   14002019a:	(bad)  
   14002019b:	push   QWORD PTR [rdx]
   14002019d:	iret   
   14002019e:	(bad)  
   14002019f:	jmp    FWORD PTR [rip+0x2affffc7]        # 0x16b02016c
   1400201a5:	sar    bh,0xff
   1400201a8:	sub    DWORD PTR [rdi+rdi*8-0x45d501],edi
   1400201af:	push   QWORD PTR [rcx]
   1400201b1:	mov    ebp,0xc23fffff
   1400201b6:	std    
   1400201b7:	push   QWORD PTR [rbp+rcx*8-0x12]
   1400201bb:	(bad)  
   1400201bc:	fucomp st(2)
   1400201be:	lods   al,BYTE PTR ds:[rsi]
   1400201bf:	push   rbx
   1400201c1:	repnz movabs ds:0xabfdfeffa9f9faff,eax
   1400201cb:	(bad)  
   1400201cc:	(bad)  
   1400201cd:	std    
   1400201ce:	stos   DWORD PTR es:[rdi],eax
   1400201cf:	(bad)  
   1400201d0:	(bad)  
   1400201d1:	std    
   1400201d2:	stos   BYTE PTR es:[rdi],al
   1400201d3:	(bad)  
   1400201d4:	(bad)  
   1400201d5:	cld    
   1400201d6:	stos   BYTE PTR es:[rdi],al
   1400201d7:	(bad)  
   1400201d8:	(bad)  
   1400201d9:	sti    
   1400201da:	movabs ds:0x1e73aecf297fb7ff,al
   1400201e3:	or     al,0x0
	...
   140020285:	add    BYTE PTR [rax],al
   140020287:	add    BYTE PTR [rbx+rbp*2+0x77ad0a1c],ah
   14002028e:	sub    bl,dl
   140020290:	(bad)  
   140020291:	cmc    
   140020292:	popf   
   140020293:	(bad)  
   140020294:	push   rdi
   140020296:	popf   
   140020297:	(bad)  
   140020298:	(bad)  
   140020299:	neg    DWORD PTR [rbx-0x65080101]
   14002029f:	(bad)  
   1400202a0:	(bad)  
   1400202a1:	clc    
   1400202a2:	cwde   
   1400202a3:	(bad)  
   1400202a4:	(bad)  
   1400202a5:	not    BYTE PTR [rdi+rdi*8-0x6d0a01]
   1400202ac:	push   rbp
   1400202ae:	nop
   1400202af:	(bad)  
   1400202b0:	push   rsi
   1400202b2:	mov    edi,edi
   1400202b4:	push   rbp
   1400202b6:	xchg   edi,edi
   1400202b8:	push   rdx
   1400202ba:	test   edi,edi
   1400202bc:	push   rax
   1400202be:	cmp    bh,0xff
   1400202c1:	out    dx,eax
   1400202c2:	jl     0x1400202c3
   1400202c4:	(bad)  
   1400202c5:	in     eax,dx
   1400202c6:	jbe    0x1400202c7
   1400202c8:	(bad)  
   1400202c9:	jmp    0x126010240
   1400202ce:	ins    DWORD PTR es:[rdi],dx
   1400202cf:	(bad)  
   1400202d0:	sti    
   1400202d1:	fild   QWORD PTR [rax-0x1]
   1400202d4:	stc    
   1400202d5:	fldenv [rbx-0x1]
   1400202d8:	not    ch
   1400202da:	pop    rsp
   1400202db:	push   rbp
   1400202dd:	iret   
   1400202de:	pop    rcx
   1400202df:	push   rdx
   1400202e1:	enter  0xff54,0xee
   1400202e5:	rcl    DWORD PTR [rax-0x1],0xea
   1400202e9:	mov    ecx,0xb6e7ff4a
   1400202ee:	rex.RB jmp r13
   1400202f1:	scas   eax,DWORD PTR es:[rdi]
   1400202f2:	jmp    r9
   1400202f5:	test   al,0x3e
   1400202f7:	(bad)  
   1400202f8:	fsub   QWORD PTR [rax+0x7fb9ff38]
   1400202fe:	sub    ch,ah
   140020300:	popf   
   140020301:	data16 sbb ah,BYTE PTR [rcx+0x0]
	...
   140020365:	add    BYTE PTR [rax],al
   140020367:	add    BYTE PTR [rcx-0x41e5b06c],bh
   14002036d:	mov    WORD PTR [rbx],?
   14002036f:	shl    ah,cl
   140020371:	jrcxz  0x1400203ec
   140020373:	dec    ebp
   140020375:	lock stos BYTE PTR es:[rdi],al
   140020377:	push   QWORD PTR [rax-0x50003809]
   14002037d:	clc    
   14002037e:	int    0xff
   140020380:	xchg   esi,eax
   140020381:	cld    
   140020382:	std    
   140020383:	call   FWORD PTR [rax-0x6f000002]
   140020389:	(bad)  
   14002038a:	(bad)  
   14002038b:	(bad)  
   14002038c:	jns    0x140020387
   14002038e:	(bad)  
   14002038f:	call   FWORD PTR [rbp-0x11]
   140020392:	(bad)  
   140020393:	inc    DWORD PTR [rdi-0x1b]
   140020396:	(bad)  
   140020397:	(bad)  
   140020398:	cmp    al,0xdc
   14002039a:	(bad)  
   14002039b:	push   QWORD PTR [rsi]
   14002039d:	xlat   BYTE PTR ds:[rbx]
   14002039e:	(bad)  
   14002039f:	push   QWORD PTR [rdx]
   1400203a1:	(bad)  
   1400203a2:	(bad)  
   1400203a3:	jmp    FWORD PTR [rsi]
   1400203a5:	(bad)  
   1400203a6:	(bad)  
   1400203a7:	jmp    FWORD PTR [rdx]
   1400203a9:	sar    bh,0xff
   1400203ac:	sub    DWORD PTR [rdi+rdi*8-0x45d201],edi
   1400203b3:	push   QWORD PTR [rdx]
   1400203b5:	mov    ebp,0xc343ffff
   1400203ba:	std    
   1400203bb:	inc    DWORD PTR [rbx-0x1900182f]
   1400203c1:	(bad)  
   1400203c2:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400203c3:	push   rsp
   1400203c5:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400203c7:	(bad)  
   1400203c8:	sti    
   1400203c9:	cli    
   1400203ca:	stos   BYTE PTR es:[rdi],al
   1400203cb:	(bad)  
   1400203cc:	(bad)  
   1400203cd:	(bad)  
   1400203ce:	lods   al,BYTE PTR ds:[rsi]
   1400203cf:	(bad)  
   1400203d0:	(bad)  
   1400203d1:	std    
   1400203d2:	lods   al,BYTE PTR ds:[rsi]
   1400203d3:	(bad)  
   1400203d4:	(bad)  
   1400203d5:	std    
   1400203d6:	stos   DWORD PTR es:[rdi],eax
   1400203d7:	(bad)  
   1400203d8:	(bad)  
   1400203d9:	cli    
   1400203da:	lahf   
   1400203db:	inc    eax
   1400203dd:	lea    esi,[rdi]
   1400203df:	(bad)  
   1400203e0:	scas   al,BYTE PTR es:[rdi]
   1400203e1:	jae    0x140020401
   1400203e3:	(bad)  
	...
   140020488:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140020489:	ins    BYTE PTR es:[rdi],dx
   14002048a:	sbb    al,0x20
   14002048c:	mov    ebp,0xfedc3e8f
   140020491:	hlt    
   140020492:	pushf  
   140020493:	(bad)  
   140020494:	(bad)  
   140020495:	neg    BYTE PTR [rsi-0x65080101]
   14002049b:	(bad)  
   14002049c:	(bad)  
   14002049d:	neg    DWORD PTR [rax-0x67080101]
   1400204a3:	(bad)  
   1400204a4:	(bad)  
   1400204a5:	not    BYTE PTR [rdi+rdi*8-0x6e0a01]
   1400204ac:	push   rsi
   1400204ae:	mov    ?,edi
   1400204b0:	push   rsi
   1400204b2:	mov    edi,edi
   1400204b4:	push   rbx
   1400204b6:	xchg   edi,edi
   1400204b8:	push   rbx
   1400204ba:	cmp    edi,0xffffffff
   1400204bd:	lock cmp bh,0xff
   1400204c1:	out    dx,eax
   1400204c2:	jnp    0x1400204c3
   1400204c4:	(bad)  
   1400204c5:	jmp    0x14002053d
   1400204c7:	(bad)  
   1400204c8:	(bad)  
   1400204c9:	call   0x12400043e
   1400204ce:	ins    DWORD PTR es:[rdi],dx
   1400204cf:	(bad)  
   1400204d0:	sti    
   1400204d1:	fbld   TBYTE PTR [rdi-0x1]
   1400204d4:	stc    
   1400204d5:	fldenv [rdx-0x1]
   1400204d8:	cmc    
   1400204d9:	rcr    DWORD PTR [rbp-0x1],cl
   1400204dc:	cmc    
   1400204dd:	iret   
   1400204de:	pop    rax
   1400204df:	push   rdx
   1400204e1:	enter  0xff53,0xed
   1400204e5:	rcl    BYTE PTR [rax-0x1],0xe9
   1400204e9:	mov    ebx,0xb4e7ff49
   1400204ee:	rex.R jmp rbx
   1400204f1:	scas   al,BYTE PTR es:[rdi]
   1400204f2:	jmp    r9
   1400204f5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400204f6:	cmp    al,0xff
   1400204f8:	fcomp  DWORD PTR [rbp+0x78b1ff37]
   1400204fe:	(bad)  
   1400204ff:	out    0x9d,al
   140020501:	data16 sbb al,BYTE PTR [rsi+0x0]
	...
   140020565:	add    BYTE PTR [rax],al
   140020567:	add    cl,al
   140020569:	xlat   BYTE PTR ds:[rbx]
   14002056a:	mov    bh,0x4
   14002056c:	mov    eax,0xf2b92e81
   140020571:	fnstenv [rcx-0x4]
   140020574:	imul   cl
   140020576:	cmp    bh,0xbf
   140020579:	cmc    
   14002057a:	mov    dh,0xff
   14002057c:	scas   al,BYTE PTR es:[rdi]
   14002057d:	clc    
   14002057e:	retf   0xb1ff
   140020581:	sti    
   140020582:	xlat   BYTE PTR ds:[rbx]
   140020583:	call   FWORD PTR [rdx-0x67000002]
   140020589:	(bad)  
   14002058a:	(bad)  
   14002058b:	call   QWORD PTR [rdx+0x75ffffff]
   140020591:	clc    
   140020592:	(bad)  
   140020593:	call   FWORD PTR [rax-0x14]
   140020596:	(bad)  
   140020597:	inc    DWORD PTR [rsp+riz*8-0x1]
   14002059b:	(bad)  
   14002059c:	cmp    al,0xdb
   14002059e:	(bad)  
   14002059f:	push   QWORD PTR [rsi]
   1400205a1:	(bad)  
   1400205a2:	(bad)  
   1400205a3:	push   QWORD PTR [rcx]
   1400205a5:	(bad)  
   1400205a6:	(bad)  
   1400205a7:	jmp    FWORD PTR [rsi]
   1400205a9:	(bad)  
   1400205aa:	(bad)  
   1400205ab:	jmp    FWORD PTR [rbx]
   1400205ad:	mov    edi,0xbc2bffff
   1400205b2:	(bad)  
   1400205b3:	jmp    FWORD PTR [rsi]
   1400205b5:	mov    edx,0xbf35ffff
   1400205ba:	(bad)  
   1400205bb:	inc    DWORD PTR [rdi-0x3c]
   1400205be:	sti    
   1400205bf:	call   QWORD PTR [rsi+rdx*8-0x13140023]
   1400205c6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400205c7:	push   rbp
   1400205c9:	hlt    
   1400205ca:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400205cb:	(bad)  
   1400205cc:	cld    
   1400205cd:	sti    
   1400205ce:	stos   BYTE PTR es:[rdi],al
   1400205cf:	(bad)  
   1400205d0:	(bad)  
   1400205d1:	std    
   1400205d2:	lods   al,BYTE PTR ds:[rsi]
   1400205d3:	(bad)  
   1400205d4:	(bad)  
   1400205d5:	cld    
   1400205d6:	stos   DWORD PTR es:[rdi],eax
   1400205d7:	(bad)  
   1400205d8:	(bad)  
   1400205d9:	stc    
   1400205da:	movabs al,ds:0x1f73aedf48a1d1ff
   1400205e3:	add    BYTE PTR ds:[rax],al
	...
   140020686:	add    BYTE PTR [rax],al
   140020688:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140020689:	ins    BYTE PTR es:[rdi],dx
   14002068a:	sbb    al,0x3d
   14002068c:	iret   
   14002068d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002068e:	push   rbx
   14002068f:	in     al,0xfe
   140020691:	cmc    
   140020692:	pushf  
   140020693:	(bad)  
   140020694:	(bad)  
   140020695:	cmc    
   140020696:	pushf  
   140020697:	(bad)  
   140020698:	(bad)  
   140020699:	neg    BYTE PTR [rdx-0x67090101]
   14002069f:	(bad)  
   1400206a0:	(bad)  
   1400206a1:	not    BYTE PTR [rbp-0x6b090101]
   1400206a7:	(bad)  
   1400206a8:	push   rbp
   1400206aa:	xchg   ecx,eax
   1400206ab:	(bad)  
   1400206ac:	push   rbp
   1400206ae:	mov    ?,edi
   1400206b0:	push   rbp
   1400206b2:	mov    edi,edi
   1400206b4:	push   rsp
   1400206b6:	test   edi,edi
   1400206b8:	push   rbx
   1400206ba:	cmp    edi,0xffffffff
   1400206bd:	lock jg 0x1400206bf
   1400206c0:	push   rax
   1400206c2:	jp     0x1400206c3
   1400206c4:	(bad)  
   1400206c5:	jmp    0x14002073b
   1400206c7:	(bad)  
   1400206c8:	jmp    rdi
   1400206ca:	jo     0x1400206cb
   1400206cc:	cld    
   1400206cd:	loop   0x14002073a
   1400206cf:	(bad)  
   1400206d0:	sti    
   1400206d1:	frstor [rdi-0x1]
   1400206d4:	stc    
   1400206d5:	fldenv [rax-0x1]
   1400206d8:	not    dl
   1400206da:	pop    rsp
   1400206db:	push   rsp
   1400206dd:	int    0x58
   1400206df:	push   rax
   1400206e1:	enter  0xff52,0xed
   1400206e5:	ror    BYTE PTR [rbp-0x1],0xe9
   1400206e9:	mov    ecx,0xb4e7ff49
   1400206ee:	rex.R jmp rbx
   1400206f1:	lods   eax,DWORD PTR ds:[rsi]
   1400206f2:	jmp    r9
   1400206f5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400206f6:	cmp    eax,0x359bd7ff
   1400206fb:	jmp    QWORD PTR [rsi-0x6223df91]
   140020701:	data16 sbb bl,BYTE PTR [rsi]
	...
   140020768:	(bad)  
   140020769:	cld    
   14002076a:	mov    cl,0x1
   14002076c:	mov    ecx,0xea8d2c80
   140020771:	(bad)
   140020775:	jmp    0x12df606f7
   14002077a:	xchg   bh,bh
   14002077c:	mov    ecx,0xadffbff8
   140020781:	cli    
   140020782:	int    0xff
   140020784:	movabs ds:0x99fffffe9effedfb,eax
   14002078d:	(bad)  
   14002078e:	(bad)  
   14002078f:	call   QWORD PTR [rdx+0x71ffffff]
   140020795:	idiv   bh
   140020797:	call   QWORD PTR [rbx+rbp*8-0x1]
   14002079b:	inc    DWORD PTR [rbx-0x1f]
   14002079e:	(bad)  
   14002079f:	(bad)  
   1400207a0:	cmp    ebx,ebx
   1400207a2:	(bad)  
   1400207a3:	push   QWORD PTR [rdx+rdx*8]
   1400207a6:	(bad)  
   1400207a7:	push   QWORD PTR [rax]
   1400207a9:	int    0xff
   1400207ab:	jmp    FWORD PTR [rsp+rax*8]
   1400207ae:	(bad)  
   1400207af:	jmp    FWORD PTR [rdx]
   1400207b1:	mov    edi,0xbc2bffff
   1400207b6:	(bad)  
   1400207b7:	jmp    FWORD PTR [rsi]
   1400207b9:	mov    edx,0xbf36ffff
   1400207be:	(bad)  
   1400207bf:	dec    DWORD PTR [rbp+rax*8-0x6]
   1400207c3:	jmp    QWORD PTR [rdx-0x12002b27]
   1400207c9:	in     eax,dx
   1400207ca:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400207cb:	push   rsi
   1400207cd:	cmc    
   1400207ce:	test   al,0xff
   1400207d0:	cld    
   1400207d1:	cli    
   1400207d2:	stos   DWORD PTR es:[rdi],eax
   1400207d3:	(bad)  
   1400207d4:	(bad)  
   1400207d5:	cld    
   1400207d6:	lods   al,BYTE PTR ds:[rsi]
   1400207d7:	(bad)  
   1400207d8:	(bad)  
   1400207d9:	cli    
   1400207da:	movabs ds:0x1f73afe961bce2ff,eax
   1400207e3:	add    BYTE PTR [eax],al
	...
   140020886:	add    BYTE PTR [rax],al
   140020888:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140020889:	ins    BYTE PTR es:[rdi],dx
   14002088a:	sbb    al,0x69
   14002088c:	jrcxz  0x140020855
   14002088e:	outs   dx,DWORD PTR ds:[rsi]
   14002088f:	lock (bad) 
   140020891:	cmc    
   140020892:	pushf  
   140020893:	(bad)  
   140020894:	(bad)  
   140020895:	cmc    
   140020896:	pushf  
   140020897:	(bad)  
   140020898:	(bad)  
   140020899:	neg    BYTE PTR [rcx-0x67090101]
   14002089f:	(bad)  
   1400208a0:	(bad)  
   1400208a1:	not    BYTE PTR [rbp-0x6b0a0101]
   1400208a7:	(bad)  
   1400208a8:	push   rbp
   1400208aa:	nop
   1400208ab:	(bad)  
   1400208ac:	push   rbp
   1400208ae:	mov    ?,edi
   1400208b0:	push   rbp
   1400208b2:	mov    bh,bh
   1400208b4:	push   rdx
   1400208b6:	test   edi,edi
   1400208b8:	push   rcx
   1400208ba:	(bad)  
   1400208bb:	(bad)  
   1400208bc:	(bad)  
   1400208bd:	out    dx,eax
   1400208be:	jg     0x1400208bf
   1400208c0:	(bad)  
   1400208c1:	out    dx,al
   1400208c2:	jns    0x1400208c3
   1400208c4:	(bad)  
   1400208c5:	jmp    0x14002093b
   1400208c7:	(bad)  
   1400208c8:	jmp    rsi
   1400208ca:	outs   dx,BYTE PTR ds:[rsi]
   1400208cb:	(bad)  
   1400208cc:	cld    
   1400208cd:	loop   0x14002093a
   1400208cf:	(bad)  
   1400208d0:	cli    
   1400208d1:	(bad)  [rbp-0x1]
   1400208d4:	not    edi
   1400208d6:	pop    rdi
   1400208d7:	push   rsi
   1400208d9:	rcr    DWORD PTR [rbx-0x1],1
   1400208dc:	hlt    
   1400208dd:	int3   
   1400208de:	push   rdi
   1400208df:	push   rax
   1400208e1:	(bad)  
   1400208e2:	push   rdx
   1400208e3:	(bad)  
   1400208e4:	jmp    0x1400208a4
   1400208e6:	rex.WR (bad) 
   1400208e8:	call   0x1280151a5
   1400208ed:	mov    ah,0x43
   1400208ef:	jmp    rbx
   1400208f1:	lods   al,BYTE PTR ds:[rsi]
   1400208f2:	(bad)  
   1400208f3:	(bad)  
   1400208f4:	fisub  WORD PTR [rsi-0x672a00c5]
   1400208fa:	xor    al,0xfd
   1400208fc:	sahf   
   1400208fd:	addr32 sbb cl,bl
   140020900:	sahf   
   140020901:	sbb    al,BYTE PTR [edx]
	...
   14002096c:	mov    bh,0x81
   14002096e:	sub    eax,0x4fabd85d
   140020973:	out    0xf9,al
   140020975:	out    0x79,al
   140020977:	(bad)  
   140020978:	cli    
   140020979:	out    dx,al
   14002097a:	cmp    bh,0xed
   14002097d:	repz xchg ecx,eax
   14002097f:	push   QWORD PTR [rdx-0x52003605]
   140020985:	cld    
   140020986:	sar    bh,cl
   140020988:	fwait
   140020989:	std    
   14002098a:	(bad)  
   14002098b:	jmp    QWORD PTR [rdx-0x66000001]
   140020991:	(bad)  
   140020992:	(bad)  
   140020993:	call   QWORD PTR [rcx+0x6affffff]
   140020999:	repz (bad) 
   14002099b:	call   QWORD PTR [rax-0x18]
   14002099e:	(bad)  
   14002099f:	inc    DWORD PTR [rcx-0x1f]
   1400209a2:	(bad)  
   1400209a3:	(bad)  
   1400209a4:	cmp    edx,ebx
   1400209a6:	(bad)  
   1400209a7:	push   QWORD PTR [rcx+rdx*8]
   1400209aa:	(bad)  
   1400209ab:	jmp    FWORD PTR [rdi]
   1400209ad:	retf   
   1400209ae:	(bad)  
   1400209af:	jmp    FWORD PTR [rdx]
   1400209b1:	ret    
   1400209b2:	(bad)  
   1400209b3:	jmp    FWORD PTR [rcx]
   1400209b5:	mov    ebp,0xbb2bffff
   1400209ba:	(bad)  
   1400209bb:	push   QWORD PTR [rax]
   1400209bd:	mov    esp,0xbf35ffff
   1400209c2:	(bad)  
   1400209c3:	dec    DWORD PTR [rsi-0x3b]
   1400209c6:	cli    
   1400209c7:	jmp    QWORD PTR [rdi-0x12002d26]
   1400209cd:	in     al,dx
   1400209ce:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400209cf:	push   rsi
   1400209d1:	hlt    
   1400209d2:	test   al,0xff
   1400209d4:	sti    
   1400209d5:	stc    
   1400209d6:	lods   al,BYTE PTR ds:[rsi]
   1400209d7:	(bad)  
   1400209d8:	(bad)  
   1400209d9:	cli    
   1400209da:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400209db:	push   rbp
   1400209dd:	fidivr WORD PTR [rsi-0xa]
   1400209e0:	scas   eax,DWORD PTR es:[rdi]
   1400209e1:	jae    0x140020a02
   1400209e3:	(bad)  
	...
   140020a88:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140020a89:	ins    BYTE PTR es:[rdi],dx
   140020a8a:	sbb    al,0x9f
   140020a8c:	hlt    
   140020a8d:	in     eax,0x89
   140020a8f:	stc    
   140020a90:	(bad)  
   140020a91:	hlt    
   140020a92:	popf   
   140020a93:	(bad)  
   140020a94:	(bad)  
   140020a95:	cmc    
   140020a96:	pushf  
   140020a97:	(bad)  
   140020a98:	(bad)  
   140020a99:	neg    BYTE PTR [rcx-0x68090101]
   140020a9f:	(bad)  
   140020aa0:	(bad)  
   140020aa1:	not    DWORD PTR [rbp-0x6c0a0101]
   140020aa7:	(bad)  
   140020aa8:	push   rsp
   140020aaa:	nop
   140020aab:	(bad)  
   140020aac:	push   rbp
   140020aae:	(bad)  
   140020aaf:	(bad)  
   140020ab0:	push   rbx
   140020ab2:	mov    bh,bh
   140020ab4:	push   rdx
   140020ab6:	test   edi,edi
   140020ab8:	push   rax
   140020aba:	cmp    edi,0xff7defff
   140020ac0:	(bad)  
   140020ac1:	in     eax,dx
   140020ac2:	jns    0x140020ac3
   140020ac4:	(bad)  
   140020ac5:	call   0x127020a3d
   140020aca:	outs   dx,BYTE PTR ds:[rsi]
   140020acb:	(bad)  
   140020acc:	sti    
   140020acd:	loope  0x140020b39
   140020acf:	(bad)  
   140020ad0:	cli    
   140020ad1:	fisub  DWORD PTR [rdi+rdi*8-0x9]
   140020ad5:	(bad)  
   140020ad6:	pop    rdi
   140020ad7:	push   rbp
   140020ad9:	rcr    BYTE PTR [rbx-0x1],1
   140020adc:	repz int3 
   140020ade:	push   rsi
   140020adf:	(bad)  
   140020ae0:	out    dx,eax
   140020ae1:	ret    
   140020ae2:	push   rcx
   140020ae3:	(bad)  
   140020ae4:	jmp    0x140020aa2
   140020ae6:	rex.WR (bad) 
   140020ae8:	call   0x1260153a4
   140020aed:	mov    bl,0x43
   140020aef:	jmp    rdx
   140020af1:	stos   DWORD PTR es:[rdi],eax
   140020af2:	rex (bad) 
   140020af4:	fisub  WORD PTR [rbp-0x703500c6]
   140020afa:	xor    edi,esi
   140020afc:	sahf   
   140020afd:	sbb    ah,BYTE PTR [eax+0x0]
	...
   140020b6c:	mov    edx,0xc425297f
   140020b71:	(bad)  
   140020b72:	cmp    ah,dl
   140020b74:	mul    ch
   140020b76:	jbe    0x140020b77
   140020b78:	cli    
   140020b79:	in     al,dx
   140020b7a:	jg     0x140020b7b
   140020b7c:	sti    
   140020b7d:	out    dx,eax
   140020b7e:	(bad)  
   140020b7f:	jmp    rdi
   140020b81:	hlt    
   140020b82:	(bad)  
   140020b83:	jmp    FWORD PTR [rsi-0x52003104]
   140020b89:	std    
   140020b8a:	fcos   
   140020b8c:	popf   
   140020b8d:	(bad)  
   140020b8e:	(bad)  
   140020b8f:	jmp    QWORD PTR [rdx-0x64000001]
   140020b95:	(bad)  
   140020b96:	(bad)  
   140020b97:	dec    DWORD PTR [rcx+0x65fffffc]
   140020b9d:	icebp  
   140020b9e:	(bad)  
   140020b9f:	dec    DWORD PTR [rbx-0x18]
   140020ba2:	(bad)  
   140020ba3:	(bad)  
   140020ba4:	cmp    eax,0x37ffffdf
   140020ba9:	xlat   BYTE PTR ds:[rbx]
   140020baa:	(bad)  
   140020bab:	push   QWORD PTR [rcx+rdx*8]
   140020bae:	(bad)  
   140020baf:	push   QWORD PTR [rax]
   140020bb1:	retf   
   140020bb2:	(bad)  
   140020bb3:	jmp    FWORD PTR [rbx+rax*8]
   140020bb6:	(bad)  
   140020bb7:	jmp    FWORD PTR [rdx]
   140020bb9:	mov    ebp,0xba2bffff
   140020bbe:	(bad)  
   140020bbf:	jmp    FWORD PTR [rsi]
   140020bc1:	mov    esp,0xc037ffff
   140020bc6:	(bad)  
   140020bc7:	call   QWORD PTR [rbx-0x39]
   140020bca:	clc    
   140020bcb:	jmp    FWORD PTR [rbp-0x10003125]
   140020bd1:	in     al,dx
   140020bd2:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140020bd3:	push   rdi
   140020bd5:	hlt    
   140020bd6:	test   eax,0xa8f7fbff
   140020bdb:	(bad)  
   140020bdc:	std    
   140020bdd:	not    BYTE PTR [rbp+0x2276b2fe]
   140020be3:	retf   0x73af
   140020be6:	(bad)  
   140020be7:	adc    eax,0x0
	...
   140020c84:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140020c85:	ins    DWORD PTR es:[rdi],dx
   140020c86:	sbb    al,0xf
   140020c88:	stos   DWORD PTR es:[rdi],eax
   140020c89:	je     0x140020cae
   140020c8b:	sar    ah,1
   140020c8d:	repz (bad) 
   140020c8f:	(bad)  
   140020c90:	(bad)  
   140020c91:	cmc    
   140020c92:	popf   
   140020c93:	(bad)  
   140020c94:	(bad)  
   140020c95:	cmc    
   140020c96:	fwait
   140020c97:	(bad)  
   140020c98:	(bad)  
   140020c99:	cmc    
   140020c9a:	cdq    
   140020c9b:	(bad)  
   140020c9c:	(bad)  
   140020c9d:	cmc    
   140020c9e:	xchg   esi,eax
   140020c9f:	(bad)  
   140020ca0:	(bad)  
   140020ca1:	cmc    
   140020ca2:	xchg   esp,eax
   140020ca3:	(bad)  
   140020ca4:	(bad)  
   140020ca5:	hlt    
   140020ca6:	xchg   ebx,eax
   140020ca7:	(bad)  
   140020ca8:	(bad)  
   140020ca9:	cmc    
   140020caa:	nop
   140020cab:	(bad)  
   140020cac:	(bad)  
   140020cad:	cmc    
   140020cae:	mov    edi,?
   140020cb0:	push   rbx
   140020cb2:	xchg   edi,edi
   140020cb4:	push   rcx
   140020cb6:	test   bh,bh
   140020cb8:	push   rax
   140020cba:	cmp    bh,0xff
   140020cbd:	out    dx,al
   140020cbe:	jge    0x140020cbf
   140020cc0:	(bad)  
   140020cc1:	jmp    0x140020d3a
   140020cc3:	(bad)  
   140020cc4:	(bad)  
   140020cc5:	jmp    0x126010c3b
   140020cca:	ins    DWORD PTR es:[rdi],dx
   140020ccb:	(bad)  
   140020ccc:	sti    
   140020ccd:	fild   QWORD PTR [rax-0x1]
   140020cd0:	cli    
   140020cd1:	fldenv [rbx-0x1]
   140020cd4:	not    ebx
   140020cd6:	pop    rsi
   140020cd7:	push   rbp
   140020cd9:	rcr    BYTE PTR [rdx-0x1],1
   140020cdc:	repz leave 
   140020cde:	push   rsi
   140020cdf:	(bad)  
   140020ce0:	out    dx,eax
   140020ce1:	ret    
   140020ce2:	push   rcx
   140020ce3:	(bad)  
   140020ce4:	(bad)  
   140020ce5:	mov    esp,0xb6e7ff4a
   140020cea:	rex.RXB jmp r14
   140020ced:	scas   eax,DWORD PTR es:[rdi]
   140020cee:	rex.X (bad) 
   140020cf0:	fild   QWORD PTR [rdx-0x5e2300c1]
   140020cf6:	cmp    bh,bh
   140020cf8:	mov    esp,0x9eee2b82
   140020cfd:	sbb    ebp,DWORD PTR [ebx+0x0]
	...
   140020d69:	add    BYTE PTR [rax],al
   140020d6b:	add    bh,bh
   140020d6d:	cld    
   140020d6e:	mov    cl,0x1
   140020d70:	mov    bh,0x7c
   140020d72:	and    eax,0x6ed8f2b2
   140020d77:	cli    
   140020d78:	stc    
   140020d79:	jmp    0x140020df7
   140020d7b:	(bad)  
   140020d7c:	cli    
   140020d7d:	icebp  
   140020d7e:	cmp    bh,0xfc
   140020d81:	repnz xchg bh,bh
   140020d84:	loopne 0x140020d7e
   140020d86:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140020d87:	jmp    FWORD PTR [rbx-0x58002d04]
   140020d8d:	cld    
   140020d8e:	jmp    0x14001b392
   140020d93:	jmp    QWORD PTR [rdx-0x64000001]
   140020d99:	(bad)  
   140020d9a:	(bad)  
   140020d9b:	inc    DWORD PTR [rsp+rdi*8-0xe9f0001]
   140020da2:	(bad)  
   140020da3:	dec    DWORD PTR [rax-0x1b]
   140020da6:	(bad)  
   140020da7:	(bad)  
   140020da8:	cmp    eax,0x37ffffde
   140020dad:	xlat   BYTE PTR ds:[rbx]
   140020dae:	(bad)  
   140020daf:	push   QWORD PTR [rbx]
   140020db1:	sar    edi,1
   140020db3:	push   QWORD PTR [rax]
   140020db5:	retf   0xffff
   140020db8:	sub    eax,0x2bffffc1
   140020dbd:	mov    edi,0xbc2bffff
   140020dc2:	(bad)  
   140020dc3:	push   QWORD PTR [rax]
   140020dc5:	mov    esp,0xc137ffff
   140020dca:	(bad)  
   140020dcb:	call   FWORD PTR [rax-0x39]
   140020dce:	idiv   edi
   140020dd0:	mov    bl,0xdd
   140020dd2:	retf   0xefff
   140020dd5:	in     al,dx
   140020dd6:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140020dd7:	push   rsi
   140020dd9:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140020ddb:	(bad)  
   140020ddc:	sti    
   140020ddd:	cmc    
   140020dde:	sahf   
   140020ddf:	(bad)  
   140020de0:	(bad)  [rdx+0x73afe659]
   140020de6:	(bad)  
   140020de7:	pop    rbp
	...
   140020e84:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140020e85:	ins    DWORD PTR es:[rdi],dx
   140020e86:	sbb    al,0x5d
   140020e88:	fnstsw WORD PTR [rbp+riz*2-0x640b0215]
   140020e8f:	(bad)  
   140020e90:	(bad)  
   140020e91:	cmc    
   140020e92:	pushf  
   140020e93:	(bad)  
   140020e94:	(bad)  
   140020e95:	cmc    
   140020e96:	fwait
   140020e97:	(bad)  
   140020e98:	(bad)  
   140020e99:	cmc    
   140020e9a:	cdq    
   140020e9b:	(bad)  
   140020e9c:	(bad)  
   140020e9d:	cmc    
   140020e9e:	xchg   esi,eax
   140020e9f:	(bad)  
   140020ea0:	(bad)  
   140020ea1:	cmc    
   140020ea2:	xchg   esp,eax
   140020ea3:	(bad)  
   140020ea4:	(bad)  
   140020ea5:	hlt    
   140020ea6:	xchg   ebx,eax
   140020ea7:	(bad)  
   140020ea8:	(bad)  
   140020ea9:	cmc    
   140020eaa:	(bad)  
   140020eab:	(bad)  
   140020eac:	push   rbp
   140020eae:	mov    edi,edi
   140020eb0:	push   rdx
   140020eb2:	xchg   bh,bh
   140020eb4:	push   rcx
   140020eb6:	test   bh,bh
   140020eb8:	push   rax
   140020eba:	jg     0x140020ebb
   140020ebc:	(bad)  
   140020ebd:	out    dx,eax
   140020ebe:	jnp    0x140020ebf
   140020ec0:	(bad)  
   140020ec1:	jmp    0x140020f38
   140020ec3:	(bad)  
   140020ec4:	jmp    rdi
   140020ec6:	outs   dx,DWORD PTR ds:[rsi]
   140020ec7:	(bad)  
   140020ec8:	std    
   140020ec9:	jrcxz  0x140020f35
   140020ecb:	(bad)  
   140020ecc:	sti    
   140020ecd:	(bad)  [rax-0x1]
   140020ed0:	stc    
   140020ed1:	fsub   DWORD PTR [rdx-0x1]
   140020ed4:	not    bl
   140020ed6:	pop    rbp
   140020ed7:	push   rsp
   140020ed9:	(bad)  
   140020eda:	pop    rdx
   140020edb:	push   rdx
   140020edd:	enter  0xff55,0xee
   140020ee1:	rcl    BYTE PTR [rax-0x1],0xeb
   140020ee5:	mov    esp,0xb5e7ff4a
   140020eea:	rex.RX jmp rsp
   140020eed:	scas   eax,DWORD PTR es:[rdi]
   140020eee:	jmp    r9
   140020ef1:	test   eax,0xa0daff3e
   140020ef6:	cmp    bh,bh
   140020ef8:	scas   eax,DWORD PTR es:[rdi]
   140020ef9:	ja     0x140020f20
   140020efb:	loop   0x140020e9c
   140020efd:	sbb    edi,DWORD PTR [ecx]
	...
   140020f70:	mov    bh,0x7c
   140020f72:	and    al,0x74
   140020f74:	jrcxz  0x140020f2f
   140020f76:	pop    rcx
   140020f77:	in     eax,dx
   140020f78:	imul   edx
   140020f7a:	jnp    0x140020f7b
   140020f7c:	cli    
   140020f7d:	out    dx,al
   140020f7e:	jle    0x140020f7f
   140020f80:	sti    
   140020f81:	icebp  
   140020f82:	cmp    edi,0xff8af6fc
   140020f88:	(bad)  
   140020f89:	cli    
   140020f8a:	scas   eax,DWORD PTR es:[rdi]
   140020f8b:	jmp    FWORD PTR [rcx-0x61002a03]
   140020f91:	std    
   140020f92:	sti    
   140020f93:	jmp    FWORD PTR [rcx-0x5d000001]
   140020f99:	(bad)  
   140020f9a:	(bad)  
   140020f9b:	call   FWORD PTR [rdi+rdi*8-0x6830001]
   140020fa2:	(bad)  
   140020fa3:	call   FWORD PTR [rbx-0x12]
   140020fa6:	(bad)  
   140020fa7:	inc    DWORD PTR [rdi-0x1b]
   140020faa:	(bad)  
   140020fab:	(bad)  
   140020fac:	cmp    eax,0x37ffffde
   140020fb1:	xlat   BYTE PTR ds:[rbx]
   140020fb2:	(bad)  
   140020fb3:	push   QWORD PTR [rbx]
   140020fb5:	iret   
   140020fb6:	(bad)  
   140020fb7:	jmp    FWORD PTR [rip+0x2cffffca]        # 0x16d020f87
   140020fbd:	sar    edi,0xff
   140020fc0:	sub    bh,BYTE PTR [rbp-0x45d20001]
   140020fc6:	(bad)  
   140020fc7:	push   QWORD PTR [rax]
   140020fc9:	mov    ebp,0xc138ffff
   140020fce:	(bad)  
   140020fcf:	call   FWORD PTR [rax+rcx*8-0x8]
   140020fd3:	(bad)  
   140020fd4:	mov    edx,0xf0ffc4de
   140020fd9:	in     eax,dx
   140020fda:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140020fdb:	push   rdi
   140020fdd:	repnz movabs ds:0x1f74affa87e3f5ff,al
   140020fe7:	mov    dl,0xaf
   140020fe9:	jae    0x14002100a
   140020feb:	add    al,BYTE PTR [rax]
	...
   14002107d:	add    BYTE PTR [rax],al
   14002107f:	add    BYTE PTR [rdi-0x58fde293],ah
   140021085:	outs   dx,BYTE PTR ds:[rsi]
   140021086:	(bad)  
   140021087:	mov    bl,0xf7
   140021089:	(bad)  
   14002108a:	(bad)  
   14002108b:	sti    
   14002108c:	(bad)  
   14002108d:	hlt    
   14002108e:	fwait
   14002108f:	(bad)  
   140021090:	(bad)  
   140021091:	cmc    
   140021092:	pushf  
   140021093:	(bad)  
   140021094:	(bad)  
   140021095:	cmc    
   140021096:	(bad)  
   140021097:	(bad)  
   140021098:	(bad)  
   140021099:	cmc    
   14002109a:	xchg   edi,eax
   14002109b:	(bad)  
   14002109c:	(bad)  
   14002109d:	cmc    
   14002109e:	xchg   ebp,eax
   14002109f:	(bad)  
   1400210a0:	(bad)  
   1400210a1:	hlt    
   1400210a2:	xchg   esp,eax
   1400210a3:	(bad)  
   1400210a4:	(bad)  
   1400210a5:	cmc    
   1400210a6:	nop
   1400210a7:	(bad)  
   1400210a8:	push   rbp
   1400210aa:	(bad)  
   1400210ab:	(bad)  
   1400210ac:	(bad)  
   1400210ad:	repz mov edi,edi
   1400210b0:	push   rdx
   1400210b2:	test   edi,edi
   1400210b4:	push   rcx
   1400210b6:	cmp    edi,0xff7fefff
   1400210bc:	(bad)  
   1400210bd:	out    dx,al
   1400210be:	jp     0x1400210bf
   1400210c0:	(bad)  
   1400210c1:	jmp    0x140021137
   1400210c3:	(bad)  
   1400210c4:	jmp    rsp
   1400210c6:	outs   dx,DWORD PTR ds:[rsi]
   1400210c7:	(bad)  
   1400210c8:	std    
   1400210c9:	loopne 0x140021134
   1400210cb:	(bad)  
   1400210cc:	cli    
   1400210cd:	fsub   QWORD PTR [rbp-0x1]
   1400210d0:	stc    
   1400210d1:	fsub   DWORD PTR [rax-0x1]
   1400210d4:	not    dl
   1400210d6:	pop    rbx
   1400210d7:	push   rsp
   1400210d9:	retf   
   1400210da:	pop    rcx
   1400210db:	push   rax
   1400210dd:	enter  0xff53,0xee
   1400210e1:	mov    edi,0xb9e9ff4f
   1400210e6:	rex.WB jmp r15
   1400210e9:	mov    ah,0x45
   1400210eb:	jmp    rdx
   1400210ed:	lods   eax,DWORD PTR ds:[rsi]
   1400210ee:	rex.X jmp rax
   1400210f1:	test   al,0x3d
   1400210f3:	call   rsi
   1400210f5:	(bad)  
   1400210f6:	ss std 
   1400210f8:	movabs al,ds:0x71b689fcd1b69
	...
   14002116d:	add    BYTE PTR [rax],al
   14002116f:	add    BYTE PTR [rax-0x35d1da83],bh
   140021175:	xchg   esp,eax
   140021176:	cmp    al,0xd8
   140021178:	mul    ch
   14002117a:	jne    0x14002117b
   14002117c:	stc    
   14002117d:	in     eax,dx
   14002117e:	jge    0x14002117f
   140021180:	cli    
   140021181:	icebp  
   140021182:	jg     0x140021183
   140021184:	sti    
   140021185:	cmc    
   140021186:	xchg   edi,edi
   140021188:	std    
   140021189:	clc    
   14002118a:	xchg   ecx,eax
   14002118b:	dec    ebx
   14002118d:	sti    
   14002118e:	mov    edx,0xdafda9ff
   140021193:	call   FWORD PTR [rbp-0x55000102]
   140021199:	(bad)  
   14002119a:	(bad)  
   14002119b:	jmp    QWORD PTR [rdx-0x62000001]
   1400211a1:	(bad)  
   1400211a2:	(bad)  
   1400211a3:	(bad)  
   1400211a4:	js     0x14002119e
   1400211a6:	(bad)  
   1400211a7:	call   FWORD PTR [rax-0x12]
   1400211aa:	(bad)  
   1400211ab:	inc    DWORD PTR [rdi-0x1b]
   1400211ae:	(bad)  
   1400211af:	(bad)  
   1400211b0:	cmp    al,0xdc
   1400211b2:	(bad)  
   1400211b3:	push   QWORD PTR [rdi]
   1400211b5:	(bad)  
   1400211b6:	(bad)  
   1400211b7:	push   QWORD PTR [rcx]
   1400211b9:	(bad)  
   1400211ba:	(bad)  
   1400211bb:	jmp    FWORD PTR [rip+0x2bffffca]        # 0x16c02118b
   1400211c1:	sar    edi,0xff
   1400211c4:	sub    edi,DWORD PTR [rbp-0x45d20001]
   1400211ca:	(bad)  
   1400211cb:	push   QWORD PTR [rcx]
   1400211cd:	mov    ebp,0xc139ffff
   1400211d2:	(bad)  
   1400211d3:	call   FWORD PTR [rdi-0x37]
   1400211d6:	idiv   bh
   1400211d8:	mov    edi,0xefffc0df
   1400211dd:	in     al,dx
   1400211de:	movabs eax,ds:0x53a9d4ff98eff6ff
   1400211e7:	in     al,0xaf
   1400211e9:	je     0x14002120a
   1400211eb:	push   rbx
	...
   140021280:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140021281:	ins    DWORD PTR es:[rdi],dx
   140021282:	sbb    eax,0x5fb4d955
   140021287:	(bad)  
   140021288:	cld    
   140021289:	repnz cdq 
   14002128b:	(bad)  
   14002128c:	(bad)  
   14002128d:	hlt    
   14002128e:	fwait
   14002128f:	(bad)  
   140021290:	(bad)  
   140021291:	cmc    
   140021292:	fwait
   140021293:	(bad)  
   140021294:	(bad)  
   140021295:	cmc    
   140021296:	cwde   
   140021297:	(bad)  
   140021298:	(bad)  
   140021299:	hlt    
   14002129a:	xchg   edi,eax
   14002129b:	(bad)  
   14002129c:	(bad)  
   14002129d:	not    BYTE PTR [rbp-0x6e0b0101]
   1400212a3:	(bad)  
   1400212a4:	(bad)  
   1400212a5:	hlt    
   1400212a6:	(bad)  
   1400212a7:	(bad)  
   1400212a8:	(bad)  
   1400212a9:	cmc    
   1400212aa:	mov    edi,edi
   1400212ac:	push   rbx
   1400212ae:	xchg   edi,edi
   1400212b0:	push   rcx
   1400212b2:	test   bh,bh
   1400212b4:	push   rax
   1400212b6:	cmp    bh,0xff
   1400212b9:	out    dx,al
   1400212ba:	jge    0x1400212bb
   1400212bc:	(bad)  
   1400212bd:	in     eax,dx
   1400212be:	ja     0x1400212bf
   1400212c0:	(bad)  
   1400212c1:	call   0x126011239
   1400212c6:	ins    DWORD PTR es:[rdi],dx
   1400212c7:	(bad)  
   1400212c8:	sti    
   1400212c9:	fild   QWORD PTR [rax-0x1]
   1400212cc:	cli    
   1400212cd:	fldenv [rdi+rdi*8-0x9]
   1400212d1:	xlat   BYTE PTR ds:[rbx]
   1400212d2:	pop    rdi
   1400212d3:	push   rsp
   1400212d5:	rcr    DWORD PTR [rdi+rdi*8-0xe],1
   1400212d9:	int3   
   1400212da:	push   rdi
   1400212db:	push   rax
   1400212dd:	(bad)  
   1400212de:	push   rcx
   1400212df:	(bad)  
   1400212e0:	in     al,dx
   1400212e1:	mov    edi,0xb8e9ff4d
   1400212e6:	rex.W jmp rsi
   1400212e9:	mov    cl,0x44
   1400212eb:	jmp    rbx
   1400212ed:	stos   DWORD PTR es:[rdi],eax
   1400212ee:	rex (bad) 
   1400212f0:	frstor [rsp+rdi*1+0x318dc9ff]
   1400212f7:	cmc    
   1400212f8:	movabs al,ds:0x951b68
	...
   140021371:	add    BYTE PTR [rax],al
   140021373:	add    BYTE PTR [rsi-0xe4fdd86],dh
   140021379:	fldcw  WORD PTR [rdi-0x6]
   14002137c:	stc    
   14002137d:	in     al,dx
   14002137e:	jnp    0x14002137f
   140021380:	cli    
   140021381:	icebp  
   140021382:	jle    0x140021383
   140021384:	sti    
   140021385:	hlt    
   140021386:	test   edi,edi
   140021388:	cld    
   140021389:	test   DWORD PTR [rdi+rdi*8-0x6a0704],0xffc1fcc5
   140021394:	test   eax,0xa2ffe3fd
   140021399:	(bad)  
   14002139a:	(bad)  
   14002139b:	jmp    FWORD PTR [rcx-0x5d000001]
   1400213a1:	(bad)  
   1400213a2:	(bad)  
   1400213a3:	call   FWORD PTR [rbp+0x77ffffff]
   1400213a9:	idiv   bh
   1400213ab:	call   QWORD PTR [rdi-0x12]
   1400213ae:	(bad)  
   1400213af:	inc    DWORD PTR [rsp+riz*8-0x1]
   1400213b3:	(bad)  
   1400213b4:	cmp    al,0xdc
   1400213b6:	(bad)  
   1400213b7:	push   QWORD PTR [rsi]
   1400213b9:	(bad)  
   1400213ba:	(bad)  
   1400213bb:	push   QWORD PTR [rcx]
   1400213bd:	(bad)  
   1400213be:	(bad)  
   1400213bf:	jmp    FWORD PTR [rip+0x2affffc8]        # 0x16b02138d
   1400213c5:	ret    
   1400213c6:	(bad)  
   1400213c7:	jmp    FWORD PTR [rdx]
   1400213c9:	mov    ebp,0xbc2dffff
   1400213ce:	(bad)  
   1400213cf:	push   QWORD PTR [rcx]
   1400213d1:	mov    ebp,0xc139ffff
   1400213d6:	(bad)  
   1400213d7:	jmp    QWORD PTR [rbx-0x36]
   1400213da:	idiv   bh
   1400213dc:	(bad)  
   1400213dd:	loopne 0x14002139b
   1400213df:	(bad)  
   1400213e0:	out    dx,eax
   1400213e1:	jmp    0x11bf11384
   1400213e6:	cmp    eax,0xb82074af
   1400213ec:	test   eax,0xc2170
	...
   140021479:	add    BYTE PTR [rax],al
   14002147b:	add    BYTE PTR [rdi-0x51e9e292],ah
   140021481:	js     0x1400214a9
   140021483:	(bad)  
   140021484:	stc    
   140021485:	jmp    0x135001016
   14002148a:	pushf  
   14002148b:	(bad)  
   14002148c:	(bad)  
   14002148d:	cmc    
   14002148e:	pushf  
   14002148f:	(bad)  
   140021490:	(bad)  
   140021491:	hlt    
   140021492:	fwait
   140021493:	(bad)  
   140021494:	(bad)  
   140021495:	not    BYTE PTR [rdi-0x680b0101]
   14002149b:	(bad)  
   14002149c:	(bad)  
   14002149d:	cmc    
   14002149e:	xchg   esp,eax
   14002149f:	(bad)  
   1400214a0:	(bad)  
   1400214a1:	hlt    
   1400214a2:	xchg   ecx,eax
   1400214a3:	(bad)  
   1400214a4:	(bad)  
   1400214a5:	hlt    
   1400214a6:	(bad)  
   1400214a7:	(bad)  
   1400214a8:	push   rsp
   1400214aa:	mov    edi,edi
   1400214ac:	push   rdx
   1400214ae:	xchg   bh,bh
   1400214b0:	push   rdx
   1400214b2:	(bad)  
   1400214b3:	(bad)  
   1400214b4:	(bad)  
   1400214b5:	out    dx,eax
   1400214b6:	cmp    bh,0xff
   1400214b9:	out    dx,al
   1400214ba:	jnp    0x1400214bb
   1400214bc:	(bad)  
   1400214bd:	jmp    0x140021534
   1400214bf:	(bad)  
   1400214c0:	(bad)  
   1400214c1:	call   0x125011436
   1400214c6:	ins    BYTE PTR es:[rdi],dx
   1400214c7:	(bad)  
   1400214c8:	sti    
   1400214c9:	fisubr WORD PTR [rax-0x1]
   1400214cc:	cli    
   1400214cd:	fisub  DWORD PTR [rdx-0x1]
   1400214d0:	not    bl
   1400214d2:	(bad)  
   1400214d3:	push   rdx
   1400214d5:	rcr    BYTE PTR [rbp-0x1],1
   1400214d8:	out    dx,eax
   1400214d9:	retf   0xff59
   1400214dc:	out    dx,eax
   1400214dd:	ret    
   1400214de:	push   rax
   1400214df:	(bad)  
   1400214e0:	jmp    0x14002149e
   1400214e2:	rex.WR jmp rdi
   1400214e5:	mov    bh,0x47
   1400214e7:	jmp    rsi
   1400214e9:	mov    al,0x43
   1400214eb:	jmp    rdx
   1400214ed:	stos   DWORD PTR es:[rdi],eax
   1400214ee:	(bad)  
   1400214ef:	(bad)  
   1400214f0:	fsub   QWORD PTR [rcx+0x7bb5ff39]
   1400214f6:	sub    dh,ah
   1400214f8:	movabs al,ds:0x4a1b68
	...
   140021571:	add    BYTE PTR [rax],al
   140021573:	add    BYTE PTR [rsi-0x2095dd86],dh
   140021579:	mov    ch,0x54
   14002157b:	jmp    0x13f7c0077
   140021580:	cli    
   140021581:	lock jl 0x140021583
   140021584:	sti    
   140021585:	repz jle 0x140021587
   140021588:	cld    
   140021589:	test   BYTE PTR [rcx-0x6e070301],0xff
   140021590:	sti    
   140021591:	stc    
   140021592:	fwait
   140021593:	inc    eax
   140021595:	std    
   140021596:	enter  0xa6ff,0xfd
   14002159a:	jmp    0x14002159b
   14002159c:	test   eax,0xa8ffffff
   1400215a1:	(bad)  
   1400215a2:	(bad)  
   1400215a3:	jmp    QWORD PTR [rdx-0x63000001]
   1400215a9:	(bad)  
   1400215aa:	(bad)  
   1400215ab:	push   QWORD PTR [rdx-0xa]
   1400215ae:	(bad)  
   1400215af:	call   QWORD PTR [rbp-0x15]
   1400215b2:	(bad)  
   1400215b3:	inc    DWORD PTR [rbx-0x1c]
   1400215b6:	(bad)  
   1400215b7:	(bad)  
   1400215b8:	cmp    esp,ebx
   1400215ba:	(bad)  
   1400215bb:	push   QWORD PTR [rsi]
   1400215bd:	(bad)  
   1400215be:	(bad)  
   1400215bf:	push   QWORD PTR [rcx]
   1400215c1:	(bad)  
   1400215c2:	(bad)  
   1400215c3:	jmp    FWORD PTR [rip+0x2bffffc8]        # 0x16c021591
   1400215c9:	sar    edi,0xff
   1400215cc:	sub    bh,BYTE PTR [rdi-0x45d30001]
   1400215d2:	(bad)  
   1400215d3:	push   QWORD PTR [rax]
   1400215d5:	mov    ebp,0xc33affff
   1400215da:	(bad)  
   1400215db:	jmp    QWORD PTR [rdx+rcx*8-0xa]
   1400215df:	dec    ebx
   1400215e1:	loope  0x140021599
   1400215e3:	(bad)  
   1400215e4:	out    dx,eax
   1400215e5:	out    0x96,eax
   1400215e7:	(bad)  
   1400215e8:	fdiv   DWORD PTR [rcx+0x72ade95c]
   1400215ee:	(bad)  
   1400215ef:	jg     0x1400215f1
	...
   140021679:	add    BYTE PTR [rax],al
   14002167b:	add    BYTE PTR [rax-0x1979e292],ch
   140021681:	retf   0xf070
   140021684:	cld    
   140021685:	repz cdq 
   140021687:	(bad)  
   140021688:	(bad)  
   140021689:	hlt    
   14002168a:	pushf  
   14002168b:	(bad)  
   14002168c:	(bad)  
   14002168d:	hlt    
   14002168e:	fwait
   14002168f:	(bad)  
   140021690:	(bad)  
   140021691:	not    BYTE PTR [rsi-0x690a0101]
   140021697:	(bad)  
   140021698:	(bad)  
   140021699:	not    BYTE PTR [rbp-0x6c0b0101]
   14002169f:	(bad)  
   1400216a0:	(bad)  
   1400216a1:	hlt    
   1400216a2:	xchg   ecx,eax
   1400216a3:	(bad)  
   1400216a4:	push   rsp
   1400216a6:	(bad)  
   1400216a7:	(bad)  
   1400216a8:	(bad)  
   1400216a9:	repz mov edi,edi
   1400216ac:	push   rcx
   1400216ae:	test   edi,edi
   1400216b0:	push   rcx
   1400216b2:	cmp    edi,0xff7eefff
   1400216b8:	(bad)  
   1400216b9:	in     eax,dx
   1400216ba:	ja     0x1400216bb
   1400216bc:	(bad)  
   1400216bd:	jmp    0x140021732
   1400216bf:	(bad)  
   1400216c0:	jmp    rbp
   1400216c2:	jo     0x1400216c3
   1400216c4:	(bad)  
   1400216c5:	loopne 0x140021731
   1400216c7:	(bad)  
   1400216c8:	cli    
   1400216c9:	fsub   QWORD PTR [rbp-0x1]
   1400216cc:	stc    
   1400216cd:	fsub   DWORD PTR [rcx-0x1]
   1400216d0:	hlt    
   1400216d1:	shl    BYTE PTR [rax-0x1],cl
   1400216d4:	in     al,dx
   1400216d5:	iret   
   1400216d6:	(bad)  
   1400216d7:	(bad)  
   1400216d8:	(bad)  
   1400216d9:	(bad)  
   1400216da:	pop    rbp
   1400216db:	(bad)  
   1400216dc:	out    dx,al
   1400216dd:	rcl    BYTE PTR [rcx-0x1],0xeb
   1400216e1:	mov    edx,0xb5e7ff4b
   1400216e6:	rex.RX jmp rbp
   1400216e9:	scas   al,BYTE PTR es:[rdi]
   1400216ea:	rex.X jmp rax
   1400216ed:	stos   BYTE PTR es:[rdi],al
   1400216ee:	(bad)  
   1400216ef:	call   rbp
   1400216f1:	(bad)  
   1400216f2:	(bad)  
   1400216f3:	std    
   1400216f4:	movabs eax,ds:0x71b68a0c31b69
	...
   140021771:	add    BYTE PTR [rax],al
   140021773:	add    BYTE PTR [rsi-0x3ddddb85],dh
   140021779:	mov    ?,WORD PTR [rip+0x76e4f4d3]        # 0x1b6e70c52
   14002177f:	(bad)  
   140021780:	stc    
   140021781:	in     eax,dx
   140021782:	jnp    0x140021783
   140021784:	cli    
   140021785:	icebp  
   140021786:	jl     0x140021787
   140021788:	sti    
   140021789:	hlt    
   14002178a:	test   edi,edi
   14002178c:	cld    
   14002178d:	test   DWORD PTR [rsi-0x69070301],0x9efafaff
   140021797:	(bad)  
   140021798:	mov    ebx,0x9effcefd
   14002179d:	cld    
   14002179e:	cli    
   14002179f:	jmp    FWORD PTR [rbp-0x59000001]
   1400217a5:	(bad)  
   1400217a6:	(bad)  
   1400217a7:	jmp    QWORD PTR [rbx-0x66000001]
   1400217ad:	(bad)  
   1400217ae:	(bad)  
   1400217af:	push   QWORD PTR [rcx-0xb]
   1400217b2:	(bad)  
   1400217b3:	call   QWORD PTR [rbx-0x15]
   1400217b6:	(bad)  
   1400217b7:	inc    DWORD PTR [rbx-0x1c]
   1400217ba:	(bad)  
   1400217bb:	(bad)  
   1400217bc:	cmp    ebx,ebx
   1400217be:	(bad)  
   1400217bf:	push   QWORD PTR [rdx*8-0x31ce0001]
   1400217c6:	(bad)  
   1400217c7:	jmp    FWORD PTR [rdi]
   1400217c9:	enter  0xffff,0x2c
   1400217cd:	sar    edi,0xff
   1400217d0:	sub    bh,BYTE PTR [rdi-0x45d30001]
   1400217d6:	(bad)  
   1400217d7:	push   QWORD PTR [rcx]
   1400217d9:	mov    edi,0xc33bffff
   1400217de:	(bad)  
   1400217df:	jmp    QWORD PTR [rsi-0x35]
   1400217e2:	cmc    
   1400217e3:	dec    ecx
   1400217e5:	fidiv  WORD PTR [rsi-0x6f1b1201]
   1400217eb:	dec    ecx
   1400217ed:	sahf   
   1400217ee:	rex.WXB loope 0x14002179c
   1400217f1:	jo     0x140021813
   1400217f3:	rex.WR add BYTE PTR [rax],r8b
	...
   140021876:	add    BYTE PTR [rax],al
   140021878:	test   al,0x6e
   14002187a:	sbb    eax,0x51a5ce42
   14002187f:	jrcxz  0x14002187d
   140021881:	lock xchg ebp,eax
   140021883:	(bad)  
   140021884:	std    
   140021885:	hlt    
   140021886:	pushf  
   140021887:	(bad)  
   140021888:	(bad)  
   140021889:	cmc    
   14002188a:	fwait
   14002188b:	(bad)  
   14002188c:	(bad)  
   14002188d:	hlt    
   14002188e:	cdq    
   14002188f:	(bad)  
   140021890:	(bad)  
   140021891:	cmc    
   140021892:	xchg   edi,eax
   140021893:	(bad)  
   140021894:	(bad)  
   140021895:	hlt    
   140021896:	xchg   esi,eax
   140021897:	(bad)  
   140021898:	(bad)  
   140021899:	cmc    
   14002189a:	xchg   ebp,eax
   14002189b:	(bad)  
   14002189c:	(bad)  
   14002189d:	repz xchg ecx,eax
   14002189f:	(bad)  
   1400218a0:	(bad)  
   1400218a1:	hlt    
   1400218a2:	(bad)  
   1400218a3:	(bad)  
   1400218a4:	(bad)  
   1400218a5:	hlt    
   1400218a6:	mov    edi,edi
   1400218a8:	push   rdx
   1400218aa:	xchg   edi,edi
   1400218ac:	push   rdx
   1400218ae:	(bad)  
   1400218af:	(bad)  
   1400218b0:	push   rcx
   1400218b2:	cmp    bh,0xff
   1400218b5:	out    dx,eax
   1400218b6:	jl     0x1400218b7
   1400218b8:	(bad)  
   1400218b9:	jmp    0x140021931
   1400218bb:	(bad)  
   1400218bc:	(bad)  
   1400218bd:	jmp    0x125011835
   1400218c2:	outs   dx,DWORD PTR ds:[rsi]
   1400218c3:	(bad)  
   1400218c4:	cld    
   1400218c5:	fild   QWORD PTR [rax-0x1]
   1400218c8:	cli    
   1400218c9:	fldenv [rdi+rdi*8-0x9]
   1400218cd:	xlat   BYTE PTR ds:[rbx]
   1400218ce:	(bad)  
   1400218cf:	push   rbp
   1400218d1:	rcr    DWORD PTR [rbx-0x1],1
   1400218d4:	(bad)  
   1400218d5:	int    0x5f
   1400218d7:	jmp    rdi
   1400218d9:	(bad)
   1400218dc:	call   0x12a016d9f
   1400218e1:	mov    ecx,0xb3e5ff49
   1400218e6:	rex.RB jmp r12
   1400218e9:	lods   eax,DWORD PTR ds:[rsi]
   1400218ea:	rex (bad) 
   1400218ec:	fisub  WORD PTR [rbp-0x773c00c3]
   1400218f2:	(bad)  
   1400218f3:	lock movabs eax,ds:0x7c1b69
	...
   140021975:	add    BYTE PTR [rax],al
   140021977:	add    BYTE PTR [rbp-0x146fde87],dh
   14002197d:	(bad)
   140021981:	jmp    0x1400219fc
   140021983:	(bad)  
   140021984:	cli    
   140021985:	lock jl 0x140021987
   140021988:	sti    
   140021989:	repz cmp bh,0xfc
   14002198d:	cmc    
   14002198e:	mov    bh,bh
   140021990:	std    
   140021991:	clc    
   140021992:	nop
   140021993:	(bad)  
   140021994:	std    
   140021995:	cli    
   140021996:	cwde   
   140021997:	(bad)  
   140021998:	stc    
   140021999:	sti    
   14002199a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002199b:	(bad)  
   14002199c:	mov    ecx,0x9cffd4fd
   1400219a1:	(bad)  
   1400219a2:	std    
   1400219a3:	jmp    FWORD PTR [rbp-0x59000001]
   1400219a9:	(bad)  
   1400219aa:	(bad)  
   1400219ab:	jmp    QWORD PTR [rbx-0x67000001]
   1400219b1:	(bad)  
   1400219b2:	(bad)  
   1400219b3:	jmp    FWORD PTR [rbp+rsi*8-0x1]
   1400219b7:	call   QWORD PTR [rcx-0x17]
   1400219ba:	(bad)  
   1400219bb:	inc    DWORD PTR [rcx-0x1c]
   1400219be:	(bad)  
   1400219bf:	(bad)  
   1400219c0:	cmp    ebx,ebx
   1400219c2:	(bad)  
   1400219c3:	push   QWORD PTR [rdx*8-0x30ce0001]
   1400219ca:	(bad)  
   1400219cb:	jmp    FWORD PTR [rip+0x2cffffc7]        # 0x16d021998
   1400219d1:	sar    edi,0xff
   1400219d4:	sub    bh,BYTE PTR [rdi-0x43d20001]
   1400219da:	(bad)  
   1400219db:	push   QWORD PTR [rdx]
   1400219dd:	mov    edi,0xc33cffff
   1400219e2:	(bad)  
   1400219e3:	jmp    QWORD PTR [rdx-0x38]
   1400219e6:	cmc    
   1400219e7:	inc    edx
   1400219e9:	fnsave [rdi+0x7dd1e5ff]
   1400219ef:	imul   DWORD PTR [rsi-0x5630d889]
   1400219f5:	outs   dx,DWORD PTR ds:[rsi]
   1400219f6:	and    DWORD PTR [rax+0x0],eax
	...
   140021a71:	add    BYTE PTR [rax],al
   140021a73:	add    BYTE PTR [rcx-0x4ddbe291],ch
   140021a79:	jl     0x140021aa5
   140021a7b:	(bad)  
   140021a7c:	mul    ah
   140021a7e:	xchg   cl,bh
   140021a80:	std    
   140021a81:	hlt    
   140021a82:	fwait
   140021a83:	(bad)  
   140021a84:	(bad)  
   140021a85:	hlt    
   140021a86:	fwait
   140021a87:	(bad)  
   140021a88:	(bad)  
   140021a89:	hlt    
   140021a8a:	(bad)  
   140021a8b:	(bad)  
   140021a8c:	(bad)  
   140021a8d:	cmc    
   140021a8e:	xchg   esi,eax
   140021a8f:	(bad)  
   140021a90:	(bad)  
   140021a91:	cmc    
   140021a92:	xchg   esi,eax
   140021a93:	(bad)  
   140021a94:	(bad)  
   140021a95:	cmc    
   140021a96:	xchg   ebp,eax
   140021a97:	(bad)  
   140021a98:	(bad)  
   140021a99:	hlt    
   140021a9a:	xchg   edx,eax
   140021a9b:	(bad)  
   140021a9c:	(bad)  
   140021a9d:	hlt    
   140021a9e:	nop
   140021a9f:	(bad)  
   140021aa0:	push   rsp
   140021aa2:	mov    edi,edi
   140021aa4:	push   rbx
   140021aa6:	mov    bh,bh
   140021aa8:	push   rcx
   140021aaa:	test   edi,edi
   140021aac:	push   rcx
   140021aae:	cmp    edi,0xff7eefff
   140021ab4:	(bad)  
   140021ab5:	out    dx,al
   140021ab6:	jnp    0x140021ab7
   140021ab8:	(bad)  
   140021ab9:	(bad)  
   140021aba:	jne    0x140021abb
   140021abc:	jmp    rsi
   140021abe:	outs   dx,DWORD PTR ds:[rsi]
   140021abf:	(bad)  
   140021ac0:	(bad)  
   140021ac1:	in     al,0x6d
   140021ac3:	(bad)  
   140021ac4:	cld    
   140021ac5:	fisub  WORD PTR [rsi-0x1]
   140021ac8:	stc    
   140021ac9:	fsub   DWORD PTR [rbx-0x1]
   140021acc:	not    bl
   140021ace:	pop    rsi
   140021acf:	push   rsp
   140021ad1:	rcr    DWORD PTR [rbx-0x1],1
   140021ad4:	out    dx,eax
   140021ad5:	leave  
   140021ad6:	pop    rdx
   140021ad7:	(bad)  
   140021ad8:	jmp    0x1270174a1
   140021add:	mov    esp,0xb7e8ff53
   140021ae2:	rex.WXB jmp r13
   140021ae5:	mov    dl,0x43
   140021ae7:	jmp    rdx
   140021ae9:	lods   al,BYTE PTR ds:[rsi]
   140021aea:	rex (bad) 
   140021aec:	(bad)  [rcx+0x73acff3a]
   140021af2:	and    al,0xde
   140021af4:	movabs eax,ds:0x2a1b69
	...
   140021b75:	add    BYTE PTR [rax],al
   140021b77:	add    BYTE PTR [rsi-0x33c7df88],dh
   140021b7d:	(bad)  
   140021b7e:	(bad)  
   140021b7f:	fcomi  st,st(7)
   140021b81:	out    0x75,al
   140021b83:	(bad)  
   140021b84:	cli    
   140021b85:	in     al,dx
   140021b86:	jl     0x140021b87
   140021b88:	sti    
   140021b89:	icebp  
   140021b8a:	jl     0x140021b8b
   140021b8c:	cld    
   140021b8d:	hlt    
   140021b8e:	xchg   bh,bh
   140021b90:	cld    
   140021b91:	test   DWORD PTR [rdi+rdi*8-0x6a0703],0xff9cfafe
   140021b9c:	idiv   ebx
   140021b9e:	stos   BYTE PTR es:[rdi],al
   140021b9f:	push   QWORD PTR [rdi-0x60002502]
   140021ba5:	(bad)  
   140021ba6:	(bad)  
   140021ba7:	jmp    FWORD PTR [rbp-0x57000001]
   140021bad:	(bad)  
   140021bae:	(bad)  
   140021baf:	jmp    QWORD PTR [rbx-0x6a000001]
   140021bb5:	(bad)  
   140021bb6:	(bad)  
   140021bb7:	jmp    FWORD PTR [rbx-0xd]
   140021bba:	(bad)  
   140021bbb:	call   QWORD PTR [rax-0x17]
   140021bbe:	(bad)  
   140021bbf:	inc    DWORD PTR [rcx-0x1c]
   140021bc2:	(bad)  
   140021bc3:	(bad)  
   140021bc4:	cmp    ebx,ebx
   140021bc6:	(bad)  
   140021bc7:	push   QWORD PTR [rdx*8-0x30ce0001]
   140021bce:	(bad)  
   140021bcf:	jmp    FWORD PTR [rip+0x2cffffc7]        # 0x16d021b9c
   140021bd5:	sar    edi,0xff
   140021bd8:	sub    bh,BYTE PTR [rdi-0x43d20001]
   140021bde:	(bad)  
   140021bdf:	push   QWORD PTR [rcx]
   140021be1:	mov    edi,0xc33bffff
   140021be6:	(bad)  
   140021be7:	jmp    QWORD PTR [rcx-0x36]
   140021bea:	idiv   bh
   140021bec:	mov    ebx,0xe1ffbbdb
   140021bf1:	leave  
   140021bf2:	jae    0x140021be9
   140021bf4:	lods   al,BYTE PTR ds:[rsi]
   140021bf5:	jne    0x140021c1b
   140021bf7:	enter  0x6da5,0x22
   140021bfb:	sub    eax,0x0
	...
   140021c70:	test   eax,0xb2221d6f
   140021c75:	jge    0x140021ca1
   140021c77:	ret    0xd9f1
   140021c7a:	jl     0x140021c70
   140021c7c:	std    
   140021c7d:	repz cwde 
   140021c7f:	(bad)  
   140021c80:	(bad)  
   140021c81:	hlt    
   140021c82:	pushf  
   140021c83:	(bad)  
   140021c84:	(bad)  
   140021c85:	hlt    
   140021c86:	pushf  
   140021c87:	(bad)  
   140021c88:	(bad)  
   140021c89:	hlt    
   140021c8a:	cwde   
   140021c8b:	(bad)  
   140021c8c:	(bad)  
   140021c8d:	cmc    
   140021c8e:	xchg   esi,eax
   140021c8f:	(bad)  
   140021c90:	(bad)  
   140021c91:	cmc    
   140021c92:	xchg   esi,eax
   140021c93:	(bad)  
   140021c94:	(bad)  
   140021c95:	cmc    
   140021c96:	xchg   ebx,eax
   140021c97:	(bad)  
   140021c98:	(bad)  
   140021c99:	hlt    
   140021c9a:	xchg   ecx,eax
   140021c9b:	(bad)  
   140021c9c:	(bad)  
   140021c9d:	hlt    
   140021c9e:	(bad)  
   140021c9f:	(bad)  
   140021ca0:	push   rsp
   140021ca2:	mov    bh,bh
   140021ca4:	push   rdx
   140021ca6:	xchg   edi,edi
   140021ca8:	push   rdx
   140021caa:	(bad)  
   140021cab:	(bad)  
   140021cac:	push   rcx
   140021cae:	cmp    bh,0xff
   140021cb1:	in     eax,dx
   140021cb2:	jl     0x140021cb3
   140021cb4:	(bad)  
   140021cb5:	out    dx,al
   140021cb6:	ja     0x140021cb7
   140021cb8:	(bad)  
   140021cb9:	call   0x125011c31
   140021cbe:	outs   dx,DWORD PTR ds:[rsi]
   140021cbf:	(bad)  
   140021cc0:	cld    
   140021cc1:	loopne 0x140021d2e
   140021cc3:	(bad)  
   140021cc4:	sti    
   140021cc5:	frstor [rbp-0x1]
   140021cc8:	stc    
   140021cc9:	xlat   BYTE PTR ds:[rbx]
   140021cca:	(bad)  
   140021ccb:	push   rsi
   140021ccd:	rcr    DWORD PTR [rsi-0x1],cl
   140021cd0:	hlt    
   140021cd1:	(bad)  
   140021cd2:	pop    rdx
   140021cd3:	push   rcx
   140021cd5:	enter  0xff55,0xea
   140021cd9:	rcl    BYTE PTR [rbx-0x1],0xe9
   140021cdd:	mov    esp,0xb5e5ff4e
   140021ce2:	rex.WX jmp rbp
   140021ce5:	scas   eax,DWORD PTR es:[rdi]
   140021ce6:	rex.XB (bad) 
   140021ce8:	fild   QWORD PTR [rcx-0x6d3200c1]
   140021cee:	xor    esi,edi
   140021cf0:	movabs eax,ds:0xaa1b69
	...
   140021d79:	add    BYTE PTR [rax],al
   140021d7b:	add    BYTE PTR [rsi-0x125ade87],dh
   140021d81:	shl    BYTE PTR [rdi-0xa],1
   140021d84:	clc    
   140021d85:	in     eax,dx
   140021d86:	jnp    0x140021d87
   140021d88:	cli    
   140021d89:	lock jnp 0x140021d8b
   140021d8c:	sti    
   140021d8d:	repz cmp edi,0xff87f5fc
   140021d94:	std    
   140021d95:	stc    
   140021d96:	nop
   140021d97:	(bad)  
   140021d98:	std    
   140021d99:	stc    
   140021d9a:	cwde   
   140021d9b:	(bad)  
   140021d9c:	(bad)  
   140021d9d:	sti    
   140021d9e:	lahf   
   140021d9f:	push   rsi
   140021da1:	cld    
   140021da2:	lods   al,BYTE PTR ds:[rsi]
   140021da3:	(bad)  
   140021da4:	mov    edx,0xa5ffdefe
   140021da9:	(bad)  
   140021daa:	(bad)  
   140021dab:	jmp    FWORD PTR [rdi+rdi*8-0x590001]
   140021db2:	(bad)  
   140021db3:	jmp    QWORD PTR [rbx-0x6d000001]
   140021db9:	(bad)  
   140021dba:	(bad)  
   140021dbb:	jmp    FWORD PTR [rdx-0xd]
   140021dbe:	(bad)  
   140021dbf:	call   QWORD PTR [rax-0x17]
   140021dc2:	(bad)  
   140021dc3:	inc    DWORD PTR [rcx-0x1c]
   140021dc6:	(bad)  
   140021dc7:	(bad)  
   140021dc8:	cmp    ebx,ebx
   140021dca:	(bad)  
   140021dcb:	push   QWORD PTR [rdx*8-0x30ce0001]
   140021dd2:	(bad)  
   140021dd3:	jmp    FWORD PTR [rdi]
   140021dd5:	enter  0xffff,0x2c
   140021dd9:	ret    
   140021dda:	(bad)  
   140021ddb:	jmp    FWORD PTR [rdx]
   140021ddd:	mov    edi,0xbc2dffff
   140021de2:	(bad)  
   140021de3:	push   QWORD PTR [rax]
   140021de5:	mov    edi,0xc33affff
   140021dea:	(bad)  
   140021deb:	call   FWORD PTR [rcx+rcx*8-0x9]
   140021def:	push   QWORD PTR [rsi-0x21004125]
   140021df5:	shr    BYTE PTR [rax+rsi*8-0x54],0x75
   140021dfa:	and    eax,0x206fa8c2
   140021dff:	cmp    eax,0x0
	...
   140021e6c:	stos   BYTE PTR es:[rdi],al
   140021e6d:	outs   dx,DWORD PTR ds:[rsi]
   140021e6e:	sbb    eax,0x2a7db335
   140021e73:	(bad)
   140021e76:	jnp    0x140021e6c
   140021e78:	std    
   140021e79:	repnz cwde 
   140021e7b:	(bad)  
   140021e7c:	std    
   140021e7d:	cmc    
   140021e7e:	pushf  
   140021e7f:	(bad)  
   140021e80:	(bad)  
   140021e81:	cmc    
   140021e82:	pushf  
   140021e83:	(bad)  
   140021e84:	(bad)  
   140021e85:	cmc    
   140021e86:	cwde   
   140021e87:	(bad)  
   140021e88:	(bad)  
   140021e89:	cmc    
   140021e8a:	xchg   edi,eax
   140021e8b:	(bad)  
   140021e8c:	(bad)  
   140021e8d:	cmc    
   140021e8e:	xchg   ebp,eax
   140021e8f:	(bad)  
   140021e90:	(bad)  
   140021e91:	cmc    
   140021e92:	xchg   ebp,eax
   140021e93:	(bad)  
   140021e94:	(bad)  
   140021e95:	repz xchg edx,eax
   140021e97:	(bad)  
   140021e98:	(bad)  
   140021e99:	hlt    
   140021e9a:	nop
   140021e9b:	(bad)  
   140021e9c:	(bad)  
   140021e9d:	hlt    
   140021e9e:	mov    edi,?
   140021ea0:	push   rbx
   140021ea2:	mov    bh,bh
   140021ea4:	push   rcx
   140021ea6:	test   edi,edi
   140021ea8:	push   rcx
   140021eaa:	(bad)  
   140021eab:	(bad)  
   140021eac:	(bad)  
   140021ead:	out    dx,eax
   140021eae:	jg     0x140021eaf
   140021eb0:	(bad)  
   140021eb1:	in     al,dx
   140021eb2:	jns    0x140021eb3
   140021eb4:	(bad)  
   140021eb5:	jmp    0x140021f2c
   140021eb7:	(bad)  
   140021eb8:	jmp    rsi
   140021eba:	jno    0x140021ebb
   140021ebc:	(bad)  
   140021ebd:	in     al,0x6d
   140021ebf:	(bad)  
   140021ec0:	cld    
   140021ec1:	fbld   TBYTE PTR [rdi-0x1]
   140021ec4:	cli    
   140021ec5:	fsub   DWORD PTR [rbx-0x1]
   140021ec8:	not    ebp
   140021eca:	pop    rdi
   140021ecb:	push   rbx
   140021ecd:	rcr    DWORD PTR [rbp-0x1],1
   140021ed0:	repz int3 
   140021ed2:	pop    rcx
   140021ed3:	push   rax
   140021ed5:	(bad)
   140021ed8:	in     al,dx
   140021ed9:	mov    esi,0xb9e8ff50
   140021ede:	rex.WXB jmp r12
   140021ee1:	mov    bl,0x48
   140021ee3:	jmp    rdx
   140021ee5:	lods   al,BYTE PTR ds:[rsi]
   140021ee6:	rex.X (bad) 
   140021ee8:	fsub   QWORD PTR [rbp+0x7eb6ff3d]
   140021eee:	sub    ah,ch
   140021ef0:	movabs ds:0x4d1b6a,al
	...
   140021f79:	add    BYTE PTR [rax],al
   140021f7b:	add    BYTE PTR [rsi-0x2cb7df88],dh
   140021f81:	movabs ds:0xeefaff79e6f6e047,eax
   140021f8a:	jns    0x140021f8b
   140021f8c:	sti    
   140021f8d:	bnd jge 0x140021f8f
   140021f90:	cld    
   140021f91:	hlt    
   140021f92:	test   bh,bh
   140021f94:	std    
   140021f95:	test   DWORD PTR [rdi+rdi*8-0x6c0603],0xff9bfafd
   140021fa0:	(bad)  
   140021fa1:	cld    
   140021fa2:	movabs ds:0xe4feb7ffb1fdf6ff,al
   140021fab:	jmp    FWORD PTR [rcx-0x53000001]
   140021fb1:	(bad)  
   140021fb2:	(bad)  
   140021fb3:	jmp    QWORD PTR [rsi-0x5d000001]
   140021fb9:	(bad)  
   140021fba:	(bad)  
   140021fbb:	call   QWORD PTR [rcx+0x68fffffe]
   140021fc1:	repz (bad) 
   140021fc3:	call   QWORD PTR [rax-0x17]
   140021fc6:	(bad)  
   140021fc7:	inc    DWORD PTR [rcx-0x1e]
   140021fca:	(bad)  
   140021fcb:	(bad)  
   140021fcc:	cmp    ebx,ebx
   140021fce:	(bad)  
   140021fcf:	push   QWORD PTR [rdx*8-0x30ce0001]
   140021fd6:	(bad)  
   140021fd7:	jmp    FWORD PTR [rdi]
   140021fd9:	enter  0xffff,0x2c
   140021fdd:	ret    
   140021fde:	(bad)  
   140021fdf:	jmp    FWORD PTR [rdi+rdi*4]
   140021fe2:	(bad)  
   140021fe3:	jmp    FWORD PTR [rdi*4-0x42cf0001]
   140021fea:	(bad)  
   140021feb:	(bad)  
   140021fec:	cmp    cl,al
   140021fee:	(bad)  
   140021fef:	call   FWORD PTR [rax-0x38]
   140021ff2:	idiv   edi
   140021ff4:	mov    al,0xd8
   140021ff6:	ret    
   140021ff7:	jmp    rax
   140021ff9:	leave  
   140021ffa:	je     0x140021ff0
   140021ffc:	rcl    BYTE PTR [rbx+0x70aadf44],0x20
   140022003:	imul   edx,DWORD PTR [rdx+0x22860],0x0
	...
   140022066:	add    BYTE PTR [rax],al
   140022068:	stos   BYTE PTR es:[rdi],al
   140022069:	jo     0x140022088
   14002206b:	data16 mov bh,0x84
   14002206e:	cs shl edx,cl
   140022071:	fnstsw WORD PTR [rdi-0x9]
   140022074:	std    
   140022075:	repnz cdq 
   140022077:	(bad)  
   140022078:	std    
   140022079:	cmc    
   14002207a:	fwait
   14002207b:	(bad)  
   14002207c:	(bad)  
   14002207d:	cmc    
   14002207e:	pushf  
   14002207f:	(bad)  
   140022080:	(bad)  
   140022081:	hlt    
   140022082:	cwde   
   140022083:	(bad)  
   140022084:	(bad)  
   140022085:	cmc    
   140022086:	xchg   edi,eax
   140022087:	(bad)  
   140022088:	(bad)  
   140022089:	hlt    
   14002208a:	xchg   esi,eax
   14002208b:	(bad)  
   14002208c:	(bad)  
   14002208d:	cmc    
   14002208e:	xchg   ebp,eax
   14002208f:	(bad)  
   140022090:	(bad)  
   140022091:	hlt    
   140022092:	xchg   edx,eax
   140022093:	(bad)  
   140022094:	(bad)  
   140022095:	hlt    
   140022096:	nop
   140022097:	(bad)  
   140022098:	(bad)  
   140022099:	cmc    
   14002209a:	mov    ?,edi
   14002209c:	push   rsp
   14002209e:	mov    edi,edi
   1400220a0:	push   rdx
   1400220a2:	xchg   bh,bh
   1400220a4:	push   rdx
   1400220a6:	(bad)  
   1400220a7:	(bad)  
   1400220a8:	push   rcx
   1400220aa:	jg     0x1400220ab
   1400220ac:	(bad)  
   1400220ad:	in     eax,dx
   1400220ae:	jl     0x1400220af
   1400220b0:	(bad)  
   1400220b1:	in     al,dx
   1400220b2:	jbe    0x1400220b3
   1400220b4:	(bad)  
   1400220b5:	call   0x12601202d
   1400220ba:	outs   dx,BYTE PTR ds:[rsi]
   1400220bb:	(bad)  
   1400220bc:	cld    
   1400220bd:	loopne 0x14002212a
   1400220bf:	(bad)  
   1400220c0:	sti    
   1400220c1:	frstor [rsi-0x1]
   1400220c4:	stc    
   1400220c5:	fsub   DWORD PTR [rcx-0x1]
   1400220c8:	cmc    
   1400220c9:	rcr    BYTE PTR [rdi-0x1],cl
   1400220cc:	hlt    
   1400220cd:	(bad)  
   1400220ce:	pop    rbx
   1400220cf:	push   rcx
   1400220d1:	retf   
   1400220d2:	push   rsi
   1400220d3:	(bad)  
   1400220d4:	out    dx,eax
   1400220d5:	ret    
   1400220d6:	push   rdx
   1400220d7:	(bad)  
   1400220d8:	in     al,dx
   1400220d9:	mov    ebx,0xb7e7ff4e
   1400220de:	rex.WX jmp rbx
   1400220e1:	mov    cl,0x47
   1400220e3:	(bad)  
   1400220e4:	fisubr WORD PTR [rbx-0x6c3200bc]
   1400220ea:	xor    esi,esi
   1400220ec:	movabs eax,ds:0x3294f79af1b69
	...
   140022179:	add    BYTE PTR [rax],al
   14002217b:	add    BYTE PTR [rsi-0x49fadf88],dh
   140022181:	jns    0x1400221a4
   140022183:	stos   BYTE PTR es:[rdi],al
   140022184:	in     al,dx
   140022185:	leave  
   140022186:	(bad)  
   140022187:	hlt    
   140022188:	stc    
   140022189:	jmp    0x130fd2109
   14002218e:	jge    0x14002218f
   140022190:	cld    
   140022191:	repz cmp edi,0xff86f5fc
   140022198:	std    
   140022199:	clc    
   14002219a:	mov    ?,edi
   14002219c:	(bad)  
   14002219d:	cli    
   14002219e:	xchg   esi,eax
   14002219f:	(bad)  
   1400221a0:	(bad)  
   1400221a1:	cld    
   1400221a2:	lahf   
   1400221a3:	(bad)  
   1400221a4:	(bad)  
   1400221a5:	cld    
   1400221a6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400221a7:	push   rsi
   1400221a9:	std    
   1400221aa:	mov    dl,0xff
   1400221ac:	mov    dh,0xfd
   1400221ae:	jmp    0x14001ceb2
   1400221b3:	jmp    FWORD PTR [rdi+rdi*8-0x590001]
   1400221ba:	(bad)  
   1400221bb:	jmp    QWORD PTR [rbx-0x6d000001]
   1400221c1:	(bad)  
   1400221c2:	(bad)  
   1400221c3:	jmp    FWORD PTR [rdx-0xd]
   1400221c6:	(bad)  
   1400221c7:	call   QWORD PTR [rax-0x17]
   1400221ca:	(bad)  
   1400221cb:	inc    DWORD PTR [rcx-0x1e]
   1400221ce:	(bad)  
   1400221cf:	(bad)  
   1400221d0:	cmp    ebx,ebx
   1400221d2:	(bad)  
   1400221d3:	push   QWORD PTR [rsi]
   1400221d5:	(bad)  
   1400221d6:	(bad)  
   1400221d7:	push   QWORD PTR [rcx]
   1400221d9:	iret   
   1400221da:	(bad)  
   1400221db:	jmp    FWORD PTR [rdi]
   1400221dd:	enter  0xffff,0x2d
   1400221e1:	ret    
   1400221e2:	(bad)  
   1400221e3:	jmp    FWORD PTR [rdi+rdi*4]
   1400221e6:	(bad)  
   1400221e7:	jmp    FWORD PTR [rdi*4-0x40ce0001]
   1400221ee:	(bad)  
   1400221ef:	(bad)  
   1400221f0:	cmp    al,bl
   1400221f2:	(bad)  
   1400221f3:	call   QWORD PTR [rbx-0x39]
   1400221f6:	clc    
   1400221f7:	jmp    FWORD PTR [rbx-0x18003427]
   1400221fd:	fild   DWORD PTR [rdi+0x55a7cefd]
   140022203:	out    0xab,al
   140022205:	jno    0x140022226
   140022207:	cwde   
   140022208:	stos   BYTE PTR es:[rdi],al
   140022209:	jo     0x14002222b
   14002220b:	(bad)  
	...
   140022260:	stos   DWORD PTR es:[rdi],eax
   140022261:	jo     0x140022281
   140022263:	sbb    BYTE PTR [rbx-0x266ee190],ch
   140022269:	mov    ch,0x5f
   14002226b:	(bad)  
   14002226c:	cli    
   14002226d:	in     eax,dx
   14002226e:	nop
   14002226f:	std    
   140022270:	std    
   140022271:	repz cdq 
   140022273:	(bad)  
   140022274:	std    
   140022275:	cmc    
   140022276:	pushf  
   140022277:	(bad)  
   140022278:	(bad)  
   140022279:	cmc    
   14002227a:	fwait
   14002227b:	(bad)  
   14002227c:	(bad)  
   14002227d:	cmc    
   14002227e:	fwait
   14002227f:	(bad)  
   140022280:	(bad)  
   140022281:	cmc    
   140022282:	xchg   edi,eax
   140022283:	(bad)  
   140022284:	(bad)  
   140022285:	hlt    
   140022286:	xchg   edi,eax
   140022287:	(bad)  
   140022288:	(bad)  
   140022289:	cmc    
   14002228a:	xchg   esi,eax
   14002228b:	(bad)  
   14002228c:	(bad)  
   14002228d:	cmc    
   14002228e:	xchg   ebx,eax
   14002228f:	(bad)  
   140022290:	(bad)  
   140022291:	hlt    
   140022292:	xchg   ecx,eax
   140022293:	(bad)  
   140022294:	push   rsp
   140022296:	(bad)  
   140022297:	(bad)  
   140022298:	push   rsp
   14002229a:	mov    bh,bh
   14002229c:	push   rbx
   14002229e:	mov    bh,bh
   1400222a0:	push   rcx
   1400222a2:	test   edi,edi
   1400222a4:	push   rcx
   1400222a6:	cmp    edi,0xff7eefff
   1400222ac:	(bad)  
   1400222ad:	in     al,dx
   1400222ae:	jns    0x1400222af
   1400222b0:	(bad)  
   1400222b1:	(bad)  
   1400222b2:	jae    0x1400222b3
   1400222b4:	jmp    rsi
   1400222b6:	jno    0x1400222b7
   1400222b8:	cld    
   1400222b9:	in     al,0x6d
   1400222bb:	(bad)  
   1400222bc:	sti    
   1400222bd:	fbld   TBYTE PTR [rdi-0x1]
   1400222c0:	cli    
   1400222c1:	fldenv [rdi+rdi*8-0x7]
   1400222c5:	fsub   DWORD PTR [rcx-0x1]
   1400222c8:	test   bh,0x5d
   1400222cb:	push   rbx
   1400222cd:	int    0x59
   1400222cf:	push   rax
   1400222d1:	(bad)  
   1400222d2:	push   rsi
   1400222d3:	(bad)  
   1400222d4:	out    dx,eax
   1400222d5:	mov    edi,0xb9e9ff50
   1400222da:	rex.WR (bad) 
   1400222dc:	call   0x124016a95
   1400222e1:	lods   eax,DWORD PTR ds:[rsi]
   1400222e2:	rex.RB (bad) 
   1400222e4:	fsub   DWORD PTR [rbx+rax*2+0x2d7db4ff]
   1400222eb:	in     al,0x98
   1400222ed:	movsxd ebx,DWORD PTR [rsi]
   1400222ef:	rex.WXB add BYTE PTR [r8],al
   1400222f2:	push   rbp
   1400222f3:	add    al,BYTE PTR [rax]
	...
   14002237d:	add    BYTE PTR [rax],al
   14002237f:	add    BYTE PTR [rsi-0x31c5df88],dh
   140022385:	(bad)  
   140022386:	rex.X fdivr st(5),st
   140022389:	out    0x78,al
   14002238b:	(bad)  
   14002238c:	cli    
   14002238d:	in     eax,dx
   14002238e:	jnp    0x14002238f
   140022390:	sti    
   140022391:	icebp  
   140022392:	jl     0x140022393
   140022394:	cld    
   140022395:	hlt    
   140022396:	test   edi,edi
   140022398:	std    
   140022399:	test   DWORD PTR [rdx-0x6d060101],0x9afbfeff
   1400223a3:	(bad)  
   1400223a4:	(bad)  
   1400223a5:	cld    
   1400223a6:	movabs al,ds:0xb4fdf7ffa8fcffff
   1400223af:	push   QWORD PTR [rdx-0x53001103]
   1400223b5:	(bad)  
   1400223b6:	(bad)  
   1400223b7:	jmp    FWORD PTR [rdx-0x59000001]
   1400223bd:	(bad)  
   1400223be:	(bad)  
   1400223bf:	jmp    QWORD PTR [rbx-0x6c000001]
   1400223c5:	(bad)  
   1400223c6:	(bad)  
   1400223c7:	jmp    FWORD PTR [rdx-0xd]
   1400223ca:	(bad)  
   1400223cb:	call   QWORD PTR [rcx-0x17]
   1400223ce:	(bad)  
   1400223cf:	inc    DWORD PTR [rcx-0x1e]
   1400223d2:	(bad)  
   1400223d3:	(bad)  
   1400223d4:	cmp    esp,ebx
   1400223d6:	(bad)  
   1400223d7:	push   QWORD PTR [rsi]
   1400223d9:	(bad)  
   1400223da:	(bad)  
   1400223db:	push   QWORD PTR [rcx]
   1400223dd:	iret   
   1400223de:	(bad)  
   1400223df:	jmp    FWORD PTR [rdi]
   1400223e1:	retf   0xffff
   1400223e4:	sub    al,0xc3
   1400223e6:	(bad)  
   1400223e7:	jmp    FWORD PTR [rdx]
   1400223e9:	mov    edi,0xbc2cffff
   1400223ee:	(bad)  
   1400223ef:	push   QWORD PTR [rax]
   1400223f1:	mov    ebp,0xc138ffff
   1400223f6:	(bad)  
   1400223f7:	dec    DWORD PTR [rdi-0x39]
   1400223fa:	sti    
   1400223fb:	jmp    QWORD PTR [rbx-0x16002f29]
   140022401:	jrcxz  0x140022393
   140022403:	(bad)  
   140022404:	fidivr DWORD PTR [rdx+0x75afed66]
   14002240a:	and    cl,ah
   14002240c:	scas   eax,DWORD PTR es:[rdi]
   14002240d:	jae    0x14002242e
   14002240f:	jl     0x1400223c0
   140022411:	je     0x140022432
   140022413:	sbb    al,BYTE PTR [rax]
	...
   140022455:	add    BYTE PTR [rax],al
   140022457:	add    BYTE PTR [rcx+rsi*2+0x71ab161e],ch
   14002245e:	(bad)  
   14002245f:	jns    0x140022412
   140022461:	jns    0x14002248a
   140022463:	retf   
   140022464:	out    0xcb,eax
   140022466:	jo     0x140022458
   140022468:	cld    
   140022469:	repnz xchg esi,eax
   14002246b:	(bad)  
   14002246c:	std    
   14002246d:	hlt    
   14002246e:	fwait
   14002246f:	(bad)  
   140022470:	(bad)  
   140022471:	neg    BYTE PTR [rbp-0x640a0101]
   140022477:	(bad)  
   140022478:	(bad)  
   140022479:	cmc    
   14002247a:	fwait
   14002247b:	(bad)  
   14002247c:	(bad)  
   14002247d:	not    BYTE PTR [rdi-0x670b0101]
   140022483:	(bad)  
   140022484:	(bad)  
   140022485:	cmc    
   140022486:	xchg   ebp,eax
   140022487:	(bad)  
   140022488:	(bad)  
   140022489:	cmc    
   14002248a:	xchg   esp,eax
   14002248b:	(bad)  
   14002248c:	(bad)  
   14002248d:	cmc    
   14002248e:	xchg   edx,eax
   14002248f:	(bad)  
   140022490:	(bad)  
   140022491:	hlt    
   140022492:	nop
   140022493:	(bad)  
   140022494:	push   rsp
   140022496:	mov    edi,edi
   140022498:	push   rbx
   14002249a:	mov    edi,edi
   14002249c:	push   rdx
   14002249e:	xchg   bh,bh
   1400224a0:	push   rdx
   1400224a2:	cmp    edi,0xff7ff0ff
   1400224a8:	(bad)  
   1400224a9:	in     eax,dx
   1400224aa:	jl     0x1400224ab
   1400224ac:	(bad)  
   1400224ad:	jmp    0x140022525
   1400224af:	(bad)  
   1400224b0:	(bad)  
   1400224b1:	jmp    0x126012427
   1400224b6:	outs   dx,BYTE PTR ds:[rsi]
   1400224b7:	(bad)  
   1400224b8:	cld    
   1400224b9:	loopne 0x140022526
   1400224bb:	(bad)  
   1400224bc:	sti    
   1400224bd:	frstor [rsi-0x1]
   1400224c0:	stc    
   1400224c1:	fldenv [rbx-0x1]
   1400224c4:	not    dl
   1400224c6:	(bad)  
   1400224c7:	push   rbp
   1400224c9:	(bad)  
   1400224ca:	pop    rsp
   1400224cb:	push   rcx
   1400224cd:	leave  
   1400224ce:	push   rdi
   1400224cf:	push   rax
   1400224d1:	(bad)  
   1400224d2:	push   rsp
   1400224d3:	(bad)  
   1400224d4:	in     eax,dx
   1400224d5:	mov    esp,0xb7e9ff4f
   1400224da:	rex.WXB jmp r14
   1400224dd:	mov    dl,0x47
   1400224df:	jmp    rax
   1400224e1:	stos   BYTE PTR es:[rdi],al
   1400224e2:	rex.RB dec r8d
   1400224e5:	xchg   edx,eax
   1400224e6:	cmp    ah,dh
   1400224e8:	fwait
   1400224e9:	outs   dx,DWORD PTR ds:[rsi]
   1400224ea:	cs mov cl,0x16
   1400224ed:	adc    edx,DWORD PTR [rbp+rcx*1+0x0]
   1400224f1:	add    BYTE PTR [rbp+0x5],dl
   1400224f4:	add    BYTE PTR [rax],al
   1400224f6:	push   rbp
   1400224f7:	add    DWORD PTR [rax],eax
	...
   140022581:	add    BYTE PTR [rax],al
   140022583:	add    BYTE PTR [rsi-0x1873df88],dh
   140022589:	mov    esp,0xeaf8ee5b
   14002258e:	jp     0x14002258f
   140022590:	cli    
   140022591:	out    dx,eax
   140022592:	jge    0x140022593
   140022594:	sti    
   140022595:	repz jge 0x140022597
   140022598:	std    
   140022599:	cmc    
   14002259a:	xchg   bh,bh
   14002259c:	std    
   14002259d:	test   DWORD PTR [rsi-0x6b060101],0x9cfbfeff
   1400225a7:	(bad)  
   1400225a8:	(bad)  
   1400225a9:	cld    
   1400225aa:	movabs ds:0xb5fdf6ffaafdffff,eax
   1400225b3:	jmp    FWORD PTR [rbp-0x53000e04]
   1400225b9:	(bad)  
   1400225ba:	(bad)  
   1400225bb:	jmp    FWORD PTR [rdx-0x59000001]
   1400225c1:	(bad)  
   1400225c2:	(bad)  
   1400225c3:	jmp    QWORD PTR [rbx-0x6a000001]
   1400225c9:	(bad)  
   1400225ca:	(bad)  
   1400225cb:	jmp    FWORD PTR [rbx-0xd]
   1400225ce:	(bad)  
   1400225cf:	call   QWORD PTR [rbx-0x15]
   1400225d2:	(bad)  
   1400225d3:	inc    DWORD PTR [rbx-0x1e]
   1400225d6:	(bad)  
   1400225d7:	(bad)  
   1400225d8:	cmp    esp,ebx
   1400225da:	(bad)  
   1400225db:	push   QWORD PTR [rsi]
   1400225dd:	(bad)  
   1400225de:	(bad)  
   1400225df:	push   QWORD PTR [rbx]
   1400225e1:	iret   
   1400225e2:	(bad)  
   1400225e3:	jmp    FWORD PTR [rdi]
   1400225e5:	retf   0xffff
   1400225e8:	sub    al,0xc4
   1400225ea:	(bad)  
   1400225eb:	jmp    FWORD PTR [rdx]
   1400225ed:	mov    edi,0xbd2cffff
   1400225f2:	(bad)  
   1400225f3:	push   QWORD PTR [rax]
   1400225f5:	mov    ebp,0xc137ffff
   1400225fa:	(bad)  
   1400225fb:	dec    DWORD PTR [rbp-0x39]
   1400225fe:	sti    
   1400225ff:	call   FWORD PTR [rdx-0x1700272b]
   140022605:	jrcxz  0x14002259f
   140022607:	(bad)  
   140022608:	out    dx,al
   140022609:	in     al,0x91
   14002260b:	(bad)  
   14002260c:	fidivr WORD PTR [rdx+0x79b2eb66]
   140022612:	and    eax,edi
   140022614:	scas   eax,DWORD PTR es:[rdi]
   140022615:	je     0x140022636
   140022617:	jl     0x1400225c8
   140022619:	jae    0x14002263a
   14002261b:	cmp    DWORD PTR [rdi+0x51f73],ebp
	...
   140022649:	add    BYTE PTR [rax],al
   14002264b:	add    BYTE PTR [rcx+rsi*2+0x71ac021e],ch
   140022652:	(bad)  
   140022653:	(bad)  
   140022654:	lods   al,BYTE PTR ds:[rsi]
   140022655:	jno    0x140022675
   140022657:	js     0x14002260a
   140022659:	jns    0x140022680
   14002265b:	leave  
   14002265c:	jrcxz  0x140022622
   14002265e:	ins    BYTE PTR es:[rdi],dx
   14002265f:	out    dx,eax
   140022660:	sti    
   140022661:	lock xchg ebp,eax
   140022663:	(bad)  
   140022664:	std    
   140022665:	repz (bad) 
   140022667:	(bad)  
   140022668:	std    
   140022669:	cmc    
   14002266a:	popf   
   14002266b:	(bad)  
   14002266c:	(bad)  
   14002266d:	neg    BYTE PTR [rsi-0x64090101]
   140022673:	(bad)  
   140022674:	(bad)  
   140022675:	cmc    
   140022676:	fwait
   140022677:	(bad)  
   140022678:	(bad)  
   140022679:	cmc    
   14002267a:	cwde   
   14002267b:	(bad)  
   14002267c:	(bad)  
   14002267d:	cmc    
   14002267e:	cwde   
   14002267f:	(bad)  
   140022680:	(bad)  
   140022681:	not    BYTE PTR [rsi-0x6c0a0101]
   140022687:	(bad)  
   140022688:	(bad)  
   140022689:	cmc    
   14002268a:	xchg   edx,eax
   14002268b:	(bad)  
   14002268c:	(bad)  
   14002268d:	hlt    
   14002268e:	nop
   14002268f:	(bad)  
   140022690:	(bad)  
   140022691:	hlt    
   140022692:	mov    edi,?
   140022694:	push   rbx
   140022696:	mov    edi,edi
   140022698:	push   rdx
   14002269a:	xchg   bh,bh
   14002269c:	push   rdx
   14002269e:	cmp    edi,0xffffffff
   1400226a1:	icebp  
   1400226a2:	cmp    bh,0xff
   1400226a5:	out    dx,al
   1400226a6:	jge    0x1400226a7
   1400226a8:	(bad)  
   1400226a9:	out    dx,al
   1400226aa:	ja     0x1400226ab
   1400226ac:	(bad)  
   1400226ad:	call   0x126012625
   1400226b2:	jo     0x1400226b3
   1400226b4:	cld    
   1400226b5:	in     al,0x6d
   1400226b7:	(bad)  
   1400226b8:	sti    
   1400226b9:	fisubr WORD PTR [rax-0x1]
   1400226bc:	cli    
   1400226bd:	fisub  DWORD PTR [rsi-0x1]
   1400226c0:	clc    
   1400226c1:	(bad)  
   1400226c2:	(bad)  
   1400226c3:	push   rsi
   1400226c5:	rcr    BYTE PTR [rsi-0x1],cl
   1400226c8:	hlt    
   1400226c9:	retf   
   1400226ca:	pop    rbx
   1400226cb:	push   rax
   1400226cd:	(bad)  
   1400226ce:	push   rbp
   1400226cf:	(bad)  
   1400226d0:	out    dx,al
   1400226d1:	rcl    DWORD PTR [rdx-0x1],0xeb
   1400226d5:	mov    ebx,0xb7e8ff4d
   1400226da:	rex.WB jmp r14
   1400226dd:	scas   eax,DWORD PTR es:[rdi]
   1400226de:	rex.RB (bad) 
   1400226e0:	fsub   QWORD PTR [rbp+0x7dafff40]
   1400226e6:	cs jrcxz 0x140022670
   1400226e9:	jle    0x140022741
   1400226eb:	and    QWORD PTR [rbp-0x70],r8
   1400226ef:	adc    DWORD PTR [rax],eax
   1400226f1:	add    BYTE PTR [rbp+0xa],dl
   1400226f4:	add    BYTE PTR [rax],al
   1400226f6:	push   rbp
   1400226f7:	add    eax,DWORD PTR [rax]
	...
   140022781:	add    BYTE PTR [rax],al
   140022783:	add    BYTE PTR [rsi-0x45dcde87],dh
   140022789:	jge    0x1400227b1
   14002278b:	enter  0xdff5,0x74
   14002278f:	std    
   140022790:	cli    
   140022791:	in     eax,dx
   140022792:	jnp    0x140022793
   140022794:	sti    
   140022795:	lock jge 0x140022797
   140022798:	std    
   140022799:	hlt    
   14002279a:	(bad)  
   14002279b:	(bad)  
   14002279c:	std    
   14002279d:	test   BYTE PTR [rbx-0x6e070201],0xff
   1400227a4:	(bad)  
   1400227a5:	cli    
   1400227a6:	cwde   
   1400227a7:	(bad)  
   1400227a8:	(bad)  
   1400227a9:	sti    
   1400227aa:	sahf   
   1400227ab:	(bad)  
   1400227ac:	(bad)  
   1400227ad:	cld    
   1400227ae:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400227af:	(bad)  
   1400227b0:	(bad)  
   1400227b1:	std    
   1400227b2:	lods   al,BYTE PTR ds:[rsi]
   1400227b3:	(bad)  
   1400227b4:	stc    
   1400227b5:	std    
   1400227b6:	mov    ch,0xff
   1400227b8:	stos   BYTE PTR es:[rdi],al
   1400227b9:	cld    
   1400227ba:	repz jmp FWORD PTR [rdi+rdi*8-0x550001]
   1400227c2:	(bad)  
   1400227c3:	jmp    QWORD PTR [rsi-0x5c000001]
   1400227c9:	(bad)  
   1400227ca:	(bad)  
   1400227cb:	call   QWORD PTR [rbp+0x6effffff]
   1400227d1:	repz (bad) 
   1400227d3:	call   QWORD PTR [rbx-0x15]
   1400227d6:	(bad)  
   1400227d7:	inc    DWORD PTR [rdx+riz*8-0x1]
   1400227db:	(bad)  
   1400227dc:	cmp    bl,ah
   1400227de:	(bad)  
   1400227df:	push   QWORD PTR [rsi]
   1400227e1:	xlat   BYTE PTR ds:[rbx]
   1400227e2:	(bad)  
   1400227e3:	push   QWORD PTR [rbx]
   1400227e5:	iret   
   1400227e6:	(bad)  
   1400227e7:	jmp    FWORD PTR [rdi]
   1400227e9:	retf   0xffff
   1400227ec:	sub    al,0xc3
   1400227ee:	(bad)  
   1400227ef:	jmp    FWORD PTR [rax+rax*8]
   1400227f2:	(bad)  
   1400227f3:	jmp    FWORD PTR [rdi+rdi*4]
   1400227f6:	(bad)  
   1400227f7:	push   QWORD PTR [rax]
   1400227f9:	mov    ebp,0xc136ffff
   1400227fe:	(bad)  
   1400227ff:	dec    DWORD PTR [rcx-0x38]
   140022802:	cld    
   140022803:	dec    DWORD PTR [rdx-0x1d001b2e]
   140022809:	jrcxz  0x1400227ad
   14002280b:	(bad)  
   14002280c:	out    dx,al
   14002280d:	jmp    0x12bf727ac
   140022812:	xchg   ebx,eax
   140022813:	(bad)  
   140022814:	call   0x10cf099e1
   140022819:	pushf  
   14002281a:	rex.RXB fdiv QWORD PTR [r8-0x503fdf8c]
   140022821:	jae    0x140022842
   140022823:	mov    WORD PTR [rdi-0x50a9e08d],gs
   140022829:	jae    0x14002284a
   14002282b:	xor    BYTE PTR [rsi+0x181f73],ch
	...
   140022839:	add    BYTE PTR [rax],al
   14002283b:	add    BYTE PTR [rsi-0x52eae18e],ch
   140022841:	jb     0x140022861
   140022843:	sub    eax,0x541e72ad
   140022848:	lods   eax,DWORD PTR ds:[rsi]
   140022849:	jb     0x140022869
   14002284b:	mov    ebp,DWORD PTR [rsi-0x343ee08d]
   140022851:	lahf   
   140022852:	rex.WX loopne 0x14002283c
   140022855:	retf   0xf172
   140022858:	cli    
   140022859:	lock xchg ebp,eax
   14002285b:	(bad)  
   14002285c:	std    
   14002285d:	hlt    
   14002285e:	(bad)  
   14002285f:	(bad)  
   140022860:	std    
   140022861:	neg    BYTE PTR [rsi-0x60090101]
   140022867:	(bad)  
   140022868:	(bad)  
   140022869:	neg    BYTE PTR [rsi-0x61090101]
   14002286f:	(bad)  
   140022870:	(bad)  
   140022871:	cmc    
   140022872:	fwait
   140022873:	(bad)  
   140022874:	(bad)  
   140022875:	cmc    
   140022876:	cwde   
   140022877:	(bad)  
   140022878:	(bad)  
   140022879:	neg    BYTE PTR [rax-0x690a0101]
   14002287f:	(bad)  
   140022880:	(bad)  
   140022881:	cmc    
   140022882:	xchg   esp,eax
   140022883:	(bad)  
   140022884:	(bad)  
   140022885:	not    BYTE PTR [rdx-0x6f0b0101]
   14002288b:	(bad)  
   14002288c:	(bad)  
   14002288d:	hlt    
   14002288e:	mov    edi,?
   140022890:	push   rsp
   140022892:	mov    edi,edi
   140022894:	push   rdx
   140022896:	xchg   bh,bh
   140022898:	push   rcx
   14002289a:	test   bh,bh
   14002289c:	push   rcx
   14002289e:	cmp    edi,0xff7eeeff
   1400228a4:	(bad)  
   1400228a5:	in     al,dx
   1400228a6:	jp     0x1400228a7
   1400228a8:	(bad)  
   1400228a9:	jmp    0x129022824
   1400228ae:	jo     0x1400228af
   1400228b0:	(bad)  
   1400228b1:	in     al,0x6e
   1400228b3:	(bad)  
   1400228b4:	cld    
   1400228b5:	fild   QWORD PTR [rax-0x1]
   1400228b8:	cli    
   1400228b9:	(bad)  [rsi-0x1]
   1400228bc:	clc    
   1400228bd:	xlat   BYTE PTR ds:[rbx]
   1400228be:	(bad)  
   1400228bf:	(bad)  
   1400228c0:	clc    
   1400228c1:	(bad)  
   1400228c2:	pop    rdi
   1400228c3:	push   rbp
   1400228c5:	rcr    BYTE PTR [rbp-0x1],1
   1400228c8:	repz leave 
   1400228ca:	pop    rax
   1400228cb:	push   rax
   1400228cd:	ret    
   1400228ce:	push   rsp
   1400228cf:	(bad)  
   1400228d0:	in     al,dx
   1400228d1:	mov    ebp,0xb8eaff50
   1400228d6:	rex.WXB jmp r14
   1400228d9:	mov    dl,0x49
   1400228db:	(bad)  
   1400228dc:	fild   QWORD PTR [rcx-0x753c00bc]
   1400228e2:	cs jmp 0x140022881
   1400228e5:	jo     0x140022913
   1400228e7:	nop
   1400228e8:	(bad)  
   1400228e9:	mov    ch,0xfe
   1400228eb:	sbb    DWORD PTR [rsi],edi
   1400228ed:	mov    edx,ecx
   1400228ef:	sbb    eax,0x11550000
   1400228f4:	add    BYTE PTR [rax],al
   1400228f6:	push   rbp
   1400228f7:	(bad)  
   1400228f8:	add    BYTE PTR [rax],al
   1400228fa:	push   rbp
   1400228fb:	add    DWORD PTR [rax],eax
	...
   140022985:	add    BYTE PTR [rax],al
   140022987:	add    BYTE PTR [rsi-0x2494de87],dh
   14002298d:	lods   eax,DWORD PTR ds:[rsi]
   14002298e:	push   rax
   14002298f:	out    0xf6,al
   140022991:	out    0x7a,eax
   140022993:	(bad)  
   140022994:	sti    
   140022995:	out    dx,al
   140022996:	jl     0x140022997
   140022998:	cld    
   140022999:	repz jg 0x14002299b
   14002299c:	std    
   14002299d:	cmc    
   14002299e:	test   bh,bh
   1400229a0:	std    
   1400229a1:	test   BYTE PTR [rbp-0x6c070101],0xff
   1400229a8:	(bad)  
   1400229a9:	cli    
   1400229aa:	cdq    
   1400229ab:	(bad)  
   1400229ac:	(bad)  
   1400229ad:	cld    
   1400229ae:	sahf   
   1400229af:	(bad)  
   1400229b0:	(bad)  
   1400229b1:	std    
   1400229b2:	test   al,0xff
   1400229b4:	(bad)  
   1400229b5:	std    
   1400229b6:	lods   eax,DWORD PTR ds:[rsi]
   1400229b7:	(bad)  
   1400229b8:	cld    
   1400229b9:	std    
   1400229ba:	mov    bl,0xff
   1400229bc:	lods   al,BYTE PTR ds:[rsi]
   1400229bd:	cld    
   1400229be:	repz jmp FWORD PTR [rdi+rdi*8-0x550001]
   1400229c6:	(bad)  
   1400229c7:	jmp    QWORD PTR [rsi-0x5c000001]
   1400229cd:	(bad)  
   1400229ce:	(bad)  
   1400229cf:	call   QWORD PTR [rsi+0x6effffff]
   1400229d5:	cmc    
   1400229d6:	(bad)  
   1400229d7:	call   QWORD PTR [rbx-0x15]
   1400229da:	(bad)  
   1400229db:	inc    DWORD PTR [rsp+riz*8-0x1]
   1400229df:	(bad)  
   1400229e0:	cmp    al,0xdc
   1400229e2:	(bad)  
   1400229e3:	push   QWORD PTR [rsi]
   1400229e5:	xlat   BYTE PTR ds:[rbx]
   1400229e6:	(bad)  
   1400229e7:	push   QWORD PTR [rbx]
   1400229e9:	sar    edi,1
   1400229eb:	jmp    FWORD PTR [rdi]
   1400229ed:	retf   
   1400229ee:	(bad)  
   1400229ef:	jmp    FWORD PTR [rip+0x2cffffc4]        # 0x16d0229b9
   1400229f5:	sar    edi,0xff
   1400229f8:	sub    eax,0x2fffffbd
   1400229fd:	mov    edi,0xc034ffff
   140022a02:	(bad)  
   140022a03:	inc    DWORD PTR [rbx-0x3b]
   140022a06:	std    
   140022a07:	(bad)  
   140022a08:	jns    0x1400229d9
   140022a0a:	out    dx,al
   140022a0b:	(bad)  
   140022a0c:	fsub   st,st(2)
   140022a0e:	lods   al,BYTE PTR ds:[rsi]
   140022a0f:	(bad)  
   140022a10:	out    dx,al
   140022a11:	jmp    0x1400229b3
   140022a13:	push   rsi
   140022a15:	lock movabs al,ds:0x95f1faff9df3faff
   140022a1f:	(bad)  
   140022a20:	out    dx,eax
   140022a21:	(bad)  
   140022a22:	jp     0x140022a18
   140022a24:	fidiv  DWORD PTR [rdx-0x67361aa4]
   140022a2a:	rex.R fnstcw WORD PTR [rbx-0x512ccd79]
   140022a31:	jae    0x140022a52
   140022a33:	retf   
   140022a34:	scas   al,BYTE PTR es:[rdi]
   140022a35:	jae    0x140022a56
   140022a37:	retf   
   140022a38:	scas   al,BYTE PTR es:[rdi]
   140022a39:	jae    0x140022a59
   140022a3b:	retf   
   140022a3c:	mov    ebx,0xc9d33186
   140022a41:	cwde   
   140022a42:	rex.RB fcmovnu st,st(4)
   140022a45:	mov    ch,0x5e
   140022a47:	out    0xef,al
   140022a49:	fdivr  DWORD PTR [rbp+rsi*8-0x5]
   140022a4d:	icebp  
   140022a4e:	xchg   esp,eax
   140022a4f:	std    
   140022a50:	cld    
   140022a51:	hlt    
   140022a52:	popf   
   140022a53:	(bad)  
   140022a54:	std    
   140022a55:	cmc    
   140022a56:	sahf   
   140022a57:	(bad)  
   140022a58:	(bad)  
   140022a59:	neg    BYTE PTR [rdi-0x5f080101]
   140022a5f:	(bad)  
   140022a60:	(bad)  
   140022a61:	mul    DWORD PTR [rax-0x61080101]
   140022a67:	(bad)  
   140022a68:	(bad)  
   140022a69:	neg    DWORD PTR [rsi-0x630a0101]
   140022a6f:	(bad)  
   140022a70:	(bad)  
   140022a71:	cmc    
   140022a72:	cdq    
   140022a73:	(bad)  
   140022a74:	(bad)  
   140022a75:	not    BYTE PTR [rdi-0x690a0101]
   140022a7b:	(bad)  
   140022a7c:	(bad)  
   140022a7d:	cmc    
   140022a7e:	xchg   esp,eax
   140022a7f:	(bad)  
   140022a80:	(bad)  
   140022a81:	not    BYTE PTR [rdx-0x6f0b0101]
   140022a87:	(bad)  
   140022a88:	(bad)  
   140022a89:	cmc    
   140022a8a:	mov    edi,?
   140022a8c:	push   rsp
   140022a8e:	mov    edi,edi
   140022a90:	push   rdx
   140022a92:	xchg   edi,edi
   140022a94:	push   rcx
   140022a96:	test   bh,bh
   140022a98:	push   rcx
   140022a9a:	cmp    edi,0xff7ef1ff
   140022aa0:	(bad)  
   140022aa1:	in     al,dx
   140022aa2:	jp     0x140022aa3
   140022aa4:	(bad)  
   140022aa5:	in     eax,dx
   140022aa6:	jbe    0x140022aa7
   140022aa8:	(bad)  
   140022aa9:	jmp    0x125012a20
   140022aae:	outs   dx,DWORD PTR ds:[rsi]
   140022aaf:	(bad)  
   140022ab0:	cld    
   140022ab1:	fild   QWORD PTR [rdi+rdi*8-0x5]
   140022ab5:	(bad)  [rax-0x1]
   140022ab8:	stc    
   140022ab9:	fsub   DWORD PTR [rbx-0x1]
   140022abc:	not    esi
   140022abe:	(bad)  
   140022abf:	push   rsp
   140022ac1:	rcr    BYTE PTR [rsi-0x1],1
   140022ac4:	repz retf 
   140022ac6:	pop    rdx
   140022ac7:	push   rcx
   140022ac9:	(bad)  
   140022aca:	push   rdi
   140022acb:	(bad)  
   140022acc:	out    dx,eax
   140022acd:	rcl    BYTE PTR [rdx-0x1],0xea
   140022ad1:	mov    edx,0xb6e8ff4d
   140022ad6:	rex.WX jmp rbx
   140022ad9:	scas   al,BYTE PTR es:[rdi]
   140022ada:	rex.W call rbx
   140022add:	fwait
   140022ade:	cmp    dh,bh
   140022ae0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140022ae1:	ins    BYTE PTR es:[rdi],dx
   140022ae2:	sbb    al,0xc2
   140022ae4:	js     0x140022b63
   140022ae6:	data16 sbb al,0x2d
   140022ae9:	mov    ch,0xff
   140022aeb:	(bad)  
   140022aec:	scas   al,BYTE PTR es:[rdi]
   140022aee:	hlt    
   140022aef:	(bad)  
   140022af0:	(bad)  
   140022af1:	sbb    ch,BYTE PTR [rbx+0x18]
   140022af4:	add    BYTE PTR [rax],al
   140022af6:	push   rbp
   140022af7:	or     eax,0x3550000
	...
   140022b88:	mov    dh,0x79
   140022b8a:	and    DWORD PTR [rip+0xffffffffa3227ab6],eax        # 0xe324a646
   140022b90:	jmp    0x13af08955
   140022b95:	(bad)  
   140022b96:	jp     0x140022b97
   140022b98:	sti    
   140022b99:	lock jle 0x140022b9b
   140022b9c:	cld    
   140022b9d:	repnz cmp edi,0xff86f5fd
   140022ba4:	std    
   140022ba5:	not    DWORD PTR [rax-0x6b070101]
   140022bab:	(bad)  
   140022bac:	(bad)  
   140022bad:	cli    
   140022bae:	fwait
   140022baf:	(bad)  
   140022bb0:	(bad)  
   140022bb1:	cld    
   140022bb2:	movabs ds:0xaefdffffa8fcffff,al
   140022bbb:	(bad)  
   140022bbc:	std    
   140022bbd:	(bad)  
   140022bbe:	mov    ah,0xff
   140022bc0:	mov    dl,0xfc
   140022bc2:	icebp  
   140022bc3:	jmp    FWORD PTR [rdi+rdi*8-0x550001]
   140022bca:	(bad)  
   140022bcb:	jmp    QWORD PTR [rsi-0x5c000001]
   140022bd1:	(bad)  
   140022bd2:	(bad)  
   140022bd3:	call   FWORD PTR [rcx+0x71ffffff]
   140022bd9:	cmc    
   140022bda:	(bad)  
   140022bdb:	call   QWORD PTR [rbp-0x14]
   140022bde:	(bad)  
   140022bdf:	inc    DWORD PTR [rsi-0x1c]
   140022be2:	(bad)  
   140022be3:	(bad)  
   140022be4:	cmp    al,0xdc
   140022be6:	(bad)  
   140022be7:	push   QWORD PTR [rsi]
   140022be9:	xlat   BYTE PTR ds:[rbx]
   140022bea:	(bad)  
   140022beb:	push   QWORD PTR [rcx+rdx*8]
   140022bee:	(bad)  
   140022bef:	jmp    FWORD PTR [rdi]
   140022bf1:	retf   
   140022bf2:	(bad)  
   140022bf3:	jmp    FWORD PTR [rip+0x2cffffc7]        # 0x16d022bc0
   140022bf9:	sar    bh,0xff
   140022bfc:	sub    al,0xbf
   140022bfe:	(bad)  
   140022bff:	jmp    FWORD PTR [rdi]
   140022c01:	mov    ebp,0xc034ffff
   140022c06:	(bad)  
   140022c07:	inc    DWORD PTR [rax-0x3b]
   140022c0a:	(bad)  
   140022c0b:	jmp    FWORD PTR [rbp-0x33]
   140022c0e:	repz dec ecx
   140022c11:	loopne 0x140022bce
   140022c13:	(bad)  
   140022c14:	in     eax,dx
   140022c15:	(bad)  
   140022c16:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140022c17:	push   rsp
   140022c19:	icebp  
   140022c1a:	test   eax,0xa8f6faff
   140022c1f:	(bad)  
   140022c20:	(bad)  
   140022c21:	stc    
   140022c22:	test   eax,0xa6f9fdff
   140022c27:	(bad)  
   140022c28:	std    
   140022c29:	clc    
   140022c2a:	movabs ds:0xa1f7fdffa1f7fdff,eax
   140022c33:	(bad)  
   140022c34:	std    
   140022c35:	mul    BYTE PTR [rax-0x5e080201]
   140022c3b:	(bad)  
   140022c3c:	std    
   140022c3d:	mul    DWORD PTR [rcx-0x5d080201]
   140022c43:	(bad)  
   140022c44:	(bad)  
   140022c45:	clc    
   140022c46:	movabs ds:0xa4f8feffa4f8feff,al
   140022c4f:	(bad)  
   140022c50:	(bad)  
   140022c51:	stc    
   140022c52:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140022c53:	(bad)  
   140022c54:	push   rdi
   140022c56:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140022c57:	(bad)  
   140022c58:	(bad)  
   140022c59:	clc    
   140022c5a:	movabs ds:0xa0f8feffa0f8feff,eax
   140022c63:	(bad)  
   140022c64:	(bad)  
   140022c65:	neg    DWORD PTR [rsi-0x63090101]
   140022c6b:	(bad)  
   140022c6c:	(bad)  
   140022c6d:	neg    DWORD PTR [rcx-0x67090101]
   140022c73:	(bad)  
   140022c74:	(bad)  
   140022c75:	not    BYTE PTR [rdi-0x6a090101]
   140022c7b:	(bad)  
   140022c7c:	(bad)  
   140022c7d:	not    BYTE PTR [rdx-0x700a0001]
   140022c83:	(bad)  
   140022c84:	push   rbp
   140022c86:	mov    edi,edi
   140022c88:	push   rsp
   140022c8a:	mov    edi,edi
   140022c8c:	push   rbx
   140022c8e:	mov    edi,edi
   140022c90:	push   rdx
   140022c92:	xchg   bh,bh
   140022c94:	push   rdx
   140022c96:	(bad)  
   140022c97:	(bad)  
   140022c98:	push   rcx
   140022c9a:	jle    0x140022c9b
   140022c9c:	(bad)  
   140022c9d:	out    dx,al
   140022c9e:	jge    0x140022c9f
   140022ca0:	(bad)  
   140022ca1:	in     eax,dx
   140022ca2:	jbe    0x140022ca3
   140022ca4:	(bad)  
   140022ca5:	jmp    0x126012c1c
   140022caa:	jo     0x140022cab
   140022cac:	std    
   140022cad:	jrcxz  0x140022d1c
   140022caf:	(bad)  
   140022cb0:	cli    
   140022cb1:	fisubr WORD PTR [rax-0x1]
   140022cb4:	stc    
   140022cb5:	fsub   QWORD PTR [rbp-0x1]
   140022cb8:	clc    
   140022cb9:	xlat   BYTE PTR ds:[rbx]
   140022cba:	(bad)  
   140022cbb:	push   rbp
   140022cbd:	rcr    DWORD PTR [rdi-0x1],1
   140022cc0:	hlt    
   140022cc1:	iret   
   140022cc2:	pop    rsp
   140022cc3:	push   rdx
   140022cc5:	enter  0xff59,0xf0
   140022cc9:	ret    
   140022cca:	push   rbx
   140022ccb:	(bad)  
   140022ccc:	in     al,dx
   140022ccd:	mov    esp,0xb8e9ff50
   140022cd2:	rex.WR jmp rsi
   140022cd5:	mov    dl,0x4a
   140022cd7:	jmp    rax
   140022cd9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140022cda:	rex.X (bad) 
   140022cdc:	mov    ecx,0xa5e42c80
   140022ce1:	ins    BYTE PTR es:[rdi],dx
   140022ce2:	sbb    al,0x4e
   140022ce4:	sbb    edi,DWORD PTR [rax-0x2f]
   140022ce7:	add    al,0x2d
   140022ce9:	mov    ch,0xff
   140022ceb:	es xor al,0xb2
   140022cee:	cld    
   140022cef:	xor    esi,DWORD PTR [rax]
   140022cf1:	lods   eax,DWORD PTR fs:[rsi]
   140022cf3:	and    eax,DWORD PTR [rcx]
   140022cf5:	add    edx,DWORD PTR [rdi+0x14]
   140022cf8:	add    BYTE PTR [rax],al
   140022cfa:	push   rbp
   140022cfb:	(bad)  
	...
   140022d8c:	mov    dh,0x79
   140022d8e:	and    DWORD PTR [rcx],esp
   140022d90:	mov    ebx,0xf2c5277e
   140022d95:	fnstenv [rcx-0x8]
   140022d98:	cli    
   140022d99:	in     eax,dx
   140022d9a:	jge    0x140022d9b
   140022d9c:	sti    
   140022d9d:	out    dx,eax
   140022d9e:	jle    0x140022d9f
   140022da0:	cld    
   140022da1:	repz cmp edi,0xfffffffd
   140022da5:	cmc    
   140022da6:	mov    bh,bh
   140022da8:	(bad)  
   140022da9:	clc    
   140022daa:	nop
   140022dab:	(bad)  
   140022dac:	(bad)  
   140022dad:	cli    
   140022dae:	xchg   edi,eax
   140022daf:	(bad)  
   140022db0:	(bad)  
   140022db1:	sti    
   140022db2:	pushf  
   140022db3:	(bad)  
   140022db4:	(bad)  
   140022db5:	cld    
   140022db6:	movabs eax,ds:0xaffdffffa8fdffff
   140022dbf:	(bad)  
   140022dc0:	(bad)  
   140022dc1:	(bad)  
   140022dc2:	mov    bl,0xff
   140022dc4:	mov    dh,0xfc
   140022dc6:	out    dx,al
   140022dc7:	jmp    FWORD PTR [rdx-0x55000001]
   140022dcd:	(bad)  
   140022dce:	(bad)  
   140022dcf:	jmp    QWORD PTR [rsi-0x5c000001]
   140022dd5:	(bad)  
   140022dd6:	(bad)  
   140022dd7:	call   FWORD PTR [rdi+rdi*8-0xa8a0001]
   140022dde:	(bad)  
   140022ddf:	call   FWORD PTR [rax-0x14]
   140022de2:	(bad)  
   140022de3:	inc    DWORD PTR [rdi-0x19]
   140022de6:	(bad)  
   140022de7:	(bad)  
   140022de8:	cmp    al,0xde
   140022dea:	(bad)  
   140022deb:	push   QWORD PTR [rdi]
   140022ded:	fdivr  st,st(7)
   140022def:	push   QWORD PTR [rdx+rdx*8]
   140022df2:	(bad)  
   140022df3:	push   QWORD PTR [rax]
   140022df5:	(bad)  
   140022df6:	(bad)  
   140022df7:	jmp    FWORD PTR [rdi]
   140022df9:	(bad)  
   140022dfa:	(bad)  
   140022dfb:	jmp    FWORD PTR [rcx+rax*8]
   140022dfe:	(bad)  
   140022dff:	jmp    FWORD PTR [rdi+rdi*4]
   140022e02:	(bad)  
   140022e03:	jmp    FWORD PTR [rdi]
   140022e05:	mov    ebp,0xc033ffff
   140022e0a:	(bad)  
   140022e0b:	(bad)  
   140022e0c:	cmp    al,0xc4
   140022e0e:	(bad)  
   140022e0f:	call   FWORD PTR [rsi-0x36]
   140022e12:	idiv   edi
   140022e14:	mov    ah,0xdc
   140022e16:	leave  
   140022e17:	(bad)  
   140022e18:	in     al,dx
   140022e19:	jmp    0x130f72dc4
   140022e1e:	stos   BYTE PTR es:[rdi],al
   140022e1f:	(bad)  
   140022e20:	cli    
   140022e21:	imul   BYTE PTR [rbp-0x4f050101]
   140022e27:	(bad)  
   140022e28:	(bad)  
   140022e29:	sti    
   140022e2a:	mov    al,0xff
   140022e2c:	(bad)  
   140022e2d:	sti    
   140022e2e:	scas   eax,DWORD PTR es:[rdi]
   140022e2f:	(bad)  
   140022e30:	(bad)  
   140022e31:	sti    
   140022e32:	scas   al,BYTE PTR es:[rdi]
   140022e33:	(bad)  
   140022e34:	(bad)  
   140022e35:	sti    
   140022e36:	scas   al,BYTE PTR es:[rdi]
   140022e37:	(bad)  
   140022e38:	(bad)  
   140022e39:	sti    
   140022e3a:	lods   eax,DWORD PTR ds:[rsi]
   140022e3b:	(bad)  
   140022e3c:	(bad)  
   140022e3d:	cli    
   140022e3e:	lods   al,BYTE PTR ds:[rsi]
   140022e3f:	(bad)  
   140022e40:	(bad)  
   140022e41:	sti    
   140022e42:	stos   DWORD PTR es:[rdi],eax
   140022e43:	(bad)  
   140022e44:	(bad)  
   140022e45:	cli    
   140022e46:	stos   BYTE PTR es:[rdi],al
   140022e47:	(bad)  
   140022e48:	(bad)  
   140022e49:	cli    
   140022e4a:	test   al,0xff
   140022e4c:	(bad)  
   140022e4d:	clc    
   140022e4e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140022e4f:	(bad)  
   140022e50:	(bad)  
   140022e51:	stc    
   140022e52:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140022e53:	(bad)  
   140022e54:	(bad)  
   140022e55:	stc    
   140022e56:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140022e57:	(bad)  
   140022e58:	(bad)  
   140022e59:	stc    
   140022e5a:	movabs ds:0x9ff7feffa0f7feff,al
   140022e63:	(bad)  
   140022e64:	(bad)  
   140022e65:	clc    
   140022e66:	pushf  
   140022e67:	(bad)  
   140022e68:	(bad)  
   140022e69:	clc    
   140022e6a:	(bad)  
   140022e6b:	(bad)  
   140022e6c:	(bad)  
   140022e6d:	neg    BYTE PTR [rcx-0x68090101]
   140022e73:	(bad)  
   140022e74:	(bad)  
   140022e75:	not    DWORD PTR [rbp-0x6c0a0101]
   140022e7b:	(bad)  
   140022e7c:	push   rbp
   140022e7e:	nop
   140022e7f:	(bad)  
   140022e80:	push   rbp
   140022e82:	mov    edi,edi
   140022e84:	push   rsp
   140022e86:	mov    bh,bh
   140022e88:	push   rsp
   140022e8a:	mov    edi,edi
   140022e8c:	push   rdx
   140022e8e:	test   edi,edi
   140022e90:	push   rcx
   140022e92:	(bad)  
   140022e93:	(bad)  
   140022e94:	push   rax
   140022e96:	cmp    bh,0xff
   140022e99:	out    dx,al
   140022e9a:	jge    0x140022e9b
   140022e9c:	(bad)  
   140022e9d:	in     eax,dx
   140022e9e:	js     0x140022e9f
   140022ea0:	(bad)  
   140022ea1:	call   0x127012e19
   140022ea6:	jno    0x140022ea7
   140022ea8:	std    
   140022ea9:	in     al,0x6f
   140022eab:	(bad)  
   140022eac:	sti    
   140022ead:	fild   QWORD PTR [rdx-0x1]
   140022eb0:	stc    
   140022eb1:	fsub   QWORD PTR [rsi-0x1]
   140022eb4:	clc    
   140022eb5:	xlat   BYTE PTR ds:[rbx]
   140022eb6:	fs push rbp
   140022eb9:	shl    BYTE PTR [rax-0x1],cl
   140022ebc:	cmc    
   140022ebd:	rcr    BYTE PTR [rbp-0x1],1
   140022ec0:	repnz retf 0xff5a
   140022ec4:	icebp  
   140022ec5:	(bad)  
   140022ec6:	push   rsi
   140022ec7:	(bad)  
   140022ec8:	in     eax,dx
   140022ec9:	mov    ebp,0xbaeaff51
   140022ece:	rex.WRXB jmp r15
   140022ed1:	mov    ch,0x4c
   140022ed3:	jmp    rdx
   140022ed5:	lods   al,BYTE PTR ds:[rsi]
   140022ed6:	inc    rdx
   140022ed9:	mov    ch,BYTE PTR [rdi]
   140022edb:	(bad)  
   140022edc:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140022edd:	ins    BYTE PTR es:[rdi],dx
   140022ede:	sbb    al,0x95
	...
   140022ee8:	and    eax,0x2a21faa9
   140022eed:	mov    dl,0xff
   140022eef:	cmp    DWORD PTR [rsi+rbx*4-0x1d],eax
   140022ef3:	xor    eax,DWORD PTR [rbx]
   140022ef5:	add    eax,0x1d58
   140022efa:	push   rbp
   140022efb:	or     eax,DWORD PTR [rax]
   140022efd:	add    BYTE PTR [rbp+0x1],dl
	...
   140022f90:	mov    dh,0x79
   140022f92:	and    DWORD PTR [rsi-0x28],edx
   140022f95:	stos   BYTE PTR es:[rdi],al
   140022f96:	rex.WRXB loop 0x140022f91
   140022f99:	jmp    0x12efd2f1c
   140022f9e:	cmp    bh,0xfb
   140022fa1:	repnz cmp edi,0xff85f5fc
   140022fa8:	std    
   140022fa9:	test   DWORD PTR [rdx-0x70060101],0x99fafeff
   140022fb3:	(bad)  
   140022fb4:	(bad)  
   140022fb5:	sti    
   140022fb6:	lahf   
   140022fb7:	(bad)  
   140022fb8:	(bad)  
   140022fb9:	cld    
   140022fba:	movabs ds:0xaffdffffabfdffff,eax
   140022fc3:	(bad)  
   140022fc4:	(bad)  
   140022fc5:	std    
   140022fc6:	mov    ah,0xff
   140022fc8:	mov    esi,0xaaffe9fb
   140022fcd:	(bad)  
   140022fce:	(bad)  
   140022fcf:	jmp    FWORD PTR [rdi+rdi*8-0x570001]
   140022fd6:	(bad)  
   140022fd7:	jmp    QWORD PTR [rbx-0x62000001]
   140022fdd:	(bad)  
   140022fde:	(bad)  
   140022fdf:	(bad)  
   140022fe0:	jnp    0x140022fd8
   140022fe2:	(bad)  
   140022fe3:	call   FWORD PTR [rbp-0x12]
   140022fe6:	(bad)  
   140022fe7:	inc    DWORD PTR [rdi-0x19]
   140022fea:	(bad)  
   140022feb:	(bad)  
   140022fec:	ds fdivp st(7),st
   140022fef:	push   QWORD PTR [rdi]
   140022ff1:	(bad)  
   140022ff3:	push   QWORD PTR [rdx+rdx*8]
   140022ff6:	(bad)  
   140022ff7:	push   QWORD PTR [rcx]
   140022ff9:	(bad)  
   140022ffa:	(bad)  
   140022ffb:	jmp    FWORD PTR [rip+0x2cffffc8]        # 0x16d022fc9
   140023001:	sar    edi,0xff
   140023004:	sub    al,0xbf
   140023006:	(bad)  
   140023007:	jmp    FWORD PTR [rip+0x33ffffbd]        # 0x174022fca
   14002300d:	sar    bh,0xff
   140023010:	cmp    al,ah
   140023012:	(bad)  
   140023013:	call   QWORD PTR [rbx-0x38]
   140023016:	cli    
   140023017:	jmp    QWORD PTR [rdx-0x14002928]
   14002301d:	call   0x130f62fcb
   140023022:	stos   DWORD PTR es:[rdi],eax
   140023023:	(bad)  
   140023024:	stc    
   140023025:	imul   BYTE PTR [rsi-0x4f040101]
   14002302b:	(bad)  
   14002302c:	(bad)  
   14002302d:	cld    
   14002302e:	mov    al,0xff
   140023030:	(bad)  
   140023031:	cld    
   140023032:	mov    al,0xff
   140023034:	(bad)  
   140023035:	sti    
   140023036:	scas   al,BYTE PTR es:[rdi]
   140023037:	(bad)  
   140023038:	(bad)  
   140023039:	sti    
   14002303a:	scas   al,BYTE PTR es:[rdi]
   14002303b:	(bad)  
   14002303c:	(bad)  
   14002303d:	sti    
   14002303e:	lods   eax,DWORD PTR ds:[rsi]
   14002303f:	(bad)  
   140023040:	(bad)  
   140023041:	sti    
   140023042:	lods   al,BYTE PTR ds:[rsi]
   140023043:	(bad)  
   140023044:	(bad)  
   140023045:	sti    
   140023046:	stos   DWORD PTR es:[rdi],eax
   140023047:	(bad)  
   140023048:	(bad)  
   140023049:	cli    
   14002304a:	test   eax,0xa6f9feff
   14002304f:	(bad)  
   140023050:	(bad)  
   140023051:	stc    
   140023052:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140023053:	(bad)  
   140023054:	(bad)  
   140023055:	clc    
   140023056:	movabs ds:0x9ef8feffa1f8ffff,eax
   14002305f:	(bad)  
   140023060:	(bad)  
   140023061:	clc    
   140023062:	popf   
   140023063:	(bad)  
   140023064:	(bad)  
   140023065:	clc    
   140023066:	(bad)  
   140023067:	(bad)  
   140023068:	(bad)  
   140023069:	neg    DWORD PTR [rdx-0x69080001]
   14002306f:	(bad)  
   140023070:	(bad)  
   140023071:	not    DWORD PTR [rsi-0x6d0a0001]
   140023077:	(bad)  
   140023078:	push   rbp
   14002307a:	nop
   14002307b:	(bad)  
   14002307c:	push   rbp
   14002307e:	mov    edi,?
   140023080:	push   rsp
   140023082:	mov    bh,bh
   140023084:	push   rsp
   140023086:	mov    edi,edi
   140023088:	push   rcx
   14002308a:	test   edi,edi
   14002308c:	push   rcx
   14002308e:	cmp    edi,0xffffffff
   140023091:	lock cmp bh,0xff
   140023095:	out    dx,al
   140023096:	jge    0x140023097
   140023098:	(bad)  
   140023099:	out    dx,al
   14002309a:	js     0x14002309b
   14002309c:	(bad)  
   14002309d:	(bad)  
   14002309e:	je     0x14002309f
   1400230a0:	(bad)  
   1400230a1:	call   0x124003017
   1400230a6:	jo     0x1400230a7
   1400230a8:	cld    
   1400230a9:	fild   QWORD PTR [rbp-0x1]
   1400230ac:	cli    
   1400230ad:	(bad)  [rax-0x1]
   1400230b0:	clc    
   1400230b1:	xlat   BYTE PTR ds:[rbx]
   1400230b2:	gs push rdi
   1400230b5:	(bad)  
   1400230b6:	(bad)  
   1400230b7:	push   rsi
   1400230b9:	rcr    DWORD PTR [rsi-0x1],1
   1400230bc:	repz int3 
   1400230be:	pop    rsp
   1400230bf:	push   rcx
   1400230c1:	enter  0xff58,0xed
   1400230c5:	rcl    BYTE PTR [rdi+rdi*8-0x14],0xbd
   1400230ca:	push   rax
   1400230cb:	(bad)  
   1400230cc:	call   0x124017f89
   1400230d1:	scas   al,BYTE PTR es:[rdi]
   1400230d2:	rex.WX dec rbp
   1400230d5:	xchg   ebx,eax
   1400230d6:	xor    al,0xf0
   1400230d8:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400230d9:	ins    DWORD PTR es:[rdi],dx
   1400230da:	sbb    al,0xb5
   1400230dc:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400230dd:	ins    BYTE PTR es:[rdi],dx
   1400230de:	sbb    al,0x11
	...
   1400230e8:	and    DWORD PTR [rax-0x4cd3ea0a],esp
   1400230ee:	(bad)  
   1400230ef:	cmp    eax,0x46f7ae3c
   1400230f4:	adc    eax,0x25792a
   1400230f9:	add    BYTE PTR [rbp+0x12],dl
   1400230fc:	add    BYTE PTR [rax],al
   1400230fe:	push   rbp
   1400230ff:	add    al,0x0
	...
   140023191:	add    BYTE PTR [rax],al
   140023193:	add    BYTE PTR [rsi-0x1d78de87],dh
   140023199:	mov    dh,0x56
   14002319b:	out    0xf9,eax
   14002319d:	call   0x12efd311e
   1400231a2:	cmp    bh,0xfd
   1400231a5:	repnz (bad) 
   1400231a7:	(bad)  
   1400231a8:	std    
   1400231a9:	cmc    
   1400231aa:	xchg   bh,bh
   1400231ac:	(bad)  
   1400231ad:	test   DWORD PTR [rbx-0x6e060101],0x9bfbfeff
   1400231b7:	(bad)  
   1400231b8:	(bad)  
   1400231b9:	sti    
   1400231ba:	movabs al,ds:0xa9fcffffa3fcffff
   1400231c3:	(bad)  
   1400231c4:	(bad)  
   1400231c5:	cld    
   1400231c6:	scas   eax,DWORD PTR es:[rdi]
   1400231c7:	(bad)  
   1400231c8:	(bad)  
   1400231c9:	cld    
   1400231ca:	mov    bl,0xff
   1400231cc:	iret   
   1400231cd:	cld    
   1400231ce:	(bad)  
   1400231d0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400231d1:	(bad)  
   1400231d2:	(bad)  
   1400231d3:	jmp    FWORD PTR [rdx-0x57000001]
   1400231d9:	(bad)  
   1400231da:	(bad)  
   1400231db:	jmp    QWORD PTR [rbp-0x60000001]
   1400231e1:	(bad)  
   1400231e2:	(bad)  
   1400231e3:	inc    DWORD PTR [rcx+0x61fffff9]
   1400231e9:	out    dx,eax
   1400231ea:	(bad)  
   1400231eb:	dec    DWORD PTR [rbx-0x19]
   1400231ee:	(bad)  
   1400231ef:	inc    DWORD PTR [rax-0x21]
   1400231f2:	(bad)  
   1400231f3:	(bad)  
   1400231f4:	cmp    edx,ebx
   1400231f6:	(bad)  
   1400231f7:	push   QWORD PTR [rsi]
   1400231f9:	(bad)  
   1400231fa:	(bad)  
   1400231fb:	push   QWORD PTR [rcx]
   1400231fd:	iret   
   1400231fe:	(bad)  
   1400231ff:	jmp    FWORD PTR [rdi]
   140023201:	retf   0xffff
   140023204:	sub    eax,0x2cffffc3
   140023209:	sar    bh,0xff
   14002320c:	sub    eax,0x31ffffbf
   140023211:	mov    edi,0xc339ffff
   140023216:	(bad)  
   140023217:	dec    DWORD PTR [rax+rcx*8-0x5]
   14002321b:	dec    DWORD PTR [rdi-0x19001e2c]
   140023221:	out    0xa8,al
   140023223:	push   rcx
   140023225:	out    dx,al
   140023226:	test   al,0xff
   140023228:	clc    
   140023229:	cmc    
   14002322a:	lods   eax,DWORD PTR ds:[rsi]
   14002322b:	(bad)  
   14002322c:	std    
   14002322d:	stc    
   14002322e:	lods   eax,DWORD PTR ds:[rsi]
   14002322f:	(bad)  
   140023230:	(bad)  
   140023231:	cld    
   140023232:	scas   eax,DWORD PTR es:[rdi]
   140023233:	(bad)  
   140023234:	(bad)  
   140023235:	sti    
   140023236:	scas   al,BYTE PTR es:[rdi]
   140023237:	(bad)  
   140023238:	(bad)  
   140023239:	sti    
   14002323a:	lods   eax,DWORD PTR ds:[rsi]
   14002323b:	(bad)  
   14002323c:	(bad)  
   14002323d:	sti    
   14002323e:	scas   al,BYTE PTR es:[rdi]
   14002323f:	(bad)  
   140023240:	(bad)  
   140023241:	cli    
   140023242:	lods   al,BYTE PTR ds:[rsi]
   140023243:	(bad)  
   140023244:	(bad)  
   140023245:	cli    
   140023246:	stos   BYTE PTR es:[rdi],al
   140023247:	(bad)  
   140023248:	(bad)  
   140023249:	cli    
   14002324a:	test   eax,0xa6fafeff
   14002324f:	(bad)  
   140023250:	(bad)  
   140023251:	cli    
   140023252:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140023253:	(bad)  
   140023254:	(bad)  
   140023255:	cli    
   140023256:	movabs ds:0xa0f9feffa1f9feff,eax
   14002325f:	(bad)  
   140023260:	(bad)  
   140023261:	clc    
   140023262:	fwait
   140023263:	(bad)  
   140023264:	(bad)  
   140023265:	clc    
   140023266:	cwde   
   140023267:	(bad)  
   140023268:	push   rdi
   14002326a:	xchg   edi,eax
   14002326b:	(bad)  
   14002326c:	(bad)  
   14002326d:	clc    
   14002326e:	xchg   ebp,eax
   14002326f:	(bad)  
   140023270:	push   rsi
   140023272:	xchg   ebx,eax
   140023273:	(bad)  
   140023274:	push   rsi
   140023276:	xchg   ecx,eax
   140023277:	(bad)  
   140023278:	push   rsp
   14002327a:	mov    ?,edi
   14002327c:	push   rbp
   14002327e:	mov    edi,edi
   140023280:	push   rbx
   140023282:	mov    edi,edi
   140023284:	push   rcx
   140023286:	xchg   bh,bh
   140023288:	push   rdx
   14002328a:	cmp    edi,0xffffffff
   14002328d:	lock cmp bh,0xff
   140023291:	out    dx,al
   140023292:	jge    0x140023293
   140023294:	(bad)  
   140023295:	out    dx,al
   140023296:	js     0x140023297
   140023298:	(bad)  
   140023299:	(bad)  
   14002329a:	je     0x14002329b
   14002329c:	std    
   14002329d:	call   0x123ff3214
   1400232a2:	outs   dx,DWORD PTR ds:[rsi]
   1400232a3:	(bad)  
   1400232a4:	cld    
   1400232a5:	loopne 0x140023315
   1400232a7:	(bad)  
   1400232a8:	cli    
   1400232a9:	(bad)  [rcx-0x1]
   1400232ac:	clc    
   1400232ad:	fisub  DWORD PTR [rsi-0x1]
   1400232b0:	not    esi
   1400232b2:	(bad)  
   1400232b3:	push   rbp
   1400232b5:	rcr    BYTE PTR [rdi-0x1],1
   1400232b8:	repnz int 0x5e
   1400232bb:	push   rdx
   1400232bd:	enter  0xff5a,0xf0
   1400232c1:	ret    
   1400232c2:	push   rbp
   1400232c3:	(bad)  
   1400232c4:	in     al,dx
   1400232c5:	mov    ebp,0xbae9ff50
   1400232ca:	rex.WRXB jmp r12
   1400232cd:	mov    ah,0x4b
   1400232cf:	call   rsi
   1400232d1:	popf   
   1400232d2:	cmp    eax,0x1c6fa8f6
   1400232d7:	retf   0x6da6
   1400232da:	sbb    al,0x27
	...
   1400232e8:	and    al,0x9e
   1400232ea:	clc    
   1400232eb:	add    al,0x29
   1400232ed:	mov    al,0xff
   1400232ef:	rex.X xor ebp,DWORD PTR [rdi+0x6b324dfb]
   1400232f6:	mov    ah,0x33
   1400232f8:	add    al,BYTE PTR [rax+rbx*2]
   1400232fb:	sbb    DWORD PTR [rax],eax
   1400232fd:	add    BYTE PTR [rbp+0x6],dl
	...
   140023394:	mov    bh,0x79
   140023396:	and    DWORD PTR [rdi],eax
   140023398:	mov    bh,0x7a
   14002339a:	and    ebx,DWORD PTR [rbp-0x13a2431a]
   1400233a0:	stc    
   1400233a1:	jmp    0x140023421
   1400233a3:	(bad)  
   1400233a4:	sti    
   1400233a5:	out    dx,eax
   1400233a6:	(bad)  
   1400233a7:	(bad)  
   1400233a8:	std    
   1400233a9:	repnz test bh,bh
   1400233ac:	std    
   1400233ad:	cmc    
   1400233ae:	mov    bh,bh
   1400233b0:	(bad)  
   1400233b1:	clc    
   1400233b2:	(bad)  
   1400233b3:	(bad)  
   1400233b4:	(bad)  
   1400233b5:	cli    
   1400233b6:	xchg   esp,eax
   1400233b7:	(bad)  
   1400233b8:	(bad)  
   1400233b9:	cli    
   1400233ba:	fwait
   1400233bb:	(bad)  
   1400233bc:	(bad)  
   1400233bd:	sti    
   1400233be:	movabs al,ds:0xa8fdffffa4fcffff
   1400233c7:	(bad)  
   1400233c8:	(bad)  
   1400233c9:	cld    
   1400233ca:	scas   eax,DWORD PTR es:[rdi]
   1400233cb:	(bad)  
   1400233cc:	(bad)  
   1400233cd:	cld    
   1400233ce:	mov    bl,0xff
   1400233d0:	fdiv   st(4),st
   1400233d2:	(bad)  
   1400233d3:	jmp    QWORD PTR [rax-0x53000001]
   1400233d9:	(bad)  
   1400233da:	(bad)  
   1400233db:	jmp    FWORD PTR [rax-0x5a000001]
   1400233e1:	(bad)  
   1400233e2:	(bad)  
   1400233e3:	jmp    QWORD PTR [rax-0x77000001]
   1400233e9:	sti    
   1400233ea:	(bad)  
   1400233eb:	jmp    QWORD PTR [rbp-0xf]
   1400233ee:	(bad)  
   1400233ef:	call   QWORD PTR [rax-0x18]
   1400233f2:	(bad)  
   1400233f3:	inc    DWORD PTR [rcx-0x1f]
   1400233f6:	(bad)  
   1400233f7:	(bad)  
   1400233f8:	cmp    ebx,ebx
   1400233fa:	(bad)  
   1400233fb:	push   QWORD PTR [rdi]
   1400233fd:	(bad)  
   1400233fe:	(bad)  
   1400233ff:	push   QWORD PTR [rbx]
   140023401:	sar    edi,1
   140023403:	push   QWORD PTR [rax]
   140023405:	retf   0xffff
   140023408:	sub    al,0xc4
   14002340a:	(bad)  
   14002340b:	jmp    FWORD PTR [rcx+rax*8]
   14002340e:	(bad)  
   14002340f:	jmp    FWORD PTR [rip+0x30ffffbf]        # 0x1710233d4
   140023415:	mov    edi,0xc337ffff
   14002341a:	(bad)  
   14002341b:	inc    DWORD PTR [rbp-0x38]
   14002341e:	std    
   14002341f:	(bad)  
   140023420:	jp     0x1400233f4
   140023422:	out    dx,al
   140023423:	call   rsp
   140023425:	loop   0x1400233da
   140023427:	(bad)  
   140023428:	out    dx,al
   140023429:	jmp    0x1400233d2
   14002342b:	push   rbp
   14002342d:	repnz stos BYTE PTR es:[rdi],al
   14002342f:	(bad)  
   140023430:	sti    
   140023431:	clc    
   140023432:	lods   eax,DWORD PTR ds:[rsi]
   140023433:	(bad)  
   140023434:	(bad)  
   140023435:	sti    
   140023436:	scas   al,BYTE PTR es:[rdi]
   140023437:	(bad)  
   140023438:	(bad)  
   140023439:	sti    
   14002343a:	scas   al,BYTE PTR es:[rdi]
   14002343b:	(bad)  
   14002343c:	(bad)  
   14002343d:	cld    
   14002343e:	lods   al,BYTE PTR ds:[rsi]
   14002343f:	(bad)  
   140023440:	(bad)  
   140023441:	cld    
   140023442:	stos   DWORD PTR es:[rdi],eax
   140023443:	(bad)  
   140023444:	(bad)  
   140023445:	cld    
   140023446:	test   eax,0xa8fbfeff
   14002344b:	(bad)  
   14002344c:	(bad)  
   14002344d:	sti    
   14002344e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002344f:	(bad)  
   140023450:	(bad)  
   140023451:	cli    
   140023452:	movabs ds:0x9ef9ffffa1f9ffff,eax
   14002345b:	(bad)  
   14002345c:	(bad)  
   14002345d:	stc    
   14002345e:	popf   
   14002345f:	(bad)  
   140023460:	(bad)  
   140023461:	stc    
   140023462:	(bad)  
   140023463:	(bad)  
   140023464:	push   rdi
   140023466:	cdq    
   140023467:	(bad)  
   140023468:	push   rsi
   14002346a:	xchg   ebp,eax
   14002346b:	(bad)  
   14002346c:	push   rsi
   14002346e:	xchg   ebx,eax
   14002346f:	(bad)  
   140023470:	push   rsi
   140023472:	xchg   edx,eax
   140023473:	(bad)  
   140023474:	push   rbp
   140023476:	(bad)  
   140023477:	(bad)  
   140023478:	push   rsi
   14002347a:	mov    edi,edi
   14002347c:	push   rsp
   14002347e:	mov    edi,edi
   140023480:	push   rcx
   140023482:	xchg   edi,edi
   140023484:	push   rcx
   140023486:	cmp    edi,0xffffffff
   140023489:	lock cmp edi,0xff7eeeff
   140023490:	(bad)  
   140023491:	in     eax,dx
   140023492:	js     0x140023493
   140023494:	(bad)  
   140023495:	in     al,dx
   140023496:	jne    0x140023497
   140023498:	cld    
   140023499:	out    0x74,eax
   14002349b:	(bad)  
   14002349c:	cld    
   14002349d:	in     eax,0x70
   14002349f:	(bad)  
   1400234a0:	sti    
   1400234a1:	loope  0x140023511
   1400234a3:	(bad)  
   1400234a4:	stc    
   1400234a5:	(bad)  [rdx-0x1]
   1400234a8:	clc    
   1400234a9:	fldenv [rsi-0x1]
   1400234ac:	not    ebp
   1400234ae:	movsxd edi,edi
   1400234b0:	cmc    
   1400234b1:	shl    BYTE PTR [rax-0x1],cl
   1400234b4:	repnz (bad) 
   1400234b6:	pop    rsi
   1400234b7:	push   rdx
   1400234b9:	enter  0xff5a,0xf0
   1400234bd:	(bad)  
   1400234be:	push   rdi
   1400234bf:	(bad)  
   1400234c0:	in     al,dx
   1400234c1:	mov    esi,0xbbe9ff52
   1400234c6:	push   rcx
   1400234c7:	jmp    rbp
   1400234c9:	mov    ch,0x4e
   1400234cb:	(bad)  
   1400234cc:	fbld   TBYTE PTR [rdi-0x7f4602b9]
   1400234d2:	sub    al,0xe2
   1400234d4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400234d5:	ins    DWORD PTR es:[rdi],dx
   1400234d6:	sbb    eax,0x49
	...
   1400234eb:	add    BYTE PTR [rdx],ah
   1400234ed:	test   eax,0xb0283bfc
   1400234f2:	(bad)  
   1400234f3:	push   rbp
   1400234f4:	rex.X xchg esp,eax
   1400234f6:	fild   DWORD PTR [rbx+0x2]
   1400234f9:	(bad)  
   1400234fa:	pop    rcx
   1400234fb:	(bad)  
   1400234fc:	add    BYTE PTR [rax],al
   1400234fe:	push   rbp
   1400234ff:	or     al,BYTE PTR [rax]
	...
   140023595:	add    BYTE PTR [rax],al
   140023597:	add    BYTE PTR [rdi-0x45ecde87],dh
   14002359d:	jge    0x1400235c5
   14002359f:	mov    ah,0xeb
   1400235a1:	(bad)  
   1400235a2:	gs lock stc 
   1400235a5:	in     eax,dx
   1400235a6:	(bad)  
   1400235a7:	(bad)  
   1400235a8:	sti    
   1400235a9:	lock test bh,bh
   1400235ac:	std    
   1400235ad:	hlt    
   1400235ae:	xchg   edi,edi
   1400235b0:	(bad)  
   1400235b1:	cmc    
   1400235b2:	mov    bh,bh
   1400235b4:	(bad)  
   1400235b5:	clc    
   1400235b6:	xchg   ecx,eax
   1400235b7:	(bad)  
   1400235b8:	(bad)  
   1400235b9:	stc    
   1400235ba:	xchg   esp,eax
   1400235bb:	(bad)  
   1400235bc:	(bad)  
   1400235bd:	cli    
   1400235be:	(bad)  
   1400235bf:	(bad)  
   1400235c0:	(bad)  
   1400235c1:	sti    
   1400235c2:	movabs al,ds:0xa8fdffffa5fcfeff
   1400235cb:	(bad)  
   1400235cc:	(bad)  
   1400235cd:	std    
   1400235ce:	lods   al,BYTE PTR ds:[rsi]
   1400235cf:	(bad)  
   1400235d0:	(bad)  
   1400235d1:	cld    
   1400235d2:	mov    bl,0xff
   1400235d4:	out    0xfb,al
   1400235d6:	(bad)  
   1400235d7:	call   FWORD PTR [rax-0x53000001]
   1400235dd:	(bad)  
   1400235de:	(bad)  
   1400235df:	jmp    FWORD PTR [rax-0x5a000001]
   1400235e5:	(bad)  
   1400235e6:	(bad)  
   1400235e7:	jmp    QWORD PTR [rdx-0x70000001]
   1400235ed:	(bad)  
   1400235ee:	(bad)  
   1400235ef:	jmp    FWORD PTR [rdx-0xe]
   1400235f2:	(bad)  
   1400235f3:	call   QWORD PTR [rbx-0x15]
   1400235f6:	(bad)  
   1400235f7:	inc    DWORD PTR [rbx-0x1c]
   1400235fa:	(bad)  
   1400235fb:	(bad)  
   1400235fc:	cmp    bl,ah
   1400235fe:	(bad)  
   1400235ff:	push   QWORD PTR [rdi]
   140023601:	xlat   BYTE PTR ds:[rbx]
   140023602:	(bad)  
   140023603:	push   QWORD PTR [rbx]
   140023605:	sar    bh,cl
   140023607:	jmp    FWORD PTR [rdi]
   140023609:	retf   
   14002360a:	(bad)  
   14002360b:	jmp    FWORD PTR [rip+0x2cffffc7]        # 0x16d0235d8
   140023611:	sar    edi,0xff
   140023614:	sub    eax,0x30ffffc0
   140023619:	mov    edi,0xc134ffff
   14002361e:	(bad)  
   14002361f:	(bad)  
   140023620:	(bad)  
   140023621:	(bad)  
   140023622:	(bad)  
   140023623:	jmp    QWORD PTR [rbx-0x34]
   140023626:	idiv   edi
   140023628:	mov    dh,0xdd
   14002362a:	(bad)  
   14002362d:	jmp    0x130f635d5
   140023632:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140023633:	(bad)  
   140023634:	stc    
   140023635:	imul   BYTE PTR [rdx-0x55050201]
   14002363b:	(bad)  
   14002363c:	(bad)  
   14002363d:	cld    
   14002363e:	stos   BYTE PTR es:[rdi],al
   14002363f:	(bad)  
   140023640:	(bad)  
   140023641:	sti    
   140023642:	test   eax,0xa7fbffff
   140023647:	(bad)  
   140023648:	(bad)  
   140023649:	sti    
   14002364a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002364b:	(bad)  
   14002364c:	(bad)  
   14002364d:	sti    
   14002364e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002364f:	(bad)  
   140023650:	(bad)  
   140023651:	sti    
   140023652:	movabs ds:0x9ef9ffff9ffaffff,eax
   14002365b:	(bad)  
   14002365c:	(bad)  
   14002365d:	clc    
   14002365e:	pushf  
   14002365f:	(bad)  
   140023660:	(bad)  
   140023661:	stc    
   140023662:	xchg   edi,eax
   140023663:	(bad)  
   140023664:	push   rdi
   140023666:	xchg   esi,eax
   140023667:	(bad)  
   140023668:	push   rsi
   14002366a:	xchg   ebx,eax
   14002366b:	(bad)  
   14002366c:	push   rsi
   14002366e:	xchg   edx,eax
   14002366f:	(bad)  
   140023670:	push   rbp
   140023672:	nop
   140023673:	(bad)  
   140023674:	push   rbp
   140023676:	mov    edi,?
   140023678:	push   rbx
   14002367a:	mov    edi,edi
   14002367c:	push   rdx
   14002367e:	xchg   bh,bh
   140023680:	push   rdx
   140023682:	cmp    edi,0xffffffff
   140023685:	icebp  
   140023686:	cmp    bh,0xff
   140023689:	out    dx,al
   14002368a:	jle    0x14002368b
   14002368c:	(bad)  
   14002368d:	in     eax,dx
   14002368e:	jns    0x14002368f
   140023690:	std    
   140023691:	in     al,dx
   140023692:	ja     0x140023693
   140023694:	std    
   140023695:	out    0x74,eax
   140023697:	(bad)  
   140023698:	std    
   140023699:	out    0x71,al
   14002369b:	(bad)  
   14002369c:	cld    
   14002369d:	jrcxz  0x14002370d
   14002369f:	(bad)  
   1400236a0:	sti    
   1400236a1:	fisubr WORD PTR [rcx-0x1]
   1400236a4:	stc    
   1400236a5:	(bad)  [rsi-0x1]
   1400236a8:	clc    
   1400236a9:	(bad)  
   1400236aa:	movsxd edi,edi
   1400236ac:	not    edx
   1400236ae:	(bad)  
   1400236af:	push   rbx
   1400236b1:	(bad)  
   1400236b2:	pop    rdi
   1400236b3:	push   rdx
   1400236b5:	retf   0xff5c
   1400236b8:	icebp  
   1400236b9:	(bad)
   1400236bc:	in     eax,dx
   1400236bd:	rcl    DWORD PTR [rbp-0x1],0xe9
   1400236c1:	mov    ebp,0xb6e6ff52
   1400236c6:	push   rax
   1400236c7:	jmp    rax
   1400236c9:	stos   DWORD PTR es:[rdi],eax
   1400236ca:	rex.WXB (bad) 
   1400236cc:	mov    edi,0xa7e63087
   1400236d1:	ins    DWORD PTR es:[rdi],dx
   1400236d2:	sbb    eax,0x6e
	...
   1400236eb:	add    BYTE PTR [rax],ah
   1400236ed:	movabs ds:0xa8405dffaf2729fa,al
   1400236f6:	out    dx,eax
   1400236f7:	pop    rax
   1400236f8:	(bad)  
   1400236f9:	or     ebx,DWORD PTR [rsp+0x0]
   1400236fd:	add    BYTE PTR [rbp+0xe],dl
   140023700:	add    BYTE PTR [rax],al
   140023702:	push   rbp
   140023703:	add    al,BYTE PTR [rax]
	...
   140023799:	add    BYTE PTR [rax],al
   14002379b:	add    BYTE PTR [rdi-0x42dcde87],dh
   1400237a1:	sub    DWORD PTR [rdx],0x6ccbecbf
   1400237a7:	repnz stc 
   1400237a9:	in     eax,dx
   1400237aa:	cmp    edi,0xfffffffb
   1400237ad:	icebp  
   1400237ae:	test   bh,bh
   1400237b0:	std    
   1400237b1:	repz mov bh,bh
   1400237b4:	std    
   1400237b5:	cmc    
   1400237b6:	mov    edi,edi
   1400237b8:	(bad)  
   1400237b9:	not    BYTE PTR [rax-0x6a070101]
   1400237bf:	(bad)  
   1400237c0:	(bad)  
   1400237c1:	cli    
   1400237c2:	(bad)  
   1400237c3:	(bad)  
   1400237c4:	(bad)  
   1400237c5:	sti    
   1400237c6:	movabs al,ds:0xa7fcffffa3fbfeff
   1400237cf:	(bad)  
   1400237d0:	(bad)  
   1400237d1:	std    
   1400237d2:	stos   DWORD PTR es:[rdi],eax
   1400237d3:	(bad)  
   1400237d4:	(bad)  
   1400237d5:	cld    
   1400237d6:	mov    al,0xff
   1400237d8:	icebp  
   1400237d9:	cld    
   1400237da:	ret    
   1400237db:	call   QWORD PTR [rbx-0x53000102]
   1400237e1:	(bad)  
   1400237e2:	(bad)  
   1400237e3:	jmp    FWORD PTR [rdx-0x59000001]
   1400237e9:	(bad)  
   1400237ea:	(bad)  
   1400237eb:	jmp    QWORD PTR [rdx-0x69000001]
   1400237f1:	(bad)  
   1400237f2:	(bad)  
   1400237f3:	push   QWORD PTR [rdx-0xd]
   1400237f6:	(bad)  
   1400237f7:	call   FWORD PTR [rax-0x15]
   1400237fa:	(bad)  
   1400237fb:	inc    DWORD PTR [rdi-0x1b]
   1400237fe:	(bad)  
   1400237ff:	(bad)  
   140023800:	ds fdiv st(7),st
   140023803:	push   QWORD PTR [rdi]
   140023805:	xlat   BYTE PTR ds:[rbx]
   140023806:	(bad)  
   140023807:	push   QWORD PTR [rdx+rdx*8]
   14002380a:	(bad)  
   14002380b:	push   QWORD PTR [rax]
   14002380d:	(bad)  
   14002380e:	(bad)  
   14002380f:	jmp    FWORD PTR [rdi]
   140023811:	enter  0xffff,0x2d
   140023815:	ret    
   140023816:	(bad)  
   140023817:	jmp    FWORD PTR [rip+0x2fffffc0]        # 0x1700237dd
   14002381d:	mov    edi,0xc033ffff
   140023822:	(bad)  
   140023823:	(bad)  
   140023824:	cmp    al,ah
   140023826:	(bad)  
   140023827:	call   QWORD PTR [rcx-0x37]
   14002382a:	sti    
   14002382b:	call   QWORD PTR [rsi-0x1800252b]
   140023831:	out    0xa3,al
   140023833:	push   rax
   140023835:	in     eax,dx
   140023836:	movabs ds:0xa7f9fcffa7f4f7ff,al
   14002383f:	(bad)  
   140023840:	(bad)  
   140023841:	cli    
   140023842:	test   al,0xff
   140023844:	(bad)  
   140023845:	sti    
   140023846:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140023847:	(bad)  
   140023848:	(bad)  
   140023849:	sti    
   14002384a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002384b:	(bad)  
   14002384c:	(bad)  
   14002384d:	cli    
   14002384e:	movabs ds:0x9dfaffffa0faffff,al
   140023857:	(bad)  
   140023858:	(bad)  
   140023859:	clc    
   14002385a:	pushf  
   14002385b:	(bad)  
   14002385c:	(bad)  
   14002385d:	clc    
   14002385e:	cdq    
   14002385f:	(bad)  
   140023860:	(bad)  
   140023861:	clc    
   140023862:	xchg   edi,eax
   140023863:	(bad)  
   140023864:	push   rdi
   140023866:	xchg   ebp,eax
   140023867:	(bad)  
   140023868:	push   rsi
   14002386a:	xchg   edx,eax
   14002386b:	(bad)  
   14002386c:	push   rbp
   14002386e:	xchg   ecx,eax
   14002386f:	(bad)  
   140023870:	push   rbp
   140023872:	mov    edi,?
   140023874:	push   rbx
   140023876:	mov    bh,bh
   140023878:	push   rdx
   14002387a:	xchg   bh,bh
   14002387c:	push   rdx
   14002387e:	test   bh,bh
   140023880:	push   rdx
   140023882:	cmp    edi,0xff7eedff
   140023888:	(bad)  
   140023889:	out    dx,al
   14002388a:	jns    0x14002388b
   14002388c:	std    
   14002388d:	(bad)  
   14002388e:	ja     0x14002388f
   140023890:	(bad)  
   140023891:	jmp    0x12600380a
   140023896:	jb     0x140023897
   140023898:	cld    
   140023899:	loope  0x140023909
   14002389b:	(bad)  
   14002389c:	sti    
   14002389d:	(bad)  [rdx-0x1]
   1400238a0:	cli    
   1400238a1:	fsub   DWORD PTR [rdi-0x1]
   1400238a4:	clc    
   1400238a5:	(bad)  
   1400238a6:	push   si
   1400238a9:	shl    BYTE PTR [rdx-0x1],cl
   1400238ac:	cmc    
   1400238ad:	iret   
   1400238ae:	pop    rsi
   1400238af:	push   rdx
   1400238b1:	retf   
   1400238b2:	pop    rsp
   1400238b3:	push   rax
   1400238b5:	enter  0xff5a,0xee
   1400238b9:	ret    
   1400238ba:	push   rsi
   1400238bb:	(bad)  
   1400238bc:	(bad)  
   1400238bd:	mov    ebp,0xb7e6ff53
   1400238c2:	push   rcx
   1400238c3:	jmp    rcx
   1400238c5:	mov    al,0x4e
   1400238c7:	inc    ebx
   1400238c9:	mov    DWORD PTR [rcx],esi
   1400238cb:	out    0xa7,al
   1400238cd:	outs   dx,BYTE PTR ds:[rsi]
   1400238ce:	sbb    eax,0x7a
	...
   1400238eb:	add    BYTE PTR [rdx],ah
   1400238ed:	cwde   
   1400238ee:	hlt    
   1400238ef:	sbb    DWORD PTR [rdi],esp
   1400238f1:	mov    al,0xff
   1400238f3:	cmp    BYTE PTR gs:[rdi+rsi*8-0x79c6e397],ch
   1400238fb:	xor    BYTE PTR [rax],al
   1400238fd:	add    BYTE PTR [rbp+0x12],dl
   140023900:	add    BYTE PTR [rax],al
   140023902:	push   rbp
   140023903:	add    al,0x0
	...
   14002399d:	add    BYTE PTR [rax],al
   14002399f:	add    BYTE PTR [rdi-0x42d5de87],dh
   1400239a5:	(bad)  
   1400239a6:	sub    al,0xbf
   1400239a8:	in     eax,dx
   1400239a9:	int3   
   1400239aa:	ins    DWORD PTR es:[rdi],dx
   1400239ab:	icebp  
   1400239ac:	stc    
   1400239ad:	in     al,dx
   1400239ae:	test   bh,bh
   1400239b0:	sti    
   1400239b1:	out    dx,eax
   1400239b2:	test   edi,edi
   1400239b4:	std    
   1400239b5:	repnz xchg edi,edi
   1400239b8:	std    
   1400239b9:	hlt    
   1400239ba:	mov    edi,?
   1400239bc:	(bad)  
   1400239bd:	not    BYTE PTR [rax-0x6b080101]
   1400239c3:	(bad)  
   1400239c4:	(bad)  
   1400239c5:	stc    
   1400239c6:	(bad)  
   1400239c7:	(bad)  
   1400239c8:	(bad)  
   1400239c9:	cli    
   1400239ca:	popf   
   1400239cb:	(bad)  
   1400239cc:	(bad)  
   1400239cd:	sti    
   1400239ce:	movabs ds:0xacfcffffa9fcfeff,eax
   1400239d7:	(bad)  
   1400239d8:	(bad)  
   1400239d9:	cld    
   1400239da:	scas   eax,DWORD PTR es:[rdi]
   1400239db:	push   rsp
   1400239dd:	std    
   1400239de:	mov    esp,0xfcfc97ff
   1400239e3:	jmp    FWORD PTR [rdi+rdi*8-0x550001]
   1400239ea:	(bad)  
   1400239eb:	jmp    QWORD PTR [rsi-0x5c000001]
   1400239f1:	(bad)  
   1400239f2:	(bad)  
   1400239f3:	call   FWORD PTR [rbp+0x7cffffff]
   1400239f9:	clc    
   1400239fa:	(bad)  
   1400239fb:	jmp    QWORD PTR [rax-0x11]
   1400239fe:	(bad)  
   1400239ff:	dec    DWORD PTR [rbx-0x1b]
   140023a02:	(bad)  
   140023a03:	(bad)  
   140023a04:	ds (bad) 
   140023a07:	(bad)  
   140023a08:	cmp    edx,ebx
   140023a0a:	(bad)  
   140023a0b:	push   QWORD PTR [rsi]
   140023a0d:	(bad)  
   140023a0e:	(bad)  
   140023a0f:	push   QWORD PTR [rcx]
   140023a11:	iret   
   140023a12:	(bad)  
   140023a13:	jmp    FWORD PTR [rdi]
   140023a15:	retf   0xffff
   140023a18:	sub    eax,0x2dffffc4
   140023a1d:	sar    edi,0xff
   140023a20:	(bad)  
   140023a21:	sar    bh,0xff
   140023a24:	xor    eax,eax
   140023a26:	(bad)  
   140023a27:	(bad)  
   140023a28:	cmp    esp,eax
   140023a2a:	(bad)  
   140023a2b:	dec    DWORD PTR [rax-0x37]
   140023a2e:	cld    
   140023a2f:	(bad)  
   140023a30:	jns    0x140023a02
   140023a32:	out    dx,al
   140023a33:	call   rbx
   140023a35:	loop   0x1400239e5
   140023a37:	(bad)  
   140023a38:	in     eax,dx
   140023a39:	(bad)  
   140023a3a:	sahf   
   140023a3b:	push   rbp
   140023a3d:	icebp  
   140023a3e:	movabs ds:0xa2fafeffa4f7fbff,al
   140023a47:	(bad)  
   140023a48:	(bad)  
   140023a49:	cli    
   140023a4a:	movabs eax,ds:0x9ffaffff9ffaffff
   140023a53:	(bad)  
   140023a54:	(bad)  
   140023a55:	stc    
   140023a56:	(bad)  
   140023a57:	(bad)  
   140023a58:	(bad)  
   140023a59:	stc    
   140023a5a:	cdq    
   140023a5b:	(bad)  
   140023a5c:	(bad)  
   140023a5d:	clc    
   140023a5e:	xchg   edi,eax
   140023a5f:	(bad)  
   140023a60:	push   rdi
   140023a62:	xchg   ebp,eax
   140023a63:	(bad)  
   140023a64:	push   rsi
   140023a66:	xchg   ebx,eax
   140023a67:	(bad)  
   140023a68:	push   rsi
   140023a6a:	mov    ?,edi
   140023a6c:	push   rbp
   140023a6e:	mov    edi,?
   140023a70:	push   rbx
   140023a72:	mov    bh,bh
   140023a74:	push   rbx
   140023a76:	xchg   bh,bh
   140023a78:	push   rcx
   140023a7a:	test   edi,edi
   140023a7c:	push   rcx
   140023a7e:	cmp    edi,0xff7ceeff
   140023a84:	(bad)  
   140023a85:	out    dx,al
   140023a86:	jp     0x140023a87
   140023a88:	std    
   140023a89:	jmp    0x12a013a05
   140023a8e:	je     0x140023a8f
   140023a90:	std    
   140023a91:	in     eax,0x71
   140023a93:	(bad)  
   140023a94:	cld    
   140023a95:	loopne 0x140023b06
   140023a97:	(bad)  
   140023a98:	sti    
   140023a99:	(bad)  [rbx-0x1]
   140023a9c:	cli    
   140023a9d:	fsub   DWORD PTR [rdi-0x1]
   140023aa0:	clc    
   140023aa1:	(bad)  
   140023aa2:	gs push rsi
   140023aa5:	shl    BYTE PTR [rdx-0x1],cl
   140023aa8:	hlt    
   140023aa9:	shl    BYTE PTR [rax-0x1],1
   140023aac:	icebp  
   140023aad:	retf   0xff5e
   140023ab0:	(bad)
   140023ab4:	out    dx,al
   140023ab5:	ret    
   140023ab6:	push   rdi
   140023ab7:	(bad)  
   140023ab8:	jmp    0x140023a77
   140023aba:	push   rsi
   140023abb:	jmp    rbp
   140023abd:	mov    ecx,0xb1e0ff54
   140023ac2:	rex.WRX inc rbx
   140023ac5:	mov    esi,DWORD PTR [rbx]
   140023ac7:	call   0x1bf1fa974
	...
   140023aec:	and    bl,BYTE PTR [rax-0x53dbf90a]
   140023af2:	push   QWORD PTR [rcx+0x31]
   140023af5:	stos   BYTE PTR es:[rdi],al
   140023af6:	cli    
   140023af7:	jae    0x140023b2c
   140023af9:	imul   esi,DWORD PTR [rbp+rdi*1+0x17570402],0x0
   140023b01:	add    BYTE PTR [rbp+0x6],dl
	...
   140023ba4:	mov    bh,0x79
   140023ba6:	and    DWORD PTR [rax],ebp
   140023ba8:	mov    ebp,0xecbf2c82
   140023bad:	retf   
   140023bae:	outs   dx,DWORD PTR ds:[rsi]
   140023baf:	icebp  
   140023bb0:	stc    
   140023bb1:	jmp    0x140023b3a
   140023bb3:	(bad)  
   140023bb4:	cli    
   140023bb5:	out    dx,eax
   140023bb6:	mov    edi,edi
   140023bb8:	cld    
   140023bb9:	repnz mov edi,edi
   140023bbc:	std    
   140023bbd:	hlt    
   140023bbe:	mov    bh,bh
   140023bc0:	(bad)  
   140023bc1:	not    BYTE PTR [rax-0x6b080101]
   140023bc7:	(bad)  
   140023bc8:	(bad)  
   140023bc9:	stc    
   140023bca:	cdq    
   140023bcb:	(bad)  
   140023bcc:	(bad)  
   140023bcd:	cli    
   140023bce:	popf   
   140023bcf:	(bad)  
   140023bd0:	(bad)  
   140023bd1:	sti    
   140023bd2:	movabs al,ds:0xabfcffffa8fbffff
   140023bdb:	(bad)  
   140023bdc:	(bad)  
   140023bdd:	cld    
   140023bde:	scas   al,BYTE PTR es:[rdi]
   140023bdf:	(bad)  
   140023be0:	cli    
   140023be1:	cld    
   140023be2:	mov    ch,0xff
   140023be4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140023be5:	sti    
   140023be6:	cmc    
   140023be7:	jmp    FWORD PTR [rax-0x53000001]
   140023bed:	(bad)  
   140023bee:	(bad)  
   140023bef:	jmp    FWORD PTR [rax-0x5a000001]
   140023bf5:	(bad)  
   140023bf6:	(bad)  
   140023bf7:	call   FWORD PTR [rdi-0x79000001]
   140023bfd:	sti    
   140023bfe:	(bad)  
   140023bff:	jmp    QWORD PTR [rbp-0xf]
   140023c02:	(bad)  
   140023c03:	call   QWORD PTR [rax-0x18]
   140023c06:	(bad)  
   140023c07:	inc    DWORD PTR [rbx-0x1f]
   140023c0a:	(bad)  
   140023c0b:	(bad)  
   140023c0c:	cmp    al,0xdb
   140023c0e:	(bad)  
   140023c0f:	push   QWORD PTR [rsi]
   140023c11:	(bad)  
   140023c12:	(bad)  
   140023c13:	push   QWORD PTR [rbx]
   140023c15:	sar    edi,1
   140023c17:	push   QWORD PTR [rax]
   140023c19:	retf   
   140023c1a:	(bad)  
   140023c1b:	jmp    FWORD PTR [rip+0x2dffffc7]        # 0x16e023be8
   140023c21:	sar    edi,0xff
   140023c24:	sub    eax,0x31ffffbf
   140023c29:	sar    bh,0xff
   140023c2c:	xor    al,0xc1
   140023c2e:	(bad)  
   140023c2f:	inc    DWORD PTR [rax-0x39]
   140023c32:	(bad)  
   140023c33:	jmp    QWORD PTR [rbx-0x34]
   140023c36:	idiv   edi
   140023c38:	mov    bl,0xdc
   140023c3a:	ret    
   140023c3b:	(bad)  
   140023c3c:	jmp    0x140023c26
   140023c3e:	fwait
   140023c3f:	push   rdx
   140023c41:	out    dx,al
   140023c42:	popf   
   140023c43:	(bad)  
   140023c44:	stc    
   140023c45:	cmc    
   140023c46:	popf   
   140023c47:	(bad)  
   140023c48:	std    
   140023c49:	stc    
   140023c4a:	sahf   
   140023c4b:	(bad)  
   140023c4c:	(bad)  
   140023c4d:	clc    
   140023c4e:	popf   
   140023c4f:	(bad)  
   140023c50:	(bad)  
   140023c51:	stc    
   140023c52:	fwait
   140023c53:	(bad)  
   140023c54:	(bad)  
   140023c55:	clc    
   140023c56:	(bad)  
   140023c57:	(bad)  
   140023c58:	(bad)  
   140023c59:	clc    
   140023c5a:	xchg   edi,eax
   140023c5b:	(bad)  
   140023c5c:	push   rdi
   140023c5e:	xchg   ebp,eax
   140023c5f:	(bad)  
   140023c60:	push   rdi
   140023c62:	xchg   edx,eax
   140023c63:	(bad)  
   140023c64:	push   rsi
   140023c66:	(bad)  
   140023c67:	(bad)  
   140023c68:	push   rsp
   140023c6a:	mov    edi,?
   140023c6c:	push   rbx
   140023c6e:	mov    bh,bh
   140023c70:	push   rbx
   140023c72:	xchg   bh,bh
   140023c74:	push   rdx
   140023c76:	cmp    edi,0xffffffff
   140023c79:	lock cmp edi,0xff7eeefe
   140023c80:	std    
   140023c81:	in     eax,dx
   140023c82:	jns    0x140023c83
   140023c84:	std    
   140023c85:	jmp    0x127ff3c01
   140023c8a:	jne    0x140023c8b
   140023c8c:	std    
   140023c8d:	in     al,0x71
   140023c8f:	(bad)  
   140023c90:	cld    
   140023c91:	loopne 0x140023d03
   140023c93:	(bad)  
   140023c94:	sti    
   140023c95:	fisubr WORD PTR [rbx-0x1]
   140023c98:	cli    
   140023c99:	fld    TBYTE PTR [rcx-0x1]
   140023c9c:	not    edi
   140023c9e:	push   bp
   140023ca1:	shl    BYTE PTR [rbx-0x1],cl
   140023ca4:	hlt    
   140023ca5:	shl    BYTE PTR [rax-0x1],1
   140023ca8:	icebp  
   140023ca9:	retf   
   140023caa:	pop    rdi
   140023cab:	(bad)  
   140023cac:	out    dx,eax
   140023cad:	enter  0xff5a,0xee
   140023cb1:	ret    
   140023cb2:	pop    rax
   140023cb3:	(bad)  
   140023cb4:	jmp    0x140023c73
   140023cb6:	push   rdi
   140023cb7:	jmp    rdi
   140023cb9:	mov    eax,0xb0dfff54
   140023cbe:	rex.WRXB std 
   140023cc0:	ret    0x358b
   140023cc3:	out    0xa8,al
   140023cc5:	outs   dx,BYTE PTR ds:[rsi]
   140023cc6:	sbb    eax,0x81
	...
   140023cef:	add    BYTE PTR [rax],ah
   140023cf1:	test   al,0xfe
   140023cf3:	outs   dx,DWORD PTR ds:[rsi]
   140023cf4:	sub    BYTE PTR [rbp+rdi*8-0x3078c283],ch
   140023cfb:	rex.WXB add rax,QWORD PTR [r15]
   140023cfe:	pop    rcx
   140023cff:	sbb    eax,DWORD PTR [rax]
   140023d01:	add    BYTE PTR [rbp+0x8],dl
	...
   140023da8:	mov    bh,0x79
   140023daa:	and    DWORD PTR [rip+0xffffffffba2a80bc],esp        # 0xfa2cbe6c
   140023db0:	jmp    0x139f0a979
   140023db5:	(bad)  
   140023db6:	mov    edi,edi
   140023db8:	cli    
   140023db9:	out    dx,eax
   140023dba:	mov    bh,bh
   140023dbc:	cld    
   140023dbd:	icebp  
   140023dbe:	mov    bh,bh
   140023dc0:	std    
   140023dc1:	repz mov edi,edi
   140023dc4:	std    
   140023dc5:	cmc    
   140023dc6:	nop
   140023dc7:	(bad)  
   140023dc8:	(bad)  
   140023dc9:	not    BYTE PTR [rsi-0x66060101]
   140023dcf:	(bad)  
   140023dd0:	(bad)  
   140023dd1:	stc    
   140023dd2:	pushf  
   140023dd3:	(bad)  
   140023dd4:	(bad)  
   140023dd5:	sti    
   140023dd6:	movabs eax,ds:0xa9fbffffa5fbfeff
   140023ddf:	(bad)  
   140023de0:	(bad)  
   140023de1:	sti    
   140023de2:	lods   eax,DWORD PTR ds:[rsi]
   140023de3:	(bad)  
   140023de4:	(bad)  
   140023de5:	sti    
   140023de6:	mov    dl,0xff
   140023de8:	(bad)  
   140023de9:	sti    
   140023dea:	fdiv   st(7),st
   140023dec:	fwait
   140023ded:	(bad)  
   140023dee:	(bad)  
   140023def:	jmp    FWORD PTR [rdi+rdi*8-0x570001]
   140023df6:	(bad)  
   140023df7:	jmp    QWORD PTR [rbp-0x5d000001]
   140023dfd:	(bad)  
   140023dfe:	(bad)  
   140023dff:	call   QWORD PTR [rdx+0x6efffffe]
   140023e05:	repz (bad) 
   140023e07:	call   QWORD PTR [rdi-0x15]
   140023e0a:	(bad)  
   140023e0b:	inc    DWORD PTR [rsp+riz*8-0x1]
   140023e0f:	(bad)  
   140023e10:	cmp    al,0xdc
   140023e12:	(bad)  
   140023e13:	push   QWORD PTR [rdi]
   140023e15:	xlat   BYTE PTR ds:[rbx]
   140023e16:	(bad)  
   140023e17:	push   QWORD PTR [rdx+rdx*8]
   140023e1a:	(bad)  
   140023e1b:	push   QWORD PTR [rax]
   140023e1d:	int    0xff
   140023e1f:	jmp    FWORD PTR [rdi]
   140023e21:	enter  0xffff,0x2d
   140023e25:	ret    
   140023e26:	(bad)  
   140023e27:	jmp    FWORD PTR [rip+0x30ffffc0]        # 0x171023ded
   140023e2d:	sar    bh,0xff
   140023e30:	xor    al,0xc1
   140023e32:	(bad)  
   140023e33:	(bad)  
   140023e34:	cmp    al,bh
   140023e36:	(bad)  
   140023e37:	dec    DWORD PTR [rdi-0x37]
   140023e3a:	sti    
   140023e3b:	call   QWORD PTR [rsi+rdx*8-0x1b1c0028]
   140023e42:	cwde   
   140023e43:	(bad)  
   140023e44:	out    dx,eax
   140023e45:	(bad)  
   140023e46:	xchg   esi,eax
   140023e47:	push   rbp
   140023e49:	out    dx,eax
   140023e4a:	cwde   
   140023e4b:	(bad)  
   140023e4c:	sti    
   140023e4d:	cmc    
   140023e4e:	xchg   edi,eax
   140023e4f:	(bad)  
   140023e50:	(bad)  
   140023e51:	not    DWORD PTR [rdi-0x68080001]
   140023e57:	(bad)  
   140023e58:	push   rsi
   140023e5a:	xchg   ebp,eax
   140023e5b:	(bad)  
   140023e5c:	push   rsi
   140023e5e:	xchg   ebx,eax
   140023e5f:	(bad)  
   140023e60:	push   rsi
   140023e62:	(bad)  
   140023e63:	(bad)  
   140023e64:	push   rbp
   140023e66:	mov    bh,bh
   140023e68:	push   rsp
   140023e6a:	mov    bh,bh
   140023e6c:	push   rdx
   140023e6e:	test   edi,edi
   140023e70:	(bad)  
   140023e71:	repz test bh,bh
   140023e74:	(bad)  
   140023e75:	out    dx,eax
   140023e76:	cmp    bh,0xfe
   140023e79:	out    dx,al
   140023e7a:	jle    0x140023e7b
   140023e7c:	std    
   140023e7d:	in     eax,dx
   140023e7e:	jns    0x140023e7f
   140023e80:	cld    
   140023e81:	call   0x128003dfd
   140023e86:	je     0x140023e87
   140023e88:	cld    
   140023e89:	jrcxz  0x140023efd
   140023e8b:	(bad)  
   140023e8c:	sti    
   140023e8d:	loopne 0x140023eff
   140023e8f:	(bad)  
   140023e90:	cli    
   140023e91:	fisubr WORD PTR [rdi+rdi*8-0x7]
   140023e95:	fldcw  WORD PTR [rcx-0x1]
   140023e98:	not    bh
   140023e9a:	addr32 push rbp
   140023e9d:	shl    DWORD PTR [rdi+rdi*8-0xc],cl
   140023ea1:	iret   
   140023ea2:	(bad)  
   140023ea3:	push   rax
   140023ea5:	leave  
   140023ea6:	pop    rbp
   140023ea7:	(bad)  
   140023ea8:	out    dx,eax
   140023ea9:	enter  0xff5b,0xec
   140023ead:	ret    
   140023eae:	pop    rcx
   140023eaf:	(bad)  
   140023eb0:	jmp    0x140023e6f
   140023eb2:	push   rdi
   140023eb3:	jmp    rdi
   140023eb5:	mov    edx,0xa7daff55
   140023eba:	rex.WB clc 
   140023ebc:	mov    edi,0xa9e33388
   140023ec1:	outs   dx,DWORD PTR ds:[rsi]
   140023ec2:	sbb    eax,0x6d
	...
   140023eef:	add    BYTE PTR [rax],ah
   140023ef1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140023ef2:	std    
   140023ef3:	(bad)  
   140023ef4:	and    eax,0x4388feac
   140023ef9:	xchg   edi,eax
   140023efa:	fistp  WORD PTR [rdi+0x2]
   140023efd:	(bad)  
   140023efe:	pop    rax
   140023eff:	(bad)  
   140023f00:	add    BYTE PTR [rax],al
   140023f02:	push   rbp
   140023f03:	or     DWORD PTR [rax],eax
	...
   140023fa9:	add    BYTE PTR [rax],al
   140023fab:	add    BYTE PTR [rdi-0x46e3de87],dh
   140023fb1:	jl     0x140023fd8
   140023fb3:	stos   BYTE PTR es:[rdi],al
   140023fb4:	jrcxz  0x140023f6f
   140023fb6:	(bad)  
   140023fb7:	jmp    0x13f8e27b4
   140023fbc:	cli    
   140023fbd:	out    dx,al
   140023fbe:	mov    edi,edi
   140023fc0:	sti    
   140023fc1:	icebp  
   140023fc2:	mov    edi,?
   140023fc4:	cld    
   140023fc5:	repz mov edi,?
   140023fc8:	std    
   140023fc9:	hlt    
   140023fca:	nop
   140023fcb:	(bad)  
   140023fcc:	std    
   140023fcd:	not    BYTE PTR [rdi+rdi*8-0x680602]
   140023fd4:	(bad)  
   140023fd5:	clc    
   140023fd6:	popf   
   140023fd7:	(bad)  
   140023fd8:	(bad)  
   140023fd9:	cli    
   140023fda:	movabs eax,ds:0xa7fbffffa4fafeff
   140023fe3:	(bad)  
   140023fe4:	(bad)  
   140023fe5:	cld    
   140023fe6:	stos   DWORD PTR es:[rdi],eax
   140023fe7:	(bad)  
   140023fe8:	(bad)  
   140023fe9:	cld    
   140023fea:	mov    cl,0xff
   140023fec:	in     al,0xfd
   140023fee:	enter  0x92ff,0xfd
   140023ff2:	(bad)  
   140023ff3:	jmp    FWORD PTR [rdx-0x55000001]
   140023ff9:	(bad)  
   140023ffa:	(bad)  
   140023ffb:	jmp    QWORD PTR [rsi-0x5c000001]
   140024001:	(bad)  
   140024002:	(bad)  
   140024003:	call   FWORD PTR [rdi+rdi*8-0x9880001]
   14002400a:	(bad)  
   14002400b:	call   FWORD PTR [rbp-0x14]
   14002400e:	(bad)  
   14002400f:	dec    DWORD PTR [rdx-0x1b]
   140024012:	(bad)  
   140024013:	(bad)  
   140024014:	ds (bad) 
   140024017:	(bad)  
   140024018:	cmp    edx,ebx
   14002401a:	(bad)  
   14002401b:	push   QWORD PTR [rsp+rdx*8]
   14002401e:	(bad)  
   14002401f:	push   QWORD PTR [rcx]
   140024021:	iret   
   140024022:	(bad)  
   140024023:	jmp    FWORD PTR [rdi]
   140024025:	retf   
   140024026:	(bad)  
   140024027:	jmp    FWORD PTR [rip+0x2dffffc4]        # 0x16e023ff1
   14002402d:	ret    
   14002402e:	(bad)  
   14002402f:	jmp    FWORD PTR [rdi]
   140024031:	sar    bh,0xff
   140024034:	xor    ecx,eax
   140024036:	(bad)  
   140024037:	push   QWORD PTR [rdi]
   140024039:	(bad)  
   14002403a:	(bad)  
   14002403b:	inc    DWORD PTR [rsi-0x38]
   14002403e:	std    
   14002403f:	jmp    FWORD PTR [rsi-0x32]
   140024042:	repnz (bad) 
   140024044:	mov    ebp,0xebffb4dc
   140024049:	in     eax,0x91
   14002404b:	push   rdx
   14002404d:	jmp    0x140023fe1
   14002404f:	(bad)  
   140024050:	clc    
   140024051:	lock xchg ebx,eax
   140024053:	(bad)  
   140024054:	cld    
   140024055:	repz xchg ebx,eax
   140024057:	(bad)  
   140024058:	(bad)  
   140024059:	cmc    
   14002405a:	nop
   14002405b:	(bad)  
   14002405c:	push   rbp
   14002405e:	(bad)  
   14002405f:	(bad)  
   140024060:	push   rbp
   140024062:	mov    edi,edi
   140024064:	push   rsp
   140024066:	mov    bh,bh
   140024068:	(bad)  
   140024069:	repz test edi,edi
   14002406c:	(bad)  
   14002406d:	icebp  
   14002406e:	test   bh,bh
   140024070:	(bad)  
   140024071:	out    dx,eax
   140024072:	jg     0x140024073
   140024074:	(bad)  
   140024075:	in     al,dx
   140024076:	jle    0x140024077
   140024078:	std    
   140024079:	(bad)  
   14002407a:	jns    0x14002407b
   14002407c:	cld    
   14002407d:	call   0x125fe3ff9
   140024082:	je     0x140024083
   140024084:	cld    
   140024085:	jrcxz  0x1400240f8
   140024087:	(bad)  
   140024088:	cli    
   140024089:	loopne 0x1400240fb
   14002408b:	(bad)  
   14002408c:	stc    
   14002408d:	(bad)  [rsi-0x1]
   140024090:	neg    edx
   140024092:	imul   edi,edi,0xfffffff6
   140024095:	fsub   DWORD PTR [rsi-0x1]
   140024098:	cmc    
   140024099:	shl    DWORD PTR [rdi+rdi*8-0xe],cl
   14002409d:	iret   
   14002409e:	(bad)  
   14002409f:	push   rax
   1400240a1:	retf   0xff5e
   1400240a4:	out    dx,eax
   1400240a5:	enter  0xff5b,0xed
   1400240a9:	ret    
   1400240aa:	pop    rbx
   1400240ab:	(bad)  
   1400240ac:	jmp    0x12601996e
   1400240b1:	mov    bh,0x57
   1400240b3:	call   rsp
   1400240b5:	movabs ds:0x6fa9cc2275aff245,eax
   1400240be:	sbb    eax,0x4e
	...
   1400240ef:	add    BYTE PTR [rcx],ah
   1400240f1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400240f2:	cld    
   1400240f3:	(bad)  
   1400240f4:	and    al,0xac
   1400240f6:	call   QWORD PTR [rcx+0x73e8a143]
   1400240fc:	add    al,BYTE PTR [rdi]
   1400240fe:	push   rdi
   1400240ff:	and    DWORD PTR [rax],eax
   140024101:	add    BYTE PTR [rbp+0xa],dl
	...
   1400241b0:	mov    bh,0x79
   1400241b2:	and    DWORD PTR [rcx],ecx
   1400241b4:	mov    bh,0x79
   1400241b6:	and    DWORD PTR [rsi-0x1ba34f26],ecx
   1400241bc:	mul    ah
   1400241be:	xchg   ch,bh
   1400241c0:	cli    
   1400241c1:	in     al,dx
   1400241c2:	mov    edi,edi
   1400241c4:	sti    
   1400241c5:	lock mov edi,edi
   1400241c8:	cld    
   1400241c9:	icebp  
   1400241ca:	mov    edi,edi
   1400241cc:	std    
   1400241cd:	repz mov ?,edi
   1400241d0:	std    
   1400241d1:	not    DWORD PTR [rax-0x6b080101]
   1400241d7:	(bad)  
   1400241d8:	(bad)  
   1400241d9:	stc    
   1400241da:	(bad)  
   1400241db:	(bad)  
   1400241dc:	(bad)  
   1400241dd:	cli    
   1400241de:	sahf   
   1400241df:	(bad)  
   1400241e0:	(bad)  
   1400241e1:	sti    
   1400241e2:	movabs eax,ds:0xa9fbffffa6fbffff
   1400241eb:	(bad)  
   1400241ec:	(bad)  
   1400241ed:	cld    
   1400241ee:	scas   eax,DWORD PTR es:[rdi]
   1400241ef:	push   rdx
   1400241f1:	cld    
   1400241f2:	mov    ebx,0xf9fb9bff
   1400241f7:	jmp    QWORD PTR [rbp-0x55000001]
   1400241fd:	(bad)  
   1400241fe:	(bad)  
   1400241ff:	jmp    FWORD PTR [rax-0x5a000001]
   140024205:	(bad)  
   140024206:	(bad)  
   140024207:	call   FWORD PTR [rdi-0x7b000001]
   14002420d:	sti    
   14002420e:	(bad)  
   14002420f:	jmp    QWORD PTR [rdi-0x11]
   140024212:	(bad)  
   140024213:	call   QWORD PTR [rcx-0x18]
   140024216:	(bad)  
   140024217:	inc    DWORD PTR [rcx-0x1f]
   14002421a:	(bad)  
   14002421b:	(bad)  
   14002421c:	cmp    al,0xdb
   14002421e:	(bad)  
   14002421f:	push   QWORD PTR [rsi]
   140024221:	xlat   BYTE PTR ds:[rbx]
   140024222:	(bad)  
   140024223:	push   QWORD PTR [rbx]
   140024225:	sar    edi,1
   140024227:	push   QWORD PTR [rax]
   140024229:	retf   
   14002422a:	(bad)  
   14002422b:	jmp    FWORD PTR [rip+0x2dffffc8]        # 0x16e0241f9
   140024231:	ret    
   140024232:	(bad)  
   140024233:	jmp    FWORD PTR [rdi]
   140024235:	sar    edi,0xff
   140024238:	xor    al,al
   14002423a:	(bad)  
   14002423b:	push   QWORD PTR [rsi]
   14002423d:	ret    
   14002423e:	(bad)  
   14002423f:	(bad)  
   140024240:	cmp    al,0xc7
   140024242:	(bad)  
   140024243:	call   QWORD PTR [rax-0x36]
   140024246:	sti    
   140024247:	call   QWORD PTR [rax-0x2100262c]
   14002424d:	loopne 0x1400241e4
   14002424f:	(bad)  
   140024250:	out    dx,al
   140024251:	out    0x8b,al
   140024253:	push   rbp
   140024255:	jmp    0x1400241e1
   140024257:	(bad)  
   140024258:	cli    
   140024259:	lock mov edi,edi
   14002425c:	(bad)  
   14002425d:	repz mov bh,bh
   140024260:	(bad)  
   140024261:	hlt    
   140024262:	xchg   edi,edi
   140024264:	(bad)  
   140024265:	repnz test bh,bh
   140024268:	(bad)  
   140024269:	lock (bad) 
   14002426b:	(bad)  
   14002426c:	(bad)  
   14002426d:	out    dx,al
   14002426e:	jle    0x14002426f
   140024270:	(bad)  
   140024271:	in     al,dx
   140024272:	jl     0x140024273
   140024274:	std    
   140024275:	(bad)  
   140024276:	js     0x140024277
   140024278:	cld    
   140024279:	out    0x77,eax
   14002427b:	(bad)  
   14002427c:	cld    
   14002427d:	out    0x74,al
   14002427f:	(bad)  
   140024280:	cli    
   140024281:	loope  0x1400242f6
   140024283:	(bad)  
   140024284:	cli    
   140024285:	loopne 0x1400242f6
   140024287:	(bad)  
   140024288:	stc    
   140024289:	fisubr WORD PTR [rdi+rdi*8-0x9]
   14002428d:	fsubr  DWORD PTR [rdx-0x1]
   140024290:	not    dh
   140024292:	addr32 push rsp
   140024295:	shl    DWORD PTR [rdi+rdi*8-0xf],1
   140024299:	iret   
   14002429a:	(bad)  
   14002429b:	(bad)  
   14002429c:	out    dx,eax
   14002429d:	retf   
   14002429e:	pop    rdi
   14002429f:	(bad)  
   1400242a0:	out    dx,eax
   1400242a1:	(bad)  
   1400242a2:	pop    rsi
   1400242a3:	(bad)  
   1400242a4:	in     eax,dx
   1400242a5:	rcr    BYTE PTR [rbx-0x1],0xeb
   1400242a9:	mov    esi,0xb7e3ff59
   1400242ae:	push   rdi
   1400242af:	call   rax
   1400242b1:	fwait
   1400242b2:	rex.XB in eax,dx
   1400242b4:	lods   eax,DWORD PTR ds:[rsi]
   1400242b5:	jae    0x1400242d7
   1400242b7:	shr    BYTE PTR [rdx+0x331d70],0x0
	...
   1400242ee:	add    BYTE PTR [rax],al
   1400242f0:	(bad)  
   1400242f1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400242f2:	cld    
   1400242f3:	pop    rsi
   1400242f4:	and    al,0xac
   1400242f6:	call   FWORD PTR [rdx+rax*2+0x181eea7]
   1400242fd:	add    edx,DWORD PTR [rdx+0x21]
   140024300:	add    BYTE PTR [rax],al
   140024302:	push   rbp
   140024303:	or     eax,DWORD PTR [rax]
	...
   1400243b5:	add    BYTE PTR [rax],al
   1400243b7:	add    BYTE PTR [rdi-0x3096de87],dh
   1400243bd:	popf   
   1400243be:	rex.WB fucomi st,st(7)
   1400243c1:	iret   
   1400243c2:	jns    0x1400243b8
   1400243c4:	clc    
   1400243c5:	jmp    0x12efe4355
   1400243ca:	mov    edi,edi
   1400243cc:	cld    
   1400243cd:	icebp  
   1400243ce:	(bad)  
   1400243cf:	(bad)  
   1400243d0:	cld    
   1400243d1:	repz mov edi,?
   1400243d4:	std    
   1400243d5:	hlt    
   1400243d6:	mov    ?,edi
   1400243d8:	std    
   1400243d9:	not    DWORD PTR [rbx-0x68070101]
   1400243df:	(bad)  
   1400243e0:	(bad)  
   1400243e1:	stc    
   1400243e2:	pushf  
   1400243e3:	(bad)  
   1400243e4:	(bad)  
   1400243e5:	cli    
   1400243e6:	movabs eax,ds:0xa7fbffffa4fbffff
   1400243ef:	(bad)  
   1400243f0:	(bad)  
   1400243f1:	sti    
   1400243f2:	stos   DWORD PTR es:[rdi],eax
   1400243f3:	(bad)  
   1400243f4:	stc    
   1400243f5:	sti    
   1400243f6:	mov    ah,0xff
   1400243f8:	mov    ah,0xfc
   1400243fa:	loop   0x1400243fb
   1400243fc:	xchg   ebx,eax
   1400243fd:	(bad)  
   1400243fe:	(bad)  
   1400243ff:	jmp    FWORD PTR [rdi+rdi*8-0x560001]
   140024406:	(bad)  
   140024407:	jmp    QWORD PTR [rsi-0x5d000001]
   14002440d:	(bad)  
   14002440e:	(bad)  
   14002440f:	call   QWORD PTR [rbx+0x71fffffe]
   140024415:	repnz (bad) 
   140024417:	call   FWORD PTR [rax-0x17]
   14002441a:	(bad)  
   14002441b:	dec    DWORD PTR [rax-0x1e]
   14002441e:	(bad)  
   14002441f:	(bad)  
   140024420:	cmp    eax,0x37ffffde
   140024425:	fdivr  st,st(7)
   140024427:	push   QWORD PTR [rsp+rdx*8]
   14002442a:	(bad)  
   14002442b:	push   QWORD PTR [rax]
   14002442d:	(bad)  
   14002442e:	(bad)  
   14002442f:	push   QWORD PTR [rax]
   140024431:	retf   0xffff
   140024434:	(bad)  
   140024435:	(bad)  
   140024436:	(bad)  
   140024437:	jmp    FWORD PTR [rdi]
   140024439:	sar    edi,0xff
   14002443c:	xor    cl,al
   14002443e:	(bad)  
   14002443f:	push   QWORD PTR [rbx]
   140024441:	sar    edi,0xff
   140024444:	cmp    esp,eax
   140024446:	(bad)  
   140024447:	inc    DWORD PTR [rdi-0x37]
   14002444a:	std    
   14002444b:	jmp    FWORD PTR [rbp-0x32]
   14002444e:	repnz push QWORD PTR [rax+rbx*8-0x1f16004b]
   140024456:	(bad)  
   140024457:	push   rax
   140024459:	in     al,0x82
   14002445b:	push   rdi
   14002445d:	jmp    0x1400243e4
   14002445f:	(bad)  
   140024460:	sti    
   140024461:	in     eax,dx
   140024462:	cmp    edi,0xff7fedfd
   140024468:	(bad)  
   140024469:	out    dx,al
   14002446a:	jge    0x14002446b
   14002446c:	(bad)  
   14002446d:	jmp    0x1400244ea
   14002446f:	(bad)  
   140024470:	cld    
   140024471:	call   0x127ff43ee
   140024476:	jbe    0x140024477
   140024478:	sti    
   140024479:	out    0x75,al
   14002447b:	(bad)  
   14002447c:	cli    
   14002447d:	loopne 0x1400244f0
   14002447f:	(bad)  
   140024480:	stc    
   140024481:	fisubr WORD PTR [rdi-0x1]
   140024484:	stc    
   140024485:	fld    TBYTE PTR [rdi+rdi*8-0x9]
   140024489:	fsubr  DWORD PTR [rbx-0x1]
   14002448c:	not    bl
   14002448e:	push   0x65d1f3ff
   140024493:	push   rdx
   140024495:	iret   
   140024496:	(bad)  
   140024497:	push   rax
   140024499:	retf   0xff60
   14002449c:	out    dx,al
   14002449d:	(bad)
   1400244a0:	jmp    0x140024462
   1400244a2:	pop    rbp
   1400244a3:	(bad)  
   1400244a4:	jmp    0x12001a264
   1400244a9:	mov    dl,0x55
   1400244ab:	sti    
   1400244ac:	(bad)  
   1400244ad:	nop
   1400244ae:	cmp    eax,0x1e70abe6
   1400244b3:	movabs ds:0x1b1e70aa,al
	...
   1400244f0:	(bad)  
   1400244f1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400244f2:	cld    
   1400244f3:	(bad)
   1400244f8:	(bad)  
   1400244f9:	test   al,0xf1
   1400244fb:	xchg   ecx,eax
   1400244fc:	add    al,BYTE PTR [rbx]
   1400244fe:	push   rcx
   1400244ff:	and    al,BYTE PTR [rax]
   140024501:	add    BYTE PTR [rbp+0xb],dl
	...
   1400245bc:	mov    bh,0x79
   1400245be:	and    DWORD PTR [rax],edi
   1400245c0:	mov    ecx,0xe0b3257d
   1400245c5:	mov    eax,0xe5f7e963
   1400245ca:	(bad)  
   1400245cb:	(bad)  
   1400245cc:	stc    
   1400245cd:	jmp    0x14002455a
   1400245cf:	(bad)  
   1400245d0:	cli    
   1400245d1:	out    dx,eax
   1400245d2:	mov    edi,?
   1400245d4:	cld    
   1400245d5:	icebp  
   1400245d6:	(bad)  
   1400245d7:	(bad)  
   1400245d8:	std    
   1400245d9:	hlt    
   1400245da:	mov    ?,edi
   1400245dc:	std    
   1400245dd:	cmc    
   1400245de:	xchg   edx,eax
   1400245df:	(bad)  
   1400245e0:	std    
   1400245e1:	not    DWORD PTR [rsi-0x66070101]
   1400245e7:	(bad)  
   1400245e8:	(bad)  
   1400245e9:	stc    
   1400245ea:	pushf  
   1400245eb:	(bad)  
   1400245ec:	(bad)  
   1400245ed:	cli    
   1400245ee:	movabs eax,ds:0xa9fbffffa7faffff
   1400245f7:	(bad)  
   1400245f8:	(bad)  
   1400245f9:	sti    
   1400245fa:	lods   eax,DWORD PTR ds:[rsi]
   1400245fb:	(bad)  
   1400245fc:	(bad)  
   1400245fe:	leave  
   1400245ff:	call   FWORD PTR [rcx-0x57000505]
   140024605:	(bad)  
   140024606:	(bad)  
   140024607:	jmp    FWORD PTR [rdx-0x57000001]
   14002460d:	(bad)  
   14002460e:	(bad)  
   14002460f:	jmp    QWORD PTR [rbp-0x62000001]
   140024615:	(bad)  
   140024616:	(bad)  
   140024617:	inc    DWORD PTR [rcx+0x62fffff8]
   14002461d:	out    dx,eax
   14002461e:	(bad)  
   14002461f:	dec    DWORD PTR [rsi-0x19]
   140024622:	(bad)  
   140024623:	inc    DWORD PTR [rbx-0x21]
   140024626:	(bad)  
   140024627:	(bad)  
   140024628:	cmp    bl,dl
   14002462a:	(bad)  
   14002462b:	push   QWORD PTR [rsi]
   14002462d:	(bad)  
   14002462e:	(bad)  
   14002462f:	push   QWORD PTR [rcx]
   140024631:	iret   
   140024632:	(bad)  
   140024633:	push   QWORD PTR [rax]
   140024635:	int    0xff
   140024637:	jmp    FWORD PTR [rdi]
   140024639:	enter  0xffff,0x2d
   14002463d:	ret    
   14002463e:	(bad)  
   14002463f:	push   QWORD PTR [rax]
   140024641:	sar    edi,0xff
   140024644:	xor    ecx,eax
   140024646:	(bad)  
   140024647:	push   QWORD PTR [rsi]
   140024649:	(bad)  
   14002464a:	(bad)  
   14002464b:	(bad)  
   14002464c:	ds enter 0xffff,0x4f
   140024651:	retf   0xfffb
   140024654:	mov    dl,dl
   140024656:	fdiv   st(7),st
   140024658:	fcmovu st,st(1)
   14002465a:	mov    bh,bh
   14002465c:	in     al,dx
   14002465d:	fnstsw WORD PTR [rdx-0x1]
   140024660:	repz in al,0x79
   140024663:	(bad)  
   140024664:	stc    
   140024665:	out    0x7a,al
   140024667:	(bad)  
   140024668:	cld    
   140024669:	jmp    0x127fe45e8
   14002466e:	js     0x14002466f
   140024670:	sti    
   140024671:	out    0x76,al
   140024673:	(bad)  
   140024674:	sti    
   140024675:	loop   0x1400246e9
   140024677:	(bad)  
   140024678:	cli    
   140024679:	loopne 0x1400246ec
   14002467b:	(bad)  
   14002467c:	stc    
   14002467d:	fisubr WORD PTR [rbp-0x1]
   140024680:	clc    
   140024681:	fisubr DWORD PTR [rdi+rdi*8-0x9]
   140024685:	fsubr  DWORD PTR [rcx-0x1]
   140024688:	hlt    
   140024689:	(bad)  
   14002468a:	addr32 push rdx
   14002468d:	shl    DWORD PTR [rsi-0x1],1
   140024690:	lock int3 
   140024692:	(bad)  
   140024693:	(bad)  
   140024694:	out    dx,eax
   140024695:	leave  
   140024696:	(bad)  
   140024697:	(bad)  
   140024698:	out    dx,al
   140024699:	(bad)
   14002469c:	in     al,dx
   14002469d:	rcr    DWORD PTR [rdi-0x1],0xe8
   1400246a1:	mov    ebx,0xa4d4ff5f
   1400246a6:	rex.WX out dx,eax
   1400246a8:	mov    al,0x77
   1400246aa:	and    ecx,ebx
   1400246ac:	stos   DWORD PTR es:[rdi],eax
   1400246ad:	jo     0x1400246cd
   1400246af:	movsxd ebp,DWORD PTR [rbx+0x21e70]
	...
   1400246ed:	add    BYTE PTR [rax],al
   1400246ef:	add    BYTE PTR [rsi],bl
   1400246f1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400246f2:	std    
   1400246f3:	jno    0x140024719
   1400246f5:	lods   al,BYTE PTR ds:[rsi]
   1400246f6:	jmp    FWORD PTR [rsi-0x640d56c1]
   1400246fc:	add    eax,0x225608
   140024701:	add    BYTE PTR [rbp+0xa],dl
	...
   1400247c0:	mov    bh,0x79
   1400247c2:	and    DWORD PTR [rdi+rsi*4],ecx
   1400247c5:	jns    0x1400247e8
   1400247c7:	jle    0x140024798
   1400247c9:	sahf   
   1400247ca:	rex.WX fucomi st,st(5)
   1400247cd:	int    0x78
   1400247cf:	hlt    
   1400247d0:	imul   eax
   1400247d2:	mov    ?,edi
   1400247d4:	cli    
   1400247d5:	in     eax,dx
   1400247d6:	(bad)  
   1400247d7:	(bad)  
   1400247d8:	sti    
   1400247d9:	lock (bad) 
   1400247db:	(bad)  
   1400247dc:	cld    
   1400247dd:	repnz mov ?,edi
   1400247e0:	std    
   1400247e1:	hlt    
   1400247e2:	nop
   1400247e3:	(bad)  
   1400247e4:	std    
   1400247e5:	not    BYTE PTR [rdi+rdi*8-0x680702]
   1400247ec:	(bad)  
   1400247ed:	stc    
   1400247ee:	(bad)  
   1400247ef:	(bad)  
   1400247f0:	(bad)  
   1400247f1:	stc    
   1400247f2:	sahf   
   1400247f3:	(bad)  
   1400247f4:	(bad)  
   1400247f5:	cli    
   1400247f6:	movabs ds:0xa9fcfeffa6fbfeff,eax
   1400247ff:	push   rdx
   140024801:	cld    
   140024802:	mov    bl,0xff
   140024804:	mov    ch,0xfb
   140024806:	loope  0x140024807
   140024808:	cwde   
   140024809:	std    
   14002480a:	(bad)  
   14002480b:	jmp    FWORD PTR [rbx-0x57000002]
   140024811:	(bad)  
   140024812:	(bad)  
   140024813:	jmp    QWORD PTR [rbp-0x5e000002]
   140024819:	(bad)  
   14002481a:	(bad)  
   14002481b:	call   QWORD PTR [rax+0x6ffffffb]
   140024821:	repnz (bad) 
   140024823:	call   FWORD PTR [rax-0x16]
   140024826:	(bad)  
   140024827:	inc    DWORD PTR [rdi-0x1c]
   14002482a:	(bad)  
   14002482b:	(bad)  
   14002482c:	ds fdiv st(7),st
   14002482f:	push   QWORD PTR [rdi]
   140024831:	fdivr  st,st(7)
   140024833:	push   QWORD PTR [rdx+rdx*8]
   140024836:	(bad)  
   140024837:	push   QWORD PTR [rcx]
   140024839:	(bad)  
   14002483a:	(bad)  
   14002483b:	push   QWORD PTR [rax]
   14002483d:	retf   0xffff
   140024840:	(bad)  
   140024841:	(bad)  
   140024842:	(bad)  
   140024843:	jmp    FWORD PTR [rdi]
   140024845:	ret    
   140024846:	(bad)  
   140024847:	push   QWORD PTR [rax]
   140024849:	sar    edi,0xff
   14002484c:	xor    eax,0x39ffffc3
   140024851:	(bad)  
   140024852:	(bad)  
   140024853:	inc    DWORD PTR [rdx+rcx*8-0x2]
   140024857:	jmp    QWORD PTR [rsi+rcx*8-0xa]
   14002485b:	jmp    QWORD PTR [rdi-0x1800462f]
   140024861:	fdiv   DWORD PTR [rbp-0x1]
   140024864:	out    dx,al
   140024865:	fidiv  DWORD PTR [rbp-0x1]
   140024868:	repz fnsave [rdi+rdi*8-0xa]
   14002486d:	loopne 0x1400248e3
   14002486f:	(bad)  
   140024870:	stc    
   140024871:	loopne 0x1400248e5
   140024873:	(bad)  
   140024874:	stc    
   140024875:	fidiv  WORD PTR [rcx-0x1]
   140024878:	clc    
   140024879:	fldcw  WORD PTR [rdi-0x1]
   14002487c:	neg    eax
   14002487e:	push   0xffffffffffffffff
   140024880:	hlt    
   140024881:	(bad)  
   140024882:	push   0xffffffffffffffff
   140024884:	repz shl BYTE PTR [rdi-0x1],cl
   140024888:	icebp  
   140024889:	shl    BYTE PTR [rdi+rdi*8-0x10],1
   14002488d:	retf   0xff62
   140024890:	out    dx,al
   140024891:	leave  
   140024892:	(bad)  
   140024893:	(bad)  
   140024894:	in     al,dx
   140024895:	ret    
   140024896:	(bad)  
   140024897:	(bad)  
   140024898:	(bad)  
   140024899:	mov    edi,0xb5e0ff62
   14002489e:	pop    rbx
   14002489f:	sti    
   1400248a0:	enter  0x3f94,0xe6
   1400248a4:	lods   al,BYTE PTR ds:[rsi]
   1400248a5:	jno    0x1400248c6
   1400248a7:	lods   eax,DWORD PTR ds:[rsi]
   1400248a8:	lods   al,BYTE PTR ds:[rsi]
   1400248a9:	jno    0x1400248c9
   1400248ab:	(bad)  
	...
   1400248ec:	add    BYTE PTR [rax],al
   1400248ee:	rex.WRX add QWORD PTR [rax],r12
   1400248f1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400248f2:	dec    BYTE PTR [rsi-0x4b0053dd]
   1400248f8:	test   al,0xf1
   1400248fb:	pushf  
   1400248fc:	add    BYTE PTR [rax],al
   1400248fe:	rex.WRB (bad) 
   140024900:	add    BYTE PTR [rax],al
   140024902:	push   rbp
   140024903:	or     DWORD PTR [rax],eax
	...
   1400249c5:	add    BYTE PTR [rax],al
   1400249c7:	add    BYTE PTR [rdi-0x49c7de87],dh
   1400249cd:	jp     0x1400249f1
   1400249cf:	stos   BYTE PTR es:[rdi],al
   1400249d0:	fsubr  DWORD PTR [rdi-0x250c1aa4]
   1400249d6:	test   bh,dh
   1400249d8:	stc    
   1400249d9:	out    0x8e,eax
   1400249db:	(bad)  
   1400249dc:	cli    
   1400249dd:	in     eax,dx
   1400249de:	mov    ?,edi
   1400249e0:	sti    
   1400249e1:	icebp  
   1400249e2:	mov    ?,edi
   1400249e4:	cld    
   1400249e5:	icebp  
   1400249e6:	(bad)  
   1400249e7:	(bad)  
   1400249e8:	cld    
   1400249e9:	repz xchg ecx,eax
   1400249eb:	(bad)  
   1400249ec:	std    
   1400249ed:	not    DWORD PTR [rbp-0x68080201]
   1400249f3:	(bad)  
   1400249f4:	std    
   1400249f5:	clc    
   1400249f6:	pushf  
   1400249f7:	(bad)  
   1400249f8:	(bad)  
   1400249f9:	stc    
   1400249fa:	lahf   
   1400249fb:	(bad)  
   1400249fc:	(bad)  
   1400249fd:	cli    
   1400249fe:	movabs ds:0xa9fbfcffa5fafeff,al
   140024a07:	(bad)  
   140024a08:	(bad)  
   140024a0a:	(bad)  
   140024a0d:	cli    
   140024a0e:	stc    
   140024a0f:	jmp    QWORD PTR [rdx-0x56000002]
   140024a15:	(bad)  
   140024a16:	(bad)  
   140024a17:	jmp    QWORD PTR [rdi-0x5b000002]
   140024a1d:	(bad)  
   140024a1e:	(bad)  
   140024a1f:	call   FWORD PTR [rsi+rdi*8-0xa810001]
   140024a26:	(bad)  
   140024a27:	jmp    QWORD PTR [rsi+rbp*8-0x1]
   140024a2b:	call   QWORD PTR [rax-0x19]
   140024a2e:	(bad)  
   140024a2f:	inc    DWORD PTR [rcx-0x1f]
   140024a32:	(bad)  
   140024a33:	(bad)  
   140024a34:	cmp    al,0xda
   140024a36:	(bad)  
   140024a37:	push   QWORD PTR [rsi]
   140024a39:	(bad)  
   140024a3a:	(bad)  
   140024a3b:	push   QWORD PTR [rbx]
   140024a3d:	sar    edi,1
   140024a3f:	push   QWORD PTR [rax]
   140024a41:	int    0xff
   140024a43:	push   QWORD PTR [rax]
   140024a45:	enter  0xffff,0x2f
   140024a49:	(bad)  
   140024a4c:	(bad)  
   140024a4d:	ret    0xffff
   140024a50:	xor    edx,eax
   140024a52:	(bad)  
   140024a53:	push   QWORD PTR [rip+0x3dfffec3]        # 0x17e02491c
   140024a59:	(bad)  
   140024a5a:	(bad)  
   140024a5b:	dec    DWORD PTR [rdx-0x35]
   140024a5e:	cld    
   140024a5f:	push   QWORD PTR [rax-0x31]
   140024a62:	in     eax,dx
   140024a63:	push   QWORD PTR [rbx-0x15005730]
   140024a69:	(bad)  
   140024a6a:	outs   dx,BYTE PTR ds:[rsi]
   140024a6b:	(bad)  
   140024a6c:	out    dx,al
   140024a6d:	(bad)  
   140024a6e:	outs   dx,DWORD PTR ds:[rsi]
   140024a6f:	push   rdx
   140024a71:	(bad)  
   140024a72:	ins    DWORD PTR es:[rdi],dx
   140024a73:	push   rsp
   140024a75:	(bad)  
   140024a76:	ins    BYTE PTR es:[rdi],dx
   140024a77:	push   rbp
   140024a79:	shr    DWORD PTR [rbx-0x1],cl
   140024a7c:	repz shr DWORD PTR [rax-0x1],cl
   140024a80:	icebp  
   140024a81:	shl    DWORD PTR [rsi-0x1],1
   140024a84:	icebp  
   140024a85:	int    0x65
   140024a87:	(bad)  
   140024a88:	out    dx,al
   140024a89:	retf   
   140024a8a:	movsxd edi,edi
   140024a8c:	in     al,dx
   140024a8d:	(bad)  
   140024a8e:	fs (bad) 
   140024a90:	(bad)  
   140024a91:	ret    0xff62
   140024a94:	out    0xbc,al
   140024a96:	(bad)  
   140024a97:	(bad)  
   140024a98:	rcr    BYTE PTR [rbp+0x74afeb49],1
   140024a9e:	and    al,ah
   140024aa0:	lods   al,BYTE PTR ds:[rsi]
   140024aa1:	jno    0x140024ac1
   140024aa3:	(bad)  
   140024aa4:	lods   al,BYTE PTR ds:[rsi]
   140024aa5:	jno    0x140024ac5
   140024aa7:	add    eax,0x0
	...
   140024aec:	or     eax,0x22068829
   140024af1:	lods   al,BYTE PTR ds:[rsi]
   140024af2:	push   QWORD PTR [rsi-0x440053dd]
   140024af8:	rex.XB cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140024afa:	out    dx,eax
   140024afb:	(bad)  
   140024afc:	add    BYTE PTR [rax],al
   140024afe:	rex.WRXB sbb al,0x0
   140024b01:	add    BYTE PTR [rbp+0x8],dl
	...
   140024bcc:	mov    bh,0x79
   140024bce:	and    DWORD PTR [rip+0x562179b6],eax        # 0x19623c58a
   140024bd4:	mov    eax,0xddba257c
   140024bd9:	mov    bl,0x62
   140024bdb:	call   0x13d8d2ad4
   140024be0:	clc    
   140024be1:	jmp    0x12cfd4b76
   140024be6:	mov    ?,edi
   140024be8:	sti    
   140024be9:	lock mov ?,edi
   140024bec:	cld    
   140024bed:	repnz xchg ecx,eax
   140024bef:	(bad)  
   140024bf0:	std    
   140024bf1:	cmc    
   140024bf2:	xchg   ecx,eax
   140024bf3:	(bad)  
   140024bf4:	std    
   140024bf5:	not    BYTE PTR [rdi+rdi*8-0x690803]
   140024bfc:	std    
   140024bfd:	clc    
   140024bfe:	pushf  
   140024bff:	(bad)  
   140024c00:	std    
   140024c01:	clc    
   140024c02:	sahf   
   140024c03:	(bad)  
   140024c04:	(bad)  
   140024c05:	stc    
   140024c06:	movabs ds:0xaffbf0ffa4fafeff,eax
   140024c0f:	inc    ecx
   140024c11:	sti    
   140024c12:	(bad)  
   140024c13:	call   FWORD PTR [rcx-0x56000104]
   140024c19:	(bad)  
   140024c1a:	(bad)  
   140024c1b:	jmp    FWORD PTR [rcx-0x5a000002]
   140024c21:	(bad)  
   140024c22:	(bad)  
   140024c23:	jmp    QWORD PTR [rcx-0x71000002]
   140024c29:	sti    
   140024c2a:	(bad)  
   140024c2b:	push   QWORD PTR [rax-0xe]
   140024c2e:	(bad)  
   140024c2f:	call   FWORD PTR [rdx-0x18]
   140024c32:	(bad)  
   140024c33:	dec    DWORD PTR [rdx-0x1f]
   140024c36:	(bad)  
   140024c37:	inc    DWORD PTR [rax-0x23]
   140024c3a:	(bad)  
   140024c3b:	(bad)  
   140024c3c:	cmp    dl,dh
   140024c3e:	(bad)  
   140024c3f:	push   QWORD PTR [rip+0x33fffed3]        # 0x174024b18
   140024c45:	int    0xfe
   140024c47:	push   QWORD PTR [rax]
   140024c49:	retf   0xfffe
   140024c4c:	xor    bh,al
   140024c4e:	(bad)  
   140024c4f:	jmp    FWORD PTR [rdi]
   140024c51:	ret    
   140024c52:	(bad)  
   140024c53:	push   QWORD PTR [rax]
   140024c55:	ret    0xfffe
   140024c58:	xor    eax,ebx
   140024c5a:	std    
   140024c5b:	push   QWORD PTR [rdi]
   140024c5d:	(bad)  
   140024c60:	cmp    eax,0x4efffdc9
   140024c65:	retf   
   140024c66:	sti    
   140024c67:	(bad)  
   140024c68:	jns    0x140024c37
   140024c6a:	out    0xff,al
   140024c6c:	mov    esi,0xe8ff98cb
   140024c71:	retf   0xff67
   140024c74:	jmp    0x140024c42
   140024c76:	data16 (bad) 
   140024c78:	in     eax,dx
   140024c79:	retf   
   140024c7a:	addr32 (bad) 
   140024c7c:	out    dx,al
   140024c7d:	int3   
   140024c7e:	gs (bad) 
   140024c80:	in     eax,dx
   140024c81:	retf   
   140024c82:	addr32 (bad) 
   140024c84:	in     al,dx
   140024c85:	(bad)
   140024c88:	jmp    0x140024c4d
   140024c8a:	jmp    di
   140024c8d:	mov    esp,0xa3d2fe62
   140024c92:	rex.WRX in eax,dx
   140024c94:	mov    cl,0x79
   140024c96:	es int 0xae
   140024c99:	jae    0x140024cba
   140024c9b:	jle    0x140024c4b
   140024c9d:	je     0x140024cc0
   140024c9f:	adc    eax,DWORD PTR [rax]
	...
   140024ce9:	add    BYTE PTR [rbp+0x1],dl
   140024cec:	and    dl,BYTE PTR [rax-0x50d9c013]
   140024cf2:	inc    edi
   140024cf4:	and    eax,0x46c4feaa
   140024cf9:	movabs ds:0x185200008ce9,eax
   140024d02:	push   rbp
   140024d03:	(bad)  
	...
   140024dd4:	mov    dh,0x79
   140024dd6:	and    DWORD PTR [rsi+rsi*4],ecx
   140024dd9:	jns    0x140024dfc
   140024ddb:	imul   edi,DWORD PTR [rax-0x2540db85],0xffffffae
   140024de2:	pop    rbp
   140024de3:	in     al,0xf1
   140024de5:	xlat   BYTE PTR ds:[rbx]
   140024de6:	test   edx,edi
   140024de8:	mul    edi
   140024dea:	(bad)  
   140024deb:	(bad)  
   140024dec:	stc    
   140024ded:	jmp    0x140024d80
   140024def:	(bad)  
   140024df0:	cli    
   140024df1:	lock nop
   140024df3:	(bad)  
   140024df4:	cld    
   140024df5:	pause  
   140024df7:	(bad)  
   140024df8:	cld    
   140024df9:	hlt    
   140024dfa:	xchg   edx,eax
   140024dfb:	(bad)  
   140024dfc:	std    
   140024dfd:	cmc    
   140024dfe:	xchg   esi,eax
   140024dff:	(bad)  
   140024e00:	std    
   140024e01:	not    DWORD PTR [rdi+rdi*8-0x650803]
   140024e08:	std    
   140024e09:	clc    
   140024e0a:	sahf   
   140024e0b:	(bad)  
   140024e0c:	(bad)  
   140024e0d:	stc    
   140024e0e:	movabs al,ds:0xb6fce7ffa4fafdff
   140024e17:	push   QWORD PTR [rax-0x62001b07]
   140024e1d:	std    
   140024e1e:	(bad)  
   140024e1f:	jmp    FWORD PTR [rdx-0x58000103]
   140024e25:	std    
   140024e26:	(bad)  
   140024e27:	jmp    QWORD PTR [rbp+rdi*8-0x2620002]
   140024e2e:	(bad)  
   140024e2f:	inc    DWORD PTR [rbx+0x69fffef6]
   140024e35:	in     eax,dx
   140024e36:	(bad)  
   140024e37:	call   QWORD PTR [rsi+riz*8-0x2]
   140024e3b:	inc    DWORD PTR [rbp-0x20]
   140024e3e:	(bad)  
   140024e3f:	(bad)  
   140024e40:	cmp    eax,0x36fffed9
   140024e45:	sar    esi,cl
   140024e47:	push   QWORD PTR [rbx]
   140024e49:	sar    dh,1
   140024e4b:	push   QWORD PTR [rax]
   140024e4d:	int3   
   140024e4e:	(bad)  
   140024e4f:	jmp    FWORD PTR [rsi]
   140024e51:	enter  0xfffe,0x2e
   140024e55:	(bad)  
   140024e56:	(bad)  
   140024e57:	jmp    FWORD PTR [rdi]
   140024e59:	ret    0xfffe
   140024e5c:	xor    edx,eax
   140024e5e:	std    
   140024e5f:	push   QWORD PTR [rcx+rax*8]
   140024e62:	std    
   140024e63:	(bad)  
   140024e64:	cmp    ebp,eax
   140024e66:	std    
   140024e67:	(bad)  
   140024e68:	ds enter 0xfffd,0x51
   140024e6d:	retf   0xfffa
   140024e70:	(bad)  
   140024e71:	retf   
   140024e72:	fcos   
   140024e74:	mov    esp,0xc1e2ff87
   140024e7a:	fs jmp rbx
   140024e7d:	mov    edi,0xbee3ff65
   140024e82:	data16 (bad) 
   140024e84:	fbstp  TBYTE PTR [rdi-0x6232029f]
   140024e8a:	rex.WB (bad) 
   140024e8c:	mov    al,0x77
   140024e8e:	and    al,0xc9
   140024e90:	mov    al,0x75
   140024e92:	and    DWORD PTR [rax+0x222276af],eax
	...
   140024ee8:	add    BYTE PTR [rax],al
   140024eea:	push   rdx
   140024eeb:	(bad)  
   140024eec:	and    al,0xa9
   140024eee:	std    
   140024eef:	movabs eax,ds:0xcdfdaa27cfffaf26
   140024ef8:	rex.R cwde 
   140024efa:	fidiv  WORD PTR [rdi+0x0]
   140024efd:	add    BYTE PTR [rbx+0x12],dl
   140024f00:	add    BYTE PTR [rax],al
   140024f02:	push   rbp
   140024f03:	add    eax,DWORD PTR [rax]
	...
   140024fd9:	add    BYTE PTR [rax],al
   140024fdb:	add    BYTE PTR [rsi-0x49f3de87],dh
   140024fe1:	js     0x140025003
   140024fe3:	pop    rcx
   140024fe4:	mov    dh,0x79
   140024fe6:	and    DWORD PTR [rdi-0x21ae5c2f],ebp
   140024fec:	jmp    0x140024fb7
   140024fee:	js     0x140024fe3
   140024ff0:	mul    dl
   140024ff2:	mov    ?,edi
   140024ff4:	clc    
   140024ff5:	(bad)  
   140024ff6:	xchg   edx,eax
   140024ff7:	(bad)  
   140024ff8:	cli    
   140024ff9:	in     eax,dx
   140024ffa:	xchg   ecx,eax
   140024ffb:	(bad)  
   140024ffc:	sti    
   140024ffd:	icebp  
   140024ffe:	xchg   esp,eax
   140024fff:	(bad)  
   140025000:	cld    
   140025001:	repnz xchg esp,eax
   140025003:	(bad)  
   140025004:	cld    
   140025005:	hlt    
   140025006:	xchg   esi,eax
   140025007:	(bad)  
   140025008:	cld    
   140025009:	cmc    
   14002500a:	xchg   esi,eax
   14002500b:	(bad)  
   14002500c:	std    
   14002500d:	cmc    
   14002500e:	cdq    
   14002500f:	(bad)  
   140025010:	std    
   140025011:	clc    
   140025012:	(bad)  
   140025013:	(bad)  
   140025014:	std    
   140025015:	clc    
   140025016:	lahf   
   140025017:	(bad)  
   140025018:	cli    
   140025019:	clc    
   14002501a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002501b:	(bad)  
   14002501c:	fdiv   st(3),st
   14002501e:	mov    esi,0xf0faa7ff
   140025023:	jmp    QWORD PTR [rbx-0x56000103]
   140025029:	cld    
   14002502a:	(bad)  
   14002502b:	jmp    QWORD PTR [rbp-0x5d000104]
   140025031:	cld    
   140025032:	(bad)  
   140025033:	call   QWORD PTR [rsi+0x79fffefb]
   140025039:	repnz (bad) 
   14002503b:	jmp    QWORD PTR [rax-0x15]
   14002503e:	(bad)  
   14002503f:	dec    DWORD PTR [rdi-0x1d]
   140025042:	(bad)  
   140025043:	inc    DWORD PTR [rdx-0x23]
   140025046:	(bad)  
   140025047:	(bad)  
   140025048:	cmp    edx,edi
   14002504a:	(bad)  
   14002504b:	push   QWORD PTR [rip+0x32fffed2]        # 0x173024f23
   140025051:	(bad)  
   140025052:	(bad)  
   140025053:	push   QWORD PTR [rax]
   140025055:	retf   0xfffe
   140025058:	xor    bh,al
   14002505a:	cld    
   14002505b:	push   QWORD PTR [rax]
   14002505d:	(bad)  
   14002505e:	cld    
   14002505f:	push   QWORD PTR [rcx]
   140025061:	sar    esp,0xff
   140025064:	xor    eax,edx
   140025066:	cld    
   140025067:	push   QWORD PTR [rip+0x39fffcc2]        # 0x17a024d2f
   14002506d:	ret    
   14002506e:	sti    
   14002506f:	inc    DWORD PTR [rax-0x37]
   140025072:	cld    
   140025073:	call   QWORD PTR [rbx+rcx*8-0x7]
   140025077:	inc    DWORD PTR [rdi+rax*8-0x5155002c]
   14002507e:	mov    bh,al
   140025080:	mov    bh,0x8a
   140025082:	rex.X out 0xa1,eax
   140025085:	ins    BYTE PTR es:[rdi],dx
   140025086:	and    al,0xc7
   140025088:	cwde   
   140025089:	sub    BYTE PTR [eax+0x75],bh
   14002508d:	push   rdx
   14002508e:	cmp    DWORD PTR [rdi],ebx
   140025090:	add    BYTE PTR [rax],al
   140025092:	push   rbp
   140025093:	(bad)  
   140025094:	add    BYTE PTR [rax],al
   140025096:	push   rbp
   140025097:	add    al,BYTE PTR [rax]
	...
   1400250e1:	add    BYTE PTR [rbp+0x1],dl
   1400250e4:	add    BYTE PTR [rax],al
   1400250e6:	push   rbp
   1400250e7:	add    eax,0x49e99126
   1400250ec:	sub    DWORD PTR [rdx-0x50d92b01],esi
   1400250f2:	call   rbx
   1400250f4:	xor    BYTE PTR [rdx-0x7ec22d06],ch
   1400250fa:	enter  0x51,0x0
   1400250fe:	push   rbp
   1400250ff:	or     al,0x0
   140025101:	add    BYTE PTR [rbp+0x1],dl
	...
   1400251e8:	mov    dh,0x78
   1400251ea:	and    BYTE PTR [rsi+rsi*4+0x79],al
   1400251ee:	and    DWORD PTR [rsi-0x32d27c42],ecx
   1400251f4:	(bad)  
   1400251f5:	test   eax,0xcaece156
   1400251fa:	jns    0x1400251ef
   1400251fc:	mul    esp
   1400251fe:	(bad)  
   1400251ff:	(bad)  
   140025200:	stc    
   140025201:	jmp    0x12cfe5198
   140025206:	xchg   esp,eax
   140025207:	(bad)  
   140025208:	sti    
   140025209:	in     eax,dx
   14002520a:	xchg   ebp,eax
   14002520b:	(bad)  
   14002520c:	cld    
   14002520d:	icebp  
   14002520e:	xchg   edi,eax
   14002520f:	(bad)  
   140025210:	cld    
   140025211:	repz cdq 
   140025213:	(bad)  
   140025214:	cld    
   140025215:	hlt    
   140025216:	cdq    
   140025217:	(bad)  
   140025218:	std    
   140025219:	hlt    
   14002521a:	pushf  
   14002521b:	(bad)  
   14002521c:	std    
   14002521d:	cmc    
   14002521e:	lahf   
   14002521f:	push   rsp
   140025221:	mul    BYTE PTR [rdi-0x41062501]
   140025227:	jmp    QWORD PTR [rdi-0x5d000d07]
   14002522d:	sti    
   14002522e:	(bad)  
   14002522f:	jmp    QWORD PTR [rsi-0x5b000105]
   140025235:	sti    
   140025236:	(bad)  
   140025237:	call   FWORD PTR [rdi-0x74000105]
   14002523d:	idiv   esi
   14002523f:	push   QWORD PTR [rcx-0x13]
   140025242:	(bad)  
   140025243:	call   FWORD PTR [rbx-0x19]
   140025246:	std    
   140025247:	dec    DWORD PTR [rax+riz*8-0x4]
   14002524b:	inc    DWORD PTR [rax-0x28]
   14002524e:	cld    
   14002524f:	(bad)  
   140025250:	cmp    esp,edx
   140025252:	cld    
   140025253:	push   QWORD PTR [rsi]
   140025255:	sar    ah,1
   140025257:	push   QWORD PTR [rbx]
   140025259:	int    0xfc
   14002525b:	push   QWORD PTR [rax]
   14002525d:	leave  
   14002525e:	cld    
   14002525f:	push   QWORD PTR [rax]
   140025261:	(bad)  
   140025264:	(bad)  
   140025265:	ret    0xfffc
   140025268:	xor    al,cl
   14002526a:	cli    
   14002526b:	push   QWORD PTR [rsi]
   14002526d:	sar    cl,0xff
   140025270:	xor    eax,0x3afffac0
   140025275:	sar    ecx,0xfe
   140025278:	rex.B (bad) 
   14002527a:	stc    
   14002527b:	(bad)  
   14002527c:	push   rax
   14002527d:	leave  
   14002527e:	clc    
   14002527f:	cld    
   140025280:	movsxd eax,ebp
   140025282:	out    dx,al
   140025283:	jrcxz  0x1400252e5
   140025285:	mov    cl,0xdf
   140025287:	mov    ebx,DWORD PTR [rsi]
   140025289:	(bad)  
   14002528a:	sub    BYTE PTR [rsi],0x0
   14002528d:	add    BYTE PTR [rbp+0x1f],dl
   140025290:	add    BYTE PTR [rax],al
   140025292:	push   rbp
   140025293:	sbb    BYTE PTR [rax],al
   140025295:	add    BYTE PTR [rbp+0xf],dl
   140025298:	add    BYTE PTR [rax],al
   14002529a:	push   rbp
   14002529b:	or     DWORD PTR [rax],eax
   14002529d:	add    BYTE PTR [rbp+0x6],dl
   1400252a0:	add    BYTE PTR [rax],al
   1400252a2:	push   rbp
   1400252a3:	add    eax,DWORD PTR [rax]
   1400252a5:	add    BYTE PTR [rbp+0x1],dl
	...
   1400252dc:	add    BYTE PTR [rax],al
   1400252de:	push   rbp
   1400252df:	add    al,BYTE PTR [rax]
   1400252e1:	add    BYTE PTR [rbp+0x8],dl
   1400252e4:	(bad)  
   1400252e5:	ins    BYTE PTR es:[rdi],dx
   1400252e6:	shl    DWORD PTR [rax],0x2a
   1400252e9:	mov    ch,0xff
   1400252eb:	retf   0xb229
   1400252ee:	call   rdi
   1400252f0:	and    al,0xad
   1400252f2:	call   rdi
   1400252f4:	cmp    ebp,DWORD PTR [rdi+rsi*8+0x782e19c9]
   1400252fb:	and    al,BYTE PTR [rax]
   1400252fd:	add    BYTE PTR [rbp+0x7],dl
	...
   1400253f0:	mov    bh,0x7b
   1400253f2:	and    edx,DWORD PTR [rax]
   1400253f4:	mov    bh,0x7a
   1400253f6:	and    cl,BYTE PTR [rsi-0x48]
   1400253f9:	jp     0x14002541d
   1400253fb:	mov    ?,WORD PTR [rcx-0x2f38d682]
   140025401:	movabs al,ds:0xd0efea66b7e1dd4d
   14002540a:	jg     0x140025401
   14002540c:	clc    
   14002540d:	in     al,0x91
   14002540f:	(bad)  
   140025410:	stc    
   140025411:	out    0x95,al
   140025413:	(bad)  
   140025414:	cli    
   140025415:	(bad)  
   140025416:	xchg   edi,eax
   140025417:	(bad)  
   140025418:	sti    
   140025419:	out    dx,al
   14002541a:	cwde   
   14002541b:	(bad)  
   14002541c:	cld    
   14002541d:	in     eax,dx
   14002541e:	pushf  
   14002541f:	(bad)  
   140025420:	cld    
   140025421:	out    dx,eax
   140025422:	lahf   
   140025423:	(bad)  
   140025424:	cld    
   140025425:	lock movabs al,ds:0xc1f7d6ffa9f2f1ff
   14002542f:	call   FWORD PTR [rsi-0x5e000608]
   140025435:	cli    
   140025436:	cld    
   140025437:	jmp    QWORD PTR [rbp-0x5c000307]
   14002543d:	cli    
   14002543e:	cld    
   14002543f:	call   FWORD PTR [rbx-0x7e000306]
   140025445:	repz std 
   140025447:	jmp    FWORD PTR [rbx-0x14]
   14002544a:	std    
   14002544b:	call   FWORD PTR [rcx-0x1d]
   14002544e:	cld    
   14002544f:	dec    DWORD PTR [rbx-0x23]
   140025452:	cld    
   140025453:	inc    DWORD PTR [rcx-0x29]
   140025456:	cld    
   140025457:	(bad)  
   140025458:	cmp    edx,ebx
   14002545a:	cld    
   14002545b:	push   QWORD PTR [rsi]
   14002545d:	(bad)  
   14002545e:	cli    
   14002545f:	push   QWORD PTR [rip+0x34fffac9]        # 0x175024f2e
   140025465:	(bad)  
   140025468:	xor    esp,eax
   14002546a:	stc    
   14002546b:	(bad)  
   14002546c:	xor    al,cl
   14002546e:	clc    
   14002546f:	(bad)  
   140025470:	xor    al,dl
   140025472:	cli    
   140025473:	cld    
   140025474:	xor    eax,ebx
   140025476:	sti    
   140025477:	cli    
   140025478:	xor    eax,0x39f6fdc5
   14002547d:	enter  0xf4ff,0x3c
   140025481:	retf   0xf3ff
   140025484:	rex.WB int3 
   140025486:	std    
   140025487:	icebp  
   140025488:	pop    rax
   140025489:	leave  
   14002548a:	stc    
   14002548b:	in     al,0x5c
   14002548d:	mov    ebx,0x6d38a2ed
   140025492:	stos   DWORD PTR es:[rdi],eax
   140025493:	rex.RX add BYTE PTR [rax],r8b
   140025496:	push   rbp
   140025497:	and    al,0x0
   140025499:	add    BYTE PTR [rbp+0x1e],dl
   14002549c:	add    BYTE PTR [rax],al
   14002549e:	push   rbp
   14002549f:	(bad)  
   1400254a0:	add    BYTE PTR [rax],al
   1400254a2:	push   rbp
   1400254a3:	adc    DWORD PTR [rax],eax
   1400254a5:	add    BYTE PTR [rbp+0xb],dl
   1400254a8:	add    BYTE PTR [rax],al
   1400254aa:	push   rbp
   1400254ab:	or     BYTE PTR [rax],al
   1400254ad:	add    BYTE PTR [rbp+0x5],dl
   1400254b0:	add    BYTE PTR [rax],al
   1400254b2:	push   rbp
   1400254b3:	add    eax,DWORD PTR [rax]
   1400254b5:	add    BYTE PTR [rbp+0x1],dl
	...
   1400254d0:	add    BYTE PTR [rax],al
   1400254d2:	push   rbp
   1400254d3:	add    DWORD PTR [rax],eax
   1400254d5:	add    BYTE PTR [rbp+0x4],dl
   1400254d8:	add    BYTE PTR [rax],al
   1400254da:	push   rbp
   1400254db:	or     BYTE PTR [rax],al
   1400254dd:	add    BYTE PTR [rbp+0xf],dl
   1400254e0:	sub    al,0x83
   1400254e2:	rol    BYTE PTR [rbp+0x2e],cl
   1400254e5:	mov    eax,0xb52accfd
   1400254ea:	(bad)  
   1400254eb:	fisub  DWORD PTR [rsi]
   1400254ed:	mov    al,0xff
   1400254ef:	fldenv [rsi]
   1400254f1:	lods   eax,DWORD PTR ds:[rsi]
   1400254f2:	(bad)  
   1400254f3:	fiadd  DWORD PTR [rdi-0x5c]
   1400254f6:	jmp    0x140025488
   1400254f8:	add    BYTE PTR [rax],al
   1400254fa:	push   rbp
   1400254fb:	adc    DWORD PTR [rax],eax
   1400254fd:	add    BYTE PTR [rbp+0x3],dl
	...
   1400255fc:	mov    ecx,0xb70e257d
   140025601:	jnp    0x140025626
   140025603:	cmp    esi,DWORD PTR [rdi-0x4797da83]
   140025609:	jge    0x140025631
   14002560b:	cwde   
   14002560c:	mov    ecx,0xc9c3277e
   140025611:	xchg   edi,eax
   140025612:	rex.RB fcom st(4)
   140025615:	test   al,0x58
   140025617:	(bad)  
   140025619:	mov    dh,0x68
   14002561b:	call   0x130791a06
   140025620:	lock rol DWORD PTR [rsi-0x74270c0a],cl
   140025627:	clc    
   140025628:	repz fimul DWORD PTR [rdi-0x661c0807]
   14002562f:	cld    
   140025630:	out    dx,eax
   140025631:	(bad)  
   140025632:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140025633:	call   rax
   140025635:	icebp  
   140025636:	sar    bh,0x97
   140025639:	repz stc 
   14002563b:	call   FWORD PTR [rbp-0x5b000308]
   140025641:	idiv   ebx
   140025643:	jmp    QWORD PTR [rdx-0x69000409]
   140025649:	idiv   bl
   14002564b:	(bad)  
   14002564c:	jle    0x14002563b
   14002564e:	sti    
   14002564f:	jmp    FWORD PTR [rbx-0x18]
   140025652:	cli    
   140025653:	call   FWORD PTR [rdx-0x1f]
   140025656:	sti    
   140025657:	dec    BYTE PTR [rbx+rbx*8-0x6]
   14002565b:	inc    BYTE PTR [rcx-0x2b]
   14002565e:	cli    
   14002565f:	(bad)  
   140025660:	cmp    dl,dl
   140025662:	cli    
   140025663:	cld    
   140025664:	(bad)  
   140025665:	sar    dl,1
   140025667:	sti    
   140025668:	xor    al,0xce
   14002566a:	cld    
   14002566b:	clc    
   14002566c:	xor    cl,ah
   14002566e:	(bad)  
   14002566f:	div    BYTE PTR [rcx]
   140025671:	retf   0xf5ff
   140025674:	xor    eax,ecx
   140025676:	push   rbx
   140025678:	xor    eax,ecx
   14002567a:	push   rdx
   14002567c:	xor    eax,edi
   14002567e:	push   rax
   140025680:	ss enter 0xefff,0x39
   140025685:	retf   0xedff
   140025688:	cmp    al,0xcb
   14002568a:	(bad)  
   14002568b:	jmp    0x1400256cd
   14002568d:	retf   0xeafe
   140025690:	rex.WRX retf 0xe9fb
   140025694:	pop    rax
   140025695:	(bad)  
   140025696:	test   edx,0x94ebb559
   14002569c:	rex.RXB mov r8d,cs
   14002569f:	pop    rcx
   1400256a0:	add    BYTE PTR [rax],al
   1400256a2:	push   rbp
   1400256a3:	add    BYTE PTR es:[rax],al
   1400256a6:	push   rbp
   1400256a7:	and    DWORD PTR [rax],eax
   1400256a9:	add    BYTE PTR [rbp+0x1c],dl
   1400256ac:	add    BYTE PTR [rax],al
   1400256ae:	push   rbp
   1400256af:	adc    eax,0x11550000
   1400256b4:	add    BYTE PTR [rax],al
   1400256b6:	push   rbp
   1400256b7:	(bad)  
   1400256b8:	add    BYTE PTR [rax],al
   1400256ba:	push   rbp
   1400256bb:	or     eax,0xb550000
   1400256c0:	add    BYTE PTR [rax],al
   1400256c2:	push   rbp
   1400256c3:	or     al,BYTE PTR [rax]
   1400256c5:	add    BYTE PTR [rbp+0xa],dl
   1400256c8:	add    BYTE PTR [rax],al
   1400256ca:	push   rbp
   1400256cb:	or     al,BYTE PTR [rax]
   1400256cd:	add    BYTE PTR [rbp+0xb],dl
   1400256d0:	add    BYTE PTR [rax],al
   1400256d2:	push   rbp
   1400256d3:	(bad)  
   1400256d4:	add    BYTE PTR [rax],al
   1400256d6:	push   rbp
   1400256d7:	adc    al,0x1a
   1400256d9:	(bad)  
   1400256da:	(bad)  
   1400256db:	es (bad) 
   1400256dd:	test   eax,0xbd2f7ff3
   1400256e2:	(bad)  
   1400256e3:	fisubr DWORD PTR [rdi+rsi*4]
   1400256e6:	(bad)  
   1400256e7:	frstor [rdi]
   1400256e9:	mov    dl,0xff
   1400256eb:	frstor [rdi+rbp*4]
   1400256ee:	(bad)  
   1400256ef:	fnsave [rip+0x3ddafaad]        # 0x17ddd51a2
   1400256f5:	jle    0x1400256b8
   1400256f7:	add    BYTE PTR ds:[rax],al
   1400256fa:	push   rbp
   1400256fb:	or     BYTE PTR [rax],al
	...
   140025809:	add    BYTE PTR [rax],al
   14002580b:	add    bh,al
   14002580d:	xchg   edi,eax
   14002580e:	rex.XB add edi,DWORD PTR [r9-0x45d5d781]
   140025815:	jg     0x140025840
   140025817:	rex.RXB mov r11d,0xbb5f2d82
   14002581d:	test   DWORD PTR [rax],esi
   14002581f:	jle    0x1400257de
   140025821:	xchg   DWORD PTR [rdx],esi
   140025823:	movabs al,ds:0xac3c90c2a8358bbf
   14002582c:	ret    
   14002582d:	xchg   ecx,eax
   14002582e:	ds ret 0x94c5
   140025832:	rex.X ror al,cl
   140025835:	cwde   
   140025836:	rex.W (bad) 
   140025838:	vandnps xmm2,xmm11,xmm7
   14002583c:	mov    cl,0xba
   14002583e:	jp     0x140025812
   140025840:	(bad)  
   140025841:	fcmovnu st,st(7)
   140025843:	jmp    0x13afd4fe2
   140025848:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140025849:	clc    
   14002584a:	cli    
   14002584b:	std    
   14002584c:	movabs eax,ds:0x7ffafbf998fbfaf8
   140025855:	repnz cld 
   140025857:	stc    
   140025858:	push   0xffffffffffffffec
   14002585a:	std    
   14002585b:	clc    
   14002585c:	pop    rdx
   14002585d:	out    0xfe,eax
   14002585f:	test   BYTE PTR [rsi-0x1f],0xff
   140025863:	cmc    
   140025864:	rex.XB fdiv st(7),st
   140025867:	hlt    
   140025868:	cmp    al,0xd7
   14002586a:	push   rbx
   14002586c:	cmp    esp,edx
   14002586e:	push   rbx
   140025870:	xor    al,0xd1
   140025872:	push   rdx
   140025874:	xor    ecx,esi
   140025876:	push   rax
   140025878:	xor    ebx,ecx
   14002587a:	(bad)  
   14002587b:	out    dx,eax
   14002587c:	xor    ecx,edx
   14002587e:	(bad)  
   14002587f:	out    dx,al
   140025880:	xor    ecx,eax
   140025882:	(bad)  
   140025883:	in     al,dx
   140025884:	xor    ecx,eax
   140025886:	(bad)  
   140025887:	(bad)  
   140025888:	xor    al,0xc8
   14002588a:	(bad)  
   14002588b:	jmp    0x1290222c7
   140025890:	cmp    edx,ecx
   140025892:	jmp    rdi
   140025894:	cmp    al,0xcb
   140025896:	jmp    rsi
   140025898:	rex int3 
   14002589a:	(bad)  
   14002589b:	in     al,0x4c
   14002589d:	retf   
   14002589e:	cld    
   14002589f:	in     eax,0x54
   1400258a1:	retf   0xd8f9
   1400258a4:	push   rdi
   1400258a5:	shl    dl,0xad
   1400258a8:	push   rcx
   1400258a9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400258aa:	fnsave [rcx+rax*2-0x7b]
   1400258ae:	(bad)  
   1400258af:	push   rsp
   1400258b0:	sub    DWORD PTR [rdx-0x68],edx
   1400258b3:	cmp    BYTE PTR [rax],al
   1400258b5:	add    BYTE PTR [rbp+0x26],dl
   1400258b8:	add    BYTE PTR [rax],al
   1400258ba:	push   rbp
   1400258bb:	and    al,0x0
   1400258bd:	add    BYTE PTR [rbp+0x22],dl
   1400258c0:	add    BYTE PTR [rax],al
   1400258c2:	push   rbp
   1400258c3:	and    BYTE PTR [rax],al
   1400258c5:	add    BYTE PTR [rbp+0x1f],dl
   1400258c8:	add    BYTE PTR [rax],al
   1400258ca:	push   rbp
   1400258cb:	and    BYTE PTR [rsi],cl
   1400258cd:	and    DWORD PTR [rbx+0x28],esi
   1400258d0:	xchg   r15d,eax
   1400258d2:	fstp   DWORD PTR [rbp+0x40]
   1400258d5:	mov    ah,0xf3
   1400258d7:	(bad)  
   1400258d8:	ss ret 0xd6fe
   1400258dc:	xor    BYTE PTR [rdi-0x46d31f01],bh
   1400258e2:	(bad)  
   1400258e3:	fisub  WORD PTR [rdi]
   1400258e5:	mov    ch,0xff
   1400258e7:	fbld   TBYTE PTR [rsi]
   1400258e9:	mov    dl,0xff
   1400258eb:	fisub  WORD PTR [rdi]
   1400258ed:	lods   eax,DWORD PTR ds:[rsi]
   1400258ee:	(bad)  
   1400258ef:	fild   WORD PTR [rdi-0x57]
   1400258f2:	in     eax,dx
   1400258f3:	xchg   edi,eax
   1400258f4:	add    BYTE PTR [rax],al
   1400258f6:	push   rbp
   1400258f7:	sldt   WORD PTR [rax]
   1400258fa:	push   rbp
   1400258fb:	add    al,BYTE PTR [rax]
	...
   140025a3d:	add    BYTE PTR [rax],al
   140025a3f:	add    BYTE PTR [rcx-0x1],ch
   140025a42:	std    
   140025a43:	(bad)  
   140025a44:	gs cld 
   140025a46:	std    
   140025a47:	(bad)  
   140025a48:	jne    0x140025a3e
   140025a4a:	std    
   140025a4b:	xchg   edi,eax
   140025a4c:	xchg   ecx,eax
   140025a4d:	std    
   140025a4e:	jmp    rcx
   140025a50:	test   eax,0xa8f4ffff
   140025a55:	(bad)  
   140025a56:	push   rsp
   140025a58:	fwait
   140025a59:	(bad)  
   140025a5a:	push   rbx
   140025a5c:	xor    ebp,0xee6cf2ff
   140025a62:	push   rdx
   140025a64:	pop    rsi
   140025a65:	call   0x122564c69
   140025a6a:	push   rax
   140025a6c:	rex.RX fdivp st(7),st
   140025a6f:	out    dx,eax
   140025a70:	ds (bad) 
   140025a73:	out    dx,al
   140025a74:	cmp    dl,ah
   140025a76:	(bad)  
   140025a77:	in     eax,dx
   140025a78:	ss sar bh,cl
   140025a7b:	jmp    0x140025ab1
   140025a7d:	iret   
   140025a7e:	(bad)  
   140025a7f:	(bad)  
   140025a80:	xor    al,0xce
   140025a82:	(bad)  
   140025a83:	(bad)  
   140025a84:	xor    ecx,ebx
   140025a86:	(bad)  
   140025a87:	call   0x1280224bd
   140025a8c:	xor    ecx,edx
   140025a8e:	jmp    rsi
   140025a90:	xor    ecx,edx
   140025a92:	jmp    rbp
   140025a94:	ss enter 0xe5ff,0x36
   140025a99:	retf   0xe4ff
   140025a9c:	cmp    ebx,ecx
   140025a9e:	jmp    rsp
   140025aa0:	cmp    cl,bl
   140025aa2:	jmp    rsp
   140025aa4:	cmp    al,0xcb
   140025aa6:	jmp    rbx
   140025aa8:	(bad)  
   140025aa9:	int3   
   140025aaa:	(bad)  
   140025aab:	loop   0x140025af1
   140025aad:	retf   
   140025aae:	std    
   140025aaf:	jrcxz  0x140025afc
   140025ab1:	retf   0xe3fc
   140025ab4:	push   rax
   140025ab5:	leave  
   140025ab6:	sti    
   140025ab7:	loop   0x140025b08
   140025ab9:	leave  
   140025aba:	stc    
   140025abb:	int3   
   140025abc:	rex.WRX enter 0xc5f9,0x4c
   140025ac1:	(bad)  
   140025ac4:	rex.WR (bad) 
   140025ac6:	stc    
   140025ac7:	ret    
   140025ac8:	rex.RXB leave 
   140025aca:	cli    
   140025acb:	(bad)  
   140025acc:	ds retf 0xe2fe
   140025ad0:	cmp    al,cl
   140025ad2:	jmp    rdx
   140025ad4:	xor    eax,esp
   140025ad6:	jmp    rax
   140025ad8:	(bad)  
   140025ad9:	mov    edi,0xbc2ce0ff
   140025ade:	jmp    rax
   140025ae0:	sub    DWORD PTR [rsi-0x4cd81f01],esi
   140025ae6:	jmp    rcx
   140025ae8:	es mov al,0xff
   140025aeb:	loopne 0x140025b29
   140025aed:	mov    cl,0xf8
   140025aef:	sar    BYTE PTR [rax],1
   140025af1:	jno    0x140025aa8
   140025af3:	sub    eax,DWORD PTR [rax]
   140025af5:	add    BYTE PTR [rbp+0x5],dl
	...
   140025c48:	imul   edi,edi,0xff6303fd
   140025c4e:	std    
   140025c4f:	(bad)  
   140025c50:	imul   esi,ecx,0xf9866dfd
   140025c56:	dec    esp
   140025c58:	movabs ds:0x9beeffffa9eeffff,al
   140025c61:	(bad)  
   140025c62:	(bad)  
   140025c63:	out    dx,al
   140025c64:	(bad)  
   140025c65:	cmc    
   140025c66:	(bad)  
   140025c67:	in     eax,dx
   140025c68:	outs   dx,BYTE PTR ds:[rsi]
   140025c69:	out    dx,eax
   140025c6a:	(bad)  
   140025c6b:	in     al,dx
   140025c6c:	(bad)  
   140025c6d:	call   0x1245a4871
   140025c72:	(bad)  
   140025c73:	(bad)  
   140025c74:	rex.WRB fdivp st(7),st
   140025c77:	(bad)  
   140025c78:	rex.R (bad) 
   140025c7b:	call   0x1290233bc
   140025c80:	(bad)  
   140025c81:	(bad)  
   140025c82:	(bad)  
   140025c83:	call   0x127022dbe
   140025c88:	xor    al,0xcf
   140025c8a:	jmp    rsi
   140025c8c:	xor    ecx,ebp
   140025c8e:	jmp    rbp
   140025c90:	xor    al,0xcd
   140025c92:	jmp    rbp
   140025c94:	xor    ecx,ebx
   140025c96:	jmp    rsp
   140025c98:	xor    al,0xcb
   140025c9a:	jmp    rsp
   140025c9c:	ss retf 0xe4ff
   140025ca0:	xor    al,0xcb
   140025ca2:	jmp    rsp
   140025ca4:	(bad)  
   140025ca5:	retf   0xe4ff
   140025ca8:	(bad)  
   140025ca9:	retf   
   140025caa:	jmp    rsp
   140025cac:	(bad)  
   140025cad:	retf   
   140025cae:	jmp    rbx
   140025cb0:	cmp    ebx,ecx
   140025cb2:	jmp    rbx
   140025cb4:	cmp    ebp,ecx
   140025cb6:	jmp    rbx
   140025cb8:	cmp    cl,ch
   140025cba:	jmp    rbx
   140025cbc:	cmp    ebp,ecx
   140025cbe:	jmp    rbx
   140025cc0:	cmp    ebp,ecx
   140025cc2:	jmp    rbx
   140025cc4:	cmp    ebp,ecx
   140025cc6:	jmp    rbx
   140025cc8:	ss retf 
   140025cca:	jmp    rbx
   140025ccc:	xor    al,0xc8
   140025cce:	jmp    rbx
   140025cd0:	xor    esp,eax
   140025cd2:	jmp    rdx
   140025cd4:	(bad)  
   140025cd5:	sar    edi,0xe3
   140025cd8:	sub    al,0xbd
   140025cda:	jmp    rbx
   140025cdc:	sub    bh,BYTE PTR [rdx-0x4ad81e01]
   140025ce2:	jmp    rcx
   140025ce4:	(bad)  
   140025ce5:	mov    bl,0xff
   140025ce7:	loop   0x140025d1c
   140025ce9:	mov    dl,0xfb
   140025ceb:	fimul  WORD PTR [rdx-0x63]
   140025cee:	loopne 0x140025d4b
   140025cf0:	add    BYTE PTR [rax],al
   140025cf2:	push   rbp
   140025cf3:	(bad)  
   140025cf4:	add    BYTE PTR [rax],al
   140025cf6:	push   rbp
   140025cf7:	add    DWORD PTR [rax],eax
	...
   140025e51:	add    BYTE PTR [rax],al
   140025e53:	add    BYTE PTR [rdi-0x1],ah
   140025e56:	std    
   140025e57:	or     ah,BYTE PTR [rdx+rsi*8-0x3]
   140025e5b:	(bad)  
   140025e5c:	jb     0x140025e4f
   140025e5e:	(bad)  
   140025e5f:	movabs ds:0xeaffffa2d6fffa89,eax
   140025e68:	movabs al,ds:0x72e8fff88ce9ffff
   140025e71:	out    dx,eax
   140025e72:	(bad)  
   140025e73:	call   0x1280247dc
   140025e78:	pop    rax
   140025e79:	in     eax,0xff
   140025e7b:	out    0x50,eax
   140025e7d:	(bad)  
   140025e7f:	out    0x47,eax
   140025e81:	(bad)  
   140025e83:	out    0x41,al
   140025e85:	fdivr  st,st(7)
   140025e87:	out    0x3c,al
   140025e89:	(bad)  
   140025e8a:	jmp    rbp
   140025e8c:	cmp    edx,edx
   140025e8e:	jmp    rbp
   140025e90:	(bad)  
   140025e91:	iret   
   140025e92:	jmp    rbp
   140025e94:	ss iret 
   140025e96:	jmp    rbx
   140025e98:	ss (bad) 
   140025e9a:	jmp    rsp
   140025e9c:	xor    al,0xce
   140025e9e:	jmp    rbp
   140025ea0:	xor    al,0xcd
   140025ea2:	jmp    rsp
   140025ea4:	xor    al,0xcb
   140025ea6:	jmp    rsp
   140025ea8:	xor    al,0xcd
   140025eaa:	jmp    rsp
   140025eac:	ss retf 
   140025eae:	jmp    rbx
   140025eb0:	ss retf 
   140025eb2:	jmp    rsp
   140025eb4:	xor    al,0xcb
   140025eb6:	jmp    rsp
   140025eb8:	ss int 0xff
   140025ebb:	jrcxz  0x140025ef3
   140025ebd:	retf   
   140025ebe:	jmp    rsp
   140025ec0:	ss retf 
   140025ec2:	jmp    rbx
   140025ec4:	xor    al,0xc8
   140025ec6:	jmp    rbx
   140025ec8:	xor    al,0xc8
   140025eca:	jmp    rsp
   140025ecc:	xor    esp,eax
   140025ece:	jmp    rdx
   140025ed0:	(bad)  
   140025ed1:	ret    
   140025ed2:	jmp    rbx
   140025ed4:	sub    eax,0x2ce3ffbf
   140025ed9:	mov    esp,0xb72ae3ff
   140025ede:	jmp    rbx
   140025ee0:	sub    dh,BYTE PTR [rsi-0x4acf1d01]
   140025ee6:	std    
   140025ee7:	loop   0x140025f34
   140025ee9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140025eea:	out    0x6b,eax
   140025eec:	add    BYTE PTR [rax],al
   140025eee:	push   rbp
   140025eef:	or     BYTE PTR [rax],al
   140025ef1:	add    BYTE PTR [rbp+0x1],dl
	...
   14002605c:	imul   edi,edi,0xff6502fd
   140026062:	std    
   140026063:	adc    BYTE PTR [rsi+rsi*8-0x3],ah
   140026067:	rex.WRB jae 0x14002605c
   14002606a:	(bad)  
   14002606b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002606c:	xchg   bh,dh
   14002606e:	call   rbx
   140026070:	pushf  
   140026071:	(bad)  
   140026072:	jmp    rdi
   140026074:	xchg   ebx,eax
   140026075:	sti    
   140026076:	jmp    rsi
   140026078:	jl     0x14002606c
   14002607a:	jmp    rsi
   14002607c:	gs jmp 0x1275d4781
   140026082:	jmp    rbp
   140026084:	push   rsp
   140026085:	loop   0x140026086
   140026087:	in     eax,0x4d
   140026089:	fdivp  st(7),st
   14002608b:	in     eax,0x46
   14002608d:	(bad)  
   14002608f:	in     al,0x41
   140026091:	fdivr  st,st(7)
   140026093:	in     eax,0x3e
   140026095:	(bad)  
   140026096:	jmp    rbp
   140026098:	cmp    al,0xd4
   14002609a:	jmp    rsp
   14002609c:	cmp    edx,edx
   14002609e:	jmp    rsp
   1400260a0:	cmp    ecx,edx
   1400260a2:	jmp    rbx
   1400260a4:	(bad)  
   1400260a5:	iret   
   1400260a6:	jmp    rsp
   1400260a8:	ss (bad) 
   1400260aa:	jmp    rsp
   1400260ac:	(bad)  
   1400260ad:	(bad)  
   1400260ae:	jmp    rsp
   1400260b0:	ss (bad) 
   1400260b2:	jmp    rbx
   1400260b4:	ss int 0xff
   1400260b7:	in     al,0x34
   1400260b9:	retf   
   1400260ba:	jmp    rsp
   1400260bc:	xor    al,0xcd
   1400260be:	jmp    rsp
   1400260c0:	xor    al,0xcb
   1400260c2:	jmp    rsp
   1400260c4:	xor    ecx,eax
   1400260c6:	jmp    rsp
   1400260c8:	xor    edi,eax
   1400260ca:	jmp    rsp
   1400260cc:	xor    ebx,eax
   1400260ce:	jmp    rbx
   1400260d0:	(bad)  
   1400260d1:	sar    edi,0xe4
   1400260d4:	(bad)  
   1400260d5:	mov    ebp,0xba2de3ff
   1400260da:	jmp    rsp
   1400260dc:	sub    eax,0x38e4ffb9
   1400260e1:	mov    eax,0xa94bdefc
   1400260e6:	(bad)  
   1400260e7:	(bad)  
   1400260e8:	add    BYTE PTR [rax],al
   1400260ea:	push   rbp
   1400260eb:	(bad)  
   1400260ec:	add    BYTE PTR [rax],al
   1400260ee:	push   rbp
   1400260ef:	add    DWORD PTR [rax],eax
	...
   140026265:	add    BYTE PTR [rax],al
   140026267:	add    BYTE PTR [rcx-0x1],ch
   14002626a:	std    
   14002626b:	add    al,0x65
   14002626d:	(bad)  
   14002626e:	std    
   14002626f:	adc    BYTE PTR [rax-0xd],ah
   140026272:	std    
   140026273:	rex.X imul ebp,esi,0xfffffffd
   140026277:	pushf  
   140026278:	jge    0x14002626f
   14002627a:	dec    esi
   14002627c:	test   ch,dh
   14002627e:	jmp    rbp
   140026280:	(bad)  
   140026281:	cmc    
   140026282:	jmp    rbp
   140026284:	jb     0x140026274
   140026286:	jmp    rbp
   140026288:	(bad)  
   140026289:	call   0x12457488d
   14002628e:	jmp    rsp
   140026290:	rex.WRX (bad) 
   140026293:	in     eax,0x48
   140026295:	fdiv   st(7),st
   140026297:	in     eax,0x44
   140026299:	(bad)  
   14002629b:	in     eax,0x40
   14002629d:	fdivr  st,st(7)
   14002629f:	in     eax,0x3e
   1400262a1:	(bad)  
   1400262a2:	jmp    rsp
   1400262a4:	cmp    al,0xd2
   1400262a6:	jmp    rsp
   1400262a8:	cmp    al,0xd2
   1400262aa:	jmp    rbp
   1400262ac:	cmp    dl,cl
   1400262ae:	jmp    rsp
   1400262b0:	cmp    ecx,edx
   1400262b2:	jmp    rsp
   1400262b4:	cmp    esi,ecx
   1400262b6:	jmp    rsp
   1400262b8:	(bad)  
   1400262b9:	(bad)  
   1400262ba:	jmp    rbp
   1400262bc:	(bad)  
   1400262bd:	int    0xff
   1400262bf:	in     eax,0x36
   1400262c1:	retf   
   1400262c2:	jmp    rsp
   1400262c4:	xor    al,0xca
   1400262c6:	jmp    rsp
   1400262c8:	xor    al,0xc8
   1400262ca:	jmp    rsp
   1400262cc:	xor    eax,esp
   1400262ce:	jmp    rbp
   1400262d0:	xor    ecx,eax
   1400262d2:	jmp    rsp
   1400262d4:	xor    DWORD PTR [rdi-0x42cd1b01],edi
   1400262da:	jmp    rsp
   1400262dc:	rex.R mov ebx,0x9c4bb8f8
   1400262e2:	fidiv  DWORD PTR [rax]
   1400262e4:	add    BYTE PTR [rax],al
   1400262e6:	push   rbp
   1400262e7:	add    eax,DWORD PTR [rax]
	...
   140026471:	add    BYTE PTR [rax],al
   140026473:	add    BYTE PTR [rcx-0x1],ch
   140026476:	std    
   140026477:	add    ah,BYTE PTR [rdi-0x1]
   14002647a:	std    
   14002647b:	or     DWORD PTR [rsi-0x5],ebx
   14002647e:	std    
   14002647f:	and    DWORD PTR [rbx+rbp*8-0x4],ebx
   140026483:	ins    BYTE PTR es:[rdi],dx
   140026484:	gs in  al,dx
   140026486:	std    
   140026487:	popf   
   140026488:	imul   ebp,esi,0xeb6bc1ff
   14002648e:	(bad)  
   14002648f:	fisubr DWORD PTR [rax-0x15]
   140026492:	jmp    rbp
   140026494:	pop    rsi
   140026495:	call   0x121534a99
   14002649a:	jmp    rsp
   14002649c:	rex.WX (bad) 
   14002649f:	in     al,0x48
   1400264a1:	(bad)  
   1400264a3:	in     eax,0x44
   1400264a5:	fdivr  st,st(7)
   1400264a7:	in     eax,0x43
   1400264a9:	fdivr  st,st(7)
   1400264ab:	in     al,0x41
   1400264ad:	xlat   BYTE PTR ds:[rbx]
   1400264ae:	jmp    rsp
   1400264b0:	ds (bad) 
   1400264b2:	jmp    rbp
   1400264b4:	ds sar bh,cl
   1400264b7:	in     al,0x3d
   1400264b9:	sar    edi,1
   1400264bb:	in     al,0x3c
   1400264bd:	iret   
   1400264be:	jmp    rbp
   1400264c0:	cmp    cl,dh
   1400264c2:	jmp    rbp
   1400264c4:	cmp    cl,ch
   1400264c6:	jmp    rsp
   1400264c8:	cmp    edx,ecx
   1400264ca:	jmp    rsp
   1400264cc:	cmp    edi,eax
   1400264ce:	jmp    rbp
   1400264d0:	cmp    eax,ebp
   1400264d2:	(bad)  
   1400264d3:	loope  0x14002651d
   1400264d5:	sar    ecx,0xae
   1400264d8:	rex.WRXB mov r9b,0xec
   1400264db:	rex.WX add BYTE PTR [rax],al
   1400264de:	push   rbp
   1400264df:	add    eax,DWORD PTR [rax]
   1400264e1:	add    BYTE PTR [rbp+0x1],dl
	...
   140026684:	imul   edi,edi,0xff6702fd
   14002668a:	std    
   14002668b:	(bad)  
   14002668c:	fs (bad) 
   14002668e:	std    
   14002668f:	adc    DWORD PTR [rcx-0x15],ebx
   140026692:	cld    
   140026693:	cmp    DWORD PTR [rcx-0x1d],ebx
   140026696:	cld    
   140026697:	jle    0x1400266f2
   140026699:	loop   0x140026698
   14002669b:	movabs ds:0xb5fee450b3fee355,al
   1400266a4:	rex.WRXB loopne 0x1400266a6
   1400266a7:	iret   
   1400266a8:	rex.WR fdivp st(7),st
   1400266ab:	(bad)  
   1400266ac:	rex.WB (bad) 
   1400266af:	fisttp QWORD PTR [rcx-0x27]
   1400266b2:	jmp    rbp
   1400266b4:	rex.RXB xlat BYTE PTR ds:[rbx]
   1400266b6:	jmp    rbp
   1400266b8:	rex.RX (bad) 
   1400266ba:	jmp    rsp
   1400266bc:	rex.RB (bad) 
   1400266be:	dec    esp
   1400266c0:	rex.RB sar r14b,cl
   1400266c3:	retf   
   1400266c4:	rex.WR sar bl,1
   1400266c7:	mov    bh,0x4e
   1400266c9:	int    0xfa
   1400266cb:	mov    WORD PTR [rdi-0x42],cs
   1400266ce:	repnz push rdx
   1400266d0:	rex.WR xchg rdi,rax
   1400266d2:	leave  
   1400266d3:	or     DWORD PTR [rax],eax
   1400266d5:	add    BYTE PTR [rbp+0x1],dl
	...
   140026898:	imul   edi,edi,0xff6901fd
   14002689e:	std    
   14002689f:	add    ah,BYTE PTR [rdi-0x1]
   1400268a2:	std    
   1400268a3:	add    al,0x67
   1400268a5:	(bad)  
   1400268a6:	std    
   1400268a7:	add    al,0x67
   1400268a9:	(bad)  
   1400268aa:	std    
   1400268ab:	or     BYTE PTR [rbp-0x1],ah
   1400268ae:	std    
   1400268af:	or     eax,0xdfdff65
   1400268b4:	gs (bad) 
   1400268b6:	std    
   1400268b7:	or     al,0x66
   1400268b9:	(bad)  
   1400268ba:	std    
   1400268bb:	(bad)  
   1400268bc:	addr32 (bad) 
   1400268be:	std    
   1400268bf:	add    ebp,DWORD PTR [rax-0x1]
   1400268c2:	std    
   1400268c3:	add    al,BYTE PTR [rax]
	...
   140027515:	add    BYTE PTR [rax],al
   140027517:	add    bh,bh
   140027519:	(bad)  
   14002751a:	(bad)  
   14002751b:	(bad)  
   14002751c:	(bad)  
   14002751d:	(bad)  
   14002751e:	(bad)  
   14002751f:	(bad)  
   140027520:	(bad)  
   140027521:	(bad)  
   140027522:	(bad)  
   140027523:	(bad)  
   140027524:	(bad)  
   140027525:	(bad)  
   140027526:	(bad)  
   140027527:	(bad)  
   140027528:	(bad)  
   140027529:	(bad)  
   14002752a:	(bad)  
   14002752b:	(bad)  
   14002752c:	(bad)  
   14002752d:	(bad)  
   14002752e:	(bad)  
   14002752f:	(bad)  
   140027530:	(bad)  
   140027531:	(bad)  
   140027532:	(bad)  
   140027533:	(bad)  
   140027534:	(bad)  
   140027535:	(bad)  
   140027536:	(bad)  
   140027537:	(bad)  
   140027538:	(bad)  
   140027539:	(bad)  
   14002753a:	(bad)  
   14002753b:	(bad)  
   14002753c:	(bad)  
   14002753d:	(bad)  
   14002753e:	(bad)  
   14002753f:	(bad)  
   140027540:	(bad)  
   140027541:	(bad)  
   140027542:	(bad)  
   140027543:	(bad)  
   140027544:	(bad)  
   140027545:	(bad)  
   140027546:	(bad)  
   140027547:	(bad)  
   140027548:	(bad)  
   140027549:	(bad)  
   14002754a:	(bad)  
   14002754b:	(bad)  
   14002754c:	(bad)  
   14002754d:	(bad)  
   14002754e:	(bad)  
   14002754f:	(bad)  
   140027550:	(bad)  
   140027551:	(bad)  
   140027552:	(bad)  
   140027553:	(bad)  
   140027554:	(bad)  
   140027555:	(bad)  
   140027556:	(bad)  
   140027557:	(bad)  
   140027558:	(bad)  
   140027559:	(bad)  
   14002755a:	(bad)  
   14002755b:	(bad)  
   14002755c:	(bad)  
   14002755d:	(bad)  
   14002755e:	(bad)  
   14002755f:	(bad)  
   140027560:	(bad)  
   140027561:	(bad)  
   140027562:	(bad)  
   140027563:	(bad)  
   140027564:	(bad)  
   140027565:	(bad)  
   140027566:	(bad)  
   140027567:	(bad)  
   140027568:	(bad)  
   140027569:	(bad)  
   14002756a:	(bad)  
   14002756b:	(bad)  
   14002756c:	(bad)  
   14002756d:	(bad)  
   14002756e:	(bad)  
   14002756f:	(bad)  
   140027570:	(bad)  
   140027571:	(bad)  
   140027572:	(bad)  
   140027573:	(bad)  
   140027574:	(bad)  
   140027575:	(bad)  
   140027576:	(bad)  
   140027577:	(bad)  
   140027578:	(bad)  
   140027579:	(bad)  
   14002757a:	(bad)  
   14002757b:	(bad)  
   14002757c:	(bad)  
   14002757d:	(bad)  
   14002757e:	(bad)  
   14002757f:	(bad)  
   140027580:	(bad)  
   140027581:	(bad)  
   140027582:	(bad)  
   140027583:	(bad)  
   140027584:	(bad)  
   140027585:	(bad)  
   140027586:	(bad)  
   140027587:	(bad)  
   140027588:	(bad)  
   140027589:	push   rax
   14002758b:	add    BYTE PTR [rdi],bh
   14002758d:	(bad)  
   14002758e:	(bad)  
   14002758f:	(bad)  
   140027590:	(bad)  
   140027591:	(bad)  
   140027592:	(bad)  
   140027593:	(bad)  
   140027594:	(bad)  
   140027595:	(bad)  
   140027596:	(bad)  
   140027597:	(bad)  
   140027598:	(bad)  
   140027599:	inc    DWORD PTR [rax-0xf900]
   14002759f:	(bad)  
   1400275a0:	(bad)  
   1400275a1:	(bad)  
   1400275a2:	(bad)  
   1400275a3:	(bad)  
   1400275a4:	(bad)  
   1400275a5:	(bad)  
   1400275a6:	(bad)  
   1400275a7:	(bad)  
   1400275a8:	(bad)  
   1400275a9:	cld    
   1400275aa:	add    BYTE PTR [rax],al
   1400275ac:	add    BYTE PTR [rdi-0x1],bh
   1400275af:	(bad)  
   1400275b0:	(bad)  
   1400275b1:	(bad)  
   1400275b2:	(bad)  
   1400275b3:	(bad)  
   1400275b4:	(bad)  
   1400275b5:	(bad)  
   1400275b6:	(bad)  
   1400275b7:	(bad)  
   1400275b8:	jmp    rax
   1400275ba:	add    BYTE PTR [rax],al
   1400275bc:	add    BYTE PTR [rdi],bl
   1400275be:	(bad)  
   1400275bf:	(bad)  
   1400275c0:	(bad)  
   1400275c1:	(bad)  
   1400275c2:	(bad)  
   1400275c3:	(bad)  
   1400275c4:	(bad)  
   1400275c5:	(bad)  
   1400275c6:	(bad)  
   1400275c7:	(bad)  
   1400275c8:	inc    DWORD PTR [rax+0x7000000]
   1400275ce:	(bad)  
   1400275cf:	clc    
   1400275d0:	add    BYTE PTR [rax],al
   1400275d2:	(bad)  
   1400275d3:	(bad)  
   1400275d4:	(bad)  
   1400275d5:	(bad)  
   1400275d6:	(bad)  
   1400275d7:	(bad)  
   1400275d8:	inc    BYTE PTR [rax]
   1400275da:	add    BYTE PTR [rax],al
   1400275dc:	add    BYTE PTR [rcx],al
   1400275de:	inc    DWORD PTR [rax]
   1400275e0:	add    BYTE PTR [rax],al
   1400275e2:	add    edi,edi
   1400275e4:	(bad)  
   1400275e5:	(bad)  
   1400275e6:	(bad)  
   1400275e7:	(bad)  
   1400275e8:	cld    
   1400275e9:	add    BYTE PTR [rax],al
   1400275eb:	add    BYTE PTR [rax],al
   1400275ed:	add    BYTE PTR [rax+0x0],bh
   1400275f0:	add    BYTE PTR [rax],al
   1400275f2:	add    BYTE PTR [rdi-0x1],bh
   1400275f5:	(bad)  
   1400275f6:	(bad)  
   1400275f7:	(bad)  
   1400275f8:	clc    
   1400275f9:	add    BYTE PTR [rax],al
   1400275fb:	jg     0x1400275dd
   1400275fd:	add    BYTE PTR [rax],ah
   1400275ff:	add    BYTE PTR [rax],al
   140027601:	add    BYTE PTR [rax],al
   140027603:	ud0    edi,edi
   140027606:	(bad)  
   140027607:	push   rax
   140027609:	add    BYTE PTR [rcx],al
   14002760b:	(bad)  
   14002760c:	cld    
   14002760d:	add    BYTE PTR [rax],al
   14002760f:	add    BYTE PTR [rax],al
   140027611:	add    BYTE PTR [rax],al
   140027613:	add    edi,edi
   140027615:	(bad)  
   140027616:	(bad)  
   140027617:	push   rax
   140027619:	add    BYTE PTR [rbx],al
   14002761b:	(bad)  
   14002761c:	inc    DWORD PTR [rax+0x0]
   140027622:	add    BYTE PTR [rax],al
   140027624:	(bad)  
   140027625:	(bad)  
   140027626:	(bad)  
   140027627:	jmp    rax
   140027629:	add    BYTE PTR [rdi],al
   14002762b:	(bad)  
   14002762c:	jmp    rax
   14002762e:	add    BYTE PTR [rax],al
   140027630:	add    BYTE PTR [rax],al
   140027632:	add    BYTE PTR [rax],al
   140027634:	(bad)  
   140027635:	(bad)  
   140027636:	(bad)  
   140027637:	jmp    rax
   140027639:	add    BYTE PTR [rdi],al
   14002763b:	(bad)  
   14002763c:	jmp    rax
   14002763e:	add    BYTE PTR [rax],al
   140027640:	add    BYTE PTR [rax],al
   140027642:	add    BYTE PTR [rax],al
   140027644:	ud0    edi,edi
   140027647:	inc    eax
   140027649:	add    BYTE PTR [rdi],cl
   14002764b:	(bad)  
   14002764c:	inc    eax
   14002764e:	add    BYTE PTR [rax],al
   140027650:	add    BYTE PTR [rax],al
   140027652:	add    BYTE PTR [rax],al
   140027654:	(bad)  
   140027655:	(bad)  
   140027656:	(bad)  
   140027657:	inc    eax
   140027659:	add    BYTE PTR [rdi],cl
   14002765b:	(bad)  
   14002765c:	inc    DWORD PTR [rax]
   14002765e:	add    BYTE PTR [rax],al
   140027660:	add    BYTE PTR [rax],al
   140027662:	add    BYTE PTR [rax],al
   140027664:	add    edi,edi
   140027666:	(bad)  
   140027667:	inc    eax
   140027669:	add    BYTE PTR [rdi],cl
   14002766b:	(bad)  
   14002766c:	inc    BYTE PTR [rax]
   14002766e:	add    BYTE PTR [rax],al
   140027670:	add    BYTE PTR [rax],al
   140027672:	add    BYTE PTR [rax],al
   140027674:	add    bh,bh
   140027676:	(bad)  
   140027677:	inc    DWORD PTR [rax-0x300f100]
	...
   140027685:	jg     0x140027686
   140027687:	inc    DWORD PTR [rax-0x700f100]
	...
   140027695:	(bad)  
   140027696:	(bad)  
   140027697:	inc    DWORD PTR [rax-0xf00f100]
	...
   1400276a5:	ud0    edi,edi
   1400276a8:	add    BYTE PTR [rax],0xf
   1400276ab:	jmp    rax
	...
   1400276b5:	(bad)  
   1400276b6:	(bad)  
   1400276b7:	inc    DWORD PTR [rax-0x3f00f100]
	...
   1400276c5:	add    edi,edi
   1400276c7:	inc    DWORD PTR [rax-0x7f00f100]
	...
   1400276d5:	add    edi,edi
   1400276d7:	inc    DWORD PTR [rax+0xff0f00]
	...
   1400276e5:	add    edi,edi
   1400276e7:	inc    DWORD PTR [rax+0xfe0f00]
	...
   1400276f5:	add    bh,bh
   1400276f7:	inc    DWORD PTR [rax+0xfc0f00]
	...
   140027705:	add    BYTE PTR [rdi-0x1],bh
   140027708:	add    BYTE PTR [rax],0x7
   14002770b:	cld    
	...
   140027714:	add    BYTE PTR [rax],al
   140027716:	(bad)  
   140027717:	inc    eax
   140027719:	add    BYTE PTR [rdi],al
   14002771b:	clc    
	...
   140027724:	add    BYTE PTR [rax],al
   140027726:	(bad)  
   140027727:	inc    eax
   140027729:	add    BYTE PTR [rdi],al
   14002772b:	lock add BYTE PTR [rax],al
	...
   140027736:	(bad)  
   140027737:	inc    eax
   140027739:	add    BYTE PTR [rbx],al
   14002773b:	lock add BYTE PTR [rax],al
   14002773e:	add    BYTE PTR [rax],al
   140027740:	add    DWORD PTR [rax],eax
   140027742:	add    BYTE PTR [rax],al
   140027744:	add    BYTE PTR [rax],al
   140027746:	ud0    eax,eax
   140027749:	add    BYTE PTR [rbx],al
   14002774b:	loopne 0x14002774d
   14002774d:	add    BYTE PTR [rax],al
   14002774f:	add    BYTE PTR [rdi-0x4],bh
   140027752:	add    BYTE PTR [rax],al
   140027754:	add    BYTE PTR [rax],al
   140027756:	ud0    esp,eax
   140027759:	add    BYTE PTR [rcx],al
   14002775b:	loopne 0x14002775d
   14002775d:	add    BYTE PTR [rax],al
   14002775f:	add    edi,edi
   140027761:	inc    DWORD PTR [rax]
   140027763:	add    BYTE PTR [rax],al
   140027765:	add    BYTE PTR [rdi],al
   140027767:	jmp    rax
   140027769:	add    BYTE PTR [rcx],al
   14002776b:	rol    BYTE PTR [rax],0x0
   14002776e:	add    BYTE PTR [rdi],al
   140027770:	(bad)  
   140027771:	inc    eax
   140027773:	add    BYTE PTR [rax],al
   140027775:	add    BYTE PTR [rbx],al
   140027777:	jmp    rax
   140027779:	add    BYTE PTR [rcx],al
   14002777b:	add    BYTE PTR [rax],0x0
   14002777e:	add    BYTE PTR [rdi],cl
   140027780:	(bad)  
   140027781:	push   rax
   140027783:	add    BYTE PTR [rax],al
   140027785:	add    BYTE PTR [rbx],al
   140027787:	push   rax
   140027789:	add    BYTE PTR [rax],al
   14002778b:	add    BYTE PTR [rax],al
   14002778d:	add    BYTE PTR [rax],al
   14002778f:	(bad)  
   140027790:	(bad)  
   140027791:	(bad)  
   140027792:	cld    
   140027793:	add    BYTE PTR [rax],al
   140027795:	add    BYTE PTR [rcx],al
   140027797:	push   rax
   140027799:	add    BYTE PTR [rax],al
   14002779b:	add    BYTE PTR [rax],al
   14002779d:	add    BYTE PTR [rax],al
   14002779f:	jg     0x1400277a0
   1400277a1:	(bad)  
   1400277a2:	inc    BYTE PTR [rax]
   1400277a4:	add    BYTE PTR [rax],al
   1400277a6:	add    edi,edi
   1400277a8:	lock add BYTE PTR [rax],al
   1400277ab:	add    BYTE PTR [rax],al
   1400277ad:	add    BYTE PTR [rax],al
   1400277af:	(bad)  
   1400277b0:	(bad)  
   1400277b1:	(bad)  
   1400277b2:	inc    DWORD PTR [rax]
   1400277b4:	add    BYTE PTR [rax],al
   1400277b6:	add    bh,bh
   1400277b8:	clc    
   1400277b9:	add    BYTE PTR [rax],al
   1400277bb:	add    BYTE PTR [rax],al
   1400277bd:	add    BYTE PTR [rcx],al
   1400277bf:	(bad)  
   1400277c0:	(bad)  
   1400277c1:	(bad)  
   1400277c2:	inc    DWORD PTR [rax-0x1000000]
   1400277c8:	clc    
   1400277c9:	add    BYTE PTR [rax],al
   1400277cb:	add    BYTE PTR [rax],al
   1400277cd:	add    BYTE PTR [rcx],al
   1400277cf:	(bad)  
   1400277d0:	(bad)  
   1400277d1:	(bad)  
   1400277d2:	inc    eax
   1400277d4:	add    BYTE PTR [rax],al
   1400277d6:	add    bh,bh
   1400277d8:	clc    
   1400277d9:	add    BYTE PTR [rax],al
   1400277db:	add    BYTE PTR [rax],al
   1400277dd:	add    BYTE PTR [rbx],al
   1400277df:	(bad)  
   1400277e0:	(bad)  
   1400277e1:	(bad)  
   1400277e2:	inc    eax
   1400277e4:	add    BYTE PTR [rax],al
   1400277e6:	add    BYTE PTR [rdi-0x4],bh
   1400277e9:	add    BYTE PTR [rax],al
   1400277eb:	add    BYTE PTR [rax],al
   1400277ed:	add    BYTE PTR [rdi],al
   1400277ef:	(bad)  
   1400277f0:	(bad)  
   1400277f1:	(bad)  
   1400277f2:	jmp    rax
   1400277f4:	add    BYTE PTR [rax],al
   1400277f6:	add    BYTE PTR [rdi-0x4],bh
   1400277f9:	add    BYTE PTR [rax],al
   1400277fb:	add    BYTE PTR [rax],al
   1400277fd:	add    BYTE PTR [rdi],al
   1400277ff:	(bad)  
   140027800:	(bad)  
   140027801:	(bad)  
   140027802:	(bad)  
   140027803:	(bad)  
   140027804:	(bad)  
   140027805:	(bad)  
   140027806:	(bad)  
   140027807:	(bad)  
   140027808:	inc    BYTE PTR [rax]
   14002780a:	add    BYTE PTR [rax],al
   14002780c:	add    BYTE PTR [rax],al
   14002780e:	ud0    edi,edi
   140027811:	(bad)  
   140027812:	(bad)  
   140027813:	(bad)  
   140027814:	(bad)  
   140027815:	(bad)  
   140027816:	(bad)  
   140027817:	(bad)  
   140027818:	inc    BYTE PTR [rax]
   14002781a:	add    BYTE PTR [rax],al
   14002781c:	add    BYTE PTR [rax],al
   14002781e:	ud0    edi,edi
   140027821:	(bad)  
   140027822:	(bad)  
   140027823:	(bad)  
   140027824:	(bad)  
   140027825:	(bad)  
   140027826:	(bad)  
   140027827:	(bad)  
   140027828:	inc    DWORD PTR [rax]
   14002782a:	add    BYTE PTR [rax],al
   14002782c:	add    BYTE PTR [rax],al
   14002782e:	(bad)  
   14002782f:	(bad)  
   140027830:	(bad)  
   140027831:	(bad)  
   140027832:	(bad)  
   140027833:	(bad)  
   140027834:	(bad)  
   140027835:	(bad)  
   140027836:	(bad)  
   140027837:	(bad)  
   140027838:	inc    DWORD PTR [rax]
   14002783a:	add    BYTE PTR [rax],al
   14002783c:	add    BYTE PTR [rax],al
   14002783e:	(bad)  
   14002783f:	(bad)  
   140027840:	(bad)  
   140027841:	(bad)  
   140027842:	(bad)  
   140027843:	(bad)  
   140027844:	(bad)  
   140027845:	(bad)  
   140027846:	(bad)  
   140027847:	(bad)  
   140027848:	inc    DWORD PTR [rax+0x0]
   14002784e:	(bad)  
   14002784f:	(bad)  
   140027850:	(bad)  
   140027851:	(bad)  
   140027852:	(bad)  
   140027853:	(bad)  
   140027854:	(bad)  
   140027855:	(bad)  
   140027856:	(bad)  
   140027857:	(bad)  
   140027858:	inc    DWORD PTR [rax+0x0]
   14002785e:	(bad)  
   14002785f:	(bad)  
   140027860:	(bad)  
   140027861:	(bad)  
   140027862:	(bad)  
   140027863:	(bad)  
   140027864:	(bad)  
   140027865:	(bad)  
   140027866:	(bad)  
   140027867:	(bad)  
   140027868:	inc    eax
   14002786a:	add    BYTE PTR [rax],al
   14002786c:	add    BYTE PTR [rax],al
   14002786e:	(bad)  
   14002786f:	(bad)  
   140027870:	(bad)  
   140027871:	(bad)  
   140027872:	(bad)  
   140027873:	(bad)  
   140027874:	(bad)  
   140027875:	(bad)  
   140027876:	(bad)  
   140027877:	(bad)  
   140027878:	jmp    rax
   14002787a:	add    BYTE PTR [rax],al
   14002787c:	add    BYTE PTR [rax],al
   14002787e:	(bad)  
   14002787f:	(bad)  
   140027880:	(bad)  
   140027881:	(bad)  
   140027882:	(bad)  
   140027883:	(bad)  
   140027884:	(bad)  
   140027885:	(bad)  
   140027886:	(bad)  
   140027887:	(bad)  
   140027888:	jmp    rax
   14002788a:	add    BYTE PTR [rax],al
   14002788c:	add    BYTE PTR [rax],al
   14002788e:	(bad)  
   14002788f:	(bad)  
   140027890:	(bad)  
   140027891:	(bad)  
   140027892:	(bad)  
   140027893:	(bad)  
   140027894:	(bad)  
   140027895:	(bad)  
   140027896:	(bad)  
   140027897:	(bad)  
   140027898:	push   rax
	...
   1400278a6:	add    BYTE PTR [rdi],bl
   1400278a8:	push   rax
	...
   1400278b6:	add    BYTE PTR [rdi],bl
   1400278b8:	(bad)  
   1400278b9:	clc    
	...
   1400278c6:	add    BYTE PTR [rdi],bl
   1400278c8:	(bad)  
   1400278c9:	cld    
	...
   1400278d6:	add    BYTE PTR [rdi],bl
   1400278d8:	(bad)  
   1400278d9:	cld    
	...
   1400278e6:	add    BYTE PTR [rdi],bl
   1400278e8:	(bad)  
   1400278e9:	inc    BYTE PTR [rax]
	...
   1400278f7:	(bad)  
   1400278f8:	(bad)  
   1400278f9:	inc    DWORD PTR [rax]
	...
   140027907:	(bad)  
   140027908:	(bad)  
   140027909:	inc    DWORD PTR [rax+0x0]
	...
   140027917:	(bad)  
   140027918:	(bad)  
   140027919:	inc    DWORD PTR [rax+0x0]
	...
   140027927:	(bad)  
   140027928:	(bad)  
   140027929:	inc    eax
	...
   140027937:	(bad)  
   140027938:	(bad)  
   140027939:	jmp    rax
	...
   140027947:	(bad)  
   140027948:	(bad)  
   140027949:	jmp    rax
	...
   140027957:	(bad)  
   140027958:	(bad)  
   140027959:	jmp    rax
	...
   140027967:	(bad)  
   140027968:	(bad)  
   140027969:	jmp    rax
	...
   140027977:	(bad)  
   140027978:	(bad)  
   140027979:	jmp    rax
   14002797b:	add    BYTE PTR [rax],al
   14002797d:	add    BYTE PTR [rdi],bl
   14002797f:	(bad)  
   140027980:	(bad)  
   140027981:	(bad)  
   140027982:	push   rax
   140027984:	add    BYTE PTR [rax],al
   140027986:	add    BYTE PTR [rdi],bl
   140027988:	(bad)  
   140027989:	push   rax
   14002798b:	add    BYTE PTR [rax],al
   14002798d:	add    BYTE PTR [rdi],bl
   14002798f:	(bad)  
   140027990:	(bad)  
   140027991:	(bad)  
   140027992:	push   rax
   140027994:	add    BYTE PTR [rax],al
   140027996:	add    BYTE PTR [rdi],bl
   140027998:	(bad)  
   140027999:	push   rax
   14002799b:	add    BYTE PTR [rax],al
   14002799d:	add    BYTE PTR [rdi],bl
   14002799f:	(bad)  
   1400279a0:	(bad)  
   1400279a1:	(bad)  
   1400279a2:	push   rax
   1400279a4:	add    BYTE PTR [rax],al
   1400279a6:	add    BYTE PTR [rdi],bl
   1400279a8:	(bad)  
   1400279a9:	push   rax
   1400279ab:	add    BYTE PTR [rax],al
   1400279ad:	add    BYTE PTR [rdi],bl
   1400279af:	(bad)  
   1400279b0:	(bad)  
   1400279b1:	(bad)  
   1400279b2:	push   rax
   1400279b4:	add    BYTE PTR [rax],al
   1400279b6:	add    BYTE PTR [rdi],bl
   1400279b8:	(bad)  
   1400279b9:	(bad)  
   1400279ba:	clc    
   1400279bb:	add    BYTE PTR [rax],al
   1400279bd:	add    BYTE PTR [rdi],bl
   1400279bf:	(bad)  
   1400279c0:	(bad)  
   1400279c1:	(bad)  
   1400279c2:	push   rax
   1400279c4:	add    BYTE PTR [rax],al
   1400279c6:	add    BYTE PTR [rdi],bh
   1400279c8:	(bad)  
   1400279c9:	(bad)  
   1400279ca:	clc    
   1400279cb:	add    BYTE PTR [rax],al
   1400279cd:	add    BYTE PTR [rdi],cl
   1400279cf:	(bad)  
   1400279d0:	(bad)  
   1400279d1:	(bad)  
   1400279d2:	jmp    rax
   1400279d4:	add    BYTE PTR [rax],al
   1400279d6:	add    BYTE PTR [rdi],bh
   1400279d8:	(bad)  
   1400279d9:	(bad)  
   1400279da:	clc    
   1400279db:	add    BYTE PTR [rax],al
   1400279dd:	add    BYTE PTR [rdi],cl
   1400279df:	(bad)  
   1400279e0:	(bad)  
   1400279e1:	(bad)  
   1400279e2:	jmp    rax
   1400279e4:	add    BYTE PTR [rax],al
   1400279e6:	add    BYTE PTR [rdi],bh
   1400279e8:	(bad)  
   1400279e9:	(bad)  
   1400279ea:	cld    
   1400279eb:	add    BYTE PTR [rax],al
   1400279ed:	add    BYTE PTR [rdi],al
   1400279ef:	(bad)  
   1400279f0:	(bad)  
   1400279f1:	(bad)  
   1400279f2:	inc    eax
   1400279f4:	add    BYTE PTR [rax],al
   1400279f6:	add    BYTE PTR [rdi],bh
   1400279f8:	(bad)  
   1400279f9:	(bad)  
   1400279fa:	cld    
   1400279fb:	add    BYTE PTR [rax],al
   1400279fd:	add    BYTE PTR [rdi],al
   1400279ff:	(bad)  
   140027a00:	(bad)  
   140027a01:	(bad)  
   140027a02:	inc    eax
   140027a04:	add    BYTE PTR [rax],al
   140027a06:	add    BYTE PTR [rdi-0x1],bh
   140027a09:	(bad)  
   140027a0a:	inc    BYTE PTR [rax]
   140027a0c:	add    BYTE PTR [rax],al
   140027a0e:	add    edi,edi
   140027a10:	(bad)  
   140027a11:	(bad)  
   140027a12:	inc    DWORD PTR [rax+0x7f000000]
   140027a18:	(bad)  
   140027a19:	(bad)  
   140027a1a:	inc    BYTE PTR [rax]
   140027a1c:	add    BYTE PTR [rax],al
   140027a1e:	add    edi,edi
   140027a20:	(bad)  
   140027a21:	(bad)  
   140027a22:	inc    DWORD PTR [rax+0x7f000000]
   140027a28:	(bad)  
   140027a29:	(bad)  
   140027a2a:	inc    BYTE PTR [rax]
   140027a2c:	add    BYTE PTR [rax],al
   140027a2e:	add    edi,edi
   140027a30:	(bad)  
   140027a31:	(bad)  
   140027a32:	inc    DWORD PTR [rax]
   140027a34:	add    BYTE PTR [rax],al
   140027a36:	add    bh,bh
   140027a38:	(bad)  
   140027a39:	(bad)  
   140027a3a:	inc    DWORD PTR [rax]
   140027a3c:	add    BYTE PTR [rax],al
   140027a3e:	add    bh,bh
   140027a40:	(bad)  
   140027a41:	(bad)  
   140027a42:	inc    BYTE PTR [rax]
   140027a44:	add    BYTE PTR [rax],al
   140027a46:	add    bh,bh
   140027a48:	(bad)  
   140027a49:	(bad)  
   140027a4a:	inc    DWORD PTR [rax]
   140027a4c:	add    BYTE PTR [rax],al
   140027a4e:	add    BYTE PTR [rdi-0x1],bh
   140027a51:	(bad)  
   140027a52:	cld    
   140027a53:	add    BYTE PTR [rax],al
   140027a55:	add    BYTE PTR [rcx],al
   140027a57:	(bad)  
   140027a58:	(bad)  
   140027a59:	(bad)  
   140027a5a:	inc    DWORD PTR [rax+0x3f000000]
   140027a60:	(bad)  
   140027a61:	(bad)  
   140027a62:	clc    
   140027a63:	add    BYTE PTR [rax],al
   140027a65:	add    BYTE PTR [rcx],al
   140027a67:	(bad)  
   140027a68:	(bad)  
   140027a69:	(bad)  
   140027a6a:	inc    DWORD PTR [rax+0xf000000]
   140027a70:	(bad)  
   140027a71:	push   rax
   140027a73:	add    BYTE PTR [rax],al
   140027a75:	add    BYTE PTR [rcx],al
   140027a77:	(bad)  
   140027a78:	(bad)  
   140027a79:	(bad)  
   140027a7a:	inc    DWORD PTR [rax+0x7000000]
   140027a80:	(bad)  
   140027a81:	inc    eax
   140027a83:	add    BYTE PTR [rax],al
   140027a85:	add    BYTE PTR [rcx],al
   140027a87:	(bad)  
   140027a88:	(bad)  
   140027a89:	(bad)  
   140027a8a:	inc    eax
   140027a8c:	add    BYTE PTR [rax],al
   140027a8e:	add    BYTE PTR [rcx],al
   140027a90:	(bad)  
   140027a91:	inc    DWORD PTR [rax]
   140027a93:	add    BYTE PTR [rax],al
   140027a95:	add    BYTE PTR [rax],al
   140027a97:	(bad)  
   140027a98:	(bad)  
   140027a99:	(bad)  
   140027a9a:	jmp    rax
   140027a9c:	add    BYTE PTR [rax],al
   140027a9e:	add    BYTE PTR [rax],al
   140027aa0:	(bad)  
   140027aa1:	clc    
   140027aa2:	add    BYTE PTR [rax],al
   140027aa4:	add    BYTE PTR [rax],al
   140027aa6:	add    bh,bh
   140027aa8:	(bad)  
   140027aa9:	(bad)  
   140027aaa:	jmp    rax
   140027aac:	add    BYTE PTR [rax],al
   140027aae:	add    BYTE PTR [rax],al
   140027ab0:	add    eax,DWORD PTR [rax+0x0]
   140027ab6:	add    BYTE PTR [rdi-0x1],bh
   140027ab9:	(bad)  
   140027aba:	push   rax
	...
   140027ac4:	add    BYTE PTR [rax],al
   140027ac6:	add    BYTE PTR [rdi-0x1],bh
   140027ac9:	(bad)  
   140027aca:	push   rax
	...
   140027ad4:	add    BYTE PTR [rax],al
   140027ad6:	add    BYTE PTR [rdi-0x1],bh
   140027ad9:	(bad)  
   140027ada:	(bad)  
   140027adb:	clc    
	...
   140027ae4:	add    BYTE PTR [rax],al
   140027ae6:	xor    BYTE PTR [rdi],bh
   140027ae8:	(bad)  
   140027ae9:	(bad)  
   140027aea:	(bad)  
   140027aeb:	cld    
	...
   140027af4:	add    BYTE PTR [rax],al
   140027af6:	xor    BYTE PTR [rdi],bh
   140027af8:	(bad)  
   140027af9:	(bad)  
   140027afa:	(bad)  
   140027afb:	inc    BYTE PTR [rax]
	...
   140027b05:	add    BYTE PTR [rax+0x3f],dh
   140027b08:	(bad)  
   140027b09:	(bad)  
   140027b0a:	(bad)  
   140027b0b:	inc    BYTE PTR [rax]
	...
   140027b15:	add    al,bh
   140027b17:	(bad)  
   140027b18:	(bad)  
   140027b19:	(bad)  
   140027b1a:	(bad)  
   140027b1b:	inc    DWORD PTR [rax]
	...
   140027b25:	add    eax,edi
   140027b27:	(bad)  
   140027b28:	(bad)  
   140027b29:	(bad)  
   140027b2a:	(bad)  
   140027b2b:	inc    DWORD PTR [rax+0x0]
   140027b31:	add    BYTE PTR [rax],al
   140027b33:	add    BYTE PTR [rax],al
   140027b35:	add    edi,eax
   140027b37:	(bad)  
   140027b38:	(bad)  
   140027b39:	(bad)  
   140027b3a:	(bad)  
   140027b3b:	inc    eax
	...
   140027b45:	(bad)  
   140027b46:	clc    
   140027b47:	(bad)  
   140027b48:	(bad)  
   140027b49:	(bad)  
   140027b4a:	(bad)  
   140027b4b:	jmp    rax
	...
   140027b55:	paddb  mm3,QWORD PTR [rdi]
   140027b58:	(bad)  
   140027b59:	(bad)  
   140027b5a:	(bad)  
   140027b5b:	push   rax
	...
   140027b65:	(bad)  
   140027b66:	cld    
   140027b67:	(bad)  
   140027b68:	(bad)  
   140027b69:	(bad)  
   140027b6a:	(bad)  
   140027b6b:	(bad)  
   140027b6c:	clc    
	...
   140027b75:	(bad)  
   140027b76:	cld    
   140027b77:	(bad)  
   140027b78:	(bad)  
   140027b79:	(bad)  
   140027b7a:	(bad)  
   140027b7b:	(bad)  
   140027b7c:	cld    
	...
   140027b85:	jg     0x140027b83
   140027b87:	(bad)  
   140027b88:	(bad)  
   140027b89:	(bad)  
   140027b8a:	(bad)  
   140027b8b:	(bad)  
   140027b8c:	inc    DWORD PTR [rax]
   140027b8e:	add    BYTE PTR [rax],al
   140027b90:	add    BYTE PTR [rax],al
   140027b92:	add    BYTE PTR [rax],al
   140027b94:	add    bh,bh
   140027b96:	cld    
   140027b97:	(bad)  
   140027b98:	(bad)  
   140027b99:	(bad)  
   140027b9a:	(bad)  
   140027b9b:	(bad)  
   140027b9c:	inc    DWORD PTR [rax+0x0]
   140027ba2:	add    BYTE PTR [rax],al
   140027ba4:	add    edi,edi
   140027ba6:	cld    
   140027ba7:	(bad)  
   140027ba8:	(bad)  
   140027ba9:	(bad)  
   140027baa:	(bad)  
   140027bab:	(bad)  
   140027bac:	inc    eax
   140027bae:	add    BYTE PTR [rax],al
   140027bb0:	add    BYTE PTR [rax],al
   140027bb2:	add    BYTE PTR [rax],al
   140027bb4:	(bad)  
   140027bb5:	(bad)  
   140027bb6:	clc    
   140027bb7:	(bad)  
   140027bb8:	(bad)  
   140027bb9:	(bad)  
   140027bba:	(bad)  
   140027bbb:	(bad)  
   140027bbc:	push   rax
   140027bbe:	add    BYTE PTR [rax],al
   140027bc0:	add    BYTE PTR [rax],al
   140027bc2:	add    BYTE PTR [rax],al
   140027bc4:	ud0    edi,eax
   140027bc7:	(bad)  
   140027bc8:	(bad)  
   140027bc9:	(bad)  
   140027bca:	(bad)  
   140027bcb:	(bad)  
   140027bcc:	(bad)  
   140027bcd:	clc    
   140027bce:	add    BYTE PTR [rax],al
   140027bd0:	add    BYTE PTR [rax],al
   140027bd2:	add    BYTE PTR [rax],al
   140027bd4:	(bad)  
   140027bd5:	push   rax
   140027bd7:	(bad)  
   140027bd8:	(bad)  
   140027bd9:	(bad)  
   140027bda:	(bad)  
   140027bdb:	(bad)  
   140027bdc:	(bad)  
   140027bdd:	inc    BYTE PTR [rax]
   140027bdf:	add    BYTE PTR [rax],al
   140027be1:	add    BYTE PTR [rax],al
   140027be3:	add    bh,bh
   140027be5:	push   rax
   140027be7:	(bad)  
   140027be8:	(bad)  
   140027be9:	(bad)  
   140027bea:	(bad)  
   140027beb:	(bad)  
   140027bec:	(bad)  
   140027bed:	inc    DWORD PTR [rax+0x0]
   140027bf3:	add    bh,bh
   140027bf5:	inc    eax
   140027bf7:	(bad)  
   140027bf8:	(bad)  
   140027bf9:	(bad)  
   140027bfa:	(bad)  
   140027bfb:	(bad)  
   140027bfc:	(bad)  
   140027bfd:	push   rax
   140027bff:	add    BYTE PTR [rax],al
   140027c01:	add    BYTE PTR [rax],al
   140027c03:	add    BYTE PTR [rdi],cl
   140027c05:	inc    DWORD PTR [rax-0xc1]
   140027c0b:	(bad)  
   140027c0c:	(bad)  
   140027c0d:	(bad)  
   140027c0e:	cld    
   140027c0f:	add    BYTE PTR [rax],al
   140027c11:	add    BYTE PTR [rax],al
   140027c13:	add    BYTE PTR [rax],al
   140027c15:	cld    
   140027c16:	add    BYTE PTR [rdi],bh
   140027c18:	(bad)  
   140027c19:	(bad)  
   140027c1a:	(bad)  
   140027c1b:	(bad)  
   140027c1c:	(bad)  
   140027c1d:	(bad)  
   140027c1e:	inc    DWORD PTR [rax+0x0]
   140027c24:	add    BYTE PTR [rax],al
   140027c26:	add    BYTE PTR [rdi-0x1],bh
   140027c29:	(bad)  
   140027c2a:	(bad)  
   140027c2b:	(bad)  
   140027c2c:	(bad)  
   140027c2d:	(bad)  
   140027c2e:	(bad)  
   140027c2f:	clc    
   140027c30:	add    BYTE PTR [rax],al
   140027c32:	add    BYTE PTR [rax],al
   140027c34:	add    BYTE PTR [rax],al
   140027c36:	add    BYTE PTR [rdi-0x1],bh
   140027c39:	(bad)  
   140027c3a:	(bad)  
   140027c3b:	(bad)  
   140027c3c:	(bad)  
   140027c3d:	(bad)  
   140027c3e:	(bad)  
   140027c3f:	(bad)  
   140027c40:	inc    eax
   140027c42:	add    BYTE PTR [rax],al
   140027c44:	add    BYTE PTR [rax],al
   140027c46:	add    bh,bh
   140027c48:	(bad)  
   140027c49:	(bad)  
   140027c4a:	(bad)  
   140027c4b:	(bad)  
   140027c4c:	(bad)  
   140027c4d:	(bad)  
   140027c4e:	(bad)  
   140027c4f:	(bad)  
   140027c50:	push   rax
   140027c52:	add    BYTE PTR [rax],al
   140027c54:	add    BYTE PTR [rax],al
   140027c56:	add    bh,bh
   140027c58:	(bad)  
   140027c59:	(bad)  
   140027c5a:	(bad)  
   140027c5b:	(bad)  
   140027c5c:	(bad)  
   140027c5d:	(bad)  
   140027c5e:	(bad)  
   140027c5f:	(bad)  
   140027c60:	(bad)  
   140027c61:	inc    BYTE PTR [rax]
   140027c63:	add    BYTE PTR [rax],al
   140027c65:	add    BYTE PTR [rcx],al
   140027c67:	(bad)  
   140027c68:	(bad)  
   140027c69:	(bad)  
   140027c6a:	(bad)  
   140027c6b:	(bad)  
   140027c6c:	(bad)  
   140027c6d:	(bad)  
   140027c6e:	(bad)  
   140027c6f:	(bad)  
   140027c70:	(bad)  
   140027c71:	inc    DWORD PTR [rax+0x3000000]
   140027c77:	(bad)  
   140027c78:	(bad)  
   140027c79:	(bad)  
   140027c7a:	(bad)  
   140027c7b:	(bad)  
   140027c7c:	(bad)  
   140027c7d:	(bad)  
   140027c7e:	(bad)  
   140027c7f:	(bad)  
   140027c80:	(bad)  
   140027c81:	push   rax
   140027c83:	add    BYTE PTR [rax],al
   140027c85:	add    BYTE PTR [rdi],cl
   140027c87:	(bad)  
   140027c88:	(bad)  
   140027c89:	(bad)  
   140027c8a:	(bad)  
   140027c8b:	(bad)  
   140027c8c:	(bad)  
   140027c8d:	(bad)  
   140027c8e:	(bad)  
   140027c8f:	(bad)  
   140027c90:	(bad)  
   140027c91:	(bad)  
   140027c92:	inc    BYTE PTR [rax]
   140027c94:	add    BYTE PTR [rax],al
   140027c96:	(bad)  
   140027c97:	(bad)  
   140027c98:	(bad)  
   140027c99:	(bad)  
   140027c9a:	(bad)  
   140027c9b:	(bad)  
   140027c9c:	(bad)  
   140027c9d:	(bad)  
   140027c9e:	(bad)  
   140027c9f:	(bad)  
   140027ca0:	(bad)  
   140027ca1:	(bad)  
   140027ca2:	jmp    rax
   140027ca4:	add    BYTE PTR [rax],al
   140027ca6:	(bad)  
   140027ca7:	(bad)  
   140027ca8:	(bad)  
   140027ca9:	(bad)  
   140027caa:	(bad)  
   140027cab:	(bad)  
   140027cac:	(bad)  
   140027cad:	(bad)  
   140027cae:	(bad)  
   140027caf:	(bad)  
   140027cb0:	(bad)  
   140027cb1:	(bad)  
   140027cb2:	(bad)  
   140027cb3:	inc    DWORD PTR [rax]
   140027cb5:	(bad)  
   140027cb6:	(bad)  
   140027cb7:	(bad)  
   140027cb8:	(bad)  
   140027cb9:	(bad)  
   140027cba:	(bad)  
   140027cbb:	(bad)  
   140027cbc:	(bad)  
   140027cbd:	(bad)  
   140027cbe:	(bad)  
   140027cbf:	(bad)  
   140027cc0:	(bad)  
   140027cc1:	(bad)  
   140027cc2:	(bad)  
   140027cc3:	(bad)  
   140027cc4:	(bad)  
   140027cc5:	(bad)  
   140027cc6:	(bad)  
   140027cc7:	(bad)  
   140027cc8:	(bad)  
   140027cc9:	(bad)  
   140027cca:	(bad)  
   140027ccb:	(bad)  
   140027ccc:	(bad)  
   140027ccd:	(bad)  
   140027cce:	(bad)  
   140027ccf:	(bad)  
   140027cd0:	(bad)  
   140027cd1:	(bad)  
   140027cd2:	(bad)  
   140027cd3:	(bad)  
   140027cd4:	(bad)  
   140027cd5:	(bad)  
   140027cd6:	(bad)  
   140027cd7:	(bad)  
   140027cd8:	(bad)  
   140027cd9:	(bad)  
   140027cda:	(bad)  
   140027cdb:	(bad)  
   140027cdc:	(bad)  
   140027cdd:	(bad)  
   140027cde:	(bad)  
   140027cdf:	(bad)  
   140027ce0:	(bad)  
   140027ce1:	(bad)  
   140027ce2:	(bad)  
   140027ce3:	(bad)  
   140027ce4:	(bad)  
   140027ce5:	(bad)  
   140027ce6:	(bad)  
   140027ce7:	(bad)  
   140027ce8:	(bad)  
   140027ce9:	(bad)  
   140027cea:	(bad)  
   140027ceb:	(bad)  
   140027cec:	(bad)  
   140027ced:	(bad)  
   140027cee:	(bad)  
   140027cef:	(bad)  
   140027cf0:	(bad)  
   140027cf1:	(bad)  
   140027cf2:	(bad)  
   140027cf3:	(bad)  
   140027cf4:	(bad)  
   140027cf5:	(bad)  
   140027cf6:	(bad)  
   140027cf7:	(bad)  
   140027cf8:	(bad)  
   140027cf9:	(bad)  
   140027cfa:	(bad)  
   140027cfb:	(bad)  
   140027cfc:	(bad)  
   140027cfd:	(bad)  
   140027cfe:	(bad)  
   140027cff:	(bad)  
   140027d00:	(bad)  
   140027d01:	(bad)  
   140027d02:	(bad)  
   140027d03:	(bad)  
   140027d04:	(bad)  
   140027d05:	(bad)  
   140027d06:	(bad)  
   140027d07:	(bad)  
   140027d08:	(bad)  
   140027d09:	(bad)  
   140027d0a:	(bad)  
   140027d0b:	(bad)  
   140027d0c:	(bad)  
   140027d0d:	(bad)  
   140027d0e:	(bad)  
   140027d0f:	(bad)  
   140027d10:	(bad)  
   140027d11:	(bad)  
   140027d12:	(bad)  
   140027d13:	(bad)  
   140027d14:	(bad)  
   140027d15:	(bad)  
   140027d16:	(bad)  
   140027d17:	jmp    FWORD PTR [rax]
   140027d19:	add    BYTE PTR [rax],al
   140027d1b:	add    BYTE PTR [rax+0x0],ah
   140027d1e:	add    BYTE PTR [rax],al
   140027d20:	rol    BYTE PTR [rax],0x0
   140027d23:	add    BYTE PTR [rcx],al
   140027d25:	add    BYTE PTR [rax],ah
   140027d27:	add    BYTE PTR [rax],al
   140027d29:	add    BYTE PTR [rax],al
   140027d2b:	add    BYTE PTR [rax+0x94],al
	...
   1400284f5:	add    BYTE PTR [rbp+0x1],dl
   1400284f8:	add    BYTE PTR [rax],al
   1400284fa:	push   rbp
   1400284fb:	add    al,0x0
   1400284fd:	add    BYTE PTR [rbp+0x7],dl
   140028500:	add    BYTE PTR [rax],al
   140028502:	push   rbp
   140028503:	or     DWORD PTR [rax],eax
   140028505:	add    BYTE PTR [rbp+0xb],dl
   140028508:	add    BYTE PTR [rax],al
   14002850a:	push   rbp
   14002850b:	or     al,0x0
   14002850d:	add    BYTE PTR [rbp+0xc],dl
   140028510:	add    BYTE PTR [rax],al
   140028512:	push   rbp
   140028513:	or     eax,DWORD PTR [rax]
   140028515:	add    BYTE PTR [rbp+0xa],dl
   140028518:	add    BYTE PTR [rax],al
   14002851a:	push   rbp
   14002851b:	or     DWORD PTR [rax],eax
   14002851d:	add    BYTE PTR [rbp+0x7],dl
   140028520:	add    BYTE PTR [rax],al
   140028522:	push   rbp
   140028523:	add    eax,0x2550000
	...
   14002866c:	add    BYTE PTR [rax],al
   14002866e:	push   rbp
   14002866f:	add    al,BYTE PTR [rax]
   140028671:	add    BYTE PTR [rbp+0x6],dl
   140028674:	add    BYTE PTR [rax],al
   140028676:	push   rbp
   140028677:	or     al,0x0
   140028679:	add    BYTE PTR [rbp+0x14],dl
   14002867c:	add    BYTE PTR [rax],al
   14002867e:	push   rbp
   14002867f:	sbb    eax,DWORD PTR [rax]
   140028681:	add    BYTE PTR [rbp+0x20],dl
   140028684:	add    BYTE PTR [rax],al
   140028686:	push   rbp
   140028687:	and    eax,DWORD PTR [rax]
   140028689:	add    BYTE PTR [rbp+0x25],dl
   14002868c:	add    BYTE PTR [rax],al
   14002868e:	push   rbp
   14002868f:	and    eax,0x23550000
   140028694:	add    BYTE PTR [rax],al
   140028696:	push   rbp
   140028697:	and    DWORD PTR [rax],eax
   140028699:	add    BYTE PTR [rbp+0x1e],dl
   14002869c:	add    BYTE PTR [rax],al
   14002869e:	push   rbp
   14002869f:	sbb    al,BYTE PTR [rax]
   1400286a1:	add    BYTE PTR [rbp+0x15],dl
   1400286a4:	add    BYTE PTR [rax],al
   1400286a6:	push   rbp
   1400286a7:	adc    BYTE PTR [rax],al
   1400286a9:	add    BYTE PTR [rbp+0xa],dl
   1400286ac:	add    BYTE PTR [rax],al
   1400286ae:	push   rbp
   1400286af:	add    eax,0x2550000
	...
   1400287e4:	ret    0xfeff
   1400287e7:	add    DWORD PTR [rip+0x13048b50],edi        # 0x15307133d
   1400287ed:	sbb    esp,DWORD PTR [rdi+0xd]
   1400287f0:	sbb    BYTE PTR [rip+0xffffffff86321d7c],ch        # 0xc634a572
   1400287f6:	rcl    DWORD PTR [rbp+0x36],cl
   1400287f9:	sahf   
   1400287fa:	in     al,dx
   1400287fb:	xchg   BYTE PTR [rdx],dh
   1400287fd:	test   al,0xf6
   1400287ff:	mov    dl,0x2d
   140028801:	test   al,0xf8
   140028803:	mov    ecx,0xcefaa82b
   140028808:	sub    ch,BYTE PTR [rax-0x5ad63706]
   14002880e:	imul   DWORD PTR [rcx-0x680a5fd8]
   140028814:	sub    DWORD PTR [rsi-0x71d18714],edx
   14002881a:	jrcxz  0x140028886
   14002881c:	and    eax,0x134bc26e
   140028821:	xor    ecx,DWORD PTR [rcx+0x55000033]
   140028827:	add    BYTE PTR es:[rax],al
   14002882a:	push   rbp
   14002882b:	(bad)  
   14002882c:	add    BYTE PTR [rax],al
   14002882e:	push   rbp
   14002882f:	(bad)  
   140028830:	add    BYTE PTR [rax],al
   140028832:	push   rbp
   140028833:	(bad)  
   140028834:	add    BYTE PTR [rax],al
   140028836:	push   rbp
   140028837:	(bad)  
   140028838:	add    BYTE PTR [rax],al
   14002883a:	push   rbp
   14002883b:	add    eax,DWORD PTR [rax]
   14002883d:	add    BYTE PTR [rbp+0x1],dl
	...
   14002895c:	(bad)  
   14002895d:	(bad)  
   14002895e:	inc    BYTE PTR [rcx]
   140028960:	jg     0x140028908
   140028962:	ret    
   140028963:	add    ebp,DWORD PTR [rdx]
   140028965:	cmp    DWORD PTR [rbx+0x6],edi
   140028968:	sub    BYTE PTR [rbp-0x6a],cl
   14002896b:	sbb    bh,BYTE PTR [rdx]
   14002896d:	movabs al,ds:0xb629ccfab53570ea
   140028976:	(bad)  
   140028977:	fisub  WORD PTR [rsi*4-0x4cdc2301]
   14002897e:	(bad)  
   14002897f:	fldenv [rdx]
   140028981:	mov    al,0xff
   140028983:	(bad)  
   140028984:	and    BYTE PTR [rdi-0x50df3101],ch
   14002898a:	inc    edi
   14002898c:	and    BYTE PTR [rbp-0x53e04101],ch
   140028992:	push   QWORD PTR [rdx-0x5b0056e3]
   140028998:	sbb    al,0xa9
   14002899a:	call   QWORD PTR [rdi-0x730157e2]
   1400289a0:	and    esp,DWORD PTR [rsi-0x5fd77a04]
   1400289a6:	cmc    
   1400289a7:	jae    0x1400289d0
   1400289a9:	(bad)  
   1400289aa:	fimul  DWORD PTR [rdx+rbx*1+0x4a]
   1400289ae:	lahf   
   1400289af:	xor    DWORD PTR [rcx],eax
   1400289b1:	add    al,0x59
   1400289b3:	and    DWORD PTR [rax],eax
   1400289b5:	add    BYTE PTR [rbp+0x17],dl
   1400289b8:	add    BYTE PTR [rax],al
   1400289ba:	push   rbp
   1400289bb:	or     eax,0x6550000
   1400289c0:	add    BYTE PTR [rax],al
   1400289c2:	push   rbp
   1400289c3:	add    al,BYTE PTR [rax]
   1400289c5:	add    BYTE PTR [rbp+0x1],dl
	...
   140028ad4:	(bad)  
   140028ad7:	add    esp,eax
   140028ad9:	(bad)  
   140028ada:	inc    BYTE PTR [rdx]
   140028adc:	ret    
   140028add:	(bad)  
   140028ade:	inc    BYTE PTR [rbx]
   140028ae0:	rex.WRXB
   140028ae1:	addr32 cdq 
   140028ae3:	add    eax,0x30c37f37
   140028ae8:	cmp    al,0xba
   140028aea:	stc    
   140028aeb:	shr    DWORD PTR [rip+0x29e2ffc0],0xbd        # 0x169e58ab2
   140028af2:	jmp    rax
   140028af4:	es mov edx,0xb724deff
   140028afa:	(bad)  
   140028afb:	fsub   QWORD PTR [rbx]
   140028afd:	mov    dh,0xff
   140028aff:	fldenv [rbx]
   140028b01:	mov    bl,0xff
   140028b03:	(bad)  
   140028b04:	and    dh,BYTE PTR [rbx-0x4fdd3201]
   140028b0a:	inc    esi
   140028b0c:	and    al,0xb2
   140028b0e:	(bad)  
   140028b0f:	mov    esp,0xb0feb024
   140028b14:	and    ch,BYTE PTR [rbp-0x52de5b02]
   140028b1a:	call   QWORD PTR [rbp-0x750053e1]
   140028b20:	sbb    eax,0x1d83ffaa
   140028b25:	test   eax,0xa81c7bff
   140028b2a:	push   QWORD PTR [rcx+riz*1-0x5a]
   140028b2e:	std    
   140028b2f:	push   0x53f69f25
   140028b34:	and    ch,BYTE PTR [rcx+rax*8+0x2f]
   140028b38:	or     BYTE PTR [rip+0x196a],dl        # 0x14002a4a8
   140028b3e:	push   rbp
   140028b3f:	sldt   WORD PTR [rax]
   140028b42:	push   rbp
   140028b43:	(bad)  
   140028b44:	add    BYTE PTR [rax],al
   140028b46:	push   rbp
   140028b47:	add    eax,DWORD PTR [rax]
   140028b49:	add    BYTE PTR [rbp+0x1],dl
	...
   140028b70:	pushf  
   140028b71:	sbb    bl,BYTE PTR gs:[rsi]
   140028b74:	fwait
   140028b75:	sbb    cl,BYTE PTR fs:[rbx-0x66]
   140028b79:	sbb    DWORD PTR fs:[rcx+rbx*4+0x63],ebp
   140028b7e:	sbb    DWORD PTR [rax-0x57e69c67],eax
   140028b84:	cwde   
   140028b85:	(bad)  
   140028b86:	sbb    DWORD PTR [rbx-0x38e69d69],ebp
   140028b8c:	xchg   esi,eax
   140028b8d:	(bad)  
   140028b8e:	sbb    dh,dl
   140028b90:	xchg   ebp,eax
   140028b91:	(bad)  
   140028b92:	sbb    dh,dl
   140028b94:	xchg   ebp,eax
   140028b95:	(bad)  
   140028b96:	sbb    dh,dl
   140028b98:	xchg   esp,eax
   140028b99:	pop    rdi
   140028b9a:	sbb    dl,al
   140028b9c:	xchg   ebx,eax
   140028b9d:	pop    rdi
   140028b9e:	sbb    BYTE PTR [rdx+rdx*4-0x6d53e8a2],ch
   140028ba5:	pop    rsi
   140028ba6:	(bad)  
   140028ba7:	nop
   140028ba8:	xchg   ecx,eax
   140028ba9:	pop    rbp
   140028baa:	(bad)  
   140028bab:	adc    DWORD PTR [rax-0x6f97e8a3],0x8f42175c
   140028bb5:	pop    rsp
   140028bb6:	(bad)  
   140028bb7:	sbb    al,0x0
	...
   140028c4d:	add    BYTE PTR [rax],al
   140028c4f:	add    ch,al
   140028c51:	(bad)  
   140028c52:	inc    BYTE PTR [rcx]
   140028c54:	(bad)  
   140028c55:	(bad)  
   140028c56:	inc    BYTE PTR [rdx]
   140028c58:	ret    
   140028c59:	(bad)  
   140028c5a:	inc    BYTE PTR [rbx]
   140028c5c:	jge    0x140028c02
   140028c5e:	ret    0x4704
   140028c61:	movabs eax,ds:0xc42fd6fdc23a3ce0
   140028c6a:	jmp    rdx
   140028c6c:	sub    al,0xc1
   140028c6e:	jmp    rcx
   140028c70:	sub    DWORD PTR [rdi-0x43d91e01],edi
   140028c76:	(bad)  
   140028c77:	fisub  WORD PTR [rsi]
   140028c79:	mov    bh,0xff
   140028c7b:	fsub   QWORD PTR [rbx]
   140028c7d:	mov    dh,0xff
   140028c7f:	fldcw  WORD PTR [rdx]
   140028c81:	mov    ah,0xfc
   140028c83:	mov    eax,0x67f6af38
   140028c88:	rex cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140028c8a:	in     al,dx
   140028c8b:	sub    DWORD PTR [rdx-0x60],esp
   140028c8e:	(bad)  
   140028c8f:	(bad)  
   140028c90:	sahf   
   140028c91:	stc    
   140028c92:	inc    DWORD PTR [rsi+rbx*4]
   140028c95:	stc    
   140028c96:	inc    DWORD PTR [rdi+rax*2]
   140028c99:	mov    al,0xf3
   140028c9b:	and    BYTE PTR [rip+0x3626f1a9],bh        # 0x176297e4a
   140028ca1:	lods   eax,DWORD PTR ds:[rsi]
   140028ca2:	cmc    
   140028ca3:	cmp    BYTE PTR [rsi+rbp*4],ch
   140028ca6:	cli    
   140028ca7:	rex.WRXB and al,0xac
   140028caa:	(bad)  
   140028cab:	push   0x63ffac20
   140028cb0:	(bad)  
   140028cb1:	stos   BYTE PTR es:[rdi],al
   140028cb2:	call   FWORD PTR [rbx+0x1f]
   140028cb5:	test   eax,0xa62354ff
   140028cba:	cld    
   140028cbb:	rex.WB (bad) 
   140028cbd:	mov    edi,ebx
   140028cbf:	sub    dl,BYTE PTR [rdi]
   140028cc1:	xchg   r13d,eax
   140028cc3:	sldt   WORD PTR [rax]
   140028cc6:	push   rbp
   140028cc7:	(bad)  
   140028cc8:	add    BYTE PTR [rax],al
   140028cca:	push   rbp
   140028ccb:	add    al,BYTE PTR [rax]
   140028ccd:	add    BYTE PTR [rbp+0x1],dl
	...
   140028ce0:	sahf   
   140028ce1:	sbb    dl,BYTE PTR [esi]
   140028ce4:	sahf   
   140028ce5:	data16 sbb bl,BYTE PTR [rdx-0x63]
   140028ce9:	data16 sbb bl,BYTE PTR [rax-0x3ae59963]
   140028cf0:	test   al,0x73
   140028cf2:	and    ebx,esi
   140028cf4:	mov    dh,0x82
   140028cf6:	sub    ch,bl
   140028cf8:	ror    BYTE PTR [rbp-0x6b3a0cd3],0x30
   140028cff:	not    cl
   140028d01:	lahf   
   140028d02:	xor    bh,bl
   140028d04:	shl    DWORD PTR [rdx-0x572604cd],cl
   140028d0a:	xor    edi,esi
   140028d0c:	fld    TBYTE PTR [rdx-0x542400d0]
   140028d12:	xor    edi,edi
   140028d14:	fld    TBYTE PTR [rcx-0x592700ce]
   140028d1a:	xor    edi,esi
   140028d1c:	(bad)  
   140028d1d:	movabs al,ds:0x97c8fb329ed1fb33
   140028d26:	xor    eax,edi
   140028d28:	ret    0x2e90
   140028d2b:	idiv   BYTE PTR [rcx-0x530ed57a]
   140028d31:	jp     0x140028d58
   140028d33:	(bad)  
   140028d34:	popf   
   140028d35:	imul   ebx,DWORD PTR [rip+0x175c8fdf],0x165b8ec1        # 0x1575f1d1e
   140028d3f:	mov    cs,WORD PTR [rsi-0x72abe9a5]
   140028d45:	pop    rdx
   140028d46:	(bad)  
   140028d47:	adc    al,BYTE PTR [rax]
	...
   140028dc9:	add    BYTE PTR [rax],al
   140028dcb:	add    ch,al
   140028dcd:	(bad)  
   140028dce:	inc    BYTE PTR [rcx]
   140028dd0:	(bad)  
   140028dd1:	(bad)  
   140028dd2:	inc    BYTE PTR [rbx]
   140028dd4:	ret    
   140028dd5:	(bad)  
   140028dd6:	inc    BYTE PTR [rbx]
   140028dd8:	ret    0xfeff
   140028ddb:	add    al,0x4a
   140028ddd:	nop
   140028dde:	int    0x18
   140028de0:	ds leave 
   140028de2:	std    
   140028de3:	retf   0xcb33
   140028de6:	jmp    rbx
   140028de8:	(bad)  
   140028de9:	(bad)  
   140028dea:	jmp    rdx
   140028dec:	sub    al,0xc1
   140028dee:	jmp    rcx
   140028df0:	(bad)  
   140028df1:	mov    ebp,0xb724e0ff
   140028df6:	(bad)  
   140028df7:	fisub  WORD PTR [rbx]
   140028df9:	mov    dh,0xff
   140028dfb:	fidiv  DWORD PTR [rip+0x2674f3a9]        # 0x1667781aa
   140028e01:	cmp    bh,BYTE PTR [rbp+0xd]
   140028e04:	add    BYTE PTR [rax],al
   140028e06:	push   rbp
   140028e07:	add    al,BYTE PTR [rax]
	...
   140028e25:	add    BYTE PTR [rax],al
   140028e27:	add    BYTE PTR [rbp+rdi*4-0xa],dl
   140028e2b:	add    eax,0x19f1ab3c
   140028e30:	xor    BYTE PTR [rbp-0x52dbcf08],ch
   140028e36:	dec    BYTE PTR [rax+0x22]
   140028e39:	lods   eax,DWORD PTR ds:[rsi]
   140028e3a:	dec    DWORD PTR [rax+0x20]
   140028e3d:	stos   BYTE PTR es:[rdi],al
   140028e3e:	inc    DWORD PTR [rcx+0x25]
   140028e41:	test   eax,0x9f2d37fd
   140028e46:	repnz (bad) 
   140028e48:	and    al,0x68
   140028e4a:	mov    ebx,0x55000006
   140028e4f:	add    DWORD PTR [rax],eax
   140028e51:	add    BYTE PTR [rax],al
   140028e53:	add    BYTE PTR [rdi-0x60fde498],bl
   140028e59:	sbb    ecx,DWORD PTR [edi-0x61]
   140028e5d:	sbb    esp,DWORD PTR [edi-0x23de8e59]
   140028e64:	mov    ebx,0xccef2c87
   140028e69:	xchg   esi,eax
   140028e6a:	xor    dl,bh
   140028e6c:	(bad)  
   140028e6d:	movabs ds:0xadddff30a8d9fe31,eax
   140028e76:	xor    al,0xff
   140028e78:	fbstp  TBYTE PTR [rax-0x491e00c9]
   140028e7e:	cmp    edi,edi
   140028e80:	in     al,0xb9
   140028e82:	cmp    al,0xff
   140028e84:	in     eax,0xba
   140028e86:	cmp    al,0xff
   140028e88:	out    0xbc,al
   140028e8a:	(bad)  
   140028e8b:	jmp    rsi
   140028e8d:	mov    esi,0xbfe6ff3f
   140028e92:	rex jmp rsi
   140028e95:	mov    edi,0xbde6ff3f
   140028e9a:	(bad)  
   140028e9b:	jmp    rsi
   140028e9d:	mov    ebx,0xb8e6ff3e
   140028ea2:	notrack jmp rbx
   140028ea5:	mov    eax,0xb4e2ff3b
   140028eaa:	cmp    edi,edi
   140028eac:	loope  0x140028e5e
   140028eae:	cmp    edi,edi
   140028eb0:	fild   QWORD PTR [rsi+rsi*1+0x32a7daff]
   140028eb7:	call   rbx
   140028eb9:	popf   
   140028eba:	(bad)  
   140028ebb:	inc    dl
   140028ebd:	mov    gs,WORD PTR [rdx]
   140028ebf:	clc    
   140028ec0:	scas   eax,DWORD PTR es:[rdi]
   140028ec1:	jl     0x140028ee7
   140028ec3:	in     eax,dx
   140028ec4:	xchg   esi,eax
   140028ec5:	(bad)  
   140028ec6:	sbb    ebx,ebp
   140028ec8:	lea    ebx,[rdx+0x16]
   140028ecb:	movabs al,ds:0xa16598c56165a8c
	...
   140028f4c:	(bad)  
   140028f4d:	(bad)  
   140028f4e:	inc    BYTE PTR [rbx]
   140028f50:	ret    
   140028f51:	(bad)  
   140028f52:	inc    BYTE PTR [rdx+rax*8]
   140028f55:	(bad)  
   140028f56:	inc    BYTE PTR [rsi+rcx*4]
   140028f59:	mov    ebx,0xc34a06d2
   140028f5e:	not    DWORD PTR [rax-0x1b0031ca]
   140028f64:	xor    ebx,ecx
   140028f66:	jmp    rbx
   140028f68:	sub    eax,0x29e2ffc7
   140028f6d:	mov    edi,0xba26e1ff
   140028f72:	jmp    rcx
   140028f74:	and    esi,DWORD PTR [rbp-0x60ca2001]
   140028f7a:	out    dx,al
   140028f7b:	outs   dx,BYTE PTR ds:[rsi]
   140028f7c:	sbb    esp,DWORD PTR [rdi]
   140028f7e:	jo     0x140028f8e
   140028f80:	add    BYTE PTR [rax],al
   140028f82:	push   rbp
   140028f83:	add    DWORD PTR [rax],eax
	...
   140028fb1:	add    BYTE PTR [rax],al
   140028fb3:	add    BYTE PTR [rdx-0x45],dl
   140028fb6:	cmc    
   140028fb7:	add    al,0x37
   140028fb9:	lods   al,BYTE PTR ds:[rsi]
   140028fba:	repnz sbb BYTE PTR [rax],ch
   140028fbd:	mov    al,0xfe
   140028fbf:	and    ebp,DWORD PTR ss:[rdi-0x52dcce01]
   140028fc6:	jmp    QWORD PTR [rdi+riz*1]
   140028fc9:	lods   al,BYTE PTR ds:[rsi]
   140028fca:	(bad)  
   140028fcb:	(bad)  
   140028fcc:	mov    DWORD PTR fs:[rax+0x1c689f0f],edx
   140028fd3:	pop    rcx
   140028fd4:	movabs al,ds:0xccec2c85b8bc1b68
   140028fdd:	cwde   
   140028fde:	(bad)  
   140028fdf:	sti    
   140028fe0:	(bad)  
   140028fe1:	movabs eax,ds:0xaedeff32a8daff2e
   140028fea:	(bad)  
   140028feb:	jmp    rcx
   140028fed:	mov    dh,0x3b
   140028fef:	jmp    rbx
   140028ff1:	mov    edx,0xbce7ff3d
   140028ff6:	(bad)  
   140028ff7:	(bad)  
   140028ff8:	jmp    0x12c01d1bd
   140028ffd:	ret    
   140028ffe:	rex.XB (bad) 
   140029000:	(bad)  
   140029001:	ret    
   140029002:	rex.R (bad) 
   140029004:	jmp    0x140028fcd
   140029006:	rex.RB (bad) 
   140029008:	in     eax,dx
   140029009:	leave  
   14002900a:	rex.RB (bad) 
   14002900c:	in     eax,dx
   14002900d:	leave  
   14002900e:	rex.RXB (bad) 
   140029010:	out    dx,al
   140029011:	leave  
   140029012:	rex.RXB (bad) 
   140029014:	out    dx,al
   140029015:	leave  
   140029016:	rex.RXB (bad) 
   140029018:	in     eax,dx
   140029019:	leave  
   14002901a:	rex.W (bad) 
   14002901c:	in     eax,dx
   14002901d:	leave  
   14002901e:	rex.W (bad) 
   140029020:	in     eax,dx
   140029021:	retf   0xff47
   140029024:	in     eax,dx
   140029025:	(bad)
   140029028:	jmp    0x140028fed
   14002902a:	rex.RB (bad) 
   14002902c:	jmp    0x140028fef
   14002902e:	rex.X (bad) 
   140029030:	jmp    0x140028ff2
   140029032:	rex.XB (bad) 
   140029034:	call   0x12401d0f3
   140029039:	mov    ch,0x3c
   14002903b:	(bad)  
   14002903c:	fbstp  TBYTE PTR [rax-0x552200c9]
   140029042:	xor    bh,bh
   140029044:	xlat   BYTE PTR ds:[rbx]
   140029045:	movabs al,ds:0x79adfa2a8ec4ff2e
   14002904e:	and    al,0xee
   140029050:	lea    ebx,[rdx+0x16]
   140029053:	ror    BYTE PTR [rcx+rbx*2+0x598b7f16],1
   14002905a:	(bad)  
   14002905b:	(bad)  
	...
   1400290c8:	(bad)  
   1400290c9:	(bad)  
   1400290ca:	inc    BYTE PTR [rdx]
   1400290cc:	ret    
   1400290cd:	(bad)  
   1400290ce:	inc    BYTE PTR [rdx+rax*8]
   1400290d1:	(bad)  
   1400290d2:	inc    BYTE PTR [rcx+rax*8]
   1400290d5:	(bad)  
   1400290d6:	inc    BYTE PTR [rsi]
   1400290d8:	imul   eax,ecx,0xffffffeb
   1400290db:	sbb    eax,0xddfed241
   1400290e0:	ss sar edi,1
   1400290e3:	in     al,0x31
   1400290e5:	int    0xff
   1400290e7:	in     al,0x2c
   1400290e9:	ret    
   1400290ea:	jmp    rdx
   1400290ec:	(bad)  
   1400290ed:	mov    ebp,0xb724e1ff
   1400290f2:	jmp    rcx
   1400290f4:	xor    DWORD PTR [rbp+0x251a9ff7],ebp
   1400290fa:	ins    DWORD PTR es:[rdi],dx
   1400290fb:	adc    al,0x0
   1400290fd:	add    BYTE PTR [rbp+0x3],dl
	...
   14002913c:	pop    rsi
   14002913d:	ret    0x1f5
   140029140:	mov    r15b,0xf8
   140029143:	or     DWORD PTR [rsi-0x6d],ebx
   140029146:	popf   
   140029147:	and    DWORD PTR [rbx-0x6292c98e],edx
   14002914d:	ins    BYTE PTR es:[rdi],dx
   14002914e:	and    eax,esi
   140029150:	mov    edx,0xceef2f87
   140029155:	cwde   
   140029156:	sub    eax,0x2fa2d7fc
   14002915b:	(bad)  
   14002915c:	fld    TBYTE PTR [rbx-0x4e2000cc]
   140029162:	(bad)  
   140029163:	jmp    rbx
   140029165:	mov    dh,0x3b
   140029167:	jmp    rsi
   140029169:	mov    esp,0xc0e8ff3d
   14002916e:	rex.B (bad) 
   140029170:	(bad)  
   140029171:	(bad)  
   140029175:	leave  
   140029176:	rex.RB (bad) 
   140029178:	in     eax,dx
   140029179:	retf   
   14002917a:	rex.W (bad) 
   14002917c:	out    dx,al
   14002917d:	int    0x49
   14002917f:	push   rax
   140029181:	iret   
   140029182:	rex.WX push rax
   140029185:	iret   
   140029186:	rex.WRB push r8
   140029189:	ror    DWORD PTR [rbp-0x1],1
   14002918c:	lock ror DWORD PTR [rbp-0x1],1
   140029190:	lock ror BYTE PTR [rbp-0x1],cl
   140029194:	repnz ror BYTE PTR [rsi-0x1],cl
   140029198:	repnz ror DWORD PTR [rsi-0x1],cl
   14002919c:	repnz ror DWORD PTR [rsi-0x1],cl
   1400291a0:	repnz ror BYTE PTR [rsi-0x1],cl
   1400291a4:	repz ror DWORD PTR [rdi-0x1],1
   1400291a8:	repnz ror BYTE PTR [rsi-0x1],1
   1400291ac:	lock int 0x4b
   1400291af:	(bad)  
   1400291b0:	out    dx,eax
   1400291b1:	int3   
   1400291b2:	rex.WX (bad) 
   1400291b4:	out    dx,al
   1400291b5:	mov    DWORD PTR [rdi-0x1],0xff44c2ed
   1400291bc:	(bad)  
   1400291bd:	rol    BYTE PTR [rdi+rdi*8-0x19],0xba
   1400291c2:	(bad)  
   1400291c3:	jmp    rbx
   1400291c5:	mov    bl,0x3b
   1400291c7:	(bad)  
   1400291c8:	fild   QWORD PTR [rax+rdi*1+0x2fa4daff]
   1400291cf:	call   rax
   1400291d1:	xchg   edi,eax
   1400291d2:	sub    esi,edi
   1400291d4:	mov    dh,0x7f
   1400291d6:	and    esi,ebp
   1400291d8:	(bad)  
   1400291d9:	pop    rbx
   1400291da:	adc    eax,0x16598bd7
   1400291df:	jg     0x14002916b
   1400291e1:	pop    rax
   1400291e2:	adc    eax,0xf
	...
   140029247:	add    bl,al
   140029249:	(bad)  
   14002924a:	inc    BYTE PTR [rdx+rax*8]
   14002924d:	(bad)  
   14002924e:	inc    BYTE PTR [rcx+rax*8]
   140029251:	(bad)  
   140029252:	inc    BYTE PTR [rsi]
   140029254:	sar    bh,0xfe
   140029257:	or     BYTE PTR [rbp-0x37],dl
   14002925a:	mul    BYTE PTR [rdx+0x3d]
   14002925d:	(bad)  
   14002925e:	jmp    rsp
   140029260:	ss sar edi,1
   140029263:	in     al,0x30
   140029265:	retf   0xe5ff
   140029268:	sub    al,al
   14002926a:	jmp    rbx
   14002926c:	and    al,0xb7
   14002926e:	jmp    rdx
   140029270:	and    eax,0x30defeb3
   140029275:	jne    0x140029237
   140029277:	rex.X or al,0xf
   14002927a:	(bad)  
   14002927b:	or     eax,DWORD PTR [rax]
   14002927d:	add    BYTE PTR [rbp+0x1],dl
	...
   1400292c0:	movabs ds:0xbec41b69a3401b6a,al
   1400292c9:	mov    ch,BYTE PTR [rsi]
   1400292cb:	icebp  
   1400292cc:	int    0x9a
   1400292ce:	sub    eax,0x31a2d5fd
   1400292d3:	(bad)  
   1400292d4:	fisubr DWORD PTR [rdx-0x4f2100cc]
   1400292da:	cmp    edi,edi
   1400292dc:	loop   0x140029295
   1400292de:	cmp    bh,bh
   1400292e0:	in     al,0xba
   1400292e2:	notrack jmp rdi
   1400292e5:	mov    edi,0xc4e9ff42
   1400292ea:	rex.R (bad) 
   1400292ec:	jmp    0x1400292b7
   1400292ee:	rex.RX (bad) 
   1400292f0:	in     eax,dx
   1400292f1:	retf   
   1400292f2:	rex.WB (bad) 
   1400292f4:	out    dx,eax
   1400292f5:	(bad)  
   1400292f6:	rex.WR push rax
   1400292f9:	ror    DWORD PTR [rdi+rdi*8-0xe],cl
   1400292fd:	rcl    DWORD PTR [rcx-0x1],cl
   140029300:	repz (bad) 
   140029302:	push   rdx
   140029303:	push   rbx
   140029305:	xlat   BYTE PTR ds:[rbx]
   140029306:	push   rbx
   140029307:	push   rsp
   140029309:	xlat   BYTE PTR ds:[rbx]
   14002930a:	push   rsp
   14002930b:	push   rsp
   14002930d:	xlat   BYTE PTR ds:[rbx]
   14002930e:	push   rbp
   14002930f:	push   rsp
   140029311:	fst    DWORD PTR [rsi-0x1]
   140029314:	hlt    
   140029315:	fcom   QWORD PTR [rbp-0x1]
   140029318:	hlt    
   140029319:	fcom   QWORD PTR [rbp-0x1]
   14002931c:	hlt    
   14002931d:	fcom   QWORD PTR [rbp-0x1]
   140029320:	cmc    
   140029321:	fist   DWORD PTR [rbp-0x1]
   140029324:	cmc    
   140029325:	fst    DWORD PTR [rsi-0x1]
   140029328:	hlt    
   140029329:	fcom   DWORD PTR [rbx-0x1]
   14002932c:	repz (bad) 
   14002932e:	push   rdx
   14002932f:	push   rsp
   140029331:	rcl    DWORD PTR [rax-0x1],cl
   140029334:	repz iret 
   140029336:	push   rax
   140029337:	push   rcx
   140029339:	int3   
   14002933a:	rex.WR push rax
   14002933d:	retf   0xff4a
   140029340:	in     eax,dx
   140029341:	(bad)
   140029344:	(bad)  
   140029345:	rol    BYTE PTR [rbp-0x1],0xe8
   140029349:	mov    edx,0xb5e6ff43
   14002934e:	cmp    al,0xff
   140029350:	fild   QWORD PTR [rdi+rsi*1+0x30a2d9ff]
   140029357:	call   rcx
   140029359:	xchg   edi,eax
   14002935a:	sub    esi,edi
   14002935c:	mov    dl,0x79
   14002935e:	and    ebx,esi
   140029360:	lea    ebx,[rdx+0x16]
   140029363:	int    0x8a
   140029365:	pop    rax
   140029366:	adc    eax,0x15588a63
   14002936b:	or     BYTE PTR [rax],al
	...
   1400293c1:	add    BYTE PTR [rax],al
   1400293c3:	add    bl,al
   1400293c5:	(bad)  
   1400293c6:	inc    BYTE PTR [rdx]
   1400293c8:	ret    0xfeff
   1400293cb:	add    al,0xc1
   1400293cd:	(bad)  
   1400293ce:	inc    BYTE PTR [rip+0x8feffc0]        # 0x149019394
   1400293d4:	mov    edi,0x4f0bfeff
   1400293d9:	sar    bl,cl
   1400293db:	pushf  
   1400293dc:	cmp    dl,bh
   1400293de:	jmp    rbp
   1400293e0:	xor    al,0xcf
   1400293e2:	jmp    rsp
   1400293e4:	(bad)  
   1400293e5:	(bad)  
   1400293e6:	jmp    rsp
   1400293e8:	(bad)  
   1400293e9:	mov    ebp,0xb323e3ff
   1400293ee:	jmp    rdx
   1400293f0:	cs stos DWORD PTR es:[rdi],eax
   1400293f2:	clc    
   1400293f3:	mov    ah,0x11
   1400293f5:	(bad)  
   1400293f6:	fs sbb al,0x0
   1400293f9:	add    BYTE PTR [rbp+0x7],dl
	...
   140029438:	movabs ds:0xb67b1c6aa3071c6a,eax
   140029441:	sub    DWORD PTR [rdi+riz*8],0xfa2390c9
   140029448:	(bad)  
   140029449:	movabs eax,ds:0xafdeff32aadaff2d
   140029452:	(bad)  
   140029453:	(bad)  
   140029454:	fbstp  TBYTE PTR [rsp+rdi*1+0x3eb8e1ff]
   14002945b:	jmp    rbp
   14002945d:	mov    edi,0xc3e8ff41
   140029462:	rex.R (bad) 
   140029464:	jmp    0x14002942e
   140029466:	rex.RXB (bad) 
   140029468:	in     eax,dx
   140029469:	(bad)  
   14002946a:	rex.WX (bad) 
   14002946c:	out    dx,al
   14002946d:	ror    BYTE PTR [rbp-0x1],1
   140029470:	icebp  
   140029471:	(bad)  
   140029472:	push   rax
   140029473:	push   rdx
   140029475:	(bad)  
   140029476:	push   rdx
   140029477:	push   rsp
   140029479:	fcom   DWORD PTR [rsi-0x1]
   14002947c:	hlt    
   14002947d:	ficomp DWORD PTR [rcx-0x1]
   140029480:	hlt    
   140029481:	fistp  DWORD PTR [rdx-0x1]
   140029484:	cmc    
   140029485:	fstp   QWORD PTR [rdi+rdi*8-0x9]
   140029489:	ficomp WORD PTR [rdi+rdi*8-0x9]
   14002948d:	ficomp WORD PTR [rsi-0x1]
   140029490:	mul    eax
   140029492:	pop    rbp
   140029493:	push   rdi
   140029495:	loope  0x1400294f4
   140029497:	push   rdi
   140029499:	loope  0x1400294f9
   14002949b:	(bad)  
   14002949c:	clc    
   14002949d:	loope  0x1400294fc
   14002949f:	(bad)  
   1400294a0:	clc    
   1400294a1:	loope  0x140029500
   1400294a3:	(bad)  
   1400294a4:	clc    
   1400294a5:	loopne 0x140029505
   1400294a7:	push   rdi
   1400294a9:	fcomp  QWORD PTR [rdi+rdi*8-0x9]
   1400294ad:	fstp   QWORD PTR [rdx-0x1]
   1400294b0:	clc    
   1400294b1:	fistp  DWORD PTR [rcx-0x1]
   1400294b4:	neg    al
   1400294b6:	push   rsi
   1400294b7:	push   rsi
   1400294b9:	xlat   BYTE PTR ds:[rbx]
   1400294ba:	push   rbx
   1400294bb:	push   rbx
   1400294bd:	rcl    BYTE PTR [rcx-0x1],1
   1400294c0:	repz int 0x4d
   1400294c3:	(bad)  
   1400294c4:	out    dx,eax
   1400294c5:	retf   0xff4a
   1400294c8:	out    dx,eax
   1400294c9:	ret    
   1400294ca:	rex.W (bad) 
   1400294cc:	(bad)  
   1400294cd:	mov    edi,0xbae9ff45
   1400294d2:	rex jmp rsi
   1400294d5:	mov    ah,0x3c
   1400294d7:	jmp    rax
   1400294d9:	stos   DWORD PTR es:[rdi],eax
   1400294da:	ss call rdi
   1400294dd:	sahf   
   1400294de:	(bad)  
   1400294df:	dec    eax
   1400294e1:	mov    fs,WORD PTR [rbx]
   1400294e3:	std    
   1400294e4:	lods   eax,DWORD PTR ds:[rsi]
   1400294e5:	jbe    0x14002950a
   1400294e7:	out    dx,eax
   1400294e8:	mov    WORD PTR [rdx+0x15],ds
   1400294eb:	ror    BYTE PTR [rdx+0x421558],0x0
	...
   140029542:	add    BYTE PTR [rax],al
   140029544:	ret    0xfeff
   140029547:	add    al,0xc1
   140029549:	(bad)  
   14002954a:	inc    BYTE PTR [rax+rax*8]
   14002954d:	(bad)  
   14002954e:	inc    BYTE PTR [rdi]
   140029550:	mov    edi,0xbe0afeff
   140029555:	(bad)  
   140029556:	dec    BYTE PTR [rip+0xffffffffbefdd74d]        # 0xff006ca9
   14002955c:	cmp    dl,ch
   14002955e:	jmp    rbp
   140029560:	xor    ecx,esi
   140029562:	jmp    rsp
   140029564:	sub    al,0xc3
   140029566:	jmp    rsp
   140029568:	and    al,0xb7
   14002956a:	jmp    rbx
   14002956c:	and    BYTE PTR [rax-0x64ce1d01],dh
   140029572:	out    dx,al
   140029573:	test   DWORD PTR [rdi],ecx
   140029575:	(bad)  
   140029576:	sbb    BYTE PTR fs:[rax],al
   140029579:	add    BYTE PTR [rbp+0x5],dl
	...
   1400295b4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400295b5:	imul   ebx,DWORD PTR ds:0xffffffffb31c6ca4,0xffffffbe
   1400295bd:	xchg   DWORD PTR [rax],ebp
   1400295bf:	repnz rcr DWORD PTR [rbp-0x592700d7],cl
   1400295c6:	xor    bh,bh
   1400295c8:	(bad)  [rbp-0x4b2000cb]
   1400295ce:	cmp    edi,edi
   1400295d0:	jrcxz  0x14002958b
   1400295d2:	cmp    al,0xff
   1400295d4:	in     eax,0xbd
   1400295d6:	(bad)  
   1400295d7:	(bad)  
   1400295d8:	call   0x12a01d8a0
   1400295dd:	leave  
   1400295de:	rex.RX (bad) 
   1400295e0:	in     eax,dx
   1400295e1:	retf   
   1400295e2:	rex.RXB (bad) 
   1400295e4:	out    dx,al
   1400295e5:	ror    BYTE PTR [rdi+rdi*8-0x10],1
   1400295e9:	(bad)  
   1400295ea:	push   rax
   1400295eb:	push   rdx
   1400295ed:	fcom   DWORD PTR [rdi+rdi*8-0xd]
   1400295f1:	ficomp DWORD PTR [rax-0x1]
   1400295f4:	cmc    
   1400295f5:	fistp  DWORD PTR [rbx-0x1]
   1400295f8:	neg    bh
   1400295fa:	pop    rbp
   1400295fb:	push   rdi
   1400295fd:	loope  0x14002965e
   1400295ff:	(bad)  
   140029600:	clc    
   140029601:	loop   0x140029665
   140029603:	(bad)  
   140029604:	clc    
   140029605:	jrcxz  0x140029669
   140029607:	(bad)  
   140029608:	clc    
   140029609:	jrcxz  0x140029670
   14002960b:	(bad)  
   14002960c:	stc    
   14002960d:	in     eax,0x65
   14002960f:	(bad)  
   140029610:	stc    
   140029611:	out    0x65,eax
   140029613:	(bad)  
   140029614:	stc    
   140029615:	out    0x66,al
   140029617:	(bad)  
   140029618:	stc    
   140029619:	out    0x65,al
   14002961b:	(bad)  
   14002961c:	stc    
   14002961d:	in     eax,0x66
   14002961f:	(bad)  
   140029620:	stc    
   140029621:	out    0x66,al
   140029623:	(bad)  
   140029624:	stc    
   140029625:	in     al,0x66
   140029627:	(bad)  
   140029628:	cli    
   140029629:	jrcxz  0x140029691
   14002962b:	(bad)  
   14002962c:	cli    
   14002962d:	jrcxz  0x140029691
   14002962f:	(bad)  
   140029630:	stc    
   140029631:	loopne 0x140029694
   140029633:	(bad)  
   140029634:	stc    
   140029635:	loopne 0x140029697
   140029637:	(bad)  
   140029638:	stc    
   140029639:	fstp   QWORD PTR [rbx-0x1]
   14002963c:	neg    edx
   14002963e:	push   rdi
   14002963f:	push   rbp
   140029641:	(bad)  
   140029642:	push   rsp
   140029643:	push   rsp
   140029645:	rcl    DWORD PTR [rcx-0x1],1
   140029648:	lock int3 
   14002964a:	rex.WRXB push r8
   14002964d:	leave  
   14002964e:	rex.WX (bad) 
   140029650:	out    dx,al
   140029651:	ret    
   140029652:	rex.RXB (bad) 
   140029654:	jmp    0x140029613
   140029656:	rex.RB (bad) 
   140029658:	call   0x12401d714
   14002965d:	mov    cl,0x3a
   14002965f:	(bad)  
   140029660:	fsub   QWORD PTR [rsi-0x652a00cd]
   140029666:	sub    edi,edi
   140029668:	mov    ebp,0xa3fa1e84
   14002966d:	ins    BYTE PTR es:[rdi],dx
   14002966e:	and    edx,ebp
   140029670:	mov    bl,BYTE PTR [rax+0x15]
   140029673:	jne    0x1400295fe
   140029675:	pop    rax
   140029676:	adc    eax,0x3
	...
   1400296c3:	add    cl,al
   1400296c5:	(bad)  
   1400296c6:	inc    BYTE PTR [rax+rax*8]
   1400296c9:	(bad)  
   1400296ca:	inc    BYTE PTR [rsi]
   1400296cc:	mov    edi,0xbe09feff
   1400296d1:	(bad)  
   1400296d2:	dec    BYTE PTR [rdi*4+0x480efeff]
   1400296d9:	fdivr  st,st(6)
   1400296db:	int    0x3a
   1400296dd:	(bad)  
   1400296de:	jmp    rbp
   1400296e0:	xor    ebp,ecx
   1400296e2:	jmp    rsp
   1400296e4:	sub    eax,eax
   1400296e6:	jmp    rsp
   1400296e8:	and    dh,BYTE PTR [rbp-0x52df1c01]
   1400296ee:	jmp    rbx
   1400296f0:	xor    DWORD PTR [rcx+0x171068da],ecx
   1400296f6:	gs (bad) 
   1400296f8:	add    BYTE PTR [rax],al
   1400296fa:	push   rbp
   1400296fb:	add    al,0x0
	...
   14002972d:	add    BYTE PTR [rax],al
   14002972f:	add    BYTE PTR [rbx+rbp*2+0x6ba6561c],ah
   140029736:	sbb    dl,dl
   140029738:	(bad)  
   140029739:	mov    ebx,DWORD PTR [rdi]
   14002973b:	clc    
   14002973c:	(bad)  
   14002973d:	movabs al,ds:0xb0deff32aadaff2c
   140029746:	ss jmp rcx
   140029749:	mov    dh,0x3a
   14002974b:	jmp    rsp
   14002974d:	mov    ebx,0xc0e7ff3c
   140029752:	rex (bad) 
   140029754:	jmp    0x12d01db1e
   140029759:	retf   
   14002975a:	rex.RXB (bad) 
   14002975c:	out    dx,al
   14002975d:	iret   
   14002975e:	rex.WXB (bad) 
   140029760:	out    dx,eax
   140029761:	rcl    DWORD PTR [rcx-0x1],cl
   140029764:	icebp  
   140029765:	xlat   BYTE PTR ds:[rbx]
   140029766:	push   rbx
   140029767:	push   rbx
   140029769:	fcomp  QWORD PTR [rcx-0x1]
   14002976c:	neg    dh
   14002976e:	pop    rsp
   14002976f:	push   rsi
   140029771:	fistp  WORD PTR [rsi-0x1]
   140029774:	mul    ebx
   140029776:	(bad)  
   140029777:	(bad)  
   140029778:	clc    
   140029779:	in     al,0x65
   14002977b:	(bad)  
   14002977c:	clc    
   14002977d:	out    0x65,eax
   14002977f:	(bad)  
   140029780:	stc    
   140029781:	out    0x68,eax
   140029783:	(bad)  
   140029784:	cli    
   140029785:	call   0x128fd96f5
   14002978a:	ins    DWORD PTR es:[rdi],dx
   14002978b:	(bad)  
   14002978c:	cli    
   14002978d:	jmp    0x129fd96fe
   140029792:	ins    BYTE PTR es:[rdi],dx
   140029793:	(bad)  
   140029794:	cli    
   140029795:	jmp    0x129fd9707
   14002979a:	outs   dx,BYTE PTR ds:[rsi]
   14002979b:	(bad)  
   14002979c:	cli    
   14002979d:	jmp    0x12afe970f
   1400297a2:	ins    DWORD PTR es:[rdi],dx
   1400297a3:	(bad)  
   1400297a4:	sti    
   1400297a5:	jmp    0x129fe9717
   1400297aa:	ins    BYTE PTR es:[rdi],dx
   1400297ab:	(bad)  
   1400297ac:	sti    
   1400297ad:	out    0x6d,eax
   1400297af:	(bad)  
   1400297b0:	sti    
   1400297b1:	in     al,0x6a
   1400297b3:	(bad)  
   1400297b4:	cli    
   1400297b5:	jrcxz  0x140029820
   1400297b7:	(bad)  
   1400297b8:	cli    
   1400297b9:	loop   0x14002981f
   1400297bb:	(bad)  
   1400297bc:	cli    
   1400297bd:	loope  0x14002981d
   1400297bf:	(bad)  
   1400297c0:	stc    
   1400297c1:	fcomp  QWORD PTR [rbp-0x1]
   1400297c4:	neg    eax
   1400297c6:	pop    rbx
   1400297c7:	push   rbp
   1400297c9:	(bad)  
   1400297ca:	push   rsi
   1400297cb:	push   rbx
   1400297cd:	rcl    BYTE PTR [rcx-0x1],1
   1400297d0:	icebp  
   1400297d1:	int    0x4d
   1400297d3:	(bad)  
   1400297d4:	out    dx,eax
   1400297d5:	(bad)  
   1400297d6:	rex.WX (bad) 
   1400297d8:	in     al,dx
   1400297d9:	rol    DWORD PTR [rbp-0x1],0xe9
   1400297dd:	mov    ecx,0xb2e7ff43
   1400297e2:	cmp    eax,0x37ace2ff
   1400297e7:	(bad)  
   1400297e8:	fldenv [rax-0x6e3200d1]
   1400297ee:	and    edi,esi
   1400297f0:	stos   BYTE PTR es:[rdi],al
   1400297f1:	jb     0x140029811
   1400297f3:	lock mov bl,BYTE PTR [rax+0x15]
   1400297f7:	movabs al,ds:0x14155889
	...
   140029844:	sar    bh,0xfe
   140029847:	add    eax,0x8feffbf
   14002984c:	mov    esi,0xbd0bfeff
   140029851:	(bad)  
   140029852:	dec    BYTE PTR [rip+0x11feffbc]        # 0x152019814
   140029858:	rex.RXB fdivr st,st(6)
   14002985b:	fidivr DWORD PTR [rdx]
   14002985d:	(bad)  
   14002985e:	jmp    rsp
   140029860:	xor    dl,cl
   140029862:	jmp    rsp
   140029864:	(bad)  
   140029865:	mov    edi,0xb322e4ff
   14002986a:	jmp    rbx
   14002986c:	and    ch,BYTE PTR [rdx+0x7c2de2fe]
   140029872:	int    0x5d
   140029874:	or     eax,0x146111
   140029879:	add    BYTE PTR [rbp+0x3],dl
	...
   1400298ac:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400298ad:	ins    BYTE PTR es:[rdi],dx
   1400298ae:	sbb    al,0x67
   1400298b0:	mov    ebp,0xcded2e88
   1400298b5:	xchg   esp,eax
   1400298b6:	and    edi,ebp
   1400298b8:	xlat   BYTE PTR ds:[rbx]
   1400298b9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400298ba:	cs (bad) 
   1400298bc:	fld    TBYTE PTR [rbp-0x4c2100cb]
   1400298c2:	cmp    bh,bh
   1400298c4:	loop   0x14002987e
   1400298c6:	cmp    edi,edi
   1400298c8:	in     eax,0xbd
   1400298ca:	cmp    eax,0x43c1e8ff
   1400298cf:	(bad)  
   1400298d0:	(bad)  
   1400298d1:	leave  
   1400298d2:	rex.RB (bad) 
   1400298d4:	in     al,dx
   1400298d5:	int    0x48
   1400298d7:	(bad)  
   1400298d8:	out    dx,eax
   1400298d9:	ror    DWORD PTR [rbp-0x1],1
   1400298dc:	icebp  
   1400298dd:	(bad)  
   1400298de:	push   rbx
   1400298df:	push   rdx
   1400298e1:	ficom  DWORD PTR [rdi-0x1]
   1400298e4:	hlt    
   1400298e5:	fstp   QWORD PTR [rdx-0x1]
   1400298e8:	mul    ecx
   1400298ea:	pop    rdi
   1400298eb:	push   rdi
   1400298ed:	jrcxz  0x140029954
   1400298ef:	(bad)  
   1400298f0:	stc    
   1400298f1:	in     al,0x67
   1400298f3:	(bad)  
   1400298f4:	stc    
   1400298f5:	out    0x6a,al
   1400298f7:	(bad)  
   1400298f8:	stc    
   1400298f9:	(bad)  
   1400298fa:	imul   edi,edi,0xfffffffa
   1400298fd:	in     al,dx
   1400298fe:	outs   dx,DWORD PTR ds:[rsi]
   1400298ff:	(bad)  
   140029900:	sti    
   140029901:	in     al,dx
   140029902:	jno    0x140029903
   140029904:	sti    
   140029905:	out    dx,al
   140029906:	jb     0x140029907
   140029908:	sti    
   140029909:	out    dx,al
   14002990a:	je     0x14002990b
   14002990c:	sti    
   14002990d:	jmp    0x140029985
   14002990f:	(bad)  
   140029910:	cld    
   140029911:	out    dx,eax
   140029912:	ja     0x140029913
   140029914:	cld    
   140029915:	in     al,dx
   140029916:	jbe    0x140029917
   140029918:	cld    
   140029919:	in     eax,dx
   14002991a:	je     0x14002991b
   14002991c:	cld    
   14002991d:	in     eax,dx
   14002991e:	je     0x14002991f
   140029920:	cld    
   140029921:	out    dx,al
   140029922:	jbe    0x140029923
   140029924:	cld    
   140029925:	in     eax,dx
   140029926:	jne    0x140029927
   140029928:	cld    
   140029929:	in     eax,dx
   14002992a:	je     0x14002992b
   14002992c:	cld    
   14002992d:	jmp    0x1400299a3
   14002992f:	(bad)  
   140029930:	cld    
   140029931:	jmp    0x128ff98a6
   140029936:	jo     0x140029937
   140029938:	cld    
   140029939:	out    0x6c,eax
   14002993b:	(bad)  
   14002993c:	cld    
   14002993d:	in     al,0x67
   14002993f:	(bad)  
   140029940:	sti    
   140029941:	jrcxz  0x1400299a6
   140029943:	(bad)  
   140029944:	cli    
   140029945:	loopne 0x1400299a8
   140029947:	push   rdi
   140029949:	fcomp  QWORD PTR [rbp-0x1]
   14002994c:	neg    al
   14002994e:	pop    rcx
   14002994f:	push   rsp
   140029951:	rcl    BYTE PTR [rbp-0x1],cl
   140029954:	repz iret 
   140029956:	rex.WRXB (bad) 
   140029958:	out    dx,eax
   140029959:	enter  0xff4c,0xee
   14002995d:	ret    0xff49
   140029960:	jmp    0x140029920
   140029962:	rex.RB (bad) 
   140029964:	call   0x12501d820
   140029969:	mov    al,0x3a
   14002996b:	(bad)  
   14002996c:	fsub   QWORD PTR [rbx-0x682d00cd]
   140029972:	sub    edi,edi
   140029974:	mov    al,0x76
   140029976:	sbb    al,0xf4
   140029978:	mov    WORD PTR [rcx+0x15],ds
   14002997b:	(bad)  
   14002997c:	mov    bl,BYTE PTR [rax+0x15]
   14002997f:	xor    BYTE PTR [rax],al
	...
   1400299bd:	add    BYTE PTR [rax],al
   1400299bf:	add    cl,al
   1400299c1:	(bad)  
   1400299c2:	inc    BYTE PTR [rcx]
   1400299c4:	mov    edi,0xbe07feff
   1400299c9:	(bad)  
   1400299ca:	dec    BYTE PTR [rdx]
   1400299cc:	mov    ebp,0xbb0dfeff
   1400299d1:	(bad)  
   1400299d2:	dec    BYTE PTR [rdi]
   1400299d4:	mov    ebx,0x4713feff
   1400299d9:	fdivr  st,st(6)
   1400299db:	in     eax,0x39
   1400299dd:	(bad)  
   1400299de:	jmp    rbp
   1400299e0:	xor    dl,cl
   1400299e2:	jmp    rsp
   1400299e4:	(bad)  
   1400299e5:	mov    esp,0xb222e4ff
   1400299ea:	jmp    rbx
   1400299ec:	and    ch,BYTE PTR [rdx+0x782ee1fe]
   1400299f2:	(bad)  
   1400299f3:	push   rdi
   1400299f4:	or     cl,BYTE PTR [rdi]
   1400299f6:	pop    rdi
   1400299f7:	(bad)  
   1400299f8:	add    BYTE PTR [rax],al
   1400299fa:	push   rbp
   1400299fb:	add    al,0x0
	...
   140029a25:	add    BYTE PTR [rax],al
   140029a27:	add    BYTE PTR [rsi-0x418fe394],ah
   140029a2d:	xchg   DWORD PTR [rbx],ebp
   140029a2f:	in     eax,dx
   140029a30:	rcr    DWORD PTR [rcx-0x5a2701db],1
   140029a36:	xor    bh,bh
   140029a38:	(bad)  [rsi-0x4b2000cc]
   140029a3e:	cmp    bh,bh
   140029a40:	jrcxz  0x1400299fc
   140029a42:	cmp    bh,bh
   140029a44:	in     eax,0xc0
   140029a46:	ds (bad) 
   140029a48:	call   0x12d01de12
   140029a4d:	retf   
   140029a4e:	rex.RX (bad) 
   140029a50:	in     eax,dx
   140029a51:	ror    BYTE PTR [rdx-0x1],1
   140029a54:	out    dx,eax
   140029a55:	(bad)  
   140029a56:	rex.WRXB push r10
   140029a59:	ficom  DWORD PTR [rbp-0x1]
   140029a5c:	repz fstp QWORD PTR [rax-0x1]
   140029a60:	cmc    
   140029a61:	loope  0x140029ac1
   140029a63:	push   rdi
   140029a65:	loop   0x140029aca
   140029a67:	(bad)  
   140029a68:	stc    
   140029a69:	out    0x67,al
   140029a6b:	(bad)  
   140029a6c:	stc    
   140029a6d:	jmp    0x129fc99db
   140029a72:	ins    DWORD PTR es:[rdi],dx
   140029a73:	(bad)  
   140029a74:	sti    
   140029a75:	in     eax,dx
   140029a76:	jb     0x140029a77
   140029a78:	cld    
   140029a79:	in     eax,dx
   140029a7a:	je     0x140029a7b
   140029a7c:	sti    
   140029a7d:	out    dx,al
   140029a7e:	ja     0x140029a7f
   140029a80:	sti    
   140029a81:	out    dx,al
   140029a82:	jp     0x140029a83
   140029a84:	cld    
   140029a85:	out    dx,eax
   140029a86:	jns    0x140029a87
   140029a88:	cld    
   140029a89:	lock jl 0x140029a8b
   140029a8c:	cld    
   140029a8d:	icebp  
   140029a8e:	jge    0x140029a8f
   140029a90:	cld    
   140029a91:	lock jge 0x140029a93
   140029a94:	cld    
   140029a95:	lock jge 0x140029a97
   140029a98:	cld    
   140029a99:	lock jle 0x140029a9b
   140029a9c:	cld    
   140029a9d:	icebp  
   140029a9e:	jl     0x140029a9f
   140029aa0:	cld    
   140029aa1:	icebp  
   140029aa2:	jl     0x140029aa3
   140029aa4:	cld    
   140029aa5:	icebp  
   140029aa6:	jnp    0x140029aa7
   140029aa8:	std    
   140029aa9:	out    dx,eax
   140029aaa:	jnp    0x140029aab
   140029aac:	std    
   140029aad:	in     eax,dx
   140029aae:	jns    0x140029aaf
   140029ab0:	std    
   140029ab1:	in     al,dx
   140029ab2:	jns    0x140029ab3
   140029ab4:	std    
   140029ab5:	jmp    0x140029b2c
   140029ab7:	(bad)  
   140029ab8:	std    
   140029ab9:	in     eax,dx
   140029aba:	je     0x140029abb
   140029abc:	cld    
   140029abd:	jmp    0x129ff9a33
   140029ac2:	imul   edi,edi,0xfffffffb
   140029ac5:	out    0x66,eax
   140029ac7:	(bad)  
   140029ac8:	stc    
   140029ac9:	loopne 0x140029b2e
   140029acb:	(bad)  
   140029acc:	cli    
   140029acd:	fbld   TBYTE PTR [rax-0x1]
   140029ad0:	neg    ecx
   140029ad2:	pop    rbp
   140029ad3:	push   rbp
   140029ad5:	(bad)  
   140029ad6:	pop    rax
   140029ad7:	push   rbx
   140029ad9:	iret   
   140029ada:	push   rdx
   140029adb:	push   rdx
   140029add:	retf   0xff4c
   140029ae0:	out    dx,eax
   140029ae1:	(bad)  
   140029ae2:	rex.WXB (bad) 
   140029ae4:	jmp    0x140029aa6
   140029ae6:	rex.RX (bad) 
   140029ae8:	jmp    0x12501dca5
   140029aed:	mov    cl,0x3b
   140029aef:	(bad)  
   140029af0:	fbld   TBYTE PTR [rsi-0x662b00cb]
   140029af6:	sub    al,0xff
   140029af8:	mov    ecx,0x8df81a7d
   140029afd:	pop    rcx
   140029afe:	adc    al,0xd9
   140029b00:	mov    bl,BYTE PTR [rax+0x15]
   140029b03:	rex.WX add BYTE PTR [rax],al
	...
   140029b3e:	add    BYTE PTR [rax],al
   140029b40:	sar    bh,0xfe
   140029b43:	add    DWORD PTR [rsi-0x42f60101],edi
   140029b49:	(bad)  
   140029b4a:	dec    BYTE PTR [rsp+rdi*4]
   140029b4d:	(bad)  
   140029b4e:	dec    BYTE PTR [rsi]
   140029b50:	mov    edx,0xba12feff
   140029b55:	(bad)  
   140029b56:	(bad)  
   140029b57:	(bad)  
   140029b58:	rex.WB fdivr st,st(6)
   140029b5b:	fistp  QWORD PTR [rdx]
   140029b5d:	(bad)  
   140029b5e:	jmp    rbp
   140029b60:	xor    dl,cl
   140029b62:	jmp    rbp
   140029b64:	(bad)  
   140029b65:	mov    esp,0xb022e4ff
   140029b6a:	jmp    rsp
   140029b6c:	and    ebp,DWORD PTR [rsi+rdi*8-0x2d7bce1d]
   140029b73:	movsxd eax,DWORD PTR [rip+0x185a08]        # 0x1401af581
   140029b79:	add    BYTE PTR [rbp+0x5],dl
	...
   140029ba4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140029ba5:	ins    DWORD PTR es:[rdi],dx
   140029ba6:	sbb    eax,0x2c88be61
   140029bab:	in     eax,dx
   140029bac:	rcr    BYTE PTR [rbx-0x572701d8],cl
   140029bb2:	xor    edi,edi
   140029bb4:	fidiv  WORD PTR [rcx-0x491f00ca]
   140029bba:	cmp    edi,edi
   140029bbc:	jrcxz  0x140029b7b
   140029bbe:	cmp    bh,bh
   140029bc0:	out    0xc1,al
   140029bc2:	ds (bad) 
   140029bc4:	jmp    0x12d01de90
   140029bc9:	int3   
   140029bca:	rex.RXB (bad) 
   140029bcc:	out    dx,al
   140029bcd:	ror    DWORD PTR [rdi+rdi*8-0xf],cl
   140029bd1:	(bad)  
   140029bd2:	push   rcx
   140029bd3:	push   rbx
   140029bd5:	fist   DWORD PTR [rbp-0x1]
   140029bd8:	cmc    
   140029bd9:	ficomp WORD PTR [rdx-0x1]
   140029bdc:	mul    ah
   140029bde:	pop    rdi
   140029bdf:	(bad)  
   140029be0:	clc    
   140029be1:	in     eax,0x67
   140029be3:	(bad)  
   140029be4:	stc    
   140029be5:	jmp    0x12bfc9b55
   140029bea:	ins    DWORD PTR es:[rdi],dx
   140029beb:	(bad)  
   140029bec:	cld    
   140029bed:	jmp    0x140029c61
   140029bef:	(bad)  
   140029bf0:	cld    
   140029bf1:	in     eax,dx
   140029bf2:	jne    0x140029bf3
   140029bf4:	sti    
   140029bf5:	out    dx,al
   140029bf6:	jp     0x140029bf7
   140029bf8:	cld    
   140029bf9:	icebp  
   140029bfa:	jnp    0x140029bfb
   140029bfc:	cld    
   140029bfd:	icebp  
   140029bfe:	jge    0x140029bff
   140029c00:	std    
   140029c01:	bnd jle 0x140029c03
   140029c04:	std    
   140029c05:	bnd jg 0x140029c07
   140029c08:	std    
   140029c09:	bnd jg 0x140029c0b
   140029c0c:	std    
   140029c0d:	repz cmp edi,0xff81f2fd
   140029c14:	std    
   140029c15:	repnz cmp edi,0xfffffffe
   140029c19:	repnz cmp edi,0xfffffffe
   140029c1d:	repnz cmp bh,0xfe
   140029c21:	repnz (bad) 
   140029c23:	(bad)  
   140029c24:	(bad)  
   140029c25:	icebp  
   140029c26:	cmp    bh,0xfe
   140029c29:	icebp  
   140029c2a:	(bad)  
   140029c2b:	(bad)  
   140029c2c:	(bad)  
   140029c2d:	icebp  
   140029c2e:	jle    0x140029c2f
   140029c30:	(bad)  
   140029c31:	out    dx,eax
   140029c32:	jge    0x140029c33
   140029c34:	std    
   140029c35:	out    dx,al
   140029c36:	jl     0x140029c37
   140029c38:	std    
   140029c39:	in     eax,dx
   140029c3a:	jns    0x140029c3b
   140029c3c:	std    
   140029c3d:	in     al,dx
   140029c3e:	jns    0x140029c3f
   140029c40:	std    
   140029c41:	in     al,dx
   140029c42:	jae    0x140029c43
   140029c44:	cld    
   140029c45:	jmp    0x127fe9bb9
   140029c4a:	push   0x65e2fcff
   140029c4f:	(bad)  
   140029c50:	sti    
   140029c51:	loopne 0x140029cb5
   140029c53:	(bad)  
   140029c54:	cli    
   140029c55:	ficomp DWORD PTR [rsi-0x1]
   140029c58:	not    ebp
   140029c5a:	pop    rax
   140029c5b:	push   rsp
   140029c5d:	iret   
   140029c5e:	push   rbx
   140029c5f:	push   rbx
   140029c61:	int3   
   140029c62:	rex.WRXB (bad) 
   140029c64:	out    dx,eax
   140029c65:	(bad)  
   140029c66:	rex.WXB (bad) 
   140029c68:	in     al,dx
   140029c69:	rol    BYTE PTR [rdi-0x1],0xe9
   140029c6d:	mov    edx,0xb1e5ff42
   140029c72:	cmp    eax,0x35a9e2ff
   140029c77:	call   rdi
   140029c79:	fwait
   140029c7a:	sub    eax,0x1b81bfff
   140029c7f:	sti    
   140029c80:	(bad)  
   140029c81:	pop    rdx
   140029c82:	adc    ebx,ebp
   140029c84:	mov    bl,BYTE PTR [rax+0x15]
   140029c87:	rex.WR add BYTE PTR [rax],r8b
	...
   140029cc2:	add    BYTE PTR [rax],al
   140029cc4:	mov    ebp,0xbc0afeff
   140029cc9:	(bad)  
   140029cca:	dec    BYTE PTR [rip+0x10feffba]        # 0x151019c8a
   140029cd0:	mov    ecx,0xb815feff
   140029cd5:	(bad)  
   140029cd6:	(bad)  
   140029cd7:	sbb    BYTE PTR [rbx+rbx*8-0x2],cl
   140029cdb:	(bad)  
   140029cdc:	cmp    al,0xd5
   140029cde:	jmp    rbp
   140029ce0:	xor    edx,ecx
   140029ce2:	jmp    rsp
   140029ce4:	(bad)  
   140029ce5:	mov    ebp,0xb222e4ff
   140029cea:	jmp    rsp
   140029cec:	and    DWORD PTR [rdi+rdi*8-0x1d6fcb1d],ebp
   140029cf3:	jbe    0x140029cf9
   140029cf5:	(bad)  
   140029cf6:	pop    rcx
   140029cf7:	sbb    al,0x0
   140029cf9:	add    BYTE PTR [rbp+0x7],dl
	...
   140029d20:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140029d21:	ins    DWORD PTR es:[rdi],dx
   140029d22:	sbb    eax,0x2f87bd49
   140029d27:	jmp    0x13d2836fd
   140029d2c:	fsubr  DWORD PTR [rax-0x4e2200cf]
   140029d32:	ss jmp rax
   140029d35:	mov    bh,0x39
   140029d37:	jmp    rsp
   140029d39:	mov    esp,0xc3e6ff3d
   140029d3e:	rex (bad) 
   140029d40:	jmp    0x12d01e30e
   140029d45:	(bad)  
   140029d46:	rex.W (bad) 
   140029d48:	out    dx,eax
   140029d49:	ror    DWORD PTR [rbp-0x1],cl
   140029d4c:	icebp  
   140029d4d:	fcom   DWORD PTR [rbx-0x1]
   140029d50:	hlt    
   140029d51:	fistp  DWORD PTR [rax-0x1]
   140029d54:	mul    cl
   140029d56:	pop    rbp
   140029d57:	push   rdi
   140029d59:	in     eax,0x61
   140029d5b:	(bad)  
   140029d5c:	clc    
   140029d5d:	call   0x128fd9cc9
   140029d62:	ins    DWORD PTR es:[rdi],dx
   140029d63:	(bad)  
   140029d64:	sti    
   140029d65:	jmp    0x140029dd7
   140029d67:	(bad)  
   140029d68:	cld    
   140029d69:	in     eax,dx
   140029d6a:	jae    0x140029d6b
   140029d6c:	sti    
   140029d6d:	lock ja 0x140029d6f
   140029d70:	cld    
   140029d71:	icebp  
   140029d72:	jp     0x140029d73
   140029d74:	std    
   140029d75:	bnd jl 0x140029d77
   140029d78:	std    
   140029d79:	bnd jle 0x140029d7b
   140029d7c:	std    
   140029d7d:	repz cmp edi,0xff83f5fd
   140029d84:	(bad)  
   140029d85:	hlt    
   140029d86:	test   bh,bh
   140029d88:	(bad)  
   140029d89:	hlt    
   140029d8a:	xchg   bh,bh
   140029d8c:	(bad)  
   140029d8d:	hlt    
   140029d8e:	xchg   bh,bh
   140029d90:	(bad)  
   140029d91:	hlt    
   140029d92:	mov    bh,bh
   140029d94:	(bad)  
   140029d95:	hlt    
   140029d96:	mov    edi,edi
   140029d98:	(bad)  
   140029d99:	repz mov edi,edi
   140029d9c:	(bad)  
   140029d9d:	repz mov bh,bh
   140029da0:	(bad)  
   140029da1:	hlt    
   140029da2:	mov    bh,bh
   140029da4:	(bad)  
   140029da5:	hlt    
   140029da6:	xchg   bh,bh
   140029da8:	(bad)  
   140029da9:	repz xchg bh,bh
   140029dac:	(bad)  
   140029dad:	repnz test bh,bh
   140029db0:	(bad)  
   140029db1:	repz cmp edi,0xfffffffe
   140029db5:	repnz cmp bh,0xfe
   140029db9:	lock jle 0x140029dbb
   140029dbc:	(bad)  
   140029dbd:	out    dx,al
   140029dbe:	jl     0x140029dbf
   140029dc0:	std    
   140029dc1:	in     eax,dx
   140029dc2:	jp     0x140029dc3
   140029dc4:	std    
   140029dc5:	in     eax,dx
   140029dc6:	jbe    0x140029dc7
   140029dc8:	std    
   140029dc9:	(bad)  
   140029dca:	jo     0x140029dcb
   140029dcc:	cld    
   140029dcd:	out    0x6d,al
   140029dcf:	(bad)  
   140029dd0:	cld    
   140029dd1:	in     al,0x68
   140029dd3:	(bad)  
   140029dd4:	cld    
   140029dd5:	loopne 0x140029e3a
   140029dd7:	(bad)  
   140029dd8:	cli    
   140029dd9:	(bad)  [rcx-0x1]
   140029ddc:	not    bh
   140029dde:	pop    rdx
   140029ddf:	push   rsp
   140029de1:	rcl    BYTE PTR [rsi-0x1],1
   140029de4:	repnz int3 
   140029de6:	push   rcx
   140029de7:	push   rax
   140029de9:	(bad)  
   140029dea:	rex.WR (bad) 
   140029dec:	in     al,dx
   140029ded:	mov    edi,0xb9e9ff48
   140029df2:	rex.R jmp rbp
   140029df5:	mov    bl,0x3e
   140029df7:	jmp    rax
   140029df9:	test   eax,0x9dd8ff37
   140029dfe:	cs inc eax
   140029e01:	sbb    DWORD PTR [rcx],0x135a8efb
   140029e07:	fmul   QWORD PTR [rdx+0x451558]
	...
   140029e41:	add    BYTE PTR [rax],al
   140029e43:	add    BYTE PTR [rdi+rdi*8-0x44f302],bh
   140029e4a:	dec    BYTE PTR [rsi]
   140029e4c:	mov    ecx,0xb813feff
   140029e51:	(bad)  
   140029e52:	(bad)  
   140029e53:	(bad)  
   140029e54:	mov    dh,0xff
   140029e56:	(bad)  
   140029e57:	sbb    edx,DWORD PTR [rcx-0x22]
   140029e5a:	inc    bl
   140029e5c:	cmp    eax,0x33e5ffd7
   140029e61:	int    0xff
   140029e63:	in     al,0x29
   140029e65:	mov    edi,0xb322e5ff
   140029e6a:	jmp    rsp
   140029e6c:	and    ch,BYTE PTR [rbp-0x62ca1c01]
   140029e72:	out    dx,eax
   140029e73:	xchg   ecx,eax
   140029e74:	add    al,0x5
   140029e76:	pop    rax
   140029e77:	and    BYTE PTR [rax],al
   140029e79:	add    BYTE PTR [rbp+0x9],dl
	...
   140029e9c:	test   al,0x6e
   140029e9e:	sbb    eax,0x1c6faa29
   140029ea3:	ror    dh,cl
   140029ea5:	xchg   ebp,eax
   140029ea6:	and    bh,ah
   140029ea8:	fldenv [rdi-0x4f2300cf]
   140029eae:	xor    eax,0x38b7e0ff
   140029eb3:	jmp    rsp
   140029eb5:	mov    esp,0xc4e6ff3d
   140029eba:	rex.B (bad) 
   140029ebc:	(bad)  
   140029ebd:	leave  
   140029ebe:	rex.RX (bad) 
   140029ec0:	in     al,dx
   140029ec1:	iret   
   140029ec2:	rex.WB (bad) 
   140029ec4:	out    dx,eax
   140029ec5:	(bad)  
   140029ec6:	rex.WRXB push r10
   140029ec9:	fst    DWORD PTR [rsi-0x1]
   140029ecc:	cmc    
   140029ecd:	fistp  WORD PTR [rcx-0x1]
   140029ed0:	mul    bl
   140029ed2:	pop    rsi
   140029ed3:	(bad)  
   140029ed4:	clc    
   140029ed5:	out    0x65,al
   140029ed7:	(bad)  
   140029ed8:	stc    
   140029ed9:	call   0x12cfd9e48
   140029ede:	ins    DWORD PTR es:[rdi],dx
   140029edf:	(bad)  
   140029ee0:	cld    
   140029ee1:	in     al,dx
   140029ee2:	jno    0x140029ee3
   140029ee4:	cld    
   140029ee5:	out    dx,eax
   140029ee6:	jne    0x140029ee7
   140029ee8:	sti    
   140029ee9:	bnd jp 0x140029eeb
   140029eec:	std    
   140029eed:	bnd jl 0x140029eef
   140029ef0:	std    
   140029ef1:	repz jg 0x140029ef3
   140029ef4:	std    
   140029ef5:	hlt    
   140029ef6:	cmp    edi,0xff84f5fe
   140029efc:	std    
   140029efd:	cmc    
   140029efe:	xchg   edi,edi
   140029f00:	(bad)  
   140029f01:	cmc    
   140029f02:	xchg   edi,edi
   140029f04:	(bad)  
   140029f05:	cmc    
   140029f06:	mov    edi,edi
   140029f08:	(bad)  
   140029f09:	test   BYTE PTR [rbx-0x75090101],0xff
   140029f10:	(bad)  
   140029f11:	cmc    
   140029f12:	mov    edi,?
   140029f14:	(bad)  
   140029f15:	cmc    
   140029f16:	mov    edi,?
   140029f18:	(bad)  
   140029f19:	cmc    
   140029f1a:	(bad)  
   140029f1b:	(bad)  
   140029f1c:	(bad)  
   140029f1d:	cmc    
   140029f1e:	(bad)  
   140029f1f:	(bad)  
   140029f20:	(bad)  
   140029f21:	hlt    
   140029f22:	mov    edi,?
   140029f24:	(bad)  
   140029f25:	hlt    
   140029f26:	mov    edi,?
   140029f28:	(bad)  
   140029f29:	cmc    
   140029f2a:	mov    edi,edi
   140029f2c:	(bad)  
   140029f2d:	hlt    
   140029f2e:	mov    edi,edi
   140029f30:	(bad)  
   140029f31:	repnz mov bh,bh
   140029f34:	(bad)  
   140029f35:	repz test edi,edi
   140029f38:	(bad)  
   140029f39:	repnz test bh,bh
   140029f3c:	(bad)  
   140029f3d:	repnz cmp edi,0xff7deefe
   140029f44:	std    
   140029f45:	out    dx,eax
   140029f46:	jnp    0x140029f47
   140029f48:	std    
   140029f49:	out    dx,al
   140029f4a:	jbe    0x140029f4b
   140029f4c:	std    
   140029f4d:	jmp    0x140029fc2
   140029f4f:	(bad)  
   140029f50:	std    
   140029f51:	out    0x6f,eax
   140029f53:	(bad)  
   140029f54:	cld    
   140029f55:	in     al,0x6a
   140029f57:	(bad)  
   140029f58:	sti    
   140029f59:	loope  0x140029fc0
   140029f5b:	(bad)  
   140029f5c:	cli    
   140029f5d:	(bad)  [rcx-0x1]
   140029f60:	neg    eax
   140029f62:	pop    rbx
   140029f63:	push   rbp
   140029f65:	rcl    DWORD PTR [rbp-0x1],cl
   140029f68:	hlt    
   140029f69:	int    0x52
   140029f6b:	push   rax
   140029f6d:	enter  0xff4c,0xed
   140029f71:	ror    BYTE PTR [rax-0x1],0xe9
   140029f75:	mov    eax,0xb3e6ff42
   140029f7a:	cmp    eax,0x37a8e2ff
   140029f7f:	call   rdi
   140029f81:	pushf  
   140029f82:	cs (bad) 
   140029f84:	mov    esi,0x8dfa1b80
   140029f89:	pop    rcx
   140029f8a:	adc    al,0xd5
   140029f8c:	mov    bl,BYTE PTR [rax+0x15]
   140029f8f:	add    BYTE PTR cs:[rax],al
	...
   140029fc2:	add    BYTE PTR [rax],al
   140029fc4:	mov    ebx,0xb90cfeff
   140029fc9:	(bad)  
   140029fca:	(bad)  
   140029fcb:	adc    DWORD PTR [rax-0x48e90101],edi
   140029fd1:	(bad)  
   140029fd2:	(bad)  
   140029fd3:	sbb    dh,BYTE PTR [rbp+0x5a1efeff]
   140029fd9:	(bad)  
   140029fdb:	scas   eax,DWORD PTR es:[rdi]
   140029fdc:	rex fdivr st,st(7)
   140029fdf:	in     eax,0x34
   140029fe1:	(bad)  
   140029fe2:	jmp    rbp
   140029fe4:	sub    al,0xc0
   140029fe6:	jmp    rsp
   140029fe8:	and    al,0xb5
   140029fea:	jmp    rsp
   140029fec:	and    ebp,DWORD PTR [rdi-0x57cc1d01]
   140029ff2:	div    BYTE PTR [rsp+rax*1+0x255904]
   140029ff9:	add    BYTE PTR [rbp+0xd],dl
   140029ffc:	add    BYTE PTR [rax],al
   140029ffe:	push   rbp
   140029fff:	add    DWORD PTR [rax],eax
	...
   14002a015:	add    BYTE PTR [rax],al
   14002a017:	add    BYTE PTR [rax-0x56f3e292],ch
   14002a01d:	outs   dx,DWORD PTR ds:[rsi]
   14002a01e:	sbb    eax,0x2292ccb7
   14002a023:	clc    
   14002a024:	fisubr DWORD PTR [rcx-0x4d2100d0]
   14002a02a:	xor    eax,0x39b7e0ff
   14002a02f:	jmp    rsp
   14002a031:	mov    ebp,0xc2e6ff3d
   14002a036:	rex.X (bad) 
   14002a038:	(bad)  
   14002a039:	leave  
   14002a03a:	rex.RB (bad) 
   14002a03c:	in     al,dx
   14002a03d:	ror    BYTE PTR [rcx-0x1],1
   14002a040:	out    dx,eax
   14002a041:	xlat   BYTE PTR ds:[rbx]
   14002a042:	rex.WRX push rdx
   14002a045:	fcom   QWORD PTR [rdi+rdi*8-0xb]
   14002a049:	loope  0x14002a0a5
   14002a04b:	push   rdi
   14002a04d:	in     eax,0x5f
   14002a04f:	(bad)  
   14002a050:	clc    
   14002a051:	call   0x12afc9fbb
   14002a056:	imul   edi,edi,0xfffffffa
   14002a059:	in     eax,dx
   14002a05a:	outs   dx,DWORD PTR ds:[rsi]
   14002a05b:	(bad)  
   14002a05c:	cld    
   14002a05d:	lock je 0x14002a05f
   14002a060:	cld    
   14002a061:	repz jbe 0x14002a063
   14002a064:	std    
   14002a065:	repz jnp 0x14002a067
   14002a068:	std    
   14002a069:	hlt    
   14002a06a:	jle    0x14002a06b
   14002a06c:	std    
   14002a06d:	cmc    
   14002a06e:	cmp    bh,0xfd
   14002a071:	test   BYTE PTR [rdx-0x77090101],0xff
   14002a078:	(bad)  
   14002a079:	test   BYTE PTR [rdx-0x740a0101],0xff
   14002a080:	(bad)  
   14002a081:	test   BYTE PTR [rsi-0x70090101],0xff
   14002a088:	(bad)  
   14002a089:	not    BYTE PTR [rax-0x6e090101]
   14002a08f:	(bad)  
   14002a090:	(bad)  
   14002a091:	not    BYTE PTR [rcx-0x6c090101]
   14002a097:	(bad)  
   14002a098:	(bad)  
   14002a099:	not    BYTE PTR [rax-0x6f0a0101]
   14002a09f:	(bad)  
   14002a0a0:	(bad)  
   14002a0a1:	cmc    
   14002a0a2:	(bad)  
   14002a0a3:	(bad)  
   14002a0a4:	(bad)  
   14002a0a5:	cmc    
   14002a0a6:	nop
   14002a0a7:	(bad)  
   14002a0a8:	(bad)  
   14002a0a9:	hlt    
   14002a0aa:	(bad)  
   14002a0ab:	(bad)  
   14002a0ac:	(bad)  
   14002a0ad:	hlt    
   14002a0ae:	mov    edi,?
   14002a0b0:	(bad)  
   14002a0b1:	repz mov edi,?
   14002a0b4:	(bad)  
   14002a0b5:	hlt    
   14002a0b6:	mov    bh,bh
   14002a0b8:	(bad)  
   14002a0b9:	repz mov bh,bh
   14002a0bc:	(bad)  
   14002a0bd:	repz test edi,edi
   14002a0c0:	(bad)  
   14002a0c1:	icebp  
   14002a0c2:	cmp    edi,0xfffffffe
   14002a0c5:	out    dx,eax
   14002a0c6:	cmp    bh,0xfe
   14002a0c9:	out    dx,al
   14002a0ca:	jl     0x14002a0cb
   14002a0cc:	(bad)  
   14002a0cd:	out    dx,al
   14002a0ce:	js     0x14002a0cf
   14002a0d0:	std    
   14002a0d1:	jmp    0x14002a147
   14002a0d3:	(bad)  
   14002a0d4:	std    
   14002a0d5:	jmp    0x12600a049
   14002a0da:	imul   edi,edi,0xff65dffb
   14002a0e0:	cli    
   14002a0e1:	fsub   QWORD PTR [rcx-0x1]
   14002a0e4:	neg    eax
   14002a0e6:	pop    rsp
   14002a0e7:	push   rsi
   14002a0e9:	rcl    DWORD PTR [rsi-0x1],cl
   14002a0ec:	repz retf 
   14002a0ee:	push   rdx
   14002a0ef:	push   rax
   14002a0f1:	(bad)  
   14002a0f2:	rex.WRB (bad) 
   14002a0f4:	in     eax,dx
   14002a0f5:	ror    BYTE PTR [rcx-0x1],0xe9
   14002a0f9:	mov    bh,0x43
   14002a0fb:	jmp    rbp
   14002a0fd:	mov    al,0x3d
   14002a0ff:	(bad)  
   14002a100:	fild   QWORD PTR [rax-0x652a00c7]
   14002a106:	sub    al,0xff
   14002a108:	mov    dh,0x77
   14002a10a:	sbb    esi,esi
   14002a10c:	lea    ebx,[rdx+0x15]
   14002a10f:	retf   0x588a
   14002a112:	adc    eax,0x19
	...
   14002a143:	add    BYTE PTR [rdx-0x47f40101],bh
   14002a149:	(bad)  
   14002a14a:	(bad)  
   14002a14b:	adc    al,0xb7
   14002a14d:	(bad)  
   14002a14e:	(bad)  
   14002a14f:	sbb    BYTE PTR [rbp-0x4be20101],dh
   14002a155:	(bad)  
   14002a156:	(bad)  
   14002a157:	and    ah,BYTE PTR [rcx-0x21]
   14002a15a:	cld    
   14002a15b:	cdq    
   14002a15c:	rex.B (bad) 
   14002a15f:	in     eax,0x37
   14002a161:	iret   
   14002a162:	jmp    rbp
   14002a164:	sub    al,0xc1
   14002a166:	jmp    rsp
   14002a168:	and    al,0xb7
   14002a16a:	jmp    rbp
   14002a16c:	and    esi,DWORD PTR [rax-0x50d01b01]
   14002a172:	cld    
   14002a173:	xlat   BYTE PTR ds:[rbx]
   14002a174:	or     BYTE PTR [rcx],dl
   14002a176:	(bad)  
   14002a177:	sub    al,0x0
   14002a179:	add    BYTE PTR [rbp+0x13],dl
   14002a17c:	add    BYTE PTR [rax],al
   14002a17e:	push   rbp
   14002a17f:	add    eax,DWORD PTR [rax]
	...
   14002a195:	add    BYTE PTR [rax],al
   14002a197:	add    BYTE PTR [rcx-0x3a77e291],ch
   14002a19d:	lea    ebp,[rcx]
   14002a19f:	icebp  
   14002a1a0:	fldenv [rdi-0x502200d1]
   14002a1a6:	ss jmp rax
   14002a1a9:	mov    dh,0x39
   14002a1ab:	jmp    rbx
   14002a1ad:	mov    esp,0xc1e6ff3c
   14002a1b2:	rex.X (bad) 
   14002a1b4:	(bad)  
   14002a1b5:	retf   0xff45
   14002a1b8:	in     eax,dx
   14002a1b9:	ror    BYTE PTR [rdx-0x1],1
   14002a1bc:	out    dx,eax
   14002a1bd:	(bad)  
   14002a1be:	push   rax
   14002a1bf:	push   rcx
   14002a1c1:	fist   DWORD PTR [rdi+rdi*8-0xc]
   14002a1c5:	ficomp WORD PTR [rbx-0x1]
   14002a1c8:	mul    ebp
   14002a1ca:	(bad)  
   14002a1cb:	(bad)  
   14002a1cc:	stc    
   14002a1cd:	call   0x12cfca139
   14002a1d2:	imul   edi,edi,0xfffffffa
   14002a1d5:	out    dx,eax
   14002a1d6:	outs   dx,DWORD PTR ds:[rsi]
   14002a1d7:	(bad)  
   14002a1d8:	cld    
   14002a1d9:	lock ja 0x14002a1db
   14002a1dc:	std    
   14002a1dd:	bnd jp 0x14002a1df
   14002a1e0:	(bad)  
   14002a1e1:	bnd jg 0x14002a1e3
   14002a1e4:	(bad)  
   14002a1e5:	test   BYTE PTR [rcx-0x7a080101],0xff
   14002a1ec:	(bad)  
   14002a1ed:	test   BYTE PTR [rsi-0x75090101],0xff
   14002a1f4:	(bad)  
   14002a1f5:	test   BYTE PTR [rdi+rdi*8-0x710802],0xfe
   14002a1fd:	stc    
   14002a1fe:	(bad)  
   14002a1ff:	(bad)  
   14002a200:	(bad)  
   14002a201:	not    BYTE PTR [rcx-0x6d080101]
   14002a207:	(bad)  
   14002a208:	(bad)  
   14002a209:	not    DWORD PTR [rdi+rdi*8-0x6b0902]
   14002a210:	(bad)  
   14002a211:	not    BYTE PTR [rbp-0x69090101]
   14002a217:	(bad)  
   14002a218:	(bad)  
   14002a219:	not    BYTE PTR [rdi-0x69090101]
   14002a21f:	(bad)  
   14002a220:	(bad)  
   14002a221:	not    BYTE PTR [rsi-0x68090101]
   14002a227:	(bad)  
   14002a228:	(bad)  
   14002a229:	cmc    
   14002a22a:	xchg   esp,eax
   14002a22b:	(bad)  
   14002a22c:	(bad)  
   14002a22d:	hlt    
   14002a22e:	xchg   ebx,eax
   14002a22f:	(bad)  
   14002a230:	(bad)  
   14002a231:	hlt    
   14002a232:	nop
   14002a233:	(bad)  
   14002a234:	(bad)  
   14002a235:	hlt    
   14002a236:	(bad)  
   14002a237:	(bad)  
   14002a238:	(bad)  
   14002a239:	hlt    
   14002a23a:	mov    edi,?
   14002a23c:	(bad)  
   14002a23d:	repz mov bh,bh
   14002a240:	std    
   14002a241:	hlt    
   14002a242:	mov    bh,bh
   14002a244:	(bad)  
   14002a245:	icebp  
   14002a246:	test   edi,edi
   14002a248:	std    
   14002a249:	lock (bad) 
   14002a24b:	(bad)  
   14002a24c:	std    
   14002a24d:	lock jle 0x14002a24f
   14002a250:	std    
   14002a251:	out    dx,al
   14002a252:	jnp    0x14002a253
   14002a254:	std    
   14002a255:	jmp    0x14002a2cc
   14002a257:	(bad)  
   14002a258:	std    
   14002a259:	out    0x71,eax
   14002a25b:	(bad)  
   14002a25c:	std    
   14002a25d:	in     eax,0x6b
   14002a25f:	(bad)  
   14002a260:	sti    
   14002a261:	loope  0x14002a2c8
   14002a263:	(bad)  
   14002a264:	cli    
   14002a265:	(bad)  [rdx-0x1]
   14002a268:	clc    
   14002a269:	xlat   BYTE PTR ds:[rbx]
   14002a26a:	pop    rbx
   14002a26b:	push   rbp
   14002a26d:	rcl    DWORD PTR [rsi-0x1],1
   14002a270:	repz retf 0xff51
   14002a274:	icebp  
   14002a275:	(bad)
   14002a278:	in     eax,dx
   14002a279:	mov    ebp,0xb7e9ff46
   14002a27e:	rex.X jmp rbp
   14002a281:	scas   eax,DWORD PTR es:[rdi]
   14002a282:	notrack jmp rax
   14002a285:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002a286:	ss call rbx
   14002a289:	xchg   esi,eax
   14002a28a:	sub    al,0xff
   14002a28c:	scas   al,BYTE PTR es:[rdi]
   14002a28d:	jae    0x14002a2ad
   14002a28f:	repz mov ebx,DWORD PTR [rcx+0x16]
   14002a293:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002a294:	mov    bl,BYTE PTR [rax+0x15]
   14002a297:	add    eax,DWORD PTR [rax]
	...
   14002a2c1:	add    BYTE PTR [rax],al
   14002a2c3:	add    BYTE PTR [rax-0x48f70101],bh
   14002a2c9:	(bad)  
   14002a2ca:	(bad)  
   14002a2cb:	(bad)  
   14002a2cc:	mov    ch,0xff
   14002a2ce:	(bad)  
   14002a2cf:	sbb    esi,DWORD PTR [rdi+rdi*8-0x4de002]
   14002a2d6:	(bad)  
   14002a2d7:	and    eax,0x77fce470
   14002a2dc:	rex.RX fdivp st(7),st
   14002a2df:	in     eax,0x3a
   14002a2e1:	sar    bh,cl
   14002a2e3:	in     eax,0x30
   14002a2e5:	(bad)  
   14002a2e6:	jmp    rsp
   14002a2e8:	(bad)  
   14002a2e9:	mov    ecx,0xb224e5ff
   14002a2ee:	jmp    rsp
   14002a2f0:	sub    dh,BYTE PTR [rdx+0x752ee2fe]
   14002a2f6:	ret    
   14002a2f7:	push   rdi
   14002a2f8:	add    BYTE PTR [rax],al
   14002a2fa:	push   rbp
   14002a2fb:	sbb    al,BYTE PTR [rax]
   14002a2fd:	add    BYTE PTR [rbp+0x7],dl
	...
   14002a314:	test   eax,0xbd3d1d6f
   14002a319:	xchg   DWORD PTR [rax],esi
   14002a31b:	jrcxz  0x14002a2f4
   14002a31d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002a31e:	cs (bad) 
   14002a320:	fld    TBYTE PTR [rdi-0x4a2000ca]
   14002a326:	cmp    bh,bh
   14002a328:	loop   0x14002a2e5
   14002a32a:	cmp    al,0xff
   14002a32c:	out    0xc0,al
   14002a32e:	rex.X (bad) 
   14002a330:	jmp    0x12d01e8fe
   14002a335:	iret   
   14002a336:	rex.WB (bad) 
   14002a338:	out    dx,eax
   14002a339:	xlat   BYTE PTR ds:[rbx]
   14002a33a:	push   rax
   14002a33b:	push   rcx
   14002a33d:	fst    QWORD PTR [rdi+rdi*8-0xc]
   14002a341:	loope  0x14002a39d
   14002a343:	push   rsi
   14002a345:	in     eax,0x5f
   14002a347:	(bad)  
   14002a348:	clc    
   14002a349:	(bad)  
   14002a34a:	data16 (bad) 
   14002a34c:	cli    
   14002a34d:	in     al,dx
   14002a34e:	ins    DWORD PTR es:[rdi],dx
   14002a34f:	(bad)  
   14002a350:	cli    
   14002a351:	lock jno 0x14002a353
   14002a354:	cld    
   14002a355:	bnd ja 0x14002a357
   14002a358:	std    
   14002a359:	repz jp 0x14002a35b
   14002a35c:	(bad)  
   14002a35d:	hlt    
   14002a35e:	jle    0x14002a35f
   14002a360:	(bad)  
   14002a361:	test   BYTE PTR [rcx-0x7a080101],0xff
   14002a368:	(bad)  
   14002a369:	test   BYTE PTR [rcx-0x73090001],0xff
   14002a370:	(bad)  
   14002a371:	clc    
   14002a372:	mov    ?,edi
   14002a374:	(bad)  
   14002a375:	test   DWORD PTR [rdi-0x6f060101],0x92f7feff
   14002a37f:	push   rsi
   14002a381:	jmp    0x10ce79e0d
   14002a386:	outs   dx,DWORD PTR ds:[rsi]
   14002a387:	icebp  
   14002a388:	(bad)  
   14002a389:	sahf   
   14002a38a:	rex.WB loop 0x14002a351
   14002a38d:	fwait
   14002a38e:	rex.RXB loop 0x14002a330
   14002a391:	push   0x689fd31b
   14002a396:	sbb    edx,ebx
   14002a398:	mov    ch,0x87
   14002a39a:	(bad)  
   14002a39b:	fadd   st(4),st
   14002a39d:	pushf  
   14002a39e:	rex.WX jrcxz 0x14002a381
   14002a3a1:	(bad)
   14002a3a4:	repnz loope 0x14002a32f
   14002a3a7:	stc    
   14002a3a8:	std    
   14002a3a9:	hlt    
   14002a3aa:	xchg   edi,eax
   14002a3ab:	(bad)  
   14002a3ac:	(bad)  
   14002a3ad:	cmc    
   14002a3ae:	xchg   edi,eax
   14002a3af:	(bad)  
   14002a3b0:	(bad)  
   14002a3b1:	not    BYTE PTR [rdi-0x6c0a0101]
   14002a3b7:	(bad)  
   14002a3b8:	(bad)  
   14002a3b9:	cmc    
   14002a3ba:	nop
   14002a3bb:	(bad)  
   14002a3bc:	(bad)  
   14002a3bd:	repnz mov ?,edi
   14002a3c0:	(bad)  
   14002a3c1:	repnz mov edi,?
   14002a3c4:	std    
   14002a3c5:	icebp  
   14002a3c6:	mov    edi,edi
   14002a3c8:	std    
   14002a3c9:	repnz xchg bh,bh
   14002a3cc:	std    
   14002a3cd:	lock (bad) 
   14002a3cf:	(bad)  
   14002a3d0:	std    
   14002a3d1:	out    dx,eax
   14002a3d2:	jg     0x14002a3d3
   14002a3d4:	(bad)  
   14002a3d5:	in     al,dx
   14002a3d6:	jp     0x14002a3d7
   14002a3d8:	std    
   14002a3d9:	jmp    0x14002a451
   14002a3db:	(bad)  
   14002a3dc:	std    
   14002a3dd:	call   0x12500a353
   14002a3e2:	imul   edi,edi,0xfffffffb
   14002a3e5:	fbld   TBYTE PTR [rdi-0x1]
   14002a3e8:	cli    
   14002a3e9:	(bad)  [rdx-0x1]
   14002a3ec:	not    edi
   14002a3ee:	pop    rbx
   14002a3ef:	push   rbp
   14002a3f1:	rcl    BYTE PTR [rdi-0x1],1
   14002a3f4:	hlt    
   14002a3f5:	leave  
   14002a3f6:	push   rcx
   14002a3f7:	(bad)  
   14002a3f8:	out    dx,eax
   14002a3f9:	ret    
   14002a3fa:	rex.WRB (bad) 
   14002a3fc:	in     eax,dx
   14002a3fd:	mov    esp,0xb5e8ff47
   14002a402:	rex.R jmp rbx
   14002a405:	lods   al,BYTE PTR ds:[rsi]
   14002a406:	cmp    eax,0x34a3ddff
   14002a40b:	dec    esi
   14002a40d:	xchg   ecx,eax
   14002a40e:	sub    edi,edi
   14002a410:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002a411:	outs   dx,BYTE PTR ds:[rsi]
   14002a412:	and    ebp,ebp
   14002a414:	mov    ebx,DWORD PTR [rcx+0x16]
   14002a417:	push   0x0
	...
   14002a444:	mov    bh,0xff
   14002a446:	inc    BYTE PTR [rsi+rsi*4]
   14002a449:	(bad)  
   14002a44a:	(bad)  
   14002a44b:	sbb    BYTE PTR [rdi+rdi*8-0x4ce102],dh
   14002a452:	(bad)  
   14002a453:	and    esi,DWORD PTR [rcx-0x79d70101]
   14002a459:	in     eax,dx
   14002a45a:	std    
   14002a45b:	push   rcx
   14002a45c:	rex.WR loope 0x14002a45e
   14002a45f:	in     eax,0x3d
   14002a461:	fdivr  st,st(7)
   14002a463:	in     al,0x31
   14002a465:	retf   
   14002a466:	jmp    rbp
   14002a468:	sub    DWORD PTR [rbp-0x4cd91a01],edi
   14002a46e:	jmp    rsp
   14002a470:	sub    DWORD PTR [rbx-0x5ac31b01],esi
   14002a476:	lock xchg ebx,eax
   14002a478:	add    al,0x4
   14002a47a:	pop    rcx
   14002a47b:	and    eax,DWORD PTR [rax]
   14002a47d:	add    BYTE PTR [rbp+0xc],dl
   14002a480:	add    BYTE PTR [rax],al
   14002a482:	push   rbp
   14002a483:	add    DWORD PTR [rax],eax
	...
   14002a48d:	add    BYTE PTR [rax],al
   14002a48f:	add    BYTE PTR [rdx-0x54f5e290],ch
   14002a495:	outs   dx,DWORD PTR ds:[rsi]
   14002a496:	sbb    eax,0x289ad1ba
   14002a49b:	cli    
   14002a49c:	fld    TBYTE PTR [rbp-0x4c2000cc]
   14002a4a2:	cmp    bh,bh
   14002a4a4:	loop   0x14002a460
   14002a4a6:	cmp    eax,0x40c0e5ff
   14002a4ab:	(bad)  
   14002a4ac:	call   0x12c01ea79
   14002a4b1:	iret   
   14002a4b2:	rex.WR (bad) 
   14002a4b4:	out    dx,al
   14002a4b5:	(bad)  
   14002a4b6:	push   rax
   14002a4b7:	push   rdx
   14002a4b9:	fist   DWORD PTR [rsi-0x1]
   14002a4bc:	hlt    
   14002a4bd:	loope  0x14002a519
   14002a4bf:	push   rsi
   14002a4c1:	out    0x62,eax
   14002a4c3:	(bad)  
   14002a4c4:	clc    
   14002a4c5:	jmp    0x14002a52e
   14002a4c7:	(bad)  
   14002a4c8:	stc    
   14002a4c9:	out    dx,al
   14002a4ca:	outs   dx,BYTE PTR ds:[rsi]
   14002a4cb:	(bad)  
   14002a4cc:	sti    
   14002a4cd:	lock jno 0x14002a4cf
   14002a4d0:	std    
   14002a4d1:	bnd je 0x14002a4d3
   14002a4d4:	std    
   14002a4d5:	cmc    
   14002a4d6:	jp     0x14002a4d7
   14002a4d8:	(bad)  
   14002a4d9:	cmc    
   14002a4da:	jle    0x14002a4db
   14002a4dc:	(bad)  
   14002a4dd:	test   DWORD PTR [rcx-0x7a070101],0x89f6feff
   14002a4e7:	(bad)  
   14002a4e8:	push   rsi
   14002a4ea:	mov    edi,?
   14002a4ec:	(bad)  
   14002a4ed:	clc    
   14002a4ee:	(bad)  
   14002a4ef:	(bad)  
   14002a4f0:	push   rsi
   14002a4f2:	nop
   14002a4f3:	(bad)  
   14002a4f4:	std    
   14002a4f5:	cmc    
   14002a4f6:	(bad)  
   14002a4f7:	(bad)  
   14002a4f8:	in     al,0xcc
   14002a4fa:	ins    BYTE PTR es:[rdi],dx
   14002a4fb:	lock scas eax,DWORD PTR es:[rdi]
   14002a4fd:	jl     0x14002a52a
   14002a4ff:	xlat   BYTE PTR ds:[rbx]
   14002a500:	movabs eax,ds:0xa1601b69a1991b69
   14002a509:	imul   ebx,DWORD PTR [rbx],0x1b68a02c
   14002a50f:	sub    al,BYTE PTR [rax]
   14002a511:	add    BYTE PTR [rax],al
   14002a513:	add    BYTE PTR [rax],al
   14002a515:	add    BYTE PTR [rax],al
   14002a517:	add    BYTE PTR [rdi-0x60e6e498],bl
   14002a51d:	sbb    ebp,DWORD PTR [eip+0x5a1b679f]        # 0x19a1e0cc3
   14002a524:	sahf   
   14002a525:	sbb    cl,BYTE PTR [ecx-0x39e49661]
   14002a52c:	shr    BYTE PTR [rcx+rbx*2-0x71190a17],1
   14002a533:	cli    
   14002a534:	(bad)  
   14002a535:	neg    BYTE PTR [rbx-0x68090101]
   14002a53b:	(bad)  
   14002a53c:	(bad)  
   14002a53d:	not    BYTE PTR [rbx-0x700d0101]
   14002a543:	(bad)  
   14002a544:	(bad)  
   14002a545:	repnz (bad) 
   14002a547:	(bad)  
   14002a548:	(bad)  
   14002a549:	repnz mov bh,bh
   14002a54c:	std    
   14002a54d:	repnz test edi,edi
   14002a550:	std    
   14002a551:	icebp  
   14002a552:	cmp    edi,0xfffffffd
   14002a555:	out    dx,eax
   14002a556:	jg     0x14002a557
   14002a558:	(bad)  
   14002a559:	in     eax,dx
   14002a55a:	jl     0x14002a55b
   14002a55c:	std    
   14002a55d:	(bad)  
   14002a55e:	ja     0x14002a55f
   14002a560:	cld    
   14002a561:	out    0x71,al
   14002a563:	(bad)  
   14002a564:	std    
   14002a565:	in     eax,0x6b
   14002a567:	(bad)  
   14002a568:	sti    
   14002a569:	fbld   TBYTE PTR [rsi-0x1]
   14002a56c:	stc    
   14002a56d:	fldenv [rax-0x1]
   14002a570:	not    esi
   14002a572:	pop    rsp
   14002a573:	push   rbp
   14002a575:	(bad)  
   14002a576:	push   rsi
   14002a577:	push   rdx
   14002a579:	enter  0xff52,0xef
   14002a57d:	ret    0xff4c
   14002a580:	in     al,dx
   14002a581:	mov    edx,0xb3e7ff47
   14002a586:	rex.X jmp rcx
   14002a589:	lods   al,BYTE PTR ds:[rsi]
   14002a58a:	cmp    al,0xff
   14002a58c:	fcomp  DWORD PTR [rsi-0x793b00cc]
   14002a592:	and    bh,ah
   14002a594:	mov    WORD PTR [rax+0x15],ds
   14002a597:	(bad)  [rbx+0x291659]
	...
   14002a5c5:	add    BYTE PTR [rax],al
   14002a5c7:	add    BYTE PTR [rdi+rdi*8-0x4ce502],dh
   14002a5ce:	(bad)  
   14002a5cf:	and    BYTE PTR [rcx-0x4fd90101],dh
   14002a5d5:	(bad)  
   14002a5d6:	(bad)  
   14002a5d7:	sub    al,0xad
   14002a5d9:	(bad)  
   14002a5da:	(bad)  
   14002a5db:	xor    DWORD PTR [rbp-0x1c],edx
   14002a5de:	(bad)  
   14002a5df:	fild   DWORD PTR [rcx-0x25]
   14002a5e2:	jmp    rbp
   14002a5e4:	xor    al,0xce
   14002a5e6:	jmp    rbp
   14002a5e8:	sub    al,0xc1
   14002a5ea:	jmp    rsp
   14002a5ec:	es mov bh,0xff
   14002a5ef:	in     al,0x27
   14002a5f1:	mov    bl,0xff
   14002a5f3:	in     al,0x38
   14002a5f5:	mov    bl,0xfa
   14002a5f7:	iret   
   14002a5f8:	add    al,0x8
   14002a5fa:	pop    rdx
   14002a5fb:	sub    DWORD PTR [rax],eax
   14002a5fd:	add    BYTE PTR [rbp+0x13],dl
   14002a600:	add    BYTE PTR [rax],al
   14002a602:	push   rbp
   14002a603:	add    al,0x0
	...
   14002a60d:	add    BYTE PTR [rax],al
   14002a60f:	add    BYTE PTR [rdx-0x3692e190],ch
   14002a615:	xchg   ebx,eax
   14002a616:	xor    esi,ebp
   14002a618:	fld    TBYTE PTR [rbx-0x4c2100ce]
   14002a61e:	cmp    edi,edi
   14002a620:	loope  0x14002a5dc
   14002a622:	notrack jmp rsp
   14002a625:	mov    edi,0xc7e7ff41
   14002a62a:	rex.RB (bad) 
   14002a62c:	(bad)  
   14002a62d:	int    0x4a
   14002a62f:	(bad)  
   14002a630:	out    dx,al
   14002a631:	(bad)  
   14002a632:	push   rax
   14002a633:	push   rcx
   14002a635:	fcom   QWORD PTR [rdi+rdi*8-0xc]
   14002a639:	loope  0x14002a697
   14002a63b:	push   rsi
   14002a63d:	out    0x61,eax
   14002a63f:	(bad)  
   14002a640:	clc    
   14002a641:	jmp    0x12efca5ae
   14002a646:	outs   dx,BYTE PTR ds:[rsi]
   14002a647:	(bad)  
   14002a648:	sti    
   14002a649:	lock jo 0x14002a64b
   14002a64c:	std    
   14002a64d:	bnd jne 0x14002a64f
   14002a650:	std    
   14002a651:	cmc    
   14002a652:	jp     0x14002a653
   14002a654:	(bad)  
   14002a655:	cmc    
   14002a656:	jg     0x14002a657
   14002a658:	(bad)  
   14002a659:	test   BYTE PTR [rdx-0x78070101],0xff
   14002a660:	(bad)  
   14002a661:	test   DWORD PTR [rdx-0x72080001],0x8ef9feff
   14002a66b:	(bad)  
   14002a66c:	(bad)  
   14002a66d:	clc    
   14002a66e:	(bad)  
   14002a66f:	(bad)  
   14002a670:	(bad)  
   14002a671:	shr    DWORD PTR [rdi-0xd],cl
   14002a674:	stos   DWORD PTR es:[rdi],eax
   14002a675:	jne    0x14002a69b
   14002a677:	leave  
   14002a678:	movabs ds:0xf1b6aa2621b6a,al
	...
   14002a6a5:	add    BYTE PTR [rax],al
   14002a6a7:	add    BYTE PTR [rsi-0x61fde599],bl
   14002a6ad:	sbb    bh,BYTE PTR [esi]
   14002a6b0:	sahf   
   14002a6b1:	data16 sbb bl,BYTE PTR [rax-0x1cb9683f]
   14002a6b8:	hlt    
   14002a6b9:	in     al,0x8d
   14002a6bb:	stc    
   14002a6bc:	(bad)  
   14002a6bd:	neg    BYTE PTR [rdi+rdi*8-0x690902]
   14002a6c4:	(bad)  
   14002a6c5:	hlt    
   14002a6c6:	xchg   edx,eax
   14002a6c7:	(bad)  
   14002a6c8:	std    
   14002a6c9:	repz mov ?,edi
   14002a6cc:	(bad)  
   14002a6cd:	repz mov bh,bh
   14002a6d0:	std    
   14002a6d1:	repnz test edi,edi
   14002a6d4:	std    
   14002a6d5:	repnz cmp edi,0xfffffffd
   14002a6d9:	out    dx,eax
   14002a6da:	cmp    bh,0xfe
   14002a6dd:	in     eax,dx
   14002a6de:	jnp    0x14002a6df
   14002a6e0:	std    
   14002a6e1:	(bad)  
   14002a6e2:	ja     0x14002a6e3
   14002a6e4:	cld    
   14002a6e5:	in     eax,0x71
   14002a6e7:	(bad)  
   14002a6e8:	cld    
   14002a6e9:	loope  0x14002a756
   14002a6eb:	(bad)  
   14002a6ec:	stc    
   14002a6ed:	frstor [rdi-0x1]
   14002a6f0:	stc    
   14002a6f1:	xlat   BYTE PTR ds:[rbx]
   14002a6f2:	pop    rdi
   14002a6f3:	push   rbp
   14002a6f5:	rcr    BYTE PTR [rbp-0x1],cl
   14002a6f8:	hlt    
   14002a6f9:	retf   0xff54
   14002a6fc:	out    dx,eax
   14002a6fd:	(bad)
   14002a700:	out    dx,eax
   14002a701:	mov    ebp,0xb8e9ff4b
   14002a706:	rex.RX jmp rsi
   14002a709:	mov    al,0x41
   14002a70b:	(bad)  
   14002a70c:	fild   QWORD PTR [rax-0x662b00c5]
   14002a712:	xor    edi,edi
   14002a714:	mov    cl,0x76
   14002a716:	and    esp,esi
   14002a718:	mov    WORD PTR [rcx+0x16],ds
   14002a71b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
	...
   14002a748:	mov    bl,0xff
   14002a74a:	(bad)  
   14002a74b:	adc    eax,0x24feffb1
   14002a750:	mov    al,0xff
   14002a752:	(bad)  
   14002a753:	sub    DWORD PTR [rsi-0x52cf0101],ebp
   14002a759:	(bad)  
   14002a75a:	(bad)  
   14002a75b:	xor    eax,0xb8fde662
   14002a760:	rex.RX (bad) 
   14002a763:	in     eax,0x39
   14002a765:	sar    bh,cl
   14002a767:	in     eax,0x2f
   14002a769:	(bad)  
   14002a76a:	jmp    rsp
   14002a76c:	sub    DWORD PTR [rdx-0x4ad61b01],edi
   14002a772:	jmp    rsp
   14002a774:	xor    DWORD PTR [rcx+0x7c32e2fe],edi
   14002a77a:	leave  
   14002a77b:	pop    rsi
   14002a77c:	add    al,0x6
   14002a77e:	pop    rcx
   14002a77f:	sbb    al,0x0
   14002a781:	add    BYTE PTR [rbp+0x8],dl
	...
   14002a78c:	lods   al,BYTE PTR ds:[rsi]
   14002a78d:	jb     0x14002a7b0
   14002a78f:	(bad)  
   14002a790:	lods   eax,DWORD PTR ds:[rsi]
   14002a791:	jno    0x14002a7b0
   14002a793:	(bad)  
   14002a794:	fisub  DWORD PTR [rsi-0x4d2101cd]
   14002a79a:	cmp    bh,bh
   14002a79c:	loopne 0x14002a757
   14002a79e:	cmp    eax,0x40bfe3ff
   14002a7a3:	jmp    rdi
   14002a7a5:	(bad)
   14002a7a8:	jmp    0x12e01f178
   14002a7ad:	(bad)  
   14002a7ae:	rex.WRXB push r8
   14002a7b1:	ficom  DWORD PTR [rsi-0x1]
   14002a7b4:	repz loopne 0x14002a811
   14002a7b7:	push   rbp
   14002a7b9:	out    0x61,al
   14002a7bb:	(bad)  
   14002a7bc:	clc    
   14002a7bd:	(bad)  
   14002a7be:	push   0x6cedf9ff
   14002a7c3:	(bad)  
   14002a7c4:	sti    
   14002a7c5:	lock jo 0x14002a7c7
   14002a7c8:	std    
   14002a7c9:	hlt    
   14002a7ca:	jae    0x14002a7cb
   14002a7cc:	std    
   14002a7cd:	cmc    
   14002a7ce:	jp     0x14002a7cf
   14002a7d0:	std    
   14002a7d1:	idiv   BYTE PTR [rsi-0x1]
   14002a7d4:	(bad)  
   14002a7d5:	clc    
   14002a7d6:	(bad)  
   14002a7d7:	(bad)  
   14002a7d8:	(bad)  
   14002a7d9:	stc    
   14002a7da:	test   edi,edi
   14002a7dc:	(bad)  
   14002a7dd:	clc    
   14002a7de:	mov    edi,edi
   14002a7e0:	push   rdi
   14002a7e2:	mov    edi,?
   14002a7e4:	(bad)  
   14002a7e5:	cli    
   14002a7e6:	(bad)  
   14002a7e7:	(bad)  
   14002a7e8:	cld    
   14002a7e9:	hlt    
   14002a7ea:	cmp    cl,0xd3
   14002a7ed:	lods   al,BYTE PTR ds:[rsi]
   14002a7ee:	rex.WRXB out 0xa3,al
   14002a7f1:	imul   ebx,DWORD PTR [rax+rdi*2],0xffffffa3
   14002a7f5:	push   0x1c
   14002a7f7:	sldt   WORD PTR [rax]
	...
   14002a832:	add    BYTE PTR [rax],al
   14002a834:	sahf   
   14002a835:	data16 sbb ch,BYTE PTR [rdx]
   14002a838:	popf   
   14002a839:	data16 sbb bl,BYTE PTR [rbp-0x12994727]
   14002a840:	cld    
   14002a841:	lock xchg edi,eax
   14002a843:	std    
   14002a844:	std    
   14002a845:	neg    BYTE PTR [rax-0x6c0b0201]
   14002a84b:	(bad)  
   14002a84c:	std    
   14002a84d:	hlt    
   14002a84e:	mov    ?,edi
   14002a850:	(bad)  
   14002a851:	repz mov bh,bh
   14002a854:	std    
   14002a855:	repnz xchg edi,edi
   14002a858:	std    
   14002a859:	repnz (bad) 
   14002a85b:	(bad)  
   14002a85c:	std    
   14002a85d:	lock cmp bh,0xfd
   14002a861:	in     eax,dx
   14002a862:	jnp    0x14002a863
   14002a864:	std    
   14002a865:	(bad)  
   14002a866:	jne    0x14002a867
   14002a868:	cld    
   14002a869:	out    0x70,eax
   14002a86b:	(bad)  
   14002a86c:	sti    
   14002a86d:	loope  0x14002a8d9
   14002a86f:	(bad)  
   14002a870:	cli    
   14002a871:	(bad)  [rdi+rdi*8-0x8]
   14002a875:	(bad)  
   14002a876:	(bad)  
   14002a877:	push   rbp
   14002a879:	rcr    BYTE PTR [rcx-0x1],1
   14002a87c:	repnz leave 
   14002a87e:	push   rbp
   14002a87f:	(bad)  
   14002a880:	out    dx,eax
   14002a881:	ret    0xff50
   14002a884:	in     eax,dx
   14002a885:	mov    esp,0xb5e7ff4b
   14002a88a:	rex.RX jmp rsp
   14002a88d:	scas   al,BYTE PTR es:[rdi]
   14002a88e:	rex.B (bad) 
   14002a890:	(bad)  [rcx+rdi*1+0x2b90ccff]
   14002a897:	jmp    QWORD PTR [rdx-0x7316de95]
   14002a89d:	pop    rcx
   14002a89e:	(bad)  
   14002a89f:	rex.WR add BYTE PTR [rax],r8b
	...
   14002a8c6:	add    BYTE PTR [rax],al
   14002a8c8:	mov    dl,0xff
   14002a8ca:	dec    BYTE PTR [rbx]
   14002a8cc:	mov    al,0xff
   14002a8ce:	(bad)  
   14002a8cf:	(bad)  
   14002a8d0:	scas   al,BYTE PTR es:[rdi]
   14002a8d1:	(bad)  
   14002a8d2:	(bad)  
   14002a8d3:	lods   eax,DWORD PTR cs:[rsi]
   14002a8d5:	(bad)  
   14002a8d6:	(bad)  
   14002a8d7:	xor    ebp,DWORD PTR [rbx+0x7139feff]
   14002a8dd:	call   0x1244e3adf
   14002a8e2:	jmp    rbp
   14002a8e4:	cmp    eax,0x33e5ffd8
   14002a8e9:	retf   
   14002a8ea:	jmp    rbp
   14002a8ec:	sub    bh,BYTE PTR [rdi-0x49d61a01]
   14002a8f2:	jmp    rbx
   14002a8f4:	(bad)  
   14002a8f5:	mov    ecx,0xae3ee3ff
   14002a8fa:	cmc    
   14002a8fb:	test   eax,0x25590404
   14002a900:	add    BYTE PTR [rax],al
   14002a902:	push   rbp
   14002a903:	(bad)  
   14002a904:	add    BYTE PTR [rax],al
   14002a906:	push   rbp
   14002a907:	add    bh,bh
   14002a909:	cld    
   14002a90a:	mov    cl,0x1
   14002a90c:	stos   DWORD PTR es:[rdi],eax
   14002a90d:	jno    0x14002a92d
   14002a90f:	jbe    0x14002a8df
   14002a911:	cwde   
   14002a912:	xor    esi,ecx
   14002a914:	fidiv  WORD PTR [rcx-0x461f00c9]
   14002a91a:	notrack jmp rbx
   14002a91d:	mov    esp,0xc3e5ff41
   14002a922:	rex.RB (bad) 
   14002a924:	call   0x12d01f1f4
   14002a929:	ror    DWORD PTR [rdi-0x1],cl
   14002a92c:	out    dx,eax
   14002a92d:	fst    DWORD PTR [rdi+rdi*8-0xe]
   14002a931:	ficomp WORD PTR [rax-0x1]
   14002a934:	cmc    
   14002a935:	in     eax,0x5f
   14002a937:	push   rsi
   14002a939:	jmp    0x14002a9a0
   14002a93b:	(bad)  
   14002a93c:	stc    
   14002a93d:	out    dx,al
   14002a93e:	ins    BYTE PTR es:[rdi],dx
   14002a93f:	(bad)  
   14002a940:	cli    
   14002a941:	lock jno 0x14002a943
   14002a944:	sti    
   14002a945:	hlt    
   14002a946:	jae    0x14002a947
   14002a948:	std    
   14002a949:	cmc    
   14002a94a:	jnp    0x14002a94b
   14002a94c:	std    
   14002a94d:	idiv   DWORD PTR [rbp-0x1]
   14002a950:	(bad)  
   14002a951:	clc    
   14002a952:	cmp    edi,0xff86f9fe
   14002a958:	(bad)  
   14002a959:	stc    
   14002a95a:	mov    bh,bh
   14002a95c:	(bad)  
   14002a95d:	cli    
   14002a95e:	mov    edi,?
   14002a960:	(bad)  
   14002a961:	stc    
   14002a962:	(bad)  
   14002a963:	(bad)  
   14002a964:	stc    
   14002a965:	jmp    0x14002a9dc
   14002a967:	div    DWORD PTR [rsi-0x5b32d57e]
   14002a96d:	imul   ebx,DWORD PTR [rdi*1+0x0],0x0
	...
   14002a9b9:	add    BYTE PTR [rax],al
   14002a9bb:	add    BYTE PTR [rbp-0x53afe59a],bl
   14002a9c1:	jnp    0x14002a9ef
   14002a9c3:	(bad)  
   14002a9c4:	imul   eax
   14002a9c6:	(bad)  
   14002a9c7:	stc    
   14002a9c8:	std    
   14002a9c9:	neg    BYTE PTR [rdx-0x6a0b0201]
   14002a9cf:	(bad)  
   14002a9d0:	std    
   14002a9d1:	repz xchg ecx,eax
   14002a9d3:	(bad)  
   14002a9d4:	std    
   14002a9d5:	repz mov edi,edi
   14002a9d8:	std    
   14002a9d9:	icebp  
   14002a9da:	xchg   bh,bh
   14002a9dc:	std    
   14002a9dd:	icebp  
   14002a9de:	(bad)  
   14002a9df:	(bad)  
   14002a9e0:	std    
   14002a9e1:	out    dx,eax
   14002a9e2:	cmp    bh,0xfd
   14002a9e5:	in     al,dx
   14002a9e6:	jnp    0x14002a9e7
   14002a9e8:	std    
   14002a9e9:	call   0x12600a961
   14002a9ee:	outs   dx,DWORD PTR ds:[rsi]
   14002a9ef:	(bad)  
   14002a9f0:	sti    
   14002a9f1:	loope  0x14002aa5d
   14002a9f3:	(bad)  
   14002a9f4:	clc    
   14002a9f5:	fldenv [rdi+rdi*8-0xb]
   14002a9f9:	rcr    DWORD PTR [rdi-0x1],cl
   14002a9fc:	repnz int 0x5b
   14002a9ff:	push   rcx
   14002aa01:	(bad)  
   14002aa02:	push   rbp
   14002aa03:	(bad)  
   14002aa04:	out    dx,al
   14002aa05:	ror    BYTE PTR [rdi-0x1],0xe9
   14002aa09:	mov    eax,0xb1e5ff4a
   14002aa0e:	rex.RX jmp rax
   14002aa11:	test   eax,0x9cd3ff41
   14002aa16:	ss (bad) 
   14002aa18:	mov    ecx,0x8cf9247e
   14002aa1d:	pop    rdx
   14002aa1e:	(bad)  
   14002aa1f:	ror    DWORD PTR [rcx+rbx*2+0x516],0x0
	...
   14002aa47:	add    BYTE PTR [rax-0x50fe0101],dh
   14002aa4d:	(bad)  
   14002aa4e:	(bad)  
   14002aa4f:	sub    BYTE PTR [rbp-0x54cf0101],ch
   14002aa55:	(bad)  
   14002aa56:	(bad)  
   14002aa57:	ss stos BYTE PTR es:[rdi],al
   14002aa59:	(bad)  
   14002aa5a:	(bad)  
   14002aa5b:	cmp    al,0x8f
   14002aa5d:	repnz std 
   14002aa5f:	pop    rsi
   14002aa60:	push   rdx
   14002aa61:	call   0x11c478f65
   14002aa66:	jmp    rbp
   14002aa68:	(bad)  
   14002aa69:	sar    edi,1
   14002aa6b:	in     eax,0x2d
   14002aa6d:	sar    edi,0xe4
   14002aa70:	sub    DWORD PTR [rcx-0x46d21b01],edi
   14002aa76:	jmp    rsp
   14002aa78:	cmp    al,0xbc
   14002aa7a:	std    
   14002aa7b:	ficomp WORD PTR [rcx+rax*2]
   14002aa7e:	xchg   ebx,eax
   14002aa7f:	cmp    al,BYTE PTR [rax]
   14002aa81:	add    BYTE PTR [rbp+0x16],dl
   14002aa84:	es movsxd eax,DWORD PTR es:[rsi]
   14002aa88:	mov    cl,0x78
   14002aa8a:	es adc al,0xad
   14002aa8d:	jae    0x14002aaad
   14002aa8f:	retf   0xacde
   14002aa92:	(bad)  
   14002aa93:	(bad)  
   14002aa94:	loope  0x14002aa4b
   14002aa96:	notrack jmp rdx
   14002aa99:	mov    ebx,0xc2e6ff40
   14002aa9e:	rex.RB (bad) 
   14002aaa0:	call   0x12c01f36e
   14002aaa5:	iret   
   14002aaa6:	rex.WRX (bad) 
   14002aaa8:	out    dx,al
   14002aaa9:	fcom   DWORD PTR [rdi+rdi*8-0xf]
   14002aaad:	ficomp WORD PTR [rdx-0x1]
   14002aab0:	repz loop 0x14002ab11
   14002aab3:	push   rsi
   14002aab5:	call   0x12dfbaa1c
   14002aaba:	push   0xffffffffffffffff
   14002aabc:	stc    
   14002aabd:	out    dx,eax
   14002aabe:	outs   dx,BYTE PTR ds:[rsi]
   14002aabf:	(bad)  
   14002aac0:	sti    
   14002aac1:	cmc    
   14002aac2:	jb     0x14002aac3
   14002aac4:	std    
   14002aac5:	div    BYTE PTR [rsi-0x1]
   14002aac8:	std    
   14002aac9:	clc    
   14002aaca:	jl     0x14002aacb
   14002aacc:	(bad)  
   14002aacd:	sti    
   14002aace:	cmp    edi,0xff85fcfe
   14002aad4:	(bad)  
   14002aad5:	cli    
   14002aad6:	mov    edi,edi
   14002aad8:	(bad)  
   14002aad9:	cli    
   14002aada:	mov    edi,edi
   14002aadc:	(bad)  
   14002aadd:	cli    
   14002aade:	mov    edi,?
   14002aae0:	stc    
   14002aae1:	jmp    0x14002ab55
   14002aae3:	div    DWORD PTR [rdi-0x5a3dd67d]
   14002aae9:	ins    BYTE PTR es:[rdi],dx
   14002aaea:	sbb    al,0x25
	...
   14002ab40:	popf   
   14002ab41:	data16 sbb bl,BYTE PTR [rsi]
   14002ab44:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002ab45:	jno    0x14002ab6a
   14002ab47:	mov    edx,0xf787e0f2
   14002ab4c:	std    
   14002ab4d:	neg    BYTE PTR [rbx-0x6b0b0201]
   14002ab53:	(bad)  
   14002ab54:	std    
   14002ab55:	pause  
   14002ab57:	(bad)  
   14002ab58:	std    
   14002ab59:	icebp  
   14002ab5a:	mov    edi,edi
   14002ab5c:	std    
   14002ab5d:	icebp  
   14002ab5e:	xchg   bh,bh
   14002ab60:	std    
   14002ab61:	lock (bad) 
   14002ab63:	(bad)  
   14002ab64:	std    
   14002ab65:	in     eax,dx
   14002ab66:	jg     0x14002ab67
   14002ab68:	cld    
   14002ab69:	jmp    0x14002abe3
   14002ab6b:	(bad)  
   14002ab6c:	cld    
   14002ab6d:	out    0x73,eax
   14002ab6f:	(bad)  
   14002ab70:	sti    
   14002ab71:	loope  0x14002abe0
   14002ab73:	push   rdi
   14002ab75:	fsub   QWORD PTR [rdi-0x1]
   14002ab78:	neg    ecx
   14002ab7a:	movsxd edi,edi
   14002ab7c:	repz rcr BYTE PTR [rdi-0x1],1
   14002ab80:	icebp  
   14002ab81:	retf   
   14002ab82:	push   rdi
   14002ab83:	(bad)  
   14002ab84:	out    dx,eax
   14002ab85:	ret    
   14002ab86:	push   rsp
   14002ab87:	(bad)  
   14002ab88:	jmp    0x14002ab46
   14002ab8a:	rex.WRX jmp rdi
   14002ab8d:	mov    dh,0x48
   14002ab8f:	jmp    rbx
   14002ab91:	lods   eax,DWORD PTR ds:[rsi]
   14002ab92:	rex.R (bad) 
   14002ab94:	frstor [rbx+rdi*1+0x3091cdff]
   14002ab9b:	jmp    QWORD PTR [rsi-0x7214db92]
   14002aba1:	pop    rdx
   14002aba2:	(bad)  
   14002aba3:	pop    rcx
	...
   14002abcc:	lods   eax,DWORD PTR ds:[rsi]
   14002abcd:	(bad)  
   14002abce:	(bad)  
   14002abcf:	sbb    ebp,DWORD PTR [rbx-0x55cc0101]
   14002abd5:	(bad)  
   14002abd6:	(bad)  
   14002abd7:	cmp    ch,BYTE PTR [rax-0x59c10101]
   14002abdd:	(bad)  
   14002abde:	inc    BYTE PTR [rbp+0x61]
   14002abe1:	(bad)  
   14002abe2:	dec    bl
   14002abe4:	rex.WXB loop 0x14002abe6
   14002abe7:	in     eax,0x3c
   14002abe9:	(bad)  
   14002abea:	jmp    rbp
   14002abec:	xor    al,cl
   14002abee:	jmp    rsp
   14002abf0:	sub    DWORD PTR [rdi+rdi*8-0x46d51c],edi
   14002abf7:	in     eax,0x33
   14002abf9:	mov    ebp,0xa942e6ff
   14002abfe:	out    dx,eax
   14002abff:	xchg   esi,eax
   14002ac00:	add    eax,0x2e1e5a07
   14002ac05:	sub    eax,0x71ac0d67
   14002ac0a:	(bad)  
   14002ac0b:	imul   edx,eax,0xffffff9a
   14002ac0e:	(bad)  
   14002ac0f:	out    dx,eax
   14002ac10:	loopne 0x14002abc6
   14002ac12:	cmp    edi,edi
   14002ac14:	jrcxz  0x14002abd1
   14002ac16:	rex.XB jmp r14
   14002ac19:	rol    DWORD PTR [rsi-0x1],0xe8
   14002ac1d:	enter  0xff49,0xea
   14002ac21:	(bad)  
   14002ac22:	rex.WRB (bad) 
   14002ac24:	in     eax,dx
   14002ac25:	(bad)  
   14002ac26:	push   rbx
   14002ac27:	push   rax
   14002ac29:	fistp  DWORD PTR [rcx-0x1]
   14002ac2c:	repz loop 0x14002ac8d
   14002ac2f:	push   rbp
   14002ac31:	out    0x64,eax
   14002ac33:	(bad)  
   14002ac34:	clc    
   14002ac35:	jmp    0x14002ac9f
   14002ac37:	(bad)  
   14002ac38:	stc    
   14002ac39:	icebp  
   14002ac3a:	ins    DWORD PTR es:[rdi],dx
   14002ac3b:	(bad)  
   14002ac3c:	sti    
   14002ac3d:	hlt    
   14002ac3e:	jno    0x14002ac3f
   14002ac40:	std    
   14002ac41:	div    BYTE PTR [rbp-0x1]
   14002ac44:	std    
   14002ac45:	clc    
   14002ac46:	jl     0x14002ac47
   14002ac48:	(bad)  
   14002ac49:	cli    
   14002ac4a:	jg     0x14002ac4b
   14002ac4c:	(bad)  
   14002ac4d:	sti    
   14002ac4e:	(bad)  
   14002ac4f:	(bad)  
   14002ac50:	(bad)  
   14002ac51:	cld    
   14002ac52:	xchg   edi,edi
   14002ac54:	(bad)  
   14002ac55:	cli    
   14002ac56:	mov    edi,edi
   14002ac58:	(bad)  
   14002ac59:	cli    
   14002ac5a:	mov    edi,?
   14002ac5c:	cld    
   14002ac5d:	idiv   BYTE PTR [rcx-0x7]
   14002ac60:	mov    bh,0x80
   14002ac62:	es retf 0x6ca5
   14002ac66:	sbb    al,0x25
	...
   14002acc4:	popf   
   14002acc5:	data16 sbb cl,BYTE PTR [rdi]
   14002acc8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002acc9:	jb     0x14002acef
   14002accb:	lods   al,BYTE PTR ds:[rsi]
   14002accc:	repnz fiadd WORD PTR [rdi-0x650a020a]
   14002acd3:	(bad)  
   14002acd4:	std    
   14002acd5:	repz xchg esp,eax
   14002acd7:	(bad)  
   14002acd8:	std    
   14002acd9:	repnz (bad) 
   14002acdb:	(bad)  
   14002acdc:	std    
   14002acdd:	icebp  
   14002acde:	mov    edi,edi
   14002ace0:	std    
   14002ace1:	lock test edi,edi
   14002ace4:	std    
   14002ace5:	out    dx,al
   14002ace6:	cmp    edi,0xff7decfd
   14002acec:	cld    
   14002aced:	call   0x124feac6a
   14002acf2:	jb     0x14002acf3
   14002acf4:	stc    
   14002acf5:	loopne 0x14002ad65
   14002acf7:	push   rbp
   14002acf9:	fisub  DWORD PTR [rdi-0x1]
   14002acfc:	cmc    
   14002acfd:	(bad)  
   14002acfe:	movsxd edi,edi
   14002ad00:	icebp  
   14002ad01:	int3   
   14002ad02:	pop    rdi
   14002ad03:	(bad)  
   14002ad04:	out    dx,eax
   14002ad05:	enter  0xff58,0xeb
   14002ad09:	mov    edi,0xb8e8ff55
   14002ad0e:	rex.WRB jmp r13
   14002ad11:	mov    al,0x47
   14002ad13:	jmp    rcx
   14002ad15:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002ad16:	call   r13
   14002ad19:	popf   
   14002ad1a:	cmp    bh,bh
   14002ad1c:	mov    ebx,0x8dfa2880
   14002ad21:	pop    rbx
   14002ad22:	(bad)  
   14002ad23:	ror    BYTE PTR [rbp+0x5165a],0x0
	...
   14002ad4a:	add    BYTE PTR [rax],al
   14002ad4c:	lods   al,BYTE PTR ds:[rsi]
   14002ad4d:	(bad)  
   14002ad4e:	dec    BYTE PTR [rcx]
   14002ad50:	stos   BYTE PTR es:[rdi],al
   14002ad51:	(bad)  
   14002ad52:	(bad)  
   14002ad53:	ss test al,0xff
   14002ad56:	(bad)  
   14002ad57:	cmp    eax,0x42feffa7
   14002ad5c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002ad5d:	(bad)  
   14002ad5e:	dec    BYTE PTR [rcx+0x73]
   14002ad61:	in     eax,dx
   14002ad62:	std    
   14002ad63:	sahf   
   14002ad64:	push   rcx
   14002ad65:	call   0x11b449369
   14002ad6a:	jmp    rbp
   14002ad6c:	xor    al,0xcd
   14002ad6e:	jmp    rbp
   14002ad70:	sub    al,0xc0
   14002ad72:	jmp    rsi
   14002ad74:	sub    bh,BYTE PTR [rcx-0x45d01901]
   14002ad7a:	jmp    rdi
   14002ad7c:	rex.X mov esi,0x3418dffc
   14002ad82:	test   DWORD PTR [rbx],ebp
   14002ad84:	push   rax
   14002ad85:	rex.XB push r14
   14002ad87:	sbb    ebp,DWORD PTR [rdx-0x2042e090]
   14002ad8d:	scas   eax,DWORD PTR es:[rdi]
   14002ad8e:	cmp    bh,dh
   14002ad90:	jrcxz  0x14002ad4c
   14002ad92:	rex.X jmp rsi
   14002ad95:	mov    edi,0xc5e9ff46
   14002ad9a:	rex.WX (bad) 
   14002ad9c:	jmp    0x14002ad6b
   14002ad9e:	rex.WRB (bad) 
   14002ada0:	in     eax,dx
   14002ada1:	(bad)  
   14002ada2:	push   rdx
   14002ada3:	push   rax
   14002ada5:	fistp  DWORD PTR [rax-0x1]
   14002ada8:	repnz loope 0x14002ae07
   14002adab:	push   rsp
   14002adad:	in     eax,0x63
   14002adaf:	push   rsi
   14002adb1:	(bad)  
   14002adb2:	data16 (bad) 
   14002adb4:	clc    
   14002adb5:	out    dx,eax
   14002adb6:	ins    BYTE PTR es:[rdi],dx
   14002adb7:	(bad)  
   14002adb8:	cli    
   14002adb9:	icebp  
   14002adba:	jno    0x14002adbb
   14002adbc:	cld    
   14002adbd:	cmc    
   14002adbe:	jne    0x14002adbf
   14002adc0:	std    
   14002adc1:	clc    
   14002adc2:	jl     0x14002adc3
   14002adc4:	std    
   14002adc5:	cli    
   14002adc6:	cmp    bh,0xfe
   14002adc9:	cld    
   14002adca:	cmp    edi,0xfffffffe
   14002adcd:	sti    
   14002adce:	mov    bh,bh
   14002add0:	(bad)  
   14002add1:	cli    
   14002add2:	mov    edi,?
   14002add4:	(bad)  
   14002add5:	sti    
   14002add6:	(bad)  
   14002add7:	(bad)  
   14002add8:	(bad)  
   14002add9:	sti    
   14002adda:	mov    bh,bh
   14002addc:	ror    DWORD PTR [rbp+0x6da6d629],0x1c
   14002ade3:	(bad)  
	...
   14002ae48:	popf   
   14002ae49:	data16 sbb dl,BYTE PTR [rcx]
   14002ae4c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002ae4d:	jae    0x14002ae75
   14002ae4f:	mov    esp,0xf88ce5f6
   14002ae54:	std    
   14002ae55:	cmc    
   14002ae56:	(bad)  
   14002ae57:	(bad)  
   14002ae58:	std    
   14002ae59:	hlt    
   14002ae5a:	xchg   ebp,eax
   14002ae5b:	(bad)  
   14002ae5c:	std    
   14002ae5d:	repnz (bad) 
   14002ae5f:	(bad)  
   14002ae60:	std    
   14002ae61:	lock mov edi,?
   14002ae64:	std    
   14002ae65:	out    dx,eax
   14002ae66:	xchg   edi,edi
   14002ae68:	cld    
   14002ae69:	out    dx,eax
   14002ae6a:	test   edi,edi
   14002ae6c:	cld    
   14002ae6d:	jmp    0x14002aeee
   14002ae6f:	(bad)  
   14002ae70:	cld    
   14002ae71:	(bad)  
   14002ae72:	jl     0x14002ae73
   14002ae74:	stc    
   14002ae75:	in     al,0x77
   14002ae77:	(bad)  
   14002ae78:	stc    
   14002ae79:	fidiv  WORD PTR [rbx-0x1]
   14002ae7c:	cmc    
   14002ae7d:	fldcw  WORD PTR [rbp-0x1]
   14002ae80:	repz (bad) 
   14002ae82:	push   0x63cdf0ff
   14002ae87:	(bad)  
   14002ae88:	out    dx,al
   14002ae89:	(bad)
   14002ae8c:	jmp    0x14002ae4d
   14002ae8e:	pop    rbx
   14002ae8f:	jmp    rsi
   14002ae91:	mov    ecx,0xb0e3ff56
   14002ae96:	push   rcx
   14002ae97:	(bad)  
   14002ae98:	fsub   QWORD PTR [rdi-0x6d3100bd]
   14002ae9e:	jmp    QWORD PTR ss:[rbx-0x7218dd94]
   14002aea5:	pop    rbx
   14002aea6:	(bad)  
   14002aea7:	rex.RXB add BYTE PTR [r8],r8b
	...
   14002aece:	add    BYTE PTR [rax],al
   14002aed0:	test   al,0xff
   14002aed2:	(bad)  
   14002aed3:	sub    al,0xa7
   14002aed5:	(bad)  
   14002aed6:	inc    BYTE PTR [rax-0x5b]
   14002aed9:	(bad)  
   14002aeda:	inc    BYTE PTR [rbp-0x5d]
   14002aedd:	(bad)  
   14002aede:	dec    BYTE PTR [rbx-0x6c]
   14002aee1:	idiv   ebp
   14002aee3:	(bad)  
   14002aee4:	pop    rax
   14002aee5:	jmp    0x14002aee6
   14002aee7:	in     al,0x48
   14002aee9:	loope  0x14002aeea
   14002aeeb:	in     eax,0x3a
   14002aeed:	(bad)  
   14002aeee:	jmp    rbp
   14002aef0:	(bad)  
   14002aef1:	(bad)  
   14002aef2:	jmp    rsi
   14002aef4:	sub    bh,BYTE PTR [rdi+rdi*8-0x45d219]
   14002aefb:	(bad)  
   14002aefc:	(bad)  
   14002aefd:	sar    bh,0xed
   14002af00:	lods   rax,QWORD PTR ds:[rsi]
   14002af02:	lock xchg esp,eax
   14002af04:	test   DWORD PTR [rsi+0x32],ebx
   14002af07:	push   rsi
   14002af08:	mov    edi,0xe0e5358d
   14002af0d:	mov    ecx,0xc0e7ff40
   14002af12:	rex.RX (bad) 
   14002af14:	call   0x12c01fadd
   14002af19:	retf   
   14002af1a:	rex.WRX (bad) 
   14002af1c:	in     eax,dx
   14002af1d:	rcl    BYTE PTR [rdx-0x1],cl
   14002af20:	out    dx,eax
   14002af21:	fcom   DWORD PTR [rsi-0x1]
   14002af24:	icebp  
   14002af25:	fistp  WORD PTR [rdi+rdi*8-0xc]
   14002af29:	loop   0x14002af8d
   14002af2b:	push   rsi
   14002af2d:	(bad)  
   14002af2e:	addr32 (bad) 
   14002af30:	clc    
   14002af31:	out    dx,al
   14002af32:	imul   edi,edi,0xff72f1f9
   14002af38:	sti    
   14002af39:	cmc    
   14002af3a:	jae    0x14002af3b
   14002af3c:	std    
   14002af3d:	idiv   DWORD PTR [rax-0x1]
   14002af40:	std    
   14002af41:	cli    
   14002af42:	jle    0x14002af43
   14002af44:	(bad)  
   14002af45:	sti    
   14002af46:	(bad)  
   14002af47:	(bad)  
   14002af48:	(bad)  
   14002af49:	cld    
   14002af4a:	xchg   bh,bh
   14002af4c:	(bad)  
   14002af4d:	std    
   14002af4e:	mov    bh,bh
   14002af50:	(bad)  
   14002af51:	std    
   14002af52:	(bad)  
   14002af53:	(bad)  
   14002af54:	(bad)  
   14002af55:	sti    
   14002af56:	mov    edi,?
   14002af58:	(bad)  
   14002af59:	int    0x60
   14002af5b:	out    dx,al
   14002af5c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002af5d:	ins    DWORD PTR es:[rdi],dx
   14002af5e:	sbb    eax,0x77
	...
   14002afcb:	add    BYTE PTR [rbp-0x51dfe59a],bl
   14002afd1:	jge    0x14002b003
   14002afd3:	(bad)  
   14002afd4:	cld    
   14002afd5:	repz sahf 
   14002afd7:	(bad)  
   14002afd8:	std    
   14002afd9:	repz popf 
   14002afdb:	(bad)  
   14002afdc:	std    
   14002afdd:	icebp  
   14002afde:	cwde   
   14002afdf:	(bad)  
   14002afe0:	std    
   14002afe1:	lock xchg esp,eax
   14002afe3:	(bad)  
   14002afe4:	cld    
   14002afe5:	lock xchg ebx,eax
   14002afe7:	(bad)  
   14002afe8:	cld    
   14002afe9:	out    dx,eax
   14002afea:	(bad)  
   14002afeb:	(bad)  
   14002afec:	cld    
   14002afed:	out    dx,al
   14002afee:	(bad)  
   14002afef:	(bad)  
   14002aff0:	cld    
   14002aff1:	(bad)  
   14002aff2:	mov    bh,bh
   14002aff4:	stc    
   14002aff5:	in     eax,0x86
   14002aff7:	(bad)  
   14002aff8:	clc    
   14002aff9:	loop   0x14002af7f
   14002affb:	push   rdi
   14002affd:	fnstsw WORD PTR [rsi-0x1]
   14002b000:	repz fnstcw WORD PTR [rdi+rdi*8-0x10]
   14002b005:	(bad)  
   14002b006:	jp     0x14002b007
   14002b008:	out    dx,al
   14002b009:	iret   
   14002b00a:	jne    0x14002b00b
   14002b00c:	jmp    0x14002afd8
   14002b00e:	outs   dx,DWORD PTR ds:[rsi]
   14002b00f:	(bad)  
   14002b010:	jmp    0x127021dda
   14002b015:	mov    esp,0xb6dfff69
   14002b01a:	(bad)  
   14002b01b:	(bad)  
   14002b01c:	fisub  DWORD PTR [rax+rcx*2+0x2c80bcff]
   14002b023:	test   BYTE PTR [rsi+0x9e165b],0x0
	...
   14002b04e:	add    BYTE PTR [rax],al
   14002b050:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002b051:	(bad)  
   14002b052:	(bad)  
   14002b053:	adc    eax,0x42feffa5
   14002b058:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002b059:	(bad)  
   14002b05a:	dec    BYTE PTR [rax-0x5e]
   14002b05d:	(bad)  
   14002b05e:	dec    BYTE PTR [rsi-0x60]
   14002b061:	(bad)  
   14002b062:	(bad)  
   14002b063:	push   rdx
   14002b064:	out    dx,ax
   14002b066:	dec    cl
   14002b068:	push   rax
   14002b069:	out    0xff,eax
   14002b06b:	in     eax,0x41
   14002b06d:	(bad)  
   14002b06f:	in     eax,0x33
   14002b071:	int    0xff
   14002b073:	out    0x2c,al
   14002b075:	sar    bh,0xe9
   14002b078:	sub    al,0xba
   14002b07a:	(bad)  
   14002b07b:	in     al,dx
   14002b07c:	xor    DWORD PTR [rdi+rdi*8-0x43fbe11],edi
   14002b083:	in     al,dx
   14002b084:	mov    dh,BYTE PTR [rax+0x43]
   14002b087:	movabs eax,ds:0xff45bce3f63ca2d1
   14002b090:	jmp    0x12c01fc58
   14002b095:	retf   0xff4d
   14002b098:	out    dx,al
   14002b099:	rcl    BYTE PTR [rdx-0x1],1
   14002b09c:	out    dx,eax
   14002b09d:	xlat   BYTE PTR ds:[rbx]
   14002b09e:	push   rsi
   14002b09f:	push   rax
   14002b0a1:	ficomp WORD PTR [rdi+rdi*8-0xd]
   14002b0a5:	loop   0x14002b109
   14002b0a7:	push   rsp
   14002b0a9:	jmp    0x12cfab014
   14002b0ae:	push   0x70f0f8ff
   14002b0b3:	(bad)  
   14002b0b4:	cli    
   14002b0b5:	hlt    
   14002b0b6:	jb     0x14002b0b7
   14002b0b8:	cld    
   14002b0b9:	idiv   DWORD PTR [rax-0x1]
   14002b0bc:	std    
   14002b0bd:	cli    
   14002b0be:	jl     0x14002b0bf
   14002b0c0:	std    
   14002b0c1:	sti    
   14002b0c2:	cmp    bh,0xfe
   14002b0c5:	cld    
   14002b0c6:	test   bh,bh
   14002b0c8:	(bad)  
   14002b0c9:	std    
   14002b0ca:	mov    edi,edi
   14002b0cc:	(bad)  
   14002b0cd:	std    
   14002b0ce:	mov    edi,?
   14002b0d0:	(bad)  
   14002b0d1:	std    
   14002b0d2:	mov    edi,?
   14002b0d4:	std    
   14002b0d5:	clc    
   14002b0d6:	cmp    ebp,0xc22076ae
   14002b0dc:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002b0dd:	ins    DWORD PTR es:[rdi],dx
   14002b0de:	sbb    eax,0xf
	...
   14002b14f:	add    BYTE PTR [rsi-0x62c0e59a],bl
   14002b155:	data16 sbb cl,BYTE PTR [rdx-0x70e59963]
   14002b15c:	popf   
   14002b15d:	data16 sbb bl,BYTE PTR [rbx-0x59e59a64]
   14002b164:	fwait
   14002b165:	sbb    ch,BYTE PTR gs:[rdx+rbx*4-0x664de69c]
   14002b16d:	movsxd ebx,DWORD PTR [rcx]
   14002b16f:	mov    ecx,0xc6196399
   14002b174:	cwde   
   14002b175:	(bad)  
   14002b176:	sbb    esi,ecx
   14002b178:	xchg   edi,eax
   14002b179:	(bad)  
   14002b17a:	sbb    esi,edx
   14002b17c:	xchg   esi,eax
   14002b17d:	(bad)  
   14002b17e:	sbb    dh,dl
   14002b180:	xchg   esi,eax
   14002b181:	(bad)  
   14002b182:	sbb    dh,dl
   14002b184:	xchg   ebp,eax
   14002b185:	(bad)  
   14002b186:	sbb    dh,dl
   14002b188:	xchg   esp,eax
   14002b189:	(bad)  
   14002b18a:	sbb    dh,dl
   14002b18c:	xchg   ebx,eax
   14002b18d:	pop    rdi
   14002b18e:	sbb    bh,dl
   14002b190:	xchg   ebx,eax
   14002b191:	pop    rsi
   14002b192:	sbb    bh,dl
   14002b194:	xchg   edx,eax
   14002b195:	pop    rsi
   14002b196:	(bad)  
   14002b197:	xlat   BYTE PTR ds:[rbx]
   14002b198:	xchg   ecx,eax
   14002b199:	pop    rbp
   14002b19a:	(bad)  
   14002b19b:	xlat   BYTE PTR ds:[rbx]
   14002b19c:	nop
   14002b19d:	pop    rbp
   14002b19e:	(bad)  
   14002b19f:	xlat   BYTE PTR ds:[rbx]
   14002b1a0:	nop
   14002b1a1:	pop    rsp
   14002b1a2:	(bad)  
   14002b1a3:	xlat   BYTE PTR ds:[rbx]
   14002b1a4:	(bad)  
   14002b1a5:	pop    rsp
   14002b1a6:	(bad)  
   14002b1a7:	lods   al,BYTE PTR ds:[rsi]
   14002b1a8:	mov    ds,WORD PTR [rbx+0x16]
   14002b1ab:	sbb    DWORD PTR [rax],eax
	...
   14002b1d1:	add    BYTE PTR [rax],al
   14002b1d3:	add    BYTE PTR [rdi+rdi*8-0x5dc602],ah
   14002b1da:	dec    BYTE PTR [rbx-0x60]
   14002b1dd:	(bad)  
   14002b1de:	(bad)  
   14002b1df:	push   rax
   14002b1e0:	lahf   
   14002b1e1:	(bad)  
   14002b1e2:	(bad)  
   14002b1e3:	push   rsp
   14002b1e4:	ja     0x14002b1d6
   14002b1e6:	std    
   14002b1e7:	popf   
   14002b1e8:	push   rbp
   14002b1e9:	out    dx,al
   14002b1ea:	jmp    rbp
   14002b1ec:	rex.RXB (bad) 
   14002b1ef:	out    0x39,al
   14002b1f1:	sar    bh,cl
   14002b1f3:	out    0x30,eax
   14002b1f5:	(bad)  
   14002b1f6:	(bad)  
   14002b1f7:	(bad)  
   14002b1f8:	sub    bh,BYTE PTR [rbp-0x44d01101]
   14002b1fe:	push   rcx
   14002b200:	(bad)  
   14002b201:	mov    ebp,0xa166f6fc
   14002b206:	mov    ah,0xed
   14002b208:	(bad)  
   14002b209:	mov    al,0x41
   14002b20b:	(bad)  
   14002b20c:	jrcxz  0x14002b1cd
   14002b20e:	rex.WB (bad) 
   14002b210:	jmp    0x12e01ffde
   14002b215:	iret   
   14002b216:	push   rcx
   14002b217:	(bad)  
   14002b218:	out    dx,eax
   14002b219:	(bad)  
   14002b21a:	push   rdi
   14002b21b:	push   rcx
   14002b21d:	fcomp  QWORD PTR [rbx-0x1]
   14002b220:	repnz loope 0x14002b284
   14002b223:	push   rsp
   14002b225:	out    0x66,eax
   14002b227:	push   rsi
   14002b229:	in     al,dx
   14002b22a:	push   0xffffffffffffffff
   14002b22c:	stc    
   14002b22d:	lock outs dx,BYTE PTR ds:[rsi]
   14002b22f:	(bad)  
   14002b230:	cli    
   14002b231:	repz jae 0x14002b233
   14002b234:	sti    
   14002b235:	div    BYTE PTR [rsi-0x1]
   14002b238:	std    
   14002b239:	idiv   DWORD PTR [rdx-0x1]
   14002b23c:	std    
   14002b23d:	cli    
   14002b23e:	jg     0x14002b23f
   14002b240:	(bad)  
   14002b241:	sti    
   14002b242:	cmp    edi,0xfffffffe
   14002b245:	std    
   14002b246:	xchg   edi,edi
   14002b248:	(bad)  
   14002b249:	std    
   14002b24a:	mov    edi,edi
   14002b24c:	(bad)  
   14002b24d:	std    
   14002b24e:	mov    ?,edi
   14002b250:	(bad)  
   14002b251:	dec    BYTE PTR [rdi+rdi*8-0x12a23b1b]
   14002b258:	test   al,0x6e
   14002b25a:	sbb    eax,0x61
	...
   14002b353:	add    BYTE PTR [rdx-0x5fe80101],ah
   14002b359:	(bad)  
   14002b35a:	dec    BYTE PTR [rbp-0x61]
   14002b35d:	(bad)  
   14002b35e:	(bad)  
   14002b35f:	push   rdx
   14002b360:	popf   
   14002b361:	(bad)  
   14002b362:	(bad)  
   14002b363:	push   rsi
   14002b364:	xchg   esp,eax
   14002b365:	cli    
   14002b366:	std    
   14002b367:	addr32 pop rdi
   14002b369:	out    dx,eax
   14002b36a:	jmp    rax
   14002b36c:	push   rax
   14002b36d:	out    0xff,eax
   14002b36f:	out    0x3e,al
   14002b371:	(bad)  
   14002b373:	call   0x12e027eab
   14002b378:	sub    al,0xc0
   14002b37a:	push   rax
   14002b37c:	sub    DWORD PTR [rax-0x48ce0b02],edi
   14002b382:	stc    
   14002b383:	stc    
   14002b384:	rex.RX shl dil,0xfd
   14002b388:	shl    BYTE PTR [rax+riz*2+0x4ec1e3ff],0xff
   14002b390:	jmp    0x12f020461
   14002b395:	(bad)  
   14002b396:	push   rbp
   14002b397:	push   rax
   14002b399:	ficomp DWORD PTR [rcx-0x1]
   14002b39c:	repnz loopne 0x14002b401
   14002b39f:	push   rbp
   14002b3a1:	in     eax,0x65
   14002b3a3:	push   rsi
   14002b3a5:	jmp    0x14002b411
   14002b3a7:	(bad)  
   14002b3a8:	clc    
   14002b3a9:	out    dx,eax
   14002b3aa:	outs   dx,DWORD PTR ds:[rsi]
   14002b3ab:	(bad)  
   14002b3ac:	stc    
   14002b3ad:	repz jae 0x14002b3af
   14002b3b0:	sti    
   14002b3b1:	hlt    
   14002b3b2:	je     0x14002b3b3
   14002b3b4:	cld    
   14002b3b5:	idiv   DWORD PTR [rax-0x1]
   14002b3b8:	std    
   14002b3b9:	cli    
   14002b3ba:	jg     0x14002b3bb
   14002b3bc:	std    
   14002b3bd:	sti    
   14002b3be:	cmp    edi,0xfffffffe
   14002b3c1:	cld    
   14002b3c2:	xchg   bh,bh
   14002b3c4:	(bad)  
   14002b3c5:	std    
   14002b3c6:	mov    edi,edi
   14002b3c8:	(bad)  
   14002b3c9:	std    
   14002b3ca:	(bad)  
   14002b3cb:	(bad)  
   14002b3cc:	(bad)  
   14002b3cd:	std    
   14002b3ce:	(bad)  
   14002b3cf:	(bad)  
   14002b3d0:	(bad)  
   14002b3d1:	std    
   14002b3d2:	xchg   esi,edi
   14002b3d4:	scas   al,BYTE PTR es:[rdi]
   14002b3d5:	jne    0x14002b3f7
   14002b3d7:	retf   0x6ea8
   14002b3da:	sbb    eax,0xc
	...
   14002b4d3:	add    BYTE PTR [rcx-0x60fe0101],ah
   14002b4d9:	(bad)  
   14002b4da:	inc    BYTE PTR [rbx-0x63]
   14002b4dd:	(bad)  
   14002b4de:	(bad)  
   14002b4df:	push   rbp
   14002b4e0:	fwait
   14002b4e1:	(bad)  
   14002b4e2:	std    
   14002b4e3:	pop    rcx
   14002b4e4:	(bad)  
   14002b4e5:	(bad)  
   14002b4e6:	std    
   14002b4e7:	pop    rsp
   14002b4e8:	jo     0x14002b4dc
   14002b4ea:	(bad)  
   14002b4eb:	mov    ebx,0xe7ffec58
   14002b4f0:	rex.RX (bad) 
   14002b4f3:	jmp    0x12e028931
   14002b4f8:	(bad)  
   14002b4f9:	(bad)  
   14002b4fa:	push   rcx
   14002b4fc:	sub    DWORD PTR [rcx-0x4cd10903],edi
   14002b502:	idiv   esp
   14002b504:	cmp    DWORD PTR [rbx-0x428a0008],edi
   14002b50a:	leave  
   14002b50b:	(bad)  
   14002b50c:	faddp  st(3),st
   14002b50e:	push   rdx
   14002b50f:	(bad)  
   14002b510:	jmp    0x1300207e3
   14002b515:	xlat   BYTE PTR ds:[rbx]
   14002b516:	pop    rax
   14002b517:	push   rdx
   14002b519:	ficomp WORD PTR [rsi-0x1]
   14002b51c:	hlt    
   14002b51d:	in     al,0x65
   14002b51f:	push   rbp
   14002b521:	jmp    0x12efab48f
   14002b526:	outs   dx,BYTE PTR ds:[rsi]
   14002b527:	(bad)  
   14002b528:	stc    
   14002b529:	bnd jae 0x14002b52b
   14002b52c:	sti    
   14002b52d:	hlt    
   14002b52e:	je     0x14002b52f
   14002b530:	cld    
   14002b531:	idiv   BYTE PTR [rcx-0x1]
   14002b534:	cld    
   14002b535:	clc    
   14002b536:	jle    0x14002b537
   14002b538:	std    
   14002b539:	sti    
   14002b53a:	(bad)  
   14002b53b:	(bad)  
   14002b53c:	(bad)  
   14002b53d:	cld    
   14002b53e:	test   edi,edi
   14002b540:	(bad)  
   14002b541:	dec    BYTE PTR [rcx-0x73010101]
   14002b547:	(bad)  
   14002b548:	(bad)  
   14002b549:	dec    BYTE PTR [rdi-0x70010001]
   14002b54f:	push   rbp
   14002b551:	in     eax,0x73
   14002b553:	imul   DWORD PTR [rcx+0x8f1d6f]
	...
   14002b655:	add    BYTE PTR [rax],al
   14002b657:	add    BYTE PTR [rbp-0x63ea0101],bl
   14002b65d:	(bad)  
   14002b65e:	std    
   14002b65f:	push   rdi
   14002b660:	(bad)  
   14002b661:	(bad)  
   14002b662:	std    
   14002b663:	pop    rbx
   14002b664:	cwde   
   14002b665:	(bad)  
   14002b666:	std    
   14002b667:	pop    rsi
   14002b668:	xchg   esi,esi
   14002b66a:	std    
   14002b66b:	jle    0x14002b6ca
   14002b66d:	icebp  
   14002b66e:	jmp    rsi
   14002b670:	rex.WRX out 0xff,eax
   14002b673:	jmp    0x12f0290b8
   14002b678:	xor    ecx,ebp
   14002b67a:	push   rbx
   14002b67c:	sub    bh,BYTE PTR [rbx-0x4bd40804]
   14002b682:	idiv   esi
   14002b684:	xor    dh,BYTE PTR [rsi-0x3ebc0009]
   14002b68a:	stc    
   14002b68b:	push   QWORD PTR [rdx-0x16007a41]
   14002b691:	iret   
   14002b692:	push   rdi
   14002b693:	(bad)  
   14002b694:	out    dx,eax
   14002b695:	fstp   DWORD PTR [rdx-0x1]
   14002b698:	repz loop 0x14002b6fd
   14002b69b:	push   rbp
   14002b69d:	out    0x68,al
   14002b69f:	push   rdi
   14002b6a1:	in     eax,dx
   14002b6a2:	ins    BYTE PTR es:[rdi],dx
   14002b6a3:	(bad)  
   14002b6a4:	stc    
   14002b6a5:	lock jb 0x14002b6a7
   14002b6a8:	cli    
   14002b6a9:	hlt    
   14002b6aa:	jbe    0x14002b6ab
   14002b6ac:	sti    
   14002b6ad:	idiv   BYTE PTR [rcx-0x1]
   14002b6b0:	std    
   14002b6b1:	clc    
   14002b6b2:	jnp    0x14002b6b3
   14002b6b4:	std    
   14002b6b5:	sti    
   14002b6b6:	cmp    edi,0xff85fcfd
   14002b6bc:	(bad)  
   14002b6bd:	std    
   14002b6be:	xchg   edi,edi
   14002b6c0:	(bad)  
   14002b6c1:	dec    BYTE PTR [rdi+rdi*8-0x710101]
   14002b6c8:	(bad)  
   14002b6c9:	(bad)  
   14002b6ca:	nop
   14002b6cb:	(bad)  
   14002b6cc:	(bad)  
   14002b6cd:	dec    BYTE PTR [rbp+0x57bce0ff]
   14002b6d3:	(bad)  
   14002b6d4:	test   eax,0x551d6f
	...
   14002b7d9:	add    BYTE PTR [rax],al
   14002b7db:	add    BYTE PTR [rdx-0x67c60201],bl
   14002b7e1:	(bad)  
   14002b7e2:	std    
   14002b7e3:	pop    rbp
   14002b7e4:	xchg   edi,eax
   14002b7e5:	(bad)  
   14002b7e6:	std    
   14002b7e7:	(bad)  
   14002b7e8:	xchg   ebp,eax
   14002b7e9:	(bad)  
   14002b7ea:	std    
   14002b7eb:	movsxd ebp,DWORD PTR [rbp-0xa]
   14002b7ee:	dec    ah
   14002b7f0:	pop    rdx
   14002b7f1:	out    dx,al
   14002b7f2:	(bad)  
   14002b7f3:	in     al,dx
   14002b7f4:	rex.W loop 0x14002b7f6
   14002b7f7:	out    dx,eax
   14002b7f8:	cmp    bl,dl
   14002b7fa:	(bad)  
   14002b7fb:	cmc    
   14002b7fc:	sub    eax,0x2bfafabf
   14002b801:	mov    dh,0xf8
   14002b803:	(bad)  
   14002b804:	cs mov ch,0xf9
   14002b807:	push   QWORD PTR [rsi]
   14002b809:	mov    esp,0xc55dfffa
   14002b80e:	lock (bad) 
   14002b810:	fmul   st(5),st
   14002b812:	movsxd edi,edi
   14002b814:	in     eax,dx
   14002b815:	xlat   BYTE PTR ds:[rbx]
   14002b816:	pop    rbp
   14002b817:	push   rdx
   14002b819:	jrcxz  0x14002b881
   14002b81b:	push   rdi
   14002b81d:	in     al,dx
   14002b81e:	ins    BYTE PTR es:[rdi],dx
   14002b81f:	(bad)  
   14002b820:	clc    
   14002b821:	lock jb 0x14002b823
   14002b824:	stc    
   14002b825:	hlt    
   14002b826:	ja     0x14002b827
   14002b828:	cli    
   14002b829:	cmc    
   14002b82a:	jp     0x14002b82b
   14002b82c:	cld    
   14002b82d:	idiv   DWORD PTR [rdi+rdi*8-0x3]
   14002b831:	stc    
   14002b832:	cmp    edi,0xfffffffd
   14002b835:	cld    
   14002b836:	xchg   bh,bh
   14002b838:	(bad)  
   14002b839:	cld    
   14002b83a:	mov    bh,bh
   14002b83c:	(bad)  
   14002b83d:	std    
   14002b83e:	mov    edi,edi
   14002b840:	(bad)  
   14002b841:	dec    BYTE PTR [rsi-0x6f010001]
   14002b847:	(bad)  
   14002b848:	(bad)  
   14002b849:	call   QWORD PTR [rbx-0x73010001]
   14002b84f:	dec    esp
   14002b851:	popf   
   14002b852:	rex.X fisubr WORD PTR [rcx+0x2e1d6f]
	...
   14002b959:	add    BYTE PTR [rax],al
   14002b95b:	add    BYTE PTR [rcx-0x68f50201],bl
   14002b961:	(bad)  
   14002b962:	std    
   14002b963:	pop    rdx
   14002b964:	xchg   ebp,eax
   14002b965:	(bad)  
   14002b966:	std    
   14002b967:	(bad)  {k5}{z}
   14002b96c:	jle    0x14002b961
   14002b96e:	std    
   14002b96f:	xchg   ebp,eax
   14002b970:	(bad)  
   14002b971:	repnz (bad) 
   14002b973:	jmp    0x14002b9c6
   14002b975:	call   0x11742aa79
   14002b97a:	(bad)  
   14002b97b:	cmc    
   14002b97c:	xor    bl,al
   14002b97e:	clc    
   14002b97f:	cld    
   14002b980:	sub    eax,0x2cfff7b9
   14002b985:	mov    bh,0xf9
   14002b987:	push   QWORD PTR [rax]
   14002b989:	mov    ecx,0xc43efffb
   14002b98e:	sti    
   14002b98f:	dec    DWORD PTR [rax-0x16003f38]
   14002b995:	fldenv [rcx-0x1]
   14002b998:	repnz loop 0x14002ba02
   14002b99b:	push   rdi
   14002b99d:	in     eax,dx
   14002b99e:	outs   dx,BYTE PTR ds:[rsi]
   14002b99f:	(bad)  
   14002b9a0:	stc    
   14002b9a1:	icebp  
   14002b9a2:	jne    0x14002b9a3
   14002b9a4:	cli    
   14002b9a5:	cmc    
   14002b9a6:	js     0x14002b9a7
   14002b9a8:	cld    
   14002b9a9:	idiv   DWORD PTR [rbx-0x1]
   14002b9ac:	std    
   14002b9ad:	clc    
   14002b9ae:	cmp    bh,0xfe
   14002b9b1:	sti    
   14002b9b2:	xchg   bh,bh
   14002b9b4:	std    
   14002b9b5:	cld    
   14002b9b6:	mov    bh,bh
   14002b9b8:	(bad)  
   14002b9b9:	std    
   14002b9ba:	mov    bh,bh
   14002b9bc:	(bad)  
   14002b9bd:	std    
   14002b9be:	mov    ?,edi
   14002b9c0:	(bad)  
   14002b9c1:	(bad)  
   14002b9c2:	nop
   14002b9c3:	(bad)  
   14002b9c4:	(bad)  
   14002b9c5:	(bad)  
   14002b9c6:	xchg   edx,eax
   14002b9c7:	(bad)  
   14002b9c8:	(bad)  
   14002b9c9:	call   QWORD PTR [rbp-0x71010001]
   14002b9cf:	push   QWORD PTR [rdi-0x552ad37e]
   14002b9d5:	outs   dx,DWORD PTR ds:[rsi]
   14002b9d6:	sbb    eax,0x11
	...
   14002badf:	add    BYTE PTR [rbp-0x6cd10201],dl
   14002bae5:	(bad)  
   14002bae6:	std    
   14002bae7:	fs xchg edx,eax
   14002bae9:	(bad)  
   14002baea:	std    
   14002baeb:	addr32 (bad) 
   14002baed:	(bad)  
   14002baee:	std    
   14002baef:	imul   ebp,DWORD PTR [rdx-0xb],0xfffffffe
   14002baf3:	fstp   DWORD PTR [rsi-0x11]
   14002baf6:	push   rcx
   14002baf8:	rex.RX (bad) 
   14002bafb:	div    DWORD PTR [rsi]
   14002bafd:	int3   
   14002bafe:	clc    
   14002baff:	std    
   14002bb00:	cs sar cl,0xff
   14002bb04:	sub    edi,DWORD PTR [rdx-0x47d20006]
   14002bb0a:	cld    
   14002bb0b:	push   QWORD PTR [rip+0x49fffcbe]        # 0x18a02b7cf
   14002bb11:	enter  0xfffa,0xc0
   14002bb15:	ror    DWORD PTR [rax+0x69e0efff],cl
   14002bb1b:	push   rbp
   14002bb1d:	jmp    0x14002bb8d
   14002bb1f:	(bad)  
   14002bb20:	stc    
   14002bb21:	bnd js 0x14002bb23
   14002bb24:	cli    
   14002bb25:	idiv   BYTE PTR [rdi+rdi*8-0x4]
   14002bb29:	clc    
   14002bb2a:	cmp    bh,0xfd
   14002bb2d:	cli    
   14002bb2e:	xchg   bh,bh
   14002bb30:	(bad)  
   14002bb31:	cld    
   14002bb32:	mov    edi,edi
   14002bb34:	(bad)  
   14002bb35:	std    
   14002bb36:	mov    edi,?
   14002bb38:	(bad)  
   14002bb39:	std    
   14002bb3a:	mov    ?,edi
   14002bb3c:	(bad)  
   14002bb3d:	(bad)  
   14002bb3e:	xchg   ecx,eax
   14002bb3f:	(bad)  
   14002bb40:	(bad)  
   14002bb41:	(bad)  
   14002bb42:	xchg   ebx,eax
   14002bb43:	(bad)  
   14002bb44:	(bad)  
   14002bb45:	(bad)  
   14002bb46:	xchg   ebp,eax
   14002bb47:	(bad)  
   14002bb48:	(bad)  
   14002bb49:	call   QWORD PTR [rsi-0x70010001]
   14002bb4f:	jmp    FWORD PTR [rsi-0x5530dc8a]
   14002bb55:	jo     0x14002bb74
   14002bb57:	add    eax,0x0
	...
   14002bc60:	xchg   esp,eax
   14002bc61:	(bad)  
   14002bc62:	std    
   14002bc63:	add    edx,DWORD PTR [rdx-0x6fa80201]
   14002bc69:	(bad)  
   14002bc6a:	std    
   14002bc6b:	push   0x6cfdff8e
   14002bc70:	jp     0x14002bc65
   14002bc72:	std    
   14002bc73:	test   al,0x65
   14002bc75:	cmc    
   14002bc76:	push   rdx
   14002bc78:	push   rdx
   14002bc79:	in     eax,0xfd
   14002bc7b:	idiv   DWORD PTR [rip+0x33fef8d0]        # 0x17401b551
   14002bc81:	enter  0xfff9,0x2c
   14002bc85:	mov    esi,0xbb2cfffb
   14002bc8a:	cld    
   14002bc8b:	push   QWORD PTR [rax]
   14002bc8d:	mov    edx,0xc23afffd
   14002bc92:	cld    
   14002bc93:	jmp    QWORD PTR [rbx-0x36]
   14002bc96:	lock jmp rbx
   14002bc99:	fnsave [rax-0x1]
   14002bc9c:	bnd call 0x132fbbc12
   14002bca2:	js     0x14002bca3
   14002bca4:	sti    
   14002bca5:	idiv   DWORD PTR [rdi-0x1]
   14002bca8:	cld    
   14002bca9:	stc    
   14002bcaa:	cmp    edi,0xfffffffe
   14002bcad:	sti    
   14002bcae:	mov    bh,bh
   14002bcb0:	(bad)  
   14002bcb1:	cld    
   14002bcb2:	(bad)  
   14002bcb3:	(bad)  
   14002bcb4:	(bad)  
   14002bcb5:	dec    BYTE PTR [rdi-0x6c010101]
   14002bcbb:	(bad)  
   14002bcbc:	(bad)  
   14002bcbd:	(bad)  
   14002bcbe:	xchg   esp,eax
   14002bcbf:	(bad)  
   14002bcc0:	(bad)  
   14002bcc1:	(bad)  
   14002bcc2:	xchg   ebp,eax
   14002bcc3:	(bad)  
   14002bcc4:	(bad)  
   14002bcc5:	call   QWORD PTR [rdi-0x67000001]
   14002bccb:	(bad)  
   14002bccc:	(bad)  
   14002bccd:	call   FWORD PTR [rax+0x63bfdeff]
   14002bcd3:	call   0x10f263386
   14002bcd8:	stos   BYTE PTR es:[rdi],al
   14002bcd9:	jo     0x14002bcf8
   14002bcdb:	(bad)  
   14002bcdc:	stos   BYTE PTR es:[rdi],al
   14002bcdd:	outs   dx,DWORD PTR ds:[rsi]
   14002bcde:	sbb    eax,0x1d6faace
   14002bce3:	(bad)  
   14002bce4:	test   eax,0xa9ce1d6f
   14002bce9:	outs   dx,DWORD PTR ds:[rsi]
   14002bcea:	sbb    eax,0x1d6fa9ce
   14002bcef:	iret   
   14002bcf0:	test   al,0x6e
   14002bcf2:	sbb    eax,0x1d6ea8cf
   14002bcf7:	iret   
   14002bcf8:	test   al,0x6e
   14002bcfa:	sbb    eax,0x1d6ea7cf
   14002bcff:	iret   
   14002bd00:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002bd01:	ins    DWORD PTR es:[rdi],dx
   14002bd02:	sbb    eax,0x1d6da7cf
   14002bd07:	iret   
   14002bd08:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002bd09:	ins    DWORD PTR es:[rdi],dx
   14002bd0a:	sbb    eax,0x1c6da6cf
   14002bd0f:	iret   
   14002bd10:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002bd11:	ins    BYTE PTR es:[rdi],dx
   14002bd12:	sbb    al,0xcf
   14002bd14:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002bd15:	ins    BYTE PTR es:[rdi],dx
   14002bd16:	sbb    al,0xcf
   14002bd18:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002bd19:	ins    BYTE PTR es:[rdi],dx
   14002bd1a:	sbb    al,0xd0
   14002bd1c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002bd1d:	ins    BYTE PTR es:[rdi],dx
   14002bd1e:	sbb    al,0xd0
   14002bd20:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002bd21:	ins    BYTE PTR es:[rdi],dx
   14002bd22:	sbb    al,0xd0
   14002bd24:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002bd25:	imul   ebx,DWORD PTR [rax+rdx*8],0xffffffa4
   14002bd29:	imul   ebx,DWORD PTR [rax+rdx*8],0xffffffa3
   14002bd2d:	imul   ebx,DWORD PTR [rcx+rdx*8],0xffffffa3
   14002bd31:	imul   ebx,DWORD PTR [rcx+rdx*8],0xffffffa3
   14002bd35:	push   0x1c
   14002bd37:	shl    DWORD PTR [rbx-0x5d2ee396],1
   14002bd3d:	push   0x1b
   14002bd3f:	shl    DWORD PTR [rdx-0x5d2de496],1
   14002bd45:	imul   ebx,DWORD PTR [rbx],0x1b69a1d2
   14002bd4b:	shl    BYTE PTR [rcx-0x5e2de497],cl
   14002bd51:	imul   ebx,DWORD PTR [rbx],0x1b68a0d2
   14002bd57:	shl    DWORD PTR [rax-0x5f2ce498],cl
   14002bd5d:	push   0x689fd31b
   14002bd62:	sbb    edx,ebx
   14002bd64:	lahf   
   14002bd65:	addr32 sbb edx,ebx
   14002bd68:	lahf   
   14002bd69:	addr32 sbb edx,esp
   14002bd6c:	sahf   
   14002bd6d:	addr32 sbb dl,ah
   14002bd70:	sahf   
   14002bd71:	addr32 sbb dl,ah
   14002bd74:	sahf   
   14002bd75:	data16 sbb dl,ah
   14002bd78:	popf   
   14002bd79:	data16 sbb dl,ah
   14002bd7c:	popf   
   14002bd7d:	data16 sbb dl,ah
   14002bd80:	popf   
   14002bd81:	data16 sbb dl,ch
   14002bd84:	pushf  
   14002bd85:	gs sbb dl,ch
   14002bd88:	fwait
   14002bd89:	gs sbb dl,ch
   14002bd8c:	(bad)  
   14002bd8d:	fs sbb ebp,edx
   14002bd90:	cdq    
   14002bd91:	movsxd ebx,DWORD PTR [rcx]
   14002bd93:	(bad)  
   14002bd94:	cdq    
   14002bd95:	movsxd ebx,DWORD PTR [rcx]
   14002bd97:	(bad)  
   14002bd98:	cwde   
   14002bd99:	(bad)  
   14002bd9a:	sbb    esi,edx
   14002bd9c:	xchg   edi,eax
   14002bd9d:	(bad)  
   14002bd9e:	sbb    esi,edx
   14002bda0:	xchg   esi,eax
   14002bda1:	(bad)  
   14002bda2:	sbb    dh,dl
   14002bda4:	xchg   esi,eax
   14002bda5:	(bad)  
   14002bda6:	sbb    dh,dl
   14002bda8:	xchg   ebp,eax
   14002bda9:	(bad)  
   14002bdaa:	sbb    al,al
   14002bdac:	xchg   esp,eax
   14002bdad:	(bad)  
   14002bdae:	sbb    BYTE PTR [rsi+0x0],al
	...
   14002bde4:	nop
   14002bde5:	(bad)  
   14002bde6:	std    
   14002bde7:	(bad)  
   14002bde8:	(bad)  
   14002bde9:	(bad)  
   14002bdea:	std    
   14002bdeb:	imul   ecx,DWORD PTR [rbp-0x75930201],0x6c71fdff
   14002bdf5:	idiv   dh
   14002bdf7:	loop   0x14002be58
   14002bdf9:	(bad)  
   14002bdfa:	cld    
   14002bdfb:	test   DWORD PTR [rax-0x28],0xce37fef8
   14002be02:	cli    
   14002be03:	jmp    FWORD PTR [rsi]
   14002be05:	(bad)  
   14002be06:	cld    
   14002be07:	jmp    FWORD PTR [rsi]
   14002be09:	mov    edi,0xbd2dfffc
   14002be0e:	std    
   14002be0f:	push   QWORD PTR [rbx]
   14002be11:	mov    esi,0xc841fffc
   14002be16:	std    
   14002be17:	call   QWORD PTR [rax-0x14003e30]
   14002be1d:	out    0x74,al
   14002be1f:	push   rsi
   14002be21:	out    dx,eax
   14002be22:	jp     0x14002be23
   14002be24:	sti    
   14002be25:	test   DWORD PTR [rcx-0x79050201],0x8cfbfeff
   14002be2f:	(bad)  
   14002be30:	(bad)  
   14002be31:	std    
   14002be32:	(bad)  
   14002be33:	(bad)  
   14002be34:	(bad)  
   14002be35:	(bad)  
   14002be36:	xchg   ebx,eax
   14002be37:	(bad)  
   14002be38:	(bad)  
   14002be39:	(bad)  
   14002be3a:	xchg   esi,eax
   14002be3b:	(bad)  
   14002be3c:	(bad)  
   14002be3d:	(bad)  
   14002be3e:	cwde   
   14002be3f:	(bad)  
   14002be40:	(bad)  
   14002be41:	(bad)  
   14002be42:	xchg   edi,eax
   14002be43:	(bad)  
   14002be44:	(bad)  
   14002be45:	call   FWORD PTR [rdx-0x66000001]
   14002be4b:	(bad)  
   14002be4c:	(bad)  
   14002be4d:	call   FWORD PTR [rbx-0x65010001]
   14002be53:	(bad)  
   14002be54:	(bad)  
   14002be55:	(bad)  
   14002be56:	cdq    
   14002be57:	(bad)  
   14002be58:	(bad)  
   14002be59:	std    
   14002be5a:	cdq    
   14002be5b:	(bad)  
   14002be5c:	(bad)  
   14002be5d:	std    
   14002be5e:	(bad)  
   14002be5f:	(bad)  
   14002be60:	(bad)  
   14002be61:	std    
   14002be62:	(bad)  
   14002be63:	(bad)  
   14002be64:	(bad)  
   14002be65:	std    
   14002be66:	(bad)  
   14002be67:	(bad)  
   14002be68:	(bad)  
   14002be69:	cld    
   14002be6a:	fwait
   14002be6b:	(bad)  
   14002be6c:	(bad)  
   14002be6d:	cld    
   14002be6e:	fwait
   14002be6f:	(bad)  
   14002be70:	(bad)  
   14002be71:	cli    
   14002be72:	fwait
   14002be73:	(bad)  
   14002be74:	(bad)  
   14002be75:	cli    
   14002be76:	pushf  
   14002be77:	(bad)  
   14002be78:	(bad)  
   14002be79:	stc    
   14002be7a:	popf   
   14002be7b:	(bad)  
   14002be7c:	(bad)  
   14002be7d:	clc    
   14002be7e:	pushf  
   14002be7f:	(bad)  
   14002be80:	(bad)  
   14002be81:	clc    
   14002be82:	popf   
   14002be83:	(bad)  
   14002be84:	(bad)  
   14002be85:	neg    DWORD PTR [rbp-0x63080101]
   14002be8b:	(bad)  
   14002be8c:	(bad)  
   14002be8d:	neg    DWORD PTR [rbp-0x62090101]
   14002be93:	(bad)  
   14002be94:	(bad)  
   14002be95:	neg    BYTE PTR [rbp-0x62090101]
   14002be9b:	(bad)  
   14002be9c:	(bad)  
   14002be9d:	neg    BYTE PTR [rbp-0x62090101]
   14002bea3:	(bad)  
   14002bea4:	(bad)  
   14002bea5:	neg    BYTE PTR [rbp-0x62090101]
   14002beab:	(bad)  
   14002beac:	(bad)  
   14002bead:	neg    BYTE PTR [rbp-0x62090101]
   14002beb3:	(bad)  
   14002beb4:	(bad)  
   14002beb5:	neg    BYTE PTR [rbp-0x62090101]
   14002bebb:	(bad)  
   14002bebc:	(bad)  
   14002bebd:	neg    BYTE PTR [rbp-0x62090101]
   14002bec3:	(bad)  
   14002bec4:	(bad)  
   14002bec5:	neg    BYTE PTR [rdi+rdi*8-0x640902]
   14002becc:	(bad)  
   14002becd:	neg    BYTE PTR [rdx-0x670a0101]
   14002bed3:	(bad)  
   14002bed4:	(bad)  
   14002bed5:	hlt    
   14002bed6:	xchg   edi,eax
   14002bed7:	(bad)  
   14002bed8:	(bad)  
   14002bed9:	cmc    
   14002beda:	xchg   ebp,eax
   14002bedb:	(bad)  
   14002bedc:	(bad)  
   14002bedd:	repz xchg ebx,eax
   14002bedf:	(bad)  
   14002bee0:	(bad)  
   14002bee1:	repnz xchg ecx,eax
   14002bee3:	(bad)  
   14002bee4:	(bad)  
   14002bee5:	icebp  
   14002bee6:	mov    edi,?
   14002bee8:	std    
   14002bee9:	icebp  
   14002beea:	mov    bh,bh
   14002beec:	std    
   14002beed:	in     eax,dx
   14002beee:	xchg   edi,edi
   14002bef0:	std    
   14002bef1:	jmp    0x14002be76
   14002bef3:	(bad)  
   14002bef4:	std    
   14002bef5:	jmp    0x125ffbe78
   14002befa:	jns    0x14002befb
   14002befc:	cli    
   14002befd:	loope  0x14002bf73
   14002beff:	(bad)  
   14002bf00:	stc    
   14002bf01:	fsubr  QWORD PTR [rdi-0x1]
   14002bf04:	not    ch
   14002bf06:	push   0x64d0f2ff
   14002bf0b:	push   rdx
   14002bf0d:	retf   
   14002bf0e:	pop    rbp
   14002bf0f:	(bad)  
   14002bf10:	in     eax,dx
   14002bf11:	ret    
   14002bf12:	pop    rax
   14002bf13:	(bad)  
   14002bf14:	jmp    0x1280212d5
   14002bf19:	mov    ch,0x4b
   14002bf1b:	jmp    rdx
   14002bf1d:	lods   al,BYTE PTR ds:[rsi]
   14002bf1e:	rex.RX (bad) 
   14002bf20:	fild   QWORD PTR [rax-0x5f2500be]
   14002bf26:	cmp    eax,0x308bc9ff
   14002bf2b:	not    DWORD PTR [rbp+0xa91860]
	...
   14002bf65:	add    BYTE PTR [rax],al
   14002bf67:	add    BYTE PTR [rbp-0x74b70201],cl
   14002bf6d:	(bad)  
   14002bf6e:	std    
   14002bf6f:	outs   dx,BYTE PTR ds:[rsi]
   14002bf70:	mov    bh,bh
   14002bf72:	std    
   14002bf73:	jno    0x14002bfef
   14002bf75:	hlt    
   14002bf76:	(bad)  
   14002bf77:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002bf78:	out    dx,ax
   14002bf7a:	cld    
   14002bf7b:	clc    
   14002bf7c:	push   rdi
   14002bf7d:	(bad)  
   14002bf7f:	inc    BYTE PTR [rbx-0x29]
   14002bf82:	cli    
   14002bf83:	push   QWORD PTR [rip+0x2efffbce]        # 0x16f02bb57
   14002bf89:	ret    
   14002bf8a:	std    
   14002bf8b:	jmp    FWORD PTR [rsi+rdi*4]
   14002bf8e:	std    
   14002bf8f:	jmp    FWORD PTR [rsi]
   14002bf91:	mov    ebx,0xc036fffe
   14002bf96:	(bad)  
   14002bf97:	dec    DWORD PTR [rax-0x36]
   14002bf9a:	cld    
   14002bf9b:	(bad)  
   14002bf9c:	mov    ebx,0xf1ff9eda
   14002bfa1:	jmp    0x14002c01e
   14002bfa3:	(bad)  
   14002bfa4:	stc    
   14002bfa5:	cmc    
   14002bfa6:	(bad)  
   14002bfa7:	(bad)  
   14002bfa8:	std    
   14002bfa9:	cli    
   14002bfaa:	mov    edi,edi
   14002bfac:	(bad)  
   14002bfad:	cld    
   14002bfae:	(bad)  
   14002bfaf:	(bad)  
   14002bfb0:	(bad)  
   14002bfb1:	std    
   14002bfb2:	xchg   esp,eax
   14002bfb3:	(bad)  
   14002bfb4:	(bad)  
   14002bfb5:	(bad)  
   14002bfb6:	xchg   ebp,eax
   14002bfb7:	(bad)  
   14002bfb8:	(bad)  
   14002bfb9:	(bad)  
   14002bfba:	cdq    
   14002bfbb:	(bad)  
   14002bfbc:	(bad)  
   14002bfbd:	(bad)  
   14002bfbe:	(bad)  
   14002bfbf:	(bad)  
   14002bfc0:	(bad)  
   14002bfc1:	call   FWORD PTR [rdi+rdi*8-0x640001]
   14002bfc8:	(bad)  
   14002bfc9:	call   FWORD PTR [rdi+rdi*8-0x610001]
   14002bfd0:	(bad)  
   14002bfd1:	std    
   14002bfd2:	sahf   
   14002bfd3:	(bad)  
   14002bfd4:	(bad)  
   14002bfd5:	std    
   14002bfd6:	popf   
   14002bfd7:	(bad)  
   14002bfd8:	(bad)  
   14002bfd9:	std    
   14002bfda:	lahf   
   14002bfdb:	(bad)  
   14002bfdc:	(bad)  
   14002bfdd:	(bad)  
   14002bfde:	lahf   
   14002bfdf:	(bad)  
   14002bfe0:	(bad)  
   14002bfe1:	std    
   14002bfe2:	movabs eax,ds:0xa1fcffffa0fdffff
   14002bfeb:	(bad)  
   14002bfec:	(bad)  
   14002bfed:	cld    
   14002bfee:	movabs ds:0xa3fbffffa2fcffff,al
   14002bff7:	(bad)  
   14002bff8:	(bad)  
   14002bff9:	sti    
   14002bffa:	movabs ds:0xa3faffffa3faffff,eax
   14002c003:	(bad)  
   14002c004:	(bad)  
   14002c005:	cli    
   14002c006:	movabs ds:0xa2faffffa2faffff,eax
   14002c00f:	(bad)  
   14002c010:	(bad)  
   14002c011:	cli    
   14002c012:	movabs ds:0xa2faffffa2faffff,al
   14002c01b:	(bad)  
   14002c01c:	(bad)  
   14002c01d:	stc    
   14002c01e:	movabs ds:0xa2f9ffffa2f9ffff,al
   14002c027:	(bad)  
   14002c028:	(bad)  
   14002c029:	stc    
   14002c02a:	movabs ds:0xa2f9ffffa2f9ffff,al
   14002c033:	(bad)  
   14002c034:	(bad)  
   14002c035:	stc    
   14002c036:	movabs ds:0xa2faffffa2f9ffff,al
   14002c03f:	(bad)  
   14002c040:	(bad)  
   14002c041:	cli    
   14002c042:	movabs eax,ds:0xa1faffffa1faffff
   14002c04b:	(bad)  
   14002c04c:	(bad)  
   14002c04d:	clc    
   14002c04e:	movabs eax,ds:0x9df9ffff9ef7ffff
   14002c057:	(bad)  
   14002c058:	push   rdi
   14002c05a:	pushf  
   14002c05b:	(bad)  
   14002c05c:	push   rsi
   14002c05e:	(bad)  
   14002c05f:	(bad)  
   14002c060:	(bad)  
   14002c061:	cmc    
   14002c062:	xchg   edi,eax
   14002c063:	(bad)  
   14002c064:	(bad)  
   14002c065:	hlt    
   14002c066:	xchg   ebp,eax
   14002c067:	(bad)  
   14002c068:	(bad)  
   14002c069:	cmc    
   14002c06a:	xchg   edx,eax
   14002c06b:	(bad)  
   14002c06c:	(bad)  
   14002c06d:	repz mov ?,edi
   14002c070:	(bad)  
   14002c071:	lock mov bh,bh
   14002c074:	(bad)  
   14002c075:	lock test edi,edi
   14002c078:	std    
   14002c079:	in     al,dx
   14002c07a:	cmp    bh,0xfd
   14002c07d:	jmp    0x124ffbffc
   14002c082:	jne    0x14002c083
   14002c084:	cli    
   14002c085:	fisubr WORD PTR [rsi-0x1]
   14002c088:	clc    
   14002c089:	fisubr DWORD PTR [rcx-0x1]
   14002c08c:	cmc    
   14002c08d:	shl    DWORD PTR [rdi+rdi*8-0xe],cl
   14002c091:	int3   
   14002c092:	pop    rbp
   14002c093:	(bad)  
   14002c094:	out    dx,eax
   14002c095:	ret    
   14002c096:	pop    rax
   14002c097:	(bad)  
   14002c098:	in     al,dx
   14002c099:	mov    esp,0xb5e5ff51
   14002c09e:	rex.WR jmp rbx
   14002c0a1:	lods   eax,DWORD PTR ds:[rsi]
   14002c0a2:	rex.RX (bad) 
   14002c0a4:	fisub  WORD PTR [rdi-0x6a2f00c0]
   14002c0aa:	ss sti 
   14002c0ac:	xchg   esi,eax
   14002c0ad:	(bad)  
   14002c0ae:	sbb    BYTE PTR [rdx+0x0],bh
	...
   14002c0e8:	mov    edi,?
   14002c0ea:	std    
   14002c0eb:	or     DWORD PTR [rdx-0x779b0201],ecx
   14002c0f1:	(bad)  
   14002c0f2:	std    
   14002c0f3:	je     0x14002c07b
   14002c0f5:	(bad)  
   14002c0f6:	std    
   14002c0f7:	ja     0x14002c165
   14002c0f9:	out    dx,eax
   14002c0fa:	sti    
   14002c0fb:	out    0x65,al
   14002c0fd:	out    0xf8,al
   14002c0ff:	dec    BYTE PTR [rdi-0x22]
   14002c102:	cli    
   14002c103:	(bad)  
   14002c104:	cmp    edx,ebp
   14002c106:	cld    
   14002c107:	push   QWORD PTR [rdx]
   14002c109:	int    0xfd
   14002c10b:	jmp    FWORD PTR [rsp+rax*8]
   14002c10e:	(bad)  
   14002c10f:	jmp    FWORD PTR [rip+0x31fffebe]        # 0x17202bfd3
   14002c115:	mov    edi,0xc33bfffd
   14002c11a:	std    
   14002c11b:	call   FWORD PTR [rcx-0x35]
   14002c11e:	clc    
   14002c11f:	(bad)  
   14002c120:	fninit 
   14002c122:	mov    bh,bh
   14002c124:	hlt    
   14002c125:	repnz cmp edi,0xff89f8fa
   14002c12c:	std    
   14002c12d:	cld    
   14002c12e:	xchg   edx,eax
   14002c12f:	(bad)  
   14002c130:	(bad)  
   14002c131:	std    
   14002c132:	xchg   edi,eax
   14002c133:	(bad)  
   14002c134:	(bad)  
   14002c135:	(bad)  
   14002c136:	(bad)  
   14002c137:	(bad)  
   14002c138:	(bad)  
   14002c139:	(bad)  
   14002c13a:	pushf  
   14002c13b:	(bad)  
   14002c13c:	(bad)  
   14002c13d:	(bad)  
   14002c13e:	popf   
   14002c13f:	(bad)  
   14002c140:	(bad)  
   14002c141:	call   FWORD PTR [rbp-0x60000001]
   14002c147:	(bad)  
   14002c148:	(bad)  
   14002c149:	jmp    QWORD PTR [rax-0x60020001]
   14002c14f:	(bad)  
   14002c150:	(bad)  
   14002c151:	std    
   14002c152:	lahf   
   14002c153:	(bad)  
   14002c154:	(bad)  
   14002c155:	std    
   14002c156:	lahf   
   14002c157:	(bad)  
   14002c158:	(bad)  
   14002c159:	(bad)  
   14002c15a:	movabs al,ds:0xa1fdffffa1feffff
   14002c163:	(bad)  
   14002c164:	(bad)  
   14002c165:	std    
   14002c166:	movabs eax,ds:0xa3fcffffa2fcffff
   14002c16f:	(bad)  
   14002c170:	(bad)  
   14002c171:	cld    
   14002c172:	movabs ds:0xa3fbffffa3fbffff,al
   14002c17b:	(bad)  
   14002c17c:	(bad)  
   14002c17d:	sti    
   14002c17e:	movabs ds:0xa4faffffa3faffff,eax
   14002c187:	(bad)  
   14002c188:	(bad)  
   14002c189:	cli    
   14002c18a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002c18b:	(bad)  
   14002c18c:	(bad)  
   14002c18d:	cli    
   14002c18e:	movabs ds:0xa2faffffa2faffff,al
   14002c197:	(bad)  
   14002c198:	(bad)  
   14002c199:	cli    
   14002c19a:	movabs ds:0xa3faffffa3faffff,al
   14002c1a3:	(bad)  
   14002c1a4:	(bad)  
   14002c1a5:	cli    
   14002c1a6:	movabs ds:0xa3faffffa3faffff,eax
   14002c1af:	(bad)  
   14002c1b0:	(bad)  
   14002c1b1:	cli    
   14002c1b2:	movabs ds:0xa3faffffa3faffff,eax
   14002c1bb:	(bad)  
   14002c1bc:	(bad)  
   14002c1bd:	cli    
   14002c1be:	movabs ds:0xa2faffffa2faffff,al
   14002c1c7:	(bad)  
   14002c1c8:	(bad)  
   14002c1c9:	cli    
   14002c1ca:	movabs ds:0xa0f8ffffa2f9ffff,al
   14002c1d3:	(bad)  
   14002c1d4:	(bad)  
   14002c1d5:	stc    
   14002c1d6:	lahf   
   14002c1d7:	(bad)  
   14002c1d8:	push   rdi
   14002c1da:	fwait
   14002c1db:	(bad)  
   14002c1dc:	push   rsi
   14002c1de:	(bad)  
   14002c1df:	(bad)  
   14002c1e0:	(bad)  
   14002c1e1:	neg    BYTE PTR [rax-0x6a0a0101]
   14002c1e7:	(bad)  
   14002c1e8:	(bad)  
   14002c1e9:	cmc    
   14002c1ea:	xchg   ecx,eax
   14002c1eb:	(bad)  
   14002c1ec:	(bad)  
   14002c1ed:	repz mov ?,edi
   14002c1f0:	(bad)  
   14002c1f1:	icebp  
   14002c1f2:	mov    edi,edi
   14002c1f4:	(bad)  
   14002c1f5:	lock xchg edi,edi
   14002c1f8:	(bad)  
   14002c1f9:	out    dx,al
   14002c1fa:	cmp    edi,0xff7ceafe
   14002c200:	std    
   14002c201:	in     eax,0x76
   14002c203:	(bad)  
   14002c204:	sti    
   14002c205:	loope  0x14002c277
   14002c207:	(bad)  
   14002c208:	clc    
   14002c209:	fld    TBYTE PTR [rax-0x1]
   14002c20c:	cmc    
   14002c20d:	shl    BYTE PTR [rdx-0x1],cl
   14002c210:	hlt    
   14002c211:	(bad)  
   14002c212:	pop    rbp
   14002c213:	push   rax
   14002c215:	(bad)  
   14002c216:	push   rdi
   14002c217:	(bad)  
   14002c218:	in     al,dx
   14002c219:	mov    ebp,0xb6e7ff52
   14002c21e:	rex.WX jmp rbx
   14002c221:	scas   eax,DWORD PTR es:[rdi]
   14002c222:	rex.RX (bad) 
   14002c224:	fild   QWORD PTR [rcx-0x672900be]
   14002c22a:	cmp    ah,bh
   14002c22c:	xchg   edi,eax
   14002c22d:	(bad)  
   14002c22e:	sbb    edi,eax
	...
   14002c26c:	mov    bh,bh
   14002c26e:	std    
   14002c26f:	and    DWORD PTR [rdi-0x7b8b0201],eax
   14002c275:	(bad)  
   14002c276:	std    
   14002c277:	jns    0x14002c2f4
   14002c279:	jmp    0x14002c270
   14002c27b:	mov    dl,0x6c
   14002c27d:	(bad)  
   14002c27e:	clc    
   14002c27f:	(bad)  
   14002c280:	(bad)  
   14002c281:	out    0xfa,eax
   14002c283:	dec    DWORD PTR [rcx-0x23]
   14002c286:	cld    
   14002c287:	(bad)  
   14002c288:	cmp    ah,dl
   14002c28a:	std    
   14002c28b:	push   QWORD PTR [rax]
   14002c28d:	retf   
   14002c28e:	(bad)  
   14002c28f:	jmp    FWORD PTR [rdx+rax*8]
   14002c292:	(bad)  
   14002c293:	jmp    FWORD PTR [rsi]
   14002c295:	mov    edi,0xbd32fffe
   14002c29a:	(bad)  
   14002c29b:	(bad)  
   14002c29c:	(bad)  
   14002c29d:	(bad)  
   14002c2a0:	jo     0x14002c26f
   14002c2a2:	out    0xff,eax
   14002c2a4:	(bad)  
   14002c2a5:	out    dx,al
   14002c2a6:	test   edi,edi
   14002c2a8:	div    ebp
   14002c2aa:	mov    bh,bh
   14002c2ac:	cld    
   14002c2ad:	cli    
   14002c2ae:	xchg   edx,eax
   14002c2af:	(bad)  
   14002c2b0:	(bad)  
   14002c2b1:	std    
   14002c2b2:	cwde   
   14002c2b3:	(bad)  
   14002c2b4:	(bad)  
   14002c2b5:	(bad)  
   14002c2b6:	sahf   
   14002c2b7:	(bad)  
   14002c2b8:	(bad)  
   14002c2b9:	(bad)  
   14002c2ba:	lahf   
   14002c2bb:	(bad)  
   14002c2bc:	(bad)  
   14002c2bd:	(bad)  
   14002c2be:	movabs eax,ds:0xa2ffffffa1ffffff
   14002c2c7:	(bad)  
   14002c2c8:	(bad)  
   14002c2c9:	jmp    QWORD PTR [rdx-0x5d020001]
   14002c2cf:	(bad)  
   14002c2d0:	(bad)  
   14002c2d1:	std    
   14002c2d2:	movabs eax,ds:0xa1feffffa2feffff
   14002c2db:	(bad)  
   14002c2dc:	(bad)  
   14002c2dd:	(bad)  
   14002c2de:	movabs eax,ds:0xa2fcffffa3fcffff
   14002c2e7:	(bad)  
   14002c2e8:	(bad)  
   14002c2e9:	cld    
   14002c2ea:	movabs ds:0xa3fcffffa3fcffff,al
   14002c2f3:	(bad)  
   14002c2f4:	(bad)  
   14002c2f5:	cld    
   14002c2f6:	movabs ds:0xa4fbffffa4fbffff,eax
   14002c2ff:	(bad)  
   14002c300:	(bad)  
   14002c301:	sti    
   14002c302:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002c303:	(bad)  
   14002c304:	(bad)  
   14002c305:	cli    
   14002c306:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002c307:	(bad)  
   14002c308:	(bad)  
   14002c309:	cli    
   14002c30a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002c30b:	(bad)  
   14002c30c:	(bad)  
   14002c30d:	cli    
   14002c30e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002c30f:	(bad)  
   14002c310:	(bad)  
   14002c311:	cli    
   14002c312:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002c313:	(bad)  
   14002c314:	(bad)  
   14002c315:	cli    
   14002c316:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002c317:	(bad)  
   14002c318:	(bad)  
   14002c319:	cli    
   14002c31a:	movabs ds:0xa3faffffa3faffff,eax
   14002c323:	(bad)  
   14002c324:	(bad)  
   14002c325:	cli    
   14002c326:	movabs ds:0xa3faffffa3faffff,eax
   14002c32f:	(bad)  
   14002c330:	(bad)  
   14002c331:	cli    
   14002c332:	movabs ds:0xa3faffffa3faffff,eax
   14002c33b:	(bad)  
   14002c33c:	(bad)  
   14002c33d:	cli    
   14002c33e:	movabs ds:0xa2faffffa2faffff,al
   14002c347:	(bad)  
   14002c348:	(bad)  
   14002c349:	cli    
   14002c34a:	movabs ds:0xa0f9ffffa1faffff,al
   14002c353:	(bad)  
   14002c354:	(bad)  
   14002c355:	stc    
   14002c356:	lahf   
   14002c357:	(bad)  
   14002c358:	push   rdi
   14002c35a:	popf   
   14002c35b:	(bad)  
   14002c35c:	(bad)  
   14002c35d:	clc    
   14002c35e:	fwait
   14002c35f:	(bad)  
   14002c360:	(bad)  
   14002c361:	neg    DWORD PTR [rax-0x6a090001]
   14002c367:	(bad)  
   14002c368:	(bad)  
   14002c369:	not    BYTE PTR [rbx-0x710c0101]
   14002c36f:	(bad)  
   14002c370:	(bad)  
   14002c371:	repnz mov edi,?
   14002c374:	(bad)  
   14002c375:	repnz xchg bh,bh
   14002c378:	(bad)  
   14002c379:	out    dx,eax
   14002c37a:	cmp    edi,0xff7bebfe
   14002c380:	cld    
   14002c381:	out    0x75,eax
   14002c383:	(bad)  
   14002c384:	cld    
   14002c385:	loope  0x14002c3f6
   14002c387:	(bad)  
   14002c388:	stc    
   14002c389:	fisub  DWORD PTR [rdi-0x1]
   14002c38c:	not    bl
   14002c38e:	movsxd edi,edi
   14002c390:	repnz int 0x5e
   14002c393:	push   rcx
   14002c395:	(bad)  
   14002c396:	push   rdi
   14002c397:	(bad)  
   14002c398:	in     eax,dx
   14002c399:	mov    ebp,0xb8e8ff50
   14002c39e:	rex.WXB jmp r13
   14002c3a1:	mov    al,0x46
   14002c3a3:	(bad)  
   14002c3a4:	fild   QWORD PTR [rcx-0x642800be]
   14002c3aa:	cmp    bh,bh
   14002c3ac:	cwde   
   14002c3ad:	(bad)  
   14002c3ae:	sbb    ebx,edx
	...
   14002c3f0:	test   edi,edi
   14002c3f2:	std    
   14002c3f3:	cmp    rsi,0xfffffffffffffffd
   14002c3f7:	js     0x14002c37e
   14002c3f9:	repnz icebp 
   14002c3fb:	xchg   edx,eax
   14002c3fc:	je     0x14002c3df
   14002c3fe:	repz stc 
   14002c400:	outs   dx,DWORD PTR ds:[rsi]
   14002c401:	in     al,dx
   14002c402:	cli    
   14002c403:	call   FWORD PTR [rbx-0x1a]
   14002c406:	cld    
   14002c407:	inc    DWORD PTR [rbp+rbx*8-0x3]
   14002c40b:	push   QWORD PTR [rsi]
   14002c40d:	sar    esi,cl
   14002c40f:	push   QWORD PTR [rax]
   14002c411:	retf   0xffff
   14002c414:	sub    eax,0x2dfffec1
   14002c419:	mov    ebp,0xbf35fffe
   14002c41e:	(bad)  
   14002c41f:	inc    DWORD PTR [rbx+rcx*8-0x3]
   14002c423:	call   QWORD PTR [rsi-0x10003529]
   14002c429:	lock mov edi,edi
   14002c42c:	clc    
   14002c42d:	not    BYTE PTR [rcx-0x66030201]
   14002c433:	(bad)  
   14002c434:	(bad)  
   14002c435:	jmp    QWORD PTR [rax-0x5d000001]
   14002c43b:	(bad)  
   14002c43c:	(bad)  
   14002c43d:	(bad)  
   14002c43e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002c43f:	(bad)  
   14002c440:	(bad)  
   14002c441:	jmp    QWORD PTR [rdi+rdi*8-0x5a0101]
   14002c448:	(bad)  
   14002c449:	(bad)  
   14002c44a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002c44b:	(bad)  
   14002c44c:	(bad)  
   14002c44d:	std    
   14002c44e:	movabs ds:0xa3feffffa3fdffff,eax
   14002c457:	(bad)  
   14002c458:	(bad)  
   14002c459:	(bad)  
   14002c45a:	movabs ds:0xa2fdffffa3fdffff,eax
   14002c463:	(bad)  
   14002c464:	(bad)  
   14002c465:	cld    
   14002c466:	movabs ds:0xa3fcffffa3fdffff,eax
   14002c46f:	(bad)  
   14002c470:	(bad)  
   14002c471:	cld    
   14002c472:	movabs ds:0xa4fbffffa4fcffff,eax
   14002c47b:	(bad)  
   14002c47c:	(bad)  
   14002c47d:	sti    
   14002c47e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002c47f:	(bad)  
   14002c480:	(bad)  
   14002c481:	sti    
   14002c482:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002c483:	(bad)  
   14002c484:	(bad)  
   14002c485:	cli    
   14002c486:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002c487:	(bad)  
   14002c488:	(bad)  
   14002c489:	cli    
   14002c48a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002c48b:	(bad)  
   14002c48c:	(bad)  
   14002c48d:	cli    
   14002c48e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002c48f:	(bad)  
   14002c490:	(bad)  
   14002c491:	cli    
   14002c492:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002c493:	(bad)  
   14002c494:	(bad)  
   14002c495:	cli    
   14002c496:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002c497:	(bad)  
   14002c498:	(bad)  
   14002c499:	cli    
   14002c49a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002c49b:	(bad)  
   14002c49c:	(bad)  
   14002c49d:	cli    
   14002c49e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002c49f:	(bad)  
   14002c4a0:	(bad)  
   14002c4a1:	cli    
   14002c4a2:	movabs ds:0xa3faffffa3faffff,eax
   14002c4ab:	(bad)  
   14002c4ac:	(bad)  
   14002c4ad:	cli    
   14002c4ae:	movabs ds:0xa3faffffa3faffff,eax
   14002c4b7:	(bad)  
   14002c4b8:	(bad)  
   14002c4b9:	cli    
   14002c4ba:	movabs ds:0xa2faffffa2faffff,al
   14002c4c3:	(bad)  
   14002c4c4:	(bad)  
   14002c4c5:	cli    
   14002c4c6:	movabs ds:0xa1faffffa2faffff,al
   14002c4cf:	(bad)  
   14002c4d0:	(bad)  
   14002c4d1:	stc    
   14002c4d2:	movabs al,ds:0x9ef6ffffa0f8ffff
   14002c4db:	(bad)  
   14002c4dc:	(bad)  
   14002c4dd:	clc    
   14002c4de:	fwait
   14002c4df:	(bad)  
   14002c4e0:	push   rdi
   14002c4e2:	cdq    
   14002c4e3:	(bad)  
   14002c4e4:	push   rsi
   14002c4e6:	xchg   ebp,eax
   14002c4e7:	(bad)  
   14002c4e8:	(bad)  
   14002c4e9:	not    DWORD PTR [rbx-0x6f0a0101]
   14002c4ef:	(bad)  
   14002c4f0:	(bad)  
   14002c4f1:	hlt    
   14002c4f2:	mov    edi,edi
   14002c4f4:	push   rcx
   14002c4f6:	xchg   edi,edi
   14002c4f8:	(bad)  
   14002c4f9:	lock (bad) 
   14002c4fb:	(bad)  
   14002c4fc:	(bad)  
   14002c4fd:	in     eax,dx
   14002c4fe:	jnp    0x14002c4ff
   14002c500:	std    
   14002c501:	call   0x12400c47b
   14002c506:	outs   dx,DWORD PTR ds:[rsi]
   14002c507:	(bad)  
   14002c508:	cli    
   14002c509:	fld    TBYTE PTR [rax-0x1]
   14002c50c:	not    ebp
   14002c50e:	(bad)  
   14002c50f:	push   rbx
   14002c511:	iret   
   14002c512:	pop    rbp
   14002c513:	push   rdx
   14002c515:	enter  0xff56,0xee
   14002c519:	mov    ebp,0xb8e9ff51
   14002c51e:	rex.WXB jmp r13
   14002c521:	mov    al,0x45
   14002c523:	jmp    rcx
   14002c525:	stos   BYTE PTR es:[rdi],al
   14002c526:	rex.B (bad) 
   14002c528:	fstp   DWORD PTR [rcx+rdi*1+0x1a6499ff]
   14002c52f:	(bad)  
   14002c530:	cwde   
   14002c531:	(bad)  
   14002c532:	sbb    DWORD PTR [rbx],eax
	...
   14002c570:	test   bh,bh
   14002c572:	std    
   14002c573:	add    eax,0x66fdfe81
   14002c578:	xor    esp,0xfffffff3
   14002c57b:	mov    cs,WORD PTR [rdx+rdx*8-0x108b143d]
   14002c582:	cli    
   14002c583:	jmp    FWORD PTR [rdi-0x10]
   14002c586:	cld    
   14002c587:	call   QWORD PTR [rsp+riz*8-0x3]
   14002c58b:	(bad)  
   14002c58c:	cmp    eax,0x34fffeda
   14002c591:	sar    edi,1
   14002c593:	jmp    FWORD PTR [rdi]
   14002c595:	enter  0xffff,0x2d
   14002c599:	mov    edi,0xbd2ffffe
   14002c59e:	(bad)  
   14002c59f:	(bad)  
   14002c5a0:	cmp    cl,al
   14002c5a2:	(bad)  
   14002c5a3:	dec    DWORD PTR [rcx-0x36]
   14002c5a6:	std    
   14002c5a7:	(bad)  
   14002c5a8:	mov    ebx,0xf1ffaedf
   14002c5ad:	repnz xchg ecx,eax
   14002c5af:	(bad)  
   14002c5b0:	stc    
   14002c5b1:	clc    
   14002c5b2:	cwde   
   14002c5b3:	(bad)  
   14002c5b4:	(bad)  
   14002c5b5:	std    
   14002c5b6:	movabs eax,ds:0xa8feffffa4feffff
   14002c5bf:	(bad)  
   14002c5c0:	(bad)  
   14002c5c1:	(bad)  
   14002c5c2:	test   al,0xff
   14002c5c4:	(bad)  
   14002c5c5:	(bad)  
   14002c5c6:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002c5c7:	(bad)  
   14002c5c8:	(bad)  
   14002c5c9:	(bad)  
   14002c5ca:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002c5cb:	(bad)  
   14002c5cc:	(bad)  
   14002c5cd:	(bad)  
   14002c5ce:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002c5cf:	(bad)  
   14002c5d0:	(bad)  
   14002c5d1:	(bad)  
   14002c5d2:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002c5d3:	(bad)  
   14002c5d4:	(bad)  
   14002c5d5:	(bad)  
   14002c5d6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002c5d7:	(bad)  
   14002c5d8:	(bad)  
   14002c5d9:	std    
   14002c5da:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002c5db:	(bad)  
   14002c5dc:	(bad)  
   14002c5dd:	std    
   14002c5de:	movabs ds:0xa4fdffffa4fcffff,al
   14002c5e7:	(bad)  
   14002c5e8:	(bad)  
   14002c5e9:	cld    
   14002c5ea:	movabs ds:0xa3fcffffa4fcffff,eax
   14002c5f3:	(bad)  
   14002c5f4:	(bad)  
   14002c5f5:	sti    
   14002c5f6:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002c5f7:	(bad)  
   14002c5f8:	(bad)  
   14002c5f9:	sti    
   14002c5fa:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002c5fb:	(bad)  
   14002c5fc:	(bad)  
   14002c5fd:	sti    
   14002c5fe:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002c5ff:	(bad)  
   14002c600:	(bad)  
   14002c601:	sti    
   14002c602:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002c603:	(bad)  
   14002c604:	(bad)  
   14002c605:	sti    
   14002c606:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002c607:	(bad)  
   14002c608:	(bad)  
   14002c609:	cli    
   14002c60a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002c60b:	(bad)  
   14002c60c:	(bad)  
   14002c60d:	cli    
   14002c60e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002c60f:	(bad)  
   14002c610:	(bad)  
   14002c611:	cli    
   14002c612:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002c613:	(bad)  
   14002c614:	(bad)  
   14002c615:	cli    
   14002c616:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002c617:	(bad)  
   14002c618:	(bad)  
   14002c619:	cli    
   14002c61a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002c61b:	(bad)  
   14002c61c:	(bad)  
   14002c61d:	cli    
   14002c61e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002c61f:	(bad)  
   14002c620:	(bad)  
   14002c621:	cli    
   14002c622:	movabs ds:0xa3faffffa3faffff,eax
   14002c62b:	(bad)  
   14002c62c:	(bad)  
   14002c62d:	cli    
   14002c62e:	movabs ds:0xa3faffffa3faffff,eax
   14002c637:	(bad)  
   14002c638:	(bad)  
   14002c639:	cli    
   14002c63a:	movabs ds:0xa2faffffa2faffff,al
   14002c643:	(bad)  
   14002c644:	(bad)  
   14002c645:	cli    
   14002c646:	movabs ds:0xa1faffffa2faffff,al
   14002c64f:	(bad)  
   14002c650:	(bad)  
   14002c651:	stc    
   14002c652:	movabs al,ds:0x9ef7ffff9ff8ffff
   14002c65b:	(bad)  
   14002c65c:	(bad)  
   14002c65d:	clc    
   14002c65e:	fwait
   14002c65f:	(bad)  
   14002c660:	(bad)  
   14002c661:	clc    
   14002c662:	cdq    
   14002c663:	(bad)  
   14002c664:	push   rdi
   14002c666:	xchg   ebp,eax
   14002c667:	(bad)  
   14002c668:	push   rsi
   14002c66a:	xchg   ebx,eax
   14002c66b:	(bad)  
   14002c66c:	push   rbp
   14002c66e:	(bad)  
   14002c66f:	(bad)  
   14002c670:	push   rsp
   14002c672:	mov    edi,edi
   14002c674:	push   rdx
   14002c676:	xchg   edi,edi
   14002c678:	push   rcx
   14002c67a:	cmp    bh,0xfe
   14002c67d:	in     eax,dx
   14002c67e:	jl     0x14002c67f
   14002c680:	std    
   14002c681:	out    0x74,eax
   14002c683:	(bad)  
   14002c684:	cld    
   14002c685:	loop   0x14002c6f6
   14002c687:	(bad)  
   14002c688:	stc    
   14002c689:	(bad)  [rax-0x1]
   14002c68c:	not    ebp
   14002c68e:	(bad)  
   14002c68f:	push   rsi
   14002c691:	iret   
   14002c692:	pop    rbp
   14002c693:	push   rdx
   14002c695:	leave  
   14002c696:	push   rsi
   14002c697:	(bad)  
   14002c698:	out    dx,eax
   14002c699:	mov    edi,0xb8eaff52
   14002c69e:	rex.WXB jmp r14
   14002c6a1:	mov    cl,0x46
   14002c6a3:	jmp    rdx
   14002c6a5:	stos   BYTE PTR es:[rdi],al
   14002c6a6:	rex (bad) 
   14002c6a8:	fistp  DWORD PTR [rcx+rdi*1+0x196399ff]
   14002c6af:	(bad)  
	...
   14002c6f4:	cmp    edi,0xf57f15fd
   14002c6fa:	hlt    
   14002c6fb:	mov    BYTE PTR [rbx-0x7d1d4c33],dl
   14002c701:	in     al,dx
   14002c702:	icebp  
   14002c703:	(bad)  
   14002c704:	js     0x14002c6f9
   14002c706:	cld    
   14002c707:	jmp    FWORD PTR [rsi-0xf]
   14002c70a:	std    
   14002c70b:	dec    DWORD PTR [rbp-0x1b]
   14002c70e:	(bad)  
   14002c70f:	(bad)  
   14002c710:	cmp    al,0xd9
   14002c712:	(bad)  
   14002c713:	push   QWORD PTR [rbx]
   14002c715:	(bad)  
   14002c716:	(bad)  
   14002c717:	jmp    FWORD PTR [rip+0x2dffffc7]        # 0x16e02c6e4
   14002c71d:	sar    bh,0xff
   14002c720:	xor    BYTE PTR [rdi-0x3cc40001],bh
   14002c726:	(bad)  
   14002c727:	call   FWORD PTR [rax-0x34]
   14002c72a:	clc    
   14002c72b:	call   rdi
   14002c72d:	call   0x134f7c6d0
   14002c732:	xchg   edi,eax
   14002c733:	(bad)  
   14002c734:	cli    
   14002c735:	cli    
   14002c736:	movabs al,ds:0xa9feffffa4fdfeff
   14002c73f:	(bad)  
   14002c740:	(bad)  
   14002c741:	(bad)  
   14002c742:	test   eax,0xaafeffff
   14002c747:	(bad)  
   14002c748:	(bad)  
   14002c749:	(bad)  
   14002c74a:	test   eax,0xaafeffff
   14002c74f:	(bad)  
   14002c750:	(bad)  
   14002c751:	(bad)  
   14002c752:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002c753:	(bad)  
   14002c754:	(bad)  
   14002c755:	std    
   14002c756:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002c757:	(bad)  
   14002c758:	(bad)  
   14002c759:	std    
   14002c75a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002c75b:	(bad)  
   14002c75c:	(bad)  
   14002c75d:	std    
   14002c75e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002c75f:	(bad)  
   14002c760:	(bad)  
   14002c761:	cld    
   14002c762:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002c763:	(bad)  
   14002c764:	(bad)  
   14002c765:	cld    
   14002c766:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002c767:	(bad)  
   14002c768:	(bad)  
   14002c769:	cld    
   14002c76a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002c76b:	(bad)  
   14002c76c:	(bad)  
   14002c76d:	cld    
   14002c76e:	movabs ds:0xa4fbffffa4fbffff,eax
   14002c777:	(bad)  
   14002c778:	(bad)  
   14002c779:	sti    
   14002c77a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002c77b:	(bad)  
   14002c77c:	(bad)  
   14002c77d:	sti    
   14002c77e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002c77f:	(bad)  
   14002c780:	(bad)  
   14002c781:	sti    
   14002c782:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002c783:	(bad)  
   14002c784:	(bad)  
   14002c785:	cli    
   14002c786:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002c787:	(bad)  
   14002c788:	(bad)  
   14002c789:	cli    
   14002c78a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002c78b:	(bad)  
   14002c78c:	(bad)  
   14002c78d:	cli    
   14002c78e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002c78f:	(bad)  
   14002c790:	(bad)  
   14002c791:	cli    
   14002c792:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002c793:	(bad)  
   14002c794:	(bad)  
   14002c795:	cli    
   14002c796:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002c797:	(bad)  
   14002c798:	(bad)  
   14002c799:	cli    
   14002c79a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002c79b:	(bad)  
   14002c79c:	(bad)  
   14002c79d:	cli    
   14002c79e:	movabs ds:0xa3faffffa3faffff,eax
   14002c7a7:	(bad)  
   14002c7a8:	(bad)  
   14002c7a9:	cli    
   14002c7aa:	movabs ds:0xa3faffffa3faffff,eax
   14002c7b3:	(bad)  
   14002c7b4:	(bad)  
   14002c7b5:	cli    
   14002c7b6:	movabs ds:0xa2faffffa2faffff,eax
   14002c7bf:	(bad)  
   14002c7c0:	(bad)  
   14002c7c1:	cli    
   14002c7c2:	movabs ds:0xa2faffffa2faffff,al
   14002c7cb:	(bad)  
   14002c7cc:	(bad)  
   14002c7cd:	cli    
   14002c7ce:	movabs eax,ds:0x9ff8ffffa0f9ffff
   14002c7d7:	(bad)  
   14002c7d8:	push   rdi
   14002c7da:	sahf   
   14002c7db:	(bad)  
   14002c7dc:	(bad)  
   14002c7dd:	clc    
   14002c7de:	fwait
   14002c7df:	(bad)  
   14002c7e0:	(bad)  
   14002c7e1:	clc    
   14002c7e2:	cdq    
   14002c7e3:	(bad)  
   14002c7e4:	push   rdi
   14002c7e6:	xchg   ebp,eax
   14002c7e7:	(bad)  
   14002c7e8:	push   rbp
   14002c7ea:	xchg   ebx,eax
   14002c7eb:	(bad)  
   14002c7ec:	push   rbp
   14002c7ee:	nop
   14002c7ef:	(bad)  
   14002c7f0:	push   rbp
   14002c7f2:	mov    bh,bh
   14002c7f4:	push   rdx
   14002c7f6:	xchg   bh,bh
   14002c7f8:	push   rcx
   14002c7fa:	cmp    edi,0xff7deeff
   14002c800:	(bad)  
   14002c801:	(bad)  
   14002c802:	je     0x14002c803
   14002c804:	std    
   14002c805:	jrcxz  0x14002c875
   14002c807:	(bad)  
   14002c808:	stc    
   14002c809:	fisubr WORD PTR [rax-0x1]
   14002c80c:	not    edi
   14002c80e:	(bad)  
   14002c80f:	push   rsi
   14002c811:	iret   
   14002c812:	pop    rbp
   14002c813:	push   rdx
   14002c815:	retf   0xff56
   14002c818:	out    dx,eax
   14002c819:	mov    edi,0xb8eaff50
   14002c81e:	rex.WXB jmp r15
   14002c821:	mov    cl,0x45
   14002c823:	jmp    rdx
   14002c825:	stos   DWORD PTR es:[rdi],eax
   14002c826:	rex.B (bad) 
   14002c828:	fstp   DWORD PTR [rbx+0x649afe38]
   14002c82e:	sbb    eax,edx
	...
   14002c878:	test   bh,ch
   14002c87a:	in     eax,dx
   14002c87b:	ds nop
   14002c87d:	shl    BYTE PTR [rsi-0x3e185628],1
   14002c883:	sti    
   14002c884:	jle    0x14002c87a
   14002c886:	sti    
   14002c887:	inc    DWORD PTR [rax+0x69fffdf7]
   14002c88d:	out    dx,eax
   14002c88e:	(bad)  
   14002c88f:	inc    DWORD PTR [rdi-0x1d]
   14002c892:	(bad)  
   14002c893:	push   QWORD PTR [rdi]
   14002c895:	fdivr  st,st(7)
   14002c897:	push   QWORD PTR [rcx]
   14002c899:	int    0xff
   14002c89b:	jmp    FWORD PTR [rip+0x2dffffc3]        # 0x16e02c864
   14002c8a1:	mov    edi,0xbf33ffff
   14002c8a6:	(bad)  
   14002c8a7:	(bad)  
   14002c8a8:	ds (bad) 
   14002c8aa:	(bad)  
   14002c8ab:	jmp    QWORD PTR [rcx-0x35]
   14002c8ae:	hlt    
   14002c8af:	jmp    rdi
   14002c8b1:	in     eax,dx
   14002c8b2:	pushf  
   14002c8b3:	push   rsi
   14002c8b5:	cmc    
   14002c8b6:	pushf  
   14002c8b7:	(bad)  
   14002c8b8:	cld    
   14002c8b9:	sti    
   14002c8ba:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002c8bb:	(bad)  
   14002c8bc:	(bad)  
   14002c8bd:	(bad)  
   14002c8be:	test   eax,0xabfeffff
   14002c8c3:	(bad)  
   14002c8c4:	(bad)  
   14002c8c5:	(bad)  
   14002c8c6:	lods   al,BYTE PTR ds:[rsi]
   14002c8c7:	(bad)  
   14002c8c8:	(bad)  
   14002c8c9:	(bad)  
   14002c8ca:	lods   al,BYTE PTR ds:[rsi]
   14002c8cb:	(bad)  
   14002c8cc:	(bad)  
   14002c8cd:	(bad)  
   14002c8ce:	lods   al,BYTE PTR ds:[rsi]
   14002c8cf:	(bad)  
   14002c8d0:	(bad)  
   14002c8d1:	(bad)  
   14002c8d2:	test   eax,0xa8feffff
   14002c8d7:	(bad)  
   14002c8d8:	(bad)  
   14002c8d9:	std    
   14002c8da:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002c8db:	(bad)  
   14002c8dc:	(bad)  
   14002c8dd:	cld    
   14002c8de:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002c8df:	(bad)  
   14002c8e0:	(bad)  
   14002c8e1:	cld    
   14002c8e2:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002c8e3:	(bad)  
   14002c8e4:	(bad)  
   14002c8e5:	cld    
   14002c8e6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002c8e7:	(bad)  
   14002c8e8:	(bad)  
   14002c8e9:	cld    
   14002c8ea:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002c8eb:	(bad)  
   14002c8ec:	(bad)  
   14002c8ed:	sti    
   14002c8ee:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002c8ef:	(bad)  
   14002c8f0:	(bad)  
   14002c8f1:	sti    
   14002c8f2:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002c8f3:	(bad)  
   14002c8f4:	(bad)  
   14002c8f5:	sti    
   14002c8f6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002c8f7:	(bad)  
   14002c8f8:	(bad)  
   14002c8f9:	sti    
   14002c8fa:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002c8fb:	(bad)  
   14002c8fc:	(bad)  
   14002c8fd:	cli    
   14002c8fe:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002c8ff:	(bad)  
   14002c900:	(bad)  
   14002c901:	cli    
   14002c902:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002c903:	(bad)  
   14002c904:	(bad)  
   14002c905:	cli    
   14002c906:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002c907:	(bad)  
   14002c908:	(bad)  
   14002c909:	cli    
   14002c90a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002c90b:	(bad)  
   14002c90c:	(bad)  
   14002c90d:	cli    
   14002c90e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002c90f:	(bad)  
   14002c910:	(bad)  
   14002c911:	cli    
   14002c912:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002c913:	(bad)  
   14002c914:	(bad)  
   14002c915:	cli    
   14002c916:	movabs ds:0xa3faffffa3faffff,eax
   14002c91f:	(bad)  
   14002c920:	(bad)  
   14002c921:	cli    
   14002c922:	movabs ds:0xa3faffffa3faffff,eax
   14002c92b:	(bad)  
   14002c92c:	(bad)  
   14002c92d:	cli    
   14002c92e:	movabs ds:0xa3faffffa3faffff,eax
   14002c937:	(bad)  
   14002c938:	(bad)  
   14002c939:	cli    
   14002c93a:	movabs ds:0xa2faffffa2faffff,al
   14002c943:	(bad)  
   14002c944:	(bad)  
   14002c945:	cli    
   14002c946:	movabs ds:0xa1faffffa2faffff,al
   14002c94f:	(bad)  
   14002c950:	(bad)  
   14002c951:	clc    
   14002c952:	movabs al,ds:0x9ef7ffff9ff8ffff
   14002c95b:	(bad)  
   14002c95c:	(bad)  
   14002c95d:	clc    
   14002c95e:	fwait
   14002c95f:	(bad)  
   14002c960:	(bad)  
   14002c961:	clc    
   14002c962:	cdq    
   14002c963:	(bad)  
   14002c964:	(bad)  
   14002c965:	not    DWORD PTR [rsi-0x6c0a0001]
   14002c96b:	(bad)  
   14002c96c:	push   rbp
   14002c96e:	(bad)  
   14002c96f:	(bad)  
   14002c970:	push   rbp
   14002c972:	mov    bh,bh
   14002c974:	push   rdx
   14002c976:	xchg   edi,edi
   14002c978:	push   rcx
   14002c97a:	cmp    edi,0xff7cefff
   14002c980:	(bad)  
   14002c981:	(bad)  
   14002c982:	jae    0x14002c983
   14002c984:	std    
   14002c985:	jrcxz  0x14002c9f5
   14002c987:	(bad)  
   14002c988:	cli    
   14002c989:	fisub  WORD PTR [rdi-0x1]
   14002c98c:	clc    
   14002c98d:	xlat   BYTE PTR ds:[rbx]
   14002c98e:	(bad)  
   14002c98f:	push   rsi
   14002c991:	rcr    DWORD PTR [rbp-0x1],1
   14002c994:	repz retf 0xff56
   14002c998:	out    dx,eax
   14002c999:	mov    edi,0xb9eaff50
   14002c99e:	rex.WX jmp rdi
   14002c9a1:	mov    cl,0x45
   14002c9a3:	jmp    rdx
   14002c9a5:	stos   BYTE PTR es:[rdi],al
   14002c9a6:	rex call rbp
   14002c9a9:	(bad)  
   14002c9aa:	(bad)  
   14002c9ab:	cld    
   14002c9ac:	fwait
   14002c9ad:	gs sbb al,cl
	...
   14002c9f8:	nop
   14002c9f9:	mov    eax,0xbe9a0bbc
   14002c9fe:	(bad)  
   14002c9ff:	mov    dh,0xaa
   14002ca01:	loop   0x14002c9bc
   14002ca03:	stc    
   14002ca04:	xchg   edi,eax
   14002ca05:	out    dx,eax
   14002ca06:	in     eax,0xff
   14002ca08:	test   edx,edi
   14002ca0a:	std    
   14002ca0b:	inc    DWORD PTR [rbx+0x5dfffef9]
   14002ca11:	in     eax,dx
   14002ca12:	(bad)  
   14002ca13:	inc    DWORD PTR [rax-0x21]
   14002ca16:	(bad)  
   14002ca17:	push   QWORD PTR [rsi]
   14002ca19:	(bad)  
   14002ca1a:	(bad)  
   14002ca1b:	push   QWORD PTR [rax]
   14002ca1d:	retf   
   14002ca1e:	(bad)  
   14002ca1f:	jmp    FWORD PTR [rcx+rax*8]
   14002ca22:	(bad)  
   14002ca23:	jmp    FWORD PTR [rsi]
   14002ca25:	mov    edi,0xbf32ffff
   14002ca2a:	(bad)  
   14002ca2b:	(bad)  
   14002ca2c:	(bad)  
   14002ca2d:	enter  0xffff,0x77
   14002ca31:	(bad)  
   14002ca32:	(bad)  
   14002ca33:	(bad)  
   14002ca34:	in     eax,dx
   14002ca35:	lock pushf 
   14002ca37:	(bad)  
   14002ca38:	clc    
   14002ca39:	mul    BYTE PTR [rdx-0x57030301]
   14002ca3f:	(bad)  
   14002ca40:	(bad)  
   14002ca41:	(bad)  
   14002ca42:	lods   eax,DWORD PTR ds:[rsi]
   14002ca43:	(bad)  
   14002ca44:	(bad)  
   14002ca45:	(bad)  
   14002ca46:	scas   al,BYTE PTR es:[rdi]
   14002ca47:	(bad)  
   14002ca48:	(bad)  
   14002ca49:	(bad)  
   14002ca4a:	scas   al,BYTE PTR es:[rdi]
   14002ca4b:	(bad)  
   14002ca4c:	(bad)  
   14002ca4d:	(bad)  
   14002ca4e:	lods   al,BYTE PTR ds:[rsi]
   14002ca4f:	(bad)  
   14002ca50:	(bad)  
   14002ca51:	(bad)  
   14002ca52:	test   eax,0xa7fdffff
   14002ca57:	(bad)  
   14002ca58:	(bad)  
   14002ca59:	std    
   14002ca5a:	movabs ds:0xa0fbffffa1fcffff,eax
   14002ca63:	(bad)  
   14002ca64:	(bad)  
   14002ca65:	cli    
   14002ca66:	lahf   
   14002ca67:	(bad)  
   14002ca68:	(bad)  
   14002ca69:	stc    
   14002ca6a:	lahf   
   14002ca6b:	(bad)  
   14002ca6c:	(bad)  
   14002ca6d:	stc    
   14002ca6e:	sahf   
   14002ca6f:	(bad)  
   14002ca70:	(bad)  
   14002ca71:	stc    
   14002ca72:	sahf   
   14002ca73:	(bad)  
   14002ca74:	(bad)  
   14002ca75:	stc    
   14002ca76:	lahf   
   14002ca77:	(bad)  
   14002ca78:	(bad)  
   14002ca79:	clc    
   14002ca7a:	lahf   
   14002ca7b:	(bad)  
   14002ca7c:	(bad)  
   14002ca7d:	neg    DWORD PTR [rdi-0x60080101]
   14002ca83:	(bad)  
   14002ca84:	(bad)  
   14002ca85:	neg    DWORD PTR [rdi-0x60080101]
   14002ca8b:	(bad)  
   14002ca8c:	(bad)  
   14002ca8d:	neg    DWORD PTR [rdi-0x60090101]
   14002ca93:	(bad)  
   14002ca94:	(bad)  
   14002ca95:	neg    BYTE PTR [rdi-0x60090101]
   14002ca9b:	(bad)  
   14002ca9c:	(bad)  
   14002ca9d:	neg    BYTE PTR [rsi-0x61090101]
   14002caa3:	(bad)  
   14002caa4:	(bad)  
   14002caa5:	neg    BYTE PTR [rsi-0x61090101]
   14002caab:	(bad)  
   14002caac:	(bad)  
   14002caad:	neg    BYTE PTR [rsi-0x61080101]
   14002cab3:	(bad)  
   14002cab4:	(bad)  
   14002cab5:	neg    DWORD PTR [rsi-0x61080101]
   14002cabb:	(bad)  
   14002cabc:	(bad)  
   14002cabd:	neg    DWORD PTR [rbp-0x62080101]
   14002cac3:	(bad)  
   14002cac4:	(bad)  
   14002cac5:	neg    DWORD PTR [rbp-0x62080101]
   14002cacb:	(bad)  
   14002cacc:	(bad)  
   14002cacd:	neg    DWORD PTR [rbx-0x63080101]
   14002cad3:	(bad)  
   14002cad4:	(bad)  
   14002cad5:	neg    DWORD PTR [rdi+rdi*8-0x640802]
   14002cadc:	(bad)  
   14002cadd:	neg    DWORD PTR [rdx-0x66070101]
   14002cae3:	(bad)  
   14002cae4:	(bad)  
   14002cae5:	not    DWORD PTR [rsi-0x6c0a0001]
   14002caeb:	(bad)  
   14002caec:	(bad)  
   14002caed:	cmc    
   14002caee:	(bad)  
   14002caef:	(bad)  
   14002caf0:	push   rbp
   14002caf2:	mov    bh,bh
   14002caf4:	push   rdx
   14002caf6:	xchg   bh,bh
   14002caf8:	push   rcx
   14002cafa:	cmp    edi,0xff7cefff
   14002cb00:	(bad)  
   14002cb01:	(bad)  
   14002cb02:	jae    0x14002cb03
   14002cb04:	std    
   14002cb05:	in     al,0x6d
   14002cb07:	(bad)  
   14002cb08:	cli    
   14002cb09:	fisub  WORD PTR [rdi-0x1]
   14002cb0c:	stc    
   14002cb0d:	xlat   BYTE PTR ds:[rbx]
   14002cb0e:	(bad)  
   14002cb0f:	push   rbx
   14002cb11:	rcr    BYTE PTR [rbp-0x1],1
   14002cb14:	repz leave 
   14002cb16:	push   rdi
   14002cb17:	(bad)  
   14002cb18:	out    dx,al
   14002cb19:	rcl    DWORD PTR [rax-0x1],0xe9
   14002cb1d:	mov    eax,0xb0e5ff4a
   14002cb22:	rex.RB jmp r9
   14002cb25:	stos   BYTE PTR es:[rdi],al
   14002cb26:	rex call rcx
   14002cb29:	xchg   ebp,eax
   14002cb2a:	xor    eax,0x1a659cfa
   14002cb2f:	scas   eax,DWORD PTR es:[rdi]
	...
   14002cb78:	test   BYTE PTR [rcx-0x6b49f942],dh
   14002cb7e:	rex.WRB jne 0x14002cb30
   14002cb81:	(bad)  
   14002cb82:	movabs eax,ds:0xfaf588ffc5f4b1f3
   14002cb8b:	dec    DWORD PTR [rbp-0x7c000103]
   14002cb91:	clc    
   14002cb92:	(bad)  
   14002cb93:	call   QWORD PTR [rbp-0x18]
   14002cb96:	(bad)  
   14002cb97:	(bad)  
   14002cb98:	cmp    eax,0x36ffffdc
   14002cb9d:	sar    bh,cl
   14002cb9f:	push   QWORD PTR [rcx]
   14002cba1:	retf   0xffff
   14002cba4:	sub    eax,0x2effffc1
   14002cba9:	mov    ebp,0xbf34ffff
   14002cbae:	(bad)  
   14002cbaf:	inc    DWORD PTR [rdx-0x36]
   14002cbb2:	(bad)  
   14002cbb3:	dec    DWORD PTR [rbp-0xf00242c]
   14002cbb9:	icebp  
   14002cbba:	movabs al,ds:0xadfcfdffa5f8f9ff
   14002cbc3:	(bad)  
   14002cbc4:	(bad)  
   14002cbc5:	std    
   14002cbc6:	mov    al,0xff
   14002cbc8:	(bad)  
   14002cbc9:	(bad)  
   14002cbca:	scas   al,BYTE PTR es:[rdi]
   14002cbcb:	(bad)  
   14002cbcc:	(bad)  
   14002cbcd:	std    
   14002cbce:	lods   al,BYTE PTR ds:[rsi]
   14002cbcf:	(bad)  
   14002cbd0:	jmp    0x14002cb9d
   14002cbd2:	jae    0x14002cbbb
   14002cbd4:	mov    ecx,0xadd02a81
   14002cbd9:	jb     0x14002cbf9
   14002cbdb:	retf   
   14002cbdc:	lods   eax,DWORD PTR ds:[rsi]
   14002cbdd:	jb     0x14002cbfd
   14002cbdf:	int3   
   14002cbe0:	lods   eax,DWORD PTR ds:[rsi]
   14002cbe1:	jb     0x14002cc01
   14002cbe3:	int3   
   14002cbe4:	lods   eax,DWORD PTR ds:[rsi]
   14002cbe5:	jb     0x14002cc05
   14002cbe7:	int3   
   14002cbe8:	lods   al,BYTE PTR ds:[rsi]
   14002cbe9:	jno    0x14002cc09
   14002cbeb:	int3   
   14002cbec:	lods   al,BYTE PTR ds:[rsi]
   14002cbed:	jno    0x14002cc0d
   14002cbef:	int3   
   14002cbf0:	lods   al,BYTE PTR ds:[rsi]
   14002cbf1:	jno    0x14002cc11
   14002cbf3:	int    0xab
   14002cbf5:	jno    0x14002cc15
   14002cbf7:	int    0xab
   14002cbf9:	jo     0x14002cc19
   14002cbfb:	int    0xab
   14002cbfd:	jo     0x14002cc1d
   14002cbff:	int    0xab
   14002cc01:	jo     0x14002cc21
   14002cc03:	int    0xaa
   14002cc05:	jo     0x14002cc24
   14002cc07:	int    0xaa
   14002cc09:	jo     0x14002cc28
   14002cc0b:	(bad)  
   14002cc0c:	stos   BYTE PTR es:[rdi],al
   14002cc0d:	outs   dx,DWORD PTR ds:[rsi]
   14002cc0e:	sbb    eax,0x1d6fa9ce
   14002cc13:	(bad)  
   14002cc14:	test   eax,0xa9ce1d6f
   14002cc19:	outs   dx,DWORD PTR ds:[rsi]
   14002cc1a:	sbb    eax,0x1d6ea8ce
   14002cc1f:	iret   
   14002cc20:	test   al,0x6e
   14002cc22:	sbb    eax,0x1d6ea8cf
   14002cc27:	iret   
   14002cc28:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002cc29:	outs   dx,BYTE PTR ds:[rsi]
   14002cc2a:	sbb    eax,0x1d6da7cf
   14002cc2f:	iret   
   14002cc30:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002cc31:	ins    DWORD PTR es:[rdi],dx
   14002cc32:	sbb    eax,0x1d6da6cf
   14002cc37:	iret   
   14002cc38:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002cc39:	ins    DWORD PTR es:[rdi],dx
   14002cc3a:	sbb    al,0xcf
   14002cc3c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002cc3d:	ins    DWORD PTR es:[rdi],dx
   14002cc3e:	sbb    al,0xcf
   14002cc40:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002cc41:	ins    BYTE PTR es:[rdi],dx
   14002cc42:	sbb    al,0xcf
   14002cc44:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002cc45:	ins    BYTE PTR es:[rdi],dx
   14002cc46:	sbb    al,0xd0
   14002cc48:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002cc49:	ins    BYTE PTR es:[rdi],dx
   14002cc4a:	sbb    al,0xd0
   14002cc4c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002cc4d:	ins    BYTE PTR es:[rdi],dx
   14002cc4e:	sbb    al,0xd0
   14002cc50:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002cc51:	imul   ebx,DWORD PTR [rax+rdx*8],0xffffffae
   14002cc55:	jns    0x14002cc80
   14002cc57:	(bad)  
   14002cc58:	fnstenv [rdi-0x901149f]
   14002cc5e:	xchg   edi,eax
   14002cc5f:	(bad)  
   14002cc60:	(bad)  
   14002cc61:	neg    BYTE PTR [rax-0x69090101]
   14002cc67:	(bad)  
   14002cc68:	(bad)  
   14002cc69:	cmc    
   14002cc6a:	xchg   ebx,eax
   14002cc6b:	(bad)  
   14002cc6c:	(bad)  
   14002cc6d:	cmc    
   14002cc6e:	(bad)  
   14002cc6f:	(bad)  
   14002cc70:	(bad)  
   14002cc71:	hlt    
   14002cc72:	mov    edi,edi
   14002cc74:	push   rdx
   14002cc76:	test   edi,edi
   14002cc78:	push   rcx
   14002cc7a:	cmp    edi,0xff7aecff
   14002cc80:	(bad)  
   14002cc81:	(bad)  
   14002cc82:	jae    0x14002cc83
   14002cc84:	std    
   14002cc85:	in     al,0x6d
   14002cc87:	(bad)  
   14002cc88:	cli    
   14002cc89:	frstor [rdi-0x1]
   14002cc8c:	clc    
   14002cc8d:	(bad)  
   14002cc8e:	(bad)  
   14002cc8f:	push   rsp
   14002cc91:	rcr    DWORD PTR [rdi+rdi*8-0xe],1
   14002cc95:	enter  0xff57,0xee
   14002cc99:	rcl    DWORD PTR [rax-0x1],0xe9
   14002cc9d:	mov    ch,0x4a
   14002cc9f:	jmp    rbp
   14002cca1:	mov    al,0x45
   14002cca3:	(bad)  
   14002cca4:	fisubr WORD PTR [rcx-0x713400c1]
   14002ccaa:	xor    dh,ch
   14002ccac:	popf   
   14002ccad:	data16 sbb dl,BYTE PTR [rax+rax*1+0x0]
	...
   14002ccf5:	add    BYTE PTR [rax],al
   14002ccf7:	add    BYTE PTR [rcx+rsi*4-0x7247fd42],al
   14002ccfe:	rex.X push rcx
   14002cd00:	shr    BYTE PTR [rsi-0xa461ca9],1
   14002cd06:	mov    esp,0xd5f6abff
   14002cd0b:	dec    DWORD PTR [rbx-0x6e000105]
   14002cd11:	(bad)  
   14002cd12:	(bad)  
   14002cd13:	(bad)  
   14002cd14:	jnp    0x14002cd0d
   14002cd16:	(bad)  
   14002cd17:	dec    DWORD PTR [rsi-0x1b]
   14002cd1a:	(bad)  
   14002cd1b:	(bad)  
   14002cd1c:	cmp    al,0xda
   14002cd1e:	(bad)  
   14002cd1f:	push   QWORD PTR [rcx+rdx*8]
   14002cd22:	(bad)  
   14002cd23:	push   QWORD PTR [rax]
   14002cd25:	enter  0xffff,0x2d
   14002cd29:	sar    bh,0xff
   14002cd2c:	(bad)  
   14002cd2d:	mov    ebp,0xc137ffff
   14002cd32:	(bad)  
   14002cd33:	inc    DWORD PTR [rcx+rcx*8-0x2]
   14002cd37:	jmp    QWORD PTR [rbx-0xd003226]
   14002cd3d:	repz movabs ds:0xaffcfdffa8f8f9ff,eax
   14002cd47:	(bad)  
   14002cd48:	(bad)  
   14002cd49:	(bad)  
   14002cd4a:	scas   eax,DWORD PTR es:[rdi]
   14002cd4b:	(bad)  
   14002cd4c:	(bad)  
   14002cd4d:	(bad)  
   14002cd4e:	lods   al,BYTE PTR ds:[rsi]
   14002cd4f:	(bad)  
   14002cd50:	mov    ecx,0xaed02b81
   14002cd55:	jae    0x14002cd75
   14002cd57:	or     al,0x0
	...
   14002cdd1:	add    BYTE PTR [rax],al
   14002cdd3:	add    BYTE PTR [rbx+rbp*2+0x79ae0c1c],ah
   14002cdda:	(bad)  
   14002cddb:	(bad)  
   14002cddc:	(bad)  
   14002cddd:	cmc    
   14002cdde:	xchg   esi,eax
   14002cddf:	(bad)  
   14002cde0:	(bad)  
   14002cde1:	not    BYTE PTR [rdi-0x6a090101]
   14002cde7:	(bad)  
   14002cde8:	(bad)  
   14002cde9:	hlt    
   14002cdea:	xchg   ecx,eax
   14002cdeb:	(bad)  
   14002cdec:	(bad)  
   14002cded:	hlt    
   14002cdee:	(bad)  
   14002cdef:	(bad)  
   14002cdf0:	(bad)  
   14002cdf1:	hlt    
   14002cdf2:	mov    edi,edi
   14002cdf4:	push   rdx
   14002cdf6:	test   edi,edi
   14002cdf8:	push   rcx
   14002cdfa:	jg     0x14002cdfb
   14002cdfc:	(bad)  
   14002cdfd:	in     al,dx
   14002cdfe:	jns    0x14002cdff
   14002ce00:	(bad)  
   14002ce01:	jmp    0x12400cd78
   14002ce06:	ins    DWORD PTR es:[rdi],dx
   14002ce07:	(bad)  
   14002ce08:	cli    
   14002ce09:	fsub   QWORD PTR [rsi-0x1]
   14002ce0c:	clc    
   14002ce0d:	(bad)  
   14002ce0e:	(bad)  
   14002ce0f:	push   rsp
   14002ce11:	iret   
   14002ce12:	pop    rsp
   14002ce13:	push   rdx
   14002ce15:	leave  
   14002ce16:	push   rbp
   14002ce17:	(bad)  
   14002ce18:	out    dx,al
   14002ce19:	mov    edi,0xb6e9ff4e
   14002ce1e:	rex.WX jmp rbp
   14002ce21:	mov    al,0x45
   14002ce23:	(bad)  
   14002ce24:	fild   QWORD PTR [rax-0x773c00c2]
   14002ce2a:	cs lock popf 
   14002ce2d:	data16 sbb bh,BYTE PTR [rdx+0x0]
	...
   14002ce79:	add    BYTE PTR [rax],al
   14002ce7b:	add    BYTE PTR [rbx+rdx*4-0x6b38d8b8],bh
   14002ce82:	cmp    eax,0x8aeeebd6
   14002ce87:	push   QWORD PTR [rax+rdi*8-0xa680039]
   14002ce8e:	lock call QWORD PTR [rbp-0x6e000002]
   14002ce95:	(bad)  
   14002ce96:	(bad)  
   14002ce97:	push   QWORD PTR [rcx-0xd]
   14002ce9a:	(bad)  
   14002ce9b:	dec    DWORD PTR [rax-0x1c]
   14002ce9e:	(bad)  
   14002ce9f:	(bad)  
   14002cea0:	cmp    eax,ebx
   14002cea2:	(bad)  
   14002cea3:	push   QWORD PTR [rcx]
   14002cea5:	iret   
   14002cea6:	(bad)  
   14002cea7:	jmp    FWORD PTR [rsi]
   14002cea9:	enter  0xffff,0x2d
   14002cead:	sar    bh,0xff
   14002ceb0:	xor    BYTE PTR [rdi-0x3cc70001],bh
   14002ceb6:	(bad)  
   14002ceb7:	dec    DWORD PTR [rbx+rcx*8-0x4]
   14002cebb:	inc    eax
   14002cebd:	loope  0x14002ce7b
   14002cebf:	push   rbp
   14002cec1:	hlt    
   14002cec2:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002cec3:	(bad)  
   14002cec4:	cli    
   14002cec5:	clc    
   14002cec6:	stos   DWORD PTR es:[rdi],eax
   14002cec7:	(bad)  
   14002cec8:	(bad)  
   14002cec9:	cld    
   14002ceca:	scas   eax,DWORD PTR es:[rdi]
   14002cecb:	(bad)  
   14002cecc:	(bad)  
   14002cecd:	(bad)  
   14002cece:	lods   al,BYTE PTR ds:[rsi]
   14002cecf:	dec    ecx
   14002ced1:	xchg   esi,eax
   14002ced2:	xlat   BYTE PTR ds:[rbx]
   14002ced4:	scas   al,BYTE PTR es:[rdi]
   14002ced5:	jae    0x14002cef6
   14002ced7:	and    DWORD PTR [rax],eax
	...
   14002cf51:	add    BYTE PTR [rax],al
   14002cf53:	add    BYTE PTR [rbp-0x42dde394],ah
   14002cf59:	lea    edi,[rdx]
   14002cf5b:	(bad)  
   14002cf5d:	cmc    
   14002cf5e:	xchg   ebp,eax
   14002cf5f:	(bad)  
   14002cf60:	(bad)  
   14002cf61:	cmc    
   14002cf62:	xchg   edi,eax
   14002cf63:	(bad)  
   14002cf64:	(bad)  
   14002cf65:	hlt    
   14002cf66:	xchg   ebp,eax
   14002cf67:	(bad)  
   14002cf68:	(bad)  
   14002cf69:	hlt    
   14002cf6a:	xchg   ecx,eax
   14002cf6b:	(bad)  
   14002cf6c:	(bad)  
   14002cf6d:	hlt    
   14002cf6e:	mov    ?,edi
   14002cf70:	(bad)  
   14002cf71:	repz mov edi,edi
   14002cf74:	(bad)  
   14002cf75:	repz test edi,edi
   14002cf78:	push   rcx
   14002cf7a:	jg     0x14002cf7b
   14002cf7c:	(bad)  
   14002cf7d:	out    dx,al
   14002cf7e:	ja     0x14002cf7f
   14002cf80:	(bad)  
   14002cf81:	call   0x12400cef6
   14002cf86:	ins    BYTE PTR es:[rdi],dx
   14002cf87:	(bad)  
   14002cf88:	cli    
   14002cf89:	fsub   QWORD PTR [rbp-0x1]
   14002cf8c:	clc    
   14002cf8d:	(bad)  
   14002cf8e:	pop    rdi
   14002cf8f:	push   rsp
   14002cf91:	iret   
   14002cf92:	pop    rsp
   14002cf93:	push   rcx
   14002cf95:	(bad)  
   14002cf96:	push   rbp
   14002cf97:	(bad)  
   14002cf98:	in     al,dx
   14002cf99:	mov    esi,0xb5e8ff4d
   14002cf9e:	rex.WB jmp r12
   14002cfa1:	scas   eax,DWORD PTR es:[rdi]
   14002cfa2:	rex.RX (bad) 
   14002cfa4:	fisub  WORD PTR [rbp+rdi*1+0x297eb8ff]
   14002cfab:	call   0x1921d364d
	...
   14002cffc:	(bad)  
   14002cffd:	fidiv  WORD PTR [rsi+0x2d80b805]
   14002d003:	mov    ebx,0xfc72e4f8
   14002d008:	in     al,0xf4
   14002d00a:	fwait
   14002d00b:	push   QWORD PTR [rax-0x74003104]
   14002d011:	clc    
   14002d012:	cld    
   14002d013:	call   FWORD PTR [rsi+rdi*8-0x6d0001]
   14002d01a:	(bad)  
   14002d01b:	jmp    QWORD PTR [rbp-0xf]
   14002d01e:	(bad)  
   14002d01f:	inc    DWORD PTR [rdx+riz*8-0x1]
   14002d023:	push   QWORD PTR [rdi]
   14002d025:	xlat   BYTE PTR ds:[rbx]
   14002d026:	(bad)  
   14002d027:	push   QWORD PTR [rcx]
   14002d029:	(bad)  
   14002d02a:	(bad)  
   14002d02b:	jmp    FWORD PTR [rip+0x2dffffc4]        # 0x16e02cff5
   14002d031:	sar    bh,0xff
   14002d034:	xor    DWORD PTR [rdi-0x3cc50001],edi
   14002d03a:	(bad)  
   14002d03b:	call   QWORD PTR [rax-0x34]
   14002d03e:	sti    
   14002d03f:	dec    ebp
   14002d041:	in     al,0xb5
   14002d043:	push   rsp
   14002d045:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002d047:	(bad)  
   14002d048:	cli    
   14002d049:	clc    
   14002d04a:	stos   DWORD PTR es:[rdi],eax
   14002d04b:	(bad)  
   14002d04c:	(bad)  
   14002d04d:	sti    
   14002d04e:	stos   DWORD PTR es:[rdi],eax
   14002d04f:	jmp    rax
   14002d051:	mov    dh,0x59
   14002d053:	loop   0x14002d004
   14002d055:	jae    0x14002d076
   14002d057:	rex.W add BYTE PTR [rax],al
	...
   14002d0d2:	add    BYTE PTR [rax],al
   14002d0d4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002d0d5:	ins    BYTE PTR es:[rdi],dx
   14002d0d6:	sbb    al,0x4e
   14002d0d8:	xlat   BYTE PTR ds:[rbx]
   14002d0d9:	scas   eax,DWORD PTR es:[rdi]
   14002d0da:	push   rdi
   14002d0db:	call   0x13f98c5dd
   14002d0e0:	(bad)  
   14002d0e1:	cmc    
   14002d0e2:	xchg   esi,eax
   14002d0e3:	(bad)  
   14002d0e4:	(bad)  
   14002d0e5:	cmc    
   14002d0e6:	xchg   edx,eax
   14002d0e7:	(bad)  
   14002d0e8:	(bad)  
   14002d0e9:	pause  
   14002d0eb:	(bad)  
   14002d0ec:	(bad)  
   14002d0ed:	repz mov edi,?
   14002d0f0:	(bad)  
   14002d0f1:	repz mov bh,bh
   14002d0f4:	(bad)  
   14002d0f5:	repnz test bh,bh
   14002d0f8:	push   rax
   14002d0fa:	jg     0x14002d0fb
   14002d0fc:	(bad)  
   14002d0fd:	out    dx,al
   14002d0fe:	jbe    0x14002d0ff
   14002d100:	jmp    rdi
   14002d102:	jo     0x14002d103
   14002d104:	sti    
   14002d105:	loop   0x14002d172
   14002d107:	(bad)  
   14002d108:	stc    
   14002d109:	(bad)  [rdi+rdi*8-0x9]
   14002d10d:	(bad)  
   14002d10e:	pop    rdi
   14002d10f:	push   rsp
   14002d111:	int    0x5a
   14002d113:	push   rcx
   14002d115:	(bad)
   14002d118:	in     al,dx
   14002d119:	mov    ebp,0xb4e8ff4e
   14002d11e:	rex.W jmp rdx
   14002d121:	lods   eax,DWORD PTR ds:[rsi]
   14002d122:	rex.R (bad) 
   14002d124:	(bad)  [rbx+0x73acff3d]
   14002d12a:	and    ebx,edi
   14002d12c:	sahf   
   14002d12d:	sbb    ch,BYTE PTR [eip+0x0]        # 0x14002d134
	...
   14002d17c:	(bad)  
   14002d17d:	cld    
   14002d17e:	mov    cl,0x1
   14002d180:	mov    ecx,0xf08c297f
   14002d185:	(bad)  
   14002d186:	pop    rbp
   14002d187:	repnz sti 
   14002d189:	icebp  
   14002d18a:	test   edi,edi
   14002d18c:	(bad)  
   14002d18e:	lods   al,BYTE PTR ds:[rsi]
   14002d18f:	jmp    FWORD PTR [rcx-0x6c002605]
   14002d195:	sti    
   14002d196:	(bad)  
   14002d197:	call   FWORD PTR [rdi-0x6d000001]
   14002d19d:	(bad)  
   14002d19e:	(bad)  
   14002d19f:	call   FWORD PTR [rsi-0x12]
   14002d1a2:	(bad)  
   14002d1a3:	inc    DWORD PTR [rcx-0x21]
   14002d1a6:	(bad)  
   14002d1a7:	push   QWORD PTR [rsi]
   14002d1a9:	xlat   BYTE PTR ds:[rbx]
   14002d1aa:	(bad)  
   14002d1ab:	push   QWORD PTR [rcx]
   14002d1ad:	int    0xff
   14002d1af:	jmp    FWORD PTR [rsi]
   14002d1b1:	(bad)  
   14002d1b2:	(bad)  
   14002d1b3:	jmp    FWORD PTR [rsi]
   14002d1b5:	mov    edi,0xc033ffff
   14002d1ba:	(bad)  
   14002d1bb:	(bad)  
   14002d1bc:	cmp    eax,esp
   14002d1be:	(bad)  
   14002d1bf:	call   QWORD PTR [rbx-0x35]
   14002d1c2:	sti    
   14002d1c3:	call   rsp
   14002d1c5:	out    0xb3,eax
   14002d1c7:	push   rbp
   14002d1c9:	repz cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002d1cb:	(bad)  
   14002d1cc:	cli    
   14002d1cd:	imul   DWORD PTR [rax+0x78d7f2ff]
   14002d1d3:	out    dx,eax
   14002d1d4:	scas   eax,DWORD PTR es:[rdi]
   14002d1d5:	jae    0x14002d1f6
   14002d1d7:	jns    0x14002d1d9
	...
   14002d251:	add    BYTE PTR [rax],al
   14002d253:	add    BYTE PTR [rbp-0x1276e394],ah
   14002d259:	(bad)  
   14002d25a:	jbe    0x14002d251
   14002d25c:	std    
   14002d25d:	cmc    
   14002d25e:	xchg   esi,eax
   14002d25f:	(bad)  
   14002d260:	(bad)  
   14002d261:	hlt    
   14002d262:	xchg   esi,eax
   14002d263:	(bad)  
   14002d264:	(bad)  
   14002d265:	hlt    
   14002d266:	xchg   edx,eax
   14002d267:	(bad)  
   14002d268:	(bad)  
   14002d269:	hlt    
   14002d26a:	(bad)  
   14002d26b:	(bad)  
   14002d26c:	(bad)  
   14002d26d:	repz mov edi,edi
   14002d270:	(bad)  
   14002d271:	repnz xchg edi,edi
   14002d274:	(bad)  
   14002d275:	icebp  
   14002d276:	(bad)  
   14002d277:	(bad)  
   14002d278:	(bad)  
   14002d279:	out    dx,al
   14002d27a:	jle    0x14002d27b
   14002d27c:	(bad)  
   14002d27d:	in     al,dx
   14002d27e:	jbe    0x14002d27f
   14002d280:	(bad)  
   14002d281:	in     eax,0x6f
   14002d283:	(bad)  
   14002d284:	sti    
   14002d285:	loope  0x14002d2f2
   14002d287:	(bad)  
   14002d288:	stc    
   14002d289:	fldenv [rdi+rdi*8-0xa]
   14002d28d:	rcr    DWORD PTR [rsi-0x1],cl
   14002d290:	repz int 0x59
   14002d293:	push   rax
   14002d295:	(bad)  
   14002d296:	push   rsp
   14002d297:	(bad)  
   14002d298:	(bad)  
   14002d299:	mov    edx,0xb4e7ff4d
   14002d29e:	rex.W jmp rcx
   14002d2a1:	scas   al,BYTE PTR es:[rdi]
   14002d2a2:	rex.XB (bad) 
   14002d2a4:	ficomp DWORD PTR [rsi+0x679efd3a]
   14002d2aa:	sbb    ecx,esi
   14002d2ac:	sahf   
   14002d2ad:	sbb    al,BYTE PTR [edx]
	...
   14002d300:	mov    ecx,0xdc5a277e
   14002d305:	stos   DWORD PTR es:[rdi],eax
   14002d306:	rex.WX in al,0xfa
   14002d309:	out    dx,al
   14002d30a:	cmp    bh,0xfc
   14002d30d:	test   BYTE PTR [rbp-0x47053201],0xff
   14002d314:	popf   
   14002d315:	stc    
   14002d316:	jmp    0x14002d317
   14002d318:	popf   
   14002d319:	(bad)  
   14002d31a:	(bad)  
   14002d31b:	call   FWORD PTR [rbp-0x71000001]
   14002d321:	(bad)  
   14002d322:	(bad)  
   14002d323:	call   QWORD PTR [rdi-0x15]
   14002d326:	(bad)  
   14002d327:	(bad)  
   14002d328:	cmp    eax,0x36ffffde
   14002d32d:	(bad)  
   14002d32e:	(bad)  
   14002d32f:	push   QWORD PTR [rax]
   14002d331:	retf   
   14002d332:	(bad)  
   14002d333:	jmp    FWORD PTR [rsi]
   14002d335:	(bad)  
   14002d336:	(bad)  
   14002d337:	jmp    FWORD PTR [rsi]
   14002d339:	mov    edi,0xbf32ffff
   14002d33e:	(bad)  
   14002d33f:	(bad)  
   14002d340:	cmp    eax,0x58ffffc4
   14002d345:	retf   
   14002d346:	stc    
   14002d347:	(bad)  
   14002d348:	fld1   
   14002d34a:	scas   eax,DWORD PTR es:[rdi]
   14002d34b:	push   rsp
   14002d34d:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002d34f:	(bad)  
   14002d350:	clc    
   14002d351:	hlt    
   14002d352:	fwait
   14002d353:	std    
   14002d354:	scas   al,BYTE PTR es:[rdi]
   14002d355:	jne    0x14002d377
   14002d357:	mov    esi,0x51f73af
	...
   14002d3d0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002d3d1:	ins    DWORD PTR es:[rdi],dx
   14002d3d2:	sbb    al,0xc
   14002d3d4:	stos   BYTE PTR es:[rdi],al
   14002d3d5:	jno    0x14002d3f7
   14002d3d7:	leave  
   14002d3d8:	cld    
   14002d3d9:	lock (bad) 
   14002d3db:	(bad)  
   14002d3dc:	std    
   14002d3dd:	hlt    
   14002d3de:	xchg   esi,eax
   14002d3df:	(bad)  
   14002d3e0:	(bad)  
   14002d3e1:	hlt    
   14002d3e2:	xchg   esp,eax
   14002d3e3:	(bad)  
   14002d3e4:	(bad)  
   14002d3e5:	hlt    
   14002d3e6:	xchg   ecx,eax
   14002d3e7:	(bad)  
   14002d3e8:	(bad)  
   14002d3e9:	repnz (bad) 
   14002d3eb:	(bad)  
   14002d3ec:	(bad)  
   14002d3ed:	repnz mov bh,bh
   14002d3f0:	(bad)  
   14002d3f1:	icebp  
   14002d3f2:	xchg   bh,bh
   14002d3f4:	(bad)  
   14002d3f5:	icebp  
   14002d3f6:	cmp    edi,0xff7aecff
   14002d3fc:	(bad)  
   14002d3fd:	(bad)  
   14002d3fe:	je     0x14002d3ff
   14002d400:	(bad)  
   14002d401:	in     eax,0x6e
   14002d403:	(bad)  
   14002d404:	cli    
   14002d405:	fisub  WORD PTR [rdi-0x1]
   14002d408:	stc    
   14002d409:	xlat   BYTE PTR ds:[rbx]
   14002d40a:	movsxd edi,edi
   14002d40c:	not    dl
   14002d40e:	pop    rbp
   14002d40f:	push   rbx
   14002d411:	retf   0xff57
   14002d414:	out    dx,eax
   14002d415:	rcl    DWORD PTR [rax-0x1],0xea
   14002d419:	mov    edx,0xb1e7ff4c
   14002d41e:	rex.W jmp rax
   14002d421:	stos   DWORD PTR es:[rdi],eax
   14002d422:	dec    r13d
   14002d425:	xchg   edx,eax
   14002d426:	xor    al,0xf5
   14002d428:	lahf   
   14002d429:	sbb    ebx,DWORD PTR [edx+0x0]
	...
   14002d480:	mov    edx,0xc11b2980
   14002d485:	mov    BYTE PTR [rax],dh
   14002d487:	sar    ecx,1
   14002d489:	jmp    0x14002d501
   14002d48b:	(bad)  
   14002d48c:	sti    
   14002d48d:	hlt    
   14002d48e:	mov    bh,bh
   14002d490:	cli    
   14002d491:	not    DWORD PTR [rdi+rdi*8-0x3b0341]
   14002d498:	xchg   esp,eax
   14002d499:	stc    
   14002d49a:	clc    
   14002d49b:	jmp    QWORD PTR [rbp-0x60000001]
   14002d4a1:	(bad)  
   14002d4a2:	(bad)  
   14002d4a3:	dec    DWORD PTR [rax+0x53fffffb]
   14002d4a9:	call   0x11c3fd4ad
   14002d4ae:	(bad)  
   14002d4af:	push   QWORD PTR [rsp+rdx*8]
   14002d4b2:	(bad)  
   14002d4b3:	push   QWORD PTR [rax]
   14002d4b5:	retf   
   14002d4b6:	(bad)  
   14002d4b7:	jmp    FWORD PTR [rip+0x2dffffc4]        # 0x16e02d481
   14002d4bd:	mov    edi,0xbf32ffff
   14002d4c2:	(bad)  
   14002d4c3:	(bad)  
   14002d4c4:	cmp    eax,0x5dffffc7
   14002d4c9:	retf   
   14002d4ca:	clc    
   14002d4cb:	(bad)  
   14002d4cc:	fsubrp st(7),st
   14002d4ce:	lods   al,BYTE PTR ds:[rsi]
   14002d4cf:	push   rsp
   14002d4d1:	icebp  
   14002d4d2:	lahf   
   14002d4d3:	call   rbx
   14002d4d5:	test   al,0x53
   14002d4d7:	jrcxz  0x14002d484
   14002d4d9:	jb     0x14002d4fb
   14002d4db:	rex.W add BYTE PTR [rax],al
	...
   14002d54e:	add    BYTE PTR [rax],al
   14002d550:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002d551:	ins    DWORD PTR es:[rdi],dx
   14002d552:	sbb    eax,0x60b9de64
   14002d557:	jmp    0x14002d556
   14002d559:	repz xchg ebx,eax
   14002d55b:	(bad)  
   14002d55c:	std    
   14002d55d:	hlt    
   14002d55e:	xchg   ebp,eax
   14002d55f:	(bad)  
   14002d560:	(bad)  
   14002d561:	hlt    
   14002d562:	xchg   ebx,eax
   14002d563:	(bad)  
   14002d564:	(bad)  
   14002d565:	hlt    
   14002d566:	nop
   14002d567:	(bad)  
   14002d568:	(bad)  
   14002d569:	repz mov edi,edi
   14002d56c:	(bad)  
   14002d56d:	repnz mov edi,edi
   14002d570:	(bad)  
   14002d571:	icebp  
   14002d572:	test   bh,bh
   14002d574:	(bad)  
   14002d575:	icebp  
   14002d576:	cmp    bh,0xfe
   14002d579:	out    dx,al
   14002d57a:	jns    0x14002d57b
   14002d57c:	(bad)  
   14002d57d:	jmp    0x12401d4f4
   14002d582:	ins    BYTE PTR es:[rdi],dx
   14002d583:	(bad)  
   14002d584:	cli    
   14002d585:	fsub   QWORD PTR [rsi-0x1]
   14002d588:	clc    
   14002d589:	(bad)  
   14002d58a:	(bad)  
   14002d58b:	push   rsp
   14002d58d:	rcr    BYTE PTR [rdi+rdi*8-0xe],1
   14002d591:	leave  
   14002d592:	push   rsi
   14002d593:	(bad)  
   14002d594:	out    dx,eax
   14002d595:	mov    edi,0xb8e9ff51
   14002d59a:	rex.WXB jmp r13
   14002d59d:	mov    al,0x48
   14002d59f:	(bad)  
   14002d5a0:	fisub  WORD PTR [rsi-0x7c4100c0]
   14002d5a6:	sub    eax,0x1b689feb
   14002d5ab:	movsxd eax,DWORD PTR [rax]
	...
   14002d601:	add    BYTE PTR [rax],al
   14002d603:	add    BYTE PTR [rdi-0xd60dc85],dh
   14002d609:	shl    BYTE PTR [rdx-0x9],cl
   14002d60c:	cli    
   14002d60d:	repnz cmp edi,0xfffffffb
   14002d611:	cmc    
   14002d612:	nop
   14002d613:	(bad)  
   14002d614:	clc    
   14002d615:	clc    
   14002d616:	fwait
   14002d617:	push   QWORD PTR [rdi-0x6c002f03]
   14002d61d:	cli    
   14002d61e:	std    
   14002d61f:	jmp    FWORD PTR [rax-0x62000001]
   14002d625:	(bad)  
   14002d626:	(bad)  
   14002d627:	inc    DWORD PTR [rdx+0x50fffff9]
   14002d62d:	call   0x11c3fd631
   14002d632:	(bad)  
   14002d633:	push   QWORD PTR [rsp+rdx*8]
   14002d636:	(bad)  
   14002d637:	push   QWORD PTR [rax]
   14002d639:	retf   
   14002d63a:	(bad)  
   14002d63b:	jmp    FWORD PTR [rsi]
   14002d63d:	ret    
   14002d63e:	(bad)  
   14002d63f:	jmp    FWORD PTR [rip+0x34ffffc0]        # 0x17502d605
   14002d645:	sar    bh,0xff
   14002d648:	(bad)  
   14002d649:	enter  0xfffe,0x61
   14002d64d:	retf   
   14002d64e:	idiv   bh
   14002d650:	loope  0x14002d638
   14002d652:	test   al,0xff
   14002d654:	out    dx,al
   14002d655:	fadd   QWORD PTR [rbx+0x206fa8f6]
   14002d65b:	mov    cl,0x7e
   14002d65d:	push   rsp
   14002d65e:	sub    eax,0x7
	...
   14002d6cb:	add    BYTE PTR [rdi-0x51e7e293],ah
   14002d6d1:	jbe    0x14002d6f7
   14002d6d3:	enter  0xebfa,0x89
   14002d6d7:	cld    
   14002d6d8:	std    
   14002d6d9:	repz xchg ebp,eax
   14002d6db:	(bad)  
   14002d6dc:	(bad)  
   14002d6dd:	hlt    
   14002d6de:	xchg   ebx,eax
   14002d6df:	(bad)  
   14002d6e0:	(bad)  
   14002d6e1:	repz xchg edx,eax
   14002d6e3:	(bad)  
   14002d6e4:	(bad)  
   14002d6e5:	repnz (bad) 
   14002d6e7:	(bad)  
   14002d6e8:	(bad)  
   14002d6e9:	repnz mov edi,edi
   14002d6ec:	(bad)  
   14002d6ed:	icebp  
   14002d6ee:	test   edi,edi
   14002d6f0:	(bad)  
   14002d6f1:	lock cmp edi,0xfffffffe
   14002d6f5:	out    dx,al
   14002d6f6:	jle    0x14002d6f7
   14002d6f8:	(bad)  
   14002d6f9:	in     eax,dx
   14002d6fa:	ja     0x14002d6fb
   14002d6fc:	(bad)  
   14002d6fd:	call   0x122ffd673
   14002d702:	imul   edi,edi,0xfffffff9
   14002d705:	(bad)  [rdi+rdi*8-0xa]
   14002d709:	(bad)  
   14002d70a:	(bad)  
   14002d70b:	push   rbx
   14002d70d:	int    0x5c
   14002d70f:	push   rdx
   14002d711:	enter  0xff55,0xeb
   14002d715:	mov    esi,0xb7e9ff4f
   14002d71a:	rex.WB jmp r13
   14002d71d:	scas   eax,DWORD PTR es:[rdi]
   14002d71e:	rex.RB (bad) 
   14002d720:	(bad)  [rsi+rdi*1+0x2170a9ff]
   14002d727:	fisub  DWORD PTR [rax+0x1e1b68]
	...
   14002d781:	add    BYTE PTR [rax],al
   14002d783:	add    BYTE PTR [rdi-0x21a1dc85],dh
   14002d789:	scas   al,BYTE PTR es:[rdi]
   14002d78a:	rex.W out 0xfa,al
   14002d78d:	lock jl 0x14002d78f
   14002d790:	sti    
   14002d791:	cmc    
   14002d792:	mov    edi,edi
   14002d794:	cld    
   14002d795:	clc    
   14002d796:	xchg   ebx,eax
   14002d797:	push   rsi
   14002d799:	stc    
   14002d79a:	movabs eax,ds:0xfefd99ffdafbaeff
   14002d7a3:	jmp    FWORD PTR [rax-0x60000001]
   14002d7a9:	(bad)  
   14002d7aa:	(bad)  
   14002d7ab:	(bad)  
   14002d7ac:	jle    0x14002d7a6
   14002d7ae:	(bad)  
   14002d7af:	dec    DWORD PTR [rbp-0x19]
   14002d7b2:	(bad)  
   14002d7b3:	(bad)  
   14002d7b4:	cmp    al,0xdb
   14002d7b6:	(bad)  
   14002d7b7:	push   QWORD PTR [rsp+rdx*8]
   14002d7ba:	(bad)  
   14002d7bb:	push   QWORD PTR [rax]
   14002d7bd:	retf   
   14002d7be:	(bad)  
   14002d7bf:	jmp    FWORD PTR [rip+0x30ffffc3]        # 0x17102d788
   14002d7c5:	mov    edi,0xc033ffff
   14002d7ca:	(bad)  
   14002d7cb:	(bad)  
   14002d7cc:	cmp    eax,0x62ffffc8
   14002d7d1:	int3   
   14002d7d2:	idiv   edi
   14002d7d4:	jrcxz  0x14002d7ba
   14002d7d6:	movabs eax,ds:0x216aa1e65aacd2ff
   14002d7df:	push   0x0
   14002d7e1:	add    BYTE PTR [rbp+0x2],dl
	...
   14002d84c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002d84d:	outs   dx,BYTE PTR ds:[rsi]
   14002d84e:	sbb    eax,0x6ac7e899
   14002d853:	out    dx,eax
   14002d854:	std    
   14002d855:	repnz xchg ebp,eax
   14002d857:	(bad)  
   14002d858:	std    
   14002d859:	hlt    
   14002d85a:	xchg   esi,eax
   14002d85b:	(bad)  
   14002d85c:	std    
   14002d85d:	hlt    
   14002d85e:	xchg   edx,eax
   14002d85f:	(bad)  
   14002d860:	(bad)  
   14002d861:	pause  
   14002d863:	(bad)  
   14002d864:	(bad)  
   14002d865:	icebp  
   14002d866:	mov    edi,?
   14002d868:	(bad)  
   14002d869:	lock mov bh,bh
   14002d86c:	(bad)  
   14002d86d:	icebp  
   14002d86e:	test   bh,bh
   14002d870:	(bad)  
   14002d871:	lock cmp bh,0xfe
   14002d875:	out    dx,al
   14002d876:	jp     0x14002d877
   14002d878:	std    
   14002d879:	(bad)  
   14002d87a:	jne    0x14002d87b
   14002d87c:	(bad)  
   14002d87d:	out    0x6f,al
   14002d87f:	(bad)  
   14002d880:	cld    
   14002d881:	loope  0x14002d8ed
   14002d883:	(bad)  
   14002d884:	clc    
   14002d885:	fisub  DWORD PTR [rdi+rdi*8-0xa]
   14002d889:	shl    DWORD PTR [rax-0x1],cl
   14002d88c:	repnz int 0x5b
   14002d88f:	push   rcx
   14002d891:	(bad)
   14002d894:	(bad)  
   14002d895:	mov    esp,0xb3e7ff50
   14002d89a:	rex.WX jmp rcx
   14002d89d:	lods   al,BYTE PTR ds:[rsi]
   14002d89e:	rex.R call rax
   14002d8a1:	xchg   edi,eax
   14002d8a2:	cmp    al,bh
   14002d8a4:	movabs al,ds:0xa91b68
	...
   14002d901:	add    BYTE PTR [rax],al
   14002d903:	add    BYTE PTR [rdi-0x47e8da83],dh
   14002d909:	jp     0x14002d92b
   14002d90b:	xabort 0xea
   14002d90e:	jb     0x14002d90e
   14002d910:	sti    
   14002d911:	repz xchg edi,edi
   14002d914:	cld    
   14002d915:	not    DWORD PTR [rax-0x67060201]
   14002d91b:	push   rsp
   14002d91d:	cli    
   14002d91e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002d91f:	call   FWORD PTR [rdi-0x5f001408]
   14002d925:	(bad)  
   14002d926:	(bad)  
   14002d927:	jmp    FWORD PTR [rax-0x62000001]
   14002d92d:	(bad)  
   14002d92e:	(bad)  
   14002d92f:	(bad)  
   14002d930:	js     0x14002d928
   14002d932:	(bad)  
   14002d933:	dec    DWORD PTR [rdx-0x1b]
   14002d936:	(bad)  
   14002d937:	(bad)  
   14002d938:	cmp    bl,bl
   14002d93a:	(bad)  
   14002d93b:	push   QWORD PTR [rdx+rdx*8]
   14002d93e:	(bad)  
   14002d93f:	jmp    FWORD PTR [rdi]
   14002d941:	retf   
   14002d942:	(bad)  
   14002d943:	jmp    FWORD PTR [rcx+rax*8]
   14002d946:	(bad)  
   14002d947:	jmp    FWORD PTR [rdi]
   14002d949:	mov    edi,0xc033ffff
   14002d94e:	(bad)  
   14002d94f:	(bad)  
   14002d950:	cmp    eax,0x66ffffc8
   14002d955:	int3   
   14002d956:	hlt    
   14002d957:	(bad)  
   14002d958:	(bad)  
   14002d95a:	xchg   ebp,eax
   14002d95b:	sti    
   14002d95c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002d95d:	jno    0x14002d983
   14002d95f:	retf   
   14002d960:	mov    DWORD PTR [rdx+0x29],ebx
   14002d963:	sub    al,0x0
   14002d965:	add    BYTE PTR [rbp+0x2],dl
	...
   14002d9c8:	test   al,0x6e
   14002d9ca:	sbb    eax,0x57b0d75f
   14002d9cf:	call   0x13f94cad1
   14002d9d4:	std    
   14002d9d5:	repz xchg esp,eax
   14002d9d7:	(bad)  
   14002d9d8:	std    
   14002d9d9:	repz xchg esp,eax
   14002d9db:	(bad)  
   14002d9dc:	std    
   14002d9dd:	hlt    
   14002d9de:	xchg   ecx,eax
   14002d9df:	(bad)  
   14002d9e0:	(bad)  
   14002d9e1:	repnz mov ?,edi
   14002d9e4:	(bad)  
   14002d9e5:	icebp  
   14002d9e6:	mov    edi,?
   14002d9e8:	(bad)  
   14002d9e9:	lock mov bh,bh
   14002d9ec:	(bad)  
   14002d9ed:	lock test bh,bh
   14002d9f0:	(bad)  
   14002d9f1:	out    dx,eax
   14002d9f2:	jg     0x14002d9f3
   14002d9f4:	(bad)  
   14002d9f5:	in     eax,dx
   14002d9f6:	js     0x14002d9f7
   14002d9f8:	(bad)  
   14002d9f9:	out    0x74,eax
   14002d9fb:	(bad)  
   14002d9fc:	(bad)  
   14002d9fd:	loope  0x14002da6b
   14002d9ff:	(bad)  
   14002da00:	cli    
   14002da01:	frstor [rdi-0x1]
   14002da04:	neg    ecx
   14002da06:	movsxd edi,edi
   14002da08:	hlt    
   14002da09:	rcr    BYTE PTR [rbp-0x1],1
   14002da0c:	repnz retf 0xff58
   14002da10:	in     eax,dx
   14002da11:	rcl    DWORD PTR [rdi+rdi*8-0x16],0xba
   14002da16:	rex.WRB jmp r14
   14002da19:	mov    cl,0x48
   14002da1b:	(bad)  
   14002da1c:	fild   QWORD PTR [rax-0x7d4300be]
   14002da22:	sub    al,0xe9
   14002da24:	movabs eax,ds:0x5c1b69
	...
   14002da85:	add    BYTE PTR [rax],al
   14002da87:	add    BYTE PTR [rbp-0x1376de87],dh
   14002da8d:	ret    0xef55
   14002da90:	cli    
   14002da91:	lock jg 0x14002da93
   14002da94:	cld    
   14002da95:	cmc    
   14002da96:	mov    edi,edi
   14002da98:	cld    
   14002da99:	not    DWORD PTR [rdx-0x62050201]
   14002da9f:	push   rax
   14002daa1:	sti    
   14002daa2:	scas   eax,DWORD PTR es:[rdi]
   14002daa3:	call   QWORD PTR [rdi-0x5a000b08]
   14002daa9:	(bad)  
   14002daaa:	(bad)  
   14002daab:	jmp    QWORD PTR [rsi-0x62000001]
   14002dab1:	(bad)  
   14002dab2:	(bad)  
   14002dab3:	push   QWORD PTR [rdx-0xb]
   14002dab6:	(bad)  
   14002dab7:	dec    DWORD PTR [rax-0x1b]
   14002daba:	(bad)  
   14002dabb:	(bad)  
   14002dabc:	cmp    ebx,ebx
   14002dabe:	(bad)  
   14002dabf:	push   QWORD PTR [rdx+rdx*8]
   14002dac2:	(bad)  
   14002dac3:	push   QWORD PTR [rax]
   14002dac5:	retf   
   14002dac6:	(bad)  
   14002dac7:	jmp    FWORD PTR [rip+0x2fffffc3]        # 0x17002da90
   14002dacd:	sar    bh,0xff
   14002dad0:	xor    al,0xc1
   14002dad2:	(bad)  
   14002dad3:	(bad)  
   14002dad4:	cmp    eax,0x60ffffc8
   14002dad9:	int3   
   14002dada:	idiv   bh
   14002dadc:	sar    BYTE PTR [rdi+0x6ca1f17c],1
   14002dae2:	and    bh,BYTE PTR [rsi+0x1f304b72]
   14002dae8:	add    BYTE PTR [rax],al
   14002daea:	push   rbp
   14002daeb:	add    eax,DWORD PTR [rax]
	...
   14002db41:	add    BYTE PTR [rax],al
   14002db43:	add    BYTE PTR [rcx-0x2aaae291],ch
   14002db49:	lods   al,BYTE PTR ds:[rsi]
   14002db4a:	push   rsp
   14002db4b:	call   0x13b89c549
   14002db50:	(bad)  
   14002db51:	icebp  
   14002db52:	xchg   ebp,eax
   14002db53:	(bad)  
   14002db54:	std    
   14002db55:	repz xchg ebp,eax
   14002db57:	(bad)  
   14002db58:	std    
   14002db59:	hlt    
   14002db5a:	xchg   edx,eax
   14002db5b:	(bad)  
   14002db5c:	(bad)  
   14002db5d:	repz (bad) 
   14002db5f:	(bad)  
   14002db60:	(bad)  
   14002db61:	icebp  
   14002db62:	mov    edi,?
   14002db64:	(bad)  
   14002db65:	lock mov bh,bh
   14002db68:	(bad)  
   14002db69:	lock test edi,edi
   14002db6c:	(bad)  
   14002db6d:	out    dx,eax
   14002db6e:	cmp    edi,0xff7becfe
   14002db74:	std    
   14002db75:	jmp    0x12800daf0
   14002db7a:	jno    0x14002db7b
   14002db7c:	std    
   14002db7d:	loopne 0x14002dbe9
   14002db7f:	(bad)  
   14002db80:	clc    
   14002db81:	(bad)  [rsi-0x1]
   14002db84:	not    ah
   14002db86:	(bad)  
   14002db87:	push   rbp
   14002db89:	iret   
   14002db8a:	pop    rsp
   14002db8b:	push   rax
   14002db8d:	(bad)  
   14002db8e:	pop    rax
   14002db8f:	(bad)  
   14002db90:	in     eax,dx
   14002db91:	mov    esi,0xb8e8ff54
   14002db96:	rex.WRB jmp r12
   14002db99:	mov    cl,0x46
   14002db9b:	(bad)  
   14002db9c:	fisub  DWORD PTR [rbx+0x6aa2fd3e]
   14002dba2:	sbb    ecx,ecx
   14002dba4:	movabs eax,ds:0xc1b69
	...
   14002dc05:	add    BYTE PTR [rax],al
   14002dc07:	add    BYTE PTR [rsi-0x36cedf88],dh
   14002dc0d:	xchg   ebx,eax
   14002dc0e:	xor    eax,0x77ebf9d7
   14002dc13:	(bad)  
   14002dc14:	sti    
   14002dc15:	icebp  
   14002dc16:	xchg   bh,bh
   14002dc18:	cld    
   14002dc19:	test   BYTE PTR [rdi-0x67060201],0xff
   14002dc20:	std    
   14002dc21:	sti    
   14002dc22:	movabs al,ds:0xf9f994ffb3fcefff
   14002dc2b:	jmp    FWORD PTR [rcx-0x59000001]
   14002dc31:	(bad)  
   14002dc32:	(bad)  
   14002dc33:	call   FWORD PTR [rbp+0x6fffffff]
   14002dc39:	repz (bad) 
   14002dc3b:	inc    DWORD PTR [rdi-0x1b]
   14002dc3e:	(bad)  
   14002dc3f:	(bad)  
   14002dc40:	cmp    ebx,ebx
   14002dc42:	(bad)  
   14002dc43:	push   QWORD PTR [rdx+rdx*8]
   14002dc46:	(bad)  
   14002dc47:	push   QWORD PTR [rax]
   14002dc49:	retf   
   14002dc4a:	(bad)  
   14002dc4b:	jmp    FWORD PTR [rdi]
   14002dc4d:	(bad)  
   14002dc4e:	(bad)  
   14002dc4f:	jmp    FWORD PTR [rdi]
   14002dc51:	sar    bh,0xff
   14002dc54:	xor    eax,eax
   14002dc56:	(bad)  
   14002dc57:	(bad)  
   14002dc58:	cmp    eax,0x5dffffc8
   14002dc5d:	retf   0xfff8
   14002dc60:	(bad)
   14002dc63:	out    dx,eax
   14002dc64:	lahf   
   14002dc65:	push   0x22
   14002dc67:	mov    dh,0x6c
   14002dc69:	rex.RXB xor r11b,BYTE PTR [rip+0x3550000]        # 0x14357dc70
   14002dc70:	add    BYTE PTR [rax],al
   14002dc72:	push   rbp
   14002dc73:	add    DWORD PTR [rax],eax
	...
   14002dcbd:	add    BYTE PTR [rax],al
   14002dcbf:	add    BYTE PTR [rcx-0x2aaae291],ch
   14002dcc5:	stos   DWORD PTR es:[rdi],eax
   14002dcc6:	push   rbx
   14002dcc7:	out    0xf7,al
   14002dcc9:	in     al,0x83
   14002dccb:	stc    
   14002dccc:	std    
   14002dccd:	repnz xchg esi,eax
   14002dccf:	(bad)  
   14002dcd0:	std    
   14002dcd1:	repz xchg esi,eax
   14002dcd3:	(bad)  
   14002dcd4:	std    
   14002dcd5:	hlt    
   14002dcd6:	xchg   edx,eax
   14002dcd7:	(bad)  
   14002dcd8:	std    
   14002dcd9:	pause  
   14002dcdb:	(bad)  
   14002dcdc:	(bad)  
   14002dcdd:	repnz mov ?,edi
   14002dce0:	(bad)  
   14002dce1:	lock mov edi,edi
   14002dce4:	(bad)  
   14002dce5:	repnz xchg bh,bh
   14002dce8:	(bad)  
   14002dce9:	out    dx,eax
   14002dcea:	cmp    edi,0xfffffffe
   14002dced:	out    dx,al
   14002dcee:	jge    0x14002dcef
   14002dcf0:	(bad)  
   14002dcf1:	jmp    0x14002dd6c
   14002dcf3:	(bad)  
   14002dcf4:	(bad)  
   14002dcf5:	call   0x12700dc6d
   14002dcfa:	outs   dx,DWORD PTR ds:[rsi]
   14002dcfb:	(bad)  
   14002dcfc:	sti    
   14002dcfd:	(bad)  [rax-0x1]
   14002dd00:	neg    ecx
   14002dd02:	movsxd edi,edi
   14002dd04:	not    esp
   14002dd06:	pop    rsi
   14002dd07:	push   rsp
   14002dd09:	retf   
   14002dd0a:	pop    rdx
   14002dd0b:	(bad)  
   14002dd0c:	out    dx,eax
   14002dd0d:	(bad)  
   14002dd0e:	push   rsi
   14002dd0f:	(bad)  
   14002dd10:	jmp    0x124022ed1
   14002dd15:	mov    ch,0x4f
   14002dd17:	jmp    rcx
   14002dd19:	stos   DWORD PTR es:[rdi],eax
   14002dd1a:	rex.R inc edx
   14002dd1d:	mov    DWORD PTR [rsi],ebp
   14002dd1f:	jmp    0x14002dcc3
   14002dd21:	push   0x1b
   14002dd23:	ja     0x14002dd25
	...
   14002dd89:	add    BYTE PTR [rax],al
   14002dd8b:	add    BYTE PTR [rsi-0x1061df88],dh
   14002dd91:	(bad)  
   14002dd92:	pop    rax
   14002dd93:	repnz sti 
   14002dd95:	out    dx,eax
   14002dd96:	cmp    edi,0xff8bf3fc
   14002dd9c:	std    
   14002dd9d:	not    DWORD PTR [rdi+rdi*8-0x620603]
   14002dda4:	(bad)  
   14002dda5:	sti    
   14002dda6:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002dda7:	(bad)  
   14002dda8:	out    dx,eax
   14002dda9:	cld    
   14002ddaa:	mov    bh,0xff
   14002ddac:	xchg   edx,eax
   14002ddad:	cli    
   14002ddae:	sti    
   14002ddaf:	jmp    FWORD PTR [rcx-0x59000001]
   14002ddb5:	(bad)  
   14002ddb6:	(bad)  
   14002ddb7:	call   FWORD PTR [rbp+0x6fffffff]
   14002ddbd:	repz (bad) 
   14002ddbf:	dec    DWORD PTR [rax-0x1b]
   14002ddc2:	(bad)  
   14002ddc3:	(bad)  
   14002ddc4:	cmp    ebx,ebx
   14002ddc6:	(bad)  
   14002ddc7:	push   QWORD PTR [rdx+rdx*8]
   14002ddca:	(bad)  
   14002ddcb:	push   QWORD PTR [rcx]
   14002ddcd:	retf   
   14002ddce:	(bad)  
   14002ddcf:	jmp    FWORD PTR [rip+0x2fffffc3]        # 0x17002dd98
   14002ddd5:	sar    bh,0xff
   14002ddd8:	xor    al,0xc1
   14002ddda:	(bad)  
   14002dddb:	(bad)  
   14002dddc:	cmp    eax,0x59ffffc7
   14002dde1:	retf   0xfff8
   14002dde4:	mov    ebp,0x9fef80b4
   14002dde9:	push   0x22
   14002ddeb:	mov    esi,0x3b265d8d
   14002ddf0:	add    BYTE PTR [rax],al
   14002ddf2:	push   rbp
   14002ddf3:	add    al,0x0
   14002ddf5:	add    BYTE PTR [rbp+0x1],dl
	...
   14002de38:	stos   BYTE PTR es:[rdi],al
   14002de39:	jo     0x14002de59
   14002de3b:	or     al,0xaa
   14002de3d:	jo     0x14002de5c
   14002de3f:	mov    dl,ch
   14002de41:	lods   al,BYTE PTR ds:[rsi]
   14002de42:	push   rsp
   14002de43:	out    0xf9,al
   14002de45:	in     al,0x82
   14002de47:	stc    
   14002de48:	std    
   14002de49:	icebp  
   14002de4a:	xchg   esi,eax
   14002de4b:	(bad)  
   14002de4c:	std    
   14002de4d:	repz xchg ebp,eax
   14002de4f:	(bad)  
   14002de50:	std    
   14002de51:	hlt    
   14002de52:	xchg   esp,eax
   14002de53:	(bad)  
   14002de54:	std    
   14002de55:	hlt    
   14002de56:	xchg   edx,eax
   14002de57:	(bad)  
   14002de58:	(bad)  
   14002de59:	repz (bad) 
   14002de5b:	(bad)  
   14002de5c:	(bad)  
   14002de5d:	lock mov edi,edi
   14002de60:	(bad)  
   14002de61:	icebp  
   14002de62:	mov    edi,edi
   14002de64:	(bad)  
   14002de65:	out    dx,eax
   14002de66:	test   edi,edi
   14002de68:	(bad)  
   14002de69:	out    dx,eax
   14002de6a:	cmp    bh,0xfe
   14002de6d:	in     al,dx
   14002de6e:	jnp    0x14002de6f
   14002de70:	std    
   14002de71:	(bad)  
   14002de72:	jne    0x14002de73
   14002de74:	std    
   14002de75:	out    0x71,al
   14002de77:	(bad)  
   14002de78:	cld    
   14002de79:	loop   0x14002dee9
   14002de7b:	(bad)  
   14002de7c:	cli    
   14002de7d:	(bad)  [rbp-0x1]
   14002de80:	not    ebp
   14002de82:	(bad)  
   14002de83:	push   rbp
   14002de85:	rcr    BYTE PTR [rbp-0x1],1
   14002de88:	repnz enter 0xff59,0xef
   14002de8d:	ret    0xff53
   14002de90:	out    0xba,eax
   14002de92:	push   rcx
   14002de93:	jmp    rcx
   14002de95:	mov    cl,0x4e
   14002de97:	(bad)  
   14002de98:	(bad)  [rdx+rax*2+0x1c6ca4fd]
   14002de9f:	enter  0x6aa2,0x1b
   14002dea3:	adc    al,0x0
	...
   14002df09:	add    BYTE PTR [rax],al
   14002df0b:	add    BYTE PTR [rsi-0x32c5df88],dh
   14002df11:	xchg   edi,eax
   14002df12:	cmp    edx,ebx
   14002df14:	stc    
   14002df15:	jmp    0x14002df8f
   14002df17:	(bad)  
   14002df18:	sti    
   14002df19:	repnz xchg edi,edi
   14002df1c:	cld    
   14002df1d:	cmc    
   14002df1e:	mov    ?,edi
   14002df20:	std    
   14002df21:	stc    
   14002df22:	xchg   esi,eax
   14002df23:	(bad)  
   14002df24:	(bad)  
   14002df25:	cli    
   14002df26:	sahf   
   14002df27:	(bad)  
   14002df28:	(bad)  
   14002df29:	cld    
   14002df2a:	test   eax,0xbafdf0ff
   14002df2f:	call   QWORD PTR [rbx-0x56000206]
   14002df35:	(bad)  
   14002df36:	(bad)  
   14002df37:	jmp    QWORD PTR [rbp-0x62000001]
   14002df3d:	(bad)  
   14002df3e:	(bad)  
   14002df3f:	push   QWORD PTR [rcx-0xd]
   14002df42:	(bad)  
   14002df43:	dec    DWORD PTR [rax-0x1b]
   14002df46:	(bad)  
   14002df47:	(bad)  
   14002df48:	cmp    bl,bl
   14002df4a:	(bad)  
   14002df4b:	push   QWORD PTR [rsp+rdx*8]
   14002df4e:	(bad)  
   14002df4f:	push   QWORD PTR [rax]
   14002df51:	retf   
   14002df52:	(bad)  
   14002df53:	jmp    FWORD PTR [rip+0x2dffffc4]        # 0x16e02df1d
   14002df59:	sar    bh,0xff
   14002df5c:	xor    eax,ecx
   14002df5e:	(bad)  
   14002df5f:	(bad)  
   14002df60:	cmp    eax,0x57ffffc7
   14002df65:	retf   
   14002df66:	sti    
   14002df67:	inc    ecx
   14002df69:	ret    
   14002df6a:	xchg   ecx,eax
   14002df6b:	cmc    
   14002df6c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002df6d:	jo     0x14002df93
   14002df6f:	rcr    BYTE PTR [rdi+riz*2+0x4f786c22],1
   14002df76:	(bad)  
   14002df77:	sldt   WORD PTR [rax]
   14002df7a:	push   rbp
   14002df7b:	add    DWORD PTR [rax],eax
	...
   14002dfb1:	add    BYTE PTR [rax],al
   14002dfb3:	add    BYTE PTR [rbx-0x51bee190],ch
   14002dfb9:	jae    0x14002dfdb
   14002dfbb:	mov    dh,0xe1
   14002dfbd:	mov    ebx,0xeffcea60
   14002dfc2:	xchg   esp,eax
   14002dfc3:	(bad)  
   14002dfc4:	std    
   14002dfc5:	repnz xchg esi,eax
   14002dfc7:	(bad)  
   14002dfc8:	(bad)  
   14002dfc9:	repnz xchg edi,eax
   14002dfcb:	(bad)  
   14002dfcc:	(bad)  
   14002dfcd:	repz xchg esp,eax
   14002dfcf:	(bad)  
   14002dfd0:	std    
   14002dfd1:	hlt    
   14002dfd2:	xchg   edx,eax
   14002dfd3:	(bad)  
   14002dfd4:	(bad)  
   14002dfd5:	repz (bad) 
   14002dfd7:	(bad)  
   14002dfd8:	(bad)  
   14002dfd9:	repnz (bad) 
   14002dfdb:	(bad)  
   14002dfdc:	(bad)  
   14002dfdd:	lock mov edi,edi
   14002dfe0:	(bad)  
   14002dfe1:	icebp  
   14002dfe2:	test   edi,edi
   14002dfe4:	(bad)  
   14002dfe5:	lock (bad) 
   14002dfe7:	(bad)  
   14002dfe8:	(bad)  
   14002dfe9:	out    dx,eax
   14002dfea:	jl     0x14002dfeb
   14002dfec:	(bad)  
   14002dfed:	jmp    0x14002e068
   14002dfef:	(bad)  
   14002dff0:	(bad)  
   14002dff1:	call   0x12500df69
   14002dff6:	jo     0x14002dff7
   14002dff8:	sti    
   14002dff9:	fild   QWORD PTR [rcx-0x1]
   14002dffc:	stc    
   14002dffd:	fsub   DWORD PTR [rdi+rdi*8-0xb]
   14002e001:	shl    BYTE PTR [rax-0x1],cl
   14002e004:	hlt    
   14002e005:	int    0x5c
   14002e007:	push   rcx
   14002e009:	(bad)
   14002e00c:	out    dx,al
   14002e00d:	mov    ebp,0xb6e9ff52
   14002e012:	rex.WRB (bad) 
   14002e014:	fld    TBYTE PTR [rsi-0x754500b2]
   14002e01a:	cmp    ebx,ebp
   14002e01c:	movabs ds:0x711c6a,eax
	...
   14002e08d:	add    BYTE PTR [rax],al
   14002e08f:	add    BYTE PTR [rsi-0x166fdf88],dh
   14002e095:	mov    esp,0xeffbed4f
   14002e09a:	jle    0x14002e09b
   14002e09c:	cld    
   14002e09d:	cmc    
   14002e09e:	mov    edi,edi
   14002e0a0:	std    
   14002e0a1:	not    DWORD PTR [rdx-0x63060201]
   14002e0a7:	(bad)  
   14002e0a8:	(bad)  
   14002e0a9:	sti    
   14002e0aa:	movabs ds:0xc0fcecffabfdffff,al
   14002e0b3:	call   QWORD PTR [rax-0x56000105]
   14002e0b9:	(bad)  
   14002e0ba:	(bad)  
   14002e0bb:	jmp    QWORD PTR [rbp-0x60000001]
   14002e0c1:	(bad)  
   14002e0c2:	(bad)  
   14002e0c3:	push   QWORD PTR [rcx-0xd]
   14002e0c6:	(bad)  
   14002e0c7:	dec    DWORD PTR [rax-0x1b]
   14002e0ca:	(bad)  
   14002e0cb:	(bad)  
   14002e0cc:	cmp    bl,bl
   14002e0ce:	(bad)  
   14002e0cf:	push   QWORD PTR [rsp+rdx*8]
   14002e0d2:	(bad)  
   14002e0d3:	push   QWORD PTR [rax]
   14002e0d5:	int    0xff
   14002e0d7:	jmp    FWORD PTR [rdi]
   14002e0d9:	(bad)  
   14002e0da:	(bad)  
   14002e0db:	jmp    FWORD PTR [rdi]
   14002e0dd:	sar    edi,0xff
   14002e0e0:	xor    eax,ecx
   14002e0e2:	(bad)  
   14002e0e3:	(bad)  
   14002e0e4:	cmp    al,0xc7
   14002e0e6:	(bad)  
   14002e0e7:	call   QWORD PTR [rdx-0x34]
   14002e0ea:	cld    
   14002e0eb:	(bad)  
   14002e0ec:	mov    edi,0xcbfdabd6
   14002e0f1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002e0f2:	pop    rcx
   14002e0f3:	out    0xa4,eax
   14002e0f5:	ins    DWORD PTR es:[rdi],dx
   14002e0f6:	and    eax,eax
   14002e0f8:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002e0f9:	ins    DWORD PTR es:[rdi],dx
   14002e0fa:	and    BYTE PTR [rbp-0x62],bl
   14002e0fd:	imul   esp,DWORD PTR [rsi+rcx*1],0x0
	...
   14002e128:	lods   al,BYTE PTR ds:[rsi]
   14002e129:	jno    0x14002e149
   14002e12b:	add    eax,0x4d1e71ac
   14002e130:	lods   al,BYTE PTR ds:[rsi]
   14002e131:	jno    0x14002e151
   14002e133:	test   eax,0xe04aa0cd
   14002e138:	repz fstp TBYTE PTR [rsp+rsi*8-0x3]
   14002e13d:	lock xchg esi,eax
   14002e13f:	(bad)  
   14002e140:	(bad)  
   14002e141:	repnz xchg edi,eax
   14002e143:	(bad)  
   14002e144:	(bad)  
   14002e145:	repnz xchg edi,eax
   14002e147:	(bad)  
   14002e148:	(bad)  
   14002e149:	repz xchg esp,eax
   14002e14b:	(bad)  
   14002e14c:	std    
   14002e14d:	hlt    
   14002e14e:	xchg   ebx,eax
   14002e14f:	(bad)  
   14002e150:	(bad)  
   14002e151:	repz (bad) 
   14002e153:	(bad)  
   14002e154:	(bad)  
   14002e155:	repnz (bad) 
   14002e157:	(bad)  
   14002e158:	(bad)  
   14002e159:	lock mov edi,edi
   14002e15c:	(bad)  
   14002e15d:	icebp  
   14002e15e:	mov    bh,bh
   14002e160:	(bad)  
   14002e161:	lock (bad) 
   14002e163:	(bad)  
   14002e164:	(bad)  
   14002e165:	out    dx,al
   14002e166:	cmp    bh,0xfe
   14002e169:	jmp    0x14002e1e5
   14002e16b:	(bad)  
   14002e16c:	std    
   14002e16d:	call   0x12700e0e7
   14002e172:	jno    0x14002e173
   14002e174:	cld    
   14002e175:	loopne 0x14002e1e4
   14002e177:	(bad)  
   14002e178:	cli    
   14002e179:	(bad)  [rdi-0x1]
   14002e17c:	clc    
   14002e17d:	(bad)  
   14002e17e:	(bad)  
   14002e17f:	push   rbp
   14002e181:	rcr    BYTE PTR [rdi+rdi*8-0xd],1
   14002e185:	retf   0xff5a
   14002e188:	lock ret 0xff56
   14002e18c:	jmp    0x14002e14a
   14002e18e:	push   rax
   14002e18f:	jmp    rbp
   14002e191:	mov    dl,0x4a
   14002e193:	call   rax
   14002e195:	movabs al,ds:0x7780c8347499f741
   14002e19e:	pop    rbx
   14002e19f:	(bad)  
   14002e1a0:	add    BYTE PTR [rax],al
   14002e1a2:	push   rbp
   14002e1a3:	add    al,BYTE PTR [rax]
   14002e1a5:	add    BYTE PTR [rbp+0x1],dl
	...
   14002e210:	mov    dh,0x79
   14002e212:	and    DWORD PTR [rip+0xffffffffc71f7aba],esp        # 0x107225cd2
   14002e218:	clc    
   14002e219:	call   0x131fee08e
   14002e21e:	xchg   bh,bh
   14002e220:	cld    
   14002e221:	test   BYTE PTR [rsi-0x6c070201],0xff
   14002e228:	(bad)  
   14002e229:	cli    
   14002e22a:	sahf   
   14002e22b:	(bad)  
   14002e22c:	(bad)  
   14002e22d:	cld    
   14002e22e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002e22f:	(bad)  
   14002e230:	(bad)  
   14002e231:	std    
   14002e232:	lods   al,BYTE PTR ds:[rsi]
   14002e233:	jmp    rbp
   14002e235:	cli    
   14002e236:	(bad)  
   14002e237:	dec    DWORD PTR [rdi-0x56000105]
   14002e23d:	(bad)  
   14002e23e:	(bad)  
   14002e23f:	jmp    QWORD PTR [rbx-0x60000001]
   14002e245:	(bad)  
   14002e246:	(bad)  
   14002e247:	push   QWORD PTR [rdx-0xb]
   14002e24a:	(bad)  
   14002e24b:	dec    DWORD PTR [rdx-0x1b]
   14002e24e:	(bad)  
   14002e24f:	(bad)  
   14002e250:	cmp    bl,bl
   14002e252:	(bad)  
   14002e253:	push   QWORD PTR [rsp+rdx*8]
   14002e256:	(bad)  
   14002e257:	push   QWORD PTR [rax]
   14002e259:	int    0xff
   14002e25b:	jmp    FWORD PTR [rdi]
   14002e25d:	(bad)  
   14002e25e:	(bad)  
   14002e25f:	jmp    FWORD PTR [rdi]
   14002e261:	sar    edi,0xff
   14002e264:	xor    eax,ecx
   14002e266:	(bad)  
   14002e267:	(bad)  
   14002e268:	cmp    al,0xc7
   14002e26a:	(bad)  
   14002e26b:	dec    DWORD PTR [rbx+rcx*8-0x3]
   14002e26f:	jmp    FWORD PTR [rdx-0x16003b2a]
   14002e275:	fadd   QWORD PTR [rdi+0x59aad0fa]
   14002e27b:	out    0xad,al
   14002e27d:	jae    0x14002e2a0
   14002e27f:	retf   0x73ae
   14002e282:	(bad)  
   14002e283:	xchg   ebx,eax
   14002e284:	scas   eax,DWORD PTR es:[rdi]
   14002e285:	jae    0x14002e2a6
   14002e287:	pop    rbp
   14002e288:	scas   eax,DWORD PTR es:[rdi]
   14002e289:	jae    0x14002e2aa
   14002e28b:	sub    BYTE PTR [rdi-0x51d6e08d],ch
   14002e291:	jae    0x14002e2b2
   14002e293:	add    ch,BYTE PTR [rsi-0x51fde18d]
   14002e299:	jb     0x14002e2b9
   14002e29b:	sub    DWORD PTR [rbp-0x52d6e18e],ebp
   14002e2a1:	jb     0x14002e2c1
   14002e2a3:	pop    rcx
   14002e2a4:	lods   eax,DWORD PTR ds:[rsi]
   14002e2a5:	jb     0x14002e2c5
   14002e2a7:	nop
   14002e2a8:	scas   al,BYTE PTR es:[rdi]
   14002e2a9:	jb     0x14002e2ca
   14002e2ab:	(bad)
   14002e2ae:	push   rbx
   14002e2af:	loop   0x14002e2a7
   14002e2b1:	fild   WORD PTR [rax-0x670e030a]
   14002e2b7:	(bad)  
   14002e2b8:	(bad)  
   14002e2b9:	repnz cdq 
   14002e2bb:	(bad)  
   14002e2bc:	(bad)  
   14002e2bd:	repz cdq 
   14002e2bf:	(bad)  
   14002e2c0:	(bad)  
   14002e2c1:	repz xchg edi,eax
   14002e2c3:	(bad)  
   14002e2c4:	(bad)  
   14002e2c5:	repz xchg esp,eax
   14002e2c7:	(bad)  
   14002e2c8:	std    
   14002e2c9:	hlt    
   14002e2ca:	xchg   edx,eax
   14002e2cb:	(bad)  
   14002e2cc:	(bad)  
   14002e2cd:	hlt    
   14002e2ce:	(bad)  
   14002e2cf:	(bad)  
   14002e2d0:	(bad)  
   14002e2d1:	repnz mov ?,edi
   14002e2d4:	(bad)  
   14002e2d5:	lock mov edi,edi
   14002e2d8:	(bad)  
   14002e2d9:	icebp  
   14002e2da:	mov    bh,bh
   14002e2dc:	(bad)  
   14002e2dd:	lock test bh,bh
   14002e2e0:	(bad)  
   14002e2e1:	out    dx,eax
   14002e2e2:	cmp    edi,0xff7cecfe
   14002e2e8:	(bad)  
   14002e2e9:	(bad)  
   14002e2ea:	js     0x14002e2eb
   14002e2ec:	(bad)  
   14002e2ed:	out    0x72,eax
   14002e2ef:	(bad)  
   14002e2f0:	std    
   14002e2f1:	in     eax,0x6f
   14002e2f3:	(bad)  
   14002e2f4:	sti    
   14002e2f5:	fild   QWORD PTR [rax-0x1]
   14002e2f8:	cli    
   14002e2f9:	fldenv [rdi+rdi*8-0xa]
   14002e2fd:	shl    DWORD PTR [rax-0x1],1
   14002e300:	hlt    
   14002e301:	int3   
   14002e302:	pop    rbp
   14002e303:	push   rax
   14002e305:	enter  0xff58,0xed
   14002e309:	mov    esi,0xb9e9ff53
   14002e30e:	rex.WRX jmp rdx
   14002e311:	lods   al,BYTE PTR ds:[rsi]
   14002e312:	rex.RX (bad) 
   14002e314:	mov    edx,0x80e53083
   14002e319:	(bad)  
   14002e31a:	(bad)  
   14002e31b:	xor    esp,DWORD PTR [esi+0x1af2]
   14002e322:	push   rbp
   14002e323:	add    al,0x0
   14002e325:	add    BYTE PTR [rbp+0x2],dl
	...
   14002e394:	mov    dh,0x79
   14002e396:	and    DWORD PTR [rax-0x24],esi
   14002e399:	stos   BYTE PTR es:[rdi],al
   14002e39a:	rex.B jrcxz 0x14002e398
   14002e39d:	in     eax,dx
   14002e39e:	jge    0x14002e39f
   14002e3a0:	cld    
   14002e3a1:	repz mov bh,bh
   14002e3a4:	std    
   14002e3a5:	not    DWORD PTR [rax-0x67060201]
   14002e3ab:	(bad)  
   14002e3ac:	(bad)  
   14002e3ad:	cli    
   14002e3ae:	sahf   
   14002e3af:	(bad)  
   14002e3b0:	(bad)  
   14002e3b1:	cld    
   14002e3b2:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002e3b3:	(bad)  
   14002e3b4:	(bad)  
   14002e3b5:	std    
   14002e3b6:	lods   eax,DWORD PTR ds:[rsi]
   14002e3b7:	(bad)  
   14002e3b8:	call   0xd302a8b7
   14002e3bd:	cld    
   14002e3be:	(bad)  
   14002e3bf:	jmp    FWORD PTR [rcx-0x5a000001]
   14002e3c5:	(bad)  
   14002e3c6:	(bad)  
   14002e3c7:	call   FWORD PTR [rdi+0x77ffffff]
   14002e3cd:	cmc    
   14002e3ce:	(bad)  
   14002e3cf:	dec    DWORD PTR [rbp-0x19]
   14002e3d2:	(bad)  
   14002e3d3:	(bad)  
   14002e3d4:	cmp    al,0xdc
   14002e3d6:	(bad)  
   14002e3d7:	push   QWORD PTR [rsi]
   14002e3d9:	(bad)  
   14002e3da:	(bad)  
   14002e3db:	push   QWORD PTR [rcx]
   14002e3dd:	int    0xff
   14002e3df:	jmp    FWORD PTR [rip+0x2fffffc7]        # 0x17002e3ac
   14002e3e5:	ret    
   14002e3e6:	(bad)  
   14002e3e7:	push   QWORD PTR [rbx]
   14002e3e9:	sar    edi,0xff
   14002e3ec:	cmp    esp,eax
   14002e3ee:	(bad)  
   14002e3ef:	inc    DWORD PTR [rdi-0x34]
   14002e3f2:	(bad)  
   14002e3f3:	call   QWORD PTR [rax-0x1000252f]
   14002e3f9:	out    0x9b,eax
   14002e3fb:	push   rbx
   14002e3fd:	in     al,dx
   14002e3fe:	(bad)  
   14002e3ff:	(bad)  
   14002e400:	lock xlat BYTE PTR ds:[rbx]
   14002e402:	jg     0x14002e3f8
   14002e404:	loopne 0x14002e3bf
   14002e406:	pop    rdi
   14002e407:	in     al,0xc7
   14002e409:	xchg   ebx,eax
   14002e40a:	cmp    eax,0x3d91c5d6
   14002e40f:	(bad)  
   14002e410:	mov    al,0x76
   14002e412:	and    ebp,ecx
   14002e414:	scas   eax,DWORD PTR es:[rdi]
   14002e415:	jbe    0x14002e438
   14002e417:	int    0xc4
   14002e419:	xchg   ebx,eax
   14002e41a:	cmp    al,0xd7
   14002e41c:	(bad)  
   14002e41d:	xchg   ebx,eax
   14002e41e:	cmp    eax,0x5bb4dcd7
   14002e423:	out    0xf2,al
   14002e425:	fdivr  DWORD PTR [rbx-0xd]
   14002e428:	std    
   14002e429:	repnz xchg esi,eax
   14002e42b:	(bad)  
   14002e42c:	std    
   14002e42d:	cmc    
   14002e42e:	fwait
   14002e42f:	(bad)  
   14002e430:	(bad)  
   14002e431:	cmc    
   14002e432:	pushf  
   14002e433:	(bad)  
   14002e434:	(bad)  
   14002e435:	hlt    
   14002e436:	(bad)  
   14002e437:	(bad)  
   14002e438:	(bad)  
   14002e439:	hlt    
   14002e43a:	pushf  
   14002e43b:	(bad)  
   14002e43c:	(bad)  
   14002e43d:	hlt    
   14002e43e:	xchg   esi,eax
   14002e43f:	(bad)  
   14002e440:	(bad)  
   14002e441:	hlt    
   14002e442:	xchg   ebp,eax
   14002e443:	(bad)  
   14002e444:	(bad)  
   14002e445:	hlt    
   14002e446:	xchg   ebx,eax
   14002e447:	(bad)  
   14002e448:	(bad)  
   14002e449:	hlt    
   14002e44a:	(bad)  
   14002e44b:	(bad)  
   14002e44c:	(bad)  
   14002e44d:	repnz (bad) 
   14002e44f:	(bad)  
   14002e450:	(bad)  
   14002e451:	repnz mov edi,edi
   14002e454:	(bad)  
   14002e455:	icebp  
   14002e456:	mov    bh,bh
   14002e458:	(bad)  
   14002e459:	icebp  
   14002e45a:	test   edi,edi
   14002e45c:	(bad)  
   14002e45d:	out    dx,eax
   14002e45e:	cmp    edi,0xff7deefe
   14002e464:	(bad)  
   14002e465:	jmp    0x14002e4e0
   14002e467:	(bad)  
   14002e468:	std    
   14002e469:	out    0x74,eax
   14002e46b:	(bad)  
   14002e46c:	std    
   14002e46d:	in     al,0x70
   14002e46f:	(bad)  
   14002e470:	cld    
   14002e471:	fild   QWORD PTR [rbx-0x1]
   14002e474:	cli    
   14002e475:	fisub  DWORD PTR [rsi-0x1]
   14002e478:	not    ebx
   14002e47a:	(bad)  
   14002e47b:	push   rbp
   14002e47d:	rcr    BYTE PTR [rdi-0x1],1
   14002e480:	repz retf 0xff5b
   14002e484:	out    dx,al
   14002e485:	ret    0xff56
   14002e488:	in     al,dx
   14002e489:	mov    ebp,0xb2e5ff52
   14002e48e:	rex.WXB dec r9
   14002e491:	nop
   14002e492:	xor    ebp,ebp
   14002e494:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002e495:	ins    BYTE PTR es:[rdi],dx
   14002e496:	sbb    al,0x98
   14002e498:	xor    eax,0x2f25feb9
   14002e49d:	mov    dl,0xfd
   14002e49f:	xor    dl,BYTE PTR [rbx]
   14002e4a1:	(bad)  
   14002e4a2:	or     DWORD PTR [rbx],0x4
   14002e4a5:	or     DWORD PTR [rbx+0x5],ebx
   14002e4a8:	add    BYTE PTR [rax],al
   14002e4aa:	push   rbp
   14002e4ab:	add    DWORD PTR [rax],eax
	...
   14002e511:	add    BYTE PTR [rax],al
   14002e513:	add    BYTE PTR [rsi-0x48f8de87],dh
   14002e519:	jns    0x14002e53c
   14002e51b:	test   eax,0xee51c2ed
   14002e520:	sti    
   14002e521:	lock jg 0x14002e523
   14002e524:	cld    
   14002e525:	hlt    
   14002e526:	mov    edi,edi
   14002e528:	std    
   14002e529:	not    DWORD PTR [rdx-0x66060201]
   14002e52f:	(bad)  
   14002e530:	(bad)  
   14002e531:	cli    
   14002e532:	movabs eax,ds:0xaffdffffa6fcffff
   14002e53b:	(bad)  
   14002e53c:	out    dx,al
   14002e53d:	cld    
   14002e53e:	ret    0x92ff
   14002e541:	sti    
   14002e542:	(bad)  
   14002e543:	jmp    FWORD PTR [rcx-0x5a000001]
   14002e549:	(bad)  
   14002e54a:	(bad)  
   14002e54b:	call   FWORD PTR [rdi+0x7fffffff]
   14002e551:	clc    
   14002e552:	(bad)  
   14002e553:	call   QWORD PTR [rcx-0x19]
   14002e556:	(bad)  
   14002e557:	(bad)  
   14002e558:	cmp    eax,0x36ffffde
   14002e55d:	xlat   BYTE PTR ds:[rbx]
   14002e55e:	(bad)  
   14002e55f:	push   QWORD PTR [rcx]
   14002e561:	(bad)  
   14002e562:	(bad)  
   14002e563:	jmp    FWORD PTR [rdi]
   14002e565:	enter  0xffff,0x2f
   14002e569:	ret    
   14002e56a:	(bad)  
   14002e56b:	push   QWORD PTR [rcx]
   14002e56d:	sar    edi,0xff
   14002e570:	cmp    esp,eax
   14002e572:	(bad)  
   14002e573:	inc    DWORD PTR [rbp-0x34]
   14002e576:	(bad)  
   14002e577:	(bad)  
   14002e578:	js     0x14002e548
   14002e57a:	jmp    0x14002e57b
   14002e57c:	(bad)  
   14002e57d:	call   0x12ff7e527
   14002e582:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002e583:	(bad)  
   14002e584:	stc    
   14002e585:	cmc    
   14002e586:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002e587:	(bad)  
   14002e588:	std    
   14002e589:	clc    
   14002e58a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002e58b:	(bad)  
   14002e58c:	std    
   14002e58d:	stc    
   14002e58e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002e58f:	(bad)  
   14002e590:	(bad)  
   14002e591:	stc    
   14002e592:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002e593:	(bad)  
   14002e594:	(bad)  
   14002e595:	stc    
   14002e596:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002e597:	(bad)  
   14002e598:	(bad)  
   14002e599:	stc    
   14002e59a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002e59b:	(bad)  
   14002e59c:	(bad)  
   14002e59d:	clc    
   14002e59e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002e59f:	(bad)  
   14002e5a0:	(bad)  
   14002e5a1:	clc    
   14002e5a2:	movabs ds:0xa3f7feffa2f7feff,al
   14002e5ab:	(bad)  
   14002e5ac:	(bad)  
   14002e5ad:	mul    BYTE PTR [rcx-0x60090101]
   14002e5b3:	(bad)  
   14002e5b4:	(bad)  
   14002e5b5:	hlt    
   14002e5b6:	pushf  
   14002e5b7:	(bad)  
   14002e5b8:	(bad)  
   14002e5b9:	cmc    
   14002e5ba:	cwde   
   14002e5bb:	(bad)  
   14002e5bc:	(bad)  
   14002e5bd:	cmc    
   14002e5be:	xchg   edi,eax
   14002e5bf:	(bad)  
   14002e5c0:	(bad)  
   14002e5c1:	hlt    
   14002e5c2:	xchg   ebx,eax
   14002e5c3:	(bad)  
   14002e5c4:	(bad)  
   14002e5c5:	hlt    
   14002e5c6:	nop
   14002e5c7:	(bad)  
   14002e5c8:	(bad)  
   14002e5c9:	repnz mov ?,edi
   14002e5cc:	(bad)  
   14002e5cd:	icebp  
   14002e5ce:	mov    edi,?
   14002e5d0:	(bad)  
   14002e5d1:	icebp  
   14002e5d2:	mov    bh,bh
   14002e5d4:	(bad)  
   14002e5d5:	icebp  
   14002e5d6:	test   edi,edi
   14002e5d8:	(bad)  
   14002e5d9:	out    dx,eax
   14002e5da:	(bad)  
   14002e5db:	(bad)  
   14002e5dc:	(bad)  
   14002e5dd:	out    dx,al
   14002e5de:	jle    0x14002e5df
   14002e5e0:	(bad)  
   14002e5e1:	jmp    0x14002e65d
   14002e5e3:	(bad)  
   14002e5e4:	(bad)  
   14002e5e5:	jmp    0x12700e55f
   14002e5ea:	jno    0x14002e5eb
   14002e5ec:	cld    
   14002e5ed:	loopne 0x14002e65d
   14002e5ef:	(bad)  
   14002e5f0:	sti    
   14002e5f1:	fisubr DWORD PTR [rax-0x1]
   14002e5f4:	clc    
   14002e5f5:	(bad)  
   14002e5f6:	fs push rsi
   14002e5f9:	shl    DWORD PTR [rcx-0x1],1
   14002e5fc:	hlt    
   14002e5fd:	retf   
   14002e5fe:	pop    rsp
   14002e5ff:	push   rcx
   14002e601:	(bad)  
   14002e602:	pop    rax
   14002e603:	(bad)  
   14002e604:	in     eax,dx
   14002e605:	mov    edi,0xb6e7ff55
   14002e60a:	rex.WR call rsi
   14002e60d:	lahf   
   14002e60e:	cmp    dh,ah
   14002e610:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002e611:	outs   dx,BYTE PTR ds:[rsi]
   14002e612:	sbb    al,0xc7
   14002e614:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002e615:	ins    BYTE PTR es:[rdi],dx
   14002e616:	sbb    al,0x1b
   14002e618:	mov    r14b,0xf9
   14002e61b:	(bad)  
   14002e61c:	sub    al,0xb3
   14002e61e:	inc    DWORD PTR [rbx+0x31]
   14002e621:	xchg   ch,dl
   14002e623:	and    BYTE PTR [rdx],al
   14002e625:	add    eax,0xa58
   14002e62a:	push   rbp
   14002e62b:	add    al,BYTE PTR [rax]
	...
   14002e695:	add    BYTE PTR [rax],al
   14002e697:	add    BYTE PTR [rsi-0x44d5de87],dh
   14002e69d:	jl     0x14002e6bf
   14002e69f:	(bad)  
   14002e6a0:	neg    ch
   14002e6a2:	addr32 stc 
   14002e6a4:	sti    
   14002e6a5:	icebp  
   14002e6a6:	cmp    edi,0xfffffffc
   14002e6a9:	cmc    
   14002e6aa:	(bad)  
   14002e6ab:	(bad)  
   14002e6ac:	std    
   14002e6ad:	clc    
   14002e6ae:	xchg   edx,eax
   14002e6af:	(bad)  
   14002e6b0:	(bad)  
   14002e6b1:	stc    
   14002e6b2:	fwait
   14002e6b3:	(bad)  
   14002e6b4:	(bad)  
   14002e6b5:	cli    
   14002e6b6:	movabs eax,ds:0xb1fdffffa8fcffff
   14002e6bf:	push   rcx
   14002e6c1:	cld    
   14002e6c2:	mov    edi,0xfdfb94ff
   14002e6c7:	jmp    FWORD PTR [rcx-0x59000001]
   14002e6cd:	(bad)  
   14002e6ce:	(bad)  
   14002e6cf:	jmp    QWORD PTR [rax-0x76000001]
   14002e6d5:	sti    
   14002e6d6:	(bad)  
   14002e6d7:	call   QWORD PTR [rbp-0x17]
   14002e6da:	(bad)  
   14002e6db:	(bad)  
   14002e6dc:	ds (bad) 
   14002e6df:	push   QWORD PTR [rdi]
   14002e6e1:	xlat   BYTE PTR ds:[rbx]
   14002e6e2:	(bad)  
   14002e6e3:	push   QWORD PTR [rbx]
   14002e6e5:	iret   
   14002e6e6:	(bad)  
   14002e6e7:	push   QWORD PTR [rax]
   14002e6e9:	retf   0xffff
   14002e6ec:	(bad)  
   14002e6ed:	ret    
   14002e6ee:	(bad)  
   14002e6ef:	push   QWORD PTR [rcx]
   14002e6f1:	ret    
   14002e6f2:	(bad)  
   14002e6f3:	push   QWORD PTR [rdi]
   14002e6f5:	ret    
   14002e6f6:	(bad)  
   14002e6f7:	inc    DWORD PTR [rax-0x35]
   14002e6fa:	(bad)  
   14002e6fb:	jmp    FWORD PTR [rax-0x32]
   14002e6fe:	cmc    
   14002e6ff:	jmp    rax
   14002e701:	in     al,0xad
   14002e703:	push   rsp
   14002e705:	out    dx,eax
   14002e706:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002e707:	(bad)  
   14002e708:	stc    
   14002e709:	cmc    
   14002e70a:	lods   al,BYTE PTR ds:[rsi]
   14002e70b:	(bad)  
   14002e70c:	std    
   14002e70d:	stc    
   14002e70e:	scas   eax,DWORD PTR es:[rdi]
   14002e70f:	(bad)  
   14002e710:	(bad)  
   14002e711:	sti    
   14002e712:	mov    al,0xff
   14002e714:	(bad)  
   14002e715:	sti    
   14002e716:	scas   al,BYTE PTR es:[rdi]
   14002e717:	(bad)  
   14002e718:	(bad)  
   14002e719:	sti    
   14002e71a:	lods   eax,DWORD PTR ds:[rsi]
   14002e71b:	(bad)  
   14002e71c:	(bad)  
   14002e71d:	sti    
   14002e71e:	lods   al,BYTE PTR ds:[rsi]
   14002e71f:	(bad)  
   14002e720:	(bad)  
   14002e721:	stc    
   14002e722:	test   al,0xff
   14002e724:	(bad)  
   14002e725:	clc    
   14002e726:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002e727:	(bad)  
   14002e728:	(bad)  
   14002e729:	clc    
   14002e72a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002e72b:	(bad)  
   14002e72c:	(bad)  
   14002e72d:	mul    DWORD PTR [rcx-0x62080101]
   14002e733:	(bad)  
   14002e734:	(bad)  
   14002e735:	neg    DWORD PTR [rdi+rdi*8-0x670a02]
   14002e73c:	(bad)  
   14002e73d:	not    BYTE PTR [rbp-0x6e0a0101]
   14002e743:	(bad)  
   14002e744:	(bad)  
   14002e745:	repz mov ?,edi
   14002e748:	(bad)  
   14002e749:	repnz mov edi,?
   14002e74c:	(bad)  
   14002e74d:	icebp  
   14002e74e:	mov    edi,edi
   14002e750:	(bad)  
   14002e751:	icebp  
   14002e752:	xchg   bh,bh
   14002e754:	(bad)  
   14002e755:	lock (bad) 
   14002e757:	(bad)  
   14002e758:	(bad)  
   14002e759:	out    dx,al
   14002e75a:	jle    0x14002e75b
   14002e75c:	(bad)  
   14002e75d:	jmp    0x14002e7d9
   14002e75f:	(bad)  
   14002e760:	(bad)  
   14002e761:	jmp    0x12700e6dd
   14002e766:	jno    0x14002e767
   14002e768:	cld    
   14002e769:	loopne 0x14002e7d9
   14002e76b:	(bad)  
   14002e76c:	sti    
   14002e76d:	(bad)  [rax-0x1]
   14002e770:	cli    
   14002e771:	xlat   BYTE PTR ds:[rbx]
   14002e772:	gs push rdi
   14002e775:	shl    BYTE PTR [rdx-0x1],cl
   14002e778:	repz retf 
   14002e77a:	pop    rdi
   14002e77b:	push   rcx
   14002e77d:	enter  0xff5a,0xef
   14002e781:	rcl    DWORD PTR [rbp-0x1],0xea
   14002e785:	mov    eax,0xace0ff50
   14002e78a:	rex.R std 
   14002e78c:	mov    ecx,0xa6e22b81
   14002e791:	ins    BYTE PTR es:[rdi],dx
   14002e792:	sbb    al,0x44
   14002e794:	add    BYTE PTR [rax],al
   14002e796:	add    BYTE PTR [rax],al
   14002e798:	push   rax
   14002e799:	mov    bh,0xf5
   14002e79b:	or     BYTE PTR [rip+0x3151ffb3],ch        # 0x17154e754
   14002e7a1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002e7a2:	icebp  
   14002e7a3:	(bad)  
   14002e7a4:	add    BYTE PTR [rax],al
   14002e7a6:	push   rbp
   14002e7a7:	adc    BYTE PTR [rax],al
   14002e7a9:	add    BYTE PTR [rbp+0x5],dl
	...
   14002e81c:	mov    bh,0x79
   14002e81e:	and    DWORD PTR [rcx-0x2a],ebx
   14002e821:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002e822:	rex.X loopne 0x14002e81f
   14002e825:	jmp    0x14002e89e
   14002e827:	(bad)  
   14002e828:	std    
   14002e829:	icebp  
   14002e82a:	xchg   edi,edi
   14002e82c:	std    
   14002e82d:	cmc    
   14002e82e:	nop
   14002e82f:	(bad)  
   14002e830:	(bad)  
   14002e831:	clc    
   14002e832:	xchg   esp,eax
   14002e833:	(bad)  
   14002e834:	(bad)  
   14002e835:	stc    
   14002e836:	pushf  
   14002e837:	(bad)  
   14002e838:	(bad)  
   14002e839:	sti    
   14002e83a:	movabs ds:0xaffcffffa7fcffff,al
   14002e843:	push   rsi
   14002e845:	cld    
   14002e846:	mov    ebx,0xfcfa94ff
   14002e84b:	jmp    FWORD PTR [rax-0x59000001]
   14002e851:	(bad)  
   14002e852:	(bad)  
   14002e853:	jmp    QWORD PTR [rax-0x6d000001]
   14002e859:	(bad)  
   14002e85a:	(bad)  
   14002e85b:	call   FWORD PTR [rbx-0x14]
   14002e85e:	(bad)  
   14002e85f:	inc    DWORD PTR [rcx-0x1f]
   14002e862:	(bad)  
   14002e863:	push   QWORD PTR [rdi]
   14002e865:	fdivr  st,st(7)
   14002e867:	push   QWORD PTR [rcx+rdx*8]
   14002e86a:	(bad)  
   14002e86b:	push   QWORD PTR [rax]
   14002e86d:	retf   0xffff
   14002e870:	(bad)  
   14002e871:	ret    
   14002e872:	(bad)  
   14002e873:	push   QWORD PTR [rax]
   14002e875:	sar    edi,0xff
   14002e878:	ss ret 
   14002e87a:	(bad)  
   14002e87b:	(bad)  
   14002e87c:	ds retf 0xffff
   14002e880:	pop    rcx
   14002e881:	int    0xfa
   14002e883:	dec    ecx
   14002e885:	loopne 0x14002e841
   14002e887:	push   rdx
   14002e889:	in     eax,dx
   14002e88a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002e88b:	(bad)  
   14002e88c:	clc    
   14002e88d:	hlt    
   14002e88e:	test   eax,0xacf8fbff
   14002e893:	(bad)  
   14002e894:	(bad)  
   14002e895:	cli    
   14002e896:	lods   eax,DWORD PTR ds:[rsi]
   14002e897:	(bad)  
   14002e898:	(bad)  
   14002e899:	sti    
   14002e89a:	lods   al,BYTE PTR ds:[rsi]
   14002e89b:	(bad)  
   14002e89c:	(bad)  
   14002e89d:	cli    
   14002e89e:	stos   BYTE PTR es:[rdi],al
   14002e89f:	(bad)  
   14002e8a0:	(bad)  
   14002e8a1:	stc    
   14002e8a2:	test   eax,0xa6f9feff
   14002e8a7:	(bad)  
   14002e8a8:	(bad)  
   14002e8a9:	clc    
   14002e8aa:	movabs ds:0x9cf7feffa0f8feff,eax
   14002e8b3:	(bad)  
   14002e8b4:	(bad)  
   14002e8b5:	neg    DWORD PTR [rdx-0x69090101]
   14002e8bb:	(bad)  
   14002e8bc:	(bad)  
   14002e8bd:	cmc    
   14002e8be:	xchg   ebx,eax
   14002e8bf:	(bad)  
   14002e8c0:	(bad)  
   14002e8c1:	pause  
   14002e8c3:	(bad)  
   14002e8c4:	(bad)  
   14002e8c5:	repz (bad) 
   14002e8c7:	(bad)  
   14002e8c8:	(bad)  
   14002e8c9:	repnz mov bh,bh
   14002e8cc:	(bad)  
   14002e8cd:	repnz xchg edi,edi
   14002e8d0:	(bad)  
   14002e8d1:	icebp  
   14002e8d2:	cmp    edi,0xfffffffe
   14002e8d5:	out    dx,al
   14002e8d6:	jg     0x14002e8d7
   14002e8d8:	(bad)  
   14002e8d9:	in     al,dx
   14002e8da:	jnp    0x14002e8db
   14002e8dc:	(bad)  
   14002e8dd:	jmp    0x125ffe859
   14002e8e2:	jae    0x14002e8e3
   14002e8e4:	cld    
   14002e8e5:	loop   0x14002e957
   14002e8e7:	(bad)  
   14002e8e8:	sti    
   14002e8e9:	(bad)  [rdi+rdi*8-0x6]
   14002e8ed:	xlat   BYTE PTR ds:[rbx]
   14002e8ee:	push   si
   14002e8f1:	shl    DWORD PTR [rdi+rdi*8-0xc],cl
   14002e8f5:	iret   
   14002e8f6:	(bad)  
   14002e8f7:	push   rbx
   14002e8f9:	leave  
   14002e8fa:	pop    rsp
   14002e8fb:	push   rax
   14002e8fd:	ret    
   14002e8fe:	pop    rax
   14002e8ff:	(bad)  
   14002e900:	jmp    0x14002e8bd
   14002e902:	push   rbx
   14002e903:	jmp    rbp
   14002e905:	mov    al,0x4a
   14002e907:	inc    edx
   14002e909:	mov    DWORD PTR [rdi],ebp
   14002e90b:	out    0xa6,al
   14002e90d:	ins    DWORD PTR es:[rdi],dx
   14002e90e:	sbb    al,0x6b
	...
   14002e91c:	xor    esi,DWORD PTR [rcx-0x53d6b106]
   14002e922:	(bad)  
   14002e923:	pop    rbp
   14002e924:	or     eax,0x3187621
   14002e929:	or     BYTE PTR [rdx+0x9],bl
   14002e92c:	add    BYTE PTR [rax],al
   14002e92e:	push   rbp
   14002e92f:	add    DWORD PTR [rax],eax
	...
   14002e99d:	add    BYTE PTR [rax],al
   14002e99f:	add    BYTE PTR [rdi-0x2384de87],dh
   14002e9a5:	stos   BYTE PTR es:[rdi],al
   14002e9a6:	rex.XB jrcxz 0x14002e9a5
   14002e9a9:	jmp    0x14002ea26
   14002e9ab:	(bad)  
   14002e9ac:	cld    
   14002e9ad:	repnz mov edi,edi
   14002e9b0:	std    
   14002e9b1:	not    BYTE PTR [rax-0x6a070101]
   14002e9b7:	(bad)  
   14002e9b8:	(bad)  
   14002e9b9:	cli    
   14002e9ba:	cdq    
   14002e9bb:	(bad)  
   14002e9bc:	(bad)  
   14002e9bd:	sti    
   14002e9be:	movabs eax,ds:0xaefcffffa8fcfeff
   14002e9c7:	(bad)  
   14002e9c8:	cli    
   14002e9c9:	sti    
   14002e9ca:	mov    bh,0xff
   14002e9cc:	xchg   edx,eax
   14002e9cd:	clc    
   14002e9ce:	cli    
   14002e9cf:	jmp    QWORD PTR [rbp-0x59000001]
   14002e9d5:	(bad)  
   14002e9d6:	(bad)  
   14002e9d7:	jmp    QWORD PTR [rdx-0x66000001]
   14002e9dd:	(bad)  
   14002e9de:	(bad)  
   14002e9df:	jmp    QWORD PTR [rdx-0x12]
   14002e9e2:	(bad)  
   14002e9e3:	inc    DWORD PTR [rsi-0x1e]
   14002e9e6:	(bad)  
   14002e9e7:	(bad)  
   14002e9e8:	cmp    edx,ebx
   14002e9ea:	(bad)  
   14002e9eb:	push   QWORD PTR [rbx]
   14002e9ed:	sar    bh,cl
   14002e9ef:	push   QWORD PTR [rcx]
   14002e9f1:	retf   
   14002e9f2:	(bad)  
   14002e9f3:	jmp    FWORD PTR [rdi]
   14002e9f5:	(bad)  
   14002e9f6:	(bad)  
   14002e9f7:	push   QWORD PTR [rax]
   14002e9f9:	ret    
   14002e9fa:	(bad)  
   14002e9fb:	push   QWORD PTR [rbx+rax*8]
   14002e9fe:	(bad)  
   14002e9ff:	(bad)  
   14002ea00:	cmp    al,0xc7
   14002ea02:	(bad)  
   14002ea03:	dec    DWORD PTR [rbx-0x34]
   14002ea06:	std    
   14002ea07:	call   FWORD PTR [rsi-0xe002e29]
   14002ea0d:	jmp    0x14002e9af
   14002ea0f:	push   rsi
   14002ea11:	repz movabs ds:0xa9f9fdffa6f6faff,eax
   14002ea1b:	(bad)  
   14002ea1c:	(bad)  
   14002ea1d:	cli    
   14002ea1e:	test   al,0xff
   14002ea20:	(bad)  
   14002ea21:	cli    
   14002ea22:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002ea23:	(bad)  
   14002ea24:	(bad)  
   14002ea25:	cli    
   14002ea26:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002ea27:	(bad)  
   14002ea28:	(bad)  
   14002ea29:	stc    
   14002ea2a:	movabs eax,ds:0x9cf8feff9ef8feff
   14002ea33:	(bad)  
   14002ea34:	(bad)  
   14002ea35:	neg    DWORD PTR [rax-0x6c080101]
   14002ea3b:	(bad)  
   14002ea3c:	(bad)  
   14002ea3d:	cmc    
   14002ea3e:	xchg   ecx,eax
   14002ea3f:	(bad)  
   14002ea40:	(bad)  
   14002ea41:	repz mov ?,edi
   14002ea44:	(bad)  
   14002ea45:	repz mov edi,edi
   14002ea48:	(bad)  
   14002ea49:	hlt    
   14002ea4a:	xchg   bh,bh
   14002ea4c:	(bad)  
   14002ea4d:	icebp  
   14002ea4e:	test   bh,bh
   14002ea50:	(bad)  
   14002ea51:	out    dx,al
   14002ea52:	jg     0x14002ea53
   14002ea54:	(bad)  
   14002ea55:	in     eax,dx
   14002ea56:	jnp    0x14002ea57
   14002ea58:	(bad)  
   14002ea59:	(bad)  
   14002ea5a:	jns    0x14002ea5b
   14002ea5c:	(bad)  
   14002ea5d:	in     eax,0x74
   14002ea5f:	(bad)  
   14002ea60:	cld    
   14002ea61:	loop   0x14002ead3
   14002ea63:	(bad)  
   14002ea64:	sti    
   14002ea65:	fisubr WORD PTR [rdi+rdi*8-0x6]
   14002ea69:	fisub  DWORD PTR [rdi-0x1]
   14002ea6c:	not    ah
   14002ea6e:	fs push rbp
   14002ea71:	shl    BYTE PTR [rcx-0x1],1
   14002ea74:	repz retf 
   14002ea76:	pop    rsi
   14002ea77:	push   rcx
   14002ea79:	(bad)
   14002ea7c:	in     al,dx
   14002ea7d:	mov    ebp,0xb2e6ff56
   14002ea82:	rex.WRB inc r15
   14002ea85:	lea    ebp,[rdi]
   14002ea87:	call   0xd0205833
   14002ea8c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002ea8d:	ins    DWORD PTR es:[rdi],dx
   14002ea8e:	sbb    eax,0x2
	...
   14002ea9b:	add    BYTE PTR [rip+0x2736f5ae],bh        # 0x16739e04f
   14002eaa1:	scas   eax,DWORD PTR es:[rdi]
   14002eaa2:	jmp    FWORD PTR [rsi+riz*1+0x69]
   14002eaa6:	mov    edx,0x5b09042d
   14002eaab:	adc    DWORD PTR [rax],eax
   14002eaad:	add    BYTE PTR [rbp+0x3],dl
	...
   14002eb20:	mov    bh,0x79
   14002eb22:	and    DWORD PTR [rip+0xffffffff972179b8],eax        # 0xd72464e0
   14002eb28:	jrcxz  0x14002ead9
   14002eb2a:	rex.RXB out 0xfb,al
   14002eb2d:	jmp    0x14002ebad
   14002eb2f:	(bad)  
   14002eb30:	cld    
   14002eb31:	repz mov edi,edi
   14002eb34:	std    
   14002eb35:	not    BYTE PTR [rcx-0x69070101]
   14002eb3b:	(bad)  
   14002eb3c:	(bad)  
   14002eb3d:	cli    
   14002eb3e:	cdq    
   14002eb3f:	(bad)  
   14002eb40:	(bad)  
   14002eb41:	sti    
   14002eb42:	movabs ds:0xadfcffffa8fcffff,al
   14002eb4b:	(bad)  
   14002eb4c:	(bad)  
   14002eb4d:	cld    
   14002eb4e:	mov    cl,0xff
   14002eb50:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002eb51:	div    esp
   14002eb53:	jmp    QWORD PTR [rax-0x57000001]
   14002eb59:	(bad)  
   14002eb5a:	(bad)  
   14002eb5b:	jmp    QWORD PTR [rbx-0x62000001]
   14002eb61:	(bad)  
   14002eb62:	(bad)  
   14002eb63:	jmp    FWORD PTR [rsi-0xf]
   14002eb66:	(bad)  
   14002eb67:	dec    DWORD PTR [rdx-0x1c]
   14002eb6a:	(bad)  
   14002eb6b:	(bad)  
   14002eb6c:	cmp    bl,bl
   14002eb6e:	(bad)  
   14002eb6f:	push   QWORD PTR [rsp+rdx*8]
   14002eb72:	(bad)  
   14002eb73:	push   QWORD PTR [rcx]
   14002eb75:	int    0xff
   14002eb77:	jmp    FWORD PTR [rdi]
   14002eb79:	(bad)  
   14002eb7a:	(bad)  
   14002eb7b:	jmp    FWORD PTR [rdi]
   14002eb7d:	ret    
   14002eb7e:	(bad)  
   14002eb7f:	push   QWORD PTR [rbx]
   14002eb81:	ret    
   14002eb82:	(bad)  
   14002eb83:	(bad)  
   14002eb84:	cmp    edi,eax
   14002eb86:	(bad)  
   14002eb87:	inc    DWORD PTR [rbp-0x33]
   14002eb8a:	(bad)  
   14002eb8b:	push   QWORD PTR [rdi-0x31]
   14002eb8e:	in     eax,dx
   14002eb8f:	jmp    rsp
   14002eb91:	in     eax,0xa5
   14002eb93:	push   rbx
   14002eb95:	lock movabs al,ds:0xa4f8fcffa3f5f8ff
   14002eb9f:	(bad)  
   14002eba0:	(bad)  
   14002eba1:	stc    
   14002eba2:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002eba3:	(bad)  
   14002eba4:	(bad)  
   14002eba5:	cli    
   14002eba6:	movabs ds:0x9cf8feffa0f9feff,al
   14002ebaf:	(bad)  
   14002ebb0:	(bad)  
   14002ebb1:	clc    
   14002ebb2:	(bad)  
   14002ebb3:	(bad)  
   14002ebb4:	(bad)  
   14002ebb5:	not    DWORD PTR [rdi-0x6d0a0101]
   14002ebbb:	(bad)  
   14002ebbc:	(bad)  
   14002ebbd:	hlt    
   14002ebbe:	nop
   14002ebbf:	(bad)  
   14002ebc0:	(bad)  
   14002ebc1:	cmc    
   14002ebc2:	mov    edi,?
   14002ebc4:	(bad)  
   14002ebc5:	hlt    
   14002ebc6:	xchg   edi,edi
   14002ebc8:	(bad)  
   14002ebc9:	icebp  
   14002ebca:	test   bh,bh
   14002ebcc:	(bad)  
   14002ebcd:	out    dx,al
   14002ebce:	cmp    bh,0xfe
   14002ebd1:	in     al,dx
   14002ebd2:	jl     0x14002ebd3
   14002ebd4:	(bad)  
   14002ebd5:	jmp    0x12601eb53
   14002ebda:	je     0x14002ebdb
   14002ebdc:	std    
   14002ebdd:	loop   0x14002ec51
   14002ebdf:	(bad)  
   14002ebe0:	sti    
   14002ebe1:	fisubr WORD PTR [rsi-0x1]
   14002ebe4:	cli    
   14002ebe5:	fldcw  WORD PTR [rcx-0x1]
   14002ebe8:	clc    
   14002ebe9:	(bad)  
   14002ebea:	gs push rbp
   14002ebed:	shl    BYTE PTR [rcx-0x1],1
   14002ebf0:	repz retf 
   14002ebf2:	pop    rdi
   14002ebf3:	push   rcx
   14002ebf5:	enter  0xff5b,0xed
   14002ebf9:	mov    esi,0xb6e6ff57
   14002ebfe:	rex.WRXB dec r8
   14002ec01:	(bad)  
   14002ec02:	xor    al,ch
   14002ec04:	test   eax,0xa7981d6f
   14002ec09:	outs   dx,BYTE PTR ds:[rsi]
   14002ec0a:	sbb    eax,0x7
	...
   14002ec1b:	add    BYTE PTR [rax-0x57],al
   14002ec1e:	out    dx,eax
   14002ec1f:	and    BYTE PTR [rdi],ah
   14002ec21:	scas   eax,DWORD PTR es:[rdi]
   14002ec22:	push   QWORD PTR [rdi+0x2e]
   14002ec25:	(bad)  
   14002ec26:	fild   WORD PTR [rsi+0x2]
   14002ec29:	add    al,0x57
   14002ec2b:	(bad)  
   14002ec2c:	add    BYTE PTR [rax],al
   14002ec2e:	push   rbp
   14002ec2f:	add    eax,0x0
	...
   14002eca4:	mov    bh,0x79
   14002eca6:	and    DWORD PTR [rax+rdi*4],ecx
   14002eca9:	jp     0x14002eccc
   14002ecab:	popf   
   14002ecac:	loop   0x14002ec5e
   14002ecae:	rex.RX out 0xfb,eax
   14002ecb1:	jmp    0x14002ec33
   14002ecb3:	(bad)  
   14002ecb4:	cld    
   14002ecb5:	repnz mov edi,edi
   14002ecb8:	std    
   14002ecb9:	not    BYTE PTR [rax-0x69070101]
   14002ecbf:	(bad)  
   14002ecc0:	(bad)  
   14002ecc1:	stc    
   14002ecc2:	fwait
   14002ecc3:	(bad)  
   14002ecc4:	(bad)  
   14002ecc5:	cli    
   14002ecc6:	movabs ds:0xabfcffffa6fcfeff,al
   14002eccf:	(bad)  
   14002ecd0:	(bad)  
   14002ecd1:	cld    
   14002ecd2:	mov    al,0xff
   14002ecd4:	mov    edi,0x9bffe1f8
   14002ecd9:	std    
   14002ecda:	(bad)  
   14002ecdb:	jmp    FWORD PTR [rax-0x5c000001]
   14002ece1:	(bad)  
   14002ece2:	(bad)  
   14002ece3:	call   FWORD PTR [rdi+0x7fffffff]
   14002ece9:	idiv   bh
   14002eceb:	call   QWORD PTR [rcx-0x17]
   14002ecee:	(bad)  
   14002ecef:	(bad)  
   14002ecf0:	cmp    eax,0x36ffffde
   14002ecf5:	xlat   BYTE PTR ds:[rbx]
   14002ecf6:	(bad)  
   14002ecf7:	push   QWORD PTR [rbx]
   14002ecf9:	iret   
   14002ecfa:	(bad)  
   14002ecfb:	push   QWORD PTR [rax]
   14002ecfd:	enter  0xffff,0x30
   14002ed01:	(bad)  
   14002ed02:	(bad)  
   14002ed03:	push   QWORD PTR [rcx]
   14002ed05:	ret    
   14002ed06:	(bad)  
   14002ed07:	push   QWORD PTR [rdi]
   14002ed09:	(bad)  
   14002ed0a:	(bad)  
   14002ed0b:	inc    DWORD PTR [rax-0x35]
   14002ed0e:	(bad)  
   14002ed0f:	call   FWORD PTR [rdx-0x33]
   14002ed12:	stc    
   14002ed13:	dec    ecx
   14002ed15:	fidiv  WORD PTR [rax-0x65130e01]
   14002ed1b:	push   rsi
   14002ed1d:	repnz pushf 
   14002ed1f:	(bad)  
   14002ed20:	cli    
   14002ed21:	neg    BYTE PTR [rsi-0x61070201]
   14002ed27:	(bad)  
   14002ed28:	(bad)  
   14002ed29:	stc    
   14002ed2a:	pushf  
   14002ed2b:	(bad)  
   14002ed2c:	(bad)  
   14002ed2d:	clc    
   14002ed2e:	cdq    
   14002ed2f:	(bad)  
   14002ed30:	(bad)  
   14002ed31:	neg    BYTE PTR [rax-0x6b090101]
   14002ed37:	(bad)  
   14002ed38:	(bad)  
   14002ed39:	cmc    
   14002ed3a:	(bad)  
   14002ed3b:	(bad)  
   14002ed3c:	(bad)  
   14002ed3d:	hlt    
   14002ed3e:	mov    edi,?
   14002ed40:	(bad)  
   14002ed41:	repz mov bh,bh
   14002ed44:	(bad)  
   14002ed45:	lock test edi,edi
   14002ed48:	(bad)  
   14002ed49:	out    dx,eax
   14002ed4a:	cmp    bh,0xfe
   14002ed4d:	in     al,dx
   14002ed4e:	jle    0x14002ed4f
   14002ed50:	(bad)  
   14002ed51:	(bad)  
   14002ed52:	jns    0x14002ed53
   14002ed54:	std    
   14002ed55:	in     eax,0x76
   14002ed57:	(bad)  
   14002ed58:	std    
   14002ed59:	loop   0x14002edcc
   14002ed5b:	(bad)  
   14002ed5c:	sti    
   14002ed5d:	fisubr WORD PTR [rsi-0x1]
   14002ed60:	stc    
   14002ed61:	fisubr DWORD PTR [rdx-0x1]
   14002ed64:	clc    
   14002ed65:	(bad)  
   14002ed66:	push   bp
   14002ed69:	shl    BYTE PTR [rdx-0x1],1
   14002ed6c:	repnz retf 
   14002ed6e:	(bad)  
   14002ed6f:	push   rcx
   14002ed71:	enter  0xff5b,0xed
   14002ed75:	mov    esi,0xb6e6ff57
   14002ed7a:	rex.WRXB dec r9
   14002ed7d:	nop
   14002ed7e:	xor    eax,ebp
   14002ed80:	test   eax,0xa89c1d6f
   14002ed85:	outs   dx,BYTE PTR ds:[rsi]
   14002ed86:	sbb    eax,0x7
	...
   14002ed9b:	add    BYTE PTR [rbp+rsi*4-0xc],cl
   14002ed9f:	or     ebp,DWORD PTR [rcx]
   14002eda1:	scas   eax,DWORD PTR es:[rdi]
   14002eda2:	(bad)  
   14002eda3:	jge    0x14002edd1
   14002eda5:	lahf   
   14002eda6:	lock pop rbp
   14002eda8:	add    BYTE PTR [rax],al
   14002edaa:	push   rbp
   14002edab:	sbb    eax,DWORD PTR [rax]
   14002edad:	add    BYTE PTR [rbp+0x8],dl
	...
   14002ee28:	mov    bh,0x79
   14002ee2a:	and    DWORD PTR [rax+rdi*4],ecx
   14002ee2d:	jp     0x14002ee50
   14002ee2f:	lahf   
   14002ee30:	loope  0x14002ede2
   14002ee32:	rex.WB out 0xfa,al
   14002ee35:	jmp    0x14002eeb6
   14002ee37:	(bad)  
   14002ee38:	cld    
   14002ee39:	icebp  
   14002ee3a:	mov    bh,bh
   14002ee3c:	std    
   14002ee3d:	not    BYTE PTR [rax-0x67080101]
   14002ee43:	(bad)  
   14002ee44:	(bad)  
   14002ee45:	clc    
   14002ee46:	fwait
   14002ee47:	(bad)  
   14002ee48:	(bad)  
   14002ee49:	stc    
   14002ee4a:	sahf   
   14002ee4b:	(bad)  
   14002ee4c:	(bad)  
   14002ee4d:	sti    
   14002ee4e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002ee4f:	(bad)  
   14002ee50:	(bad)  
   14002ee51:	sti    
   14002ee52:	stos   DWORD PTR es:[rdi],eax
   14002ee53:	(bad)  
   14002ee54:	(bad)  
   14002ee55:	sti    
   14002ee56:	mov    al,0xff
   14002ee58:	(bad)  
   14002ee5a:	retf   
   14002ee5b:	call   QWORD PTR [rcx-0x56000105]
   14002ee61:	(bad)  
   14002ee62:	(bad)  
   14002ee63:	jmp    QWORD PTR [rsi-0x5f000001]
   14002ee69:	(bad)  
   14002ee6a:	(bad)  
   14002ee6b:	dec    DWORD PTR [rdi+0x5bfffffc]
   14002ee71:	jmp    0x14002ee72
   14002ee73:	inc    DWORD PTR [rcx-0x21]
   14002ee76:	(bad)  
   14002ee77:	(bad)  
   14002ee78:	cmp    eax,ebx
   14002ee7a:	(bad)  
   14002ee7b:	push   QWORD PTR [rcx+rdx*8]
   14002ee7e:	(bad)  
   14002ee7f:	push   QWORD PTR [rax]
   14002ee81:	retf   
   14002ee82:	(bad)  
   14002ee83:	push   QWORD PTR [rax]
   14002ee85:	(bad)  
   14002ee86:	(bad)  
   14002ee87:	push   QWORD PTR [rax]
   14002ee89:	ret    
   14002ee8a:	(bad)  
   14002ee8b:	push   QWORD PTR [rbx+rax*8]
   14002ee8e:	(bad)  
   14002ee8f:	(bad)  
   14002ee90:	cmp    eax,0x4bffffc8
   14002ee95:	int    0xfd
   14002ee97:	call   FWORD PTR [rbx-0x1100312b]
   14002ee9d:	out    0x93,eax
   14002ee9f:	push   rbx
   14002eea1:	out    dx,al
   14002eea2:	xchg   esp,eax
   14002eea3:	(bad)  
   14002eea4:	clc    
   14002eea5:	icebp  
   14002eea6:	xchg   esi,eax
   14002eea7:	(bad)  
   14002eea8:	cld    
   14002eea9:	cmc    
   14002eeaa:	xchg   esi,eax
   14002eeab:	(bad)  
   14002eeac:	(bad)  
   14002eead:	not    BYTE PTR [rbp-0x6c080101]
   14002eeb3:	(bad)  
   14002eeb4:	(bad)  
   14002eeb5:	cmc    
   14002eeb6:	(bad)  
   14002eeb7:	(bad)  
   14002eeb8:	(bad)  
   14002eeb9:	cmc    
   14002eeba:	mov    edi,edi
   14002eebc:	(bad)  
   14002eebd:	repz mov bh,bh
   14002eec0:	(bad)  
   14002eec1:	icebp  
   14002eec2:	xchg   bh,bh
   14002eec4:	(bad)  
   14002eec5:	out    dx,eax
   14002eec6:	cmp    edi,0xff7fecfe
   14002eecc:	(bad)  
   14002eecd:	jmp    0x12801ee4c
   14002eed2:	jbe    0x14002eed3
   14002eed4:	cld    
   14002eed5:	loop   0x14002ef49
   14002eed7:	(bad)  
   14002eed8:	cli    
   14002eed9:	loopne 0x14002ef4b
   14002eedb:	(bad)  
   14002eedc:	stc    
   14002eedd:	fld    TBYTE PTR [rcx-0x1]
   14002eee0:	clc    
   14002eee1:	(bad)  
   14002eee2:	addr32 push rsp
   14002eee5:	shl    DWORD PTR [rbx-0x1],1
   14002eee8:	icebp  
   14002eee9:	retf   
   14002eeea:	(bad)  
   14002eeeb:	push   rax
   14002eeed:	(bad)  
   14002eeee:	pop    rsi
   14002eeef:	(bad)  
   14002eef0:	in     eax,dx
   14002eef1:	mov    edi,0xb5e6ff59
   14002eef6:	rex.WRX inc rdi
   14002eef9:	(bad)  
   14002eefa:	xor    ah,dh
   14002eefc:	stos   BYTE PTR es:[rdi],al
   14002eefd:	jo     0x14002ef1c
   14002eeff:	cdq    
   14002ef00:	test   eax,0x71d6f
	...
   14002ef1d:	add    BYTE PTR [rax],al
   14002ef1f:	add    BYTE PTR [rdi+rbp*4],ch
   14002ef22:	std    
   14002ef23:	jl     0x14002ef4f
   14002ef25:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002ef26:	div    DWORD PTR [rax+rax*1+0x0]
   14002ef2a:	push   rbp
   14002ef2b:	(bad)  
   14002ef2c:	add    BYTE PTR [rax],al
   14002ef2e:	push   rbp
   14002ef2f:	or     al,BYTE PTR [rax]
	...
   14002efa9:	add    BYTE PTR [rax],al
   14002efab:	add    BYTE PTR [rdi-0x48f1de87],dh
   14002efb1:	jns    0x14002efd4
   14002efb3:	xchg   ebx,eax
   14002efb4:	fisubr DWORD PTR [rcx-0x17051dba]
   14002efba:	jl     0x14002efba
   14002efbc:	cld    
   14002efbd:	lock mov bh,bh
   14002efc0:	cld    
   14002efc1:	repz (bad) 
   14002efc3:	(bad)  
   14002efc4:	std    
   14002efc5:	not    DWORD PTR [rbp-0x65080101]
   14002efcb:	(bad)  
   14002efcc:	(bad)  
   14002efcd:	clc    
   14002efce:	sahf   
   14002efcf:	(bad)  
   14002efd0:	(bad)  
   14002efd1:	cli    
   14002efd2:	movabs ds:0xaffcffffa8fbffff,eax
   14002efdb:	push   rbx
   14002efdd:	sti    
   14002efde:	mov    ebx,0xfbf891ff
   14002efe3:	jmp    QWORD PTR [rdx-0x59000001]
   14002efe9:	(bad)  
   14002efea:	(bad)  
   14002efeb:	jmp    QWORD PTR [rbx-0x63000001]
   14002eff1:	(bad)  
   14002eff2:	(bad)  
   14002eff3:	jmp    FWORD PTR [rax-0x11]
   14002eff6:	(bad)  
   14002eff7:	dec    DWORD PTR [rax-0x1c]
   14002effa:	(bad)  
   14002effb:	(bad)  
   14002effc:	cmp    al,0xda
   14002effe:	(bad)  
   14002efff:	push   QWORD PTR [rsi]
   14002f001:	sar    bh,cl
   14002f003:	push   QWORD PTR [rcx]
   14002f005:	int    0xff
   14002f007:	jmp    FWORD PTR [rdi]
   14002f009:	(bad)  
   14002f00a:	(bad)  
   14002f00b:	push   QWORD PTR [rax]
   14002f00d:	(bad)  
   14002f00e:	(bad)  
   14002f00f:	push   QWORD PTR [rbx]
   14002f011:	ret    
   14002f012:	(bad)  
   14002f013:	(bad)  
   14002f014:	cmp    al,bh
   14002f016:	(bad)  
   14002f017:	inc    DWORD PTR [rbp+rcx*8-0x1]
   14002f01b:	jmp    QWORD PTR [rdi-0x33]
   14002f01e:	repz call rdx
   14002f021:	fcomp  QWORD PTR [rdi-0x72191101]
   14002f027:	push   rsp
   14002f029:	in     al,dx
   14002f02a:	mov    ?,edi
   14002f02c:	stc    
   14002f02d:	repnz (bad) 
   14002f02f:	(bad)  
   14002f030:	std    
   14002f031:	hlt    
   14002f032:	(bad)  
   14002f033:	(bad)  
   14002f034:	std    
   14002f035:	repnz mov bh,bh
   14002f038:	(bad)  
   14002f039:	repnz xchg edi,edi
   14002f03c:	(bad)  
   14002f03d:	out    dx,eax
   14002f03e:	(bad)  
   14002f03f:	(bad)  
   14002f040:	(bad)  
   14002f041:	out    dx,eax
   14002f042:	cmp    bh,0xfe
   14002f045:	(bad)  
   14002f046:	jge    0x14002f047
   14002f048:	(bad)  
   14002f049:	jmp    0x12900efc7
   14002f04e:	jbe    0x14002f04f
   14002f050:	sti    
   14002f051:	jrcxz  0x14002f0c6
   14002f053:	(bad)  
   14002f054:	stc    
   14002f055:	fidiv  WORD PTR [rdx-0x1]
   14002f058:	clc    
   14002f059:	fisubr DWORD PTR [rbx-0x1]
   14002f05c:	not    esp
   14002f05e:	push   0x64d1f4ff
   14002f063:	push   rcx
   14002f065:	int3   
   14002f066:	(bad)  
   14002f067:	(bad)  
   14002f068:	out    dx,al
   14002f069:	enter  0xff5f,0xed
   14002f06d:	mov    edi,0xace1ff58
   14002f072:	rex.RXB stc 
   14002f074:	ret    
   14002f075:	mov    esi,DWORD PTR [rcx]
   14002f077:	in     eax,0xaa
   14002f079:	outs   dx,DWORD PTR ds:[rsi]
   14002f07a:	sbb    eax,0x1d6fa980
   14002f07f:	add    eax,0x0
	...
   14002f0a0:	lods   al,BYTE PTR cs:[rsi]
   14002f0a2:	sti    
   14002f0a3:	js     0x14002f0cd
   14002f0a5:	test   eax,0x85fd
   14002f0aa:	push   rsp
   14002f0ab:	and    al,BYTE PTR [rax]
   14002f0ad:	add    BYTE PTR [rbp+0xc],dl
	...
   14002f130:	mov    bh,0x79
   14002f132:	and    DWORD PTR [rdx],eax
   14002f134:	mov    bh,0x79
   14002f136:	and    DWORD PTR [rdx-0x2c],esi
   14002f139:	movabs eax,ds:0xedfbf66cd7f5e044
   14002f142:	xchg   bh,bh
   14002f144:	cld    
   14002f145:	repz (bad) 
   14002f147:	(bad)  
   14002f148:	std    
   14002f149:	not    BYTE PTR [rdi+rdi*8-0x670803]
   14002f150:	(bad)  
   14002f151:	clc    
   14002f152:	fwait
   14002f153:	(bad)  
   14002f154:	(bad)  
   14002f155:	cli    
   14002f156:	movabs eax,ds:0xabfbffffa6fbffff
   14002f15f:	(bad)  
   14002f160:	std    
   14002f161:	cld    
   14002f162:	mov    cl,0xff
   14002f164:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002f165:	imul   dh
   14002f167:	call   QWORD PTR [rdi-0x57000003]
   14002f16d:	(bad)  
   14002f16e:	(bad)  
   14002f16f:	jmp    QWORD PTR [rbp-0x60000001]
   14002f175:	(bad)  
   14002f176:	(bad)  
   14002f177:	(bad)  
   14002f178:	jl     0x14002f170
   14002f17a:	(bad)  
   14002f17b:	call   QWORD PTR [rdi+riz*8-0x1]
   14002f17f:	(bad)  
   14002f180:	ds fdivp st(7),st
   14002f183:	push   QWORD PTR [rdi]
   14002f185:	(bad)  
   14002f186:	(bad)  
   14002f187:	push   QWORD PTR [rbx]
   14002f189:	iret   
   14002f18a:	(bad)  
   14002f18b:	push   QWORD PTR [rax]
   14002f18d:	retf   0xffff
   14002f190:	xor    ah,al
   14002f192:	(bad)  
   14002f193:	push   QWORD PTR [rcx]
   14002f195:	ret    
   14002f196:	(bad)  
   14002f197:	push   QWORD PTR [rdi]
   14002f199:	(bad)  
   14002f19a:	(bad)  
   14002f19b:	(bad)  
   14002f19c:	ds retf 0xffff
   14002f1a0:	rex.WRX int 0xfc
   14002f1a3:	call   QWORD PTR [rdi-0x1800352d]
   14002f1a9:	fiadd  WORD PTR [rsi-0x7a190f01]
   14002f1af:	push   rsi
   14002f1b1:	in     al,dx
   14002f1b2:	test   edi,edi
   14002f1b4:	sti    
   14002f1b5:	out    dx,al
   14002f1b6:	test   bh,bh
   14002f1b8:	std    
   14002f1b9:	out    dx,al
   14002f1ba:	cmp    edi,0xff80eefe
   14002f1c0:	(bad)  
   14002f1c1:	(bad)  
   14002f1c2:	jnp    0x14002f1c3
   14002f1c4:	std    
   14002f1c5:	call   0x124fef144
   14002f1ca:	ja     0x14002f1cb
   14002f1cc:	sti    
   14002f1cd:	loop   0x14002f243
   14002f1cf:	(bad)  
   14002f1d0:	cli    
   14002f1d1:	fild   QWORD PTR [rdi-0x1]
   14002f1d4:	stc    
   14002f1d5:	fldcw  WORD PTR [rdi+rdi*8-0x9]
   14002f1d9:	(bad)  
   14002f1da:	push   0x66d2f5ff
   14002f1df:	push   rbx
   14002f1e1:	retf   
   14002f1e2:	movsxd edi,edi
   14002f1e4:	lock (bad) 
   14002f1e6:	pop    rbp
   14002f1e7:	(bad)  
   14002f1e8:	(bad)  
   14002f1e9:	mov    esi,0x9ed4ff59
   14002f1ee:	cmp    eax,0x1f73aeee
   14002f1f3:	retf   0x70aa
   14002f1f6:	(bad)  
   14002f1f7:	pop    rcx
	...
   14002f220:	sub    eax,0x277afaab
   14002f225:	stos   BYTE PTR es:[rdi],al
   14002f226:	std    
   14002f227:	xchg   esi,eax
   14002f228:	(bad)  
   14002f229:	(bad)  
   14002f22a:	(bad)  
   14002f22b:	(bad)  
   14002f22c:	add    BYTE PTR [rax],al
   14002f22e:	push   rbp
   14002f22f:	or     eax,0x0
	...
   14002f2b8:	mov    bh,0x79
   14002f2ba:	and    DWORD PTR [rdi-0x47],ecx
   14002f2bd:	jl     0x14002f2e0
   14002f2bf:	shl    esi,0xbb
   14002f2c2:	push   rbp
   14002f2c3:	(bad)  
   14002f2c4:	cli    
   14002f2c5:	jmp    0x130fff24a
   14002f2ca:	mov    edi,edi
   14002f2cc:	std    
   14002f2cd:	hlt    
   14002f2ce:	xchg   ecx,eax
   14002f2cf:	(bad)  
   14002f2d0:	std    
   14002f2d1:	not    BYTE PTR [rdi+rdi*8-0x660703]
   14002f2d8:	(bad)  
   14002f2d9:	stc    
   14002f2da:	sahf   
   14002f2db:	(bad)  
   14002f2dc:	(bad)  
   14002f2dd:	sti    
   14002f2de:	movabs ds:0xacfbffffa7fbffff,eax
   14002f2e7:	call   rdi
   14002f2e9:	sti    
   14002f2ea:	int3   
   14002f2eb:	call   QWORD PTR [rbx-0x59000307]
   14002f2f1:	(bad)  
   14002f2f2:	(bad)  
   14002f2f3:	jmp    QWORD PTR [rsi-0x5d000001]
   14002f2f9:	(bad)  
   14002f2fa:	(bad)  
   14002f2fb:	call   QWORD PTR [rbx+0x62fffffe]
   14002f301:	in     al,dx
   14002f302:	(bad)  
   14002f303:	inc    DWORD PTR [rsi-0x1e]
   14002f306:	(bad)  
   14002f307:	(bad)  
   14002f308:	cmp    bl,al
   14002f30a:	(bad)  
   14002f30b:	push   QWORD PTR [rsp+rdx*8]
   14002f30e:	(bad)  
   14002f30f:	push   QWORD PTR [rcx]
   14002f311:	int    0xff
   14002f313:	push   QWORD PTR [rax]
   14002f315:	enter  0xffff,0x30
   14002f319:	(bad)  
   14002f31a:	(bad)  
   14002f31b:	push   QWORD PTR [rsp+rax*8]
   14002f31e:	(bad)  
   14002f31f:	(bad)  
   14002f320:	cmp    al,bh
   14002f322:	(bad)  
   14002f323:	inc    DWORD PTR [rsi-0x33]
   14002f326:	(bad)  
   14002f327:	jmp    QWORD PTR [rdx-0x34]
   14002f32a:	cmc    
   14002f32b:	dec    ecx
   14002f32d:	(bad)  
   14002f32e:	cwde   
   14002f32f:	(bad)  
   14002f330:	in     eax,dx
   14002f331:	fistp  QWORD PTR [rbx-0x1]
   14002f334:	repz jrcxz 0x14002f3b3
   14002f337:	(bad)  
   14002f338:	clc    
   14002f339:	out    0x7a,al
   14002f33b:	(bad)  
   14002f33c:	cli    
   14002f33d:	out    0x79,al
   14002f33f:	(bad)  
   14002f340:	cld    
   14002f341:	out    0x78,eax
   14002f343:	(bad)  
   14002f344:	sti    
   14002f345:	jrcxz  0x14002f3bd
   14002f347:	(bad)  
   14002f348:	sti    
   14002f349:	loope  0x14002f3be
   14002f34b:	(bad)  
   14002f34c:	stc    
   14002f34d:	(bad)  [rdi-0x1]
   14002f350:	clc    
   14002f351:	fsubr  DWORD PTR [rdi+rdi*8-0xa]
   14002f355:	(bad)  
   14002f356:	imul   edi,edi,0xff66d1f4
   14002f35c:	icebp  
   14002f35d:	retf   
   14002f35e:	movsxd edi,edi
   14002f360:	in     eax,dx
   14002f361:	rcr    DWORD PTR [rsi-0x1],0xe8
   14002f365:	mov    eax,0x92cafd55
   14002f36a:	cmp    ch,ah
   14002f36c:	lods   al,BYTE PTR ds:[rsi]
   14002f36d:	jb     0x14002f38d
   14002f36f:	scas   eax,DWORD PTR es:[rdi]
   14002f370:	stos   DWORD PTR es:[rdi],eax
   14002f371:	jo     0x14002f391
   14002f373:	and    al,0x0
	...
   14002f39d:	add    BYTE PTR [rbp+0x1],dl
   14002f3a0:	sub    eax,0x268cfbac
   14002f3a5:	test   eax,0x2511a2fe
   14002f3aa:	jnp    0x14002f3d8
   14002f3ac:	add    BYTE PTR [rax],al
   14002f3ae:	push   rbp
   14002f3af:	or     al,0x0
	...
   14002f439:	add    BYTE PTR [rax],al
   14002f43b:	add    BYTE PTR [rdi-0x48e1de87],dh
   14002f441:	jns    0x14002f464
   14002f443:	pushf  
   14002f444:	(bad)  
   14002f445:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002f446:	rex.RX loope 0x14002f43d
   14002f449:	(bad)  
   14002f44a:	outs   dx,DWORD PTR ds:[rsi]
   14002f44b:	clc    
   14002f44c:	sti    
   14002f44d:	in     eax,dx
   14002f44e:	test   edi,edi
   14002f450:	std    
   14002f451:	icebp  
   14002f452:	mov    edi,edi
   14002f454:	std    
   14002f455:	hlt    
   14002f456:	xchg   ebx,eax
   14002f457:	(bad)  
   14002f458:	std    
   14002f459:	not    DWORD PTR [rsi-0x65070101]
   14002f45f:	(bad)  
   14002f460:	(bad)  
   14002f461:	stc    
   14002f462:	lahf   
   14002f463:	(bad)  
   14002f464:	(bad)  
   14002f465:	cli    
   14002f466:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002f467:	(bad)  
   14002f468:	(bad)  
   14002f469:	sti    
   14002f46a:	test   al,0xff
   14002f46c:	stc    
   14002f46d:	sti    
   14002f46e:	mov    al,0xff
   14002f470:	stos   DWORD PTR es:[rdi],eax
   14002f471:	clc    
   14002f472:	in     eax,dx
   14002f473:	call   FWORD PTR [rdx-0x58000004]
   14002f479:	(bad)  
   14002f47a:	(bad)  
   14002f47b:	jmp    QWORD PTR [rsi+rdi*8-0x1610001]
   14002f482:	(bad)  
   14002f483:	(bad)  
   14002f484:	jns    0x14002f478
   14002f486:	(bad)  
   14002f487:	call   QWORD PTR [rcx-0x19]
   14002f48a:	(bad)  
   14002f48b:	(bad)  
   14002f48c:	ds fdiv st(7),st
   14002f48f:	push   QWORD PTR [rsi]
   14002f491:	(bad)  
   14002f492:	(bad)  
   14002f493:	push   QWORD PTR [rbx]
   14002f495:	iret   
   14002f496:	(bad)  
   14002f497:	push   QWORD PTR [rcx]
   14002f499:	retf   
   14002f49a:	(bad)  
   14002f49b:	push   QWORD PTR [rax]
   14002f49d:	(bad)  
   14002f49e:	(bad)  
   14002f49f:	push   QWORD PTR [rbx]
   14002f4a1:	(bad)  
   14002f4a2:	(bad)  
   14002f4a3:	(bad)  
   14002f4a4:	cmp    bh,al
   14002f4a6:	(bad)  
   14002f4a7:	(bad)  
   14002f4a8:	ds retf 
   14002f4aa:	(bad)  
   14002f4ab:	dec    DWORD PTR [rsp+rcx*8-0x3]
   14002f4af:	dec    DWORD PTR [rax-0x1f002e33]
   14002f4b5:	(bad)  
   14002f4b6:	jge    0x14002f4b7
   14002f4b8:	in     eax,dx
   14002f4b9:	fdiv   DWORD PTR [rbx-0x1]
   14002f4bc:	repnz fidiv DWORD PTR [rbx-0x1]
   14002f4c0:	cmc    
   14002f4c1:	(bad)  [rdx-0x1]
   14002f4c4:	neg    esp
   14002f4c6:	outs   dx,DWORD PTR ds:[rsi]
   14002f4c7:	(bad)  
   14002f4c8:	clc    
   14002f4c9:	fld    TBYTE PTR [rsi-0x1]
   14002f4cc:	not    bh
   14002f4ce:	imul   edi,edi,0xfffffff4
   14002f4d1:	shr    DWORD PTR [rcx-0x1],cl
   14002f4d4:	repnz (bad) 
   14002f4d6:	data16 (bad) 
   14002f4d8:	out    dx,eax
   14002f4d9:	enter  0xff62,0xeb
   14002f4dd:	rcr    BYTE PTR [rbx-0x1],0xd7
   14002f4e1:	movabs eax,ds:0x71acd82a7eb7ee42
   14002f4ea:	(bad)  
   14002f4eb:	jno    0x14002f499
   14002f4ed:	jno    0x14002f50d
   14002f4ef:	(bad)  
	...
   14002f51c:	(bad)  
   14002f51d:	cmp    eax,0xaf2c0592
   14002f522:	std    
   14002f523:	lods   al,BYTE PTR ds:[rsi]
   14002f524:	(bad)  
   14002f525:	test   eax,0xc05b2fd
   14002f52a:	pop    rdi
   14002f52b:	add    BYTE PTR es:[rax],al
   14002f52e:	push   rbp
   14002f52f:	or     al,0x0
	...
   14002f5bd:	add    BYTE PTR [rax],al
   14002f5bf:	add    BYTE PTR [rdi-0x48fdde87],dh
   14002f5c5:	jns    0x14002f5e8
   14002f5c7:	push   rsi
   14002f5c8:	mov    bh,0x7a
   14002f5ca:	and    DWORD PTR [rsi-0x1cb55626],esi
   14002f5d0:	cmc    
   14002f5d1:	fdiv   DWORD PTR [rbx-0x7]
   14002f5d4:	sti    
   14002f5d5:	out    dx,al
   14002f5d6:	mov    edi,edi
   14002f5d8:	std    
   14002f5d9:	repnz nop
   14002f5db:	(bad)  
   14002f5dc:	std    
   14002f5dd:	cmc    
   14002f5de:	xchg   esp,eax
   14002f5df:	(bad)  
   14002f5e0:	std    
   14002f5e1:	neg    DWORD PTR [rax-0x63070101]
   14002f5e7:	(bad)  
   14002f5e8:	(bad)  
   14002f5e9:	stc    
   14002f5ea:	lahf   
   14002f5eb:	(bad)  
   14002f5ec:	(bad)  
   14002f5ed:	cli    
   14002f5ee:	movabs ds:0xc5fbdcffa8fbfeff,eax
   14002f5f7:	call   QWORD PTR [rbx-0x60000408]
   14002f5fd:	(bad)  
   14002f5fe:	(bad)  
   14002f5ff:	jmp    QWORD PTR [rbp-0x5e000002]
   14002f605:	(bad)  
   14002f606:	(bad)  
   14002f607:	call   QWORD PTR [rax+0x61fffffb]
   14002f60d:	jmp    0x14002f60e
   14002f60f:	inc    DWORD PTR [rdi-0x1f]
   14002f612:	(bad)  
   14002f613:	(bad)  
   14002f614:	cmp    al,0xd7
   14002f616:	(bad)  
   14002f617:	push   QWORD PTR [rsi]
   14002f619:	sar    edi,1
   14002f61b:	push   QWORD PTR [rbx]
   14002f61d:	int    0xff
   14002f61f:	push   QWORD PTR [rcx]
   14002f621:	leave  
   14002f622:	(bad)  
   14002f623:	push   QWORD PTR [rcx]
   14002f625:	(bad)  
   14002f628:	xor    al,0xc5
   14002f62a:	(bad)  
   14002f62b:	(bad)  
   14002f62c:	cmp    edi,eax
   14002f62e:	(bad)  
   14002f62f:	inc    DWORD PTR [rcx-0x34]
   14002f632:	std    
   14002f633:	call   QWORD PTR [rdx-0x34]
   14002f636:	cli    
   14002f637:	call   QWORD PTR [rdi-0x1e004237]
   14002f63d:	retf   
   14002f63e:	jae    0x14002f63f
   14002f640:	jmp    0x12e026213
   14002f645:	(bad)  
   14002f646:	push   0xffffffffffffffff
   14002f648:	out    dx,eax
   14002f649:	iret   
   14002f64a:	imul   edi,edi,0xff66ceef
   14002f650:	out    dx,eax
   14002f651:	retf   0xff63
   14002f654:	out    dx,al
   14002f655:	(bad)  
   14002f656:	(bad)  
   14002f657:	(bad)  
   14002f658:	fisubr WORD PTR [rbx-0x753e0bb5]
   14002f65e:	xor    ebx,esi
   14002f660:	lods   eax,DWORD PTR ds:[rsi]
   14002f661:	jb     0x14002f682
   14002f663:	(bad)  
   14002f664:	lods   eax,DWORD PTR ds:[rsi]
   14002f665:	jb     0x14002f686
   14002f667:	(bad)  
	...
   14002f698:	add    BYTE PTR [rax],al
   14002f69a:	push   rbp
   14002f69b:	add    DWORD PTR [rdx],edi
   14002f69d:	cwde   
   14002f69e:	in     eax,0x36
   14002f6a0:	(bad)  
   14002f6a1:	scas   eax,DWORD PTR es:[rdi]
   14002f6a2:	inc    ecx
   14002f6a4:	sub    ch,BYTE PTR [rcx+0xb6fb]
   14002f6aa:	push   rsp
   14002f6ab:	(bad)  
   14002f6ac:	add    BYTE PTR [rax],al
   14002f6ae:	push   rbp
   14002f6af:	or     DWORD PTR [rax],eax
	...
   14002f745:	add    BYTE PTR [rax],al
   14002f747:	add    BYTE PTR [rdi-0x49f6de87],dh
   14002f74d:	jns    0x14002f770
   14002f74f:	pop    rbx
   14002f750:	mov    bh,0x7a
   14002f752:	and    BYTE PTR [rax-0x1cb35727],bh
   14002f758:	hlt    
   14002f759:	fdiv   DWORD PTR [rbp-0x7]
   14002f75c:	cli    
   14002f75d:	jmp    0x14002f6e6
   14002f75f:	(bad)  
   14002f760:	cld    
   14002f761:	icebp  
   14002f762:	(bad)  
   14002f763:	(bad)  
   14002f764:	std    
   14002f765:	cmc    
   14002f766:	xchg   esp,eax
   14002f767:	(bad)  
   14002f768:	std    
   14002f769:	not    BYTE PTR [rdi-0x65070201]
   14002f76f:	(bad)  
   14002f770:	(bad)  
   14002f771:	stc    
   14002f772:	sahf   
   14002f773:	(bad)  
   14002f774:	(bad)  
   14002f775:	stc    
   14002f776:	movabs ds:0xdef6b4ffabfaf7ff,al
   14002f77f:	call   QWORD PTR [rbx-0x59000105]
   14002f785:	std    
   14002f786:	(bad)  
   14002f787:	jmp    QWORD PTR [rbp+rdi*8-0x2620002]
   14002f78e:	(bad)  
   14002f78f:	(bad)  
   14002f790:	jge    0x14002f785
   14002f792:	(bad)  
   14002f793:	call   QWORD PTR [rsi-0x1a]
   14002f796:	(bad)  
   14002f797:	inc    DWORD PTR [rax-0x25]
   14002f79a:	(bad)  
   14002f79b:	push   QWORD PTR [rsi]
   14002f79d:	(bad)  
   14002f79e:	(bad)  
   14002f79f:	push   QWORD PTR [rbx]
   14002f7a1:	int    0xfe
   14002f7a3:	push   QWORD PTR [rdx]
   14002f7a5:	retf   
   14002f7a6:	(bad)  
   14002f7a7:	push   QWORD PTR [rax]
   14002f7a9:	(bad)  
   14002f7ac:	xor    ah,al
   14002f7ae:	(bad)  
   14002f7af:	push   QWORD PTR [rip+0x3cfffec5]        # 0x17d02f67a
   14002f7b5:	enter  0xfffd,0x45
   14002f7b9:	int3   
   14002f7ba:	std    
   14002f7bb:	call   QWORD PTR [rdi-0x36]
   14002f7be:	clc    
   14002f7bf:	jmp    QWORD PTR [rax-0x2100553e]
   14002f7c5:	mov    esi,0xbce0ff65
   14002f7ca:	(bad)  
   14002f7cb:	jmp    rdx
   14002f7cd:	mov    edx,0xa3d4ff5d
   14002f7d2:	rex.WB icebp 
   14002f7d4:	mov    esp,0xaddd3188
   14002f7d9:	jae    0x14002f7fb
   14002f7db:	stos   DWORD PTR es:[rdi],eax
   14002f7dc:	stos   DWORD PTR es:[rdi],eax
   14002f7dd:	jb     0x14002f800
   14002f7df:	rex.X add BYTE PTR [rax],al
	...
   14002f816:	push   rbp
   14002f817:	add    DWORD PTR [rax],eax
   14002f819:	add    BYTE PTR [rbp+0x5],dl
   14002f81c:	(bad)  
   14002f81d:	test   al,0xf3
   14002f81f:	lea    esp,[rsi]
   14002f821:	scas   eax,DWORD PTR es:[rdi]
   14002f822:	dec    esi
   14002f824:	sub    eax,0xa9f8a8
   14002f829:	add    BYTE PTR [rbp+0x1a],dl
   14002f82c:	add    BYTE PTR [rax],al
   14002f82e:	push   rbp
   14002f82f:	(bad)  
	...
   14002f8d0:	mov    dh,0x79
   14002f8d2:	and    DWORD PTR [rcx],ecx
   14002f8d4:	mov    dh,0x79
   14002f8d6:	and    DWORD PTR [rbp-0x49],ebx
   14002f8d9:	jp     0x14002f8fc
   14002f8db:	mov    ecx,0xe34aa7d8
   14002f8e0:	icebp  
   14002f8e1:	iret   
   14002f8e2:	ins    DWORD PTR es:[rdi],dx
   14002f8e3:	idiv   dl
   14002f8e5:	in     eax,0x85
   14002f8e7:	(bad)  
   14002f8e8:	sti    
   14002f8e9:	in     eax,dx
   14002f8ea:	mov    edi,?
   14002f8ec:	cld    
   14002f8ed:	repnz xchg ecx,eax
   14002f8ef:	(bad)  
   14002f8f0:	std    
   14002f8f1:	cmc    
   14002f8f2:	xchg   esi,eax
   14002f8f3:	(bad)  
   14002f8f4:	std    
   14002f8f5:	neg    BYTE PTR [rdi+rdi*8-0x620803]
   14002f8fc:	std    
   14002f8fd:	stc    
   14002f8fe:	movabs ds:0xf0f5a0ffb0faefff,al
   14002f907:	call   QWORD PTR [rdi-0x5c000105]
   14002f90d:	cld    
   14002f90e:	(bad)  
   14002f90f:	jmp    QWORD PTR [rdx-0x67000104]
   14002f915:	sti    
   14002f916:	(bad)  
   14002f917:	jmp    FWORD PTR [rbp-0x12]
   14002f91a:	(bad)  
   14002f91b:	dec    DWORD PTR [rcx+riz*8-0x2]
   14002f91f:	(bad)  
   14002f920:	(bad)  
   14002f921:	fdivr  st,st(6)
   14002f923:	push   QWORD PTR [rsi]
   14002f925:	sar    dh,cl
   14002f927:	push   QWORD PTR [rbx]
   14002f929:	int3   
   14002f92a:	(bad)  
   14002f92b:	push   QWORD PTR [rdx]
   14002f92d:	enter  0xfffd,0x33
   14002f931:	(bad)  
   14002f932:	cld    
   14002f933:	push   QWORD PTR [rbx]
   14002f935:	ret    
   14002f936:	cld    
   14002f937:	push   QWORD PTR [rsi]
   14002f939:	(bad)  
   14002f93c:	cmp    eax,ebp
   14002f93e:	cld    
   14002f93f:	inc    DWORD PTR [rsp+rcx*8-0x5]
   14002f943:	call   FWORD PTR [rdi+rax*8-0xd]
   14002f947:	inc    BYTE PTR [rsi-0x620a645c]
   14002f94d:	jne    0x14002f985
   14002f94f:	fst    QWORD PTR [rbp-0x7f5ddb9c]
   14002f955:	push   rdi
   14002f956:	xor    BYTE PTR [rbx+0xd],cl
   14002f959:	or     eax,0xf5a
   14002f95e:	push   rbp
   14002f95f:	or     al,BYTE PTR [rax]
   14002f961:	add    BYTE PTR [rbp+0x5],dl
   14002f964:	add    BYTE PTR [rax],al
   14002f966:	push   rbp
   14002f967:	add    eax,DWORD PTR [rax]
   14002f969:	add    BYTE PTR [rbp+0x1],dl
	...
   14002f990:	add    BYTE PTR [rax],al
   14002f992:	push   rbp
   14002f993:	add    DWORD PTR [rax],eax
   14002f995:	add    BYTE PTR [rbp+0x7],dl
   14002f998:	xor    al,0x8a
   14002f99a:	xlat   BYTE PTR ds:[rbx]
   14002f99b:	(bad)  
   14002f99c:	(bad)  
   14002f99d:	mov    bl,0xfd
   14002f99f:	shl    DWORD PTR [rsi],cl
   14002f9a1:	lods   eax,DWORD PTR ds:[rsi]
   14002f9a2:	call   rbp
   14002f9a4:	xor    bl,BYTE PTR [rdi+0x89f0]
   14002f9aa:	push   rbp
   14002f9ab:	adc    al,BYTE PTR [rax]
   14002f9ad:	add    BYTE PTR [rbp+0x3],dl
	...
   14002fa58:	mov    dh,0x79
   14002fa5a:	and    DWORD PTR [rsi+rsi*4],ecx
   14002fa5d:	js     0x14002fa7f
   14002fa5f:	pop    rbx
   14002fa60:	mov    dh,0x79
   14002fa62:	and    DWORD PTR [rcx-0x30d07840],esp
   14002fa68:	fsubr  QWORD PTR [rbx-0x38121bb0]
   14002fa6e:	addr32 repnz clc 
   14002fa71:	loopne 0x14002faf2
   14002fa73:	std    
   14002fa74:	cli    
   14002fa75:	(bad)  
   14002fa76:	mov    bh,bh
   14002fa78:	sti    
   14002fa79:	out    dx,al
   14002fa7a:	xchg   ecx,eax
   14002fa7b:	(bad)  
   14002fa7c:	cld    
   14002fa7d:	lock xchg esi,eax
   14002fa7f:	(bad)  
   14002fa80:	std    
   14002fa81:	repz (bad) 
   14002fa83:	(bad)  
   14002fa84:	std    
   14002fa85:	hlt    
   14002fa86:	sahf   
   14002fa87:	jmp    rsp
   14002fa89:	cmc    
   14002fa8a:	mov    ch,0xff
   14002fa8c:	lahf   
   14002fa8d:	hlt    
   14002fa8e:	hlt    
   14002fa8f:	call   QWORD PTR [rcx+rdi*8-0x55c0002]
   14002fa96:	std    
   14002fa97:	call   FWORD PTR [rsi-0x72000206]
   14002fa9d:	idiv   ch
   14002fa9f:	jmp    QWORD PTR [rdx-0x1a]
   14002faa2:	std    
   14002faa3:	dec    DWORD PTR [rdx-0x23]
   14002faa6:	cld    
   14002faa7:	(bad)  
   14002faa8:	cmp    edx,esp
   14002faaa:	cld    
   14002faab:	push   QWORD PTR [rsi]
   14002faad:	int    0xfc
   14002faaf:	push   QWORD PTR [rbx]
   14002fab1:	retf   0xfffc
   14002fab4:	xor    eax,ebp
   14002fab6:	sti    
   14002fab7:	push   QWORD PTR [rbx]
   14002fab9:	(bad)  
   14002faba:	cli    
   14002fabb:	push   QWORD PTR [rip+0x37fff8c0]        # 0x17802f381
   14002fac1:	sar    ecx,0xfe
   14002fac4:	cmp    eax,0x42fdf9c5
   14002fac9:	int    0xfb
   14002facb:	cli    
   14002facc:	rex.WR (bad) 
   14002face:	stc    
   14002facf:	out    dx,eax
   14002fad0:	rex.WB mov r12b,0xf4
   14002fad3:	lods   eax,DWORD PTR ds:[rsi]
   14002fad4:	sub    ebp,DWORD PTR [rsi-0x43]
   14002fad7:	rex.WX add BYTE PTR [rax],al
   14002fada:	push   rbp
   14002fadb:	and    al,BYTE PTR [rax]
   14002fadd:	add    BYTE PTR [rbp+0x1d],dl
   14002fae0:	add    BYTE PTR [rax],al
   14002fae2:	push   rbp
   14002fae3:	(bad)  
   14002fae4:	add    BYTE PTR [rax],al
   14002fae6:	push   rbp
   14002fae7:	adc    BYTE PTR [rax],al
   14002fae9:	add    BYTE PTR [rbp+0xb],dl
   14002faec:	add    BYTE PTR [rax],al
   14002faee:	push   rbp
   14002faef:	(bad)  
   14002faf0:	add    BYTE PTR [rax],al
   14002faf2:	push   rbp
   14002faf3:	(bad)  
   14002faf4:	add    BYTE PTR [rax],al
   14002faf6:	push   rbp
   14002faf7:	add    al,0x0
   14002faf9:	add    BYTE PTR [rbp+0x3],dl
   14002fafc:	add    BYTE PTR [rax],al
   14002fafe:	push   rbp
   14002faff:	add    al,BYTE PTR [rax]
   14002fb01:	add    BYTE PTR [rbp+0x1],dl
   14002fb04:	add    BYTE PTR [rax],al
   14002fb06:	push   rbp
   14002fb07:	add    al,BYTE PTR [rax]
   14002fb09:	add    BYTE PTR [rbp+0x4],dl
   14002fb0c:	add    BYTE PTR [rax],al
   14002fb0e:	push   rbp
   14002fb0f:	(bad)  
   14002fb10:	add    BYTE PTR [rax],al
   14002fb12:	push   rbp
   14002fb13:	(bad)  
   14002fb14:	sub    eax,0x3636c276
   14002fb19:	mov    ah,0xfb
   14002fb1b:	enter  0xb52a,0xff
   14002fb1f:	fsub   DWORD PTR [rsi]
   14002fb21:	lods   eax,DWORD PTR ds:[rsi]
   14002fb22:	(bad)  
   14002fb23:	fldcw  WORD PTR [rdi]
   14002fb25:	jg     0x14002faf4
   14002fb27:	rex.WXB add BYTE PTR [r8],al
   14002fb2a:	push   rbp
   14002fb2b:	or     al,BYTE PTR [rax]
   14002fb2d:	add    BYTE PTR [rbp+0x1],dl
	...
   14002fbe4:	mov    dh,0x78
   14002fbe6:	and    BYTE PTR [rsi+rsi*4],bl
   14002fbe9:	jns    0x14002fc0c
   14002fbeb:	(bad)  
   14002fbec:	mov    dh,0x7a
   14002fbee:	and    dl,BYTE PTR [rax-0x3fdc844a]
   14002fbf4:	retf   0x3a92
   14002fbf7:	(bad)  
   14002fbf8:	(bad)  
   14002fbf9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002fbfa:	rex.WRB loop 0x14002fbdf
   14002fbfd:	mov    eax,0xc5ebec5d
   14002fc02:	outs   dx,DWORD PTR ds:[rsi]
   14002fc03:	repnz repz sar DWORD PTR [rcx-0x9],cl
   14002fc08:	cmc    
   14002fc09:	xlat   BYTE PTR ds:[rbx]
   14002fc0a:	cmp    al,0xf9
   14002fc0d:	out    0x91,al
   14002fc0f:	jmp    rcx
   14002fc11:	in     eax,dx
   14002fc12:	stos   BYTE PTR es:[rdi],al
   14002fc13:	call   FWORD PTR [rbx-0x6a000f0e]
   14002fc19:	idiv   ebx
   14002fc1b:	jmp    QWORD PTR [rax-0x63000409]
   14002fc21:	idiv   ebx
   14002fc23:	inc    DWORD PTR [rcx+0x5ffffbf0]
   14002fc29:	loop   0x14002fc25
   14002fc2b:	dec    DWORD PTR [rcx-0x28]
   14002fc2e:	cli    
   14002fc2f:	(bad)  
   14002fc30:	cmp    eax,0x39fefbd4
   14002fc35:	int    0xf9
   14002fc37:	std    
   14002fc38:	(bad)  
   14002fc39:	retf   
   14002fc3a:	cli    
   14002fc3b:	cld    
   14002fc3c:	xor    al,0xca
   14002fc3e:	sti    
   14002fc3f:	cli    
   14002fc40:	ss leave 
   14002fc42:	cld    
   14002fc43:	clc    
   14002fc44:	xor    al,0xca
   14002fc46:	push   rsp
   14002fc48:	cmp    edx,ecx
   14002fc4a:	push   rdx
   14002fc4c:	cmp    cl,bl
   14002fc4e:	push   rax
   14002fc50:	rex (bad) 
   14002fc52:	(bad)  
   14002fc53:	out    dx,al
   14002fc54:	rex.W int3 
   14002fc56:	std    
   14002fc57:	jmp    0x14002fca3
   14002fc59:	sar    eax,0xc7
   14002fc5c:	rex.WB stos QWORD PTR es:[rdi],rax
   14002fc5e:	in     al,dx
   14002fc5f:	mov    WORD PTR [rip+0x4ab76c],gs        # 0x1404db3d1
   14002fc65:	add    BYTE PTR [rbp+0x25],dl
   14002fc68:	add    BYTE PTR [rax],al
   14002fc6a:	push   rbp
   14002fc6b:	and    BYTE PTR [rax],al
   14002fc6d:	add    BYTE PTR [rbp+0x1b],dl
   14002fc70:	add    BYTE PTR [rax],al
   14002fc72:	push   rbp
   14002fc73:	(bad)  
   14002fc74:	add    BYTE PTR [rax],al
   14002fc76:	push   rbp
   14002fc77:	adc    al,0x0
   14002fc79:	add    BYTE PTR [rbp+0x11],dl
   14002fc7c:	add    BYTE PTR [rax],al
   14002fc7e:	push   rbp
   14002fc7f:	sldt   WORD PTR [rax]
   14002fc82:	push   rbp
   14002fc83:	sldt   WORD PTR [rax]
   14002fc86:	push   rbp
   14002fc87:	adc    DWORD PTR [rax],eax
   14002fc89:	add    BYTE PTR [rbp+0x14],dl
   14002fc8c:	or     eax,0x3a1d711e
   14002fc91:	popf   
   14002fc92:	out    0x6f,al
   14002fc94:	xor    al,0xbb
   14002fc96:	std    
   14002fc97:	(bad)  
   14002fc98:	sub    eax,0x29ddffb7
   14002fc9d:	mov    bl,0xff
   14002fc9f:	fdiv   QWORD PTR [rcx]
   14002fca1:	scas   eax,DWORD PTR es:[rdi]
   14002fca2:	cli    
   14002fca3:	mov    ah,0x5
   14002fca5:	or     BYTE PTR [rdx+0x14],bl
   14002fca8:	add    BYTE PTR [rax],al
   14002fcaa:	push   rbp
   14002fcab:	add    al,0x0
	...
   14002fd71:	add    BYTE PTR [rax],al
   14002fd73:	add    BYTE PTR [rbp-0x49d0de87],dh
   14002fd79:	jp     0x14002fd9e
   14002fd7b:	rex.WRXB movabs r8,0xb98d287eb972257b
   14002fd85:	sub    DWORD PTR [rbx],0x3186bca3
   14002fd8b:	test   al,0xbd
   14002fd8d:	mov    BYTE PTR [rbx],dh
   14002fd8f:	int    0xc0
   14002fd91:	mov    WORD PTR [rax],?
   14002fd93:	iret   
   14002fd94:	rcl    DWORD PTR [rcx-0x544a31c1],0x6b
   14002fd9b:	mov    edi,0xe6dcdb8d
   14002fda0:	xchg   edx,eax
   14002fda1:	cmc    
   14002fda2:	stc    
   14002fda3:	neg    DWORD PTR [rsi-0x63040507]
   14002fda9:	cli    
   14002fdaa:	sti    
   14002fdab:	cli    
   14002fdac:	xor    edx,0xfffffffb
   14002fdaf:	cli    
   14002fdb0:	(bad)  
   14002fdb1:	out    0xfd,eax
   14002fdb3:	test   DWORD PTR [rbx-0x22],0xda40f5ff
   14002fdba:	push   rsp
   14002fdbc:	cmp    dl,ah
   14002fdbe:	push   rbx
   14002fdc0:	(bad)  
   14002fdc1:	sar    bh,cl
   14002fdc3:	icebp  
   14002fdc4:	ss (bad) 
   14002fdc6:	(bad)  
   14002fdc7:	out    dx,eax
   14002fdc8:	xor    al,0xcd
   14002fdca:	(bad)  
   14002fdcb:	out    dx,al
   14002fdcc:	ss retf 0xecff
   14002fdd0:	(bad)  
   14002fdd1:	retf   
   14002fdd2:	(bad)  
   14002fdd3:	(bad)  
   14002fdd4:	cmp    edx,ecx
   14002fdd6:	(bad)  
   14002fdd7:	call   0x12802cb18
   14002fddc:	rex int 0xff
   14002fddf:	in     eax,0x49
   14002fde1:	int    0xfd
   14002fde3:	in     al,0x49
   14002fde5:	(bad)  
   14002fde6:	cli    
   14002fde7:	fmul   DWORD PTR [rbx-0x46]
   14002fdea:	hlt    
   14002fdeb:	stos   BYTE PTR es:[rdi],al
   14002fdec:	movabs al,ds:0x6b296cdd9a4179e4
   14002fdf6:	mov    eax,0x9d4c1e49
   14002fdfb:	cmp    DWORD PTR [rbx+rsi*1],edx
   14002fdfe:	xchg   DWORD PTR [rcx],esi
   14002fe00:	sub    ch,BYTE PTR [rax+rdi*4+0x47]
   14002fe04:	cmp    cl,BYTE PTR [rdi-0x50bba12a]
   14002fe0a:	out    dx,eax
   14002fe0b:	mov    ?,WORD PTR [rsi]
   14002fe0d:	mov    esi,0xc032cffa
   14002fe12:	jmp    rax
   14002fe14:	sub    eax,0x2adfffbc
   14002fe19:	mov    dh,0xff
   14002fe1b:	fild   QWORD PTR [rdx]
   14002fe1d:	mov    dl,0xff
   14002fe1f:	fidiv  WORD PTR [rdi]
   14002fe21:	xchg   esp,eax
   14002fe22:	ficom  WORD PTR [rdi+0x0]
   14002fe25:	add    BYTE PTR [rbp+0x8],dl
   14002fe28:	add    BYTE PTR [rax],al
   14002fe2a:	push   rbp
   14002fe2b:	add    DWORD PTR [rax],eax
	...
   14002ff1d:	add    BYTE PTR [rax],al
   14002ff1f:	add    BYTE PTR [rdx-0xb],dh
   14002ff22:	std    
   14002ff23:	adc    DWORD PTR [rax-0x11],edi
   14002ff26:	std    
   14002ff27:	xchg   ecx,eax
   14002ff28:	mov    bh,al
   14002ff2a:	(bad)  
   14002ff2b:	fistp  DWORD PTR [rbx-0x600d0001]
   14002ff31:	(bad)  
   14002ff32:	push   rax
   14002ff34:	test   ebp,esi
   14002ff36:	push   rax
   14002ff38:	addr32 jmp 0x12257ef3d
   14002ff3e:	(bad)  
   14002ff3f:	out    dx,al
   14002ff40:	rex.XB (bad) 
   14002ff43:	in     al,dx
   14002ff44:	cmp    al,0xd7
   14002ff46:	(bad)  
   14002ff47:	jmp    0x14002ff82
   14002ff49:	(bad)  
   14002ff4a:	(bad)  
   14002ff4b:	jmp    0x12a02ce86
   14002ff50:	ss (bad) 
   14002ff52:	jmp    rdi
   14002ff54:	(bad)  
   14002ff55:	int    0xff
   14002ff57:	in     eax,0x36
   14002ff59:	int    0xff
   14002ff5b:	in     eax,0x39
   14002ff5d:	retf   
   14002ff5e:	jmp    rbp
   14002ff60:	cmp    cl,bl
   14002ff62:	jmp    rsp
   14002ff64:	cmp    al,0xcb
   14002ff66:	jmp    rsp
   14002ff68:	cmp    al,0xcd
   14002ff6a:	jmp    rsp
   14002ff6c:	cmp    eax,0x42e3ffcd
   14002ff71:	int    0xfe
   14002ff73:	jrcxz  0x14002ffba
   14002ff75:	int3   
   14002ff76:	std    
   14002ff77:	loop   0x14002ffbd
   14002ff79:	retf   
   14002ff7a:	std    
   14002ff7b:	jrcxz  0x14002ffbf
   14002ff7d:	retf   
   14002ff7e:	std    
   14002ff7f:	jrcxz  0x14002ffc4
   14002ff81:	int3   
   14002ff82:	std    
   14002ff83:	loop   0x14002ffc1
   14002ff85:	retf   0xe3fe
   14002ff88:	ss (bad) 
   14002ff8a:	jmp    rdx
   14002ff8c:	xor    ecx,eax
   14002ff8e:	jmp    rdx
   14002ff90:	sub    eax,0x2ce1ffbd
   14002ff95:	mov    bh,0xff
   14002ff97:	loope  0x14002ffc3
   14002ff99:	mov    ch,0xff
   14002ff9b:	loop   0x14002ffd6
   14002ff9d:	mov    dl,0xf6
   14002ff9f:	fwait
   14002ffa0:	add    BYTE PTR [rax],al
   14002ffa2:	push   rsp
   14002ffa3:	or     al,0x0
   14002ffa5:	add    BYTE PTR [rbp+0x2],dl
	...
   1400300a8:	addr32 (bad) 
   1400300aa:	std    
   1400300ab:	add    al,0x78
   1400300ad:	in     eax,dx
   1400300ae:	sti    
   1400300af:	pop    rsp
   1400300b0:	jg     0x1400300a5
   1400300b2:	(bad)  
   1400300b3:	mov    eax,0xe3fffc90
   1400300b8:	fwait
   1400300b9:	(bad)  
   1400300ba:	(bad)  
   1400300bb:	(bad)  
   1400300bc:	mov    eax,edi
   1400300be:	(bad)  
   1400300bf:	call   0x12902ec2e
   1400300c4:	pop    rdx
   1400300c5:	in     al,0xff
   1400300c7:	out    0x4b,eax
   1400300c9:	fdivp  st(7),st
   1400300cb:	out    0x40,eax
   1400300cd:	fdivr  st,st(7)
   1400300cf:	out    0x3c,al
   1400300d1:	(bad)  
   1400300d2:	jmp    rsi
   1400300d4:	cmp    dl,dl
   1400300d6:	jmp    rbp
   1400300d8:	cmp    ecx,edx
   1400300da:	jmp    rbp
   1400300dc:	(bad)  
   1400300dd:	sar    edi,1
   1400300df:	jrcxz  0x14003011a
   1400300e1:	(bad)  
   1400300e2:	jmp    rbp
   1400300e4:	(bad)  
   1400300e5:	(bad)  
   1400300e6:	jmp    rsp
   1400300e8:	cmp    ebp,ecx
   1400300ea:	jmp    rsp
   1400300ec:	cmp    ebp,ecx
   1400300ee:	jmp    rbx
   1400300f0:	cmp    esi,ecx
   1400300f2:	jmp    rsp
   1400300f4:	cmp    cl,ch
   1400300f6:	jmp    rsp
   1400300f8:	cmp    ebp,ecx
   1400300fa:	jmp    rsp
   1400300fc:	cmp    ebx,ecx
   1400300fe:	jmp    rbx
   140030100:	(bad)  
   140030101:	retf   0xe3ff
   140030104:	xor    al,0xc7
   140030106:	jmp    rbx
   140030108:	xor    ebx,eax
   14003010a:	jmp    rbx
   14003010c:	xor    BYTE PTR [rdi-0x43d21c01],bh
   140030112:	jmp    rbx
   140030114:	sub    al,0xb7
   140030116:	jmp    rdx
   140030118:	cmp    DWORD PTR [rdi+0x4b29bafa],esi
   14003011e:	xchg   ecx,eax
   14003011f:	adc    al,BYTE PTR [rax]
   140030121:	add    BYTE PTR [rbp+0x3],dl
	...
   140030234:	jg     0x140030231
   140030236:	dec    BYTE PTR [rdi]
   140030238:	jb     0x140030229
   14003023a:	std    
   14003023b:	imul   edi,DWORD PTR [rsi-0xa],0xfffffffe
   14003023f:	mov    ch,0x89
   140030241:	idiv   bh
   140030243:	fmul   QWORD PTR [rax+rdi*8-0x10871901]
   14003024a:	jmp    rsi
   14003024c:	pop    rbx
   14003024d:	in     eax,0xff
   14003024f:	in     eax,0x54
   140030251:	loope  0x140030252
   140030253:	in     eax,0x4b
   140030255:	fdiv   st(7),st
   140030257:	in     al,0x44
   140030259:	fdivr  st,st(7)
   14003025b:	in     eax,0x3d
   14003025d:	(bad)  
   14003025e:	jmp    rbp
   140030260:	cmp    al,0xd2
   140030262:	jmp    rsp
   140030264:	cmp    dl,dl
   140030266:	jmp    rbx
   140030268:	cmp    dl,cl
   14003026a:	jmp    rsp
   14003026c:	cmp    edi,ecx
   14003026e:	jmp    rsp
   140030270:	cmp    esi,ecx
   140030272:	jmp    rbx
   140030274:	cmp    esi,ecx
   140030276:	jmp    rsp
   140030278:	(bad)  
   140030279:	(bad)  
   14003027a:	jmp    rsp
   14003027c:	(bad)  
   14003027d:	retf   
   14003027e:	jmp    rsp
   140030280:	ss retf 0xe4ff
   140030284:	xor    eax,edi
   140030286:	jmp    rbx
   140030288:	xor    ebx,eax
   14003028a:	jmp    rsp
   14003028c:	xor    al,al
   14003028e:	jmp    rbx
   140030290:	xor    DWORD PTR [rbp-0x43c11b01],edi
   140030296:	stc    
   140030297:	movabs al,ds:0x255000012a55f2d
	...
   1400303bc:	imul   edi,edi,0xfc7e01fd
   1400303c2:	dec    BYTE PTR [rip+0x62fce872]        # 0x1a2ffec3a
   1400303c8:	je     0x1400303b7
   1400303ca:	std    
   1400303cb:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400303cc:	js     0x1400303bf
   1400303ce:	dec    cl
   1400303d0:	jae    0x1400303c2
   1400303d2:	(bad)  
   1400303d3:	(bad)  [rbx-0x15]
   1400303d6:	jmp    rbp
   1400303d8:	pop    rbx
   1400303d9:	in     eax,0xff
   1400303db:	in     eax,0x4d
   1400303dd:	(bad)  
   1400303df:	in     eax,0x47
   1400303e1:	(bad)  
   1400303e3:	in     eax,0x43
   1400303e5:	xlat   BYTE PTR ds:[rbx]
   1400303e6:	jmp    rbp
   1400303e8:	rex (bad) 
   1400303ea:	jmp    rbp
   1400303ec:	cmp    eax,0x3de4ffd4
   1400303f1:	sar    bh,cl
   1400303f3:	in     eax,0x3d
   1400303f5:	sar    edi,1
   1400303f7:	in     al,0x3a
   1400303f9:	(bad)  
   1400303fa:	jmp    rbp
   1400303fc:	cmp    cl,ch
   1400303fe:	jmp    rbp
   140030400:	(bad)  
   140030401:	retf   
   140030402:	jmp    rsp
   140030404:	(bad)  
   140030405:	(bad)  
   140030406:	jmp    rbp
   140030408:	ss (bad) 
   14003040a:	jmp    rbp
   14003040c:	rex.X (bad) 
   14003040e:	cld    
   14003040f:	ror    BYTE PTR [rbx-0x42],0xf3
   140030413:	pop    rsi
   140030414:	add    BYTE PTR [rax],al
   140030416:	push   rsp
   140030417:	add    al,0x0
   140030419:	add    BYTE PTR [rbp+0x1],dl
	...
   14003054c:	addr32 (bad) 
   14003054e:	std    
   14003054f:	add    al,0x7d
   140030551:	cld    
   140030552:	dec    BYTE PTR [rdi]
   140030554:	jno    0x140030540
   140030556:	cld    
   140030557:	imul   rsp,rsi,0xffffffffe56684fc
   14003055e:	std    
   14003055f:	mov    dl,0x5c
   140030561:	in     al,0xfd
   140030563:	rcr    BYTE PTR [rax-0x1a],0xfe
   140030567:	ror    BYTE PTR [rdi-0x22],1
   14003056a:	(bad)  
   14003056b:	fimul  WORD PTR [rdx-0x27]
   14003056e:	(bad)  
   14003056f:	in     al,0x46
   140030571:	xlat   BYTE PTR ds:[rbx]
   140030572:	jmp    rbp
   140030574:	rex.RB (bad) 
   140030576:	jmp    rbp
   140030578:	rex.WB fsin 
   14003057b:	ror    BYTE PTR [rdx-0x2a],1
   14003057e:	dec    ch
   140030580:	rex.WRX (bad) 
   140030582:	cld    
   140030583:	mov    bl,0x52
   140030585:	iret   
   140030586:	stc    
   140030587:	xchg   DWORD PTR [rsi-0x34],ebx
   14003058a:	hlt    
   14003058b:	cmp    BYTE PTR [rdi],bl
   14003058d:	push   rcx
   14003058e:	mov    WORD PTR [rbx],es
	...
   1400306e0:	imul   edi,edi,0xff6701fd
   1400306e6:	std    
   1400306e7:	add    ah,BYTE PTR [rsi-0x1]
   1400306ea:	std    
   1400306eb:	add    al,0x87
   1400306ed:	sti    
   1400306ee:	(bad)  
   1400306ef:	adc    cl,BYTE PTR [rdx-0x7be70006]
   1400306f5:	cld    
   1400306f6:	dec    BYTE PTR [rip+0x4fdff66]        # 0x145010662
   1400306fc:	addr32 (bad) 
   1400306fe:	std    
   1400306ff:	add    al,BYTE PTR [rax]
	...
   140030d3d:	add    BYTE PTR [rax],al
   140030d3f:	add    bh,bh
   140030d41:	(bad)  
   140030d42:	(bad)  
   140030d43:	(bad)  
   140030d44:	(bad)  
   140030d45:	(bad)  
   140030d46:	(bad)  
   140030d47:	(bad)  
   140030d48:	(bad)  
   140030d49:	(bad)  
   140030d4a:	(bad)  
   140030d4b:	(bad)  
   140030d4c:	(bad)  
   140030d4d:	(bad)  
   140030d4e:	(bad)  
   140030d4f:	(bad)  
   140030d50:	(bad)  
   140030d51:	(bad)  
   140030d52:	(bad)  
   140030d53:	(bad)  
   140030d54:	(bad)  
   140030d55:	(bad)  
   140030d56:	(bad)  
   140030d57:	(bad)  
   140030d58:	(bad)  
   140030d59:	(bad)  
   140030d5a:	(bad)  
   140030d5b:	(bad)  
   140030d5c:	(bad)  
   140030d5d:	(bad)  
   140030d5e:	(bad)  
   140030d5f:	(bad)  
   140030d60:	(bad)  
   140030d61:	(bad)  
   140030d62:	(bad)  
   140030d63:	(bad)  
   140030d64:	(bad)  
   140030d65:	(bad)  
   140030d66:	(bad)  
   140030d67:	(bad)  
   140030d68:	(bad)  
   140030d69:	(bad)  
   140030d6a:	(bad)  
   140030d6b:	(bad)  
   140030d6c:	(bad)  
   140030d6d:	(bad)  
   140030d6e:	(bad)  
   140030d6f:	(bad)  
   140030d70:	(bad)  
   140030d71:	(bad)  
   140030d72:	(bad)  
   140030d73:	(bad)  
   140030d74:	(bad)  
   140030d75:	(bad)  
   140030d76:	(bad)  
   140030d77:	(bad)  
   140030d78:	(bad)  
   140030d79:	(bad)  
   140030d7a:	(bad)  
   140030d7b:	(bad)  
   140030d7c:	(bad)  
   140030d7d:	clc    
   140030d7e:	add    BYTE PTR [rdi],bh
   140030d80:	(bad)  
   140030d81:	(bad)  
   140030d82:	(bad)  
   140030d83:	(bad)  
   140030d84:	(bad)  
   140030d85:	(bad)  
   140030d86:	(bad)  
   140030d87:	(bad)  
   140030d88:	jmp    rax
   140030d8a:	add    BYTE PTR [rdi],al
   140030d8c:	(bad)  
   140030d8d:	(bad)  
   140030d8e:	(bad)  
   140030d8f:	(bad)  
   140030d90:	(bad)  
   140030d91:	(bad)  
   140030d92:	(bad)  
   140030d93:	(bad)  
   140030d94:	inc    DWORD PTR [rax-0x10000]
   140030d9a:	(bad)  
   140030d9b:	(bad)  
   140030d9c:	(bad)  
   140030d9d:	(bad)  
   140030d9e:	(bad)  
   140030d9f:	(bad)  
   140030da0:	inc    BYTE PTR [rax]
   140030da2:	add    BYTE PTR [rax],al
   140030da4:	(bad)  
   140030da5:	(bad)  
   140030da6:	(bad)  
   140030da7:	(bad)  
   140030da8:	(bad)  
   140030da9:	(bad)  
   140030daa:	(bad)  
   140030dab:	(bad)  
   140030dac:	clc    
   140030dad:	add    BYTE PTR [rax],al
   140030daf:	add    BYTE PTR [rdi],bl
   140030db1:	lock add BYTE PTR [rbx],al
   140030db4:	(bad)  
   140030db5:	(bad)  
   140030db6:	(bad)  
   140030db7:	push   rax
   140030db9:	add    BYTE PTR [rax],al
   140030dbb:	add    BYTE PTR [rdi],cl
   140030dbd:	add    BYTE PTR [rax],al
   140030dbf:	add    BYTE PTR [rdi],bh
   140030dc1:	(bad)  
   140030dc2:	(bad)  
   140030dc3:	jmp    rax
   140030dc5:	add    BYTE PTR [rdi],bh
   140030dc7:	ror    BYTE PTR [rax],0x0
   140030dca:	add    BYTE PTR [rax],al
   140030dcc:	(bad)  
   140030dcd:	(bad)  
   140030dce:	(bad)  
   140030dcf:	jmp    rax
   140030dd1:	add    BYTE PTR [rdi-0x8],bh
   140030dd4:	add    BYTE PTR [rax],al
   140030dd6:	add    BYTE PTR [rax],al
   140030dd8:	add    edi,edi
   140030dda:	(bad)  
   140030ddb:	inc    eax
   140030ddd:	add    bh,bh
   140030ddf:	inc    BYTE PTR [rax]
   140030de1:	add    BYTE PTR [rax],al
   140030de3:	add    BYTE PTR [rax],al
   140030de5:	jg     0x140030de6
   140030de7:	inc    eax
   140030de9:	add    bh,bh
   140030deb:	inc    DWORD PTR [rax]
   140030ded:	add    BYTE PTR [rax],al
   140030def:	add    BYTE PTR [rax],al
   140030df1:	(bad)  
   140030df2:	(bad)  
   140030df3:	inc    DWORD PTR [rax+0xfcff01]
   140030df9:	add    BYTE PTR [rax],al
   140030dfb:	add    BYTE PTR [rax],al
   140030dfd:	ud0    edi,edi
   140030e00:	add    BYTE PTR [rcx],0xff
   140030e03:	clc    
   140030e04:	add    BYTE PTR [rax],al
   140030e06:	add    BYTE PTR [rax],al
   140030e08:	add    BYTE PTR [rbx],al
   140030e0a:	(bad)  
   140030e0b:	inc    DWORD PTR [rax+0xf0ff01]
   140030e11:	add    BYTE PTR [rax],al
   140030e13:	add    BYTE PTR [rax],al
   140030e15:	add    edi,edi
   140030e17:	inc    DWORD PTR [rax+0xe0ff01]
   140030e1d:	add    BYTE PTR [rax],al
   140030e1f:	add    BYTE PTR [rax],al
   140030e21:	add    bh,bh
   140030e23:	inc    DWORD PTR [rax]
   140030e25:	add    edi,edi
   140030e27:	rol    BYTE PTR [rax],0x0
   140030e2a:	add    BYTE PTR [rax],al
   140030e2c:	add    BYTE PTR [rax],al
   140030e2e:	jg     0x140030e2f
   140030e30:	add    BYTE PTR [rcx],al
   140030e32:	inc    DWORD PTR [rax+0x0]
   140030e38:	add    BYTE PTR [rax],al
   140030e3a:	(bad)  
   140030e3b:	inc    DWORD PTR [rax+0xff01]
   140030e41:	add    BYTE PTR [rax],al
   140030e43:	add    BYTE PTR [rax],al
   140030e45:	add    BYTE PTR [rdi],bl
   140030e47:	inc    DWORD PTR [rax+0xfe01]
   140030e4d:	add    BYTE PTR [rax],al
   140030e4f:	add    BYTE PTR [rax],al
   140030e51:	add    BYTE PTR [rdi],cl
   140030e53:	inc    DWORD PTR [rax+0xfc00]
   140030e59:	add    BYTE PTR [rax],al
   140030e5b:	add    BYTE PTR [rax],al
   140030e5d:	add    BYTE PTR [rdi],al
   140030e5f:	inc    DWORD PTR [rax+0xfc00]
   140030e65:	add    BYTE PTR [rax],al
   140030e67:	add    BYTE PTR [rax],al
   140030e69:	add    BYTE PTR [rbx],al
   140030e6b:	inc    DWORD PTR [rax+0xf800]
   140030e71:	add    BYTE PTR [rax],al
   140030e73:	add    BYTE PTR [rax],al
   140030e75:	add    BYTE PTR [rbx],al
   140030e77:	inc    DWORD PTR [rax+0x7000]
   140030e7d:	add    BYTE PTR [rax+rax*1],cl
   140030e80:	add    BYTE PTR [rax],al
   140030e82:	add    edi,edi
   140030e84:	rol    BYTE PTR [rax],0x70
   140030e87:	add    BYTE PTR [rax],al
   140030e89:	add    bh,bh
   140030e8b:	rol    BYTE PTR [rax],0x0
   140030e8e:	add    edi,edi
   140030e90:	rol    BYTE PTR [rax],0x60
   140030e93:	add    BYTE PTR [rax],al
   140030e95:	add    edi,edi
   140030e97:	clc    
   140030e98:	add    BYTE PTR [rax],al
   140030e9a:	add    bh,bh
   140030e9c:	rol    BYTE PTR [rax],0x0
   140030e9f:	add    BYTE PTR [rax],al
   140030ea1:	ud0    edi,esi
   140030ea4:	add    BYTE PTR [rax],al
   140030ea6:	add    BYTE PTR [rdi-0x40],bh
   140030ea9:	add    BYTE PTR [rax],al
   140030eab:	add    BYTE PTR [rax],al
   140030ead:	(bad)  
   140030eae:	(bad)  
   140030eaf:	inc    DWORD PTR [rax]
   140030eb1:	add    BYTE PTR [rax],al
   140030eb3:	jg     0x140030e95
   140030eb5:	add    BYTE PTR [rax],al
   140030eb7:	add    BYTE PTR [rax],al
   140030eb9:	(bad)  
   140030eba:	(bad)  
   140030ebb:	inc    DWORD PTR [rax-0x1fc10000]
   140030ec1:	add    BYTE PTR [rax],al
   140030ec3:	add    BYTE PTR [rax],al
   140030ec5:	jg     0x140030ec6
   140030ec7:	inc    eax
   140030ec9:	add    BYTE PTR [rax],al
   140030ecb:	(bad)  
   140030ecc:	lock add BYTE PTR [rax],al
   140030ecf:	add    BYTE PTR [rax],al
   140030ed1:	(bad)  
   140030ed2:	(bad)  
   140030ed3:	jmp    rax
   140030ed5:	add    BYTE PTR [rax],al
   140030ed7:	(bad)  
   140030ed8:	lock add BYTE PTR [rax],al
   140030edb:	add    BYTE PTR [rax],al
   140030edd:	(bad)  
   140030ede:	(bad)  
   140030edf:	push   rax
   140030ee1:	add    BYTE PTR [rax],al
   140030ee3:	(bad)  
   140030ee4:	clc    
   140030ee5:	add    BYTE PTR [rax],al
   140030ee7:	add    BYTE PTR [rcx],al
   140030ee9:	(bad)  
   140030eea:	(bad)  
   140030eeb:	(bad)  
   140030eec:	(bad)  
   140030eed:	(bad)  
   140030eee:	(bad)  
   140030eef:	(bad)  
   140030ef0:	clc    
   140030ef1:	add    BYTE PTR [rax],al
   140030ef3:	add    BYTE PTR [rcx],al
   140030ef5:	(bad)  
   140030ef6:	(bad)  
   140030ef7:	(bad)  
   140030ef8:	(bad)  
   140030ef9:	(bad)  
   140030efa:	(bad)  
   140030efb:	(bad)  
   140030efc:	clc    
   140030efd:	add    BYTE PTR [rax],al
   140030eff:	add    BYTE PTR [rbx],al
   140030f01:	(bad)  
   140030f02:	(bad)  
   140030f03:	(bad)  
   140030f04:	(bad)  
   140030f05:	(bad)  
   140030f06:	(bad)  
   140030f07:	(bad)  
   140030f08:	cld    
   140030f09:	add    BYTE PTR [rax],al
   140030f0b:	add    BYTE PTR [rbx],al
   140030f0d:	(bad)  
   140030f0e:	(bad)  
   140030f0f:	(bad)  
   140030f10:	(bad)  
   140030f11:	(bad)  
   140030f12:	(bad)  
   140030f13:	(bad)  
   140030f14:	inc    BYTE PTR [rax]
   140030f16:	add    BYTE PTR [rax],al
   140030f18:	add    edi,edi
   140030f1a:	(bad)  
   140030f1b:	(bad)  
   140030f1c:	(bad)  
   140030f1d:	(bad)  
   140030f1e:	(bad)  
   140030f1f:	(bad)  
   140030f20:	inc    BYTE PTR [rax]
   140030f22:	add    BYTE PTR [rax],al
   140030f24:	add    edi,edi
   140030f26:	(bad)  
   140030f27:	(bad)  
   140030f28:	(bad)  
   140030f29:	(bad)  
   140030f2a:	(bad)  
   140030f2b:	(bad)  
   140030f2c:	inc    DWORD PTR [rax]
   140030f2e:	add    BYTE PTR [rax],al
   140030f30:	add    edi,edi
   140030f32:	(bad)  
   140030f33:	(bad)  
   140030f34:	(bad)  
   140030f35:	(bad)  
   140030f36:	(bad)  
   140030f37:	(bad)  
   140030f38:	inc    DWORD PTR [rax]
	...
   140030f42:	add    BYTE PTR [rdi],cl
   140030f44:	inc    DWORD PTR [rax+0x0]
   140030f4a:	add    BYTE PTR [rax],al
   140030f4c:	add    BYTE PTR [rax],al
   140030f4e:	add    BYTE PTR [rdi],cl
   140030f50:	inc    eax
	...
   140030f5a:	add    BYTE PTR [rdi],cl
   140030f5c:	inc    eax
	...
   140030f66:	add    BYTE PTR [rdi],cl
   140030f68:	jmp    rax
	...
   140030f72:	add    BYTE PTR [rdi],cl
   140030f74:	push   rax
	...
   140030f7e:	add    BYTE PTR [rdi],al
   140030f80:	push   rax
	...
   140030f8a:	add    BYTE PTR [rdi],cl
   140030f8c:	(bad)  
   140030f8d:	clc    
	...
   140030f96:	add    BYTE PTR [rdi],cl
   140030f98:	(bad)  
   140030f99:	cld    
	...
   140030fa2:	add    BYTE PTR [rdi],cl
   140030fa4:	(bad)  
   140030fa5:	cld    
	...
   140030fae:	add    BYTE PTR [rdi],cl
   140030fb0:	(bad)  
   140030fb1:	cld    
	...
   140030fba:	add    BYTE PTR [rdi],cl
   140030fbc:	(bad)  
   140030fbd:	cld    
   140030fbe:	add    BYTE PTR [rax],al
   140030fc0:	add    edi,edi
   140030fc2:	(bad)  
   140030fc3:	(bad)  
   140030fc4:	clc    
   140030fc5:	add    BYTE PTR [rax],al
   140030fc7:	ud0    edi,esi
   140030fca:	add    BYTE PTR [rax],al
   140030fcc:	add    edi,edi
   140030fce:	(bad)  
   140030fcf:	(bad)  
   140030fd0:	clc    
   140030fd1:	add    BYTE PTR [rax],al
   140030fd3:	ud0    edi,esi
   140030fd6:	add    BYTE PTR [rax],al
   140030fd8:	add    edi,edi
   140030fda:	(bad)  
   140030fdb:	(bad)  
   140030fdc:	clc    
   140030fdd:	add    BYTE PTR [rax],al
   140030fdf:	ud0    edi,esi
   140030fe2:	add    BYTE PTR [rax],al
   140030fe4:	add    edi,edi
   140030fe6:	(bad)  
   140030fe7:	(bad)  
   140030fe8:	clc    
   140030fe9:	add    BYTE PTR [rax],al
   140030feb:	ud0    edi,edi
   140030fee:	add    BYTE PTR [rax],al
   140030ff0:	add    edi,edi
   140030ff2:	(bad)  
   140030ff3:	push   rax
   140030ff5:	add    BYTE PTR [rax],al
   140030ff7:	(bad)  
   140030ff8:	(bad)  
   140030ff9:	inc    DWORD PTR [rax]
   140030ffb:	add    BYTE PTR [rcx],al
   140030ffd:	(bad)  
   140030ffe:	(bad)  
   140030fff:	push   rax
   140031001:	add    BYTE PTR [rax],al
   140031003:	(bad)  
   140031004:	(bad)  
   140031005:	inc    DWORD PTR [rax-0x10000]
   14003100b:	jmp    rax
   14003100d:	add    BYTE PTR [rax],al
   14003100f:	(bad)  
   140031010:	(bad)  
   140031011:	inc    DWORD PTR [rax-0x810000]
   140031017:	jmp    rax
   140031019:	add    BYTE PTR [rax],al
   14003101b:	(bad)  
   14003101c:	(bad)  
   14003101d:	inc    DWORD PTR [rax-0xc10000]
   140031023:	inc    eax
   140031025:	add    BYTE PTR [rax],al
   140031027:	(bad)  
   140031028:	(bad)  
   140031029:	inc    eax
   14003102b:	add    BYTE PTR [rax],al
   14003102d:	(bad)  
   14003102e:	(bad)  
   14003102f:	inc    DWORD PTR [rax-0xc10000]
   140031035:	inc    eax
   140031037:	add    BYTE PTR [rax],al
   140031039:	(bad)  
   14003103a:	(bad)  
   14003103b:	inc    DWORD PTR [rax]
   14003103d:	add    BYTE PTR [rax],al
   14003103f:	jg     0x140031040
   140031041:	jmp    rax
   140031043:	add    BYTE PTR [rax],al
   140031045:	add    edi,edi
   140031047:	cld    
   140031048:	add    BYTE PTR [rax],al
   14003104a:	add    BYTE PTR [rdi-0x1],bh
   14003104d:	jmp    rax
   14003104f:	add    BYTE PTR [rax],al
   140031051:	add    edi,edi
   140031053:	clc    
   140031054:	add    BYTE PTR [rax],al
   140031056:	add    bh,bh
   140031058:	(bad)  
   140031059:	push   rax
   14003105b:	add    BYTE PTR [rax],al
   14003105d:	add    bh,bh
   14003105f:	rol    BYTE PTR [rax],0x0
   140031062:	add    BYTE PTR [rdi],bh
   140031064:	(bad)  
   140031065:	push   rax
	...
   14003106f:	(bad)  
   140031070:	(bad)  
   140031071:	(bad)  
   140031072:	clc    
	...
   14003107b:	(bad)  
   14003107c:	(bad)  
   14003107d:	(bad)  
   14003107e:	clc    
	...
   140031087:	(bad)  
   140031088:	(bad)  
   140031089:	(bad)  
   14003108a:	cld    
   14003108b:	add    BYTE PTR [rax],al
   14003108d:	add    BYTE PTR [rax],al
   14003108f:	add    BYTE PTR [rax],al
   140031091:	add    BYTE PTR [rdi+rbx*1],al
   140031094:	(bad)  
   140031095:	(bad)  
   140031096:	inc    BYTE PTR [rax]
   140031098:	add    BYTE PTR [rax],al
   14003109a:	add    BYTE PTR [rax],al
   14003109c:	add    BYTE PTR [rax],al
   14003109e:	(bad)  
   14003109f:	ud0    edi,edi
   1400310a2:	inc    DWORD PTR [rax]
   1400310a4:	add    BYTE PTR [rax],al
   1400310a6:	add    BYTE PTR [rax],al
   1400310a8:	add    BYTE PTR [rax],al
   1400310aa:	(bad)  
   1400310ab:	ud0    edi,edi
   1400310ae:	inc    DWORD PTR [rax]
   1400310b0:	add    BYTE PTR [rax],al
   1400310b2:	add    BYTE PTR [rax],al
   1400310b4:	add    BYTE PTR [rax],al
   1400310b6:	(bad)  
   1400310b7:	ud0    edi,edi
   1400310ba:	inc    DWORD PTR [rax+0x0]
   1400310c0:	add    BYTE PTR [rax],al
   1400310c2:	ds ud0 edi,edi
   1400310c6:	inc    eax
   1400310c8:	add    BYTE PTR [rax],al
   1400310ca:	add    BYTE PTR [rax],al
   1400310cc:	add    BYTE PTR [rax],al
   1400310ce:	jg     0x1400310df
   1400310d0:	(bad)  
   1400310d1:	(bad)  
   1400310d2:	jmp    rax
   1400310d4:	add    BYTE PTR [rax],al
   1400310d6:	add    BYTE PTR [rax],al
   1400310d8:	add    BYTE PTR [rax],al
   1400310da:	dec    DWORD PTR [rdi]
   1400310dc:	(bad)  
   1400310dd:	(bad)  
   1400310de:	push   rax
   1400310e0:	add    BYTE PTR [rax],al
   1400310e2:	add    BYTE PTR [rax],al
   1400310e4:	add    BYTE PTR [rbx],al
   1400310e6:	dec    DWORD PTR [rdi]
   1400310e8:	(bad)  
   1400310e9:	(bad)  
   1400310ea:	(bad)  
   1400310eb:	cld    
   1400310ec:	add    BYTE PTR [rax],al
   1400310ee:	add    BYTE PTR [rax],al
   1400310f0:	add    BYTE PTR [rdi],al
   1400310f2:	dec    BYTE PTR [rdi]
   1400310f4:	(bad)  
   1400310f5:	(bad)  
   1400310f6:	(bad)  
   1400310f7:	inc    BYTE PTR [rax]
   1400310f9:	add    BYTE PTR [rax],al
   1400310fb:	add    BYTE PTR [rax],al
   1400310fd:	paddd  mm1,QWORD PTR [rdi]
   140031100:	(bad)  
   140031101:	(bad)  
   140031102:	(bad)  
   140031103:	inc    DWORD PTR [rax]
   140031105:	add    BYTE PTR [rax],al
   140031107:	add    BYTE PTR [rax],al
   140031109:	(bad)  
   14003110a:	cld    
   14003110b:	ud0    edi,edi
   14003110e:	(bad)  
   14003110f:	inc    eax
   140031111:	add    BYTE PTR [rax],al
   140031113:	add    BYTE PTR [rax],al
   140031115:	(bad)  
   140031116:	clc    
   140031117:	ud0    edi,edi
   14003111a:	(bad)  
   14003111b:	push   rax
   14003111d:	add    BYTE PTR [rax],al
   14003111f:	add    BYTE PTR [rax],al
   140031121:	(bad)  
   140031122:	lock ud0 edi,edi
   140031126:	(bad)  
   140031127:	(bad)  
   140031128:	cld    
   140031129:	add    BYTE PTR [rax],al
   14003112b:	add    BYTE PTR [rax],al
   14003112d:	add    BYTE PTR [rax],al
   14003112f:	ud0    edi,edi
   140031132:	(bad)  
   140031133:	(bad)  
   140031134:	inc    DWORD PTR [rax+0x0]
   14003113a:	add    BYTE PTR [rdi],bl
   14003113c:	(bad)  
   14003113d:	(bad)  
   14003113e:	(bad)  
   14003113f:	(bad)  
   140031140:	(bad)  
   140031141:	clc    
   140031142:	add    BYTE PTR [rax],al
   140031144:	add    BYTE PTR [rax],al
   140031146:	add    BYTE PTR [rdi],bl
   140031148:	(bad)  
   140031149:	(bad)  
   14003114a:	(bad)  
   14003114b:	(bad)  
   14003114c:	(bad)  
   14003114d:	(bad)  
   14003114e:	inc    DWORD PTR [rax]
   140031150:	add    BYTE PTR [rax],al
   140031152:	add    BYTE PTR [rdi],bh
   140031154:	(bad)  
   140031155:	(bad)  
   140031156:	(bad)  
   140031157:	(bad)  
   140031158:	(bad)  
   140031159:	(bad)  
   14003115a:	inc    eax
   14003115c:	add    BYTE PTR [rax],al
   14003115e:	add    BYTE PTR [rdi-0x1],bh
   140031161:	(bad)  
   140031162:	(bad)  
   140031163:	(bad)  
   140031164:	(bad)  
   140031165:	(bad)  
   140031166:	(bad)  
   140031167:	clc    
   140031168:	add    BYTE PTR [rax],al
   14003116a:	add    bh,bh
   14003116c:	(bad)  
   14003116d:	(bad)  
   14003116e:	(bad)  
   14003116f:	(bad)  
   140031170:	(bad)  
   140031171:	(bad)  
   140031172:	(bad)  
   140031173:	inc    BYTE PTR [rax]
   140031175:	add    BYTE PTR [rcx],al
   140031177:	(bad)  
   140031178:	(bad)  
   140031179:	(bad)  
   14003117a:	(bad)  
   14003117b:	(bad)  
   14003117c:	(bad)  
   14003117d:	(bad)  
   14003117e:	(bad)  
   14003117f:	jmp    rax
   140031181:	add    BYTE PTR [rdi],cl
   140031183:	(bad)  
   140031184:	(bad)  
   140031185:	(bad)  
   140031186:	(bad)  
   140031187:	(bad)  
   140031188:	(bad)  
   140031189:	(bad)  
   14003118a:	(bad)  
   14003118b:	(bad)  
   14003118c:	inc    DWORD PTR [rax]
   14003118e:	(bad)  
   14003118f:	(bad)  
   140031190:	(bad)  
   140031191:	(bad)  
   140031192:	(bad)  
   140031193:	(bad)  
   140031194:	(bad)  
   140031195:	(bad)  
   140031196:	(bad)  
   140031197:	(bad)  
   140031198:	(bad)  
   140031199:	(bad)  
   14003119a:	(bad)  
   14003119b:	(bad)  
   14003119c:	(bad)  
   14003119d:	(bad)  
   14003119e:	(bad)  
   14003119f:	(bad)  
   1400311a0:	(bad)  
   1400311a1:	(bad)  
   1400311a2:	(bad)  
   1400311a3:	(bad)  
   1400311a4:	(bad)  
   1400311a5:	(bad)  
   1400311a6:	(bad)  
   1400311a7:	(bad)  
   1400311a8:	(bad)  
   1400311a9:	(bad)  
   1400311aa:	(bad)  
   1400311ab:	(bad)  
   1400311ac:	(bad)  
   1400311ad:	(bad)  
   1400311ae:	(bad)  
   1400311af:	(bad)  
   1400311b0:	(bad)  
   1400311b1:	(bad)  
   1400311b2:	(bad)  
   1400311b3:	(bad)  
   1400311b4:	(bad)  
   1400311b5:	(bad)  
   1400311b6:	(bad)  
   1400311b7:	(bad)  
   1400311b8:	(bad)  
   1400311b9:	(bad)  
   1400311ba:	(bad)  
   1400311bb:	(bad)  
   1400311bc:	(bad)  
   1400311bd:	(bad)  
   1400311be:	(bad)  
   1400311bf:	jmp    FWORD PTR [rax]
   1400311c1:	add    BYTE PTR [rax],al
   1400311c3:	add    BYTE PTR [rax+0x0],al
   1400311c6:	add    BYTE PTR [rax],al
   1400311c8:	add    BYTE PTR [rax],0x0
   1400311cb:	add    BYTE PTR [rcx],al
   1400311cd:	add    BYTE PTR [rax],ah
   1400311cf:	add    BYTE PTR [rax],al
   1400311d1:	add    BYTE PTR [rax],al
   1400311d3:	add    BYTE PTR [rax],al
   1400311d5:	rex.X add BYTE PTR [rax],al
	...
   140031508:	add    BYTE PTR [rax],al
   14003150a:	push   rbp
   14003150b:	add    DWORD PTR [rax],eax
   14003150d:	add    BYTE PTR [rbp+0x2],dl
   140031510:	add    BYTE PTR [rax],al
   140031512:	push   rbp
   140031513:	add    eax,DWORD PTR [rax]
   140031515:	add    BYTE PTR [rbp+0x5],dl
   140031518:	add    BYTE PTR [rax],al
   14003151a:	push   rbp
   14003151b:	add    eax,0x5550000
   140031520:	add    BYTE PTR [rax],al
   140031522:	push   rbp
   140031523:	add    al,0x0
   140031525:	add    BYTE PTR [rbp+0x3],dl
   140031528:	add    BYTE PTR [rax],al
   14003152a:	push   rbp
   14003152b:	add    al,BYTE PTR [rax]
   14003152d:	add    BYTE PTR [rbp+0x1],dl
	...
   140031604:	add    BYTE PTR [rax],al
   140031606:	push   rbp
   140031607:	add    al,BYTE PTR [rax]
   140031609:	add    BYTE PTR [rbp+0x5],dl
   14003160c:	add    BYTE PTR [rax],al
   14003160e:	push   rbp
   14003160f:	or     DWORD PTR [rax],eax
   140031611:	add    BYTE PTR [rbp+0xb],dl
   140031614:	add    BYTE PTR [rax],al
   140031616:	push   rbp
   140031617:	or     al,0x0
   140031619:	add    BYTE PTR [rbp+0xd],dl
   14003161c:	add    BYTE PTR [rax],al
   14003161e:	push   rbp
   14003161f:	or     eax,0xc550000
   140031624:	add    BYTE PTR [rax],al
   140031626:	push   rbp
   140031627:	or     eax,DWORD PTR [rax]
   140031629:	add    BYTE PTR [rbp+0x8],dl
   14003162c:	add    BYTE PTR [rax],al
   14003162e:	push   rbp
   14003162f:	(bad)  
   140031630:	add    BYTE PTR [rax],al
   140031632:	push   rbp
   140031633:	add    al,0x0
   140031635:	add    BYTE PTR [rbp+0x2],dl
   140031638:	add    BYTE PTR [rax],al
   14003163a:	push   rbp
   14003163b:	add    DWORD PTR [rax],eax
	...
   1400316f9:	add    BYTE PTR [rax],al
   1400316fb:	add    bl,al
   1400316fd:	(bad)  
   1400316fe:	inc    BYTE PTR [rcx]
   140031700:	cmp    BYTE PTR [rcx-0x7a],cl
   140031703:	add    al,0x25
   140031705:	rex.RB mov WORD PTR [rip+0x5befa339],cs        # 0x19bf2ba45
   14003170c:	xor    DWORD PTR [rbx-0x56d76508],ebp
   140031712:	sti    
   140031713:	mov    eax,0xcdfba625
   140031718:	and    eax,0x26c2fba5
   14003171d:	movabs ds:0x9c2f80f7a22b96f9,eax
   140031726:	lock push rsp
   140031728:	xor    cl,BYTE PTR [rbx+0x441a2ede]
   14003172e:	xchg   esi,eax
   14003172f:	adc    BYTE PTR [rax],al
   140031731:	add    BYTE PTR [rbp+0x9],dl
   140031734:	add    BYTE PTR [rax],al
   140031736:	push   rbp
   140031737:	(bad)  
   140031738:	add    BYTE PTR [rax],al
   14003173a:	push   rbp
   14003173b:	add    eax,0x3550000
   140031740:	add    BYTE PTR [rax],al
   140031742:	push   rbp
   140031743:	add    DWORD PTR [rax],eax
	...
   1400317f1:	add    BYTE PTR [rax],al
   1400317f3:	add    ch,al
   1400317f5:	(bad)  
   1400317f6:	inc    BYTE PTR [rcx]
   1400317f8:	(bad)  
   1400317f9:	(bad)  
   1400317fa:	inc    BYTE PTR [rcx]
   1400317fc:	push   rsp
   1400317fd:	outs   dx,BYTE PTR ds:[rsi]
   1400317fe:	sahf   
   1400317ff:	add    al,0x3d
   140031801:	movabs ds:0xb623c6fdb62e3aeb,al
   14003180a:	(bad)  
   14003180b:	fbld   TBYTE PTR [rax]
   14003180d:	mov    dl,0xff
   14003180f:	(bad)  [rax]
   140031811:	mov    al,0xff
   140031813:	(bad)  
   140031814:	(bad)  
   140031815:	scas   eax,DWORD PTR es:[rdi]
   140031816:	dec    esp
   140031818:	(bad)  
   140031819:	lods   al,BYTE PTR ds:[rsi]
   14003181a:	(bad)  
   14003181b:	mov    edi,0xadfeaa1f
   140031820:	sbb    eax,0x1c98ffa9
   140031825:	test   al,0xff
   140031827:	sbb    DWORD PTR [riz*4-0x5bdd8e02],0xa12d67fc
   140031832:	hlt    
   140031833:	rex.XB xor cl,BYTE PTR [r10+0x1d0d1edb]
   14003183a:	jno    0x140031846
   14003183c:	add    BYTE PTR [rax],al
   14003183e:	push   rbp
   14003183f:	(bad)  
   140031840:	add    BYTE PTR [rax],al
   140031842:	push   rbp
   140031843:	add    eax,0x3550000
   140031848:	add    BYTE PTR [rax],al
   14003184a:	push   rbp
   14003184b:	add    DWORD PTR [rax],eax
	...
   140031855:	add    BYTE PTR [rax],al
   140031857:	add    BYTE PTR [rbp-0x63d7e59a],bl
   14003185d:	sbb    ah,BYTE PTR gs:[rdx-0x65]
   140031861:	sbb    al,BYTE PTR fs:[rax-0x61e69b66]
   140031868:	cwde   
   140031869:	movsxd ebx,DWORD PTR [rcx]
   14003186b:	stos   DWORD PTR es:[rdi],eax
   14003186c:	xchg   edi,eax
   14003186d:	(bad)  
   14003186e:	sbb    DWORD PTR [rax-0x29e79e6a],edi
   140031874:	xchg   ebp,eax
   140031875:	(bad)  
   140031876:	sbb    dh,dl
   140031878:	xchg   esp,eax
   140031879:	pop    rdi
   14003187a:	sbb    ch,al
   14003187c:	xchg   ebx,eax
   14003187d:	pop    rdi
   14003187e:	sbb    BYTE PTR [rdx+rdx*4-0x6e53e8a2],ch
   140031885:	pop    rbp
   140031886:	(bad)  
   140031887:	xchg   BYTE PTR [rdi-0x71a4e8a4],cl
   14003188d:	pop    rbx
   14003188e:	(bad)  
   14003188f:	xor    BYTE PTR [rbp+0x3165b],cl
	...
   1400318ed:	add    BYTE PTR [rax],al
   1400318ef:	add    ch,al
   1400318f1:	(bad)  
   1400318f2:	inc    BYTE PTR [rcx]
   1400318f4:	(bad)  
   1400318f5:	(bad)  
   1400318f6:	inc    BYTE PTR [rdx]
   1400318f8:	cdq    
   1400318f9:	leave  
   1400318fa:	fiadd  DWORD PTR [rbx]
   1400318fc:	rex.B scas eax,DWORD PTR es:[rdi]
   1400318fe:	repnz rex.R
   140031900:	cs sar bh,0xdc
   140031904:	(bad)  
   140031905:	mov    esp,0xb924e1ff
   14003190a:	(bad)  
   14003190b:	fbld   TBYTE PTR [rbx]
   14003190d:	mov    dh,0xff
   14003190f:	(bad)  [rax]
   140031911:	mov    dl,0xfb
   140031913:	ret    
   140031914:	cmp    al,0xac
   140031916:	repnz push rdx
   140031918:	rex.B movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003191a:	in     al,dx
   14003191b:	add    BYTE PTR es:[rax],al
   14003191e:	push   rcx
   14003191f:	add    DWORD PTR [rbp+0x3e01feff],ebp
   140031925:	lods   eax,DWORD PTR ds:[rsi]
   140031926:	cmc    
   140031927:	sbb    al,0x34
   140031929:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14003192a:	hlt    
   14003192b:	and    esp,DWORD PTR [rsi]
   14003192d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003192e:	stc    
   14003192f:	cmp    bl,BYTE PTR [rdi]
   140031931:	test   al,0xfe
   140031933:	rex.WRB sbb rax,0x2950ffa9
   140031939:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003193a:	cli    
   14003193b:	rex xor edx,DWORD PTR [rbx+0x2b121ce2]
   140031942:	jge    0x14003194e
   140031944:	add    BYTE PTR [rax],al
   140031946:	push   rbp
   140031947:	(bad)  
   140031948:	push   rbp
   140031949:	(bad)  
   14003194a:	xor    eax,0x1c649a0a
   14003194f:	push   rsp
   140031950:	popf   
   140031951:	data16 sbb dl,BYTE PTR [rcx-0x3ae59862]
   140031958:	stos   BYTE PTR es:[rdi],al
   140031959:	jne    0x14003197f
   14003195b:	loopne 0x140031918
   14003195d:	xchg   DWORD PTR [rbx],ebp
   14003195f:	out    dx,al
   140031960:	(bad)  
   140031961:	nop
   140031962:	(bad)  
   140031963:	hlt    
   140031964:	int    0x97
   140031966:	cs clc 
   140031968:	rcr    DWORD PTR [rdi-0x5e2806d3],1
   14003196e:	sub    al,0xfb
   140031970:	fisub  WORD PTR [rsi-0x572400d5]
   140031976:	sub    edi,edi
   140031978:	fsub   DWORD PTR [rdx-0x632e02d3]
   14003197e:	(bad)  
   14003197f:	stc    
   140031980:	int    0x98
   140031982:	sub    eax,0x2d8abef8
   140031987:	hlt    
   140031988:	mov    al,0x7c
   14003198a:	sub    ch,ah
   14003198c:	movabs eax,ds:0x8ed5175b8fe3236d
   140031995:	pop    rbx
   140031996:	(bad)  
   140031997:	xchg   esi,eax
   140031998:	mov    WORD PTR [rdx+0x16],ds
   14003199b:	rex.RXB mov r11d,DWORD PTR [r9+0x16]
   14003199f:	or     BYTE PTR [rax],al
	...
   1400319e9:	add    BYTE PTR [rax],al
   1400319eb:	add    bh,al
   1400319ed:	(bad)  
   1400319ee:	inc    BYTE PTR [rcx]
   1400319f0:	(bad)  
   1400319f1:	(bad)  
   1400319f2:	inc    BYTE PTR [rdx]
   1400319f4:	ret    0xfeff
   1400319f7:	add    edx,DWORD PTR [rdx-0x54]
   1400319fa:	in     eax,0x11
   1400319fc:	xor    al,0xc8
   1400319fe:	dec    edi
   140031a00:	sub    eax,0x27e2ffc3
   140031a05:	mov    edi,0xba24e1ff
   140031a0a:	jmp    rax
   140031a0c:	cmp    DWORD PTR [rbx-0x7fc65808],esi
   140031a12:	(bad)
   140031a15:	add    BYTE PTR [rbp+0x1],dl
	...
   140031a34:	(bad)  
   140031a35:	lods   eax,DWORD PTR ds:[rsi]
   140031a36:	clc    
   140031a37:	or     eax,0x29fdac27
   140031a3c:	and    ch,BYTE PTR [rdi+rdi*8-0x3063bec9]
   140031a43:	xor    dl,BYTE PTR [rbx-0x6297cd93]
   140031a49:	sbb    ax,cx
   140031a4c:	mov    ecx,0xccea2e86
   140031a51:	cwde   
   140031a52:	xor    al,0xf8
   140031a54:	fldenv [rsi-0x4d1d01cb]
   140031a5a:	cmp    bh,bh
   140031a5c:	out    0xb9,al
   140031a5e:	cmp    eax,0x41c2ebff
   140031a63:	(bad)  
   140031a64:	out    dx,eax
   140031a65:	leave  
   140031a66:	rex.X push rcx
   140031a69:	retf   
   140031a6a:	rex.RXB push r11
   140031a6d:	int3   
   140031a6e:	rex.RB push r13
   140031a71:	(bad)  
   140031a72:	rex.RB push r12
   140031a75:	(bad)  
   140031a76:	rex.RB push r10
   140031a79:	retf   
   140031a7a:	rex.RX (bad) 
   140031a7c:	out    dx,eax
   140031a7d:	mov    DWORD PTR [rbp-0x1],0xff46c2f0
   140031a84:	in     al,dx
   140031a85:	mov    edi,0xb9e6ff43
   140031a8a:	rex.XB jmp r10
   140031a8d:	mov    ch,0x3f
   140031a8f:	(bad)  
   140031a90:	fsubr  QWORD PTR [rax-0x6e3a00c6]
   140031a96:	xor    eax,0x2775a9f6
   140031a9b:	jmp    0x10c19742d
   140031aa0:	mov    WORD PTR [rcx+0x16],ds
   140031aa3:	(bad)  
   140031aa4:	mov    ebx,DWORD PTR [rcx+0x16]
   140031aa7:	adc    al,0x0
	...
   140031ae9:	add    BYTE PTR [rax],al
   140031aeb:	add    ah,al
   140031aed:	(bad)  
   140031aee:	inc    BYTE PTR [rdx]
   140031af0:	ret    
   140031af1:	(bad)  
   140031af2:	inc    BYTE PTR [rbx]
   140031af4:	sar    edi,0xfe
   140031af7:	add    al,0x47
   140031af9:	retf   0x69fc
   140031afc:	xor    ecx,ebx
   140031afe:	jmp    rsp
   140031b00:	sub    al,0xc7
   140031b02:	jmp    rbx
   140031b04:	(bad)  
   140031b05:	mov    ebp,0xb532e1ff
   140031b0a:	sti    
   140031b0b:	(bad)  
   140031b0c:	cmp    eax,DWORD PTR [rbp+0x1bcc]
   140031b12:	push   rbp
   140031b13:	add    eax,DWORD PTR [rax]
	...
   140031b35:	add    BYTE PTR [rax],al
   140031b37:	add    BYTE PTR [rdx-0x60fde496],ah
   140031b3d:	imul   ebx,DWORD PTR [rdi],0x66
   140031b40:	cdq    
   140031b41:	outs   dx,BYTE PTR ds:[rsi]
   140031b42:	sub    ebp,ecx
   140031b44:	mov    bh,0x8f
   140031b46:	rex
   140031b47:	lock shl BYTE PTR [rdx-0x4a1c04cb],cl
   140031b4e:	ss (bad) 
   140031b50:	jmp    0x140031b14
   140031b52:	cmp    edi,edi
   140031b54:	repnz int 0x44
   140031b57:	(bad)  
   140031b58:	clc    
   140031b59:	ror    DWORD PTR [rdx-0x1],cl
   140031b5c:	cli    
   140031b5d:	xlat   BYTE PTR ds:[rbx]
   140031b5e:	rex.WRB (bad) 
   140031b60:	sti    
   140031b61:	fisttp QWORD PTR [rdi-0x1]
   140031b64:	sti    
   140031b65:	fst    QWORD PTR [rcx-0x1]
   140031b68:	cld    
   140031b69:	fst    QWORD PTR [rcx-0x1]
   140031b6c:	sti    
   140031b6d:	fcom   QWORD PTR [rdx-0x1]
   140031b70:	std    
   140031b71:	ficom  WORD PTR [rdx-0x1]
   140031b74:	std    
   140031b75:	ficom  DWORD PTR [rdx-0x1]
   140031b78:	sti    
   140031b79:	ficom  DWORD PTR [rcx-0x1]
   140031b7c:	cld    
   140031b7d:	fst    DWORD PTR [rdx-0x1]
   140031b80:	cli    
   140031b81:	fcom   DWORD PTR [rcx-0x1]
   140031b84:	clc    
   140031b85:	(bad)  
   140031b86:	rex.WXB push r14
   140031b89:	ror    BYTE PTR [rdi+rdi*8-0xd],cl
   140031b8d:	retf   
   140031b8e:	rex.WB (bad) 
   140031b90:	out    dx,eax
   140031b91:	rol    DWORD PTR [rbp-0x1],0xe9
   140031b95:	mov    ebx,0xb0e1ff3e
   140031b9a:	cmp    eax,0x3ba2d8ff
   140031b9f:	std    
   140031ba0:	mov    dh,0x81
   140031ba2:	sub    eax,0x15598df0
   140031ba7:	ror    BYTE PTR [rbx-0x758de9a7],cl
   140031bad:	pop    rax
   140031bae:	adc    eax,0xd
	...
   140031be7:	add    ah,al
   140031be9:	(bad)  
   140031bea:	inc    BYTE PTR [rcx]
   140031bec:	ret    
   140031bed:	(bad)  
   140031bee:	inc    BYTE PTR [rbx]
   140031bf0:	sar    edi,0xfe
   140031bf3:	add    al,0xc0
   140031bf5:	(bad)  
   140031bf6:	inc    BYTE PTR [rdi]
   140031bf8:	sar    r14d,1
   140031bfb:	test   eax,0xe4ffcd33
   140031c00:	sub    al,0xc3
   140031c02:	jmp    rbx
   140031c04:	es mov edx,0xac41e2ff
   140031c0a:	icebp  
   140031c0b:	mov    BYTE PTR [rax],al
   140031c0d:	add    BYTE PTR [rbp+0x7],dl
   140031c10:	add    BYTE PTR [rax],al
   140031c12:	push   rbp
   140031c13:	add    al,BYTE PTR [rax]
	...
   140031c31:	add    BYTE PTR [rax],al
   140031c33:	add    BYTE PTR [rbx-0x5be1e395],ah
   140031c39:	push   0x1c
   140031c3b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140031c3c:	mov    esi,0xd9ed2d8a
   140031c41:	movabs eax,ds:0xc3ecff2fb6e4fd27
   140031c4a:	ds push rdx
   140031c4d:	rol    DWORD PTR [rbp-0x1],1
   140031c50:	neg    eax
   140031c52:	rex.WRXB (bad) 
   140031c54:	cli    
   140031c55:	fist   WORD PTR [rdi+rdi*8-0x5]
   140031c59:	fistp  WORD PTR [rdx-0x1]
   140031c5c:	cld    
   140031c5d:	loopne 0x140031cbb
   140031c5f:	(bad)  
   140031c60:	std    
   140031c61:	in     al,0x5a
   140031c63:	(bad)  
   140031c64:	std    
   140031c65:	out    0x5c,eax
   140031c67:	(bad)  
   140031c68:	std    
   140031c69:	in     al,0x61
   140031c6b:	(bad)  
   140031c6c:	(bad)  
   140031c6d:	in     eax,0x60
   140031c6f:	(bad)  
   140031c70:	(bad)  
   140031c71:	in     al,0x60
   140031c73:	(bad)  
   140031c74:	(bad)  
   140031c75:	out    0x60,eax
   140031c77:	(bad)  
   140031c78:	(bad)  
   140031c79:	in     al,0x5f
   140031c7b:	(bad)  
   140031c7c:	(bad)  
   140031c7d:	loopne 0x140031cdb
   140031c7f:	(bad)  
   140031c80:	(bad)  
   140031c81:	ficomp WORD PTR [rcx-0x1]
   140031c84:	(bad)  
   140031c85:	fstp   QWORD PTR [rcx-0x1]
   140031c88:	std    
   140031c89:	fcom   QWORD PTR [rsi-0x1]
   140031c8c:	sti    
   140031c8d:	(bad)  
   140031c8e:	push   rbx
   140031c8f:	push   rdi
   140031c91:	(bad)  
   140031c92:	push   rax
   140031c93:	push   rbp
   140031c95:	int    0x4b
   140031c97:	push   rcx
   140031c99:	(bad)
   140031c9c:	in     eax,dx
   140031c9d:	mov    esp,0xafe3ff43
   140031ca2:	cmp    bh,bh
   140031ca4:	(bad)  
   140031ca5:	pushf  
   140031ca6:	xor    ebp,edi
   140031ca8:	mov    cl,0x7b
   140031caa:	sub    ebp,esi
   140031cac:	mov    ebx,DWORD PTR [rcx+0x16]
   140031caf:	leave  
   140031cb0:	mov    bl,BYTE PTR [rax+0x15]
   140031cb3:	add    BYTE PTR [rax],al
	...
   140031ce6:	add    BYTE PTR [rax],al
   140031ce8:	ret    
   140031ce9:	(bad)  
   140031cea:	inc    BYTE PTR [rdx]
   140031cec:	sar    edi,0xfe
   140031cef:	add    al,0xc0
   140031cf1:	(bad)  
   140031cf2:	inc    BYTE PTR [rsi]
   140031cf4:	sar    bh,0xfe
   140031cf7:	or     DWORD PTR [rip+0x31cdffd4],edi        # 0x171d11cd1
   140031cfd:	retf   
   140031cfe:	jmp    rsp
   140031d00:	sub    eax,eax
   140031d02:	jmp    rbx
   140031d04:	sub    dh,BYTE PTR [rbp-0x65bf1d03]
   140031d0a:	jrcxz  0x140031d5f
   140031d0c:	add    BYTE PTR [rax],al
   140031d0e:	push   rbp
   140031d0f:	(bad)  
   140031d10:	add    BYTE PTR [rax],al
   140031d12:	push   rbp
   140031d13:	add    DWORD PTR [rax],eax
	...
   140031d2d:	add    BYTE PTR [rax],al
   140031d2f:	add    BYTE PTR [rsp+rbp*2+0x6ba5511c],ah
   140031d36:	sbb    cl,ah
   140031d38:	enter  0x228e,0xf5
   140031d3c:	loopne 0x140031ced
   140031d3e:	sub    edi,edi
   140031d40:	jmp    0x140031d03
   140031d42:	xor    edi,edi
   140031d44:	hlt    
   140031d45:	iret   
   140031d46:	(bad)  
   140031d47:	push   rdi
   140031d49:	fmul   DWORD PTR [rax-0x1]
   140031d4c:	stc    
   140031d4d:	fst    QWORD PTR [rbx-0x1]
   140031d50:	sti    
   140031d51:	fistp  WORD PTR [rdi+rdi*8-0x3]
   140031d55:	out    0x60,al
   140031d57:	(bad)  
   140031d58:	std    
   140031d59:	out    0x65,al
   140031d5b:	(bad)  
   140031d5c:	(bad)  
   140031d5d:	(bad)  
   140031d5e:	addr32 (bad) 
   140031d60:	(bad)  
   140031d61:	jmp    0x140031dca
   140031d63:	(bad)  
   140031d64:	(bad)  
   140031d65:	in     al,dx
   140031d66:	push   0xffffffffffffffff
   140031d68:	(bad)  
   140031d69:	in     al,dx
   140031d6a:	imul   edi,edi,0xffffffff
   140031d6d:	jmp    0x140031ddb
   140031d6f:	(bad)  
   140031d70:	(bad)  
   140031d71:	jmp    0x140031ddf
   140031d73:	(bad)  
   140031d74:	(bad)  
   140031d75:	(bad)  
   140031d76:	ins    BYTE PTR es:[rdi],dx
   140031d77:	(bad)  
   140031d78:	(bad)  
   140031d79:	jmp    0x12a031cea
   140031d7e:	push   0x69e8ffff
   140031d83:	(bad)  
   140031d84:	jmp    rdi
   140031d86:	data16 (bad) 
   140031d88:	jmp    rdx
   140031d8a:	(bad)  
   140031d8b:	(bad)  
   140031d8c:	cld    
   140031d8d:	loope  0x140031deb
   140031d8f:	(bad)  
   140031d90:	sti    
   140031d91:	fistp  DWORD PTR [rax-0x1]
   140031d94:	sti    
   140031d95:	fcom   DWORD PTR [rdi+rdi*8-0x8]
   140031d99:	(bad)  
   140031d9a:	push   rcx
   140031d9b:	push   rsi
   140031d9d:	int3   
   140031d9e:	rex.WB push r8
   140031da1:	ret    
   140031da2:	rex.XB (bad) 
   140031da4:	jmp    0x120025a5d
   140031da9:	stos   DWORD PTR es:[rdi],eax
   140031daa:	(bad)  
   140031dab:	inc    eax
   140031dad:	xchg   DWORD PTR [rax],ebp
   140031daf:	mul    DWORD PTR [rcx-0x7518dc94]
   140031db5:	pop    rax
   140031db6:	adc    eax,0x15578972
   140031dbb:	add    eax,DWORD PTR [rax]
	...
   140031de5:	add    BYTE PTR [rax],al
   140031de7:	add    dl,al
   140031de9:	(bad)  
   140031dea:	inc    BYTE PTR [rbx]
   140031dec:	sar    bh,0xfe
   140031def:	add    eax,0x8feffbe
   140031df4:	mov    esi,0x3c0cfeff
   140031df9:	(bad)  
   140031dfa:	(bad)  
   140031dfb:	fidiv  WORD PTR [rax]
   140031dfd:	retf   0xe4ff
   140031e00:	and    al,0xba
   140031e02:	jmp    rbx
   140031e04:	sub    ebp,DWORD PTR [rdi-0x78c61e05]
   140031e0a:	sar    BYTE PTR [rax+rax*1],1
   140031e0d:	add    BYTE PTR [rbp+0x8],dl
   140031e10:	add    BYTE PTR [rax],al
   140031e12:	push   rbp
   140031e13:	add    DWORD PTR [rax],eax
	...
   140031e29:	add    BYTE PTR [rax],al
   140031e2b:	add    BYTE PTR [rbp-0x408fe394],ah
   140031e31:	mov    DWORD PTR [rdi],ebp
   140031e33:	(bad)  
   140031e34:	(bad)  
   140031e35:	cdq    
   140031e36:	sbb    al,0xfc
   140031e38:	out    0xb7,eax
   140031e3a:	sub    bh,bh
   140031e3c:	lock int3 
   140031e3e:	ss push rsp
   140031e41:	rol    DWORD PTR [rbp-0x1],cl
   140031e44:	clc    
   140031e45:	fimul  DWORD PTR [rdi-0x1]
   140031e48:	cli    
   140031e49:	loope  0x140031ea4
   140031e4b:	(bad)  
   140031e4c:	cld    
   140031e4d:	out    0x60,al
   140031e4f:	(bad)  
   140031e50:	std    
   140031e51:	jmp    0x12c011dbc
   140031e56:	push   0xffffffffffffffff
   140031e58:	(bad)  
   140031e59:	in     eax,dx
   140031e5a:	outs   dx,DWORD PTR ds:[rsi]
   140031e5b:	(bad)  
   140031e5c:	push   rax
   140031e5e:	jo     0x140031e5f
   140031e60:	(bad)  
   140031e61:	out    dx,eax
   140031e62:	jae    0x140031e63
   140031e64:	push   rcx
   140031e66:	jbe    0x140031e67
   140031e68:	push   rax
   140031e6a:	ja     0x140031e6b
   140031e6c:	push   rax
   140031e6e:	jbe    0x140031e6f
   140031e70:	(bad)  
   140031e71:	out    dx,eax
   140031e72:	ja     0x140031e73
   140031e74:	(bad)  
   140031e75:	out    dx,al
   140031e76:	jbe    0x140031e77
   140031e78:	(bad)  
   140031e79:	in     eax,dx
   140031e7a:	ja     0x140031e7b
   140031e7c:	(bad)  
   140031e7d:	in     eax,dx
   140031e7e:	ja     0x140031e7f
   140031e80:	(bad)  
   140031e81:	jmp    0x140031ef7
   140031e83:	(bad)  
   140031e84:	(bad)  
   140031e85:	(bad)  
   140031e86:	jb     0x140031e87
   140031e88:	(bad)  
   140031e89:	call   0x128031dfc
   140031e8e:	push   0x62e4ffff
   140031e93:	(bad)  
   140031e94:	(bad)  
   140031e95:	fistp  WORD PTR [rsi-0x1]
   140031e98:	sti    
   140031e99:	ficomp DWORD PTR [rdx-0x1]
   140031e9c:	clc    
   140031e9d:	(bad)  
   140031e9e:	push   rbp
   140031e9f:	push   rdi
   140031ea1:	int    0x4e
   140031ea3:	push   rbx
   140031ea5:	(bad)  
   140031ea6:	rex.WB (bad) 
   140031ea8:	in     al,dx
   140031ea9:	mov    ebp,0xafe2ff3c
   140031eae:	xor    al,0xff
   140031eb0:	(bad)  
   140031eb1:	(bad)  
   140031eb2:	sub    eax,0x2572aafd
   140031eb7:	out    dx,al
   140031eb8:	mov    bl,BYTE PTR [rax+0x15]
   140031ebb:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140031ebc:	mov    DWORD PTR [rax+0x15],ebx
   140031ebf:	or     eax,0x0
	...
   140031ee8:	sar    bh,0xfe
   140031eeb:	add    al,0xbe
   140031eed:	(bad)  
   140031eee:	inc    BYTE PTR [rdi]
   140031ef0:	mov    esp,0xbc0afeff
   140031ef5:	(bad)  
   140031ef6:	dec    BYTE PTR [rip+0xffffffffe0ffd73d]        # 0x12102f639
   140031efc:	(bad)  
   140031efd:	retf   0xe4ff
   140031f00:	and    al,0xb9
   140031f02:	jmp    rbx
   140031f04:	sub    al,0xad
   140031f06:	sti    
   140031f07:	loope  0x140031f3f
   140031f09:	jge    0x140031ed3
   140031f0b:	cmp    DWORD PTR [rax],eax
   140031f0d:	add    BYTE PTR [rbp+0xa],dl
   140031f10:	add    BYTE PTR [rax],al
   140031f12:	push   rbp
   140031f13:	add    al,BYTE PTR [rax]
	...
   140031f25:	add    BYTE PTR [rax],al
   140031f27:	add    BYTE PTR [rsi-0x3f8ae293],ah
   140031f2d:	mov    DWORD PTR [rcx],ebp
   140031f2f:	out    dx,al
   140031f30:	fisub  DWORD PTR [rbp-0x3f1601e1]
   140031f36:	sub    eax,0x3bcff1ff
   140031f3b:	push   rsp
   140031f3d:	(bad)  
   140031f3e:	rex.RB push r15
   140031f41:	fmul   QWORD PTR [rdi-0x1]
   140031f44:	cli    
   140031f45:	jrcxz  0x140031fa0
   140031f47:	(bad)  
   140031f48:	cld    
   140031f49:	call   0x12d011eaf
   140031f4e:	imul   edi,edi,0xff70ecfe
   140031f54:	(bad)  
   140031f55:	out    dx,al
   140031f56:	je     0x140031f57
   140031f58:	push   rcx
   140031f5a:	jp     0x140031f5b
   140031f5c:	push   rcx
   140031f5e:	jl     0x140031f5f
   140031f60:	push   rax
   140031f62:	jle    0x140031f63
   140031f64:	push   rcx
   140031f66:	jg     0x140031f67
   140031f68:	push   rax
   140031f6a:	cmp    edi,0xff82f0ff
   140031f70:	push   rcx
   140031f72:	cmp    edi,0xffffffff
   140031f75:	lock cmp edi,0xffffffff
   140031f79:	lock (bad) 
   140031f7b:	(bad)  
   140031f7c:	push   rax
   140031f7e:	jle    0x140031f7f
   140031f80:	(bad)  
   140031f81:	out    dx,al
   140031f82:	jge    0x140031f83
   140031f84:	(bad)  
   140031f85:	out    dx,al
   140031f86:	jl     0x140031f87
   140031f88:	(bad)  
   140031f89:	in     eax,dx
   140031f8a:	ja     0x140031f8b
   140031f8c:	(bad)  
   140031f8d:	jmp    0x128031f08
   140031f92:	jno    0x140031f93
   140031f94:	jmp    rdi
   140031f96:	push   0x64e2ffff
   140031f9b:	(bad)  
   140031f9c:	sti    
   140031f9d:	fcomp  QWORD PTR [rbp-0x1]
   140031fa0:	stc    
   140031fa1:	xlat   BYTE PTR ds:[rbx]
   140031fa2:	push   rsi
   140031fa3:	(bad)  
   140031fa4:	clc    
   140031fa5:	rcl    BYTE PTR [rax-0x1],1
   140031fa8:	hlt    
   140031fa9:	leave  
   140031faa:	rex.WB (bad) 
   140031fac:	out    dx,eax
   140031fad:	mov    esi,0xafe6ff41
   140031fb2:	ss (bad) 
   140031fb4:	fcomp  DWORD PTR [rdx+rbp*1+0x2174acff]
   140031fbb:	lock mov bl,BYTE PTR [rax+0x15]
   140031fbf:	stos   DWORD PTR es:[rdi],eax
   140031fc0:	mov    DWORD PTR [rax+0x15],ebx
   140031fc3:	or     BYTE PTR [rax],al
	...
   140031fe5:	add    BYTE PTR [rax],al
   140031fe7:	add    BYTE PTR [rsi-0x43fa0101],bh
   140031fed:	(bad)  
   140031fee:	dec    BYTE PTR [rcx]
   140031ff0:	mov    edx,0xba0dfeff
   140031ff5:	(bad)  
   140031ff6:	(bad)  
   140031ff7:	adc    BYTE PTR [rax-0x28],al
   140031ffa:	(bad)  
   140031ffb:	fdiv   DWORD PTR [rax]
   140031ffd:	enter  0xe4ff,0x24
   140032001:	mov    bh,0xff
   140032003:	in     al,0x2a
   140032005:	lods   eax,DWORD PTR ds:[rsi]
   140032006:	cld    
   140032007:	jrcxz  0x140032042
   140032009:	test   edx,edx
   14003200b:	rex.WXB add BYTE PTR [r8],al
   14003200e:	push   rbp
   14003200f:	(bad)  
   140032010:	add    BYTE PTR [rax],al
   140032012:	push   rbp
   140032013:	add    eax,DWORD PTR [rax]
	...
   140032021:	add    BYTE PTR [rax],al
   140032023:	add    BYTE PTR [rdi-0x3e99e292],ah
   140032029:	mov    BYTE PTR [rbx],ch
   14003202b:	in     eax,dx
   14003202c:	fild   QWORD PTR [rdx-0x3f1401dd]
   140032032:	xor    edi,edi
   140032034:	lock (bad) 
   140032036:	(bad)  
   140032037:	push   rsp
   140032039:	(bad)  
   14003203a:	rex.RB push r15
   14003203d:	fisttp WORD PTR [rsi-0x1]
   140032040:	stc    
   140032041:	in     eax,0x55
   140032043:	(bad)  
   140032044:	cld    
   140032045:	call   0x12e011fac
   14003204a:	ins    DWORD PTR es:[rdi],dx
   14003204b:	(bad)  
   14003204c:	(bad)  
   14003204d:	in     eax,dx
   14003204e:	jae    0x14003204f
   140032050:	push   rcx
   140032052:	jns    0x140032053
   140032054:	push   rdx
   140032056:	jle    0x140032057
   140032058:	push   rbx
   14003205a:	(bad)  
   14003205b:	(bad)  
   14003205c:	push   rsp
   14003205e:	cmp    edi,0xffffffff
   140032061:	hlt    
   140032062:	test   edi,edi
   140032064:	(bad)  
   140032065:	hlt    
   140032066:	mov    bh,bh
   140032068:	(bad)  
   140032069:	repz mov bh,bh
   14003206c:	(bad)  
   14003206d:	repz mov edi,?
   140032070:	std    
   140032071:	repz (bad) 
   140032073:	(bad)  
   140032074:	std    
   140032075:	repnz mov ?,edi
   140032078:	std    
   140032079:	repnz (bad) 
   14003207b:	(bad)  
   14003207c:	(bad)  
   14003207d:	icebp  
   14003207e:	mov    edi,edi
   140032080:	std    
   140032081:	lock mov edi,edi
   140032084:	(bad)  
   140032085:	out    dx,eax
   140032086:	xchg   bh,bh
   140032088:	(bad)  
   140032089:	in     eax,dx
   14003208a:	(bad)  
   14003208b:	(bad)  
   14003208c:	(bad)  
   14003208d:	in     eax,dx
   14003208e:	jl     0x14003208f
   140032090:	(bad)  
   140032091:	in     al,dx
   140032092:	js     0x140032093
   140032094:	(bad)  
   140032095:	jmp    0x12603200f
   14003209a:	outs   dx,DWORD PTR ds:[rsi]
   14003209b:	(bad)  
   14003209c:	jmp    rdx
   14003209e:	fs (bad) 
   1400320a0:	cld    
   1400320a1:	ficomp WORD PTR [rdi-0x1]
   1400320a4:	stc    
   1400320a5:	xlat   BYTE PTR ds:[rbx]
   1400320a6:	pop    rcx
   1400320a7:	(bad)  
   1400320a8:	clc    
   1400320a9:	iret   
   1400320aa:	push   rcx
   1400320ab:	push   rsp
   1400320ad:	leave  
   1400320ae:	rex.WX push rax
   1400320b1:	mov    edi,0xb1e8ff41
   1400320b6:	cmp    bh,bh
   1400320b8:	fcomp  DWORD PTR [rax+rbp*1+0x1f71a9ff]
   1400320bf:	out    dx,al
   1400320c0:	mov    ebx,DWORD PTR [rax+0x15]
   1400320c3:	movabs al,ds:0x5155889
	...
   1400320e8:	mov    ebp,0xbb06feff
   1400320ed:	(bad)  
   1400320ee:	dec    BYTE PTR [rdx]
   1400320f0:	mov    eax,0xb70ffeff
   1400320f5:	(bad)  
   1400320f6:	(bad)  
   1400320f7:	adc    al,0x45
   1400320f9:	(bad)  
   1400320fb:	leave  
   1400320fc:	xor    ebx,ecx
   1400320fe:	jmp    rsp
   140032100:	and    al,0xb9
   140032102:	jmp    rsp
   140032104:	lods   eax,DWORD PTR es:[rsi]
   140032106:	std    
   140032107:	jrcxz  0x14003214a
   140032109:	cdq    
   14003210a:	jrcxz  0x14003217e
   14003210c:	add    BYTE PTR [rax],al
   14003210e:	push   rbp
   14003210f:	adc    al,0x0
   140032111:	add    BYTE PTR [rbp+0x6],dl
	...
   140032120:	test   al,0x6e
   140032122:	sbb    eax,0x2f87bd42
   140032127:	in     eax,0xdd
   140032129:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003212a:	sbb    edi,ebp
   14003212c:	(bad)  
   14003212d:	shl    DWORD PTR [rax],0xff
   140032130:	out    dx,eax
   140032131:	int3   
   140032132:	ds push rbx
   140032135:	xlat   BYTE PTR ds:[rbx]
   140032136:	rex.RX push rsi
   140032139:	fisttp WORD PTR [rsi-0x1]
   14003213c:	stc    
   14003213d:	loop   0x140032199
   14003213f:	(bad)  
   140032140:	cld    
   140032141:	jmp    0x1400321a6
   140032143:	(bad)  
   140032144:	std    
   140032145:	out    dx,eax
   140032146:	push   0xffffffffffffffff
   140032148:	(bad)  
   140032149:	icebp  
   14003214a:	je     0x14003214b
   14003214c:	(bad)  
   14003214d:	bnd jp 0x14003214f
   140032150:	push   rbx
   140032152:	cmp    bh,0xff
   140032155:	hlt    
   140032156:	test   bh,bh
   140032158:	push   rsi
   14003215a:	xchg   bh,bh
   14003215c:	(bad)  
   14003215d:	hlt    
   14003215e:	mov    bh,bh
   140032160:	std    
   140032161:	repz (bad) 
   140032163:	(bad)  
   140032164:	std    
   140032165:	repnz xchg ebp,eax
   140032167:	(bad)  
   140032168:	sti    
   140032169:	icebp  
   14003216a:	(bad)  
   14003216b:	(bad)  
   14003216c:	sti    
   14003216d:	out    dx,eax
   14003216e:	(bad)  
   14003216f:	(bad)  
   140032170:	cli    
   140032171:	out    dx,eax
   140032172:	sahf   
   140032173:	(bad)  
   140032174:	cli    
   140032175:	out    dx,al
   140032176:	lahf   
   140032177:	(bad)  
   140032178:	cli    
   140032179:	in     al,dx
   14003217a:	sahf   
   14003217b:	(bad)  
   14003217c:	cli    
   14003217d:	out    dx,al
   14003217e:	fwait
   14003217f:	(bad)  
   140032180:	cli    
   140032181:	in     al,dx
   140032182:	xchg   edi,eax
   140032183:	(bad)  
   140032184:	cli    
   140032185:	in     al,dx
   140032186:	xchg   ecx,eax
   140032187:	(bad)  
   140032188:	std    
   140032189:	in     eax,dx
   14003218a:	mov    edi,edi
   14003218c:	cld    
   14003218d:	lock xchg edi,edi
   140032190:	(bad)  
   140032191:	out    dx,al
   140032192:	(bad)  
   140032193:	(bad)  
   140032194:	(bad)  
   140032195:	in     eax,dx
   140032196:	jl     0x140032197
   140032198:	(bad)  
   140032199:	jmp    0x128032115
   14003219e:	jo     0x14003219f
   1400321a0:	(bad)  
   1400321a1:	loop   0x14003220a
   1400321a3:	(bad)  
   1400321a4:	(bad)  
   1400321a5:	frstor [rdx-0x1]
   1400321a8:	stc    
   1400321a9:	xlat   BYTE PTR ds:[rbx]
   1400321aa:	pop    rcx
   1400321ab:	push   rsi
   1400321ad:	rcl    BYTE PTR [rdx-0x1],1
   1400321b0:	repz (bad) 
   1400321b2:	rex.WB (bad) 
   1400321b4:	out    dx,eax
   1400321b5:	mov    ebp,0xb0e8ff40
   1400321ba:	xor    al,0xff
   1400321bc:	(bad)  
   1400321bd:	xchg   edi,eax
   1400321be:	and    eax,0x1e6da6ff
   1400321c3:	out    dx,al
   1400321c4:	mov    ebx,DWORD PTR [rax+0x15]
   1400321c7:	xchg   ebx,eax
	...
   1400321e8:	mov    ebx,0xb906feff
   1400321ed:	(bad)  
   1400321ee:	dec    BYTE PTR [rip+0x11feffb6]        # 0x1520221aa
   1400321f4:	mov    ah,0xff
   1400321f6:	(bad)  
   1400321f7:	(bad)  
   1400321f8:	rex.WRB (bad) 
   1400321fb:	mov    bl,0x36
   1400321fd:	(bad)  
   1400321fe:	jmp    rbp
   140032200:	es mov esp,0xaf24e5ff
   140032206:	(bad)  
   140032207:	jrcxz  0x14003224b
   140032209:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003220a:	out    dx,eax
   14003220b:	pushf  
   14003220c:	add    BYTE PTR [rax],al
   14003220e:	push   rbp
   14003220f:	sbb    al,0x0
   140032211:	add    BYTE PTR [rbp+0xa],dl
	...
   14003221c:	test   eax,0xaa181d6f
   140032221:	outs   dx,BYTE PTR ds:[rsi]
   140032222:	sbb    al,0xc7
   140032224:	(bad)  
   140032225:	cdq    
   140032226:	sbb    dl,bh
   140032228:	(bad)  
   140032229:	shl    DWORD PTR [rax],0xff
   14003222c:	in     eax,dx
   14003222d:	retf   
   14003222e:	cmp    eax,0x47d5f2ff
   140032233:	push   rsi
   140032235:	fcom   QWORD PTR [rdx-0x1]
   140032238:	stc    
   140032239:	out    0x59,al
   14003223b:	(bad)  
   14003223c:	sti    
   14003223d:	call   0x12f0121a4
   140032242:	imul   edi,edi,0xfffffffe
   140032245:	bnd je 0x140032247
   140032248:	push   rbx
   14003224a:	jnp    0x14003224b
   14003224c:	push   rsp
   14003224e:	cmp    edi,0xff88f4ff
   140032254:	push   rsi
   140032256:	mov    edi,edi
   140032258:	(bad)  
   140032259:	hlt    
   14003225a:	mov    ?,edi
   14003225c:	cld    
   14003225d:	icebp  
   14003225e:	xchg   esp,eax
   14003225f:	push   rbx
   140032261:	out    0x93,al
   140032263:	cld    
   140032264:	fidivr DWORD PTR [rdx-0x663d1190]
   14003226a:	rex.WRX loop 0x140032222
   14003226d:	xchg   BYTE PTR [rip+0x1b689fdd],bh        # 0x15b6bc250
   140032273:	shl    DWORD PTR [rdi-0x4828d78d],cl
   140032279:	mov    eax,DWORD PTR [rdx-0x20]
   14003227c:	retf   
   14003227d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14003227e:	(bad)  
   14003227f:	call   0x13280e362
   140032284:	hlt    
   140032285:	in     eax,0xa2
   140032287:	cld    
   140032288:	stc    
   140032289:	in     al,dx
   14003228a:	lahf   
   14003228b:	(bad)  
   14003228c:	cli    
   14003228d:	in     al,dx
   14003228e:	xchg   ebx,eax
   14003228f:	(bad)  
   140032290:	cld    
   140032291:	in     eax,dx
   140032292:	mov    edi,edi
   140032294:	std    
   140032295:	out    dx,al
   140032296:	xchg   bh,bh
   140032298:	(bad)  
   140032299:	out    dx,al
   14003229a:	jg     0x14003229b
   14003229c:	(bad)  
   14003229d:	in     eax,dx
   14003229e:	ja     0x14003229f
   1400322a0:	jmp    rsi
   1400322a2:	jb     0x1400322a3
   1400322a4:	jmp    rdx
   1400322a6:	imul   edi,edi,0xff61defe
   1400322ac:	sti    
   1400322ad:	xlat   BYTE PTR ds:[rbx]
   1400322ae:	pop    rcx
   1400322af:	(bad)  
   1400322b0:	clc    
   1400322b1:	iret   
   1400322b2:	push   rcx
   1400322b3:	push   rdx
   1400322b5:	(bad)  
   1400322b6:	rex.WB (bad) 
   1400322b8:	in     eax,dx
   1400322b9:	mov    ebp,0xaae4ff3c
   1400322be:	cs call rdx
   1400322c1:	xchg   ebx,eax
   1400322c2:	and    edi,edi
   1400322c4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400322c5:	outs   dx,DWORD PTR ds:[rsi]
   1400322c6:	and    ebp,ebx
   1400322c8:	mov    ebx,DWORD PTR [rcx+0x16]
   1400322cb:	pop    rbx
	...
   1400322e8:	mov    ecx,0xb706feff
   1400322ed:	(bad)  
   1400322ee:	dec    BYTE PTR [rdi]
   1400322f0:	mov    ah,0xff
   1400322f2:	(bad)  
   1400322f3:	adc    eax,0x1afeffb2
   1400322f8:	pop    rax
   1400322f9:	loop   0x1400322f9
   1400322fb:	xchg   ebx,eax
   1400322fc:	cmp    dl,dl
   1400322fe:	jmp    rbp
   140032300:	sub    DWORD PTR [rdi-0x4fdd1a01],edi
   140032306:	jmp    rsp
   140032308:	(bad)  
   140032309:	mov    al,0xf6
   14003230b:	int    0x0
   14003230d:	add    BYTE PTR [rbp+0x26],dl
   140032310:	add    BYTE PTR [rax],al
   140032312:	push   rbp
   140032313:	adc    DWORD PTR [rax],eax
   140032315:	add    BYTE PTR [rbp+0x3],dl
   140032318:	add    BYTE PTR [rax],al
   14003231a:	add    BYTE PTR [rax],al
   14003231c:	stos   BYTE PTR es:[rdi],al
   14003231d:	jo     0x14003233c
   14003231f:	xchg   esp,eax
   140032320:	leave  
   140032321:	nop
   140032322:	es cmc 
   140032324:	jmp    0x12e0252e7
   140032329:	retf   
   14003232a:	(bad)  
   14003232b:	push   rcx
   14003232d:	(bad)  
   14003232e:	rex.RXB push r13
   140032331:	fst    QWORD PTR [rax-0x1]
   140032334:	clc    
   140032335:	in     al,0x58
   140032337:	(bad)  
   140032338:	sti    
   140032339:	jmp    0x14003239e
   14003233b:	(bad)  
   14003233c:	std    
   14003233d:	in     eax,dx
   14003233e:	ins    BYTE PTR es:[rdi],dx
   14003233f:	(bad)  
   140032340:	(bad)  
   140032341:	icebp  
   140032342:	jae    0x140032343
   140032344:	(bad)  
   140032345:	repz jp 0x140032347
   140032348:	push   rbp
   14003234a:	cmp    edi,0xff85f6ff
   140032350:	push   rsi
   140032352:	mov    edi,edi
   140032354:	cld    
   140032355:	hlt    
   140032356:	nop
   140032357:	push   rax
   140032359:	fld    QWORD PTR [rbx+0x57a5cbf8]
   14003235f:	in     eax,0xa3
   140032361:	imul   ebx,DWORD PTR [rip+0x1b69a1bf],0x74        # 0x15b6cc527
   140032368:	movabs eax,ds:0x251b69a03e1b69
   140032371:	add    BYTE PTR [rax],al
   140032373:	add    BYTE PTR [rdi-0x60f3e498],bl
   140032379:	sbb    ebp,DWORD PTR [edx]
   14003237c:	sahf   
   14003237d:	sbb    edx,DWORD PTR [eax-0x62]
   140032381:	sbb    bh,BYTE PTR [ebp-0x62]
   140032385:	push   0xffffffffaacec31d
   14003238a:	gs jmp 0x1399efe7d
   140032390:	stc    
   140032391:	(bad)  
   140032392:	popf   
   140032393:	(bad)  
   140032394:	cli    
   140032395:	in     eax,dx
   140032396:	nop
   140032397:	(bad)  
   140032398:	std    
   140032399:	out    dx,eax
   14003239a:	xchg   edi,edi
   14003239c:	(bad)  
   14003239d:	out    dx,al
   14003239e:	cmp    bh,0xff
   1400323a1:	in     al,dx
   1400323a2:	js     0x1400323a3
   1400323a4:	jmp    rdi
   1400323a6:	jb     0x1400323a7
   1400323a8:	(bad)  
   1400323a9:	loop   0x140032412
   1400323ab:	(bad)  
   1400323ac:	cld    
   1400323ad:	fsub   QWORD PTR [rdx-0x1]
   1400323b0:	stc    
   1400323b1:	rcr    DWORD PTR [rax-0x1],cl
   1400323b4:	test   ch,0x4f
   1400323b7:	push   rdx
   1400323b9:	ret    0xff48
   1400323bc:	in     al,dx
   1400323bd:	mov    bh,0x3b
   1400323bf:	jmp    rdx
   1400323c1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400323c2:	cs inc ebx
   1400323c5:	(bad)  
   1400323c6:	sbb    bh,bl
   1400323c8:	mov    ebx,DWORD PTR [rax+0x15]
   1400323cb:	(bad)  
   1400323cc:	mov    ebx,DWORD PTR [rcx+0x16]
   1400323cf:	(bad)  
	...
   1400323e8:	mov    bh,0xff
   1400323ea:	inc    BYTE PTR [rsi*4-0x4ded0101]
   1400323f1:	(bad)  
   1400323f2:	(bad)  
   1400323f3:	(bad)  
   1400323f4:	mov    al,0xff
   1400323f6:	(bad)  
   1400323f7:	(bad)  
   1400323f8:	push   0x3e6bfde7
   1400323fd:	fdivr  st,st(7)
   1400323ff:	in     eax,0x2d
   140032401:	(bad)  
   140032402:	jmp    rsp
   140032404:	and    esi,DWORD PTR [rbx-0x4dcd1b01]
   14003240a:	sti    
   14003240b:	loop   0x140032440
   14003240d:	outs   dx,BYTE PTR ds:[rsi]
   14003240e:	mov    ch,0x55
   140032410:	add    BYTE PTR [rax],al
   140032412:	push   rbp
   140032413:	sbb    al,0x0
   140032415:	add    BYTE PTR [rbp+0x7],dl
   140032418:	stos   DWORD PTR es:[rdi],eax
   140032419:	jo     0x140032439
   14003241b:	rex.W ret 0x318c
   14003241f:	out    0xe3,al
   140032421:	mov    bl,0x2a
   140032423:	(bad)  
   140032424:	jmp    0x1400323eb
   140032426:	ds push rax
   140032429:	rol    DWORD PTR [rbp-0x1],cl
   14003242c:	hlt    
   14003242d:	fisttp DWORD PTR [rdi-0x1]
   140032430:	mul    ecx
   140032432:	push   rdi
   140032433:	(bad)  
   140032434:	cli    
   140032435:	call   0x13000239b
   14003243a:	addr32 (bad) 
   14003243c:	std    
   14003243d:	icebp  
   14003243e:	outs   dx,DWORD PTR ds:[rsi]
   14003243f:	(bad)  
   140032440:	(bad)  
   140032441:	repz js 0x140032443
   140032444:	push   rbp
   140032446:	jle    0x140032447
   140032448:	push   rbp
   14003244a:	test   bh,bh
   14003244c:	push   rsp
   14003244e:	mov    bh,bh
   140032450:	cld    
   140032451:	repnz mov edi,?
   140032454:	(bad)  
   140032455:	scas   eax,DWORD PTR es:[rdi]
   140032456:	pop    rcx
   140032457:	(bad)  
   140032458:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140032459:	ins    BYTE PTR es:[rdi],dx
   14003245a:	(bad)  
   14003245b:	mov    esi,0x541c6aa3
   140032460:	movabs ds:0x51c6a,al
	...
   140032481:	add    BYTE PTR [rax],al
   140032483:	add    BYTE PTR [rsi-0x62fae599],bl
   140032489:	data16 sbb dl,BYTE PTR [rbp-0x5e]
   14003248d:	ins    DWORD PTR es:[rdi],dx
   14003248e:	and    al,0xc2
   140032490:	fidivr DWORD PTR [rbp-0x16080f7f]
   140032496:	movabs ds:0x88f0fdff91ecfaff,al
   14003249f:	(bad)  
   1400324a0:	(bad)  
   1400324a1:	in     eax,dx
   1400324a2:	jg     0x1400324a3
   1400324a4:	(bad)  
   1400324a5:	in     al,dx
   1400324a6:	js     0x1400324a7
   1400324a8:	(bad)  
   1400324a9:	call   0x12201241c
   1400324ae:	push   0x60dbfbff
   1400324b3:	(bad)  
   1400324b4:	clc    
   1400324b5:	rcl    BYTE PTR [rsi-0x1],cl
   1400324b8:	cmc    
   1400324b9:	retf   
   1400324ba:	rex.WRB push r9
   1400324bd:	rol    BYTE PTR [rdx-0x1],0xea
   1400324c1:	mov    ah,0x37
   1400324c3:	(bad)  
   1400324c4:	fistp  DWORD PTR [rbp+0x75b1ff2a]
   1400324ca:	and    dl,dh
   1400324cc:	mov    WORD PTR [rcx+0x16],ds
   1400324cf:	cwde   
	...
   1400324e8:	mov    ch,0xff
   1400324ea:	inc    BYTE PTR [rcx]
   1400324ec:	mov    bl,0xff
   1400324ee:	(bad)  
   1400324ef:	adc    al,0xb0
   1400324f1:	(bad)  
   1400324f2:	(bad)  
   1400324f3:	sbb    ebp,DWORD PTR [rsi-0x72de0101]
   1400324f9:	cmc    
   1400324fa:	std    
   1400324fb:	cmp    DWORD PTR [rax-0x21],ecx
   1400324fe:	jmp    rbx
   140032500:	xor    ecx,ebx
   140032502:	jmp    rsp
   140032504:	and    al,0xb9
   140032506:	jmp    rsp
   140032508:	(bad)  
   140032509:	mov    bl,0xff
   14003250b:	jrcxz  0x140032557
   14003250d:	test   eax,0x9eec
   140032512:	push   rbp
   140032513:	sub    DWORD PTR es:[rbx],ebx
   140032516:	rex.RXB adc r13b,BYTE PTR [r10-0x254be18f]
   14003251d:	movabs ds:0xd0edff36c1e9fa24,eax
   140032526:	rex.XB push r10
   140032529:	fmul   DWORD PTR [rdi-0x1]
   14003252c:	cmc    
   14003252d:	fist   WORD PTR [rbp-0x1]
   140032530:	clc    
   140032531:	out    0x5e,eax
   140032533:	(bad)  
   140032534:	sti    
   140032535:	in     al,dx
   140032536:	push   0x70f2fdff
   14003253b:	(bad)  
   14003253c:	(bad)  
   14003253d:	hlt    
   14003253e:	ja     0x14003253f
   140032540:	(bad)  
   140032541:	idiv   DWORD PTR [rdi-0x1]
   140032544:	push   rsi
   140032546:	test   edi,edi
   140032548:	push   rsi
   14003254a:	mov    edi,edi
   14003254c:	cld    
   14003254d:	hlt    
   14003254e:	mov    bh,bh
   140032550:	shl    DWORD PTR [rsi+0x6da4e64c],1
   140032556:	sbb    eax,0x1c6ba495
   14003255b:	or     al,0x0
	...
   140032589:	add    BYTE PTR [rax],al
   14003258b:	add    BYTE PTR [rsi-0x62eee59a],bl
   140032591:	data16 sbb bl,BYTE PTR [rbx-0x138f4e2e]
   140032598:	cmc    
   140032599:	out    0x9f,al
   14003259b:	(bad)  
   14003259c:	sti    
   14003259d:	jmp    0x14003252f
   14003259f:	(bad)  
   1400325a0:	(bad)  
   1400325a1:	lock xchg edi,edi
   1400325a4:	(bad)  
   1400325a5:	in     al,dx
   1400325a6:	jle    0x1400325a7
   1400325a8:	(bad)  
   1400325a9:	call   0x127032523
   1400325ae:	ins    DWORD PTR es:[rdi],dx
   1400325af:	(bad)  
   1400325b0:	sti    
   1400325b1:	fisub  WORD PTR [rdi+rdi*8-0x7]
   1400325b5:	xlat   BYTE PTR ds:[rbx]
   1400325b6:	pop    rsp
   1400325b7:	push   rdi
   1400325b9:	int    0x53
   1400325bb:	push   rsp
   1400325bd:	(bad)
   1400325c0:	in     eax,dx
   1400325c1:	mov    edx,0xa9e3ff3d
   1400325c6:	xor    bh,bh
   1400325c8:	ror    BYTE PTR [rdi+0x659cff22],cl
   1400325ce:	(bad)  
   1400325cf:	jrcxz  0x14003255d
   1400325d1:	pop    rdx
   1400325d2:	(bad)  
   1400325d3:	xor    BYTE PTR [rax],al
	...
   1400325e9:	add    BYTE PTR [rax],al
   1400325eb:	add    BYTE PTR [rcx-0x51f10101],dh
   1400325f1:	(bad)  
   1400325f2:	(bad)  
   1400325f3:	(bad)  
   1400325f4:	lods   al,BYTE PTR ds:[rsi]
   1400325f5:	(bad)  
   1400325f6:	(bad)  
   1400325f7:	and    eax,0x2afeffa9
   1400325fc:	push   rdx
   1400325fd:	out    0xff,eax
   1400325ff:	(bad)  
   140032600:	cmp    dl,dl
   140032602:	jmp    rbp
   140032604:	sub    DWORD PTR [rdi-0x4cdc1b01],edi
   14003260a:	jmp    rbx
   14003260c:	rex.X mov eax,0x381adcf9
   140032612:	xchg   DWORD PTR [rdx],edi
   140032614:	test   DWORD PTR [rax+0x27],ebx
   140032617:	pop    rbx
   140032618:	ror    DWORD PTR [rbp-0x451917cc],0x30
   14003261f:	(bad)  
   140032620:	in     al,dx
   140032621:	retf   
   140032622:	rex push rcx
   140032625:	xlat   BYTE PTR ds:[rbx]
   140032626:	rex.WRB push r12
   140032629:	ficom  WORD PTR [rbp-0x1]
   14003262c:	mul    ebx
   14003262e:	pop    rsi
   14003262f:	(bad)  
   140032630:	cli    
   140032631:	in     al,dx
   140032632:	fs (bad) 
   140032634:	std    
   140032635:	repnz ins BYTE PTR es:[rdi],dx
   140032637:	(bad)  
   140032638:	(bad)  
   140032639:	hlt    
   14003263a:	jbe    0x14003263b
   14003263c:	(bad)  
   14003263d:	cmc    
   14003263e:	jge    0x14003263f
   140032640:	push   rsi
   140032642:	cmp    edi,0xffffffff
   140032645:	stc    
   140032646:	mov    edi,?
   140032648:	(bad)  
   140032649:	cmc    
   14003264a:	mov    edi,edi
   14003264c:	iret   
   14003264d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14003264e:	rex.RB in eax,0xa5
   140032651:	ins    BYTE PTR es:[rdi],dx
   140032652:	sbb    al,0x92
   140032654:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140032655:	ins    BYTE PTR es:[rdi],dx
   140032656:	sbb    al,0x5
	...
   140032694:	popf   
   140032695:	data16 sbb dh,BYTE PTR [rax-0x2e]
   140032699:	mov    al,0x70
   14003269b:	in     al,dx
   14003269c:	imul   edx
   14003269e:	movabs ds:0x8df1fcff92effcff,eax
   1400326a7:	(bad)  
   1400326a8:	cld    
   1400326a9:	out    dx,al
   1400326aa:	xchg   bh,bh
   1400326ac:	sti    
   1400326ad:	(bad)  
   1400326ae:	jg     0x1400326af
   1400326b0:	cli    
   1400326b1:	in     al,0x77
   1400326b3:	(bad)  
   1400326b4:	clc    
   1400326b5:	loopne 0x140032726
   1400326b7:	push   rsi
   1400326b9:	fldenv [rsi-0x1]
   1400326bc:	repz iret 
   1400326be:	pop    rbp
   1400326bf:	(bad)  
   1400326c0:	out    dx,eax
   1400326c1:	ret    
   1400326c2:	push   rsp
   1400326c3:	(bad)  
   1400326c4:	jmp    0x11a026a81
   1400326c9:	movabs al,ds:0x5a8df4297db6ff31
   1400326d2:	(bad)  
   1400326d3:	mov    es,WORD PTR [rax]
	...
   1400326e9:	add    BYTE PTR [rax],al
   1400326eb:	add    BYTE PTR [rsi-0x53f90101],ch
   1400326f1:	(bad)  
   1400326f2:	(bad)  
   1400326f3:	and    DWORD PTR [rcx-0x58d70101],ebp
   1400326f9:	(bad)  
   1400326fa:	(bad)  
   1400326fb:	sub    eax,0x93feea64
   140032700:	rex.R fdiv st(7),st
   140032703:	in     eax,0x2f
   140032705:	(bad)  
   140032706:	jmp    rsp
   140032708:	and    esi,DWORD PTR [rbp-0x49d01a01]
   14003270e:	std    
   14003270f:	out    0x4f,eax
   140032711:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140032712:	out    0x8d,al
   140032714:	xchg   esp,eax
   140032715:	(bad)  
   140032716:	(bad)  
   140032717:	mov    dl,0xd9
   140032719:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003271a:	sub    bh,dl
   14003271c:	call   0x12f0263e3
   140032721:	ror    DWORD PTR [rax-0x1],cl
   140032724:	repz fst QWORD PTR [rcx-0x1]
   140032728:	mul    bl
   14003272a:	pop    rsp
   14003272b:	(bad)  
   14003272c:	stc    
   14003272d:	(bad)  
   14003272e:	(bad)  
   14003272f:	(bad)  
   140032730:	sti    
   140032731:	lock imul edi,edi,0xff75f5fd
   140032738:	(bad)  
   140032739:	idiv   BYTE PTR [rsi-0x1]
   14003273c:	(bad)  
   14003273d:	cmc    
   14003273e:	cmp    edi,0xffffffff
   140032741:	stc    
   140032742:	mov    bh,bh
   140032744:	push   rdi
   140032746:	mov    bh,bh
   140032748:	in     al,0xc0
   14003274a:	pop    rsp
   14003274b:	lock cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003274d:	ins    BYTE PTR es:[rdi],dx
   14003274e:	sbb    al,0xaa
   140032750:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140032751:	ins    DWORD PTR es:[rdi],dx
   140032752:	sbb    al,0x7
	...
   140032798:	popf   
   140032799:	data16 sbb cl,BYTE PTR [rdx+rbx*8-0x5108144]
   1400327a1:	lock movabs ds:0x97eff9ff9bf1fbff,al
   1400327ab:	(bad)  
   1400327ac:	clc    
   1400327ad:	jmp    0x140032744
   1400327af:	push   rdi
   1400327b1:	out    0x91,eax
   1400327b3:	push   rbp
   1400327b5:	jrcxz  0x140032743
   1400327b7:	push   rdx
   1400327b9:	fisttp QWORD PTR [rax-0x7c280f01]
   1400327bf:	(bad)  
   1400327c0:	in     al,dx
   1400327c1:	sar    BYTE PTR [rbp-0x1],1
   1400327c4:	call   0x121029c91
   1400327c9:	mov    bh,0x60
   1400327cb:	dec    ebx
   1400327cd:	xchg   ebp,eax
   1400327ce:	cmp    bh,bh
   1400327d0:	lea    ebx,[rdx+0x16]
   1400327d3:	xlat   BYTE PTR ds:[rbx]
   1400327d4:	lea    ebx,[rbx+0x16]
   1400327d7:	(bad)  
	...
   1400327f0:	stos   BYTE PTR es:[rdi],al
   1400327f1:	(bad)  
   1400327f2:	(bad)  
   1400327f3:	sbb    al,0xa7
   1400327f5:	(bad)  
   1400327f6:	(bad)  
   1400327f7:	sub    esp,DWORD PTR [rbp-0x7bcf0101]
   1400327fd:	cmc    
   1400327fe:	std    
   1400327ff:	push   rax
   140032800:	rex.WRX in eax,0xff
   140032803:	in     al,0x36
   140032805:	iret   
   140032806:	jmp    rbp
   140032808:	es mov esp,0xb526e7ff
   14003280e:	(bad)  
   14003280f:	(bad)  
   140032810:	rex.WRB movabs r9,0xb5dce4377ba3e3f4
   14003281a:	xor    al,0xff
   14003281c:	in     al,dx
   14003281d:	int3   
   14003281e:	rex.R push rdx
   140032821:	(bad)  [rsi-0x1]
   140032824:	cmc    
   140032825:	loopne 0x140032882
   140032827:	(bad)  
   140032828:	clc    
   140032829:	jmp    0x12dfe278e
   14003282e:	data16 (bad) 
   140032830:	cld    
   140032831:	bnd jo 0x140032833
   140032834:	(bad)  
   140032835:	idiv   BYTE PTR [rdx-0x1]
   140032838:	(bad)  
   140032839:	clc    
   14003283a:	(bad)  
   14003283b:	(bad)  
   14003283c:	(bad)  
   14003283d:	clc    
   14003283e:	xchg   edi,edi
   140032840:	(bad)  
   140032841:	cli    
   140032842:	mov    bh,bh
   140032844:	cld    
   140032845:	test   BYTE PTR [rbx+0x3186b8ff],0xdb
   14003284c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003284d:	ins    DWORD PTR es:[rdi],dx
   14003284e:	sbb    eax,0x31
	...
   140032897:	add    BYTE PTR [rsi-0x62f6e599],bl
   14003289d:	data16 sbb cl,BYTE PTR [rsi-0x64e59963]
   1400328a4:	pushf  
   1400328a5:	sbb    ah,BYTE PTR gs:[rbx+rbx*4-0x6549e59c]
   1400328ad:	fs sbb eax,eax
   1400328b0:	cwde   
   1400328b1:	movsxd ebx,DWORD PTR [rcx]
   1400328b3:	retf   
   1400328b4:	xchg   edi,eax
   1400328b5:	(bad)  
   1400328b6:	sbb    esi,edx
   1400328b8:	xchg   esi,eax
   1400328b9:	(bad)  
   1400328ba:	sbb    dh,dl
   1400328bc:	xchg   ebp,eax
   1400328bd:	(bad)  
   1400328be:	sbb    dh,dl
   1400328c0:	xchg   esp,eax
   1400328c1:	pop    rdi
   1400328c2:	sbb    bh,dl
   1400328c4:	xchg   ebx,eax
   1400328c5:	pop    rdi
   1400328c6:	sbb    bh,dl
   1400328c8:	xchg   edx,eax
   1400328c9:	pop    rsi
   1400328ca:	(bad)  
   1400328cb:	xlat   BYTE PTR ds:[rbx]
   1400328cc:	xchg   ecx,eax
   1400328cd:	pop    rbp
   1400328ce:	(bad)  
   1400328cf:	xlat   BYTE PTR ds:[rbx]
   1400328d0:	nop
   1400328d1:	pop    rsp
   1400328d2:	(bad)  
   1400328d3:	scas   al,BYTE PTR es:[rdi]
   1400328d4:	mov    ds,WORD PTR [rbx+0x16]
   1400328d7:	jo     0x1400328d9
	...
   1400328ed:	add    BYTE PTR [rax],al
   1400328ef:	add    BYTE PTR [rdi-0x5af30101],ah
   1400328f5:	(bad)  
   1400328f6:	(bad)  
   1400328f7:	movabs cs:0x5d38feff9f33feff,al
   140032901:	in     eax,dx
   140032902:	inc    esi
   140032904:	rex.B (bad) 
   140032907:	in     eax,0x2d
   140032909:	(bad)  
   14003290a:	(bad)  
   14003290b:	call   0x12e02df34
   140032910:	(bad)  
   140032911:	mov    ch,0xf8
   140032913:	stc    
   140032914:	mov    ch,BYTE PTR [rcx-0x47210464]
   14003291a:	cmp    eax,0x4bd1eeff
   14003291f:	push   rbx
   140032921:	fcom   QWORD PTR [rsi-0x1]
   140032924:	mul    edi
   140032926:	pop    rdi
   140032927:	(bad)  
   140032928:	cli    
   140032929:	in     al,dx
   14003292a:	gs (bad) 
   14003292c:	sti    
   14003292d:	lock imul edi,edi,0xfffffffd
   140032931:	cmc    
   140032932:	jne    0x140032933
   140032934:	(bad)  
   140032935:	idiv   DWORD PTR [rdi-0x1]
   140032938:	(bad)  
   140032939:	clc    
   14003293a:	xchg   edi,edi
   14003293c:	(bad)  
   14003293d:	cli    
   14003293e:	mov    edi,?
   140032940:	(bad)  
   140032941:	cli    
   140032942:	mov    edi,edi
   140032944:	jmp    0x140032910
   140032946:	fs cmc 
   140032948:	test   al,0x6e
   14003294a:	sbb    eax,0x99
	...
   1400329f3:	add    BYTE PTR [rbx-0x5fd70101],ah
   1400329f9:	(bad)  
   1400329fa:	(bad)  
   1400329fb:	xor    eax,0x39feff9d
   140032a00:	imul   esi,eax,0xfffffffe
   140032a03:	xchg   edx,eax
   140032a04:	rex.WRB in al,0xff
   140032a07:	out    0x36,al
   140032a09:	iret   
   140032a0a:	(bad)  
   140032a0b:	jmp    0x140032a33
   140032a0d:	mov    esp,0xaf2af0ff
   140032a12:	idiv   ch
   140032a14:	push   rbx
   140032a15:	mov    edx,0xc0d5ffee
   140032a1a:	push   rcx
   140032a1b:	(bad)  
   140032a1c:	in     eax,dx
   140032a1d:	(bad)  
   140032a1e:	rex.WRXB push r12
   140032a21:	fistp  WORD PTR [rdi+rdi*8-0x8]
   140032a25:	(bad)  
   140032a26:	movsxd edi,edi
   140032a28:	sti    
   140032a29:	lock imul edi,edi,0xff72f3fc
   140032a30:	std    
   140032a31:	idiv   BYTE PTR [rdi+rdi*8-0x2]
   140032a35:	test   DWORD PTR [rdx-0x75060001],0x8ffbffff
   140032a3f:	(bad)  
   140032a40:	(bad)  
   140032a41:	cmc    
   140032a42:	mov    bh,bh
   140032a44:	(bad)
   140032a47:	jrcxz  0x1400329f2
   140032a49:	outs   dx,DWORD PTR ds:[rsi]
   140032a4a:	sbb    eax,0x53
	...
   140032af3:	add    BYTE PTR [rax-0x61ed0101],ah
   140032af9:	(bad)  
   140032afa:	(bad)  
   140032afb:	cmp    BYTE PTR [rbx-0x71c30201],bl
   140032b01:	sti    
   140032b02:	std    
   140032b03:	rex.W pop rdx
   140032b05:	out    dx,al
   140032b06:	(bad)  
   140032b07:	fiadd  WORD PTR [rax-0x28]
   140032b0a:	(bad)  
   140032b0b:	in     al,dx
   140032b0c:	sub    eax,0x26f5fcc1
   140032b11:	scas   al,BYTE PTR es:[rdi]
   140032b12:	idiv   dh
   140032b14:	xor    al,0xb4
   140032b16:	idiv   edi
   140032b18:	pop    rbp
   140032b1a:	mov    ch,0xff
   140032b1c:	out    dx,al
   140032b1d:	fcom   DWORD PTR [rbp-0x1]
   140032b20:	hlt    
   140032b21:	in     al,0x5f
   140032b23:	(bad)  
   140032b24:	clc    
   140032b25:	jmp    0x140032b90
   140032b27:	(bad)  
   140032b28:	cld    
   140032b29:	bnd jo 0x140032b2b
   140032b2c:	std    
   140032b2d:	cmc    
   140032b2e:	jp     0x140032b2f
   140032b30:	(bad)  
   140032b31:	clc    
   140032b32:	(bad)  
   140032b33:	(bad)  
   140032b34:	(bad)  
   140032b35:	stc    
   140032b36:	mov    edi,edi
   140032b38:	(bad)  
   140032b39:	sti    
   140032b3a:	(bad)  
   140032b3b:	(bad)  
   140032b3c:	(bad)  
   140032b3d:	sti    
   140032b3e:	xchg   edx,eax
   140032b3f:	(bad)  
   140032b40:	cld    
   140032b41:	repnz cmp edi,0xd6297cb3
   140032b48:	test   eax,0x1d1d6f
	...
   140032bf1:	add    BYTE PTR [rax],al
   140032bf3:	add    BYTE PTR [rsi-0x64fe0101],bl
   140032bf9:	(bad)  
   140032bfa:	std    
   140032bfb:	xor    BYTE PTR [rcx-0x6ac20201],bl
   140032c01:	(bad)  
   140032c02:	std    
   140032c03:	rex.X push 0x4db0fef5
   140032c09:	in     eax,0xff
   140032c0b:	out    dx,al
   140032c0c:	xor    al,0xcb
   140032c0e:	sti    
   140032c0f:	clc    
   140032c10:	es mov ch,0xf6
   140032c13:	jmp    QWORD PTR [rsi]
   140032c15:	scas   eax,DWORD PTR es:[rdi]
   140032c16:	stc    
   140032c17:	dec    DWORD PTR [rax-0x44]
   140032c1a:	idiv   bh
   140032c1c:	retf   0x82d2
   140032c1f:	push   rsp
   140032c21:	in     eax,0x63
   140032c23:	(bad)  
   140032c24:	stc    
   140032c25:	out    dx,al
   140032c26:	ins    DWORD PTR es:[rdi],dx
   140032c27:	(bad)  
   140032c28:	std    
   140032c29:	idiv   BYTE PTR [rax-0x1]
   140032c2c:	std    
   140032c2d:	idiv   DWORD PTR [rdi-0x1]
   140032c30:	(bad)  
   140032c31:	cli    
   140032c32:	mov    bh,bh
   140032c34:	(bad)  
   140032c35:	sti    
   140032c36:	(bad)  
   140032c37:	(bad)  
   140032c38:	(bad)  
   140032c39:	sti    
   140032c3a:	xchg   ebx,eax
   140032c3b:	(bad)  
   140032c3c:	(bad)  
   140032c3d:	sti    
   140032c3e:	xchg   ebx,eax
   140032c3f:	(bad)  
   140032c40:	push   rbx
   140032c42:	jl     0x140032c43
   140032c44:	lods   al,BYTE PTR ds:[rsi]
   140032c45:	jae    0x140032c68
   140032c47:	shr    DWORD PTR [rdx+0x71d6f],1
	...
   140032cf5:	add    BYTE PTR [rax],al
   140032cf7:	add    BYTE PTR [rcx-0x69f10201],bl
   140032cfd:	(bad)  
   140032cfe:	std    
   140032cff:	rex xchg esp,eax
   140032d01:	(bad)  
   140032d02:	std    
   140032d03:	rex.XB (bad) 
   140032d05:	clc    
   140032d06:	std    
   140032d07:	pop    rdx
   140032d08:	pop    rbx
   140032d09:	out    dx,al
   140032d0a:	(bad)  
   140032d0b:	jmp    0x140032d4e
   140032d0d:	sar    edx,cl
   140032d0f:	sti    
   140032d10:	sub    al,0xbd
   140032d12:	clc    
   140032d13:	jmp    QWORD PTR [rsp+rsi*4]
   140032d16:	sti    
   140032d17:	jmp    FWORD PTR [rip+0x6efffbb4]        # 0x1af0328d1
   140032d1d:	enter  0xffe5,0xf0
   140032d21:	in     al,0x68
   140032d23:	push   rdi
   140032d25:	out    dx,al
   140032d26:	jno    0x140032d27
   140032d28:	sti    
   140032d29:	cmc    
   140032d2a:	jl     0x140032d2b
   140032d2c:	(bad)  
   140032d2d:	stc    
   140032d2e:	test   edi,edi
   140032d30:	(bad)  
   140032d31:	cli    
   140032d32:	mov    edi,?
   140032d34:	(bad)  
   140032d35:	cld    
   140032d36:	xchg   edx,eax
   140032d37:	(bad)  
   140032d38:	(bad)  
   140032d39:	cld    
   140032d3a:	xchg   esp,eax
   140032d3b:	(bad)  
   140032d3c:	(bad)  
   140032d3d:	cld    
   140032d3e:	xchg   ebp,eax
   140032d3f:	(bad)  
   140032d40:	push   rsp
   140032d42:	jg     0x140032d43
   140032d44:	ret    
   140032d45:	xchg   esp,eax
   140032d46:	cmp    al,0xe7
   140032d48:	lods   al,BYTE PTR ds:[rsi]
   140032d49:	jae    0x140032d6c
   140032d4b:	shr    DWORD PTR [rdx-0x5631e291],1
   140032d51:	outs   dx,DWORD PTR ds:[rsi]
   140032d52:	sbb    eax,0x1d6fa9ce
   140032d57:	(bad)  
   140032d58:	test   al,0x6e
   140032d5a:	sbb    eax,0x1d6ea8cf
   140032d5f:	iret   
   140032d60:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140032d61:	outs   dx,BYTE PTR ds:[rsi]
   140032d62:	sbb    eax,0x1d6da7cf
   140032d67:	iret   
   140032d68:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140032d69:	ins    DWORD PTR es:[rdi],dx
   140032d6a:	sbb    eax,0x1c6da6cf
   140032d6f:	iret   
   140032d70:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140032d71:	ins    BYTE PTR es:[rdi],dx
   140032d72:	sbb    al,0xd0
   140032d74:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140032d75:	ins    BYTE PTR es:[rdi],dx
   140032d76:	sbb    al,0xd0
   140032d78:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140032d79:	ins    BYTE PTR es:[rdi],dx
   140032d7a:	sbb    al,0xd0
   140032d7c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140032d7d:	imul   ebx,DWORD PTR [rax+rdx*8],0xffffffa3
   140032d81:	imul   ebx,DWORD PTR [rcx+rdx*8],0xffffffa3
   140032d85:	push   0x1c
   140032d87:	shl    DWORD PTR [rbx-0x5d2ee396],1
   140032d8d:	push   0x1b
   140032d8f:	shl    BYTE PTR [rdx-0x5e2de497],cl
   140032d95:	imul   ebx,DWORD PTR [rbx],0x1b69a1d2
   140032d9b:	shl    BYTE PTR [rax-0x5f2ce498],cl
   140032da1:	push   0x689fd31b
   140032da6:	sbb    edx,ebx
   140032da8:	lahf   
   140032da9:	addr32 sbb edx,ebx
   140032dac:	sahf   
   140032dad:	addr32 sbb dl,ah
   140032db0:	sahf   
   140032db1:	data16 sbb dl,ah
   140032db4:	popf   
   140032db5:	data16 sbb dl,ah
   140032db8:	popf   
   140032db9:	data16 sbb dl,ch
   140032dbc:	pushf  
   140032dbd:	gs sbb dl,ch
   140032dc0:	(bad)  
   140032dc1:	fs sbb ebp,edx
   140032dc4:	cdq    
   140032dc5:	movsxd ebx,DWORD PTR [rcx]
   140032dc7:	(bad)  
   140032dc8:	cwde   
   140032dc9:	(bad)  
   140032dca:	sbb    esi,edx
   140032dcc:	xchg   edi,eax
   140032dcd:	(bad)  
   140032dce:	sbb    esi,edx
   140032dd0:	xchg   esi,eax
   140032dd1:	(bad)  
   140032dd2:	sbb    dh,dl
   140032dd4:	xchg   ebp,eax
   140032dd5:	(bad)  
   140032dd6:	sbb    BYTE PTR [rcx+0x3f185f94],dh
	...
   140032dfc:	xchg   esp,eax
   140032dfd:	(bad)  
   140032dfe:	std    
   140032dff:	sub    DWORD PTR [rcx-0x72ba0201],edx
   140032e05:	(bad)  
   140032e06:	std    
   140032e07:	rex.W push 0xfffffffffffffff5
   140032e0a:	inc    esp
   140032e0c:	rex.WR (bad) 
   140032e0f:	std    
   140032e10:	xor    al,0xc8
   140032e12:	stc    
   140032e13:	jmp    FWORD PTR [rax]
   140032e15:	mov    ecx,0xb427fffb
   140032e1a:	cld    
   140032e1b:	(bad)  
   140032e1c:	cmp    al,0xbc
   140032e1e:	sti    
   140032e1f:	call   FWORD PTR [rsi-0xa00452d]
   140032e25:	out    dx,al
   140032e26:	je     0x140032e27
   140032e28:	stc    
   140032e29:	hlt    
   140032e2a:	cmp    edi,0xff8af9fe
   140032e30:	(bad)  
   140032e31:	sti    
   140032e32:	xchg   edx,eax
   140032e33:	(bad)  
   140032e34:	(bad)  
   140032e35:	cld    
   140032e36:	xchg   edi,eax
   140032e37:	(bad)  
   140032e38:	(bad)  
   140032e39:	cld    
   140032e3a:	cwde   
   140032e3b:	(bad)  
   140032e3c:	(bad)  
   140032e3d:	std    
   140032e3e:	cwde   
   140032e3f:	(bad)  
   140032e40:	(bad)  
   140032e41:	cld    
   140032e42:	xchg   esi,eax
   140032e43:	(bad)  
   140032e44:	(bad)  
   140032e45:	cli    
   140032e46:	xchg   edi,eax
   140032e47:	(bad)  
   140032e48:	(bad)  
   140032e49:	clc    
   140032e4a:	xchg   esp,eax
   140032e4b:	(bad)  
   140032e4c:	(bad)  
   140032e4d:	clc    
   140032e4e:	xchg   esi,eax
   140032e4f:	(bad)  
   140032e50:	push   rdi
   140032e52:	cwde   
   140032e53:	(bad)  
   140032e54:	(bad)  
   140032e55:	cli    
   140032e56:	(bad)  
   140032e57:	(bad)  
   140032e58:	(bad)  
   140032e59:	clc    
   140032e5a:	pushf  
   140032e5b:	(bad)  
   140032e5c:	(bad)  
   140032e5d:	stc    
   140032e5e:	popf   
   140032e5f:	(bad)  
   140032e60:	(bad)  
   140032e61:	stc    
   140032e62:	popf   
   140032e63:	(bad)  
   140032e64:	(bad)  
   140032e65:	clc    
   140032e66:	lahf   
   140032e67:	(bad)  
   140032e68:	(bad)  
   140032e69:	clc    
   140032e6a:	lahf   
   140032e6b:	(bad)  
   140032e6c:	(bad)  
   140032e6d:	clc    
   140032e6e:	sahf   
   140032e6f:	(bad)  
   140032e70:	(bad)  
   140032e71:	clc    
   140032e72:	sahf   
   140032e73:	(bad)  
   140032e74:	(bad)  
   140032e75:	clc    
   140032e76:	sahf   
   140032e77:	(bad)  
   140032e78:	push   rdi
   140032e7a:	popf   
   140032e7b:	(bad)  
   140032e7c:	push   rsi
   140032e7e:	popf   
   140032e7f:	(bad)  
   140032e80:	push   rsi
   140032e82:	pushf  
   140032e83:	(bad)  
   140032e84:	push   rdi
   140032e86:	fwait
   140032e87:	(bad)  
   140032e88:	push   rsi
   140032e8a:	fwait
   140032e8b:	(bad)  
   140032e8c:	push   rsi
   140032e8e:	(bad)  
   140032e8f:	(bad)  
   140032e90:	push   rsi
   140032e92:	(bad)  
   140032e93:	(bad)  
   140032e94:	push   rsi
   140032e96:	(bad)  
   140032e97:	(bad)  
   140032e98:	push   rsi
   140032e9a:	cdq    
   140032e9b:	(bad)  
   140032e9c:	push   rsp
   140032e9e:	xchg   edi,eax
   140032e9f:	(bad)  
   140032ea0:	(bad)  
   140032ea1:	repnz (bad) 
   140032ea3:	(bad)  
   140032ea4:	(bad)  
   140032ea5:	repnz mov bh,bh
   140032ea8:	(bad)  
   140032ea9:	in     eax,dx
   140032eaa:	mov    bh,bh
   140032eac:	std    
   140032ead:	(bad)  
   140032eae:	cmp    edi,0xff7de5fa
   140032eb4:	clc    
   140032eb5:	loope  0x140032f2e
   140032eb7:	push   rsp
   140032eb9:	fsubr  DWORD PTR [rsi-0x1]
   140032ebc:	icebp  
   140032ebd:	shr    DWORD PTR [rax-0x1],1
   140032ec0:	in     eax,dx
   140032ec1:	leave  
   140032ec2:	pop    rdi
   140032ec3:	(bad)  
   140032ec4:	(bad)  
   140032ec5:	rcr    DWORD PTR [rcx-0x1],0xe5
   140032ec9:	mov    ecx,0xafe0ff54
   140032ece:	rex.WRB call r15
   140032ed1:	movabs ds:0x6095f2307fb5ff45,eax
   140032eda:	sbb    BYTE PTR [rbx+0x0],bh
	...
   140032ef9:	add    BYTE PTR [rax],al
   140032efb:	add    BYTE PTR [rdx-0x70fb0201],dl
   140032f01:	(bad)  
   140032f02:	std    
   140032f03:	rex mov edi,?
   140032f06:	std    
   140032f07:	rex.WB jnp 0x140032f01
   140032f0a:	(bad)  
   140032f0b:	ins    DWORD PTR es:[rdi],dx
   140032f0c:	pop    rbp
   140032f0d:	in     eax,0xf8
   140032f0f:	cld    
   140032f10:	rex.B (bad) 
   140032f12:	stc    
   140032f13:	jmp    FWORD PTR [rsi]
   140032f15:	(bad)  
   140032f16:	cld    
   140032f17:	jmp    QWORD PTR [rdi]
   140032f19:	mov    eax,0xb529fffd
   140032f1e:	(bad)  
   140032f1f:	dec    DWORD PTR [rbp-0x3e]
   140032f22:	clc    
   140032f23:	call   rdx
   140032f25:	jrcxz  0x140032ebe
   140032f27:	push   rdi
   140032f29:	repz xchg edi,edi
   140032f2c:	sti    
   140032f2d:	clc    
   140032f2e:	nop
   140032f2f:	(bad)  
   140032f30:	(bad)  
   140032f31:	sti    
   140032f32:	cdq    
   140032f33:	(bad)  
   140032f34:	(bad)  
   140032f35:	cld    
   140032f36:	pushf  
   140032f37:	(bad)  
   140032f38:	(bad)  
   140032f39:	std    
   140032f3a:	fwait
   140032f3b:	(bad)  
   140032f3c:	(bad)  
   140032f3d:	std    
   140032f3e:	pushf  
   140032f3f:	(bad)  
   140032f40:	(bad)  
   140032f41:	std    
   140032f42:	popf   
   140032f43:	(bad)  
   140032f44:	(bad)  
   140032f45:	std    
   140032f46:	pushf  
   140032f47:	(bad)  
   140032f48:	(bad)  
   140032f49:	cld    
   140032f4a:	popf   
   140032f4b:	(bad)  
   140032f4c:	(bad)  
   140032f4d:	cld    
   140032f4e:	sahf   
   140032f4f:	(bad)  
   140032f50:	(bad)  
   140032f51:	cld    
   140032f52:	movabs al,ds:0xa3fbffffa2fbffff
   140032f5b:	(bad)  
   140032f5c:	(bad)  
   140032f5d:	sti    
   140032f5e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140032f5f:	(bad)  
   140032f60:	(bad)  
   140032f61:	sti    
   140032f62:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140032f63:	(bad)  
   140032f64:	(bad)  
   140032f65:	sti    
   140032f66:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140032f67:	(bad)  
   140032f68:	(bad)  
   140032f69:	sti    
   140032f6a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140032f6b:	(bad)  
   140032f6c:	(bad)  
   140032f6d:	sti    
   140032f6e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140032f6f:	(bad)  
   140032f70:	(bad)  
   140032f71:	sti    
   140032f72:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140032f73:	(bad)  
   140032f74:	(bad)  
   140032f75:	cli    
   140032f76:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140032f77:	(bad)  
   140032f78:	(bad)  
   140032f79:	cli    
   140032f7a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140032f7b:	(bad)  
   140032f7c:	(bad)  
   140032f7d:	cli    
   140032f7e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140032f7f:	(bad)  
   140032f80:	(bad)  
   140032f81:	cli    
   140032f82:	movabs ds:0xa2faffffa3faffff,eax
   140032f8b:	(bad)  
   140032f8c:	(bad)  
   140032f8d:	cli    
   140032f8e:	movabs ds:0xa2f9ffffa2faffff,al
   140032f97:	(bad)  
   140032f98:	(bad)  
   140032f99:	clc    
   140032f9a:	movabs al,ds:0x9cf5ffff9ef7ffff
   140032fa3:	(bad)  
   140032fa4:	push   rsp
   140032fa6:	cdq    
   140032fa7:	(bad)  
   140032fa8:	push   rdx
   140032faa:	xchg   ebp,eax
   140032fab:	(bad)  
   140032fac:	push   rax
   140032fae:	nop
   140032faf:	(bad)  
   140032fb0:	(bad)  
   140032fb1:	in     eax,dx
   140032fb2:	mov    bh,bh
   140032fb4:	(bad)  
   140032fb5:	(bad)  
   140032fb6:	cmp    bh,0xfe
   140032fb9:	out    0x77,al
   140032fbb:	(bad)  
   140032fbc:	sti    
   140032fbd:	loopne 0x14003302f
   140032fbf:	(bad)  
   140032fc0:	stc    
   140032fc1:	fsub   DWORD PTR [rsi-0x1]
   140032fc4:	hlt    
   140032fc5:	iret   
   140032fc6:	(bad)  
   140032fc7:	push   rax
   140032fc9:	enter  0xff58,0xed
   140032fcd:	mov    esi,0xb1e4ff52
   140032fd2:	dec    rcx
   140032fd5:	nop
   140032fd6:	ss cmc 
   140032fd8:	xchg   esi,eax
   140032fd9:	(bad)  
   140032fda:	sbb    BYTE PTR [rdi+0x0],bl
	...
   140033000:	(bad)  
   140033001:	(bad)  
   140033002:	std    
   140033003:	sbb    BYTE PTR [rdx-0x79b60201],cl
   140033009:	(bad)  
   14003300a:	std    
   14003300b:	push   rcx
   14003300c:	jbe    0x140032fe4
   14003300e:	in     al,0xf0
   140033010:	rex.WRXB (bad) 
   140033013:	(bad)  
   140033014:	cmp    ecx,edx
   140033016:	cld    
   140033017:	jmp    FWORD PTR [rbx]
   140033019:	ret    0xfffe
   14003301c:	es mov eax,0xb82cfffe
   140033022:	std    
   140033023:	jmp    FWORD PTR [rcx-0x36]
   140033026:	out    dx,eax
   140033027:	(bad)  
   140033028:	in     eax,dx
   140033029:	in     eax,dx
   14003302a:	(bad)  
   14003302b:	(bad)  
   14003302c:	stc    
   14003302d:	cmc    
   14003302e:	xchg   edx,eax
   14003302f:	(bad)  
   140033030:	std    
   140033031:	cli    
   140033032:	popf   
   140033033:	(bad)  
   140033034:	(bad)  
   140033035:	std    
   140033036:	lahf   
   140033037:	(bad)  
   140033038:	(bad)  
   140033039:	(bad)  
   14003303a:	lahf   
   14003303b:	(bad)  
   14003303c:	(bad)  
   14003303d:	(bad)  
   14003303e:	lahf   
   14003303f:	(bad)  
   140033040:	(bad)  
   140033041:	std    
   140033042:	lahf   
   140033043:	(bad)  
   140033044:	(bad)  
   140033045:	std    
   140033046:	movabs eax,ds:0xa1fdffffa0fdffff
   14003304f:	(bad)  
   140033050:	(bad)  
   140033051:	cld    
   140033052:	movabs ds:0xa5fdffffa4fdffff,al
   14003305b:	(bad)  
   14003305c:	(bad)  
   14003305d:	std    
   14003305e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003305f:	(bad)  
   140033060:	(bad)  
   140033061:	std    
   140033062:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140033063:	(bad)  
   140033064:	(bad)  
   140033065:	std    
   140033066:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140033067:	(bad)  
   140033068:	(bad)  
   140033069:	std    
   14003306a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003306b:	(bad)  
   14003306c:	(bad)  
   14003306d:	cld    
   14003306e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003306f:	(bad)  
   140033070:	(bad)  
   140033071:	cld    
   140033072:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140033073:	(bad)  
   140033074:	(bad)  
   140033075:	cld    
   140033076:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140033077:	(bad)  
   140033078:	(bad)  
   140033079:	cld    
   14003307a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003307b:	(bad)  
   14003307c:	(bad)  
   14003307d:	sti    
   14003307e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14003307f:	(bad)  
   140033080:	(bad)  
   140033081:	sti    
   140033082:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140033083:	(bad)  
   140033084:	(bad)  
   140033085:	cli    
   140033086:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140033087:	(bad)  
   140033088:	(bad)  
   140033089:	cli    
   14003308a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003308b:	(bad)  
   14003308c:	(bad)  
   14003308d:	cli    
   14003308e:	movabs ds:0xa1f9ffffa3f9ffff,eax
   140033097:	(bad)  
   140033098:	(bad)  
   140033099:	clc    
   14003309a:	movabs eax,ds:0x9df7ffff9ef7ffff
   1400330a3:	(bad)  
   1400330a4:	push   rbp
   1400330a6:	cwde   
   1400330a7:	(bad)  
   1400330a8:	push   rbx
   1400330aa:	xchg   esi,eax
   1400330ab:	(bad)  
   1400330ac:	push   rdx
   1400330ae:	nop
   1400330af:	(bad)  
   1400330b0:	push   rax
   1400330b2:	mov    bh,bh
   1400330b4:	(bad)  
   1400330b5:	in     al,dx
   1400330b6:	jg     0x1400330b7
   1400330b8:	(bad)  
   1400330b9:	out    0x75,eax
   1400330bb:	(bad)  
   1400330bc:	std    
   1400330bd:	loop   0x14003312d
   1400330bf:	(bad)  
   1400330c0:	stc    
   1400330c1:	(bad)  [rsi-0x1]
   1400330c4:	clc    
   1400330c5:	rcr    BYTE PTR [rsi-0x1],cl
   1400330c8:	repz enter 0xff55,0xef
   1400330cd:	mov    ebp,0xb2e6ff4c
   1400330d2:	rex.X dec edi
   1400330d5:	xchg   ebx,eax
   1400330d6:	xor    edx,edi
   1400330d8:	xchg   edi,eax
   1400330d9:	(bad)  
   1400330da:	sbb    DWORD PTR [rbx+0x0],esi
	...
   140033104:	mov    bh,bh
   140033106:	std    
   140033107:	sub    eax,0x50fdfe84
   14003310c:	cdq    
   14003310d:	mov    esp,0xe96bdf96
   140033112:	stc    
   140033113:	inc    DWORD PTR [rdi-0x23]
   140033116:	cld    
   140033117:	push   QWORD PTR [rbx]
   140033119:	iret   
   14003311a:	(bad)  
   14003311b:	jmp    FWORD PTR [rdx]
   14003311d:	sar    dh,0xff
   140033120:	sub    BYTE PTR [rdi-0x42ca0002],dh
   140033126:	std    
   140033127:	dec    DWORD PTR [rax-0x900242e]
   14003312d:	repz xchg edx,eax
   14003312f:	(bad)  
   140033130:	cli    
   140033131:	clc    
   140033132:	popf   
   140033133:	(bad)  
   140033134:	std    
   140033135:	cld    
   140033136:	movabs ds:0xa4feffffa4feffff,eax
   14003313f:	(bad)  
   140033140:	(bad)  
   140033141:	(bad)  
   140033142:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140033143:	(bad)  
   140033144:	(bad)  
   140033145:	std    
   140033146:	movabs ds:0xa4feffffa4feffff,eax
   14003314f:	(bad)  
   140033150:	(bad)  
   140033151:	(bad)  
   140033152:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140033153:	(bad)  
   140033154:	(bad)  
   140033155:	(bad)  
   140033156:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140033157:	(bad)  
   140033158:	(bad)  
   140033159:	(bad)  
   14003315a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003315b:	(bad)  
   14003315c:	(bad)  
   14003315d:	(bad)  
   14003315e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003315f:	(bad)  
   140033160:	(bad)  
   140033161:	(bad)  
   140033162:	test   al,0xff
   140033164:	(bad)  
   140033165:	std    
   140033166:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140033167:	(bad)  
   140033168:	(bad)  
   140033169:	std    
   14003316a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003316b:	(bad)  
   14003316c:	(bad)  
   14003316d:	std    
   14003316e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003316f:	(bad)  
   140033170:	(bad)  
   140033171:	std    
   140033172:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140033173:	(bad)  
   140033174:	(bad)  
   140033175:	cld    
   140033176:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140033177:	(bad)  
   140033178:	(bad)  
   140033179:	cld    
   14003317a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003317b:	(bad)  
   14003317c:	(bad)  
   14003317d:	sti    
   14003317e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003317f:	(bad)  
   140033180:	(bad)  
   140033181:	sti    
   140033182:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140033183:	(bad)  
   140033184:	(bad)  
   140033185:	cli    
   140033186:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140033187:	(bad)  
   140033188:	(bad)  
   140033189:	cli    
   14003318a:	movabs ds:0xa2f9ffffa3f9ffff,eax
   140033193:	(bad)  
   140033194:	(bad)  
   140033195:	clc    
   140033196:	movabs eax,ds:0x9df7ffffa0f8ffff
   14003319f:	(bad)  
   1400331a0:	push   rbp
   1400331a2:	fwait
   1400331a3:	(bad)  
   1400331a4:	push   rsp
   1400331a6:	xchg   edi,eax
   1400331a7:	(bad)  
   1400331a8:	push   rsp
   1400331aa:	xchg   esp,eax
   1400331ab:	(bad)  
   1400331ac:	push   rcx
   1400331ae:	(bad)  
   1400331af:	(bad)  
   1400331b0:	(bad)  
   1400331b1:	out    dx,eax
   1400331b2:	xchg   edi,edi
   1400331b4:	(bad)  
   1400331b5:	in     al,dx
   1400331b6:	jg     0x1400331b7
   1400331b8:	(bad)  
   1400331b9:	out    0x74,eax
   1400331bb:	(bad)  
   1400331bc:	std    
   1400331bd:	loop   0x14003322c
   1400331bf:	(bad)  
   1400331c0:	stc    
   1400331c1:	xlat   BYTE PTR ds:[rbx]
   1400331c2:	fs push rsi
   1400331c5:	rcr    DWORD PTR [rdx-0x1],1
   1400331c8:	repnz (bad) 
   1400331ca:	push   rcx
   1400331cb:	(bad)  
   1400331cc:	out    dx,eax
   1400331cd:	mov    esi,0xb0e7ff47
   1400331d2:	cmp    al,0xff
   1400331d4:	rcl    BYTE PTR [rbp+0x6399fc2f],cl
   1400331da:	sbb    ebx,eax
	...
   140033204:	xchg   bh,bh
   140033206:	std    
   140033207:	add    al,0x82
   140033209:	(bad)  
   14003320a:	std    
   14003320b:	rex.RB lahf 
   14003320d:	mov    ecx,0xe891d88c
   140033212:	loope  0x140033212
   140033214:	(bad)  
   140033215:	(bad)  
   140033216:	cld    
   140033217:	inc    DWORD PTR [rbx-0x25]
   14003321a:	(bad)  
   14003321b:	push   QWORD PTR [rax]
   14003321d:	int    0xff
   14003321f:	jmp    FWORD PTR [rax]
   140033221:	mov    ebp,0xb728fffe
   140033226:	(bad)  
   140033227:	(bad)  
   140033228:	ds mov edi,0xddaefffb
   14003322e:	(bad)  
   140033231:	neg    BYTE PTR [rsi-0x59050401]
   140033237:	(bad)  
   140033238:	(bad)  
   140033239:	std    
   14003323a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003323b:	(bad)  
   14003323c:	(bad)  
   14003323d:	(bad)  
   14003323e:	test   eax,0xaafeffff
   140033243:	(bad)  
   140033244:	(bad)  
   140033245:	(bad)  
   140033246:	test   al,0xff
   140033248:	(bad)  
   140033249:	(bad)  
   14003324a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003324b:	(bad)  
   14003324c:	(bad)  
   14003324d:	(bad)  
   14003324e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003324f:	(bad)  
   140033250:	(bad)  
   140033251:	(bad)  
   140033252:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140033253:	(bad)  
   140033254:	(bad)  
   140033255:	(bad)  
   140033256:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140033257:	(bad)  
   140033258:	(bad)  
   140033259:	(bad)  
   14003325a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003325b:	(bad)  
   14003325c:	(bad)  
   14003325d:	(bad)  
   14003325e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003325f:	(bad)  
   140033260:	(bad)  
   140033261:	(bad)  
   140033262:	test   al,0xff
   140033264:	(bad)  
   140033265:	(bad)  
   140033266:	test   al,0xff
   140033268:	(bad)  
   140033269:	std    
   14003326a:	test   al,0xff
   14003326c:	(bad)  
   14003326d:	std    
   14003326e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003326f:	(bad)  
   140033270:	(bad)  
   140033271:	std    
   140033272:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140033273:	(bad)  
   140033274:	(bad)  
   140033275:	cld    
   140033276:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140033277:	(bad)  
   140033278:	(bad)  
   140033279:	cld    
   14003327a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003327b:	(bad)  
   14003327c:	(bad)  
   14003327d:	cld    
   14003327e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003327f:	(bad)  
   140033280:	(bad)  
   140033281:	sti    
   140033282:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140033283:	(bad)  
   140033284:	(bad)  
   140033285:	sti    
   140033286:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140033287:	(bad)  
   140033288:	(bad)  
   140033289:	cli    
   14003328a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003328b:	(bad)  
   14003328c:	(bad)  
   14003328d:	cli    
   14003328e:	movabs ds:0xa2f9ffffa2f9ffff,eax
   140033297:	(bad)  
   140033298:	(bad)  
   140033299:	clc    
   14003329a:	movabs eax,ds:0x9cf4ffff9df7ffff
   1400332a3:	(bad)  
   1400332a4:	push   rsp
   1400332a6:	xchg   edi,eax
   1400332a7:	(bad)  
   1400332a8:	push   rbx
   1400332aa:	xchg   ebx,eax
   1400332ab:	(bad)  
   1400332ac:	push   rcx
   1400332ae:	(bad)  
   1400332af:	(bad)  
   1400332b0:	(bad)  
   1400332b1:	out    dx,eax
   1400332b2:	xchg   bh,bh
   1400332b4:	(bad)  
   1400332b5:	in     al,dx
   1400332b6:	jle    0x1400332b7
   1400332b8:	(bad)  
   1400332b9:	out    0x74,eax
   1400332bb:	(bad)  
   1400332bc:	std    
   1400332bd:	loopne 0x14003332c
   1400332bf:	(bad)  
   1400332c0:	stc    
   1400332c1:	xlat   BYTE PTR ds:[rbx]
   1400332c2:	(bad)  
   1400332c3:	(bad)  
   1400332c4:	clc    
   1400332c5:	rcr    BYTE PTR [rax-0x1],1
   1400332c8:	(bad)
   1400332cc:	out    dx,al
   1400332cd:	mov    ebp,0xafe8ff45
   1400332d2:	cmp    bh,bh
   1400332d4:	rcl    DWORD PTR [rsp+rbp*1+0x19649afc],1
   1400332db:	ret    
	...
   140033308:	cmp    edi,0xb59d0ffd
   14003330e:	mov    cl,dh
   140033310:	shl    ch,0xa7
   140033313:	std    
   140033314:	test   dh,dh
   140033316:	cld    
   140033317:	call   FWORD PTR [rcx+rbp*8-0x2]
   14003331b:	(bad)  
   14003331c:	cmp    eax,0x2dffffda
   140033321:	retf   0xffff
   140033324:	(bad)  
   140033325:	mov    edx,0xb729ffff
   14003332a:	(bad)  
   14003332b:	dec    DWORD PTR [rbp-0x3e]
   14003332e:	stc    
   14003332f:	dec    esp
   140033331:	in     al,0xb8
   140033333:	push   rdi
   140033335:	mul    BYTE PTR [rbp-0x53050401]
   14003333b:	(bad)  
   14003333c:	(bad)  
   14003333d:	std    
   14003333e:	lods   eax,DWORD PTR ds:[rsi]
   14003333f:	(bad)  
   140033340:	(bad)  
   140033341:	(bad)  
   140033342:	scas   al,BYTE PTR es:[rdi]
   140033343:	(bad)  
   140033344:	(bad)  
   140033345:	jmp    FWORD PTR [rbp-0x53000001]
   14003334b:	(bad)  
   14003334c:	(bad)  
   14003334d:	jmp    FWORD PTR [rdx-0x56000001]
   140033353:	(bad)  
   140033354:	(bad)  
   140033355:	jmp    FWORD PTR [rcx-0x57000001]
   14003335b:	(bad)  
   14003335c:	(bad)  
   14003335d:	jmp    FWORD PTR [rcx-0x56000001]
   140033363:	(bad)  
   140033364:	(bad)  
   140033365:	jmp    FWORD PTR [rcx-0x57010001]
   14003336b:	(bad)  
   14003336c:	(bad)  
   14003336d:	(bad)  
   14003336e:	test   al,0xff
   140033370:	(bad)  
   140033371:	(bad)  
   140033372:	test   al,0xff
   140033374:	(bad)  
   140033375:	std    
   140033376:	test   al,0xff
   140033378:	(bad)  
   140033379:	std    
   14003337a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003337b:	(bad)  
   14003337c:	(bad)  
   14003337d:	cld    
   14003337e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003337f:	(bad)  
   140033380:	(bad)  
   140033381:	cld    
   140033382:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140033383:	(bad)  
   140033384:	(bad)  
   140033385:	sti    
   140033386:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140033387:	(bad)  
   140033388:	(bad)  
   140033389:	sti    
   14003338a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003338b:	(bad)  
   14003338c:	(bad)  
   14003338d:	cli    
   14003338e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003338f:	(bad)  
   140033390:	(bad)  
   140033391:	cli    
   140033392:	movabs ds:0xa1f8ffffa2f9ffff,eax
   14003339b:	(bad)  
   14003339c:	(bad)  
   14003339d:	clc    
   14003339e:	lahf   
   14003339f:	(bad)  
   1400333a0:	push   rsp
   1400333a2:	popf   
   1400333a3:	(bad)  
   1400333a4:	push   rsp
   1400333a6:	xchg   edi,eax
   1400333a7:	(bad)  
   1400333a8:	push   rbx
   1400333aa:	xchg   edx,eax
   1400333ab:	(bad)  
   1400333ac:	push   rdx
   1400333ae:	mov    edi,edi
   1400333b0:	(bad)  
   1400333b1:	out    dx,eax
   1400333b2:	xchg   bh,bh
   1400333b4:	(bad)  
   1400333b5:	jmp    0x140033434
   1400333b7:	(bad)  
   1400333b8:	(bad)  
   1400333b9:	out    0x73,eax
   1400333bb:	(bad)  
   1400333bc:	cld    
   1400333bd:	loopne 0x14003342a
   1400333bf:	(bad)  
   1400333c0:	stc    
   1400333c1:	(bad)  
   1400333c2:	(bad)  
   1400333c3:	push   rsi
   1400333c5:	rcr    BYTE PTR [rax-0x1],1
   1400333c8:	(bad)
   1400333cc:	in     eax,dx
   1400333cd:	mov    ebx,0xaee7ff44
   1400333d2:	(bad)  
   1400333d3:	dec    esi
   1400333d5:	nop
   1400333d6:	sub    eax,0x1a659bfa
   1400333db:	mov    bh,0x0
	...
   140033409:	add    BYTE PTR [rax],al
   14003340b:	add    BYTE PTR [rbp-0x40589d62],ah
   140033411:	frstor [rdx-0x2e0d4c05]
   140033417:	inc    DWORD PTR [rdx+0x55fffef8]
   14003341d:	call   0x1153d3421
   140033422:	(bad)  
   140033423:	jmp    FWORD PTR [rsp+rax*8]
   140033426:	(bad)  
   140033427:	jmp    QWORD PTR [rip+0x2bffffb9]        # 0x16c0333e6
   14003342d:	mov    bh,0xff
   14003342f:	call   FWORD PTR [rsi-0x37]
   140033432:	cmc    
   140033433:	(bad)  
   140033434:	fsubp  st(4),st
   140033436:	mov    al,0xff
   140033438:	div    edi
   14003343a:	stos   BYTE PTR es:[rdi],al
   14003343b:	(bad)  
   14003343c:	sti    
   14003343d:	sti    
   14003343e:	scas   al,BYTE PTR es:[rdi]
   14003343f:	(bad)  
   140033440:	(bad)  
   140033441:	cld    
   140033442:	lods   eax,DWORD PTR ds:[rsi]
   140033443:	(bad)  
   140033444:	fbstp  TBYTE PTR [rbp-0x7b450ba0]
   14003344a:	xor    cl,dl
   14003344c:	lods   eax,DWORD PTR ds:[rsi]
   14003344d:	jb     0x14003346d
   14003344f:	int3   
   140033450:	lods   eax,DWORD PTR ds:[rsi]
   140033451:	jb     0x140033471
   140033453:	int3   
   140033454:	lods   al,BYTE PTR ds:[rsi]
   140033455:	jno    0x140033475
   140033457:	int3   
   140033458:	lods   al,BYTE PTR ds:[rsi]
   140033459:	jno    0x140033479
   14003345b:	int3   
   14003345c:	stos   DWORD PTR es:[rdi],eax
   14003345d:	jno    0x14003347d
   14003345f:	int    0xab
   140033461:	jo     0x140033481
   140033463:	int    0xab
   140033465:	jo     0x140033485
   140033467:	int    0xaa
   140033469:	jo     0x140033488
   14003346b:	(bad)  
   14003346c:	stos   BYTE PTR es:[rdi],al
   14003346d:	outs   dx,DWORD PTR ds:[rsi]
   14003346e:	sbb    eax,0x1d6fa9ce
   140033473:	(bad)  
   140033474:	test   eax,0xa8ce1d6f
   140033479:	outs   dx,BYTE PTR ds:[rsi]
   14003347a:	sbb    eax,0x1d6ea8cf
   14003347f:	iret   
   140033480:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140033481:	outs   dx,BYTE PTR ds:[rsi]
   140033482:	sbb    eax,0x1d6da7cf
   140033487:	iret   
   140033488:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140033489:	ins    DWORD PTR es:[rdi],dx
   14003348a:	sbb    al,0xcf
   14003348c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003348d:	ins    DWORD PTR es:[rdi],dx
   14003348e:	sbb    al,0xcf
   140033490:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140033491:	ins    BYTE PTR es:[rdi],dx
   140033492:	sbb    al,0xd0
   140033494:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140033495:	ins    BYTE PTR es:[rdi],dx
   140033496:	sbb    al,0xd0
   140033498:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140033499:	imul   ebx,DWORD PTR [rax+rdx*8],0xffffffb2
   14003349d:	xor    BYTE PTR [rdx],0xd6
   1400334a0:	fdiv   DWORD PTR [rcx-0xc0006a0]
   1400334a6:	(bad)  
   1400334a7:	(bad)  
   1400334a8:	push   rbx
   1400334aa:	xchg   ebx,eax
   1400334ab:	(bad)  
   1400334ac:	push   rdx
   1400334ae:	mov    edi,edi
   1400334b0:	(bad)  
   1400334b1:	in     eax,dx
   1400334b2:	test   edi,edi
   1400334b4:	(bad)  
   1400334b5:	(bad)  
   1400334b6:	jge    0x1400334b7
   1400334b8:	jmp    rsi
   1400334ba:	jb     0x1400334bb
   1400334bc:	cld    
   1400334bd:	fild   QWORD PTR [rcx-0x1]
   1400334c0:	clc    
   1400334c1:	fsub   DWORD PTR [rax-0x1]
   1400334c4:	cmc    
   1400334c5:	(bad)  
   1400334c6:	push   rdi
   1400334c7:	push   rbx
   1400334c9:	ret    
   1400334ca:	rex.WR (bad) 
   1400334cc:	in     eax,dx
   1400334cd:	mov    edx,0xace5ff43
   1400334d2:	cmp    edi,edi
   1400334d4:	(bad)  
   1400334d5:	mov    WORD PTR [rip+0x1a669df7],gs        # 0x15a69d2d2
   1400334db:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
	...
   14003350c:	mov    ch,0x7f
   14003350e:	cs jbe 0x1400334dd
   140033511:	iret   
   140033512:	mov    esi,ebp
   140033514:	retf   
   140033515:	repz mov cl,0xff
   140033518:	movabs eax,ds:0x50fffff881fffcfb
   140033521:	in     al,0xff
   140033523:	push   QWORD PTR [rcx+rdx*8]
   140033526:	(bad)  
   140033527:	jmp    FWORD PTR [rcx]
   140033529:	sar    edi,0xff
   14003352c:	and    eax,0x2fffffb7
   140033531:	mov    edx,0xcb6bfffe
   140033536:	icebp  
   140033537:	(bad)  
   140033538:	in     al,dx
   140033539:	lock lods al,BYTE PTR ds:[rsi]
   14003353b:	(bad)  
   14003353c:	clc    
   14003353d:	imul   DWORD PTR [rbp-0x5d090601]
   140033543:	push   QWORD PTR [rdx-0x5130d785]
   140033549:	jae    0x140033569
   14003354b:	or     al,0x0
	...
   140033599:	add    BYTE PTR [rax],al
   14003359b:	add    BYTE PTR [rsp+rbp*2+0x78ac0f1c],ah
   1400335a2:	sub    dl,ah
   1400335a4:	push   rbx
   1400335a6:	cdq    
   1400335a7:	(bad)  
   1400335a8:	push   rbx
   1400335aa:	xchg   esp,eax
   1400335ab:	(bad)  
   1400335ac:	(bad)  
   1400335ad:	out    dx,eax
   1400335ae:	(bad)  
   1400335af:	(bad)  
   1400335b0:	(bad)  
   1400335b1:	in     eax,dx
   1400335b2:	test   edi,edi
   1400335b4:	(bad)  
   1400335b5:	jmp    0x140033632
   1400335b7:	(bad)  
   1400335b8:	jmp    rsp
   1400335ba:	jb     0x1400335bb
   1400335bc:	cld    
   1400335bd:	fisubr WORD PTR [rcx-0x1]
   1400335c0:	clc    
   1400335c1:	(bad)  
   1400335c2:	(bad)  
   1400335c3:	push   rbp
   1400335c5:	int3   
   1400335c6:	push   rbp
   1400335c7:	push   rdx
   1400335c9:	(bad)  
   1400335ca:	rex.WXB (bad) 
   1400335cc:	in     al,dx
   1400335cd:	mov    eax,0xa9e3ff42
   1400335d2:	cmp    bh,bh
   1400335d4:	mov    esi,0x9def2e85
   1400335d9:	data16 sbb bh,BYTE PTR [rdi+0x0]
	...
   140033609:	add    BYTE PTR [rax],al
   14003360b:	add    BYTE PTR [rbp-0x26b6d784],dh
   140033611:	scas   al,BYTE PTR es:[rdi]
   140033612:	push   rsi
   140033613:	out    0xd3,al
   140033615:	lock movabs ds:0xfffe9cffc1f9c9ff,al
   14003361f:	push   QWORD PTR [rdi-0xd]
   140033622:	(bad)  
   140033623:	inc    DWORD PTR [rdi-0x21]
   140033626:	(bad)  
   140033627:	push   QWORD PTR [rcx]
   140033629:	(bad)  
   14003362a:	(bad)  
   14003362b:	jmp    FWORD PTR [rax]
   14003362d:	sar    bh,0xff
   140033630:	(bad)  
   140033631:	mov    bh,0xff
   140033633:	push   QWORD PTR [rbx]
   140033635:	mov    edx,0xd07dfffe
   14003363a:	in     al,dx
   14003363b:	push   rcx
   14003363d:	repnz stos DWORD PTR es:[rdi],eax
   14003363f:	push   rbx
   140033641:	jmp    0xc8bc35de
   140033646:	cmp    dl,bh
   140033648:	stos   BYTE PTR es:[rdi],al
   140033649:	jo     0x14003366b
   14003364b:	sub    al,0x0
	...
   140033699:	add    BYTE PTR [rax],al
   14003369b:	add    BYTE PTR [rbp-0x41cce394],ah
   1400336a1:	xchg   ecx,eax
   1400336a2:	rex.R fdivp st(7),st
   1400336a5:	repnz xchg ebp,eax
   1400336a7:	(bad)  
   1400336a8:	push   rbx
   1400336aa:	xchg   ebx,eax
   1400336ab:	(bad)  
   1400336ac:	push   rax
   1400336ae:	mov    bh,bh
   1400336b0:	(bad)  
   1400336b1:	in     al,dx
   1400336b2:	cmp    edi,0xffffffff
   1400336b5:	(bad)  
   1400336b6:	jp     0x1400336b7
   1400336b8:	jmp    rbx
   1400336ba:	jno    0x1400336bb
   1400336bc:	cld    
   1400336bd:	fsub   QWORD PTR [rdi-0x1]
   1400336c0:	clc    
   1400336c1:	(bad)  
   1400336c2:	pop    rsi
   1400336c3:	push   rbx
   1400336c5:	int3   
   1400336c6:	push   rbp
   1400336c7:	push   rdx
   1400336c9:	ret    0xff4a
   1400336cc:	in     al,dx
   1400336cd:	mov    bh,0x41
   1400336cf:	(bad)  
   1400336d0:	fbld   TBYTE PTR [rcx+rdi*1+0x2c7bb4ff]
   1400336d7:	jmp    0x19f1d9e7a
	...
   14003370c:	mov    bh,0x7b
   14003370e:	and    al,0x18
   140033710:	ror    DWORD PTR [rsi-0x160a2bc6],0x7d
   140033717:	call   rax
   140033719:	stc    
   14003371a:	mov    bl,0xff
   14003371c:	mov    ah,0xf9
   14003371e:	out    0xff,eax
   140033720:	popf   
   140033721:	(bad)  
   140033722:	(bad)  
   140033723:	jmp    FWORD PTR [rbx-0xf]
   140033726:	(bad)  
   140033727:	inc    DWORD PTR [rcx-0x25]
   14003372a:	(bad)  
   14003372b:	push   QWORD PTR [rax]
   14003372d:	int    0xff
   14003372f:	jmp    QWORD PTR [rdi]
   140033731:	mov    ebp,0xb627ffff
   140033736:	(bad)  
   140033737:	(bad)  
   140033738:	cmp    BYTE PTR [rsp+rdi*8-0x1c2c7401],bh
   14003373f:	(bad)  
   140033740:	call   0x10102cb25
   140033745:	fwait
   140033746:	pop    rax
   140033747:	jmp    0x1ab24a0ed
   14003374c:	add    BYTE PTR [rax],al
   14003374e:	push   rbp
   14003374f:	add    DWORD PTR [rax],eax
	...
   140033799:	add    BYTE PTR [rax],al
   14003379b:	add    BYTE PTR [rsi-0x2b96e394],ah
   1400337a1:	lods   eax,DWORD PTR ds:[rsi]
   1400337a2:	pop    rbx
   1400337a3:	jmp    0x13f9729a7
   1400337a8:	push   rdx
   1400337aa:	xchg   ecx,eax
   1400337ab:	(bad)  
   1400337ac:	(bad)  
   1400337ad:	out    dx,eax
   1400337ae:	mov    edi,edi
   1400337b0:	(bad)  
   1400337b1:	jmp    0x140033734
   1400337b3:	(bad)  
   1400337b4:	(bad)  
   1400337b5:	call   0x123023733
   1400337ba:	outs   dx,DWORD PTR ds:[rsi]
   1400337bb:	(bad)  
   1400337bc:	sti    
   1400337bd:	(bad)  [rsi-0x1]
   1400337c0:	not    bl
   1400337c2:	pop    rsp
   1400337c3:	push   rbx
   1400337c5:	retf   0xff52
   1400337c8:	lock ret 0xff49
   1400337cc:	(bad)  
   1400337cd:	mov    bh,0x3f
   1400337cf:	(bad)  
   1400337d0:	(bad)  [rdx+0x71aaff3a]
   1400337d6:	fistp  WORD PTR es:[rsi+0x321a67]
	...
   14003380d:	add    BYTE PTR [rax],al
   14003380f:	add    BYTE PTR [rdi-0x852db85],dh
   140033815:	fild   QWORD PTR [rbp-0x5]
   140033818:	repz cmc 
   14003381a:	xchg   edx,eax
   14003381b:	dec    ebp
   14003381d:	cld    
   14003381e:	mov    edi,0xfdfdafff
   140033823:	call   FWORD PTR [rdi+rdi*8-0x139f0001]
   14003382a:	(bad)  
   14003382b:	(bad)  
   14003382c:	cmp    al,0xda
   14003382e:	(bad)  
   14003382f:	jmp    FWORD PTR [rip+0x27ffffca]        # 0x1680337ff
   140033835:	mov    ebp,0xb627ffff
   14003383a:	(bad)  
   14003383b:	(bad)  
   14003383c:	cmp    edi,DWORD PTR [rsi-0x2c6e0003]
   140033842:	(bad)  
   140033844:	shl    BYTE PTR [rsi+0x669afb77],1
   14003384a:	(bad)  
   14003384b:	mov    esp,0xa4a1520
   140033850:	add    BYTE PTR [rax],al
   140033852:	push   rbp
   140033853:	add    DWORD PTR [rax],eax
	...
   140033895:	add    BYTE PTR [rax],al
   140033897:	add    BYTE PTR [rdi-0x59fde293],ah
   14003389d:	ins    DWORD PTR es:[rdi],dx
   14003389e:	sbb    al,0xb9
   1400338a0:	repnz (bad) 
   1400338a2:	jnp    0x14003389e
   1400338a4:	push   rdx
   1400338a6:	xchg   edx,eax
   1400338a7:	(bad)  
   1400338a8:	push   rdx
   1400338aa:	nop
   1400338ab:	(bad)  
   1400338ac:	(bad)  
   1400338ad:	out    dx,eax
   1400338ae:	xchg   bh,bh
   1400338b0:	(bad)  
   1400338b1:	(bad)  
   1400338b2:	jg     0x1400338b3
   1400338b4:	jmp    rdi
   1400338b6:	ja     0x1400338b7
   1400338b8:	(bad)  
   1400338b9:	loope  0x140033926
   1400338bb:	(bad)  
   1400338bc:	stc    
   1400338bd:	fisub  DWORD PTR [rbx-0x1]
   1400338c0:	not    cl
   1400338c2:	pop    rcx
   1400338c3:	push   rdx
   1400338c5:	(bad)  
   1400338c6:	rex.WRXB (bad) 
   1400338c8:	out    dx,eax
   1400338c9:	mov    esi,0xb2e9ff46
   1400338ce:	cmp    al,0xff
   1400338d0:	(bad)  
   1400338d1:	fwait
   1400338d2:	(bad)  
   1400338d3:	std    
   1400338d4:	lahf   
   1400338d5:	push   0x679fcc1b
   1400338da:	sbb    eax,DWORD PTR [rip+0x0]        # 0x1400338e0
	...
   140033910:	mov    dh,0x79
   140033912:	and    DWORD PTR [rdi-0x18],esp
   140033915:	mov    esp,0xf4fbef59
   14003391a:	xchg   edi,edi
   14003391c:	out    dx,al
   14003391d:	stc    
   14003391e:	movabs al,ds:0xffffacffcdfccaff
   140033927:	call   QWORD PTR [rbx+0x58ffffff]
   14003392d:	jmp    0x1183e3931
   140033932:	(bad)  
   140033933:	jmp    FWORD PTR [rdi]
   140033935:	enter  0xffff,0x27
   140033939:	mov    esp,0xb728ffff
   14003393e:	(bad)  
   14003393f:	(bad)  
   140033940:	ds mov esi,0xce98fffd
   140033946:	int3   
   140033947:	jmp    FWORD PTR [rdx-0x7619b77a]
   14003394d:	pop    rdx
   14003394e:	and    eax,0x55000066
   140033953:	or     BYTE PTR [rax],al
   140033955:	add    BYTE PTR [rbp+0x1],dl
	...
   140033998:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140033999:	ins    DWORD PTR es:[rdi],dx
   14003399a:	sbb    eax,0x4c9eca58
   14003399f:	in     al,0xfd
   1400339a1:	jmp    0x13303392b
   1400339a6:	nop
   1400339a7:	(bad)  
   1400339a8:	push   rax
   1400339aa:	mov    ?,edi
   1400339ac:	(bad)  
   1400339ad:	out    dx,al
   1400339ae:	test   bh,bh
   1400339b0:	(bad)  
   1400339b1:	(bad)  
   1400339b2:	jnp    0x1400339b3
   1400339b4:	jmp    rdi
   1400339b6:	jb     0x1400339b7
   1400339b8:	std    
   1400339b9:	fisubr WORD PTR [rdx-0x1]
   1400339bc:	stc    
   1400339bd:	(bad)  
   1400339be:	(bad)  
   1400339bf:	push   rbp
   1400339c1:	(bad)  
   1400339c2:	push   rdi
   1400339c3:	push   rcx
   1400339c5:	(bad)  
   1400339c6:	rex.WRB (bad) 
   1400339c8:	out    dx,al
   1400339c9:	mov    esp,0xafe5ff45
   1400339ce:	cmp    al,0xff
   1400339d0:	ret    
   1400339d1:	mov    DWORD PTR [rcx],esi
   1400339d3:	lock movabs al,ds:0x891b68
	...
   140033a0d:	add    BYTE PTR [rax],al
   140033a0f:	add    BYTE PTR [rbp-0x37dede87],dh
   140033a15:	xchg   edx,eax
   140033a16:	cmp    esp,edx
   140033a18:	cli    
   140033a19:	icebp  
   140033a1a:	jg     0x140033a1b
   140033a1c:	cld    
   140033a1d:	test   BYTE PTR [rdi+rdi*8-0x540315],0xc3
   140033a25:	sti    
   140033a26:	(bad)  
   140033a28:	lods   eax,DWORD PTR ds:[rsi]
   140033a29:	(bad)  
   140033a2a:	(bad)  
   140033a2b:	dec    DWORD PTR [rsi+0x54fffffc]
   140033a31:	out    0xff,eax
   140033a33:	(bad)  
   140033a34:	cmp    ebp,edx
   140033a36:	(bad)  
   140033a37:	jmp    FWORD PTR [rip+0x26ffffc8]        # 0x167033a05
   140033a3d:	mov    esp,0xb72affff
   140033a42:	(bad)  
   140033a43:	(bad)  
   140033a44:	(bad)  
   140033a45:	mov    edi,0xbd93fffc
   140033a4a:	mov    ebx,0x1f5c8efd
   140033a4f:	retf   
   140033a50:	pop    rdi
   140033a51:	ds xor al,0x31
   140033a54:	add    BYTE PTR [rax],al
   140033a56:	push   rbp
   140033a57:	or     BYTE PTR [rax],al
   140033a59:	add    BYTE PTR [rbp+0x2],dl
	...
   140033a94:	test   al,0x6e
   140033a96:	sbb    eax,0x1d6da71d
   140033a9b:	(bad)
   140033a9e:	ja     0x140033a98
   140033aa0:	(bad)  
   140033aa1:	out    dx,eax
   140033aa2:	mov    edi,?
   140033aa4:	push   rdx
   140033aa6:	mov    ?,edi
   140033aa8:	push   rax
   140033aaa:	mov    edi,edi
   140033aac:	(bad)  
   140033aad:	in     eax,dx
   140033aae:	(bad)  
   140033aaf:	(bad)  
   140033ab0:	jmp    rdi
   140033ab2:	js     0x140033ab3
   140033ab4:	(bad)  
   140033ab5:	in     al,0x70
   140033ab7:	(bad)  
   140033ab8:	cld    
   140033ab9:	fisub  DWORD PTR [rdi-0x1]
   140033abc:	stc    
   140033abd:	(bad)  
   140033abe:	pop    rsi
   140033abf:	push   rbx
   140033ac1:	retf   0xff53
   140033ac4:	out    dx,eax
   140033ac5:	ror    BYTE PTR [rdi+rdi*8-0x13],0xb6
   140033aca:	rex (bad) 
   140033acc:	fbld   TBYTE PTR [rsi+0x75adff3b]
   140033ad2:	(bad)  
   140033ad3:	loopne 0x140033a75
   140033ad5:	imul   ebx,DWORD PTR [rbx],0x39
	...
   140033b13:	add    BYTE PTR [rbp-0xa6ade87],dh
   140033b19:	fisubr DWORD PTR [rdx-0xa]
   140033b1c:	cld    
   140033b1d:	cmc    
   140033b1e:	mov    edi,edi
   140033b20:	std    
   140033b21:	stc    
   140033b22:	xchg   esi,eax
   140033b23:	(bad)  
   140033b24:	(bad)  
   140033b25:	std    
   140033b26:	mov    ah,0xff
   140033b28:	mov    eax,0xaafff3fb
   140033b2d:	(bad)  
   140033b2e:	(bad)  
   140033b2f:	dec    DWORD PTR [rcx+0x50fffffb]
   140033b35:	out    0xff,eax
   140033b37:	push   QWORD PTR [rdi]
   140033b39:	(bad)  
   140033b3a:	(bad)  
   140033b3b:	jmp    FWORD PTR [rip+0x26ffffc8]        # 0x167033b09
   140033b41:	mov    esp,0xb729ffff
   140033b46:	(bad)  
   140033b47:	inc    DWORD PTR [rax-0x41]
   140033b4a:	cld    
   140033b4b:	inc    DWORD PTR [rbp-0x75084d51]
   140033b51:	pop    rsp
   140033b52:	and    BYTE PTR [rbp+0x2b39334e],bh
   140033b58:	add    BYTE PTR [rax],al
   140033b5a:	push   rbp
   140033b5b:	or     DWORD PTR [rax],eax
   140033b5d:	add    BYTE PTR [rbp+0x2],dl
	...
   140033b90:	test   eax,0xa8161d6f
   140033b95:	outs   dx,BYTE PTR ds:[rsi]
   140033b96:	sbb    eax,0x56a9d2b5
   140033b9b:	jmp    0x140033b9a
   140033b9d:	(bad)  
   140033b9e:	xchg   bh,bh
   140033ba0:	push   rbx
   140033ba2:	xchg   edx,eax
   140033ba3:	(bad)  
   140033ba4:	push   rdx
   140033ba6:	(bad)  
   140033ba7:	(bad)  
   140033ba8:	(bad)  
   140033ba9:	out    dx,eax
   140033baa:	xchg   edi,edi
   140033bac:	(bad)  
   140033bad:	jmp    0x140033c2d
   140033baf:	(bad)  
   140033bb0:	jmp    rdi
   140033bb2:	jb     0x140033bb3
   140033bb4:	std    
   140033bb5:	loop   0x140033c24
   140033bb7:	(bad)  
   140033bb8:	stc    
   140033bb9:	fsub   DWORD PTR [rbx-0x1]
   140033bbc:	clc    
   140033bbd:	rcr    BYTE PTR [rdx-0x1],cl
   140033bc0:	repnz (bad) 
   140033bc2:	push   rax
   140033bc3:	(bad)  
   140033bc4:	out    dx,eax
   140033bc5:	mov    esi,0xb1e8ff47
   140033bca:	cmp    eax,0x3596cfff
   140033bcf:	clc    
   140033bd0:	movabs eax,ds:0x21b69a1b81b69
	...
   140033c11:	add    BYTE PTR [rax],al
   140033c13:	add    BYTE PTR [rsi-0x2bc7df88],dh
   140033c19:	movabs ds:0xf8fdff85f3fbde46,eax
   140033c22:	(bad)  
   140033c23:	(bad)  
   140033c24:	(bad)  
   140033c25:	cld    
   140033c26:	fwait
   140033c27:	(bad)  
   140033c28:	(bad)  
   140033c29:	(bad)  
   140033c2a:	mov    esp,0xfbfcb5ff
   140033c2f:	jmp    FWORD PTR [rax-0x7a000001]
   140033c35:	clc    
   140033c36:	(bad)  
   140033c37:	dec    DWORD PTR [rsi-0x1b]
   140033c3a:	(bad)  
   140033c3b:	push   QWORD PTR [rsi]
   140033c3d:	(bad)  
   140033c3e:	(bad)  
   140033c3f:	jmp    FWORD PTR [rip+0x26ffffc7]        # 0x167033c0c
   140033c45:	mov    esp,0xb729ffff
   140033c4a:	(bad)  
   140033c4b:	(bad)  
   140033c4c:	(bad)  
   140033c4d:	mov    edi,0xb07efffc
   140033c52:	mov    ecx,0x205a88f8
   140033c57:	sar    BYTE PTR [rcx+0x4f],0x2a
   140033c5b:	push   rcx
   140033c5c:	add    BYTE PTR [rax],al
   140033c5e:	push   rbp
   140033c5f:	or     al,BYTE PTR [rax]
   140033c61:	add    BYTE PTR [rbp+0x2],dl
	...
   140033c8c:	stos   BYTE PTR es:[rdi],al
   140033c8d:	jo     0x140033cac
   140033c8f:	(bad)  
   140033c90:	test   eax,0xcdb71d6e
   140033c95:	movabs ds:0xf1ffff84e3f9e951,eax
   140033c9e:	mov    edi,?
   140033ca0:	push   rbx
   140033ca2:	xchg   ecx,eax
   140033ca3:	(bad)  
   140033ca4:	push   rax
   140033ca6:	mov    bh,bh
   140033ca8:	(bad)  
   140033ca9:	out    dx,al
   140033caa:	(bad)  
   140033cab:	(bad)  
   140033cac:	(bad)  
   140033cad:	jmp    0x125023c2c
   140033cb2:	jo     0x140033cb3
   140033cb4:	cld    
   140033cb5:	(bad)  [rax-0x1]
   140033cb8:	stc    
   140033cb9:	(bad)  
   140033cba:	pop    rdi
   140033cbb:	push   rsi
   140033cbd:	int    0x55
   140033cbf:	push   rcx
   140033cc1:	ret    0xff4d
   140033cc4:	in     eax,dx
   140033cc5:	mov    edx,0xace1ff44
   140033cca:	cmp    al,0xff
   140033ccc:	mov    ch,0x7d
   140033cce:	cs in  al,0x9f
   140033cd1:	push   0x551c
   140033cd6:	push   rbp
   140033cd7:	add    DWORD PTR [rax],eax
	...
   140033d15:	add    BYTE PTR [rax],al
   140033d17:	add    BYTE PTR [rsi-0xa68df88],dh
   140033d1d:	(bad)  
   140033d1e:	data16 repz std 
   140033d21:	test   BYTE PTR [rdi+rdi*8-0x6a0502],0xff
   140033d29:	cld    
   140033d2a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140033d2b:	(bad)  
   140033d2c:	(bad)  
   140033d2d:	inc    cl
   140033d2f:	push   QWORD PTR [rbx-0x59000203]
   140033d35:	(bad)  
   140033d36:	(bad)  
   140033d37:	inc    DWORD PTR [rbp+0x4efffff9]
   140033d3d:	in     eax,0xff
   140033d3f:	push   QWORD PTR [rsi]
   140033d41:	(bad)  
   140033d42:	(bad)  
   140033d43:	jmp    FWORD PTR [rip+0x26ffffc8]        # 0x167033d11
   140033d49:	mov    esp,0xb729ffff
   140033d4e:	(bad)  
   140033d4f:	(bad)  
   140033d50:	cmp    al,0xbe
   140033d52:	std    
   140033d53:	inc    DWORD PTR [rax-0x63043746]
   140033d59:	jbe    0x140033d95
   140033d5b:	loop   0x140033ced
   140033d5d:	pop    rdi
   140033d5e:	and    DWORD PTR [rax+0x232f4c74],ebx
   140033d64:	add    BYTE PTR [rax],al
   140033d66:	push   rbp
   140033d67:	add    eax,DWORD PTR [rax]
	...
   140033d81:	add    BYTE PTR [rax],al
   140033d83:	add    BYTE PTR [rbx-0x54e7e18f],ch
   140033d89:	jo     0x140033da9
   140033d8b:	mov    ?,WORD PTR [rbp+rcx*4-0x482521c2]
   140033d92:	data16 repnz clc 
   140033d95:	loope  0x140033d1a
   140033d97:	(bad)  
   140033d98:	push   rax
   140033d9a:	mov    edi,?
   140033d9c:	push   rsp
   140033d9e:	xchg   ecx,eax
   140033d9f:	(bad)  
   140033da0:	push   rcx
   140033da2:	mov    edi,?
   140033da4:	(bad)  
   140033da5:	out    dx,eax
   140033da6:	test   bh,bh
   140033da8:	(bad)  
   140033da9:	(bad)  
   140033daa:	jge    0x140033dab
   140033dac:	(bad)  
   140033dad:	out    0x73,al
   140033daf:	(bad)  
   140033db0:	cld    
   140033db1:	loop   0x140033e1f
   140033db3:	(bad)  
   140033db4:	stc    
   140033db5:	fsub   DWORD PTR [rbx-0x1]
   140033db8:	clc    
   140033db9:	rcr    DWORD PTR [rdi+rdi*8-0xd],1
   140033dbd:	leave  
   140033dbe:	push   rdx
   140033dbf:	push   rax
   140033dc1:	mov    edi,0xb2ebff4a
   140033dc6:	rex dec ebx
   140033dc9:	xchg   ebx,eax
   140033dca:	ss hlt 
   140033dcc:	movabs eax,ds:0xa3b2f48b4216c
   140033dd5:	add    BYTE PTR [rbp+0x3],dl
	...
   140033e18:	mov    dh,0x79
   140033e1a:	and    DWORD PTR [rip+0xffffffffcb2f85c1],esp        # 0x10b32c3e1
   140033e20:	cld    
   140033e21:	cmc    
   140033e22:	xchg   esi,edi
   140033e24:	(bad)  
   140033e25:	clc    
   140033e26:	xchg   ecx,eax
   140033e27:	(bad)  
   140033e28:	(bad)  
   140033e29:	cli    
   140033e2a:	xchg   edi,eax
   140033e2b:	(bad)  
   140033e2c:	(bad)  
   140033e2d:	std    
   140033e2e:	test   eax,0xc3feeaff
   140033e33:	push   QWORD PTR [rax-0x59000103]
   140033e39:	(bad)  
   140033e3a:	(bad)  
   140033e3b:	inc    DWORD PTR [rsi+0x50fffff9]
   140033e41:	in     eax,0xff
   140033e43:	push   QWORD PTR [rdi]
   140033e45:	(bad)  
   140033e46:	(bad)  
   140033e47:	jmp    FWORD PTR [rip+0x27ffffc8]        # 0x168033e15
   140033e4d:	mov    esp,0xb727ffff
   140033e52:	(bad)  
   140033e53:	(bad)  
   140033e54:	cmp    BYTE PTR [rbp+rdi*8-0x273a7e01],bh
   140033e5b:	jmp    QWORD PTR [rdi-0x6a12ab77]
   140033e61:	(bad)  
   140033e62:	(bad)  
   140033e63:	leave  
   140033e64:	popf   
   140033e65:	imul   esp,DWORD PTR [rcx],0x216ea887
   140033e6b:	rex.RB lods al,BYTE PTR ds:[rsi]
   140033e6d:	jno    0x140033e8f
   140033e6f:	sub    ch,BYTE PTR [rsi-0x51fde18d]
   140033e75:	jb     0x140033e95
   140033e77:	add    ch,BYTE PTR [rbp-0x52d6e18e]
   140033e7d:	jb     0x140033e9d
   140033e7f:	rex.XB lods al,BYTE PTR ds:[rsi]
   140033e81:	jno    0x140033ea1
   140033e83:	test   BYTE PTR [rdx-0x3539e291],ch
   140033e89:	movabs ds:0xe2f8ff85d9ece955,eax
   140033e92:	xchg   bh,bh
   140033e94:	(bad)  
   140033e95:	out    dx,eax
   140033e96:	mov    ?,edi
   140033e98:	push   rbx
   140033e9a:	xchg   ecx,eax
   140033e9b:	(bad)  
   140033e9c:	push   rdx
   140033e9e:	mov    ?,edi
   140033ea0:	(bad)  
   140033ea1:	out    dx,eax
   140033ea2:	xchg   bh,bh
   140033ea4:	(bad)  
   140033ea5:	out    dx,eax
   140033ea6:	cmp    bh,0xff
   140033ea9:	jmp    0x123013e25
   140033eae:	jo     0x140033eaf
   140033eb0:	sti    
   140033eb1:	fsub   QWORD PTR [rdi-0x1]
   140033eb4:	stc    
   140033eb5:	(bad)  
   140033eb6:	pop    rdi
   140033eb7:	push   rsi
   140033eb9:	int    0x56
   140033ebb:	push   rcx
   140033ebd:	ret    0xff4e
   140033ec0:	in     eax,dx
   140033ec1:	mov    edx,0xa9e1ff47
   140033ec6:	cmp    eax,0x2c7ab2ff
   140033ecb:	fisttp WORD PTR [rdx+0x134e527d]
   140033ed1:	sub    bh,BYTE PTR [rdx+rcx*1+0x0]
   140033ed5:	add    BYTE PTR [rbp+0x6],dl
   140033ed8:	add    BYTE PTR [rax],al
   140033eda:	push   rbp
   140033edb:	add    DWORD PTR [rax],eax
	...
   140033f19:	add    BYTE PTR [rax],al
   140033f1b:	add    BYTE PTR [rsi-0x138bde87],dh
   140033f21:	rcr    BYTE PTR [rdx+rbp*8-0x2],0xf7
   140033f26:	(bad)  
   140033f27:	(bad)  
   140033f28:	(bad)  
   140033f29:	clc    
   140033f2a:	xchg   ebx,eax
   140033f2b:	(bad)  
   140033f2c:	(bad)  
   140033f2d:	sti    
   140033f2e:	pushf  
   140033f2f:	(bad)  
   140033f30:	(bad)  
   140033f31:	std    
   140033f32:	lods   eax,DWORD PTR ds:[rsi]
   140033f33:	(bad)  
   140033f34:	jmp    0x140033f34
   140033f36:	(bad)  
   140033f37:	jmp    FWORD PTR [rbp-0x59000102]
   140033f3d:	(bad)  
   140033f3e:	(bad)  
   140033f3f:	dec    DWORD PTR [rax+0x53fffffb]
   140033f45:	in     eax,0xff
   140033f47:	push   QWORD PTR [rdi]
   140033f49:	xlat   BYTE PTR ds:[rbx]
   140033f4a:	(bad)  
   140033f4b:	jmp    FWORD PTR [rdi]
   140033f4d:	retf   0xffff
   140033f50:	sub    DWORD PTR [rbp-0x48d80001],edi
   140033f56:	(bad)  
   140033f57:	push   QWORD PTR [rip+0x76fffebc]        # 0x1b7033e19
   140033f5d:	leave  
   140033f5e:	out    0xff,eax
   140033f60:	shl    DWORD PTR [rdi-0x6043027f],0x5e
   140033f67:	lock mov dh,0x8b
   140033f6a:	rex.XB fbstp TBYTE PTR [r14-0x5028cb7c]
   140033f71:	jne    0x140033f94
   140033f73:	int    0xaf
   140033f75:	jne    0x140033f97
   140033f77:	int    0xb9
   140033f79:	xchg   DWORD PTR [rsi+rdx*8],esi
   140033f7c:	rcl    BYTE PTR [rbx-0x4c2a20be],0x62
   140033f83:	out    dx,eax
   140033f84:	in     al,dx
   140033f85:	(bad)  
   140033f86:	cmp    ch,0xf6
   140033f89:	loop   0x140033f14
   140033f8b:	(bad)  
   140033f8c:	cld    
   140033f8d:	(bad)  
   140033f8e:	mov    bh,bh
   140033f90:	push   rbx
   140033f92:	xchg   ecx,eax
   140033f93:	(bad)  
   140033f94:	push   rbx
   140033f96:	xchg   ecx,eax
   140033f97:	(bad)  
   140033f98:	push   rsp
   140033f9a:	(bad)  
   140033f9b:	(bad)  
   140033f9c:	(bad)  
   140033f9d:	out    dx,eax
   140033f9e:	mov    edi,edi
   140033fa0:	(bad)  
   140033fa1:	out    dx,al
   140033fa2:	(bad)  
   140033fa3:	(bad)  
   140033fa4:	(bad)  
   140033fa5:	jmp    0x140034022
   140033fa7:	(bad)  
   140033fa8:	std    
   140033fa9:	in     eax,0x72
   140033fab:	(bad)  
   140033fac:	cld    
   140033fad:	fisubr WORD PTR [rbx-0x1]
   140033fb0:	stc    
   140033fb1:	(bad)  
   140033fb2:	(bad)  
   140033fb3:	push   rsi
   140033fb5:	rcr    DWORD PTR [rcx-0x1],1
   140033fb8:	repz enter 0xff53,0xed
   140033fbd:	mov    esi,0xb2e9ff4a
   140033fc2:	rex.X (bad) 
   140033fc4:	mov    esi,0xa5e92e87
   140033fc9:	ins    BYTE PTR es:[rdi],dx
   140033fca:	sbb    al,0x87
   140033fcc:	sub    eax,0x391bf8b1
   140033fd1:	nop
   140033fd2:	ficomp DWORD PTR [rdx]
   140033fd4:	add    BYTE PTR [rax],al
   140033fd6:	push   rbp
   140033fd7:	or     DWORD PTR [rax],eax
   140033fd9:	add    BYTE PTR [rbp+0x2],dl
	...
   14003401c:	mov    bh,0x79
   14003401e:	and    DWORD PTR [rdi],eax
   140034020:	mov    eax,0xf8a6257c
   140034025:	fisubr DWORD PTR [rsi-0xf]
   140034028:	push   rdi
   14003402a:	xchg   ebx,eax
   14003402b:	(bad)  
   14003402c:	(bad)  
   14003402d:	stc    
   14003402e:	cwde   
   14003402f:	(bad)  
   140034030:	(bad)  
   140034031:	cld    
   140034032:	movabs ds:0xc7feeeffb0fdffff,al
   14003403b:	jmp    FWORD PTR [rdi-0x59000103]
   140034041:	(bad)  
   140034042:	(bad)  
   140034043:	dec    DWORD PTR [rbx+rdi*8-0x18aa0001]
   14003404a:	(bad)  
   14003404b:	(bad)  
   14003404c:	cmp    al,0xd7
   14003404e:	(bad)  
   14003404f:	jmp    FWORD PTR [rdi]
   140034051:	retf   0xffff
   140034054:	(bad)  
   140034055:	mov    edi,0xb927ffff
   14003405a:	(bad)  
   14003405b:	push   QWORD PTR [rdx]
   14003405d:	mov    esp,0xcb67fffe
   140034062:	repz dec edx
   140034065:	rcr    BYTE PTR [rsi-0x742b1c01],1
   14003406b:	(bad)  
   14003406c:	out    dx,al
   14003406d:	fmul   QWORD PTR [rsi-0x701f0d01]
   140034073:	push   rsp
   140034075:	loop   0x140034006
   140034077:	push   rbp
   140034079:	in     eax,0x8f
   14003407b:	push   rsi
   14003407d:	out    0x8f,eax
   14003407f:	push   rdi
   140034081:	jmp    0x140034016
   140034083:	(bad)  
   140034084:	(bad)  
   140034085:	lock nop
   140034087:	(bad)  
   140034088:	push   rbx
   14003408a:	xchg   edx,eax
   14003408b:	(bad)  
   14003408c:	push   rdx
   14003408e:	xchg   ebx,eax
   14003408f:	(bad)  
   140034090:	push   rsp
   140034092:	xchg   esp,eax
   140034093:	(bad)  
   140034094:	push   rbx
   140034096:	nop
   140034097:	(bad)  
   140034098:	push   rcx
   14003409a:	mov    edi,edi
   14003409c:	(bad)  
   14003409d:	out    dx,eax
   14003409e:	(bad)  
   14003409f:	(bad)  
   1400340a0:	(bad)  
   1400340a1:	jmp    0x14003411e
   1400340a3:	(bad)  
   1400340a4:	jmp    rsi
   1400340a6:	jne    0x1400340a7
   1400340a8:	std    
   1400340a9:	loopne 0x140034117
   1400340ab:	(bad)  
   1400340ac:	sti    
   1400340ad:	(bad)  [rdi+rdi*8-0x8]
   1400340b1:	rcr    DWORD PTR [rbp-0x1],1
   1400340b4:	hlt    
   1400340b5:	int3   
   1400340b6:	push   rsi
   1400340b7:	push   rcx
   1400340b9:	ret    0xff4e
   1400340bc:	in     al,dx
   1400340bd:	mov    eax,0x92cbff46
   1400340c2:	xor    ebp,ebp
   1400340c4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400340c5:	ins    BYTE PTR es:[rdi],dx
   1400340c6:	sbb    al,0xb2
   1400340c8:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400340c9:	ins    BYTE PTR es:[rdi],dx
   1400340ca:	sbb    al,0xf
   1400340cc:	xor    DWORD PTR [rdi-0x53c5ed0d],ebp
   1400340d2:	cmc    
   1400340d3:	cmp    eax,DWORD PTR [rax]
   1400340d5:	add    BYTE PTR [rbp+0xc],dl
   1400340d8:	add    BYTE PTR [rax],al
   1400340da:	push   rbp
   1400340db:	add    eax,0x0
	...
   140034120:	mov    bh,0x79
   140034122:	and    DWORD PTR [rcx],esp
   140034124:	rol    BYTE PTR [rsi-0x18033dd1],0x7d
   14003412b:	idiv   bh
   14003412d:	clc    
   14003412e:	xchg   edi,eax
   14003412f:	(bad)  
   140034130:	(bad)  
   140034131:	stc    
   140034132:	(bad)  
   140034133:	(bad)  
   140034134:	(bad)  
   140034135:	sti    
   140034136:	movabs ds:0xc1fdf2ffadfdffff,eax
   14003413f:	push   QWORD PTR [rax-0x57000103]
   140034145:	(bad)  
   140034146:	(bad)  
   140034147:	call   QWORD PTR [rbx+0x5bfffffe]
   14003414d:	jmp    0x14003414e
   14003414f:	(bad)  
   140034150:	cmp    eax,0x2fffffd8
   140034155:	int    0xff
   140034157:	jmp    FWORD PTR [rcx]
   140034159:	sar    bh,0xff
   14003415c:	(bad)  
   14003415d:	mov    edx,0xba2dffff
   140034162:	(bad)  
   140034163:	call   FWORD PTR [rax-0x39]
   140034166:	clc    
   140034167:	dec    ecx
   140034169:	fistp  QWORD PTR [rax-0x60130b01]
   14003416f:	(bad)  
   140034170:	stc    
   140034171:	repz movabs eax,ds:0xa0f7feffa4f6fcff
   14003417b:	(bad)  
   14003417c:	push   rdi
   14003417e:	movabs al,ds:0x9bf7ffff9df6ffff
   140034187:	(bad)  
   140034188:	push   rdi
   14003418a:	(bad)  
   14003418b:	(bad)  
   14003418c:	push   rsi
   14003418e:	xchg   edi,eax
   14003418f:	(bad)  
   140034190:	push   rbp
   140034192:	nop
   140034193:	(bad)  
   140034194:	push   rax
   140034196:	mov    edi,edi
   140034198:	(bad)  
   140034199:	out    dx,eax
   14003419a:	cmp    edi,0xffffffff
   14003419d:	(bad)  
   14003419e:	jl     0x14003419f
   1400341a0:	jmp    rsi
   1400341a2:	jne    0x1400341a3
   1400341a4:	std    
   1400341a5:	loope  0x140034215
   1400341a7:	(bad)  
   1400341a8:	sti    
   1400341a9:	(bad)  [rsi-0x1]
   1400341ac:	not    ebx
   1400341ae:	pop    rdi
   1400341af:	push   rbp
   1400341b1:	int3   
   1400341b2:	pop    rax
   1400341b3:	push   rbx
   1400341b5:	(bad)
   1400341b8:	out    dx,eax
   1400341b9:	mov    ebp,0x9fd7ff4b
   1400341be:	cmp    dh,bl
   1400341c0:	test   al,0x6e
   1400341c2:	(bad)  
   1400341c3:	(bad)  
   1400341c4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400341c5:	ins    DWORD PTR es:[rdi],dx
   1400341c6:	sbb    al,0x25
   1400341c8:	add    BYTE PTR [rax],al
   1400341ca:	add    BYTE PTR [rax],al
   1400341cc:	(bad)  
   1400341cd:	mov    bl,0xf7
   1400341cf:	add    al,0x30
   1400341d1:	mov    al,0xfc
   1400341d3:	push   rdx
   1400341d4:	sub    esp,DWORD PTR [rcx+rsi*4+0x17]
   1400341d8:	add    BYTE PTR [rax],al
   1400341da:	push   rbp
   1400341db:	or     BYTE PTR [rax],al
   1400341dd:	add    BYTE PTR [rbp+0x1],dl
	...
   140034224:	mov    bh,0x79
   140034226:	and    DWORD PTR [rbx],esi
   140034228:	leave  
   140034229:	nop
   14003422a:	ss int3 
   14003422c:	std    
   14003422d:	out    dx,al
   14003422e:	mov    bh,dh
   140034230:	(bad)  
   140034231:	stc    
   140034232:	cwde   
   140034233:	(bad)  
   140034234:	(bad)  
   140034235:	stc    
   140034236:	sahf   
   140034237:	(bad)  
   140034238:	(bad)  
   140034239:	sti    
   14003423a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003423b:	(bad)  
   14003423c:	(bad)  
   14003423d:	cld    
   14003423e:	lods   al,BYTE PTR ds:[rsi]
   14003423f:	push   rbp
   140034241:	std    
   140034242:	mov    ecx,0xfcfcadff
   140034247:	jmp    FWORD PTR [rax-0x63000001]
   14003424d:	(bad)  
   14003424e:	(bad)  
   14003424f:	jmp    QWORD PTR [rsp+rbp*8-0x1]
   140034253:	inc    DWORD PTR [rcx-0x24]
   140034256:	(bad)  
   140034257:	push   QWORD PTR [rax]
   140034259:	(bad)  
   14003425a:	(bad)  
   14003425b:	jmp    FWORD PTR [rcx]
   14003425d:	sar    edi,0xff
   140034260:	es mov edx,0xba2dffff
   140034266:	(bad)  
   140034267:	inc    DWORD PTR [rdi-0x3e]
   14003426a:	sti    
   14003426b:	jmp    QWORD PTR [rdx-0xa002b27]
   140034271:	repnz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140034273:	(bad)  
   140034274:	clc    
   140034275:	imul   BYTE PTR [rax-0x56060401]
   14003427b:	(bad)  
   14003427c:	(bad)  
   14003427d:	cli    
   14003427e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003427f:	(bad)  
   140034280:	(bad)  
   140034281:	cli    
   140034282:	movabs ds:0x98f6ffff9ef8ffff,al
   14003428b:	(bad)  
   14003428c:	push   rsp
   14003428e:	xchg   ecx,eax
   14003428f:	(bad)  
   140034290:	push   rcx
   140034292:	mov    edi,edi
   140034294:	push   rax
   140034296:	test   bh,bh
   140034298:	(bad)  
   140034299:	in     al,dx
   14003429a:	jge    0x14003429b
   14003429c:	jmp    rdi
   14003429e:	jbe    0x14003429f
   1400342a0:	std    
   1400342a1:	loope  0x140034311
   1400342a3:	(bad)  
   1400342a4:	sti    
   1400342a5:	fisubr DWORD PTR [rax-0x1]
   1400342a8:	clc    
   1400342a9:	(bad)  
   1400342aa:	(bad)  
   1400342ab:	push   rsi
   1400342ad:	iret   
   1400342ae:	pop    rdx
   1400342af:	push   rsp
   1400342b1:	enter  0xff53,0xef
   1400342b5:	mov    esi,0xa5daff51
   1400342ba:	rex hlt 
   1400342bc:	stos   BYTE PTR es:[rdi],al
   1400342bd:	jb     0x1400342e0
   1400342bf:	int    0xa7
   1400342c1:	outs   dx,BYTE PTR ds:[rsi]
   1400342c2:	sbb    eax,0x3a
	...
   1400342cf:	add    BYTE PTR [rbx],ch
   1400342d1:	mov    al,0xfa
   1400342d3:	rex.W cmp al,0x97
   1400342d6:	in     al,0x35
   1400342d8:	add    BYTE PTR [rax],al
   1400342da:	push   rbp
   1400342db:	or     eax,DWORD PTR [rax]
   1400342dd:	add    BYTE PTR [rbp+0x3],dl
	...
   140034328:	mov    bh,0x79
   14003432a:	and    DWORD PTR [rip+0xffffffffcb3b93c9],edi        # 0x10b3ed6f9
   140034330:	cld    
   140034331:	in     eax,dx
   140034332:	mov    dh,dh
   140034334:	(bad)  
   140034335:	clc    
   140034336:	popf   
   140034337:	(bad)  
   140034338:	(bad)  
   140034339:	cli    
   14003433a:	sahf   
   14003433b:	(bad)  
   14003433c:	(bad)  
   14003433d:	cli    
   14003433e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003433f:	(bad)  
   140034340:	(bad)  
   140034341:	cld    
   140034342:	lods   al,BYTE PTR ds:[rsi]
   140034343:	push   rsi
   140034345:	cld    
   140034346:	mov    eax,0xf8fbb4ff
   14003434b:	jmp    FWORD PTR [rdx-0x60000001]
   140034351:	(bad)  
   140034352:	(bad)  
   140034353:	push   QWORD PTR [rcx-0xe]
   140034356:	(bad)  
   140034357:	inc    DWORD PTR [rdi-0x21]
   14003435a:	(bad)  
   14003435b:	push   QWORD PTR [rbx]
   14003435d:	sar    edi,1
   14003435f:	jmp    FWORD PTR [rdi+rax*8]
   140034362:	(bad)  
   140034363:	jmp    QWORD PTR [rdi]
   140034365:	mov    esp,0xb92affff
   14003436a:	(bad)  
   14003436b:	(bad)  
   14003436c:	cmp    al,0xbf
   14003436e:	std    
   14003436f:	(bad)  
   140034370:	jle    0x140034343
   140034372:	(bad)  
   140034373:	jmp    rdi
   140034375:	jmp    0x14003431e
   140034377:	push   rsi
   140034379:	repz movabs al,ds:0x9ff6fdffa0f5faff
   140034383:	(bad)  
   140034384:	(bad)  
   140034385:	neg    DWORD PTR [rcx-0x6d090001]
   14003438b:	(bad)  
   14003438c:	push   rdx
   14003438e:	mov    edi,edi
   140034390:	push   rcx
   140034392:	test   bh,bh
   140034394:	(bad)  
   140034395:	in     al,dx
   140034396:	jl     0x140034397
   140034398:	jmp    rdi
   14003439a:	jbe    0x14003439b
   14003439c:	std    
   14003439d:	loop   0x14003440c
   14003439f:	(bad)  
   1400343a0:	cld    
   1400343a1:	frstor [rsi-0x1]
   1400343a4:	clc    
   1400343a5:	xlat   BYTE PTR ds:[rbx]
   1400343a6:	(bad)  
   1400343a7:	push   rsi
   1400343a9:	rcr    BYTE PTR [rdi+rdi*8-0xd],1
   1400343ad:	enter  0xff58,0xef
   1400343b1:	mov    edi,0xa5d7ff53
   1400343b6:	rex.XB
   1400343b7:	repnz lods al,BYTE PTR ds:[rsi]
   1400343b9:	je     0x1400343dd
   1400343bb:	int    0xa8
   1400343bd:	outs   dx,BYTE PTR ds:[rsi]
   1400343be:	sbb    eax,0x3d
	...
   1400343cf:	add    BYTE PTR [rdi],ch
   1400343d1:	mov    al,0xf9
   1400343d3:	cmp    al,0x38
   1400343d5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400343d6:	icebp  
   1400343d7:	pop    rcx
   1400343d8:	add    BYTE PTR [rax],al
   1400343da:	push   rbp
   1400343db:	or     eax,0x4550000
	...
   14003442c:	mov    bh,0x79
   14003442e:	and    DWORD PTR [rbx],esi
   140034430:	mov    esi,0xf6c02f85
   140034435:	fild   DWORD PTR [rdx-0x5e07000f]
   14003443b:	(bad)  
   14003443c:	(bad)  
   14003443d:	clc    
   14003443e:	lahf   
   14003443f:	(bad)  
   140034440:	(bad)  
   140034441:	cli    
   140034442:	movabs ds:0xb2fbfaffa7fcffff,eax
   14003444b:	inc    esp
   14003444d:	cli    
   14003444e:	in     eax,0xff
   140034450:	stos   BYTE PTR es:[rdi],al
   140034451:	(bad)  
   140034452:	(bad)  
   140034453:	jmp    QWORD PTR [rbx-0x7e000001]
   140034459:	clc    
   14003445a:	(bad)  
   14003445b:	call   QWORD PTR [rax-0x1c]
   14003445e:	(bad)  
   14003445f:	push   QWORD PTR [rdi]
   140034461:	(bad)  
   140034462:	(bad)  
   140034463:	jmp    FWORD PTR [rdi]
   140034465:	enter  0xffff,0x29
   140034469:	mov    edi,0xb927ffff
   14003446e:	(bad)  
   14003446f:	push   QWORD PTR [rbx]
   140034471:	mov    ebp,0xca61fffe
   140034476:	idiv   bh
   140034478:	enter  0xb1e0,0xff
   14003447c:	repz in al,dx
   14003447e:	xchg   ebp,eax
   14003447f:	push   rdi
   140034481:	lock xchg esp,eax
   140034483:	(bad)  
   140034484:	cli    
   140034485:	repnz nop
   140034487:	(bad)  
   140034488:	(bad)  
   140034489:	repnz mov bh,bh
   14003448c:	push   rax
   14003448e:	cmp    edi,0xffffffff
   140034491:	in     al,dx
   140034492:	jge    0x140034493
   140034494:	jmp    rdi
   140034496:	jne    0x140034497
   140034498:	std    
   140034499:	loope  0x140034509
   14003449b:	(bad)  
   14003449c:	sti    
   14003449d:	fsub   QWORD PTR [rdi-0x1]
   1400344a0:	cli    
   1400344a1:	(bad)  
   1400344a2:	(bad)  
   1400344a3:	push   rsi
   1400344a5:	rcr    BYTE PTR [rdi-0x1],cl
   1400344a8:	hlt    
   1400344a9:	retf   0xff59
   1400344ac:	in     al,dx
   1400344ad:	ret    0xff58
   1400344b0:	(bad)  
   1400344b1:	movabs al,ds:0x6fa9c12173adee45
   1400344ba:	sbb    eax,0x33
	...
   1400344cf:	add    BYTE PTR [rdx],dh
   1400344d1:	lods   eax,DWORD PTR ds:[rsi]
   1400344d2:	imul   BYTE PTR [rbx]
   1400344d4:	xor    al,0xa9
   1400344d6:	clc    
   1400344d7:	jae    0x1400344d9
   1400344d9:	add    BYTE PTR [rbp+0xf],dl
   1400344dc:	add    BYTE PTR [rax],al
   1400344de:	push   rbp
   1400344df:	add    eax,0x0
	...
   140034530:	mov    bh,0x79
   140034532:	and    DWORD PTR [rdi],edx
   140034534:	mov    dh,0x7a
   140034536:	and    dl,BYTE PTR [rdi-0x168e3c15]
   14003453c:	(bad)  
   14003453d:	mul    BYTE PTR [rax-0x60070003]
   140034543:	(bad)  
   140034544:	(bad)  
   140034545:	cli    
   140034546:	lahf   
   140034547:	(bad)  
   140034548:	(bad)  
   140034549:	sti    
   14003454a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14003454b:	(bad)  
   14003454c:	(bad)  
   14003454d:	cld    
   14003454e:	stos   BYTE PTR es:[rdi],al
   14003454f:	(bad)  
   140034550:	fsincos 
   140034552:	int    0xff
   140034554:	test   al,0xfd
   140034556:	(bad)  
   140034557:	jmp    QWORD PTR [rsi-0x6e000001]
   14003455d:	(bad)  
   14003455e:	(bad)  
   14003455f:	jmp    QWORD PTR [rax-0x17]
   140034562:	(bad)  
   140034563:	inc    DWORD PTR [rax-0x26]
   140034566:	(bad)  
   140034567:	push   QWORD PTR [rax]
   140034569:	int    0xff
   14003456b:	jmp    FWORD PTR [rdx]
   14003456d:	sar    edi,0xff
   140034570:	(bad)  
   140034571:	mov    edx,0xba2dffff
   140034576:	(bad)  
   140034577:	inc    DWORD PTR [rbp-0x3e]
   14003457a:	cld    
   14003457b:	call   QWORD PTR [rbx-0x16002c2c]
   140034581:	loope  0x14003450e
   140034583:	push   rbx
   140034585:	out    0x82,al
   140034587:	(bad)  
   140034588:	clc    
   140034589:	jmp    0x12a00450b
   14003458e:	ja     0x14003458f
   140034590:	std    
   140034591:	out    0x74,al
   140034593:	(bad)  
   140034594:	cld    
   140034595:	loope  0x140034602
   140034597:	(bad)  
   140034598:	sti    
   140034599:	(bad)  [rsi-0x1]
   14003459c:	stc    
   14003459d:	(bad)  
   14003459e:	(bad)  
   14003459f:	push   rsi
   1400345a1:	iret   
   1400345a2:	(bad)  
   1400345a3:	push   rcx
   1400345a5:	retf   0xff5f
   1400345a8:	jmp    0x10b00a36c
   1400345ad:	xchg   edi,eax
   1400345ae:	rex.R out 0xab,eax
   1400345b1:	jno    0x1400345d2
   1400345b3:	test   eax,0x1d1d70aa
	...
   1400345d0:	xor    al,0xaa
   1400345d2:	hlt    
   1400345d3:	and    esi,DWORD PTR [rcx]
   1400345d5:	test   eax,0x90fa
   1400345da:	push   rbp
   1400345db:	adc    BYTE PTR [rax],al
   1400345dd:	add    BYTE PTR [rbp+0x6],dl
	...
   140034634:	mov    bh,0x79
   140034636:	and    DWORD PTR [rdx],eax
   140034638:	mov    bh,0x79
   14003463a:	and    DWORD PTR [rax+rcx*8-0x6f],esp
   14003463e:	(bad)  
   14003463f:	(bad)  
   140034640:	neg    edi
   140034642:	mov    esp,?
   140034644:	push   rdi
   140034646:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140034647:	(bad)  
   140034648:	(bad)  
   140034649:	stc    
   14003464a:	movabs ds:0xa7fcffffa4faffff,eax
   140034653:	(bad)  
   140034654:	in     eax,dx
   140034655:	std    
   140034656:	mov    ecx,0xf8fbb0ff
   14003465b:	jmp    FWORD PTR [rdx-0x60000001]
   140034661:	(bad)  
   140034662:	(bad)  
   140034663:	push   QWORD PTR [rdx-0xf]
   140034666:	(bad)  
   140034667:	dec    DWORD PTR [rdx-0x21]
   14003466a:	(bad)  
   14003466b:	push   QWORD PTR [rsi]
   14003466d:	sar    bh,cl
   14003466f:	jmp    FWORD PTR [rdi+rax*8]
   140034672:	(bad)  
   140034673:	jmp    FWORD PTR [rcx]
   140034675:	mov    ebp,0xba2affff
   14003467a:	(bad)  
   14003467b:	push   QWORD PTR [rsi]
   14003467d:	mov    edi,0xcb63fffe
   140034682:	hlt    
   140034683:	(bad)  
   140034684:	mov    esi,0xf0ffa2d3
   140034689:	fidiv  DWORD PTR [rax-0x1]
   14003468c:	repnz fisubr DWORD PTR [rsi-0x1]
   140034690:	neg    cl
   140034692:	imul   edi,edi,0xfffffff9
   140034695:	fldenv [rdi-0x1]
   140034698:	not    esp
   14003469a:	fs push rsi
   14003469d:	shl    DWORD PTR [rdi+rdi*8-0x11],1
   1400346a1:	enter  0xff68,0xd6
   1400346a5:	test   al,0x52
   1400346a7:	out    dx,al
   1400346a8:	mov    cl,0x78
   1400346aa:	(bad)  
   1400346ab:	int    0xac
   1400346ad:	jno    0x1400346cd
   1400346af:	push   0xffffffffffffffab
   1400346b1:	jo     0x1400346d1
   1400346b3:	add    eax,0x0
	...
   1400346d0:	xor    ebp,DWORD PTR [rax-0x56d0d30d]
   1400346d6:	cli    
   1400346d7:	movabs al,ds:0x65500001575210f
	...
   14003473c:	mov    bh,0x79
   14003473e:	and    DWORD PTR [rsi+rsi*4],ebp
   140034741:	jns    0x140034764
   140034743:	xchg   ebp,eax
   140034744:	shl    DWORD PTR [rcx-0x200a25b1],1
   14003474a:	mov    ebx,?
   14003474c:	(bad)  
   14003474d:	clc    
   14003474e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003474f:	(bad)  
   140034750:	(bad)  
   140034751:	cli    
   140034752:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140034753:	(bad)  
   140034754:	(bad)  
   140034755:	cli    
   140034756:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140034757:	(bad)  
   140034758:	stc    
   140034759:	cld    
   14003475a:	scas   al,BYTE PTR es:[rdi]
   14003475b:	call   rbx
   14003475d:	sti    
   14003475e:	sar    edi,1
   140034760:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140034761:	cld    
   140034762:	(bad)  
   140034763:	jmp    QWORD PTR [rbp-0x75000002]
   140034769:	clc    
   14003476a:	(bad)  
   14003476b:	call   FWORD PTR [rbx-0x19]
   14003476e:	(bad)  
   14003476f:	(bad)  
   140034770:	ds fdivr st,st(7)
   140034773:	jmp    FWORD PTR [rdi]
   140034775:	retf   
   140034776:	(bad)  
   140034777:	jmp    FWORD PTR [rdx]
   140034779:	sar    edi,0xff
   14003477c:	sub    bh,BYTE PTR [rbp-0x43d00001]
   140034782:	(bad)  
   140034783:	inc    DWORD PTR [rbx-0x3e]
   140034786:	sti    
   140034787:	inc    DWORD PTR [rsi-0x2d002b33]
   14003478d:	leave  
   14003478e:	jg     0x14003478f
   140034790:	call   0x12c02af60
   140034795:	retf   
   140034796:	push   0x6ac8eaff
   14003479b:	call   rsi
   14003479d:	test   eax,0x81b7f059
   1400347a2:	xor    eax,ebx
   1400347a4:	lods   al,BYTE PTR ds:[rsi]
   1400347a5:	jb     0x1400347c5
   1400347a7:	(bad)  
   1400347a8:	lods   al,BYTE PTR ds:[rsi]
   1400347a9:	jno    0x1400347c9
   1400347ab:	and    BYTE PTR [rax],al
	...
   1400347cd:	add    BYTE PTR [rax],al
   1400347cf:	add    BYTE PTR [rdi],ch
   1400347d1:	stos   DWORD PTR es:[rdi],eax
   1400347d2:	not    DWORD PTR [rcx+0x30]
   1400347d5:	test   eax,0xb2fa
   1400347da:	push   rbp
   1400347db:	adc    DWORD PTR [rax],eax
   1400347dd:	add    BYTE PTR [rbp+0x5],dl
	...
   140034844:	mov    dh,0x79
   140034846:	and    DWORD PTR [rsi+rsi*4],ebp
   140034849:	jns    0x14003486c
   14003484b:	mov    ebp,ecx
   14003484d:	(bad)  
   14003484e:	rex.W xlat BYTE PTR ds:[rbx]
   140034850:	out    dx,eax
   140034851:	iret   
   140034852:	(bad)  
   140034853:	out    dx,eax
   140034854:	cld    
   140034855:	repz movabs ds:0xabfaffffaaf8fefa,eax
   14003485f:	(bad)  
   140034860:	out    dx,al
   140034861:	cld    
   140034862:	mov    ecx,0xedf8b5ff
   140034867:	jmp    FWORD PTR [rax-0x64000002]
   14003486d:	std    
   14003486e:	(bad)  
   14003486f:	push   QWORD PTR [rbx-0x10]
   140034872:	(bad)  
   140034873:	dec    DWORD PTR [rdi-0x22]
   140034876:	(bad)  
   140034877:	push   QWORD PTR [rsi]
   140034879:	sar    dh,1
   14003487b:	jmp    FWORD PTR [rax*8-0x41d50002]
   140034882:	(bad)  
   140034883:	jmp    FWORD PTR [rcx]
   140034885:	mov    ebx,0xbd32fffe
   14003488a:	std    
   14003488b:	dec    DWORD PTR [rbx+rax*8-0x8]
   14003488f:	inc    DWORD PTR [rsp+rdi*4-0x6a540337]
   140034896:	(bad)  
   140034897:	jmp    0x140034838
   140034899:	jo     0x1400348c9
   14003489b:	fisttp DWORD PTR [rdi+0x6c932160]
   1400348a1:	xor    rsi,QWORD PTR [r11]
   1400348a4:	or     ecx,DWORD PTR [rbx]
   1400348a6:	pop    rcx
   1400348a7:	or     eax,0x6550000
   1400348ac:	add    BYTE PTR [rax],al
   1400348ae:	push   rbp
   1400348af:	add    al,BYTE PTR [rax]
	...
   1400348c9:	add    BYTE PTR [rbp+0x1],dl
   1400348cc:	add    BYTE PTR [rax],al
   1400348ce:	push   rdx
   1400348cf:	(bad)  
   1400348d0:	sub    esi,DWORD PTR [rcx-0x57cc6704]
   1400348d6:	div    DWORD PTR [rax+rax*1+0x105500]
   1400348dd:	add    BYTE PTR [rbp+0x4],dl
	...
   14003494c:	mov    bh,0x7b
   14003494e:	and    esp,DWORD PTR [rax+rdi*4]
   140034951:	jp     0x140034975
   140034953:	ins    BYTE PTR es:[rdi],dx
   140034954:	mov    eax,0xccb1267d
   140034959:	cdq    
   14003495a:	rex.WX (bad) 
   14003495c:	loop   0x14003491b
   14003495e:	jno    0x140034947
   140034960:	cmc    
   140034961:	(bad)  [rsi-0x5e15070e]
   140034967:	stc    
   140034968:	jmp    0xf0ff0260
   14003496d:	clc    
   14003496e:	clc    
   14003496f:	jmp    QWORD PTR [rcx-0x70000105]
   140034975:	clc    
   140034976:	(bad)  
   140034977:	jmp    QWORD PTR [rbp-0x1a]
   14003497a:	(bad)  
   14003497b:	inc    DWORD PTR [rsi-0x28]
   14003497e:	(bad)  
   14003497f:	push   QWORD PTR [rbx]
   140034981:	int3   
   140034982:	std    
   140034983:	jmp    FWORD PTR [rbx]
   140034985:	sar    ebp,0xff
   140034988:	sub    bh,BYTE PTR [rbx-0x46d30004]
   14003498e:	cli    
   14003498f:	push   QWORD PTR [rbx]
   140034991:	mov    ebx,0xc04afefb
   140034996:	clc    
   140034997:	cmc    
   140034998:	pop    rax
   140034999:	mov    dh,0xe9
   14003499b:	mov    eax,0x59ad6a35
   1400349a0:	(bad)  
   1400349a1:	(bad)  
   1400349a2:	push   rdi
   1400349a3:	xor    al,0x0
   1400349a5:	add    BYTE PTR [rbp+0x2b],dl
   1400349a8:	add    BYTE PTR [rax],al
   1400349aa:	push   rbp
   1400349ab:	and    BYTE PTR [rax],al
   1400349ad:	add    BYTE PTR [rbp+0x15],dl
   1400349b0:	add    BYTE PTR [rax],al
   1400349b2:	push   rbp
   1400349b3:	or     eax,0xa550000
   1400349b8:	add    BYTE PTR [rax],al
   1400349ba:	push   rbp
   1400349bb:	(bad)  
   1400349bc:	add    BYTE PTR [rax],al
   1400349be:	push   rbp
   1400349bf:	(bad)  
   1400349c0:	add    BYTE PTR [rax],al
   1400349c2:	push   rbp
   1400349c3:	(bad)  
   1400349c4:	add    BYTE PTR [rax],al
   1400349c6:	push   rbp
   1400349c7:	or     BYTE PTR [rax],al
   1400349c9:	add    BYTE PTR [rbp+0xb],dl
   1400349cc:	xor    al,0xa0
   1400349ce:	jmp    0x140034a20
   1400349d0:	(bad)  
   1400349d1:	scas   eax,DWORD PTR es:[rdi]
   1400349d2:	call   rbp
   1400349d4:	cmp    ah,BYTE PTR [rdx+0x8ff0]
   1400349da:	push   rbp
   1400349db:	or     eax,DWORD PTR [rax]
   1400349dd:	add    BYTE PTR [rbp+0x2],dl
	...
   140034a58:	mov    edx,0xbb202a81
   140034a5d:	sub    DWORD PTR [rip+0x3388bf50],0x7f        # 0x1738c09b4
   140034a64:	ror    DWORD PTR [rdi-0x693a5dc5],0x43
   140034a6b:	mov    bh,0xc9
   140034a6d:	popf   
   140034a6e:	rex.WXB (bad) 
   140034a70:	mov    edx,0x95df73b1
   140034a75:	jrcxz  0x140034a62
   140034a77:	neg    BYTE PTR [rdx-0x7f010408]
   140034a7d:	icebp  
   140034a7e:	cld    
   140034a7f:	(bad)  
   140034a80:	pop    rsi
   140034a81:	loopne 0x140034a7e
   140034a83:	inc    BYTE PTR [rbx+rdx*8-0x4]
   140034a87:	std    
   140034a88:	xor    cl,cl
   140034a8a:	cld    
   140034a8b:	cld    
   140034a8c:	sub    eax,eax
   140034a8e:	std    
   140034a8f:	stc    
   140034a90:	sub    edi,DWORD PTR [rsi-0x41d20802]
   140034a96:	(bad)  
   140034a97:	cmc    
   140034a98:	xor    al,al
   140034a9a:	push   rdx
   140034a9c:	rex.XB ret 0xeefc
   140034aa0:	rex.WRXB movabs r14,0x401e80d69544c1f5
   140034aaa:	mov    cl,BYTE PTR [rax+rax*1+0x0]
   140034aae:	push   rbp
   140034aaf:	xor    al,0x0
   140034ab1:	add    BYTE PTR [rbp+0x2b],dl
   140034ab4:	add    BYTE PTR [rax],al
   140034ab6:	push   rbp
   140034ab7:	and    eax,DWORD PTR [rax]
   140034ab9:	add    BYTE PTR [rbp+0x1c],dl
   140034abc:	add    BYTE PTR [rax],al
   140034abe:	push   rbp
   140034abf:	sbb    DWORD PTR [rax],eax
   140034ac1:	add    BYTE PTR [rbp+0x19],dl
   140034ac4:	add    BYTE PTR [rax],al
   140034ac6:	push   rbx
   140034ac7:	sbb    bh,BYTE PTR [rsp+rbp*4]
   140034aca:	icebp  
   140034acb:	je     0x140034af8
   140034acd:	mov    bh,0xff
   140034acf:	xlat   BYTE PTR ds:[rbx]
   140034ad0:	sub    DWORD PTR [rbp-0x73c42403],ebp
   140034ad6:	xlat   BYTE PTR ds:[rbx]
   140034ad7:	rex.RX add BYTE PTR [rax],r8b
   140034ada:	push   rbp
   140034adb:	(bad)  
	...
   140034b74:	push   0xffffffff8001fdff
   140034b79:	jmp    0x133907e78
   140034b7e:	std    
   140034b7f:	mov    bh,0x99
   140034b81:	sti    
   140034b82:	(bad)  
   140034b83:	in     eax,dx
   140034b84:	xor    ebx,0xfffffffe
   140034b87:	cmc    
   140034b88:	(bad)  
   140034b89:	out    0xff,al
   140034b8b:	hlt    
   140034b8c:	rex.WX (bad) 
   140034b8f:	repz cmp cl,bh
   140034b92:	push   rcx
   140034b94:	(bad)  
   140034b95:	(bad)  
   140034b96:	(bad)  
   140034b97:	in     eax,dx
   140034b98:	sub    eax,0x2cebffc1
   140034b9d:	sar    bh,0xe8
   140034ba0:	(bad)  
   140034ba1:	sar    bh,0xe6
   140034ba4:	xor    eax,0x42e5fec1
   140034ba9:	(bad)  
   140034baa:	cld    
   140034bab:	in     al,0x48
   140034bad:	mov    edi,0xb64ac5f7
   140034bb2:	icebp  
   140034bb3:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140034bb4:	rex.WX mov al,0xec
   140034bb7:	xchg   edx,eax
   140034bb8:	rex.RB cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140034bba:	out    0x7f,eax
   140034bbc:	rex.WB mov r9b,0xef
   140034bbf:	mov    es,WORD PTR [rbp-0x45]
   140034bc2:	mul    BYTE PTR [rsi-0x300341c8]
   140034bc8:	sub    bh,BYTE PTR [rcx-0x4dd91f01]
   140034bce:	jmp    rax
   140034bd0:	cmp    eax,0xaef5ac
   140034bd5:	add    BYTE PTR [rbp+0xa],dl
   140034bd8:	add    BYTE PTR [rax],al
   140034bda:	push   rbp
   140034bdb:	add    al,BYTE PTR [rax]
	...
   140034c79:	add    BYTE PTR [rax],al
   140034c7b:	add    BYTE PTR [rax-0x1],ch
   140034c7e:	std    
   140034c7f:	add    DWORD PTR [rbp-0x7bea020e],ecx
   140034c85:	out    dx,eax
   140034c86:	std    
   140034c87:	lea    ecx,[rdi-0x7b300007]
   140034c8d:	idiv   bh
   140034c8f:	jmp    0x140034cf3
   140034c91:	call   0x11c543695
   140034c96:	(bad)  
   140034c97:	call   0x1280321df
   140034c9c:	(bad)  
   140034c9d:	int    0xff
   140034c9f:	out    0x31,al
   140034ca1:	(bad)  
   140034ca2:	jmp    rbp
   140034ca4:	xor    bl,al
   140034ca6:	jmp    rsp
   140034ca8:	(bad)  
   140034ca9:	sar    edi,0xe4
   140034cac:	(bad)  
   140034cad:	ret    
   140034cae:	jmp    rsp
   140034cb0:	xor    cl,al
   140034cb2:	jmp    rsp
   140034cb4:	xor    ecx,eax
   140034cb6:	jmp    rsp
   140034cb8:	xor    al,bl
   140034cba:	jmp    rbx
   140034cbc:	xor    bl,al
   140034cbe:	jmp    rbx
   140034cc0:	(bad)  
   140034cc1:	mov    edi,0xba2ce3ff
   140034cc6:	jmp    rbx
   140034cc8:	sub    DWORD PTR [rsi-0x4ac61d01],esi
   140034cce:	cli    
   140034ccf:	int3   
   140034cd0:	xor    eax,0x1fc37a
   140034cd5:	add    BYTE PTR [rbp+0x3],dl
	...
   140034d88:	addr32 (bad) 
   140034d8a:	std    
   140034d8b:	add    DWORD PTR [rdi-0x12],edi
   140034d8e:	cld    
   140034d8f:	sub    al,0x7d
   140034d91:	out    dx,al
   140034d92:	std    
   140034d93:	xchg   edx,eax
   140034d94:	jge    0x140034d87
   140034d96:	inc    dh
   140034d98:	jo     0x140034d87
   140034d9a:	jmp    rsp
   140034d9c:	pop    rbx
   140034d9d:	in     al,0xff
   140034d9f:	in     eax,0x4a
   140034da1:	(bad)  
   140034da3:	in     eax,0x43
   140034da5:	(bad)  
   140034da6:	jmp    rbp
   140034da8:	cmp    al,0xcf
   140034daa:	jmp    rsp
   140034dac:	(bad)  
   140034dad:	retf   
   140034dae:	jmp    rsp
   140034db0:	xor    al,0xca
   140034db2:	jmp    rsp
   140034db4:	xor    ecx,eax
   140034db6:	jmp    rsp
   140034db8:	xor    eax,edi
   140034dba:	jmp    rsp
   140034dbc:	xor    esp,eax
   140034dbe:	jmp    rsp
   140034dc0:	xor    cl,al
   140034dc2:	jmp    rsp
   140034dc4:	xor    bh,BYTE PTR [rdi-0x44be1b02]
   140034dca:	stc    
   140034dcb:	mov    bl,0x3f
   140034dcd:	nop
   140034dce:	xlat   BYTE PTR ds:[rbx]
   140034dcf:	(bad)  
   140034dd0:	add    BYTE PTR [rax],al
   140034dd2:	push   rbp
   140034dd3:	add    al,BYTE PTR [rax]
	...
   140034e91:	add    BYTE PTR [rax],al
   140034e93:	add    BYTE PTR [rsi-0x1],ah
   140034e96:	std    
   140034e97:	add    DWORD PTR [rbp-0xb],edi
   140034e9a:	std    
   140034e9b:	or     eax,0x57fce36e
   140034ea0:	imul   esp,ebx,0xfffffffd
   140034ea3:	xchg   edx,eax
   140034ea4:	vreducesd xmm19{k1}{z},xmm0,xmm7,{sae},0xfe
   140034eab:	int3   
   140034eac:	rex.WRB (bad) 
   140034eaf:	leave  
   140034eb0:	rex.RB (bad) 
   140034eb2:	(bad)  
   140034eb3:	loop   0x140034ef8
   140034eb5:	sar    esi,cl
   140034eb7:	in     eax,0x41
   140034eb9:	sar    dh,1
   140034ebb:	(bad)  
   140034ebc:	rex.RX int3 
   140034ebe:	cld    
   140034ebf:	ror    DWORD PTR [rdx-0x3d],0xfa
   140034ec3:	xchg   esp,eax
   140034ec4:	rex.W lods al,BYTE PTR ds:[rsi]
   140034ec6:	in     al,dx
   140034ec7:	add    BYTE PTR ds:[rax],al
   140034eca:	push   rbp
   140034ecb:	add    eax,DWORD PTR [rax]
	...
   140034fa5:	add    BYTE PTR [rax],al
   140034fa7:	add    BYTE PTR [rdi-0x1],ah
   140034faa:	std    
   140034fab:	add    DWORD PTR [rsi-0x1],esp
   140034fae:	std    
   140034faf:	add    DWORD PTR [rbp-0x1],esp
   140034fb2:	std    
   140034fb3:	add    ah,BYTE PTR [rbp-0x1]
   140034fb6:	std    
   140034fb7:	add    al,BYTE PTR [rax]
	...
   1400351e5:	add    BYTE PTR [rax],al
   1400351e7:	add    bh,bh
   1400351e9:	(bad)  
   1400351ea:	(bad)  
   1400351eb:	(bad)  
   1400351ec:	(bad)  
   1400351ed:	(bad)  
   1400351ee:	(bad)  
   1400351ef:	(bad)  
   1400351f0:	(bad)  
   1400351f1:	(bad)  
   1400351f2:	(bad)  
   1400351f3:	(bad)  
   1400351f4:	(bad)  
   1400351f5:	(bad)  
   1400351f6:	(bad)  
   1400351f7:	(bad)  
   1400351f8:	(bad)  
   1400351f9:	(bad)  
   1400351fa:	(bad)  
   1400351fb:	(bad)  
   1400351fc:	(bad)  
   1400351fd:	(bad)  
   1400351fe:	(bad)  
   1400351ff:	(bad)  
   140035200:	inc    DWORD PTR [rax]
   140035202:	(bad)  
   140035203:	(bad)  
   140035204:	(bad)  
   140035205:	(bad)  
   140035206:	(bad)  
   140035207:	(bad)  
   140035208:	inc    BYTE PTR [rax]
   14003520a:	(bad)  
   14003520b:	(bad)  
   14003520c:	(bad)  
   14003520d:	(bad)  
   14003520e:	(bad)  
   14003520f:	(bad)  
   140035210:	clc    
   140035211:	add    BYTE PTR [rcx],al
   140035213:	(bad)  
   140035214:	(bad)  
   140035215:	(bad)  
   140035216:	(bad)  
   140035217:	jmp    rax
   140035219:	add    BYTE PTR [rax],al
   14003521b:	jo     0x14003521d
   14003521d:	(bad)  
   14003521e:	(bad)  
   14003521f:	inc    eax
   140035221:	add    BYTE PTR [rax],al
   140035223:	add    BYTE PTR [rax],al
   140035225:	add    edi,edi
   140035227:	inc    DWORD PTR [rax+0xe00f]
   14003522d:	add    bh,bh
   14003522f:	inc    DWORD PTR [rax+0xf01f]
   140035235:	add    BYTE PTR [rdi],bh
   140035237:	inc    DWORD PTR [rax]
   140035239:	(bad)  
   14003523a:	loopne 0x14003523c
   14003523c:	add    BYTE PTR [rax],al
   14003523e:	(bad)  
   14003523f:	inc    DWORD PTR [rax]
   140035241:	(bad)  
   140035242:	rol    BYTE PTR [rax],0x0
   140035245:	add    BYTE PTR [rdi],al
   140035247:	inc    DWORD PTR [rax]
   140035249:	(bad)  
   14003524a:	add    BYTE PTR [rax],0x0
   14003524d:	add    BYTE PTR [rbx],al
   14003524f:	inc    DWORD PTR [rax]
   140035251:	(bad)  
   140035252:	add    BYTE PTR [rax],al
   140035254:	add    BYTE PTR [rax],al
   140035256:	add    edi,edi
   140035258:	add    BYTE PTR [rsi],bl
   14003525a:	add    BYTE PTR [rax],al
   14003525c:	add    BYTE PTR [rax],al
   14003525e:	add    bh,bh
   140035260:	add    BYTE PTR [rax+rax*1],bl
   140035263:	add    BYTE PTR [rax],al
   140035265:	add    BYTE PTR [rax],al
   140035267:	inc    DWORD PTR [rax]
   140035269:	sbb    BYTE PTR [rax],al
   14003526b:	add    BYTE PTR [rax],al
   14003526d:	add    BYTE PTR [rax],al
   14003526f:	jg     0x140035271
   140035271:	or     BYTE PTR [rax],al
   140035273:	add    BYTE PTR [rax],ah
   140035275:	add    BYTE PTR [rax],al
   140035277:	(bad)  
   140035278:	add    BYTE PTR [rax],al
   14003527a:	add    BYTE PTR [rcx],al
   14003527c:	inc    BYTE PTR [rax]
   14003527e:	add    BYTE PTR [rdi],bh
   140035280:	add    BYTE PTR [rax],al
   140035282:	add    BYTE PTR [rdi],al
   140035284:	inc    DWORD PTR [rax+0x801f00]
   14003528a:	add    BYTE PTR [rdi],cl
   14003528c:	jmp    rax
   14003528e:	add    BYTE PTR [rdi],bl
   140035290:	add    BYTE PTR [rax],0x0
   140035293:	(bad)  
   140035294:	push   rax
   140035296:	add    BYTE PTR [rdi],cl
   140035298:	rol    BYTE PTR [rax],0x0
   14003529b:	(bad)  
   14003529c:	push   rax
   14003529e:	add    BYTE PTR [rdi],cl
   1400352a0:	rol    BYTE PTR [rax],0x0
   1400352a3:	jg     0x1400352a4
   1400352a5:	(bad)  
   1400352a6:	(bad)  
   1400352a7:	jmp    rax
   1400352a9:	add    BYTE PTR [rax],al
   1400352ab:	jg     0x1400352ac
   1400352ad:	(bad)  
   1400352ae:	(bad)  
   1400352af:	jmp    rax
   1400352b1:	add    BYTE PTR [rax],al
   1400352b3:	jg     0x1400352b4
   1400352b5:	(bad)  
   1400352b6:	(bad)  
   1400352b7:	jmp    rax
   1400352b9:	add    BYTE PTR [rax],al
   1400352bb:	jg     0x1400352bc
   1400352bd:	(bad)  
   1400352be:	(bad)  
   1400352bf:	push   rax
   1400352c1:	add    BYTE PTR [rax],al
   1400352c3:	add    BYTE PTR [rax],al
   1400352c5:	add    BYTE PTR [rax],al
   1400352c7:	(bad)  
   1400352c8:	clc    
   1400352c9:	add    BYTE PTR [rax],al
   1400352cb:	add    BYTE PTR [rax],al
   1400352cd:	add    BYTE PTR [rax],al
   1400352cf:	(bad)  
   1400352d0:	clc    
   1400352d1:	add    BYTE PTR [rax],al
   1400352d3:	add    BYTE PTR [rax],al
   1400352d5:	add    BYTE PTR [rax],al
   1400352d7:	(bad)  
   1400352d8:	cld    
   1400352d9:	add    BYTE PTR [rax],al
   1400352db:	add    BYTE PTR [rax],al
   1400352dd:	add    BYTE PTR [rax],al
   1400352df:	(bad)  
   1400352e0:	inc    BYTE PTR [rax]
   1400352e2:	add    BYTE PTR [rax],al
   1400352e4:	add    BYTE PTR [rax],al
   1400352e6:	add    BYTE PTR [rdi],al
   1400352e8:	inc    BYTE PTR [rax]
   1400352ea:	add    BYTE PTR [rax],al
   1400352ec:	add    BYTE PTR [rax],al
   1400352ee:	add    BYTE PTR [rdi],al
   1400352f0:	inc    DWORD PTR [rax]
   1400352f2:	add    BYTE PTR [rax],al
   1400352f4:	add    BYTE PTR [rax],al
   1400352f6:	add    BYTE PTR [rdi],al
   1400352f8:	inc    DWORD PTR [rax+0x0]
   1400352fe:	add    BYTE PTR [rdi],al
   140035300:	inc    DWORD PTR [rax-0x7008100]
   140035306:	add    BYTE PTR [rdi],al
   140035308:	inc    DWORD PTR [rax-0x7008100]
   14003530e:	add    BYTE PTR [rdi],al
   140035310:	inc    DWORD PTR [rax-0x700c100]
   140035316:	add    BYTE PTR [rdi],al
   140035318:	inc    eax
   14003531a:	add    BYTE PTR [rdi],bl
   14003531c:	push   rax
   14003531e:	add    BYTE PTR [rdi],al
   140035320:	inc    eax
   140035322:	add    BYTE PTR [rdi],cl
   140035324:	push   rax
   140035326:	add    BYTE PTR [rdi],cl
   140035328:	inc    eax
   14003532a:	add    BYTE PTR [rdi],al
   14003532c:	jmp    rax
   14003532e:	add    BYTE PTR [rdi],cl
   140035330:	jmp    rax
   140035332:	add    BYTE PTR [rbx],al
   140035334:	inc    eax
   140035336:	add    BYTE PTR [rdi],cl
   140035338:	jmp    rax
   14003533a:	add    BYTE PTR [rcx],al
   14003533c:	inc    DWORD PTR [rax-0xf00f100]
   140035342:	add    BYTE PTR [rax],al
   140035344:	inc    BYTE PTR [rax]
   140035346:	add    BYTE PTR [rdi],cl
   140035348:	push   rax
   14003534a:	add    BYTE PTR [rax],al
   14003534c:	add    BYTE PTR [rax],al
   14003534e:	add    BYTE PTR [rdi],al
   140035350:	(bad)  
   140035351:	clc    
   140035352:	add    BYTE PTR [rax],al
   140035354:	add    BYTE PTR [rax],al
   140035356:	add    BYTE PTR [rdi],al
   140035358:	(bad)  
   140035359:	clc    
   14003535a:	add    BYTE PTR [rax],al
   14003535c:	add    BYTE PTR [rax],al
   14003535e:	add    BYTE PTR [rdi],al
   140035360:	(bad)  
   140035361:	cld    
   140035362:	add    BYTE PTR [rax],al
   140035364:	add    BYTE PTR [rax],al
   140035366:	add    BYTE PTR [rbx+0xfeff],al
   14003536c:	add    BYTE PTR [rax],al
   14003536e:	add    ebx,eax
   140035370:	(bad)  
   140035371:	inc    DWORD PTR [rax]
   140035373:	add    BYTE PTR [rax],al
   140035375:	add    BYTE PTR [rbx],al
   140035377:	ret    
   140035378:	(bad)  
   140035379:	inc    DWORD PTR [rax+0x7000000]
   14003537f:	ret    
   140035380:	(bad)  
   140035381:	inc    eax
   140035383:	add    BYTE PTR [rax],al
   140035385:	add    BYTE PTR [rdi],cl
   140035387:	ret    
   140035388:	(bad)  
   140035389:	jmp    rax
   14003538b:	add    BYTE PTR [rax],al
   14003538d:	add    BYTE PTR [rdi],bl
   14003538f:	ret    
   140035390:	(bad)  
   140035391:	(bad)  
   140035392:	clc    
   140035393:	add    BYTE PTR [rax],al
   140035395:	add    BYTE PTR [rdi-0x3d],bh
   140035398:	(bad)  
   140035399:	(bad)  
   14003539a:	inc    BYTE PTR [rax]
   14003539c:	add    BYTE PTR [rax],al
   14003539e:	(bad)  
   14003539f:	add    edi,edi
   1400353a1:	(bad)  
   1400353a2:	inc    DWORD PTR [rax+0x3000000]
   1400353a8:	(bad)  
   1400353a9:	(bad)  
   1400353aa:	push   rax
   1400353ac:	add    BYTE PTR [rax],al
   1400353ae:	add    BYTE PTR [rdi],al
   1400353b0:	(bad)  
   1400353b1:	(bad)  
   1400353b2:	(bad)  
   1400353b3:	jmp    rax
   1400353b5:	add    BYTE PTR [rax],al
   1400353b7:	(bad)  
   1400353b8:	(bad)  
   1400353b9:	(bad)  
   1400353ba:	(bad)  
   1400353bb:	(bad)  
   1400353bc:	clc    
   1400353bd:	add    BYTE PTR [rax],al
   1400353bf:	ud0    edi,edi
   1400353c2:	(bad)  
   1400353c3:	(bad)  
   1400353c4:	inc    DWORD PTR [rax]
   1400353c6:	add    BYTE PTR [rdi],bl
   1400353c8:	(bad)  
   1400353c9:	(bad)  
   1400353ca:	(bad)  
   1400353cb:	(bad)  
   1400353cc:	jmp    rax
   1400353ce:	add    BYTE PTR [rdi-0x1],bh
   1400353d1:	(bad)  
   1400353d2:	(bad)  
   1400353d3:	(bad)  
   1400353d4:	(bad)  
   1400353d5:	dec    DWORD PTR [rdi]
   1400353d7:	(bad)  
   1400353d8:	(bad)  
   1400353d9:	(bad)  
   1400353da:	(bad)  
   1400353db:	(bad)  
   1400353dc:	(bad)  
   1400353dd:	(bad)  
   1400353de:	(bad)  
   1400353df:	(bad)  
   1400353e0:	(bad)  
   1400353e1:	(bad)  
   1400353e2:	(bad)  
   1400353e3:	(bad)  
   1400353e4:	(bad)  
   1400353e5:	(bad)  
   1400353e6:	(bad)  
   1400353e7:	jmp    FWORD PTR [rax]
   1400353e9:	add    BYTE PTR [rax],al
   1400353eb:	add    BYTE PTR [rax],dh
   1400353ed:	add    BYTE PTR [rax],al
   1400353ef:	add    BYTE PTR [rax+0x0],ah
   1400353f2:	add    BYTE PTR [rax],al
   1400353f4:	add    DWORD PTR [rax],eax
   1400353f6:	and    BYTE PTR [rax],al
   1400353f8:	add    BYTE PTR [rax],al
   1400353fa:	add    BYTE PTR [rax],al
   1400353fc:	and    BYTE PTR [rip+0x0],0x0        # 0x140035403
	...
   1400354e3:	add    BYTE PTR [rax],al
   1400354e5:	add    BYTE PTR [rbp+0x2],dl
   1400354e8:	add    BYTE PTR [rax],al
   1400354ea:	push   rbp
   1400354eb:	add    eax,0xc550000
   1400354f0:	add    BYTE PTR [rax],al
   1400354f2:	push   rbp
   1400354f3:	(bad)  
   1400354f4:	add    BYTE PTR [rax],al
   1400354f6:	push   rbp
   1400354f7:	sldt   WORD PTR [rax]
   1400354fa:	push   rbp
   1400354fb:	(bad)  
   1400354fc:	add    BYTE PTR [rax],al
   1400354fe:	push   rbp
   1400354ff:	or     eax,DWORD PTR [rax]
   140035501:	add    BYTE PTR [rbp+0x6],dl
   140035504:	add    BYTE PTR [rax],al
   140035506:	push   rbp
   140035507:	add    al,BYTE PTR [rax]
   140035509:	add    BYTE PTR [rbp+0x1],dl
	...
   14003559c:	add    BYTE PTR [rax],al
   14003559e:	push   rbp
   14003559f:	add    DWORD PTR [rax],eax
   1400355a1:	add    BYTE PTR [rbp+0x4],dl
   1400355a4:	add    BYTE PTR [rsi],cl
   1400355a6:	movsxd edx,DWORD PTR [rdx]
   1400355a8:	add    BYTE PTR [rbx-0x6a],al
   1400355ab:	(bad)  
   1400355ac:	add    BYTE PTR [rax-0x5b],dl
   1400355af:	add    BYTE PTR [r11-0x55],r10b
   1400355b3:	rex.WRB add BYTE PTR [r13+riz*4+0x47],r9b
   1400355b8:	add    BYTE PTR [rdx*4+0x77210036],bh
   1400355bf:	add    BYTE PTR es:[rax],al
   1400355c2:	push   rbp
   1400355c3:	sbb    DWORD PTR [rax],eax
   1400355c5:	add    BYTE PTR [rbp+0x13],dl
   1400355c8:	add    BYTE PTR [rax],al
   1400355ca:	push   rbp
   1400355cb:	or     al,0x0
   1400355cd:	add    BYTE PTR [rbp+0x6],dl
   1400355d0:	add    BYTE PTR [rax],al
   1400355d2:	push   rbp
   1400355d3:	add    DWORD PTR [rax],eax
	...
   14003565d:	adc    eax,0x6800066a
   140035662:	shl    BYTE PTR [rsi],0x0
   140035665:	movabs eax,ds:0xbb00bffcb2008ff3
   14003566e:	(bad)  
   14003566f:	(bad)  
   140035670:	add    BYTE PTR [rsi-0x42ff2f02],bh
   140035676:	(bad)  
   140035677:	mov    edi,0xa5febb00
   14003567c:	add    BYTE PTR [rbp-0x73ff8004],ch
   140035682:	jmp    0x1400356dd
   140035684:	add    BYTE PTR [rdx-0x49],bl
   140035687:	cmp    BYTE PTR [rax],al
   140035689:	es jl  0x1400356ad
   14003568c:	add    BYTE PTR [rax],al
   14003568e:	push   rbp
   14003568f:	adc    al,BYTE PTR [rax]
   140035691:	add    BYTE PTR [rbp+0xb],dl
   140035694:	add    BYTE PTR [rax],al
   140035696:	push   rbp
   140035697:	add    eax,0x2550000
   14003569c:	add    BYTE PTR [rax],al
   14003569e:	add    BYTE PTR [rax],al
   1400356a0:	popf   
   1400356a1:	data16 sbb ah,BYTE PTR [rax]
   1400356a4:	pushf  
   1400356a5:	sbb    dl,BYTE PTR gs:[rbx-0x66]
   1400356a9:	sbb    DWORD PTR fs:[rax-0x5ae69c67],eax
   1400356b0:	xchg   edi,eax
   1400356b1:	(bad)  
   1400356b2:	sbb    DWORD PTR [rdx-0x29e79e6a],edi
   1400356b8:	xchg   ebp,eax
   1400356b9:	(bad)  
   1400356ba:	sbb    dh,dl
   1400356bc:	xchg   ebx,eax
   1400356bd:	pop    rdi
   1400356be:	sbb    bh,dl
   1400356c0:	xchg   edx,eax
   1400356c1:	pop    rsi
   1400356c2:	(bad)  
   1400356c3:	mov    ebx,0xa4175d91
   1400356c8:	(bad)  
   1400356c9:	pop    rsp
   1400356ca:	(bad)  
   1400356cb:	jl     0x14003565b
   1400356cd:	pop    rbx
   1400356ce:	(bad)  
   1400356cf:	add    BYTE PTR [rax],al
	...
   140035716:	add    BYTE PTR [rax],al
   140035718:	add    edx,DWORD PTR [rsi-0x62]
   14003571b:	(bad)  
   14003571c:	add    BYTE PTR [rcx-0x3dffab18],ah
   140035722:	(bad)  
   140035723:	rol    BYTE PTR [rax],cl
   140035725:	(bad)  
   140035726:	jmp    rbp
   140035728:	add    ah,al
   14003572a:	jmp    rsp
   14003572c:	add    ah,al
   14003572e:	(bad)  
   14003572f:	fld    DWORD PTR [rax]
   140035731:	(bad)  
   140035732:	(bad)  
   140035733:	mov    esi,0xa9ffc800
   140035738:	add    bl,cl
   14003573a:	jmp    FWORD PTR [rdx-0x59003200]
   140035740:	add    ah,cl
   140035742:	call   FWORD PTR [rbp-0x7d003c00]
   140035748:	add    BYTE PTR [rsp+rdi*8-0x1e7dffa9],dh
   14003574f:	add    BYTE PTR es:[rdi-0x3c],ch
   140035753:	or     dl,BYTE PTR [rcx+riz*2+0x659c181e]
   14003575a:	sbb    ebp,DWORD PTR [rsp+rbx*4+0x66]
   14003575e:	sbb    dh,BYTE PTR [rdi-0x22dd8c57]
   140035764:	mov    ebp,0xcfe82e89
   140035769:	pushf  
   14003576a:	cmp    ecx,esi
   14003576c:	fld    TBYTE PTR [rax-0x512007c0]
   140035772:	rex.XB sti 
   140035774:	out    0xb5,eax
   140035776:	rex.RX jmp rdi
   140035779:	mov    dh,0x48
   14003577b:	(bad)  
   14003577c:	call   0x12002a238
   140035781:	mov    al,0x47
   140035783:	sti    
   140035784:	xlat   BYTE PTR ds:[rbx]
   140035785:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140035786:	rex.XB clc 
   140035788:	(bad)  
   140035789:	nop
   14003578a:	cmp    edi,ebp
   14003578c:	stos   BYTE PTR es:[rdi],al
   14003578d:	jbe    0x1400357b8
   14003578f:	jrcxz  0x14003571f
   140035791:	pop    rbx
   140035792:	(bad)  
   140035793:	(bad)  
   140035794:	lea    ebx,[rdx+0x16]
   140035797:	jb     0x140035725
   140035799:	pop    rcx
   14003579a:	(bad)  
   14003579b:	and    DWORD PTR [rax],eax
	...
   1400357d1:	add    BYTE PTR [rax],al
   1400357d3:	add    BYTE PTR [rcx],dl
   1400357d5:	mov    cl,0xff
   1400357d7:	add    cl,BYTE PTR [rdx]
   1400357d9:	mov    dl,0xed
   1400357db:	add    bpl,cl
   1400357de:	(bad)  
   1400357df:	fld    DWORD PTR [rax]
   1400357e1:	retf   0xe5ff
   1400357e4:	add    ah,al
   1400357e6:	jmp    rbp
   1400357e8:	add    BYTE PTR [rcx-0x7dff5706],dh
   1400357ee:	shr    DWORD PTR [rsi],1
   1400357f0:	add    al,0x94
   1400357f2:	(bad)  
   1400357f3:	or     al,0x13
   1400357f5:	int3   
   1400357f6:	inc    DWORD PTR [rsi]
   1400357f8:	sbb    cl,ch
   1400357fa:	dec    DWORD PTR [rbx]
   1400357fc:	sbb    cl,dh
   1400357fe:	call   FWORD PTR [rax]
   140035800:	adc    al,dl
   140035802:	(bad)  
   140035803:	ds (bad) 
   140035805:	sar    edi,1
   140035807:	(bad)  
   140035808:	add    edi,ecx
   14003580a:	jmp    QWORD PTR [rdx+0x23]
   14003580d:	mov    ah,0xcc
   14003580f:	pop    rcx
   140035810:	jns    0x14003588e
   140035812:	push   rdx
   140035813:	xchg   esi,eax
   140035814:	xchg   edi,eax
   140035815:	push   0x23
   140035817:	(bad)  
   140035818:	enter  0x3997,0xee
   14003581c:	(bad)  [rdi+rdi*1+0x42b6e6fb]
   140035823:	(bad)  
   140035824:	in     eax,dx
   140035825:	rol    BYTE PTR [rdi-0x1],0xf0
   140035829:	leave  
   14003582a:	rex.WB push r11
   14003582d:	(bad)  
   14003582e:	rex.WXB push r12
   140035831:	iret   
   140035832:	rex.WR push rdi
   140035835:	ror    DWORD PTR [rbx-0x1],1
   140035838:	test   edi,0xd1f6ff4a
   14003583e:	rex.WRXB push r11
   140035841:	retf   
   140035842:	rex.WRXB push r11
   140035845:	enter  0xff50,0xf0
   140035849:	(bad)
   14003584c:	out    dx,al
   14003584d:	rcl    BYTE PTR [rcx-0x1],0xe4
   140035851:	mov    cl,0x4b
   140035853:	cld    
   140035854:	ror    BYTE PTR [rbx+0x679bef37],0x1f
   14003585b:	fimul  WORD PTR [rcx+rbx*2+0x588b7f16]
   140035862:	adc    eax,0xd
	...
   140035893:	add    BYTE PTR [rax],bl
   140035895:	mov    ah,0xf0
   140035897:	adc    BYTE PTR [rbx],cl
   140035899:	sar    esi,1
   14003589b:	mov    dh,0x0
   14003589d:	sar    edi,1
   14003589f:	in     eax,0x0
   1400358a1:	(bad)  
   1400358a2:	jmp    rbp
   1400358a4:	add    BYTE PTR [rax+0x3600bcfc],dh
   1400358aa:	mov    ah,BYTE PTR [rax+rax*1]
   1400358ad:	add    BYTE PTR [rbp+0x4],dl
	...
   1400358c4:	or     DWORD PTR [rcx+0x788f075a],0x7394743a
   1400358ce:	(bad)  
   1400358cf:	ror    dl,cl
   1400358d1:	(bad)  
   1400358d2:	cmp    dh,cl
   1400358d4:	loop   0x140035887
   1400358d6:	cmp    esi,edi
   1400358d8:	jmp    0x140035899
   1400358da:	ds push rbx
   1400358dd:	int    0x46
   1400358df:	push   rdi
   1400358e1:	(bad)  
   1400358e2:	rex.WRB (bad) 
   1400358e4:	stc    
   1400358e5:	(bad)  [rdi-0x1]
   1400358e8:	cli    
   1400358e9:	fst    QWORD PTR [rdx-0x1]
   1400358ec:	sti    
   1400358ed:	fst    QWORD PTR [rbx-0x1]
   1400358f0:	cld    
   1400358f1:	fst    QWORD PTR [rbx-0x1]
   1400358f4:	std    
   1400358f5:	fst    QWORD PTR [rbx-0x1]
   1400358f8:	std    
   1400358f9:	fst    QWORD PTR [rdx-0x1]
   1400358fc:	sti    
   1400358fd:	ficom  DWORD PTR [rdx-0x1]
   140035900:	cli    
   140035901:	fcom   DWORD PTR [rdx-0x1]
   140035904:	stc    
   140035905:	fcom   DWORD PTR [rax-0x1]
   140035908:	clc    
   140035909:	ror    DWORD PTR [rdi-0x1],cl
   14003590c:	test   ah,0x4c
   14003590f:	push   rsp
   140035911:	enter  0xff4b,0xf0
   140035915:	mov    esi,0xb6e9ff4e
   14003591a:	rex.WRX (bad) 
   14003591c:	mov    ebp,0x8dec3187
   140035921:	pop    rdx
   140035922:	adc    eax,0x16598bc4
   140035927:	rex.WX add BYTE PTR [rax],al
	...
   14003594e:	add    BYTE PTR [rax],al
   140035950:	(bad)  
   140035951:	sar    edi,cl
   140035953:	add    bl,BYTE PTR [rip+0x33ef4c5]        # 0x143424e1e
   140035959:	(bad)  
   14003595b:	jrcxz  0x14003595d
   14003595d:	sar    edi,1
   14003595f:	in     eax,0x0
   140035961:	sar    bh,0xe5
   140035964:	add    BYTE PTR [rbx-0x34],ch
   140035967:	outs   dx,BYTE PTR ds:[rsi]
   140035968:	add    BYTE PTR [rax],al
   14003596a:	push   rbp
   14003596b:	adc    DWORD PTR [rax],eax
	...
   14003597d:	add    BYTE PTR [rax],al
   14003597f:	add    BYTE PTR [rbx+rbp*2+0x6ba41d1c],ah
   140035986:	sbb    al,0xa6
   140035988:	enter  0x3392,0xed
   14003598c:	(bad)  [rcx-0x411402d0]
   140035992:	xor    al,0xff
   140035994:	repnz (bad) 
   140035996:	rex.X push rsi
   140035999:	(bad)  [rbp-0x1]
   14003599c:	cli    
   14003599d:	ficom  WORD PTR [rdi-0x1]
   1400359a0:	sti    
   1400359a1:	loopne 0x1400359ff
   1400359a3:	(bad)  
   1400359a4:	cld    
   1400359a5:	loop   0x140035a07
   1400359a7:	(bad)  
   1400359a8:	std    
   1400359a9:	in     eax,0x63
   1400359ab:	(bad)  
   1400359ac:	(bad)  
   1400359ad:	out    0x62,al
   1400359af:	(bad)  
   1400359b0:	(bad)  
   1400359b1:	out    0x65,al
   1400359b3:	(bad)  
   1400359b4:	(bad)  
   1400359b5:	out    0x66,eax
   1400359b7:	(bad)  
   1400359b8:	(bad)  
   1400359b9:	out    0x66,al
   1400359bb:	(bad)  
   1400359bc:	(bad)  
   1400359bd:	out    0x60,al
   1400359bf:	(bad)  
   1400359c0:	jmp    rdx
   1400359c2:	(bad)  
   1400359c3:	(bad)  
   1400359c4:	(bad)  
   1400359c5:	fistp  WORD PTR [rbx-0x1]
   1400359c8:	std    
   1400359c9:	fst    QWORD PTR [rdi-0x1]
   1400359cc:	sti    
   1400359cd:	fcom   DWORD PTR [rbx-0x1]
   1400359d0:	stc    
   1400359d1:	ror    DWORD PTR [rdi-0x1],1
   1400359d4:	test   bl,0x4b
   1400359d7:	push   rdx
   1400359d9:	ret    
   1400359da:	rex.RXB (bad) 
   1400359dc:	out    dx,al
   1400359dd:	mov    ebx,0xa1d8ff46
   1400359e2:	(bad)  
   1400359e3:	clc    
   1400359e4:	lods   al,BYTE PTR ds:[rsi]
   1400359e5:	jbe    0x140035a10
   1400359e7:	out    0x8b,al
   1400359e9:	pop    rcx
   1400359ea:	(bad)  
   1400359eb:	jne    0x1400359ed
	...
   140035a0d:	add    BYTE PTR [rax],al
   140035a0f:	add    BYTE PTR [rcx],ch
   140035a11:	retf   0x4ff
   140035a14:	sbb    eax,0x7dfdd7
   140035a19:	loope  0x140035a1a
   140035a1b:	in     eax,0x0
   140035a1d:	(bad)  
   140035a1e:	jmp    rbp
   140035a20:	add    BYTE PTR [rcx+0x3e00dbfe],bh
   140035a26:	sahf   
   140035a27:	push   rax
   140035a28:	add    BYTE PTR [rax],al
   140035a2a:	push   rbp
   140035a2b:	sldt   WORD PTR [rax]
	...
   140035a3a:	add    BYTE PTR [rax],al
   140035a3c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140035a3d:	ins    BYTE PTR es:[rdi],dx
   140035a3e:	sbb    al,0x33
   140035a40:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140035a41:	ins    DWORD PTR es:[rdi],dx
   140035a42:	sbb    al,ch
   140035a44:	(bad)  
   140035a45:	xchg   ebp,eax
   140035a46:	sub    ch,dh
   140035a48:	in     al,0xb2
   140035a4a:	sub    al,0xff
   140035a4c:	out    dx,al
   140035a4d:	(bad)
   140035a50:	hlt    
   140035a51:	ror    BYTE PTR [rcx-0x1],cl
   140035a54:	clc    
   140035a55:	fist   DWORD PTR [rcx-0x1]
   140035a58:	sti    
   140035a59:	loope  0x140035ab7
   140035a5b:	(bad)  
   140035a5c:	std    
   140035a5d:	out    0x65,eax
   140035a5f:	(bad)  
   140035a60:	(bad)  
   140035a61:	(bad)  
   140035a62:	imul   edi,edi,0xff6febfe
   140035a68:	(bad)  
   140035a69:	in     al,dx
   140035a6a:	jno    0x140035a6b
   140035a6c:	(bad)  
   140035a6d:	in     eax,dx
   140035a6e:	jno    0x140035a6f
   140035a70:	(bad)  
   140035a71:	in     eax,dx
   140035a72:	jae    0x140035a73
   140035a74:	(bad)  
   140035a75:	out    dx,al
   140035a76:	je     0x140035a77
   140035a78:	(bad)  
   140035a79:	in     eax,dx
   140035a7a:	jne    0x140035a7b
   140035a7c:	(bad)  
   140035a7d:	jmp    0x140035af2
   140035a7f:	(bad)  
   140035a80:	(bad)  
   140035a81:	(bad)  
   140035a82:	jno    0x140035a83
   140035a84:	(bad)  
   140035a85:	call   0x1260359f6
   140035a8a:	gs (bad) 
   140035a8c:	(bad)  
   140035a8d:	loope  0x140035aef
   140035a8f:	(bad)  
   140035a90:	sti    
   140035a91:	ficomp DWORD PTR [rcx-0x1]
   140035a94:	stc    
   140035a95:	(bad)  
   140035a96:	push   rbx
   140035a97:	push   rsi
   140035a99:	int3   
   140035a9a:	rex.WR push rbx
   140035a9d:	(bad)
   140035aa0:	out    dx,al
   140035aa1:	mov    esp,0xade6ff3f
   140035aa6:	ds std 
   140035aa8:	mov    ch,0x7f
   140035aaa:	sub    al,0xea
   140035aac:	mov    ebx,DWORD PTR [rcx+0x16]
   140035aaf:	mov    DWORD PTR [rdx+0x51558],ecx
	...
   140035acd:	add    BYTE PTR [rax],al
   140035acf:	add    BYTE PTR [rax],dh
   140035ad1:	ret    
   140035ad2:	dec    DWORD PTR [rax]
   140035ad4:	sbb    bh,bl
   140035ad6:	(bad)  
   140035ad7:	popf   
   140035ad8:	add    cl,ah
   140035ada:	jmp    rbp
   140035adc:	add    ch,cl
   140035ade:	jmp    rbp
   140035ae0:	add    BYTE PTR [rbx+0x3700d6fe],dh
   140035ae6:	cwde   
   140035ae7:	rex.WRX add BYTE PTR [rax],r8b
   140035aea:	push   rbp
   140035aeb:	adc    BYTE PTR [rax],al
	...
   140035af5:	add    BYTE PTR [rax],al
   140035af7:	add    BYTE PTR [rdi-0x55cce293],ah
   140035afd:	jo     0x140035b18
   140035aff:	rcl    cl,1
   140035b01:	xchg   esi,eax
   140035b02:	(bad)  
   140035b03:	stc    
   140035b04:	out    0xb9,eax
   140035b06:	(bad)  
   140035b07:	(bad)  
   140035b08:	out    dx,al
   140035b09:	enter  0xff3e,0xf4
   140035b0d:	(bad)  
   140035b0e:	rex.RXB (bad) 
   140035b10:	clc    
   140035b11:	fst    QWORD PTR [rbx-0x1]
   140035b14:	sti    
   140035b15:	out    0x5e,al
   140035b17:	(bad)  
   140035b18:	std    
   140035b19:	in     al,dx
   140035b1a:	imul   edi,edi,0xff6eedfe
   140035b20:	(bad)  
   140035b21:	out    dx,eax
   140035b22:	jbe    0x140035b23
   140035b24:	push   rax
   140035b26:	jl     0x140035b27
   140035b28:	push   rax
   140035b2a:	jg     0x140035b2b
   140035b2c:	push   rax
   140035b2e:	cmp    bh,0xff
   140035b31:	icebp  
   140035b32:	(bad)  
   140035b33:	(bad)  
   140035b34:	push   rcx
   140035b36:	(bad)  
   140035b37:	(bad)  
   140035b38:	push   rcx
   140035b3a:	(bad)  
   140035b3b:	(bad)  
   140035b3c:	(bad)  
   140035b3d:	out    dx,eax
   140035b3e:	cmp    edi,0xff7feeff
   140035b44:	(bad)  
   140035b45:	in     eax,dx
   140035b46:	jnp    0x140035b47
   140035b48:	(bad)  
   140035b49:	jmp    0x140035bc0
   140035b4b:	(bad)  
   140035b4c:	(bad)  
   140035b4d:	call   0x125035ac2
   140035b52:	addr32 (bad) 
   140035b54:	cld    
   140035b55:	fisub  WORD PTR [rax-0x1]
   140035b58:	stc    
   140035b59:	(bad)  
   140035b5a:	push   rsi
   140035b5b:	push   rdi
   140035b5d:	(bad)  
   140035b5e:	push   rax
   140035b5f:	push   rbx
   140035b61:	(bad)  
   140035b62:	rex.RX push rax
   140035b65:	mov    ebx,0xace7ff3f
   140035b6a:	cmp    edi,edi
   140035b6c:	mov    eax,0x8bec2c80
   140035b71:	pop    rcx
   140035b72:	(bad)  
   140035b73:	xchg   ebx,eax
   140035b74:	mov    bl,BYTE PTR [rax+0x15]
   140035b77:	add    eax,DWORD PTR [rax]
	...
   140035b8d:	add    BYTE PTR [rax],al
   140035b8f:	add    BYTE PTR [rsi],dh
   140035b91:	fdiv   st(7),st
   140035b93:	or     dl,BYTE PTR [rdi]
   140035b95:	loop   0x140035b96
   140035b97:	stos   BYTE PTR es:[rdi],al
   140035b98:	add    dl,ah
   140035b9a:	jmp    rbp
   140035b9c:	add    ch,cl
   140035b9e:	jmp    rbp
   140035ba0:	add    BYTE PTR [rbp+0x3800d9fe],dh
   140035ba6:	popf   
   140035ba7:	push   rbp
   140035ba8:	add    BYTE PTR [rax],al
   140035baa:	push   rbp
   140035bab:	adc    al,0x0
   140035bad:	add    BYTE PTR [rbp+0x1],dl
   140035bb0:	add    BYTE PTR [rax],al
   140035bb2:	add    BYTE PTR [rax],al
   140035bb4:	test   al,0x6e
   140035bb6:	sbb    eax,0x1a6fab27
   140035bbb:	retf   
   140035bbc:	rcl    DWORD PTR [rbp-0x441706e9],1
   140035bc2:	xor    bh,bh
   140035bc4:	out    dx,al
   140035bc5:	retf   0xff3f
   140035bc8:	hlt    
   140035bc9:	fmul   DWORD PTR [rax-0x1]
   140035bcc:	clc    
   140035bcd:	loope  0x140035c20
   140035bcf:	(bad)  
   140035bd0:	sti    
   140035bd1:	out    0x5e,eax
   140035bd3:	(bad)  
   140035bd4:	std    
   140035bd5:	out    dx,eax
   140035bd6:	ins    DWORD PTR es:[rdi],dx
   140035bd7:	(bad)  
   140035bd8:	(bad)  
   140035bd9:	lock jbe 0x140035bdb
   140035bdc:	push   rdx
   140035bde:	jge    0x140035bdf
   140035be0:	push   rbp
   140035be2:	(bad)  
   140035be3:	(bad)  
   140035be4:	push   rsp
   140035be6:	test   edi,edi
   140035be8:	(bad)  
   140035be9:	repnz xchg edi,edi
   140035bec:	(bad)  
   140035bed:	repnz mov edi,edi
   140035bf0:	std    
   140035bf1:	lock mov edi,edi
   140035bf4:	cld    
   140035bf5:	out    dx,al
   140035bf6:	mov    bh,bh
   140035bf8:	cld    
   140035bf9:	out    dx,al
   140035bfa:	mov    bh,bh
   140035bfc:	cld    
   140035bfd:	in     eax,dx
   140035bfe:	mov    bh,bh
   140035c00:	sti    
   140035c01:	in     eax,dx
   140035c02:	mov    bh,bh
   140035c04:	std    
   140035c05:	out    dx,al
   140035c06:	test   edi,edi
   140035c08:	(bad)  
   140035c09:	out    dx,al
   140035c0a:	cmp    bh,0xff
   140035c0d:	in     eax,dx
   140035c0e:	jnp    0x140035c0f
   140035c10:	(bad)  
   140035c11:	jmp    0x126035b8c
   140035c16:	ins    BYTE PTR es:[rdi],dx
   140035c17:	(bad)  
   140035c18:	(bad)  
   140035c19:	loopne 0x140035c7d
   140035c1b:	(bad)  
   140035c1c:	sti    
   140035c1d:	ficomp DWORD PTR [rcx-0x1]
   140035c20:	test   edi,0xc4f3ff4f
   140035c26:	rex.RX (bad) 
   140035c28:	out    dx,eax
   140035c29:	mov    edx,0xaae9ff3b
   140035c2e:	xor    edi,edi
   140035c30:	mov    ch,0x7d
   140035c32:	sub    ch,bl
   140035c34:	mov    ebx,DWORD PTR [rcx+0x16]
   140035c37:	jb     0x140035c39
	...
   140035c4d:	add    BYTE PTR [rax],al
   140035c4f:	add    BYTE PTR [rcx],bh
   140035c51:	fdiv   st(7),st
   140035c53:	or     bl,BYTE PTR [rip+0xa7ffe5]        # 0x140ab5c3e
   140035c59:	in     eax,0xff
   140035c5b:	in     eax,0x0
   140035c5d:	(bad)  
   140035c5e:	jmp    rbp
   140035c60:	add    BYTE PTR [rdi+rdi*8-0x50bfff1e],bh
   140035c67:	imul   eax,DWORD PTR [rax],0x0
   140035c6a:	push   rbp
   140035c6b:	sbb    al,BYTE PTR [rax]
   140035c6d:	add    BYTE PTR [rbp+0x5],dl
   140035c70:	test   eax,0xa90f1d6f
   140035c75:	outs   dx,DWORD PTR ds:[rsi]
   140035c76:	sbb    al,0xb4
   140035c78:	(bad)  
   140035c79:	xchg   ebx,eax
   140035c7a:	(bad)  
   140035c7b:	clc    
   140035c7c:	out    0xba,al
   140035c7e:	xor    edi,edi
   140035c80:	in     eax,dx
   140035c81:	leave  
   140035c82:	ds push rdx
   140035c85:	(bad)  
   140035c86:	rex.WB push r15
   140035c89:	fist   WORD PTR [rbx-0x1]
   140035c8c:	sti    
   140035c8d:	jmp    0x131015bf1
   140035c92:	push   0xffffffffffffffff
   140035c94:	(bad)  
   140035c95:	icebp  
   140035c96:	jbe    0x140035c97
   140035c98:	push   rsp
   140035c9a:	jle    0x140035c9b
   140035c9c:	push   rbp
   140035c9e:	test   bh,bh
   140035ca0:	push   rbx
   140035ca2:	mov    bh,bh
   140035ca4:	cld    
   140035ca5:	icebp  
   140035ca6:	xchg   edi,edi
   140035ca8:	(bad)  
   140035ca9:	shl    DWORD PTR [rdx-0xb],1
   140035cac:	ret    
   140035cad:	cdq    
   140035cae:	rex.RX in al,0xb2
   140035cb1:	xor    BYTE PTR [rdx],0xdc
   140035cb4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140035cb5:	jae    0x140035cdc
   140035cb7:	xlat   BYTE PTR ds:[rbx]
   140035cb8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140035cb9:	ins    DWORD PTR es:[rdi],dx
   140035cba:	and    esi,edx
   140035cbc:	mov    al,0x7e
   140035cbe:	xor    ch,bl
   140035cc0:	mov    edx,0xdbe23c8d
   140035cc5:	mov    edx,0xe9f8f161
   140035cca:	test   esi,edi
   140035ccc:	std    
   140035ccd:	out    dx,al
   140035cce:	test   bh,bh
   140035cd0:	(bad)  
   140035cd1:	out    dx,eax
   140035cd2:	jle    0x140035cd3
   140035cd4:	(bad)  
   140035cd5:	jmp    0x140035d4f
   140035cd7:	(bad)  
   140035cd8:	(bad)  
   140035cd9:	call   0x120025c4b
   140035cde:	fs (bad) 
   140035ce0:	stc    
   140035ce1:	xlat   BYTE PTR ds:[rbx]
   140035ce2:	pop    rbx
   140035ce3:	(bad)  
   140035ce4:	clc    
   140035ce5:	int    0x4f
   140035ce7:	push   rbx
   140035ce9:	(bad)  
   140035ced:	mov    ecx,0xa4e3ff38
   140035cf2:	cs std 
   140035cf4:	lods   eax,DWORD PTR ds:[rsi]
   140035cf5:	ja     0x140035d20
   140035cf7:	call   0x19119b687
	...
   140035d10:	cmp    dl,dh
   140035d12:	inc    DWORD PTR [rdi]
   140035d14:	and    eax,0x96fee6
   140035d19:	jmp    0x11504431d
   140035d1e:	jmp    rbp
   140035d20:	add    BYTE PTR [rdi+0x7000e5ff],bh
   140035d26:	jrcxz  0x140035cbc
   140035d28:	add    BYTE PTR [rdx],al
   140035d2a:	pop    rax
   140035d2b:	add    BYTE PTR es:[rax],al
   140035d2e:	push   rbp
   140035d2f:	or     BYTE PTR [rax-0x3477e090],ch
   140035d35:	xchg   edx,eax
   140035d36:	sub    dh,cl
   140035d38:	jrcxz  0x140035cf1
   140035d3a:	cs (bad) 
   140035d3c:	jmp    0x140035d07
   140035d3e:	ds push rcx
   140035d41:	ror    DWORD PTR [rbx-0x1],cl
   140035d44:	neg    dh
   140035d46:	push   rsp
   140035d47:	(bad)  
   140035d48:	cli    
   140035d49:	call   0x12e005cae
   140035d4e:	imul   edi,edi,0xfffffffe
   140035d51:	icebp  
   140035d52:	je     0x140035d53
   140035d54:	push   rbp
   140035d56:	jg     0x140035d57
   140035d58:	push   rsi
   140035d5a:	xchg   bh,bh
   140035d5c:	(bad)  
   140035d5d:	hlt    
   140035d5e:	mov    edi,edi
   140035d60:	in     eax,0xc7
   140035d62:	movsxd esi,ecx
   140035d64:	mov    dl,0x7f
   140035d66:	xor    cl,bl
   140035d68:	movabs ds:0xa14f1b69a19c1b6a,al
   140035d71:	imul   ebx,DWORD PTR [rbx],0x1b68a02a
   140035d77:	adc    al,0x9f
   140035d79:	push   0x679f0c1b
   140035d7e:	sbb    ebp,DWORD PTR [rdx]
   140035d80:	sahf   
   140035d81:	sbb    al,BYTE PTR [ebx-0x62]
   140035d85:	data16 sbb al,BYTE PTR [rdi-0x30e69b64]
   140035d8c:	fdiv   DWORD PTR [rdx+rbx*2-0x7b140410]
   140035d93:	(bad)  
   140035d94:	(bad)  
   140035d95:	in     eax,dx
   140035d96:	cmp    bh,0xff
   140035d99:	jmp    0x140035e14
   140035d9b:	(bad)  
   140035d9c:	jmp    rdi
   140035d9e:	outs   dx,BYTE PTR ds:[rsi]
   140035d9f:	(bad)  
   140035da0:	(bad)  
   140035da1:	loopne 0x140035e06
   140035da3:	(bad)  
   140035da4:	stc    
   140035da5:	(bad)  
   140035da6:	pop    rcx
   140035da7:	push   rsi
   140035da9:	int3   
   140035daa:	rex.WRX push rdx
   140035dad:	rol    BYTE PTR [rdx-0x1],0xeb
   140035db1:	mov    dl,0x37
   140035db3:	call   rbx
   140035db5:	xchg   esp,eax
   140035db6:	and    eax,0x165b8ff8
   140035dbb:	(bad)  
   140035dbc:	mov    WORD PTR [rcx+0x16],ds
   140035dbf:	(bad)  
	...
   140035dd0:	cmp    bl,dl
   140035dd2:	inc    DWORD PTR [rbx+rsi*1]
   140035dd5:	in     al,0xfe
   140035dd7:	jae    0x140035dfb
   140035dd9:	repz jmp rbp
   140035ddc:	(bad)  
   140035ddd:	in     eax,0xff
   140035ddf:	in     eax,0x0
   140035de1:	enter  0xe5ff,0x0
   140035de5:	xchg   esp,eax
   140035de6:	sti    
   140035de7:	mov    ebp,0x3d7d2200
   140035dec:	sbb    DWORD PTR [rax+0x27],0x49
   140035df0:	mov    esp,0xdfe23388
   140035df5:	lods   al,BYTE PTR ds:[rsi]
   140035df6:	sub    edi,edi
   140035df8:	jmp    0x130029bbf
   140035dfd:	ror    DWORD PTR [rcx-0x1],1
   140035e00:	cmc    
   140035e01:	fst    QWORD PTR [rcx-0x1]
   140035e04:	clc    
   140035e05:	in     al,0x5e
   140035e07:	(bad)  
   140035e08:	cld    
   140035e09:	in     al,dx
   140035e0a:	push   0x70f1fdff
   140035e0f:	(bad)  
   140035e10:	(bad)  
   140035e11:	repz jge 0x140035e13
   140035e14:	push   rbp
   140035e16:	test   bh,bh
   140035e18:	(bad)  
   140035e19:	hlt    
   140035e1a:	mov    edi,edi
   140035e1c:	(bad)  
   140035e1d:	lods   eax,DWORD PTR ds:[rsi]
   140035e1e:	rex.WRXB (bad) 
   140035e20:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140035e21:	imul   ebx,DWORD PTR [rsp+rbp*4],0xffffffa3
   140035e25:	imul   ebx,DWORD PTR ds:0x0,0x0
	...
   140035e45:	add    BYTE PTR [rax],al
   140035e47:	add    BYTE PTR [rsi-0x62e1e59a],bl
   140035e4d:	data16 sbb bl,BYTE PTR [rbp-0x16ba6239]
   140035e54:	sti    
   140035e55:	(bad)  
   140035e56:	cmp    edi,0xffffffff
   140035e59:	out    dx,al
   140035e5a:	jg     0x140035e5b
   140035e5c:	(bad)  
   140035e5d:	(bad)  
   140035e5e:	js     0x140035e5f
   140035e60:	jmp    rbx
   140035e62:	imul   edi,edi,0xfffffffb
   140035e65:	frstor [rbx-0x1]
   140035e68:	clc    
   140035e69:	rcl    BYTE PTR [rsi-0x1],cl
   140035e6c:	hlt    
   140035e6d:	enter  0xff49,0xef
   140035e71:	mov    ebp,0xabe8ff3e
   140035e76:	xor    edi,edi
   140035e78:	mov    ebp,0x8dee2781
   140035e7d:	pop    rdx
   140035e7e:	(bad)  
   140035e7f:	cwde   
	...
   140035e90:	cmp    bl,bl
   140035e92:	inc    DWORD PTR [rdx]
   140035e94:	rex.B in al,0xff
   140035e97:	cmp    al,0x38
   140035e99:	clc    
   140035e9a:	jmp    rsp
   140035e9c:	(bad)  
   140035e9d:	bnd jmp rbp
   140035ea0:	add    ah,dl
   140035ea2:	jmp    rbp
   140035ea4:	add    BYTE PTR [rbp+0x3c00d8fe],ch
   140035eaa:	stos   BYTE PTR es:[rdi],al
   140035eab:	gs popf 
   140035ead:	push   0x23
   140035eaf:	lods   eax,DWORD PTR ds:[rsi]
   140035eb0:	rcr    BYTE PTR [rdx-0x431a06d7],cl
   140035eb6:	(bad)  
   140035eb7:	(bad)  
   140035eb8:	in     al,dx
   140035eb9:	int3   
   140035eba:	rex.R push rdx
   140035ebd:	ficom  DWORD PTR [rax-0x1]
   140035ec0:	mul    edx
   140035ec2:	pop    rbx
   140035ec3:	(bad)  
   140035ec4:	sti    
   140035ec5:	in     al,dx
   140035ec6:	gs (bad) 
   140035ec8:	std    
   140035ec9:	bnd jo 0x140035ecb
   140035ecc:	(bad)  
   140035ecd:	cmc    
   140035ece:	jge    0x140035ecf
   140035ed0:	(bad)  
   140035ed1:	test   DWORD PTR [rsi-0x74090001],0x51b1daff
   140035edb:	(bad)  
   140035edc:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140035edd:	ins    BYTE PTR es:[rdi],dx
   140035ede:	sbb    al,0x95
   140035ee0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140035ee1:	imul   ebx,DWORD PTR [rdx+rcx*1],0x0
	...
   140035f09:	add    BYTE PTR [rax],al
   140035f0b:	add    BYTE PTR [rsi-0x62fae599],bl
   140035f11:	data16 sbb cl,BYTE PTR [rsi-0x15b65f37]
   140035f18:	std    
   140035f19:	jmp    0x140035e9e
   140035f1b:	(bad)  
   140035f1c:	(bad)  
   140035f1d:	in     eax,dx
   140035f1e:	cmp    bh,0xff
   140035f21:	call   0x123025e9c
   140035f26:	push   0x5edbfbff
   140035f2b:	(bad)  
   140035f2c:	clc    
   140035f2d:	int    0x51
   140035f2f:	push   rbx
   140035f31:	ret    0xff45
   140035f34:	(bad)  
   140035f35:	mov    bl,0x39
   140035f37:	jmp    rdx
   140035f39:	movabs ds:0x5a8de3226da4ff2f,eax
   140035f42:	(bad)  
   140035f43:	cmp    BYTE PTR [rax],al
	...
   140035f51:	add    BYTE PTR [rax],al
   140035f53:	add    BYTE PTR [rbp-0x1d],al
   140035f56:	call   FWORD PTR [rdi]
   140035f58:	xor    dh,al
   140035f5a:	call   rbx
   140035f5c:	rex.RX clc 
   140035f5e:	jmp    rbp
   140035f60:	add    dh,bl
   140035f62:	jmp    rbp
   140035f64:	add    cl,al
   140035f66:	jmp    rsi
   140035f68:	or     eax,0xafb9cc71
   140035f6d:	test   BYTE PTR [rcx],bh
   140035f6f:	in     al,0xd6
   140035f71:	test   al,0x2c
   140035f73:	(bad)  
   140035f74:	call   0x130029f3e
   140035f79:	(bad)  
   140035f7a:	rex.WXB push r13
   140035f7d:	loopne 0x140035fd9
   140035f7f:	(bad)  
   140035f80:	stc    
   140035f81:	jmp    0x132005ee7
   140035f86:	ins    DWORD PTR es:[rdi],dx
   140035f87:	(bad)  
   140035f88:	(bad)  
   140035f89:	hlt    
   140035f8a:	jnp    0x140035f8b
   140035f8c:	(bad)  
   140035f8d:	cmc    
   140035f8e:	test   bh,bh
   140035f90:	push   rdi
   140035f92:	mov    edi,edi
   140035f94:	hlt    
   140035f95:	fsubr  QWORD PTR [rdi-0xb]
   140035f98:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140035f99:	ins    DWORD PTR es:[rdi],dx
   140035f9a:	sbb    al,0xb2
   140035f9c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140035f9d:	ins    BYTE PTR es:[rdi],dx
   140035f9e:	sbb    al,0xc
	...
   140035fd0:	sahf   
   140035fd1:	sbb    cl,BYTE PTR [ecx]
   140035fd4:	popf   
   140035fd5:	data16 sbb dh,BYTE PTR [rdx+riz*8-0x80b9e43]
   140035fdd:	out    0x82,al
   140035fdf:	(bad)  
   140035fe0:	cli    
   140035fe1:	(bad)  
   140035fe2:	jl     0x140035fe3
   140035fe4:	stc    
   140035fe5:	call   0x126fd5f61
   140035fea:	jne    0x140035feb
   140035fec:	neg    ch
   140035fee:	push   0x5dd3f5ff
   140035ff3:	push   rdx
   140035ff5:	(bad)  
   140035ff6:	push   rdx
   140035ff7:	(bad)  
   140035ff8:	fbstp  TBYTE PTR [rax-0x7a4400b4]
   140035ffe:	xor    esi,esp
   140036000:	(bad)  
   140036001:	pop    rsp
   140036002:	(bad)  
   140036003:	movabs al,ds:0x0
	...
   140036014:	rex.R (bad) 
   140036017:	or     eax,0xa0fee932
   14003601c:	rex.W sti 
   14003601e:	jmp    rbp
   140036020:	es in  al,dx
   140036022:	jmp    rbp
   140036024:	add    bh,cl
   140036026:	(bad)  
   140036027:	call   0x12ef4fa35
   14003602c:	mov    eax,DWORD PTR [rcx-0x562f04b4]
   140036032:	xor    eax,0x47cce9ff
   140036037:	push   rdx
   140036039:	ficom  DWORD PTR [rbp-0x1]
   14003603c:	mul    edi
   14003603e:	pop    rbp
   14003603f:	(bad)  
   140036040:	sti    
   140036041:	out    dx,al
   140036042:	imul   edi,edi,0xff75f5fd
   140036048:	(bad)  
   140036049:	clc    
   14003604a:	(bad)  
   14003604b:	(bad)  
   14003604c:	(bad)  
   14003604d:	stc    
   14003604e:	mov    edi,?
   140036050:	(bad)  
   140036051:	clc    
   140036052:	(bad)  
   140036053:	inc    edx
   140036055:	xchg   ebx,eax
   140036056:	(bad)  
   140036057:	fisub  WORD PTR [rdi+0x3f1d6d]
	...
   140036091:	add    BYTE PTR [rax],al
   140036093:	add    BYTE PTR [rsi-0x62dbe599],bl
   140036099:	data16 sbb bh,BYTE PTR [rbp+rbx*4+0x66]
   14003609e:	sbb    dl,BYTE PTR [rcx-0x5fe59a65]
   1400360a4:	(bad)  
   1400360a5:	sbb    DWORD PTR fs:[rdx-0x46e69c68],esi
   1400360ac:	xchg   edi,eax
   1400360ad:	(bad)  
   1400360ae:	sbb    edi,eax
   1400360b0:	xchg   esi,eax
   1400360b1:	(bad)  
   1400360b2:	sbb    dh,cl
   1400360b4:	xchg   esp,eax
   1400360b5:	(bad)  
   1400360b6:	sbb    dh,dl
   1400360b8:	xchg   ebx,eax
   1400360b9:	pop    rdi
   1400360ba:	sbb    bh,dl
   1400360bc:	xchg   edx,eax
   1400360bd:	pop    rsi
   1400360be:	(bad)  
   1400360bf:	mov    edx,0x8a175d90
   1400360c4:	(bad)  
   1400360c5:	pop    rsp
   1400360c6:	(bad)  
   1400360c7:	sldt   WORD PTR [rax]
	...
   1400360d2:	add    BYTE PTR [rax],al
   1400360d4:	sar    dil,cl
   1400360d7:	add    al,0x41
   1400360d9:	out    0xfe,al
   1400360db:	push   rax
   1400360dc:	push   rbx
   1400360dd:	(bad)  
   1400360de:	jmp    rsp
   1400360e0:	pop    rbp
   1400360e1:	cld    
   1400360e2:	jmp    rbp
   1400360e4:	sbb    eax,0x8ebfee4
   1400360e9:	mov    eax,0x8235fdf3
   1400360ee:	xchg   edx,eax
   1400360ef:	inc    esp
   1400360f1:	test   eax,0xc9e3ff3d
   1400360f6:	rex.WX push rsp
   1400360f9:	loopne 0x140036154
   1400360fb:	(bad)  
   1400360fc:	stc    
   1400360fd:	(bad)  
   1400360fe:	fs (bad) 
   140036100:	cld    
   140036101:	repnz outs dx,DWORD PTR ds:[rsi]
   140036103:	(bad)  
   140036104:	(bad)  
   140036105:	idiv   BYTE PTR [rsi-0x1]
   140036108:	(bad)  
   140036109:	clc    
   14003610a:	mov    edi,edi
   14003610c:	(bad)  
   14003610d:	cli    
   14003610e:	xchg   edx,eax
   14003610f:	(bad)  
   140036110:	clc    
   140036111:	out    0x7d,eax
   140036113:	stc    
   140036114:	test   al,0x6e
   140036116:	sbb    eax,0x1d6ea8b2
   14003611b:	add    al,BYTE PTR [rax]
	...
   140036195:	add    BYTE PTR [rax],al
   140036197:	add    BYTE PTR [rcx-0x1d],cl
   14003619a:	jmp    QWORD PTR [rcx]
   14003619c:	rex.WRB icebp 
   14003619e:	dec    bh
   1400361a0:	cmp    edi,0xf04ce7ff
   1400361a6:	sti    
   1400361a7:	repnz (bad) 
   1400361a9:	enter  0xfef4,0x6
   1400361ad:	lahf   
   1400361ae:	icebp  
   1400361af:	inc    DWORD PTR [rsi-0x2800a16e]
   1400361b5:	mov    edi,0xdff0ff4e
   1400361ba:	pop    rbx
   1400361bb:	(bad)  
   1400361bc:	cli    
   1400361bd:	out    dx,al
   1400361be:	imul   edi,edi,0xff79f4fd
   1400361c4:	(bad)  
   1400361c5:	test   BYTE PTR [rbp-0x70050001],0xff
   1400361cc:	(bad)  
   1400361cd:	sti    
   1400361ce:	cwde   
   1400361cf:	call   rax
   1400361d1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400361d2:	rex.WRX in al,0xa9
   1400361d5:	outs   dx,DWORD PTR ds:[rsi]
   1400361d6:	sbb    eax,0x52
	...
   140036257:	add    BYTE PTR [rbp-0x22],al
   14003625a:	dec    DWORD PTR [rcx]
   14003625c:	cmp    eax,0x927efde7
   140036261:	(bad)  
   140036262:	(bad)  
   140036263:	call   0x136fb5ad4
   140036268:	and    eax,0x2fff4d6
   14003626d:	mov    ebx,0x8f24fff9
   140036272:	mov    ah,0xff
   140036274:	mov    eax,0xe8ff58af
   140036279:	fcomp  DWORD PTR [rdi-0x1]
   14003627c:	stc    
   14003627d:	lock outs dx,DWORD PTR ds:[rsi]
   14003627f:	(bad)  
   140036280:	std    
   140036281:	idiv   BYTE PTR [rdi-0x1]
   140036284:	(bad)  
   140036285:	cli    
   140036286:	mov    ?,edi
   140036288:	(bad)  
   140036289:	cld    
   14003628a:	xchg   edi,eax
   14003628b:	(bad)  
   14003628c:	(bad)  
   14003628d:	sti    
   14003628e:	(bad)  
   14003628f:	push   QWORD PTR [rbp-0x562bd07e]
   140036295:	outs   dx,DWORD PTR ds:[rsi]
   140036296:	sbb    eax,0x1b
	...
   140036317:	add    BYTE PTR [rsi],bh
   140036319:	fdiv   st(7),st
   14003631b:	add    DWORD PTR [rdx-0x18],ecx
   14003631e:	jmp    FWORD PTR [rip+0xffffffffdafef762]        # 0x11b025a86
   140036324:	test   al,bh
   140036326:	idiv   cl
   140036328:	rex.WXB out 0xf5,eax
   14003632b:	dec    DWORD PTR [rax]
   14003632d:	iret   
   14003632e:	cli    
   14003632f:	inc    DWORD PTR [rcx]
   140036331:	mov    al,0xfc
   140036333:	push   QWORD PTR [rax-0x68]
   140036336:	cmp    bh,0xd8
   140036339:	retf   
   14003633a:	pop    rdi
   14003633b:	push   rbx
   14003633d:	(bad)  
   14003633e:	jne    0x14003633f
   140036340:	std    
   140036341:	test   BYTE PTR [rsi-0x6d030001],0xff
   140036348:	(bad)  
   140036349:	sti    
   14003634a:	(bad)  
   14003634b:	(bad)  
   14003634c:	(bad)  
   14003634d:	cld    
   14003634e:	lahf   
   14003634f:	inc    edi
   140036351:	popf   
   140036352:	rex.WRX icebp 
   140036354:	mov    ch,0x81
   140036356:	(bad)  
   140036357:	(bad)  
   140036358:	test   eax,0xa9ce1d6f
   14003635d:	outs   dx,DWORD PTR ds:[rsi]
   14003635e:	sbb    eax,0x1d6ea8ce
   140036363:	iret   
   140036364:	test   al,0x6e
   140036366:	sbb    eax,0x1d6ea7cf
   14003636b:	iret   
   14003636c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003636d:	ins    DWORD PTR es:[rdi],dx
   14003636e:	sbb    eax,0x1c6da6cf
   140036373:	iret   
   140036374:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140036375:	ins    BYTE PTR es:[rdi],dx
   140036376:	sbb    al,0xd0
   140036378:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140036379:	ins    BYTE PTR es:[rdi],dx
   14003637a:	sbb    al,0xd0
   14003637c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003637d:	imul   ebx,DWORD PTR [rax+rdx*8],0xffffffa4
   140036381:	imul   ebx,DWORD PTR [rcx+rdx*8],0xffffffa3
   140036385:	push   0x1c
   140036387:	shl    DWORD PTR [rdx-0x5d2ee396],1
   14003638d:	push   0x1b
   14003638f:	shl    BYTE PTR [rcx-0x5e2de497],cl
   140036395:	imul   ebx,DWORD PTR [rbx],0x1b68a0d2
   14003639b:	rcr    DWORD PTR [rdi-0x602ce498],cl
   1400363a1:	addr32 sbb edx,ebx
   1400363a4:	sahf   
   1400363a5:	addr32 sbb dl,ah
   1400363a8:	sahf   
   1400363a9:	data16 sbb dl,ah
   1400363ac:	popf   
   1400363ad:	data16 sbb dl,ah
   1400363b0:	pushf  
   1400363b1:	gs sbb dl,ch
   1400363b4:	fwait
   1400363b5:	fs sbb dl,ch
   1400363b8:	cdq    
   1400363b9:	movsxd ebx,DWORD PTR [rcx]
   1400363bb:	(bad)  
   1400363bc:	cwde   
   1400363bd:	(bad)  
   1400363be:	sbb    esi,edx
   1400363c0:	xchg   esi,eax
   1400363c1:	(bad)  
   1400363c2:	sbb    al,al
   1400363c4:	xchg   ebp,eax
   1400363c5:	(bad)  
   1400363c6:	sbb    BYTE PTR [rdx+0x0],dh
	...
   1400363d9:	add    BYTE PTR [rax],al
   1400363db:	add    BYTE PTR [rax-0x2b],cl
   1400363de:	dec    DWORD PTR [rip+0xffffffff8afdeb3b]        # 0xcb014f1f
   1400363e4:	popf   
   1400363e5:	cli    
   1400363e6:	idiv   bl
   1400363e8:	jne    0x1400363e2
   1400363ea:	stc    
   1400363eb:	jmp    FWORD PTR [rbx]
   1400363ed:	jrcxz  0x1400363ec
   1400363ef:	inc    DWORD PTR [rax]
   1400363f1:	(bad)  
   1400363f2:	(bad)  
   1400363f3:	dec    DWORD PTR [rcx]
   1400363f5:	movabs ds:0xdde5ff76b3a2ffe5,eax
   1400363fe:	js     0x1400363ff
   140036400:	stc    
   140036401:	hlt    
   140036402:	mov    edi,edi
   140036404:	(bad)  
   140036405:	sti    
   140036406:	xchg   esi,eax
   140036407:	(bad)  
   140036408:	(bad)  
   140036409:	cld    
   14003640a:	sahf   
   14003640b:	(bad)  
   14003640c:	(bad)  
   14003640d:	std    
   14003640e:	movabs eax,ds:0xa2fbffffa3fdffff
   140036417:	(bad)  
   140036418:	(bad)  
   140036419:	cli    
   14003641a:	movabs ds:0xa5faffffa3faffff,al
   140036423:	(bad)  
   140036424:	(bad)  
   140036425:	cli    
   140036426:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140036427:	(bad)  
   140036428:	(bad)  
   140036429:	cli    
   14003642a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14003642b:	(bad)  
   14003642c:	(bad)  
   14003642d:	cli    
   14003642e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14003642f:	(bad)  
   140036430:	(bad)  
   140036431:	cli    
   140036432:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140036433:	(bad)  
   140036434:	(bad)  
   140036435:	cli    
   140036436:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140036437:	(bad)  
   140036438:	(bad)  
   140036439:	cli    
   14003643a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14003643b:	(bad)  
   14003643c:	(bad)  
   14003643d:	cli    
   14003643e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14003643f:	(bad)  
   140036440:	(bad)  
   140036441:	cli    
   140036442:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140036443:	(bad)  
   140036444:	(bad)  
   140036445:	cli    
   140036446:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140036447:	(bad)  
   140036448:	(bad)  
   140036449:	stc    
   14003644a:	movabs ds:0xa2faffffa2faffff,eax
   140036453:	(bad)  
   140036454:	(bad)  
   140036455:	cli    
   140036456:	movabs eax,ds:0x9cf7ffffa0f8ffff
   14003645f:	(bad)  
   140036460:	push   rsi
   140036462:	cwde   
   140036463:	(bad)  
   140036464:	push   rsp
   140036466:	xchg   ebx,eax
   140036467:	(bad)  
   140036468:	push   rcx
   14003646a:	mov    bh,bh
   14003646c:	(bad)  
   14003646d:	(bad)  
   14003646e:	(bad)  
   14003646f:	(bad)  
   140036470:	std    
   140036471:	loopne 0x1400364ed
   140036473:	(bad)  
   140036474:	cli    
   140036475:	xlat   BYTE PTR ds:[rbx]
   140036476:	jno    0x140036477
   140036478:	test   ch,0x68
   14003647b:	(bad)  
   14003647c:	out    dx,eax
   14003647d:	mov    esi,0xa5ddff5c
   140036482:	rex.WB cld 
   140036484:	xchg   edi,eax
   140036485:	(bad)  
   140036486:	sbb    DWORD PTR [rcx+0x0],ebx
	...
   14003649c:	(bad)  
   14003649d:	retf   
   14003649e:	inc    DWORD PTR [rcx]
   1400364a0:	rex.WXB in al,dx
   1400364a2:	jmp    FWORD PTR [rdi]
   1400364a4:	movsxd esp,ebp
   1400364a6:	repnz not BYTE PTR [rbp+0x53fffcfd]
   1400364ad:	cmc    
   1400364ae:	(bad)  
   1400364af:	inc    DWORD PTR [rax]
   1400364b1:	(bad)  
   1400364b2:	(bad)  
   1400364b3:	inc    DWORD PTR [rax]
   1400364b5:	mov    edx,0x9e37ffff
   1400364ba:	mov    edx,0x7dc9c4ff
   1400364bf:	(bad)  
   1400364c0:	out    dx,al
   1400364c1:	(bad)  
   1400364c2:	mov    edi,edi
   1400364c4:	std    
   1400364c5:	cli    
   1400364c6:	(bad)  
   1400364c7:	(bad)  
   1400364c8:	(bad)  
   1400364c9:	std    
   1400364ca:	lahf   
   1400364cb:	(bad)  
   1400364cc:	(bad)  
   1400364cd:	cld    
   1400364ce:	movabs ds:0xa5fdffffa4fdffff,al
   1400364d7:	(bad)  
   1400364d8:	(bad)  
   1400364d9:	std    
   1400364da:	test   al,0xff
   1400364dc:	(bad)  
   1400364dd:	std    
   1400364de:	test   al,0xff
   1400364e0:	(bad)  
   1400364e1:	std    
   1400364e2:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400364e3:	(bad)  
   1400364e4:	(bad)  
   1400364e5:	std    
   1400364e6:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400364e7:	(bad)  
   1400364e8:	(bad)  
   1400364e9:	std    
   1400364ea:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400364eb:	(bad)  
   1400364ec:	(bad)  
   1400364ed:	std    
   1400364ee:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400364ef:	(bad)  
   1400364f0:	(bad)  
   1400364f1:	cld    
   1400364f2:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400364f3:	(bad)  
   1400364f4:	(bad)  
   1400364f5:	cld    
   1400364f6:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400364f7:	(bad)  
   1400364f8:	(bad)  
   1400364f9:	cld    
   1400364fa:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400364fb:	(bad)  
   1400364fc:	(bad)  
   1400364fd:	sti    
   1400364fe:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400364ff:	(bad)  
   140036500:	(bad)  
   140036501:	cli    
   140036502:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140036503:	(bad)  
   140036504:	(bad)  
   140036505:	cli    
   140036506:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140036507:	(bad)  
   140036508:	(bad)  
   140036509:	stc    
   14003650a:	movabs ds:0xa1f8ffffa2f9ffff,eax
   140036513:	(bad)  
   140036514:	push   rdi
   140036516:	sahf   
   140036517:	(bad)  
   140036518:	push   rbp
   14003651a:	pushf  
   14003651b:	(bad)  
   14003651c:	push   rsp
   14003651e:	cwde   
   14003651f:	(bad)  
   140036520:	push   rdx
   140036522:	xchg   ebx,eax
   140036523:	(bad)  
   140036524:	(bad)  
   140036525:	out    dx,eax
   140036526:	mov    edi,edi
   140036528:	(bad)  
   140036529:	jmp    0x1400364ad
   14003652b:	(bad)  
   14003652c:	(bad)  
   14003652d:	out    0x76,al
   14003652f:	(bad)  
   140036530:	sti    
   140036531:	(bad)  [rbp-0x1]
   140036534:	not    dl
   140036536:	(bad)  
   140036537:	push   rdx
   140036539:	(bad)  
   14003653a:	push   rsi
   14003653b:	(bad)  
   14003653c:	in     al,dx
   14003653d:	mov    edx,0xa6e1ff49
   140036542:	cmp    edi,ebp
   140036544:	cwde   
   140036545:	movsxd ebx,DWORD PTR [rcx]
   140036547:	leave  
	...
   140036560:	rex.WB loopne 0x140036562
   140036563:	or     dh,BYTE PTR [rbp+rbp*4-0x6f]
   140036567:	loope  0x140036512
   140036569:	(bad)  
   14003656a:	cld    
   14003656b:	inc    DWORD PTR [rax+0x2ffffffe]
   140036571:	(bad)  
   140036572:	(bad)  
   140036573:	inc    DWORD PTR [rax]
   140036575:	(bad)  
   140036576:	(bad)  
   140036577:	inc    DWORD PTR [rcx]
   140036579:	mov    bl,0xff
   14003657b:	jmp    FWORD PTR [rsi-0x5a]
   14003657e:	lahf   
   14003657f:	(bad)  
   140036580:	fcmovu st,st(0)
   140036582:	xchg   bh,bh
   140036584:	hlt    
   140036585:	repnz xchg edi,eax
   140036587:	(bad)  
   140036588:	(bad)  
   140036589:	cld    
   14003658a:	sahf   
   14003658b:	(bad)  
   14003658c:	(bad)  
   14003658d:	cld    
   14003658e:	movabs ds:0xa6feffffa5feffff,al
   140036597:	(bad)  
   140036598:	(bad)  
   140036599:	(bad)  
   14003659a:	test   al,0xff
   14003659c:	(bad)  
   14003659d:	(bad)  
   14003659e:	test   al,0xff
   1400365a0:	(bad)  
   1400365a1:	(bad)  
   1400365a2:	test   al,0xff
   1400365a4:	(bad)  
   1400365a5:	(bad)  
   1400365a6:	test   al,0xff
   1400365a8:	(bad)  
   1400365a9:	std    
   1400365aa:	test   al,0xff
   1400365ac:	(bad)  
   1400365ad:	std    
   1400365ae:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400365af:	(bad)  
   1400365b0:	(bad)  
   1400365b1:	std    
   1400365b2:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400365b3:	(bad)  
   1400365b4:	(bad)  
   1400365b5:	cld    
   1400365b6:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400365b7:	(bad)  
   1400365b8:	(bad)  
   1400365b9:	cld    
   1400365ba:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400365bb:	(bad)  
   1400365bc:	(bad)  
   1400365bd:	sti    
   1400365be:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400365bf:	(bad)  
   1400365c0:	(bad)  
   1400365c1:	sti    
   1400365c2:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400365c3:	(bad)  
   1400365c4:	(bad)  
   1400365c5:	cli    
   1400365c6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400365c7:	(bad)  
   1400365c8:	(bad)  
   1400365c9:	cli    
   1400365ca:	movabs ds:0xa1f8ffffa2f9ffff,eax
   1400365d3:	(bad)  
   1400365d4:	push   rdi
   1400365d6:	sahf   
   1400365d7:	(bad)  
   1400365d8:	push   rbp
   1400365da:	fwait
   1400365db:	(bad)  
   1400365dc:	push   rsp
   1400365de:	xchg   esi,eax
   1400365df:	(bad)  
   1400365e0:	push   rdx
   1400365e2:	xchg   ecx,eax
   1400365e3:	(bad)  
   1400365e4:	push   rax
   1400365e6:	mov    bh,bh
   1400365e8:	(bad)  
   1400365e9:	(bad)  
   1400365ea:	jle    0x1400365eb
   1400365ec:	(bad)  
   1400365ed:	in     eax,0x70
   1400365ef:	(bad)  
   1400365f0:	cli    
   1400365f1:	fsub   QWORD PTR [rbp-0x1]
   1400365f4:	not    al
   1400365f6:	pop    rcx
   1400365f7:	push   rdx
   1400365f9:	ror    DWORD PTR [rbx-0x1],0xec
   1400365fd:	mov    eax,0xa3e1ff3e
   140036602:	xor    bh,bh
   140036604:	(bad)  
   140036605:	fs sbb ebp,edx
	...
   140036624:	sahf   
   140036625:	mov    BYTE PTR [rsi+rax*8+0x73],al
   140036629:	loopne 0x14003660d
   14003662b:	jmp    QWORD PTR [rbp+0x68fffffe]
   140036631:	std    
   140036632:	(bad)  
   140036633:	call   QWORD PTR [rbx]
   140036635:	loop   0x140036636
   140036637:	inc    DWORD PTR [rax]
   140036639:	ret    
   14003663a:	(bad)  
   14003663b:	inc    DWORD PTR [rip+0xffffffff95fffbad]        # 0xd60361ee
   140036641:	mov    bh,0x9b
   140036643:	jmp    rdx
   140036645:	loopne 0x1400365da
   140036647:	push   rdi
   140036649:	cmc    
   14003664a:	sahf   
   14003664b:	(bad)  
   14003664c:	(bad)  
   14003664d:	cld    
   14003664e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003664f:	(bad)  
   140036650:	(bad)  
   140036651:	(bad)  
   140036652:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140036653:	(bad)  
   140036654:	(bad)  
   140036655:	(bad)  
   140036656:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140036657:	(bad)  
   140036658:	(bad)  
   140036659:	(bad)  
   14003665a:	test   al,0xff
   14003665c:	(bad)  
   14003665d:	(bad)  
   14003665e:	test   al,0xff
   140036660:	(bad)  
   140036661:	(bad)  
   140036662:	test   al,0xff
   140036664:	(bad)  
   140036665:	(bad)  
   140036666:	test   al,0xff
   140036668:	(bad)  
   140036669:	(bad)  
   14003666a:	test   al,0xff
   14003666c:	(bad)  
   14003666d:	(bad)  
   14003666e:	test   al,0xff
   140036670:	(bad)  
   140036671:	std    
   140036672:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140036673:	(bad)  
   140036674:	(bad)  
   140036675:	std    
   140036676:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140036677:	(bad)  
   140036678:	(bad)  
   140036679:	cld    
   14003667a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003667b:	(bad)  
   14003667c:	(bad)  
   14003667d:	cld    
   14003667e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003667f:	(bad)  
   140036680:	(bad)  
   140036681:	sti    
   140036682:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140036683:	(bad)  
   140036684:	(bad)  
   140036685:	cli    
   140036686:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140036687:	(bad)  
   140036688:	(bad)  
   140036689:	cli    
   14003668a:	movabs ds:0xa1f8ffffa2f9ffff,eax
   140036693:	(bad)  
   140036694:	(bad)  
   140036695:	clc    
   140036696:	lahf   
   140036697:	(bad)  
   140036698:	push   rbp
   14003669a:	fwait
   14003669b:	(bad)  
   14003669c:	push   rsp
   14003669e:	xchg   esi,eax
   14003669f:	(bad)  
   1400366a0:	push   rdx
   1400366a2:	xchg   ecx,eax
   1400366a3:	(bad)  
   1400366a4:	push   rax
   1400366a6:	xchg   edi,edi
   1400366a8:	(bad)  
   1400366a9:	jmp    0x140036729
   1400366ab:	(bad)  
   1400366ac:	(bad)  
   1400366ad:	in     eax,0x70
   1400366af:	(bad)  
   1400366b0:	cli    
   1400366b1:	fsub   QWORD PTR [rbp-0x1]
   1400366b4:	not    al
   1400366b6:	pop    rcx
   1400366b7:	push   rdx
   1400366b9:	ror    DWORD PTR [rbx-0x1],0xec
   1400366bd:	mov    dh,0x3e
   1400366bf:	(bad)  
   1400366c0:	fsub   QWORD PTR [rax+0x659bfd35]
   1400366c6:	sbb    cl,al
	...
   1400366e4:	mov    al,0x79
   1400366e6:	es mov cl,0x94
   1400366e9:	mov    ecx,0xfd97fc7e
   1400366ee:	(bad)  
   1400366ef:	call   QWORD PTR [rcx+0x3dfffffe]
   1400366f5:	icebp  
   1400366f6:	(bad)  
   1400366f7:	inc    DWORD PTR [rax]
   1400366f9:	sar    bh,cl
   1400366fb:	inc    DWORD PTR [rax]
   1400366fd:	mov    ebp,0xac1bffff
   140036702:	jrcxz  0x140036703
   140036704:	mov    al,0xc4
   140036706:	cdq    
   140036707:	(bad)  
   140036708:	call   0x13a0300f3
   14003670d:	clc    
   14003670e:	movabs eax,ds:0xa5feffffa6feffff
   140036717:	(bad)  
   140036718:	(bad)  
   140036719:	(bad)  
   14003671a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003671b:	(bad)  
   14003671c:	(bad)  
   14003671d:	(bad)  
   14003671e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003671f:	(bad)  
   140036720:	(bad)  
   140036721:	(bad)  
   140036722:	test   al,0xff
   140036724:	(bad)  
   140036725:	(bad)  
   140036726:	test   al,0xff
   140036728:	(bad)  
   140036729:	(bad)  
   14003672a:	test   al,0xff
   14003672c:	(bad)  
   14003672d:	(bad)  
   14003672e:	test   al,0xff
   140036730:	(bad)  
   140036731:	std    
   140036732:	test   al,0xff
   140036734:	(bad)  
   140036735:	std    
   140036736:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140036737:	(bad)  
   140036738:	(bad)  
   140036739:	std    
   14003673a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003673b:	(bad)  
   14003673c:	(bad)  
   14003673d:	cld    
   14003673e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003673f:	(bad)  
   140036740:	(bad)  
   140036741:	sti    
   140036742:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140036743:	(bad)  
   140036744:	(bad)  
   140036745:	sti    
   140036746:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140036747:	(bad)  
   140036748:	(bad)  
   140036749:	cli    
   14003674a:	movabs ds:0xa0f8feffa1f9feff,al
   140036753:	(bad)  
   140036754:	(bad)  
   140036755:	neg    DWORD PTR [rsi-0x660a0001]
   14003675b:	(bad)  
   14003675c:	push   rsp
   14003675e:	xchg   ebp,eax
   14003675f:	(bad)  
   140036760:	push   rdx
   140036762:	nop
   140036763:	(bad)  
   140036764:	push   rax
   140036766:	xchg   edi,edi
   140036768:	(bad)  
   140036769:	jmp    0x1400367e7
   14003676b:	(bad)  
   14003676c:	(bad)  
   14003676d:	in     eax,0x70
   14003676f:	(bad)  
   140036770:	cli    
   140036771:	(bad)  [rbp-0x1]
   140036774:	not    al
   140036776:	pop    rax
   140036777:	push   rax
   140036779:	ror    DWORD PTR [rdx-0x1],0xea
   14003677d:	mov    ch,0x3d
   14003677f:	(bad)  
   140036780:	fcomp  DWORD PTR [rsp+rsi*1+0x1a669dfa]
   140036787:	mov    ebx,0x0
	...
   1400367a4:	mov    ah,0x77
   1400367a6:	and    BYTE PTR [rsi-0x8ad4b35],dl
   1400367ac:	je     0x14003677b
   1400367ae:	mov    ah,0xff
   1400367b0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400367b1:	(bad)  
   1400367b2:	(bad)  
   1400367b3:	jmp    FWORD PTR [rsi-0x2]
   1400367b6:	(bad)  
   1400367b7:	inc    DWORD PTR [rsp+riz*8]
   1400367ba:	(bad)  
   1400367bb:	inc    DWORD PTR [rax]
   1400367bd:	retf   
   1400367be:	(bad)  
   1400367bf:	inc    DWORD PTR [rax]
   1400367c1:	mov    esp,0xaf41ffff
   1400367c6:	(bad)  
   1400367c7:	inc    edx
   1400367c9:	int    0x99
   1400367cb:	(bad)  
   1400367cc:	in     eax,dx
   1400367cd:	in     al,dx
   1400367ce:	popf   
   1400367cf:	inc    ebx
   1400367d1:	rex.WXB
   1400367d2:	rex.WXB
   1400367d3:	lock mov bh,0x80
   1400367d6:	sub    al,0xd1
   1400367d8:	lods   eax,DWORD PTR ds:[rsi]
   1400367d9:	jb     0x1400367f9
   1400367db:	int3   
   1400367dc:	lods   eax,DWORD PTR ds:[rsi]
   1400367dd:	jb     0x1400367fd
   1400367df:	int3   
   1400367e0:	lods   al,BYTE PTR ds:[rsi]
   1400367e1:	jno    0x140036801
   1400367e3:	int3   
   1400367e4:	lods   al,BYTE PTR ds:[rsi]
   1400367e5:	jno    0x140036805
   1400367e7:	int    0xab
   1400367e9:	jo     0x140036809
   1400367eb:	int    0xaa
   1400367ed:	jo     0x14003680d
   1400367ef:	int    0xaa
   1400367f1:	jo     0x140036810
   1400367f3:	(bad)  
   1400367f4:	test   eax,0xa9ce1d6f
   1400367f9:	outs   dx,DWORD PTR ds:[rsi]
   1400367fa:	sbb    eax,0x1d6ea8ce
   1400367ff:	iret   
   140036800:	test   al,0x6e
   140036802:	sbb    eax,0x1d6da7cf
   140036807:	iret   
   140036808:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140036809:	ins    DWORD PTR es:[rdi],dx
   14003680a:	sbb    eax,0x1c6da6cf
   14003680f:	iret   
   140036810:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140036811:	ins    BYTE PTR es:[rdi],dx
   140036812:	sbb    al,0xd0
   140036814:	test   al,0x71
   140036816:	and    edx,edx
   140036818:	mov    esi,0xffef4492
   14003681d:	repz xchg ebp,eax
   14003681f:	(bad)  
   140036820:	push   rcx
   140036822:	nop
   140036823:	(bad)  
   140036824:	(bad)  
   140036825:	out    dx,eax
   140036826:	xchg   bh,bh
   140036828:	(bad)  
   140036829:	(bad)  
   14003682a:	jnp    0x14003682b
   14003682c:	(bad)  
   14003682d:	jrcxz  0x14003689e
   14003682f:	(bad)  
   140036830:	stc    
   140036831:	fisub  DWORD PTR [rdi+rdi*8-0xb]
   140036835:	int    0x55
   140036837:	push   rax
   140036839:	ror    DWORD PTR [rax-0x1],0xea
   14003683d:	mov    dl,0x3d
   14003683f:	dec    esp
   140036841:	xchg   edx,eax
   140036842:	xor    eax,0x1a669df5
   140036847:	popf   
	...
   140036864:	mov    ah,0x77
   140036866:	and    BYTE PTR [rdi-0x28],dh
   140036869:	test   eax,0xcab8ec3f
   14003686e:	jno    0x14003686f
   140036870:	jb     0x140036850
   140036872:	in     al,0xff
   140036874:	lahf   
   140036875:	(bad)  
   140036876:	(bad)  
   140036877:	call   QWORD PTR [rcx+rdi*8-0x1]
   14003687b:	inc    DWORD PTR [rax]
   14003687d:	(bad)  
   14003687f:	inc    DWORD PTR [rax]
   140036881:	enter  0xffff,0x0
   140036885:	mov    ecx,0xb264ffff
   14003688a:	mov    ebp,0x98d4ceff
   14003688f:	jmp    FWORD PTR [rdi-0x572cd386]
   140036895:	outs   dx,DWORD PTR ds:[rsi]
   140036896:	and    DWORD PTR [rsi],edx
	...
   1400368d4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400368d5:	ins    BYTE PTR es:[rdi],dx
   1400368d6:	sbb    al,0x7
   1400368d8:	test   al,0x71
   1400368da:	and    edx,edx
   1400368dc:	push   rdx
   1400368de:	xchg   ebx,eax
   1400368df:	(bad)  
   1400368e0:	push   rcx
   1400368e2:	mov    ?,edi
   1400368e4:	(bad)  
   1400368e5:	in     eax,dx
   1400368e6:	test   edi,edi
   1400368e8:	(bad)  
   1400368e9:	call   0x124026867
   1400368ee:	outs   dx,BYTE PTR ds:[rsi]
   1400368ef:	(bad)  
   1400368f0:	clc    
   1400368f1:	xlat   BYTE PTR ds:[rbx]
   1400368f2:	(bad)  
   1400368f3:	push   rbp
   1400368f5:	retf   
   1400368f6:	push   rsp
   1400368f7:	(bad)  
   1400368f8:	out    dx,eax
   1400368f9:	mov    edi,0xafe8ff48
   1400368fe:	cmp    edi,edi
   140036900:	mov    edi,0x9eed3388
   140036905:	sbb    bh,BYTE PTR [eax+0x0]
	...
   140036921:	add    BYTE PTR [rax],al
   140036923:	add    BYTE PTR [rdi+rsi*2-0x6936b9e0],dh
   14003692a:	cmp    ebx,ebp
   14003692c:	in     eax,dx
   14003692d:	ror    DWORD PTR [rbp-0x1],cl
   140036930:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140036931:	rcl    BYTE PTR [rax-0x20d7b01],cl
   140036937:	call   QWORD PTR [rbp+0x43ffffff]
   14003693d:	cmc    
   14003693e:	(bad)  
   14003693f:	inc    DWORD PTR [rax]
   140036941:	(bad)  
   140036943:	inc    DWORD PTR [rax]
   140036945:	(bad)  
   140036946:	(bad)  
   140036947:	inc    DWORD PTR [rax]
   140036949:	mov    ecx,0xbb7dffff
   14003694e:	mov    dl,0xff
   140036950:	mov    dl,0x92
   140036952:	rex.WRX jrcxz 0x1400368fc
   140036955:	outs   dx,BYTE PTR ds:[rsi]
   140036956:	and    BYTE PTR [rdi+0x0],cl
	...
   140036991:	add    BYTE PTR [rax],al
   140036993:	add    BYTE PTR [rsi-0x48d8e393],ah
   140036999:	test   BYTE PTR [rbx],dh
   14003699b:	fdivr  st,st(7)
   14003699d:	repnz xchg ecx,eax
   14003699f:	(bad)  
   1400369a0:	push   rax
   1400369a2:	(bad)  
   1400369a3:	(bad)  
   1400369a4:	(bad)  
   1400369a5:	in     al,dx
   1400369a6:	cmp    edi,0xff77e7ff
   1400369ac:	std    
   1400369ad:	fild   QWORD PTR [rdx-0x1]
   1400369b0:	not    esp
   1400369b2:	pop    rdi
   1400369b3:	push   rbx
   1400369b5:	leave  
   1400369b6:	push   rdx
   1400369b7:	(bad)  
   1400369b8:	out    dx,eax
   1400369b9:	mov    ebp,0xace6ff46
   1400369be:	cmp    edi,edi
   1400369c0:	scas   eax,DWORD PTR es:[rdi]
   1400369c1:	js     0x1400369ee
   1400369c3:	loopne 0x140036964
   1400369c5:	sbb    eax,DWORD PTR [ecx+0x0]
	...
   1400369e1:	add    BYTE PTR [rax],al
   1400369e3:	add    BYTE PTR [rbp-0x4aeadf88],dh
   1400369e9:	jbe    0x140036a0b
   1400369eb:	(bad)
   1400369ee:	rex.WXB (bad) 
   1400369f0:	jrcxz  0x1400369ce
   1400369f2:	ins    BYTE PTR es:[rdi],dx
   1400369f3:	(bad)  
   1400369f4:	jge    0x1400369bf
   1400369f6:	stos   BYTE PTR es:[rdi],al
   1400369f7:	call   QWORD PTR [rsi-0x77000001]
   1400369fd:	(bad)  
   1400369fe:	(bad)  
   1400369ff:	(bad)  
   140036a00:	cmp    dh,dl
   140036a02:	(bad)  
   140036a03:	inc    DWORD PTR [rax]
   140036a05:	(bad)  
   140036a07:	inc    DWORD PTR [rax]
   140036a09:	sar    edi,0xff
   140036a0c:	add    DWORD PTR [rdx-0x52730001],edi
   140036a12:	mov    ?,edi
   140036a14:	pushf  
   140036a15:	ins    DWORD PTR es:[rdi],dx
   140036a16:	sub    DWORD PTR [rbp+0x0],ebx
	...
   140036a54:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140036a55:	ins    DWORD PTR es:[rdi],dx
   140036a56:	sbb    eax,0x4da5d058
   140036a5b:	in     eax,0xff
   140036a5d:	repnz mov ?,edi
   140036a60:	(bad)  
   140036a61:	out    dx,eax
   140036a62:	mov    edi,edi
   140036a64:	(bad)  
   140036a65:	jmp    0x140036ae6
   140036a67:	(bad)  
   140036a68:	jmp    rsi
   140036a6a:	jno    0x140036a6b
   140036a6c:	cld    
   140036a6d:	fisub  DWORD PTR [rdi-0x1]
   140036a70:	not    bl
   140036a72:	pop    rbx
   140036a73:	push   rcx
   140036a75:	(bad)
   140036a78:	in     eax,dx
   140036a79:	mov    eax,0xa3e0ff43
   140036a7e:	cmp    ebp,edi
   140036a80:	movabs al,ds:0xf1b689fcc1b68
	...
   140036aa5:	add    BYTE PTR [rax],al
   140036aa7:	add    BYTE PTR [rbp-0x1b6cdf88],dh
   140036aad:	mov    bh,0x48
   140036aaf:	hlt    
   140036ab0:	mul    cl
   140036ab2:	pop    rsi
   140036ab3:	call   rbp
   140036ab5:	fiadd  WORD PTR [rax-0x3f329001]
   140036abb:	jmp    QWORD PTR [rbx-0x7d000001]
   140036ac1:	(bad)  
   140036ac2:	(bad)  
   140036ac3:	jmp    FWORD PTR [rip+0xffffef]        # 0x141036ab8
   140036ac9:	xlat   BYTE PTR ds:[rbx]
   140036aca:	(bad)  
   140036acb:	inc    DWORD PTR [rax]
   140036acd:	sar    edi,0xff
   140036ad0:	add    DWORD PTR [rsi+rdi*8+0x597d79ff],edi
   140036ad7:	jrcxz  0x140036a7a
   140036ad9:	ja     0x140036b0c
   140036adb:	add    BYTE PTR ss:[rax],al
	...
   140036b12:	add    BYTE PTR [rax],al
   140036b14:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140036b15:	outs   dx,BYTE PTR ds:[rsi]
   140036b16:	sbb    eax,0x77dcf5a6
   140036b1b:	clc    
   140036b1c:	push   rcx
   140036b1e:	mov    edi,?
   140036b20:	(bad)  
   140036b21:	out    dx,eax
   140036b22:	test   edi,edi
   140036b24:	(bad)  
   140036b25:	jmp    0x140036ba0
   140036b27:	(bad)  
   140036b28:	(bad)  
   140036b29:	loop   0x140036b9a
   140036b2b:	(bad)  
   140036b2c:	stc    
   140036b2d:	xlat   BYTE PTR ds:[rbx]
   140036b2e:	movsxd edi,edi
   140036b30:	cmc    
   140036b31:	iret   
   140036b32:	push   rdi
   140036b33:	(bad)  
   140036b34:	out    dx,eax
   140036b35:	ror    BYTE PTR [rdi+rdi*8-0x15],0xb3
   140036b3a:	cmp    eax,0x378fc8ff
   140036b3f:	icebp  
   140036b40:	movabs eax,ds:0x8d1b69
	...
   140036b65:	add    BYTE PTR [rax],al
   140036b67:	add    BYTE PTR [rbp-0x34b7df88],dh
   140036b6d:	xchg   edi,eax
   140036b6e:	cmp    ebx,esp
   140036b70:	neg    ch
   140036b72:	push   rsp
   140036b73:	(bad)  
   140036b74:	cli    
   140036b75:	jmp    0x140036be3
   140036b77:	dec    eax
   140036b79:	fisttp WORD PTR [rsi-0x2e2c9101]
   140036b7f:	jmp    FWORD PTR [rax+0x79ffffff]
   140036b85:	(bad)  
   140036b86:	(bad)  
   140036b87:	jmp    FWORD PTR [rcx]
   140036b89:	out    dx,al
   140036b8a:	(bad)  
   140036b8b:	inc    DWORD PTR [rax]
   140036b8d:	(bad)  
   140036b8e:	(bad)  
   140036b8f:	inc    DWORD PTR [rax]
   140036b91:	ret    
   140036b92:	(bad)  
   140036b93:	inc    DWORD PTR [rcx]
   140036b95:	mov    bh,0xfd
   140036b97:	std    
   140036b98:	jno    0x140036c0d
   140036b9a:	rex.WRX movabs rbp,0x106b846f
	...
   140036bd0:	test   eax,0xc7441d6f
   140036bd5:	xchg   edi,eax
   140036bd6:	rex.B loopne 0x140036bd8
   140036bd9:	icebp  
   140036bda:	(bad)  
   140036bdb:	(bad)  
   140036bdc:	(bad)  
   140036bdd:	out    dx,eax
   140036bde:	mov    bh,bh
   140036be0:	(bad)  
   140036be1:	jmp    0x140036b64
   140036be3:	(bad)  
   140036be4:	(bad)  
   140036be5:	out    0x74,eax
   140036be7:	(bad)  
   140036be8:	cld    
   140036be9:	fild   QWORD PTR [rcx-0x1]
   140036bec:	stc    
   140036bed:	(bad)  
   140036bee:	pop    rsi
   140036bef:	push   rdx
   140036bf1:	leave  
   140036bf2:	push   rdx
   140036bf3:	(bad)  
   140036bf4:	out    dx,al
   140036bf5:	mov    esp,0xabe5ff46
   140036bfa:	jmp    FWORD PTR ds:[rdi-0x5e22d688]
   140036c01:	imul   ebx,DWORD PTR [rbx],0x55000039
   140036c07:	add    DWORD PTR [rax],eax
	...
   140036c25:	add    BYTE PTR [rax],al
   140036c27:	add    BYTE PTR [rsi-0x49fddf88],dh
   140036c2d:	js     0x140036c4f
   140036c2f:	lods   al,BYTE PTR ds:[rsi]
   140036c30:	call   0x13bf8aef1
   140036c35:	jmp    0x140036c9c
   140036c37:	(bad)  
   140036c38:	std    
   140036c39:	lock jbe 0x140036c3b
   140036c3c:	mov    esi,0x6aff9cdf
   140036c41:	(bad)  
   140036c42:	(bad)  
   140036c44:	lods   eax,DWORD PTR ds:[rsi]
   140036c45:	(bad)  
   140036c46:	(bad)  
   140036c47:	push   QWORD PTR [rbp-0x1]
   140036c4a:	(bad)  
   140036c4b:	jmp    FWORD PTR [rip+0xffffee]        # 0x141036c3f
   140036c51:	xlat   BYTE PTR ds:[rbx]
   140036c52:	(bad)  
   140036c53:	inc    DWORD PTR [rax]
   140036c55:	ret    
   140036c56:	(bad)  
   140036c57:	inc    DWORD PTR [rax]
   140036c59:	mov    dl,0xfe
   140036c5b:	cld    
   140036c5c:	data16 jns 0x140036cbb
   140036c5f:	test   al,0x58
   140036c61:	jg     0x140036beb
   140036c63:	or     eax,0x0
	...
   140036c8c:	stos   BYTE PTR es:[rdi],al
   140036c8d:	outs   dx,DWORD PTR ds:[rsi]
   140036c8e:	sbb    eax,0x1c70ab1b
   140036c93:	mov    ebx,0xf977e1f9
   140036c98:	push   rdx
   140036c9a:	mov    edi,edi
   140036c9c:	(bad)  
   140036c9d:	out    dx,eax
   140036c9e:	test   edi,edi
   140036ca0:	(bad)  
   140036ca1:	(bad)  
   140036ca2:	jnp    0x140036ca3
   140036ca4:	(bad)  
   140036ca5:	jrcxz  0x140036d16
   140036ca7:	(bad)  
   140036ca8:	sti    
   140036ca9:	fisub  DWORD PTR [rdi+rdi*8-0x8]
   140036cad:	rcr    DWORD PTR [rdx-0x1],1
   140036cb0:	icebp  
   140036cb1:	(bad)  
   140036cb2:	rex.WRX (bad) 
   140036cb4:	jmp    0x140036c6d
   140036cb6:	rex.X dec edx
   140036cb9:	xchg   edx,eax
   140036cba:	xor    eax,0x1c6aa3f1
   140036cbf:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140036cc0:	add    BYTE PTR [rbp-0x30],ch
   140036cc3:	add    al,BYTE PTR [rax]
   140036cc5:	add    BYTE PTR [rbp+0x1],dl
	...
   140036cec:	mov    dh,0x78
   140036cee:	and    BYTE PTR [rsi-0x36],al
   140036cf1:	xchg   esi,eax
   140036cf2:	cmp    ebx,ebx
   140036cf4:	clc    
   140036cf5:	in     eax,0x59
   140036cf7:	(bad)  
   140036cf8:	std    
   140036cf9:	lock ins DWORD PTR es:[rdi],dx
   140036cfb:	(bad)  
   140036cfc:	(bad)  
   140036cfd:	repz jg 0x140036cff
   140036d00:	mov    eax,0x6cffa1e0
   140036d05:	fsub   st,st(1)
   140036d07:	jmp    QWORD PTR [rsi+0x77ffffff]
   140036d0d:	(bad)  
   140036d0e:	(bad)  
   140036d0f:	jmp    FWORD PTR [rdi]
   140036d11:	out    dx,eax
   140036d12:	(bad)  
   140036d13:	inc    DWORD PTR [rax]
   140036d15:	fdivr  st,st(7)
   140036d17:	inc    DWORD PTR [rax]
   140036d19:	ret    
   140036d1a:	(bad)  
   140036d1b:	inc    DWORD PTR [rax]
   140036d1d:	mov    ch,0xff
   140036d1f:	cld    
   140036d20:	(bad)  
   140036d21:	jns    0x140036d80
   140036d23:	mov    ebx,0x28517d84
	...
   140036d48:	stos   DWORD PTR es:[rdi],eax
   140036d49:	jo     0x140036d69
   140036d4b:	xor    BYTE PTR [rcx+rsi*2-0x2b0a45e3],ch
   140036d52:	imul   esi,edx,0xff8df3ff
   140036d58:	(bad)  
   140036d59:	out    dx,eax
   140036d5a:	xchg   bh,bh
   140036d5c:	(bad)  
   140036d5d:	in     al,dx
   140036d5e:	jle    0x140036d5f
   140036d60:	jmp    rdi
   140036d62:	jb     0x140036d63
   140036d64:	cld    
   140036d65:	fisubr WORD PTR [rcx-0x1]
   140036d68:	stc    
   140036d69:	(bad)  
   140036d6a:	pop    rdi
   140036d6b:	push   rbx
   140036d6d:	retf   0xff53
   140036d70:	out    dx,al
   140036d71:	mov    ebp,0xace4ff48
   140036d76:	rex jmp FWORD PTR [rdi-0x5f22d689]
   140036d7d:	ins    DWORD PTR es:[rdi],dx
   140036d7e:	and    BYTE PTR [rip+0x9e08900],dh        # 0x149e3f684
   140036d84:	add    BYTE PTR [rax],al
   140036d86:	push   rbp
   140036d87:	add    eax,DWORD PTR [rax]
	...
   140036dad:	add    BYTE PTR [rax],al
   140036daf:	add    BYTE PTR [rsi-0x2668df88],dh
   140036db5:	test   al,0x38
   140036db7:	(bad)  
   140036db8:	(bad)  
   140036db9:	in     al,dx
   140036dba:	movsxd edi,edi
   140036dbc:	(bad)  
   140036dbd:	hlt    
   140036dbe:	js     0x140036dbf
   140036dc0:	push   rsp
   140036dc2:	xchg   bh,bh
   140036dc4:	mov    dh,0xde
   140036dc6:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140036dc7:	jmp    FWORD PTR [rdx-0x27]
   140036dca:	jrcxz  0x140036dcb
   140036dcc:	movabs ds:0x39ffffff79ffffff,eax
   140036dd5:	icebp  
   140036dd6:	(bad)  
   140036dd7:	inc    DWORD PTR [rax]
   140036dd9:	(bad)  
   140036ddb:	inc    DWORD PTR [rax]
   140036ddd:	(bad)  
   140036dde:	(bad)  
   140036ddf:	inc    DWORD PTR [rax]
   140036de1:	mov    bh,0xff
   140036de3:	std    
   140036de4:	xchg   DWORD PTR fs:[rcx-0x1f],esi
   140036de8:	movabs al,ds:0xaf432174ad922e75
   140036df1:	jae    0x140036e12
   140036df3:	sub    DWORD PTR [rsi-0x51f5e08d],ebp
   140036df9:	jb     0x140036e19
   140036dfb:	or     al,0xad
   140036dfd:	jb     0x140036e1d
   140036dff:	sub    DWORD PTR [rbp-0x53b9e18e],ebp
   140036e05:	jno    0x140036e25
   140036e07:	(bad)  
   140036e08:	ror    DWORD PTR [rsi-0x220725c8],0x72
   140036e0f:	cmc    
   140036e10:	push   rdx
   140036e12:	(bad)  
   140036e13:	(bad)  
   140036e14:	push   rdx
   140036e16:	mov    bh,bh
   140036e18:	(bad)  
   140036e19:	out    dx,eax
   140036e1a:	cmp    bh,0xff
   140036e1d:	out    0x77,eax
   140036e1f:	(bad)  
   140036e20:	std    
   140036e21:	loop   0x140036e90
   140036e23:	(bad)  
   140036e24:	stc    
   140036e25:	fsub   DWORD PTR [rbx-0x1]
   140036e28:	test   dh,0x59
   140036e2b:	push   rdx
   140036e2d:	ret    
   140036e2e:	rex.WR (bad) 
   140036e30:	jmp    0xff02b1e9
   140036e35:	xchg   DWORD PTR [rdx],esi
   140036e37:	call   0xc41fdae1
   140036e3c:	add    edi,ecx
   140036e3e:	call   QWORD PTR [rax+rax*1]
   140036e41:	stos   BYTE PTR es:[rdi],al
   140036e42:	stc    
   140036e43:	sbb    eax,0x8701900
   140036e48:	add    BYTE PTR [rax],al
   140036e4a:	push   rbp
   140036e4b:	add    DWORD PTR [rax],eax
	...
   140036e6d:	add    BYTE PTR [rax],al
   140036e6f:	add    BYTE PTR [rsi-0x49e1de87],dh
   140036e75:	ja     0x140036e97
   140036e77:	mov    ebx,0xf442c1ec
   140036e7c:	push   rdx
   140036e7e:	ins    DWORD PTR es:[rdi],dx
   140036e7f:	(bad)  
   140036e80:	push   rbp
   140036e82:	jg     0x140036e83
   140036e84:	(bad)  
   140036e85:	clc    
   140036e86:	mov    edi,edi
   140036e88:	mov    dh,0xdf
   140036e8a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140036e8b:	jmp    QWORD PTR [rsi+rdx*8-0x21]
   140036e8f:	jmp    QWORD PTR [rbp+0x7fffffff]
   140036e95:	(bad)  
   140036e96:	(bad)  
   140036e97:	(bad)  
   140036e98:	cmp    eax,0xfffff3
   140036e9d:	(bad)  
   140036e9f:	inc    DWORD PTR [rax]
   140036ea1:	(bad)  
   140036ea2:	(bad)  
   140036ea3:	inc    DWORD PTR [rax]
   140036ea5:	mov    esp,0xb865ffff
   140036eaa:	scas   eax,DWORD PTR es:[rdi]
   140036eab:	stc    
   140036eac:	scas   eax,DWORD PTR es:[rdi]
   140036ead:	xchg   esp,eax
   140036eae:	rex.WRXB loope 0x140036e6a
   140036eb1:	xchg   DWORD PTR [rsi],esi
   140036eb3:	(bad)  
   140036eb4:	mov    al,0x76
   140036eb6:	and    al,0xce
   140036eb8:	mov    cl,0x79
   140036eba:	and    eax,0x348ac0ce
   140036ebf:	(bad)  
   140036ec0:	(bad)  
   140036ec1:	popf   
   140036ec2:	rex.RB fcomip st,st(4)
   140036ec5:	fnstenv [rsi+rsi*8-0x1]
   140036ec9:	hlt    
   140036eca:	nop
   140036ecb:	(bad)  
   140036ecc:	push   rbx
   140036ece:	mov    ?,edi
   140036ed0:	push   rdx
   140036ed2:	mov    bh,bh
   140036ed4:	(bad)  
   140036ed5:	out    dx,eax
   140036ed6:	(bad)  
   140036ed7:	(bad)  
   140036ed8:	(bad)  
   140036ed9:	jmp    0x140036f53
   140036edb:	(bad)  
   140036edc:	std    
   140036edd:	jrcxz  0x140036f4e
   140036edf:	(bad)  
   140036ee0:	stc    
   140036ee1:	(bad)  [rbp-0x1]
   140036ee4:	clc    
   140036ee5:	rcr    BYTE PTR [rbx-0x1],1
   140036ee8:	hlt    
   140036ee9:	(bad)  
   140036eea:	push   rax
   140036eeb:	(bad)  
   140036eec:	out    dx,al
   140036eed:	mov    eax,0x90c9ff45
   140036ef2:	xor    esp,ebp
   140036ef4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140036ef5:	ins    DWORD PTR es:[rdi],dx
   140036ef6:	sbb    al,0xaa
   140036ef8:	movabs ds:0x26ffcf090c206e,eax
   140036f01:	mov    edi,0x49003afe
   140036f06:	pushf  
   140036f07:	adc    eax,DWORD PTR [rax]
   140036f09:	add    BYTE PTR [rbp+0x3],dl
	...
   140036f34:	mov    dh,0x79
   140036f36:	and    DWORD PTR [rcx-0x38],eax
   140036f39:	xchg   ebx,eax
   140036f3a:	cmp    ebx,edx
   140036f3c:	cmc    
   140036f3d:	(bad)  
   140036f3e:	push   rax
   140036f3f:	clc    
   140036f40:	push   rdx
   140036f42:	jne    0x140036f43
   140036f44:	push   rsp
   140036f46:	test   edi,edi
   140036f48:	push   rdi
   140036f4a:	mov    edi,?
   140036f4c:	mov    edi,0x62ffa4df
   140036f51:	rcl    bl,1
   140036f53:	call   FWORD PTR [rdi-0x7d000002]
   140036f59:	(bad)  
   140036f5a:	(bad)  
   140036f5b:	inc    DWORD PTR [rsi-0xb]
   140036f5e:	(bad)  
   140036f5f:	inc    DWORD PTR [rax]
   140036f61:	fdivp  st(7),st
   140036f63:	inc    DWORD PTR [rax]
   140036f65:	enter  0xffff,0x0
   140036f69:	mov    ecx,0xbb2bffff
   140036f6e:	loope  0x140036f6f
   140036f70:	stos   BYTE PTR es:[rdi],al
   140036f71:	mov    esi,0xd3d6ff95
   140036f76:	mov    edi,?
   140036f78:	in     eax,dx
   140036f79:	out    0x91,al
   140036f7b:	(bad)  
   140036f7c:	stc    
   140036f7d:	lock xchg esp,eax
   140036f7f:	(bad)  
   140036f80:	(bad)  
   140036f81:	hlt    
   140036f82:	xchg   ebx,eax
   140036f83:	(bad)  
   140036f84:	push   rsp
   140036f86:	xchg   ecx,eax
   140036f87:	(bad)  
   140036f88:	push   rbx
   140036f8a:	mov    ?,edi
   140036f8c:	push   rcx
   140036f8e:	mov    edi,edi
   140036f90:	(bad)  
   140036f91:	out    dx,al
   140036f92:	(bad)  
   140036f93:	(bad)  
   140036f94:	(bad)  
   140036f95:	jmp    0x124026f13
   140036f9a:	outs   dx,DWORD PTR ds:[rsi]
   140036f9b:	(bad)  
   140036f9c:	sti    
   140036f9d:	fsub   QWORD PTR [rsi-0x1]
   140036fa0:	clc    
   140036fa1:	(bad)  
   140036fa2:	pop    rbp
   140036fa3:	push   rsp
   140036fa5:	enter  0xff53,0xee
   140036fa9:	mov    ebp,0x9ad2ff4a
   140036fae:	repz cmps DWORD PTR ss:[rsi],DWORD PTR es:[rdi]
   140036fb1:	outs   dx,BYTE PTR ds:[rsi]
   140036fb2:	sbb    eax,0x1d6da7c1
   140036fb7:	sbb    eax,0x0
   140036fbc:	(bad)  
   140036fbd:	retf   0x1bfd
   140036fc0:	add    bl,cl
   140036fc2:	call   FWORD PTR [rdx+0x0]
   140036fc5:	ins    DWORD PTR es:[rdi],dx
   140036fc6:	(bad)  
   140036fc7:	and    eax,0x85e0a00
	...
   140036ff8:	mov    bh,0x79
   140036ffa:	and    DWORD PTR [rsi-0x33],edx
   140036ffd:	rex.B fcomip st,st(4)
   140037001:	(bad)  
   140037002:	pop    rbx
   140037003:	clc    
   140037004:	push   rcx
   140037006:	jns    0x140037007
   140037008:	push   rsi
   14003700a:	test   bh,bh
   14003700c:	push   rsi
   14003700e:	mov    edi,?
   140037010:	enter  0xa0e1,0xff
   140037014:	push   0xffffffff93ffc9ce
   140037019:	(bad)  
   14003701a:	(bad)  
   14003701b:	dec    DWORD PTR [rsi+0x4effffff]
   140037021:	clc    
   140037022:	(bad)  
   140037023:	inc    DWORD PTR [rax]
   140037025:	loope  0x140037026
   140037027:	inc    DWORD PTR [rax]
   140037029:	retf   
   14003702a:	(bad)  
   14003702b:	inc    DWORD PTR [rax]
   14003702d:	mov    esp,0xb702ffff
   140037032:	(bad)  
   140037033:	inc    DWORD PTR [rdx+rsi*4-0x3b3b0060]
   14003703a:	mov    edi,edi
   14003703c:	jrcxz  0x140037017
   14003703e:	mov    edi,edi
   140037040:	hlt    
   140037041:	jmp    0x132016fd2
   140037046:	mov    edi,edi
   140037048:	push   rcx
   14003704a:	test   edi,edi
   14003704c:	(bad)  
   14003704d:	out    dx,al
   14003704e:	jle    0x14003704f
   140037050:	(bad)  
   140037051:	(bad)  
   140037052:	js     0x140037053
   140037054:	(bad)  
   140037055:	loop   0x1400370c6
   140037057:	(bad)  
   140037058:	cld    
   140037059:	(bad)  [rsi-0x1]
   14003705c:	not    ebx
   14003705e:	pop    rdi
   14003705f:	push   rsp
   140037061:	retf   0xff54
   140037064:	out    dx,al
   140037065:	mov    ebp,0x9ed4ff4d
   14003706a:	cmp    al,0xf3
   14003706c:	test   eax,0xa8ca1e6f
   140037071:	outs   dx,BYTE PTR ds:[rsi]
   140037072:	sbb    eax,0x38
   140037077:	add    BYTE PTR [rax],al
   140037079:	add    BYTE PTR [rax],al
   14003707b:	add    BYTE PTR [rdi],bl
   14003707d:	int3   
   14003707e:	dec    DWORD PTR [rcx]
   140037080:	add    bl,cl
   140037082:	jmp    FWORD PTR [rbp+0x0]
   140037085:	cdq    
   140037086:	repnz add BYTE PTR [r14],dl
   14003708a:	push   0x10
   14003708c:	add    BYTE PTR [rax],al
   14003708e:	push   rbp
   14003708f:	add    al,BYTE PTR [rax]
	...
   1400370b9:	add    BYTE PTR [rax],al
   1400370bb:	add    BYTE PTR [rdi-0x37a9de87],dh
   1400370c1:	xchg   esp,eax
   1400370c2:	cmp    eax,0x5ac7ecd9
   1400370c7:	repz std 
   1400370c9:	in     eax,dx
   1400370ca:	js     0x1400370cb
   1400370cc:	push   rsp
   1400370ce:	cmp    edi,0xff88f4ff
   1400370d4:	fsub   st,st(7)
   1400370d6:	xchg   edi,eax
   1400370d7:	push   QWORD PTR [rbx+rcx*8-0x46]
   1400370db:	inc    DWORD PTR [rdi-0x69000209]
   1400370e1:	(bad)  
   1400370e2:	(bad)  
   1400370e3:	call   FWORD PTR [rax-0x4]
   1400370e6:	(bad)  
   1400370e7:	dec    DWORD PTR [rip+0xffffe7]        # 0x1410370d4
   1400370ed:	(bad)  
   1400370ee:	(bad)  
   1400370ef:	inc    DWORD PTR [rax]
   1400370f1:	(bad)  
   1400370f2:	(bad)  
   1400370f3:	inc    DWORD PTR [rax]
   1400370f5:	mov    edx,0xad4fffff
   1400370fa:	mov    esp,0x85b7a9ff
   1400370ff:	call   rsp
   140037101:	int3   
   140037102:	jnp    0x140037103
   140037104:	jmp    0x1400370e3
   140037106:	jp     0x140037107
   140037108:	mul    ebp
   14003710a:	js     0x14003710b
   14003710c:	std    
   14003710d:	in     eax,0x74
   14003710f:	(bad)  
   140037110:	std    
   140037111:	loope  0x14003717f
   140037113:	(bad)  
   140037114:	sti    
   140037115:	fisub  DWORD PTR [rbp-0x1]
   140037118:	not    ebx
   14003711a:	pop    rsi
   14003711b:	push   rcx
   14003711d:	enter  0xff58,0xe9
   140037121:	mov    esp,0x9bccff50
   140037126:	cmp    eax,0x1e6faaf0
   14003712b:	enter  0x6fa9,0x1d
   14003712f:	cmp    eax,0x0
	...
   14003713c:	(bad)  
   14003713d:	(bad)  
   14003713e:	inc    DWORD PTR [rdx+rax*1]
   140037141:	retf   0x6fff
   140037144:	add    BYTE PTR [rax+0x260063fa],dh
   14003714a:	jg     0x140037165
   14003714c:	add    BYTE PTR [rax],al
   14003714e:	push   rbp
   14003714f:	add    al,0x0
	...
   14003717d:	add    BYTE PTR [rax],al
   14003717f:	add    BYTE PTR [rdi-0x49c0de87],dh
   140037185:	jns    0x1400371a8
   140037187:	mov    ebp,0xe950afdc
   14003718c:	stc    
   14003718d:	in     al,0x75
   14003718f:	(bad)  
   140037190:	(bad)  
   140037191:	out    dx,al
   140037192:	jp     0x140037193
   140037194:	push   rsp
   140037196:	cmp    bh,0xe8
   140037199:	jmp    0x140037124
   14003719b:	call   FWORD PTR [rbp+0x7cffacdb]
   1400371a1:	in     al,dx
   1400371a2:	cli    
   1400371a3:	call   FWORD PTR [rbp+0x71ffffff]
   1400371a9:	(bad)  
   1400371aa:	(bad)  
   1400371ab:	dec    DWORD PTR [rbp-0xa]
   1400371ae:	(bad)  
   1400371af:	push   QWORD PTR [rcx]
   1400371b1:	jmp    0x1170a71b5
   1400371b6:	(bad)  
   1400371b7:	inc    DWORD PTR [rax]
   1400371b9:	sar    bh,0xff
   1400371bc:	or     DWORD PTR [rdi-0x5b810012],ebp
   1400371c2:	mov    ?,edi
   1400371c4:	mov    edx,0xddff6fb5
   1400371c9:	enter  0xff67,0xec
   1400371cd:	shl    DWORD PTR [rbp-0x1],1
   1400371d0:	repnz shl DWORD PTR [rcx-0x1],cl
   1400371d4:	icebp  
   1400371d5:	iret   
   1400371d6:	pop    rdi
   1400371d7:	(bad)  
   1400371d8:	call   0x11d02ce9d
   1400371dd:	mov    ch,0x59
   1400371df:	(bad)  
   1400371e0:	mov    ebx,0xa6e8408e
   1400371e5:	jo     0x14003720a
   1400371e7:	mov    bh,0xa7
   1400371e9:	jo     0x14003720c
   1400371eb:	sub    al,0x0
	...
   1400371f9:	add    BYTE PTR [rax],al
   1400371fb:	add    BYTE PTR [rdx],bl
   1400371fd:	sar    edi,cl
   1400371ff:	add    eax,DWORD PTR [rdx]
   140037201:	enter  0x77fe,0x0
   140037205:	mov    ah,0xfc
   140037207:	(bad)  
   140037208:	add    BYTE PTR [rbx],dh
   14003720a:	mov    DWORD PTR [rdi],ebx
   14003720c:	add    BYTE PTR [rax],al
   14003720e:	push   rbp
   14003720f:	(bad)  
	...
   140037244:	mov    bh,0x79
   140037246:	and    DWORD PTR [rsi+rsi*4],ebx
   140037249:	jns    0x14003726c
   14003724b:	(bad)  
   14003724c:	retf   
   14003724d:	cdq    
   14003724e:	rex.XB fsub st(1),st
   140037251:	(bad)  
   140037252:	movsxd esi,esp
   140037254:	stc    
   140037255:	loope  0x1400372ca
   140037257:	(bad)  
   140037258:	std    
   140037259:	(bad)  
   14003725a:	jp     0x14003725b
   14003725c:	imul   ebx
   14003725e:	jge    0x14003725f
   140037260:	mov    dh,0xdc
   140037262:	cdq    
   140037263:	jmp    FWORD PTR [rbp-0x24]
   140037266:	fcos   
   140037268:	mov    bh,ch
   14003726a:	(bad)  
   14003726b:	call   QWORD PTR [rdx+0x7fffffff]
   140037271:	(bad)  
   140037272:	(bad)  
   140037273:	call   QWORD PTR [rdi-0xa]
   140037276:	(bad)  
   140037277:	jmp    FWORD PTR [rcx]
   140037279:	in     al,0xff
   14003727b:	inc    DWORD PTR [rax]
   14003727d:	int    0xff
   14003727f:	inc    DWORD PTR [rax]
   140037281:	mov    eax,0xa032ffff
   140037286:	mov    esi,0x739a8eff
   14003728b:	push   QWORD PTR [rsi-0x3100a05a]
   140037291:	mov    cl,0x60
   140037293:	dec    ebx
   140037295:	scas   al,BYTE PTR es:[rdi]
   140037296:	push   QWORD PTR fs:[rbx-0x6110aa6b]
   14003729d:	jp     0x1400372df
   14003729f:	fcom   QWORD PTR [rbp-0x6878c990]
   1400372a5:	jo     0x1400372da
   1400372a7:	adc    BYTE PTR [rax],al
	...
   1400372b9:	add    BYTE PTR [rax],al
   1400372bb:	add    BYTE PTR [rsi],cl
   1400372bd:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400372be:	out    0x5,eax
   1400372c0:	add    dl,al
   1400372c2:	std    
   1400372c3:	mov    es,WORD PTR [rax]
   1400372c5:	mov    dl,0xfc
   1400372c7:	xchg   edi,eax
   1400372c8:	add    BYTE PTR [rcx],dh
   1400372ca:	mov    DWORD PTR [rbx],esp
   1400372cc:	add    BYTE PTR [rax],al
   1400372ce:	push   rbp
   1400372cf:	add    eax,0x0
	...
   14003730c:	mov    dh,0x79
   14003730e:	and    DWORD PTR [rbx-0x4a],ecx
   140037311:	js     0x140037333
   140037313:	lods   al,BYTE PTR ds:[rsi]
   140037314:	retf   0x4197
   140037317:	fsubr  st(0),st
   140037319:	mov    edx,0xd7f3f260
   14003731e:	jb     0x14003731f
   140037320:	clc    
   140037321:	fdiv   QWORD PTR [rdi+rdi*8-0x2f]
   140037325:	(bad)  
   140037326:	test   bh,bh
   140037328:	or     edi,0xffffffad
   14003732b:	jmp    FWORD PTR [rdi-0x12]
   14003732e:	sti    
   14003732f:	jmp    FWORD PTR [rax-0x6b000001]
   140037335:	(bad)  
   140037336:	(bad)  
   140037337:	push   QWORD PTR [rbx-0x3]
   14003733a:	(bad)  
   14003733b:	dec    DWORD PTR [rax-0x13]
   14003733e:	std    
   14003733f:	call   QWORD PTR [rip+0x1fffcd5]        # 0x14203701a
   140037345:	mov    esi,0xa603fffa
   14003734a:	idiv   edi
   14003734c:	xor    ecx,DWORD PTR [rdx-0x7a850050]
   140037352:	ja     0x140037349
   140037354:	mov    bh,BYTE PTR [rdx+0x56]
   140037357:	jrcxz  0x1400373d4
   140037359:	rex.RXB scas ax,WORD PTR es:[rdi]
   14003735c:	(bad)  
   14003735d:	pop    rdx
   14003735e:	push   rsi
   14003735f:	(bad)  
   140037360:	add    BYTE PTR [rax],al
   140037362:	push   rbp
   140037363:	or     eax,DWORD PTR [rax]
   140037365:	add    BYTE PTR [rbp+0x6],dl
   140037368:	add    BYTE PTR [rax],al
   14003736a:	push   rbp
   14003736b:	add    DWORD PTR [rax],eax
	...
   140037379:	add    BYTE PTR [rbp+0x2],dl
   14003737c:	add    BYTE PTR [rax-0x40],bh
   14003737f:	sbb    eax,0xc0fec200
   140037384:	add    BYTE PTR [rax+0x28009cfa],ch
   14003738a:	jle    0x1400373aa
   14003738c:	add    BYTE PTR [rax],al
   14003738e:	push   rbp
   14003738f:	add    eax,DWORD PTR [rax]
	...
   1400373cd:	add    BYTE PTR [rax],al
   1400373cf:	add    BYTE PTR [rsi-0x49fdde87],dh
   1400373d5:	js     0x1400373f7
   1400373d7:	rex.W mov sil,0x78
   1400373da:	and    BYTE PTR [rax-0x34d78046],dl
   1400373e0:	enter  0x3f93,0xdb
   1400373e4:	(bad)  
   1400373e5:	test   eax,0xb8dcea53
   1400373ea:	movsxd esi,esp
   1400373ec:	lods   eax,DWORD PTR ds:[rsi]
   1400373ed:	ror    DWORD PTR [rsp+rdi*8-0x2c2997],0x90
   1400373f5:	std    
   1400373f6:	(bad)  
   1400373f7:	jmp    FWORD PTR [rax-0x76000001]
   1400373fd:	std    
   1400373fe:	(bad)  
   1400373ff:	call   FWORD PTR [rsi-0xe]
   140037402:	cld    
   140037403:	jmp    FWORD PTR [rcx+rbx*8]
   140037406:	stc    
   140037407:	inc    DWORD PTR [rbx]
   140037409:	mov    edi,0xae03fff6
   14003740e:	hlt    
   14003740f:	inc    DWORD PTR [rip+0xaf5f19a]        # 0x14af965af
   140037415:	jnp    0x1400373e8
   140037417:	(bad)
   14003741a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003741b:	ins    DWORD PTR es:[rdi],dx
   14003741c:	add    BYTE PTR [rbx],ch
   14003741e:	mov    BYTE PTR [rdi+0x0],al
   140037421:	(bad)  
   140037422:	outs   dx,BYTE PTR ds:[rsi]
   140037423:	xor    BYTE PTR [rax],al
   140037425:	add    al,0x59
   140037427:	sbb    eax,0x15550000
   14003742c:	add    BYTE PTR [rax],al
   14003742e:	push   rbp
   14003742f:	adc    BYTE PTR [rax],al
   140037431:	add    BYTE PTR [rbp+0xf],dl
   140037434:	add    BYTE PTR [rax],al
   140037436:	push   rbp
   140037437:	adc    BYTE PTR [rax],al
   140037439:	cmp    dl,BYTE PTR [rdx-0xc55ffdf]
   14003743f:	test   DWORD PTR [rax],eax
   140037441:	(bad)  
   140037442:	jmp    rcx
   140037444:	add    BYTE PTR [rbp+0x180078e7],cl
   14003744a:	jo     0x14003745d
   14003744c:	add    BYTE PTR [rax],al
   14003744e:	push   rbp
   14003744f:	add    DWORD PTR [rax],eax
	...
   140037499:	add    BYTE PTR [rax],al
   14003749b:	add    BYTE PTR [rsi-0x4aecdf88],dh
   1400374a1:	js     0x1400374c3
   1400374a3:	rex.R mov bpl,0x78
   1400374a6:	and    BYTE PTR [rsp+rsi*4+0x77],dh
   1400374aa:	and    BYTE PTR [rbx-0x4dde884d],bl
   1400374b0:	stos   BYTE PTR es:[rdi],al
   1400374b1:	jg     0x1400374e5
   1400374b3:	retf   0x9d82
   1400374b6:	jno    0x140037493
   1400374b8:	rex.WXB xlat BYTE PTR ds:[rbx]
   1400374ba:	out    0xf5,eax
   1400374bc:	(bad)  
   1400374bd:	sti    
   1400374be:	cld    
   1400374bf:	(bad)  
   1400374c0:	cwde   
   1400374c1:	cld    
   1400374c2:	cld    
   1400374c3:	std    
   1400374c4:	je     0x1400374bd
   1400374c6:	sti    
   1400374c7:	cld    
   1400374c8:	cmp    bl,ah
   1400374ca:	clc    
   1400374cb:	sti    
   1400374cc:	add    edx,edx
   1400374ce:	cli    
   1400374cf:	test   BYTE PTR [rcx],0xc3
   1400374d2:	sti    
   1400374d3:	hlt    
   1400374d4:	add    BYTE PTR [rsi-0x4cff0e02],bh
   1400374da:	(bad)  
   1400374db:	in     al,0x0
   1400374dd:	(bad)  
   1400374de:	cli    
   1400374df:	rol    BYTE PTR [rax],0x81
   1400374e2:	out    0x96,eax
   1400374e4:	add    BYTE PTR [rcx-0x52],cl
   1400374e7:	ins    BYTE PTR es:[rdi],dx
   1400374e8:	add    BYTE PTR [rsi],bh
   1400374ea:	lahf   
   1400374eb:	pop    rcx
   1400374ec:	add    BYTE PTR [rax],bh
   1400374ee:	xchg   esi,eax
   1400374ef:	rex.WRB add BYTE PTR [r11-0x64],r8b
   1400374f3:	rex.WR add BYTE PTR [rbp-0x4d],r11b
   1400374f7:	(bad)  
   1400374f8:	add    BYTE PTR [rdx-0x3dff5c0a],ch
   1400374fe:	jmp    rcx
   140037500:	add    BYTE PTR [rbx+0x5c00d8ff],bh
   140037506:	mov    dl,0x37
   140037508:	add    BYTE PTR [rax],al
   14003750a:	push   rbp
   14003750b:	add    eax,0x0
	...
   140037578:	ds (bad) 
   14003757b:	sbb    dh,BYTE PTR [rcx]
   14003757d:	loopne 0x14003757b
   14003757f:	ins    BYTE PTR es:[rdi],dx
   140037580:	rex.X (bad) 
   140037582:	(bad)  
   140037583:	ror    DWORD PTR [rcx-0x79110003],1
   140037589:	(bad)  
   14003758a:	(bad)  
   14003758b:	out    dx,eax
   14003758c:	push   0x33edfffc
   140037591:	out    dx,eax
   140037592:	(bad)  
   140037593:	jmp    0x14003759b
   140037595:	loope  0x140037596
   140037597:	jmp    0x12703479c
   14003759c:	add    bh,al
   14003759e:	jmp    rsi
   1400375a0:	add    BYTE PTR [rdi-0x43ff1b01],bh
   1400375a6:	jmp    rbp
   1400375a8:	add    BYTE PTR [rbp-0x4aff2702],dh
   1400375ae:	(bad)  
   1400375af:	(bad)  
   1400375b0:	add    BYTE PTR [rcx-0x3dff2802],bh
   1400375b6:	jmp    rbp
   1400375b8:	add    ah,al
   1400375ba:	jmp    rbp
   1400375bc:	add    bl,al
   1400375be:	jmp    rsp
   1400375c0:	add    BYTE PTR [rbx+0x260082f3],ah
   1400375c6:	jge    0x1400375d4
   1400375c8:	add    BYTE PTR [rax],al
   1400375ca:	push   rbp
   1400375cb:	add    DWORD PTR [rax],eax
	...
   14003763d:	add    BYTE PTR [rax],al
   14003763f:	add    BYTE PTR [rdi],bh
   140037641:	(bad)  
   140037643:	adc    eax,0x58fee032
   140037648:	xor    esp,esi
   14003764a:	std    
   14003764b:	mov    ecx,0xe0fff96c
   140037650:	(bad)  
   140037651:	std    
   140037652:	jmp    rsi
   140037654:	jnp    0x140037655
   140037656:	jmp    rbp
   140037658:	push   rcx
   140037659:	idiv   bh
   14003765b:	in     eax,0x9
   14003765d:	in     eax,0xff
   14003765f:	in     eax,0x0
   140037661:	(bad)  
   140037662:	jmp    rbp
   140037664:	add    dh,cl
   140037666:	jmp    rbp
   140037668:	add    bl,cl
   14003766a:	jmp    rbp
   14003766c:	add    dl,cl
   14003766e:	jmp    rbp
   140037670:	add    dl,cl
   140037672:	jmp    rbp
   140037674:	add    dl,cl
   140037676:	jmp    rbp
   140037678:	add    cl,cl
   14003767a:	jmp    rdx
   14003767c:	add    BYTE PTR [rcx+0x620093f9],dh
   140037682:	lods   eax,DWORD PTR ds:[rsi]
   140037683:	adc    al,BYTE PTR [rax]
   140037685:	add    BYTE PTR [rbp+0x1],dl
	...
   140037708:	cmp    ebx,edx
   14003770a:	dec    DWORD PTR [rbx]
   14003770c:	xor    eax,0x292cffdf
   140037711:	(bad)  
   140037713:	jl     0x14003774d
   140037715:	loope  0x140037713
   140037717:	mov    ebp,0xd8feef5b
   14003771c:	jno    0x140037719
   14003771e:	jmp    rbp
   140037720:	(bad)  
   140037721:	icebp  
   140037722:	jmp    rbp
   140037724:	adc    ch,al
   140037726:	jmp    rbp
   140037728:	add    al,0xe4
   14003772a:	jmp    rbp
   14003772c:	add    ebx,edx
   14003772e:	jmp    rbp
   140037730:	add    dl,dl
   140037732:	jmp    rax
   140037734:	add    dl,cl
   140037736:	(bad)  
   140037737:	mov    esi,0x5bf6b100
   14003773c:	add    BYTE PTR [rdi-0x52],bl
   14003773f:	or     al,BYTE PTR [rax]
   140037741:	add    BYTE PTR [rbp+0x1],dl
	...
   1400377d4:	xor    bl,cl
   1400377d6:	dec    DWORD PTR [rbx]
   1400377d8:	sub    bl,bl
   1400377da:	call   FWORD PTR [rsi]
   1400377dc:	sbb    ebx,ebp
   1400377de:	push   QWORD PTR [rax]
   1400377e0:	adc    dl,ah
   1400377e2:	std    
   1400377e3:	pop    rax
   1400377e4:	adc    dh,dl
   1400377e6:	std    
   1400377e7:	ins    BYTE PTR es:[rdi],dx
   1400377e8:	(bad)  
   1400377e9:	sar    ah,1
   1400377eb:	ins    BYTE PTR es:[rdi],dx
   1400377ec:	or     ecx,esp
   1400377ee:	cld    
   1400377ef:	pop    rcx
   1400377f0:	or     al,cl
   1400377f2:	mul    DWORD PTR [rdi]
   1400377f4:	(bad)  
   1400377f5:	mov    dh,0xf6
   1400377f7:	or     eax,0x0
	...
   140037810:	(bad)  
   140037811:	(bad)  
   140037812:	(bad)  
   140037813:	(bad)  
   140037814:	(bad)  
   140037815:	inc    DWORD PTR [rax]
   140037817:	add    al,bh
   140037819:	add    edi,edi
   14003781b:	(bad)  
   14003781c:	(bad)  
   14003781d:	inc    DWORD PTR [rax]
   14003781f:	add    al,ah
   140037821:	add    BYTE PTR [rdi-0x1],bh
   140037824:	(bad)  
   140037825:	inc    DWORD PTR [rax]
   140037827:	add    al,ah
   140037829:	add    BYTE PTR [rax],dl
   14003782b:	add    bh,bh
   14003782d:	inc    DWORD PTR [rax]
   14003782f:	add    al,al
   140037831:	add    BYTE PTR [rax],al
   140037833:	add    BYTE PTR [rdi],bl
   140037835:	inc    DWORD PTR [rax]
   140037837:	add    BYTE PTR [rax+0x7000000],al
   14003783d:	inc    DWORD PTR [rax]
   14003783f:	add    BYTE PTR [rax+0x30000f8],al
   140037845:	inc    DWORD PTR [rax]
   140037847:	add    BYTE PTR [rcx],al
   140037849:	lock add BYTE PTR [rax],al
   14003784c:	add    edi,edi
   14003784e:	add    BYTE PTR [rax],al
   140037850:	add    eax,esp
   140037852:	add    BYTE PTR [rax],al
   140037854:	add    BYTE PTR [rdi+0x0],bh
   140037857:	add    BYTE PTR [rcx],al
   140037859:	rol    BYTE PTR [rax],0x0
   14003785c:	add    BYTE PTR [rdi],bh
   14003785e:	add    BYTE PTR [rax],al
   140037860:	add    BYTE PTR [rax+0x3f000000],al
   140037866:	add    BYTE PTR [rax],al
   140037868:	add    BYTE PTR [rax],al
   14003786a:	add    BYTE PTR [rax],al
   14003786c:	add    BYTE PTR [rdi],bl
   14003786e:	add    BYTE PTR [rax],al
   140037870:	add    BYTE PTR [rax],al
   140037872:	add    BYTE PTR [rax],al
   140037874:	add    BYTE PTR [rdi],cl
   140037876:	add    BYTE PTR [rax],al
   140037878:	add    BYTE PTR [rax],al
   14003787a:	add    edi,esp
   14003787c:	add    BYTE PTR [rdi],cl
   14003787e:	add    BYTE PTR [rax],al
   140037880:	add    BYTE PTR [rax],al
   140037882:	(bad)  
   140037883:	inc    BYTE PTR [rax]
   140037885:	(bad)  
   140037886:	add    BYTE PTR [rax],al
   140037888:	add    BYTE PTR [rax],0xf
   14003788b:	inc    DWORD PTR [rax]
   14003788d:	(bad)  
   14003788e:	add    BYTE PTR [rax],al
   140037890:	add    BYTE PTR [rax],0x1f
   140037893:	inc    DWORD PTR [rax-0x7ffffffd]
   140037899:	add    BYTE PTR [rdi],bl
   14003789b:	(bad)  
   14003789c:	(bad)  
   14003789d:	inc    DWORD PTR [rax]
   14003789f:	add    al,al
   1400378a1:	add    BYTE PTR [rdi],bh
   1400378a3:	(bad)  
   1400378a4:	(bad)  
   1400378a5:	inc    DWORD PTR [rax]
   1400378a7:	add    al,al
   1400378a9:	add    BYTE PTR [rdi],bh
   1400378ab:	(bad)  
   1400378ac:	(bad)  
   1400378ad:	inc    DWORD PTR [rax]
   1400378af:	add    al,al
   1400378b1:	add    BYTE PTR [rax],al
   1400378b3:	add    BYTE PTR [rax],al
   1400378b5:	add    eax,DWORD PTR [rax]
   1400378b7:	add    al,ah
   1400378b9:	add    BYTE PTR [rax],al
   1400378bb:	add    BYTE PTR [rax],al
   1400378bd:	add    eax,DWORD PTR [rax]
   1400378bf:	add    al,ah
   1400378c1:	add    BYTE PTR [rax],al
   1400378c3:	add    BYTE PTR [rax],al
   1400378c5:	add    eax,DWORD PTR [rax]
   1400378c7:	add    al,dh
   1400378c9:	add    BYTE PTR [rax],al
   1400378cb:	add    BYTE PTR [rax],al
   1400378cd:	add    eax,DWORD PTR [rax]
   1400378cf:	add    al,bh
   1400378d1:	add    BYTE PTR [rax],al
   1400378d3:	add    BYTE PTR [rax],al
   1400378d5:	add    eax,DWORD PTR [rax]
   1400378d7:	add    al,bh
   1400378d9:	add    BYTE PTR [rax],al
   1400378db:	add    BYTE PTR [rax],al
   1400378dd:	add    eax,DWORD PTR [rax]
   1400378df:	add    al,bh
   1400378e1:	add    BYTE PTR [rax],al
   1400378e3:	add    BYTE PTR [rax],al
   1400378e5:	add    eax,DWORD PTR [rax]
   1400378e7:	add    al,bh
   1400378e9:	add    BYTE PTR [rdi],bh
   1400378eb:	inc    DWORD PTR [rax-0x7fffffd]
   1400378f1:	add    BYTE PTR [rdi],bh
   1400378f3:	inc    DWORD PTR [rax-0x7fffffd]
   1400378f9:	add    BYTE PTR [rdi],bh
   1400378fb:	inc    DWORD PTR [rax-0x3fffffd]
   140037901:	add    BYTE PTR [rdi],bl
   140037903:	inc    DWORD PTR [rax-0x3fffff9]
   140037909:	add    BYTE PTR [rdi],cl
   14003790b:	inc    DWORD PTR [rax]
   14003790d:	add    eax,DWORD PTR [rax]
   14003790f:	add    ah,bh
   140037911:	add    BYTE PTR [rdi],al
   140037913:	inc    BYTE PTR [rax]
   140037915:	add    eax,DWORD PTR [rax]
   140037917:	add    dh,bh
   140037919:	add    BYTE PTR [rbx],al
   14003791b:	cld    
   14003791c:	add    BYTE PTR [rbx],al
   14003791e:	add    BYTE PTR [rax],al
   140037920:	inc    DWORD PTR [rax]
   140037922:	add    BYTE PTR [rax],al
   140037924:	add    BYTE PTR [rcx],al
   140037926:	add    BYTE PTR [rax],al
   140037928:	inc    DWORD PTR [rax]
   14003792a:	add    BYTE PTR [rax],al
   14003792c:	add    BYTE PTR [rcx],al
   14003792e:	add    BYTE PTR [rax],al
   140037930:	inc    DWORD PTR [rax+0x21000000]
   140037936:	add    BYTE PTR [rax],al
   140037938:	inc    eax
   14003793a:	add    BYTE PTR [rax],al
   14003793c:	add    BYTE PTR [rax+0x0],ah
   14003793f:	add    bh,bh
   140037941:	loopne 0x140037943
   140037943:	add    BYTE PTR [rax],al
   140037945:	loopne 0x140037947
   140037947:	add    bh,bh
   140037949:	lock add BYTE PTR [rax],al
   14003794c:	add    eax,esp
   14003794e:	add    BYTE PTR [rax],al
   140037950:	(bad)  
   140037951:	clc    
   140037952:	add    BYTE PTR [rax],al
   140037954:	add    esp,eax
   140037956:	add    BYTE PTR [rax],al
   140037958:	(bad)  
   140037959:	inc    BYTE PTR [rax]
   14003795b:	add    BYTE PTR [rcx],al
   14003795d:	rol    BYTE PTR [rax],0x0
   140037960:	(bad)  
   140037961:	inc    DWORD PTR [rax]
   140037963:	add    BYTE PTR [rax],al
   140037965:	add    BYTE PTR [rax],al
   140037967:	add    bh,bh
   140037969:	jmp    rax
   14003796b:	add    BYTE PTR [rax],al
   14003796d:	add    DWORD PTR [rax],eax
   14003796f:	add    bh,bh
   140037971:	(bad)  
   140037972:	inc    eax
   140037974:	add    BYTE PTR [rcx],al
   140037976:	add    BYTE PTR [rax],al
   140037978:	(bad)  
   140037979:	(bad)  
   14003797a:	push   rax
   14003797c:	add    BYTE PTR [rbx],al
   14003797e:	add    BYTE PTR [rax],al
   140037980:	(bad)  
   140037981:	(bad)  
   140037982:	(bad)  
   140037983:	cld    
   140037984:	add    BYTE PTR [rdi],al
   140037986:	add    BYTE PTR [rax],al
   140037988:	(bad)  
   140037989:	(bad)  
   14003798a:	(bad)  
   14003798b:	inc    DWORD PTR [rax+0x2800003f]
   140037991:	add    BYTE PTR [rax],al
   140037993:	add    BYTE PTR [rax],ah
   140037995:	add    BYTE PTR [rax],al
   140037997:	add    BYTE PTR [rax+0x0],al
   14003799a:	add    BYTE PTR [rax],al
   14003799c:	add    DWORD PTR [rax],eax
   14003799e:	and    BYTE PTR [rax],al
   1400379a0:	add    BYTE PTR [rax],al
   1400379a2:	add    BYTE PTR [rax],al
   1400379a4:	adc    BYTE PTR [rax],0x0
	...
   1400379c7:	add    BYTE PTR [rax],al
   1400379c9:	add    BYTE PTR [rbp+0x1],dl
   1400379cc:	add    BYTE PTR [rax],al
   1400379ce:	push   rbp
   1400379cf:	add    eax,DWORD PTR [rax]
   1400379d1:	add    BYTE PTR [rbp+0x4],dl
   1400379d4:	add    BYTE PTR [rax],al
   1400379d6:	push   rbp
   1400379d7:	add    DWORD PTR [rax],eax
	...
   140037a41:	add    BYTE PTR [rbp+0x1],dl
   140037a44:	add    BYTE PTR [rax],al
   140037a46:	push   rbp
   140037a47:	(bad)  
   140037a48:	add    BYTE PTR [rax],al
   140037a4a:	push   rbp
   140037a4b:	adc    eax,0x20550000
   140037a50:	add    BYTE PTR [rax],al
   140037a52:	push   rbp
   140037a53:	and    BYTE PTR [rax],al
   140037a55:	add    BYTE PTR [rbp+0x1d],dl
   140037a58:	add    BYTE PTR [rax],al
   140037a5a:	push   rbp
   140037a5b:	adc    al,0x0
   140037a5d:	add    BYTE PTR [rbp+0x3],dl
	...
   140037abc:	add    BYTE PTR [rax],al
   140037abe:	push   rbp
   140037abf:	add    DWORD PTR [rax],eax
   140037ac1:	add    BYTE PTR [rbp+0x8],dl
   140037ac4:	(bad)  
   140037ac5:	or     cl,0x42
   140037ac8:	add    esi,DWORD PTR [rdx-0x46fe6005]
   140037ace:	(bad)  
   140037acf:	mov    ebp,0xafffbf01
   140037ad4:	add    edi,DWORD PTR [rdi-0x50fb6b02]
   140037ada:	neg    DWORD PTR [rdi+0x4]
   140037add:	ins    DWORD PTR es:[rdi],dx
   140037ade:	mov    esp,0x5d0a0124
   140037ae3:	add    eax,0x0
   140037ae8:	popf   
   140037ae9:	sbb    ebp,DWORD PTR [edx]
   140037aec:	sahf   
   140037aed:	data16 sbb ch,BYTE PTR [rbx-0x63]
   140037af1:	data16 sbb ah,BYTE PTR [rsi-0x42e0915a]
   140037af8:	cdq    
   140037af9:	movsxd ebx,DWORD PTR [rcx]
   140037afb:	(bad)  
   140037afc:	xchg   edi,eax
   140037afd:	(bad)  
   140037afe:	sbb    esi,edx
   140037b00:	xchg   ebp,eax
   140037b01:	(bad)  
   140037b02:	sbb    BYTE PTR [rbp-0x5de7a06d],dh
   140037b08:	xchg   ecx,eax
   140037b09:	pop    rbp
   140037b0a:	(bad)  
   140037b0b:	ins    DWORD PTR es:[rdi],dx
   140037b0c:	(bad)  
   140037b0d:	pop    rsp
   140037b0e:	(bad)  
   140037b0f:	xor    eax,0x0
	...
   140037b3c:	add    BYTE PTR [rax],al
   140037b3e:	push   rbp
   140037b3f:	add    eax,DWORD PTR [rsi]
   140037b41:	mov    ah,0xf2
   140037b43:	pop    rdi
   140037b44:	add    cl,al
   140037b46:	jmp    rdx
   140037b48:	add    dh,BYTE PTR [rbp-0x6ff94b03]
   140037b4e:	(bad)  
   140037b4f:	rex.RB (bad) 
   140037b51:	movabs al,ds:0xc90a39fbc30d1be0
   140037b5a:	dec    BYTE PTR [rbx+0x5]
   140037b5d:	retf   
   140037b5e:	jmp    FWORD PTR [rsi]
   140037b60:	(bad)  
   140037b61:	outs   dx,BYTE PTR ds:[rsi]
   140037b62:	(bad)  
   140037b63:	rex.W movabs al,ds:0xc7de1f73abb51b68
   140037b6d:	nop
   140037b6e:	sub    ebp,ebp
   140037b70:	fisubr WORD PTR [rdx-0x521f08d0]
   140037b76:	xor    cl,bh
   140037b78:	in     eax,dx
   140037b79:	mov    edx,0xb6ecff33
   140037b7e:	xor    bh,bh
   140037b80:	fbld   TBYTE PTR [rbx-0x672b04d9]
   140037b86:	and    dh,bh
   140037b88:	mov    bh,0x7c
   140037b8a:	and    esi,ebp
   140037b8c:	movabs eax,ds:0x8db4175c8fe31d66
   140037b95:	pop    rbx
   140037b96:	(bad)  
   140037b97:	push   rsi
   140037b98:	mov    WORD PTR [rcx+0x16],ds
   140037b9b:	add    eax,DWORD PTR [rax]
	...
   140037bb9:	add    BYTE PTR [rax],al
   140037bbb:	add    BYTE PTR [rbx],dl
   140037bbd:	(bad)  
   140037bbe:	(bad)  
   140037bbf:	(bad)  
   140037bc0:	add    ah,dl
   140037bc2:	(bad)  
   140037bc3:	fld    QWORD PTR [rax]
   140037bc5:	mov    edi,0x3102daff
   140037bca:	(bad)  
   140037bcb:	cmp    eax,DWORD PTR [rax]
   140037bcd:	add    BYTE PTR [rbp+0xf],dl
	...
   140037bd8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140037bd9:	outs   dx,BYTE PTR ds:[rsi]
   140037bda:	and    DWORD PTR [rax],ebx
   140037bdc:	movabs ds:0xdfe42984baa21c6a,eax
   140037be5:	lods   al,BYTE PTR ds:[rsi]
   140037be6:	xor    al,0xf7
   140037be8:	lock mov DWORD PTR [rdx-0x1],0xff4accf3
   140037bf0:	not    cl
   140037bf2:	rex.WRXB push r13
   140037bf5:	rcl    BYTE PTR [rcx-0x1],cl
   140037bf8:	not    edx
   140037bfa:	push   rdx
   140037bfb:	push   rdi
   140037bfd:	rcl    DWORD PTR [rax-0x1],cl
   140037c00:	test   dh,0x4b
   140037c03:	push   rbp
   140037c05:	mov    DWORD PTR [rdx-0x1],0xff38beef
   140037c0c:	(bad)  
   140037c0d:	mov    cl,0x29
   140037c0f:	call   rbx
   140037c11:	xchg   ebx,eax
   140037c12:	sbb    bh,cl
   140037c14:	stos   BYTE PTR es:[rdi],al
   140037c15:	ins    BYTE PTR es:[rdi],dx
   140037c16:	sbb    eax,0x175b8ee9
   140037c1b:	lods   eax,DWORD PTR ds:[rsi]
   140037c1c:	mov    WORD PTR [rcx+0x16],ds
   140037c1f:	and    DWORD PTR [rax],eax
	...
   140037c39:	add    BYTE PTR [rax],al
   140037c3b:	add    BYTE PTR [rbx],dl
   140037c3d:	iret   
   140037c3e:	cld    
   140037c3f:	pop    rbx
   140037c40:	add    ah,dl
   140037c42:	jmp    rbp
   140037c44:	add    esi,DWORD PTR [rcx+0xacfc]
   140037c4a:	push   rbp
   140037c4b:	(bad)  
   140037c4c:	add    BYTE PTR [rax],al
   140037c4e:	push   rbp
   140037c4f:	or     eax,0x0
   140037c54:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140037c55:	ins    BYTE PTR es:[rdi],dx
   140037c56:	sbb    al,0x33
   140037c58:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140037c59:	imul   ebx,DWORD PTR [rcx],0xffffffc4
   140037c5c:	(bad)  
   140037c5d:	lahf   
   140037c5e:	sub    al,0xf1
   140037c60:	in     eax,dx
   140037c61:	ret    
   140037c62:	rex.RB push r10
   140037c65:	(bad)  
   140037c66:	rex.WRXB push r14
   140037c69:	(bad)  
   140037c6a:	pop    rsi
   140037c6b:	(bad)  
   140037c6c:	stc    
   140037c6d:	fisub  WORD PTR [rdi+rdi*8-0x5]
   140037c71:	loope  0x140037cdc
   140037c73:	(bad)  
   140037c74:	cld    
   140037c75:	in     al,0x6c
   140037c77:	(bad)  
   140037c78:	std    
   140037c79:	in     al,0x6c
   140037c7b:	(bad)  
   140037c7c:	std    
   140037c7d:	loop   0x140037ce7
   140037c7f:	(bad)  
   140037c80:	std    
   140037c81:	loopne 0x140037ce7
   140037c83:	(bad)  
   140037c84:	cld    
   140037c85:	fcomp  QWORD PTR [rdi+rdi*8-0x7]
   140037c89:	(bad)  
   140037c8a:	push   rbp
   140037c8b:	push   rsi
   140037c8d:	retf   
   140037c8e:	rex.WB push r8
   140037c91:	mov    esi,0xaae7ff3a
   140037c96:	and    eax,0x147abdff
   140037c9b:	icebp  
   140037c9c:	lea    edx,[rsi+0x14]
   140037c9f:	int3   
   140037ca0:	mov    WORD PTR [rdx+0x16],ds
   140037ca3:	xor    eax,0x0
	...
   140037cbc:	or     bl,dh
   140037cbe:	inc    DWORD PTR [rsi-0x1a002c00]
   140037cc4:	add    ebp,DWORD PTR [rax+0x100a1fa]
   140037cca:	push   rbp
   140037ccb:	xor    al,BYTE PTR [rax]
   140037ccd:	add    BYTE PTR [rbp+0xf],dl
   140037cd0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140037cd1:	outs   dx,BYTE PTR ds:[rsi]
   140037cd2:	sbb    eax,0x1b6ead33
   140037cd7:	rcr    esp,1
   140037cd9:	stos   DWORD PTR es:[rdi],eax
   140037cda:	xor    dh,bh
   140037cdc:	in     eax,dx
   140037cdd:	(bad)
   140037ce0:	repnz rcr BYTE PTR [rbx-0x1],cl
   140037ce4:	neg    edi
   140037ce6:	push   0x73e5faff
   140037ceb:	(bad)  
   140037cec:	cld    
   140037ced:	jmp    0x12e017c6f
   140037cf2:	cmp    edi,0xff82ecfe
   140037cf8:	(bad)  
   140037cf9:	in     al,dx
   140037cfa:	(bad)  
   140037cfb:	(bad)  
   140037cfc:	(bad)  
   140037cfd:	in     al,dx
   140037cfe:	(bad)  
   140037cff:	(bad)  
   140037d00:	(bad)  
   140037d01:	jmp    0x12a037c82
   140037d06:	jbe    0x140037d07
   140037d08:	(bad)  
   140037d09:	out    0x6e,al
   140037d0b:	(bad)  
   140037d0c:	cld    
   140037d0d:	frstor [rcx-0x1]
   140037d10:	clc    
   140037d11:	rcl    BYTE PTR [rdi+rdi*8-0xe],cl
   140037d15:	ret    
   140037d16:	rex.XB (bad) 
   140037d18:	jmp    0x10802a9cf
   140037d1d:	test   DWORD PTR [rsi],ecx
   140037d1f:	hlt    
   140037d20:	mov    edx,DWORD PTR [rbx+0x13]
   140037d23:	(bad)  
   140037d24:	mov    WORD PTR [rdx+0x16],ds
   140037d27:	cmp    BYTE PTR [rax],al
	...
   140037d39:	add    BYTE PTR [rax],al
   140037d3b:	add    BYTE PTR [rsi],al
   140037d3d:	out    0xff,al
   140037d3f:	cdq    
   140037d40:	add    ch,dl
   140037d42:	jmp    rbp
   140037d44:	add    ch,BYTE PTR [rbp+0x200b5fd]
   140037d4a:	push   rsi
   140037d4b:	cmp    DWORD PTR [rsi+0x42],esp
   140037d4e:	xor    BYTE PTR [rbx+rbp*4],ch
   140037d51:	outs   dx,BYTE PTR ds:[rsi]
   140037d52:	sbb    al,0xc3
   140037d54:	fld    TBYTE PTR [rdx-0x3b1307cd]
   140037d5a:	rex.WRX push rcx
   140037d5d:	(bad)  
   140037d5e:	(bad)  
   140037d5f:	push   rdi
   140037d61:	loope  0x140037dd4
   140037d63:	(bad)  
   140037d64:	sti    
   140037d65:	jmp    0x130017ce9
   140037d6a:	xchg   bh,bh
   140037d6c:	std    
   140037d6d:	lock mov edi,edi
   140037d70:	cld    
   140037d71:	out    dx,eax
   140037d72:	(bad)  
   140037d73:	(bad)  
   140037d74:	clc    
   140037d75:	(bad)  
   140037d76:	(bad)  
   140037d77:	push   rsi
   140037d79:	loop   0x140037d06
   140037d7b:	push   rsp
   140037d7d:	loope  0x140037d07
   140037d7f:	push   rbp
   140037d81:	fiadd  WORD PTR [rsi-0x7f1e0501]
   140037d87:	(bad)  
   140037d88:	std    
   140037d89:	out    0x7c,eax
   140037d8b:	(bad)  
   140037d8c:	jmp    rdi
   140037d8e:	jbe    0x140037d8f
   140037d90:	(bad)  
   140037d91:	loope  0x140037dfb
   140037d93:	(bad)  
   140037d94:	clc    
   140037d95:	(bad)  
   140037d96:	pop    rdx
   140037d97:	push   rbx
   140037d99:	(bad)
   140037d9c:	jmp    0x140037d4d
   140037d9e:	cs dec eax
   140037da1:	or     DWORD PTR [rsi],0x14578cf5
   140037da7:	retf   0x5a8c
   140037daa:	(bad)  
   140037dab:	(bad)  
	...
   140037dbc:	or     esi,esp
   140037dbe:	call   QWORD PTR [rsi-0x1a002800]
   140037dc4:	add    BYTE PTR [rbp+0x1b02ddff],dh
   140037dca:	outs   dx,BYTE PTR ds:[rsi]
   140037dcb:	rex.XB xchg r14d,eax
   140037dcd:	movsxd ebx,DWORD PTR [rsi]
   140037dcf:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140037dd0:	(bad)  
   140037dd1:	movabs eax,ds:0xd2f0ff4ec4eaf431
   140037dda:	(bad)  
   140037ddb:	push   rsi
   140037ddd:	loopne 0x140037e53
   140037ddf:	(bad)  
   140037de0:	sti    
   140037de1:	in     al,dx
   140037de2:	test   bh,bh
   140037de4:	std    
   140037de5:	lock (bad) 
   140037de7:	(bad)  
   140037de8:	std    
   140037de9:	repnz xchg edx,eax
   140037deb:	(bad)  
   140037dec:	cli    
   140037ded:	in     al,dx
   140037dee:	xchg   esp,eax
   140037def:	jmp    rdx
   140037df1:	(bad)  
   140037df2:	outs   dx,BYTE PTR ds:[rsi]
   140037df3:	repnz mov ebx,0xa7e0398d
   140037df9:	jno    0x140037e1d
   140037dfb:	(bad)  
   140037dfc:	movabs al,ds:0xccdc2f7fb0d51b69
   140037e05:	movabs ds:0xe1f9fc7ed2edeb53,eax
   140037e0e:	jle    0x140037e0f
   140037e10:	jmp    rdi
   140037e12:	js     0x140037e13
   140037e14:	std    
   140037e15:	fild   QWORD PTR [rdx-0x1]
   140037e18:	clc    
   140037e19:	rcr    DWORD PTR [rbx-0x1],cl
   140037e1c:	bnd ret 0xff45
   140037e20:	out    0xac,al
   140037e22:	sub    bh,bh
   140037e24:	mov    ecx,0x8ef01378
   140037e29:	pop    rbx
   140037e2a:	(bad)  
   140037e2b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
	...
   140037e3c:	sbb    ebp,eax
   140037e3e:	inc    DWORD PTR [rbp-0x1a002100]
   140037e44:	add    BYTE PTR [rdx+0x732be5ff],bh
   140037e4a:	xchg   esi,eax
   140037e4b:	xchg   esp,eax
   140037e4c:	mov    cl,0x82
   140037e4e:	sub    eax,0x48bfe6e7
   140037e53:	(bad)  
   140037e54:	out    dx,al
   140037e55:	rcr    BYTE PTR [rdi-0x1],cl
   140037e58:	hlt    
   140037e59:	loopne 0x140037ecf
   140037e5b:	(bad)  
   140037e5c:	cli    
   140037e5d:	(bad)  
   140037e5e:	cmp    edi,0xfffffffc
   140037e61:	repnz (bad) 
   140037e63:	(bad)  
   140037e64:	std    
   140037e65:	repz xchg esp,eax
   140037e67:	(bad)  
   140037e68:	clc    
   140037e69:	(bad)  
   140037e6a:	nop
   140037e6b:	dec    cl
   140037e6d:	sahf   
   140037e6e:	rex.WB in al,0xa1
   140037e71:	sbb    DWORD PTR [ebp+0x401967a1],esp
   140037e78:	movabs al,ds:0x9f071a67a0141968
   140037e81:	data16 sbb ch,BYTE PTR [rip+0x701a679e]        # 0x1b01de626
   140037e88:	popf   
   140037e89:	gs sbb ebp,ecx
   140037e8c:	shr    DWORD PTR [rsi-0x210710a2],cl
   140037e92:	jle    0x140037e93
   140037e94:	(bad)  
   140037e95:	jmp    0x121017e13
   140037e9a:	ins    BYTE PTR es:[rdi],dx
   140037e9b:	push   rsi
   140037e9d:	(bad)  
   140037e9e:	pop    rsp
   140037e9f:	(bad)  
   140037ea0:	out    dx,eax
   140037ea1:	rol    BYTE PTR [rbp-0x1],0xe4
   140037ea5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140037ea6:	(bad)  
   140037ea7:	jmp    QWORD PTR [rsi-0x7018e197]
   140037ead:	pop    rsp
   140037eae:	(bad)  
   140037eaf:	rex.WR add BYTE PTR [rax],r8b
	...
   140037eba:	add    BYTE PTR [rax],al
   140037ebc:	xor    al,0xe3
   140037ebe:	(bad)  
   140037ebf:	gs add bh,ah
   140037ec2:	jmp    rbp
   140037ec4:	add    al,cl
   140037ec6:	jmp    rbp
   140037ec8:	sbb    dl,BYTE PTR [rax-0x5e3c1a3f]
   140037ece:	rex cli 
   140037ed0:	out    0xc7,eax
   140037ed2:	push   rsi
   140037ed3:	push   rax
   140037ed5:	fsubr  DWORD PTR [rbp-0x1]
   140037ed8:	clc    
   140037ed9:	out    0x7e,al
   140037edb:	(bad)  
   140037edc:	cld    
   140037edd:	icebp  
   140037ede:	mov    edi,edi
   140037ee0:	std    
   140037ee1:	cmc    
   140037ee2:	xchg   ebp,eax
   140037ee3:	(bad)  
   140037ee4:	sti    
   140037ee5:	out    dx,eax
   140037ee6:	xchg   ebp,eax
   140037ee7:	dec    esp
   140037ee9:	movabs eax,ds:0x6aa3751969a3e44b
   140037ef2:	sbb    al,BYTE PTR [rdx]
	...
   140037f08:	lahf   
   140037f09:	sbb    ebp,DWORD PTR [eip+0xffffffffc31a669e]        # 0x1031de5ae
   140037f10:	fnstenv [rbp-0x24090c9c]
   140037f16:	jge    0x140037f17
   140037f18:	clc    
   140037f19:	fidivr WORD PTR [rsi-0x1]
   140037f1c:	neg    edx
   140037f1e:	jp     0x140037f1f
   140037f20:	repnz shl DWORD PTR [rcx-0x1],1
   140037f24:	in     al,dx
   140037f25:	ret    
   140037f26:	fs dec ebp
   140037f29:	xchg   edx,eax
   140037f2a:	cmp    dh,bh
   140037f2c:	xchg   ecx,eax
   140037f2d:	pop    rbp
   140037f2e:	(bad)  
   140037f2f:	lahf   
	...
   140037f3c:	rex.WB loope 0x140037f3c
   140037f3f:	cmp    DWORD PTR [rip+0x3e5fff1],edx        # 0x143e97f36
   140037f45:	fsincos 
   140037f47:	(bad)  
   140037f48:	or     ebp,DWORD PTR [rbx-0x5668020d]
   140037f4e:	jb     0x140037f4f
   140037f50:	call   0x13002e224
   140037f55:	fdiv   QWORD PTR [rsi-0x1]
   140037f58:	cli    
   140037f59:	in     al,dx
   140037f5a:	xchg   bh,bh
   140037f5c:	std    
   140037f5d:	repz xchg edx,eax
   140037f5f:	(bad)  
   140037f60:	cld    
   140037f61:	cmc    
   140037f62:	cdq    
   140037f63:	jmp    rbp
   140037f65:	(bad)  
   140037f66:	outs   dx,BYTE PTR ds:[rsi]
   140037f67:	icebp  
   140037f68:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140037f69:	push   0x1b
   140037f6b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140037f6c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140037f6d:	imul   ebx,DWORD PTR [rbx],0x5
	...
   140037f8c:	lahf   
   140037f8d:	push   0x679e301b
   140037f92:	sbb    ebx,DWORD PTR [rax-0x54e59962]
   140037f98:	popf   
   140037f99:	sbb    DWORD PTR gs:[rdi-0x32e69b66],edi
   140037fa0:	cwde   
   140037fa1:	(bad)  
   140037fa2:	sbb    ch,dl
   140037fa4:	xchg   ebp,eax
   140037fa5:	pop    rsi
   140037fa6:	(bad)  
   140037fa7:	(bad)  
   140037fa8:	xchg   ecx,eax
   140037fa9:	pop    rdx
   140037faa:	adc    al,0xc2
   140037fac:	xchg   ecx,eax
   140037fad:	pop    rsp
   140037fae:	(bad)  
   140037faf:	pushf  
   140037fb0:	xchg   ecx,eax
   140037fb1:	pop    rbp
   140037fb2:	(bad)  
   140037fb3:	add    BYTE PTR cs:[rax],al
   140037fb6:	add    BYTE PTR [rax],al
   140037fb8:	add    BYTE PTR [rax],al
   140037fba:	add    BYTE PTR [rax],al
   140037fbc:	test   edx,ebp
   140037fbe:	dec    DWORD PTR [rcx]
   140037fc0:	rex.X fsub st,st(1)
   140037fc3:	(bad)  
   140037fc4:	or     al,ah
   140037fc6:	cmc    
   140037fc7:	icebp  
   140037fc8:	or     al,ch
   140037fca:	cmc    
   140037fcb:	(bad)  
   140037fcc:	and    DWORD PTR [rcx+rax*8+0x6ebfcdff],ebx
   140037fd3:	(bad)  
   140037fd4:	call   0x13c02fbb1
   140037fd9:	icebp  
   140037fda:	mov    ?,edi
   140037fdc:	(bad)  
   140037fdd:	clc    
   140037fde:	cdq    
   140037fdf:	(bad)  
   140037fe0:	std    
   140037fe1:	cmc    
   140037fe2:	fwait
   140037fe3:	inc    ebx
   140037fe5:	xchg   esp,eax
   140037fe6:	fsub   QWORD PTR ds:[rdi+0x3d1c6c]
	...
   140038039:	add    BYTE PTR [rax],al
   14003803b:	add    bh,bh
   14003803d:	(bad)  
   14003803e:	inc    DWORD PTR [rcx]
   140038040:	pop    rax
   140038041:	shl    bl,cl
   140038043:	mov    gs,WORD PTR [rbx]
   140038045:	in     al,dx
   140038046:	hlt    
   140038047:	not    BYTE PTR [rdi+rdx*8]
   14003804a:	cmc    
   14003804b:	inc    DWORD PTR [rcx]
   14003804d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003804e:	cld    
   14003804f:	jmp    FWORD PTR [rbx-0x5c]
   140038052:	cdq    
   140038053:	call   rsi
   140038055:	retf   
   140038056:	jp     0x140038057
   140038058:	cld    
   140038059:	cmc    
   14003805a:	xchg   ebx,eax
   14003805b:	(bad)  
   14003805c:	(bad)  
   14003805d:	sti    
   14003805e:	popf   
   14003805f:	(bad)  
   140038060:	std    
   140038061:	neg    BYTE PTR [rdi+rdi*8-0x2cd8854f]
   140038068:	test   eax,0x131c6e
	...
   1400380bd:	add    BYTE PTR [rax],al
   1400380bf:	add    BYTE PTR [rdx-0x2e],dh
   1400380c2:	in     al,0x2d
   1400380c4:	cmp    ebp,edi
   1400380c6:	repnz clc 
   1400380c8:	pop    rax
   1400380c9:	(bad)  
   1400380ca:	idiv   bh
   1400380cc:	add    ebx,eax
   1400380ce:	cld    
   1400380cf:	inc    DWORD PTR [rip+0xffffffff97ffee9c]        # 0xd8036f71
   1400380d5:	scas   eax,DWORD PTR es:[rdi]
   1400380d6:	nop
   1400380d7:	push   rdi
   1400380d9:	icebp  
   1400380da:	cdq    
   1400380db:	(bad)  
   1400380dc:	(bad)  
   1400380dd:	sti    
   1400380de:	movabs al,ds:0x3c95ccffa1feffff
   1400380e7:	div    DWORD PTR [rbx-0x562cd684]
   1400380ed:	outs   dx,DWORD PTR ds:[rsi]
   1400380ee:	sbb    eax,0x1d6ea8ce
   1400380f3:	iret   
   1400380f4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400380f5:	outs   dx,BYTE PTR ds:[rsi]
   1400380f6:	sbb    eax,0x1d6da7cf
   1400380fb:	iret   
   1400380fc:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400380fd:	ins    BYTE PTR es:[rdi],dx
   1400380fe:	sbb    al,0xcf
   140038100:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140038101:	ins    BYTE PTR es:[rdi],dx
   140038102:	sbb    al,0xd0
   140038104:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140038105:	imul   ebx,DWORD PTR [rax+rdx*8],0xffffffa3
   140038109:	imul   ebx,DWORD PTR [rcx+rdx*8],0xffffffa2
   14003810d:	push   0x1b
   14003810f:	shl    DWORD PTR [rcx-0x5e2de497],1
   140038115:	imul   ebx,DWORD PTR [rbx],0x1b68a0d2
   14003811b:	rcr    DWORD PTR [rdi-0x612ce499],cl
   140038121:	addr32 sbb dl,ah
   140038124:	popf   
   140038125:	data16 sbb dl,ah
   140038128:	pushf  
   140038129:	gs sbb dl,ch
   14003812c:	(bad)  
   14003812d:	fs sbb ebp,edx
   140038130:	cwde   
   140038131:	(bad)  
   140038132:	sbb    DWORD PTR [rdi+0x0],ebp
	...
   140038141:	add    BYTE PTR [rax],al
   140038143:	add    BYTE PTR [rbx+rax*8-0x3f],ah
   140038147:	in     al,dx
   140038148:	popf   
   140038149:	in     eax,dx
   14003814a:	idiv   bh
   14003814c:	sbb    cl,ah
   14003814e:	cld    
   14003814f:	inc    DWORD PTR [rax]
   140038151:	mov    ch,0xff
   140038153:	jmp    FWORD PTR [rbx]
   140038155:	lahf   
   140038156:	enter  0xd3ff,0xd2
   14003815a:	nop
   14003815b:	(bad)  
   14003815c:	(bad)  
   14003815d:	sti    
   14003815e:	movabs ds:0xa4feffffa2feffff,al
   140038167:	(bad)  
   140038168:	(bad)  
   140038169:	jmp    QWORD PTR [rdi+rdi*8-0x5b0001]
   140038170:	(bad)  
   140038171:	jmp    QWORD PTR [rdi+rdi*8-0x5b0001]
   140038178:	(bad)  
   140038179:	jmp    QWORD PTR [rdi+rdi*8-0x5b0101]
   140038180:	(bad)  
   140038181:	(bad)  
   140038182:	movabs ds:0xa2fbffffa2fcffff,eax
   14003818b:	(bad)  
   14003818c:	(bad)  
   14003818d:	stc    
   14003818e:	movabs al,ds:0x96f4ffff9bf8ffff
   140038197:	(bad)  
   140038198:	(bad)  
   140038199:	out    dx,eax
   14003819a:	mov    edi,?
   14003819c:	(bad)  
   14003819d:	jmp    0x14003821b
   14003819f:	(bad)  
   1400381a0:	cld    
   1400381a1:	fisubr WORD PTR [rdi+rdi*8-0xc]
   1400381a5:	rcr    BYTE PTR [rdx-0x1],1
   1400381a8:	in     eax,dx
   1400381a9:	mov    ecx,0x96d8ff43
   1400381ae:	and    al,0xfc
   1400381b0:	(bad)  
   1400381b1:	fs sbb ecx,eax
	...
   1400381c4:	pushf  
   1400381c5:	mov    edx,DWORD PTR [rax-0x33]
   1400381c8:	sahf   
   1400381c9:	in     al,dx
   1400381ca:	idiv   bh
   1400381cc:	jp     0x1400381c6
   1400381ce:	std    
   1400381cf:	inc    DWORD PTR [rax]
   1400381d1:	(bad)  
   1400381d2:	(bad)  
   1400381d3:	inc    DWORD PTR [rax]
   1400381d5:	popf   
   1400381d6:	(bad)  
   1400381d7:	jmp    FWORD PTR [rbp-0x54]
   1400381da:	lods   al,BYTE PTR ds:[rsi]
   1400381db:	(bad)  
   1400381dc:	jmp    0x1400381c6
   1400381de:	cdq    
   1400381df:	(bad)  
   1400381e0:	(bad)  
   1400381e1:	(bad)  
   1400381e2:	movabs ds:0xa4ffffffa4feffff,eax
   1400381eb:	(bad)  
   1400381ec:	(bad)  
   1400381ed:	jmp    QWORD PTR [rdi+rdi*8-0x5b0001]
   1400381f4:	(bad)  
   1400381f5:	jmp    QWORD PTR [rdi+rdi*8-0x5b0001]
   1400381fc:	(bad)  
   1400381fd:	(bad)  
   1400381fe:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400381ff:	(bad)  
   140038200:	(bad)  
   140038201:	(bad)  
   140038202:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140038203:	(bad)  
   140038204:	(bad)  
   140038205:	cld    
   140038206:	movabs ds:0xa0f9ffffa2fcffff,al
   14003820f:	(bad)  
   140038210:	(bad)  
   140038211:	clc    
   140038212:	popf   
   140038213:	(bad)  
   140038214:	push   rbp
   140038216:	cwde   
   140038217:	(bad)  
   140038218:	push   rax
   14003821a:	(bad)  
   14003821b:	(bad)  
   14003821c:	(bad)  
   14003821d:	jmp    0x14003829e
   14003821f:	(bad)  
   140038220:	std    
   140038221:	loopne 0x140038290
   140038223:	push   rsi
   140038225:	rcr    BYTE PTR [rdx-0x1],cl
   140038228:	in     eax,dx
   140038229:	mov    esp,0x99dcff44
   14003822e:	and    edi,esp
   140038230:	pushf  
   140038231:	gs sbb al,bl
	...
   140038244:	mov    al,0x77
   140038246:	and    eax,0xcbc482b9
   14003824b:	(bad)  
   14003824c:	mov    ch,0xf7
   14003824e:	cld    
   14003824f:	inc    DWORD PTR [rdi-0xc]
   140038252:	(bad)  
   140038253:	inc    DWORD PTR [rax]
   140038255:	(bad)  
   140038256:	(bad)  
   140038257:	inc    DWORD PTR [rdx]
   140038259:	popf   
   14003825a:	idiv   edi
   14003825c:	mov    BYTE PTR [rbx-0xf0e005e],dh
   140038262:	sahf   
   140038263:	(bad)  
   140038264:	(bad)  
   140038265:	(bad)  
   140038266:	movabs ds:0x9efcffffa0fdffff,al
   14003826f:	(bad)  
   140038270:	(bad)  
   140038271:	cli    
   140038272:	sahf   
   140038273:	(bad)  
   140038274:	(bad)  
   140038275:	cli    
   140038276:	sahf   
   140038277:	(bad)  
   140038278:	(bad)  
   140038279:	cli    
   14003827a:	sahf   
   14003827b:	(bad)  
   14003827c:	(bad)  
   14003827d:	cli    
   14003827e:	sahf   
   14003827f:	(bad)  
   140038280:	(bad)  
   140038281:	cli    
   140038282:	sahf   
   140038283:	(bad)  
   140038284:	(bad)  
   140038285:	cli    
   140038286:	pushf  
   140038287:	(bad)  
   140038288:	(bad)  
   140038289:	clc    
   14003828a:	fwait
   14003828b:	(bad)  
   14003828c:	(bad)  
   14003828d:	clc    
   14003828e:	popf   
   14003828f:	(bad)  
   140038290:	(bad)  
   140038291:	cmc    
   140038292:	(bad)  
   140038293:	(bad)  
   140038294:	push   rcx
   140038296:	xchg   ebx,eax
   140038297:	(bad)  
   140038298:	push   rdx
   14003829a:	mov    ?,edi
   14003829c:	(bad)  
   14003829d:	jmp    0x14003831e
   14003829f:	(bad)  
   1400382a0:	std    
   1400382a1:	fild   QWORD PTR [rdi+rdi*8-0xa]
   1400382a5:	rcr    BYTE PTR [rdx-0x1],cl
   1400382a8:	in     eax,dx
   1400382a9:	mov    esp,0x95d7ff43
   1400382ae:	and    edi,ecx
   1400382b0:	popf   
   1400382b1:	data16 sbb dh,BYTE PTR [rax+rax*1+0x0]
	...
   1400382c1:	add    BYTE PTR [rax],al
   1400382c3:	add    BYTE PTR [rdi+rsi*2-0x373f69e0],dh
   1400382ca:	(bad)  
   1400382cb:	cli    
   1400382cc:	xchg   edx,eax
   1400382cd:	fcomip st,st(5)
   1400382cf:	jmp    FWORD PTR [rbx+0x23fffefd]
   1400382d5:	jmp    0x1400382d6
   1400382d7:	inc    DWORD PTR [rax]
   1400382d9:	mov    esp,0x9e07ffff
   1400382de:	jmp    0x1400382df
   1400382e0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400382e1:	rcr    DWORD PTR [rbp+0x3b94c9ff],0xf6
   1400382e8:	mov    ah,0x7d
   1400382ea:	sub    bh,cl
   1400382ec:	lods   eax,DWORD PTR ds:[rsi]
   1400382ed:	jno    0x14003830d
   1400382ef:	int3   
   1400382f0:	lods   al,BYTE PTR ds:[rsi]
   1400382f1:	jno    0x140038311
   1400382f3:	int3   
   1400382f4:	stos   DWORD PTR es:[rdi],eax
   1400382f5:	jo     0x140038315
   1400382f7:	int    0xaa
   1400382f9:	jo     0x140038318
   1400382fb:	(bad)  
   1400382fc:	test   eax,0xa9ce1d6f
   140038301:	outs   dx,DWORD PTR ds:[rsi]
   140038302:	sbb    eax,0x1d6ea8cf
   140038307:	iret   
   140038308:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140038309:	ins    DWORD PTR es:[rdi],dx
   14003830a:	sbb    eax,0x1f70a8cf
   14003830f:	rol    ah,1
   140038311:	mov    WORD PTR [rip+0xffffffff8deafcf9],?        # 0xcdee8010
   140038317:	(bad)  
   140038318:	push   rdx
   14003831a:	mov    ?,edi
   14003831c:	(bad)  
   14003831d:	jmp    0x11f00829f
   140038322:	imul   edi,edi,0xff58cff5
   140038328:	jmp    0x1400382e2
   14003832a:	rex dec esp
   14003832d:	mov    esp,DWORD PTR [rax]
   14003832f:	hlt    
   140038330:	sahf   
   140038331:	sbb    dl,BYTE PTR [ebx+0x0]
	...
   140038344:	mov    ah,0x77
   140038346:	and    BYTE PTR [rcx-0x1c],ch
   140038349:	mov    ebp,0xd5b2ee62
   14003834e:	mov    eax,0xfdfcadff
   140038353:	call   FWORD PTR [rax+0x10ffffff]
   140038359:	loop   0x14003835a
   14003835b:	inc    DWORD PTR [rax]
   14003835d:	mov    ch,0xff
   14003835f:	call   QWORD PTR [rdx]
   140038361:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140038362:	loopne 0x140038363
   140038364:	xchg   edi,eax
   140038365:	jl     0x1400383a7
   140038367:	(bad)  
   140038368:	scas   al,BYTE PTR es:[rdi]
   140038369:	jae    0x140038389
   14003836b:	adc    DWORD PTR [rax],eax
	...
   140038389:	add    BYTE PTR [rax],al
   14003838b:	add    BYTE PTR [rdi-0x57fae293],ah
   140038391:	jo     0x1400383b2
   140038393:	sar    bl,1
   140038395:	jmp    0x130038326
   14003839a:	mov    bh,bh
   14003839c:	jmp    rsi
   14003839e:	jns    0x14003839f
   1400383a0:	stc    
   1400383a1:	fisubr DWORD PTR [rax-0x1]
   1400383a4:	repz retf 0xff52
   1400383a8:	call   0xfc02bc5d
   1400383ad:	jnp    0x1400383d4
   1400383af:	(bad)  
   1400383b0:	sahf   
   1400383b1:	addr32 sbb al,0x63
	...
   1400383c4:	mov    ch,0x78
   1400383c6:	and    BYTE PTR [rcx],dh
   1400383c8:	int3   
   1400383c9:	cdq    
   1400383ca:	rex fucomi st,st(1)
   1400383cd:	loop   0x14003835f
   1400383cf:	dec    DWORD PTR [rdx-0x46003435]
   1400383d5:	(bad)  
   1400383d6:	(bad)  
   1400383d7:	inc    DWORD PTR [rbp+0x4ffffff]
   1400383dd:	fdiv   st(7),st
   1400383df:	inc    DWORD PTR [rax]
   1400383e1:	mov    dl,0xff
   1400383e3:	jmp    FWORD PTR [rbx]
   1400383e5:	xchg   ebp,eax
   1400383e6:	mov    eax,0x2473a9f5
   1400383eb:	rex.WB add BYTE PTR [r8],al
	...
   14003840a:	add    BYTE PTR [rax],al
   14003840c:	test   al,0x6e
   14003840e:	sbb    eax,0x4293c242
   140038413:	fdivp  st(6),st
   140038415:	(bad)  
   140038416:	mov    bh,bh
   140038418:	(bad)  
   140038419:	in     eax,dx
   14003841a:	test   edi,edi
   14003841c:	std    
   14003841d:	in     al,0x72
   14003841f:	(bad)  
   140038420:	clc    
   140038421:	(bad)  
   140038422:	(bad)  
   140038423:	push   rax
   140038425:	(bad)  
   140038426:	rex.WRB jmp r13
   140038429:	test   eax,0x6faaff31
   14003842e:	and    ebx,ebx
   140038430:	popf   
   140038431:	data16 sbb al,0x2a
	...
   140038448:	mov    ch,0x78
   14003844a:	and    BYTE PTR [rax-0x8932c0c],ch
   140038450:	fsubrp st(4),st
   140038452:	movabs ds:0xffffbdffdbd188ff,eax
   14003845b:	push   QWORD PTR [rdi+rdi*8-0x1]
   14003845f:	inc    DWORD PTR [rax]
   140038461:	xlat   BYTE PTR ds:[rbx]
   140038462:	(bad)  
   140038463:	inc    DWORD PTR [rax]
   140038465:	lods   eax,DWORD PTR ds:[rsi]
   140038466:	(bad)  
   140038467:	jmp    QWORD PTR [rip+0xffffffffa2e5aa8a]        # 0xe2e92ef7
   14003846d:	je     0x14003849a
   14003846f:	sbb    al,0x0
	...
   140038485:	add    BYTE PTR [rax],al
   140038487:	add    BYTE PTR [rdx-0x56e9e291],ch
   14003848d:	outs   dx,DWORD PTR ds:[rsi]
   14003848e:	sbb    eax,0x70c9e8b3
   140038493:	hlt    
   140038494:	(bad)  
   140038495:	out    dx,al
   140038496:	mov    edi,edi
   140038498:	(bad)  
   140038499:	jmp    0x11f00841b
   14003849e:	ins    BYTE PTR es:[rdi],dx
   14003849f:	push   rsi
   1400384a1:	rcr    DWORD PTR [rdx-0x1],1
   1400384a4:	in     eax,dx
   1400384a5:	mov    edx,0x90cfff43
   1400384aa:	and    esp,esi
   1400384ac:	movabs al,ds:0xa81d6a
	...
   1400384c5:	add    BYTE PTR [rax],al
   1400384c7:	add    BYTE PTR [rsi-0x2cbedf88],dh
   1400384cd:	movabs eax,ds:0xe2d4ff89eefddf43
   1400384d6:	stos   BYTE PTR es:[rdi],al
   1400384d7:	dec    DWORD PTR [rbp-0x43001a28]
   1400384dd:	(bad)  
   1400384de:	(bad)  
   1400384df:	jmp    FWORD PTR [rbx-0x2]
   1400384e2:	(bad)  
   1400384e3:	inc    DWORD PTR [rax]
   1400384e5:	xlat   BYTE PTR ds:[rbx]
   1400384e6:	(bad)  
   1400384e7:	inc    DWORD PTR [rax]
   1400384e9:	scas   eax,DWORD PTR es:[rdi]
   1400384ea:	(bad)  
   1400384eb:	call   FWORD PTR [rip+0xffffffff9aebb08a]        # 0xdaef357b
   1400384f1:	jne    0x140038527
   1400384f3:	jae    0x1400384a3
   1400384f5:	jae    0x140038516
   1400384f7:	add    BYTE PTR es:[rax],al
   1400384fa:	add    BYTE PTR [rax],al
   1400384fc:	add    BYTE PTR [rax],al
   1400384fe:	add    BYTE PTR [rax],al
   140038500:	lods   al,BYTE PTR ds:[rsi]
   140038501:	jno    0x140038521
   140038503:	es stos DWORD PTR es:[rdi],eax
   140038505:	jno    0x140038525
   140038507:	gs stos DWORD PTR es:[rdi],eax
   140038509:	jo     0x140038529
   14003850b:	rcr    ecx,0xaf
   14003850e:	pop    rcx
   14003850f:	call   0x13f8e7212
   140038514:	(bad)  
   140038515:	in     eax,dx
   140038516:	(bad)  
   140038517:	(bad)  
   140038518:	jmp    rsp
   14003851a:	je     0x14003851b
   14003851c:	clc    
   14003851d:	fsub   DWORD PTR [rbx-0x1]
   140038520:	icebp  
   140038521:	(bad)  
   140038522:	push   rax
   140038523:	jmp    rsi
   140038525:	lods   eax,DWORD PTR ds:[rsi]
   140038526:	(bad)  
   140038527:	push   QWORD PTR [rbx-0x6520db8a]
   14003852d:	imul   esp,DWORD PTR [rip+0x3e],0x0        # 0x140038572
	...
   14003854c:	mov    dh,0x78
   14003854e:	and    BYTE PTR [rdi-0x13a73d19],dl
   140038554:	(bad)  
   140038555:	lock xchg ebx,eax
   140038557:	dec    ebx
   140038559:	fisubr WORD PTR [rsi-0x14216c01]
   14003855f:	(bad)  
   140038560:	mov    edx,0x6effffff
   140038565:	(bad)  
   140038566:	(bad)  
   140038567:	inc    DWORD PTR [rax]
   140038569:	fdivr  st,st(7)
   14003856b:	inc    DWORD PTR [rax]
   14003856d:	mov    dl,0xff
   14003856f:	jmp    QWORD PTR [rbx*4-0x7b5f0739]
   140038576:	rex.RXB fisubr DWORD PTR [r10-0x5133e090]
   14003857d:	jb     0x14003859d
   14003857f:	retf   
   140038580:	mov    esp,0xd3d63488
   140038585:	stos   DWORD PTR es:[rdi],eax
   140038586:	pop    rax
   140038587:	in     eax,0xf4
   140038589:	fadd   QWORD PTR [rbx-0x73120106]
   14003858f:	(bad)  
   140038590:	(bad)  
   140038591:	in     eax,dx
   140038592:	xchg   bh,bh
   140038594:	jmp    rsi
   140038596:	jns    0x140038597
   140038598:	cld    
   140038599:	fld    TBYTE PTR [rcx-0x1]
   14003859c:	cmc    
   14003859d:	(bad)  
   14003859e:	pop    rcx
   14003859f:	(bad)  
   1400385a0:	jmp    0x14003855b
   1400385a2:	rex.XB inc r15d
   1400385a5:	mov    DWORD PTR [rcx],esp
   1400385a7:	in     al,dx
   1400385a8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400385a9:	ins    DWORD PTR es:[rdi],dx
   1400385aa:	(bad)  
   1400385ab:	xchg   esi,eax
   1400385ac:	(bad)  
   1400385ad:	test   dh,cl
   1400385af:	or     al,BYTE PTR [rax]
	...
   1400385c9:	add    BYTE PTR [rax],al
   1400385cb:	add    BYTE PTR [rsi-0x45e5de87],dh
   1400385d1:	jnp    0x1400385f5
   1400385d3:	mov    ecx,0xf262d0f3
   1400385d8:	push   rdx
   1400385da:	xchg   esi,eax
   1400385db:	dec    edx
   1400385dd:	fisubr WORD PTR [rdi-0x1b246c01]
   1400385e3:	(bad)  
   1400385e4:	mov    ecx,0x77ffffff
   1400385e9:	(bad)  
   1400385ea:	(bad)  
   1400385eb:	inc    DWORD PTR [rsi]
   1400385ed:	fdiv   st(7),st
   1400385ef:	inc    DWORD PTR [rax]
   1400385f1:	mov    ch,0xff
   1400385f3:	call   FWORD PTR [rdi]
   1400385f5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400385f6:	(bad)  
   1400385f8:	movabs ds:0xf8ff89d2dfff8db0,al
   140038601:	call   0x12e018598
   140038606:	nop
   140038607:	(bad)  
   140038608:	push   rcx
   14003860a:	mov    ?,edi
   14003860c:	(bad)  
   14003860d:	in     eax,dx
   14003860e:	mov    bh,bh
   140038610:	jmp    rdi
   140038612:	jp     0x140038613
   140038614:	cld    
   140038615:	fild   QWORD PTR [rbp-0x1]
   140038618:	not    ecx
   14003861a:	pop    rbp
   14003861b:	(bad)  
   14003861c:	out    dx,al
   14003861d:	mov    edi,0x96d6ff4a
   140038622:	and    al,0xf1
   140038624:	test   al,0x6f
   140038626:	(bad)  
   140038627:	mov    esi,0x35afab45
   14003862c:	(bad)  
   14003862d:	stos   BYTE PTR es:[rdi],al
   14003862e:	lock cmp DWORD PTR [rax],eax
   140038631:	add    BYTE PTR [rbp+0x6],dl
	...
   140038650:	mov    dh,0x79
   140038652:	and    DWORD PTR [rcx],esi
   140038654:	mov    ebp,0xf1c5267e
   140038659:	shl    BYTE PTR [rdx-0xe],1
   14003865c:	push   rcx
   14003865e:	(bad)  
   14003865f:	dec    edi
   140038661:	fisubr WORD PTR [rdx-0x222c7001]
   140038667:	push   QWORD PTR [rsi-0x7b000001]
   14003866d:	(bad)  
   14003866e:	(bad)  
   14003866f:	call   QWORD PTR [rbx]
   140038671:	in     al,0xff
   140038673:	inc    DWORD PTR [rax]
   140038675:	mov    ebp,0xa50affff
   14003867a:	jmp    0xdcaf0b7e
   14003867f:	call   rcx
   140038681:	leave  
   140038682:	xchg   edi,edi
   140038684:	cli    
   140038685:	in     al,dx
   140038686:	mov    ?,edi
   140038688:	(bad)  
   140038689:	in     eax,dx
   14003868a:	test   bh,bh
   14003868c:	jmp    rdi
   14003868e:	js     0x14003868f
   140038690:	std    
   140038691:	fild   QWORD PTR [rsi-0x1]
   140038694:	not    cl
   140038696:	(bad)  
   140038697:	(bad)  
   140038698:	out    dx,eax
   140038699:	ror    DWORD PTR [rbp-0x1],0xd9
   14003869d:	cdq    
   14003869e:	(bad)  
   14003869f:	icebp  
   1400386a0:	stos   DWORD PTR es:[rdi],eax
   1400386a1:	outs   dx,BYTE PTR ds:[rsi]
   1400386a2:	sbb    eax,0x2272aacc
   1400386a7:	sub    eax,0x34fac40e
   1400386ac:	add    al,0xb9
   1400386ae:	sti    
   1400386af:	imul   eax,DWORD PTR [rax],0x145500
   1400386b5:	add    BYTE PTR [rbp+0x3],dl
	...
   1400386d4:	mov    dh,0x79
   1400386d6:	and    DWORD PTR [rcx],esi
   1400386d8:	mov    edx,0xe7ba227b
   1400386dd:	mov    esi,0xeaffec55
   1400386e2:	test   bh,bh
   1400386e4:	rcr    ch,cl
   1400386e6:	movabs eax,ds:0xffffb9ffcdce95ff
   1400386ef:	call   QWORD PTR [rbx+0x31ffffff]
   1400386f5:	out    dx,al
   1400386f6:	(bad)  
   1400386f7:	inc    DWORD PTR [rax]
   1400386f9:	retf   
   1400386fa:	(bad)  
   1400386fb:	inc    DWORD PTR [rdx]
   1400386fd:	movabs ds:0xc0c2ffb4af6cfffe,eax
   140038706:	mov    edi,?
   140038708:	in     eax,dx
   140038709:	fdivr  DWORD PTR [rdi-0x1]
   14003870c:	cli    
   14003870d:	fisubr DWORD PTR [rdi-0x1]
   140038710:	repz (bad) 
   140038712:	pop    rbp
   140038713:	(bad)  
   140038714:	out    dx,al
   140038715:	mov    esi,0x94d2ff4c
   14003871a:	sub    bl,ch
   14003871c:	lods   eax,DWORD PTR ds:[rsi]
   14003871d:	jno    0x14003873c
   14003871f:	mov    ebp,0x2c1d6fa9
   140038724:	add    BYTE PTR [rax],al
   140038726:	add    BYTE PTR [rax],al
   140038728:	or     eax,0x12df2b8
   14003872d:	mov    esi,0x95fe
   140038732:	push   rbp
   140038733:	sbb    al,BYTE PTR [rax]
   140038735:	add    BYTE PTR [rbp+0x6],dl
	...
   140038758:	mov    dh,0x79
   14003875a:	and    DWORD PTR [rdi],edx
   14003875c:	mov    dh,0x78
   14003875e:	and    BYTE PTR [rdx-0x22be6230],bl
   140038764:	out    dx,eax
   140038765:	(bad)  
   140038766:	imul   esi,ebp,0xff91d7d6
   14003876c:	xchg   edi,eax
   14003876d:	enter  0xffb8,0xaf
   140038771:	idiv   esp
   140038773:	jmp    QWORD PTR [rsi+rdi*8-0x7a40001]
   14003877a:	(bad)  
   14003877b:	inc    DWORD PTR [rax]
   14003877d:	(bad)  
   14003877f:	inc    DWORD PTR [rax]
   140038781:	mov    dh,0xff
   140038783:	dec    DWORD PTR [rdx-0x53]
   140038786:	enter  0xa3e5,0xb2
   14003878a:	nop
   14003878b:	call   rsi
   14003878d:	mov    esp,0xacdcff6b
   140038792:	rex.XB hlt 
   140038794:	mov    ebp,0xaadf2e83
   140038799:	outs   dx,DWORD PTR ds:[rsi]
   14003879a:	(bad)  
   14003879b:	popf   
   14003879c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003879d:	ins    BYTE PTR es:[rdi],dx
   14003879e:	and    bl,BYTE PTR [rdx]
   1400387a0:	add    BYTE PTR [rax],al
   1400387a2:	push   rbp
   1400387a3:	add    DWORD PTR [rax],eax
   1400387a5:	add    BYTE PTR [rbp+0x3],dl
   1400387a8:	(bad)  
   1400387a9:	stos   BYTE PTR es:[rdi],al
   1400387aa:	(bad)  
   1400387ab:	add    BYTE PTR [rdi+r15*8+0x550000b0],dil
   1400387b3:	(bad)  
   1400387b4:	add    BYTE PTR [rax],al
   1400387b6:	push   rbp
   1400387b7:	add    eax,0x0
	...
   1400387e0:	mov    dh,0x78
   1400387e2:	and    BYTE PTR [rdi],bh
   1400387e4:	mov    dh,0x7a
   1400387e6:	and    ch,BYTE PTR [rax-0x2bc36b39]
   1400387ec:	iret   
   1400387ed:	mov    ah,0x68
   1400387ef:	in     eax,dx
   1400387f0:	mov    bh,0xc1
   1400387f2:	xchg   ebx,eax
   1400387f3:	cli    
   1400387f4:	xchg   edi,eax
   1400387f5:	rcl    bl,1
   1400387f7:	std    
   1400387f8:	test   eax,0x7bfffdf8
   1400387fd:	clc    
   1400387fe:	std    
   1400387ff:	jmp    QWORD PTR [rip+0x1fffce8]        # 0x1420384ed
   140038805:	leave  
   140038806:	cld    
   140038807:	in     eax,0x4
   140038809:	stos   DWORD PTR es:[rdi],eax
   14003880a:	cli    
   14003880b:	int    0x50
   14003880d:	mov    DWORD PTR [rbx+0x38647cc1],edx
   140038813:	(bad)  
   140038814:	addr32 rex.WB xor al,0x54
   140038818:	add    al,0x4
   14003881a:	push   rdi
   14003881b:	add    BYTE PTR es:[rax],al
   14003881e:	push   rbp
   14003881f:	(bad)  
   140038820:	add    BYTE PTR [rax],al
   140038822:	push   rbp
   140038823:	sbb    eax,DWORD PTR [rax]
   140038825:	add    BYTE PTR [rbp+0x1c],dl
   140038828:	add    eax,0x90f8b5
   14003882d:	mov    dl,0xfe
   14003882f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140038830:	add    BYTE PTR [rax],al
   140038832:	push   rbp
   140038833:	sbb    BYTE PTR [rax],al
   140038835:	add    BYTE PTR [rbp+0x2],dl
	...
   140038868:	mov    dh,0x78
   14003886a:	and    BYTE PTR [rbx],ah
   14003886c:	mov    bh,0x7c
   14003886e:	and    al,0x63
   140038870:	mov    ebx,0xbd9e2e84
   140038875:	xchg   esi,eax
   140038876:	rex.WXB mov r10b,0xac
   140038879:	lods   eax,DWORD PTR ds:[rsi]
   14003887a:	and    edx,0xf5ece07e
   140038880:	cmp    ch,dh
   140038882:	idiv   dh
   140038884:	sbb    ah,ah
   140038886:	idiv   ebp
   140038888:	add    edx,ebp
   14003888a:	idiv   edx
   14003888c:	add    al,cl
   14003888e:	cli    
   14003888f:	cmc    
   140038890:	add    DWORD PTR [rsi+rdi*8-0xf63fa23],esi
   140038897:	pop    QWORD PTR [rsp+rdi*2]
   14003889a:	iret   
   14003889b:	push   0x4b903f03
   1400388a0:	add    edi,DWORD PTR [rip+0xffffffffa405498e]        # 0xe408d234
   1400388a6:	out    dx,al
   1400388a7:	test   BYTE PTR [rax],al
   1400388a9:	mov    edi,0x9503edff
   1400388ae:	lock push 0x0
   1400388b1:	add    BYTE PTR [rbp+0xa],dl
	...
   1400388fc:	mov    al,0xce
   1400388fe:	out    dx,al
   1400388ff:	add    ecx,DWORD PTR [rdx-0x23]
   140038902:	sti    
   140038903:	cmp    esp,DWORD PTR [rip+0x793ffea]        # 0x1479788f3
   140038909:	repz (bad) 
   14003890b:	fld    QWORD PTR [rax]
   14003890d:	call   0x11a047111
   140038912:	jmp    rsi
   140038914:	add    ch,cl
   140038916:	jmp    rsp
   140038918:	add    ah,al
   14003891a:	jmp    rsp
   14003891c:	add    ah,al
   14003891e:	jmp    rbx
   140038920:	add    bh,al
   140038922:	jmp    rbp
   140038924:	add    al,cl
   140038926:	jmp    rsi
   140038928:	add    bh,BYTE PTR [rsi+0x2102a2fe]
   14003892e:	jae    0x14003893f
   140038930:	add    BYTE PTR [rax],al
   140038932:	push   rbp
   140038933:	add    DWORD PTR [rax],eax
	...
   140038981:	add    BYTE PTR [rax],al
   140038983:	add    bh,bh
   140038985:	(bad)  
   140038986:	inc    DWORD PTR [rcx]
   140038988:	push   rbx
   140038989:	loopne 0x14003898a
   14003898b:	or     eax,0x50fee324
   140038990:	adc    esp,esi
   140038992:	dec    DWORD PTR [rdx-0x5c0017f5]
   140038998:	add    eax,0x5b8ffeb
   14003899d:	out    0xff,eax
   14003899f:	mov    eax,0x9bfede06
   1400389a4:	(bad)  
   1400389a5:	ret    
   1400389a6:	test   DWORD PTR [rdi+0x0],0x45500
	...
   1400389b5:	add    BYTE PTR [rax],al
   1400389b7:	add    al,dh
   1400389b9:	(bad)  
   1400389ba:	(bad)  
   1400389bb:	inc    eax
   1400389bd:	(bad)  
   1400389be:	(bad)  
   1400389bf:	inc    DWORD PTR [rax-0x7f00fcf0]
   1400389c5:	add    BYTE PTR [rax],al
   1400389c7:	jg     0x14003894c
   1400389c9:	add    BYTE PTR [rax],al
   1400389cb:	(bad)  
   1400389cc:	(bad)  
   1400389cd:	add    BYTE PTR [rax],al
   1400389cf:	(bad)  
   1400389d0:	add    BYTE PTR [rax],0x0
   1400389d3:	jo     0xc00a89d9
   1400389d9:	add    BYTE PTR [rax],al
   1400389db:	(bad)  
   1400389dc:	add    BYTE PTR [rax],0x0
   1400389df:	add    eax,DWORD PTR [rax-0x7ffc0fff]
   1400389e5:	add    edi,eax
   1400389e7:	add    DWORD PTR [rax-0x7f0000f9],eax
   1400389ed:	(bad)  
   1400389ee:	(bad)  
   1400389ef:	inc    eax
   1400389f1:	add    BYTE PTR [rax],al
   1400389f3:	add    eax,esp
   1400389f5:	add    BYTE PTR [rax],al
   1400389f7:	add    eax,esp
   1400389f9:	add    BYTE PTR [rax],al
   1400389fb:	add    eax,esp
   1400389fd:	add    BYTE PTR [rax],al
   1400389ff:	add    eax,esp
   140038a01:	add    BYTE PTR [rax],al
   140038a03:	add    eax,esp
   140038a05:	(bad)  
   140038a06:	clc    
   140038a07:	add    eax,esp
   140038a09:	(bad)  
   140038a0a:	clc    
   140038a0b:	add    eax,esi
   140038a0d:	add    esi,eax
   140038a0f:	add    esi,eax
   140038a11:	add    al,al
   140038a13:	add    edi,eax
   140038a15:	add    BYTE PTR [rax],al
   140038a17:	add    edi,eax
   140038a19:	add    BYTE PTR [rax],al
   140038a1b:	add    esp,edi
   140038a1d:	add    BYTE PTR [rax],al
   140038a1f:	add    dh,bh
   140038a21:	add    BYTE PTR [rax],al
   140038a23:	adc    bh,bh
   140038a25:	add    BYTE PTR [rax],al
   140038a27:	add    bh,bh
   140038a29:	rol    BYTE PTR [rax],0x0
   140038a2c:	push   rax
   140038a2e:	add    BYTE PTR [rcx],al
   140038a30:	(bad)  
   140038a31:	inc    DWORD PTR [rax-0x1f0000ff]
   140038a37:	(bad)  
   140038a38:	sub    BYTE PTR [rax],al
   140038a3a:	add    BYTE PTR [rax],al
   140038a3c:	sbb    BYTE PTR [rax],al
   140038a3e:	add    BYTE PTR [rax],al
   140038a40:	xor    BYTE PTR [rax],al
   140038a42:	add    BYTE PTR [rax],al
   140038a44:	add    DWORD PTR [rax],eax
   140038a46:	and    BYTE PTR [rax],al
   140038a48:	add    BYTE PTR [rax],al
   140038a4a:	add    BYTE PTR [rax],al
   140038a4c:	(bad)  
   140038a4d:	or     DWORD PTR [rax],eax
	...
   140038a63:	add    BYTE PTR [rax],al
   140038a65:	add    BYTE PTR [rbp+0x5],dl
   140038a68:	add    BYTE PTR [rax],al
   140038a6a:	push   rbp
   140038a6b:	adc    eax,0x24550000
   140038a70:	add    BYTE PTR [rax],al
   140038a72:	push   rbp
   140038a73:	and    al,BYTE PTR [rax]
   140038a75:	add    BYTE PTR [rbp+0x1a],dl
   140038a78:	add    BYTE PTR [rax],al
   140038a7a:	push   rbp
   140038a7b:	adc    al,BYTE PTR [rax]
   140038a7d:	add    BYTE PTR [rbp+0x3],dl
	...
   140038ac0:	add    BYTE PTR [rax],al
   140038ac2:	push   rbp
   140038ac3:	add    DWORD PTR [rax],eax
   140038ac5:	pop    rbp
   140038ac6:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140038ac7:	sbb    al,0x0
   140038ac9:	stos   BYTE PTR es:[rdi],al
   140038aca:	not    BYTE PTR [rdx-0x41035400]
   140038ad0:	add    BYTE PTR [rbx-0x41ff7805],dh
   140038ad6:	cld    
   140038ad7:	jp     0x140038ad9
   140038ad9:	mov    ebp,0xab0067fb
   140038ade:	lock sbb ebx,DWORD PTR [rdi-0x62e6e499]
   140038ae5:	data16 sbb ch,BYTE PTR [rcx-0x64]
   140038ae9:	sbb    bl,BYTE PTR gs:[rsi-0x4de69b66]
   140038af0:	xchg   edi,eax
   140038af1:	(bad)  
   140038af2:	sbb    esi,edx
   140038af4:	xchg   ebp,eax
   140038af5:	(bad)  
   140038af6:	sbb    cl,dl
   140038af8:	xchg   edx,eax
   140038af9:	pop    rsi
   140038afa:	(bad)  
   140038afb:	lods   al,BYTE PTR ds:[rsi]
   140038afc:	nop
   140038afd:	pop    rsp
   140038afe:	(bad)  
   140038aff:	xchg   BYTE PTR [rsi+0x3a165b],cl
	...
   140038b21:	add    BYTE PTR [rbp+0x5],dl
   140038b24:	add    eax,ecx
   140038b26:	std    
   140038b27:	stos   BYTE PTR es:[rdi],al
   140038b28:	add    BYTE PTR [rdi+0x1c00c7fd],ch
   140038b2e:	jno    0x140038b59
   140038b30:	add    BYTE PTR [rax],al
   140038b32:	push   rbp
   140038b33:	add    al,0x0
   140038b35:	add    BYTE PTR [rax],al
   140038b37:	add    BYTE PTR [rbx-0x5ee6cd8c],dl
   140038b3d:	imul   ebx,DWORD PTR [rbx],0x1b68a080
   140038b43:	rol    ebx,1
   140038b45:	xchg   ebp,eax
   140038b46:	rex.R (bad) 
   140038b48:	fsubr  DWORD PTR [rbx+rcx*2+0x43b6e3f6]
   140038b4f:	sti    
   140038b50:	in     al,dx
   140038b51:	mov    esi,0xb8e8ff40
   140038b56:	rex.XB (bad) 
   140038b58:	xlat   BYTE PTR ds:[rbx]
   140038b59:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140038b5a:	rex.B stc 
   140038b5c:	ror    DWORD PTR [rbp+0x6fa2f139],0x27
   140038b63:	loop   0x140038af3
   140038b65:	pop    rbx
   140038b66:	(bad)  
   140038b67:	test   al,0x8c
   140038b69:	pop    rcx
   140038b6a:	(bad)  
   140038b6b:	sub    DWORD PTR [rax],eax
	...
   140038b7d:	add    BYTE PTR [rax],al
   140038b7f:	add    BYTE PTR [rsi],bl
   140038b81:	mov    edi,0xd00139ef
   140038b86:	jmp    rbp
   140038b88:	add    BYTE PTR [rcx+0x86f3],dl
   140038b8e:	push   rbp
   140038b8f:	and    BYTE PTR [rax],al
   140038b91:	add    BYTE PTR [rbp+0x1],dl
   140038b94:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140038b95:	imul   ebx,DWORD PTR [rbx+rsi*1],0xffffffa3
   140038b99:	imul   ebx,DWORD PTR [rdi*4-0x12bc6134],0xffffffed
   140038ba1:	(bad)  
   140038ba2:	rex.WR (bad) 
   140038ba4:	cmc    
   140038ba5:	(bad)  
   140038ba6:	pop    rsp
   140038ba7:	(bad)  
   140038ba8:	clc    
   140038ba9:	fisubr WORD PTR [rcx-0x1]
   140038bac:	cli    
   140038bad:	loope  0x140038c1e
   140038baf:	(bad)  
   140038bb0:	sti    
   140038bb1:	loope  0x140038c21
   140038bb3:	(bad)  
   140038bb4:	sti    
   140038bb5:	loope  0x140038c22
   140038bb7:	(bad)  
   140038bb8:	sti    
   140038bb9:	(bad)  [rax-0x1]
   140038bbc:	not    ecx
   140038bbe:	push   rsp
   140038bbf:	(bad)  
   140038bc0:	out    dx,eax
   140038bc1:	mov    edi,0x8cc5ff40
   140038bc6:	sub    edx,esi
   140038bc8:	mov    ds,WORD PTR [rbx+0x16]
   140038bcb:	ror    DWORD PTR [rdx+rbx*2+0x4f16],cl
	...
   140038bde:	add    BYTE PTR [rax],al
   140038be0:	(bad)  
   140038be1:	sar    dl,cl
   140038be3:	push   0x1
   140038be5:	sar    bh,cl
   140038be7:	in     eax,0x0
   140038be9:	xchg   ebx,ebp
   140038beb:	jg     0x140038bed
   140038bed:	add    BYTE PTR [rbp+0x26],dl
   140038bf0:	popf   
   140038bf1:	addr32 (bad) 
   140038bf3:	cmp    DWORD PTR [rsi-0x2235e394],esp
   140038bf9:	lods   eax,DWORD PTR ds:[rsi]
   140038bfa:	cmp    bh,al
   140038bfc:	out    dx,eax
   140038bfd:	int    0x57
   140038bff:	push   rsi
   140038c01:	fbstp  TBYTE PTR [rax-0x1]
   140038c04:	sti    
   140038c05:	out    0x7f,eax
   140038c07:	(bad)  
   140038c08:	cld    
   140038c09:	call   0x126fd8b92
   140038c0e:	test   bh,bh
   140038c10:	mul    ecx
   140038c12:	(bad)  
   140038c13:	push   rsi
   140038c15:	fidivr WORD PTR [rbx-0x1]
   140038c18:	clc    
   140038c19:	fidiv  WORD PTR [rdi-0x1]
   140038c1c:	jmp    rdx
   140038c1e:	jno    0x140038c1f
   140038c20:	cld    
   140038c21:	fsub   QWORD PTR [rbp-0x1]
   140038c24:	cmc    
   140038c25:	leave  
   140038c26:	rex.WR (bad) 
   140038c28:	fistp  DWORD PTR [rdi+0x6da4f929]
   140038c2e:	and    al,0xe5
   140038c30:	lea    ebx,[rdx+0x16]
   140038c33:	add    BYTE PTR [r8],r8b
	...
   140038c3e:	add    BYTE PTR [rax],al
   140038c40:	xor    bl,bl
   140038c42:	cld    
   140038c43:	imul   eax,DWORD PTR [rcx],0xffffffd6
   140038c46:	jmp    rbp
   140038c48:	add    BYTE PTR [rax+0x273c9df8],bl
   140038c4e:	cmp    eax,DWORD PTR [rax-0x5e]
   140038c51:	push   0x1d
   140038c53:	(bad)  
   140038c54:	fisubr WORD PTR [rsi-0x311207c4]
   140038c5a:	pop    rdx
   140038c5b:	push   rbp
   140038c5d:	fbstp  TBYTE PTR [rdi+rdi*8-0x5]
   140038c61:	jmp    0x140038be9
   140038c63:	(bad)  
   140038c64:	sti    
   140038c65:	out    dx,al
   140038c66:	nop
   140038c67:	(bad)  
   140038c68:	fnstsw WORD PTR [rbp-0x76480f94]
   140038c6e:	cmp    bl,ch
   140038c70:	movabs al,ds:0xbdd82471a5d41d6a
   140038c79:	xchg   edx,eax
   140038c7a:	rex.R in al,0xe1
   140038c7d:	shr    DWORD PTR [rdx-0x9],0xfa
   140038c81:	fnsave [rdi+rdi*8-0x4]
   140038c85:	(bad)  [rcx-0x1]
   140038c88:	clc    
   140038c89:	rcl    BYTE PTR [rdi-0x1],cl
   140038c8c:	loopne 0x140038c3a
   140038c8e:	ss clc 
   140038c90:	(bad)  
   140038c91:	pop    rsp
   140038c92:	(bad)  
   140038c93:	retf   0x5a8d
   140038c96:	(bad)  
   140038c97:	and    DWORD PTR [rax],eax
   140038c99:	add    BYTE PTR [rax],al
   140038c9b:	add    BYTE PTR [rax],al
   140038c9d:	add    BYTE PTR [rax],al
   140038c9f:	add    BYTE PTR [rdx-0x23],al
   140038ca2:	std    
   140038ca3:	push   rsp
   140038ca4:	add    eax,0xe5ffde
   140038ca9:	stos   BYTE PTR es:[rdi],al
   140038caa:	(bad)  
   140038cab:	(bad)  
   140038cac:	sbb    BYTE PTR [rdx+0x27],0xa2
   140038cb0:	(bad)  
   140038cb1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140038cb2:	rex.WX out dx,al
   140038cb4:	jmp    0x140038c7f
   140038cb6:	push   rdi
   140038cb7:	push   rsp
   140038cb9:	fbstp  TBYTE PTR [rbx-0x1]
   140038cbc:	cli    
   140038cbd:	in     al,dx
   140038cbe:	xchg   edi,edi
   140038cc0:	cld    
   140038cc1:	out    dx,al
   140038cc2:	nop
   140038cc3:	dec    ebx
   140038cc5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140038cc6:	push   rdx
   140038cc7:	in     eax,0xa3
   140038cc9:	push   0x1c
   140038ccb:	movabs ds:0x21b69a1341b6aa2,al
   140038cd4:	movabs al,ds:0x9d501b679f111b68
   140038cdd:	data16 sbb al,al
   140038ce0:	shl    BYTE PTR [rsi-0x290911ae],1
   140038ce6:	outs   dx,DWORD PTR ds:[rsi]
   140038ce7:	(bad)  
   140038ce8:	std    
   140038ce9:	fbstp  TBYTE PTR [rax-0x1]
   140038cec:	sti    
   140038ced:	(bad)  [rbx-0x1]
   140038cf0:	(bad)  
   140038cf1:	stos   DWORD PTR es:[rdi],eax
   140038cf2:	rex.WXB cmc 
   140038cf4:	nop
   140038cf5:	pop    rsp
   140038cf6:	(bad)  
   140038cf7:	scas   eax,DWORD PTR es:[rdi]
   140038cf8:	mov    ds,WORD PTR [rbx+0x16]
   140038cfb:	add    eax,DWORD PTR [rax]
   140038cfd:	add    BYTE PTR [rax],al
   140038cff:	add    BYTE PTR [rsi-0x20],dl
   140038d02:	cli    
   140038d03:	and    BYTE PTR [rax],dl
   140038d05:	out    0xff,eax
   140038d07:	in     eax,0x2
   140038d09:	mov    ecx,0x8156e8fc
   140038d0e:	jnp    0x140038cf7
   140038d10:	loop   0x140038cd0
   140038d12:	rex.WRXB push r8
   140038d15:	fldcw  WORD PTR [rdi+rdi*8-0x7]
   140038d19:	jmp    0x131008ca1
   140038d1e:	nop
   140038d1f:	jmp    rdx
   140038d21:	(bad)  
   140038d22:	jo     0x140038d15
   140038d24:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140038d25:	ins    BYTE PTR es:[rdi],dx
   140038d26:	sbb    al,0xa9
   140038d28:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140038d29:	imul   ebx,DWORD PTR [rax*1+0x0],0x0
	...
   140038d39:	add    BYTE PTR [rax],al
   140038d3b:	add    BYTE PTR [rdi-0x63e2e499],bl
   140038d41:	data16 sbb bh,BYTE PTR [rdi-0x2ce59a64]
   140038d48:	(bad)  
   140038d49:	fs sbb ebp,edx
   140038d4c:	cwde   
   140038d4d:	(bad)  
   140038d4e:	sbb    esi,edx
   140038d50:	xchg   ebp,eax
   140038d51:	(bad)  
   140038d52:	sbb    al,al
   140038d54:	xchg   ebx,eax
   140038d55:	pop    rsi
   140038d56:	sbb    BYTE PTR [rax+rdx*4+0x3d175d],bl
   140038d5d:	add    BYTE PTR [rax],al
   140038d5f:	add    bh,bh
   140038d61:	(bad)  
   140038d62:	inc    DWORD PTR [rax*2+0x8c0ffea]
   140038d69:	shl    ebp,cl
   140038d6b:	icebp  
   140038d6c:	adc    DWORD PTR [rdx-0x361e0415],esp
   140038d72:	movsxd edi,edi
   140038d74:	hlt    
   140038d75:	jrcxz  0x140038df1
   140038d77:	(bad)  
   140038d78:	sti    
   140038d79:	icebp  
   140038d7a:	(bad)  
   140038d7b:	(bad)  
   140038d7c:	sti    
   140038d7d:	icebp  
   140038d7e:	xchg   edi,eax
   140038d7f:	(bad)  
   140038d80:	mov    edi,0xa6dc4091
   140038d85:	ins    DWORD PTR es:[rdi],dx
   140038d86:	sbb    eax,0x38
	...
   140038dbf:	add    bh,bh
   140038dc1:	(bad)  
   140038dc2:	inc    DWORD PTR [rdx]
   140038dc4:	pop    rdx
   140038dc5:	out    0xfe,eax
   140038dc7:	imul   ebx,DWORD PTR [rcx],0x5f8f4e3
   140038dcd:	mov    al,0xf9
   140038dcf:	inc    DWORD PTR [rbp-0xb005241]
   140038dd5:	jmp    0x139028d69
   140038dda:	popf   
   140038ddb:	(bad)  
   140038ddc:	cld    
   140038ddd:	icebp  
   140038dde:	fwait
   140038ddf:	(bad)  
   140038de0:	test   eax,0xa8c91d6f
   140038de5:	outs   dx,BYTE PTR ds:[rsi]
   140038de6:	sbb    eax,0x2
	...
   140038e23:	add    BYTE PTR [rdx+0x5711ffef],dl
   140038e29:	fucomip st,st(5)
   140038e2b:	hlt    
   140038e2c:	add    ecx,edi
   140038e2e:	stc    
   140038e2f:	inc    DWORD PTR [rbx]
   140038e31:	test   al,0xfc
   140038e33:	dec    esi
   140038e35:	fcomp  QWORD PTR [rsi-0x60090301]
   140038e3b:	(bad)  
   140038e3c:	(bad)  
   140038e3d:	cli    
   140038e3e:	movabs eax,ds:0x1f71aacc1d70aaff
   140038e47:	iret   
   140038e48:	test   al,0x6e
   140038e4a:	sbb    eax,0x1d6da7cf
   140038e4f:	iret   
   140038e50:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140038e51:	ins    DWORD PTR es:[rdi],dx
   140038e52:	sbb    al,0xcf
   140038e54:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140038e55:	ins    BYTE PTR es:[rdi],dx
   140038e56:	sbb    al,0xd0
   140038e58:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140038e59:	imul   ebx,DWORD PTR [rcx+rdx*8],0xffffffa3
   140038e5d:	push   0x1c
   140038e5f:	shl    DWORD PTR [rdx-0x5f2de497],1
   140038e65:	imul   ebx,DWORD PTR [rbx],0x1b689fd2
   140038e6b:	rcr    DWORD PTR [rsi-0x622be599],cl
   140038e71:	data16 sbb dl,ah
   140038e74:	pushf  
   140038e75:	gs sbb dl,ch
   140038e78:	cdq    
   140038e79:	movsxd ebx,DWORD PTR [rcx]
   140038e7b:	xchg   esi,eax
	...
   140038e84:	(bad)  
   140038e85:	(bad)  
   140038e86:	inc    DWORD PTR [rdx]
   140038e88:	xchg   edx,eax
   140038e89:	mov    cl,0x93
   140038e8b:	loope  0x140038ebd
   140038e8d:	out    0xf9,al
   140038e8f:	inc    DWORD PTR [rax]
   140038e91:	ret    
   140038e92:	(bad)  
   140038e93:	jmp    QWORD PTR [rip+0xfffffffff1ffeab6]        # 0x13203794f
   140038e99:	out    dx,eax
   140038e9a:	fwait
   140038e9b:	(bad)  
   140038e9c:	(bad)  
   140038e9d:	cld    
   140038e9e:	movabs al,ds:0xa2feffffa2feffff
   140038ea7:	(bad)  
   140038ea8:	(bad)  
   140038ea9:	(bad)  
   140038eaa:	movabs ds:0xa2feffffa2feffff,al
   140038eb3:	(bad)  
   140038eb4:	(bad)  
   140038eb5:	(bad)  
   140038eb6:	movabs ds:0xa0fbffffa2fcffff,al
   140038ebf:	(bad)  
   140038ec0:	push   rdi
   140038ec2:	sahf   
   140038ec3:	(bad)  
   140038ec4:	push   rdx
   140038ec6:	xchg   ebp,eax
   140038ec7:	(bad)  
   140038ec8:	(bad)  
   140038ec9:	jmp    0x140038e4f
   140038ecb:	(bad)  
   140038ecc:	stc    
   140038ecd:	fnsave [rcx-0x1]
   140038ed0:	lock enter 0xff59,0xdc
   140038ed5:	movabs ds:0xc81a659cfd39,eax
	...
   140038ee6:	add    BYTE PTR [rax],al
   140038ee8:	mov    bh,0x86
   140038eea:	cmp    BYTE PTR [rsi-0x10e157b],bh
   140038ef0:	or     eax,0xfffee7
   140038ef5:	mov    ch,0xff
   140038ef7:	push   QWORD PTR [rcx+rcx*8-0x35]
   140038efb:	push   rbp
   140038efd:	repnz sahf 
   140038eff:	(bad)  
   140038f00:	(bad)  
   140038f01:	cli    
   140038f02:	movabs al,ds:0x9ff9ffffa0f9fffe
   140038f0b:	(bad)  
   140038f0c:	(bad)  
   140038f0d:	stc    
   140038f0e:	lahf   
   140038f0f:	(bad)  
   140038f10:	(bad)  
   140038f11:	stc    
   140038f12:	lahf   
   140038f13:	(bad)  
   140038f14:	(bad)  
   140038f15:	stc    
   140038f16:	sahf   
   140038f17:	(bad)  
   140038f18:	(bad)  
   140038f19:	stc    
   140038f1a:	popf   
   140038f1b:	(bad)  
   140038f1c:	push   rdi
   140038f1e:	popf   
   140038f1f:	(bad)  
   140038f20:	(bad)  
   140038f21:	repz cwde 
   140038f23:	(bad)  
   140038f24:	push   rax
   140038f26:	nop
   140038f27:	(bad)  
   140038f28:	(bad)  
   140038f29:	in     al,dx
   140038f2a:	mov    bh,bh
   140038f2c:	std    
   140038f2d:	loope  0x140038fa2
   140038f2f:	push   rsp
   140038f31:	retf   
   140038f32:	pop    rcx
   140038f33:	(bad)  
   140038f34:	(bad)  [rcx+0x679efc38]
   140038f3a:	sbb    al,bl
	...
   140038f48:	mov    bh,0x7d
   140038f4a:	(bad)  
   140038f4b:	movabs eax,ds:0xfffdf557fcb3e5de
   140038f54:	add    bh,bl
   140038f56:	(bad)  
   140038f57:	inc    DWORD PTR [rax]
   140038f59:	stos   BYTE PTR es:[rdi],al
   140038f5a:	(bad)  
   140038f5b:	call   QWORD PTR [rbp-0x5a014834]
   140038f61:	ins    DWORD PTR es:[rdi],dx
   140038f62:	(bad)  
   140038f63:	(bad)  
   140038f64:	lods   al,BYTE PTR ds:[rsi]
   140038f65:	jno    0x140038f85
   140038f67:	int3   
   140038f68:	stos   DWORD PTR es:[rdi],eax
   140038f69:	jno    0x140038f89
   140038f6b:	int    0xaa
   140038f6d:	jo     0x140038f8d
   140038f6f:	int    0xa9
   140038f71:	outs   dx,DWORD PTR ds:[rsi]
   140038f72:	sbb    eax,0x1d6ea9ce
   140038f77:	iret   
   140038f78:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140038f79:	outs   dx,BYTE PTR ds:[rsi]
   140038f7a:	sbb    eax,0x2272a9cf
   140038f7f:	shl    DWORD PTR [rbp-0x636e394],1
   140038f85:	loope  0x140038f0a
   140038f87:	(bad)  
   140038f88:	(bad)  
   140038f89:	in     eax,dx
   140038f8a:	test   edi,edi
   140038f8c:	cli    
   140038f8d:	fnsave [rax-0x1]
   140038f90:	icebp  
   140038f91:	(bad)
   140038f94:	int3   
   140038f95:	xchg   ecx,eax
   140038f96:	cmp    dh,dh
   140038f98:	lahf   
   140038f99:	sbb    esp,DWORD PTR [eax+eax*1+0x0]
   140038fa1:	add    BYTE PTR [rax],al
   140038fa3:	add    BYTE PTR [rax],al
   140038fa5:	add    BYTE PTR [rax],al
   140038fa7:	add    BYTE PTR [rax+rdi*2-0x401f96df],dh
   140038fae:	jae    0x140038f9a
   140038fb0:	(bad)  
   140038fb1:	hlt    
   140038fb2:	(bad)  
   140038fb3:	dec    DWORD PTR [rdx+rdi*8-0x1]
   140038fb7:	inc    DWORD PTR [rax]
   140038fb9:	fdivr  st,st(7)
   140038fbb:	inc    DWORD PTR [rcx]
   140038fbd:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140038fbe:	(bad)  
   140038fbf:	jmp    QWORD PTR [rsi+0x72]
   140038fc2:	pop    rdx
   140038fc3:	(bad)  
   140038fc4:	add    BYTE PTR [rax],al
   140038fc6:	push   rbp
   140038fc7:	add    al,0x0
	...
   140038fd9:	add    BYTE PTR [rax],al
   140038fdb:	add    BYTE PTR [rax-0x55f8e292],ch
   140038fe1:	jno    0x140039004
   140038fe3:	shl    edi,1
   140038fe5:	fld    QWORD PTR [rdx-0x7e140001]
   140038feb:	(bad)  
   140038fec:	stc    
   140038fed:	fisubr DWORD PTR [rcx-0x1]
   140038ff0:	in     eax,dx
   140038ff1:	mov    ebp,0x7fb8ff4c
   140038ff6:	xor    dl,ch
   140038ff8:	lahf   
   140038ff9:	sbb    esi,DWORD PTR [eax+0x0]
	...
   140039005:	add    BYTE PTR [rax],al
   140039007:	add    BYTE PTR [rdi+rsi*2-0x733edae0],dh
   14003900e:	(bad)  
   14003900f:	sar    dh,cl
   140039011:	repnz movabs ds:0xfff943ffe7f6bbff,al
   14003901b:	inc    DWORD PTR [rax]
   14003901d:	sar    edi,1
   14003901f:	inc    DWORD PTR [rbx]
   140039021:	movabs eax,ds:0x6a7f784cfcfc
   14003902a:	push   rbp
   14003902b:	add    DWORD PTR [rax],eax
	...
   140039039:	add    BYTE PTR [rax],al
   14003903b:	add    BYTE PTR [rcx-0x37a8e291],ch
   140039041:	pushf  
   140039042:	rex.WR jrcxz 0x140039040
   140039045:	jrcxz  0x140038fc7
   140039047:	(bad)  
   140039048:	jmp    rsi
   14003904a:	jns    0x14003904b
   14003904c:	hlt    
   14003904d:	iret   
   14003904e:	pop    rsi
   14003904f:	(bad)  
   140039050:	call   0xeb02d206
   140039055:	jo     0x140039079
   140039057:	fstp   DWORD PTR [rbp+riz*2+0x261d]
	...
   14003906a:	add    BYTE PTR [rax],al
   14003906c:	mov    ch,0x77
   14003906e:	and    BYTE PTR [rcx-0x1599411e],dl
   140039074:	(bad)  
   140039075:	imul   BYTE PTR [rsi-0xd095e01]
   14003907b:	(bad)  
   14003907c:	cmp    eax,0xfffff6
   140039081:	int    0xff
   140039083:	inc    DWORD PTR [rbx]
   140039085:	sahf   
   140039086:	sti    
   140039087:	sti    
   140039088:	(bad)  
   140039089:	js     0x1400390f7
   14003908b:	and    BYTE PTR [rsp+rbp*2+0x2620],0x55
   140039093:	add    DWORD PTR [rbx-0x54dce190],ebp
   140039099:	jo     0x1400390b9
   14003909b:	movsxd ebp,DWORD PTR [rdx-0x1136e290]
   1400390a1:	shl    BYTE PTR [rbp-0x8],1
   1400390a4:	(bad)  
   1400390a5:	call   0x11afe9027
   1400390aa:	ins    BYTE PTR es:[rdi],dx
   1400390ab:	(bad)  
   1400390ac:	out    dx,eax
   1400390ad:	mov    edi,0x88c1ff4f
   1400390b2:	xor    ebx,ebp
   1400390b4:	movabs ds:0x901d6b,eax
	...
   1400390c9:	add    BYTE PTR [rax],al
   1400390cb:	add    BYTE PTR [rsi-0x4ae3df88],dh
   1400390d1:	js     0x1400390f3
   1400390d3:	mov    ebx,0xf578d9f5
   1400390d8:	sti    
   1400390d9:	clc    
   1400390da:	mov    dl,0xff
   1400390dc:	xchg   edi,eax
   1400390dd:	cmc    
   1400390de:	cmc    
   1400390df:	(bad)  
   1400390e0:	cmp    al,0xf6
   1400390e2:	(bad)  
   1400390e3:	inc    DWORD PTR [rax]
   1400390e5:	iret   
   1400390e6:	(bad)  
   1400390e7:	inc    DWORD PTR [riz*4+0x7f83fdfc]
   1400390ee:	push   rdi
   1400390ef:	fisub  WORD PTR [rdx-0x4931e195]
   1400390f5:	xor    DWORD PTR [rdx],0xffffffd4
   1400390f8:	(bad)  
   1400390f9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400390fa:	push   rbx
   1400390fb:	in     eax,0xf3
   1400390fd:	fdivr  DWORD PTR [rbx-0x5]
   140039100:	jmp    rsi
   140039102:	jle    0x140039103
   140039104:	cld    
   140039105:	fnsave [rdx-0x1]
   140039108:	repnz enter 0xff5a,0xd9
   14003910d:	movabs eax,ds:0x8a56c31c6da6f438
   140039116:	xor    DWORD PTR [rdx],0x5550000
   14003911c:	add    BYTE PTR [rax],al
   14003911e:	push   rbp
   14003911f:	add    DWORD PTR [rax],eax
	...
   14003912d:	add    BYTE PTR [rax],al
   14003912f:	add    BYTE PTR [rsi-0x4ac2df88],dh
   140039135:	jns    0x140039158
   140039137:	(bad)
   14003913a:	ja     0x140039132
   14003913c:	sti    
   14003913d:	imul   BYTE PTR [rsi-0xe0a6001]
   140039143:	(bad)  
   140039144:	cmp    esi,esi
   140039146:	(bad)  
   140039147:	inc    DWORD PTR [rax]
   140039149:	(bad)  
   14003914a:	(bad)  
   14003914b:	inc    DWORD PTR [rax+rsi*4]
   14003914e:	std    
   14003914f:	jmp    FWORD PTR [rdx-0x1b005d39]
   140039155:	rol    DWORD PTR [rdi+rdi*8-0x7a1d09],cl
   14003915c:	(bad)  
   14003915d:	jmp    0x1260390e7
   140039162:	js     0x140039163
   140039164:	repnz retf 0xff5c
   140039168:	(bad)  [rbp+0x6ea9f43a]
   14003916e:	sbb    eax,0x377996cd
   140039173:	add    BYTE PTR [rax+0x61fa],dil
   14003917a:	push   rsp
   14003917b:	sldt   WORD PTR [rax]
   14003917e:	push   rbp
   14003917f:	add    al,BYTE PTR [rax]
	...
   140039191:	add    BYTE PTR [rax],al
   140039193:	add    BYTE PTR [rsi-0x4ac2df88],dh
   140039199:	jns    0x1400391bc
   14003919b:	mov    ebp,0xea5fb7de
   1400391a0:	(bad)  
   1400391a1:	out    dx,al
   1400391a2:	popf   
   1400391a3:	(bad)  
   1400391a4:	mov    ebx,0x38ffe1f5
   1400391a9:	hlt    
   1400391aa:	(bad)  
   1400391ab:	inc    DWORD PTR [rax]
   1400391ad:	(bad)  
   1400391af:	inc    DWORD PTR [rcx]
   1400391b1:	mov    bl,0xfe
   1400391b3:	jmp    QWORD PTR [rsi-0x1d004230]
   1400391b9:	(bad)  
   1400391ba:	(bad)  
   1400391bb:	push   rax
   1400391bd:	(bad)  
   1400391be:	jnp    0x1400391bf
   1400391c0:	out    dx,eax
   1400391c1:	(bad)  
   1400391c2:	pop    rcx
   1400391c3:	dec    ecx
   1400391c5:	xchg   ecx,eax
   1400391c6:	cmp    al,0xeb
   1400391c8:	stos   DWORD PTR es:[rdi],eax
   1400391c9:	jo     0x1400391e9
   1400391cb:	ret    
   1400391cc:	stos   BYTE PTR es:[rdi],al
   1400391cd:	outs   dx,DWORD PTR ds:[rsi]
   1400391ce:	sbb    eax,0x5500003a
   1400391d3:	add    DWORD PTR [rax],eax
   1400391d5:	mov    esp,0x88fc
   1400391da:	push   rax
   1400391db:	adc    eax,DWORD PTR [rax]
   1400391dd:	add    BYTE PTR [rbp+0x2],dl
	...
   1400391f8:	mov    dh,0x78
   1400391fa:	and    BYTE PTR [rsi],bl
   1400391fc:	mov    ch,0x78
   1400391fe:	and    BYTE PTR [rax+rax*8-0x232bc874],cl
   140039205:	mov    ecx,0xe6d6ed6f
   14003920a:	mov    bh,0xfc
   14003920c:	push   rax
   14003920d:	out    dx,al
   14003920e:	sti    
   14003920f:	dec    DWORD PTR [rcx]
   140039211:	in     al,0xfe
   140039213:	inc    DWORD PTR [rax]
   140039215:	mov    edx,0xac63fffe
   14003921a:	mov    ch,0xfc
   14003921c:	mov    ah,0x9d
   14003921e:	addr32 repnz test al,0x78
   140039222:	xor    bl,bl
   140039224:	movabs eax,ds:0x202073ad941f6a
   14003922d:	add    BYTE PTR [rax],al
   14003922f:	add    BYTE PTR [rax],al
   140039231:	add    BYTE PTR [rbp+0x12],dl
   140039234:	add    BYTE PTR [rdx+0x9ffa],dh
   14003923a:	rex.WRB sbb r8b,BYTE PTR [r8]
   14003923d:	add    BYTE PTR [rbp+0x2],dl
	...
   140039260:	mov    ch,0x78
   140039262:	and    BYTE PTR [rax],ch
   140039264:	mov    bh,0x7a
   140039266:	and    ebp,DWORD PTR [rdx-0x42]
   140039269:	xchg   DWORD PTR [rbx],esi
   14003926b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003926c:	ret    0x68aa
   14003926f:	(bad)  
   140039270:	jne    0x140039246
   140039272:	(bad)  
   140039274:	(bad)  
   140039275:	fdiv   st(0),st
   140039277:	inc    BYTE PTR [rbx]
   140039279:	(bad)
   14003927c:	(bad)  
   14003927d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003927e:	cmc    
   14003927f:	(bad)  
   140039280:	and    DWORD PTR [rsi-0x60],ebp
   140039283:	jns    0x140039289
   140039285:	add    al,0x58
   140039287:	xor    eax,DWORD PTR [rcx]
   140039289:	add    DWORD PTR [rsi+0x32],edx
   14003928c:	add    BYTE PTR [rax],al
   14003928e:	push   rbp
   14003928f:	(bad)  
   140039290:	add    BYTE PTR [rdx-0x4a],ch
   140039293:	rex.WRB add BYTE PTR [r13+0xd4fd],r13b
   14003929a:	rex.WRX (bad) 
   14003929c:	add    BYTE PTR [rax],al
   14003929e:	push   rbp
   14003929f:	add    DWORD PTR [rax],eax
	...
   1400392cd:	add    BYTE PTR [rax],al
   1400392cf:	add    bl,al
   1400392d1:	(bad)  
   1400392d3:	add    al,0x47
   1400392d5:	(bad)  
   1400392d7:	adc    r12b,r10b
   1400392da:	(bad)  
   1400392db:	mov    al,0x2
   1400392dd:	(bad)  
   1400392df:	out    0x0,eax
   1400392e1:	retf   0xe6ff
   1400392e4:	add    DWORD PTR [rsi-0x55fe3103],esi
   1400392ea:	neg    DWORD PTR [rax-0x61064d00]
   1400392f0:	add    al,al
   1400392f2:	(bad)  
   1400392f3:	fadd   QWORD PTR [rax]
   1400392f5:	test   eax,0x91fb
   1400392fa:	push   rsp
   1400392fb:	or     eax,DWORD PTR [rax]
	...
   140039335:	add    BYTE PTR [rax],al
   140039337:	add    bh,bh
   140039339:	(bad)  
   14003933a:	inc    DWORD PTR [rcx]
   14003933c:	sub    al,0xda
   14003933e:	std    
   14003933f:	sub    eax,0x76ffda13
   140039344:	or     edi,edx
   140039346:	call   FWORD PTR [rbp-0x47002afd]
   14003934c:	add    edx,esp
   14003934e:	jmp    FWORD PTR [rdx+0x66fbbe00]
   140039354:	add    BYTE PTR [rax],al
   140039356:	push   rax
   140039357:	or     BYTE PTR [rax],al
   140039359:	add    BYTE PTR [rbp+0x1],dl
   14003935c:	add    BYTE PTR [rax],al
   14003935e:	add    BYTE PTR [rax],al
   140039360:	cmp    bh,0xff
   140039363:	add    BYTE PTR [rax],al
   140039365:	add    BYTE PTR [rdi+0x0],bh
   140039368:	add    al,0x0
   14003936a:	(bad)  
   14003936b:	add    BYTE PTR [rax],al
   14003936d:	add    BYTE PTR [rdi],cl
   14003936f:	add    BYTE PTR [rax],al
   140039371:	add    BYTE PTR [rdi],al
   140039373:	add    BYTE PTR [rax],al
   140039375:	add    BYTE PTR [rbx],al
   140039377:	add    BYTE PTR [rax],al
   140039379:	add    BYTE PTR [rcx],al
   14003937b:	add    BYTE PTR [rax],al
   14003937d:	(bad)  
   14003937e:	add    DWORD PTR [rax],eax
   140039380:	add    BYTE PTR [rdi],bh
   140039382:	inc    DWORD PTR [rax]
   140039384:	add    BYTE PTR [rdi],bh
   140039386:	inc    DWORD PTR [rax]
   140039388:	add    BYTE PTR [rax],0x1
   14003938b:	add    BYTE PTR [rax-0x3fffff00],al
   140039391:	add    BYTE PTR [rcx],al
   140039393:	add    al,al
   140039395:	add    BYTE PTR [rcx],al
   140039397:	add    al,al
   140039399:	add    DWORD PTR ds:[rax],eax
   14003939c:	rcr    BYTE PTR [rsi],0x1
   14003939f:	add    al,ah
   1400393a1:	add    BYTE PTR [rbx],al
   1400393a3:	add    al,ah
   1400393a5:	add    BYTE PTR [rax],al
   1400393a7:	add    al,dh
   1400393a9:	add    BYTE PTR [rax],al
   1400393ab:	add    al,bh
   1400393ad:	add    BYTE PTR [rax],al
   1400393af:	add    ah,bh
   1400393b1:	add    BYTE PTR [rax],dl
   1400393b3:	add    bh,bh
   1400393b5:	add    BYTE PTR [rax],al
   1400393b7:	add    bh,bh
   1400393b9:	lock add DWORD PTR [rax],eax
   1400393bc:	(bad)  
   1400393bd:	cld    
   1400393be:	add    DWORD PTR [rax],eax
   1400393c0:	sub    BYTE PTR [rax],al
   1400393c2:	add    BYTE PTR [rax],al
   1400393c4:	adc    BYTE PTR [rax],al
   1400393c6:	add    BYTE PTR [rax],al
   1400393c8:	and    BYTE PTR [rax],al
   1400393ca:	add    BYTE PTR [rax],al
   1400393cc:	add    DWORD PTR [rax],eax
   1400393ce:	and    BYTE PTR [rax],al
   1400393d0:	add    BYTE PTR [rax],al
   1400393d2:	add    BYTE PTR [rax],al
   1400393d4:	add    al,0x0
	...
   1400393e7:	add    BYTE PTR [rax],al
   1400393e9:	mov    esi,0xa70019f3
   1400393ee:	jmp    0x1400393af
   1400393f0:	add    BYTE PTR [rax-0x75ff001c],dl
   1400393f6:	loop   0x1400393d4
   1400393f8:	add    DWORD PTR [rcx+0x759778dd],ecx
   1400393fe:	xor    BYTE PTR [rbx-0x51],dl
   140039401:	je     0x14003941d
   140039403:	cwde   
   140039404:	scas   eax,DWORD PTR es:[rdi]
   140039405:	jne    0x140039422
   140039407:	leave  
   140039408:	scas   al,BYTE PTR es:[rdi]
   140039409:	je     0x140039426
   14003940b:	(bad)  
   14003940c:	scas   eax,DWORD PTR es:[rdi]
   14003940d:	je     0x14003942a
   14003940f:	mov    bl,0xaf
   140039411:	je     0x14003942d
   140039413:	xchg   ecx,eax
   140039414:	lods   al,BYTE PTR ds:[rsi]
   140039415:	jo     0x14003942d
   140039417:	rex.RXB cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140039419:	addr32 (bad) 
   14003941b:	add    al,BYTE PTR [rax]
	...
   140039425:	add    BYTE PTR [rax],al
   140039427:	add    BYTE PTR [rcx],al
   140039429:	mov    edx,0xa200a3f2
   14003942e:	(bad)  
   14003942f:	ja     0x140039431
   140039431:	add    BYTE PTR [rax],al
   140039433:	add    BYTE PTR [rsi-0x65e4bf87],al
   140039439:	jge    0x140039473
   14003943b:	enter  0x7fb5,0x2d
   14003943f:	ffreep st(0)
   140039441:	mov    esi,DWORD PTR [rsi]
   140039443:	jmp    0x140039412
   140039445:	(bad)  
   140039446:	cmp    al,0xf9
   140039448:	(bad)  
   140039449:	movabs ds:0x97c9f4429dcffe40,eax
   140039452:	in     al,dx
   140039454:	mov    esp,0xb1e03488
   140039459:	ja     0x140039478
   14003945b:	mov    edi,0x24136daa
	...
   140039468:	add    DWORD PTR [rax+0xeef1],edi
   14003946e:	add    BYTE PTR [rax],al
   140039470:	stos   BYTE PTR es:[rdi],al
   140039471:	jb     0x14003948f
   140039473:	sbb    BYTE PTR [rcx-0x3c27dc89],dh
   140039479:	mov    ?,WORD PTR [rax]
   14003947b:	hlt    
   14003947c:	loop   0x140039430
   14003947e:	push   rbx
   14003947f:	(bad)  
   140039480:	out    dx,eax
   140039481:	(bad)  
   140039482:	push   0xffffffffffffffff
   140039484:	cmc    
   140039485:	iret   
   140039486:	jae    0x140039487
   140039488:	cmc    
   140039489:	shl    BYTE PTR [rdi+rdi*8-0xb],1
   14003948d:	iret   
   14003948e:	jae    0x14003948f
   140039490:	repnz retf 
   140039492:	ins    DWORD PTR es:[rdi],dx
   140039493:	jmp    rbx
   140039495:	mov    bh,0x57
   140039497:	dec    dh
   140039499:	pushf  
   14003949a:	rex.RX div DWORD PTR [rbx-0x5522dc86]
   1400394a1:	outs   dx,BYTE PTR ds:[rsi]
   1400394a2:	adc    al,0x2b
   1400394a4:	add    BYTE PTR [rax],al
   1400394a6:	add    BYTE PTR [rax],al
   1400394a8:	add    eax,eax
   1400394aa:	repz icebp 
   1400394ac:	add    eax,0xb595eeb2
   1400394b1:	sub    BYTE PTR [rbx],0xc7
   1400394b4:	ret    
   1400394b5:	mov    dh,BYTE PTR [rbx]
   1400394b7:	cmc    
   1400394b8:	jmp    0x13502f97c
   1400394bd:	shl    BYTE PTR [rsi-0x4],1
   1400394c0:	out    0xbd,al
   1400394c2:	data16 icebp 
   1400394c4:	(bad)  
   1400394c5:	(bad)  
   1400394c6:	(bad)  
   1400394c7:	loope  0x14003947b
   1400394c9:	js     0x1400394e8
   1400394cb:	loope  0x140039484
   1400394cd:	jg     0x1400394f6
   1400394cf:	loopne 0x140039493
   1400394d1:	lea    edi,[rdx]
   1400394d3:	fucomip st,st(4)
   1400394d5:	mov    esi,0xcaf2ef6a
   1400394da:	jo     0x1400394da
   1400394dc:	loop   0x140039491
   1400394de:	push   rsi
   1400394df:	stc    
   1400394e0:	mov    al,0x76
   1400394e2:	(bad)  
   1400394e3:	(bad)  
   1400394e4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400394e5:	addr32 (bad) 
   1400394e7:	add    al,0x0
   1400394e9:	(bad)  
   1400394eb:	mov    DWORD PTR [rdi],0xc3f2e7a3
   1400394f1:	sahf   
   1400394f2:	pop    rsi
   1400394f3:	in     eax,0xe1
   1400394f5:	mov    ch,0x57
   1400394f7:	(bad)  
   1400394f8:	hlt    
   1400394f9:	int    0x75
   1400394fb:	cld    
   1400394fc:	fldcw  WORD PTR [rbx-0x7d4210ab]
   140039502:	sub    ch,BYTE PTR [rbx+0x361771ae]
   140039508:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140039509:	addr32 (bad) 
   14003950b:	add    al,0xa9
   14003950d:	ins    BYTE PTR es:[rdi],dx
   14003950e:	adc    ecx,DWORD PTR [rip+0x331570ac]        # 0x1731905c0
   140039514:	scas   eax,DWORD PTR es:[rdi]
   140039515:	je     0x140039531
   140039517:	lods   al,BYTE PTR ds:[rsi]
   140039518:	scas   eax,DWORD PTR es:[rdi]
   140039519:	je     0x140039535
   14003951b:	fild   QWORD PTR [rdi-0x501de58c]
   140039521:	je     0x14003953c
   140039523:	fild   QWORD PTR [rdi+0x13651a75]
   140039529:	jmp    0x140039529
   14003952b:	mov    eax,DWORD PTR [rax]
   14003952d:	retf   
   14003952e:	idiv   edi
   140039530:	jo     0x1400394d3
   140039532:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140039533:	stc    
   140039534:	hlt    
   140039535:	sar    DWORD PTR [rdi+rdi*8-0xb],cl
   140039539:	iret   
   14003953a:	jne    0x14003952e
   14003953c:	ret    0x3187
   14003953f:	rol    BYTE PTR [rax],cl
	...
   140039565:	add    BYTE PTR [rax],al
   140039567:	add    BYTE PTR [rdx],ch
   140039569:	cmc    
   14003956a:	(bad)  
   14003956b:	cmp    eax,0xfcf3e420
   140039570:	adc    BYTE PTR [rdi+rbp*8-0x6d291b02],ah
   140039577:	(bad)  
   140039578:	clc    
   140039579:	fld    DWORD PTR [rcx+0x368fc8fe]
   14003957f:	jmp    0x12224103a
   140039584:	mov    dh,0x7a
   140039586:	and    dl,ah
   140039588:	mov    ch,0x7a
   14003958a:	and    dl,ah
   14003958c:	mov    ch,0x79
   14003958e:	(bad)  
   14003958f:	loop   0x140039545
   140039591:	js     0x1400395b1
   140039593:	loop   0x140039548
   140039595:	ja     0x1400395b4
   140039597:	loop   0x14003954a
   140039599:	jbe    0x1400395b7
   14003959b:	loop   0x14003954d
   14003959d:	jne    0x1400395ba
   14003959f:	loop   0x140039550
   1400395a1:	je     0x1400395bd
   1400395a3:	loopne 0x140039553
   1400395a5:	jae    0x1400395c0
   1400395a7:	movabs al,ds:0xf4b1cb8b00000000
   1400395b0:	or     ebp,esp
   1400395b2:	(bad)  
   1400395b3:	push   QWORD PTR [rcx]
   1400395b5:	fwait
   1400395b6:	loope  0x1400395b7
   1400395b8:	in     al,0xd5
   1400395ba:	xchg   ebp,eax
   1400395bb:	(bad)  
   1400395bc:	cli    
   1400395bd:	fld    QWORD PTR [rdi-0x79220501]
   1400395c3:	(bad)  
   1400395c4:	cli    
   1400395c5:	fld    QWORD PTR [rbp-0x7a230501]
   1400395cb:	(bad)  
   1400395cc:	cli    
   1400395cd:	fadd   QWORD PTR [rdi+rdi*8-0x7c2407]
   1400395d4:	clc    
   1400395d5:	fiadd  DWORD PTR [rdx+0x7fd3f5ff]
   1400395db:	(bad)  
   1400395dc:	in     al,dx
   1400395dd:	ret    0xff69
   1400395e0:	(bad)  
   1400395e1:	movabs al,ds:0xd41d77b0f844
   1400395ea:	add    BYTE PTR [rax],al
   1400395ec:	mov    esi,0x66da4892
   1400395f1:	out    0xe2,al
   1400395f3:	inc    BYTE PTR [rax]
   1400395f5:	(bad)  
   1400395f7:	call   FWORD PTR [rbp-0x56]
   1400395fa:	(bad)  
   1400395fb:	dec    esi
   1400395fd:	movabs eax,ds:0x7db9e32a80bbfe59
   140039606:	and    al,0xe2
   140039608:	mov    ecx,0xb8e2237d
   14003960d:	jl     0x140039631
   14003960f:	loop   0x1400395c7
   140039611:	jp     0x140039633
   140039613:	loop   0x1400395d8
   140039615:	mov    BYTE PTR [rdi],ch
   140039617:	jrcxz  0x14003960e
   140039619:	retf   
   14003961a:	jl     0x14003961a
   14003961c:	in     al,dx
   14003961d:	ret    
   14003961e:	ins    BYTE PTR es:[rdi],dx
   14003961f:	call   rsp
   140039621:	movabs ds:0xcc1d76b1f549,eax
   14003962a:	add    BYTE PTR [rax],al
   14003962c:	mov    eax,0xd6a82d82
   140039631:	shl    DWORD PTR [rbp-0xb12c60b],cl
   140039637:	inc    DWORD PTR [rax]
   140039639:	leave  
   14003963a:	(bad)  
   14003963b:	jmp    FWORD PTR [rip+0xffffffffbde8da8e]        # 0xfdec70cf
   140039641:	(bad)  
   140039642:	jmp    QWORD PTR [rsi]
   140039644:	mov    ebp,0x5ffff
	...
   140039651:	add    BYTE PTR [rax],al
   140039653:	add    BYTE PTR [rsp+rax*4-0x461330d0],bh
   14003965a:	imul   ebx,esi,0xff63bee9
   140039660:	int3   
   140039661:	xchg   edi,eax
   140039662:	rex call 0xd922101a
   140039668:	add    BYTE PTR [rax],al
   14003966a:	add    BYTE PTR [rax],al
   14003966c:	mov    bl,0x78
   14003966e:	(bad)  
   14003966f:	push   rbp
   140039670:	rcr    BYTE PTR [rdi-0x1b2c1cae],1
   140039676:	mov    ebx,0xfaec29fe
   14003967b:	inc    DWORD PTR [rax]
   14003967d:	mov    edi,0x8f39fffe
   140039682:	retf   0xbcee
   140039685:	mov    ecx,0xffbd4f8c
   14003968a:	inc    DWORD PTR [rdi]
   14003968c:	scas   al,BYTE PTR es:[rdi]
   14003968d:	jo     0x1400396a5
   14003968f:	(bad)  
   140039690:	mov    bh,0x7a
   140039692:	and    DWORD PTR [rbp-0x37],esi
   140039695:	xchg   ebx,eax
   140039696:	cmp    eax,0x72c4efcd
   14003969b:	cli    
   14003969c:	out    0xba,al
   14003969e:	(bad)  
   14003969f:	(bad)  
   1400396a0:	mov    esp,0xafdd3086
   1400396a5:	jb     0x1400396c0
   1400396a7:	xor    eax,DWORD PTR [rax]
   1400396a9:	add    BYTE PTR [rax],al
   1400396ab:	add    BYTE PTR [rsi-0x44fbf199],ah
   1400396b1:	jg     0x1400396db
   1400396b3:	(bad)  
   1400396b4:	call   0x10dfe0878
   1400396b9:	(bad)  
   1400396ba:	retf   0x2dff
   1400396bd:	in     eax,dx
   1400396be:	stc    
   1400396bf:	inc    DWORD PTR [rax]
   1400396c1:	(bad)  
   1400396c2:	(bad)  
   1400396c3:	(bad)  
   1400396c4:	cmp    ecx,DWORD PTR [rsi-0x653b043c]
   1400396ca:	push   rbx
   1400396cb:	out    dx,al
   1400396cc:	(bad)  
   1400396cd:	mov    ?,WORD PTR [rip+0x58abdee5]        # 0x198af75b8
   1400396d3:	loope  0x1400396c9
   1400396d5:	sar    DWORD PTR [rbx-0x6],cl
   1400396d8:	jmp    0x14003969c
   1400396da:	push   0x3f96cdfe
   1400396df:	lock lods al,BYTE PTR ds:[rsi]
   1400396e1:	outs   dx,DWORD PTR ds:[rsi]
   1400396e2:	(bad)  
   1400396e3:	xchg   esi,eax
   1400396e4:	add    edx,DWORD PTR [rcx+0x43e0]
   1400396ea:	add    BYTE PTR [rax],al
   1400396ec:	add    BYTE PTR [rax],al
   1400396ee:	add    BYTE PTR [rax],al
   1400396f0:	scas   eax,DWORD PTR es:[rdi]
   1400396f1:	jno    0x14003970a
   1400396f3:	and    bh,BYTE PTR [rdx-0x1527d581]
   1400396f9:	shl    DWORD PTR [rdx-0x7],0xdb
   1400396fd:	out    0xbb,al
   1400396ff:	inc    BYTE PTR [rbp+rbp*8-0xe]
   140039703:	inc    DWORD PTR [rax]
   140039705:	(bad)  
   140039707:	inc    DWORD PTR [rax-0x5a]
   14003970a:	(bad)  
   14003970c:	mov    esi,0xf2ffb1d1
   140039711:	(bad)  
   140039712:	test   bh,bh
   140039714:	out    0xbe,al
   140039716:	pop    rdi
   140039717:	inc    bl
   140039719:	xchg   DWORD PTR [rdx],esi
   14003971b:	(bad)  
   14003971c:	stos   BYTE PTR es:[rdi],al
   14003971d:	ins    BYTE PTR es:[rdi],dx
   14003971e:	(bad)  
   14003971f:	xchg   esp,eax
   140039720:	(bad)  
   140039721:	jns    0x140039766
   140039723:	add    eax,DWORD PTR [rax]
   140039725:	xchg   ebp,eax
   140039726:	in     eax,0xa1
	...
   140039734:	scas   eax,DWORD PTR es:[rdi]
   140039735:	jno    0x14003974e
   140039737:	and    al,0xbc
   140039739:	sub    DWORD PTR [rcx],0x54a2d4c2
   14003973f:	jrcxz  0x140039729
   140039741:	(bad)  
   140039742:	movabs eax,ds:0xfae410fee0e873f5
   14003974b:	call   QWORD PTR [rdx]
   14003974d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003974e:	(bad)  
   14003974f:	(bad)  
   140039750:	(bad)  
   140039752:	mov    al,0xf9
   140039754:	pushf  
   140039755:	pushf  
   140039756:	jp     0x140039741
   140039758:	mov    ch,0x7f
   14003975a:	sub    al,BYTE PTR [rsi+0x4166ea9]
   140039760:	add    BYTE PTR [rax],al
   140039762:	add    BYTE PTR [rax],al
   140039764:	add    BYTE PTR [rbp+0xebe6],dl
	...
   140039776:	add    BYTE PTR [rax],al
   140039778:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140039779:	addr32 (bad) 
   14003977b:	add    al,0xb6
   14003977d:	jns    0x14003979f
   14003977f:	push   rbp
   140039780:	mov    ebx,0xaaa72e82
   140039785:	movabs eax,ds:0xd92ef8becc5ddd63
   14003978e:	(bad)  
   14003978f:	cli    
   140039790:	adc    dl,al
   140039792:	hlt    
   140039793:	inc    DWORD PTR [rip+0x4f8f2ba]        # 0x144fc8a53
   140039799:	mov    dl,0xef
   14003979b:	xchg   edx,eax
   14003979c:	add    BYTE PTR [rdx-0x5bff9d1b],dl
   1400397a2:	(bad)  
   1400397a3:	imul   eax,DWORD PTR [rax],0xffffffa3
   1400397a6:	jmp    0x140039780
	...
   1400397c8:	mov    ebp,0x150d3d8a
   1400397cd:	mov    ecx,0xc31136ed
   1400397d2:	icebp  
   1400397d3:	imul   ecx,DWORD PTR [rsi],0xffffffdd
   1400397d6:	cli    
   1400397d7:	fiadd  WORD PTR [rdi]
   1400397d9:	leave  
   1400397da:	cmc    
   1400397db:	hlt    
   1400397dc:	add    DWORD PTR [rdx-0x46fe050f],edi
   1400397e2:	repnz fadd DWORD PTR [rax]
   1400397e5:	mov    ecx,0x7001ff1
   1400397ea:	add    BYTE PTR [rax],al
   1400397ec:	and    BYTE PTR [rbx],al
   1400397ee:	add    BYTE PTR [rax],al
   1400397f0:	rex add DWORD PTR [rax],eax
	...
   1400397fb:	add    BYTE PTR [rbx],al
   1400397fd:	inc    DWORD PTR [rax]
   1400397ff:	add    BYTE PTR [rax],al
   140039801:	add    BYTE PTR [rax],al
   140039803:	add    BYTE PTR [rax-0x80000000],al
   140039809:	add    BYTE PTR [rax],al
   14003980b:	add    BYTE PTR [rax-0x7fffff20],al
   140039811:	add    BYTE PTR [rax],al
   140039813:	add    BYTE PTR [rax-0x40000000],al
   140039819:	add    BYTE PTR [rax],al
   14003981b:	add    al,ah
   14003981d:	add    al,BYTE PTR [rax]
   14003981f:	add    al,dh
   140039821:	add    BYTE PTR [rax],al
   140039823:	add    bh,bh
   140039825:	add    BYTE PTR [rax],al
   140039827:	add    BYTE PTR [rax],al
   140039829:	add    BYTE PTR [rcx],al
   14003982b:	add    BYTE PTR [rax],dl
   14003982d:	add    BYTE PTR [rax],dh
   14003982f:	xor    BYTE PTR [rax],dl
   140039831:	add    BYTE PTR [rcx],al
   140039833:	add    BYTE PTR [rax+rax*1],al
   140039836:	push   0x1000006
   14003983b:	add    BYTE PTR [rax],ah
   14003983d:	and    BYTE PTR [rax],dl
   14003983f:	add    BYTE PTR [rcx],al
   140039841:	add    BYTE PTR [rax+rax*1],al
   140039844:	call   0x14203984b
   140039849:	add    BYTE PTR [rax],bl
   14003984b:	sbb    BYTE PTR [rax],dl
   14003984d:	add    BYTE PTR [rcx],al
   14003984f:	add    BYTE PTR [rax+rax*1],al
   140039852:	call   0x143039858
   140039857:	add    BYTE PTR [rax],dl
   140039859:	adc    BYTE PTR [rax],dl
   14003985b:	add    BYTE PTR [rcx],al
   14003985d:	add    BYTE PTR [rax+rax*1],al
   140039860:	sub    BYTE PTR [rcx],al
   140039862:	add    BYTE PTR [rax],al
   140039864:	add    al,0x0
   140039866:	xor    BYTE PTR [rax],dh
   140039868:	add    BYTE PTR [rax],al
   14003986a:	add    DWORD PTR [rax],eax
   14003986c:	or     BYTE PTR [rax],al
   14003986e:	test   al,0xe
   140039870:	add    BYTE PTR [rax],al
   140039872:	add    eax,0x202000
   140039877:	add    BYTE PTR [rcx],al
   140039879:	add    BYTE PTR [rax],cl
   14003987b:	add    BYTE PTR [rax+0x6000008],ch
   140039881:	add    BYTE PTR [rax],bl
   140039883:	sbb    BYTE PTR [rax],al
   140039885:	add    BYTE PTR [rcx],al
   140039887:	add    BYTE PTR [rax],cl
   140039889:	add    al,cl
   14003988b:	(bad)  
   14003988c:	add    BYTE PTR [rax],al
   14003988e:	(bad)  
   14003988f:	add    BYTE PTR [rax],dl
   140039891:	adc    BYTE PTR [rax],al
   140039893:	add    BYTE PTR [rcx],al
   140039895:	add    BYTE PTR [rax],cl
   140039897:	add    BYTE PTR [rax+0x5],ch
   14003989a:	add    BYTE PTR [rax],al
   14003989c:	or     BYTE PTR [rax],al
   14003989e:	add    BYTE PTR [rax],al
   1400398a0:	add    BYTE PTR [rax],al
   1400398a2:	add    DWORD PTR [rax],eax
   1400398a4:	and    BYTE PTR [rax],al
   1400398a6:	int    0xcb
   1400398a8:	add    BYTE PTR [rax],al
   1400398aa:	or     DWORD PTR [rax],eax
   1400398ac:	add    BYTE PTR [rax+0x10000],0x20
   1400398b3:	add    BYTE PTR [rax],ch
   1400398b5:	or     BYTE PTR [rcx],al
   1400398b7:	add    BYTE PTR [rdx],cl
   1400398b9:	add    BYTE PTR [rax+0x60],ah
   1400398bc:	add    BYTE PTR [rax],al
   1400398be:	add    DWORD PTR [rax],eax
   1400398c0:	and    BYTE PTR [rax],al
   1400398c2:	test   al,0x94
   1400398c4:	add    BYTE PTR [rax],al
   1400398c6:	or     eax,DWORD PTR [rax]
   1400398c8:	rex
   1400398c9:	add    BYTE PTR [rax],al
   1400398cc:	add    DWORD PTR [rax],eax
   1400398ce:	and    BYTE PTR [rax],al
   1400398d0:	sub    BYTE PTR [rdx+0x0],al
   1400398d3:	add    BYTE PTR [rax+rax*1],cl
   1400398d6:	xor    BYTE PTR [rax],dh
   1400398d8:	add    BYTE PTR [rax],al
   1400398da:	add    DWORD PTR [rax],eax
   1400398dc:	and    BYTE PTR [rax],al
   1400398de:	test   al,0x25
   1400398e0:	add    BYTE PTR [rax],al
   1400398e2:	or     eax,0x202000
   1400398e7:	add    BYTE PTR [rcx],al
   1400398e9:	add    BYTE PTR [rax],ah
   1400398eb:	add    BYTE PTR [rax+0xe000010],ch
   1400398f1:	add    BYTE PTR [rax],bl
   1400398f3:	sbb    BYTE PTR [rax],al
   1400398f5:	add    BYTE PTR [rcx],al
   1400398f7:	add    BYTE PTR [rax],ah
   1400398f9:	add    BYTE PTR [rax+0xf000009],cl
   1400398ff:	add    BYTE PTR [rax],dl
   140039901:	adc    BYTE PTR [rax],al
   140039903:	add    BYTE PTR [rcx],al
   140039905:	add    BYTE PTR [rax],ah
   140039907:	add    BYTE PTR [rax+0x4],ch
   14003990a:	add    BYTE PTR [rax],al
   14003990c:	adc    BYTE PTR [rax],al
   14003990e:	add    BYTE PTR [rax],al
   140039910:	add    BYTE PTR [rbx],0x34
   140039913:	add    BYTE PTR [rax],al
   140039915:	add    BYTE PTR [rsi+0x0],dl
   140039918:	push   rbx
   140039919:	add    BYTE PTR [rdi+0x0],bl
   14003991c:	push   rsi
   14003991d:	add    BYTE PTR [rbp+0x0],al
   140039920:	push   rdx
   140039921:	add    BYTE PTR [rbx+0x0],dl
   140039924:	rex.WB add BYTE PTR [r15+0x0],cl
   140039928:	rex.WRX add BYTE PTR [rdi+0x0],r11b
   14003992c:	rex.WB add BYTE PTR [r14+0x0],cl
   140039930:	rex.RX add BYTE PTR [rdi+0x0],r9b
   140039934:	add    BYTE PTR [rax],al
   140039936:	add    BYTE PTR [rax],al
   140039938:	mov    ebp,0xfeef04
   14003993d:	add    BYTE PTR [rcx],al
   14003993f:	add    BYTE PTR [rax],al
   140039941:	add    BYTE PTR [rbx],cl
   140039943:	add    BYTE PTR [rax],al
   140039945:	add    BYTE PTR [rax],bpl
   140039948:	add    BYTE PTR [rax],al
   14003994a:	or     eax,DWORD PTR [rax]
   14003994c:	add    BYTE PTR [rax+0x0],al
   14003994f:	sub    BYTE PTR [rdi],bh
   140039951:	add    BYTE PTR [rax],al
   140039953:	add    BYTE PTR [rax],al
   140039955:	add    BYTE PTR [rax],al
   140039957:	add    BYTE PTR [rax+rax*1],al
   14003995a:	add    al,0x0
   14003995c:	add    al,BYTE PTR [rax]
	...
   14003996a:	add    BYTE PTR [rax],al
   14003996c:	loopne 0x140039970
   14003996e:	add    BYTE PTR [rax],al
   140039970:	add    DWORD PTR [rax],eax
   140039972:	push   rbx
   140039973:	add    BYTE PTR [rax+rax*1+0x72],dh
   140039977:	add    BYTE PTR [rcx+0x0],ch
   14003997a:	outs   dx,BYTE PTR ds:[rsi]
   14003997b:	add    BYTE PTR [rdi+0x0],ah
   14003997e:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140039982:	ins    BYTE PTR es:[rdi],dx
   140039983:	add    BYTE PTR [rbp+0x0],ah
   140039986:	rex.WB add BYTE PTR [r14+0x0],bpl
   14003998a:	data16 add BYTE PTR [rdi+0x0],ch
   14003998e:	add    BYTE PTR [rax],al
   140039990:	mov    esp,0x1000002
   140039995:	add    BYTE PTR [rax],dh
   140039997:	add    BYTE PTR [rax+rax*1],dh
   14003999a:	xor    BYTE PTR [rax],al
   14003999c:	cmp    DWORD PTR [rax],eax
   14003999e:	xor    BYTE PTR [rax],al
   1400399a0:	xor    al,0x0
   1400399a2:	rex.X add BYTE PTR [rax],sil
   1400399a5:	add    BYTE PTR [rax],al
   1400399a7:	add    BYTE PTR [rax+rax*1+0x16],cl
   1400399ab:	add    BYTE PTR [rcx],al
   1400399ad:	add    BYTE PTR [rbx+0x0],al
   1400399b0:	outs   dx,DWORD PTR ds:[rsi]
   1400399b1:	add    BYTE PTR [rbp+0x0],ch
   1400399b4:	jo     0x1400399b6
   1400399b6:	(bad)  
   1400399b7:	add    BYTE PTR [rsi+0x0],ch
   1400399ba:	jns    0x1400399bc
   1400399bc:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   1400399c0:	ins    DWORD PTR es:[rdi],dx
   1400399c1:	add    BYTE PTR [rbp+0x0],ah
   1400399c4:	add    BYTE PTR [rax],al
   1400399c6:	add    BYTE PTR [rax],al
   1400399c8:	rex.WRB add BYTE PTR [r9+0x0],r13b
   1400399cc:	movsxd eax,DWORD PTR [rax]
   1400399ce:	jb     0x1400399d0
   1400399d0:	outs   dx,DWORD PTR ds:[rsi]
   1400399d1:	add    BYTE PTR [rbx+0x0],dh
   1400399d4:	outs   dx,DWORD PTR ds:[rsi]
   1400399d5:	add    BYTE PTR [rsi+0x0],ah
   1400399d8:	je     0x1400399da
   1400399da:	and    BYTE PTR [rax],al
   1400399dc:	rex.XB add BYTE PTR [r15+0x0],bpl
   1400399e0:	jb     0x1400399e2
   1400399e2:	jo     0x1400399e4
   1400399e4:	outs   dx,DWORD PTR ds:[rsi]
   1400399e5:	add    BYTE PTR [rdx+0x0],dh
   1400399e8:	(bad)  
   1400399e9:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400399ed:	add    BYTE PTR [rdi+0x0],ch
   1400399f0:	outs   dx,BYTE PTR ds:[rsi]
   1400399f1:	add    BYTE PTR [rax],al
   1400399f3:	add    BYTE PTR [rax+rax*1+0x1e],ah
   1400399f7:	add    BYTE PTR [rcx],al
   1400399f9:	add    BYTE PTR [rsi+0x0],al
   1400399fc:	imul   eax,DWORD PTR [rax],0x65006c
   140039a02:	add    BYTE PTR [rbp+0x0],r12b
   140039a06:	jae    0x140039a08
   140039a08:	movsxd eax,DWORD PTR [rax]
   140039a0a:	jb     0x140039a0c
   140039a0c:	imul   eax,DWORD PTR [rax],0x740070
   140039a12:	imul   eax,DWORD PTR [rax],0x6e006f
   140039a18:	add    BYTE PTR [rax],al
   140039a1a:	add    BYTE PTR [rax],al
   140039a1c:	rex.WB add BYTE PTR [r14+0x0],bpl
   140039a20:	je     0x140039a22
   140039a22:	add    BYTE PTR gs:[rdx+0x0],dh
   140039a26:	outs   dx,BYTE PTR ds:[rsi]
   140039a27:	add    BYTE PTR [rbp+0x0],ah
   140039a2a:	je     0x140039a2c
   140039a2c:	and    BYTE PTR [rax],al
   140039a2e:	rex.WR add BYTE PTR [rdi+0x0],r13b
   140039a32:	ja     0x140039a34
   140039a34:	sub    eax,0x69004d00
   140039a39:	add    BYTE PTR [rbx+0x0],ah
   140039a3c:	and    BYTE PTR [rax],al
   140039a3e:	push   rbp
   140039a3f:	add    BYTE PTR [rax+rax*1+0x69],dh
   140039a43:	add    BYTE PTR [rax+rax*1+0x69],ch
   140039a47:	add    BYTE PTR [rax+rax*1+0x79],dh
   140039a4b:	add    BYTE PTR [rax],ah
   140039a4d:	add    BYTE PTR [rax+rax*1+0x6f],dl
   140039a51:	add    BYTE PTR [rdi+0x0],ch
   140039a54:	ins    BYTE PTR es:[rdi],dx
   140039a55:	add    BYTE PTR [rax],al
   140039a57:	add    BYTE PTR [rax+0x0],ch
   140039a5a:	and    al,0x0
   140039a5c:	add    DWORD PTR [rax],eax
   140039a5e:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140039a62:	ins    BYTE PTR es:[rdi],dx
   140039a63:	add    BYTE PTR [rbp+0x0],ah
   140039a66:	push   rsi
   140039a67:	add    BYTE PTR [rbp+0x0],ah
   140039a6a:	jb     0x140039a6c
   140039a6c:	jae    0x140039a6e
   140039a6e:	imul   eax,DWORD PTR [rax],0x6e006f
   140039a74:	add    BYTE PTR [rax],al
   140039a76:	add    BYTE PTR [rax],al
   140039a78:	xor    DWORD PTR [rax],eax
   140039a7a:	xor    DWORD PTR [rax],eax
   140039a7c:	add    BYTE PTR cs:[rax],dh
   140039a7f:	add    BYTE PTR [rax],dh
   140039a81:	add    BYTE PTR [rsi],ch
   140039a83:	add    BYTE PTR [rcx],dh
   140039a85:	add    BYTE PTR [rax],dh
   140039a87:	add    BYTE PTR [rdx],dh
   140039a89:	add    BYTE PTR [rax+rax*1],dh
   140039a8c:	xor    BYTE PTR [rax],al
   140039a8e:	add    BYTE PTR cs:[rcx],dh
   140039a91:	add    BYTE PTR [rsi],dh
   140039a93:	add    BYTE PTR [rbx],dh
   140039a95:	add    BYTE PTR [rax],bh
   140039a97:	add    BYTE PTR [rax+rax*1],dh
   140039a9a:	and    BYTE PTR [rax],al
   140039a9c:	sub    BYTE PTR [rax],al
   140039a9e:	je     0x140039aa0
   140039aa0:	push   0x2e003100
   140039aa5:	add    BYTE PTR [rcx],dh
   140039aa7:	add    BYTE PTR [rip+0x37003000],dh        # 0x17703caad
   140039aad:	add    BYTE PTR [rax],dh
   140039aaf:	add    BYTE PTR [rcx],bh
   140039ab1:	add    BYTE PTR [rip+0x37003100],ch        # 0x17703cbb7
   140039ab7:	add    BYTE PTR [rax],dh
   140039ab9:	add    BYTE PTR [rax],dh
   140039abb:	add    BYTE PTR [rcx],ch
   140039abd:	add    BYTE PTR [rax],al
   140039abf:	add    BYTE PTR [rax+rax*1],bh
   140039ac2:	(bad)  
   140039ac3:	add    BYTE PTR [rcx],al
   140039ac5:	add    BYTE PTR [rcx+0x0],cl
   140039ac8:	outs   dx,BYTE PTR ds:[rsi]
   140039ac9:	add    BYTE PTR [rax+rax*1+0x65],dh
   140039acd:	add    BYTE PTR [rdx+0x0],dh
   140039ad0:	outs   dx,BYTE PTR ds:[rsi]
   140039ad1:	add    BYTE PTR [rcx+0x0],ah
   140039ad4:	ins    BYTE PTR es:[rdi],dx
   140039ad5:	add    BYTE PTR [rsi+0x0],cl
   140039ad8:	(bad)  
   140039ad9:	add    BYTE PTR [rbp+0x0],ch
   140039adc:	add    BYTE PTR gs:[rax],al
   140039adf:	add    BYTE PTR [rcx+0x0],ch
   140039ae2:	add    BYTE PTR gs:[rax+rax*1+0x6f],ch
   140039ae7:	add    BYTE PTR [rdi+0x0],dh
   140039aea:	jne    0x140039aec
   140039aec:	je     0x140039aee
   140039aee:	imul   eax,DWORD PTR [rax],0x2e006c
   140039af4:	add    BYTE PTR gs:[rax+0x0],bh
   140039af8:	add    BYTE PTR gs:[rax],al
   140039afb:	add    BYTE PTR [rax+0x1002e00],al
   140039b01:	add    BYTE PTR [rax+rax*1+0x65],cl
   140039b05:	add    BYTE PTR [rdi+0x0],ah
   140039b08:	(bad)  
   140039b09:	add    BYTE PTR [rax+rax*1+0x43],ch
   140039b0d:	add    BYTE PTR [rdi+0x0],ch
   140039b10:	jo     0x140039b12
   140039b12:	jns    0x140039b14
   140039b14:	jb     0x140039b16
   140039b16:	imul   eax,DWORD PTR [rax],0x680067
   140039b1c:	je     0x140039b1e
   140039b1e:	add    BYTE PTR [rax],al
   140039b20:	test   eax,0x4d002000
   140039b25:	add    BYTE PTR [rcx+0x0],ch
   140039b28:	movsxd eax,DWORD PTR [rax]
   140039b2a:	jb     0x140039b2c
   140039b2c:	outs   dx,DWORD PTR ds:[rsi]
   140039b2d:	add    BYTE PTR [rbx+0x0],dh
   140039b30:	outs   dx,DWORD PTR ds:[rsi]
   140039b31:	add    BYTE PTR [rsi+0x0],ah
   140039b34:	je     0x140039b36
   140039b36:	and    BYTE PTR [rax],al
   140039b38:	rex.XB add BYTE PTR [r15+0x0],bpl
   140039b3c:	jb     0x140039b3e
   140039b3e:	jo     0x140039b40
   140039b40:	outs   dx,DWORD PTR ds:[rsi]
   140039b41:	add    BYTE PTR [rdx+0x0],dh
   140039b44:	(bad)  
   140039b45:	add    BYTE PTR [rax+rax*1+0x69],dh
   140039b49:	add    BYTE PTR [rdi+0x0],ch
   140039b4c:	outs   dx,BYTE PTR ds:[rsi]
   140039b4d:	add    BYTE PTR [rsi],ch
   140039b4f:	add    BYTE PTR [rax],ah
   140039b51:	add    BYTE PTR [rcx+0x0],al
   140039b54:	ins    BYTE PTR es:[rdi],dx
   140039b55:	add    BYTE PTR [rax+rax*1+0x20],ch
   140039b59:	add    BYTE PTR [rdx+0x0],dh
   140039b5c:	imul   eax,DWORD PTR [rax],0x680067
   140039b62:	je     0x140039b64
   140039b64:	jae    0x140039b66
   140039b66:	and    BYTE PTR [rax],al
   140039b68:	jb     0x140039b6a
   140039b6a:	add    BYTE PTR gs:[rbx+0x0],dh
   140039b6e:	add    BYTE PTR gs:[rdx+0x0],dh
   140039b72:	jbe    0x140039b74
   140039b74:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   140039b79:	add    BYTE PTR [rax],al
   140039b7b:	add    BYTE PTR [rax+rax*1+0xe],al
   140039b7f:	add    BYTE PTR [rcx],al
   140039b81:	add    BYTE PTR [rdi+0x0],cl
   140039b84:	jb     0x140039b86
   140039b86:	imul   eax,DWORD PTR [rax],0x690067
   140039b8c:	outs   dx,BYTE PTR ds:[rsi]
   140039b8d:	add    BYTE PTR [rcx+0x0],ah
   140039b90:	ins    BYTE PTR es:[rdi],dx
   140039b91:	add    BYTE PTR [rsi+0x0],al
   140039b94:	imul   eax,DWORD PTR [rax],0x65006c
   140039b9a:	outs   dx,BYTE PTR ds:[rsi]
   140039b9b:	add    BYTE PTR [rcx+0x0],ah
   140039b9e:	ins    DWORD PTR es:[rdi],dx
   140039b9f:	add    BYTE PTR [rbp+0x0],ah
   140039ba2:	add    BYTE PTR [rax],al
   140039ba4:	imul   eax,DWORD PTR [rax],0x6c0065
   140039baa:	outs   dx,DWORD PTR ds:[rsi]
   140039bab:	add    BYTE PTR [rdi+0x0],dh
   140039bae:	jne    0x140039bb0
   140039bb0:	je     0x140039bb2
   140039bb2:	imul   eax,DWORD PTR [rax],0x2e006c
   140039bb8:	add    BYTE PTR gs:[rax+0x0],bh
   140039bbc:	add    BYTE PTR gs:[rax],al
   140039bbf:	add    BYTE PTR [rax+rax*1+0x12],al
   140039bc3:	add    BYTE PTR [rcx],al
   140039bc5:	add    BYTE PTR [rax+0x0],dl
   140039bc8:	jb     0x140039bca
   140039bca:	outs   dx,DWORD PTR ds:[rsi]
   140039bcb:	add    BYTE PTR [rax+rax*1+0x75],ah
   140039bcf:	add    BYTE PTR [rbx+0x0],ah
   140039bd2:	je     0x140039bd4
   140039bd4:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140039bd8:	ins    DWORD PTR es:[rdi],dx
   140039bd9:	add    BYTE PTR [rbp+0x0],ah
   140039bdc:	add    BYTE PTR [rax],al
   140039bde:	add    BYTE PTR [rax],al
   140039be0:	rex.WB add BYTE PTR [r14+0x0],bpl
   140039be4:	je     0x140039be6
   140039be6:	add    BYTE PTR gs:[rdx+0x0],dh
   140039bea:	outs   dx,BYTE PTR ds:[rsi]
   140039beb:	add    BYTE PTR [rbp+0x0],ah
   140039bee:	je     0x140039bf0
   140039bf0:	and    BYTE PTR [rax],al
   140039bf2:	add    BYTE PTR [r8+0x0],r15b
   140039bf6:	jo     0x140039bf8
   140039bf8:	ins    BYTE PTR es:[rdi],dx
   140039bf9:	add    BYTE PTR [rdi+0x0],ch
   140039bfc:	jb     0x140039bfe
   140039bfe:	add    BYTE PTR gs:[rdx+0x0],dh
   140039c02:	add    BYTE PTR [rax],al
   140039c04:	rex.W add BYTE PTR [rdx],dl
   140039c07:	add    BYTE PTR [rcx],al
   140039c09:	add    BYTE PTR [rax+0x0],dl
   140039c0c:	jb     0x140039c0e
   140039c0e:	outs   dx,DWORD PTR ds:[rsi]
   140039c0f:	add    BYTE PTR [rax+rax*1+0x75],ah
   140039c13:	add    BYTE PTR [rbx+0x0],ah
   140039c16:	je     0x140039c18
   140039c18:	push   rsi
   140039c19:	add    BYTE PTR [rbp+0x0],ah
   140039c1c:	jb     0x140039c1e
   140039c1e:	jae    0x140039c20
   140039c20:	imul   eax,DWORD PTR [rax],0x6e006f
   140039c26:	add    BYTE PTR [rax],al
   140039c28:	xor    DWORD PTR [rax],eax
   140039c2a:	xor    DWORD PTR [rax],eax
   140039c2c:	add    BYTE PTR cs:[rax],dh
   140039c2f:	add    BYTE PTR [rax],dh
   140039c31:	add    BYTE PTR [rsi],ch
   140039c33:	add    BYTE PTR [rcx],dh
   140039c35:	add    BYTE PTR [rax],dh
   140039c37:	add    BYTE PTR [rdx],dh
   140039c39:	add    BYTE PTR [rax+rax*1],dh
   140039c3c:	xor    BYTE PTR [rax],al
   140039c3e:	add    BYTE PTR cs:[rcx],dh
   140039c41:	add    BYTE PTR [rsi],dh
   140039c43:	add    BYTE PTR [rbx],dh
   140039c45:	add    BYTE PTR [rax],bh
   140039c47:	add    BYTE PTR [rax+rax*1],dh
   140039c4a:	add    BYTE PTR [rax],al
   140039c4c:	add    BYTE PTR [rax],r8b
   140039c4f:	add    BYTE PTR [rcx],al
   140039c51:	add    BYTE PTR [rsi+0x0],dl
   140039c54:	(bad)  
   140039c55:	add    BYTE PTR [rdx+0x0],dh
   140039c58:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140039c5c:	ins    BYTE PTR es:[rdi],dx
   140039c5d:	add    BYTE PTR [rbp+0x0],ah
   140039c60:	rex.WB add BYTE PTR [r14+0x0],bpl
   140039c64:	data16 add BYTE PTR [rdi+0x0],ch
   140039c68:	add    BYTE PTR [rax],al
   140039c6a:	add    BYTE PTR [rax],al
   140039c6c:	and    al,0x0
   140039c6e:	add    al,0x0
   140039c70:	add    BYTE PTR [rax],al
   140039c72:	push   rsp
   140039c73:	add    BYTE PTR [rdx+0x0],dh
   140039c76:	(bad)  
   140039c77:	add    BYTE PTR [rsi+0x0],ch
   140039c7a:	jae    0x140039c7c
   140039c7c:	ins    BYTE PTR es:[rdi],dx
   140039c7d:	add    BYTE PTR [rcx+0x0],ah
   140039c80:	je     0x140039c82
   140039c82:	imul   eax,DWORD PTR [rax],0x6e006f
   140039c88:	add    BYTE PTR [rax],al
   140039c8a:	add    BYTE PTR [rax],al
   140039c8c:	or     DWORD PTR [rax+rsi*4],eax
   140039c8f:	.byte 0x4

Disassembly of section .reloc:

000000014003a000 <.reloc>:
   14003a000:	add    BYTE PTR [rax],dh
   14003a002:	add    BYTE PTR [rax],al
   14003a004:	sub    BYTE PTR [rax],al
   14003a006:	add    BYTE PTR [rax],al
   14003a008:	movabs al,ds:0xd8a2d0a2b8a2a8a2
   14003a011:	movabs ds:0xa338a330a328a320,al
   14003a01a:	rex movabs ds:0xa6b0a698a350a348,eax
   14003a024:	.byte 0xb8
   14003a025:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003a026:	.byte 0xc0
   14003a027:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
