
1b67441f080adf23da22736c557813d3bb459c915a1b84d8253b8e9599df2708.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0xc345]        # 0x40d360
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0xc346]        # 0x40d370
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0xc349]        # 0x40d380
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0xc30c]        # 0x40d350
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0xc1af]        # 0x40d200
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0xc2e1]        # 0x40d340
  40105f:	mov    DWORD PTR [rip+0xefa3],edx        # 0x410008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x407638
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x406380
  401081:	mov    rdx,QWORD PTR [rip+0xc208]        # 0x40d290
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0xc1ee]        # 0x40d280
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0xc254]        # 0x40d2f0
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0xc18b]        # 0x40d230
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x405f60
  4010af:	mov    rax,QWORD PTR [rip+0xc0fa]        # 0x40d1b0
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x407638
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0x5139]        # 0x406260
  401127:	call   0x406250
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0xc1b5]        # 0x40d320
  40116b:	lea    r8,[rip+0xeea6]        # 0x410018
  401172:	lea    rdx,[rip+0xeea7]        # 0x410020
  401179:	lea    rcx,[rip+0xeea8]        # 0x410028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0xee78],eax        # 0x410000
  401188:	lea    rax,[rip+0xee71]        # 0x410000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0xc145]        # 0x40d2e0
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x407650
  4011a3:	mov    DWORD PTR [rip+0xee67],eax        # 0x410010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0xc17a]        # 0x40d340
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0xc06b]        # 0x40d260
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0x10232]        # 0x411434
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0xc047]        # 0x40d270
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0xedba],0x1        # 0x410004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0xbf8c]        # 0x40d1f0
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x406570
  40127d:	lea    rcx,[rip+0x588c]        # 0x406b10
  401284:	call   QWORD PTR [rip+0x101a2]        # 0x41142c
  40128a:	mov    rdx,QWORD PTR [rip+0xbfbf]        # 0x40d250
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x406a20
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x407680
  4012a5:	call   0x406360
  4012aa:	mov    rax,QWORD PTR [rip+0xbf4f]        # 0x40d200
  4012b1:	mov    QWORD PTR [rip+0xf810],rax        # 0x410ac8
  4012b8:	mov    rax,QWORD PTR [rip+0xbf61]        # 0x40d220
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0xf7a9],rax        # 0x410ac0
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x8cca],eax        # 0x40a000
  401336:	mov    r12d,DWORD PTR [rip+0xeceb]        # 0x410028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x407550
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0xecc2]        # 0x410020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x4074c8
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x407550
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x407548
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0xec6a],rbp        # 0x410020
  4013b6:	call   0x405f30
  4013bb:	mov    rax,QWORD PTR [rip+0xbe4e]        # 0x40d210
  4013c2:	mov    rdx,QWORD PTR [rip+0xec4f]        # 0x410018
  4013c9:	mov    ecx,DWORD PTR [rip+0xec59]        # 0x410028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0xec3c]        # 0x410018
  4013dc:	mov    rdx,QWORD PTR [rip+0xec3d]        # 0x410020
  4013e3:	call   0x407790
  4013e8:	mov    ecx,DWORD PTR [rip+0xec1a]        # 0x410008
  4013ee:	mov    DWORD PTR [rip+0xec18],eax        # 0x41000c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0xec02]        # 0x410004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x407620
  40140b:	mov    eax,DWORD PTR [rip+0xebfb]        # 0x41000c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0xbe39]        # 0x40d270
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x407628
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0xbe4d]        # 0x40d2b0
  401463:	mov    rcx,QWORD PTR [rip+0xbe36]        # 0x40d2a0
  40146a:	call   0x4075f8
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0xff23]        # 0x4113bc
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0xbe29]        # 0x40d2d0
  4014a7:	mov    rcx,QWORD PTR [rip+0xbe12]        # 0x40d2c0
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x4075f8
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x4075b0
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0xbe65]        # 0x40d340
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x405f70
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0xbe35]        # 0x40d340
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x405f70
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	push   rbp
  401531:	push   rdi
  401532:	push   rsi
  401533:	push   rbx
  401534:	sub    rsp,0x28
  401538:	mov    rsi,QWORD PTR [rip+0xeb21]        # 0x410060
  40153f:	mov    rbx,QWORD PTR [rip+0xff4e]        # 0x411494
  401546:	mov    rdi,rcx
  401549:	mov    rbp,rdx
  40154c:	test   rsi,rsi
  40154f:	je     0x401566
  401551:	call   rbx
  401553:	lea    rdx,[rip+0x9aa6]        # 0x40b000
  40155a:	lea    rcx,[rax+0x60]
  40155e:	mov    r8,rsi
  401561:	call   0x407590
  401566:	call   rbx
  401568:	lea    rcx,[rax+0x60]
  40156c:	mov    rdx,rdi
  40156f:	mov    r8,rbp
  401572:	call   0x407498
  401577:	call   rbx
  401579:	lea    rdx,[rax+0x60]
  40157d:	mov    ecx,0xa
  401582:	add    rsp,0x28
  401586:	pop    rbx
  401587:	pop    rsi
  401588:	pop    rdi
  401589:	pop    rbp
  40158a:	jmp    0x407588
  40158f:	nop
  401590:	sub    rsp,0x38
  401594:	mov    eax,DWORD PTR [rip+0xeabe]        # 0x410058
  40159a:	mov    QWORD PTR [rsp+0x48],rdx
  40159f:	lea    rdx,[rsp+0x48]
  4015a4:	mov    QWORD PTR [rsp+0x50],r8
  4015a9:	mov    QWORD PTR [rsp+0x58],r9
  4015ae:	test   eax,eax
  4015b0:	mov    QWORD PTR [rsp+0x28],rdx
  4015b5:	jne    0x4015bc
  4015b7:	add    rsp,0x38
  4015bb:	ret    
  4015bc:	call   0x401530
  4015c1:	jmp    0x4015b7
  4015c3:	nop    DWORD PTR [rax]
  4015c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4015d0:	push   rbp
  4015d1:	push   rdi
  4015d2:	push   rsi
  4015d3:	push   rbx
  4015d4:	sub    rsp,0x68
  4015d8:	mov    rdi,rcx
  4015db:	mov    rcx,rdx
  4015de:	movsxd rsi,r8d
  4015e1:	mov    rbp,rdx
  4015e4:	call   0x4074c8
  4015e9:	mov    rcx,rdi
  4015ec:	mov    rbx,rax
  4015ef:	call   0x4074c8
  4015f4:	lea    rcx,[rbx+rax*1+0xe]
  4015f9:	call   0x4057b0
  4015fe:	mov    rdx,rbp
  401601:	mov    rbx,rax
  401604:	mov    rcx,rax
  401607:	call   0x4074d8
  40160c:	lea    rcx,[rbx+rsi*1]
  401610:	mov    rdx,rdi
  401613:	call   0x4074d8
  401618:	mov    edx,0x2f
  40161d:	mov    rcx,rbx
  401620:	call   0x4074e8
  401625:	test   rax,rax
  401628:	je     0x401642
  40162a:	lea    rbp,[rsp+0x20]
  40162f:	mov    rcx,rbx
  401632:	mov    rsi,QWORD PTR [rip+0x10023]        # 0x41165c
  401639:	mov    rdx,rbp
  40163c:	call   rsi
  40163e:	test   eax,eax
  401640:	jne    0x40165d
  401642:	lea    rcx,[rip+0x99bc]        # 0x40b005
  401649:	mov    rdx,rbx
  40164c:	call   0x401590
  401651:	mov    rax,rbx
  401654:	add    rsp,0x68
  401658:	pop    rbx
  401659:	pop    rsi
  40165a:	pop    rdi
  40165b:	pop    rbp
  40165c:	ret    
  40165d:	xor    eax,eax
  40165f:	or     rcx,0xffffffffffffffff
  401663:	mov    rdi,rbx
  401666:	repnz scas al,BYTE PTR es:[rdi]
  401668:	mov    rdx,rbp
  40166b:	not    rcx
  40166e:	lea    rax,[rbx+rcx*1-0x1]
  401673:	mov    rcx,rbx
  401676:	mov    DWORD PTR [rax],0x6578652e
  40167c:	mov    BYTE PTR [rax+0x4],0x0
  401680:	call   rsi
  401682:	test   eax,eax
  401684:	je     0x401642
  401686:	lea    rcx,[rip+0x9987]        # 0x40b014
  40168d:	mov    rdx,rbx
  401690:	call   0x401590
  401695:	mov    rcx,rbx
  401698:	call   0x407578
  40169d:	xor    eax,eax
  40169f:	jmp    0x401654
  4016a1:	nop    DWORD PTR [rax+rax*1+0x0]
  4016a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4016b0:	push   rsi
  4016b1:	push   rbx
  4016b2:	sub    rsp,0x28
  4016b6:	mov    rdx,QWORD PTR [rip+0xe9a3]        # 0x410060
  4016bd:	mov    rsi,rcx
  4016c0:	movzx  eax,BYTE PTR [rdx]
  4016c3:	test   al,al
  4016c5:	je     0x40175d
  4016cb:	mov    r9,rdx
  4016ce:	xor    ebx,ebx
  4016d0:	xor    r8d,r8d
  4016d3:	jmp    0x4016f6
  4016d5:	cmp    al,0x5c
  4016d7:	sete   r11b
  4016db:	cmp    al,0x3a
  4016dd:	sete   r10b
  4016e1:	or     r11b,r10b
  4016e4:	jne    0x401750
  4016e6:	cmp    al,0x2f
  4016e8:	je     0x401750
  4016ea:	add    r9,0x1
  4016ee:	movzx  eax,BYTE PTR [r9]
  4016f2:	test   al,al
  4016f4:	je     0x401709
  4016f6:	cmp    al,0x2d
  4016f8:	jne    0x4016d5
  4016fa:	mov    r8,r9
  4016fd:	add    r9,0x1
  401701:	movzx  eax,BYTE PTR [r9]
  401705:	test   al,al
  401707:	jne    0x4016f6
  401709:	test   r8,r8
  40170c:	je     0x401758
  40170e:	sub    r8,rdx
  401711:	mov    rcx,rsi
  401714:	add    r8d,0x1
  401718:	call   0x4015d0
  40171d:	test   rax,rax
  401720:	jne    0x401740
  401722:	test   rbx,rbx
  401725:	je     0x401740
  401727:	mov    rdx,QWORD PTR [rip+0xe932]        # 0x410060
  40172e:	sub    rbx,rdx
  401731:	mov    rcx,rsi
  401734:	mov    r8,rbx
  401737:	add    r8d,0x1
  40173b:	call   0x4015d0
  401740:	test   rax,rax
  401743:	je     0x40175d
  401745:	add    rsp,0x28
  401749:	pop    rbx
  40174a:	pop    rsi
  40174b:	ret    
  40174c:	nop    DWORD PTR [rax+0x0]
  401750:	mov    rbx,r9
  401753:	xor    r8d,r8d
  401756:	jmp    0x4016ea
  401758:	test   rbx,rbx
  40175b:	jne    0x40172e
  40175d:	mov    rcx,rsi
  401760:	add    rsp,0x28
  401764:	pop    rbx
  401765:	pop    rsi
  401766:	jmp    0x405880
  40176b:	nop    DWORD PTR [rax+rax*1+0x0]
  401770:	sub    rsp,0x38
  401774:	mov    QWORD PTR [rsp+0x48],rdx
  401779:	lea    rdx,[rsp+0x48]
  40177e:	mov    QWORD PTR [rsp+0x50],r8
  401783:	mov    QWORD PTR [rsp+0x58],r9
  401788:	mov    QWORD PTR [rsp+0x28],rdx
  40178d:	call   0x401530
  401792:	nop
  401793:	add    rsp,0x38
  401797:	ret    
  401798:	nop    DWORD PTR [rax+rax*1+0x0]
  4017a0:	push   rbp
  4017a1:	push   r12
  4017a3:	push   rdi
  4017a4:	push   rsi
  4017a5:	push   rbx
  4017a6:	mov    rbp,rsp
  4017a9:	sub    rsp,0x70
  4017ad:	mov    rdi,rcx
  4017b0:	mov    rsi,rdx
  4017b3:	call   0x4022a0
  4017b8:	mov    r8d,DWORD PTR [rip+0xe899]        # 0x410058
  4017bf:	mov    r12,rax
  4017c2:	test   r8d,r8d
  4017c5:	jne    0x40189f
  4017cb:	mov    ecx,DWORD PTR [rip+0xe897]        # 0x410068
  4017d1:	test   ecx,ecx
  4017d3:	jne    0x40189f
  4017d9:	movzx  ebx,BYTE PTR [rsi]
  4017dc:	test   bl,bl
  4017de:	je     0x4019a6
  4017e4:	mov    edx,ebx
  4017e6:	mov    rax,rsi
  4017e9:	xor    ecx,ecx
  4017eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4017f0:	cmp    dl,0x20
  4017f3:	sete   dl
  4017f6:	add    rax,0x1
  4017fa:	movzx  edx,dl
  4017fd:	add    ecx,edx
  4017ff:	movzx  edx,BYTE PTR [rax]
  401802:	test   dl,dl
  401804:	jne    0x4017f0
  401806:	lea    eax,[rcx+0x4]
  401809:	cdqe   
  40180b:	lea    rax,[rax*8+0x1e]
  401813:	and    rax,0xfffffffffffffff0
  401817:	call   0x4072e0
  40181c:	mov    r11d,0x1
  401822:	sub    rsp,rax
  401825:	cmp    bl,0x20
  401828:	lea    rax,[rsp+0x40]
  40182d:	mov    QWORD PTR [rax],rdi
  401830:	je     0x401899
  401832:	test   bl,bl
  401834:	je     0x4018db
  40183a:	cmp    bl,0x22
  40183d:	sete   cl
  401840:	cmp    bl,0x27
  401843:	sete   dl
  401846:	or     dl,cl
  401848:	je     0x4018c0
  40184a:	movzx  r8d,BYTE PTR [rsi+0x1]
  40184f:	lea    r10,[rsi+0x1]
  401853:	lea    ecx,[r11+0x1]
  401857:	mov    QWORD PTR [rax+r11*8],r10
  40185b:	cmp    bl,r8b
  40185e:	je     0x401a40
  401864:	test   r8b,r8b
  401867:	jne    0x401875
  401869:	jmp    0x4018e0
  40186b:	nop    DWORD PTR [rax+rax*1+0x0]
  401870:	test   r11b,r11b
  401873:	je     0x4018e0
  401875:	add    r10,0x1
  401879:	movzx  r11d,BYTE PTR [r10]
  40187d:	cmp    bl,r11b
  401880:	jne    0x401870
  401882:	test   dl,dl
  401884:	mov    BYTE PTR [r10],0x0
  401888:	jne    0x4018d2
  40188a:	lea    rsi,[r10+0x1]
  40188e:	movsxd r11,ecx
  401891:	movzx  ebx,BYTE PTR [rsi]
  401894:	cmp    bl,0x20
  401897:	jne    0x401832
  401899:	add    rsi,0x1
  40189d:	jmp    0x401891
  40189f:	call   QWORD PTR [rip+0xfbef]        # 0x411494
  4018a5:	lea    rdx,[rip+0x9777]        # 0x40b023
  4018ac:	lea    rcx,[rax+0x60]
  4018b0:	mov    r9,rsi
  4018b3:	mov    r8,rdi
  4018b6:	call   0x407590
  4018bb:	jmp    0x4017d9
  4018c0:	lea    ecx,[r11+0x1]
  4018c4:	mov    QWORD PTR [rax+r11*8],rsi
  4018c8:	mov    r10,rsi
  4018cb:	mov    ebx,0x20
  4018d0:	jmp    0x401875
  4018d2:	movsxd r11,ecx
  4018d5:	lea    rsi,[r10+0x2]
  4018d9:	jmp    0x401891
  4018db:	mov    ecx,r11d
  4018de:	xchg   ax,ax
  4018e0:	mov    edx,DWORD PTR [rip+0xe782]        # 0x410068
  4018e6:	movsxd rcx,ecx
  4018e9:	mov    QWORD PTR [rax+rcx*8],0x0
  4018f1:	test   edx,edx
  4018f3:	je     0x401901
  4018f5:	xor    eax,eax
  4018f7:	mov    rsp,rbp
  4018fa:	pop    rbx
  4018fb:	pop    rsi
  4018fc:	pop    rdi
  4018fd:	pop    r12
  4018ff:	pop    rbp
  401900:	ret    
  401901:	lea    rdx,[rbp-0x8]
  401905:	mov    DWORD PTR [rsp+0x30],0x7
  40190d:	mov    r8,QWORD PTR [rip+0xe74c]        # 0x410060
  401914:	mov    r9,r12
  401917:	mov    QWORD PTR [rsp+0x28],rdx
  40191c:	lea    rdx,[rbp-0x10]
  401920:	mov    QWORD PTR [rsp+0x20],rdx
  401925:	mov    rcx,QWORD PTR [rax]
  401928:	mov    rdx,rax
  40192b:	call   0x4039c0
  401930:	cmp    eax,0xffffffff
  401933:	je     0x4019ad
  401935:	lea    rdx,[rbp-0x14]
  401939:	xor    r8d,r8d
  40193c:	mov    ecx,eax
  40193e:	call   0x403b00
  401943:	add    eax,0x1
  401946:	je     0x401a1a
  40194c:	mov    edx,DWORD PTR [rbp-0x14]
  40194f:	movzx  ecx,dl
  401952:	cmp    ecx,0x7f
  401955:	je     0x401971
  401957:	test   ecx,ecx
  401959:	je     0x401971
  40195b:	lea    rcx,[rip+0x96e6]        # 0x40b048
  401962:	and    edx,0x7f
  401965:	call   0x401770
  40196a:	mov    eax,0x1
  40196f:	jmp    0x4018f7
  401971:	test   ecx,ecx
  401973:	mov    eax,0x1
  401978:	jne    0x4018f7
  40197e:	movzx  esi,dh
  401981:	test   esi,esi
  401983:	mov    r8d,esi
  401986:	je     0x4018f5
  40198c:	lea    rcx,[rip+0x96d4]        # 0x40b067
  401993:	mov    rdx,rdi
  401996:	mov    DWORD PTR [rbp-0x24],eax
  401999:	call   0x401770
  40199e:	mov    eax,DWORD PTR [rbp-0x24]
  4019a1:	jmp    0x4018f7
  4019a6:	xor    ecx,ecx
  4019a8:	jmp    0x401806
  4019ad:	call   QWORD PTR [rip+0xfb29]        # 0x4114dc
  4019b3:	mov    rdi,QWORD PTR [rip+0xe6a6]        # 0x410060
  4019ba:	mov    esi,DWORD PTR [rax]
  4019bc:	mov    rbx,QWORD PTR [rip+0xfad1]        # 0x411494
  4019c3:	call   rbx
  4019c5:	lea    rdx,[rip+0x9634]        # 0x40b000
  4019cc:	lea    rcx,[rax+0x60]
  4019d0:	mov    r8,rdi
  4019d3:	call   0x407590
  4019d8:	mov    r12,QWORD PTR [rbp-0x8]
  4019dc:	mov    rdi,QWORD PTR [rbp-0x10]
  4019e0:	call   rbx
  4019e2:	lea    rcx,[rax+0x60]
  4019e6:	mov    r8,r12
  4019e9:	mov    rdx,rdi
  4019ec:	call   0x407590
  4019f1:	mov    ecx,esi
  4019f3:	call   0x4074d0
  4019f8:	mov    rsi,rax
  4019fb:	call   rbx
  4019fd:	lea    rdx,[rip+0x9626]        # 0x40b02a
  401a04:	lea    rcx,[rax+0x60]
  401a08:	mov    r8,rsi
  401a0b:	call   0x407590
  401a10:	mov    eax,0x1
  401a15:	jmp    0x4018f7
  401a1a:	call   QWORD PTR [rip+0xfabc]        # 0x4114dc
  401a20:	mov    ecx,DWORD PTR [rax]
  401a22:	call   0x4074d0
  401a27:	lea    rcx,[rip+0x9602]        # 0x40b030
  401a2e:	mov    rdx,rax
  401a31:	call   0x401770
  401a36:	mov    eax,0x1
  401a3b:	jmp    0x4018f7
  401a40:	mov    BYTE PTR [rsi+0x1],0x0
  401a44:	movsxd r11,ecx
  401a47:	jmp    0x4018d5
  401a4c:	nop    DWORD PTR [rax+0x0]
  401a50:	push   rbx
  401a51:	sub    rsp,0x20
  401a55:	mov    ebx,ecx
  401a57:	mov    ecx,DWORD PTR [rip+0x85bb]        # 0x40a018
  401a5d:	test   ecx,ecx
  401a5f:	je     0x401a9c
  401a61:	mov    rdx,QWORD PTR [rip+0xe5d8]        # 0x410040
  401a68:	test   rdx,rdx
  401a6b:	je     0x401a9c
  401a6d:	cmp    DWORD PTR [rip+0xe5e4],0x0        # 0x410058
  401a74:	je     0x401a8f
  401a76:	cmp    DWORD PTR [rip+0xe5ef],0x0        # 0x41006c
  401a7d:	je     0x401b87
  401a83:	lea    rcx,[rip+0x95f6]        # 0x40b080
  401a8a:	call   0x401770
  401a8f:	cmp    DWORD PTR [rip+0xe5d6],0x0        # 0x41006c
  401a96:	je     0x401b4d
  401a9c:	mov    edx,DWORD PTR [rip+0x8572]        # 0x40a014
  401aa2:	test   edx,edx
  401aa4:	je     0x401ae1
  401aa6:	mov    rdx,QWORD PTR [rip+0xe58b]        # 0x410038
  401aad:	test   rdx,rdx
  401ab0:	je     0x401ae1
  401ab2:	cmp    DWORD PTR [rip+0xe59f],0x0        # 0x410058
  401ab9:	je     0x401ad4
  401abb:	cmp    DWORD PTR [rip+0xe5aa],0x0        # 0x41006c
  401ac2:	je     0x401b98
  401ac8:	lea    rcx,[rip+0x95f1]        # 0x40b0c0
  401acf:	call   0x401770
  401ad4:	cmp    DWORD PTR [rip+0xe591],0x0        # 0x41006c
  401adb:	je     0x401b6a
  401ae1:	mov    eax,DWORD PTR [rip+0x8529]        # 0x40a010
  401ae7:	test   eax,eax
  401ae9:	je     0x401b1e
  401aeb:	mov    rdx,QWORD PTR [rip+0xe53e]        # 0x410030
  401af2:	test   rdx,rdx
  401af5:	je     0x401b1e
  401af7:	cmp    DWORD PTR [rip+0xe55a],0x0        # 0x410058
  401afe:	je     0x401b15
  401b00:	cmp    DWORD PTR [rip+0xe565],0x0        # 0x41006c
  401b07:	je     0x401b3f
  401b09:	lea    rcx,[rip+0x95ef]        # 0x40b0ff
  401b10:	call   0x401770
  401b15:	cmp    DWORD PTR [rip+0xe550],0x0        # 0x41006c
  401b1c:	je     0x401b25
  401b1e:	mov    ecx,ebx
  401b20:	call   0x4075b0
  401b25:	mov    rcx,QWORD PTR [rip+0xe504]        # 0x410030
  401b2c:	call   0x407488
  401b31:	mov    rcx,QWORD PTR [rip+0xe4f8]        # 0x410030
  401b38:	call   0x407578
  401b3d:	jmp    0x401b1e
  401b3f:	lea    rcx,[rip+0x95da]        # 0x40b120
  401b46:	call   0x401770
  401b4b:	jmp    0x401b15
  401b4d:	mov    rcx,QWORD PTR [rip+0xe4ec]        # 0x410040
  401b54:	call   0x407488
  401b59:	mov    rcx,QWORD PTR [rip+0xe4e0]        # 0x410040
  401b60:	call   0x407578
  401b65:	jmp    0x401a9c
  401b6a:	mov    rcx,QWORD PTR [rip+0xe4c7]        # 0x410038
  401b71:	call   0x407488
  401b76:	mov    rcx,QWORD PTR [rip+0xe4bb]        # 0x410038
  401b7d:	call   0x407578
  401b82:	jmp    0x401ae1
  401b87:	lea    rcx,[rip+0x9512]        # 0x40b0a0
  401b8e:	call   0x401770
  401b93:	jmp    0x401a8f
  401b98:	lea    rcx,[rip+0x9541]        # 0x40b0e0
  401b9f:	call   0x401770
  401ba4:	jmp    0x401ad4
  401ba9:	nop
  401baa:	nop
  401bab:	nop
  401bac:	nop
  401bad:	nop
  401bae:	nop
  401baf:	nop
  401bb0:	sub    rsp,0x28
  401bb4:	lea    r8,[rip+0xa8c5]        # 0x40c480
  401bbb:	mov    rdx,rcx
  401bbe:	lea    rcx,[rip+0xa8d1]        # 0x40c496
  401bc5:	call   0x407530
  401bca:	lea    rcx,[rip+0xa8d7]        # 0x40c4a8
  401bd1:	call   0x407528
  401bd6:	lea    rcx,[rip+0xa903]        # 0x40c4e0
  401bdd:	call   0x407528
  401be2:	xor    ecx,ecx
  401be4:	call   0x4075b0
  401be9:	nop
  401bea:	nop
  401beb:	nop
  401bec:	nop
  401bed:	nop
  401bee:	nop
  401bef:	nop
  401bf0:	push   rdi
  401bf1:	push   rsi
  401bf2:	push   rbx
  401bf3:	sub    rsp,0x20
  401bf7:	test   rcx,rcx
  401bfa:	je     0x401c87
  401c00:	cmp    QWORD PTR [rcx],0x0
  401c04:	je     0x401c80
  401c06:	lea    rax,[rcx+0x8]
  401c0a:	xor    edx,edx
  401c0c:	nop    DWORD PTR [rax+0x0]
  401c10:	add    rax,0x8
  401c14:	add    edx,0x1
  401c17:	cmp    QWORD PTR [rax-0x8],0x0
  401c1c:	jne    0x401c10
  401c1e:	add    edx,0x1
  401c21:	movsxd rdx,edx
  401c24:	shl    rdx,0x3
  401c28:	mov    rsi,rcx
  401c2b:	mov    rcx,rdx
  401c2e:	xor    ebx,ebx
  401c30:	call   0x4057b0
  401c35:	mov    rcx,QWORD PTR [rsi]
  401c38:	mov    rdi,rax
  401c3b:	test   rcx,rcx
  401c3e:	je     0x401c6d
  401c40:	call   0x4074c8
  401c45:	lea    ecx,[rax+0x1]
  401c48:	movsxd rcx,ecx
  401c4b:	call   0x4057b0
  401c50:	mov    rdx,QWORD PTR [rsi+rbx*1]
  401c54:	mov    rcx,rax
  401c57:	mov    QWORD PTR [rdi+rbx*1],rax
  401c5b:	add    rbx,0x8
  401c5f:	call   0x4074d8
  401c64:	mov    rcx,QWORD PTR [rsi+rbx*1]
  401c68:	test   rcx,rcx
  401c6b:	jne    0x401c40
  401c6d:	mov    QWORD PTR [rdi+rbx*1],0x0
  401c75:	mov    rax,rdi
  401c78:	add    rsp,0x20
  401c7c:	pop    rbx
  401c7d:	pop    rsi
  401c7e:	pop    rdi
  401c7f:	ret    
  401c80:	mov    edx,0x8
  401c85:	jmp    0x401c28
  401c87:	xor    eax,eax
  401c89:	jmp    0x401c78
  401c8b:	nop    DWORD PTR [rax+rax*1+0x0]
  401c90:	push   rsi
  401c91:	push   rbx
  401c92:	sub    rsp,0x28
  401c96:	test   rcx,rcx
  401c99:	je     0x401cd0
  401c9b:	mov    rsi,rcx
  401c9e:	mov    rcx,QWORD PTR [rcx]
  401ca1:	mov    rbx,rsi
  401ca4:	test   rcx,rcx
  401ca7:	je     0x401cc1
  401ca9:	nop    DWORD PTR [rax+0x0]
  401cb0:	add    rbx,0x8
  401cb4:	call   0x407578
  401cb9:	mov    rcx,QWORD PTR [rbx]
  401cbc:	test   rcx,rcx
  401cbf:	jne    0x401cb0
  401cc1:	mov    rcx,rsi
  401cc4:	add    rsp,0x28
  401cc8:	pop    rbx
  401cc9:	pop    rsi
  401cca:	jmp    0x407578
  401ccf:	nop
  401cd0:	add    rsp,0x28
  401cd4:	pop    rbx
  401cd5:	pop    rsi
  401cd6:	ret    
  401cd7:	nop    WORD PTR [rax+rax*1+0x0]
  401ce0:	push   r15
  401ce2:	push   r14
  401ce4:	push   r13
  401ce6:	push   r12
  401ce8:	push   rbp
  401ce9:	push   rdi
  401cea:	push   rsi
  401ceb:	push   rbx
  401cec:	sub    rsp,0x38
  401cf0:	test   rcx,rcx
  401cf3:	mov    rbx,rcx
  401cf6:	je     0x401ef1
  401cfc:	call   0x4074c8
  401d01:	lea    rcx,[rax+0x1]
  401d05:	xor    r15d,r15d
  401d08:	xor    r12d,r12d
  401d0b:	xor    ebp,ebp
  401d0d:	xor    edi,edi
  401d0f:	xor    r14d,r14d
  401d12:	call   0x4057b0
  401d17:	mov    rsi,QWORD PTR [rip+0xb612]        # 0x40d330
  401d1e:	mov    QWORD PTR [rsp+0x20],rax
  401d23:	xor    r13d,r13d
  401d26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401d30:	movzx  eax,BYTE PTR [rbx]
  401d33:	mov    edx,r15d
  401d36:	test   BYTE PTR [rsi+rax*2],0x40
  401d3a:	je     0x401d4d
  401d3c:	nop    DWORD PTR [rax+0x0]
  401d40:	add    rbx,0x1
  401d44:	movzx  eax,BYTE PTR [rbx]
  401d47:	test   BYTE PTR [rsi+rax*2],0x40
  401d4b:	jne    0x401d40
  401d4d:	test   ebp,ebp
  401d4f:	je     0x401d5c
  401d51:	lea    eax,[rbp-0x1]
  401d54:	lea    r11,[r12+r15*8]
  401d58:	cmp    edx,eax
  401d5a:	jl     0x401d84
  401d5c:	test   r12,r12
  401d5f:	je     0x401eda
  401d65:	add    ebp,ebp
  401d67:	mov    rcx,r12
  401d6a:	movsxd rdx,ebp
  401d6d:	shl    rdx,0x3
  401d71:	call   0x405830
  401d76:	mov    r12,rax
  401d79:	lea    r11,[r12+r15*8]
  401d7d:	mov    QWORD PTR [r11],0x0
  401d84:	movzx  edx,BYTE PTR [rbx]
  401d87:	mov    r8,QWORD PTR [rsp+0x20]
  401d8c:	test   dl,dl
  401d8e:	jne    0x401da6
  401d90:	jmp    0x401df0
  401d92:	mov    BYTE PTR [r8],dl
  401d95:	xor    edi,edi
  401d97:	add    r8,0x1
  401d9b:	add    rbx,0x1
  401d9f:	movzx  edx,BYTE PTR [rbx]
  401da2:	test   dl,dl
  401da4:	je     0x401df0
  401da6:	movzx  r9d,dl
  401daa:	test   BYTE PTR [rsi+r9*2],0x40
  401daf:	je     0x401dbf
  401db1:	mov    eax,edi
  401db3:	or     eax,r13d
  401db6:	or     eax,r14d
  401db9:	je     0x401ed0
  401dbf:	test   edi,edi
  401dc1:	jne    0x401d92
  401dc3:	cmp    dl,0x5c
  401dc6:	je     0x401e80
  401dcc:	test   r13d,r13d
  401dcf:	je     0x401e60
  401dd5:	cmp    dl,0x27
  401dd8:	je     0x401eb0
  401dde:	add    rbx,0x1
  401de2:	mov    BYTE PTR [r8],dl
  401de5:	add    r8,0x1
  401de9:	movzx  edx,BYTE PTR [rbx]
  401dec:	test   dl,dl
  401dee:	jne    0x401da6
  401df0:	mov    rcx,QWORD PTR [rsp+0x20]
  401df5:	mov    BYTE PTR [r8],0x0
  401df9:	add    r15,0x1
  401dfd:	mov    QWORD PTR [rsp+0x28],r11
  401e02:	call   0x405880
  401e07:	mov    r11,QWORD PTR [rsp+0x28]
  401e0c:	mov    QWORD PTR [r11],rax
  401e0f:	mov    QWORD PTR [r12+r15*8],0x0
  401e17:	movzx  edx,BYTE PTR [rbx]
  401e1a:	test   BYTE PTR [rsi+rdx*2],0x40
  401e1e:	mov    rax,rdx
  401e21:	je     0x401e33
  401e23:	add    rbx,0x1
  401e27:	movzx  edx,BYTE PTR [rbx]
  401e2a:	test   BYTE PTR [rsi+rdx*2],0x40
  401e2e:	mov    rax,rdx
  401e31:	jne    0x401e23
  401e33:	test   al,al
  401e35:	jne    0x401d30
  401e3b:	mov    rcx,QWORD PTR [rsp+0x20]
  401e40:	call   0x407578
  401e45:	mov    rax,r12
  401e48:	add    rsp,0x38
  401e4c:	pop    rbx
  401e4d:	pop    rsi
  401e4e:	pop    rdi
  401e4f:	pop    rbp
  401e50:	pop    r12
  401e52:	pop    r13
  401e54:	pop    r14
  401e56:	pop    r15
  401e58:	ret    
  401e59:	nop    DWORD PTR [rax+0x0]
  401e60:	test   r14d,r14d
  401e63:	je     0x401e90
  401e65:	cmp    dl,0x22
  401e68:	jne    0x401dde
  401e6e:	xor    r14d,r14d
  401e71:	jmp    0x401d9b
  401e76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401e80:	mov    edi,0x1
  401e85:	jmp    0x401d9b
  401e8a:	nop    WORD PTR [rax+rax*1+0x0]
  401e90:	cmp    dl,0x27
  401e93:	je     0x401ec0
  401e95:	cmp    dl,0x22
  401e98:	jne    0x401dde
  401e9e:	mov    r14d,0x1
  401ea4:	jmp    0x401d9b
  401ea9:	nop    DWORD PTR [rax+0x0]
  401eb0:	xor    r13d,r13d
  401eb3:	jmp    0x401d9b
  401eb8:	nop    DWORD PTR [rax+rax*1+0x0]
  401ec0:	mov    r13d,0x1
  401ec6:	jmp    0x401d9b
  401ecb:	nop    DWORD PTR [rax+rax*1+0x0]
  401ed0:	xor    edi,edi
  401ed2:	xor    r14d,r14d
  401ed5:	jmp    0x401df0
  401eda:	mov    ecx,0x40
  401edf:	mov    ebp,0x8
  401ee4:	call   0x4057b0
  401ee9:	mov    r12,rax
  401eec:	jmp    0x401d79
  401ef1:	xor    r12d,r12d
  401ef4:	jmp    0x401e45
  401ef9:	nop    DWORD PTR [rax+0x0]
  401f00:	push   r12
  401f02:	push   rbp
  401f03:	push   rdi
  401f04:	push   rsi
  401f05:	push   rbx
  401f06:	sub    rsp,0x20
  401f0a:	test   rdx,rdx
  401f0d:	mov    r12,rcx
  401f10:	mov    rdi,rdx
  401f13:	je     0x401f7d
  401f15:	mov    rbx,QWORD PTR [rcx]
  401f18:	mov    rbp,QWORD PTR [rip+0xb411]        # 0x40d330
  401f1f:	test   rbx,rbx
  401f22:	jne    0x401f55
  401f24:	jmp    0x401faf
  401f29:	nop    DWORD PTR [rax+0x0]
  401f30:	cmp    al,0x22
  401f32:	je     0x401f6b
  401f34:	cmp    al,0x5c
  401f36:	sete   dl
  401f39:	cmp    al,0x27
  401f3b:	sete   al
  401f3e:	or     dl,al
  401f40:	jne    0x401f6b
  401f42:	mov    rdx,rdi
  401f45:	mov    ecx,esi
  401f47:	call   0x407588
  401f4c:	cmp    eax,0xffffffff
  401f4f:	je     0x401f7d
  401f51:	add    rbx,0x1
  401f55:	movzx  eax,BYTE PTR [rbx]
  401f58:	test   al,al
  401f5a:	je     0x401f90
  401f5c:	movzx  r8d,al
  401f60:	movsx  esi,al
  401f63:	test   BYTE PTR [rbp+r8*2+0x0],0x40
  401f69:	je     0x401f30
  401f6b:	mov    rdx,rdi
  401f6e:	mov    ecx,0x5c
  401f73:	call   0x407588
  401f78:	cmp    eax,0xffffffff
  401f7b:	jne    0x401f42
  401f7d:	mov    eax,0x1
  401f82:	add    rsp,0x20
  401f86:	pop    rbx
  401f87:	pop    rsi
  401f88:	pop    rdi
  401f89:	pop    rbp
  401f8a:	pop    r12
  401f8c:	ret    
  401f8d:	nop    DWORD PTR [rax]
  401f90:	mov    rdx,rdi
  401f93:	mov    ecx,0xa
  401f98:	call   0x407588
  401f9d:	cmp    eax,0xffffffff
  401fa0:	je     0x401f7d
  401fa2:	add    r12,0x8
  401fa6:	mov    rbx,QWORD PTR [r12]
  401faa:	test   rbx,rbx
  401fad:	jne    0x401f55
  401faf:	xor    eax,eax
  401fb1:	jmp    0x401f82
  401fb3:	nop    DWORD PTR [rax]
  401fb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401fc0:	push   r15
  401fc2:	push   r14
  401fc4:	push   r13
  401fc6:	push   r12
  401fc8:	push   rbp
  401fc9:	push   rdi
  401fca:	push   rsi
  401fcb:	push   rbx
  401fcc:	sub    rsp,0x48
  401fd0:	xor    edi,edi
  401fd2:	mov    rbp,rdx
  401fd5:	mov    edx,DWORD PTR [rcx]
  401fd7:	lea    ebx,[rdi+0x1]
  401fda:	mov    r13,rcx
  401fdd:	mov    DWORD PTR [rsp+0x38],0x7d0
  401fe5:	cmp    ebx,edx
  401fe7:	jge    0x402011
  401fe9:	nop    DWORD PTR [rax+0x0]
  401ff0:	mov    rax,QWORD PTR [rbp+0x0]
  401ff4:	movsxd rsi,ebx
  401ff7:	lea    r12,[rsi*8+0x0]
  401fff:	mov    rcx,QWORD PTR [rax+rsi*8]
  402003:	cmp    BYTE PTR [rcx],0x40
  402006:	je     0x402022
  402008:	mov    edi,ebx
  40200a:	lea    ebx,[rdi+0x1]
  40200d:	cmp    ebx,edx
  40200f:	jl     0x401ff0
  402011:	add    rsp,0x48
  402015:	pop    rbx
  402016:	pop    rsi
  402017:	pop    rdi
  402018:	pop    rbp
  402019:	pop    r12
  40201b:	pop    r13
  40201d:	pop    r14
  40201f:	pop    r15
  402021:	ret    
  402022:	sub    DWORD PTR [rsp+0x38],0x1
  402027:	je     0x40222f
  40202d:	lea    rdx,[rip+0xa5a5]        # 0x40c5d9
  402034:	add    rcx,0x1
  402038:	call   0x407598
  40203d:	test   rax,rax
  402040:	mov    r14,rax
  402043:	je     0x4021da
  402049:	xor    edx,edx
  40204b:	mov    r8d,0x2
  402051:	mov    rcx,rax
  402054:	call   0x407570
  402059:	cmp    eax,0xffffffff
  40205c:	je     0x4021d2
  402062:	mov    rcx,r14
  402065:	call   0x407568
  40206a:	movsxd r15,eax
  40206d:	cmp    r15d,0xffffffff
  402071:	je     0x4021d2
  402077:	xor    r8d,r8d
  40207a:	xor    edx,edx
  40207c:	mov    rcx,r14
  40207f:	call   0x407570
  402084:	cmp    eax,0xffffffff
  402087:	je     0x4021d2
  40208d:	lea    rcx,[r15+0x1]
  402091:	call   0x4057b0
  402096:	mov    edx,0x1
  40209b:	mov    r9,r14
  40209e:	mov    r8,r15
  4020a1:	mov    rcx,rax
  4020a4:	mov    QWORD PTR [rsp+0x20],rax
  4020a9:	call   0x407580
  4020ae:	cmp    r15,rax
  4020b1:	mov    rdx,rax
  4020b4:	je     0x4020d0
  4020b6:	mov    rcx,r14
  4020b9:	mov    QWORD PTR [rsp+0x28],rax
  4020be:	call   0x4075a0
  4020c3:	test   eax,eax
  4020c5:	mov    rdx,QWORD PTR [rsp+0x28]
  4020ca:	jne    0x4021d2
  4020d0:	mov    rax,QWORD PTR [rsp+0x20]
  4020d5:	mov    BYTE PTR [rax+rdx*1],0x0
  4020d9:	movzx  eax,BYTE PTR [rax]
  4020dc:	test   al,al
  4020de:	je     0x40211c
  4020e0:	mov    rdx,QWORD PTR [rip+0xb249]        # 0x40d330
  4020e7:	test   BYTE PTR [rdx+rax*2],0x40
  4020eb:	je     0x4021e5
  4020f1:	mov    rdx,QWORD PTR [rsp+0x20]
  4020f6:	jmp    0x402111
  4020f8:	nop    DWORD PTR [rax+rax*1+0x0]
  402100:	mov    rcx,QWORD PTR [rip+0xb229]        # 0x40d330
  402107:	test   BYTE PTR [rcx+rax*2],0x40
  40210b:	je     0x4021e5
  402111:	add    rdx,0x1
  402115:	movzx  eax,BYTE PTR [rdx]
  402118:	test   al,al
  40211a:	jne    0x402100
  40211c:	mov    ecx,0x8
  402121:	call   0x4057b0
  402126:	mov    rcx,QWORD PTR [rbp+0x0]
  40212a:	mov    QWORD PTR [rax],0x0
  402131:	mov    r15,rax
  402134:	call   0x401bf0
  402139:	xor    r10d,r10d
  40213c:	mov    QWORD PTR [rbp+0x0],rax
  402140:	xor    r9d,r9d
  402143:	xor    r8d,r8d
  402146:	movsxd rdx,DWORD PTR [r13+0x0]
  40214a:	mov    rcx,rax
  40214d:	mov    DWORD PTR [rsp+0x3c],r10d
  402152:	mov    QWORD PTR [rsp+0x30],r9
  402157:	mov    QWORD PTR [rsp+0x28],r8
  40215c:	lea    rdx,[r8+rdx*1+0x1]
  402161:	shl    rdx,0x3
  402165:	call   0x405830
  40216a:	mov    edx,DWORD PTR [r13+0x0]
  40216e:	mov    r8,QWORD PTR [rsp+0x28]
  402173:	mov    QWORD PTR [rbp+0x0],rax
  402177:	sub    edx,ebx
  402179:	add    rsi,r8
  40217c:	movsxd rbx,edx
  40217f:	lea    rcx,[rax+rsi*8]
  402183:	lea    rdx,[rax+r12*1+0x8]
  402188:	lea    r8,[rbx*8+0x0]
  402190:	mov    ebx,edi
  402192:	call   0x407540
  402197:	mov    r9,QWORD PTR [rsp+0x30]
  40219c:	mov    rcx,r12
  40219f:	add    rcx,QWORD PTR [rbp+0x0]
  4021a3:	mov    rdx,r15
  4021a6:	mov    r8,r9
  4021a9:	call   0x407548
  4021ae:	mov    eax,DWORD PTR [r13+0x0]
  4021b2:	mov    r10d,DWORD PTR [rsp+0x3c]
  4021b7:	mov    rcx,r15
  4021ba:	lea    eax,[r10+rax*1-0x1]
  4021bf:	mov    DWORD PTR [r13+0x0],eax
  4021c3:	call   0x407578
  4021c8:	mov    rcx,QWORD PTR [rsp+0x20]
  4021cd:	call   0x407578
  4021d2:	mov    rcx,r14
  4021d5:	call   0x4075a8
  4021da:	mov    edx,DWORD PTR [r13+0x0]
  4021de:	mov    edi,ebx
  4021e0:	jmp    0x40200a
  4021e5:	mov    rcx,QWORD PTR [rsp+0x20]
  4021ea:	call   0x401ce0
  4021ef:	mov    rcx,QWORD PTR [rbp+0x0]
  4021f3:	mov    rdx,QWORD PTR [rax]
  4021f6:	mov    r15,rax
  4021f9:	mov    QWORD PTR [rsp+0x28],rdx
  4021fe:	call   0x401bf0
  402203:	mov    rdx,QWORD PTR [rsp+0x28]
  402208:	mov    QWORD PTR [rbp+0x0],rax
  40220c:	test   rdx,rdx
  40220f:	je     0x402255
  402211:	xor    r8d,r8d
  402214:	add    r8,0x1
  402218:	cmp    QWORD PTR [r15+r8*8],0x0
  40221d:	lea    r9,[r8*8+0x0]
  402225:	jne    0x402214
  402227:	mov    r10d,r8d
  40222a:	jmp    0x402146
  40222f:	mov    rbx,QWORD PTR [rax]
  402232:	call   QWORD PTR [rip+0xf25c]        # 0x411494
  402238:	lea    rdx,[rip+0xa371]        # 0x40c5b0
  40223f:	lea    rcx,[rax+0x60]
  402243:	mov    r8,rbx
  402246:	call   0x407590
  40224b:	mov    ecx,0x1
  402250:	call   0x405720
  402255:	xor    r10d,r10d
  402258:	xor    r9d,r9d
  40225b:	xor    r8d,r8d
  40225e:	jmp    0x402146
  402263:	nop    DWORD PTR [rax]
  402266:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402270:	test   rcx,rcx
  402273:	je     0x402291
  402275:	cmp    QWORD PTR [rcx],0x0
  402279:	je     0x402291
  40227b:	add    rcx,0x8
  40227f:	xor    eax,eax
  402281:	add    rcx,0x8
  402285:	add    eax,0x1
  402288:	cmp    QWORD PTR [rcx-0x8],0x0
  40228d:	jne    0x402281
  40228f:	repz ret 
  402291:	xor    eax,eax
  402293:	ret    
  402294:	nop
  402295:	nop
  402296:	nop
  402297:	nop
  402298:	nop
  402299:	nop
  40229a:	nop
  40229b:	nop
  40229c:	nop
  40229d:	nop
  40229e:	nop
  40229f:	nop
  4022a0:	push   rdi
  4022a1:	push   rsi
  4022a2:	push   rbx
  4022a3:	sub    rsp,0x20
  4022a7:	call   0x403840
  4022ac:	mov    rcx,rax
  4022af:	mov    rdi,rax
  4022b2:	call   0x4074c8
  4022b7:	movsxd rbx,eax
  4022ba:	lea    rcx,[rbx+0x9]
  4022be:	call   0x4057b0
  4022c3:	mov    rdx,rdi
  4022c6:	mov    rsi,rax
  4022c9:	mov    rcx,rax
  4022cc:	call   0x4074d8
  4022d1:	add    rbx,rsi
  4022d4:	movabs rax,0x5858585858586363
  4022de:	mov    rcx,rsi
  4022e1:	mov    QWORD PTR [rbx],rax
  4022e4:	mov    BYTE PTR [rbx+0x8],0x0
  4022e8:	call   0x407478
  4022ed:	test   rax,rax
  4022f0:	je     0x4022fd
  4022f2:	mov    rax,rsi
  4022f5:	add    rsp,0x20
  4022f9:	pop    rbx
  4022fa:	pop    rsi
  4022fb:	pop    rdi
  4022fc:	ret    
  4022fd:	call   0x4075c0
  402302:	nop
  402303:	nop
  402304:	nop
  402305:	nop
  402306:	nop
  402307:	nop
  402308:	nop
  402309:	nop
  40230a:	nop
  40230b:	nop
  40230c:	nop
  40230d:	nop
  40230e:	nop
  40230f:	nop
  402310:	push   rsi
  402311:	push   rbx
  402312:	sub    rsp,0x28
  402316:	test   edx,edx
  402318:	mov    rbx,rcx
  40231b:	mov    esi,edx
  40231d:	movsxd rcx,edx
  402320:	jne    0x40232c
  402322:	mov    ecx,0x1
  402327:	mov    esi,0x1
  40232c:	call   0x4057b0
  402331:	mov    QWORD PTR [rbx+0x8],rax
  402335:	mov    BYTE PTR [rax],0x0
  402338:	mov    eax,0x1
  40233d:	mov    DWORD PTR [rbx],esi
  40233f:	mov    DWORD PTR [rbx+0x4],0x0
  402346:	add    rsp,0x28
  40234a:	pop    rbx
  40234b:	pop    rsi
  40234c:	ret    
  40234d:	nop    DWORD PTR [rax]
  402350:	push   rsi
  402351:	push   rbx
  402352:	sub    rsp,0x28
  402356:	mov    esi,ecx
  402358:	mov    ecx,0x10
  40235d:	call   0x4057b0
  402362:	test   esi,esi
  402364:	mov    rbx,rax
  402367:	movsxd rcx,esi
  40236a:	jne    0x402376
  40236c:	mov    ecx,0x1
  402371:	mov    esi,0x1
  402376:	call   0x4057b0
  40237b:	mov    QWORD PTR [rbx+0x8],rax
  40237f:	mov    BYTE PTR [rax],0x0
  402382:	mov    rax,rbx
  402385:	mov    DWORD PTR [rbx],esi
  402387:	mov    DWORD PTR [rbx+0x4],0x0
  40238e:	add    rsp,0x28
  402392:	pop    rbx
  402393:	pop    rsi
  402394:	ret    
  402395:	nop
  402396:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4023a0:	push   rbx
  4023a1:	sub    rsp,0x20
  4023a5:	mov    rbx,rcx
  4023a8:	mov    rcx,QWORD PTR [rcx+0x8]
  4023ac:	call   0x407578
  4023b1:	mov    rcx,rbx
  4023b4:	add    rsp,0x20
  4023b8:	pop    rbx
  4023b9:	jmp    0x407578
  4023be:	xchg   ax,ax
  4023c0:	push   rbx
  4023c1:	sub    rsp,0x20
  4023c5:	mov    rbx,QWORD PTR [rcx+0x8]
  4023c9:	call   0x407578
  4023ce:	mov    rax,rbx
  4023d1:	add    rsp,0x20
  4023d5:	pop    rbx
  4023d6:	ret    
  4023d7:	nop    WORD PTR [rax+rax*1+0x0]
  4023e0:	push   rbx
  4023e1:	sub    rsp,0x20
  4023e5:	mov    eax,DWORD PTR [rcx]
  4023e7:	mov    rbx,rcx
  4023ea:	cmp    eax,edx
  4023ec:	jg     0x402411
  4023ee:	mov    r8d,eax
  4023f1:	add    r8d,r8d
  4023f4:	cmp    edx,r8d
  4023f7:	jge    0x4023f1
  4023f9:	cmp    eax,r8d
  4023fc:	je     0x402411
  4023fe:	mov    rcx,QWORD PTR [rbx+0x8]
  402402:	mov    DWORD PTR [rbx],r8d
  402405:	movsxd rdx,r8d
  402408:	call   0x405830
  40240d:	mov    QWORD PTR [rbx+0x8],rax
  402411:	mov    rax,rbx
  402414:	add    rsp,0x20
  402418:	pop    rbx
  402419:	ret    
  40241a:	nop    WORD PTR [rax+rax*1+0x0]
  402420:	mov    rax,QWORD PTR [rcx+0x8]
  402424:	mov    BYTE PTR [rax],0x0
  402427:	mov    DWORD PTR [rcx+0x4],0x0
  40242e:	ret    
  40242f:	nop
  402430:	push   rsi
  402431:	push   rbx
  402432:	sub    rsp,0x28
  402436:	cmp    rcx,rdx
  402439:	mov    rbx,rcx
  40243c:	mov    rsi,rdx
  40243f:	je     0x402471
  402441:	mov    edx,DWORD PTR [rdx+0x4]
  402444:	call   0x4023e0
  402449:	xor    edx,edx
  40244b:	test   rax,rax
  40244e:	je     0x402468
  402450:	mov    rdx,QWORD PTR [rsi+0x8]
  402454:	mov    rcx,QWORD PTR [rbx+0x8]
  402458:	call   0x4074d8
  40245d:	mov    eax,DWORD PTR [rsi+0x4]
  402460:	mov    edx,0x1
  402465:	mov    DWORD PTR [rbx+0x4],eax
  402468:	mov    eax,edx
  40246a:	add    rsp,0x28
  40246e:	pop    rbx
  40246f:	pop    rsi
  402470:	ret    
  402471:	call   0x4075c0
  402476:	nop
  402477:	nop    WORD PTR [rax+rax*1+0x0]
  402480:	push   rdi
  402481:	push   rsi
  402482:	push   rbx
  402483:	sub    rsp,0x20
  402487:	mov    rbx,rcx
  40248a:	mov    rcx,rdx
  40248d:	mov    rdi,rdx
  402490:	call   0x4074c8
  402495:	mov    rcx,rbx
  402498:	mov    edx,eax
  40249a:	mov    rsi,rax
  40249d:	call   0x4023e0
  4024a2:	xor    r8d,r8d
  4024a5:	test   rax,rax
  4024a8:	je     0x4024bf
  4024aa:	mov    rcx,QWORD PTR [rbx+0x8]
  4024ae:	mov    rdx,rdi
  4024b1:	call   0x4074d8
  4024b6:	mov    DWORD PTR [rbx+0x4],esi
  4024b9:	mov    r8d,0x1
  4024bf:	mov    eax,r8d
  4024c2:	add    rsp,0x20
  4024c6:	pop    rbx
  4024c7:	pop    rsi
  4024c8:	pop    rdi
  4024c9:	ret    
  4024ca:	nop    WORD PTR [rax+rax*1+0x0]
  4024d0:	push   rdi
  4024d1:	push   rsi
  4024d2:	push   rbx
  4024d3:	sub    rsp,0x20
  4024d7:	cmp    r8,rcx
  4024da:	mov    rbx,rcx
  4024dd:	mov    edi,edx
  4024df:	mov    rsi,r8
  4024e2:	je     0x40255a
  4024e4:	mov    edx,DWORD PTR [r8+0x4]
  4024e8:	add    edx,DWORD PTR [rcx+0x4]
  4024eb:	call   0x4023e0
  4024f0:	test   rax,rax
  4024f3:	je     0x402550
  4024f5:	movsxd r10,DWORD PTR [rbx+0x4]
  4024f9:	lea    r8d,[rdi-0x1]
  4024fd:	cmp    r10d,edi
  402500:	mov    rax,r10
  402503:	jl     0x402528
  402505:	mov    r11,QWORD PTR [rbx+0x8]
  402509:	mov    r9d,DWORD PTR [rsi+0x4]
  40250d:	movzx  ecx,BYTE PTR [r11+r10*1]
  402512:	add    r9d,eax
  402515:	sub    eax,0x1
  402518:	movsxd r9,r9d
  40251b:	sub    r10,0x1
  40251f:	cmp    eax,r8d
  402522:	mov    BYTE PTR [r11+r9*1],cl
  402526:	jne    0x402505
  402528:	movsxd rcx,edi
  40252b:	movsxd r8,DWORD PTR [rsi+0x4]
  40252f:	add    rcx,QWORD PTR [rbx+0x8]
  402533:	mov    rdx,QWORD PTR [rsi+0x8]
  402537:	call   0x4074b8
  40253c:	mov    eax,DWORD PTR [rsi+0x4]
  40253f:	add    DWORD PTR [rbx+0x4],eax
  402542:	mov    eax,0x1
  402547:	add    rsp,0x20
  40254b:	pop    rbx
  40254c:	pop    rsi
  40254d:	pop    rdi
  40254e:	ret    
  40254f:	nop
  402550:	xor    eax,eax
  402552:	add    rsp,0x20
  402556:	pop    rbx
  402557:	pop    rsi
  402558:	pop    rdi
  402559:	ret    
  40255a:	call   0x4075c0
  40255f:	nop
  402560:	mov    r8,rdx
  402563:	xor    edx,edx
  402565:	jmp    0x4024d0
  40256a:	nop    WORD PTR [rax+rax*1+0x0]
  402570:	push   r13
  402572:	push   r12
  402574:	push   rbp
  402575:	push   rdi
  402576:	push   rsi
  402577:	push   rbx
  402578:	sub    rsp,0x28
  40257c:	mov    rsi,rcx
  40257f:	mov    rcx,r8
  402582:	mov    ebp,edx
  402584:	mov    r13,r8
  402587:	call   0x4074c8
  40258c:	mov    edx,DWORD PTR [rsi+0x4]
  40258f:	mov    rcx,rsi
  402592:	mov    r12,rax
  402595:	movsxd rdi,eax
  402598:	add    edx,eax
  40259a:	call   0x4023e0
  40259f:	test   rax,rax
  4025a2:	je     0x402604
  4025a4:	mov    eax,DWORD PTR [rsi+0x4]
  4025a7:	cmp    eax,ebp
  4025a9:	jl     0x4025dc
  4025ab:	movsxd r9,eax
  4025ae:	sub    eax,ebp
  4025b0:	lea    r10,[r9-0x1]
  4025b4:	mov    rcx,r10
  4025b7:	sub    rcx,rax
  4025ba:	mov    rax,rcx
  4025bd:	jmp    0x4025c4
  4025bf:	nop
  4025c0:	sub    r10,0x1
  4025c4:	mov    r11,QWORD PTR [rsi+0x8]
  4025c8:	movzx  ebx,BYTE PTR [r11+r9*1]
  4025cd:	add    r9,r11
  4025d0:	cmp    r10,rax
  4025d3:	mov    BYTE PTR [r9+rdi*1],bl
  4025d7:	mov    r9,r10
  4025da:	jne    0x4025c0
  4025dc:	movsxd rcx,ebp
  4025df:	add    rcx,QWORD PTR [rsi+0x8]
  4025e3:	movsxd r8,r12d
  4025e6:	mov    rdx,r13
  4025e9:	call   0x4074b8
  4025ee:	add    DWORD PTR [rsi+0x4],r12d
  4025f2:	mov    eax,0x1
  4025f7:	add    rsp,0x28
  4025fb:	pop    rbx
  4025fc:	pop    rsi
  4025fd:	pop    rdi
  4025fe:	pop    rbp
  4025ff:	pop    r12
  402601:	pop    r13
  402603:	ret    
  402604:	xor    eax,eax
  402606:	add    rsp,0x28
  40260a:	pop    rbx
  40260b:	pop    rsi
  40260c:	pop    rdi
  40260d:	pop    rbp
  40260e:	pop    r12
  402610:	pop    r13
  402612:	ret    
  402613:	nop    DWORD PTR [rax]
  402616:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402620:	mov    r8,rdx
  402623:	xor    edx,edx
  402625:	jmp    0x402570
  40262a:	nop    WORD PTR [rax+rax*1+0x0]
  402630:	push   rdi
  402631:	push   rsi
  402632:	push   rbx
  402633:	sub    rsp,0x20
  402637:	mov    eax,DWORD PTR [rcx+0x4]
  40263a:	movsxd rsi,edx
  40263d:	mov    rbx,rcx
  402640:	mov    edi,r8d
  402643:	lea    edx,[rax+0x1]
  402646:	call   0x4023e0
  40264b:	test   rax,rax
  40264e:	je     0x4026a3
  402650:	mov    edx,DWORD PTR [rbx+0x4]
  402653:	cmp    edx,esi
  402655:	jl     0x40268a
  402657:	movsxd r9,edx
  40265a:	sub    edx,esi
  40265c:	lea    rax,[r9-0x1]
  402660:	mov    rcx,rax
  402663:	sub    rcx,rdx
  402666:	jmp    0x402674
  402668:	nop    DWORD PTR [rax+rax*1+0x0]
  402670:	sub    rax,0x1
  402674:	mov    r10,QWORD PTR [rbx+0x8]
  402678:	cmp    rax,rcx
  40267b:	movzx  r11d,BYTE PTR [r10+r9*1]
  402680:	mov    BYTE PTR [r10+r9*1+0x1],r11b
  402685:	mov    r9,rax
  402688:	jne    0x402670
  40268a:	mov    rax,QWORD PTR [rbx+0x8]
  40268e:	mov    BYTE PTR [rax+rsi*1],dil
  402692:	add    DWORD PTR [rbx+0x4],0x1
  402696:	mov    eax,0x1
  40269b:	add    rsp,0x20
  40269f:	pop    rbx
  4026a0:	pop    rsi
  4026a1:	pop    rdi
  4026a2:	ret    
  4026a3:	xor    eax,eax
  4026a5:	add    rsp,0x20
  4026a9:	pop    rbx
  4026aa:	pop    rsi
  4026ab:	pop    rdi
  4026ac:	ret    
  4026ad:	nop    DWORD PTR [rax]
  4026b0:	push   rsi
  4026b1:	push   rbx
  4026b2:	sub    rsp,0x28
  4026b6:	mov    eax,DWORD PTR [rdx+0x4]
  4026b9:	add    eax,DWORD PTR [rcx+0x4]
  4026bc:	mov    rsi,rdx
  4026bf:	mov    rbx,rcx
  4026c2:	mov    edx,eax
  4026c4:	call   0x4023e0
  4026c9:	xor    edx,edx
  4026cb:	test   rax,rax
  4026ce:	je     0x4026ec
  4026d0:	movsxd rcx,DWORD PTR [rbx+0x4]
  4026d4:	mov    rdx,QWORD PTR [rsi+0x8]
  4026d8:	add    rcx,QWORD PTR [rbx+0x8]
  4026dc:	call   0x4074d8
  4026e1:	mov    eax,DWORD PTR [rsi+0x4]
  4026e4:	add    DWORD PTR [rbx+0x4],eax
  4026e7:	mov    edx,0x1
  4026ec:	mov    eax,edx
  4026ee:	add    rsp,0x28
  4026f2:	pop    rbx
  4026f3:	pop    rsi
  4026f4:	ret    
  4026f5:	nop
  4026f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402700:	push   rdi
  402701:	push   rsi
  402702:	push   rbx
  402703:	sub    rsp,0x20
  402707:	mov    rbx,rcx
  40270a:	mov    rcx,rdx
  40270d:	mov    rdi,rdx
  402710:	call   0x4074c8
  402715:	mov    edx,DWORD PTR [rbx+0x4]
  402718:	mov    rcx,rbx
  40271b:	mov    rsi,rax
  40271e:	add    edx,eax
  402720:	call   0x4023e0
  402725:	xor    r8d,r8d
  402728:	test   rax,rax
  40272b:	je     0x402749
  40272d:	movsxd r8,DWORD PTR [rbx+0x4]
  402731:	mov    rdx,rdi
  402734:	mov    rcx,r8
  402737:	add    rcx,QWORD PTR [rbx+0x8]
  40273b:	call   0x4074d8
  402740:	add    DWORD PTR [rbx+0x4],esi
  402743:	mov    r8d,0x1
  402749:	mov    eax,r8d
  40274c:	add    rsp,0x20
  402750:	pop    rbx
  402751:	pop    rsi
  402752:	pop    rdi
  402753:	ret    
  402754:	xchg   ax,ax
  402756:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402760:	push   rsi
  402761:	push   rbx
  402762:	sub    rsp,0x28
  402766:	mov    eax,DWORD PTR [rcx+0x4]
  402769:	mov    esi,edx
  40276b:	mov    rbx,rcx
  40276e:	lea    edx,[rax+0x1]
  402771:	call   0x4023e0
  402776:	test   rax,rax
  402779:	je     0x4027a4
  40277b:	movsxd rax,DWORD PTR [rbx+0x4]
  40277f:	mov    rdx,QWORD PTR [rbx+0x8]
  402783:	mov    BYTE PTR [rdx+rax*1],sil
  402787:	movsxd rax,DWORD PTR [rbx+0x4]
  40278b:	mov    rdx,QWORD PTR [rbx+0x8]
  40278f:	mov    BYTE PTR [rdx+rax*1+0x1],0x0
  402794:	add    DWORD PTR [rbx+0x4],0x1
  402798:	mov    eax,0x1
  40279d:	add    rsp,0x28
  4027a1:	pop    rbx
  4027a2:	pop    rsi
  4027a3:	ret    
  4027a4:	xor    eax,eax
  4027a6:	add    rsp,0x28
  4027aa:	pop    rbx
  4027ab:	pop    rsi
  4027ac:	ret    
  4027ad:	nop    DWORD PTR [rax]
  4027b0:	push   rbp
  4027b1:	push   rdi
  4027b2:	push   rsi
  4027b3:	push   rbx
  4027b4:	sub    rsp,0x28
  4027b8:	mov    ebp,r9d
  4027bb:	mov    rsi,rcx
  4027be:	mov    rdi,rdx
  4027c1:	sub    ebp,r8d
  4027c4:	cmp    r9d,r8d
  4027c7:	mov    ebx,r8d
  4027ca:	jl     0x40284b
  4027cc:	mov    eax,DWORD PTR [rdx+0x4]
  4027cf:	cmp    r9d,eax
  4027d2:	jg     0x40284b
  4027d4:	cmp    r8d,eax
  4027d7:	jg     0x40284b
  4027d9:	mov    edx,ebp
  4027db:	call   0x4023e0
  4027e0:	test   rax,rax
  4027e3:	je     0x402840
  4027e5:	mov    edx,ebp
  4027e7:	sub    edx,0x1
  4027ea:	js     0x402820
  4027ec:	movsxd r9,edx
  4027ef:	mov    edx,edx
  4027f1:	movsxd r8,ebx
  4027f4:	lea    rax,[r9-0x1]
  4027f8:	mov    rcx,rax
  4027fb:	sub    rcx,rdx
  4027fe:	jmp    0x402804
  402800:	sub    rax,0x1
  402804:	mov    r10,r9
  402807:	add    r10,QWORD PTR [rdi+0x8]
  40280b:	cmp    rax,rcx
  40280e:	movzx  r11d,BYTE PTR [r10+r8*1]
  402813:	mov    r10,QWORD PTR [rsi+0x8]
  402817:	mov    BYTE PTR [r10+r9*1],r11b
  40281b:	mov    r9,rax
  40281e:	jne    0x402800
  402820:	mov    rdx,QWORD PTR [rsi+0x8]
  402824:	movsxd rax,ebp
  402827:	mov    BYTE PTR [rdx+rax*1],0x0
  40282b:	mov    eax,0x1
  402830:	mov    DWORD PTR [rsi+0x4],ebp
  402833:	add    rsp,0x28
  402837:	pop    rbx
  402838:	pop    rsi
  402839:	pop    rdi
  40283a:	pop    rbp
  40283b:	ret    
  40283c:	nop    DWORD PTR [rax+0x0]
  402840:	xor    eax,eax
  402842:	add    rsp,0x28
  402846:	pop    rbx
  402847:	pop    rsi
  402848:	pop    rdi
  402849:	pop    rbp
  40284a:	ret    
  40284b:	call   0x4075c0
  402850:	nop
  402851:	nop    DWORD PTR [rax+rax*1+0x0]
  402856:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402860:	sub    rsp,0x28
  402864:	xor    eax,eax
  402866:	mov    r8d,DWORD PTR [rdx+0x4]
  40286a:	cmp    DWORD PTR [rcx+0x4],r8d
  40286e:	jne    0x402885
  402870:	mov    rdx,QWORD PTR [rdx+0x8]
  402874:	mov    rcx,QWORD PTR [rcx+0x8]
  402878:	call   0x4074e0
  40287d:	test   eax,eax
  40287f:	sete   al
  402882:	movzx  eax,al
  402885:	add    rsp,0x28
  402889:	ret    
  40288a:	nop
  40288b:	nop
  40288c:	nop
  40288d:	nop
  40288e:	nop
  40288f:	nop
  402890:	push   r13
  402892:	push   r12
  402894:	push   rbp
  402895:	push   rdi
  402896:	push   rsi
  402897:	push   rbx
  402898:	movsxd rax,DWORD PTR [rip+0xd801]        # 0x4100a0
  40289f:	mov    ebp,DWORD PTR [rip+0xd7ff]        # 0x4100a4
  4028a5:	mov    edi,DWORD PTR [rip+0x778d]        # 0x40a038
  4028ab:	mov    ebx,ebp
  4028ad:	lea    r9,[rcx+rax*8]
  4028b1:	mov    r11,rax
  4028b4:	mov    esi,edi
  4028b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4028c0:	cmp    r11d,ebx
  4028c3:	jle    0x402911
  4028c5:	cmp    esi,r11d
  4028c8:	jle    0x402911
  4028ca:	mov    r12d,esi
  4028cd:	mov    r13d,r11d
  4028d0:	sub    r12d,r11d
  4028d3:	sub    r13d,ebx
  4028d6:	cmp    r12d,r13d
  4028d9:	jg     0x402930
  4028db:	test   r12d,r12d
  4028de:	jle    0x402909
  4028e0:	movsxd rax,ebx
  4028e3:	lea    rdx,[rcx+rax*8]
  4028e7:	xor    eax,eax
  4028e9:	nop    DWORD PTR [rax+0x0]
  4028f0:	mov    r8,QWORD PTR [rdx+rax*8]
  4028f4:	mov    r10,QWORD PTR [r9+rax*8]
  4028f8:	mov    QWORD PTR [rdx+rax*8],r10
  4028fc:	mov    QWORD PTR [r9+rax*8],r8
  402900:	add    rax,0x1
  402904:	cmp    r12d,eax
  402907:	jg     0x4028f0
  402909:	add    ebx,r12d
  40290c:	cmp    r11d,ebx
  40290f:	jg     0x4028c5
  402911:	mov    eax,edi
  402913:	mov    DWORD PTR [rip+0xd787],edi        # 0x4100a0
  402919:	sub    eax,r11d
  40291c:	add    ebp,eax
  40291e:	mov    DWORD PTR [rip+0xd780],ebp        # 0x4100a4
  402924:	pop    rbx
  402925:	pop    rsi
  402926:	pop    rdi
  402927:	pop    rbp
  402928:	pop    r12
  40292a:	pop    r13
  40292c:	ret    
  40292d:	nop    DWORD PTR [rax]
  402930:	test   r13d,r13d
  402933:	jle    0x402969
  402935:	movsxd rax,ebx
  402938:	lea    r8,[rcx+rax*8]
  40293c:	mov    eax,ebx
  40293e:	sub    eax,r11d
  402941:	add    eax,esi
  402943:	cdqe   
  402945:	lea    rdx,[rcx+rax*8]
  402949:	xor    eax,eax
  40294b:	nop    DWORD PTR [rax+rax*1+0x0]
  402950:	mov    r10,QWORD PTR [r8+rax*8]
  402954:	mov    r12,QWORD PTR [rdx+rax*8]
  402958:	mov    QWORD PTR [r8+rax*8],r12
  40295c:	mov    QWORD PTR [rdx+rax*8],r10
  402960:	add    rax,0x1
  402964:	cmp    r13d,eax
  402967:	jg     0x402950
  402969:	sub    esi,r13d
  40296c:	jmp    0x4028c0
  402971:	nop    DWORD PTR [rax+rax*1+0x0]
  402976:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402980:	push   r15
  402982:	push   r14
  402984:	push   r13
  402986:	push   r12
  402988:	push   rbp
  402989:	push   rdi
  40298a:	push   rsi
  40298b:	push   rbx
  40298c:	sub    rsp,0x78
  402990:	mov    eax,DWORD PTR [rip+0x76a2]        # 0x40a038
  402996:	mov    QWORD PTR [rip+0xd6f7],0x0        # 0x410098
  4029a1:	mov    r12d,ecx
  4029a4:	mov    QWORD PTR [rsp+0xc8],rdx
  4029ac:	mov    QWORD PTR [rsp+0xd0],r8
  4029b4:	mov    QWORD PTR [rsp+0xd8],r9
  4029bc:	test   eax,eax
  4029be:	jne    0x402c40
  4029c4:	mov    DWORD PTR [rip+0x766a],0x1        # 0x40a038
  4029ce:	mov    eax,0x1
  4029d3:	lea    rcx,[rip+0x9c06]        # 0x40c5e0
  4029da:	mov    DWORD PTR [rip+0xd6c0],eax        # 0x4100a0
  4029e0:	mov    DWORD PTR [rip+0xd6be],eax        # 0x4100a4
  4029e6:	mov    QWORD PTR [rip+0xd6c7],0x0        # 0x4100b8
  4029f1:	call   0x407558
  4029f6:	mov    rbx,QWORD PTR [rsp+0xd0]
  4029fe:	mov    QWORD PTR [rip+0xd6a3],rax        # 0x4100a8
  402a05:	movzx  edx,BYTE PTR [rbx]
  402a08:	cmp    dl,0x2d
  402a0b:	je     0x402f00
  402a11:	cmp    dl,0x2b
  402a14:	je     0x402ea0
  402a1a:	test   rax,rax
  402a1d:	sete   al
  402a20:	movzx  eax,al
  402a23:	mov    DWORD PTR [rip+0xd687],eax        # 0x4100b0
  402a29:	mov    DWORD PTR [rip+0xd65d],0x1        # 0x410090
  402a33:	mov    rsi,QWORD PTR [rip+0xd67e]        # 0x4100b8
  402a3a:	test   rsi,rsi
  402a3d:	je     0x402c55
  402a43:	movsx  edi,BYTE PTR [rsi]
  402a46:	test   dil,dil
  402a49:	je     0x402c55
  402a4f:	cmp    QWORD PTR [rsp+0xd8],0x0
  402a58:	je     0x402d10
  402a5e:	movsxd rax,DWORD PTR [rip+0x75d3]        # 0x40a038
  402a65:	lea    rbx,[rax*8+0x0]
  402a6d:	mov    DWORD PTR [rsp+0x3c],eax
  402a71:	mov    QWORD PTR [rsp+0x50],rax
  402a76:	mov    QWORD PTR [rsp+0x58],rbx
  402a7b:	mov    rbx,QWORD PTR [rsp+0xc8]
  402a83:	mov    rax,QWORD PTR [rbx+rax*8]
  402a87:	mov    QWORD PTR [rsp+0x40],rax
  402a8c:	movzx  eax,BYTE PTR [rax+0x1]
  402a90:	cmp    al,0x2d
  402a92:	mov    BYTE PTR [rsp+0x48],al
  402a96:	je     0x402af4
  402a98:	mov    r14d,DWORD PTR [rsp+0xe8]
  402aa0:	test   r14d,r14d
  402aa3:	je     0x402d10
  402aa9:	mov    rax,QWORD PTR [rsp+0x40]
  402aae:	cmp    BYTE PTR [rax+0x2],0x0
  402ab2:	jne    0x402af4
  402ab4:	mov    rax,QWORD PTR [rsp+0xd0]
  402abc:	movzx  ecx,BYTE PTR [rax]
  402abf:	test   cl,cl
  402ac1:	je     0x402af4
  402ac3:	movzx  r8d,BYTE PTR [rsp+0x48]
  402ac9:	cmp    r8b,cl
  402acc:	je     0x4030f0
  402ad2:	mov    rax,QWORD PTR [rsp+0xd0]
  402ada:	jmp    0x402ae9
  402adc:	nop    DWORD PTR [rax+0x0]
  402ae0:	cmp    r8b,dl
  402ae3:	je     0x4030f0
  402ae9:	add    rax,0x1
  402aed:	movzx  edx,BYTE PTR [rax]
  402af0:	test   dl,dl
  402af2:	jne    0x402ae0
  402af4:	cmp    dil,0x3d
  402af8:	mov    rbp,rsi
  402afb:	je     0x402b14
  402afd:	test   dil,dil
  402b00:	jne    0x402b08
  402b02:	jmp    0x402b14
  402b04:	test   al,al
  402b06:	je     0x402b14
  402b08:	add    rbp,0x1
  402b0c:	movzx  eax,BYTE PTR [rbp+0x0]
  402b10:	cmp    al,0x3d
  402b12:	jne    0x402b04
  402b14:	mov    rax,QWORD PTR [rsp+0xd8]
  402b1c:	mov    r13,QWORD PTR [rax]
  402b1f:	test   r13,r13
  402b22:	je     0x403027
  402b28:	mov    r15,rbp
  402b2b:	mov    rbx,rax
  402b2e:	xor    ecx,ecx
  402b30:	xor    eax,eax
  402b32:	mov    BYTE PTR [rsp+0x6f],dil
  402b37:	mov    QWORD PTR [rsp+0x60],rbp
  402b3c:	sub    r15,rsi
  402b3f:	mov    rbp,r13
  402b42:	xor    r14d,r14d
  402b45:	mov    DWORD PTR [rsp+0x68],0xffffffff
  402b4d:	mov    edi,ecx
  402b4f:	mov    r13,rax
  402b52:	jmp    0x402b69
  402b54:	mov    edi,0x1
  402b59:	add    rbx,0x20
  402b5d:	mov    rbp,QWORD PTR [rbx]
  402b60:	add    r14d,0x1
  402b64:	test   rbp,rbp
  402b67:	je     0x402bb0
  402b69:	mov    r8,r15
  402b6c:	mov    rdx,rsi
  402b6f:	mov    rcx,rbp
  402b72:	call   0x4074c0
  402b77:	test   eax,eax
  402b79:	jne    0x402b59
  402b7b:	mov    rcx,rbp
  402b7e:	call   0x4074c8
  402b83:	cmp    r15d,eax
  402b86:	je     0x402ff0
  402b8c:	test   r13,r13
  402b8f:	jne    0x402b54
  402b91:	mov    r13,rbx
  402b94:	add    rbx,0x20
  402b98:	mov    rbp,QWORD PTR [rbx]
  402b9b:	mov    DWORD PTR [rsp+0x68],r14d
  402ba0:	add    r14d,0x1
  402ba4:	test   rbp,rbp
  402ba7:	jne    0x402b69
  402ba9:	nop    DWORD PTR [rax+0x0]
  402bb0:	mov    eax,edi
  402bb2:	mov    rbp,QWORD PTR [rsp+0x60]
  402bb7:	movsx  edi,BYTE PTR [rsp+0x6f]
  402bbc:	test   eax,eax
  402bbe:	je     0x402f80
  402bc4:	mov    r13d,DWORD PTR [rip+0x7469]        # 0x40a034
  402bcb:	test   r13d,r13d
  402bce:	je     0x402c0a
  402bd0:	mov    rax,QWORD PTR [rsp+0xc8]
  402bd8:	mov    rbx,QWORD PTR [rax]
  402bdb:	call   QWORD PTR [rip+0xe8b3]        # 0x411494
  402be1:	mov    r9,QWORD PTR [rsp+0x40]
  402be6:	lea    rcx,[rax+0x60]
  402bea:	lea    rdx,[rip+0x9a02]        # 0x40c5f3
  402bf1:	mov    r8,rbx
  402bf4:	call   0x407590
  402bf9:	mov    eax,DWORD PTR [rip+0x7439]        # 0x40a038
  402bff:	mov    rsi,QWORD PTR [rip+0xd4b2]        # 0x4100b8
  402c06:	mov    DWORD PTR [rsp+0x3c],eax
  402c0a:	mov    rcx,rsi
  402c0d:	call   0x4074c8
  402c12:	add    rax,rsi
  402c15:	mov    QWORD PTR [rip+0xd49c],rax        # 0x4100b8
  402c1c:	mov    eax,DWORD PTR [rsp+0x3c]
  402c20:	mov    DWORD PTR [rip+0x7406],0x0        # 0x40a030
  402c2a:	add    eax,0x1
  402c2d:	mov    DWORD PTR [rip+0x7405],eax        # 0x40a038
  402c33:	mov    eax,0x3f
  402c38:	jmp    0x402de6
  402c3d:	nop    DWORD PTR [rax]
  402c40:	mov    r15d,DWORD PTR [rip+0xd449]        # 0x410090
  402c47:	test   r15d,r15d
  402c4a:	je     0x4029d3
  402c50:	jmp    0x402a33
  402c55:	mov    edx,DWORD PTR [rip+0x73dd]        # 0x40a038
  402c5b:	cmp    DWORD PTR [rip+0xd43f],edx        # 0x4100a0
  402c61:	jle    0x402c69
  402c63:	mov    DWORD PTR [rip+0xd437],edx        # 0x4100a0
  402c69:	cmp    edx,DWORD PTR [rip+0xd435]        # 0x4100a4
  402c6f:	jge    0x402c77
  402c71:	mov    DWORD PTR [rip+0xd42d],edx        # 0x4100a4
  402c77:	mov    ebx,DWORD PTR [rip+0xd433]        # 0x4100b0
  402c7d:	cmp    ebx,0x1
  402c80:	je     0x402e00
  402c86:	cmp    r12d,edx
  402c89:	je     0x402e72
  402c8f:	mov    rdi,QWORD PTR [rsp+0xc8]
  402c97:	movsxd rax,edx
  402c9a:	mov    ecx,0x3
  402c9f:	mov    rax,QWORD PTR [rdi+rax*8]
  402ca3:	lea    rdi,[rip+0x9946]        # 0x40c5f0
  402caa:	mov    rsi,rax
  402cad:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402caf:	jne    0x402dc0
  402cb5:	mov    eax,DWORD PTR [rip+0xd3e9]        # 0x4100a4
  402cbb:	mov    ecx,DWORD PTR [rip+0xd3df]        # 0x4100a0
  402cc1:	add    edx,0x1
  402cc4:	mov    DWORD PTR [rip+0x736e],edx        # 0x40a038
  402cca:	cmp    eax,ecx
  402ccc:	je     0x403000
  402cd2:	cmp    edx,ecx
  402cd4:	je     0x402ce9
  402cd6:	mov    rcx,QWORD PTR [rsp+0xc8]
  402cde:	call   0x402890
  402ce3:	mov    eax,DWORD PTR [rip+0xd3bb]        # 0x4100a4
  402ce9:	cmp    r12d,eax
  402cec:	mov    DWORD PTR [rip+0xd3ad],r12d        # 0x4100a0
  402cf3:	mov    DWORD PTR [rip+0x733e],r12d        # 0x40a038
  402cfa:	jne    0x402e88
  402d00:	mov    eax,0xffffffff
  402d05:	jmp    0x402de6
  402d0a:	nop    WORD PTR [rax+rax*1+0x0]
  402d10:	mov    rax,QWORD PTR [rsp+0xd0]
  402d18:	lea    rbx,[rsi+0x1]
  402d1c:	mov    QWORD PTR [rip+0xd395],rbx        # 0x4100b8
  402d23:	movzx  eax,BYTE PTR [rax]
  402d26:	test   al,al
  402d28:	je     0x402d54
  402d2a:	cmp    al,dil
  402d2d:	je     0x402f18
  402d33:	mov    rax,QWORD PTR [rsp+0xd0]
  402d3b:	jmp    0x402d49
  402d3d:	nop    DWORD PTR [rax]
  402d40:	cmp    dl,dil
  402d43:	je     0x402f20
  402d49:	add    rax,0x1
  402d4d:	movzx  edx,BYTE PTR [rax]
  402d50:	test   dl,dl
  402d52:	jne    0x402d40
  402d54:	cmp    BYTE PTR [rsi+0x1],0x0
  402d58:	jne    0x402d70
  402d5a:	mov    edx,0x1
  402d5f:	xor    eax,eax
  402d61:	add    DWORD PTR [rip+0x72d0],0x1        # 0x40a038
  402d68:	test   dl,dl
  402d6a:	je     0x402f60
  402d70:	mov    r8d,DWORD PTR [rip+0x72bd]        # 0x40a034
  402d77:	test   r8d,r8d
  402d7a:	je     0x402db1
  402d7c:	cmp    QWORD PTR [rip+0xd324],0x0        # 0x4100a8
  402d84:	mov    rax,QWORD PTR [rsp+0xc8]
  402d8c:	mov    rbx,QWORD PTR [rax]
  402d8f:	je     0x403220
  402d95:	call   QWORD PTR [rip+0xe6f9]        # 0x411494
  402d9b:	lea    rdx,[rip+0x993f]        # 0x40c6e1
  402da2:	lea    rcx,[rax+0x60]
  402da6:	mov    r9d,edi
  402da9:	mov    r8,rbx
  402dac:	call   0x407590
  402db1:	mov    DWORD PTR [rip+0x7279],edi        # 0x40a030
  402db7:	mov    eax,0x3f
  402dbc:	jmp    0x402de6
  402dbe:	xchg   ax,ax
  402dc0:	cmp    BYTE PTR [rax],0x2d
  402dc3:	je     0x402ec0
  402dc9:	test   ebx,ebx
  402dcb:	je     0x402d00
  402dd1:	add    edx,0x1
  402dd4:	mov    QWORD PTR [rip+0xd2bd],rax        # 0x410098
  402ddb:	mov    eax,0x1
  402de0:	mov    DWORD PTR [rip+0x7252],edx        # 0x40a038
  402de6:	add    rsp,0x78
  402dea:	pop    rbx
  402deb:	pop    rsi
  402dec:	pop    rdi
  402ded:	pop    rbp
  402dee:	pop    r12
  402df0:	pop    r13
  402df2:	pop    r14
  402df4:	pop    r15
  402df6:	ret    
  402df7:	nop    WORD PTR [rax+rax*1+0x0]
  402e00:	mov    eax,DWORD PTR [rip+0xd29a]        # 0x4100a0
  402e06:	cmp    DWORD PTR [rip+0xd298],eax        # 0x4100a4
  402e0c:	je     0x4030d2
  402e12:	cmp    edx,eax
  402e14:	je     0x402e29
  402e16:	mov    rcx,QWORD PTR [rsp+0xc8]
  402e1e:	call   0x402890
  402e23:	mov    eax,DWORD PTR [rip+0x720f]        # 0x40a038
  402e29:	cmp    r12d,eax
  402e2c:	jle    0x402f40
  402e32:	mov    rdi,QWORD PTR [rsp+0xc8]
  402e3a:	movsxd rdx,eax
  402e3d:	lea    rdx,[rdi+rdx*8]
  402e41:	jmp    0x402e59
  402e43:	add    eax,0x1
  402e46:	add    rdx,0x8
  402e4a:	cmp    eax,r12d
  402e4d:	mov    DWORD PTR [rip+0x71e5],eax        # 0x40a038
  402e53:	je     0x402f40
  402e59:	mov    rcx,QWORD PTR [rdx]
  402e5c:	cmp    BYTE PTR [rcx],0x2d
  402e5f:	jne    0x402e43
  402e61:	cmp    BYTE PTR [rcx+0x1],0x0
  402e65:	je     0x402e43
  402e67:	mov    edx,DWORD PTR [rip+0x71cb]        # 0x40a038
  402e6d:	jmp    0x402f42
  402e72:	mov    r12d,DWORD PTR [rip+0xd227]        # 0x4100a0
  402e79:	mov    eax,DWORD PTR [rip+0xd225]        # 0x4100a4
  402e7f:	cmp    r12d,eax
  402e82:	je     0x402d00
  402e88:	mov    DWORD PTR [rip+0x71aa],eax        # 0x40a038
  402e8e:	mov    eax,0xffffffff
  402e93:	jmp    0x402de6
  402e98:	nop    DWORD PTR [rax+rax*1+0x0]
  402ea0:	mov    DWORD PTR [rip+0xd206],0x0        # 0x4100b0
  402eaa:	add    QWORD PTR [rsp+0xd0],0x1
  402eb3:	jmp    0x402a29
  402eb8:	nop    DWORD PTR [rax+rax*1+0x0]
  402ec0:	movzx  ecx,BYTE PTR [rax+0x1]
  402ec4:	test   cl,cl
  402ec6:	je     0x402dc9
  402ecc:	cmp    cl,0x2d
  402ecf:	sete   dl
  402ed2:	xor    ecx,ecx
  402ed4:	cmp    QWORD PTR [rsp+0xd8],0x0
  402edd:	setne  cl
  402ee0:	and    rdx,rcx
  402ee3:	lea    rsi,[rax+rdx*1+0x1]
  402ee8:	mov    QWORD PTR [rip+0xd1c9],rsi        # 0x4100b8
  402eef:	movsx  edi,BYTE PTR [rsi]
  402ef2:	jmp    0x402a4f
  402ef7:	nop    WORD PTR [rax+rax*1+0x0]
  402f00:	mov    DWORD PTR [rip+0xd1a6],0x2        # 0x4100b0
  402f0a:	add    QWORD PTR [rsp+0xd0],0x1
  402f13:	jmp    0x402a29
  402f18:	mov    rax,QWORD PTR [rsp+0xd0]
  402f20:	test   rax,rax
  402f23:	sete   cl
  402f26:	cmp    dil,0x3a
  402f2a:	sete   dl
  402f2d:	or     edx,ecx
  402f2f:	cmp    BYTE PTR [rsi+0x1],0x0
  402f33:	je     0x402d61
  402f39:	jmp    0x402d68
  402f3e:	xchg   ax,ax
  402f40:	mov    edx,eax
  402f42:	cmp    r12d,edx
  402f45:	mov    DWORD PTR [rip+0xd155],eax        # 0x4100a0
  402f4b:	jne    0x402c8f
  402f51:	jmp    0x402e72
  402f56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402f60:	cmp    BYTE PTR [rax],0x57
  402f63:	movzx  edx,BYTE PTR [rax+0x1]
  402f67:	je     0x403102
  402f6d:	cmp    dl,0x3a
  402f70:	je     0x4031ea
  402f76:	movsx  eax,dil
  402f7a:	jmp    0x402de6
  402f7f:	nop
  402f80:	test   r13,r13
  402f83:	je     0x403027
  402f89:	mov    r14d,DWORD PTR [rsp+0x68]
  402f8e:	mov    rbx,r13
  402f91:	mov    eax,DWORD PTR [rsp+0x3c]
  402f95:	add    eax,0x1
  402f98:	mov    DWORD PTR [rip+0x709a],eax        # 0x40a038
  402f9e:	cmp    BYTE PTR [rbp+0x0],0x0
  402fa2:	jne    0x40300d
  402fa4:	cmp    DWORD PTR [rbx+0x8],0x1
  402fa8:	je     0x4032fd
  402fae:	mov    rcx,rsi
  402fb1:	call   0x4074c8
  402fb6:	add    rsi,rax
  402fb9:	cmp    QWORD PTR [rsp+0xe0],0x0
  402fc2:	mov    QWORD PTR [rip+0xd0ef],rsi        # 0x4100b8
  402fc9:	je     0x402fd6
  402fcb:	mov    rax,QWORD PTR [rsp+0xe0]
  402fd3:	mov    DWORD PTR [rax],r14d
  402fd6:	mov    rax,QWORD PTR [rbx+0x10]
  402fda:	test   rax,rax
  402fdd:	je     0x403355
  402fe3:	mov    edx,DWORD PTR [rbx+0x18]
  402fe6:	mov    DWORD PTR [rax],edx
  402fe8:	xor    eax,eax
  402fea:	jmp    0x402de6
  402fef:	nop
  402ff0:	mov    rbp,QWORD PTR [rsp+0x60]
  402ff5:	jmp    0x402f91
  402ff7:	nop    WORD PTR [rax+rax*1+0x0]
  403000:	mov    DWORD PTR [rip+0xd09e],edx        # 0x4100a4
  403006:	mov    eax,edx
  403008:	jmp    0x402ce9
  40300d:	mov    r12d,DWORD PTR [rbx+0x8]
  403011:	test   r12d,r12d
  403014:	je     0x403241
  40301a:	add    rbp,0x1
  40301e:	mov    QWORD PTR [rip+0xd073],rbp        # 0x410098
  403025:	jmp    0x402fae
  403027:	cmp    BYTE PTR [rsp+0x48],0x2d
  40302c:	sete   cl
  40302f:	je     0x403074
  403031:	mov    r10d,DWORD PTR [rsp+0xe8]
  403039:	test   r10d,r10d
  40303c:	je     0x403074
  40303e:	mov    rax,QWORD PTR [rsp+0xd0]
  403046:	movzx  eax,BYTE PTR [rax]
  403049:	test   al,al
  40304b:	je     0x403074
  40304d:	cmp    dil,al
  403050:	je     0x4037a6
  403056:	mov    rax,QWORD PTR [rsp+0xd0]
  40305e:	jmp    0x403069
  403060:	cmp    dl,dil
  403063:	je     0x4036b6
  403069:	add    rax,0x1
  40306d:	movzx  edx,BYTE PTR [rax]
  403070:	test   dl,dl
  403072:	jne    0x403060
  403074:	mov    r9d,DWORD PTR [rip+0x6fb9]        # 0x40a034
  40307b:	test   r9d,r9d
  40307e:	je     0x4030c6
  403080:	test   cl,cl
  403082:	jne    0x403584
  403088:	mov    rax,QWORD PTR [rsp+0x40]
  40308d:	movsx  edi,BYTE PTR [rax]
  403090:	mov    rax,QWORD PTR [rsp+0xc8]
  403098:	mov    rbx,QWORD PTR [rax]
  40309b:	call   QWORD PTR [rip+0xe3f3]        # 0x411494
  4030a1:	lea    rdx,[rip+0x9618]        # 0x40c6c0
  4030a8:	lea    rcx,[rax+0x60]
  4030ac:	mov    QWORD PTR [rsp+0x20],rsi
  4030b1:	mov    r9d,edi
  4030b4:	mov    r8,rbx
  4030b7:	call   0x407590
  4030bc:	mov    eax,DWORD PTR [rip+0x6f76]        # 0x40a038
  4030c2:	mov    DWORD PTR [rsp+0x3c],eax
  4030c6:	lea    rax,[rip+0x9613]        # 0x40c6e0
  4030cd:	jmp    0x402c15
  4030d2:	cmp    edx,eax
  4030d4:	je     0x402e29
  4030da:	mov    DWORD PTR [rip+0xcfc4],edx        # 0x4100a4
  4030e0:	mov    eax,edx
  4030e2:	jmp    0x402e29
  4030e7:	nop    WORD PTR [rax+rax*1+0x0]
  4030f0:	lea    rbx,[rsi+0x1]
  4030f4:	mov    eax,ecx
  4030f6:	mov    QWORD PTR [rip+0xcfbb],rbx        # 0x4100b8
  4030fd:	jmp    0x402d2a
  403102:	cmp    dl,0x3b
  403105:	jne    0x402f6d
  40310b:	cmp    BYTE PTR [rsi+0x1],0x0
  40310f:	je     0x40342e
  403115:	add    DWORD PTR [rip+0x6f1c],0x1        # 0x40a038
  40311c:	mov    QWORD PTR [rip+0xcf75],rbx        # 0x410098
  403123:	movzx  edi,BYTE PTR [rbx]
  403126:	mov    QWORD PTR [rip+0xcf8b],rbx        # 0x4100b8
  40312d:	mov    rsi,rbx
  403130:	cmp    dil,0x3d
  403134:	jne    0x40314d
  403136:	jmp    0x403152
  403138:	nop    DWORD PTR [rax+rax*1+0x0]
  403140:	add    rsi,0x1
  403144:	movzx  edi,BYTE PTR [rsi]
  403147:	cmp    dil,0x3d
  40314b:	je     0x403152
  40314d:	test   dil,dil
  403150:	jne    0x403140
  403152:	mov    rax,QWORD PTR [rsp+0xd8]
  40315a:	mov    r15,QWORD PTR [rax]
  40315d:	test   r15,r15
  403160:	je     0x4036a1
  403166:	mov    r14,rsi
  403169:	xor    ecx,ecx
  40316b:	mov    BYTE PTR [rsp+0x40],dil
  403170:	sub    r14,rbx
  403173:	mov    QWORD PTR [rsp+0x48],rsi
  403178:	mov    DWORD PTR [rsp+0xc0],r12d
  403180:	mov    eax,r14d
  403183:	xor    ebp,ebp
  403185:	mov    DWORD PTR [rsp+0x3c],0x0
  40318d:	xor    r13d,r13d
  403190:	mov    r12d,ecx
  403193:	mov    rsi,QWORD PTR [rsp+0xd8]
  40319b:	mov    rdi,rax
  40319e:	jmp    0x4031b9
  4031a0:	mov    r12d,0x1
  4031a6:	add    rsi,0x20
  4031aa:	mov    r15,QWORD PTR [rsi]
  4031ad:	add    ebp,0x1
  4031b0:	test   r15,r15
  4031b3:	je     0x4033a3
  4031b9:	mov    r8,r14
  4031bc:	mov    rdx,rbx
  4031bf:	mov    rcx,r15
  4031c2:	call   0x4074c0
  4031c7:	test   eax,eax
  4031c9:	jne    0x4031a6
  4031cb:	mov    rcx,r15
  4031ce:	call   0x4074c8
  4031d3:	cmp    rdi,rax
  4031d6:	je     0x403565
  4031dc:	test   r13,r13
  4031df:	jne    0x4031a0
  4031e1:	mov    DWORD PTR [rsp+0x3c],ebp
  4031e5:	mov    r13,rsi
  4031e8:	jmp    0x4031a6
  4031ea:	cmp    BYTE PTR [rax+0x2],0x3a
  4031ee:	je     0x40332d
  4031f4:	cmp    BYTE PTR [rsi+0x1],0x0
  4031f8:	je     0x4032c8
  4031fe:	add    DWORD PTR [rip+0x6e33],0x1        # 0x40a038
  403205:	mov    QWORD PTR [rip+0xce8c],rbx        # 0x410098
  40320c:	movsx  eax,dil
  403210:	mov    QWORD PTR [rip+0xce9d],0x0        # 0x4100b8
  40321b:	jmp    0x402de6
  403220:	call   QWORD PTR [rip+0xe26e]        # 0x411494
  403226:	lea    rdx,[rip+0x94ce]        # 0x40c6fb
  40322d:	lea    rcx,[rax+0x60]
  403231:	mov    r9d,edi
  403234:	mov    r8,rbx
  403237:	call   0x407590
  40323c:	jmp    0x402db1
  403241:	mov    edi,DWORD PTR [rip+0x6ded]        # 0x40a034
  403247:	test   edi,edi
  403249:	je     0x402fae
  40324f:	mov    rax,QWORD PTR [rsp+0xc8]
  403257:	mov    rsi,QWORD PTR [rsp+0x50]
  40325c:	mov    rax,QWORD PTR [rax+rsi*8]
  403260:	cmp    BYTE PTR [rax+0x1],0x2d
  403264:	je     0x40346f
  40326a:	movsx  edi,BYTE PTR [rax]
  40326d:	mov    rax,QWORD PTR [rsp+0xc8]
  403275:	mov    rbp,QWORD PTR [rbx]
  403278:	mov    rsi,QWORD PTR [rax]
  40327b:	call   QWORD PTR [rip+0xe213]        # 0x411494
  403281:	lea    rdx,[rip+0x93c0]        # 0x40c648
  403288:	lea    rcx,[rax+0x60]
  40328c:	mov    QWORD PTR [rsp+0x20],rbp
  403291:	mov    r9d,edi
  403294:	mov    r8,rsi
  403297:	call   0x407590
  40329c:	mov    rsi,QWORD PTR [rip+0xce15]        # 0x4100b8
  4032a3:	mov    rcx,rsi
  4032a6:	call   0x4074c8
  4032ab:	add    rax,rsi
  4032ae:	mov    QWORD PTR [rip+0xce03],rax        # 0x4100b8
  4032b5:	mov    eax,DWORD PTR [rbx+0x18]
  4032b8:	mov    DWORD PTR [rip+0x6d72],eax        # 0x40a030
  4032be:	mov    eax,0x3f
  4032c3:	jmp    0x402de6
  4032c8:	movsxd rax,DWORD PTR [rip+0x6d69]        # 0x40a038
  4032cf:	cmp    eax,r12d
  4032d2:	je     0x40349e
  4032d8:	mov    rsi,QWORD PTR [rsp+0xc8]
  4032e0:	lea    edx,[rax+0x1]
  4032e3:	mov    DWORD PTR [rip+0x6d4f],edx        # 0x40a038
  4032e9:	mov    rax,QWORD PTR [rsi+rax*8]
  4032ed:	mov    QWORD PTR [rip+0xcda4],rax        # 0x410098
  4032f4:	movsx  eax,dil
  4032f8:	jmp    0x403210
  4032fd:	cmp    r12d,eax
  403300:	jle    0x40335d
  403302:	mov    eax,DWORD PTR [rsp+0x3c]
  403306:	mov    rdi,QWORD PTR [rsp+0x58]
  40330b:	add    eax,0x2
  40330e:	mov    DWORD PTR [rip+0x6d24],eax        # 0x40a038
  403314:	mov    rax,QWORD PTR [rsp+0xc8]
  40331c:	mov    rax,QWORD PTR [rax+rdi*1+0x8]
  403321:	mov    QWORD PTR [rip+0xcd70],rax        # 0x410098
  403328:	jmp    0x402fae
  40332d:	cmp    BYTE PTR [rsi+0x1],0x0
  403331:	je     0x40345f
  403337:	add    DWORD PTR [rip+0x6cfa],0x1        # 0x40a038
  40333e:	mov    QWORD PTR [rip+0xcd53],rbx        # 0x410098
  403345:	mov    QWORD PTR [rip+0xcd68],0x0        # 0x4100b8
  403350:	jmp    0x402f76
  403355:	mov    eax,DWORD PTR [rbx+0x18]
  403358:	jmp    0x402de6
  40335d:	mov    r11d,DWORD PTR [rip+0x6cd0]        # 0x40a034
  403364:	test   r11d,r11d
  403367:	jne    0x4035ba
  40336d:	mov    rcx,rsi
  403370:	call   0x4074c8
  403375:	add    rax,rsi
  403378:	mov    QWORD PTR [rip+0xcd39],rax        # 0x4100b8
  40337f:	mov    eax,DWORD PTR [rbx+0x18]
  403382:	mov    DWORD PTR [rip+0x6ca8],eax        # 0x40a030
  403388:	mov    rax,QWORD PTR [rsp+0xd0]
  403390:	cmp    BYTE PTR [rax],0x3a
  403393:	jne    0x402db7
  403399:	mov    eax,0x3a
  40339e:	jmp    0x402de6
  4033a3:	mov    eax,r12d
  4033a6:	movzx  edi,BYTE PTR [rsp+0x40]
  4033ab:	mov    rsi,QWORD PTR [rsp+0x48]
  4033b0:	test   eax,eax
  4033b2:	mov    r12d,DWORD PTR [rsp+0xc0]
  4033ba:	je     0x4034cc
  4033c0:	mov    edx,DWORD PTR [rip+0x6c6e]        # 0x40a034
  4033c6:	test   edx,edx
  4033c8:	je     0x40340b
  4033ca:	movsxd rax,DWORD PTR [rip+0x6c67]        # 0x40a038
  4033d1:	mov    rsi,QWORD PTR [rsp+0xc8]
  4033d9:	mov    rsi,QWORD PTR [rsi+rax*8]
  4033dd:	mov    rax,QWORD PTR [rsp+0xc8]
  4033e5:	mov    rbx,QWORD PTR [rax]
  4033e8:	call   QWORD PTR [rip+0xe0a6]        # 0x411494
  4033ee:	lea    rdx,[rip+0x934b]        # 0x40c740
  4033f5:	lea    rcx,[rax+0x60]
  4033f9:	mov    r9,rsi
  4033fc:	mov    r8,rbx
  4033ff:	call   0x407590
  403404:	mov    rbx,QWORD PTR [rip+0xccad]        # 0x4100b8
  40340b:	mov    rcx,rbx
  40340e:	call   0x4074c8
  403413:	add    rax,rbx
  403416:	add    DWORD PTR [rip+0x6c1b],0x1        # 0x40a038
  40341d:	mov    QWORD PTR [rip+0xcc94],rax        # 0x4100b8
  403424:	mov    eax,0x3f
  403429:	jmp    0x402de6
  40342e:	movsxd rax,DWORD PTR [rip+0x6c03]        # 0x40a038
  403435:	cmp    eax,r12d
  403438:	je     0x4035f6
  40343e:	mov    rsi,QWORD PTR [rsp+0xc8]
  403446:	lea    edx,[rax+0x1]
  403449:	mov    DWORD PTR [rip+0x6be9],edx        # 0x40a038
  40344f:	mov    rbx,QWORD PTR [rsi+rax*8]
  403453:	mov    QWORD PTR [rip+0xcc3e],rbx        # 0x410098
  40345a:	jmp    0x403123
  40345f:	mov    QWORD PTR [rip+0xcc2e],0x0        # 0x410098
  40346a:	jmp    0x403345
  40346f:	mov    rax,QWORD PTR [rsp+0xc8]
  403477:	mov    rdi,QWORD PTR [rbx]
  40347a:	mov    rsi,QWORD PTR [rax]
  40347d:	call   QWORD PTR [rip+0xe011]        # 0x411494
  403483:	lea    rdx,[rip+0x918e]        # 0x40c618
  40348a:	lea    rcx,[rax+0x60]
  40348e:	mov    r9,rdi
  403491:	mov    r8,rsi
  403494:	call   0x407590
  403499:	jmp    0x40329c
  40349e:	mov    eax,DWORD PTR [rip+0x6b90]        # 0x40a034
  4034a4:	test   eax,eax
  4034a6:	jne    0x4036c6
  4034ac:	mov    rax,QWORD PTR [rsp+0xd0]
  4034b4:	mov    DWORD PTR [rip+0x6b76],edi        # 0x40a030
  4034ba:	cmp    BYTE PTR [rax],0x3a
  4034bd:	setne  al
  4034c0:	movzx  eax,al
  4034c3:	lea    eax,[rax+rax*4+0x3a]
  4034c7:	jmp    0x403210
  4034cc:	test   r13,r13
  4034cf:	je     0x4036a1
  4034d5:	mov    ebp,DWORD PTR [rsp+0x3c]
  4034d9:	mov    QWORD PTR [rsp+0xd8],r13
  4034e1:	test   dil,dil
  4034e4:	mov    rax,QWORD PTR [rsp+0xd8]
  4034ec:	je     0x403647
  4034f2:	cmp    DWORD PTR [rax+0x8],0x0
  4034f6:	jne    0x40371f
  4034fc:	cmp    DWORD PTR [rip+0x6b31],0x0        # 0x40a034
  403503:	je     0x403537
  403505:	mov    rax,QWORD PTR [rsp+0xd8]
  40350d:	mov    rsi,QWORD PTR [rax]
  403510:	mov    rax,QWORD PTR [rsp+0xc8]
  403518:	mov    rbx,QWORD PTR [rax]
  40351b:	call   QWORD PTR [rip+0xdf73]        # 0x411494
  403521:	lea    rdx,[rip+0x9240]        # 0x40c768
  403528:	lea    rcx,[rax+0x60]
  40352c:	mov    r9,rsi
  40352f:	mov    r8,rbx
  403532:	call   0x407590
  403537:	mov    rdx,QWORD PTR [rip+0xcb7a]        # 0x4100b8
  40353e:	xor    eax,eax
  403540:	or     rcx,0xffffffffffffffff
  403544:	mov    rdi,rdx
  403547:	repnz scas al,BYTE PTR es:[rdi]
  403549:	mov    rax,rcx
  40354c:	not    rax
  40354f:	lea    rax,[rdx+rax*1-0x1]
  403554:	mov    QWORD PTR [rip+0xcb5d],rax        # 0x4100b8
  40355b:	mov    eax,0x3f
  403560:	jmp    0x402de6
  403565:	mov    QWORD PTR [rsp+0xd8],rsi
  40356d:	movzx  edi,BYTE PTR [rsp+0x40]
  403572:	mov    r12d,DWORD PTR [rsp+0xc0]
  40357a:	mov    rsi,QWORD PTR [rsp+0x48]
  40357f:	jmp    0x4034e1
  403584:	mov    rax,QWORD PTR [rsp+0xc8]
  40358c:	mov    rbx,QWORD PTR [rax]
  40358f:	call   QWORD PTR [rip+0xdeff]        # 0x411494
  403595:	lea    rdx,[rip+0x9104]        # 0x40c6a0
  40359c:	lea    rcx,[rax+0x60]
  4035a0:	mov    r9,rsi
  4035a3:	mov    r8,rbx
  4035a6:	call   0x407590
  4035ab:	mov    eax,DWORD PTR [rip+0x6a87]        # 0x40a038
  4035b1:	mov    DWORD PTR [rsp+0x3c],eax
  4035b5:	jmp    0x4030c6
  4035ba:	mov    rax,QWORD PTR [rsp+0xc8]
  4035c2:	mov    rsi,QWORD PTR [rsp+0x50]
  4035c7:	mov    rdi,QWORD PTR [rax+rsi*8]
  4035cb:	mov    rsi,QWORD PTR [rax]
  4035ce:	call   QWORD PTR [rip+0xdec0]        # 0x411494
  4035d4:	lea    rdx,[rip+0x909d]        # 0x40c678
  4035db:	lea    rcx,[rax+0x60]
  4035df:	mov    r8,rsi
  4035e2:	mov    r9,rdi
  4035e5:	call   0x407590
  4035ea:	mov    rsi,QWORD PTR [rip+0xcac7]        # 0x4100b8
  4035f1:	jmp    0x40336d
  4035f6:	mov    ecx,DWORD PTR [rip+0x6a38]        # 0x40a034
  4035fc:	test   ecx,ecx
  4035fe:	je     0x403627
  403600:	mov    rax,QWORD PTR [rsp+0xc8]
  403608:	mov    rbx,QWORD PTR [rax]
  40360b:	call   QWORD PTR [rip+0xde83]        # 0x411494
  403611:	lea    rdx,[rip+0x9100]        # 0x40c718
  403618:	lea    rcx,[rax+0x60]
  40361c:	mov    r9d,edi
  40361f:	mov    r8,rbx
  403622:	call   0x407590
  403627:	mov    rax,QWORD PTR [rsp+0xd0]
  40362f:	mov    DWORD PTR [rip+0x69fb],edi        # 0x40a030
  403635:	cmp    BYTE PTR [rax],0x3a
  403638:	setne  al
  40363b:	movzx  eax,al
  40363e:	lea    eax,[rax+rax*4+0x3a]
  403642:	jmp    0x402de6
  403647:	cmp    DWORD PTR [rax+0x8],0x1
  40364b:	je     0x4036f2
  403651:	mov    rcx,rbx
  403654:	call   0x4074c8
  403659:	add    rbx,rax
  40365c:	cmp    QWORD PTR [rsp+0xe0],0x0
  403665:	mov    QWORD PTR [rip+0xca4c],rbx        # 0x4100b8
  40366c:	je     0x403678
  40366e:	mov    rax,QWORD PTR [rsp+0xe0]
  403676:	mov    DWORD PTR [rax],ebp
  403678:	mov    rax,QWORD PTR [rsp+0xd8]
  403680:	mov    rax,QWORD PTR [rax+0x10]
  403684:	test   rax,rax
  403687:	je     0x4037be
  40368d:	mov    rsi,QWORD PTR [rsp+0xd8]
  403695:	mov    edx,DWORD PTR [rsi+0x18]
  403698:	mov    DWORD PTR [rax],edx
  40369a:	xor    eax,eax
  40369c:	jmp    0x402de6
  4036a1:	mov    QWORD PTR [rip+0xca0c],0x0        # 0x4100b8
  4036ac:	mov    eax,0x57
  4036b1:	jmp    0x402de6
  4036b6:	lea    rbx,[rsi+0x1]
  4036ba:	mov    QWORD PTR [rip+0xc9f7],rbx        # 0x4100b8
  4036c1:	jmp    0x402d33
  4036c6:	mov    rax,QWORD PTR [rsp+0xc8]
  4036ce:	mov    rbx,QWORD PTR [rax]
  4036d1:	call   QWORD PTR [rip+0xddbd]        # 0x411494
  4036d7:	lea    rdx,[rip+0x903a]        # 0x40c718
  4036de:	lea    rcx,[rax+0x60]
  4036e2:	mov    r9d,edi
  4036e5:	mov    r8,rbx
  4036e8:	call   0x407590
  4036ed:	jmp    0x4034ac
  4036f2:	movsxd rax,DWORD PTR [rip+0x693f]        # 0x40a038
  4036f9:	cmp    r12d,eax
  4036fc:	jle    0x40372f
  4036fe:	mov    rsi,QWORD PTR [rsp+0xc8]
  403706:	lea    edx,[rax+0x1]
  403709:	mov    DWORD PTR [rip+0x6929],edx        # 0x40a038
  40370f:	mov    rax,QWORD PTR [rsi+rax*8]
  403713:	mov    QWORD PTR [rip+0xc97e],rax        # 0x410098
  40371a:	jmp    0x403651
  40371f:	add    rsi,0x1
  403723:	mov    QWORD PTR [rip+0xc96e],rsi        # 0x410098
  40372a:	jmp    0x403651
  40372f:	cmp    DWORD PTR [rip+0x68fe],0x0        # 0x40a034
  403736:	je     0x40376c
  403738:	mov    rsi,QWORD PTR [rsp+0xc8]
  403740:	mov    rsi,QWORD PTR [rsi+rax*8-0x8]
  403745:	mov    rax,QWORD PTR [rsp+0xc8]
  40374d:	mov    rbx,QWORD PTR [rax]
  403750:	call   QWORD PTR [rip+0xdd3e]        # 0x411494
  403756:	lea    rdx,[rip+0x8f1b]        # 0x40c678
  40375d:	lea    rcx,[rax+0x60]
  403761:	mov    r9,rsi
  403764:	mov    r8,rbx
  403767:	call   0x407590
  40376c:	mov    rdx,QWORD PTR [rip+0xc945]        # 0x4100b8
  403773:	xor    eax,eax
  403775:	or     rcx,0xffffffffffffffff
  403779:	mov    rdi,rdx
  40377c:	repnz scas al,BYTE PTR es:[rdi]
  40377e:	mov    rax,rcx
  403781:	not    rax
  403784:	lea    rax,[rdx+rax*1-0x1]
  403789:	mov    QWORD PTR [rip+0xc928],rax        # 0x4100b8
  403790:	mov    rax,QWORD PTR [rsp+0xd0]
  403798:	cmp    BYTE PTR [rax],0x3a
  40379b:	jne    0x402db7
  4037a1:	jmp    0x403399
  4037a6:	lea    rbx,[rsi+0x1]
  4037aa:	mov    rax,QWORD PTR [rsp+0xd0]
  4037b2:	mov    QWORD PTR [rip+0xc8ff],rbx        # 0x4100b8
  4037b9:	jmp    0x402f20
  4037be:	mov    rax,QWORD PTR [rsp+0xd8]
  4037c6:	mov    eax,DWORD PTR [rax+0x18]
  4037c9:	jmp    0x402de6
  4037ce:	xchg   ax,ax
  4037d0:	sub    rsp,0x38
  4037d4:	xor    r9d,r9d
  4037d7:	mov    DWORD PTR [rsp+0x28],0x0
  4037df:	mov    QWORD PTR [rsp+0x20],0x0
  4037e8:	call   0x402980
  4037ed:	add    rsp,0x38
  4037f1:	ret    
  4037f2:	nop
  4037f3:	nop
  4037f4:	nop
  4037f5:	nop
  4037f6:	nop
  4037f7:	nop
  4037f8:	nop
  4037f9:	nop
  4037fa:	nop
  4037fb:	nop
  4037fc:	nop
  4037fd:	nop
  4037fe:	nop
  4037ff:	nop
  403800:	sub    rsp,0x38
  403804:	mov    rax,QWORD PTR [rsp+0x60]
  403809:	mov    DWORD PTR [rsp+0x28],0x0
  403811:	mov    QWORD PTR [rsp+0x20],rax
  403816:	call   0x402980
  40381b:	add    rsp,0x38
  40381f:	ret    
  403820:	sub    rsp,0x38
  403824:	mov    rax,QWORD PTR [rsp+0x60]
  403829:	mov    DWORD PTR [rsp+0x28],0x1
  403831:	mov    QWORD PTR [rsp+0x20],rax
  403836:	call   0x402980
  40383b:	add    rsp,0x38
  40383f:	ret    
  403840:	push   rsi
  403841:	push   rbx
  403842:	sub    rsp,0x28
  403846:	mov    rax,QWORD PTR [rip+0xc873]        # 0x4100c0
  40384d:	test   rax,rax
  403850:	je     0x403860
  403852:	add    rsp,0x28
  403856:	pop    rbx
  403857:	pop    rsi
  403858:	ret    
  403859:	nop    DWORD PTR [rax+0x0]
  403860:	xor    edx,edx
  403862:	xor    ecx,ecx
  403864:	mov    rsi,QWORD PTR [rip+0xdb61]        # 0x4113cc
  40386b:	call   rsi
  40386d:	test   eax,eax
  40386f:	mov    ebx,eax
  403871:	jne    0x403895
  403873:	mov    rax,QWORD PTR [rip+0xc846]        # 0x4100c0
  40387a:	test   rax,rax
  40387d:	jne    0x403852
  40387f:	nop
  403880:	lea    rcx,[rip+0x8f19]        # 0x40c7a0
  403887:	call   0x405880
  40388c:	mov    QWORD PTR [rip+0xc82d],rax        # 0x4100c0
  403893:	jmp    0x403852
  403895:	mov    ecx,eax
  403897:	call   0x4057b0
  40389c:	mov    ecx,ebx
  40389e:	mov    QWORD PTR [rip+0xc81b],rax        # 0x4100c0
  4038a5:	mov    rdx,rax
  4038a8:	call   rsi
  4038aa:	test   eax,eax
  4038ac:	jne    0x403873
  4038ae:	mov    rcx,QWORD PTR [rip+0xc80b]        # 0x4100c0
  4038b5:	call   0x407578
  4038ba:	mov    QWORD PTR [rip+0xc7fb],0x0        # 0x4100c0
  4038c5:	jmp    0x403880
  4038c7:	nop    WORD PTR [rax+rax*1+0x0]
  4038d0:	push   r12
  4038d2:	push   rbp
  4038d3:	push   rdi
  4038d4:	push   rsi
  4038d5:	push   rbx
  4038d6:	sub    rsp,0x20
  4038da:	mov    rdi,rcx
  4038dd:	call   0x403840
  4038e2:	test   rdi,rdi
  4038e5:	mov    rbp,rax
  4038e8:	je     0x403970
  4038ee:	mov    rcx,rdi
  4038f1:	call   0x4074c8
  4038f6:	mov    r12d,eax
  4038f9:	movsxd rsi,eax
  4038fc:	mov    rcx,rbp
  4038ff:	call   0x4074c8
  403904:	movsxd rbx,eax
  403907:	lea    rcx,[rbx+rsi*1+0x9]
  40390c:	call   0x4057b0
  403911:	mov    rdx,rbp
  403914:	mov    rsi,rax
  403917:	mov    rcx,rax
  40391a:	call   0x4074d8
  40391f:	lea    rax,[rsi+rbx*1]
  403923:	movabs rdx,0x5858585858586363
  40392d:	lea    rcx,[rsi+rbx*1+0x8]
  403932:	mov    QWORD PTR [rax],rdx
  403935:	mov    BYTE PTR [rax+0x8],0x0
  403939:	mov    rdx,rdi
  40393c:	call   0x4074d8
  403941:	mov    edx,r12d
  403944:	mov    rcx,rsi
  403947:	call   0x4058b0
  40394c:	cmp    eax,0xffffffff
  40394f:	je     0x403981
  403951:	mov    ecx,eax
  403953:	call   0x407460
  403958:	test   eax,eax
  40395a:	jne    0x4039b2
  40395c:	mov    rax,rsi
  40395f:	add    rsp,0x20
  403963:	pop    rbx
  403964:	pop    rsi
  403965:	pop    rdi
  403966:	pop    rbp
  403967:	pop    r12
  403969:	ret    
  40396a:	nop    WORD PTR [rax+rax*1+0x0]
  403970:	xor    esi,esi
  403972:	xor    r12d,r12d
  403975:	lea    rdi,[rip+0x8e27]        # 0x40c7a3
  40397c:	jmp    0x4038fc
  403981:	call   QWORD PTR [rip+0xdb55]        # 0x4114dc
  403987:	mov    ecx,DWORD PTR [rax]
  403989:	call   0x4074d0
  40398e:	mov    rbx,rax
  403991:	call   QWORD PTR [rip+0xdafd]        # 0x411494
  403997:	lea    rdx,[rip+0x8e0a]        # 0x40c7a8
  40399e:	lea    rcx,[rax+0x60]
  4039a2:	mov    r9,rbx
  4039a5:	mov    r8,rbp
  4039a8:	call   0x407590
  4039ad:	call   0x4075c0
  4039b2:	call   0x4075c0
  4039b7:	nop
  4039b8:	nop
  4039b9:	nop
  4039ba:	nop
  4039bb:	nop
  4039bc:	nop
  4039bd:	nop
  4039be:	nop
  4039bf:	nop
  4039c0:	push   rdi
  4039c1:	push   rsi
  4039c2:	push   rbx
  4039c3:	sub    rsp,0x50
  4039c7:	mov    ebx,DWORD PTR [rsp+0xa0]
  4039ce:	mov    rdi,rdx
  4039d1:	mov    rsi,rcx
  4039d4:	mov    rdx,r8
  4039d7:	test   bl,0x1
  4039da:	je     0x403a70
  4039e0:	cmp    QWORD PTR [rip+0xc6f0],0x0        # 0x4100d8
  4039e8:	jne    0x403aa4
  4039ee:	mov    ecx,0x2
  4039f3:	mov    r8,r9
  4039f6:	call   0x405710
  4039fb:	mov    DWORD PTR [rip+0xc6cb],0x0        # 0x4100d0
  403a05:	mov    rcx,rax
  403a08:	mov    QWORD PTR [rip+0xc6c9],rax        # 0x4100d8
  403a0f:	mov    r10d,ebx
  403a12:	mov    edx,0x2
  403a17:	mov    QWORD PTR [rsp+0x28],0x0
  403a20:	shr    r10d,1
  403a23:	mov    QWORD PTR [rsp+0x20],0x0
  403a2c:	mov    r9,rdi
  403a2f:	and    r10d,0x1
  403a33:	and    ebx,0x4
  403a36:	mov    r8,rsi
  403a39:	cmovne ebx,edx
  403a3c:	lea    rdx,[rsp+0x4c]
  403a41:	or     ebx,r10d
  403a44:	mov    QWORD PTR [rsp+0x30],rdx
  403a49:	mov    edx,ebx
  403a4b:	call   0x404470
  403a50:	test   rax,rax
  403a53:	jne    0x403ad2
  403a55:	mov    eax,DWORD PTR [rip+0xc675]        # 0x4100d0
  403a5b:	add    eax,0x1
  403a5e:	mov    DWORD PTR [rip+0xc66c],eax        # 0x4100d0
  403a64:	add    rsp,0x50
  403a68:	pop    rbx
  403a69:	pop    rsi
  403a6a:	pop    rdi
  403a6b:	ret    
  403a6c:	nop    DWORD PTR [rax+0x0]
  403a70:	mov    rcx,QWORD PTR [rip+0xc661]        # 0x4100d8
  403a77:	test   rcx,rcx
  403a7a:	jne    0x403a0f
  403a7c:	mov    rax,QWORD PTR [rsp+0x90]
  403a84:	lea    rdi,[rip+0x8d62]        # 0x40c7ed
  403a8b:	mov    QWORD PTR [rax],rdi
  403a8e:	mov    rax,QWORD PTR [rsp+0x98]
  403a96:	mov    QWORD PTR [rax],0x0
  403a9d:	mov    eax,0xffffffff
  403aa2:	jmp    0x403a64
  403aa4:	mov    rax,QWORD PTR [rsp+0x90]
  403aac:	lea    rsi,[rip+0x8d1d]        # 0x40c7d0
  403ab3:	mov    QWORD PTR [rax],rsi
  403ab6:	mov    rax,QWORD PTR [rsp+0x98]
  403abe:	mov    QWORD PTR [rax],0x0
  403ac5:	mov    eax,0xffffffff
  403aca:	add    rsp,0x50
  403ace:	pop    rbx
  403acf:	pop    rsi
  403ad0:	pop    rdi
  403ad1:	ret    
  403ad2:	mov    rdi,QWORD PTR [rsp+0x90]
  403ada:	mov    QWORD PTR [rdi],rax
  403add:	mov    rax,QWORD PTR [rsp+0x98]
  403ae5:	mov    QWORD PTR [rax],0x0
  403aec:	mov    eax,0xffffffff
  403af1:	add    rsp,0x50
  403af5:	pop    rbx
  403af6:	pop    rsi
  403af7:	pop    rdi
  403af8:	ret    
  403af9:	nop    DWORD PTR [rax+0x0]
  403b00:	push   rbp
  403b01:	push   rdi
  403b02:	push   rsi
  403b03:	push   rbx
  403b04:	sub    rsp,0x38
  403b08:	mov    rax,QWORD PTR [rip+0xc5c9]        # 0x4100d8
  403b0f:	mov    ebx,ecx
  403b11:	sub    ebx,0x1
  403b14:	js     0x403ba4
  403b1a:	test   rax,rax
  403b1d:	je     0x403ba4
  403b23:	movsxd r9,DWORD PTR [rip+0xc5a6]        # 0x4100d0
  403b2a:	cmp    ebx,r9d
  403b2d:	jge    0x403ba4
  403b2f:	test   ebx,ebx
  403b31:	mov    rdi,rdx
  403b34:	mov    esi,ecx
  403b36:	jne    0x403b3e
  403b38:	cmp    r9d,0x1
  403b3c:	je     0x403b90
  403b3e:	lea    rcx,[r9*4+0x0]
  403b46:	call   0x4057b0
  403b4b:	mov    edx,DWORD PTR [rip+0xc57f]        # 0x4100d0
  403b51:	mov    rcx,QWORD PTR [rip+0xc580]        # 0x4100d8
  403b58:	mov    r8,rax
  403b5b:	mov    rbp,rax
  403b5e:	call   0x404740
  403b63:	test   eax,eax
  403b65:	je     0x403be2
  403b67:	movsxd rbx,ebx
  403b6a:	mov    rcx,rbp
  403b6d:	mov    eax,DWORD PTR [rbp+rbx*4+0x0]
  403b71:	mov    DWORD PTR [rdi],eax
  403b73:	call   0x407578
  403b78:	cmp    esi,DWORD PTR [rip+0xc552]        # 0x4100d0
  403b7e:	mov    eax,esi
  403b80:	je     0x403bb0
  403b82:	add    rsp,0x38
  403b86:	pop    rbx
  403b87:	pop    rsi
  403b88:	pop    rdi
  403b89:	pop    rbp
  403b8a:	ret    
  403b8b:	nop    DWORD PTR [rax+rax*1+0x0]
  403b90:	mov    r8,rdx
  403b93:	mov    rcx,rax
  403b96:	mov    edx,0x1
  403b9b:	call   0x404740
  403ba0:	test   eax,eax
  403ba2:	jne    0x403b78
  403ba4:	mov    eax,0xffffffff
  403ba9:	jmp    0x403b82
  403bab:	nop    DWORD PTR [rax+rax*1+0x0]
  403bb0:	mov    rcx,QWORD PTR [rip+0xc521]        # 0x4100d8
  403bb7:	mov    DWORD PTR [rsp+0x2c],esi
  403bbb:	call   0x404850
  403bc0:	mov    eax,DWORD PTR [rsp+0x2c]
  403bc4:	mov    QWORD PTR [rip+0xc509],0x0        # 0x4100d8
  403bcf:	mov    DWORD PTR [rip+0xc4f7],0x0        # 0x4100d0
  403bd9:	add    rsp,0x38
  403bdd:	pop    rbx
  403bde:	pop    rsi
  403bdf:	pop    rdi
  403be0:	pop    rbp
  403be1:	ret    
  403be2:	mov    rcx,rbp
  403be5:	call   0x407578
  403bea:	jmp    0x403ba4
  403bec:	nop
  403bed:	nop
  403bee:	nop
  403bef:	nop
  403bf0:	push   r15
  403bf2:	push   r14
  403bf4:	push   r13
  403bf6:	push   r12
  403bf8:	push   rbp
  403bf9:	push   rdi
  403bfa:	push   rsi
  403bfb:	push   rbx
  403bfc:	sub    rsp,0x48
  403c00:	mov    r10d,DWORD PTR [rcx+0x30]
  403c04:	cmp    DWORD PTR [rcx+0x50],r10d
  403c08:	mov    eax,0x1
  403c0d:	je     0x403cbf
  403c13:	mov    rbx,rcx
  403c16:	mov    rcx,QWORD PTR [rcx+0x40]
  403c1a:	mov    ebp,edx
  403c1c:	movsxd rdx,r10d
  403c1f:	mov    r13,r9
  403c22:	mov    r12,r8
  403c25:	shl    rdx,0x2
  403c29:	call   0x405830
  403c2e:	test   BYTE PTR [rbx],0x1
  403c31:	mov    QWORD PTR [rbx+0x40],rax
  403c35:	jne    0x403cd0
  403c3b:	mov    edi,DWORD PTR [rbx+0x50]
  403c3e:	cmp    edi,DWORD PTR [rbx+0x30]
  403c41:	jge    0x403cea
  403c47:	movsxd rsi,edi
  403c4a:	mov    r14d,0x1
  403c50:	mov    r15,rsi
  403c53:	shl    r15,0x4
  403c57:	nop    WORD PTR [rax+rax*1+0x0]
  403c60:	mov    r9,QWORD PTR [rbx+0x48]
  403c64:	mov    rcx,QWORD PTR [rbx+0x40]
  403c68:	mov    rax,QWORD PTR [rbx+0x80]
  403c6f:	lea    rdx,[r9+r15*1]
  403c73:	test   r9,r9
  403c76:	lea    r8,[rcx+rsi*4]
  403c7a:	mov    rax,QWORD PTR [rax+0x20]
  403c7e:	mov    rcx,rbx
  403c81:	cmovne r9,rdx
  403c85:	mov    rdx,QWORD PTR [rbx+0x38]
  403c89:	mov    rdx,QWORD PTR [rdx+rsi*8]
  403c8d:	mov    QWORD PTR [rsp+0x30],r13
  403c92:	mov    QWORD PTR [rsp+0x28],r12
  403c97:	mov    DWORD PTR [rsp+0x20],ebp
  403c9b:	call   rax
  403c9d:	test   rax,rax
  403ca0:	mov    eax,0x0
  403ca5:	cmovs  r14d,eax
  403ca9:	add    edi,0x1
  403cac:	add    rsi,0x1
  403cb0:	add    r15,0x10
  403cb4:	cmp    edi,DWORD PTR [rbx+0x30]
  403cb7:	jl     0x403c60
  403cb9:	mov    DWORD PTR [rbx+0x50],edi
  403cbc:	mov    eax,r14d
  403cbf:	add    rsp,0x48
  403cc3:	pop    rbx
  403cc4:	pop    rsi
  403cc5:	pop    rdi
  403cc6:	pop    rbp
  403cc7:	pop    r12
  403cc9:	pop    r13
  403ccb:	pop    r14
  403ccd:	pop    r15
  403ccf:	ret    
  403cd0:	movsxd rdx,DWORD PTR [rbx+0x30]
  403cd4:	mov    rcx,QWORD PTR [rbx+0x48]
  403cd8:	shl    rdx,0x4
  403cdc:	call   0x405830
  403ce1:	mov    QWORD PTR [rbx+0x48],rax
  403ce5:	jmp    0x403c3b
  403cea:	mov    r14d,0x1
  403cf0:	jmp    0x403cb9
  403cf2:	nop    DWORD PTR [rax+0x0]
  403cf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403d00:	push   rdi
  403d01:	push   rsi
  403d02:	push   rbx
  403d03:	sub    rsp,0x20
  403d07:	test   r8,r8
  403d0a:	mov    rax,r8
  403d0d:	je     0x403d30
  403d0f:	and    edx,0x4
  403d12:	je     0x403d8b
  403d14:	mov    rcx,QWORD PTR [rcx]
  403d17:	test   rcx,rcx
  403d1a:	je     0x403d93
  403d1c:	xor    r8d,r8d
  403d1f:	mov    rdx,rax
  403d22:	add    rsp,0x20
  403d26:	pop    rbx
  403d27:	pop    rsi
  403d28:	pop    rdi
  403d29:	jmp    0x405c30
  403d2e:	xchg   ax,ax
  403d30:	mov    rbx,QWORD PTR [rcx]
  403d33:	xor    ecx,ecx
  403d35:	test   rbx,rbx
  403d38:	je     0x403d96
  403d3a:	mov    rcx,rbx
  403d3d:	call   0x4074c8
  403d42:	cmp    eax,0x5
  403d45:	jle    0x403d5e
  403d47:	cdqe   
  403d49:	lea    rdi,[rip+0x8ac0]        # 0x40c810
  403d50:	mov    ecx,0x7
  403d55:	lea    rsi,[rbx+rax*1-0x6]
  403d5a:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  403d5c:	je     0x403da2
  403d5e:	lea    rdx,[rip+0x8aab]        # 0x40c810
  403d65:	mov    rcx,rbx
  403d68:	xor    r8d,r8d
  403d6b:	call   0x405c30
  403d70:	mov    rbx,rax
  403d73:	xor    edx,edx
  403d75:	mov    rcx,rbx
  403d78:	call   0x4058b0
  403d7d:	test   eax,eax
  403d7f:	js     0x403daf
  403d81:	mov    ecx,eax
  403d83:	call   0x407460
  403d88:	mov    rax,rbx
  403d8b:	add    rsp,0x20
  403d8f:	pop    rbx
  403d90:	pop    rsi
  403d91:	pop    rdi
  403d92:	ret    
  403d93:	mov    rcx,r8
  403d96:	add    rsp,0x20
  403d9a:	pop    rbx
  403d9b:	pop    rsi
  403d9c:	pop    rdi
  403d9d:	jmp    0x4038d0
  403da2:	mov    rcx,rbx
  403da5:	call   0x405880
  403daa:	mov    rbx,rax
  403dad:	jmp    0x403d73
  403daf:	mov    rcx,rbx
  403db2:	call   0x407578
  403db7:	xor    eax,eax
  403db9:	jmp    0x403d8b
  403dbb:	nop    DWORD PTR [rax+rax*1+0x0]
  403dc0:	push   rbp
  403dc1:	push   rdi
  403dc2:	push   rsi
  403dc3:	push   rbx
  403dc4:	sub    rsp,0x28
  403dc8:	mov    ebp,ecx
  403dca:	mov    rdi,rdx
  403dcd:	mov    rsi,r8
  403dd0:	mov    rbx,r9
  403dd3:	mov    ecx,0x90
  403dd8:	call   0x4057b0
  403ddd:	mov    DWORD PTR [rax],ebp
  403ddf:	mov    QWORD PTR [rax+0x8],rdi
  403de3:	mov    QWORD PTR [rax+0x10],rsi
  403de7:	mov    DWORD PTR [rax+0x18],0x0
  403dee:	mov    QWORD PTR [rax+0x20],0x0
  403df6:	mov    DWORD PTR [rax+0x28],0x0
  403dfd:	mov    DWORD PTR [rax+0x2c],0xffffffff
  403e04:	mov    DWORD PTR [rax+0x30],0x0
  403e0b:	mov    QWORD PTR [rax+0x38],0x0
  403e13:	mov    QWORD PTR [rax+0x40],0x0
  403e1b:	mov    QWORD PTR [rax+0x48],0x0
  403e23:	mov    DWORD PTR [rax+0x50],0x0
  403e2a:	mov    QWORD PTR [rax+0x58],0x0
  403e32:	mov    QWORD PTR [rax+0x60],0x0
  403e3a:	mov    QWORD PTR [rax+0x68],0x0
  403e42:	mov    DWORD PTR [rax+0x70],0x0
  403e49:	mov    QWORD PTR [rax+0x78],0x0
  403e51:	mov    QWORD PTR [rax+0x80],rbx
  403e58:	mov    QWORD PTR [rax+0x88],0x0
  403e63:	add    rsp,0x28
  403e67:	pop    rbx
  403e68:	pop    rsi
  403e69:	pop    rdi
  403e6a:	pop    rbp
  403e6b:	ret    
  403e6c:	nop    DWORD PTR [rax+0x0]
  403e70:	push   r15
  403e72:	push   r14
  403e74:	push   r13
  403e76:	push   r12
  403e78:	push   rbp
  403e79:	push   rdi
  403e7a:	push   rsi
  403e7b:	push   rbx
  403e7c:	sub    rsp,0x78
  403e80:	mov    rbx,rcx
  403e83:	mov    rcx,QWORD PTR [rcx+0x58]
  403e87:	mov    esi,edx
  403e89:	mov    r12,r8
  403e8c:	mov    r13,r9
  403e8f:	test   rcx,rcx
  403e92:	je     0x403eaa
  403e94:	call   0x4075a8
  403e99:	cmp    eax,0xffffffff
  403e9c:	je     0x404100
  403ea2:	mov    QWORD PTR [rbx+0x58],0x0
  403eaa:	cmp    QWORD PTR [rbx+0x20],0x0
  403eaf:	je     0x403ef0
  403eb1:	mov    r9,QWORD PTR [rsp+0xf8]
  403eb9:	lea    r8,[rsp+0x68]
  403ebe:	xor    edx,edx
  403ec0:	mov    rcx,rbx
  403ec3:	call   0x403bf0
  403ec8:	test   eax,eax
  403eca:	jne    0x403fe0
  403ed0:	mov    rax,QWORD PTR [rsp+0x68]
  403ed5:	add    rsp,0x78
  403ed9:	pop    rbx
  403eda:	pop    rsi
  403edb:	pop    rdi
  403edc:	pop    rbp
  403edd:	pop    r12
  403edf:	pop    r13
  403ee1:	pop    r14
  403ee3:	pop    r15
  403ee5:	ret    
  403ee6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403ef0:	mov    edi,DWORD PTR [rbx+0x18]
  403ef3:	test   edi,edi
  403ef5:	js     0x4040e0
  403efb:	test   sil,0x1
  403eff:	je     0x404022
  403f05:	xor    r14d,r14d
  403f08:	cmp    QWORD PTR [rsp+0xe8],0x0
  403f11:	je     0x404300
  403f17:	test   sil,0x4
  403f1b:	mov    ebp,0xffffffff
  403f20:	jne    0x404275
  403f26:	mov    DWORD PTR [rbx+0x18],0xffffffff
  403f2d:	test   ebp,ebp
  403f2f:	js     0x40445b
  403f35:	test   r14d,r14d
  403f38:	jne    0x404142
  403f3e:	cmp    QWORD PTR [rsp+0xf0],0x0
  403f47:	je     0x4041c3
  403f4d:	test   sil,0x40
  403f51:	je     0x404111
  403f57:	mov    rax,QWORD PTR [rsp+0xf8]
  403f5f:	xor    esi,esi
  403f61:	mov    r15d,0xffffffff
  403f67:	mov    DWORD PTR [rax],0x0
  403f6d:	lea    rax,[rip+0x8934]        # 0x40c8a8
  403f74:	mov    QWORD PTR [rsp+0x68],rax
  403f79:	xor    r14d,r14d
  403f7c:	test   edi,edi
  403f7e:	je     0x403f8f
  403f80:	mov    rax,QWORD PTR [rbx+0x80]
  403f87:	mov    edx,edi
  403f89:	mov    rcx,rbx
  403f8c:	call   QWORD PTR [rax+0x18]
  403f8f:	cmp    ebp,0x1
  403f92:	je     0x403fa7
  403f94:	test   ebp,ebp
  403f96:	js     0x403fa7
  403f98:	mov    rax,QWORD PTR [rbx+0x80]
  403f9f:	mov    edx,ebp
  403fa1:	mov    rcx,rbx
  403fa4:	call   QWORD PTR [rax+0x18]
  403fa7:	test   sil,sil
  403faa:	je     0x403fbc
  403fac:	mov    rax,QWORD PTR [rbx+0x80]
  403fb3:	mov    edx,r15d
  403fb6:	mov    rcx,rbx
  403fb9:	call   QWORD PTR [rax+0x18]
  403fbc:	test   r14d,r14d
  403fbf:	je     0x403ed0
  403fc5:	mov    rcx,QWORD PTR [rsp+0xe8]
  403fcd:	call   0x407578
  403fd2:	jmp    0x403ed0
  403fd7:	nop    WORD PTR [rax+rax*1+0x0]
  403fe0:	mov    rax,QWORD PTR [rbx+0x80]
  403fe7:	mov    r8d,esi
  403fea:	mov    rdx,QWORD PTR [rbx+0x20]
  403fee:	shr    r8d,0x4
  403ff2:	mov    rcx,rbx
  403ff5:	and    r8d,0x1
  403ff9:	call   QWORD PTR [rax]
  403ffb:	test   eax,eax
  403ffd:	mov    edi,eax
  403fff:	js     0x404310
  404005:	mov    eax,DWORD PTR [rbx+0x28]
  404008:	test   eax,eax
  40400a:	jne    0x404260
  404010:	test   sil,0x1
  404014:	mov    QWORD PTR [rbx+0x20],0x0
  40401c:	jne    0x403f05
  404022:	test   BYTE PTR [rbx],0x2
  404025:	jne    0x404154
  40402b:	mov    r8,QWORD PTR [rsp+0xe8]
  404033:	lea    rcx,[rbx+0x10]
  404037:	mov    edx,esi
  404039:	call   0x403d00
  40403e:	test   rax,rax
  404041:	mov    r15,rax
  404044:	je     0x404333
  40404a:	cmp    rax,QWORD PTR [rsp+0xe8]
  404052:	je     0x404394
  404058:	test   BYTE PTR [rbx],0x4
  40405b:	mov    eax,0x1
  404060:	je     0x40418c
  404066:	mov    QWORD PTR [rbx+0x20],r15
  40406a:	mov    DWORD PTR [rbx+0x28],eax
  40406d:	xor    r14d,r14d
  404070:	mov    rax,QWORD PTR [rbx+0x80]
  404077:	mov    r9d,esi
  40407a:	mov    r8d,esi
  40407d:	shr    r9d,0x8
  404081:	shr    r8d,0x5
  404085:	mov    rdx,r15
  404088:	and    r9d,0x1
  40408c:	and    r8d,0x1
  404090:	mov    rcx,rbx
  404093:	call   QWORD PTR [rax+0x8]
  404096:	test   eax,eax
  404098:	mov    ebp,eax
  40409a:	mov    QWORD PTR [rsp+0xe8],r15
  4040a2:	jns    0x403f35
  4040a8:	call   QWORD PTR [rip+0xd42e]        # 0x4114dc
  4040ae:	mov    rsi,QWORD PTR [rsp+0xf8]
  4040b6:	mov    eax,DWORD PTR [rax]
  4040b8:	test   edi,edi
  4040ba:	mov    DWORD PTR [rsi],eax
  4040bc:	lea    rax,[rip+0x87ca]        # 0x40c88d
  4040c3:	mov    QWORD PTR [rsp+0x68],rax
  4040c8:	je     0x403fbc
  4040ce:	xor    esi,esi
  4040d0:	mov    r15d,0xffffffff
  4040d6:	jmp    0x403f80
  4040db:	nop    DWORD PTR [rax+rax*1+0x0]
  4040e0:	mov    rax,QWORD PTR [rsp+0xf8]
  4040e8:	mov    DWORD PTR [rax],0x0
  4040ee:	lea    rax,[rip+0x8752]        # 0x40c847
  4040f5:	mov    QWORD PTR [rsp+0x68],rax
  4040fa:	jmp    0x403ed0
  4040ff:	nop
  404100:	lea    rax,[rip+0x8710]        # 0x40c817
  404107:	mov    QWORD PTR [rsp+0x68],rax
  40410c:	jmp    0x403ed0
  404111:	cmp    DWORD PTR [rbx+0x2c],0xffffffff
  404115:	je     0x4042a0
  40411b:	mov    rax,QWORD PTR [rsp+0xf8]
  404123:	xor    esi,esi
  404125:	mov    r15d,0xffffffff
  40412b:	mov    DWORD PTR [rax],0x0
  404131:	lea    rax,[rip+0x87a0]        # 0x40c8d8
  404138:	mov    QWORD PTR [rsp+0x68],rax
  40413d:	jmp    0x403f79
  404142:	mov    rcx,QWORD PTR [rsp+0xe8]
  40414a:	call   0x407578
  40414f:	jmp    0x403f3e
  404154:	mov    rax,QWORD PTR [rbx+0x80]
  40415b:	mov    r8d,esi
  40415e:	lea    rdx,[rsp+0x60]
  404163:	shr    r8d,0x5
  404167:	mov    rcx,rbx
  40416a:	and    r8d,0x1
  40416e:	call   QWORD PTR [rax+0x28]
  404171:	test   eax,eax
  404173:	js     0x404374
  404179:	mov    eax,DWORD PTR [rsp+0x60]
  40417d:	mov    ebp,DWORD PTR [rsp+0x64]
  404181:	xor    r14d,r14d
  404184:	mov    DWORD PTR [rbx+0x18],eax
  404187:	jmp    0x403f2d
  40418c:	mov    eax,DWORD PTR [rbx+0x70]
  40418f:	mov    rcx,QWORD PTR [rbx+0x78]
  404193:	add    eax,0x1
  404196:	mov    DWORD PTR [rbx+0x70],eax
  404199:	cdqe   
  40419b:	lea    rdx,[rax*8+0x0]
  4041a3:	call   0x405830
  4041a8:	mov    QWORD PTR [rbx+0x78],rax
  4041ac:	mov    rax,r15
  4041af:	movsxd rcx,DWORD PTR [rbx+0x70]
  4041b3:	mov    rdx,QWORD PTR [rbx+0x78]
  4041b7:	mov    QWORD PTR [rdx+rcx*8-0x8],rax
  4041bc:	xor    eax,eax
  4041be:	jmp    0x404066
  4041c3:	cmp    DWORD PTR [rbx+0x2c],0xffffffff
  4041c7:	jne    0x40411b
  4041cd:	test   sil,0x40
  4041d1:	mov    r15d,0x2
  4041d7:	jne    0x404400
  4041dd:	test   BYTE PTR [rbx],0x2
  4041e0:	mov    eax,0xffffffff
  4041e5:	je     0x4041ea
  4041e7:	mov    eax,DWORD PTR [rbx+0x18]
  4041ea:	mov    rdx,QWORD PTR [rsp+0xf8]
  4041f2:	mov    DWORD PTR [rsp+0x40],eax
  4041f6:	mov    r9,r13
  4041f9:	mov    rax,QWORD PTR [rsp+0xe0]
  404201:	mov    r10,QWORD PTR [rbx+0x80]
  404208:	mov    r8,r12
  40420b:	mov    DWORD PTR [rsp+0x38],r15d
  404210:	mov    DWORD PTR [rsp+0x30],ebp
  404214:	mov    rcx,rbx
  404217:	mov    QWORD PTR [rsp+0x50],rdx
  40421c:	lea    rdx,[rsp+0x68]
  404221:	mov    DWORD PTR [rsp+0x28],edi
  404225:	mov    QWORD PTR [rsp+0x20],rax
  40422a:	mov    QWORD PTR [rsp+0x48],rdx
  40422f:	mov    edx,esi
  404231:	call   QWORD PTR [r10+0x10]
  404235:	test   rax,rax
  404238:	mov    rsi,rax
  40423b:	jns    0x4043d0
  404241:	mov    esi,r15d
  404244:	cmp    r15d,0x2
  404248:	not    esi
  40424a:	setne  al
  40424d:	shr    esi,0x1f
  404250:	and    esi,eax
  404252:	jmp    0x403f79
  404257:	nop    WORD PTR [rax+rax*1+0x0]
  404260:	mov    rcx,QWORD PTR [rbx+0x20]
  404264:	call   0x407578
  404269:	mov    DWORD PTR [rbx+0x28],0x0
  404270:	jmp    0x404010
  404275:	mov    rcx,QWORD PTR [rbx+0x10]
  404279:	mov    rdx,QWORD PTR [rsp+0xe8]
  404281:	xor    r8d,r8d
  404284:	mov    r14b,0x1
  404287:	call   0x405c30
  40428c:	mov    QWORD PTR [rsp+0xe8],rax
  404294:	jmp    0x403f26
  404299:	nop    DWORD PTR [rax+0x0]
  4042a0:	mov    rax,QWORD PTR [rbx+0x80]
  4042a7:	mov    r9d,esi
  4042aa:	mov    r8d,esi
  4042ad:	shr    r9d,0x9
  4042b1:	shr    r8d,0x7
  4042b5:	mov    rdx,QWORD PTR [rsp+0xf0]
  4042bd:	and    r9d,0x1
  4042c1:	and    r8d,0x1
  4042c5:	mov    rcx,rbx
  4042c8:	call   QWORD PTR [rax+0x8]
  4042cb:	test   eax,eax
  4042cd:	mov    r15d,eax
  4042d0:	jns    0x4041dd
  4042d6:	call   QWORD PTR [rip+0xd200]        # 0x4114dc
  4042dc:	mov    rsi,QWORD PTR [rsp+0xf8]
  4042e4:	mov    eax,DWORD PTR [rax]
  4042e6:	mov    DWORD PTR [rsi],eax
  4042e8:	lea    rax,[rip+0x861b]        # 0x40c90a
  4042ef:	xor    esi,esi
  4042f1:	mov    QWORD PTR [rsp+0x68],rax
  4042f6:	jmp    0x403f79
  4042fb:	nop    DWORD PTR [rax+rax*1+0x0]
  404300:	mov    ebp,0x1
  404305:	jmp    0x403f26
  40430a:	nop    WORD PTR [rax+rax*1+0x0]
  404310:	call   QWORD PTR [rip+0xd1c6]        # 0x4114dc
  404316:	mov    rdi,QWORD PTR [rsp+0xf8]
  40431e:	mov    eax,DWORD PTR [rax]
  404320:	mov    DWORD PTR [rdi],eax
  404322:	lea    rax,[rip+0x850a]        # 0x40c833
  404329:	mov    QWORD PTR [rsp+0x68],rax
  40432e:	jmp    0x403ed0
  404333:	mov    rax,QWORD PTR [rsp+0xf8]
  40433b:	mov    QWORD PTR [rsp+0xe8],0x0
  404347:	mov    DWORD PTR [rax],0x0
  40434d:	lea    rax,[rip+0x8514]        # 0x40c868
  404354:	mov    QWORD PTR [rsp+0x68],rax
  404359:	test   edi,edi
  40435b:	je     0x403ed0
  404361:	mov    r15d,0xffffffff
  404367:	xor    esi,esi
  404369:	xor    r14d,r14d
  40436c:	mov    ebp,r15d
  40436f:	jmp    0x403f80
  404374:	call   QWORD PTR [rip+0xd162]        # 0x4114dc
  40437a:	mov    rsi,QWORD PTR [rsp+0xf8]
  404382:	mov    eax,DWORD PTR [rax]
  404384:	mov    DWORD PTR [rsi],eax
  404386:	lea    rax,[rip+0x84fb]        # 0x40c888
  40438d:	mov    QWORD PTR [rsp+0x68],rax
  404392:	jmp    0x404359
  404394:	test   BYTE PTR [rbx],0x4
  404397:	jne    0x4041bc
  40439d:	mov    eax,DWORD PTR [rbx+0x70]
  4043a0:	mov    rcx,QWORD PTR [rbx+0x78]
  4043a4:	add    eax,0x1
  4043a7:	mov    DWORD PTR [rbx+0x70],eax
  4043aa:	cdqe   
  4043ac:	lea    rdx,[rax*8+0x0]
  4043b4:	call   0x405830
  4043b9:	mov    rcx,QWORD PTR [rsp+0xe8]
  4043c1:	mov    QWORD PTR [rbx+0x78],rax
  4043c5:	call   0x405880
  4043ca:	jmp    0x4041af
  4043cf:	nop
  4043d0:	mov    eax,DWORD PTR [rbx+0x30]
  4043d3:	mov    rcx,QWORD PTR [rbx+0x38]
  4043d7:	add    eax,0x1
  4043da:	mov    DWORD PTR [rbx+0x30],eax
  4043dd:	cdqe   
  4043df:	lea    rdx,[rax*8+0x0]
  4043e7:	call   0x405830
  4043ec:	movsxd rdx,DWORD PTR [rbx+0x30]
  4043f0:	mov    QWORD PTR [rbx+0x38],rax
  4043f4:	mov    QWORD PTR [rax+rdx*8-0x8],rsi
  4043f9:	xor    eax,eax
  4043fb:	jmp    0x403ed5
  404400:	mov    rax,QWORD PTR [rbx+0x80]
  404407:	mov    r8d,esi
  40440a:	lea    rdx,[rsp+0x60]
  40440f:	shr    r8d,0x7
  404413:	mov    rcx,rbx
  404416:	and    r8d,0x1
  40441a:	call   QWORD PTR [rax+0x28]
  40441d:	test   eax,eax
  40441f:	js     0x404432
  404421:	mov    eax,DWORD PTR [rsp+0x60]
  404425:	mov    r15d,DWORD PTR [rsp+0x64]
  40442a:	mov    DWORD PTR [rbx+0x2c],eax
  40442d:	jmp    0x4041dd
  404432:	call   QWORD PTR [rip+0xd0a4]        # 0x4114dc
  404438:	mov    rsi,QWORD PTR [rsp+0xf8]
  404440:	mov    eax,DWORD PTR [rax]
  404442:	or     r15d,0xffffffff
  404446:	mov    DWORD PTR [rsi],eax
  404448:	lea    rax,[rip+0x8439]        # 0x40c888
  40444f:	xor    esi,esi
  404451:	mov    QWORD PTR [rsp+0x68],rax
  404456:	jmp    0x403f79
  40445b:	mov    r15,QWORD PTR [rsp+0xe8]
  404463:	jmp    0x404070
  404468:	nop    DWORD PTR [rax+rax*1+0x0]
  404470:	sub    rsp,0x48
  404474:	mov    rax,QWORD PTR [rsp+0x80]
  40447c:	mov    QWORD PTR [rsp+0x20],0x0
  404485:	mov    QWORD PTR [rsp+0x38],rax
  40448a:	mov    rax,QWORD PTR [rsp+0x78]
  40448f:	mov    QWORD PTR [rsp+0x30],rax
  404494:	mov    rax,QWORD PTR [rsp+0x70]
  404499:	mov    QWORD PTR [rsp+0x28],rax
  40449e:	call   0x403e70
  4044a3:	add    rsp,0x48
  4044a7:	ret    
  4044a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4044b0:	push   rbp
  4044b1:	push   rdi
  4044b2:	push   rsi
  4044b3:	push   rbx
  4044b4:	sub    rsp,0x28
  4044b8:	mov    esi,edx
  4044ba:	mov    edx,DWORD PTR [rcx+0x30]
  4044bd:	mov    rbx,rcx
  4044c0:	mov    rdi,r8
  4044c3:	test   edx,edx
  4044c5:	jne    0x4044d5
  4044c7:	mov    eax,DWORD PTR [rcx+0x18]
  4044ca:	test   eax,eax
  4044cc:	jg     0x4044d5
  4044ce:	cmp    QWORD PTR [rcx+0x20],0x0
  4044d3:	je     0x4044f0
  4044d5:	call   QWORD PTR [rip+0xd001]        # 0x4114dc
  4044db:	mov    DWORD PTR [rax],0x16
  4044e1:	xor    eax,eax
  4044e3:	add    rsp,0x28
  4044e7:	pop    rbx
  4044e8:	pop    rsi
  4044e9:	pop    rdi
  4044ea:	pop    rbp
  4044eb:	ret    
  4044ec:	nop    DWORD PTR [rax+0x0]
  4044f0:	lea    rcx,[rcx+0x10]
  4044f4:	mov    edx,esi
  4044f6:	call   0x403d00
  4044fb:	test   rax,rax
  4044fe:	mov    rbp,rax
  404501:	je     0x404547
  404503:	lea    rax,[rip+0x8410]        # 0x40c91a
  40450a:	lea    rdx,[rip+0x840c]        # 0x40c91d
  404511:	and    esi,0x20
  404514:	mov    rcx,rbp
  404517:	cmovne rdx,rax
  40451b:	call   0x407598
  404520:	test   rax,rax
  404523:	mov    rdx,rax
  404526:	je     0x40454b
  404528:	mov    QWORD PTR [rbx+0x58],rax
  40452c:	xor    eax,eax
  40452e:	cmp    rbp,rdi
  404531:	setne  al
  404534:	mov    QWORD PTR [rbx+0x20],rbp
  404538:	mov    DWORD PTR [rbx+0x28],eax
  40453b:	mov    rax,rdx
  40453e:	add    rsp,0x28
  404542:	pop    rbx
  404543:	pop    rsi
  404544:	pop    rdi
  404545:	pop    rbp
  404546:	ret    
  404547:	xor    eax,eax
  404549:	jmp    0x4044e3
  40454b:	mov    rcx,rbp
  40454e:	call   0x407578
  404553:	xor    eax,eax
  404555:	jmp    0x4044e3
  404557:	nop    WORD PTR [rax+rax*1+0x0]
  404560:	push   rdi
  404561:	push   rsi
  404562:	push   rbx
  404563:	sub    rsp,0x30
  404567:	mov    rbx,rcx
  40456a:	mov    ecx,DWORD PTR [rcx+0x30]
  40456d:	test   ecx,ecx
  40456f:	jg     0x404584
  404571:	test   BYTE PTR [rbx],0x2
  404574:	je     0x404584
  404576:	mov    eax,DWORD PTR [rbx+0x18]
  404579:	test   eax,eax
  40457b:	jg     0x404584
  40457d:	cmp    QWORD PTR [rbx+0x20],0x0
  404582:	je     0x4045a0
  404584:	call   QWORD PTR [rip+0xcf52]        # 0x4114dc
  40458a:	mov    DWORD PTR [rax],0x16
  404590:	xor    eax,eax
  404592:	add    rsp,0x30
  404596:	pop    rbx
  404597:	pop    rsi
  404598:	pop    rdi
  404599:	ret    
  40459a:	nop    WORD PTR [rax+rax*1+0x0]
  4045a0:	mov    rax,QWORD PTR [rbx+0x80]
  4045a7:	xor    esi,esi
  4045a9:	test   edx,edx
  4045ab:	setne  sil
  4045af:	lea    rdx,[rsp+0x20]
  4045b4:	mov    rcx,rbx
  4045b7:	mov    r8d,esi
  4045ba:	call   QWORD PTR [rax+0x28]
  4045bd:	test   eax,eax
  4045bf:	js     0x4045f0
  4045c1:	mov    rax,QWORD PTR [rbx+0x80]
  4045c8:	mov    r8d,esi
  4045cb:	mov    edx,DWORD PTR [rsp+0x24]
  4045cf:	mov    rcx,rbx
  4045d2:	call   QWORD PTR [rax+0x38]
  4045d5:	test   rax,rax
  4045d8:	je     0x4045f4
  4045da:	mov    edx,DWORD PTR [rsp+0x20]
  4045de:	mov    DWORD PTR [rbx+0x18],edx
  4045e1:	add    rsp,0x30
  4045e5:	pop    rbx
  4045e6:	pop    rsi
  4045e7:	pop    rdi
  4045e8:	ret    
  4045e9:	nop    DWORD PTR [rax+0x0]
  4045f0:	xor    eax,eax
  4045f2:	jmp    0x404592
  4045f4:	mov    rsi,QWORD PTR [rip+0xcee1]        # 0x4114dc
  4045fb:	call   rsi
  4045fd:	mov    edi,DWORD PTR [rax]
  4045ff:	mov    rax,QWORD PTR [rbx+0x80]
  404606:	mov    rcx,rbx
  404609:	mov    edx,DWORD PTR [rsp+0x20]
  40460d:	call   QWORD PTR [rax+0x18]
  404610:	mov    rax,QWORD PTR [rbx+0x80]
  404617:	mov    edx,DWORD PTR [rsp+0x24]
  40461b:	mov    rcx,rbx
  40461e:	call   QWORD PTR [rax+0x18]
  404621:	call   rsi
  404623:	mov    DWORD PTR [rax],edi
  404625:	xor    eax,eax
  404627:	jmp    0x404592
  40462c:	nop    DWORD PTR [rax+0x0]
  404630:	push   rsi
  404631:	push   rbx
  404632:	sub    rsp,0x38
  404636:	cmp    QWORD PTR [rcx+0x20],0x0
  40463b:	mov    rbx,rcx
  40463e:	mov    esi,edx
  404640:	je     0x404692
  404642:	lea    r9,[rsp+0x24]
  404647:	lea    r8,[rsp+0x28]
  40464c:	xor    edx,edx
  40464e:	call   0x403bf0
  404653:	test   eax,eax
  404655:	je     0x4046e0
  40465b:	lea    rax,[rip+0x82bd]        # 0x40c91f
  404662:	lea    rdx,[rip+0x82b9]        # 0x40c922
  404669:	mov    rcx,QWORD PTR [rbx+0x20]
  40466d:	test   esi,esi
  40466f:	cmovne rdx,rax
  404673:	call   0x407598
  404678:	mov    edx,DWORD PTR [rbx+0x28]
  40467b:	mov    QWORD PTR [rbx+0x60],rax
  40467f:	test   edx,edx
  404681:	jne    0x4046c0
  404683:	mov    QWORD PTR [rbx+0x20],0x0
  40468b:	add    rsp,0x38
  40468f:	pop    rbx
  404690:	pop    rsi
  404691:	ret    
  404692:	mov    edx,DWORD PTR [rcx+0x18]
  404695:	test   edx,edx
  404697:	jle    0x4046f0
  404699:	mov    rax,QWORD PTR [rcx+0x80]
  4046a0:	mov    r8d,esi
  4046a3:	call   QWORD PTR [rax+0x30]
  4046a6:	mov    QWORD PTR [rbx+0x60],rax
  4046aa:	mov    DWORD PTR [rbx+0x18],0xffffffff
  4046b1:	add    rsp,0x38
  4046b5:	pop    rbx
  4046b6:	pop    rsi
  4046b7:	ret    
  4046b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4046c0:	mov    rcx,QWORD PTR [rbx+0x20]
  4046c4:	call   0x407578
  4046c9:	mov    DWORD PTR [rbx+0x28],0x0
  4046d0:	mov    rax,QWORD PTR [rbx+0x60]
  4046d4:	jmp    0x404683
  4046d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4046e0:	call   QWORD PTR [rip+0xcdf6]        # 0x4114dc
  4046e6:	mov    edx,DWORD PTR [rsp+0x24]
  4046ea:	mov    DWORD PTR [rax],edx
  4046ec:	xor    eax,eax
  4046ee:	jmp    0x40468b
  4046f0:	xor    eax,eax
  4046f2:	jmp    0x40468b
  4046f4:	xchg   ax,ax
  4046f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404700:	push   rbx
  404701:	sub    rsp,0x20
  404705:	mov    r8d,edx
  404708:	mov    edx,DWORD PTR [rcx+0x2c]
  40470b:	test   edx,edx
  40470d:	jle    0x404730
  40470f:	mov    rax,QWORD PTR [rcx+0x80]
  404716:	mov    rbx,rcx
  404719:	call   QWORD PTR [rax+0x30]
  40471c:	mov    DWORD PTR [rbx+0x2c],0xffffffff
  404723:	mov    QWORD PTR [rbx+0x68],rax
  404727:	add    rsp,0x20
  40472b:	pop    rbx
  40472c:	ret    
  40472d:	nop    DWORD PTR [rax]
  404730:	xor    eax,eax
  404732:	jmp    0x404727
  404734:	xchg   ax,ax
  404736:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404740:	push   rdi
  404741:	push   rsi
  404742:	push   rbx
  404743:	sub    rsp,0x30
  404747:	cmp    QWORD PTR [rcx+0x40],0x0
  40474c:	mov    rsi,rcx
  40474f:	mov    ebx,edx
  404751:	mov    rdi,r8
  404754:	je     0x4047a0
  404756:	movsxd rax,DWORD PTR [rsi+0x30]
  40475a:	cmp    eax,ebx
  40475c:	jl     0x404780
  40475e:	mov    rdx,QWORD PTR [rsi+0x40]
  404762:	movsxd r8,ebx
  404765:	mov    rcx,rdi
  404768:	shl    r8,0x2
  40476c:	call   0x407548
  404771:	mov    eax,0x1
  404776:	add    rsp,0x30
  40477a:	pop    rbx
  40477b:	pop    rsi
  40477c:	pop    rdi
  40477d:	ret    
  40477e:	xchg   ax,ax
  404780:	sub    ebx,eax
  404782:	lea    rcx,[rdi+rax*4]
  404786:	xor    edx,edx
  404788:	movsxd r8,ebx
  40478b:	shl    r8,0x2
  40478f:	call   0x407538
  404794:	mov    ebx,DWORD PTR [rsi+0x30]
  404797:	jmp    0x40475e
  404799:	nop    DWORD PTR [rax+0x0]
  4047a0:	lea    r9,[rsp+0x24]
  4047a5:	lea    r8,[rsp+0x28]
  4047aa:	xor    edx,edx
  4047ac:	call   0x403bf0
  4047b1:	test   eax,eax
  4047b3:	jne    0x404756
  4047b5:	jmp    0x404776
  4047b7:	nop    WORD PTR [rax+rax*1+0x0]
  4047c0:	push   rdi
  4047c1:	push   rsi
  4047c2:	push   rbx
  4047c3:	sub    rsp,0x30
  4047c7:	cmp    QWORD PTR [rcx+0x40],0x0
  4047cc:	mov    rsi,rcx
  4047cf:	mov    ebx,edx
  4047d1:	mov    rdi,r8
  4047d4:	je     0x404830
  4047d6:	mov    rdx,QWORD PTR [rsi+0x48]
  4047da:	test   rdx,rdx
  4047dd:	je     0x404824
  4047df:	movsxd rax,DWORD PTR [rsi+0x30]
  4047e3:	cmp    eax,ebx
  4047e5:	jl     0x404803
  4047e7:	movsxd r8,ebx
  4047ea:	mov    rcx,rdi
  4047ed:	shl    r8,0x4
  4047f1:	call   0x407548
  4047f6:	mov    eax,0x1
  4047fb:	add    rsp,0x30
  4047ff:	pop    rbx
  404800:	pop    rsi
  404801:	pop    rdi
  404802:	ret    
  404803:	sub    ebx,eax
  404805:	shl    rax,0x4
  404809:	xor    edx,edx
  40480b:	movsxd r8,ebx
  40480e:	lea    rcx,[rdi+rax*1]
  404812:	shl    r8,0x4
  404816:	call   0x407538
  40481b:	mov    ebx,DWORD PTR [rsi+0x30]
  40481e:	mov    rdx,QWORD PTR [rsi+0x48]
  404822:	jmp    0x4047e7
  404824:	xor    eax,eax
  404826:	jmp    0x4047fb
  404828:	nop    DWORD PTR [rax+rax*1+0x0]
  404830:	lea    r9,[rsp+0x24]
  404835:	lea    r8,[rsp+0x28]
  40483a:	xor    edx,edx
  40483c:	call   0x403bf0
  404841:	test   eax,eax
  404843:	jne    0x4047d6
  404845:	jmp    0x4047fb
  404847:	nop    WORD PTR [rax+rax*1+0x0]
  404850:	push   rdi
  404851:	push   rsi
  404852:	push   rbx
  404853:	sub    rsp,0x30
  404857:	mov    edx,DWORD PTR [rcx+0x18]
  40485a:	mov    rbx,rcx
  40485d:	test   edx,edx
  40485f:	jle    0x40486b
  404861:	mov    rax,QWORD PTR [rcx+0x80]
  404868:	call   QWORD PTR [rax+0x18]
  40486b:	mov    edx,DWORD PTR [rbx+0x2c]
  40486e:	test   edx,edx
  404870:	jle    0x40487f
  404872:	mov    rax,QWORD PTR [rbx+0x80]
  404879:	mov    rcx,rbx
  40487c:	call   QWORD PTR [rax+0x18]
  40487f:	mov    rcx,QWORD PTR [rbx+0x60]
  404883:	test   rcx,rcx
  404886:	je     0x40488d
  404888:	call   0x4075a8
  40488d:	mov    rcx,QWORD PTR [rbx+0x68]
  404891:	test   rcx,rcx
  404894:	je     0x40489b
  404896:	call   0x4075a8
  40489b:	cmp    QWORD PTR [rbx+0x40],0x0
  4048a0:	je     0x404941
  4048a6:	mov    edx,DWORD PTR [rbx+0x28]
  4048a9:	test   edx,edx
  4048ab:	jne    0x404933
  4048b1:	mov    rcx,QWORD PTR [rbx+0x38]
  4048b5:	xor    esi,esi
  4048b7:	xor    edi,edi
  4048b9:	call   0x407578
  4048be:	mov    rcx,QWORD PTR [rbx+0x40]
  4048c2:	call   0x407578
  4048c7:	mov    rcx,QWORD PTR [rbx+0x48]
  4048cb:	call   0x407578
  4048d0:	mov    eax,DWORD PTR [rbx+0x70]
  4048d3:	test   eax,eax
  4048d5:	jle    0x40490f
  4048d7:	nop    WORD PTR [rax+rax*1+0x0]
  4048e0:	mov    rax,QWORD PTR [rbx+0x78]
  4048e4:	add    edi,0x1
  4048e7:	mov    rcx,QWORD PTR [rax+rsi*1]
  4048eb:	call   0x407510
  4048f0:	mov    rax,QWORD PTR [rbx+0x78]
  4048f4:	mov    rcx,QWORD PTR [rax+rsi*1]
  4048f8:	add    rsi,0x8
  4048fc:	call   0x407578
  404901:	cmp    DWORD PTR [rbx+0x70],edi
  404904:	jg     0x4048e0
  404906:	mov    rcx,QWORD PTR [rbx+0x78]
  40490a:	call   0x407578
  40490f:	mov    rax,QWORD PTR [rbx+0x80]
  404916:	mov    rax,QWORD PTR [rax+0x40]
  40491a:	test   rax,rax
  40491d:	je     0x404924
  40491f:	mov    rcx,rbx
  404922:	call   rax
  404924:	mov    rcx,rbx
  404927:	add    rsp,0x30
  40492b:	pop    rbx
  40492c:	pop    rsi
  40492d:	pop    rdi
  40492e:	jmp    0x407578
  404933:	mov    rcx,QWORD PTR [rbx+0x20]
  404937:	call   0x407578
  40493c:	jmp    0x4048b1
  404941:	and    DWORD PTR [rbx],0xfffffffe
  404944:	lea    r9,[rsp+0x24]
  404949:	lea    r8,[rsp+0x28]
  40494e:	mov    edx,0x1
  404953:	mov    rcx,rbx
  404956:	call   0x403bf0
  40495b:	jmp    0x4048a6
  404960:	push   rsi
  404961:	push   rbx
  404962:	sub    rsp,0x28
  404966:	mov    ebx,edx
  404968:	mov    esi,r8d
  40496b:	mov    ecx,edx
  40496d:	call   QWORD PTR [rip+0xcb79]        # 0x4114ec
  404973:	cmp    rax,0xffffffffffffffff
  404977:	je     0x4049b0
  404979:	xor    r8d,r8d
  40497c:	mov    edx,0x1
  404981:	mov    rcx,rax
  404984:	call   QWORD PTR [rip+0xca9a]        # 0x411424
  40498a:	test   eax,eax
  40498c:	je     0x4049b0
  40498e:	lea    rax,[rip+0x7fab]        # 0x40c940
  404995:	lea    rdx,[rip+0x7fa7]        # 0x40c943
  40499c:	test   esi,esi
  40499e:	mov    ecx,ebx
  4049a0:	cmovne rdx,rax
  4049a4:	add    rsp,0x28
  4049a8:	pop    rbx
  4049a9:	pop    rsi
  4049aa:	jmp    0x407468
  4049af:	nop
  4049b0:	xor    eax,eax
  4049b2:	add    rsp,0x28
  4049b6:	pop    rbx
  4049b7:	pop    rsi
  4049b8:	ret    
  4049b9:	nop    DWORD PTR [rax+0x0]
  4049c0:	push   rsi
  4049c1:	push   rbx
  4049c2:	sub    rsp,0x28
  4049c6:	mov    ebx,edx
  4049c8:	mov    esi,r8d
  4049cb:	mov    ecx,edx
  4049cd:	call   QWORD PTR [rip+0xcb19]        # 0x4114ec
  4049d3:	cmp    rax,0xffffffffffffffff
  4049d7:	je     0x404a10
  4049d9:	xor    r8d,r8d
  4049dc:	mov    edx,0x1
  4049e1:	mov    rcx,rax
  4049e4:	call   QWORD PTR [rip+0xca3a]        # 0x411424
  4049ea:	test   eax,eax
  4049ec:	je     0x404a10
  4049ee:	lea    rax,[rip+0x7f50]        # 0x40c945
  4049f5:	lea    rdx,[rip+0x7f4c]        # 0x40c948
  4049fc:	test   esi,esi
  4049fe:	mov    ecx,ebx
  404a00:	cmovne rdx,rax
  404a04:	add    rsp,0x28
  404a08:	pop    rbx
  404a09:	pop    rsi
  404a0a:	jmp    0x407468
  404a0f:	nop
  404a10:	xor    eax,eax
  404a12:	add    rsp,0x28
  404a16:	pop    rbx
  404a17:	pop    rsi
  404a18:	ret    
  404a19:	nop    DWORD PTR [rax+0x0]
  404a20:	mov    rax,QWORD PTR [rip+0xcaed]        # 0x411514
  404a27:	cmp    r8d,0x1
  404a2b:	mov    rcx,rdx
  404a2e:	mov    edx,0x100
  404a33:	sbb    r8d,r8d
  404a36:	and    r8d,0xffffc000
  404a3d:	add    r8d,0x8080
  404a44:	rex.W jmp rax
  404a47:	nop    WORD PTR [rax+rax*1+0x0]
  404a50:	push   rsi
  404a51:	push   rbx
  404a52:	sub    rsp,0x38
  404a56:	test   r9,r9
  404a59:	mov    rbx,rdx
  404a5c:	mov    rsi,r8
  404a5f:	je     0x404a70
  404a61:	mov    QWORD PTR [r9],0x0
  404a68:	mov    QWORD PTR [r9+0x8],0x0
  404a70:	mov    edx,0xffffffff
  404a75:	mov    rcx,rbx
  404a78:	call   QWORD PTR [rip+0xc9e6]        # 0x411464
  404a7e:	test   eax,eax
  404a80:	jne    0x404ac4
  404a82:	lea    rdx,[rsp+0x2c]
  404a87:	mov    rcx,rbx
  404a8a:	call   QWORD PTR [rip+0xc91c]        # 0x4113ac
  404a90:	mov    rcx,rbx
  404a93:	call   QWORD PTR [rip+0xc8d3]        # 0x41136c
  404a99:	mov    eax,DWORD PTR [rsp+0x2c]
  404a9d:	cmp    eax,0x3
  404aa0:	je     0x404ab5
  404aa2:	shl    eax,0x8
  404aa5:	and    eax,0xffff
  404aaa:	mov    DWORD PTR [rsi],eax
  404aac:	xor    eax,eax
  404aae:	add    rsp,0x38
  404ab2:	pop    rbx
  404ab3:	pop    rsi
  404ab4:	ret    
  404ab5:	xor    eax,eax
  404ab7:	mov    DWORD PTR [rsi],0x16
  404abd:	add    rsp,0x38
  404ac1:	pop    rbx
  404ac2:	pop    rsi
  404ac3:	ret    
  404ac4:	mov    rcx,rbx
  404ac7:	lea    rsi,[rip+0x7e7c]        # 0x40c94a
  404ace:	call   QWORD PTR [rip+0xc898]        # 0x41136c
  404ad4:	mov    rax,QWORD PTR [rsp+0x80]
  404adc:	mov    DWORD PTR [rax],0xa
  404ae2:	mov    rax,QWORD PTR [rsp+0x78]
  404ae7:	mov    QWORD PTR [rax],rsi
  404aea:	mov    rax,0xffffffffffffffff
  404af1:	jmp    0x404aae
  404af3:	nop    DWORD PTR [rax]
  404af6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404b00:	mov    rax,QWORD PTR [rip+0xc9c5]        # 0x4114cc
  404b07:	mov    ecx,edx
  404b09:	rex.W jmp rax
  404b0c:	nop    DWORD PTR [rax+0x0]
  404b10:	push   r12
  404b12:	push   rbp
  404b13:	push   rdi
  404b14:	push   rsi
  404b15:	push   rbx
  404b16:	sub    rsp,0x20
  404b1a:	mov    rbp,QWORD PTR [rip+0xcb2b]        # 0x41164c
  404b21:	mov    rdi,QWORD PTR [rcx]
  404b24:	mov    rsi,QWORD PTR [rdx]
  404b27:	nop    WORD PTR [rax+rax*1+0x0]
  404b30:	add    rdi,0x1
  404b34:	movsx  ecx,BYTE PTR [rdi-0x1]
  404b38:	add    rsi,0x1
  404b3c:	call   rbp
  404b3e:	movsx  ecx,BYTE PTR [rsi-0x1]
  404b42:	mov    ebx,eax
  404b44:	mov    r12d,eax
  404b47:	call   rbp
  404b49:	cmp    bl,0x3d
  404b4c:	movzx  edx,al
  404b4f:	je     0x404b65
  404b51:	cmp    al,0x3d
  404b53:	je     0x404b81
  404b55:	cmp    bl,al
  404b57:	sete   cl
  404b5a:	test   bl,bl
  404b5c:	setne  al
  404b5f:	test   cl,al
  404b61:	jne    0x404b30
  404b63:	jmp    0x404b6c
  404b65:	xor    r12d,r12d
  404b68:	cmp    al,0x3d
  404b6a:	je     0x404b73
  404b6c:	movzx  r12d,r12b
  404b70:	sub    r12d,edx
  404b73:	mov    eax,r12d
  404b76:	add    rsp,0x20
  404b7a:	pop    rbx
  404b7b:	pop    rsi
  404b7c:	pop    rdi
  404b7d:	pop    rbp
  404b7e:	pop    r12
  404b80:	ret    
  404b81:	xor    edx,edx
  404b83:	jmp    0x404b6c
  404b85:	nop
  404b86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404b90:	push   rbp
  404b91:	push   r15
  404b93:	push   r14
  404b95:	push   r13
  404b97:	push   r12
  404b99:	push   rdi
  404b9a:	push   rsi
  404b9b:	push   rbx
  404b9c:	sub    rsp,0x68
  404ba0:	lea    rbp,[rsp+0x80]
  404ba8:	test   r9,r9
  404bab:	mov    r12,rcx
  404bae:	mov    DWORD PTR [rbp+0x38],edx
  404bb1:	mov    rsi,r8
  404bb4:	mov    r15,r9
  404bb7:	je     0x40518c
  404bbd:	cmp    QWORD PTR [r9],0x0
  404bc1:	je     0x40518c
  404bc7:	mov    edi,0x1
  404bcc:	jmp    0x404bd3
  404bce:	xchg   ax,ax
  404bd0:	mov    rdi,rax
  404bd3:	lea    rax,[rdi+0x1]
  404bd7:	lea    r8,[rdi*8+0x0]
  404bdf:	cmp    QWORD PTR [r15+rax*8-0x8],0x0
  404be5:	jne    0x404bd0
  404be7:	lea    rax,[r8+0x1e]
  404beb:	and    rax,0xfffffffffffffff0
  404bef:	call   0x4072e0
  404bf4:	mov    r13d,0x1
  404bfa:	sub    rsp,rax
  404bfd:	mov    rdx,r15
  404c00:	lea    rbx,[rsp+0x50]
  404c05:	mov    rcx,rbx
  404c08:	call   0x407548
  404c0d:	lea    r9,[rip+0xfffffffffffffefc]        # 0x404b10
  404c14:	mov    rdx,rdi
  404c17:	mov    r8d,0x8
  404c1d:	mov    rcx,rbx
  404c20:	call   0x407520
  404c25:	lea    eax,[rdi-0x1]
  404c28:	lea    r14,[rax*8+0x8]
  404c30:	lea    rdi,[r15+r14*1]
  404c34:	mov    rcx,QWORD PTR [r15]
  404c37:	add    r15,0x8
  404c3b:	call   0x4074c8
  404c40:	cmp    r15,rdi
  404c43:	lea    r13d,[r13+rax*1+0x1]
  404c48:	jne    0x404c34
  404c4a:	movsxd rcx,r13d
  404c4d:	add    r14,rbx
  404c50:	call   0x4057b0
  404c55:	mov    QWORD PTR [rbp-0x28],rax
  404c59:	mov    rcx,rax
  404c5c:	nop    DWORD PTR [rax+0x0]
  404c60:	mov    rdx,QWORD PTR [rbx]
  404c63:	add    rbx,0x8
  404c67:	call   0x405ac0
  404c6c:	cmp    rbx,r14
  404c6f:	lea    rcx,[rax+0x1]
  404c73:	jne    0x404c60
  404c75:	mov    BYTE PTR [rcx],0x0
  404c78:	mov    rcx,r12
  404c7b:	call   0x4074c8
  404c80:	mov    edx,0x2f
  404c85:	mov    rcx,r12
  404c88:	mov    rbx,rax
  404c8b:	call   0x4074e8
  404c90:	test   rax,rax
  404c93:	je     0x405199
  404c99:	lea    r13,[rip+0x7cbe]        # 0x40c95e
  404ca0:	mov    rax,r13
  404ca3:	xor    r9d,r9d
  404ca6:	movzx  edx,BYTE PTR [rax]
  404ca9:	test   dl,dl
  404cab:	je     0x404cf1
  404cad:	nop    DWORD PTR [rax]
  404cb0:	cmp    dl,0x3b
  404cb3:	mov    r8,rax
  404cb6:	jne    0x404cc5
  404cb8:	jmp    0x404eb9
  404cbd:	nop    DWORD PTR [rax]
  404cc0:	cmp    cl,0x3b
  404cc3:	je     0x404cd1
  404cc5:	add    r8,0x1
  404cc9:	movzx  ecx,BYTE PTR [r8]
  404ccd:	test   cl,cl
  404ccf:	jne    0x404cc0
  404cd1:	mov    rdi,r8
  404cd4:	sub    rdi,rax
  404cd7:	cmp    r9,rdi
  404cda:	cmovb  r9,rdi
  404cde:	cmp    cl,0x3b
  404ce1:	je     0x404ebc
  404ce7:	mov    rax,r8
  404cea:	movzx  edx,BYTE PTR [rax]
  404ced:	test   dl,dl
  404cef:	jne    0x404cb0
  404cf1:	lea    rcx,[r9+rbx*1+0x6]
  404cf6:	call   0x4057b0
  404cfb:	mov    rbx,rax
  404cfe:	movzx  eax,BYTE PTR [r13+0x0]
  404d03:	mov    r14,QWORD PTR [rip+0xc66a]        # 0x411374
  404d0a:	test   al,al
  404d0c:	je     0x40516d
  404d12:	cmp    al,0x3b
  404d14:	mov    r15,r13
  404d17:	jne    0x404d24
  404d19:	jmp    0x40516d
  404d1e:	xchg   ax,ax
  404d20:	cmp    al,0x3b
  404d22:	je     0x404d30
  404d24:	add    r15,0x1
  404d28:	movzx  eax,BYTE PTR [r15]
  404d2c:	test   al,al
  404d2e:	jne    0x404d20
  404d30:	mov    rdi,r15
  404d33:	mov    rcx,rbx
  404d36:	mov    rdx,r13
  404d39:	sub    rdi,r13
  404d3c:	mov    r8,rdi
  404d3f:	call   0x407548
  404d44:	lea    r9,[rbx+rdi*1]
  404d48:	cmp    r15,r13
  404d4b:	mov    rcx,r9
  404d4e:	je     0x404d58
  404d50:	add    rcx,0x1
  404d54:	mov    BYTE PTR [r9],0x5c
  404d58:	mov    rdx,r12
  404d5b:	mov    r13,rbx
  404d5e:	call   0x4074d8
  404d63:	xor    eax,eax
  404d65:	cmp    BYTE PTR [r15],0x3b
  404d69:	sete   al
  404d6c:	add    r15,rax
  404d6f:	movzx  eax,BYTE PTR [rbx]
  404d72:	test   al,al
  404d74:	jne    0x404d8d
  404d76:	jmp    0x404da3
  404d78:	nop    DWORD PTR [rax+rax*1+0x0]
  404d80:	add    r13,0x1
  404d84:	movzx  eax,BYTE PTR [r13+0x0]
  404d89:	test   al,al
  404d8b:	je     0x404da3
  404d8d:	cmp    al,0x2f
  404d8f:	jne    0x404d80
  404d91:	mov    BYTE PTR [r13+0x0],0x5c
  404d96:	add    r13,0x1
  404d9a:	movzx  eax,BYTE PTR [r13+0x0]
  404d9f:	test   al,al
  404da1:	jne    0x404d8d
  404da3:	lea    rdi,[rip+0x7bf6]        # 0x40c9a0
  404daa:	lea    rdx,[rip+0x7bae]        # 0x40c95f
  404db1:	jmp    0x404dc3
  404db3:	add    rdi,0x8
  404db7:	mov    rdx,QWORD PTR [rdi]
  404dba:	test   rdx,rdx
  404dbd:	je     0x405154
  404dc3:	mov    rcx,rbx
  404dc6:	mov    BYTE PTR [r13+0x0],0x0
  404dcb:	call   0x4074f0
  404dd0:	xor    r9d,r9d
  404dd3:	mov    QWORD PTR [rsp+0x30],0x0
  404ddc:	mov    DWORD PTR [rsp+0x28],0x80
  404de4:	mov    DWORD PTR [rsp+0x20],0x3
  404dec:	mov    r8d,0x3
  404df2:	mov    edx,0x80000000
  404df7:	mov    rcx,rbx
  404dfa:	call   r14
  404dfd:	cmp    rax,0xffffffffffffffff
  404e01:	je     0x404db3
  404e03:	mov    rcx,rax
  404e06:	mov    r12,QWORD PTR [rip+0xc55f]        # 0x41136c
  404e0d:	call   r12
  404e10:	mov    r13,QWORD PTR [rsi]
  404e13:	test   r13,r13
  404e16:	je     0x4051e0
  404e1c:	lea    r15,[rsi+0x8]
  404e20:	xor    r9d,r9d
  404e23:	movzx  edx,BYTE PTR [r13+0x0]
  404e28:	test   dl,dl
  404e2a:	je     0x405178
  404e30:	lea    rax,[r13-0x1]
  404e34:	mov    r10d,0xffffffff
  404e3a:	xor    r8d,r8d
  404e3d:	xor    r14d,r14d
  404e40:	jmp    0x404e5d
  404e42:	movzx  edx,BYTE PTR [rax+0x2]
  404e46:	lea    rcx,[r8+0x1]
  404e4a:	add    r10d,0x1
  404e4e:	add    rax,0x1
  404e52:	mov    r8,rcx
  404e55:	test   dl,dl
  404e57:	je     0x404ee0
  404e5d:	mov    ecx,edx
  404e5f:	mov    r11d,r8d
  404e62:	and    ecx,0xfffffffd
  404e65:	cmp    cl,0x20
  404e68:	je     0x404ec5
  404e6a:	cmp    dl,0x9
  404e6d:	je     0x404ec5
  404e6f:	cmp    dl,0x22
  404e72:	jne    0x404e42
  404e74:	cmp    r10d,0xffffffff
  404e78:	je     0x405148
  404e7e:	cmp    BYTE PTR [rax],0x5c
  404e81:	jne    0x405148
  404e87:	lea    rdx,[r9+0x1]
  404e8b:	mov    r9d,r10d
  404e8e:	lea    rcx,[rdx+r9*1]
  404e92:	mov    r9,rax
  404e95:	jmp    0x404eae
  404e97:	nop    WORD PTR [rax+rax*1+0x0]
  404ea0:	sub    r9,0x1
  404ea4:	cmp    BYTE PTR [r9],0x5c
  404ea8:	jne    0x404ed0
  404eaa:	add    rdx,0x1
  404eae:	cmp    rdx,rcx
  404eb1:	jne    0x404ea0
  404eb3:	lea    r9,[rcx+0x1]
  404eb7:	jmp    0x404e42
  404eb9:	mov    r8,rax
  404ebc:	add    r8,0x1
  404ec0:	jmp    0x404ce7
  404ec5:	mov    r14d,0x1
  404ecb:	jmp    0x404e6f
  404ecd:	nop    DWORD PTR [rax]
  404ed0:	mov    rcx,rdx
  404ed3:	lea    r9,[rcx+0x1]
  404ed7:	jmp    0x404e42
  404edc:	nop    DWORD PTR [rax+0x0]
  404ee0:	test   r14d,r14d
  404ee3:	mov    eax,0x1
  404ee8:	je     0x404f1f
  404eea:	movsxd rax,r11d
  404eed:	cmp    BYTE PTR [r13+rax*1+0x0],0x5c
  404ef3:	jne    0x404f1a
  404ef5:	lea    rdx,[r9+0x1]
  404ef9:	lea    r8,[r13+rax*1-0x1]
  404efe:	add    rax,rdx
  404f01:	jmp    0x404f12
  404f03:	sub    r8,0x1
  404f07:	cmp    BYTE PTR [r8+0x1],0x5c
  404f0c:	jne    0x404f1a
  404f0e:	add    rdx,0x1
  404f12:	cmp    rdx,rax
  404f15:	mov    r9,rdx
  404f18:	jne    0x404f03
  404f1a:	mov    eax,0x3
  404f1f:	add    r15,0x8
  404f23:	mov    r13,QWORD PTR [r15-0x8]
  404f27:	add    r9,rcx
  404f2a:	add    r9,rax
  404f2d:	test   r13,r13
  404f30:	jne    0x404e23
  404f36:	mov    rcx,r9
  404f39:	call   0x4057b0
  404f3e:	mov    r13,QWORD PTR [rsi]
  404f41:	test   r13,r13
  404f44:	je     0x4051f7
  404f4a:	add    rsi,0x8
  404f4e:	mov    r10,rax
  404f51:	movzx  edx,BYTE PTR [r13+0x0]
  404f56:	test   dl,dl
  404f58:	je     0x405184
  404f5e:	mov    ecx,edx
  404f60:	and    ecx,0xfffffffd
  404f63:	cmp    cl,0x20
  404f66:	je     0x405122
  404f6c:	cmp    dl,0x9
  404f6f:	je     0x405122
  404f75:	lea    r8,[r13+0x1]
  404f79:	jmp    0x404f9e
  404f7b:	nop    DWORD PTR [rax+rax*1+0x0]
  404f80:	mov    r9d,ecx
  404f83:	add    r8,0x1
  404f87:	and    r9d,0xfffffffd
  404f8b:	cmp    r9b,0x20
  404f8f:	je     0x405122
  404f95:	cmp    cl,0x9
  404f98:	je     0x405122
  404f9e:	movzx  ecx,BYTE PTR [r8]
  404fa2:	test   cl,cl
  404fa4:	jne    0x404f80
  404fa6:	mov    rcx,r10
  404fa9:	xor    r14d,r14d
  404fac:	lea    r9,[r13-0x1]
  404fb0:	mov    r11d,0xffffffff
  404fb6:	jmp    0x404fe1
  404fb8:	nop    DWORD PTR [rax+rax*1+0x0]
  404fc0:	movzx  edx,BYTE PTR [r9+0x1]
  404fc5:	lea    rcx,[r8+0x1]
  404fc9:	add    r9,0x1
  404fcd:	mov    BYTE PTR [r8],dl
  404fd0:	movzx  edx,BYTE PTR [r9+0x1]
  404fd5:	lea    r8d,[r11+0x2]
  404fd9:	add    r11d,0x1
  404fdd:	test   dl,dl
  404fdf:	je     0x405030
  404fe1:	cmp    dl,0x22
  404fe4:	mov    r8,rcx
  404fe7:	jne    0x404fc0
  404fe9:	cmp    r11d,0xffffffff
  404fed:	je     0x405023
  404fef:	cmp    BYTE PTR [r9],0x5c
  404ff3:	jne    0x405023
  404ff5:	mov    edx,r11d
  404ff8:	mov    r8,r9
  404ffb:	lea    r10,[rcx+rdx*1+0x1]
  405000:	jmp    0x40500c
  405002:	sub    r8,0x1
  405006:	cmp    BYTE PTR [r8],0x5c
  40500a:	jne    0x405023
  40500c:	add    rcx,0x1
  405010:	mov    BYTE PTR [rcx-0x1],0x5c
  405014:	cmp    rcx,r10
  405017:	jne    0x405002
  405019:	lea    r8,[r10+0x1]
  40501d:	mov    BYTE PTR [r10],0x5c
  405021:	jmp    0x404fc0
  405023:	mov    r10,rcx
  405026:	lea    r8,[r10+0x1]
  40502a:	mov    BYTE PTR [r10],0x5c
  40502e:	jmp    0x404fc0
  405030:	test   r14d,r14d
  405033:	je     0x405084
  405035:	sub    r8d,0x1
  405039:	cmp    r8d,0xffffffff
  40503d:	je     0x405140
  405043:	movsxd rdx,r8d
  405046:	cmp    BYTE PTR [r13+rdx*1+0x0],0x5c
  40504c:	jne    0x405140
  405052:	mov    r8d,r8d
  405055:	lea    rdx,[r13+rdx*1-0x1]
  40505a:	lea    r8,[rcx+r8*1+0x1]
  40505f:	jmp    0x40506f
  405061:	sub    rdx,0x1
  405065:	cmp    BYTE PTR [rdx+0x1],0x5c
  405069:	jne    0x405140
  40506f:	add    rcx,0x1
  405073:	mov    BYTE PTR [rcx-0x1],0x5c
  405077:	cmp    rcx,r8
  40507a:	jne    0x405061
  40507c:	lea    rcx,[r8+0x1]
  405080:	mov    BYTE PTR [r8],0x22
  405084:	add    rsi,0x8
  405088:	mov    r13,QWORD PTR [rsi-0x8]
  40508c:	lea    r10,[rcx+0x1]
  405090:	mov    BYTE PTR [rcx],0x20
  405093:	test   r13,r13
  405096:	jne    0x404f51
  40509c:	mov    rsi,QWORD PTR [rbp+0x60]
  4050a0:	mov    rdx,QWORD PTR [rbp+0x58]
  4050a4:	xor    r9d,r9d
  4050a7:	mov    BYTE PTR [r10-0x1],0x0
  4050ac:	xor    r8d,r8d
  4050af:	mov    QWORD PTR [rsp+0x38],0x0
  4050b8:	mov    DWORD PTR [rsp+0x20],0x1
  4050c0:	mov    rcx,rbx
  4050c3:	mov    QWORD PTR [rsp+0x48],rsi
  4050c8:	mov    QWORD PTR [rsp+0x40],rdx
  4050cd:	mov    rsi,QWORD PTR [rbp-0x28]
  4050d1:	mov    edx,DWORD PTR [rbp+0x50]
  4050d4:	mov    QWORD PTR [rsp+0x30],rsi
  4050d9:	mov    DWORD PTR [rsp+0x28],edx
  4050dd:	mov    rdx,rax
  4050e0:	call   QWORD PTR [rip+0xc296]        # 0x41137c
  4050e6:	test   eax,eax
  4050e8:	je     0x40521d
  4050ee:	mov    rax,QWORD PTR [rbp+0x60]
  4050f2:	mov    rcx,QWORD PTR [rax+0x8]
  4050f6:	call   r12
  4050f9:	mov    rcx,rbx
  4050fc:	call   0x407578
  405101:	mov    rcx,QWORD PTR [rbp-0x28]
  405105:	call   0x407578
  40510a:	mov    rax,QWORD PTR [rbp+0x60]
  40510e:	mov    rax,QWORD PTR [rax]
  405111:	lea    rsp,[rbp-0x18]
  405115:	pop    rbx
  405116:	pop    rsi
  405117:	pop    rdi
  405118:	pop    r12
  40511a:	pop    r13
  40511c:	pop    r14
  40511e:	pop    r15
  405120:	pop    rbp
  405121:	ret    
  405122:	mov    BYTE PTR [r10],0x22
  405126:	movzx  edx,BYTE PTR [r13+0x0]
  40512b:	lea    rcx,[r10+0x1]
  40512f:	mov    r14d,0x1
  405135:	test   dl,dl
  405137:	jne    0x404fac
  40513d:	nop    DWORD PTR [rax]
  405140:	mov    r8,rcx
  405143:	jmp    0x40507c
  405148:	mov    rcx,r9
  40514b:	lea    r9,[rcx+0x1]
  40514f:	jmp    0x404e42
  405154:	movzx  edx,BYTE PTR [r15]
  405158:	test   dl,dl
  40515a:	je     0x4051ff
  405160:	mov    eax,edx
  405162:	mov    r13,r15
  405165:	test   al,al
  405167:	jne    0x404d12
  40516d:	mov    r15,r13
  405170:	mov    rcx,rbx
  405173:	jmp    0x404d58
  405178:	mov    eax,0x1
  40517d:	xor    ecx,ecx
  40517f:	jmp    0x404f1f
  405184:	mov    rcx,r10
  405187:	jmp    0x405084
  40518c:	mov    QWORD PTR [rbp-0x28],0x0
  405194:	jmp    0x404c78
  405199:	mov    edx,0x5c
  40519e:	mov    rcx,r12
  4051a1:	call   0x4074e8
  4051a6:	test   rax,rax
  4051a9:	jne    0x404c99
  4051af:	mov    eax,DWORD PTR [rbp+0x38]
  4051b2:	test   eax,eax
  4051b4:	je     0x404c99
  4051ba:	lea    rcx,[rip+0x77a3]        # 0x40c964
  4051c1:	call   0x407558
  4051c6:	test   rax,rax
  4051c9:	mov    r13,rax
  4051cc:	jne    0x404ca0
  4051d2:	jmp    0x404c99
  4051d7:	nop    WORD PTR [rax+rax*1+0x0]
  4051e0:	xor    r9d,r9d
  4051e3:	mov    rcx,r9
  4051e6:	call   0x4057b0
  4051eb:	mov    r13,QWORD PTR [rsi]
  4051ee:	test   r13,r13
  4051f1:	jne    0x404f4a
  4051f7:	mov    r10,rax
  4051fa:	jmp    0x40509c
  4051ff:	mov    rcx,rbx
  405202:	mov    QWORD PTR [rbp-0x30],rax
  405206:	call   0x407578
  40520b:	mov    rcx,QWORD PTR [rbp-0x28]
  40520f:	call   0x407578
  405214:	mov    rax,QWORD PTR [rbp-0x30]
  405218:	jmp    0x405111
  40521d:	mov    rcx,QWORD PTR [rbp-0x28]
  405221:	call   0x407578
  405226:	mov    rcx,rbx
  405229:	call   0x407578
  40522e:	mov    rax,0xffffffffffffffff
  405235:	jmp    0x405111
  40523a:	nop    WORD PTR [rax+rax*1+0x0]
  405240:	test   r9d,r9d
  405243:	mov    rcx,rdx
  405246:	jne    0x405270
  405248:	cmp    r8d,0x1
  40524c:	mov    rax,QWORD PTR [rip+0xc2b9]        # 0x41150c
  405253:	mov    r8d,0x180
  405259:	sbb    edx,edx
  40525b:	and    edx,0xffffc000
  405261:	add    edx,0x8301
  405267:	rex.W jmp rax
  40526a:	nop    WORD PTR [rax+rax*1+0x0]
  405270:	mov    eax,0xffffffff
  405275:	ret    
  405276:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405280:	mov    rax,QWORD PTR [rip+0xc285]        # 0x41150c
  405287:	cmp    r8d,0x1
  40528b:	mov    rcx,rdx
  40528e:	sbb    edx,edx
  405290:	and    edx,0xffffc000
  405296:	add    edx,0x8000
  40529c:	rex.W jmp rax
  40529f:	nop
  4052a0:	push   r15
  4052a2:	push   r14
  4052a4:	push   r13
  4052a6:	push   r12
  4052a8:	push   rbp
  4052a9:	push   rdi
  4052aa:	push   rsi
  4052ab:	push   rbx
  4052ac:	sub    rsp,0x2a8
  4052b3:	mov    rbp,QWORD PTR [rip+0xc21a]        # 0x4114d4
  4052ba:	mov    ecx,DWORD PTR [rsp+0x318]
  4052c1:	mov    ebx,edx
  4052c3:	mov    esi,edx
  4052c5:	mov    QWORD PTR [rsp+0x300],r8
  4052cd:	shr    ebx,0x3
  4052d0:	mov    QWORD PTR [rsp+0x308],r9
  4052d8:	xor    ebx,0x1
  4052db:	and    ebx,0x1
  4052de:	call   rbp
  4052e0:	mov    ecx,DWORD PTR [rsp+0x320]
  4052e7:	mov    DWORD PTR [rsp+0x40],eax
  4052eb:	call   rbp
  4052ed:	test   bl,bl
  4052ef:	mov    DWORD PTR [rsp+0x44],eax
  4052f3:	jne    0x405530
  4052f9:	mov    rbp,QWORD PTR [rip+0xc1ec]        # 0x4114ec
  405300:	mov    ecx,DWORD PTR [rsp+0x40]
  405304:	call   rbp
  405306:	mov    ecx,DWORD PTR [rsp+0x44]
  40530a:	mov    r15,rax
  40530d:	call   rbp
  40530f:	mov    rbp,rax
  405312:	mov    r14,rax
  405315:	mov    DWORD PTR [rsp+0xf0],0x94
  405320:	lea    rcx,[rsp+0xf0]
  405328:	xor    r12d,r12d
  40532b:	call   QWORD PTR [rip+0xc0b3]        # 0x4113e4
  405331:	cmp    DWORD PTR [rsp+0x100],0x1
  405339:	je     0x405387
  40533b:	xor    r9d,r9d
  40533e:	mov    QWORD PTR [rsp+0x30],0x0
  405347:	mov    DWORD PTR [rsp+0x28],0x80
  40534f:	mov    DWORD PTR [rsp+0x20],0x3
  405357:	mov    r8d,0x2
  40535d:	mov    edx,0x40000000
  405362:	lea    rcx,[rip+0x7600]        # 0x40c969
  405369:	mov    r12d,0x8000000
  40536f:	call   QWORD PTR [rip+0xbfff]        # 0x411374
  405375:	cmp    rax,0xffffffffffffffff
  405379:	je     0x405387
  40537b:	xor    r12d,r12d
  40537e:	mov    rcx,rax
  405381:	call   QWORD PTR [rip+0xbfe5]        # 0x41136c
  405387:	lea    r13,[rsp+0x80]
  40538f:	xor    eax,eax
  405391:	mov    ecx,0xd
  405396:	shr    esi,1
  405398:	mov    r9,QWORD PTR [rsp+0x310]
  4053a0:	mov    r8,QWORD PTR [rsp+0x308]
  4053a8:	mov    rdi,r13
  4053ab:	mov    edx,esi
  4053ad:	rep stos QWORD PTR es:[rdi],rax
  4053b0:	mov    QWORD PTR [rsp+0xd0],r15
  4053b8:	mov    rcx,QWORD PTR [rsp+0x300]
  4053c0:	lea    r15,[rsp+0x60]
  4053c5:	and    edx,0x1
  4053c8:	mov    QWORD PTR [rsp+0x28],r13
  4053cd:	mov    DWORD PTR [rsp+0x20],r12d
  4053d2:	mov    QWORD PTR [rsp+0x30],r15
  4053d7:	mov    QWORD PTR [rsp+0xd8],r14
  4053df:	mov    QWORD PTR [rsp+0xe0],rbp
  4053e7:	mov    DWORD PTR [rsp+0x80],0x68
  4053f2:	mov    DWORD PTR [rsp+0xbc],0x100
  4053fd:	call   0x404b90
  405402:	cmp    rax,0xffffffffffffffff
  405406:	mov    rbp,rax
  405409:	mov    r14,QWORD PTR [rip+0xc0bc]        # 0x4114cc
  405410:	je     0x405470
  405412:	mov    eax,DWORD PTR [rsp+0x318]
  405419:	test   eax,eax
  40541b:	jne    0x405572
  405421:	cmp    DWORD PTR [rsp+0x320],0x1
  405429:	je     0x405435
  40542b:	mov    ecx,DWORD PTR [rsp+0x320]
  405432:	call   r14
  405435:	cmp    DWORD PTR [rsp+0x50],0x2
  40543a:	je     0x405500
  405440:	test   bl,bl
  405442:	je     0x405500
  405448:	mov    ecx,DWORD PTR [rsp+0x50]
  40544c:	call   r14
  40544f:	mov    ecx,DWORD PTR [rsp+0x40]
  405453:	call   r14
  405456:	mov    ecx,DWORD PTR [rsp+0x44]
  40545a:	call   r14
  40545d:	mov    ecx,DWORD PTR [rsp+0x328]
  405464:	call   r14
  405467:	jmp    0x405516
  40546c:	nop    DWORD PTR [rax+0x0]
  405470:	mov    rax,QWORD PTR [rip+0xc065]        # 0x4114dc
  405477:	mov    QWORD PTR [rsp+0x58],rax
  40547c:	call   rax
  40547e:	mov    eax,DWORD PTR [rax]
  405480:	xor    edx,edx
  405482:	mov    rcx,QWORD PTR [rsp+0x300]
  40548a:	mov    DWORD PTR [rsp+0x54],eax
  40548e:	call   QWORD PTR [rip+0xc078]        # 0x41150c
  405494:	test   eax,eax
  405496:	mov    esi,eax
  405498:	js     0x4054c9
  40549a:	lea    rax,[rsp+0x190]
  4054a2:	mov    r8d,0x108
  4054a8:	mov    ecx,esi
  4054aa:	mov    rdx,rax
  4054ad:	mov    QWORD PTR [rsp+0x48],rax
  4054b2:	call   QWORD PTR [rip+0xc064]        # 0x41151c
  4054b8:	movsxd rdi,eax
  4054bb:	mov    ecx,esi
  4054bd:	call   r14
  4054c0:	cmp    edi,0x3
  4054c3:	jg     0x405581
  4054c9:	mov    rax,QWORD PTR [rsp+0x58]
  4054ce:	call   rax
  4054d0:	mov    edi,DWORD PTR [rsp+0x54]
  4054d4:	mov    DWORD PTR [rax],edi
  4054d6:	mov    rax,QWORD PTR [rsp+0x340]
  4054de:	lea    rdi,[rip+0x748f]        # 0x40c974
  4054e5:	mov    DWORD PTR [rax],0x2
  4054eb:	mov    rax,QWORD PTR [rsp+0x338]
  4054f3:	mov    QWORD PTR [rax],rdi
  4054f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405500:	mov    ecx,DWORD PTR [rsp+0x40]
  405504:	call   r14
  405507:	mov    ecx,DWORD PTR [rsp+0x44]
  40550b:	call   r14
  40550e:	test   bl,bl
  405510:	jne    0x40545d
  405516:	mov    rax,rbp
  405519:	add    rsp,0x2a8
  405520:	pop    rbx
  405521:	pop    rsi
  405522:	pop    rdi
  405523:	pop    rbp
  405524:	pop    r12
  405526:	pop    r13
  405528:	pop    r14
  40552a:	pop    r15
  40552c:	ret    
  40552d:	nop    DWORD PTR [rax]
  405530:	mov    ecx,DWORD PTR [rsp+0x328]
  405537:	call   rbp
  405539:	mov    edi,eax
  40553b:	mov    rbp,QWORD PTR [rip+0xbfaa]        # 0x4114ec
  405542:	mov    ecx,DWORD PTR [rsp+0x40]
  405546:	call   rbp
  405548:	mov    ecx,DWORD PTR [rsp+0x44]
  40554c:	mov    r15,rax
  40554f:	call   rbp
  405551:	mov    ecx,edi
  405553:	mov    r14,rax
  405556:	call   rbp
  405558:	mov    rbp,rax
  40555b:	mov    eax,DWORD PTR [rsp+0x328]
  405562:	mov    DWORD PTR [rsp+0x328],edi
  405569:	mov    DWORD PTR [rsp+0x50],eax
  40556d:	jmp    0x405315
  405572:	mov    ecx,DWORD PTR [rsp+0x318]
  405579:	call   r14
  40557c:	jmp    0x405421
  405581:	mov    rsi,QWORD PTR [rsp+0x48]
  405586:	mov    edx,0xa
  40558b:	mov    BYTE PTR [rsp+rdi*1+0x190],0x0
  405593:	mov    rcx,rsi
  405596:	call   0x4074e8
  40559b:	test   rax,rax
  40559e:	je     0x4054c9
  4055a4:	lea    rdi,[rip+0x73c6]        # 0x40c971
  4055ab:	mov    ecx,0x2
  4055b0:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4055b2:	jne    0x4054c9
  4055b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4055c0:	mov    BYTE PTR [rax],0x0
  4055c3:	sub    rax,0x1
  4055c7:	movzx  edx,BYTE PTR [rax]
  4055ca:	mov    ecx,edx
  4055cc:	and    ecx,0xfffffffb
  4055cf:	cmp    cl,0x9
  4055d2:	je     0x4055c0
  4055d4:	cmp    dl,0x20
  4055d7:	je     0x4055c0
  4055d9:	movzx  eax,BYTE PTR [rsp+0x192]
  4055e1:	cmp    al,0x9
  4055e3:	je     0x4056d3
  4055e9:	cmp    al,0x20
  4055eb:	mov    rdi,QWORD PTR [rsp+0x48]
  4055f0:	sete   al
  4055f3:	test   al,al
  4055f5:	lea    rsi,[rdi+0x2]
  4055f9:	jne    0x4056d3
  4055ff:	mov    rax,rsi
  405602:	jmp    0x405607
  405604:	mov    BYTE PTR [rax],0x5c
  405607:	mov    edx,0x2f
  40560c:	mov    rcx,rax
  40560f:	call   0x4074e8
  405614:	test   rax,rax
  405617:	jne    0x405604
  405619:	mov    rax,QWORD PTR [rsp+0x308]
  405621:	cmp    QWORD PTR [rax],0x0
  405625:	je     0x4056f1
  40562b:	nop    DWORD PTR [rax+rax*1+0x0]
  405630:	add    rax,0x8
  405634:	cmp    QWORD PTR [rax],0x0
  405638:	jne    0x405630
  40563a:	sub    rax,QWORD PTR [rsp+0x308]
  405642:	sar    rax,0x3
  405646:	lea    ecx,[rax+0x2]
  405649:	movsxd rcx,ecx
  40564c:	shl    rcx,0x3
  405650:	lea    r8,[rcx-0x8]
  405654:	mov    QWORD PTR [rsp+0x48],r8
  405659:	call   0x4057b0
  40565e:	mov    r8,QWORD PTR [rsp+0x48]
  405663:	mov    rdx,QWORD PTR [rsp+0x308]
  40566b:	lea    rcx,[rax+0x8]
  40566f:	mov    QWORD PTR [rax],rsi
  405672:	mov    rdi,rax
  405675:	call   0x407548
  40567a:	mov    rcx,rsi
  40567d:	mov    edx,0x5c
  405682:	call   0x4074b0
  405687:	mov    r9,QWORD PTR [rsp+0x310]
  40568f:	add    rax,0x1
  405693:	mov    r8,rdi
  405696:	mov    rcx,rax
  405699:	mov    edx,0x1
  40569e:	mov    QWORD PTR [rsp+0x30],r15
  4056a3:	cmove  rcx,rsi
  4056a7:	mov    QWORD PTR [rsp+0x28],r13
  4056ac:	mov    DWORD PTR [rsp+0x20],r12d
  4056b1:	call   0x404b90
  4056b6:	mov    rcx,rdi
  4056b9:	mov    rsi,rax
  4056bc:	call   0x407578
  4056c1:	cmp    rsi,0xffffffffffffffff
  4056c5:	je     0x4054c9
  4056cb:	mov    rbp,rsi
  4056ce:	jmp    0x405412
  4056d3:	mov    rsi,QWORD PTR [rsp+0x48]
  4056d8:	add    rsi,0x2
  4056dc:	add    rsi,0x1
  4056e0:	movzx  eax,BYTE PTR [rsi]
  4056e3:	cmp    al,0x9
  4056e5:	je     0x4056dc
  4056e7:	cmp    al,0x20
  4056e9:	jne    0x4055ff
  4056ef:	jmp    0x4056dc
  4056f1:	mov    r8d,0x8
  4056f7:	mov    ecx,0x10
  4056fc:	jmp    0x405654
  405701:	nop    DWORD PTR [rax+rax*1+0x0]
  405706:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405710:	lea    r9,[rip+0x72e9]        # 0x40ca00
  405717:	jmp    0x403dc0
  40571c:	nop
  40571d:	nop
  40571e:	nop
  40571f:	nop
  405720:	sub    rsp,0x38
  405724:	mov    rax,QWORD PTR [rip+0xb3a5]        # 0x410ad0
  40572b:	test   rax,rax
  40572e:	je     0x40573a
  405730:	mov    DWORD PTR [rsp+0x2c],ecx
  405734:	call   rax
  405736:	mov    ecx,DWORD PTR [rsp+0x2c]
  40573a:	call   0x4075b0
  40573f:	nop
  405740:	mov    QWORD PTR [rip+0x48f9],rcx        # 0x40a040
  405747:	ret    
  405748:	nop    DWORD PTR [rax+rax*1+0x0]
  405750:	push   rdi
  405751:	push   rsi
  405752:	push   rbx
  405753:	sub    rsp,0x30
  405757:	mov    rsi,QWORD PTR [rip+0x48e2]        # 0x40a040
  40575e:	lea    rax,[rip+0x771b]        # 0x40ce80
  405765:	lea    rbx,[rip+0x7717]        # 0x40ce83
  40576c:	mov    rdi,rcx
  40576f:	cmp    BYTE PTR [rsi],0x0
  405772:	cmovne rbx,rax
  405776:	call   QWORD PTR [rip+0xbd18]        # 0x411494
  40577c:	lea    rdx,[rip+0x7705]        # 0x40ce88
  405783:	lea    rcx,[rax+0x60]
  405787:	mov    DWORD PTR [rsp+0x20],edi
  40578b:	mov    r9,rbx
  40578e:	mov    r8,rsi
  405791:	call   0x407590
  405796:	mov    ecx,0x1
  40579b:	call   0x405720
  4057a0:	nop
  4057a1:	nop    DWORD PTR [rax+rax*1+0x0]
  4057a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4057b0:	push   rbx
  4057b1:	sub    rsp,0x20
  4057b5:	mov    eax,0x1
  4057ba:	test   rcx,rcx
  4057bd:	mov    rbx,rcx
  4057c0:	cmove  rbx,rax
  4057c4:	mov    rcx,rbx
  4057c7:	call   0x407550
  4057cc:	test   rax,rax
  4057cf:	je     0x4057d7
  4057d1:	add    rsp,0x20
  4057d5:	pop    rbx
  4057d6:	ret    
  4057d7:	mov    rcx,rbx
  4057da:	call   0x405750
  4057df:	nop
  4057e0:	push   rsi
  4057e1:	push   rbx
  4057e2:	sub    rsp,0x28
  4057e6:	test   rcx,rcx
  4057e9:	mov    rbx,rcx
  4057ec:	mov    rsi,rdx
  4057ef:	je     0x405810
  4057f1:	test   rdx,rdx
  4057f4:	je     0x405810
  4057f6:	mov    rdx,rsi
  4057f9:	mov    rcx,rbx
  4057fc:	call   0x4075b8
  405801:	test   rax,rax
  405804:	je     0x40581c
  405806:	add    rsp,0x28
  40580a:	pop    rbx
  40580b:	pop    rsi
  40580c:	ret    
  40580d:	nop    DWORD PTR [rax]
  405810:	mov    esi,0x1
  405815:	mov    ebx,0x1
  40581a:	jmp    0x4057f6
  40581c:	mov    rcx,rsi
  40581f:	imul   rcx,rbx
  405823:	call   0x405750
  405828:	nop
  405829:	nop    DWORD PTR [rax+0x0]
  405830:	push   rbx
  405831:	sub    rsp,0x20
  405835:	mov    eax,0x1
  40583a:	test   rdx,rdx
  40583d:	mov    rbx,rdx
  405840:	cmove  rbx,rax
  405844:	test   rcx,rcx
  405847:	je     0x405860
  405849:	mov    rdx,rbx
  40584c:	call   0x407518
  405851:	test   rax,rax
  405854:	je     0x40586a
  405856:	add    rsp,0x20
  40585a:	pop    rbx
  40585b:	ret    
  40585c:	nop    DWORD PTR [rax+0x0]
  405860:	mov    rcx,rbx
  405863:	call   0x407550
  405868:	jmp    0x405851
  40586a:	mov    rcx,rbx
  40586d:	call   0x405750
  405872:	nop
  405873:	nop
  405874:	nop
  405875:	nop
  405876:	nop
  405877:	nop
  405878:	nop
  405879:	nop
  40587a:	nop
  40587b:	nop
  40587c:	nop
  40587d:	nop
  40587e:	nop
  40587f:	nop
  405880:	push   rsi
  405881:	push   rbx
  405882:	sub    rsp,0x28
  405886:	mov    rsi,rcx
  405889:	call   0x4074c8
  40588e:	lea    rbx,[rax+0x1]
  405892:	mov    rcx,rbx
  405895:	call   0x4057b0
  40589a:	mov    r8,rbx
  40589d:	mov    rdx,rsi
  4058a0:	mov    rcx,rax
  4058a3:	add    rsp,0x28
  4058a7:	pop    rbx
  4058a8:	pop    rsi
  4058a9:	jmp    0x407548
  4058ae:	nop
  4058af:	nop
  4058b0:	push   r13
  4058b2:	push   r12
  4058b4:	push   rbp
  4058b5:	push   rdi
  4058b6:	push   rsi
  4058b7:	push   rbx
  4058b8:	sub    rsp,0x38
  4058bc:	movsxd rbx,edx
  4058bf:	mov    rbp,rcx
  4058c2:	call   0x4074c8
  4058c7:	lea    edx,[rbx+0x5]
  4058ca:	cmp    edx,eax
  4058cc:	jge    0x405ab9
  4058d2:	sub    rax,rbx
  4058d5:	lea    rdi,[rip+0x75e4]        # 0x40cec0
  4058dc:	mov    ecx,0x6
  4058e1:	lea    r13,[rbp+rax*1-0x6]
  4058e6:	mov    eax,0xffffffff
  4058eb:	mov    rsi,r13
  4058ee:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4058f0:	seta   cl
  4058f3:	setb   dl
  4058f6:	cmp    cl,dl
  4058f8:	jne    0x405a96
  4058fe:	lea    rcx,[rsp+0x20]
  405903:	xor    edx,edx
  405905:	mov    edi,0x7fff
  40590a:	lea    rsi,[rip+0x75cf]        # 0x40cee0
  405911:	call   0x4073c0
  405916:	movsxd rcx,DWORD PTR [rsp+0x24]
  40591b:	movsxd rax,DWORD PTR [rsp+0x20]
  405920:	shl    rcx,0x10
  405924:	mov    rbx,rcx
  405927:	xor    rbx,rax
  40592a:	call   0x407470
  40592f:	cdqe   
  405931:	mov    r12,QWORD PTR [rip+0xbba4]        # 0x4114dc
  405938:	xor    rbx,rax
  40593b:	mov    rcx,rbx
  40593e:	add    rcx,QWORD PTR [rip+0xa79b]        # 0x4100e0
  405945:	movabs rbx,0x8421084210842109
  40594f:	mov    QWORD PTR [rip+0xa78a],rcx        # 0x4100e0
  405956:	jmp    0x405992
  405958:	nop    DWORD PTR [rax+rax*1+0x0]
  405960:	call   r12
  405963:	cmp    DWORD PTR [rax],0x11
  405966:	je     0x405974
  405968:	call   r12
  40596b:	cmp    DWORD PTR [rax],0x15
  40596e:	jne    0x405aa3
  405974:	mov    rax,QWORD PTR [rip+0xa765]        # 0x4100e0
  40597b:	sub    edi,0x1
  40597e:	lea    rcx,[rax+0x1e61]
  405985:	mov    QWORD PTR [rip+0xa754],rcx        # 0x4100e0
  40598c:	je     0x405aa3
  405992:	mov    rdx,rcx
  405995:	shr    rdx,1
  405998:	mov    rax,rdx
  40599b:	mul    rbx
  40599e:	mov    r9,rdx
  4059a1:	shr    rdx,0x5
  4059a5:	shr    r9,0x4
  4059a9:	lea    rax,[rcx+r9*2]
  4059ad:	mov    r8,r9
  4059b0:	shl    r8,0x6
  4059b4:	sub    rax,r8
  4059b7:	movzx  eax,BYTE PTR [rsi+rax*1]
  4059bb:	mov    BYTE PTR [r13+0x0],al
  4059bf:	mov    rax,rdx
  4059c2:	mul    rbx
  4059c5:	mov    r8,rdx
  4059c8:	shr    rdx,0x5
  4059cc:	shr    r8,0x4
  4059d0:	lea    rax,[r9+r8*2]
  4059d4:	mov    rcx,r8
  4059d7:	shl    rcx,0x6
  4059db:	sub    rax,rcx
  4059de:	movzx  eax,BYTE PTR [rsi+rax*1]
  4059e2:	mov    BYTE PTR [r13+0x1],al
  4059e6:	mov    rax,rdx
  4059e9:	mul    rbx
  4059ec:	mov    rcx,rdx
  4059ef:	shr    rdx,0x5
  4059f3:	shr    rcx,0x4
  4059f7:	lea    rax,[r8+rcx*2]
  4059fb:	mov    r9,rcx
  4059fe:	shl    r9,0x6
  405a02:	sub    rax,r9
  405a05:	movzx  eax,BYTE PTR [rsi+rax*1]
  405a09:	mov    BYTE PTR [r13+0x2],al
  405a0d:	mov    rax,rdx
  405a10:	mul    rbx
  405a13:	mov    r8,rdx
  405a16:	shr    rdx,0x5
  405a1a:	shr    r8,0x4
  405a1e:	lea    rax,[rcx+r8*2]
  405a22:	mov    r9,r8
  405a25:	shl    r9,0x6
  405a29:	sub    rax,r9
  405a2c:	movzx  eax,BYTE PTR [rsi+rax*1]
  405a30:	mov    BYTE PTR [r13+0x3],al
  405a34:	mov    rax,rdx
  405a37:	mul    rbx
  405a3a:	mov    rcx,rdx
  405a3d:	shr    rdx,0x5
  405a41:	shr    rcx,0x4
  405a45:	lea    rax,[r8+rcx*2]
  405a49:	mov    r9,rcx
  405a4c:	shl    r9,0x6
  405a50:	sub    rax,r9
  405a53:	movzx  eax,BYTE PTR [rsi+rax*1]
  405a57:	mov    BYTE PTR [r13+0x4],al
  405a5b:	mov    rax,rdx
  405a5e:	mul    rbx
  405a61:	shr    rdx,0x4
  405a65:	lea    rax,[rcx+rdx*2]
  405a69:	mov    r8,rdx
  405a6c:	mov    rcx,rbp
  405a6f:	shl    r8,0x6
  405a73:	mov    edx,0x8502
  405a78:	sub    rax,r8
  405a7b:	mov    r8d,0x180
  405a81:	movzx  eax,BYTE PTR [rsi+rax*1]
  405a85:	mov    BYTE PTR [r13+0x5],al
  405a89:	call   0x407480
  405a8e:	test   eax,eax
  405a90:	js     0x405960
  405a96:	add    rsp,0x38
  405a9a:	pop    rbx
  405a9b:	pop    rsi
  405a9c:	pop    rdi
  405a9d:	pop    rbp
  405a9e:	pop    r12
  405aa0:	pop    r13
  405aa2:	ret    
  405aa3:	mov    eax,0xffffffff
  405aa8:	mov    BYTE PTR [rbp+0x0],0x0
  405aac:	add    rsp,0x38
  405ab0:	pop    rbx
  405ab1:	pop    rsi
  405ab2:	pop    rdi
  405ab3:	pop    rbp
  405ab4:	pop    r12
  405ab6:	pop    r13
  405ab8:	ret    
  405ab9:	mov    eax,0xffffffff
  405abe:	jmp    0x405a96
  405ac0:	push   rdi
  405ac1:	push   rsi
  405ac2:	push   rbx
  405ac3:	sub    rsp,0x20
  405ac7:	mov    rdi,rcx
  405aca:	mov    rcx,rdx
  405acd:	mov    rsi,rdx
  405ad0:	call   0x4074c8
  405ad5:	lea    r8,[rax+0x1]
  405ad9:	mov    rbx,rax
  405adc:	mov    rdx,rsi
  405adf:	mov    rcx,rdi
  405ae2:	call   0x407548
  405ae7:	add    rax,rbx
  405aea:	add    rsp,0x20
  405aee:	pop    rbx
  405aef:	pop    rsi
  405af0:	pop    rdi
  405af1:	ret    
  405af2:	nop
  405af3:	nop
  405af4:	nop
  405af5:	nop
  405af6:	nop
  405af7:	nop
  405af8:	nop
  405af9:	nop
  405afa:	nop
  405afb:	nop
  405afc:	nop
  405afd:	nop
  405afe:	nop
  405aff:	nop
  405b00:	push   rsi
  405b01:	push   rbx
  405b02:	sub    rsp,0x38
  405b06:	xor    esi,esi
  405b08:	lea    rbx,[rsp+0x58]
  405b0d:	test   rcx,rcx
  405b10:	mov    QWORD PTR [rsp+0x58],rdx
  405b15:	mov    QWORD PTR [rsp+0x60],r8
  405b1a:	mov    QWORD PTR [rsp+0x68],r9
  405b1f:	mov    QWORD PTR [rsp+0x28],rbx
  405b24:	je     0x405b44
  405b26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405b30:	add    rbx,0x8
  405b34:	call   0x4074c8
  405b39:	mov    rcx,QWORD PTR [rbx-0x8]
  405b3d:	add    esi,eax
  405b3f:	test   rcx,rcx
  405b42:	jne    0x405b30
  405b44:	mov    eax,esi
  405b46:	add    rsp,0x38
  405b4a:	pop    rbx
  405b4b:	pop    rsi
  405b4c:	ret    
  405b4d:	nop    DWORD PTR [rax]
  405b50:	push   r12
  405b52:	push   rbp
  405b53:	push   rdi
  405b54:	push   rsi
  405b55:	push   rbx
  405b56:	sub    rsp,0x30
  405b5a:	lea    rdi,[rsp+0x70]
  405b5f:	test   rdx,rdx
  405b62:	mov    r12,rcx
  405b65:	mov    QWORD PTR [rsp+0x70],r8
  405b6a:	mov    QWORD PTR [rsp+0x78],r9
  405b6f:	mov    rsi,rdx
  405b72:	mov    QWORD PTR [rsp+0x28],rdi
  405b77:	mov    rbp,rcx
  405b7a:	je     0x405ba8
  405b7c:	nop    DWORD PTR [rax+0x0]
  405b80:	mov    rcx,rsi
  405b83:	add    rdi,0x8
  405b87:	call   0x4074c8
  405b8c:	mov    ebx,eax
  405b8e:	mov    rdx,rsi
  405b91:	mov    rcx,rbp
  405b94:	mov    r8,rbx
  405b97:	add    rbp,rbx
  405b9a:	call   0x407548
  405b9f:	mov    rsi,QWORD PTR [rdi-0x8]
  405ba3:	test   rsi,rsi
  405ba6:	jne    0x405b80
  405ba8:	mov    rax,r12
  405bab:	mov    BYTE PTR [rbp+0x0],0x0
  405baf:	add    rsp,0x30
  405bb3:	pop    rbx
  405bb4:	pop    rsi
  405bb5:	pop    rdi
  405bb6:	pop    rbp
  405bb7:	pop    r12
  405bb9:	ret    
  405bba:	nop    WORD PTR [rax+rax*1+0x0]
  405bc0:	push   rbp
  405bc1:	push   rdi
  405bc2:	push   rsi
  405bc3:	push   rbx
  405bc4:	sub    rsp,0x38
  405bc8:	mov    rbp,QWORD PTR [rip+0xaf09]        # 0x410ad8
  405bcf:	lea    rdi,[rsp+0x68]
  405bd4:	test   rcx,rcx
  405bd7:	mov    QWORD PTR [rsp+0x68],rdx
  405bdc:	mov    QWORD PTR [rsp+0x70],r8
  405be1:	mov    QWORD PTR [rsp+0x78],r9
  405be6:	mov    rsi,rcx
  405be9:	mov    QWORD PTR [rsp+0x28],rdi
  405bee:	je     0x405c18
  405bf0:	mov    rcx,rsi
  405bf3:	add    rdi,0x8
  405bf7:	call   0x4074c8
  405bfc:	mov    ebx,eax
  405bfe:	mov    rdx,rsi
  405c01:	mov    rcx,rbp
  405c04:	mov    r8,rbx
  405c07:	add    rbp,rbx
  405c0a:	call   0x407548
  405c0f:	mov    rsi,QWORD PTR [rdi-0x8]
  405c13:	test   rsi,rsi
  405c16:	jne    0x405bf0
  405c18:	mov    BYTE PTR [rbp+0x0],0x0
  405c1c:	mov    rax,QWORD PTR [rip+0xaeb5]        # 0x410ad8
  405c23:	add    rsp,0x38
  405c27:	pop    rbx
  405c28:	pop    rsi
  405c29:	pop    rdi
  405c2a:	pop    rbp
  405c2b:	ret    
  405c2c:	nop    DWORD PTR [rax+0x0]
  405c30:	push   r12
  405c32:	push   rbp
  405c33:	push   rdi
  405c34:	push   rsi
  405c35:	push   rbx
  405c36:	sub    rsp,0x30
  405c3a:	lea    rdi,[rsp+0x68]
  405c3f:	test   rcx,rcx
  405c42:	mov    QWORD PTR [rsp+0x68],rdx
  405c47:	mov    QWORD PTR [rsp+0x70],r8
  405c4c:	mov    QWORD PTR [rsp+0x78],r9
  405c51:	mov    rsi,rcx
  405c54:	mov    QWORD PTR [rsp+0x28],rdi
  405c59:	mov    rbx,rdi
  405c5c:	je     0x405cca
  405c5e:	xor    ebp,ebp
  405c60:	add    rbx,0x8
  405c64:	call   0x4074c8
  405c69:	mov    rcx,QWORD PTR [rbx-0x8]
  405c6d:	add    ebp,eax
  405c6f:	test   rcx,rcx
  405c72:	jne    0x405c60
  405c74:	lea    ecx,[rbp+0x1]
  405c77:	call   0x4057b0
  405c7c:	mov    QWORD PTR [rsp+0x28],rdi
  405c81:	mov    r12,rax
  405c84:	mov    rbp,rax
  405c87:	nop    WORD PTR [rax+rax*1+0x0]
  405c90:	mov    rcx,rsi
  405c93:	add    rdi,0x8
  405c97:	call   0x4074c8
  405c9c:	mov    ebx,eax
  405c9e:	mov    rdx,rsi
  405ca1:	mov    rcx,rbp
  405ca4:	mov    r8,rbx
  405ca7:	add    rbp,rbx
  405caa:	call   0x407548
  405caf:	mov    rsi,QWORD PTR [rdi-0x8]
  405cb3:	test   rsi,rsi
  405cb6:	jne    0x405c90
  405cb8:	mov    rax,r12
  405cbb:	mov    BYTE PTR [rbp+0x0],0x0
  405cbf:	add    rsp,0x30
  405cc3:	pop    rbx
  405cc4:	pop    rsi
  405cc5:	pop    rdi
  405cc6:	pop    rbp
  405cc7:	pop    r12
  405cc9:	ret    
  405cca:	mov    ecx,0x1
  405ccf:	call   0x4057b0
  405cd4:	mov    QWORD PTR [rsp+0x28],rdi
  405cd9:	mov    r12,rax
  405cdc:	mov    rbp,rax
  405cdf:	jmp    0x405cb8
  405ce1:	nop    DWORD PTR [rax+rax*1+0x0]
  405ce6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405cf0:	push   r13
  405cf2:	push   r12
  405cf4:	push   rbp
  405cf5:	push   rdi
  405cf6:	push   rsi
  405cf7:	push   rbx
  405cf8:	sub    rsp,0x38
  405cfc:	lea    rbp,[rsp+0x80]
  405d04:	test   rdx,rdx
  405d07:	mov    r12,rcx
  405d0a:	mov    QWORD PTR [rsp+0x80],r8
  405d12:	mov    QWORD PTR [rsp+0x88],r9
  405d1a:	mov    rsi,rdx
  405d1d:	mov    QWORD PTR [rsp+0x28],rbp
  405d22:	mov    rbx,rbp
  405d25:	je     0x405da8
  405d2b:	mov    rcx,rdx
  405d2e:	xor    edi,edi
  405d30:	add    rbx,0x8
  405d34:	call   0x4074c8
  405d39:	mov    rcx,QWORD PTR [rbx-0x8]
  405d3d:	add    edi,eax
  405d3f:	test   rcx,rcx
  405d42:	jne    0x405d30
  405d44:	lea    ecx,[rdi+0x1]
  405d47:	call   0x4057b0
  405d4c:	mov    QWORD PTR [rsp+0x28],rbp
  405d51:	mov    r13,rax
  405d54:	mov    rdi,rax
  405d57:	nop    WORD PTR [rax+rax*1+0x0]
  405d60:	mov    rcx,rsi
  405d63:	add    rbp,0x8
  405d67:	call   0x4074c8
  405d6c:	mov    ebx,eax
  405d6e:	mov    rdx,rsi
  405d71:	mov    rcx,rdi
  405d74:	mov    r8,rbx
  405d77:	add    rdi,rbx
  405d7a:	call   0x407548
  405d7f:	mov    rsi,QWORD PTR [rbp-0x8]
  405d83:	test   rsi,rsi
  405d86:	jne    0x405d60
  405d88:	test   r12,r12
  405d8b:	mov    BYTE PTR [rdi],0x0
  405d8e:	je     0x405d98
  405d90:	mov    rcx,r12
  405d93:	call   0x407578
  405d98:	mov    rax,r13
  405d9b:	add    rsp,0x38
  405d9f:	pop    rbx
  405da0:	pop    rsi
  405da1:	pop    rdi
  405da2:	pop    rbp
  405da3:	pop    r12
  405da5:	pop    r13
  405da7:	ret    
  405da8:	mov    ecx,0x1
  405dad:	call   0x4057b0
  405db2:	mov    QWORD PTR [rsp+0x28],rbp
  405db7:	mov    r13,rax
  405dba:	mov    rdi,rax
  405dbd:	jmp    0x405d88
  405dbf:	nop
  405dc0:	push   rbx
  405dc1:	sub    rsp,0x30
  405dc5:	mov    rbx,rcx
  405dc8:	mov    rcx,QWORD PTR [rip+0xad11]        # 0x410ae0
  405dcf:	call   0x406370
  405dd4:	cmp    rax,0xffffffffffffffff
  405dd8:	mov    QWORD PTR [rsp+0x20],rax
  405ddd:	je     0x405e55
  405ddf:	mov    ecx,0x8
  405de4:	call   0x4075f0
  405de9:	mov    rcx,QWORD PTR [rip+0xacf0]        # 0x410ae0
  405df0:	call   0x406370
  405df5:	mov    rcx,QWORD PTR [rip+0xacec]        # 0x410ae8
  405dfc:	mov    QWORD PTR [rsp+0x20],rax
  405e01:	call   0x406370
  405e06:	lea    rdx,[rsp+0x20]
  405e0b:	lea    r8,[rsp+0x28]
  405e10:	mov    rcx,rbx
  405e13:	mov    QWORD PTR [rsp+0x28],rax
  405e18:	call   0x407658
  405e1d:	mov    rcx,QWORD PTR [rsp+0x20]
  405e22:	mov    rbx,rax
  405e25:	call   0x406380
  405e2a:	mov    rcx,QWORD PTR [rsp+0x28]
  405e2f:	mov    QWORD PTR [rip+0xacaa],rax        # 0x410ae0
  405e36:	call   0x406380
  405e3b:	mov    ecx,0x8
  405e40:	mov    QWORD PTR [rip+0xaca1],rax        # 0x410ae8
  405e47:	call   0x4075c8
  405e4c:	mov    rax,rbx
  405e4f:	add    rsp,0x30
  405e53:	pop    rbx
  405e54:	ret    
  405e55:	mov    rax,QWORD PTR [rip+0x73e4]        # 0x40d240
  405e5c:	mov    rcx,rbx
  405e5f:	call   QWORD PTR [rax]
  405e61:	add    rsp,0x30
  405e65:	pop    rbx
  405e66:	ret    
  405e67:	nop    WORD PTR [rax+rax*1+0x0]
  405e70:	sub    rsp,0x28
  405e74:	call   0x405dc0
  405e79:	test   rax,rax
  405e7c:	sete   al
  405e7f:	movzx  eax,al
  405e82:	neg    eax
  405e84:	add    rsp,0x28
  405e88:	ret    
  405e89:	nop
  405e8a:	nop
  405e8b:	nop
  405e8c:	nop
  405e8d:	nop
  405e8e:	nop
  405e8f:	nop
  405e90:	sub    rsp,0x28
  405e94:	mov    rax,QWORD PTR [rip+0x41b5]        # 0x40a050
  405e9b:	mov    rax,QWORD PTR [rax]
  405e9e:	test   rax,rax
  405ea1:	je     0x405ec0
  405ea3:	call   rax
  405ea5:	mov    rax,QWORD PTR [rip+0x41a4]        # 0x40a050
  405eac:	lea    rdx,[rax+0x8]
  405eb0:	mov    rax,QWORD PTR [rax+0x8]
  405eb4:	mov    QWORD PTR [rip+0x4195],rdx        # 0x40a050
  405ebb:	test   rax,rax
  405ebe:	jne    0x405ea3
  405ec0:	add    rsp,0x28
  405ec4:	ret    
  405ec5:	nop
  405ec6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405ed0:	push   rsi
  405ed1:	push   rbx
  405ed2:	sub    rsp,0x28
  405ed6:	mov    rsi,QWORD PTR [rip+0x72e3]        # 0x40d1c0
  405edd:	mov    rax,QWORD PTR [rsi]
  405ee0:	cmp    eax,0xffffffff
  405ee3:	mov    ebx,eax
  405ee5:	je     0x405f10
  405ee7:	test   ebx,ebx
  405ee9:	je     0x405efa
  405eeb:	nop    DWORD PTR [rax+rax*1+0x0]
  405ef0:	mov    eax,ebx
  405ef2:	call   QWORD PTR [rsi+rax*8]
  405ef5:	sub    ebx,0x1
  405ef8:	jne    0x405ef0
  405efa:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x405e90
  405f01:	add    rsp,0x28
  405f05:	pop    rbx
  405f06:	pop    rsi
  405f07:	jmp    0x405e70
  405f0c:	nop    DWORD PTR [rax+0x0]
  405f10:	xor    ebx,ebx
  405f12:	jmp    0x405f16
  405f14:	mov    ebx,eax
  405f16:	lea    edx,[rbx+0x1]
  405f19:	cmp    QWORD PTR [rsi+rdx*8],0x0
  405f1e:	mov    rax,rdx
  405f21:	jne    0x405f14
  405f23:	jmp    0x405ee7
  405f25:	nop
  405f26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405f30:	mov    eax,DWORD PTR [rip+0xa1ba]        # 0x4100f0
  405f36:	test   eax,eax
  405f38:	je     0x405f40
  405f3a:	repz ret 
  405f3c:	nop    DWORD PTR [rax+0x0]
  405f40:	mov    DWORD PTR [rip+0xa1a6],0x1        # 0x4100f0
  405f4a:	jmp    0x405ed0
  405f4c:	nop
  405f4d:	nop
  405f4e:	nop
  405f4f:	nop
  405f50:	mov    rax,QWORD PTR [rip+0xb545]        # 0x41149c
  405f57:	rex.W jmp rax
  405f5a:	nop
  405f5b:	nop
  405f5c:	nop
  405f5d:	nop
  405f5e:	nop
  405f5f:	nop
  405f60:	xor    eax,eax
  405f62:	ret    
  405f63:	nop
  405f64:	nop
  405f65:	nop
  405f66:	nop
  405f67:	nop
  405f68:	nop
  405f69:	nop
  405f6a:	nop
  405f6b:	nop
  405f6c:	nop
  405f6d:	nop
  405f6e:	nop
  405f6f:	nop
  405f70:	push   r12
  405f72:	push   rbp
  405f73:	push   rdi
  405f74:	push   rsi
  405f75:	push   rbx
  405f76:	sub    rsp,0x40
  405f7a:	mov    rbx,QWORD PTR [rip+0x412f]        # 0x40a0b0
  405f81:	movabs rax,0x2b992ddfa232
  405f8b:	mov    QWORD PTR [rsp+0x20],0x0
  405f94:	cmp    rbx,rax
  405f97:	je     0x405fb0
  405f99:	not    rbx
  405f9c:	mov    QWORD PTR [rip+0x411d],rbx        # 0x40a0c0
  405fa3:	add    rsp,0x40
  405fa7:	pop    rbx
  405fa8:	pop    rsi
  405fa9:	pop    rdi
  405faa:	pop    rbp
  405fab:	pop    r12
  405fad:	ret    
  405fae:	xchg   ax,ax
  405fb0:	lea    rcx,[rsp+0x20]
  405fb5:	call   QWORD PTR [rip+0xb409]        # 0x4113c4
  405fbb:	mov    r12,QWORD PTR [rsp+0x20]
  405fc0:	call   QWORD PTR [rip+0xb3d6]        # 0x41139c
  405fc6:	mov    ebp,eax
  405fc8:	call   QWORD PTR [rip+0xb3d6]        # 0x4113a4
  405fce:	mov    edi,eax
  405fd0:	call   QWORD PTR [rip+0xb3fe]        # 0x4113d4
  405fd6:	lea    rcx,[rsp+0x30]
  405fdb:	mov    esi,eax
  405fdd:	call   QWORD PTR [rip+0xb419]        # 0x4113fc
  405fe3:	xor    r12,QWORD PTR [rsp+0x30]
  405fe8:	mov    edx,edi
  405fea:	movabs rax,0xffffffffffff
  405ff4:	xor    rbp,r12
  405ff7:	mov    rdi,rbp
  405ffa:	xor    rdi,rdx
  405ffd:	mov    edx,esi
  405fff:	xor    rdi,rdx
  406002:	mov    rsi,rdi
  406005:	and    rsi,rax
  406008:	cmp    rsi,rbx
  40600b:	je     0x406030
  40600d:	mov    rax,rsi
  406010:	not    rax
  406013:	mov    QWORD PTR [rip+0x4096],rsi        # 0x40a0b0
  40601a:	mov    QWORD PTR [rip+0x409f],rax        # 0x40a0c0
  406021:	add    rsp,0x40
  406025:	pop    rbx
  406026:	pop    rsi
  406027:	pop    rdi
  406028:	pop    rbp
  406029:	pop    r12
  40602b:	ret    
  40602c:	nop    DWORD PTR [rax+0x0]
  406030:	movabs rax,0xffffd466d2205dcc
  40603a:	movabs rsi,0x2b992ddfa233
  406044:	jmp    0x406013
  406046:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406050:	push   rbp
  406051:	push   rsi
  406052:	push   rbx
  406053:	mov    rbp,rsp
  406056:	sub    rsp,0x70
  40605a:	mov    rsi,rcx
  40605d:	lea    rcx,[rip+0xa0dc]        # 0x410140
  406064:	call   QWORD PTR [rip+0xb3a2]        # 0x41140c
  40606a:	mov    rbx,QWORD PTR [rip+0xa1c7]        # 0x410238
  406071:	xor    r8d,r8d
  406074:	lea    rdx,[rbp-0x28]
  406078:	mov    rcx,rbx
  40607b:	call   QWORD PTR [rip+0xb393]        # 0x411414
  406081:	test   rax,rax
  406084:	mov    r9,rax
  406087:	je     0x406130
  40608d:	lea    rax,[rbp-0x20]
  406091:	mov    QWORD PTR [rsp+0x38],0x0
  40609a:	mov    r8,rbx
  40609d:	mov    rdx,QWORD PTR [rbp-0x28]
  4060a1:	xor    ecx,ecx
  4060a3:	mov    QWORD PTR [rsp+0x30],rax
  4060a8:	lea    rax,[rbp-0x18]
  4060ac:	mov    QWORD PTR [rsp+0x28],rax
  4060b1:	lea    rax,[rip+0xa088]        # 0x410140
  4060b8:	mov    QWORD PTR [rsp+0x20],rax
  4060bd:	call   QWORD PTR [rip+0xb359]        # 0x41141c
  4060c3:	mov    rax,QWORD PTR [rip+0xa16e]        # 0x410238
  4060ca:	xor    ecx,ecx
  4060cc:	mov    QWORD PTR [rip+0xa0ed],rsi        # 0x4101c0
  4060d3:	mov    DWORD PTR [rip+0xa563],0xc0000409        # 0x410640
  4060dd:	mov    DWORD PTR [rip+0xa55d],0x1        # 0x410644
  4060e7:	mov    QWORD PTR [rip+0xa562],rax        # 0x410650
  4060ee:	mov    rax,QWORD PTR [rip+0x3fbb]        # 0x40a0b0
  4060f5:	mov    QWORD PTR [rbp-0x10],rax
  4060f9:	mov    rax,QWORD PTR [rip+0x3fc0]        # 0x40a0c0
  406100:	mov    QWORD PTR [rbp-0x8],rax
  406104:	call   QWORD PTR [rip+0xb322]        # 0x41142c
  40610a:	lea    rcx,[rip+0x6e0f]        # 0x40cf20
  406111:	call   QWORD PTR [rip+0xb335]        # 0x41144c
  406117:	call   QWORD PTR [rip+0xb277]        # 0x411394
  40611d:	mov    edx,0xc0000409
  406122:	mov    rcx,rax
  406125:	call   QWORD PTR [rip+0xb311]        # 0x41143c
  40612b:	call   0x4075c0
  406130:	mov    rax,QWORD PTR [rbp+0x18]
  406134:	mov    QWORD PTR [rip+0xa0fd],rax        # 0x410238
  40613b:	lea    rax,[rbp+0x8]
  40613f:	mov    QWORD PTR [rip+0xa092],rax        # 0x4101d8
  406146:	jmp    0x4060c3
  40614b:	nop
  40614c:	nop
  40614d:	nop
  40614e:	nop
  40614f:	nop
  406150:	sub    rsp,0x28
  406154:	test   edx,edx
  406156:	je     0x406170
  406158:	cmp    edx,0x3
  40615b:	je     0x406170
  40615d:	mov    eax,0x1
  406162:	add    rsp,0x28
  406166:	ret    
  406167:	nop    WORD PTR [rax+rax*1+0x0]
  406170:	call   0x406e60
  406175:	mov    eax,0x1
  40617a:	add    rsp,0x28
  40617e:	ret    
  40617f:	nop
  406180:	push   rsi
  406181:	push   rbx
  406182:	sub    rsp,0x28
  406186:	mov    rax,QWORD PTR [rip+0x7013]        # 0x40d1a0
  40618d:	cmp    DWORD PTR [rax],0x2
  406190:	je     0x406198
  406192:	mov    DWORD PTR [rax],0x2
  406198:	cmp    edx,0x2
  40619b:	je     0x4061b0
  40619d:	cmp    edx,0x1
  4061a0:	je     0x4061e2
  4061a2:	mov    eax,0x1
  4061a7:	add    rsp,0x28
  4061ab:	pop    rbx
  4061ac:	pop    rsi
  4061ad:	ret    
  4061ae:	xchg   ax,ax
  4061b0:	lea    rbx,[rip+0xbea9]        # 0x412060
  4061b7:	lea    rsi,[rip+0xbea2]        # 0x412060
  4061be:	cmp    rbx,rsi
  4061c1:	je     0x4061a2
  4061c3:	mov    rax,QWORD PTR [rbx]
  4061c6:	test   rax,rax
  4061c9:	je     0x4061cd
  4061cb:	call   rax
  4061cd:	add    rbx,0x8
  4061d1:	cmp    rbx,rsi
  4061d4:	jne    0x4061c3
  4061d6:	mov    eax,0x1
  4061db:	add    rsp,0x28
  4061df:	pop    rbx
  4061e0:	pop    rsi
  4061e1:	ret    
  4061e2:	call   0x406e60
  4061e7:	jmp    0x4061a2
  4061e9:	nop    DWORD PTR [rax+0x0]
  4061f0:	xor    eax,eax
  4061f2:	ret    
  4061f3:	nop
  4061f4:	nop
  4061f5:	nop
  4061f6:	nop
  4061f7:	nop
  4061f8:	nop
  4061f9:	nop
  4061fa:	nop
  4061fb:	nop
  4061fc:	nop
  4061fd:	nop
  4061fe:	nop
  4061ff:	nop
  406200:	sub    rsp,0x58
  406204:	mov    rax,QWORD PTR [rip+0xa515]        # 0x410720
  40620b:	test   rax,rax
  40620e:	je     0x40623c
  406210:	movsd  xmm0,QWORD PTR [rsp+0x80]
  406219:	mov    DWORD PTR [rsp+0x20],ecx
  40621d:	lea    rcx,[rsp+0x20]
  406222:	mov    QWORD PTR [rsp+0x28],rdx
  406227:	movsd  QWORD PTR [rsp+0x30],xmm2
  40622d:	movsd  QWORD PTR [rsp+0x38],xmm3
  406233:	movsd  QWORD PTR [rsp+0x40],xmm0
  406239:	call   rax
  40623b:	nop
  40623c:	add    rsp,0x58
  406240:	ret    
  406241:	nop    DWORD PTR [rax+rax*1+0x0]
  406246:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406250:	mov    QWORD PTR [rip+0xa4c9],rcx        # 0x410720
  406257:	jmp    0x407630
  40625c:	nop    DWORD PTR [rax+0x0]
  406260:	push   rsi
  406261:	push   rbx
  406262:	sub    rsp,0x78
  406266:	movaps XMMWORD PTR [rsp+0x40],xmm6
  40626b:	movaps XMMWORD PTR [rsp+0x50],xmm7
  406270:	movaps XMMWORD PTR [rsp+0x60],xmm8
  406276:	cmp    DWORD PTR [rcx],0x6
  406279:	ja     0x406350
  40627f:	mov    edx,DWORD PTR [rcx]
  406281:	lea    rax,[rip+0x6ddc]        # 0x40d064
  406288:	movsxd rdx,DWORD PTR [rax+rdx*4]
  40628c:	add    rax,rdx
  40628f:	jmp    rax
  406291:	lea    rbx,[rip+0x6ca8]        # 0x40cf40
  406298:	nop    DWORD PTR [rax+rax*1+0x0]
  4062a0:	movsd  xmm8,QWORD PTR [rcx+0x20]
  4062a6:	mov    rsi,QWORD PTR [rcx+0x8]
  4062aa:	movsd  xmm7,QWORD PTR [rcx+0x18]
  4062af:	movsd  xmm6,QWORD PTR [rcx+0x10]
  4062b4:	call   0x407648
  4062b9:	movsd  QWORD PTR [rsp+0x30],xmm8
  4062c0:	lea    rcx,[rax+0x60]
  4062c4:	lea    rdx,[rip+0x6d6d]        # 0x40d038
  4062cb:	movsd  QWORD PTR [rsp+0x28],xmm7
  4062d1:	mov    r9,rsi
  4062d4:	mov    r8,rbx
  4062d7:	movsd  QWORD PTR [rsp+0x20],xmm6
  4062dd:	call   0x407590
  4062e2:	nop
  4062e3:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  4062e8:	xor    eax,eax
  4062ea:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  4062ef:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  4062f5:	add    rsp,0x78
  4062f9:	pop    rbx
  4062fa:	pop    rsi
  4062fb:	ret    
  4062fc:	nop    DWORD PTR [rax+0x0]
  406300:	lea    rbx,[rip+0x6c58]        # 0x40cf5f
  406307:	jmp    0x4062a0
  406309:	nop    DWORD PTR [rax+0x0]
  406310:	lea    rbx,[rip+0x6c69]        # 0x40cf80
  406317:	jmp    0x4062a0
  406319:	nop    DWORD PTR [rax+0x0]
  406320:	lea    rbx,[rip+0x6cc9]        # 0x40cff0
  406327:	jmp    0x4062a0
  40632c:	nop    DWORD PTR [rax+0x0]
  406330:	lea    rbx,[rip+0x6c91]        # 0x40cfc8
  406337:	jmp    0x4062a0
  40633c:	nop    DWORD PTR [rax+0x0]
  406340:	lea    rbx,[rip+0x6c59]        # 0x40cfa0
  406347:	jmp    0x4062a0
  40634c:	nop    DWORD PTR [rax+0x0]
  406350:	lea    rbx,[rip+0x6ccf]        # 0x40d026
  406357:	jmp    0x4062a0
  40635c:	nop
  40635d:	nop
  40635e:	nop
  40635f:	nop
  406360:	fninit 
  406362:	ret    
  406363:	nop
  406364:	nop
  406365:	nop
  406366:	nop
  406367:	nop
  406368:	nop
  406369:	nop
  40636a:	nop
  40636b:	nop
  40636c:	nop
  40636d:	nop
  40636e:	nop
  40636f:	nop
  406370:	mov    rax,rcx
  406373:	ret    
  406374:	xchg   ax,ax
  406376:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406380:	mov    rax,rcx
  406383:	ret    
  406384:	nop
  406385:	nop
  406386:	nop
  406387:	nop
  406388:	nop
  406389:	nop
  40638a:	nop
  40638b:	nop
  40638c:	nop
  40638d:	nop
  40638e:	nop
  40638f:	nop
  406390:	push   rsi
  406391:	push   rbx
  406392:	sub    rsp,0x38
  406396:	lea    rax,[rsp+0x58]
  40639b:	mov    rbx,rcx
  40639e:	mov    QWORD PTR [rsp+0x58],rdx
  4063a3:	mov    QWORD PTR [rsp+0x60],r8
  4063a8:	mov    QWORD PTR [rsp+0x68],r9
  4063ad:	mov    QWORD PTR [rsp+0x28],rax
  4063b2:	call   0x407648
  4063b7:	lea    rcx,[rip+0x6cc2]        # 0x40d080
  4063be:	lea    r9,[rax+0x60]
  4063c2:	mov    r8d,0x1b
  4063c8:	mov    edx,0x1
  4063cd:	call   0x407560
  4063d2:	mov    rsi,QWORD PTR [rsp+0x28]
  4063d7:	call   0x407648
  4063dc:	lea    rcx,[rax+0x60]
  4063e0:	mov    rdx,rbx
  4063e3:	mov    r8,rsi
  4063e6:	call   0x407498
  4063eb:	call   0x4075c0
  4063f0:	nop
  4063f1:	nop    DWORD PTR [rax+rax*1+0x0]
  4063f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406400:	push   r13
  406402:	push   r12
  406404:	push   rbp
  406405:	push   rdi
  406406:	push   rsi
  406407:	push   rbx
  406408:	sub    rsp,0x58
  40640c:	movsxd rbp,DWORD PTR [rip+0xa331]        # 0x410744
  406413:	mov    rbx,rcx
  406416:	mov    rsi,rdx
  406419:	mov    rdi,r8
  40641c:	test   ebp,ebp
  40641e:	jle    0x40651a
  406424:	mov    rax,QWORD PTR [rip+0xa31d]        # 0x410748
  40642b:	xor    r9d,r9d
  40642e:	add    rax,0x8
  406432:	mov    r10,QWORD PTR [rax]
  406435:	cmp    rbx,r10
  406438:	jb     0x40644e
  40643a:	mov    rdx,QWORD PTR [rax+0x8]
  40643e:	mov    r11d,DWORD PTR [rdx+0x8]
  406442:	add    r10,r11
  406445:	cmp    rbx,r10
  406448:	jb     0x406500
  40644e:	add    r9d,0x1
  406452:	add    rax,0x18
  406456:	cmp    r9d,ebp
  406459:	jne    0x406432
  40645b:	mov    rcx,rbx
  40645e:	call   0x407070
  406463:	test   rax,rax
  406466:	mov    r12,rax
  406469:	je     0x406552
  40646f:	lea    rbp,[rbp+rbp*2+0x0]
  406474:	shl    rbp,0x3
  406478:	mov    r13,rbp
  40647b:	add    r13,QWORD PTR [rip+0xa2c6]        # 0x410748
  406482:	mov    QWORD PTR [r13+0x10],rax
  406486:	mov    DWORD PTR [r13+0x0],0x0
  40648e:	call   0x407190
  406493:	mov    edx,DWORD PTR [r12+0xc]
  406498:	mov    r8d,0x30
  40649e:	add    rax,rdx
  4064a1:	lea    rdx,[rsp+0x20]
  4064a6:	mov    QWORD PTR [r13+0x8],rax
  4064aa:	mov    rax,QWORD PTR [rip+0xa297]        # 0x410748
  4064b1:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  4064b6:	call   QWORD PTR [rip+0xafa0]        # 0x41145c
  4064bc:	test   rax,rax
  4064bf:	je     0x406535
  4064c1:	mov    eax,DWORD PTR [rsp+0x44]
  4064c5:	lea    edx,[rax-0x4]
  4064c8:	and    edx,0xfffffffb
  4064cb:	je     0x4064f9
  4064cd:	sub    eax,0x40
  4064d0:	and    eax,0xffffffbf
  4064d3:	je     0x4064f9
  4064d5:	mov    r9,rbp
  4064d8:	add    r9,QWORD PTR [rip+0xa269]        # 0x410748
  4064df:	mov    r8d,0x40
  4064e5:	mov    rdx,QWORD PTR [rsp+0x38]
  4064ea:	mov    rcx,QWORD PTR [rsp+0x20]
  4064ef:	call   QWORD PTR [rip+0xaf5f]        # 0x411454
  4064f5:	test   eax,eax
  4064f7:	je     0x406521
  4064f9:	add    DWORD PTR [rip+0xa244],0x1        # 0x410744
  406500:	mov    r8,rdi
  406503:	mov    rdx,rsi
  406506:	mov    rcx,rbx
  406509:	add    rsp,0x58
  40650d:	pop    rbx
  40650e:	pop    rsi
  40650f:	pop    rdi
  406510:	pop    rbp
  406511:	pop    r12
  406513:	pop    r13
  406515:	jmp    0x407548
  40651a:	xor    ebp,ebp
  40651c:	jmp    0x40645b
  406521:	call   QWORD PTR [rip+0xae8d]        # 0x4113b4
  406527:	lea    rcx,[rip+0x6bca]        # 0x40d0f8
  40652e:	mov    edx,eax
  406530:	call   0x406390
  406535:	mov    rax,QWORD PTR [rip+0xa20c]        # 0x410748
  40653c:	mov    edx,DWORD PTR [r12+0x8]
  406541:	lea    rcx,[rip+0x6b78]        # 0x40d0c0
  406548:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  40654d:	call   0x406390
  406552:	lea    rcx,[rip+0x6b47]        # 0x40d0a0
  406559:	mov    rdx,rbx
  40655c:	call   0x406390
  406561:	nop
  406562:	nop    DWORD PTR [rax+0x0]
  406566:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406570:	push   rbp
  406571:	push   r14
  406573:	push   r13
  406575:	push   r12
  406577:	push   rdi
  406578:	push   rsi
  406579:	push   rbx
  40657a:	mov    rbp,rsp
  40657d:	sub    rsp,0x60
  406581:	mov    ebx,DWORD PTR [rip+0xa1b9]        # 0x410740
  406587:	test   ebx,ebx
  406589:	je     0x4065a0
  40658b:	mov    rsp,rbp
  40658e:	pop    rbx
  40658f:	pop    rsi
  406590:	pop    rdi
  406591:	pop    r12
  406593:	pop    r13
  406595:	pop    r14
  406597:	pop    rbp
  406598:	ret    
  406599:	nop    DWORD PTR [rax+0x0]
  4065a0:	mov    DWORD PTR [rip+0xa196],0x1        # 0x410740
  4065aa:	call   0x4070c0
  4065af:	cdqe   
  4065b1:	lea    rax,[rax+rax*2]
  4065b5:	lea    rax,[rax*8+0x1e]
  4065bd:	and    rax,0xfffffffffffffff0
  4065c1:	call   0x4072e0
  4065c6:	mov    rsi,QWORD PTR [rip+0x6c03]        # 0x40d1d0
  4065cd:	mov    rbx,QWORD PTR [rip+0x6c0c]        # 0x40d1e0
  4065d4:	sub    rsp,rax
  4065d7:	mov    DWORD PTR [rip+0xa163],0x0        # 0x410744
  4065e1:	lea    rax,[rsp+0x20]
  4065e6:	mov    QWORD PTR [rip+0xa15b],rax        # 0x410748
  4065ed:	mov    rax,rsi
  4065f0:	sub    rax,rbx
  4065f3:	cmp    rax,0x7
  4065f7:	jle    0x40658b
  4065f9:	cmp    rax,0xb
  4065fd:	jle    0x406625
  4065ff:	mov    r11d,DWORD PTR [rbx]
  406602:	test   r11d,r11d
  406605:	jne    0x406750
  40660b:	mov    r10d,DWORD PTR [rbx+0x4]
  40660f:	test   r10d,r10d
  406612:	jne    0x406750
  406618:	mov    r9d,DWORD PTR [rbx+0x8]
  40661c:	test   r9d,r9d
  40661f:	jne    0x40663c
  406621:	add    rbx,0xc
  406625:	mov    r8d,DWORD PTR [rbx]
  406628:	test   r8d,r8d
  40662b:	jne    0x406750
  406631:	mov    ecx,DWORD PTR [rbx+0x4]
  406634:	test   ecx,ecx
  406636:	jne    0x406750
  40663c:	mov    edx,DWORD PTR [rbx+0x8]
  40663f:	cmp    edx,0x1
  406642:	jne    0x40685c
  406648:	add    rbx,0xc
  40664c:	cmp    rbx,rsi
  40664f:	jae    0x40658b
  406655:	mov    r12,QWORD PTR [rip+0x6ba4]        # 0x40d200
  40665c:	lea    r13,[rbp-0x30]
  406660:	movabs r14,0xffffffff00000000
  40666a:	mov    ecx,DWORD PTR [rbx+0x4]
  40666d:	mov    eax,DWORD PTR [rbx]
  40666f:	movzx  edx,BYTE PTR [rbx+0x8]
  406673:	add    rax,r12
  406676:	add    rcx,r12
  406679:	cmp    edx,0x10
  40667c:	mov    r8,QWORD PTR [rax]
  40667f:	je     0x4067c6
  406685:	jbe    0x40678d
  40668b:	cmp    edx,0x20
  40668e:	je     0x40680f
  406694:	cmp    edx,0x40
  406697:	jne    0x4067fb
  40669d:	sub    r8,rax
  4066a0:	mov    rdx,r13
  4066a3:	mov    rdi,r13
  4066a6:	mov    rax,r8
  4066a9:	add    rax,QWORD PTR [rcx]
  4066ac:	mov    r8d,0x8
  4066b2:	mov    QWORD PTR [rbp-0x30],rax
  4066b6:	call   0x406400
  4066bb:	add    rbx,0xc
  4066bf:	cmp    rbx,rsi
  4066c2:	jb     0x40666a
  4066c4:	mov    eax,DWORD PTR [rip+0xa07a]        # 0x410744
  4066ca:	xor    ebx,ebx
  4066cc:	xor    esi,esi
  4066ce:	test   eax,eax
  4066d0:	jle    0x40658b
  4066d6:	mov    r14,QWORD PTR [rip+0xad7f]        # 0x41145c
  4066dd:	lea    r13,[rbp-0x34]
  4066e1:	mov    r12,QWORD PTR [rip+0xad6c]        # 0x411454
  4066e8:	jmp    0x406703
  4066ea:	nop    WORD PTR [rax+rax*1+0x0]
  4066f0:	add    esi,0x1
  4066f3:	add    rbx,0x18
  4066f7:	cmp    esi,DWORD PTR [rip+0xa047]        # 0x410744
  4066fd:	jge    0x40658b
  406703:	mov    rax,rbx
  406706:	add    rax,QWORD PTR [rip+0xa03b]        # 0x410748
  40670d:	mov    edx,DWORD PTR [rax]
  40670f:	test   edx,edx
  406711:	je     0x4066f0
  406713:	mov    rcx,QWORD PTR [rax+0x8]
  406717:	mov    r8d,0x30
  40671d:	mov    rdx,rdi
  406720:	call   r14
  406723:	test   rax,rax
  406726:	je     0x40683e
  40672c:	mov    rax,QWORD PTR [rip+0xa015]        # 0x410748
  406733:	mov    r9,r13
  406736:	mov    rdx,QWORD PTR [rbp-0x18]
  40673a:	mov    rcx,QWORD PTR [rbp-0x30]
  40673e:	mov    r8d,DWORD PTR [rax+rbx*1]
  406742:	call   r12
  406745:	jmp    0x4066f0
  406747:	nop    WORD PTR [rax+rax*1+0x0]
  406750:	cmp    rbx,rsi
  406753:	jae    0x40658b
  406759:	mov    r12,QWORD PTR [rip+0x6aa0]        # 0x40d200
  406760:	lea    rdi,[rbp-0x30]
  406764:	mov    ecx,DWORD PTR [rbx+0x4]
  406767:	mov    eax,DWORD PTR [rbx]
  406769:	mov    r8d,0x4
  40676f:	mov    rdx,rdi
  406772:	add    rbx,0x8
  406776:	add    rcx,r12
  406779:	add    eax,DWORD PTR [rcx]
  40677b:	mov    DWORD PTR [rbp-0x30],eax
  40677e:	call   0x406400
  406783:	cmp    rbx,rsi
  406786:	jb     0x406764
  406788:	jmp    0x4066c4
  40678d:	cmp    edx,0x8
  406790:	jne    0x4067fb
  406792:	movzx  edx,BYTE PTR [rcx]
  406795:	mov    rdi,r13
  406798:	mov    r10,rdx
  40679b:	or     r10,0xffffffffffffff00
  4067a2:	test   dl,dl
  4067a4:	cmovs  rdx,r10
  4067a8:	sub    rdx,rax
  4067ab:	lea    rax,[r8+rdx*1]
  4067af:	mov    r8d,0x1
  4067b5:	mov    rdx,r13
  4067b8:	mov    QWORD PTR [rbp-0x30],rax
  4067bc:	call   0x406400
  4067c1:	jmp    0x4066bb
  4067c6:	movzx  edx,WORD PTR [rcx]
  4067c9:	mov    rdi,r13
  4067cc:	mov    r10,rdx
  4067cf:	or     r10,0xffffffffffff0000
  4067d6:	test   dx,dx
  4067d9:	cmovs  rdx,r10
  4067dd:	sub    rdx,rax
  4067e0:	lea    rax,[r8+rdx*1]
  4067e4:	mov    r8d,0x2
  4067ea:	mov    rdx,r13
  4067ed:	mov    QWORD PTR [rbp-0x30],rax
  4067f1:	call   0x406400
  4067f6:	jmp    0x4066bb
  4067fb:	lea    rcx,[rip+0x6956]        # 0x40d158
  406802:	mov    QWORD PTR [rbp-0x30],0x0
  40680a:	call   0x406390
  40680f:	mov    edx,DWORD PTR [rcx]
  406811:	mov    rdi,r13
  406814:	mov    r10,rdx
  406817:	or     r10,r14
  40681a:	test   edx,edx
  40681c:	cmovs  rdx,r10
  406820:	sub    rdx,rax
  406823:	lea    rax,[r8+rdx*1]
  406827:	mov    r8d,0x4
  40682d:	mov    rdx,r13
  406830:	mov    QWORD PTR [rbp-0x30],rax
  406834:	call   0x406400
  406839:	jmp    0x4066bb
  40683e:	add    rbx,QWORD PTR [rip+0x9f03]        # 0x410748
  406845:	lea    rcx,[rip+0x6874]        # 0x40d0c0
  40684c:	mov    rax,QWORD PTR [rbx+0x10]
  406850:	mov    r8,QWORD PTR [rbx+0x8]
  406854:	mov    edx,DWORD PTR [rax+0x8]
  406857:	call   0x406390
  40685c:	lea    rcx,[rip+0x68bd]        # 0x40d120
  406863:	call   0x406390
  406868:	nop
  406869:	nop
  40686a:	nop
  40686b:	nop
  40686c:	nop
  40686d:	nop
  40686e:	nop
  40686f:	nop
  406870:	sub    rsp,0x28
  406874:	mov    eax,DWORD PTR [rcx]
  406876:	cmp    eax,0xc0000091
  40687b:	ja     0x4068e0
  40687d:	cmp    eax,0xc000008d
  406882:	jae    0x4068ff
  406884:	cmp    eax,0xc0000008
  406889:	je     0x4069a0
  40688f:	ja     0x406970
  406895:	cmp    eax,0x80000002
  40689a:	je     0x4069a0
  4068a0:	cmp    eax,0xc0000005
  4068a5:	jne    0x40697e
  4068ab:	xor    edx,edx
  4068ad:	mov    ecx,0xb
  4068b2:	call   0x407500
  4068b7:	cmp    rax,0x1
  4068bb:	je     0x406a00
  4068c1:	test   rax,rax
  4068c4:	je     0x4069e0
  4068ca:	mov    ecx,0xb
  4068cf:	call   rax
  4068d1:	xor    eax,eax
  4068d3:	add    rsp,0x28
  4068d7:	ret    
  4068d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4068e0:	cmp    eax,0xc0000094
  4068e5:	je     0x4069b0
  4068eb:	ja     0x406930
  4068ed:	cmp    eax,0xc0000092
  4068f2:	je     0x4069a0
  4068f8:	cmp    eax,0xc0000093
  4068fd:	jne    0x40697e
  4068ff:	xor    edx,edx
  406901:	mov    ecx,0x8
  406906:	call   0x407500
  40690b:	cmp    rax,0x1
  40690f:	mov    rdx,rax
  406912:	je     0x406988
  406914:	test   rdx,rdx
  406917:	mov    eax,0x1
  40691c:	je     0x4068d3
  40691e:	mov    ecx,0x8
  406923:	call   rdx
  406925:	xor    eax,eax
  406927:	add    rsp,0x28
  40692b:	ret    
  40692c:	nop    DWORD PTR [rax+0x0]
  406930:	cmp    eax,0xc0000095
  406935:	je     0x4069a0
  406937:	cmp    eax,0xc0000096
  40693c:	jne    0x40697e
  40693e:	xor    edx,edx
  406940:	mov    ecx,0x4
  406945:	call   0x407500
  40694a:	cmp    rax,0x1
  40694e:	je     0x4069ea
  406954:	test   rax,rax
  406957:	je     0x4069e0
  40695d:	mov    ecx,0x4
  406962:	call   rax
  406964:	xor    eax,eax
  406966:	jmp    0x4068d3
  40696b:	nop    DWORD PTR [rax+rax*1+0x0]
  406970:	cmp    eax,0xc000001d
  406975:	je     0x40693e
  406977:	cmp    eax,0xc000008c
  40697c:	je     0x4069a0
  40697e:	mov    eax,0x1
  406983:	add    rsp,0x28
  406987:	ret    
  406988:	mov    edx,0x1
  40698d:	mov    ecx,0x8
  406992:	call   0x407500
  406997:	call   0x406360
  40699c:	nop    DWORD PTR [rax+0x0]
  4069a0:	xor    eax,eax
  4069a2:	add    rsp,0x28
  4069a6:	ret    
  4069a7:	nop    WORD PTR [rax+rax*1+0x0]
  4069b0:	xor    edx,edx
  4069b2:	mov    ecx,0x8
  4069b7:	call   0x407500
  4069bc:	cmp    rax,0x1
  4069c0:	mov    rdx,rax
  4069c3:	jne    0x406914
  4069c9:	mov    edx,0x1
  4069ce:	mov    ecx,0x8
  4069d3:	call   0x407500
  4069d8:	xor    eax,eax
  4069da:	jmp    0x4068d3
  4069df:	nop
  4069e0:	mov    eax,0x4
  4069e5:	add    rsp,0x28
  4069e9:	ret    
  4069ea:	mov    edx,0x1
  4069ef:	mov    ecx,0x4
  4069f4:	call   0x407500
  4069f9:	xor    eax,eax
  4069fb:	jmp    0x4068d3
  406a00:	mov    edx,0x1
  406a05:	mov    ecx,0xb
  406a0a:	call   0x407500
  406a0f:	xor    eax,eax
  406a11:	jmp    0x4068d3
  406a16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406a20:	push   r12
  406a22:	push   rbp
  406a23:	push   rdi
  406a24:	push   rsi
  406a25:	push   rbx
  406a26:	sub    rsp,0x20
  406a2a:	call   0x407190
  406a2f:	mov    rbp,rax
  406a32:	mov    eax,DWORD PTR [rip+0x9d50]        # 0x410788
  406a38:	test   eax,eax
  406a3a:	jne    0x406a61
  406a3c:	test   rbp,rbp
  406a3f:	je     0x406a61
  406a41:	lea    rcx,[rip+0x6748]        # 0x40d190
  406a48:	mov    DWORD PTR [rip+0x9d36],0x1        # 0x410788
  406a52:	call   0x406fd0
  406a57:	test   rax,rax
  406a5a:	je     0x406a70
  406a5c:	mov    eax,0x1
  406a61:	add    rsp,0x20
  406a65:	pop    rbx
  406a66:	pop    rsi
  406a67:	pop    rdi
  406a68:	pop    rbp
  406a69:	pop    r12
  406a6b:	ret    
  406a6c:	nop    DWORD PTR [rax+0x0]
  406a70:	lea    rbx,[rip+0x9e49]        # 0x4108c0
  406a77:	mov    ecx,0x30
  406a7c:	lea    rdx,[rip+0x9d3d]        # 0x4107c0
  406a83:	lea    r12,[rip+0xfffffffffffffde6]        # 0x406870
  406a8a:	xor    esi,esi
  406a8c:	mov    rdi,rbx
  406a8f:	rep stos QWORD PTR es:[rdi],rax
  406a92:	mov    rdi,rdx
  406a95:	sub    r12,rbp
  406a98:	mov    cl,0x20
  406a9a:	rep stos QWORD PTR es:[rdi],rax
  406a9d:	mov    rdi,rdx
  406aa0:	jmp    0x406ad0
  406aa2:	mov    BYTE PTR [rdi],0x9
  406aa5:	mov    DWORD PTR [rdi+0x4],r12d
  406aa9:	add    rsi,0x1
  406aad:	mov    edx,DWORD PTR [rax+0xc]
  406ab0:	add    rbx,0xc
  406ab4:	mov    DWORD PTR [rbx-0xc],edx
  406ab7:	add    edx,DWORD PTR [rax+0x8]
  406aba:	mov    rax,rdi
  406abd:	sub    rax,rbp
  406ac0:	add    rdi,0x8
  406ac4:	mov    DWORD PTR [rbx-0x4],eax
  406ac7:	mov    DWORD PTR [rbx-0x8],edx
  406aca:	cmp    rsi,0x20
  406ace:	je     0x406b05
  406ad0:	mov    rcx,rsi
  406ad3:	call   0x407100
  406ad8:	test   rax,rax
  406adb:	jne    0x406aa2
  406add:	test   rsi,rsi
  406ae0:	je     0x406a5c
  406ae6:	mov    edx,esi
  406ae8:	nop    DWORD PTR [rax+rax*1+0x0]
  406af0:	mov    r8,rbp
  406af3:	lea    rcx,[rip+0x9dc6]        # 0x4108c0
  406afa:	call   QWORD PTR [rip+0xa904]        # 0x411404
  406b00:	jmp    0x406a5c
  406b05:	mov    edx,0x20
  406b0a:	jmp    0x406af0
  406b0c:	nop    DWORD PTR [rax+0x0]
  406b10:	push   rbx
  406b11:	sub    rsp,0x20
  406b15:	mov    rdx,QWORD PTR [rcx]
  406b18:	mov    eax,DWORD PTR [rdx]
  406b1a:	mov    r8d,eax
  406b1d:	and    r8d,0x20ffffff
  406b24:	cmp    r8d,0x20474343
  406b2b:	je     0x406c30
  406b31:	cmp    eax,0xc0000091
  406b36:	mov    rbx,rcx
  406b39:	ja     0x406bc0
  406b3f:	cmp    eax,0xc000008d
  406b44:	jae    0x406bd7
  406b4a:	cmp    eax,0xc0000008
  406b4f:	je     0x406b83
  406b51:	ja     0x406b90
  406b53:	cmp    eax,0x80000002
  406b58:	je     0x406b83
  406b5a:	cmp    eax,0xc0000005
  406b5f:	jne    0x406ba2
  406b61:	xor    edx,edx
  406b63:	mov    ecx,0xb
  406b68:	call   0x407500
  406b6d:	cmp    rax,0x1
  406b71:	je     0x406ca0
  406b77:	test   rax,rax
  406b7a:	je     0x406ba2
  406b7c:	mov    ecx,0xb
  406b81:	call   rax
  406b83:	mov    eax,0xffffffff
  406b88:	add    rsp,0x20
  406b8c:	pop    rbx
  406b8d:	ret    
  406b8e:	xchg   ax,ax
  406b90:	cmp    eax,0xc000001d
  406b95:	je     0x406c56
  406b9b:	cmp    eax,0xc000008c
  406ba0:	je     0x406b83
  406ba2:	mov    rax,QWORD PTR [rip+0x9bd7]        # 0x410780
  406ba9:	test   rax,rax
  406bac:	je     0x406b88
  406bae:	mov    rcx,rbx
  406bb1:	add    rsp,0x20
  406bb5:	pop    rbx
  406bb6:	rex.W jmp rax
  406bb9:	nop    DWORD PTR [rax+0x0]
  406bc0:	cmp    eax,0xc0000094
  406bc5:	je     0x406c02
  406bc7:	ja     0x406c40
  406bc9:	cmp    eax,0xc0000092
  406bce:	je     0x406b83
  406bd0:	cmp    eax,0xc0000093
  406bd5:	jne    0x406ba2
  406bd7:	xor    edx,edx
  406bd9:	mov    ecx,0x8
  406bde:	call   0x407500
  406be3:	cmp    rax,0x1
  406be7:	jne    0x406c14
  406be9:	mov    edx,0x1
  406bee:	mov    ecx,0x8
  406bf3:	call   0x407500
  406bf8:	call   0x406360
  406bfd:	jmp    0x406b83
  406c02:	xor    edx,edx
  406c04:	mov    ecx,0x8
  406c09:	call   0x407500
  406c0e:	cmp    rax,0x1
  406c12:	je     0x406c82
  406c14:	test   rax,rax
  406c17:	je     0x406ba2
  406c19:	mov    ecx,0x8
  406c1e:	call   rax
  406c20:	mov    eax,0xffffffff
  406c25:	jmp    0x406b88
  406c2a:	nop    WORD PTR [rax+rax*1+0x0]
  406c30:	test   BYTE PTR [rdx+0x4],0x1
  406c34:	jne    0x406b31
  406c3a:	jmp    0x406b83
  406c3f:	nop
  406c40:	cmp    eax,0xc0000095
  406c45:	je     0x406b83
  406c4b:	cmp    eax,0xc0000096
  406c50:	jne    0x406ba2
  406c56:	xor    edx,edx
  406c58:	mov    ecx,0x4
  406c5d:	call   0x407500
  406c62:	cmp    rax,0x1
  406c66:	je     0x406cb4
  406c68:	test   rax,rax
  406c6b:	je     0x406ba2
  406c71:	mov    ecx,0x4
  406c76:	call   rax
  406c78:	mov    eax,0xffffffff
  406c7d:	jmp    0x406b88
  406c82:	mov    edx,0x1
  406c87:	mov    ecx,0x8
  406c8c:	call   0x407500
  406c91:	jmp    0x406b83
  406c96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406ca0:	mov    edx,0x1
  406ca5:	mov    ecx,0xb
  406caa:	call   0x407500
  406caf:	jmp    0x406b83
  406cb4:	mov    edx,0x1
  406cb9:	mov    ecx,0x4
  406cbe:	call   0x407500
  406cc3:	jmp    0x406b83
  406cc8:	nop
  406cc9:	nop
  406cca:	nop
  406ccb:	nop
  406ccc:	nop
  406ccd:	nop
  406cce:	nop
  406ccf:	nop
  406cd0:	push   rbp
  406cd1:	push   rdi
  406cd2:	push   rsi
  406cd3:	push   rbx
  406cd4:	sub    rsp,0x28
  406cd8:	lea    rcx,[rip+0x9d81]        # 0x410a60
  406cdf:	call   QWORD PTR [rip+0xa6a7]        # 0x41138c
  406ce5:	mov    rbx,QWORD PTR [rip+0x9d54]        # 0x410a40
  406cec:	test   rbx,rbx
  406cef:	je     0x406d24
  406cf1:	mov    rbp,QWORD PTR [rip+0xa74c]        # 0x411444
  406cf8:	mov    rdi,QWORD PTR [rip+0xa6b5]        # 0x4113b4
  406cff:	nop
  406d00:	mov    ecx,DWORD PTR [rbx]
  406d02:	call   rbp
  406d04:	mov    rsi,rax
  406d07:	call   rdi
  406d09:	test   eax,eax
  406d0b:	jne    0x406d1b
  406d0d:	test   rsi,rsi
  406d10:	je     0x406d1b
  406d12:	mov    rax,QWORD PTR [rbx+0x8]
  406d16:	mov    rcx,rsi
  406d19:	call   rax
  406d1b:	mov    rbx,QWORD PTR [rbx+0x10]
  406d1f:	test   rbx,rbx
  406d22:	jne    0x406d00
  406d24:	mov    rax,QWORD PTR [rip+0xa6c9]        # 0x4113f4
  406d2b:	lea    rcx,[rip+0x9d2e]        # 0x410a60
  406d32:	add    rsp,0x28
  406d36:	pop    rbx
  406d37:	pop    rsi
  406d38:	pop    rdi
  406d39:	pop    rbp
  406d3a:	rex.W jmp rax
  406d3d:	nop    DWORD PTR [rax]
  406d40:	push   rdi
  406d41:	push   rsi
  406d42:	push   rbx
  406d43:	sub    rsp,0x20
  406d47:	mov    eax,DWORD PTR [rip+0x9cfb]        # 0x410a48
  406d4d:	test   eax,eax
  406d4f:	jne    0x406d60
  406d51:	add    rsp,0x20
  406d55:	pop    rbx
  406d56:	pop    rsi
  406d57:	pop    rdi
  406d58:	ret    
  406d59:	nop    DWORD PTR [rax+0x0]
  406d60:	mov    rsi,rdx
  406d63:	mov    edi,ecx
  406d65:	mov    edx,0x18
  406d6a:	mov    ecx,0x1
  406d6f:	call   0x4075b8
  406d74:	test   rax,rax
  406d77:	mov    rbx,rax
  406d7a:	je     0x406db8
  406d7c:	mov    DWORD PTR [rax],edi
  406d7e:	mov    QWORD PTR [rax+0x8],rsi
  406d82:	lea    rcx,[rip+0x9cd7]        # 0x410a60
  406d89:	call   QWORD PTR [rip+0xa5fd]        # 0x41138c
  406d8f:	mov    rax,QWORD PTR [rip+0x9caa]        # 0x410a40
  406d96:	lea    rcx,[rip+0x9cc3]        # 0x410a60
  406d9d:	mov    QWORD PTR [rip+0x9c9c],rbx        # 0x410a40
  406da4:	mov    QWORD PTR [rbx+0x10],rax
  406da8:	call   QWORD PTR [rip+0xa646]        # 0x4113f4
  406dae:	xor    eax,eax
  406db0:	add    rsp,0x20
  406db4:	pop    rbx
  406db5:	pop    rsi
  406db6:	pop    rdi
  406db7:	ret    
  406db8:	mov    eax,0xffffffff
  406dbd:	jmp    0x406d51
  406dbf:	nop
  406dc0:	push   rbx
  406dc1:	sub    rsp,0x20
  406dc5:	mov    eax,DWORD PTR [rip+0x9c7d]        # 0x410a48
  406dcb:	test   eax,eax
  406dcd:	jne    0x406de0
  406dcf:	xor    eax,eax
  406dd1:	add    rsp,0x20
  406dd5:	pop    rbx
  406dd6:	ret    
  406dd7:	nop    WORD PTR [rax+rax*1+0x0]
  406de0:	mov    ebx,ecx
  406de2:	lea    rcx,[rip+0x9c77]        # 0x410a60
  406de9:	call   QWORD PTR [rip+0xa59d]        # 0x41138c
  406def:	mov    rdx,QWORD PTR [rip+0x9c4a]        # 0x410a40
  406df6:	test   rdx,rdx
  406df9:	je     0x406e17
  406dfb:	mov    eax,DWORD PTR [rdx]
  406dfd:	cmp    eax,ebx
  406dff:	jne    0x406e0e
  406e01:	jmp    0x406e4f
  406e03:	mov    r8d,DWORD PTR [rax]
  406e06:	cmp    r8d,ebx
  406e09:	je     0x406e30
  406e0b:	mov    rdx,rax
  406e0e:	mov    rax,QWORD PTR [rdx+0x10]
  406e12:	test   rax,rax
  406e15:	jne    0x406e03
  406e17:	lea    rcx,[rip+0x9c42]        # 0x410a60
  406e1e:	call   QWORD PTR [rip+0xa5d0]        # 0x4113f4
  406e24:	xor    eax,eax
  406e26:	add    rsp,0x20
  406e2a:	pop    rbx
  406e2b:	ret    
  406e2c:	nop    DWORD PTR [rax+0x0]
  406e30:	mov    rcx,rax
  406e33:	mov    rax,QWORD PTR [rax+0x10]
  406e37:	mov    QWORD PTR [rdx+0x10],rax
  406e3b:	call   0x407578
  406e40:	lea    rcx,[rip+0x9c19]        # 0x410a60
  406e47:	call   QWORD PTR [rip+0xa5a7]        # 0x4113f4
  406e4d:	jmp    0x406e24
  406e4f:	mov    rax,QWORD PTR [rdx+0x10]
  406e53:	mov    rcx,rdx
  406e56:	mov    QWORD PTR [rip+0x9be3],rax        # 0x410a40
  406e5d:	jmp    0x406e3b
  406e5f:	nop
  406e60:	push   rbx
  406e61:	sub    rsp,0x20
  406e65:	cmp    edx,0x1
  406e68:	je     0x406f00
  406e6e:	jb     0x406ea0
  406e70:	cmp    edx,0x2
  406e73:	je     0x406e90
  406e75:	cmp    edx,0x3
  406e78:	jne    0x406e95
  406e7a:	mov    eax,DWORD PTR [rip+0x9bc8]        # 0x410a48
  406e80:	test   eax,eax
  406e82:	je     0x406e95
  406e84:	call   0x406cd0
  406e89:	jmp    0x406e95
  406e8b:	nop    DWORD PTR [rax+rax*1+0x0]
  406e90:	call   0x406360
  406e95:	mov    eax,0x1
  406e9a:	add    rsp,0x20
  406e9e:	pop    rbx
  406e9f:	ret    
  406ea0:	mov    eax,DWORD PTR [rip+0x9ba2]        # 0x410a48
  406ea6:	test   eax,eax
  406ea8:	jne    0x406f30
  406eae:	mov    eax,DWORD PTR [rip+0x9b94]        # 0x410a48
  406eb4:	cmp    eax,0x1
  406eb7:	jne    0x406e95
  406eb9:	mov    rcx,QWORD PTR [rip+0x9b80]        # 0x410a40
  406ec0:	test   rcx,rcx
  406ec3:	je     0x406ed6
  406ec5:	mov    rbx,QWORD PTR [rcx+0x10]
  406ec9:	call   0x407578
  406ece:	test   rbx,rbx
  406ed1:	mov    rcx,rbx
  406ed4:	jne    0x406ec5
  406ed6:	lea    rcx,[rip+0x9b83]        # 0x410a60
  406edd:	mov    QWORD PTR [rip+0x9b58],0x0        # 0x410a40
  406ee8:	mov    DWORD PTR [rip+0x9b56],0x0        # 0x410a48
  406ef2:	call   QWORD PTR [rip+0xa48c]        # 0x411384
  406ef8:	jmp    0x406e95
  406efa:	nop    WORD PTR [rax+rax*1+0x0]
  406f00:	mov    eax,DWORD PTR [rip+0x9b42]        # 0x410a48
  406f06:	test   eax,eax
  406f08:	je     0x406f20
  406f0a:	mov    eax,0x1
  406f0f:	mov    DWORD PTR [rip+0x9b2f],0x1        # 0x410a48
  406f19:	add    rsp,0x20
  406f1d:	pop    rbx
  406f1e:	ret    
  406f1f:	nop
  406f20:	lea    rcx,[rip+0x9b39]        # 0x410a60
  406f27:	call   QWORD PTR [rip+0xa4bf]        # 0x4113ec
  406f2d:	jmp    0x406f0a
  406f2f:	nop
  406f30:	call   0x406cd0
  406f35:	jmp    0x406eae
  406f3a:	nop
  406f3b:	nop
  406f3c:	nop
  406f3d:	nop
  406f3e:	nop
  406f3f:	nop
  406f40:	movsxd rax,DWORD PTR [rcx+0x3c]
  406f44:	add    rcx,rax
  406f47:	xor    eax,eax
  406f49:	cmp    DWORD PTR [rcx],0x4550
  406f4f:	je     0x406f53
  406f51:	repz ret 
  406f53:	xor    eax,eax
  406f55:	cmp    WORD PTR [rcx+0x18],0x20b
  406f5b:	sete   al
  406f5e:	ret    
  406f5f:	nop
  406f60:	cmp    WORD PTR [rcx],0x5a4d
  406f65:	je     0x406f70
  406f67:	xor    eax,eax
  406f69:	ret    
  406f6a:	nop    WORD PTR [rax+rax*1+0x0]
  406f70:	jmp    0x406f40
  406f72:	nop    DWORD PTR [rax+0x0]
  406f76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406f80:	movsxd rax,DWORD PTR [rcx+0x3c]
  406f84:	add    rcx,rax
  406f87:	movzx  eax,WORD PTR [rcx+0x14]
  406f8b:	lea    rax,[rcx+rax*1+0x18]
  406f90:	movzx  ecx,WORD PTR [rcx+0x6]
  406f94:	test   ecx,ecx
  406f96:	je     0x406fc1
  406f98:	sub    ecx,0x1
  406f9b:	lea    rcx,[rcx+rcx*4]
  406f9f:	lea    r9,[rax+rcx*8+0x28]
  406fa4:	mov    r8d,DWORD PTR [rax+0xc]
  406fa8:	cmp    r8,rdx
  406fab:	mov    rcx,r8
  406fae:	ja     0x406fb8
  406fb0:	add    ecx,DWORD PTR [rax+0x8]
  406fb3:	cmp    rdx,rcx
  406fb6:	jb     0x406fc3
  406fb8:	add    rax,0x28
  406fbc:	cmp    rax,r9
  406fbf:	jne    0x406fa4
  406fc1:	xor    eax,eax
  406fc3:	repz ret 
  406fc5:	nop
  406fc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406fd0:	push   rdi
  406fd1:	push   rsi
  406fd2:	push   rbx
  406fd3:	sub    rsp,0x20
  406fd7:	mov    rsi,rcx
  406fda:	call   0x4074c8
  406fdf:	cmp    rax,0x8
  406fe3:	ja     0x407000
  406fe5:	mov    rbx,QWORD PTR [rip+0x6214]        # 0x40d200
  406fec:	xor    edi,edi
  406fee:	cmp    WORD PTR [rbx],0x5a4d
  406ff3:	je     0x407010
  406ff5:	mov    rax,rdi
  406ff8:	add    rsp,0x20
  406ffc:	pop    rbx
  406ffd:	pop    rsi
  406ffe:	pop    rdi
  406fff:	ret    
  407000:	xor    edi,edi
  407002:	mov    rax,rdi
  407005:	add    rsp,0x20
  407009:	pop    rbx
  40700a:	pop    rsi
  40700b:	pop    rdi
  40700c:	ret    
  40700d:	nop    DWORD PTR [rax]
  407010:	mov    rcx,rbx
  407013:	call   0x406f40
  407018:	test   eax,eax
  40701a:	je     0x406ff5
  40701c:	movsxd rdx,DWORD PTR [rbx+0x3c]
  407020:	add    rdx,rbx
  407023:	movzx  eax,WORD PTR [rdx+0x14]
  407027:	lea    rbx,[rdx+rax*1+0x18]
  40702c:	movzx  eax,WORD PTR [rdx+0x6]
  407030:	test   eax,eax
  407032:	je     0x406ff5
  407034:	sub    eax,0x1
  407037:	lea    rax,[rax+rax*4]
  40703b:	lea    rdi,[rbx+rax*8+0x28]
  407040:	jmp    0x40704b
  407042:	add    rbx,0x28
  407046:	cmp    rbx,rdi
  407049:	je     0x407000
  40704b:	mov    r8d,0x8
  407051:	mov    rdx,rsi
  407054:	mov    rcx,rbx
  407057:	call   0x4074c0
  40705c:	test   eax,eax
  40705e:	jne    0x407042
  407060:	mov    rdi,rbx
  407063:	mov    rax,rdi
  407066:	add    rsp,0x20
  40706a:	pop    rbx
  40706b:	pop    rsi
  40706c:	pop    rdi
  40706d:	ret    
  40706e:	xchg   ax,ax
  407070:	push   rsi
  407071:	push   rbx
  407072:	sub    rsp,0x28
  407076:	mov    rbx,QWORD PTR [rip+0x6183]        # 0x40d200
  40707d:	cmp    WORD PTR [rbx],0x5a4d
  407082:	je     0x407090
  407084:	xor    eax,eax
  407086:	add    rsp,0x28
  40708a:	pop    rbx
  40708b:	pop    rsi
  40708c:	ret    
  40708d:	nop    DWORD PTR [rax]
  407090:	mov    rsi,rcx
  407093:	mov    rcx,rbx
  407096:	call   0x406f40
  40709b:	test   eax,eax
  40709d:	je     0x407084
  40709f:	sub    rsi,rbx
  4070a2:	mov    rcx,rbx
  4070a5:	mov    rdx,rsi
  4070a8:	add    rsp,0x28
  4070ac:	pop    rbx
  4070ad:	pop    rsi
  4070ae:	jmp    0x406f80
  4070b3:	nop    DWORD PTR [rax]
  4070b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4070c0:	push   rbx
  4070c1:	sub    rsp,0x20
  4070c5:	mov    rbx,QWORD PTR [rip+0x6134]        # 0x40d200
  4070cc:	xor    eax,eax
  4070ce:	cmp    WORD PTR [rbx],0x5a4d
  4070d3:	je     0x4070e0
  4070d5:	add    rsp,0x20
  4070d9:	pop    rbx
  4070da:	ret    
  4070db:	nop    DWORD PTR [rax+rax*1+0x0]
  4070e0:	mov    rcx,rbx
  4070e3:	call   0x406f40
  4070e8:	test   eax,eax
  4070ea:	je     0x4070d5
  4070ec:	movsxd rax,DWORD PTR [rbx+0x3c]
  4070f0:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  4070f5:	add    rsp,0x20
  4070f9:	pop    rbx
  4070fa:	ret    
  4070fb:	nop    DWORD PTR [rax+rax*1+0x0]
  407100:	push   rdi
  407101:	push   rsi
  407102:	push   rbx
  407103:	sub    rsp,0x20
  407107:	mov    rsi,QWORD PTR [rip+0x60f2]        # 0x40d200
  40710e:	xor    edi,edi
  407110:	mov    rbx,rcx
  407113:	cmp    WORD PTR [rsi],0x5a4d
  407118:	je     0x407125
  40711a:	mov    rax,rdi
  40711d:	add    rsp,0x20
  407121:	pop    rbx
  407122:	pop    rsi
  407123:	pop    rdi
  407124:	ret    
  407125:	mov    rcx,rsi
  407128:	call   0x406f40
  40712d:	test   eax,eax
  40712f:	je     0x40711a
  407131:	movsxd rax,DWORD PTR [rsi+0x3c]
  407135:	add    rsi,rax
  407138:	movzx  eax,WORD PTR [rsi+0x14]
  40713c:	lea    rdx,[rsi+rax*1+0x18]
  407141:	movzx  eax,WORD PTR [rsi+0x6]
  407145:	test   eax,eax
  407147:	je     0x40711a
  407149:	sub    eax,0x1
  40714c:	lea    rax,[rax+rax*4]
  407150:	lea    rax,[rdx+rax*8+0x28]
  407155:	test   BYTE PTR [rdx+0x27],0x20
  407159:	je     0x407164
  40715b:	test   rbx,rbx
  40715e:	je     0x407180
  407160:	sub    rbx,0x1
  407164:	add    rdx,0x28
  407168:	cmp    rdx,rax
  40716b:	jne    0x407155
  40716d:	xor    edi,edi
  40716f:	mov    rax,rdi
  407172:	add    rsp,0x20
  407176:	pop    rbx
  407177:	pop    rsi
  407178:	pop    rdi
  407179:	ret    
  40717a:	nop    WORD PTR [rax+rax*1+0x0]
  407180:	mov    rdi,rdx
  407183:	mov    rax,rdi
  407186:	add    rsp,0x20
  40718a:	pop    rbx
  40718b:	pop    rsi
  40718c:	pop    rdi
  40718d:	ret    
  40718e:	xchg   ax,ax
  407190:	push   rsi
  407191:	push   rbx
  407192:	sub    rsp,0x28
  407196:	mov    rsi,QWORD PTR [rip+0x6063]        # 0x40d200
  40719d:	xor    ebx,ebx
  40719f:	cmp    WORD PTR [rsi],0x5a4d
  4071a4:	je     0x4071b0
  4071a6:	mov    rax,rbx
  4071a9:	add    rsp,0x28
  4071ad:	pop    rbx
  4071ae:	pop    rsi
  4071af:	ret    
  4071b0:	mov    rcx,rsi
  4071b3:	call   0x406f40
  4071b8:	test   eax,eax
  4071ba:	cmovne rbx,rsi
  4071be:	mov    rax,rbx
  4071c1:	add    rsp,0x28
  4071c5:	pop    rbx
  4071c6:	pop    rsi
  4071c7:	ret    
  4071c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4071d0:	push   rsi
  4071d1:	push   rbx
  4071d2:	sub    rsp,0x28
  4071d6:	mov    rbx,QWORD PTR [rip+0x6023]        # 0x40d200
  4071dd:	xor    eax,eax
  4071df:	cmp    WORD PTR [rbx],0x5a4d
  4071e4:	je     0x4071f0
  4071e6:	add    rsp,0x28
  4071ea:	pop    rbx
  4071eb:	pop    rsi
  4071ec:	ret    
  4071ed:	nop    DWORD PTR [rax]
  4071f0:	mov    rsi,rcx
  4071f3:	mov    rcx,rbx
  4071f6:	call   0x406f40
  4071fb:	test   eax,eax
  4071fd:	je     0x4071e6
  4071ff:	sub    rsi,rbx
  407202:	mov    rcx,rbx
  407205:	mov    rdx,rsi
  407208:	call   0x406f80
  40720d:	test   rax,rax
  407210:	je     0x407221
  407212:	mov    eax,DWORD PTR [rax+0x24]
  407215:	not    eax
  407217:	shr    eax,0x1f
  40721a:	add    rsp,0x28
  40721e:	pop    rbx
  40721f:	pop    rsi
  407220:	ret    
  407221:	xor    eax,eax
  407223:	jmp    0x4071e6
  407225:	nop
  407226:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407230:	push   rbp
  407231:	push   rdi
  407232:	push   rsi
  407233:	push   rbx
  407234:	sub    rsp,0x28
  407238:	mov    rdi,QWORD PTR [rip+0x5fc1]        # 0x40d200
  40723f:	xor    ebp,ebp
  407241:	mov    esi,ecx
  407243:	cmp    WORD PTR [rdi],0x5a4d
  407248:	je     0x407260
  40724a:	mov    rax,rbp
  40724d:	add    rsp,0x28
  407251:	pop    rbx
  407252:	pop    rsi
  407253:	pop    rdi
  407254:	pop    rbp
  407255:	ret    
  407256:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407260:	mov    rcx,rdi
  407263:	call   0x406f40
  407268:	test   eax,eax
  40726a:	je     0x40724a
  40726c:	movsxd rax,DWORD PTR [rdi+0x3c]
  407270:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  407277:	test   edx,edx
  407279:	je     0x40724a
  40727b:	mov    ebx,edx
  40727d:	mov    rcx,rdi
  407280:	mov    rdx,rbx
  407283:	call   0x406f80
  407288:	test   rax,rax
  40728b:	je     0x40724a
  40728d:	add    rbx,rdi
  407290:	mov    rdx,rbx
  407293:	jne    0x4072a7
  407295:	jmp    0x40724a
  407297:	nop    WORD PTR [rax+rax*1+0x0]
  4072a0:	sub    esi,0x1
  4072a3:	add    rdx,0x14
  4072a7:	mov    ecx,DWORD PTR [rdx+0x4]
  4072aa:	test   ecx,ecx
  4072ac:	jne    0x4072b5
  4072ae:	mov    eax,DWORD PTR [rdx+0xc]
  4072b1:	test   eax,eax
  4072b3:	je     0x4072d0
  4072b5:	test   esi,esi
  4072b7:	jg     0x4072a0
  4072b9:	mov    ebp,DWORD PTR [rdx+0xc]
  4072bc:	add    rbp,rdi
  4072bf:	mov    rax,rbp
  4072c2:	add    rsp,0x28
  4072c6:	pop    rbx
  4072c7:	pop    rsi
  4072c8:	pop    rdi
  4072c9:	pop    rbp
  4072ca:	ret    
  4072cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4072d0:	xor    ebp,ebp
  4072d2:	mov    rax,rbp
  4072d5:	add    rsp,0x28
  4072d9:	pop    rbx
  4072da:	pop    rsi
  4072db:	pop    rdi
  4072dc:	pop    rbp
  4072dd:	ret    
  4072de:	nop
  4072df:	nop
  4072e0:	push   rcx
  4072e1:	push   rax
  4072e2:	cmp    rax,0x1000
  4072e8:	lea    rcx,[rsp+0x18]
  4072ed:	jb     0x407308
  4072ef:	sub    rcx,0x1000
  4072f6:	or     QWORD PTR [rcx],0x0
  4072fa:	sub    rax,0x1000
  407300:	cmp    rax,0x1000
  407306:	ja     0x4072ef
  407308:	sub    rcx,rax
  40730b:	or     QWORD PTR [rcx],0x0
  40730f:	pop    rax
  407310:	pop    rcx
  407311:	ret    
  407312:	nop
  407313:	nop
  407314:	nop
  407315:	nop
  407316:	nop
  407317:	nop
  407318:	nop
  407319:	nop
  40731a:	nop
  40731b:	nop
  40731c:	nop
  40731d:	nop
  40731e:	nop
  40731f:	nop
  407320:	push   rsi
  407321:	push   rbx
  407322:	sub    rsp,0xe8
  407329:	test   rdx,rdx
  40732c:	mov    rbx,rcx
  40732f:	mov    rsi,rdx
  407332:	je     0x407356
  407334:	lea    rcx,[rsp+0x30]
  407339:	call   QWORD PTR [rip+0xa09d]        # 0x4113dc
  40733f:	cmp    eax,0xffffffff
  407342:	je     0x4073b0
  407344:	mov    edx,DWORD PTR [rsp+0x30]
  407348:	cmp    eax,0x2
  40734b:	sete   al
  40734e:	movzx  eax,al
  407351:	mov    DWORD PTR [rsi],edx
  407353:	mov    DWORD PTR [rsi+0x4],eax
  407356:	test   rbx,rbx
  407359:	je     0x40739e
  40735b:	lea    rcx,[rsp+0x20]
  407360:	call   QWORD PTR [rip+0xa05e]        # 0x4113c4
  407366:	movabs r8,0xfe624e212ac18000
  407370:	add    r8,QWORD PTR [rsp+0x20]
  407375:	movabs rdx,0xd6bf94d5e57a42bd
  40737f:	mov    rax,r8
  407382:	mul    rdx
  407385:	shr    rdx,0x17
  407389:	mov    QWORD PTR [rbx],rdx
  40738c:	imul   rdx,rdx,0x989680
  407393:	sub    r8,rdx
  407396:	imul   r8d,r8d,0x64
  40739a:	mov    DWORD PTR [rbx+0x8],r8d
  40739e:	xor    eax,eax
  4073a0:	add    rsp,0xe8
  4073a7:	pop    rbx
  4073a8:	pop    rsi
  4073a9:	ret    
  4073aa:	nop    WORD PTR [rax+rax*1+0x0]
  4073b0:	mov    DWORD PTR [rsi],0x0
  4073b6:	mov    DWORD PTR [rsi+0x4],0x0
  4073bd:	jmp    0x407356
  4073bf:	nop
  4073c0:	push   rbx
  4073c1:	sub    rsp,0x30
  4073c5:	mov    rbx,rcx
  4073c8:	lea    rcx,[rsp+0x20]
  4073cd:	call   0x407320
  4073d2:	test   eax,eax
  4073d4:	mov    r9d,eax
  4073d7:	jne    0x407405
  4073d9:	mov    rax,QWORD PTR [rsp+0x20]
  4073de:	mov    r8d,DWORD PTR [rsp+0x28]
  4073e3:	mov    edx,0x10624dd3
  4073e8:	mov    DWORD PTR [rbx],eax
  4073ea:	mov    eax,r8d
  4073ed:	sar    r8d,0x1f
  4073f1:	imul   edx
  4073f3:	sar    edx,0x6
  4073f6:	sub    edx,r8d
  4073f9:	mov    DWORD PTR [rbx+0x4],edx
  4073fc:	mov    eax,r9d
  4073ff:	add    rsp,0x30
  407403:	pop    rbx
  407404:	ret    
  407405:	mov    r9d,0xffffffff
  40740b:	jmp    0x4073fc
  40740d:	nop    DWORD PTR [rax]
  407410:	push   rbx
  407411:	sub    rsp,0x30
  407415:	mov    rbx,rcx
  407418:	lea    rcx,[rsp+0x20]
  40741d:	call   0x407320
  407422:	test   eax,eax
  407424:	mov    r9d,eax
  407427:	jne    0x407455
  407429:	mov    rax,QWORD PTR [rsp+0x20]
  40742e:	mov    r8d,DWORD PTR [rsp+0x28]
  407433:	mov    edx,0x10624dd3
  407438:	mov    DWORD PTR [rbx],eax
  40743a:	mov    eax,r8d
  40743d:	sar    r8d,0x1f
  407441:	imul   edx
  407443:	sar    edx,0x6
  407446:	sub    edx,r8d
  407449:	mov    DWORD PTR [rbx+0x4],edx
  40744c:	mov    eax,r9d
  40744f:	add    rsp,0x30
  407453:	pop    rbx
  407454:	ret    
  407455:	mov    r9d,0xffffffff
  40745b:	jmp    0x40744c
  40745d:	nop
  40745e:	nop
  40745f:	nop
  407460:	jmp    QWORD PTR [rip+0xa226]        # 0x41168c
  407466:	nop
  407467:	nop
  407468:	jmp    QWORD PTR [rip+0xa216]        # 0x411684
  40746e:	nop
  40746f:	nop
  407470:	jmp    QWORD PTR [rip+0xa206]        # 0x41167c
  407476:	nop
  407477:	nop
  407478:	jmp    QWORD PTR [rip+0xa1f6]        # 0x411674
  40747e:	nop
  40747f:	nop
  407480:	jmp    QWORD PTR [rip+0xa1e6]        # 0x41166c
  407486:	nop
  407487:	nop
  407488:	jmp    QWORD PTR [rip+0xa1d6]        # 0x411664
  40748e:	nop
  40748f:	nop
  407490:	jmp    QWORD PTR [rip+0xa1c6]        # 0x41165c
  407496:	nop
  407497:	nop
  407498:	jmp    QWORD PTR [rip+0xa1b6]        # 0x411654
  40749e:	nop
  40749f:	nop
  4074a0:	jmp    QWORD PTR [rip+0xa1a6]        # 0x41164c
  4074a6:	nop
  4074a7:	nop
  4074a8:	jmp    QWORD PTR [rip+0xa196]        # 0x411644
  4074ae:	nop
  4074af:	nop
  4074b0:	jmp    QWORD PTR [rip+0xa186]        # 0x41163c
  4074b6:	nop
  4074b7:	nop
  4074b8:	jmp    QWORD PTR [rip+0xa176]        # 0x411634
  4074be:	nop
  4074bf:	nop
  4074c0:	jmp    QWORD PTR [rip+0xa166]        # 0x41162c
  4074c6:	nop
  4074c7:	nop
  4074c8:	jmp    QWORD PTR [rip+0xa156]        # 0x411624
  4074ce:	nop
  4074cf:	nop
  4074d0:	jmp    QWORD PTR [rip+0xa146]        # 0x41161c
  4074d6:	nop
  4074d7:	nop
  4074d8:	jmp    QWORD PTR [rip+0xa136]        # 0x411614
  4074de:	nop
  4074df:	nop
  4074e0:	jmp    QWORD PTR [rip+0xa126]        # 0x41160c
  4074e6:	nop
  4074e7:	nop
  4074e8:	jmp    QWORD PTR [rip+0xa116]        # 0x411604
  4074ee:	nop
  4074ef:	nop
  4074f0:	jmp    QWORD PTR [rip+0xa106]        # 0x4115fc
  4074f6:	nop
  4074f7:	nop
  4074f8:	jmp    QWORD PTR [rip+0xa0f6]        # 0x4115f4
  4074fe:	nop
  4074ff:	nop
  407500:	jmp    QWORD PTR [rip+0xa0e6]        # 0x4115ec
  407506:	nop
  407507:	nop
  407508:	jmp    QWORD PTR [rip+0xa0d6]        # 0x4115e4
  40750e:	nop
  40750f:	nop
  407510:	jmp    QWORD PTR [rip+0xa0c6]        # 0x4115dc
  407516:	nop
  407517:	nop
  407518:	jmp    QWORD PTR [rip+0xa0b6]        # 0x4115d4
  40751e:	nop
  40751f:	nop
  407520:	jmp    QWORD PTR [rip+0xa0a6]        # 0x4115cc
  407526:	nop
  407527:	nop
  407528:	jmp    QWORD PTR [rip+0xa096]        # 0x4115c4
  40752e:	nop
  40752f:	nop
  407530:	jmp    QWORD PTR [rip+0xa086]        # 0x4115bc
  407536:	nop
  407537:	nop
  407538:	jmp    QWORD PTR [rip+0xa076]        # 0x4115b4
  40753e:	nop
  40753f:	nop
  407540:	jmp    QWORD PTR [rip+0xa066]        # 0x4115ac
  407546:	nop
  407547:	nop
  407548:	jmp    QWORD PTR [rip+0xa056]        # 0x4115a4
  40754e:	nop
  40754f:	nop
  407550:	jmp    QWORD PTR [rip+0xa046]        # 0x41159c
  407556:	nop
  407557:	nop
  407558:	jmp    QWORD PTR [rip+0xa036]        # 0x411594
  40755e:	nop
  40755f:	nop
  407560:	jmp    QWORD PTR [rip+0xa026]        # 0x41158c
  407566:	nop
  407567:	nop
  407568:	jmp    QWORD PTR [rip+0xa016]        # 0x411584
  40756e:	nop
  40756f:	nop
  407570:	jmp    QWORD PTR [rip+0xa006]        # 0x41157c
  407576:	nop
  407577:	nop
  407578:	jmp    QWORD PTR [rip+0x9ff6]        # 0x411574
  40757e:	nop
  40757f:	nop
  407580:	jmp    QWORD PTR [rip+0x9fe6]        # 0x41156c
  407586:	nop
  407587:	nop
  407588:	jmp    QWORD PTR [rip+0x9fd6]        # 0x411564
  40758e:	nop
  40758f:	nop
  407590:	jmp    QWORD PTR [rip+0x9fc6]        # 0x41155c
  407596:	nop
  407597:	nop
  407598:	jmp    QWORD PTR [rip+0x9fb6]        # 0x411554
  40759e:	nop
  40759f:	nop
  4075a0:	jmp    QWORD PTR [rip+0x9fa6]        # 0x41154c
  4075a6:	nop
  4075a7:	nop
  4075a8:	jmp    QWORD PTR [rip+0x9f96]        # 0x411544
  4075ae:	nop
  4075af:	nop
  4075b0:	jmp    QWORD PTR [rip+0x9f86]        # 0x41153c
  4075b6:	nop
  4075b7:	nop
  4075b8:	jmp    QWORD PTR [rip+0x9f76]        # 0x411534
  4075be:	nop
  4075bf:	nop
  4075c0:	jmp    QWORD PTR [rip+0x9f66]        # 0x41152c
  4075c6:	nop
  4075c7:	nop
  4075c8:	jmp    QWORD PTR [rip+0x9f56]        # 0x411524
  4075ce:	nop
  4075cf:	nop
  4075d0:	jmp    QWORD PTR [rip+0x9f46]        # 0x41151c
  4075d6:	nop
  4075d7:	nop
  4075d8:	jmp    QWORD PTR [rip+0x9f36]        # 0x411514
  4075de:	nop
  4075df:	nop
  4075e0:	jmp    QWORD PTR [rip+0x9f26]        # 0x41150c
  4075e6:	nop
  4075e7:	nop
  4075e8:	jmp    QWORD PTR [rip+0x9f16]        # 0x411504
  4075ee:	nop
  4075ef:	nop
  4075f0:	jmp    QWORD PTR [rip+0x9f06]        # 0x4114fc
  4075f6:	nop
  4075f7:	nop
  4075f8:	jmp    QWORD PTR [rip+0x9ef6]        # 0x4114f4
  4075fe:	nop
  4075ff:	nop
  407600:	jmp    QWORD PTR [rip+0x9ee6]        # 0x4114ec
  407606:	nop
  407607:	nop
  407608:	jmp    QWORD PTR [rip+0x9ece]        # 0x4114dc
  40760e:	nop
  40760f:	nop
  407610:	jmp    QWORD PTR [rip+0x9ebe]        # 0x4114d4
  407616:	nop
  407617:	nop
  407618:	jmp    QWORD PTR [rip+0x9eae]        # 0x4114cc
  40761e:	nop
  40761f:	nop
  407620:	jmp    QWORD PTR [rip+0x9e9e]        # 0x4114c4
  407626:	nop
  407627:	nop
  407628:	jmp    QWORD PTR [rip+0x9e8e]        # 0x4114bc
  40762e:	nop
  40762f:	nop
  407630:	jmp    QWORD PTR [rip+0x9e76]        # 0x4114ac
  407636:	nop
  407637:	nop
  407638:	jmp    QWORD PTR [rip+0x9e66]        # 0x4114a4
  40763e:	nop
  40763f:	nop
  407640:	jmp    QWORD PTR [rip+0x9e56]        # 0x41149c
  407646:	nop
  407647:	nop
  407648:	jmp    QWORD PTR [rip+0x9e46]        # 0x411494
  40764e:	nop
  40764f:	nop
  407650:	jmp    QWORD PTR [rip+0x9e2e]        # 0x411484
  407656:	nop
  407657:	nop
  407658:	jmp    QWORD PTR [rip+0x9e1e]        # 0x41147c
  40765e:	nop
  40765f:	nop
  407660:	jmp    QWORD PTR [rip+0x9e0e]        # 0x411474
  407666:	nop
  407667:	nop
  407668:	nop    DWORD PTR [rax+rax*1+0x0]
  407670:	mov    rax,QWORD PTR [rip+0x9439]        # 0x410ab0
  407677:	ret    
  407678:	nop    DWORD PTR [rax+rax*1+0x0]
  407680:	mov    rax,rcx
  407683:	xchg   QWORD PTR [rip+0x9426],rax        # 0x410ab0
  40768a:	ret    
  40768b:	nop
  40768c:	nop
  40768d:	nop
  40768e:	nop
  40768f:	nop
  407690:	jmp    QWORD PTR [rip+0x9dce]        # 0x411464
  407696:	nop
  407697:	nop
  407698:	jmp    QWORD PTR [rip+0x9dbe]        # 0x41145c
  40769e:	nop
  40769f:	nop
  4076a0:	jmp    QWORD PTR [rip+0x9dae]        # 0x411454
  4076a6:	nop
  4076a7:	nop
  4076a8:	jmp    QWORD PTR [rip+0x9d9e]        # 0x41144c
  4076ae:	nop
  4076af:	nop
  4076b0:	jmp    QWORD PTR [rip+0x9d8e]        # 0x411444
  4076b6:	nop
  4076b7:	nop
  4076b8:	jmp    QWORD PTR [rip+0x9d7e]        # 0x41143c
  4076be:	nop
  4076bf:	nop
  4076c0:	jmp    QWORD PTR [rip+0x9d6e]        # 0x411434
  4076c6:	nop
  4076c7:	nop
  4076c8:	jmp    QWORD PTR [rip+0x9d5e]        # 0x41142c
  4076ce:	nop
  4076cf:	nop
  4076d0:	jmp    QWORD PTR [rip+0x9d4e]        # 0x411424
  4076d6:	nop
  4076d7:	nop
  4076d8:	jmp    QWORD PTR [rip+0x9d3e]        # 0x41141c
  4076de:	nop
  4076df:	nop
  4076e0:	jmp    QWORD PTR [rip+0x9d2e]        # 0x411414
  4076e6:	nop
  4076e7:	nop
  4076e8:	jmp    QWORD PTR [rip+0x9d1e]        # 0x41140c
  4076ee:	nop
  4076ef:	nop
  4076f0:	jmp    QWORD PTR [rip+0x9d0e]        # 0x411404
  4076f6:	nop
  4076f7:	nop
  4076f8:	jmp    QWORD PTR [rip+0x9cfe]        # 0x4113fc
  4076fe:	nop
  4076ff:	nop
  407700:	jmp    QWORD PTR [rip+0x9cee]        # 0x4113f4
  407706:	nop
  407707:	nop
  407708:	jmp    QWORD PTR [rip+0x9cde]        # 0x4113ec
  40770e:	nop
  40770f:	nop
  407710:	jmp    QWORD PTR [rip+0x9cce]        # 0x4113e4
  407716:	nop
  407717:	nop
  407718:	jmp    QWORD PTR [rip+0x9cbe]        # 0x4113dc
  40771e:	nop
  40771f:	nop
  407720:	jmp    QWORD PTR [rip+0x9cae]        # 0x4113d4
  407726:	nop
  407727:	nop
  407728:	jmp    QWORD PTR [rip+0x9c9e]        # 0x4113cc
  40772e:	nop
  40772f:	nop
  407730:	jmp    QWORD PTR [rip+0x9c8e]        # 0x4113c4
  407736:	nop
  407737:	nop
  407738:	jmp    QWORD PTR [rip+0x9c7e]        # 0x4113bc
  40773e:	nop
  40773f:	nop
  407740:	jmp    QWORD PTR [rip+0x9c6e]        # 0x4113b4
  407746:	nop
  407747:	nop
  407748:	jmp    QWORD PTR [rip+0x9c5e]        # 0x4113ac
  40774e:	nop
  40774f:	nop
  407750:	jmp    QWORD PTR [rip+0x9c4e]        # 0x4113a4
  407756:	nop
  407757:	nop
  407758:	jmp    QWORD PTR [rip+0x9c3e]        # 0x41139c
  40775e:	nop
  40775f:	nop
  407760:	jmp    QWORD PTR [rip+0x9c2e]        # 0x411394
  407766:	nop
  407767:	nop
  407768:	jmp    QWORD PTR [rip+0x9c1e]        # 0x41138c
  40776e:	nop
  40776f:	nop
  407770:	jmp    QWORD PTR [rip+0x9c0e]        # 0x411384
  407776:	nop
  407777:	nop
  407778:	jmp    QWORD PTR [rip+0x9bfe]        # 0x41137c
  40777e:	nop
  40777f:	nop
  407780:	jmp    QWORD PTR [rip+0x9bee]        # 0x411374
  407786:	nop
  407787:	nop
  407788:	jmp    QWORD PTR [rip+0x9bde]        # 0x41136c
  40778e:	nop
  40778f:	nop
  407790:	push   r15
  407792:	push   r14
  407794:	push   r13
  407796:	push   r12
  407798:	push   rbp
  407799:	push   rdi
  40779a:	push   rsi
  40779b:	push   rbx
  40779c:	sub    rsp,0x88
  4077a3:	xor    r12d,r12d
  4077a6:	mov    DWORD PTR [rsp+0xd0],ecx
  4077ad:	mov    QWORD PTR [rsp+0xd8],rdx
  4077b5:	call   0x405f30
  4077ba:	mov    rax,QWORD PTR [rsp+0xd8]
  4077c2:	lea    rdx,[rip+0x3978]        # 0x40b141
  4077c9:	mov    ecx,0x2
  4077ce:	mov    rax,QWORD PTR [rax]
  4077d1:	mov    QWORD PTR [rip+0x8888],rax        # 0x410060
  4077d8:	call   0x407508
  4077dd:	lea    rdx,[rsp+0xd8]
  4077e5:	lea    rcx,[rsp+0xd0]
  4077ed:	call   0x401fc0
  4077f2:	movsxd rcx,DWORD PTR [rsp+0xd0]
  4077fa:	shl    rcx,0x3
  4077fe:	call   0x4057b0
  407803:	movsxd rcx,DWORD PTR [rsp+0xd0]
  40780b:	mov    rbx,rax
  40780e:	shl    rcx,0x2
  407812:	call   0x4057b0
  407817:	movsxd rcx,DWORD PTR [rsp+0xd0]
  40781f:	mov    rbp,rax
  407822:	shl    rcx,0x2
  407826:	call   0x4057b0
  40782b:	mov    ecx,DWORD PTR [rsp+0xd0]
  407832:	mov    rsi,rax
  407835:	mov    r15,QWORD PTR [rsp+0xd8]
  40783d:	test   ecx,ecx
  40783f:	jle    0x4078a1
  407841:	xor    edi,edi
  407843:	xor    r12d,r12d
  407846:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407850:	mov    rcx,QWORD PTR [r15+rdi*8]
  407854:	call   0x4074c8
  407859:	lea    rcx,[rax+0x1]
  40785d:	mov    r13,rax
  407860:	add    r12d,r13d
  407863:	call   0x4057b0
  407868:	mov    r15,QWORD PTR [rsp+0xd8]
  407870:	mov    rcx,rax
  407873:	mov    rdx,QWORD PTR [r15+rdi*8]
  407877:	call   0x4074d8
  40787c:	mov    ecx,DWORD PTR [rsp+0xd0]
  407883:	mov    QWORD PTR [rbx+rdi*8],rax
  407887:	lea    eax,[rdi+0x1]
  40788a:	mov    DWORD PTR [rbp+rdi*4+0x0],0x0
  407892:	mov    DWORD PTR [rsi+rdi*4],0x1
  407899:	add    rdi,0x1
  40789d:	cmp    ecx,eax
  40789f:	jg     0x407850
  4078a1:	mov    rdi,QWORD PTR [rip+0x5ae8]        # 0x40d390
  4078a8:	mov    rax,QWORD PTR [rip+0x5af1]        # 0x40d3a0
  4078af:	xor    r14d,r14d
  4078b2:	mov    DWORD PTR [rsp+0x3c],0x0
  4078ba:	mov    QWORD PTR [rsp+0x40],0x0
  4078c3:	xor    r13d,r13d
  4078c6:	mov    DWORD PTR [rsp+0x50],0x0
  4078ce:	mov    rdx,r15
  4078d1:	mov    DWORD PTR [rax],0x0
  4078d7:	mov    QWORD PTR [rsp+0x48],rdi
  4078dc:	mov    QWORD PTR [rsp+0x60],rdi
  4078e1:	mov    QWORD PTR [rsp+0x68],rdi
  4078e6:	mov    QWORD PTR [rsp+0x70],rdi
  4078eb:	mov    QWORD PTR [rsp+0x78],rdi
  4078f0:	lea    r9,[rip+0x4709]        # 0x40c000
  4078f7:	lea    r8,[rip+0x4110]        # 0x40ba0e
  4078fe:	mov    QWORD PTR [rsp+0x20],0x0
  407907:	call   0x403820
  40790c:	cmp    eax,0xffffffff
  40790f:	je     0x407937
  407911:	xor    r15d,r15d
  407914:	cmp    eax,0x3f
  407917:	sete   r15b
  40791b:	sub    eax,0x3f
  40791e:	cmp    eax,0x75
  407921:	ja     0x4084bb
  407927:	lea    rdx,[rip+0x4356]        # 0x40bc84
  40792e:	movsxd rax,DWORD PTR [rdx+rax*4]
  407932:	add    rdx,rax
  407935:	jmp    rdx
  407937:	mov    rcx,QWORD PTR [rip+0x870a]        # 0x410048
  40793e:	test   rcx,rcx
  407941:	je     0x408b9d
  407947:	cmp    QWORD PTR [rip+0x8701],0x0        # 0x410050
  40794f:	je     0x408f7b
  407955:	cmp    QWORD PTR [rip+0x872b],0x0        # 0x410088
  40795d:	je     0x408f4b
  407963:	cmp    QWORD PTR [rip+0x870d],0x0        # 0x410078
  40796b:	je     0x408f63
  407971:	cmp    DWORD PTR [rsp+0x3c],0x0
  407976:	je     0x408c63
  40797c:	mov    rdi,QWORD PTR [rip+0x269d]        # 0x40a020
  407983:	lea    rdx,[rip+0x4132]        # 0x40babc
  40798a:	mov    rcx,rdi
  40798d:	call   0x4074a8
  407992:	test   rax,rax
  407995:	je     0x408db9
  40799b:	mov    DWORD PTR [rip+0x86cf],0x1        # 0x410074
  4079a5:	lea    rdx,[rip+0x411d]        # 0x40bac9
  4079ac:	mov    r8d,0x3
  4079b2:	mov    rcx,rdi
  4079b5:	call   0x4074c0
  4079ba:	test   eax,eax
  4079bc:	jne    0x408b2b
  4079c2:	mov    DWORD PTR [rip+0x86a4],0x3        # 0x410070
  4079cc:	cmp    DWORD PTR [rip+0x2649],0xffffffff        # 0x40a01c
  4079d3:	je     0x408cf4
  4079d9:	lea    eax,[r12+0x1]
  4079de:	mov    ecx,eax
  4079e0:	mov    DWORD PTR [rsp+0x48],eax
  4079e4:	call   0x402350
  4079e9:	cmp    DWORD PTR [rip+0x8668],0x0        # 0x410058
  4079f0:	mov    r12,rax
  4079f3:	jne    0x408c4f
  4079f9:	lea    rdx,[rip+0x40e7]        # 0x40bae7
  407a00:	mov    rcx,r12
  407a03:	xor    edi,edi
  407a05:	call   0x402700
  407a0a:	mov    rdx,QWORD PTR [rip+0x8637]        # 0x410048
  407a11:	mov    rcx,r12
  407a14:	call   0x402700
  407a19:	cmp    DWORD PTR [rsp+0xd0],0x1
  407a21:	jle    0x407a7f
  407a23:	mov    ecx,DWORD PTR [rbp+rdi*4+0x4]
  407a27:	test   ecx,ecx
  407a29:	je     0x407a6f
  407a2b:	mov    r15,QWORD PTR [rbx+rdi*8+0x8]
  407a30:	mov    edx,0x20
  407a35:	mov    rcx,r15
  407a38:	call   0x4074e8
  407a3d:	test   rax,rax
  407a40:	je     0x4085e0
  407a46:	lea    rdx,[rip+0x4233]        # 0x40bc80
  407a4d:	mov    rcx,r12
  407a50:	call   0x402700
  407a55:	mov    rdx,r15
  407a58:	mov    rcx,r12
  407a5b:	call   0x402700
  407a60:	lea    rdx,[rip+0x36d8]        # 0x40b13f
  407a67:	mov    rcx,r12
  407a6a:	call   0x402700
  407a6f:	lea    edx,[rdi+0x2]
  407a72:	add    rdi,0x1
  407a76:	cmp    DWORD PTR [rsp+0xd0],edx
  407a7d:	jg     0x407a23
  407a7f:	mov    ecx,DWORD PTR [rsp+0x48]
  407a83:	call   0x402350
  407a88:	test   r13,r13
  407a8b:	mov    rbp,rax
  407a8e:	je     0x407a97
  407a90:	cmp    BYTE PTR [r13+0x0],0x0
  407a95:	jne    0x407abe
  407a97:	mov    eax,DWORD PTR [rip+0x85d7]        # 0x410074
  407a9d:	lea    r13,[rip+0x369e]        # 0x40b142
  407aa4:	cmp    eax,0x1
  407aa7:	je     0x407abe
  407aa9:	cmp    eax,0x2
  407aac:	lea    r13,[rip+0x36a7]        # 0x40b15a
  407ab3:	lea    rax,[rip+0x36a6]        # 0x40b160
  407aba:	cmovne r13,rax
  407abe:	mov    rdx,r13
  407ac1:	mov    rcx,rbp
  407ac4:	call   0x402700
  407ac9:	lea    rdx,[rip+0x4023]        # 0x40baf3
  407ad0:	mov    rcx,rbp
  407ad3:	call   0x402700
  407ad8:	mov    rdx,QWORD PTR [rip+0x8571]        # 0x410050
  407adf:	mov    rcx,rbp
  407ae2:	call   0x402700
  407ae7:	mov    eax,DWORD PTR [rip+0x252f]        # 0x40a01c
  407aed:	test   eax,eax
  407aef:	je     0x408c12
  407af5:	sub    eax,0x1
  407af8:	je     0x408e3f
  407afe:	mov    rax,QWORD PTR [rip+0x857b]        # 0x410080
  407b05:	test   rax,rax
  407b08:	je     0x407b13
  407b0a:	cmp    BYTE PTR [rax],0x0
  407b0d:	jne    0x407bbc
  407b13:	lea    r8,[rip+0x3650]        # 0x40b16a
  407b1a:	cmp    DWORD PTR [rip+0x854f],0x1        # 0x410070
  407b21:	lea    rax,[rip+0x3644]        # 0x40b16c
  407b28:	lea    r15,[rip+0x3612]        # 0x40b141
  407b2f:	lea    r13,[rip+0x363a]        # 0x40b170
  407b36:	cmovbe r15,rax
  407b3a:	mov    eax,DWORD PTR [rip+0x8534]        # 0x410074
  407b40:	cmp    eax,0x1
  407b43:	je     0x407b5a
  407b45:	cmp    eax,0x2
  407b48:	lea    r13,[rip+0x3633]        # 0x40b182
  407b4f:	lea    rax,[rip+0x363e]        # 0x40b194
  407b56:	cmovne r13,rax
  407b5a:	or     r9,0xffffffffffffffff
  407b5e:	xor    eax,eax
  407b60:	mov    rdi,r13
  407b63:	mov    rcx,r9
  407b66:	repnz scas al,BYTE PTR es:[rdi]
  407b68:	mov    rdi,r8
  407b6b:	mov    QWORD PTR [rsp+0x48],r8
  407b70:	mov    r10,rcx
  407b73:	mov    rcx,r9
  407b76:	repnz scas al,BYTE PTR es:[rdi]
  407b78:	mov    rdi,r15
  407b7b:	not    rcx
  407b7e:	mov    rdx,rcx
  407b81:	mov    rcx,r9
  407b84:	repnz scas al,BYTE PTR es:[rdi]
  407b86:	sub    rdx,r10
  407b89:	mov    rax,rcx
  407b8c:	not    rax
  407b8f:	lea    rcx,[rdx+rax*1-0x3]
  407b94:	call   0x407550
  407b99:	mov    r8,QWORD PTR [rsp+0x48]
  407b9e:	lea    rdx,[rip+0x3f82]        # 0x40bb27
  407ba5:	mov    QWORD PTR [rsp+0x20],r15
  407baa:	mov    r9,r13
  407bad:	mov    rcx,rax
  407bb0:	mov    QWORD PTR [rip+0x84c9],rax        # 0x410080
  407bb7:	call   0x4074f8
  407bbc:	lea    rdx,[rip+0x3f6b]        # 0x40bb2e
  407bc3:	mov    rcx,rbp
  407bc6:	call   0x402700
  407bcb:	mov    rdx,QWORD PTR [rip+0x84ae]        # 0x410080
  407bd2:	mov    rcx,rbp
  407bd5:	call   0x402700
  407bda:	lea    rdx,[rip+0x3f56]        # 0x40bb37
  407be1:	mov    rcx,r12
  407be4:	call   0x402700
  407be9:	mov    rdx,QWORD PTR [rip+0x8490]        # 0x410080
  407bf0:	xor    eax,eax
  407bf2:	mov    rcx,r12
  407bf5:	cmp    BYTE PTR [rdx],0x5f
  407bf8:	sete   al
  407bfb:	add    rdx,rax
  407bfe:	call   0x402700
  407c03:	test   r14,r14
  407c06:	je     0x407c0e
  407c08:	cmp    BYTE PTR [r14],0x0
  407c0c:	jne    0x407c89
  407c0e:	mov    ecx,0xc
  407c13:	call   0x4057b0
  407c18:	mov    r14,rax
  407c1b:	mov    rax,QWORD PTR [rip+0x842e]        # 0x410050
  407c22:	xor    r8d,r8d
  407c25:	xor    ecx,ecx
  407c27:	lea    r9,[rax+0x1]
  407c2b:	movzx  eax,BYTE PTR [rax]
  407c2e:	test   eax,eax
  407c30:	je     0x407c53
  407c32:	mov    edx,eax
  407c34:	add    r8d,0x1
  407c38:	add    r9,0x1
  407c3c:	shl    edx,0x11
  407c3f:	add    eax,edx
  407c41:	add    eax,ecx
  407c43:	mov    ecx,eax
  407c45:	shr    ecx,0x2
  407c48:	xor    ecx,eax
  407c4a:	movzx  eax,BYTE PTR [r9-0x1]
  407c4f:	test   eax,eax
  407c51:	jne    0x407c32
  407c53:	lea    eax,[r8+rcx*1]
  407c57:	shl    r8d,0x11
  407c5b:	lea    rdx,[rip+0x3ee8]        # 0x40bb4a
  407c62:	mov    rcx,r14
  407c65:	add    eax,r8d
  407c68:	mov    r8d,eax
  407c6b:	shr    r8d,0x2
  407c6f:	xor    r8d,eax
  407c72:	shl    r8d,0x10
  407c76:	and    r8d,0xffc0000
  407c7d:	or     r8d,0x60000000
  407c84:	call   0x4074f8
  407c89:	lea    rdx,[rip+0x3ec2]        # 0x40bb52
  407c90:	mov    rcx,rbp
  407c93:	call   0x402700
  407c98:	mov    rdx,r14
  407c9b:	mov    rcx,rbp
  407c9e:	call   0x402700
  407ca3:	cmp    DWORD PTR [rip+0x83ae],0x0        # 0x410058
  407caa:	jne    0x408bfe
  407cb0:	xor    r13d,r13d
  407cb3:	cmp    DWORD PTR [rsp+0xd0],0x1
  407cbb:	jle    0x407d1e
  407cbd:	nop    DWORD PTR [rax]
  407cc0:	mov    edx,DWORD PTR [rsi+r13*4+0x4]
  407cc5:	test   edx,edx
  407cc7:	je     0x407d0d
  407cc9:	mov    rdi,QWORD PTR [rbx+r13*8+0x8]
  407cce:	mov    edx,0x20
  407cd3:	mov    rcx,rdi
  407cd6:	call   0x4074e8
  407cdb:	test   rax,rax
  407cde:	je     0x4085a4
  407ce4:	lea    rdx,[rip+0x3f95]        # 0x40bc80
  407ceb:	mov    rcx,rbp
  407cee:	call   0x402700
  407cf3:	mov    rdx,rdi
  407cf6:	mov    rcx,rbp
  407cf9:	call   0x402700
  407cfe:	lea    rdx,[rip+0x343a]        # 0x40b13f
  407d05:	mov    rcx,rbp
  407d08:	call   0x402700
  407d0d:	lea    edx,[r13+0x2]
  407d11:	add    r13,0x1
  407d15:	cmp    DWORD PTR [rsp+0xd0],edx
  407d1c:	jg     0x407cc0
  407d1e:	cmp    DWORD PTR [rsp+0x3c],0x0
  407d23:	jne    0x40863c
  407d29:	mov    ecx,0x400
  407d2e:	call   0x402350
  407d33:	mov    rdx,QWORD PTR [r12+0x8]
  407d38:	mov    rcx,rax
  407d3b:	mov    r13,rax
  407d3e:	call   0x402700
  407d43:	cmp    DWORD PTR [rsp+0x50],0x0
  407d48:	jne    0x408bdb
  407d4e:	lea    rdx,[rip+0x3e79]        # 0x40bbce
  407d55:	mov    rcx,r13
  407d58:	xor    edi,edi
  407d5a:	call   0x402700
  407d5f:	mov    rdx,QWORD PTR [rip+0x82ca]        # 0x410030
  407d66:	mov    rcx,r13
  407d69:	call   0x402700
  407d6e:	cmp    DWORD PTR [rsp+0xd0],0x1
  407d76:	jg     0x407d94
  407d78:	jmp    0x40861c
  407d7d:	nop    DWORD PTR [rax]
  407d80:	lea    edx,[rdi+0x2]
  407d83:	add    rdi,0x1
  407d87:	cmp    edx,DWORD PTR [rsp+0xd0]
  407d8e:	jge    0x40861c
  407d94:	mov    eax,DWORD PTR [rsi+rdi*4+0x4]
  407d98:	test   eax,eax
  407d9a:	je     0x407d80
  407d9c:	mov    r14,QWORD PTR [rbx+rdi*8+0x8]
  407da1:	mov    rcx,r14
  407da4:	call   0x4074c8
  407da9:	cmp    rax,0x1
  407dad:	jbe    0x407d80
  407daf:	cmp    BYTE PTR [r14+rax*1-0x2],0x2e
  407db5:	jne    0x407d80
  407db7:	movzx  eax,BYTE PTR [r14+rax*1-0x1]
  407dbd:	cmp    al,0x61
  407dbf:	je     0x407dc5
  407dc1:	cmp    al,0x6f
  407dc3:	jne    0x407d80
  407dc5:	mov    edx,0x20
  407dca:	mov    rcx,r14
  407dcd:	call   0x4074e8
  407dd2:	test   rax,rax
  407dd5:	je     0x409071
  407ddb:	lea    rdx,[rip+0x3e9e]        # 0x40bc80
  407de2:	mov    rcx,r13
  407de5:	call   0x402700
  407dea:	mov    rdx,r14
  407ded:	mov    rcx,r13
  407df0:	call   0x402700
  407df5:	lea    rdx,[rip+0x3343]        # 0x40b13f
  407dfc:	mov    rcx,r13
  407dff:	call   0x402700
  407e04:	jmp    0x407d80
  407e09:	mov    rax,QWORD PTR [rsp+0x48]
  407e0e:	xor    r9d,r9d
  407e11:	mov    r8,QWORD PTR [rax]
  407e14:	test   r8,r8
  407e17:	je     0x4085a0
  407e1d:	mov    rdx,QWORD PTR [rip+0x558c]        # 0x40d3b0
  407e24:	movsxd rax,DWORD PTR [rdx]
  407e27:	mov    rcx,QWORD PTR [rbx+rax*8-0x8]
  407e2c:	cmp    BYTE PTR [rcx],0x2d
  407e2f:	je     0x408524
  407e35:	test   r9d,r9d
  407e38:	je     0x4084d0
  407e3e:	shl    rax,0x2
  407e42:	mov    DWORD PTR [rbp+rax*1-0x4],0x1
  407e4a:	jmp    0x408580
  407e4f:	mov    rcx,QWORD PTR [rsp+0x78]
  407e54:	mov    DWORD PTR [rip+0x21ba],0x0        # 0x40a018
  407e5e:	xor    r9d,r9d
  407e61:	mov    rdx,QWORD PTR [rcx]
  407e64:	mov    rax,rcx
  407e67:	mov    QWORD PTR [rip+0x81d2],rdx        # 0x410040
  407e6e:	jmp    0x407e11
  407e70:	mov    rax,QWORD PTR [rip+0x5519]        # 0x40d390
  407e77:	mov    DWORD PTR [rip+0x218f],0x0        # 0x40a010
  407e81:	xor    r9d,r9d
  407e84:	mov    DWORD PTR [rsp+0x3c],0x1
  407e8c:	mov    rdx,QWORD PTR [rax]
  407e8f:	mov    QWORD PTR [rip+0x819a],rdx        # 0x410030
  407e96:	jmp    0x407e11
  407e9b:	mov    rcx,QWORD PTR [rsp+0x60]
  407ea0:	xor    r9d,r9d
  407ea3:	mov    rax,rcx
  407ea6:	mov    rcx,QWORD PTR [rcx]
  407ea9:	mov    QWORD PTR [rsp+0x40],rcx
  407eae:	jmp    0x407e11
  407eb3:	xor    r9d,r9d
  407eb6:	mov    DWORD PTR [rsp+0x50],0x1
  407ebe:	mov    rax,QWORD PTR [rsp+0x68]
  407ec3:	jmp    0x407e11
  407ec8:	mov    rcx,QWORD PTR [rsp+0x70]
  407ecd:	mov    DWORD PTR [rip+0x213d],0x0        # 0x40a014
  407ed7:	xor    r9d,r9d
  407eda:	mov    rdx,QWORD PTR [rcx]
  407edd:	mov    rax,rcx
  407ee0:	mov    QWORD PTR [rip+0x8151],rdx        # 0x410038
  407ee7:	jmp    0x407e11
  407eec:	mov    rax,QWORD PTR [rip+0x549d]        # 0x40d390
  407ef3:	xor    r9d,r9d
  407ef6:	mov    rdx,QWORD PTR [rax]
  407ef9:	mov    QWORD PTR [rip+0x8148],rdx        # 0x410048
  407f00:	jmp    0x407e11
  407f05:	mov    DWORD PTR [rip+0x210d],0x1        # 0x40a01c
  407f0f:	xor    r9d,r9d
  407f12:	mov    rax,QWORD PTR [rip+0x5477]        # 0x40d390
  407f19:	jmp    0x407e11
  407f1e:	mov    DWORD PTR [rip+0x20f4],0x0        # 0x40a01c
  407f28:	xor    r9d,r9d
  407f2b:	mov    rax,QWORD PTR [rip+0x545e]        # 0x40d390
  407f32:	jmp    0x407e11
  407f37:	lea    rax,[rip+0x3ac3]        # 0x40ba01
  407f3e:	xor    r9d,r9d
  407f41:	mov    QWORD PTR [rip+0x20d8],rax        # 0x40a020
  407f48:	mov    rax,QWORD PTR [rip+0x5441]        # 0x40d390
  407f4f:	jmp    0x407e11
  407f54:	mov    rax,QWORD PTR [rip+0x5435]        # 0x40d390
  407f5b:	xor    r9d,r9d
  407f5e:	mov    rdx,QWORD PTR [rax]
  407f61:	mov    QWORD PTR [rip+0x20b8],rdx        # 0x40a020
  407f68:	jmp    0x407e11
  407f6d:	mov    rax,QWORD PTR [rip+0x541c]        # 0x40d390
  407f74:	xor    r9d,r9d
  407f77:	mov    r14,QWORD PTR [rax]
  407f7a:	jmp    0x407e11
  407f7f:	mov    rax,QWORD PTR [rip+0x540a]        # 0x40d390
  407f86:	xor    r9d,r9d
  407f89:	mov    rdx,QWORD PTR [rax]
  407f8c:	mov    QWORD PTR [rip+0x80e5],rdx        # 0x410078
  407f93:	jmp    0x407e11
  407f98:	mov    rax,QWORD PTR [rip+0x53f1]        # 0x40d390
  407f9f:	xor    r9d,r9d
  407fa2:	mov    r13,QWORD PTR [rax]
  407fa5:	jmp    0x407e11
  407faa:	mov    rax,QWORD PTR [rip+0x53df]        # 0x40d390
  407fb1:	xor    r9d,r9d
  407fb4:	mov    rdx,QWORD PTR [rax]
  407fb7:	mov    QWORD PTR [rip+0x80ca],rdx        # 0x410088
  407fbe:	jmp    0x407e11
  407fc3:	mov    DWORD PTR [rip+0x809b],0x1        # 0x410068
  407fcd:	xor    r9d,r9d
  407fd0:	mov    rax,QWORD PTR [rip+0x53b9]        # 0x40d390
  407fd7:	jmp    0x407e11
  407fdc:	mov    rcx,QWORD PTR [rip+0x807d]        # 0x410060
  407fe3:	call   0x401bb0
  407fe8:	xor    r9d,r9d
  407feb:	mov    rax,QWORD PTR [rip+0x539e]        # 0x40d390
  407ff2:	jmp    0x407e11
  407ff7:	mov    DWORD PTR [rip+0x8057],0x1        # 0x410058
  408001:	xor    r9d,r9d
  408004:	mov    rax,QWORD PTR [rip+0x5385]        # 0x40d390
  40800b:	jmp    0x407e11
  408010:	mov    DWORD PTR [rip+0x803e],0x0        # 0x410058
  40801a:	xor    r9d,r9d
  40801d:	mov    rax,QWORD PTR [rip+0x536c]        # 0x40d390
  408024:	jmp    0x407e11
  408029:	mov    rax,QWORD PTR [rip+0x5360]        # 0x40d390
  408030:	xor    r9d,r9d
  408033:	mov    rdx,QWORD PTR [rax]
  408036:	mov    QWORD PTR [rip+0x8013],rdx        # 0x410050
  40803d:	jmp    0x407e11
  408042:	mov    DWORD PTR [rip+0x8020],0x1        # 0x41006c
  40804c:	mov    r9d,0x1
  408052:	mov    rax,QWORD PTR [rip+0x5337]        # 0x40d390
  408059:	jmp    0x407e11
  40805e:	call   QWORD PTR [rip+0x9430]        # 0x411494
  408064:	mov    r8,QWORD PTR [rip+0x7ff5]        # 0x410060
  40806b:	lea    rbx,[rax+0x30]
  40806f:	lea    rdx,[rip+0x3132]        # 0x40b1a8
  408076:	mov    rcx,rbx
  408079:	call   0x407590
  40807e:	lea    rcx,[rip+0x314a]        # 0x40b1cf
  408085:	mov    r9,rbx
  408088:	mov    r8d,0x13
  40808e:	mov    edx,0x1
  408093:	call   0x407560
  408098:	lea    rcx,[rip+0x3149]        # 0x40b1e8
  40809f:	mov    r9,rbx
  4080a2:	mov    r8d,0x33
  4080a8:	mov    edx,0x1
  4080ad:	call   0x407560
  4080b2:	lea    rcx,[rip+0x3167]        # 0x40b220
  4080b9:	mov    r9,rbx
  4080bc:	mov    r8d,0x27
  4080c2:	mov    edx,0x1
  4080c7:	call   0x407560
  4080cc:	lea    rcx,[rip+0x3175]        # 0x40b248
  4080d3:	mov    r9,rbx
  4080d6:	mov    r8d,0x22
  4080dc:	mov    edx,0x1
  4080e1:	call   0x407560
  4080e6:	lea    rcx,[rip+0x3183]        # 0x40b270
  4080ed:	mov    r9,rbx
  4080f0:	mov    r8d,0x30
  4080f6:	mov    edx,0x1
  4080fb:	call   0x407560
  408100:	lea    rcx,[rip+0x31a1]        # 0x40b2a8
  408107:	mov    r9,rbx
  40810a:	mov    r8d,0x33
  408110:	mov    edx,0x1
  408115:	call   0x407560
  40811a:	mov    r8,QWORD PTR [rip+0x7f3f]        # 0x410060
  408121:	lea    rdx,[rip+0x31b4]        # 0x40b2dc
  408128:	mov    rcx,rbx
  40812b:	call   0x407590
  408130:	lea    rcx,[rip+0x31b9]        # 0x40b2f0
  408137:	mov    r9,rbx
  40813a:	mov    r8d,0x2c
  408140:	mov    edx,0x1
  408145:	call   0x407560
  40814a:	lea    rcx,[rip+0x31cf]        # 0x40b320
  408151:	mov    r9,rbx
  408154:	mov    r8d,0x34
  40815a:	mov    edx,0x1
  40815f:	call   0x407560
  408164:	lea    rcx,[rip+0x31ed]        # 0x40b358
  40816b:	mov    r9,rbx
  40816e:	mov    r8d,0x32
  408174:	mov    edx,0x1
  408179:	call   0x407560
  40817e:	lea    rcx,[rip+0x320b]        # 0x40b390
  408185:	mov    r9,rbx
  408188:	mov    r8d,0x3c
  40818e:	mov    edx,0x1
  408193:	call   0x407560
  408198:	lea    rcx,[rip+0x3231]        # 0x40b3d0
  40819f:	mov    r9,rbx
  4081a2:	mov    r8d,0x35
  4081a8:	mov    edx,0x1
  4081ad:	call   0x407560
  4081b2:	lea    rcx,[rip+0x324f]        # 0x40b408
  4081b9:	mov    r9,rbx
  4081bc:	mov    r8d,0x38
  4081c2:	mov    edx,0x1
  4081c7:	call   0x407560
  4081cc:	lea    rcx,[rip+0x3275]        # 0x40b448
  4081d3:	mov    r9,rbx
  4081d6:	mov    r8d,0x34
  4081dc:	mov    edx,0x1
  4081e1:	call   0x407560
  4081e6:	lea    rcx,[rip+0x3293]        # 0x40b480
  4081ed:	mov    r9,rbx
  4081f0:	mov    r8d,0x2b
  4081f6:	mov    edx,0x1
  4081fb:	call   0x407560
  408200:	lea    rcx,[rip+0x32a5]        # 0x40b4ac
  408207:	mov    r9,rbx
  40820a:	mov    r8d,0x1d
  408210:	mov    edx,0x1
  408215:	call   0x407560
  40821a:	lea    rcx,[rip+0x32a9]        # 0x40b4ca
  408221:	mov    r9,rbx
  408224:	mov    r8d,0x17
  40822a:	mov    edx,0x1
  40822f:	call   0x407560
  408234:	lea    rcx,[rip+0x32ad]        # 0x40b4e8
  40823b:	mov    r9,rbx
  40823e:	mov    r8d,0x30
  408244:	mov    edx,0x1
  408249:	call   0x407560
  40824e:	lea    rcx,[rip+0x32cb]        # 0x40b520
  408255:	mov    r9,rbx
  408258:	mov    r8d,0x32
  40825e:	mov    edx,0x1
  408263:	call   0x407560
  408268:	lea    rcx,[rip+0x32e9]        # 0x40b558
  40826f:	mov    r9,rbx
  408272:	mov    r8d,0x3c
  408278:	mov    edx,0x1
  40827d:	call   0x407560
  408282:	lea    rcx,[rip+0x330f]        # 0x40b598
  408289:	mov    r9,rbx
  40828c:	mov    r8d,0x44
  408292:	mov    edx,0x1
  408297:	call   0x407560
  40829c:	lea    rcx,[rip+0x333d]        # 0x40b5e0
  4082a3:	mov    r9,rbx
  4082a6:	mov    r8d,0x2f
  4082ac:	mov    edx,0x1
  4082b1:	call   0x407560
  4082b6:	lea    rcx,[rip+0x3353]        # 0x40b610
  4082bd:	mov    r9,rbx
  4082c0:	mov    r8d,0x30
  4082c6:	mov    edx,0x1
  4082cb:	call   0x407560
  4082d0:	lea    rcx,[rip+0x3371]        # 0x40b648
  4082d7:	mov    r9,rbx
  4082da:	mov    r8d,0x37
  4082e0:	mov    edx,0x1
  4082e5:	call   0x407560
  4082ea:	lea    rcx,[rip+0x338f]        # 0x40b680
  4082f1:	mov    r9,rbx
  4082f4:	mov    r8d,0x39
  4082fa:	mov    edx,0x1
  4082ff:	call   0x407560
  408304:	lea    rcx,[rip+0x33b5]        # 0x40b6c0
  40830b:	mov    r9,rbx
  40830e:	mov    r8d,0x35
  408314:	mov    edx,0x1
  408319:	call   0x407560
  40831e:	lea    rcx,[rip+0x33d3]        # 0x40b6f8
  408325:	mov    r9,rbx
  408328:	mov    r8d,0x38
  40832e:	mov    edx,0x1
  408333:	call   0x407560
  408338:	lea    rcx,[rip+0x33f9]        # 0x40b738
  40833f:	mov    r9,rbx
  408342:	mov    r8d,0x3a
  408348:	mov    edx,0x1
  40834d:	call   0x407560
  408352:	lea    rcx,[rip+0x341f]        # 0x40b778
  408359:	mov    r9,rbx
  40835c:	mov    r8d,0x38
  408362:	mov    edx,0x1
  408367:	call   0x407560
  40836c:	lea    rcx,[rip+0x3445]        # 0x40b7b8
  408373:	mov    r9,rbx
  408376:	mov    r8d,0x38
  40837c:	mov    edx,0x1
  408381:	call   0x407560
  408386:	lea    rcx,[rip+0x346b]        # 0x40b7f8
  40838d:	mov    r9,rbx
  408390:	mov    r8d,0x32
  408396:	mov    edx,0x1
  40839b:	call   0x407560
  4083a0:	lea    rcx,[rip+0x3489]        # 0x40b830
  4083a7:	mov    r9,rbx
  4083aa:	mov    r8d,0x38
  4083b0:	mov    edx,0x1
  4083b5:	call   0x407560
  4083ba:	lea    rcx,[rip+0x34af]        # 0x40b870
  4083c1:	mov    r9,rbx
  4083c4:	mov    r8d,0x33
  4083ca:	mov    edx,0x1
  4083cf:	call   0x407560
  4083d4:	lea    rcx,[rip+0x34cd]        # 0x40b8a8
  4083db:	mov    r9,rbx
  4083de:	mov    r8d,0x33
  4083e4:	mov    edx,0x1
  4083e9:	call   0x407560
  4083ee:	lea    rcx,[rip+0x34eb]        # 0x40b8e0
  4083f5:	mov    r9,rbx
  4083f8:	mov    r8d,0x2b
  4083fe:	mov    edx,0x1
  408403:	call   0x407560
  408408:	lea    rcx,[rip+0x3501]        # 0x40b910
  40840f:	mov    r9,rbx
  408412:	mov    r8d,0x3a
  408418:	mov    edx,0x1
  40841d:	call   0x407560
  408422:	lea    rcx,[rip+0x3527]        # 0x40b950
  408429:	mov    r9,rbx
  40842c:	mov    r8d,0x38
  408432:	mov    edx,0x1
  408437:	call   0x407560
  40843c:	lea    rcx,[rip+0x354d]        # 0x40b990
  408443:	mov    r9,rbx
  408446:	mov    r8d,0x34
  40844c:	mov    edx,0x1
  408451:	call   0x407560
  408456:	lea    rcx,[rip+0x3568]        # 0x40b9c5
  40845d:	mov    r9,rbx
  408460:	mov    r8d,0x2
  408466:	mov    edx,0x1
  40846b:	call   0x407560
  408470:	lea    r8,[rip+0x3551]        # 0x40b9c8
  408477:	lea    rdx,[rip+0x3570]        # 0x40b9ee
  40847e:	mov    rcx,rbx
  408481:	call   0x407590
  408486:	xor    ecx,ecx
  408488:	call   0x4075b0
  40848d:	mov    rax,QWORD PTR [rip+0x4efc]        # 0x40d390
  408494:	xor    r9d,r9d
  408497:	mov    rdx,QWORD PTR [rax]
  40849a:	mov    QWORD PTR [rip+0x7bdf],rdx        # 0x410080
  4084a1:	jmp    0x407e11
  4084a6:	mov    r15d,0x1
  4084ac:	xor    r9d,r9d
  4084af:	mov    rax,QWORD PTR [rip+0x4eda]        # 0x40d390
  4084b6:	jmp    0x407e11
  4084bb:	mov    r9d,0x1
  4084c1:	mov    rax,rdi
  4084c4:	jmp    0x407e11
  4084c9:	nop    DWORD PTR [rax+0x0]
  4084d0:	test   r15d,r15d
  4084d3:	jne    0x408510
  4084d5:	movsxd rax,DWORD PTR [rdx]
  4084d8:	shl    rax,0x2
  4084dc:	jmp    0x40858d
  4084e1:	test   r15d,r15d
  4084e4:	jne    0x408510
  4084e6:	mov    rax,QWORD PTR [rip+0x4ec3]        # 0x40d3b0
  4084ed:	movsxd rax,DWORD PTR [rax]
  4084f0:	shl    rax,0x2
  4084f4:	test   edx,edx
  4084f6:	mov    DWORD PTR [rsi+rax*1-0x4],0x0
  4084fe:	jne    0x408510
  408500:	test   r8,r8
  408503:	je     0x408510
  408505:	mov    DWORD PTR [rsi+rax*1-0x8],0x0
  40850d:	nop    DWORD PTR [rax]
  408510:	mov    rdx,QWORD PTR [rsp+0xd8]
  408518:	mov    ecx,DWORD PTR [rsp+0xd0]
  40851f:	jmp    0x4078f0
  408524:	cmp    BYTE PTR [rcx+0x1],0x2d
  408528:	jne    0x407e35
  40852e:	mov    edx,0x3d
  408533:	mov    QWORD PTR [rsp+0x58],r8
  408538:	mov    DWORD PTR [rsp+0x54],r9d
  40853d:	call   0x4074e8
  408542:	mov    r9d,DWORD PTR [rsp+0x54]
  408547:	mov    r8,QWORD PTR [rsp+0x58]
  40854c:	xor    edx,edx
  40854e:	test   rax,rax
  408551:	setne  dl
  408554:	test   r9d,r9d
  408557:	je     0x4084e1
  408559:	mov    rax,QWORD PTR [rip+0x4e50]        # 0x40d3b0
  408560:	movsxd rax,DWORD PTR [rax]
  408563:	shl    rax,0x2
  408567:	test   edx,edx
  408569:	mov    DWORD PTR [rbp+rax*1-0x4],0x1
  408571:	jne    0x4084e1
  408577:	test   r8,r8
  40857a:	je     0x4084e1
  408580:	test   r15d,r15d
  408583:	mov    DWORD PTR [rbp+rax*1-0x8],0x1
  40858b:	jne    0x408510
  40858d:	mov    DWORD PTR [rsi+rax*1-0x4],0x0
  408595:	jmp    0x408505
  40859a:	nop    WORD PTR [rax+rax*1+0x0]
  4085a0:	xor    edx,edx
  4085a2:	jmp    0x408554
  4085a4:	mov    edx,0x9
  4085a9:	mov    rcx,rdi
  4085ac:	call   0x4074e8
  4085b1:	test   rax,rax
  4085b4:	jne    0x407ce4
  4085ba:	lea    rdx,[rip+0x2bdb]        # 0x40b19c
  4085c1:	mov    rcx,rbp
  4085c4:	call   0x402700
  4085c9:	mov    rdx,rdi
  4085cc:	mov    rcx,rbp
  4085cf:	call   0x402700
  4085d4:	lea    rdx,[rip+0x2b66]        # 0x40b141
  4085db:	jmp    0x407d05
  4085e0:	mov    edx,0x9
  4085e5:	mov    rcx,r15
  4085e8:	call   0x4074e8
  4085ed:	test   rax,rax
  4085f0:	jne    0x407a46
  4085f6:	lea    rdx,[rip+0x2b9f]        # 0x40b19c
  4085fd:	mov    rcx,r12
  408600:	call   0x402700
  408605:	mov    rdx,r15
  408608:	mov    rcx,r12
  40860b:	call   0x402700
  408610:	lea    rdx,[rip+0x2b2a]        # 0x40b141
  408617:	jmp    0x407a67
  40861c:	mov    rdx,QWORD PTR [r13+0x8]
  408620:	mov    rcx,QWORD PTR [rip+0x7a51]        # 0x410078
  408627:	call   0x4017a0
  40862c:	test   eax,eax
  40862e:	jne    0x408b21
  408634:	mov    rcx,r13
  408637:	call   0x4023a0
  40863c:	lea    rdx,[rip+0x359a]        # 0x40bbdd
  408643:	mov    rcx,r12
  408646:	call   0x402700
  40864b:	mov    rdx,QWORD PTR [rip+0x79de]        # 0x410030
  408652:	mov    rcx,r12
  408655:	call   0x402700
  40865a:	cmp    DWORD PTR [rip+0x79f7],0x0        # 0x410058
  408661:	jne    0x408d31
  408667:	cmp    QWORD PTR [rip+0x79d1],0x0        # 0x410040
  40866f:	je     0x408fec
  408675:	mov    rdi,QWORD PTR [rip+0x79c4]        # 0x410040
  40867c:	xor    eax,eax
  40867e:	or     rcx,0xffffffffffffffff
  408682:	repnz scas al,BYTE PTR es:[rdi]
  408684:	mov    eax,DWORD PTR [rbp+0x4]
  408687:	mov    rsi,rcx
  40868a:	not    rsi
  40868d:	lea    ecx,[rax+rsi*1+0x13]
  408691:	call   0x402350
  408696:	lea    rdx,[rip+0x35a8]        # 0x40bc45
  40869d:	mov    rcx,rax
  4086a0:	mov    rbx,rax
  4086a3:	call   0x402700
  4086a8:	mov    rsi,QWORD PTR [rip+0x7991]        # 0x410040
  4086af:	mov    edx,0x20
  4086b4:	mov    rcx,rsi
  4086b7:	call   0x4074e8
  4086bc:	test   rax,rax
  4086bf:	je     0x408dde
  4086c5:	lea    rdx,[rip+0x2a73]        # 0x40b13f
  4086cc:	mov    rcx,rbx
  4086cf:	call   0x402700
  4086d4:	mov    rdx,QWORD PTR [rip+0x7965]        # 0x410040
  4086db:	mov    rcx,rbx
  4086de:	call   0x402700
  4086e3:	lea    rdx,[rip+0x2a55]        # 0x40b13f
  4086ea:	mov    rcx,rbx
  4086ed:	call   0x402700
  4086f2:	cmp    DWORD PTR [rbp+0x4],0x0
  4086f6:	jne    0x408d11
  4086fc:	mov    rdx,QWORD PTR [rbx+0x8]
  408700:	mov    rcx,QWORD PTR [rip+0x7981]        # 0x410088
  408707:	call   0x4017a0
  40870c:	test   eax,eax
  40870e:	jne    0x408b21
  408714:	mov    rcx,rbx
  408717:	call   0x4023a0
  40871c:	cmp    QWORD PTR [rip+0x7914],0x0        # 0x410038
  408724:	je     0x408e93
  40872a:	mov    rdi,QWORD PTR [rip+0x790f]        # 0x410040
  408731:	or     r8,0xffffffffffffffff
  408735:	xor    eax,eax
  408737:	mov    rcx,r8
  40873a:	repnz scas al,BYTE PTR es:[rdi]
  40873c:	mov    rdi,QWORD PTR [rip+0x78f5]        # 0x410038
  408743:	not    rcx
  408746:	mov    rdx,rcx
  408749:	mov    rcx,r8
  40874c:	add    edx,DWORD PTR [r12+0x4]
  408751:	repnz scas al,BYTE PTR es:[rdi]
  408753:	mov    rax,rcx
  408756:	not    rax
  408759:	lea    ecx,[rdx+rax*1+0x12]
  40875d:	call   0x402350
  408762:	lea    rdx,[rip+0x34ed]        # 0x40bc56
  408769:	mov    rcx,rax
  40876c:	mov    rbx,rax
  40876f:	call   0x402700
  408774:	mov    rsi,QWORD PTR [rip+0x78c5]        # 0x410040
  40877b:	mov    edx,0x20
  408780:	mov    rcx,rsi
  408783:	call   0x4074e8
  408788:	test   rax,rax
  40878b:	je     0x408e53
  408791:	lea    rdx,[rip+0x29a7]        # 0x40b13f
  408798:	mov    rcx,rbx
  40879b:	call   0x402700
  4087a0:	mov    rdx,QWORD PTR [rip+0x7899]        # 0x410040
  4087a7:	mov    rcx,rbx
  4087aa:	call   0x402700
  4087af:	lea    rdx,[rip+0x29e8]        # 0x40b19e
  4087b6:	mov    rcx,rbx
  4087b9:	call   0x402700
  4087be:	lea    rdx,[rip+0x349e]        # 0x40bc63
  4087c5:	mov    rcx,rbx
  4087c8:	call   0x402700
  4087cd:	mov    rsi,QWORD PTR [rip+0x7864]        # 0x410038
  4087d4:	mov    edx,0x20
  4087d9:	mov    rcx,rsi
  4087dc:	call   0x4074e8
  4087e1:	test   rax,rax
  4087e4:	je     0x408f8c
  4087ea:	lea    rdx,[rip+0x294e]        # 0x40b13f
  4087f1:	mov    rcx,rbx
  4087f4:	call   0x402700
  4087f9:	mov    rdx,QWORD PTR [rip+0x7838]        # 0x410038
  408800:	mov    rcx,rbx
  408803:	call   0x402700
  408808:	lea    rdx,[rip+0x2930]        # 0x40b13f
  40880f:	mov    rcx,rbx
  408812:	call   0x402700
  408817:	cmp    DWORD PTR [r12+0x4],0x0
  40881d:	jne    0x408e1e
  408823:	mov    rdx,QWORD PTR [rbx+0x8]
  408827:	mov    rcx,QWORD PTR [rip+0x784a]        # 0x410078
  40882e:	call   0x4017a0
  408833:	test   eax,eax
  408835:	jne    0x408b21
  40883b:	mov    rcx,rbx
  40883e:	call   0x4023a0
  408843:	mov    rdi,QWORD PTR [rip+0x77ee]        # 0x410038
  40884a:	or     r8,0xffffffffffffffff
  40884e:	xor    eax,eax
  408850:	mov    rcx,r8
  408853:	repnz scas al,BYTE PTR es:[rdi]
  408855:	mov    rdi,QWORD PTR [rip+0x77e4]        # 0x410040
  40885c:	not    rcx
  40885f:	mov    rdx,rcx
  408862:	mov    rcx,r8
  408865:	add    edx,DWORD PTR [rbp+0x4]
  408868:	repnz scas al,BYTE PTR es:[rdi]
  40886a:	mov    rax,rcx
  40886d:	not    rax
  408870:	lea    ecx,[rdx+rax*1+0x12]
  408874:	call   0x402350
  408879:	lea    rdx,[rip+0x33c5]        # 0x40bc45
  408880:	mov    rcx,rax
  408883:	mov    rbx,rax
  408886:	call   0x402700
  40888b:	mov    rsi,QWORD PTR [rip+0x77ae]        # 0x410040
  408892:	mov    edx,0x20
  408897:	mov    rcx,rsi
  40889a:	call   0x4074e8
  40889f:	test   rax,rax
  4088a2:	je     0x4090ed
  4088a8:	lea    rdx,[rip+0x2890]        # 0x40b13f
  4088af:	mov    rcx,rbx
  4088b2:	call   0x402700
  4088b7:	mov    rdx,QWORD PTR [rip+0x7782]        # 0x410040
  4088be:	mov    rcx,rbx
  4088c1:	call   0x402700
  4088c6:	lea    rdx,[rip+0x28d1]        # 0x40b19e
  4088cd:	mov    rcx,rbx
  4088d0:	call   0x402700
  4088d5:	mov    rsi,QWORD PTR [rip+0x775c]        # 0x410038
  4088dc:	mov    edx,0x20
  4088e1:	mov    rcx,rsi
  4088e4:	call   0x4074e8
  4088e9:	test   rax,rax
  4088ec:	je     0x4090ad
  4088f2:	lea    rdx,[rip+0x2846]        # 0x40b13f
  4088f9:	mov    rcx,rbx
  4088fc:	call   0x402700
  408901:	mov    rdx,QWORD PTR [rip+0x7730]        # 0x410038
  408908:	mov    rcx,rbx
  40890b:	call   0x402700
  408910:	lea    rdx,[rip+0x2828]        # 0x40b13f
  408917:	mov    rcx,rbx
  40891a:	call   0x402700
  40891f:	cmp    DWORD PTR [rbp+0x4],0x0
  408923:	jne    0x408fcc
  408929:	mov    rdx,QWORD PTR [rbx+0x8]
  40892d:	mov    rcx,QWORD PTR [rip+0x7754]        # 0x410088
  408934:	call   0x4017a0
  408939:	test   eax,eax
  40893b:	jne    0x408b21
  408941:	mov    rcx,rbx
  408944:	call   0x4023a0
  408949:	mov    rdi,QWORD PTR [rip+0x76f0]        # 0x410040
  408950:	or     r8,0xffffffffffffffff
  408954:	xor    eax,eax
  408956:	mov    rcx,r8
  408959:	repnz scas al,BYTE PTR es:[rdi]
  40895b:	mov    rdi,QWORD PTR [rip+0x76d6]        # 0x410038
  408962:	not    rcx
  408965:	mov    rdx,rcx
  408968:	mov    rcx,r8
  40896b:	add    edx,DWORD PTR [r12+0x4]
  408970:	repnz scas al,BYTE PTR es:[rdi]
  408972:	mov    rax,rcx
  408975:	not    rax
  408978:	lea    ecx,[rdx+rax*1+0x12]
  40897c:	call   0x402350
  408981:	lea    rdx,[rip+0x32ce]        # 0x40bc56
  408988:	mov    rcx,rax
  40898b:	mov    rbx,rax
  40898e:	call   0x402700
  408993:	mov    rsi,QWORD PTR [rip+0x76a6]        # 0x410040
  40899a:	mov    edx,0x20
  40899f:	mov    rcx,rsi
  4089a2:	call   0x4074e8
  4089a7:	test   rax,rax
  4089aa:	je     0x408f0b
  4089b0:	lea    rdx,[rip+0x2788]        # 0x40b13f
  4089b7:	mov    rcx,rbx
  4089ba:	call   0x402700
  4089bf:	mov    rdx,QWORD PTR [rip+0x767a]        # 0x410040
  4089c6:	mov    rcx,rbx
  4089c9:	call   0x402700
  4089ce:	lea    rdx,[rip+0x27c9]        # 0x40b19e
  4089d5:	mov    rcx,rbx
  4089d8:	call   0x402700
  4089dd:	lea    rdx,[rip+0x327f]        # 0x40bc63
  4089e4:	mov    rcx,rbx
  4089e7:	call   0x402700
  4089ec:	mov    rsi,QWORD PTR [rip+0x7645]        # 0x410038
  4089f3:	mov    edx,0x20
  4089f8:	mov    rcx,rsi
  4089fb:	call   0x4074e8
  408a00:	test   rax,rax
  408a03:	je     0x409180
  408a09:	lea    rdx,[rip+0x272f]        # 0x40b13f
  408a10:	mov    rcx,rbx
  408a13:	call   0x402700
  408a18:	mov    rdx,QWORD PTR [rip+0x7619]        # 0x410038
  408a1f:	mov    rcx,rbx
  408a22:	call   0x402700
  408a27:	lea    rdx,[rip+0x2711]        # 0x40b13f
  408a2e:	mov    rcx,rbx
  408a31:	call   0x402700
  408a36:	cmp    DWORD PTR [r12+0x4],0x0
  408a3c:	jne    0x40912d
  408a42:	mov    rsi,QWORD PTR [rsp+0x40]
  408a47:	test   rsi,rsi
  408a4a:	je     0x408a66
  408a4c:	lea    rdx,[rip+0x321e]        # 0x40bc71
  408a53:	mov    rcx,rbx
  408a56:	call   0x402700
  408a5b:	mov    rdx,rsi
  408a5e:	mov    rcx,rbx
  408a61:	call   0x402700
  408a66:	mov    rdx,QWORD PTR [rbx+0x8]
  408a6a:	mov    rcx,QWORD PTR [rip+0x7607]        # 0x410078
  408a71:	call   0x4017a0
  408a76:	test   eax,eax
  408a78:	jne    0x408b21
  408a7e:	mov    rcx,rbx
  408a81:	call   0x4023a0
  408a86:	mov    rdi,QWORD PTR [rip+0x75ab]        # 0x410038
  408a8d:	xor    eax,eax
  408a8f:	or     rcx,0xffffffffffffffff
  408a93:	mov    edx,DWORD PTR [rbp+0x4]
  408a96:	repnz scas al,BYTE PTR es:[rdi]
  408a98:	mov    rax,rcx
  408a9b:	not    rax
  408a9e:	lea    ecx,[rdx+rax*1+0x13]
  408aa2:	call   0x402350
  408aa7:	mov    rsi,QWORD PTR [rip+0x758a]        # 0x410038
  408aae:	mov    edx,0x20
  408ab3:	mov    rbx,rax
  408ab6:	mov    rcx,rsi
  408ab9:	call   0x4074e8
  408abe:	test   rax,rax
  408ac1:	je     0x40920d
  408ac7:	lea    rdx,[rip+0x2671]        # 0x40b13f
  408ace:	mov    rcx,rbx
  408ad1:	call   0x402700
  408ad6:	mov    rdx,QWORD PTR [rip+0x755b]        # 0x410038
  408add:	mov    rcx,rbx
  408ae0:	call   0x402700
  408ae5:	lea    rdx,[rip+0x2653]        # 0x40b13f
  408aec:	mov    rcx,rbx
  408aef:	call   0x402700
  408af4:	cmp    DWORD PTR [rbp+0x4],0x0
  408af8:	jne    0x4091c0
  408afe:	mov    rdx,QWORD PTR [rbx+0x8]
  408b02:	mov    rcx,QWORD PTR [rip+0x757f]        # 0x410088
  408b09:	call   0x4017a0
  408b0e:	test   eax,eax
  408b10:	jne    0x408b21
  408b12:	mov    rcx,rbx
  408b15:	call   0x4023a0
  408b1a:	xor    ecx,ecx
  408b1c:	call   0x401a50
  408b21:	mov    ecx,0x1
  408b26:	call   0x401a50
  408b2b:	lea    rdx,[rip+0x2f9b]        # 0x40bacd
  408b32:	mov    r8d,0x6
  408b38:	mov    rcx,rdi
  408b3b:	call   0x4074c0
  408b40:	test   eax,eax
  408b42:	je     0x408b8e
  408b44:	lea    rdx,[rip+0x2f89]        # 0x40bad4
  408b4b:	mov    r8d,0x8
  408b51:	mov    rcx,rdi
  408b54:	call   0x4074c0
  408b59:	test   eax,eax
  408b5b:	je     0x408b8e
  408b5d:	lea    rdx,[rip+0x2f79]        # 0x40badd
  408b64:	mov    r8d,0x5
  408b6a:	mov    rcx,rdi
  408b6d:	call   0x4074c0
  408b72:	test   eax,eax
  408b74:	je     0x408b8e
  408b76:	cmp    BYTE PTR [rdi],0x69
  408b79:	je     0x40914e
  408b7f:	mov    DWORD PTR [rip+0x74e7],0x0        # 0x410070
  408b89:	jmp    0x4079cc
  408b8e:	mov    DWORD PTR [rip+0x74d8],0x2        # 0x410070
  408b98:	jmp    0x4079cc
  408b9d:	mov    rcx,QWORD PTR [rip+0x74ac]        # 0x410050
  408ba4:	test   rcx,rcx
  408ba7:	je     0x4091e0
  408bad:	movzx  eax,BYTE PTR [rcx]
  408bb0:	test   al,al
  408bb2:	je     0x408da8
  408bb8:	lea    rdx,[rcx+0x1]
  408bbc:	jmp    0x408bd2
  408bbe:	cmp    al,0x2f
  408bc0:	je     0x408bd6
  408bc2:	add    rdx,0x1
  408bc6:	movzx  eax,BYTE PTR [rdx-0x1]
  408bca:	test   al,al
  408bcc:	je     0x408da8
  408bd2:	cmp    al,0x5c
  408bd4:	jne    0x408bbe
  408bd6:	mov    rcx,rdx
  408bd9:	jmp    0x408bc2
  408bdb:	lea    rdx,[rip+0x2f86]        # 0x40bb68
  408be2:	mov    rcx,r13
  408be5:	call   0x402700
  408bea:	lea    rdx,[rip+0x2f97]        # 0x40bb88
  408bf1:	mov    rcx,r13
  408bf4:	call   0x402700
  408bf9:	jmp    0x407d4e
  408bfe:	lea    rdx,[rip+0x2ede]        # 0x40bae3
  408c05:	mov    rcx,rbp
  408c08:	call   0x402700
  408c0d:	jmp    0x407cb0
  408c12:	lea    rdx,[rip+0x2edf]        # 0x40baf8
  408c19:	mov    rcx,rbp
  408c1c:	call   0x402700
  408c21:	mov    rax,QWORD PTR [rip+0x7458]        # 0x410080
  408c28:	test   rax,rax
  408c2b:	je     0x408c36
  408c2d:	cmp    BYTE PTR [rax],0x0
  408c30:	jne    0x407bbc
  408c36:	cmp    DWORD PTR [rip+0x13df],0x0        # 0x40a01c
  408c3d:	lea    r8,[rip+0x24fd]        # 0x40b141
  408c44:	je     0x407b1a
  408c4a:	jmp    0x407b13
  408c4f:	lea    rdx,[rip+0x2e8d]        # 0x40bae3
  408c56:	mov    rcx,rax
  408c59:	call   0x402700
  408c5e:	jmp    0x4079f9
  408c63:	call   0x4022a0
  408c68:	mov    r15,rax
  408c6b:	or     rcx,0xffffffffffffffff
  408c6f:	xor    eax,eax
  408c71:	mov    rdi,r15
  408c74:	repnz scas al,BYTE PTR es:[rdi]
  408c76:	not    rcx
  408c79:	add    rcx,0x4
  408c7d:	call   0x4057b0
  408c82:	cmp    DWORD PTR [rip+0x73e3],0x0        # 0x41006c
  408c89:	mov    QWORD PTR [rip+0x73a0],rax        # 0x410030
  408c90:	mov    r8,r15
  408c93:	je     0x408cc2
  408c95:	movzx  edx,BYTE PTR [r15]
  408c99:	test   dl,dl
  408c9b:	je     0x408cbf
  408c9d:	lea    r9,[r15+0x1]
  408ca1:	jmp    0x408cb5
  408ca3:	cmp    dl,0x2f
  408ca6:	je     0x408cba
  408ca8:	add    r9,0x1
  408cac:	movzx  edx,BYTE PTR [r9-0x1]
  408cb1:	test   dl,dl
  408cb3:	je     0x408cc2
  408cb5:	cmp    dl,0x5c
  408cb8:	jne    0x408ca3
  408cba:	mov    r8,r9
  408cbd:	jmp    0x408ca8
  408cbf:	mov    r8,r15
  408cc2:	lea    rdx,[rip+0x2d98]        # 0x40ba61
  408cc9:	mov    rcx,rax
  408ccc:	call   0x4074f8
  408cd1:	mov    rcx,r15
  408cd4:	mov    DWORD PTR [rip+0x1332],0x1        # 0x40a010
  408cde:	call   0x407578
  408ce3:	lea    rcx,[rip+0x2d7e]        # 0x40ba68
  408cea:	call   0x401770
  408cef:	jmp    0x40797c
  408cf4:	mov    eax,DWORD PTR [rip+0x7376]        # 0x410070
  408cfa:	sub    eax,0x2
  408cfd:	cmp    eax,0x1
  408d00:	seta   al
  408d03:	movzx  eax,al
  408d06:	mov    DWORD PTR [rip+0x1310],eax        # 0x40a01c
  408d0c:	jmp    0x4079d9
  408d11:	lea    rdx,[rip+0x2484]        # 0x40b19c
  408d18:	mov    rcx,rbx
  408d1b:	call   0x402700
  408d20:	mov    rdx,QWORD PTR [rbp+0x8]
  408d24:	mov    rcx,rbx
  408d27:	call   0x402700
  408d2c:	jmp    0x4086fc
  408d31:	mov    rsi,QWORD PTR [rip+0x7340]        # 0x410078
  408d38:	mov    rbx,QWORD PTR [rip+0x8755]        # 0x411494
  408d3f:	call   rbx
  408d41:	lea    rdx,[rip+0x2e9d]        # 0x40bbe5
  408d48:	lea    rcx,[rax+0x60]
  408d4c:	mov    r8,rsi
  408d4f:	call   0x407590
  408d54:	mov    rsi,QWORD PTR [r12+0x8]
  408d59:	call   rbx
  408d5b:	lea    rdx,[rip+0x2e99]        # 0x40bbfb
  408d62:	lea    rcx,[rax+0x60]
  408d66:	mov    r8,rsi
  408d69:	call   0x407590
  408d6e:	mov    rsi,QWORD PTR [rip+0x7313]        # 0x410088
  408d75:	call   rbx
  408d77:	lea    rdx,[rip+0x2e93]        # 0x40bc11
  408d7e:	lea    rcx,[rax+0x60]
  408d82:	mov    r8,rsi
  408d85:	call   0x407590
  408d8a:	mov    rsi,QWORD PTR [rbp+0x8]
  408d8e:	call   rbx
  408d90:	lea    rdx,[rip+0x2e90]        # 0x40bc27
  408d97:	lea    rcx,[rax+0x60]
  408d9b:	mov    r8,rsi
  408d9e:	call   0x407590
  408da3:	jmp    0x408667
  408da8:	call   0x405880
  408dad:	mov    QWORD PTR [rip+0x7294],rax        # 0x410048
  408db4:	jmp    0x407955
  408db9:	lea    rdx,[rip+0x2d03]        # 0x40bac3
  408dc0:	mov    rcx,rdi
  408dc3:	call   0x4074a8
  408dc8:	cmp    rax,0x1
  408dcc:	sbb    eax,eax
  408dce:	not    eax
  408dd0:	and    eax,0x2
  408dd3:	mov    DWORD PTR [rip+0x729b],eax        # 0x410074
  408dd9:	jmp    0x4079a5
  408dde:	mov    edx,0x9
  408de3:	mov    rcx,rsi
  408de6:	call   0x4074e8
  408deb:	test   rax,rax
  408dee:	jne    0x4086c5
  408df4:	lea    rdx,[rip+0x2346]        # 0x40b141
  408dfb:	mov    rcx,rbx
  408dfe:	call   0x402700
  408e03:	mov    rdx,QWORD PTR [rip+0x7236]        # 0x410040
  408e0a:	mov    rcx,rbx
  408e0d:	call   0x402700
  408e12:	lea    rdx,[rip+0x2328]        # 0x40b141
  408e19:	jmp    0x4086ea
  408e1e:	lea    rdx,[rip+0x2377]        # 0x40b19c
  408e25:	mov    rcx,rbx
  408e28:	call   0x402700
  408e2d:	mov    rdx,QWORD PTR [r12+0x8]
  408e32:	mov    rcx,rbx
  408e35:	call   0x402700
  408e3a:	jmp    0x408823
  408e3f:	lea    rdx,[rip+0x2ccb]        # 0x40bb11
  408e46:	mov    rcx,rbp
  408e49:	call   0x402700
  408e4e:	jmp    0x408c21
  408e53:	mov    edx,0x9
  408e58:	mov    rcx,rsi
  408e5b:	call   0x4074e8
  408e60:	test   rax,rax
  408e63:	jne    0x408791
  408e69:	lea    rdx,[rip+0x22d1]        # 0x40b141
  408e70:	mov    rcx,rbx
  408e73:	call   0x402700
  408e78:	mov    rdx,QWORD PTR [rip+0x71c1]        # 0x410040
  408e7f:	mov    rcx,rbx
  408e82:	call   0x402700
  408e87:	lea    rdx,[rip+0x230e]        # 0x40b19c
  408e8e:	jmp    0x4087b6
  408e93:	mov    rdi,QWORD PTR [rip+0x71ae]        # 0x410048
  408e9a:	mov    edx,0x2e
  408e9f:	mov    rcx,rdi
  408ea2:	call   0x4074b0
  408ea7:	test   rax,rax
  408eaa:	je     0x4091f6
  408eb0:	sub    rax,rdi
  408eb3:	mov    rbx,rax
  408eb6:	lea    rcx,[rbx+0x5]
  408eba:	call   0x4057b0
  408ebf:	mov    rdx,QWORD PTR [rip+0x7182]        # 0x410048
  408ec6:	mov    rsi,rax
  408ec9:	mov    rcx,rax
  408ecc:	mov    r8,rbx
  408ecf:	mov    QWORD PTR [rip+0x7162],rax        # 0x410038
  408ed6:	mov    rdi,rsi
  408ed9:	call   0x4074b8
  408ede:	mov    BYTE PTR [rsi+rbx*1],0x0
  408ee2:	xor    eax,eax
  408ee4:	or     rcx,0xffffffffffffffff
  408ee8:	repnz scas al,BYTE PTR es:[rdi]
  408eea:	mov    DWORD PTR [rip+0x1120],0x1        # 0x40a014
  408ef4:	not    rcx
  408ef7:	lea    rax,[rsi+rcx*1-0x1]
  408efc:	mov    DWORD PTR [rax],0x7078652e
  408f02:	mov    BYTE PTR [rax+0x4],0x0
  408f06:	jmp    0x40872a
  408f0b:	mov    edx,0x9
  408f10:	mov    rcx,rsi
  408f13:	call   0x4074e8
  408f18:	test   rax,rax
  408f1b:	jne    0x4089b0
  408f21:	lea    rdx,[rip+0x2219]        # 0x40b141
  408f28:	mov    rcx,rbx
  408f2b:	call   0x402700
  408f30:	mov    rdx,QWORD PTR [rip+0x7109]        # 0x410040
  408f37:	mov    rcx,rbx
  408f3a:	call   0x402700
  408f3f:	lea    rdx,[rip+0x2256]        # 0x40b19c
  408f46:	jmp    0x4089d5
  408f4b:	lea    rcx,[rip+0x2b03]        # 0x40ba55
  408f52:	call   0x4016b0
  408f57:	mov    QWORD PTR [rip+0x712a],rax        # 0x410088
  408f5e:	jmp    0x407963
  408f63:	lea    rcx,[rip+0x2aef]        # 0x40ba59
  408f6a:	call   0x4016b0
  408f6f:	mov    QWORD PTR [rip+0x7102],rax        # 0x410078
  408f76:	jmp    0x407971
  408f7b:	call   0x405880
  408f80:	mov    QWORD PTR [rip+0x70c9],rax        # 0x410050
  408f87:	jmp    0x407955
  408f8c:	mov    edx,0x9
  408f91:	mov    rcx,rsi
  408f94:	call   0x4074e8
  408f99:	test   rax,rax
  408f9c:	jne    0x4087ea
  408fa2:	lea    rdx,[rip+0x2198]        # 0x40b141
  408fa9:	mov    rcx,rbx
  408fac:	call   0x402700
  408fb1:	mov    rdx,QWORD PTR [rip+0x7080]        # 0x410038
  408fb8:	mov    rcx,rbx
  408fbb:	call   0x402700
  408fc0:	lea    rdx,[rip+0x217a]        # 0x40b141
  408fc7:	jmp    0x40880f
  408fcc:	lea    rdx,[rip+0x21c9]        # 0x40b19c
  408fd3:	mov    rcx,rbx
  408fd6:	call   0x402700
  408fdb:	mov    rdx,QWORD PTR [rbp+0x8]
  408fdf:	mov    rcx,rbx
  408fe2:	call   0x402700
  408fe7:	jmp    0x408929
  408fec:	call   0x4022a0
  408ff1:	mov    rbx,rax
  408ff4:	or     rcx,0xffffffffffffffff
  408ff8:	xor    eax,eax
  408ffa:	mov    rdi,rbx
  408ffd:	repnz scas al,BYTE PTR es:[rdi]
  408fff:	mov    rsi,rcx
  409002:	not    rsi
  409005:	mov    rcx,rsi
  409008:	add    rcx,0x5
  40900c:	call   0x4057b0
  409011:	cmp    DWORD PTR [rip+0x7054],0x0        # 0x41006c
  409018:	mov    QWORD PTR [rip+0x7021],rax        # 0x410040
  40901f:	mov    r8,rbx
  409022:	lea    rdx,[rbx+0x1]
  409026:	jne    0x409064
  409028:	lea    rdx,[rip+0x2c0e]        # 0x40bc3d
  40902f:	mov    rcx,rax
  409032:	call   0x4074f8
  409037:	mov    rcx,rbx
  40903a:	mov    DWORD PTR [rip+0xfd4],0x1        # 0x40a018
  409044:	call   0x407578
  409049:	jmp    0x408675
  40904e:	cmp    cl,0x5c
  409051:	je     0x40905d
  409053:	cmp    cl,0x2f
  409056:	mov    r9,r8
  409059:	cmove  r9,rdx
  40905d:	add    rdx,0x1
  409061:	mov    r8,r9
  409064:	movzx  ecx,BYTE PTR [rdx-0x1]
  409068:	mov    r9,rdx
  40906b:	test   cl,cl
  40906d:	jne    0x40904e
  40906f:	jmp    0x409028
  409071:	mov    edx,0x9
  409076:	mov    rcx,r14
  409079:	call   0x4074e8
  40907e:	test   rax,rax
  409081:	jne    0x407ddb
  409087:	lea    rdx,[rip+0x210e]        # 0x40b19c
  40908e:	mov    rcx,r13
  409091:	call   0x402700
  409096:	mov    rdx,r14
  409099:	mov    rcx,r13
  40909c:	call   0x402700
  4090a1:	lea    rdx,[rip+0x2099]        # 0x40b141
  4090a8:	jmp    0x407dfc
  4090ad:	mov    edx,0x9
  4090b2:	mov    rcx,rsi
  4090b5:	call   0x4074e8
  4090ba:	test   rax,rax
  4090bd:	jne    0x4088f2
  4090c3:	lea    rdx,[rip+0x2077]        # 0x40b141
  4090ca:	mov    rcx,rbx
  4090cd:	call   0x402700
  4090d2:	mov    rdx,QWORD PTR [rip+0x6f5f]        # 0x410038
  4090d9:	mov    rcx,rbx
  4090dc:	call   0x402700
  4090e1:	lea    rdx,[rip+0x2059]        # 0x40b141
  4090e8:	jmp    0x408917
  4090ed:	mov    edx,0x9
  4090f2:	mov    rcx,rsi
  4090f5:	call   0x4074e8
  4090fa:	test   rax,rax
  4090fd:	jne    0x4088a8
  409103:	lea    rdx,[rip+0x2037]        # 0x40b141
  40910a:	mov    rcx,rbx
  40910d:	call   0x402700
  409112:	mov    rdx,QWORD PTR [rip+0x6f27]        # 0x410040
  409119:	mov    rcx,rbx
  40911c:	call   0x402700
  409121:	lea    rdx,[rip+0x2074]        # 0x40b19c
  409128:	jmp    0x4088cd
  40912d:	lea    rdx,[rip+0x2068]        # 0x40b19c
  409134:	mov    rcx,rbx
  409137:	call   0x402700
  40913c:	mov    rdx,QWORD PTR [r12+0x8]
  409141:	mov    rcx,rbx
  409144:	call   0x402700
  409149:	jmp    0x408a42
  40914e:	movzx  eax,BYTE PTR [rdi+0x1]
  409152:	sub    eax,0x33
  409155:	cmp    al,0x3
  409157:	ja     0x408b7f
  40915d:	cmp    BYTE PTR [rdi+0x2],0x38
  409161:	jne    0x408b7f
  409167:	cmp    BYTE PTR [rdi+0x3],0x36
  40916b:	jne    0x408b7f
  409171:	mov    DWORD PTR [rip+0x6ef5],0x1        # 0x410070
  40917b:	jmp    0x4079cc
  409180:	mov    edx,0x9
  409185:	mov    rcx,rsi
  409188:	call   0x4074e8
  40918d:	test   rax,rax
  409190:	jne    0x408a09
  409196:	lea    rdx,[rip+0x1fa4]        # 0x40b141
  40919d:	mov    rcx,rbx
  4091a0:	call   0x402700
  4091a5:	mov    rdx,QWORD PTR [rip+0x6e8c]        # 0x410038
  4091ac:	mov    rcx,rbx
  4091af:	call   0x402700
  4091b4:	lea    rdx,[rip+0x1f86]        # 0x40b141
  4091bb:	jmp    0x408a2e
  4091c0:	lea    rdx,[rip+0x1fd5]        # 0x40b19c
  4091c7:	mov    rcx,rbx
  4091ca:	call   0x402700
  4091cf:	mov    rdx,QWORD PTR [rbp+0x8]
  4091d3:	mov    rcx,rbx
  4091d6:	call   0x402700
  4091db:	jmp    0x408afe
  4091e0:	lea    rcx,[rip+0x2839]        # 0x40ba20
  4091e7:	call   0x401770
  4091ec:	mov    ecx,0x1
  4091f1:	call   0x4075b0
  4091f6:	xor    eax,eax
  4091f8:	or     rcx,0xffffffffffffffff
  4091fc:	repnz scas al,BYTE PTR es:[rdi]
  4091fe:	mov    rax,rcx
  409201:	not    rax
  409204:	lea    rbx,[rax-0x1]
  409208:	jmp    0x408eb6
  40920d:	mov    edx,0x9
  409212:	mov    rcx,rsi
  409215:	call   0x4074e8
  40921a:	test   rax,rax
  40921d:	jne    0x408ac7
  409223:	lea    rdx,[rip+0x1f17]        # 0x40b141
  40922a:	mov    rcx,rbx
  40922d:	call   0x402700
  409232:	mov    rdx,QWORD PTR [rip+0x6dff]        # 0x410038
  409239:	mov    rcx,rbx
  40923c:	call   0x402700
  409241:	lea    rdx,[rip+0x1ef9]        # 0x40b141
  409248:	jmp    0x408aec
  40924d:	nop
  40924e:	nop
  40924f:	nop
  409250:	(bad)  
  409251:	(bad)  
  409252:	(bad)  
  409253:	(bad)  
  409254:	(bad)  
  409255:	(bad)  
  409256:	(bad)  
  409257:	inc    DWORD PTR [rax]
  409259:	add    BYTE PTR [rax],al
  40925b:	add    BYTE PTR [rax],al
  40925d:	add    BYTE PTR [rax],al
  40925f:	add    bh,bh
  409261:	(bad)  
  409262:	(bad)  
  409263:	(bad)  
  409264:	(bad)  
  409265:	(bad)  
  409266:	(bad)  
  409267:	inc    DWORD PTR [rax]
  409269:	add    BYTE PTR [rax],al
  40926b:	add    BYTE PTR [rax],al
  40926d:	add    BYTE PTR [rax],al
	...
