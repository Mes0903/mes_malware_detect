
1b67441f080adf23da22736c557813d3bb459c915a1b84d8253b8e9599df2708.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0xc345]        # 0x40d360
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0xc346]        # 0x40d370
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0xc349]        # 0x40d380
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0xc30c]        # 0x40d350
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0xc1af]        # 0x40d200
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0xc2e1]        # 0x40d340
  40105f:	mov    DWORD PTR [rip+0xefa3],edx        # 0x410008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x407638
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x406380
  401081:	mov    rdx,QWORD PTR [rip+0xc208]        # 0x40d290
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0xc1ee]        # 0x40d280
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0xc254]        # 0x40d2f0
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0xc18b]        # 0x40d230
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x405f60
  4010af:	mov    rax,QWORD PTR [rip+0xc0fa]        # 0x40d1b0
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x407638
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0x5139]        # 0x406260
  401127:	call   0x406250
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0xc1b5]        # 0x40d320
  40116b:	lea    r8,[rip+0xeea6]        # 0x410018
  401172:	lea    rdx,[rip+0xeea7]        # 0x410020
  401179:	lea    rcx,[rip+0xeea8]        # 0x410028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0xee78],eax        # 0x410000
  401188:	lea    rax,[rip+0xee71]        # 0x410000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0xc145]        # 0x40d2e0
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x407650
  4011a3:	mov    DWORD PTR [rip+0xee67],eax        # 0x410010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0xc17a]        # 0x40d340
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0xc06b]        # 0x40d260
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0x10232]        # 0x411434
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0xc047]        # 0x40d270
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0xedba],0x1        # 0x410004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0xbf8c]        # 0x40d1f0
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x406570
  40127d:	lea    rcx,[rip+0x588c]        # 0x406b10
  401284:	call   QWORD PTR [rip+0x101a2]        # 0x41142c
  40128a:	mov    rdx,QWORD PTR [rip+0xbfbf]        # 0x40d250
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x406a20
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x407680
  4012a5:	call   0x406360
  4012aa:	mov    rax,QWORD PTR [rip+0xbf4f]        # 0x40d200
  4012b1:	mov    QWORD PTR [rip+0xf810],rax        # 0x410ac8
  4012b8:	mov    rax,QWORD PTR [rip+0xbf61]        # 0x40d220
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0xf7a9],rax        # 0x410ac0
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x8cca],eax        # 0x40a000
  401336:	mov    r12d,DWORD PTR [rip+0xeceb]        # 0x410028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x407550
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0xecc2]        # 0x410020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x4074c8
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x407550
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x407548
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0xec6a],rbp        # 0x410020
  4013b6:	call   0x405f30
  4013bb:	mov    rax,QWORD PTR [rip+0xbe4e]        # 0x40d210
  4013c2:	mov    rdx,QWORD PTR [rip+0xec4f]        # 0x410018
  4013c9:	mov    ecx,DWORD PTR [rip+0xec59]        # 0x410028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0xec3c]        # 0x410018
  4013dc:	mov    rdx,QWORD PTR [rip+0xec3d]        # 0x410020
  4013e3:	call   0x407790
  4013e8:	mov    ecx,DWORD PTR [rip+0xec1a]        # 0x410008
  4013ee:	mov    DWORD PTR [rip+0xec18],eax        # 0x41000c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0xec02]        # 0x410004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x407620
  40140b:	mov    eax,DWORD PTR [rip+0xebfb]        # 0x41000c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0xbe39]        # 0x40d270
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x407628
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0xbe4d]        # 0x40d2b0
  401463:	mov    rcx,QWORD PTR [rip+0xbe36]        # 0x40d2a0
  40146a:	call   0x4075f8
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0xff23]        # 0x4113bc
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0xbe29]        # 0x40d2d0
  4014a7:	mov    rcx,QWORD PTR [rip+0xbe12]        # 0x40d2c0
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x4075f8
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x4075b0
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0xbe65]        # 0x40d340
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x405f70
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0xbe35]        # 0x40d340
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x405f70
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	push   rbp
  401531:	push   rdi
  401532:	push   rsi
  401533:	push   rbx
  401534:	sub    rsp,0x28
  401538:	mov    rsi,QWORD PTR [rip+0xeb21]        # 0x410060
  40153f:	mov    rbx,QWORD PTR [rip+0xff4e]        # 0x411494
  401546:	mov    rdi,rcx
  401549:	mov    rbp,rdx
  40154c:	test   rsi,rsi
  40154f:	je     0x401566
  401551:	call   rbx
  401553:	lea    rdx,[rip+0x9aa6]        # 0x40b000
  40155a:	lea    rcx,[rax+0x60]
  40155e:	mov    r8,rsi
  401561:	call   0x407590
  401566:	call   rbx
  401568:	lea    rcx,[rax+0x60]
  40156c:	mov    rdx,rdi
  40156f:	mov    r8,rbp
  401572:	call   0x407498
  401577:	call   rbx
  401579:	lea    rdx,[rax+0x60]
  40157d:	mov    ecx,0xa
  401582:	add    rsp,0x28
  401586:	pop    rbx
  401587:	pop    rsi
  401588:	pop    rdi
  401589:	pop    rbp
  40158a:	jmp    0x407588
  40158f:	nop
  401590:	sub    rsp,0x38
  401594:	mov    eax,DWORD PTR [rip+0xeabe]        # 0x410058
  40159a:	mov    QWORD PTR [rsp+0x48],rdx
  40159f:	lea    rdx,[rsp+0x48]
  4015a4:	mov    QWORD PTR [rsp+0x50],r8
  4015a9:	mov    QWORD PTR [rsp+0x58],r9
  4015ae:	test   eax,eax
  4015b0:	mov    QWORD PTR [rsp+0x28],rdx
  4015b5:	jne    0x4015bc
  4015b7:	add    rsp,0x38
  4015bb:	ret    
  4015bc:	call   0x401530
  4015c1:	jmp    0x4015b7
  4015c3:	nop    DWORD PTR [rax]
  4015c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4015d0:	push   rbp
  4015d1:	push   rdi
  4015d2:	push   rsi
  4015d3:	push   rbx
  4015d4:	sub    rsp,0x68
  4015d8:	mov    rdi,rcx
  4015db:	mov    rcx,rdx
  4015de:	movsxd rsi,r8d
  4015e1:	mov    rbp,rdx
  4015e4:	call   0x4074c8
  4015e9:	mov    rcx,rdi
  4015ec:	mov    rbx,rax
  4015ef:	call   0x4074c8
  4015f4:	lea    rcx,[rbx+rax*1+0xe]
  4015f9:	call   0x4057b0
  4015fe:	mov    rdx,rbp
  401601:	mov    rbx,rax
  401604:	mov    rcx,rax
  401607:	call   0x4074d8
  40160c:	lea    rcx,[rbx+rsi*1]
  401610:	mov    rdx,rdi
  401613:	call   0x4074d8
  401618:	mov    edx,0x2f
  40161d:	mov    rcx,rbx
  401620:	call   0x4074e8
  401625:	test   rax,rax
  401628:	je     0x401642
  40162a:	lea    rbp,[rsp+0x20]
  40162f:	mov    rcx,rbx
  401632:	mov    rsi,QWORD PTR [rip+0x10023]        # 0x41165c
  401639:	mov    rdx,rbp
  40163c:	call   rsi
  40163e:	test   eax,eax
  401640:	jne    0x40165d
  401642:	lea    rcx,[rip+0x99bc]        # 0x40b005
  401649:	mov    rdx,rbx
  40164c:	call   0x401590
  401651:	mov    rax,rbx
  401654:	add    rsp,0x68
  401658:	pop    rbx
  401659:	pop    rsi
  40165a:	pop    rdi
  40165b:	pop    rbp
  40165c:	ret    
  40165d:	xor    eax,eax
  40165f:	or     rcx,0xffffffffffffffff
  401663:	mov    rdi,rbx
  401666:	repnz scas al,BYTE PTR es:[rdi]
  401668:	mov    rdx,rbp
  40166b:	not    rcx
  40166e:	lea    rax,[rbx+rcx*1-0x1]
  401673:	mov    rcx,rbx
  401676:	mov    DWORD PTR [rax],0x6578652e
  40167c:	mov    BYTE PTR [rax+0x4],0x0
  401680:	call   rsi
  401682:	test   eax,eax
  401684:	je     0x401642
  401686:	lea    rcx,[rip+0x9987]        # 0x40b014
  40168d:	mov    rdx,rbx
  401690:	call   0x401590
  401695:	mov    rcx,rbx
  401698:	call   0x407578
  40169d:	xor    eax,eax
  40169f:	jmp    0x401654
  4016a1:	nop    DWORD PTR [rax+rax*1+0x0]
  4016a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4016b0:	push   rsi
  4016b1:	push   rbx
  4016b2:	sub    rsp,0x28
  4016b6:	mov    rdx,QWORD PTR [rip+0xe9a3]        # 0x410060
  4016bd:	mov    rsi,rcx
  4016c0:	movzx  eax,BYTE PTR [rdx]
  4016c3:	test   al,al
  4016c5:	je     0x40175d
  4016cb:	mov    r9,rdx
  4016ce:	xor    ebx,ebx
  4016d0:	xor    r8d,r8d
  4016d3:	jmp    0x4016f6
  4016d5:	cmp    al,0x5c
  4016d7:	sete   r11b
  4016db:	cmp    al,0x3a
  4016dd:	sete   r10b
  4016e1:	or     r11b,r10b
  4016e4:	jne    0x401750
  4016e6:	cmp    al,0x2f
  4016e8:	je     0x401750
  4016ea:	add    r9,0x1
  4016ee:	movzx  eax,BYTE PTR [r9]
  4016f2:	test   al,al
  4016f4:	je     0x401709
  4016f6:	cmp    al,0x2d
  4016f8:	jne    0x4016d5
  4016fa:	mov    r8,r9
  4016fd:	add    r9,0x1
  401701:	movzx  eax,BYTE PTR [r9]
  401705:	test   al,al
  401707:	jne    0x4016f6
  401709:	test   r8,r8
  40170c:	je     0x401758
  40170e:	sub    r8,rdx
  401711:	mov    rcx,rsi
  401714:	add    r8d,0x1
  401718:	call   0x4015d0
  40171d:	test   rax,rax
  401720:	jne    0x401740
  401722:	test   rbx,rbx
  401725:	je     0x401740
  401727:	mov    rdx,QWORD PTR [rip+0xe932]        # 0x410060
  40172e:	sub    rbx,rdx
  401731:	mov    rcx,rsi
  401734:	mov    r8,rbx
  401737:	add    r8d,0x1
  40173b:	call   0x4015d0
  401740:	test   rax,rax
  401743:	je     0x40175d
  401745:	add    rsp,0x28
  401749:	pop    rbx
  40174a:	pop    rsi
  40174b:	ret    
  40174c:	nop    DWORD PTR [rax+0x0]
  401750:	mov    rbx,r9
  401753:	xor    r8d,r8d
  401756:	jmp    0x4016ea
  401758:	test   rbx,rbx
  40175b:	jne    0x40172e
  40175d:	mov    rcx,rsi
  401760:	add    rsp,0x28
  401764:	pop    rbx
  401765:	pop    rsi
  401766:	jmp    0x405880
  40176b:	nop    DWORD PTR [rax+rax*1+0x0]
  401770:	sub    rsp,0x38
  401774:	mov    QWORD PTR [rsp+0x48],rdx
  401779:	lea    rdx,[rsp+0x48]
  40177e:	mov    QWORD PTR [rsp+0x50],r8
  401783:	mov    QWORD PTR [rsp+0x58],r9
  401788:	mov    QWORD PTR [rsp+0x28],rdx
  40178d:	call   0x401530
  401792:	nop
  401793:	add    rsp,0x38
  401797:	ret    
  401798:	nop    DWORD PTR [rax+rax*1+0x0]
  4017a0:	push   rbp
  4017a1:	push   r12
  4017a3:	push   rdi
  4017a4:	push   rsi
  4017a5:	push   rbx
  4017a6:	mov    rbp,rsp
  4017a9:	sub    rsp,0x70
  4017ad:	mov    rdi,rcx
  4017b0:	mov    rsi,rdx
  4017b3:	call   0x4022a0
  4017b8:	mov    r8d,DWORD PTR [rip+0xe899]        # 0x410058
  4017bf:	mov    r12,rax
  4017c2:	test   r8d,r8d
  4017c5:	jne    0x40189f
  4017cb:	mov    ecx,DWORD PTR [rip+0xe897]        # 0x410068
  4017d1:	test   ecx,ecx
  4017d3:	jne    0x40189f
  4017d9:	movzx  ebx,BYTE PTR [rsi]
  4017dc:	test   bl,bl
  4017de:	je     0x4019a6
  4017e4:	mov    edx,ebx
  4017e6:	mov    rax,rsi
  4017e9:	xor    ecx,ecx
  4017eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4017f0:	cmp    dl,0x20
  4017f3:	sete   dl
  4017f6:	add    rax,0x1
  4017fa:	movzx  edx,dl
  4017fd:	add    ecx,edx
  4017ff:	movzx  edx,BYTE PTR [rax]
  401802:	test   dl,dl
  401804:	jne    0x4017f0
  401806:	lea    eax,[rcx+0x4]
  401809:	cdqe   
  40180b:	lea    rax,[rax*8+0x1e]
  401813:	and    rax,0xfffffffffffffff0
  401817:	call   0x4072e0
  40181c:	mov    r11d,0x1
  401822:	sub    rsp,rax
  401825:	cmp    bl,0x20
  401828:	lea    rax,[rsp+0x40]
  40182d:	mov    QWORD PTR [rax],rdi
  401830:	je     0x401899
  401832:	test   bl,bl
  401834:	je     0x4018db
  40183a:	cmp    bl,0x22
  40183d:	sete   cl
  401840:	cmp    bl,0x27
  401843:	sete   dl
  401846:	or     dl,cl
  401848:	je     0x4018c0
  40184a:	movzx  r8d,BYTE PTR [rsi+0x1]
  40184f:	lea    r10,[rsi+0x1]
  401853:	lea    ecx,[r11+0x1]
  401857:	mov    QWORD PTR [rax+r11*8],r10
  40185b:	cmp    bl,r8b
  40185e:	je     0x401a40
  401864:	test   r8b,r8b
  401867:	jne    0x401875
  401869:	jmp    0x4018e0
  40186b:	nop    DWORD PTR [rax+rax*1+0x0]
  401870:	test   r11b,r11b
  401873:	je     0x4018e0
  401875:	add    r10,0x1
  401879:	movzx  r11d,BYTE PTR [r10]
  40187d:	cmp    bl,r11b
  401880:	jne    0x401870
  401882:	test   dl,dl
  401884:	mov    BYTE PTR [r10],0x0
  401888:	jne    0x4018d2
  40188a:	lea    rsi,[r10+0x1]
  40188e:	movsxd r11,ecx
  401891:	movzx  ebx,BYTE PTR [rsi]
  401894:	cmp    bl,0x20
  401897:	jne    0x401832
  401899:	add    rsi,0x1
  40189d:	jmp    0x401891
  40189f:	call   QWORD PTR [rip+0xfbef]        # 0x411494
  4018a5:	lea    rdx,[rip+0x9777]        # 0x40b023
  4018ac:	lea    rcx,[rax+0x60]
  4018b0:	mov    r9,rsi
  4018b3:	mov    r8,rdi
  4018b6:	call   0x407590
  4018bb:	jmp    0x4017d9
  4018c0:	lea    ecx,[r11+0x1]
  4018c4:	mov    QWORD PTR [rax+r11*8],rsi
  4018c8:	mov    r10,rsi
  4018cb:	mov    ebx,0x20
  4018d0:	jmp    0x401875
  4018d2:	movsxd r11,ecx
  4018d5:	lea    rsi,[r10+0x2]
  4018d9:	jmp    0x401891
  4018db:	mov    ecx,r11d
  4018de:	xchg   ax,ax
  4018e0:	mov    edx,DWORD PTR [rip+0xe782]        # 0x410068
  4018e6:	movsxd rcx,ecx
  4018e9:	mov    QWORD PTR [rax+rcx*8],0x0
  4018f1:	test   edx,edx
  4018f3:	je     0x401901
  4018f5:	xor    eax,eax
  4018f7:	mov    rsp,rbp
  4018fa:	pop    rbx
  4018fb:	pop    rsi
  4018fc:	pop    rdi
  4018fd:	pop    r12
  4018ff:	pop    rbp
  401900:	ret    
  401901:	lea    rdx,[rbp-0x8]
  401905:	mov    DWORD PTR [rsp+0x30],0x7
  40190d:	mov    r8,QWORD PTR [rip+0xe74c]        # 0x410060
  401914:	mov    r9,r12
  401917:	mov    QWORD PTR [rsp+0x28],rdx
  40191c:	lea    rdx,[rbp-0x10]
  401920:	mov    QWORD PTR [rsp+0x20],rdx
  401925:	mov    rcx,QWORD PTR [rax]
  401928:	mov    rdx,rax
  40192b:	call   0x4039c0
  401930:	cmp    eax,0xffffffff
  401933:	je     0x4019ad
  401935:	lea    rdx,[rbp-0x14]
  401939:	xor    r8d,r8d
  40193c:	mov    ecx,eax
  40193e:	call   0x403b00
  401943:	add    eax,0x1
  401946:	je     0x401a1a
  40194c:	mov    edx,DWORD PTR [rbp-0x14]
  40194f:	movzx  ecx,dl
  401952:	cmp    ecx,0x7f
  401955:	je     0x401971
  401957:	test   ecx,ecx
  401959:	je     0x401971
  40195b:	lea    rcx,[rip+0x96e6]        # 0x40b048
  401962:	and    edx,0x7f
  401965:	call   0x401770
  40196a:	mov    eax,0x1
  40196f:	jmp    0x4018f7
  401971:	test   ecx,ecx
  401973:	mov    eax,0x1
  401978:	jne    0x4018f7
  40197e:	movzx  esi,dh
  401981:	test   esi,esi
  401983:	mov    r8d,esi
  401986:	je     0x4018f5
  40198c:	lea    rcx,[rip+0x96d4]        # 0x40b067
  401993:	mov    rdx,rdi
  401996:	mov    DWORD PTR [rbp-0x24],eax
  401999:	call   0x401770
  40199e:	mov    eax,DWORD PTR [rbp-0x24]
  4019a1:	jmp    0x4018f7
  4019a6:	xor    ecx,ecx
  4019a8:	jmp    0x401806
  4019ad:	call   QWORD PTR [rip+0xfb29]        # 0x4114dc
  4019b3:	mov    rdi,QWORD PTR [rip+0xe6a6]        # 0x410060
  4019ba:	mov    esi,DWORD PTR [rax]
  4019bc:	mov    rbx,QWORD PTR [rip+0xfad1]        # 0x411494
  4019c3:	call   rbx
  4019c5:	lea    rdx,[rip+0x9634]        # 0x40b000
  4019cc:	lea    rcx,[rax+0x60]
  4019d0:	mov    r8,rdi
  4019d3:	call   0x407590
  4019d8:	mov    r12,QWORD PTR [rbp-0x8]
  4019dc:	mov    rdi,QWORD PTR [rbp-0x10]
  4019e0:	call   rbx
  4019e2:	lea    rcx,[rax+0x60]
  4019e6:	mov    r8,r12
  4019e9:	mov    rdx,rdi
  4019ec:	call   0x407590
  4019f1:	mov    ecx,esi
  4019f3:	call   0x4074d0
  4019f8:	mov    rsi,rax
  4019fb:	call   rbx
  4019fd:	lea    rdx,[rip+0x9626]        # 0x40b02a
  401a04:	lea    rcx,[rax+0x60]
  401a08:	mov    r8,rsi
  401a0b:	call   0x407590
  401a10:	mov    eax,0x1
  401a15:	jmp    0x4018f7
  401a1a:	call   QWORD PTR [rip+0xfabc]        # 0x4114dc
  401a20:	mov    ecx,DWORD PTR [rax]
  401a22:	call   0x4074d0
  401a27:	lea    rcx,[rip+0x9602]        # 0x40b030
  401a2e:	mov    rdx,rax
  401a31:	call   0x401770
  401a36:	mov    eax,0x1
  401a3b:	jmp    0x4018f7
  401a40:	mov    BYTE PTR [rsi+0x1],0x0
  401a44:	movsxd r11,ecx
  401a47:	jmp    0x4018d5
  401a4c:	nop    DWORD PTR [rax+0x0]
  401a50:	push   rbx
  401a51:	sub    rsp,0x20
  401a55:	mov    ebx,ecx
  401a57:	mov    ecx,DWORD PTR [rip+0x85bb]        # 0x40a018
  401a5d:	test   ecx,ecx
  401a5f:	je     0x401a9c
  401a61:	mov    rdx,QWORD PTR [rip+0xe5d8]        # 0x410040
  401a68:	test   rdx,rdx
  401a6b:	je     0x401a9c
  401a6d:	cmp    DWORD PTR [rip+0xe5e4],0x0        # 0x410058
  401a74:	je     0x401a8f
  401a76:	cmp    DWORD PTR [rip+0xe5ef],0x0        # 0x41006c
  401a7d:	je     0x401b87
  401a83:	lea    rcx,[rip+0x95f6]        # 0x40b080
  401a8a:	call   0x401770
  401a8f:	cmp    DWORD PTR [rip+0xe5d6],0x0        # 0x41006c
  401a96:	je     0x401b4d
  401a9c:	mov    edx,DWORD PTR [rip+0x8572]        # 0x40a014
  401aa2:	test   edx,edx
  401aa4:	je     0x401ae1
  401aa6:	mov    rdx,QWORD PTR [rip+0xe58b]        # 0x410038
  401aad:	test   rdx,rdx
  401ab0:	je     0x401ae1
  401ab2:	cmp    DWORD PTR [rip+0xe59f],0x0        # 0x410058
  401ab9:	je     0x401ad4
  401abb:	cmp    DWORD PTR [rip+0xe5aa],0x0        # 0x41006c
  401ac2:	je     0x401b98
  401ac8:	lea    rcx,[rip+0x95f1]        # 0x40b0c0
  401acf:	call   0x401770
  401ad4:	cmp    DWORD PTR [rip+0xe591],0x0        # 0x41006c
  401adb:	je     0x401b6a
  401ae1:	mov    eax,DWORD PTR [rip+0x8529]        # 0x40a010
  401ae7:	test   eax,eax
  401ae9:	je     0x401b1e
  401aeb:	mov    rdx,QWORD PTR [rip+0xe53e]        # 0x410030
  401af2:	test   rdx,rdx
  401af5:	je     0x401b1e
  401af7:	cmp    DWORD PTR [rip+0xe55a],0x0        # 0x410058
  401afe:	je     0x401b15
  401b00:	cmp    DWORD PTR [rip+0xe565],0x0        # 0x41006c
  401b07:	je     0x401b3f
  401b09:	lea    rcx,[rip+0x95ef]        # 0x40b0ff
  401b10:	call   0x401770
  401b15:	cmp    DWORD PTR [rip+0xe550],0x0        # 0x41006c
  401b1c:	je     0x401b25
  401b1e:	mov    ecx,ebx
  401b20:	call   0x4075b0
  401b25:	mov    rcx,QWORD PTR [rip+0xe504]        # 0x410030
  401b2c:	call   0x407488
  401b31:	mov    rcx,QWORD PTR [rip+0xe4f8]        # 0x410030
  401b38:	call   0x407578
  401b3d:	jmp    0x401b1e
  401b3f:	lea    rcx,[rip+0x95da]        # 0x40b120
  401b46:	call   0x401770
  401b4b:	jmp    0x401b15
  401b4d:	mov    rcx,QWORD PTR [rip+0xe4ec]        # 0x410040
  401b54:	call   0x407488
  401b59:	mov    rcx,QWORD PTR [rip+0xe4e0]        # 0x410040
  401b60:	call   0x407578
  401b65:	jmp    0x401a9c
  401b6a:	mov    rcx,QWORD PTR [rip+0xe4c7]        # 0x410038
  401b71:	call   0x407488
  401b76:	mov    rcx,QWORD PTR [rip+0xe4bb]        # 0x410038
  401b7d:	call   0x407578
  401b82:	jmp    0x401ae1
  401b87:	lea    rcx,[rip+0x9512]        # 0x40b0a0
  401b8e:	call   0x401770
  401b93:	jmp    0x401a8f
  401b98:	lea    rcx,[rip+0x9541]        # 0x40b0e0
  401b9f:	call   0x401770
  401ba4:	jmp    0x401ad4
  401ba9:	nop
  401baa:	nop
  401bab:	nop
  401bac:	nop
  401bad:	nop
  401bae:	nop
  401baf:	nop
  401bb0:	sub    rsp,0x28
  401bb4:	lea    r8,[rip+0xa8c5]        # 0x40c480
  401bbb:	mov    rdx,rcx
  401bbe:	lea    rcx,[rip+0xa8d1]        # 0x40c496
  401bc5:	call   0x407530
  401bca:	lea    rcx,[rip+0xa8d7]        # 0x40c4a8
  401bd1:	call   0x407528
  401bd6:	lea    rcx,[rip+0xa903]        # 0x40c4e0
  401bdd:	call   0x407528
  401be2:	xor    ecx,ecx
  401be4:	call   0x4075b0
  401be9:	nop
  401bea:	nop
  401beb:	nop
  401bec:	nop
  401bed:	nop
  401bee:	nop
  401bef:	nop
  401bf0:	push   rdi
  401bf1:	push   rsi
  401bf2:	push   rbx
  401bf3:	sub    rsp,0x20
  401bf7:	test   rcx,rcx
  401bfa:	je     0x401c87
  401c00:	cmp    QWORD PTR [rcx],0x0
  401c04:	je     0x401c80
  401c06:	lea    rax,[rcx+0x8]
  401c0a:	xor    edx,edx
  401c0c:	nop    DWORD PTR [rax+0x0]
  401c10:	add    rax,0x8
  401c14:	add    edx,0x1
  401c17:	cmp    QWORD PTR [rax-0x8],0x0
  401c1c:	jne    0x401c10
  401c1e:	add    edx,0x1
  401c21:	movsxd rdx,edx
  401c24:	shl    rdx,0x3
  401c28:	mov    rsi,rcx
  401c2b:	mov    rcx,rdx
  401c2e:	xor    ebx,ebx
  401c30:	call   0x4057b0
  401c35:	mov    rcx,QWORD PTR [rsi]
  401c38:	mov    rdi,rax
  401c3b:	test   rcx,rcx
  401c3e:	je     0x401c6d
  401c40:	call   0x4074c8
  401c45:	lea    ecx,[rax+0x1]
  401c48:	movsxd rcx,ecx
  401c4b:	call   0x4057b0
  401c50:	mov    rdx,QWORD PTR [rsi+rbx*1]
  401c54:	mov    rcx,rax
  401c57:	mov    QWORD PTR [rdi+rbx*1],rax
  401c5b:	add    rbx,0x8
  401c5f:	call   0x4074d8
  401c64:	mov    rcx,QWORD PTR [rsi+rbx*1]
  401c68:	test   rcx,rcx
  401c6b:	jne    0x401c40
  401c6d:	mov    QWORD PTR [rdi+rbx*1],0x0
  401c75:	mov    rax,rdi
  401c78:	add    rsp,0x20
  401c7c:	pop    rbx
  401c7d:	pop    rsi
  401c7e:	pop    rdi
  401c7f:	ret    
  401c80:	mov    edx,0x8
  401c85:	jmp    0x401c28
  401c87:	xor    eax,eax
  401c89:	jmp    0x401c78
  401c8b:	nop    DWORD PTR [rax+rax*1+0x0]
  401c90:	push   rsi
  401c91:	push   rbx
  401c92:	sub    rsp,0x28
  401c96:	test   rcx,rcx
  401c99:	je     0x401cd0
  401c9b:	mov    rsi,rcx
  401c9e:	mov    rcx,QWORD PTR [rcx]
  401ca1:	mov    rbx,rsi
  401ca4:	test   rcx,rcx
  401ca7:	je     0x401cc1
  401ca9:	nop    DWORD PTR [rax+0x0]
  401cb0:	add    rbx,0x8
  401cb4:	call   0x407578
  401cb9:	mov    rcx,QWORD PTR [rbx]
  401cbc:	test   rcx,rcx
  401cbf:	jne    0x401cb0
  401cc1:	mov    rcx,rsi
  401cc4:	add    rsp,0x28
  401cc8:	pop    rbx
  401cc9:	pop    rsi
  401cca:	jmp    0x407578
  401ccf:	nop
  401cd0:	add    rsp,0x28
  401cd4:	pop    rbx
  401cd5:	pop    rsi
  401cd6:	ret    
  401cd7:	nop    WORD PTR [rax+rax*1+0x0]
  401ce0:	push   r15
  401ce2:	push   r14
  401ce4:	push   r13
  401ce6:	push   r12
  401ce8:	push   rbp
  401ce9:	push   rdi
  401cea:	push   rsi
  401ceb:	push   rbx
  401cec:	sub    rsp,0x38
  401cf0:	test   rcx,rcx
  401cf3:	mov    rbx,rcx
  401cf6:	je     0x401ef1
  401cfc:	call   0x4074c8
  401d01:	lea    rcx,[rax+0x1]
  401d05:	xor    r15d,r15d
  401d08:	xor    r12d,r12d
  401d0b:	xor    ebp,ebp
  401d0d:	xor    edi,edi
  401d0f:	xor    r14d,r14d
  401d12:	call   0x4057b0
  401d17:	mov    rsi,QWORD PTR [rip+0xb612]        # 0x40d330
  401d1e:	mov    QWORD PTR [rsp+0x20],rax
  401d23:	xor    r13d,r13d
  401d26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401d30:	movzx  eax,BYTE PTR [rbx]
  401d33:	mov    edx,r15d
  401d36:	test   BYTE PTR [rsi+rax*2],0x40
  401d3a:	je     0x401d4d
  401d3c:	nop    DWORD PTR [rax+0x0]
  401d40:	add    rbx,0x1
  401d44:	movzx  eax,BYTE PTR [rbx]
  401d47:	test   BYTE PTR [rsi+rax*2],0x40
  401d4b:	jne    0x401d40
  401d4d:	test   ebp,ebp
  401d4f:	je     0x401d5c
  401d51:	lea    eax,[rbp-0x1]
  401d54:	lea    r11,[r12+r15*8]
  401d58:	cmp    edx,eax
  401d5a:	jl     0x401d84
  401d5c:	test   r12,r12
  401d5f:	je     0x401eda
  401d65:	add    ebp,ebp
  401d67:	mov    rcx,r12
  401d6a:	movsxd rdx,ebp
  401d6d:	shl    rdx,0x3
  401d71:	call   0x405830
  401d76:	mov    r12,rax
  401d79:	lea    r11,[r12+r15*8]
  401d7d:	mov    QWORD PTR [r11],0x0
  401d84:	movzx  edx,BYTE PTR [rbx]
  401d87:	mov    r8,QWORD PTR [rsp+0x20]
  401d8c:	test   dl,dl
  401d8e:	jne    0x401da6
  401d90:	jmp    0x401df0
  401d92:	mov    BYTE PTR [r8],dl
  401d95:	xor    edi,edi
  401d97:	add    r8,0x1
  401d9b:	add    rbx,0x1
  401d9f:	movzx  edx,BYTE PTR [rbx]
  401da2:	test   dl,dl
  401da4:	je     0x401df0
  401da6:	movzx  r9d,dl
  401daa:	test   BYTE PTR [rsi+r9*2],0x40
  401daf:	je     0x401dbf
  401db1:	mov    eax,edi
  401db3:	or     eax,r13d
  401db6:	or     eax,r14d
  401db9:	je     0x401ed0
  401dbf:	test   edi,edi
  401dc1:	jne    0x401d92
  401dc3:	cmp    dl,0x5c
  401dc6:	je     0x401e80
  401dcc:	test   r13d,r13d
  401dcf:	je     0x401e60
  401dd5:	cmp    dl,0x27
  401dd8:	je     0x401eb0
  401dde:	add    rbx,0x1
  401de2:	mov    BYTE PTR [r8],dl
  401de5:	add    r8,0x1
  401de9:	movzx  edx,BYTE PTR [rbx]
  401dec:	test   dl,dl
  401dee:	jne    0x401da6
  401df0:	mov    rcx,QWORD PTR [rsp+0x20]
  401df5:	mov    BYTE PTR [r8],0x0
  401df9:	add    r15,0x1
  401dfd:	mov    QWORD PTR [rsp+0x28],r11
  401e02:	call   0x405880
  401e07:	mov    r11,QWORD PTR [rsp+0x28]
  401e0c:	mov    QWORD PTR [r11],rax
  401e0f:	mov    QWORD PTR [r12+r15*8],0x0
  401e17:	movzx  edx,BYTE PTR [rbx]
  401e1a:	test   BYTE PTR [rsi+rdx*2],0x40
  401e1e:	mov    rax,rdx
  401e21:	je     0x401e33
  401e23:	add    rbx,0x1
  401e27:	movzx  edx,BYTE PTR [rbx]
  401e2a:	test   BYTE PTR [rsi+rdx*2],0x40
  401e2e:	mov    rax,rdx
  401e31:	jne    0x401e23
  401e33:	test   al,al
  401e35:	jne    0x401d30
  401e3b:	mov    rcx,QWORD PTR [rsp+0x20]
  401e40:	call   0x407578
  401e45:	mov    rax,r12
  401e48:	add    rsp,0x38
  401e4c:	pop    rbx
  401e4d:	pop    rsi
  401e4e:	pop    rdi
  401e4f:	pop    rbp
  401e50:	pop    r12
  401e52:	pop    r13
  401e54:	pop    r14
  401e56:	pop    r15
  401e58:	ret    
  401e59:	nop    DWORD PTR [rax+0x0]
  401e60:	test   r14d,r14d
  401e63:	je     0x401e90
  401e65:	cmp    dl,0x22
  401e68:	jne    0x401dde
  401e6e:	xor    r14d,r14d
  401e71:	jmp    0x401d9b
  401e76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401e80:	mov    edi,0x1
  401e85:	jmp    0x401d9b
  401e8a:	nop    WORD PTR [rax+rax*1+0x0]
  401e90:	cmp    dl,0x27
  401e93:	je     0x401ec0
  401e95:	cmp    dl,0x22
  401e98:	jne    0x401dde
  401e9e:	mov    r14d,0x1
  401ea4:	jmp    0x401d9b
  401ea9:	nop    DWORD PTR [rax+0x0]
  401eb0:	xor    r13d,r13d
  401eb3:	jmp    0x401d9b
  401eb8:	nop    DWORD PTR [rax+rax*1+0x0]
  401ec0:	mov    r13d,0x1
  401ec6:	jmp    0x401d9b
  401ecb:	nop    DWORD PTR [rax+rax*1+0x0]
  401ed0:	xor    edi,edi
  401ed2:	xor    r14d,r14d
  401ed5:	jmp    0x401df0
  401eda:	mov    ecx,0x40
  401edf:	mov    ebp,0x8
  401ee4:	call   0x4057b0
  401ee9:	mov    r12,rax
  401eec:	jmp    0x401d79
  401ef1:	xor    r12d,r12d
  401ef4:	jmp    0x401e45
  401ef9:	nop    DWORD PTR [rax+0x0]
  401f00:	push   r12
  401f02:	push   rbp
  401f03:	push   rdi
  401f04:	push   rsi
  401f05:	push   rbx
  401f06:	sub    rsp,0x20
  401f0a:	test   rdx,rdx
  401f0d:	mov    r12,rcx
  401f10:	mov    rdi,rdx
  401f13:	je     0x401f7d
  401f15:	mov    rbx,QWORD PTR [rcx]
  401f18:	mov    rbp,QWORD PTR [rip+0xb411]        # 0x40d330
  401f1f:	test   rbx,rbx
  401f22:	jne    0x401f55
  401f24:	jmp    0x401faf
  401f29:	nop    DWORD PTR [rax+0x0]
  401f30:	cmp    al,0x22
  401f32:	je     0x401f6b
  401f34:	cmp    al,0x5c
  401f36:	sete   dl
  401f39:	cmp    al,0x27
  401f3b:	sete   al
  401f3e:	or     dl,al
  401f40:	jne    0x401f6b
  401f42:	mov    rdx,rdi
  401f45:	mov    ecx,esi
  401f47:	call   0x407588
  401f4c:	cmp    eax,0xffffffff
  401f4f:	je     0x401f7d
  401f51:	add    rbx,0x1
  401f55:	movzx  eax,BYTE PTR [rbx]
  401f58:	test   al,al
  401f5a:	je     0x401f90
  401f5c:	movzx  r8d,al
  401f60:	movsx  esi,al
  401f63:	test   BYTE PTR [rbp+r8*2+0x0],0x40
  401f69:	je     0x401f30
  401f6b:	mov    rdx,rdi
  401f6e:	mov    ecx,0x5c
  401f73:	call   0x407588
  401f78:	cmp    eax,0xffffffff
  401f7b:	jne    0x401f42
  401f7d:	mov    eax,0x1
  401f82:	add    rsp,0x20
  401f86:	pop    rbx
  401f87:	pop    rsi
  401f88:	pop    rdi
  401f89:	pop    rbp
  401f8a:	pop    r12
  401f8c:	ret    
  401f8d:	nop    DWORD PTR [rax]
  401f90:	mov    rdx,rdi
  401f93:	mov    ecx,0xa
  401f98:	call   0x407588
  401f9d:	cmp    eax,0xffffffff
  401fa0:	je     0x401f7d
  401fa2:	add    r12,0x8
  401fa6:	mov    rbx,QWORD PTR [r12]
  401faa:	test   rbx,rbx
  401fad:	jne    0x401f55
  401faf:	xor    eax,eax
  401fb1:	jmp    0x401f82
  401fb3:	nop    DWORD PTR [rax]
  401fb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401fc0:	push   r15
  401fc2:	push   r14
  401fc4:	push   r13
  401fc6:	push   r12
  401fc8:	push   rbp
  401fc9:	push   rdi
  401fca:	push   rsi
  401fcb:	push   rbx
  401fcc:	sub    rsp,0x48
  401fd0:	xor    edi,edi
  401fd2:	mov    rbp,rdx
  401fd5:	mov    edx,DWORD PTR [rcx]
  401fd7:	lea    ebx,[rdi+0x1]
  401fda:	mov    r13,rcx
  401fdd:	mov    DWORD PTR [rsp+0x38],0x7d0
  401fe5:	cmp    ebx,edx
  401fe7:	jge    0x402011
  401fe9:	nop    DWORD PTR [rax+0x0]
  401ff0:	mov    rax,QWORD PTR [rbp+0x0]
  401ff4:	movsxd rsi,ebx
  401ff7:	lea    r12,[rsi*8+0x0]
  401fff:	mov    rcx,QWORD PTR [rax+rsi*8]
  402003:	cmp    BYTE PTR [rcx],0x40
  402006:	je     0x402022
  402008:	mov    edi,ebx
  40200a:	lea    ebx,[rdi+0x1]
  40200d:	cmp    ebx,edx
  40200f:	jl     0x401ff0
  402011:	add    rsp,0x48
  402015:	pop    rbx
  402016:	pop    rsi
  402017:	pop    rdi
  402018:	pop    rbp
  402019:	pop    r12
  40201b:	pop    r13
  40201d:	pop    r14
  40201f:	pop    r15
  402021:	ret    
  402022:	sub    DWORD PTR [rsp+0x38],0x1
  402027:	je     0x40222f
  40202d:	lea    rdx,[rip+0xa5a5]        # 0x40c5d9
  402034:	add    rcx,0x1
  402038:	call   0x407598
  40203d:	test   rax,rax
  402040:	mov    r14,rax
  402043:	je     0x4021da
  402049:	xor    edx,edx
  40204b:	mov    r8d,0x2
  402051:	mov    rcx,rax
  402054:	call   0x407570
  402059:	cmp    eax,0xffffffff
  40205c:	je     0x4021d2
  402062:	mov    rcx,r14
  402065:	call   0x407568
  40206a:	movsxd r15,eax
  40206d:	cmp    r15d,0xffffffff
  402071:	je     0x4021d2
  402077:	xor    r8d,r8d
  40207a:	xor    edx,edx
  40207c:	mov    rcx,r14
  40207f:	call   0x407570
  402084:	cmp    eax,0xffffffff
  402087:	je     0x4021d2
  40208d:	lea    rcx,[r15+0x1]
  402091:	call   0x4057b0
  402096:	mov    edx,0x1
  40209b:	mov    r9,r14
  40209e:	mov    r8,r15
  4020a1:	mov    rcx,rax
  4020a4:	mov    QWORD PTR [rsp+0x20],rax
  4020a9:	call   0x407580
  4020ae:	cmp    r15,rax
  4020b1:	mov    rdx,rax
  4020b4:	je     0x4020d0
  4020b6:	mov    rcx,r14
  4020b9:	mov    QWORD PTR [rsp+0x28],rax
  4020be:	call   0x4075a0
  4020c3:	test   eax,eax
  4020c5:	mov    rdx,QWORD PTR [rsp+0x28]
  4020ca:	jne    0x4021d2
  4020d0:	mov    rax,QWORD PTR [rsp+0x20]
  4020d5:	mov    BYTE PTR [rax+rdx*1],0x0
  4020d9:	movzx  eax,BYTE PTR [rax]
  4020dc:	test   al,al
  4020de:	je     0x40211c
  4020e0:	mov    rdx,QWORD PTR [rip+0xb249]        # 0x40d330
  4020e7:	test   BYTE PTR [rdx+rax*2],0x40
  4020eb:	je     0x4021e5
  4020f1:	mov    rdx,QWORD PTR [rsp+0x20]
  4020f6:	jmp    0x402111
  4020f8:	nop    DWORD PTR [rax+rax*1+0x0]
  402100:	mov    rcx,QWORD PTR [rip+0xb229]        # 0x40d330
  402107:	test   BYTE PTR [rcx+rax*2],0x40
  40210b:	je     0x4021e5
  402111:	add    rdx,0x1
  402115:	movzx  eax,BYTE PTR [rdx]
  402118:	test   al,al
  40211a:	jne    0x402100
  40211c:	mov    ecx,0x8
  402121:	call   0x4057b0
  402126:	mov    rcx,QWORD PTR [rbp+0x0]
  40212a:	mov    QWORD PTR [rax],0x0
  402131:	mov    r15,rax
  402134:	call   0x401bf0
  402139:	xor    r10d,r10d
  40213c:	mov    QWORD PTR [rbp+0x0],rax
  402140:	xor    r9d,r9d
  402143:	xor    r8d,r8d
  402146:	movsxd rdx,DWORD PTR [r13+0x0]
  40214a:	mov    rcx,rax
  40214d:	mov    DWORD PTR [rsp+0x3c],r10d
  402152:	mov    QWORD PTR [rsp+0x30],r9
  402157:	mov    QWORD PTR [rsp+0x28],r8
  40215c:	lea    rdx,[r8+rdx*1+0x1]
  402161:	shl    rdx,0x3
  402165:	call   0x405830
  40216a:	mov    edx,DWORD PTR [r13+0x0]
  40216e:	mov    r8,QWORD PTR [rsp+0x28]
  402173:	mov    QWORD PTR [rbp+0x0],rax
  402177:	sub    edx,ebx
  402179:	add    rsi,r8
  40217c:	movsxd rbx,edx
  40217f:	lea    rcx,[rax+rsi*8]
  402183:	lea    rdx,[rax+r12*1+0x8]
  402188:	lea    r8,[rbx*8+0x0]
  402190:	mov    ebx,edi
  402192:	call   0x407540
  402197:	mov    r9,QWORD PTR [rsp+0x30]
  40219c:	mov    rcx,r12
  40219f:	add    rcx,QWORD PTR [rbp+0x0]
  4021a3:	mov    rdx,r15
  4021a6:	mov    r8,r9
  4021a9:	call   0x407548
  4021ae:	mov    eax,DWORD PTR [r13+0x0]
  4021b2:	mov    r10d,DWORD PTR [rsp+0x3c]
  4021b7:	mov    rcx,r15
  4021ba:	lea    eax,[r10+rax*1-0x1]
  4021bf:	mov    DWORD PTR [r13+0x0],eax
  4021c3:	call   0x407578
  4021c8:	mov    rcx,QWORD PTR [rsp+0x20]
  4021cd:	call   0x407578
  4021d2:	mov    rcx,r14
  4021d5:	call   0x4075a8
  4021da:	mov    edx,DWORD PTR [r13+0x0]
  4021de:	mov    edi,ebx
  4021e0:	jmp    0x40200a
  4021e5:	mov    rcx,QWORD PTR [rsp+0x20]
  4021ea:	call   0x401ce0
  4021ef:	mov    rcx,QWORD PTR [rbp+0x0]
  4021f3:	mov    rdx,QWORD PTR [rax]
  4021f6:	mov    r15,rax
  4021f9:	mov    QWORD PTR [rsp+0x28],rdx
  4021fe:	call   0x401bf0
  402203:	mov    rdx,QWORD PTR [rsp+0x28]
  402208:	mov    QWORD PTR [rbp+0x0],rax
  40220c:	test   rdx,rdx
  40220f:	je     0x402255
  402211:	xor    r8d,r8d
  402214:	add    r8,0x1
  402218:	cmp    QWORD PTR [r15+r8*8],0x0
  40221d:	lea    r9,[r8*8+0x0]
  402225:	jne    0x402214
  402227:	mov    r10d,r8d
  40222a:	jmp    0x402146
  40222f:	mov    rbx,QWORD PTR [rax]
  402232:	call   QWORD PTR [rip+0xf25c]        # 0x411494
  402238:	lea    rdx,[rip+0xa371]        # 0x40c5b0
  40223f:	lea    rcx,[rax+0x60]
  402243:	mov    r8,rbx
  402246:	call   0x407590
  40224b:	mov    ecx,0x1
  402250:	call   0x405720
  402255:	xor    r10d,r10d
  402258:	xor    r9d,r9d
  40225b:	xor    r8d,r8d
  40225e:	jmp    0x402146
  402263:	nop    DWORD PTR [rax]
  402266:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402270:	test   rcx,rcx
  402273:	je     0x402291
  402275:	cmp    QWORD PTR [rcx],0x0
  402279:	je     0x402291
  40227b:	add    rcx,0x8
  40227f:	xor    eax,eax
  402281:	add    rcx,0x8
  402285:	add    eax,0x1
  402288:	cmp    QWORD PTR [rcx-0x8],0x0
  40228d:	jne    0x402281
  40228f:	repz ret 
  402291:	xor    eax,eax
  402293:	ret    
  402294:	nop
  402295:	nop
  402296:	nop
  402297:	nop
  402298:	nop
  402299:	nop
  40229a:	nop
  40229b:	nop
  40229c:	nop
  40229d:	nop
  40229e:	nop
  40229f:	nop
  4022a0:	push   rdi
  4022a1:	push   rsi
  4022a2:	push   rbx
  4022a3:	sub    rsp,0x20
  4022a7:	call   0x403840
  4022ac:	mov    rcx,rax
  4022af:	mov    rdi,rax
  4022b2:	call   0x4074c8
  4022b7:	movsxd rbx,eax
  4022ba:	lea    rcx,[rbx+0x9]
  4022be:	call   0x4057b0
  4022c3:	mov    rdx,rdi
  4022c6:	mov    rsi,rax
  4022c9:	mov    rcx,rax
  4022cc:	call   0x4074d8
  4022d1:	add    rbx,rsi
  4022d4:	movabs rax,0x5858585858586363
  4022de:	mov    rcx,rsi
  4022e1:	mov    QWORD PTR [rbx],rax
  4022e4:	mov    BYTE PTR [rbx+0x8],0x0
  4022e8:	call   0x407478
  4022ed:	test   rax,rax
  4022f0:	je     0x4022fd
  4022f2:	mov    rax,rsi
  4022f5:	add    rsp,0x20
  4022f9:	pop    rbx
  4022fa:	pop    rsi
  4022fb:	pop    rdi
  4022fc:	ret    
  4022fd:	call   0x4075c0
  402302:	nop
  402303:	nop
  402304:	nop
  402305:	nop
  402306:	nop
  402307:	nop
  402308:	nop
  402309:	nop
  40230a:	nop
  40230b:	nop
  40230c:	nop
  40230d:	nop
  40230e:	nop
  40230f:	nop
  402310:	push   rsi
  402311:	push   rbx
  402312:	sub    rsp,0x28
  402316:	test   edx,edx
  402318:	mov    rbx,rcx
  40231b:	mov    esi,edx
  40231d:	movsxd rcx,edx
  402320:	jne    0x40232c
  402322:	mov    ecx,0x1
  402327:	mov    esi,0x1
  40232c:	call   0x4057b0
  402331:	mov    QWORD PTR [rbx+0x8],rax
  402335:	mov    BYTE PTR [rax],0x0
  402338:	mov    eax,0x1
  40233d:	mov    DWORD PTR [rbx],esi
  40233f:	mov    DWORD PTR [rbx+0x4],0x0
  402346:	add    rsp,0x28
  40234a:	pop    rbx
  40234b:	pop    rsi
  40234c:	ret    
  40234d:	nop    DWORD PTR [rax]
  402350:	push   rsi
  402351:	push   rbx
  402352:	sub    rsp,0x28
  402356:	mov    esi,ecx
  402358:	mov    ecx,0x10
  40235d:	call   0x4057b0
  402362:	test   esi,esi
  402364:	mov    rbx,rax
  402367:	movsxd rcx,esi
  40236a:	jne    0x402376
  40236c:	mov    ecx,0x1
  402371:	mov    esi,0x1
  402376:	call   0x4057b0
  40237b:	mov    QWORD PTR [rbx+0x8],rax
  40237f:	mov    BYTE PTR [rax],0x0
  402382:	mov    rax,rbx
  402385:	mov    DWORD PTR [rbx],esi
  402387:	mov    DWORD PTR [rbx+0x4],0x0
  40238e:	add    rsp,0x28
  402392:	pop    rbx
  402393:	pop    rsi
  402394:	ret    
  402395:	nop
  402396:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4023a0:	push   rbx
  4023a1:	sub    rsp,0x20
  4023a5:	mov    rbx,rcx
  4023a8:	mov    rcx,QWORD PTR [rcx+0x8]
  4023ac:	call   0x407578
  4023b1:	mov    rcx,rbx
  4023b4:	add    rsp,0x20
  4023b8:	pop    rbx
  4023b9:	jmp    0x407578
  4023be:	xchg   ax,ax
  4023c0:	push   rbx
  4023c1:	sub    rsp,0x20
  4023c5:	mov    rbx,QWORD PTR [rcx+0x8]
  4023c9:	call   0x407578
  4023ce:	mov    rax,rbx
  4023d1:	add    rsp,0x20
  4023d5:	pop    rbx
  4023d6:	ret    
  4023d7:	nop    WORD PTR [rax+rax*1+0x0]
  4023e0:	push   rbx
  4023e1:	sub    rsp,0x20
  4023e5:	mov    eax,DWORD PTR [rcx]
  4023e7:	mov    rbx,rcx
  4023ea:	cmp    eax,edx
  4023ec:	jg     0x402411
  4023ee:	mov    r8d,eax
  4023f1:	add    r8d,r8d
  4023f4:	cmp    edx,r8d
  4023f7:	jge    0x4023f1
  4023f9:	cmp    eax,r8d
  4023fc:	je     0x402411
  4023fe:	mov    rcx,QWORD PTR [rbx+0x8]
  402402:	mov    DWORD PTR [rbx],r8d
  402405:	movsxd rdx,r8d
  402408:	call   0x405830
  40240d:	mov    QWORD PTR [rbx+0x8],rax
  402411:	mov    rax,rbx
  402414:	add    rsp,0x20
  402418:	pop    rbx
  402419:	ret    
  40241a:	nop    WORD PTR [rax+rax*1+0x0]
  402420:	mov    rax,QWORD PTR [rcx+0x8]
  402424:	mov    BYTE PTR [rax],0x0
  402427:	mov    DWORD PTR [rcx+0x4],0x0
  40242e:	ret    
  40242f:	nop
  402430:	push   rsi
  402431:	push   rbx
  402432:	sub    rsp,0x28
  402436:	cmp    rcx,rdx
  402439:	mov    rbx,rcx
  40243c:	mov    rsi,rdx
  40243f:	je     0x402471
  402441:	mov    edx,DWORD PTR [rdx+0x4]
  402444:	call   0x4023e0
  402449:	xor    edx,edx
  40244b:	test   rax,rax
  40244e:	je     0x402468
  402450:	mov    rdx,QWORD PTR [rsi+0x8]
  402454:	mov    rcx,QWORD PTR [rbx+0x8]
  402458:	call   0x4074d8
  40245d:	mov    eax,DWORD PTR [rsi+0x4]
  402460:	mov    edx,0x1
  402465:	mov    DWORD PTR [rbx+0x4],eax
  402468:	mov    eax,edx
  40246a:	add    rsp,0x28
  40246e:	pop    rbx
  40246f:	pop    rsi
  402470:	ret    
  402471:	call   0x4075c0
  402476:	nop
  402477:	nop    WORD PTR [rax+rax*1+0x0]
  402480:	push   rdi
  402481:	push   rsi
  402482:	push   rbx
  402483:	sub    rsp,0x20
  402487:	mov    rbx,rcx
  40248a:	mov    rcx,rdx
  40248d:	mov    rdi,rdx
  402490:	call   0x4074c8
  402495:	mov    rcx,rbx
  402498:	mov    edx,eax
  40249a:	mov    rsi,rax
  40249d:	call   0x4023e0
  4024a2:	xor    r8d,r8d
  4024a5:	test   rax,rax
  4024a8:	je     0x4024bf
  4024aa:	mov    rcx,QWORD PTR [rbx+0x8]
  4024ae:	mov    rdx,rdi
  4024b1:	call   0x4074d8
  4024b6:	mov    DWORD PTR [rbx+0x4],esi
  4024b9:	mov    r8d,0x1
  4024bf:	mov    eax,r8d
  4024c2:	add    rsp,0x20
  4024c6:	pop    rbx
  4024c7:	pop    rsi
  4024c8:	pop    rdi
  4024c9:	ret    
  4024ca:	nop    WORD PTR [rax+rax*1+0x0]
  4024d0:	push   rdi
  4024d1:	push   rsi
  4024d2:	push   rbx
  4024d3:	sub    rsp,0x20
  4024d7:	cmp    r8,rcx
  4024da:	mov    rbx,rcx
  4024dd:	mov    edi,edx
  4024df:	mov    rsi,r8
  4024e2:	je     0x40255a
  4024e4:	mov    edx,DWORD PTR [r8+0x4]
  4024e8:	add    edx,DWORD PTR [rcx+0x4]
  4024eb:	call   0x4023e0
  4024f0:	test   rax,rax
  4024f3:	je     0x402550
  4024f5:	movsxd r10,DWORD PTR [rbx+0x4]
  4024f9:	lea    r8d,[rdi-0x1]
  4024fd:	cmp    r10d,edi
  402500:	mov    rax,r10
  402503:	jl     0x402528
  402505:	mov    r11,QWORD PTR [rbx+0x8]
  402509:	mov    r9d,DWORD PTR [rsi+0x4]
  40250d:	movzx  ecx,BYTE PTR [r11+r10*1]
  402512:	add    r9d,eax
  402515:	sub    eax,0x1
  402518:	movsxd r9,r9d
  40251b:	sub    r10,0x1
  40251f:	cmp    eax,r8d
  402522:	mov    BYTE PTR [r11+r9*1],cl
  402526:	jne    0x402505
  402528:	movsxd rcx,edi
  40252b:	movsxd r8,DWORD PTR [rsi+0x4]
  40252f:	add    rcx,QWORD PTR [rbx+0x8]
  402533:	mov    rdx,QWORD PTR [rsi+0x8]
  402537:	call   0x4074b8
  40253c:	mov    eax,DWORD PTR [rsi+0x4]
  40253f:	add    DWORD PTR [rbx+0x4],eax
  402542:	mov    eax,0x1
  402547:	add    rsp,0x20
  40254b:	pop    rbx
  40254c:	pop    rsi
  40254d:	pop    rdi
  40254e:	ret    
  40254f:	nop
  402550:	xor    eax,eax
  402552:	add    rsp,0x20
  402556:	pop    rbx
  402557:	pop    rsi
  402558:	pop    rdi
  402559:	ret    
  40255a:	call   0x4075c0
  40255f:	nop
  402560:	mov    r8,rdx
  402563:	xor    edx,edx
  402565:	jmp    0x4024d0
  40256a:	nop    WORD PTR [rax+rax*1+0x0]
  402570:	push   r13
  402572:	push   r12
  402574:	push   rbp
  402575:	push   rdi
  402576:	push   rsi
  402577:	push   rbx
  402578:	sub    rsp,0x28
  40257c:	mov    rsi,rcx
  40257f:	mov    rcx,r8
  402582:	mov    ebp,edx
  402584:	mov    r13,r8
  402587:	call   0x4074c8
  40258c:	mov    edx,DWORD PTR [rsi+0x4]
  40258f:	mov    rcx,rsi
  402592:	mov    r12,rax
  402595:	movsxd rdi,eax
  402598:	add    edx,eax
  40259a:	call   0x4023e0
  40259f:	test   rax,rax
  4025a2:	je     0x402604
  4025a4:	mov    eax,DWORD PTR [rsi+0x4]
  4025a7:	cmp    eax,ebp
  4025a9:	jl     0x4025dc
  4025ab:	movsxd r9,eax
  4025ae:	sub    eax,ebp
  4025b0:	lea    r10,[r9-0x1]
  4025b4:	mov    rcx,r10
  4025b7:	sub    rcx,rax
  4025ba:	mov    rax,rcx
  4025bd:	jmp    0x4025c4
  4025bf:	nop
  4025c0:	sub    r10,0x1
  4025c4:	mov    r11,QWORD PTR [rsi+0x8]
  4025c8:	movzx  ebx,BYTE PTR [r11+r9*1]
  4025cd:	add    r9,r11
  4025d0:	cmp    r10,rax
  4025d3:	mov    BYTE PTR [r9+rdi*1],bl
  4025d7:	mov    r9,r10
  4025da:	jne    0x4025c0
  4025dc:	movsxd rcx,ebp
  4025df:	add    rcx,QWORD PTR [rsi+0x8]
  4025e3:	movsxd r8,r12d
  4025e6:	mov    rdx,r13
  4025e9:	call   0x4074b8
  4025ee:	add    DWORD PTR [rsi+0x4],r12d
  4025f2:	mov    eax,0x1
  4025f7:	add    rsp,0x28
  4025fb:	pop    rbx
  4025fc:	pop    rsi
  4025fd:	pop    rdi
  4025fe:	pop    rbp
  4025ff:	pop    r12
  402601:	pop    r13
  402603:	ret    
  402604:	xor    eax,eax
  402606:	add    rsp,0x28
  40260a:	pop    rbx
  40260b:	pop    rsi
  40260c:	pop    rdi
  40260d:	pop    rbp
  40260e:	pop    r12
  402610:	pop    r13
  402612:	ret    
  402613:	nop    DWORD PTR [rax]
  402616:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402620:	mov    r8,rdx
  402623:	xor    edx,edx
  402625:	jmp    0x402570
  40262a:	nop    WORD PTR [rax+rax*1+0x0]
  402630:	push   rdi
  402631:	push   rsi
  402632:	push   rbx
  402633:	sub    rsp,0x20
  402637:	mov    eax,DWORD PTR [rcx+0x4]
  40263a:	movsxd rsi,edx
  40263d:	mov    rbx,rcx
  402640:	mov    edi,r8d
  402643:	lea    edx,[rax+0x1]
  402646:	call   0x4023e0
  40264b:	test   rax,rax
  40264e:	je     0x4026a3
  402650:	mov    edx,DWORD PTR [rbx+0x4]
  402653:	cmp    edx,esi
  402655:	jl     0x40268a
  402657:	movsxd r9,edx
  40265a:	sub    edx,esi
  40265c:	lea    rax,[r9-0x1]
  402660:	mov    rcx,rax
  402663:	sub    rcx,rdx
  402666:	jmp    0x402674
  402668:	nop    DWORD PTR [rax+rax*1+0x0]
  402670:	sub    rax,0x1
  402674:	mov    r10,QWORD PTR [rbx+0x8]
  402678:	cmp    rax,rcx
  40267b:	movzx  r11d,BYTE PTR [r10+r9*1]
  402680:	mov    BYTE PTR [r10+r9*1+0x1],r11b
  402685:	mov    r9,rax
  402688:	jne    0x402670
  40268a:	mov    rax,QWORD PTR [rbx+0x8]
  40268e:	mov    BYTE PTR [rax+rsi*1],dil
  402692:	add    DWORD PTR [rbx+0x4],0x1
  402696:	mov    eax,0x1
  40269b:	add    rsp,0x20
  40269f:	pop    rbx
  4026a0:	pop    rsi
  4026a1:	pop    rdi
  4026a2:	ret    
  4026a3:	xor    eax,eax
  4026a5:	add    rsp,0x20
  4026a9:	pop    rbx
  4026aa:	pop    rsi
  4026ab:	pop    rdi
  4026ac:	ret    
  4026ad:	nop    DWORD PTR [rax]
  4026b0:	push   rsi
  4026b1:	push   rbx
  4026b2:	sub    rsp,0x28
  4026b6:	mov    eax,DWORD PTR [rdx+0x4]
  4026b9:	add    eax,DWORD PTR [rcx+0x4]
  4026bc:	mov    rsi,rdx
  4026bf:	mov    rbx,rcx
  4026c2:	mov    edx,eax
  4026c4:	call   0x4023e0
  4026c9:	xor    edx,edx
  4026cb:	test   rax,rax
  4026ce:	je     0x4026ec
  4026d0:	movsxd rcx,DWORD PTR [rbx+0x4]
  4026d4:	mov    rdx,QWORD PTR [rsi+0x8]
  4026d8:	add    rcx,QWORD PTR [rbx+0x8]
  4026dc:	call   0x4074d8
  4026e1:	mov    eax,DWORD PTR [rsi+0x4]
  4026e4:	add    DWORD PTR [rbx+0x4],eax
  4026e7:	mov    edx,0x1
  4026ec:	mov    eax,edx
  4026ee:	add    rsp,0x28
  4026f2:	pop    rbx
  4026f3:	pop    rsi
  4026f4:	ret    
  4026f5:	nop
  4026f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402700:	push   rdi
  402701:	push   rsi
  402702:	push   rbx
  402703:	sub    rsp,0x20
  402707:	mov    rbx,rcx
  40270a:	mov    rcx,rdx
  40270d:	mov    rdi,rdx
  402710:	call   0x4074c8
  402715:	mov    edx,DWORD PTR [rbx+0x4]
  402718:	mov    rcx,rbx
  40271b:	mov    rsi,rax
  40271e:	add    edx,eax
  402720:	call   0x4023e0
  402725:	xor    r8d,r8d
  402728:	test   rax,rax
  40272b:	je     0x402749
  40272d:	movsxd r8,DWORD PTR [rbx+0x4]
  402731:	mov    rdx,rdi
  402734:	mov    rcx,r8
  402737:	add    rcx,QWORD PTR [rbx+0x8]
  40273b:	call   0x4074d8
  402740:	add    DWORD PTR [rbx+0x4],esi
  402743:	mov    r8d,0x1
  402749:	mov    eax,r8d
  40274c:	add    rsp,0x20
  402750:	pop    rbx
  402751:	pop    rsi
  402752:	pop    rdi
  402753:	ret    
  402754:	xchg   ax,ax
  402756:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402760:	push   rsi
  402761:	push   rbx
  402762:	sub    rsp,0x28
  402766:	mov    eax,DWORD PTR [rcx+0x4]
  402769:	mov    esi,edx
  40276b:	mov    rbx,rcx
  40276e:	lea    edx,[rax+0x1]
  402771:	call   0x4023e0
  402776:	test   rax,rax
  402779:	je     0x4027a4
  40277b:	movsxd rax,DWORD PTR [rbx+0x4]
  40277f:	mov    rdx,QWORD PTR [rbx+0x8]
  402783:	mov    BYTE PTR [rdx+rax*1],sil
  402787:	movsxd rax,DWORD PTR [rbx+0x4]
  40278b:	mov    rdx,QWORD PTR [rbx+0x8]
  40278f:	mov    BYTE PTR [rdx+rax*1+0x1],0x0
  402794:	add    DWORD PTR [rbx+0x4],0x1
  402798:	mov    eax,0x1
  40279d:	add    rsp,0x28
  4027a1:	pop    rbx
  4027a2:	pop    rsi
  4027a3:	ret    
  4027a4:	xor    eax,eax
  4027a6:	add    rsp,0x28
  4027aa:	pop    rbx
  4027ab:	pop    rsi
  4027ac:	ret    
  4027ad:	nop    DWORD PTR [rax]
  4027b0:	push   rbp
  4027b1:	push   rdi
  4027b2:	push   rsi
  4027b3:	push   rbx
  4027b4:	sub    rsp,0x28
  4027b8:	mov    ebp,r9d
  4027bb:	mov    rsi,rcx
  4027be:	mov    rdi,rdx
  4027c1:	sub    ebp,r8d
  4027c4:	cmp    r9d,r8d
  4027c7:	mov    ebx,r8d
  4027ca:	jl     0x40284b
  4027cc:	mov    eax,DWORD PTR [rdx+0x4]
  4027cf:	cmp    r9d,eax
  4027d2:	jg     0x40284b
  4027d4:	cmp    r8d,eax
  4027d7:	jg     0x40284b
  4027d9:	mov    edx,ebp
  4027db:	call   0x4023e0
  4027e0:	test   rax,rax
  4027e3:	je     0x402840
  4027e5:	mov    edx,ebp
  4027e7:	sub    edx,0x1
  4027ea:	js     0x402820
  4027ec:	movsxd r9,edx
  4027ef:	mov    edx,edx
  4027f1:	movsxd r8,ebx
  4027f4:	lea    rax,[r9-0x1]
  4027f8:	mov    rcx,rax
  4027fb:	sub    rcx,rdx
  4027fe:	jmp    0x402804
  402800:	sub    rax,0x1
  402804:	mov    r10,r9
  402807:	add    r10,QWORD PTR [rdi+0x8]
  40280b:	cmp    rax,rcx
  40280e:	movzx  r11d,BYTE PTR [r10+r8*1]
  402813:	mov    r10,QWORD PTR [rsi+0x8]
  402817:	mov    BYTE PTR [r10+r9*1],r11b
  40281b:	mov    r9,rax
  40281e:	jne    0x402800
  402820:	mov    rdx,QWORD PTR [rsi+0x8]
  402824:	movsxd rax,ebp
  402827:	mov    BYTE PTR [rdx+rax*1],0x0
  40282b:	mov    eax,0x1
  402830:	mov    DWORD PTR [rsi+0x4],ebp
  402833:	add    rsp,0x28
  402837:	pop    rbx
  402838:	pop    rsi
  402839:	pop    rdi
  40283a:	pop    rbp
  40283b:	ret    
  40283c:	nop    DWORD PTR [rax+0x0]
  402840:	xor    eax,eax
  402842:	add    rsp,0x28
  402846:	pop    rbx
  402847:	pop    rsi
  402848:	pop    rdi
  402849:	pop    rbp
  40284a:	ret    
  40284b:	call   0x4075c0
  402850:	nop
  402851:	nop    DWORD PTR [rax+rax*1+0x0]
  402856:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402860:	sub    rsp,0x28
  402864:	xor    eax,eax
  402866:	mov    r8d,DWORD PTR [rdx+0x4]
  40286a:	cmp    DWORD PTR [rcx+0x4],r8d
  40286e:	jne    0x402885
  402870:	mov    rdx,QWORD PTR [rdx+0x8]
  402874:	mov    rcx,QWORD PTR [rcx+0x8]
  402878:	call   0x4074e0
  40287d:	test   eax,eax
  40287f:	sete   al
  402882:	movzx  eax,al
  402885:	add    rsp,0x28
  402889:	ret    
  40288a:	nop
  40288b:	nop
  40288c:	nop
  40288d:	nop
  40288e:	nop
  40288f:	nop
  402890:	push   r13
  402892:	push   r12
  402894:	push   rbp
  402895:	push   rdi
  402896:	push   rsi
  402897:	push   rbx
  402898:	movsxd rax,DWORD PTR [rip+0xd801]        # 0x4100a0
  40289f:	mov    ebp,DWORD PTR [rip+0xd7ff]        # 0x4100a4
  4028a5:	mov    edi,DWORD PTR [rip+0x778d]        # 0x40a038
  4028ab:	mov    ebx,ebp
  4028ad:	lea    r9,[rcx+rax*8]
  4028b1:	mov    r11,rax
  4028b4:	mov    esi,edi
  4028b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4028c0:	cmp    r11d,ebx
  4028c3:	jle    0x402911
  4028c5:	cmp    esi,r11d
  4028c8:	jle    0x402911
  4028ca:	mov    r12d,esi
  4028cd:	mov    r13d,r11d
  4028d0:	sub    r12d,r11d
  4028d3:	sub    r13d,ebx
  4028d6:	cmp    r12d,r13d
  4028d9:	jg     0x402930
  4028db:	test   r12d,r12d
  4028de:	jle    0x402909
  4028e0:	movsxd rax,ebx
  4028e3:	lea    rdx,[rcx+rax*8]
  4028e7:	xor    eax,eax
  4028e9:	nop    DWORD PTR [rax+0x0]
  4028f0:	mov    r8,QWORD PTR [rdx+rax*8]
  4028f4:	mov    r10,QWORD PTR [r9+rax*8]
  4028f8:	mov    QWORD PTR [rdx+rax*8],r10
  4028fc:	mov    QWORD PTR [r9+rax*8],r8
  402900:	add    rax,0x1
  402904:	cmp    r12d,eax
  402907:	jg     0x4028f0
  402909:	add    ebx,r12d
  40290c:	cmp    r11d,ebx
  40290f:	jg     0x4028c5
  402911:	mov    eax,edi
  402913:	mov    DWORD PTR [rip+0xd787],edi        # 0x4100a0
  402919:	sub    eax,r11d
  40291c:	add    ebp,eax
  40291e:	mov    DWORD PTR [rip+0xd780],ebp        # 0x4100a4
  402924:	pop    rbx
  402925:	pop    rsi
  402926:	pop    rdi
  402927:	pop    rbp
  402928:	pop    r12
  40292a:	pop    r13
  40292c:	ret    
  40292d:	nop    DWORD PTR [rax]
  402930:	test   r13d,r13d
  402933:	jle    0x402969
  402935:	movsxd rax,ebx
  402938:	lea    r8,[rcx+rax*8]
  40293c:	mov    eax,ebx
  40293e:	sub    eax,r11d
  402941:	add    eax,esi
  402943:	cdqe   
  402945:	lea    rdx,[rcx+rax*8]
  402949:	xor    eax,eax
  40294b:	nop    DWORD PTR [rax+rax*1+0x0]
  402950:	mov    r10,QWORD PTR [r8+rax*8]
  402954:	mov    r12,QWORD PTR [rdx+rax*8]
  402958:	mov    QWORD PTR [r8+rax*8],r12
  40295c:	mov    QWORD PTR [rdx+rax*8],r10
  402960:	add    rax,0x1
  402964:	cmp    r13d,eax
  402967:	jg     0x402950
  402969:	sub    esi,r13d
  40296c:	jmp    0x4028c0
  402971:	nop    DWORD PTR [rax+rax*1+0x0]
  402976:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402980:	push   r15
  402982:	push   r14
  402984:	push   r13
  402986:	push   r12
  402988:	push   rbp
  402989:	push   rdi
  40298a:	push   rsi
  40298b:	push   rbx
  40298c:	sub    rsp,0x78
  402990:	mov    eax,DWORD PTR [rip+0x76a2]        # 0x40a038
  402996:	mov    QWORD PTR [rip+0xd6f7],0x0        # 0x410098
  4029a1:	mov    r12d,ecx
  4029a4:	mov    QWORD PTR [rsp+0xc8],rdx
  4029ac:	mov    QWORD PTR [rsp+0xd0],r8
  4029b4:	mov    QWORD PTR [rsp+0xd8],r9
  4029bc:	test   eax,eax
  4029be:	jne    0x402c40
  4029c4:	mov    DWORD PTR [rip+0x766a],0x1        # 0x40a038
  4029ce:	mov    eax,0x1
  4029d3:	lea    rcx,[rip+0x9c06]        # 0x40c5e0
  4029da:	mov    DWORD PTR [rip+0xd6c0],eax        # 0x4100a0
  4029e0:	mov    DWORD PTR [rip+0xd6be],eax        # 0x4100a4
  4029e6:	mov    QWORD PTR [rip+0xd6c7],0x0        # 0x4100b8
  4029f1:	call   0x407558
  4029f6:	mov    rbx,QWORD PTR [rsp+0xd0]
  4029fe:	mov    QWORD PTR [rip+0xd6a3],rax        # 0x4100a8
  402a05:	movzx  edx,BYTE PTR [rbx]
  402a08:	cmp    dl,0x2d
  402a0b:	je     0x402f00
  402a11:	cmp    dl,0x2b
  402a14:	je     0x402ea0
  402a1a:	test   rax,rax
  402a1d:	sete   al
  402a20:	movzx  eax,al
  402a23:	mov    DWORD PTR [rip+0xd687],eax        # 0x4100b0
  402a29:	mov    DWORD PTR [rip+0xd65d],0x1        # 0x410090
  402a33:	mov    rsi,QWORD PTR [rip+0xd67e]        # 0x4100b8
  402a3a:	test   rsi,rsi
  402a3d:	je     0x402c55
  402a43:	movsx  edi,BYTE PTR [rsi]
  402a46:	test   dil,dil
  402a49:	je     0x402c55
  402a4f:	cmp    QWORD PTR [rsp+0xd8],0x0
  402a58:	je     0x402d10
  402a5e:	movsxd rax,DWORD PTR [rip+0x75d3]        # 0x40a038
  402a65:	lea    rbx,[rax*8+0x0]
  402a6d:	mov    DWORD PTR [rsp+0x3c],eax
  402a71:	mov    QWORD PTR [rsp+0x50],rax
  402a76:	mov    QWORD PTR [rsp+0x58],rbx
  402a7b:	mov    rbx,QWORD PTR [rsp+0xc8]
  402a83:	mov    rax,QWORD PTR [rbx+rax*8]
  402a87:	mov    QWORD PTR [rsp+0x40],rax
  402a8c:	movzx  eax,BYTE PTR [rax+0x1]
  402a90:	cmp    al,0x2d
  402a92:	mov    BYTE PTR [rsp+0x48],al
  402a96:	je     0x402af4
  402a98:	mov    r14d,DWORD PTR [rsp+0xe8]
  402aa0:	test   r14d,r14d
  402aa3:	je     0x402d10
  402aa9:	mov    rax,QWORD PTR [rsp+0x40]
  402aae:	cmp    BYTE PTR [rax+0x2],0x0
  402ab2:	jne    0x402af4
  402ab4:	mov    rax,QWORD PTR [rsp+0xd0]
  402abc:	movzx  ecx,BYTE PTR [rax]
  402abf:	test   cl,cl
  402ac1:	je     0x402af4
  402ac3:	movzx  r8d,BYTE PTR [rsp+0x48]
  402ac9:	cmp    r8b,cl
  402acc:	je     0x4030f0
  402ad2:	mov    rax,QWORD PTR [rsp+0xd0]
  402ada:	jmp    0x402ae9
  402adc:	nop    DWORD PTR [rax+0x0]
  402ae0:	cmp    r8b,dl
  402ae3:	je     0x4030f0
  402ae9:	add    rax,0x1
  402aed:	movzx  edx,BYTE PTR [rax]
  402af0:	test   dl,dl
  402af2:	jne    0x402ae0
  402af4:	cmp    dil,0x3d
  402af8:	mov    rbp,rsi
  402afb:	je     0x402b14
  402afd:	test   dil,dil
  402b00:	jne    0x402b08
  402b02:	jmp    0x402b14
  402b04:	test   al,al
  402b06:	je     0x402b14
  402b08:	add    rbp,0x1
  402b0c:	movzx  eax,BYTE PTR [rbp+0x0]
  402b10:	cmp    al,0x3d
  402b12:	jne    0x402b04
  402b14:	mov    rax,QWORD PTR [rsp+0xd8]
  402b1c:	mov    r13,QWORD PTR [rax]
  402b1f:	test   r13,r13
  402b22:	je     0x403027
  402b28:	mov    r15,rbp
  402b2b:	mov    rbx,rax
  402b2e:	xor    ecx,ecx
  402b30:	xor    eax,eax
  402b32:	mov    BYTE PTR [rsp+0x6f],dil
  402b37:	mov    QWORD PTR [rsp+0x60],rbp
  402b3c:	sub    r15,rsi
  402b3f:	mov    rbp,r13
  402b42:	xor    r14d,r14d
  402b45:	mov    DWORD PTR [rsp+0x68],0xffffffff
  402b4d:	mov    edi,ecx
  402b4f:	mov    r13,rax
  402b52:	jmp    0x402b69
  402b54:	mov    edi,0x1
  402b59:	add    rbx,0x20
  402b5d:	mov    rbp,QWORD PTR [rbx]
  402b60:	add    r14d,0x1
  402b64:	test   rbp,rbp
  402b67:	je     0x402bb0
  402b69:	mov    r8,r15
  402b6c:	mov    rdx,rsi
  402b6f:	mov    rcx,rbp
  402b72:	call   0x4074c0
  402b77:	test   eax,eax
  402b79:	jne    0x402b59
  402b7b:	mov    rcx,rbp
  402b7e:	call   0x4074c8
  402b83:	cmp    r15d,eax
  402b86:	je     0x402ff0
  402b8c:	test   r13,r13
  402b8f:	jne    0x402b54
  402b91:	mov    r13,rbx
  402b94:	add    rbx,0x20
  402b98:	mov    rbp,QWORD PTR [rbx]
  402b9b:	mov    DWORD PTR [rsp+0x68],r14d
  402ba0:	add    r14d,0x1
  402ba4:	test   rbp,rbp
  402ba7:	jne    0x402b69
  402ba9:	nop    DWORD PTR [rax+0x0]
  402bb0:	mov    eax,edi
  402bb2:	mov    rbp,QWORD PTR [rsp+0x60]
  402bb7:	movsx  edi,BYTE PTR [rsp+0x6f]
  402bbc:	test   eax,eax
  402bbe:	je     0x402f80
  402bc4:	mov    r13d,DWORD PTR [rip+0x7469]        # 0x40a034
  402bcb:	test   r13d,r13d
  402bce:	je     0x402c0a
  402bd0:	mov    rax,QWORD PTR [rsp+0xc8]
  402bd8:	mov    rbx,QWORD PTR [rax]
  402bdb:	call   QWORD PTR [rip+0xe8b3]        # 0x411494
  402be1:	mov    r9,QWORD PTR [rsp+0x40]
  402be6:	lea    rcx,[rax+0x60]
  402bea:	lea    rdx,[rip+0x9a02]        # 0x40c5f3
  402bf1:	mov    r8,rbx
  402bf4:	call   0x407590
  402bf9:	mov    eax,DWORD PTR [rip+0x7439]        # 0x40a038
  402bff:	mov    rsi,QWORD PTR [rip+0xd4b2]        # 0x4100b8
  402c06:	mov    DWORD PTR [rsp+0x3c],eax
  402c0a:	mov    rcx,rsi
  402c0d:	call   0x4074c8
  402c12:	add    rax,rsi
  402c15:	mov    QWORD PTR [rip+0xd49c],rax        # 0x4100b8
  402c1c:	mov    eax,DWORD PTR [rsp+0x3c]
  402c20:	mov    DWORD PTR [rip+0x7406],0x0        # 0x40a030
  402c2a:	add    eax,0x1
  402c2d:	mov    DWORD PTR [rip+0x7405],eax        # 0x40a038
  402c33:	mov    eax,0x3f
  402c38:	jmp    0x402de6
  402c3d:	nop    DWORD PTR [rax]
  402c40:	mov    r15d,DWORD PTR [rip+0xd449]        # 0x410090
  402c47:	test   r15d,r15d
  402c4a:	je     0x4029d3
  402c50:	jmp    0x402a33
  402c55:	mov    edx,DWORD PTR [rip+0x73dd]        # 0x40a038
  402c5b:	cmp    DWORD PTR [rip+0xd43f],edx        # 0x4100a0
  402c61:	jle    0x402c69
  402c63:	mov    DWORD PTR [rip+0xd437],edx        # 0x4100a0
  402c69:	cmp    edx,DWORD PTR [rip+0xd435]        # 0x4100a4
  402c6f:	jge    0x402c77
  402c71:	mov    DWORD PTR [rip+0xd42d],edx        # 0x4100a4
  402c77:	mov    ebx,DWORD PTR [rip+0xd433]        # 0x4100b0
  402c7d:	cmp    ebx,0x1
  402c80:	je     0x402e00
  402c86:	cmp    r12d,edx
  402c89:	je     0x402e72
  402c8f:	mov    rdi,QWORD PTR [rsp+0xc8]
  402c97:	movsxd rax,edx
  402c9a:	mov    ecx,0x3
  402c9f:	mov    rax,QWORD PTR [rdi+rax*8]
  402ca3:	lea    rdi,[rip+0x9946]        # 0x40c5f0
  402caa:	mov    rsi,rax
  402cad:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402caf:	jne    0x402dc0
  402cb5:	mov    eax,DWORD PTR [rip+0xd3e9]        # 0x4100a4
  402cbb:	mov    ecx,DWORD PTR [rip+0xd3df]        # 0x4100a0
  402cc1:	add    edx,0x1
  402cc4:	mov    DWORD PTR [rip+0x736e],edx        # 0x40a038
  402cca:	cmp    eax,ecx
  402ccc:	je     0x403000
  402cd2:	cmp    edx,ecx
  402cd4:	je     0x402ce9
  402cd6:	mov    rcx,QWORD PTR [rsp+0xc8]
  402cde:	call   0x402890
  402ce3:	mov    eax,DWORD PTR [rip+0xd3bb]        # 0x4100a4
  402ce9:	cmp    r12d,eax
  402cec:	mov    DWORD PTR [rip+0xd3ad],r12d        # 0x4100a0
  402cf3:	mov    DWORD PTR [rip+0x733e],r12d        # 0x40a038
  402cfa:	jne    0x402e88
  402d00:	mov    eax,0xffffffff
  402d05:	jmp    0x402de6
  402d0a:	nop    WORD PTR [rax+rax*1+0x0]
  402d10:	mov    rax,QWORD PTR [rsp+0xd0]
  402d18:	lea    rbx,[rsi+0x1]
  402d1c:	mov    QWORD PTR [rip+0xd395],rbx        # 0x4100b8
  402d23:	movzx  eax,BYTE PTR [rax]
  402d26:	test   al,al
  402d28:	je     0x402d54
  402d2a:	cmp    al,dil
  402d2d:	je     0x402f18
  402d33:	mov    rax,QWORD PTR [rsp+0xd0]
  402d3b:	jmp    0x402d49
  402d3d:	nop    DWORD PTR [rax]
  402d40:	cmp    dl,dil
  402d43:	je     0x402f20
  402d49:	add    rax,0x1
  402d4d:	movzx  edx,BYTE PTR [rax]
  402d50:	test   dl,dl
  402d52:	jne    0x402d40
  402d54:	cmp    BYTE PTR [rsi+0x1],0x0
  402d58:	jne    0x402d70
  402d5a:	mov    edx,0x1
  402d5f:	xor    eax,eax
  402d61:	add    DWORD PTR [rip+0x72d0],0x1        # 0x40a038
  402d68:	test   dl,dl
  402d6a:	je     0x402f60
  402d70:	mov    r8d,DWORD PTR [rip+0x72bd]        # 0x40a034
  402d77:	test   r8d,r8d
  402d7a:	je     0x402db1
  402d7c:	cmp    QWORD PTR [rip+0xd324],0x0        # 0x4100a8
  402d84:	mov    rax,QWORD PTR [rsp+0xc8]
  402d8c:	mov    rbx,QWORD PTR [rax]
  402d8f:	je     0x403220
  402d95:	call   QWORD PTR [rip+0xe6f9]        # 0x411494
  402d9b:	lea    rdx,[rip+0x993f]        # 0x40c6e1
  402da2:	lea    rcx,[rax+0x60]
  402da6:	mov    r9d,edi
  402da9:	mov    r8,rbx
  402dac:	call   0x407590
  402db1:	mov    DWORD PTR [rip+0x7279],edi        # 0x40a030
  402db7:	mov    eax,0x3f
  402dbc:	jmp    0x402de6
  402dbe:	xchg   ax,ax
  402dc0:	cmp    BYTE PTR [rax],0x2d
  402dc3:	je     0x402ec0
  402dc9:	test   ebx,ebx
  402dcb:	je     0x402d00
  402dd1:	add    edx,0x1
  402dd4:	mov    QWORD PTR [rip+0xd2bd],rax        # 0x410098
  402ddb:	mov    eax,0x1
  402de0:	mov    DWORD PTR [rip+0x7252],edx        # 0x40a038
  402de6:	add    rsp,0x78
  402dea:	pop    rbx
  402deb:	pop    rsi
  402dec:	pop    rdi
  402ded:	pop    rbp
  402dee:	pop    r12
  402df0:	pop    r13
  402df2:	pop    r14
  402df4:	pop    r15
  402df6:	ret    
  402df7:	nop    WORD PTR [rax+rax*1+0x0]
  402e00:	mov    eax,DWORD PTR [rip+0xd29a]        # 0x4100a0
  402e06:	cmp    DWORD PTR [rip+0xd298],eax        # 0x4100a4
  402e0c:	je     0x4030d2
  402e12:	cmp    edx,eax
  402e14:	je     0x402e29
  402e16:	mov    rcx,QWORD PTR [rsp+0xc8]
  402e1e:	call   0x402890
  402e23:	mov    eax,DWORD PTR [rip+0x720f]        # 0x40a038
  402e29:	cmp    r12d,eax
  402e2c:	jle    0x402f40
  402e32:	mov    rdi,QWORD PTR [rsp+0xc8]
  402e3a:	movsxd rdx,eax
  402e3d:	lea    rdx,[rdi+rdx*8]
  402e41:	jmp    0x402e59
  402e43:	add    eax,0x1
  402e46:	add    rdx,0x8
  402e4a:	cmp    eax,r12d
  402e4d:	mov    DWORD PTR [rip+0x71e5],eax        # 0x40a038
  402e53:	je     0x402f40
  402e59:	mov    rcx,QWORD PTR [rdx]
  402e5c:	cmp    BYTE PTR [rcx],0x2d
  402e5f:	jne    0x402e43
  402e61:	cmp    BYTE PTR [rcx+0x1],0x0
  402e65:	je     0x402e43
  402e67:	mov    edx,DWORD PTR [rip+0x71cb]        # 0x40a038
  402e6d:	jmp    0x402f42
  402e72:	mov    r12d,DWORD PTR [rip+0xd227]        # 0x4100a0
  402e79:	mov    eax,DWORD PTR [rip+0xd225]        # 0x4100a4
  402e7f:	cmp    r12d,eax
  402e82:	je     0x402d00
  402e88:	mov    DWORD PTR [rip+0x71aa],eax        # 0x40a038
  402e8e:	mov    eax,0xffffffff
  402e93:	jmp    0x402de6
  402e98:	nop    DWORD PTR [rax+rax*1+0x0]
  402ea0:	mov    DWORD PTR [rip+0xd206],0x0        # 0x4100b0
  402eaa:	add    QWORD PTR [rsp+0xd0],0x1
  402eb3:	jmp    0x402a29
  402eb8:	nop    DWORD PTR [rax+rax*1+0x0]
  402ec0:	movzx  ecx,BYTE PTR [rax+0x1]
  402ec4:	test   cl,cl
  402ec6:	je     0x402dc9
  402ecc:	cmp    cl,0x2d
  402ecf:	sete   dl
  402ed2:	xor    ecx,ecx
  402ed4:	cmp    QWORD PTR [rsp+0xd8],0x0
  402edd:	setne  cl
  402ee0:	and    rdx,rcx
  402ee3:	lea    rsi,[rax+rdx*1+0x1]
  402ee8:	mov    QWORD PTR [rip+0xd1c9],rsi        # 0x4100b8
  402eef:	movsx  edi,BYTE PTR [rsi]
  402ef2:	jmp    0x402a4f
  402ef7:	nop    WORD PTR [rax+rax*1+0x0]
  402f00:	mov    DWORD PTR [rip+0xd1a6],0x2        # 0x4100b0
  402f0a:	add    QWORD PTR [rsp+0xd0],0x1
  402f13:	jmp    0x402a29
  402f18:	mov    rax,QWORD PTR [rsp+0xd0]
  402f20:	test   rax,rax
  402f23:	sete   cl
  402f26:	cmp    dil,0x3a
  402f2a:	sete   dl
  402f2d:	or     edx,ecx
  402f2f:	cmp    BYTE PTR [rsi+0x1],0x0
  402f33:	je     0x402d61
  402f39:	jmp    0x402d68
  402f3e:	xchg   ax,ax
  402f40:	mov    edx,eax
  402f42:	cmp    r12d,edx
  402f45:	mov    DWORD PTR [rip+0xd155],eax        # 0x4100a0
  402f4b:	jne    0x402c8f
  402f51:	jmp    0x402e72
  402f56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402f60:	cmp    BYTE PTR [rax],0x57
  402f63:	movzx  edx,BYTE PTR [rax+0x1]
  402f67:	je     0x403102
  402f6d:	cmp    dl,0x3a
  402f70:	je     0x4031ea
  402f76:	movsx  eax,dil
  402f7a:	jmp    0x402de6
  402f7f:	nop
  402f80:	test   r13,r13
  402f83:	je     0x403027
  402f89:	mov    r14d,DWORD PTR [rsp+0x68]
  402f8e:	mov    rbx,r13
  402f91:	mov    eax,DWORD PTR [rsp+0x3c]
  402f95:	add    eax,0x1
  402f98:	mov    DWORD PTR [rip+0x709a],eax        # 0x40a038
  402f9e:	cmp    BYTE PTR [rbp+0x0],0x0
  402fa2:	jne    0x40300d
  402fa4:	cmp    DWORD PTR [rbx+0x8],0x1
  402fa8:	je     0x4032fd
  402fae:	mov    rcx,rsi
  402fb1:	call   0x4074c8
  402fb6:	add    rsi,rax
  402fb9:	cmp    QWORD PTR [rsp+0xe0],0x0
  402fc2:	mov    QWORD PTR [rip+0xd0ef],rsi        # 0x4100b8
  402fc9:	je     0x402fd6
  402fcb:	mov    rax,QWORD PTR [rsp+0xe0]
  402fd3:	mov    DWORD PTR [rax],r14d
  402fd6:	mov    rax,QWORD PTR [rbx+0x10]
  402fda:	test   rax,rax
  402fdd:	je     0x403355
  402fe3:	mov    edx,DWORD PTR [rbx+0x18]
  402fe6:	mov    DWORD PTR [rax],edx
  402fe8:	xor    eax,eax
  402fea:	jmp    0x402de6
  402fef:	nop
  402ff0:	mov    rbp,QWORD PTR [rsp+0x60]
  402ff5:	jmp    0x402f91
  402ff7:	nop    WORD PTR [rax+rax*1+0x0]
  403000:	mov    DWORD PTR [rip+0xd09e],edx        # 0x4100a4
  403006:	mov    eax,edx
  403008:	jmp    0x402ce9
  40300d:	mov    r12d,DWORD PTR [rbx+0x8]
  403011:	test   r12d,r12d
  403014:	je     0x403241
  40301a:	add    rbp,0x1
  40301e:	mov    QWORD PTR [rip+0xd073],rbp        # 0x410098
  403025:	jmp    0x402fae
  403027:	cmp    BYTE PTR [rsp+0x48],0x2d
  40302c:	sete   cl
  40302f:	je     0x403074
  403031:	mov    r10d,DWORD PTR [rsp+0xe8]
  403039:	test   r10d,r10d
  40303c:	je     0x403074
  40303e:	mov    rax,QWORD PTR [rsp+0xd0]
  403046:	movzx  eax,BYTE PTR [rax]
  403049:	test   al,al
  40304b:	je     0x403074
  40304d:	cmp    dil,al
  403050:	je     0x4037a6
  403056:	mov    rax,QWORD PTR [rsp+0xd0]
  40305e:	jmp    0x403069
  403060:	cmp    dl,dil
  403063:	je     0x4036b6
  403069:	add    rax,0x1
  40306d:	movzx  edx,BYTE PTR [rax]
  403070:	test   dl,dl
  403072:	jne    0x403060
  403074:	mov    r9d,DWORD PTR [rip+0x6fb9]        # 0x40a034
  40307b:	test   r9d,r9d
  40307e:	je     0x4030c6
  403080:	test   cl,cl
  403082:	jne    0x403584
  403088:	mov    rax,QWORD PTR [rsp+0x40]
  40308d:	movsx  edi,BYTE PTR [rax]
  403090:	mov    rax,QWORD PTR [rsp+0xc8]
  403098:	mov    rbx,QWORD PTR [rax]
  40309b:	call   QWORD PTR [rip+0xe3f3]        # 0x411494
  4030a1:	lea    rdx,[rip+0x9618]        # 0x40c6c0
  4030a8:	lea    rcx,[rax+0x60]
  4030ac:	mov    QWORD PTR [rsp+0x20],rsi
  4030b1:	mov    r9d,edi
  4030b4:	mov    r8,rbx
  4030b7:	call   0x407590
  4030bc:	mov    eax,DWORD PTR [rip+0x6f76]        # 0x40a038
  4030c2:	mov    DWORD PTR [rsp+0x3c],eax
  4030c6:	lea    rax,[rip+0x9613]        # 0x40c6e0
  4030cd:	jmp    0x402c15
  4030d2:	cmp    edx,eax
  4030d4:	je     0x402e29
  4030da:	mov    DWORD PTR [rip+0xcfc4],edx        # 0x4100a4
  4030e0:	mov    eax,edx
  4030e2:	jmp    0x402e29
  4030e7:	nop    WORD PTR [rax+rax*1+0x0]
  4030f0:	lea    rbx,[rsi+0x1]
  4030f4:	mov    eax,ecx
  4030f6:	mov    QWORD PTR [rip+0xcfbb],rbx        # 0x4100b8
  4030fd:	jmp    0x402d2a
  403102:	cmp    dl,0x3b
  403105:	jne    0x402f6d
  40310b:	cmp    BYTE PTR [rsi+0x1],0x0
  40310f:	je     0x40342e
  403115:	add    DWORD PTR [rip+0x6f1c],0x1        # 0x40a038
  40311c:	mov    QWORD PTR [rip+0xcf75],rbx        # 0x410098
  403123:	movzx  edi,BYTE PTR [rbx]
  403126:	mov    QWORD PTR [rip+0xcf8b],rbx        # 0x4100b8
  40312d:	mov    rsi,rbx
  403130:	cmp    dil,0x3d
  403134:	jne    0x40314d
  403136:	jmp    0x403152
  403138:	nop    DWORD PTR [rax+rax*1+0x0]
  403140:	add    rsi,0x1
  403144:	movzx  edi,BYTE PTR [rsi]
  403147:	cmp    dil,0x3d
  40314b:	je     0x403152
  40314d:	test   dil,dil
  403150:	jne    0x403140
  403152:	mov    rax,QWORD PTR [rsp+0xd8]
  40315a:	mov    r15,QWORD PTR [rax]
  40315d:	test   r15,r15
  403160:	je     0x4036a1
  403166:	mov    r14,rsi
  403169:	xor    ecx,ecx
  40316b:	mov    BYTE PTR [rsp+0x40],dil
  403170:	sub    r14,rbx
  403173:	mov    QWORD PTR [rsp+0x48],rsi
  403178:	mov    DWORD PTR [rsp+0xc0],r12d
  403180:	mov    eax,r14d
  403183:	xor    ebp,ebp
  403185:	mov    DWORD PTR [rsp+0x3c],0x0
  40318d:	xor    r13d,r13d
  403190:	mov    r12d,ecx
  403193:	mov    rsi,QWORD PTR [rsp+0xd8]
  40319b:	mov    rdi,rax
  40319e:	jmp    0x4031b9
  4031a0:	mov    r12d,0x1
  4031a6:	add    rsi,0x20
  4031aa:	mov    r15,QWORD PTR [rsi]
  4031ad:	add    ebp,0x1
  4031b0:	test   r15,r15
  4031b3:	je     0x4033a3
  4031b9:	mov    r8,r14
  4031bc:	mov    rdx,rbx
  4031bf:	mov    rcx,r15
  4031c2:	call   0x4074c0
  4031c7:	test   eax,eax
  4031c9:	jne    0x4031a6
  4031cb:	mov    rcx,r15
  4031ce:	call   0x4074c8
  4031d3:	cmp    rdi,rax
  4031d6:	je     0x403565
  4031dc:	test   r13,r13
  4031df:	jne    0x4031a0
  4031e1:	mov    DWORD PTR [rsp+0x3c],ebp
  4031e5:	mov    r13,rsi
  4031e8:	jmp    0x4031a6
  4031ea:	cmp    BYTE PTR [rax+0x2],0x3a
  4031ee:	je     0x40332d
  4031f4:	cmp    BYTE PTR [rsi+0x1],0x0
  4031f8:	je     0x4032c8
  4031fe:	add    DWORD PTR [rip+0x6e33],0x1        # 0x40a038
  403205:	mov    QWORD PTR [rip+0xce8c],rbx        # 0x410098
  40320c:	movsx  eax,dil
  403210:	mov    QWORD PTR [rip+0xce9d],0x0        # 0x4100b8
  40321b:	jmp    0x402de6
  403220:	call   QWORD PTR [rip+0xe26e]        # 0x411494
  403226:	lea    rdx,[rip+0x94ce]        # 0x40c6fb
  40322d:	lea    rcx,[rax+0x60]
  403231:	mov    r9d,edi
  403234:	mov    r8,rbx
  403237:	call   0x407590
  40323c:	jmp    0x402db1
  403241:	mov    edi,DWORD PTR [rip+0x6ded]        # 0x40a034
  403247:	test   edi,edi
  403249:	je     0x402fae
  40324f:	mov    rax,QWORD PTR [rsp+0xc8]
  403257:	mov    rsi,QWORD PTR [rsp+0x50]
  40325c:	mov    rax,QWORD PTR [rax+rsi*8]
  403260:	cmp    BYTE PTR [rax+0x1],0x2d
  403264:	je     0x40346f
  40326a:	movsx  edi,BYTE PTR [rax]
  40326d:	mov    rax,QWORD PTR [rsp+0xc8]
  403275:	mov    rbp,QWORD PTR [rbx]
  403278:	mov    rsi,QWORD PTR [rax]
  40327b:	call   QWORD PTR [rip+0xe213]        # 0x411494
  403281:	lea    rdx,[rip+0x93c0]        # 0x40c648
  403288:	lea    rcx,[rax+0x60]
  40328c:	mov    QWORD PTR [rsp+0x20],rbp
  403291:	mov    r9d,edi
  403294:	mov    r8,rsi
  403297:	call   0x407590
  40329c:	mov    rsi,QWORD PTR [rip+0xce15]        # 0x4100b8
  4032a3:	mov    rcx,rsi
  4032a6:	call   0x4074c8
  4032ab:	add    rax,rsi
  4032ae:	mov    QWORD PTR [rip+0xce03],rax        # 0x4100b8
  4032b5:	mov    eax,DWORD PTR [rbx+0x18]
  4032b8:	mov    DWORD PTR [rip+0x6d72],eax        # 0x40a030
  4032be:	mov    eax,0x3f
  4032c3:	jmp    0x402de6
  4032c8:	movsxd rax,DWORD PTR [rip+0x6d69]        # 0x40a038
  4032cf:	cmp    eax,r12d
  4032d2:	je     0x40349e
  4032d8:	mov    rsi,QWORD PTR [rsp+0xc8]
  4032e0:	lea    edx,[rax+0x1]
  4032e3:	mov    DWORD PTR [rip+0x6d4f],edx        # 0x40a038
  4032e9:	mov    rax,QWORD PTR [rsi+rax*8]
  4032ed:	mov    QWORD PTR [rip+0xcda4],rax        # 0x410098
  4032f4:	movsx  eax,dil
  4032f8:	jmp    0x403210
  4032fd:	cmp    r12d,eax
  403300:	jle    0x40335d
  403302:	mov    eax,DWORD PTR [rsp+0x3c]
  403306:	mov    rdi,QWORD PTR [rsp+0x58]
  40330b:	add    eax,0x2
  40330e:	mov    DWORD PTR [rip+0x6d24],eax        # 0x40a038
  403314:	mov    rax,QWORD PTR [rsp+0xc8]
  40331c:	mov    rax,QWORD PTR [rax+rdi*1+0x8]
  403321:	mov    QWORD PTR [rip+0xcd70],rax        # 0x410098
  403328:	jmp    0x402fae
  40332d:	cmp    BYTE PTR [rsi+0x1],0x0
  403331:	je     0x40345f
  403337:	add    DWORD PTR [rip+0x6cfa],0x1        # 0x40a038
  40333e:	mov    QWORD PTR [rip+0xcd53],rbx        # 0x410098
  403345:	mov    QWORD PTR [rip+0xcd68],0x0        # 0x4100b8
  403350:	jmp    0x402f76
  403355:	mov    eax,DWORD PTR [rbx+0x18]
  403358:	jmp    0x402de6
  40335d:	mov    r11d,DWORD PTR [rip+0x6cd0]        # 0x40a034
  403364:	test   r11d,r11d
  403367:	jne    0x4035ba
  40336d:	mov    rcx,rsi
  403370:	call   0x4074c8
  403375:	add    rax,rsi
  403378:	mov    QWORD PTR [rip+0xcd39],rax        # 0x4100b8
  40337f:	mov    eax,DWORD PTR [rbx+0x18]
  403382:	mov    DWORD PTR [rip+0x6ca8],eax        # 0x40a030
  403388:	mov    rax,QWORD PTR [rsp+0xd0]
  403390:	cmp    BYTE PTR [rax],0x3a
  403393:	jne    0x402db7
  403399:	mov    eax,0x3a
  40339e:	jmp    0x402de6
  4033a3:	mov    eax,r12d
  4033a6:	movzx  edi,BYTE PTR [rsp+0x40]
  4033ab:	mov    rsi,QWORD PTR [rsp+0x48]
  4033b0:	test   eax,eax
  4033b2:	mov    r12d,DWORD PTR [rsp+0xc0]
  4033ba:	je     0x4034cc
  4033c0:	mov    edx,DWORD PTR [rip+0x6c6e]        # 0x40a034
  4033c6:	test   edx,edx
  4033c8:	je     0x40340b
  4033ca:	movsxd rax,DWORD PTR [rip+0x6c67]        # 0x40a038
  4033d1:	mov    rsi,QWORD PTR [rsp+0xc8]
  4033d9:	mov    rsi,QWORD PTR [rsi+rax*8]
  4033dd:	mov    rax,QWORD PTR [rsp+0xc8]
  4033e5:	mov    rbx,QWORD PTR [rax]
  4033e8:	call   QWORD PTR [rip+0xe0a6]        # 0x411494
  4033ee:	lea    rdx,[rip+0x934b]        # 0x40c740
  4033f5:	lea    rcx,[rax+0x60]
  4033f9:	mov    r9,rsi
  4033fc:	mov    r8,rbx
  4033ff:	call   0x407590
  403404:	mov    rbx,QWORD PTR [rip+0xccad]        # 0x4100b8
  40340b:	mov    rcx,rbx
  40340e:	call   0x4074c8
  403413:	add    rax,rbx
  403416:	add    DWORD PTR [rip+0x6c1b],0x1        # 0x40a038
  40341d:	mov    QWORD PTR [rip+0xcc94],rax        # 0x4100b8
  403424:	mov    eax,0x3f
  403429:	jmp    0x402de6
  40342e:	movsxd rax,DWORD PTR [rip+0x6c03]        # 0x40a038
  403435:	cmp    eax,r12d
  403438:	je     0x4035f6
  40343e:	mov    rsi,QWORD PTR [rsp+0xc8]
  403446:	lea    edx,[rax+0x1]
  403449:	mov    DWORD PTR [rip+0x6be9],edx        # 0x40a038
  40344f:	mov    rbx,QWORD PTR [rsi+rax*8]
  403453:	mov    QWORD PTR [rip+0xcc3e],rbx        # 0x410098
  40345a:	jmp    0x403123
  40345f:	mov    QWORD PTR [rip+0xcc2e],0x0        # 0x410098
  40346a:	jmp    0x403345
  40346f:	mov    rax,QWORD PTR [rsp+0xc8]
  403477:	mov    rdi,QWORD PTR [rbx]
  40347a:	mov    rsi,QWORD PTR [rax]
  40347d:	call   QWORD PTR [rip+0xe011]        # 0x411494
  403483:	lea    rdx,[rip+0x918e]        # 0x40c618
  40348a:	lea    rcx,[rax+0x60]
  40348e:	mov    r9,rdi
  403491:	mov    r8,rsi
  403494:	call   0x407590
  403499:	jmp    0x40329c
  40349e:	mov    eax,DWORD PTR [rip+0x6b90]        # 0x40a034
  4034a4:	test   eax,eax
  4034a6:	jne    0x4036c6
  4034ac:	mov    rax,QWORD PTR [rsp+0xd0]
  4034b4:	mov    DWORD PTR [rip+0x6b76],edi        # 0x40a030
  4034ba:	cmp    BYTE PTR [rax],0x3a
  4034bd:	setne  al
  4034c0:	movzx  eax,al
  4034c3:	lea    eax,[rax+rax*4+0x3a]
  4034c7:	jmp    0x403210
  4034cc:	test   r13,r13
  4034cf:	je     0x4036a1
  4034d5:	mov    ebp,DWORD PTR [rsp+0x3c]
  4034d9:	mov    QWORD PTR [rsp+0xd8],r13
  4034e1:	test   dil,dil
  4034e4:	mov    rax,QWORD PTR [rsp+0xd8]
  4034ec:	je     0x403647
  4034f2:	cmp    DWORD PTR [rax+0x8],0x0
  4034f6:	jne    0x40371f
  4034fc:	cmp    DWORD PTR [rip+0x6b31],0x0        # 0x40a034
  403503:	je     0x403537
  403505:	mov    rax,QWORD PTR [rsp+0xd8]
  40350d:	mov    rsi,QWORD PTR [rax]
  403510:	mov    rax,QWORD PTR [rsp+0xc8]
  403518:	mov    rbx,QWORD PTR [rax]
  40351b:	call   QWORD PTR [rip+0xdf73]        # 0x411494
  403521:	lea    rdx,[rip+0x9240]        # 0x40c768
  403528:	lea    rcx,[rax+0x60]
  40352c:	mov    r9,rsi
  40352f:	mov    r8,rbx
  403532:	call   0x407590
  403537:	mov    rdx,QWORD PTR [rip+0xcb7a]        # 0x4100b8
  40353e:	xor    eax,eax
  403540:	or     rcx,0xffffffffffffffff
  403544:	mov    rdi,rdx
  403547:	repnz scas al,BYTE PTR es:[rdi]
  403549:	mov    rax,rcx
  40354c:	not    rax
  40354f:	lea    rax,[rdx+rax*1-0x1]
  403554:	mov    QWORD PTR [rip+0xcb5d],rax        # 0x4100b8
  40355b:	mov    eax,0x3f
  403560:	jmp    0x402de6
  403565:	mov    QWORD PTR [rsp+0xd8],rsi
  40356d:	movzx  edi,BYTE PTR [rsp+0x40]
  403572:	mov    r12d,DWORD PTR [rsp+0xc0]
  40357a:	mov    rsi,QWORD PTR [rsp+0x48]
  40357f:	jmp    0x4034e1
  403584:	mov    rax,QWORD PTR [rsp+0xc8]
  40358c:	mov    rbx,QWORD PTR [rax]
  40358f:	call   QWORD PTR [rip+0xdeff]        # 0x411494
  403595:	lea    rdx,[rip+0x9104]        # 0x40c6a0
  40359c:	lea    rcx,[rax+0x60]
  4035a0:	mov    r9,rsi
  4035a3:	mov    r8,rbx
  4035a6:	call   0x407590
  4035ab:	mov    eax,DWORD PTR [rip+0x6a87]        # 0x40a038
  4035b1:	mov    DWORD PTR [rsp+0x3c],eax
  4035b5:	jmp    0x4030c6
  4035ba:	mov    rax,QWORD PTR [rsp+0xc8]
  4035c2:	mov    rsi,QWORD PTR [rsp+0x50]
  4035c7:	mov    rdi,QWORD PTR [rax+rsi*8]
  4035cb:	mov    rsi,QWORD PTR [rax]
  4035ce:	call   QWORD PTR [rip+0xdec0]        # 0x411494
  4035d4:	lea    rdx,[rip+0x909d]        # 0x40c678
  4035db:	lea    rcx,[rax+0x60]
  4035df:	mov    r8,rsi
  4035e2:	mov    r9,rdi
  4035e5:	call   0x407590
  4035ea:	mov    rsi,QWORD PTR [rip+0xcac7]        # 0x4100b8
  4035f1:	jmp    0x40336d
  4035f6:	mov    ecx,DWORD PTR [rip+0x6a38]        # 0x40a034
  4035fc:	test   ecx,ecx
  4035fe:	je     0x403627
  403600:	mov    rax,QWORD PTR [rsp+0xc8]
  403608:	mov    rbx,QWORD PTR [rax]
  40360b:	call   QWORD PTR [rip+0xde83]        # 0x411494
  403611:	lea    rdx,[rip+0x9100]        # 0x40c718
  403618:	lea    rcx,[rax+0x60]
  40361c:	mov    r9d,edi
  40361f:	mov    r8,rbx
  403622:	call   0x407590
  403627:	mov    rax,QWORD PTR [rsp+0xd0]
  40362f:	mov    DWORD PTR [rip+0x69fb],edi        # 0x40a030
  403635:	cmp    BYTE PTR [rax],0x3a
  403638:	setne  al
  40363b:	movzx  eax,al
  40363e:	lea    eax,[rax+rax*4+0x3a]
  403642:	jmp    0x402de6
  403647:	cmp    DWORD PTR [rax+0x8],0x1
  40364b:	je     0x4036f2
  403651:	mov    rcx,rbx
  403654:	call   0x4074c8
  403659:	add    rbx,rax
  40365c:	cmp    QWORD PTR [rsp+0xe0],0x0
  403665:	mov    QWORD PTR [rip+0xca4c],rbx        # 0x4100b8
  40366c:	je     0x403678
  40366e:	mov    rax,QWORD PTR [rsp+0xe0]
  403676:	mov    DWORD PTR [rax],ebp
  403678:	mov    rax,QWORD PTR [rsp+0xd8]
  403680:	mov    rax,QWORD PTR [rax+0x10]
  403684:	test   rax,rax
  403687:	je     0x4037be
  40368d:	mov    rsi,QWORD PTR [rsp+0xd8]
  403695:	mov    edx,DWORD PTR [rsi+0x18]
  403698:	mov    DWORD PTR [rax],edx
  40369a:	xor    eax,eax
  40369c:	jmp    0x402de6
  4036a1:	mov    QWORD PTR [rip+0xca0c],0x0        # 0x4100b8
  4036ac:	mov    eax,0x57
  4036b1:	jmp    0x402de6
  4036b6:	lea    rbx,[rsi+0x1]
  4036ba:	mov    QWORD PTR [rip+0xc9f7],rbx        # 0x4100b8
  4036c1:	jmp    0x402d33
  4036c6:	mov    rax,QWORD PTR [rsp+0xc8]
  4036ce:	mov    rbx,QWORD PTR [rax]
  4036d1:	call   QWORD PTR [rip+0xddbd]        # 0x411494
  4036d7:	lea    rdx,[rip+0x903a]        # 0x40c718
  4036de:	lea    rcx,[rax+0x60]
  4036e2:	mov    r9d,edi
  4036e5:	mov    r8,rbx
  4036e8:	call   0x407590
  4036ed:	jmp    0x4034ac
  4036f2:	movsxd rax,DWORD PTR [rip+0x693f]        # 0x40a038
  4036f9:	cmp    r12d,eax
  4036fc:	jle    0x40372f
  4036fe:	mov    rsi,QWORD PTR [rsp+0xc8]
  403706:	lea    edx,[rax+0x1]
  403709:	mov    DWORD PTR [rip+0x6929],edx        # 0x40a038
  40370f:	mov    rax,QWORD PTR [rsi+rax*8]
  403713:	mov    QWORD PTR [rip+0xc97e],rax        # 0x410098
  40371a:	jmp    0x403651
  40371f:	add    rsi,0x1
  403723:	mov    QWORD PTR [rip+0xc96e],rsi        # 0x410098
  40372a:	jmp    0x403651
  40372f:	cmp    DWORD PTR [rip+0x68fe],0x0        # 0x40a034
  403736:	je     0x40376c
  403738:	mov    rsi,QWORD PTR [rsp+0xc8]
  403740:	mov    rsi,QWORD PTR [rsi+rax*8-0x8]
  403745:	mov    rax,QWORD PTR [rsp+0xc8]
  40374d:	mov    rbx,QWORD PTR [rax]
  403750:	call   QWORD PTR [rip+0xdd3e]        # 0x411494
  403756:	lea    rdx,[rip+0x8f1b]        # 0x40c678
  40375d:	lea    rcx,[rax+0x60]
  403761:	mov    r9,rsi
  403764:	mov    r8,rbx
  403767:	call   0x407590
  40376c:	mov    rdx,QWORD PTR [rip+0xc945]        # 0x4100b8
  403773:	xor    eax,eax
  403775:	or     rcx,0xffffffffffffffff
  403779:	mov    rdi,rdx
  40377c:	repnz scas al,BYTE PTR es:[rdi]
  40377e:	mov    rax,rcx
  403781:	not    rax
  403784:	lea    rax,[rdx+rax*1-0x1]
  403789:	mov    QWORD PTR [rip+0xc928],rax        # 0x4100b8
  403790:	mov    rax,QWORD PTR [rsp+0xd0]
  403798:	cmp    BYTE PTR [rax],0x3a
  40379b:	jne    0x402db7
  4037a1:	jmp    0x403399
  4037a6:	lea    rbx,[rsi+0x1]
  4037aa:	mov    rax,QWORD PTR [rsp+0xd0]
  4037b2:	mov    QWORD PTR [rip+0xc8ff],rbx        # 0x4100b8
  4037b9:	jmp    0x402f20
  4037be:	mov    rax,QWORD PTR [rsp+0xd8]
  4037c6:	mov    eax,DWORD PTR [rax+0x18]
  4037c9:	jmp    0x402de6
  4037ce:	xchg   ax,ax
  4037d0:	sub    rsp,0x38
  4037d4:	xor    r9d,r9d
  4037d7:	mov    DWORD PTR [rsp+0x28],0x0
  4037df:	mov    QWORD PTR [rsp+0x20],0x0
  4037e8:	call   0x402980
  4037ed:	add    rsp,0x38
  4037f1:	ret    
  4037f2:	nop
  4037f3:	nop
  4037f4:	nop
  4037f5:	nop
  4037f6:	nop
  4037f7:	nop
  4037f8:	nop
  4037f9:	nop
  4037fa:	nop
  4037fb:	nop
  4037fc:	nop
  4037fd:	nop
  4037fe:	nop
  4037ff:	nop
  403800:	sub    rsp,0x38
  403804:	mov    rax,QWORD PTR [rsp+0x60]
  403809:	mov    DWORD PTR [rsp+0x28],0x0
  403811:	mov    QWORD PTR [rsp+0x20],rax
  403816:	call   0x402980
  40381b:	add    rsp,0x38
  40381f:	ret    
  403820:	sub    rsp,0x38
  403824:	mov    rax,QWORD PTR [rsp+0x60]
  403829:	mov    DWORD PTR [rsp+0x28],0x1
  403831:	mov    QWORD PTR [rsp+0x20],rax
  403836:	call   0x402980
  40383b:	add    rsp,0x38
  40383f:	ret    
  403840:	push   rsi
  403841:	push   rbx
  403842:	sub    rsp,0x28
  403846:	mov    rax,QWORD PTR [rip+0xc873]        # 0x4100c0
  40384d:	test   rax,rax
  403850:	je     0x403860
  403852:	add    rsp,0x28
  403856:	pop    rbx
  403857:	pop    rsi
  403858:	ret    
  403859:	nop    DWORD PTR [rax+0x0]
  403860:	xor    edx,edx
  403862:	xor    ecx,ecx
  403864:	mov    rsi,QWORD PTR [rip+0xdb61]        # 0x4113cc
  40386b:	call   rsi
  40386d:	test   eax,eax
  40386f:	mov    ebx,eax
  403871:	jne    0x403895
  403873:	mov    rax,QWORD PTR [rip+0xc846]        # 0x4100c0
  40387a:	test   rax,rax
  40387d:	jne    0x403852
  40387f:	nop
  403880:	lea    rcx,[rip+0x8f19]        # 0x40c7a0
  403887:	call   0x405880
  40388c:	mov    QWORD PTR [rip+0xc82d],rax        # 0x4100c0
  403893:	jmp    0x403852
  403895:	mov    ecx,eax
  403897:	call   0x4057b0
  40389c:	mov    ecx,ebx
  40389e:	mov    QWORD PTR [rip+0xc81b],rax        # 0x4100c0
  4038a5:	mov    rdx,rax
  4038a8:	call   rsi
  4038aa:	test   eax,eax
  4038ac:	jne    0x403873
  4038ae:	mov    rcx,QWORD PTR [rip+0xc80b]        # 0x4100c0
  4038b5:	call   0x407578
  4038ba:	mov    QWORD PTR [rip+0xc7fb],0x0        # 0x4100c0
  4038c5:	jmp    0x403880
  4038c7:	nop    WORD PTR [rax+rax*1+0x0]
  4038d0:	push   r12
  4038d2:	push   rbp
  4038d3:	push   rdi
  4038d4:	push   rsi
  4038d5:	push   rbx
  4038d6:	sub    rsp,0x20
  4038da:	mov    rdi,rcx
  4038dd:	call   0x403840
  4038e2:	test   rdi,rdi
  4038e5:	mov    rbp,rax
  4038e8:	je     0x403970
  4038ee:	mov    rcx,rdi
  4038f1:	call   0x4074c8
  4038f6:	mov    r12d,eax
  4038f9:	movsxd rsi,eax
  4038fc:	mov    rcx,rbp
  4038ff:	call   0x4074c8
  403904:	movsxd rbx,eax
  403907:	lea    rcx,[rbx+rsi*1+0x9]
  40390c:	call   0x4057b0
  403911:	mov    rdx,rbp
  403914:	mov    rsi,rax
  403917:	mov    rcx,rax
  40391a:	call   0x4074d8
  40391f:	lea    rax,[rsi+rbx*1]
  403923:	movabs rdx,0x5858585858586363
  40392d:	lea    rcx,[rsi+rbx*1+0x8]
  403932:	mov    QWORD PTR [rax],rdx
  403935:	mov    BYTE PTR [rax+0x8],0x0
  403939:	mov    rdx,rdi
  40393c:	call   0x4074d8
  403941:	mov    edx,r12d
  403944:	mov    rcx,rsi
  403947:	call   0x4058b0
  40394c:	cmp    eax,0xffffffff
  40394f:	je     0x403981
  403951:	mov    ecx,eax
  403953:	call   0x407460
  403958:	test   eax,eax
  40395a:	jne    0x4039b2
  40395c:	mov    rax,rsi
  40395f:	add    rsp,0x20
  403963:	pop    rbx
  403964:	pop    rsi
  403965:	pop    rdi
  403966:	pop    rbp
  403967:	pop    r12
  403969:	ret    
  40396a:	nop    WORD PTR [rax+rax*1+0x0]
  403970:	xor    esi,esi
  403972:	xor    r12d,r12d
  403975:	lea    rdi,[rip+0x8e27]        # 0x40c7a3
  40397c:	jmp    0x4038fc
  403981:	call   QWORD PTR [rip+0xdb55]        # 0x4114dc
  403987:	mov    ecx,DWORD PTR [rax]
  403989:	call   0x4074d0
  40398e:	mov    rbx,rax
  403991:	call   QWORD PTR [rip+0xdafd]        # 0x411494
  403997:	lea    rdx,[rip+0x8e0a]        # 0x40c7a8
  40399e:	lea    rcx,[rax+0x60]
  4039a2:	mov    r9,rbx
  4039a5:	mov    r8,rbp
  4039a8:	call   0x407590
  4039ad:	call   0x4075c0
  4039b2:	call   0x4075c0
  4039b7:	nop
  4039b8:	nop
  4039b9:	nop
  4039ba:	nop
  4039bb:	nop
  4039bc:	nop
  4039bd:	nop
  4039be:	nop
  4039bf:	nop
  4039c0:	push   rdi
  4039c1:	push   rsi
  4039c2:	push   rbx
  4039c3:	sub    rsp,0x50
  4039c7:	mov    ebx,DWORD PTR [rsp+0xa0]
  4039ce:	mov    rdi,rdx
  4039d1:	mov    rsi,rcx
  4039d4:	mov    rdx,r8
  4039d7:	test   bl,0x1
  4039da:	je     0x403a70
  4039e0:	cmp    QWORD PTR [rip+0xc6f0],0x0        # 0x4100d8
  4039e8:	jne    0x403aa4
  4039ee:	mov    ecx,0x2
  4039f3:	mov    r8,r9
  4039f6:	call   0x405710
  4039fb:	mov    DWORD PTR [rip+0xc6cb],0x0        # 0x4100d0
  403a05:	mov    rcx,rax
  403a08:	mov    QWORD PTR [rip+0xc6c9],rax        # 0x4100d8
  403a0f:	mov    r10d,ebx
  403a12:	mov    edx,0x2
  403a17:	mov    QWORD PTR [rsp+0x28],0x0
  403a20:	shr    r10d,1
  403a23:	mov    QWORD PTR [rsp+0x20],0x0
  403a2c:	mov    r9,rdi
  403a2f:	and    r10d,0x1
  403a33:	and    ebx,0x4
  403a36:	mov    r8,rsi
  403a39:	cmovne ebx,edx
  403a3c:	lea    rdx,[rsp+0x4c]
  403a41:	or     ebx,r10d
  403a44:	mov    QWORD PTR [rsp+0x30],rdx
  403a49:	mov    edx,ebx
  403a4b:	call   0x404470
  403a50:	test   rax,rax
  403a53:	jne    0x403ad2
  403a55:	mov    eax,DWORD PTR [rip+0xc675]        # 0x4100d0
  403a5b:	add    eax,0x1
  403a5e:	mov    DWORD PTR [rip+0xc66c],eax        # 0x4100d0
  403a64:	add    rsp,0x50
  403a68:	pop    rbx
  403a69:	pop    rsi
  403a6a:	pop    rdi
  403a6b:	ret    
  403a6c:	nop    DWORD PTR [rax+0x0]
  403a70:	mov    rcx,QWORD PTR [rip+0xc661]        # 0x4100d8
  403a77:	test   rcx,rcx
  403a7a:	jne    0x403a0f
  403a7c:	mov    rax,QWORD PTR [rsp+0x90]
  403a84:	lea    rdi,[rip+0x8d62]        # 0x40c7ed
  403a8b:	mov    QWORD PTR [rax],rdi
  403a8e:	mov    rax,QWORD PTR [rsp+0x98]
  403a96:	mov    QWORD PTR [rax],0x0
  403a9d:	mov    eax,0xffffffff
  403aa2:	jmp    0x403a64
  403aa4:	mov    rax,QWORD PTR [rsp+0x90]
  403aac:	lea    rsi,[rip+0x8d1d]        # 0x40c7d0
  403ab3:	mov    QWORD PTR [rax],rsi
  403ab6:	mov    rax,QWORD PTR [rsp+0x98]
  403abe:	mov    QWORD PTR [rax],0x0
  403ac5:	mov    eax,0xffffffff
  403aca:	add    rsp,0x50
  403ace:	pop    rbx
  403acf:	pop    rsi
  403ad0:	pop    rdi
  403ad1:	ret    
  403ad2:	mov    rdi,QWORD PTR [rsp+0x90]
  403ada:	mov    QWORD PTR [rdi],rax
  403add:	mov    rax,QWORD PTR [rsp+0x98]
  403ae5:	mov    QWORD PTR [rax],0x0
  403aec:	mov    eax,0xffffffff
  403af1:	add    rsp,0x50
  403af5:	pop    rbx
  403af6:	pop    rsi
  403af7:	pop    rdi
  403af8:	ret    
  403af9:	nop    DWORD PTR [rax+0x0]
  403b00:	push   rbp
  403b01:	push   rdi
  403b02:	push   rsi
  403b03:	push   rbx
  403b04:	sub    rsp,0x38
  403b08:	mov    rax,QWORD PTR [rip+0xc5c9]        # 0x4100d8
  403b0f:	mov    ebx,ecx
  403b11:	sub    ebx,0x1
  403b14:	js     0x403ba4
  403b1a:	test   rax,rax
  403b1d:	je     0x403ba4
  403b23:	movsxd r9,DWORD PTR [rip+0xc5a6]        # 0x4100d0
  403b2a:	cmp    ebx,r9d
  403b2d:	jge    0x403ba4
  403b2f:	test   ebx,ebx
  403b31:	mov    rdi,rdx
  403b34:	mov    esi,ecx
  403b36:	jne    0x403b3e
  403b38:	cmp    r9d,0x1
  403b3c:	je     0x403b90
  403b3e:	lea    rcx,[r9*4+0x0]
  403b46:	call   0x4057b0
  403b4b:	mov    edx,DWORD PTR [rip+0xc57f]        # 0x4100d0
  403b51:	mov    rcx,QWORD PTR [rip+0xc580]        # 0x4100d8
  403b58:	mov    r8,rax
  403b5b:	mov    rbp,rax
  403b5e:	call   0x404740
  403b63:	test   eax,eax
  403b65:	je     0x403be2
  403b67:	movsxd rbx,ebx
  403b6a:	mov    rcx,rbp
  403b6d:	mov    eax,DWORD PTR [rbp+rbx*4+0x0]
  403b71:	mov    DWORD PTR [rdi],eax
  403b73:	call   0x407578
  403b78:	cmp    esi,DWORD PTR [rip+0xc552]        # 0x4100d0
  403b7e:	mov    eax,esi
  403b80:	je     0x403bb0
  403b82:	add    rsp,0x38
  403b86:	pop    rbx
  403b87:	pop    rsi
  403b88:	pop    rdi
  403b89:	pop    rbp
  403b8a:	ret    
  403b8b:	nop    DWORD PTR [rax+rax*1+0x0]
  403b90:	mov    r8,rdx
  403b93:	mov    rcx,rax
  403b96:	mov    edx,0x1
  403b9b:	call   0x404740
  403ba0:	test   eax,eax
  403ba2:	jne    0x403b78
  403ba4:	mov    eax,0xffffffff
  403ba9:	jmp    0x403b82
  403bab:	nop    DWORD PTR [rax+rax*1+0x0]
  403bb0:	mov    rcx,QWORD PTR [rip+0xc521]        # 0x4100d8
  403bb7:	mov    DWORD PTR [rsp+0x2c],esi
  403bbb:	call   0x404850
  403bc0:	mov    eax,DWORD PTR [rsp+0x2c]
  403bc4:	mov    QWORD PTR [rip+0xc509],0x0        # 0x4100d8
  403bcf:	mov    DWORD PTR [rip+0xc4f7],0x0        # 0x4100d0
  403bd9:	add    rsp,0x38
  403bdd:	pop    rbx
  403bde:	pop    rsi
  403bdf:	pop    rdi
  403be0:	pop    rbp
  403be1:	ret    
  403be2:	mov    rcx,rbp
  403be5:	call   0x407578
  403bea:	jmp    0x403ba4
  403bec:	nop
  403bed:	nop
  403bee:	nop
  403bef:	nop
  403bf0:	push   r15
  403bf2:	push   r14
  403bf4:	push   r13
  403bf6:	push   r12
  403bf8:	push   rbp
  403bf9:	push   rdi
  403bfa:	push   rsi
  403bfb:	push   rbx
  403bfc:	sub    rsp,0x48
  403c00:	mov    r10d,DWORD PTR [rcx+0x30]
  403c04:	cmp    DWORD PTR [rcx+0x50],r10d
  403c08:	mov    eax,0x1
  403c0d:	je     0x403cbf
  403c13:	mov    rbx,rcx
  403c16:	mov    rcx,QWORD PTR [rcx+0x40]
  403c1a:	mov    ebp,edx
  403c1c:	movsxd rdx,r10d
  403c1f:	mov    r13,r9
  403c22:	mov    r12,r8
  403c25:	shl    rdx,0x2
  403c29:	call   0x405830
  403c2e:	test   BYTE PTR [rbx],0x1
  403c31:	mov    QWORD PTR [rbx+0x40],rax
  403c35:	jne    0x403cd0
  403c3b:	mov    edi,DWORD PTR [rbx+0x50]
  403c3e:	cmp    edi,DWORD PTR [rbx+0x30]
  403c41:	jge    0x403cea
  403c47:	movsxd rsi,edi
  403c4a:	mov    r14d,0x1
  403c50:	mov    r15,rsi
  403c53:	shl    r15,0x4
  403c57:	nop    WORD PTR [rax+rax*1+0x0]
  403c60:	mov    r9,QWORD PTR [rbx+0x48]
  403c64:	mov    rcx,QWORD PTR [rbx+0x40]
  403c68:	mov    rax,QWORD PTR [rbx+0x80]
  403c6f:	lea    rdx,[r9+r15*1]
  403c73:	test   r9,r9
  403c76:	lea    r8,[rcx+rsi*4]
  403c7a:	mov    rax,QWORD PTR [rax+0x20]
  403c7e:	mov    rcx,rbx
  403c81:	cmovne r9,rdx
  403c85:	mov    rdx,QWORD PTR [rbx+0x38]
  403c89:	mov    rdx,QWORD PTR [rdx+rsi*8]
  403c8d:	mov    QWORD PTR [rsp+0x30],r13
  403c92:	mov    QWORD PTR [rsp+0x28],r12
  403c97:	mov    DWORD PTR [rsp+0x20],ebp
  403c9b:	call   rax
  403c9d:	test   rax,rax
  403ca0:	mov    eax,0x0
  403ca5:	cmovs  r14d,eax
  403ca9:	add    edi,0x1
  403cac:	add    rsi,0x1
  403cb0:	add    r15,0x10
  403cb4:	cmp    edi,DWORD PTR [rbx+0x30]
  403cb7:	jl     0x403c60
  403cb9:	mov    DWORD PTR [rbx+0x50],edi
  403cbc:	mov    eax,r14d
  403cbf:	add    rsp,0x48
  403cc3:	pop    rbx
  403cc4:	pop    rsi
  403cc5:	pop    rdi
  403cc6:	pop    rbp
  403cc7:	pop    r12
  403cc9:	pop    r13
  403ccb:	pop    r14
  403ccd:	pop    r15
  403ccf:	ret    
  403cd0:	movsxd rdx,DWORD PTR [rbx+0x30]
  403cd4:	mov    rcx,QWORD PTR [rbx+0x48]
  403cd8:	shl    rdx,0x4
  403cdc:	call   0x405830
  403ce1:	mov    QWORD PTR [rbx+0x48],rax
  403ce5:	jmp    0x403c3b
  403cea:	mov    r14d,0x1
  403cf0:	jmp    0x403cb9
  403cf2:	nop    DWORD PTR [rax+0x0]
  403cf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403d00:	push   rdi
  403d01:	push   rsi
  403d02:	push   rbx
  403d03:	sub    rsp,0x20
  403d07:	test   r8,r8
  403d0a:	mov    rax,r8
  403d0d:	je     0x403d30
  403d0f:	and    edx,0x4
  403d12:	je     0x403d8b
  403d14:	mov    rcx,QWORD PTR [rcx]
  403d17:	test   rcx,rcx
  403d1a:	je     0x403d93
  403d1c:	xor    r8d,r8d
  403d1f:	mov    rdx,rax
  403d22:	add    rsp,0x20
  403d26:	pop    rbx
  403d27:	pop    rsi
  403d28:	pop    rdi
  403d29:	jmp    0x405c30
  403d2e:	xchg   ax,ax
  403d30:	mov    rbx,QWORD PTR [rcx]
  403d33:	xor    ecx,ecx
  403d35:	test   rbx,rbx
  403d38:	je     0x403d96
  403d3a:	mov    rcx,rbx
  403d3d:	call   0x4074c8
  403d42:	cmp    eax,0x5
  403d45:	jle    0x403d5e
  403d47:	cdqe   
  403d49:	lea    rdi,[rip+0x8ac0]        # 0x40c810
  403d50:	mov    ecx,0x7
  403d55:	lea    rsi,[rbx+rax*1-0x6]
  403d5a:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  403d5c:	je     0x403da2
  403d5e:	lea    rdx,[rip+0x8aab]        # 0x40c810
  403d65:	mov    rcx,rbx
  403d68:	xor    r8d,r8d
  403d6b:	call   0x405c30
  403d70:	mov    rbx,rax
  403d73:	xor    edx,edx
  403d75:	mov    rcx,rbx
  403d78:	call   0x4058b0
  403d7d:	test   eax,eax
  403d7f:	js     0x403daf
  403d81:	mov    ecx,eax
  403d83:	call   0x407460
  403d88:	mov    rax,rbx
  403d8b:	add    rsp,0x20
  403d8f:	pop    rbx
  403d90:	pop    rsi
  403d91:	pop    rdi
  403d92:	ret    
  403d93:	mov    rcx,r8
  403d96:	add    rsp,0x20
  403d9a:	pop    rbx
  403d9b:	pop    rsi
  403d9c:	pop    rdi
  403d9d:	jmp    0x4038d0
  403da2:	mov    rcx,rbx
  403da5:	call   0x405880
  403daa:	mov    rbx,rax
  403dad:	jmp    0x403d73
  403daf:	mov    rcx,rbx
  403db2:	call   0x407578
  403db7:	xor    eax,eax
  403db9:	jmp    0x403d8b
  403dbb:	nop    DWORD PTR [rax+rax*1+0x0]
  403dc0:	push   rbp
  403dc1:	push   rdi
  403dc2:	push   rsi
  403dc3:	push   rbx
  403dc4:	sub    rsp,0x28
  403dc8:	mov    ebp,ecx
  403dca:	mov    rdi,rdx
  403dcd:	mov    rsi,r8
  403dd0:	mov    rbx,r9
  403dd3:	mov    ecx,0x90
  403dd8:	call   0x4057b0
  403ddd:	mov    DWORD PTR [rax],ebp
  403ddf:	mov    QWORD PTR [rax+0x8],rdi
  403de3:	mov    QWORD PTR [rax+0x10],rsi
  403de7:	mov    DWORD PTR [rax+0x18],0x0
  403dee:	mov    QWORD PTR [rax+0x20],0x0
  403df6:	mov    DWORD PTR [rax+0x28],0x0
  403dfd:	mov    DWORD PTR [rax+0x2c],0xffffffff
  403e04:	mov    DWORD PTR [rax+0x30],0x0
  403e0b:	mov    QWORD PTR [rax+0x38],0x0
  403e13:	mov    QWORD PTR [rax+0x40],0x0
  403e1b:	mov    QWORD PTR [rax+0x48],0x0
  403e23:	mov    DWORD PTR [rax+0x50],0x0
  403e2a:	mov    QWORD PTR [rax+0x58],0x0
  403e32:	mov    QWORD PTR [rax+0x60],0x0
  403e3a:	mov    QWORD PTR [rax+0x68],0x0
  403e42:	mov    DWORD PTR [rax+0x70],0x0
  403e49:	mov    QWORD PTR [rax+0x78],0x0
  403e51:	mov    QWORD PTR [rax+0x80],rbx
  403e58:	mov    QWORD PTR [rax+0x88],0x0
  403e63:	add    rsp,0x28
  403e67:	pop    rbx
  403e68:	pop    rsi
  403e69:	pop    rdi
  403e6a:	pop    rbp
  403e6b:	ret    
  403e6c:	nop    DWORD PTR [rax+0x0]
  403e70:	push   r15
  403e72:	push   r14
  403e74:	push   r13
  403e76:	push   r12
  403e78:	push   rbp
  403e79:	push   rdi
  403e7a:	push   rsi
  403e7b:	push   rbx
  403e7c:	sub    rsp,0x78
  403e80:	mov    rbx,rcx
  403e83:	mov    rcx,QWORD PTR [rcx+0x58]
  403e87:	mov    esi,edx
  403e89:	mov    r12,r8
  403e8c:	mov    r13,r9
  403e8f:	test   rcx,rcx
  403e92:	je     0x403eaa
  403e94:	call   0x4075a8
  403e99:	cmp    eax,0xffffffff
  403e9c:	je     0x404100
  403ea2:	mov    QWORD PTR [rbx+0x58],0x0
  403eaa:	cmp    QWORD PTR [rbx+0x20],0x0
  403eaf:	je     0x403ef0
  403eb1:	mov    r9,QWORD PTR [rsp+0xf8]
  403eb9:	lea    r8,[rsp+0x68]
  403ebe:	xor    edx,edx
  403ec0:	mov    rcx,rbx
  403ec3:	call   0x403bf0
  403ec8:	test   eax,eax
  403eca:	jne    0x403fe0
  403ed0:	mov    rax,QWORD PTR [rsp+0x68]
  403ed5:	add    rsp,0x78
  403ed9:	pop    rbx
  403eda:	pop    rsi
  403edb:	pop    rdi
  403edc:	pop    rbp
  403edd:	pop    r12
  403edf:	pop    r13
  403ee1:	pop    r14
  403ee3:	pop    r15
  403ee5:	ret    
  403ee6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403ef0:	mov    edi,DWORD PTR [rbx+0x18]
  403ef3:	test   edi,edi
  403ef5:	js     0x4040e0
  403efb:	test   sil,0x1
  403eff:	je     0x404022
  403f05:	xor    r14d,r14d
  403f08:	cmp    QWORD PTR [rsp+0xe8],0x0
  403f11:	je     0x404300
  403f17:	test   sil,0x4
  403f1b:	mov    ebp,0xffffffff
  403f20:	jne    0x404275
  403f26:	mov    DWORD PTR [rbx+0x18],0xffffffff
  403f2d:	test   ebp,ebp
  403f2f:	js     0x40445b
  403f35:	test   r14d,r14d
  403f38:	jne    0x404142
  403f3e:	cmp    QWORD PTR [rsp+0xf0],0x0
  403f47:	je     0x4041c3
  403f4d:	test   sil,0x40
  403f51:	je     0x404111
  403f57:	mov    rax,QWORD PTR [rsp+0xf8]
  403f5f:	xor    esi,esi
  403f61:	mov    r15d,0xffffffff
  403f67:	mov    DWORD PTR [rax],0x0
  403f6d:	lea    rax,[rip+0x8934]        # 0x40c8a8
  403f74:	mov    QWORD PTR [rsp+0x68],rax
  403f79:	xor    r14d,r14d
  403f7c:	test   edi,edi
  403f7e:	je     0x403f8f
  403f80:	mov    rax,QWORD PTR [rbx+0x80]
  403f87:	mov    edx,edi
  403f89:	mov    rcx,rbx
  403f8c:	call   QWORD PTR [rax+0x18]
  403f8f:	cmp    ebp,0x1
  403f92:	je     0x403fa7
  403f94:	test   ebp,ebp
  403f96:	js     0x403fa7
  403f98:	mov    rax,QWORD PTR [rbx+0x80]
  403f9f:	mov    edx,ebp
  403fa1:	mov    rcx,rbx
  403fa4:	call   QWORD PTR [rax+0x18]
  403fa7:	test   sil,sil
  403faa:	je     0x403fbc
  403fac:	mov    rax,QWORD PTR [rbx+0x80]
  403fb3:	mov    edx,r15d
  403fb6:	mov    rcx,rbx
  403fb9:	call   QWORD PTR [rax+0x18]
  403fbc:	test   r14d,r14d
  403fbf:	je     0x403ed0
  403fc5:	mov    rcx,QWORD PTR [rsp+0xe8]
  403fcd:	call   0x407578
  403fd2:	jmp    0x403ed0
  403fd7:	nop    WORD PTR [rax+rax*1+0x0]
  403fe0:	mov    rax,QWORD PTR [rbx+0x80]
  403fe7:	mov    r8d,esi
  403fea:	mov    rdx,QWORD PTR [rbx+0x20]
  403fee:	shr    r8d,0x4
  403ff2:	mov    rcx,rbx
  403ff5:	and    r8d,0x1
  403ff9:	call   QWORD PTR [rax]
  403ffb:	test   eax,eax
  403ffd:	mov    edi,eax
  403fff:	js     0x404310
  404005:	mov    eax,DWORD PTR [rbx+0x28]
  404008:	test   eax,eax
  40400a:	jne    0x404260
  404010:	test   sil,0x1
  404014:	mov    QWORD PTR [rbx+0x20],0x0
  40401c:	jne    0x403f05
  404022:	test   BYTE PTR [rbx],0x2
  404025:	jne    0x404154
  40402b:	mov    r8,QWORD PTR [rsp+0xe8]
  404033:	lea    rcx,[rbx+0x10]
  404037:	mov    edx,esi
  404039:	call   0x403d00
  40403e:	test   rax,rax
  404041:	mov    r15,rax
  404044:	je     0x404333
  40404a:	cmp    rax,QWORD PTR [rsp+0xe8]
  404052:	je     0x404394
  404058:	test   BYTE PTR [rbx],0x4
  40405b:	mov    eax,0x1
  404060:	je     0x40418c
  404066:	mov    QWORD PTR [rbx+0x20],r15
  40406a:	mov    DWORD PTR [rbx+0x28],eax
  40406d:	xor    r14d,r14d
  404070:	mov    rax,QWORD PTR [rbx+0x80]
  404077:	mov    r9d,esi
  40407a:	mov    r8d,esi
  40407d:	shr    r9d,0x8
  404081:	shr    r8d,0x5
  404085:	mov    rdx,r15
  404088:	and    r9d,0x1
  40408c:	and    r8d,0x1
  404090:	mov    rcx,rbx
  404093:	call   QWORD PTR [rax+0x8]
  404096:	test   eax,eax
  404098:	mov    ebp,eax
  40409a:	mov    QWORD PTR [rsp+0xe8],r15
  4040a2:	jns    0x403f35
  4040a8:	call   QWORD PTR [rip+0xd42e]        # 0x4114dc
  4040ae:	mov    rsi,QWORD PTR [rsp+0xf8]
  4040b6:	mov    eax,DWORD PTR [rax]
  4040b8:	test   edi,edi
  4040ba:	mov    DWORD PTR [rsi],eax
  4040bc:	lea    rax,[rip+0x87ca]        # 0x40c88d
  4040c3:	mov    QWORD PTR [rsp+0x68],rax
  4040c8:	je     0x403fbc
  4040ce:	xor    esi,esi
  4040d0:	mov    r15d,0xffffffff
  4040d6:	jmp    0x403f80
  4040db:	nop    DWORD PTR [rax+rax*1+0x0]
  4040e0:	mov    rax,QWORD PTR [rsp+0xf8]
  4040e8:	mov    DWORD PTR [rax],0x0
  4040ee:	lea    rax,[rip+0x8752]        # 0x40c847
  4040f5:	mov    QWORD PTR [rsp+0x68],rax
  4040fa:	jmp    0x403ed0
  4040ff:	nop
  404100:	lea    rax,[rip+0x8710]        # 0x40c817
  404107:	mov    QWORD PTR [rsp+0x68],rax
  40410c:	jmp    0x403ed0
  404111:	cmp    DWORD PTR [rbx+0x2c],0xffffffff
  404115:	je     0x4042a0
  40411b:	mov    rax,QWORD PTR [rsp+0xf8]
  404123:	xor    esi,esi
  404125:	mov    r15d,0xffffffff
  40412b:	mov    DWORD PTR [rax],0x0
  404131:	lea    rax,[rip+0x87a0]        # 0x40c8d8
  404138:	mov    QWORD PTR [rsp+0x68],rax
  40413d:	jmp    0x403f79
  404142:	mov    rcx,QWORD PTR [rsp+0xe8]
  40414a:	call   0x407578
  40414f:	jmp    0x403f3e
  404154:	mov    rax,QWORD PTR [rbx+0x80]
  40415b:	mov    r8d,esi
  40415e:	lea    rdx,[rsp+0x60]
  404163:	shr    r8d,0x5
  404167:	mov    rcx,rbx
  40416a:	and    r8d,0x1
  40416e:	call   QWORD PTR [rax+0x28]
  404171:	test   eax,eax
  404173:	js     0x404374
  404179:	mov    eax,DWORD PTR [rsp+0x60]
  40417d:	mov    ebp,DWORD PTR [rsp+0x64]
  404181:	xor    r14d,r14d
  404184:	mov    DWORD PTR [rbx+0x18],eax
  404187:	jmp    0x403f2d
  40418c:	mov    eax,DWORD PTR [rbx+0x70]
  40418f:	mov    rcx,QWORD PTR [rbx+0x78]
  404193:	add    eax,0x1
  404196:	mov    DWORD PTR [rbx+0x70],eax
  404199:	cdqe   
  40419b:	lea    rdx,[rax*8+0x0]
  4041a3:	call   0x405830
  4041a8:	mov    QWORD PTR [rbx+0x78],rax
  4041ac:	mov    rax,r15
  4041af:	movsxd rcx,DWORD PTR [rbx+0x70]
  4041b3:	mov    rdx,QWORD PTR [rbx+0x78]
  4041b7:	mov    QWORD PTR [rdx+rcx*8-0x8],rax
  4041bc:	xor    eax,eax
  4041be:	jmp    0x404066
  4041c3:	cmp    DWORD PTR [rbx+0x2c],0xffffffff
  4041c7:	jne    0x40411b
  4041cd:	test   sil,0x40
  4041d1:	mov    r15d,0x2
  4041d7:	jne    0x404400
  4041dd:	test   BYTE PTR [rbx],0x2
  4041e0:	mov    eax,0xffffffff
  4041e5:	je     0x4041ea
  4041e7:	mov    eax,DWORD PTR [rbx+0x18]
  4041ea:	mov    rdx,QWORD PTR [rsp+0xf8]
  4041f2:	mov    DWORD PTR [rsp+0x40],eax
  4041f6:	mov    r9,r13
  4041f9:	mov    rax,QWORD PTR [rsp+0xe0]
  404201:	mov    r10,QWORD PTR [rbx+0x80]
  404208:	mov    r8,r12
  40420b:	mov    DWORD PTR [rsp+0x38],r15d
  404210:	mov    DWORD PTR [rsp+0x30],ebp
  404214:	mov    rcx,rbx
  404217:	mov    QWORD PTR [rsp+0x50],rdx
  40421c:	lea    rdx,[rsp+0x68]
  404221:	mov    DWORD PTR [rsp+0x28],edi
  404225:	mov    QWORD PTR [rsp+0x20],rax
  40422a:	mov    QWORD PTR [rsp+0x48],rdx
  40422f:	mov    edx,esi
  404231:	call   QWORD PTR [r10+0x10]
  404235:	test   rax,rax
  404238:	mov    rsi,rax
  40423b:	jns    0x4043d0
  404241:	mov    esi,r15d
  404244:	cmp    r15d,0x2
  404248:	not    esi
  40424a:	setne  al
  40424d:	shr    esi,0x1f
  404250:	and    esi,eax
  404252:	jmp    0x403f79
  404257:	nop    WORD PTR [rax+rax*1+0x0]
  404260:	mov    rcx,QWORD PTR [rbx+0x20]
  404264:	call   0x407578
  404269:	mov    DWORD PTR [rbx+0x28],0x0
  404270:	jmp    0x404010
  404275:	mov    rcx,QWORD PTR [rbx+0x10]
  404279:	mov    rdx,QWORD PTR [rsp+0xe8]
  404281:	xor    r8d,r8d
  404284:	mov    r14b,0x1
  404287:	call   0x405c30
  40428c:	mov    QWORD PTR [rsp+0xe8],rax
  404294:	jmp    0x403f26
  404299:	nop    DWORD PTR [rax+0x0]
  4042a0:	mov    rax,QWORD PTR [rbx+0x80]
  4042a7:	mov    r9d,esi
  4042aa:	mov    r8d,esi
  4042ad:	shr    r9d,0x9
  4042b1:	shr    r8d,0x7
  4042b5:	mov    rdx,QWORD PTR [rsp+0xf0]
  4042bd:	and    r9d,0x1
  4042c1:	and    r8d,0x1
  4042c5:	mov    rcx,rbx
  4042c8:	call   QWORD PTR [rax+0x8]
  4042cb:	test   eax,eax
  4042cd:	mov    r15d,eax
  4042d0:	jns    0x4041dd
  4042d6:	call   QWORD PTR [rip+0xd200]        # 0x4114dc
  4042dc:	mov    rsi,QWORD PTR [rsp+0xf8]
  4042e4:	mov    eax,DWORD PTR [rax]
  4042e6:	mov    DWORD PTR [rsi],eax
  4042e8:	lea    rax,[rip+0x861b]        # 0x40c90a
  4042ef:	xor    esi,esi
  4042f1:	mov    QWORD PTR [rsp+0x68],rax
  4042f6:	jmp    0x403f79
  4042fb:	nop    DWORD PTR [rax+rax*1+0x0]
  404300:	mov    ebp,0x1
  404305:	jmp    0x403f26
  40430a:	nop    WORD PTR [rax+rax*1+0x0]
  404310:	call   QWORD PTR [rip+0xd1c6]        # 0x4114dc
  404316:	mov    rdi,QWORD PTR [rsp+0xf8]
  40431e:	mov    eax,DWORD PTR [rax]
  404320:	mov    DWORD PTR [rdi],eax
  404322:	lea    rax,[rip+0x850a]        # 0x40c833
  404329:	mov    QWORD PTR [rsp+0x68],rax
  40432e:	jmp    0x403ed0
  404333:	mov    rax,QWORD PTR [rsp+0xf8]
  40433b:	mov    QWORD PTR [rsp+0xe8],0x0
  404347:	mov    DWORD PTR [rax],0x0
  40434d:	lea    rax,[rip+0x8514]        # 0x40c868
  404354:	mov    QWORD PTR [rsp+0x68],rax
  404359:	test   edi,edi
  40435b:	je     0x403ed0
  404361:	mov    r15d,0xffffffff
  404367:	xor    esi,esi
  404369:	xor    r14d,r14d
  40436c:	mov    ebp,r15d
  40436f:	jmp    0x403f80
  404374:	call   QWORD PTR [rip+0xd162]        # 0x4114dc
  40437a:	mov    rsi,QWORD PTR [rsp+0xf8]
  404382:	mov    eax,DWORD PTR [rax]
  404384:	mov    DWORD PTR [rsi],eax
  404386:	lea    rax,[rip+0x84fb]        # 0x40c888
  40438d:	mov    QWORD PTR [rsp+0x68],rax
  404392:	jmp    0x404359
  404394:	test   BYTE PTR [rbx],0x4
  404397:	jne    0x4041bc
  40439d:	mov    eax,DWORD PTR [rbx+0x70]
  4043a0:	mov    rcx,QWORD PTR [rbx+0x78]
  4043a4:	add    eax,0x1
  4043a7:	mov    DWORD PTR [rbx+0x70],eax
  4043aa:	cdqe   
  4043ac:	lea    rdx,[rax*8+0x0]
  4043b4:	call   0x405830
  4043b9:	mov    rcx,QWORD PTR [rsp+0xe8]
  4043c1:	mov    QWORD PTR [rbx+0x78],rax
  4043c5:	call   0x405880
  4043ca:	jmp    0x4041af
  4043cf:	nop
  4043d0:	mov    eax,DWORD PTR [rbx+0x30]
  4043d3:	mov    rcx,QWORD PTR [rbx+0x38]
  4043d7:	add    eax,0x1
  4043da:	mov    DWORD PTR [rbx+0x30],eax
  4043dd:	cdqe   
  4043df:	lea    rdx,[rax*8+0x0]
  4043e7:	call   0x405830
  4043ec:	movsxd rdx,DWORD PTR [rbx+0x30]
  4043f0:	mov    QWORD PTR [rbx+0x38],rax
  4043f4:	mov    QWORD PTR [rax+rdx*8-0x8],rsi
  4043f9:	xor    eax,eax
  4043fb:	jmp    0x403ed5
  404400:	mov    rax,QWORD PTR [rbx+0x80]
  404407:	mov    r8d,esi
  40440a:	lea    rdx,[rsp+0x60]
  40440f:	shr    r8d,0x7
  404413:	mov    rcx,rbx
  404416:	and    r8d,0x1
  40441a:	call   QWORD PTR [rax+0x28]
  40441d:	test   eax,eax
  40441f:	js     0x404432
  404421:	mov    eax,DWORD PTR [rsp+0x60]
  404425:	mov    r15d,DWORD PTR [rsp+0x64]
  40442a:	mov    DWORD PTR [rbx+0x2c],eax
  40442d:	jmp    0x4041dd
  404432:	call   QWORD PTR [rip+0xd0a4]        # 0x4114dc
  404438:	mov    rsi,QWORD PTR [rsp+0xf8]
  404440:	mov    eax,DWORD PTR [rax]
  404442:	or     r15d,0xffffffff
  404446:	mov    DWORD PTR [rsi],eax
  404448:	lea    rax,[rip+0x8439]        # 0x40c888
  40444f:	xor    esi,esi
  404451:	mov    QWORD PTR [rsp+0x68],rax
  404456:	jmp    0x403f79
  40445b:	mov    r15,QWORD PTR [rsp+0xe8]
  404463:	jmp    0x404070
  404468:	nop    DWORD PTR [rax+rax*1+0x0]
  404470:	sub    rsp,0x48
  404474:	mov    rax,QWORD PTR [rsp+0x80]
  40447c:	mov    QWORD PTR [rsp+0x20],0x0
  404485:	mov    QWORD PTR [rsp+0x38],rax
  40448a:	mov    rax,QWORD PTR [rsp+0x78]
  40448f:	mov    QWORD PTR [rsp+0x30],rax
  404494:	mov    rax,QWORD PTR [rsp+0x70]
  404499:	mov    QWORD PTR [rsp+0x28],rax
  40449e:	call   0x403e70
  4044a3:	add    rsp,0x48
  4044a7:	ret    
  4044a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4044b0:	push   rbp
  4044b1:	push   rdi
  4044b2:	push   rsi
  4044b3:	push   rbx
  4044b4:	sub    rsp,0x28
  4044b8:	mov    esi,edx
  4044ba:	mov    edx,DWORD PTR [rcx+0x30]
  4044bd:	mov    rbx,rcx
  4044c0:	mov    rdi,r8
  4044c3:	test   edx,edx
  4044c5:	jne    0x4044d5
  4044c7:	mov    eax,DWORD PTR [rcx+0x18]
  4044ca:	test   eax,eax
  4044cc:	jg     0x4044d5
  4044ce:	cmp    QWORD PTR [rcx+0x20],0x0
  4044d3:	je     0x4044f0
  4044d5:	call   QWORD PTR [rip+0xd001]        # 0x4114dc
  4044db:	mov    DWORD PTR [rax],0x16
  4044e1:	xor    eax,eax
  4044e3:	add    rsp,0x28
  4044e7:	pop    rbx
  4044e8:	pop    rsi
  4044e9:	pop    rdi
  4044ea:	pop    rbp
  4044eb:	ret    
  4044ec:	nop    DWORD PTR [rax+0x0]
  4044f0:	lea    rcx,[rcx+0x10]
  4044f4:	mov    edx,esi
  4044f6:	call   0x403d00
  4044fb:	test   rax,rax
  4044fe:	mov    rbp,rax
  404501:	je     0x404547
  404503:	lea    rax,[rip+0x8410]        # 0x40c91a
  40450a:	lea    rdx,[rip+0x840c]        # 0x40c91d
  404511:	and    esi,0x20
  404514:	mov    rcx,rbp
  404517:	cmovne rdx,rax
  40451b:	call   0x407598
  404520:	test   rax,rax
  404523:	mov    rdx,rax
  404526:	je     0x40454b
  404528:	mov    QWORD PTR [rbx+0x58],rax
  40452c:	xor    eax,eax
  40452e:	cmp    rbp,rdi
  404531:	setne  al
  404534:	mov    QWORD PTR [rbx+0x20],rbp
  404538:	mov    DWORD PTR [rbx+0x28],eax
  40453b:	mov    rax,rdx
  40453e:	add    rsp,0x28
  404542:	pop    rbx
  404543:	pop    rsi
  404544:	pop    rdi
  404545:	pop    rbp
  404546:	ret    
  404547:	xor    eax,eax
  404549:	jmp    0x4044e3
  40454b:	mov    rcx,rbp
  40454e:	call   0x407578
  404553:	xor    eax,eax
  404555:	jmp    0x4044e3
  404557:	nop    WORD PTR [rax+rax*1+0x0]
  404560:	push   rdi
  404561:	push   rsi
  404562:	push   rbx
  404563:	sub    rsp,0x30
  404567:	mov    rbx,rcx
  40456a:	mov    ecx,DWORD PTR [rcx+0x30]
  40456d:	test   ecx,ecx
  40456f:	jg     0x404584
  404571:	test   BYTE PTR [rbx],0x2
  404574:	je     0x404584
  404576:	mov    eax,DWORD PTR [rbx+0x18]
  404579:	test   eax,eax
  40457b:	jg     0x404584
  40457d:	cmp    QWORD PTR [rbx+0x20],0x0
  404582:	je     0x4045a0
  404584:	call   QWORD PTR [rip+0xcf52]        # 0x4114dc
  40458a:	mov    DWORD PTR [rax],0x16
  404590:	xor    eax,eax
  404592:	add    rsp,0x30
  404596:	pop    rbx
  404597:	pop    rsi
  404598:	pop    rdi
  404599:	ret    
  40459a:	nop    WORD PTR [rax+rax*1+0x0]
  4045a0:	mov    rax,QWORD PTR [rbx+0x80]
  4045a7:	xor    esi,esi
  4045a9:	test   edx,edx
  4045ab:	setne  sil
  4045af:	lea    rdx,[rsp+0x20]
  4045b4:	mov    rcx,rbx
  4045b7:	mov    r8d,esi
  4045ba:	call   QWORD PTR [rax+0x28]
  4045bd:	test   eax,eax
  4045bf:	js     0x4045f0
  4045c1:	mov    rax,QWORD PTR [rbx+0x80]
  4045c8:	mov    r8d,esi
  4045cb:	mov    edx,DWORD PTR [rsp+0x24]
  4045cf:	mov    rcx,rbx
  4045d2:	call   QWORD PTR [rax+0x38]
  4045d5:	test   rax,rax
  4045d8:	je     0x4045f4
  4045da:	mov    edx,DWORD PTR [rsp+0x20]
  4045de:	mov    DWORD PTR [rbx+0x18],edx
  4045e1:	add    rsp,0x30
  4045e5:	pop    rbx
  4045e6:	pop    rsi
  4045e7:	pop    rdi
  4045e8:	ret    
  4045e9:	nop    DWORD PTR [rax+0x0]
  4045f0:	xor    eax,eax
  4045f2:	jmp    0x404592
  4045f4:	mov    rsi,QWORD PTR [rip+0xcee1]        # 0x4114dc
  4045fb:	call   rsi
  4045fd:	mov    edi,DWORD PTR [rax]
  4045ff:	mov    rax,QWORD PTR [rbx+0x80]
  404606:	mov    rcx,rbx
  404609:	mov    edx,DWORD PTR [rsp+0x20]
  40460d:	call   QWORD PTR [rax+0x18]
  404610:	mov    rax,QWORD PTR [rbx+0x80]
  404617:	mov    edx,DWORD PTR [rsp+0x24]
  40461b:	mov    rcx,rbx
  40461e:	call   QWORD PTR [rax+0x18]
  404621:	call   rsi
  404623:	mov    DWORD PTR [rax],edi
  404625:	xor    eax,eax
  404627:	jmp    0x404592
  40462c:	nop    DWORD PTR [rax+0x0]
  404630:	push   rsi
  404631:	push   rbx
  404632:	sub    rsp,0x38
  404636:	cmp    QWORD PTR [rcx+0x20],0x0
  40463b:	mov    rbx,rcx
  40463e:	mov    esi,edx
  404640:	je     0x404692
  404642:	lea    r9,[rsp+0x24]
  404647:	lea    r8,[rsp+0x28]
  40464c:	xor    edx,edx
  40464e:	call   0x403bf0
  404653:	test   eax,eax
  404655:	je     0x4046e0
  40465b:	lea    rax,[rip+0x82bd]        # 0x40c91f
  404662:	lea    rdx,[rip+0x82b9]        # 0x40c922
  404669:	mov    rcx,QWORD PTR [rbx+0x20]
  40466d:	test   esi,esi
  40466f:	cmovne rdx,rax
  404673:	call   0x407598
  404678:	mov    edx,DWORD PTR [rbx+0x28]
  40467b:	mov    QWORD PTR [rbx+0x60],rax
  40467f:	test   edx,edx
  404681:	jne    0x4046c0
  404683:	mov    QWORD PTR [rbx+0x20],0x0
  40468b:	add    rsp,0x38
  40468f:	pop    rbx
  404690:	pop    rsi
  404691:	ret    
  404692:	mov    edx,DWORD PTR [rcx+0x18]
  404695:	test   edx,edx
  404697:	jle    0x4046f0
  404699:	mov    rax,QWORD PTR [rcx+0x80]
  4046a0:	mov    r8d,esi
  4046a3:	call   QWORD PTR [rax+0x30]
  4046a6:	mov    QWORD PTR [rbx+0x60],rax
  4046aa:	mov    DWORD PTR [rbx+0x18],0xffffffff
  4046b1:	add    rsp,0x38
  4046b5:	pop    rbx
  4046b6:	pop    rsi
  4046b7:	ret    
  4046b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4046c0:	mov    rcx,QWORD PTR [rbx+0x20]
  4046c4:	call   0x407578
  4046c9:	mov    DWORD PTR [rbx+0x28],0x0
  4046d0:	mov    rax,QWORD PTR [rbx+0x60]
  4046d4:	jmp    0x404683
  4046d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4046e0:	call   QWORD PTR [rip+0xcdf6]        # 0x4114dc
  4046e6:	mov    edx,DWORD PTR [rsp+0x24]
  4046ea:	mov    DWORD PTR [rax],edx
  4046ec:	xor    eax,eax
  4046ee:	jmp    0x40468b
  4046f0:	xor    eax,eax
  4046f2:	jmp    0x40468b
  4046f4:	xchg   ax,ax
  4046f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404700:	push   rbx
  404701:	sub    rsp,0x20
  404705:	mov    r8d,edx
  404708:	mov    edx,DWORD PTR [rcx+0x2c]
  40470b:	test   edx,edx
  40470d:	jle    0x404730
  40470f:	mov    rax,QWORD PTR [rcx+0x80]
  404716:	mov    rbx,rcx
  404719:	call   QWORD PTR [rax+0x30]
  40471c:	mov    DWORD PTR [rbx+0x2c],0xffffffff
  404723:	mov    QWORD PTR [rbx+0x68],rax
  404727:	add    rsp,0x20
  40472b:	pop    rbx
  40472c:	ret    
  40472d:	nop    DWORD PTR [rax]
  404730:	xor    eax,eax
  404732:	jmp    0x404727
  404734:	xchg   ax,ax
  404736:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404740:	push   rdi
  404741:	push   rsi
  404742:	push   rbx
  404743:	sub    rsp,0x30
  404747:	cmp    QWORD PTR [rcx+0x40],0x0
  40474c:	mov    rsi,rcx
  40474f:	mov    ebx,edx
  404751:	mov    rdi,r8
  404754:	je     0x4047a0
  404756:	movsxd rax,DWORD PTR [rsi+0x30]
  40475a:	cmp    eax,ebx
  40475c:	jl     0x404780
  40475e:	mov    rdx,QWORD PTR [rsi+0x40]
  404762:	movsxd r8,ebx
  404765:	mov    rcx,rdi
  404768:	shl    r8,0x2
  40476c:	call   0x407548
  404771:	mov    eax,0x1
  404776:	add    rsp,0x30
  40477a:	pop    rbx
  40477b:	pop    rsi
  40477c:	pop    rdi
  40477d:	ret    
  40477e:	xchg   ax,ax
  404780:	sub    ebx,eax
  404782:	lea    rcx,[rdi+rax*4]
  404786:	xor    edx,edx
  404788:	movsxd r8,ebx
  40478b:	shl    r8,0x2
  40478f:	call   0x407538
  404794:	mov    ebx,DWORD PTR [rsi+0x30]
  404797:	jmp    0x40475e
  404799:	nop    DWORD PTR [rax+0x0]
  4047a0:	lea    r9,[rsp+0x24]
  4047a5:	lea    r8,[rsp+0x28]
  4047aa:	xor    edx,edx
  4047ac:	call   0x403bf0
  4047b1:	test   eax,eax
  4047b3:	jne    0x404756
  4047b5:	jmp    0x404776
  4047b7:	nop    WORD PTR [rax+rax*1+0x0]
  4047c0:	push   rdi
  4047c1:	push   rsi
  4047c2:	push   rbx
  4047c3:	sub    rsp,0x30
  4047c7:	cmp    QWORD PTR [rcx+0x40],0x0
  4047cc:	mov    rsi,rcx
  4047cf:	mov    ebx,edx
  4047d1:	mov    rdi,r8
  4047d4:	je     0x404830
  4047d6:	mov    rdx,QWORD PTR [rsi+0x48]
  4047da:	test   rdx,rdx
  4047dd:	je     0x404824
  4047df:	movsxd rax,DWORD PTR [rsi+0x30]
  4047e3:	cmp    eax,ebx
  4047e5:	jl     0x404803
  4047e7:	movsxd r8,ebx
  4047ea:	mov    rcx,rdi
  4047ed:	shl    r8,0x4
  4047f1:	call   0x407548
  4047f6:	mov    eax,0x1
  4047fb:	add    rsp,0x30
  4047ff:	pop    rbx
  404800:	pop    rsi
  404801:	pop    rdi
  404802:	ret    
  404803:	sub    ebx,eax
  404805:	shl    rax,0x4
  404809:	xor    edx,edx
  40480b:	movsxd r8,ebx
  40480e:	lea    rcx,[rdi+rax*1]
  404812:	shl    r8,0x4
  404816:	call   0x407538
  40481b:	mov    ebx,DWORD PTR [rsi+0x30]
  40481e:	mov    rdx,QWORD PTR [rsi+0x48]
  404822:	jmp    0x4047e7
  404824:	xor    eax,eax
  404826:	jmp    0x4047fb
  404828:	nop    DWORD PTR [rax+rax*1+0x0]
  404830:	lea    r9,[rsp+0x24]
  404835:	lea    r8,[rsp+0x28]
  40483a:	xor    edx,edx
  40483c:	call   0x403bf0
  404841:	test   eax,eax
  404843:	jne    0x4047d6
  404845:	jmp    0x4047fb
  404847:	nop    WORD PTR [rax+rax*1+0x0]
  404850:	push   rdi
  404851:	push   rsi
  404852:	push   rbx
  404853:	sub    rsp,0x30
  404857:	mov    edx,DWORD PTR [rcx+0x18]
  40485a:	mov    rbx,rcx
  40485d:	test   edx,edx
  40485f:	jle    0x40486b
  404861:	mov    rax,QWORD PTR [rcx+0x80]
  404868:	call   QWORD PTR [rax+0x18]
  40486b:	mov    edx,DWORD PTR [rbx+0x2c]
  40486e:	test   edx,edx
  404870:	jle    0x40487f
  404872:	mov    rax,QWORD PTR [rbx+0x80]
  404879:	mov    rcx,rbx
  40487c:	call   QWORD PTR [rax+0x18]
  40487f:	mov    rcx,QWORD PTR [rbx+0x60]
  404883:	test   rcx,rcx
  404886:	je     0x40488d
  404888:	call   0x4075a8
  40488d:	mov    rcx,QWORD PTR [rbx+0x68]
  404891:	test   rcx,rcx
  404894:	je     0x40489b
  404896:	call   0x4075a8
  40489b:	cmp    QWORD PTR [rbx+0x40],0x0
  4048a0:	je     0x404941
  4048a6:	mov    edx,DWORD PTR [rbx+0x28]
  4048a9:	test   edx,edx
  4048ab:	jne    0x404933
  4048b1:	mov    rcx,QWORD PTR [rbx+0x38]
  4048b5:	xor    esi,esi
  4048b7:	xor    edi,edi
  4048b9:	call   0x407578
  4048be:	mov    rcx,QWORD PTR [rbx+0x40]
  4048c2:	call   0x407578
  4048c7:	mov    rcx,QWORD PTR [rbx+0x48]
  4048cb:	call   0x407578
  4048d0:	mov    eax,DWORD PTR [rbx+0x70]
  4048d3:	test   eax,eax
  4048d5:	jle    0x40490f
  4048d7:	nop    WORD PTR [rax+rax*1+0x0]
  4048e0:	mov    rax,QWORD PTR [rbx+0x78]
  4048e4:	add    edi,0x1
  4048e7:	mov    rcx,QWORD PTR [rax+rsi*1]
  4048eb:	call   0x407510
  4048f0:	mov    rax,QWORD PTR [rbx+0x78]
  4048f4:	mov    rcx,QWORD PTR [rax+rsi*1]
  4048f8:	add    rsi,0x8
  4048fc:	call   0x407578
  404901:	cmp    DWORD PTR [rbx+0x70],edi
  404904:	jg     0x4048e0
  404906:	mov    rcx,QWORD PTR [rbx+0x78]
  40490a:	call   0x407578
  40490f:	mov    rax,QWORD PTR [rbx+0x80]
  404916:	mov    rax,QWORD PTR [rax+0x40]
  40491a:	test   rax,rax
  40491d:	je     0x404924
  40491f:	mov    rcx,rbx
  404922:	call   rax
  404924:	mov    rcx,rbx
  404927:	add    rsp,0x30
  40492b:	pop    rbx
  40492c:	pop    rsi
  40492d:	pop    rdi
  40492e:	jmp    0x407578
  404933:	mov    rcx,QWORD PTR [rbx+0x20]
  404937:	call   0x407578
  40493c:	jmp    0x4048b1
  404941:	and    DWORD PTR [rbx],0xfffffffe
  404944:	lea    r9,[rsp+0x24]
  404949:	lea    r8,[rsp+0x28]
  40494e:	mov    edx,0x1
  404953:	mov    rcx,rbx
  404956:	call   0x403bf0
  40495b:	jmp    0x4048a6
  404960:	push   rsi
  404961:	push   rbx
  404962:	sub    rsp,0x28
  404966:	mov    ebx,edx
  404968:	mov    esi,r8d
  40496b:	mov    ecx,edx
  40496d:	call   QWORD PTR [rip+0xcb79]        # 0x4114ec
  404973:	cmp    rax,0xffffffffffffffff
  404977:	je     0x4049b0
  404979:	xor    r8d,r8d
  40497c:	mov    edx,0x1
  404981:	mov    rcx,rax
  404984:	call   QWORD PTR [rip+0xca9a]        # 0x411424
  40498a:	test   eax,eax
  40498c:	je     0x4049b0
  40498e:	lea    rax,[rip+0x7fab]        # 0x40c940
  404995:	lea    rdx,[rip+0x7fa7]        # 0x40c943
  40499c:	test   esi,esi
  40499e:	mov    ecx,ebx
  4049a0:	cmovne rdx,rax
  4049a4:	add    rsp,0x28
  4049a8:	pop    rbx
  4049a9:	pop    rsi
  4049aa:	jmp    0x407468
  4049af:	nop
  4049b0:	xor    eax,eax
  4049b2:	add    rsp,0x28
  4049b6:	pop    rbx
  4049b7:	pop    rsi
  4049b8:	ret    
  4049b9:	nop    DWORD PTR [rax+0x0]
  4049c0:	push   rsi
  4049c1:	push   rbx
  4049c2:	sub    rsp,0x28
  4049c6:	mov    ebx,edx
  4049c8:	mov    esi,r8d
  4049cb:	mov    ecx,edx
  4049cd:	call   QWORD PTR [rip+0xcb19]        # 0x4114ec
  4049d3:	cmp    rax,0xffffffffffffffff
  4049d7:	je     0x404a10
  4049d9:	xor    r8d,r8d
  4049dc:	mov    edx,0x1
  4049e1:	mov    rcx,rax
  4049e4:	call   QWORD PTR [rip+0xca3a]        # 0x411424
  4049ea:	test   eax,eax
  4049ec:	je     0x404a10
  4049ee:	lea    rax,[rip+0x7f50]        # 0x40c945
  4049f5:	lea    rdx,[rip+0x7f4c]        # 0x40c948
  4049fc:	test   esi,esi
  4049fe:	mov    ecx,ebx
  404a00:	cmovne rdx,rax
  404a04:	add    rsp,0x28
  404a08:	pop    rbx
  404a09:	pop    rsi
  404a0a:	jmp    0x407468
  404a0f:	nop
  404a10:	xor    eax,eax
  404a12:	add    rsp,0x28
  404a16:	pop    rbx
  404a17:	pop    rsi
  404a18:	ret    
  404a19:	nop    DWORD PTR [rax+0x0]
  404a20:	mov    rax,QWORD PTR [rip+0xcaed]        # 0x411514
  404a27:	cmp    r8d,0x1
  404a2b:	mov    rcx,rdx
  404a2e:	mov    edx,0x100
  404a33:	sbb    r8d,r8d
  404a36:	and    r8d,0xffffc000
  404a3d:	add    r8d,0x8080
  404a44:	rex.W jmp rax
  404a47:	nop    WORD PTR [rax+rax*1+0x0]
  404a50:	push   rsi
  404a51:	push   rbx
  404a52:	sub    rsp,0x38
  404a56:	test   r9,r9
  404a59:	mov    rbx,rdx
  404a5c:	mov    rsi,r8
  404a5f:	je     0x404a70
  404a61:	mov    QWORD PTR [r9],0x0
  404a68:	mov    QWORD PTR [r9+0x8],0x0
  404a70:	mov    edx,0xffffffff
  404a75:	mov    rcx,rbx
  404a78:	call   QWORD PTR [rip+0xc9e6]        # 0x411464
  404a7e:	test   eax,eax
  404a80:	jne    0x404ac4
  404a82:	lea    rdx,[rsp+0x2c]
  404a87:	mov    rcx,rbx
  404a8a:	call   QWORD PTR [rip+0xc91c]        # 0x4113ac
  404a90:	mov    rcx,rbx
  404a93:	call   QWORD PTR [rip+0xc8d3]        # 0x41136c
  404a99:	mov    eax,DWORD PTR [rsp+0x2c]
  404a9d:	cmp    eax,0x3
  404aa0:	je     0x404ab5
  404aa2:	shl    eax,0x8
  404aa5:	and    eax,0xffff
  404aaa:	mov    DWORD PTR [rsi],eax
  404aac:	xor    eax,eax
  404aae:	add    rsp,0x38
  404ab2:	pop    rbx
  404ab3:	pop    rsi
  404ab4:	ret    
  404ab5:	xor    eax,eax
  404ab7:	mov    DWORD PTR [rsi],0x16
  404abd:	add    rsp,0x38
  404ac1:	pop    rbx
  404ac2:	pop    rsi
  404ac3:	ret    
  404ac4:	mov    rcx,rbx
  404ac7:	lea    rsi,[rip+0x7e7c]        # 0x40c94a
  404ace:	call   QWORD PTR [rip+0xc898]        # 0x41136c
  404ad4:	mov    rax,QWORD PTR [rsp+0x80]
  404adc:	mov    DWORD PTR [rax],0xa
  404ae2:	mov    rax,QWORD PTR [rsp+0x78]
  404ae7:	mov    QWORD PTR [rax],rsi
  404aea:	mov    rax,0xffffffffffffffff
  404af1:	jmp    0x404aae
  404af3:	nop    DWORD PTR [rax]
  404af6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404b00:	mov    rax,QWORD PTR [rip+0xc9c5]        # 0x4114cc
  404b07:	mov    ecx,edx
  404b09:	rex.W jmp rax
  404b0c:	nop    DWORD PTR [rax+0x0]
  404b10:	push   r12
  404b12:	push   rbp
  404b13:	push   rdi
  404b14:	push   rsi
  404b15:	push   rbx
  404b16:	sub    rsp,0x20
  404b1a:	mov    rbp,QWORD PTR [rip+0xcb2b]        # 0x41164c
  404b21:	mov    rdi,QWORD PTR [rcx]
  404b24:	mov    rsi,QWORD PTR [rdx]
  404b27:	nop    WORD PTR [rax+rax*1+0x0]
  404b30:	add    rdi,0x1
  404b34:	movsx  ecx,BYTE PTR [rdi-0x1]
  404b38:	add    rsi,0x1
  404b3c:	call   rbp
  404b3e:	movsx  ecx,BYTE PTR [rsi-0x1]
  404b42:	mov    ebx,eax
  404b44:	mov    r12d,eax
  404b47:	call   rbp
  404b49:	cmp    bl,0x3d
  404b4c:	movzx  edx,al
  404b4f:	je     0x404b65
  404b51:	cmp    al,0x3d
  404b53:	je     0x404b81
  404b55:	cmp    bl,al
  404b57:	sete   cl
  404b5a:	test   bl,bl
  404b5c:	setne  al
  404b5f:	test   cl,al
  404b61:	jne    0x404b30
  404b63:	jmp    0x404b6c
  404b65:	xor    r12d,r12d
  404b68:	cmp    al,0x3d
  404b6a:	je     0x404b73
  404b6c:	movzx  r12d,r12b
  404b70:	sub    r12d,edx
  404b73:	mov    eax,r12d
  404b76:	add    rsp,0x20
  404b7a:	pop    rbx
  404b7b:	pop    rsi
  404b7c:	pop    rdi
  404b7d:	pop    rbp
  404b7e:	pop    r12
  404b80:	ret    
  404b81:	xor    edx,edx
  404b83:	jmp    0x404b6c
  404b85:	nop
  404b86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404b90:	push   rbp
  404b91:	push   r15
  404b93:	push   r14
  404b95:	push   r13
  404b97:	push   r12
  404b99:	push   rdi
  404b9a:	push   rsi
  404b9b:	push   rbx
  404b9c:	sub    rsp,0x68
  404ba0:	lea    rbp,[rsp+0x80]
  404ba8:	test   r9,r9
  404bab:	mov    r12,rcx
  404bae:	mov    DWORD PTR [rbp+0x38],edx
  404bb1:	mov    rsi,r8
  404bb4:	mov    r15,r9
  404bb7:	je     0x40518c
  404bbd:	cmp    QWORD PTR [r9],0x0
  404bc1:	je     0x40518c
  404bc7:	mov    edi,0x1
  404bcc:	jmp    0x404bd3
  404bce:	xchg   ax,ax
  404bd0:	mov    rdi,rax
  404bd3:	lea    rax,[rdi+0x1]
  404bd7:	lea    r8,[rdi*8+0x0]
  404bdf:	cmp    QWORD PTR [r15+rax*8-0x8],0x0
  404be5:	jne    0x404bd0
  404be7:	lea    rax,[r8+0x1e]
  404beb:	and    rax,0xfffffffffffffff0
  404bef:	call   0x4072e0
  404bf4:	mov    r13d,0x1
  404bfa:	sub    rsp,rax
  404bfd:	mov    rdx,r15
  404c00:	lea    rbx,[rsp+0x50]
  404c05:	mov    rcx,rbx
  404c08:	call   0x407548
  404c0d:	lea    r9,[rip+0xfffffffffffffefc]        # 0x404b10
  404c14:	mov    rdx,rdi
  404c17:	mov    r8d,0x8
  404c1d:	mov    rcx,rbx
  404c20:	call   0x407520
  404c25:	lea    eax,[rdi-0x1]
  404c28:	lea    r14,[rax*8+0x8]
  404c30:	lea    rdi,[r15+r14*1]
  404c34:	mov    rcx,QWORD PTR [r15]
  404c37:	add    r15,0x8
  404c3b:	call   0x4074c8
  404c40:	cmp    r15,rdi
  404c43:	lea    r13d,[r13+rax*1+0x1]
  404c48:	jne    0x404c34
  404c4a:	movsxd rcx,r13d
  404c4d:	add    r14,rbx
  404c50:	call   0x4057b0
  404c55:	mov    QWORD PTR [rbp-0x28],rax
  404c59:	mov    rcx,rax
  404c5c:	nop    DWORD PTR [rax+0x0]
  404c60:	mov    rdx,QWORD PTR [rbx]
  404c63:	add    rbx,0x8
  404c67:	call   0x405ac0
  404c6c:	cmp    rbx,r14
  404c6f:	lea    rcx,[rax+0x1]
  404c73:	jne    0x404c60
  404c75:	mov    BYTE PTR [rcx],0x0
  404c78:	mov    rcx,r12
  404c7b:	call   0x4074c8
  404c80:	mov    edx,0x2f
  404c85:	mov    rcx,r12
  404c88:	mov    rbx,rax
  404c8b:	call   0x4074e8
  404c90:	test   rax,rax
  404c93:	je     0x405199
  404c99:	lea    r13,[rip+0x7cbe]        # 0x40c95e
  404ca0:	mov    rax,r13
  404ca3:	xor    r9d,r9d
  404ca6:	movzx  edx,BYTE PTR [rax]
  404ca9:	test   dl,dl
  404cab:	je     0x404cf1
  404cad:	nop    DWORD PTR [rax]
  404cb0:	cmp    dl,0x3b
  404cb3:	mov    r8,rax
  404cb6:	jne    0x404cc5
  404cb8:	jmp    0x404eb9
  404cbd:	nop    DWORD PTR [rax]
  404cc0:	cmp    cl,0x3b
  404cc3:	je     0x404cd1
  404cc5:	add    r8,0x1
  404cc9:	movzx  ecx,BYTE PTR [r8]
  404ccd:	test   cl,cl
  404ccf:	jne    0x404cc0
  404cd1:	mov    rdi,r8
  404cd4:	sub    rdi,rax
  404cd7:	cmp    r9,rdi
  404cda:	cmovb  r9,rdi
  404cde:	cmp    cl,0x3b
  404ce1:	je     0x404ebc
  404ce7:	mov    rax,r8
  404cea:	movzx  edx,BYTE PTR [rax]
  404ced:	test   dl,dl
  404cef:	jne    0x404cb0
  404cf1:	lea    rcx,[r9+rbx*1+0x6]
  404cf6:	call   0x4057b0
  404cfb:	mov    rbx,rax
  404cfe:	movzx  eax,BYTE PTR [r13+0x0]
  404d03:	mov    r14,QWORD PTR [rip+0xc66a]        # 0x411374
  404d0a:	test   al,al
  404d0c:	je     0x40516d
  404d12:	cmp    al,0x3b
  404d14:	mov    r15,r13
  404d17:	jne    0x404d24
  404d19:	jmp    0x40516d
  404d1e:	xchg   ax,ax
  404d20:	cmp    al,0x3b
  404d22:	je     0x404d30
  404d24:	add    r15,0x1
  404d28:	movzx  eax,BYTE PTR [r15]
  404d2c:	test   al,al
  404d2e:	jne    0x404d20
  404d30:	mov    rdi,r15
  404d33:	mov    rcx,rbx
  404d36:	mov    rdx,r13
  404d39:	sub    rdi,r13
  404d3c:	mov    r8,rdi
  404d3f:	call   0x407548
  404d44:	lea    r9,[rbx+rdi*1]
  404d48:	cmp    r15,r13
  404d4b:	mov    rcx,r9
  404d4e:	je     0x404d58
  404d50:	add    rcx,0x1
  404d54:	mov    BYTE PTR [r9],0x5c
  404d58:	mov    rdx,r12
  404d5b:	mov    r13,rbx
  404d5e:	call   0x4074d8
  404d63:	xor    eax,eax
  404d65:	cmp    BYTE PTR [r15],0x3b
  404d69:	sete   al
  404d6c:	add    r15,rax
  404d6f:	movzx  eax,BYTE PTR [rbx]
  404d72:	test   al,al
  404d74:	jne    0x404d8d
  404d76:	jmp    0x404da3
  404d78:	nop    DWORD PTR [rax+rax*1+0x0]
  404d80:	add    r13,0x1
  404d84:	movzx  eax,BYTE PTR [r13+0x0]
  404d89:	test   al,al
  404d8b:	je     0x404da3
  404d8d:	cmp    al,0x2f
  404d8f:	jne    0x404d80
  404d91:	mov    BYTE PTR [r13+0x0],0x5c
  404d96:	add    r13,0x1
  404d9a:	movzx  eax,BYTE PTR [r13+0x0]
  404d9f:	test   al,al
  404da1:	jne    0x404d8d
  404da3:	lea    rdi,[rip+0x7bf6]        # 0x40c9a0
  404daa:	lea    rdx,[rip+0x7bae]        # 0x40c95f
  404db1:	jmp    0x404dc3
  404db3:	add    rdi,0x8
  404db7:	mov    rdx,QWORD PTR [rdi]
  404dba:	test   rdx,rdx
  404dbd:	je     0x405154
  404dc3:	mov    rcx,rbx
  404dc6:	mov    BYTE PTR [r13+0x0],0x0
  404dcb:	call   0x4074f0
  404dd0:	xor    r9d,r9d
  404dd3:	mov    QWORD PTR [rsp+0x30],0x0
  404ddc:	mov    DWORD PTR [rsp+0x28],0x80
  404de4:	mov    DWORD PTR [rsp+0x20],0x3
  404dec:	mov    r8d,0x3
  404df2:	mov    edx,0x80000000
  404df7:	mov    rcx,rbx
  404dfa:	call   r14
  404dfd:	cmp    rax,0xffffffffffffffff
  404e01:	je     0x404db3
  404e03:	mov    rcx,rax
  404e06:	mov    r12,QWORD PTR [rip+0xc55f]        # 0x41136c
  404e0d:	call   r12
  404e10:	mov    r13,QWORD PTR [rsi]
  404e13:	test   r13,r13
  404e16:	je     0x4051e0
  404e1c:	lea    r15,[rsi+0x8]
  404e20:	xor    r9d,r9d
  404e23:	movzx  edx,BYTE PTR [r13+0x0]
  404e28:	test   dl,dl
  404e2a:	je     0x405178
  404e30:	lea    rax,[r13-0x1]
  404e34:	mov    r10d,0xffffffff
  404e3a:	xor    r8d,r8d
  404e3d:	xor    r14d,r14d
  404e40:	jmp    0x404e5d
  404e42:	movzx  edx,BYTE PTR [rax+0x2]
  404e46:	lea    rcx,[r8+0x1]
  404e4a:	add    r10d,0x1
  404e4e:	add    rax,0x1
  404e52:	mov    r8,rcx
  404e55:	test   dl,dl
  404e57:	je     0x404ee0
  404e5d:	mov    ecx,edx
  404e5f:	mov    r11d,r8d
  404e62:	and    ecx,0xfffffffd
  404e65:	cmp    cl,0x20
  404e68:	je     0x404ec5
  404e6a:	cmp    dl,0x9
  404e6d:	je     0x404ec5
  404e6f:	cmp    dl,0x22
  404e72:	jne    0x404e42
  404e74:	cmp    r10d,0xffffffff
  404e78:	je     0x405148
  404e7e:	cmp    BYTE PTR [rax],0x5c
  404e81:	jne    0x405148
  404e87:	lea    rdx,[r9+0x1]
  404e8b:	mov    r9d,r10d
  404e8e:	lea    rcx,[rdx+r9*1]
  404e92:	mov    r9,rax
  404e95:	jmp    0x404eae
  404e97:	nop    WORD PTR [rax+rax*1+0x0]
  404ea0:	sub    r9,0x1
  404ea4:	cmp    BYTE PTR [r9],0x5c
  404ea8:	jne    0x404ed0
  404eaa:	add    rdx,0x1
  404eae:	cmp    rdx,rcx
  404eb1:	jne    0x404ea0
  404eb3:	lea    r9,[rcx+0x1]
  404eb7:	jmp    0x404e42
  404eb9:	mov    r8,rax
  404ebc:	add    r8,0x1
  404ec0:	jmp    0x404ce7
  404ec5:	mov    r14d,0x1
  404ecb:	jmp    0x404e6f
  404ecd:	nop    DWORD PTR [rax]
  404ed0:	mov    rcx,rdx
  404ed3:	lea    r9,[rcx+0x1]
  404ed7:	jmp    0x404e42
  404edc:	nop    DWORD PTR [rax+0x0]
  404ee0:	test   r14d,r14d
  404ee3:	mov    eax,0x1
  404ee8:	je     0x404f1f
  404eea:	movsxd rax,r11d
  404eed:	cmp    BYTE PTR [r13+rax*1+0x0],0x5c
  404ef3:	jne    0x404f1a
  404ef5:	lea    rdx,[r9+0x1]
  404ef9:	lea    r8,[r13+rax*1-0x1]
  404efe:	add    rax,rdx
  404f01:	jmp    0x404f12
  404f03:	sub    r8,0x1
  404f07:	cmp    BYTE PTR [r8+0x1],0x5c
  404f0c:	jne    0x404f1a
  404f0e:	add    rdx,0x1
  404f12:	cmp    rdx,rax
  404f15:	mov    r9,rdx
  404f18:	jne    0x404f03
  404f1a:	mov    eax,0x3
  404f1f:	add    r15,0x8
  404f23:	mov    r13,QWORD PTR [r15-0x8]
  404f27:	add    r9,rcx
  404f2a:	add    r9,rax
  404f2d:	test   r13,r13
  404f30:	jne    0x404e23
  404f36:	mov    rcx,r9
  404f39:	call   0x4057b0
  404f3e:	mov    r13,QWORD PTR [rsi]
  404f41:	test   r13,r13
  404f44:	je     0x4051f7
  404f4a:	add    rsi,0x8
  404f4e:	mov    r10,rax
  404f51:	movzx  edx,BYTE PTR [r13+0x0]
  404f56:	test   dl,dl
  404f58:	je     0x405184
  404f5e:	mov    ecx,edx
  404f60:	and    ecx,0xfffffffd
  404f63:	cmp    cl,0x20
  404f66:	je     0x405122
  404f6c:	cmp    dl,0x9
  404f6f:	je     0x405122
  404f75:	lea    r8,[r13+0x1]
  404f79:	jmp    0x404f9e
  404f7b:	nop    DWORD PTR [rax+rax*1+0x0]
  404f80:	mov    r9d,ecx
  404f83:	add    r8,0x1
  404f87:	and    r9d,0xfffffffd
  404f8b:	cmp    r9b,0x20
  404f8f:	je     0x405122
  404f95:	cmp    cl,0x9
  404f98:	je     0x405122
  404f9e:	movzx  ecx,BYTE PTR [r8]
  404fa2:	test   cl,cl
  404fa4:	jne    0x404f80
  404fa6:	mov    rcx,r10
  404fa9:	xor    r14d,r14d
  404fac:	lea    r9,[r13-0x1]
  404fb0:	mov    r11d,0xffffffff
  404fb6:	jmp    0x404fe1
  404fb8:	nop    DWORD PTR [rax+rax*1+0x0]
  404fc0:	movzx  edx,BYTE PTR [r9+0x1]
  404fc5:	lea    rcx,[r8+0x1]
  404fc9:	add    r9,0x1
  404fcd:	mov    BYTE PTR [r8],dl
  404fd0:	movzx  edx,BYTE PTR [r9+0x1]
  404fd5:	lea    r8d,[r11+0x2]
  404fd9:	add    r11d,0x1
  404fdd:	test   dl,dl
  404fdf:	je     0x405030
  404fe1:	cmp    dl,0x22
  404fe4:	mov    r8,rcx
  404fe7:	jne    0x404fc0
  404fe9:	cmp    r11d,0xffffffff
  404fed:	je     0x405023
  404fef:	cmp    BYTE PTR [r9],0x5c
  404ff3:	jne    0x405023
  404ff5:	mov    edx,r11d
  404ff8:	mov    r8,r9
  404ffb:	lea    r10,[rcx+rdx*1+0x1]
  405000:	jmp    0x40500c
  405002:	sub    r8,0x1
  405006:	cmp    BYTE PTR [r8],0x5c
  40500a:	jne    0x405023
  40500c:	add    rcx,0x1
  405010:	mov    BYTE PTR [rcx-0x1],0x5c
  405014:	cmp    rcx,r10
  405017:	jne    0x405002
  405019:	lea    r8,[r10+0x1]
  40501d:	mov    BYTE PTR [r10],0x5c
  405021:	jmp    0x404fc0
  405023:	mov    r10,rcx
  405026:	lea    r8,[r10+0x1]
  40502a:	mov    BYTE PTR [r10],0x5c
  40502e:	jmp    0x404fc0
  405030:	test   r14d,r14d
  405033:	je     0x405084
  405035:	sub    r8d,0x1
  405039:	cmp    r8d,0xffffffff
  40503d:	je     0x405140
  405043:	movsxd rdx,r8d
  405046:	cmp    BYTE PTR [r13+rdx*1+0x0],0x5c
  40504c:	jne    0x405140
  405052:	mov    r8d,r8d
  405055:	lea    rdx,[r13+rdx*1-0x1]
  40505a:	lea    r8,[rcx+r8*1+0x1]
  40505f:	jmp    0x40506f
  405061:	sub    rdx,0x1
  405065:	cmp    BYTE PTR [rdx+0x1],0x5c
  405069:	jne    0x405140
  40506f:	add    rcx,0x1
  405073:	mov    BYTE PTR [rcx-0x1],0x5c
  405077:	cmp    rcx,r8
  40507a:	jne    0x405061
  40507c:	lea    rcx,[r8+0x1]
  405080:	mov    BYTE PTR [r8],0x22
  405084:	add    rsi,0x8
  405088:	mov    r13,QWORD PTR [rsi-0x8]
  40508c:	lea    r10,[rcx+0x1]
  405090:	mov    BYTE PTR [rcx],0x20
  405093:	test   r13,r13
  405096:	jne    0x404f51
  40509c:	mov    rsi,QWORD PTR [rbp+0x60]
  4050a0:	mov    rdx,QWORD PTR [rbp+0x58]
  4050a4:	xor    r9d,r9d
  4050a7:	mov    BYTE PTR [r10-0x1],0x0
  4050ac:	xor    r8d,r8d
  4050af:	mov    QWORD PTR [rsp+0x38],0x0
  4050b8:	mov    DWORD PTR [rsp+0x20],0x1
  4050c0:	mov    rcx,rbx
  4050c3:	mov    QWORD PTR [rsp+0x48],rsi
  4050c8:	mov    QWORD PTR [rsp+0x40],rdx
  4050cd:	mov    rsi,QWORD PTR [rbp-0x28]
  4050d1:	mov    edx,DWORD PTR [rbp+0x50]
  4050d4:	mov    QWORD PTR [rsp+0x30],rsi
  4050d9:	mov    DWORD PTR [rsp+0x28],edx
  4050dd:	mov    rdx,rax
  4050e0:	call   QWORD PTR [rip+0xc296]        # 0x41137c
  4050e6:	test   eax,eax
  4050e8:	je     0x40521d
  4050ee:	mov    rax,QWORD PTR [rbp+0x60]
  4050f2:	mov    rcx,QWORD PTR [rax+0x8]
  4050f6:	call   r12
  4050f9:	mov    rcx,rbx
  4050fc:	call   0x407578
  405101:	mov    rcx,QWORD PTR [rbp-0x28]
  405105:	call   0x407578
  40510a:	mov    rax,QWORD PTR [rbp+0x60]
  40510e:	mov    rax,QWORD PTR [rax]
  405111:	lea    rsp,[rbp-0x18]
  405115:	pop    rbx
  405116:	pop    rsi
  405117:	pop    rdi
  405118:	pop    r12
  40511a:	pop    r13
  40511c:	pop    r14
  40511e:	pop    r15
  405120:	pop    rbp
  405121:	ret    
  405122:	mov    BYTE PTR [r10],0x22
  405126:	movzx  edx,BYTE PTR [r13+0x0]
  40512b:	lea    rcx,[r10+0x1]
  40512f:	mov    r14d,0x1
  405135:	test   dl,dl
  405137:	jne    0x404fac
  40513d:	nop    DWORD PTR [rax]
  405140:	mov    r8,rcx
  405143:	jmp    0x40507c
  405148:	mov    rcx,r9
  40514b:	lea    r9,[rcx+0x1]
  40514f:	jmp    0x404e42
  405154:	movzx  edx,BYTE PTR [r15]
  405158:	test   dl,dl
  40515a:	je     0x4051ff
  405160:	mov    eax,edx
  405162:	mov    r13,r15
  405165:	test   al,al
  405167:	jne    0x404d12
  40516d:	mov    r15,r13
  405170:	mov    rcx,rbx
  405173:	jmp    0x404d58
  405178:	mov    eax,0x1
  40517d:	xor    ecx,ecx
  40517f:	jmp    0x404f1f
  405184:	mov    rcx,r10
  405187:	jmp    0x405084
  40518c:	mov    QWORD PTR [rbp-0x28],0x0
  405194:	jmp    0x404c78
  405199:	mov    edx,0x5c
  40519e:	mov    rcx,r12
  4051a1:	call   0x4074e8
  4051a6:	test   rax,rax
  4051a9:	jne    0x404c99
  4051af:	mov    eax,DWORD PTR [rbp+0x38]
  4051b2:	test   eax,eax
  4051b4:	je     0x404c99
  4051ba:	lea    rcx,[rip+0x77a3]        # 0x40c964
  4051c1:	call   0x407558
  4051c6:	test   rax,rax
  4051c9:	mov    r13,rax
  4051cc:	jne    0x404ca0
  4051d2:	jmp    0x404c99
  4051d7:	nop    WORD PTR [rax+rax*1+0x0]
  4051e0:	xor    r9d,r9d
  4051e3:	mov    rcx,r9
  4051e6:	call   0x4057b0
  4051eb:	mov    r13,QWORD PTR [rsi]
  4051ee:	test   r13,r13
  4051f1:	jne    0x404f4a
  4051f7:	mov    r10,rax
  4051fa:	jmp    0x40509c
  4051ff:	mov    rcx,rbx
  405202:	mov    QWORD PTR [rbp-0x30],rax
  405206:	call   0x407578
  40520b:	mov    rcx,QWORD PTR [rbp-0x28]
  40520f:	call   0x407578
  405214:	mov    rax,QWORD PTR [rbp-0x30]
  405218:	jmp    0x405111
  40521d:	mov    rcx,QWORD PTR [rbp-0x28]
  405221:	call   0x407578
  405226:	mov    rcx,rbx
  405229:	call   0x407578
  40522e:	mov    rax,0xffffffffffffffff
  405235:	jmp    0x405111
  40523a:	nop    WORD PTR [rax+rax*1+0x0]
  405240:	test   r9d,r9d
  405243:	mov    rcx,rdx
  405246:	jne    0x405270
  405248:	cmp    r8d,0x1
  40524c:	mov    rax,QWORD PTR [rip+0xc2b9]        # 0x41150c
  405253:	mov    r8d,0x180
  405259:	sbb    edx,edx
  40525b:	and    edx,0xffffc000
  405261:	add    edx,0x8301
  405267:	rex.W jmp rax
  40526a:	nop    WORD PTR [rax+rax*1+0x0]
  405270:	mov    eax,0xffffffff
  405275:	ret    
  405276:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405280:	mov    rax,QWORD PTR [rip+0xc285]        # 0x41150c
  405287:	cmp    r8d,0x1
  40528b:	mov    rcx,rdx
  40528e:	sbb    edx,edx
  405290:	and    edx,0xffffc000
  405296:	add    edx,0x8000
  40529c:	rex.W jmp rax
  40529f:	nop
  4052a0:	push   r15
  4052a2:	push   r14
  4052a4:	push   r13
  4052a6:	push   r12
  4052a8:	push   rbp
  4052a9:	push   rdi
  4052aa:	push   rsi
  4052ab:	push   rbx
  4052ac:	sub    rsp,0x2a8
  4052b3:	mov    rbp,QWORD PTR [rip+0xc21a]        # 0x4114d4
  4052ba:	mov    ecx,DWORD PTR [rsp+0x318]
  4052c1:	mov    ebx,edx
  4052c3:	mov    esi,edx
  4052c5:	mov    QWORD PTR [rsp+0x300],r8
  4052cd:	shr    ebx,0x3
  4052d0:	mov    QWORD PTR [rsp+0x308],r9
  4052d8:	xor    ebx,0x1
  4052db:	and    ebx,0x1
  4052de:	call   rbp
  4052e0:	mov    ecx,DWORD PTR [rsp+0x320]
  4052e7:	mov    DWORD PTR [rsp+0x40],eax
  4052eb:	call   rbp
  4052ed:	test   bl,bl
  4052ef:	mov    DWORD PTR [rsp+0x44],eax
  4052f3:	jne    0x405530
  4052f9:	mov    rbp,QWORD PTR [rip+0xc1ec]        # 0x4114ec
  405300:	mov    ecx,DWORD PTR [rsp+0x40]
  405304:	call   rbp
  405306:	mov    ecx,DWORD PTR [rsp+0x44]
  40530a:	mov    r15,rax
  40530d:	call   rbp
  40530f:	mov    rbp,rax
  405312:	mov    r14,rax
  405315:	mov    DWORD PTR [rsp+0xf0],0x94
  405320:	lea    rcx,[rsp+0xf0]
  405328:	xor    r12d,r12d
  40532b:	call   QWORD PTR [rip+0xc0b3]        # 0x4113e4
  405331:	cmp    DWORD PTR [rsp+0x100],0x1
  405339:	je     0x405387
  40533b:	xor    r9d,r9d
  40533e:	mov    QWORD PTR [rsp+0x30],0x0
  405347:	mov    DWORD PTR [rsp+0x28],0x80
  40534f:	mov    DWORD PTR [rsp+0x20],0x3
  405357:	mov    r8d,0x2
  40535d:	mov    edx,0x40000000
  405362:	lea    rcx,[rip+0x7600]        # 0x40c969
  405369:	mov    r12d,0x8000000
  40536f:	call   QWORD PTR [rip+0xbfff]        # 0x411374
  405375:	cmp    rax,0xffffffffffffffff
  405379:	je     0x405387
  40537b:	xor    r12d,r12d
  40537e:	mov    rcx,rax
  405381:	call   QWORD PTR [rip+0xbfe5]        # 0x41136c
  405387:	lea    r13,[rsp+0x80]
  40538f:	xor    eax,eax
  405391:	mov    ecx,0xd
  405396:	shr    esi,1
  405398:	mov    r9,QWORD PTR [rsp+0x310]
  4053a0:	mov    r8,QWORD PTR [rsp+0x308]
  4053a8:	mov    rdi,r13
  4053ab:	mov    edx,esi
  4053ad:	rep stos QWORD PTR es:[rdi],rax
  4053b0:	mov    QWORD PTR [rsp+0xd0],r15
  4053b8:	mov    rcx,QWORD PTR [rsp+0x300]
  4053c0:	lea    r15,[rsp+0x60]
  4053c5:	and    edx,0x1
  4053c8:	mov    QWORD PTR [rsp+0x28],r13
  4053cd:	mov    DWORD PTR [rsp+0x20],r12d
  4053d2:	mov    QWORD PTR [rsp+0x30],r15
  4053d7:	mov    QWORD PTR [rsp+0xd8],r14
  4053df:	mov    QWORD PTR [rsp+0xe0],rbp
  4053e7:	mov    DWORD PTR [rsp+0x80],0x68
  4053f2:	mov    DWORD PTR [rsp+0xbc],0x100
  4053fd:	call   0x404b90
  405402:	cmp    rax,0xffffffffffffffff
  405406:	mov    rbp,rax
  405409:	mov    r14,QWORD PTR [rip+0xc0bc]        # 0x4114cc
  405410:	je     0x405470
  405412:	mov    eax,DWORD PTR [rsp+0x318]
  405419:	test   eax,eax
  40541b:	jne    0x405572
  405421:	cmp    DWORD PTR [rsp+0x320],0x1
  405429:	je     0x405435
  40542b:	mov    ecx,DWORD PTR [rsp+0x320]
  405432:	call   r14
  405435:	cmp    DWORD PTR [rsp+0x50],0x2
  40543a:	je     0x405500
  405440:	test   bl,bl
  405442:	je     0x405500
  405448:	mov    ecx,DWORD PTR [rsp+0x50]
  40544c:	call   r14
  40544f:	mov    ecx,DWORD PTR [rsp+0x40]
  405453:	call   r14
  405456:	mov    ecx,DWORD PTR [rsp+0x44]
  40545a:	call   r14
  40545d:	mov    ecx,DWORD PTR [rsp+0x328]
  405464:	call   r14
  405467:	jmp    0x405516
  40546c:	nop    DWORD PTR [rax+0x0]
  405470:	mov    rax,QWORD PTR [rip+0xc065]        # 0x4114dc
  405477:	mov    QWORD PTR [rsp+0x58],rax
  40547c:	call   rax
  40547e:	mov    eax,DWORD PTR [rax]
  405480:	xor    edx,edx
  405482:	mov    rcx,QWORD PTR [rsp+0x300]
  40548a:	mov    DWORD PTR [rsp+0x54],eax
  40548e:	call   QWORD PTR [rip+0xc078]        # 0x41150c
  405494:	test   eax,eax
  405496:	mov    esi,eax
  405498:	js     0x4054c9
  40549a:	lea    rax,[rsp+0x190]
  4054a2:	mov    r8d,0x108
  4054a8:	mov    ecx,esi
  4054aa:	mov    rdx,rax
  4054ad:	mov    QWORD PTR [rsp+0x48],rax
  4054b2:	call   QWORD PTR [rip+0xc064]        # 0x41151c
  4054b8:	movsxd rdi,eax
  4054bb:	mov    ecx,esi
  4054bd:	call   r14
  4054c0:	cmp    edi,0x3
  4054c3:	jg     0x405581
  4054c9:	mov    rax,QWORD PTR [rsp+0x58]
  4054ce:	call   rax
  4054d0:	mov    edi,DWORD PTR [rsp+0x54]
  4054d4:	mov    DWORD PTR [rax],edi
  4054d6:	mov    rax,QWORD PTR [rsp+0x340]
  4054de:	lea    rdi,[rip+0x748f]        # 0x40c974
  4054e5:	mov    DWORD PTR [rax],0x2
  4054eb:	mov    rax,QWORD PTR [rsp+0x338]
  4054f3:	mov    QWORD PTR [rax],rdi
  4054f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405500:	mov    ecx,DWORD PTR [rsp+0x40]
  405504:	call   r14
  405507:	mov    ecx,DWORD PTR [rsp+0x44]
  40550b:	call   r14
  40550e:	test   bl,bl
  405510:	jne    0x40545d
  405516:	mov    rax,rbp
  405519:	add    rsp,0x2a8
  405520:	pop    rbx
  405521:	pop    rsi
  405522:	pop    rdi
  405523:	pop    rbp
  405524:	pop    r12
  405526:	pop    r13
  405528:	pop    r14
  40552a:	pop    r15
  40552c:	ret    
  40552d:	nop    DWORD PTR [rax]
  405530:	mov    ecx,DWORD PTR [rsp+0x328]
  405537:	call   rbp
  405539:	mov    edi,eax
  40553b:	mov    rbp,QWORD PTR [rip+0xbfaa]        # 0x4114ec
  405542:	mov    ecx,DWORD PTR [rsp+0x40]
  405546:	call   rbp
  405548:	mov    ecx,DWORD PTR [rsp+0x44]
  40554c:	mov    r15,rax
  40554f:	call   rbp
  405551:	mov    ecx,edi
  405553:	mov    r14,rax
  405556:	call   rbp
  405558:	mov    rbp,rax
  40555b:	mov    eax,DWORD PTR [rsp+0x328]
  405562:	mov    DWORD PTR [rsp+0x328],edi
  405569:	mov    DWORD PTR [rsp+0x50],eax
  40556d:	jmp    0x405315
  405572:	mov    ecx,DWORD PTR [rsp+0x318]
  405579:	call   r14
  40557c:	jmp    0x405421
  405581:	mov    rsi,QWORD PTR [rsp+0x48]
  405586:	mov    edx,0xa
  40558b:	mov    BYTE PTR [rsp+rdi*1+0x190],0x0
  405593:	mov    rcx,rsi
  405596:	call   0x4074e8
  40559b:	test   rax,rax
  40559e:	je     0x4054c9
  4055a4:	lea    rdi,[rip+0x73c6]        # 0x40c971
  4055ab:	mov    ecx,0x2
  4055b0:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4055b2:	jne    0x4054c9
  4055b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4055c0:	mov    BYTE PTR [rax],0x0
  4055c3:	sub    rax,0x1
  4055c7:	movzx  edx,BYTE PTR [rax]
  4055ca:	mov    ecx,edx
  4055cc:	and    ecx,0xfffffffb
  4055cf:	cmp    cl,0x9
  4055d2:	je     0x4055c0
  4055d4:	cmp    dl,0x20
  4055d7:	je     0x4055c0
  4055d9:	movzx  eax,BYTE PTR [rsp+0x192]
  4055e1:	cmp    al,0x9
  4055e3:	je     0x4056d3
  4055e9:	cmp    al,0x20
  4055eb:	mov    rdi,QWORD PTR [rsp+0x48]
  4055f0:	sete   al
  4055f3:	test   al,al
  4055f5:	lea    rsi,[rdi+0x2]
  4055f9:	jne    0x4056d3
  4055ff:	mov    rax,rsi
  405602:	jmp    0x405607
  405604:	mov    BYTE PTR [rax],0x5c
  405607:	mov    edx,0x2f
  40560c:	mov    rcx,rax
  40560f:	call   0x4074e8
  405614:	test   rax,rax
  405617:	jne    0x405604
  405619:	mov    rax,QWORD PTR [rsp+0x308]
  405621:	cmp    QWORD PTR [rax],0x0
  405625:	je     0x4056f1
  40562b:	nop    DWORD PTR [rax+rax*1+0x0]
  405630:	add    rax,0x8
  405634:	cmp    QWORD PTR [rax],0x0
  405638:	jne    0x405630
  40563a:	sub    rax,QWORD PTR [rsp+0x308]
  405642:	sar    rax,0x3
  405646:	lea    ecx,[rax+0x2]
  405649:	movsxd rcx,ecx
  40564c:	shl    rcx,0x3
  405650:	lea    r8,[rcx-0x8]
  405654:	mov    QWORD PTR [rsp+0x48],r8
  405659:	call   0x4057b0
  40565e:	mov    r8,QWORD PTR [rsp+0x48]
  405663:	mov    rdx,QWORD PTR [rsp+0x308]
  40566b:	lea    rcx,[rax+0x8]
  40566f:	mov    QWORD PTR [rax],rsi
  405672:	mov    rdi,rax
  405675:	call   0x407548
  40567a:	mov    rcx,rsi
  40567d:	mov    edx,0x5c
  405682:	call   0x4074b0
  405687:	mov    r9,QWORD PTR [rsp+0x310]
  40568f:	add    rax,0x1
  405693:	mov    r8,rdi
  405696:	mov    rcx,rax
  405699:	mov    edx,0x1
  40569e:	mov    QWORD PTR [rsp+0x30],r15
  4056a3:	cmove  rcx,rsi
  4056a7:	mov    QWORD PTR [rsp+0x28],r13
  4056ac:	mov    DWORD PTR [rsp+0x20],r12d
  4056b1:	call   0x404b90
  4056b6:	mov    rcx,rdi
  4056b9:	mov    rsi,rax
  4056bc:	call   0x407578
  4056c1:	cmp    rsi,0xffffffffffffffff
  4056c5:	je     0x4054c9
  4056cb:	mov    rbp,rsi
  4056ce:	jmp    0x405412
  4056d3:	mov    rsi,QWORD PTR [rsp+0x48]
  4056d8:	add    rsi,0x2
  4056dc:	add    rsi,0x1
  4056e0:	movzx  eax,BYTE PTR [rsi]
  4056e3:	cmp    al,0x9
  4056e5:	je     0x4056dc
  4056e7:	cmp    al,0x20
  4056e9:	jne    0x4055ff
  4056ef:	jmp    0x4056dc
  4056f1:	mov    r8d,0x8
  4056f7:	mov    ecx,0x10
  4056fc:	jmp    0x405654
  405701:	nop    DWORD PTR [rax+rax*1+0x0]
  405706:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405710:	lea    r9,[rip+0x72e9]        # 0x40ca00
  405717:	jmp    0x403dc0
  40571c:	nop
  40571d:	nop
  40571e:	nop
  40571f:	nop
  405720:	sub    rsp,0x38
  405724:	mov    rax,QWORD PTR [rip+0xb3a5]        # 0x410ad0
  40572b:	test   rax,rax
  40572e:	je     0x40573a
  405730:	mov    DWORD PTR [rsp+0x2c],ecx
  405734:	call   rax
  405736:	mov    ecx,DWORD PTR [rsp+0x2c]
  40573a:	call   0x4075b0
  40573f:	nop
  405740:	mov    QWORD PTR [rip+0x48f9],rcx        # 0x40a040
  405747:	ret    
  405748:	nop    DWORD PTR [rax+rax*1+0x0]
  405750:	push   rdi
  405751:	push   rsi
  405752:	push   rbx
  405753:	sub    rsp,0x30
  405757:	mov    rsi,QWORD PTR [rip+0x48e2]        # 0x40a040
  40575e:	lea    rax,[rip+0x771b]        # 0x40ce80
  405765:	lea    rbx,[rip+0x7717]        # 0x40ce83
  40576c:	mov    rdi,rcx
  40576f:	cmp    BYTE PTR [rsi],0x0
  405772:	cmovne rbx,rax
  405776:	call   QWORD PTR [rip+0xbd18]        # 0x411494
  40577c:	lea    rdx,[rip+0x7705]        # 0x40ce88
  405783:	lea    rcx,[rax+0x60]
  405787:	mov    DWORD PTR [rsp+0x20],edi
  40578b:	mov    r9,rbx
  40578e:	mov    r8,rsi
  405791:	call   0x407590
  405796:	mov    ecx,0x1
  40579b:	call   0x405720
  4057a0:	nop
  4057a1:	nop    DWORD PTR [rax+rax*1+0x0]
  4057a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4057b0:	push   rbx
  4057b1:	sub    rsp,0x20
  4057b5:	mov    eax,0x1
  4057ba:	test   rcx,rcx
  4057bd:	mov    rbx,rcx
  4057c0:	cmove  rbx,rax
  4057c4:	mov    rcx,rbx
  4057c7:	call   0x407550
  4057cc:	test   rax,rax
  4057cf:	je     0x4057d7
  4057d1:	add    rsp,0x20
  4057d5:	pop    rbx
  4057d6:	ret    
  4057d7:	mov    rcx,rbx
  4057da:	call   0x405750
  4057df:	nop
  4057e0:	push   rsi
  4057e1:	push   rbx
  4057e2:	sub    rsp,0x28
  4057e6:	test   rcx,rcx
  4057e9:	mov    rbx,rcx
  4057ec:	mov    rsi,rdx
  4057ef:	je     0x405810
  4057f1:	test   rdx,rdx
  4057f4:	je     0x405810
  4057f6:	mov    rdx,rsi
  4057f9:	mov    rcx,rbx
  4057fc:	call   0x4075b8
  405801:	test   rax,rax
  405804:	je     0x40581c
  405806:	add    rsp,0x28
  40580a:	pop    rbx
  40580b:	pop    rsi
  40580c:	ret    
  40580d:	nop    DWORD PTR [rax]
  405810:	mov    esi,0x1
  405815:	mov    ebx,0x1
  40581a:	jmp    0x4057f6
  40581c:	mov    rcx,rsi
  40581f:	imul   rcx,rbx
  405823:	call   0x405750
  405828:	nop
  405829:	nop    DWORD PTR [rax+0x0]
  405830:	push   rbx
  405831:	sub    rsp,0x20
  405835:	mov    eax,0x1
  40583a:	test   rdx,rdx
  40583d:	mov    rbx,rdx
  405840:	cmove  rbx,rax
  405844:	test   rcx,rcx
  405847:	je     0x405860
  405849:	mov    rdx,rbx
  40584c:	call   0x407518
  405851:	test   rax,rax
  405854:	je     0x40586a
  405856:	add    rsp,0x20
  40585a:	pop    rbx
  40585b:	ret    
  40585c:	nop    DWORD PTR [rax+0x0]
  405860:	mov    rcx,rbx
  405863:	call   0x407550
  405868:	jmp    0x405851
  40586a:	mov    rcx,rbx
  40586d:	call   0x405750
  405872:	nop
  405873:	nop
  405874:	nop
  405875:	nop
  405876:	nop
  405877:	nop
  405878:	nop
  405879:	nop
  40587a:	nop
  40587b:	nop
  40587c:	nop
  40587d:	nop
  40587e:	nop
  40587f:	nop
  405880:	push   rsi
  405881:	push   rbx
  405882:	sub    rsp,0x28
  405886:	mov    rsi,rcx
  405889:	call   0x4074c8
  40588e:	lea    rbx,[rax+0x1]
  405892:	mov    rcx,rbx
  405895:	call   0x4057b0
  40589a:	mov    r8,rbx
  40589d:	mov    rdx,rsi
  4058a0:	mov    rcx,rax
  4058a3:	add    rsp,0x28
  4058a7:	pop    rbx
  4058a8:	pop    rsi
  4058a9:	jmp    0x407548
  4058ae:	nop
  4058af:	nop
  4058b0:	push   r13
  4058b2:	push   r12
  4058b4:	push   rbp
  4058b5:	push   rdi
  4058b6:	push   rsi
  4058b7:	push   rbx
  4058b8:	sub    rsp,0x38
  4058bc:	movsxd rbx,edx
  4058bf:	mov    rbp,rcx
  4058c2:	call   0x4074c8
  4058c7:	lea    edx,[rbx+0x5]
  4058ca:	cmp    edx,eax
  4058cc:	jge    0x405ab9
  4058d2:	sub    rax,rbx
  4058d5:	lea    rdi,[rip+0x75e4]        # 0x40cec0
  4058dc:	mov    ecx,0x6
  4058e1:	lea    r13,[rbp+rax*1-0x6]
  4058e6:	mov    eax,0xffffffff
  4058eb:	mov    rsi,r13
  4058ee:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4058f0:	seta   cl
  4058f3:	setb   dl
  4058f6:	cmp    cl,dl
  4058f8:	jne    0x405a96
  4058fe:	lea    rcx,[rsp+0x20]
  405903:	xor    edx,edx
  405905:	mov    edi,0x7fff
  40590a:	lea    rsi,[rip+0x75cf]        # 0x40cee0
  405911:	call   0x4073c0
  405916:	movsxd rcx,DWORD PTR [rsp+0x24]
  40591b:	movsxd rax,DWORD PTR [rsp+0x20]
  405920:	shl    rcx,0x10
  405924:	mov    rbx,rcx
  405927:	xor    rbx,rax
  40592a:	call   0x407470
  40592f:	cdqe   
  405931:	mov    r12,QWORD PTR [rip+0xbba4]        # 0x4114dc
  405938:	xor    rbx,rax
  40593b:	mov    rcx,rbx
  40593e:	add    rcx,QWORD PTR [rip+0xa79b]        # 0x4100e0
  405945:	movabs rbx,0x8421084210842109
  40594f:	mov    QWORD PTR [rip+0xa78a],rcx        # 0x4100e0
  405956:	jmp    0x405992
  405958:	nop    DWORD PTR [rax+rax*1+0x0]
  405960:	call   r12
  405963:	cmp    DWORD PTR [rax],0x11
  405966:	je     0x405974
  405968:	call   r12
  40596b:	cmp    DWORD PTR [rax],0x15
  40596e:	jne    0x405aa3
  405974:	mov    rax,QWORD PTR [rip+0xa765]        # 0x4100e0
  40597b:	sub    edi,0x1
  40597e:	lea    rcx,[rax+0x1e61]
  405985:	mov    QWORD PTR [rip+0xa754],rcx        # 0x4100e0
  40598c:	je     0x405aa3
  405992:	mov    rdx,rcx
  405995:	shr    rdx,1
  405998:	mov    rax,rdx
  40599b:	mul    rbx
  40599e:	mov    r9,rdx
  4059a1:	shr    rdx,0x5
  4059a5:	shr    r9,0x4
  4059a9:	lea    rax,[rcx+r9*2]
  4059ad:	mov    r8,r9
  4059b0:	shl    r8,0x6
  4059b4:	sub    rax,r8
  4059b7:	movzx  eax,BYTE PTR [rsi+rax*1]
  4059bb:	mov    BYTE PTR [r13+0x0],al
  4059bf:	mov    rax,rdx
  4059c2:	mul    rbx
  4059c5:	mov    r8,rdx
  4059c8:	shr    rdx,0x5
  4059cc:	shr    r8,0x4
  4059d0:	lea    rax,[r9+r8*2]
  4059d4:	mov    rcx,r8
  4059d7:	shl    rcx,0x6
  4059db:	sub    rax,rcx
  4059de:	movzx  eax,BYTE PTR [rsi+rax*1]
  4059e2:	mov    BYTE PTR [r13+0x1],al
  4059e6:	mov    rax,rdx
  4059e9:	mul    rbx
  4059ec:	mov    rcx,rdx
  4059ef:	shr    rdx,0x5
  4059f3:	shr    rcx,0x4
  4059f7:	lea    rax,[r8+rcx*2]
  4059fb:	mov    r9,rcx
  4059fe:	shl    r9,0x6
  405a02:	sub    rax,r9
  405a05:	movzx  eax,BYTE PTR [rsi+rax*1]
  405a09:	mov    BYTE PTR [r13+0x2],al
  405a0d:	mov    rax,rdx
  405a10:	mul    rbx
  405a13:	mov    r8,rdx
  405a16:	shr    rdx,0x5
  405a1a:	shr    r8,0x4
  405a1e:	lea    rax,[rcx+r8*2]
  405a22:	mov    r9,r8
  405a25:	shl    r9,0x6
  405a29:	sub    rax,r9
  405a2c:	movzx  eax,BYTE PTR [rsi+rax*1]
  405a30:	mov    BYTE PTR [r13+0x3],al
  405a34:	mov    rax,rdx
  405a37:	mul    rbx
  405a3a:	mov    rcx,rdx
  405a3d:	shr    rdx,0x5
  405a41:	shr    rcx,0x4
  405a45:	lea    rax,[r8+rcx*2]
  405a49:	mov    r9,rcx
  405a4c:	shl    r9,0x6
  405a50:	sub    rax,r9
  405a53:	movzx  eax,BYTE PTR [rsi+rax*1]
  405a57:	mov    BYTE PTR [r13+0x4],al
  405a5b:	mov    rax,rdx
  405a5e:	mul    rbx
  405a61:	shr    rdx,0x4
  405a65:	lea    rax,[rcx+rdx*2]
  405a69:	mov    r8,rdx
  405a6c:	mov    rcx,rbp
  405a6f:	shl    r8,0x6
  405a73:	mov    edx,0x8502
  405a78:	sub    rax,r8
  405a7b:	mov    r8d,0x180
  405a81:	movzx  eax,BYTE PTR [rsi+rax*1]
  405a85:	mov    BYTE PTR [r13+0x5],al
  405a89:	call   0x407480
  405a8e:	test   eax,eax
  405a90:	js     0x405960
  405a96:	add    rsp,0x38
  405a9a:	pop    rbx
  405a9b:	pop    rsi
  405a9c:	pop    rdi
  405a9d:	pop    rbp
  405a9e:	pop    r12
  405aa0:	pop    r13
  405aa2:	ret    
  405aa3:	mov    eax,0xffffffff
  405aa8:	mov    BYTE PTR [rbp+0x0],0x0
  405aac:	add    rsp,0x38
  405ab0:	pop    rbx
  405ab1:	pop    rsi
  405ab2:	pop    rdi
  405ab3:	pop    rbp
  405ab4:	pop    r12
  405ab6:	pop    r13
  405ab8:	ret    
  405ab9:	mov    eax,0xffffffff
  405abe:	jmp    0x405a96
  405ac0:	push   rdi
  405ac1:	push   rsi
  405ac2:	push   rbx
  405ac3:	sub    rsp,0x20
  405ac7:	mov    rdi,rcx
  405aca:	mov    rcx,rdx
  405acd:	mov    rsi,rdx
  405ad0:	call   0x4074c8
  405ad5:	lea    r8,[rax+0x1]
  405ad9:	mov    rbx,rax
  405adc:	mov    rdx,rsi
  405adf:	mov    rcx,rdi
  405ae2:	call   0x407548
  405ae7:	add    rax,rbx
  405aea:	add    rsp,0x20
  405aee:	pop    rbx
  405aef:	pop    rsi
  405af0:	pop    rdi
  405af1:	ret    
  405af2:	nop
  405af3:	nop
  405af4:	nop
  405af5:	nop
  405af6:	nop
  405af7:	nop
  405af8:	nop
  405af9:	nop
  405afa:	nop
  405afb:	nop
  405afc:	nop
  405afd:	nop
  405afe:	nop
  405aff:	nop
  405b00:	push   rsi
  405b01:	push   rbx
  405b02:	sub    rsp,0x38
  405b06:	xor    esi,esi
  405b08:	lea    rbx,[rsp+0x58]
  405b0d:	test   rcx,rcx
  405b10:	mov    QWORD PTR [rsp+0x58],rdx
  405b15:	mov    QWORD PTR [rsp+0x60],r8
  405b1a:	mov    QWORD PTR [rsp+0x68],r9
  405b1f:	mov    QWORD PTR [rsp+0x28],rbx
  405b24:	je     0x405b44
  405b26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405b30:	add    rbx,0x8
  405b34:	call   0x4074c8
  405b39:	mov    rcx,QWORD PTR [rbx-0x8]
  405b3d:	add    esi,eax
  405b3f:	test   rcx,rcx
  405b42:	jne    0x405b30
  405b44:	mov    eax,esi
  405b46:	add    rsp,0x38
  405b4a:	pop    rbx
  405b4b:	pop    rsi
  405b4c:	ret    
  405b4d:	nop    DWORD PTR [rax]
  405b50:	push   r12
  405b52:	push   rbp
  405b53:	push   rdi
  405b54:	push   rsi
  405b55:	push   rbx
  405b56:	sub    rsp,0x30
  405b5a:	lea    rdi,[rsp+0x70]
  405b5f:	test   rdx,rdx
  405b62:	mov    r12,rcx
  405b65:	mov    QWORD PTR [rsp+0x70],r8
  405b6a:	mov    QWORD PTR [rsp+0x78],r9
  405b6f:	mov    rsi,rdx
  405b72:	mov    QWORD PTR [rsp+0x28],rdi
  405b77:	mov    rbp,rcx
  405b7a:	je     0x405ba8
  405b7c:	nop    DWORD PTR [rax+0x0]
  405b80:	mov    rcx,rsi
  405b83:	add    rdi,0x8
  405b87:	call   0x4074c8
  405b8c:	mov    ebx,eax
  405b8e:	mov    rdx,rsi
  405b91:	mov    rcx,rbp
  405b94:	mov    r8,rbx
  405b97:	add    rbp,rbx
  405b9a:	call   0x407548
  405b9f:	mov    rsi,QWORD PTR [rdi-0x8]
  405ba3:	test   rsi,rsi
  405ba6:	jne    0x405b80
  405ba8:	mov    rax,r12
  405bab:	mov    BYTE PTR [rbp+0x0],0x0
  405baf:	add    rsp,0x30
  405bb3:	pop    rbx
  405bb4:	pop    rsi
  405bb5:	pop    rdi
  405bb6:	pop    rbp
  405bb7:	pop    r12
  405bb9:	ret    
  405bba:	nop    WORD PTR [rax+rax*1+0x0]
  405bc0:	push   rbp
  405bc1:	push   rdi
  405bc2:	push   rsi
  405bc3:	push   rbx
  405bc4:	sub    rsp,0x38
  405bc8:	mov    rbp,QWORD PTR [rip+0xaf09]        # 0x410ad8
  405bcf:	lea    rdi,[rsp+0x68]
  405bd4:	test   rcx,rcx
  405bd7:	mov    QWORD PTR [rsp+0x68],rdx
  405bdc:	mov    QWORD PTR [rsp+0x70],r8
  405be1:	mov    QWORD PTR [rsp+0x78],r9
  405be6:	mov    rsi,rcx
  405be9:	mov    QWORD PTR [rsp+0x28],rdi
  405bee:	je     0x405c18
  405bf0:	mov    rcx,rsi
  405bf3:	add    rdi,0x8
  405bf7:	call   0x4074c8
  405bfc:	mov    ebx,eax
  405bfe:	mov    rdx,rsi
  405c01:	mov    rcx,rbp
  405c04:	mov    r8,rbx
  405c07:	add    rbp,rbx
  405c0a:	call   0x407548
  405c0f:	mov    rsi,QWORD PTR [rdi-0x8]
  405c13:	test   rsi,rsi
  405c16:	jne    0x405bf0
  405c18:	mov    BYTE PTR [rbp+0x0],0x0
  405c1c:	mov    rax,QWORD PTR [rip+0xaeb5]        # 0x410ad8
  405c23:	add    rsp,0x38
  405c27:	pop    rbx
  405c28:	pop    rsi
  405c29:	pop    rdi
  405c2a:	pop    rbp
  405c2b:	ret    
  405c2c:	nop    DWORD PTR [rax+0x0]
  405c30:	push   r12
  405c32:	push   rbp
  405c33:	push   rdi
  405c34:	push   rsi
  405c35:	push   rbx
  405c36:	sub    rsp,0x30
  405c3a:	lea    rdi,[rsp+0x68]
  405c3f:	test   rcx,rcx
  405c42:	mov    QWORD PTR [rsp+0x68],rdx
  405c47:	mov    QWORD PTR [rsp+0x70],r8
  405c4c:	mov    QWORD PTR [rsp+0x78],r9
  405c51:	mov    rsi,rcx
  405c54:	mov    QWORD PTR [rsp+0x28],rdi
  405c59:	mov    rbx,rdi
  405c5c:	je     0x405cca
  405c5e:	xor    ebp,ebp
  405c60:	add    rbx,0x8
  405c64:	call   0x4074c8
  405c69:	mov    rcx,QWORD PTR [rbx-0x8]
  405c6d:	add    ebp,eax
  405c6f:	test   rcx,rcx
  405c72:	jne    0x405c60
  405c74:	lea    ecx,[rbp+0x1]
  405c77:	call   0x4057b0
  405c7c:	mov    QWORD PTR [rsp+0x28],rdi
  405c81:	mov    r12,rax
  405c84:	mov    rbp,rax
  405c87:	nop    WORD PTR [rax+rax*1+0x0]
  405c90:	mov    rcx,rsi
  405c93:	add    rdi,0x8
  405c97:	call   0x4074c8
  405c9c:	mov    ebx,eax
  405c9e:	mov    rdx,rsi
  405ca1:	mov    rcx,rbp
  405ca4:	mov    r8,rbx
  405ca7:	add    rbp,rbx
  405caa:	call   0x407548
  405caf:	mov    rsi,QWORD PTR [rdi-0x8]
  405cb3:	test   rsi,rsi
  405cb6:	jne    0x405c90
  405cb8:	mov    rax,r12
  405cbb:	mov    BYTE PTR [rbp+0x0],0x0
  405cbf:	add    rsp,0x30
  405cc3:	pop    rbx
  405cc4:	pop    rsi
  405cc5:	pop    rdi
  405cc6:	pop    rbp
  405cc7:	pop    r12
  405cc9:	ret    
  405cca:	mov    ecx,0x1
  405ccf:	call   0x4057b0
  405cd4:	mov    QWORD PTR [rsp+0x28],rdi
  405cd9:	mov    r12,rax
  405cdc:	mov    rbp,rax
  405cdf:	jmp    0x405cb8
  405ce1:	nop    DWORD PTR [rax+rax*1+0x0]
  405ce6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405cf0:	push   r13
  405cf2:	push   r12
  405cf4:	push   rbp
  405cf5:	push   rdi
  405cf6:	push   rsi
  405cf7:	push   rbx
  405cf8:	sub    rsp,0x38
  405cfc:	lea    rbp,[rsp+0x80]
  405d04:	test   rdx,rdx
  405d07:	mov    r12,rcx
  405d0a:	mov    QWORD PTR [rsp+0x80],r8
  405d12:	mov    QWORD PTR [rsp+0x88],r9
  405d1a:	mov    rsi,rdx
  405d1d:	mov    QWORD PTR [rsp+0x28],rbp
  405d22:	mov    rbx,rbp
  405d25:	je     0x405da8
  405d2b:	mov    rcx,rdx
  405d2e:	xor    edi,edi
  405d30:	add    rbx,0x8
  405d34:	call   0x4074c8
  405d39:	mov    rcx,QWORD PTR [rbx-0x8]
  405d3d:	add    edi,eax
  405d3f:	test   rcx,rcx
  405d42:	jne    0x405d30
  405d44:	lea    ecx,[rdi+0x1]
  405d47:	call   0x4057b0
  405d4c:	mov    QWORD PTR [rsp+0x28],rbp
  405d51:	mov    r13,rax
  405d54:	mov    rdi,rax
  405d57:	nop    WORD PTR [rax+rax*1+0x0]
  405d60:	mov    rcx,rsi
  405d63:	add    rbp,0x8
  405d67:	call   0x4074c8
  405d6c:	mov    ebx,eax
  405d6e:	mov    rdx,rsi
  405d71:	mov    rcx,rdi
  405d74:	mov    r8,rbx
  405d77:	add    rdi,rbx
  405d7a:	call   0x407548
  405d7f:	mov    rsi,QWORD PTR [rbp-0x8]
  405d83:	test   rsi,rsi
  405d86:	jne    0x405d60
  405d88:	test   r12,r12
  405d8b:	mov    BYTE PTR [rdi],0x0
  405d8e:	je     0x405d98
  405d90:	mov    rcx,r12
  405d93:	call   0x407578
  405d98:	mov    rax,r13
  405d9b:	add    rsp,0x38
  405d9f:	pop    rbx
  405da0:	pop    rsi
  405da1:	pop    rdi
  405da2:	pop    rbp
  405da3:	pop    r12
  405da5:	pop    r13
  405da7:	ret    
  405da8:	mov    ecx,0x1
  405dad:	call   0x4057b0
  405db2:	mov    QWORD PTR [rsp+0x28],rbp
  405db7:	mov    r13,rax
  405dba:	mov    rdi,rax
  405dbd:	jmp    0x405d88
  405dbf:	nop
  405dc0:	push   rbx
  405dc1:	sub    rsp,0x30
  405dc5:	mov    rbx,rcx
  405dc8:	mov    rcx,QWORD PTR [rip+0xad11]        # 0x410ae0
  405dcf:	call   0x406370
  405dd4:	cmp    rax,0xffffffffffffffff
  405dd8:	mov    QWORD PTR [rsp+0x20],rax
  405ddd:	je     0x405e55
  405ddf:	mov    ecx,0x8
  405de4:	call   0x4075f0
  405de9:	mov    rcx,QWORD PTR [rip+0xacf0]        # 0x410ae0
  405df0:	call   0x406370
  405df5:	mov    rcx,QWORD PTR [rip+0xacec]        # 0x410ae8
  405dfc:	mov    QWORD PTR [rsp+0x20],rax
  405e01:	call   0x406370
  405e06:	lea    rdx,[rsp+0x20]
  405e0b:	lea    r8,[rsp+0x28]
  405e10:	mov    rcx,rbx
  405e13:	mov    QWORD PTR [rsp+0x28],rax
  405e18:	call   0x407658
  405e1d:	mov    rcx,QWORD PTR [rsp+0x20]
  405e22:	mov    rbx,rax
  405e25:	call   0x406380
  405e2a:	mov    rcx,QWORD PTR [rsp+0x28]
  405e2f:	mov    QWORD PTR [rip+0xacaa],rax        # 0x410ae0
  405e36:	call   0x406380
  405e3b:	mov    ecx,0x8
  405e40:	mov    QWORD PTR [rip+0xaca1],rax        # 0x410ae8
  405e47:	call   0x4075c8
  405e4c:	mov    rax,rbx
  405e4f:	add    rsp,0x30
  405e53:	pop    rbx
  405e54:	ret    
  405e55:	mov    rax,QWORD PTR [rip+0x73e4]        # 0x40d240
  405e5c:	mov    rcx,rbx
  405e5f:	call   QWORD PTR [rax]
  405e61:	add    rsp,0x30
  405e65:	pop    rbx
  405e66:	ret    
  405e67:	nop    WORD PTR [rax+rax*1+0x0]
  405e70:	sub    rsp,0x28
  405e74:	call   0x405dc0
  405e79:	test   rax,rax
  405e7c:	sete   al
  405e7f:	movzx  eax,al
  405e82:	neg    eax
  405e84:	add    rsp,0x28
  405e88:	ret    
  405e89:	nop
  405e8a:	nop
  405e8b:	nop
  405e8c:	nop
  405e8d:	nop
  405e8e:	nop
  405e8f:	nop
  405e90:	sub    rsp,0x28
  405e94:	mov    rax,QWORD PTR [rip+0x41b5]        # 0x40a050
  405e9b:	mov    rax,QWORD PTR [rax]
  405e9e:	test   rax,rax
  405ea1:	je     0x405ec0
  405ea3:	call   rax
  405ea5:	mov    rax,QWORD PTR [rip+0x41a4]        # 0x40a050
  405eac:	lea    rdx,[rax+0x8]
  405eb0:	mov    rax,QWORD PTR [rax+0x8]
  405eb4:	mov    QWORD PTR [rip+0x4195],rdx        # 0x40a050
  405ebb:	test   rax,rax
  405ebe:	jne    0x405ea3
  405ec0:	add    rsp,0x28
  405ec4:	ret    
  405ec5:	nop
  405ec6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405ed0:	push   rsi
  405ed1:	push   rbx
  405ed2:	sub    rsp,0x28
  405ed6:	mov    rsi,QWORD PTR [rip+0x72e3]        # 0x40d1c0
  405edd:	mov    rax,QWORD PTR [rsi]
  405ee0:	cmp    eax,0xffffffff
  405ee3:	mov    ebx,eax
  405ee5:	je     0x405f10
  405ee7:	test   ebx,ebx
  405ee9:	je     0x405efa
  405eeb:	nop    DWORD PTR [rax+rax*1+0x0]
  405ef0:	mov    eax,ebx
  405ef2:	call   QWORD PTR [rsi+rax*8]
  405ef5:	sub    ebx,0x1
  405ef8:	jne    0x405ef0
  405efa:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x405e90
  405f01:	add    rsp,0x28
  405f05:	pop    rbx
  405f06:	pop    rsi
  405f07:	jmp    0x405e70
  405f0c:	nop    DWORD PTR [rax+0x0]
  405f10:	xor    ebx,ebx
  405f12:	jmp    0x405f16
  405f14:	mov    ebx,eax
  405f16:	lea    edx,[rbx+0x1]
  405f19:	cmp    QWORD PTR [rsi+rdx*8],0x0
  405f1e:	mov    rax,rdx
  405f21:	jne    0x405f14
  405f23:	jmp    0x405ee7
  405f25:	nop
  405f26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405f30:	mov    eax,DWORD PTR [rip+0xa1ba]        # 0x4100f0
  405f36:	test   eax,eax
  405f38:	je     0x405f40
  405f3a:	repz ret 
  405f3c:	nop    DWORD PTR [rax+0x0]
  405f40:	mov    DWORD PTR [rip+0xa1a6],0x1        # 0x4100f0
  405f4a:	jmp    0x405ed0
  405f4c:	nop
  405f4d:	nop
  405f4e:	nop
  405f4f:	nop
  405f50:	mov    rax,QWORD PTR [rip+0xb545]        # 0x41149c
  405f57:	rex.W jmp rax
  405f5a:	nop
  405f5b:	nop
  405f5c:	nop
  405f5d:	nop
  405f5e:	nop
  405f5f:	nop
  405f60:	xor    eax,eax
  405f62:	ret    
  405f63:	nop
  405f64:	nop
  405f65:	nop
  405f66:	nop
  405f67:	nop
  405f68:	nop
  405f69:	nop
  405f6a:	nop
  405f6b:	nop
  405f6c:	nop
  405f6d:	nop
  405f6e:	nop
  405f6f:	nop
  405f70:	push   r12
  405f72:	push   rbp
  405f73:	push   rdi
  405f74:	push   rsi
  405f75:	push   rbx
  405f76:	sub    rsp,0x40
  405f7a:	mov    rbx,QWORD PTR [rip+0x412f]        # 0x40a0b0
  405f81:	movabs rax,0x2b992ddfa232
  405f8b:	mov    QWORD PTR [rsp+0x20],0x0
  405f94:	cmp    rbx,rax
  405f97:	je     0x405fb0
  405f99:	not    rbx
  405f9c:	mov    QWORD PTR [rip+0x411d],rbx        # 0x40a0c0
  405fa3:	add    rsp,0x40
  405fa7:	pop    rbx
  405fa8:	pop    rsi
  405fa9:	pop    rdi
  405faa:	pop    rbp
  405fab:	pop    r12
  405fad:	ret    
  405fae:	xchg   ax,ax
  405fb0:	lea    rcx,[rsp+0x20]
  405fb5:	call   QWORD PTR [rip+0xb409]        # 0x4113c4
  405fbb:	mov    r12,QWORD PTR [rsp+0x20]
  405fc0:	call   QWORD PTR [rip+0xb3d6]        # 0x41139c
  405fc6:	mov    ebp,eax
  405fc8:	call   QWORD PTR [rip+0xb3d6]        # 0x4113a4
  405fce:	mov    edi,eax
  405fd0:	call   QWORD PTR [rip+0xb3fe]        # 0x4113d4
  405fd6:	lea    rcx,[rsp+0x30]
  405fdb:	mov    esi,eax
  405fdd:	call   QWORD PTR [rip+0xb419]        # 0x4113fc
  405fe3:	xor    r12,QWORD PTR [rsp+0x30]
  405fe8:	mov    edx,edi
  405fea:	movabs rax,0xffffffffffff
  405ff4:	xor    rbp,r12
  405ff7:	mov    rdi,rbp
  405ffa:	xor    rdi,rdx
  405ffd:	mov    edx,esi
  405fff:	xor    rdi,rdx
  406002:	mov    rsi,rdi
  406005:	and    rsi,rax
  406008:	cmp    rsi,rbx
  40600b:	je     0x406030
  40600d:	mov    rax,rsi
  406010:	not    rax
  406013:	mov    QWORD PTR [rip+0x4096],rsi        # 0x40a0b0
  40601a:	mov    QWORD PTR [rip+0x409f],rax        # 0x40a0c0
  406021:	add    rsp,0x40
  406025:	pop    rbx
  406026:	pop    rsi
  406027:	pop    rdi
  406028:	pop    rbp
  406029:	pop    r12
  40602b:	ret    
  40602c:	nop    DWORD PTR [rax+0x0]
  406030:	movabs rax,0xffffd466d2205dcc
  40603a:	movabs rsi,0x2b992ddfa233
  406044:	jmp    0x406013
  406046:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406050:	push   rbp
  406051:	push   rsi
  406052:	push   rbx
  406053:	mov    rbp,rsp
  406056:	sub    rsp,0x70
  40605a:	mov    rsi,rcx
  40605d:	lea    rcx,[rip+0xa0dc]        # 0x410140
  406064:	call   QWORD PTR [rip+0xb3a2]        # 0x41140c
  40606a:	mov    rbx,QWORD PTR [rip+0xa1c7]        # 0x410238
  406071:	xor    r8d,r8d
  406074:	lea    rdx,[rbp-0x28]
  406078:	mov    rcx,rbx
  40607b:	call   QWORD PTR [rip+0xb393]        # 0x411414
  406081:	test   rax,rax
  406084:	mov    r9,rax
  406087:	je     0x406130
  40608d:	lea    rax,[rbp-0x20]
  406091:	mov    QWORD PTR [rsp+0x38],0x0
  40609a:	mov    r8,rbx
  40609d:	mov    rdx,QWORD PTR [rbp-0x28]
  4060a1:	xor    ecx,ecx
  4060a3:	mov    QWORD PTR [rsp+0x30],rax
  4060a8:	lea    rax,[rbp-0x18]
  4060ac:	mov    QWORD PTR [rsp+0x28],rax
  4060b1:	lea    rax,[rip+0xa088]        # 0x410140
  4060b8:	mov    QWORD PTR [rsp+0x20],rax
  4060bd:	call   QWORD PTR [rip+0xb359]        # 0x41141c
  4060c3:	mov    rax,QWORD PTR [rip+0xa16e]        # 0x410238
  4060ca:	xor    ecx,ecx
  4060cc:	mov    QWORD PTR [rip+0xa0ed],rsi        # 0x4101c0
  4060d3:	mov    DWORD PTR [rip+0xa563],0xc0000409        # 0x410640
  4060dd:	mov    DWORD PTR [rip+0xa55d],0x1        # 0x410644
  4060e7:	mov    QWORD PTR [rip+0xa562],rax        # 0x410650
  4060ee:	mov    rax,QWORD PTR [rip+0x3fbb]        # 0x40a0b0
  4060f5:	mov    QWORD PTR [rbp-0x10],rax
  4060f9:	mov    rax,QWORD PTR [rip+0x3fc0]        # 0x40a0c0
  406100:	mov    QWORD PTR [rbp-0x8],rax
  406104:	call   QWORD PTR [rip+0xb322]        # 0x41142c
  40610a:	lea    rcx,[rip+0x6e0f]        # 0x40cf20
  406111:	call   QWORD PTR [rip+0xb335]        # 0x41144c
  406117:	call   QWORD PTR [rip+0xb277]        # 0x411394
  40611d:	mov    edx,0xc0000409
  406122:	mov    rcx,rax
  406125:	call   QWORD PTR [rip+0xb311]        # 0x41143c
  40612b:	call   0x4075c0
  406130:	mov    rax,QWORD PTR [rbp+0x18]
  406134:	mov    QWORD PTR [rip+0xa0fd],rax        # 0x410238
  40613b:	lea    rax,[rbp+0x8]
  40613f:	mov    QWORD PTR [rip+0xa092],rax        # 0x4101d8
  406146:	jmp    0x4060c3
  40614b:	nop
  40614c:	nop
  40614d:	nop
  40614e:	nop
  40614f:	nop
  406150:	sub    rsp,0x28
  406154:	test   edx,edx
  406156:	je     0x406170
  406158:	cmp    edx,0x3
  40615b:	je     0x406170
  40615d:	mov    eax,0x1
  406162:	add    rsp,0x28
  406166:	ret    
  406167:	nop    WORD PTR [rax+rax*1+0x0]
  406170:	call   0x406e60
  406175:	mov    eax,0x1
  40617a:	add    rsp,0x28
  40617e:	ret    
  40617f:	nop
  406180:	push   rsi
  406181:	push   rbx
  406182:	sub    rsp,0x28
  406186:	mov    rax,QWORD PTR [rip+0x7013]        # 0x40d1a0
  40618d:	cmp    DWORD PTR [rax],0x2
  406190:	je     0x406198
  406192:	mov    DWORD PTR [rax],0x2
  406198:	cmp    edx,0x2
  40619b:	je     0x4061b0
  40619d:	cmp    edx,0x1
  4061a0:	je     0x4061e2
  4061a2:	mov    eax,0x1
  4061a7:	add    rsp,0x28
  4061ab:	pop    rbx
  4061ac:	pop    rsi
  4061ad:	ret    
  4061ae:	xchg   ax,ax
  4061b0:	lea    rbx,[rip+0xbea9]        # 0x412060
  4061b7:	lea    rsi,[rip+0xbea2]        # 0x412060
  4061be:	cmp    rbx,rsi
  4061c1:	je     0x4061a2
  4061c3:	mov    rax,QWORD PTR [rbx]
  4061c6:	test   rax,rax
  4061c9:	je     0x4061cd
  4061cb:	call   rax
  4061cd:	add    rbx,0x8
  4061d1:	cmp    rbx,rsi
  4061d4:	jne    0x4061c3
  4061d6:	mov    eax,0x1
  4061db:	add    rsp,0x28
  4061df:	pop    rbx
  4061e0:	pop    rsi
  4061e1:	ret    
  4061e2:	call   0x406e60
  4061e7:	jmp    0x4061a2
  4061e9:	nop    DWORD PTR [rax+0x0]
  4061f0:	xor    eax,eax
  4061f2:	ret    
  4061f3:	nop
  4061f4:	nop
  4061f5:	nop
  4061f6:	nop
  4061f7:	nop
  4061f8:	nop
  4061f9:	nop
  4061fa:	nop
  4061fb:	nop
  4061fc:	nop
  4061fd:	nop
  4061fe:	nop
  4061ff:	nop
  406200:	sub    rsp,0x58
  406204:	mov    rax,QWORD PTR [rip+0xa515]        # 0x410720
  40620b:	test   rax,rax
  40620e:	je     0x40623c
  406210:	movsd  xmm0,QWORD PTR [rsp+0x80]
  406219:	mov    DWORD PTR [rsp+0x20],ecx
  40621d:	lea    rcx,[rsp+0x20]
  406222:	mov    QWORD PTR [rsp+0x28],rdx
  406227:	movsd  QWORD PTR [rsp+0x30],xmm2
  40622d:	movsd  QWORD PTR [rsp+0x38],xmm3
  406233:	movsd  QWORD PTR [rsp+0x40],xmm0
  406239:	call   rax
  40623b:	nop
  40623c:	add    rsp,0x58
  406240:	ret    
  406241:	nop    DWORD PTR [rax+rax*1+0x0]
  406246:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406250:	mov    QWORD PTR [rip+0xa4c9],rcx        # 0x410720
  406257:	jmp    0x407630
  40625c:	nop    DWORD PTR [rax+0x0]
  406260:	push   rsi
  406261:	push   rbx
  406262:	sub    rsp,0x78
  406266:	movaps XMMWORD PTR [rsp+0x40],xmm6
  40626b:	movaps XMMWORD PTR [rsp+0x50],xmm7
  406270:	movaps XMMWORD PTR [rsp+0x60],xmm8
  406276:	cmp    DWORD PTR [rcx],0x6
  406279:	ja     0x406350
  40627f:	mov    edx,DWORD PTR [rcx]
  406281:	lea    rax,[rip+0x6ddc]        # 0x40d064
  406288:	movsxd rdx,DWORD PTR [rax+rdx*4]
  40628c:	add    rax,rdx
  40628f:	jmp    rax
  406291:	lea    rbx,[rip+0x6ca8]        # 0x40cf40
  406298:	nop    DWORD PTR [rax+rax*1+0x0]
  4062a0:	movsd  xmm8,QWORD PTR [rcx+0x20]
  4062a6:	mov    rsi,QWORD PTR [rcx+0x8]
  4062aa:	movsd  xmm7,QWORD PTR [rcx+0x18]
  4062af:	movsd  xmm6,QWORD PTR [rcx+0x10]
  4062b4:	call   0x407648
  4062b9:	movsd  QWORD PTR [rsp+0x30],xmm8
  4062c0:	lea    rcx,[rax+0x60]
  4062c4:	lea    rdx,[rip+0x6d6d]        # 0x40d038
  4062cb:	movsd  QWORD PTR [rsp+0x28],xmm7
  4062d1:	mov    r9,rsi
  4062d4:	mov    r8,rbx
  4062d7:	movsd  QWORD PTR [rsp+0x20],xmm6
  4062dd:	call   0x407590
  4062e2:	nop
  4062e3:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  4062e8:	xor    eax,eax
  4062ea:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  4062ef:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  4062f5:	add    rsp,0x78
  4062f9:	pop    rbx
  4062fa:	pop    rsi
  4062fb:	ret    
  4062fc:	nop    DWORD PTR [rax+0x0]
  406300:	lea    rbx,[rip+0x6c58]        # 0x40cf5f
  406307:	jmp    0x4062a0
  406309:	nop    DWORD PTR [rax+0x0]
  406310:	lea    rbx,[rip+0x6c69]        # 0x40cf80
  406317:	jmp    0x4062a0
  406319:	nop    DWORD PTR [rax+0x0]
  406320:	lea    rbx,[rip+0x6cc9]        # 0x40cff0
  406327:	jmp    0x4062a0
  40632c:	nop    DWORD PTR [rax+0x0]
  406330:	lea    rbx,[rip+0x6c91]        # 0x40cfc8
  406337:	jmp    0x4062a0
  40633c:	nop    DWORD PTR [rax+0x0]
  406340:	lea    rbx,[rip+0x6c59]        # 0x40cfa0
  406347:	jmp    0x4062a0
  40634c:	nop    DWORD PTR [rax+0x0]
  406350:	lea    rbx,[rip+0x6ccf]        # 0x40d026
  406357:	jmp    0x4062a0
  40635c:	nop
  40635d:	nop
  40635e:	nop
  40635f:	nop
  406360:	fninit 
  406362:	ret    
  406363:	nop
  406364:	nop
  406365:	nop
  406366:	nop
  406367:	nop
  406368:	nop
  406369:	nop
  40636a:	nop
  40636b:	nop
  40636c:	nop
  40636d:	nop
  40636e:	nop
  40636f:	nop
  406370:	mov    rax,rcx
  406373:	ret    
  406374:	xchg   ax,ax
  406376:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406380:	mov    rax,rcx
  406383:	ret    
  406384:	nop
  406385:	nop
  406386:	nop
  406387:	nop
  406388:	nop
  406389:	nop
  40638a:	nop
  40638b:	nop
  40638c:	nop
  40638d:	nop
  40638e:	nop
  40638f:	nop
  406390:	push   rsi
  406391:	push   rbx
  406392:	sub    rsp,0x38
  406396:	lea    rax,[rsp+0x58]
  40639b:	mov    rbx,rcx
  40639e:	mov    QWORD PTR [rsp+0x58],rdx
  4063a3:	mov    QWORD PTR [rsp+0x60],r8
  4063a8:	mov    QWORD PTR [rsp+0x68],r9
  4063ad:	mov    QWORD PTR [rsp+0x28],rax
  4063b2:	call   0x407648
  4063b7:	lea    rcx,[rip+0x6cc2]        # 0x40d080
  4063be:	lea    r9,[rax+0x60]
  4063c2:	mov    r8d,0x1b
  4063c8:	mov    edx,0x1
  4063cd:	call   0x407560
  4063d2:	mov    rsi,QWORD PTR [rsp+0x28]
  4063d7:	call   0x407648
  4063dc:	lea    rcx,[rax+0x60]
  4063e0:	mov    rdx,rbx
  4063e3:	mov    r8,rsi
  4063e6:	call   0x407498
  4063eb:	call   0x4075c0
  4063f0:	nop
  4063f1:	nop    DWORD PTR [rax+rax*1+0x0]
  4063f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406400:	push   r13
  406402:	push   r12
  406404:	push   rbp
  406405:	push   rdi
  406406:	push   rsi
  406407:	push   rbx
  406408:	sub    rsp,0x58
  40640c:	movsxd rbp,DWORD PTR [rip+0xa331]        # 0x410744
  406413:	mov    rbx,rcx
  406416:	mov    rsi,rdx
  406419:	mov    rdi,r8
  40641c:	test   ebp,ebp
  40641e:	jle    0x40651a
  406424:	mov    rax,QWORD PTR [rip+0xa31d]        # 0x410748
  40642b:	xor    r9d,r9d
  40642e:	add    rax,0x8
  406432:	mov    r10,QWORD PTR [rax]
  406435:	cmp    rbx,r10
  406438:	jb     0x40644e
  40643a:	mov    rdx,QWORD PTR [rax+0x8]
  40643e:	mov    r11d,DWORD PTR [rdx+0x8]
  406442:	add    r10,r11
  406445:	cmp    rbx,r10
  406448:	jb     0x406500
  40644e:	add    r9d,0x1
  406452:	add    rax,0x18
  406456:	cmp    r9d,ebp
  406459:	jne    0x406432
  40645b:	mov    rcx,rbx
  40645e:	call   0x407070
  406463:	test   rax,rax
  406466:	mov    r12,rax
  406469:	je     0x406552
  40646f:	lea    rbp,[rbp+rbp*2+0x0]
  406474:	shl    rbp,0x3
  406478:	mov    r13,rbp
  40647b:	add    r13,QWORD PTR [rip+0xa2c6]        # 0x410748
  406482:	mov    QWORD PTR [r13+0x10],rax
  406486:	mov    DWORD PTR [r13+0x0],0x0
  40648e:	call   0x407190
  406493:	mov    edx,DWORD PTR [r12+0xc]
  406498:	mov    r8d,0x30
  40649e:	add    rax,rdx
  4064a1:	lea    rdx,[rsp+0x20]
  4064a6:	mov    QWORD PTR [r13+0x8],rax
  4064aa:	mov    rax,QWORD PTR [rip+0xa297]        # 0x410748
  4064b1:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  4064b6:	call   QWORD PTR [rip+0xafa0]        # 0x41145c
  4064bc:	test   rax,rax
  4064bf:	je     0x406535
  4064c1:	mov    eax,DWORD PTR [rsp+0x44]
  4064c5:	lea    edx,[rax-0x4]
  4064c8:	and    edx,0xfffffffb
  4064cb:	je     0x4064f9
  4064cd:	sub    eax,0x40
  4064d0:	and    eax,0xffffffbf
  4064d3:	je     0x4064f9
  4064d5:	mov    r9,rbp
  4064d8:	add    r9,QWORD PTR [rip+0xa269]        # 0x410748
  4064df:	mov    r8d,0x40
  4064e5:	mov    rdx,QWORD PTR [rsp+0x38]
  4064ea:	mov    rcx,QWORD PTR [rsp+0x20]
  4064ef:	call   QWORD PTR [rip+0xaf5f]        # 0x411454
  4064f5:	test   eax,eax
  4064f7:	je     0x406521
  4064f9:	add    DWORD PTR [rip+0xa244],0x1        # 0x410744
  406500:	mov    r8,rdi
  406503:	mov    rdx,rsi
  406506:	mov    rcx,rbx
  406509:	add    rsp,0x58
  40650d:	pop    rbx
  40650e:	pop    rsi
  40650f:	pop    rdi
  406510:	pop    rbp
  406511:	pop    r12
  406513:	pop    r13
  406515:	jmp    0x407548
  40651a:	xor    ebp,ebp
  40651c:	jmp    0x40645b
  406521:	call   QWORD PTR [rip+0xae8d]        # 0x4113b4
  406527:	lea    rcx,[rip+0x6bca]        # 0x40d0f8
  40652e:	mov    edx,eax
  406530:	call   0x406390
  406535:	mov    rax,QWORD PTR [rip+0xa20c]        # 0x410748
  40653c:	mov    edx,DWORD PTR [r12+0x8]
  406541:	lea    rcx,[rip+0x6b78]        # 0x40d0c0
  406548:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  40654d:	call   0x406390
  406552:	lea    rcx,[rip+0x6b47]        # 0x40d0a0
  406559:	mov    rdx,rbx
  40655c:	call   0x406390
  406561:	nop
  406562:	nop    DWORD PTR [rax+0x0]
  406566:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406570:	push   rbp
  406571:	push   r14
  406573:	push   r13
  406575:	push   r12
  406577:	push   rdi
  406578:	push   rsi
  406579:	push   rbx
  40657a:	mov    rbp,rsp
  40657d:	sub    rsp,0x60
  406581:	mov    ebx,DWORD PTR [rip+0xa1b9]        # 0x410740
  406587:	test   ebx,ebx
  406589:	je     0x4065a0
  40658b:	mov    rsp,rbp
  40658e:	pop    rbx
  40658f:	pop    rsi
  406590:	pop    rdi
  406591:	pop    r12
  406593:	pop    r13
  406595:	pop    r14
  406597:	pop    rbp
  406598:	ret    
  406599:	nop    DWORD PTR [rax+0x0]
  4065a0:	mov    DWORD PTR [rip+0xa196],0x1        # 0x410740
  4065aa:	call   0x4070c0
  4065af:	cdqe   
  4065b1:	lea    rax,[rax+rax*2]
  4065b5:	lea    rax,[rax*8+0x1e]
  4065bd:	and    rax,0xfffffffffffffff0
  4065c1:	call   0x4072e0
  4065c6:	mov    rsi,QWORD PTR [rip+0x6c03]        # 0x40d1d0
  4065cd:	mov    rbx,QWORD PTR [rip+0x6c0c]        # 0x40d1e0
  4065d4:	sub    rsp,rax
  4065d7:	mov    DWORD PTR [rip+0xa163],0x0        # 0x410744
  4065e1:	lea    rax,[rsp+0x20]
  4065e6:	mov    QWORD PTR [rip+0xa15b],rax        # 0x410748
  4065ed:	mov    rax,rsi
  4065f0:	sub    rax,rbx
  4065f3:	cmp    rax,0x7
  4065f7:	jle    0x40658b
  4065f9:	cmp    rax,0xb
  4065fd:	jle    0x406625
  4065ff:	mov    r11d,DWORD PTR [rbx]
  406602:	test   r11d,r11d
  406605:	jne    0x406750
  40660b:	mov    r10d,DWORD PTR [rbx+0x4]
  40660f:	test   r10d,r10d
  406612:	jne    0x406750
  406618:	mov    r9d,DWORD PTR [rbx+0x8]
  40661c:	test   r9d,r9d
  40661f:	jne    0x40663c
  406621:	add    rbx,0xc
  406625:	mov    r8d,DWORD PTR [rbx]
  406628:	test   r8d,r8d
  40662b:	jne    0x406750
  406631:	mov    ecx,DWORD PTR [rbx+0x4]
  406634:	test   ecx,ecx
  406636:	jne    0x406750
  40663c:	mov    edx,DWORD PTR [rbx+0x8]
  40663f:	cmp    edx,0x1
  406642:	jne    0x40685c
  406648:	add    rbx,0xc
  40664c:	cmp    rbx,rsi
  40664f:	jae    0x40658b
  406655:	mov    r12,QWORD PTR [rip+0x6ba4]        # 0x40d200
  40665c:	lea    r13,[rbp-0x30]
  406660:	movabs r14,0xffffffff00000000
  40666a:	mov    ecx,DWORD PTR [rbx+0x4]
  40666d:	mov    eax,DWORD PTR [rbx]
  40666f:	movzx  edx,BYTE PTR [rbx+0x8]
  406673:	add    rax,r12
  406676:	add    rcx,r12
  406679:	cmp    edx,0x10
  40667c:	mov    r8,QWORD PTR [rax]
  40667f:	je     0x4067c6
  406685:	jbe    0x40678d
  40668b:	cmp    edx,0x20
  40668e:	je     0x40680f
  406694:	cmp    edx,0x40
  406697:	jne    0x4067fb
  40669d:	sub    r8,rax
  4066a0:	mov    rdx,r13
  4066a3:	mov    rdi,r13
  4066a6:	mov    rax,r8
  4066a9:	add    rax,QWORD PTR [rcx]
  4066ac:	mov    r8d,0x8
  4066b2:	mov    QWORD PTR [rbp-0x30],rax
  4066b6:	call   0x406400
  4066bb:	add    rbx,0xc
  4066bf:	cmp    rbx,rsi
  4066c2:	jb     0x40666a
  4066c4:	mov    eax,DWORD PTR [rip+0xa07a]        # 0x410744
  4066ca:	xor    ebx,ebx
  4066cc:	xor    esi,esi
  4066ce:	test   eax,eax
  4066d0:	jle    0x40658b
  4066d6:	mov    r14,QWORD PTR [rip+0xad7f]        # 0x41145c
  4066dd:	lea    r13,[rbp-0x34]
  4066e1:	mov    r12,QWORD PTR [rip+0xad6c]        # 0x411454
  4066e8:	jmp    0x406703
  4066ea:	nop    WORD PTR [rax+rax*1+0x0]
  4066f0:	add    esi,0x1
  4066f3:	add    rbx,0x18
  4066f7:	cmp    esi,DWORD PTR [rip+0xa047]        # 0x410744
  4066fd:	jge    0x40658b
  406703:	mov    rax,rbx
  406706:	add    rax,QWORD PTR [rip+0xa03b]        # 0x410748
  40670d:	mov    edx,DWORD PTR [rax]
  40670f:	test   edx,edx
  406711:	je     0x4066f0
  406713:	mov    rcx,QWORD PTR [rax+0x8]
  406717:	mov    r8d,0x30
  40671d:	mov    rdx,rdi
  406720:	call   r14
  406723:	test   rax,rax
  406726:	je     0x40683e
  40672c:	mov    rax,QWORD PTR [rip+0xa015]        # 0x410748
  406733:	mov    r9,r13
  406736:	mov    rdx,QWORD PTR [rbp-0x18]
  40673a:	mov    rcx,QWORD PTR [rbp-0x30]
  40673e:	mov    r8d,DWORD PTR [rax+rbx*1]
  406742:	call   r12
  406745:	jmp    0x4066f0
  406747:	nop    WORD PTR [rax+rax*1+0x0]
  406750:	cmp    rbx,rsi
  406753:	jae    0x40658b
  406759:	mov    r12,QWORD PTR [rip+0x6aa0]        # 0x40d200
  406760:	lea    rdi,[rbp-0x30]
  406764:	mov    ecx,DWORD PTR [rbx+0x4]
  406767:	mov    eax,DWORD PTR [rbx]
  406769:	mov    r8d,0x4
  40676f:	mov    rdx,rdi
  406772:	add    rbx,0x8
  406776:	add    rcx,r12
  406779:	add    eax,DWORD PTR [rcx]
  40677b:	mov    DWORD PTR [rbp-0x30],eax
  40677e:	call   0x406400
  406783:	cmp    rbx,rsi
  406786:	jb     0x406764
  406788:	jmp    0x4066c4
  40678d:	cmp    edx,0x8
  406790:	jne    0x4067fb
  406792:	movzx  edx,BYTE PTR [rcx]
  406795:	mov    rdi,r13
  406798:	mov    r10,rdx
  40679b:	or     r10,0xffffffffffffff00
  4067a2:	test   dl,dl
  4067a4:	cmovs  rdx,r10
  4067a8:	sub    rdx,rax
  4067ab:	lea    rax,[r8+rdx*1]
  4067af:	mov    r8d,0x1
  4067b5:	mov    rdx,r13
  4067b8:	mov    QWORD PTR [rbp-0x30],rax
  4067bc:	call   0x406400
  4067c1:	jmp    0x4066bb
  4067c6:	movzx  edx,WORD PTR [rcx]
  4067c9:	mov    rdi,r13
  4067cc:	mov    r10,rdx
  4067cf:	or     r10,0xffffffffffff0000
  4067d6:	test   dx,dx
  4067d9:	cmovs  rdx,r10
  4067dd:	sub    rdx,rax
  4067e0:	lea    rax,[r8+rdx*1]
  4067e4:	mov    r8d,0x2
  4067ea:	mov    rdx,r13
  4067ed:	mov    QWORD PTR [rbp-0x30],rax
  4067f1:	call   0x406400
  4067f6:	jmp    0x4066bb
  4067fb:	lea    rcx,[rip+0x6956]        # 0x40d158
  406802:	mov    QWORD PTR [rbp-0x30],0x0
  40680a:	call   0x406390
  40680f:	mov    edx,DWORD PTR [rcx]
  406811:	mov    rdi,r13
  406814:	mov    r10,rdx
  406817:	or     r10,r14
  40681a:	test   edx,edx
  40681c:	cmovs  rdx,r10
  406820:	sub    rdx,rax
  406823:	lea    rax,[r8+rdx*1]
  406827:	mov    r8d,0x4
  40682d:	mov    rdx,r13
  406830:	mov    QWORD PTR [rbp-0x30],rax
  406834:	call   0x406400
  406839:	jmp    0x4066bb
  40683e:	add    rbx,QWORD PTR [rip+0x9f03]        # 0x410748
  406845:	lea    rcx,[rip+0x6874]        # 0x40d0c0
  40684c:	mov    rax,QWORD PTR [rbx+0x10]
  406850:	mov    r8,QWORD PTR [rbx+0x8]
  406854:	mov    edx,DWORD PTR [rax+0x8]
  406857:	call   0x406390
  40685c:	lea    rcx,[rip+0x68bd]        # 0x40d120
  406863:	call   0x406390
  406868:	nop
  406869:	nop
  40686a:	nop
  40686b:	nop
  40686c:	nop
  40686d:	nop
  40686e:	nop
  40686f:	nop
  406870:	sub    rsp,0x28
  406874:	mov    eax,DWORD PTR [rcx]
  406876:	cmp    eax,0xc0000091
  40687b:	ja     0x4068e0
  40687d:	cmp    eax,0xc000008d
  406882:	jae    0x4068ff
  406884:	cmp    eax,0xc0000008
  406889:	je     0x4069a0
  40688f:	ja     0x406970
  406895:	cmp    eax,0x80000002
  40689a:	je     0x4069a0
  4068a0:	cmp    eax,0xc0000005
  4068a5:	jne    0x40697e
  4068ab:	xor    edx,edx
  4068ad:	mov    ecx,0xb
  4068b2:	call   0x407500
  4068b7:	cmp    rax,0x1
  4068bb:	je     0x406a00
  4068c1:	test   rax,rax
  4068c4:	je     0x4069e0
  4068ca:	mov    ecx,0xb
  4068cf:	call   rax
  4068d1:	xor    eax,eax
  4068d3:	add    rsp,0x28
  4068d7:	ret    
  4068d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4068e0:	cmp    eax,0xc0000094
  4068e5:	je     0x4069b0
  4068eb:	ja     0x406930
  4068ed:	cmp    eax,0xc0000092
  4068f2:	je     0x4069a0
  4068f8:	cmp    eax,0xc0000093
  4068fd:	jne    0x40697e
  4068ff:	xor    edx,edx
  406901:	mov    ecx,0x8
  406906:	call   0x407500
  40690b:	cmp    rax,0x1
  40690f:	mov    rdx,rax
  406912:	je     0x406988
  406914:	test   rdx,rdx
  406917:	mov    eax,0x1
  40691c:	je     0x4068d3
  40691e:	mov    ecx,0x8
  406923:	call   rdx
  406925:	xor    eax,eax
  406927:	add    rsp,0x28
  40692b:	ret    
  40692c:	nop    DWORD PTR [rax+0x0]
  406930:	cmp    eax,0xc0000095
  406935:	je     0x4069a0
  406937:	cmp    eax,0xc0000096
  40693c:	jne    0x40697e
  40693e:	xor    edx,edx
  406940:	mov    ecx,0x4
  406945:	call   0x407500
  40694a:	cmp    rax,0x1
  40694e:	je     0x4069ea
  406954:	test   rax,rax
  406957:	je     0x4069e0
  40695d:	mov    ecx,0x4
  406962:	call   rax
  406964:	xor    eax,eax
  406966:	jmp    0x4068d3
  40696b:	nop    DWORD PTR [rax+rax*1+0x0]
  406970:	cmp    eax,0xc000001d
  406975:	je     0x40693e
  406977:	cmp    eax,0xc000008c
  40697c:	je     0x4069a0
  40697e:	mov    eax,0x1
  406983:	add    rsp,0x28
  406987:	ret    
  406988:	mov    edx,0x1
  40698d:	mov    ecx,0x8
  406992:	call   0x407500
  406997:	call   0x406360
  40699c:	nop    DWORD PTR [rax+0x0]
  4069a0:	xor    eax,eax
  4069a2:	add    rsp,0x28
  4069a6:	ret    
  4069a7:	nop    WORD PTR [rax+rax*1+0x0]
  4069b0:	xor    edx,edx
  4069b2:	mov    ecx,0x8
  4069b7:	call   0x407500
  4069bc:	cmp    rax,0x1
  4069c0:	mov    rdx,rax
  4069c3:	jne    0x406914
  4069c9:	mov    edx,0x1
  4069ce:	mov    ecx,0x8
  4069d3:	call   0x407500
  4069d8:	xor    eax,eax
  4069da:	jmp    0x4068d3
  4069df:	nop
  4069e0:	mov    eax,0x4
  4069e5:	add    rsp,0x28
  4069e9:	ret    
  4069ea:	mov    edx,0x1
  4069ef:	mov    ecx,0x4
  4069f4:	call   0x407500
  4069f9:	xor    eax,eax
  4069fb:	jmp    0x4068d3
  406a00:	mov    edx,0x1
  406a05:	mov    ecx,0xb
  406a0a:	call   0x407500
  406a0f:	xor    eax,eax
  406a11:	jmp    0x4068d3
  406a16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406a20:	push   r12
  406a22:	push   rbp
  406a23:	push   rdi
  406a24:	push   rsi
  406a25:	push   rbx
  406a26:	sub    rsp,0x20
  406a2a:	call   0x407190
  406a2f:	mov    rbp,rax
  406a32:	mov    eax,DWORD PTR [rip+0x9d50]        # 0x410788
  406a38:	test   eax,eax
  406a3a:	jne    0x406a61
  406a3c:	test   rbp,rbp
  406a3f:	je     0x406a61
  406a41:	lea    rcx,[rip+0x6748]        # 0x40d190
  406a48:	mov    DWORD PTR [rip+0x9d36],0x1        # 0x410788
  406a52:	call   0x406fd0
  406a57:	test   rax,rax
  406a5a:	je     0x406a70
  406a5c:	mov    eax,0x1
  406a61:	add    rsp,0x20
  406a65:	pop    rbx
  406a66:	pop    rsi
  406a67:	pop    rdi
  406a68:	pop    rbp
  406a69:	pop    r12
  406a6b:	ret    
  406a6c:	nop    DWORD PTR [rax+0x0]
  406a70:	lea    rbx,[rip+0x9e49]        # 0x4108c0
  406a77:	mov    ecx,0x30
  406a7c:	lea    rdx,[rip+0x9d3d]        # 0x4107c0
  406a83:	lea    r12,[rip+0xfffffffffffffde6]        # 0x406870
  406a8a:	xor    esi,esi
  406a8c:	mov    rdi,rbx
  406a8f:	rep stos QWORD PTR es:[rdi],rax
  406a92:	mov    rdi,rdx
  406a95:	sub    r12,rbp
  406a98:	mov    cl,0x20
  406a9a:	rep stos QWORD PTR es:[rdi],rax
  406a9d:	mov    rdi,rdx
  406aa0:	jmp    0x406ad0
  406aa2:	mov    BYTE PTR [rdi],0x9
  406aa5:	mov    DWORD PTR [rdi+0x4],r12d
  406aa9:	add    rsi,0x1
  406aad:	mov    edx,DWORD PTR [rax+0xc]
  406ab0:	add    rbx,0xc
  406ab4:	mov    DWORD PTR [rbx-0xc],edx
  406ab7:	add    edx,DWORD PTR [rax+0x8]
  406aba:	mov    rax,rdi
  406abd:	sub    rax,rbp
  406ac0:	add    rdi,0x8
  406ac4:	mov    DWORD PTR [rbx-0x4],eax
  406ac7:	mov    DWORD PTR [rbx-0x8],edx
  406aca:	cmp    rsi,0x20
  406ace:	je     0x406b05
  406ad0:	mov    rcx,rsi
  406ad3:	call   0x407100
  406ad8:	test   rax,rax
  406adb:	jne    0x406aa2
  406add:	test   rsi,rsi
  406ae0:	je     0x406a5c
  406ae6:	mov    edx,esi
  406ae8:	nop    DWORD PTR [rax+rax*1+0x0]
  406af0:	mov    r8,rbp
  406af3:	lea    rcx,[rip+0x9dc6]        # 0x4108c0
  406afa:	call   QWORD PTR [rip+0xa904]        # 0x411404
  406b00:	jmp    0x406a5c
  406b05:	mov    edx,0x20
  406b0a:	jmp    0x406af0
  406b0c:	nop    DWORD PTR [rax+0x0]
  406b10:	push   rbx
  406b11:	sub    rsp,0x20
  406b15:	mov    rdx,QWORD PTR [rcx]
  406b18:	mov    eax,DWORD PTR [rdx]
  406b1a:	mov    r8d,eax
  406b1d:	and    r8d,0x20ffffff
  406b24:	cmp    r8d,0x20474343
  406b2b:	je     0x406c30
  406b31:	cmp    eax,0xc0000091
  406b36:	mov    rbx,rcx
  406b39:	ja     0x406bc0
  406b3f:	cmp    eax,0xc000008d
  406b44:	jae    0x406bd7
  406b4a:	cmp    eax,0xc0000008
  406b4f:	je     0x406b83
  406b51:	ja     0x406b90
  406b53:	cmp    eax,0x80000002
  406b58:	je     0x406b83
  406b5a:	cmp    eax,0xc0000005
  406b5f:	jne    0x406ba2
  406b61:	xor    edx,edx
  406b63:	mov    ecx,0xb
  406b68:	call   0x407500
  406b6d:	cmp    rax,0x1
  406b71:	je     0x406ca0
  406b77:	test   rax,rax
  406b7a:	je     0x406ba2
  406b7c:	mov    ecx,0xb
  406b81:	call   rax
  406b83:	mov    eax,0xffffffff
  406b88:	add    rsp,0x20
  406b8c:	pop    rbx
  406b8d:	ret    
  406b8e:	xchg   ax,ax
  406b90:	cmp    eax,0xc000001d
  406b95:	je     0x406c56
  406b9b:	cmp    eax,0xc000008c
  406ba0:	je     0x406b83
  406ba2:	mov    rax,QWORD PTR [rip+0x9bd7]        # 0x410780
  406ba9:	test   rax,rax
  406bac:	je     0x406b88
  406bae:	mov    rcx,rbx
  406bb1:	add    rsp,0x20
  406bb5:	pop    rbx
  406bb6:	rex.W jmp rax
  406bb9:	nop    DWORD PTR [rax+0x0]
  406bc0:	cmp    eax,0xc0000094
  406bc5:	je     0x406c02
  406bc7:	ja     0x406c40
  406bc9:	cmp    eax,0xc0000092
  406bce:	je     0x406b83
  406bd0:	cmp    eax,0xc0000093
  406bd5:	jne    0x406ba2
  406bd7:	xor    edx,edx
  406bd9:	mov    ecx,0x8
  406bde:	call   0x407500
  406be3:	cmp    rax,0x1
  406be7:	jne    0x406c14
  406be9:	mov    edx,0x1
  406bee:	mov    ecx,0x8
  406bf3:	call   0x407500
  406bf8:	call   0x406360
  406bfd:	jmp    0x406b83
  406c02:	xor    edx,edx
  406c04:	mov    ecx,0x8
  406c09:	call   0x407500
  406c0e:	cmp    rax,0x1
  406c12:	je     0x406c82
  406c14:	test   rax,rax
  406c17:	je     0x406ba2
  406c19:	mov    ecx,0x8
  406c1e:	call   rax
  406c20:	mov    eax,0xffffffff
  406c25:	jmp    0x406b88
  406c2a:	nop    WORD PTR [rax+rax*1+0x0]
  406c30:	test   BYTE PTR [rdx+0x4],0x1
  406c34:	jne    0x406b31
  406c3a:	jmp    0x406b83
  406c3f:	nop
  406c40:	cmp    eax,0xc0000095
  406c45:	je     0x406b83
  406c4b:	cmp    eax,0xc0000096
  406c50:	jne    0x406ba2
  406c56:	xor    edx,edx
  406c58:	mov    ecx,0x4
  406c5d:	call   0x407500
  406c62:	cmp    rax,0x1
  406c66:	je     0x406cb4
  406c68:	test   rax,rax
  406c6b:	je     0x406ba2
  406c71:	mov    ecx,0x4
  406c76:	call   rax
  406c78:	mov    eax,0xffffffff
  406c7d:	jmp    0x406b88
  406c82:	mov    edx,0x1
  406c87:	mov    ecx,0x8
  406c8c:	call   0x407500
  406c91:	jmp    0x406b83
  406c96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406ca0:	mov    edx,0x1
  406ca5:	mov    ecx,0xb
  406caa:	call   0x407500
  406caf:	jmp    0x406b83
  406cb4:	mov    edx,0x1
  406cb9:	mov    ecx,0x4
  406cbe:	call   0x407500
  406cc3:	jmp    0x406b83
  406cc8:	nop
  406cc9:	nop
  406cca:	nop
  406ccb:	nop
  406ccc:	nop
  406ccd:	nop
  406cce:	nop
  406ccf:	nop
  406cd0:	push   rbp
  406cd1:	push   rdi
  406cd2:	push   rsi
  406cd3:	push   rbx
  406cd4:	sub    rsp,0x28
  406cd8:	lea    rcx,[rip+0x9d81]        # 0x410a60
  406cdf:	call   QWORD PTR [rip+0xa6a7]        # 0x41138c
  406ce5:	mov    rbx,QWORD PTR [rip+0x9d54]        # 0x410a40
  406cec:	test   rbx,rbx
  406cef:	je     0x406d24
  406cf1:	mov    rbp,QWORD PTR [rip+0xa74c]        # 0x411444
  406cf8:	mov    rdi,QWORD PTR [rip+0xa6b5]        # 0x4113b4
  406cff:	nop
  406d00:	mov    ecx,DWORD PTR [rbx]
  406d02:	call   rbp
  406d04:	mov    rsi,rax
  406d07:	call   rdi
  406d09:	test   eax,eax
  406d0b:	jne    0x406d1b
  406d0d:	test   rsi,rsi
  406d10:	je     0x406d1b
  406d12:	mov    rax,QWORD PTR [rbx+0x8]
  406d16:	mov    rcx,rsi
  406d19:	call   rax
  406d1b:	mov    rbx,QWORD PTR [rbx+0x10]
  406d1f:	test   rbx,rbx
  406d22:	jne    0x406d00
  406d24:	mov    rax,QWORD PTR [rip+0xa6c9]        # 0x4113f4
  406d2b:	lea    rcx,[rip+0x9d2e]        # 0x410a60
  406d32:	add    rsp,0x28
  406d36:	pop    rbx
  406d37:	pop    rsi
  406d38:	pop    rdi
  406d39:	pop    rbp
  406d3a:	rex.W jmp rax
  406d3d:	nop    DWORD PTR [rax]
  406d40:	push   rdi
  406d41:	push   rsi
  406d42:	push   rbx
  406d43:	sub    rsp,0x20
  406d47:	mov    eax,DWORD PTR [rip+0x9cfb]        # 0x410a48
  406d4d:	test   eax,eax
  406d4f:	jne    0x406d60
  406d51:	add    rsp,0x20
  406d55:	pop    rbx
  406d56:	pop    rsi
  406d57:	pop    rdi
  406d58:	ret    
  406d59:	nop    DWORD PTR [rax+0x0]
  406d60:	mov    rsi,rdx
  406d63:	mov    edi,ecx
  406d65:	mov    edx,0x18
  406d6a:	mov    ecx,0x1
  406d6f:	call   0x4075b8
  406d74:	test   rax,rax
  406d77:	mov    rbx,rax
  406d7a:	je     0x406db8
  406d7c:	mov    DWORD PTR [rax],edi
  406d7e:	mov    QWORD PTR [rax+0x8],rsi
  406d82:	lea    rcx,[rip+0x9cd7]        # 0x410a60
  406d89:	call   QWORD PTR [rip+0xa5fd]        # 0x41138c
  406d8f:	mov    rax,QWORD PTR [rip+0x9caa]        # 0x410a40
  406d96:	lea    rcx,[rip+0x9cc3]        # 0x410a60
  406d9d:	mov    QWORD PTR [rip+0x9c9c],rbx        # 0x410a40
  406da4:	mov    QWORD PTR [rbx+0x10],rax
  406da8:	call   QWORD PTR [rip+0xa646]        # 0x4113f4
  406dae:	xor    eax,eax
  406db0:	add    rsp,0x20
  406db4:	pop    rbx
  406db5:	pop    rsi
  406db6:	pop    rdi
  406db7:	ret    
  406db8:	mov    eax,0xffffffff
  406dbd:	jmp    0x406d51
  406dbf:	nop
  406dc0:	push   rbx
  406dc1:	sub    rsp,0x20
  406dc5:	mov    eax,DWORD PTR [rip+0x9c7d]        # 0x410a48
  406dcb:	test   eax,eax
  406dcd:	jne    0x406de0
  406dcf:	xor    eax,eax
  406dd1:	add    rsp,0x20
  406dd5:	pop    rbx
  406dd6:	ret    
  406dd7:	nop    WORD PTR [rax+rax*1+0x0]
  406de0:	mov    ebx,ecx
  406de2:	lea    rcx,[rip+0x9c77]        # 0x410a60
  406de9:	call   QWORD PTR [rip+0xa59d]        # 0x41138c
  406def:	mov    rdx,QWORD PTR [rip+0x9c4a]        # 0x410a40
  406df6:	test   rdx,rdx
  406df9:	je     0x406e17
  406dfb:	mov    eax,DWORD PTR [rdx]
  406dfd:	cmp    eax,ebx
  406dff:	jne    0x406e0e
  406e01:	jmp    0x406e4f
  406e03:	mov    r8d,DWORD PTR [rax]
  406e06:	cmp    r8d,ebx
  406e09:	je     0x406e30
  406e0b:	mov    rdx,rax
  406e0e:	mov    rax,QWORD PTR [rdx+0x10]
  406e12:	test   rax,rax
  406e15:	jne    0x406e03
  406e17:	lea    rcx,[rip+0x9c42]        # 0x410a60
  406e1e:	call   QWORD PTR [rip+0xa5d0]        # 0x4113f4
  406e24:	xor    eax,eax
  406e26:	add    rsp,0x20
  406e2a:	pop    rbx
  406e2b:	ret    
  406e2c:	nop    DWORD PTR [rax+0x0]
  406e30:	mov    rcx,rax
  406e33:	mov    rax,QWORD PTR [rax+0x10]
  406e37:	mov    QWORD PTR [rdx+0x10],rax
  406e3b:	call   0x407578
  406e40:	lea    rcx,[rip+0x9c19]        # 0x410a60
  406e47:	call   QWORD PTR [rip+0xa5a7]        # 0x4113f4
  406e4d:	jmp    0x406e24
  406e4f:	mov    rax,QWORD PTR [rdx+0x10]
  406e53:	mov    rcx,rdx
  406e56:	mov    QWORD PTR [rip+0x9be3],rax        # 0x410a40
  406e5d:	jmp    0x406e3b
  406e5f:	nop
  406e60:	push   rbx
  406e61:	sub    rsp,0x20
  406e65:	cmp    edx,0x1
  406e68:	je     0x406f00
  406e6e:	jb     0x406ea0
  406e70:	cmp    edx,0x2
  406e73:	je     0x406e90
  406e75:	cmp    edx,0x3
  406e78:	jne    0x406e95
  406e7a:	mov    eax,DWORD PTR [rip+0x9bc8]        # 0x410a48
  406e80:	test   eax,eax
  406e82:	je     0x406e95
  406e84:	call   0x406cd0
  406e89:	jmp    0x406e95
  406e8b:	nop    DWORD PTR [rax+rax*1+0x0]
  406e90:	call   0x406360
  406e95:	mov    eax,0x1
  406e9a:	add    rsp,0x20
  406e9e:	pop    rbx
  406e9f:	ret    
  406ea0:	mov    eax,DWORD PTR [rip+0x9ba2]        # 0x410a48
  406ea6:	test   eax,eax
  406ea8:	jne    0x406f30
  406eae:	mov    eax,DWORD PTR [rip+0x9b94]        # 0x410a48
  406eb4:	cmp    eax,0x1
  406eb7:	jne    0x406e95
  406eb9:	mov    rcx,QWORD PTR [rip+0x9b80]        # 0x410a40
  406ec0:	test   rcx,rcx
  406ec3:	je     0x406ed6
  406ec5:	mov    rbx,QWORD PTR [rcx+0x10]
  406ec9:	call   0x407578
  406ece:	test   rbx,rbx
  406ed1:	mov    rcx,rbx
  406ed4:	jne    0x406ec5
  406ed6:	lea    rcx,[rip+0x9b83]        # 0x410a60
  406edd:	mov    QWORD PTR [rip+0x9b58],0x0        # 0x410a40
  406ee8:	mov    DWORD PTR [rip+0x9b56],0x0        # 0x410a48
  406ef2:	call   QWORD PTR [rip+0xa48c]        # 0x411384
  406ef8:	jmp    0x406e95
  406efa:	nop    WORD PTR [rax+rax*1+0x0]
  406f00:	mov    eax,DWORD PTR [rip+0x9b42]        # 0x410a48
  406f06:	test   eax,eax
  406f08:	je     0x406f20
  406f0a:	mov    eax,0x1
  406f0f:	mov    DWORD PTR [rip+0x9b2f],0x1        # 0x410a48
  406f19:	add    rsp,0x20
  406f1d:	pop    rbx
  406f1e:	ret    
  406f1f:	nop
  406f20:	lea    rcx,[rip+0x9b39]        # 0x410a60
  406f27:	call   QWORD PTR [rip+0xa4bf]        # 0x4113ec
  406f2d:	jmp    0x406f0a
  406f2f:	nop
  406f30:	call   0x406cd0
  406f35:	jmp    0x406eae
  406f3a:	nop
  406f3b:	nop
  406f3c:	nop
  406f3d:	nop
  406f3e:	nop
  406f3f:	nop
  406f40:	movsxd rax,DWORD PTR [rcx+0x3c]
  406f44:	add    rcx,rax
  406f47:	xor    eax,eax
  406f49:	cmp    DWORD PTR [rcx],0x4550
  406f4f:	je     0x406f53
  406f51:	repz ret 
  406f53:	xor    eax,eax
  406f55:	cmp    WORD PTR [rcx+0x18],0x20b
  406f5b:	sete   al
  406f5e:	ret    
  406f5f:	nop
  406f60:	cmp    WORD PTR [rcx],0x5a4d
  406f65:	je     0x406f70
  406f67:	xor    eax,eax
  406f69:	ret    
  406f6a:	nop    WORD PTR [rax+rax*1+0x0]
  406f70:	jmp    0x406f40
  406f72:	nop    DWORD PTR [rax+0x0]
  406f76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406f80:	movsxd rax,DWORD PTR [rcx+0x3c]
  406f84:	add    rcx,rax
  406f87:	movzx  eax,WORD PTR [rcx+0x14]
  406f8b:	lea    rax,[rcx+rax*1+0x18]
  406f90:	movzx  ecx,WORD PTR [rcx+0x6]
  406f94:	test   ecx,ecx
  406f96:	je     0x406fc1
  406f98:	sub    ecx,0x1
  406f9b:	lea    rcx,[rcx+rcx*4]
  406f9f:	lea    r9,[rax+rcx*8+0x28]
  406fa4:	mov    r8d,DWORD PTR [rax+0xc]
  406fa8:	cmp    r8,rdx
  406fab:	mov    rcx,r8
  406fae:	ja     0x406fb8
  406fb0:	add    ecx,DWORD PTR [rax+0x8]
  406fb3:	cmp    rdx,rcx
  406fb6:	jb     0x406fc3
  406fb8:	add    rax,0x28
  406fbc:	cmp    rax,r9
  406fbf:	jne    0x406fa4
  406fc1:	xor    eax,eax
  406fc3:	repz ret 
  406fc5:	nop
  406fc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406fd0:	push   rdi
  406fd1:	push   rsi
  406fd2:	push   rbx
  406fd3:	sub    rsp,0x20
  406fd7:	mov    rsi,rcx
  406fda:	call   0x4074c8
  406fdf:	cmp    rax,0x8
  406fe3:	ja     0x407000
  406fe5:	mov    rbx,QWORD PTR [rip+0x6214]        # 0x40d200
  406fec:	xor    edi,edi
  406fee:	cmp    WORD PTR [rbx],0x5a4d
  406ff3:	je     0x407010
  406ff5:	mov    rax,rdi
  406ff8:	add    rsp,0x20
  406ffc:	pop    rbx
  406ffd:	pop    rsi
  406ffe:	pop    rdi
  406fff:	ret    
  407000:	xor    edi,edi
  407002:	mov    rax,rdi
  407005:	add    rsp,0x20
  407009:	pop    rbx
  40700a:	pop    rsi
  40700b:	pop    rdi
  40700c:	ret    
  40700d:	nop    DWORD PTR [rax]
  407010:	mov    rcx,rbx
  407013:	call   0x406f40
  407018:	test   eax,eax
  40701a:	je     0x406ff5
  40701c:	movsxd rdx,DWORD PTR [rbx+0x3c]
  407020:	add    rdx,rbx
  407023:	movzx  eax,WORD PTR [rdx+0x14]
  407027:	lea    rbx,[rdx+rax*1+0x18]
  40702c:	movzx  eax,WORD PTR [rdx+0x6]
  407030:	test   eax,eax
  407032:	je     0x406ff5
  407034:	sub    eax,0x1
  407037:	lea    rax,[rax+rax*4]
  40703b:	lea    rdi,[rbx+rax*8+0x28]
  407040:	jmp    0x40704b
  407042:	add    rbx,0x28
  407046:	cmp    rbx,rdi
  407049:	je     0x407000
  40704b:	mov    r8d,0x8
  407051:	mov    rdx,rsi
  407054:	mov    rcx,rbx
  407057:	call   0x4074c0
  40705c:	test   eax,eax
  40705e:	jne    0x407042
  407060:	mov    rdi,rbx
  407063:	mov    rax,rdi
  407066:	add    rsp,0x20
  40706a:	pop    rbx
  40706b:	pop    rsi
  40706c:	pop    rdi
  40706d:	ret    
  40706e:	xchg   ax,ax
  407070:	push   rsi
  407071:	push   rbx
  407072:	sub    rsp,0x28
  407076:	mov    rbx,QWORD PTR [rip+0x6183]        # 0x40d200
  40707d:	cmp    WORD PTR [rbx],0x5a4d
  407082:	je     0x407090
  407084:	xor    eax,eax
  407086:	add    rsp,0x28
  40708a:	pop    rbx
  40708b:	pop    rsi
  40708c:	ret    
  40708d:	nop    DWORD PTR [rax]
  407090:	mov    rsi,rcx
  407093:	mov    rcx,rbx
  407096:	call   0x406f40
  40709b:	test   eax,eax
  40709d:	je     0x407084
  40709f:	sub    rsi,rbx
  4070a2:	mov    rcx,rbx
  4070a5:	mov    rdx,rsi
  4070a8:	add    rsp,0x28
  4070ac:	pop    rbx
  4070ad:	pop    rsi
  4070ae:	jmp    0x406f80
  4070b3:	nop    DWORD PTR [rax]
  4070b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4070c0:	push   rbx
  4070c1:	sub    rsp,0x20
  4070c5:	mov    rbx,QWORD PTR [rip+0x6134]        # 0x40d200
  4070cc:	xor    eax,eax
  4070ce:	cmp    WORD PTR [rbx],0x5a4d
  4070d3:	je     0x4070e0
  4070d5:	add    rsp,0x20
  4070d9:	pop    rbx
  4070da:	ret    
  4070db:	nop    DWORD PTR [rax+rax*1+0x0]
  4070e0:	mov    rcx,rbx
  4070e3:	call   0x406f40
  4070e8:	test   eax,eax
  4070ea:	je     0x4070d5
  4070ec:	movsxd rax,DWORD PTR [rbx+0x3c]
  4070f0:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  4070f5:	add    rsp,0x20
  4070f9:	pop    rbx
  4070fa:	ret    
  4070fb:	nop    DWORD PTR [rax+rax*1+0x0]
  407100:	push   rdi
  407101:	push   rsi
  407102:	push   rbx
  407103:	sub    rsp,0x20
  407107:	mov    rsi,QWORD PTR [rip+0x60f2]        # 0x40d200
  40710e:	xor    edi,edi
  407110:	mov    rbx,rcx
  407113:	cmp    WORD PTR [rsi],0x5a4d
  407118:	je     0x407125
  40711a:	mov    rax,rdi
  40711d:	add    rsp,0x20
  407121:	pop    rbx
  407122:	pop    rsi
  407123:	pop    rdi
  407124:	ret    
  407125:	mov    rcx,rsi
  407128:	call   0x406f40
  40712d:	test   eax,eax
  40712f:	je     0x40711a
  407131:	movsxd rax,DWORD PTR [rsi+0x3c]
  407135:	add    rsi,rax
  407138:	movzx  eax,WORD PTR [rsi+0x14]
  40713c:	lea    rdx,[rsi+rax*1+0x18]
  407141:	movzx  eax,WORD PTR [rsi+0x6]
  407145:	test   eax,eax
  407147:	je     0x40711a
  407149:	sub    eax,0x1
  40714c:	lea    rax,[rax+rax*4]
  407150:	lea    rax,[rdx+rax*8+0x28]
  407155:	test   BYTE PTR [rdx+0x27],0x20
  407159:	je     0x407164
  40715b:	test   rbx,rbx
  40715e:	je     0x407180
  407160:	sub    rbx,0x1
  407164:	add    rdx,0x28
  407168:	cmp    rdx,rax
  40716b:	jne    0x407155
  40716d:	xor    edi,edi
  40716f:	mov    rax,rdi
  407172:	add    rsp,0x20
  407176:	pop    rbx
  407177:	pop    rsi
  407178:	pop    rdi
  407179:	ret    
  40717a:	nop    WORD PTR [rax+rax*1+0x0]
  407180:	mov    rdi,rdx
  407183:	mov    rax,rdi
  407186:	add    rsp,0x20
  40718a:	pop    rbx
  40718b:	pop    rsi
  40718c:	pop    rdi
  40718d:	ret    
  40718e:	xchg   ax,ax
  407190:	push   rsi
  407191:	push   rbx
  407192:	sub    rsp,0x28
  407196:	mov    rsi,QWORD PTR [rip+0x6063]        # 0x40d200
  40719d:	xor    ebx,ebx
  40719f:	cmp    WORD PTR [rsi],0x5a4d
  4071a4:	je     0x4071b0
  4071a6:	mov    rax,rbx
  4071a9:	add    rsp,0x28
  4071ad:	pop    rbx
  4071ae:	pop    rsi
  4071af:	ret    
  4071b0:	mov    rcx,rsi
  4071b3:	call   0x406f40
  4071b8:	test   eax,eax
  4071ba:	cmovne rbx,rsi
  4071be:	mov    rax,rbx
  4071c1:	add    rsp,0x28
  4071c5:	pop    rbx
  4071c6:	pop    rsi
  4071c7:	ret    
  4071c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4071d0:	push   rsi
  4071d1:	push   rbx
  4071d2:	sub    rsp,0x28
  4071d6:	mov    rbx,QWORD PTR [rip+0x6023]        # 0x40d200
  4071dd:	xor    eax,eax
  4071df:	cmp    WORD PTR [rbx],0x5a4d
  4071e4:	je     0x4071f0
  4071e6:	add    rsp,0x28
  4071ea:	pop    rbx
  4071eb:	pop    rsi
  4071ec:	ret    
  4071ed:	nop    DWORD PTR [rax]
  4071f0:	mov    rsi,rcx
  4071f3:	mov    rcx,rbx
  4071f6:	call   0x406f40
  4071fb:	test   eax,eax
  4071fd:	je     0x4071e6
  4071ff:	sub    rsi,rbx
  407202:	mov    rcx,rbx
  407205:	mov    rdx,rsi
  407208:	call   0x406f80
  40720d:	test   rax,rax
  407210:	je     0x407221
  407212:	mov    eax,DWORD PTR [rax+0x24]
  407215:	not    eax
  407217:	shr    eax,0x1f
  40721a:	add    rsp,0x28
  40721e:	pop    rbx
  40721f:	pop    rsi
  407220:	ret    
  407221:	xor    eax,eax
  407223:	jmp    0x4071e6
  407225:	nop
  407226:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407230:	push   rbp
  407231:	push   rdi
  407232:	push   rsi
  407233:	push   rbx
  407234:	sub    rsp,0x28
  407238:	mov    rdi,QWORD PTR [rip+0x5fc1]        # 0x40d200
  40723f:	xor    ebp,ebp
  407241:	mov    esi,ecx
  407243:	cmp    WORD PTR [rdi],0x5a4d
  407248:	je     0x407260
  40724a:	mov    rax,rbp
  40724d:	add    rsp,0x28
  407251:	pop    rbx
  407252:	pop    rsi
  407253:	pop    rdi
  407254:	pop    rbp
  407255:	ret    
  407256:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407260:	mov    rcx,rdi
  407263:	call   0x406f40
  407268:	test   eax,eax
  40726a:	je     0x40724a
  40726c:	movsxd rax,DWORD PTR [rdi+0x3c]
  407270:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  407277:	test   edx,edx
  407279:	je     0x40724a
  40727b:	mov    ebx,edx
  40727d:	mov    rcx,rdi
  407280:	mov    rdx,rbx
  407283:	call   0x406f80
  407288:	test   rax,rax
  40728b:	je     0x40724a
  40728d:	add    rbx,rdi
  407290:	mov    rdx,rbx
  407293:	jne    0x4072a7
  407295:	jmp    0x40724a
  407297:	nop    WORD PTR [rax+rax*1+0x0]
  4072a0:	sub    esi,0x1
  4072a3:	add    rdx,0x14
  4072a7:	mov    ecx,DWORD PTR [rdx+0x4]
  4072aa:	test   ecx,ecx
  4072ac:	jne    0x4072b5
  4072ae:	mov    eax,DWORD PTR [rdx+0xc]
  4072b1:	test   eax,eax
  4072b3:	je     0x4072d0
  4072b5:	test   esi,esi
  4072b7:	jg     0x4072a0
  4072b9:	mov    ebp,DWORD PTR [rdx+0xc]
  4072bc:	add    rbp,rdi
  4072bf:	mov    rax,rbp
  4072c2:	add    rsp,0x28
  4072c6:	pop    rbx
  4072c7:	pop    rsi
  4072c8:	pop    rdi
  4072c9:	pop    rbp
  4072ca:	ret    
  4072cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4072d0:	xor    ebp,ebp
  4072d2:	mov    rax,rbp
  4072d5:	add    rsp,0x28
  4072d9:	pop    rbx
  4072da:	pop    rsi
  4072db:	pop    rdi
  4072dc:	pop    rbp
  4072dd:	ret    
  4072de:	nop
  4072df:	nop
  4072e0:	push   rcx
  4072e1:	push   rax
  4072e2:	cmp    rax,0x1000
  4072e8:	lea    rcx,[rsp+0x18]
  4072ed:	jb     0x407308
  4072ef:	sub    rcx,0x1000
  4072f6:	or     QWORD PTR [rcx],0x0
  4072fa:	sub    rax,0x1000
  407300:	cmp    rax,0x1000
  407306:	ja     0x4072ef
  407308:	sub    rcx,rax
  40730b:	or     QWORD PTR [rcx],0x0
  40730f:	pop    rax
  407310:	pop    rcx
  407311:	ret    
  407312:	nop
  407313:	nop
  407314:	nop
  407315:	nop
  407316:	nop
  407317:	nop
  407318:	nop
  407319:	nop
  40731a:	nop
  40731b:	nop
  40731c:	nop
  40731d:	nop
  40731e:	nop
  40731f:	nop
  407320:	push   rsi
  407321:	push   rbx
  407322:	sub    rsp,0xe8
  407329:	test   rdx,rdx
  40732c:	mov    rbx,rcx
  40732f:	mov    rsi,rdx
  407332:	je     0x407356
  407334:	lea    rcx,[rsp+0x30]
  407339:	call   QWORD PTR [rip+0xa09d]        # 0x4113dc
  40733f:	cmp    eax,0xffffffff
  407342:	je     0x4073b0
  407344:	mov    edx,DWORD PTR [rsp+0x30]
  407348:	cmp    eax,0x2
  40734b:	sete   al
  40734e:	movzx  eax,al
  407351:	mov    DWORD PTR [rsi],edx
  407353:	mov    DWORD PTR [rsi+0x4],eax
  407356:	test   rbx,rbx
  407359:	je     0x40739e
  40735b:	lea    rcx,[rsp+0x20]
  407360:	call   QWORD PTR [rip+0xa05e]        # 0x4113c4
  407366:	movabs r8,0xfe624e212ac18000
  407370:	add    r8,QWORD PTR [rsp+0x20]
  407375:	movabs rdx,0xd6bf94d5e57a42bd
  40737f:	mov    rax,r8
  407382:	mul    rdx
  407385:	shr    rdx,0x17
  407389:	mov    QWORD PTR [rbx],rdx
  40738c:	imul   rdx,rdx,0x989680
  407393:	sub    r8,rdx
  407396:	imul   r8d,r8d,0x64
  40739a:	mov    DWORD PTR [rbx+0x8],r8d
  40739e:	xor    eax,eax
  4073a0:	add    rsp,0xe8
  4073a7:	pop    rbx
  4073a8:	pop    rsi
  4073a9:	ret    
  4073aa:	nop    WORD PTR [rax+rax*1+0x0]
  4073b0:	mov    DWORD PTR [rsi],0x0
  4073b6:	mov    DWORD PTR [rsi+0x4],0x0
  4073bd:	jmp    0x407356
  4073bf:	nop
  4073c0:	push   rbx
  4073c1:	sub    rsp,0x30
  4073c5:	mov    rbx,rcx
  4073c8:	lea    rcx,[rsp+0x20]
  4073cd:	call   0x407320
  4073d2:	test   eax,eax
  4073d4:	mov    r9d,eax
  4073d7:	jne    0x407405
  4073d9:	mov    rax,QWORD PTR [rsp+0x20]
  4073de:	mov    r8d,DWORD PTR [rsp+0x28]
  4073e3:	mov    edx,0x10624dd3
  4073e8:	mov    DWORD PTR [rbx],eax
  4073ea:	mov    eax,r8d
  4073ed:	sar    r8d,0x1f
  4073f1:	imul   edx
  4073f3:	sar    edx,0x6
  4073f6:	sub    edx,r8d
  4073f9:	mov    DWORD PTR [rbx+0x4],edx
  4073fc:	mov    eax,r9d
  4073ff:	add    rsp,0x30
  407403:	pop    rbx
  407404:	ret    
  407405:	mov    r9d,0xffffffff
  40740b:	jmp    0x4073fc
  40740d:	nop    DWORD PTR [rax]
  407410:	push   rbx
  407411:	sub    rsp,0x30
  407415:	mov    rbx,rcx
  407418:	lea    rcx,[rsp+0x20]
  40741d:	call   0x407320
  407422:	test   eax,eax
  407424:	mov    r9d,eax
  407427:	jne    0x407455
  407429:	mov    rax,QWORD PTR [rsp+0x20]
  40742e:	mov    r8d,DWORD PTR [rsp+0x28]
  407433:	mov    edx,0x10624dd3
  407438:	mov    DWORD PTR [rbx],eax
  40743a:	mov    eax,r8d
  40743d:	sar    r8d,0x1f
  407441:	imul   edx
  407443:	sar    edx,0x6
  407446:	sub    edx,r8d
  407449:	mov    DWORD PTR [rbx+0x4],edx
  40744c:	mov    eax,r9d
  40744f:	add    rsp,0x30
  407453:	pop    rbx
  407454:	ret    
  407455:	mov    r9d,0xffffffff
  40745b:	jmp    0x40744c
  40745d:	nop
  40745e:	nop
  40745f:	nop
  407460:	jmp    QWORD PTR [rip+0xa226]        # 0x41168c
  407466:	nop
  407467:	nop
  407468:	jmp    QWORD PTR [rip+0xa216]        # 0x411684
  40746e:	nop
  40746f:	nop
  407470:	jmp    QWORD PTR [rip+0xa206]        # 0x41167c
  407476:	nop
  407477:	nop
  407478:	jmp    QWORD PTR [rip+0xa1f6]        # 0x411674
  40747e:	nop
  40747f:	nop
  407480:	jmp    QWORD PTR [rip+0xa1e6]        # 0x41166c
  407486:	nop
  407487:	nop
  407488:	jmp    QWORD PTR [rip+0xa1d6]        # 0x411664
  40748e:	nop
  40748f:	nop
  407490:	jmp    QWORD PTR [rip+0xa1c6]        # 0x41165c
  407496:	nop
  407497:	nop
  407498:	jmp    QWORD PTR [rip+0xa1b6]        # 0x411654
  40749e:	nop
  40749f:	nop
  4074a0:	jmp    QWORD PTR [rip+0xa1a6]        # 0x41164c
  4074a6:	nop
  4074a7:	nop
  4074a8:	jmp    QWORD PTR [rip+0xa196]        # 0x411644
  4074ae:	nop
  4074af:	nop
  4074b0:	jmp    QWORD PTR [rip+0xa186]        # 0x41163c
  4074b6:	nop
  4074b7:	nop
  4074b8:	jmp    QWORD PTR [rip+0xa176]        # 0x411634
  4074be:	nop
  4074bf:	nop
  4074c0:	jmp    QWORD PTR [rip+0xa166]        # 0x41162c
  4074c6:	nop
  4074c7:	nop
  4074c8:	jmp    QWORD PTR [rip+0xa156]        # 0x411624
  4074ce:	nop
  4074cf:	nop
  4074d0:	jmp    QWORD PTR [rip+0xa146]        # 0x41161c
  4074d6:	nop
  4074d7:	nop
  4074d8:	jmp    QWORD PTR [rip+0xa136]        # 0x411614
  4074de:	nop
  4074df:	nop
  4074e0:	jmp    QWORD PTR [rip+0xa126]        # 0x41160c
  4074e6:	nop
  4074e7:	nop
  4074e8:	jmp    QWORD PTR [rip+0xa116]        # 0x411604
  4074ee:	nop
  4074ef:	nop
  4074f0:	jmp    QWORD PTR [rip+0xa106]        # 0x4115fc
  4074f6:	nop
  4074f7:	nop
  4074f8:	jmp    QWORD PTR [rip+0xa0f6]        # 0x4115f4
  4074fe:	nop
  4074ff:	nop
  407500:	jmp    QWORD PTR [rip+0xa0e6]        # 0x4115ec
  407506:	nop
  407507:	nop
  407508:	jmp    QWORD PTR [rip+0xa0d6]        # 0x4115e4
  40750e:	nop
  40750f:	nop
  407510:	jmp    QWORD PTR [rip+0xa0c6]        # 0x4115dc
  407516:	nop
  407517:	nop
  407518:	jmp    QWORD PTR [rip+0xa0b6]        # 0x4115d4
  40751e:	nop
  40751f:	nop
  407520:	jmp    QWORD PTR [rip+0xa0a6]        # 0x4115cc
  407526:	nop
  407527:	nop
  407528:	jmp    QWORD PTR [rip+0xa096]        # 0x4115c4
  40752e:	nop
  40752f:	nop
  407530:	jmp    QWORD PTR [rip+0xa086]        # 0x4115bc
  407536:	nop
  407537:	nop
  407538:	jmp    QWORD PTR [rip+0xa076]        # 0x4115b4
  40753e:	nop
  40753f:	nop
  407540:	jmp    QWORD PTR [rip+0xa066]        # 0x4115ac
  407546:	nop
  407547:	nop
  407548:	jmp    QWORD PTR [rip+0xa056]        # 0x4115a4
  40754e:	nop
  40754f:	nop
  407550:	jmp    QWORD PTR [rip+0xa046]        # 0x41159c
  407556:	nop
  407557:	nop
  407558:	jmp    QWORD PTR [rip+0xa036]        # 0x411594
  40755e:	nop
  40755f:	nop
  407560:	jmp    QWORD PTR [rip+0xa026]        # 0x41158c
  407566:	nop
  407567:	nop
  407568:	jmp    QWORD PTR [rip+0xa016]        # 0x411584
  40756e:	nop
  40756f:	nop
  407570:	jmp    QWORD PTR [rip+0xa006]        # 0x41157c
  407576:	nop
  407577:	nop
  407578:	jmp    QWORD PTR [rip+0x9ff6]        # 0x411574
  40757e:	nop
  40757f:	nop
  407580:	jmp    QWORD PTR [rip+0x9fe6]        # 0x41156c
  407586:	nop
  407587:	nop
  407588:	jmp    QWORD PTR [rip+0x9fd6]        # 0x411564
  40758e:	nop
  40758f:	nop
  407590:	jmp    QWORD PTR [rip+0x9fc6]        # 0x41155c
  407596:	nop
  407597:	nop
  407598:	jmp    QWORD PTR [rip+0x9fb6]        # 0x411554
  40759e:	nop
  40759f:	nop
  4075a0:	jmp    QWORD PTR [rip+0x9fa6]        # 0x41154c
  4075a6:	nop
  4075a7:	nop
  4075a8:	jmp    QWORD PTR [rip+0x9f96]        # 0x411544
  4075ae:	nop
  4075af:	nop
  4075b0:	jmp    QWORD PTR [rip+0x9f86]        # 0x41153c
  4075b6:	nop
  4075b7:	nop
  4075b8:	jmp    QWORD PTR [rip+0x9f76]        # 0x411534
  4075be:	nop
  4075bf:	nop
  4075c0:	jmp    QWORD PTR [rip+0x9f66]        # 0x41152c
  4075c6:	nop
  4075c7:	nop
  4075c8:	jmp    QWORD PTR [rip+0x9f56]        # 0x411524
  4075ce:	nop
  4075cf:	nop
  4075d0:	jmp    QWORD PTR [rip+0x9f46]        # 0x41151c
  4075d6:	nop
  4075d7:	nop
  4075d8:	jmp    QWORD PTR [rip+0x9f36]        # 0x411514
  4075de:	nop
  4075df:	nop
  4075e0:	jmp    QWORD PTR [rip+0x9f26]        # 0x41150c
  4075e6:	nop
  4075e7:	nop
  4075e8:	jmp    QWORD PTR [rip+0x9f16]        # 0x411504
  4075ee:	nop
  4075ef:	nop
  4075f0:	jmp    QWORD PTR [rip+0x9f06]        # 0x4114fc
  4075f6:	nop
  4075f7:	nop
  4075f8:	jmp    QWORD PTR [rip+0x9ef6]        # 0x4114f4
  4075fe:	nop
  4075ff:	nop
  407600:	jmp    QWORD PTR [rip+0x9ee6]        # 0x4114ec
  407606:	nop
  407607:	nop
  407608:	jmp    QWORD PTR [rip+0x9ece]        # 0x4114dc
  40760e:	nop
  40760f:	nop
  407610:	jmp    QWORD PTR [rip+0x9ebe]        # 0x4114d4
  407616:	nop
  407617:	nop
  407618:	jmp    QWORD PTR [rip+0x9eae]        # 0x4114cc
  40761e:	nop
  40761f:	nop
  407620:	jmp    QWORD PTR [rip+0x9e9e]        # 0x4114c4
  407626:	nop
  407627:	nop
  407628:	jmp    QWORD PTR [rip+0x9e8e]        # 0x4114bc
  40762e:	nop
  40762f:	nop
  407630:	jmp    QWORD PTR [rip+0x9e76]        # 0x4114ac
  407636:	nop
  407637:	nop
  407638:	jmp    QWORD PTR [rip+0x9e66]        # 0x4114a4
  40763e:	nop
  40763f:	nop
  407640:	jmp    QWORD PTR [rip+0x9e56]        # 0x41149c
  407646:	nop
  407647:	nop
  407648:	jmp    QWORD PTR [rip+0x9e46]        # 0x411494
  40764e:	nop
  40764f:	nop
  407650:	jmp    QWORD PTR [rip+0x9e2e]        # 0x411484
  407656:	nop
  407657:	nop
  407658:	jmp    QWORD PTR [rip+0x9e1e]        # 0x41147c
  40765e:	nop
  40765f:	nop
  407660:	jmp    QWORD PTR [rip+0x9e0e]        # 0x411474
  407666:	nop
  407667:	nop
  407668:	nop    DWORD PTR [rax+rax*1+0x0]
  407670:	mov    rax,QWORD PTR [rip+0x9439]        # 0x410ab0
  407677:	ret    
  407678:	nop    DWORD PTR [rax+rax*1+0x0]
  407680:	mov    rax,rcx
  407683:	xchg   QWORD PTR [rip+0x9426],rax        # 0x410ab0
  40768a:	ret    
  40768b:	nop
  40768c:	nop
  40768d:	nop
  40768e:	nop
  40768f:	nop
  407690:	jmp    QWORD PTR [rip+0x9dce]        # 0x411464
  407696:	nop
  407697:	nop
  407698:	jmp    QWORD PTR [rip+0x9dbe]        # 0x41145c
  40769e:	nop
  40769f:	nop
  4076a0:	jmp    QWORD PTR [rip+0x9dae]        # 0x411454
  4076a6:	nop
  4076a7:	nop
  4076a8:	jmp    QWORD PTR [rip+0x9d9e]        # 0x41144c
  4076ae:	nop
  4076af:	nop
  4076b0:	jmp    QWORD PTR [rip+0x9d8e]        # 0x411444
  4076b6:	nop
  4076b7:	nop
  4076b8:	jmp    QWORD PTR [rip+0x9d7e]        # 0x41143c
  4076be:	nop
  4076bf:	nop
  4076c0:	jmp    QWORD PTR [rip+0x9d6e]        # 0x411434
  4076c6:	nop
  4076c7:	nop
  4076c8:	jmp    QWORD PTR [rip+0x9d5e]        # 0x41142c
  4076ce:	nop
  4076cf:	nop
  4076d0:	jmp    QWORD PTR [rip+0x9d4e]        # 0x411424
  4076d6:	nop
  4076d7:	nop
  4076d8:	jmp    QWORD PTR [rip+0x9d3e]        # 0x41141c
  4076de:	nop
  4076df:	nop
  4076e0:	jmp    QWORD PTR [rip+0x9d2e]        # 0x411414
  4076e6:	nop
  4076e7:	nop
  4076e8:	jmp    QWORD PTR [rip+0x9d1e]        # 0x41140c
  4076ee:	nop
  4076ef:	nop
  4076f0:	jmp    QWORD PTR [rip+0x9d0e]        # 0x411404
  4076f6:	nop
  4076f7:	nop
  4076f8:	jmp    QWORD PTR [rip+0x9cfe]        # 0x4113fc
  4076fe:	nop
  4076ff:	nop
  407700:	jmp    QWORD PTR [rip+0x9cee]        # 0x4113f4
  407706:	nop
  407707:	nop
  407708:	jmp    QWORD PTR [rip+0x9cde]        # 0x4113ec
  40770e:	nop
  40770f:	nop
  407710:	jmp    QWORD PTR [rip+0x9cce]        # 0x4113e4
  407716:	nop
  407717:	nop
  407718:	jmp    QWORD PTR [rip+0x9cbe]        # 0x4113dc
  40771e:	nop
  40771f:	nop
  407720:	jmp    QWORD PTR [rip+0x9cae]        # 0x4113d4
  407726:	nop
  407727:	nop
  407728:	jmp    QWORD PTR [rip+0x9c9e]        # 0x4113cc
  40772e:	nop
  40772f:	nop
  407730:	jmp    QWORD PTR [rip+0x9c8e]        # 0x4113c4
  407736:	nop
  407737:	nop
  407738:	jmp    QWORD PTR [rip+0x9c7e]        # 0x4113bc
  40773e:	nop
  40773f:	nop
  407740:	jmp    QWORD PTR [rip+0x9c6e]        # 0x4113b4
  407746:	nop
  407747:	nop
  407748:	jmp    QWORD PTR [rip+0x9c5e]        # 0x4113ac
  40774e:	nop
  40774f:	nop
  407750:	jmp    QWORD PTR [rip+0x9c4e]        # 0x4113a4
  407756:	nop
  407757:	nop
  407758:	jmp    QWORD PTR [rip+0x9c3e]        # 0x41139c
  40775e:	nop
  40775f:	nop
  407760:	jmp    QWORD PTR [rip+0x9c2e]        # 0x411394
  407766:	nop
  407767:	nop
  407768:	jmp    QWORD PTR [rip+0x9c1e]        # 0x41138c
  40776e:	nop
  40776f:	nop
  407770:	jmp    QWORD PTR [rip+0x9c0e]        # 0x411384
  407776:	nop
  407777:	nop
  407778:	jmp    QWORD PTR [rip+0x9bfe]        # 0x41137c
  40777e:	nop
  40777f:	nop
  407780:	jmp    QWORD PTR [rip+0x9bee]        # 0x411374
  407786:	nop
  407787:	nop
  407788:	jmp    QWORD PTR [rip+0x9bde]        # 0x41136c
  40778e:	nop
  40778f:	nop
  407790:	push   r15
  407792:	push   r14
  407794:	push   r13
  407796:	push   r12
  407798:	push   rbp
  407799:	push   rdi
  40779a:	push   rsi
  40779b:	push   rbx
  40779c:	sub    rsp,0x88
  4077a3:	xor    r12d,r12d
  4077a6:	mov    DWORD PTR [rsp+0xd0],ecx
  4077ad:	mov    QWORD PTR [rsp+0xd8],rdx
  4077b5:	call   0x405f30
  4077ba:	mov    rax,QWORD PTR [rsp+0xd8]
  4077c2:	lea    rdx,[rip+0x3978]        # 0x40b141
  4077c9:	mov    ecx,0x2
  4077ce:	mov    rax,QWORD PTR [rax]
  4077d1:	mov    QWORD PTR [rip+0x8888],rax        # 0x410060
  4077d8:	call   0x407508
  4077dd:	lea    rdx,[rsp+0xd8]
  4077e5:	lea    rcx,[rsp+0xd0]
  4077ed:	call   0x401fc0
  4077f2:	movsxd rcx,DWORD PTR [rsp+0xd0]
  4077fa:	shl    rcx,0x3
  4077fe:	call   0x4057b0
  407803:	movsxd rcx,DWORD PTR [rsp+0xd0]
  40780b:	mov    rbx,rax
  40780e:	shl    rcx,0x2
  407812:	call   0x4057b0
  407817:	movsxd rcx,DWORD PTR [rsp+0xd0]
  40781f:	mov    rbp,rax
  407822:	shl    rcx,0x2
  407826:	call   0x4057b0
  40782b:	mov    ecx,DWORD PTR [rsp+0xd0]
  407832:	mov    rsi,rax
  407835:	mov    r15,QWORD PTR [rsp+0xd8]
  40783d:	test   ecx,ecx
  40783f:	jle    0x4078a1
  407841:	xor    edi,edi
  407843:	xor    r12d,r12d
  407846:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407850:	mov    rcx,QWORD PTR [r15+rdi*8]
  407854:	call   0x4074c8
  407859:	lea    rcx,[rax+0x1]
  40785d:	mov    r13,rax
  407860:	add    r12d,r13d
  407863:	call   0x4057b0
  407868:	mov    r15,QWORD PTR [rsp+0xd8]
  407870:	mov    rcx,rax
  407873:	mov    rdx,QWORD PTR [r15+rdi*8]
  407877:	call   0x4074d8
  40787c:	mov    ecx,DWORD PTR [rsp+0xd0]
  407883:	mov    QWORD PTR [rbx+rdi*8],rax
  407887:	lea    eax,[rdi+0x1]
  40788a:	mov    DWORD PTR [rbp+rdi*4+0x0],0x0
  407892:	mov    DWORD PTR [rsi+rdi*4],0x1
  407899:	add    rdi,0x1
  40789d:	cmp    ecx,eax
  40789f:	jg     0x407850
  4078a1:	mov    rdi,QWORD PTR [rip+0x5ae8]        # 0x40d390
  4078a8:	mov    rax,QWORD PTR [rip+0x5af1]        # 0x40d3a0
  4078af:	xor    r14d,r14d
  4078b2:	mov    DWORD PTR [rsp+0x3c],0x0
  4078ba:	mov    QWORD PTR [rsp+0x40],0x0
  4078c3:	xor    r13d,r13d
  4078c6:	mov    DWORD PTR [rsp+0x50],0x0
  4078ce:	mov    rdx,r15
  4078d1:	mov    DWORD PTR [rax],0x0
  4078d7:	mov    QWORD PTR [rsp+0x48],rdi
  4078dc:	mov    QWORD PTR [rsp+0x60],rdi
  4078e1:	mov    QWORD PTR [rsp+0x68],rdi
  4078e6:	mov    QWORD PTR [rsp+0x70],rdi
  4078eb:	mov    QWORD PTR [rsp+0x78],rdi
  4078f0:	lea    r9,[rip+0x4709]        # 0x40c000
  4078f7:	lea    r8,[rip+0x4110]        # 0x40ba0e
  4078fe:	mov    QWORD PTR [rsp+0x20],0x0
  407907:	call   0x403820
  40790c:	cmp    eax,0xffffffff
  40790f:	je     0x407937
  407911:	xor    r15d,r15d
  407914:	cmp    eax,0x3f
  407917:	sete   r15b
  40791b:	sub    eax,0x3f
  40791e:	cmp    eax,0x75
  407921:	ja     0x4084bb
  407927:	lea    rdx,[rip+0x4356]        # 0x40bc84
  40792e:	movsxd rax,DWORD PTR [rdx+rax*4]
  407932:	add    rdx,rax
  407935:	jmp    rdx
  407937:	mov    rcx,QWORD PTR [rip+0x870a]        # 0x410048
  40793e:	test   rcx,rcx
  407941:	je     0x408b9d
  407947:	cmp    QWORD PTR [rip+0x8701],0x0        # 0x410050
  40794f:	je     0x408f7b
  407955:	cmp    QWORD PTR [rip+0x872b],0x0        # 0x410088
  40795d:	je     0x408f4b
  407963:	cmp    QWORD PTR [rip+0x870d],0x0        # 0x410078
  40796b:	je     0x408f63
  407971:	cmp    DWORD PTR [rsp+0x3c],0x0
  407976:	je     0x408c63
  40797c:	mov    rdi,QWORD PTR [rip+0x269d]        # 0x40a020
  407983:	lea    rdx,[rip+0x4132]        # 0x40babc
  40798a:	mov    rcx,rdi
  40798d:	call   0x4074a8
  407992:	test   rax,rax
  407995:	je     0x408db9
  40799b:	mov    DWORD PTR [rip+0x86cf],0x1        # 0x410074
  4079a5:	lea    rdx,[rip+0x411d]        # 0x40bac9
  4079ac:	mov    r8d,0x3
  4079b2:	mov    rcx,rdi
  4079b5:	call   0x4074c0
  4079ba:	test   eax,eax
  4079bc:	jne    0x408b2b
  4079c2:	mov    DWORD PTR [rip+0x86a4],0x3        # 0x410070
  4079cc:	cmp    DWORD PTR [rip+0x2649],0xffffffff        # 0x40a01c
  4079d3:	je     0x408cf4
  4079d9:	lea    eax,[r12+0x1]
  4079de:	mov    ecx,eax
  4079e0:	mov    DWORD PTR [rsp+0x48],eax
  4079e4:	call   0x402350
  4079e9:	cmp    DWORD PTR [rip+0x8668],0x0        # 0x410058
  4079f0:	mov    r12,rax
  4079f3:	jne    0x408c4f
  4079f9:	lea    rdx,[rip+0x40e7]        # 0x40bae7
  407a00:	mov    rcx,r12
  407a03:	xor    edi,edi
  407a05:	call   0x402700
  407a0a:	mov    rdx,QWORD PTR [rip+0x8637]        # 0x410048
  407a11:	mov    rcx,r12
  407a14:	call   0x402700
  407a19:	cmp    DWORD PTR [rsp+0xd0],0x1
  407a21:	jle    0x407a7f
  407a23:	mov    ecx,DWORD PTR [rbp+rdi*4+0x4]
  407a27:	test   ecx,ecx
  407a29:	je     0x407a6f
  407a2b:	mov    r15,QWORD PTR [rbx+rdi*8+0x8]
  407a30:	mov    edx,0x20
  407a35:	mov    rcx,r15
  407a38:	call   0x4074e8
  407a3d:	test   rax,rax
  407a40:	je     0x4085e0
  407a46:	lea    rdx,[rip+0x4233]        # 0x40bc80
  407a4d:	mov    rcx,r12
  407a50:	call   0x402700
  407a55:	mov    rdx,r15
  407a58:	mov    rcx,r12
  407a5b:	call   0x402700
  407a60:	lea    rdx,[rip+0x36d8]        # 0x40b13f
  407a67:	mov    rcx,r12
  407a6a:	call   0x402700
  407a6f:	lea    edx,[rdi+0x2]
  407a72:	add    rdi,0x1
  407a76:	cmp    DWORD PTR [rsp+0xd0],edx
  407a7d:	jg     0x407a23
  407a7f:	mov    ecx,DWORD PTR [rsp+0x48]
  407a83:	call   0x402350
  407a88:	test   r13,r13
  407a8b:	mov    rbp,rax
  407a8e:	je     0x407a97
  407a90:	cmp    BYTE PTR [r13+0x0],0x0
  407a95:	jne    0x407abe
  407a97:	mov    eax,DWORD PTR [rip+0x85d7]        # 0x410074
  407a9d:	lea    r13,[rip+0x369e]        # 0x40b142
  407aa4:	cmp    eax,0x1
  407aa7:	je     0x407abe
  407aa9:	cmp    eax,0x2
  407aac:	lea    r13,[rip+0x36a7]        # 0x40b15a
  407ab3:	lea    rax,[rip+0x36a6]        # 0x40b160
  407aba:	cmovne r13,rax
  407abe:	mov    rdx,r13
  407ac1:	mov    rcx,rbp
  407ac4:	call   0x402700
  407ac9:	lea    rdx,[rip+0x4023]        # 0x40baf3
  407ad0:	mov    rcx,rbp
  407ad3:	call   0x402700
  407ad8:	mov    rdx,QWORD PTR [rip+0x8571]        # 0x410050
  407adf:	mov    rcx,rbp
  407ae2:	call   0x402700
  407ae7:	mov    eax,DWORD PTR [rip+0x252f]        # 0x40a01c
  407aed:	test   eax,eax
  407aef:	je     0x408c12
  407af5:	sub    eax,0x1
  407af8:	je     0x408e3f
  407afe:	mov    rax,QWORD PTR [rip+0x857b]        # 0x410080
  407b05:	test   rax,rax
  407b08:	je     0x407b13
  407b0a:	cmp    BYTE PTR [rax],0x0
  407b0d:	jne    0x407bbc
  407b13:	lea    r8,[rip+0x3650]        # 0x40b16a
  407b1a:	cmp    DWORD PTR [rip+0x854f],0x1        # 0x410070
  407b21:	lea    rax,[rip+0x3644]        # 0x40b16c
  407b28:	lea    r15,[rip+0x3612]        # 0x40b141
  407b2f:	lea    r13,[rip+0x363a]        # 0x40b170
  407b36:	cmovbe r15,rax
  407b3a:	mov    eax,DWORD PTR [rip+0x8534]        # 0x410074
  407b40:	cmp    eax,0x1
  407b43:	je     0x407b5a
  407b45:	cmp    eax,0x2
  407b48:	lea    r13,[rip+0x3633]        # 0x40b182
  407b4f:	lea    rax,[rip+0x363e]        # 0x40b194
  407b56:	cmovne r13,rax
  407b5a:	or     r9,0xffffffffffffffff
  407b5e:	xor    eax,eax
  407b60:	mov    rdi,r13
  407b63:	mov    rcx,r9
  407b66:	repnz scas al,BYTE PTR es:[rdi]
  407b68:	mov    rdi,r8
  407b6b:	mov    QWORD PTR [rsp+0x48],r8
  407b70:	mov    r10,rcx
  407b73:	mov    rcx,r9
  407b76:	repnz scas al,BYTE PTR es:[rdi]
  407b78:	mov    rdi,r15
  407b7b:	not    rcx
  407b7e:	mov    rdx,rcx
  407b81:	mov    rcx,r9
  407b84:	repnz scas al,BYTE PTR es:[rdi]
  407b86:	sub    rdx,r10
  407b89:	mov    rax,rcx
  407b8c:	not    rax
  407b8f:	lea    rcx,[rdx+rax*1-0x3]
  407b94:	call   0x407550
  407b99:	mov    r8,QWORD PTR [rsp+0x48]
  407b9e:	lea    rdx,[rip+0x3f82]        # 0x40bb27
  407ba5:	mov    QWORD PTR [rsp+0x20],r15
  407baa:	mov    r9,r13
  407bad:	mov    rcx,rax
  407bb0:	mov    QWORD PTR [rip+0x84c9],rax        # 0x410080
  407bb7:	call   0x4074f8
  407bbc:	lea    rdx,[rip+0x3f6b]        # 0x40bb2e
  407bc3:	mov    rcx,rbp
  407bc6:	call   0x402700
  407bcb:	mov    rdx,QWORD PTR [rip+0x84ae]        # 0x410080
  407bd2:	mov    rcx,rbp
  407bd5:	call   0x402700
  407bda:	lea    rdx,[rip+0x3f56]        # 0x40bb37
  407be1:	mov    rcx,r12
  407be4:	call   0x402700
  407be9:	mov    rdx,QWORD PTR [rip+0x8490]        # 0x410080
  407bf0:	xor    eax,eax
  407bf2:	mov    rcx,r12
  407bf5:	cmp    BYTE PTR [rdx],0x5f
  407bf8:	sete   al
  407bfb:	add    rdx,rax
  407bfe:	call   0x402700
  407c03:	test   r14,r14
  407c06:	je     0x407c0e
  407c08:	cmp    BYTE PTR [r14],0x0
  407c0c:	jne    0x407c89
  407c0e:	mov    ecx,0xc
  407c13:	call   0x4057b0
  407c18:	mov    r14,rax
  407c1b:	mov    rax,QWORD PTR [rip+0x842e]        # 0x410050
  407c22:	xor    r8d,r8d
  407c25:	xor    ecx,ecx
  407c27:	lea    r9,[rax+0x1]
  407c2b:	movzx  eax,BYTE PTR [rax]
  407c2e:	test   eax,eax
  407c30:	je     0x407c53
  407c32:	mov    edx,eax
  407c34:	add    r8d,0x1
  407c38:	add    r9,0x1
  407c3c:	shl    edx,0x11
  407c3f:	add    eax,edx
  407c41:	add    eax,ecx
  407c43:	mov    ecx,eax
  407c45:	shr    ecx,0x2
  407c48:	xor    ecx,eax
  407c4a:	movzx  eax,BYTE PTR [r9-0x1]
  407c4f:	test   eax,eax
  407c51:	jne    0x407c32
  407c53:	lea    eax,[r8+rcx*1]
  407c57:	shl    r8d,0x11
  407c5b:	lea    rdx,[rip+0x3ee8]        # 0x40bb4a
  407c62:	mov    rcx,r14
  407c65:	add    eax,r8d
  407c68:	mov    r8d,eax
  407c6b:	shr    r8d,0x2
  407c6f:	xor    r8d,eax
  407c72:	shl    r8d,0x10
  407c76:	and    r8d,0xffc0000
  407c7d:	or     r8d,0x60000000
  407c84:	call   0x4074f8
  407c89:	lea    rdx,[rip+0x3ec2]        # 0x40bb52
  407c90:	mov    rcx,rbp
  407c93:	call   0x402700
  407c98:	mov    rdx,r14
  407c9b:	mov    rcx,rbp
  407c9e:	call   0x402700
  407ca3:	cmp    DWORD PTR [rip+0x83ae],0x0        # 0x410058
  407caa:	jne    0x408bfe
  407cb0:	xor    r13d,r13d
  407cb3:	cmp    DWORD PTR [rsp+0xd0],0x1
  407cbb:	jle    0x407d1e
  407cbd:	nop    DWORD PTR [rax]
  407cc0:	mov    edx,DWORD PTR [rsi+r13*4+0x4]
  407cc5:	test   edx,edx
  407cc7:	je     0x407d0d
  407cc9:	mov    rdi,QWORD PTR [rbx+r13*8+0x8]
  407cce:	mov    edx,0x20
  407cd3:	mov    rcx,rdi
  407cd6:	call   0x4074e8
  407cdb:	test   rax,rax
  407cde:	je     0x4085a4
  407ce4:	lea    rdx,[rip+0x3f95]        # 0x40bc80
  407ceb:	mov    rcx,rbp
  407cee:	call   0x402700
  407cf3:	mov    rdx,rdi
  407cf6:	mov    rcx,rbp
  407cf9:	call   0x402700
  407cfe:	lea    rdx,[rip+0x343a]        # 0x40b13f
  407d05:	mov    rcx,rbp
  407d08:	call   0x402700
  407d0d:	lea    edx,[r13+0x2]
  407d11:	add    r13,0x1
  407d15:	cmp    DWORD PTR [rsp+0xd0],edx
  407d1c:	jg     0x407cc0
  407d1e:	cmp    DWORD PTR [rsp+0x3c],0x0
  407d23:	jne    0x40863c
  407d29:	mov    ecx,0x400
  407d2e:	call   0x402350
  407d33:	mov    rdx,QWORD PTR [r12+0x8]
  407d38:	mov    rcx,rax
  407d3b:	mov    r13,rax
  407d3e:	call   0x402700
  407d43:	cmp    DWORD PTR [rsp+0x50],0x0
  407d48:	jne    0x408bdb
  407d4e:	lea    rdx,[rip+0x3e79]        # 0x40bbce
  407d55:	mov    rcx,r13
  407d58:	xor    edi,edi
  407d5a:	call   0x402700
  407d5f:	mov    rdx,QWORD PTR [rip+0x82ca]        # 0x410030
  407d66:	mov    rcx,r13
  407d69:	call   0x402700
  407d6e:	cmp    DWORD PTR [rsp+0xd0],0x1
  407d76:	jg     0x407d94
  407d78:	jmp    0x40861c
  407d7d:	nop    DWORD PTR [rax]
  407d80:	lea    edx,[rdi+0x2]
  407d83:	add    rdi,0x1
  407d87:	cmp    edx,DWORD PTR [rsp+0xd0]
  407d8e:	jge    0x40861c
  407d94:	mov    eax,DWORD PTR [rsi+rdi*4+0x4]
  407d98:	test   eax,eax
  407d9a:	je     0x407d80
  407d9c:	mov    r14,QWORD PTR [rbx+rdi*8+0x8]
  407da1:	mov    rcx,r14
  407da4:	call   0x4074c8
  407da9:	cmp    rax,0x1
  407dad:	jbe    0x407d80
  407daf:	cmp    BYTE PTR [r14+rax*1-0x2],0x2e
  407db5:	jne    0x407d80
  407db7:	movzx  eax,BYTE PTR [r14+rax*1-0x1]
  407dbd:	cmp    al,0x61
  407dbf:	je     0x407dc5
  407dc1:	cmp    al,0x6f
  407dc3:	jne    0x407d80
  407dc5:	mov    edx,0x20
  407dca:	mov    rcx,r14
  407dcd:	call   0x4074e8
  407dd2:	test   rax,rax
  407dd5:	je     0x409071
  407ddb:	lea    rdx,[rip+0x3e9e]        # 0x40bc80
  407de2:	mov    rcx,r13
  407de5:	call   0x402700
  407dea:	mov    rdx,r14
  407ded:	mov    rcx,r13
  407df0:	call   0x402700
  407df5:	lea    rdx,[rip+0x3343]        # 0x40b13f
  407dfc:	mov    rcx,r13
  407dff:	call   0x402700
  407e04:	jmp    0x407d80
  407e09:	mov    rax,QWORD PTR [rsp+0x48]
  407e0e:	xor    r9d,r9d
  407e11:	mov    r8,QWORD PTR [rax]
  407e14:	test   r8,r8
  407e17:	je     0x4085a0
  407e1d:	mov    rdx,QWORD PTR [rip+0x558c]        # 0x40d3b0
  407e24:	movsxd rax,DWORD PTR [rdx]
  407e27:	mov    rcx,QWORD PTR [rbx+rax*8-0x8]
  407e2c:	cmp    BYTE PTR [rcx],0x2d
  407e2f:	je     0x408524
  407e35:	test   r9d,r9d
  407e38:	je     0x4084d0
  407e3e:	shl    rax,0x2
  407e42:	mov    DWORD PTR [rbp+rax*1-0x4],0x1
  407e4a:	jmp    0x408580
  407e4f:	mov    rcx,QWORD PTR [rsp+0x78]
  407e54:	mov    DWORD PTR [rip+0x21ba],0x0        # 0x40a018
  407e5e:	xor    r9d,r9d
  407e61:	mov    rdx,QWORD PTR [rcx]
  407e64:	mov    rax,rcx
  407e67:	mov    QWORD PTR [rip+0x81d2],rdx        # 0x410040
  407e6e:	jmp    0x407e11
  407e70:	mov    rax,QWORD PTR [rip+0x5519]        # 0x40d390
  407e77:	mov    DWORD PTR [rip+0x218f],0x0        # 0x40a010
  407e81:	xor    r9d,r9d
  407e84:	mov    DWORD PTR [rsp+0x3c],0x1
  407e8c:	mov    rdx,QWORD PTR [rax]
  407e8f:	mov    QWORD PTR [rip+0x819a],rdx        # 0x410030
  407e96:	jmp    0x407e11
  407e9b:	mov    rcx,QWORD PTR [rsp+0x60]
  407ea0:	xor    r9d,r9d
  407ea3:	mov    rax,rcx
  407ea6:	mov    rcx,QWORD PTR [rcx]
  407ea9:	mov    QWORD PTR [rsp+0x40],rcx
  407eae:	jmp    0x407e11
  407eb3:	xor    r9d,r9d
  407eb6:	mov    DWORD PTR [rsp+0x50],0x1
  407ebe:	mov    rax,QWORD PTR [rsp+0x68]
  407ec3:	jmp    0x407e11
  407ec8:	mov    rcx,QWORD PTR [rsp+0x70]
  407ecd:	mov    DWORD PTR [rip+0x213d],0x0        # 0x40a014
  407ed7:	xor    r9d,r9d
  407eda:	mov    rdx,QWORD PTR [rcx]
  407edd:	mov    rax,rcx
  407ee0:	mov    QWORD PTR [rip+0x8151],rdx        # 0x410038
  407ee7:	jmp    0x407e11
  407eec:	mov    rax,QWORD PTR [rip+0x549d]        # 0x40d390
  407ef3:	xor    r9d,r9d
  407ef6:	mov    rdx,QWORD PTR [rax]
  407ef9:	mov    QWORD PTR [rip+0x8148],rdx        # 0x410048
  407f00:	jmp    0x407e11
  407f05:	mov    DWORD PTR [rip+0x210d],0x1        # 0x40a01c
  407f0f:	xor    r9d,r9d
  407f12:	mov    rax,QWORD PTR [rip+0x5477]        # 0x40d390
  407f19:	jmp    0x407e11
  407f1e:	mov    DWORD PTR [rip+0x20f4],0x0        # 0x40a01c
  407f28:	xor    r9d,r9d
  407f2b:	mov    rax,QWORD PTR [rip+0x545e]        # 0x40d390
  407f32:	jmp    0x407e11
  407f37:	lea    rax,[rip+0x3ac3]        # 0x40ba01
  407f3e:	xor    r9d,r9d
  407f41:	mov    QWORD PTR [rip+0x20d8],rax        # 0x40a020
  407f48:	mov    rax,QWORD PTR [rip+0x5441]        # 0x40d390
  407f4f:	jmp    0x407e11
  407f54:	mov    rax,QWORD PTR [rip+0x5435]        # 0x40d390
  407f5b:	xor    r9d,r9d
  407f5e:	mov    rdx,QWORD PTR [rax]
  407f61:	mov    QWORD PTR [rip+0x20b8],rdx        # 0x40a020
  407f68:	jmp    0x407e11
  407f6d:	mov    rax,QWORD PTR [rip+0x541c]        # 0x40d390
  407f74:	xor    r9d,r9d
  407f77:	mov    r14,QWORD PTR [rax]
  407f7a:	jmp    0x407e11
  407f7f:	mov    rax,QWORD PTR [rip+0x540a]        # 0x40d390
  407f86:	xor    r9d,r9d
  407f89:	mov    rdx,QWORD PTR [rax]
  407f8c:	mov    QWORD PTR [rip+0x80e5],rdx        # 0x410078
  407f93:	jmp    0x407e11
  407f98:	mov    rax,QWORD PTR [rip+0x53f1]        # 0x40d390
  407f9f:	xor    r9d,r9d
  407fa2:	mov    r13,QWORD PTR [rax]
  407fa5:	jmp    0x407e11
  407faa:	mov    rax,QWORD PTR [rip+0x53df]        # 0x40d390
  407fb1:	xor    r9d,r9d
  407fb4:	mov    rdx,QWORD PTR [rax]
  407fb7:	mov    QWORD PTR [rip+0x80ca],rdx        # 0x410088
  407fbe:	jmp    0x407e11
  407fc3:	mov    DWORD PTR [rip+0x809b],0x1        # 0x410068
  407fcd:	xor    r9d,r9d
  407fd0:	mov    rax,QWORD PTR [rip+0x53b9]        # 0x40d390
  407fd7:	jmp    0x407e11
  407fdc:	mov    rcx,QWORD PTR [rip+0x807d]        # 0x410060
  407fe3:	call   0x401bb0
  407fe8:	xor    r9d,r9d
  407feb:	mov    rax,QWORD PTR [rip+0x539e]        # 0x40d390
  407ff2:	jmp    0x407e11
  407ff7:	mov    DWORD PTR [rip+0x8057],0x1        # 0x410058
  408001:	xor    r9d,r9d
  408004:	mov    rax,QWORD PTR [rip+0x5385]        # 0x40d390
  40800b:	jmp    0x407e11
  408010:	mov    DWORD PTR [rip+0x803e],0x0        # 0x410058
  40801a:	xor    r9d,r9d
  40801d:	mov    rax,QWORD PTR [rip+0x536c]        # 0x40d390
  408024:	jmp    0x407e11
  408029:	mov    rax,QWORD PTR [rip+0x5360]        # 0x40d390
  408030:	xor    r9d,r9d
  408033:	mov    rdx,QWORD PTR [rax]
  408036:	mov    QWORD PTR [rip+0x8013],rdx        # 0x410050
  40803d:	jmp    0x407e11
  408042:	mov    DWORD PTR [rip+0x8020],0x1        # 0x41006c
  40804c:	mov    r9d,0x1
  408052:	mov    rax,QWORD PTR [rip+0x5337]        # 0x40d390
  408059:	jmp    0x407e11
  40805e:	call   QWORD PTR [rip+0x9430]        # 0x411494
  408064:	mov    r8,QWORD PTR [rip+0x7ff5]        # 0x410060
  40806b:	lea    rbx,[rax+0x30]
  40806f:	lea    rdx,[rip+0x3132]        # 0x40b1a8
  408076:	mov    rcx,rbx
  408079:	call   0x407590
  40807e:	lea    rcx,[rip+0x314a]        # 0x40b1cf
  408085:	mov    r9,rbx
  408088:	mov    r8d,0x13
  40808e:	mov    edx,0x1
  408093:	call   0x407560
  408098:	lea    rcx,[rip+0x3149]        # 0x40b1e8
  40809f:	mov    r9,rbx
  4080a2:	mov    r8d,0x33
  4080a8:	mov    edx,0x1
  4080ad:	call   0x407560
  4080b2:	lea    rcx,[rip+0x3167]        # 0x40b220
  4080b9:	mov    r9,rbx
  4080bc:	mov    r8d,0x27
  4080c2:	mov    edx,0x1
  4080c7:	call   0x407560
  4080cc:	lea    rcx,[rip+0x3175]        # 0x40b248
  4080d3:	mov    r9,rbx
  4080d6:	mov    r8d,0x22
  4080dc:	mov    edx,0x1
  4080e1:	call   0x407560
  4080e6:	lea    rcx,[rip+0x3183]        # 0x40b270
  4080ed:	mov    r9,rbx
  4080f0:	mov    r8d,0x30
  4080f6:	mov    edx,0x1
  4080fb:	call   0x407560
  408100:	lea    rcx,[rip+0x31a1]        # 0x40b2a8
  408107:	mov    r9,rbx
  40810a:	mov    r8d,0x33
  408110:	mov    edx,0x1
  408115:	call   0x407560
  40811a:	mov    r8,QWORD PTR [rip+0x7f3f]        # 0x410060
  408121:	lea    rdx,[rip+0x31b4]        # 0x40b2dc
  408128:	mov    rcx,rbx
  40812b:	call   0x407590
  408130:	lea    rcx,[rip+0x31b9]        # 0x40b2f0
  408137:	mov    r9,rbx
  40813a:	mov    r8d,0x2c
  408140:	mov    edx,0x1
  408145:	call   0x407560
  40814a:	lea    rcx,[rip+0x31cf]        # 0x40b320
  408151:	mov    r9,rbx
  408154:	mov    r8d,0x34
  40815a:	mov    edx,0x1
  40815f:	call   0x407560
  408164:	lea    rcx,[rip+0x31ed]        # 0x40b358
  40816b:	mov    r9,rbx
  40816e:	mov    r8d,0x32
  408174:	mov    edx,0x1
  408179:	call   0x407560
  40817e:	lea    rcx,[rip+0x320b]        # 0x40b390
  408185:	mov    r9,rbx
  408188:	mov    r8d,0x3c
  40818e:	mov    edx,0x1
  408193:	call   0x407560
  408198:	lea    rcx,[rip+0x3231]        # 0x40b3d0
  40819f:	mov    r9,rbx
  4081a2:	mov    r8d,0x35
  4081a8:	mov    edx,0x1
  4081ad:	call   0x407560
  4081b2:	lea    rcx,[rip+0x324f]        # 0x40b408
  4081b9:	mov    r9,rbx
  4081bc:	mov    r8d,0x38
  4081c2:	mov    edx,0x1
  4081c7:	call   0x407560
  4081cc:	lea    rcx,[rip+0x3275]        # 0x40b448
  4081d3:	mov    r9,rbx
  4081d6:	mov    r8d,0x34
  4081dc:	mov    edx,0x1
  4081e1:	call   0x407560
  4081e6:	lea    rcx,[rip+0x3293]        # 0x40b480
  4081ed:	mov    r9,rbx
  4081f0:	mov    r8d,0x2b
  4081f6:	mov    edx,0x1
  4081fb:	call   0x407560
  408200:	lea    rcx,[rip+0x32a5]        # 0x40b4ac
  408207:	mov    r9,rbx
  40820a:	mov    r8d,0x1d
  408210:	mov    edx,0x1
  408215:	call   0x407560
  40821a:	lea    rcx,[rip+0x32a9]        # 0x40b4ca
  408221:	mov    r9,rbx
  408224:	mov    r8d,0x17
  40822a:	mov    edx,0x1
  40822f:	call   0x407560
  408234:	lea    rcx,[rip+0x32ad]        # 0x40b4e8
  40823b:	mov    r9,rbx
  40823e:	mov    r8d,0x30
  408244:	mov    edx,0x1
  408249:	call   0x407560
  40824e:	lea    rcx,[rip+0x32cb]        # 0x40b520
  408255:	mov    r9,rbx
  408258:	mov    r8d,0x32
  40825e:	mov    edx,0x1
  408263:	call   0x407560
  408268:	lea    rcx,[rip+0x32e9]        # 0x40b558
  40826f:	mov    r9,rbx
  408272:	mov    r8d,0x3c
  408278:	mov    edx,0x1
  40827d:	call   0x407560
  408282:	lea    rcx,[rip+0x330f]        # 0x40b598
  408289:	mov    r9,rbx
  40828c:	mov    r8d,0x44
  408292:	mov    edx,0x1
  408297:	call   0x407560
  40829c:	lea    rcx,[rip+0x333d]        # 0x40b5e0
  4082a3:	mov    r9,rbx
  4082a6:	mov    r8d,0x2f
  4082ac:	mov    edx,0x1
  4082b1:	call   0x407560
  4082b6:	lea    rcx,[rip+0x3353]        # 0x40b610
  4082bd:	mov    r9,rbx
  4082c0:	mov    r8d,0x30
  4082c6:	mov    edx,0x1
  4082cb:	call   0x407560
  4082d0:	lea    rcx,[rip+0x3371]        # 0x40b648
  4082d7:	mov    r9,rbx
  4082da:	mov    r8d,0x37
  4082e0:	mov    edx,0x1
  4082e5:	call   0x407560
  4082ea:	lea    rcx,[rip+0x338f]        # 0x40b680
  4082f1:	mov    r9,rbx
  4082f4:	mov    r8d,0x39
  4082fa:	mov    edx,0x1
  4082ff:	call   0x407560
  408304:	lea    rcx,[rip+0x33b5]        # 0x40b6c0
  40830b:	mov    r9,rbx
  40830e:	mov    r8d,0x35
  408314:	mov    edx,0x1
  408319:	call   0x407560
  40831e:	lea    rcx,[rip+0x33d3]        # 0x40b6f8
  408325:	mov    r9,rbx
  408328:	mov    r8d,0x38
  40832e:	mov    edx,0x1
  408333:	call   0x407560
  408338:	lea    rcx,[rip+0x33f9]        # 0x40b738
  40833f:	mov    r9,rbx
  408342:	mov    r8d,0x3a
  408348:	mov    edx,0x1
  40834d:	call   0x407560
  408352:	lea    rcx,[rip+0x341f]        # 0x40b778
  408359:	mov    r9,rbx
  40835c:	mov    r8d,0x38
  408362:	mov    edx,0x1
  408367:	call   0x407560
  40836c:	lea    rcx,[rip+0x3445]        # 0x40b7b8
  408373:	mov    r9,rbx
  408376:	mov    r8d,0x38
  40837c:	mov    edx,0x1
  408381:	call   0x407560
  408386:	lea    rcx,[rip+0x346b]        # 0x40b7f8
  40838d:	mov    r9,rbx
  408390:	mov    r8d,0x32
  408396:	mov    edx,0x1
  40839b:	call   0x407560
  4083a0:	lea    rcx,[rip+0x3489]        # 0x40b830
  4083a7:	mov    r9,rbx
  4083aa:	mov    r8d,0x38
  4083b0:	mov    edx,0x1
  4083b5:	call   0x407560
  4083ba:	lea    rcx,[rip+0x34af]        # 0x40b870
  4083c1:	mov    r9,rbx
  4083c4:	mov    r8d,0x33
  4083ca:	mov    edx,0x1
  4083cf:	call   0x407560
  4083d4:	lea    rcx,[rip+0x34cd]        # 0x40b8a8
  4083db:	mov    r9,rbx
  4083de:	mov    r8d,0x33
  4083e4:	mov    edx,0x1
  4083e9:	call   0x407560
  4083ee:	lea    rcx,[rip+0x34eb]        # 0x40b8e0
  4083f5:	mov    r9,rbx
  4083f8:	mov    r8d,0x2b
  4083fe:	mov    edx,0x1
  408403:	call   0x407560
  408408:	lea    rcx,[rip+0x3501]        # 0x40b910
  40840f:	mov    r9,rbx
  408412:	mov    r8d,0x3a
  408418:	mov    edx,0x1
  40841d:	call   0x407560
  408422:	lea    rcx,[rip+0x3527]        # 0x40b950
  408429:	mov    r9,rbx
  40842c:	mov    r8d,0x38
  408432:	mov    edx,0x1
  408437:	call   0x407560
  40843c:	lea    rcx,[rip+0x354d]        # 0x40b990
  408443:	mov    r9,rbx
  408446:	mov    r8d,0x34
  40844c:	mov    edx,0x1
  408451:	call   0x407560
  408456:	lea    rcx,[rip+0x3568]        # 0x40b9c5
  40845d:	mov    r9,rbx
  408460:	mov    r8d,0x2
  408466:	mov    edx,0x1
  40846b:	call   0x407560
  408470:	lea    r8,[rip+0x3551]        # 0x40b9c8
  408477:	lea    rdx,[rip+0x3570]        # 0x40b9ee
  40847e:	mov    rcx,rbx
  408481:	call   0x407590
  408486:	xor    ecx,ecx
  408488:	call   0x4075b0
  40848d:	mov    rax,QWORD PTR [rip+0x4efc]        # 0x40d390
  408494:	xor    r9d,r9d
  408497:	mov    rdx,QWORD PTR [rax]
  40849a:	mov    QWORD PTR [rip+0x7bdf],rdx        # 0x410080
  4084a1:	jmp    0x407e11
  4084a6:	mov    r15d,0x1
  4084ac:	xor    r9d,r9d
  4084af:	mov    rax,QWORD PTR [rip+0x4eda]        # 0x40d390
  4084b6:	jmp    0x407e11
  4084bb:	mov    r9d,0x1
  4084c1:	mov    rax,rdi
  4084c4:	jmp    0x407e11
  4084c9:	nop    DWORD PTR [rax+0x0]
  4084d0:	test   r15d,r15d
  4084d3:	jne    0x408510
  4084d5:	movsxd rax,DWORD PTR [rdx]
  4084d8:	shl    rax,0x2
  4084dc:	jmp    0x40858d
  4084e1:	test   r15d,r15d
  4084e4:	jne    0x408510
  4084e6:	mov    rax,QWORD PTR [rip+0x4ec3]        # 0x40d3b0
  4084ed:	movsxd rax,DWORD PTR [rax]
  4084f0:	shl    rax,0x2
  4084f4:	test   edx,edx
  4084f6:	mov    DWORD PTR [rsi+rax*1-0x4],0x0
  4084fe:	jne    0x408510
  408500:	test   r8,r8
  408503:	je     0x408510
  408505:	mov    DWORD PTR [rsi+rax*1-0x8],0x0
  40850d:	nop    DWORD PTR [rax]
  408510:	mov    rdx,QWORD PTR [rsp+0xd8]
  408518:	mov    ecx,DWORD PTR [rsp+0xd0]
  40851f:	jmp    0x4078f0
  408524:	cmp    BYTE PTR [rcx+0x1],0x2d
  408528:	jne    0x407e35
  40852e:	mov    edx,0x3d
  408533:	mov    QWORD PTR [rsp+0x58],r8
  408538:	mov    DWORD PTR [rsp+0x54],r9d
  40853d:	call   0x4074e8
  408542:	mov    r9d,DWORD PTR [rsp+0x54]
  408547:	mov    r8,QWORD PTR [rsp+0x58]
  40854c:	xor    edx,edx
  40854e:	test   rax,rax
  408551:	setne  dl
  408554:	test   r9d,r9d
  408557:	je     0x4084e1
  408559:	mov    rax,QWORD PTR [rip+0x4e50]        # 0x40d3b0
  408560:	movsxd rax,DWORD PTR [rax]
  408563:	shl    rax,0x2
  408567:	test   edx,edx
  408569:	mov    DWORD PTR [rbp+rax*1-0x4],0x1
  408571:	jne    0x4084e1
  408577:	test   r8,r8
  40857a:	je     0x4084e1
  408580:	test   r15d,r15d
  408583:	mov    DWORD PTR [rbp+rax*1-0x8],0x1
  40858b:	jne    0x408510
  40858d:	mov    DWORD PTR [rsi+rax*1-0x4],0x0
  408595:	jmp    0x408505
  40859a:	nop    WORD PTR [rax+rax*1+0x0]
  4085a0:	xor    edx,edx
  4085a2:	jmp    0x408554
  4085a4:	mov    edx,0x9
  4085a9:	mov    rcx,rdi
  4085ac:	call   0x4074e8
  4085b1:	test   rax,rax
  4085b4:	jne    0x407ce4
  4085ba:	lea    rdx,[rip+0x2bdb]        # 0x40b19c
  4085c1:	mov    rcx,rbp
  4085c4:	call   0x402700
  4085c9:	mov    rdx,rdi
  4085cc:	mov    rcx,rbp
  4085cf:	call   0x402700
  4085d4:	lea    rdx,[rip+0x2b66]        # 0x40b141
  4085db:	jmp    0x407d05
  4085e0:	mov    edx,0x9
  4085e5:	mov    rcx,r15
  4085e8:	call   0x4074e8
  4085ed:	test   rax,rax
  4085f0:	jne    0x407a46
  4085f6:	lea    rdx,[rip+0x2b9f]        # 0x40b19c
  4085fd:	mov    rcx,r12
  408600:	call   0x402700
  408605:	mov    rdx,r15
  408608:	mov    rcx,r12
  40860b:	call   0x402700
  408610:	lea    rdx,[rip+0x2b2a]        # 0x40b141
  408617:	jmp    0x407a67
  40861c:	mov    rdx,QWORD PTR [r13+0x8]
  408620:	mov    rcx,QWORD PTR [rip+0x7a51]        # 0x410078
  408627:	call   0x4017a0
  40862c:	test   eax,eax
  40862e:	jne    0x408b21
  408634:	mov    rcx,r13
  408637:	call   0x4023a0
  40863c:	lea    rdx,[rip+0x359a]        # 0x40bbdd
  408643:	mov    rcx,r12
  408646:	call   0x402700
  40864b:	mov    rdx,QWORD PTR [rip+0x79de]        # 0x410030
  408652:	mov    rcx,r12
  408655:	call   0x402700
  40865a:	cmp    DWORD PTR [rip+0x79f7],0x0        # 0x410058
  408661:	jne    0x408d31
  408667:	cmp    QWORD PTR [rip+0x79d1],0x0        # 0x410040
  40866f:	je     0x408fec
  408675:	mov    rdi,QWORD PTR [rip+0x79c4]        # 0x410040
  40867c:	xor    eax,eax
  40867e:	or     rcx,0xffffffffffffffff
  408682:	repnz scas al,BYTE PTR es:[rdi]
  408684:	mov    eax,DWORD PTR [rbp+0x4]
  408687:	mov    rsi,rcx
  40868a:	not    rsi
  40868d:	lea    ecx,[rax+rsi*1+0x13]
  408691:	call   0x402350
  408696:	lea    rdx,[rip+0x35a8]        # 0x40bc45
  40869d:	mov    rcx,rax
  4086a0:	mov    rbx,rax
  4086a3:	call   0x402700
  4086a8:	mov    rsi,QWORD PTR [rip+0x7991]        # 0x410040
  4086af:	mov    edx,0x20
  4086b4:	mov    rcx,rsi
  4086b7:	call   0x4074e8
  4086bc:	test   rax,rax
  4086bf:	je     0x408dde
  4086c5:	lea    rdx,[rip+0x2a73]        # 0x40b13f
  4086cc:	mov    rcx,rbx
  4086cf:	call   0x402700
  4086d4:	mov    rdx,QWORD PTR [rip+0x7965]        # 0x410040
  4086db:	mov    rcx,rbx
  4086de:	call   0x402700
  4086e3:	lea    rdx,[rip+0x2a55]        # 0x40b13f
  4086ea:	mov    rcx,rbx
  4086ed:	call   0x402700
  4086f2:	cmp    DWORD PTR [rbp+0x4],0x0
  4086f6:	jne    0x408d11
  4086fc:	mov    rdx,QWORD PTR [rbx+0x8]
  408700:	mov    rcx,QWORD PTR [rip+0x7981]        # 0x410088
  408707:	call   0x4017a0
  40870c:	test   eax,eax
  40870e:	jne    0x408b21
  408714:	mov    rcx,rbx
  408717:	call   0x4023a0
  40871c:	cmp    QWORD PTR [rip+0x7914],0x0        # 0x410038
  408724:	je     0x408e93
  40872a:	mov    rdi,QWORD PTR [rip+0x790f]        # 0x410040
  408731:	or     r8,0xffffffffffffffff
  408735:	xor    eax,eax
  408737:	mov    rcx,r8
  40873a:	repnz scas al,BYTE PTR es:[rdi]
  40873c:	mov    rdi,QWORD PTR [rip+0x78f5]        # 0x410038
  408743:	not    rcx
  408746:	mov    rdx,rcx
  408749:	mov    rcx,r8
  40874c:	add    edx,DWORD PTR [r12+0x4]
  408751:	repnz scas al,BYTE PTR es:[rdi]
  408753:	mov    rax,rcx
  408756:	not    rax
  408759:	lea    ecx,[rdx+rax*1+0x12]
  40875d:	call   0x402350
  408762:	lea    rdx,[rip+0x34ed]        # 0x40bc56
  408769:	mov    rcx,rax
  40876c:	mov    rbx,rax
  40876f:	call   0x402700
  408774:	mov    rsi,QWORD PTR [rip+0x78c5]        # 0x410040
  40877b:	mov    edx,0x20
  408780:	mov    rcx,rsi
  408783:	call   0x4074e8
  408788:	test   rax,rax
  40878b:	je     0x408e53
  408791:	lea    rdx,[rip+0x29a7]        # 0x40b13f
  408798:	mov    rcx,rbx
  40879b:	call   0x402700
  4087a0:	mov    rdx,QWORD PTR [rip+0x7899]        # 0x410040
  4087a7:	mov    rcx,rbx
  4087aa:	call   0x402700
  4087af:	lea    rdx,[rip+0x29e8]        # 0x40b19e
  4087b6:	mov    rcx,rbx
  4087b9:	call   0x402700
  4087be:	lea    rdx,[rip+0x349e]        # 0x40bc63
  4087c5:	mov    rcx,rbx
  4087c8:	call   0x402700
  4087cd:	mov    rsi,QWORD PTR [rip+0x7864]        # 0x410038
  4087d4:	mov    edx,0x20
  4087d9:	mov    rcx,rsi
  4087dc:	call   0x4074e8
  4087e1:	test   rax,rax
  4087e4:	je     0x408f8c
  4087ea:	lea    rdx,[rip+0x294e]        # 0x40b13f
  4087f1:	mov    rcx,rbx
  4087f4:	call   0x402700
  4087f9:	mov    rdx,QWORD PTR [rip+0x7838]        # 0x410038
  408800:	mov    rcx,rbx
  408803:	call   0x402700
  408808:	lea    rdx,[rip+0x2930]        # 0x40b13f
  40880f:	mov    rcx,rbx
  408812:	call   0x402700
  408817:	cmp    DWORD PTR [r12+0x4],0x0
  40881d:	jne    0x408e1e
  408823:	mov    rdx,QWORD PTR [rbx+0x8]
  408827:	mov    rcx,QWORD PTR [rip+0x784a]        # 0x410078
  40882e:	call   0x4017a0
  408833:	test   eax,eax
  408835:	jne    0x408b21
  40883b:	mov    rcx,rbx
  40883e:	call   0x4023a0
  408843:	mov    rdi,QWORD PTR [rip+0x77ee]        # 0x410038
  40884a:	or     r8,0xffffffffffffffff
  40884e:	xor    eax,eax
  408850:	mov    rcx,r8
  408853:	repnz scas al,BYTE PTR es:[rdi]
  408855:	mov    rdi,QWORD PTR [rip+0x77e4]        # 0x410040
  40885c:	not    rcx
  40885f:	mov    rdx,rcx
  408862:	mov    rcx,r8
  408865:	add    edx,DWORD PTR [rbp+0x4]
  408868:	repnz scas al,BYTE PTR es:[rdi]
  40886a:	mov    rax,rcx
  40886d:	not    rax
  408870:	lea    ecx,[rdx+rax*1+0x12]
  408874:	call   0x402350
  408879:	lea    rdx,[rip+0x33c5]        # 0x40bc45
  408880:	mov    rcx,rax
  408883:	mov    rbx,rax
  408886:	call   0x402700
  40888b:	mov    rsi,QWORD PTR [rip+0x77ae]        # 0x410040
  408892:	mov    edx,0x20
  408897:	mov    rcx,rsi
  40889a:	call   0x4074e8
  40889f:	test   rax,rax
  4088a2:	je     0x4090ed
  4088a8:	lea    rdx,[rip+0x2890]        # 0x40b13f
  4088af:	mov    rcx,rbx
  4088b2:	call   0x402700
  4088b7:	mov    rdx,QWORD PTR [rip+0x7782]        # 0x410040
  4088be:	mov    rcx,rbx
  4088c1:	call   0x402700
  4088c6:	lea    rdx,[rip+0x28d1]        # 0x40b19e
  4088cd:	mov    rcx,rbx
  4088d0:	call   0x402700
  4088d5:	mov    rsi,QWORD PTR [rip+0x775c]        # 0x410038
  4088dc:	mov    edx,0x20
  4088e1:	mov    rcx,rsi
  4088e4:	call   0x4074e8
  4088e9:	test   rax,rax
  4088ec:	je     0x4090ad
  4088f2:	lea    rdx,[rip+0x2846]        # 0x40b13f
  4088f9:	mov    rcx,rbx
  4088fc:	call   0x402700
  408901:	mov    rdx,QWORD PTR [rip+0x7730]        # 0x410038
  408908:	mov    rcx,rbx
  40890b:	call   0x402700
  408910:	lea    rdx,[rip+0x2828]        # 0x40b13f
  408917:	mov    rcx,rbx
  40891a:	call   0x402700
  40891f:	cmp    DWORD PTR [rbp+0x4],0x0
  408923:	jne    0x408fcc
  408929:	mov    rdx,QWORD PTR [rbx+0x8]
  40892d:	mov    rcx,QWORD PTR [rip+0x7754]        # 0x410088
  408934:	call   0x4017a0
  408939:	test   eax,eax
  40893b:	jne    0x408b21
  408941:	mov    rcx,rbx
  408944:	call   0x4023a0
  408949:	mov    rdi,QWORD PTR [rip+0x76f0]        # 0x410040
  408950:	or     r8,0xffffffffffffffff
  408954:	xor    eax,eax
  408956:	mov    rcx,r8
  408959:	repnz scas al,BYTE PTR es:[rdi]
  40895b:	mov    rdi,QWORD PTR [rip+0x76d6]        # 0x410038
  408962:	not    rcx
  408965:	mov    rdx,rcx
  408968:	mov    rcx,r8
  40896b:	add    edx,DWORD PTR [r12+0x4]
  408970:	repnz scas al,BYTE PTR es:[rdi]
  408972:	mov    rax,rcx
  408975:	not    rax
  408978:	lea    ecx,[rdx+rax*1+0x12]
  40897c:	call   0x402350
  408981:	lea    rdx,[rip+0x32ce]        # 0x40bc56
  408988:	mov    rcx,rax
  40898b:	mov    rbx,rax
  40898e:	call   0x402700
  408993:	mov    rsi,QWORD PTR [rip+0x76a6]        # 0x410040
  40899a:	mov    edx,0x20
  40899f:	mov    rcx,rsi
  4089a2:	call   0x4074e8
  4089a7:	test   rax,rax
  4089aa:	je     0x408f0b
  4089b0:	lea    rdx,[rip+0x2788]        # 0x40b13f
  4089b7:	mov    rcx,rbx
  4089ba:	call   0x402700
  4089bf:	mov    rdx,QWORD PTR [rip+0x767a]        # 0x410040
  4089c6:	mov    rcx,rbx
  4089c9:	call   0x402700
  4089ce:	lea    rdx,[rip+0x27c9]        # 0x40b19e
  4089d5:	mov    rcx,rbx
  4089d8:	call   0x402700
  4089dd:	lea    rdx,[rip+0x327f]        # 0x40bc63
  4089e4:	mov    rcx,rbx
  4089e7:	call   0x402700
  4089ec:	mov    rsi,QWORD PTR [rip+0x7645]        # 0x410038
  4089f3:	mov    edx,0x20
  4089f8:	mov    rcx,rsi
  4089fb:	call   0x4074e8
  408a00:	test   rax,rax
  408a03:	je     0x409180
  408a09:	lea    rdx,[rip+0x272f]        # 0x40b13f
  408a10:	mov    rcx,rbx
  408a13:	call   0x402700
  408a18:	mov    rdx,QWORD PTR [rip+0x7619]        # 0x410038
  408a1f:	mov    rcx,rbx
  408a22:	call   0x402700
  408a27:	lea    rdx,[rip+0x2711]        # 0x40b13f
  408a2e:	mov    rcx,rbx
  408a31:	call   0x402700
  408a36:	cmp    DWORD PTR [r12+0x4],0x0
  408a3c:	jne    0x40912d
  408a42:	mov    rsi,QWORD PTR [rsp+0x40]
  408a47:	test   rsi,rsi
  408a4a:	je     0x408a66
  408a4c:	lea    rdx,[rip+0x321e]        # 0x40bc71
  408a53:	mov    rcx,rbx
  408a56:	call   0x402700
  408a5b:	mov    rdx,rsi
  408a5e:	mov    rcx,rbx
  408a61:	call   0x402700
  408a66:	mov    rdx,QWORD PTR [rbx+0x8]
  408a6a:	mov    rcx,QWORD PTR [rip+0x7607]        # 0x410078
  408a71:	call   0x4017a0
  408a76:	test   eax,eax
  408a78:	jne    0x408b21
  408a7e:	mov    rcx,rbx
  408a81:	call   0x4023a0
  408a86:	mov    rdi,QWORD PTR [rip+0x75ab]        # 0x410038
  408a8d:	xor    eax,eax
  408a8f:	or     rcx,0xffffffffffffffff
  408a93:	mov    edx,DWORD PTR [rbp+0x4]
  408a96:	repnz scas al,BYTE PTR es:[rdi]
  408a98:	mov    rax,rcx
  408a9b:	not    rax
  408a9e:	lea    ecx,[rdx+rax*1+0x13]
  408aa2:	call   0x402350
  408aa7:	mov    rsi,QWORD PTR [rip+0x758a]        # 0x410038
  408aae:	mov    edx,0x20
  408ab3:	mov    rbx,rax
  408ab6:	mov    rcx,rsi
  408ab9:	call   0x4074e8
  408abe:	test   rax,rax
  408ac1:	je     0x40920d
  408ac7:	lea    rdx,[rip+0x2671]        # 0x40b13f
  408ace:	mov    rcx,rbx
  408ad1:	call   0x402700
  408ad6:	mov    rdx,QWORD PTR [rip+0x755b]        # 0x410038
  408add:	mov    rcx,rbx
  408ae0:	call   0x402700
  408ae5:	lea    rdx,[rip+0x2653]        # 0x40b13f
  408aec:	mov    rcx,rbx
  408aef:	call   0x402700
  408af4:	cmp    DWORD PTR [rbp+0x4],0x0
  408af8:	jne    0x4091c0
  408afe:	mov    rdx,QWORD PTR [rbx+0x8]
  408b02:	mov    rcx,QWORD PTR [rip+0x757f]        # 0x410088
  408b09:	call   0x4017a0
  408b0e:	test   eax,eax
  408b10:	jne    0x408b21
  408b12:	mov    rcx,rbx
  408b15:	call   0x4023a0
  408b1a:	xor    ecx,ecx
  408b1c:	call   0x401a50
  408b21:	mov    ecx,0x1
  408b26:	call   0x401a50
  408b2b:	lea    rdx,[rip+0x2f9b]        # 0x40bacd
  408b32:	mov    r8d,0x6
  408b38:	mov    rcx,rdi
  408b3b:	call   0x4074c0
  408b40:	test   eax,eax
  408b42:	je     0x408b8e
  408b44:	lea    rdx,[rip+0x2f89]        # 0x40bad4
  408b4b:	mov    r8d,0x8
  408b51:	mov    rcx,rdi
  408b54:	call   0x4074c0
  408b59:	test   eax,eax
  408b5b:	je     0x408b8e
  408b5d:	lea    rdx,[rip+0x2f79]        # 0x40badd
  408b64:	mov    r8d,0x5
  408b6a:	mov    rcx,rdi
  408b6d:	call   0x4074c0
  408b72:	test   eax,eax
  408b74:	je     0x408b8e
  408b76:	cmp    BYTE PTR [rdi],0x69
  408b79:	je     0x40914e
  408b7f:	mov    DWORD PTR [rip+0x74e7],0x0        # 0x410070
  408b89:	jmp    0x4079cc
  408b8e:	mov    DWORD PTR [rip+0x74d8],0x2        # 0x410070
  408b98:	jmp    0x4079cc
  408b9d:	mov    rcx,QWORD PTR [rip+0x74ac]        # 0x410050
  408ba4:	test   rcx,rcx
  408ba7:	je     0x4091e0
  408bad:	movzx  eax,BYTE PTR [rcx]
  408bb0:	test   al,al
  408bb2:	je     0x408da8
  408bb8:	lea    rdx,[rcx+0x1]
  408bbc:	jmp    0x408bd2
  408bbe:	cmp    al,0x2f
  408bc0:	je     0x408bd6
  408bc2:	add    rdx,0x1
  408bc6:	movzx  eax,BYTE PTR [rdx-0x1]
  408bca:	test   al,al
  408bcc:	je     0x408da8
  408bd2:	cmp    al,0x5c
  408bd4:	jne    0x408bbe
  408bd6:	mov    rcx,rdx
  408bd9:	jmp    0x408bc2
  408bdb:	lea    rdx,[rip+0x2f86]        # 0x40bb68
  408be2:	mov    rcx,r13
  408be5:	call   0x402700
  408bea:	lea    rdx,[rip+0x2f97]        # 0x40bb88
  408bf1:	mov    rcx,r13
  408bf4:	call   0x402700
  408bf9:	jmp    0x407d4e
  408bfe:	lea    rdx,[rip+0x2ede]        # 0x40bae3
  408c05:	mov    rcx,rbp
  408c08:	call   0x402700
  408c0d:	jmp    0x407cb0
  408c12:	lea    rdx,[rip+0x2edf]        # 0x40baf8
  408c19:	mov    rcx,rbp
  408c1c:	call   0x402700
  408c21:	mov    rax,QWORD PTR [rip+0x7458]        # 0x410080
  408c28:	test   rax,rax
  408c2b:	je     0x408c36
  408c2d:	cmp    BYTE PTR [rax],0x0
  408c30:	jne    0x407bbc
  408c36:	cmp    DWORD PTR [rip+0x13df],0x0        # 0x40a01c
  408c3d:	lea    r8,[rip+0x24fd]        # 0x40b141
  408c44:	je     0x407b1a
  408c4a:	jmp    0x407b13
  408c4f:	lea    rdx,[rip+0x2e8d]        # 0x40bae3
  408c56:	mov    rcx,rax
  408c59:	call   0x402700
  408c5e:	jmp    0x4079f9
  408c63:	call   0x4022a0
  408c68:	mov    r15,rax
  408c6b:	or     rcx,0xffffffffffffffff
  408c6f:	xor    eax,eax
  408c71:	mov    rdi,r15
  408c74:	repnz scas al,BYTE PTR es:[rdi]
  408c76:	not    rcx
  408c79:	add    rcx,0x4
  408c7d:	call   0x4057b0
  408c82:	cmp    DWORD PTR [rip+0x73e3],0x0        # 0x41006c
  408c89:	mov    QWORD PTR [rip+0x73a0],rax        # 0x410030
  408c90:	mov    r8,r15
  408c93:	je     0x408cc2
  408c95:	movzx  edx,BYTE PTR [r15]
  408c99:	test   dl,dl
  408c9b:	je     0x408cbf
  408c9d:	lea    r9,[r15+0x1]
  408ca1:	jmp    0x408cb5
  408ca3:	cmp    dl,0x2f
  408ca6:	je     0x408cba
  408ca8:	add    r9,0x1
  408cac:	movzx  edx,BYTE PTR [r9-0x1]
  408cb1:	test   dl,dl
  408cb3:	je     0x408cc2
  408cb5:	cmp    dl,0x5c
  408cb8:	jne    0x408ca3
  408cba:	mov    r8,r9
  408cbd:	jmp    0x408ca8
  408cbf:	mov    r8,r15
  408cc2:	lea    rdx,[rip+0x2d98]        # 0x40ba61
  408cc9:	mov    rcx,rax
  408ccc:	call   0x4074f8
  408cd1:	mov    rcx,r15
  408cd4:	mov    DWORD PTR [rip+0x1332],0x1        # 0x40a010
  408cde:	call   0x407578
  408ce3:	lea    rcx,[rip+0x2d7e]        # 0x40ba68
  408cea:	call   0x401770
  408cef:	jmp    0x40797c
  408cf4:	mov    eax,DWORD PTR [rip+0x7376]        # 0x410070
  408cfa:	sub    eax,0x2
  408cfd:	cmp    eax,0x1
  408d00:	seta   al
  408d03:	movzx  eax,al
  408d06:	mov    DWORD PTR [rip+0x1310],eax        # 0x40a01c
  408d0c:	jmp    0x4079d9
  408d11:	lea    rdx,[rip+0x2484]        # 0x40b19c
  408d18:	mov    rcx,rbx
  408d1b:	call   0x402700
  408d20:	mov    rdx,QWORD PTR [rbp+0x8]
  408d24:	mov    rcx,rbx
  408d27:	call   0x402700
  408d2c:	jmp    0x4086fc
  408d31:	mov    rsi,QWORD PTR [rip+0x7340]        # 0x410078
  408d38:	mov    rbx,QWORD PTR [rip+0x8755]        # 0x411494
  408d3f:	call   rbx
  408d41:	lea    rdx,[rip+0x2e9d]        # 0x40bbe5
  408d48:	lea    rcx,[rax+0x60]
  408d4c:	mov    r8,rsi
  408d4f:	call   0x407590
  408d54:	mov    rsi,QWORD PTR [r12+0x8]
  408d59:	call   rbx
  408d5b:	lea    rdx,[rip+0x2e99]        # 0x40bbfb
  408d62:	lea    rcx,[rax+0x60]
  408d66:	mov    r8,rsi
  408d69:	call   0x407590
  408d6e:	mov    rsi,QWORD PTR [rip+0x7313]        # 0x410088
  408d75:	call   rbx
  408d77:	lea    rdx,[rip+0x2e93]        # 0x40bc11
  408d7e:	lea    rcx,[rax+0x60]
  408d82:	mov    r8,rsi
  408d85:	call   0x407590
  408d8a:	mov    rsi,QWORD PTR [rbp+0x8]
  408d8e:	call   rbx
  408d90:	lea    rdx,[rip+0x2e90]        # 0x40bc27
  408d97:	lea    rcx,[rax+0x60]
  408d9b:	mov    r8,rsi
  408d9e:	call   0x407590
  408da3:	jmp    0x408667
  408da8:	call   0x405880
  408dad:	mov    QWORD PTR [rip+0x7294],rax        # 0x410048
  408db4:	jmp    0x407955
  408db9:	lea    rdx,[rip+0x2d03]        # 0x40bac3
  408dc0:	mov    rcx,rdi
  408dc3:	call   0x4074a8
  408dc8:	cmp    rax,0x1
  408dcc:	sbb    eax,eax
  408dce:	not    eax
  408dd0:	and    eax,0x2
  408dd3:	mov    DWORD PTR [rip+0x729b],eax        # 0x410074
  408dd9:	jmp    0x4079a5
  408dde:	mov    edx,0x9
  408de3:	mov    rcx,rsi
  408de6:	call   0x4074e8
  408deb:	test   rax,rax
  408dee:	jne    0x4086c5
  408df4:	lea    rdx,[rip+0x2346]        # 0x40b141
  408dfb:	mov    rcx,rbx
  408dfe:	call   0x402700
  408e03:	mov    rdx,QWORD PTR [rip+0x7236]        # 0x410040
  408e0a:	mov    rcx,rbx
  408e0d:	call   0x402700
  408e12:	lea    rdx,[rip+0x2328]        # 0x40b141
  408e19:	jmp    0x4086ea
  408e1e:	lea    rdx,[rip+0x2377]        # 0x40b19c
  408e25:	mov    rcx,rbx
  408e28:	call   0x402700
  408e2d:	mov    rdx,QWORD PTR [r12+0x8]
  408e32:	mov    rcx,rbx
  408e35:	call   0x402700
  408e3a:	jmp    0x408823
  408e3f:	lea    rdx,[rip+0x2ccb]        # 0x40bb11
  408e46:	mov    rcx,rbp
  408e49:	call   0x402700
  408e4e:	jmp    0x408c21
  408e53:	mov    edx,0x9
  408e58:	mov    rcx,rsi
  408e5b:	call   0x4074e8
  408e60:	test   rax,rax
  408e63:	jne    0x408791
  408e69:	lea    rdx,[rip+0x22d1]        # 0x40b141
  408e70:	mov    rcx,rbx
  408e73:	call   0x402700
  408e78:	mov    rdx,QWORD PTR [rip+0x71c1]        # 0x410040
  408e7f:	mov    rcx,rbx
  408e82:	call   0x402700
  408e87:	lea    rdx,[rip+0x230e]        # 0x40b19c
  408e8e:	jmp    0x4087b6
  408e93:	mov    rdi,QWORD PTR [rip+0x71ae]        # 0x410048
  408e9a:	mov    edx,0x2e
  408e9f:	mov    rcx,rdi
  408ea2:	call   0x4074b0
  408ea7:	test   rax,rax
  408eaa:	je     0x4091f6
  408eb0:	sub    rax,rdi
  408eb3:	mov    rbx,rax
  408eb6:	lea    rcx,[rbx+0x5]
  408eba:	call   0x4057b0
  408ebf:	mov    rdx,QWORD PTR [rip+0x7182]        # 0x410048
  408ec6:	mov    rsi,rax
  408ec9:	mov    rcx,rax
  408ecc:	mov    r8,rbx
  408ecf:	mov    QWORD PTR [rip+0x7162],rax        # 0x410038
  408ed6:	mov    rdi,rsi
  408ed9:	call   0x4074b8
  408ede:	mov    BYTE PTR [rsi+rbx*1],0x0
  408ee2:	xor    eax,eax
  408ee4:	or     rcx,0xffffffffffffffff
  408ee8:	repnz scas al,BYTE PTR es:[rdi]
  408eea:	mov    DWORD PTR [rip+0x1120],0x1        # 0x40a014
  408ef4:	not    rcx
  408ef7:	lea    rax,[rsi+rcx*1-0x1]
  408efc:	mov    DWORD PTR [rax],0x7078652e
  408f02:	mov    BYTE PTR [rax+0x4],0x0
  408f06:	jmp    0x40872a
  408f0b:	mov    edx,0x9
  408f10:	mov    rcx,rsi
  408f13:	call   0x4074e8
  408f18:	test   rax,rax
  408f1b:	jne    0x4089b0
  408f21:	lea    rdx,[rip+0x2219]        # 0x40b141
  408f28:	mov    rcx,rbx
  408f2b:	call   0x402700
  408f30:	mov    rdx,QWORD PTR [rip+0x7109]        # 0x410040
  408f37:	mov    rcx,rbx
  408f3a:	call   0x402700
  408f3f:	lea    rdx,[rip+0x2256]        # 0x40b19c
  408f46:	jmp    0x4089d5
  408f4b:	lea    rcx,[rip+0x2b03]        # 0x40ba55
  408f52:	call   0x4016b0
  408f57:	mov    QWORD PTR [rip+0x712a],rax        # 0x410088
  408f5e:	jmp    0x407963
  408f63:	lea    rcx,[rip+0x2aef]        # 0x40ba59
  408f6a:	call   0x4016b0
  408f6f:	mov    QWORD PTR [rip+0x7102],rax        # 0x410078
  408f76:	jmp    0x407971
  408f7b:	call   0x405880
  408f80:	mov    QWORD PTR [rip+0x70c9],rax        # 0x410050
  408f87:	jmp    0x407955
  408f8c:	mov    edx,0x9
  408f91:	mov    rcx,rsi
  408f94:	call   0x4074e8
  408f99:	test   rax,rax
  408f9c:	jne    0x4087ea
  408fa2:	lea    rdx,[rip+0x2198]        # 0x40b141
  408fa9:	mov    rcx,rbx
  408fac:	call   0x402700
  408fb1:	mov    rdx,QWORD PTR [rip+0x7080]        # 0x410038
  408fb8:	mov    rcx,rbx
  408fbb:	call   0x402700
  408fc0:	lea    rdx,[rip+0x217a]        # 0x40b141
  408fc7:	jmp    0x40880f
  408fcc:	lea    rdx,[rip+0x21c9]        # 0x40b19c
  408fd3:	mov    rcx,rbx
  408fd6:	call   0x402700
  408fdb:	mov    rdx,QWORD PTR [rbp+0x8]
  408fdf:	mov    rcx,rbx
  408fe2:	call   0x402700
  408fe7:	jmp    0x408929
  408fec:	call   0x4022a0
  408ff1:	mov    rbx,rax
  408ff4:	or     rcx,0xffffffffffffffff
  408ff8:	xor    eax,eax
  408ffa:	mov    rdi,rbx
  408ffd:	repnz scas al,BYTE PTR es:[rdi]
  408fff:	mov    rsi,rcx
  409002:	not    rsi
  409005:	mov    rcx,rsi
  409008:	add    rcx,0x5
  40900c:	call   0x4057b0
  409011:	cmp    DWORD PTR [rip+0x7054],0x0        # 0x41006c
  409018:	mov    QWORD PTR [rip+0x7021],rax        # 0x410040
  40901f:	mov    r8,rbx
  409022:	lea    rdx,[rbx+0x1]
  409026:	jne    0x409064
  409028:	lea    rdx,[rip+0x2c0e]        # 0x40bc3d
  40902f:	mov    rcx,rax
  409032:	call   0x4074f8
  409037:	mov    rcx,rbx
  40903a:	mov    DWORD PTR [rip+0xfd4],0x1        # 0x40a018
  409044:	call   0x407578
  409049:	jmp    0x408675
  40904e:	cmp    cl,0x5c
  409051:	je     0x40905d
  409053:	cmp    cl,0x2f
  409056:	mov    r9,r8
  409059:	cmove  r9,rdx
  40905d:	add    rdx,0x1
  409061:	mov    r8,r9
  409064:	movzx  ecx,BYTE PTR [rdx-0x1]
  409068:	mov    r9,rdx
  40906b:	test   cl,cl
  40906d:	jne    0x40904e
  40906f:	jmp    0x409028
  409071:	mov    edx,0x9
  409076:	mov    rcx,r14
  409079:	call   0x4074e8
  40907e:	test   rax,rax
  409081:	jne    0x407ddb
  409087:	lea    rdx,[rip+0x210e]        # 0x40b19c
  40908e:	mov    rcx,r13
  409091:	call   0x402700
  409096:	mov    rdx,r14
  409099:	mov    rcx,r13
  40909c:	call   0x402700
  4090a1:	lea    rdx,[rip+0x2099]        # 0x40b141
  4090a8:	jmp    0x407dfc
  4090ad:	mov    edx,0x9
  4090b2:	mov    rcx,rsi
  4090b5:	call   0x4074e8
  4090ba:	test   rax,rax
  4090bd:	jne    0x4088f2
  4090c3:	lea    rdx,[rip+0x2077]        # 0x40b141
  4090ca:	mov    rcx,rbx
  4090cd:	call   0x402700
  4090d2:	mov    rdx,QWORD PTR [rip+0x6f5f]        # 0x410038
  4090d9:	mov    rcx,rbx
  4090dc:	call   0x402700
  4090e1:	lea    rdx,[rip+0x2059]        # 0x40b141
  4090e8:	jmp    0x408917
  4090ed:	mov    edx,0x9
  4090f2:	mov    rcx,rsi
  4090f5:	call   0x4074e8
  4090fa:	test   rax,rax
  4090fd:	jne    0x4088a8
  409103:	lea    rdx,[rip+0x2037]        # 0x40b141
  40910a:	mov    rcx,rbx
  40910d:	call   0x402700
  409112:	mov    rdx,QWORD PTR [rip+0x6f27]        # 0x410040
  409119:	mov    rcx,rbx
  40911c:	call   0x402700
  409121:	lea    rdx,[rip+0x2074]        # 0x40b19c
  409128:	jmp    0x4088cd
  40912d:	lea    rdx,[rip+0x2068]        # 0x40b19c
  409134:	mov    rcx,rbx
  409137:	call   0x402700
  40913c:	mov    rdx,QWORD PTR [r12+0x8]
  409141:	mov    rcx,rbx
  409144:	call   0x402700
  409149:	jmp    0x408a42
  40914e:	movzx  eax,BYTE PTR [rdi+0x1]
  409152:	sub    eax,0x33
  409155:	cmp    al,0x3
  409157:	ja     0x408b7f
  40915d:	cmp    BYTE PTR [rdi+0x2],0x38
  409161:	jne    0x408b7f
  409167:	cmp    BYTE PTR [rdi+0x3],0x36
  40916b:	jne    0x408b7f
  409171:	mov    DWORD PTR [rip+0x6ef5],0x1        # 0x410070
  40917b:	jmp    0x4079cc
  409180:	mov    edx,0x9
  409185:	mov    rcx,rsi
  409188:	call   0x4074e8
  40918d:	test   rax,rax
  409190:	jne    0x408a09
  409196:	lea    rdx,[rip+0x1fa4]        # 0x40b141
  40919d:	mov    rcx,rbx
  4091a0:	call   0x402700
  4091a5:	mov    rdx,QWORD PTR [rip+0x6e8c]        # 0x410038
  4091ac:	mov    rcx,rbx
  4091af:	call   0x402700
  4091b4:	lea    rdx,[rip+0x1f86]        # 0x40b141
  4091bb:	jmp    0x408a2e
  4091c0:	lea    rdx,[rip+0x1fd5]        # 0x40b19c
  4091c7:	mov    rcx,rbx
  4091ca:	call   0x402700
  4091cf:	mov    rdx,QWORD PTR [rbp+0x8]
  4091d3:	mov    rcx,rbx
  4091d6:	call   0x402700
  4091db:	jmp    0x408afe
  4091e0:	lea    rcx,[rip+0x2839]        # 0x40ba20
  4091e7:	call   0x401770
  4091ec:	mov    ecx,0x1
  4091f1:	call   0x4075b0
  4091f6:	xor    eax,eax
  4091f8:	or     rcx,0xffffffffffffffff
  4091fc:	repnz scas al,BYTE PTR es:[rdi]
  4091fe:	mov    rax,rcx
  409201:	not    rax
  409204:	lea    rbx,[rax-0x1]
  409208:	jmp    0x408eb6
  40920d:	mov    edx,0x9
  409212:	mov    rcx,rsi
  409215:	call   0x4074e8
  40921a:	test   rax,rax
  40921d:	jne    0x408ac7
  409223:	lea    rdx,[rip+0x1f17]        # 0x40b141
  40922a:	mov    rcx,rbx
  40922d:	call   0x402700
  409232:	mov    rdx,QWORD PTR [rip+0x6dff]        # 0x410038
  409239:	mov    rcx,rbx
  40923c:	call   0x402700
  409241:	lea    rdx,[rip+0x1ef9]        # 0x40b141
  409248:	jmp    0x408aec
  40924d:	nop
  40924e:	nop
  40924f:	nop
  409250:	(bad)  
  409251:	(bad)  
  409252:	(bad)  
  409253:	(bad)  
  409254:	(bad)  
  409255:	(bad)  
  409256:	(bad)  
  409257:	inc    DWORD PTR [rax]
  409259:	add    BYTE PTR [rax],al
  40925b:	add    BYTE PTR [rax],al
  40925d:	add    BYTE PTR [rax],al
  40925f:	add    bh,bh
  409261:	(bad)  
  409262:	(bad)  
  409263:	(bad)  
  409264:	(bad)  
  409265:	(bad)  
  409266:	(bad)  
  409267:	inc    DWORD PTR [rax]
  409269:	add    BYTE PTR [rax],al
  40926b:	add    BYTE PTR [rax],al
  40926d:	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

000000000040a000 <.data>:
  40a000:	or     al,BYTE PTR [rax]
	...
  40a00e:	add    BYTE PTR [rax],al
  40a010:	add    DWORD PTR [rax],eax
  40a012:	add    BYTE PTR [rax],al
  40a014:	add    DWORD PTR [rax],eax
  40a016:	add    BYTE PTR [rax],al
  40a018:	add    DWORD PTR [rax],eax
  40a01a:	add    BYTE PTR [rax],al
  40a01c:	(bad)  
  40a01d:	(bad)  
  40a01e:	(bad)  
  40a01f:	inc    DWORD PTR [rax-0x3c]
  40a022:	add    BYTE PTR [rax],al
	...
  40a02d:	add    BYTE PTR [rax],al
  40a02f:	add    BYTE PTR [rdi],bh
  40a031:	add    BYTE PTR [rax],al
  40a033:	add    BYTE PTR [rcx],al
  40a035:	add    BYTE PTR [rax],al
  40a037:	add    BYTE PTR [rcx],al
  40a039:	add    BYTE PTR [rax],al
  40a03b:	add    BYTE PTR [rax],al
  40a03d:	add    BYTE PTR [rax],al
  40a03f:	add    BYTE PTR [rbx+0x40ce],al
	...
  40a04d:	add    BYTE PTR [rax],al
  40a04f:	add    BYTE PTR [rax-0x6e],ch
  40a052:	add    BYTE PTR [rax],al
	...
  40a05d:	add    BYTE PTR [rax],al
  40a05f:	add    bh,bh
  40a061:	(bad)  
  40a062:	(bad)  
  40a063:	(bad)  
  40a064:	(bad)  
  40a065:	(bad)  
  40a066:	(bad)  
  40a067:	inc    DWORD PTR [rax]
  40a069:	add    BYTE PTR [rax],al
  40a06b:	add    BYTE PTR [rax],al
  40a06d:	add    BYTE PTR [rax],al
  40a06f:	add    bh,bh
	...
  40a07d:	add    BYTE PTR [rax],al
  40a07f:	add    BYTE PTR [rdx],al
	...
  40a08d:	add    BYTE PTR [rax],al
  40a08f:	add    bh,bh
  40a091:	(bad)  
  40a092:	(bad)  
  40a093:	inc    DWORD PTR [rax]
	...
  40a09d:	add    BYTE PTR [rax],al
  40a09f:	add    BYTE PTR [rax+0x76],dh
  40a0a2:	add    BYTE PTR [rax],al
  40a0a5:	add    BYTE PTR [rax],al
  40a0a7:	add    BYTE PTR [rax+0x4076],al
  40a0ad:	add    BYTE PTR [rax],al
  40a0af:	add    BYTE PTR [rdx],dh
  40a0b1:	movabs ds:0x2b992ddf,al
  40a0ba:	add    BYTE PTR [rax],al
  40a0bc:	add    BYTE PTR [rax],al
  40a0be:	add    BYTE PTR [rax],al
  40a0c0:	int    0x5d
  40a0c2:	and    dl,dl
  40a0c4:	data16 (bad) 
  40a0c6:	(bad)  
  40a0c7:	inc    DWORD PTR [rax]
  40a0c9:	add    BYTE PTR [rax],al
  40a0cb:	add    BYTE PTR [rax],al
  40a0cd:	add    BYTE PTR [rax],al
	...

Disassembly of section .rdata:

000000000040b000 <.rdata>:
  40b000:	and    eax,0x203a73
  40b005:	push   rbp
  40b006:	jae    0x40b071
  40b008:	outs   dx,BYTE PTR ds:[rsi]
  40b009:	and    BYTE PTR [esi+0x69],ah
  40b00d:	ins    BYTE PTR es:[rdi],dx
  40b00e:	cmp    ah,BYTE PTR gs:[rax]
  40b011:	and    eax,0x72540073
  40b016:	imul   esp,DWORD PTR [rbp+0x64],0x6c696620
  40b01d:	cmp    ah,BYTE PTR gs:[rax]
  40b020:	and    eax,0x73250073
  40b025:	and    BYTE PTR [rip+0x3a000a73],ah        # 0x3a40ba9e
  40b02b:	and    BYTE PTR [rip+0x70000a73],ah        # 0x7040baa4
  40b031:	ja     0x40b094
  40b033:	imul   esi,DWORD PTR [rax+riz*1+0x72],0x72757465
  40b03b:	outs   dx,BYTE PTR ds:[rsi]
  40b03c:	jae    0x40b078
  40b03e:	and    BYTE PTR [rip+0x73],ah        # 0x40b0b7
  40b044:	add    BYTE PTR [rax],al
  40b046:	add    BYTE PTR [rax],al
  40b048:	jae    0x40b0bf
  40b04a:	(bad)  
  40b04b:	jo     0x40b0bf
  40b04d:	outs   dx,DWORD PTR ds:[rsi]
  40b04e:	movsxd esp,DWORD PTR [rbp+0x73]
  40b051:	jae    0x40b073
  40b053:	outs   dx,DWORD PTR ds:[esi]
  40b055:	je     0x40b077
  40b057:	data16 (bad) 
  40b059:	je     0x40b0bc
  40b05b:	ins    BYTE PTR es:[rdi],dx
  40b05c:	and    BYTE PTR [rbx+0x69],dh
  40b05f:	outs   dx,BYTE PTR ds:[esi]
  40b061:	(bad)  
  40b062:	ins    BYTE PTR es:[rdi],dx
  40b063:	and    BYTE PTR [rip+0x73250064],ah        # 0x7365b0cd
  40b069:	and    BYTE PTR [rbp+0x78],ah
  40b06c:	imul   esi,DWORD PTR [rbp+riz*2+0x64],0x74697720
  40b074:	push   0x61747320
  40b079:	je     0x40b0f0
  40b07b:	jae    0x40b09d
  40b07d:	and    eax,0x654b0064
  40b082:	gs jo  0x40b0ee
  40b085:	outs   dx,BYTE PTR ds:[rsi]
  40b086:	and    BYTE PTR [ebp+eiz*2+0x6d],dh
  40b08b:	jo     0x40b0fc
  40b08d:	jb     0x40b0f0
  40b08f:	jb     0x40b10a
  40b091:	and    BYTE PTR [rdx+0x61],ah
  40b094:	jae    0x40b0fb
  40b096:	and    BYTE PTR [rsi+0x69],ah
  40b099:	ins    BYTE PTR es:[rdi],dx
  40b09a:	and    BYTE PTR gs:[rip+0x44000073],ah        # 0x4440b114
  40b0a1:	gs ins BYTE PTR es:[rdi],dx
  40b0a3:	gs je  0x40b10f
  40b0a6:	outs   dx,BYTE PTR ds:[rsi]
  40b0a7:	and    BYTE PTR [ebp+eiz*2+0x6d],dh
  40b0ac:	jo     0x40b11d
  40b0ae:	jb     0x40b111
  40b0b0:	jb     0x40b12b
  40b0b2:	and    BYTE PTR [rdx+0x61],ah
  40b0b5:	jae    0x40b11c
  40b0b7:	and    BYTE PTR [rsi+0x69],ah
  40b0ba:	ins    BYTE PTR es:[rdi],dx
  40b0bb:	and    BYTE PTR gs:[rip+0x654b0073],ah        # 0x658bb135
  40b0c2:	gs jo  0x40b12e
  40b0c5:	outs   dx,BYTE PTR ds:[rsi]
  40b0c6:	and    BYTE PTR [ebp+eiz*2+0x6d],dh
  40b0cb:	jo     0x40b13c
  40b0cd:	jb     0x40b130
  40b0cf:	jb     0x40b14a
  40b0d1:	and    BYTE PTR [rbp+0x78],ah
  40b0d4:	jo     0x40b0f6
  40b0d6:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x7325
  40b0dd:	add    BYTE PTR [rax],al
  40b0df:	add    BYTE PTR [rbp+riz*2+0x6c],al
  40b0e3:	gs je  0x40b14f
  40b0e6:	outs   dx,BYTE PTR ds:[rsi]
  40b0e7:	and    BYTE PTR [ebp+eiz*2+0x6d],dh
  40b0ec:	jo     0x40b15d
  40b0ee:	jb     0x40b151
  40b0f0:	jb     0x40b16b
  40b0f2:	and    BYTE PTR [rbp+0x78],ah
  40b0f5:	jo     0x40b117
  40b0f7:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x7325
  40b0fe:	add    BYTE PTR [rbx+0x65],cl
  40b101:	gs jo  0x40b16d
  40b104:	outs   dx,BYTE PTR ds:[rsi]
  40b105:	and    BYTE PTR [ebp+eiz*2+0x6d],dh
  40b10a:	jo     0x40b17b
  40b10c:	jb     0x40b16f
  40b10e:	jb     0x40b189
  40b110:	and    BYTE PTR [rbp+riz*2+0x66],ah
  40b114:	and    BYTE PTR [rsi+0x69],ah
  40b117:	ins    BYTE PTR es:[rdi],dx
  40b118:	and    BYTE PTR gs:[rip+0x73],ah        # 0x40b192
  40b11f:	add    BYTE PTR [rbp+riz*2+0x6c],al
  40b123:	gs je  0x40b18f
  40b126:	outs   dx,BYTE PTR ds:[rsi]
  40b127:	and    BYTE PTR [ebp+eiz*2+0x6d],dh
  40b12c:	jo     0x40b19d
  40b12e:	jb     0x40b191
  40b130:	jb     0x40b1ab
  40b132:	and    BYTE PTR [rbp+riz*2+0x66],ah
  40b136:	and    BYTE PTR [rsi+0x69],ah
  40b139:	ins    BYTE PTR es:[rdi],dx
  40b13a:	and    BYTE PTR gs:[rip+0x220073],ah        # 0x62b1b4
  40b141:	add    BYTE PTR [rip+0x2d2c6c57],ch        # 0x2d6d1d9e
  40b147:	sub    eax,0x206c6c64
  40b14c:	sub    eax,0x74736f6e
  40b151:	(bad)  
  40b152:	jb     0x40b1c8
  40b154:	imul   bp,WORD PTR [rbp+riz*2+0x73],0x2d00
  40b15b:	ins    DWORD PTR es:[rdi],dx
  40b15c:	fs ins BYTE PTR es:[rdi],dx
  40b15e:	ins    BYTE PTR es:[rdi],dx
  40b15f:	add    BYTE PTR [rip+0x2d2c6c57],ch        # 0x2d6d1dbc
  40b165:	sub    eax,0x6c6c64
  40b16a:	pop    rdi
  40b16b:	add    BYTE PTR [rax+0x31],al
  40b16e:	xor    al,BYTE PTR [rax]
  40b170:	pop    rdi
  40b171:	movsxd edi,DWORD PTR [rcx+0x67]
  40b174:	ja     0x40b1df
  40b176:	outs   dx,BYTE PTR ds:[rsi]
  40b177:	pop    rdi
  40b178:	fs ins BYTE PTR es:[rdi],dx
  40b17a:	ins    BYTE PTR es:[rdi],dx
  40b17b:	pop    rdi
  40b17c:	outs   dx,BYTE PTR gs:[rsi]
  40b17e:	je     0x40b1f2
  40b180:	jns    0x40b182
  40b182:	rex.R ins BYTE PTR es:[rdi],dx
  40b184:	ins    BYTE PTR es:[rdi],dx
  40b185:	rex.WRB (bad) 
  40b187:	imul   ebp,DWORD PTR [rsi+0x43],0x74535452
  40b18e:	(bad)  
  40b18f:	jb     0x40b205
  40b191:	jne    0x40b203
  40b193:	add    BYTE PTR [rsp+rbp*2+0x6c],al
  40b197:	rex.WRB (bad) 
  40b199:	imul   ebp,DWORD PTR [rsi+0x0],0x20220020
	...
  40b1a8:	push   rbp
  40b1a9:	jae    0x40b20c
  40b1ab:	and    BYTE PTR gs:[eip+0x6f3c2073],ah        # 0x6f7cd226
  40b1b3:	jo     0x40b229
  40b1b5:	imul   ebp,DWORD PTR [rdi+0x6e],0x3e297328
  40b1bc:	and    BYTE PTR [rdi+rbp*2],bh
  40b1bf:	(bad)  
  40b1c0:	push   0x65
  40b1c2:	movsxd esi,DWORD PTR [rbp+rbp*1+0x66]
  40b1c6:	imul   ebp,DWORD PTR [rbp+riz*2+0x28],0xa3e2973
  40b1ce:	add    BYTE PTR [rax],ah
  40b1d0:	and    BYTE PTR [rdi+0x65],al
  40b1d3:	outs   dx,BYTE PTR ds:[rsi]
  40b1d4:	gs jb  0x40b240
  40b1d7:	movsxd esp,DWORD PTR [rax]
  40b1d9:	outs   dx,DWORD PTR ds:[rsi]
  40b1da:	jo     0x40b250
  40b1dc:	imul   ebp,DWORD PTR [rdi+0x6e],0xa3a73
  40b1e3:	add    BYTE PTR [rax],al
  40b1e5:	add    BYTE PTR [rax],al
  40b1e7:	add    BYTE PTR [rax],ah
  40b1e9:	and    BYTE PTR [rax],ah
  40b1eb:	cmp    al,0x66
  40b1ee:	imul   ebp,DWORD PTR [rbp+riz*2+0x3e],0x20202020
  40b1f6:	and    BYTE PTR [rax],ah
  40b1f8:	and    BYTE PTR [rax],ah
  40b1fa:	and    BYTE PTR [rax],ah
  40b1fc:	and    BYTE PTR [rax],ah
  40b1fe:	and    BYTE PTR [rax],ah
  40b200:	and    BYTE PTR [rax],ah
  40b202:	push   rdx
  40b203:	gs (bad) 
  40b205:	and    BYTE PTR fs:[rdi+0x70],ch
  40b209:	je     0x40b274
  40b20b:	outs   dx,DWORD PTR ds:[rsi]
  40b20c:	outs   dx,BYTE PTR ds:[rsi]
  40b20d:	jae    0x40b22f
  40b20f:	data16 jb 0x40b281
  40b212:	ins    DWORD PTR es:[rdi],dx
  40b213:	and    BYTE PTR [rsi+riz*2],bh
  40b216:	imul   ebp,DWORD PTR [rbp+riz*2+0x3e],0xa
  40b21e:	add    BYTE PTR [rax],al
  40b220:	and    BYTE PTR [rax],ah
  40b222:	and    BYTE PTR [rip+0x6975712d],ch        # 0x69b62355
  40b228:	gs je  0x40b257
  40b22b:	and    BYTE PTR [rip+0x20202071],ch        # 0x2060d2a2
  40b231:	and    BYTE PTR [rax],ah
  40b233:	and    BYTE PTR [rax],ah
  40b235:	and    BYTE PTR [rax],ah
  40b237:	and    BYTE PTR [rax],ah
  40b239:	and    BYTE PTR [rdi+0x6f],dl
  40b23c:	jb     0x40b2a9
  40b23e:	and    BYTE PTR [rcx+0x75],dh
  40b241:	imul   esp,DWORD PTR [rbp+0x74],0xa796c
  40b248:	and    BYTE PTR [rax],ah
  40b24a:	and    BYTE PTR [rip+0x7265762d],ch        # 0x72a6287d
  40b250:	(bad)  
  40b251:	outs   dx,DWORD PTR ds:[rsi]
  40b252:	jae    0x40b2b9
  40b254:	sub    al,0x20
  40b256:	sub    eax,0x20202076
  40b25b:	and    BYTE PTR [rax],ah
  40b25d:	and    BYTE PTR [rax],ah
  40b25f:	and    BYTE PTR [rax],ah
  40b261:	and    BYTE PTR [rsi+0x65],dl
  40b264:	jb     0x40b2c8
  40b266:	outs   dx,DWORD PTR ds:[rsi]
  40b267:	jae    0x40b2ce
  40b269:	or     al,BYTE PTR [rax]
  40b26b:	add    BYTE PTR [rax],al
  40b26d:	add    BYTE PTR [rax],al
  40b26f:	add    BYTE PTR [rax],ah
  40b271:	and    BYTE PTR [rax],ah
  40b273:	sub    eax,0x7265762d
  40b278:	jae    0x40b2e3
  40b27a:	outs   dx,DWORD PTR ds:[rsi]
  40b27b:	outs   dx,BYTE PTR ds:[rsi]
  40b27c:	and    BYTE PTR [rax],ah
  40b27e:	and    BYTE PTR [rax],ah
  40b280:	and    BYTE PTR [rax],ah
  40b282:	and    BYTE PTR [rax],ah
  40b284:	and    BYTE PTR [rax],ah
  40b286:	and    BYTE PTR [rax],ah
  40b288:	and    BYTE PTR [rax],ah
  40b28a:	push   rax
  40b28b:	jb     0x40b2f6
  40b28d:	outs   dx,BYTE PTR ds:[rsi]
  40b28e:	je     0x40b2b0
  40b290:	fs ins BYTE PTR es:[rdi],dx
  40b292:	ins    BYTE PTR es:[rdi],dx
  40b293:	ja     0x40b307
  40b295:	(bad)  
  40b296:	jo     0x40b2b8
  40b298:	jbe    0x40b2ff
  40b29a:	jb     0x40b30f
  40b29c:	imul   ebp,DWORD PTR [rdi+0x6e],0xa
  40b2a3:	add    BYTE PTR [rax],al
  40b2a5:	add    BYTE PTR [rax],al
  40b2a7:	add    BYTE PTR [rax],ah
  40b2a9:	and    BYTE PTR [rax],ah
  40b2ab:	sub    eax,0x706d692d
  40b2b0:	ins    BYTE PTR es:[rdi],dx
  40b2b1:	imul   esp,DWORD PTR [rdx+0x20],0x74756f3c
  40b2b8:	outs   dx,BYTE PTR ds:[rsi]
  40b2b9:	(bad)  
  40b2ba:	ins    DWORD PTR es:[rdi],dx
  40b2bb:	gs and BYTE PTR ds:[rax],ah
  40b2bf:	and    BYTE PTR [rax],ah
  40b2c1:	and    BYTE PTR [rbx+0x79],dl
  40b2c4:	outs   dx,BYTE PTR ds:[rsi]
  40b2c5:	outs   dx,DWORD PTR ds:[rsi]
  40b2c6:	outs   dx,BYTE PTR ds:[rsi]
  40b2c7:	jns    0x40b336
  40b2c9:	and    BYTE PTR [rsi+0x6f],ah
  40b2cc:	jb     0x40b2ee
  40b2ce:	sub    eax,0x74756f2d
  40b2d3:	jo     0x40b34a
  40b2d5:	je     0x40b304
  40b2d7:	ins    BYTE PTR es:[rdi],dx
  40b2d8:	imul   esp,DWORD PTR [rdx+0xa],0x4f202000
  40b2df:	jo     0x40b355
  40b2e1:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f662073
  40b2e8:	jb     0x40b30a
  40b2ea:	and    eax,0xa3a73
  40b2ef:	add    BYTE PTR [rax],ah
  40b2f1:	and    BYTE PTR [rax],ah
  40b2f3:	sub    eax,0x6972642d
  40b2f8:	jbe    0x40b35f
  40b2fa:	jb     0x40b329
  40b2fc:	outs   dx,BYTE PTR ds:[rsi]
  40b2fd:	(bad)  
  40b2fe:	ins    DWORD PTR es:[rdi],dx
  40b2ff:	and    BYTE PTR gs:[rsp+riz*2],bh
  40b303:	jb     0x40b36e
  40b305:	jbe    0x40b36c
  40b307:	jb     0x40b347
  40b309:	and    BYTE PTR [rbp+riz*2+0x66],al
  40b30d:	(bad)  
  40b30e:	jne    0x40b37c
  40b310:	je     0x40b385
  40b312:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  40b316:	and    ah,BYTE PTR [rdi+0x63]
  40b319:	movsxd esp,DWORD PTR [rdx]
  40b31b:	or     al,BYTE PTR [rax]
  40b31d:	add    BYTE PTR [rax],al
  40b31f:	add    BYTE PTR [rax],ah
  40b321:	and    BYTE PTR [rax],ah
  40b323:	sub    eax,0x6972642d
  40b328:	jbe    0x40b38f
  40b32a:	jb     0x40b359
  40b32c:	data16 ins BYTE PTR es:[rdi],dx
  40b32e:	(bad)  
  40b32f:	addr32 jae 0x40b352
  40b332:	cmp    al,0x66
  40b334:	ins    BYTE PTR es:[rdi],dx
  40b335:	(bad)  
  40b336:	addr32 jae 0x40b377
  40b339:	and    BYTE PTR [rdi+0x76],cl
  40b33c:	gs jb  0x40b3b1
  40b33f:	imul   esp,DWORD PTR [rbp+riz*2+0x20],0x61666564
  40b347:	jne    0x40b3b5
  40b349:	je     0x40b36b
  40b34b:	ins    BYTE PTR es:[rdi],dx
  40b34c:	and    BYTE PTR fs:[rsi+0x6c],ah
  40b350:	(bad)  
  40b351:	addr32 jae 0x40b35e
  40b354:	add    BYTE PTR [rax],al
  40b356:	add    BYTE PTR [rax],al
  40b358:	and    BYTE PTR [rax],ah
  40b35a:	and    BYTE PTR [rip+0x6c6c642d],ch        # 0x6cad178d
  40b360:	je     0x40b3d1
  40b362:	outs   dx,DWORD PTR ds:[rsi]
  40b363:	ins    BYTE PTR es:[rdi],dx
  40b364:	sub    eax,0x656d616e
  40b369:	and    BYTE PTR [rsp+riz*2],bh
  40b36c:	ins    BYTE PTR es:[rdi],dx
  40b36d:	ins    BYTE PTR es:[rdi],dx
  40b36e:	je     0x40b3df
  40b370:	outs   dx,DWORD PTR ds:[rsi]
  40b371:	ins    BYTE PTR es:[rdi],dx
  40b372:	and    BYTE PTR ds:[rbp+riz*2+0x66],al
  40b377:	(bad)  
  40b378:	jne    0x40b3e6
  40b37a:	je     0x40b3ef
  40b37c:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  40b380:	and    ah,BYTE PTR [rsp+rbp*2+0x6c]
  40b384:	je     0x40b3f5
  40b386:	outs   dx,DWORD PTR ds:[rsi]
  40b387:	ins    BYTE PTR es:[rdi],dx
  40b388:	and    cl,BYTE PTR [rdx]
  40b38a:	add    BYTE PTR [rax],al
  40b38c:	add    BYTE PTR [rax],al
  40b38e:	add    BYTE PTR [rax],al
  40b390:	and    BYTE PTR [rax],ah
  40b392:	and    BYTE PTR [rip+0x746e652d],ch        # 0x74af18c5
  40b398:	jb     0x40b413
  40b39a:	and    BYTE PTR [riz*2+0x7972746e],bh
  40b3a1:	and    BYTE PTR ds:[rax],ah
  40b3a4:	and    BYTE PTR [rax],ah
  40b3a6:	and    BYTE PTR [rax],ah
  40b3a8:	and    BYTE PTR [rax],ah
  40b3aa:	push   rbx
  40b3ab:	jo     0x40b412
  40b3ad:	movsxd ebp,DWORD PTR [rcx+0x66]
  40b3b0:	jns    0x40b3d2
  40b3b2:	(bad)  
  40b3b3:	ins    BYTE PTR es:[rdi],dx
  40b3b4:	je     0x40b41b
  40b3b6:	jb     0x40b426
  40b3b8:	(bad)  
  40b3b9:	je     0x40b420
  40b3bb:	and    BYTE PTR [rsp+rcx*2+0x4c],al
  40b3bf:	and    BYTE PTR [rbp+0x6e],ah
  40b3c2:	je     0x40b436
  40b3c4:	jns    0x40b3e6
  40b3c6:	jo     0x40b437
  40b3c8:	imul   ebp,DWORD PTR [rsi+0x74],0xa
  40b3cf:	add    BYTE PTR [rax],ah
  40b3d1:	and    BYTE PTR [rax],ah
  40b3d3:	sub    eax,0x616d692d
  40b3d8:	addr32 gs sub eax,0x65736162
  40b3df:	and    BYTE PTR [rdx+riz*2],bh
  40b3e2:	(bad)  
  40b3e3:	jae    0x40b44a
  40b3e5:	and    BYTE PTR ds:[rax],ah
  40b3e8:	and    BYTE PTR [rax],ah
  40b3ea:	push   rbx
  40b3eb:	jo     0x40b452
  40b3ed:	movsxd ebp,DWORD PTR [rcx+0x66]
  40b3f0:	jns    0x40b412
  40b3f2:	imul   ebp,DWORD PTR [rbp+0x61],0x62206567
  40b3f9:	(bad)  
  40b3fa:	jae    0x40b461
  40b3fc:	and    BYTE PTR [rcx+0x64],ah
  40b3ff:	fs jb  0x40b467
  40b402:	jae    0x40b477
  40b404:	or     al,BYTE PTR [rax]
  40b406:	add    BYTE PTR [rax],al
  40b408:	and    BYTE PTR [rax],ah
  40b40a:	and    BYTE PTR [rip+0x7261742d],ch        # 0x72a2283d
  40b410:	addr32 gs je 0x40b434
  40b414:	cmp    al,0x6d
  40b416:	(bad)  
  40b417:	movsxd ebp,DWORD PTR [rax+0x69]
  40b41a:	outs   dx,BYTE PTR ds:[rsi]
  40b41b:	gs and BYTE PTR ds:[rax],ah
  40b41f:	and    BYTE PTR [rax],ah
  40b421:	and    BYTE PTR [rcx+0x33],ch
  40b424:	cmp    BYTE PTR [rsi],dh
  40b426:	sub    eax,0x77677963
  40b42b:	imul   ebp,DWORD PTR [rsi+0x33],0x726f2032
  40b432:	and    BYTE PTR [rcx+0x33],ch
  40b435:	cmp    BYTE PTR [rsi],dh
  40b437:	sub    eax,0x676e696d
  40b43c:	ja     0x40b471
  40b43e:	xor    cl,BYTE PTR [rdx]
	...
  40b448:	and    BYTE PTR [rax],ah
  40b44a:	and    BYTE PTR [rip+0x7972642d],ch        # 0x79b3187d
  40b450:	sub    eax,0x206e7572
  40b455:	and    BYTE PTR [rax],ah
  40b457:	and    BYTE PTR [rax],ah
  40b459:	and    BYTE PTR [rax],ah
  40b45b:	and    BYTE PTR [rax],ah
  40b45d:	and    BYTE PTR [rax],ah
  40b45f:	and    BYTE PTR [rax],ah
  40b461:	and    BYTE PTR [rbx+0x68],dl
  40b464:	outs   dx,DWORD PTR ds:[rsi]
  40b465:	ja     0x40b487
  40b467:	ja     0x40b4d1
  40b469:	(bad)  
  40b46a:	je     0x40b48c
  40b46c:	outs   dx,BYTE PTR ds:[rsi]
  40b46d:	gs gs fs jae 0x40b492
  40b472:	je     0x40b4e3
  40b474:	and    BYTE PTR [rdx+0x65],ah
  40b477:	and    BYTE PTR [rdx+0x75],dh
  40b47a:	outs   dx,BYTE PTR ds:[rsi]
  40b47b:	or     al,BYTE PTR [rax]
  40b47d:	add    BYTE PTR [rax],al
  40b47f:	add    BYTE PTR [rax],ah
  40b481:	and    BYTE PTR [rax],ah
  40b483:	sub    eax,0x6f6e6d2d
  40b488:	sub    eax,0x77677963
  40b48d:	imul   ebp,DWORD PTR [rsi+0x20],0x20202020
  40b494:	and    BYTE PTR [rax],ah
  40b496:	and    BYTE PTR [rax],ah
  40b498:	and    BYTE PTR [rax],ah
  40b49a:	rex.XB jb 0x40b502
  40b49d:	(bad)  
  40b49e:	je     0x40b505
  40b4a0:	and    BYTE PTR [rbp+0x69],cl
  40b4a3:	outs   dx,BYTE PTR ds:[rsi]
  40b4a4:	addr32 ja 0x40b4c7
  40b4a7:	rex.R
  40b4a8:	rex.WR
  40b4a9:	rex.WR or r8b,BYTE PTR [rax]
  40b4ac:	and    BYTE PTR [rax],ah
  40b4ae:	rex.WRXB jo 0x40b525
  40b4b1:	imul   ebp,DWORD PTR [rdi+0x6e],0x61702073
  40b4b8:	jae    0x40b52d
  40b4ba:	gs and BYTE PTR fs:[rdi+rbp*2+0x20],dh
  40b4c0:	rex.R
  40b4c1:	rex.WR
  40b4c2:	rex.WR push rsp
  40b4c4:	rex.WRXB
  40b4c5:	rex.WRXB
  40b4c6:	rex.WR cmp r9b,BYTE PTR [rdx]
  40b4c9:	add    BYTE PTR [rax],ah
  40b4cb:	and    BYTE PTR [rax],ah
  40b4cd:	sub    eax,0x63616d2d
  40b4d2:	push   0x20656e69
  40b4d7:	cmp    al,0x6d
  40b4d9:	(bad)  
  40b4da:	movsxd ebp,DWORD PTR [rax+0x69]
  40b4dd:	outs   dx,BYTE PTR ds:[rsi]
  40b4de:	gs or  al,BYTE PTR ds:[rax]
  40b4e2:	add    BYTE PTR [rax],al
  40b4e4:	add    BYTE PTR [rax],al
  40b4e6:	add    BYTE PTR [rax],al
  40b4e8:	and    BYTE PTR [rax],ah
  40b4ea:	and    BYTE PTR [rip+0x74756f2d],ch        # 0x74b6241d
  40b4f0:	jo     0x40b567
  40b4f2:	je     0x40b521
  40b4f4:	gs js  0x40b567
  40b4f7:	and    BYTE PTR [rdi+rbp*2],bh
  40b4fa:	jne    0x40b570
  40b4fc:	outs   dx,BYTE PTR ds:[rsi]
  40b4fd:	(bad)  
  40b4fe:	ins    DWORD PTR es:[rdi],dx
  40b4ff:	gs and BYTE PTR ds:[rdi+0x65],al
  40b504:	outs   dx,BYTE PTR ds:[rsi]
  40b505:	gs jb  0x40b569
  40b508:	je     0x40b56f
  40b50a:	and    BYTE PTR [rbp+0x78],ah
  40b50d:	jo     0x40b57e
  40b50f:	jb     0x40b585
  40b511:	and    BYTE PTR [rsi+0x69],ah
  40b514:	ins    BYTE PTR es:[rdi],dx
  40b515:	gs or  al,BYTE PTR cs:[rax]
  40b519:	add    BYTE PTR [rax],al
  40b51b:	add    BYTE PTR [rax],al
  40b51d:	add    BYTE PTR [rax],al
  40b51f:	add    BYTE PTR [rax],ah
  40b521:	and    BYTE PTR [rax],ah
  40b523:	sub    eax,0x74756f2d
  40b528:	jo     0x40b59f
  40b52a:	je     0x40b559
  40b52c:	ins    BYTE PTR es:[rdi],dx
  40b52d:	imul   esp,DWORD PTR [rdx+0x20],0x74756f3c
  40b534:	outs   dx,BYTE PTR ds:[rsi]
  40b535:	(bad)  
  40b536:	ins    DWORD PTR es:[rdi],dx
  40b537:	gs and BYTE PTR ds:[rdi+0x65],al
  40b53c:	outs   dx,BYTE PTR ds:[rsi]
  40b53d:	gs jb  0x40b5a1
  40b540:	je     0x40b5a7
  40b542:	and    BYTE PTR [rcx+0x6e],ch
  40b545:	jo     0x40b5bc
  40b547:	je     0x40b569
  40b549:	ins    BYTE PTR es:[rdi],dx
  40b54a:	imul   esp,DWORD PTR [rdx+0x72],0x2e797261
  40b551:	or     al,BYTE PTR [rax]
  40b553:	add    BYTE PTR [rax],al
  40b555:	add    BYTE PTR [rax],al
  40b557:	add    BYTE PTR [rax],ah
  40b559:	and    BYTE PTR [rax],ah
  40b55b:	sub    eax,0x6464612d
  40b560:	sub    eax,0x69646e69
  40b565:	jb     0x40b5cc
  40b567:	movsxd esi,DWORD PTR [rax+riz*1+0x20]
  40b56b:	and    BYTE PTR [rax],ah
  40b56d:	and    BYTE PTR [rax],ah
  40b56f:	and    BYTE PTR [rax],ah
  40b571:	and    BYTE PTR [rcx+0x64],al
  40b574:	and    BYTE PTR fs:[rsp+rbp*2+0x6c],ah
  40b579:	and    BYTE PTR [rcx+0x6e],ch
  40b57c:	imul   esi,DWORD PTR fs:[rdx+0x65],0x20737463
  40b584:	je     0x40b5f5
  40b586:	and    BYTE PTR [rbp+0x78],ah
  40b589:	jo     0x40b5fa
  40b58b:	jb     0x40b601
  40b58d:	and    BYTE PTR [rsi+0x69],ah
  40b590:	ins    BYTE PTR es:[rdi],dx
  40b591:	gs or  al,BYTE PTR cs:[rax]
  40b595:	add    BYTE PTR [rax],al
  40b597:	add    BYTE PTR [rax],ah
  40b599:	and    BYTE PTR [rax],ah
  40b59b:	sub    eax,0x6c6c642d
  40b5a0:	outs   dx,BYTE PTR ds:[rsi]
  40b5a1:	(bad)  
  40b5a2:	ins    DWORD PTR es:[rdi],dx
  40b5a3:	and    BYTE PTR gs:[rsi+rbp*2],bh
  40b5a7:	(bad)  
  40b5a8:	ins    DWORD PTR es:[rdi],dx
  40b5a9:	gs and BYTE PTR ds:[rax],ah
  40b5ad:	and    BYTE PTR [rax],ah
  40b5af:	and    BYTE PTR [rax],ah
  40b5b1:	and    BYTE PTR [rsi+0x61],cl
  40b5b4:	ins    DWORD PTR es:[rdi],dx
  40b5b5:	and    BYTE PTR gs:[rdi+0x66],ch
  40b5b9:	and    BYTE PTR [rcx+0x6e],ch
  40b5bc:	jo     0x40b633
  40b5be:	je     0x40b5e0
  40b5c0:	fs ins BYTE PTR es:[rdi],dx
  40b5c2:	ins    BYTE PTR es:[rdi],dx
  40b5c3:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  40b5c7:	jo     0x40b63e
  40b5c9:	je     0x40b5eb
  40b5cb:	imul   ebp,DWORD PTR [rsi+0x74],0x756f206f
  40b5d2:	je     0x40b644
  40b5d4:	jne    0x40b64a
  40b5d6:	and    BYTE PTR [rcx+rbp*2+0x62],ch
  40b5da:	or     al,BYTE PTR cs:[rax]
  40b5dd:	add    BYTE PTR [rax],al
  40b5df:	add    BYTE PTR [rax],ah
  40b5e1:	and    BYTE PTR [rax],ah
  40b5e3:	sub    eax,0x6665642d
  40b5e8:	and    BYTE PTR [rsp+riz*2],bh
  40b5eb:	data16 imul bp,WORD PTR gs:[rbp+riz*2+0x3e],0x2020
  40b5f4:	and    BYTE PTR [rax],ah
  40b5f6:	and    BYTE PTR [rax],ah
  40b5f8:	and    BYTE PTR [rax],ah
  40b5fa:	rex.WRX (bad) 
  40b5fc:	ins    DWORD PTR es:[rdi],dx
  40b5fd:	and    BYTE PTR gs:[rcx+0x6e],ch
  40b601:	jo     0x40b678
  40b603:	je     0x40b625
  40b605:	cs fs data16 and BYTE PTR gs:[rsi+0x69],ah
  40b60c:	ins    BYTE PTR es:[rdi],dx
  40b60d:	or     al,BYTE PTR gs:[rax]
  40b610:	and    BYTE PTR [rax],ah
  40b612:	and    BYTE PTR [rip+0x74756f2d],ch        # 0x74b62545
  40b618:	jo     0x40b68f
  40b61a:	je     0x40b649
  40b61c:	fs data16 and BYTE PTR gs:[rsp+riz*2],bh
  40b622:	data16 imul bp,WORD PTR gs:[rbp+riz*2+0x3e],0x4e20
  40b62b:	(bad)  
  40b62c:	ins    DWORD PTR es:[rdi],dx
  40b62d:	and    BYTE PTR gs:[rdi+0x75],ch
  40b631:	je     0x40b6a3
  40b633:	jne    0x40b6a9
  40b635:	and    BYTE PTR [rsi],ch
  40b637:	fs data16 and BYTE PTR gs:[rsi+0x69],ah
  40b63d:	ins    BYTE PTR es:[rdi],dx
  40b63e:	or     al,BYTE PTR gs:[rax]
  40b641:	add    BYTE PTR [rax],al
  40b643:	add    BYTE PTR [rax],al
  40b645:	add    BYTE PTR [rax],al
  40b647:	add    BYTE PTR [rax],ah
  40b649:	and    BYTE PTR [rax],ah
  40b64b:	sub    eax,0x7078652d
  40b650:	outs   dx,DWORD PTR ds:[rsi]
  40b651:	jb     0x40b6c7
  40b653:	sub    eax,0x2d6c6c61
  40b658:	jae    0x40b6d3
  40b65a:	ins    DWORD PTR es:[rdi],dx
  40b65b:	(bad)  
  40b65c:	outs   dx,DWORD PTR ds:[rsi]
  40b65d:	ins    BYTE PTR es:[rdi],dx
  40b65e:	jae    0x40b680
  40b660:	and    BYTE PTR [rax],ah
  40b662:	and    BYTE PTR [rax],ah
  40b664:	rex.RB js 0x40b6d7
  40b667:	outs   dx,DWORD PTR ds:[rsi]
  40b668:	jb     0x40b6de
  40b66a:	and    BYTE PTR [rcx+0x6c],ah
  40b66d:	ins    BYTE PTR es:[rdi],dx
  40b66e:	and    BYTE PTR [rbx+0x79],dh
  40b671:	ins    DWORD PTR es:[rdi],dx
  40b672:	(bad)  
  40b673:	outs   dx,DWORD PTR ds:[rsi]
  40b674:	ins    BYTE PTR es:[rdi],dx
  40b675:	jae    0x40b697
  40b677:	je     0x40b6e8
  40b679:	and    BYTE PTR [rsi],ch
  40b67b:	fs data16 or al,BYTE PTR gs:[rax]
  40b680:	and    BYTE PTR [rax],ah
  40b682:	and    BYTE PTR [rip+0x2d6f6e2d],ch        # 0x2db024b5
  40b688:	gs js  0x40b6fb
  40b68b:	outs   dx,DWORD PTR ds:[rsi]
  40b68c:	jb     0x40b702
  40b68e:	sub    eax,0x2d6c6c61
  40b693:	jae    0x40b70e
  40b695:	ins    DWORD PTR es:[rdi],dx
  40b696:	(bad)  
  40b697:	outs   dx,DWORD PTR ds:[rsi]
  40b698:	ins    BYTE PTR es:[rdi],dx
  40b699:	jae    0x40b6bb
  40b69b:	and    BYTE PTR [rdi+0x6e],cl
  40b69e:	ins    BYTE PTR es:[rdi],dx
  40b69f:	jns    0x40b6c1
  40b6a1:	gs js  0x40b714
  40b6a4:	outs   dx,DWORD PTR ds:[rsi]
  40b6a5:	jb     0x40b71b
  40b6a7:	and    BYTE PTR [rsi],ch
  40b6a9:	fs jb  0x40b711
  40b6ac:	movsxd esi,DWORD PTR [rsi+rsi*2+0x65]
  40b6b0:	and    BYTE PTR [rbx+0x79],dh
  40b6b3:	ins    DWORD PTR es:[rdi],dx
  40b6b4:	(bad)  
  40b6b5:	outs   dx,DWORD PTR ds:[rsi]
  40b6b6:	ins    BYTE PTR es:[rdi],dx
  40b6b7:	jae    0x40b6c3
  40b6b9:	add    BYTE PTR [rax],al
  40b6bb:	add    BYTE PTR [rax],al
  40b6bd:	add    BYTE PTR [rax],al
  40b6bf:	add    BYTE PTR [rax],ah
  40b6c1:	and    BYTE PTR [rax],ah
  40b6c3:	sub    eax,0x6378652d
  40b6c8:	ins    BYTE PTR es:[rdi],dx
  40b6c9:	jne    0x40b72f
  40b6cb:	gs sub eax,0x626d7973
  40b6d1:	outs   dx,DWORD PTR ds:[rsi]
  40b6d2:	ins    BYTE PTR es:[rdi],dx
  40b6d3:	jae    0x40b6f5
  40b6d5:	cmp    al,0x6c
  40b6d7:	imul   esi,DWORD PTR [rbx+0x74],0x7845203e
  40b6de:	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
  40b6e2:	and    BYTE PTR gs:[rsp+rbp*2],bh
  40b6e6:	imul   esi,DWORD PTR [rbx+0x74],0x7266203e
  40b6ed:	outs   dx,DWORD PTR ds:[rsi]
  40b6ee:	ins    DWORD PTR es:[rdi],dx
  40b6ef:	and    BYTE PTR [rsi],ch
  40b6f1:	fs data16 or al,BYTE PTR gs:[rax]
  40b6f6:	add    BYTE PTR [rax],al
  40b6f8:	and    BYTE PTR [rax],ah
  40b6fa:	and    BYTE PTR [rip+0x2d6f6e2d],ch        # 0x2db0252d
  40b700:	fs gs data16 (bad) 
  40b704:	jne    0x40b772
  40b706:	je     0x40b735
  40b708:	gs js  0x40b76e
  40b70b:	ins    BYTE PTR es:[rdi],dx
  40b70c:	jne    0x40b772
  40b70e:	gs jae 0x40b731
  40b711:	and    BYTE PTR [rax],ah
  40b713:	and    BYTE PTR [rdx+0x61],bl
  40b716:	jo     0x40b738
  40b718:	fs gs data16 (bad) 
  40b71c:	jne    0x40b78a
  40b71e:	je     0x40b740
  40b720:	gs js  0x40b786
  40b723:	ins    BYTE PTR es:[rdi],dx
  40b724:	jne    0x40b78a
  40b726:	and    BYTE PTR gs:[rbx+0x79],dh
  40b72a:	ins    DWORD PTR es:[rdi],dx
  40b72b:	(bad)  
  40b72c:	outs   dx,DWORD PTR ds:[rsi]
  40b72d:	ins    BYTE PTR es:[rdi],dx
  40b72e:	jae    0x40b73a
	...
  40b738:	and    BYTE PTR [rax],ah
  40b73a:	and    BYTE PTR [rip+0x7361622d],ch        # 0x73a2196d
  40b740:	gs sub eax,0x656c6966
  40b746:	and    BYTE PTR [rdx+riz*2],bh
  40b749:	(bad)  
  40b74a:	jae    0x40b7b1
  40b74c:	imul   bp,WORD PTR [rbp+riz*2+0x3e],0x5220
  40b753:	gs (bad) 
  40b755:	and    BYTE PTR fs:[rcx+rbp*2+0x6e],ch
  40b75a:	imul   esp,DWORD PTR [rbp+0x72],0x20
  40b75e:	outs   dx,BYTE PTR gs:[esi]
  40b761:	gs jb  0x40b7c5
  40b764:	je     0x40b7cb
  40b766:	and    BYTE PTR fs:[rdx+0x61],ah
  40b76a:	jae    0x40b7d1
  40b76c:	and    BYTE PTR [rsi+0x69],ah
  40b76f:	ins    BYTE PTR es:[rdi],dx
  40b770:	or     al,BYTE PTR gs:[rax]
  40b773:	add    BYTE PTR [rax],al
  40b775:	add    BYTE PTR [rax],al
  40b777:	add    BYTE PTR [rax],ah
  40b779:	and    BYTE PTR [rax],ah
  40b77b:	sub    eax,0x2d6f6e2d
  40b780:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x20203461
  40b788:	and    BYTE PTR [rax],ah
  40b78a:	and    BYTE PTR [rax],ah
  40b78c:	and    BYTE PTR [rax],ah
  40b78e:	and    BYTE PTR [rax],ah
  40b790:	and    BYTE PTR [rdi+rbp*2+0x6e],al
  40b794:	(bad)  
  40b795:	je     0x40b7b7
  40b797:	outs   dx,BYTE PTR gs:[esi]
  40b79a:	gs jb  0x40b7fe
  40b79d:	je     0x40b804
  40b79f:	and    BYTE PTR [rcx+0x64],ch
  40b7a2:	(bad)  
  40b7a3:	je     0x40b806
  40b7a5:	and    al,0x34
  40b7a7:	and    BYTE PTR [rbx+0x65],dh
  40b7aa:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  40b7ae:	outs   dx,BYTE PTR ds:[rsi]
  40b7af:	or     al,BYTE PTR [rax]
  40b7b1:	add    BYTE PTR [rax],al
  40b7b3:	add    BYTE PTR [rax],al
  40b7b5:	add    BYTE PTR [rax],al
  40b7b7:	add    BYTE PTR [rax],ah
  40b7b9:	and    BYTE PTR [rax],ah
  40b7bb:	sub    eax,0x2d6f6e2d
  40b7c0:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x20203561
  40b7c8:	and    BYTE PTR [rax],ah
  40b7ca:	and    BYTE PTR [rax],ah
  40b7cc:	and    BYTE PTR [rax],ah
  40b7ce:	and    BYTE PTR [rax],ah
  40b7d0:	and    BYTE PTR [rdi+rbp*2+0x6e],al
  40b7d4:	(bad)  
  40b7d5:	je     0x40b7f7
  40b7d7:	outs   dx,BYTE PTR gs:[esi]
  40b7da:	gs jb  0x40b83e
  40b7dd:	je     0x40b844
  40b7df:	and    BYTE PTR [rcx+0x64],ch
  40b7e2:	(bad)  
  40b7e3:	je     0x40b846
  40b7e5:	and    al,0x35
  40b7e7:	and    BYTE PTR [rbx+0x65],dh
  40b7ea:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  40b7ee:	outs   dx,BYTE PTR ds:[rsi]
  40b7ef:	or     al,BYTE PTR [rax]
  40b7f1:	add    BYTE PTR [rax],al
  40b7f3:	add    BYTE PTR [rax],al
  40b7f5:	add    BYTE PTR [rax],al
  40b7f7:	add    BYTE PTR [rax],ah
  40b7f9:	and    BYTE PTR [rax],ah
  40b7fb:	sub    eax,0x20202055
  40b800:	and    BYTE PTR [rax],ah
  40b802:	and    BYTE PTR [rax],ah
  40b804:	and    BYTE PTR [rax],ah
  40b806:	and    BYTE PTR [rax],ah
  40b808:	and    BYTE PTR [rax],ah
  40b80a:	and    BYTE PTR [rax],ah
  40b80c:	and    BYTE PTR [rax],ah
  40b80e:	and    BYTE PTR [rax],ah
  40b810:	and    BYTE PTR [rax],ah
  40b812:	rex.B
  40b813:	fs and BYTE PTR fs:[rbp+0x6e],dh
  40b818:	fs gs jb 0x40b88f
  40b81c:	movsxd ebp,DWORD PTR [rdi+0x72]
  40b81f:	gs jae 0x40b842
  40b822:	je     0x40b893
  40b824:	and    BYTE PTR [rsi],ch
  40b826:	ins    BYTE PTR es:[rdi],dx
  40b827:	imul   esp,DWORD PTR [rdx+0xa],0x0
  40b82e:	add    BYTE PTR [rax],al
  40b830:	and    BYTE PTR [rax],ah
  40b832:	and    BYTE PTR [rip+0x2020206b],ch        # 0x2060d8a3
  40b838:	and    BYTE PTR [rax],ah
  40b83a:	and    BYTE PTR [rax],ah
  40b83c:	and    BYTE PTR [rax],ah
  40b83e:	and    BYTE PTR [rax],ah
  40b840:	and    BYTE PTR [rax],ah
  40b842:	and    BYTE PTR [rax],ah
  40b844:	and    BYTE PTR [rax],ah
  40b846:	and    BYTE PTR [rax],ah
  40b848:	and    BYTE PTR [rax],ah
  40b84a:	imul   rbp,QWORD PTR [r12+r13*2+0x20],0x3e6e3c40
  40b853:	and    BYTE PTR [rsi+0x72],ah
  40b856:	outs   dx,DWORD PTR ds:[rsi]
  40b857:	ins    DWORD PTR es:[rdi],dx
  40b858:	and    BYTE PTR [rbp+0x78],ah
  40b85b:	jo     0x40b8cc
  40b85d:	jb     0x40b8d3
  40b85f:	gs and BYTE PTR fs:[rsi+0x61],ch
  40b864:	ins    DWORD PTR es:[rdi],dx
  40b865:	gs jae 0x40b872
	...
  40b870:	and    BYTE PTR [rax],ah
  40b872:	and    BYTE PTR [rip+0x6464612d],ch        # 0x64a519a5
  40b878:	sub    eax,0x63647473
  40b87d:	(bad)  
  40b87e:	ins    BYTE PTR es:[rdi],dx
  40b87f:	ins    BYTE PTR es:[rdi],dx
  40b880:	sub    eax,0x61696c61
  40b885:	jae    0x40b8a7
  40b887:	and    BYTE PTR [rax],ah
  40b889:	and    BYTE PTR [rcx+0x64],al
  40b88c:	and    BYTE PTR fs:[rcx+0x6c],ah
  40b890:	imul   esp,DWORD PTR [rcx+0x73],0x77207365
  40b897:	imul   esi,DWORD PTR [rax+rbp*2+0x6f],0x40207475
  40b89f:	cmp    al,0x6e
  40b8a1:	or     al,BYTE PTR ds:[rax]
  40b8a4:	add    BYTE PTR [rax],al
  40b8a6:	add    BYTE PTR [rax],al
  40b8a8:	and    BYTE PTR [rax],ah
  40b8aa:	and    BYTE PTR [rip+0x2073612d],ch        # 0x20b419dd
  40b8b0:	cmp    al,0x6e
  40b8b2:	(bad)  
  40b8b3:	ins    DWORD PTR es:[rdi],dx
  40b8b4:	gs and BYTE PTR ds:[rax],ah
  40b8b8:	and    BYTE PTR [rax],ah
  40b8ba:	and    BYTE PTR [rax],ah
  40b8bc:	and    BYTE PTR [rax],ah
  40b8be:	and    BYTE PTR [rax],ah
  40b8c0:	and    BYTE PTR [rax],ah
  40b8c2:	push   rbp
  40b8c3:	jae    0x40b92a
  40b8c5:	and    BYTE PTR [rsi+rbp*2],bh
  40b8c8:	(bad)  
  40b8c9:	ins    DWORD PTR es:[rdi],dx
  40b8ca:	gs and BYTE PTR ds:[rsi+0x6f],ah
  40b8cf:	jb     0x40b8f1
  40b8d1:	(bad)  
  40b8d2:	jae    0x40b947
  40b8d4:	gs ins DWORD PTR es:[rdi],dx
  40b8d6:	(bad)  
  40b8d7:	ins    BYTE PTR es:[rdi],dx
  40b8d8:	gs jb  0x40b8e5
  40b8db:	add    BYTE PTR [rax],al
  40b8dd:	add    BYTE PTR [rax],al
  40b8df:	add    BYTE PTR [rax],ah
  40b8e1:	and    BYTE PTR [rax],ah
  40b8e3:	sub    eax,0x646f6e2d
  40b8e8:	gs ins BYTE PTR es:[rdi],dx
  40b8ea:	gs je  0x40b952
  40b8ed:	and    BYTE PTR [rax],ah
  40b8ef:	and    BYTE PTR [rax],ah
  40b8f1:	and    BYTE PTR [rax],ah
  40b8f3:	and    BYTE PTR [rax],ah
  40b8f5:	and    BYTE PTR [rax],ah
  40b8f7:	and    BYTE PTR [rax],ah
  40b8f9:	and    BYTE PTR [rbx+0x65],cl
  40b8fc:	gs jo  0x40b91f
  40b8ff:	je     0x40b966
  40b901:	ins    DWORD PTR es:[rdi],dx
  40b902:	jo     0x40b924
  40b904:	imul   bp,WORD PTR [rbp+riz*2+0x73],0xa2e
  40b90b:	add    BYTE PTR [rax],al
  40b90d:	add    BYTE PTR [rax],al
  40b90f:	add    BYTE PTR [rax],ah
  40b911:	and    BYTE PTR [rax],ah
  40b913:	sub    eax,0x2d6f6e2d
  40b918:	ins    BYTE PTR es:[rdi],dx
  40b919:	gs (bad) 
  40b91b:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x646e752d
  40b923:	gs jb  0x40b999
  40b926:	movsxd ebp,DWORD PTR [rdi+0x72]
  40b929:	and    BYTE PTR gs:[rax],ah
  40b92c:	rex.RB outs dx,BYTE PTR ds:[rsi]
  40b92e:	je     0x40b9a2
  40b930:	jns    0x40b9a2
  40b932:	outs   dx,DWORD PTR ds:[rsi]
  40b933:	imul   ebp,DWORD PTR [rsi+0x74],0x74697720
  40b93a:	push   0x2074756f
  40b93f:	jne    0x40b9af
  40b941:	fs gs jb 0x40b9b8
  40b945:	movsxd ebp,DWORD PTR [rdi+0x72]
  40b948:	or     al,BYTE PTR gs:[rax]
  40b94b:	add    BYTE PTR [rax],al
  40b94d:	add    BYTE PTR [rax],al
  40b94f:	add    BYTE PTR [rax],ah
  40b951:	and    BYTE PTR [rax],ah
  40b953:	sub    eax,0x61656c2d
  40b958:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x646e752d
  40b960:	gs jb  0x40b9d6
  40b963:	movsxd ebp,DWORD PTR [rdi+0x72]
  40b966:	and    BYTE PTR gs:[rax],ah
  40b969:	and    BYTE PTR [rax],ah
  40b96b:	and    BYTE PTR [rbp+0x6e],al
  40b96e:	je     0x40b9e2
  40b970:	jns    0x40b9e2
  40b972:	outs   dx,DWORD PTR ds:[rsi]
  40b973:	imul   ebp,DWORD PTR [rsi+0x74],0x74697720
  40b97a:	push   0x646e7520
  40b97f:	gs jb  0x40b9f5
  40b982:	movsxd ebp,DWORD PTR [rdi+0x72]
  40b985:	gs or  al,BYTE PTR cs:[rax]
  40b989:	add    BYTE PTR [rax],al
  40b98b:	add    BYTE PTR [rax],al
  40b98d:	add    BYTE PTR [rax],al
  40b98f:	add    BYTE PTR [rax],ah
  40b991:	and    BYTE PTR [rdx+0x65],dl
  40b994:	jae    0x40ba0a
  40b996:	and    BYTE PTR [rcx+0x72],ah
  40b999:	and    BYTE PTR gs:[rax+0x61],dh
  40b99d:	jae    0x40ba12
  40b99f:	gs and BYTE PTR fs:[rbp+0x6e],dh
  40b9a4:	ins    DWORD PTR es:[rdi],dx
  40b9a5:	outs   dx,DWORD PTR ds:[rsi]
  40b9a6:	imul   esp,DWORD PTR fs:[rsi+0x69],0x74206465
  40b9ae:	outs   dx,DWORD PTR ds:[rsi]
  40b9af:	and    BYTE PTR [rax+rbp*2+0x65],dh
  40b9b3:	and    BYTE PTR [rcx+riz*2+0x6e],ch
  40b9b7:	addr32 jne 0x40ba1b
  40b9ba:	and    BYTE PTR gs:[edx+esi*2+0x69],ah
  40b9c0:	jbe    0x40ba27
  40b9c2:	jb     0x40b9ce
  40b9c4:	add    BYTE PTR [rdx],cl
  40b9c6:	or     al,BYTE PTR [rax]
  40b9c8:	cmp    al,0x68
  40b9ca:	je     0x40ba40
  40b9cc:	jo     0x40ba08
  40b9ce:	(bad)  
  40b9cf:	(bad)  
  40b9d0:	ja     0x40ba49
  40b9d2:	ja     0x40ba02
  40b9d4:	jae    0x40ba45
  40b9d6:	jne    0x40ba4a
  40b9d8:	movsxd esp,DWORD PTR [rbp+0x77]
  40b9db:	(bad)  
  40b9dc:	jb     0x40ba43
  40b9de:	outs   dx,DWORD PTR cs:[rsi]
  40b9e0:	jb     0x40ba49
  40b9e2:	(bad)  
  40b9e3:	(bad)  
  40b9e4:	jne    0x40ba4d
  40b9e6:	jp     0x40ba51
  40b9e8:	ins    BYTE PTR es:[rdi],dx
  40b9e9:	ins    BYTE PTR es:[rdi],dx
  40b9ea:	(bad)  
  40b9eb:	(bad)  
  40b9ec:	add    BYTE PTR ds:[rdx+0x65],dl
  40b9f0:	jo     0x40ba61
  40b9f2:	jb     0x40ba68
  40b9f4:	and    BYTE PTR [rdx+0x75],ah
  40b9f7:	addr32 jae 0x40ba1a
  40b9fa:	je     0x40ba6b
  40b9fc:	and    BYTE PTR [rip+0x69000a73],ah        # 0x6940c475
  40ba02:	xor    edi,DWORD PTR [rax]
  40ba04:	ss sub eax,0x676e696d
  40ba0a:	ja     0x40ba3f
  40ba0c:	xor    al,BYTE PTR [rax]
  40ba0e:	outs   dx,BYTE PTR ds:[rsi]
  40ba0f:	imul   eax,DWORD PTR [rcx+0x71],0x76
  40ba13:	cmp    dl,BYTE PTR gs:[rbp+0x68]
  40ba17:	outs   dx,DWORD PTR ds:[rsi]
  40ba18:	cmp    ch,BYTE PTR [rdx+rdi*1+0x4c]
  40ba1c:	cmp    cl,BYTE PTR [rcx+0x3a]
  40ba1f:	add    BYTE PTR [rbp+0x75],cl
  40ba22:	jae    0x40ba98
  40ba24:	and    BYTE PTR [rax+0x72],dh
  40ba27:	outs   dx,DWORD PTR ds:[rsi]
  40ba28:	jbe    0x40ba93
  40ba2a:	fs and BYTE PTR gs:[rcx+0x74],ah
  40ba2f:	and    BYTE PTR [rbp+riz*2+0x61],ch
  40ba33:	jae    0x40baa9
  40ba35:	and    BYTE PTR [rdi+0x6e],ch
  40ba38:	and    BYTE PTR gs:[rdi+0x66],ch
  40ba3c:	and    BYTE PTR [rip+0x726f206f],ch        # 0x72afdab1
  40ba42:	and    BYTE PTR [rip+0x6c6c642d],ch        # 0x6cad1e75
  40ba48:	outs   dx,BYTE PTR ds:[rsi]
  40ba49:	(bad)  
  40ba4a:	ins    DWORD PTR es:[rdi],dx
  40ba4b:	and    BYTE PTR gs:[rdi+0x70],ch
  40ba4f:	je     0x40baba
  40ba51:	outs   dx,DWORD PTR ds:[rsi]
  40ba52:	outs   dx,BYTE PTR ds:[rsi]
  40ba53:	jae    0x40ba55
  40ba55:	movsxd esp,DWORD PTR [ebx+0x0]
  40ba59:	fs ins BYTE PTR es:[rdi],dx
  40ba5b:	ins    BYTE PTR es:[rdi],dx
  40ba5c:	je     0x40bacd
  40ba5e:	outs   dx,DWORD PTR ds:[rsi]
  40ba5f:	ins    BYTE PTR es:[rdi],dx
  40ba60:	add    BYTE PTR [rip+0x65642e73],ah        # 0x65a4e8d9
  40ba66:	data16 add BYTE PTR [rsi+0x6f],ch
  40ba6a:	and    BYTE PTR [rbp+0x78],ah
  40ba6d:	jo     0x40bade
  40ba6f:	jb     0x40bae5
  40ba71:	and    BYTE PTR [rbp+riz*2+0x66],ah
  40ba75:	imul   ebp,DWORD PTR [rsi+0x69],0x6e6f6974
  40ba7c:	and    BYTE PTR [rsi+0x69],ah
  40ba7f:	ins    BYTE PTR es:[rdi],dx
  40ba80:	and    BYTE PTR gs:[rax+0x72],dh
  40ba84:	outs   dx,DWORD PTR ds:[rsi]
  40ba85:	jbe    0x40baf0
  40ba87:	fs gs fs or al,BYTE PTR cs:[rbx+0x72]
  40ba8e:	gs (bad) 
  40ba90:	je     0x40bafb
  40ba92:	outs   dx,BYTE PTR ds:[rsi]
  40ba93:	and    BYTE PTR [edi+0x6e],ch
  40ba97:	gs sub al,0x20
  40ba9a:	(bad)  
  40ba9b:	jne    0x40bb11
  40ba9d:	and    BYTE PTR [rax+rbp*2+0x61],dh
  40baa1:	je     0x40bac3
  40baa3:	ins    DWORD PTR es:[rdi],dx
  40baa4:	(bad)  
  40baa5:	jns    0x40bac7
  40baa7:	outs   dx,BYTE PTR ds:[rsi]
  40baa8:	outs   dx,DWORD PTR ds:[rsi]
  40baa9:	je     0x40bacb
  40baab:	(bad)  
  40baac:	and    BYTE PTR gs:[rdi+0x68],dh
  40bab0:	(bad)  
  40bab1:	je     0x40bad3
  40bab3:	jns    0x40bb24
  40bab5:	jne    0x40bad7
  40bab7:	ja     0x40bb1a
  40bab9:	outs   dx,BYTE PTR ds:[rsi]
  40baba:	je     0x40babc
  40babc:	movsxd edi,DWORD PTR [rcx+0x67]
  40babf:	ja     0x40bb2a
  40bac1:	outs   dx,BYTE PTR ds:[rsi]
  40bac2:	add    BYTE PTR [rbp+0x69],ch
  40bac5:	outs   dx,BYTE PTR ds:[rsi]
  40bac6:	addr32 ja 0x40bac9
  40bac9:	(bad)  
  40baca:	jb     0x40bb39
  40bacc:	add    BYTE PTR [rax+0x38],bh
  40bacf:	ss pop rdi
  40bad1:	ss xor al,0x0
  40bad4:	(bad)  
  40bad5:	je     0x40bb3f
  40bad7:	ins    BYTE PTR es:[rdi],dx
  40bad8:	outs   dx,DWORD PTR ds:[rsi]
  40bad9:	outs   dx,BYTE PTR ds:[rsi]
  40bada:	ss xor al,0x0
  40badd:	(bad)  
  40bade:	ins    DWORD PTR es:[rdi],dx
  40badf:	fs ss xor al,0x0
  40bae3:	and    BYTE PTR [rip+0x2d200076],ch        # 0x2d60bb5f
  40bae9:	sub    eax,0x6e6c6c64
  40baee:	(bad)  
  40baef:	ins    DWORD PTR es:[rdi],dx
  40baf0:	and    BYTE PTR gs:[rax],al
  40baf3:	and    BYTE PTR [rip+0x2000206f],ch        # 0x2040db68
  40baf9:	sub    eax,0x2d6f6e2d
  40bafe:	ins    BYTE PTR es:[rdi],dx
  40baff:	gs (bad) 
  40bb01:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x646e752d
  40bb09:	gs jb  0x40bb7f
  40bb0c:	movsxd ebp,DWORD PTR [rdi+0x72]
  40bb0f:	add    BYTE PTR gs:[rax],ah
  40bb12:	sub    eax,0x61656c2d
  40bb17:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x646e752d
  40bb1f:	gs jb  0x40bb95
  40bb22:	movsxd ebp,DWORD PTR [rdi+0x72]
  40bb25:	add    BYTE PTR gs:[rip+0x25732573],ah        # 0x25b3e09f
  40bb2c:	jae    0x40bb2e
  40bb2e:	and    BYTE PTR [rip+0x2d2c6c57],ch        # 0x2d6d278b
  40bb34:	gs sub al,0x0
  40bb37:	and    BYTE PTR [rip+0x6378652d],ch        # 0x63b9206a
  40bb3d:	ins    BYTE PTR es:[rdi],dx
  40bb3e:	jne    0x40bba4
  40bb40:	gs sub eax,0x626d7973
  40bb46:	outs   dx,DWORD PTR ds:[rsi]
  40bb47:	ins    BYTE PTR es:[rdi],dx
  40bb48:	cmp    eax,0x25783000
  40bb4d:	cmp    BYTE PTR cs:[rax+rbx*2+0x0],ch
  40bb52:	and    BYTE PTR [rip+0x2d2c6c57],ch        # 0x2d6d27af
  40bb58:	sub    eax,0x67616d69
  40bb5d:	gs sub eax,0x65736162
  40bb63:	sub    al,0x0
  40bb65:	add    BYTE PTR [rax],al
  40bb67:	add    BYTE PTR [rax],ah
  40bb69:	sub    eax,0x7078652d
  40bb6e:	outs   dx,DWORD PTR ds:[rsi]
  40bb6f:	jb     0x40bbe5
  40bb71:	sub    eax,0x206c6c61
  40bb76:	sub    eax,0x6378652d
  40bb7b:	ins    BYTE PTR es:[rdi],dx
  40bb7c:	jne    0x40bbe2
  40bb7e:	gs sub eax,0x626d7973
  40bb84:	outs   dx,DWORD PTR ds:[rsi]
  40bb85:	ins    BYTE PTR es:[rdi],dx
  40bb86:	cmp    eax,0x79635f00
  40bb8b:	addr32 ja 0x40bbf7
  40bb8e:	outs   dx,BYTE PTR ds:[rsi]
  40bb8f:	pop    rdi
  40bb90:	fs ins BYTE PTR es:[rdi],dx
  40bb92:	ins    BYTE PTR es:[rdi],dx
  40bb93:	pop    rdi
  40bb94:	outs   dx,BYTE PTR gs:[rsi]
  40bb96:	je     0x40bc0a
  40bb98:	jns    0x40bbda
  40bb9a:	xor    DWORD PTR [rdx],esi
  40bb9c:	sub    al,0x44
  40bb9e:	ins    BYTE PTR es:[rdi],dx
  40bb9f:	ins    BYTE PTR es:[rdi],dx
  40bba0:	rex.WRB (bad) 
  40bba2:	imul   ebp,DWORD PTR [rsi+0x43],0x74535452
  40bba9:	(bad)  
  40bbaa:	jb     0x40bc20
  40bbac:	jne    0x40bc1e
  40bbae:	rex xor DWORD PTR [rdx],esi
  40bbb1:	sub    al,0x44
  40bbb3:	ins    BYTE PTR es:[rdi],dx
  40bbb4:	ins    BYTE PTR es:[rdi],dx
  40bbb5:	rex.WRB (bad) 
  40bbb7:	imul   ebp,DWORD PTR [rsi+0x40],0x442c3231
  40bbbe:	ins    BYTE PTR es:[rdi],dx
  40bbbf:	ins    BYTE PTR es:[rdi],dx
  40bbc0:	rex.RB outs dx,BYTE PTR ds:[rsi]
  40bbc2:	je     0x40bc36
  40bbc4:	jns    0x40bc16
  40bbc6:	outs   dx,DWORD PTR ds:[rsi]
  40bbc7:	imul   ebp,DWORD PTR [rsi+0x74],0x323140
  40bbce:	and    BYTE PTR [rip+0x74756f2d],ch        # 0x74b62b01
  40bbd4:	jo     0x40bc4b
  40bbd6:	je     0x40bc05
  40bbd8:	fs data16 and BYTE PTR gs:[rax],al
  40bbdd:	and    BYTE PTR [rip+0x6665642d],ch        # 0x66a62010
  40bbe3:	and    BYTE PTR [rax],al
  40bbe5:	rex.R
  40bbe6:	rex.WR
  40bbe7:	rex.WR push rsp
  40bbe9:	rex.WRXB
  40bbea:	rex.WRXB
  40bbeb:	rex.WR and BYTE PTR [rsi+0x61],r13b
  40bbef:	ins    DWORD PTR es:[rdi],dx
  40bbf0:	and    BYTE PTR gs:[rax],ah
  40bbf3:	and    BYTE PTR [rax],ah
  40bbf5:	cmp    ah,BYTE PTR [rax]
  40bbf7:	and    eax,0x44000a73
  40bbfc:	rex.WR
  40bbfd:	rex.WR push rsp
  40bbff:	rex.WRXB
  40bc00:	rex.WRXB
  40bc01:	rex.WR and BYTE PTR [rdi+0x70],r13b
  40bc05:	je     0x40bc70
  40bc07:	outs   dx,DWORD PTR ds:[rsi]
  40bc08:	outs   dx,BYTE PTR ds:[rsi]
  40bc09:	jae    0x40bc2b
  40bc0b:	cmp    ah,BYTE PTR [rax]
  40bc0d:	and    eax,0x44000a73
  40bc12:	push   rdx
  40bc13:	rex.WB push r14
  40bc15:	rex.RB push r10
  40bc17:	and    BYTE PTR [rsi+0x61],ch
  40bc1a:	ins    DWORD PTR es:[rdi],dx
  40bc1b:	and    BYTE PTR gs:[rax],ah
  40bc1e:	and    BYTE PTR [rax],ah
  40bc20:	and    BYTE PTR [rdx],bh
  40bc22:	and    BYTE PTR [rip+0x44000a73],ah        # 0x4440c69b
  40bc28:	push   rdx
  40bc29:	rex.WB push r14
  40bc2b:	rex.RB push r10
  40bc2d:	and    BYTE PTR [rdi+0x70],ch
  40bc30:	je     0x40bc9b
  40bc32:	outs   dx,DWORD PTR ds:[rsi]
  40bc33:	outs   dx,BYTE PTR ds:[rsi]
  40bc34:	jae    0x40bc56
  40bc36:	and    BYTE PTR [rdx],bh
  40bc38:	and    BYTE PTR [rip+0x25000a73],ah        # 0x2540c6b1
  40bc3e:	jae    0x40bc6e
  40bc40:	(bad)  
  40bc42:	jae    0x40bca9
  40bc44:	add    BYTE PTR [rip+0x2d2c6c57],ch        # 0x2d6d28a1
  40bc4a:	sub    eax,0x65736162
  40bc4f:	sub    eax,0x656c6966
  40bc54:	sub    al,0x0
  40bc56:	sub    eax,0x7361622d
  40bc5b:	gs sub eax,0x656c6966
  40bc61:	and    BYTE PTR [rax],al
  40bc63:	sub    eax,0x74756f2d
  40bc68:	jo     0x40bcdf
  40bc6a:	je     0x40bc99
  40bc6c:	gs js  0x40bcdf
  40bc6f:	and    BYTE PTR [rax],al
  40bc71:	and    BYTE PTR [rip+0x74756f2d],ch        # 0x74b62ba4
  40bc77:	jo     0x40bcee
  40bc79:	je     0x40bca8
  40bc7b:	ins    BYTE PTR es:[rdi],dx
  40bc7c:	imul   esp,DWORD PTR [rdx+0x20],0x222000
  40bc83:	add    BYTE PTR [rbp+0x37ffffc1],al
  40bc89:	enter  0xffff,0x37
  40bc8d:	enter  0xffff,0x37
  40bc91:	enter  0xffff,0x37
  40bc95:	enter  0xffff,0x37
  40bc99:	enter  0xffff,0x37
  40bc9d:	enter  0xffff,0x37
  40bca1:	enter  0xffff,0x37
  40bca5:	enter  0xffff,0x37
  40bca9:	enter  0xffff,0x22
  40bcad:	enter  0xffff,0x37
  40bcb1:	enter  0xffff,0x37
  40bcb5:	enter  0xffff,0x22
  40bcb9:	enter  0xffff,0x37
  40bcbd:	enter  0xffff,0x37
  40bcc1:	enter  0xffff,0x37
  40bcc5:	enter  0xffff,0x37
  40bcc9:	enter  0xffff,0x37
  40bccd:	enter  0xffff,0x37
  40bcd1:	enter  0xffff,0x37
  40bcd5:	enter  0xffff,0x37
  40bcd9:	enter  0xffff,0x37
  40bcdd:	enter  0xffff,0x37
  40bce1:	enter  0xffff,0x37
  40bce5:	enter  0xffff,0x37
  40bce9:	enter  0xffff,0x37
  40bced:	enter  0xffff,0x37
  40bcf1:	enter  0xffff,0x37
  40bcf5:	enter  0xffff,0x37
  40bcf9:	enter  0xffff,0x37
  40bcfd:	enter  0xffff,0x37
  40bd01:	enter  0xffff,0x37
  40bd05:	enter  0xffff,0x37
  40bd09:	enter  0xffff,0x37
  40bd0d:	enter  0xffff,0x37
  40bd11:	enter  0xffff,0x37
  40bd15:	enter  0xffff,0x37
  40bd19:	enter  0xffff,0x9
  40bd1d:	enter  0xffff,0x37
  40bd21:	enter  0xffff,0x37
  40bd25:	enter  0xffff,0xda
  40bd29:	ret    
  40bd2a:	(bad)  
  40bd2b:	push   QWORD PTR [rdi]
  40bd2d:	enter  0xffff,0x37
  40bd31:	enter  0xffff,0x37
  40bd35:	enter  0xffff,0x22
  40bd39:	enter  0xffff,0x37
  40bd3d:	enter  0xffff,0xbe
  40bd41:	ret    
  40bd42:	(bad)  
  40bd43:	jmp    QWORD PTR [rbp+0x37ffffc3]
  40bd49:	enter  0xffff,0x8c
  40bd4d:	ret    
  40bd4e:	(bad)  
  40bd4f:	push   QWORD PTR [rdi]
  40bd51:	enter  0xffff,0x37
  40bd55:	enter  0xffff,0x37
  40bd59:	enter  0xffff,0x37
  40bd5d:	enter  0xffff,0x73
  40bd61:	ret    
  40bd62:	(bad)  
  40bd63:	push   QWORD PTR [rdi]
  40bd65:	enter  0xffff,0x37
  40bd69:	enter  0xffff,0x37
  40bd6d:	enter  0xffff,0x37
  40bd71:	enter  0xffff,0x37
  40bd75:	enter  0xffff,0x37
  40bd79:	enter  0xffff,0x37
  40bd7d:	enter  0xffff,0x37
  40bd81:	enter  0xffff,0x37
  40bd85:	enter  0xffff,0x37
  40bd89:	enter  0xffff,0x37
  40bd8d:	enter  0xffff,0x37
  40bd91:	enter  0xffff,0x37
  40bd95:	enter  0xffff,0x37
  40bd99:	enter  0xffff,0x37
  40bd9d:	enter  0xffff,0x37
  40bda1:	enter  0xffff,0x37
  40bda5:	enter  0xffff,0x37
  40bda9:	enter  0xffff,0x37
  40bdad:	enter  0xffff,0x37
  40bdb1:	enter  0xffff,0x37
  40bdb5:	enter  0xffff,0x37
  40bdb9:	enter  0xffff,0x37
  40bdbd:	enter  0xffff,0x37
  40bdc1:	enter  0xffff,0x37
  40bdc5:	enter  0xffff,0x37
  40bdc9:	enter  0xffff,0x37
  40bdcd:	enter  0xffff,0x37
  40bdd1:	enter  0xffff,0x37
  40bdd5:	enter  0xffff,0x37
  40bdd9:	enter  0xffff,0x37
  40bddd:	enter  0xffff,0x37
  40bde1:	enter  0xffff,0x37
  40bde5:	enter  0xffff,0x58
  40bde9:	ret    
  40bdea:	(bad)  
  40bdeb:	(bad)  
  40bdec:	(bad)  
  40bded:	ret    
  40bdee:	(bad)  
  40bdef:	jmp    QWORD PTR [rsi]
  40bdf1:	ret    
  40bdf2:	(bad)  
  40bdf3:	call   QWORD PTR [rbx+rax*8]
  40bdf6:	(bad)  
  40bdf7:	(bad)  
  40bdf8:	sti    
  40bdf9:	ret    0xffff
  40bdfc:	(bad)  
  40bdfd:	enter  0xffff,0xe9
  40be01:	ret    0xffff
  40be04:	rol    dl,1
  40be06:	(bad)  
  40be07:	push   QWORD PTR [rbx-0x6500003e]
  40be0d:	ret    0xffff
  40be10:	add    edx,0xc837ffff
  40be16:	(bad)  
  40be17:	jmp    FWORD PTR [rax-0x3e]
  40be1a:	(bad)  
  40be1b:	push   QWORD PTR [rdi]
  40be1d:	enter  0xffff,0x37
  40be21:	enter  0xffff,0x44
  40be25:	ret    0xffff
  40be28:	(bad)  
  40be29:	enter  0xffff,0x2f
  40be2d:	ret    0xffff
  40be30:	(bad)  
  40be31:	enter  0xffff,0x37
  40be35:	enter  0xffff,0x37
  40be39:	enter  0xffff,0x17
  40be3d:	ret    0xffff
  40be40:	in     al,dx
  40be41:	sar    edi,0xff
  40be44:	(bad)  
  40be45:	enter  0xffff,0x37
  40be49:	enter  0xffff,0x37
  40be4d:	enter  0xffff,0x37
  40be51:	enter  0xffff,0x37
  40be55:	enter  0xffff,0xcb
  40be59:	sar    edi,0xff
  40be5c:	jno    0x40bed3
  40be5e:	imul   esp,DWORD PTR [rbp+0x74],0x72657600
  40be65:	(bad)  
  40be66:	outs   dx,DWORD PTR ds:[rsi]
  40be67:	jae    0x40bece
  40be69:	add    BYTE PTR [rsi+0x65],dh
  40be6c:	jb     0x40bee1
  40be6e:	imul   ebp,DWORD PTR [rdi+0x6e],0x706d6900
  40be75:	ins    BYTE PTR es:[rdi],dx
  40be76:	imul   esp,DWORD PTR [rdx+0x0],0x2d797264
  40be7d:	jb     0x40bef4
  40be7f:	outs   dx,BYTE PTR ds:[rsi]
  40be80:	add    BYTE PTR [rdx+rsi*2+0x69],ah
  40be84:	jbe    0x40beeb
  40be86:	jb     0x40beb5
  40be88:	outs   dx,BYTE PTR ds:[rsi]
  40be89:	(bad)  
  40be8a:	ins    DWORD PTR es:[rdi],dx
  40be8b:	add    BYTE PTR gs:[rdx+rsi*2+0x69],ah
  40be90:	jbe    0x40bef7
  40be92:	jb     0x40bec1
  40be94:	data16 ins BYTE PTR es:[rdi],dx
  40be96:	(bad)  
  40be97:	addr32 jae 0x40be9a
  40be9a:	fs ins BYTE PTR es:[rdi],dx
  40be9c:	ins    BYTE PTR es:[rdi],dx
  40be9d:	je     0x40bf0e
  40be9f:	outs   dx,DWORD PTR ds:[rsi]
  40bea0:	ins    BYTE PTR es:[rdi],dx
  40bea1:	sub    eax,0x656d616e
  40bea6:	add    BYTE PTR [rbp+0x6e],ah
  40bea9:	je     0x40bf1d
  40beab:	jns    0x40bead
  40bead:	imul   ebp,DWORD PTR [rbp+0x61],0x622d6567
  40beb4:	(bad)  
  40beb5:	jae    0x40bf1c
  40beb7:	add    BYTE PTR [rcx+riz*2+0x72],dh
  40bebb:	addr32 gs je 0x40bebf
  40bebf:	outs   dx,BYTE PTR ds:[rsi]
  40bec0:	outs   dx,DWORD PTR ds:[rsi]
  40bec1:	sub    eax,0x6461656c
  40bec6:	imul   ebp,DWORD PTR [rsi+0x67],0x646e752d
  40becd:	gs jb  0x40bf43
  40bed0:	movsxd ebp,DWORD PTR [rdi+0x72]
  40bed3:	add    BYTE PTR gs:[rbp+riz*2+0x61],ch
  40bed8:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x646e752d
  40bee0:	gs jb  0x40bf56
  40bee3:	movsxd ebp,DWORD PTR [rdi+0x72]
  40bee6:	add    BYTE PTR gs:[rsi+0x6f],ch
  40beea:	sub    eax,0x656c6564
  40beef:	je     0x40bf56
  40bef1:	add    BYTE PTR [rsp+rbp*2+0x6c],ah
  40bef5:	outs   dx,BYTE PTR ds:[rsi]
  40bef6:	(bad)  
  40bef7:	ins    DWORD PTR es:[rdi],dx
  40bef8:	add    BYTE PTR gs:[rsi+0x6f],ch
  40befc:	sub    eax,0x74616469
  40bf01:	(bad)  
  40bf02:	xor    al,0x0
  40bf04:	outs   dx,BYTE PTR ds:[rsi]
  40bf05:	outs   dx,DWORD PTR ds:[rsi]
  40bf06:	sub    eax,0x74616469
  40bf0b:	(bad)  
  40bf0c:	xor    eax,0x74756f00
  40bf11:	jo     0x40bf88
  40bf13:	je     0x40bf42
  40bf15:	gs js  0x40bf88
  40bf18:	add    BYTE PTR [rdi+0x75],ch
  40bf1b:	je     0x40bf8d
  40bf1d:	jne    0x40bf93
  40bf1f:	sub    eax,0x666564
  40bf24:	gs js  0x40bf97
  40bf27:	outs   dx,DWORD PTR ds:[rsi]
  40bf28:	jb     0x40bf9e
  40bf2a:	sub    eax,0x2d6c6c61
  40bf2f:	jae    0x40bfaa
  40bf31:	ins    DWORD PTR es:[rdi],dx
  40bf32:	(bad)  
  40bf33:	outs   dx,DWORD PTR ds:[rsi]
  40bf34:	ins    BYTE PTR es:[rdi],dx
  40bf35:	jae    0x40bf37
  40bf37:	outs   dx,BYTE PTR ds:[rsi]
  40bf38:	outs   dx,DWORD PTR ds:[rsi]
  40bf39:	sub    eax,0x6f707865
  40bf3e:	jb     0x40bfb4
  40bf40:	sub    eax,0x2d6c6c61
  40bf45:	jae    0x40bfc0
  40bf47:	ins    DWORD PTR es:[rdi],dx
  40bf48:	(bad)  
  40bf49:	outs   dx,DWORD PTR ds:[rsi]
  40bf4a:	ins    BYTE PTR es:[rdi],dx
  40bf4b:	jae    0x40bf4d
  40bf4d:	gs js  0x40bfb3
  40bf50:	ins    BYTE PTR es:[rdi],dx
  40bf51:	jne    0x40bfb7
  40bf53:	gs sub eax,0x626d7973
  40bf59:	outs   dx,DWORD PTR ds:[rsi]
  40bf5a:	ins    BYTE PTR es:[rdi],dx
  40bf5b:	jae    0x40bf5d
  40bf5d:	outs   dx,BYTE PTR ds:[rsi]
  40bf5e:	outs   dx,DWORD PTR ds:[rsi]
  40bf5f:	sub    eax,0x61666564
  40bf64:	jne    0x40bfd2
  40bf66:	je     0x40bf95
  40bf68:	gs js  0x40bfce
  40bf6b:	ins    BYTE PTR es:[rdi],dx
  40bf6c:	jne    0x40bfd2
  40bf6e:	gs jae 0x40bf71
  40bf71:	outs   dx,DWORD PTR ds:[rsi]
  40bf72:	jne    0x40bfe8
  40bf74:	jo     0x40bfeb
  40bf76:	je     0x40bfa5
  40bf78:	ins    BYTE PTR es:[rdi],dx
  40bf79:	imul   esp,DWORD PTR [rdx+0x0],0x666564
  40bf80:	(bad)  
  40bf81:	fs fs sub eax,0x65646e75
  40bf88:	jb     0x40bffd
  40bf8a:	movsxd ebp,DWORD PTR [rdi+0x72]
  40bf8d:	add    BYTE PTR gs:[rbx+0x69],ch
  40bf91:	ins    BYTE PTR es:[rdi],dx
  40bf92:	ins    BYTE PTR es:[rdi],dx
  40bf93:	(bad)  
  40bf94:	je     0x40bf96
  40bf96:	(bad)  
  40bf97:	fs fs sub eax,0x63647473
  40bf9e:	(bad)  
  40bf9f:	ins    BYTE PTR es:[rdi],dx
  40bfa0:	ins    BYTE PTR es:[rdi],dx
  40bfa1:	sub    eax,0x61696c61
  40bfa6:	jae    0x40bfa8
  40bfa8:	push   0x706c65
  40bfad:	ins    DWORD PTR es:[rdi],dx
  40bfae:	(bad)  
  40bfaf:	movsxd ebp,DWORD PTR [rax+0x69]
  40bfb2:	outs   dx,BYTE PTR ds:[rsi]
  40bfb3:	add    BYTE PTR gs:[rcx+0x64],ah
  40bfb7:	fs sub eax,0x69646e69
  40bfbd:	jb     0x40c024
  40bfbf:	movsxd esi,DWORD PTR [rax+rax*1+0x62]
  40bfc3:	(bad)  
  40bfc4:	jae    0x40c02b
  40bfc6:	sub    eax,0x656c6966
  40bfcb:	add    BYTE PTR [rcx+0x73],ah
	...
  40bffe:	add    BYTE PTR [rax],al
  40c000:	pop    rsp
  40c001:	mov    esi,0x40
	...
  40c016:	add    BYTE PTR [rax],al
  40c018:	jno    0x40c01a
  40c01a:	add    BYTE PTR [rax],al
  40c01c:	add    BYTE PTR [rax],al
  40c01e:	add    BYTE PTR [rax],al
  40c020:	(bad)  
  40c021:	mov    esi,0x40
	...
  40c036:	add    BYTE PTR [rax],al
  40c038:	jbe    0x40c03a
  40c03a:	add    BYTE PTR [rax],al
  40c03c:	add    BYTE PTR [rax],al
  40c03e:	add    BYTE PTR [rax],al
  40c040:	push   0xffffffffffffffbe
  40c042:	add    BYTE PTR [rax],al
	...
  40c055:	add    BYTE PTR [rax],al
  40c057:	add    BYTE PTR [rax+0x0],bl
  40c05d:	add    BYTE PTR [rax],al
  40c05f:	add    BYTE PTR [rdx-0x42],dh
  40c062:	add    BYTE PTR [rax],al
  40c065:	add    BYTE PTR [rax],al
  40c067:	add    BYTE PTR [rcx],al
	...
  40c075:	add    BYTE PTR [rax],al
  40c077:	add    BYTE PTR [rbp+0x0],ch
  40c07d:	add    BYTE PTR [rax],al
  40c07f:	add    BYTE PTR [rcx-0x42],bh
  40c082:	add    BYTE PTR [rax],al
	...
  40c095:	add    BYTE PTR [rax],al
  40c097:	add    BYTE PTR [rcx+0x0],bl
  40c09d:	add    BYTE PTR [rax],al
  40c09f:	add    BYTE PTR [rcx+0x40be],al
  40c0a5:	add    BYTE PTR [rax],al
  40c0a7:	add    BYTE PTR [rcx],al
	...
  40c0b5:	add    BYTE PTR [rax],al
  40c0b7:	add    BYTE PTR [rdx+0x0],bl
  40c0bd:	add    BYTE PTR [rax],al
  40c0bf:	add    BYTE PTR [rbp+0x40be],cl
  40c0c5:	add    BYTE PTR [rax],al
  40c0c7:	add    BYTE PTR [rcx],al
	...
  40c0d5:	add    BYTE PTR [rax],al
  40c0d7:	add    BYTE PTR [rbx+0x0],bl
  40c0dd:	add    BYTE PTR [rax],al
  40c0df:	add    BYTE PTR [rdx+0x40be],bl
  40c0e5:	add    BYTE PTR [rax],al
  40c0e7:	add    BYTE PTR [rcx],al
	...
  40c0f5:	add    BYTE PTR [rax],al
  40c0f7:	add    BYTE PTR [rax+rax*1+0x0],bl
  40c0fe:	add    BYTE PTR [rax],al
  40c100:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  40c101:	mov    esi,0x40
  40c106:	add    BYTE PTR [rax],al
  40c108:	add    DWORD PTR [rax],eax
	...
  40c116:	add    BYTE PTR [rax],al
  40c118:	add    BYTE PTR gs:[rax],al
  40c11b:	add    BYTE PTR [rax],al
  40c11d:	add    BYTE PTR [rax],al
  40c11f:	add    BYTE PTR [rbp+0x40be],ch
  40c125:	add    BYTE PTR [rax],al
  40c127:	add    BYTE PTR [rcx],al
	...
  40c135:	add    BYTE PTR [rax],al
  40c137:	add    BYTE PTR [rsi+0x0],bl
  40c13d:	add    BYTE PTR [rax],al
  40c13f:	add    BYTE PTR [rax+0x40be],bh
  40c145:	add    BYTE PTR [rax],al
  40c147:	add    BYTE PTR [rcx],al
	...
  40c155:	add    BYTE PTR [rax],al
  40c157:	add    BYTE PTR [rdi+0x0],bl
  40c15d:	add    BYTE PTR [rax],al
  40c15f:	add    BYTE PTR [rdi+0x40be],bh
	...
  40c175:	add    BYTE PTR [rax],al
  40c177:	add    BYTE PTR [rcx+0x0],ah
  40c17d:	add    BYTE PTR [rax],al
  40c17f:	add    ch,dl
  40c181:	mov    esi,0x40
	...
  40c196:	add    BYTE PTR [rax],al
  40c198:	movabs eax,ds:0xe800000000000000
  40c1a1:	mov    esi,0x40
	...
  40c1b6:	add    BYTE PTR [rax],al
  40c1b8:	outs   dx,BYTE PTR ds:[rsi]
  40c1b9:	add    BYTE PTR [rax],al
  40c1bb:	add    BYTE PTR [rax],al
  40c1bd:	add    BYTE PTR [rax],al
  40c1bf:	add    dl,dh
  40c1c1:	mov    esi,0x40
  40c1c6:	add    BYTE PTR [rax],al
  40c1c8:	add    DWORD PTR [rax],eax
	...
  40c1d6:	add    BYTE PTR [rax],al
  40c1d8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40c1d9:	add    BYTE PTR [rax],al
  40c1db:	add    BYTE PTR [rax],al
  40c1dd:	add    BYTE PTR [rax],al
  40c1df:	add    dl,bh
  40c1e1:	mov    esi,0x40
	...
  40c1f6:	add    BYTE PTR [rax],al
  40c1f8:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  40c1f9:	add    BYTE PTR [rax],al
  40c1fb:	add    BYTE PTR [rax],al
  40c1fd:	add    BYTE PTR [rax],al
  40c1ff:	add    BYTE PTR [rdi+rdi*4],al
  40c202:	add    BYTE PTR [rax],al
	...
  40c215:	add    BYTE PTR [rax],al
  40c217:	add    BYTE PTR [rsi+0x0],ah
  40c21d:	add    BYTE PTR [rax],al
  40c21f:	add    BYTE PTR [rsi],cl
  40c221:	mov    edi,0x40
  40c226:	add    BYTE PTR [rax],al
  40c228:	add    DWORD PTR [rax],eax
	...
  40c236:	add    BYTE PTR [rax],al
  40c238:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  40c239:	add    BYTE PTR [rax],al
  40c23b:	add    BYTE PTR [rax],al
  40c23d:	add    BYTE PTR [rax],al
  40c23f:	add    BYTE PTR [rcx],bl
  40c241:	mov    edi,0x40
  40c246:	add    BYTE PTR [rax],al
  40c248:	add    DWORD PTR [rax],eax
	...
  40c256:	add    BYTE PTR [rax],al
  40c258:	test   al,0x0
  40c25a:	add    BYTE PTR [rax],al
  40c25c:	add    BYTE PTR [rax],al
  40c25e:	add    BYTE PTR [rax],al
  40c260:	and    al,0xbf
  40c262:	add    BYTE PTR [rax],al
	...
  40c275:	add    BYTE PTR [rax],al
  40c277:	add    BYTE PTR [rcx+0x0],ch
  40c27d:	add    BYTE PTR [rax],al
  40c27f:	add    BYTE PTR [rdi],dh
  40c281:	mov    edi,0x40
	...
  40c296:	add    BYTE PTR [rax],al
  40c298:	stos   BYTE PTR es:[rdi],al
  40c299:	add    BYTE PTR [rax],al
  40c29b:	add    BYTE PTR [rax],al
  40c29d:	add    BYTE PTR [rax],al
  40c29f:	add    BYTE PTR [rbp-0x41],cl
  40c2a2:	add    BYTE PTR [rax],al
  40c2a5:	add    BYTE PTR [rax],al
  40c2a7:	add    BYTE PTR [rcx],al
	...
  40c2b5:	add    BYTE PTR [rax],al
  40c2b7:	add    BYTE PTR [rbx+0x0],ch
  40c2bd:	add    BYTE PTR [rax],al
  40c2bf:	add    BYTE PTR [rbp-0x41],bl
  40c2c2:	add    BYTE PTR [rax],al
	...
  40c2d5:	add    BYTE PTR [rax],al
  40c2d7:	add    BYTE PTR [rax+rax*1+0x0],ch
  40c2de:	add    BYTE PTR [rax],al
  40c2e0:	jno    0x40c2a1
  40c2e2:	add    BYTE PTR [rax],al
  40c2e5:	add    BYTE PTR [rax],al
  40c2e7:	add    BYTE PTR [rcx],al
	...
  40c2f5:	add    BYTE PTR [rax],al
  40c2f7:	add    BYTE PTR [rbp+0x0],ch
  40c2fd:	add    BYTE PTR [rax],al
  40c2ff:	add    BYTE PTR [rdi+rdi*4+0x40],bh
  40c303:	add    BYTE PTR [rax],al
  40c305:	add    BYTE PTR [rax],al
  40c307:	add    BYTE PTR [rcx],al
	...
  40c315:	add    BYTE PTR [rax],al
  40c317:	add    BYTE PTR [rsi+0x0],ch
  40c31d:	add    BYTE PTR [rax],al
  40c31f:	add    BYTE PTR [rax+0x40bf],al
	...
  40c335:	add    BYTE PTR [rax],al
  40c337:	add    BYTE PTR [rbp+0x0],dl
  40c33a:	add    BYTE PTR [rax],al
  40c33c:	add    BYTE PTR [rax],al
  40c33e:	add    BYTE PTR [rax],al
  40c340:	(bad)  
  40c341:	mov    edi,0x40
	...
  40c356:	add    BYTE PTR [rax],al
  40c358:	imul   eax,DWORD PTR [rax],0x0
  40c35b:	add    BYTE PTR [rax],al
  40c35d:	add    BYTE PTR [rax],al
  40c35f:	add    BYTE PTR [rsi+0x40bf],dl
	...
  40c375:	add    BYTE PTR [rax],al
  40c377:	add    BYTE PTR [rcx+0x0],al
  40c37a:	add    BYTE PTR [rax],al
  40c37c:	add    BYTE PTR [rax],al
  40c37e:	add    BYTE PTR [rax],al
  40c380:	test   al,0xbf
  40c382:	add    BYTE PTR [rax],al
	...
  40c395:	add    BYTE PTR [rax],al
  40c397:	add    BYTE PTR [rax+0x0],ch
  40c39a:	add    BYTE PTR [rax],al
  40c39c:	add    BYTE PTR [rax],al
  40c39e:	add    BYTE PTR [rax],al
  40c3a0:	lods   eax,DWORD PTR ds:[rsi]
  40c3a1:	mov    edi,0x40
  40c3a6:	add    BYTE PTR [rax],al
  40c3a8:	add    DWORD PTR [rax],eax
	...
  40c3b6:	add    BYTE PTR [rax],al
  40c3b8:	mov    dl,0x0
  40c3ba:	add    BYTE PTR [rax],al
  40c3bc:	add    BYTE PTR [rax],al
  40c3be:	add    BYTE PTR [rax],al
  40c3c0:	mov    ch,0xbf
  40c3c2:	add    BYTE PTR [rax],al
	...
  40c3d5:	add    BYTE PTR [rax],al
  40c3d7:	add    BYTE PTR [rbx+0x0],dh
  40c3dd:	add    BYTE PTR [rax],al
  40c3df:	add    dl,al
  40c3e1:	mov    edi,0x40
  40c3e6:	add    BYTE PTR [rax],al
  40c3e8:	add    DWORD PTR [rax],eax
	...
  40c3f6:	add    BYTE PTR [rax],al
  40c3f8:	mov    ah,0x0
  40c3fa:	add    BYTE PTR [rax],al
  40c3fc:	add    BYTE PTR [rax],al
  40c3fe:	add    BYTE PTR [rax],al
  40c400:	int3   
  40c401:	mov    edi,0x40
  40c406:	add    BYTE PTR [rax],al
  40c408:	add    DWORD PTR [rax],eax
	...
  40c416:	add    BYTE PTR [rax],al
  40c418:	mov    ch,0x0
	...
  40c43e:	add    BYTE PTR [rax],al
  40c440:	js     0x40c47a
  40c442:	ss pop rdi
  40c444:	ss xor al,0x2d
  40c447:	ja     0x40c47f
  40c449:	xor    al,0x2d
  40c44b:	ins    DWORD PTR es:[rdi],dx
  40c44c:	imul   ebp,DWORD PTR [rsi+0x67],0x323377
	...
  40c47f:	add    BYTE PTR [rax],ch
  40c481:	rex.RXB
  40c482:	rex.WRX push rbp
  40c484:	and    BYTE PTR [rdx+0x69],al
  40c487:	outs   dx,BYTE PTR ds:[rsi]
  40c488:	jne    0x40c4fe
  40c48a:	imul   ebp,DWORD PTR [rbx+rsi*2+0x29],0x322e3220
  40c492:	xor    eax,0x4700312e
  40c497:	rex.WRX push rbp
  40c499:	and    BYTE PTR [rip+0x73252073],ah        # 0x7365e512
  40c49f:	or     al,BYTE PTR [rax]
  40c4a1:	add    BYTE PTR [rax],al
  40c4a3:	add    BYTE PTR [rax],al
  40c4a5:	add    BYTE PTR [rax],al
  40c4a7:	add    BYTE PTR [rbx+0x6f],al
  40c4aa:	jo     0x40c525
  40c4ac:	jb     0x40c517
  40c4ae:	addr32 push 0x43282074
  40c4b4:	sub    DWORD PTR [rax],esp
  40c4b6:	xor    dh,BYTE PTR [rax]
  40c4b8:	xor    DWORD PTR [rax+riz*1],esi
  40c4bb:	rex.RX jb 0x40c523
  40c4be:	and    BYTE PTR gs:[rbx+0x6f],dl
  40c4c2:	data16 je 0x40c53c
  40c4c5:	(bad)  
  40c4c6:	jb     0x40c52d
  40c4c8:	and    BYTE PTR [rsi+0x6f],al
  40c4cb:	jne    0x40c53b
  40c4cd:	fs (bad) 
  40c4cf:	je     0x40c53a
  40c4d1:	outs   dx,DWORD PTR ds:[rsi]
  40c4d2:	outs   dx,BYTE PTR ds:[rsi]
  40c4d3:	sub    al,0x20
  40c4d5:	rex.WB outs dx,BYTE PTR ds:[rsi]
  40c4d7:	movsxd ebp,DWORD PTR [rsi]
  40c4d9:	add    BYTE PTR [rax],al
  40c4db:	add    BYTE PTR [rax],al
  40c4dd:	add    BYTE PTR [rax],al
  40c4df:	add    BYTE PTR [rax+rbp*2+0x69],dl
  40c4e3:	jae    0x40c505
  40c4e5:	jo     0x40c559
  40c4e7:	outs   dx,DWORD PTR ds:[rsi]
  40c4e8:	addr32 jb 0x40c54c
  40c4eb:	ins    DWORD PTR es:[rdi],dx
  40c4ec:	and    BYTE PTR [rcx+0x73],ch
  40c4ef:	and    BYTE PTR [rsi+0x72],ah
  40c4f2:	gs and BYTE PTR gs:[rbx+0x6f],dh
  40c4f7:	data16 je 0x40c571
  40c4fa:	(bad)  
  40c4fb:	jb     0x40c562
  40c4fd:	cmp    esp,DWORD PTR [rax]
  40c4ff:	jns    0x40c570
  40c501:	jne    0x40c523
  40c503:	ins    DWORD PTR es:[rdi],dx
  40c504:	(bad)  
  40c505:	jns    0x40c527
  40c507:	jb     0x40c56e
  40c509:	imul   esi,DWORD PTR fs:[rbx+0x74],0x75626972
  40c511:	je     0x40c578
  40c513:	and    BYTE PTR [rcx+0x74],ch
  40c516:	and    BYTE PTR [rbp+0x6e],dh
  40c519:	fs gs jb 0x40c53d
  40c51d:	je     0x40c587
  40c51f:	and    BYTE PTR gs:[rbp+riz*2+0x72],dh
  40c524:	ins    DWORD PTR es:[rdi],dx
  40c525:	jae    0x40c547
  40c527:	outs   dx,DWORD PTR ds:[rsi]
  40c528:	data16 or dh,BYTE PTR [rax+rbp*2+0x65]
  40c52d:	and    BYTE PTR [rdi+0x4e],al
  40c530:	push   rbp
  40c531:	and    BYTE PTR [rdi+0x65],al
  40c534:	outs   dx,BYTE PTR ds:[rsi]
  40c535:	gs jb  0x40c599
  40c538:	ins    BYTE PTR es:[rdi],dx
  40c539:	and    BYTE PTR [rax+0x75],dl
  40c53c:	(bad)  
  40c53d:	ins    BYTE PTR es:[rdi],dx
  40c53e:	imul   esp,DWORD PTR [rbx+0x20],0x6563694c
  40c545:	outs   dx,BYTE PTR ds:[rsi]
  40c546:	jae    0x40c5ad
  40c548:	and    BYTE PTR [rsi+0x65],dh
  40c54b:	jb     0x40c5c0
  40c54d:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f203320
  40c554:	jb     0x40c576
  40c556:	sub    BYTE PTR [rcx+0x74],ah
  40c559:	and    BYTE PTR [rcx+0x6f],bh
  40c55c:	jne    0x40c5d0
  40c55e:	and    BYTE PTR [rdi+0x70],ch
  40c561:	je     0x40c5cc
  40c563:	outs   dx,DWORD PTR ds:[rsi]
  40c564:	outs   dx,BYTE PTR ds:[rsi]
  40c565:	sub    DWORD PTR [rax],esp
  40c567:	(bad)  
  40c568:	outs   dx,BYTE PTR ds:[rsi]
  40c569:	jns    0x40c58b
  40c56b:	ins    BYTE PTR es:[rdi],dx
  40c56c:	(bad)  
  40c56d:	je     0x40c5d4
  40c56f:	jb     0x40c591
  40c571:	jbe    0x40c5d8
  40c573:	jb     0x40c5e8
  40c575:	imul   ebp,DWORD PTR [rdi+0x6e],0x68540a2e
  40c57c:	imul   esi,DWORD PTR [rbx+0x20],0x676f7270
  40c583:	jb     0x40c5e6
  40c585:	ins    DWORD PTR es:[rdi],dx
  40c586:	and    BYTE PTR [rax+0x61],ch
  40c589:	jae    0x40c5ab
  40c58b:	(bad)  
  40c58c:	(bad)
  40c591:	je     0x40c5f8
  40c593:	ins    BYTE PTR es:[rdi],dx
  40c594:	jns    0x40c5b6
  40c596:	outs   dx,BYTE PTR ds:[rsi]
  40c597:	outs   dx,DWORD PTR ds:[rsi]
  40c598:	and    BYTE PTR [rdi+0x61],dh
  40c59b:	jb     0x40c60f
  40c59d:	(bad)  
  40c59e:	outs   dx,BYTE PTR ds:[rsi]
  40c59f:	je     0x40c61a
  40c5a1:	add    BYTE PTR cs:[rax],al
	...
  40c5b0:	and    eax,0x65203a73
  40c5b5:	jb     0x40c629
  40c5b7:	outs   dx,DWORD PTR ds:[rsi]
  40c5b8:	jb     0x40c5f4
  40c5ba:	and    BYTE PTR [rdi+rbp*2+0x6f],dh
  40c5be:	and    BYTE PTR [rbp+0x61],ch
  40c5c1:	outs   dx,BYTE PTR ds:[rsi]
  40c5c2:	jns    0x40c5e4
  40c5c4:	rex sub eax,0x656c6966
  40c5ca:	jae    0x40c5ec
  40c5cc:	outs   dx,BYTE PTR gs:[rsi]
  40c5ce:	movsxd ebp,DWORD PTR [rdi+0x75]
  40c5d1:	outs   dx,BYTE PTR ds:[rsi]
  40c5d2:	je     0x40c639
  40c5d4:	jb     0x40c63b
  40c5d6:	or     al,BYTE PTR fs:[rax]
  40c5d9:	jb     0x40c5db
  40c5db:	add    BYTE PTR [rax],al
  40c5dd:	add    BYTE PTR [rax],al
  40c5df:	add    BYTE PTR [rax+0x4f],dl
  40c5e2:	push   rbx
  40c5e3:	rex.WB pop r8
  40c5e5:	rex.WR pop rcx
  40c5e7:	pop    rdi
  40c5e8:	rex.XB
  40c5e9:	rex.WRXB push r10
  40c5eb:	push   rdx
  40c5ec:	rex.RB
  40c5ed:	rex.XB push r12
  40c5ef:	add    BYTE PTR [rip+0x7325002d],ch        # 0x7365c622
  40c5f5:	cmp    ah,BYTE PTR [rax]
  40c5f7:	outs   dx,DWORD PTR ds:[rsi]
  40c5f8:	jo     0x40c66e
  40c5fa:	imul   ebp,DWORD PTR [rdi+0x6e],0x73256020
  40c601:	(bad)  
  40c602:	and    BYTE PTR [rcx+0x73],ch
  40c605:	and    BYTE PTR [rcx+0x6d],ah
  40c608:	(bad)  
  40c609:	imul   esp,DWORD PTR [rdi+0x75],0xa73756f
	...
  40c618:	and    eax,0x6f203a73
  40c61d:	jo     0x40c693
  40c61f:	imul   ebp,DWORD PTR [rdi+0x6e],0x2d2d6020
  40c626:	and    eax,0x64202773
  40c62b:	outs   dx,DWORD PTR ds:[rsi]
  40c62c:	gs jae 0x40c69d
  40c62f:	(bad)  
  40c630:	je     0x40c652
  40c632:	(bad)  
  40c633:	ins    BYTE PTR es:[rdi],dx
  40c634:	ins    BYTE PTR es:[rdi],dx
  40c635:	outs   dx,DWORD PTR ds:[rsi]
  40c636:	ja     0x40c658
  40c638:	(bad)  
  40c639:	outs   dx,BYTE PTR ds:[rsi]
  40c63a:	and    BYTE PTR [rcx+0x72],ah
  40c63d:	addr32 jne 0x40c6ad
  40c640:	outs   dx,BYTE PTR gs:[rsi]
  40c642:	je     0x40c64e
  40c644:	add    BYTE PTR [rax],al
  40c646:	add    BYTE PTR [rax],al
  40c648:	and    eax,0x6f203a73
  40c64d:	jo     0x40c6c3
  40c64f:	imul   ebp,DWORD PTR [rdi+0x6e],0x63256020
  40c656:	and    eax,0x64202773
  40c65b:	outs   dx,DWORD PTR ds:[rsi]
  40c65c:	gs jae 0x40c6cd
  40c65f:	(bad)  
  40c660:	je     0x40c682
  40c662:	(bad)  
  40c663:	ins    BYTE PTR es:[rdi],dx
  40c664:	ins    BYTE PTR es:[rdi],dx
  40c665:	outs   dx,DWORD PTR ds:[rsi]
  40c666:	ja     0x40c688
  40c668:	(bad)  
  40c669:	outs   dx,BYTE PTR ds:[rsi]
  40c66a:	and    BYTE PTR [rcx+0x72],ah
  40c66d:	addr32 jne 0x40c6dd
  40c670:	outs   dx,BYTE PTR gs:[rsi]
  40c672:	je     0x40c67e
  40c674:	add    BYTE PTR [rax],al
  40c676:	add    BYTE PTR [rax],al
  40c678:	and    eax,0x6f203a73
  40c67d:	jo     0x40c6f3
  40c67f:	imul   ebp,DWORD PTR [rdi+0x6e],0x73256020
  40c686:	(bad)  
  40c687:	and    BYTE PTR [rdx+0x65],dh
  40c68a:	jno    0x40c701
  40c68c:	imul   esi,DWORD PTR [rdx+0x65],0x6e612073
  40c693:	and    BYTE PTR [rcx+0x72],ah
  40c696:	addr32 jne 0x40c706
  40c699:	outs   dx,BYTE PTR gs:[rsi]
  40c69b:	je     0x40c6a7
  40c69d:	add    BYTE PTR [rax],al
  40c69f:	add    BYTE PTR [rip+0x75203a73],ah        # 0x75610118
  40c6a5:	outs   dx,BYTE PTR ds:[rsi]
  40c6a6:	jb     0x40c70d
  40c6a8:	movsxd ebp,DWORD PTR [rdi+0x67]
  40c6ab:	outs   dx,BYTE PTR ds:[rsi]
  40c6ac:	imul   edi,DWORD PTR [rdx+0x65],0x706f2064
  40c6b3:	je     0x40c71e
  40c6b5:	outs   dx,DWORD PTR ds:[rsi]
  40c6b6:	outs   dx,BYTE PTR ds:[rsi]
  40c6b7:	and    BYTE PTR [rax+0x2d],ah
  40c6ba:	sub    eax,0xa277325
  40c6bf:	add    BYTE PTR [rip+0x75203a73],ah        # 0x75610138
  40c6c5:	outs   dx,BYTE PTR ds:[rsi]
  40c6c6:	jb     0x40c72d
  40c6c8:	movsxd ebp,DWORD PTR [rdi+0x67]
  40c6cb:	outs   dx,BYTE PTR ds:[rsi]
  40c6cc:	imul   edi,DWORD PTR [rdx+0x65],0x706f2064
  40c6d3:	je     0x40c73e
  40c6d5:	outs   dx,DWORD PTR ds:[rsi]
  40c6d6:	outs   dx,BYTE PTR ds:[rsi]
  40c6d7:	and    BYTE PTR [rax+0x25],ah
  40c6da:	movsxd esp,DWORD PTR [rip+0xa2773]        # 0x4aee53
  40c6e0:	add    BYTE PTR [rip+0x69203a73],ah        # 0x69610159
  40c6e6:	ins    BYTE PTR es:[rdi],dx
  40c6e7:	ins    BYTE PTR es:[rdi],dx
  40c6e8:	gs addr32 (bad) 
  40c6eb:	ins    BYTE PTR es:[rdi],dx
  40c6ec:	and    BYTE PTR [rdi+0x70],ch
  40c6ef:	je     0x40c75a
  40c6f1:	outs   dx,DWORD PTR ds:[rsi]
  40c6f2:	outs   dx,BYTE PTR ds:[rsi]
  40c6f3:	and    BYTE PTR [rip+0x6325202d],ch        # 0x6365e726
  40c6f9:	or     al,BYTE PTR [rax]
  40c6fb:	and    eax,0x69203a73
  40c700:	outs   dx,BYTE PTR ds:[rsi]
  40c701:	jbe    0x40c764
  40c703:	ins    BYTE PTR es:[rdi],dx
  40c704:	imul   esp,DWORD PTR [rax+riz*1+0x6f],0x6f697470
  40c70c:	outs   dx,BYTE PTR ds:[rsi]
  40c70d:	and    BYTE PTR [rip+0x6325202d],ch        # 0x6365e740
  40c713:	or     al,BYTE PTR [rax]
  40c715:	add    BYTE PTR [rax],al
  40c717:	add    BYTE PTR [rip+0x6f203a73],ah        # 0x6f610190
  40c71d:	jo     0x40c793
  40c71f:	imul   ebp,DWORD PTR [rdi+0x6e],0x71657220
  40c726:	jne    0x40c791
  40c728:	jb     0x40c78f
  40c72a:	jae    0x40c74c
  40c72c:	(bad)  
  40c72d:	outs   dx,BYTE PTR ds:[rsi]
  40c72e:	and    BYTE PTR [rcx+0x72],ah
  40c731:	addr32 jne 0x40c7a1
  40c734:	outs   dx,BYTE PTR gs:[rsi]
  40c736:	je     0x40c758
  40c738:	sub    eax,0x6325202d
  40c73d:	or     al,BYTE PTR [rax]
  40c73f:	add    BYTE PTR [rip+0x6f203a73],ah        # 0x6f6101b8
  40c745:	jo     0x40c7bb
  40c747:	imul   ebp,DWORD PTR [rdi+0x6e],0x572d6020
  40c74e:	and    BYTE PTR [rip+0x69202773],ah        # 0x6960eec7
  40c754:	jae    0x40c776
  40c756:	(bad)  
  40c757:	ins    DWORD PTR es:[rdi],dx
  40c758:	(bad)  
  40c759:	imul   esp,DWORD PTR [rdi+0x75],0xa73756f
	...
  40c768:	and    eax,0x6f203a73
  40c76d:	jo     0x40c7e3
  40c76f:	imul   ebp,DWORD PTR [rdi+0x6e],0x572d6020
  40c776:	and    BYTE PTR [rip+0x64202773],ah        # 0x6460eeef
  40c77c:	outs   dx,DWORD PTR ds:[rsi]
  40c77d:	gs jae 0x40c7ee
  40c780:	(bad)  
  40c781:	je     0x40c7a3
  40c783:	(bad)  
  40c784:	ins    BYTE PTR es:[rdi],dx
  40c785:	ins    BYTE PTR es:[rdi],dx
  40c786:	outs   dx,DWORD PTR ds:[rsi]
  40c787:	ja     0x40c7a9
  40c789:	(bad)  
  40c78a:	outs   dx,BYTE PTR ds:[rsi]
  40c78b:	and    BYTE PTR [rcx+0x72],ah
  40c78e:	addr32 jne 0x40c7fe
  40c791:	outs   dx,BYTE PTR gs:[rsi]
  40c793:	je     0x40c79f
	...
  40c79d:	add    BYTE PTR [rax],al
  40c79f:	add    BYTE PTR [rsi],ch
  40c7a1:	pop    rsp
  40c7a2:	add    BYTE PTR [rax],al
  40c7a4:	add    BYTE PTR [rax],al
  40c7a6:	add    BYTE PTR [rax],al
  40c7a8:	rex.XB (bad) 
  40c7aa:	outs   dx,BYTE PTR ds:[rsi]
  40c7ab:	outs   dx,BYTE PTR ds:[rsi]
  40c7ac:	outs   dx,DWORD PTR ds:[rsi]
  40c7ad:	je     0x40c7cf
  40c7af:	movsxd esi,DWORD PTR [rdx+0x65]
  40c7b2:	(bad)  
  40c7b3:	je     0x40c81a
  40c7b5:	and    BYTE PTR [rbp+riz*2+0x6d],dh
  40c7b9:	jo     0x40c82a
  40c7bb:	jb     0x40c81e
  40c7bd:	jb     0x40c838
  40c7bf:	and    BYTE PTR [rsi+0x69],ah
  40c7c2:	ins    BYTE PTR es:[rdi],dx
  40c7c3:	and    BYTE PTR gs:[rcx+0x6e],ch
  40c7c7:	and    BYTE PTR [rip+0x25203a73],ah        # 0x25610240
  40c7cd:	jae    0x40c7d9
  40c7cf:	add    BYTE PTR [rax+0x65],dh
  40c7d2:	js     0x40c839
  40c7d4:	movsxd esi,DWORD PTR [rbp+0x74]
  40c7d7:	and    BYTE PTR gs:[rcx+0x6c],ah
  40c7db:	jb     0x40c842
  40c7dd:	(bad)  
  40c7de:	fs jns 0x40c801
  40c7e1:	imul   ebp,DWORD PTR [rsi+0x20],0x676f7270
  40c7e8:	jb     0x40c84f
  40c7ea:	jae    0x40c85f
  40c7ec:	add    BYTE PTR [rax+0x65],dh
  40c7ef:	js     0x40c856
  40c7f1:	movsxd esi,DWORD PTR [rbp+0x74]
  40c7f4:	and    BYTE PTR gs:[rsi+0x6f],ch
  40c7f8:	je     0x40c81a
  40c7fa:	imul   ebp,DWORD PTR [rsi+0x20],0x676f7270
  40c801:	jb     0x40c868
  40c803:	jae    0x40c878
	...
  40c80d:	add    BYTE PTR [rax],al
  40c80f:	add    BYTE PTR [rax+0x58],bl
  40c812:	pop    rax
  40c813:	pop    rax
  40c814:	pop    rax
  40c815:	pop    rax
  40c816:	add    BYTE PTR [rbx+0x6c],ah
  40c819:	outs   dx,DWORD PTR ds:[rsi]
  40c81a:	jae    0x40c885
  40c81c:	outs   dx,BYTE PTR ds:[rsi]
  40c81d:	and    BYTE PTR [eax+0x69],dh
  40c821:	jo     0x40c888
  40c823:	ins    BYTE PTR es:[rdi],dx
  40c824:	imul   ebp,DWORD PTR [rsi+0x65],0x706e6920
  40c82b:	jne    0x40c8a1
  40c82d:	and    BYTE PTR [rsi+0x69],ah
  40c830:	ins    BYTE PTR es:[rdi],dx
  40c831:	add    BYTE PTR gs:[rdi+0x70],ch
  40c835:	outs   dx,BYTE PTR gs:[rsi]
  40c837:	and    BYTE PTR [rbp+riz*2+0x6d],dh
  40c83b:	jo     0x40c8ac
  40c83d:	jb     0x40c8a0
  40c83f:	jb     0x40c8ba
  40c841:	and    BYTE PTR [rsi+0x69],ah
  40c844:	ins    BYTE PTR es:[rdi],dx
  40c845:	add    BYTE PTR gs:[rax+0x69],dh
  40c849:	jo     0x40c8b0
  40c84b:	ins    BYTE PTR es:[rdi],dx
  40c84c:	imul   ebp,DWORD PTR [rsi+0x65],0x726c6120
  40c853:	gs (bad) 
  40c855:	fs jns 0x40c878
  40c858:	movsxd ebp,DWORD PTR [rdi+0x6d]
  40c85b:	jo     0x40c8c9
  40c85d:	gs je  0x40c8c5
	...
  40c868:	movsxd ebp,DWORD PTR [rdi+0x75]
  40c86b:	ins    BYTE PTR es:[rdi],dx
  40c86c:	and    BYTE PTR fs:[rsi+0x6f],ch
  40c870:	je     0x40c892
  40c872:	movsxd esi,DWORD PTR [rdx+0x65]
  40c875:	(bad)  
  40c876:	je     0x40c8dd
  40c878:	and    BYTE PTR [rbp+riz*2+0x6d],dh
  40c87c:	jo     0x40c8ed
  40c87e:	jb     0x40c8e1
  40c880:	jb     0x40c8fb
  40c882:	and    BYTE PTR [rsi+0x69],ah
  40c885:	ins    BYTE PTR es:[rdi],dx
  40c886:	add    BYTE PTR gs:[rax+0x69],dh
  40c88a:	jo     0x40c8f1
  40c88c:	add    BYTE PTR [rdi+0x70],ch
  40c88f:	outs   dx,BYTE PTR gs:[rsi]
  40c891:	and    BYTE PTR [rbp+riz*2+0x6d],dh
  40c895:	jo     0x40c906
  40c897:	jb     0x40c8fa
  40c899:	jb     0x40c914
  40c89b:	and    BYTE PTR [rdi+0x75],ch
  40c89e:	je     0x40c910
  40c8a0:	jne    0x40c916
  40c8a2:	and    BYTE PTR [rsi+0x69],ah
  40c8a5:	ins    BYTE PTR es:[rdi],dx
  40c8a6:	add    BYTE PTR gs:[rdx+0x6f],ah
  40c8aa:	je     0x40c914
  40c8ac:	and    BYTE PTR [rbp+0x52],al
  40c8af:	push   rdx
  40c8b0:	rex.WRX
  40c8b1:	rex.B
  40c8b2:	rex.WRB
  40c8b3:	and    BYTE PTR [r9+0x6e],r12b
  40c8b7:	and    BYTE PTR fs:[rax+0x45],dl
  40c8bb:	pop    rax
  40c8bc:	pop    rdi
  40c8bd:	push   rbx
  40c8be:	push   rsp
  40c8bf:	rex.R
  40c8c0:	rex.RB push r10
  40c8c2:	push   rdx
  40c8c3:	pop    rdi
  40c8c4:	push   rsp
  40c8c5:	rex.WRXB pop r15
  40c8c7:	push   rax
  40c8c8:	rex.WB push r8
  40c8ca:	and    BYTE PTR [r11+0x70],r14b
  40c8ce:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  40c8d2:	imul   esp,DWORD PTR [rbp+0x64],0x5000002e
  40c8d9:	rex.RB pop r8
  40c8db:	pop    rdi
  40c8dc:	push   rbx
  40c8dd:	push   rsp
  40c8de:	rex.R
  40c8df:	rex.RB push r10
  40c8e1:	push   rdx
  40c8e2:	pop    rdi
  40c8e3:	push   rsp
  40c8e4:	rex.WRXB pop r15
  40c8e6:	push   rax
  40c8e7:	rex.WB push r8
  40c8e9:	and    BYTE PTR [r13+0x73],r14b
  40c8ed:	gs and BYTE PTR fs:[rcx+0x6e],ch
  40c8f2:	and    BYTE PTR [rax+rbp*2+0x65],dh
  40c8f6:	and    BYTE PTR [rbp+0x69],ch
  40c8f9:	fs fs ins BYTE PTR es:[rdi],dx
  40c8fc:	and    BYTE PTR gs:[rdi+0x66],ch
  40c900:	and    BYTE PTR [rax+0x69],dh
  40c903:	jo     0x40c96a
  40c905:	ins    BYTE PTR es:[rdi],dx
  40c906:	imul   ebp,DWORD PTR [rsi+0x65],0x65706f00
  40c90d:	outs   dx,BYTE PTR ds:[rsi]
  40c90e:	and    BYTE PTR [rbp+0x72],ah
  40c911:	jb     0x40c982
  40c913:	jb     0x40c935
  40c915:	imul   bp,WORD PTR [rbp+riz*2+0x0],0x6277
  40c91c:	add    BYTE PTR [rdi+0x0],dh
  40c91f:	jb     0x40c983
  40c921:	add    BYTE PTR [rdx+0x0],dh
	...
  40c940:	ja     0x40c9a4
  40c942:	add    BYTE PTR [rdi+0x0],dh
  40c945:	jb     0x40c9a9
  40c947:	add    BYTE PTR [rdx+0x0],dh
  40c94a:	push   rdi
  40c94b:	(bad)  
  40c94c:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x6e695372
  40c954:	ins    BYTE PTR es:[edi],dx
  40c956:	gs rex.WRXB (bad) 
  40c959:	push   0x65
  40c95b:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  40c95f:	movsxd ebp,DWORD PTR cs:[rdi+0x6d]
  40c963:	add    BYTE PTR [rax+0x41],dl
  40c966:	push   rsp
  40c967:	rex.W add BYTE PTR [rbx+0x4f],al
  40c96b:	rex.WRX
  40c96c:	rex.WRXB push r13
  40c96e:	push   rsp
  40c96f:	and    al,0x0
  40c971:	and    esp,DWORD PTR [rcx]
  40c973:	add    BYTE PTR [rbx+0x72],al
  40c976:	gs (bad) 
  40c978:	je     0x40c9df
  40c97a:	push   rax
  40c97b:	jb     0x40c9ec
  40c97d:	movsxd esp,DWORD PTR [rbp+0x73]
  40c980:	jae    0x40c982
  40c982:	cs gs js 0x40c9eb
  40c986:	add    BYTE PTR [rsi],ch
  40c988:	(bad)
  40c98d:	movsxd ebp,DWORD PTR [rbp+0x64]
	...
  40c9a0:	pop    rdi
  40c9a1:	leave  
  40c9a2:	add    BYTE PTR [rax],al
  40c9a5:	add    BYTE PTR [rax],al
  40c9a7:	add    BYTE PTR [rdx+0x40c9],al
  40c9ad:	add    BYTE PTR [rax],al
  40c9af:	add    BYTE PTR [rdi+0x40c9],al
  40c9b5:	add    BYTE PTR [rax],al
  40c9b7:	add    BYTE PTR [rcx+rcx*8+0x40],cl
  40c9be:	add    BYTE PTR [rax],al
  40c9c0:	pop    rsi
  40c9c1:	leave  
  40c9c2:	add    BYTE PTR [rax],al
	...
  40c9fd:	add    BYTE PTR [rax],al
  40c9ff:	add    BYTE PTR [rax+0x4052],al
  40ca05:	add    BYTE PTR [rax],al
  40ca07:	add    BYTE PTR [rax+0x52],al
  40ca0a:	add    BYTE PTR [rax],al
  40ca0d:	add    BYTE PTR [rax],al
  40ca0f:	add    BYTE PTR [rax+0x4052],ah
  40ca15:	add    BYTE PTR [rax],al
  40ca17:	add    BYTE PTR [rax],al
  40ca19:	rex.WXB
  40ca1a:	add    BYTE PTR [rax],al
  40ca1d:	add    BYTE PTR [rax],al
  40ca1f:	add    BYTE PTR [rax+0x4a],dl
  40ca22:	add    BYTE PTR [rax],al
  40ca25:	add    BYTE PTR [rax],al
  40ca27:	add    BYTE PTR [rax],ah
  40ca29:	rex.WX
  40ca2a:	add    BYTE PTR [rax],al
  40ca2d:	add    BYTE PTR [rax],al
  40ca2f:	add    al,al
  40ca31:	rex.WB
  40ca32:	add    BYTE PTR [rax],al
  40ca35:	add    BYTE PTR [rax],al
  40ca37:	add    BYTE PTR [rax+0x49],ah
  40ca3a:	add    BYTE PTR [rax],al
	...
  40ca81:	add    DWORD PTR [rdx],eax
  40ca83:	add    eax,DWORD PTR [rax*1+0x9080706]
  40ca8a:	or     cl,BYTE PTR [rbx]
  40ca8c:	or     al,0xd
  40ca8e:	(bad)  
  40ca8f:	movups xmm2,XMMWORD PTR [rcx]
  40ca92:	adc    dl,BYTE PTR [rbx]
  40ca94:	adc    al,0x15
  40ca96:	(bad)  
  40ca97:	(bad)  
  40ca98:	sbb    BYTE PTR [rcx],bl
  40ca9a:	sbb    bl,BYTE PTR [rbx]
  40ca9c:	sbb    al,0x1d
  40ca9e:	(bad)  
  40ca9f:	(bad)  
  40caa0:	and    BYTE PTR [rcx],ah
  40caa2:	and    ah,BYTE PTR [rbx]
  40caa4:	and    al,0x25
  40caa6:	es (bad) 
  40caa8:	sub    BYTE PTR [rcx],ch
  40caaa:	sub    ch,BYTE PTR [rbx]
  40caac:	sub    al,0x2d
  40caae:	cs (bad) 
  40cab0:	xor    BYTE PTR [rcx],dh
  40cab2:	xor    dh,BYTE PTR [rbx]
  40cab4:	xor    al,0x35
  40cab6:	ss (bad) 
  40cab8:	cmp    BYTE PTR [rcx],bh
  40caba:	cmp    bh,BYTE PTR [rbx]
  40cabc:	cmp    al,0x3d
  40cabe:	ds (bad) 
  40cac0:	rex
  40cac1:	rex.B
  40cac2:	rex.X
  40cac3:	rex.XB
  40cac4:	rex.R
  40cac5:	rex.RB
  40cac6:	rex.RX
  40cac7:	rex.RXB
  40cac8:	rex.W
  40cac9:	rex.WB
  40caca:	rex.WX
  40cacb:	rex.WXB
  40cacc:	rex.WR
  40cacd:	rex.WRB
  40cace:	rex.WRX
  40cacf:	rex.WRXB push r8
  40cad1:	push   rcx
  40cad2:	push   rdx
  40cad3:	push   rbx
  40cad4:	push   rsp
  40cad5:	push   rbp
  40cad6:	push   rsi
  40cad7:	push   rdi
  40cad8:	pop    rax
  40cad9:	pop    rcx
  40cada:	pop    rdx
  40cadb:	pop    rbx
  40cadc:	pop    rsp
  40cadd:	pop    rbp
  40cade:	pop    rsi
  40cadf:	pop    rdi
  40cae0:	(bad)  
  40cae1:	rex.B
  40cae2:	rex.X
  40cae3:	rex.XB
  40cae4:	rex.R
  40cae5:	rex.RB
  40cae6:	rex.RX
  40cae7:	rex.RXB
  40cae8:	rex.W
  40cae9:	rex.WB
  40caea:	rex.WX
  40caeb:	rex.WXB
  40caec:	rex.WR
  40caed:	rex.WRB
  40caee:	rex.WRX
  40caef:	rex.WRXB push r8
  40caf1:	push   rcx
  40caf2:	push   rdx
  40caf3:	push   rbx
  40caf4:	push   rsp
  40caf5:	push   rbp
  40caf6:	push   rsi
  40caf7:	push   rdi
  40caf8:	pop    rax
  40caf9:	pop    rcx
  40cafa:	pop    rdx
  40cafb:	jnp    0x40cb79
  40cafd:	jge    0x40cb7d
  40caff:	jg     0x40ca81
  40cb01:	add    DWORD PTR [rdx-0x797a7b7d],0x8a898887
  40cb0b:	mov    ecx,DWORD PTR [rbp+rcx*4-0x6e6f7072]
  40cb12:	xchg   edx,eax
  40cb13:	xchg   ebx,eax
  40cb14:	xchg   esp,eax
  40cb15:	xchg   ebp,eax
  40cb16:	xchg   esi,eax
  40cb17:	xchg   edi,eax
  40cb18:	cwde   
  40cb19:	cdq    
  40cb1a:	(bad)  
  40cb1b:	fwait
  40cb1c:	pushf  
  40cb1d:	popf   
  40cb1e:	sahf   
  40cb1f:	lahf   
  40cb20:	movabs al,ds:0xa8a7a6a5a4a3a2a1
  40cb29:	test   eax,0xadacabaa
  40cb2e:	scas   al,BYTE PTR es:[rdi]
  40cb2f:	scas   eax,DWORD PTR es:[rdi]
  40cb30:	mov    al,0xb1
  40cb32:	mov    dl,0xb3
  40cb34:	mov    ah,0xb5
  40cb36:	mov    dh,0xb7
  40cb38:	mov    eax,0xbcbbbab9
  40cb3d:	mov    ebp,0xc1c0bfbe
  40cb42:	ret    0xc4c3
  40cb45:	(bad)
  40cb48:	enter  0xcac9,0xcb
  40cb4c:	int3   
  40cb4d:	int    0xce
  40cb4f:	iret   
  40cb50:	rcl    cl,1
  40cb52:	rcl    bl,cl
  40cb54:	(bad)  
  40cb55:	(bad)  
  40cb56:	(bad)  
  40cb57:	xlat   BYTE PTR ds:[rbx]
  40cb58:	fcomp  st(1)
  40cb5a:	fcmovu st,st(3)
  40cb5c:	(bad)  
  40cb5e:	(bad)  
  40cb60:	loopne 0x40cb43
  40cb62:	loop   0x40cb47
  40cb64:	in     al,0xe5
  40cb66:	out    0xe7,al
  40cb68:	call   0xffffffffed2cb656
  40cb6d:	in     eax,dx
  40cb6e:	out    dx,al
  40cb6f:	out    dx,eax
  40cb70:	lock icebp 
  40cb72:	repnz repz hlt 
  40cb75:	cmc    
  40cb76:	div    bh
  40cb78:	clc    
  40cb79:	stc    
  40cb7a:	cli    
  40cb7b:	sti    
  40cb7c:	cld    
  40cb7d:	std    
  40cb7e:	(bad)  
  40cb7f:	inc    DWORD PTR [rax]
  40cb81:	add    DWORD PTR [rdx],eax
  40cb83:	add    eax,DWORD PTR [rax*1+0x9080706]
  40cb8a:	or     cl,BYTE PTR [rbx]
  40cb8c:	or     al,0xd
  40cb8e:	(bad)  
  40cb8f:	movups xmm2,XMMWORD PTR [rcx]
  40cb92:	adc    dl,BYTE PTR [rbx]
  40cb94:	adc    al,0x15
  40cb96:	(bad)  
  40cb97:	(bad)  
  40cb98:	sbb    BYTE PTR [rcx],bl
  40cb9a:	sbb    bl,BYTE PTR [rbx]
  40cb9c:	sbb    al,0x1d
  40cb9e:	(bad)  
  40cb9f:	(bad)  
  40cba0:	and    BYTE PTR [rcx],ah
  40cba2:	and    ah,BYTE PTR [rbx]
  40cba4:	and    al,0x25
  40cba6:	es (bad) 
  40cba8:	sub    BYTE PTR [rcx],ch
  40cbaa:	sub    ch,BYTE PTR [rbx]
  40cbac:	sub    al,0x2d
  40cbae:	cs (bad) 
  40cbb0:	xor    BYTE PTR [rcx],dh
  40cbb2:	xor    dh,BYTE PTR [rbx]
  40cbb4:	xor    al,0x35
  40cbb6:	ss (bad) 
  40cbb8:	cmp    BYTE PTR [rcx],bh
  40cbba:	cmp    bh,BYTE PTR [rbx]
  40cbbc:	cmp    al,0x3d
  40cbbe:	ds (bad) 
  40cbc0:	rex (bad) 
  40cbc2:	(bad)
  40cbc7:	addr32 push 0x6c6b6a69
  40cbcd:	ins    DWORD PTR es:[rdi],dx
  40cbce:	outs   dx,BYTE PTR ds:[rsi]
  40cbcf:	outs   dx,DWORD PTR ds:[rsi]
  40cbd0:	jo     0x40cc43
  40cbd2:	jb     0x40cc47
  40cbd4:	je     0x40cc4b
  40cbd6:	jbe    0x40cc4f
  40cbd8:	js     0x40cc53
  40cbda:	jp     0x40cc37
  40cbdc:	pop    rsp
  40cbdd:	pop    rbp
  40cbde:	pop    rsi
  40cbdf:	pop    rdi
  40cbe0:	(bad)  
  40cbe1:	(bad)  
  40cbe2:	(bad)
  40cbe7:	addr32 push 0x6c6b6a69
  40cbed:	ins    DWORD PTR es:[rdi],dx
  40cbee:	outs   dx,BYTE PTR ds:[rsi]
  40cbef:	outs   dx,DWORD PTR ds:[rsi]
  40cbf0:	jo     0x40cc63
  40cbf2:	jb     0x40cc67
  40cbf4:	je     0x40cc6b
  40cbf6:	jbe    0x40cc6f
  40cbf8:	js     0x40cc73
  40cbfa:	jp     0x40cc77
  40cbfc:	jl     0x40cc7b
  40cbfe:	jle    0x40cc7f
  40cc00:	add    BYTE PTR [rcx-0x7a7b7c7e],0x86
  40cc07:	xchg   DWORD PTR [rax-0x73747577],ecx
  40cc0d:	lea    ecx,[rsi-0x6d6e6f71]
  40cc13:	xchg   ebx,eax
  40cc14:	xchg   esp,eax
  40cc15:	xchg   ebp,eax
  40cc16:	xchg   esi,eax
  40cc17:	xchg   edi,eax
  40cc18:	cwde   
  40cc19:	cdq    
  40cc1a:	(bad)  
  40cc1b:	fwait
  40cc1c:	pushf  
  40cc1d:	popf   
  40cc1e:	sahf   
  40cc1f:	lahf   
  40cc20:	movabs al,ds:0xa8a7a6a5a4a3a2a1
  40cc29:	test   eax,0xadacabaa
  40cc2e:	scas   al,BYTE PTR es:[rdi]
  40cc2f:	scas   eax,DWORD PTR es:[rdi]
  40cc30:	mov    al,0xb1
  40cc32:	mov    dl,0xb3
  40cc34:	mov    ah,0xb5
  40cc36:	mov    dh,0xb7
  40cc38:	mov    eax,0xbcbbbab9
  40cc3d:	mov    ebp,0xc1c0bfbe
  40cc42:	ret    0xc4c3
  40cc45:	(bad)
  40cc48:	enter  0xcac9,0xcb
  40cc4c:	int3   
  40cc4d:	int    0xce
  40cc4f:	iret   
  40cc50:	rcl    cl,1
  40cc52:	rcl    bl,cl
  40cc54:	(bad)  
  40cc55:	(bad)  
  40cc56:	(bad)  
  40cc57:	xlat   BYTE PTR ds:[rbx]
  40cc58:	fcomp  st(1)
  40cc5a:	fcmovu st,st(3)
  40cc5c:	(bad)  
  40cc5e:	(bad)  
  40cc60:	loopne 0x40cc43
  40cc62:	loop   0x40cc47
  40cc64:	in     al,0xe5
  40cc66:	out    0xe7,al
  40cc68:	call   0xffffffffed2cb756
  40cc6d:	in     eax,dx
  40cc6e:	out    dx,al
  40cc6f:	out    dx,eax
  40cc70:	lock icebp 
  40cc72:	repnz repz hlt 
  40cc75:	cmc    
  40cc76:	div    bh
  40cc78:	clc    
  40cc79:	stc    
  40cc7a:	cli    
  40cc7b:	sti    
  40cc7c:	cld    
  40cc7d:	std    
  40cc7e:	(bad)  
  40cc7f:	inc    DWORD PTR [rdx]
  40cc81:	or     BYTE PTR [rdx],al
  40cc83:	add    BYTE PTR [rdx],al
  40cc85:	add    BYTE PTR [rdx],al
  40cc87:	add    BYTE PTR [rdx],al
  40cc89:	add    BYTE PTR [rdx],al
  40cc8b:	add    BYTE PTR [rdx],al
  40cc8d:	add    BYTE PTR [rdx],al
  40cc8f:	add    BYTE PTR [rdx],al
  40cc91:	add    BYTE PTR [rbx+0x8],al
  40cc94:	rex.X add al,0x42
  40cc97:	or     BYTE PTR [rdx+0x8],al
  40cc9a:	rex.X add al,0x2
  40cc9d:	add    BYTE PTR [rdx],al
  40cc9f:	add    BYTE PTR [rdx],al
  40cca1:	add    BYTE PTR [rdx],al
  40cca3:	add    BYTE PTR [rdx],al
  40cca5:	add    BYTE PTR [rdx],al
  40cca7:	add    BYTE PTR [rdx],al
  40cca9:	add    BYTE PTR [rdx],al
  40ccab:	add    BYTE PTR [rdx],al
  40ccad:	add    BYTE PTR [rdx],al
  40ccaf:	add    BYTE PTR [rdx],al
  40ccb1:	add    BYTE PTR [rdx],al
  40ccb3:	add    BYTE PTR [rdx],al
  40ccb5:	add    BYTE PTR [rdx],al
  40ccb7:	add    BYTE PTR [rdx],al
  40ccb9:	add    BYTE PTR [rdx],al
  40ccbb:	add    BYTE PTR [rdx],al
  40ccbd:	add    BYTE PTR [rdx],al
  40ccbf:	add    BYTE PTR [rcx+0x8],dl
  40ccc2:	xor    BYTE PTR [rax],al
  40ccc4:	xor    BYTE PTR [rax],al
  40ccc6:	xor    BYTE PTR [rax],al
  40ccc8:	xor    BYTE PTR [rax],al
  40ccca:	xor    BYTE PTR [rax],al
  40cccc:	xor    BYTE PTR [rax],al
  40ccce:	xor    BYTE PTR [rax],al
  40ccd0:	xor    BYTE PTR [rax],al
  40ccd2:	xor    BYTE PTR [rax],al
  40ccd4:	xor    BYTE PTR [rax],al
  40ccd6:	xor    BYTE PTR [rax],al
  40ccd8:	xor    BYTE PTR [rax],al
  40ccda:	xor    BYTE PTR [rax],al
  40ccdc:	xor    BYTE PTR [rax],al
  40ccde:	xor    BYTE PTR [rax],al
  40cce0:	adc    al,0x1
  40cce2:	adc    al,0x1
  40cce4:	adc    al,0x1
  40cce6:	adc    al,0x1
  40cce8:	adc    al,0x1
  40ccea:	adc    al,0x1
  40ccec:	adc    al,0x1
  40ccee:	adc    al,0x1
  40ccf0:	adc    al,0x1
  40ccf2:	adc    al,0x1
  40ccf4:	xor    BYTE PTR [rax],al
  40ccf6:	xor    BYTE PTR [rax],al
  40ccf8:	xor    BYTE PTR [rax],al
  40ccfa:	xor    BYTE PTR [rax],al
  40ccfc:	xor    BYTE PTR [rax],al
  40ccfe:	xor    BYTE PTR [rax],al
  40cd00:	xor    BYTE PTR [rax],al
  40cd02:	nop
  40cd03:	add    edx,DWORD PTR [rax-0x6ffc6ffd]
  40cd09:	add    edx,DWORD PTR [rax-0x6ffc6ffd]
  40cd0f:	add    dl,BYTE PTR [rax-0x6ffd6ffe]
  40cd15:	add    dl,BYTE PTR [rax-0x6ffd6ffe]
  40cd1b:	add    dl,BYTE PTR [rax-0x6ffd6ffe]
  40cd21:	add    dl,BYTE PTR [rax-0x6ffd6ffe]
  40cd27:	add    dl,BYTE PTR [rax-0x6ffd6ffe]
  40cd2d:	add    dl,BYTE PTR [rax-0x6ffd6ffe]
  40cd33:	add    dl,BYTE PTR [rax+0x30003002]
  40cd39:	add    BYTE PTR [rax],dh
  40cd3b:	add    BYTE PTR [rax],dh
  40cd3d:	add    BYTE PTR [rax],dh
  40cd3f:	add    dh,BYTE PTR [rax]
  40cd41:	add    BYTE PTR [rax],bl
  40cd43:	add    ebx,DWORD PTR [rax]
  40cd45:	add    ebx,DWORD PTR [rax]
  40cd47:	add    ebx,DWORD PTR [rax]
  40cd49:	add    ebx,DWORD PTR [rax]
  40cd4b:	add    ebx,DWORD PTR [rax]
  40cd4d:	add    ebx,DWORD PTR [rax]
  40cd4f:	add    bl,BYTE PTR [rax]
  40cd51:	add    bl,BYTE PTR [rax]
  40cd53:	add    bl,BYTE PTR [rax]
  40cd55:	add    bl,BYTE PTR [rax]
  40cd57:	add    bl,BYTE PTR [rax]
  40cd59:	add    bl,BYTE PTR [rax]
  40cd5b:	add    bl,BYTE PTR [rax]
  40cd5d:	add    bl,BYTE PTR [rax]
  40cd5f:	add    bl,BYTE PTR [rax]
  40cd61:	add    bl,BYTE PTR [rax]
  40cd63:	add    bl,BYTE PTR [rax]
  40cd65:	add    bl,BYTE PTR [rax]
  40cd67:	add    bl,BYTE PTR [rax]
  40cd69:	add    bl,BYTE PTR [rax]
  40cd6b:	add    bl,BYTE PTR [rax]
  40cd6d:	add    bl,BYTE PTR [rax]
  40cd6f:	add    bl,BYTE PTR [rax]
  40cd71:	add    bl,BYTE PTR [rax]
  40cd73:	add    bl,BYTE PTR [rax]
  40cd75:	add    dh,BYTE PTR [rax]
  40cd77:	add    BYTE PTR [rax],dh
  40cd79:	add    BYTE PTR [rax],dh
  40cd7b:	add    BYTE PTR [rax],dh
  40cd7d:	add    BYTE PTR [rdx],al
	...
  40ce7f:	add    BYTE PTR [rdx],bh
  40ce81:	and    BYTE PTR [rax],al
  40ce83:	add    BYTE PTR [rax],al
  40ce85:	add    BYTE PTR [rax],al
  40ce87:	add    BYTE PTR [rdx],cl
  40ce89:	and    eax,0x6f732573
  40ce8e:	jne    0x40cf04
  40ce90:	and    BYTE PTR [rdi+0x66],ch
  40ce93:	and    BYTE PTR [rbp+0x65],ch
  40ce96:	ins    DWORD PTR es:[rdi],dx
  40ce97:	outs   dx,DWORD PTR ds:[rsi]
  40ce98:	jb     0x40cf13
  40ce9a:	and    BYTE PTR [rcx+0x6c],ah
  40ce9d:	ins    BYTE PTR es:[rdi],dx
  40ce9e:	outs   dx,DWORD PTR ds:[rsi]
  40ce9f:	movsxd esp,DWORD PTR [rcx+0x74]
  40cea2:	imul   ebp,DWORD PTR [rsi+0x67],0x756c2520
  40cea9:	and    BYTE PTR [rdx+0x79],ah
  40ceac:	je     0x40cf13
  40ceae:	jae    0x40ceba
	...
  40cec0:	pop    rax
  40cec1:	pop    rax
  40cec2:	pop    rax
  40cec3:	pop    rax
  40cec4:	pop    rax
  40cec5:	pop    rax
	...
  40cede:	add    BYTE PTR [rax],al
  40cee0:	(bad)  
  40cee1:	(bad)
  40cee6:	addr32 push 0x6c6b6a69
  40ceec:	ins    DWORD PTR es:[rdi],dx
  40ceed:	outs   dx,BYTE PTR ds:[rsi]
  40ceee:	outs   dx,DWORD PTR ds:[rsi]
  40ceef:	jo     0x40cf62
  40cef1:	jb     0x40cf66
  40cef3:	je     0x40cf6a
  40cef5:	jbe    0x40cf6e
  40cef7:	js     0x40cf72
  40cef9:	jp     0x40cf3c
  40cefb:	rex.X
  40cefc:	rex.XB
  40cefd:	rex.R
  40cefe:	rex.RB
  40ceff:	rex.RX
  40cf00:	rex.RXB
  40cf01:	rex.W
  40cf02:	rex.WB
  40cf03:	rex.WX
  40cf04:	rex.WXB
  40cf05:	rex.WR
  40cf06:	rex.WRB
  40cf07:	rex.WRX
  40cf08:	rex.WRXB push r8
  40cf0a:	push   rcx
  40cf0b:	push   rdx
  40cf0c:	push   rbx
  40cf0d:	push   rsp
  40cf0e:	push   rbp
  40cf0f:	push   rsi
  40cf10:	push   rdi
  40cf11:	pop    rax
  40cf12:	pop    rcx
  40cf13:	pop    rdx
  40cf14:	xor    BYTE PTR [rcx],dh
  40cf16:	xor    dh,BYTE PTR [rbx]
  40cf18:	xor    al,0x35
  40cf1a:	ss (bad) 
  40cf1c:	cmp    BYTE PTR [rcx],bh
  40cf1e:	add    BYTE PTR [rax],al
  40cf20:	rex (bad) 
  40cf22:	add    BYTE PTR [r8],al
  40cf25:	add    BYTE PTR [rax],al
  40cf27:	add    BYTE PTR [rax+0x1],al
  40cf2a:	add    BYTE PTR [r8],al
  40cf2d:	add    BYTE PTR [rax],al
  40cf2f:	add    BYTE PTR [rax+0x4061],al
	...
  40cf3d:	add    BYTE PTR [rax],al
  40cf3f:	add    BYTE PTR [rcx+0x72],al
  40cf42:	addr32 jne 0x40cfb2
  40cf45:	outs   dx,BYTE PTR gs:[rsi]
  40cf47:	je     0x40cf69
  40cf49:	outs   dx,DWORD PTR fs:[rsi]
  40cf4b:	ins    DWORD PTR es:[rdi],dx
  40cf4c:	(bad)  
  40cf4d:	imul   ebp,DWORD PTR [rsi+0x20],0x6f727265
  40cf54:	jb     0x40cf76
  40cf56:	sub    BYTE PTR [rdi+rcx*2+0x4d],al
  40cf5a:	rex.B
  40cf5b:	rex.WB
  40cf5c:	rex.WRX sub QWORD PTR [rax],r8
  40cf5f:	rex.B jb 0x40cfc9
  40cf62:	jne    0x40cfd1
  40cf64:	outs   dx,BYTE PTR gs:[rsi]
  40cf66:	je     0x40cf88
  40cf68:	jae    0x40cfd3
  40cf6a:	outs   dx,BYTE PTR ds:[rsi]
  40cf6b:	addr32 jne 0x40cfda
  40cf6e:	(bad)  
  40cf6f:	jb     0x40cfda
  40cf71:	je     0x40cfec
  40cf73:	and    BYTE PTR [rax],ch
  40cf75:	push   rbx
  40cf76:	rex.WB
  40cf77:	rex.RXB
  40cf78:	rex.WRX sub QWORD PTR [rax],r8
  40cf7b:	add    BYTE PTR [rax],al
  40cf7d:	add    BYTE PTR [rax],al
  40cf7f:	add    BYTE PTR [rdi+0x76],cl
  40cf82:	gs jb  0x40cfeb
  40cf85:	ins    BYTE PTR es:[rdi],dx
  40cf86:	outs   dx,DWORD PTR ds:[rsi]
  40cf87:	ja     0x40cfa9
  40cf89:	jb     0x40cfec
  40cf8b:	outs   dx,BYTE PTR ds:[rsi]
  40cf8c:	and    BYTE PTR gs:[ebp+0x72],ah
  40cf91:	jb     0x40d002
  40cf93:	jb     0x40cfb5
  40cf95:	sub    BYTE PTR [rdi+0x56],cl
  40cf98:	rex.RB push r10
  40cf9a:	rex.RX
  40cf9b:	rex.WR
  40cf9c:	rex.WRXB push r15
  40cf9e:	sub    DWORD PTR [rax],eax
  40cfa0:	push   rax
  40cfa1:	(bad)  
  40cfa2:	jb     0x40d018
  40cfa4:	imul   esp,DWORD PTR [rcx+0x6c],0x736f6c20
  40cfab:	jae    0x40cfcd
  40cfad:	outs   dx,DWORD PTR ds:[rsi]
  40cfae:	data16 and BYTE PTR [rbx+0x69],dh
  40cfb2:	outs   dx,BYTE PTR ds:[esi]
  40cfb4:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  40cfbb:	and    BYTE PTR gs:[rax],ch
  40cfbe:	push   rax
  40cfbf:	rex.WR
  40cfc0:	rex.WRXB push r11
  40cfc2:	push   rbx
  40cfc3:	sub    DWORD PTR [rax],eax
  40cfc5:	add    BYTE PTR [rax],al
  40cfc7:	add    BYTE PTR [rdi+rbp*2+0x74],dl
  40cfcb:	(bad)  
  40cfcc:	ins    BYTE PTR es:[rdi],dx
  40cfcd:	and    BYTE PTR [rdi+rbp*2+0x73],ch
  40cfd1:	jae    0x40cff3
  40cfd3:	outs   dx,DWORD PTR ds:[rsi]
  40cfd4:	data16 and BYTE PTR [rbx+0x69],dh
  40cfd8:	outs   dx,BYTE PTR ds:[esi]
  40cfda:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  40cfe1:	and    BYTE PTR gs:[rax],ch
  40cfe4:	push   rsp
  40cfe5:	rex.WR
  40cfe6:	rex.WRXB push r11
  40cfe8:	push   rbx
  40cfe9:	sub    DWORD PTR [rax],eax
  40cfeb:	add    BYTE PTR [rax],al
  40cfed:	add    BYTE PTR [rax],al
  40cfef:	add    BYTE PTR [rax+rbp*2+0x65],dl
  40cff3:	and    BYTE PTR [rdx+0x65],dh
  40cff6:	jae    0x40d06d
  40cff8:	ins    BYTE PTR es:[rdi],dx
  40cff9:	je     0x40d01b
  40cffb:	imul   esi,DWORD PTR [rbx+0x20],0x206f6f74
  40d002:	jae    0x40d071
  40d004:	(bad)  
  40d005:	ins    BYTE PTR es:[rdi],dx
  40d006:	ins    BYTE PTR es:[rdi],dx
  40d007:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  40d00b:	(bad)  
  40d00c:	and    BYTE PTR gs:[rdx+0x65],dh
  40d010:	jo     0x40d084
  40d012:	gs jae 0x40d07a
  40d015:	outs   dx,BYTE PTR ds:[rsi]
  40d016:	je     0x40d07d
  40d018:	and    BYTE PTR fs:[rax],ch
  40d01b:	push   rbp
  40d01c:	rex.WRX
  40d01d:	rex.R
  40d01e:	rex.RB push r10
  40d020:	rex.RX
  40d021:	rex.WR
  40d022:	rex.WRXB push r15
  40d024:	sub    DWORD PTR [rax],eax
  40d026:	push   rbp
  40d027:	outs   dx,BYTE PTR ds:[rsi]
  40d028:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  40d02c:	outs   dx,BYTE PTR ds:[rsi]
  40d02d:	and    BYTE PTR [rbp+0x72],ah
  40d030:	jb     0x40d0a1
  40d032:	jb     0x40d034
  40d034:	add    BYTE PTR [rax],al
  40d036:	add    BYTE PTR [rax],al
  40d038:	pop    rdi
  40d039:	ins    DWORD PTR es:[rdi],dx
  40d03a:	(bad)  
  40d03b:	je     0x40d0a5
  40d03d:	gs jb  0x40d0b2
  40d040:	sub    BYTE PTR [rcx],ch
  40d042:	cmp    ah,BYTE PTR [rax]
  40d044:	and    eax,0x6e692073
  40d049:	and    BYTE PTR [rip+0x67252873],ah        # 0x6765f8c2
  40d04f:	sub    al,0x20
  40d051:	and    eax,0x20202967
  40d056:	sub    BYTE PTR [rdx+0x65],dh
  40d059:	je     0x40d0d1
  40d05b:	(bad)  
  40d05c:	ins    BYTE PTR es:[rdi],dx
  40d05d:	cmp    eax,0xa296725
  40d062:	add    BYTE PTR [rax],al
  40d064:	in     al,dx
  40d065:	xchg   edx,eax
  40d066:	(bad)  
  40d067:	jmp    FWORD PTR [rip+0xffffffff9cffff92]        # 0xffffffff9d40cfff
  40d06d:	xchg   edx,eax
  40d06e:	(bad)  
  40d06f:	jmp    FWORD PTR [rdx+rdx*4-0x6d430001]
  40d076:	(bad)  
  40d077:	dec    esp
  40d079:	xchg   edx,eax
  40d07a:	(bad)  
  40d07b:	(bad)  
  40d07c:	fcom   QWORD PTR [rdx+0x694dffff]
  40d082:	outs   dx,BYTE PTR ds:[rsi]
  40d083:	addr32 ja 0x40d0b3
  40d086:	ja     0x40d0be
  40d088:	xor    al,0x20
  40d08a:	jb     0x40d101
  40d08c:	outs   dx,BYTE PTR ds:[rsi]
  40d08d:	je     0x40d0f8
  40d08f:	ins    DWORD PTR es:[rdi],dx
  40d090:	and    BYTE PTR gs:[rsi+0x61],ah
  40d094:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0xa3a65
  40d09c:	add    BYTE PTR [rax],al
  40d09e:	add    BYTE PTR [rax],al
  40d0a0:	rex.B
  40d0a1:	fs fs jb 0x40d10a
  40d0a5:	jae    0x40d11a
  40d0a7:	and    BYTE PTR [rip+0x61682070],ah        # 0x61a8f11d
  40d0ad:	jae    0x40d0cf
  40d0af:	outs   dx,BYTE PTR ds:[rsi]
  40d0b0:	outs   dx,DWORD PTR ds:[rsi]
  40d0b1:	and    BYTE PTR [rcx+0x6d],ch
  40d0b4:	(bad)  
  40d0b5:	addr32 gs sub eax,0x74636573
  40d0bc:	imul   ebp,DWORD PTR [rdi+0x6e],0x56202000
  40d0c3:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  40d0ca:	jne    0x40d131
  40d0cc:	jb     0x40d147
  40d0ce:	and    BYTE PTR [rsi+0x61],ah
  40d0d1:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x726f6620
  40d0d9:	and    BYTE PTR [rip+0x79622064],ah        # 0x79a2f143
  40d0df:	je     0x40d146
  40d0e1:	jae    0x40d103
  40d0e3:	(bad)  
  40d0e4:	je     0x40d106
  40d0e6:	(bad)  
  40d0e7:	fs fs jb 0x40d150
  40d0eb:	jae    0x40d160
  40d0ed:	and    BYTE PTR [rip+0x70],ah        # 0x40d163
  40d0f3:	add    BYTE PTR [rax],al
  40d0f5:	add    BYTE PTR [rax],al
  40d0f7:	add    BYTE PTR [rax],ah
  40d0f9:	and    BYTE PTR [rsi+0x69],dl
  40d0fc:	jb     0x40d172
  40d0fe:	jne    0x40d161
  40d100:	ins    BYTE PTR es:[rdi],dx
  40d101:	push   rax
  40d102:	jb     0x40d173
  40d104:	je     0x40d16b
  40d106:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
  40d10a:	(bad)  
  40d10b:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
  40d113:	push   0x646f6320
  40d118:	and    BYTE PTR gs:[rax],dh
  40d11b:	js     0x40d142
  40d11d:	js     0x40d11f
  40d11f:	add    BYTE PTR [rax],ah
  40d121:	and    BYTE PTR [rbp+0x6e],dl
  40d124:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  40d128:	outs   dx,BYTE PTR ds:[rsi]
  40d129:	and    BYTE PTR [rax+0x73],dh
  40d12c:	gs jne 0x40d193
  40d12f:	outs   dx,DWORD PTR ds:[rsi]
  40d130:	and    BYTE PTR [rdx+0x65],dh
  40d133:	ins    BYTE PTR es:[rdi],dx
  40d134:	outs   dx,DWORD PTR ds:[rsi]
  40d135:	movsxd esp,DWORD PTR [rcx+0x74]
  40d138:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727020
  40d13f:	je     0x40d1b0
  40d141:	movsxd ebp,DWORD PTR [rdi+0x6c]
  40d144:	and    BYTE PTR [rsi+0x65],dh
  40d147:	jb     0x40d1bc
  40d149:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  40d150:	or     al,BYTE PTR [rax]
  40d152:	add    BYTE PTR [rax],al
  40d154:	add    BYTE PTR [rax],al
  40d156:	add    BYTE PTR [rax],al
  40d158:	and    BYTE PTR [rax],ah
  40d15a:	push   rbp
  40d15b:	outs   dx,BYTE PTR ds:[rsi]
  40d15c:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  40d160:	outs   dx,BYTE PTR ds:[rsi]
  40d161:	and    BYTE PTR [rax+0x73],dh
  40d164:	gs jne 0x40d1cb
  40d167:	outs   dx,DWORD PTR ds:[rsi]
  40d168:	and    BYTE PTR [rdx+0x65],dh
  40d16b:	ins    BYTE PTR es:[rdi],dx
  40d16c:	outs   dx,DWORD PTR ds:[rsi]
  40d16d:	movsxd esp,DWORD PTR [rcx+0x74]
  40d170:	imul   ebp,DWORD PTR [rdi+0x6e],0x74696220
  40d177:	and    BYTE PTR [rbx+0x69],dh
  40d17a:	jp     0x40d1e1
  40d17c:	and    BYTE PTR [rip+0xa2e64],ah        # 0x4affe6
	...
  40d18e:	add    BYTE PTR [rax],al
  40d190:	cs jo  0x40d1f7
  40d193:	(bad)  
  40d194:	je     0x40d1f7
	...
  40d19e:	add    BYTE PTR [rax],al
  40d1a0:	and    BYTE PTR [rax+0x40],0x0
	...
  40d1af:	add    BYTE PTR [rax+0x40a0],dl
	...
  40d1bd:	add    BYTE PTR [rax],al
  40d1bf:	add    BYTE PTR [rax-0x6e],dl
  40d1c2:	add    BYTE PTR [rax],al
	...
  40d1cd:	add    BYTE PTR [rax],al
  40d1cf:	add    BYTE PTR [rax-0x27],ah
  40d1d2:	add    BYTE PTR [rax],al
	...
  40d1dd:	add    BYTE PTR [rax],al
  40d1df:	add    BYTE PTR [rax-0x27],ah
  40d1e2:	add    BYTE PTR [rax],al
	...
  40d1ed:	add    BYTE PTR [rax],al
  40d1ef:	add    BYTE PTR [rax],dh
  40d1f1:	iret   
  40d1f2:	add    BYTE PTR [rax],al
	...
  40d201:	add    BYTE PTR [rax+0x0],al
	...
  40d210:	mov    WORD PTR [rcx+rax*2],ss
	...
  40d21f:	add    BYTE PTR [rsp+rdx*1+0x41],dh
	...
  40d22e:	add    BYTE PTR [rax],al
  40d230:	in     al,0x14
  40d232:	add    BYTE PTR [r8],al
	...
  40d23d:	add    BYTE PTR [rax],al
  40d23f:	add    BYTE PTR [rdx*1+0x41],al
	...
  40d24e:	add    BYTE PTR [rax],al
  40d250:	add    BYTE PTR [rdi],0x41
	...
  40d25f:	add    al,bh
  40d261:	or     al,BYTE PTR [rcx+0x0]
	...
  40d270:	lock or al,BYTE PTR [rcx+0x0]
	...
  40d280:	loopne 0x40d28c
  40d282:	add    BYTE PTR [r8],al
	...
  40d28d:	add    BYTE PTR [rax],al
  40d28f:	add    al,ch
  40d291:	or     al,BYTE PTR [rcx+0x0]
	...
  40d2a0:	add    BYTE PTR [rax],ah
  40d2a2:	add    BYTE PTR [r8],al
	...
  40d2ad:	add    BYTE PTR [rax],al
  40d2af:	add    BYTE PTR [rax],dl
  40d2b1:	and    BYTE PTR [rcx+0x0],al
	...
  40d2c0:	sbb    BYTE PTR [rax],ah
  40d2c2:	add    BYTE PTR [r8],al
	...
  40d2cd:	add    BYTE PTR [rax],al
  40d2cf:	add    BYTE PTR [rax],dh
  40d2d1:	and    BYTE PTR [rcx+0x0],al
	...
  40d2e0:	add    BYTE PTR [rcx],al
  40d2e2:	add    BYTE PTR [r8],al
	...
  40d2ed:	add    BYTE PTR [rax],al
  40d2ef:	add    BYTE PTR [rax+0x7],dl
  40d2f2:	add    BYTE PTR [r8],al
	...
  40d2fd:	add    BYTE PTR [rax],al
  40d2ff:	add    BYTE PTR [rax],dl
  40d301:	imul   eax,DWORD PTR [rax+0x0],0x0
	...
  40d30d:	add    BYTE PTR [rax],al
  40d30f:	add    BYTE PTR [rax+0x62],ah
  40d312:	add    BYTE PTR [rax],al
	...
  40d321:	(bad)  
  40d322:	add    BYTE PTR [r8],al
	...
  40d32d:	add    BYTE PTR [rax],al
  40d32f:	add    BYTE PTR [rax+0x40cc],al
	...
  40d33d:	add    BYTE PTR [rax],al
  40d33f:	add    BYTE PTR [rax],dh
  40d341:	(bad)  
  40d342:	add    BYTE PTR [r8],al
	...
  40d34d:	add    BYTE PTR [rax],al
  40d34f:	add    BYTE PTR [rax],dl
  40d351:	add    DWORD PTR [rcx+0x0],eax
	...
  40d360:	sbb    BYTE PTR [rdi],al
  40d362:	add    BYTE PTR [r8],al
	...
  40d36d:	add    BYTE PTR [rax],al
  40d36f:	add    BYTE PTR [rdi+rax*1],dl
  40d372:	add    BYTE PTR [r8],al
	...
  40d37d:	add    BYTE PTR [rax],al
  40d37f:	add    BYTE PTR [rax],dl
  40d381:	(bad)  
  40d382:	add    BYTE PTR [r8],al
	...
  40d38d:	add    BYTE PTR [rax],al
  40d38f:	add    BYTE PTR [rax+0x4100],bl
	...
  40d39d:	add    BYTE PTR [rax],al
  40d39f:	add    BYTE PTR [rax+riz*4],dh
  40d3a2:	add    BYTE PTR [rax],al
	...
  40d3ad:	add    BYTE PTR [rax],al
  40d3af:	add    BYTE PTR [rax],bh
  40d3b1:	movabs al,ds:0x40
  40d3ba:	add    BYTE PTR [rax],al
  40d3bc:	add    BYTE PTR [rax],al
  40d3be:	add    BYTE PTR [rax],al
  40d3c0:	rex.RXB
  40d3c1:	rex.XB
  40d3c2:	rex.XB cmp spl,BYTE PTR [r8]
  40d3c5:	sub    BYTE PTR [rdi+0x4e],al
  40d3c8:	push   rbp
  40d3c9:	sub    DWORD PTR [rax],esp
  40d3cb:	xor    al,0x2e
  40d3cd:	cmp    DWORD PTR [rsi],ebp
  40d3cf:	xor    al,0x0
	...
  40d3dd:	add    BYTE PTR [rax],al
  40d3df:	add    BYTE PTR [rdi+0x43],al
  40d3e2:	rex.XB cmp spl,BYTE PTR [r8]
  40d3e5:	sub    BYTE PTR [rdi+0x4e],al
  40d3e8:	push   rbp
  40d3e9:	sub    DWORD PTR [rax],esp
  40d3eb:	xor    al,0x2e
  40d3ed:	cmp    DWORD PTR [rsi],ebp
  40d3ef:	xor    al,0x0
	...
  40d3fd:	add    BYTE PTR [rax],al
  40d3ff:	add    BYTE PTR [rdi+0x43],al
  40d402:	rex.XB cmp spl,BYTE PTR [r8]
  40d405:	sub    BYTE PTR [rdi+0x4e],al
  40d408:	push   rbp
  40d409:	sub    DWORD PTR [rax],esp
  40d40b:	xor    al,0x2e
  40d40d:	cmp    DWORD PTR [rsi],ebp
  40d40f:	xor    al,0x0
	...
  40d41d:	add    BYTE PTR [rax],al
  40d41f:	add    BYTE PTR [rdi+0x43],al
  40d422:	rex.XB cmp spl,BYTE PTR [r8]
  40d425:	sub    BYTE PTR [rdi+0x4e],al
  40d428:	push   rbp
  40d429:	sub    DWORD PTR [rax],esp
  40d42b:	xor    al,0x2e
  40d42d:	cmp    DWORD PTR [rsi],ebp
  40d42f:	xor    al,0x0
	...
  40d43d:	add    BYTE PTR [rax],al
  40d43f:	add    BYTE PTR [rdi+0x43],al
  40d442:	rex.XB cmp spl,BYTE PTR [r8]
  40d445:	sub    BYTE PTR [rdi+0x4e],al
  40d448:	push   rbp
  40d449:	sub    DWORD PTR [rax],esp
  40d44b:	xor    al,0x2e
  40d44d:	cmp    DWORD PTR [rsi],ebp
  40d44f:	xor    al,0x0
	...
  40d45d:	add    BYTE PTR [rax],al
  40d45f:	add    BYTE PTR [rdi+0x43],al
  40d462:	rex.XB cmp spl,BYTE PTR [r8]
  40d465:	sub    BYTE PTR [rdi+0x4e],al
  40d468:	push   rbp
  40d469:	sub    DWORD PTR [rax],esp
  40d46b:	xor    al,0x2e
  40d46d:	cmp    DWORD PTR [rsi],ebp
  40d46f:	xor    al,0x0
	...
  40d47d:	add    BYTE PTR [rax],al
  40d47f:	add    BYTE PTR [rdi+0x43],al
  40d482:	rex.XB cmp spl,BYTE PTR [r8]
  40d485:	sub    BYTE PTR [rdi+0x4e],al
  40d488:	push   rbp
  40d489:	sub    DWORD PTR [rax],esp
  40d48b:	xor    al,0x2e
  40d48d:	cmp    DWORD PTR [rsi],ebp
  40d48f:	xor    al,0x0
	...
  40d49d:	add    BYTE PTR [rax],al
  40d49f:	add    BYTE PTR [rdi+0x43],al
  40d4a2:	rex.XB cmp spl,BYTE PTR [r8]
  40d4a5:	sub    BYTE PTR [rdi+0x4e],al
  40d4a8:	push   rbp
  40d4a9:	sub    DWORD PTR [rax],esp
  40d4ab:	xor    al,0x2e
  40d4ad:	cmp    DWORD PTR [rsi],ebp
  40d4af:	xor    al,0x0
	...
  40d4bd:	add    BYTE PTR [rax],al
  40d4bf:	add    BYTE PTR [rdi+0x43],al
  40d4c2:	rex.XB cmp spl,BYTE PTR [r8]
  40d4c5:	sub    BYTE PTR [rdi+0x4e],al
  40d4c8:	push   rbp
  40d4c9:	sub    DWORD PTR [rax],esp
  40d4cb:	xor    al,0x2e
  40d4cd:	cmp    DWORD PTR [rsi],ebp
  40d4cf:	xor    al,0x0
	...
  40d4dd:	add    BYTE PTR [rax],al
  40d4df:	add    BYTE PTR [rdi+0x43],al
  40d4e2:	rex.XB cmp spl,BYTE PTR [r8]
  40d4e5:	sub    BYTE PTR [rdi+0x4e],al
  40d4e8:	push   rbp
  40d4e9:	sub    DWORD PTR [rax],esp
  40d4eb:	xor    al,0x2e
  40d4ed:	cmp    DWORD PTR [rsi],ebp
  40d4ef:	xor    al,0x0
	...
  40d4fd:	add    BYTE PTR [rax],al
  40d4ff:	add    BYTE PTR [rdi+0x43],al
  40d502:	rex.XB cmp spl,BYTE PTR [r8]
  40d505:	sub    BYTE PTR [rdi+0x4e],al
  40d508:	push   rbp
  40d509:	sub    DWORD PTR [rax],esp
  40d50b:	xor    al,0x2e
  40d50d:	cmp    DWORD PTR [rsi],ebp
  40d50f:	xor    al,0x0
	...
  40d51d:	add    BYTE PTR [rax],al
  40d51f:	add    BYTE PTR [rdi+0x43],al
  40d522:	rex.XB cmp spl,BYTE PTR [r8]
  40d525:	sub    BYTE PTR [rdi+0x4e],al
  40d528:	push   rbp
  40d529:	sub    DWORD PTR [rax],esp
  40d52b:	xor    al,0x2e
  40d52d:	cmp    DWORD PTR [rsi],ebp
  40d52f:	xor    al,0x0
	...
  40d53d:	add    BYTE PTR [rax],al
  40d53f:	add    BYTE PTR [rdi+0x43],al
  40d542:	rex.XB cmp spl,BYTE PTR [r8]
  40d545:	sub    BYTE PTR [rdi+0x4e],al
  40d548:	push   rbp
  40d549:	sub    DWORD PTR [rax],esp
  40d54b:	xor    al,0x2e
  40d54d:	cmp    DWORD PTR [rsi],ebp
  40d54f:	xor    al,0x0
	...
  40d55d:	add    BYTE PTR [rax],al
  40d55f:	add    BYTE PTR [rdi+0x43],al
  40d562:	rex.XB cmp spl,BYTE PTR [r8]
  40d565:	sub    BYTE PTR [rdi+0x4e],al
  40d568:	push   rbp
  40d569:	sub    DWORD PTR [rax],esp
  40d56b:	xor    al,0x2e
  40d56d:	cmp    DWORD PTR [rsi],ebp
  40d56f:	xor    al,0x0
	...
  40d57d:	add    BYTE PTR [rax],al
  40d57f:	add    BYTE PTR [rdi+0x43],al
  40d582:	rex.XB cmp spl,BYTE PTR [r8]
  40d585:	sub    BYTE PTR [rdi+0x4e],al
  40d588:	push   rbp
  40d589:	sub    DWORD PTR [rax],esp
  40d58b:	xor    al,0x2e
  40d58d:	cmp    DWORD PTR [rsi],ebp
  40d58f:	xor    al,0x0
	...
  40d59d:	add    BYTE PTR [rax],al
  40d59f:	add    BYTE PTR [rdi+0x43],al
  40d5a2:	rex.XB cmp spl,BYTE PTR [r8]
  40d5a5:	sub    BYTE PTR [rdi+0x4e],al
  40d5a8:	push   rbp
  40d5a9:	sub    DWORD PTR [rax],esp
  40d5ab:	xor    al,0x2e
  40d5ad:	cmp    DWORD PTR [rsi],ebp
  40d5af:	xor    al,0x0
	...
  40d5bd:	add    BYTE PTR [rax],al
  40d5bf:	add    BYTE PTR [rdi+0x43],al
  40d5c2:	rex.XB cmp spl,BYTE PTR [r8]
  40d5c5:	sub    BYTE PTR [rdi+0x4e],al
  40d5c8:	push   rbp
  40d5c9:	sub    DWORD PTR [rax],esp
  40d5cb:	xor    al,0x2e
  40d5cd:	cmp    DWORD PTR [rsi],ebp
  40d5cf:	xor    al,0x0
	...
  40d5dd:	add    BYTE PTR [rax],al
  40d5df:	add    BYTE PTR [rdi+0x43],al
  40d5e2:	rex.XB cmp spl,BYTE PTR [r8]
  40d5e5:	sub    BYTE PTR [rdi+0x4e],al
  40d5e8:	push   rbp
  40d5e9:	sub    DWORD PTR [rax],esp
  40d5eb:	xor    al,0x2e
  40d5ed:	cmp    DWORD PTR [rsi],ebp
  40d5ef:	xor    al,0x0
	...
  40d5fd:	add    BYTE PTR [rax],al
  40d5ff:	add    BYTE PTR [rdi+0x43],al
  40d602:	rex.XB cmp spl,BYTE PTR [r8]
  40d605:	sub    BYTE PTR [rdi+0x4e],al
  40d608:	push   rbp
  40d609:	sub    DWORD PTR [rax],esp
  40d60b:	xor    al,0x2e
  40d60d:	cmp    DWORD PTR [rsi],ebp
  40d60f:	xor    al,0x0
	...
  40d61d:	add    BYTE PTR [rax],al
  40d61f:	add    BYTE PTR [rdi+0x43],al
  40d622:	rex.XB cmp spl,BYTE PTR [r8]
  40d625:	sub    BYTE PTR [rdi+0x4e],al
  40d628:	push   rbp
  40d629:	sub    DWORD PTR [rax],esp
  40d62b:	xor    al,0x2e
  40d62d:	cmp    DWORD PTR [rsi],ebp
  40d62f:	xor    al,0x0
	...
  40d63d:	add    BYTE PTR [rax],al
  40d63f:	add    BYTE PTR [rdi+0x43],al
  40d642:	rex.XB cmp spl,BYTE PTR [r8]
  40d645:	sub    BYTE PTR [rdi+0x4e],al
  40d648:	push   rbp
  40d649:	sub    DWORD PTR [rax],esp
  40d64b:	xor    al,0x2e
  40d64d:	cmp    DWORD PTR [rsi],ebp
  40d64f:	xor    al,0x0
	...
  40d65d:	add    BYTE PTR [rax],al
  40d65f:	add    BYTE PTR [rdi+0x43],al
  40d662:	rex.XB cmp spl,BYTE PTR [r8]
  40d665:	sub    BYTE PTR [rdi+0x4e],al
  40d668:	push   rbp
  40d669:	sub    DWORD PTR [rax],esp
  40d66b:	xor    al,0x2e
  40d66d:	cmp    DWORD PTR [rsi],ebp
  40d66f:	xor    al,0x0
	...
  40d67d:	add    BYTE PTR [rax],al
  40d67f:	add    BYTE PTR [rdi+0x43],al
  40d682:	rex.XB cmp spl,BYTE PTR [r8]
  40d685:	sub    BYTE PTR [rdi+0x4e],al
  40d688:	push   rbp
  40d689:	sub    DWORD PTR [rax],esp
  40d68b:	xor    al,0x2e
  40d68d:	cmp    DWORD PTR [rsi],ebp
  40d68f:	xor    al,0x0
	...
  40d69d:	add    BYTE PTR [rax],al
  40d69f:	add    BYTE PTR [rdi+0x43],al
  40d6a2:	rex.XB cmp spl,BYTE PTR [r8]
  40d6a5:	sub    BYTE PTR [rdi+0x4e],al
  40d6a8:	push   rbp
  40d6a9:	sub    DWORD PTR [rax],esp
  40d6ab:	xor    al,0x2e
  40d6ad:	cmp    DWORD PTR [rsi],ebp
  40d6af:	xor    al,0x0
	...
  40d6bd:	add    BYTE PTR [rax],al
  40d6bf:	add    BYTE PTR [rdi+0x43],al
  40d6c2:	rex.XB cmp spl,BYTE PTR [r8]
  40d6c5:	sub    BYTE PTR [rdi+0x4e],al
  40d6c8:	push   rbp
  40d6c9:	sub    DWORD PTR [rax],esp
  40d6cb:	xor    al,0x2e
  40d6cd:	cmp    DWORD PTR [rsi],ebp
  40d6cf:	xor    al,0x0
	...
  40d6dd:	add    BYTE PTR [rax],al
  40d6df:	add    BYTE PTR [rdi+0x43],al
  40d6e2:	rex.XB cmp spl,BYTE PTR [r8]
  40d6e5:	sub    BYTE PTR [rdi+0x4e],al
  40d6e8:	push   rbp
  40d6e9:	sub    DWORD PTR [rax],esp
  40d6eb:	xor    al,0x2e
  40d6ed:	cmp    DWORD PTR [rsi],ebp
  40d6ef:	xor    al,0x0
	...
  40d6fd:	add    BYTE PTR [rax],al
  40d6ff:	add    BYTE PTR [rdi+0x43],al
  40d702:	rex.XB cmp spl,BYTE PTR [r8]
  40d705:	sub    BYTE PTR [rdi+0x4e],al
  40d708:	push   rbp
  40d709:	sub    DWORD PTR [rax],esp
  40d70b:	xor    al,0x2e
  40d70d:	cmp    DWORD PTR [rsi],ebp
  40d70f:	xor    al,0x0
	...
  40d71d:	add    BYTE PTR [rax],al
  40d71f:	add    BYTE PTR [rdi+0x43],al
  40d722:	rex.XB cmp spl,BYTE PTR [r8]
  40d725:	sub    BYTE PTR [rdi+0x4e],al
  40d728:	push   rbp
  40d729:	sub    DWORD PTR [rax],esp
  40d72b:	xor    al,0x2e
  40d72d:	cmp    DWORD PTR [rsi],ebp
  40d72f:	xor    al,0x0
	...
  40d73d:	add    BYTE PTR [rax],al
  40d73f:	add    BYTE PTR [rdi+0x43],al
  40d742:	rex.XB cmp spl,BYTE PTR [r8]
  40d745:	sub    BYTE PTR [rdi+0x4e],al
  40d748:	push   rbp
  40d749:	sub    DWORD PTR [rax],esp
  40d74b:	xor    al,0x2e
  40d74d:	cmp    DWORD PTR [rsi],ebp
  40d74f:	xor    al,0x0
	...
  40d75d:	add    BYTE PTR [rax],al
  40d75f:	add    BYTE PTR [rdi+0x43],al
  40d762:	rex.XB cmp spl,BYTE PTR [r8]
  40d765:	sub    BYTE PTR [rdi+0x4e],al
  40d768:	push   rbp
  40d769:	sub    DWORD PTR [rax],esp
  40d76b:	xor    al,0x2e
  40d76d:	cmp    DWORD PTR [rsi],ebp
  40d76f:	xor    al,0x0
	...
  40d77d:	add    BYTE PTR [rax],al
  40d77f:	add    BYTE PTR [rdi+0x43],al
  40d782:	rex.XB cmp spl,BYTE PTR [r8]
  40d785:	sub    BYTE PTR [rdi+0x4e],al
  40d788:	push   rbp
  40d789:	sub    DWORD PTR [rax],esp
  40d78b:	xor    al,0x2e
  40d78d:	cmp    DWORD PTR [rsi],ebp
  40d78f:	xor    al,0x0
	...
  40d79d:	add    BYTE PTR [rax],al
  40d79f:	add    BYTE PTR [rdi+0x43],al
  40d7a2:	rex.XB cmp spl,BYTE PTR [r8]
  40d7a5:	sub    BYTE PTR [rdi+0x4e],al
  40d7a8:	push   rbp
  40d7a9:	sub    DWORD PTR [rax],esp
  40d7ab:	xor    al,0x2e
  40d7ad:	cmp    DWORD PTR [rsi],ebp
  40d7af:	xor    al,0x0
	...
  40d7bd:	add    BYTE PTR [rax],al
  40d7bf:	add    BYTE PTR [rdi+0x43],al
  40d7c2:	rex.XB cmp spl,BYTE PTR [r8]
  40d7c5:	sub    BYTE PTR [rdi+0x4e],al
  40d7c8:	push   rbp
  40d7c9:	sub    DWORD PTR [rax],esp
  40d7cb:	xor    al,0x2e
  40d7cd:	cmp    DWORD PTR [rsi],ebp
  40d7cf:	xor    al,0x0
	...
  40d7dd:	add    BYTE PTR [rax],al
  40d7df:	add    BYTE PTR [rdi+0x43],al
  40d7e2:	rex.XB cmp spl,BYTE PTR [r8]
  40d7e5:	sub    BYTE PTR [rdi+0x4e],al
  40d7e8:	push   rbp
  40d7e9:	sub    DWORD PTR [rax],esp
  40d7eb:	xor    al,0x2e
  40d7ed:	cmp    DWORD PTR [rsi],ebp
  40d7ef:	xor    al,0x0
	...
  40d7fd:	add    BYTE PTR [rax],al
  40d7ff:	add    BYTE PTR [rdi+0x43],al
  40d802:	rex.XB cmp spl,BYTE PTR [r8]
  40d805:	sub    BYTE PTR [rdi+0x4e],al
  40d808:	push   rbp
  40d809:	sub    DWORD PTR [rax],esp
  40d80b:	xor    al,0x2e
  40d80d:	cmp    DWORD PTR [rsi],ebp
  40d80f:	xor    al,0x0
	...
  40d81d:	add    BYTE PTR [rax],al
  40d81f:	add    BYTE PTR [rdi+0x43],al
  40d822:	rex.XB cmp spl,BYTE PTR [r8]
  40d825:	sub    BYTE PTR [rdi+0x4e],al
  40d828:	push   rbp
  40d829:	sub    DWORD PTR [rax],esp
  40d82b:	xor    al,0x2e
  40d82d:	cmp    DWORD PTR [rsi],ebp
  40d82f:	xor    al,0x0
	...
  40d83d:	add    BYTE PTR [rax],al
  40d83f:	add    BYTE PTR [rdi+0x43],al
  40d842:	rex.XB cmp spl,BYTE PTR [r8]
  40d845:	sub    BYTE PTR [rdi+0x4e],al
  40d848:	push   rbp
  40d849:	sub    DWORD PTR [rax],esp
  40d84b:	xor    al,0x2e
  40d84d:	cmp    DWORD PTR [rsi],ebp
  40d84f:	xor    al,0x0
	...
  40d85d:	add    BYTE PTR [rax],al
  40d85f:	add    BYTE PTR [rdi+0x43],al
  40d862:	rex.XB cmp spl,BYTE PTR [r8]
  40d865:	sub    BYTE PTR [rdi+0x4e],al
  40d868:	push   rbp
  40d869:	sub    DWORD PTR [rax],esp
  40d86b:	xor    al,0x2e
  40d86d:	cmp    DWORD PTR [rsi],ebp
  40d86f:	xor    al,0x0
	...
  40d87d:	add    BYTE PTR [rax],al
  40d87f:	add    BYTE PTR [rdi+0x43],al
  40d882:	rex.XB cmp spl,BYTE PTR [r8]
  40d885:	sub    BYTE PTR [rdi+0x4e],al
  40d888:	push   rbp
  40d889:	sub    DWORD PTR [rax],esp
  40d88b:	xor    al,0x2e
  40d88d:	cmp    DWORD PTR [rsi],ebp
  40d88f:	xor    al,0x0
	...
  40d89d:	add    BYTE PTR [rax],al
  40d89f:	add    BYTE PTR [rdi+0x43],al
  40d8a2:	rex.XB cmp spl,BYTE PTR [r8]
  40d8a5:	sub    BYTE PTR [rdi+0x4e],al
  40d8a8:	push   rbp
  40d8a9:	sub    DWORD PTR [rax],esp
  40d8ab:	xor    al,0x2e
  40d8ad:	cmp    DWORD PTR [rsi],ebp
  40d8af:	xor    al,0x0
	...
  40d8bd:	add    BYTE PTR [rax],al
  40d8bf:	add    BYTE PTR [rdi+0x43],al
  40d8c2:	rex.XB cmp spl,BYTE PTR [r8]
  40d8c5:	sub    BYTE PTR [rdi+0x4e],al
  40d8c8:	push   rbp
  40d8c9:	sub    DWORD PTR [rax],esp
  40d8cb:	xor    al,0x2e
  40d8cd:	cmp    DWORD PTR [rsi],ebp
  40d8cf:	xor    al,0x0
	...
  40d8dd:	add    BYTE PTR [rax],al
  40d8df:	add    BYTE PTR [rdi+0x43],al
  40d8e2:	rex.XB cmp spl,BYTE PTR [r8]
  40d8e5:	sub    BYTE PTR [rdi+0x4e],al
  40d8e8:	push   rbp
  40d8e9:	sub    DWORD PTR [rax],esp
  40d8eb:	xor    al,0x2e
  40d8ed:	cmp    DWORD PTR [rsi],ebp
  40d8ef:	xor    al,0x0
	...
  40d8fd:	add    BYTE PTR [rax],al
  40d8ff:	add    BYTE PTR [rdi+0x43],al
  40d902:	rex.XB cmp spl,BYTE PTR [r8]
  40d905:	sub    BYTE PTR [rdi+0x4e],al
  40d908:	push   rbp
  40d909:	sub    DWORD PTR [rax],esp
  40d90b:	xor    al,0x2e
  40d90d:	cmp    DWORD PTR [rsi],ebp
  40d90f:	xor    al,0x0
	...
  40d91d:	add    BYTE PTR [rax],al
  40d91f:	add    BYTE PTR [rdi+0x43],al
  40d922:	rex.XB cmp spl,BYTE PTR [r8]
  40d925:	sub    BYTE PTR [rdi+0x4e],al
  40d928:	push   rbp
  40d929:	sub    DWORD PTR [rax],esp
  40d92b:	xor    al,0x2e
  40d92d:	cmp    DWORD PTR [rsi],ebp
  40d92f:	xor    al,0x0
	...
  40d93d:	add    BYTE PTR [rax],al
  40d93f:	add    BYTE PTR [rdi+0x43],al
  40d942:	rex.XB cmp spl,BYTE PTR [r8]
  40d945:	sub    BYTE PTR [rdi+0x4e],al
  40d948:	push   rbp
  40d949:	sub    DWORD PTR [rax],esp
  40d94b:	xor    al,0x2e
  40d94d:	cmp    DWORD PTR [rsi],ebp
  40d94f:	xor    al,0x0
	...

Disassembly of section .pdata:

000000000040e000 <.pdata>:
  40e000:	add    BYTE PTR [rax],dl
  40e002:	add    BYTE PTR [rax],al
  40e004:	add    DWORD PTR [rax],edx
  40e006:	add    BYTE PTR [rax],al
  40e008:	add    al,dh
  40e00a:	add    BYTE PTR [rax],al
  40e00c:	adc    BYTE PTR [rax],dl
  40e00e:	add    BYTE PTR [rax],al
  40e010:	push   rcx
  40e011:	adc    DWORD PTR [rax],eax
  40e013:	add    BYTE PTR [rax+rsi*8],al
  40e016:	add    BYTE PTR [rax],al
  40e018:	(bad)  
  40e019:	adc    DWORD PTR [rax],eax
  40e01b:	add    BYTE PTR [rsi+0xc000011],ch
  40e021:	lock add BYTE PTR [rax],al
  40e024:	mov    al,0x11
  40e026:	add    BYTE PTR [rax],al
  40e028:	(bad)  
  40e029:	adc    al,0x0
  40e02b:	add    BYTE PTR [rax+rsi*8],dl
  40e02e:	add    BYTE PTR [rax],al
  40e030:	rcl    BYTE PTR [rax+rax*1],1
  40e033:	add    dl,dh
  40e035:	adc    al,0x0
  40e037:	add    BYTE PTR [rax],ch
  40e039:	lock add BYTE PTR [rax],al
  40e03c:	add    BYTE PTR [rip+0x15220000],dl        # 0x1562e042
  40e042:	add    BYTE PTR [rax],al
  40e044:	rex.W
  40e045:	lock add BYTE PTR [rax],al
  40e048:	xor    BYTE PTR [rip+0x158f0000],dl        # 0x15cfe04e
  40e04e:	add    BYTE PTR [rax],al
  40e050:	push   0xffffffff900000f0
  40e055:	adc    eax,0x15c30000
  40e05a:	add    BYTE PTR [rax],al
  40e05c:	js     0x40e04e
  40e05e:	add    BYTE PTR [rax],al
  40e060:	rcl    BYTE PTR [rip+0x16a10000],1        # 0x16e1e066
  40e066:	add    BYTE PTR [rax],al
  40e068:	xor    al,0x0
  40e06b:	add    BYTE PTR [rax+0x6b000016],dh
  40e071:	(bad)  
  40e072:	add    BYTE PTR [rax],al
  40e074:	nop
  40e075:	lock add BYTE PTR [rax],al
  40e078:	jo     0x40e091
  40e07a:	add    BYTE PTR [rax],al
  40e07c:	cwde   
  40e07d:	(bad)  
  40e07e:	add    BYTE PTR [rax],al
  40e080:	pushf  
  40e081:	lock add BYTE PTR [rax],al
  40e084:	movabs al,ds:0xa400001a4c000017
  40e08d:	lock add BYTE PTR [rax],al
  40e090:	push   rax
  40e091:	sbb    al,BYTE PTR [rax]
  40e093:	add    BYTE PTR [rcx-0x47ffffe5],ch
  40e099:	lock add BYTE PTR [rax],al
  40e09c:	mov    al,0x1b
  40e09e:	add    BYTE PTR [rax],al
  40e0a0:	(bad)  
  40e0a1:	sbb    eax,DWORD PTR [rax]
  40e0a3:	add    al,bl
  40e0a5:	lock add BYTE PTR [rax],al
  40e0a8:	lock sbb eax,DWORD PTR [rax]
  40e0ab:	add    BYTE PTR [rbx-0x1fffffe4],cl
  40e0b1:	lock add BYTE PTR [rax],al
  40e0b4:	nop
  40e0b5:	sbb    al,0x0
  40e0b7:	add    bh,dl
  40e0b9:	sbb    al,0x0
  40e0bb:	add    ah,ch
  40e0bd:	lock add BYTE PTR [rax],al
  40e0c0:	loopne 0x40e0de
  40e0c2:	add    BYTE PTR [rax],al
  40e0c4:	stc    
  40e0c5:	(bad)  
  40e0c6:	add    BYTE PTR [rax],al
  40e0c8:	clc    
  40e0c9:	lock add BYTE PTR [rax],al
  40e0cc:	add    BYTE PTR [rdi],bl
  40e0ce:	add    BYTE PTR [rax],al
  40e0d0:	mov    bl,0x1f
  40e0d2:	add    BYTE PTR [rax],al
  40e0d4:	adc    cl,dh
  40e0d6:	add    BYTE PTR [rax],al
  40e0d8:	rcr    BYTE PTR [rdi],0x0
  40e0db:	add    BYTE PTR [rbx+0x22],ah
  40e0de:	add    BYTE PTR [rax],al
  40e0e0:	and    cl,dh
  40e0e2:	add    BYTE PTR [rax],al
  40e0e4:	jo     0x40e108
  40e0e6:	add    BYTE PTR [rax],al
  40e0e8:	xchg   esp,eax
  40e0e9:	and    al,BYTE PTR [rax]
  40e0eb:	add    BYTE PTR [rax],bh
  40e0ed:	icebp  
  40e0ee:	add    BYTE PTR [rax],al
  40e0f0:	movabs al,ds:0x3c00002303000022
  40e0f9:	icebp  
  40e0fa:	add    BYTE PTR [rax],al
  40e0fc:	adc    BYTE PTR [rbx],ah
  40e0fe:	add    BYTE PTR [rax],al
  40e100:	and    r8,QWORD PTR [r8]
  40e103:	add    BYTE PTR [rax-0xf],cl
  40e106:	add    BYTE PTR [rax],al
  40e108:	push   rax
  40e109:	and    eax,DWORD PTR [rax]
  40e10b:	add    BYTE PTR [rbp+0x54000023],dl
  40e111:	icebp  
  40e112:	add    BYTE PTR [rax],al
  40e114:	movabs al,ds:0x60000023be000023
  40e11d:	icebp  
  40e11e:	add    BYTE PTR [rax],al
  40e120:	shl    BYTE PTR [rbx],0x0
  40e123:	add    bh,dl
  40e125:	and    eax,DWORD PTR [rax]
  40e127:	add    BYTE PTR [rax-0xf],ch
  40e12a:	add    BYTE PTR [rax],al
  40e12c:	loopne 0x40e151
  40e12e:	add    BYTE PTR [rax],al
  40e130:	sbb    ah,BYTE PTR [rax+rax*1]
  40e133:	add    BYTE PTR [rax-0xf],dh
  40e136:	add    BYTE PTR [rax],al
  40e138:	and    BYTE PTR [rax+rax*1],ah
  40e13b:	add    BYTE PTR [rdi],ch
  40e13d:	and    al,0x0
  40e13f:	add    BYTE PTR [rax-0xf],bh
  40e142:	add    BYTE PTR [rax],al
  40e144:	xor    BYTE PTR [rax+rax*1],ah
  40e147:	add    BYTE PTR [rdi+0x24],dh
  40e14a:	add    BYTE PTR [rax],al
  40e14c:	jl     0x40e13f
  40e14e:	add    BYTE PTR [rax],al
  40e150:	and    BYTE PTR [rax+rax*1],0x0
  40e154:	retf   0x24
  40e157:	add    BYTE PTR [rax-0x2fffff0f],cl
  40e15d:	and    al,0x0
  40e15f:	add    BYTE PTR [rax+0x25],ah
  40e162:	add    BYTE PTR [rax],al
  40e164:	xchg   esp,eax
  40e165:	icebp  
  40e166:	add    BYTE PTR [rax],al
  40e168:	(bad)  
  40e169:	and    eax,0x256a0000
  40e16e:	add    BYTE PTR [rax],al
  40e170:	movabs al,ds:0x13000025700000f1
  40e179:	add    BYTE PTR es:[rax],al
  40e17c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40e17d:	icebp  
  40e17e:	add    BYTE PTR [rax],al
  40e180:	and    BYTE PTR [rsi],ah
  40e182:	add    BYTE PTR [rax],al
  40e184:	sub    ah,BYTE PTR [rsi]
  40e186:	add    BYTE PTR [rax],al
  40e188:	mov    eax,0x300000f1
  40e18d:	add    BYTE PTR es:[rax],al
  40e190:	lods   eax,DWORD PTR ds:[rsi]
  40e191:	add    BYTE PTR es:[rax],al
  40e194:	mov    esp,0xb00000f1
  40e199:	add    BYTE PTR es:[rax],al
  40e19c:	cmc    
  40e19d:	add    BYTE PTR es:[rax],al
  40e1a0:	enter  0xf1,0x0
  40e1a4:	add    BYTE PTR [rdi],ah
  40e1a6:	add    BYTE PTR [rax],al
  40e1a8:	push   rsp
  40e1a9:	(bad)  
  40e1aa:	add    BYTE PTR [rax],al
  40e1ac:	(bad)  
  40e1ad:	icebp  
  40e1ae:	add    BYTE PTR [rax],al
  40e1b0:	(bad)  
  40e1b1:	(bad)  
  40e1b2:	add    BYTE PTR [rax],al
  40e1b4:	lods   eax,DWORD PTR ds:[rsi]
  40e1b5:	(bad)  
  40e1b6:	add    BYTE PTR [rax],al
  40e1b8:	loopne 0x40e1ab
  40e1ba:	add    BYTE PTR [rax],al
  40e1bc:	mov    al,0x27
  40e1be:	add    BYTE PTR [rax],al
  40e1c0:	push   rcx
  40e1c1:	sub    BYTE PTR [rax],al
  40e1c3:	add    ah,ch
  40e1c5:	icebp  
  40e1c6:	add    BYTE PTR [rax],al
  40e1c8:	(bad)  
  40e1c9:	sub    BYTE PTR [rax],al
  40e1cb:	add    BYTE PTR [rdx-0x3ffffd8],cl
  40e1d1:	icebp  
  40e1d2:	add    BYTE PTR [rax],al
  40e1d4:	nop
  40e1d5:	sub    BYTE PTR [rax],al
  40e1d7:	add    BYTE PTR [rcx+0x29],dh
  40e1da:	add    BYTE PTR [rax],al
  40e1dc:	add    al,0xf2
  40e1de:	add    BYTE PTR [rax],al
  40e1e0:	sub    BYTE PTR [rcx],0x0
  40e1e3:	add    dh,cl
  40e1e5:	(bad)  
  40e1e6:	add    BYTE PTR [rax],al
  40e1e8:	adc    al,0xf2
  40e1ea:	add    BYTE PTR [rax],al
  40e1ec:	shl    BYTE PTR [rdi],1
  40e1ee:	add    BYTE PTR [rax],al
  40e1f0:	repnz (bad) 
  40e1f2:	add    BYTE PTR [rax],al
  40e1f4:	sub    al,0xf2
  40e1f6:	add    BYTE PTR [rax],al
  40e1f8:	add    BYTE PTR [rax],bh
  40e1fa:	add    BYTE PTR [rax],al
  40e1fc:	and    BYTE PTR [rax],bh
  40e1fe:	add    BYTE PTR [rax],al
  40e200:	xor    al,0xf2
  40e202:	add    BYTE PTR [rax],al
  40e204:	and    BYTE PTR [rax],bh
  40e206:	add    BYTE PTR [rax],al
  40e208:	cmp    BYTE PTR [rax],al
  40e20b:	add    BYTE PTR [rdx+rsi*8],bh
  40e20e:	add    BYTE PTR [rax],al
  40e210:	cmp    BYTE PTR [rax],al
  40e213:	add    bh,al
  40e215:	cmp    BYTE PTR [rax],al
  40e217:	add    BYTE PTR [rdx+rsi*8+0x0],al
  40e21b:	add    al,dl
  40e21d:	cmp    BYTE PTR [rax],al
  40e21f:	add    BYTE PTR [rax+0x50000039],bh
  40e225:	repnz add BYTE PTR [rax],al
  40e228:	sar    BYTE PTR [rcx],0x0
  40e22b:	add    cl,bh
  40e22d:	cmp    al,BYTE PTR [rax]
  40e22f:	add    BYTE PTR [rax-0xe],ah
  40e232:	add    BYTE PTR [rax],al
  40e234:	add    BYTE PTR [rbx],bh
  40e236:	add    BYTE PTR [rax],al
  40e238:	in     al,dx
  40e239:	cmp    eax,DWORD PTR [rax]
  40e23b:	add    BYTE PTR [rdx+rsi*8+0x0],ch
  40e23f:	add    al,dh
  40e241:	cmp    eax,DWORD PTR [rax]
  40e243:	add    dl,dh
  40e245:	cmp    al,0x0
  40e247:	add    BYTE PTR [rdx+rsi*8+0x0],bh
  40e24b:	add    BYTE PTR [rax],al
  40e24d:	cmp    eax,0x3dbb0000
  40e252:	add    BYTE PTR [rax],al
  40e254:	xchg   esp,eax
  40e255:	repnz add BYTE PTR [rax],al
  40e258:	sar    BYTE PTR [rip+0x3e6c0000],0x0        # 0x3eace25f
  40e25f:	add    BYTE PTR [rax+0x700000f2],ah
  40e265:	add    BYTE PTR ds:[rax],al
  40e268:	push   0xffffffffb0000044
  40e26d:	repnz add BYTE PTR [rax],al
  40e270:	jo     0x40e2b6
  40e272:	add    BYTE PTR [rax],al
  40e274:	test   al,0x44
  40e276:	add    BYTE PTR [rax],al
  40e278:	enter  0xf2,0x0
  40e27c:	mov    al,0x44
  40e27e:	add    BYTE PTR [rax],al
  40e280:	push   rdi
  40e281:	add    BYTE PTR [r8],r8b
  40e284:	shl    dl,1
  40e286:	add    BYTE PTR [rax],al
  40e288:	(bad)  
  40e289:	add    BYTE PTR [r8],r8b
  40e28c:	sub    al,0x46
  40e28e:	add    BYTE PTR [rax],al
  40e290:	loopne 0x40e284
  40e292:	add    BYTE PTR [rax],al
  40e294:	xor    BYTE PTR [rsi+0x0],al
  40e297:	add    ah,dh
  40e299:	rex.RX add BYTE PTR [rax],r8b
  40e29c:	in     al,dx
  40e29d:	repnz add BYTE PTR [rax],al
  40e2a0:	add    BYTE PTR [rdi+0x0],al
  40e2a3:	add    BYTE PTR [rdi+rax*2],dh
  40e2a6:	add    BYTE PTR [rax],al
  40e2a8:	clc    
  40e2a9:	repnz add BYTE PTR [rax],al
  40e2ac:	rex
  40e2ad:	rex.RXB add BYTE PTR [r8],r8b
  40e2b0:	mov    bh,0x47
  40e2b2:	add    BYTE PTR [rax],al
  40e2b4:	add    bl,dh
  40e2b6:	add    BYTE PTR [rax],al
  40e2b8:	rol    BYTE PTR [rdi+0x0],0x0
  40e2bc:	rex.RXB
  40e2bd:	rex.W add BYTE PTR [rax],al
  40e2c0:	or     al,0xf3
  40e2c2:	add    BYTE PTR [rax],al
  40e2c4:	push   rax
  40e2c5:	rex.W add BYTE PTR [rax],al
  40e2c8:	(bad)  
  40e2c9:	rex.WB add BYTE PTR [r8],al
  40e2cc:	sbb    bl,dh
  40e2ce:	add    BYTE PTR [rax],al
  40e2d0:	(bad)  
  40e2d1:	rex.WB add BYTE PTR [r8],al
  40e2d4:	mov    ecx,0x24000049
  40e2d9:	repz add BYTE PTR [rax],al
  40e2dc:	ror    BYTE PTR [rcx+0x0],0x0
  40e2e0:	sbb    DWORD PTR [rdx+0x0],ecx
  40e2e3:	add    BYTE PTR [rax],dh
  40e2e5:	repz add BYTE PTR [rax],al
  40e2e8:	and    BYTE PTR [rdx+0x0],cl
  40e2eb:	add    BYTE PTR [rdi+0x4a],al
  40e2ee:	add    BYTE PTR [rax],al
  40e2f0:	cmp    al,0xf3
  40e2f2:	add    BYTE PTR [rax],al
  40e2f4:	push   rax
  40e2f5:	rex.WX add BYTE PTR [rax],al
  40e2f8:	repz rex.WX add BYTE PTR [rax],al
  40e2fc:	rex
  40e2fd:	repz add BYTE PTR [rax],al
  40e300:	add    BYTE PTR [rbx+0x0],cl
  40e303:	add    BYTE PTR [rbx+rcx*2],cl
  40e306:	add    BYTE PTR [rax],al
  40e308:	rex.WR
  40e309:	repz add BYTE PTR [rax],al
  40e30c:	adc    BYTE PTR [rbx+0x0],cl
  40e30f:	add    BYTE PTR [rbp+0x5000004b],al
  40e315:	repz add BYTE PTR [rax],al
  40e318:	nop
  40e319:	rex.WXB add BYTE PTR [r8],al
  40e31c:	cmp    dl,BYTE PTR [rdx+0x0]
  40e31f:	add    BYTE PTR [rax-0xd],ah
  40e322:	add    BYTE PTR [rax],al
  40e324:	rex push rdx
  40e326:	add    BYTE PTR [rax],al
  40e328:	jbe    0x40e37c
  40e32a:	add    BYTE PTR [rax],al
  40e32c:	js     0x40e321
  40e32e:	add    BYTE PTR [rax],al
  40e330:	adc    BYTE PTR [rdx+0x0],0x0
  40e334:	lahf   
  40e335:	push   rdx
  40e336:	add    BYTE PTR [rax],al
  40e338:	jl     0x40e32d
  40e33a:	add    BYTE PTR [rax],al
  40e33c:	movabs al,ds:0x8000005701000052
  40e345:	repz add BYTE PTR [rax],al
  40e348:	adc    BYTE PTR [rdi+0x0],dl
  40e34b:	add    BYTE PTR [rdi+rdx*2],bl
  40e34e:	add    BYTE PTR [rax],al
  40e350:	cwde   
  40e351:	repz add BYTE PTR [rax],al
  40e354:	and    BYTE PTR [rdi+0x0],dl
  40e357:	add    BYTE PTR [rax+0x57],al
  40e35a:	add    BYTE PTR [rax],al
  40e35c:	pushf  
  40e35d:	repz add BYTE PTR [rax],al
  40e360:	rex push rdi
  40e362:	add    BYTE PTR [rax],al
  40e364:	rex.W push rdi
  40e366:	add    BYTE PTR [rax],al
  40e368:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40e369:	repz add BYTE PTR [rax],al
  40e36c:	push   rax
  40e36d:	push   rdi
  40e36e:	add    BYTE PTR [rax],al
  40e370:	movabs eax,ds:0xb00000f3a8000057
  40e379:	push   rdi
  40e37a:	add    BYTE PTR [rax],al
  40e37c:	loopne 0x40e3d5
  40e37e:	add    BYTE PTR [rax],al
  40e380:	mov    ah,0xf3
  40e382:	add    BYTE PTR [rax],al
  40e384:	loopne 0x40e3dd
  40e386:	add    BYTE PTR [rax],al
  40e388:	sub    DWORD PTR [rax+0x0],ebx
  40e38b:	add    BYTE PTR [rbx+rsi*8+0x58300000],bh
  40e392:	add    BYTE PTR [rax],al
  40e394:	jae    0x40e3ee
  40e396:	add    BYTE PTR [rax],al
  40e398:	enter  0xf3,0x0
  40e39c:	sbb    BYTE PTR [rax+0x0],0x0
  40e3a0:	scas   al,BYTE PTR es:[rdi]
  40e3a1:	pop    rax
  40e3a2:	add    BYTE PTR [rax],al
  40e3a4:	shl    bl,1
  40e3a6:	add    BYTE PTR [rax],al
  40e3a8:	mov    al,0x58
  40e3aa:	add    BYTE PTR [rax],al
  40e3ac:	rcr    BYTE PTR [rdx+0x0],0x0
  40e3b0:	fdivr  st(3),st
  40e3b2:	add    BYTE PTR [rax],al
  40e3b4:	rcr    BYTE PTR [rdx+0x0],0x0
  40e3b8:	repnz pop rdx
  40e3ba:	add    BYTE PTR [rax],al
  40e3bc:	lock xrelease add BYTE PTR [rax],al
  40e3c0:	add    BYTE PTR [rbx+0x0],bl
  40e3c3:	add    BYTE PTR [rbp+0x5b],cl
  40e3c6:	add    BYTE PTR [rax],al
  40e3c8:	cld    
  40e3c9:	repz add BYTE PTR [rax],al
  40e3cc:	push   rax
  40e3cd:	pop    rbx
  40e3ce:	add    BYTE PTR [rax],al
  40e3d0:	mov    edx,0x800005b
  40e3d5:	hlt    
  40e3d6:	add    BYTE PTR [rax],al
  40e3d8:	rcr    BYTE PTR [rbx+0x0],0x0
  40e3dc:	sub    al,0x5c
  40e3de:	add    BYTE PTR [rax],al
  40e3e0:	sbb    ah,dh
  40e3e2:	add    BYTE PTR [rax],al
  40e3e4:	xor    BYTE PTR [rax+rax*1+0x0],bl
  40e3e8:	loope  0x40e446
  40e3ea:	add    BYTE PTR [rax],al
  40e3ec:	sub    ah,dh
  40e3ee:	add    BYTE PTR [rax],al
  40e3f0:	lock pop rsp
  40e3f2:	add    BYTE PTR [rax],al
  40e3f4:	mov    edi,0x3800005d
  40e3f9:	hlt    
  40e3fa:	add    BYTE PTR [rax],al
  40e3fc:	rcr    BYTE PTR [rbp+0x0],0x0
  40e400:	addr32 pop rsi
  40e402:	add    BYTE PTR [rax],al
  40e404:	rex.WR hlt 
  40e406:	add    BYTE PTR [rax],al
  40e408:	jo     0x40e468
  40e40a:	add    BYTE PTR [rax],al
  40e40c:	mov    DWORD PTR [rsi+0x0],ebx
  40e40f:	add    BYTE PTR [rsp+rsi*8+0x0],dl
  40e413:	add    BYTE PTR [rax-0x3affffa2],dl
  40e419:	pop    rsi
  40e41a:	add    BYTE PTR [rax],al
  40e41c:	pop    rsp
  40e41d:	hlt    
  40e41e:	add    BYTE PTR [rax],al
  40e420:	rcr    BYTE PTR [rsi+0x0],1
  40e423:	add    BYTE PTR [rip+0x6400005f],ah        # 0x6440e488
  40e429:	hlt    
  40e42a:	add    BYTE PTR [rax],al
  40e42c:	xor    BYTE PTR [rdi+0x0],bl
  40e42f:	add    BYTE PTR [rdi+rbx*2+0x0],cl
  40e433:	add    BYTE PTR [rax-0xc],dh
  40e436:	add    BYTE PTR [rax],al
  40e438:	push   rax
  40e439:	pop    rdi
  40e43a:	add    BYTE PTR [rax],al
  40e43c:	pop    rdx
  40e43d:	pop    rdi
  40e43e:	add    BYTE PTR [rax],al
  40e440:	je     0x40e436
  40e442:	add    BYTE PTR [rax],al
  40e444:	(bad)  
  40e445:	pop    rdi
  40e446:	add    BYTE PTR [rax],al
  40e448:	movsxd ebx,DWORD PTR [rdi+0x0]
  40e44b:	add    BYTE PTR [rax-0xc],bh
  40e44e:	add    BYTE PTR [rax],al
  40e450:	jo     0x40e4b1
  40e452:	add    BYTE PTR [rax],al
  40e454:	rex.RX (bad) 
  40e456:	add    BYTE PTR [rax],al
  40e458:	jl     0x40e44e
  40e45a:	add    BYTE PTR [rax],al
  40e45c:	push   rax
  40e45d:	(bad)  
  40e45e:	add    BYTE PTR [rax],al
  40e460:	rex.WXB (bad) 
  40e462:	add    BYTE PTR [rax],al
  40e464:	mov    esp,?
  40e466:	add    BYTE PTR [rax],al
  40e468:	push   rax
  40e469:	(bad)  
  40e46a:	add    BYTE PTR [rax],al
  40e46c:	jg     0x40e4cf
  40e46e:	add    BYTE PTR [rax],al
  40e470:	pushf  
  40e471:	hlt    
  40e472:	add    BYTE PTR [rax],al
  40e474:	and    BYTE PTR [rcx+0x0],0x0
  40e478:	jmp    0xffffffffa440e4de
  40e47d:	hlt    
  40e47e:	add    BYTE PTR [rax],al
  40e480:	lock (bad) 
  40e482:	add    BYTE PTR [rax],al
  40e484:	repz (bad) 
  40e486:	add    BYTE PTR [rax],al
  40e488:	mov    al,0xf4
  40e48a:	add    BYTE PTR [rax],al
  40e48c:	add    BYTE PTR [rdx+0x0],ah
  40e48f:	add    BYTE PTR [rcx+0x62],al
  40e492:	add    BYTE PTR [rax],al
  40e494:	mov    ah,0xf4
  40e496:	add    BYTE PTR [rax],al
  40e498:	push   rax
  40e499:	(bad)  
  40e49a:	add    BYTE PTR [rax],al
  40e49c:	pop    rsp
  40e49d:	(bad)  
  40e49e:	add    BYTE PTR [rax],al
  40e4a0:	mov    esp,0x600000f4
  40e4a5:	(bad)  
  40e4a6:	add    BYTE PTR [rax],al
  40e4a8:	pop    rsp
  40e4a9:	movsxd eax,DWORD PTR [rax]
  40e4ab:	add    al,al
  40e4ad:	hlt    
  40e4ae:	add    BYTE PTR [rax],al
  40e4b0:	(bad)  
  40e4b1:	movsxd eax,DWORD PTR [rax]
  40e4b3:	add    BYTE PTR [rbx+0x63],ah
  40e4b6:	add    BYTE PTR [rax],al
  40e4b8:	fdiv   st,st(4)
  40e4ba:	add    BYTE PTR [rax],al
  40e4bc:	jo     0x40e521
  40e4be:	add    BYTE PTR [rax],al
  40e4c0:	je     0x40e525
  40e4c2:	add    BYTE PTR [rax],al
  40e4c4:	fdivr  st(4),st
  40e4c6:	add    BYTE PTR [rax],al
  40e4c8:	and    BYTE PTR [rbx+0x0],0x0
  40e4cc:	test   BYTE PTR [rbx+0x0],ah
  40e4cf:	add    al,ah
  40e4d1:	hlt    
  40e4d2:	add    BYTE PTR [rax],al
  40e4d4:	nop
  40e4d5:	movsxd eax,DWORD PTR [rax]
  40e4d7:	add    cl,dh
  40e4d9:	movsxd eax,DWORD PTR [rax]
  40e4db:	add    ah,ah
  40e4dd:	hlt    
  40e4de:	add    BYTE PTR [rax],al
  40e4e0:	add    BYTE PTR [rax+rax*1+0x0],ah
  40e4e4:	(bad)  
  40e4e5:	add    BYTE PTR gs:[rax],al
  40e4e8:	lock hlt 
  40e4ea:	add    BYTE PTR [rax],al
  40e4ec:	jo     0x40e553
  40e4ee:	add    BYTE PTR [rax],al
  40e4f0:	imul   ebp,DWORD PTR [rax+0x0],0xf50400
  40e4f7:	add    BYTE PTR [rax+0x68],dh
  40e4fa:	add    BYTE PTR [rax],al
  40e4fc:	(bad)  
  40e4fd:	push   0x0
  40e4ff:	add    BYTE PTR [rsi*8+0x6a200000],bl
  40e506:	add    BYTE PTR [rax],al
  40e508:	or     al,0x6b
  40e50a:	add    BYTE PTR [rax],al
  40e50c:	and    al,0xf5
  40e50e:	add    BYTE PTR [rax],al
  40e510:	adc    BYTE PTR [rbx+0x0],ch
  40e513:	add    al,cl
  40e515:	ins    BYTE PTR es:[rdi],dx
  40e516:	add    BYTE PTR [rax],al
  40e518:	xor    al,0xf5
  40e51a:	add    BYTE PTR [rax],al
  40e51c:	shr    BYTE PTR [rax+rax*1+0x0],1
  40e520:	cmp    eax,0x3c00006d
  40e525:	cmc    
  40e526:	add    BYTE PTR [rax],al
  40e528:	rex ins DWORD PTR es:[rdi],dx
  40e52a:	add    BYTE PTR [rax],al
  40e52c:	mov    edi,0x4c00006d
  40e531:	cmc    
  40e532:	add    BYTE PTR [rax],al
  40e534:	shr    BYTE PTR [rbp+0x0],0x0
  40e538:	pop    rdi
  40e539:	outs   dx,BYTE PTR ds:[rsi]
  40e53a:	add    BYTE PTR [rax],al
  40e53c:	pop    rax
  40e53d:	cmc    
  40e53e:	add    BYTE PTR [rax],al
  40e540:	(bad)  
  40e541:	outs   dx,BYTE PTR ds:[rsi]
  40e542:	add    BYTE PTR [rax],al
  40e544:	cmp    ch,BYTE PTR [rdi+0x0]
  40e547:	add    BYTE PTR [rax-0xb],ah
  40e54a:	add    BYTE PTR [rax],al
  40e54c:	rex outs dx,DWORD PTR ds:[rsi]
  40e54e:	add    BYTE PTR [rax],al
  40e550:	pop    rdi
  40e551:	outs   dx,DWORD PTR ds:[rsi]
  40e552:	add    BYTE PTR [rax],al
  40e554:	push   0x600000f5
  40e559:	outs   dx,DWORD PTR ds:[rsi]
  40e55a:	add    BYTE PTR [rax],al
  40e55c:	jb     0x40e5cd
  40e55e:	add    BYTE PTR [rax],al
  40e560:	ins    BYTE PTR es:[rdi],dx
  40e561:	cmc    
  40e562:	add    BYTE PTR [rax],al
  40e564:	sub    BYTE PTR [rdi+0x0],0x0
  40e568:	(bad)
  40e56b:	add    BYTE PTR [rax-0xb],dh
  40e56e:	add    BYTE PTR [rax],al
  40e570:	shr    BYTE PTR [rdi+0x0],1
  40e573:	add    BYTE PTR [rsi+0x70],ch
  40e576:	add    BYTE PTR [rax],al
  40e578:	je     0x40e56f
  40e57a:	add    BYTE PTR [rax],al
  40e57c:	jo     0x40e5ee
  40e57e:	add    BYTE PTR [rax],al
  40e580:	mov    bl,0x70
  40e582:	add    BYTE PTR [rax],al
  40e584:	xor    ch,0x0
  40e587:	add    al,al
  40e589:	jo     0x40e58b
  40e58b:	add    bl,bh
  40e58d:	jo     0x40e58f
  40e58f:	add    BYTE PTR [rbp+rsi*8+0x71000000],cl
  40e596:	add    BYTE PTR [rax],al
  40e598:	mov    ?,WORD PTR [rcx+0x0]
  40e59b:	add    BYTE PTR [rbp+rsi*8+0x71900000],dl
  40e5a2:	add    BYTE PTR [rax],al
  40e5a4:	enter  0x71,0x0
  40e5a8:	movabs al,ds:0x25000071d00000f5
  40e5b1:	jb     0x40e5b3
  40e5b3:	add    BYTE PTR [rbp+rsi*8+0x72300000],ch
  40e5ba:	add    BYTE PTR [rax],al
  40e5bc:	fidiv  WORD PTR [rdx+0x0]
  40e5bf:	add    BYTE PTR [rax+0x200000f5],bh
  40e5c5:	jae    0x40e5c7
  40e5c7:	add    BYTE PTR [rdi-0x37ffff8d],bh
  40e5cd:	cmc    
  40e5ce:	add    BYTE PTR [rax],al
  40e5d0:	shl    BYTE PTR [rbx+0x0],0x0
  40e5d4:	or     eax,0xd4000074
  40e5d9:	cmc    
  40e5da:	add    BYTE PTR [rax],al
  40e5dc:	adc    BYTE PTR [rax+rax*1+0x0],dh
  40e5e0:	pop    rbp
  40e5e1:	je     0x40e5e3
  40e5e3:	add    ah,bl
  40e5e5:	cmc    
  40e5e6:	add    BYTE PTR [rax],al
  40e5e8:	jo     0x40e660
  40e5ea:	add    BYTE PTR [rax],al
  40e5ec:	js     0x40e664
  40e5ee:	add    BYTE PTR [rax],al
  40e5f0:	in     al,0xf5
  40e5f2:	add    BYTE PTR [rax],al
  40e5f4:	xor    BYTE PTR [rsi+0x0],0x0
  40e5f8:	mov    esi,DWORD PTR [rsi+0x0]
  40e5fb:	add    al,ch
  40e5fd:	cmc    
  40e5fe:	add    BYTE PTR [rax],al
  40e600:	nop
  40e601:	ja     0x40e603
  40e603:	add    BYTE PTR [rbp-0x6e],cl
  40e606:	add    BYTE PTR [rax],al
  40e608:	shl    al,0x0
	...

Disassembly of section .xdata:

000000000040f000 <.xdata>:
  40f000:	add    DWORD PTR [rax],eax
  40f002:	add    BYTE PTR [rax],al
  40f004:	add    DWORD PTR [rcx+rax*1],eax
  40f007:	add    BYTE PTR [rdx+rax*2],al
  40f00a:	add    BYTE PTR [rax],al
  40f00c:	add    DWORD PTR [rcx+rax*1],eax
  40f00f:	add    BYTE PTR [rdx+riz*2],al
  40f012:	add    BYTE PTR [rax],al
  40f014:	add    DWORD PTR [rdi],ecx
  40f016:	or     BYTE PTR [rax],al
  40f018:	lgdt   [rbx]
  40f01b:	add    BYTE PTR [rax],cl
  40f01d:	xor    BYTE PTR [rdi],al
  40f01f:	(bad)  
  40f020:	(bad)  
  40f021:	jo     0x40f028
  40f023:	push   rax
  40f024:	add    al,0xc0
  40f026:	add    dl,al
  40f028:	or     DWORD PTR [rcx+rax*1],eax
  40f02b:	add    BYTE PTR [rdx+rax*2],al
  40f02e:	add    BYTE PTR [rax],al
  40f030:	(bad)  
  40f031:	jbe    0x40f033
  40f033:	add    BYTE PTR [rcx],al
  40f035:	add    BYTE PTR [rax],al
  40f037:	add    ah,dl
  40f039:	adc    al,0x0
  40f03b:	add    ah,ch
  40f03d:	adc    al,0x0
  40f03f:	add    BYTE PTR [rax],dl
  40f041:	imul   eax,DWORD PTR [rax],0x0
  40f044:	in     al,dx
  40f045:	adc    al,0x0
  40f047:	add    BYTE PTR [rcx],cl
  40f049:	add    al,0x1
  40f04b:	add    BYTE PTR [rdx+rax*2],al
  40f04e:	add    BYTE PTR [rax],al
  40f050:	(bad)  
  40f051:	jbe    0x40f053
  40f053:	add    BYTE PTR [rcx],al
  40f055:	add    BYTE PTR [rax],al
  40f057:	add    BYTE PTR [rdx*1+0x151c0000],al
  40f05e:	add    BYTE PTR [rax],al
  40f060:	adc    BYTE PTR [rbx+0x0],ch
  40f063:	add    BYTE PTR [rdx*1+0x8010000],bl
  40f06a:	add    eax,0x4420800
  40f06f:	xor    BYTE PTR [rbx],al
  40f071:	(bad)  
  40f072:	add    dh,BYTE PTR [rax+0x1]
  40f075:	push   rax
  40f076:	add    BYTE PTR [rax],al
  40f078:	add    DWORD PTR [rcx+rax*1],eax
  40f07b:	add    BYTE PTR [rdx+riz*2],al
  40f07e:	add    BYTE PTR [rax],al
  40f080:	add    DWORD PTR [rax],ecx
  40f082:	add    eax,0x4c20800
  40f087:	xor    BYTE PTR [rbx],al
  40f089:	(bad)  
  40f08a:	add    dh,BYTE PTR [rax+0x1]
  40f08d:	push   rax
  40f08e:	add    BYTE PTR [rax],al
  40f090:	add    DWORD PTR [rsi],eax
  40f092:	add    eax,DWORD PTR [rax]
  40f094:	(bad)  
  40f095:	rex.X add sil,BYTE PTR [rax]
  40f098:	add    DWORD PTR [rax+0x0],esp
  40f09b:	add    BYTE PTR [rcx],al
  40f09d:	add    al,0x1
  40f09f:	add    BYTE PTR [rdx+riz*2],al
  40f0a2:	add    BYTE PTR [rax],al
  40f0a4:	add    DWORD PTR [rip+0xffffffffd20d0507],ecx        # 0xffffffffd24df5b1
  40f0aa:	or     DWORD PTR [rbx],eax
  40f0ac:	(bad)  
  40f0ad:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b0f513
  40f0b3:	rol    BYTE PTR [rcx],0x50
  40f0b6:	add    BYTE PTR [rax],al
  40f0b8:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245f0c0
  40f0be:	add    DWORD PTR [rax],esi
  40f0c0:	add    DWORD PTR [rbx],edx
  40f0c2:	or     al,BYTE PTR [rax]
  40f0c4:	adc    eax,DWORD PTR [rcx]
  40f0c6:	adc    DWORD PTR [rax],eax
  40f0c8:	or     al,0x30
  40f0ca:	or     esp,DWORD PTR [rax+0xa]
  40f0cd:	jo     0x40f0d8
  40f0cf:	push   rax
  40f0d0:	or     al,al
  40f0d2:	(bad)  
  40f0d3:	rol    BYTE PTR [rax+riz*8],1
  40f0d6:	add    dh,al
  40f0d8:	add    DWORD PTR [rcx+rax*1],eax
  40f0db:	add    BYTE PTR [rdx+rax*2],al
  40f0de:	add    BYTE PTR [rax],al
  40f0e0:	add    DWORD PTR [rdi],eax
  40f0e2:	add    al,0x0
  40f0e4:	(bad)  
  40f0e5:	xor    al,BYTE PTR [rbx]
  40f0e7:	xor    BYTE PTR [rdx],al
  40f0e9:	(bad)  
  40f0ea:	add    DWORD PTR [rax+0x1],esi
  40f0ed:	(bad)  
  40f0ee:	add    eax,DWORD PTR [rax]
  40f0f0:	(bad)  
  40f0f1:	rex.X add sil,BYTE PTR [rax]
  40f0f4:	add    DWORD PTR [rax+0x0],esp
  40f0f7:	add    BYTE PTR [rcx],al
  40f0f9:	adc    BYTE PTR [rcx],cl
  40f0fb:	add    BYTE PTR [rax],dl
  40f0fd:	(bad)  
  40f0fe:	or     al,0x30
  40f100:	or     esp,DWORD PTR [rax+0xa]
  40f103:	jo     0x40f10e
  40f105:	push   rax
  40f106:	or     al,al
  40f108:	(bad)  
  40f109:	rol    BYTE PTR [rax+riz*8],1
  40f10c:	add    dh,al
  40f10e:	add    BYTE PTR [rax],al
  40f110:	add    DWORD PTR [rdx],ecx
  40f112:	(bad)  
  40f113:	add    BYTE PTR [rdx],cl
  40f115:	xor    al,BYTE PTR [rsi]
  40f117:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b0f57d
  40f11d:	push   rax
  40f11e:	add    al,al
  40f120:	add    DWORD PTR [rax],edx
  40f122:	or     DWORD PTR [rax],eax
  40f124:	adc    BYTE PTR [rdx+0x600b300c],al
  40f12a:	or     dh,BYTE PTR [rax+0x9]
  40f12d:	push   rax
  40f12e:	or     al,al
  40f130:	(bad)  
  40f131:	rol    BYTE PTR [rax+riz*8],1
  40f134:	add    dh,al
  40f136:	add    BYTE PTR [rax],al
  40f138:	add    DWORD PTR [rax],eax
  40f13a:	add    BYTE PTR [rax],al
  40f13c:	add    DWORD PTR [rdi],eax
  40f13e:	add    al,0x0
  40f140:	(bad)  
  40f141:	xor    al,BYTE PTR [rbx]
  40f143:	xor    BYTE PTR [rdx],al
  40f145:	(bad)  
  40f146:	add    DWORD PTR [rax+0x1],esi
  40f149:	(bad)  
  40f14a:	add    eax,DWORD PTR [rax]
  40f14c:	(bad)  
  40f14d:	rex.X add sil,BYTE PTR [rax]
  40f150:	add    DWORD PTR [rax+0x0],esp
  40f153:	add    BYTE PTR [rcx],al
  40f155:	(bad)  
  40f156:	add    eax,DWORD PTR [rax]
  40f158:	(bad)  
  40f159:	rex.X add sil,BYTE PTR [rax]
  40f15c:	add    DWORD PTR [rax+0x0],esp
  40f15f:	add    BYTE PTR [rcx],al
  40f161:	add    eax,0x32050002
  40f166:	add    DWORD PTR [rax],esi
  40f168:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245f170
  40f16e:	add    DWORD PTR [rax],esi
  40f170:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245f178
  40f176:	add    DWORD PTR [rax],esi
  40f178:	add    DWORD PTR [rax],eax
  40f17a:	add    BYTE PTR [rax],al
  40f17c:	add    DWORD PTR [rsi],eax
  40f17e:	add    eax,DWORD PTR [rax]
  40f180:	(bad)  
  40f181:	rex.X add sil,BYTE PTR [rax]
  40f184:	add    DWORD PTR [rax+0x0],esp
  40f187:	add    BYTE PTR [rcx],al
  40f189:	(bad)  
  40f18a:	add    al,0x0
  40f18c:	(bad)  
  40f18d:	xor    al,BYTE PTR [rbx]
  40f18f:	xor    BYTE PTR [rdx],al
  40f191:	(bad)  
  40f192:	add    DWORD PTR [rax+0x1],esi
  40f195:	(bad)  
  40f196:	add    al,0x0
  40f198:	(bad)  
  40f199:	xor    al,BYTE PTR [rbx]
  40f19b:	xor    BYTE PTR [rdx],al
  40f19d:	(bad)  
  40f19e:	add    DWORD PTR [rax+0x1],esi
  40f1a1:	add    BYTE PTR [rax],al
  40f1a3:	add    BYTE PTR [rcx],al
  40f1a5:	or     al,0x7
  40f1a7:	add    BYTE PTR [rdx+rax*2],cl
  40f1aa:	or     BYTE PTR [rax],dh
  40f1ac:	(bad)  
  40f1ad:	(bad)  
  40f1ae:	(bad)  
  40f1af:	jo     0x40f1b6
  40f1b1:	push   rax
  40f1b2:	add    al,0xc0
  40f1b4:	add    dl,al
  40f1b6:	add    BYTE PTR [rax],al
  40f1b8:	add    DWORD PTR [rax],eax
  40f1ba:	add    BYTE PTR [rax],al
  40f1bc:	add    DWORD PTR [rdi],eax
  40f1be:	add    al,0x0
  40f1c0:	(bad)  
  40f1c1:	xor    al,BYTE PTR [rbx]
  40f1c3:	xor    BYTE PTR [rdx],al
  40f1c5:	(bad)  
  40f1c6:	add    DWORD PTR [rax+0x1],esi
  40f1c9:	(bad)  
  40f1ca:	add    eax,DWORD PTR [rax]
  40f1cc:	(bad)  
  40f1cd:	rex.X add sil,BYTE PTR [rax]
  40f1d0:	add    DWORD PTR [rax+0x0],esp
  40f1d3:	add    BYTE PTR [rcx],al
  40f1d5:	(bad)  
  40f1d6:	add    al,0x0
  40f1d8:	(bad)  
  40f1d9:	xor    al,BYTE PTR [rbx]
  40f1db:	xor    BYTE PTR [rdx],al
  40f1dd:	(bad)  
  40f1de:	add    DWORD PTR [rax+0x1],esi
  40f1e1:	(bad)  
  40f1e2:	add    eax,DWORD PTR [rax]
  40f1e4:	(bad)  
  40f1e5:	rex.X add sil,BYTE PTR [rax]
  40f1e8:	add    DWORD PTR [rax+0x0],esp
  40f1eb:	add    BYTE PTR [rcx],al
  40f1ed:	or     BYTE PTR [rip+0x4420800],al        # 0x482f9f3
  40f1f3:	xor    BYTE PTR [rbx],al
  40f1f5:	(bad)  
  40f1f6:	add    dh,BYTE PTR [rax+0x1]
  40f1f9:	push   rax
  40f1fa:	add    BYTE PTR [rax],al
  40f1fc:	add    DWORD PTR [rcx+rax*1],eax
  40f1ff:	add    BYTE PTR [rdx+rax*2],al
  40f202:	add    BYTE PTR [rax],al
  40f204:	add    DWORD PTR [rax],ecx
  40f206:	(bad)  
  40f207:	add    BYTE PTR [rax],cl
  40f209:	xor    BYTE PTR [rdi],al
  40f20b:	(bad)  
  40f20c:	(bad)  
  40f20d:	jo     0x40f214
  40f20f:	push   rax
  40f210:	add    al,0xc0
  40f212:	add    dl,al
  40f214:	add    DWORD PTR [rax],edx
  40f216:	or     DWORD PTR [rax],eax
  40f218:	adc    dl,ah
  40f21a:	or     al,0x30
  40f21c:	or     esp,DWORD PTR [rax+0xa]
  40f21f:	jo     0x40f22a
  40f221:	push   rax
  40f222:	or     al,al
  40f224:	(bad)  
  40f225:	rol    BYTE PTR [rax+riz*8],1
  40f228:	add    dh,al
  40f22a:	add    BYTE PTR [rax],al
  40f22c:	add    DWORD PTR [rcx+rax*1],eax
  40f22f:	add    BYTE PTR [rdx+riz*2],al
  40f232:	add    BYTE PTR [rax],al
  40f234:	add    DWORD PTR [rcx+rax*1],eax
  40f237:	add    BYTE PTR [rdx+riz*2],al
  40f23a:	add    BYTE PTR [rax],al
  40f23c:	add    DWORD PTR [rcx+rax*1],eax
  40f23f:	add    BYTE PTR [rdx+riz*2],al
  40f242:	add    BYTE PTR [rax],al
  40f244:	add    DWORD PTR [rsi],eax
  40f246:	add    eax,DWORD PTR [rax]
  40f248:	(bad)  
  40f249:	rex.X add sil,BYTE PTR [rax]
  40f24c:	add    DWORD PTR [rax+0x0],esp
  40f24f:	add    BYTE PTR [rcx],al
  40f251:	or     al,BYTE PTR [rsi]
  40f253:	add    BYTE PTR [rdx],cl
  40f255:	xor    al,BYTE PTR [rsi]
  40f257:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b0f6bd
  40f25d:	push   rax
  40f25e:	add    al,al
  40f260:	add    DWORD PTR [rdi],eax
  40f262:	add    al,0x0
  40f264:	(bad)  
  40f265:	xchg   edx,eax
  40f266:	add    esi,DWORD PTR [rax]
  40f268:	add    ah,BYTE PTR [rax+0x1]
  40f26b:	jo     0x40f26e
  40f26d:	or     BYTE PTR [rip+0x4620800],al        # 0x4a2fa73
  40f273:	xor    BYTE PTR [rbx],al
  40f275:	(bad)  
  40f276:	add    dh,BYTE PTR [rax+0x1]
  40f279:	push   rax
  40f27a:	add    BYTE PTR [rax],al
  40f27c:	add    DWORD PTR [rax],edx
  40f27e:	or     DWORD PTR [rax],eax
  40f280:	adc    BYTE PTR [rdx+0x600b300c],al
  40f286:	or     dh,BYTE PTR [rax+0x9]
  40f289:	push   rax
  40f28a:	or     al,al
  40f28c:	(bad)  
  40f28d:	rol    BYTE PTR [rax+riz*8],1
  40f290:	add    dh,al
  40f292:	add    BYTE PTR [rax],al
  40f294:	add    DWORD PTR [rdi],eax
  40f296:	add    al,0x0
  40f298:	(bad)  
  40f299:	xor    al,BYTE PTR [rbx]
  40f29b:	xor    BYTE PTR [rdx],al
  40f29d:	(bad)  
  40f29e:	add    DWORD PTR [rax+0x1],esi
  40f2a1:	or     BYTE PTR [rip+0x4420800],al        # 0x482faa7
  40f2a7:	xor    BYTE PTR [rbx],al
  40f2a9:	(bad)  
  40f2aa:	add    dh,BYTE PTR [rax+0x1]
  40f2ad:	push   rax
  40f2ae:	add    BYTE PTR [rax],al
  40f2b0:	add    DWORD PTR [rax],edx
  40f2b2:	or     DWORD PTR [rax],eax
  40f2b4:	adc    dl,ah
  40f2b6:	or     al,0x30
  40f2b8:	or     esp,DWORD PTR [rax+0xa]
  40f2bb:	jo     0x40f2c6
  40f2bd:	push   rax
  40f2be:	or     al,al
  40f2c0:	(bad)  
  40f2c1:	rol    BYTE PTR [rax+riz*8],1
  40f2c4:	add    dh,al
  40f2c6:	add    BYTE PTR [rax],al
  40f2c8:	add    DWORD PTR [rcx+rax*1],eax
  40f2cb:	add    BYTE PTR [rdx+rax*4],al
  40f2ce:	add    BYTE PTR [rax],al
  40f2d0:	add    DWORD PTR [rax],ecx
  40f2d2:	add    eax,0x4420800
  40f2d7:	xor    BYTE PTR [rbx],al
  40f2d9:	(bad)  
  40f2da:	add    dh,BYTE PTR [rax+0x1]
  40f2dd:	push   rax
  40f2de:	add    BYTE PTR [rax],al
  40f2e0:	add    DWORD PTR [rdi],eax
  40f2e2:	add    al,0x0
  40f2e4:	(bad)  
  40f2e5:	push   rdx
  40f2e6:	add    esi,DWORD PTR [rax]
  40f2e8:	add    ah,BYTE PTR [rax+0x1]
  40f2eb:	jo     0x40f2ee
  40f2ed:	(bad)  
  40f2ee:	add    eax,DWORD PTR [rax]
  40f2f0:	(bad)  
  40f2f1:	(bad)  
  40f2f3:	xor    BYTE PTR [rcx],al
  40f2f5:	(bad)  
  40f2f6:	add    BYTE PTR [rax],al
  40f2f8:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245f300
  40f2fe:	add    DWORD PTR [rax],esi
  40f300:	add    DWORD PTR [rdi],eax
  40f302:	add    al,0x0
  40f304:	(bad)  
  40f305:	push   rdx
  40f306:	add    esi,DWORD PTR [rax]
  40f308:	add    ah,BYTE PTR [rax+0x1]
  40f30b:	jo     0x40f30e
  40f30d:	(bad)  
  40f30e:	add    al,0x0
  40f310:	(bad)  
  40f311:	push   rdx
  40f312:	add    esi,DWORD PTR [rax]
  40f314:	add    ah,BYTE PTR [rax+0x1]
  40f317:	jo     0x40f31a
  40f319:	(bad)  
  40f31a:	add    al,0x0
  40f31c:	(bad)  
  40f31d:	push   rdx
  40f31e:	add    esi,DWORD PTR [rax]
  40f320:	add    ah,BYTE PTR [rax+0x1]
  40f323:	jo     0x40f326
  40f325:	(bad)  
  40f326:	add    eax,DWORD PTR [rax]
  40f328:	(bad)  
  40f329:	rex.X add sil,BYTE PTR [rax]
  40f32c:	add    DWORD PTR [rax+0x0],esp
  40f32f:	add    BYTE PTR [rcx],al
  40f331:	(bad)  
  40f332:	add    eax,DWORD PTR [rax]
  40f334:	(bad)  
  40f335:	rex.X add sil,BYTE PTR [rax]
  40f338:	add    DWORD PTR [rax+0x0],esp
  40f33b:	add    BYTE PTR [rcx],al
  40f33d:	add    BYTE PTR [rax],al
  40f33f:	add    BYTE PTR [rcx],al
  40f341:	(bad)  
  40f342:	add    eax,DWORD PTR [rax]
  40f344:	(bad)  
  40f345:	(bad)  
  40f347:	xor    BYTE PTR [rcx],al
  40f349:	(bad)  
  40f34a:	add    BYTE PTR [rax],al
  40f34c:	add    DWORD PTR [rax],eax
  40f34e:	add    BYTE PTR [rax],al
  40f350:	add    DWORD PTR [rdx],ecx
  40f352:	(bad)  
  40f353:	add    BYTE PTR [rdx],cl
  40f355:	xor    al,BYTE PTR [rsi]
  40f357:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b0f7bd
  40f35d:	push   rax
  40f35e:	add    al,al
  40f360:	add    DWORD PTR [rax],ebx
  40f362:	or     al,BYTE PTR [rbp-0x3deffce8]
  40f368:	or     al,0x30
  40f36a:	or     esp,DWORD PTR [rax+0xa]
  40f36d:	jo     0x40f378
  40f36f:	rol    BYTE PTR [rdi],0xd0
  40f372:	add    eax,0x1f003e0
  40f377:	push   rax
  40f378:	add    DWORD PTR [rax],eax
  40f37a:	add    BYTE PTR [rax],al
  40f37c:	add    DWORD PTR [rax],eax
  40f37e:	add    BYTE PTR [rax],al
  40f380:	add    DWORD PTR [rbx],edx
  40f382:	or     al,BYTE PTR [rax]
  40f384:	adc    eax,DWORD PTR [rcx]
  40f386:	push   rbp
  40f387:	add    BYTE PTR [rax+rsi*1],cl
  40f38a:	or     esp,DWORD PTR [rax+0xa]
  40f38d:	jo     0x40f398
  40f38f:	push   rax
  40f390:	or     al,al
  40f392:	(bad)  
  40f393:	rol    BYTE PTR [rax+riz*8],1
  40f396:	add    dh,al
  40f398:	add    DWORD PTR [rax],eax
  40f39a:	add    BYTE PTR [rax],al
  40f39c:	add    DWORD PTR [rcx+rax*1],eax
  40f39f:	add    BYTE PTR [rdx+riz*2],al
  40f3a2:	add    BYTE PTR [rax],al
  40f3a4:	add    DWORD PTR [rax],eax
  40f3a6:	add    BYTE PTR [rax],al
  40f3a8:	add    DWORD PTR [rdi],eax
  40f3aa:	add    al,0x0
  40f3ac:	(bad)  
  40f3ad:	push   rdx
  40f3ae:	add    esi,DWORD PTR [rax]
  40f3b0:	add    ah,BYTE PTR [rax+0x1]
  40f3b3:	jo     0x40f3b6
  40f3b5:	add    eax,0x32050002
  40f3ba:	add    DWORD PTR [rax],esi
  40f3bc:	add    DWORD PTR [rsi],eax
  40f3be:	add    eax,DWORD PTR [rax]
  40f3c0:	(bad)  
  40f3c1:	rex.X add sil,BYTE PTR [rax]
  40f3c4:	add    DWORD PTR [rax+0x0],esp
  40f3c7:	add    BYTE PTR [rcx],al
  40f3c9:	add    eax,0x32050002
  40f3ce:	add    DWORD PTR [rax],esi
  40f3d0:	add    DWORD PTR [rsi],eax
  40f3d2:	add    eax,DWORD PTR [rax]
  40f3d4:	(bad)  
  40f3d5:	rex.X add sil,BYTE PTR [rax]
  40f3d8:	add    DWORD PTR [rax+0x0],esp
  40f3db:	add    BYTE PTR [rcx],al
  40f3dd:	or     al,0x7
  40f3df:	add    BYTE PTR [rdx+riz*2],cl
  40f3e2:	or     BYTE PTR [rax],dh
  40f3e4:	(bad)  
  40f3e5:	(bad)  
  40f3e6:	(bad)  
  40f3e7:	jo     0x40f3ee
  40f3e9:	push   rax
  40f3ea:	add    al,0xc0
  40f3ec:	add    dl,al
  40f3ee:	add    BYTE PTR [rax],al
  40f3f0:	add    DWORD PTR [rdi],eax
  40f3f2:	add    al,0x0
  40f3f4:	(bad)  
  40f3f5:	xor    al,BYTE PTR [rbx]
  40f3f7:	xor    BYTE PTR [rdx],al
  40f3f9:	(bad)  
  40f3fa:	add    DWORD PTR [rax+0x1],esi
  40f3fd:	(bad)  
  40f3fe:	add    eax,DWORD PTR [rax]
  40f400:	(bad)  
  40f401:	(bad)  
  40f403:	xor    BYTE PTR [rcx],al
  40f405:	(bad)  
  40f406:	add    BYTE PTR [rax],al
  40f408:	add    DWORD PTR [rdx],ecx
  40f40a:	(bad)  
  40f40b:	add    BYTE PTR [rdx],cl
  40f40d:	push   rdx
  40f40e:	(bad)  
  40f40f:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b0f875
  40f415:	push   rax
  40f416:	add    al,al
  40f418:	add    DWORD PTR [rax],ecx
  40f41a:	add    eax,0x4620800
  40f41f:	xor    BYTE PTR [rbx],al
  40f421:	(bad)  
  40f422:	add    dh,BYTE PTR [rax+0x1]
  40f425:	push   rax
  40f426:	add    BYTE PTR [rax],al
  40f428:	add    DWORD PTR [rdx],ecx
  40f42a:	(bad)  
  40f42b:	add    BYTE PTR [rdx],cl
  40f42d:	push   rdx
  40f42e:	(bad)  
  40f42f:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b0f895
  40f435:	push   rax
  40f436:	add    al,al
  40f438:	add    DWORD PTR [rdi+rax*1],ecx
  40f43b:	add    BYTE PTR [rdx+riz*2],cl
  40f43e:	or     BYTE PTR [rax],dh
  40f440:	(bad)  
  40f441:	(bad)  
  40f442:	(bad)  
  40f443:	jo     0x40f44a
  40f445:	push   rax
  40f446:	add    al,0xc0
  40f448:	add    dl,al
  40f44a:	add    BYTE PTR [rax],al
  40f44c:	add    DWORD PTR [rip+0x52050002],eax        # 0x5245f454
  40f452:	add    DWORD PTR [rax],esi
  40f454:	add    DWORD PTR [rcx+rax*1],eax
  40f457:	add    BYTE PTR [rdx+rax*2],al
  40f45a:	add    BYTE PTR [rax],al
  40f45c:	add    DWORD PTR [rcx+rax*1],eax
  40f45f:	add    BYTE PTR [rdx+rax*2],al
  40f462:	add    BYTE PTR [rax],al
  40f464:	add    DWORD PTR [rsi],eax
  40f466:	add    eax,DWORD PTR [rax]
  40f468:	(bad)  
  40f469:	rex.X add sil,BYTE PTR [rax]
  40f46c:	add    DWORD PTR [rax+0x0],esp
  40f46f:	add    BYTE PTR [rcx],al
  40f471:	add    BYTE PTR [rax],al
  40f473:	add    BYTE PTR [rcx],al
  40f475:	add    BYTE PTR [rax],al
  40f477:	add    BYTE PTR [rcx],al
  40f479:	add    BYTE PTR [rax],al
  40f47b:	add    BYTE PTR [rcx],al
  40f47d:	or     al,BYTE PTR [rsi]
  40f47f:	add    BYTE PTR [rdx],cl
  40f481:	jb     0x40f489
  40f483:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b0f8e9
  40f489:	push   rax
  40f48a:	add    al,al
  40f48c:	add    DWORD PTR [rdx],ecx
  40f48e:	add    eax,0x6d20a05
  40f493:	add    eax,DWORD PTR [rbx]
  40f495:	xor    BYTE PTR [rdx],al
  40f497:	(bad)  
  40f498:	add    DWORD PTR [rax+0x0],edx
  40f49b:	add    BYTE PTR [rcx],al
  40f49d:	add    al,0x1
  40f49f:	add    BYTE PTR [rdx+rax*2],al
  40f4a2:	add    BYTE PTR [rax],al
  40f4a4:	add    DWORD PTR [rsi],eax
  40f4a6:	add    eax,DWORD PTR [rax]
  40f4a8:	(bad)  
  40f4a9:	rex.X add sil,BYTE PTR [rax]
  40f4ac:	add    DWORD PTR [rax+0x0],esp
  40f4af:	add    BYTE PTR [rcx],al
  40f4b1:	add    BYTE PTR [rax],al
  40f4b3:	add    BYTE PTR [rcx],al
  40f4b5:	add    al,0x1
  40f4b7:	add    BYTE PTR [rdx+riz*4],al
  40f4ba:	add    BYTE PTR [rax],al
  40f4bc:	add    DWORD PTR [rax],eax
  40f4be:	add    BYTE PTR [rax],al
  40f4c0:	add    DWORD PTR [rsi],edx
  40f4c2:	or     DWORD PTR [rax],eax
  40f4c4:	(bad)  
  40f4c5:	mov    BYTE PTR [rsi],al
  40f4c7:	add    BYTE PTR [rax],dl
  40f4c9:	js     0x40f4d0
  40f4cb:	add    BYTE PTR [rbx],cl
  40f4cd:	push   0xffffffffe2060004
  40f4d2:	add    dh,BYTE PTR [rax]
  40f4d4:	add    DWORD PTR [rax+0x0],esp
  40f4d7:	add    BYTE PTR [rcx],al
  40f4d9:	add    BYTE PTR [rax],al
  40f4db:	add    BYTE PTR [rcx],al
  40f4dd:	add    BYTE PTR [rax],al
  40f4df:	add    BYTE PTR [rcx],al
  40f4e1:	add    BYTE PTR [rax],al
  40f4e3:	add    BYTE PTR [rcx],al
  40f4e5:	(bad)  
  40f4e6:	add    eax,DWORD PTR [rax]
  40f4e8:	(bad)  
  40f4e9:	(bad)  
  40f4eb:	xor    BYTE PTR [rcx],al
  40f4ed:	(bad)  
  40f4ee:	add    BYTE PTR [rax],al
  40f4f0:	add    DWORD PTR [rdi+rax*1],ecx
  40f4f3:	add    BYTE PTR [rdx+riz*4],cl
  40f4f6:	or     BYTE PTR [rax],dh
  40f4f8:	(bad)  
  40f4f9:	(bad)  
  40f4fa:	(bad)  
  40f4fb:	jo     0x40f502
  40f4fd:	push   rax
  40f4fe:	add    al,0xc0
  40f500:	add    dl,al
  40f502:	add    BYTE PTR [rax],al
  40f504:	add    DWORD PTR [rcx],edx
  40f506:	or     DWORD PTR [rip+0x30db211],eax        # 0x34ea71d
  40f50c:	or     dh,BYTE PTR [rax]
  40f50e:	or     DWORD PTR [rax+0x8],esp
  40f511:	jo     0x40f51a
  40f513:	rol    BYTE PTR [rip+0x1e003d0],0x50        # 0x220f8ea
  40f51a:	add    BYTE PTR [rax],al
  40f51c:	add    DWORD PTR [rcx+rax*1],eax
  40f51f:	add    BYTE PTR [rdx+rax*2],al
  40f522:	add    BYTE PTR [rax],al
  40f524:	add    DWORD PTR [rdx],ecx
  40f526:	(bad)  
  40f527:	add    BYTE PTR [rdx],cl
  40f529:	xor    al,BYTE PTR [rsi]
  40f52b:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b0f991
  40f531:	push   rax
  40f532:	add    al,al
  40f534:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245f53c
  40f53a:	add    DWORD PTR [rax],esi
  40f53c:	add    DWORD PTR [rax],ecx
  40f53e:	add    eax,0x4420800
  40f543:	xor    BYTE PTR [rbx],al
  40f545:	(bad)  
  40f546:	add    dh,BYTE PTR [rax+0x1]
  40f549:	push   rax
  40f54a:	add    BYTE PTR [rax],al
  40f54c:	add    DWORD PTR [rdi],eax
  40f54e:	add    al,0x0
  40f550:	(bad)  
  40f551:	xor    al,BYTE PTR [rbx]
  40f553:	xor    BYTE PTR [rdx],al
  40f555:	(bad)  
  40f556:	add    DWORD PTR [rax+0x1],esi
  40f559:	add    eax,0x32050002
  40f55e:	add    DWORD PTR [rax],esi
  40f560:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245f568
  40f566:	add    DWORD PTR [rax],esi
  40f568:	add    DWORD PTR [rax],eax
  40f56a:	add    BYTE PTR [rax],al
  40f56c:	add    DWORD PTR [rax],eax
  40f56e:	add    BYTE PTR [rax],al
  40f570:	add    DWORD PTR [rax],eax
  40f572:	add    BYTE PTR [rax],al
  40f574:	add    DWORD PTR [rdi],eax
  40f576:	add    al,0x0
  40f578:	(bad)  
  40f579:	xor    al,BYTE PTR [rbx]
  40f57b:	xor    BYTE PTR [rdx],al
  40f57d:	(bad)  
  40f57e:	add    DWORD PTR [rax+0x1],esi
  40f581:	(bad)  
  40f582:	add    eax,DWORD PTR [rax]
  40f584:	(bad)  
  40f585:	rex.X add sil,BYTE PTR [rax]
  40f588:	add    DWORD PTR [rax+0x0],esp
  40f58b:	add    BYTE PTR [rcx],al
  40f58d:	add    eax,0x32050002
  40f592:	add    DWORD PTR [rax],esi
  40f594:	add    DWORD PTR [rdi],eax
  40f596:	add    al,0x0
  40f598:	(bad)  
  40f599:	xor    al,BYTE PTR [rbx]
  40f59b:	xor    BYTE PTR [rdx],al
  40f59d:	(bad)  
  40f59e:	add    DWORD PTR [rax+0x1],esi
  40f5a1:	(bad)  
  40f5a2:	add    eax,DWORD PTR [rax]
  40f5a4:	(bad)  
  40f5a5:	rex.X add sil,BYTE PTR [rax]
  40f5a8:	add    DWORD PTR [rax+0x0],esp
  40f5ab:	add    BYTE PTR [rcx],al
  40f5ad:	(bad)  
  40f5ae:	add    eax,DWORD PTR [rax]
  40f5b0:	(bad)  
  40f5b1:	rex.X add sil,BYTE PTR [rax]
  40f5b4:	add    DWORD PTR [rax+0x0],esp
  40f5b7:	add    BYTE PTR [rcx],al
  40f5b9:	or     BYTE PTR [rip+0x4420800],al        # 0x482fdbf
  40f5bf:	xor    BYTE PTR [rbx],al
  40f5c1:	(bad)  
  40f5c2:	add    dh,BYTE PTR [rax+0x1]
  40f5c5:	push   rax
  40f5c6:	add    BYTE PTR [rax],al
  40f5c8:	add    DWORD PTR [rcx],ecx
  40f5ca:	add    al,0x0
  40f5cc:	or     DWORD PTR [rcx],eax
  40f5ce:	sbb    eax,0x1300200
  40f5d3:	(bad)  
  40f5d4:	add    DWORD PTR [rip+0x52050002],eax        # 0x5245f5dc
  40f5da:	add    DWORD PTR [rax],esi
  40f5dc:	add    DWORD PTR [rip+0x52050002],eax        # 0x5245f5e4
  40f5e2:	add    DWORD PTR [rax],esi
  40f5e4:	add    DWORD PTR [rax],eax
  40f5e6:	add    BYTE PTR [rax],al
  40f5e8:	add    DWORD PTR [rax],eax
	...

Disassembly of section .bss:

0000000000410000 <.bss>:
	...

Disassembly of section .idata:

0000000000411000 <.idata>:
  411000:	cmp    al,0x10
  411002:	add    DWORD PTR [rax],eax
	...
  41100c:	test   BYTE PTR [rcx+rax*1],bl
  41100f:	add    BYTE PTR [rbx+rdx*1+0x1],ch
  411013:	add    BYTE PTR [rcx+rdx*1+0x1],al
	...
  41101f:	add    BYTE PTR [rbp+rbx*1+0x14740001],ah
  411026:	add    DWORD PTR [rax],eax
	...
  41103c:	pushf  
  41103d:	(bad)  
  41103e:	add    DWORD PTR [rax],eax
  411040:	add    BYTE PTR [rax],al
  411042:	add    BYTE PTR [rax],al
  411044:	stos   BYTE PTR es:[rdi],al
  411045:	(bad)  
  411046:	add    DWORD PTR [rax],eax
  411048:	add    BYTE PTR [rax],al
  41104a:	add    BYTE PTR [rax],al
  41104c:	mov    eax,0x116
  411051:	add    BYTE PTR [rax],al
  411053:	add    dl,cl
  411055:	(bad)  
  411056:	add    DWORD PTR [rax],eax
  411058:	add    BYTE PTR [rax],al
  41105a:	add    BYTE PTR [rax],al
  41105c:	loop   0x411074
  41105e:	add    DWORD PTR [rax],eax
  411060:	add    BYTE PTR [rax],al
  411062:	add    BYTE PTR [rax],al
  411064:	cli    
  411065:	(bad)  
  411066:	add    DWORD PTR [rax],eax
  411068:	add    BYTE PTR [rax],al
  41106a:	add    BYTE PTR [rax],al
  41106c:	(bad)  
  41106d:	(bad)  
  41106e:	add    DWORD PTR [rax],eax
  411070:	add    BYTE PTR [rax],al
  411072:	add    BYTE PTR [rax],al
  411074:	and    al,0x17
  411076:	add    DWORD PTR [rax],eax
  411078:	add    BYTE PTR [rax],al
  41107a:	add    BYTE PTR [rax],al
  41107c:	cmp    dl,BYTE PTR [rdi]
  41107e:	add    DWORD PTR [rax],eax
  411080:	add    BYTE PTR [rax],al
  411082:	add    BYTE PTR [rax],al
  411084:	push   rax
  411085:	(bad)  
  411086:	add    DWORD PTR [rax],eax
  411088:	add    BYTE PTR [rax],al
  41108a:	add    BYTE PTR [rax],al
  41108c:	(bad)  
  41108d:	(bad)  
  41108e:	add    DWORD PTR [rax],eax
  411090:	add    BYTE PTR [rax],al
  411092:	add    BYTE PTR [rax],al
  411094:	jb     0x4110ad
  411096:	add    DWORD PTR [rax],eax
  411098:	add    BYTE PTR [rax],al
  41109a:	add    BYTE PTR [rax],al
  41109c:	mov    WORD PTR [rdi],ss
  41109e:	add    DWORD PTR [rax],eax
  4110a0:	add    BYTE PTR [rax],al
  4110a2:	add    BYTE PTR [rax],al
  4110a4:	pushf  
  4110a5:	(bad)  
  4110a6:	add    DWORD PTR [rax],eax
  4110a8:	add    BYTE PTR [rax],al
  4110aa:	add    BYTE PTR [rax],al
  4110ac:	lods   al,BYTE PTR ds:[rsi]
  4110ad:	(bad)  
  4110ae:	add    DWORD PTR [rax],eax
  4110b0:	add    BYTE PTR [rax],al
  4110b2:	add    BYTE PTR [rax],al
  4110b4:	(bad)  
  4110b5:	(bad)  
  4110b6:	add    DWORD PTR [rax],eax
  4110b8:	add    BYTE PTR [rax],al
  4110ba:	add    BYTE PTR [rax],al
  4110bc:	(bad)  
  4110bd:	(bad)  
  4110be:	add    DWORD PTR [rax],eax
  4110c0:	add    BYTE PTR [rax],al
  4110c2:	add    BYTE PTR [rax],al
  4110c4:	repnz (bad) 
  4110c6:	add    DWORD PTR [rax],eax
  4110c8:	add    BYTE PTR [rax],al
  4110ca:	add    BYTE PTR [rax],al
  4110cc:	or     bl,BYTE PTR [rax]
  4110ce:	add    DWORD PTR [rax],eax
  4110d0:	add    BYTE PTR [rax],al
  4110d2:	add    BYTE PTR [rax],al
  4110d4:	and    al,0x18
  4110d6:	add    DWORD PTR [rax],eax
  4110d8:	add    BYTE PTR [rax],al
  4110da:	add    BYTE PTR [rax],al
  4110dc:	cmp    bl,BYTE PTR [rax]
  4110de:	add    DWORD PTR [rax],eax
  4110e0:	add    BYTE PTR [rax],al
  4110e2:	add    BYTE PTR [rax],al
  4110e4:	rex.WRX sbb BYTE PTR [rcx],r8b
  4110e7:	add    BYTE PTR [rax],al
  4110e9:	add    BYTE PTR [rax],al
  4110eb:	add    BYTE PTR [rax+0x18],ch
  4110ee:	add    DWORD PTR [rax],eax
  4110f0:	add    BYTE PTR [rax],al
  4110f2:	add    BYTE PTR [rax],al
  4110f4:	jl     0x41110e
  4110f6:	add    DWORD PTR [rax],eax
  4110f8:	add    BYTE PTR [rax],al
  4110fa:	add    BYTE PTR [rax],al
  4110fc:	xchg   esp,eax
  4110fd:	sbb    BYTE PTR [rcx],al
  4110ff:	add    BYTE PTR [rax],al
  411101:	add    BYTE PTR [rax],al
  411103:	add    BYTE PTR [rdx+0x118],dh
  411109:	add    BYTE PTR [rax],al
  41110b:	add    BYTE PTR [rdx+0x118],bh
  411111:	add    BYTE PTR [rax],al
  411113:	add    dh,cl
  411115:	sbb    BYTE PTR [rcx],al
  411117:	add    BYTE PTR [rax],al
  411119:	add    BYTE PTR [rax],al
  41111b:	add    ah,bl
  41111d:	sbb    BYTE PTR [rcx],al
  41111f:	add    BYTE PTR [rax],al
  411121:	add    BYTE PTR [rax],al
  411123:	add    al,bh
  411125:	sbb    BYTE PTR [rcx],al
  411127:	add    BYTE PTR [rax],al
  411129:	add    BYTE PTR [rax],al
  41112b:	add    BYTE PTR [rdx],cl
  41112d:	sbb    DWORD PTR [rcx],eax
  41112f:	add    BYTE PTR [rax],al
  411131:	add    BYTE PTR [rax],al
  411133:	add    BYTE PTR [rdx],bl
  411135:	sbb    DWORD PTR [rcx],eax
	...
  411143:	add    BYTE PTR [rax],dh
  411145:	sbb    DWORD PTR [rcx],eax
  411147:	add    BYTE PTR [rax],al
  411149:	add    BYTE PTR [rax],al
  41114b:	add    BYTE PTR [rax+0x19],cl
  41114e:	add    DWORD PTR [rax],eax
  411150:	add    BYTE PTR [rax],al
  411152:	add    BYTE PTR [rax],al
  411154:	push   rsi
  411155:	sbb    DWORD PTR [rcx],eax
  411157:	add    BYTE PTR [rax],al
  411159:	add    BYTE PTR [rax],al
  41115b:	add    BYTE PTR [rsi+0x19],ah
  41115e:	add    DWORD PTR [rax],eax
  411160:	add    BYTE PTR [rax],al
  411162:	add    BYTE PTR [rax],al
  411164:	jb     0x41117f
  411166:	add    DWORD PTR [rax],eax
  411168:	add    BYTE PTR [rax],al
  41116a:	add    BYTE PTR [rax],al
  41116c:	sbb    BYTE PTR [rcx],0x1
  41116f:	add    BYTE PTR [rax],al
  411171:	add    BYTE PTR [rax],al
  411173:	add    BYTE PTR [rax+0x119],dl
  411179:	add    BYTE PTR [rax],al
  41117b:	add    BYTE PTR [rdx+0x119],ah
  411181:	add    BYTE PTR [rax],al
  411183:	add    BYTE PTR [rsi+0x119],dh
  411189:	add    BYTE PTR [rax],al
  41118b:	add    al,al
  41118d:	sbb    DWORD PTR [rcx],eax
  41118f:	add    BYTE PTR [rax],al
  411191:	add    BYTE PTR [rax],al
  411193:	add    dh,cl
  411195:	sbb    DWORD PTR [rcx],eax
  411197:	add    BYTE PTR [rax],al
  411199:	add    BYTE PTR [rax],al
  41119b:	add    al,bl
  41119d:	sbb    DWORD PTR [rcx],eax
  41119f:	add    BYTE PTR [rax],al
  4111a1:	add    BYTE PTR [rax],al
  4111a3:	add    dl,ah
  4111a5:	sbb    DWORD PTR [rcx],eax
  4111a7:	add    BYTE PTR [rax],al
  4111a9:	add    BYTE PTR [rax],al
  4111ab:	add    dl,ch
  4111ad:	sbb    DWORD PTR [rcx],eax
  4111af:	add    BYTE PTR [rax],al
  4111b1:	add    BYTE PTR [rax],al
  4111b3:	add    ah,dh
  4111b5:	sbb    DWORD PTR [rcx],eax
  4111b7:	add    BYTE PTR [rax],al
  4111b9:	add    BYTE PTR [rax],al
  4111bb:	add    dh,bh
  4111bd:	sbb    DWORD PTR [rcx],eax
  4111bf:	add    BYTE PTR [rax],al
  4111c1:	add    BYTE PTR [rax],al
  4111c3:	add    BYTE PTR [rax],dl
  4111c5:	sbb    al,BYTE PTR [rcx]
  4111c7:	add    BYTE PTR [rax],al
  4111c9:	add    BYTE PTR [rax],al
  4111cb:	add    BYTE PTR [rdx+rbx*1],bl
  4111ce:	add    DWORD PTR [rax],eax
  4111d0:	add    BYTE PTR [rax],al
  4111d2:	add    BYTE PTR [rax],al
  4111d4:	and    al,0x1a
  4111d6:	add    DWORD PTR [rax],eax
  4111d8:	add    BYTE PTR [rax],al
  4111da:	add    BYTE PTR [rax],al
  4111dc:	sbb    al,BYTE PTR cs:[rcx]
  4111df:	add    BYTE PTR [rax],al
  4111e1:	add    BYTE PTR [rax],al
  4111e3:	add    BYTE PTR [rsi],dh
  4111e5:	sbb    al,BYTE PTR [rcx]
  4111e7:	add    BYTE PTR [rax],al
  4111e9:	add    BYTE PTR [rax],al
  4111eb:	add    BYTE PTR [rsi],bh
  4111ed:	sbb    al,BYTE PTR [rcx]
  4111ef:	add    BYTE PTR [rax],al
  4111f1:	add    BYTE PTR [rax],al
  4111f3:	add    BYTE PTR [rsi+0x1a],al
  4111f6:	add    DWORD PTR [rax],eax
  4111f8:	add    BYTE PTR [rax],al
  4111fa:	add    BYTE PTR [rax],al
  4111fc:	push   rax
  4111fd:	sbb    al,BYTE PTR [rcx]
  4111ff:	add    BYTE PTR [rax],al
  411201:	add    BYTE PTR [rax],al
  411203:	add    BYTE PTR [rax+0x1a],bl
  411206:	add    DWORD PTR [rax],eax
  411208:	add    BYTE PTR [rax],al
  41120a:	add    BYTE PTR [rax],al
  41120c:	(bad)  
  41120d:	sbb    al,BYTE PTR [rcx]
  41120f:	add    BYTE PTR [rax],al
  411211:	add    BYTE PTR [rax],al
  411213:	add    BYTE PTR [rdx+0x1a],ch
  411216:	add    DWORD PTR [rax],eax
  411218:	add    BYTE PTR [rax],al
  41121a:	add    BYTE PTR [rax],al
  41121c:	je     0x411238
  41121e:	add    DWORD PTR [rax],eax
  411220:	add    BYTE PTR [rax],al
  411222:	add    BYTE PTR [rax],al
  411224:	jle    0x411240
  411226:	add    DWORD PTR [rax],eax
  411228:	add    BYTE PTR [rax],al
  41122a:	add    BYTE PTR [rax],al
  41122c:	xchg   BYTE PTR [rdx],bl
  41122e:	add    DWORD PTR [rax],eax
  411230:	add    BYTE PTR [rax],al
  411232:	add    BYTE PTR [rax],al
  411234:	nop
  411235:	sbb    al,BYTE PTR [rcx]
  411237:	add    BYTE PTR [rax],al
  411239:	add    BYTE PTR [rax],al
  41123b:	add    BYTE PTR [rax+0x11a],bl
  411241:	add    BYTE PTR [rax],al
  411243:	add    BYTE PTR [rax+0x11a],ah
  411249:	add    BYTE PTR [rax],al
  41124b:	add    BYTE PTR [rax+0x11a],ch
  411251:	add    BYTE PTR [rax],al
  411253:	add    BYTE PTR [rax+0x11a],dh
  411259:	add    BYTE PTR [rax],al
  41125b:	add    BYTE PTR [rax+0x11a],bh
  411261:	add    BYTE PTR [rax],al
  411263:	add    dl,al
  411265:	sbb    al,BYTE PTR [rcx]
  411267:	add    BYTE PTR [rax],al
  411269:	add    BYTE PTR [rax],al
  41126b:	add    ah,cl
  41126d:	sbb    al,BYTE PTR [rcx]
  41126f:	add    BYTE PTR [rax],al
  411271:	add    BYTE PTR [rax],al
  411273:	add    dh,dl
  411275:	sbb    al,BYTE PTR [rcx]
  411277:	add    BYTE PTR [rax],al
  411279:	add    BYTE PTR [rax],al
  41127b:	add    al,ah
  41127d:	sbb    al,BYTE PTR [rcx]
  41127f:	add    BYTE PTR [rax],al
  411281:	add    BYTE PTR [rax],al
  411283:	add    dl,ch
  411285:	sbb    al,BYTE PTR [rcx]
  411287:	add    BYTE PTR [rax],al
  411289:	add    BYTE PTR [rax],al
  41128b:	add    ah,dh
  41128d:	sbb    al,BYTE PTR [rcx]
  41128f:	add    BYTE PTR [rax],al
  411291:	add    BYTE PTR [rax],al
  411293:	add    dh,bh
  411295:	sbb    al,BYTE PTR [rcx]
  411297:	add    BYTE PTR [rax],al
  411299:	add    BYTE PTR [rax],al
  41129b:	add    BYTE PTR [rsi],al
  41129d:	sbb    eax,DWORD PTR [rcx]
  41129f:	add    BYTE PTR [rax],al
  4112a1:	add    BYTE PTR [rax],al
  4112a3:	add    BYTE PTR [rsi],cl
  4112a5:	sbb    eax,DWORD PTR [rcx]
  4112a7:	add    BYTE PTR [rax],al
  4112a9:	add    BYTE PTR [rax],al
  4112ab:	add    BYTE PTR [rax],bl
  4112ad:	sbb    eax,DWORD PTR [rcx]
  4112af:	add    BYTE PTR [rax],al
  4112b1:	add    BYTE PTR [rax],al
  4112b3:	add    BYTE PTR [rdx],ah
  4112b5:	sbb    eax,DWORD PTR [rcx]
  4112b7:	add    BYTE PTR [rax],al
  4112b9:	add    BYTE PTR [rax],al
  4112bb:	add    BYTE PTR [rsi],ch
  4112bd:	sbb    eax,DWORD PTR [rcx]
  4112bf:	add    BYTE PTR [rax],al
  4112c1:	add    BYTE PTR [rax],al
  4112c3:	add    BYTE PTR [rax],bh
  4112c5:	sbb    eax,DWORD PTR [rcx]
  4112c7:	add    BYTE PTR [rax],al
  4112c9:	add    BYTE PTR [rax],al
  4112cb:	add    BYTE PTR [rdx+0x1b],al
  4112ce:	add    DWORD PTR [rax],eax
  4112d0:	add    BYTE PTR [rax],al
  4112d2:	add    BYTE PTR [rax],al
  4112d4:	sbb    r8,QWORD PTR [rcx]
  4112d7:	add    BYTE PTR [rax],al
  4112d9:	add    BYTE PTR [rax],al
  4112db:	add    BYTE PTR [rsi+0x1b],dl
  4112de:	add    DWORD PTR [rax],eax
  4112e0:	add    BYTE PTR [rax],al
  4112e2:	add    BYTE PTR [rax],al
  4112e4:	(bad)  
  4112e5:	sbb    eax,DWORD PTR [rcx]
  4112e7:	add    BYTE PTR [rax],al
  4112e9:	add    BYTE PTR [rax],al
  4112eb:	add    BYTE PTR [rdx+0x1b],ch
  4112ee:	add    DWORD PTR [rax],eax
  4112f0:	add    BYTE PTR [rax],al
  4112f2:	add    BYTE PTR [rax],al
  4112f4:	jbe    0x411311
  4112f6:	add    DWORD PTR [rax],eax
  4112f8:	add    BYTE PTR [rax],al
  4112fa:	add    BYTE PTR [rax],al
  4112fc:	sbb    BYTE PTR [rbx],0x1
  4112ff:	add    BYTE PTR [rax],al
  411301:	add    BYTE PTR [rax],al
  411303:	add    BYTE PTR [rdx+0x11b],cl
  411309:	add    BYTE PTR [rax],al
  41130b:	add    BYTE PTR [rbx+rbx*1+0x1],dl
  411312:	add    BYTE PTR [rax],al
  411314:	sahf   
  411315:	sbb    eax,DWORD PTR [rcx]
  411317:	add    BYTE PTR [rax],al
  411319:	add    BYTE PTR [rax],al
  41131b:	add    BYTE PTR [rax+0x11b],ch
  411321:	add    BYTE PTR [rax],al
  411323:	add    BYTE PTR [rdx+0x11b],dh
  411329:	add    BYTE PTR [rax],al
  41132b:	add    BYTE PTR [rsi+0x11b],bh
  411331:	add    BYTE PTR [rax],al
  411333:	add    al,cl
  411335:	sbb    eax,DWORD PTR [rcx]
  411337:	add    BYTE PTR [rax],al
  411339:	add    BYTE PTR [rax],al
  41133b:	add    dl,dl
  41133d:	sbb    eax,DWORD PTR [rcx]
  41133f:	add    BYTE PTR [rax],al
  411341:	add    BYTE PTR [rax],al
  411343:	add    dl,bl
  411345:	sbb    eax,DWORD PTR [rcx]
  411347:	add    BYTE PTR [rax],al
  411349:	add    BYTE PTR [rax],al
  41134b:	add    ah,ah
  41134d:	sbb    eax,DWORD PTR [rcx]
  41134f:	add    BYTE PTR [rax],al
  411351:	add    BYTE PTR [rax],al
  411353:	add    dh,ch
  411355:	sbb    eax,DWORD PTR [rcx]
  411357:	add    BYTE PTR [rax],al
  411359:	add    BYTE PTR [rax],al
  41135b:	add    al,bh
  41135d:	sbb    eax,DWORD PTR [rcx]
	...
  41136b:	add    BYTE PTR [rsi+rdx*1+0x1],bl
  411372:	add    BYTE PTR [rax],al
  411374:	stos   BYTE PTR es:[rdi],al
  411375:	(bad)  
  411376:	add    DWORD PTR [rax],eax
  411378:	add    BYTE PTR [rax],al
  41137a:	add    BYTE PTR [rax],al
  41137c:	mov    eax,0x116
  411381:	add    BYTE PTR [rax],al
  411383:	add    dl,cl
  411385:	(bad)  
  411386:	add    DWORD PTR [rax],eax
  411388:	add    BYTE PTR [rax],al
  41138a:	add    BYTE PTR [rax],al
  41138c:	loop   0x4113a4
  41138e:	add    DWORD PTR [rax],eax
  411390:	add    BYTE PTR [rax],al
  411392:	add    BYTE PTR [rax],al
  411394:	cli    
  411395:	(bad)  
  411396:	add    DWORD PTR [rax],eax
  411398:	add    BYTE PTR [rax],al
  41139a:	add    BYTE PTR [rax],al
  41139c:	(bad)  
  41139d:	(bad)  
  41139e:	add    DWORD PTR [rax],eax
  4113a0:	add    BYTE PTR [rax],al
  4113a2:	add    BYTE PTR [rax],al
  4113a4:	and    al,0x17
  4113a6:	add    DWORD PTR [rax],eax
  4113a8:	add    BYTE PTR [rax],al
  4113aa:	add    BYTE PTR [rax],al
  4113ac:	cmp    dl,BYTE PTR [rdi]
  4113ae:	add    DWORD PTR [rax],eax
  4113b0:	add    BYTE PTR [rax],al
  4113b2:	add    BYTE PTR [rax],al
  4113b4:	push   rax
  4113b5:	(bad)  
  4113b6:	add    DWORD PTR [rax],eax
  4113b8:	add    BYTE PTR [rax],al
  4113ba:	add    BYTE PTR [rax],al
  4113bc:	(bad)  
  4113bd:	(bad)  
  4113be:	add    DWORD PTR [rax],eax
  4113c0:	add    BYTE PTR [rax],al
  4113c2:	add    BYTE PTR [rax],al
  4113c4:	jb     0x4113dd
  4113c6:	add    DWORD PTR [rax],eax
  4113c8:	add    BYTE PTR [rax],al
  4113ca:	add    BYTE PTR [rax],al
  4113cc:	mov    WORD PTR [rdi],ss
  4113ce:	add    DWORD PTR [rax],eax
  4113d0:	add    BYTE PTR [rax],al
  4113d2:	add    BYTE PTR [rax],al
  4113d4:	pushf  
  4113d5:	(bad)  
  4113d6:	add    DWORD PTR [rax],eax
  4113d8:	add    BYTE PTR [rax],al
  4113da:	add    BYTE PTR [rax],al
  4113dc:	lods   al,BYTE PTR ds:[rsi]
  4113dd:	(bad)  
  4113de:	add    DWORD PTR [rax],eax
  4113e0:	add    BYTE PTR [rax],al
  4113e2:	add    BYTE PTR [rax],al
  4113e4:	(bad)  
  4113e5:	(bad)  
  4113e6:	add    DWORD PTR [rax],eax
  4113e8:	add    BYTE PTR [rax],al
  4113ea:	add    BYTE PTR [rax],al
  4113ec:	(bad)  
  4113ed:	(bad)  
  4113ee:	add    DWORD PTR [rax],eax
  4113f0:	add    BYTE PTR [rax],al
  4113f2:	add    BYTE PTR [rax],al
  4113f4:	repnz (bad) 
  4113f6:	add    DWORD PTR [rax],eax
  4113f8:	add    BYTE PTR [rax],al
  4113fa:	add    BYTE PTR [rax],al
  4113fc:	or     bl,BYTE PTR [rax]
  4113fe:	add    DWORD PTR [rax],eax
  411400:	add    BYTE PTR [rax],al
  411402:	add    BYTE PTR [rax],al
  411404:	and    al,0x18
  411406:	add    DWORD PTR [rax],eax
  411408:	add    BYTE PTR [rax],al
  41140a:	add    BYTE PTR [rax],al
  41140c:	cmp    bl,BYTE PTR [rax]
  41140e:	add    DWORD PTR [rax],eax
  411410:	add    BYTE PTR [rax],al
  411412:	add    BYTE PTR [rax],al
  411414:	rex.WRX sbb BYTE PTR [rcx],r8b
  411417:	add    BYTE PTR [rax],al
  411419:	add    BYTE PTR [rax],al
  41141b:	add    BYTE PTR [rax+0x18],ch
  41141e:	add    DWORD PTR [rax],eax
  411420:	add    BYTE PTR [rax],al
  411422:	add    BYTE PTR [rax],al
  411424:	jl     0x41143e
  411426:	add    DWORD PTR [rax],eax
  411428:	add    BYTE PTR [rax],al
  41142a:	add    BYTE PTR [rax],al
  41142c:	xchg   esp,eax
  41142d:	sbb    BYTE PTR [rcx],al
  41142f:	add    BYTE PTR [rax],al
  411431:	add    BYTE PTR [rax],al
  411433:	add    BYTE PTR [rdx+0x118],dh
  411439:	add    BYTE PTR [rax],al
  41143b:	add    BYTE PTR [rdx+0x118],bh
  411441:	add    BYTE PTR [rax],al
  411443:	add    dh,cl
  411445:	sbb    BYTE PTR [rcx],al
  411447:	add    BYTE PTR [rax],al
  411449:	add    BYTE PTR [rax],al
  41144b:	add    ah,bl
  41144d:	sbb    BYTE PTR [rcx],al
  41144f:	add    BYTE PTR [rax],al
  411451:	add    BYTE PTR [rax],al
  411453:	add    al,bh
  411455:	sbb    BYTE PTR [rcx],al
  411457:	add    BYTE PTR [rax],al
  411459:	add    BYTE PTR [rax],al
  41145b:	add    BYTE PTR [rdx],cl
  41145d:	sbb    DWORD PTR [rcx],eax
  41145f:	add    BYTE PTR [rax],al
  411461:	add    BYTE PTR [rax],al
  411463:	add    BYTE PTR [rdx],bl
  411465:	sbb    DWORD PTR [rcx],eax
	...
  411473:	add    BYTE PTR [rax],dh
  411475:	sbb    DWORD PTR [rcx],eax
  411477:	add    BYTE PTR [rax],al
  411479:	add    BYTE PTR [rax],al
  41147b:	add    BYTE PTR [rax+0x19],cl
  41147e:	add    DWORD PTR [rax],eax
  411480:	add    BYTE PTR [rax],al
  411482:	add    BYTE PTR [rax],al
  411484:	push   rsi
  411485:	sbb    DWORD PTR [rcx],eax
  411487:	add    BYTE PTR [rax],al
  411489:	add    BYTE PTR [rax],al
  41148b:	add    BYTE PTR [rsi+0x19],ah
  41148e:	add    DWORD PTR [rax],eax
  411490:	add    BYTE PTR [rax],al
  411492:	add    BYTE PTR [rax],al
  411494:	jb     0x4114af
  411496:	add    DWORD PTR [rax],eax
  411498:	add    BYTE PTR [rax],al
  41149a:	add    BYTE PTR [rax],al
  41149c:	sbb    BYTE PTR [rcx],0x1
  41149f:	add    BYTE PTR [rax],al
  4114a1:	add    BYTE PTR [rax],al
  4114a3:	add    BYTE PTR [rax+0x119],dl
  4114a9:	add    BYTE PTR [rax],al
  4114ab:	add    BYTE PTR [rdx+0x119],ah
  4114b1:	add    BYTE PTR [rax],al
  4114b3:	add    BYTE PTR [rsi+0x119],dh
  4114b9:	add    BYTE PTR [rax],al
  4114bb:	add    al,al
  4114bd:	sbb    DWORD PTR [rcx],eax
  4114bf:	add    BYTE PTR [rax],al
  4114c1:	add    BYTE PTR [rax],al
  4114c3:	add    dh,cl
  4114c5:	sbb    DWORD PTR [rcx],eax
  4114c7:	add    BYTE PTR [rax],al
  4114c9:	add    BYTE PTR [rax],al
  4114cb:	add    al,bl
  4114cd:	sbb    DWORD PTR [rcx],eax
  4114cf:	add    BYTE PTR [rax],al
  4114d1:	add    BYTE PTR [rax],al
  4114d3:	add    dl,ah
  4114d5:	sbb    DWORD PTR [rcx],eax
  4114d7:	add    BYTE PTR [rax],al
  4114d9:	add    BYTE PTR [rax],al
  4114db:	add    dl,ch
  4114dd:	sbb    DWORD PTR [rcx],eax
  4114df:	add    BYTE PTR [rax],al
  4114e1:	add    BYTE PTR [rax],al
  4114e3:	add    ah,dh
  4114e5:	sbb    DWORD PTR [rcx],eax
  4114e7:	add    BYTE PTR [rax],al
  4114e9:	add    BYTE PTR [rax],al
  4114eb:	add    dh,bh
  4114ed:	sbb    DWORD PTR [rcx],eax
  4114ef:	add    BYTE PTR [rax],al
  4114f1:	add    BYTE PTR [rax],al
  4114f3:	add    BYTE PTR [rax],dl
  4114f5:	sbb    al,BYTE PTR [rcx]
  4114f7:	add    BYTE PTR [rax],al
  4114f9:	add    BYTE PTR [rax],al
  4114fb:	add    BYTE PTR [rdx+rbx*1],bl
  4114fe:	add    DWORD PTR [rax],eax
  411500:	add    BYTE PTR [rax],al
  411502:	add    BYTE PTR [rax],al
  411504:	and    al,0x1a
  411506:	add    DWORD PTR [rax],eax
  411508:	add    BYTE PTR [rax],al
  41150a:	add    BYTE PTR [rax],al
  41150c:	sbb    al,BYTE PTR cs:[rcx]
  41150f:	add    BYTE PTR [rax],al
  411511:	add    BYTE PTR [rax],al
  411513:	add    BYTE PTR [rsi],dh
  411515:	sbb    al,BYTE PTR [rcx]
  411517:	add    BYTE PTR [rax],al
  411519:	add    BYTE PTR [rax],al
  41151b:	add    BYTE PTR [rsi],bh
  41151d:	sbb    al,BYTE PTR [rcx]
  41151f:	add    BYTE PTR [rax],al
  411521:	add    BYTE PTR [rax],al
  411523:	add    BYTE PTR [rsi+0x1a],al
  411526:	add    DWORD PTR [rax],eax
  411528:	add    BYTE PTR [rax],al
  41152a:	add    BYTE PTR [rax],al
  41152c:	push   rax
  41152d:	sbb    al,BYTE PTR [rcx]
  41152f:	add    BYTE PTR [rax],al
  411531:	add    BYTE PTR [rax],al
  411533:	add    BYTE PTR [rax+0x1a],bl
  411536:	add    DWORD PTR [rax],eax
  411538:	add    BYTE PTR [rax],al
  41153a:	add    BYTE PTR [rax],al
  41153c:	(bad)  
  41153d:	sbb    al,BYTE PTR [rcx]
  41153f:	add    BYTE PTR [rax],al
  411541:	add    BYTE PTR [rax],al
  411543:	add    BYTE PTR [rdx+0x1a],ch
  411546:	add    DWORD PTR [rax],eax
  411548:	add    BYTE PTR [rax],al
  41154a:	add    BYTE PTR [rax],al
  41154c:	je     0x411568
  41154e:	add    DWORD PTR [rax],eax
  411550:	add    BYTE PTR [rax],al
  411552:	add    BYTE PTR [rax],al
  411554:	jle    0x411570
  411556:	add    DWORD PTR [rax],eax
  411558:	add    BYTE PTR [rax],al
  41155a:	add    BYTE PTR [rax],al
  41155c:	xchg   BYTE PTR [rdx],bl
  41155e:	add    DWORD PTR [rax],eax
  411560:	add    BYTE PTR [rax],al
  411562:	add    BYTE PTR [rax],al
  411564:	nop
  411565:	sbb    al,BYTE PTR [rcx]
  411567:	add    BYTE PTR [rax],al
  411569:	add    BYTE PTR [rax],al
  41156b:	add    BYTE PTR [rax+0x11a],bl
  411571:	add    BYTE PTR [rax],al
  411573:	add    BYTE PTR [rax+0x11a],ah
  411579:	add    BYTE PTR [rax],al
  41157b:	add    BYTE PTR [rax+0x11a],ch
  411581:	add    BYTE PTR [rax],al
  411583:	add    BYTE PTR [rax+0x11a],dh
  411589:	add    BYTE PTR [rax],al
  41158b:	add    BYTE PTR [rax+0x11a],bh
  411591:	add    BYTE PTR [rax],al
  411593:	add    dl,al
  411595:	sbb    al,BYTE PTR [rcx]
  411597:	add    BYTE PTR [rax],al
  411599:	add    BYTE PTR [rax],al
  41159b:	add    ah,cl
  41159d:	sbb    al,BYTE PTR [rcx]
  41159f:	add    BYTE PTR [rax],al
  4115a1:	add    BYTE PTR [rax],al
  4115a3:	add    dh,dl
  4115a5:	sbb    al,BYTE PTR [rcx]
  4115a7:	add    BYTE PTR [rax],al
  4115a9:	add    BYTE PTR [rax],al
  4115ab:	add    al,ah
  4115ad:	sbb    al,BYTE PTR [rcx]
  4115af:	add    BYTE PTR [rax],al
  4115b1:	add    BYTE PTR [rax],al
  4115b3:	add    dl,ch
  4115b5:	sbb    al,BYTE PTR [rcx]
  4115b7:	add    BYTE PTR [rax],al
  4115b9:	add    BYTE PTR [rax],al
  4115bb:	add    ah,dh
  4115bd:	sbb    al,BYTE PTR [rcx]
  4115bf:	add    BYTE PTR [rax],al
  4115c1:	add    BYTE PTR [rax],al
  4115c3:	add    dh,bh
  4115c5:	sbb    al,BYTE PTR [rcx]
  4115c7:	add    BYTE PTR [rax],al
  4115c9:	add    BYTE PTR [rax],al
  4115cb:	add    BYTE PTR [rsi],al
  4115cd:	sbb    eax,DWORD PTR [rcx]
  4115cf:	add    BYTE PTR [rax],al
  4115d1:	add    BYTE PTR [rax],al
  4115d3:	add    BYTE PTR [rsi],cl
  4115d5:	sbb    eax,DWORD PTR [rcx]
  4115d7:	add    BYTE PTR [rax],al
  4115d9:	add    BYTE PTR [rax],al
  4115db:	add    BYTE PTR [rax],bl
  4115dd:	sbb    eax,DWORD PTR [rcx]
  4115df:	add    BYTE PTR [rax],al
  4115e1:	add    BYTE PTR [rax],al
  4115e3:	add    BYTE PTR [rdx],ah
  4115e5:	sbb    eax,DWORD PTR [rcx]
  4115e7:	add    BYTE PTR [rax],al
  4115e9:	add    BYTE PTR [rax],al
  4115eb:	add    BYTE PTR [rsi],ch
  4115ed:	sbb    eax,DWORD PTR [rcx]
  4115ef:	add    BYTE PTR [rax],al
  4115f1:	add    BYTE PTR [rax],al
  4115f3:	add    BYTE PTR [rax],bh
  4115f5:	sbb    eax,DWORD PTR [rcx]
  4115f7:	add    BYTE PTR [rax],al
  4115f9:	add    BYTE PTR [rax],al
  4115fb:	add    BYTE PTR [rdx+0x1b],al
  4115fe:	add    DWORD PTR [rax],eax
  411600:	add    BYTE PTR [rax],al
  411602:	add    BYTE PTR [rax],al
  411604:	sbb    r8,QWORD PTR [rcx]
  411607:	add    BYTE PTR [rax],al
  411609:	add    BYTE PTR [rax],al
  41160b:	add    BYTE PTR [rsi+0x1b],dl
  41160e:	add    DWORD PTR [rax],eax
  411610:	add    BYTE PTR [rax],al
  411612:	add    BYTE PTR [rax],al
  411614:	(bad)  
  411615:	sbb    eax,DWORD PTR [rcx]
  411617:	add    BYTE PTR [rax],al
  411619:	add    BYTE PTR [rax],al
  41161b:	add    BYTE PTR [rdx+0x1b],ch
  41161e:	add    DWORD PTR [rax],eax
  411620:	add    BYTE PTR [rax],al
  411622:	add    BYTE PTR [rax],al
  411624:	jbe    0x411641
  411626:	add    DWORD PTR [rax],eax
  411628:	add    BYTE PTR [rax],al
  41162a:	add    BYTE PTR [rax],al
  41162c:	sbb    BYTE PTR [rbx],0x1
  41162f:	add    BYTE PTR [rax],al
  411631:	add    BYTE PTR [rax],al
  411633:	add    BYTE PTR [rdx+0x11b],cl
  411639:	add    BYTE PTR [rax],al
  41163b:	add    BYTE PTR [rbx+rbx*1+0x1],dl
  411642:	add    BYTE PTR [rax],al
  411644:	sahf   
  411645:	sbb    eax,DWORD PTR [rcx]
  411647:	add    BYTE PTR [rax],al
  411649:	add    BYTE PTR [rax],al
  41164b:	add    BYTE PTR [rax+0x11b],ch
  411651:	add    BYTE PTR [rax],al
  411653:	add    BYTE PTR [rdx+0x11b],dh
  411659:	add    BYTE PTR [rax],al
  41165b:	add    BYTE PTR [rsi+0x11b],bh
  411661:	add    BYTE PTR [rax],al
  411663:	add    al,cl
  411665:	sbb    eax,DWORD PTR [rcx]
  411667:	add    BYTE PTR [rax],al
  411669:	add    BYTE PTR [rax],al
  41166b:	add    dl,dl
  41166d:	sbb    eax,DWORD PTR [rcx]
  41166f:	add    BYTE PTR [rax],al
  411671:	add    BYTE PTR [rax],al
  411673:	add    dl,bl
  411675:	sbb    eax,DWORD PTR [rcx]
  411677:	add    BYTE PTR [rax],al
  411679:	add    BYTE PTR [rax],al
  41167b:	add    ah,ah
  41167d:	sbb    eax,DWORD PTR [rcx]
  41167f:	add    BYTE PTR [rax],al
  411681:	add    BYTE PTR [rax],al
  411683:	add    dh,ch
  411685:	sbb    eax,DWORD PTR [rcx]
  411687:	add    BYTE PTR [rax],al
  411689:	add    BYTE PTR [rax],al
  41168b:	add    al,bh
  41168d:	sbb    eax,DWORD PTR [rcx]
	...
  41169b:	add    BYTE PTR [rbp+0x0],dl
  41169e:	rex.XB ins BYTE PTR es:[rdi],dx
  4116a0:	outs   dx,DWORD PTR ds:[rsi]
  4116a1:	jae    0x411708
  4116a3:	rex.W (bad) 
  4116a5:	outs   dx,BYTE PTR ds:[rsi]
  4116a6:	fs ins BYTE PTR es:[rdi],dx
  4116a8:	add    BYTE PTR gs:[rbp+0x65724300],cl
  4116af:	(bad)  
  4116b0:	je     0x411717
  4116b2:	imul   r13d,DWORD PTR [rbp+r12*2+0x41],0x4300aa00
  4116bb:	jb     0x411722
  4116bd:	(bad)  
  4116be:	je     0x411725
  4116c0:	push   rax
  4116c1:	jb     0x411732
  4116c3:	movsxd esp,DWORD PTR [rbp+0x73]
  4116c6:	jae    0x411709
  4116c8:	add    BYTE PTR [rax],al
  4116ca:	fadd   DWORD PTR [rax]
  4116cc:	rex.R
  4116cd:	gs ins BYTE PTR es:[rdi],dx
  4116cf:	gs je  0x411737
  4116d2:	rex.XB jb 0x41173e
  4116d5:	je     0x411740
  4116d7:	movsxd esp,DWORD PTR [rcx+0x6c]
  4116da:	push   rbx
  4116db:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  4116e0:	outs   dx,BYTE PTR ds:[rsi]
  4116e1:	add    al,bh
  4116e3:	add    BYTE PTR [rbp+0x6e],al
  4116e6:	je     0x41174d
  4116e8:	jb     0x41172d
  4116ea:	jb     0x411755
  4116ec:	je     0x411757
  4116ee:	movsxd esp,DWORD PTR [rcx+0x6c]
  4116f1:	push   rbx
  4116f2:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  4116f7:	outs   dx,BYTE PTR ds:[rsi]
  4116f8:	add    BYTE PTR [rax],al
  4116fa:	int    0x1
  4116fc:	rex.RXB
  4116fd:	gs je  0x411743
  411700:	jne    0x411774
  411702:	jb     0x411769
  411704:	outs   dx,BYTE PTR ds:[rsi]
  411705:	je     0x411757
  411707:	jb     0x411778
  411709:	movsxd esp,DWORD PTR [rbp+0x73]
  41170c:	jae    0x41170e
  41170e:	(bad)  
  41170f:	add    DWORD PTR [rdi+0x65],eax
  411712:	je     0x411757
  411714:	jne    0x411788
  411716:	jb     0x41177d
  411718:	outs   dx,BYTE PTR ds:[rsi]
  411719:	je     0x41176b
  41171b:	jb     0x41178c
  41171d:	movsxd esp,DWORD PTR [rbp+0x73]
  411720:	jae    0x41176b
  411722:	fs add dl,dl
  411725:	add    DWORD PTR [rdi+0x65],eax
  411728:	je     0x41176d
  41172a:	jne    0x41179e
  41172c:	jb     0x411793
  41172e:	outs   dx,BYTE PTR ds:[rsi]
  41172f:	je     0x411785
  411731:	push   0x64616572
  411736:	rex.WB
  411737:	add    BYTE PTR fs:[rax],al
  41173a:	out    dx,al
  41173b:	add    DWORD PTR [rdi+0x65],eax
  41173e:	je     0x411785
  411740:	js     0x4117ab
  411742:	je     0x411787
  411744:	outs   dx,DWORD PTR ds:[rsi]
  411745:	fs gs push rax
  411748:	jb     0x4117b9
  41174a:	movsxd esp,DWORD PTR [rbp+0x73]
  41174d:	jae    0x41174f
  41174f:	add    BYTE PTR [rax],dl
  411751:	add    al,BYTE PTR [rdi+0x65]
  411754:	je     0x4117a2
  411756:	(bad)  
  411757:	jae    0x4117cd
  411759:	rex.RB jb 0x4117ce
  41175c:	outs   dx,DWORD PTR ds:[rsi]
  41175d:	jb     0x41175f
  41175f:	add    BYTE PTR [rbx+0x2],dh
  411762:	rex.RXB
  411763:	gs je  0x4117b9
  411766:	je     0x4117c9
  411768:	jb     0x4117de
  41176a:	jne    0x4117dc
  41176c:	rex.WB outs dx,BYTE PTR ds:[rsi]
  41176e:	outs   dx,WORD PTR ds:[rsi]
  411770:	add    BYTE PTR [r10+0x74654702],cl
  411777:	push   rbx
  411778:	jns    0x4117ed
  41177a:	je     0x4117e1
  41177c:	ins    DWORD PTR es:[rdi],dx
  41177d:	push   rsp
  41177e:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
  411785:	ins    BYTE PTR es:[rdi],dx
  411786:	gs push rsp
  411788:	imul   ebp,DWORD PTR [rbp+0x65],0x47029600
  41178f:	gs je  0x4117e6
  411792:	gs ins DWORD PTR es:[rdi],dx
  411794:	jo     0x4117e6
  411796:	(bad)  
  411797:	je     0x411801
  411799:	add    BYTE PTR [r8],al
  41179c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  41179d:	add    al,BYTE PTR [rdi+0x65]
  4117a0:	je     0x4117f6
  4117a2:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
  4117a9:	je     0x4117ab
  4117ab:	add    BYTE PTR [rdx+0x74654702],ch
  4117b1:	push   rsp
  4117b2:	imul   ebp,DWORD PTR [rbp+0x65],0x656e6f5a
  4117b9:	rex.WB outs dx,BYTE PTR ds:[rsi]
  4117bb:	outs   dx,WORD PTR ds:[rsi]
  4117bd:	jb     0x41182c
  4117bf:	(bad)  
  4117c0:	je     0x41182b
  4117c2:	outs   dx,DWORD PTR ds:[rsi]
  4117c3:	outs   dx,BYTE PTR ds:[rsi]
  4117c4:	add    BYTE PTR [rax],al
  4117c6:	mov    dh,0x2
  4117c8:	rex.RXB
  4117c9:	gs je  0x411822
  4117cc:	gs jb  0x411842
  4117cf:	imul   ebp,DWORD PTR [rdi+0x6e],0x417845
  4117d6:	stc    
  4117d7:	add    cl,BYTE PTR [rcx+0x6e]
  4117da:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
  4117e2:	rex.XB jb 0x41184e
  4117e5:	je     0x411850
  4117e7:	movsxd esp,DWORD PTR [rcx+0x6c]
  4117ea:	push   rbx
  4117eb:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  4117f0:	outs   dx,BYTE PTR ds:[rsi]
  4117f1:	add    BYTE PTR [rbx+0x3],cl
  4117f4:	rex.WR
  4117f5:	gs (bad) 
  4117f7:	jbe    0x41185e
  4117f9:	rex.XB jb 0x411865
  4117fc:	je     0x411867
  4117fe:	movsxd esp,DWORD PTR [rcx+0x6c]
  411801:	push   rbx
  411802:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  411807:	outs   dx,BYTE PTR ds:[rsi]
  411808:	add    BYTE PTR [rax],al
  41180a:	mov    ebx,0x65755103
  41180f:	jb     0x41188a
  411811:	push   rax
  411812:	gs jb  0x41187b
  411815:	outs   dx,DWORD PTR ds:[rsi]
  411816:	jb     0x411885
  411818:	(bad)  
  411819:	outs   dx,BYTE PTR ds:[rsi]
  41181a:	movsxd esp,DWORD PTR [rbp+0x43]
  41181d:	outs   dx,DWORD PTR ds:[rsi]
  41181e:	jne    0x41188e
  411820:	je     0x411887
  411822:	jb     0x411824
  411824:	add    DWORD PTR [rdx+rdx*2],eax
  411827:	je     0x411895
  411829:	rex.B
  41182a:	fs fs rex.RX jne 0x41189d
  41182f:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  411833:	outs   dx,BYTE PTR ds:[rsi]
  411834:	push   rsp
  411835:	(bad)  
  411836:	(bad)  
  411837:	ins    BYTE PTR es:[rdi],dx
  411838:	add    BYTE PTR gs:[rdx],al
  41183b:	add    al,0x52
  41183d:	je     0x4118ab
  41183f:	rex.XB (bad) 
  411841:	jo     0x4118b7
  411843:	jne    0x4118b7
  411845:	rex.XB outs dx,DWORD PTR gs:[rsi]
  411848:	outs   dx,BYTE PTR ds:[rsi]
  411849:	je     0x4118b0
  41184b:	js     0x4118c1
  41184d:	add    BYTE PTR [rcx],cl
  41184f:	add    al,0x52
  411851:	je     0x4118bf
  411853:	rex.WR outs dx,DWORD PTR ds:[rsi]
  411855:	outs   dx,DWORD PTR ds:[rsi]
  411856:	imul   esi,DWORD PTR [rbp+0x70],0x46
  41185a:	jne    0x4118ca
  41185c:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  411860:	outs   dx,BYTE PTR ds:[rsi]
  411861:	rex.RB outs dx,BYTE PTR ds:[rsi]
  411863:	je     0x4118d7
  411865:	jns    0x411867
  411867:	add    BYTE PTR [rax],dl
  411869:	add    al,0x52
  41186b:	je     0x4118d9
  41186d:	push   rsi
  41186e:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
  411875:	outs   dx,BYTE PTR ds:[rsi]
  411876:	ja     0x4118e1
  411878:	outs   dx,BYTE PTR ds:[rsi]
  411879:	add    BYTE PTR fs:[rax],al
  41187c:	imul   eax,DWORD PTR [rbx+rdx*2],0x61487465
  411883:	outs   dx,BYTE PTR ds:[rsi]
  411884:	fs ins BYTE PTR es:[rdi],dx
  411886:	rex.WB outs dx,BYTE PTR gs:[rsi]
  411889:	outs   dx,WORD PTR ds:[rsi]
  41188b:	jb     0x4118fa
  41188d:	(bad)  
  41188e:	je     0x4118f9
  411890:	outs   dx,DWORD PTR ds:[rsi]
  411891:	outs   dx,BYTE PTR ds:[rsi]
  411892:	add    BYTE PTR [rax],al
  411894:	lahf   
  411895:	add    al,0x53
  411897:	gs je  0x4118ef
  41189a:	outs   dx,BYTE PTR ds:[rsi]
  41189b:	push   0x6c646e61
  4118a0:	gs fs rex.RB js 0x411908
  4118a5:	gs jo  0x41191c
  4118a8:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  4118af:	gs jb  0x4118b2
  4118b2:	lods   al,BYTE PTR ds:[rsi]
  4118b3:	add    al,0x53
  4118b5:	ins    BYTE PTR es:[rdi],dx
  4118b6:	gs gs jo 0x4118ba
  4118ba:	mov    edx,0x72655404
  4118bf:	ins    DWORD PTR es:[rdi],dx
  4118c0:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
  4118c7:	outs   dx,DWORD PTR ds:[rsi]
  4118c8:	movsxd esp,DWORD PTR [rbp+0x73]
  4118cb:	jae    0x4118cd
  4118cd:	add    cl,al
  4118cf:	add    al,0x54
  4118d1:	ins    BYTE PTR es:[rdi],dx
  4118d2:	jae    0x41191b
  4118d4:	gs je  0x41192d
  4118d7:	(bad)  
  4118d8:	ins    BYTE PTR es:[rdi],dx
  4118d9:	jne    0x411940
  4118db:	add    dh,cl
  4118dd:	add    al,0x55
  4118df:	outs   dx,BYTE PTR ds:[rsi]
  4118e0:	push   0x6c646e61
  4118e5:	gs fs rex.RB js 0x41194d
  4118ea:	gs jo  0x411961
  4118ed:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  4118f4:	gs jb  0x4118f7
  4118f7:	add    ah,ch
  4118f9:	add    al,0x56
  4118fb:	imul   esi,DWORD PTR [rdx+0x74],0x506c6175
  411902:	jb     0x411973
  411904:	je     0x41196b
  411906:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  41190a:	out    dx,al
  41190b:	add    al,0x56
  41190d:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  411914:	jne    0x41197b
  411916:	jb     0x411991
  411918:	add    BYTE PTR [rax],al
  41191a:	test   BYTE PTR [rdi+rdx*2],0x61
  41191e:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x6e695372
  411926:	ins    BYTE PTR es:[edi],dx
  411928:	gs rex.WRXB (bad) 
  41192b:	push   0x65
  41192d:	movsxd esi,DWORD PTR [rax+rax*1+0x37]
  411931:	add    BYTE PTR [rdi+0x5f],bl
  411934:	rex.XB pop r15
  411936:	jae    0x4119a8
  411938:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  41193c:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
  411943:	ins    BYTE PTR es:[rdi],dx
  411944:	gs jb  0x411947
  411947:	add    BYTE PTR [rsi+0x0],cl
  41194a:	pop    rdi
  41194b:	pop    rdi
  41194c:	fs ins BYTE PTR es:[rdi],dx
  41194e:	ins    BYTE PTR es:[rdi],dx
  41194f:	outs   dx,DWORD PTR ds:[rsi]
  411950:	outs   dx,BYTE PTR ds:[rsi]
  411951:	gs js  0x4119bd
  411954:	je     0x411956
  411956:	push   rcx
  411957:	add    BYTE PTR [rdi+0x5f],bl
  41195a:	addr32 gs je 0x4119cb
  41195e:	(bad)  
  41195f:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
  411966:	push   rdx
  411967:	add    BYTE PTR [rdi+0x5f],bl
  41196a:	imul   ebp,DWORD PTR [rsi+0x69],0x766e6574
  411971:	add    BYTE PTR [rbx+0x0],dl
  411974:	pop    rdi
  411975:	pop    rdi
  411976:	imul   ebp,DWORD PTR [rdi+0x62],0x6e75665f
  41197d:	movsxd eax,DWORD PTR [rax]
  41197f:	add    BYTE PTR [rdx+0x0],bl
  411982:	pop    rdi
  411983:	pop    rdi
  411984:	ins    BYTE PTR es:[rdi],dx
  411985:	movsxd ebp,DWORD PTR [rdi+0x6e]
  411988:	jbe    0x4119e9
  41198a:	imul   ebp,DWORD PTR [rsi+0x69],0x60000074
  411991:	add    BYTE PTR [rdi+0x5f],bl
  411994:	jae    0x4119fb
  411996:	je     0x4119f7
  411998:	(bad)  
  411999:	jo     0x411a0b
  41199b:	pop    rdi
  41199c:	je     0x411a17
  41199e:	jo     0x411a05
  4119a0:	add    BYTE PTR [rax],al
  4119a2:	(bad)  
  4119a3:	add    BYTE PTR [rdi+0x5f],bl
  4119a6:	jae    0x411a0d
  4119a8:	je     0x411a1f
  4119aa:	jae    0x411a11
  4119ac:	jb     0x411a1b
  4119ae:	(bad)  
  4119af:	je     0x411a19
  4119b1:	gs jb  0x411a26
  4119b4:	add    BYTE PTR [rax],al
  4119b6:	jno    0x4119b8
  4119b8:	pop    rdi
  4119b9:	(bad)  
  4119ba:	movsxd ebp,DWORD PTR [rbp+0x64]
  4119bd:	ins    BYTE PTR es:[rdi],dx
  4119be:	outs   dx,BYTE PTR ds:[rsi]
  4119bf:	add    BYTE PTR [rax+0x0],bh
  4119c2:	pop    rdi
  4119c3:	(bad)  
  4119c4:	ins    DWORD PTR es:[rdi],dx
  4119c5:	jae    0x411a2e
  4119c7:	pop    rdi
  4119c8:	gs js  0x411a34
  4119cb:	je     0x4119cd
  4119cd:	add    BYTE PTR [rdx+0x65635f00],cl
  4119d3:	js     0x411a3e
  4119d5:	je     0x4119d7
  4119d7:	add    BYTE PTR [rax+rax*1+0x6f6c635f],dl
  4119de:	jae    0x411a45
  4119e0:	add    BYTE PTR [rax],al
  4119e2:	mov    dl,0x0
  4119e4:	pop    rdi
  4119e5:	fs jne 0x411a58
  4119e8:	add    BYTE PTR [rax],al
  4119ea:	mov    edx,0x72655f00
  4119ef:	jb     0x411a5f
  4119f1:	outs   dx,DWORD PTR ds:[rsi]
  4119f2:	add    BYTE PTR [rax],al
  4119f4:	fiadd  DWORD PTR [rax]
  4119f6:	pop    rdi
  4119f7:	ins    WORD PTR es:[rdi],dx
  4119f9:	outs   dx,DWORD PTR ds:[rsi]
  4119fa:	fs add BYTE PTR gs:[rax],al
  4119fe:	cli    
  4119ff:	add    BYTE PTR [rdi+0x67],bl
  411a02:	gs je  0x411a64
  411a05:	outs   dx,DWORD PTR ds:[rsi]
  411a06:	jae    0x411a6e
  411a08:	push   0x6c646e61
  411a0d:	add    BYTE PTR gs:[rax],al
  411a10:	sbb    al,BYTE PTR [rcx]
  411a12:	pop    rdi
  411a13:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
  411a1a:	ins    DWORD PTR es:[rdi],dx
  411a1b:	add    BYTE PTR [rax+0x6f6c5f01],al
  411a21:	movsxd ebp,DWORD PTR [rbx+0x0]
  411a24:	and    eax,0x6e6f5f02
  411a29:	gs js  0x411a95
  411a2c:	je     0x411a2e
  411a2e:	add    bl,BYTE PTR es:[rdi+0x6f]
  411a32:	jo     0x411a99
  411a34:	outs   dx,BYTE PTR ds:[rsi]
  411a35:	add    BYTE PTR [rip+0x69705f02],ch        # 0x69b1793d
  411a3b:	jo     0x411aa2
  411a3d:	add    BYTE PTR [rbx],bh
  411a3f:	add    bl,BYTE PTR [rdi+0x72]
  411a42:	gs (bad) 
  411a44:	fs add ah,al
  411a47:	add    bl,BYTE PTR [rdi+0x75]
  411a4a:	outs   dx,BYTE PTR ds:[rsi]
  411a4b:	ins    BYTE PTR es:[rdi],dx
  411a4c:	outs   dx,DWORD PTR ds:[rsi]
  411a4d:	movsxd ebp,DWORD PTR [rbx+0x0]
  411a50:	jg     0x411a55
  411a52:	(bad)  
  411a53:	(bad)  
  411a54:	outs   dx,DWORD PTR ds:[rsi]
  411a55:	jb     0x411acb
  411a57:	add    BYTE PTR [rax+0x6c616303],dl
  411a5d:	ins    BYTE PTR es:[rdi],dx
  411a5e:	outs   dx,DWORD PTR ds:[rsi]
  411a5f:	movsxd eax,DWORD PTR [rax]
  411a61:	add    BYTE PTR [rbp+0x69786503],bl
  411a67:	je     0x411a69
  411a69:	add    BYTE PTR [rcx+0x6c636603],ah
  411a6f:	outs   dx,DWORD PTR ds:[rsi]
  411a70:	jae    0x411ad7
  411a72:	add    BYTE PTR [rax],al
  411a74:	movabs ds:0x726f7272656603,eax
  411a7d:	add    BYTE PTR [rsi+0x706f6603],ch
  411a83:	outs   dx,BYTE PTR gs:[rsi]
  411a85:	add    BYTE PTR [rax+0x72706603],dh
  411a8b:	imul   ebp,DWORD PTR [rsi+0x74],0x3b20066
  411a92:	data16 jo 0x411b0a
  411a95:	je     0x411afa
  411a97:	add    BYTE PTR [rsi+0x65726603],dh
  411a9d:	(bad)  
  411a9e:	add    BYTE PTR fs:[rdi+0x65726603],dh
  411aa5:	add    BYTE PTR gs:[rax],al
  411aa8:	mov    ebp,0x65736603
  411aad:	imul   eax,DWORD PTR gs:[rax],0xffffffbf
  411ab1:	add    esp,DWORD PTR [rsi+0x74]
  411ab4:	gs ins BYTE PTR es:[rdi],dx
  411ab6:	ins    BYTE PTR es:[rdi],dx
  411ab7:	add    dl,al
  411ab9:	add    esp,DWORD PTR [rsi+0x77]
  411abc:	jb     0x411b27
  411abe:	je     0x411b25
  411ac0:	add    BYTE PTR [rax],al
  411ac2:	mov    DWORD PTR [rbx],0x65746567
  411ac8:	outs   dx,BYTE PTR ds:[rsi]
  411ac9:	jbe    0x411acb
  411acb:	add    al,dh
  411acd:	add    ebp,DWORD PTR [rbp+0x61]
  411ad0:	ins    BYTE PTR es:[rdi],dx
  411ad1:	ins    BYTE PTR es:[rdi],dx
  411ad2:	outs   dx,DWORD PTR ds:[rsi]
  411ad3:	movsxd eax,DWORD PTR [rax]
  411ad5:	add    al,bh
  411ad7:	add    ebp,DWORD PTR [rbp+0x65]
  411ada:	ins    DWORD PTR es:[rdi],dx
  411adb:	movsxd esi,DWORD PTR [rax+0x79]
  411ade:	add    BYTE PTR [rax],al
  411ae0:	stc    
  411ae1:	add    ebp,DWORD PTR [rbp+0x65]
  411ae4:	ins    DWORD PTR es:[rdi],dx
  411ae5:	ins    DWORD PTR es:[rdi],dx
  411ae6:	outs   dx,DWORD PTR ds:[rsi]
  411ae7:	jbe    0x411b4e
  411ae9:	add    dl,bh
  411aeb:	add    ebp,DWORD PTR [rbp+0x65]
  411aee:	ins    DWORD PTR es:[rdi],dx
  411aef:	jae    0x411b56
  411af1:	je     0x411af3
  411af3:	add    BYTE PTR [rcx],al
  411af5:	add    al,0x70
  411af7:	jb     0x411b62
  411af9:	outs   dx,BYTE PTR ds:[rsi]
  411afa:	je     0x411b62
  411afc:	add    BYTE PTR [rax],al
  411afe:	add    eax,0x74757004
  411b03:	jae    0x411b05
  411b05:	add    BYTE PTR [rax],cl
  411b07:	add    al,0x71
  411b09:	jae    0x411b7a
  411b0b:	jb     0x411b81
  411b0d:	add    BYTE PTR [rsp+rax*1],cl
  411b10:	jb     0x411b77
  411b12:	(bad)  
  411b13:	ins    BYTE PTR es:[rdi],dx
  411b14:	ins    BYTE PTR es:[rdi],dx
  411b15:	outs   dx,DWORD PTR ds:[rsi]
  411b16:	movsxd eax,DWORD PTR [rax]
  411b18:	or     eax,0x6d657204
  411b1d:	outs   dx,DWORD PTR ds:[rsi]
  411b1e:	jbe    0x411b85
  411b20:	add    BYTE PTR [rax],al
  411b22:	adc    al,0x4
  411b24:	jae    0x411b8b
  411b26:	je     0x411b94
  411b28:	outs   dx,DWORD PTR ds:[rsi]
  411b29:	movsxd esp,DWORD PTR [rcx+0x6c]
  411b2c:	add    BYTE PTR gs:[rsi],dl
  411b2f:	add    al,0x73
  411b31:	imul   esp,DWORD PTR [rdi+0x6e],0x6c61
  411b38:	sbb    eax,DWORD PTR [rbx+rsi*2]
  411b3b:	jo     0x411baf
  411b3d:	imul   ebp,DWORD PTR [rsi+0x74],0x4210066
  411b44:	jae    0x411bba
  411b46:	jb     0x411bab
  411b48:	(bad)  
  411b49:	je     0x411b4b
  411b4b:	add    BYTE PTR [rbx],ah
  411b4d:	add    al,0x73
  411b4f:	je     0x411bc3
  411b51:	movsxd ebp,DWORD PTR [rax+0x72]
  411b54:	add    BYTE PTR [rax],al
  411b56:	and    al,0x4
  411b58:	jae    0x411bce
  411b5a:	jb     0x411bbf
  411b5c:	ins    DWORD PTR es:[rdi],dx
  411b5d:	jo     0x411b5f
  411b5f:	add    BYTE PTR [rsi],ah
  411b61:	add    al,0x73
  411b63:	je     0x411bd7
  411b65:	movsxd esi,DWORD PTR [rax+0x79]
  411b68:	add    BYTE PTR [rax],al
  411b6a:	sub    DWORD PTR [rbx+rsi*2],eax
  411b6d:	je     0x411be1
  411b6f:	gs jb  0x411be4
  411b72:	outs   dx,DWORD PTR ds:[rsi]
  411b73:	jb     0x411b75
  411b75:	add    BYTE PTR [rbx],ch
  411b77:	add    al,0x73
  411b79:	je     0x411bed
  411b7b:	ins    BYTE PTR es:[rdi],dx
  411b7c:	outs   dx,BYTE PTR gs:[rsi]
  411b7e:	add    BYTE PTR [rax],al
  411b80:	cs add al,0x73
  411b83:	je     0x411bf7
  411b85:	outs   dx,BYTE PTR ds:[rsi]
  411b86:	movsxd ebp,DWORD PTR [rbp+0x70]
  411b89:	add    BYTE PTR [rdi],ch
  411b8b:	add    al,0x73
  411b8d:	je     0x411c01
  411b8f:	outs   dx,BYTE PTR ds:[rsi]
  411b90:	movsxd esi,DWORD PTR [rax+0x79]
  411b93:	add    BYTE PTR [rdx],dh
  411b95:	add    al,0x73
  411b97:	je     0x411c0b
  411b99:	jb     0x411bfe
  411b9b:	push   0x4340072
  411ba0:	jae    0x411c16
  411ba2:	jb     0x411c17
  411ba4:	je     0x411c18
  411ba6:	add    BYTE PTR [rax],al
  411ba8:	rex.W add al,0x74
  411bab:	outs   dx,DWORD PTR ds:[rsi]
  411bac:	ins    BYTE PTR es:[rdi],dx
  411bad:	outs   dx,DWORD PTR ds:[rsi]
  411bae:	ja     0x411c15
  411bb0:	jb     0x411bb2
  411bb2:	rex.WRX add al,0x76
  411bb5:	data16 jo 0x411c2a
  411bb8:	imul   ebp,DWORD PTR [rsi+0x74],0x89000066
  411bbf:	add    al,0x5f
  411bc1:	jae    0x411c37
  411bc3:	(bad)  
  411bc4:	je     0x411bfc
  411bc6:	xor    al,0x0
  411bc8:	scas   eax,DWORD PTR es:[rdi]
  411bc9:	add    al,0x5f
  411bcb:	jne    0x411c3b
  411bcd:	ins    BYTE PTR es:[rdi],dx
  411bce:	imul   ebp,DWORD PTR [rsi+0x6b],0x5f04d300
  411bd5:	outs   dx,DWORD PTR ds:[rsi]
  411bd6:	jo     0x411c3d
  411bd8:	outs   dx,BYTE PTR ds:[rsi]
  411bd9:	add    ah,dl
  411bdb:	add    al,0x5f
  411bdd:	ins    DWORD PTR es:[rdi],dx
  411bde:	imul   esi,DWORD PTR [rbp+riz*2+0x6d],0x70
  411be3:	add    cl,ah
  411be5:	add    al,0x5f
  411be7:	addr32 gs je 0x411c5b
  411beb:	imul   esp,DWORD PTR [rax+rax*1-0x14],0x64665f04
  411bf3:	outs   dx,DWORD PTR ds:[rsi]
  411bf4:	jo     0x411c5b
  411bf6:	outs   dx,BYTE PTR ds:[rsi]
  411bf7:	add    ah,bh
  411bf9:	add    al,0x5f
  411bfb:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
  411bff:	add    BYTE PTR gs:[rax],al
  411c02:	add    BYTE PTR [rax],al
  411c04:	add    BYTE PTR [rax],dl
  411c06:	add    DWORD PTR [rax],eax
  411c08:	add    BYTE PTR [rax],dl
  411c0a:	add    DWORD PTR [rax],eax
  411c0c:	add    BYTE PTR [rax],dl
  411c0e:	add    DWORD PTR [rax],eax
  411c10:	add    BYTE PTR [rax],dl
  411c12:	add    DWORD PTR [rax],eax
  411c14:	add    BYTE PTR [rax],dl
  411c16:	add    DWORD PTR [rax],eax
  411c18:	add    BYTE PTR [rax],dl
  411c1a:	add    DWORD PTR [rax],eax
  411c1c:	add    BYTE PTR [rax],dl
  411c1e:	add    DWORD PTR [rax],eax
  411c20:	add    BYTE PTR [rax],dl
  411c22:	add    DWORD PTR [rax],eax
  411c24:	add    BYTE PTR [rax],dl
  411c26:	add    DWORD PTR [rax],eax
  411c28:	add    BYTE PTR [rax],dl
  411c2a:	add    DWORD PTR [rax],eax
  411c2c:	add    BYTE PTR [rax],dl
  411c2e:	add    DWORD PTR [rax],eax
  411c30:	add    BYTE PTR [rax],dl
  411c32:	add    DWORD PTR [rax],eax
  411c34:	add    BYTE PTR [rax],dl
  411c36:	add    DWORD PTR [rax],eax
  411c38:	add    BYTE PTR [rax],dl
  411c3a:	add    DWORD PTR [rax],eax
  411c3c:	add    BYTE PTR [rax],dl
  411c3e:	add    DWORD PTR [rax],eax
  411c40:	add    BYTE PTR [rax],dl
  411c42:	add    DWORD PTR [rax],eax
  411c44:	add    BYTE PTR [rax],dl
  411c46:	add    DWORD PTR [rax],eax
  411c48:	add    BYTE PTR [rax],dl
  411c4a:	add    DWORD PTR [rax],eax
  411c4c:	add    BYTE PTR [rax],dl
  411c4e:	add    DWORD PTR [rax],eax
  411c50:	add    BYTE PTR [rax],dl
  411c52:	add    DWORD PTR [rax],eax
  411c54:	add    BYTE PTR [rax],dl
  411c56:	add    DWORD PTR [rax],eax
  411c58:	add    BYTE PTR [rax],dl
  411c5a:	add    DWORD PTR [rax],eax
  411c5c:	add    BYTE PTR [rax],dl
  411c5e:	add    DWORD PTR [rax],eax
  411c60:	add    BYTE PTR [rax],dl
  411c62:	add    DWORD PTR [rax],eax
  411c64:	add    BYTE PTR [rax],dl
  411c66:	add    DWORD PTR [rax],eax
  411c68:	add    BYTE PTR [rax],dl
  411c6a:	add    DWORD PTR [rax],eax
  411c6c:	add    BYTE PTR [rax],dl
  411c6e:	add    DWORD PTR [rax],eax
  411c70:	add    BYTE PTR [rax],dl
  411c72:	add    DWORD PTR [rax],eax
  411c74:	add    BYTE PTR [rax],dl
  411c76:	add    DWORD PTR [rax],eax
  411c78:	add    BYTE PTR [rax],dl
  411c7a:	add    DWORD PTR [rax],eax
  411c7c:	add    BYTE PTR [rax],dl
  411c7e:	add    DWORD PTR [rax],eax
  411c80:	add    BYTE PTR [rax],dl
  411c82:	add    DWORD PTR [rax],eax
  411c84:	rex.WXB
  411c85:	rex.RB push r10
  411c87:	rex.WRX
  411c88:	rex.RB
  411c89:	xor    r14,QWORD PTR [rdx]
  411c8c:	cs fs ins BYTE PTR es:[rdi],dx
  411c8f:	ins    BYTE PTR es:[rdi],dx
  411c90:	add    BYTE PTR [rax],al
  411c92:	add    BYTE PTR [rax],al
  411c94:	adc    al,0x10
  411c96:	add    DWORD PTR [rax],eax
  411c98:	adc    al,0x10
  411c9a:	add    DWORD PTR [rax],eax
  411c9c:	adc    al,0x10
  411c9e:	add    DWORD PTR [rax],eax
  411ca0:	adc    al,0x10
  411ca2:	add    DWORD PTR [rax],eax
  411ca4:	adc    al,0x10
  411ca6:	add    DWORD PTR [rax],eax
  411ca8:	adc    al,0x10
  411caa:	add    DWORD PTR [rax],eax
  411cac:	adc    al,0x10
  411cae:	add    DWORD PTR [rax],eax
  411cb0:	adc    al,0x10
  411cb2:	add    DWORD PTR [rax],eax
  411cb4:	adc    al,0x10
  411cb6:	add    DWORD PTR [rax],eax
  411cb8:	adc    al,0x10
  411cba:	add    DWORD PTR [rax],eax
  411cbc:	adc    al,0x10
  411cbe:	add    DWORD PTR [rax],eax
  411cc0:	adc    al,0x10
  411cc2:	add    DWORD PTR [rax],eax
  411cc4:	adc    al,0x10
  411cc6:	add    DWORD PTR [rax],eax
  411cc8:	adc    al,0x10
  411cca:	add    DWORD PTR [rax],eax
  411ccc:	adc    al,0x10
  411cce:	add    DWORD PTR [rax],eax
  411cd0:	adc    al,0x10
  411cd2:	add    DWORD PTR [rax],eax
  411cd4:	adc    al,0x10
  411cd6:	add    DWORD PTR [rax],eax
  411cd8:	adc    al,0x10
  411cda:	add    DWORD PTR [rax],eax
  411cdc:	adc    al,0x10
  411cde:	add    DWORD PTR [rax],eax
  411ce0:	adc    al,0x10
  411ce2:	add    DWORD PTR [rax],eax
  411ce4:	adc    al,0x10
  411ce6:	add    DWORD PTR [rax],eax
  411ce8:	adc    al,0x10
  411cea:	add    DWORD PTR [rax],eax
  411cec:	adc    al,0x10
  411cee:	add    DWORD PTR [rax],eax
  411cf0:	adc    al,0x10
  411cf2:	add    DWORD PTR [rax],eax
  411cf4:	adc    al,0x10
  411cf6:	add    DWORD PTR [rax],eax
  411cf8:	adc    al,0x10
  411cfa:	add    DWORD PTR [rax],eax
  411cfc:	adc    al,0x10
  411cfe:	add    DWORD PTR [rax],eax
  411d00:	adc    al,0x10
  411d02:	add    DWORD PTR [rax],eax
  411d04:	adc    al,0x10
  411d06:	add    DWORD PTR [rax],eax
  411d08:	adc    al,0x10
  411d0a:	add    DWORD PTR [rax],eax
  411d0c:	adc    al,0x10
  411d0e:	add    DWORD PTR [rax],eax
  411d10:	adc    al,0x10
  411d12:	add    DWORD PTR [rax],eax
  411d14:	adc    al,0x10
  411d16:	add    DWORD PTR [rax],eax
  411d18:	adc    al,0x10
  411d1a:	add    DWORD PTR [rax],eax
  411d1c:	adc    al,0x10
  411d1e:	add    DWORD PTR [rax],eax
  411d20:	adc    al,0x10
  411d22:	add    DWORD PTR [rax],eax
  411d24:	adc    al,0x10
  411d26:	add    DWORD PTR [rax],eax
  411d28:	adc    al,0x10
  411d2a:	add    DWORD PTR [rax],eax
  411d2c:	adc    al,0x10
  411d2e:	add    DWORD PTR [rax],eax
  411d30:	adc    al,0x10
  411d32:	add    DWORD PTR [rax],eax
  411d34:	adc    al,0x10
  411d36:	add    DWORD PTR [rax],eax
  411d38:	adc    al,0x10
  411d3a:	add    DWORD PTR [rax],eax
  411d3c:	adc    al,0x10
  411d3e:	add    DWORD PTR [rax],eax
  411d40:	adc    al,0x10
  411d42:	add    DWORD PTR [rax],eax
  411d44:	adc    al,0x10
  411d46:	add    DWORD PTR [rax],eax
  411d48:	adc    al,0x10
  411d4a:	add    DWORD PTR [rax],eax
  411d4c:	adc    al,0x10
  411d4e:	add    DWORD PTR [rax],eax
  411d50:	adc    al,0x10
  411d52:	add    DWORD PTR [rax],eax
  411d54:	adc    al,0x10
  411d56:	add    DWORD PTR [rax],eax
  411d58:	adc    al,0x10
  411d5a:	add    DWORD PTR [rax],eax
  411d5c:	adc    al,0x10
  411d5e:	add    DWORD PTR [rax],eax
  411d60:	adc    al,0x10
  411d62:	add    DWORD PTR [rax],eax
  411d64:	adc    al,0x10
  411d66:	add    DWORD PTR [rax],eax
  411d68:	adc    al,0x10
  411d6a:	add    DWORD PTR [rax],eax
  411d6c:	adc    al,0x10
  411d6e:	add    DWORD PTR [rax],eax
  411d70:	adc    al,0x10
  411d72:	add    DWORD PTR [rax],eax
  411d74:	adc    al,0x10
  411d76:	add    DWORD PTR [rax],eax
  411d78:	adc    al,0x10
  411d7a:	add    DWORD PTR [rax],eax
  411d7c:	adc    al,0x10
  411d7e:	add    DWORD PTR [rax],eax
  411d80:	adc    al,0x10
  411d82:	add    DWORD PTR [rax],eax
  411d84:	adc    al,0x10
  411d86:	add    DWORD PTR [rax],eax
  411d88:	adc    al,0x10
  411d8a:	add    DWORD PTR [rax],eax
  411d8c:	adc    al,0x10
  411d8e:	add    DWORD PTR [rax],eax
  411d90:	adc    al,0x10
  411d92:	add    DWORD PTR [rax],eax
  411d94:	adc    al,0x10
  411d96:	add    DWORD PTR [rax],eax
  411d98:	adc    al,0x10
  411d9a:	add    DWORD PTR [rax],eax
  411d9c:	adc    al,0x10
  411d9e:	add    DWORD PTR [rax],eax
  411da0:	adc    al,0x10
  411da2:	add    DWORD PTR [rax],eax
  411da4:	ins    DWORD PTR es:[rdi],dx
  411da5:	jae    0x411e1d
  411da7:	movsxd esi,DWORD PTR [rdx+0x74]
  411daa:	cs fs ins BYTE PTR es:[rdi],dx
  411dad:	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .CRT:

0000000000412000 <.CRT>:
	...
  412008:	(bad)  
  412009:	adc    DWORD PTR [rax+0x0],eax
	...
  412020:	adc    BYTE PTR [rax],dl
  412022:	add    BYTE PTR [rax],al
  412025:	add    BYTE PTR [rax],al
  412027:	add    BYTE PTR [rax+0x5f],dl
  41202a:	add    BYTE PTR [rax],al
	...
  41203d:	add    BYTE PTR [rax],al
  41203f:	add    BYTE PTR [rax+0x4061],al
  412045:	add    BYTE PTR [rax],al
  412047:	add    BYTE PTR [rax+0x61],dl
  41204a:	add    BYTE PTR [rax],al
	...

Disassembly of section .tls:

0000000000413000 <.tls>:
	...
  413020:	add    BYTE PTR [rax],dh
  413022:	add    BYTE PTR [r8],al
  413025:	add    BYTE PTR [rax],al
  413027:	add    BYTE PTR [rax+0x30],ah
  41302a:	add    BYTE PTR [r8],al
  41302d:	add    BYTE PTR [rax],al
  41302f:	add    BYTE PTR [rdi+rax*1],bl
  413032:	add    BYTE PTR [r8],al
  413035:	add    BYTE PTR [rax],al
  413037:	add    BYTE PTR [rax+0x20],al
  41303a:	add    BYTE PTR [r8],al
	...
