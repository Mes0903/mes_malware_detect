
5e3f8b7e643865d49cd9494de2b6fe96b46f9644b034e1f78857ea12a2b10a0c.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000402000 <.text>:
  402000:	rex.W add BYTE PTR [rax],al
  402003:	add    BYTE PTR [rdx],al
  402005:	add    BYTE PTR [rip+0x56d8800],al        # 0x5ada80b
  40200b:	add    BYTE PTR [rax-0x56],bl
  40200e:	add    BYTE PTR [rax],al
  402010:	or     DWORD PTR [rax],eax
  402012:	add    BYTE PTR [rax],al
  402014:	inc    DWORD PTR [rax]
  402016:	add    BYTE PTR [rsi],al
  402018:	add    BYTE PTR [rcx+0x0],bl
  40201b:	add    BYTE PTR [rax+0x50000514],cl
  402021:	and    BYTE PTR [rax],al
  402023:	add    BYTE PTR [rax+0x0],al
	...
  40204d:	add    BYTE PTR [rax],al
  40204f:	add    BYTE PTR [rdi+rsi*4],bl
  402052:	call   0xd0fddbb
  402057:	jmp    0x402084
  402059:	rcl    BYTE PTR [rdi],1
  40205b:	je     0x402070
  40205d:	retf   
  40205e:	cld    
  40205f:	adc    eax,0xc568dade
  402064:	sbb    bh,BYTE PTR [rbx-0x26]
  402067:	and    DWORD PTR [rdx+0x4a853429],edi
  40206d:	adc    BYTE PTR [rbp-0x65],bh
  402070:	imul   ebx,DWORD PTR ds:[rbx],0x6e136ed0
  402077:	(bad)  
  402078:	rex.WRB and al,0xa
  40207b:	add    BYTE PTR [rdi],0x88
  40207e:	push   rsp
  40207f:	(bad)  
  402080:	mov    BYTE PTR [rdi-0x30dcc15d],al
  402086:	xchg   edi,eax
  402087:	movabs al,ds:0x3570c431c7890333
  402090:	ret    0xcbff
  402093:	icebp  
  402094:	sbb    ebp,ecx
  402096:	(bad)  
  402097:	clc    
  402098:	rex.WB cmp BYTE PTR [r9],bpl
  40209b:	mov    ebp,0x3ddf366d
  4020a0:	xor    al,BYTE PTR [rax+0x2c601f98]
  4020a6:	mov    dl,0xa7
  4020a8:	fcom   st(2)
  4020aa:	jae    0x402057
  4020ac:	push   0xffffffffffffffd4
  4020ae:	lods   eax,DWORD PTR ds:[rsi]
  4020af:	mov    fs,ebp
  4020b1:	rex.RB push r9
  4020b3:	fdiv   QWORD PTR [rdx]
  4020b5:	(bad)  
  4020b6:	test   eax,0xdf9a1020
  4020bb:	hlt    
  4020bc:	sbb    eax,0x6dbc8cc9
  4020c1:	fimul  WORD PTR [rcx+rax*1-0x57c7c68f]
  4020c8:	(bad)  
  4020c9:	out    0x7f,al
  4020cb:	ret    0xb5ed
  4020ce:	inc    DWORD PTR [rdx+rbx*1+0x72]
  4020d2:	add    DWORD PTR [rax],eax
  4020d4:	add    BYTE PTR [rax+0x2a],dh
  4020d7:	(bad)  
  4020d8:	add    ch,BYTE PTR [rax]
  4020da:	adc    eax,DWORD PTR [rax]
  4020dc:	add    BYTE PTR [rdx],cl
  4020de:	sub    bl,BYTE PTR [rdx]
  4020e0:	sub    BYTE PTR [rbp+0x0],dl
  4020e3:	add    BYTE PTR [rsi],al
  4020e5:	sub    bl,BYTE PTR [rsi]
  4020e7:	add    ch,BYTE PTR [rax]
  4020e9:	push   rsi
  4020ea:	add    BYTE PTR [rax],al
  4020ec:	(bad)  
  4020ed:	sub    ch,BYTE PTR [rsi]
  4020ef:	jb     0x402120
  4020f1:	add    BYTE PTR [rax],al
  4020f3:	jo     0x40211d
  4020f5:	push   rdi
  4020f6:	add    BYTE PTR [rax],al
  4020f8:	(bad)  
  4020f9:	sub    ch,BYTE PTR [rsi]
  4020fb:	jb     0x402138
  4020fd:	add    BYTE PTR [rax],al
  4020ff:	jo     0x402129
  402101:	push   rdi
  402102:	add    BYTE PTR [rax],al
  402104:	(bad)  
  402105:	sub    ch,BYTE PTR [rsi]
  402107:	jb     0x402154
  402109:	add    BYTE PTR [rax],al
  40210b:	jo     0x402135
  40210d:	push   rdi
  40210e:	add    BYTE PTR [rax],al
  402110:	(bad)  
  402111:	sub    ch,BYTE PTR [rsi]
  402113:	jb     0x40217e
  402115:	add    BYTE PTR [rax],al
  402117:	jo     0x402141
  402119:	push   rdi
  40211a:	add    BYTE PTR [rax],al
  40211c:	(bad)  
  40211d:	sub    ch,BYTE PTR [rsi]
  40211f:	jb     0x4020ba
  402121:	add    BYTE PTR [rax],al
  402123:	jo     0x40214d
  402125:	push   rdi
  402126:	add    BYTE PTR [rax],al
  402128:	(bad)  
  402129:	sub    ch,BYTE PTR [rsi]
  40212b:	jb     0x4020da
  40212d:	add    BYTE PTR [rax],al
  40212f:	jo     0x402159
  402131:	push   rdi
  402132:	add    BYTE PTR [rax],al
  402134:	(bad)  
  402135:	sub    ch,BYTE PTR [rsi]
  402137:	jb     0x4020fe
  402139:	add    BYTE PTR [rax],al
  40213b:	jo     0x402165
  40213d:	push   rdi
  40213e:	add    BYTE PTR [rax],al
  402140:	(bad)  
  402141:	sub    ch,BYTE PTR [rsi]
  402143:	jb     0x402136
  402145:	add    BYTE PTR [rax],al
  402147:	jo     0x402171
  402149:	push   rdi
  40214a:	add    BYTE PTR [rax],al
  40214c:	(bad)  
  40214d:	sub    ch,BYTE PTR [rsi]
  40214f:	jb     0x402168
  402151:	add    DWORD PTR [rax],eax
  402153:	jo     0x40217d
  402155:	push   rdi
  402156:	add    BYTE PTR [rax],al
  402158:	(bad)  
  402159:	sub    ch,BYTE PTR [rsi]
  40215b:	jb     0x402196
  40215d:	add    DWORD PTR [rax],eax
  40215f:	jo     0x402189
  402161:	push   rdi
  402162:	add    BYTE PTR [rax],al
  402164:	(bad)  
  402165:	sub    ch,BYTE PTR [rsi]
  402167:	jb     0x4021bc
  402169:	add    DWORD PTR [rax],eax
  40216b:	jo     0x402195
  40216d:	push   rdi
  40216e:	add    BYTE PTR [rax],al
  402170:	(bad)  
  402171:	sub    ch,BYTE PTR [rsi]
  402173:	jb     0x4021e2
  402175:	add    DWORD PTR [rax],eax
  402177:	jo     0x4021a1
  402179:	push   rdi
  40217a:	add    BYTE PTR [rax],al
  40217c:	(bad)  
  40217d:	sub    ch,BYTE PTR [rsi]
  40217f:	jb     0x40211e
  402181:	add    DWORD PTR [rax],eax
  402183:	jo     0x4021ad
  402185:	push   rdi
  402186:	add    BYTE PTR [rax],al
  402188:	(bad)  
  402189:	sub    ch,BYTE PTR [rsi]
  40218b:	jb     0x402156
  40218d:	add    DWORD PTR [rax],eax
  40218f:	jo     0x4021b9
  402191:	push   rdi
  402192:	add    BYTE PTR [rax],al
  402194:	(bad)  
  402195:	sub    ch,BYTE PTR [rsi]
  402197:	jb     0x4021a4
  402199:	add    al,BYTE PTR [rax]
  40219b:	jo     0x4021c5
  40219d:	push   rdi
  40219e:	add    BYTE PTR [rax],al
  4021a0:	(bad)  
  4021a1:	sub    ch,BYTE PTR [rsi]
  4021a3:	jb     0x4021d6
  4021a5:	add    al,BYTE PTR [rax]
  4021a7:	jo     0x4021d1
  4021a9:	push   rdi
  4021aa:	add    BYTE PTR [rax],al
  4021ac:	(bad)  
  4021ad:	sub    ch,BYTE PTR [rsi]
  4021af:	jb     0x40221e
  4021b1:	add    al,BYTE PTR [rax]
  4021b3:	jo     0x4021dd
  4021b5:	push   rdi
  4021b6:	add    BYTE PTR [rax],al
  4021b8:	(bad)  
  4021b9:	sub    ch,BYTE PTR [rsi]
  4021bb:	jb     0x402148
  4021bd:	add    al,BYTE PTR [rax]
  4021bf:	jo     0x4021e9
  4021c1:	push   rdi
  4021c2:	add    BYTE PTR [rax],al
  4021c4:	(bad)  
  4021c5:	sub    ch,BYTE PTR [rsi]
  4021c7:	jb     0x402188
  4021c9:	add    al,BYTE PTR [rax]
  4021cb:	jo     0x4021f5
  4021cd:	push   rdi
  4021ce:	add    BYTE PTR [rax],al
  4021d0:	(bad)  
  4021d1:	sub    ch,BYTE PTR [rsi]
  4021d3:	jb     0x4021a6
  4021d5:	add    al,BYTE PTR [rax]
  4021d7:	jo     0x402201
  4021d9:	push   rdi
  4021da:	add    BYTE PTR [rax],al
  4021dc:	(bad)  
  4021dd:	sub    ch,BYTE PTR [rsi]
  4021df:	jb     0x4021da
  4021e1:	add    al,BYTE PTR [rax]
  4021e3:	jo     0x40220d
  4021e5:	push   rdi
  4021e6:	add    BYTE PTR [rax],al
  4021e8:	(bad)  
  4021e9:	sub    ch,BYTE PTR [rsi]
  4021eb:	jb     0x4021f8
  4021ed:	add    eax,DWORD PTR [rax]
  4021ef:	jo     0x402219
  4021f1:	push   rdi
  4021f2:	add    BYTE PTR [rax],al
  4021f4:	(bad)  
  4021f5:	sub    ch,BYTE PTR [rsi]
  4021f7:	jb     0x40222c
  4021f9:	add    eax,DWORD PTR [rax]
  4021fb:	jo     0x402225
  4021fd:	push   rdi
  4021fe:	add    BYTE PTR [rax],al
  402200:	(bad)  
  402201:	sub    ch,BYTE PTR [rsi]
  402203:	jb     0x402262
  402205:	add    eax,DWORD PTR [rax]
  402207:	jo     0x402231
  402209:	push   rdi
  40220a:	add    BYTE PTR [rax],al
  40220c:	(bad)  
  40220d:	sub    ch,BYTE PTR [rsi]
  40220f:	jb     0x4021ae
  402211:	add    eax,DWORD PTR [rax]
  402213:	jo     0x40223d
  402215:	push   rdi
  402216:	add    BYTE PTR [rax],al
  402218:	(bad)  
  402219:	sub    ch,BYTE PTR [rsi]
  40221b:	jb     0x4021dc
  40221d:	add    eax,DWORD PTR [rax]
  40221f:	jo     0x402249
  402221:	push   rdi
  402222:	add    BYTE PTR [rax],al
  402224:	(bad)  
  402225:	sub    ch,BYTE PTR [rsi]
  402227:	jb     0x4021f8
  402229:	add    eax,DWORD PTR [rax]
  40222b:	jo     0x402255
  40222d:	push   rdi
  40222e:	add    BYTE PTR [rax],al
  402230:	(bad)  
  402231:	sub    ch,BYTE PTR [rsi]
  402233:	jb     0x40222a
  402235:	add    eax,DWORD PTR [rax]
  402237:	jo     0x402261
  402239:	push   rdi
  40223a:	add    BYTE PTR [rax],al
  40223c:	(bad)  
  40223d:	sub    ch,BYTE PTR [rsi]
  40223f:	jb     0x402246
  402241:	add    al,0x0
  402243:	jo     0x40226d
  402245:	push   rdi
  402246:	add    BYTE PTR [rax],al
  402248:	(bad)  
  402249:	sub    ch,BYTE PTR [rsi]
  40224b:	jb     0x402278
  40224d:	add    al,0x0
  40224f:	jo     0x402279
  402251:	push   rdi
  402252:	add    BYTE PTR [rax],al
  402254:	(bad)  
  402255:	sub    ch,BYTE PTR [rsi]
  402257:	jb     0x4022a4
  402259:	add    al,0x0
  40225b:	jo     0x402285
  40225d:	push   rdi
  40225e:	add    BYTE PTR [rax],al
  402260:	(bad)  
  402261:	sub    ch,BYTE PTR [rsi]
  402263:	jb     0x4021e6
  402265:	add    al,0x0
  402267:	jo     0x402291
  402269:	push   rdi
  40226a:	add    BYTE PTR [rax],al
  40226c:	(bad)  
  40226d:	sub    ch,BYTE PTR [rsi]
  40226f:	jb     0x40221a
  402271:	add    al,0x0
  402273:	jo     0x40229d
  402275:	push   rdi
  402276:	add    BYTE PTR [rax],al
  402278:	(bad)  
  402279:	sub    ch,BYTE PTR [rsi]
  40227b:	jb     0x402264
  40227d:	add    al,0x0
  40227f:	jo     0x4022a9
  402281:	push   rdi
  402282:	add    BYTE PTR [rax],al
  402284:	(bad)  
  402285:	sub    ch,BYTE PTR [rsi]
  402287:	jb     0x402290
  402289:	add    eax,0x57287000
  40228e:	add    BYTE PTR [rax],al
  402290:	(bad)  
  402291:	sub    ch,BYTE PTR [rsi]
  402293:	jb     0x4022ba
  402295:	add    eax,0x57287000
  40229a:	add    BYTE PTR [rax],al
  40229c:	(bad)  
  40229d:	sub    ch,BYTE PTR [rsi]
  40229f:	jb     0x4022fa
  4022a1:	add    eax,0x57287000
  4022a6:	add    BYTE PTR [rax],al
  4022a8:	(bad)  
  4022a9:	sub    ch,BYTE PTR [rsi]
  4022ab:	jb     0x402314
  4022ad:	add    eax,0x57287000
  4022b2:	add    BYTE PTR [rax],al
  4022b4:	(bad)  
  4022b5:	sub    ch,BYTE PTR [rsi]
  4022b7:	jb     0x402244
  4022b9:	add    eax,0x57287000
  4022be:	add    BYTE PTR [rax],al
  4022c0:	(bad)  
  4022c1:	sub    ch,BYTE PTR [rsi]
  4022c3:	jb     0x402264
  4022c5:	add    eax,0x57287000
  4022ca:	add    BYTE PTR [rax],al
  4022cc:	(bad)  
  4022cd:	sub    ch,BYTE PTR [rsi]
  4022cf:	jb     0x402290
  4022d1:	add    eax,0x57287000
  4022d6:	add    BYTE PTR [rax],al
  4022d8:	(bad)  
  4022d9:	sub    ch,BYTE PTR [rsi]
  4022db:	jb     0x4022d2
  4022dd:	add    eax,0x57287000
  4022e2:	add    BYTE PTR [rax],al
  4022e4:	(bad)  
  4022e5:	sub    ch,BYTE PTR [rsi]
  4022e7:	jb     0x4022f8
  4022e9:	(bad)  
  4022ea:	add    BYTE PTR [rax+0x28],dh
  4022ed:	push   rdi
  4022ee:	add    BYTE PTR [rax],al
  4022f0:	(bad)  
  4022f1:	sub    ch,BYTE PTR [rsi]
  4022f3:	jb     0x402334
  4022f5:	(bad)  
  4022f6:	add    BYTE PTR [rax+0x28],dh
  4022f9:	push   rdi
  4022fa:	add    BYTE PTR [rax],al
  4022fc:	(bad)  
  4022fd:	sub    ch,BYTE PTR [rsi]
  4022ff:	jb     0x40235c
  402301:	(bad)  
  402302:	add    BYTE PTR [rax+0x28],dh
  402305:	push   rdi
  402306:	add    BYTE PTR [rax],al
  402308:	(bad)  
  402309:	sub    ch,BYTE PTR [rsi]
  40230b:	jb     0x402378
  40230d:	(bad)  
  40230e:	add    BYTE PTR [rax+0x28],dh
  402311:	push   rdi
  402312:	add    BYTE PTR [rax],al
  402314:	(bad)  
  402315:	sub    ch,BYTE PTR [rsi]
  402317:	jb     0x4022aa
  402319:	(bad)  
  40231a:	add    BYTE PTR [rax+0x28],dh
  40231d:	push   rdi
  40231e:	add    BYTE PTR [rax],al
  402320:	(bad)  
  402321:	sub    ch,BYTE PTR [rsi]
  402323:	jb     0x4022cc
  402325:	(bad)  
  402326:	add    BYTE PTR [rax+0x28],dh
  402329:	push   rdi
  40232a:	add    BYTE PTR [rax],al
  40232c:	(bad)  
  40232d:	sub    ch,BYTE PTR [rsi]
  40232f:	jb     0x402304
  402331:	(bad)  
  402332:	add    BYTE PTR [rax+0x28],dh
  402335:	push   rdi
  402336:	add    BYTE PTR [rax],al
  402338:	(bad)  
  402339:	sub    ch,BYTE PTR [rsi]
  40233b:	jb     0x40232a
  40233d:	(bad)  
  40233e:	add    BYTE PTR [rax+0x28],dh
  402341:	push   rdi
  402342:	add    BYTE PTR [rax],al
  402344:	(bad)  
  402345:	sub    ch,BYTE PTR [rsi]
  402347:	jb     0x402366
  402349:	(bad)  
  40234a:	add    BYTE PTR [rax+0x28],dh
  40234d:	push   rdi
  40234e:	add    BYTE PTR [rax],al
  402350:	(bad)  
  402351:	sub    ch,BYTE PTR [rsi]
  402353:	jb     0x40238a
  402355:	(bad)  
  402356:	add    BYTE PTR [rax+0x28],dh
  402359:	push   rdi
  40235a:	add    BYTE PTR [rax],al
  40235c:	(bad)  
  40235d:	sub    ch,BYTE PTR [rsi]
  40235f:	jb     0x4023c4
  402361:	(bad)  
  402362:	add    BYTE PTR [rax+0x28],dh
  402365:	push   rdi
  402366:	add    BYTE PTR [rax],al
  402368:	(bad)  
  402369:	sub    ch,BYTE PTR [rsi]
  40236b:	jb     0x4023e2
  40236d:	(bad)  
  40236e:	add    BYTE PTR [rax+0x28],dh
  402371:	push   rdi
  402372:	add    BYTE PTR [rax],al
  402374:	(bad)  
  402375:	sub    ch,BYTE PTR [rsi]
  402377:	jb     0x402316
  402379:	(bad)  
  40237a:	add    BYTE PTR [rax+0x28],dh
  40237d:	push   rdi
  40237e:	add    BYTE PTR [rax],al
  402380:	(bad)  
  402381:	sub    ch,BYTE PTR [rsi]
  402383:	jb     0x402342
  402385:	(bad)  
  402386:	add    BYTE PTR [rax+0x28],dh
  402389:	push   rdi
  40238a:	add    BYTE PTR [rax],al
  40238c:	(bad)  
  40238d:	sub    ch,BYTE PTR [rsi]
  40238f:	jb     0x402384
  402391:	(bad)  
  402392:	add    BYTE PTR [rax+0x28],dh
  402395:	push   rdi
  402396:	add    BYTE PTR [rax],al
  402398:	(bad)  
  402399:	sub    ch,BYTE PTR [rsi]
  40239b:	jb     0x4023ba
  40239d:	or     BYTE PTR [rax],al
  40239f:	jo     0x4023c9
  4023a1:	push   rdi
  4023a2:	add    BYTE PTR [rax],al
  4023a4:	(bad)  
  4023a5:	sub    ch,BYTE PTR [rsi]
  4023a7:	jb     0x402406
  4023a9:	or     BYTE PTR [rax],al
  4023ab:	jo     0x4023d5
  4023ad:	push   rdi
  4023ae:	add    BYTE PTR [rax],al
  4023b0:	(bad)  
  4023b1:	sub    ch,BYTE PTR [rsi]
  4023b3:	jb     0x402426
  4023b5:	or     BYTE PTR [rax],al
  4023b7:	jo     0x4023e1
  4023b9:	push   rdi
  4023ba:	add    BYTE PTR [rax],al
  4023bc:	(bad)  
  4023bd:	sub    ch,BYTE PTR [rsi]
  4023bf:	jb     0x40235c
  4023c1:	or     BYTE PTR [rax],al
  4023c3:	jo     0x4023ed
  4023c5:	push   rdi
  4023c6:	add    BYTE PTR [rax],al
  4023c8:	(bad)  
  4023c9:	sub    ch,BYTE PTR [rsi]
  4023cb:	jb     0x402380
  4023cd:	or     BYTE PTR [rax],al
  4023cf:	jo     0x4023f9
  4023d1:	push   rdi
  4023d2:	add    BYTE PTR [rax],al
  4023d4:	(bad)  
  4023d5:	sub    ch,BYTE PTR [rsi]
  4023d7:	jb     0x4023ba
  4023d9:	or     BYTE PTR [rax],al
  4023db:	jo     0x402405
  4023dd:	push   rdi
  4023de:	add    BYTE PTR [rax],al
  4023e0:	(bad)  
  4023e1:	sub    ch,BYTE PTR [rsi]
  4023e3:	jb     0x4023e0
  4023e5:	or     BYTE PTR [rax],al
  4023e7:	jo     0x402411
  4023e9:	push   rdi
  4023ea:	add    BYTE PTR [rax],al
  4023ec:	(bad)  
  4023ed:	sub    ch,BYTE PTR [rsi]
  4023ef:	jb     0x402426
  4023f1:	or     DWORD PTR [rax],eax
  4023f3:	jo     0x40241d
  4023f5:	push   rdi
  4023f6:	add    BYTE PTR [rax],al
  4023f8:	(bad)  
  4023f9:	sub    ch,BYTE PTR [rsi]
  4023fb:	jb     0x402382
  4023fd:	or     DWORD PTR [rax],eax
  4023ff:	jo     0x402429
  402401:	push   rdi
  402402:	add    BYTE PTR [rax],al
  402404:	(bad)  
  402405:	sub    ch,BYTE PTR [rsi]
  402407:	jb     0x4023ca
  402409:	or     DWORD PTR [rax],eax
  40240b:	jo     0x402435
  40240d:	push   rdi
  40240e:	add    BYTE PTR [rax],al
  402410:	(bad)  
  402411:	sub    ch,BYTE PTR [rsi]
  402413:	jb     0x402428
  402415:	or     al,BYTE PTR [rax]
  402417:	jo     0x402441
  402419:	push   rdi
  40241a:	add    BYTE PTR [rax],al
  40241c:	(bad)  
  40241d:	sub    ch,BYTE PTR [rsi]
  40241f:	jb     0x402452
  402421:	or     al,BYTE PTR [rax]
  402423:	jo     0x40244d
  402425:	push   rdi
  402426:	add    BYTE PTR [rax],al
  402428:	(bad)  
  402429:	sub    ch,BYTE PTR [rsi]
  40242b:	jb     0x402492
  40242d:	or     al,BYTE PTR [rax]
  40242f:	jo     0x402459
  402431:	push   rdi
  402432:	add    BYTE PTR [rax],al
  402434:	(bad)  
  402435:	sub    ch,BYTE PTR [rsi]
  402437:	jb     0x4024ae
  402439:	or     al,BYTE PTR [rax]
  40243b:	jo     0x402465
  40243d:	push   rdi
  40243e:	add    BYTE PTR [rax],al
  402440:	(bad)  
  402441:	sub    ch,BYTE PTR [rsi]
  402443:	jb     0x4023e0
  402445:	or     al,BYTE PTR [rax]
  402447:	jo     0x402471
  402449:	push   rdi
  40244a:	add    BYTE PTR [rax],al
  40244c:	(bad)  
  40244d:	sub    ch,BYTE PTR [rsi]
  40244f:	jb     0x402402
  402451:	or     al,BYTE PTR [rax]
  402453:	jo     0x40247d
  402455:	push   rdi
  402456:	add    BYTE PTR [rax],al
  402458:	(bad)  
  402459:	sub    ch,BYTE PTR [rsi]
  40245b:	jb     0x40243a
  40245d:	or     al,BYTE PTR [rax]
  40245f:	jo     0x402489
  402461:	push   rdi
  402462:	add    BYTE PTR [rax],al
  402464:	(bad)  
  402465:	sub    ch,BYTE PTR [rsi]
  402467:	jb     0x402470
  402469:	or     eax,DWORD PTR [rax]
  40246b:	jo     0x402495
  40246d:	push   rdi
  40246e:	add    BYTE PTR [rax],al
  402470:	(bad)  
  402471:	sub    ch,BYTE PTR [rsi]
  402473:	jb     0x4024bc
  402475:	or     eax,DWORD PTR [rax]
  402477:	jo     0x4024a1
  402479:	push   rdi
  40247a:	add    BYTE PTR [rax],al
  40247c:	(bad)  
  40247d:	sub    ch,BYTE PTR [rsi]
  40247f:	jb     0x4024e6
  402481:	or     eax,DWORD PTR [rax]
  402483:	jo     0x4024ad
  402485:	push   rdi
  402486:	add    BYTE PTR [rax],al
  402488:	(bad)  
  402489:	sub    dh,BYTE PTR [rdx]
  40248b:	jb     0x402426
  40248d:	or     eax,DWORD PTR [rax]
  40248f:	jo     0x402493
  402491:	sub    BYTE PTR [rax+0x0],bl
  402494:	add    BYTE PTR [rsi],al
  402496:	sub    dh,BYTE PTR [rdx]
  402498:	jb     0x40245d
  40249a:	or     eax,DWORD PTR [rax]
  40249c:	jo     0x4024a0
  40249e:	sub    BYTE PTR [rax+0x0],bl
  4024a1:	add    BYTE PTR [rsi],al
  4024a3:	sub    bl,BYTE PTR [rsi]
  4024a5:	add    ch,BYTE PTR [rax]
  4024a7:	adc    eax,DWORD PTR [rax]
  4024a9:	add    BYTE PTR [rdx],cl
  4024ab:	sub    bl,BYTE PTR [rdx]
  4024ad:	jle    0x40250d
  4024af:	add    BYTE PTR [rax],al
  4024b1:	add    al,0x2a
  4024b3:	(bad)  
  4024b4:	add    al,BYTE PTR [rax+0x400005e]
  4024ba:	sub    al,BYTE PTR [rsi+0x7e]
  4024bd:	pop    rbp
  4024be:	add    BYTE PTR [rax],al
  4024c0:	add    al,0x2
  4024c2:	jle    0x402522
  4024c4:	add    BYTE PTR [rax],al
  4024c6:	add    al,0x6f
  4024c8:	adc    al,0x0
  4024ca:	add    BYTE PTR [rdx],cl
  4024cc:	sub    al,BYTE PTR [rax]
  4024ce:	add    BYTE PTR [rax],al
  4024d0:	adc    esi,DWORD PTR [rax]
  4024d2:	add    eax,0x2700
  4024d7:	add    BYTE PTR [rcx],al
  4024d9:	add    BYTE PTR [rax],al
  4024db:	adc    DWORD PTR [rax],ebp
  4024dd:	adc    eax,0x7e0a0000
  4024e2:	pop    rbp
  4024e3:	add    BYTE PTR [rax],al
  4024e5:	add    al,0x2
  4024e7:	jle    0x402547
  4024e9:	add    BYTE PTR [rax],al
  4024eb:	add    al,0x6f
  4024ed:	adc    al,0x0
  4024ef:	add    BYTE PTR [rdx],cl
  4024f1:	(bad)  
  4024f2:	lea    eax,[rcx]
  4024f4:	add    BYTE PTR [rax],al
  4024f6:	add    DWORD PTR [rdx],ecx
  4024f8:	(bad)  
  4024f9:	(bad)  
  4024fa:	add    esp,DWORD PTR [rdx+0x162806]
  402500:	add    BYTE PTR [rdx],cl
  402502:	sub    dl,dl
  402504:	rol    BYTE PTR [rbx],1
  402506:	add    BYTE PTR [rax],al
  402508:	add    ch,BYTE PTR [rax]
  40250a:	(bad)  
  40250b:	add    BYTE PTR [rax],al
  40250d:	or     ch,BYTE PTR [rdi+0x18]
  402510:	add    BYTE PTR [rax],al
  402512:	or     dl,al
  402514:	add    eax,DWORD PTR [rax]
  402516:	add    BYTE PTR [rdx],al
  402518:	sub    BYTE PTR [rdi],dl
  40251a:	add    BYTE PTR [rax],al
  40251c:	or     ch,BYTE PTR [rdi+0x19]
  40251f:	add    BYTE PTR [rax],al
  402521:	or     ch,BYTE PTR [rdi+0x1a]
  402524:	add    BYTE PTR [rax],al
  402526:	or     dh,BYTE PTR [rbx+0x1b]
  402529:	add    BYTE PTR [rax],al
  40252b:	or     al,BYTE PTR [rax+0x400005d]
  402531:	adc    al,0x80
  402533:	pop    rsi
  402534:	add    BYTE PTR [rax],al
  402536:	add    al,0x2a
  402538:	sbb    bh,BYTE PTR [rsi+0x5f]
  40253b:	add    BYTE PTR [rax],al
  40253d:	add    al,0x2a
  40253f:	rex.RX add r14b,BYTE PTR [rdx-0x21]
  402543:	or     eax,DWORD PTR [rax]
  402545:	jo     0x4025b6
  402547:	sbb    eax,0xa50a0000
  40254c:	(bad)  
  40254d:	add    BYTE PTR [rax],al
  40254f:	add    ch,BYTE PTR [rdx]
  402551:	rex.WX add sil,BYTE PTR [rdx-0x21]
  402555:	or     eax,DWORD PTR [rax]
  402557:	jo     0x40255c
  402559:	mov    WORD PTR [rsi],cs
  40255b:	add    BYTE PTR [rax],al
  40255d:	add    ch,BYTE PTR [rdi+0x1e]
  402560:	add    BYTE PTR [rax],al
  402562:	or     ch,BYTE PTR [rdx]
  402564:	(bad)  
  402565:	add    ch,BYTE PTR [rax]
  402567:	(bad)  
  402568:	add    BYTE PTR [rax],al
  40256a:	or     ch,BYTE PTR [rdx]
  40256c:	(bad)  
  40256d:	sub    al,BYTE PTR [rsi]
  40256f:	sub    dl,BYTE PTR [rsi+0x73]
  402572:	pop    rbp
  402573:	add    BYTE PTR [rax],al
  402575:	(bad)  
  402576:	sub    BYTE PTR [rax],ah
  402578:	add    BYTE PTR [rax],al
  40257a:	or     dh,BYTE PTR [rbp+rax*1+0x0]
  40257e:	add    BYTE PTR [rdx],al
  402580:	sbb    BYTE PTR [rdi+0x0],0x0
  402584:	add    al,0x2a
  402586:	(bad)  
  402588:	add    bh,BYTE PTR [rbx+0x63]
  40258b:	add    BYTE PTR [rax],al
  40258d:	add    al,0x3
  40258f:	sub    BYTE PTR [rax+rax*1],ah
  402592:	add    BYTE PTR [rdx],cl
  402594:	je     0x4025a8
  402596:	add    BYTE PTR [rax],al
  402598:	add    DWORD PTR [rbp+0x63],edi
  40259b:	add    BYTE PTR [rax],al
  40259d:	add    al,0x2a
  40259f:	(bad)  
  4025a1:	add    bh,BYTE PTR [rbx+0x63]
  4025a4:	add    BYTE PTR [rax],al
  4025a6:	add    al,0x3
  4025a8:	sub    BYTE PTR [rip+0x740a0000],ah        # 0x744a25ae
  4025ae:	adc    al,BYTE PTR [rax]
  4025b0:	add    BYTE PTR [rcx],al
  4025b2:	jge    0x402617
  4025b4:	add    BYTE PTR [rax],al
  4025b6:	add    al,0x2a
  4025b8:	(bad)  
  4025b9:	add    bh,BYTE PTR [rbx+0x61]
  4025bc:	add    BYTE PTR [rax],al
  4025be:	add    al,0x2a
  4025c0:	jbe    0x4025c4
  4025c2:	jnp    0x402625
  4025c4:	add    BYTE PTR [rax],al
  4025c6:	add    al,0x3
  4025c8:	xor    eax,DWORD PTR [rcx]
  4025ca:	sub    al,BYTE PTR [rdx]
  4025cc:	add    edi,DWORD PTR [rbp+0x61]
  4025cf:	add    BYTE PTR [rax],al
  4025d1:	add    al,0x2
  4025d3:	jb     0x4025d4
  4025d5:	or     eax,DWORD PTR [rax]
  4025d7:	jo     0x402601
  4025d9:	push   0x2a060000
  4025de:	(bad)  
  4025df:	add    bh,BYTE PTR [rbx+0x62]
  4025e2:	add    BYTE PTR [rax],al
  4025e4:	add    al,0x2a
  4025e6:	jbe    0x4025ea
  4025e8:	jnp    0x40264c
  4025ea:	add    BYTE PTR [rax],al
  4025ec:	add    al,0x3
  4025ee:	xor    eax,DWORD PTR [rcx]
  4025f0:	sub    al,BYTE PTR [rdx]
  4025f2:	add    edi,DWORD PTR [rbp+0x62]
  4025f5:	add    BYTE PTR [rax],al
  4025f7:	add    al,0x2
  4025f9:	jb     0x40260a
  4025fb:	or     al,0x0
  4025fd:	jo     0x402627
  4025ff:	push   0x2a060000
  402604:	outs   dx,BYTE PTR ds:[rsi]
  402605:	add    bh,BYTE PTR [rbx+0x63]
  402608:	add    BYTE PTR [rax],al
  40260a:	add    al,0x2c
  40260c:	adc    al,BYTE PTR [rdx]
  40260e:	jnp    0x402673
  402610:	add    BYTE PTR [rax],al
  402612:	add    al,0x2
  402614:	add    esi,DWORD PTR [rbx+0x26]
  402617:	add    BYTE PTR [rax],al
  402619:	or     ch,BYTE PTR [rdi+0x27]
  40261c:	add    BYTE PTR [rax],al
  40261e:	or     ch,BYTE PTR [rdx]
  402620:	cmp    al,BYTE PTR [rdx]
  402622:	and    eax,0x6707fe
  402627:	add    BYTE PTR [rsi],al
  402629:	jae    0x402653
  40262b:	add    BYTE PTR [rax],al
  40262d:	or     ch,BYTE PTR [rdx]
  40262f:	cs jae 0x40269e
  402632:	add    BYTE PTR [rax],al
  402634:	(bad)  
  402635:	and    BYTE PTR [rax+0x0],0x0
  402639:	add    al,0x2a
  40263b:	push   rsi
  40263c:	add    dl,BYTE PTR [rdi]
  40263e:	jge    0x4026a1
  402640:	add    BYTE PTR [rax],al
  402642:	add    al,0x2
  402644:	(bad)  
  402645:	jge    0x4026a9
  402647:	add    BYTE PTR [rax],al
  402649:	add    al,0x2
  40264b:	sub    BYTE PTR [rbx],dl
  40264d:	add    BYTE PTR [rax],al
  40264f:	or     ch,BYTE PTR [rdx]
  402651:	cmp    al,BYTE PTR [rdx]
  402653:	sub    BYTE PTR [rdx+0x0],ch
  402656:	add    BYTE PTR [rsi],al
  402658:	add    dl,BYTE PTR [rsi]
  40265a:	sub    BYTE PTR [rsi+0x0],ah
  40265d:	add    BYTE PTR [rsi],al
  40265f:	sub    al,BYTE PTR [rsi]
  402661:	sub    bl,BYTE PTR [rdx]
  402663:	jle    0x4026c9
  402665:	add    BYTE PTR [rax],al
  402667:	add    al,0x2a
  402669:	sbb    bh,BYTE PTR [rsi+0x65]
  40266c:	add    BYTE PTR [rax],al
  40266e:	add    al,0x2a
  402670:	sbb    bh,BYTE PTR [rsi+0x66]
  402673:	add    BYTE PTR [rax],al
  402675:	add    al,0x2a
  402677:	cs jle 0x4026e2
  40267a:	add    BYTE PTR [rax],al
  40267c:	add    al,0x6f
  40267e:	sub    DWORD PTR [rax],eax
  402680:	add    BYTE PTR [rdx],cl
  402682:	sub    bl,BYTE PTR [rdx]
  402684:	jle    0x4026ef
  402686:	add    BYTE PTR [rax],al
  402688:	add    al,0x2a
  40268a:	add    BYTE PTR [rax],al
  40268c:	add    esi,DWORD PTR [rax]
  40268e:	add    al,0x0
  402690:	rex.RX add BYTE PTR [rax],r8b
  402693:	add    BYTE PTR [rax],al
  402695:	add    BYTE PTR [rax],al
  402697:	add    BYTE PTR [rbx+0x2a],dh
  40269a:	add    BYTE PTR [rax],al
  40269c:	or     al,BYTE PTR [rax+0x4000064]
  4026a2:	adc    al,0x80
  4026a4:	add    BYTE PTR gs:[rax],al
  4026a7:	add    al,0x14
  4026a9:	and    BYTE PTR [rsi+0x0],0x0
  4026ad:	add    al,0x73
  4026af:	sub    eax,DWORD PTR [rax]
  4026b1:	add    BYTE PTR [rdx],cl
  4026b3:	and    BYTE PTR [rdi+0x0],0x0
  4026b7:	add    al,0x7e
  4026b9:	add    BYTE PTR [eax],al
  4026bc:	add    al,0x28
  4026be:	(bad)  
  4026bf:	add    BYTE PTR [rax],al
  4026c1:	(bad)  
  4026c2:	outs   dx,DWORD PTR ds:[rsi]
  4026c3:	sub    al,0x0
  4026c5:	add    BYTE PTR [rdx],cl
  4026c7:	jle    0x402730
  4026c9:	add    BYTE PTR [rax],al
  4026cb:	add    al,0x14
  4026cd:	inc    BYTE PTR [rsi]
  4026cf:	jnp    0x4026d1
  4026d1:	add    BYTE PTR [rsi],al
  4026d3:	jae    0x402702
  4026d5:	add    BYTE PTR [rax],al
  4026d7:	or     ch,BYTE PTR [rdi+0x2e]
  4026da:	add    BYTE PTR [rax],al
  4026dc:	or     ch,BYTE PTR [rdx]
  4026de:	out    0x2,al
  4026e0:	sub    BYTE PTR [rdi],ch
  4026e2:	add    BYTE PTR [rax],al
  4026e4:	or     al,BYTE PTR [rdx]
  4026e6:	sub    BYTE PTR [rax+0x0],0x0
  4026ea:	add    al,0x28
  4026ec:	outs   dx,BYTE PTR ds:[rsi]
  4026ed:	add    BYTE PTR [rax],al
  4026ef:	(bad)  
  4026f0:	add    ebp,DWORD PTR [rdi+0x30]
  4026f3:	add    BYTE PTR [rax],al
  4026f5:	or     al,BYTE PTR [rax+rax*4]
  4026f8:	add    BYTE PTR gs:[rax],al
  4026fb:	add    al,0x5
  4026fd:	and    BYTE PTR [rsi+0x0],0x0
  402701:	add    al,0x2
  402703:	jae    0x402689
  402705:	add    BYTE PTR [rax],al
  402707:	(bad)  
  402708:	sub    BYTE PTR [rcx],dh
  40270a:	add    BYTE PTR [rax],al
  40270c:	or     ch,BYTE PTR [rax]
  40270e:	xor    al,BYTE PTR [rax]
  402710:	add    BYTE PTR [rdx],cl
  402712:	sub    BYTE PTR [rcx+0x0],0x0
  402716:	add    al,0x2a
  402718:	and    al,BYTE PTR [rdx]
  40271a:	(bad)  
  40271b:	sub    BYTE PTR [rsi+0x0],dh
  40271e:	add    BYTE PTR [rsi],al
  402720:	sub    dh,BYTE PTR [rsi]
  402722:	add    ch,BYTE PTR [rax]
  402724:	add    eax,0x3060000
  402729:	sub    BYTE PTR [rdi+0x0],dh
  40272c:	add    BYTE PTR [rsi],al
  40272e:	sub    al,BYTE PTR [rdx+0x28]
  402731:	jno    0x402733
  402733:	add    BYTE PTR [rsi],al
  402735:	add    al,BYTE PTR [rbx]
  402737:	add    al,0x1f
  402739:	adc    BYTE PTR [rax],ch
  40273b:	xor    eax,DWORD PTR [rax]
  40273d:	add    BYTE PTR [rdx],cl
  40273f:	sub    bl,BYTE PTR [rbx]
  402741:	xor    BYTE PTR [rbx],al
  402743:	add    BYTE PTR [rsi+0x2000000],bl
  402749:	add    BYTE PTR [rax],al
  40274b:	adc    DWORD PTR [rsi],edx
  40274d:	or     bh,BYTE PTR [rax]
  40274f:	mov    WORD PTR [rax],es
  402751:	add    BYTE PTR [rax],al
  402753:	jle    0x4027bc
  402755:	add    BYTE PTR [rax],al
  402757:	add    al,0x6f
  402759:	xor    al,0x0
  40275b:	add    BYTE PTR [rdx],cl
  40275d:	or     al,BYTE PTR [rsi]
  40275f:	(bad)  
  402760:	xor    edi,DWORD PTR [rbp+0x28]
  402763:	outs   dx,BYTE PTR ds:[rsi]
  402764:	add    BYTE PTR [rax],al
  402766:	(bad)  
  402767:	jle    0x4027d0
  402769:	add    BYTE PTR [rax],al
  40276b:	add    al,0x6f
  40276d:	xor    eax,0x6f0a0000
  402772:	xor    BYTE PTR [rax],al
  402774:	add    BYTE PTR [rdx],cl
  402776:	sub    BYTE PTR [rsi+0x0],ch
  402779:	add    BYTE PTR [rsi],al
  40277b:	outs   dx,DWORD PTR ds:[rsi]
  40277c:	add    BYTE PTR ss:[rax],al
  40277f:	or     ch,BYTE PTR [rsp+rax*1]
  402782:	(bad)  
  402783:	or     eax,0x1f7262de
  402788:	or     al,0x0
  40278a:	jo     0x402797
  40278c:	jle    0x4027f5
  40278e:	add    BYTE PTR [rax],al
  402790:	add    al,0x6f
  402792:	xor    eax,0x7e0a0000
  402797:	(bad)  
  402798:	add    BYTE PTR [rax],al
  40279a:	or     bl,BYTE PTR [rbx]
  40279c:	sub    BYTE PTR [rax],bh
  40279e:	add    BYTE PTR [rax],al
  4027a0:	or     ch,BYTE PTR [rax+rcx*1]
  4027a3:	sub    BYTE PTR [rip+0xb060000],cl        # 0xb4627a9
  4027a9:	sub    edx,DWORD PTR [rax]
  4027ab:	jle    0x402814
  4027ad:	add    BYTE PTR [rax],al
  4027af:	add    al,0x6f
  4027b1:	xor    eax,0x280a0000
  4027b6:	push   rdx
  4027b7:	add    BYTE PTR [rax],al
  4027b9:	(bad)  
  4027ba:	or     eax,DWORD PTR [rdi]
  4027bc:	sub    BYTE PTR [rip+0x1b060000],al        # 0x1b4627c2
  4027c2:	sub    BYTE PTR [rdi+0x0],dh
  4027c5:	add    BYTE PTR [rsi],al
  4027c7:	or     bl,dh
  4027c9:	adc    eax,0x396f080c
  4027ce:	add    BYTE PTR [rax],al
  4027d0:	or     ch,BYTE PTR [rax]
  4027d2:	add    eax,0x1b060000
  4027d7:	sub    BYTE PTR [rdi+0x0],dh
  4027da:	add    BYTE PTR [rsi],al
  4027dc:	or     bl,dh
  4027de:	add    BYTE PTR [rsi],al
  4027e0:	sbb    BYTE PTR [rax+0x6d],al
  4027e3:	(bad)  
  4027e4:	(bad)  
  4027e5:	call   QWORD PTR [rsi]
  4027e7:	sub    cl,BYTE PTR [rcx]
  4027e9:	sub    al,BYTE PTR [rax]
  4027eb:	add    BYTE PTR [rcx],al
  4027ed:	adc    BYTE PTR [rax],al
  4027ef:	add    BYTE PTR [rax],al
  4027f1:	add    BYTE PTR [rsi],dl
  4027f3:	add    BYTE PTR [rax+0x7e],ch
  4027f6:	add    BYTE PTR [rip+0x1000065],dl        # 0x1402861
  4027fc:	outs   dx,BYTE PTR ds:[rsi]
  4027fd:	sub    BYTE PTR [rsi+0x0],ch
  402800:	add    BYTE PTR [rsi],al
  402802:	outs   dx,DWORD PTR ds:[rsi]
  402803:	add    BYTE PTR ss:[rax],al
  402806:	or     ch,BYTE PTR [rip+0x782808]        # 0xb85014
  40280c:	add    BYTE PTR [rsi],al
  40280e:	sub    eax,0x6f022a01
  402813:	cmp    al,BYTE PTR [rax]
  402815:	add    BYTE PTR [rdx],cl
  402817:	sub    ch,BYTE PTR [rdx+0x28]
  40281a:	cmp    eax,DWORD PTR [rax]
  40281c:	add    BYTE PTR [rdx],cl
  40281e:	outs   dx,DWORD PTR ds:[rsi]
  40281f:	cmp    al,0x0
  402821:	add    BYTE PTR [rdx],cl
  402823:	jae    0x402862
  402825:	add    BYTE PTR [rax],al
  402827:	or     ch,BYTE PTR [rax]
  402829:	add    BYTE PTR ds:[rax],al
  40282c:	or     ch,BYTE PTR [rax]
  40282e:	(bad)  
  40282f:	add    BYTE PTR [rax],al
  402831:	or     ch,BYTE PTR [rdx]
  402833:	jle    0x402838
  402835:	outs   dx,DWORD PTR ds:[rsi]
  402836:	add    BYTE PTR [rax],al
  402839:	or     ch,BYTE PTR [rax]
  40283b:	push   rbx
  40283c:	add    BYTE PTR [rax],al
  40283e:	(bad)  
  40283f:	sub    BYTE PTR [rax+rax*1],cl
  402842:	add    BYTE PTR [rsi],al
  402844:	(bad)  
  402845:	sub    BYTE PTR [rdi+0x0],dh
  402848:	add    BYTE PTR [rsi],al
  40284a:	add    edx,DWORD PTR es:[rdi]
  40284d:	outs   dx,DWORD PTR ds:[rsi]
  40284e:	add    BYTE PTR [r8],al
  402851:	or     ch,BYTE PTR [rdx]
  402853:	add    ch,BYTE PTR ss:[rax]
  402856:	rex.X add BYTE PTR [rax],al
  402859:	or     al,BYTE PTR [rdx]
  40285b:	sub    BYTE PTR [rbx+0x2a060000],al
  402861:	inc    BYTE PTR [rbx]
  402863:	sub    eax,0xc21720b
  402868:	add    BYTE PTR [rax+0x73],dh
  40286b:	rex.XB add BYTE PTR [r8],al
  40286e:	or     bh,BYTE PTR [rdx+0x2]
  402871:	jnp    0x4028df
  402873:	add    BYTE PTR [rax],al
  402875:	add    al,0x6f
  402877:	in     al,0x0
  402879:	add    BYTE PTR [rsi],al
  40287b:	add    ebp,DWORD PTR [rdi+0x44]
  40287e:	add    BYTE PTR [rax],al
  402880:	or     al,BYTE PTR [rdx]
  402882:	jnp    0x4028f0
  402884:	add    BYTE PTR [rax],al
  402886:	add    al,0x6f
  402888:	in     al,0x0
  40288a:	add    BYTE PTR [rsi],al
  40288c:	outs   dx,DWORD PTR ds:[rsi]
  40288d:	add    BYTE PTR [r8],r8b
  402890:	or     dl,BYTE PTR [rdi]
  402892:	xor    ecx,DWORD PTR [rdx+rax*1]
  402895:	jnp    0x402903
  402897:	add    BYTE PTR [rax],al
  402899:	add    al,0x3
  40289b:	outs   dx,DWORD PTR ds:[rsi]
  40289c:	call   0x2a4628a1
  4028a1:	rex.WRX add r8b,BYTE PTR [rbx]
  4028a4:	outs   dx,DWORD PTR ds:[rsi]
  4028a5:	rex.RXB add BYTE PTR [r8],r8b
  4028a8:	or     ch,BYTE PTR [rdx+rax*1]
  4028ab:	(bad)  
  4028ac:	sub    al,BYTE PTR [rdx]
  4028ae:	add    ebp,DWORD PTR [rax]
  4028b0:	rex.W add BYTE PTR [rax],al
  4028b3:	or     ch,BYTE PTR [rdx]
  4028b5:	or     dl,BYTE PTR [rsi]
  4028b7:	sub    al,BYTE PTR [rbx]
  4028b9:	xor    BYTE PTR [rdx],al
  4028bb:	add    BYTE PTR [rcx+0x0],dl
  4028c1:	add    BYTE PTR [rax],al
  4028c3:	add    BYTE PTR [rbx],al
  4028c5:	outs   dx,DWORD PTR ds:[rsi]
  4028c6:	rex.WB add BYTE PTR [r8],al
  4028c9:	or     bl,BYTE PTR [rdi]
  4028cb:	or     DWORD PTR [rbx],esi
  4028cd:	add    ebp,DWORD PTR ss:[rdi+0x4a]
  4028d1:	add    BYTE PTR [rax],al
  4028d3:	or     ah,BYTE PTR [rax]
  4028d5:	add    BYTE PTR [rax],al
  4028d7:	add    al,BYTE PTR [rax]
  4028d9:	pop    rdi
  4028da:	sub    al,0x28
  4028dc:	add    ebp,DWORD PTR [rdi+0x4a]
  4028df:	add    BYTE PTR [rax],al
  4028e1:	or     ah,BYTE PTR [rax]
  4028e3:	add    BYTE PTR [rax],al
  4028e5:	add    DWORD PTR [rax],eax
  4028e7:	pop    rdi
  4028e8:	sub    eax,0x6c7b020d
  4028ed:	add    BYTE PTR [rax],al
  4028ef:	add    al,0x6f
  4028f1:	jmp    0x4028f3
  4028f3:	add    BYTE PTR [rsi],al
  4028f5:	sub    edx,DWORD PTR [rsi+0x2]
  4028f8:	jnp    0x402966
  4028fa:	add    BYTE PTR [rax],al
  4028fc:	add    al,0x6f
  4028fe:	in     al,dx
  4028ff:	add    BYTE PTR [rax],al
  402901:	(bad)  
  402902:	sub    ecx,DWORD PTR [rcx+0x3]
  402905:	outs   dx,DWORD PTR ds:[rsi]
  402906:	rex.WB add BYTE PTR [r8],al
  402909:	or     bl,BYTE PTR [rdi]
  40290b:	jne    0x402940
  40290d:	(bad)  
  40290e:	add    ebp,DWORD PTR [rdi+0x4a]
  402911:	add    BYTE PTR [rax],al
  402913:	or     ah,BYTE PTR [rax]
  402915:	add    BYTE PTR [rax],al
  402917:	(bad)  
  402918:	add    BYTE PTR [rdi+0x2d],bl
  40291b:	xor    DWORD PTR [rdx],eax
  40291d:	jnp    0x40298b
  40291f:	add    BYTE PTR [rax],al
  402921:	add    al,0x6f
  402923:	rex.WXB add BYTE PTR [r8],al
  402926:	or     ch,BYTE PTR [rax+rbx*1]
  402929:	add    bh,BYTE PTR [rbx+0x6c]
  40292c:	add    BYTE PTR [rax],al
  40292e:	add    al,0x6f
  402930:	out    0x0,eax
  402932:	add    BYTE PTR [rsi],al
  402934:	outs   dx,DWORD PTR ds:[rsi]
  402935:	iret   
  402936:	add    BYTE PTR [rax],al
  402938:	(bad)  
  402939:	outs   dx,DWORD PTR ds:[rsi]
  40293a:	rex.WR add BYTE PTR [rax],r8b
  40293d:	or     ah,BYTE PTR [rsi]
  40293f:	sub    ecx,DWORD PTR [rdx+rax*1]
  402942:	jnp    0x4029b0
  402944:	add    BYTE PTR [rax],al
  402946:	add    al,0x6f
  402948:	rex.WR add BYTE PTR [rax],r8b
  40294b:	or     ah,BYTE PTR [rsi]
  40294d:	add    al,BYTE PTR [rbx]
  40294f:	sub    BYTE PTR [rbp+0x0],cl
  402952:	add    BYTE PTR [rdx],cl
  402954:	sub    al,BYTE PTR [rax]
  402956:	add    BYTE PTR [rax],al
  402958:	adc    esi,DWORD PTR [rax]
  40295a:	(bad)  
  40295b:	add    BYTE PTR [rcx+rax*1],bh
  40295e:	add    BYTE PTR [rax],al
  402960:	add    eax,DWORD PTR [rax]
  402962:	add    BYTE PTR [rcx],dl
  402964:	add    bh,BYTE PTR [rbx+0x6b]
  402967:	add    BYTE PTR [rax],al
  402969:	add    al,0x6f
  40296b:	rex.WRX add BYTE PTR [rax],r8b
  40296e:	or     ch,BYTE PTR [rdi+0x4f]
  402971:	add    BYTE PTR [rax],al
  402973:	or     al,BYTE PTR [rdx]
  402975:	jnp    0x4029e3
  402977:	add    BYTE PTR [rax],al
  402979:	add    al,0x6f
  40297b:	out    0x0,eax
  40297d:	add    BYTE PTR [rsi],al
  40297f:	sub    eax,0x7b022a01
  402984:	ins    BYTE PTR es:[rdi],dx
  402985:	add    BYTE PTR [rax],al
  402987:	add    al,0x6f
  402989:	out    0x0,eax
  40298b:	add    BYTE PTR [rsi],al
  40298d:	or     al,BYTE PTR [rsi]
  40298f:	outs   dx,DWORD PTR ds:[rsi]
  402990:	iret   
  402991:	add    BYTE PTR [rax],al
  402993:	(bad)  
  402994:	or     eax,DWORD PTR [rsi]
  402996:	outs   dx,DWORD PTR ds:[rsi]
  402997:	iret   
  402998:	add    BYTE PTR [rax],al
  40299a:	(bad)  
  40299b:	sub    eax,0x7b022a01
  4029a0:	imul   eax,DWORD PTR [rax],0x0
  4029a3:	add    al,0x6f
  4029a5:	push   rax
  4029a6:	add    BYTE PTR [rax],al
  4029a8:	or     al,BYTE PTR [rdi]
  4029aa:	add    bh,BYTE PTR [rbx+0x6b]
  4029ad:	add    BYTE PTR [rax],al
  4029af:	add    al,0x6f
  4029b1:	push   rcx
  4029b2:	add    BYTE PTR [rax],al
  4029b4:	or     cl,BYTE PTR [rdx+rdx*1]
  4029b7:	add    ch,BYTE PTR [rax]
  4029b9:	push   rdx
  4029ba:	add    BYTE PTR [rax],al
  4029bc:	or     al,BYTE PTR [rdx]
  4029be:	jnp    0x402a2b
  4029c0:	add    BYTE PTR [rax],al
  4029c2:	add    al,0x6f
  4029c4:	push   rbx
  4029c5:	add    BYTE PTR [rax],al
  4029c7:	or     cl,BYTE PTR [rip+0x54280312]        # 0x54682cdf
  4029cd:	add    BYTE PTR [rax],al
  4029cf:	or     bl,BYTE PTR [rcx+0x2]
  4029d2:	jnp    0x402a3f
  4029d4:	add    BYTE PTR [rax],al
  4029d6:	add    al,0x6f
  4029d8:	push   rcx
  4029d9:	add    BYTE PTR [rax],al
  4029db:	or     dl,BYTE PTR [rbx]
  4029dd:	add    al,0x12
  4029df:	add    al,0x28
  4029e1:	push   rbp
  4029e2:	add    BYTE PTR [rax],al
  4029e4:	or     al,BYTE PTR [rdx]
  4029e6:	jnp    0x402a53
  4029e8:	add    BYTE PTR [rax],al
  4029ea:	add    al,0x6f
  4029ec:	push   rbx
  4029ed:	add    BYTE PTR [rax],al
  4029ef:	or     dl,BYTE PTR [rbx]
  4029f1:	add    eax,0x56280512
  4029f6:	add    BYTE PTR [rax],al
  4029f8:	or     bl,BYTE PTR [rcx+0x73]
  4029fb:	push   rdi
  4029fc:	add    BYTE PTR [rax],al
  4029fe:	or     ch,BYTE PTR [rdi+0x58]
  402a01:	add    BYTE PTR [rax],al
  402a03:	or     al,BYTE PTR [rdi]
  402a05:	sbb    ebp,DWORD PTR [rdi+0x59]
  402a08:	add    BYTE PTR [rax],al
  402a0a:	or     al,BYTE PTR [rdi]
  402a0c:	(bad)  
  402a0d:	outs   dx,DWORD PTR ds:[rsi]
  402a0e:	pop    rdx
  402a0f:	add    BYTE PTR [rax],al
  402a11:	or     al,BYTE PTR [rdi]
  402a13:	outs   dx,DWORD PTR ds:[rsi]
  402a14:	pop    rbx
  402a15:	add    BYTE PTR [rax],al
  402a17:	or     al,BYTE PTR [rsi]
  402a19:	outs   dx,DWORD PTR ds:[rsi]
  402a1a:	iret   
  402a1b:	add    BYTE PTR [rax],al
  402a1d:	(bad)  
  402a1e:	(bad)  
  402a1f:	or     al,0x1f
  402a21:	or     al,0x1f
  402a23:	or     al,0x1f
  402a25:	or     al,0x73
  402a27:	pop    rsp
  402a28:	add    BYTE PTR [rax],al
  402a2a:	or     ch,BYTE PTR [rdi+0x5d]
  402a2d:	add    BYTE PTR [rax],al
  402a2f:	or     al,BYTE PTR [rdx]
  402a31:	jnp    0x402a9e
  402a33:	add    BYTE PTR [rax],al
  402a35:	add    al,0x6f
  402a37:	rex.WRX add BYTE PTR [rax],r8b
  402a3a:	or     al,BYTE PTR [rsi]
  402a3c:	outs   dx,DWORD PTR ds:[rsi]
  402a3d:	iret   
  402a3e:	add    BYTE PTR [rax],al
  402a40:	(bad)  
  402a41:	outs   dx,DWORD PTR ds:[rsi]
  402a42:	pop    rsi
  402a43:	add    BYTE PTR [rax],al
  402a45:	or     al,BYTE PTR [rdx]
  402a47:	jnp    0x402ab4
  402a49:	add    BYTE PTR [rax],al
  402a4b:	add    al,0x6f
  402a4d:	rex.WRX add BYTE PTR [rax],r8b
  402a50:	or     al,BYTE PTR [rdi]
  402a52:	(bad)  
  402a53:	outs   dx,DWORD PTR ds:[rsi]
  402a54:	pop    rdi
  402a55:	add    BYTE PTR [rax],al
  402a57:	or     al,BYTE PTR [rdx]
  402a59:	(bad)  
  402a5a:	sub    BYTE PTR [rax+0x0],ah
  402a5d:	add    BYTE PTR [rdx],cl
  402a5f:	add    bh,BYTE PTR [rbx+0x6b]
  402a62:	add    BYTE PTR [rax],al
  402a64:	add    al,0x17
  402a66:	outs   dx,DWORD PTR ds:[rsi]
  402a67:	(bad)  
  402a68:	add    BYTE PTR [rax],al
  402a6a:	or     al,BYTE PTR [rdx]
  402a6c:	(bad)  
  402a6d:	outs   dx,DWORD PTR ds:[rsi]
  402a6e:	int    0x0
  402a70:	add    BYTE PTR [rsi],al
  402a72:	outs   dx,DWORD PTR ds:[rsi]
  402a73:	(bad)  
  402a74:	add    BYTE PTR [rax],al
  402a76:	or     al,BYTE PTR [rdx]
  402a78:	jnp    0x402ae5
  402a7a:	add    BYTE PTR [rax],al
  402a7c:	add    al,0x6
  402a7e:	outs   dx,DWORD PTR ds:[rsi]
  402a7f:	int    0x0
  402a81:	add    BYTE PTR [rsi],al
  402a83:	outs   dx,DWORD PTR ds:[rsi]
  402a84:	(bad)  
  402a85:	add    BYTE PTR [rax],al
  402a87:	or     al,BYTE PTR [rsi]
  402a89:	outs   dx,DWORD PTR ds:[rsi]
  402a8a:	iret   
  402a8b:	add    BYTE PTR [rax],al
  402a8d:	(bad)  
  402a8e:	outs   dx,DWORD PTR ds:[rsi]
  402a8f:	movsxd eax,DWORD PTR [rax]
  402a91:	add    BYTE PTR [rdx],cl
  402a93:	(bad)  
  402a94:	outs   dx,DWORD PTR ds:[rsi]
  402a95:	iret   
  402a96:	add    BYTE PTR [rax],al
  402a98:	(bad)  
  402a99:	outs   dx,DWORD PTR ds:[rsi]
  402a9a:	rex.WR add BYTE PTR [rax],r8b
  402a9d:	or     ah,BYTE PTR [rsi]
  402a9f:	sub    bh,BYTE PTR [rdx+0x3]
  402aa2:	sub    al,0x13
  402aa4:	add    bh,BYTE PTR [rbx+0x6a]
  402aa7:	add    BYTE PTR [rax],al
  402aa9:	add    al,0x2c
  402aab:	or     eax,DWORD PTR [rdx]
  402aad:	jnp    0x402b19
  402aaf:	add    BYTE PTR [rax],al
  402ab1:	add    al,0x6f
  402ab3:	add    DWORD PTR [rax],eax
  402ab5:	add    BYTE PTR [rdx],cl
  402ab7:	add    al,BYTE PTR [rbx]
  402ab9:	sub    BYTE PTR [rax+rax*1+0x0],ah
  402abd:	or     ch,BYTE PTR [rdx]
  402abf:	add    BYTE PTR [rbx],dl
  402ac1:	xor    BYTE PTR [rax+rax*1],al
  402ac4:	adc    eax,DWORD PTR [rcx]
  402ac6:	add    BYTE PTR [rax],al
  402ac8:	add    al,0x0
  402aca:	add    BYTE PTR [rcx],dl
  402acc:	ror    BYTE PTR [rcx],1
  402ace:	add    BYTE PTR [rax],al
  402ad0:	add    ch,BYTE PTR [rax]
  402ad2:	(bad)  
  402ad3:	add    BYTE PTR [rax],al
  402ad5:	or     dh,BYTE PTR [rbx+0x65]
  402ad8:	add    BYTE PTR [rax],al
  402ada:	or     cl,BYTE PTR [rdx]
  402adc:	add    dh,BYTE PTR [rbx+0x66]
  402adf:	add    BYTE PTR [rax],al
  402ae1:	or     bh,BYTE PTR [rbp+0x6b]
  402ae4:	add    BYTE PTR [rax],al
  402ae6:	add    al,0x2
  402ae8:	jae    0x402ad3
  402aea:	add    BYTE PTR [rax],al
  402aec:	(bad)  
  402aed:	jge    0x402b5b
  402aef:	add    BYTE PTR [rax],al
  402af1:	add    al,0x2
  402af3:	sub    BYTE PTR [rax+0x0],dl
  402af6:	add    BYTE PTR [rdx],cl
  402af8:	(bad)  
  402af9:	add    bh,BYTE PTR [rbx+0x6b]
  402afc:	add    BYTE PTR [rax],al
  402afe:	add    al,0x72
  402b00:	sub    ecx,DWORD PTR [rax+rax*1]
  402b03:	jo     0x402b74
  402b05:	add    BYTE PTR [eax],al
  402b08:	or     al,BYTE PTR [rdx]
  402b0a:	jnp    0x402b77
  402b0c:	add    BYTE PTR [rax],al
  402b0e:	add    al,0x72
  402b10:	sub    ecx,DWORD PTR [rax+rax*1]
  402b13:	jo     0x402b84
  402b15:	push   0x20a0000
  402b1a:	jnp    0x402b87
  402b1c:	add    BYTE PTR [rax],al
  402b1e:	add    al,0x17
  402b20:	outs   dx,DWORD PTR ds:[rsi]
  402b21:	imul   eax,DWORD PTR [rax],0x2060a00
  402b27:	jnp    0x402b95
  402b29:	add    BYTE PTR [rax],al
  402b2b:	add    al,0x72
  402b2d:	rex.XB or al,0x0
  402b30:	jo     0x402ba1
  402b32:	add    BYTE PTR [eax],al
  402b35:	or     al,BYTE PTR [rdx]
  402b37:	jnp    0x402ba5
  402b39:	add    BYTE PTR [rax],al
  402b3b:	add    al,0x28
  402b3d:	push   0x0
  402b3f:	add    BYTE PTR [rdx],cl
  402b41:	outs   dx,DWORD PTR ds:[rsi]
  402b42:	imul   eax,DWORD PTR [rax],0x0
  402b45:	or     al,BYTE PTR [rdx]
  402b47:	jnp    0x402bb5
  402b49:	add    BYTE PTR [rax],al
  402b4b:	add    al,0x72
  402b4d:	rex.XB or al,0x0
  402b50:	jo     0x402bc1
  402b52:	push   0x20a0000
  402b57:	jnp    0x402bc5
  402b59:	add    BYTE PTR [rax],al
  402b5b:	add    al,0x15
  402b5d:	outs   dx,DWORD PTR ds:[rsi]
  402b5e:	out    0x0,al
  402b60:	add    BYTE PTR [rsi],al
  402b62:	add    bh,BYTE PTR [rbx+0x6c]
  402b65:	add    BYTE PTR [rax],al
  402b67:	add    al,0x14
  402b69:	outs   dx,DWORD PTR ds:[rsi]
  402b6a:	call   0x2462b6f
  402b6f:	jnp    0x402bdd
  402b71:	add    BYTE PTR [rax],al
  402b73:	add    al,0x16
  402b75:	outs   dx,DWORD PTR ds:[rsi]
  402b76:	ins    BYTE PTR es:[rdi],dx
  402b77:	add    BYTE PTR [rax],al
  402b79:	or     al,BYTE PTR [rdx]
  402b7b:	jnp    0x402be9
  402b7d:	add    BYTE PTR [rax],al
  402b7f:	add    al,0x2
  402b81:	inc    BYTE PTR [rsi]
  402b83:	add    DWORD PTR [rax],0x6d730600
  402b89:	add    BYTE PTR [rax],al
  402b8b:	or     ch,BYTE PTR [rdi-0x1e]
  402b8e:	add    BYTE PTR [rax],al
  402b90:	(bad)  
  402b91:	(bad)  
  402b92:	add    dh,BYTE PTR [rdx+0x5d]
  402b95:	or     al,0x0
  402b97:	jo     0x402c08
  402b99:	add    BYTE PTR [eax],al
  402b9c:	or     al,BYTE PTR [rdx]
  402b9e:	(bad)  
  402b9f:	sub    BYTE PTR [rsi+0x0],ch
  402ba2:	add    BYTE PTR [rdx],cl
  402ba4:	add    ch,BYTE PTR [rax]
  402ba6:	rex.WRX add BYTE PTR [rax],r8b
  402ba9:	or     al,BYTE PTR [rdx]
  402bab:	jnp    0x402c18
  402bad:	add    BYTE PTR [rax],al
  402baf:	add    al,0x6f
  402bb1:	pop    rsi
  402bb2:	add    BYTE PTR [rax],al
  402bb4:	or     al,BYTE PTR [rdx]
  402bb6:	sub    BYTE PTR [rsi+0x0],cl
  402bb9:	add    BYTE PTR [rdx],cl
  402bbb:	add    bh,BYTE PTR [rbx+0x6c]
  402bbe:	add    BYTE PTR [rax],al
  402bc0:	add    al,0x6f
  402bc2:	pop    rsi
  402bc3:	add    BYTE PTR [rax],al
  402bc5:	or     al,BYTE PTR [rdx]
  402bc7:	jb     0x402c32
  402bc9:	or     al,0x0
  402bcb:	jo     0x402bf5
  402bcd:	push   0x20a0000
  402bd2:	(bad)  
  402bd3:	sub    BYTE PTR [rcx+0x0],ah
  402bd6:	add    BYTE PTR [rdx],cl
  402bd8:	add    ch,BYTE PTR [rax]
  402bda:	outs   dx,DWORD PTR ds:[rsi]
  402bdb:	add    BYTE PTR [rax],al
  402bdd:	or     ch,BYTE PTR [rdx]
  402bdf:	rex.WRX add r13b,BYTE PTR [rax]
  402be2:	jo     0x402be4
  402be4:	add    BYTE PTR [rdx],cl
  402be6:	add    ch,BYTE PTR [rax]
  402be8:	mov    WORD PTR [rax],es
  402bea:	add    BYTE PTR [rsi],al
  402bec:	add    ch,BYTE PTR [rax]
  402bee:	mov    al,BYTE PTR [rax]
  402bf0:	add    BYTE PTR [rsi],al
  402bf2:	sub    al,BYTE PTR [rax]
  402bf4:	adc    esi,DWORD PTR [rax]
  402bf6:	add    eax,DWORD PTR [rax]
  402bf8:	rex.X add BYTE PTR [rax],al
  402bfb:	add    BYTE PTR [rip+0x2110000],al        # 0x2512c01
  402c01:	add    ebp,DWORD PTR [rax]
  402c03:	jno    0x402c05
  402c05:	add    BYTE PTR [rdx],cl
  402c07:	add    bh,dh
  402c09:	(bad)  
  402c0a:	mov    DWORD PTR [rax],eax
  402c0c:	add    BYTE PTR [rsi],al
  402c0e:	jae    0x402c82
  402c10:	add    BYTE PTR [rax],al
  402c12:	or     ch,BYTE PTR [rax]
  402c14:	jae    0x402c16
  402c16:	add    BYTE PTR [rdx],cl
  402c18:	sub    BYTE PTR [rdx+0x0],bl
  402c1b:	add    BYTE PTR [rsi],al
  402c1d:	outs   dx,DWORD PTR ds:[rsi]
  402c1e:	pop    rbx
  402c1f:	add    BYTE PTR [rax],al
  402c21:	(bad)  
  402c22:	or     dl,BYTE PTR [rdx]
  402c24:	add    BYTE PTR [rbx-0x79],bh
  402c27:	add    BYTE PTR [rax],al
  402c29:	add    al,0x2d
  402c2b:	or     BYTE PTR [rdx],dl
  402c2d:	add    BYTE PTR [rdi],dl
  402c2f:	jge    0x402bb8
  402c31:	add    BYTE PTR [rax],al
  402c33:	add    al,0x12
  402c35:	add    BYTE PTR [rdx],al
  402c37:	sub    BYTE PTR [rax+rax*1+0x0],dh
  402c3b:	or     ch,BYTE PTR [rax]
  402c3d:	mov    bl,0x0
  402c3f:	add    BYTE PTR [rsi],al
  402c41:	sub    ah,BYTE PTR [rsi+0x2]
  402c44:	inc    BYTE PTR [rsi]
  402c46:	mov    DWORD PTR [rax],eax
  402c48:	add    BYTE PTR [rsi],al
  402c4a:	jae    0x402cbe
  402c4c:	add    BYTE PTR [rax],al
  402c4e:	or     ch,BYTE PTR [rax]
  402c50:	jae    0x402c52
  402c52:	add    BYTE PTR [rdx],cl
  402c54:	add    al,BYTE PTR [rbx]
  402c56:	sub    BYTE PTR [rbp+0x0],dh
  402c59:	add    BYTE PTR [rdx],cl
  402c5b:	sub    al,dl
  402c5d:	add    al,BYTE PTR [rbx]
  402c5f:	sub    BYTE PTR [rsi+0x0],dh
  402c62:	add    BYTE PTR [rdx],cl
  402c64:	add    ebp,DWORD PTR [rdi+0x77]
  402c67:	add    BYTE PTR [rax],al
  402c69:	or     ch,BYTE PTR [rcx+rax*1]
  402c6c:	sub    ch,BYTE PTR [rax]
  402c6e:	pop    rdx
  402c6f:	add    BYTE PTR [rax],al
  402c71:	(bad)  
  402c72:	add    ch,BYTE PTR [rax]
  402c74:	je     0x402c76
  402c76:	add    BYTE PTR [rdx],cl
  402c78:	sub    BYTE PTR [rax+rax*1+0x5c6f0600],dh
  402c7f:	add    BYTE PTR [rax],al
  402c81:	(bad)  
  402c82:	sub    BYTE PTR [rdx+0x0],bl
  402c85:	add    BYTE PTR [rsi],al
  402c87:	outs   dx,DWORD PTR ds:[rsi]
  402c88:	js     0x402c8a
  402c8a:	add    BYTE PTR [rdx],cl
  402c8c:	sub    al,BYTE PTR [rax]
  402c8e:	add    BYTE PTR [rax],al
  402c90:	sbb    esi,DWORD PTR [rax]
  402c92:	add    al,BYTE PTR [rax]
  402c94:	(bad)  
  402c95:	add    BYTE PTR [rax],al
  402c97:	add    BYTE PTR [rsi],al
  402c99:	add    BYTE PTR [rax],al
  402c9b:	adc    DWORD PTR [rax],ebp
  402c9d:	xor    al,BYTE PTR [rcx]
  402c9f:	add    BYTE PTR [rsi],al
  402ca1:	outs   dx,DWORD PTR ds:[rsi]
  402ca2:	jns    0x402ca4
  402ca4:	add    BYTE PTR [rdx],cl
  402ca6:	or     ebp,DWORD PTR [rbx]
  402ca8:	sbb    DWORD PTR [rdx],edx
  402caa:	add    DWORD PTR [rax],ebp
  402cac:	jp     0x402cae
  402cae:	add    BYTE PTR [rdx],cl
  402cb0:	je     0x402ccb
  402cb2:	add    BYTE PTR [rax],al
  402cb4:	add    cl,BYTE PTR [rdx]
  402cb6:	add    bh,BYTE PTR [rbx+0x70]
  402cb9:	add    BYTE PTR [rax],al
  402cbb:	add    al,0x6
  402cbd:	outs   dx,DWORD PTR ds:[rsi]
  402cbe:	jge    0x402cc0
  402cc0:	add    BYTE PTR [rsi],al
  402cc2:	adc    al,BYTE PTR [rcx]
  402cc4:	sub    BYTE PTR [rbx+0x0],bh
  402cc7:	add    BYTE PTR [rdx],cl
  402cc9:	sub    eax,0x120edede
  402cce:	add    esi,edi
  402cd0:	(bad)  
  402cd1:	add    al,0x0
  402cd3:	add    BYTE PTR [rbx],bl
  402cd5:	outs   dx,DWORD PTR ds:[rsi]
  402cd6:	add    DWORD PTR [rax],eax
  402cd8:	add    BYTE PTR [rdx],cl
  402cda:	fadd   QWORD PTR [rdx]
  402cdc:	jnp    0x402d4e
  402cde:	add    BYTE PTR [rax],al
  402ce0:	add    al,0x73
  402ce2:	loope  0x402ce4
  402ce4:	add    BYTE PTR [rsi],al
  402ce6:	outs   dx,DWORD PTR ds:[rsi]
  402ce7:	jge    0x402ce9
  402ce9:	add    BYTE PTR [rsi],al
  402ceb:	add    bh,BYTE PTR [rbx+0x70]
  402cee:	add    BYTE PTR [rax],al
  402cf0:	add    al,0x73
  402cf2:	rol    BYTE PTR [rax],1
  402cf4:	add    BYTE PTR [rsi],al
  402cf6:	outs   dx,DWORD PTR ds:[rsi]
  402cf7:	jge    0x402cf9
  402cf9:	add    BYTE PTR [rsi],al
  402cfb:	sub    al,BYTE PTR [rcx]
  402cfd:	adc    BYTE PTR [rax],al
  402cff:	add    BYTE PTR [rdx],al
  402d01:	add    BYTE PTR [rbx],cl
  402d03:	add    BYTE PTR [rsi],ah
  402d05:	xor    DWORD PTR [rax],eax
  402d07:	(bad)  
  402d08:	add    BYTE PTR [rax],al
  402d0a:	add    BYTE PTR [rax],al
  402d0c:	rex.RX add al,0x6f
  402d0f:	jl     0x402d11
  402d11:	add    BYTE PTR [rdx],cl
  402d13:	(bad)  
  402d14:	or     al,0x33
  402d16:	(bad)  
  402d17:	add    ch,BYTE PTR [rax]
  402d19:	mov    al,BYTE PTR [rax]
  402d1b:	add    BYTE PTR [rsi],al
  402d1d:	sub    al,BYTE PTR [rax]
  402d1f:	add    BYTE PTR [rbx],dl
  402d21:	xor    BYTE PTR [rdx],al
  402d23:	add    BYTE PTR [rdx],ch
  402d25:	add    BYTE PTR [rax],al
  402d27:	add    BYTE PTR [rdi],al
  402d29:	add    BYTE PTR [rax],al
  402d2b:	adc    DWORD PTR [rdx],eax
  402d2d:	outs   dx,DWORD PTR ds:[rsi]
  402d2e:	jge    0x402d30
  402d30:	add    BYTE PTR [rdx],cl
  402d32:	or     al,BYTE PTR [rdx]
  402d34:	sub    BYTE PTR [rsi+0x0],bh
  402d37:	add    BYTE PTR [rdx],cl
  402d39:	outs   dx,DWORD PTR ds:[rsi]
  402d3a:	jg     0x402d3c
  402d3c:	add    BYTE PTR [rdx],cl
  402d3e:	(bad)  
  402d3f:	add    ch,BYTE PTR [rdi+0x7d]
  402d42:	add    BYTE PTR [rax],al
  402d44:	or     ch,BYTE PTR [rsi]
  402d46:	(bad)  
  402d47:	(bad)  
  402d48:	sub    BYTE PTR [rax+0x2e0a0000],al
  402d4e:	(bad)  
  402d4f:	(bad)  
  402d50:	outs   dx,DWORD PTR ds:[rsi]
  402d51:	add    DWORD PTR [rax],0x7a2a0a00
  402d57:	add    ebp,DWORD PTR [rbx+rdx*1]
  402d5a:	add    bh,BYTE PTR [rbx+0x6f]
  402d5d:	add    BYTE PTR [rax],al
  402d5f:	add    al,0x2c
  402d61:	or     eax,DWORD PTR [rdx]
  402d63:	jnp    0x402dd4
  402d65:	add    BYTE PTR [rax],al
  402d67:	add    al,0x6f
  402d69:	add    DWORD PTR [rax],eax
  402d6b:	add    BYTE PTR [rdx],cl
  402d6d:	add    al,BYTE PTR [rbx]
  402d6f:	sub    BYTE PTR [rdx+0x2a0a0000],al
  402d75:	add    BYTE PTR [rax],al
  402d77:	add    BYTE PTR [rbx],dl
  402d79:	xor    BYTE PTR [rax+rax*1],al
  402d7c:	popf   
  402d7d:	add    BYTE PTR [rax],al
  402d7f:	add    BYTE PTR [rax+rax*1],al
  402d82:	add    BYTE PTR [rcx],dl
  402d84:	ror    BYTE PTR [rdx],1
  402d86:	add    BYTE PTR [rax],al
  402d88:	add    ch,BYTE PTR [rax]
  402d8a:	(bad)  
  402d8b:	add    BYTE PTR [rax],al
  402d8d:	or     dh,BYTE PTR [rbx+0x65]
  402d90:	add    BYTE PTR [rax],al
  402d92:	or     cl,BYTE PTR [rdx]
  402d94:	add    dh,BYTE PTR [rbx+0x7c]
  402d97:	add    BYTE PTR [rax],al
  402d99:	(bad)  
  402d9a:	jge    0x402e0c
  402d9c:	add    BYTE PTR [rax],al
  402d9e:	add    al,0x2
  402da0:	sub    BYTE PTR [rax+0x0],dl
  402da3:	add    BYTE PTR [rdx],cl
  402da5:	(bad)  
  402da6:	add    bh,BYTE PTR [rbx+0x70]
  402da9:	add    BYTE PTR [rax],al
  402dab:	add    al,0x72
  402dad:	(bad)  
  402dae:	or     al,0x0
  402db0:	jo     0x402e21
  402db2:	add    BYTE PTR [eax],al
  402db5:	or     al,BYTE PTR [rdx]
  402db7:	jnp    0x402e29
  402db9:	add    BYTE PTR [rax],al
  402dbb:	add    al,0x72
  402dbd:	(bad)  
  402dbe:	or     al,0x0
  402dc0:	jo     0x402e31
  402dc2:	push   0x60a0000
  402dc7:	add    dh,BYTE PTR [rdx+0x5d]
  402dca:	or     al,0x0
  402dcc:	jo     0x402e3d
  402dce:	add    BYTE PTR [eax],al
  402dd1:	or     al,BYTE PTR [rdx]
  402dd3:	(bad)  
  402dd4:	sub    BYTE PTR [rsi+0x0],ch
  402dd7:	add    BYTE PTR [rdx],cl
  402dd9:	add    dl,BYTE PTR [rsi]
  402ddb:	outs   dx,DWORD PTR ds:[rsi]
  402ddc:	add    DWORD PTR [rax],0x0
  402ddf:	or     al,BYTE PTR [rdx]
  402de1:	sub    BYTE PTR [rdx+0x0],ch
  402de4:	add    BYTE PTR [rdx],cl
  402de6:	outs   dx,DWORD PTR ds:[rsi]
  402de7:	imul   eax,DWORD PTR [rax],0x0
  402dea:	or     al,BYTE PTR [rdx]
  402dec:	sub    BYTE PTR [rsi+0x0],cl
  402def:	add    BYTE PTR [rdx],cl
  402df1:	add    bh,BYTE PTR [rbx+0x70]
  402df4:	add    BYTE PTR [rax],al
  402df6:	add    al,0x6f
  402df8:	pop    rsi
  402df9:	add    BYTE PTR [rax],al
  402dfb:	or     al,BYTE PTR [rdx]
  402dfd:	jb     0x402db4
  402dff:	or     al,0x0
  402e01:	jo     0x402e2b
  402e03:	push   0x20a0000
  402e08:	add    bh,dh
  402e0a:	(bad)  
  402e0b:	mov    BYTE PTR [rax],al
  402e0d:	add    BYTE PTR [rsi],al
  402e0f:	jae    0x402e7e
  402e11:	add    BYTE PTR [rax],al
  402e13:	or     ch,BYTE PTR [rax]
  402e15:	test   BYTE PTR [rax],al
  402e17:	add    BYTE PTR [rdx],cl
  402e19:	add    dl,BYTE PTR [rsi]
  402e1b:	sub    BYTE PTR [rcx+0x0],ah
  402e1e:	add    BYTE PTR [rdx],cl
  402e20:	sub    bl,BYTE PTR [rsi]
  402e22:	add    bh,BYTE PTR [rbx+0x76]
  402e25:	add    BYTE PTR [rax],al
  402e27:	add    al,0x2a
  402e29:	and    al,BYTE PTR [rdx]
  402e2b:	add    edi,DWORD PTR [rbp+0x76]
  402e2e:	add    BYTE PTR [rax],al
  402e30:	add    al,0x2a
  402e32:	(bad)  
  402e33:	add    bh,BYTE PTR [rbx+0x79]
  402e36:	add    BYTE PTR [rax],al
  402e38:	add    al,0x2a
  402e3a:	and    al,BYTE PTR [rdx]
  402e3c:	add    edi,DWORD PTR [rbp+0x79]
  402e3f:	add    BYTE PTR [rax],al
  402e41:	add    al,0x2a
  402e43:	(bad)  
  402e44:	add    bh,BYTE PTR [rbx+0x78]
  402e47:	add    BYTE PTR [rax],al
  402e49:	add    al,0x2a
  402e4b:	(bad)  
  402e4d:	jnp    0x402ec7
  402e4f:	add    BYTE PTR [rax],al
  402e51:	add    al,0x3
  402e53:	xor    eax,DWORD PTR [rcx]
  402e55:	sub    al,BYTE PTR [rdx]
  402e57:	add    edi,DWORD PTR [rbp+0x78]
  402e5a:	add    BYTE PTR [rax],al
  402e5c:	add    al,0x2
  402e5e:	sub    BYTE PTR [rbp+0x2a060000],bl
  402e64:	(bad)  
  402e65:	add    bh,BYTE PTR [rbx+0x77]
  402e68:	add    BYTE PTR [rax],al
  402e6a:	add    al,0x2a
  402e6c:	and    al,BYTE PTR [rdx]
  402e6e:	add    edi,DWORD PTR [rbp+0x77]
  402e71:	add    BYTE PTR [rax],al
  402e73:	add    al,0x2a
  402e75:	and    al,BYTE PTR [rdx]
  402e77:	adc    al,0x28
  402e79:	xchg   esi,eax
  402e7a:	add    BYTE PTR [rax],al
  402e7c:	(bad)  
  402e7d:	sub    ch,BYTE PTR [rdx]
  402e7f:	add    al,BYTE PTR [rbx]
  402e81:	(bad)  
  402e82:	(bad)  
  402e83:	sub    BYTE PTR [rdi+0x2a060000],dl
  402e89:	mov    al,BYTE PTR [rdx]
  402e8b:	sub    BYTE PTR [rdx+0x0],ch
  402e8e:	add    BYTE PTR [rsi],al
  402e90:	add    ch,BYTE PTR [rax]
  402e92:	sahf   
  402e93:	add    BYTE PTR [rax],al
  402e95:	(bad)  
  402e96:	add    al,BYTE PTR [rbx]
  402e98:	jge    0x402f10
  402e9a:	add    BYTE PTR [rax],al
  402e9c:	add    al,0x2
  402e9e:	add    eax,0x797d
  402ea3:	add    al,0x2
  402ea5:	add    al,0x7d
  402ea7:	js     0x402ea9
  402ea9:	add    BYTE PTR [rdx+rbp*1],al
  402eac:	sbb    esi,DWORD PTR [rax]
  402eae:	add    eax,DWORD PTR [rax]
  402eb0:	rex.WRB add BYTE PTR [r8],r8b
  402eb3:	add    BYTE PTR [rax],cl
  402eb5:	add    BYTE PTR [rax],al
  402eb7:	adc    DWORD PTR [rdx],eax
  402eb9:	jnp    0x402f31
  402ebb:	add    BYTE PTR [rax],al
  402ebd:	add    al,0x28
  402ebf:	test   DWORD PTR [rax],eax
  402ec1:	add    BYTE PTR [rdx],cl
  402ec3:	sub    al,0xb
  402ec5:	jb     0x402e9c
  402ec7:	or     al,0x0
  402ec9:	jo     0x402f3e
  402ecb:	xchg   BYTE PTR [rax],al
  402ecd:	add    BYTE PTR [rdx],cl
  402ecf:	jp     0x402f44
  402ed1:	(bad)  
  402ed2:	add    DWORD PTR [rax],eax
  402ed4:	(bad)  
  402ed5:	or     al,BYTE PTR [rdx]
  402ed7:	sub    BYTE PTR [rdi+0x2c060000],cl
  402edd:	adc    al,0x2
  402edf:	and    eax,0x9907fe
  402ee4:	add    BYTE PTR [rsi],al
  402ee6:	jae    0x402f10
  402ee8:	add    BYTE PTR [rax],al
  402eea:	or     ch,BYTE PTR [rax]
  402eec:	jns    0x402eee
  402eee:	add    BYTE PTR [rsi],al
  402ef0:	sub    eax,DWORD PTR [rsi]
  402ef2:	add    ch,BYTE PTR [rdi-0x67]
  402ef5:	add    BYTE PTR [rax],al
  402ef7:	(bad)  
  402ef8:	fimul  WORD PTR [rdx]
  402efa:	(bad)  
  402efb:	sub    al,0x6
  402efd:	(bad)  
  402efe:	outs   dx,DWORD PTR ds:[rsi]
  402eff:	add    DWORD PTR [rax],eax
  402f01:	add    BYTE PTR [rdx],cl
  402f03:	fsubr  QWORD PTR [rdx]
  402f05:	add    BYTE PTR [rax],al
  402f07:	add    BYTE PTR [rcx],al
  402f09:	adc    BYTE PTR [rax],al
  402f0b:	add    BYTE PTR [rdx],al
  402f0d:	add    BYTE PTR [rsi],bl
  402f0f:	add    BYTE PTR [rdx+rax*2],ah
  402f12:	add    BYTE PTR [rdx],cl
  402f14:	add    BYTE PTR [rax],al
  402f16:	add    BYTE PTR [rax],al
  402f18:	sbb    esi,DWORD PTR [rax]
  402f1a:	add    al,0x0
  402f1c:	mov    WORD PTR [rax],es
  402f1e:	add    BYTE PTR [rax],al
  402f20:	or     DWORD PTR [rax],eax
  402f22:	add    BYTE PTR [rcx],dl
  402f24:	jae    0x402ead
  402f26:	add    BYTE PTR [rax],al
  402f28:	or     cl,BYTE PTR [rdx]
  402f2a:	(bad)  
  402f2b:	add    ch,BYTE PTR [rax]
  402f2d:	(bad)  
  402f2e:	add    BYTE PTR [rax],al
  402f30:	(bad)  
  402f31:	outs   dx,DWORD PTR ds:[rsi]
  402f32:	mov    BYTE PTR [rax],al
  402f34:	add    BYTE PTR [rdx],cl
  402f36:	(bad)  
  402f37:	add    ch,BYTE PTR [rdi-0x65]
  402f3a:	add    BYTE PTR [rax],al
  402f3c:	(bad)  
  402f3d:	outs   dx,DWORD PTR ds:[rsi]
  402f3e:	mov    DWORD PTR [rax],eax
  402f40:	add    BYTE PTR [rdx],cl
  402f42:	(bad)  
  402f43:	(bad)  
  402f44:	outs   dx,DWORD PTR ds:[rsi]
  402f45:	mov    al,BYTE PTR [rax]
  402f47:	add    BYTE PTR [rdx],cl
  402f49:	jae    0x402ed6
  402f4b:	add    BYTE PTR [rax],al
  402f4d:	or     cl,BYTE PTR [rbx]
  402f4f:	(bad)  
  402f50:	(bad)  
  402f51:	outs   dx,DWORD PTR ds:[rsi]
  402f52:	mov    WORD PTR [rax],es
  402f54:	add    BYTE PTR [rdx],cl
  402f56:	(bad)  
  402f57:	(bad)  
  402f58:	outs   dx,DWORD PTR ds:[rsi]
  402f59:	lea    eax,[rax]
  402f5b:	add    BYTE PTR [rdx],cl
  402f5d:	(bad)  
  402f5e:	add    bh,dh
  402f60:	(bad)  
  402f61:	pushf  
  402f62:	add    BYTE PTR [rax],al
  402f64:	(bad)  
  402f65:	jae    0x402fd4
  402f67:	add    BYTE PTR [rax],al
  402f69:	or     ch,BYTE PTR [rdi-0x72]
  402f6c:	add    BYTE PTR [rax],al
  402f6e:	or     bh,BYTE PTR [rsi+0x74]
  402f71:	add    BYTE PTR [rax],al
  402f73:	add    al,0x25
  402f75:	or     eax,0x8f28
  402f7a:	or     al,BYTE PTR [rdi]
  402f7c:	outs   dx,DWORD PTR ds:[rsi]
  402f7d:	nop
  402f7e:	add    BYTE PTR [rax],al
  402f80:	or     ah,BYTE PTR [rsi]
  402f82:	add    ch,BYTE PTR [rax]
  402f84:	xchg   ecx,eax
  402f85:	add    BYTE PTR [rax],al
  402f87:	(bad)  
  402f88:	sub    al,0x6
  402f8a:	(bad)  
  402f8b:	xor    BYTE PTR [rbp+0x0],0x0
  402f8f:	add    al,0xde
  402f91:	(bad)  
  402f92:	or     DWORD PTR [rax],ebp
  402f94:	xchg   ecx,eax
  402f95:	add    BYTE PTR [rax],al
  402f97:	or     bl,ah
  402f99:	sub    BYTE PTR [rdi-0x21fa0000],bl
  402f9f:	(bad)  
  402fa1:	or     BYTE PTR [rdi+0x39],ch
  402fa4:	add    BYTE PTR [rax],al
  402fa6:	or     ch,BYTE PTR [rax]
  402fa8:	jne    0x402faa
  402faa:	add    BYTE PTR [rsi],al
  402fac:	fiadd  WORD PTR es:[rax]
  402faf:	sub    al,BYTE PTR [rcx]
  402fb1:	sbb    al,0x0
  402fb3:	add    BYTE PTR [rdx],al
  402fb5:	add    BYTE PTR [rdi+0x0],dl
  402fb8:	(bad)  
  402fb9:	outs   dx,BYTE PTR ds:[rsi]
  402fba:	add    BYTE PTR [rdi],al
  402fbc:	add    BYTE PTR [rax],al
  402fbe:	add    BYTE PTR [rax],al
  402fc0:	add    BYTE PTR [rax],al
  402fc2:	rex.WXB add BYTE PTR [r9],sil
  402fc5:	jl     0x402fc7
  402fc7:	(bad)  
  402fc9:	add    BYTE PTR [rax],al
  402fcb:	add    esi,eax
  402fcd:	sub    BYTE PTR [rsi+0x0],ch
  402fd0:	add    BYTE PTR [rsi],al
  402fd2:	outs   dx,DWORD PTR ds:[rsi]
  402fd3:	add    BYTE PTR ss:[rax],al
  402fd6:	or     ch,BYTE PTR [rdx*1+0x6e28]
  402fdd:	(bad)  
  402fde:	outs   dx,DWORD PTR ds:[rsi]
  402fdf:	xchg   edx,eax
  402fe0:	add    BYTE PTR [rax],al
  402fe2:	or     dh,BYTE PTR [rdx+0x1]
  402fe5:	or     eax,0x93287000
  402fea:	add    BYTE PTR [rax],al
  402fec:	or     ch,BYTE PTR [rdx]
  402fee:	sub    BYTE PTR [rdx+0x0],bh
  402ff1:	add    BYTE PTR [rsi],al
  402ff3:	jb     0x40300a
  402ff5:	or     eax,0x93287000
  402ffa:	add    BYTE PTR [rax],al
  402ffc:	or     ch,BYTE PTR [rdx]
  402ffe:	add    BYTE PTR [rax],al
  403000:	adc    esi,DWORD PTR [rax]
  403002:	(bad)  
  403003:	add    BYTE PTR [rbx],bh
  403005:	add    DWORD PTR [rax],eax
  403007:	add    BYTE PTR [rdx],cl
  403009:	add    BYTE PTR [rax],al
  40300b:	adc    DWORD PTR [rbx-0x6c],esi
  40300e:	add    BYTE PTR [rax],al
  403010:	or     cl,BYTE PTR [rdx]
  403012:	(bad)  
  403013:	sub    BYTE PTR [rbp+0x720a0000],dl
  403019:	(bad)  
  40301a:	or     eax,0x8d177000
  40301f:	add    DWORD PTR [rax],eax
  403021:	add    BYTE PTR [rcx],al
  403023:	or     eax,DWORD PTR [rdi]
  403025:	(bad)  
  403026:	add    bh,BYTE PTR [rbx+0x76]
  403029:	add    BYTE PTR [rax],al
  40302b:	add    al,0xa2
  40302d:	(bad)  
  40302e:	outs   dx,DWORD PTR ds:[rsi]
  40302f:	xchg   esi,eax
  403030:	add    BYTE PTR [rax],al
  403032:	or     ah,BYTE PTR [rsi]
  403034:	sub    BYTE PTR [rsi+0x0],ch
  403037:	add    BYTE PTR [rsi],al
  403039:	outs   dx,DWORD PTR ds:[rsi]
  40303a:	add    BYTE PTR ss:[rax],al
  40303d:	or     ch,BYTE PTR [rax+rsi*2]
  403040:	(bad)  
  403041:	sub    BYTE PTR [rbp+0x280a0000],dl
  403047:	outs   dx,BYTE PTR ds:[rsi]
  403048:	add    BYTE PTR [rax],al
  40304a:	(bad)  
  40304b:	outs   dx,DWORD PTR ds:[rsi]
  40304c:	xchg   edx,eax
  40304d:	add    BYTE PTR [rax],al
  40304f:	or     dh,BYTE PTR [rdx+0x49]
  403052:	or     eax,0x6f1b7000
  403057:	xchg   edi,eax
  403058:	add    BYTE PTR [rax],al
  40305a:	or     ch,BYTE PTR [rip+0xd4d7207]        # 0xd8da267
  403060:	add    BYTE PTR [rax+0x2b],dh
  403063:	add    eax,0xd7572
  403068:	jo     0x403081
  40306a:	lea    eax,[rcx]
  40306c:	add    BYTE PTR [rax],al
  40306e:	add    DWORD PTR [rax+rcx*1],ecx
  403071:	(bad)  
  403072:	sub    BYTE PTR [rsi+0x0],ch
  403075:	add    BYTE PTR [rsi],al
  403077:	outs   dx,DWORD PTR ds:[rsi]
  403078:	xchg   edx,eax
  403079:	add    BYTE PTR [rax],al
  40307b:	or     ah,BYTE PTR [rdx+0x966f08]
  403081:	add    BYTE PTR [rdx],cl
  403083:	sub    BYTE PTR es:[rsi+0x0],ch
  403087:	add    BYTE PTR [rsi],al
  403089:	outs   dx,DWORD PTR ds:[rsi]
  40308a:	cwde   
  40308b:	add    BYTE PTR [rax],al
  40308d:	or     dl,BYTE PTR [rdi]
  40308f:	xor    ebx,DWORD PTR [rdi]
  403091:	sub    BYTE PTR [rcx+0x190a0000],bl
  403097:	xor    edx,DWORD PTR [rdi]
  403099:	(bad)  
  40309a:	sub    BYTE PTR [rbp+0x720a0000],dl
  4030a0:	lahf   
  4030a1:	or     eax,0x8d167000
  4030a6:	add    DWORD PTR [rax],eax
  4030a8:	add    BYTE PTR [rcx],al
  4030aa:	outs   dx,DWORD PTR ds:[rsi]
  4030ab:	xchg   esi,eax
  4030ac:	add    BYTE PTR [rax],al
  4030ae:	or     ah,BYTE PTR [rsi]
  4030b0:	sub    BYTE PTR [rdi+0x0],ch
  4030b3:	add    BYTE PTR [rsi],al
  4030b5:	sub    BYTE PTR [rbp+0x2d0a0000],al
  4030bb:	and    DWORD PTR [rsi],eax
  4030bd:	sub    BYTE PTR [rbp+0x720a0000],dl
  4030c3:	stos   DWORD PTR es:[rdi],eax
  4030c4:	or     eax,0x8d177000
  4030c9:	add    DWORD PTR [rax],eax
  4030cb:	add    BYTE PTR [rcx],al
  4030cd:	or     eax,0x6f281609
  4030d2:	add    BYTE PTR [rax],al
  4030d4:	(bad)  
  4030d5:	movabs ds:0x28260a0000966f09,al
  4030de:	jo     0x4030e0
  4030e0:	add    BYTE PTR [rsi],al
  4030e2:	sub    BYTE PTR [rbp+0x2d0a0000],al
  4030e8:	and    al,0x6
  4030ea:	sub    BYTE PTR [rbp+0x720a0000],dl
  4030f0:	retf   
  4030f1:	or     eax,0x8d177000
  4030f6:	add    DWORD PTR [rax],eax
  4030f8:	add    BYTE PTR [rcx],al
  4030fa:	adc    eax,DWORD PTR [rcx+rdx*1]
  4030fd:	add    al,0x16
  4030ff:	sub    BYTE PTR [rax+0x0],dh
  403102:	add    BYTE PTR [rsi],al
  403104:	movabs ds:0x260a0000966f0411,al
  40310d:	add    ch,BYTE PTR [rax]
  40310f:	xchg   ebx,eax
  403110:	add    BYTE PTR [rax],al
  403112:	(bad)  
  403113:	sub    BYTE PTR [rbp+0x2d0a0000],al
  403119:	adc    al,BYTE PTR [rsi]
  40311b:	jb     0x403106
  40311d:	or     eax,0x28027000
  403122:	xchg   ebx,eax
  403123:	add    BYTE PTR [rax],al
  403125:	(bad)  
  403126:	outs   dx,DWORD PTR ds:[rsi]
  403127:	(bad)  
  403128:	add    BYTE PTR [rax],al
  40312a:	or     ah,BYTE PTR [rsi]
  40312c:	add    ch,BYTE PTR [rax]
  40312e:	xchg   ecx,eax
  40312f:	add    BYTE PTR [rax],al
  403131:	(bad)  
  403132:	sub    eax,0xf372060c
  403137:	or     eax,0x9b6f7000
  40313c:	add    BYTE PTR [rax],al
  40313e:	or     ah,BYTE PTR [rsi]
  403140:	(bad)  
  403141:	outs   dx,DWORD PTR ds:[rsi]
  403142:	pushf  
  403143:	add    BYTE PTR [rax],al
  403145:	or     ch,BYTE PTR [rdx]
  403147:	sbb    ch,BYTE PTR [rax]
  403149:	lahf   
  40314a:	add    BYTE PTR [rax],al
  40314c:	(bad)  
  40314d:	sub    bl,dh
  40314f:	add    ch,BYTE PTR [rax]
  403151:	xchg   ecx,eax
  403152:	add    BYTE PTR [rax],al
  403154:	(bad)  
  403155:	sub    al,0x2e
  403157:	(bad)  
  403158:	xor    BYTE PTR [rbp+0x0],0x0
  40315c:	add    al,0x28
  40315e:	jb     0x403160
  403160:	add    BYTE PTR [rsi],al
  403162:	jle    0x4031de
  403164:	add    BYTE PTR [rax],al
  403166:	add    al,0x2d
  403168:	adc    DWORD PTR [rsi+rdi*8],edx
  40316b:	(bad)  
  40316c:	movabs al,ds:0xa00009d73060000
  403175:	cmp    BYTE PTR [rdx+0x0],0x0
  403179:	add    al,0x7e
  40317b:	jp     0x40317d
  40317d:	add    BYTE PTR [rsp+rdx*1],al
  403180:	outs   dx,DWORD PTR ds:[rsi]
  403181:	sahf   
  403182:	add    BYTE PTR [rax],al
  403184:	or     ch,BYTE PTR [rdx]
  403186:	jle    0x40318a
  403188:	sub    BYTE PTR [rcx+0x2c060000],dl
  40318e:	lar    edi,WORD PTR [rsi+0x75]
  403192:	add    BYTE PTR [rax],al
  403194:	add    al,0x16
  403196:	inc    BYTE PTR [rcx]
  403198:	sub    BYTE PTR [rsi+0x0],ah
  40319b:	add    BYTE PTR [rsi],al
  40319d:	sub    al,BYTE PTR [rdx]
  40319f:	(bad)  
  4031a0:	sub    BYTE PTR [rsi+0x0],ah
  4031a3:	add    BYTE PTR [rsi],al
  4031a5:	sub    al,BYTE PTR [rax]
  4031a7:	add    BYTE PTR [rbx],bl
  4031a9:	xor    BYTE PTR [rbx],al
  4031ab:	add    BYTE PTR [rsi],ah
  4031ad:	add    BYTE PTR [rax],al
  4031af:	add    BYTE PTR [rbx],cl
  4031b1:	add    BYTE PTR [rax],al
  4031b3:	adc    DWORD PTR [rsi+0x73],edi
  4031b6:	add    BYTE PTR [rax],al
  4031b8:	add    al,0x25
  4031ba:	or     ch,BYTE PTR [rax]
  4031bc:	pop    QWORD PTR [rax]
  4031be:	add    BYTE PTR [rdx],cl
  4031c0:	jle    0x403235
  4031c2:	add    BYTE PTR [rax],al
  4031c4:	add    al,0x2
  4031c6:	jae    0x403167
  4031c8:	add    BYTE PTR [rax],al
  4031ca:	or     ch,BYTE PTR [rdi-0x60]
  4031cd:	add    BYTE PTR [rax],al
  4031cf:	or     bl,dh
  4031d1:	(bad)  
  4031d2:	(bad)  
  4031d3:	sub    BYTE PTR [rcx-0x23f60000],dl
  4031d9:	sub    al,BYTE PTR [rax]
  4031db:	add    BYTE PTR [rcx],al
  4031dd:	adc    BYTE PTR [rax],al
  4031df:	add    BYTE PTR [rdx],al
  4031e1:	add    BYTE PTR [rax+rax*1],cl
  4031e4:	adc    bl,BYTE PTR [rsi]
  4031e6:	add    BYTE PTR [rdi],al
  4031e8:	add    BYTE PTR [rax],al
  4031ea:	add    BYTE PTR [rax],al
  4031ec:	sbb    esi,DWORD PTR [rax]
  4031ee:	add    al,BYTE PTR [rax]
  4031f0:	outs   dx,BYTE PTR ds:[rsi]
  4031f1:	add    BYTE PTR [rax],al
  4031f3:	add    BYTE PTR [rax+rax*1],cl
  4031f6:	add    BYTE PTR [rcx],dl
  4031f8:	jle    0x40326d
  4031fa:	add    BYTE PTR [rax],al
  4031fc:	add    al,0x25
  4031fe:	or     al,0x28
  403200:	pop    QWORD PTR [rax]
  403202:	add    BYTE PTR [rdx],cl
  403204:	jle    0x40327a
  403206:	add    BYTE PTR [rax],al
  403208:	add    al,0x25
  40320a:	or     eax,0x8f28
  40320f:	or     bh,BYTE PTR [rsi+0x73]
  403212:	add    BYTE PTR [rax],al
  403214:	add    al,0x6f
  403216:	movabs eax,ds:0x302b0a59170a0000
  40321f:	jle    0x403294
  403221:	add    BYTE PTR [rax],al
  403223:	add    al,0x6
  403225:	outs   dx,DWORD PTR ds:[rsi]
  403226:	movabs ds:0xa0000a36f0a0000,al
  40322f:	jne    0x40323c
  403231:	add    BYTE PTR [rax],al
  403233:	add    cl,BYTE PTR [rbx]
  403235:	(bad)  
  403236:	sub    eax,0x737e0d
  40323b:	add    BYTE PTR [rsi+rax*1],al
  40323e:	outs   dx,DWORD PTR ds:[rsi]
  40323f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  403240:	add    BYTE PTR [rax],al
  403242:	or     ch,BYTE PTR [rbx]
  403244:	(bad)  
  403245:	(bad)  
  403246:	outs   dx,DWORD PTR ds:[rsi]
  403247:	popf   
  403248:	add    BYTE PTR [rax],al
  40324a:	(bad)  
  40324b:	(bad)  
  40324c:	(bad)  
  40324d:	pop    rcx
  40324e:	or     al,BYTE PTR [rsi]
  403250:	(bad)  
  403251:	(bad)  
  403252:	int3   
  403253:	fiadd  WORD PTR [rdi]
  403255:	or     DWORD PTR [rax],ebp
  403257:	xchg   ecx,eax
  403258:	add    BYTE PTR [rax],al
  40325a:	or     bl,ah
  40325c:	fiadd  WORD PTR [rdi]
  40325e:	or     BYTE PTR [rax],ch
  403260:	xchg   ecx,eax
  403261:	add    BYTE PTR [rax],al
  403263:	or     bl,ah
  403265:	sub    al,BYTE PTR [rax]
  403267:	add    BYTE PTR [rcx],al
  403269:	sbb    al,0x0
  40326b:	add    BYTE PTR [rdx],al
  40326d:	add    BYTE PTR [rax],bl
  40326f:	add    BYTE PTR [rbp+0x5d],al
  403272:	add    BYTE PTR [rdi],al
  403274:	add    BYTE PTR [rax],al
  403276:	add    BYTE PTR [rax],al
  403278:	add    al,BYTE PTR [rax]
  40327a:	or     al,0x0
  40327c:	pop    rdx
  40327d:	data16 add BYTE PTR [rdi],al
  403280:	add    BYTE PTR [rax],al
  403282:	add    BYTE PTR [rax],al
  403284:	outs   dx,BYTE PTR ds:[rsi]
  403285:	jae    0x40322c
  403287:	add    BYTE PTR [rax],al
  403289:	or     al,BYTE PTR [rax+0x4000073]
  40328f:	jae    0x4032a4
  403291:	add    BYTE PTR [rax],al
  403293:	or     al,BYTE PTR [rax+0x4000074]
  403299:	(bad)  
  40329a:	xor    BYTE PTR [rbp+0x0],0x0
  40329e:	add    al,0x2a
  4032a0:	add    esi,DWORD PTR [rax]
  4032a2:	add    al,BYTE PTR [rax]
  4032a4:	pop    rsi
  4032a5:	add    BYTE PTR [rax],al
  4032a7:	add    BYTE PTR [rax],al
  4032a9:	add    BYTE PTR [rax],al
  4032ab:	add    BYTE PTR [rbx-0x5a],dh
  4032ae:	add    BYTE PTR [rax],al
  4032b0:	or     al,BYTE PTR [rax+0x400007c]
  4032b6:	jle    0x403334
  4032b8:	add    BYTE PTR [rax],al
  4032ba:	add    al,0x72
  4032bc:	(bad)  
  4032bd:	(bad)  
  4032be:	add    BYTE PTR [rax+0x6f],dh
  4032c1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4032c2:	add    BYTE PTR [rax],al
  4032c4:	or     bh,BYTE PTR [rsi+0x7c]
  4032c7:	add    BYTE PTR [rax],al
  4032c9:	add    al,0x72
  4032cb:	femms  
  4032cd:	add    BYTE PTR [rax+0x6f],dh
  4032d0:	test   al,0x0
  4032d2:	add    BYTE PTR [rdx],cl
  4032d4:	jle    0x403352
  4032d6:	add    BYTE PTR [rax],al
  4032d8:	add    al,0x1b
  4032da:	sub    BYTE PTR [rcx+0x6f0a0000],ch
  4032e0:	stos   BYTE PTR es:[rdi],al
  4032e1:	add    BYTE PTR [rax],al
  4032e3:	or     bh,BYTE PTR [rsi+0x7c]
  4032e6:	add    BYTE PTR [rax],al
  4032e8:	add    al,0x17
  4032ea:	outs   dx,DWORD PTR ds:[rsi]
  4032eb:	stos   DWORD PTR es:[rdi],eax
  4032ec:	add    BYTE PTR [rax],al
  4032ee:	or     bh,BYTE PTR [rsi+0x7c]
  4032f1:	add    BYTE PTR [rax],al
  4032f3:	add    al,0x17
  4032f5:	outs   dx,DWORD PTR ds:[rsi]
  4032f6:	lods   al,BYTE PTR ds:[rsi]
  4032f7:	add    BYTE PTR [rax],al
  4032f9:	or     bh,BYTE PTR [rsi+0x7c]
  4032fc:	add    BYTE PTR [rax],al
  4032fe:	add    al,0x72
  403300:	push   rbx
  403301:	(bad)  
  403302:	add    BYTE PTR [rax+0x6f],dh
  403305:	lods   eax,DWORD PTR ds:[rsi]
  403306:	add    BYTE PTR [rax],al
  403308:	or     ch,BYTE PTR [rdx]
  40330a:	and    al,BYTE PTR [rdx]
  40330c:	adc    al,0x28
  40330e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40330f:	add    BYTE PTR [rax],al
  403311:	(bad)  
  403312:	sub    ch,BYTE PTR [rdx]
  403314:	add    al,BYTE PTR [rbx]
  403316:	(bad)  
  403317:	(bad)  
  403318:	sub    BYTE PTR [rbp+0x2a060000],ah
  40331e:	sub    al,BYTE PTR [rdx]
  403320:	add    eax,DWORD PTR [rax*1+0x9728]
  403327:	(bad)  
  403328:	sub    dh,BYTE PTR [rdx+0x7c7e]
  40332e:	add    al,0x6f
  403330:	xor    al,0x0
  403332:	add    BYTE PTR [rdx],cl
  403334:	(bad)  
  403335:	add    DWORD PTR cs:[rdx],ebp
  403338:	add    bh,BYTE PTR [rsi+0x7c]
  40333b:	add    BYTE PTR [rax],al
  40333d:	add    al,0x6f
  40333f:	scas   al,BYTE PTR es:[rdi]
  403340:	add    BYTE PTR [rax],al
  403342:	or     bh,BYTE PTR [rbp+0x7b]
  403345:	add    BYTE PTR [rax],al
  403347:	add    al,0x2
  403349:	sub    BYTE PTR [rax+0x2060000],bl
  40334f:	adc    al,0x7d
  403351:	jnp    0x403353
  403353:	add    BYTE PTR [rdx+rbp*1],al
  403356:	add    BYTE PTR [rax],al
  403358:	adc    esi,DWORD PTR [rax]
  40335a:	add    eax,0x2a00
  40335f:	add    BYTE PTR [rcx],al
  403361:	add    BYTE PTR [rax],al
  403363:	adc    DWORD PTR [rax],ebp
  403365:	xchg   ebp,eax
  403366:	add    BYTE PTR [rax],al
  403368:	or     dh,BYTE PTR [rdx+0x7d]
  40336b:	(bad)  
  40336c:	add    BYTE PTR [rax+0x18],dh
  40336f:	lea    eax,[rcx]
  403371:	add    BYTE PTR [rax],al
  403373:	add    DWORD PTR [rdx],ecx
  403375:	(bad)  
  403376:	(bad)  
  403377:	add    ch,BYTE PTR [rax]
  403379:	fwait
  40337a:	add    BYTE PTR [rax],al
  40337c:	(bad)  
  40337d:	movabs ds:0x400007b7b021706,al
  403386:	movabs ds:0x1e2a0a0000162806,al
  40338f:	add    bh,BYTE PTR [rbx-0x7f]
  403392:	add    BYTE PTR [rax],al
  403394:	add    al,0x2a
  403396:	(bad)  
  403397:	add    bh,BYTE PTR [rbx-0x7c]
  40339a:	add    BYTE PTR [rax],al
  40339c:	add    al,0x2a
  40339e:	(bad)  
  40339f:	add    bh,BYTE PTR [rbx-0x7e]
  4033a2:	add    BYTE PTR [rax],al
  4033a4:	add    al,0x2a
  4033a6:	sbb    ch,BYTE PTR [rax]
  4033a8:	outs   dx,BYTE PTR ds:[rsi]
  4033a9:	add    BYTE PTR [rax],al
  4033ab:	(bad)  
  4033ac:	sub    dh,dl
  4033ae:	add    bh,BYTE PTR [rsi+0x37]
  4033b1:	add    BYTE PTR [rax],al
  4033b3:	or     bh,BYTE PTR [rbp-0x7f]
  4033b6:	add    BYTE PTR [rax],al
  4033b8:	add    al,0x2
  4033ba:	adc    eax,0x827d
  4033bf:	add    al,0x2
  4033c1:	(bad)  
  4033c2:	jge    0x403347
  4033c4:	add    BYTE PTR [rax],al
  4033c6:	add    al,0x2
  4033c8:	sub    BYTE PTR [rbx],dl
  4033ca:	add    BYTE PTR [rax],al
  4033cc:	or     al,BYTE PTR [rbx]
  4033ce:	sub    BYTE PTR [rbp+0x2c0a0000],al
  4033d4:	add    DWORD PTR [rdx],ebp
  4033d6:	add    al,BYTE PTR [rbx]
  4033d8:	sub    BYTE PTR [rbp+0x2060000],ch
  4033de:	sub    BYTE PTR [rax+0x2060000],dh
  4033e4:	sub    BYTE PTR [rcx+0x2a060000],dh
  4033ea:	add    dx,WORD PTR [rdi]
  4033ed:	sub    BYTE PTR [rdi+0x2c0a0000],ch
  4033f3:	or     BYTE PTR [rdx],al
  4033f5:	add    ebp,DWORD PTR [rax]
  4033f7:	scas   eax,DWORD PTR es:[rdi]
  4033f8:	add    BYTE PTR [rax],al
  4033fa:	(bad)  
  4033fb:	sub    al,BYTE PTR [rdx]
  4033fd:	add    ebp,DWORD PTR [rax]
  4033ff:	scas   al,BYTE PTR es:[rdi]
  403400:	add    BYTE PTR [rax],al
  403402:	(bad)  
  403403:	sub    dl,BYTE PTR [rbx]
  403405:	xor    BYTE PTR [rax+rax*1],al
  403408:	fld    QWORD PTR [rax]
  40340a:	add    BYTE PTR [rax],al
  40340c:	or     eax,0x3110000
  403411:	jb     0x4033ca
  403413:	(bad)  
  403414:	add    BYTE PTR [rax+0x6f],dh
  403417:	mov    al,0x0
  403419:	add    BYTE PTR [rdx],cl
  40341b:	sub    al,0x45
  40341d:	add    esi,DWORD PTR [rdx-0x49]
  403420:	(bad)  
  403421:	add    BYTE PTR [rax+0x28],dh
  403424:	adc    eax,0x6f0a0000
  403429:	mov    cl,0x0
  40342b:	add    BYTE PTR [rdx],cl
  40342d:	or     edx,DWORD PTR [rdx]
  40342f:	add    DWORD PTR [rax],ebp
  403431:	xchg   ebp,eax
  403432:	add    BYTE PTR [rax],al
  403434:	or     ch,BYTE PTR [rax]
  403436:	mov    dl,0x0
  403438:	add    BYTE PTR [rdx],cl
  40343a:	outs   dx,DWORD PTR ds:[rsi]
  40343b:	mov    bl,0x0
  40343d:	add    BYTE PTR [rdx],cl
  40343f:	or     al,BYTE PTR [rsi]
  403441:	sub    BYTE PTR [rax+rax*1+0x82c0a00],dh
  403448:	add    al,BYTE PTR [rsi]
  40344a:	jge    0x4033cd
  40344c:	add    BYTE PTR [rax],al
  40344e:	add    al,0x2a
  403450:	add    esi,DWORD PTR [rdx-0x49]
  403453:	(bad)  
  403454:	add    BYTE PTR [rax+0x72],dh
  403457:	leave  
  403458:	(bad)  
  403459:	add    BYTE PTR [rax+0x6f],dh
  40345c:	mov    bl,0x0
  40345e:	add    BYTE PTR [rdx],cl
  403460:	adc    BYTE PTR [rcx],al
  403462:	add    esi,DWORD PTR [rdx-0x2d]
  403465:	(bad)  
  403466:	add    BYTE PTR [rax+0x6f],dh
  403469:	mov    al,0x0
  40346b:	add    BYTE PTR [rdx],cl
  40346d:	sub    al,0x2a
  40346f:	add    ch,BYTE PTR [rax]
  403471:	stos   DWORD PTR es:[rdi],eax
  403472:	add    BYTE PTR [rax],al
  403474:	(bad)  
  403475:	outs   dx,DWORD PTR ds:[rsi]
  403476:	xchg   edx,eax
  403477:	add    BYTE PTR [rax],al
  403479:	or     ch,BYTE PTR [rax]
  40347b:	test   DWORD PTR [rax],eax
  40347d:	add    BYTE PTR [rdx],cl
  40347f:	sub    eax,0xd3720318
  403484:	(bad)  
  403485:	add    BYTE PTR [rax+0x2],dh
  403488:	sub    BYTE PTR [rbx+0x6f060000],ch
  40348e:	xchg   edx,eax
  40348f:	add    BYTE PTR [rax],al
  403491:	or     ch,BYTE PTR [rdi-0x4d]
  403494:	add    BYTE PTR [rax],al
  403496:	or     dl,BYTE PTR [rax]
  403498:	add    DWORD PTR [rbx],eax
  40349a:	jb     0x403487
  40349c:	(bad)  
  40349d:	add    BYTE PTR [rax+0x6f],dh
  4034a0:	mov    al,0x0
  4034a2:	add    BYTE PTR [rdx],cl
  4034a4:	sub    al,0x2a
  4034a6:	add    ch,BYTE PTR [rax]
  4034a8:	stos   DWORD PTR es:[rdi],eax
  4034a9:	add    BYTE PTR [rax],al
  4034ab:	(bad)  
  4034ac:	outs   dx,DWORD PTR ds:[rsi]
  4034ad:	mov    ch,0x0
  4034af:	add    BYTE PTR [rdx],cl
  4034b1:	sub    BYTE PTR [rbp+0x2d0a0000],al
  4034b7:	sbb    BYTE PTR [rbx],al
  4034b9:	jb     0x4034a6
  4034bb:	(bad)  
  4034bc:	add    BYTE PTR [rax+0x2],dh
  4034bf:	sub    BYTE PTR [rbx+0x6f060000],ch
  4034c5:	mov    ch,0x0
  4034c7:	add    BYTE PTR [rdx],cl
  4034c9:	outs   dx,DWORD PTR ds:[rsi]
  4034ca:	mov    bl,0x0
  4034cc:	add    BYTE PTR [rdx],cl
  4034ce:	adc    BYTE PTR [rcx],al
  4034d0:	add    ebp,DWORD PTR [rax]
  4034d2:	mov    dh,0x0
  4034d4:	add    BYTE PTR [rdx],cl
  4034d6:	sub    eax,0x7a280d
  4034db:	add    BYTE PTR [rsi],al
  4034dd:	add    ebp,DWORD PTR [rax]
  4034df:	xchg   ebx,eax
  4034e0:	add    BYTE PTR [rax],al
  4034e2:	or     dl,BYTE PTR [rax]
  4034e4:	add    DWORD PTR [rdx],eax
  4034e6:	add    edi,DWORD PTR [rbp-0x7f]
  4034e9:	add    BYTE PTR [rax],al
  4034eb:	add    al,0x2a
  4034ed:	add    BYTE PTR [rax],al
  4034ef:	add    BYTE PTR [rbx],dl
  4034f1:	xor    BYTE PTR [rbx],al
  4034f3:	add    BYTE PTR [rax+rax*1],ch
  4034f6:	add    BYTE PTR [rax],al
  4034f8:	(bad)  
  4034f9:	add    BYTE PTR [rax],al
  4034fb:	adc    DWORD PTR [rbx],eax
  4034fd:	(bad)  
  4034fe:	jae    0x4034b7
  403500:	add    BYTE PTR [rax],al
  403502:	or     cl,BYTE PTR [rdx]
  403504:	(bad)  
  403505:	outs   dx,DWORD PTR ds:[rsi]
  403506:	mov    eax,0x2c0a0000
  40350b:	or     eax,0x3e6f0602
  403510:	add    BYTE PTR [rax],al
  403512:	or     bh,BYTE PTR [rbp-0x7f]
  403515:	add    BYTE PTR [rax],al
  403517:	add    al,0x2a
  403519:	add    al,BYTE PTR [rbx]
  40351b:	jge    0x40349e
  40351d:	add    BYTE PTR [rax],al
  40351f:	add    al,0x2
  403521:	(bad)  
  403522:	jge    0x4034a7
  403524:	add    BYTE PTR [rax],al
  403526:	add    al,0x2a
  403528:	mov    al,BYTE PTR [rdx]
  40352a:	jnp    0x4034af
  40352c:	add    BYTE PTR [rax],al
  40352e:	add    al,0x2c
  403530:	adc    al,BYTE PTR [rdx]
  403532:	add    bh,BYTE PTR [rbx-0x7f]
  403535:	add    BYTE PTR [rax],al
  403537:	add    al,0x28
  403539:	mov    ah,0x0
  40353b:	add    BYTE PTR [rdx],cl
  40353d:	jge    0x4034c3
  40353f:	add    BYTE PTR [rax],al
  403541:	add    al,0x2a
  403543:	add    dl,BYTE PTR [rdi]
  403545:	jge    0x4034cb
  403547:	add    BYTE PTR [rax],al
  403549:	add    al,0x2a
  40354b:	pop    rsi
  40354c:	add    al,BYTE PTR [rdx]
  40354e:	jnp    0x4034d1
  403550:	add    BYTE PTR [rax],al
  403552:	add    al,0x28
  403554:	mov    ecx,0x6f0a0000
  403559:	mov    edx,0x7d0a0000
  40355e:	(bad)  
  40355f:	add    BYTE PTR [rax],al
  403561:	add    al,0x2a
  403563:	pop    rsi
  403564:	add    al,BYTE PTR [rdx]
  403566:	jno    0x403576
  403568:	add    BYTE PTR [rax],al
  40356a:	add    cl,BYTE PTR [rsi+rcx*1+0x28020000]
  403571:	mov    ebp,0x7d0a0000
  403576:	test   DWORD PTR [rax],eax
  403578:	add    BYTE PTR [rdx+rbp*1],al
  40357b:	add    ch,BYTE PTR ds:[rax]
  40357e:	mov    dl,0x0
  403580:	add    BYTE PTR [rsi],al
  403582:	add    eax,DWORD PTR [rdx]
  403584:	sub    BYTE PTR [rsi+0x26060000],dh
  40358a:	sub    al,BYTE PTR [rax]
  40358c:	adc    esi,DWORD PTR [rax]
  40358e:	add    al,BYTE PTR [rax]
  403590:	sbb    al,BYTE PTR [rax]
  403592:	add    BYTE PTR [rax],al
  403594:	add    eax,0x12110000
  403599:	add    dh,bh
  40359b:	adc    eax,0x200000e
  4035a0:	adc    al,BYTE PTR [rax]
  4035a2:	sub    BYTE PTR [rdx+0x2060000],dh
  4035a8:	adc    al,BYTE PTR [rax]
  4035aa:	sub    BYTE PTR [rdi+0x26060000],dh
  4035b0:	(bad)  
  4035b1:	sub    bl,BYTE PTR [rsi]
  4035b3:	add    ch,BYTE PTR [rax]
  4035b5:	adc    eax,DWORD PTR [rax]
  4035b7:	add    BYTE PTR [rdx],cl
  4035b9:	sub    bl,BYTE PTR [rsi]
  4035bb:	add    ch,BYTE PTR [rax]
  4035bd:	adc    eax,DWORD PTR [rax]
  4035bf:	add    BYTE PTR [rdx],cl
  4035c1:	sub    dh,BYTE PTR [rdx]
  4035c3:	add    bh,BYTE PTR [rbx-0x5d]
  4035c6:	add    BYTE PTR [rax],al
  4035c8:	add    al,0x6f
  4035ca:	test   al,0x0
  4035cc:	add    BYTE PTR [rsi],al
  4035ce:	sub    al,BYTE PTR [rax]
  4035d0:	add    esi,DWORD PTR [rax]
  4035d2:	add    eax,DWORD PTR [rax]
  4035d4:	add    BYTE PTR [rax],r8b
  4035d7:	add    BYTE PTR [rax],al
  4035d9:	add    BYTE PTR [rax],al
  4035db:	add    BYTE PTR [rdx],al
  4035dd:	jnp    0x403582
  4035df:	add    BYTE PTR [rax],al
  4035e1:	add    al,0x6f
  4035e3:	test   al,0x0
  4035e5:	add    BYTE PTR [rsi],al
  4035e7:	add    ebp,DWORD PTR [rax]
  4035e9:	ret    0x0
  4035ec:	or     ch,BYTE PTR [rcx+rax*1]
  4035ef:	sub    al,BYTE PTR [rdx]
  4035f1:	add    edi,DWORD PTR [rbp-0x5c]
  4035f4:	add    BYTE PTR [rax],al
  4035f6:	add    al,0x2
  4035f8:	add    bh,BYTE PTR [rbx-0x5c]
  4035fb:	add    BYTE PTR [rax],al
  4035fd:	add    al,0x73
  4035ff:	lods   al,BYTE PTR ds:[rsi]
  403600:	add    BYTE PTR [rax],al
  403602:	(bad)  
  403603:	jge    0x4035a8
  403605:	add    BYTE PTR [rax],al
  403607:	add    al,0x2
  403609:	jb     0x40360a
  40360b:	(bad)  
  40360c:	add    BYTE PTR [rax+0x28],dh
  40360f:	push   0x2060000
  403614:	add    ch,BYTE PTR [rax]
  403616:	mov    edi,0x28060000
  40361b:	data16 add BYTE PTR [rax],al
  40361e:	(bad)  
  40361f:	sub    dh,BYTE PTR [rdx]
  403621:	add    bh,BYTE PTR [rbx-0x5d]
  403624:	add    BYTE PTR [rax],al
  403626:	add    al,0x6f
  403628:	test   eax,0x2a060000
  40362d:	xor    al,BYTE PTR [rdx]
  40362f:	jle    0x403668
  403631:	add    BYTE PTR [rax],al
  403633:	or     ch,BYTE PTR [rax]
  403635:	rol    DWORD PTR [rax],0x0
  403638:	(bad)  
  403639:	sub    ah,BYTE PTR [rsi+0x2]
  40363c:	add    bh,BYTE PTR [rbx-0x5c]
  40363f:	add    BYTE PTR [rax],al
  403641:	add    al,0x28
  403643:	mov    esi,0x2060000
  403648:	add    ch,BYTE PTR [rax]
  40364a:	mov    edi,0x28060000
  40364f:	data16 add BYTE PTR [rax],al
  403652:	(bad)  
  403653:	sub    dl,BYTE PTR [rbx]
  403655:	xor    BYTE PTR [rax+rax*1],al
  403658:	push   rdx
  403659:	add    BYTE PTR [rax],al
  40365b:	add    BYTE PTR [rdi],cl
  40365d:	add    BYTE PTR [rax],al
  40365f:	adc    DWORD PTR [rdx+rcx*1],edx
  403662:	add    dh,BYTE PTR [rdx+0x1f]
  403665:	or     al,0x0
  403667:	jo     0x4036dc
  403669:	lods   al,BYTE PTR ds:[rsi]
  40366a:	add    BYTE PTR [rax],al
  40366c:	(bad)  
  40366d:	jge    0x403612
  40366f:	add    BYTE PTR [rax],al
  403671:	add    al,0x2
  403673:	jle    0x4036ac
  403675:	add    BYTE PTR [rax],al
  403677:	or     bh,BYTE PTR [rbp-0x5c]
  40367a:	add    BYTE PTR [rax],al
  40367c:	add    al,0x2
  40367e:	sub    BYTE PTR [rdx+0x0],ch
  403681:	add    BYTE PTR [rsi],al
  403683:	add    al,BYTE PTR [rbx]
  403685:	jge    0x40362b
  403687:	add    BYTE PTR [rax],al
  403689:	add    al,0x2
  40368b:	add    bh,BYTE PTR [rbx-0x5c]
  40368e:	add    BYTE PTR [rax],al
  403690:	add    al,0x28
  403692:	mov    esi,0x28060000
  403697:	outs   dx,BYTE PTR ds:[rsi]
  403698:	add    BYTE PTR [rax],al
  40369a:	(bad)  
  40369b:	(bad)  
  40369c:	sub    eax,0x6fe020d
  4036a1:	ret    
  4036a2:	add    BYTE PTR [rax],al
  4036a4:	(bad)  
  4036a5:	jae    0x40366a
  4036a7:	add    BYTE PTR [rax],al
  4036a9:	or     cl,BYTE PTR [rdx]
  4036ab:	(bad)  
  4036ac:	outs   dx,DWORD PTR ds:[rsi]
  4036ad:	(bad)  
  4036ae:	add    BYTE PTR [rax],al
  4036b0:	or     ch,BYTE PTR [rdx]
  4036b2:	add    BYTE PTR [rax],al
  4036b4:	sbb    esi,DWORD PTR [rax]
  4036b6:	add    al,BYTE PTR [rax]
  4036b8:	pop    rdx
  4036b9:	add    BYTE PTR [rax],al
  4036bb:	add    BYTE PTR [rax],dl
  4036bd:	add    BYTE PTR [rax],al
  4036bf:	adc    DWORD PTR [rbx+0x27],esi
  4036c2:	add    DWORD PTR [rax],eax
  4036c4:	(bad)  
  4036c5:	or     dh,BYTE PTR [rbx-0x79]
  4036c8:	add    BYTE PTR [rax],al
  4036ca:	or     cl,BYTE PTR [rbx]
  4036cc:	(bad)  
  4036cd:	jb     0x4036e0
  4036cf:	(bad)  
  4036d1:	jo     0x403742
  4036d3:	(bad)
  4036d6:	or     al,BYTE PTR [rdi]
  4036d8:	add    ch,BYTE PTR [rax]
  4036da:	mov    ebp,0x6f060000
  4036df:	mov    BYTE PTR [rax],al
  4036e1:	add    BYTE PTR [rdx],cl
  4036e3:	(bad)  
  4036e4:	sub    BYTE PTR [rdx+0x0],bh
  4036e7:	add    BYTE PTR [rsi],al
  4036e9:	outs   dx,DWORD PTR ds:[rsi]
  4036ea:	mov    BYTE PTR [rax],0x0
  4036ed:	or     al,BYTE PTR [rdi]
  4036ef:	(bad)  
  4036f0:	outs   dx,DWORD PTR ds:[rsi]
  4036f1:	mov    DWORD PTR [rax],0x28070a00
  4036f7:	enter  0x0,0xa
  4036fb:	fimul  WORD PTR es:[rdi]
  4036fe:	or     al,0x8
  403700:	outs   dx,DWORD PTR ds:[rsi]
  403701:	cmp    DWORD PTR [rax],eax
  403703:	add    BYTE PTR [rdx],cl
  403705:	sub    BYTE PTR [rbp+0x0],dh
  403708:	add    BYTE PTR [rsi],al
  40370a:	fiadd  WORD PTR es:[rax]
  40370d:	fimul  WORD PTR [rdx]
  40370f:	(bad)  
  403710:	sub    al,0x6
  403712:	(bad)  
  403713:	outs   dx,DWORD PTR ds:[rsi]
  403714:	add    DWORD PTR [rax],eax
  403716:	add    BYTE PTR [rdx],cl
  403718:	fsubr  QWORD PTR [rdx]
  40371a:	add    BYTE PTR [rax],al
  40371c:	add    DWORD PTR [rax+rax*1],ebx
  40371f:	add    BYTE PTR [rax],al
  403721:	add    BYTE PTR [rip+0x3e0900],dh        # 0x7e4027
  403727:	(bad)  
  403729:	add    BYTE PTR [rax],al
  40372b:	add    DWORD PTR [rdx],eax
  40372d:	add    BYTE PTR [rsi],al
  40372f:	add    BYTE PTR [rcx+0x4f],cl
  403732:	add    BYTE PTR [rdx],cl
  403734:	add    BYTE PTR [rax],al
  403736:	add    BYTE PTR [rax],al
  403738:	(bad)  
  403739:	add    bh,BYTE PTR [rbx-0x5a]
  40373c:	add    BYTE PTR [rax],al
  40373e:	add    al,0x2a
  403740:	xchg   esi,eax
  403741:	add    al,BYTE PTR [rbx]
  403743:	jge    0x4036eb
  403745:	add    BYTE PTR [rax],al
  403747:	add    al,0x2
  403749:	sub    al,cl
  40374b:	add    BYTE PTR [rax],al
  40374d:	(bad)  
  40374e:	add    dh,BYTE PTR [rdx+0x1b]
  403751:	(bad)  
  403753:	jo     0x40377d
  403755:	push   0x2060000
  40375a:	add    ch,BYTE PTR [rax]
  40375c:	leave  
  40375d:	add    BYTE PTR [rax],al
  40375f:	(bad)  
  403760:	sub    BYTE PTR [rsi+0x0],ah
  403763:	add    BYTE PTR [rsi],al
  403765:	sub    dh,BYTE PTR [rdx]
  403767:	add    bh,BYTE PTR [rbx-0x5b]
  40376a:	add    BYTE PTR [rax],al
  40376c:	add    al,0x6f
  40376e:	leave  
  40376f:	add    BYTE PTR [rax],al
  403771:	or     ch,BYTE PTR [rdx]
  403773:	push   0x2
  403775:	add    edi,DWORD PTR [rbp-0x59]
  403778:	add    BYTE PTR [rax],al
  40377a:	add    al,0x2
  40377c:	sub    al,cl
  40377e:	add    BYTE PTR [rax],al
  403780:	(bad)  
  403781:	add    al,BYTE PTR [rdx]
  403783:	sub    cl,cl
  403785:	add    BYTE PTR [rax],al
  403787:	(bad)  
  403788:	sub    BYTE PTR [rsi+0x0],ah
  40378b:	add    BYTE PTR [rsi],al
  40378d:	sub    al,BYTE PTR [rax]
  40378f:	add    BYTE PTR [rbx],bl
  403791:	xor    BYTE PTR [rdx],al
  403793:	add    bl,dl
  403795:	add    BYTE PTR [rax],al
  403797:	add    BYTE PTR [rcx],dl
  403799:	add    BYTE PTR [rax],al
  40379b:	adc    DWORD PTR [rdx],eax
  40379d:	jnp    0x403745
  40379f:	add    BYTE PTR [rax],al
  4037a1:	add    al,0x28
  4037a3:	test   DWORD PTR [rax],eax
  4037a5:	add    BYTE PTR [rdx],cl
  4037a7:	sub    eax,0xa77b020d
  4037ac:	add    BYTE PTR [rax],al
  4037ae:	add    al,0x28
  4037b0:	test   DWORD PTR [rax],eax
  4037b2:	add    BYTE PTR [rdx],cl
  4037b4:	sub    al,0x1
  4037b6:	sub    dh,BYTE PTR [rdx+0x37]
  4037b9:	(bad)  
  4037bb:	jo     0x4037e5
  4037bd:	retf   0x0
  4037c0:	or     cl,BYTE PTR [rdx]
  4037c2:	(bad)  
  4037c3:	add    bh,BYTE PTR [rbx-0x59]
  4037c6:	add    BYTE PTR [rax],al
  4037c8:	add    al,0x28
  4037ca:	xchg   ebx,eax
  4037cb:	add    BYTE PTR [rax],al
  4037cd:	or     dh,BYTE PTR [rbx-0x35]
  4037d0:	add    BYTE PTR [rax],al
  4037d2:	or     cl,BYTE PTR [rbx]
  4037d4:	(bad)  
  4037d5:	outs   dx,DWORD PTR ds:[rsi]
  4037d6:	int3   
  4037d7:	add    BYTE PTR [rax],al
  4037d9:	or     ch,BYTE PTR [rdx+rsi*1]
  4037dc:	add    bh,BYTE PTR [rbx-0x5b]
  4037df:	add    BYTE PTR [rax],al
  4037e1:	add    al,0x2d
  4037e3:	sub    al,BYTE PTR [rdi]
  4037e5:	add    bh,BYTE PTR [rbx-0x5a]
  4037e8:	add    BYTE PTR [rax],al
  4037ea:	add    al,0x6f
  4037ec:	int    0x0
  4037ee:	add    BYTE PTR [rdx],cl
  4037f0:	or     al,0x8
  4037f2:	sub    al,0x6f
  4037f4:	or     BYTE PTR [rsi+0x69311669],cl
  4037fa:	add    al,BYTE PTR [rdi]
  4037fc:	jge    0x4037a3
  4037fe:	add    BYTE PTR [rax],al
  403800:	add    al,0x2
  403802:	jb     0x403855
  403804:	(bad)  
  403806:	jo     0x403830
  403808:	push   0x2b060000
  40380d:	push   rbp
  40380e:	jb     0x403877
  403810:	(bad)  
  403812:	jo     0x40383c
  403814:	retf   0x0
  403817:	or     cl,BYTE PTR [rdx]
  403819:	(bad)  
  40381a:	add    bh,BYTE PTR [rbx-0x59]
  40381d:	add    BYTE PTR [rax],al
  40381f:	add    al,0x28
  403821:	xchg   ebx,eax
  403822:	add    BYTE PTR [rax],al
  403824:	or     dh,BYTE PTR [rbx-0x35]
  403827:	add    BYTE PTR [rax],al
  403829:	or     cl,BYTE PTR [rbx]
  40382b:	(bad)  
  40382c:	outs   dx,DWORD PTR ds:[rsi]
  40382d:	int3   
  40382e:	add    BYTE PTR [rax],al
  403830:	or     ch,BYTE PTR [rax+rsi*1]
  403833:	add    bh,BYTE PTR [rbx-0x5b]
  403836:	add    BYTE PTR [rax],al
  403838:	add    al,0x2d
  40383a:	sub    BYTE PTR [rdi],al
  40383c:	add    bh,BYTE PTR [rbx-0x5a]
  40383f:	add    BYTE PTR [rax],al
  403841:	add    al,0x6f
  403843:	int    0x0
  403845:	add    BYTE PTR [rdx],cl
  403847:	or     eax,0x9182c09
  40384c:	mov    gs,WORD PTR [rcx+0x16]
  40384f:	xor    DWORD PTR [rdx],edx
  403851:	add    al,BYTE PTR [rdi]
  403853:	jge    0x4037fa
  403855:	add    BYTE PTR [rax],al
  403857:	add    al,0x2
  403859:	jb     0x4038ac
  40385b:	(bad)  
  40385d:	jo     0x403887
  40385f:	push   0xffffffffde060000
  403864:	or     DWORD PTR [rsi],esp
  403866:	fiadd  WORD PTR [rsi]
  403868:	fiadd  WORD PTR es:[rbx]
  40386b:	fiadd  WORD PTR es:[rax]
  40386e:	sub    al,BYTE PTR [rax]
  403870:	add    DWORD PTR [rax],ebp
  403872:	add    BYTE PTR [rax],al
  403874:	add    BYTE PTR [rax],al
  403876:	sbb    eax,DWORD PTR [rax]
  403878:	scas   al,BYTE PTR es:[rdi]
  403879:	leave  
  40387a:	add    BYTE PTR [rbx],al
  40387c:	xchg   esp,eax
  40387d:	add    BYTE PTR [rax],al
  40387f:	add    DWORD PTR [rax],eax
  403881:	add    BYTE PTR [rbx],bl
  403883:	add    BYTE PTR [rsi+0x680300cc],ch
  403889:	add    BYTE PTR [rax],al
  40388b:	add    DWORD PTR [rax],eax
  40388d:	add    BYTE PTR [rbx],bl
  40388f:	add    BYTE PTR [rsi-0x6afcff31],ch
  403895:	add    BYTE PTR [rax],al
  403897:	add    DWORD PTR [rsi],esi
  403899:	add    bh,BYTE PTR [rbx-0x5b]
  40389c:	add    BYTE PTR [rax],al
  40389e:	add    al,0x14
  4038a0:	inc    BYTE PTR [rcx]
  4038a2:	(bad)  
  4038a3:	inc    BYTE PTR [rcx]
  4038a5:	sub    bl,BYTE PTR [rsi]
  4038a7:	add    ch,BYTE PTR [rax]
  4038a9:	push   0x0
  4038ab:	add    BYTE PTR [rsi],al
  4038ad:	sub    bh,BYTE PTR [rdx]
  4038af:	add    ch,BYTE PTR [rax]
  4038b1:	push   0x0
  4038b3:	add    BYTE PTR [rsi],al
  4038b5:	add    al,BYTE PTR [rbx]
  4038b7:	sub    bh,al
  4038b9:	add    BYTE PTR [rax],al
  4038bb:	(bad)  
  4038bc:	sub    al,BYTE PTR [rax]
  4038be:	add    BYTE PTR [rax],al
  4038c0:	sbb    esi,DWORD PTR [rax]
  4038c2:	add    al,BYTE PTR [rax]
  4038c4:	pop    rdx
  4038c5:	add    BYTE PTR [rax],al
  4038c7:	add    BYTE PTR [rax],dl
  4038c9:	add    BYTE PTR [rax],al
  4038cb:	adc    DWORD PTR [rbx+0x27],esi
  4038ce:	add    DWORD PTR [rax],eax
  4038d0:	(bad)  
  4038d1:	or     dh,BYTE PTR [rbx-0x79]
  4038d4:	add    BYTE PTR [rax],al
  4038d6:	or     cl,BYTE PTR [rbx]
  4038d8:	(bad)  
  4038d9:	jb     0x4038ec
  4038db:	(bad)  
  4038dd:	jo     0x40394e
  4038df:	(bad)
  4038e2:	or     al,BYTE PTR [rdi]
  4038e4:	add    ch,BYTE PTR [rax]
  4038e6:	mov    BYTE PTR [rax],0x0
  4038e9:	(bad)  
  4038ea:	outs   dx,DWORD PTR ds:[rsi]
  4038eb:	mov    BYTE PTR [rax],al
  4038ed:	add    BYTE PTR [rdx],cl
  4038ef:	(bad)  
  4038f0:	sub    BYTE PTR [rdx+0x0],bh
  4038f3:	add    BYTE PTR [rsi],al
  4038f5:	outs   dx,DWORD PTR ds:[rsi]
  4038f6:	mov    BYTE PTR [rax],0x0
  4038f9:	or     al,BYTE PTR [rdi]
  4038fb:	(bad)  
  4038fc:	outs   dx,DWORD PTR ds:[rsi]
  4038fd:	mov    DWORD PTR [rax],0x28070a00
  403903:	enter  0x0,0xa
  403907:	fimul  WORD PTR es:[rdi]
  40390a:	or     al,0x8
  40390c:	outs   dx,DWORD PTR ds:[rsi]
  40390d:	cmp    DWORD PTR [rax],eax
  40390f:	add    BYTE PTR [rdx],cl
  403911:	sub    BYTE PTR [rbp+0x0],dh
  403914:	add    BYTE PTR [rsi],al
  403916:	fiadd  WORD PTR es:[rax]
  403919:	fimul  WORD PTR [rdx]
  40391b:	(bad)  
  40391c:	sub    al,0x6
  40391e:	(bad)  
  40391f:	outs   dx,DWORD PTR ds:[rsi]
  403920:	add    DWORD PTR [rax],eax
  403922:	add    BYTE PTR [rdx],cl
  403924:	fsubr  QWORD PTR [rdx]
  403926:	add    BYTE PTR [rax],al
  403928:	add    DWORD PTR [rax+rax*1],ebx
  40392b:	add    BYTE PTR [rax],al
  40392d:	add    BYTE PTR [rip+0x3e0900],dh        # 0x7e4233
  403933:	(bad)  
  403935:	add    BYTE PTR [rax],al
  403937:	add    DWORD PTR [rdx],eax
  403939:	add    BYTE PTR [rsi],al
  40393b:	add    BYTE PTR [rcx+0x4f],cl
  40393e:	add    BYTE PTR [rdx],cl
  403940:	add    BYTE PTR [rax],al
  403942:	add    BYTE PTR [rax],al
  403944:	add    esi,DWORD PTR [rax]
  403946:	add    al,BYTE PTR [rax]
  403948:	add    BYTE PTR [rax],r8b
  40394b:	add    BYTE PTR [rax],al
  40394d:	add    BYTE PTR [rax],al
  40394f:	add    BYTE PTR [rdx],al
  403951:	sub    dh,cl
  403953:	add    BYTE PTR [rax],al
  403955:	or     al,BYTE PTR [rdx]
  403957:	sub    bh,dl
  403959:	add    BYTE PTR [rax],al
  40395b:	(bad)  
  40395c:	add    bh,BYTE PTR [rbx-0x4e]
  40395f:	add    BYTE PTR [rax],al
  403961:	add    al,0x28
  403963:	outs   dx,BYTE PTR ds:[rsi]
  403964:	add    BYTE PTR [rax],al
  403966:	(bad)  
  403967:	outs   dx,DWORD PTR ds:[rsi]
  403968:	iret   
  403969:	add    BYTE PTR [rax],al
  40396b:	or     al,BYTE PTR [rdx]
  40396d:	sub    BYTE PTR [rsi],al
  40396f:	add    BYTE PTR [rax],al
  403971:	(bad)  
  403972:	outs   dx,DWORD PTR ds:[rsi]
  403973:	(bad)  
  403974:	add    BYTE PTR [rax],al
  403976:	or     al,BYTE PTR [rdx]
  403978:	jnp    0x40392d
  40397a:	add    BYTE PTR [rax],al
  40397c:	add    al,0x28
  40397e:	or     BYTE PTR [rax],al
  403980:	add    BYTE PTR [rsi],al
  403982:	outs   dx,DWORD PTR ds:[rsi]
  403983:	(bad)  
  403984:	add    BYTE PTR [rax],al
  403986:	or     al,BYTE PTR [rdx]
  403988:	add    bh,BYTE PTR [rbx-0x4f]
  40398b:	add    BYTE PTR [rax],al
  40398d:	add    al,0x28
  40398f:	(bad)  
  403990:	add    BYTE PTR [rax],al
  403992:	or     ch,BYTE PTR [rdx]
  403994:	or     al,BYTE PTR [rdx]
  403996:	sub    bl,BYTE PTR [rsi]
  403998:	sub    BYTE PTR [rax+0x0],bh
  40399b:	add    BYTE PTR [rsi],al
  40399d:	sub    bl,BYTE PTR es:[rsi]
  4039a0:	add    ch,BYTE PTR [rax]
  4039a2:	(bad)  
  4039a3:	add    BYTE PTR [rax],al
  4039a5:	(bad)  
  4039a6:	sub    al,BYTE PTR [rax]
  4039a8:	adc    esi,DWORD PTR [rax]
  4039aa:	add    eax,DWORD PTR [rax]
  4039ac:	rex.WR add BYTE PTR [rax],r8b
  4039af:	add    BYTE PTR [rdx],dl
  4039b1:	add    BYTE PTR [rax],al
  4039b3:	adc    DWORD PTR [rdx],eax
  4039b5:	add    bh,BYTE PTR [rbx-0x4d]
  4039b8:	add    BYTE PTR [rax],al
  4039ba:	add    al,0x6f
  4039bc:	rol    BYTE PTR [rax],1
  4039be:	add    BYTE PTR [rdx],cl
  4039c0:	add    bh,BYTE PTR [rbx-0x4d]
  4039c3:	add    BYTE PTR [rax],al
  4039c5:	add    al,0x6f
  4039c7:	jge    0x4039c9
  4039c9:	add    BYTE PTR [rdx],cl
  4039cb:	sub    ch,dl
  4039cd:	add    BYTE PTR [rax],al
  4039cf:	(bad)  
  4039d0:	sbb    BYTE PTR [rdx+0x2],bl
  4039d3:	jnp    0x403988
  4039d5:	add    BYTE PTR [rax],al
  4039d7:	add    al,0x6f
  4039d9:	rol    DWORD PTR [rax],1
  4039db:	add    BYTE PTR [rdx],cl
  4039dd:	or     edx,DWORD PTR [rdx]
  4039df:	add    DWORD PTR [rax],ebp
  4039e1:	push   rsi
  4039e2:	add    BYTE PTR [rax],al
  4039e4:	or     bl,BYTE PTR [rax+0xa]
  4039e7:	add    bh,BYTE PTR [rbx-0x4d]
  4039ea:	add    BYTE PTR [rax],al
  4039ec:	add    al,0x16
  4039ee:	outs   dx,DWORD PTR ds:[rsi]
  4039ef:	rol    BYTE PTR [rax],cl
  4039f1:	add    BYTE PTR [rdx],cl
  4039f3:	add    bh,BYTE PTR [rbx-0x4d]
  4039f6:	add    BYTE PTR [rax],al
  4039f8:	add    al,0x6
  4039fa:	outs   dx,DWORD PTR ds:[rsi]
  4039fb:	rol    DWORD PTR [rax],cl
  4039fd:	add    BYTE PTR [rdx],cl
  4039ff:	sub    dl,BYTE PTR [rbx]
  403a01:	xor    BYTE PTR [rdx],al
  403a03:	add    BYTE PTR [rax],dl
  403a05:	add    BYTE PTR [rax],al
  403a07:	add    BYTE PTR [rbx],dl
  403a09:	add    BYTE PTR [rax],al
  403a0b:	adc    DWORD PTR [rbx],eax
  403a0d:	add    al,0x28
  403a0f:	(bad)  
  403a10:	add    BYTE PTR [rax],al
  403a12:	or     cl,BYTE PTR [rdx]
  403a14:	adc    al,BYTE PTR [rax]
  403a16:	sub    ch,dl
  403a18:	add    BYTE PTR [rax],al
  403a1a:	or     ch,BYTE PTR [rdx]
  403a1c:	jp     0x403a21
  403a1e:	sub    al,0x13
  403a20:	add    bh,BYTE PTR [rbx-0x58]
  403a23:	add    BYTE PTR [rax],al
  403a25:	add    al,0x2c
  403a27:	or     eax,DWORD PTR [rdx]
  403a29:	jnp    0x4039d3
  403a2b:	add    BYTE PTR [rax],al
  403a2d:	add    al,0x6f
  403a2f:	add    DWORD PTR [rax],eax
  403a31:	add    BYTE PTR [rdx],cl
  403a33:	add    al,BYTE PTR [rbx]
  403a35:	sub    BYTE PTR [rax+rax*1+0x0],ah
  403a39:	or     ch,BYTE PTR [rdx]
  403a3b:	add    BYTE PTR [rbx],dl
  403a3d:	xor    BYTE PTR [rdi],al
  403a3f:	add    BYTE PTR [rbx],bl
  403a41:	(bad)  
  403a42:	add    BYTE PTR [rax],al
  403a44:	add    al,0x0
  403a46:	add    BYTE PTR [rcx],dl
  403a48:	add    dh,BYTE PTR [rbx-0x2a]
  403a4b:	add    BYTE PTR [rax],al
  403a4d:	or     bh,BYTE PTR [rbp-0x58]
  403a50:	add    BYTE PTR [rax],al
  403a52:	add    al,0xd0
  403a54:	sbb    BYTE PTR [rax],al
  403a56:	add    BYTE PTR [rdx],al
  403a58:	sub    BYTE PTR [rdi],dl
  403a5a:	add    BYTE PTR [rax],al
  403a5c:	or     dh,BYTE PTR [rbx+0x65]
  403a5f:	add    BYTE PTR [rax],al
  403a61:	or     cl,BYTE PTR [rdx]
  403a63:	add    al,BYTE PTR [rdx]
  403a65:	jnp    0x403a0f
  403a67:	add    BYTE PTR [rax],al
  403a69:	add    al,0x73
  403a6b:	xlat   BYTE PTR ds:[rbx]
  403a6c:	add    BYTE PTR [rax],al
  403a6e:	or     bh,BYTE PTR [rbp-0x57]
  403a71:	add    BYTE PTR [rax],al
  403a73:	add    al,0x2
  403a75:	jae    0x403a4f
  403a77:	add    BYTE PTR [rax],al
  403a79:	or     bh,BYTE PTR [rbp-0x56]
  403a7c:	add    BYTE PTR [rax],al
  403a7e:	add    al,0x2
  403a80:	jae    0x403a5b
  403a82:	add    BYTE PTR [rax],al
  403a84:	or     bh,BYTE PTR [rbp-0x55]
  403a87:	add    BYTE PTR [rax],al
  403a89:	add    al,0x2
  403a8b:	jae    0x403a67
  403a8d:	add    BYTE PTR [rax],al
  403a8f:	or     bh,BYTE PTR [rbp-0x54]
  403a92:	add    BYTE PTR [rax],al
  403a94:	add    al,0x2
  403a96:	add    bh,BYTE PTR [rbx-0x58]
  403a99:	add    BYTE PTR [rax],al
  403a9b:	add    al,0x73
  403a9d:	fild   DWORD PTR [rax]
  403a9f:	add    BYTE PTR [rdx],cl
  403aa1:	jge    0x403a55
  403aa3:	add    BYTE PTR [rax],al
  403aa5:	add    al,0x2
  403aa7:	jae    0x403a83
  403aa9:	add    BYTE PTR [rax],al
  403aab:	or     bh,BYTE PTR [rbp-0x53]
  403aae:	add    BYTE PTR [rax],al
  403ab0:	add    al,0x2
  403ab2:	jae    0x403a8e
  403ab4:	add    BYTE PTR [rax],al
  403ab6:	or     bh,BYTE PTR [rbp-0x52]
  403ab9:	add    BYTE PTR [rax],al
  403abb:	add    al,0x2
  403abd:	jae    0x403a98
  403abf:	add    BYTE PTR [rax],al
  403ac1:	or     bh,BYTE PTR [rbp-0x51]
  403ac4:	add    BYTE PTR [rax],al
  403ac6:	add    al,0x2
  403ac8:	jae    0x403aa6
  403aca:	add    BYTE PTR [rax],al
  403acc:	or     bh,BYTE PTR [rbp-0x50]
  403acf:	add    BYTE PTR [rax],al
  403ad1:	add    al,0x2
  403ad3:	jae    0x403ab2
  403ad5:	add    BYTE PTR [rax],al
  403ad7:	or     bh,BYTE PTR [rbp-0x4f]
  403ada:	add    BYTE PTR [rax],al
  403adc:	add    al,0x2
  403ade:	jae    0x403abc
  403ae0:	add    BYTE PTR [rax],al
  403ae2:	or     bh,BYTE PTR [rbp-0x4d]
  403ae5:	add    BYTE PTR [rax],al
  403ae7:	add    al,0x2
  403ae9:	jnp    0x403a94
  403aeb:	add    BYTE PTR [rax],al
  403aed:	add    al,0x6f
  403aef:	fiadd  WORD PTR [rax]
  403af1:	add    BYTE PTR [rdx],cl
  403af3:	add    bh,BYTE PTR [rbx-0x56]
  403af6:	add    BYTE PTR [rax],al
  403af8:	add    al,0x6f
  403afa:	push   rax
  403afb:	add    BYTE PTR [rax],al
  403afd:	or     al,BYTE PTR [rdx]
  403aff:	jnp    0x403ab3
  403b01:	add    BYTE PTR [rax],al
  403b03:	add    al,0x6f
  403b05:	fiadd  WORD PTR [rax]
  403b07:	add    BYTE PTR [rdx],cl
  403b09:	add    ch,BYTE PTR [rax]
  403b0b:	push   rax
  403b0c:	add    BYTE PTR [rax],al
  403b0e:	or     al,BYTE PTR [rsi]
  403b10:	add    bh,BYTE PTR [rbx-0x56]
  403b13:	add    BYTE PTR [rax],al
  403b15:	add    al,0x72
  403b17:	mov    ecx,DWORD PTR [rdi]
  403b19:	add    BYTE PTR [rax+0x6f],dh
  403b1c:	add    BYTE PTR [eax],al
  403b1f:	or     al,BYTE PTR [rdx]
  403b21:	jnp    0x403acd
  403b23:	add    BYTE PTR [rax],al
  403b25:	add    al,0x6f
  403b27:	fild   WORD PTR [rax]
  403b29:	add    BYTE PTR [rdx],cl
  403b2b:	add    bh,BYTE PTR [rbx-0x55]
  403b2e:	add    BYTE PTR [rax],al
  403b30:	add    al,0x16
  403b32:	(bad)  
  403b33:	outs   dx,DWORD PTR ds:[rsi]
  403b34:	loopne 0x403b36
  403b36:	add    BYTE PTR [rdx],cl
  403b38:	add    bh,BYTE PTR [rbx-0x56]
  403b3b:	add    BYTE PTR [rax],al
  403b3d:	add    al,0x6f
  403b3f:	fild   WORD PTR [rax]
  403b41:	add    BYTE PTR [rdx],cl
  403b43:	add    bh,BYTE PTR [rbx-0x54]
  403b46:	add    BYTE PTR [rax],al
  403b48:	add    al,0x16
  403b4a:	sbb    BYTE PTR [rdi-0x20],ch
  403b4d:	add    BYTE PTR [rax],al
  403b4f:	or     al,BYTE PTR [rdx]
  403b51:	jnp    0x403afd
  403b53:	add    BYTE PTR [rax],al
  403b55:	add    al,0x6f
  403b57:	fild   WORD PTR [rax]
  403b59:	add    BYTE PTR [rdx],cl
  403b5b:	add    bh,BYTE PTR [rbx-0x53]
  403b5e:	add    BYTE PTR [rax],al
  403b60:	add    al,0x16
  403b62:	sbb    DWORD PTR [rdi-0x20],ebp
  403b65:	add    BYTE PTR [rax],al
  403b67:	or     al,BYTE PTR [rdx]
  403b69:	jnp    0x403b15
  403b6b:	add    BYTE PTR [rax],al
  403b6d:	add    al,0x6f
  403b6f:	fild   WORD PTR [rax]
  403b71:	add    BYTE PTR [rdx],cl
  403b73:	add    bh,BYTE PTR [rbx-0x52]
  403b76:	add    BYTE PTR [rax],al
  403b78:	add    al,0x16
  403b7a:	sbb    ch,BYTE PTR [rdi-0x20]
  403b7d:	add    BYTE PTR [rax],al
  403b7f:	or     al,BYTE PTR [rdx]
  403b81:	jnp    0x403b2d
  403b83:	add    BYTE PTR [rax],al
  403b85:	add    al,0x6f
  403b87:	fild   WORD PTR [rax]
  403b89:	add    BYTE PTR [rdx],cl
  403b8b:	add    bh,BYTE PTR [rbx-0x51]
  403b8e:	add    BYTE PTR [rax],al
  403b90:	add    al,0x16
  403b92:	sbb    ebp,DWORD PTR [rdi-0x20]
  403b95:	add    BYTE PTR [rax],al
  403b97:	or     al,BYTE PTR [rdx]
  403b99:	jnp    0x403b45
  403b9b:	add    BYTE PTR [rax],al
  403b9d:	add    al,0x6f
  403b9f:	fild   WORD PTR [rax]
  403ba1:	add    BYTE PTR [rdx],cl
  403ba3:	add    bh,BYTE PTR [rbx-0x50]
  403ba6:	add    BYTE PTR [rax],al
  403ba8:	add    al,0x17
  403baa:	sbb    ebp,DWORD PTR [rdi-0x20]
  403bad:	add    BYTE PTR [rax],al
  403baf:	or     al,BYTE PTR [rdx]
  403bb1:	jnp    0x403b5d
  403bb3:	add    BYTE PTR [rax],al
  403bb5:	add    al,0x6f
  403bb7:	fild   WORD PTR [rax]
  403bb9:	add    BYTE PTR [rdx],cl
  403bbb:	add    bh,BYTE PTR [rbx-0x4f]
  403bbe:	add    BYTE PTR [rax],al
  403bc0:	add    al,0x18
  403bc2:	sbb    ebp,DWORD PTR [rdi-0x20]
  403bc5:	add    BYTE PTR [rax],al
  403bc7:	or     al,BYTE PTR [rdx]
  403bc9:	jnp    0x403b75
  403bcb:	add    BYTE PTR [rax],al
  403bcd:	add    al,0x6f
  403bcf:	fild   WORD PTR [rax]
  403bd1:	add    BYTE PTR [rdx],cl
  403bd3:	add    bh,BYTE PTR [rbx-0x4d]
  403bd6:	add    BYTE PTR [rax],al
  403bd8:	add    al,0x16
  403bda:	(bad)  
  403bdb:	outs   dx,DWORD PTR ds:[rsi]
  403bdc:	loopne 0x403bde
  403bde:	add    BYTE PTR [rdx],cl
  403be0:	add    bh,BYTE PTR [rbx-0x56]
  403be3:	add    BYTE PTR [rax],al
  403be5:	add    al,0x72
  403be7:	mov    ecx,DWORD PTR [rdi]
  403be9:	add    BYTE PTR [rax+0x6f],dh
  403bec:	push   0x20a0000
  403bf1:	jnp    0x403b9c
  403bf3:	add    BYTE PTR [rax],al
  403bf5:	add    al,0x2
  403bf7:	jnp    0x403ba3
  403bf9:	add    BYTE PTR [rax],al
  403bfb:	add    al,0x17
  403bfd:	outs   dx,DWORD PTR ds:[rsi]
  403bfe:	loope  0x403c00
  403c00:	add    BYTE PTR [rdx],cl
  403c02:	(bad)  
  403c03:	add    bh,BYTE PTR [rbx-0x55]
  403c06:	add    BYTE PTR [rax],al
  403c08:	add    al,0x72
  403c0a:	cdq    
  403c0b:	(bad)  
  403c0d:	jo     0x403c7e
  403c0f:	add    BYTE PTR [eax],al
  403c12:	or     al,BYTE PTR [rdx]
  403c14:	jnp    0x403bc0
  403c16:	add    BYTE PTR [rax],al
  403c18:	add    al,0x2
  403c1a:	jnp    0x403bc7
  403c1c:	add    BYTE PTR [rax],al
  403c1e:	add    al,0x19
  403c20:	outs   dx,DWORD PTR ds:[rsi]
  403c21:	loop   0x403c23
  403c23:	add    BYTE PTR [rdx],cl
  403c25:	add    bh,BYTE PTR [rbx-0x55]
  403c28:	add    BYTE PTR [rax],al
  403c2a:	add    al,0x72
  403c2c:	cdq    
  403c2d:	(bad)  
  403c2f:	jo     0x403ca0
  403c31:	push   0x60a0000
  403c36:	add    bh,BYTE PTR [rbx-0x54]
  403c39:	add    BYTE PTR [rax],al
  403c3b:	add    al,0x72
  403c3d:	mov    bh,0xf
  403c3f:	add    BYTE PTR [rax+0x6f],dh
  403c42:	add    BYTE PTR [eax],al
  403c45:	or     al,BYTE PTR [rdx]
  403c47:	jnp    0x403bf5
  403c49:	add    BYTE PTR [rax],al
  403c4b:	add    al,0x72
  403c4d:	ror    DWORD PTR [rdi],1
  403c4f:	add    BYTE PTR [rax+0x6f],dh
  403c52:	jrcxz  0x403c54
  403c54:	add    BYTE PTR [rdx],cl
  403c56:	add    bh,BYTE PTR [rbx-0x56]
  403c59:	add    BYTE PTR [rax],al
  403c5b:	add    al,0x2
  403c5d:	jnp    0x403c0b
  403c5f:	add    BYTE PTR [rax],al
  403c61:	add    al,0x19
  403c63:	outs   dx,DWORD PTR ds:[rsi]
  403c64:	loop   0x403c66
  403c66:	add    BYTE PTR [rdx],cl
  403c68:	add    bh,BYTE PTR [rbx-0x54]
  403c6b:	add    BYTE PTR [rax],al
  403c6d:	add    al,0x6f
  403c6f:	in     al,0x0
  403c71:	add    BYTE PTR [rdx],cl
  403c73:	jb     0x403c84
  403c75:	or     al,0x0
  403c77:	jo     0x403c7b
  403c79:	jnp    0x403c2d
  403c7b:	add    BYTE PTR [rax],al
  403c7d:	add    al,0x72
  403c7f:	(bad)  [rdi]
  403c81:	add    BYTE PTR [rax+0x17],dh
  403c84:	(bad)  
  403c85:	jae    0x403c6c
  403c87:	add    BYTE PTR [rax],al
  403c89:	or     ch,BYTE PTR [rdi-0x1a]
  403c8c:	add    BYTE PTR [rax],al
  403c8e:	or     al,BYTE PTR [rdx]
  403c90:	jnp    0x403c3e
  403c92:	add    BYTE PTR [rax],al
  403c94:	add    al,0x6f
  403c96:	in     al,0x0
  403c98:	add    BYTE PTR [rdx],cl
  403c9a:	jb     0x403c8d
  403c9c:	(bad)  
  403c9e:	jo     0x403ca2
  403ca0:	jnp    0x403c54
  403ca2:	add    BYTE PTR [rax],al
  403ca4:	add    al,0x72
  403ca6:	std    
  403ca7:	(bad)  
  403ca9:	jo     0x403cc2
  403cab:	(bad)  
  403cac:	jae    0x403c93
  403cae:	add    BYTE PTR [rax],al
  403cb0:	or     ch,BYTE PTR [rdi-0x1a]
  403cb3:	add    BYTE PTR [rax],al
  403cb5:	or     al,BYTE PTR [rdx]
  403cb7:	jnp    0x403c62
  403cb9:	add    BYTE PTR [rax],al
  403cbb:	add    al,0x2
  403cbd:	jnp    0x403c6b
  403cbf:	add    BYTE PTR [rax],al
  403cc1:	add    al,0x17
  403cc3:	outs   dx,DWORD PTR ds:[rsi]
  403cc4:	out    0x0,eax
  403cc6:	add    BYTE PTR [rdx],cl
  403cc8:	add    bh,BYTE PTR [rbx-0x54]
  403ccb:	add    BYTE PTR [rax],al
  403ccd:	add    al,0x72
  403ccf:	mov    bh,0xf
  403cd1:	add    BYTE PTR [rax+0x6f],dh
  403cd4:	push   0x20a0000
  403cd9:	jnp    0x403c87
  403cdb:	add    BYTE PTR [rax],al
  403cdd:	add    al,0x17
  403cdf:	outs   dx,DWORD PTR ds:[rsi]
  403ce0:	call   0x24a3ce5
  403ce5:	jnp    0x403c93
  403ce7:	add    BYTE PTR [rax],al
  403ce9:	add    al,0x14
  403ceb:	outs   dx,DWORD PTR ds:[rsi]
  403cec:	jmp    0x24a3cf1
  403cf1:	jnp    0x403ca5
  403cf3:	add    BYTE PTR [rax],al
  403cf5:	add    al,0xd0
  403cf7:	adc    al,0x0
  403cf9:	add    BYTE PTR [rcx],al
  403cfb:	sub    BYTE PTR [rdi],dl
  403cfd:	add    BYTE PTR [rax],al
  403cff:	or     ch,BYTE PTR [rdi-0x31]
  403d02:	add    BYTE PTR [rax],al
  403d04:	or     al,BYTE PTR [rsi]
  403d06:	add    bh,BYTE PTR [rbx-0x53]
  403d09:	add    BYTE PTR [rax],al
  403d0b:	add    al,0x72
  403d0d:	and    eax,0x6f700010
  403d12:	add    BYTE PTR [eax],al
  403d15:	or     al,BYTE PTR [rdx]
  403d17:	jnp    0x403cc6
  403d19:	add    BYTE PTR [rax],al
  403d1b:	add    al,0x72
  403d1d:	rex.XB adc BYTE PTR [r8],al
  403d20:	jo     0x403d91
  403d22:	jrcxz  0x403d24
  403d24:	add    BYTE PTR [rdx],cl
  403d26:	add    bh,BYTE PTR [rbx-0x56]
  403d29:	add    BYTE PTR [rax],al
  403d2b:	add    al,0x2
  403d2d:	jnp    0x403cdc
  403d2f:	add    BYTE PTR [rax],al
  403d31:	add    al,0x19
  403d33:	outs   dx,DWORD PTR ds:[rsi]
  403d34:	loop   0x403d36
  403d36:	add    BYTE PTR [rdx],cl
  403d38:	add    bh,BYTE PTR [rbx-0x53]
  403d3b:	add    BYTE PTR [rax],al
  403d3d:	add    al,0x6f
  403d3f:	in     al,0x0
  403d41:	add    BYTE PTR [rdx],cl
  403d43:	jb     0x403d54
  403d45:	or     al,0x0
  403d47:	jo     0x403d4b
  403d49:	jnp    0x403cfd
  403d4b:	add    BYTE PTR [rax],al
  403d4d:	add    al,0x72
  403d4f:	rex.WXB adc BYTE PTR [r8],al
  403d52:	jo     0x403d6b
  403d54:	(bad)  
  403d55:	jae    0x403d3c
  403d57:	add    BYTE PTR [rax],al
  403d59:	or     ch,BYTE PTR [rdi-0x1a]
  403d5c:	add    BYTE PTR [rax],al
  403d5e:	or     al,BYTE PTR [rdx]
  403d60:	jnp    0x403d0f
  403d62:	add    BYTE PTR [rax],al
  403d64:	add    al,0x6f
  403d66:	in     al,0x0
  403d68:	add    BYTE PTR [rdx],cl
  403d6a:	jb     0x403d5d
  403d6c:	(bad)  
  403d6e:	jo     0x403d72
  403d70:	jnp    0x403d24
  403d72:	add    BYTE PTR [rax],al
  403d74:	add    al,0x72
  403d76:	std    
  403d77:	(bad)  
  403d79:	jo     0x403d92
  403d7b:	(bad)  
  403d7c:	jae    0x403d63
  403d7e:	add    BYTE PTR [rax],al
  403d80:	or     ch,BYTE PTR [rdi-0x1a]
  403d83:	add    BYTE PTR [rax],al
  403d85:	or     al,BYTE PTR [rdx]
  403d87:	jnp    0x403d32
  403d89:	add    BYTE PTR [rax],al
  403d8b:	add    al,0x2
  403d8d:	jnp    0x403d3c
  403d8f:	add    BYTE PTR [rax],al
  403d91:	add    al,0x17
  403d93:	outs   dx,DWORD PTR ds:[rsi]
  403d94:	out    0x0,eax
  403d96:	add    BYTE PTR [rdx],cl
  403d98:	add    bh,BYTE PTR [rbx-0x53]
  403d9b:	add    BYTE PTR [rax],al
  403d9d:	add    al,0x72
  403d9f:	and    eax,0x6f700010
  403da4:	push   0x20a0000
  403da9:	jnp    0x403d58
  403dab:	add    BYTE PTR [rax],al
  403dad:	add    al,0x17
  403daf:	outs   dx,DWORD PTR ds:[rsi]
  403db0:	call   0x24a3db5
  403db5:	jnp    0x403d64
  403db7:	add    BYTE PTR [rax],al
  403db9:	add    al,0x14
  403dbb:	outs   dx,DWORD PTR ds:[rsi]
  403dbc:	jmp    0x64a3dc1
  403dc1:	add    bh,BYTE PTR [rbx-0x52]
  403dc4:	add    BYTE PTR [rax],al
  403dc6:	add    al,0x72
  403dc8:	movsxd edx,DWORD PTR [rax]
  403dca:	add    BYTE PTR [rax+0x6f],dh
  403dcd:	add    BYTE PTR [eax],al
  403dd0:	or     al,BYTE PTR [rdx]
  403dd2:	jnp    0x403d82
  403dd4:	add    BYTE PTR [rax],al
  403dd6:	add    al,0x72
  403dd8:	jg     0x403dea
  403dda:	add    BYTE PTR [rax+0x6f],dh
  403ddd:	jrcxz  0x403ddf
  403ddf:	add    BYTE PTR [rdx],cl
  403de1:	add    bh,BYTE PTR [rbx-0x56]
  403de4:	add    BYTE PTR [rax],al
  403de6:	add    al,0x2
  403de8:	jnp    0x403d98
  403dea:	add    BYTE PTR [rax],al
  403dec:	add    al,0x19
  403dee:	outs   dx,DWORD PTR ds:[rsi]
  403def:	loop   0x403df1
  403df1:	add    BYTE PTR [rdx],cl
  403df3:	add    bh,BYTE PTR [rbx-0x52]
  403df6:	add    BYTE PTR [rax],al
  403df8:	add    al,0x6f
  403dfa:	in     al,0x0
  403dfc:	add    BYTE PTR [rdx],cl
  403dfe:	jb     0x403e0f
  403e00:	or     al,0x0
  403e02:	jo     0x403e06
  403e04:	jnp    0x403db8
  403e06:	add    BYTE PTR [rax],al
  403e08:	add    al,0x72
  403e0a:	mov    DWORD PTR [rax],edx
  403e0c:	add    BYTE PTR [rax+0x17],dh
  403e0f:	(bad)  
  403e10:	jae    0x403df7
  403e12:	add    BYTE PTR [rax],al
  403e14:	or     ch,BYTE PTR [rdi-0x1a]
  403e17:	add    BYTE PTR [rax],al
  403e19:	or     al,BYTE PTR [rdx]
  403e1b:	jnp    0x403dcb
  403e1d:	add    BYTE PTR [rax],al
  403e1f:	add    al,0x6f
  403e21:	in     al,0x0
  403e23:	add    BYTE PTR [rdx],cl
  403e25:	jb     0x403e18
  403e27:	(bad)  
  403e29:	jo     0x403e2d
  403e2b:	jnp    0x403ddf
  403e2d:	add    BYTE PTR [rax],al
  403e2f:	add    al,0x72
  403e31:	std    
  403e32:	(bad)  
  403e34:	jo     0x403e4d
  403e36:	(bad)  
  403e37:	jae    0x403e1e
  403e39:	add    BYTE PTR [rax],al
  403e3b:	or     ch,BYTE PTR [rdi-0x1a]
  403e3e:	add    BYTE PTR [rax],al
  403e40:	or     al,BYTE PTR [rdx]
  403e42:	jnp    0x403ded
  403e44:	add    BYTE PTR [rax],al
  403e46:	add    al,0x2
  403e48:	jnp    0x403df8
  403e4a:	add    BYTE PTR [rax],al
  403e4c:	add    al,0x17
  403e4e:	outs   dx,DWORD PTR ds:[rsi]
  403e4f:	out    0x0,eax
  403e51:	add    BYTE PTR [rdx],cl
  403e53:	add    bh,BYTE PTR [rbx-0x52]
  403e56:	add    BYTE PTR [rax],al
  403e58:	add    al,0x72
  403e5a:	movsxd edx,DWORD PTR [rax]
  403e5c:	add    BYTE PTR [rax+0x6f],dh
  403e5f:	push   0x20a0000
  403e64:	jnp    0x403e14
  403e66:	add    BYTE PTR [rax],al
  403e68:	add    al,0x17
  403e6a:	outs   dx,DWORD PTR ds:[rsi]
  403e6b:	call   0x24a3e70
  403e70:	jnp    0x403e20
  403e72:	add    BYTE PTR [rax],al
  403e74:	add    al,0x14
  403e76:	outs   dx,DWORD PTR ds:[rsi]
  403e77:	jmp    0x64a3e7c
  403e7c:	add    bh,BYTE PTR [rbx-0x51]
  403e7f:	add    BYTE PTR [rax],al
  403e81:	add    al,0x72
  403e83:	movabs ds:0xa0000676f700010,eax
  403e8c:	add    bh,BYTE PTR [rbx-0x51]
  403e8f:	add    BYTE PTR [rax],al
  403e91:	add    al,0x72
  403e93:	movabs ds:0xa0000686f700010,eax
  403e9c:	add    bh,BYTE PTR [rbx-0x57]
  403e9f:	add    BYTE PTR [rax],al
  403ea1:	add    al,0x2
  403ea3:	jnp    0x403e54
  403ea5:	add    BYTE PTR [rax],al
  403ea7:	add    al,0x17
  403ea9:	outs   dx,DWORD PTR ds:[rsi]
  403eaa:	loope  0x403eac
  403eac:	add    BYTE PTR [rdx],cl
  403eae:	add    bh,BYTE PTR [rbx-0x50]
  403eb1:	add    BYTE PTR [rax],al
  403eb3:	add    al,0x6f
  403eb5:	in     al,0x0
  403eb7:	add    BYTE PTR [rdx],cl
  403eb9:	jb     0x403e72
  403ebb:	adc    BYTE PTR [rax],al
  403ebd:	jo     0x403ec1
  403ebf:	jnp    0x403e73
  403ec1:	add    BYTE PTR [rax],al
  403ec3:	add    al,0x72
  403ec5:	rcl    DWORD PTR [rax],0x0
  403ec8:	jo     0x403ee1
  403eca:	sbb    BYTE PTR [rbx-0x1b],dh
  403ecd:	add    BYTE PTR [rax],al
  403ecf:	or     ch,BYTE PTR [rdi-0x1a]
  403ed2:	add    BYTE PTR [rax],al
  403ed4:	or     al,BYTE PTR [rsi]
  403ed6:	add    bh,BYTE PTR [rbx-0x50]
  403ed9:	add    BYTE PTR [rax],al
  403edb:	add    al,0x72
  403edd:	rcl    DWORD PTR [rax],cl
  403edf:	add    BYTE PTR [rax+0x6f],dh
  403ee2:	add    BYTE PTR [eax],al
  403ee5:	or     al,BYTE PTR [rdx]
  403ee7:	jnp    0x403e99
  403ee9:	add    BYTE PTR [rax],al
  403eeb:	add    al,0x72
  403eed:	rcl    DWORD PTR [rax],cl
  403eef:	add    BYTE PTR [rax+0x6f],dh
  403ef2:	push   0x20a0000
  403ef7:	jnp    0x403ea9
  403ef9:	add    BYTE PTR [rax],al
  403efb:	add    al,0x17
  403efd:	outs   dx,DWORD PTR ds:[rsi]
  403efe:	(bad)  
  403eff:	add    BYTE PTR [rax],al
  403f01:	or     al,BYTE PTR [rdx]
  403f03:	jnp    0x403eae
  403f05:	add    BYTE PTR [rax],al
  403f07:	add    al,0x2
  403f09:	jnp    0x403ebb
  403f0b:	add    BYTE PTR [rax],al
  403f0d:	add    al,0x17
  403f0f:	outs   dx,DWORD PTR ds:[rsi]
  403f10:	loope  0x403f12
  403f12:	add    BYTE PTR [rdx],cl
  403f14:	(bad)  
  403f15:	add    bh,BYTE PTR [rbx-0x4f]
  403f18:	add    BYTE PTR [rax],al
  403f1a:	add    al,0x72
  403f1c:	jmp    0x6fb03f31
  403f21:	add    BYTE PTR [eax],al
  403f24:	or     al,BYTE PTR [rdx]
  403f26:	jnp    0x403ed9
  403f28:	add    BYTE PTR [rax],al
  403f2a:	add    al,0x1f
  403f2c:	(bad)  
  403f2d:	(bad)  
  403f2e:	(bad)  
  403f2f:	jae    0x403f88
  403f31:	add    BYTE PTR [rax],al
  403f33:	or     ch,BYTE PTR [rdi-0x15]
  403f36:	add    BYTE PTR [rax],al
  403f38:	or     al,BYTE PTR [rdx]
  403f3a:	jnp    0x403eed
  403f3c:	add    BYTE PTR [rax],al
  403f3e:	add    al,0x72
  403f40:	jmp    0x6fb03f55
  403f45:	push   0x20a0000
  403f4a:	jnp    0x403efd
  403f4c:	add    BYTE PTR [rax],al
  403f4e:	add    al,0x17
  403f50:	outs   dx,DWORD PTR ds:[rsi]
  403f51:	call   0x24a3f56
  403f56:	jnp    0x403f01
  403f58:	add    BYTE PTR [rax],al
  403f5a:	add    al,0x2
  403f5c:	jnp    0x403f0f
  403f5e:	add    BYTE PTR [rax],al
  403f60:	add    al,0x17
  403f62:	outs   dx,DWORD PTR ds:[rsi]
  403f63:	loope  0x403f65
  403f65:	add    BYTE PTR [rdx],cl
  403f67:	add    bh,BYTE PTR [rbx-0x4f]
  403f6a:	add    BYTE PTR [rax],al
  403f6c:	add    al,0x2
  403f6e:	inc    BYTE PTR [rsi]
  403f70:	rol    BYTE PTR [rax],cl
  403f72:	add    BYTE PTR [rsi],al
  403f74:	jae    0x403fe3
  403f76:	add    BYTE PTR [rax],al
  403f78:	or     ch,BYTE PTR [rdi-0x14]
  403f7b:	add    BYTE PTR [rax],al
  403f7d:	or     al,BYTE PTR [rdx]
  403f7f:	jnp    0x403f34
  403f81:	add    BYTE PTR [rax],al
  403f83:	add    al,0x16
  403f85:	outs   dx,DWORD PTR ds:[rsi]
  403f86:	in     eax,dx
  403f87:	add    BYTE PTR [rax],al
  403f89:	or     al,BYTE PTR [rdx]
  403f8b:	jnp    0x403f37
  403f8d:	add    BYTE PTR [rax],al
  403f8f:	add    al,0x2
  403f91:	jnp    0x403f46
  403f93:	add    BYTE PTR [rax],al
  403f95:	add    al,0x19
  403f97:	outs   dx,DWORD PTR ds:[rsi]
  403f98:	loop   0x403f9a
  403f9a:	add    BYTE PTR [rdx],cl
  403f9c:	(bad)  
  403f9d:	add    bh,BYTE PTR [rbx-0x4d]
  403fa0:	add    BYTE PTR [rax],al
  403fa2:	add    al,0x72
  403fa4:	not    DWORD PTR [rax]
  403fa6:	add    BYTE PTR [rax+0x6f],dh
  403fa9:	add    BYTE PTR [eax],al
  403fac:	or     al,BYTE PTR [rdx]
  403fae:	jnp    0x403f63
  403fb0:	add    BYTE PTR [rax],al
  403fb2:	add    al,0x72
  403fb4:	not    DWORD PTR [rax]
  403fb6:	add    BYTE PTR [rax+0x6f],dh
  403fb9:	push   0x20a0000
  403fbe:	jnp    0x403f73
  403fc0:	add    BYTE PTR [rax],al
  403fc2:	add    al,0x17
  403fc4:	outs   dx,DWORD PTR ds:[rsi]
  403fc5:	(bad)  
  403fc6:	add    BYTE PTR [rax],al
  403fc8:	or     al,BYTE PTR [rdx]
  403fca:	jnp    0x403f7f
  403fcc:	add    BYTE PTR [rax],al
  403fce:	add    al,0x16
  403fd0:	outs   dx,DWORD PTR ds:[rsi]
  403fd1:	ins    BYTE PTR es:[rdi],dx
  403fd2:	add    BYTE PTR [rax],al
  403fd4:	or     al,BYTE PTR [rsi]
  403fd6:	add    dh,BYTE PTR [rdx+0x5d]
  403fd9:	or     al,0x0
  403fdb:	jo     0x40404c
  403fdd:	add    BYTE PTR [eax],al
  403fe0:	or     al,BYTE PTR [rdx]
  403fe2:	(bad)  
  403fe3:	sub    BYTE PTR [rsi+0x0],ch
  403fe6:	add    BYTE PTR [rdx],cl
  403fe8:	add    ch,BYTE PTR [rax]
  403fea:	out    dx,al
  403feb:	add    BYTE PTR [rax],al
  403fed:	or     ch,BYTE PTR [rdi+0x6b]
  403ff0:	add    BYTE PTR [rax],al
  403ff2:	or     al,BYTE PTR [rdx]
  403ff4:	sub    BYTE PTR [rsi+0x0],cl
  403ff7:	add    BYTE PTR [rdx],cl
  403ff9:	add    bh,BYTE PTR [rbx-0x56]
  403ffc:	add    BYTE PTR [rax],al
  403ffe:	add    al,0x6f
  404000:	pop    rsi
  404001:	add    BYTE PTR [rax],al
  404003:	or     al,BYTE PTR [rdx]
  404005:	jnp    0x403fb0
  404007:	add    BYTE PTR [rax],al
  404009:	add    al,0x2
  40400b:	(bad)  
  40400c:	outs   dx,DWORD PTR ds:[rsi]
  40400d:	out    dx,eax
  40400e:	add    BYTE PTR [rax],al
  404010:	or     al,BYTE PTR [rdx]
  404012:	jb     0x40402b
  404014:	adc    DWORD PTR [rax],eax
  404016:	jo     0x404040
  404018:	push   0x20a0000
  40401d:	add    bh,dh
  40401f:	(bad)  
  404020:	rol    DWORD PTR [rax],cl
  404022:	add    BYTE PTR [rsi],al
  404024:	jae    0x404093
  404026:	add    BYTE PTR [rax],al
  404028:	or     ch,BYTE PTR [rax]
  40402a:	lock add BYTE PTR [rax],al
  40402d:	or     al,BYTE PTR [rdx]
  40402f:	jnp    0x403fda
  404031:	add    BYTE PTR [rax],al
  404033:	add    al,0x6f
  404035:	icebp  
  404036:	add    BYTE PTR [rax],al
  404038:	or     al,BYTE PTR [rdx]
  40403a:	jnp    0x403fe6
  40403c:	add    BYTE PTR [rax],al
  40403e:	add    al,0x16
  404040:	outs   dx,DWORD PTR ds:[rsi]
  404041:	(bad)  
  404042:	add    BYTE PTR [rax],al
  404044:	or     al,BYTE PTR [rdx]
  404046:	jnp    0x403ff2
  404048:	add    BYTE PTR [rax],al
  40404a:	add    al,0x6f
  40404c:	outs   dx,DWORD PTR ds:[rsi]
  40404d:	add    BYTE PTR [rax],al
  40404f:	or     al,BYTE PTR [rdx]
  404051:	jnp    0x404005
  404053:	add    BYTE PTR [rax],al
  404055:	add    al,0x6f
  404057:	icebp  
  404058:	add    BYTE PTR [rax],al
  40405a:	or     al,BYTE PTR [rdx]
  40405c:	(bad)  
  40405d:	sub    BYTE PTR [rcx+0x0],ah
  404060:	add    BYTE PTR [rdx],cl
  404062:	sub    bl,BYTE PTR [rsi]
  404064:	add    bh,BYTE PTR [rbx-0x4c]
  404067:	add    BYTE PTR [rax],al
  404069:	add    al,0x2a
  40406b:	and    al,BYTE PTR [rdx]
  40406d:	add    edi,DWORD PTR [rbp-0x4c]
  404070:	add    BYTE PTR [rax],al
  404072:	add    al,0x2a
  404074:	or     dl,BYTE PTR [rdx+rbp*1]
  404077:	add    ch,BYTE PTR ss:[rax]
  40407a:	repnz add BYTE PTR [rax],al
  40407d:	or     al,BYTE PTR [rdx]
  40407f:	sub    bh,bl
  404081:	add    BYTE PTR [rax],al
  404083:	(bad)  
  404084:	sub    dl,BYTE PTR [rdx+0x2]
  404087:	sub    dl,dh
  404089:	add    BYTE PTR [rax],al
  40408b:	or     al,BYTE PTR [rdx]
  40408d:	add    ebp,DWORD PTR [rax]
  40408f:	fld    DWORD PTR [rax]
  404091:	add    BYTE PTR [rsi],al
  404093:	add    ch,BYTE PTR [rax]
  404095:	fild   WORD PTR [rax]
  404097:	add    BYTE PTR [rsi],al
  404099:	sub    dl,BYTE PTR [rdx+0x2]
  40409c:	sub    dl,dh
  40409e:	add    BYTE PTR [rax],al
  4040a0:	or     al,BYTE PTR [rbx]
  4040a2:	add    ch,BYTE PTR [rdi-0xd]
  4040a5:	add    BYTE PTR [rax],al
  4040a7:	or     al,BYTE PTR [rdx]
  4040a9:	sub    bh,bl
  4040ab:	add    BYTE PTR [rax],al
  4040ad:	(bad)  
  4040ae:	sub    bh,BYTE PTR [rdx+0x3]
  4040b1:	sub    al,0x13
  4040b3:	add    bh,BYTE PTR [rbx-0x4b]
  4040b6:	add    BYTE PTR [rax],al
  4040b8:	add    al,0x2c
  4040ba:	or     eax,DWORD PTR [rdx]
  4040bc:	jnp    0x404073
  4040be:	add    BYTE PTR [rax],al
  4040c0:	add    al,0x6f
  4040c2:	add    DWORD PTR [rax],eax
  4040c4:	add    BYTE PTR [rdx],cl
  4040c6:	add    al,BYTE PTR [rbx]
  4040c8:	sub    ah,dh
  4040ca:	add    BYTE PTR [rax],al
  4040cc:	or     ch,BYTE PTR [rdx]
  4040ce:	(bad)  
  4040cf:	sub    cl,BYTE PTR [rsi+0x2]
  4040d2:	outs   dx,DWORD PTR ds:[rsi]
  4040d3:	cmc    
  4040d4:	add    BYTE PTR [rax],al
  4040d6:	or     dl,al
  4040d8:	sbb    al,BYTE PTR [rax]
  4040da:	add    BYTE PTR [rdx],al
  4040dc:	sub    BYTE PTR [rdi],dl
  4040de:	add    BYTE PTR [rax],al
  4040e0:	or     bh,dh
  4040e2:	add    DWORD PTR [rdx],ebp
  4040e4:	(bad)  
  4040e5:	add    ch,BYTE PTR [rax]
  4040e7:	fild   DWORD PTR [rax]
  4040e9:	add    BYTE PTR [rsi],al
  4040eb:	sub    ah,BYTE PTR [rdx+0x2]
  4040ee:	add    bh,BYTE PTR [rbx-0x45]
  4040f1:	add    BYTE PTR [rax],al
  4040f3:	add    al,0x3
  4040f5:	sub    BYTE PTR [rax+rax*1],ah
  4040f8:	add    BYTE PTR [rdx],cl
  4040fa:	je     0x40412d
  4040fc:	add    BYTE PTR [rax],al
  4040fe:	add    DWORD PTR [rbp-0x45],edi
  404101:	add    BYTE PTR [rax],al
  404103:	add    al,0x2a
  404105:	(bad)  
  404107:	add    bh,BYTE PTR [rbx-0x45]
  40410a:	add    BYTE PTR [rax],al
  40410c:	add    al,0x3
  40410e:	sub    BYTE PTR [rip+0x740a0000],ah        # 0x744a4114
  404114:	xor    DWORD PTR [rax],eax
  404116:	add    BYTE PTR [rcx],al
  404118:	jge    0x4040d5
  40411a:	add    BYTE PTR [rax],al
  40411c:	add    al,0x2a
  40411e:	(bad)  
  40411f:	add    bh,BYTE PTR [rbx-0x48]
  404122:	add    BYTE PTR [rax],al
  404124:	add    al,0x2a
  404126:	jb     0x40412a
  404128:	sub    bh,ah
  40412a:	add    BYTE PTR [rax],al
  40412c:	(bad)  
  40412d:	sub    al,0x12
  40412f:	add    bh,BYTE PTR [rbx-0x48]
  404132:	add    BYTE PTR [rax],al
  404134:	add    al,0x2
  404136:	sub    bh,ah
  404138:	add    BYTE PTR [rax],al
  40413a:	(bad)  
  40413b:	outs   dx,DWORD PTR ds:[rsi]
  40413c:	test   BYTE PTR [rax],0x0
  40413f:	or     ch,BYTE PTR [rdx]
  404141:	adc    eax,0x15037e2a
  404146:	xor    ecx,DWORD PTR [rax]
  404148:	add    dl,BYTE PTR [rax+rbp*1]
  40414b:	call   0x2a464150
  404150:	add    al,BYTE PTR [rdx]
  404152:	jnp    0x40410c
  404154:	add    BYTE PTR [rax],al
  404156:	add    al,0x3
  404158:	outs   dx,DWORD PTR ds:[rsi]
  404159:	test   DWORD PTR [rax],0xe8280a00
  40415f:	add    BYTE PTR [rax],al
  404161:	(bad)  
  404162:	sub    bl,BYTE PTR [rsi]
  404164:	add    bh,BYTE PTR [rbx-0x47]
  404167:	add    BYTE PTR [rax],al
  404169:	add    al,0x2a
  40416b:	xchg   esi,eax
  40416c:	add    bh,BYTE PTR [rbx-0x47]
  40416f:	add    BYTE PTR [rax],al
  404171:	add    al,0x3
  404173:	xor    eax,DWORD PTR [rcx]
  404175:	sub    al,BYTE PTR [rdx]
  404177:	add    ch,BYTE PTR [rax]
  404179:	out    0x0,eax
  40417b:	add    BYTE PTR [rsi],al
  40417d:	add    ebp,DWORD PTR [rax]
  40417f:	repnz add BYTE PTR [rax],al
  404182:	(bad)  
  404183:	add    al,BYTE PTR [rbx]
  404185:	jge    0x404140
  404187:	add    BYTE PTR [rax],al
  404189:	add    al,0x2
  40418b:	outs   dx,DWORD PTR ds:[rsi]
  40418c:	in     eax,dx
  40418d:	add    BYTE PTR [rax],al
  40418f:	(bad)  
  404190:	sub    al,BYTE PTR [rax]
  404192:	add    BYTE PTR [rax],al
  404194:	add    esi,DWORD PTR [rax]
  404196:	add    al,0x0
  404198:	leave  
  404199:	add    BYTE PTR [rax],al
  40419b:	add    BYTE PTR [rax],al
  40419d:	add    BYTE PTR [rax],al
  40419f:	add    BYTE PTR [rdx],al
  4041a1:	and    bh,cl
  4041a3:	add    BYTE PTR [rax],al
  4041a5:	add    BYTE PTR [rax],ah
  4041a7:	rol    BYTE PTR [rax],1
  4041a9:	add    BYTE PTR [rax],al
  4041ab:	and    ah,dl
  4041ad:	add    BYTE PTR [rax],al
  4041af:	add    BYTE PTR [rax],ch
  4041b1:	clc    
  4041b2:	add    BYTE PTR [rax],al
  4041b4:	or     bh,BYTE PTR [rbp-0x4a]
  4041b7:	add    BYTE PTR [rax],al
  4041b9:	add    al,0x2
  4041bb:	and    ch,ch
  4041bd:	add    BYTE PTR [rax],al
  4041bf:	add    BYTE PTR [rax],ah
  4041c1:	in     eax,dx
  4041c2:	add    BYTE PTR [rax],al
  4041c4:	add    BYTE PTR [rax],ah
  4041c6:	in     eax,dx
  4041c7:	add    BYTE PTR [rax],al
  4041c9:	add    BYTE PTR [rax],ch
  4041cb:	clc    
  4041cc:	add    BYTE PTR [rax],al
  4041ce:	or     bh,BYTE PTR [rbp-0x49]
  4041d1:	add    BYTE PTR [rax],al
  4041d3:	add    al,0x2
  4041d5:	sub    dh,cl
  4041d7:	add    BYTE PTR [rax],al
  4041d9:	or     al,BYTE PTR [rdx]
  4041db:	add    dh,BYTE PTR [rbx-0x6]
  4041de:	add    BYTE PTR [rax],al
  4041e0:	(bad)  
  4041e1:	jge    0x40419b
  4041e3:	add    BYTE PTR [rax],al
  4041e5:	add    al,0x2
  4041e7:	and    BYTE PTR [rax],al
  4041e9:	add    BYTE PTR [rdx],al
  4041eb:	add    BYTE PTR [rdi],dl
  4041ed:	sub    cl,bh
  4041ef:	add    BYTE PTR [rax],al
  4041f1:	or     al,BYTE PTR [rdx]
  4041f3:	and    BYTE PTR [rax],al
  4041f5:	and    BYTE PTR [rax],al
  4041f7:	add    BYTE PTR [rdi],dl
  4041f9:	sub    cl,bh
  4041fb:	add    BYTE PTR [rax],al
  4041fd:	or     al,BYTE PTR [rdx]
  4041ff:	(bad)  
  404200:	adc    BYTE PTR [rdi],dl
  404202:	sub    cl,bh
  404204:	add    BYTE PTR [rax],al
  404206:	or     al,BYTE PTR [rdx]
  404208:	sub    BYTE PTR [rdi],cl
  40420a:	add    DWORD PTR [rax],eax
  40420c:	(bad)  
  40420d:	outs   dx,DWORD PTR ds:[rsi]
  40420e:	cli    
  40420f:	add    BYTE PTR [rax],al
  404211:	or     ch,BYTE PTR [rax]
  404213:	icebp  
  404214:	add    BYTE PTR [rax],al
  404216:	(bad)  
  404217:	add    ch,BYTE PTR [rax]
  404219:	or     eax,0x6f060001
  40421e:	cli    
  40421f:	add    BYTE PTR [rax],al
  404221:	or     ch,BYTE PTR [rax]
  404223:	icebp  
  404224:	add    BYTE PTR [rax],al
  404226:	(bad)  
  404227:	add    ch,BYTE PTR [rax]
  404229:	test   DWORD PTR [rax],0x7b020600
  40422f:	mov    ebp,0x73040000
  404234:	stc    
  404235:	add    BYTE PTR [rax],al
  404237:	(bad)  
  404238:	outs   dx,DWORD PTR ds:[rsi]
  404239:	sti    
  40423a:	add    BYTE PTR [rax],al
  40423c:	or     al,BYTE PTR [rdx]
  40423e:	jnp    0x4041fe
  404240:	add    BYTE PTR [rax],al
  404242:	add    al,0x28
  404244:	sgdt   [rax]
  404247:	(bad)  
  404248:	outs   dx,DWORD PTR ds:[rsi]
  404249:	cld    
  40424a:	add    BYTE PTR [rax],al
  40424c:	or     al,BYTE PTR [rdx]
  40424e:	jnp    0x40420e
  404250:	add    BYTE PTR [rax],al
  404252:	add    al,0x28
  404254:	sgdt   [rax]
  404257:	(bad)  
  404258:	outs   dx,DWORD PTR ds:[rsi]
  404259:	cli    
  40425a:	add    BYTE PTR [rax],al
  40425c:	or     ch,BYTE PTR [rdi+0x58]
  40425f:	add    BYTE PTR [rax],al
  404261:	or     al,BYTE PTR [rdx]
  404263:	sub    bh,ch
  404265:	add    BYTE PTR [rax],al
  404267:	(bad)  
  404268:	sub    al,BYTE PTR [rax]
  40426a:	add    BYTE PTR [rax],al
  40426c:	sbb    esi,DWORD PTR [rax]
  40426e:	add    eax,0x7e00
  404273:	add    BYTE PTR [rax+rax*1],dl
  404276:	add    BYTE PTR [rcx],dl
  404278:	add    ch,BYTE PTR [rax]
  40427a:	push   rcx
  40427b:	add    BYTE PTR [rax],al
  40427d:	or     al,BYTE PTR [rdx]
  40427f:	jnp    0x404237
  404281:	add    BYTE PTR [rax],al
  404283:	add    al,0x2
  404285:	jnp    0x40423e
  404287:	add    BYTE PTR [rax],al
  404289:	add    al,0x17
  40428b:	jae    0x40428a
  40428d:	add    BYTE PTR [rax],al
  40428f:	or     cl,BYTE PTR [rdx]
  404291:	add    ebp,DWORD PTR [rdi-0x2]
  404294:	add    BYTE PTR [rax],al
  404296:	or     al,BYTE PTR [rsi]
  404298:	add    ch,BYTE PTR [rax]
  40429a:	push   rcx
  40429b:	add    BYTE PTR [rax],al
  40429d:	or     ch,BYTE PTR [rdi-0x1]
  4042a0:	add    BYTE PTR [rax],al
  4042a2:	or     dl,BYTE PTR [rdx]
  4042a4:	add    DWORD PTR [rsi],edx
  4042a6:	add    ch,BYTE PTR [rax]
  4042a8:	push   rcx
  4042a9:	add    BYTE PTR [rax],al
  4042ab:	or     cl,BYTE PTR [rdx+rdx*1]
  4042ae:	add    ch,BYTE PTR [rax]
  4042b0:	push   rbp
  4042b1:	add    BYTE PTR [rax],al
  4042b3:	or     ch,BYTE PTR [rax]
  4042b5:	or     eax,0x6f060001
  4042ba:	add    BYTE PTR [rcx],al
  4042bc:	add    BYTE PTR [rdx],cl
  4042be:	pop    rcx
  4042bf:	sub    BYTE PTR [rip+0x6f060001],cl        # 0x6f4642c6
  4042c5:	add    DWORD PTR [rcx],eax
  4042c7:	add    BYTE PTR [rdx],cl
  4042c9:	sub    BYTE PTR [rip+0x6f060001],cl        # 0x6f4642d0
  4042cf:	add    BYTE PTR [rcx],al
  4042d1:	add    BYTE PTR [rdx],cl
  4042d3:	sub    BYTE PTR [rdx],al
  4042d5:	add    DWORD PTR [rax],eax
  4042d7:	or     al,BYTE PTR [rbx]
  4042d9:	outs   dx,DWORD PTR ds:[rsi]
  4042da:	inc    BYTE PTR [rax]
  4042dc:	add    BYTE PTR [rdx],cl
  4042de:	sub    BYTE PTR [rip+0x7060001],cl        # 0x74642e5
  4042e4:	outs   dx,DWORD PTR ds:[rsi]
  4042e5:	add    eax,DWORD PTR [rcx]
  4042e7:	add    BYTE PTR [rdx],cl
  4042e9:	fimul  WORD PTR [rdx]
  4042eb:	(bad)  
  4042ec:	sub    al,0x6
  4042ee:	(bad)  
  4042ef:	outs   dx,DWORD PTR ds:[rsi]
  4042f0:	add    DWORD PTR [rax],eax
  4042f2:	add    BYTE PTR [rdx],cl
  4042f4:	fsubr  QWORD PTR [rdx]
  4042f6:	add    BYTE PTR [rax],al
  4042f8:	add    DWORD PTR [rax],edx
  4042fa:	add    BYTE PTR [rax],al
  4042fc:	add    al,BYTE PTR [rax]
  4042fe:	sbb    DWORD PTR [rax],eax
  404300:	pop    rdx
  404301:	jae    0x404303
  404303:	or     al,BYTE PTR [rax]
  404305:	add    BYTE PTR [rax],al
  404307:	add    BYTE PTR [rbx],al
  404309:	xor    BYTE PTR [rax+rax*1],al
  40430c:	(bad)  
  40430d:	add    BYTE PTR [rax],al
  40430f:	add    BYTE PTR [rax],al
  404311:	add    BYTE PTR [rax],al
  404313:	add    BYTE PTR [rdx],al
  404315:	sub    ch,ah
  404317:	add    BYTE PTR [rax],al
  404319:	(bad)  
  40431a:	(bad)  
  40431b:	(bad)  
  40431c:	add    DWORD PTR [rdx],ebp
  40431e:	add    ch,BYTE PTR [rax]
  404320:	in     eax,0x0
  404322:	add    BYTE PTR [rsi],al
  404324:	add    bh,BYTE PTR [rbx-0x48]
  404327:	add    BYTE PTR [rax],al
  404329:	add    al,0x6f
  40432b:	add    BYTE PTR [r8],r8b
  40432e:	or     dl,BYTE PTR [rdi]
  404330:	pop    rcx
  404331:	xor    edx,DWORD PTR [rdx+rax*1]
  404334:	add    bh,BYTE PTR [rbx-0x48]
  404337:	add    BYTE PTR [rax],al
  404339:	add    al,0x16
  40433b:	outs   dx,DWORD PTR ds:[rsi]
  40433c:	test   DWORD PTR [rax],0xe8280a00
  404342:	add    BYTE PTR [rax],al
  404344:	(bad)  
  404345:	sub    ebx,DWORD PTR [rcx]
  404347:	add    al,BYTE PTR [rdx]
  404349:	jnp    0x404303
  40434b:	add    BYTE PTR [rax],al
  40434d:	add    al,0x2
  40434f:	sub    ch,ah
  404351:	add    BYTE PTR [rax],al
  404353:	(bad)  
  404354:	(bad)  
  404355:	pop    rax
  404356:	outs   dx,DWORD PTR ds:[rsi]
  404357:	test   DWORD PTR [rax],0xe8280a00
  40435d:	add    BYTE PTR [rax],al
  40435f:	(bad)  
  404360:	add    bh,BYTE PTR [rbx-0x47]
  404363:	add    BYTE PTR [rax],al
  404365:	add    al,0x28
  404367:	loopne 0x404369
  404369:	add    BYTE PTR [rsi],al
  40436b:	sub    al,0x6
  40436d:	add    ch,BYTE PTR [rax]
  40436f:	jmp    0x404371
  404371:	add    BYTE PTR [rsi],al
  404373:	sub    al,BYTE PTR [rbx]
  404375:	xor    BYTE PTR [rax+rax*1],al
  404378:	pop    rdi
  404379:	add    BYTE PTR [rax],al
  40437b:	add    BYTE PTR [rax],al
  40437d:	add    BYTE PTR [rax],al
  40437f:	add    BYTE PTR [rdx],al
  404381:	sub    ch,ah
  404383:	add    BYTE PTR [rax],al
  404385:	(bad)  
  404386:	(bad)  
  404387:	(bad)  
  404388:	add    DWORD PTR [rdx],ebp
  40438a:	add    ch,BYTE PTR [rax]
  40438c:	in     eax,0x0
  40438e:	add    BYTE PTR [rsi],al
  404390:	sub    eax,0x7b020220
  404395:	mov    eax,0x2040000
  40439a:	jnp    0x404354
  40439c:	add    BYTE PTR [rax],al
  40439e:	add    al,0x6f
  4043a0:	add    BYTE PTR [r8],r8b
  4043a3:	or     dl,BYTE PTR [rdi]
  4043a5:	pop    rcx
  4043a6:	outs   dx,DWORD PTR ds:[rsi]
  4043a7:	test   DWORD PTR [rax],0xe8280a00
  4043ad:	add    BYTE PTR [rax],al
  4043af:	(bad)  
  4043b0:	sub    ebx,DWORD PTR [rcx]
  4043b2:	add    al,BYTE PTR [rdx]
  4043b4:	jnp    0x40436e
  4043b6:	add    BYTE PTR [rax],al
  4043b8:	add    al,0x2
  4043ba:	sub    ch,ah
  4043bc:	add    BYTE PTR [rax],al
  4043be:	(bad)  
  4043bf:	(bad)  
  4043c0:	pop    rcx
  4043c1:	outs   dx,DWORD PTR ds:[rsi]
  4043c2:	test   DWORD PTR [rax],0xe8280a00
  4043c8:	add    BYTE PTR [rax],al
  4043ca:	(bad)  
  4043cb:	add    bh,BYTE PTR [rbx-0x47]
  4043ce:	add    BYTE PTR [rax],al
  4043d0:	add    al,0x28
  4043d2:	loopne 0x4043d4
  4043d4:	add    BYTE PTR [rsi],al
  4043d6:	sub    al,0x6
  4043d8:	add    ch,BYTE PTR [rax]
  4043da:	in     al,dx
  4043db:	add    BYTE PTR [rax],al
  4043dd:	(bad)  
  4043de:	sub    ch,BYTE PTR [rdx+0x2]
  4043e1:	jnp    0x40439e
  4043e3:	add    BYTE PTR [rax],al
  4043e5:	add    al,0x2c
  4043e7:	adc    DWORD PTR [rdx],eax
  4043e9:	jnp    0x4043a6
  4043eb:	add    BYTE PTR [rax],al
  4043ed:	add    al,0x2
  4043ef:	jle    0x4043f5
  4043f1:	add    DWORD PTR [rax],eax
  4043f3:	or     ch,BYTE PTR [rdi+0x5]
  4043f6:	add    DWORD PTR [rax],eax
  4043f8:	or     ch,BYTE PTR [rdx]
  4043fa:	cmp    al,BYTE PTR [rdx]
  4043fc:	add    ebp,DWORD PTR [rax]
  4043fe:	(bad)  
  4043ff:	add    DWORD PTR [rax],eax
  404401:	or     al,BYTE PTR [rdx]
  404403:	sub    bh,ch
  404405:	add    BYTE PTR [rax],al
  404407:	(bad)  
  404408:	sub    dl,BYTE PTR [rdx+0x7d6f0202]
  40440e:	add    BYTE PTR [rax],al
  404410:	or     dl,BYTE PTR [rdi]
  404412:	jae    0x40441b
  404414:	add    DWORD PTR [rax],eax
  404416:	or     bh,BYTE PTR [rbp-0x46]
  404419:	add    BYTE PTR [rax],al
  40441b:	add    al,0x2
  40441d:	jnp    0x4043dc
  40441f:	add    BYTE PTR [rax],al
  404421:	add    al,0x2
  404423:	outs   dx,DWORD PTR ds:[rsi]
  404424:	jge    0x404426
  404426:	add    BYTE PTR [rdx],cl
  404428:	outs   dx,DWORD PTR ds:[rsi]
  404429:	jg     0x40442b
  40442b:	add    BYTE PTR [rdx],cl
  40442d:	sub    al,BYTE PTR [rax]
  40442f:	add    BYTE PTR [rbx],bl
  404431:	xor    BYTE PTR [rsi],al
  404433:	add    BYTE PTR [rdx],dl
  404435:	add    DWORD PTR [rax],eax
  404437:	add    BYTE PTR [rip+0x3110000],dl        # 0x351443d
  40443d:	sub    al,ah
  40443f:	add    BYTE PTR [rax],al
  404441:	(bad)  
  404442:	sub    al,0x6
  404444:	jae    0x40444e
  404446:	add    DWORD PTR [rax],eax
  404448:	or     ch,BYTE PTR [rdx]
  40444a:	add    ebp,DWORD PTR [rdi-0x33]
  40444d:	add    BYTE PTR [rax],al
  40444f:	(bad)  
  404450:	jae    0x40445b
  404452:	add    DWORD PTR [rax],eax
  404454:	or     cl,BYTE PTR [rdx]
  404456:	(bad)  
  404457:	sub    BYTE PTR [rdx],cl
  404459:	add    DWORD PTR [rax],eax
  40445b:	or     ch,BYTE PTR [rdi+0xb]
  40445e:	add    DWORD PTR [rax],eax
  404460:	or     al,BYTE PTR [rsi]
  404462:	(bad)  
  404463:	outs   dx,DWORD PTR ds:[rsi]
  404464:	or     al,0x1
  404466:	add    BYTE PTR [rdx],cl
  404468:	(bad)  
  404469:	add    ebp,DWORD PTR [rdi+0xd]
  40446c:	add    DWORD PTR [rax],eax
  40446e:	or     al,BYTE PTR [rsi]
  404470:	(bad)  
  404471:	sbb    dl,BYTE PTR [rsi]
  404473:	sbb    dh,BYTE PTR [rbx+0x5c]
  404476:	add    BYTE PTR [rax],al
  404478:	or     ch,BYTE PTR [rdi+0xe]
  40447b:	add    DWORD PTR [rax],eax
  40447d:	or     al,BYTE PTR [rsi]
  40447f:	add    bh,dh
  404481:	(bad)  
  404482:	repz add BYTE PTR [rax],al
  404485:	(bad)  
  404486:	jae    0x4044f5
  404488:	add    BYTE PTR [rax],al
  40448a:	or     ch,BYTE PTR [rdi+0xf]
  40448d:	add    DWORD PTR [rax],eax
  40448f:	or     al,BYTE PTR [rsi]
  404491:	(bad)  
  404492:	outs   dx,DWORD PTR ds:[rsi]
  404493:	adc    BYTE PTR [rcx],al
  404495:	add    BYTE PTR [rdx],cl
  404497:	(bad)  
  404498:	sbb    BYTE PTR [rdi+0x11],ch
  40449b:	add    DWORD PTR [rax],eax
  40449d:	or     al,BYTE PTR [rsi]
  40449f:	sbb    DWORD PTR [rdi+0x12],ebp
  4044a2:	add    DWORD PTR [rax],eax
  4044a4:	or     al,BYTE PTR [rsi]
  4044a6:	(bad)  
  4044a7:	adc    BYTE PTR [rdi+0x13],ch
  4044aa:	add    DWORD PTR [rax],eax
  4044ac:	or     al,BYTE PTR [rdx]
  4044ae:	sub    BYTE PTR [rcx+rax*1],dl
  4044b1:	add    BYTE PTR [rdx],cl
  4044b3:	or     eax,DWORD PTR [rdi]
  4044b5:	(bad)  
  4044b6:	outs   dx,DWORD PTR ds:[rsi]
  4044b7:	adc    eax,0x20a0001
  4044bc:	jnp    0x404478
  4044be:	add    BYTE PTR [rax],al
  4044c0:	add    al,0x28
  4044c2:	(bad)  
  4044c3:	add    DWORD PTR [rax],eax
  4044c5:	or     cl,BYTE PTR [rdx+rdx*1]
  4044c8:	add    ah,BYTE PTR [rip+0x11728]        # 0x415bf6
  4044ce:	or     al,BYTE PTR [rsi]
  4044d0:	outs   dx,DWORD PTR ds:[rsi]
  4044d1:	sbb    BYTE PTR [rcx],al
  4044d3:	add    BYTE PTR [rdx],cl
  4044d5:	or     eax,0x54280312
  4044da:	add    BYTE PTR [rax],al
  4044dc:	or     al,BYTE PTR [rdx]
  4044de:	jnp    0x40449d
  4044e0:	add    BYTE PTR [rax],al
  4044e2:	add    al,0x6f
  4044e4:	push   rbx
  4044e5:	add    BYTE PTR [rax],al
  4044e7:	or     dl,BYTE PTR [rbx]
  4044e9:	add    al,0x12
  4044eb:	add    al,0x28
  4044ed:	push   rsp
  4044ee:	add    BYTE PTR [rax],al
  4044f0:	or     bl,BYTE PTR [rax+0x58]
  4044f3:	sub    BYTE PTR [rcx],bl
  4044f5:	add    DWORD PTR [rax],eax
  4044f7:	or     al,BYTE PTR [rdx]
  4044f9:	jnp    0x4044b8
  4044fb:	add    BYTE PTR [rax],al
  4044fd:	add    al,0x6f
  4044ff:	sbb    al,BYTE PTR [rcx]
  404501:	add    BYTE PTR [rdx],cl
  404503:	adc    eax,DWORD PTR [rip+0x17280512]        # 0x17684a1b
  404509:	add    DWORD PTR [rax],eax
  40450b:	or     dl,BYTE PTR [rdx]
  40450d:	add    ch,BYTE PTR [rax]
  40450f:	(bad)  
  404510:	add    DWORD PTR [rax],eax
  404512:	or     ch,BYTE PTR [rdi]
  404514:	sub    eax,DWORD PTR [rdx]
  404516:	jnp    0x4044d5
  404518:	add    BYTE PTR [rax],al
  40451a:	add    al,0x12
  40451c:	add    ch,BYTE PTR [rax]
  40451e:	(bad)  
  40451f:	add    DWORD PTR [rax],eax
  404521:	or     al,BYTE PTR [rdx]
  404523:	jnp    0x4044e2
  404525:	add    BYTE PTR [rax],al
  404527:	add    al,0x6f
  404529:	sbb    al,BYTE PTR [rcx]
  40452b:	add    BYTE PTR [rdx],cl
  40452d:	adc    eax,DWORD PTR [rsi]
  40452f:	adc    al,BYTE PTR [rsi]
  404531:	sub    ch,dl
  404533:	add    BYTE PTR [rax],al
  404535:	or     dh,BYTE PTR [rbx+0x57]
  404538:	add    BYTE PTR [rax],al
  40453a:	or     ch,BYTE PTR [rdi-0x15]
  40453d:	add    BYTE PTR [rax],al
  40453f:	or     bl,dh
  404541:	or     al,BYTE PTR [rdi]
  404543:	sub    al,0x6
  404545:	(bad)  
  404546:	outs   dx,DWORD PTR ds:[rsi]
  404547:	add    DWORD PTR [rax],eax
  404549:	add    BYTE PTR [rdx],cl
  40454b:	fadd   QWORD PTR [rsi]
  40454d:	sub    al,BYTE PTR [rax]
  40454f:	add    BYTE PTR [rcx],al
  404551:	adc    BYTE PTR [rax],al
  404553:	add    BYTE PTR [rdx],al
  404555:	add    BYTE PTR [rax+0x0],bh
  404558:	mov    es,WORD PTR [rsi]
  40455a:	add    DWORD PTR [rdx],ecx
  40455c:	add    BYTE PTR [rax],al
  40455e:	add    BYTE PTR [rax],al
  404560:	adc    esi,DWORD PTR [rax]
  404562:	add    al,0x0
  404564:	pop    rdi
  404565:	add    BYTE PTR [rax],al
  404567:	add    BYTE PTR [rsi],dl
  404569:	add    BYTE PTR [rax],al
  40456b:	adc    DWORD PTR [rdx],eax
  40456d:	outs   dx,DWORD PTR ds:[rsi]
  40456e:	sbb    al,BYTE PTR [rcx]
  404570:	add    BYTE PTR [rdx],cl
  404572:	or     dl,BYTE PTR [rdx]
  404574:	add    BYTE PTR [rax],ch
  404576:	(bad)  
  404577:	add    DWORD PTR [rax],eax
  404579:	or     cl,BYTE PTR [rdi]
  40457b:	add    DWORD PTR [rax],ebp
  40457d:	(bad)  
  40457e:	add    DWORD PTR [rax],eax
  404580:	or     ch,BYTE PTR [rdi]
  404582:	rex.RXB add r9b,BYTE PTR [r15]
  404585:	add    DWORD PTR [rax],ebp
  404587:	(bad)  
  404588:	add    DWORD PTR [rax],eax
  40458a:	or     al,BYTE PTR [rdx]
  40458c:	outs   dx,DWORD PTR ds:[rsi]
  40458d:	sbb    al,BYTE PTR [rcx]
  40458f:	add    BYTE PTR [rdx],cl
  404591:	or     edx,DWORD PTR [rdx]
  404593:	add    DWORD PTR [rax],ebp
  404595:	(bad)  
  404596:	add    BYTE PTR [rax],al
  404598:	or     dh,BYTE PTR [rbx+0x57]
  40459b:	add    BYTE PTR [rax],al
  40459d:	or     ch,BYTE PTR [rdi-0x15]
  4045a0:	add    BYTE PTR [rax],al
  4045a2:	or     al,BYTE PTR [rdx]
  4045a4:	add    ch,BYTE PTR [rdi+0x1a]
  4045a7:	add    DWORD PTR [rax],eax
  4045a9:	or     cl,BYTE PTR [rdx+rdx*1]
  4045ac:	add    ch,BYTE PTR [rax]
  4045ae:	(bad)  
  4045af:	add    DWORD PTR [rax],eax
  4045b1:	or     al,BYTE PTR [rdx]
  4045b3:	sub    BYTE PTR [rbx],bl
  4045b5:	add    DWORD PTR [rax],eax
  4045b7:	or     cl,BYTE PTR [rip+0xffffffffd5280312]        # 0xffffffffd56848cf
  4045bd:	add    BYTE PTR [rax],al
  4045bf:	or     dh,BYTE PTR [rbx+0x57]
  4045c2:	add    BYTE PTR [rax],al
  4045c4:	or     ch,BYTE PTR [rax]
  4045c6:	pop    rax
  4045c7:	add    BYTE PTR [rax],al
  4045c9:	or     ch,BYTE PTR [rdx]
  4045cb:	loop   0x4045d0
  4045cd:	sub    al,0x1f
  4045cf:	add    al,BYTE PTR [rbx]
  4045d1:	sub    ah,dh
  4045d3:	add    BYTE PTR [rax],al
  4045d5:	(bad)  
  4045d6:	add    ch,BYTE PTR [rdi+0x7d]
  4045d9:	add    BYTE PTR [rax],al
  4045db:	or     ch,BYTE PTR [rdi+0x1c]
  4045de:	add    DWORD PTR [rax],eax
  4045e0:	or     al,BYTE PTR [rdx]
  4045e2:	add    ebp,DWORD PTR [rax]
  4045e4:	hlt    
  4045e5:	add    BYTE PTR [rax],al
  4045e7:	(bad)  
  4045e8:	adc    al,0x6f
  4045ea:	sbb    eax,0x40a0001
  4045ef:	sub    al,0x12
  4045f1:	add    al,BYTE PTR [rax+rbp*1]
  4045f4:	hlt    
  4045f5:	add    BYTE PTR [rax],al
  4045f7:	(bad)  
  4045f8:	add    bh,BYTE PTR [rbx-0x46]
  4045fb:	add    BYTE PTR [rax],al
  4045fd:	add    al,0x6f
  4045ff:	sbb    al,0x1
  404601:	add    BYTE PTR [rdx],cl
  404603:	sub    dl,BYTE PTR [rbx]
  404605:	xor    BYTE PTR [rdx],al
  404607:	add    BYTE PTR [rcx],bl
  404609:	add    BYTE PTR [rax],al
  40460b:	add    BYTE PTR [rdi],dl
  40460d:	add    BYTE PTR [rax],al
  40460f:	adc    DWORD PTR [rbx],eax
  404611:	je     0x4045bd
  404613:	add    BYTE PTR [rax],al
  404615:	add    DWORD PTR [rdi+0x1e],ebp
  404618:	add    DWORD PTR [rax],eax
  40461a:	or     dh,BYTE PTR [rdi+rdx*1+0x0]
  40461e:	add    BYTE PTR [rdx],al
  404620:	or     al,BYTE PTR [rdx]
  404622:	(bad)  
  404623:	sub    al,ch
  404625:	add    BYTE PTR [rax],al
  404627:	(bad)  
  404628:	sub    dh,BYTE PTR [rsi+0x2]
  40462b:	jnp    0x4045ea
  40462d:	add    BYTE PTR [rax],al
  40462f:	add    al,0x6f
  404631:	(bad)  
  404632:	add    DWORD PTR [rax],eax
  404634:	or     al,BYTE PTR [rdx]
  404636:	jnp    0x4045f0
  404638:	add    BYTE PTR [rax],al
  40463a:	add    al,0x3
  40463c:	outs   dx,DWORD PTR ds:[rsi]
  40463d:	test   BYTE PTR [rax],0x0
  404640:	or     ch,BYTE PTR [rdi+0x20]
  404643:	add    DWORD PTR [rax],eax
  404645:	or     ch,BYTE PTR [rdx]
  404647:	add    BYTE PTR [rbx],dl
  404649:	xor    BYTE PTR [rbx],al
  40464b:	add    BYTE PTR [rip+0x18000000],bh        # 0x18404651
  404651:	add    BYTE PTR [rax],al
  404653:	adc    DWORD PTR [rdx],eax
  404655:	add    al,0x28
  404657:	lock add BYTE PTR [rax],al
  40465a:	(bad)  
  40465b:	or     al,BYTE PTR [rdx]
  40465d:	jnp    0x40461c
  40465f:	add    BYTE PTR [rax],al
  404661:	add    al,0x6f
  404663:	push   rax
  404664:	add    BYTE PTR [rax],al
  404666:	or     al,BYTE PTR [rdx]
  404668:	jnp    0x404627
  40466a:	add    BYTE PTR [rax],al
  40466c:	add    al,0x6f
  40466e:	(bad)  
  40466f:	add    DWORD PTR [rax],eax
  404671:	or     al,BYTE PTR [rbx]
  404673:	(bad)  
  404674:	outs   dx,DWORD PTR ds:[rsi]
  404675:	and    DWORD PTR [rcx],eax
  404677:	add    BYTE PTR [rdx],cl
  404679:	add    bh,BYTE PTR [rbx-0x43]
  40467c:	add    BYTE PTR [rax],al
  40467e:	add    al,0x16
  404680:	outs   dx,DWORD PTR ds:[rsi]
  404681:	(bad)  
  404682:	add    BYTE PTR [rax],al
  404684:	or     al,BYTE PTR [rdx]
  404686:	jnp    0x404645
  404688:	add    BYTE PTR [rax],al
  40468a:	add    al,0x6f
  40468c:	outs   dx,DWORD PTR ds:[rsi]
  40468d:	add    BYTE PTR [rax],al
  40468f:	or     ch,BYTE PTR [rdx]
  404691:	jp     0x404696
  404693:	sub    al,0x13
  404695:	add    bh,BYTE PTR [rbx-0x44]
  404698:	add    BYTE PTR [rax],al
  40469a:	add    al,0x2c
  40469c:	or     eax,DWORD PTR [rdx]
  40469e:	jnp    0x40465c
  4046a0:	add    BYTE PTR [rax],al
  4046a2:	add    al,0x6f
  4046a4:	add    DWORD PTR [rax],eax
  4046a6:	add    BYTE PTR [rdx],cl
  4046a8:	add    al,BYTE PTR [rbx]
  4046aa:	sub    BYTE PTR [rax+rax*1+0x0],ah
  4046ae:	or     ch,BYTE PTR [rdx]
  4046b0:	adc    esi,DWORD PTR [rax]
  4046b2:	add    eax,DWORD PTR [rax]
  4046b4:	add    QWORD PTR [rax],r8
  4046b7:	add    BYTE PTR [rax+rax*1],al
  4046ba:	add    BYTE PTR [rcx],dl
  4046bc:	rcr    BYTE PTR [rbx],1
  4046be:	add    BYTE PTR [rax],al
  4046c0:	add    ch,BYTE PTR [rax]
  4046c2:	(bad)  
  4046c3:	add    BYTE PTR [rax],al
  4046c5:	or     dh,BYTE PTR [rbx+0x65]
  4046c8:	add    BYTE PTR [rax],al
  4046ca:	or     cl,BYTE PTR [rdx]
  4046cc:	add    dh,BYTE PTR [rbx+0x22]
  4046cf:	add    DWORD PTR [rax],eax
  4046d1:	or     bh,BYTE PTR [rbp-0x43]
  4046d4:	add    BYTE PTR [rax],al
  4046d6:	add    al,0x2
  4046d8:	jae    0x4046fd
  4046da:	add    DWORD PTR [rax],eax
  4046dc:	or     bh,BYTE PTR [rbp-0x42]
  4046df:	add    BYTE PTR [rax],al
  4046e1:	add    al,0x2
  4046e3:	jnp    0x4046a3
  4046e5:	add    BYTE PTR [rax],al
  4046e7:	add    al,0x6f
  4046e9:	fiadd  WORD PTR [rax]
  4046eb:	add    BYTE PTR [rdx],cl
  4046ed:	add    ch,BYTE PTR [rax]
  4046ef:	push   rax
  4046f0:	add    BYTE PTR [rax],al
  4046f2:	or     al,BYTE PTR [rdx]
  4046f4:	jnp    0x4046b3
  4046f6:	add    BYTE PTR [rax],al
  4046f8:	add    al,0x28
  4046fa:	and    al,0x1
  4046fc:	add    BYTE PTR [rdx],cl
  4046fe:	outs   dx,DWORD PTR ds:[rsi]
  4046ff:	and    eax,0x20a0001
  404704:	jnp    0x4046c3
  404706:	add    BYTE PTR [rax],al
  404708:	add    al,0x16
  40470a:	outs   dx,DWORD PTR ds:[rsi]
  40470b:	add    DWORD PTR es:[rax],eax
  40470e:	or     al,BYTE PTR [rsi]
  404710:	add    bh,BYTE PTR [rbx-0x43]
  404713:	add    BYTE PTR [rax],al
  404715:	add    al,0x72
  404717:	(bad)  
  404718:	adc    DWORD PTR [rax],eax
  40471a:	jo     0x40478b
  40471c:	add    BYTE PTR [eax],al
  40471f:	or     al,BYTE PTR [rdx]
  404721:	jnp    0x4046e0
  404723:	add    BYTE PTR [rax],al
  404725:	add    al,0x16
  404727:	outs   dx,DWORD PTR ds:[rsi]
  404728:	(bad)  
  404729:	add    DWORD PTR [rax],eax
  40472b:	or     al,BYTE PTR [rdx]
  40472d:	jnp    0x4046ec
  40472f:	add    BYTE PTR [rax],al
  404731:	add    al,0x18
  404733:	outs   dx,DWORD PTR ds:[rsi]
  404734:	sub    BYTE PTR [rcx],al
  404736:	add    BYTE PTR [rdx],cl
  404738:	add    bh,BYTE PTR [rbx-0x43]
  40473b:	add    BYTE PTR [rax],al
  40473d:	add    al,0x72
  40473f:	(bad)  
  404740:	adc    DWORD PTR [rax],eax
  404742:	jo     0x4047b3
  404744:	push   0x20a0000
  404749:	jnp    0x404708
  40474b:	add    BYTE PTR [rax],al
  40474d:	add    al,0x17
  40474f:	outs   dx,DWORD PTR ds:[rsi]
  404750:	sub    DWORD PTR [rcx],eax
  404752:	add    BYTE PTR [rdx],cl
  404754:	add    bh,BYTE PTR [rbx-0x43]
  404757:	add    BYTE PTR [rax],al
  404759:	add    al,0x17
  40475b:	outs   dx,DWORD PTR ds:[rsi]
  40475c:	sub    al,BYTE PTR [rcx]
  40475e:	add    BYTE PTR [rdx],cl
  404760:	add    bh,BYTE PTR [rbx-0x42]
  404763:	add    BYTE PTR [rax],al
  404765:	add    al,0x28
  404767:	and    al,0x1
  404769:	add    BYTE PTR [rdx],cl
  40476b:	outs   dx,DWORD PTR ds:[rsi]
  40476c:	imul   eax,DWORD PTR [rax],0x0
  40476f:	or     al,BYTE PTR [rsi]
  404771:	add    bh,BYTE PTR [rbx-0x42]
  404774:	add    BYTE PTR [rax],al
  404776:	add    al,0x72
  404778:	adc    DWORD PTR [r8],r8d
  40477b:	jo     0x4047ec
  40477d:	add    BYTE PTR [eax],al
  404780:	or     al,BYTE PTR [rdx]
  404782:	jnp    0x404742
  404784:	add    BYTE PTR [rax],al
  404786:	add    al,0x72
  404788:	adc    DWORD PTR [r8],r8d
  40478b:	jo     0x4047fc
  40478d:	push   0x20a0000
  404792:	jnp    0x404752
  404794:	add    BYTE PTR [rax],al
  404796:	add    al,0x16
  404798:	outs   dx,DWORD PTR ds:[rsi]
  404799:	sub    eax,DWORD PTR [rcx]
  40479b:	add    BYTE PTR [rdx],cl
  40479d:	add    dl,BYTE PTR [rsi]
  40479f:	sub    BYTE PTR [rsi+0x0],ch
  4047a2:	add    BYTE PTR [rdx],cl
  4047a4:	add    ch,BYTE PTR [rax]
  4047a6:	push   0x0
  4047a8:	add    BYTE PTR [rdx],cl
  4047aa:	outs   dx,DWORD PTR ds:[rsi]
  4047ab:	imul   eax,DWORD PTR [rax],0x0
  4047ae:	or     al,BYTE PTR [rdx]
  4047b0:	sub    BYTE PTR [rsi+0x0],cl
  4047b3:	add    BYTE PTR [rdx],cl
  4047b5:	add    bh,BYTE PTR [rbx-0x43]
  4047b8:	add    BYTE PTR [rax],al
  4047ba:	add    al,0x6f
  4047bc:	pop    rsi
  4047bd:	add    BYTE PTR [rax],al
  4047bf:	or     al,BYTE PTR [rdx]
  4047c1:	sub    BYTE PTR [rsi+0x0],cl
  4047c4:	add    BYTE PTR [rdx],cl
  4047c6:	add    bh,BYTE PTR [rbx-0x42]
  4047c9:	add    BYTE PTR [rax],al
  4047cb:	add    al,0x6f
  4047cd:	pop    rsi
  4047ce:	add    BYTE PTR [rax],al
  4047d0:	or     al,BYTE PTR [rdx]
  4047d2:	(bad)  
  4047d3:	outs   dx,DWORD PTR ds:[rsi]
  4047d4:	sub    al,0x1
  4047d6:	add    BYTE PTR [rdx],cl
  4047d8:	add    dh,BYTE PTR [rdx+0x4f]
  4047db:	adc    DWORD PTR [rax],eax
  4047dd:	jo     0x404807
  4047df:	push   0x60a0000
  4047e4:	add    dh,BYTE PTR [rdx+0x5d]
  4047e7:	or     al,0x0
  4047e9:	jo     0x40485a
  4047eb:	add    BYTE PTR [eax],al
  4047ee:	or     al,BYTE PTR [rdx]
  4047f0:	jnp    0x4047b0
  4047f2:	add    BYTE PTR [rax],al
  4047f4:	add    al,0x6f
  4047f6:	icebp  
  4047f7:	add    BYTE PTR [rax],al
  4047f9:	or     al,BYTE PTR [rdx]
  4047fb:	(bad)  
  4047fc:	sub    BYTE PTR [rcx+0x0],ah
  4047ff:	add    BYTE PTR [rdx],cl
  404801:	add    ch,BYTE PTR [rax]
  404803:	outs   dx,DWORD PTR ds:[rsi]
  404804:	add    BYTE PTR [rax],al
  404806:	or     ch,BYTE PTR [rdx]
  404808:	(bad)  
  404809:	sub    bl,BYTE PTR [rsi]
  40480b:	add    ch,BYTE PTR [rax]
  40480d:	sub    eax,0x2a0a0001
  404812:	jb     0x404816
  404814:	sub    BYTE PTR [rsi],ch
  404816:	add    DWORD PTR [rax],eax
  404818:	or     al,BYTE PTR [rbx]
  40481a:	sub    eax,0x1169720b
  40481f:	add    BYTE PTR [rax+0x73],dh
  404822:	rex.XB add BYTE PTR [r8],al
  404825:	or     bh,BYTE PTR [rdx+0x2]
  404828:	add    edi,DWORD PTR [rbp-0x41]
  40482b:	add    BYTE PTR [rax],al
  40482d:	add    al,0x2a
  40482f:	add    BYTE PTR [rbx],dl
  404831:	xor    BYTE PTR [rdx],al
  404833:	add    BYTE PTR [rip+0x19000000],bh        # 0x19404839
  404839:	add    BYTE PTR [rax],al
  40483b:	adc    DWORD PTR [rdx],eax
  40483d:	jnp    0x4047fe
  40483f:	add    BYTE PTR [rax],al
  404841:	add    al,0x7b
  404843:	mov    ebp,0x6f040000
  404848:	(bad)  
  404849:	add    DWORD PTR [rax],eax
  40484b:	or     ch,BYTE PTR [rdi+0x2f]
  40484e:	add    DWORD PTR [rax],eax
  404850:	or     cl,BYTE PTR [rdx]
  404852:	sub    ebx,DWORD PTR [rdx]
  404854:	add    bh,BYTE PTR [rbx-0x41]
  404857:	add    BYTE PTR [rax],al
  404859:	add    al,0x7b
  40485b:	mov    ebp,0x6f040000
  404860:	(bad)  
  404861:	add    DWORD PTR [rax],eax
  404863:	or     al,BYTE PTR [rsi]
  404865:	outs   dx,DWORD PTR ds:[rsi]
  404866:	xor    BYTE PTR [rcx],al
  404868:	add    BYTE PTR [rdx],cl
  40486a:	(bad)  
  40486b:	(bad)  
  40486c:	pop    rcx
  40486d:	or     al,BYTE PTR [rsi]
  40486f:	(bad)  
  404870:	xor    dl,ah
  404872:	add    ch,BYTE PTR [rax]
  404874:	xor    DWORD PTR [rcx],eax
  404876:	add    BYTE PTR [rdx],cl
  404878:	sub    bl,BYTE PTR [rdx+0x2]
  40487b:	jnp    0x40483c
  40487d:	add    BYTE PTR [rax],al
  40487f:	add    al,0x3
  404881:	add    al,0x6f
  404883:	cmc    
  404884:	add    BYTE PTR [rax],al
  404886:	(bad)  
  404887:	add    al,BYTE PTR [rbx]
  404889:	add    al,0x28
  40488b:	xor    al,BYTE PTR [rcx]
  40488d:	add    BYTE PTR [rdx],cl
  40488f:	sub    bl,BYTE PTR [rdx]
  404891:	jae    0x4048c6
  404893:	add    DWORD PTR [rax],eax
  404895:	or     bh,BYTE PTR [rdx-0x4e]
  404898:	add    esp,DWORD PTR [rax]
  40489a:	(bad)  
  40489b:	(bad)  
  40489c:	(bad)  
  40489d:	jg     0x4048d2
  40489f:	(bad)  
  4048a0:	jae    0x4048d6
  4048a2:	add    DWORD PTR [rax],eax
  4048a4:	or     bh,BYTE PTR [rdx+0x2]
  4048a7:	jnp    0x404868
  4048a9:	add    BYTE PTR [rax],al
  4048ab:	add    al,0x7b
  4048ad:	mov    ebp,0x6f040000
  4048b2:	(bad)  
  4048b3:	add    DWORD PTR [rax],eax
  4048b5:	or     al,BYTE PTR [rbx]
  4048b7:	outs   dx,DWORD PTR ds:[rsi]
  4048b8:	xor    BYTE PTR [rcx],al
  4048ba:	add    BYTE PTR [rdx],cl
  4048bc:	add    al,BYTE PTR [rbx]
  4048be:	sub    BYTE PTR [rip+0x2a0a0001],dh        # 0x2a4a48c5
  4048c4:	adc    esi,DWORD PTR [rax]
  4048c6:	add    al,0x0
  4048c8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  4048c9:	add    BYTE PTR [rax],al
  4048cb:	add    BYTE PTR [rdx],bl
  4048cd:	add    BYTE PTR [rax],al
  4048cf:	adc    DWORD PTR [rsi+0x37],edi
  4048d2:	add    BYTE PTR [rax],al
  4048d4:	or     cl,BYTE PTR [rdx]
  4048d6:	jle    0x40490f
  4048d8:	add    BYTE PTR [rax],al
  4048da:	or     cl,BYTE PTR [rbx]
  4048dc:	jle    0x404915
  4048de:	add    BYTE PTR [rax],al
  4048e0:	or     cl,BYTE PTR [rdx+rax*1]
  4048e3:	adc    eax,DWORD PTR [rsi+rdx*1]
  4048e6:	adc    eax,DWORD PTR [rip+0x411692b]        # 0x451b217
  4048ec:	adc    DWORD PTR [rip+0x72090d9a],eax        # 0x7249568c
  4048f2:	jne    0x404905
  4048f4:	add    BYTE PTR [rax+0x1b],dh
  4048f7:	outs   dx,DWORD PTR ds:[rsi]
  4048f8:	(bad)  
  4048f9:	add    DWORD PTR [rax],eax
  4048fb:	or     ch,BYTE PTR [rcx+rdx*1]
  4048fe:	or     DWORD PTR [rdx+0x75],esi
  404901:	adc    DWORD PTR [rax],eax
  404903:	jo     0x404974
  404905:	cmp    BYTE PTR [rcx],al
  404907:	add    BYTE PTR [rdx],cl
  404909:	outs   dx,DWORD PTR ds:[rsi]
  40490a:	cmp    DWORD PTR [rcx],eax
  40490c:	add    BYTE PTR [rdx],cl
  40490e:	or     cl,BYTE PTR [rcx]
  404910:	jb     0x4048a3
  404912:	adc    DWORD PTR [rax],eax
  404914:	jo     0x404931
  404916:	outs   dx,DWORD PTR ds:[rsi]
  404917:	(bad)  
  404918:	add    DWORD PTR [rax],eax
  40491a:	or     ch,BYTE PTR [rcx+rdx*1]
  40491d:	or     DWORD PTR [rdx-0x6f],esi
  404920:	adc    DWORD PTR [rax],eax
  404922:	jo     0x404993
  404924:	cmp    BYTE PTR [rcx],al
  404926:	add    BYTE PTR [rdx],cl
  404928:	outs   dx,DWORD PTR ds:[rsi]
  404929:	cmp    DWORD PTR [rcx],eax
  40492b:	add    BYTE PTR [rdx],cl
  40492d:	or     ecx,DWORD PTR [rcx]
  40492f:	jb     0x4048da
  404931:	adc    DWORD PTR [rax],eax
  404933:	jo     0x404950
  404935:	outs   dx,DWORD PTR ds:[rsi]
  404936:	(bad)  
  404937:	add    DWORD PTR [rax],eax
  404939:	or     ch,BYTE PTR [rcx+rdx*1]
  40493c:	or     DWORD PTR [rdx-0x57],esi
  40493f:	adc    DWORD PTR [rax],eax
  404941:	jo     0x4049b2
  404943:	cmp    BYTE PTR [rcx],al
  404945:	add    BYTE PTR [rdx],cl
  404947:	outs   dx,DWORD PTR ds:[rsi]
  404948:	cmp    DWORD PTR [rcx],eax
  40494a:	add    BYTE PTR [rdx],cl
  40494c:	or     al,0x11
  40494e:	add    eax,0x5135817
  404953:	adc    DWORD PTR [rip+0x698e0411],eax        # 0x69ce4d6a
  404959:	xor    cl,BYTE PTR [rdi+0x13a28]
  40495f:	or     dl,BYTE PTR [rsi]
  404961:	sub    BYTE PTR [rbx],bh
  404963:	add    DWORD PTR [rax],eax
  404965:	or     al,BYTE PTR [rsi]
  404967:	(bad)  
  404968:	or     BYTE PTR [rbx+0x74],dh
  40496b:	add    BYTE PTR [rax],al
  40496d:	(bad)  
  40496e:	sub    BYTE PTR [rcx+rax*1],bh
  404971:	add    BYTE PTR [rdx],cl
  404973:	sub    bl,BYTE PTR [rsi]
  404975:	add    ch,BYTE PTR [rax]
  404977:	adc    eax,DWORD PTR [rax]
  404979:	add    BYTE PTR [rdx],cl
  40497b:	sub    dl,BYTE PTR [rbx]
  40497d:	xor    BYTE PTR [rbx],al
  40497f:	add    BYTE PTR [rbx],dh
  404981:	add    BYTE PTR [rax],al
  404983:	add    BYTE PTR [rbx],bl
  404985:	add    BYTE PTR [rax],al
  404987:	adc    DWORD PTR [rsi-0x3d],edi
  40498a:	add    BYTE PTR [rax],al
  40498c:	add    al,0x14
  40498e:	sub    BYTE PTR [rip+0x2c0a0001],bh        # 0x2c4a4995
  404994:	and    BYTE PTR [rdx-0x41],dh
  404997:	adc    DWORD PTR [rax],eax
  404999:	jo     0x40496b
  40499b:	(bad)  
  40499c:	add    BYTE PTR [rax],al
  40499e:	add    ch,BYTE PTR [rax]
  4049a0:	(bad)  
  4049a1:	add    BYTE PTR [rax],al
  4049a3:	or     ch,BYTE PTR [rdi+0x3e]
  4049a6:	add    DWORD PTR [rax],eax
  4049a8:	or     dh,BYTE PTR [rbx+0x1b]
  4049ab:	add    BYTE PTR [rax],al
  4049ad:	or     cl,BYTE PTR [rdx]
  4049af:	(bad)  
  4049b0:	add    bl,0x0
  4049b3:	add    BYTE PTR [rsi+rdi*2],al
  4049b6:	ret    
  4049b7:	add    BYTE PTR [rax],al
  4049b9:	add    al,0x2a
  4049bb:	sbb    bh,BYTE PTR [rsi-0x3c]
  4049be:	add    BYTE PTR [rax],al
  4049c0:	add    al,0x2a
  4049c2:	(bad)  
  4049c3:	add    al,BYTE PTR [rax+0x40000c4]
  4049c9:	sub    al,BYTE PTR [rax]
  4049cb:	add    BYTE PTR [rbx],dl
  4049cd:	xor    BYTE PTR [rbx],al
  4049cf:	add    BYTE PTR [rax+rax*1],bl
  4049d2:	add    BYTE PTR [rax],al
  4049d4:	sbb    al,0x0
  4049d6:	add    BYTE PTR [rcx],dl
  4049d8:	sub    BYTE PTR [rcx],al
  4049da:	add    DWORD PTR [rax],eax
  4049dc:	(bad)  
  4049dd:	jb     0x404a0e
  4049df:	adc    al,BYTE PTR [rax]
  4049e1:	jo     0x404a61
  4049e3:	(bad)  
  4049e4:	add    BYTE PTR [rax],al
  4049e6:	add    al,0x6f
  4049e8:	(bad)  
  4049e9:	add    DWORD PTR [rax],eax
  4049eb:	or     cl,BYTE PTR [rdx]
  4049ed:	(bad)  
  4049ee:	je     0x404a28
  4049f0:	add    BYTE PTR [rax],al
  4049f2:	add    DWORD PTR [rdx],ebp
  4049f4:	adc    esi,DWORD PTR [rax]
  4049f6:	add    eax,DWORD PTR [rax]
  4049f8:	sbb    al,0x0
  4049fa:	add    BYTE PTR [rax],al
  4049fc:	sbb    al,0x0
  4049fe:	add    BYTE PTR [rcx],dl
  404a00:	sub    BYTE PTR [rcx],al
  404a02:	add    DWORD PTR [rax],eax
  404a04:	(bad)  
  404a05:	jb     0x404a5c
  404a07:	adc    al,BYTE PTR [rax]
  404a09:	jo     0x404a89
  404a0b:	(bad)  
  404a0c:	add    BYTE PTR [rax],al
  404a0e:	add    al,0x6f
  404a10:	(bad)  
  404a11:	add    DWORD PTR [rax],eax
  404a13:	or     cl,BYTE PTR [rdx]
  404a15:	(bad)  
  404a16:	je     0x404a50
  404a18:	add    BYTE PTR [rax],al
  404a1a:	add    DWORD PTR [rdx],ebp
  404a1c:	adc    esi,DWORD PTR [rax]
  404a1e:	add    eax,DWORD PTR [rax]
  404a20:	sbb    al,0x0
  404a22:	add    BYTE PTR [rax],al
  404a24:	sbb    al,0x0
  404a26:	add    BYTE PTR [rcx],dl
  404a28:	sub    BYTE PTR [rcx],al
  404a2a:	add    DWORD PTR [rax],eax
  404a2c:	(bad)  
  404a2d:	jb     0x404aa6
  404a2f:	adc    al,BYTE PTR [rax]
  404a31:	jo     0x404ab1
  404a33:	(bad)  
  404a34:	add    BYTE PTR [rax],al
  404a36:	add    al,0x6f
  404a38:	(bad)  
  404a39:	add    DWORD PTR [rax],eax
  404a3b:	or     cl,BYTE PTR [rdx]
  404a3d:	(bad)  
  404a3e:	je     0x404a78
  404a40:	add    BYTE PTR [rax],al
  404a42:	add    DWORD PTR [rdx],ebp
  404a44:	adc    esi,DWORD PTR [rax]
  404a46:	add    eax,DWORD PTR [rax]
  404a48:	sbb    al,0x0
  404a4a:	add    BYTE PTR [rax],al
  404a4c:	sbb    al,0x0
  404a4e:	add    BYTE PTR [rcx],dl
  404a50:	sub    BYTE PTR [rcx],al
  404a52:	add    DWORD PTR [rax],eax
  404a54:	(bad)  
  404a55:	jb     0x4049d8
  404a57:	adc    al,BYTE PTR [rax]
  404a59:	jo     0x404ad9
  404a5b:	(bad)  
  404a5c:	add    BYTE PTR [rax],al
  404a5e:	add    al,0x6f
  404a60:	(bad)  
  404a61:	add    DWORD PTR [rax],eax
  404a63:	or     cl,BYTE PTR [rdx]
  404a65:	(bad)  
  404a66:	je     0x404aa0
  404a68:	add    BYTE PTR [rax],al
  404a6a:	add    DWORD PTR [rdx],ebp
  404a6c:	adc    esi,DWORD PTR [rax]
  404a6e:	add    eax,DWORD PTR [rax]
  404a70:	sbb    al,0x0
  404a72:	add    BYTE PTR [rax],al
  404a74:	sbb    al,0x0
  404a76:	add    BYTE PTR [rcx],dl
  404a78:	sub    BYTE PTR [rcx],al
  404a7a:	add    DWORD PTR [rax],eax
  404a7c:	(bad)  
  404a7d:	jb     0x404a1e
  404a7f:	adc    al,BYTE PTR [rax]
  404a81:	jo     0x404b01
  404a83:	(bad)  
  404a84:	add    BYTE PTR [rax],al
  404a86:	add    al,0x6f
  404a88:	(bad)  
  404a89:	add    DWORD PTR [rax],eax
  404a8b:	or     cl,BYTE PTR [rdx]
  404a8d:	(bad)  
  404a8e:	je     0x404ac8
  404a90:	add    BYTE PTR [rax],al
  404a92:	add    DWORD PTR [rdx],ebp
  404a94:	adc    esi,DWORD PTR [rax]
  404a96:	add    eax,DWORD PTR [rax]
  404a98:	sbb    al,0x0
  404a9a:	add    BYTE PTR [rax],al
  404a9c:	sbb    al,0x0
  404a9e:	add    BYTE PTR [rcx],dl
  404aa0:	sub    BYTE PTR [rcx],al
  404aa2:	add    DWORD PTR [rax],eax
  404aa4:	(bad)  
  404aa5:	jb     0x404a66
  404aa7:	add    eax,DWORD PTR [rax]
  404aa9:	jo     0x404b29
  404aab:	(bad)  
  404aac:	add    BYTE PTR [rax],al
  404aae:	add    al,0x6f
  404ab0:	(bad)  
  404ab1:	add    DWORD PTR [rax],eax
  404ab3:	or     cl,BYTE PTR [rdx]
  404ab5:	(bad)  
  404ab6:	je     0x404af0
  404ab8:	add    BYTE PTR [rax],al
  404aba:	add    DWORD PTR [rdx],ebp
  404abc:	adc    esi,DWORD PTR [rax]
  404abe:	add    eax,DWORD PTR [rax]
  404ac0:	sbb    al,0x0
  404ac2:	add    BYTE PTR [rax],al
  404ac4:	sbb    al,0x0
  404ac6:	add    BYTE PTR [rcx],dl
  404ac8:	sub    BYTE PTR [rcx],al
  404aca:	add    DWORD PTR [rax],eax
  404acc:	(bad)  
  404acd:	jb     0x404a54
  404acf:	or     DWORD PTR [rax],eax
  404ad1:	jo     0x404b51
  404ad3:	(bad)  
  404ad4:	add    BYTE PTR [rax],al
  404ad6:	add    al,0x6f
  404ad8:	(bad)  
  404ad9:	add    DWORD PTR [rax],eax
  404adb:	or     cl,BYTE PTR [rdx]
  404add:	(bad)  
  404ade:	je     0x404b18
  404ae0:	add    BYTE PTR [rax],al
  404ae2:	add    DWORD PTR [rdx],ebp
  404ae4:	adc    esi,DWORD PTR [rax]
  404ae6:	add    eax,DWORD PTR [rax]
  404ae8:	sbb    al,0x0
  404aea:	add    BYTE PTR [rax],al
  404aec:	sbb    al,0x0
  404aee:	add    BYTE PTR [rcx],dl
  404af0:	sub    BYTE PTR [rcx],al
  404af2:	add    DWORD PTR [rax],eax
  404af4:	(bad)  
  404af5:	jb     0x404aaa
  404af7:	adc    al,BYTE PTR [rax]
  404af9:	jo     0x404b79
  404afb:	(bad)  
  404afc:	add    BYTE PTR [rax],al
  404afe:	add    al,0x6f
  404b00:	(bad)  
  404b01:	add    DWORD PTR [rax],eax
  404b03:	or     cl,BYTE PTR [rdx]
  404b05:	(bad)  
  404b06:	je     0x404b40
  404b08:	add    BYTE PTR [rax],al
  404b0a:	add    DWORD PTR [rdx],ebp
  404b0c:	adc    esi,DWORD PTR [rax]
  404b0e:	add    eax,DWORD PTR [rax]
  404b10:	sbb    al,0x0
  404b12:	add    BYTE PTR [rax],al
  404b14:	sbb    al,0x0
  404b16:	add    BYTE PTR [rcx],dl
  404b18:	sub    BYTE PTR [rcx],al
  404b1a:	add    DWORD PTR [rax],eax
  404b1c:	(bad)  
  404b1d:	jb     0x404b02
  404b1f:	adc    al,BYTE PTR [rax]
  404b21:	jo     0x404ba1
  404b23:	(bad)  
  404b24:	add    BYTE PTR [rax],al
  404b26:	add    al,0x6f
  404b28:	(bad)  
  404b29:	add    DWORD PTR [rax],eax
  404b2b:	or     cl,BYTE PTR [rdx]
  404b2d:	(bad)  
  404b2e:	je     0x404b68
  404b30:	add    BYTE PTR [rax],al
  404b32:	add    DWORD PTR [rdx],ebp
  404b34:	adc    esi,DWORD PTR [rax]
  404b36:	add    eax,DWORD PTR [rax]
  404b38:	sbb    al,0x0
  404b3a:	add    BYTE PTR [rax],al
  404b3c:	sbb    al,0x0
  404b3e:	add    BYTE PTR [rcx],dl
  404b40:	sub    BYTE PTR [rcx],al
  404b42:	add    DWORD PTR [rax],eax
  404b44:	(bad)  
  404b45:	jb     0x404b4e
  404b47:	adc    eax,DWORD PTR [rax]
  404b49:	jo     0x404bc9
  404b4b:	(bad)  
  404b4c:	add    BYTE PTR [rax],al
  404b4e:	add    al,0x6f
  404b50:	(bad)  
  404b51:	add    DWORD PTR [rax],eax
  404b53:	or     cl,BYTE PTR [rdx]
  404b55:	(bad)  
  404b56:	je     0x404b91
  404b58:	add    BYTE PTR [rax],al
  404b5a:	add    DWORD PTR [rdx],ebp
  404b5c:	adc    esi,DWORD PTR [rax]
  404b5e:	add    eax,DWORD PTR [rax]
  404b60:	sbb    al,0x0
  404b62:	add    BYTE PTR [rax],al
  404b64:	sbb    al,0x0
  404b66:	add    BYTE PTR [rcx],dl
  404b68:	sub    BYTE PTR [rcx],al
  404b6a:	add    DWORD PTR [rax],eax
  404b6c:	(bad)  
  404b6d:	jb     0x404b96
  404b6f:	adc    eax,DWORD PTR [rax]
  404b71:	jo     0x404bf1
  404b73:	(bad)  
  404b74:	add    BYTE PTR [rax],al
  404b76:	add    al,0x6f
  404b78:	(bad)  
  404b79:	add    DWORD PTR [rax],eax
  404b7b:	or     cl,BYTE PTR [rdx]
  404b7d:	(bad)  
  404b7e:	je     0x404bb8
  404b80:	add    BYTE PTR [rax],al
  404b82:	add    DWORD PTR [rdx],ebp
  404b84:	adc    esi,DWORD PTR [rax]
  404b86:	add    eax,DWORD PTR [rax]
  404b88:	sbb    al,0x0
  404b8a:	add    BYTE PTR [rax],al
  404b8c:	sbb    al,0x0
  404b8e:	add    BYTE PTR [rcx],dl
  404b90:	sub    BYTE PTR [rcx],al
  404b92:	add    DWORD PTR [rax],eax
  404b94:	(bad)  
  404b95:	jb     0x404bdc
  404b97:	adc    DWORD PTR [rax],eax
  404b99:	jo     0x404c19
  404b9b:	(bad)  
  404b9c:	add    BYTE PTR [rax],al
  404b9e:	add    al,0x6f
  404ba0:	(bad)  
  404ba1:	add    DWORD PTR [rax],eax
  404ba3:	or     cl,BYTE PTR [rdx]
  404ba5:	(bad)  
  404ba6:	je     0x404be1
  404ba8:	add    BYTE PTR [rax],al
  404baa:	add    DWORD PTR [rdx],ebp
  404bac:	adc    esi,DWORD PTR [rax]
  404bae:	add    eax,DWORD PTR [rax]
  404bb0:	sbb    al,0x0
  404bb2:	add    BYTE PTR [rax],al
  404bb4:	sbb    al,0x0
  404bb6:	add    BYTE PTR [rcx],dl
  404bb8:	sub    BYTE PTR [rcx],al
  404bba:	add    DWORD PTR [rax],eax
  404bbc:	(bad)  
  404bbd:	jb     0x404c04
  404bbf:	adc    eax,DWORD PTR [rax]
  404bc1:	jo     0x404c41
  404bc3:	(bad)  
  404bc4:	add    BYTE PTR [rax],al
  404bc6:	add    al,0x6f
  404bc8:	(bad)  
  404bc9:	add    DWORD PTR [rax],eax
  404bcb:	or     cl,BYTE PTR [rdx]
  404bcd:	(bad)  
  404bce:	je     0x404c08
  404bd0:	add    BYTE PTR [rax],al
  404bd2:	add    DWORD PTR [rdx],ebp
  404bd4:	adc    esi,DWORD PTR [rax]
  404bd6:	add    eax,DWORD PTR [rax]
  404bd8:	sbb    al,0x0
  404bda:	add    BYTE PTR [rax],al
  404bdc:	sbb    al,0x0
  404bde:	add    BYTE PTR [rcx],dl
  404be0:	sub    BYTE PTR [rcx],al
  404be2:	add    DWORD PTR [rax],eax
  404be4:	(bad)  
  404be5:	jb     0x404c44
  404be7:	adc    eax,DWORD PTR [rax]
  404be9:	jo     0x404c69
  404beb:	(bad)  
  404bec:	add    BYTE PTR [rax],al
  404bee:	add    al,0x6f
  404bf0:	(bad)  
  404bf1:	add    DWORD PTR [rax],eax
  404bf3:	or     cl,BYTE PTR [rdx]
  404bf5:	(bad)  
  404bf6:	je     0x404c30
  404bf8:	add    BYTE PTR [rax],al
  404bfa:	add    DWORD PTR [rdx],ebp
  404bfc:	adc    esi,DWORD PTR [rax]
  404bfe:	add    eax,DWORD PTR [rax]
  404c00:	sbb    al,0x0
  404c02:	add    BYTE PTR [rax],al
  404c04:	sbb    al,0x0
  404c06:	add    BYTE PTR [rcx],dl
  404c08:	sub    BYTE PTR [rcx],al
  404c0a:	add    DWORD PTR [rax],eax
  404c0c:	(bad)  
  404c0d:	jb     0x404baa
  404c0f:	adc    eax,DWORD PTR [rax]
  404c11:	jo     0x404c91
  404c13:	(bad)  
  404c14:	add    BYTE PTR [rax],al
  404c16:	add    al,0x6f
  404c18:	(bad)  
  404c19:	add    DWORD PTR [rax],eax
  404c1b:	or     cl,BYTE PTR [rdx]
  404c1d:	(bad)  
  404c1e:	je     0x404c58
  404c20:	add    BYTE PTR [rax],al
  404c22:	add    DWORD PTR [rdx],ebp
  404c24:	adc    esi,DWORD PTR [rax]
  404c26:	add    eax,DWORD PTR [rax]
  404c28:	sbb    al,0x0
  404c2a:	add    BYTE PTR [rax],al
  404c2c:	sbb    al,0x0
  404c2e:	add    BYTE PTR [rcx],dl
  404c30:	sub    BYTE PTR [rcx],al
  404c32:	add    DWORD PTR [rax],eax
  404c34:	(bad)  
  404c35:	jb     0x404bf6
  404c37:	adc    eax,DWORD PTR [rax]
  404c39:	jo     0x404cb9
  404c3b:	(bad)  
  404c3c:	add    BYTE PTR [rax],al
  404c3e:	add    al,0x6f
  404c40:	(bad)  
  404c41:	add    DWORD PTR [rax],eax
  404c43:	or     cl,BYTE PTR [rdx]
  404c45:	(bad)  
  404c46:	je     0x404c80
  404c48:	add    BYTE PTR [rax],al
  404c4a:	add    DWORD PTR [rdx],ebp
  404c4c:	adc    esi,DWORD PTR [rax]
  404c4e:	add    eax,DWORD PTR [rax]
  404c50:	sbb    al,0x0
  404c52:	add    BYTE PTR [rax],al
  404c54:	sbb    al,0x0
  404c56:	add    BYTE PTR [rcx],dl
  404c58:	sub    BYTE PTR [rcx],al
  404c5a:	add    DWORD PTR [rax],eax
  404c5c:	(bad)  
  404c5d:	jb     0x404c52
  404c5f:	adc    eax,DWORD PTR [rax]
  404c61:	jo     0x404ce1
  404c63:	(bad)  
  404c64:	add    BYTE PTR [rax],al
  404c66:	add    al,0x6f
  404c68:	(bad)  
  404c69:	add    DWORD PTR [rax],eax
  404c6b:	or     cl,BYTE PTR [rdx]
  404c6d:	(bad)  
  404c6e:	je     0x404ca8
  404c70:	add    BYTE PTR [rax],al
  404c72:	add    DWORD PTR [rdx],ebp
  404c74:	adc    esi,DWORD PTR [rax]
  404c76:	add    eax,DWORD PTR [rax]
  404c78:	sbb    al,0x0
  404c7a:	add    BYTE PTR [rax],al
  404c7c:	sbb    al,0x0
  404c7e:	add    BYTE PTR [rcx],dl
  404c80:	sub    BYTE PTR [rcx],al
  404c82:	add    DWORD PTR [rax],eax
  404c84:	(bad)  
  404c85:	jb     0x404c9c
  404c87:	adc    al,0x0
  404c89:	jo     0x404d09
  404c8b:	(bad)  
  404c8c:	add    BYTE PTR [rax],al
  404c8e:	add    al,0x6f
  404c90:	(bad)  
  404c91:	add    DWORD PTR [rax],eax
  404c93:	or     cl,BYTE PTR [rdx]
  404c95:	(bad)  
  404c96:	je     0x404cd0
  404c98:	add    BYTE PTR [rax],al
  404c9a:	add    DWORD PTR [rdx],ebp
  404c9c:	adc    esi,DWORD PTR [rax]
  404c9e:	add    eax,DWORD PTR [rax]
  404ca0:	sbb    al,0x0
  404ca2:	add    BYTE PTR [rax],al
  404ca4:	sbb    al,0x0
  404ca6:	add    BYTE PTR [rcx],dl
  404ca8:	sub    BYTE PTR [rcx],al
  404caa:	add    DWORD PTR [rax],eax
  404cac:	(bad)  
  404cad:	jb     0x404cec
  404caf:	adc    al,0x0
  404cb1:	jo     0x404d31
  404cb3:	(bad)  
  404cb4:	add    BYTE PTR [rax],al
  404cb6:	add    al,0x6f
  404cb8:	(bad)  
  404cb9:	add    DWORD PTR [rax],eax
  404cbb:	or     cl,BYTE PTR [rdx]
  404cbd:	(bad)  
  404cbe:	je     0x404cf8
  404cc0:	add    BYTE PTR [rax],al
  404cc2:	add    DWORD PTR [rdx],ebp
  404cc4:	adc    esi,DWORD PTR [rax]
  404cc6:	add    eax,DWORD PTR [rax]
  404cc8:	sbb    al,0x0
  404cca:	add    BYTE PTR [rax],al
  404ccc:	sbb    al,0x0
  404cce:	add    BYTE PTR [rcx],dl
  404cd0:	sub    BYTE PTR [rcx],al
  404cd2:	add    DWORD PTR [rax],eax
  404cd4:	(bad)  
  404cd5:	jb     0x404d2e
  404cd7:	adc    al,0x0
  404cd9:	jo     0x404d59
  404cdb:	(bad)  
  404cdc:	add    BYTE PTR [rax],al
  404cde:	add    al,0x6f
  404ce0:	(bad)  
  404ce1:	add    DWORD PTR [rax],eax
  404ce3:	or     cl,BYTE PTR [rdx]
  404ce5:	(bad)  
  404ce6:	je     0x404d20
  404ce8:	add    BYTE PTR [rax],al
  404cea:	add    DWORD PTR [rdx],ebp
  404cec:	adc    esi,DWORD PTR [rax]
  404cee:	add    eax,DWORD PTR [rax]
  404cf0:	sbb    al,0x0
  404cf2:	add    BYTE PTR [rax],al
  404cf4:	sbb    al,0x0
  404cf6:	add    BYTE PTR [rcx],dl
  404cf8:	sub    BYTE PTR [rcx],al
  404cfa:	add    DWORD PTR [rax],eax
  404cfc:	(bad)  
  404cfd:	jb     0x404d68
  404cff:	adc    al,0x0
  404d01:	jo     0x404d81
  404d03:	(bad)  
  404d04:	add    BYTE PTR [rax],al
  404d06:	add    al,0x6f
  404d08:	(bad)  
  404d09:	add    DWORD PTR [rax],eax
  404d0b:	or     cl,BYTE PTR [rdx]
  404d0d:	(bad)  
  404d0e:	je     0x404d48
  404d10:	add    BYTE PTR [rax],al
  404d12:	add    DWORD PTR [rdx],ebp
  404d14:	adc    esi,DWORD PTR [rax]
  404d16:	add    eax,DWORD PTR [rax]
  404d18:	sbb    al,0x0
  404d1a:	add    BYTE PTR [rax],al
  404d1c:	sbb    al,0x0
  404d1e:	add    BYTE PTR [rcx],dl
  404d20:	sub    BYTE PTR [rcx],al
  404d22:	add    DWORD PTR [rax],eax
  404d24:	(bad)  
  404d25:	jb     0x404d9c
  404d27:	adc    al,0x0
  404d29:	jo     0x404da9
  404d2b:	(bad)  
  404d2c:	add    BYTE PTR [rax],al
  404d2e:	add    al,0x6f
  404d30:	(bad)  
  404d31:	add    DWORD PTR [rax],eax
  404d33:	or     cl,BYTE PTR [rdx]
  404d35:	(bad)  
  404d36:	je     0x404d70
  404d38:	add    BYTE PTR [rax],al
  404d3a:	add    DWORD PTR [rdx],ebp
  404d3c:	adc    esi,DWORD PTR [rax]
  404d3e:	add    eax,DWORD PTR [rax]
  404d40:	sbb    al,0x0
  404d42:	add    BYTE PTR [rax],al
  404d44:	sbb    al,0x0
  404d46:	add    BYTE PTR [rcx],dl
  404d48:	sub    BYTE PTR [rcx],al
  404d4a:	add    DWORD PTR [rax],eax
  404d4c:	(bad)  
  404d4d:	jb     0x404d44
  404d4f:	add    eax,DWORD PTR [rax]
  404d51:	jo     0x404dd1
  404d53:	(bad)  
  404d54:	add    BYTE PTR [rax],al
  404d56:	add    al,0x6f
  404d58:	(bad)  
  404d59:	add    DWORD PTR [rax],eax
  404d5b:	or     cl,BYTE PTR [rdx]
  404d5d:	(bad)  
  404d5e:	je     0x404d98
  404d60:	add    BYTE PTR [rax],al
  404d62:	add    DWORD PTR [rdx],ebp
  404d64:	adc    esi,DWORD PTR [rax]
  404d66:	add    eax,DWORD PTR [rax]
  404d68:	sbb    al,0x0
  404d6a:	add    BYTE PTR [rax],al
  404d6c:	sbb    al,0x0
  404d6e:	add    BYTE PTR [rcx],dl
  404d70:	sub    BYTE PTR [rcx],al
  404d72:	add    DWORD PTR [rax],eax
  404d74:	(bad)  
  404d75:	jb     0x404de4
  404d77:	add    al,BYTE PTR [rax]
  404d79:	jo     0x404df9
  404d7b:	(bad)  
  404d7c:	add    BYTE PTR [rax],al
  404d7e:	add    al,0x6f
  404d80:	(bad)  
  404d81:	add    DWORD PTR [rax],eax
  404d83:	or     cl,BYTE PTR [rdx]
  404d85:	(bad)  
  404d86:	je     0x404dc0
  404d88:	add    BYTE PTR [rax],al
  404d8a:	add    DWORD PTR [rdx],ebp
  404d8c:	adc    esi,DWORD PTR [rax]
  404d8e:	add    eax,DWORD PTR [rax]
  404d90:	sbb    al,0x0
  404d92:	add    BYTE PTR [rax],al
  404d94:	sbb    al,0x0
  404d96:	add    BYTE PTR [rcx],dl
  404d98:	sub    BYTE PTR [rcx],al
  404d9a:	add    DWORD PTR [rax],eax
  404d9c:	(bad)  
  404d9d:	jb     0x404d30
  404d9f:	adc    al,0x0
  404da1:	jo     0x404e21
  404da3:	(bad)  
  404da4:	add    BYTE PTR [rax],al
  404da6:	add    al,0x6f
  404da8:	(bad)  
  404da9:	add    DWORD PTR [rax],eax
  404dab:	or     cl,BYTE PTR [rdx]
  404dad:	(bad)  
  404dae:	je     0x404de8
  404db0:	add    BYTE PTR [rax],al
  404db2:	add    DWORD PTR [rdx],ebp
  404db4:	adc    esi,DWORD PTR [rax]
  404db6:	add    eax,DWORD PTR [rax]
  404db8:	sbb    al,0x0
  404dba:	add    BYTE PTR [rax],al
  404dbc:	sbb    al,0x0
  404dbe:	add    BYTE PTR [rcx],dl
  404dc0:	sub    BYTE PTR [rcx],al
  404dc2:	add    DWORD PTR [rax],eax
  404dc4:	(bad)  
  404dc5:	jb     0x404d8a
  404dc7:	adc    al,0x0
  404dc9:	jo     0x404e49
  404dcb:	(bad)  
  404dcc:	add    BYTE PTR [rax],al
  404dce:	add    al,0x6f
  404dd0:	(bad)  
  404dd1:	add    DWORD PTR [rax],eax
  404dd3:	or     cl,BYTE PTR [rdx]
  404dd5:	(bad)  
  404dd6:	je     0x404e10
  404dd8:	add    BYTE PTR [rax],al
  404dda:	add    DWORD PTR [rdx],ebp
  404ddc:	xor    al,BYTE PTR [rdx]
  404dde:	jnp    0x404da6
  404de0:	add    BYTE PTR [rax],al
  404de2:	add    al,0x6f
  404de4:	test   al,0x0
  404de6:	add    BYTE PTR [rsi],al
  404de8:	sub    al,BYTE PTR [rax]
  404dea:	add    BYTE PTR [rax],al
  404dec:	add    esi,DWORD PTR [rax]
  404dee:	add    eax,DWORD PTR [rax]
  404df0:	push   rax
  404df1:	add    BYTE PTR [rax],al
  404df3:	add    BYTE PTR [rax],al
  404df5:	add    BYTE PTR [rax],al
  404df7:	add    BYTE PTR [rdx],al
  404df9:	jnp    0x404dc1
  404dfb:	add    BYTE PTR [rax],al
  404dfd:	add    al,0x6f
  404dff:	test   al,0x0
  404e01:	add    BYTE PTR [rsi],al
  404e03:	add    ebp,DWORD PTR [rax]
  404e05:	ret    0x0
  404e08:	or     ch,BYTE PTR [rcx+rax*1]
  404e0b:	sub    al,BYTE PTR [rdx]
  404e0d:	add    esi,DWORD PTR [rbx-0x54]
  404e10:	add    BYTE PTR [rax],al
  404e12:	(bad)  
  404e13:	jge    0x404ddb
  404e15:	add    BYTE PTR [rax],al
  404e17:	add    al,0x2
  404e19:	jb     0x404e1a
  404e1b:	(bad)  
  404e1c:	add    BYTE PTR [rax+0x28],dh
  404e1f:	push   0x2060000
  404e24:	add    bh,BYTE PTR [rbx-0x3a]
  404e27:	add    BYTE PTR [rax],al
  404e29:	add    al,0x6f
  404e2b:	test   eax,0x2c060000
  404e30:	adc    BYTE PTR [rdx],al
  404e32:	jnp    0x404dfa
  404e34:	add    BYTE PTR [rax],al
  404e36:	add    al,0x6f
  404e38:	stos   BYTE PTR es:[rdi],al
  404e39:	add    BYTE PTR [rax],al
  404e3b:	(bad)  
  404e3c:	(bad)  
  404e3d:	inc    BYTE PTR [rcx]
  404e3f:	sub    eax,DWORD PTR [rcx]
  404e41:	(bad)  
  404e42:	sub    BYTE PTR [rsi+0x0],ah
  404e45:	add    BYTE PTR [rsi],al
  404e47:	sub    bl,BYTE PTR [rsi]
  404e49:	add    bh,BYTE PTR [rbx-0x39]
  404e4c:	add    BYTE PTR [rax],al
  404e4e:	add    al,0x2a
  404e50:	mov    al,BYTE PTR [rdx]
  404e52:	jnp    0x404e1b
  404e54:	add    BYTE PTR [rax],al
  404e56:	add    al,0x3
  404e58:	sub    dl,al
  404e5a:	add    BYTE PTR [rax],al
  404e5c:	or     ch,BYTE PTR [rcx+rax*1]
  404e5f:	sub    al,BYTE PTR [rdx]
  404e61:	add    edi,DWORD PTR [rbp-0x39]
  404e64:	add    BYTE PTR [rax],al
  404e66:	add    al,0x2
  404e68:	jb     0x404e55
  404e6a:	adc    al,0x0
  404e6c:	jo     0x404e96
  404e6e:	push   0x2a060000
  404e73:	pop    rsi
  404e74:	add    dh,BYTE PTR [rdx+0x1f]
  404e77:	or     al,0x0
  404e79:	jo     0x404eee
  404e7b:	lods   al,BYTE PTR ds:[rsi]
  404e7c:	add    BYTE PTR [rax],al
  404e7e:	(bad)  
  404e7f:	jge    0x404e47
  404e81:	add    BYTE PTR [rax],al
  404e83:	add    al,0x2
  404e85:	sub    BYTE PTR [rdx+0x0],ch
  404e88:	add    BYTE PTR [rsi],al
  404e8a:	sub    ah,BYTE PTR [rsi]
  404e8c:	add    al,BYTE PTR [rbx]
  404e8e:	adc    al,0x28
  404e90:	and    al,0x1
  404e92:	add    BYTE PTR [rsi],al
  404e94:	sub    dl,BYTE PTR [rsi+0xc1f7202]
  404e9a:	add    BYTE PTR [rax+0x73],dh
  404e9d:	lods   al,BYTE PTR ds:[rsi]
  404e9e:	add    BYTE PTR [rax],al
  404ea0:	(bad)  
  404ea1:	jge    0x404e69
  404ea3:	add    BYTE PTR [rax],al
  404ea5:	add    al,0x2
  404ea7:	sub    BYTE PTR [rdx+0x0],ch
  404eaa:	add    BYTE PTR [rsi],al
  404eac:	add    al,BYTE PTR [rbx]
  404eae:	sub    BYTE PTR [rdi],bl
  404eb0:	add    DWORD PTR [rax],eax
  404eb2:	(bad)  
  404eb3:	add    al,BYTE PTR [rax+rbp*1]
  404eb6:	and    DWORD PTR [rcx],eax
  404eb8:	add    BYTE PTR [rsi],al
  404eba:	sub    al,BYTE PTR [rax]
  404ebc:	add    esi,DWORD PTR [rax]
  404ebe:	(bad)  
  404ebf:	add    BYTE PTR [rbp+0x0],al
  404ec2:	add    BYTE PTR [rax],al
  404ec4:	add    BYTE PTR [rax],al
  404ec6:	add    BYTE PTR [rax],al
  404ec8:	add    ch,BYTE PTR [rax]
  404eca:	and    BYTE PTR [rcx],al
  404ecc:	add    BYTE PTR [rsi],al
  404ece:	sub    BYTE PTR [rbp+0x2c0a0000],al
  404ed4:	adc    DWORD PTR [rsi-0x3b],edi
  404ed7:	add    BYTE PTR [rax],al
  404ed9:	add    al,0x2
  404edb:	sub    BYTE PTR [rsi],bl
  404edd:	add    DWORD PTR [rax],eax
  404edf:	(bad)  
  404ee0:	sub    BYTE PTR [rcx+0x1],al
  404ee3:	add    BYTE PTR [rdx],cl
  404ee5:	sub    bh,BYTE PTR [rsi-0x3b]
  404ee8:	add    BYTE PTR [rax],al
  404eea:	add    al,0x2
  404eec:	sub    BYTE PTR [rsi],bl
  404eee:	add    DWORD PTR [rax],eax
  404ef0:	(bad)  
  404ef1:	(bad)  
  404ef2:	jb     0x404ef3
  404ef4:	adc    al,0x0
  404ef6:	jo     0x404efa
  404ef8:	jnp    0x404ec1
  404efa:	add    BYTE PTR [rax],al
  404efc:	add    al,0x72
  404efe:	or     edx,DWORD PTR [rip+0x42287000]        # 0x4268bf04
  404f04:	add    DWORD PTR [rax],eax
  404f06:	or     ch,BYTE PTR [rax]
  404f08:	rex.XB add DWORD PTR [r8],eax
  404f0b:	or     ch,BYTE PTR [rdx]
  404f0d:	cs jae 0x404f54
  404f10:	add    DWORD PTR [rax],eax
  404f12:	or     al,BYTE PTR [rax+0x40000c5]
  404f18:	sub    dh,BYTE PTR [rdx+0x2]
  404f1b:	sub    BYTE PTR [rbx],dl
  404f1d:	add    BYTE PTR [rax],al
  404f1f:	or     al,BYTE PTR [rdx]
  404f21:	sub    BYTE PTR [rbp+0x1],al
  404f24:	add    BYTE PTR [rdx],cl
  404f26:	jge    0x404ef0
  404f28:	add    BYTE PTR [rax],al
  404f2a:	add    al,0x28
  404f2c:	rex.RX add DWORD PTR [rax],r8d
  404f2f:	or     ch,BYTE PTR [rax]
  404f31:	rex.RXB add DWORD PTR [r8],r8d
  404f34:	or     ch,BYTE PTR [rdx]
  404f36:	xchg   BYTE PTR [rdx],al
  404f38:	jnp    0x404f02
  404f3a:	add    BYTE PTR [rax],al
  404f3c:	add    al,0x14
  404f3e:	sub    BYTE PTR [rax+0x1],cl
  404f41:	add    BYTE PTR [rdx],cl
  404f43:	sub    al,0x12
  404f45:	add    bh,BYTE PTR [rbx-0x38]
  404f48:	add    BYTE PTR [rax],al
  404f4a:	add    al,0x28
  404f4c:	rex.RXB add DWORD PTR [r8],r8d
  404f4f:	or     al,BYTE PTR [rdx]
  404f51:	adc    al,0x7d
  404f53:	enter  0x0,0x4
  404f57:	sub    bl,BYTE PTR [rsi]
  404f59:	add    bh,BYTE PTR [rbx-0x36]
  404f5c:	add    BYTE PTR [rax],al
  404f5e:	add    al,0x2a
  404f60:	add    ch,BYTE PTR ss:[rax]
  404f63:	fild   DWORD PTR [rax]
  404f65:	add    BYTE PTR [rsi],al
  404f67:	add    ch,BYTE PTR [rax]
  404f69:	xor    DWORD PTR [rcx],eax
  404f6b:	add    BYTE PTR [rsi],al
  404f6d:	sub    bh,BYTE PTR [rdx]
  404f6f:	add    al,BYTE PTR [rbx]
  404f71:	sub    ah,bl
  404f73:	add    BYTE PTR [rax],al
  404f75:	(bad)  
  404f76:	add    ch,BYTE PTR [rax]
  404f78:	xor    DWORD PTR [rcx],eax
  404f7a:	add    BYTE PTR [rsi],al
  404f7c:	sub    dl,BYTE PTR [rdx+0x2]
  404f7f:	sub    bl,bl
  404f81:	add    BYTE PTR [rax],al
  404f83:	(bad)  
  404f84:	add    eax,DWORD PTR [rdx]
  404f86:	outs   dx,DWORD PTR ds:[rsi]
  404f87:	repz add BYTE PTR [rax],al
  404f8a:	or     al,BYTE PTR [rdx]
  404f8c:	sub    BYTE PTR [rcx],dh
  404f8e:	add    DWORD PTR [rax],eax
  404f90:	(bad)  
  404f91:	sub    al,BYTE PTR [rsi+0x2]
  404f94:	add    ebp,DWORD PTR [rdi+0x49]
  404f97:	add    DWORD PTR [rax],eax
  404f99:	or     al,BYTE PTR [rax*1+0x2e28040e]
  404fa0:	add    DWORD PTR [rax],eax
  404fa2:	(bad)  
  404fa3:	sub    bl,BYTE PTR [rsi]
  404fa5:	add    ch,BYTE PTR [rax]
  404fa7:	adc    eax,DWORD PTR [rax]
  404fa9:	add    BYTE PTR [rdx],cl
  404fab:	sub    al,BYTE PTR [rsi+0x14a6f04]
  404fb1:	add    BYTE PTR [rdx],cl
  404fb3:	and    BYTE PTR [rax],al
  404fb5:	add    BYTE PTR [rax],dl
  404fb7:	add    BYTE PTR [rsi],ch
  404fb9:	or     BYTE PTR [rdi+rbp*2],al
  404fbc:	rex.WX add QWORD PTR [rax],rax
  404fbf:	or     ch,BYTE PTR [rip+0xffffffffd27b020b]        # 0xffffffffd2bb51d0
  404fc5:	add    BYTE PTR [rax],al
  404fc7:	add    al,0x6f
  404fc9:	add    BYTE PTR [eax],al
  404fcc:	(bad)  
  404fcd:	sub    al,BYTE PTR [rax]
  404fcf:	add    BYTE PTR [rbx],dl
  404fd1:	xor    BYTE PTR [rsi],al
  404fd3:	add    ch,ah
  404fd5:	add    DWORD PTR [rax],eax
  404fd7:	add    BYTE PTR [rip+0x73110000],bl        # 0x73514fdd
  404fdd:	add    DWORD PTR [rax],r8d
  404fe0:	(bad)  
  404fe1:	adc    eax,DWORD PTR [rcx+rdx*1]
  404fe4:	add    al,0xe
  404fe6:	add    al,0x7d
  404fe8:	rol    BYTE PTR [rax],cl
  404fea:	add    BYTE PTR [rdx+rax*1],al
  404fed:	jnp    0x404fb9
  404fef:	add    BYTE PTR [rax],al
  404ff1:	add    al,0x6f
  404ff3:	rex.WXB add QWORD PTR [r8],rax
  404ff6:	or     dl,BYTE PTR [rdi]
  404ff8:	pop    rcx
  404ff9:	(bad)  
  404ffa:	sub    BYTE PTR [rcx+rax*1+0x0],cl
  404ffe:	or     cl,BYTE PTR [rdx]
  405000:	add    bh,BYTE PTR [rbx-0x36]
  405003:	add    BYTE PTR [rax],al
  405005:	add    al,0x6f
  405007:	add    QWORD PTR [r8],r8
  40500a:	or     al,BYTE PTR [rsi]
  40500c:	outs   dx,DWORD PTR ds:[rsi]
  40500d:	rex.WRX add QWORD PTR [rax],r8
  405010:	or     dl,BYTE PTR [rsi]
  405012:	outs   dx,DWORD PTR ds:[rsi]
  405013:	rex.WRXB add QWORD PTR [r8],r8
  405016:	or     al,BYTE PTR [rdx]
  405018:	jnp    0x404fe4
  40501a:	add    BYTE PTR [rax],al
  40501c:	add    al,0x25
  40501e:	outs   dx,DWORD PTR ds:[rsi]
  40501f:	rex.WXB add QWORD PTR [r8],rax
  405022:	or     dl,BYTE PTR [rdi]
  405024:	pop    rax
  405025:	outs   dx,DWORD PTR ds:[rsi]
  405026:	push   rax
  405027:	add    DWORD PTR [rax],eax
  405029:	or     al,BYTE PTR [rdx]
  40502b:	jnp    0x404ff7
  40502d:	add    BYTE PTR [rax],al
  40502f:	add    al,0x6f
  405031:	add    QWORD PTR [r8],r8
  405034:	or     dl,BYTE PTR [rsi]
  405036:	jae    0x405089
  405038:	add    DWORD PTR [rax],eax
  40503a:	or     ch,BYTE PTR [rdi+0x52]
  40503d:	add    DWORD PTR [rax],eax
  40503f:	or     ah,BYTE PTR [rsi]
  405041:	jae    0x405066
  405043:	add    DWORD PTR [rax],eax
  405045:	or     cl,BYTE PTR [rbx]
  405047:	(bad)  
  405048:	add    ebp,DWORD PTR [rdi-0x4]
  40504b:	add    BYTE PTR [rax],al
  40504d:	or     al,BYTE PTR [rdi]
  40504f:	(bad)  
  405050:	outs   dx,DWORD PTR ds:[rsi]
  405051:	push   rbx
  405052:	add    DWORD PTR [rax],eax
  405054:	or     ch,BYTE PTR [rdi-0x6]
  405057:	add    BYTE PTR [rax],al
  405059:	or     ch,BYTE PTR [rdi+0x58]
  40505c:	add    BYTE PTR [rax],al
  40505e:	or     al,BYTE PTR [rdi]
  405060:	(bad)  
  405061:	outs   dx,DWORD PTR ds:[rsi]
  405062:	push   rsp
  405063:	add    DWORD PTR [rax],eax
  405065:	or     al,BYTE PTR [rdi]
  405067:	outs   dx,DWORD PTR ds:[rsi]
  405068:	in     al,0x0
  40506a:	add    BYTE PTR [rdx],cl
  40506c:	jb     0x40506d
  40506e:	or     eax,DWORD PTR [rax]
  405070:	jo     0x405083
  405072:	add    al,0x7b
  405074:	rol    BYTE PTR [rax],cl
  405076:	add    BYTE PTR [rdx+rsi*2],al
  405079:	dec    DWORD PTR [rbx]
  40507b:	add    BYTE PTR [rax+0x6f],dh
  40507e:	push   rbp
  40507f:	add    DWORD PTR [rax],eax
  405081:	or     ah,BYTE PTR [rsi]
  405083:	add    bh,BYTE PTR [rbx-0x36]
  405086:	add    BYTE PTR [rax],al
  405088:	add    al,0x6f
  40508a:	fild   WORD PTR [rax]
  40508c:	add    BYTE PTR [rdx],cl
  40508e:	(bad)  
  40508f:	(bad)  
  405090:	(bad)  
  405091:	outs   dx,DWORD PTR ds:[rsi]
  405092:	loopne 0x405094
  405094:	add    BYTE PTR [rdx],cl
  405096:	add    bh,BYTE PTR [rbx-0x36]
  405099:	add    BYTE PTR [rax],al
  40509b:	add    al,0x7
  40509d:	sbb    BYTE PTR [rdi+0x56],ch
  4050a0:	add    DWORD PTR [rax],eax
  4050a2:	or     dh,BYTE PTR [rbx+0x57]
  4050a5:	add    DWORD PTR [rax],eax
  4050a7:	or     cl,BYTE PTR [rax+rcx*1]
  4050aa:	add    al,0x6f
  4050ac:	(bad)  
  4050ad:	add    BYTE PTR [rax],al
  4050af:	or     cl,BYTE PTR [rax]
  4050b1:	(bad)  
  4050b2:	outs   dx,DWORD PTR ds:[rsi]
  4050b3:	rol    BYTE PTR [rax],cl
  4050b5:	add    BYTE PTR [rdx],cl
  4050b7:	or     BYTE PTR [rsi],dl
  4050b9:	sbb    BYTE PTR [rsi],dl
  4050bb:	sbb    BYTE PTR [rbx+0x5c],dh
  4050be:	add    BYTE PTR [rax],al
  4050c0:	or     ch,BYTE PTR [rdi+0x58]
  4050c3:	add    DWORD PTR [rax],eax
  4050c5:	or     cl,BYTE PTR [rax]
  4050c7:	sbb    BYTE PTR [rdi+0x59],ch
  4050ca:	add    DWORD PTR [rax],eax
  4050cc:	or     cl,BYTE PTR [rax]
  4050ce:	(bad)  
  4050cf:	outs   dx,DWORD PTR ds:[rsi]
  4050d0:	pop    rdx
  4050d1:	add    DWORD PTR [rax],eax
  4050d3:	or     cl,BYTE PTR [rax]
  4050d5:	adc    DWORD PTR [rsi+rdi*8],eax
  4050d8:	(bad)  
  4050d9:	add    DWORD PTR [r8],r8d
  4050dc:	(bad)  
  4050dd:	jae    0x40513a
  4050df:	add    DWORD PTR [rax],eax
  4050e1:	or     ch,BYTE PTR [rdi+0x5c]
  4050e4:	add    DWORD PTR [rax],eax
  4050e6:	or     cl,BYTE PTR [rax]
  4050e8:	outs   dx,DWORD PTR ds:[rsi]
  4050e9:	in     al,0x0
  4050eb:	add    BYTE PTR [rdx],cl
  4050ed:	jb     0x4050fe
  4050ef:	or     al,0x0
  4050f1:	jo     0x405104
  4050f3:	add    al,0x7b
  4050f5:	rol    BYTE PTR [rax],cl
  4050f7:	add    BYTE PTR [rdx+rsi*2],al
  4050fa:	(bad)  
  4050fc:	add    BYTE PTR [rax+0x6f],dh
  4050ff:	push   rbp
  405100:	add    DWORD PTR [rax],eax
  405102:	or     ah,BYTE PTR [rsi]
  405104:	or     BYTE PTR [rdi-0x1c],ch
  405107:	add    BYTE PTR [rax],al
  405109:	or     dh,BYTE PTR [rdx-0x1]
  40510c:	or     eax,DWORD PTR [rax]
  40510e:	jo     0x405121
  405110:	add    al,0x7b
  405112:	rol    BYTE PTR [rax],cl
  405114:	add    BYTE PTR [rdx+rsi*2],al
  405117:	dec    DWORD PTR [rbx]
  405119:	add    BYTE PTR [rax+0x6f],dh
  40511c:	push   rbp
  40511d:	add    DWORD PTR [rax],eax
  40511f:	or     ah,BYTE PTR [rsi]
  405121:	add    bh,BYTE PTR [rbx-0x36]
  405124:	add    BYTE PTR [rax],al
  405126:	add    al,0x6f
  405128:	fild   WORD PTR [rax]
  40512a:	add    BYTE PTR [rdx],cl
  40512c:	or     BYTE PTR [rdi],dl
  40512e:	(bad)  
  40512f:	outs   dx,DWORD PTR ds:[rsi]
  405130:	loopne 0x405132
  405132:	add    BYTE PTR [rdx],cl
  405134:	jae    0x40510f
  405136:	add    BYTE PTR [rax],al
  405138:	or     cl,BYTE PTR [rip+0x626f0509]        # 0x62af5647
  40513e:	add    BYTE PTR [rax],al
  405140:	or     cl,BYTE PTR [rcx]
  405142:	(bad)  
  405143:	outs   dx,DWORD PTR ds:[rsi]
  405144:	rol    BYTE PTR [rax],cl
  405146:	add    BYTE PTR [rdx],cl
  405148:	or     DWORD PTR [rdi],edx
  40514a:	outs   dx,DWORD PTR ds:[rsi]
  40514b:	pop    rbp
  40514c:	add    DWORD PTR [rax],eax
  40514e:	or     cl,BYTE PTR [rcx]
  405150:	(bad)  
  405151:	sbb    dl,BYTE PTR [rsi]
  405153:	(bad)  
  405154:	adc    BYTE PTR [rbx+0x5c],dh
  405157:	add    BYTE PTR [rax],al
  405159:	or     ch,BYTE PTR [rdi+0x5d]
  40515c:	add    BYTE PTR [rax],al
  40515e:	or     cl,BYTE PTR [rcx]
  405160:	outs   dx,DWORD PTR ds:[rsi]
  405161:	in     al,0x0
  405163:	add    BYTE PTR [rdx],cl
  405165:	jb     0x405166
  405167:	or     eax,DWORD PTR [rax]
  405169:	jo     0x40517c
  40516b:	add    al,0x7b
  40516d:	rol    BYTE PTR [rax],cl
  40516f:	add    BYTE PTR [rdx+rsi*2],al
  405172:	dec    DWORD PTR [rbx]
  405174:	add    BYTE PTR [rax+0x6f],dh
  405177:	push   rbp
  405178:	add    DWORD PTR [rax],eax
  40517a:	or     ah,BYTE PTR [rsi]
  40517c:	add    bh,BYTE PTR [rbx-0x36]
  40517f:	add    BYTE PTR [rax],al
  405181:	add    al,0x6f
  405183:	fild   WORD PTR [rax]
  405185:	add    BYTE PTR [rdx],cl
  405187:	or     DWORD PTR [rdi],edx
  405189:	(bad)  
  40518a:	(bad)  
  40518b:	pop    rax
  40518c:	outs   dx,DWORD PTR ds:[rsi]
  40518d:	loopne 0x40518f
  40518f:	add    BYTE PTR [rdx],cl
  405191:	add    bh,BYTE PTR [rbx-0x36]
  405194:	add    BYTE PTR [rax],al
  405196:	add    al,0x25
  405198:	outs   dx,DWORD PTR ds:[rsi]
  405199:	rex.WXB add QWORD PTR [r8],rax
  40519c:	or     dl,BYTE PTR [rdi]
  40519e:	pop    rax
  40519f:	outs   dx,DWORD PTR ds:[rsi]
  4051a0:	push   rax
  4051a1:	add    DWORD PTR [rax],eax
  4051a3:	or     al,BYTE PTR [rdx]
  4051a5:	jnp    0x405171
  4051a7:	add    BYTE PTR [rax],al
  4051a9:	add    al,0x6f
  4051ab:	add    QWORD PTR [r8],r8
  4051ae:	or     dl,BYTE PTR [rdi]
  4051b0:	and    al,BYTE PTR [rax]
  4051b2:	add    BYTE PTR [rax+0x15e733f],al
  4051b8:	add    BYTE PTR [rdx],cl
  4051ba:	outs   dx,DWORD PTR ds:[rsi]
  4051bb:	push   rdx
  4051bc:	add    DWORD PTR [rax],eax
  4051be:	or     ah,BYTE PTR [rsi]
  4051c0:	sub    al,BYTE PTR [rax]
  4051c2:	add    BYTE PTR [rax],al
  4051c4:	sbb    esi,DWORD PTR [rax]
  4051c6:	(bad)  
  4051c7:	add    BYTE PTR [rcx],ah
  4051c9:	add    DWORD PTR [rax],eax
  4051cb:	add    BYTE PTR [rsi],bl
  4051cd:	add    BYTE PTR [rax],al
  4051cf:	adc    DWORD PTR [rdx],eax
  4051d1:	jnp    0x40519d
  4051d3:	add    BYTE PTR [rax],al
  4051d5:	add    al,0x6f
  4051d7:	rex.WXB add QWORD PTR [r8],rax
  4051da:	or     dl,BYTE PTR [rdi]
  4051dc:	pop    rcx
  4051dd:	(bad)  
  4051de:	sub    BYTE PTR [rcx+rax*1+0x0],cl
  4051e2:	or     cl,BYTE PTR [rdx]
  4051e4:	add    bh,BYTE PTR [rbx-0x36]
  4051e7:	add    BYTE PTR [rax],al
  4051e9:	add    al,0x6f
  4051eb:	add    QWORD PTR [r8],r8
  4051ee:	or     al,BYTE PTR [rsi]
  4051f0:	outs   dx,DWORD PTR ds:[rsi]
  4051f1:	rex.WRX add QWORD PTR [rax],r8
  4051f4:	or     dl,BYTE PTR [rsi]
  4051f6:	outs   dx,DWORD PTR ds:[rsi]
  4051f7:	rex.WRXB add QWORD PTR [r8],r8
  4051fa:	or     dh,BYTE PTR [rbx-0x27]
  4051fd:	add    BYTE PTR [rax],al
  4051ff:	or     cl,BYTE PTR [rbx]
  405201:	(bad)  
  405202:	add    ebp,DWORD PTR [rdi+0x62]
  405205:	add    BYTE PTR [rax],al
  405207:	or     al,BYTE PTR [rdi]
  405209:	add    bh,BYTE PTR [rbx-0x36]
  40520c:	add    BYTE PTR [rax],al
  40520e:	add    al,0x6f
  405210:	jge    0x405212
  405212:	add    BYTE PTR [rdx],cl
  405214:	outs   dx,DWORD PTR ds:[rsi]
  405215:	pop    rdi
  405216:	add    DWORD PTR [rax],eax
  405218:	or     al,BYTE PTR [rdx]
  40521a:	jnp    0x4051e6
  40521c:	add    BYTE PTR [rax],al
  40521e:	add    al,0x6f
  405220:	jge    0x405222
  405222:	add    BYTE PTR [rdx],cl
  405224:	outs   dx,DWORD PTR ds:[rsi]
  405225:	(bad)  
  405226:	add    DWORD PTR [rax],eax
  405228:	or     ah,BYTE PTR [rdx]
  40522a:	data16 data16 cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40522d:	(bad)  
  40522e:	pop    rdx
  40522f:	(bad)  
  405230:	jae    0x405293
  405232:	add    DWORD PTR [rax],eax
  405234:	or     ch,BYTE PTR [rdi+0x7f]
  405237:	add    BYTE PTR [rax],al
  405239:	or     al,BYTE PTR [rdi]
  40523b:	(bad)  
  40523c:	outs   dx,DWORD PTR ds:[rsi]
  40523d:	pop    rbp
  40523e:	add    DWORD PTR [rax],eax
  405240:	or     al,BYTE PTR [rdi]
  405242:	(bad)  
  405243:	outs   dx,DWORD PTR ds:[rsi]
  405244:	rol    BYTE PTR [rax],cl
  405246:	add    BYTE PTR [rdx],cl
  405248:	(bad)  
  405249:	(bad)  
  40524a:	sbb    dl,BYTE PTR [rsi]
  40524c:	(bad)  
  40524d:	jae    0x4052ab
  40524f:	add    BYTE PTR [rax],al
  405251:	or     ch,BYTE PTR [rdi+0x5d]
  405254:	add    BYTE PTR [rax],al
  405256:	or     al,BYTE PTR [rdx]
  405258:	jnp    0x405224
  40525a:	add    BYTE PTR [rax],al
  40525c:	add    al,0x6f
  40525e:	adc    al,0x1
  405260:	add    BYTE PTR [rdx],cl
  405262:	or     al,0x8
  405264:	add    eax,DWORD PTR [rdi]
  405266:	outs   dx,DWORD PTR ds:[rsi]
  405267:	jge    0x405269
  405269:	add    BYTE PTR [rdx],cl
  40526b:	sub    BYTE PTR [rsi],dl
  40526d:	add    DWORD PTR [rax],eax
  40526f:	or     cl,BYTE PTR [rip+0x28250312]        # 0x28655587
  405275:	(bad)  
  405276:	add    BYTE PTR [rax],al
  405278:	or     al,BYTE PTR [rdi]
  40527a:	outs   dx,DWORD PTR ds:[rsi]
  40527b:	push   rbx
  40527c:	add    BYTE PTR [rax],al
  40527e:	or     dl,BYTE PTR [rbx]
  405280:	add    al,0x12
  405282:	add    al,0x28
  405284:	push   rsi
  405285:	add    BYTE PTR [rax],al
  405287:	or     bl,BYTE PTR [rax+0x28]
  40528a:	(bad)  
  40528c:	add    BYTE PTR [rdx],cl
  40528e:	(bad)  
  40528f:	or     DWORD PTR [rdi+0x58],ebp
  405292:	add    BYTE PTR [rax],al
  405294:	or     bl,dh
  405296:	or     cl,BYTE PTR [rax]
  405298:	sub    al,0x6
  40529a:	or     BYTE PTR [rdi+0x1],ch
  40529d:	add    BYTE PTR [rax],al
  40529f:	or     bl,ah
  4052a1:	add    bh,BYTE PTR [rbx-0x36]
  4052a4:	add    BYTE PTR [rax],al
  4052a6:	add    al,0x6f
  4052a8:	fild   WORD PTR [rax]
  4052aa:	add    BYTE PTR [rdx],cl
  4052ac:	(bad)  
  4052ad:	(bad)  
  4052ae:	(bad)  
  4052af:	outs   dx,DWORD PTR ds:[rsi]
  4052b0:	loopne 0x4052b2
  4052b2:	add    BYTE PTR [rdx],cl
  4052b4:	add    bh,BYTE PTR [rbx-0x36]
  4052b7:	add    BYTE PTR [rax],al
  4052b9:	add    al,0x7
  4052bb:	sbb    BYTE PTR [rdi-0x1e],ch
  4052be:	add    BYTE PTR [rax],al
  4052c0:	or     al,BYTE PTR [rdx]
  4052c2:	jnp    0x40528e
  4052c4:	add    BYTE PTR [rax],al
  4052c6:	add    al,0x25
  4052c8:	outs   dx,DWORD PTR ds:[rsi]
  4052c9:	rex.WXB add QWORD PTR [r8],rax
  4052cc:	or     dl,BYTE PTR [rdi]
  4052ce:	pop    rax
  4052cf:	outs   dx,DWORD PTR ds:[rsi]
  4052d0:	push   rax
  4052d1:	add    DWORD PTR [rax],eax
  4052d3:	or     al,BYTE PTR [rdx]
  4052d5:	jnp    0x4052a1
  4052d7:	add    BYTE PTR [rax],al
  4052d9:	add    al,0x6f
  4052db:	add    QWORD PTR [r8],r8
  4052de:	or     dl,BYTE PTR [rdi]
  4052e0:	and    al,BYTE PTR [rax]
  4052e2:	add    BYTE PTR [rax+0x15e733f],al
  4052e8:	add    BYTE PTR [rdx],cl
  4052ea:	outs   dx,DWORD PTR ds:[rsi]
  4052eb:	push   rdx
  4052ec:	add    DWORD PTR [rax],eax
  4052ee:	or     ah,BYTE PTR [rsi]
  4052f0:	sub    al,BYTE PTR [rax]
  4052f2:	add    BYTE PTR [rax],al
  4052f4:	add    DWORD PTR [rax],edx
  4052f6:	add    BYTE PTR [rax],al
  4052f8:	add    al,BYTE PTR [rax]
  4052fa:	xchg   ebx,eax
  4052fb:	add    BYTE PTR [rdi+rax*8],dh
  4052fe:	add    BYTE PTR [rdx],cl
  405300:	add    BYTE PTR [rax],al
  405302:	add    BYTE PTR [rax],al
  405304:	jp     0x405309
  405306:	sub    al,0x13
  405308:	add    bh,BYTE PTR [rbx-0x37]
  40530b:	add    BYTE PTR [rax],al
  40530d:	add    al,0x2c
  40530f:	or     eax,DWORD PTR [rdx]
  405311:	jnp    0x4052dc
  405313:	add    BYTE PTR [rax],al
  405315:	add    al,0x6f
  405317:	add    DWORD PTR [rax],eax
  405319:	add    BYTE PTR [rdx],cl
  40531b:	add    al,BYTE PTR [rbx]
  40531d:	sub    dh,bl
  40531f:	add    BYTE PTR [rax],al
  405321:	(bad)  
  405322:	sub    al,BYTE PTR [rax]
  405324:	add    esi,DWORD PTR [rax]
  405326:	(bad)  
  405327:	add    al,dh
  405329:	add    BYTE PTR [rax],al
  40532b:	add    BYTE PTR [rax],al
  40532d:	add    BYTE PTR [rax],al
  40532f:	add    BYTE PTR [rdx],al
  405331:	jae    0x40530b
  405333:	add    BYTE PTR [rax],al
  405335:	or     bh,BYTE PTR [rbp-0x36]
  405338:	add    BYTE PTR [rax],al
  40533a:	add    al,0x2
  40533c:	jnp    0x405308
  40533e:	add    BYTE PTR [rax],al
  405340:	add    al,0x17
  405342:	outs   dx,DWORD PTR ds:[rsi]
  405343:	movsxd eax,DWORD PTR [rcx]
  405345:	add    BYTE PTR [rdx],cl
  405347:	add    bh,BYTE PTR [rbx-0x36]
  40534a:	add    BYTE PTR [rax],al
  40534c:	add    al,0x18
  40534e:	outs   dx,DWORD PTR ds:[rsi]
  40534f:	add    DWORD PTR fs:[rax],eax
  405352:	or     al,BYTE PTR [rdx]
  405354:	jnp    0x405320
  405356:	add    BYTE PTR [rax],al
  405358:	add    al,0x6f
  40535a:	add    DWORD PTR gs:[rax],eax
  40535d:	or     dh,BYTE PTR [rbx+0x66]
  405360:	add    DWORD PTR [rax],eax
  405362:	or     ch,BYTE PTR [rdi+0x67]
  405365:	add    DWORD PTR [rax],eax
  405367:	or     ah,BYTE PTR [rsi]
  405369:	add    bh,BYTE PTR [rbx-0x36]
  40536c:	add    BYTE PTR [rax],al
  40536e:	add    al,0x6f
  405370:	add    DWORD PTR gs:[rax],eax
  405373:	or     bl,BYTE PTR [rax]
  405375:	and    al,BYTE PTR [rax]
  405377:	add    al,cl
  405379:	rex.X jae 0x4053e4
  40537c:	add    DWORD PTR [rax],eax
  40537e:	or     ch,BYTE PTR [rdi+0x67]
  405381:	add    DWORD PTR [rax],eax
  405383:	or     ah,BYTE PTR [rsi]
  405385:	add    bh,BYTE PTR [rbx-0x36]
  405388:	add    BYTE PTR [rax],al
  40538a:	add    al,0x1b
  40538c:	outs   dx,DWORD PTR ds:[rsi]
  40538d:	pop    rcx
  40538e:	add    BYTE PTR [rax],al
  405390:	or     al,BYTE PTR [rdx]
  405392:	jnp    0x40535e
  405394:	add    BYTE PTR [rax],al
  405396:	add    al,0x16
  405398:	(bad)  
  405399:	jae    0x405404
  40539b:	add    DWORD PTR [rax],eax
  40539d:	or     ch,BYTE PTR [rdi+0x6a]
  4053a0:	add    DWORD PTR [rax],eax
  4053a2:	or     al,BYTE PTR [rdx]
  4053a4:	jnp    0x405370
  4053a6:	add    BYTE PTR [rax],al
  4053a8:	add    al,0x72
  4053aa:	adc    eax,0x6f700015
  4053af:	push   0x20a0000
  4053b4:	jnp    0x405380
  4053b6:	add    BYTE PTR [rax],al
  4053b8:	add    al,0x1e
  4053ba:	(bad)  
  4053bb:	(bad)  
  4053bc:	(bad)  
  4053bd:	adc    BYTE PTR [rbx+0x5c],dh
  4053c0:	add    BYTE PTR [rax],al
  4053c2:	or     ch,BYTE PTR [rdi+0x5d]
  4053c5:	add    BYTE PTR [rax],al
  4053c7:	or     al,BYTE PTR [rdx]
  4053c9:	jnp    0x405395
  4053cb:	add    BYTE PTR [rax],al
  4053cd:	add    al,0x17
  4053cf:	outs   dx,DWORD PTR ds:[rsi]
  4053d0:	push   rax
  4053d1:	add    DWORD PTR [rax],eax
  4053d3:	or     al,BYTE PTR [rdx]
  4053d5:	jnp    0x4053a1
  4053d7:	add    BYTE PTR [rax],al
  4053d9:	add    al,0x6f
  4053db:	add    QWORD PTR [r8],r8
  4053de:	or     bl,BYTE PTR [rax]
  4053e0:	and    al,BYTE PTR [rax]
  4053e2:	add    al,cl
  4053e4:	rex.X jae 0x405445
  4053e7:	add    DWORD PTR [rax],eax
  4053e9:	or     ch,BYTE PTR [rdi+0x52]
  4053ec:	add    DWORD PTR [rax],eax
  4053ee:	or     ah,BYTE PTR [rsi]
  4053f0:	add    bh,BYTE PTR [rbx-0x36]
  4053f3:	add    BYTE PTR [rax],al
  4053f5:	add    al,0x20
  4053f7:	enter  0x0,0x0
  4053fb:	(bad)  
  4053fc:	fs jae 0x405456
  4053ff:	add    BYTE PTR [rax],al
  405401:	or     ch,BYTE PTR [rdi+0x58]
  405404:	add    BYTE PTR [rax],al
  405406:	or     al,BYTE PTR [rdx]
  405408:	jnp    0x4053d4
  40540a:	add    BYTE PTR [rax],al
  40540c:	add    al,0x16
  40540e:	outs   dx,DWORD PTR ds:[rsi]
  40540f:	imul   eax,DWORD PTR [rcx],0x0
  405412:	or     al,BYTE PTR [rdx]
  405414:	jnp    0x4053e0
  405416:	add    BYTE PTR [rax],al
  405418:	add    al,0x17
  40541a:	outs   dx,DWORD PTR ds:[rsi]
  40541b:	imul   eax,DWORD PTR [rax],0x1b2a0a00
  405421:	xor    BYTE PTR [rcx],al
  405423:	add    BYTE PTR [rbx],bl
  405425:	add    BYTE PTR [rax],al
  405427:	add    BYTE PTR [rdi],bl
  405429:	add    BYTE PTR [rax],al
  40542b:	adc    DWORD PTR [rbx+0x33],esi
  40542e:	add    DWORD PTR [rax],eax
  405430:	(bad)  
  405431:	or     al,BYTE PTR [rsi]
  405433:	outs   dx,DWORD PTR ds:[rsi]
  405434:	xor    eax,0xb060001
  405439:	fimul  WORD PTR [rdx]
  40543b:	(bad)  
  40543c:	sub    al,0x6
  40543e:	(bad)  
  40543f:	outs   dx,DWORD PTR ds:[rsi]
  405440:	add    DWORD PTR [rax],eax
  405442:	add    BYTE PTR [rdx],cl
  405444:	fadd   QWORD PTR [rdi]
  405446:	sub    al,BYTE PTR [rax]
  405448:	add    DWORD PTR [rax],edx
  40544a:	add    BYTE PTR [rax],al
  40544c:	add    al,BYTE PTR [rax]
  40544e:	(bad)  
  40544f:	add    BYTE PTR [rcx],cl
  405451:	str    WORD PTR [rdx]
  405454:	add    BYTE PTR [rax],al
  405456:	add    BYTE PTR [rax],al
  405458:	rex.WX add dil,BYTE PTR [rbx-0x32]
  40545c:	add    BYTE PTR [rax],al
  40545e:	add    al,0x6f
  405460:	ins    BYTE PTR es:[rdi],dx
  405461:	add    DWORD PTR [rax],eax
  405463:	or     ah,BYTE PTR [rsi]
  405465:	jae    0x405448
  405467:	add    BYTE PTR [rax],al
  405469:	(bad)  
  40546a:	sub    al,BYTE PTR [rax]
  40546c:	adc    esi,DWORD PTR [rax]
  40546e:	add    eax,0x8300
  405473:	add    BYTE PTR [rax],ah
  405475:	add    BYTE PTR [rax],al
  405477:	adc    DWORD PTR [rdx+rcx*1],edx
  40547a:	add    dl,al
  40547c:	and    eax,DWORD PTR [rax]
  40547e:	add    BYTE PTR [rdx],al
  405480:	sub    BYTE PTR [rdi],dl
  405482:	add    BYTE PTR [rax],al
  405484:	or     ch,BYTE PTR [rdi+0x6d]
  405487:	add    DWORD PTR [rax],eax
  405489:	or     bh,BYTE PTR [rbp-0x34]
  40548c:	add    BYTE PTR [rax],al
  40548e:	add    al,0x2
  405490:	jae    0x405500
  405492:	add    DWORD PTR [rax],eax
  405494:	or     bh,BYTE PTR [rbp-0x31]
  405497:	add    BYTE PTR [rax],al
  405499:	add    al,0x2
  40549b:	sub    BYTE PTR [rbx],dl
  40549d:	add    BYTE PTR [rax],al
  40549f:	or     al,BYTE PTR [rdx]
  4054a1:	jnp    0x405472
  4054a3:	add    BYTE PTR [rax],al
  4054a5:	add    al,0x72
  4054a7:	(bad)  
  4054a8:	adc    eax,0xfe027000
  4054ad:	(bad)  
  4054ae:	add    DWORD PTR ss:[rax],eax
  4054b1:	(bad)  
  4054b2:	jae    0x4054f4
  4054b4:	add    DWORD PTR [rax],eax
  4054b6:	(bad)  
  4054b7:	outs   dx,DWORD PTR ds:[rsi]
  4054b8:	outs   dx,DWORD PTR ds:[rsi]
  4054b9:	add    DWORD PTR [rax],eax
  4054bb:	or     al,BYTE PTR [rdx]
  4054bd:	jnp    0x40548e
  4054bf:	add    BYTE PTR [rax],al
  4054c1:	add    al,0x72
  4054c3:	cmp    DWORD PTR [rip+0x2d067000],edx        # 0x2d46c4c9
  4054c9:	or     eax,0x3f06fe02
  4054ce:	add    DWORD PTR [rax],eax
  4054d0:	(bad)  
  4054d1:	jae    0x405513
  4054d3:	add    DWORD PTR [rax],eax
  4054d5:	(bad)  
  4054d6:	or     al,BYTE PTR [rsi]
  4054d8:	outs   dx,DWORD PTR ds:[rsi]
  4054d9:	outs   dx,DWORD PTR ds:[rsi]
  4054da:	add    DWORD PTR [rax],eax
  4054dc:	or     al,BYTE PTR [rdx]
  4054de:	add    ch,BYTE PTR [rax]
  4054e0:	add    DWORD PTR ds:[rax],eax
  4054e3:	(bad)  
  4054e4:	jge    0x4054b3
  4054e6:	add    BYTE PTR [rax],al
  4054e8:	add    al,0x2
  4054ea:	add    bh,BYTE PTR [rbx-0x33]
  4054ed:	add    BYTE PTR [rax],al
  4054ef:	add    al,0x73
  4054f1:	jo     0x4054f4
  4054f3:	add    BYTE PTR [rdx],cl
  4054f5:	jge    0x4054c5
  4054f7:	add    BYTE PTR [rax],al
  4054f9:	add    al,0x2a
  4054fb:	sahf   
  4054fc:	add    bh,BYTE PTR [rbx-0x32]
  4054ff:	add    BYTE PTR [rax],al
  405501:	add    al,0x2c
  405503:	or     eax,DWORD PTR [rdx]
  405505:	jnp    0x4054d5
  405507:	add    BYTE PTR [rax],al
  405509:	add    al,0x6f
  40550b:	jno    0x40550e
  40550d:	add    BYTE PTR [rdx],cl
  40550f:	add    bh,BYTE PTR [rbx-0x33]
  405512:	add    BYTE PTR [rax],al
  405514:	add    al,0x2c
  405516:	or     eax,DWORD PTR [rdx]
  405518:	jnp    0x4054e7
  40551a:	add    BYTE PTR [rax],al
  40551c:	add    al,0x6f
  40551e:	jb     0x405521
  405520:	add    BYTE PTR [rdx],cl
  405522:	sub    al,BYTE PTR [rax]
  405524:	adc    esi,DWORD PTR [rax]
  405526:	add    al,0x0
  405528:	(bad)  
  405529:	add    BYTE PTR [rax],al
  40552b:	add    BYTE PTR [rcx],ah
  40552d:	add    BYTE PTR [rax],al
  40552f:	adc    DWORD PTR [rbx+0x73],esi
  405532:	add    DWORD PTR [rax],eax
  405534:	or     cl,BYTE PTR [rdx]
  405536:	cmp    BYTE PTR [rcx+0x2000000],bh
  40553c:	jnp    0x40550c
  40553e:	add    BYTE PTR [rax],al
  405540:	add    al,0x6f
  405542:	je     0x405545
  405544:	add    BYTE PTR [rdx],cl
  405546:	(bad)  
  405547:	test   al,0x0
  40554a:	add    BYTE PTR [rax],al
  40554c:	add    bh,BYTE PTR [rbx-0x32]
  40554f:	add    BYTE PTR [rax],al
  405551:	add    al,0x6f
  405553:	jne    0x405556
  405555:	add    BYTE PTR [rdx],cl
  405557:	jb     0x4055a6
  405559:	adc    eax,0xc2287000
  40555e:	add    BYTE PTR [rax],al
  405560:	or     bh,BYTE PTR [rcx]
  405562:	mov    es,WORD PTR [rax]
  405564:	add    BYTE PTR [rax],al
  405566:	add    al,BYTE PTR [rdx]
  405568:	jb     0x4055c3
  40556a:	adc    eax,0x3d287000
  40556f:	add    DWORD PTR [rax],eax
  405571:	(bad)  
  405572:	jge    0x405545
  405574:	add    BYTE PTR [rax],al
  405576:	add    al,0x2
  405578:	add    dh,BYTE PTR [rdx+0x79]
  40557b:	adc    eax,0x3d287000
  405580:	add    DWORD PTR [rax],eax
  405582:	(bad)  
  405583:	jge    0x405555
  405585:	add    BYTE PTR [rax],al
  405587:	add    al,0x2b
  405589:	push   rax
  40558a:	add    bh,BYTE PTR [rbx-0x32]
  40558d:	add    BYTE PTR [rax],al
  40558f:	add    al,0x6f
  405591:	je     0x405594
  405593:	add    BYTE PTR [rdx],cl
  405595:	(bad)  
  405596:	xor    eax,DWORD PTR [rdx+0x2]
  405599:	jnp    0x405569
  40559b:	add    BYTE PTR [rax],al
  40559d:	add    al,0x6f
  40559f:	jne    0x4055a2
  4055a1:	add    BYTE PTR [rdx],cl
  4055a3:	jb     0x40554a
  4055a5:	adc    eax,0x76287000
  4055aa:	add    DWORD PTR [rax],eax
  4055ac:	or     ch,BYTE PTR [rip+0x7b02062b]        # 0x7b425bdd
  4055b2:	iret   
  4055b3:	add    BYTE PTR [rax],al
  4055b5:	add    al,0x2
  4055b7:	jnp    0x405587
  4055b9:	add    BYTE PTR [rax],al
  4055bb:	add    al,0x72
  4055bd:	scas   eax,DWORD PTR es:[rdi]
  4055be:	adc    eax,0x776f7000
  4055c3:	add    DWORD PTR [rax],eax
  4055c5:	or     ch,BYTE PTR [rdi+0x78]
  4055c8:	add    DWORD PTR [rax],eax
  4055ca:	or     ch,BYTE PTR [rdi+0x79]
  4055cd:	add    DWORD PTR [rax],eax
  4055cf:	or     ch,BYTE PTR [rdi+0x41]
  4055d2:	add    DWORD PTR [rax],eax
  4055d4:	(bad)  
  4055d5:	outs   dx,DWORD PTR ds:[rsi]
  4055d6:	jp     0x4055d9
  4055d8:	add    BYTE PTR [rdx],cl
  4055da:	add    bh,BYTE PTR [rbx-0x32]
  4055dd:	add    BYTE PTR [rax],al
  4055df:	add    al,0x6f
  4055e1:	jnp    0x4055e4
  4055e3:	add    BYTE PTR [rdx],cl
  4055e5:	sub    al,0xd
  4055e7:	add    dh,BYTE PTR [rdx+0x4d]
  4055ea:	adc    eax,0x3c287000
  4055ef:	add    DWORD PTR [rax],eax
  4055f1:	(bad)  
  4055f2:	sub    al,0x96
  4055f4:	add    bh,BYTE PTR [rbx-0x32]
  4055f7:	add    BYTE PTR [rax],al
  4055f9:	add    al,0x6f
  4055fb:	jnp    0x4055fe
  4055fd:	add    BYTE PTR [rdx],cl
  4055ff:	cmp    dh,BYTE PTR [rdi]
  405601:	(bad)  
  405602:	(bad)  
  405603:	inc    DWORD PTR [rsi]
  405605:	sub    al,BYTE PTR [rax]
  405607:	add    BYTE PTR [rbx],dl
  405609:	xor    BYTE PTR [rdx],al
  40560b:	add    BYTE PTR [rax+0x22000000],cl
  405611:	add    BYTE PTR [rax],al
  405613:	adc    DWORD PTR [rbx+0x2a],esi
  405616:	add    DWORD PTR [rax],eax
  405618:	(bad)  
  405619:	or     ch,BYTE PTR [rbx]
  40561b:	add    bh,BYTE PTR fs:[rbx-0x32]
  40561f:	add    BYTE PTR [rax],al
  405621:	add    al,0x6f
  405623:	je     0x405626
  405625:	add    BYTE PTR [rdx],cl
  405627:	(bad)  
  405628:	xor    edx,DWORD PTR [rsi+0x2]
  40562b:	jnp    0x4055fb
  40562d:	add    BYTE PTR [rax],al
  40562f:	add    al,0x6f
  405631:	jne    0x405634
  405633:	add    BYTE PTR [rdx],cl
  405635:	and    eax,0x7472c0b
  40563a:	jb     0x40566b
  40563c:	add    BYTE PTR [rax],al
  40563e:	jo     0x405668
  405640:	ret    0x0
  405643:	or     ch,BYTE PTR [rip+0xffffffffb972071c]        # 0xffffffffb9b25d65
  405649:	adc    eax,0xc2287000
  40564e:	add    BYTE PTR [rax],al
  405650:	or     ch,BYTE PTR [rip+0xffffffffc772071d]        # 0xffffffffc7b25d73
  405656:	adc    eax,0xc2287000
  40565b:	add    BYTE PTR [rax],al
  40565d:	or     ch,BYTE PTR [rip+0x61e2b19]        # 0x65e817c
  405663:	add    ch,BYTE PTR [rax]
  405665:	cmp    al,BYTE PTR [rcx]
  405667:	add    BYTE PTR [rsi],al
  405669:	outs   dx,DWORD PTR ds:[rsi]
  40566a:	fld    DWORD PTR [rax]
  40566c:	add    BYTE PTR [rsi],al
  40566e:	sub    edx,DWORD PTR [rax]
  405670:	add    al,BYTE PTR [rsi]
  405672:	sub    BYTE PTR [rdi],dh
  405674:	add    DWORD PTR [rax],eax
  405676:	(bad)  
  405677:	sub    eax,DWORD PTR [rdi]
  405679:	add    al,BYTE PTR [rsi]
  40567b:	sub    BYTE PTR [rax],bh
  40567d:	add    DWORD PTR [rax],eax
  40567f:	(bad)  
  405680:	add    bh,BYTE PTR [rbx-0x32]
  405683:	add    BYTE PTR [rax],al
  405685:	add    al,0x6f
  405687:	jnp    0x40568a
  405689:	add    BYTE PTR [rdx],cl
  40568b:	sub    al,0xd
  40568d:	add    dh,BYTE PTR [rdx-0x5b]
  405690:	adc    eax,0x3c287000
  405695:	add    DWORD PTR [rax],eax
  405697:	(bad)  
  405698:	sub    al,0x82
  40569a:	(bad)  
  40569b:	sub    dh,BYTE PTR [rsi]
  40569d:	add    eax,DWORD PTR [rdx]
  40569f:	sub    BYTE PTR [rdx],bh
  4056a1:	add    DWORD PTR [rax],eax
  4056a3:	(bad)  
  4056a4:	outs   dx,DWORD PTR ds:[rsi]
  4056a5:	(bad)  
  4056a6:	add    DWORD PTR [rax],eax
  4056a8:	(bad)  
  4056a9:	sub    al,BYTE PTR [rax]
  4056ab:	add    BYTE PTR [rbx],dl
  4056ad:	xor    BYTE PTR [rip+0xb800],al        # 0x410eb3
  4056b3:	add    BYTE PTR [rbx],ah
  4056b5:	add    BYTE PTR [rax],al
  4056b7:	adc    DWORD PTR [rsi+0x37],edi
  4056ba:	add    BYTE PTR [rax],al
  4056bc:	or     cl,BYTE PTR [rdx]
  4056be:	jle    0x4056f7
  4056c0:	add    BYTE PTR [rax],al
  4056c2:	or     cl,BYTE PTR [rbx]
  4056c4:	adc    al,0xc
  4056c6:	jle    0x405728
  4056c8:	add    BYTE PTR [rax],al
  4056ca:	add    al,0xd
  4056cc:	sub    edi,DWORD PTR [rdx+0x2]
  4056cf:	jnp    0x40569f
  4056d1:	add    BYTE PTR [rax],al
  4056d3:	add    al,0x6f
  4056d5:	je     0x4056d8
  4056d7:	add    BYTE PTR [rdx],cl
  4056d9:	(bad)  
  4056da:	xor    ebp,DWORD PTR [rdx+rax*1+0x7b]
  4056de:	(bad)  
  4056df:	add    BYTE PTR [rax],al
  4056e1:	add    al,0x6f
  4056e3:	jne    0x4056e6
  4056e5:	add    BYTE PTR [rdx],cl
  4056e7:	and    eax,0x5c2c0413
  4056ec:	adc    DWORD PTR [rdx+rsi*2],eax
  4056ef:	(bad)  
  4056f0:	add    BYTE PTR [rax],al
  4056f2:	jo     0x40571c
  4056f4:	ret    0x0
  4056f7:	or     ch,BYTE PTR [rip+0x7204112c]        # 0x72446829
  4056fd:	rcl    DWORD PTR [rip+0xffffffffc2287000],1        # 0xffffffffc268c703
  405703:	add    BYTE PTR [rax],al
  405705:	or     ch,BYTE PTR [rip+0x72041127]        # 0x72446832
  40570b:	jmp    0x28b05725
  405710:	ret    0x0
  405713:	or     ch,BYTE PTR [rip+0x72041122]        # 0x7244683b
  405719:	repz adc eax,0xc2287000
  40571f:	add    BYTE PTR [rax],al
  405721:	or     ch,BYTE PTR [rip+0x2222b1d]        # 0x2628244
  405727:	sub    BYTE PTR [rdx],bh
  405729:	add    DWORD PTR [rax],eax
  40572b:	(bad)  
  40572c:	or     ch,BYTE PTR [rbx]
  40572e:	sbb    DWORD PTR [rdx],eax
  405730:	sub    BYTE PTR [rdx],bh
  405732:	add    DWORD PTR [rax],eax
  405734:	(bad)  
  405735:	or     ebp,DWORD PTR [rbx]
  405737:	adc    BYTE PTR [rdx],al
  405739:	sub    BYTE PTR [rbx],bh
  40573b:	add    DWORD PTR [rax],eax
  40573d:	(bad)  
  40573e:	or     al,0x2b
  405740:	(bad)  
  405741:	add    ch,BYTE PTR [rax]
  405743:	cmp    DWORD PTR [rcx],eax
  405745:	add    BYTE PTR [rsi],al
  405747:	or     eax,0xce7b02
  40574c:	add    BYTE PTR [rdi+rbp*2],al
  40574f:	jnp    0x405752
  405751:	add    BYTE PTR [rdx],cl
  405753:	sub    al,0x10
  405755:	add    dh,BYTE PTR [rdx-0x39]
  405758:	adc    eax,0x3c287000
  40575d:	add    DWORD PTR [rax],eax
  40575f:	(bad)  
  405760:	cmp    DWORD PTR [rcx-0x1],ebp
  405763:	(bad)  
  405764:	inc    DWORD PTR [rbx]
  405766:	or     BYTE PTR [rsi],al
  405768:	(bad)  
  405769:	or     DWORD PTR [rdi+0x2d],ebp
  40576c:	add    DWORD PTR [rax],eax
  40576e:	(bad)  
  40576f:	sub    dl,BYTE PTR [rbx]
  405771:	xor    BYTE PTR [rip+0xa200],al        # 0x40f977
  405777:	add    BYTE PTR [rax+rax*1],ah
  40577a:	add    BYTE PTR [rcx],dl
  40577c:	add    bh,BYTE PTR [rbx-0x32]
  40577f:	add    BYTE PTR [rax],al
  405781:	add    al,0x72
  405783:	scas   eax,DWORD PTR es:[rdi]
  405784:	adc    eax,0x776f7000
  405789:	add    DWORD PTR [rax],eax
  40578b:	or     ch,BYTE PTR [rdi+0x78]
  40578e:	add    DWORD PTR [rax],eax
  405790:	or     cl,BYTE PTR [rdx]
  405792:	(bad)  
  405793:	sub    BYTE PTR [rbp+0x2c0a0000],al
  405799:	(bad)  
  40579a:	jle    0x4057fc
  40579c:	add    BYTE PTR [rax],al
  40579e:	add    al,0x2a
  4057a0:	add    bh,BYTE PTR [rbx-0x34]
  4057a3:	add    BYTE PTR [rax],al
  4057a5:	add    al,0x72
  4057a7:	add    edx,DWORD PTR [rsi]
  4057a9:	add    BYTE PTR [rax+0x6],dh
  4057ac:	sub    BYTE PTR [rdx+0x1],al
  4057af:	add    BYTE PTR [rdx],cl
  4057b1:	sub    BYTE PTR [rcx+rax*1+0x0],bh
  4057b5:	or     cl,BYTE PTR [rbx]
  4057b7:	(bad)  
  4057b8:	sub    BYTE PTR [rbp+0x1],bh
  4057bb:	add    BYTE PTR [rdx],cl
  4057bd:	je     0x4057c5
  4057bf:	add    BYTE PTR [rax],al
  4057c1:	add    cl,BYTE PTR [rbx+rbp*1]
  4057c4:	cmp    eax,0xce7b02
  4057c9:	add    BYTE PTR [rdi+rbp*2],al
  4057cc:	je     0x4057cf
  4057ce:	add    BYTE PTR [rdx],cl
  4057d0:	(bad)  
  4057d1:	xor    ebp,DWORD PTR [rdi]
  4057d3:	(bad)  
  4057d4:	add    bh,BYTE PTR [rbx-0x32]
  4057d7:	add    BYTE PTR [rax],al
  4057d9:	add    al,0x6f
  4057db:	jne    0x4057de
  4057dd:	add    BYTE PTR [rdx],cl
  4057df:	outs   dx,DWORD PTR ds:[rsi]
  4057e0:	jle    0x4057e3
  4057e2:	add    BYTE PTR [rdx],cl
  4057e4:	or     eax,0x91a2c09
  4057e9:	or     BYTE PTR [rdx],al
  4057eb:	jnp    0x4057bb
  4057ed:	add    BYTE PTR [rax],al
  4057ef:	add    al,0x9
  4057f1:	outs   dx,DWORD PTR ds:[rsi]
  4057f2:	jg     0x4057f5
  4057f4:	add    BYTE PTR [rdx],cl
  4057f6:	adc    al,0x6f
  4057f8:	add    BYTE PTR [rcx],0x0
  4057fb:	or     dl,BYTE PTR [rdi+rbp*2]
  4057fe:	add    DWORD PTR [rcx],0x7b020a00
  405804:	(bad)  
  405805:	add    BYTE PTR [rax],al
  405807:	add    al,0x6f
  405809:	jnp    0x40580c
  40580b:	add    BYTE PTR [rdx],cl
  40580d:	sub    al,0xd
  40580f:	add    dh,BYTE PTR [rdx-0xd]
  405812:	adc    eax,0x3c287000
  405817:	add    DWORD PTR [rax],eax
  405819:	(bad)  
  40581a:	sub    al,0xa9
  40581c:	or     BYTE PTR [rdx],ch
  40581e:	add    BYTE PTR [rax],al
  405820:	adc    esi,DWORD PTR [rax]
  405822:	add    eax,DWORD PTR [rax]
  405824:	(bad)  
  405825:	add    BYTE PTR [rax],al
  405827:	add    BYTE PTR [rip+0x2110000],ah        # 0x251582d
  40582d:	jnp    0x4057fd
  40582f:	add    BYTE PTR [rax],al
  405831:	add    al,0x72
  405833:	(bad)  
  405834:	(bad)  
  405835:	add    BYTE PTR [rax+0x6f],dh
  405838:	ja     0x40583b
  40583a:	add    BYTE PTR [rdx],cl
  40583c:	or     al,BYTE PTR [rsi]
  40583e:	sub    BYTE PTR [rbp+0x2d0a0000],al
  405844:	sbb    al,BYTE PTR [rdx]
  405846:	jnp    0x405818
  405848:	add    BYTE PTR [rax],al
  40584a:	add    al,0x2c
  40584c:	adc    al,BYTE PTR [rdx]
  40584e:	jnp    0x405820
  405850:	add    BYTE PTR [rax],al
  405852:	add    al,0x6
  405854:	sub    BYTE PTR [rdx+0x6f0a0001],al
  40585a:	adc    al,0x0
  40585c:	add    BYTE PTR [rdx],cl
  40585e:	sub    al,BYTE PTR [rdx]
  405860:	jnp    0x405830
  405862:	add    BYTE PTR [rax],al
  405864:	add    al,0x6f
  405866:	add    DWORD PTR [rcx],0x0
  405869:	or     ch,BYTE PTR [rdx]
  40586b:	scas   al,BYTE PTR es:[rdi]
  40586c:	add    bh,BYTE PTR [rbx-0x2f]
  40586f:	add    BYTE PTR [rax],al
  405871:	add    al,0x2d
  405873:	add    dl,BYTE PTR [rdx+rbp*1]
  405876:	add    bh,BYTE PTR [rbx-0x2f]
  405879:	add    BYTE PTR [rax],al
  40587b:	add    al,0x2
  40587d:	jnp    0x40584d
  40587f:	add    BYTE PTR [rax],al
  405881:	add    al,0x6f
  405883:	add    DWORD PTR [rcx],0x0
  405886:	or     ch,BYTE PTR [rax]
  405888:	(bad)  
  405889:	add    DWORD PTR [rax],eax
  40588b:	or     ch,BYTE PTR [rdi+0x3f]
  40588e:	add    DWORD PTR [rax],eax
  405890:	or     dh,BYTE PTR [rax+rdi*1+0x0]
  405894:	add    BYTE PTR [rcx],al
  405896:	sub    cl,BYTE PTR [rsi+0xce7b02]
  40589c:	add    BYTE PTR [rdi+rbp*2],al
  40589f:	je     0x4058a2
  4058a1:	add    BYTE PTR [rdx],cl
  4058a3:	(bad)  
  4058a4:	rdpmc  
  4058a6:	adc    al,BYTE PTR [rdx]
  4058a8:	jnp    0x405878
  4058aa:	add    BYTE PTR [rax],al
  4058ac:	add    al,0x6f
  4058ae:	jne    0x4058b1
  4058b0:	add    BYTE PTR [rdx],cl
  4058b2:	add    ebp,DWORD PTR [rax]
  4058b4:	ret    0x0
  4058b7:	or     ch,BYTE PTR [rdx]
  4058b9:	(bad)  
  4058ba:	sub    al,BYTE PTR [rax]
  4058bc:	adc    esi,DWORD PTR [rax]
  4058be:	add    al,BYTE PTR [rax]
  4058c0:	and    eax,DWORD PTR [rax]
  4058c2:	add    BYTE PTR [rax],al
  4058c4:	and    eax,0x2110000
  4058c9:	jnp    0x405899
  4058cb:	add    BYTE PTR [rax],al
  4058cd:	add    al,0x3
  4058cf:	outs   dx,DWORD PTR ds:[rsi]
  4058d0:	ja     0x4058d3
  4058d2:	add    BYTE PTR [rdx],cl
  4058d4:	or     al,BYTE PTR [rsi]
  4058d6:	sub    BYTE PTR [rbp+0x2c0a0000],al
  4058dc:	add    dl,BYTE PTR [rdx+rbp*1]
  4058df:	(bad)  
  4058e0:	sub    BYTE PTR [rcx+rax*1+0x0],bh
  4058e4:	or     dh,BYTE PTR [rbx-0x7c]
  4058e7:	add    DWORD PTR [rax],eax
  4058e9:	or     ch,BYTE PTR [rdx]
  4058eb:	rex.X sub BYTE PTR [rbx],dil
  4058ee:	add    BYTE PTR [rax],al
  4058f0:	or     dh,BYTE PTR [rdx+0x1d]
  4058f3:	(bad)  
  4058f4:	add    BYTE PTR [rax+0x6f],dh
  4058f7:	test   DWORD PTR [rcx],eax
  4058f9:	add    BYTE PTR [rdx],cl
  4058fb:	sub    al,BYTE PTR [rax]
  4058fd:	add    BYTE PTR [rax],al
  4058ff:	add    BYTE PTR [rdx-0x31ffffdf],bh
  405905:	retf   0xbeef
  405908:	add    DWORD PTR [rax],eax
  40590a:	add    BYTE PTR [rax],al
  40590c:	xchg   ecx,eax
  40590d:	add    BYTE PTR [rax],al
  40590f:	add    BYTE PTR [rbx+rdx*2+0x79],ch
  405913:	jae    0x405989
  405915:	gs ins DWORD PTR es:[rdi],dx
  405917:	cs push rdx
  405919:	gs jae 0x40598b
  40591c:	jne    0x405990
  40591e:	movsxd esp,DWORD PTR [rbp+0x73]
  405921:	cs push rdx
  405923:	gs jae 0x405995
  405926:	jne    0x40599a
  405928:	movsxd esp,DWORD PTR [rbp+0x52]
  40592b:	gs (bad) 
  40592d:	fs gs jb 0x40595d
  405931:	and    BYTE PTR [rbp+0x73],ch
  405934:	movsxd ebp,DWORD PTR [rdi+0x72]
  405937:	ins    BYTE PTR es:[rdi],dx
  405938:	imul   esp,DWORD PTR [rdx+0x2c],0x72655620
  40593f:	jae    0x4059aa
  405941:	outs   dx,DWORD PTR ds:[rsi]
  405942:	outs   dx,BYTE PTR ds:[rsi]
  405943:	cmp    eax,0x2e302e32
  405948:	xor    BYTE PTR [rsi],ch
  40594a:	xor    BYTE PTR [rax+riz*1],ch
  40594d:	rex.XB jne 0x4059bc
  405950:	je     0x4059c7
  405952:	jb     0x4059b9
  405954:	cmp    eax,0x7475656e
  405959:	jb     0x4059bc
  40595b:	ins    BYTE PTR es:[rdi],dx
  40595c:	sub    al,0x20
  40595e:	push   rax
  40595f:	jne    0x4059c3
  405961:	ins    BYTE PTR es:[rdi],dx
  405962:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  405969:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40596d:	(bad)  
  40596e:	(bad)  
  40596f:	(bad)  
  405970:	(bad)  
  405971:	xor    eax,0x31363563
  405976:	cmp    DWORD PTR [rbx],esi
  405978:	xor    al,0x65
  40597a:	xor    BYTE PTR [rax],bh
  40597c:	cmp    DWORD PTR [rbx],esp
  40597e:	push   rbx
  40597f:	jns    0x4059f4
  405981:	je     0x4059e8
  405983:	ins    DWORD PTR es:[rdi],dx
  405984:	cs push rdx
  405986:	gs jae 0x4059f8
  405989:	jne    0x4059fd
  40598b:	movsxd esp,DWORD PTR [rbp+0x73]
  40598e:	cs push rdx
  405990:	jne    0x405a00
  405992:	je     0x4059fd
  405994:	ins    DWORD PTR es:[rdi],dx
  405995:	gs push rdx
  405997:	gs jae 0x405a09
  40599a:	jne    0x405a0e
  40599c:	movsxd esp,DWORD PTR [rbp+0x53]
  40599f:	gs je  0x4059a4
  4059a2:	add    BYTE PTR [rax],al
  4059a4:	add    BYTE PTR [rdi+0x0],cl
  4059a7:	add    BYTE PTR [rax],al
  4059a9:	add    BYTE PTR [rax],al
  4059ab:	add    BYTE PTR [rax],al
  4059ad:	push   rax
  4059ae:	rex.B
  4059af:	rex.R push rax
  4059b1:	rex.B
  4059b2:	rex.R push rax
  4059b4:	loop   0x405968
  4059b6:	(bad)  
  4059b7:	mov    ss,WORD PTR [rdx-0x7e6f470e]
  4059bd:	out    0xde,al
  4059bf:	nop
  4059c0:	scas   al,BYTE PTR es:[rdi]
  4059c1:	out    dx,eax
  4059c2:	ins    DWORD PTR es:[rdi],dx
  4059c3:	xchg   edx,eax
  4059c4:	mov    ch,0x17
  4059c6:	or     edx,DWORD PTR [rbx-0x6072dfb2]
  4059cc:	shl    BYTE PTR [rdi+0x7d],cl
  4059cf:	movabs al,ds:0xa46f16f1a2160926
  4059d8:	rex.WB (bad) 
  4059da:	ins    DWORD PTR es:[rdi],dx
  4059db:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  4059dc:	xor    ah,BYTE PTR fs:[rdi-0x59]
  4059e0:	mov    tr0,edx
  4059e3:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4059e4:	(bad)  
  4059e5:	cwde   
  4059e6:	mov    ecx,0x362fa4a8
  4059eb:	scas   al,BYTE PTR es:[rdi]
  4059ec:	movsxd ebp,ebp
  4059ee:	mov    WORD PTR [rdi-0x4c8cbf75],gs
  4059f4:	pushf  
  4059f5:	sbb    eax,DWORD PTR [rsi]
  4059f7:	mov    ch,0xf1
  4059f9:	cmp    eax,0xd7a0b533
  4059fe:	nop
  4059ff:	mov    bh,0xe2
  405a01:	mov    ebx,0x3aabf35
  405a06:	es (bad) 
  405a08:	fcomp  DWORD PTR [rdx+rcx*2+0x732928c4]
  405a0f:	(bad)  
  405a10:	jo     0x405a31
  405a12:	add    dl,cl
  405a14:	ins    DWORD PTR es:[rdi],dx
  405a15:	jl     0x405a1e
  405a17:	int3   
  405a18:	or     DWORD PTR [rdx+riz*1-0x3cf2a533],0xa5a69ad3
  405a23:	(bad)  
  405a24:	(bad)  
  405a25:	(bad)  
  405a26:	movabs eax,ds:0x7bf561dd89c2ebdb
  405a2f:	in     al,0x28
  405a31:	push   rcx
  405a32:	fs in  eax,0xf
  405a35:	idiv   eax
  405a37:	in     eax,0x90
  405a39:	cld    
  405a3a:	rex.RXB jmp 0xffffffffeb5f9aa2
  405a40:	rex.X mov al,BYTE PTR [rdi-0x15]
  405a44:	mov    esi,0x86ef3453
  405a49:	(bad)  
  405a4a:	add    ecx,edi
  405a4c:	sub    DWORD PTR [rcx-0x2a],esp
  405a4f:	std    
  405a50:	cs cmp bh,dl
  405a53:	add    bh,cl
  405a55:	jrcxz  0x405a5f
  405a57:	add    eax,0x623d930
  405a5c:	adc    esp,esi
  405a5e:	xor    al,0x6
  405a60:	xlat   BYTE PTR ds:[rbx]
  405a61:	ins    BYTE PTR es:[rdi],dx
  405a62:	addr32 or eax,ecx
  405a65:	rcr    BYTE PTR [rsp+rcx*1+0x54],cl
  405a69:	lods   eax,DWORD PTR ds:[rsi]
  405a6a:	ins    DWORD PTR es:[rdi],dx
  405a6b:	or     eax,0xd950085
  405a70:	add    al,0xcc
  405a72:	add    BYTE PTR [rbx],dl
  405a74:	(bad)  
  405a76:	(bad)  
  405a77:	adc    edx,DWORD PTR [rbp-0x61e93826]
  405a7d:	loop   0x405a80
  405a7f:	sbb    eax,0x2020c6a7
  405a84:	and    DWORD PTR [rcx-0x40],eax
  405a87:	es cmp bh,bh
  405a8a:	movabs eax,ds:0x1be0c22b3cc67327
  405a93:	cs popf 
  405a95:	lea    esi,[rsi-0x1a996cf]
  405a9b:	ss adc eax,0x883927e3
  405aa1:	imul   ecx,DWORD PTR [rax+0x3b],0x3ccaf36c
  405aa8:	mov    al,0x9b
  405aaa:	cmp    bh,BYTE PTR [rdi]
  405aac:	test   DWORD PTR [rdx+0x0],ebx
  405aaf:	rex.WRB retf 
  405ab1:	rex.WXB (bad) 
  405ab3:	push   rcx
  405ab4:	out    0x7b,eax
  405ab6:	rex.WRX push rsi
  405ab8:	out    0x95,eax
  405aba:	pop    rsi
  405abb:	pop    rbx
  405abc:	ss rex.XB pop r10
  405abf:	pop    rsp
  405ac0:	(bad)  
  405ac1:	movsxd esi,DWORD PTR [rdi+0x5c]
  405ac4:	jnp    0x405b02
  405ac6:	(bad)  
  405ac7:	(bad)  
  405ac8:	and    al,0x5b
  405aca:	xchg   edi,eax
  405acb:	fs ss mov bh,0xc3
  405acf:	gs mov dh,0xf0
  405ad2:	jp     0x405b3b
  405ad4:	test   al,0xb
  405ad6:	sbb    eax,0xce654777
  405adb:	ja     0x405a9d
  405add:	xchg   dh,dl
  405adf:	js     0x405ae9
  405ae1:	mov    ebx,0x872d7914
  405ae6:	add    eax,0xe19637c
  405aeb:	jl     0x405ac4
  405aed:	rep lods eax,DWORD PTR ds:[rsi]
  405aef:	jge    0x405b2a
  405af1:	add    eax,DWORD PTR [rax]
  405af3:	add    BYTE PTR [rcx-0x47fffffd],ah
  405af9:	or     DWORD PTR [rax],eax
  405afb:	add    BYTE PTR [rsi],bh
  405afd:	add    al,BYTE PTR [rax]
  405aff:	add    BYTE PTR [rbp-0x39fffff7],ah
  405b05:	or     al,BYTE PTR [rax]
  405b07:	add    bh,ch
  405b09:	add    al,0x0
  405b0b:	add    cl,bh
  405b0d:	or     al,BYTE PTR [rax]
  405b0f:	add    BYTE PTR [rax+0x8],dh
  405b12:	add    BYTE PTR [rax],al
  405b14:	(bad)  
  405b15:	add    DWORD PTR [rax],eax
  405b17:	add    dh,dh
  405b19:	add    eax,0x7550000
  405b1e:	add    BYTE PTR [rax],al
  405b20:	push   rax
  405b21:	or     DWORD PTR [rax],eax
  405b23:	add    BYTE PTR [rcx+0x0],bl
  405b26:	add    BYTE PTR [rax],al
  405b28:	mov    BYTE PTR [rax+rax*1],al
  405b2b:	add    BYTE PTR [rax-0x62fffffb],bh
  405b31:	add    BYTE PTR [rax],al
  405b33:	add    BYTE PTR [rax+0x24000008],bh
  405b39:	or     eax,DWORD PTR [rax]
  405b3b:	add    ch,dl
  405b3d:	add    eax,0x3f60000
  405b42:	add    BYTE PTR [rax],al
  405b44:	add    BYTE PTR [rdi],al
  405b46:	add    BYTE PTR [rax],al
  405b48:	cmp    al,0x0
  405b4a:	add    BYTE PTR [rax],al
  405b4c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  405b4d:	(bad)  
  405b4e:	add    BYTE PTR [rax],al
  405b50:	(bad)  
  405b51:	or     al,0x0
  405b53:	add    BYTE PTR [rdx],bl
  405b55:	add    DWORD PTR [rax],eax
  405b57:	add    al,bl
  405b59:	add    al,0x0
  405b5b:	add    BYTE PTR [rdx+0x0],bh
  405b5e:	add    BYTE PTR [rax],al
  405b60:	sti    
  405b61:	add    DWORD PTR [rax],eax
  405b63:	add    BYTE PTR [rbp+0x66000004],dh
  405b69:	or     al,BYTE PTR [rax]
  405b6b:	add    BYTE PTR [rbx+0x2],bh
  405b6e:	add    BYTE PTR [rax],al
  405b70:	mov    BYTE PTR [rdi],al
  405b72:	add    BYTE PTR [rax],al
  405b74:	(bad)  
  405b75:	or     DWORD PTR [rax],eax
  405b77:	add    BYTE PTR [rax+0x4],al
  405b7a:	add    BYTE PTR [rax],al
  405b7c:	pop    rdi
  405b7d:	add    al,0x0
  405b7f:	add    bl,ch
  405b81:	or     BYTE PTR [rax],al
  405b83:	add    BYTE PTR [rbx],dh
  405b85:	add    eax,0x7380000
  405b8a:	add    BYTE PTR [rax],al
  405b8c:	loope  0x405b90
  405b8e:	add    BYTE PTR [rax],al
  405b90:	js     0x405b9d
  405b92:	add    BYTE PTR [rax],al
  405b94:	in     eax,dx
  405b95:	add    BYTE PTR [rax],al
  405b97:	add    BYTE PTR [rax],dl
  405b99:	or     al,BYTE PTR [rax]
  405b9b:	add    BYTE PTR [rbx+0x8],bl
  405b9e:	add    BYTE PTR [rax],al
  405ba0:	out    0x7,eax
  405ba2:	add    BYTE PTR [rax],al
  405ba4:	(bad)  
  405ba6:	add    BYTE PTR [rax],al
  405ba8:	jg     0x405bb3
  405baa:	add    BYTE PTR [rax],al
  405bac:	add    BYTE PTR [rax],al
  405bae:	add    BYTE PTR [rax],al
  405bb0:	mov    cs,WORD PTR [rcx]
  405bb2:	add    BYTE PTR [rax],al
  405bb4:	movabs eax,ds:0x160000071100000b
  405bbd:	or     BYTE PTR [rax],al
  405bbf:	add    BYTE PTR [rsi+0x1],dh
  405bc2:	add    BYTE PTR [rax],al
  405bc4:	(bad)  
  405bc5:	or     DWORD PTR [rax],eax
  405bc7:	add    BYTE PTR [rsi+0x1300000b],dh
  405bcd:	add    BYTE PTR [rax],al
  405bcf:	add    BYTE PTR [rcx+0xc],dl
  405bd2:	add    BYTE PTR [rax],al
  405bd4:	or     eax,DWORD PTR gs:[rax]
  405bd7:	add    BYTE PTR [rdx+0x5],dh
  405bda:	add    BYTE PTR [rax],al
  405bdc:	sub    eax,0x1b000006
  405be1:	add    al,0x0
  405be3:	add    BYTE PTR [rdi+0x6],bh
  405be6:	add    BYTE PTR [rax],al
  405be8:	rol    DWORD PTR [rsi],1
  405bea:	add    BYTE PTR [rax],al
  405bec:	loope  0x405bf9
  405bee:	add    BYTE PTR [rax],al
  405bf0:	cmp    eax,0xd9000001
  405bf5:	or     DWORD PTR [rax],eax
  405bf7:	add    BYTE PTR [rsi+rax*1+0x0],bl
  405bfb:	add    BYTE PTR [rdi+0x6c000001],dl
  405c01:	or     al,0x0
  405c03:	add    dh,cl
  405c05:	add    al,BYTE PTR [rax]
  405c07:	add    BYTE PTR [rdi+rax*1+0xd60000],bh
  405c0e:	add    BYTE PTR [rax],al
  405c10:	add    al,BYTE PTR [rbx]
  405c12:	add    BYTE PTR [rax],al
  405c14:	cmp    DWORD PTR [rdx],ecx
  405c16:	add    BYTE PTR [rax],al
  405c18:	or     al,BYTE PTR [rip+0xaa90000]        # 0xae95c1e
  405c1e:	add    BYTE PTR [rax],al
  405c20:	test   DWORD PTR [rip+0x6b80000],eax        # 0x6f85c26
  405c26:	add    BYTE PTR [rax],al
  405c28:	fwait
  405c29:	or     BYTE PTR [rax],al
  405c2b:	add    cl,cl
  405c2d:	sldt   WORD PTR [rax]
  405c30:	(bad)  
  405c31:	add    BYTE PTR [r8+rax*1+0x64],spl
  405c36:	add    BYTE PTR [rsi+0x0],cl
  405c39:	outs   dx,DWORD PTR ds:[rsi]
  405c3a:	add    BYTE PTR [rax+rax*1+0x65],ah
  405c3e:	add    BYTE PTR [rax],al
  405c40:	add    BYTE PTR [rax],al
  405c42:	add    BYTE PTR [rcx+rax*2],ah
  405c45:	add    BYTE PTR [rax+rax*1+0x64],ah
  405c49:	add    BYTE PTR [rsi+0x0],cl
  405c4c:	outs   dx,DWORD PTR ds:[rsi]
  405c4d:	add    BYTE PTR [rax+rax*1+0x65],ah
  405c51:	add    BYTE PTR [rax+rax*1+0x65],al
  405c55:	add    BYTE PTR [rbx+0x0],dh
  405c58:	movsxd eax,DWORD PTR [rax]
  405c5a:	jb     0x405c5c
  405c5c:	imul   eax,DWORD PTR [rax],0x740070
  405c62:	imul   eax,DWORD PTR [rax],0x6e006f
  405c68:	sub    eax,DWORD PTR [rax]
  405c6a:	add    BYTE PTR [rax],al
  405c6c:	sbb    BYTE PTR [rcx+0x0],al
  405c6f:	add    BYTE PTR fs:[rsi+0x0],dh
  405c73:	(bad)  
  405c74:	add    BYTE PTR [rsi+0x0],ch
  405c77:	movsxd eax,DWORD PTR [rax]
  405c79:	add    BYTE PTR gs:[rax+rax*1+0x50],ah
  405c7e:	add    BYTE PTR [rcx+0x0],ah
  405c81:	add    BYTE PTR [ebp+0x0],ah
  405c85:	jnp    0x405c87
  405c87:	add    BYTE PTR [rax],al
  405c89:	sbb    al,0x42
  405c8b:	add    BYTE PTR [rdx+0x0],dh
  405c8e:	outs   dx,DWORD PTR ds:[rsi]
  405c8f:	add    BYTE PTR [rdi+0x0],dh
  405c92:	jae    0x405c94
  405c94:	add    BYTE PTR gs:[rsi+0x0],al
  405c98:	outs   dx,DWORD PTR ds:[rsi]
  405c99:	add    BYTE PTR [rdx+0x0],dh
  405c9c:	rex.WRB add BYTE PTR [r13+0x0],r12b
  405ca0:	add    BYTE PTR fs:[rcx+0x0],ch
  405ca4:	(bad)  
  405ca5:	add    BYTE PTR [rbp+0x1e000000],al
  405cab:	rex.XB add BYTE PTR [r8+0x0],bpl
  405caf:	add    BYTE PTR gs:[rbx+0x0],ah
  405cb3:	imul   eax,DWORD PTR [rax],0x46
  405cb6:	add    BYTE PTR [rdi+0x0],ch
  405cb9:	jb     0x405cbb
  405cbb:	push   rbp
  405cbc:	add    BYTE PTR [rax+0x0],dh
  405cbf:	add    BYTE PTR fs:[rcx+0x0],ah
  405cc3:	je     0x405cc5
  405cc5:	add    BYTE PTR gs:[rbx+0x0],dh
  405cc9:	mov    ah,0x0
  405ccb:	add    BYTE PTR [rax],al
  405ccd:	xor    al,0x43
  405ccf:	add    BYTE PTR [rax+0x0],ch
  405cd2:	add    BYTE PTR gs:[rbx+0x0],ah
  405cd6:	imul   eax,DWORD PTR [rax],0x46
  405cd9:	add    BYTE PTR [rdi+0x0],ch
  405cdc:	jb     0x405cde
  405cde:	push   rbp
  405cdf:	add    BYTE PTR [rax+0x0],dh
  405ce2:	add    BYTE PTR fs:[rcx+0x0],ah
  405ce6:	je     0x405ce8
  405ce8:	add    BYTE PTR gs:[rbx+0x0],dh
  405cec:	add    BYTE PTR [rbp+0x0],r12b
  405cf0:	jae    0x405cf2
  405cf2:	movsxd eax,DWORD PTR [rax]
  405cf4:	jb     0x405cf6
  405cf6:	imul   eax,DWORD PTR [rax],0x740070
  405cfc:	imul   eax,DWORD PTR [rax],0x6e006f
  405d02:	rol    BYTE PTR [rax],1
  405d04:	add    BYTE PTR [rax],al
  405d06:	adc    al,BYTE PTR [rbx+0x0]
  405d09:	outs   dx,DWORD PTR ds:[rsi]
  405d0a:	add    BYTE PTR [rbp+0x0],ch
  405d0d:	ins    DWORD PTR es:[rdi],dx
  405d0e:	add    BYTE PTR [rbp+0x0],dh
  405d11:	outs   dx,BYTE PTR ds:[rsi]
  405d12:	add    BYTE PTR [rcx+0x0],ch
  405d15:	je     0x405d17
  405d17:	jns    0x405d19
  405d19:	(bad)  
  405d1a:	add    DWORD PTR [rax],eax
  405d1c:	add    BYTE PTR [rax],ch
  405d1e:	rex.XB add BYTE PTR [r15+0x0],bpl
  405d22:	ins    DWORD PTR es:[rdi],dx
  405d23:	add    BYTE PTR [rbp+0x0],ch
  405d26:	jne    0x405d28
  405d28:	outs   dx,BYTE PTR ds:[rsi]
  405d29:	add    BYTE PTR [rcx+0x0],ch
  405d2c:	je     0x405d2e
  405d2e:	jns    0x405d30
  405d30:	add    BYTE PTR [rbp+0x0],r12b
  405d34:	jae    0x405d36
  405d36:	movsxd eax,DWORD PTR [rax]
  405d38:	jb     0x405d3a
  405d3a:	imul   eax,DWORD PTR [rax],0x740070
  405d40:	imul   eax,DWORD PTR [rax],0x6e006f
  405d46:	sbb    DWORD PTR [rcx],eax
  405d48:	add    BYTE PTR [rax],al
  405d4a:	(bad)  
  405d4b:	add    BYTE PTR [rcx+0x0],r13b
  405d4f:	jae    0x405d51
  405d51:	movsxd eax,DWORD PTR [rax]
  405d53:	outs   dx,DWORD PTR ds:[rsi]
  405d54:	add    BYTE PTR [rsi+0x0],dh
  405d57:	add    BYTE PTR gs:[rdx+0x0],dh
  405d5b:	jns    0x405d5d
  405d5d:	push   rdx
  405d5e:	add    BYTE PTR [rbp+0x0],ah
  405d61:	jo     0x405d63
  405d63:	outs   dx,DWORD PTR ds:[rsi]
  405d64:	add    BYTE PTR [rdx+0x0],dh
  405d67:	je     0x405d69
  405d69:	jle    0x405d6c
  405d6b:	add    BYTE PTR [rax],al
  405d6d:	xor    al,0x44
  405d6f:	add    BYTE PTR [rcx+0x0],ch
  405d72:	jae    0x405d74
  405d74:	movsxd eax,DWORD PTR [rax]
  405d76:	outs   dx,DWORD PTR ds:[rsi]
  405d77:	add    BYTE PTR [rsi+0x0],dh
  405d7a:	add    BYTE PTR gs:[rdx+0x0],dh
  405d7e:	jns    0x405d80
  405d80:	push   rdx
  405d81:	add    BYTE PTR [rbp+0x0],ah
  405d84:	jo     0x405d86
  405d86:	outs   dx,DWORD PTR ds:[rsi]
  405d87:	add    BYTE PTR [rdx+0x0],dh
  405d8a:	je     0x405d8c
  405d8c:	add    BYTE PTR [rbp+0x0],r12b
  405d90:	jae    0x405d92
  405d92:	movsxd eax,DWORD PTR [rax]
  405d94:	jb     0x405d96
  405d96:	imul   eax,DWORD PTR [rax],0x740070
  405d9c:	imul   eax,DWORD PTR [rax],0x6e006f
  405da2:	scas   al,BYTE PTR es:[rdi]
  405da3:	add    DWORD PTR [rax],eax
  405da5:	add    BYTE PTR [rax*2+0x69006400],bl
  405dac:	add    BYTE PTR [rax+rax*1+0x69],dh
  405db0:	add    BYTE PTR [rdi+0x0],ch
  405db3:	outs   dx,BYTE PTR ds:[rsi]
  405db4:	add    BYTE PTR [rbp+0x0],dl
  405db7:	jo     0x405db9
  405db9:	add    BYTE PTR [edx+0x0],dh
  405dbd:	(bad)  
  405dbe:	add    BYTE PTR [rax+rax*1+0x65],ah
  405dc2:	add    BYTE PTR [rcx],bh
  405dc4:	add    al,BYTE PTR [rax]
  405dc6:	add    BYTE PTR [rdx],dh
  405dc8:	add    BYTE PTR [r8+rax*1+0x69],r12b
  405dcd:	add    BYTE PTR [rax+rax*1+0x69],dh
  405dd1:	add    BYTE PTR [rdi+0x0],ch
  405dd4:	outs   dx,BYTE PTR ds:[rsi]
  405dd5:	add    BYTE PTR [rbp+0x0],dl
  405dd8:	jo     0x405dda
  405dda:	add    BYTE PTR [edx+0x0],dh
  405dde:	(bad)  
  405ddf:	add    BYTE PTR [rax+rax*1+0x65],ah
  405de3:	add    BYTE PTR [rax+rax*1+0x65],al
  405de7:	add    BYTE PTR [rbx+0x0],dh
  405dea:	movsxd eax,DWORD PTR [rax]
  405dec:	jb     0x405dee
  405dee:	imul   eax,DWORD PTR [rax],0x740070
  405df4:	imul   eax,DWORD PTR [rax],0x6e006f
  405dfa:	rex.WX add al,BYTE PTR [rax]
  405dfd:	add    BYTE PTR [rax],ch
  405dff:	add    BYTE PTR [r14+0x0],r13b
  405e03:	je     0x405e05
  405e05:	add    BYTE PTR gs:[rdx+0x0],dh
  405e09:	jo     0x405e0b
  405e0b:	jb     0x405e0d
  405e0d:	imul   eax,DWORD PTR [rax],0x650073
  405e13:	add    BYTE PTR [rbp+0x0],r12b
  405e17:	jo     0x405e19
  405e19:	ins    BYTE PTR es:[rdi],dx
  405e1a:	add    BYTE PTR [rdi+0x0],ch
  405e1d:	jns    0x405e1f
  405e1f:	ins    DWORD PTR es:[rdi],dx
  405e20:	add    BYTE PTR [rbp+0x0],ah
  405e23:	outs   dx,BYTE PTR ds:[rsi]
  405e24:	add    BYTE PTR [rax+rax*1-0x4e],dh
  405e28:	add    al,BYTE PTR [rax]
  405e2a:	add    BYTE PTR [rsi],bh
  405e2c:	add    BYTE PTR [r14+0x0],r13b
  405e30:	je     0x405e32
  405e32:	add    BYTE PTR gs:[rdx+0x0],dh
  405e36:	jo     0x405e38
  405e38:	jb     0x405e3a
  405e3a:	imul   eax,DWORD PTR [rax],0x650073
  405e40:	add    BYTE PTR [rbp+0x0],r12b
  405e44:	jo     0x405e46
  405e46:	ins    BYTE PTR es:[rdi],dx
  405e47:	add    BYTE PTR [rdi+0x0],ch
  405e4a:	jns    0x405e4c
  405e4c:	ins    DWORD PTR es:[rdi],dx
  405e4d:	add    BYTE PTR [rbp+0x0],ah
  405e50:	outs   dx,BYTE PTR ds:[rsi]
  405e51:	add    BYTE PTR [rax+rax*1+0x44],dh
  405e55:	add    BYTE PTR [rbp+0x0],ah
  405e58:	jae    0x405e5a
  405e5a:	movsxd eax,DWORD PTR [rax]
  405e5c:	jb     0x405e5e
  405e5e:	imul   eax,DWORD PTR [rax],0x740070
  405e64:	imul   eax,DWORD PTR [rax],0x6e006f
  405e6a:	rol    BYTE PTR [rdx],1
  405e6c:	add    BYTE PTR [rax],al
  405e6e:	cmp    BYTE PTR [rdi+0x0],al
  405e71:	add    BYTE PTR gs:[rax+rax*1+0x74],dh
  405e76:	add    BYTE PTR [rcx+0x0],ch
  405e79:	outs   dx,BYTE PTR ds:[rsi]
  405e7a:	add    BYTE PTR [rdi+0x0],ah
  405e7d:	push   rbx
  405e7e:	add    BYTE PTR [rax+rax*1+0x61],dh
  405e82:	add    BYTE PTR [rdx+0x0],dh
  405e85:	je     0x405e87
  405e87:	add    BYTE PTR gs:[rax+rax*1+0x57],ah
  405e8c:	add    BYTE PTR [rcx+0x0],ch
  405e8f:	je     0x405e91
  405e91:	push   0x6c004300
  405e96:	add    BYTE PTR [rbp+0x0],dh
  405e99:	jae    0x405e9b
  405e9b:	je     0x405e9d
  405e9d:	add    BYTE PTR gs:[rdx+0x0],dh
  405ea1:	imul   eax,DWORD PTR [rax],0x67006e
  405ea7:	sbb    eax,0x4e000003
  405eac:	rex.RXB add BYTE PTR [r13+0x0],r12b
  405eb0:	je     0x405eb2
  405eb2:	je     0x405eb4
  405eb4:	imul   eax,DWORD PTR [rax],0x67006e
  405eba:	push   rbx
  405ebb:	add    BYTE PTR [rax+rax*1+0x61],dh
  405ebf:	add    BYTE PTR [rdx+0x0],dh
  405ec2:	je     0x405ec4
  405ec4:	add    BYTE PTR gs:[rax+rax*1+0x57],ah
  405ec9:	add    BYTE PTR [rcx+0x0],ch
  405ecc:	je     0x405ece
  405ece:	push   0x6c004300
  405ed3:	add    BYTE PTR [rbp+0x0],dh
  405ed6:	jae    0x405ed8
  405ed8:	je     0x405eda
  405eda:	add    BYTE PTR gs:[rdx+0x0],dh
  405ede:	imul   eax,DWORD PTR [rax],0x67006e
  405ee4:	add    BYTE PTR [rbp+0x0],r12b
  405ee8:	jae    0x405eea
  405eea:	movsxd eax,DWORD PTR [rax]
  405eec:	jb     0x405eee
  405eee:	imul   eax,DWORD PTR [rax],0x740070
  405ef4:	imul   eax,DWORD PTR [rax],0x6e006f
  405efa:	pop    rdx
  405efb:	add    eax,DWORD PTR [rax]
  405efd:	add    BYTE PTR [rsi],cl
  405eff:	rex.WB add BYTE PTR [r14+0x0],bpl
  405f03:	jae    0x405f05
  405f05:	je     0x405f07
  405f07:	(bad)  
  405f08:	add    BYTE PTR [rax+rax*1+0x6c],ch
  405f0c:	add    BYTE PTR [rbp+0x1c000003],ch
  405f12:	rex.WB add BYTE PTR [r14+0x0],bpl
  405f16:	jae    0x405f18
  405f18:	je     0x405f1a
  405f1a:	(bad)  
  405f1b:	add    BYTE PTR [rax+rax*1+0x6c],ch
  405f1f:	add    BYTE PTR [rbx+0x0],al
  405f22:	ins    BYTE PTR es:[rdi],dx
  405f23:	add    BYTE PTR [rbp+0x0],dh
  405f26:	jae    0x405f28
  405f28:	je     0x405f2a
  405f2a:	add    BYTE PTR gs:[rdx+0x0],dh
  405f2e:	add    al,BYTE PTR [rax+rax*1]
  405f31:	add    BYTE PTR [rdx],dh
  405f33:	rex.WB add BYTE PTR [r14+0x0],bpl
  405f37:	jae    0x405f39
  405f39:	je     0x405f3b
  405f3b:	(bad)  
  405f3c:	add    BYTE PTR [rax+rax*1+0x6c],ch
  405f40:	add    BYTE PTR [rbx+0x0],al
  405f43:	ins    BYTE PTR es:[rdi],dx
  405f44:	add    BYTE PTR [rbp+0x0],dh
  405f47:	jae    0x405f49
  405f49:	je     0x405f4b
  405f4b:	add    BYTE PTR gs:[rdx+0x0],dh
  405f4f:	add    BYTE PTR [rbp+0x0],r12b
  405f53:	jae    0x405f55
  405f55:	movsxd eax,DWORD PTR [rax]
  405f57:	jb     0x405f59
  405f59:	imul   eax,DWORD PTR [rax],0x740070
  405f5f:	imul   eax,DWORD PTR [rax],0x6e006f
  405f65:	xor    BYTE PTR [rax+rax*1],al
  405f68:	add    BYTE PTR [rcx+rcx*2],ah
  405f6b:	add    BYTE PTR [rsi+0x0],ch
  405f6e:	jae    0x405f70
  405f70:	je     0x405f72
  405f72:	(bad)  
  405f73:	add    BYTE PTR [rax+rax*1+0x6c],ch
  405f77:	add    BYTE PTR [rax+rax*1+0x65],al
  405f7b:	add    BYTE PTR [rbx+0x0],dh
  405f7e:	movsxd eax,DWORD PTR [rax]
  405f80:	jb     0x405f82
  405f82:	imul   eax,DWORD PTR [rax],0x740070
  405f88:	imul   eax,DWORD PTR [rax],0x6e006f
  405f8e:	jl     0x405f94
  405f90:	add    BYTE PTR [rax],al
  405f92:	cmp    cl,BYTE PTR [rcx+0x0]
  405f95:	outs   dx,BYTE PTR ds:[rsi]
  405f96:	add    BYTE PTR [rbx+0x0],dh
  405f99:	je     0x405f9b
  405f9b:	(bad)  
  405f9c:	add    BYTE PTR [rax+rax*1+0x6c],ch
  405fa0:	add    BYTE PTR [rbp+0x0],dl
  405fa3:	jae    0x405fa5
  405fa5:	imul   eax,DWORD PTR [rax],0x67006e
  405fab:	rex.XB add BYTE PTR [r15+0x0],bpl
  405faf:	outs   dx,BYTE PTR ds:[rsi]
  405fb0:	add    BYTE PTR [rsi+0x0],ah
  405fb3:	imul   eax,DWORD PTR [rax],0x750067
  405fb9:	jb     0x405fbb
  405fbb:	(bad)  
  405fbc:	add    BYTE PTR [rax+rax*1+0x69],dh
  405fc0:	add    BYTE PTR [rdi+0x0],ch
  405fc3:	outs   dx,BYTE PTR ds:[rsi]
  405fc4:	add    BYTE PTR [rsi+0x0],al
  405fc7:	imul   eax,DWORD PTR [rax],0x65006c
  405fcd:	add    al,0x5
  405fcf:	add    BYTE PTR [rax],al
  405fd1:	push   rax
  405fd2:	rex.WB add BYTE PTR [r14+0x0],bpl
  405fd6:	jae    0x405fd8
  405fd8:	je     0x405fda
  405fda:	(bad)  
  405fdb:	add    BYTE PTR [rax+rax*1+0x6c],ch
  405fdf:	add    BYTE PTR [rbp+0x0],dl
  405fe2:	jae    0x405fe4
  405fe4:	imul   eax,DWORD PTR [rax],0x67006e
  405fea:	rex.XB add BYTE PTR [r15+0x0],bpl
  405fee:	outs   dx,BYTE PTR ds:[rsi]
  405fef:	add    BYTE PTR [rsi+0x0],ah
  405ff2:	imul   eax,DWORD PTR [rax],0x750067
  405ff8:	jb     0x405ffa
  405ffa:	(bad)  
  405ffb:	add    BYTE PTR [rax+rax*1+0x69],dh
  405fff:	add    BYTE PTR [rdi+0x0],ch
  406002:	outs   dx,BYTE PTR ds:[rsi]
  406003:	add    BYTE PTR [rsi+0x0],al
  406006:	imul   eax,DWORD PTR [rax],0x65006c
  40600c:	add    BYTE PTR [rbp+0x0],r12b
  406010:	jae    0x406012
  406012:	movsxd eax,DWORD PTR [rax]
  406014:	jb     0x406016
  406016:	imul   eax,DWORD PTR [rax],0x740070
  40601c:	imul   eax,DWORD PTR [rax],0x6e006f
  406022:	sub    DWORD PTR [rip+0x49200000],eax        # 0x49606028
  406028:	add    BYTE PTR [rsi+0x0],ch
  40602b:	jae    0x40602d
  40602d:	je     0x40602f
  40602f:	(bad)  
  406030:	add    BYTE PTR [rax+rax*1+0x6c],ch
  406034:	add    BYTE PTR [rcx+0x0],ah
  406037:	je     0x406039
  406039:	imul   eax,DWORD PTR [rax],0x6e006f
  40603f:	push   rax
  406040:	add    BYTE PTR [rcx+0x0],ah
  406043:	add    BYTE PTR [ebp+0x0],ah
  406047:	imul   eax,DWORD PTR [rip+0x49200000],0x76006e00        # 0x49606051
  406051:	add    BYTE PTR [rcx+0x0],ah
  406054:	ins    BYTE PTR es:[rdi],dx
  406055:	add    BYTE PTR [rcx+0x0],ch
  406058:	add    BYTE PTR fs:[rbp+0x0],al
  40605c:	ins    DWORD PTR es:[rdi],dx
  40605d:	add    BYTE PTR [rax+0x0],dh
  406060:	je     0x406062
  406062:	jns    0x406064
  406064:	push   rax
  406065:	add    BYTE PTR [rcx+0x0],ah
  406068:	je     0x40606a
  40606a:	push   0x57700
  40606f:	add    BYTE PTR [rdx],bl
  406071:	rex.WB add BYTE PTR [r14+0x0],bpl
  406075:	jbe    0x406077
  406077:	(bad)  
  406078:	add    BYTE PTR [rax+rax*1+0x69],ch
  40607c:	add    BYTE PTR [rax+rax*1+0x46],ah
  406080:	add    BYTE PTR [rdi+0x0],ch
  406083:	ins    BYTE PTR es:[rdi],dx
  406084:	add    BYTE PTR [rax+rax*1+0x65],ah
  406088:	add    BYTE PTR [rdx+0x0],dh
  40608b:	mov    eax,0x24000005
  406090:	rex.WB add BYTE PTR [r14+0x0],bpl
  406094:	jbe    0x406096
  406096:	(bad)  
  406097:	add    BYTE PTR [rax+rax*1+0x69],ch
  40609b:	add    BYTE PTR [rax+rax*1+0x46],ah
  40609f:	add    BYTE PTR [rdi+0x0],ch
  4060a2:	ins    BYTE PTR es:[rdi],dx
  4060a3:	add    BYTE PTR [rax+rax*1+0x65],ah
  4060a7:	add    BYTE PTR [rdx+0x0],dh
  4060aa:	push   rsp
  4060ab:	add    BYTE PTR [rcx+0x0],ch
  4060ae:	je     0x4060b0
  4060b0:	ins    BYTE PTR es:[rdi],dx
  4060b1:	add    BYTE PTR [rbp+0x0],ah
  4060b4:	(bad)  
  4060b5:	add    eax,0x49280000
  4060ba:	add    BYTE PTR [rsi+0x0],ch
  4060bd:	jbe    0x4060bf
  4060bf:	(bad)  
  4060c0:	add    BYTE PTR [rax+rax*1+0x69],ch
  4060c4:	add    BYTE PTR [rax+rax*1+0x49],ah
  4060c8:	add    BYTE PTR [rsi+0x0],ch
  4060cb:	jae    0x4060cd
  4060cd:	je     0x4060cf
  4060cf:	(bad)  
  4060d0:	add    BYTE PTR [rax+rax*1+0x6c],ch
  4060d4:	add    BYTE PTR [rsi+0x0],al
  4060d7:	outs   dx,DWORD PTR ds:[rsi]
  4060d8:	add    BYTE PTR [rax+rax*1+0x64],ch
  4060dc:	add    BYTE PTR [rbp+0x0],ah
  4060df:	jb     0x4060e1
  4060e1:	out    dx,eax
  4060e2:	add    eax,0x4d1e0000
  4060e7:	add    BYTE PTR [rcx+0x0],ah
  4060ea:	imul   eax,DWORD PTR [rax],0x74006e
  4060f0:	add    BYTE PTR gs:[rsi+0x0],ch
  4060f4:	(bad)  
  4060f5:	add    BYTE PTR [rsi+0x0],ch
  4060f8:	movsxd eax,DWORD PTR [rax]
  4060fa:	add    BYTE PTR gs:[rax+0x0],dl
  4060fe:	(bad)  
  4060ff:	add    BYTE PTR [rdi+0x0],ah
  406102:	add    BYTE PTR gs:[rdx],bl
  406105:	(bad)  
  406106:	add    BYTE PTR [rax],al
  406108:	adc    cl,BYTE PTR [rsi+0x0]
  40610b:	outs   dx,DWORD PTR ds:[rsi]
  40610c:	add    BYTE PTR [rbx+0x0],al
  40610f:	jo     0x406111
  406111:	jne    0x406113
  406113:	push   rsp
  406114:	add    BYTE PTR [rcx+0x0],bh
  406117:	jo     0x406119
  406119:	add    BYTE PTR gs:[rdi],ah
  40611c:	(bad)  
  40611d:	add    BYTE PTR [rax],al
  40611f:	(bad)  
  406120:	rex.WRX add BYTE PTR [rdi+0x0],r13b
  406124:	push   rax
  406125:	add    BYTE PTR [rdx+0x0],dh
  406128:	outs   dx,DWORD PTR ds:[rsi]
  406129:	add    BYTE PTR [rbx+0x0],ah
  40612c:	add    BYTE PTR gs:[rbx+0x0],dh
  406130:	jae    0x406132
  406132:	outs   dx,DWORD PTR ds:[rsi]
  406133:	add    BYTE PTR [rdx+0x0],dh
  406136:	rex.X (bad) 
  406138:	add    BYTE PTR [rax],al
  40613a:	and    al,0x4f
  40613c:	add    BYTE PTR [rsi+0x0],ch
  40613f:	ins    BYTE PTR es:[rdi],dx
  406140:	add    BYTE PTR [rcx+0x0],ch
  406143:	outs   dx,BYTE PTR ds:[rsi]
  406144:	add    BYTE PTR [rbp+0x0],ah
  406147:	push   rdx
  406148:	add    BYTE PTR [rbp+0x0],ah
  40614b:	ins    BYTE PTR es:[rdi],dx
  40614c:	add    BYTE PTR [rbp+0x0],ah
  40614f:	(bad)  
  406150:	add    BYTE PTR [rbx+0x0],dh
  406153:	add    BYTE PTR gs:[rsi+0x0],cl
  406157:	outs   dx,DWORD PTR ds:[rsi]
  406158:	add    BYTE PTR [rax+rax*1+0x65],dh
  40615c:	add    BYTE PTR [rbx+0x0],dh
  40615f:	jns    0x406167
  406161:	add    BYTE PTR [rax],al
  406163:	cmp    cl,BYTE PTR [rdi+0x0]
  406166:	outs   dx,BYTE PTR ds:[rsi]
  406167:	add    BYTE PTR [rax+rax*1+0x69],ch
  40616b:	add    BYTE PTR [rsi+0x0],ch
  40616e:	add    BYTE PTR gs:[rdx+0x0],dl
  406172:	add    BYTE PTR gs:[rax+rax*1+0x65],ch
  406177:	add    BYTE PTR [rcx+0x0],ah
  40617a:	jae    0x40617c
  40617c:	add    BYTE PTR gs:[rsi+0x0],cl
  406180:	outs   dx,DWORD PTR ds:[rsi]
  406181:	add    BYTE PTR [rax+rax*1+0x65],dh
  406185:	add    BYTE PTR [rbx+0x0],dh
  406188:	add    BYTE PTR [rbp+0x0],r12b
  40618c:	jae    0x40618e
  40618e:	movsxd eax,DWORD PTR [rax]
  406190:	jb     0x406192
  406192:	imul   eax,DWORD PTR [rax],0x740070
  406198:	imul   eax,DWORD PTR [rax],0x6e006f
  40619e:	pop    QWORD PTR [rsi]
  4061a0:	add    BYTE PTR [rax],al
  4061a2:	(bad)  
  4061a3:	rex.WRXB add BYTE PTR [r8+0x0],r14b
  4061a7:	je     0x4061a9
  4061a9:	imul   eax,DWORD PTR [rax],0x6e006f
  4061af:	jae    0x4061b1
  4061b1:	mov    edi,0x2e000006
  4061b6:	rex.WRXB add BYTE PTR [r8+0x0],r14b
  4061ba:	je     0x4061bc
  4061bc:	imul   eax,DWORD PTR [rax],0x6e006f
  4061c2:	jae    0x4061c4
  4061c4:	push   rax
  4061c5:	add    BYTE PTR [rcx+0x0],ah
  4061c8:	add    BYTE PTR [ebp+0x0],ah
  4061cc:	rex.WB add BYTE PTR [r14+0x0],bpl
  4061d0:	jae    0x4061d2
  4061d2:	je     0x4061d4
  4061d4:	jb     0x4061d6
  4061d6:	jne    0x4061d8
  4061d8:	movsxd eax,DWORD PTR [rax]
  4061da:	je     0x4061dc
  4061dc:	imul   eax,DWORD PTR [rax],0x6e006f
  4061e2:	jae    0x4061e4
  4061e4:	enter  0x6,0x0
  4061e8:	sbb    BYTE PTR [rax+0x0],dl
  4061eb:	ins    BYTE PTR es:[rdi],dx
  4061ec:	add    BYTE PTR [rcx+0x0],ah
  4061ef:	outs   dx,BYTE PTR ds:[rsi]
  4061f0:	add    BYTE PTR [rsi+0x0],ch
  4061f3:	imul   eax,DWORD PTR [rax],0x67006e
  4061f9:	push   rax
  4061fa:	add    BYTE PTR [rcx+0x0],ah
  4061fd:	add    BYTE PTR [ebp+0x0],ah
  406201:	cmp    al,0x7
  406203:	add    BYTE PTR [rax],al
  406205:	sbb    al,0x50
  406207:	add    BYTE PTR [rdx+0x0],dh
  40620a:	add    BYTE PTR gs:[rax+0x0],dh
  40620e:	jo     0x406210
  406210:	add    BYTE PTR gs:[rax+rax*1+0x49],ah
  406215:	add    BYTE PTR [rsi+0x0],ch
  406218:	jae    0x40621a
  40621a:	je     0x40621c
  40621c:	(bad)  
  40621d:	add    BYTE PTR [rax+rax*1+0x6c],ch
  406221:	add    BYTE PTR [rsi+0x7],al
  406224:	add    BYTE PTR [rax],al
  406226:	xor    dl,BYTE PTR [rax+0x0]
  406229:	jb     0x40622b
  40622b:	add    BYTE PTR gs:[rax+0x0],dh
  40622f:	jo     0x406231
  406231:	add    BYTE PTR gs:[rax+rax*1+0x49],ah
  406236:	add    BYTE PTR [rsi+0x0],ch
  406239:	jae    0x40623b
  40623b:	je     0x40623d
  40623d:	(bad)  
  40623e:	add    BYTE PTR [rax+rax*1+0x6c],ch
  406242:	add    BYTE PTR [rax+rax*1+0x65],al
  406246:	add    BYTE PTR [rbx+0x0],dh
  406249:	movsxd eax,DWORD PTR [rax]
  40624b:	jb     0x40624d
  40624d:	imul   eax,DWORD PTR [rax],0x740070
  406253:	imul   eax,DWORD PTR [rax],0x6e006f
  406259:	movsxd eax,DWORD PTR [rdi]
  40625b:	add    BYTE PTR [rax],al
  40625d:	sub    dl,BYTE PTR [rax+0x0]
  406260:	jb     0x406262
  406262:	outs   dx,DWORD PTR ds:[rsi]
  406263:	add    BYTE PTR [rbx+0x0],ah
  406266:	add    BYTE PTR gs:[rbx+0x0],dh
  40626a:	jae    0x40626c
  40626c:	outs   dx,DWORD PTR ds:[rsi]
  40626d:	add    BYTE PTR [rdx+0x0],dh
  406270:	rex.WRX add BYTE PTR [rdi+0x0],r13b
  406274:	je     0x406276
  406276:	push   rbx
  406277:	add    BYTE PTR [rbp+0x0],dh
  40627a:	jo     0x40627c
  40627c:	jo     0x40627e
  40627e:	outs   dx,DWORD PTR ds:[rsi]
  40627f:	add    BYTE PTR [rdx+0x0],dh
  406282:	je     0x406284
  406284:	add    BYTE PTR gs:[rax+rax*1-0x22],ah
  406289:	(bad)  
  40628a:	add    BYTE PTR [rax],al
  40628c:	(bad)  
  40628d:	push   rdx
  40628e:	add    BYTE PTR [rbp+0x0],ah
  406291:	add    BYTE PTR [ecx+0x0],ch
  406295:	jae    0x406297
  406297:	je     0x406299
  406299:	add    BYTE PTR gs:[rdx+0x0],dh
  40629d:	add    BYTE PTR [r8+0x0],r15b
  4062a1:	jo     0x4062a3
  4062a3:	jb     0x4062a5
  4062a5:	add    BYTE PTR gs:[rbx+0x0],dh
  4062a9:	jae    0x4062ab
  4062ab:	adc    BYTE PTR [rax],cl
  4062ad:	add    BYTE PTR [rax],al
  4062af:	xor    al,0x52
  4062b1:	add    BYTE PTR [rbp+0x0],ah
  4062b4:	add    BYTE PTR [ecx+0x0],ch
  4062b8:	jae    0x4062ba
  4062ba:	je     0x4062bc
  4062bc:	add    BYTE PTR gs:[rdx+0x0],dh
  4062c0:	add    BYTE PTR [r8+0x0],r15b
  4062c4:	jo     0x4062c6
  4062c6:	jb     0x4062c8
  4062c8:	add    BYTE PTR gs:[rbx+0x0],dh
  4062cc:	jae    0x4062ce
  4062ce:	add    BYTE PTR [rbp+0x0],r12b
  4062d2:	jae    0x4062d4
  4062d4:	movsxd eax,DWORD PTR [rax]
  4062d6:	jb     0x4062d8
  4062d8:	imul   eax,DWORD PTR [rax],0x740070
  4062de:	imul   eax,DWORD PTR [rax],0x6e006f
  4062e4:	(bad)  
  4062e5:	or     BYTE PTR [rax],al
  4062e7:	add    BYTE PTR [rdx+rdx*2],dl
  4062ea:	add    BYTE PTR [rbp+0x0],ah
  4062ed:	ins    DWORD PTR es:[rdi],dx
  4062ee:	add    BYTE PTR [rdi+0x0],ch
  4062f1:	jbe    0x4062f3
  4062f3:	add    BYTE PTR gs:[rsi+0x0],cl
  4062f7:	outs   dx,DWORD PTR ds:[rsi]
  4062f8:	add    BYTE PTR [rax+rax*1+0x65],ah
  4062fc:	add    BYTE PTR [rbx],dh
  4062fe:	or     DWORD PTR [rax],eax
  406300:	add    BYTE PTR [rdx],ch
  406302:	push   rdx
  406303:	add    BYTE PTR [rbp+0x0],ah
  406306:	ins    DWORD PTR es:[rdi],dx
  406307:	add    BYTE PTR [rdi+0x0],ch
  40630a:	jbe    0x40630c
  40630c:	add    BYTE PTR gs:[rsi+0x0],cl
  406310:	outs   dx,DWORD PTR ds:[rsi]
  406311:	add    BYTE PTR [rax+rax*1+0x65],ah
  406315:	add    BYTE PTR [rax+rax*1+0x65],al
  406319:	add    BYTE PTR [rbx+0x0],dh
  40631c:	movsxd eax,DWORD PTR [rax]
  40631e:	jb     0x406320
  406320:	imul   eax,DWORD PTR [rax],0x740070
  406326:	imul   eax,DWORD PTR [rax],0x6e006f
  40632c:	movsxd ecx,DWORD PTR [rcx]
  40632e:	add    BYTE PTR [rax],al
  406330:	or     al,0x52
  406332:	add    BYTE PTR [rbp+0x0],ah
  406335:	jo     0x406337
  406337:	(bad)  
  406338:	add    BYTE PTR [rcx+0x0],ch
  40633b:	jb     0x40633d
  40633d:	mov    eax,0x22000009
  406342:	push   rdx
  406343:	add    BYTE PTR [rbp+0x0],ah
  406346:	jo     0x406348
  406348:	(bad)  
  406349:	add    BYTE PTR [rcx+0x0],ch
  40634c:	jb     0x40634e
  40634e:	add    BYTE PTR [rbp+0x0],r12b
  406352:	jae    0x406354
  406354:	movsxd eax,DWORD PTR [rax]
  406356:	jb     0x406358
  406358:	imul   eax,DWORD PTR [rax],0x740070
  40635e:	imul   eax,DWORD PTR [rax],0x6e006f
  406364:	ror    BYTE PTR [rcx],0x0
  406367:	add    BYTE PTR [rax],bl
  406369:	push   rdx
  40636a:	add    BYTE PTR [rbp+0x0],ah
  40636d:	jno    0x40636f
  40636f:	jne    0x406371
  406371:	imul   eax,DWORD PTR [rax],0x650072
  406377:	ins    DWORD PTR es:[rdi],dx
  406378:	add    BYTE PTR [rbp+0x0],ah
  40637b:	outs   dx,BYTE PTR ds:[rsi]
  40637c:	add    BYTE PTR [rax+rax*1+0x73],dh
  406380:	add    BYTE PTR [rbx],al
  406382:	or     al,BYTE PTR [rax]
  406384:	add    BYTE PTR [rsi],ch
  406386:	push   rdx
  406387:	add    BYTE PTR [rbp+0x0],ah
  40638a:	jno    0x40638c
  40638c:	jne    0x40638e
  40638e:	imul   eax,DWORD PTR [rax],0x650072
  406394:	ins    DWORD PTR es:[rdi],dx
  406395:	add    BYTE PTR [rbp+0x0],ah
  406398:	outs   dx,BYTE PTR ds:[rsi]
  406399:	add    BYTE PTR [rax+rax*1+0x73],dh
  40639d:	add    BYTE PTR [rax+rax*1+0x65],al
  4063a1:	add    BYTE PTR [rbx+0x0],dh
  4063a4:	movsxd eax,DWORD PTR [rax]
  4063a6:	jb     0x4063a8
  4063a8:	imul   eax,DWORD PTR [rax],0x740070
  4063ae:	imul   eax,DWORD PTR [rax],0x6e006f
  4063b4:	(bad)  
  4063b5:	or     al,BYTE PTR [rax]
  4063b7:	add    BYTE PTR [rdx],bl
  4063b9:	push   rdx
  4063ba:	add    BYTE PTR [rbp+0x0],ah
  4063bd:	jae    0x4063bf
  4063bf:	outs   dx,DWORD PTR ds:[rsi]
  4063c0:	add    BYTE PTR [rbp+0x0],dh
  4063c3:	jb     0x4063c5
  4063c5:	movsxd eax,DWORD PTR [rax]
  4063c7:	add    BYTE PTR gs:[rbx+0x0],dh
  4063cb:	push   rax
  4063cc:	add    BYTE PTR [rcx+0x0],ah
  4063cf:	add    BYTE PTR [ebp+0x0],ah
  4063d3:	push   rbp
  4063d4:	or     al,BYTE PTR [rax]
  4063d6:	add    BYTE PTR [rax],dl
  4063d8:	push   rbx
  4063d9:	add    BYTE PTR [rbx+0x0],al
  4063dc:	rex.XB add BYTE PTR [r11+0x0],al
  4063e0:	push   0x63006500
  4063e5:	add    BYTE PTR [rbx+0x0],ch
  4063e8:	(bad)  
  4063e9:	or     al,BYTE PTR [rax]
  4063eb:	add    BYTE PTR [rsi],ah
  4063ed:	push   rbx
  4063ee:	add    BYTE PTR [rbx+0x0],al
  4063f1:	rex.XB add BYTE PTR [r11+0x0],al
  4063f5:	push   0x63006500
  4063fa:	add    BYTE PTR [rbx+0x0],ch
  4063fd:	add    BYTE PTR [rbp+0x0],r12b
  406401:	jae    0x406403
  406403:	movsxd eax,DWORD PTR [rax]
  406405:	jb     0x406407
  406407:	imul   eax,DWORD PTR [rax],0x740070
  40640d:	imul   eax,DWORD PTR [rax],0x6e006f
  406413:	jle    0x40641f
  406415:	add    BYTE PTR [rax],al
  406417:	sub    dl,BYTE PTR [rbx+0x0]
  40641a:	add    BYTE PTR gs:[rbx+0x0],ah
  40641e:	jne    0x406420
  406420:	jb     0x406422
  406422:	imul   eax,DWORD PTR [rax],0x790074
  406428:	add    BYTE PTR [rdi+0x0],r13b
  40642c:	movsxd eax,DWORD PTR [rax]
  40642e:	jne    0x406430
  406430:	ins    DWORD PTR es:[rdi],dx
  406431:	add    BYTE PTR [rbp+0x0],ah
  406434:	outs   dx,BYTE PTR ds:[rsi]
  406435:	add    BYTE PTR [rax+rax*1+0x61],dh
  406439:	add    BYTE PTR [rax+rax*1+0x69],dh
  40643d:	add    BYTE PTR [rdi+0x0],ch
  406440:	outs   dx,BYTE PTR ds:[rsi]
  406441:	add    al,bl
  406443:	or     al,BYTE PTR [rax]
  406445:	add    BYTE PTR [rax+0x53],al
  406448:	add    BYTE PTR [rbp+0x0],ah
  40644b:	movsxd eax,DWORD PTR [rax]
  40644d:	jne    0x40644f
  40644f:	jb     0x406451
  406451:	imul   eax,DWORD PTR [rax],0x790074
  406457:	add    BYTE PTR [rdi+0x0],r13b
  40645b:	movsxd eax,DWORD PTR [rax]
  40645d:	jne    0x40645f
  40645f:	ins    DWORD PTR es:[rdi],dx
  406460:	add    BYTE PTR [rbp+0x0],ah
  406463:	outs   dx,BYTE PTR ds:[rsi]
  406464:	add    BYTE PTR [rax+rax*1+0x61],dh
  406468:	add    BYTE PTR [rax+rax*1+0x69],dh
  40646c:	add    BYTE PTR [rdi+0x0],ch
  40646f:	outs   dx,BYTE PTR ds:[rsi]
  406470:	add    BYTE PTR [rax+rax*1+0x65],al
  406474:	add    BYTE PTR [rbx+0x0],dh
  406477:	movsxd eax,DWORD PTR [rax]
  406479:	jb     0x40647b
  40647b:	imul   eax,DWORD PTR [rax],0x740070
  406481:	imul   eax,DWORD PTR [rax],0x6e006f
  406487:	lock or al,BYTE PTR [rax]
  40648a:	add    BYTE PTR [rax],dl
  40648c:	push   rbx
  40648d:	add    BYTE PTR [rax+0x0],ch
  406490:	outs   dx,DWORD PTR ds:[rsi]
  406491:	add    BYTE PTR [rdi+0x0],dh
  406494:	rex.W add BYTE PTR [rbp+0x0],spl
  406498:	ins    BYTE PTR es:[rdi],dx
  406499:	add    BYTE PTR [rax+0x0],dh
  40649c:	adc    cl,BYTE PTR [rbx]
  40649e:	add    BYTE PTR [rax],al
  4064a0:	es push rbx
  4064a2:	add    BYTE PTR [rax+0x0],ch
  4064a5:	outs   dx,DWORD PTR ds:[rsi]
  4064a6:	add    BYTE PTR [rdi+0x0],dh
  4064a9:	rex.W add BYTE PTR [rbp+0x0],spl
  4064ad:	ins    BYTE PTR es:[rdi],dx
  4064ae:	add    BYTE PTR [rax+0x0],dh
  4064b1:	add    BYTE PTR [rbp+0x0],r12b
  4064b5:	jae    0x4064b7
  4064b7:	movsxd eax,DWORD PTR [rax]
  4064b9:	jb     0x4064bb
  4064bb:	imul   eax,DWORD PTR [rax],0x740070
  4064c1:	imul   eax,DWORD PTR [rax],0x6e006f
  4064c7:	sub    al,0xb
  4064c9:	add    BYTE PTR [rax],al
  4064cb:	sbb    BYTE PTR [rbx+0x0],dl
  4064ce:	jno    0x4064d0
  4064d0:	ins    BYTE PTR es:[rdi],dx
  4064d1:	add    BYTE PTR [rax+rax*1+0x65],al
  4064d5:	add    BYTE PTR [rsi+0x0],dh
  4064d8:	movsxd eax,DWORD PTR [rax]
  4064da:	add    BYTE PTR gs:[rsi+0x0],ch
  4064de:	je     0x4064e0
  4064e0:	add    BYTE PTR gs:[rdx+0x0],dh
  4064e4:	pop    rbx
  4064e5:	or     eax,DWORD PTR [rax]
  4064e7:	add    BYTE PTR [rsi],ch
  4064e9:	push   rbx
  4064ea:	add    BYTE PTR [rcx+0x0],dh
  4064ed:	ins    BYTE PTR es:[rdi],dx
  4064ee:	add    BYTE PTR [rax+rax*1+0x65],al
  4064f2:	add    BYTE PTR [rsi+0x0],dh
  4064f5:	movsxd eax,DWORD PTR [rax]
  4064f7:	add    BYTE PTR gs:[rsi+0x0],ch
  4064fb:	je     0x4064fd
  4064fd:	add    BYTE PTR gs:[rdx+0x0],dh
  406501:	add    BYTE PTR [rbp+0x0],r12b
  406505:	jae    0x406507
  406507:	movsxd eax,DWORD PTR [rax]
  406509:	jb     0x40650b
  40650b:	imul   eax,DWORD PTR [rax],0x740070
  406511:	imul   eax,DWORD PTR [rax],0x6e006f
  406517:	js     0x406524
  406519:	add    BYTE PTR [rax],al
  40651b:	(bad)  
  40651c:	push   rbx
  40651d:	add    BYTE PTR [rcx+0x0],dh
  406520:	ins    BYTE PTR es:[rdi],dx
  406521:	add    BYTE PTR [rbp+0x0],al
  406524:	jbe    0x406526
  406526:	(bad)  
  406527:	add    BYTE PTR [rax+rax*1+0x53],ch
  40652b:	add    BYTE PTR [rcx+0x0],ch
  40652e:	je     0x406530
  406530:	gs add ch,dh
  406533:	or     eax,DWORD PTR [rax]
  406535:	add    BYTE PTR [rbx+rdx*2],ch
  406538:	add    BYTE PTR [rcx+0x0],dh
  40653b:	ins    BYTE PTR es:[rdi],dx
  40653c:	add    BYTE PTR [rbp+0x0],al
  40653f:	jbe    0x406541
  406541:	(bad)  
  406542:	add    BYTE PTR [rax+rax*1+0x53],ch
  406546:	add    BYTE PTR [rcx+0x0],ch
  406549:	je     0x40654b
  40654b:	add    BYTE PTR gs:[rax+rax*1+0x65],al
  406550:	add    BYTE PTR [rbx+0x0],dh
  406553:	movsxd eax,DWORD PTR [rax]
  406555:	jb     0x406557
  406557:	imul   eax,DWORD PTR [rax],0x740070
  40655d:	imul   eax,DWORD PTR [rax],0x6e006f
  406563:	sbb    eax,0x1400000c
  406568:	push   rbx
  406569:	add    BYTE PTR [rcx+0x0],dh
  40656c:	ins    BYTE PTR es:[rdi],dx
  40656d:	add    BYTE PTR [rdi+0x0],dl
  406570:	add    BYTE PTR gs:[rdx+0x0],ah
  406574:	push   rbx
  406575:	add    BYTE PTR [rcx+0x0],ch
  406578:	je     0x40657a
  40657a:	add    BYTE PTR gs:[rbp+0x2a00000c],dh
  406581:	push   rbx
  406582:	add    BYTE PTR [rcx+0x0],dh
  406585:	ins    BYTE PTR es:[rdi],dx
  406586:	add    BYTE PTR [rdi+0x0],dl
  406589:	add    BYTE PTR gs:[rdx+0x0],ah
  40658d:	push   rbx
  40658e:	add    BYTE PTR [rcx+0x0],ch
  406591:	je     0x406593
  406593:	add    BYTE PTR gs:[rax+rax*1+0x65],al
  406598:	add    BYTE PTR [rbx+0x0],dh
  40659b:	movsxd eax,DWORD PTR [rax]
  40659d:	jb     0x40659f
  40659f:	imul   eax,DWORD PTR [rax],0x740070
  4065a5:	imul   eax,DWORD PTR [rax],0x6e006f
  4065ab:	int3   
  4065ac:	or     al,0x0
  4065ae:	add    BYTE PTR [rdx],cl
  4065b0:	push   rsp
  4065b1:	add    BYTE PTR [rcx+0x0],ch
  4065b4:	je     0x4065b6
  4065b6:	ins    BYTE PTR es:[rdi],dx
  4065b7:	add    BYTE PTR [rbp+0x0],ah
  4065ba:	push   rsi
  4065bb:	or     eax,0x54120000
  4065c0:	add    BYTE PTR [rdi+0x0],ch
  4065c3:	outs   dx,DWORD PTR ds:[rsi]
  4065c4:	add    BYTE PTR [rax+rax*1+0x73],ch
  4065c8:	add    BYTE PTR [rax+0x0],dl
  4065cb:	(bad)  
  4065cc:	add    BYTE PTR [rdi+0x0],ah
  4065cf:	add    BYTE PTR gs:[rbx+0xd],bh
  4065d3:	add    BYTE PTR [rax],al
  4065d5:	(bad)  
  4065d6:	push   rbp
  4065d7:	add    BYTE PTR [rax+0x0],dh
  4065da:	add    BYTE PTR [edx+0x0],dh
  4065de:	(bad)  
  4065df:	add    BYTE PTR [rax+rax*1+0x65],ah
  4065e3:	add    BYTE PTR [rdx+0x1c00000d],al
  4065e9:	push   rbp
  4065ea:	add    BYTE PTR [rax+0x0],dh
  4065ed:	add    BYTE PTR [edx+0x0],dh
  4065f1:	(bad)  
  4065f2:	add    BYTE PTR [rax+rax*1+0x65],ah
  4065f6:	add    BYTE PTR [rcx+0x0],al
  4065f9:	add    BYTE PTR fs:[rsi+0x0],dh
  4065fd:	imul   eax,DWORD PTR [rax],0x6f0073
  406603:	jb     0x406605
  406605:	mov    bl,0xd
  406607:	add    BYTE PTR [rax],al
  406609:	xor    dl,BYTE PTR [rbp+0x0]
  40660c:	jo     0x40660e
  40660e:	add    BYTE PTR [edx+0x0],dh
  406612:	(bad)  
  406613:	add    BYTE PTR [rax+rax*1+0x65],ah
  406617:	add    BYTE PTR [rcx+0x0],al
  40661a:	add    BYTE PTR fs:[rsi+0x0],dh
  40661e:	imul   eax,DWORD PTR [rax],0x6f0073
  406624:	jb     0x406626
  406626:	add    BYTE PTR [rbp+0x0],r12b
  40662a:	jae    0x40662c
  40662c:	movsxd eax,DWORD PTR [rax]
  40662e:	jb     0x406630
  406630:	imul   eax,DWORD PTR [rax],0x740070
  406636:	imul   eax,DWORD PTR [rax],0x6e006f
  40663c:	int3   
  40663d:	or     eax,0x55240000
  406642:	add    BYTE PTR [rax+0x0],dh
  406645:	add    BYTE PTR [edx+0x0],dh
  406649:	(bad)  
  40664a:	add    BYTE PTR [rax+rax*1+0x65],ah
  40664e:	add    BYTE PTR [rax+rax*1+0x65],al
  406652:	add    BYTE PTR [rbx+0x0],dh
  406655:	movsxd eax,DWORD PTR [rax]
  406657:	jb     0x406659
  406659:	imul   eax,DWORD PTR [rax],0x740070
  40665f:	imul   eax,DWORD PTR [rax],0x6e006f
  406665:	or     BYTE PTR [rsi],0x0
  406668:	add    BYTE PTR [rax],ch
  40666a:	push   rbp
  40666b:	add    BYTE PTR [rax+0x0],dh
  40666e:	add    BYTE PTR [edx+0x0],dh
  406672:	(bad)  
  406673:	add    BYTE PTR [rax+rax*1+0x65],ah
  406677:	add    BYTE PTR [rax+rax*1+0x6f],al
  40667b:	add    BYTE PTR [rbx+0x0],ah
  40667e:	jne    0x406680
  406680:	ins    DWORD PTR es:[rdi],dx
  406681:	add    BYTE PTR [rbp+0x0],ah
  406684:	outs   dx,BYTE PTR ds:[rsi]
  406685:	add    BYTE PTR [rax+rax*1+0x61],dh
  406689:	add    BYTE PTR [rax+rax*1+0x69],dh
  40668d:	add    BYTE PTR [rdi+0x0],ch
  406690:	outs   dx,BYTE PTR ds:[rsi]
  406691:	add    BYTE PTR [rcx],ch
  406693:	sldt   WORD PTR [rax]
  406696:	ds push rbp
  406698:	add    BYTE PTR [rax+0x0],dh
  40669b:	add    BYTE PTR [edx+0x0],dh
  40669f:	(bad)  
  4066a0:	add    BYTE PTR [rax+rax*1+0x65],ah
  4066a4:	add    BYTE PTR [rax+rax*1+0x6f],al
  4066a8:	add    BYTE PTR [rbx+0x0],ah
  4066ab:	jne    0x4066ad
  4066ad:	ins    DWORD PTR es:[rdi],dx
  4066ae:	add    BYTE PTR [rbp+0x0],ah
  4066b1:	outs   dx,BYTE PTR ds:[rsi]
  4066b2:	add    BYTE PTR [rax+rax*1+0x61],dh
  4066b6:	add    BYTE PTR [rax+rax*1+0x69],dh
  4066ba:	add    BYTE PTR [rdi+0x0],ch
  4066bd:	outs   dx,BYTE PTR ds:[rsi]
  4066be:	add    BYTE PTR [rax+rax*1+0x65],al
  4066c2:	add    BYTE PTR [rbx+0x0],dh
  4066c5:	movsxd eax,DWORD PTR [rax]
  4066c7:	jb     0x4066c9
  4066c9:	imul   eax,DWORD PTR [rax],0x740070
  4066cf:	imul   eax,DWORD PTR [rax],0x6e006f
  4066d5:	rex sldt WORD PTR [rax]
  4066d9:	sbb    BYTE PTR [rbp+0x0],dl
  4066dc:	jo     0x4066de
  4066de:	add    BYTE PTR [edx+0x0],dh
  4066e2:	(bad)  
  4066e3:	add    BYTE PTR [rax+rax*1+0x65],ah
  4066e7:	add    BYTE PTR [rdx+0x0],dl
  4066ea:	jne    0x4066ec
  4066ec:	ins    BYTE PTR es:[rdi],dx
  4066ed:	add    BYTE PTR [rbp+0x0],ah
  4066f0:	jae    0x4066f2
  4066f2:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  4066f3:	sldt   WORD PTR [rax]
  4066f6:	cs push rbp
  4066f8:	add    BYTE PTR [rax+0x0],dh
  4066fb:	add    BYTE PTR [edx+0x0],dh
  4066ff:	(bad)  
  406700:	add    BYTE PTR [rax+rax*1+0x65],ah
  406704:	add    BYTE PTR [rdx+0x0],dl
  406707:	jne    0x406709
  406709:	ins    BYTE PTR es:[rdi],dx
  40670a:	add    BYTE PTR [rbp+0x0],ah
  40670d:	jae    0x40670f
  40670f:	add    BYTE PTR [rbp+0x0],r12b
  406713:	jae    0x406715
  406715:	movsxd eax,DWORD PTR [rax]
  406717:	jb     0x406719
  406719:	imul   eax,DWORD PTR [rax],0x740070
  40671f:	imul   eax,DWORD PTR [rax],0x6e006f
  406725:	mov    bl,0xf
  406727:	add    BYTE PTR [rax],al
  406729:	es push rbp
  40672b:	add    BYTE PTR [rax+0x0],dh
  40672e:	add    BYTE PTR [edx+0x0],dh
  406732:	(bad)  
  406733:	add    BYTE PTR [rax+rax*1+0x65],ah
  406737:	add    BYTE PTR [rbx+0x0],dl
  40673a:	push   rbx
  40673b:	add    BYTE PTR [rcx+0x0],cl
  40673e:	push   rbx
  40673f:	add    BYTE PTR [rax+0x0],dl
  406742:	(bad)  
  406743:	add    BYTE PTR [rbx+0x0],ah
  406746:	imul   eax,DWORD PTR [rax],0x61
  406749:	add    BYTE PTR [rdi+0x0],ah
  40674c:	add    BYTE PTR gs:[rbx+0x0],dh
  406750:	call   0x3c406764
  406755:	push   rbp
  406756:	add    BYTE PTR [rax+0x0],dh
  406759:	add    BYTE PTR [edx+0x0],dh
  40675d:	(bad)  
  40675e:	add    BYTE PTR [rax+rax*1+0x65],ah
  406762:	add    BYTE PTR [rbx+0x0],dl
  406765:	push   rbx
  406766:	add    BYTE PTR [rcx+0x0],cl
  406769:	push   rbx
  40676a:	add    BYTE PTR [rax+0x0],dl
  40676d:	(bad)  
  40676e:	add    BYTE PTR [rbx+0x0],ah
  406771:	imul   eax,DWORD PTR [rax],0x61
  406774:	add    BYTE PTR [rdi+0x0],ah
  406777:	add    BYTE PTR gs:[rbx+0x0],dh
  40677b:	add    BYTE PTR [rbp+0x0],r12b
  40677f:	jae    0x406781
  406781:	movsxd eax,DWORD PTR [rax]
  406783:	jb     0x406785
  406785:	imul   eax,DWORD PTR [rax],0x740070
  40678b:	imul   eax,DWORD PTR [rax],0x6e006f
  406791:	movups xmm0,XMMWORD PTR [rax]
  406794:	add    BYTE PTR [rsi],cl
  406796:	push   rsi
  406797:	add    BYTE PTR [rcx+0x0],ch
  40679a:	add    BYTE PTR gs:[rdi+0x0],dh
  40679e:	rex.X add BYTE PTR [rdi+0x0],bpl
  4067a2:	ins    BYTE PTR es:[rdi],dx
  4067a3:	add    al,cl
  4067a5:	adc    BYTE PTR [rax],al
  4067a7:	add    BYTE PTR [rsi+rdx*2],ah
  4067aa:	add    BYTE PTR [rcx+0x0],ch
  4067ad:	add    BYTE PTR gs:[rdi+0x0],dh
  4067b1:	rex.X add BYTE PTR [rdi+0x0],bpl
  4067b5:	ins    BYTE PTR es:[rdi],dx
  4067b6:	add    BYTE PTR [rax+rax*1+0x65],al
  4067ba:	add    BYTE PTR [rbx+0x0],dh
  4067bd:	movsxd eax,DWORD PTR [rax]
  4067bf:	jb     0x4067c1
  4067c1:	imul   eax,DWORD PTR [rax],0x740070
  4067c7:	imul   eax,DWORD PTR [rax],0x6e006f
  4067cd:	out    0x10,al
  4067cf:	add    BYTE PTR [rax],al
  4067d1:	adc    BYTE PTR [rsi+0x0],dl
  4067d4:	imul   eax,DWORD PTR [rax],0x770065
  4067da:	add    BYTE PTR [r13+0x0],r14b
  4067de:	ins    BYTE PTR es:[rdi],dx
  4067df:	add    BYTE PTR [rcx+0x0],ah
  4067e2:	or     edx,DWORD PTR [rcx]
  4067e4:	add    BYTE PTR [rax],al
  4067e6:	es push rsi
  4067e8:	add    BYTE PTR [rcx+0x0],ch
  4067eb:	add    BYTE PTR gs:[rdi+0x0],dh
  4067ef:	add    BYTE PTR [r13+0x0],r14b
  4067f3:	ins    BYTE PTR es:[rdi],dx
  4067f4:	add    BYTE PTR [rcx+0x0],ah
  4067f7:	add    BYTE PTR [rbp+0x0],r12b
  4067fb:	jae    0x4067fd
  4067fd:	movsxd eax,DWORD PTR [rax]
  4067ff:	jb     0x406801
  406801:	imul   eax,DWORD PTR [rax],0x740070
  406807:	imul   eax,DWORD PTR [rax],0x6e006f
  40680d:	(bad)  
  40680e:	adc    DWORD PTR [rax],eax
  406810:	add    BYTE PTR [rax],ch
  406812:	push   rsi
  406813:	add    BYTE PTR [rcx+0x0],ch
  406816:	add    BYTE PTR gs:[rdi+0x0],dh
  40681a:	push   rax
  40681b:	add    BYTE PTR [rdx+0x0],dh
  40681e:	imul   eax,DWORD PTR [rax],0x610076
  406824:	movsxd eax,DWORD PTR [rax]
  406826:	jns    0x406828
  406828:	push   rbx
  406829:	add    BYTE PTR [rax+rax*1+0x61],dh
  40682d:	add    BYTE PTR [rax+rax*1+0x65],dh
  406831:	add    BYTE PTR [rbp+0x0],ch
  406834:	add    BYTE PTR gs:[rsi+0x0],ch
  406838:	je     0x40683a
  40683a:	rex.RXB adc DWORD PTR [r8],r8d
  40683d:	add    BYTE PTR [rsi],bh
  40683f:	push   rsi
  406840:	add    BYTE PTR [rcx+0x0],ch
  406843:	add    BYTE PTR gs:[rdi+0x0],dh
  406847:	push   rax
  406848:	add    BYTE PTR [rdx+0x0],dh
  40684b:	imul   eax,DWORD PTR [rax],0x610076
  406851:	movsxd eax,DWORD PTR [rax]
  406853:	jns    0x406855
  406855:	push   rbx
  406856:	add    BYTE PTR [rax+rax*1+0x61],dh
  40685a:	add    BYTE PTR [rax+rax*1+0x65],dh
  40685e:	add    BYTE PTR [rbp+0x0],ch
  406861:	add    BYTE PTR gs:[rsi+0x0],ch
  406865:	je     0x406867
  406867:	add    BYTE PTR [rbp+0x0],r12b
  40686b:	jae    0x40686d
  40686d:	movsxd eax,DWORD PTR [rax]
  40686f:	jb     0x406871
  406871:	imul   eax,DWORD PTR [rax],0x740070
  406877:	imul   eax,DWORD PTR [rax],0x6e006f
  40687d:	adc    DWORD PTR fs:[rax],eax
  406880:	add    BYTE PTR [rsi],dl
  406882:	push   rsi
  406883:	add    BYTE PTR [rcx+0x0],ch
  406886:	add    BYTE PTR gs:[rdi+0x0],dh
  40688a:	push   rbx
  40688b:	add    BYTE PTR [rcx+0x0],ah
  40688e:	ins    DWORD PTR es:[rdi],dx
  40688f:	add    BYTE PTR [rax+0x0],dh
  406892:	ins    BYTE PTR es:[rdi],dx
  406893:	add    BYTE PTR [rbp+0x0],ah
  406896:	jae    0x406898
  406898:	mov    edx,DWORD PTR [rcx]
  40689a:	add    BYTE PTR [rax],al
  40689c:	sub    al,0x56
  40689e:	add    BYTE PTR [rcx+0x0],ch
  4068a1:	add    BYTE PTR gs:[rdi+0x0],dh
  4068a5:	push   rbx
  4068a6:	add    BYTE PTR [rcx+0x0],ah
  4068a9:	ins    DWORD PTR es:[rdi],dx
  4068aa:	add    BYTE PTR [rax+0x0],dh
  4068ad:	ins    BYTE PTR es:[rdi],dx
  4068ae:	add    BYTE PTR [rbp+0x0],ah
  4068b1:	jae    0x4068b3
  4068b3:	add    BYTE PTR [rbp+0x0],r12b
  4068b7:	jae    0x4068b9
  4068b9:	movsxd eax,DWORD PTR [rax]
  4068bb:	jb     0x4068bd
  4068bd:	imul   eax,DWORD PTR [rax],0x740070
  4068c3:	imul   eax,DWORD PTR [rax],0x6e006f
  4068c9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4068ca:	adc    DWORD PTR [rax],eax
  4068cc:	add    BYTE PTR [rcx],al
  4068ce:	sub    DWORD PTR [rcx+0x64],eax
  4068d1:	and    BYTE PTR fs:[rsi+0x6f],ch
  4068d5:	fs and BYTE PTR gs:[rdi+rbp*2+0x20],dh
  4068db:	(bad)  
  4068dc:	and    BYTE PTR [rbx+0x51],dl
  4068df:	rex.WR and BYTE PTR [rbx+0x65],r10b
  4068e3:	jb     0x40695b
  4068e5:	gs jb  0x406908
  4068e8:	data16 (bad) 
  4068ea:	imul   ebp,DWORD PTR [rdi+rbp*2+0x76],0x63207265
  4068f2:	ins    BYTE PTR es:[rdi],dx
  4068f3:	jne    0x406968
  4068f5:	je     0x40695c
  4068f7:	jb     0x4068fa
  4068f9:	rex.WRX
  4068fa:	rex.WR (bad) 
  4068fc:	jne    0x40696c
  4068fe:	movsxd ebp,DWORD PTR [rax+0x20]
  406901:	(bad)  
  406902:	and    BYTE PTR [rdi+0x69],dh
  406905:	jp     0x406968
  406907:	jb     0x40696d
  406909:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  40690d:	(bad)  
  40690e:	fs and BYTE PTR fs:[rcx+0x20],ah
  406913:	outs   dx,BYTE PTR ds:[rsi]
  406914:	outs   dx,DWORD PTR ds:[rsi]
  406915:	fs and BYTE PTR gs:[rdi+rbp*2+0x20],dh
  40691b:	(bad)  
  40691c:	outs   dx,BYTE PTR ds:[rsi]
  40691d:	and    BYTE PTR [rbp+0x78],ah
  406920:	imul   esi,DWORD PTR [rbx+0x74],0x20676e69
  406927:	push   rbx
  406928:	push   rcx
  406929:	rex.WR and BYTE PTR [rbx+0x65],r10b
  40692d:	jb     0x4069a5
  40692f:	gs jb  0x406952
  406932:	xor    dh,BYTE PTR [rax]
  406934:	xor    BYTE PTR [rax],bh
  406936:	and    BYTE PTR [rsi+0x61],ah
  406939:	imul   ebp,DWORD PTR [rdi+rbp*2+0x76],0x63207265
  406941:	ins    BYTE PTR es:[rdi],dx
  406942:	jne    0x4069b7
  406944:	je     0x4069ab
  406946:	jb     0x406976
  406948:	add    DWORD PTR [rax],ecx
  40694a:	rex.B
  40694b:	fs jbe 0x4069af
  40694e:	outs   dx,BYTE PTR ds:[rsi]
  40694f:	movsxd esp,DWORD PTR [rbp+0x64]
  406952:	add    DWORD PTR [rip+0x776f7242],ebp        # 0x77afdb9a
  406958:	jae    0x4069bf
  40695a:	and    BYTE PTR [rsi+0x6f],ah
  40695d:	jb     0x40697f
  40695f:	push   rbx
  406960:	push   rcx
  406961:	rex.WR and BYTE PTR [rbx+0x65],r10b
  406965:	jb     0x4069dd
  406967:	gs jb  0x40698a
  40696a:	xor    dh,BYTE PTR [rax]
  40696c:	xor    BYTE PTR [rax],bh
  40696e:	and    BYTE PTR [rcx+0x6e],cl
  406971:	jae    0x4069e7
  406973:	(bad)  
  406974:	ins    BYTE PTR es:[rdi],dx
  406975:	ins    BYTE PTR es:[rdi],dx
  406976:	(bad)  
  406977:	je     0x4069e2
  406979:	outs   dx,DWORD PTR ds:[rsi]
  40697a:	outs   dx,BYTE PTR ds:[rsi]
  40697b:	and    BYTE PTR [rbp+0x65],cl
  40697e:	imul   esp,DWORD PTR fs:[rcx+0x1],0x6165531a
  406986:	jb     0x4069eb
  406988:	push   0x726f6620
  40698d:	and    BYTE PTR [rax+0x72],dh
  406990:	outs   dx,DWORD PTR ds:[rsi]
  406991:	fs jne 0x4069f7
  406994:	je     0x4069b6
  406996:	jne    0x406a08
  406998:	fs (bad) 
  40699a:	je     0x406a01
  40699c:	jae    0x40699f
  40699e:	cmp    al,0x53
  4069a0:	gs (bad) 
  4069a2:	jb     0x406a07
  4069a4:	push   0x63694d20
  4069a9:	jb     0x406a1a
  4069ab:	jae    0x406a1c
  4069ad:	data16 je 0x4069d0
  4069b0:	push   rbp
  4069b1:	jo     0x406a17
  4069b3:	(bad)  
  4069b4:	je     0x406a1b
  4069b6:	and    BYTE PTR [rsi+0x6f],ah
  4069b9:	jb     0x4069db
  4069bb:	push   rbx
  4069bc:	push   rcx
  4069bd:	rex.WR and BYTE PTR [rbx+0x65],r10b
  4069c1:	jb     0x406a39
  4069c3:	gs jb  0x4069e6
  4069c6:	xor    dh,BYTE PTR [rax]
  4069c8:	xor    BYTE PTR [rax],bh
  4069ca:	and    BYTE PTR [rax+0x72],dh
  4069cd:	outs   dx,DWORD PTR ds:[rsi]
  4069ce:	fs jne 0x406a34
  4069d1:	je     0x4069f3
  4069d3:	jne    0x406a45
  4069d5:	fs (bad) 
  4069d7:	je     0x406a3e
  4069d9:	jae    0x406a09
  4069db:	add    DWORD PTR [rcx],ecx
  4069dd:	rex.XB outs dx,DWORD PTR ds:[rsi]
  4069df:	ins    DWORD PTR es:[rdi],dx
  4069e0:	ins    DWORD PTR es:[rdi],dx
  4069e1:	jne    0x406a51
  4069e3:	imul   esi,DWORD PTR [rcx+rdi*2+0x1],0x4c515363
  4069eb:	and    BYTE PTR [rbx+0x65],dl
  4069ee:	jb     0x406a66
  4069f0:	gs jb  0x406a20
  4069f3:	jb     0x406a5a
  4069f5:	ins    BYTE PTR es:[rdi],dx
  4069f6:	(bad)  
  4069f7:	je     0x406a5e
  4069f9:	and    BYTE PTR fs:[rcx+0x6e],ch
  4069fd:	outs   dx,WORD PTR ds:[rsi]
  4069ff:	jb     0x406a6e
  406a01:	(bad)  
  406a02:	je     0x406a6d
  406a04:	outs   dx,DWORD PTR ds:[rsi]
  406a05:	outs   dx,BYTE PTR ds:[rsi]
  406a06:	and    BYTE PTR [rsi+0x72],ah
  406a09:	outs   dx,DWORD PTR ds:[rsi]
  406a0a:	ins    DWORD PTR es:[rdi],dx
  406a0b:	and    BYTE PTR [rax+rbp*2+0x65],dh
  406a0f:	and    BYTE PTR [rbx+0x6f],ah
  406a12:	ins    DWORD PTR es:[rdi],dx
  406a13:	ins    DWORD PTR es:[rdi],dx
  406a14:	jne    0x406a84
  406a16:	imul   esi,DWORD PTR [rcx+rdi*2+0x3a],0x6f6c6220
  406a1e:	addr32 jae 0x406a4d
  406a21:	and    BYTE PTR [rdx+0x65],dh
  406a24:	ins    BYTE PTR es:[rdi],dx
  406a25:	(bad)  
  406a26:	je     0x406a8d
  406a28:	and    BYTE PTR fs:[rbx+0x69],dh
  406a2c:	je     0x406a93
  406a2e:	jae    0x406a5c
  406a30:	and    BYTE PTR [rbp+0x70],dh
  406a33:	movsxd ebp,DWORD PTR [rdi+0x6d]
  406a36:	imul   ebp,DWORD PTR [rsi+0x67],0x65766520
  406a3d:	outs   dx,BYTE PTR ds:[rsi]
  406a3e:	je     0x406ab3
  406a40:	sub    al,0x20
  406a42:	(bad)  
  406a43:	outs   dx,BYTE PTR ds:[rsi]
  406a44:	and    BYTE PTR fs:[rbp+0x6f],ch
  406a48:	jb     0x406aaf
  406a4a:	add    DWORD PTR cs:[rsi],ebp
  406a4d:	rex.WB outs dx,BYTE PTR ds:[rsi]
  406a4f:	jae    0x406ac5
  406a51:	(bad)  
  406a52:	ins    BYTE PTR es:[rdi],dx
  406a53:	ins    BYTE PTR es:[rdi],dx
  406a54:	gs and BYTE PTR fs:[rbx+0x51],dl
  406a59:	rex.WR and BYTE PTR [rbx+0x65],r10b
  406a5d:	jb     0x406ad5
  406a5f:	gs jb  0x406a82
  406a62:	data16 gs (bad) 
  406a65:	je     0x406adc
  406a67:	jb     0x406ace
  406a69:	jae    0x406a8b
  406a6b:	imul   esi,DWORD PTR fs:[rbx+0x63],0x7265766f
  406a73:	jns    0x406a95
  406a75:	jb     0x406adc
  406a77:	jo     0x406ae8
  406a79:	jb     0x406aef
  406a7b:	add    DWORD PTR [rax+0x65695601],ecx
  406a81:	ja     0x406aa3
  406a83:	(bad)  
  406a84:	and    BYTE PTR [rdx+0x65],dh
  406a87:	jo     0x406af8
  406a89:	jb     0x406aff
  406a8b:	and    BYTE PTR [rdi+0x66],ch
  406a8e:	and    BYTE PTR [rcx+0x6c],ah
  406a91:	ins    BYTE PTR es:[rdi],dx
  406a92:	and    BYTE PTR [rbx+0x51],dl
  406a95:	rex.WR and BYTE PTR [rbx+0x65],r10b
  406a99:	jb     0x406b11
  406a9b:	gs jb  0x406abe
  406a9e:	xor    dh,BYTE PTR [rax]
  406aa0:	xor    BYTE PTR [rax],dh
  406aa2:	sub    al,0x20
  406aa4:	push   rbx
  406aa5:	push   rcx
  406aa6:	rex.WR and BYTE PTR [rbx+0x65],r10b
  406aaa:	jb     0x406b22
  406aac:	gs jb  0x406acf
  406aaf:	xor    dh,BYTE PTR [rax]
  406ab1:	xor    BYTE PTR [rip+0x6e61202c],dh        # 0x6ea18ae3
  406ab7:	and    BYTE PTR fs:[rbx+0x51],dl
  406abb:	rex.WR and BYTE PTR [rbx+0x65],r10b
  406abf:	jb     0x406b37
  406ac1:	gs jb  0x406ae4
  406ac4:	xor    dh,BYTE PTR [rax]
  406ac6:	xor    BYTE PTR [rax],bh
  406ac8:	and    BYTE PTR [rax+0x72],dh
  406acb:	outs   dx,DWORD PTR ds:[rsi]
  406acc:	fs jne 0x406b32
  406acf:	je     0x406b44
  406ad1:	and    BYTE PTR [rcx+0x6e],ah
  406ad4:	and    BYTE PTR fs:[rsi+0x65],ah
  406ad8:	(bad)  
  406ad9:	je     0x406b50
  406adb:	jb     0x406b42
  406add:	jae    0x406aff
  406adf:	je     0x406b49
  406ae1:	(bad)  
  406ae2:	je     0x406b04
  406ae4:	(bad)  
  406ae5:	jb     0x406b4c
  406ae7:	and    BYTE PTR [rcx+0x6e],ch
  406aea:	jae    0x406b60
  406aec:	(bad)  
  406aed:	ins    BYTE PTR es:[rdi],dx
  406aee:	ins    BYTE PTR es:[rdi],dx
  406aef:	gs and BYTE PTR fs:[rdi+0x6e],ch
  406af4:	and    BYTE PTR [rax+rbp*2+0x65],dh
  406af8:	and    BYTE PTR [rdi+rbp*2+0x63],ch
  406afc:	(bad)  
  406afd:	ins    BYTE PTR es:[rdi],dx
  406afe:	and    BYTE PTR [rbx+0x65],dh
  406b01:	jb     0x406b79
  406b03:	gs jb  0x406b34
  406b06:	add    DWORD PTR [rdi],ecx
  406b08:	rex.RB
  406b09:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x7055206e
  406b12:	addr32 jb 0x406b76
  406b15:	fs add DWORD PTR gs:[rsi+0x4c],esp
  406b1a:	(bad)  
  406b1b:	jne    0x406b8b
  406b1d:	movsxd ebp,DWORD PTR [rax+0x20]
  406b20:	(bad)  
  406b21:	and    BYTE PTR [rdi+0x69],dh
  406b24:	jp     0x406b87
  406b26:	jb     0x406b8c
  406b28:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  406b2c:	movsxd ebp,DWORD PTR [rax+0x61]
  406b2f:	outs   dx,BYTE PTR ds:[rsi]
  406b30:	and    BYTE PTR gs:[ecx+0x6f],bh
  406b35:	jne    0x406ba9
  406b37:	and    BYTE PTR [rbp+0x64],ah
  406b3a:	imul   esi,DWORD PTR [rcx+rbp*2+0x6f],0x666f206e
  406b42:	and    BYTE PTR [rbx+0x51],dl
  406b45:	rex.WR and BYTE PTR [rbx+0x65],r10b
  406b49:	jb     0x406bc1
  406b4b:	gs jb  0x406b6e
  406b4e:	xor    dh,BYTE PTR [rax]
  406b50:	xor    BYTE PTR [rax],bh
  406b52:	sub    al,0x20
  406b54:	ins    BYTE PTR es:[rdi],dx
  406b55:	imul   ebp,DWORD PTR [rbx+0x65],0x61686320
  406b5c:	outs   dx,BYTE PTR ds:[rsi]
  406b5d:	imul   ebp,DWORD PTR [esi+0x67],0x6f726620
  406b65:	ins    DWORD PTR es:[rdi],dx
  406b66:	and    BYTE PTR [rbp+riz*2+0x76],al
  406b6a:	gs ins BYTE PTR es:[rdi],dx
  406b6c:	outs   dx,DWORD PTR ds:[rsi]
  406b6d:	jo     0x406bd4
  406b6f:	jb     0x406b91
  406b71:	je     0x406be2
  406b73:	and    BYTE PTR [rbp+0x6e],al
  406b76:	je     0x406bdd
  406b78:	jb     0x406bea
  406b7a:	jb     0x406be5
  406b7c:	jae    0x406be3
  406b7e:	add    DWORD PTR cs:[rcx+rax*2],ebx
  406b82:	fs jbe 0x406be6
  406b85:	outs   dx,BYTE PTR ds:[rsi]
  406b86:	movsxd esp,DWORD PTR [rbp+0x64]
  406b89:	and    BYTE PTR [rbx+0x6c],ah
  406b8c:	jne    0x406c01
  406b8e:	je     0x406bf5
  406b90:	jb     0x406bb2
  406b92:	jo     0x406c06
  406b94:	gs jo  0x406bf8
  406b97:	jb     0x406bfa
  406b99:	je     0x406c04
  406b9b:	outs   dx,DWORD PTR ds:[rsi]
  406b9c:	outs   dx,BYTE PTR ds:[rsi]
  406b9d:	add    DWORD PTR [rbx+0x4c],ecx
  406ba0:	(bad)  
  406ba1:	jne    0x406c11
  406ba3:	movsxd ebp,DWORD PTR [rax+0x20]
  406ba6:	(bad)  
  406ba7:	and    BYTE PTR [rdi+0x69],dh
  406baa:	jp     0x406c0d
  406bac:	jb     0x406c12
  406bae:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  406bb2:	jo     0x406c26
  406bb4:	gs jo  0x406c18
  406bb7:	jb     0x406c1e
  406bb9:	and    BYTE PTR [rcx+0x20],ah
  406bbc:	push   rbx
  406bbd:	push   rcx
  406bbe:	rex.WR and BYTE PTR [rbx+0x65],r10b
  406bc2:	jb     0x406c3a
  406bc4:	gs jb  0x406be7
  406bc7:	xor    dh,BYTE PTR [rax]
  406bc9:	xor    BYTE PTR [rax],bh
  406bcb:	and    BYTE PTR [rsi+0x61],ah
  406bce:	imul   ebp,DWORD PTR [rdi+rbp*2+0x76],0x63207265
  406bd6:	ins    BYTE PTR es:[rdi],dx
  406bd7:	jne    0x406c4c
  406bd9:	je     0x406c40
  406bdb:	jb     0x406bfd
  406bdd:	imul   ebp,DWORD PTR [rsi+0x73],0x6c6c6174
  406be4:	(bad)  
  406be5:	je     0x406c50
  406be7:	outs   dx,DWORD PTR ds:[rsi]
  406be8:	outs   dx,BYTE PTR ds:[rsi]
  406be9:	add    DWORD PTR cs:[rbx],edi
  406bec:	rex.W outs dx,DWORD PTR ds:[rsi]
  406bee:	ja     0x406c10
  406bf0:	je     0x406c61
  406bf2:	and    BYTE PTR [rdi+0x65],al
  406bf5:	je     0x406c17
  406bf7:	push   rbx
  406bf8:	je     0x406c5b
  406bfa:	jb     0x406c70
  406bfc:	gs and BYTE PTR fs:[rdi+0x69],dh
  406c01:	je     0x406c6b
  406c03:	and    BYTE PTR [rbx+0x51],dl
  406c06:	rex.WR and BYTE PTR [rbx+0x65],r10b
  406c0a:	jb     0x406c82
  406c0c:	gs jb  0x406c2f
  406c0f:	xor    dh,BYTE PTR [rax]
  406c11:	xor    BYTE PTR [rax],bh
  406c13:	and    BYTE PTR [rsi+0x61],al
  406c16:	imul   ebp,DWORD PTR [rdi+rbp*2+0x76],0x43207265
  406c1e:	ins    BYTE PTR es:[rdi],dx
  406c1f:	jne    0x406c94
  406c21:	je     0x406c88
  406c23:	jb     0x406c8e
  406c25:	outs   dx,BYTE PTR ds:[rsi]
  406c26:	add    DWORD PTR [ecx+0x52],edx
  406c2a:	gs (bad) 
  406c2c:	and    BYTE PTR fs:[rcx+0x6e],ch
  406c30:	jae    0x406ca6
  406c32:	jb     0x406ca9
  406c34:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  406c38:	outs   dx,BYTE PTR ds:[rsi]
  406c39:	jae    0x406c5b
  406c3b:	outs   dx,DWORD PTR ds:[rsi]
  406c3c:	outs   dx,BYTE PTR ds:[rsi]
  406c3d:	and    BYTE PTR [rax+0x6f],ch
  406c40:	ja     0x406c62
  406c42:	je     0x406cb3
  406c44:	and    BYTE PTR [rdi+0x65],ah
  406c47:	je     0x406c69
  406c49:	jae    0x406cbf
  406c4b:	(bad)  
  406c4c:	jb     0x406cc2
  406c4e:	gs and BYTE PTR fs:[rdi+0x69],dh
  406c53:	je     0x406cbd
  406c55:	and    BYTE PTR [rbx+0x51],dl
  406c58:	rex.WR and BYTE PTR [rbx+0x65],r10b
  406c5c:	jb     0x406cd4
  406c5e:	gs jb  0x406c81
  406c61:	xor    dh,BYTE PTR [rax]
  406c63:	xor    BYTE PTR [rax],bh
  406c65:	and    BYTE PTR [rsi+0x61],ah
  406c68:	imul   ebp,DWORD PTR [rdi+rbp*2+0x76],0x63207265
  406c70:	ins    BYTE PTR es:[rdi],dx
  406c71:	jne    0x406ce6
  406c73:	je     0x406cda
  406c75:	jb     0x406ce0
  406c77:	outs   dx,BYTE PTR ds:[rsi]
  406c78:	add    DWORD PTR cs:[ebx+0x4e],edx
  406c7d:	gs ja  0x406ca0
  406c80:	push   rbx
  406c81:	push   rcx
  406c82:	rex.WR and BYTE PTR [rbx+0x65],r10b
  406c86:	jb     0x406cfe
  406c88:	gs jb  0x406cab
  406c8b:	jae    0x406d01
  406c8d:	(bad)  
  406c8e:	outs   dx,BYTE PTR ds:[rsi]
  406c8f:	fs sub eax,0x6e6f6c61
  406c95:	and    BYTE PTR gs:[rcx+0x6e],ch
  406c99:	jae    0x406d0f
  406c9b:	(bad)  
  406c9c:	ins    BYTE PTR es:[rdi],dx
  406c9d:	ins    BYTE PTR es:[rdi],dx
  406c9e:	(bad)  
  406c9f:	je     0x406d0a
  406ca1:	outs   dx,DWORD PTR ds:[rsi]
  406ca2:	outs   dx,BYTE PTR ds:[rsi]
  406ca3:	and    BYTE PTR [rdi+0x72],ch
  406ca6:	and    BYTE PTR [rcx+0x64],ah
  406ca9:	and    BYTE PTR fs:[rsi+0x65],ah
  406cad:	(bad)  
  406cae:	je     0x406d25
  406cb0:	jb     0x406d17
  406cb2:	jae    0x406cd4
  406cb4:	je     0x406d25
  406cb6:	and    BYTE PTR [rcx+0x6e],ah
  406cb9:	and    BYTE PTR [rbp+0x78],ah
  406cbc:	imul   esi,DWORD PTR [rbx+0x74],0x20676e69
  406cc3:	imul   ebp,DWORD PTR [rsi+0x73],0x6c6c6174
  406cca:	(bad)  
  406ccb:	je     0x406d36
  406ccd:	outs   dx,DWORD PTR ds:[rsi]
  406cce:	outs   dx,BYTE PTR ds:[rsi]
  406ccf:	add    DWORD PTR [rsi+rcx*2],ebp
  406cd2:	gs ja  0x406cf5
  406cd5:	push   rbx
  406cd6:	push   rcx
  406cd7:	rex.WR and BYTE PTR [rbx+0x65],r10b
  406cdb:	jb     0x406d53
  406cdd:	gs jb  0x406d00
  406ce0:	data16 (bad) 
  406ce2:	imul   ebp,DWORD PTR [rdi+rbp*2+0x76],0x63207265
  406cea:	ins    BYTE PTR es:[rdi],dx
  406ceb:	jne    0x406d60
  406ced:	je     0x406d54
  406cef:	jb     0x406d11
  406cf1:	imul   ebp,DWORD PTR [rsi+0x73],0x6c6c6174
  406cf8:	(bad)  
  406cf9:	je     0x406d64
  406cfb:	outs   dx,DWORD PTR ds:[rsi]
  406cfc:	outs   dx,BYTE PTR ds:[rsi]
  406cfd:	add    DWORD PTR [rdx+0x4c],ecx
  406d00:	(bad)  
  406d01:	jne    0x406d71
  406d03:	movsxd ebp,DWORD PTR [rax+0x20]
  406d06:	(bad)  
  406d07:	and    BYTE PTR [rdi+0x69],dh
  406d0a:	jp     0x406d6d
  406d0c:	jb     0x406d72
  406d0e:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  406d12:	imul   ebp,DWORD PTR [rsi+0x73],0x6c6c6174
  406d19:	and    BYTE PTR [rcx+0x20],ah
  406d1c:	jae    0x406d87
  406d1e:	outs   dx,BYTE PTR ds:[rsi]
  406d1f:	ins    BYTE PTR es:[edi],dx
  406d21:	gs sub eax,0x65646f6e
  406d27:	and    BYTE PTR [rbx+0x51],dl
  406d2a:	rex.WR and BYTE PTR [rbx+0x65],r10b
  406d2e:	jb     0x406da6
  406d30:	gs jb  0x406d53
  406d33:	xor    dh,BYTE PTR [rax]
  406d35:	xor    BYTE PTR [rax],bh
  406d37:	and    BYTE PTR [rsi+0x61],ah
  406d3a:	imul   ebp,DWORD PTR [rdi+rbp*2+0x76],0x63207265
  406d42:	ins    BYTE PTR es:[rdi],dx
  406d43:	jne    0x406db8
  406d45:	je     0x406dac
  406d47:	jb     0x406d77
  406d49:	add    DWORD PTR [rbp+0x75614c01],eax
  406d4f:	outs   dx,BYTE PTR ds:[rsi]
  406d50:	movsxd ebp,DWORD PTR [rax+0x20]
  406d53:	(bad)  
  406d54:	and    BYTE PTR [rdi+0x69],dh
  406d57:	jp     0x406dba
  406d59:	jb     0x406dbf
  406d5b:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  406d5f:	imul   ebp,DWORD PTR [rsi+0x73],0x6c6c6174
  406d66:	and    BYTE PTR [rbx+0x51],dl
  406d69:	rex.WR and BYTE PTR [rbx+0x65],r10b
  406d6d:	jb     0x406de5
  406d6f:	gs jb  0x406d92
  406d72:	xor    dh,BYTE PTR [rax]
  406d74:	xor    BYTE PTR [rax],bh
  406d76:	and    BYTE PTR [rcx+0x6e],ch
  406d79:	and    BYTE PTR [rcx+0x20],ah
  406d7c:	outs   dx,BYTE PTR ds:[rsi]
  406d7d:	outs   dx,DWORD PTR ds:[rsi]
  406d7e:	outs   dx,BYTE PTR ds:[rsi]
  406d7f:	sub    eax,0x73756c63
  406d84:	je     0x406deb
  406d86:	jb     0x406ded
  406d88:	and    BYTE PTR fs:[rbp+0x6e],ah
  406d8c:	jbe    0x406df7
  406d8e:	jb     0x406dff
  406d90:	outs   dx,BYTE PTR ds:[rsi]
  406d91:	ins    DWORD PTR es:[rdi],dx
  406d92:	outs   dx,BYTE PTR gs:[rsi]
  406d94:	je     0x406db6
  406d96:	outs   dx,DWORD PTR ds:[rsi]
  406d97:	jb     0x406db9
  406d99:	je     0x406e0a
  406d9b:	and    BYTE PTR [rcx+0x64],ah
  406d9e:	and    BYTE PTR fs:[rsi+0x65],ah
  406da2:	(bad)  
  406da3:	je     0x406e1a
  406da5:	jb     0x406e0c
  406da7:	jae    0x406dc9
  406da9:	je     0x406e1a
  406dab:	and    BYTE PTR [rcx+0x6e],ah
  406dae:	and    BYTE PTR [rbp+0x78],ah
  406db1:	imul   esi,DWORD PTR [rbx+0x74],0x20676e69
  406db8:	push   rbx
  406db9:	push   rcx
  406dba:	rex.WR and BYTE PTR [rbx+0x65],r10b
  406dbe:	jb     0x406e36
  406dc0:	gs jb  0x406de3
  406dc3:	xor    dh,BYTE PTR [rax]
  406dc5:	xor    BYTE PTR [rax],bh
  406dc7:	and    BYTE PTR [rcx+0x6e],ch
  406dca:	jae    0x406e40
  406dcc:	(bad)  
  406dcd:	outs   dx,BYTE PTR ds:[rsi]
  406dce:	movsxd esp,DWORD PTR [rbp+0x2e]
  406dd1:	add    DWORD PTR [rbx],esp
  406dd3:	rex.WB outs dx,BYTE PTR ds:[rsi]
  406dd5:	jae    0x406e4b
  406dd7:	(bad)  
  406dd8:	ins    BYTE PTR es:[rdi],dx
  406dd9:	ins    BYTE PTR es:[rdi],dx
  406dda:	and    BYTE PTR [rdx+0x61],ah
  406ddd:	jae    0x406e44
  406ddf:	and    BYTE PTR fs:[rdi+0x6e],ch
  406de3:	and    BYTE PTR [rbx+0x6f],ah
  406de6:	outs   dx,BYTE PTR ds:[rsi]
  406de7:	imul   sp,WORD PTR [rdi+0x75],0x6172
  406ded:	je     0x406e58
  406def:	outs   dx,DWORD PTR ds:[rsi]
  406df0:	outs   dx,BYTE PTR ds:[rsi]
  406df1:	and    BYTE PTR [rsi+0x69],ah
  406df4:	ins    BYTE PTR es:[rdi],dx
  406df5:	add    DWORD PTR gs:[rsi],edi
  406df8:	push   rbp
  406df9:	jae    0x406e60
  406dfb:	and    BYTE PTR [rcx+0x6e],ah
  406dfe:	and    BYTE PTR [rbp+0x78],ah
  406e01:	imul   esi,DWORD PTR [rbx+0x74],0x20676e69
  406e08:	movsxd ebp,DWORD PTR [rdi+0x6e]
  406e0b:	imul   sp,WORD PTR [rdi+0x75],0x6172
  406e11:	je     0x406e7c
  406e13:	outs   dx,DWORD PTR ds:[rsi]
  406e14:	outs   dx,BYTE PTR ds:[rsi]
  406e15:	and    BYTE PTR [rsi+0x69],ah
  406e18:	ins    BYTE PTR es:[rdi],dx
  406e19:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  406e1e:	imul   ebp,DWORD PTR [rsi+0x73],0x6c6c6174
  406e25:	and    BYTE PTR [rbx+0x51],dl
  406e28:	rex.WR and BYTE PTR [rbx+0x65],r10b
  406e2c:	jb     0x406ea4
  406e2e:	gs jb  0x406e51
  406e31:	xor    dh,BYTE PTR [rax]
  406e33:	xor    BYTE PTR [rax],bh
  406e35:	add    DWORD PTR cs:[rcx+rcx*2],ecx
  406e39:	outs   dx,BYTE PTR ds:[rsi]
  406e3a:	jae    0x406eb0
  406e3c:	(bad)  
  406e3d:	ins    BYTE PTR es:[rdi],dx
  406e3e:	ins    BYTE PTR es:[rdi],dx
  406e3f:	(bad)  
  406e40:	je     0x406eab
  406e42:	outs   dx,DWORD PTR ds:[rsi]
  406e43:	outs   dx,BYTE PTR ds:[rsi]
  406e44:	add    DWORD PTR [rdi],edi
  406e46:	push   rsp
  406e47:	push   0x70732065
  406e4c:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  406e50:	imul   esp,DWORD PTR [rbp+0x64],0x6c6f6620
  406e57:	fs gs jb 0x406e7b
  406e5b:	imul   esi,DWORD PTR [rbx+0x20],0x20746f6e
  406e62:	imul   ebp,DWORD PTR [rsi+0x20],0x61762061
  406e69:	ins    BYTE PTR es:[rdi],dx
  406e6a:	imul   esp,DWORD PTR [rax+riz*1+0x69],0x6174736e
  406e72:	ins    BYTE PTR es:[rdi],dx
  406e73:	ins    BYTE PTR es:[rdi],dx
  406e74:	(bad)  
  406e75:	je     0x406ee0
  406e77:	outs   dx,DWORD PTR ds:[rsi]
  406e78:	outs   dx,BYTE PTR ds:[rsi]
  406e79:	and    BYTE PTR [rcx+rbp*2+0x72],ah
  406e7d:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
  406e82:	jns    0x406eb2
  406e84:	and    BYTE PTR [rcx],al
  406e86:	sbb    al,0x27
  406e88:	jnp    0x406eba
  406e8a:	jge    0x406eb3
  406e8c:	and    BYTE PTR [rcx+0x73],ch
  406e8f:	and    BYTE PTR [rsi+0x6f],ch
  406e92:	je     0x406eb4
  406e94:	(bad)  
  406e95:	and    BYTE PTR [rsi+0x61],dh
  406e98:	ins    BYTE PTR es:[rdi],dx
  406e99:	imul   esp,DWORD PTR [rax+riz*1+0x66],0x65646c6f
  406ea1:	jb     0x406ed1
  406ea3:	add    DWORD PTR [rdi],edx
  406ea5:	push   rsp
  406ea6:	push   0x6f662065
  406eab:	ins    BYTE PTR es:[rdi],dx
  406eac:	fs gs jb 0x406ed0
  406eb0:	imul   esi,DWORD PTR [rbx+0x20],0x20746f6e
  406eb7:	jbe    0x406f1a
  406eb9:	ins    BYTE PTR es:[rdi],dx
  406eba:	imul   esp,DWORD PTR [rcx+rax*1+0x29],0x7d307b27
  406ec2:	(bad)  
  406ec3:	and    BYTE PTR [rcx+0x73],ch
  406ec6:	and    BYTE PTR [rsi+0x6f],ch
  406ec9:	je     0x406eeb
  406ecb:	(bad)  
  406ecc:	and    BYTE PTR [rsi+0x61],dh
  406ecf:	ins    BYTE PTR es:[rdi],dx
  406ed0:	imul   esp,DWORD PTR [rax+riz*1+0x69],0x6174736e
  406ed8:	ins    BYTE PTR es:[rdi],dx
  406ed9:	ins    BYTE PTR es:[rdi],dx
  406eda:	(bad)  
  406edb:	je     0x406f46
  406edd:	outs   dx,DWORD PTR ds:[rsi]
  406ede:	outs   dx,BYTE PTR ds:[rsi]
  406edf:	and    BYTE PTR [rsi+0x6f],ah
  406ee2:	ins    BYTE PTR es:[rdi],dx
  406ee3:	fs gs jb 0x406f15
  406ee7:	add    DWORD PTR [rbx],ecx
  406ee9:	rex.WRB (bad) 
  406eeb:	imul   ebp,DWORD PTR [rsi+0x74],0x6e616e65
  406ef2:	movsxd esp,DWORD PTR [rbp+0x1]
  406ef5:	sbb    DWORD PTR [rsi+0x6f],ecx
  406ef8:	and    BYTE PTR [rbx+0x50],al
  406efb:	push   rbp
  406efc:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  406f00:	and    BYTE PTR gs:[rdi+0x61],dh
  406f04:	jae    0x406f26
  406f06:	jb     0x406f6d
  406f08:	jno    0x406f7f
  406f0a:	gs jae 0x406f81
  406f0d:	gs add DWORD PTR fs:[rip+0x20656854],esi        # 0x20a5d769
  406f15:	ins    DWORD PTR es:[rdi],dx
  406f16:	gs imul esp,DWORD PTR fs:[rcx+0x20],0x73656f64
  406f1f:	and    BYTE PTR [rsi+0x6f],ch
  406f22:	je     0x406f44
  406f24:	movsxd ebp,DWORD PTR [rdi+0x6e]
  406f27:	je     0x406f8a
  406f29:	imul   ebp,DWORD PTR [rsi+0x20],0x20796e61
  406f30:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  406f34:	outs   dx,BYTE PTR ds:[rsi]
  406f35:	and    BYTE PTR [rax+0x72],dh
  406f38:	outs   dx,DWORD PTR ds:[rsi]
  406f39:	movsxd esp,DWORD PTR [rbp+0x73]
  406f3c:	jae    0x406fad
  406f3e:	jb     0x406f60
  406f40:	je     0x406fbb
  406f42:	jo     0x406fa9
  406f44:	jae    0x406f74
  406f46:	add    DWORD PTR [rdi+rcx*2],edx
  406f49:	outs   dx,BYTE PTR ds:[rsi]
  406f4a:	ins    BYTE PTR es:[rdi],dx
  406f4b:	imul   ebp,DWORD PTR [rsi+0x65],0x6c655220
  406f52:	gs (bad) 
  406f54:	jae    0x406fbb
  406f56:	and    BYTE PTR [rsi+0x6f],cl
  406f59:	je     0x406fc0
  406f5b:	jae    0x406f5e
  406f5d:	cs push rsi
  406f5f:	imul   esp,DWORD PTR [rbp+0x77],0x65687420
  406f66:	and    BYTE PTR [rcx+riz*2+0x74],ch
  406f6a:	gs jae 0x406fe1
  406f6d:	and    BYTE PTR [rcx+0x6e],ch
  406f70:	outs   dx,WORD PTR ds:[rsi]
  406f72:	jb     0x406fe1
  406f74:	(bad)  
  406f75:	je     0x406fe0
  406f77:	outs   dx,DWORD PTR ds:[rsi]
  406f78:	outs   dx,BYTE PTR ds:[rsi]
  406f79:	and    BYTE PTR [rcx+0x62],ah
  406f7c:	outs   dx,DWORD PTR ds:[rsi]
  406f7d:	jne    0x406ff3
  406f7f:	and    BYTE PTR [rax+rbp*2+0x65],dh
  406f83:	and    BYTE PTR [rdx+0x65],dh
  406f86:	ins    BYTE PTR es:[rdi],dx
  406f87:	gs (bad) 
  406f89:	jae    0x406ff0
  406f8b:	add    DWORD PTR cs:[rdi],eax
  406f8e:	rex.WRXB jo 0x407005
  406f91:	imul   ebp,DWORD PTR [rdi+0x6e],0x53720173
  406f98:	jo     0x406fff
  406f9a:	movsxd ebp,DWORD PTR [rcx+0x66]
  406f9d:	jns    0x406fbf
  406f9f:	je     0x407009
  406fa1:	and    BYTE PTR gs:[rcx+0x72],ah
  406fa5:	movsxd ebp,DWORD PTR [rax+0x69]
  406fa8:	je     0x40700f
  406faa:	movsxd esi,DWORD PTR [rbp+rsi*2+0x72]
  406fae:	and    BYTE PTR gs:[rdi+0x66],ch
  406fb2:	and    BYTE PTR [rbx+0x51],dl
  406fb5:	rex.WR and BYTE PTR [rbx+0x65],r10b
  406fb9:	jb     0x407031
  406fbb:	gs jb  0x406fde
  406fbe:	xor    dh,BYTE PTR [rax]
  406fc0:	xor    BYTE PTR [rax],bh
  406fc2:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  406fc6:	imul   ebp,DWORD PTR [rsi+0x73],0x6c6c6174
  406fcd:	sub    al,0x20
  406fcf:	(bad)  
  406fd0:	outs   dx,BYTE PTR ds:[rsi]
  406fd1:	and    BYTE PTR fs:[rbx+0x70],dh
  406fd5:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  406fd9:	jns    0x406ffb
  406fdb:	je     0x407045
  406fdd:	and    BYTE PTR gs:[rdi+rbp*2+0x63],ch
  406fe2:	(bad)  
  406fe3:	je     0x40704e
  406fe5:	outs   dx,DWORD PTR ds:[rsi]
  406fe6:	outs   dx,BYTE PTR ds:[rsi]
  406fe7:	and    BYTE PTR [rdi+0x66],ch
  406fea:	and    BYTE PTR [rbx+0x51],dl
  406fed:	rex.WR and BYTE PTR [rbx+0x65],r10b
  406ff1:	jb     0x407069
  406ff3:	gs jb  0x407016
  406ff6:	imul   ebp,DWORD PTR [rsi+0x73],0x6c6c6174
  406ffd:	(bad)  
  406ffe:	je     0x407069
  407000:	outs   dx,DWORD PTR ds:[rsi]
  407001:	outs   dx,BYTE PTR ds:[rsi]
  407002:	and    BYTE PTR [rbp+0x65],ch
  407005:	imul   esp,DWORD PTR fs:[rcx+0x2e],0x6c500801
  40700d:	(bad)  
  40700e:	outs   dx,BYTE PTR ds:[rsi]
  40700f:	outs   dx,BYTE PTR ds:[rsi]
  407010:	imul   ebp,DWORD PTR [rsi+0x67],0x64411b01
  407017:	jbe    0x40707a
  407019:	outs   dx,BYTE PTR ds:[rsi]
  40701a:	movsxd esp,DWORD PTR [rbp+0x64]
  40701d:	and    BYTE PTR [rbx+0x6c],ah
  407020:	jne    0x407095
  407022:	je     0x407089
  407024:	jb     0x407046
  407026:	movsxd ebp,DWORD PTR [rdi+0x6d]
  407029:	jo     0x407097
  40702b:	gs je  0x407097
  40702e:	outs   dx,DWORD PTR ds:[rsi]
  40702f:	outs   dx,BYTE PTR ds:[rsi]
  407030:	add    DWORD PTR [rcx+0x4c],edi
  407033:	(bad)  
  407034:	jne    0x4070a4
  407036:	movsxd ebp,DWORD PTR [rax+0x20]
  407039:	(bad)  
  40703a:	and    BYTE PTR [rdi+0x69],dh
  40703d:	jp     0x4070a0
  40703f:	jb     0x4070a5
  407041:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  407045:	movsxd ebp,DWORD PTR [rdi+0x6d]
  407048:	jo     0x4070b6
  40704a:	gs je  0x4070b2
  40704d:	and    BYTE PTR [rcx+0x20],ah
  407050:	push   rbx
  407051:	push   rcx
  407052:	rex.WR and BYTE PTR [rbx+0x65],r10b
  407056:	jb     0x4070ce
  407058:	gs jb  0x40707b
  40705b:	xor    dh,BYTE PTR [rax]
  40705d:	xor    BYTE PTR [rax],bh
  40705f:	and    BYTE PTR [rsi+0x61],ah
  407062:	imul   ebp,DWORD PTR [rdi+rbp*2+0x76],0x63207265
  40706a:	ins    BYTE PTR es:[rdi],dx
  40706b:	jne    0x4070e0
  40706d:	je     0x4070d4
  40706f:	jb     0x407091
  407071:	data16 jb 0x4070e3
  407074:	ins    DWORD PTR es:[rdi],dx
  407075:	and    BYTE PTR [rcx+0x20],ah
  407078:	ins    BYTE PTR es:[rdi],dx
  407079:	imul   esi,DWORD PTR [rbx+0x74],0x20666f20
  407080:	movsxd ebp,DWORD PTR [rbp+rsi*2+0x73]
  407084:	je     0x4070eb
  407086:	jb     0x4070b5
  407088:	jo     0x4070fc
  40708a:	gs jo  0x4070ee
  40708d:	jb     0x4070f4
  40708f:	and    BYTE PTR fs:[rbx+0x51],dl
  407093:	rex.WR and BYTE PTR [rbx+0x65],r10b
  407097:	jb     0x40710f
  407099:	gs jb  0x4070bc
  40709c:	xor    dh,BYTE PTR [rax]
  40709e:	xor    BYTE PTR [rax],bh
  4070a0:	and    BYTE PTR [rcx+0x6e],ch
  4070a3:	jae    0x407119
  4070a5:	(bad)  
  4070a6:	outs   dx,BYTE PTR ds:[rsi]
  4070a7:	movsxd esp,DWORD PTR [rbp+0x73]
  4070aa:	add    DWORD PTR cs:[rax],esi
  4070ad:	rex.WRB
  4070ae:	gs imul esp,DWORD PTR fs:[rcx+0x20],0x73656f64
  4070b7:	and    BYTE PTR [rsi+0x6f],ch
  4070ba:	je     0x4070dc
  4070bc:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4070bf:	je     0x407122
  4070c1:	imul   ebp,DWORD PTR [rsi+0x20],0x75716572
  4070c8:	gs jae 0x40713f
  4070cb:	gs and BYTE PTR fs:[rax+0x72],dh
  4070d0:	outs   dx,DWORD PTR ds:[rsi]
  4070d1:	movsxd esp,DWORD PTR [rbp+0x73]
  4070d4:	jae    0x407145
  4070d6:	jb     0x4070f8
  4070d8:	je     0x407153
  4070da:	jo     0x407141
  4070dc:	add    DWORD PTR cs:[rip+0x69676552],ebp        # 0x69a7d635
  4070e3:	jae    0x407159
  4070e5:	gs jb  0x407108
  4070e8:	jns    0x407159
  4070ea:	jne    0x40715e
  4070ec:	and    BYTE PTR [rbx+0x6f],ah
  4070ef:	jo     0x40716a
  4070f1:	and    BYTE PTR [rdi+0x66],ch
  4070f4:	and    BYTE PTR [rbx+0x51],dl
  4070f7:	rex.WR and BYTE PTR [rbx+0x65],r10b
  4070fb:	jb     0x407173
  4070fd:	gs jb  0x407120
  407100:	xor    dh,BYTE PTR [rax]
  407102:	xor    BYTE PTR [rax],bh
  407104:	and    BYTE PTR [rbp+0x78],al
  407107:	jo     0x40717b
  407109:	gs jae 0x40717f
  40710c:	add    ecx,esi
  40710e:	add    DWORD PTR [rdx+0x65],edx
  407111:	imul   esi,DWORD PTR [ebx+0x74],0x74207265
  407119:	outs   dx,DWORD PTR ds:[rsi]
  40711a:	and    BYTE PTR [rdx+0x65],dh
  40711d:	movsxd esp,DWORD PTR [rbp+0x69]
  407120:	jbe    0x407187
  407122:	and    BYTE PTR [rbp+0x2d],ah
  407125:	ins    DWORD PTR es:[rdi],dx
  407126:	(bad)  
  407127:	imul   ebp,DWORD PTR [rax+riz*1+0x6e],0x6669746f
  40712f:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
  407136:	and    BYTE PTR [rdi+0x66],ch
  407139:	and    BYTE PTR [rax+0x72],dh
  40713c:	outs   dx,DWORD PTR ds:[rsi]
  40713d:	fs jne 0x4071a3
  407140:	je     0x407162
  407142:	jne    0x4071b4
  407144:	fs (bad) 
  407146:	je     0x4071ad
  407148:	jae    0x40716a
  40714a:	(bad)  
  40714b:	outs   dx,BYTE PTR ds:[rsi]
  40714c:	and    BYTE PTR fs:[rbp+0x70],dh
  407150:	movsxd ebp,DWORD PTR [rdi+0x6d]
  407153:	imul   ebp,DWORD PTR [rsi+0x67],0x6c657220
  40715a:	gs (bad) 
  40715c:	jae    0x4071c3
  40715e:	jae    0x407180
  407160:	jae    0x4071d2
  407162:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  407166:	imul   esp,DWORD PTR [rbx+0x20],0x53206f74
  40716d:	push   rcx
  40716e:	rex.WR and BYTE PTR [rbx+0x65],r10b
  407172:	jb     0x4071ea
  407174:	gs jb  0x407197
  407177:	xor    dh,BYTE PTR [rax]
  407179:	xor    BYTE PTR [rax],bh
  40717b:	and    BYTE PTR [rbp+0x78],al
  40717e:	jo     0x4071f2
  407180:	gs jae 0x4071f6
  407183:	and    BYTE PTR cs:[rax+rbp*2+0x69],dl
  407188:	jae    0x4071aa
  40718a:	imul   esi,DWORD PTR [esi+0x65],0x6f792073
  407192:	jne    0x4071b4
  407194:	(bad)  
  407195:	movsxd esp,DWORD PTR [rbx+0x65]
  407198:	jae    0x40720d
  40719a:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  40719e:	data16 jb 0x407206
  4071a1:	and    BYTE PTR gs:[rdx+0x65],dh
  4071a5:	imul   esi,DWORD PTR [ebx+0x74],0x69746172
  4071ad:	outs   dx,DWORD PTR ds:[rsi]
  4071ae:	outs   dx,BYTE PTR ds:[rsi]
  4071af:	and    BYTE PTR [rdx+0x65],ah
  4071b2:	outs   dx,BYTE PTR ds:[rsi]
  4071b3:	imul   si,WORD PTR gs:[rbx+rsi*2+0x20],0x666f
  4071bb:	data16 gs jb 0x407224
  4071bf:	and    BYTE PTR fs:[rdi+0x6e],ch
  4071c3:	ins    BYTE PTR es:[rdi],dx
  4071c4:	jns    0x4071e6
  4071c6:	je     0x407237
  4071c8:	and    BYTE PTR [rdx+0x65],dh
  4071cb:	imul   esi,DWORD PTR [ebx+0x74],0x64657265
  4071d3:	and    BYTE PTR [rbp+0x73],dh
  4071d6:	gs jb  0x40724c
  4071d9:	sub    al,0x20
  4071db:	jae    0x407252
  4071dd:	movsxd ebp,DWORD PTR [rax+0x20]
  4071e0:	(bad)  
  4071e1:	jae    0x407203
  4071e3:	je     0x40724d
  4071e5:	and    BYTE PTR gs:[rbx+0x51],dl
  4071e9:	rex.WR and BYTE PTR [rbx+0x65],r10b
  4071ed:	jb     0x407265
  4071ef:	gs jb  0x407212
  4071f2:	rex.RB js 0x407265
  4071f5:	jb     0x40725c
  4071f7:	jae    0x40726c
  4071f9:	and    BYTE PTR [rbp+0x42],ah
  4071fc:	outs   dx,DWORD PTR ds:[rsi]
  4071fd:	outs   dx,DWORD PTR ds:[rsi]
  4071fe:	imul   ebp,DWORD PTR [rsi],0x1
  407201:	cs push rdx
  407203:	gs ins DWORD PTR es:[rdi],dx
  407205:	outs   dx,DWORD PTR ds:[rsi]
  407206:	jbe    0x40726d
  407208:	and    BYTE PTR [rsi+0x6f],ch
  40720b:	fs and BYTE PTR gs:[rsi+0x72],ah
  407210:	outs   dx,DWORD PTR ds:[rsi]
  407211:	ins    DWORD PTR es:[rdi],dx
  407212:	and    BYTE PTR [rcx+0x20],ah
  407215:	push   rbx
  407216:	push   rcx
  407217:	rex.WR and BYTE PTR [rbx+0x65],r10b
  40721b:	jb     0x407293
  40721d:	gs jb  0x407240
  407220:	data16 (bad) 
  407222:	imul   ebp,DWORD PTR [rdi+rbp*2+0x76],0x63207265
  40722a:	ins    BYTE PTR es:[rdi],dx
  40722b:	jne    0x4072a0
  40722d:	je     0x407294
  40722f:	jb     0x407232
  407231:	push   rbx
  407232:	rex.WR (bad) 
  407234:	jne    0x4072a4
  407236:	movsxd ebp,DWORD PTR [rax+0x20]
  407239:	(bad)  
  40723a:	and    BYTE PTR [rdi+0x69],dh
  40723d:	jp     0x4072a0
  40723f:	jb     0x4072a5
  407241:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  407245:	jb     0x4072ac
  407247:	ins    DWORD PTR es:[rdi],dx
  407248:	outs   dx,DWORD PTR ds:[rsi]
  407249:	jbe    0x4072b0
  40724b:	and    BYTE PTR [rcx+0x20],ah
  40724e:	outs   dx,BYTE PTR ds:[rsi]
  40724f:	outs   dx,DWORD PTR ds:[rsi]
  407250:	fs and BYTE PTR gs:[rsi+0x72],ah
  407255:	outs   dx,DWORD PTR ds:[rsi]
  407256:	ins    DWORD PTR es:[rdi],dx
  407257:	and    BYTE PTR [rcx+0x6e],ah
  40725a:	and    BYTE PTR [rbp+0x78],ah
  40725d:	imul   esi,DWORD PTR [rbx+0x74],0x20676e69
  407264:	push   rbx
  407265:	push   rcx
  407266:	rex.WR and BYTE PTR [rbx+0x65],r10b
  40726a:	jb     0x4072e2
  40726c:	gs jb  0x40728f
  40726f:	xor    dh,BYTE PTR [rax]
  407271:	xor    BYTE PTR [rax],bh
  407273:	and    BYTE PTR [rsi+0x61],ah
  407276:	imul   ebp,DWORD PTR [rdi+rbp*2+0x76],0x63207265
  40727e:	ins    BYTE PTR es:[rdi],dx
  40727f:	jne    0x4072f4
  407281:	je     0x4072e8
  407283:	jb     0x4072b3
  407285:	add    DWORD PTR [rsi],eax
  407287:	push   rdx
  407288:	gs jo  0x4072ec
  40728b:	imul   esi,DWORD PTR [rdx+0x1],0x75614c41
  407292:	outs   dx,BYTE PTR ds:[rsi]
  407293:	movsxd ebp,DWORD PTR [rax+0x20]
  407296:	(bad)  
  407297:	and    BYTE PTR [rdi+0x69],dh
  40729a:	jp     0x4072fd
  40729c:	jb     0x407302
  40729e:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  4072a2:	jb     0x407309
  4072a4:	jo     0x407307
  4072a6:	imul   esi,DWORD PTR [rdx+0x20],0x6f632061
  4072ad:	jb     0x407321
  4072af:	jne    0x407321
  4072b1:	je     0x4072d3
  4072b3:	push   rbx
  4072b4:	push   rcx
  4072b5:	rex.WR and BYTE PTR [rbx+0x65],r10b
  4072b9:	jb     0x407331
  4072bb:	gs jb  0x4072de
  4072be:	xor    dh,BYTE PTR [rax]
  4072c0:	xor    BYTE PTR [rax],bh
  4072c2:	and    BYTE PTR [rcx+0x6e],ch
  4072c5:	jae    0x40733b
  4072c7:	(bad)  
  4072c8:	ins    BYTE PTR es:[rdi],dx
  4072c9:	ins    BYTE PTR es:[rdi],dx
  4072ca:	(bad)  
  4072cb:	je     0x407336
  4072cd:	outs   dx,DWORD PTR ds:[rsi]
  4072ce:	outs   dx,BYTE PTR ds:[rsi]
  4072cf:	add    DWORD PTR cs:[rdx],esp
  4072d2:	rex.W (bad) 
  4072d4:	jb     0x40733a
  4072d6:	ja     0x407339
  4072d8:	jb     0x40733f
  4072da:	and    BYTE PTR [rcx+0x6e],ah
  4072dd:	and    BYTE PTR fs:[rbx+0x6f],dl
  4072e1:	data16 je 0x40735b
  4072e4:	(bad)  
  4072e5:	jb     0x40734c
  4072e7:	and    BYTE PTR [rdx+0x65],dl
  4072ea:	jno    0x407361
  4072ec:	imul   esi,DWORD PTR [rdx+0x65],0x746e656d
  4072f3:	jae    0x4072f6
  4072f5:	sub    al,0x56
  4072f7:	imul   esp,DWORD PTR [rbp+0x77],0x65687420
  4072fe:	and    BYTE PTR [rax+0x61],ch
  407301:	jb     0x407367
  407303:	ja     0x407366
  407305:	jb     0x40736c
  407307:	and    BYTE PTR [rcx+0x6e],ah
  40730a:	and    BYTE PTR fs:[rbx+0x6f],dh
  40730e:	data16 je 0x407388
  407311:	(bad)  
  407312:	jb     0x407379
  407314:	and    BYTE PTR [rdx+0x65],dh
  407317:	jno    0x40738e
  407319:	imul   esi,DWORD PTR [rdx+0x65],0x746e656d
  407320:	jae    0x407350
  407322:	add    DWORD PTR [rcx],ecx
  407324:	push   rdx
  407325:	gs jae 0x407397
  407328:	jne    0x40739c
  40732a:	movsxd esp,DWORD PTR [rbp+0x73]
  40732d:	add    DWORD PTR [rbx+rdx*2],ebx
  407330:	jns    0x4073a5
  407332:	je     0x407399
  407334:	ins    DWORD PTR es:[rdi],dx
  407335:	and    BYTE PTR [rbx+0x6f],al
  407338:	outs   dx,BYTE PTR ds:[rsi]
  407339:	imul   sp,WORD PTR [rdi+0x75],0x6172
  40733f:	je     0x4073aa
  407341:	outs   dx,DWORD PTR ds:[rsi]
  407342:	outs   dx,BYTE PTR ds:[rsi]
  407343:	and    BYTE PTR [rbx+0x68],al
  407346:	movsxd ebp,DWORD PTR gs:[rbx+0x65]
  40734a:	jb     0x40734d
  40734c:	pop    rax
  40734d:	rex.WR (bad) 
  40734f:	jne    0x4073bf
  407351:	movsxd ebp,DWORD PTR [rax+0x20]
  407354:	(bad)  
  407355:	and    BYTE PTR [rdi+rbp*2+0x6f],dh
  407359:	ins    BYTE PTR es:[rdi],dx
  40735a:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  40735e:	movsxd ebp,DWORD PTR [rax+0x65]
  407361:	movsxd ebp,DWORD PTR [rbx+0x20]
  407364:	outs   dx,WORD PTR ds:[rsi]
  407366:	jb     0x407388
  407368:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40736b:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x7420736e
  407374:	push   0x70207461
  407379:	jb     0x4073e0
  40737b:	jbe    0x4073e2
  40737d:	outs   dx,BYTE PTR ds:[rsi]
  40737e:	je     0x4073a0
  407380:	(bad)  
  407381:	and    BYTE PTR [rbx+0x75],dh
  407384:	movsxd esp,DWORD PTR [rbx+0x65]
  407387:	jae    0x4073fc
  407389:	data16 jne 0x4073f8
  40738c:	and    BYTE PTR [rbx+0x51],dl
  40738f:	rex.WR and BYTE PTR [rbx+0x65],r10b
  407393:	jb     0x40740b
  407395:	gs jb  0x4073b8
  407398:	imul   ebp,DWORD PTR [rsi+0x73],0x6c6c6174
  40739f:	(bad)  
  4073a0:	je     0x40740b
  4073a2:	outs   dx,DWORD PTR ds:[rsi]
  4073a3:	outs   dx,BYTE PTR ds:[rsi]
  4073a4:	add    DWORD PTR cs:[rsi],edx
  4073a7:	push   rbx
  4073a8:	movsxd esi,DWORD PTR gs:[rbp+0x72]
  4073ac:	imul   esi,DWORD PTR [rcx+rdi*2+0x20],0x75636f44
  4073b4:	ins    DWORD PTR es:[rdi],dx
  4073b5:	outs   dx,BYTE PTR gs:[rsi]
  4073b7:	je     0x40741a
  4073b9:	je     0x407424
  4073bb:	outs   dx,DWORD PTR ds:[rsi]
  4073bc:	outs   dx,BYTE PTR ds:[rsi]
  4073bd:	add    DWORD PTR [rax],esp
  4073bf:	push   rsi
  4073c0:	imul   esp,DWORD PTR [rbp+0x77],0x65687420
  4073c7:	and    BYTE PTR [rbx+0x65],dh
  4073ca:	movsxd esi,DWORD PTR [rbp+0x72]
  4073cd:	imul   esi,DWORD PTR [rcx+rdi*2+0x20],0x75636f64
  4073d5:	ins    DWORD PTR es:[rdi],dx
  4073d6:	outs   dx,BYTE PTR gs:[rsi]
  4073d8:	je     0x40743b
  4073da:	je     0x407445
  4073dc:	outs   dx,DWORD PTR ds:[rsi]
  4073dd:	outs   dx,BYTE PTR ds:[rsi]
  4073de:	add    DWORD PTR cs:[rax],ebx
  4073e1:	rex.WRXB outs dx,BYTE PTR ds:[rsi]
  4073e3:	ins    BYTE PTR es:[rdi],dx
  4073e4:	imul   ebp,DWORD PTR [rsi+0x65],0x736e4920
  4073eb:	je     0x40744e
  4073ed:	ins    BYTE PTR es:[rdi],dx
  4073ee:	ins    BYTE PTR es:[rdi],dx
  4073ef:	(bad)  
  4073f0:	je     0x40745b
  4073f2:	outs   dx,DWORD PTR ds:[rsi]
  4073f3:	outs   dx,BYTE PTR ds:[rsi]
  4073f4:	and    BYTE PTR [rax+0x65],cl
  4073f7:	ins    BYTE PTR es:[rdi],dx
  4073f8:	jo     0x4073fb
  4073fa:	sub    eax,0x6e75614c
  4073ff:	movsxd ebp,DWORD PTR [rax+0x20]
  407402:	je     0x40746c
  407404:	and    BYTE PTR gs:[rdi+0x6e],ch
  407408:	ins    BYTE PTR es:[rdi],dx
  407409:	imul   ebp,DWORD PTR [rsi+0x65],0x736e6920
  407410:	je     0x407473
  407412:	ins    BYTE PTR es:[rdi],dx
  407413:	ins    BYTE PTR es:[rdi],dx
  407414:	(bad)  
  407415:	je     0x407480
  407417:	outs   dx,DWORD PTR ds:[rsi]
  407418:	outs   dx,BYTE PTR ds:[rsi]
  407419:	and    BYTE PTR [rdi+rbp*2+0x63],ah
  40741d:	jne    0x40748c
  40741f:	outs   dx,BYTE PTR gs:[rsi]
  407421:	je     0x407484
  407423:	je     0x40748e
  407425:	outs   dx,DWORD PTR ds:[rsi]
  407426:	outs   dx,BYTE PTR ds:[rsi]
  407427:	add    DWORD PTR cs:[rbx],ebx
  40742a:	push   rbx
  40742b:	push   rcx
  40742c:	rex.WR and BYTE PTR [rbx+0x65],r10b
  407430:	jb     0x4074a8
  407432:	gs jb  0x407455
  407435:	rex.R
  407436:	gs jbe 0x40749e
  407439:	ins    BYTE PTR es:[rdi],dx
  40743a:	outs   dx,DWORD PTR ds:[rsi]
  40743b:	jo     0x4074a2
  40743d:	jb     0x40745f
  40743f:	rex.XB
  407440:	outs   dx,BYTE PTR gs:[rsi]
  407442:	je     0x4074a9
  407444:	jb     0x407447
  407446:	jnp    0x40748f
  407448:	gs je  0x40746b
  40744b:	outs   dx,DWORD PTR fs:[rsi]
  40744d:	ja     0x4074bd
  40744f:	ins    BYTE PTR es:[rdi],dx
  407450:	outs   dx,DWORD PTR ds:[rsi]
  407451:	(bad)  
  407452:	fs jae 0x407481
  407455:	and    BYTE PTR [rdx+0x65],dh
  407458:	(bad)  
  407459:	and    BYTE PTR fs:[rdx+0x6c],ah
  40745d:	outs   dx,DWORD PTR ds:[rsi]
  40745e:	addr32 jae 0x40748d
  407461:	and    BYTE PTR [rdi+0x72],ch
  407464:	and    BYTE PTR [rsi+0x69],ah
  407467:	outs   dx,BYTE PTR ds:[rsi]
  407468:	and    BYTE PTR fs:[rcx+0x6e],ch
  40746c:	outs   dx,WORD PTR ds:[rsi]
  40746e:	jb     0x4074dd
  407470:	(bad)  
  407471:	je     0x4074dc
  407473:	outs   dx,DWORD PTR ds:[rsi]
  407474:	outs   dx,BYTE PTR ds:[rsi]
  407475:	and    BYTE PTR [rcx+0x6e],ah
  407478:	and    BYTE PTR fs:[rbp+0x76],ah
  40747c:	outs   dx,BYTE PTR gs:[rsi]
  40747e:	je     0x4074f3
  407480:	and    BYTE PTR [rdi+0x66],ch
  407483:	and    BYTE PTR [rcx+0x6e],ch
  407486:	je     0x4074ed
  407488:	jb     0x4074ef
  40748a:	jae    0x407500
  40748c:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  407490:	fs gs jbe 0x4074f9
  407494:	ins    BYTE PTR es:[rdi],dx
  407495:	outs   dx,DWORD PTR ds:[rsi]
  407496:	jo     0x4074fd
  407498:	jb     0x40750d
  40749a:	and    BYTE PTR [rdi+0x6f],dh
  40749d:	jb     0x40750a
  40749f:	imul   ebp,DWORD PTR [rsi+0x67],0x74697720
  4074a6:	push   0x74616420
  4074ab:	(bad)  
  4074ac:	and    BYTE PTR [rbx+0x74],dh
  4074af:	outs   dx,DWORD PTR ds:[rsi]
  4074b0:	jb     0x407517
  4074b2:	and    BYTE PTR fs:[rcx+0x6e],ch
  4074b6:	and    BYTE PTR [rbx+0x51],dl
  4074b9:	rex.WR and BYTE PTR [rbx+0x65],r10b
  4074bd:	jb     0x407535
  4074bf:	gs jb  0x4074f0
  4074c2:	add    DWORD PTR [rsi],esp
  4074c4:	push   rbx
  4074c5:	push   rcx
  4074c6:	rex.WR and BYTE PTR [rbx+0x65],r10b
  4074ca:	jb     0x407542
  4074cc:	gs jb  0x4074ef
  4074cf:	push   rax
  4074d0:	jb     0x407541
  4074d2:	fs jne 0x407538
  4074d5:	je     0x4074f7
  4074d7:	rex.RB jbe 0x40753b
  4074da:	ins    BYTE PTR es:[rdi],dx
  4074db:	jne    0x40753e
  4074dd:	je     0x407548
  4074df:	outs   dx,DWORD PTR ds:[rsi]
  4074e0:	outs   dx,BYTE PTR ds:[rsi]
  4074e1:	and    BYTE PTR [rdi+0x65],dl
  4074e4:	(bad)  
  4074e5:	and    BYTE PTR [rbx+0x69],dh
  4074e8:	je     0x40754f
  4074ea:	add    DWORD PTR [rbp+0x6e694601],edx
  4074f0:	and    BYTE PTR fs:[rbx+0x61],ah
  4074f4:	jae    0x40755b
  4074f6:	and    BYTE PTR [rbx+0x74],dh
  4074f9:	jne    0x40755f
  4074fb:	imul   esp,DWORD PTR [rbp+0x73],0x6562202c
  407502:	outs   dx,BYTE PTR ds:[rsi]
  407503:	movsxd ebp,DWORD PTR [rax+0x6d]
  407506:	(bad)  
  407507:	jb     0x407574
  407509:	imul   ebp,DWORD PTR [rsi+0x67],0x74616420
  407510:	(bad)  
  407511:	sub    al,0x20
  407513:	outs   dx,BYTE PTR ds:[rsi]
  407514:	gs ja  0x40758a
  407517:	and    BYTE PTR [rcx+0x6e],ah
  40751a:	and    BYTE PTR fs:[rdx+0x65],dh
  40751e:	jbe    0x407589
  407520:	gs ja  0x407596
  407523:	sub    al,0x20
  407525:	je     0x407599
  407527:	imul   esp,DWORD PTR [rcx+0x6c],0x666f7320
  40752e:	je     0x4075a7
  407530:	(bad)  
  407531:	jb     0x407598
  407533:	and    BYTE PTR [rdi+rbp*2+0x77],ah
  407537:	outs   dx,BYTE PTR ds:[rsi]
  407538:	ins    BYTE PTR es:[rdi],dx
  407539:	outs   dx,DWORD PTR ds:[rsi]
  40753a:	(bad)  
  40753b:	fs jae 0x40756a
  40753e:	and    BYTE PTR [rcx+0x6e],ah
  407541:	and    BYTE PTR fs:[rdi+0x74],ch
  407545:	push   0x69207265
  40754a:	outs   dx,BYTE PTR ds:[rsi]
  40754b:	outs   dx,WORD PTR ds:[rsi]
  40754d:	jb     0x4075bc
  40754f:	(bad)  
  407550:	je     0x4075bb
  407552:	outs   dx,DWORD PTR ds:[rsi]
  407553:	outs   dx,BYTE PTR ds:[rsi]
  407554:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  407558:	push   0x20706c65
  40755d:	jns    0x4075ce
  40755f:	jne    0x407581
  407561:	fs movsxd ebp,DWORD PTR gs:[rcx+0x64]
  407566:	and    BYTE PTR gs:[rdi+0x68],dh
  40756a:	gs je  0x4075d5
  40756d:	gs jb  0x407590
  407570:	je     0x4075e1
  407572:	and    BYTE PTR [rdx+0x75],ah
  407575:	jns    0x407597
  407577:	push   rbx
  407578:	push   rcx
  407579:	rex.WR and BYTE PTR [rbx+0x65],r10b
  40757d:	jb     0x4075f5
  40757f:	gs jb  0x4075b0
  407582:	add    DWORD PTR [rip+0x204c5153],edx        # 0x208cc6db
  407588:	push   rbx
  407589:	gs jb  0x407602
  40758c:	gs jb  0x4075af
  40758f:	push   rsp
  407590:	movsxd ebp,DWORD PTR gs:[rax+0x43]
  407594:	outs   dx,BYTE PTR gs:[rsi]
  407596:	je     0x4075fd
  407598:	jb     0x40759b
  40759a:	xchg   DWORD PTR [rcx],eax
  40759c:	rex.RXB
  40759d:	gs je  0x4075c0
  4075a0:	outs   dx,DWORD PTR fs:[rsi]
  4075a2:	ja     0x407612
  4075a4:	ins    BYTE PTR es:[rdi],dx
  4075a5:	outs   dx,DWORD PTR ds:[rsi]
  4075a6:	(bad)  
  4075a7:	fs jae 0x4075d6
  4075aa:	and    BYTE PTR [rdx+0x65],dh
  4075ad:	(bad)  
  4075ae:	and    BYTE PTR fs:[rdx+0x6c],ah
  4075b2:	outs   dx,DWORD PTR ds:[rsi]
  4075b3:	addr32 jae 0x4075e2
  4075b6:	and    BYTE PTR [rdi+0x72],ch
  4075b9:	and    BYTE PTR [rsi+0x69],ah
  4075bc:	outs   dx,BYTE PTR ds:[rsi]
  4075bd:	and    BYTE PTR fs:[rcx+0x6e],ch
  4075c1:	outs   dx,WORD PTR ds:[rsi]
  4075c3:	jb     0x407632
  4075c5:	(bad)  
  4075c6:	je     0x407631
  4075c8:	outs   dx,DWORD PTR ds:[rsi]
  4075c9:	outs   dx,BYTE PTR ds:[rsi]
  4075ca:	and    BYTE PTR [rcx+0x6e],ah
  4075cd:	and    BYTE PTR fs:[rbp+0x76],ah
  4075d1:	outs   dx,BYTE PTR gs:[rsi]
  4075d3:	je     0x407648
  4075d5:	and    BYTE PTR [rdi+0x66],ch
  4075d8:	and    BYTE PTR [rcx+0x6e],ch
  4075db:	je     0x407642
  4075dd:	jb     0x407644
  4075df:	jae    0x407655
  4075e1:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  4075e5:	push   rbx
  4075e6:	push   rcx
  4075e7:	rex.WR and BYTE PTR [rbx+0x65],r10b
  4075eb:	jb     0x407663
  4075ed:	gs jb  0x407610
  4075f0:	rex.R (bad) 
  4075f2:	je     0x407655
  4075f4:	(bad)  
  4075f6:	jae    0x40765d
  4075f8:	and    BYTE PTR [rcx+0x64],al
  4075fb:	ins    DWORD PTR es:[rdi],dx
  4075fc:	imul   ebp,DWORD PTR [rsi+0x69],0x61727473
  407603:	je     0x407674
  407605:	jb     0x40767a
  407607:	and    BYTE PTR [rcx+0x6e],ah
  40760a:	and    BYTE PTR fs:[rdi+0x74],ch
  40760e:	push   0x49207265
  407613:	push   rsp
  407614:	and    BYTE PTR [rax+0x72],dl
  407617:	outs   dx,DWORD PTR ds:[rsi]
  407618:	data16 gs jae 0x40768f
  40761c:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e736c61
  407623:	add    DWORD PTR [rbx],esp
  407625:	push   rbx
  407626:	push   rcx
  407627:	rex.WR and BYTE PTR [rbx+0x65],r10b
  40762b:	jb     0x4076a3
  40762d:	gs jb  0x407650
  407630:	xor    dh,BYTE PTR [rax]
  407632:	xor    BYTE PTR [rax],bh
  407634:	and    BYTE PTR [rcx+0x6e],cl
  407637:	jae    0x4076ad
  407639:	(bad)  
  40763a:	ins    BYTE PTR es:[rdi],dx
  40763b:	ins    BYTE PTR es:[rdi],dx
  40763c:	(bad)  
  40763d:	je     0x4076a8
  40763f:	outs   dx,DWORD PTR ds:[rsi]
  407640:	outs   dx,BYTE PTR ds:[rsi]
  407641:	and    BYTE PTR [rbx+0x65],al
  407644:	outs   dx,BYTE PTR ds:[rsi]
  407645:	je     0x4076ac
  407647:	jb     0x40764a
  407649:	add    eax,0x6c6f6f54
  40764e:	jae    0x407651
  407650:	(bad)  
  407651:	push   rbp
  407652:	jo     0x4076bb
  407654:	jb     0x4076b7
  407656:	fs and BYTE PTR gs:[rsi+0x72],ah
  40765b:	outs   dx,DWORD PTR ds:[rsi]
  40765c:	ins    DWORD PTR es:[rdi],dx
  40765d:	and    BYTE PTR [rbx+0x51],dl
  407660:	rex.WR and BYTE PTR [rbx+0x65],r10b
  407664:	jb     0x4076dc
  407666:	gs jb  0x407689
  407669:	xor    dh,BYTE PTR [rax]
  40766b:	xor    BYTE PTR [rax],dh
  40766d:	and    BYTE PTR [rdi+0x72],ch
  407670:	and    BYTE PTR [rbx+0x51],dl
  407673:	rex.WR and BYTE PTR [rbx+0x65],r10b
  407677:	jb     0x4076ef
  407679:	gs jb  0x40769c
  40767c:	xor    dh,BYTE PTR [rax]
  40767e:	xor    BYTE PTR [rip+0x6e491701],dh        # 0x6e898d85
  407684:	jae    0x4076fa
  407686:	(bad)  
  407687:	ins    BYTE PTR es:[rdi],dx
  407688:	ins    BYTE PTR es:[rdi],dx
  407689:	and    BYTE PTR [rbp+0x70],dl
  40768c:	addr32 jb 0x4076f0
  40768f:	fs and BYTE PTR gs:[rcx+0x64],al
  407694:	jbe    0x4076ff
  407696:	jae    0x407707
  407698:	jb     0x40769b
  40769a:	mov    cl,0x1
  40769c:	push   rbp
  40769d:	jo     0x407706
  40769f:	jb     0x407702
  4076a1:	fs and BYTE PTR gs:[rcx+0x64],al
  4076a6:	jbe    0x407711
  4076a8:	jae    0x407719
  4076aa:	jb     0x4076cc
  4076ac:	(bad)  
  4076ad:	outs   dx,BYTE PTR ds:[rsi]
  4076ae:	(bad)  
  4076af:	ins    BYTE PTR es:[rdi],dx
  4076b0:	jns    0x40772c
  4076b2:	gs jae 0x4076d5
  4076b5:	(bad)  
  4076b6:	outs   dx,BYTE PTR ds:[rsi]
  4076b7:	jns    0x4076d9
  4076b9:	push   rbx
  4076ba:	push   rcx
  4076bb:	rex.WR and BYTE PTR [rbx+0x65],r10b
  4076bf:	jb     0x407737
  4076c1:	gs jb  0x4076e4
  4076c4:	xor    dh,BYTE PTR [rax]
  4076c6:	xor    BYTE PTR [rip+0x20726f20],dh        # 0x20b2e5ec
  4076cc:	push   rbx
  4076cd:	push   rcx
  4076ce:	rex.WR and BYTE PTR [rbx+0x65],r10b
  4076d2:	jb     0x40774a
  4076d4:	gs jb  0x4076f7
  4076d7:	xor    dh,BYTE PTR [rax]
  4076d9:	xor    BYTE PTR [rax],dh
  4076db:	and    BYTE PTR [rbx+0x6f],ah
  4076de:	ins    DWORD PTR es:[rdi],dx
  4076df:	jo     0x407750
  4076e1:	outs   dx,BYTE PTR ds:[rsi]
  4076e2:	outs   dx,BYTE PTR gs:[rsi]
  4076e4:	je     0x407759
  4076e6:	and    BYTE PTR [rax+rbp*2+0x61],dh
  4076ea:	je     0x40770c
  4076ec:	(bad)  
  4076ed:	jb     0x407754
  4076ef:	and    BYTE PTR [rcx+0x6e],ch
  4076f2:	jae    0x407768
  4076f4:	(bad)  
  4076f5:	ins    BYTE PTR es:[rdi],dx
  4076f6:	ins    BYTE PTR es:[rdi],dx
  4076f7:	gs and BYTE PTR fs:[rcx+0x6e],ah
  4076fc:	and    BYTE PTR fs:[rcx+0x64],ch
  407700:	outs   dx,BYTE PTR gs:[rsi]
  407702:	je     0x40776d
  407704:	imul   sp,WORD PTR [rbp+0x73],0x6920
  40770a:	jae    0x40777f
  40770c:	jne    0x407773
  40770e:	jae    0x407730
  407710:	je     0x407781
  407712:	and    BYTE PTR [rsi+0x69],ah
  407715:	js     0x407737
  407717:	imul   esi,DWORD PTR gs:[rax+rbp*2+0x65],0x65622072
  407720:	outs   dx,WORD PTR ds:[rsi]
  407722:	jb     0x407789
  407724:	and    BYTE PTR [rdi+0x72],ch
  407727:	and    BYTE PTR [rcx+0x66],ah
  40772a:	je     0x407791
  40772c:	jb     0x40774e
  40772e:	jns    0x40779f
  407730:	jne    0x407752
  407732:	jne    0x4077a4
  407734:	addr32 jb 0x407798
  407737:	fs and BYTE PTR gs:[rdi+rbp*2+0x20],dh
  40773d:	push   rbx
  40773e:	push   rcx
  40773f:	rex.WR and BYTE PTR [rbx+0x65],r10b
  407743:	jb     0x4077bb
  407745:	gs jb  0x407768
  407748:	xor    dh,BYTE PTR [rax]
  40774a:	xor    BYTE PTR [rax],bh
  40774c:	add    DWORD PTR cs:[rsi+0x75614c01],esp
  407753:	outs   dx,BYTE PTR ds:[rsi]
  407754:	movsxd ebp,DWORD PTR [rax+0x20]
  407757:	(bad)  
  407758:	and    BYTE PTR [rdi+0x69],dh
  40775b:	jp     0x4077be
  40775d:	jb     0x4077c3
  40775f:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  407763:	jne    0x4077d5
  407765:	addr32 jb 0x4077c9
  407768:	fs and BYTE PTR gs:[rbx+0x51],dl
  40776d:	rex.WR and BYTE PTR [rbx+0x65],r10b
  407771:	jb     0x4077e9
  407773:	gs jb  0x407796
  407776:	xor    dh,BYTE PTR [rax]
  407778:	xor    BYTE PTR [rax],dh
  40777a:	and    BYTE PTR [rdi+0x72],ch
  40777d:	and    BYTE PTR [rbx+0x51],dl
  407780:	rex.WR and BYTE PTR [rbx+0x65],r10b
  407784:	jb     0x4077fc
  407786:	gs jb  0x4077a9
  407789:	xor    dh,BYTE PTR [rax]
  40778b:	xor    BYTE PTR [rip+0x206f7420],dh        # 0x20afebb1
  407791:	push   rbx
  407792:	push   rcx
  407793:	rex.WR and BYTE PTR [rbx+0x65],r10b
  407797:	jb     0x40780f
  407799:	gs jb  0x4077bc
  40779c:	xor    dh,BYTE PTR [rax]
  40779e:	xor    BYTE PTR [rax],bh
  4077a0:	and    BYTE PTR cs:[rdx+0x65],al
  4077a4:	outs   dx,WORD PTR ds:[rsi]
  4077a6:	jb     0x40780d
  4077a8:	and    BYTE PTR [rcx+0x6f],bh
  4077ab:	jne    0x4077cd
  4077ad:	jne    0x40781f
  4077af:	addr32 jb 0x407813
  4077b2:	fs gs sub al,0x20
  4077b6:	jns    0x407827
  4077b8:	jne    0x4077da
  4077ba:	jae    0x407824
  4077bc:	outs   dx,DWORD PTR ds:[rsi]
  4077bd:	jne    0x40782b
  4077bf:	and    BYTE PTR fs:[rdx+0x75],dh
  4077c3:	outs   dx,BYTE PTR ds:[rsi]
  4077c4:	and    BYTE PTR [rax+rbp*2+0x65],dh
  4077c8:	and    BYTE PTR [rbp+0x70],dl
  4077cb:	addr32 jb 0x40782f
  4077ce:	fs and BYTE PTR gs:[rcx+0x64],al
  4077d3:	jbe    0x40783e
  4077d5:	jae    0x407846
  4077d7:	jb     0x4077f9
  4077d9:	je     0x40784a
  4077db:	and    BYTE PTR [rbp+riz*2+0x74],ah
  4077df:	movsxd esi,DWORD PTR gs:[rax+riz*1+0x70]
  4077e4:	outs   dx,DWORD PTR ds:[rsi]
  4077e5:	je     0x40784c
  4077e7:	outs   dx,BYTE PTR ds:[rsi]
  4077e8:	je     0x407853
  4077ea:	(bad)  
  4077eb:	ins    BYTE PTR es:[rdi],dx
  4077ec:	and    BYTE PTR [rax+0x72],dh
  4077ef:	outs   dx,DWORD PTR ds:[rsi]
  4077f0:	(bad)  
  4077f1:	ins    BYTE PTR es:[rdi],dx
  4077f2:	gs ins DWORD PTR es:[rdi],dx
  4077f4:	jae    0x407824
  4077f6:	add    DWORD PTR [rip+0x72677055],edx        # 0x72a7e851
  4077fc:	(bad)  
  4077fd:	fs and BYTE PTR gs:[rdi+rbp*2+0x63],al
  407803:	jne    0x407872
  407805:	outs   dx,BYTE PTR gs:[rsi]
  407807:	je     0x40786a
  407809:	je     0x407874
  40780b:	outs   dx,DWORD PTR ds:[rsi]
  40780c:	outs   dx,BYTE PTR ds:[rsi]
  40780d:	add    DWORD PTR [rdx+0x56],esp
  407810:	imul   esp,DWORD PTR [rbp+0x77],0x65687420
  407817:	and    BYTE PTR [rdi+rbp*2+0x63],ah
  40781b:	jne    0x40788a
  40781d:	outs   dx,BYTE PTR gs:[rsi]
  40781f:	je     0x407841
  407821:	(bad)  
  407822:	(bad)  
  407823:	outs   dx,DWORD PTR ds:[rsi]
  407824:	jne    0x40789a
  407826:	and    BYTE PTR [rax+0x6f],ch
  407829:	ja     0x40784b
  40782b:	je     0x40789c
  40782d:	and    BYTE PTR [rbp+0x70],dh
  407830:	addr32 jb 0x407894
  407833:	fs and BYTE PTR gs:[rdi+rbp*2+0x20],dh
  407839:	push   rbx
  40783a:	push   rcx
  40783b:	rex.WR and BYTE PTR [rbx+0x65],r10b
  40783f:	jb     0x4078b7
  407841:	gs jb  0x407864
  407844:	xor    dh,BYTE PTR [rax]
  407846:	xor    BYTE PTR [rax],bh
  407848:	and    BYTE PTR [rsi+0x72],ah
  40784b:	outs   dx,DWORD PTR ds:[rsi]
  40784c:	ins    DWORD PTR es:[rdi],dx
  40784d:	and    BYTE PTR [rbx+0x51],dl
  407850:	rex.WR and BYTE PTR [rbx+0x65],r10b
  407854:	jb     0x4078cc
  407856:	gs jb  0x407879
  407859:	xor    dh,BYTE PTR [rax]
  40785b:	xor    BYTE PTR [rax],dh
  40785d:	and    BYTE PTR [rdi+0x72],ch
  407860:	and    BYTE PTR [rbx+0x51],dl
  407863:	rex.WR and BYTE PTR [rbx+0x65],r10b
  407867:	jb     0x4078df
  407869:	gs jb  0x40788c
  40786c:	xor    dh,BYTE PTR [rax]
  40786e:	xor    BYTE PTR [rip+0x550d012e],dh        # 0x554d79a2
  407874:	jo     0x4078dd
  407876:	jb     0x4078d9
  407878:	fs and BYTE PTR gs:[rdx+0x75],dl
  40787d:	ins    BYTE PTR es:[rdi],dx
  40787e:	gs jae 0x407882
  407881:	xor    ecx,DWORD PTR [rcx+riz*2+0x75]
  407885:	outs   dx,BYTE PTR ds:[rsi]
  407886:	movsxd ebp,DWORD PTR [rax+0x20]
  407889:	je     0x4078f3
  40788b:	and    BYTE PTR gs:[rbp+0x70],dh
  40788f:	addr32 jb 0x4078f3
  407892:	fs and BYTE PTR gs:[rdx+0x75],dh
  407897:	outs   dx,BYTE PTR ds:[rsi]
  407898:	jae    0x4078ba
  40789a:	je     0x407904
  40789c:	(bad)  
  40789d:	je     0x4078bf
  40789f:	ja     0x40790a
  4078a1:	ins    BYTE PTR es:[rdi],dx
  4078a2:	ins    BYTE PTR es:[rdi],dx
  4078a3:	and    BYTE PTR [rdx+0x6c],ah
  4078a6:	outs   dx,DWORD PTR ds:[rsi]
  4078a7:	movsxd ebp,DWORD PTR [rbx+0x20]
  4078aa:	(bad)  
  4078ab:	outs   dx,BYTE PTR ds:[rsi]
  4078ac:	and    BYTE PTR [rbp+0x70],dh
  4078af:	addr32 jb 0x407913
  4078b2:	fs gs add DWORD PTR cs:[rip+0x72677055],esp        # 0x72a7e910
  4078bb:	(bad)  
  4078bc:	fs and BYTE PTR gs:[rcx+0x6e],cl
  4078c1:	je     0x407928
  4078c3:	addr32 jb 0x407927
  4078c6:	je     0x407931
  4078c8:	outs   dx,DWORD PTR ds:[rsi]
  4078c9:	outs   dx,BYTE PTR ds:[rsi]
  4078ca:	and    BYTE PTR [rbx+0x65],dl
  4078cd:	jb     0x407945
  4078cf:	imul   esp,DWORD PTR [rbx+0x65],0x61702073
  4078d6:	movsxd ebp,DWORD PTR [rbx+0x61]
  4078d9:	addr32 gs jae 0x4078de
  4078dd:	mov    dh,0x1
  4078df:	rex.WR (bad) 
  4078e1:	jne    0x407951
  4078e3:	movsxd ebp,DWORD PTR [rax+0x20]
  4078e6:	je     0x407950
  4078e8:	and    BYTE PTR gs:[rbx+0x51],dl
  4078ec:	rex.WR and BYTE PTR [rbx+0x65],r10b
  4078f0:	jb     0x407968
  4078f2:	gs jb  0x407915
  4078f5:	rex.WB outs dx,BYTE PTR ds:[rsi]
  4078f7:	je     0x40795e
  4078f9:	addr32 jb 0x40795d
  4078fc:	je     0x407967
  4078fe:	outs   dx,DWORD PTR ds:[rsi]
  4078ff:	outs   dx,BYTE PTR ds:[rsi]
  407900:	and    BYTE PTR [rbx+0x65],dl
  407903:	jb     0x40797b
  407905:	imul   esp,DWORD PTR [rbx+0x65],0x61502073
  40790c:	movsxd ebp,DWORD PTR [rbx+0x61]
  40790f:	and    BYTE PTR gs:[ebp+0x70],dl
  407914:	addr32 jb 0x407978
  407917:	fs and BYTE PTR gs:[rdi+0x69],dl
  40791c:	jp     0x40797f
  40791e:	jb     0x407984
  407920:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  407924:	jne    0x407996
  407926:	addr32 jb 0x40798a
  407929:	fs and BYTE PTR gs:[rbx+0x51],dl
  40792e:	rex.WR and BYTE PTR [rbx+0x65],r10b
  407932:	jb     0x4079aa
  407934:	gs jb  0x407957
  407937:	xor    dh,BYTE PTR [rax]
  407939:	xor    BYTE PTR [rip+0x746e4920],dh        # 0x74aec25f
  40793f:	gs addr32 jb 0x4079a4
  407943:	je     0x4079ae
  407945:	outs   dx,DWORD PTR ds:[rsi]
  407946:	outs   dx,BYTE PTR ds:[rsi]
  407947:	and    BYTE PTR [rbx+0x65],dl
  40794a:	jb     0x4079c2
  40794c:	imul   esp,DWORD PTR [rbx+0x65],0x61702073
  407953:	movsxd ebp,DWORD PTR [rbx+0x61]
  407956:	addr32 gs jae 0x40797a
  40795a:	je     0x4079cb
  40795c:	and    BYTE PTR [rax+rbp*2+0x65],dh
  407960:	and    BYTE PTR [rbx+0x51],dl
  407963:	rex.WR and BYTE PTR [rbx+0x65],r10b
  407967:	jb     0x4079df
  407969:	gs jb  0x40798c
  40796c:	xor    dh,BYTE PTR [rax]
  40796e:	xor    BYTE PTR [rax],bh
  407970:	and    BYTE PTR [rcx+0x6e],cl
  407973:	je     0x4079da
  407975:	addr32 jb 0x4079d9
  407978:	je     0x4079e3
  40797a:	outs   dx,DWORD PTR ds:[rsi]
  40797b:	outs   dx,BYTE PTR ds:[rsi]
  40797c:	and    BYTE PTR [rbx+0x65],dl
  40797f:	jb     0x4079f7
  407981:	imul   esp,DWORD PTR [rbx+0x65],0x61702073
  407988:	movsxd ebp,DWORD PTR [rbx+0x61]
  40798b:	and    BYTE PTR gs:[esi+0x6f],ah
  407990:	jb     0x4079ff
  407992:	(bad)  
  407993:	je     0x4079c3
  407995:	add    DWORD PTR [rbx+rdx*2],ebx
  407998:	push   rcx
  407999:	rex.WR and BYTE PTR [rbx+0x65],r10b
  40799d:	jb     0x407a15
  40799f:	gs jb  0x4079c2
  4079a2:	xor    dh,BYTE PTR [rax]
  4079a4:	xor    BYTE PTR [rax],bh
  4079a6:	and    BYTE PTR [rdx+0x6f],al
  4079a9:	outs   dx,DWORD PTR ds:[rsi]
  4079aa:	imul   esi,DWORD PTR [rbx+0x20],0x4f
  4079ae:	outs   dx,BYTE PTR ds:[rsi]
  4079af:	ins    BYTE PTR es:[rdi],dx
  4079b0:	imul   ebp,DWORD PTR [rsi+0x65],0x69562301
  4079b7:	gs ja  0x4079da
  4079ba:	push   rbx
  4079bb:	push   rcx
  4079bc:	rex.WR and BYTE PTR [rbx+0x65],r10b
  4079c0:	jb     0x407a38
  4079c2:	gs jb  0x4079e5
  4079c5:	xor    dh,BYTE PTR [rax]
  4079c7:	xor    BYTE PTR [rax],bh
  4079c9:	and    BYTE PTR [rdi+rbp*2+0x63],ah
  4079cd:	jne    0x407a3c
  4079cf:	outs   dx,BYTE PTR gs:[rsi]
  4079d1:	je     0x407a34
  4079d3:	je     0x407a3e
  4079d5:	outs   dx,DWORD PTR ds:[rsi]
  4079d6:	outs   dx,BYTE PTR ds:[rsi]
  4079d7:	add    DWORD PTR cs:[rcx],edx
  4079da:	imul   r12,QWORD PTR [rbx+0x65],0x2065736e
  4079e2:	rex.B
  4079e3:	addr32 jb 0x407a4b
  4079e6:	gs ins DWORD PTR es:[rdi],dx
  4079e8:	outs   dx,BYTE PTR gs:[rsi]
  4079ea:	je     0x4079ed
  4079ec:	(bad)  
  4079ed:	push   rsi
  4079ee:	imul   esp,DWORD PTR [rbp+0x77],0x65687420
  4079f5:	and    BYTE PTR [rbx+0x51],dl
  4079f8:	rex.WR and BYTE PTR [rbx+0x65],r10b
  4079fc:	jb     0x407a74
  4079fe:	gs jb  0x407a21
  407a01:	xor    dh,BYTE PTR [rax]
  407a03:	xor    BYTE PTR [rax],bh
  407a05:	and    BYTE PTR [rcx+rbp*2+0x63],ch
  407a09:	outs   dx,BYTE PTR gs:[rsi]
  407a0b:	jae    0x407a72
  407a0d:	and    BYTE PTR [rbp+riz*2+0x72],dh
  407a11:	ins    DWORD PTR es:[rdi],dx
  407a12:	jae    0x407a42
  407a14:	add    DWORD PTR [rbx],ebx
  407a16:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
  407a1e:	je     0x407a40
  407a20:	push   rax
  407a21:	jb     0x407a8c
  407a23:	jbe    0x407a86
  407a25:	movsxd edi,DWORD PTR [rcx+0x20]
  407a28:	push   rbx
  407a29:	je     0x407a8c
  407a2b:	je     0x407a92
  407a2d:	ins    DWORD PTR es:[rdi],dx
  407a2e:	outs   dx,BYTE PTR gs:[rsi]
  407a30:	je     0x407a33
  407a32:	and    eax,0x77656956
  407a37:	and    BYTE PTR [rax+rbp*2+0x65],dh
  407a3b:	and    BYTE PTR [rbp+0x69],cl
  407a3e:	movsxd esi,DWORD PTR [rdx+0x6f]
  407a41:	jae    0x407ab2
  407a43:	data16 je 0x407a66
  407a46:	push   rax
  407a47:	jb     0x407ab2
  407a49:	jbe    0x407aac
  407a4b:	movsxd edi,DWORD PTR [rcx+0x20]
  407a4e:	push   rbx
  407a4f:	je     0x407ab2
  407a51:	je     0x407ab8
  407a53:	ins    DWORD PTR es:[rdi],dx
  407a54:	outs   dx,BYTE PTR gs:[rsi]
  407a56:	je     0x407a86
  407a58:	add    DWORD PTR [rcx],ebx
  407a5a:	rex.XB outs dx,DWORD PTR ds:[rsi]
  407a5c:	fs gs jo 0x407acc
  407a60:	gs js  0x407a83
  407a63:	jae    0x407ac6
  407a65:	ins    DWORD PTR es:[rdi],dx
  407a66:	jo     0x407ad4
  407a68:	gs jae 0x407a8b
  407a6b:	push   rdi
  407a6c:	gs (bad) 
  407a6e:	and    BYTE PTR [rbx+0x69],dh
  407a71:	je     0x407ad8
  407a73:	add    DWORD PTR [rcx+0x56],ecx
  407a76:	imul   esp,DWORD PTR [rbp+0x77],0x646e6120
  407a7d:	and    BYTE PTR [rcx+0x6e],ch
  407a80:	jae    0x407af6
  407a82:	(bad)  
  407a83:	ins    BYTE PTR es:[rdi],dx
  407a84:	ins    BYTE PTR es:[rdi],dx
  407a85:	and    BYTE PTR [rcx+0x64],al
  407a88:	jbe    0x407aef
  407a8a:	outs   dx,BYTE PTR ds:[rsi]
  407a8b:	je     0x407b02
  407a8d:	jb     0x407af4
  407a8f:	push   rdi
  407a90:	outs   dx,DWORD PTR ds:[rsi]
  407a91:	jb     0x407afe
  407a93:	jae    0x407ab5
  407a95:	jae    0x407af8
  407a97:	ins    DWORD PTR es:[rdi],dx
  407a98:	jo     0x407b06
  407a9a:	and    BYTE PTR gs:[rcx+riz*2+0x74],ah
  407a9f:	(bad)  
  407aa0:	(bad)  
  407aa2:	jae    0x407b09
  407aa4:	jae    0x407ac6
  407aa6:	(bad)  
  407aa7:	outs   dx,BYTE PTR ds:[rsi]
  407aa8:	and    BYTE PTR fs:[rbx+0x61],dh
  407aac:	ins    DWORD PTR es:[rdi],dx
  407aad:	jo     0x407b1b
  407aaf:	and    BYTE PTR gs:[rcx+0x70],ah
  407ab3:	jo     0x407b21
  407ab5:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
  407abc:	jae    0x407aec
  407abe:	add    BYTE PTR [rax],al
  407ac0:	rex.WB or rax,0xffffffffcace0000
  407ac6:	out    dx,eax
  407ac7:	mov    esi,0x1
  407acc:	xchg   ecx,eax
  407acd:	add    BYTE PTR [rax],al
  407acf:	add    BYTE PTR [rbx+rdx*2+0x79],ch
  407ad3:	jae    0x407b49
  407ad5:	gs ins DWORD PTR es:[rdi],dx
  407ad7:	cs push rdx
  407ad9:	gs jae 0x407b4b
  407adc:	jne    0x407b50
  407ade:	movsxd esp,DWORD PTR [rbp+0x73]
  407ae1:	cs push rdx
  407ae3:	gs jae 0x407b55
  407ae6:	jne    0x407b5a
  407ae8:	movsxd esp,DWORD PTR [rbp+0x52]
  407aeb:	gs (bad) 
  407aed:	fs gs jb 0x407b1d
  407af1:	and    BYTE PTR [rbp+0x73],ch
  407af4:	movsxd ebp,DWORD PTR [rdi+0x72]
  407af7:	ins    BYTE PTR es:[rdi],dx
  407af8:	imul   esp,DWORD PTR [rdx+0x2c],0x72655620
  407aff:	jae    0x407b6a
  407b01:	outs   dx,DWORD PTR ds:[rsi]
  407b02:	outs   dx,BYTE PTR ds:[rsi]
  407b03:	cmp    eax,0x2e302e32
  407b08:	xor    BYTE PTR [rsi],ch
  407b0a:	xor    BYTE PTR [rax+riz*1],ch
  407b0d:	rex.XB jne 0x407b7c
  407b10:	je     0x407b87
  407b12:	jb     0x407b79
  407b14:	cmp    eax,0x7475656e
  407b19:	jb     0x407b7c
  407b1b:	ins    BYTE PTR es:[rdi],dx
  407b1c:	sub    al,0x20
  407b1e:	push   rax
  407b1f:	jne    0x407b83
  407b21:	ins    BYTE PTR es:[rdi],dx
  407b22:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  407b29:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  407b2d:	(bad)  
  407b2e:	(bad)  
  407b2f:	(bad)  
  407b30:	(bad)  
  407b31:	xor    eax,0x31363563
  407b36:	cmp    DWORD PTR [rbx],esi
  407b38:	xor    al,0x65
  407b3a:	xor    BYTE PTR [rax],bh
  407b3c:	cmp    DWORD PTR [rbx],esp
  407b3e:	push   rbx
  407b3f:	jns    0x407bb4
  407b41:	je     0x407ba8
  407b43:	ins    DWORD PTR es:[rdi],dx
  407b44:	cs push rdx
  407b46:	gs jae 0x407bb8
  407b49:	jne    0x407bbd
  407b4b:	movsxd esp,DWORD PTR [rbp+0x73]
  407b4e:	cs push rdx
  407b50:	jne    0x407bc0
  407b52:	je     0x407bbd
  407b54:	ins    DWORD PTR es:[rdi],dx
  407b55:	gs push rdx
  407b57:	gs jae 0x407bc9
  407b5a:	jne    0x407bce
  407b5c:	movsxd esp,DWORD PTR [rbp+0x53]
  407b5f:	gs je  0x407b64
  407b62:	add    BYTE PTR [rax],al
  407b64:	add    BYTE PTR [rip+0x4000000],dl        # 0x4407b6a
  407b6a:	add    BYTE PTR [rax],al
  407b6c:	add    BYTE PTR [rdi+0x53],ah
  407b6f:	jns    0x407be4
  407b71:	je     0x407bd8
  407b73:	ins    DWORD PTR es:[rdi],dx
  407b74:	cs rex.R jb 0x407bd9
  407b78:	ja     0x407be3
  407b7a:	outs   dx,BYTE PTR ds:[rsi]
  407b7b:	addr32 cs push rbx
  407b7e:	imul   edi,DWORD PTR [rdx+0x65],0x53202c46
  407b85:	jns    0x407bfa
  407b87:	je     0x407bee
  407b89:	ins    DWORD PTR es:[rdi],dx
  407b8a:	cs rex.R jb 0x407bef
  407b8e:	ja     0x407bf9
  407b90:	outs   dx,BYTE PTR ds:[rsi]
  407b91:	addr32 sub al,0x20
  407b94:	push   rsi
  407b95:	gs jb  0x407c0b
  407b98:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  407b9f:	xor    BYTE PTR cs:[rsi],ch
  407ba2:	xor    BYTE PTR [rax+riz*1],ch
  407ba5:	rex.XB jne 0x407c14
  407ba8:	je     0x407c1f
  407baa:	jb     0x407c11
  407bac:	cmp    eax,0x7475656e
  407bb1:	jb     0x407c14
  407bb3:	ins    BYTE PTR es:[rdi],dx
  407bb4:	sub    al,0x20
  407bb6:	push   rax
  407bb7:	jne    0x407c1b
  407bb9:	ins    BYTE PTR es:[rdi],dx
  407bba:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  407bc1:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  407bc5:	(bad)  
  407bc6:	xor    BYTE PTR [rbx],dh
  407bc8:	xor    ax,0x3766
  407bcc:	xor    WORD PTR [rcx],si
  407bcf:	fs xor eax,0x61336130
  407bd5:	push   bx
  407bd7:	jns    0x407c4c
  407bd9:	je     0x407c40
  407bdb:	ins    DWORD PTR es:[rdi],dx
  407bdc:	cs rex.R jb 0x407c41
  407be0:	ja     0x407c4b
  407be2:	outs   dx,BYTE PTR ds:[rsi]
  407be3:	addr32 cs push rbx
  407be6:	imul   edi,DWORD PTR [rdx+0x65],0x7953202c
  407bed:	jae    0x407c63
  407bef:	gs ins DWORD PTR es:[rdi],dx
  407bf1:	cs rex.R jb 0x407c56
  407bf5:	ja     0x407c60
  407bf7:	outs   dx,BYTE PTR ds:[rsi]
  407bf8:	addr32 sub al,0x20
  407bfb:	push   rsi
  407bfc:	gs jb  0x407c72
  407bff:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  407c06:	xor    BYTE PTR cs:[rsi],ch
  407c09:	xor    BYTE PTR [rax+riz*1],ch
  407c0c:	rex.XB jne 0x407c7b
  407c0f:	je     0x407c86
  407c11:	jb     0x407c78
  407c13:	cmp    eax,0x7475656e
  407c18:	jb     0x407c7b
  407c1a:	ins    BYTE PTR es:[rdi],dx
  407c1b:	sub    al,0x20
  407c1d:	push   rax
  407c1e:	jne    0x407c82
  407c20:	ins    BYTE PTR es:[rdi],dx
  407c21:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  407c28:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  407c2c:	(bad)  
  407c2d:	xor    BYTE PTR [rbx],dh
  407c2f:	xor    ax,0x3766
  407c33:	xor    WORD PTR [rcx],si
  407c36:	fs xor eax,0x61336130
  407c3c:	ja     0x407c91
  407c3e:	jns    0x407cb3
  407c40:	je     0x407ca7
  407c42:	ins    DWORD PTR es:[rdi],dx
  407c43:	cs push rdi
  407c45:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  407c4c:	rex.RX outs dx,DWORD PTR ds:[rsi]
  407c4e:	jb     0x407cbd
  407c50:	jae    0x407c80
  407c52:	rex.R outs dx,DWORD PTR ds:[rsi]
  407c54:	movsxd ebp,DWORD PTR [rbx+0x53]
  407c57:	je     0x407cd2
  407c59:	ins    BYTE PTR es:[rdi],dx
  407c5a:	gs sub al,0x20
  407c5d:	push   rbx
  407c5e:	jns    0x407cd3
  407c60:	je     0x407cc7
  407c62:	ins    DWORD PTR es:[rdi],dx
  407c63:	cs push rdi
  407c65:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  407c6c:	rex.RX outs dx,DWORD PTR ds:[rsi]
  407c6e:	jb     0x407cdd
  407c70:	jae    0x407c9e
  407c72:	and    BYTE PTR [rsi+0x65],dl
  407c75:	jb     0x407cea
  407c77:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  407c7e:	xor    BYTE PTR cs:[rsi],ch
  407c81:	xor    BYTE PTR [rax+riz*1],ch
  407c84:	rex.XB jne 0x407cf3
  407c87:	je     0x407cfe
  407c89:	jb     0x407cf0
  407c8b:	cmp    eax,0x7475656e
  407c90:	jb     0x407cf3
  407c92:	ins    BYTE PTR es:[rdi],dx
  407c93:	sub    al,0x20
  407c95:	push   rax
  407c96:	jne    0x407cfa
  407c98:	ins    BYTE PTR es:[rdi],dx
  407c99:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  407ca0:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  407ca4:	(bad)  
  407ca5:	(bad)  
  407ca6:	(bad)  
  407ca7:	(bad)  
  407ca8:	xor    eax,0x31363563
  407cad:	cmp    DWORD PTR [rbx],esi
  407caf:	xor    al,0x65
  407cb1:	xor    BYTE PTR [rax],bh
  407cb3:	cmp    DWORD PTR [rdi+0x53],esp
  407cb6:	jns    0x407d2b
  407cb8:	je     0x407d1f
  407cba:	ins    DWORD PTR es:[rdi],dx
  407cbb:	cs rex.R jb 0x407d20
  407cbf:	ja     0x407d2a
  407cc1:	outs   dx,BYTE PTR ds:[rsi]
  407cc2:	addr32 cs push rax
  407cc5:	outs   dx,DWORD PTR ds:[rsi]
  407cc6:	imul   ebp,DWORD PTR [rsi+0x74],0x7953202c
  407ccd:	jae    0x407d43
  407ccf:	gs ins DWORD PTR es:[rdi],dx
  407cd1:	cs rex.R jb 0x407d36
  407cd5:	ja     0x407d40
  407cd7:	outs   dx,BYTE PTR ds:[rsi]
  407cd8:	addr32 sub al,0x20
  407cdb:	push   rsi
  407cdc:	gs jb  0x407d52
  407cdf:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  407ce6:	xor    BYTE PTR cs:[rsi],ch
  407ce9:	xor    BYTE PTR [rax+riz*1],ch
  407cec:	rex.XB jne 0x407d5b
  407cef:	je     0x407d66
  407cf1:	jb     0x407d58
  407cf3:	cmp    eax,0x7475656e
  407cf8:	jb     0x407d5b
  407cfa:	ins    BYTE PTR es:[rdi],dx
  407cfb:	sub    al,0x20
  407cfd:	push   rax
  407cfe:	jne    0x407d62
  407d00:	ins    BYTE PTR es:[rdi],dx
  407d01:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  407d08:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  407d0c:	(bad)  
  407d0d:	xor    BYTE PTR [rbx],dh
  407d0f:	xor    ax,0x3766
  407d13:	xor    WORD PTR [rcx],si
  407d16:	fs xor eax,0x61336130
  407d1c:	imul   edi,DWORD PTR [rax],0x78ed8ba4
  407d22:	mov    cs,WORD PTR [rdi-0x7065caee]
  407d28:	and    ebp,esi
  407d2a:	fist   DWORD PTR [rdx-0x65589094]
  407d30:	test   al,0xd9
  407d32:	rex.WRB movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  407d34:	je     0x407d10
  407d36:	jl     0x407cde
  407d38:	jmp    0x50f5406b
  407d3d:	stos   BYTE PTR es:[rdi],al
  407d3e:	push   rcx
  407d3f:	mov    esi,0xbe58d2d6
  407d44:	and    DWORD PTR [rdx+0x1b25c034],edx
  407d4a:	nop
  407d4b:	in     eax,0x5a
  407d4d:	cdq    
  407d4e:	xchg   edi,eax
  407d4f:	in     eax,0xae
  407d51:	rex.XB icebp 
  407d53:	rex.X xchg ecx,eax
  407d55:	(bad)  
  407d56:	cli    
  407d57:	rex.X mov esp,0x184ccaac
  407d5d:	cmc    
  407d5e:	call   QWORD PTR [rbx-0x62]
  407d61:	sbb    eax,DWORD PTR [rdi]
  407d63:	push   rsp
  407d64:	xchg   edi,eax
  407d65:	jg     0x407d89
  407d67:	pop    rsp
  407d68:	(bad)  
  407d69:	out    0x4f,eax
  407d6b:	(bad)  
  407d6c:	jge    0x407d4e
  407d6e:	xchg   ebp,eax
  407d6f:	jo     0x407d2c
  407d71:	add    DWORD PTR [rax],eax
  407d73:	add    al,ah
  407d75:	add    BYTE PTR [rax],al
  407d77:	add    BYTE PTR [rdx+0x61000000],cl
  407d7d:	add    DWORD PTR [rax],eax
  407d7f:	add    BYTE PTR [rdi],dh
  407d81:	add    BYTE PTR [rax],al
  407d83:	add    BYTE PTR [rdi],cl
  407d85:	add    al,BYTE PTR [rax]
  407d87:	add    BYTE PTR [rdx],bh
  407d89:	add    eax,DWORD PTR [rax]
  407d8b:	add    BYTE PTR [rbx+0x3c000000],dh
  407d91:	add    al,BYTE PTR [rax]
  407d93:	add    dl,ch
  407d95:	add    DWORD PTR [rax],eax
  407d97:	add    BYTE PTR [rcx],cl
  407d99:	add    DWORD PTR [rax],eax
  407d9b:	add    BYTE PTR [rax+0x36000001],dl
  407da1:	add    DWORD PTR [rax],eax
  407da3:	add    BYTE PTR [rax+0x0],dl
  407da6:	add    BYTE PTR [rax],al
  407da8:	ins    DWORD PTR es:[rdi],dx
  407da9:	add    BYTE PTR [rax],al
  407dab:	add    BYTE PTR [rcx+0x2],ah
  407dae:	add    BYTE PTR [rax],al
  407db0:	adc    eax,DWORD PTR [rbx]
  407db2:	add    BYTE PTR [rax],al
  407db4:	mov    ebp,0x8e000002
  407db9:	add    al,BYTE PTR [rax]
  407dbb:	add    ah,ah
  407dbd:	add    al,BYTE PTR [rax]
  407dbf:	add    BYTE PTR [rax],al
  407dc1:	add    BYTE PTR [rax],al
  407dc3:	add    BYTE PTR [rbp+0x6],ch
  407dc6:	add    BYTE PTR [rax],al
  407dc8:	xor    ah,BYTE PTR [rax+rax*1]
  407dcb:	je     0x407dcd
  407dcd:	push   0x73006900
  407dd2:	add    BYTE PTR [rsi],ch
  407dd4:	add    BYTE PTR [rcx+0x0],al
  407dd7:	jne    0x407dd9
  407dd9:	je     0x407ddb
  407ddb:	outs   dx,DWORD PTR ds:[rsi]
  407ddc:	add    BYTE PTR [rbx+0x0],dl
  407ddf:	movsxd eax,DWORD PTR [rax]
  407de1:	(bad)  
  407de2:	add    BYTE PTR [rax+rax*1+0x65],ch
  407de6:	add    BYTE PTR [rax+rax*1+0x69],al
  407dea:	add    BYTE PTR [rbp+0x0],ch
  407ded:	add    BYTE PTR gs:[rsi+0x0],ch
  407df1:	jae    0x407df3
  407df3:	imul   eax,DWORD PTR [rax],0x6e006f
  407df9:	jae    0x407dfb
  407dfb:	add    BYTE PTR [rax],al
  407dfd:	add    BYTE PTR [rax],al
  407dff:	adc    al,0x24
  407e01:	add    BYTE PTR [rax+rax*1+0x68],dh
  407e05:	add    BYTE PTR [rcx+0x0],ch
  407e08:	jae    0x407e0a
  407e0a:	add    BYTE PTR cs:[rbx+0x0],dl
  407e0e:	imul   eax,DWORD PTR [rax],0x65007a
  407e14:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  407e15:	add    BYTE PTR [rax],al
  407e17:	add    BYTE PTR [rax],bl
  407e19:	add    BYTE PTR ds:[rsi],bh
  407e1c:	add    BYTE PTR [rax+rax*1],ah
  407e1f:	je     0x407e21
  407e21:	push   0x73006900
  407e26:	add    BYTE PTR [rsi],ch
  407e28:	add    BYTE PTR [rsi+0x0],cl
  407e2b:	(bad)  
  407e2c:	add    BYTE PTR [rbp+0x0],ch
  407e2f:	add    BYTE PTR gs:[rcx+0x1],cl
  407e33:	add    BYTE PTR [rax],al
  407e35:	sbb    BYTE PTR [rsi],bh
  407e37:	add    BYTE PTR [rsi],bh
  407e39:	add    BYTE PTR [rax+rax*1],ah
  407e3c:	je     0x407e3e
  407e3e:	push   0x73006900
  407e43:	add    BYTE PTR [rsi],ch
  407e45:	add    BYTE PTR [rax+rax*1+0x79],dl
  407e49:	add    BYTE PTR [rax+0x0],dh
  407e4c:	add    BYTE PTR gs:[rbp+0x1],bl
  407e50:	add    BYTE PTR [rax],al
  407e52:	and    al,0x3e
  407e54:	add    BYTE PTR [rsi],bh
  407e56:	add    BYTE PTR [rbx+0x0],ah
  407e59:	outs   dx,DWORD PTR ds:[rsi]
  407e5a:	add    BYTE PTR [rsi+0x0],ch
  407e5d:	je     0x407e5f
  407e5f:	add    BYTE PTR gs:[rsi+0x0],ch
  407e63:	je     0x407e65
  407e65:	add    BYTE PTR [r10+0x0],sil
  407e69:	add    BYTE PTR gs:[rcx+0x0],ah
  407e6d:	add    BYTE PTR cs:[rsi+0x0],cl
  407e71:	(bad)  
  407e72:	add    BYTE PTR [rbp+0x0],ch
  407e75:	gs add al,bl
  407e78:	add    DWORD PTR [rax],eax
  407e7a:	add    BYTE PTR [rax],ch
  407e7c:	add    BYTE PTR ds:[rsi],bh
  407e7f:	add    BYTE PTR [rbx+0x0],ah
  407e82:	outs   dx,DWORD PTR ds:[rsi]
  407e83:	add    BYTE PTR [rsi+0x0],ch
  407e86:	je     0x407e88
  407e88:	add    BYTE PTR gs:[rsi+0x0],ch
  407e8c:	je     0x407e8e
  407e8e:	add    BYTE PTR [r10+0x0],sil
  407e92:	add    BYTE PTR gs:[rcx+0x0],ah
  407e96:	add    BYTE PTR cs:[rax+0x0],dl
  407e9a:	(bad)  
  407e9b:	add    BYTE PTR [rdx+0x0],dh
  407e9e:	add    BYTE PTR gs:[rsi+0x0],ch
  407ea2:	je     0x407ea4
  407ea4:	in     eax,0x1
  407ea6:	add    BYTE PTR [rax],al
  407ea8:	and    al,0x3e
  407eaa:	add    BYTE PTR [rsi],bh
  407eac:	add    BYTE PTR [rbx+0x0],ah
  407eaf:	outs   dx,DWORD PTR ds:[rsi]
  407eb0:	add    BYTE PTR [rsi+0x0],ch
  407eb3:	je     0x407eb5
  407eb5:	add    BYTE PTR gs:[rsi+0x0],ch
  407eb9:	je     0x407ebb
  407ebb:	add    BYTE PTR [r10+0x0],sil
  407ebf:	add    BYTE PTR gs:[rcx+0x0],ah
  407ec3:	add    BYTE PTR cs:[rax+rax*1+0x79],dl
  407ec8:	add    BYTE PTR [rax+0x0],dh
  407ecb:	gs add ah,ch
  407ece:	add    DWORD PTR [rax],eax
  407ed0:	add    BYTE PTR [rax],ch
  407ed2:	add    BYTE PTR ds:[rsi],bh
  407ed5:	add    BYTE PTR [rbx+0x0],ah
  407ed8:	outs   dx,DWORD PTR ds:[rsi]
  407ed9:	add    BYTE PTR [rsi+0x0],ch
  407edc:	je     0x407ede
  407ede:	add    BYTE PTR gs:[rsi+0x0],ch
  407ee2:	je     0x407ee4
  407ee4:	add    BYTE PTR [r10+0x0],sil
  407ee8:	add    BYTE PTR gs:[rcx+0x0],ah
  407eec:	add    BYTE PTR cs:[rdx+0x0],bl
  407ef0:	rex.WRXB add BYTE PTR [r10+0x0],r14b
  407ef4:	add    BYTE PTR fs:[rbp+0x0],ah
  407ef8:	jb     0x407efa
  407efa:	(bad)  
  407efb:	add    al,BYTE PTR [rax]
  407efd:	add    BYTE PTR [rsi],ah
  407eff:	add    BYTE PTR ds:[rsi],bh
  407f02:	add    BYTE PTR [rax+0x0],dh
  407f05:	(bad)  
  407f06:	add    BYTE PTR [rdi+0x0],ah
  407f09:	add    BYTE PTR gs:[rbx+0x0],dl
  407f0d:	ja     0x407f0f
  407f0f:	imul   eax,DWORD PTR [rax],0x630074
  407f15:	push   0x72006500
  407f1a:	add    BYTE PTR [rsi],ch
  407f1c:	add    BYTE PTR [rsi+0x0],cl
  407f1f:	(bad)  
  407f20:	add    BYTE PTR [rbp+0x0],ch
  407f23:	add    BYTE PTR gs:[rdx+rax*1+0x0],ah
  407f28:	add    BYTE PTR [rdx],ch
  407f2a:	add    BYTE PTR ds:[rsi],bh
  407f2d:	add    BYTE PTR [rax+0x0],dh
  407f30:	(bad)  
  407f31:	add    BYTE PTR [rdi+0x0],ah
  407f34:	add    BYTE PTR gs:[rbx+0x0],dl
  407f38:	ja     0x407f3a
  407f3a:	imul   eax,DWORD PTR [rax],0x630074
  407f40:	push   0x72006500
  407f45:	add    BYTE PTR [rsi],ch
  407f47:	add    BYTE PTR [rax+0x0],dl
  407f4a:	(bad)  
  407f4b:	add    BYTE PTR [rdx+0x0],dh
  407f4e:	add    BYTE PTR gs:[rsi+0x0],ch
  407f52:	je     0x407f54
  407f54:	jb     0x407f58
  407f56:	add    BYTE PTR [rax],al
  407f58:	es add BYTE PTR ds:[rsi],bh
  407f5c:	add    BYTE PTR [rax+0x0],dh
  407f5f:	(bad)  
  407f60:	add    BYTE PTR [rdi+0x0],ah
  407f63:	add    BYTE PTR gs:[rbx+0x0],dl
  407f67:	ja     0x407f69
  407f69:	imul   eax,DWORD PTR [rax],0x630074
  407f6f:	push   0x72006500
  407f74:	add    BYTE PTR [rsi],ch
  407f76:	add    BYTE PTR [rax+rax*1+0x79],dl
  407f7a:	add    BYTE PTR [rax+0x0],dh
  407f7d:	add    BYTE PTR gs:[rcx+0x2],bh
  407f81:	add    BYTE PTR [rax],al
  407f83:	sub    bh,BYTE PTR [rsi]
  407f85:	add    BYTE PTR [rsi],bh
  407f87:	add    BYTE PTR [rax+0x0],dh
  407f8a:	(bad)  
  407f8b:	add    BYTE PTR [rdi+0x0],ah
  407f8e:	add    BYTE PTR gs:[rbx+0x0],dl
  407f92:	ja     0x407f94
  407f94:	imul   eax,DWORD PTR [rax],0x630074
  407f9a:	push   0x72006500
  407f9f:	add    BYTE PTR [rsi],ch
  407fa1:	add    BYTE PTR [rdx+0x0],bl
  407fa4:	rex.WRXB add BYTE PTR [r10+0x0],r14b
  407fa8:	add    BYTE PTR fs:[rbp+0x0],ah
  407fac:	jb     0x407fae
  407fae:	stc    
  407faf:	add    al,BYTE PTR [rax]
  407fb1:	add    BYTE PTR [rax],ah
  407fb3:	movsxd eax,DWORD PTR [rax]
  407fb5:	outs   dx,DWORD PTR ds:[rsi]
  407fb6:	add    BYTE PTR [rsi+0x0],ch
  407fb9:	je     0x407fbb
  407fbb:	add    BYTE PTR gs:[rsi+0x0],ch
  407fbf:	je     0x407fc1
  407fc1:	add    BYTE PTR [r10+0x0],sil
  407fc5:	add    BYTE PTR gs:[rcx+0x0],ah
  407fc9:	add    BYTE PTR cs:[rax+rax*1+0x6f],al
  407fce:	add    BYTE PTR [rbx+0x0],ah
  407fd1:	imul   eax,DWORD PTR [rax],0xfffffffc
  407fd4:	add    al,BYTE PTR [rax]
  407fd6:	add    BYTE PTR [rax],ch
  407fd8:	movsxd eax,DWORD PTR [rax]
  407fda:	outs   dx,DWORD PTR ds:[rsi]
  407fdb:	add    BYTE PTR [rsi+0x0],ch
  407fde:	je     0x407fe0
  407fe0:	add    BYTE PTR gs:[rsi+0x0],ch
  407fe4:	je     0x407fe6
  407fe6:	add    BYTE PTR [r10+0x0],sil
  407fea:	add    BYTE PTR gs:[rcx+0x0],ah
  407fee:	add    BYTE PTR cs:[rax+rax*1+0x6f],cl
  407ff3:	add    BYTE PTR [rbx+0x0],ah
  407ff6:	(bad)  
  407ff7:	add    BYTE PTR [rax+rax*1+0x69],dh
  407ffb:	add    BYTE PTR [rdi+0x0],ch
  407ffe:	outs   dx,BYTE PTR ds:[rsi]
  407fff:	add    BYTE PTR [rsi+0x20000003],ah
  408005:	movsxd eax,DWORD PTR [rax]
  408007:	outs   dx,DWORD PTR ds:[rsi]
  408008:	add    BYTE PTR [rsi+0x0],ch
  40800b:	je     0x40800d
  40800d:	add    BYTE PTR gs:[rsi+0x0],ch
  408011:	je     0x408013
  408013:	add    BYTE PTR [r10+0x0],sil
  408017:	add    BYTE PTR gs:[rcx+0x0],ah
  40801b:	add    BYTE PTR cs:[rbx+0x0],dl
  40801f:	imul   eax,DWORD PTR [rax],0x65007a
  408025:	rex.X add al,0x0
  408028:	add    BYTE PTR [rax],ch
  40802a:	movsxd eax,DWORD PTR [rax]
  40802c:	outs   dx,DWORD PTR ds:[rsi]
  40802d:	add    BYTE PTR [rsi+0x0],ch
  408030:	je     0x408032
  408032:	add    BYTE PTR gs:[rsi+0x0],ch
  408036:	je     0x408038
  408038:	add    BYTE PTR [r10+0x0],sil
  40803c:	add    BYTE PTR gs:[rcx+0x0],ah
  408040:	add    BYTE PTR cs:[rax+rax*1+0x61],dl
  408045:	add    BYTE PTR [rdx+0x0],ah
  408048:	rex.WB add BYTE PTR [r14+0x0],bpl
  40804c:	add    BYTE PTR fs:[rbp+0x0],ah
  408050:	js     0x408052
  408052:	out    0x4,al
  408054:	add    BYTE PTR [rax],al
  408056:	sub    dh,BYTE PTR [rax+0x0]
  408059:	(bad)  
  40805a:	add    BYTE PTR [rdi+0x0],ah
  40805d:	add    BYTE PTR gs:[rbx+0x0],dl
  408061:	ja     0x408063
  408063:	imul   eax,DWORD PTR [rax],0x630074
  408069:	push   0x72006500
  40806e:	add    BYTE PTR [rsi],ch
  408070:	add    BYTE PTR [rcx+0x0],al
  408073:	jne    0x408075
  408075:	je     0x408077
  408077:	outs   dx,DWORD PTR ds:[rsi]
  408078:	add    BYTE PTR [rbx+0x0],dl
  40807b:	imul   eax,DWORD PTR [rax],0x65007a
  408081:	jmp    0x408087
  408083:	add    BYTE PTR [rax],al
  408085:	and    dh,BYTE PTR [rax+0x0]
  408088:	(bad)  
  408089:	add    BYTE PTR [rdi+0x0],ah
  40808c:	add    BYTE PTR gs:[rbx+0x0],dl
  408090:	ja     0x408092
  408092:	imul   eax,DWORD PTR [rax],0x630074
  408098:	push   0x72006500
  40809d:	add    BYTE PTR [rsi],ch
  40809f:	add    BYTE PTR [rax+rax*1+0x6f],al
  4080a3:	add    BYTE PTR [rbx+0x0],ah
  4080a6:	imul   eax,DWORD PTR [rax],0xffffffed
  4080a9:	add    al,0x0
  4080ab:	add    BYTE PTR [rdx],ch
  4080ad:	jo     0x4080af
  4080af:	(bad)  
  4080b0:	add    BYTE PTR [rdi+0x0],ah
  4080b3:	add    BYTE PTR gs:[rbx+0x0],dl
  4080b7:	ja     0x4080b9
  4080b9:	imul   eax,DWORD PTR [rax],0x630074
  4080bf:	push   0x72006500
  4080c4:	add    BYTE PTR [rsi],ch
  4080c6:	add    BYTE PTR [rax+rax*1+0x6f],cl
  4080ca:	add    BYTE PTR [rbx+0x0],ah
  4080cd:	(bad)  
  4080ce:	add    BYTE PTR [rax+rax*1+0x69],dh
  4080d2:	add    BYTE PTR [rdi+0x0],ch
  4080d5:	outs   dx,BYTE PTR ds:[rsi]
  4080d6:	add    BYTE PTR [rdi+0x22000005],dl
  4080dc:	jo     0x4080de
  4080de:	(bad)  
  4080df:	add    BYTE PTR [rdi+0x0],ah
  4080e2:	add    BYTE PTR gs:[rbx+0x0],dl
  4080e6:	ja     0x4080e8
  4080e8:	imul   eax,DWORD PTR [rax],0x630074
  4080ee:	push   0x72006500
  4080f3:	add    BYTE PTR [rsi],ch
  4080f5:	add    BYTE PTR [rbx+0x0],dl
  4080f8:	imul   eax,DWORD PTR [rax],0x65007a
  4080fe:	xor    eax,DWORD PTR [rsi]
  408100:	add    BYTE PTR [rax],al
  408102:	sub    dh,BYTE PTR [rax+0x0]
  408105:	(bad)  
  408106:	add    BYTE PTR [rdi+0x0],ah
  408109:	add    BYTE PTR gs:[rbx+0x0],dl
  40810d:	ja     0x40810f
  40810f:	imul   eax,DWORD PTR [rax],0x630074
  408115:	push   0x72006500
  40811a:	add    BYTE PTR [rsi],ch
  40811c:	add    BYTE PTR [rax+rax*1+0x61],dl
  408120:	add    BYTE PTR [rdx+0x0],ah
  408123:	rex.WB add BYTE PTR [r14+0x0],bpl
  408127:	add    BYTE PTR fs:[rbp+0x0],ah
  40812b:	js     0x40812d
  40812d:	xlat   BYTE PTR ds:[rbx]
  40812e:	(bad)  
  40812f:	add    BYTE PTR [rax],al
  408131:	add    BYTE PTR [rcx],al
  408134:	add    BYTE PTR [rax],al
  408136:	add    bh,bh
  408138:	(bad)  
  408139:	(bad)  
  40813a:	inc    DWORD PTR [rcx]
  40813c:	add    BYTE PTR [rax],al
  40813e:	add    BYTE PTR [rax],al
  408140:	add    BYTE PTR [rax],al
  408142:	add    BYTE PTR [rdx+rax*1],cl
  408145:	add    BYTE PTR [rax],al
  408147:	add    BYTE PTR [rcx+0x53],dl
  40814a:	jns    0x4081bf
  40814c:	je     0x4081b3
  40814e:	ins    DWORD PTR es:[rdi],dx
  40814f:	cs rex.R jb 0x4081b4
  408153:	ja     0x4081be
  408155:	outs   dx,BYTE PTR ds:[rsi]
  408156:	addr32 sub al,0x20
  408159:	push   rsi
  40815a:	gs jb  0x4081d0
  40815d:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  408164:	xor    BYTE PTR cs:[rsi],ch
  408167:	xor    BYTE PTR [rax+riz*1],ch
  40816a:	rex.XB jne 0x4081d9
  40816d:	je     0x4081e4
  40816f:	jb     0x4081d6
  408171:	cmp    eax,0x7475656e
  408176:	jb     0x4081d9
  408178:	ins    BYTE PTR es:[rdi],dx
  408179:	sub    al,0x20
  40817b:	push   rax
  40817c:	jne    0x4081e0
  40817e:	ins    BYTE PTR es:[rdi],dx
  40817f:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  408186:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40818a:	(bad)  
  40818b:	xor    BYTE PTR [rbx],dh
  40818d:	xor    ax,0x3766
  408191:	xor    WORD PTR [rcx],si
  408194:	fs xor eax,0x61336130
  40819a:	add    eax,0x1
  40819f:	adc    al,0x53
  4081a1:	jns    0x408216
  4081a3:	je     0x40820a
  4081a5:	ins    DWORD PTR es:[rdi],dx
  4081a6:	cs rex.R jb 0x40820b
  4081aa:	ja     0x408215
  4081ac:	outs   dx,BYTE PTR ds:[rsi]
  4081ad:	addr32 cs push rbx
  4081b0:	imul   edi,DWORD PTR [rdx+0x65],0x246
  4081b7:	add    BYTE PTR [rip+0x74646977],al        # 0x74a4eb34
  4081bd:	push   0x69656806
  4081c2:	addr32 push 0xb000074
  4081c8:	or     eax,DWORD PTR [rdx]
  4081ca:	add    BYTE PTR [rax],al
  4081cc:	add    BYTE PTR [rax],al
  4081ce:	add    al,al
  4081d0:	add    BYTE PTR [rax],al
  4081d3:	push   rax
  4081d4:	or     eax,DWORD PTR [r9+0x0]
  4081d8:	add    DWORD PTR [rax],eax
  4081da:	add    BYTE PTR [rax],al
  4081dc:	(bad)  
  4081dd:	(bad)  
  4081de:	(bad)  
  4081df:	inc    DWORD PTR [rcx]
  4081e1:	add    BYTE PTR [rax],al
  4081e3:	add    BYTE PTR [rax],al
  4081e5:	add    BYTE PTR [rax],al
  4081e7:	add    BYTE PTR [rdx+rax*1],cl
  4081ea:	add    BYTE PTR [rax],al
  4081ec:	add    BYTE PTR [rcx+0x53],dl
  4081ef:	jns    0x408264
  4081f1:	je     0x408258
  4081f3:	ins    DWORD PTR es:[rdi],dx
  4081f4:	cs rex.R jb 0x408259
  4081f8:	ja     0x408263
  4081fa:	outs   dx,BYTE PTR ds:[rsi]
  4081fb:	addr32 sub al,0x20
  4081fe:	push   rsi
  4081ff:	gs jb  0x408275
  408202:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  408209:	xor    BYTE PTR cs:[rsi],ch
  40820c:	xor    BYTE PTR [rax+riz*1],ch
  40820f:	rex.XB jne 0x40827e
  408212:	je     0x408289
  408214:	jb     0x40827b
  408216:	cmp    eax,0x7475656e
  40821b:	jb     0x40827e
  40821d:	ins    BYTE PTR es:[rdi],dx
  40821e:	sub    al,0x20
  408220:	push   rax
  408221:	jne    0x408285
  408223:	ins    BYTE PTR es:[rdi],dx
  408224:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40822b:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40822f:	(bad)  
  408230:	xor    BYTE PTR [rbx],dh
  408232:	xor    ax,0x3766
  408236:	xor    WORD PTR [rcx],si
  408239:	fs xor eax,0x61336130
  40823f:	add    eax,0x1
  408244:	adc    edx,DWORD PTR [rbx+0x79]
  408247:	jae    0x4082bd
  408249:	gs ins DWORD PTR es:[rdi],dx
  40824b:	cs rex.R jb 0x4082b0
  40824f:	ja     0x4082ba
  408251:	outs   dx,BYTE PTR ds:[rsi]
  408252:	addr32 cs push rbx
  408255:	imul   edi,DWORD PTR [rdx+0x65],0x2
  40825c:	add    eax,0x74646977
  408261:	push   0x69656806
  408266:	addr32 push 0x8000074
  40826c:	or     BYTE PTR [rdx],al
  40826e:	add    BYTE PTR [rax],al
  408270:	add    BYTE PTR [rdi+0x15000001],ch
  408276:	add    DWORD PTR [rax],eax
  408278:	add    BYTE PTR [rbx],cl
  40827a:	add    DWORD PTR [rdx],edx
  40827c:	rex.WR (bad) 
  40827e:	outs   dx,BYTE PTR ds:[rsi]
  40827f:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x65676150
  408287:	rex.XB outs dx,DWORD PTR ds:[rsi]
  408289:	outs   dx,BYTE PTR ds:[rsi]
  40828a:	je     0x4082fe
  40828c:	outs   dx,DWORD PTR ds:[rsi]
  40828d:	ins    BYTE PTR es:[rdi],dx
  40828e:	add    DWORD PTR [rcx+0x53],edi
  408291:	jns    0x408306
  408293:	je     0x4082fa
  408295:	ins    DWORD PTR es:[rdi],dx
  408296:	cs push rdi
  408298:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40829f:	rex.RX outs dx,DWORD PTR ds:[rsi]
  4082a1:	jb     0x408310
  4082a3:	jae    0x4082d3
  4082a5:	push   rbp
  4082a6:	jae    0x40830d
  4082a8:	jb     0x4082ed
  4082aa:	outs   dx,DWORD PTR ds:[rsi]
  4082ab:	outs   dx,BYTE PTR ds:[rsi]
  4082ac:	je     0x408320
  4082ae:	outs   dx,DWORD PTR ds:[rsi]
  4082af:	ins    BYTE PTR es:[rdi],dx
  4082b0:	sub    al,0x20
  4082b2:	push   rbx
  4082b3:	jns    0x408328
  4082b5:	je     0x40831c
  4082b7:	ins    DWORD PTR es:[rdi],dx
  4082b8:	cs push rdi
  4082ba:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  4082c1:	rex.RX outs dx,DWORD PTR ds:[rsi]
  4082c3:	jb     0x408332
  4082c5:	jae    0x4082f3
  4082c7:	and    BYTE PTR [rsi+0x65],dl
  4082ca:	jb     0x40833f
  4082cc:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  4082d3:	xor    BYTE PTR cs:[rsi],ch
  4082d6:	xor    BYTE PTR [rax+riz*1],ch
  4082d9:	rex.XB jne 0x408348
  4082dc:	je     0x408353
  4082de:	jb     0x408345
  4082e0:	cmp    eax,0x7475656e
  4082e5:	jb     0x408348
  4082e7:	ins    BYTE PTR es:[rdi],dx
  4082e8:	sub    al,0x20
  4082ea:	push   rax
  4082eb:	jne    0x40834f
  4082ed:	ins    BYTE PTR es:[rdi],dx
  4082ee:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  4082f5:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  4082f9:	(bad)  
  4082fa:	(bad)  
  4082fb:	(bad)  
  4082fc:	(bad)  
  4082fd:	xor    eax,0x31363563
  408302:	cmp    DWORD PTR [rbx],esi
  408304:	xor    al,0x65
  408306:	xor    BYTE PTR [rax],bh
  408308:	cmp    DWORD PTR [rcx],eax
  40830a:	or     esp,DWORD PTR [rbx+0x6f]
  40830d:	outs   dx,BYTE PTR ds:[rsi]
  40830e:	je     0x408375
  408310:	outs   dx,BYTE PTR ds:[rsi]
  408311:	je     0x408354
  408313:	jb     0x40837a
  408315:	(bad)  
  408316:	add    DWORD PTR [rip+0x69687424],eax        # 0x69a8f740
  40831c:	jae    0x40831f
  40831e:	jae    0x408373
  408320:	jns    0x408395
  408322:	je     0x408389
  408324:	ins    DWORD PTR es:[rdi],dx
  408325:	cs push rdi
  408327:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40832e:	rex.RX outs dx,DWORD PTR ds:[rsi]
  408330:	jb     0x40839f
  408332:	jae    0x408362
  408334:	push   rax
  408335:	(bad)  
  408336:	outs   dx,BYTE PTR ds:[rsi]
  408337:	gs ins BYTE PTR es:[rdi],dx
  408339:	sub    al,0x20
  40833b:	push   rbx
  40833c:	jns    0x4083b1
  40833e:	je     0x4083a5
  408340:	ins    DWORD PTR es:[rdi],dx
  408341:	cs push rdi
  408343:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40834a:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40834c:	jb     0x4083bb
  40834e:	jae    0x40837c
  408350:	and    BYTE PTR [rsi+0x65],dl
  408353:	jb     0x4083c8
  408355:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40835c:	xor    BYTE PTR cs:[rsi],ch
  40835f:	xor    BYTE PTR [rax+riz*1],ch
  408362:	rex.XB jne 0x4083d1
  408365:	je     0x4083dc
  408367:	jb     0x4083ce
  408369:	cmp    eax,0x7475656e
  40836e:	jb     0x4083d1
  408370:	ins    BYTE PTR es:[rdi],dx
  408371:	sub    al,0x20
  408373:	push   rax
  408374:	jne    0x4083d8
  408376:	ins    BYTE PTR es:[rdi],dx
  408377:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40837e:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  408382:	(bad)  
  408383:	(bad)  
  408384:	(bad)  
  408385:	(bad)  
  408386:	xor    eax,0x31363563
  40838b:	cmp    DWORD PTR [rbx],esi
  40838d:	xor    al,0x65
  40838f:	xor    BYTE PTR [rax],bh
  408391:	cmp    DWORD PTR [rcx],eax
  408393:	add    DWORD PTR [rax],esi
  408395:	add    DWORD PTR [rax+rsi*2],ecx
  408398:	(bad)  
  408399:	addr32 gs push rbx
  40839c:	ja     0x408407
  40839e:	je     0x408403
  4083a0:	push   0x5017265
  4083a5:	and    al,0x74
  4083a7:	push   0x7e017369
  4083ac:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
  4083b4:	je     0x4083e4
  4083b6:	push   rbx
  4083b7:	jno    0x408425
  4083b9:	push   rbx
  4083ba:	gs jb  0x408433
  4083bd:	gs jb  0x4083ee
  4083c0:	rex.XB outs dx,DWORD PTR ds:[rsi]
  4083c2:	outs   dx,BYTE PTR ds:[rsi]
  4083c3:	imul   sp,WORD PTR [rdi+0x75],0x6172
  4083c9:	je     0x408434
  4083cb:	outs   dx,DWORD PTR ds:[rsi]
  4083cc:	outs   dx,BYTE PTR ds:[rsi]
  4083cd:	cs rex.WR (bad) 
  4083d0:	outs   dx,BYTE PTR ds:[rsi]
  4083d1:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x65676150
  4083d9:	cs push rax
  4083db:	(bad)  
  4083dc:	addr32 gs push rbx
  4083df:	ja     0x40844a
  4083e1:	je     0x408446
  4083e3:	push   0x202c7265
  4083e8:	rex.WR (bad) 
  4083ea:	outs   dx,BYTE PTR ds:[rsi]
  4083eb:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x65676150
  4083f3:	sub    al,0x20
  4083f5:	push   rsi
  4083f6:	gs jb  0x40846c
  4083f9:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e303d
  408400:	xor    BYTE PTR cs:[rsi],ch
  408403:	xor    BYTE PTR [rax+riz*1],ch
  408406:	rex.XB jne 0x408475
  408409:	je     0x408480
  40840b:	jb     0x408472
  40840d:	cmp    eax,0x7475656e
  408412:	jb     0x408475
  408414:	ins    BYTE PTR es:[rdi],dx
  408415:	sub    al,0x20
  408417:	push   rax
  408418:	jne    0x40847c
  40841a:	ins    BYTE PTR es:[rdi],dx
  40841b:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  408422:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  408426:	outs   dx,BYTE PTR ds:[rsi]
  408427:	jne    0x408495
  408429:	ins    BYTE PTR es:[rdi],dx
  40842a:	add    DWORD PTR [rcx],eax
  40842c:	xor    DWORD PTR [rdx+0x0],eax
  40842f:	add    DWORD PTR [rax],eax
  408431:	add    BYTE PTR [rax],al
  408433:	(bad)  
  408434:	(bad)  
  408435:	(bad)  
  408436:	inc    DWORD PTR [rcx]
  408438:	add    BYTE PTR [rax],al
  40843a:	add    BYTE PTR [rax],al
  40843c:	add    BYTE PTR [rax],al
  40843e:	add    BYTE PTR [rdx+rax*1],cl
  408441:	add    BYTE PTR [rax],al
  408443:	add    BYTE PTR [rdi+0x53],dl
  408446:	jns    0x4084bb
  408448:	je     0x4084af
  40844a:	ins    DWORD PTR es:[rdi],dx
  40844b:	cs push rdi
  40844d:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  408454:	rex.RX outs dx,DWORD PTR ds:[rsi]
  408456:	jb     0x4084c5
  408458:	jae    0x408486
  40845a:	and    BYTE PTR [rsi+0x65],dl
  40845d:	jb     0x4084d2
  40845f:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  408466:	xor    BYTE PTR cs:[rsi],ch
  408469:	xor    BYTE PTR [rax+riz*1],ch
  40846c:	rex.XB jne 0x4084db
  40846f:	je     0x4084e6
  408471:	jb     0x4084d8
  408473:	cmp    eax,0x7475656e
  408478:	jb     0x4084db
  40847a:	ins    BYTE PTR es:[rdi],dx
  40847b:	sub    al,0x20
  40847d:	push   rax
  40847e:	jne    0x4084e2
  408480:	ins    BYTE PTR es:[rdi],dx
  408481:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  408488:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40848c:	(bad)  
  40848d:	(bad)  
  40848e:	(bad)  
  40848f:	(bad)  
  408490:	xor    eax,0x31363563
  408495:	cmp    DWORD PTR [rbx],esi
  408497:	xor    al,0x65
  408499:	xor    BYTE PTR [rax],bh
  40849b:	cmp    DWORD PTR [rip+0x1],eax        # 0x4084a2
  4084a1:	(bad)  
  4084a2:	push   rbx
  4084a3:	jns    0x408518
  4084a5:	je     0x40850c
  4084a7:	ins    DWORD PTR es:[rdi],dx
  4084a8:	cs push rdi
  4084aa:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  4084b1:	rex.RX outs dx,DWORD PTR ds:[rsi]
  4084b3:	jb     0x408522
  4084b5:	jae    0x4084e5
  4084b7:	rex.R outs dx,DWORD PTR ds:[rsi]
  4084b9:	movsxd ebp,DWORD PTR [rbx+0x53]
  4084bc:	je     0x408537
  4084be:	ins    BYTE PTR es:[rdi],dx
  4084bf:	add    DWORD PTR gs:[rax],eax
  4084c2:	add    BYTE PTR [rax],al
  4084c4:	(bad)  
  4084c5:	jbe    0x408528
  4084c7:	ins    BYTE PTR es:[rdi],dx
  4084c8:	jne    0x40852f
  4084ca:	pop    rdi
  4084cb:	pop    rdi
  4084cc:	add    BYTE PTR [rax],cl
  4084ce:	add    al,BYTE PTR [rax]
  4084d0:	add    BYTE PTR [rax],al
  4084d2:	add    eax,0xb000000
  4084d7:	rex.XB add BYTE PTR [r9],al
  4084da:	add    BYTE PTR [rax],al
  4084dc:	add    bh,bh
  4084de:	(bad)  
  4084df:	(bad)  
  4084e0:	inc    DWORD PTR [rcx]
  4084e2:	add    BYTE PTR [rax],al
  4084e4:	add    BYTE PTR [rax],al
  4084e6:	add    BYTE PTR [rax],al
  4084e8:	add    BYTE PTR [rdx+rax*1],cl
  4084eb:	add    BYTE PTR [rax],al
  4084ed:	add    BYTE PTR [rcx+0x53],dl
  4084f0:	jns    0x408565
  4084f2:	je     0x408559
  4084f4:	ins    DWORD PTR es:[rdi],dx
  4084f5:	cs rex.R jb 0x40855a
  4084f9:	ja     0x408564
  4084fb:	outs   dx,BYTE PTR ds:[rsi]
  4084fc:	addr32 sub al,0x20
  4084ff:	push   rsi
  408500:	gs jb  0x408576
  408503:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40850a:	xor    BYTE PTR cs:[rsi],ch
  40850d:	xor    BYTE PTR [rax+riz*1],ch
  408510:	rex.XB jne 0x40857f
  408513:	je     0x40858a
  408515:	jb     0x40857c
  408517:	cmp    eax,0x7475656e
  40851c:	jb     0x40857f
  40851e:	ins    BYTE PTR es:[rdi],dx
  40851f:	sub    al,0x20
  408521:	push   rax
  408522:	jne    0x408586
  408524:	ins    BYTE PTR es:[rdi],dx
  408525:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40852c:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  408530:	(bad)  
  408531:	xor    BYTE PTR [rbx],dh
  408533:	xor    ax,0x3766
  408537:	xor    WORD PTR [rcx],si
  40853a:	fs xor eax,0x61336130
  408540:	add    eax,0x1
  408545:	adc    al,0x53
  408547:	jns    0x4085bc
  408549:	je     0x4085b0
  40854b:	ins    DWORD PTR es:[rdi],dx
  40854c:	cs rex.R jb 0x4085b1
  408550:	ja     0x4085bb
  408552:	outs   dx,BYTE PTR ds:[rsi]
  408553:	addr32 cs push rax
  408556:	outs   dx,DWORD PTR ds:[rsi]
  408557:	imul   ebp,DWORD PTR [rsi+0x74],0x2
  40855e:	add    DWORD PTR [rax+0x1],edi
  408561:	jns    0x408563
  408563:	add    BYTE PTR [rax],cl
  408565:	or     BYTE PTR [rdx],al
  408567:	add    BYTE PTR [rax],al
  408569:	add    BYTE PTR [rdx+0x0],al
  40856c:	add    BYTE PTR [rax],al
  40856e:	add    BYTE PTR [rax],al
  408570:	add    BYTE PTR [rax],al
  408572:	or     eax,DWORD PTR [rcx+0x0]
  408575:	add    DWORD PTR [rax],eax
  408577:	add    BYTE PTR [rax],al
  408579:	(bad)  
  40857a:	(bad)  
  40857b:	(bad)  
  40857c:	inc    DWORD PTR [rcx]
  40857e:	add    BYTE PTR [rax],al
  408580:	add    BYTE PTR [rax],al
  408582:	add    BYTE PTR [rax],al
  408584:	add    BYTE PTR [rdx+rax*1],cl
  408587:	add    BYTE PTR [rax],al
  408589:	add    BYTE PTR [rcx+0x53],dl
  40858c:	jns    0x408601
  40858e:	je     0x4085f5
  408590:	ins    DWORD PTR es:[rdi],dx
  408591:	cs rex.R jb 0x4085f6
  408595:	ja     0x408600
  408597:	outs   dx,BYTE PTR ds:[rsi]
  408598:	addr32 sub al,0x20
  40859b:	push   rsi
  40859c:	gs jb  0x408612
  40859f:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  4085a6:	xor    BYTE PTR cs:[rsi],ch
  4085a9:	xor    BYTE PTR [rax+riz*1],ch
  4085ac:	rex.XB jne 0x40861b
  4085af:	je     0x408626
  4085b1:	jb     0x408618
  4085b3:	cmp    eax,0x7475656e
  4085b8:	jb     0x40861b
  4085ba:	ins    BYTE PTR es:[rdi],dx
  4085bb:	sub    al,0x20
  4085bd:	push   rax
  4085be:	jne    0x408622
  4085c0:	ins    BYTE PTR es:[rdi],dx
  4085c1:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  4085c8:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  4085cc:	(bad)  
  4085cd:	xor    BYTE PTR [rbx],dh
  4085cf:	xor    ax,0x3766
  4085d3:	xor    WORD PTR [rcx],si
  4085d6:	fs xor eax,0x61336130
  4085dc:	add    eax,0x1
  4085e1:	adc    edx,DWORD PTR [rbx+0x79]
  4085e4:	jae    0x40865a
  4085e6:	gs ins DWORD PTR es:[rdi],dx
  4085e8:	cs rex.R jb 0x40864d
  4085ec:	ja     0x408657
  4085ee:	outs   dx,BYTE PTR ds:[rsi]
  4085ef:	addr32 cs push rbx
  4085f2:	imul   edi,DWORD PTR [rdx+0x65],0x2
  4085f9:	add    eax,0x74646977
  4085fe:	push   0x69656806
  408603:	addr32 push 0x8000074
  408609:	or     BYTE PTR [rdx],al
  40860b:	add    BYTE PTR [rax],al
  40860d:	add    BYTE PTR [rbp+0x1],ch
  408610:	add    BYTE PTR [rax],al
  408612:	adc    eax,0xb000001
  408617:	or     BYTE PTR [rax],al
  408619:	add    BYTE PTR [rax],al
  40861b:	add    BYTE PTR [rdx],al
  40861d:	add    DWORD PTR [rdx+0x0],eax
  408620:	add    DWORD PTR [rax],eax
  408622:	add    BYTE PTR [rax],al
  408624:	(bad)  
  408625:	(bad)  
  408626:	(bad)  
  408627:	inc    DWORD PTR [rcx]
  408629:	add    BYTE PTR [rax],al
  40862b:	add    BYTE PTR [rax],al
  40862d:	add    BYTE PTR [rax],al
  40862f:	add    BYTE PTR [rdx+rax*1],cl
  408632:	add    BYTE PTR [rax],al
  408634:	add    BYTE PTR [rdi+0x53],dl
  408637:	jns    0x4086ac
  408639:	je     0x4086a0
  40863b:	ins    DWORD PTR es:[rdi],dx
  40863c:	cs push rdi
  40863e:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  408645:	rex.RX outs dx,DWORD PTR ds:[rsi]
  408647:	jb     0x4086b6
  408649:	jae    0x408677
  40864b:	and    BYTE PTR [rsi+0x65],dl
  40864e:	jb     0x4086c3
  408650:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  408657:	xor    BYTE PTR cs:[rsi],ch
  40865a:	xor    BYTE PTR [rax+riz*1],ch
  40865d:	rex.XB jne 0x4086cc
  408660:	je     0x4086d7
  408662:	jb     0x4086c9
  408664:	cmp    eax,0x7475656e
  408669:	jb     0x4086cc
  40866b:	ins    BYTE PTR es:[rdi],dx
  40866c:	sub    al,0x20
  40866e:	push   rax
  40866f:	jne    0x4086d3
  408671:	ins    BYTE PTR es:[rdi],dx
  408672:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  408679:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40867d:	(bad)  
  40867e:	(bad)  
  40867f:	(bad)  
  408680:	(bad)  
  408681:	xor    eax,0x31363563
  408686:	cmp    DWORD PTR [rbx],esi
  408688:	xor    al,0x65
  40868a:	xor    BYTE PTR [rax],bh
  40868c:	cmp    DWORD PTR [rip+0x1],eax        # 0x408693
  408692:	(bad)  
  408693:	push   rbx
  408694:	jns    0x408709
  408696:	je     0x4086fd
  408698:	ins    DWORD PTR es:[rdi],dx
  408699:	cs push rdi
  40869b:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  4086a2:	rex.RX outs dx,DWORD PTR ds:[rsi]
  4086a4:	jb     0x408713
  4086a6:	jae    0x4086d6
  4086a8:	rex.R outs dx,DWORD PTR ds:[rsi]
  4086aa:	movsxd ebp,DWORD PTR [rbx+0x53]
  4086ad:	je     0x408728
  4086af:	ins    BYTE PTR es:[rdi],dx
  4086b0:	add    DWORD PTR gs:[rax],eax
  4086b3:	add    BYTE PTR [rax],al
  4086b5:	(bad)  
  4086b6:	jbe    0x408719
  4086b8:	ins    BYTE PTR es:[rdi],dx
  4086b9:	jne    0x408720
  4086bb:	pop    rdi
  4086bc:	pop    rdi
  4086bd:	add    BYTE PTR [rax],cl
  4086bf:	add    al,BYTE PTR [rax]
  4086c1:	add    BYTE PTR [rax],al
  4086c3:	add    eax,DWORD PTR [rax]
  4086c5:	add    BYTE PTR [rax],al
  4086c7:	or     eax,DWORD PTR [rbx+0x0]
  4086ca:	add    DWORD PTR [rax],eax
  4086cc:	add    BYTE PTR [rax],al
  4086ce:	(bad)  
  4086cf:	(bad)  
  4086d0:	(bad)  
  4086d1:	inc    DWORD PTR [rcx]
  4086d3:	add    BYTE PTR [rax],al
  4086d5:	add    BYTE PTR [rax],al
  4086d7:	add    BYTE PTR [rax],al
  4086d9:	add    BYTE PTR [rdx+rax*1],cl
  4086dc:	add    BYTE PTR [rax],al
  4086de:	add    BYTE PTR [rcx+0x53],dl
  4086e1:	jns    0x408756
  4086e3:	je     0x40874a
  4086e5:	ins    DWORD PTR es:[rdi],dx
  4086e6:	cs rex.R jb 0x40874b
  4086ea:	ja     0x408755
  4086ec:	outs   dx,BYTE PTR ds:[rsi]
  4086ed:	addr32 sub al,0x20
  4086f0:	push   rsi
  4086f1:	gs jb  0x408767
  4086f4:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  4086fb:	xor    BYTE PTR cs:[rsi],ch
  4086fe:	xor    BYTE PTR [rax+riz*1],ch
  408701:	rex.XB jne 0x408770
  408704:	je     0x40877b
  408706:	jb     0x40876d
  408708:	cmp    eax,0x7475656e
  40870d:	jb     0x408770
  40870f:	ins    BYTE PTR es:[rdi],dx
  408710:	sub    al,0x20
  408712:	push   rax
  408713:	jne    0x408777
  408715:	ins    BYTE PTR es:[rdi],dx
  408716:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40871d:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  408721:	(bad)  
  408722:	xor    BYTE PTR [rbx],dh
  408724:	xor    ax,0x3766
  408728:	xor    WORD PTR [rcx],si
  40872b:	fs xor eax,0x61336130
  408731:	add    eax,0x1
  408736:	adc    al,0x53
  408738:	jns    0x4087ad
  40873a:	je     0x4087a1
  40873c:	ins    DWORD PTR es:[rdi],dx
  40873d:	cs rex.R jb 0x4087a2
  408741:	ja     0x4087ac
  408743:	outs   dx,BYTE PTR ds:[rsi]
  408744:	addr32 cs push rax
  408747:	outs   dx,DWORD PTR ds:[rsi]
  408748:	imul   ebp,DWORD PTR [rsi+0x74],0x2
  40874f:	add    DWORD PTR [rax+0x1],edi
  408752:	jns    0x408754
  408754:	add    BYTE PTR [rax],cl
  408756:	or     BYTE PTR [rdx],al
	...
  408760:	add    BYTE PTR [rax],al
  408762:	add    BYTE PTR [rbx],cl
  408764:	add    BYTE PTR [r9],al
  408767:	add    BYTE PTR [rax],al
  408769:	add    bh,bh
  40876b:	(bad)  
  40876c:	(bad)  
  40876d:	inc    DWORD PTR [rcx]
  40876f:	add    BYTE PTR [rax],al
  408771:	add    BYTE PTR [rax],al
  408773:	add    BYTE PTR [rax],al
  408775:	add    BYTE PTR [rdx+rax*1],cl
  408778:	add    BYTE PTR [rax],al
  40877a:	add    BYTE PTR [rcx+0x53],dl
  40877d:	jns    0x4087f2
  40877f:	je     0x4087e6
  408781:	ins    DWORD PTR es:[rdi],dx
  408782:	cs rex.R jb 0x4087e7
  408786:	ja     0x4087f1
  408788:	outs   dx,BYTE PTR ds:[rsi]
  408789:	addr32 sub al,0x20
  40878c:	push   rsi
  40878d:	gs jb  0x408803
  408790:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  408797:	xor    BYTE PTR cs:[rsi],ch
  40879a:	xor    BYTE PTR [rax+riz*1],ch
  40879d:	rex.XB jne 0x40880c
  4087a0:	je     0x408817
  4087a2:	jb     0x408809
  4087a4:	cmp    eax,0x7475656e
  4087a9:	jb     0x40880c
  4087ab:	ins    BYTE PTR es:[rdi],dx
  4087ac:	sub    al,0x20
  4087ae:	push   rax
  4087af:	jne    0x408813
  4087b1:	ins    BYTE PTR es:[rdi],dx
  4087b2:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  4087b9:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  4087bd:	(bad)  
  4087be:	xor    BYTE PTR [rbx],dh
  4087c0:	xor    ax,0x3766
  4087c4:	xor    WORD PTR [rcx],si
  4087c7:	fs xor eax,0x61336130
  4087cd:	add    eax,0x1
  4087d2:	adc    edx,DWORD PTR [rbx+0x79]
  4087d5:	jae    0x40884b
  4087d7:	gs ins DWORD PTR es:[rdi],dx
  4087d9:	cs rex.R jb 0x40883e
  4087dd:	ja     0x408848
  4087df:	outs   dx,BYTE PTR ds:[rsi]
  4087e0:	addr32 cs push rbx
  4087e3:	imul   edi,DWORD PTR [rdx+0x65],0x2
  4087ea:	add    eax,0x74646977
  4087ef:	push   0x69656806
  4087f4:	addr32 push 0x8000074
  4087fa:	or     BYTE PTR [rdx],al
  4087fc:	add    BYTE PTR [rax],al
  4087fe:	add    BYTE PTR [rdx+0x0],al
  408801:	add    BYTE PTR [rax],al
  408803:	adc    eax,0xb000001
  408808:	or     BYTE PTR [rax],al
  40880a:	add    BYTE PTR [rax],al
  40880c:	add    BYTE PTR [rax],al
  40880e:	add    BYTE PTR [rax],al
  408810:	test   al,0x33
  408812:	add    BYTE PTR [rax],al
  408814:	(bad)  
  408815:	retf   0xbeef
  408818:	add    DWORD PTR [rax],eax
  40881a:	add    BYTE PTR [rax],al
  40881c:	xchg   ecx,eax
  40881d:	add    BYTE PTR [rax],al
  40881f:	add    BYTE PTR [rbx+rdx*2+0x79],ch
  408823:	jae    0x408899
  408825:	gs ins DWORD PTR es:[rdi],dx
  408827:	cs push rdx
  408829:	gs jae 0x40889b
  40882c:	jne    0x4088a0
  40882e:	movsxd esp,DWORD PTR [rbp+0x73]
  408831:	cs push rdx
  408833:	gs jae 0x4088a5
  408836:	jne    0x4088aa
  408838:	movsxd esp,DWORD PTR [rbp+0x52]
  40883b:	gs (bad) 
  40883d:	fs gs jb 0x40886d
  408841:	and    BYTE PTR [rbp+0x73],ch
  408844:	movsxd ebp,DWORD PTR [rdi+0x72]
  408847:	ins    BYTE PTR es:[rdi],dx
  408848:	imul   esp,DWORD PTR [rdx+0x2c],0x72655620
  40884f:	jae    0x4088ba
  408851:	outs   dx,DWORD PTR ds:[rsi]
  408852:	outs   dx,BYTE PTR ds:[rsi]
  408853:	cmp    eax,0x2e302e32
  408858:	xor    BYTE PTR [rsi],ch
  40885a:	xor    BYTE PTR [rax+riz*1],ch
  40885d:	rex.XB jne 0x4088cc
  408860:	je     0x4088d7
  408862:	jb     0x4088c9
  408864:	cmp    eax,0x7475656e
  408869:	jb     0x4088cc
  40886b:	ins    BYTE PTR es:[rdi],dx
  40886c:	sub    al,0x20
  40886e:	push   rax
  40886f:	jne    0x4088d3
  408871:	ins    BYTE PTR es:[rdi],dx
  408872:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  408879:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40887d:	(bad)  
  40887e:	(bad)  
  40887f:	(bad)  
  408880:	(bad)  
  408881:	xor    eax,0x31363563
  408886:	cmp    DWORD PTR [rbx],esi
  408888:	xor    al,0x65
  40888a:	xor    BYTE PTR [rax],bh
  40888c:	cmp    DWORD PTR [rbx],esp
  40888e:	push   rbx
  40888f:	jns    0x408904
  408891:	je     0x4088f8
  408893:	ins    DWORD PTR es:[rdi],dx
  408894:	cs push rdx
  408896:	gs jae 0x408908
  408899:	jne    0x40890d
  40889b:	movsxd esp,DWORD PTR [rbp+0x73]
  40889e:	cs push rdx
  4088a0:	jne    0x408910
  4088a2:	je     0x40890d
  4088a4:	ins    DWORD PTR es:[rdi],dx
  4088a5:	gs push rdx
  4088a7:	gs jae 0x408919
  4088aa:	jne    0x40891e
  4088ac:	movsxd esp,DWORD PTR [rbp+0x53]
  4088af:	gs je  0x4088b4
  4088b2:	add    BYTE PTR [rax],al
  4088b4:	add    BYTE PTR [rdi],cl
  4088b6:	add    BYTE PTR [rax],al
  4088b8:	add    BYTE PTR [rip+0x67000000],al        # 0x674088be
  4088be:	push   rbx
  4088bf:	jns    0x408934
  4088c1:	je     0x408928
  4088c3:	ins    DWORD PTR es:[rdi],dx
  4088c4:	cs rex.R jb 0x408929
  4088c8:	ja     0x408933
  4088ca:	outs   dx,BYTE PTR ds:[rsi]
  4088cb:	addr32 cs push rbx
  4088ce:	imul   edi,DWORD PTR [rdx+0x65],0x53202c46
  4088d5:	jns    0x40894a
  4088d7:	je     0x40893e
  4088d9:	ins    DWORD PTR es:[rdi],dx
  4088da:	cs rex.R jb 0x40893f
  4088de:	ja     0x408949
  4088e0:	outs   dx,BYTE PTR ds:[rsi]
  4088e1:	addr32 sub al,0x20
  4088e4:	push   rsi
  4088e5:	gs jb  0x40895b
  4088e8:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  4088ef:	xor    BYTE PTR cs:[rsi],ch
  4088f2:	xor    BYTE PTR [rax+riz*1],ch
  4088f5:	rex.XB jne 0x408964
  4088f8:	je     0x40896f
  4088fa:	jb     0x408961
  4088fc:	cmp    eax,0x7475656e
  408901:	jb     0x408964
  408903:	ins    BYTE PTR es:[rdi],dx
  408904:	sub    al,0x20
  408906:	push   rax
  408907:	jne    0x40896b
  408909:	ins    BYTE PTR es:[rdi],dx
  40890a:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  408911:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  408915:	(bad)  
  408916:	xor    BYTE PTR [rbx],dh
  408918:	xor    ax,0x3766
  40891c:	xor    WORD PTR [rcx],si
  40891f:	fs xor eax,0x61336130
  408925:	push   bx
  408927:	jns    0x40899c
  408929:	je     0x408990
  40892b:	ins    DWORD PTR es:[rdi],dx
  40892c:	cs rex.R jb 0x408991
  408930:	ja     0x40899b
  408932:	outs   dx,BYTE PTR ds:[rsi]
  408933:	addr32 cs push rbx
  408936:	imul   edi,DWORD PTR [rdx+0x65],0x7953202c
  40893d:	jae    0x4089b3
  40893f:	gs ins DWORD PTR es:[rdi],dx
  408941:	cs rex.R jb 0x4089a6
  408945:	ja     0x4089b0
  408947:	outs   dx,BYTE PTR ds:[rsi]
  408948:	addr32 sub al,0x20
  40894b:	push   rsi
  40894c:	gs jb  0x4089c2
  40894f:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  408956:	xor    BYTE PTR cs:[rsi],ch
  408959:	xor    BYTE PTR [rax+riz*1],ch
  40895c:	rex.XB jne 0x4089cb
  40895f:	je     0x4089d6
  408961:	jb     0x4089c8
  408963:	cmp    eax,0x7475656e
  408968:	jb     0x4089cb
  40896a:	ins    BYTE PTR es:[rdi],dx
  40896b:	sub    al,0x20
  40896d:	push   rax
  40896e:	jne    0x4089d2
  408970:	ins    BYTE PTR es:[rdi],dx
  408971:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  408978:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40897c:	(bad)  
  40897d:	xor    BYTE PTR [rbx],dh
  40897f:	xor    ax,0x3766
  408983:	xor    WORD PTR [rcx],si
  408986:	fs xor eax,0x61336130
  40898c:	push   bx
  40898e:	jns    0x408a03
  408990:	je     0x4089f7
  408992:	ins    DWORD PTR es:[rdi],dx
  408993:	cs rex.R jb 0x4089f8
  408997:	ja     0x408a02
  408999:	outs   dx,BYTE PTR ds:[rsi]
  40899a:	movsxd rbp,DWORD PTR cs:[r15d+0x6e]
  4089a0:	sub    al,0x20
  4089a2:	push   rbx
  4089a3:	jns    0x408a18
  4089a5:	je     0x408a0c
  4089a7:	ins    DWORD PTR es:[rdi],dx
  4089a8:	cs rex.R jb 0x408a0d
  4089ac:	ja     0x408a17
  4089ae:	outs   dx,BYTE PTR ds:[rsi]
  4089af:	addr32 sub al,0x20
  4089b2:	push   rsi
  4089b3:	gs jb  0x408a29
  4089b6:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  4089bd:	xor    BYTE PTR cs:[rsi],ch
  4089c0:	xor    BYTE PTR [rax+riz*1],ch
  4089c3:	rex.XB jne 0x408a32
  4089c6:	je     0x408a3d
  4089c8:	jb     0x408a2f
  4089ca:	cmp    eax,0x7475656e
  4089cf:	jb     0x408a32
  4089d1:	ins    BYTE PTR es:[rdi],dx
  4089d2:	sub    al,0x20
  4089d4:	push   rax
  4089d5:	jne    0x408a39
  4089d7:	ins    BYTE PTR es:[rdi],dx
  4089d8:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  4089df:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  4089e3:	(bad)  
  4089e4:	xor    BYTE PTR [rbx],dh
  4089e6:	xor    ax,0x3766
  4089ea:	xor    WORD PTR [rcx],si
  4089ed:	fs xor eax,0x61336130
  4089f3:	ja     0x408a48
  4089f5:	jns    0x408a6a
  4089f7:	je     0x408a5e
  4089f9:	ins    DWORD PTR es:[rdi],dx
  4089fa:	cs push rdi
  4089fc:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  408a03:	rex.RX outs dx,DWORD PTR ds:[rsi]
  408a05:	jb     0x408a74
  408a07:	jae    0x408a37
  408a09:	rex.R outs dx,DWORD PTR ds:[rsi]
  408a0b:	movsxd ebp,DWORD PTR [rbx+0x53]
  408a0e:	je     0x408a89
  408a10:	ins    BYTE PTR es:[rdi],dx
  408a11:	gs sub al,0x20
  408a14:	push   rbx
  408a15:	jns    0x408a8a
  408a17:	je     0x408a7e
  408a19:	ins    DWORD PTR es:[rdi],dx
  408a1a:	cs push rdi
  408a1c:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  408a23:	rex.RX outs dx,DWORD PTR ds:[rsi]
  408a25:	jb     0x408a94
  408a27:	jae    0x408a55
  408a29:	and    BYTE PTR [rsi+0x65],dl
  408a2c:	jb     0x408aa1
  408a2e:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  408a35:	xor    BYTE PTR cs:[rsi],ch
  408a38:	xor    BYTE PTR [rax+riz*1],ch
  408a3b:	rex.XB jne 0x408aaa
  408a3e:	je     0x408ab5
  408a40:	jb     0x408aa7
  408a42:	cmp    eax,0x7475656e
  408a47:	jb     0x408aaa
  408a49:	ins    BYTE PTR es:[rdi],dx
  408a4a:	sub    al,0x20
  408a4c:	push   rax
  408a4d:	jne    0x408ab1
  408a4f:	ins    BYTE PTR es:[rdi],dx
  408a50:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  408a57:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  408a5b:	(bad)  
  408a5c:	(bad)  
  408a5d:	(bad)  
  408a5e:	(bad)  
  408a5f:	xor    eax,0x31363563
  408a64:	cmp    DWORD PTR [rbx],esi
  408a66:	xor    al,0x65
  408a68:	xor    BYTE PTR [rax],bh
  408a6a:	cmp    DWORD PTR [rdi+0x53],esp
  408a6d:	jns    0x408ae2
  408a6f:	je     0x408ad6
  408a71:	ins    DWORD PTR es:[rdi],dx
  408a72:	cs rex.R jb 0x408ad7
  408a76:	ja     0x408ae1
  408a78:	outs   dx,BYTE PTR ds:[rsi]
  408a79:	addr32 cs push rax
  408a7c:	outs   dx,DWORD PTR ds:[rsi]
  408a7d:	imul   ebp,DWORD PTR [rsi+0x74],0x7953202c
  408a84:	jae    0x408afa
  408a86:	gs ins DWORD PTR es:[rdi],dx
  408a88:	cs rex.R jb 0x408aed
  408a8c:	ja     0x408af7
  408a8e:	outs   dx,BYTE PTR ds:[rsi]
  408a8f:	addr32 sub al,0x20
  408a92:	push   rsi
  408a93:	gs jb  0x408b09
  408a96:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  408a9d:	xor    BYTE PTR cs:[rsi],ch
  408aa0:	xor    BYTE PTR [rax+riz*1],ch
  408aa3:	rex.XB jne 0x408b12
  408aa6:	je     0x408b1d
  408aa8:	jb     0x408b0f
  408aaa:	cmp    eax,0x7475656e
  408aaf:	jb     0x408b12
  408ab1:	ins    BYTE PTR es:[rdi],dx
  408ab2:	sub    al,0x20
  408ab4:	push   rax
  408ab5:	jne    0x408b19
  408ab7:	ins    BYTE PTR es:[rdi],dx
  408ab8:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  408abf:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  408ac3:	(bad)  
  408ac4:	xor    BYTE PTR [rbx],dh
  408ac6:	xor    ax,0x3766
  408aca:	xor    WORD PTR [rcx],si
  408acd:	fs xor eax,0x61336130
  408ad3:	push   rax
  408ad4:	shl    ah,0xb6
  408ad7:	xchg   edx,eax
  408ad8:	(bad)  
  408ad9:	and    BYTE PTR [rdx-0x6495bd6e],bh
  408adf:	(bad)  
  408ae0:	(bad)  
  408ae1:	sbb    ch,BYTE PTR [rdx-0x134a2a66]
  408ae7:	mov    al,0x7d
  408ae9:	rex.RXB loop 0x408aa6
  408aec:	jnp    0x408a74
  408aee:	(bad)  
  408aef:	mov    edx,0xfe414c8c
  408af4:	add    eax,0x110e7ef2
  408af9:	mov    al,0xbb
  408afb:	adc    esp,eax
  408afd:	rex.WRX
  408afe:	adc    ch,BYTE PTR cs:[rsi-0x6ebd0ebd]
  408b05:	(bad)  
  408b06:	cli    
  408b07:	rex.X cli 
  408b09:	mov    BYTE PTR [rbp-0x6a1f82bd],ah
  408b0f:	jo     0x408b72
  408b11:	add    DWORD PTR [rax],eax
  408b13:	add    bh,ch
  408b15:	add    BYTE PTR [rax],al
  408b17:	add    BYTE PTR [rax+rax*1+0x0],bl
  408b1b:	add    BYTE PTR [rax+rax*1+0x370000],bl
  408b22:	add    BYTE PTR [rax],al
  408b24:	add    al,BYTE PTR [r8]
  408b27:	add    bl,dl
  408b29:	add    DWORD PTR [rax],eax
  408b2b:	add    BYTE PTR [rax+0x6000001],bl
  408b31:	add    al,BYTE PTR [rax]
  408b33:	add    BYTE PTR [rdx+rax*1+0x0],dh
  408b37:	add    BYTE PTR [rsi],ah
  408b39:	add    DWORD PTR [rax],eax
  408b3b:	add    BYTE PTR [rbp-0x2e000000],dh
  408b41:	add    BYTE PTR [rax],al
  408b43:	add    BYTE PTR [rbp+0x0],dh
  408b46:	add    BYTE PTR [rax],al
  408b48:	add    BYTE PTR [rax],al
  408b4a:	add    BYTE PTR [rax],al
  408b4c:	jmp    0x408b53
  408b4e:	add    BYTE PTR [rax],al
  408b50:	xor    ah,BYTE PTR [rax+rax*1]
  408b53:	je     0x408b55
  408b55:	push   0x73006900
  408b5a:	add    BYTE PTR [rsi],ch
  408b5c:	add    BYTE PTR [rcx+0x0],al
  408b5f:	jne    0x408b61
  408b61:	je     0x408b63
  408b63:	outs   dx,DWORD PTR ds:[rsi]
  408b64:	add    BYTE PTR [rbx+0x0],dl
  408b67:	movsxd eax,DWORD PTR [rax]
  408b69:	(bad)  
  408b6a:	add    BYTE PTR [rax+rax*1+0x65],ch
  408b6e:	add    BYTE PTR [rax+rax*1+0x69],al
  408b72:	add    BYTE PTR [rbp+0x0],ch
  408b75:	add    BYTE PTR gs:[rsi+0x0],ch
  408b79:	jae    0x408b7b
  408b7b:	imul   eax,DWORD PTR [rax],0x6e006f
  408b81:	jae    0x408b83
  408b83:	add    BYTE PTR [rax],al
  408b85:	add    BYTE PTR [rax],al
  408b87:	and    BYTE PTR [rax+rax*1],ah
  408b8a:	je     0x408b8c
  408b8c:	push   0x73006900
  408b91:	add    BYTE PTR [rsi],ch
  408b93:	add    BYTE PTR [rbx+0x0],al
  408b96:	ins    BYTE PTR es:[rdi],dx
  408b97:	add    BYTE PTR [rcx+0x0],ch
  408b9a:	add    BYTE PTR gs:[rsi+0x0],ch
  408b9e:	je     0x408ba0
  408ba0:	push   rbx
  408ba1:	add    BYTE PTR [rcx+0x0],ch
  408ba4:	jp     0x408ba6
  408ba6:	add    BYTE PTR gs:[rbp+0x14000000],ah
  408bad:	and    al,0x0
  408baf:	je     0x408bb1
  408bb1:	push   0x73006900
  408bb6:	add    BYTE PTR [rsi],ch
  408bb8:	add    BYTE PTR [rcx+0x0],cl
  408bbb:	movsxd eax,DWORD PTR [rax]
  408bbd:	outs   dx,DWORD PTR ds:[rsi]
  408bbe:	add    BYTE PTR [rsi+0x0],ch
  408bc1:	add    QWORD PTR [r8],rax
  408bc4:	add    BYTE PTR [rdx],ah
  408bc6:	and    al,0x0
  408bc8:	je     0x408bca
  408bca:	push   0x73006900
  408bcf:	add    BYTE PTR [rsi],ch
  408bd1:	add    BYTE PTR [rbp+0x0],cl
  408bd4:	imul   eax,DWORD PTR [rax],0x69006e
  408bda:	ins    DWORD PTR es:[rdi],dx
  408bdb:	add    BYTE PTR [rbp+0x0],dh
  408bde:	ins    DWORD PTR es:[rdi],dx
  408bdf:	add    BYTE PTR [rbx+0x0],dl
  408be2:	imul   eax,DWORD PTR [rax],0x65007a
  408be8:	loopne 0x408c13
  408bea:	add    BYTE PTR [rax],al
  408bec:	adc    al,0x24
  408bee:	add    BYTE PTR [rax+rax*1+0x68],dh
  408bf2:	add    BYTE PTR [rcx+0x0],ch
  408bf5:	jae    0x408bf7
  408bf7:	add    BYTE PTR cs:[rax+rax*1+0x65],dl
  408bfc:	add    BYTE PTR [rax+0x0],bh
  408bff:	je     0x408c01
  408c01:	test   BYTE PTR [rdx],ch
  408c03:	add    BYTE PTR [rax],al
  408c05:	sbb    BYTE PTR [rsi],bh
  408c07:	add    BYTE PTR [rsi],bh
  408c09:	add    BYTE PTR [rax+rax*1],ah
  408c0c:	je     0x408c0e
  408c0e:	push   0x73006900
  408c13:	add    BYTE PTR [rsi],ch
  408c15:	add    BYTE PTR [rsi+0x0],cl
  408c18:	(bad)  
  408c19:	add    BYTE PTR [rbp+0x0],ch
  408c1c:	add    BYTE PTR gs:[rdx+rbp*1+0x3e180000],ah
  408c24:	add    BYTE PTR [rsi],bh
  408c26:	add    BYTE PTR [rax+rax*1],ah
  408c29:	je     0x408c2b
  408c2b:	push   0x73006900
  408c30:	add    BYTE PTR [rsi],ch
  408c32:	add    BYTE PTR [rax+rax*1+0x79],dl
  408c36:	add    BYTE PTR [rax+0x0],dh
  408c39:	add    BYTE PTR gs:[rbp+0x3200002a],dh
  408c40:	add    BYTE PTR ds:[rsi],bh
  408c43:	add    BYTE PTR [rax+rax*1+0x61],ch
  408c47:	add    BYTE PTR [rsi+0x0],ch
  408c4a:	add    BYTE PTR fs:[rcx+0x0],ch
  408c4e:	outs   dx,BYTE PTR ds:[rsi]
  408c4f:	add    BYTE PTR [rdi+0x0],ah
  408c52:	push   rax
  408c53:	add    BYTE PTR [rcx+0x0],ah
  408c56:	add    BYTE PTR [ebp+0x0],ah
  408c5a:	rex.XB add BYTE PTR [r15+0x0],bpl
  408c5e:	outs   dx,BYTE PTR ds:[rsi]
  408c5f:	add    BYTE PTR [rax+rax*1+0x72],dh
  408c63:	add    BYTE PTR [rdi+0x0],ch
  408c66:	ins    BYTE PTR es:[rdi],dx
  408c67:	add    BYTE PTR [rsi],ch
  408c69:	add    BYTE PTR [rsi+0x0],cl
  408c6c:	(bad)  
  408c6d:	add    BYTE PTR [rbp+0x0],ch
  408c70:	add    BYTE PTR gs:[rcx],ch
  408c73:	sub    eax,DWORD PTR [rax]
  408c75:	add    BYTE PTR [rsi],dh
  408c77:	add    BYTE PTR ds:[rsi],bh
  408c7a:	add    BYTE PTR [rax+rax*1+0x61],ch
  408c7e:	add    BYTE PTR [rsi+0x0],ch
  408c81:	add    BYTE PTR fs:[rcx+0x0],ch
  408c85:	outs   dx,BYTE PTR ds:[rsi]
  408c86:	add    BYTE PTR [rdi+0x0],ah
  408c89:	push   rax
  408c8a:	add    BYTE PTR [rcx+0x0],ah
  408c8d:	add    BYTE PTR [ebp+0x0],ah
  408c91:	rex.XB add BYTE PTR [r15+0x0],bpl
  408c95:	outs   dx,BYTE PTR ds:[rsi]
  408c96:	add    BYTE PTR [rax+rax*1+0x72],dh
  408c9a:	add    BYTE PTR [rdi+0x0],ch
  408c9d:	ins    BYTE PTR es:[rdi],dx
  408c9e:	add    BYTE PTR [rsi],ch
  408ca0:	add    BYTE PTR [rax+0x0],dl
  408ca3:	(bad)  
  408ca4:	add    BYTE PTR [rdx+0x0],dh
  408ca7:	add    BYTE PTR gs:[rsi+0x0],ch
  408cab:	je     0x408cad
  408cad:	cmp    eax,0x3200002b
  408cb2:	add    BYTE PTR ds:[rsi],bh
  408cb5:	add    BYTE PTR [rax+rax*1+0x61],ch
  408cb9:	add    BYTE PTR [rsi+0x0],ch
  408cbc:	add    BYTE PTR fs:[rcx+0x0],ch
  408cc0:	outs   dx,BYTE PTR ds:[rsi]
  408cc1:	add    BYTE PTR [rdi+0x0],ah
  408cc4:	push   rax
  408cc5:	add    BYTE PTR [rcx+0x0],ah
  408cc8:	add    BYTE PTR [ebp+0x0],ah
  408ccc:	rex.XB add BYTE PTR [r15+0x0],bpl
  408cd0:	outs   dx,BYTE PTR ds:[rsi]
  408cd1:	add    BYTE PTR [rax+rax*1+0x72],dh
  408cd5:	add    BYTE PTR [rdi+0x0],ch
  408cd8:	ins    BYTE PTR es:[rdi],dx
  408cd9:	add    BYTE PTR [rsi],ch
  408cdb:	add    BYTE PTR [rax+rax*1+0x79],dl
  408cdf:	add    BYTE PTR [rax+0x0],dh
  408ce2:	add    BYTE PTR gs:[rbx+rbp*1+0x0],al
  408ce7:	add    BYTE PTR [rsi],dh
  408ce9:	add    BYTE PTR ds:[rsi],bh
  408cec:	add    BYTE PTR [rax+rax*1+0x61],ch
  408cf0:	add    BYTE PTR [rsi+0x0],ch
  408cf3:	add    BYTE PTR fs:[rcx+0x0],ch
  408cf7:	outs   dx,BYTE PTR ds:[rsi]
  408cf8:	add    BYTE PTR [rdi+0x0],ah
  408cfb:	push   rax
  408cfc:	add    BYTE PTR [rcx+0x0],ah
  408cff:	add    BYTE PTR [ebp+0x0],ah
  408d03:	rex.XB add BYTE PTR [r15+0x0],bpl
  408d07:	outs   dx,BYTE PTR ds:[rsi]
  408d08:	add    BYTE PTR [rax+rax*1+0x72],dh
  408d0c:	add    BYTE PTR [rdi+0x0],ch
  408d0f:	ins    BYTE PTR es:[rdi],dx
  408d10:	add    BYTE PTR [rsi],ch
  408d12:	add    BYTE PTR [rdx+0x0],bl
  408d15:	rex.WRXB add BYTE PTR [r10+0x0],r14b
  408d19:	add    BYTE PTR fs:[rbp+0x0],ah
  408d1d:	jb     0x408d1f
  408d1f:	retf   
  408d20:	sub    eax,DWORD PTR [rax]
  408d22:	add    BYTE PTR [rsi],ch
  408d24:	ins    BYTE PTR es:[rdi],dx
  408d25:	add    BYTE PTR [rcx+0x0],ah
  408d28:	outs   dx,BYTE PTR ds:[rsi]
  408d29:	add    BYTE PTR [rax+rax*1+0x69],ah
  408d2d:	add    BYTE PTR [rsi+0x0],ch
  408d30:	add    BYTE PTR [eax+0x0],dl
  408d34:	(bad)  
  408d35:	add    BYTE PTR [rdi+0x0],ah
  408d38:	add    BYTE PTR gs:[rbx+0x0],al
  408d3c:	outs   dx,DWORD PTR ds:[rsi]
  408d3d:	add    BYTE PTR [rsi+0x0],ch
  408d40:	je     0x408d42
  408d42:	jb     0x408d44
  408d44:	outs   dx,DWORD PTR ds:[rsi]
  408d45:	add    BYTE PTR [rax+rax*1+0x2e],ch
  408d49:	add    BYTE PTR [rax+rax*1+0x6f],al
  408d4d:	add    BYTE PTR [rbx+0x0],ah
  408d50:	imul   eax,DWORD PTR [rax],0xffffffce
  408d53:	sub    eax,DWORD PTR [rax]
  408d55:	add    BYTE PTR [rsi],dh
  408d57:	ins    BYTE PTR es:[rdi],dx
  408d58:	add    BYTE PTR [rcx+0x0],ah
  408d5b:	outs   dx,BYTE PTR ds:[rsi]
  408d5c:	add    BYTE PTR [rax+rax*1+0x69],ah
  408d60:	add    BYTE PTR [rsi+0x0],ch
  408d63:	add    BYTE PTR [eax+0x0],dl
  408d67:	(bad)  
  408d68:	add    BYTE PTR [rdi+0x0],ah
  408d6b:	add    BYTE PTR gs:[rbx+0x0],al
  408d6f:	outs   dx,DWORD PTR ds:[rsi]
  408d70:	add    BYTE PTR [rsi+0x0],ch
  408d73:	je     0x408d75
  408d75:	jb     0x408d77
  408d77:	outs   dx,DWORD PTR ds:[rsi]
  408d78:	add    BYTE PTR [rax+rax*1+0x2e],ch
  408d7c:	add    BYTE PTR [rax+rax*1+0x6f],cl
  408d80:	add    BYTE PTR [rbx+0x0],ah
  408d83:	(bad)  
  408d84:	add    BYTE PTR [rax+rax*1+0x69],dh
  408d88:	add    BYTE PTR [rdi+0x0],ch
  408d8b:	outs   dx,BYTE PTR ds:[rsi]
  408d8c:	add    BYTE PTR [rax+0x2c],bh
  408d8f:	add    BYTE PTR [rax],al
  408d91:	cs ins BYTE PTR es:[rdi],dx
  408d93:	add    BYTE PTR [rcx+0x0],ah
  408d96:	outs   dx,BYTE PTR ds:[rsi]
  408d97:	add    BYTE PTR [rax+rax*1+0x69],ah
  408d9b:	add    BYTE PTR [rsi+0x0],ch
  408d9e:	add    BYTE PTR [eax+0x0],dl
  408da2:	(bad)  
  408da3:	add    BYTE PTR [rdi+0x0],ah
  408da6:	add    BYTE PTR gs:[rbx+0x0],al
  408daa:	outs   dx,DWORD PTR ds:[rsi]
  408dab:	add    BYTE PTR [rsi+0x0],ch
  408dae:	je     0x408db0
  408db0:	jb     0x408db2
  408db2:	outs   dx,DWORD PTR ds:[rsi]
  408db3:	add    BYTE PTR [rax+rax*1+0x2e],ch
  408db7:	add    BYTE PTR [rbx+0x0],dl
  408dba:	imul   eax,DWORD PTR [rax],0x65007a
  408dc0:	adc    al,0x2d
  408dc2:	add    BYTE PTR [rax],al
  408dc4:	ss ins BYTE PTR es:[rdi],dx
  408dc6:	add    BYTE PTR [rcx+0x0],ah
  408dc9:	outs   dx,BYTE PTR ds:[rsi]
  408dca:	add    BYTE PTR [rax+rax*1+0x69],ah
  408dce:	add    BYTE PTR [rsi+0x0],ch
  408dd1:	add    BYTE PTR [eax+0x0],dl
  408dd5:	(bad)  
  408dd6:	add    BYTE PTR [rdi+0x0],ah
  408dd9:	add    BYTE PTR gs:[rbx+0x0],al
  408ddd:	outs   dx,DWORD PTR ds:[rsi]
  408dde:	add    BYTE PTR [rsi+0x0],ch
  408de1:	je     0x408de3
  408de3:	jb     0x408de5
  408de5:	outs   dx,DWORD PTR ds:[rsi]
  408de6:	add    BYTE PTR [rax+rax*1+0x2e],ch
  408dea:	add    BYTE PTR [rax+rax*1+0x61],dl
  408dee:	add    BYTE PTR [rdx+0x0],ah
  408df1:	rex.WB add BYTE PTR [r14+0x0],bpl
  408df5:	add    BYTE PTR fs:[rbp+0x0],ah
  408df9:	js     0x408dfb
  408dfb:	mov    eax,0x4000002d
  408e00:	add    BYTE PTR [rcx],al
  408e02:	add    BYTE PTR [rax],al
  408e04:	add    bh,bh
  408e06:	(bad)  
  408e07:	(bad)  
  408e08:	inc    DWORD PTR [rcx]
  408e0a:	add    BYTE PTR [rax],al
  408e0c:	add    BYTE PTR [rax],al
  408e0e:	add    BYTE PTR [rax],al
  408e10:	add    BYTE PTR [rdx+rax*1],cl
  408e13:	add    BYTE PTR [rax],al
  408e15:	add    BYTE PTR [rcx+0x53],dl
  408e18:	jns    0x408e8d
  408e1a:	je     0x408e81
  408e1c:	ins    DWORD PTR es:[rdi],dx
  408e1d:	cs rex.R jb 0x408e82
  408e21:	ja     0x408e8c
  408e23:	outs   dx,BYTE PTR ds:[rsi]
  408e24:	addr32 sub al,0x20
  408e27:	push   rsi
  408e28:	gs jb  0x408e9e
  408e2b:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  408e32:	xor    BYTE PTR cs:[rsi],ch
  408e35:	xor    BYTE PTR [rax+riz*1],ch
  408e38:	rex.XB jne 0x408ea7
  408e3b:	je     0x408eb2
  408e3d:	jb     0x408ea4
  408e3f:	cmp    eax,0x7475656e
  408e44:	jb     0x408ea7
  408e46:	ins    BYTE PTR es:[rdi],dx
  408e47:	sub    al,0x20
  408e49:	push   rax
  408e4a:	jne    0x408eae
  408e4c:	ins    BYTE PTR es:[rdi],dx
  408e4d:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  408e54:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  408e58:	(bad)  
  408e59:	xor    BYTE PTR [rbx],dh
  408e5b:	xor    ax,0x3766
  408e5f:	xor    WORD PTR [rcx],si
  408e62:	fs xor eax,0x61336130
  408e68:	add    eax,0x1
  408e6d:	adc    al,0x53
  408e6f:	jns    0x408ee4
  408e71:	je     0x408ed8
  408e73:	ins    DWORD PTR es:[rdi],dx
  408e74:	cs rex.R jb 0x408ed9
  408e78:	ja     0x408ee3
  408e7a:	outs   dx,BYTE PTR ds:[rsi]
  408e7b:	addr32 cs push rbx
  408e7e:	imul   edi,DWORD PTR [rdx+0x65],0x246
  408e85:	add    BYTE PTR [rip+0x74646977],al        # 0x74a4f802
  408e8b:	push   0x69656806
  408e90:	addr32 push 0xb000074
  408e96:	or     eax,DWORD PTR [rdx]
  408e98:	add    BYTE PTR [rax],al
  408e9a:	add    BYTE PTR [rax],al
  408e9c:	add    al,al
  408e9e:	add    BYTE PTR [rax],al
  408ea1:	push   rax
  408ea2:	or     eax,DWORD PTR [r9+0x0]
  408ea6:	add    DWORD PTR [rax],eax
  408ea8:	add    BYTE PTR [rax],al
  408eaa:	(bad)  
  408eab:	(bad)  
  408eac:	(bad)  
  408ead:	inc    DWORD PTR [rcx]
  408eaf:	add    BYTE PTR [rax],al
  408eb1:	add    BYTE PTR [rax],al
  408eb3:	add    BYTE PTR [rax],al
  408eb5:	add    BYTE PTR [rdx+rax*1],cl
  408eb8:	add    BYTE PTR [rax],al
  408eba:	add    BYTE PTR [rcx+0x53],dl
  408ebd:	jns    0x408f32
  408ebf:	je     0x408f26
  408ec1:	ins    DWORD PTR es:[rdi],dx
  408ec2:	cs rex.R jb 0x408f27
  408ec6:	ja     0x408f31
  408ec8:	outs   dx,BYTE PTR ds:[rsi]
  408ec9:	addr32 sub al,0x20
  408ecc:	push   rsi
  408ecd:	gs jb  0x408f43
  408ed0:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  408ed7:	xor    BYTE PTR cs:[rsi],ch
  408eda:	xor    BYTE PTR [rax+riz*1],ch
  408edd:	rex.XB jne 0x408f4c
  408ee0:	je     0x408f57
  408ee2:	jb     0x408f49
  408ee4:	cmp    eax,0x7475656e
  408ee9:	jb     0x408f4c
  408eeb:	ins    BYTE PTR es:[rdi],dx
  408eec:	sub    al,0x20
  408eee:	push   rax
  408eef:	jne    0x408f53
  408ef1:	ins    BYTE PTR es:[rdi],dx
  408ef2:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  408ef9:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  408efd:	(bad)  
  408efe:	xor    BYTE PTR [rbx],dh
  408f00:	xor    ax,0x3766
  408f04:	xor    WORD PTR [rcx],si
  408f07:	fs xor eax,0x61336130
  408f0d:	add    eax,0x1
  408f12:	adc    edx,DWORD PTR [rbx+0x79]
  408f15:	jae    0x408f8b
  408f17:	gs ins DWORD PTR es:[rdi],dx
  408f19:	cs rex.R jb 0x408f7e
  408f1d:	ja     0x408f88
  408f1f:	outs   dx,BYTE PTR ds:[rsi]
  408f20:	addr32 cs push rbx
  408f23:	imul   edi,DWORD PTR [rdx+0x65],0x2
  408f2a:	add    eax,0x74646977
  408f2f:	push   0x69656806
  408f34:	addr32 push 0x8000074
  408f3a:	or     BYTE PTR [rdx],al
  408f3c:	add    BYTE PTR [rax],al
  408f3e:	add    BYTE PTR [rip+0xffffffff9d000002],dl        # 0xffffffff9d408f46
  408f44:	add    DWORD PTR [rax],eax
  408f46:	add    BYTE PTR [rbx],cl
  408f48:	rex.X add BYTE PTR [rcx],al
  408f4b:	add    BYTE PTR [rax],al
  408f4d:	add    bh,bh
  408f4f:	(bad)  
  408f50:	(bad)  
  408f51:	inc    DWORD PTR [rcx]
  408f53:	add    BYTE PTR [rax],al
  408f55:	add    BYTE PTR [rax],al
  408f57:	add    BYTE PTR [rax],al
  408f59:	add    BYTE PTR [rdx+rax*1],cl
  408f5c:	add    BYTE PTR [rax],al
  408f5e:	add    BYTE PTR [rcx+0x53],dl
  408f61:	jns    0x408fd6
  408f63:	je     0x408fca
  408f65:	ins    DWORD PTR es:[rdi],dx
  408f66:	cs rex.R jb 0x408fcb
  408f6a:	ja     0x408fd5
  408f6c:	outs   dx,BYTE PTR ds:[rsi]
  408f6d:	addr32 sub al,0x20
  408f70:	push   rsi
  408f71:	gs jb  0x408fe7
  408f74:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  408f7b:	xor    BYTE PTR cs:[rsi],ch
  408f7e:	xor    BYTE PTR [rax+riz*1],ch
  408f81:	rex.XB jne 0x408ff0
  408f84:	je     0x408ffb
  408f86:	jb     0x408fed
  408f88:	cmp    eax,0x7475656e
  408f8d:	jb     0x408ff0
  408f8f:	ins    BYTE PTR es:[rdi],dx
  408f90:	sub    al,0x20
  408f92:	push   rax
  408f93:	jne    0x408ff7
  408f95:	ins    BYTE PTR es:[rdi],dx
  408f96:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  408f9d:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  408fa1:	(bad)  
  408fa2:	xor    BYTE PTR [rbx],dh
  408fa4:	xor    ax,0x3766
  408fa8:	xor    WORD PTR [rcx],si
  408fab:	fs xor eax,0x61336130
  408fb1:	add    eax,0x1
  408fb6:	adc    edx,DWORD PTR [rbx+0x79]
  408fb9:	jae    0x40902f
  408fbb:	gs ins DWORD PTR es:[rdi],dx
  408fbd:	cs rex.R jb 0x409022
  408fc1:	ja     0x40902c
  408fc3:	outs   dx,BYTE PTR ds:[rsi]
  408fc4:	movsxd rbp,DWORD PTR cs:[r15d+0x6e]
  408fca:	add    al,BYTE PTR [rax]
  408fcc:	add    BYTE PTR [rax],al
  408fce:	or     BYTE PTR [rcx+0x63],cl
  408fd1:	outs   dx,DWORD PTR ds:[rsi]
  408fd2:	outs   dx,BYTE PTR ds:[rsi]
  408fd3:	rex.R (bad) 
  408fd5:	je     0x409038
  408fd7:	or     BYTE PTR [rcx+0x63],cl
  408fda:	outs   dx,DWORD PTR ds:[rsi]
  408fdb:	outs   dx,BYTE PTR ds:[rsi]
  408fdc:	push   rbx
  408fdd:	imul   edi,DWORD PTR [rdx+0x65],0x13020407
  408fe4:	push   rbx
  408fe5:	jns    0x40905a
  408fe7:	je     0x40904e
  408fe9:	ins    DWORD PTR es:[rdi],dx
  408fea:	cs rex.R jb 0x40904f
  408fee:	ja     0x409059
  408ff0:	outs   dx,BYTE PTR ds:[rsi]
  408ff1:	addr32 cs push rbx
  408ff4:	imul   edi,DWORD PTR [rdx+0x65],0x2
  408ffb:	add    al,BYTE PTR [rax]
  408ffd:	add    BYTE PTR [rax],al
  408fff:	or     DWORD PTR [rbx],eax
  409001:	add    BYTE PTR [rax],al
  409003:	add    BYTE PTR [rip+0xfffffffffffffffc],al        # 0x409005
  409009:	adc    edx,DWORD PTR [rbx+0x79]
  40900c:	jae    0x409082
  40900e:	gs ins DWORD PTR es:[rdi],dx
  409010:	cs rex.R jb 0x409075
  409014:	ja     0x40907f
  409016:	outs   dx,BYTE PTR ds:[rsi]
  409017:	addr32 cs push rbx
  40901a:	imul   edi,DWORD PTR [rdx+0x65],0x2
  409021:	add    eax,0x74646977
  409026:	push   0x69656806
  40902b:	addr32 push 0x8000074
  409031:	or     BYTE PTR [rdx],al
	...
  40903b:	add    BYTE PTR [rax],al
  40903d:	add    BYTE PTR [rdi],cl
  40903f:	add    eax,DWORD PTR [rax]
  409041:	add    BYTE PTR [rax],al
  409043:	xchg   esi,eax
  409044:	(bad)  
  409045:	add    BYTE PTR [rax],al
  409047:	add    al,BYTE PTR [rax]
  409049:	add    BYTE PTR [rcx],al
  40904b:	add    BYTE PTR [rsi],al
  40904d:	add    BYTE PTR [rax],ah
  40904f:	and    BYTE PTR [rax],dl
  409051:	add    BYTE PTR [rcx],al
  409053:	add    BYTE PTR [rax+rax*1],al
  409056:	call   0x6640905d
  40905b:	add    BYTE PTR [rax],al
  40905d:	add    BYTE PTR [rax],dl
  40905f:	adc    BYTE PTR [rax],dl
  409061:	add    BYTE PTR [rcx],al
  409063:	add    BYTE PTR [rax+rax*1],al
  409066:	sub    BYTE PTR [rcx],al
  409068:	add    BYTE PTR [rax],al
  40906a:	rex.WRX add r8,QWORD PTR [rax]
  40906d:	add    BYTE PTR [rax],ah
  40906f:	and    BYTE PTR [rax],al
  409071:	add    BYTE PTR [rcx],al
  409073:	add    BYTE PTR [rax],cl
  409075:	add    BYTE PTR [rax+0x76000008],ch
  40907b:	add    al,0x0
  40907d:	add    BYTE PTR [rax],dl
  40907f:	adc    BYTE PTR [rax],al
  409081:	add    BYTE PTR [rcx],al
  409083:	add    BYTE PTR [rax],cl
  409085:	add    BYTE PTR [rax+0x5],ch
  409088:	add    BYTE PTR [rax],al
  40908a:	(bad)  
  40908b:	or     eax,0x20200000
  409090:	add    BYTE PTR [rax],al
  409092:	add    DWORD PTR [rax],eax
  409094:	and    BYTE PTR [rax],al
  409096:	test   al,0x10
  409098:	add    BYTE PTR [rax],al
  40909a:	xchg   BYTE PTR [rdx],dl
  40909c:	add    BYTE PTR [rax],al
  40909e:	adc    BYTE PTR [rax],dl
  4090a0:	add    BYTE PTR [rax],al
  4090a2:	add    DWORD PTR [rax],eax
  4090a4:	and    BYTE PTR [rax],al
  4090a6:	push   0x2e000004
  4090ab:	and    eax,DWORD PTR [rax]
  4090ad:	add    BYTE PTR [rax],ch
  4090af:	add    BYTE PTR [rax],al
  4090b1:	add    BYTE PTR [rax],ah
  4090b3:	add    BYTE PTR [rax],al
  4090b5:	add    BYTE PTR [rax+0x0],al
  4090b8:	add    BYTE PTR [rax],al
  4090ba:	add    DWORD PTR [rax],eax
  4090bc:	add    al,0x0
  4090be:	add    BYTE PTR [rax],al
  4090c0:	add    BYTE PTR [rax],al
  4090c2:	add    BYTE PTR [rdx],al
	...
  4090dc:	add    BYTE PTR [rax],0x0
  4090df:	add    BYTE PTR [rax],0x0
  4090e2:	add    BYTE PTR [rax+0x800080],al
  4090e8:	add    BYTE PTR [rax],al
  4090ea:	add    BYTE PTR [rax],0x80
  4090ed:	add    BYTE PTR [rax-0x7fffff80],al
  4090f3:	add    BYTE PTR [rax-0x3f3f4000],0x0
  4090fa:	add    BYTE PTR [rax],al
  4090fc:	inc    DWORD PTR [rax]
  4090fe:	add    bh,bh
  409100:	add    BYTE PTR [rax],al
  409102:	add    bh,bh
  409104:	inc    DWORD PTR [rax]
  409106:	inc    DWORD PTR [rax]
  409108:	add    BYTE PTR [rax],al
  40910a:	inc    DWORD PTR [rax]
  40910c:	inc    DWORD PTR [rax]
  40910e:	(bad)  
  40910f:	inc    DWORD PTR [rax]
  409111:	add    bh,bh
  409113:	(bad)  
  409114:	inc    DWORD PTR [rax]
  409116:	add    BYTE PTR [rax],al
  409118:	add    BYTE PTR [rax],al
  40911a:	add    BYTE PTR [rax],al
  40911c:	add    BYTE PTR [rdi],ah
  40911e:	and    dh,BYTE PTR [rdx+0x36]
  409121:	and    esp,DWORD PTR [rbx+0x62]
  409124:	add    BYTE PTR ss:[rax],al
  409127:	add    BYTE PTR [rax],al
  409129:	add    BYTE PTR [rax],al
  40912b:	add    BYTE PTR [rax],al
  40912d:	(bad)  
  40912e:	jae    0x4091a3
  409130:	movsxd esp,DWORD PTR [rdx+0x72]
  409133:	and    eax,DWORD PTR ss:[rax]
  409136:	add    BYTE PTR [rax],al
  409138:	add    BYTE PTR [rax],al
  40913a:	add    BYTE PTR [rax],al
  40913c:	add    BYTE PTR [rax+0x77],bh
  40913f:	es ja  0x409175
  409142:	(bad)  
  409143:	(bad)  
  409144:	add    BYTE PTR ss:[rax],al
  409147:	add    BYTE PTR [rax],al
  409149:	add    BYTE PTR [rax],al
  40914b:	add    BYTE PTR [rax],al
  40914d:	sub    BYTE PTR [rdx+0x78],bh
  409150:	and    esi,DWORD PTR [rsi+0x3a]
  409153:	jb     0x4091b8
	...
  40915d:	(bad)  
  40915e:	(bad)  
  40915f:	clc    
  409160:	(bad)  
  409161:	jp     0x4091da
  409163:	xor    esp,DWORD PTR [rsi+0x0]
  409169:	add    BYTE PTR [rax],al
  40916b:	add    BYTE PTR [rax],al
  40916d:	js     0x4090fe
  40916f:	dec    DWORD PTR [rax+0x72638870]
  409175:	add    BYTE PTR [rax],al
  409177:	add    BYTE PTR [rax],al
  409179:	add    BYTE PTR [rax],al
  40917b:	add    BYTE PTR [rdi],dl
  40917d:	js     0x4091fa
  40917f:	(bad)  
  409180:	clc    
  409181:	vpperm ymm0,ymm11,YMMWORD PTR [r8],ymm0
  409187:	add    BYTE PTR [rax],al
  409189:	add    BYTE PTR [rax],al
  40918b:	(bad)  
  40918c:	jae    0x4091c6
  40918e:	mov    bh,BYTE PTR [rdi-0x1]
  409191:	(bad)  
  409192:	clc    
  409193:	(bad)  
  409194:	add    BYTE PTR es:[rax],al
  409197:	add    BYTE PTR [rax],al
  409199:	add    BYTE PTR [rbx-0x8],dh
  40919c:	mov    BYTE PTR [rax-0x78],bh
  40919f:	ja     0x4091a0
  4091a1:	(bad)  
  4091a2:	clc    
  4091a3:	jae    0x409208
  4091a5:	add    BYTE PTR [rax],al
  4091a7:	add    BYTE PTR [rax],al
  4091a9:	ja     0x409133
  4091ab:	clc    
  4091ac:	mov    bh,0x38
  4091ae:	xchg   DWORD PTR [rdi+0x77f8fff8],esp
  4091b4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4091b5:	add    BYTE PTR [rax],al
  4091b7:	add    BYTE PTR [rdi],al
  4091b9:	mov    eax,0x78878f8f
  4091be:	mov    BYTE PTR [rdi-0x1],bh
  4091c1:	(bad)  
  4091c2:	(bad)  
  4091c3:	jp     0x409237
  4091c5:	add    BYTE PTR [rax],al
  4091c7:	add    BYTE PTR [rdi],al
  4091c9:	mov    edi,DWORD PTR [rdi-0x78]
  4091cc:	mov    eax,0xff8f8a38
  4091d1:	(bad)  
  4091d2:	push   QWORD PTR [rdi+0x37]
  4091d5:	add    BYTE PTR [rax],al
  4091d7:	add    BYTE PTR [rdi],al
  4091d9:	mov    BYTE PTR [rdi-0x77877871],cl
  4091df:	xchg   DWORD PTR [rdi+0x728a8787],eax
  4091e5:	add    BYTE PTR [rax],al
  4091e7:	add    BYTE PTR [rdi],al
  4091e9:	mov    bh,0xbf
  4091eb:	sti    
  4091ec:	js     0x409226
  4091ee:	mov    BYTE PTR [rax-0x77777778],cl
  4091f4:	jb     0x4091f6
  4091f6:	add    BYTE PTR [rax],al
  4091f8:	(bad)  
  4091f9:	mov    BYTE PTR [rax-0x58887408],cl
  4091ff:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  409200:	(bad)  
  409201:	movabs ds:0x8b070000007a7a6a,eax
  40920a:	mov    BYTE PTR [rbx+0x73318788],cl
  409210:	jae    0x409285
  409212:	jae    0x409249
  409214:	add    BYTE PTR [rax],al
  409216:	add    BYTE PTR [rax],al
  409218:	(bad)  
  409219:	mov    BYTE PTR [rax+0x33888bff],cl
  40921f:	(bad)  
  409220:	xor    esi,DWORD PTR [rbx+0x39]
  409223:	jae    0x409225
  409225:	add    BYTE PTR [rax],al
  409227:	add    BYTE PTR [rdi],al
  409229:	mov    eax,0x8b88ff88
  40922e:	jno    0x409241
  409230:	(bad)  
  409231:	(bad)  
  409232:	(bad)  
  409233:	xor    eax,0x0
  409238:	(bad)  
  409239:	mov    BYTE PTR [rdi+0x3788b8f8],bh
  40923f:	ja     0x409272
  409241:	xor    DWORD PTR [rdi],esi
  409243:	adc    eax,DWORD PTR [rax]
  409245:	add    BYTE PTR [rax],al
  409247:	add    BYTE PTR [rdi],al
  409249:	mov    edi,0x3b778b88
  40924e:	push   rdi
  40924f:	mov    BYTE PTR [rdi+0x73],dh
  409252:	adc    DWORD PTR [rip+0x0],esi        # 0x409258
  409258:	(bad)  
  409259:	xchg   DWORD PTR [rdi+0x33988888],esi
  40925f:	mov    eax,0x3177888b
  409264:	add    BYTE PTR [rax],al
  409266:	add    BYTE PTR [rax],al
  409268:	mov    edi,DWORD PTR [rax-0x78]
  40926b:	mov    BYTE PTR [rdi+0x787b9883],dh
  409271:	mov    eax,DWORD PTR [rdi+0x7077]
  409277:	jnp    0x409208
  409279:	mov    BYTE PTR [rbx+0x7b337979],cl
  40927f:	js     0x409219
  409281:	cmp    BYTE PTR [rbx-0x75],bh
  409284:	xchg   DWORD PTR [rax],eax
  409286:	(bad)  
  409287:	xchg   DWORD PTR [rdi-0x49],esi
  40928a:	jns    0x4092ff
  40928c:	(bad)  
  40928d:	(bad)  
  40928e:	cwde   
  40928f:	cwde   
  409290:	mov    bh,0x89
  409292:	xchg   DWORD PTR [rdi+0x8073],eax
  409298:	or     BYTE PTR [rdi-0x4d],dh
  40929b:	jae    0x409316
  40929d:	jae    0x4092d7
  40929f:	mov    bh,0x8b
  4092a1:	mov    edi,DWORD PTR [rbx+0x7b]
  4092a4:	add    BYTE PTR [rax],al
  4092a6:	add    BYTE PTR [rax],al
  4092a8:	jnp    0x409232
  4092aa:	ja     0x409325
  4092ac:	(bad)  
  4092ad:	cmp    DWORD PTR [rdi-0x77],esi
  4092b0:	xor    DWORD PTR [rdi+0x78],0xffffff98
  4092b4:	jo     0x4092b6
  4092b6:	add    BYTE PTR [rdi],al
  4092b8:	mov    BYTE PTR [rax+0x733bb7b8],cl
  4092be:	(bad)  
  4092bf:	mov    eax,0x88b7b738
  4092c4:	mov    bh,0x0
  4092c6:	add    BYTE PTR [rax-0x74777701],cl
  4092cc:	xchg   DWORD PTR [rdi],esi
  4092ce:	cmp    BYTE PTR [rdi-0x48],dh
  4092d1:	mov    BYTE PTR [rax+0x7088b8],cl
  4092d7:	cmp    BYTE PTR [rax-0x74777771],cl
  4092dd:	mov    DWORD PTR [rbx-0x77477748],eax
  4092e3:	mov    BYTE PTR [rbx-0x48ffff90],cl
  4092e9:	mov    eax,0x8b8888f8
  4092ee:	js     0x409368
  4092f0:	mov    BYTE PTR [rax+0x70b888],cl
  4092f6:	add    BYTE PTR [rax],al
  4092f8:	add    BYTE PTR [rax],cl
  4092fa:	cmp    ecx,DWORD PTR [rax+0x7b0070b8]
  409300:	mov    BYTE PTR [rax+0xb7],cl
  409306:	add    BYTE PTR [rax],al
  409308:	add    BYTE PTR [rax],al
  40930a:	add    BYTE PTR [rdi+0x89],al
  409310:	jnp    0x409389
  409312:	add    BYTE PTR [rax],al
  409314:	add    BYTE PTR [rax],al
  409316:	(bad)  
  409317:	cld    
  409318:	add    BYTE PTR [rbx],al
  40931a:	(bad)  
  40931b:	cld    
  40931c:	add    BYTE PTR [rbx],al
  40931e:	(bad)  
  40931f:	cld    
  409320:	add    BYTE PTR [rbx],al
  409322:	(bad)  
  409323:	cld    
  409324:	add    BYTE PTR [rbx],al
  409326:	(bad)  
  409327:	cld    
  409328:	add    BYTE PTR [rbx],al
  40932a:	(bad)  
  40932b:	cld    
  40932c:	add    BYTE PTR [rbx],al
  40932e:	push   rax
  409330:	add    BYTE PTR [rbx],al
  409332:	inc    eax
  409334:	add    BYTE PTR [rbx],al
  409336:	inc    DWORD PTR [rax]
  409338:	add    BYTE PTR [rbx],al
  40933a:	cld    
  40933b:	add    BYTE PTR [rax],al
  40933d:	add    edi,eax
  40933f:	add    BYTE PTR [rax],al
  409341:	add    edi,eax
  409343:	add    BYTE PTR [rax],al
  409345:	add    edi,eax
  409347:	add    BYTE PTR [rax],al
  409349:	add    edi,eax
  40934b:	add    BYTE PTR [rax],al
  40934d:	add    edi,eax
  40934f:	add    BYTE PTR [rax],al
  409351:	add    edi,eax
  409353:	add    BYTE PTR [rax],al
  409355:	psubb  mm0,QWORD PTR [rax]
  409358:	add    BYTE PTR [rdi],cl
  40935a:	clc    
  40935b:	add    BYTE PTR [rax],al
  40935d:	psubb  mm0,QWORD PTR [rax]
  409360:	add    BYTE PTR [rdi],cl
  409362:	clc    
  409363:	add    BYTE PTR [rax],al
  409365:	psubb  mm0,QWORD PTR [rax]
  409368:	add    BYTE PTR [rdi],cl
  40936a:	lock add BYTE PTR [rax],al
  40936d:	(bad)  
  40936e:	rol    BYTE PTR [rax],0x0
  409371:	add    eax,DWORD PTR [rax-0x7ff0000]
  409377:	add    BYTE PTR [rax],al
  409379:	(bad)  
  40937b:	add    BYTE PTR [rax],al
  40937d:	(bad)  
  40937e:	loopne 0x409380
  409380:	add    BYTE PTR [rbx],al
  409382:	rol    BYTE PTR [rax],0x0
  409385:	add    eax,eax
  409387:	add    BYTE PTR [rax],al
  409389:	add    eax,esi
  40938b:	add    BYTE PTR [rax],al
  40938d:	(bad)  
  40938e:	inc    BYTE PTR [rcx]
  409390:	sar    BYTE PTR [rdi],0xff
  409393:	ret    
  409394:	lock jmp FWORD PTR [rax]
  409397:	add    BYTE PTR [rax],al
  409399:	add    BYTE PTR [rax],dl
  40939b:	add    BYTE PTR [rax],al
  40939d:	add    BYTE PTR [rax],ah
  40939f:	add    BYTE PTR [rax],al
  4093a1:	add    BYTE PTR [rcx],al
  4093a3:	add    BYTE PTR [rax+rax*1],al
  4093a6:	add    BYTE PTR [rax],al
  4093a8:	add    BYTE PTR [rax],al
  4093aa:	add    BYTE PTR [rax],0x0
	...
  4093c1:	add    BYTE PTR [rax],al
  4093c3:	add    BYTE PTR [rax+0x800000],al
  4093c9:	add    BYTE PTR [rax],al
  4093cb:	add    BYTE PTR [rax+0x8000],0x0
  4093d2:	add    BYTE PTR [rax],0x80
  4093d5:	add    BYTE PTR [rax-0x7fffff80],al
  4093db:	add    BYTE PTR [rax-0x3f3f4000],0x0
  4093e2:	add    BYTE PTR [rax],al
  4093e4:	inc    DWORD PTR [rax]
  4093e6:	add    bh,bh
  4093e8:	add    BYTE PTR [rax],al
  4093ea:	add    bh,bh
  4093ec:	inc    DWORD PTR [rax]
  4093ee:	inc    DWORD PTR [rax]
  4093f0:	add    BYTE PTR [rax],al
  4093f2:	inc    DWORD PTR [rax]
  4093f4:	inc    DWORD PTR [rax]
  4093f6:	(bad)  
  4093f7:	inc    DWORD PTR [rax]
  4093f9:	add    bh,bh
  4093fb:	(bad)  
  4093fc:	inc    DWORD PTR [rax]
  4093fe:	add    BYTE PTR [rax],al
  409400:	add    BYTE PTR [rdi],al
  409402:	(bad)  
  409403:	and    esp,DWORD PTR [rdx]
  409405:	add    BYTE PTR [rax],al
  409407:	add    BYTE PTR [rax],al
  409409:	jae    0x40947e
  40940b:	(bad)  
  40940c:	xor    BYTE PTR ss:[rax],al
  40940f:	add    BYTE PTR [rbx-0x49],dh
  409412:	jg     0x40944a
  409414:	(bad)  
  409415:	and    BYTE PTR [rax],al
  409417:	(bad)  
  409418:	(bad)  
  409419:	jae    0x4093a5
  40941b:	icebp  
  40941c:	mul    DWORD PTR [rax]
  40941e:	add    BYTE PTR [rbx],al
  409420:	mov    BYTE PTR [rdi+0x20f77f87],dh
  409426:	add    BYTE PTR [rbx],cl
  409428:	mov    esi,DWORD PTR [rbx-0x76]
  40942b:	(bad)  
  40942c:	clc    
  40942d:	xor    BYTE PTR [rax],al
  40942f:	(bad)  
  409430:	mov    BYTE PTR [rbx-0x5f777771],al
  409436:	add    BYTE PTR [rbx],cl
  409438:	mov    BYTE PTR [rdi+0x707a7a7a],dh
  40943e:	add    BYTE PTR [rdi],al
  409440:	mov    esi,DWORD PTR [rbx+0x33]
  409443:	xchg   DWORD PTR [rcx],esi
  409445:	add    BYTE PTR [rax],al
  409447:	jnp    0x4094c2
  409449:	jno    0x409482
  40944b:	fwait
  40944c:	js     0x40947e
  40944e:	(bad)  
  40944f:	jns    0x409482
  409451:	add    DWORD PTR [rbx],esi
  409453:	cmp    DWORD PTR [rcx],0x77
  409456:	add    BYTE PTR [rbx-0x64c8ce8d],cl
  40945c:	jnp    0x40948e
  40945e:	or     BYTE PTR [rdi+0x739b3388],cl
  409464:	mov    BYTE PTR [rdi-0x47777500],al
  40946a:	(bad)  
  40946b:	mov    BYTE PTR [rdi-0x74ffff50],dh
  409471:	jo     0x409473
  409473:	mov    eax,0x80
  409478:	add    BYTE PTR [rax],al
  40947a:	add    BYTE PTR [rax],al
  40947c:	add    BYTE PTR [rax],al
  40947e:	inc    BYTE PTR [rcx]
  409480:	add    BYTE PTR [rax],al
  409482:	cld    
  409483:	add    DWORD PTR [rax],eax
  409485:	add    al,dh
  409487:	add    DWORD PTR [rax],eax
  409489:	add    al,ah
  40948b:	add    DWORD PTR [rax],eax
  40948d:	add    al,ah
  40948f:	add    DWORD PTR [rax],eax
  409491:	add    al,ah
  409493:	add    DWORD PTR [rax],eax
  409495:	add    al,ah
  409497:	add    DWORD PTR [rax],eax
  409499:	add    al,ah
  40949b:	add    DWORD PTR [rax],eax
  40949d:	add    al,ah
  40949f:	add    eax,DWORD PTR [rax]
  4094a1:	add    al,al
  4094a3:	add    DWORD PTR [rax],eax
  4094a5:	add    BYTE PTR [rax-0x40000000],al
  4094ab:	add    DWORD PTR [rax],eax
  4094ad:	add    BYTE PTR [rax-0x40000000],al
  4094b3:	add    DWORD PTR [rax],0xc7f100
  4094b9:	add    bh,bh
  4094bb:	inc    DWORD PTR [rax]
  4094bd:	add    BYTE PTR [rax],ch
  4094bf:	add    BYTE PTR [rax],al
  4094c1:	add    BYTE PTR [rax],ah
  4094c3:	add    BYTE PTR [rax],al
  4094c5:	add    BYTE PTR [rax+0x0],al
  4094c8:	add    BYTE PTR [rax],al
  4094ca:	add    DWORD PTR [rax],eax
  4094cc:	or     BYTE PTR [rax],al
  4094ce:	add    BYTE PTR [rax],al
  4094d0:	add    BYTE PTR [rax],al
  4094d2:	add    BYTE PTR [rax+rax*1],al
	...
  4094dd:	add    BYTE PTR [rax],al
  4094df:	add    DWORD PTR [rax],eax
  4094e1:	add    BYTE PTR [rax],al
  4094e3:	add    DWORD PTR [rax],eax
  4094e5:	add    BYTE PTR [rax],al
  4094e7:	add    BYTE PTR [rax],al
  4094e9:	add    BYTE PTR [rbx],dh
  4094eb:	xor    esi,DWORD PTR [rbx]
  4094ed:	add    BYTE PTR [rbx],dh
  4094ef:	xor    ax,WORD PTR [rax]
  4094f2:	add    BYTE PTR [rbx],dh
  4094f4:	data16 add BYTE PTR [rbx],dh
  4094f7:	xor    esp,DWORD PTR [rsi+0x0]
  4094fa:	add    BYTE PTR [rsi+0x66],ah
  4094fd:	add    BYTE PTR [rbx],dh
  4094ff:	data16 data16 add BYTE PTR [rsi+0x66],ah
  409504:	data16 add BYTE PTR [rbx],dh
  409507:	cdq    
  409508:	xor    eax,DWORD PTR [rax]
  40950a:	xor    ebx,DWORD PTR [rcx-0x6699ff9a]
  409510:	data16 add BYTE PTR [rsi-0x34],ah
  409514:	data16 add BYTE PTR [rax],al
  409517:	cwd    
  409519:	add    BYTE PTR [rbx],dh
  40951b:	cwd    
  40951d:	add    BYTE PTR [rbx],dh
  40951f:	cdq    
  409520:	cdq    
  409521:	add    BYTE PTR [rsi-0x67],ah
  409524:	cdq    
  409525:	add    BYTE PTR [rsi-0x34],ah
  409528:	cdq    
  409529:	add    BYTE PTR [rbx],dh
  40952b:	cdq    
  40952c:	int3   
  40952d:	add    BYTE PTR [rsi-0x67],ah
  409530:	int3   
  409531:	add    BYTE PTR [rsi-0x34],ah
  409534:	int3   
  409535:	add    BYTE PTR [rax-0x66ff5257],dl
  40953b:	int3   
  40953c:	cdq    
  40953d:	add    BYTE PTR [rcx-0x66ff3367],bl
  409543:	int3   
  409544:	int3   
  409545:	add    BYTE PTR [rcx-0x3fff0034],bl
  40954b:	rol    al,0x0
  40954e:	int3   
  40954f:	int3   
  409550:	int3   
  409551:	add    al,al
  409553:	fadd   st(0),st
  409555:	add    bh,dl
  409557:	xlat   BYTE PTR ds:[rbx]
  409558:	xlat   BYTE PTR ds:[rbx]
  409559:	add    ch,bl
  40955b:	fstp   st(5)
  40955d:	add    dh,al
  40955f:	(bad)  
  409560:	out    dx,eax
  409561:	add    dh,dl
  409563:	out    0xe7,eax
  409565:	add    ah,cl
  409567:	(bad)  
  409568:	inc    DWORD PTR [rax]
  40956a:	jrcxz  0x40954f
  40956c:	jrcxz  0x40956e
  40956e:	icebp  
  40956f:	icebp  
  409570:	icebp  
  409571:	add    al,dh
  409573:	sti    
  409574:	inc    DWORD PTR [rax]
	...
  4098e2:	(bad)  
  4098e3:	(bad)  
  4098e4:	inc    DWORD PTR [rax]
	...
  4098f2:	add    BYTE PTR [rax],al
  4098f4:	or     BYTE PTR [rdx],al
  4098f6:	add    al,BYTE PTR [rdx]
  4098f8:	add    al,BYTE PTR [rdx]
  4098fa:	add    al,BYTE PTR [rdx]
  4098fc:	add    al,BYTE PTR [rdx]
  4098fe:	add    al,BYTE PTR [rdx]
  409900:	add    al,BYTE PTR [rdx]
  409902:	add    al,BYTE PTR [rdx]
	...
  409914:	or     BYTE PTR [rdx],cl
  409916:	or     cl,BYTE PTR [rcx]
  409918:	or     DWORD PTR [rcx],ecx
  40991a:	or     BYTE PTR [rax],cl
  40991c:	or     BYTE PTR [rax],cl
  40991e:	or     BYTE PTR [rax],cl
  409920:	or     BYTE PTR [rax],cl
  409922:	or     BYTE PTR [rdx],al
	...
  409934:	or     BYTE PTR [rbx],bl
  409936:	or     ecx,DWORD PTR [rdx]
  409938:	or     DWORD PTR [rdx],eax
  40993a:	or     cl,BYTE PTR [rdx]
  40993c:	or     DWORD PTR [rcx],ecx
  40993e:	or     BYTE PTR [rcx],cl
  409940:	or     BYTE PTR [rcx],cl
  409942:	or     BYTE PTR [rdx],al
	...
  409954:	or     BYTE PTR [rbx],bl
  409956:	adc    BYTE PTR [rdx],cl
  409958:	add    bl,BYTE PTR [rcx]
  40995a:	add    cl,BYTE PTR [rcx]
  40995c:	or     cl,BYTE PTR [rax]
  40995e:	or     DWORD PTR [rax],ecx
  409960:	or     DWORD PTR [rax],ecx
  409962:	or     BYTE PTR [rdx],al
	...
  409974:	or     BYTE PTR [rbx],bl
  409976:	adc    BYTE PTR [rdx],al
  409978:	sbb    eax,0xa021919
  40997d:	or     DWORD PTR [rdi],eax
  40997f:	add    cl,BYTE PTR [rcx]
  409981:	or     DWORD PTR [rax],ecx
  409983:	add    al,BYTE PTR [rax]
	...
  409991:	add    BYTE PTR [rax],al
  409993:	add    BYTE PTR [rdx],cl
  409995:	sbb    edx,DWORD PTR [rip+0x1a22ffff]        # 0x1a63999a
  40999b:	sbb    DWORD PTR [rdx],eax
  40999d:	add    DWORD PTR [rdx],ebx
  40999f:	sbb    DWORD PTR [rax],ecx
  4099a1:	or     DWORD PTR [rax],ecx
  4099a3:	add    al,BYTE PTR [rax]
	...
  4099b1:	add    BYTE PTR [rsp+rax*1],al
  4099b4:	or     bl,BYTE PTR [rbx]
  4099b6:	adc    eax,0xffffff10
  4099bb:	sbb    al,0x19
  4099bd:	sbb    al,0x1c
  4099bf:	sbb    DWORD PTR [rax],ecx
  4099c1:	or     DWORD PTR [rax],ecx
  4099c3:	add    al,BYTE PTR [rax]
	...
  4099cd:	add    BYTE PTR [rax],al
  4099cf:	add    BYTE PTR [rip+0x90f120d],cl        # 0x94fabe2
  4099d5:	sbb    edx,DWORD PTR [rip+0xffffffffffff0b10]        # 0x3fa4eb
  4099db:	jmp    QWORD PTR [rdx]
  4099dd:	and    ah,BYTE PTR [rdx]
  4099df:	sbb    cl,BYTE PTR [rcx]
  4099e1:	or     cl,BYTE PTR [rax]
  4099e3:	add    al,BYTE PTR [rax]
	...
  4099ed:	add    BYTE PTR [rdi],cl
  4099ef:	or     eax,0x120f1f1f
  4099f4:	or     bl,BYTE PTR [rbx]
  4099f6:	adc    eax,0xff0a1015
  4099fb:	and    bh,bh
  4099fd:	jmp    QWORD PTR [rdx]
  4099ff:	sbb    cl,BYTE PTR [rdx]
  409a01:	or     DWORD PTR [rax],ecx
  409a03:	add    al,BYTE PTR [rax]
  409a05:	add    BYTE PTR [rax],al
  409a07:	add    BYTE PTR [rax],al
  409a09:	add    BYTE PTR [rax],al
  409a0b:	add    BYTE PTR [rdi],cl
  409a0d:	movlps xmm3,QWORD PTR [rdi]
  409a10:	(bad)  
  409a11:	(bad)  
  409a12:	adc    dl,BYTE PTR [rdx]
  409a14:	or     bl,BYTE PTR [rbx]
  409a16:	adc    eax,0xff060a15
  409a1b:	and    bh,bh
  409a1d:	and    esp,DWORD PTR [rdx]
  409a1f:	sbb    al,0xa
  409a21:	or     cl,BYTE PTR [rcx]
  409a23:	add    al,BYTE PTR [rax]
  409a25:	add    BYTE PTR [rax],al
  409a27:	add    BYTE PTR [rax],al
  409a29:	add    BYTE PTR [rax],al
  409a2b:	movlps xmm2,QWORD PTR [rdi]
  409a2e:	(bad)  
  409a2f:	and    ebx,DWORD PTR [rdi]
  409a31:	(bad)  
  409a32:	(bad)  
  409a33:	adc    cl,BYTE PTR [rdx]
  409a35:	sbb    edx,DWORD PTR [rip+0xffffffffffff1015]        # 0x3faa50
  409a3b:	(bad)  
  409a3c:	(bad)  
  409a3d:	(bad)  
  409a3e:	jmp    QWORD PTR [rcx]
  409a40:	or     cl,BYTE PTR [rbx]
  409a42:	or     DWORD PTR [rdx],eax
  409a44:	add    BYTE PTR [rax],al
  409a46:	add    BYTE PTR [rax],al
  409a48:	add    BYTE PTR [rax],al
  409a4a:	add    BYTE PTR [rdi],cl
  409a4c:	sbb    BYTE PTR [rdx],dl
  409a4e:	adc    ah,BYTE PTR [rbx]
  409a50:	(bad)  
  409a51:	(bad)  
  409a52:	adc    dl,BYTE PTR [rdi]
  409a54:	or     bl,BYTE PTR [rbx]
  409a56:	adc    eax,0xffff1015
  409a5b:	(bad)  
  409a5c:	(bad)  
  409a5d:	(bad)  
  409a5e:	(bad)  
  409a5f:	dec    DWORD PTR [rbx]
  409a61:	or     cl,BYTE PTR [rcx]
  409a63:	add    al,BYTE PTR [rax]
  409a65:	add    BYTE PTR [rax],al
  409a67:	add    BYTE PTR [rax],al
  409a69:	add    BYTE PTR [rax],al
  409a6b:	movhps QWORD PTR [rdi],xmm2
  409a6e:	(bad)  
  409a6f:	and    ebx,DWORD PTR [rdi]
  409a71:	(bad)  
  409a72:	(bad)  
  409a73:	adc    cl,BYTE PTR [rdx]
  409a75:	sbb    edx,DWORD PTR [rip+0x15151515]        # 0x1555af90
  409a7b:	adc    eax,0x15151515
  409a80:	adc    eax,0x20a0b
  409a85:	add    BYTE PTR [rax],al
  409a87:	add    BYTE PTR [rax],al
  409a89:	add    BYTE PTR [rax],al
  409a8b:	prefetcht1 BYTE PTR [rdx]
  409a8e:	(bad)  
  409a8f:	and    ebx,DWORD PTR [rdi]
  409a91:	sbb    BYTE PTR [rdx],dl
  409a93:	(bad)  
  409a94:	or     bl,BYTE PTR [rbx]
  409a96:	sbb    ebx,DWORD PTR [rbx]
  409a98:	sbb    ebx,DWORD PTR [rbx]
  409a9a:	sbb    ebx,DWORD PTR [rbx]
  409a9c:	sbb    ebx,DWORD PTR [rbx]
  409a9e:	sbb    ebx,DWORD PTR [rbx]
  409aa0:	sbb    ebx,DWORD PTR [rbx]
  409aa2:	or     eax,DWORD PTR [rdx]
  409aa4:	add    BYTE PTR [rax],al
  409aa6:	add    BYTE PTR [rax],al
  409aa8:	add    BYTE PTR [rax],al
  409aaa:	add    BYTE PTR [rdi],cl
  409aac:	sbb    BYTE PTR [rdi],dl
  409aae:	sbb    BYTE PTR [rdi],bl
  409ab0:	(bad)  
  409ab1:	(bad)  
  409ab2:	(bad)  
  409ab3:	adc    cl,BYTE PTR [rdx]
  409ab5:	or     cl,BYTE PTR [rdx]
  409ab7:	or     cl,BYTE PTR [rdx]
  409ab9:	or     cl,BYTE PTR [rdx]
  409abb:	or     cl,BYTE PTR [rdx]
  409abd:	or     BYTE PTR [rdx],cl
  409abf:	or     BYTE PTR [rdx],cl
  409ac1:	or     BYTE PTR [rax],cl
  409ac3:	or     BYTE PTR [rax],al
  409ac5:	add    BYTE PTR [rax],al
  409ac7:	add    BYTE PTR [rax],al
  409ac9:	add    BYTE PTR [rax],al
  409acb:	movhps QWORD PTR [rax],xmm3
  409ace:	(bad)  
  409acf:	(bad)  
  409ad0:	sbb    BYTE PTR [rdi],dl
  409ad2:	sbb    BYTE PTR [rbx],dl
  409ad4:	(bad)  
  409ad5:	adc    al,BYTE PTR [rsi]
  409ad7:	add    ecx,DWORD PTR [rip+0xd060d06]        # 0xd46a7e3
  409add:	or     eax,0x40d0d0d
	...
  409aea:	add    BYTE PTR [rdi],cl
  409aec:	sbb    BYTE PTR [rdi],dl
  409aee:	sbb    BYTE PTR [rsi],bl
  409af0:	and    esp,DWORD PTR [rbx]
  409af2:	(bad)  
  409af3:	sbb    BYTE PTR [rdi],dl
  409af5:	(bad)  
  409af6:	(bad)  
  409af7:	add    eax,DWORD PTR [rsi]
  409af9:	or     eax,0x60d0d06
  409afe:	or     eax,0x40d0d
	...
  409b0b:	prefetcht1 BYTE PTR [rdi]
  409b0e:	sbb    BYTE PTR [rdi],bl
  409b10:	and    esp,DWORD PTR [rbx]
  409b12:	(bad)  
  409b13:	(bad)  
  409b14:	sbb    BYTE PTR [rdi],dl
  409b16:	(bad)  
  409b17:	add    eax,DWORD PTR [rbx]
  409b19:	add    ecx,DWORD PTR [rip+0xc060d0d]        # 0xc46a82c
  409b1f:	or     eax,0x40d
  409b24:	add    BYTE PTR [rax],al
  409b26:	add    BYTE PTR [rax],al
  409b28:	add    BYTE PTR [rax],al
  409b2a:	add    BYTE PTR [rdi],cl
  409b2c:	(bad)  
  409b2d:	sbb    BYTE PTR [rdi],dl
  409b2f:	and    esp,DWORD PTR [rbx]
  409b31:	(bad)  
  409b32:	sbb    BYTE PTR [rax],bl
  409b34:	(bad)  
  409b35:	(bad)  
  409b36:	(bad)  
  409b37:	(bad)  
  409b38:	(bad)  
  409b39:	clts   
  409b3b:	add    eax,DWORD PTR [rbx]
  409b3d:	or     al,0x6
  409b3f:	or     eax,0x405
  409b44:	add    BYTE PTR [rax],al
  409b46:	add    BYTE PTR [rax],al
  409b48:	add    BYTE PTR [rax],al
  409b4a:	add    BYTE PTR [rdi],cl
  409b4c:	sbb    BYTE PTR [rax],bl
  409b4e:	(bad)  
  409b4f:	(bad)  
  409b50:	adc    dl,BYTE PTR [rdx]
  409b52:	(bad)  
  409b53:	prefetchwt1 BYTE PTR [rcx]
  409b56:	or     eax,0xf171712
  409b5b:	(bad)  
  409b5c:	lsl    eax,WORD PTR [rbx]
  409b5f:	add    eax,DWORD PTR [rip+0x4]        # 0x409b69
  409b65:	add    BYTE PTR [rax],al
  409b67:	add    BYTE PTR [rax],al
  409b69:	add    BYTE PTR [rax],al
  409b6b:	movhps QWORD PTR [rdx],xmm2
  409b6e:	adc    cl,BYTE PTR [rdi]
  409b70:	(bad)  
  409b71:	(bad)  
  409b72:	(bad)  
  409b73:	sbb    BYTE PTR [rdx],dl
  409b75:	adc    cl,BYTE PTR [rip+0x1717120e]        # 0x1757ad89
  409b7b:	sbb    BYTE PTR [rdi],dl
  409b7d:	adc    al,0xf
  409b7f:	lsl    eax,WORD PTR [rax+rax*1]
  409b83:	add    BYTE PTR [rax],al
  409b85:	add    BYTE PTR [rax],al
  409b87:	add    BYTE PTR [rax],al
  409b89:	add    BYTE PTR [rdx],dl
  409b8b:	adc    dl,BYTE PTR [rdx]
  409b8d:	adc    bl,BYTE PTR [rsi]
  409b8f:	(bad)  
  409b90:	(bad)  
  409b91:	adc    al,0x12
  409b93:	adc    dl,BYTE PTR [rdx]
  409b95:	or     eax,0x1212120d
  409b9a:	movlps xmm2,QWORD PTR [rdi]
  409b9d:	sbb    BYTE PTR [rdi],dl
  409b9f:	adc    cl,BYTE PTR [rdi]
  409ba1:	(bad)  
  409ba2:	sldt   WORD PTR [rax]
  409ba5:	add    BYTE PTR [rax],al
  409ba7:	add    BYTE PTR [rdx],dl
  409ba9:	adc    ah,BYTE PTR [rax]
  409bab:	(bad)  
  409bac:	(bad)  
  409bad:	(bad)  
  409bae:	(bad)  
  409baf:	adc    dl,BYTE PTR [rdx]
  409bb1:	adc    cl,BYTE PTR [rip+0xd0d0d0d]        # 0xd4da8c4
  409bb7:	adc    dl,BYTE PTR [rdx]
  409bb9:	adc    dl,BYTE PTR [rdx]
  409bbb:	adc    dl,BYTE PTR [rdx]
  409bbd:	movlps xmm3,QWORD PTR [rax]
  409bc0:	(bad)  
  409bc1:	adc    dl,BYTE PTR [rdi+rcx*1]
  409bc4:	add    BYTE PTR [rax],al
  409bc6:	add    BYTE PTR [rdx],dl
  409bc8:	adc    dl,BYTE PTR [rdx]
  409bca:	adc    dl,BYTE PTR [rdx]
  409bcc:	adc    dl,BYTE PTR [rdx]
  409bce:	adc    cl,BYTE PTR [rip+0xd0d0d0d]        # 0xd4da8e1
  409bd4:	or     eax,0x12120d0d
  409bd9:	adc    dl,BYTE PTR [rdx]
  409bdb:	adc    dl,BYTE PTR [rdx]
  409bdd:	adc    dl,BYTE PTR [rdx]
  409bdf:	movlps xmm1,QWORD PTR [rdi]
  409be2:	(bad)  
  409be3:	(bad)  
  409be4:	sldt   WORD PTR [rax]
  409be7:	add    BYTE PTR [rax],al
  409be9:	add    BYTE PTR [rax],al
  409beb:	(bad)  
  409bec:	movlps xmm1,QWORD PTR [rsi]
  409bef:	or     eax,0xd0d0d0d
  409bf4:	or     eax,0x13120d0d
  409bf9:	adc    dl,BYTE PTR [rbx]
  409bfb:	adc    dl,BYTE PTR [rbx]
  409bfd:	adc    cl,BYTE PTR [rdi]
  409bff:	adc    cl,BYTE PTR [rdi]
  409c01:	adc    al,BYTE PTR [rax]
  409c03:	add    BYTE PTR [rax],al
  409c05:	add    BYTE PTR [rax],al
  409c07:	add    BYTE PTR [rax],al
  409c09:	add    BYTE PTR [rdx],dl
  409c0b:	adc    ebx,DWORD PTR [rax]
  409c0d:	(bad)  
  409c0e:	adc    dl,BYTE PTR [rdx]
  409c10:	prefetchw BYTE PTR [rip+0xd0d0d0d]        # 0xd4da924
  409c17:	adc    dl,BYTE PTR [rdx]
  409c19:	adc    dl,BYTE PTR [rdx]
  409c1b:	adc    dl,BYTE PTR [rdx]
  409c1d:	adc    dl,BYTE PTR [rdx]
  409c1f:	adc    edx,DWORD PTR [rdx]
  409c21:	adc    dl,BYTE PTR [rdx]
  409c23:	add    BYTE PTR [rax],al
  409c25:	add    BYTE PTR [rax],al
  409c27:	add    BYTE PTR [rax],al
  409c29:	adc    bl,BYTE PTR [rsi]
  409c2b:	(bad)  
  409c2c:	(bad)  
  409c2d:	sbb    BYTE PTR [rdi],dl
  409c2f:	sbb    BYTE PTR [rdx],dl
  409c31:	(bad)  
  409c32:	(bad)  
  409c33:	(bad)  
  409c34:	or     eax,0x13120d0d
  409c39:	adc    dl,BYTE PTR [rdx]
  409c3b:	adc    edx,DWORD PTR [rdx]
  409c3d:	adc    dl,BYTE PTR [rbx]
  409c3f:	adc    dl,BYTE PTR [rdi]
  409c41:	(bad)  
  409c42:	adc    dl,BYTE PTR [rdx]
  409c44:	add    BYTE PTR [rax],al
  409c46:	add    BYTE PTR [rax],al
  409c48:	adc    bl,BYTE PTR [rsi]
  409c4a:	and    BYTE PTR [rax],ah
  409c4c:	(bad)  
  409c4d:	(bad)  
  409c4e:	sbb    BYTE PTR [rdi],dl
  409c50:	(bad)  
  409c51:	adc    edx,DWORD PTR [rdx]
  409c53:	adc    cl,BYTE PTR [rsi]
  409c55:	(bad)  
  409c56:	(bad)  
  409c57:	adc    dl,BYTE PTR [rdx]
  409c59:	adc    dl,BYTE PTR [rbx]
  409c5b:	adc    dl,BYTE PTR [rbx]
  409c5d:	sbb    BYTE PTR [rdi],dl
  409c5f:	(bad)  
  409c60:	sbb    BYTE PTR [rdi],dl
  409c62:	sbb    BYTE PTR [rdi],dl
  409c64:	adc    al,BYTE PTR [rax]
  409c66:	add    BYTE PTR [rax],al
  409c68:	adc    dl,BYTE PTR [rdx]
  409c6a:	(bad)  
  409c6b:	(bad)  
  409c6c:	and    BYTE PTR [rdi],bl
  409c6e:	and    BYTE PTR [rsi],bl
  409c70:	sbb    BYTE PTR [rax],bl
  409c72:	(bad)  
  409c73:	adc    edx,DWORD PTR [rdx]
  409c75:	adc    dl,BYTE PTR [rdx]
  409c77:	movlps QWORD PTR [rdx],xmm2
  409c7a:	(bad)  
  409c7b:	(bad)  
  409c7c:	(bad)  
  409c7d:	(bad)  
  409c7e:	sbb    BYTE PTR [rax],bl
  409c80:	(bad)  
  409c81:	(bad)  
  409c82:	(bad)  
  409c83:	adc    dl,BYTE PTR [rdx]
  409c85:	add    BYTE PTR [rax],al
  409c87:	add    BYTE PTR [rax],al
  409c89:	add    BYTE PTR [rdx],dl
  409c8b:	adc    dl,BYTE PTR [rdx]
  409c8d:	(bad)  
  409c8e:	(bad)  
  409c8f:	(bad)  
  409c90:	(bad)  
  409c91:	sbb    BYTE PTR [rdi],dl
  409c93:	sbb    BYTE PTR [rdi],dl
  409c95:	adc    cl,BYTE PTR [rdi]
  409c97:	adc    dl,BYTE PTR [rax+rbx*1]
  409c9a:	(bad)  
  409c9b:	sbb    BYTE PTR [rax],bl
  409c9d:	(bad)  
  409c9e:	(bad)  
  409c9f:	(bad)  
  409ca0:	adc    dl,BYTE PTR [rdx]
  409ca2:	adc    al,BYTE PTR [rax]
	...
  409cac:	add    BYTE PTR [rdx],dl
  409cae:	adc    dl,BYTE PTR [rdx]
  409cb0:	(bad)  
  409cb1:	(bad)  
  409cb2:	sbb    BYTE PTR [rdi],dl
  409cb4:	adc    al,BYTE PTR [rax]
  409cb6:	add    BYTE PTR [rax],al
  409cb8:	adc    dl,BYTE PTR [rdx]
  409cba:	(bad)  
  409cbb:	(bad)  
  409cbc:	(bad)  
  409cbd:	(bad)  
  409cbe:	adc    dl,BYTE PTR [rdx]
	...
  409cd0:	adc    dl,BYTE PTR [rdx]
  409cd2:	(bad)  
  409cd3:	adc    al,BYTE PTR [rax]
  409cd5:	add    BYTE PTR [rax],al
  409cd7:	add    BYTE PTR [rax],al
  409cd9:	add    BYTE PTR [rdx],dl
  409cdb:	adc    dl,BYTE PTR [rdx]
  409cdd:	adc    al,BYTE PTR [rax]
  409cdf:	add    BYTE PTR [rax],al
  409ce1:	add    BYTE PTR [rax],al
  409ce3:	add    BYTE PTR [rax],al
  409ce5:	add    bh,bh
  409ce7:	cld    
  409ce8:	add    BYTE PTR [rbx],al
  409cea:	(bad)  
  409ceb:	cld    
  409cec:	add    BYTE PTR [rbx],al
  409cee:	(bad)  
  409cef:	cld    
  409cf0:	add    BYTE PTR [rbx],al
  409cf2:	(bad)  
  409cf3:	cld    
  409cf4:	add    BYTE PTR [rbx],al
  409cf6:	(bad)  
  409cf7:	cld    
  409cf8:	add    BYTE PTR [rbx],al
  409cfa:	(bad)  
  409cfb:	cld    
  409cfc:	add    BYTE PTR [rbx],al
  409cfe:	push   rax
  409d00:	add    BYTE PTR [rbx],al
  409d02:	inc    eax
  409d04:	add    BYTE PTR [rbx],al
  409d06:	inc    DWORD PTR [rax]
  409d08:	add    BYTE PTR [rbx],al
  409d0a:	cld    
  409d0b:	add    BYTE PTR [rax],al
  409d0d:	add    edi,eax
  409d0f:	add    BYTE PTR [rax],al
  409d11:	add    edi,eax
  409d13:	add    BYTE PTR [rax],al
  409d15:	add    edi,eax
  409d17:	add    BYTE PTR [rax],al
  409d19:	add    edi,eax
  409d1b:	add    BYTE PTR [rax],al
  409d1d:	add    edi,eax
  409d1f:	add    BYTE PTR [rax],al
  409d21:	add    edi,eax
  409d23:	add    BYTE PTR [rax],al
  409d25:	psubb  mm0,QWORD PTR [rax]
  409d28:	add    BYTE PTR [rdi],cl
  409d2a:	clc    
  409d2b:	add    BYTE PTR [rax],al
  409d2d:	psubb  mm0,QWORD PTR [rax]
  409d30:	add    BYTE PTR [rdi],cl
  409d32:	clc    
  409d33:	add    BYTE PTR [rax],al
  409d35:	psubb  mm0,QWORD PTR [rax]
  409d38:	add    BYTE PTR [rdi],cl
  409d3a:	lock add BYTE PTR [rax],al
  409d3d:	(bad)  
  409d3e:	rol    BYTE PTR [rax],0x0
  409d41:	add    eax,DWORD PTR [rax-0x7ff0000]
  409d47:	add    BYTE PTR [rax],al
  409d49:	(bad)  
  409d4b:	add    BYTE PTR [rax],al
  409d4d:	(bad)  
  409d4e:	loopne 0x409d50
  409d50:	add    BYTE PTR [rbx],al
  409d52:	rol    BYTE PTR [rax],0x0
  409d55:	add    eax,eax
  409d57:	add    BYTE PTR [rax],al
  409d59:	add    eax,esi
  409d5b:	add    BYTE PTR [rax],al
  409d5d:	(bad)  
  409d5e:	inc    BYTE PTR [rcx]
  409d60:	sar    BYTE PTR [rdi],0xff
  409d63:	ret    
  409d64:	lock jmp FWORD PTR [rax]
  409d67:	add    BYTE PTR [rax],al
  409d69:	add    BYTE PTR [rax],dl
  409d6b:	add    BYTE PTR [rax],al
  409d6d:	add    BYTE PTR [rax],ah
  409d6f:	add    BYTE PTR [rax],al
  409d71:	add    BYTE PTR [rcx],al
  409d73:	add    BYTE PTR [rax],cl
  409d75:	add    BYTE PTR [rax],al
  409d77:	add    BYTE PTR [rax],al
  409d79:	add    BYTE PTR [rax],al
  409d7b:	add    DWORD PTR [rax],eax
	...
  409d85:	add    BYTE PTR [rax],al
  409d87:	add    DWORD PTR [rax],eax
  409d89:	add    BYTE PTR [rax],al
  409d8b:	add    DWORD PTR [rax],eax
  409d8d:	add    BYTE PTR [rax],al
  409d8f:	add    BYTE PTR [rax],al
  409d91:	add    BYTE PTR [rax+rdx*2],cl
  409d94:	sbb    al,BYTE PTR [rax]
  409d96:	sbb    ah,BYTE PTR [rbx+0x2a]
  409d99:	add    BYTE PTR [rdx+rsi*2],al
  409d9c:	and    eax,0x2a7d0c00
  409da1:	add    BYTE PTR [rdx],dl
  409da3:	jg     0x409dd6
  409da5:	add    BYTE PTR [rcx],ah
  409da7:	ins    BYTE PTR es:[rdi],dx
  409da8:	xor    BYTE PTR [rax],al
  409daa:	(bad)  
  409dab:	gs cmp al,0x0
  409dae:	xor    esp,DWORD PTR [rdx+0x3f]
  409db1:	add    BYTE PTR [rax],ch
  409db3:	je     0x409deb
  409db5:	add    BYTE PTR [rdx],ch
  409db7:	je     0x409df1
  409db9:	add    BYTE PTR [rax],al
  409dbb:	sbb    al,0x4b
  409dbd:	add    BYTE PTR [rax],al
  409dbf:	and    DWORD PTR [rax+rax*1+0x7],edx
  409dc3:	es push rsp
  409dc5:	add    BYTE PTR [rax],al
  409dc7:	(bad)  
  409dc8:	pop    rdx
  409dc9:	add    BYTE PTR [rax],al
  409dcb:	sub    DWORD PTR [rdx+0x0],ebx
  409dce:	add    edi,DWORD PTR [rax+rsi*2]
  409dd1:	add    BYTE PTR [rip+0x35004076],ch        # 0x3540de4d
  409dd7:	jbe    0x409e1e
  409dd9:	add    BYTE PTR [rax],al
  409ddb:	rex.B outs dx,DWORD PTR ds:[rsi]
  409ddd:	add    BYTE PTR [rbx],al
  409ddf:	rex.X jne 0x409de2
  409de2:	or     eax,0x14002d82
  409de7:	xchg   BYTE PTR [rip+0x35801a00],dh        # 0x35c0b7ed
  409ded:	add    BYTE PTR [rdx],bl
  409def:	mov    DWORD PTR [rdi],esi
  409df1:	add    BYTE PTR [rip+0x34003f8e],ah        # 0x3440dd85
  409df7:	add    DWORD PTR [rax+0x0],0x38
  409dfb:	mov    WORD PTR [rbp+0x0],es
  409dfe:	(bad)  
  409dff:	or     DWORD PTR [rax+0x0],0x45
  409e03:	mov    dl,BYTE PTR [rdi+0x0]
  409e06:	push   rdx
  409e07:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  409e08:	push   0x0
  409e0a:	pop    rdx
  409e0b:	mov    dh,0x6b
  409e0d:	add    BYTE PTR [rcx-0x4a],bl
  409e10:	outs   dx,BYTE PTR ds:[rsi]
  409e11:	add    BYTE PTR [rcx+rbp*4+0x68],ah
  409e15:	add    BYTE PTR [rcx-0x40],ah
  409e18:	js     0x409e1a
  409e1a:	or     al,0x52
  409e1c:	mov    BYTE PTR [rax],al
  409e1e:	or     BYTE PTR [rdi-0x77],dl
  409e21:	add    BYTE PTR [rip+0xe008a5c],cl        # 0xe412883
  409e27:	pop    rsi
  409e28:	mov    es,WORD PTR [rax]
  409e2a:	sbb    edx,DWORD PTR [rbp-0x7c]
  409e2d:	add    BYTE PTR [rdi],dl
  409e2f:	(bad)  
  409e30:	pop    QWORD PTR [rax]
  409e32:	adc    BYTE PTR [rcx-0x70],ah
  409e35:	add    BYTE PTR [rsp+riz*2],dl
  409e38:	xchg   edi,eax
  409e39:	add    BYTE PTR [rbx],dl
  409e3b:	imul   ebx,DWORD PTR [rsi-0x7098d100],0x9d722200
  409e45:	add    BYTE PTR [rdx],ah
  409e47:	ja     0x409df0
  409e49:	add    BYTE PTR [rdx],ch
  409e4b:	js     0x409df1
  409e4d:	add    BYTE PTR [rdi],dh
  409e4f:	jnp    0x409df8
  409e51:	add    BYTE PTR [rax+0x75],al
  409e54:	cdq    
  409e55:	add    BYTE PTR [rcx+rax*4],ch
  409e58:	scas   eax,DWORD PTR es:[rdi]
  409e59:	add    BYTE PTR [rip+0x2a00b181],ch        # 0x2a414fe0
  409e5f:	xor    DWORD PTR [rbp-0x457bde00],0xb9882d00
  409e69:	add    BYTE PTR [rip+0x3400bf8d],ch        # 0x34415dfc
  409e6f:	mov    bh,BYTE PTR [rcx-0x4372c500]
  409e75:	add    BYTE PTR [rbp+rsi*4-0x75],bh
  409e79:	add    BYTE PTR [rax-0x80],cl
  409e7c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  409e7d:	add    BYTE PTR [rbp-0x7d],al
  409e80:	stos   DWORD PTR es:[rdi],eax
  409e81:	add    BYTE PTR [rbx-0x78],cl
  409e84:	lods   al,BYTE PTR ds:[rsi]
  409e85:	add    BYTE PTR [rcx-0x78],al
  409e88:	mov    cl,0x0
  409e8a:	rex.RB mov ?,WORD PTR [r14-0x446cba00]
  409e91:	add    BYTE PTR [rdi-0x6b],al
  409e94:	mov    ebp,0xb9934b00
  409e99:	add    BYTE PTR [rbp-0x66],dl
  409e9c:	mov    edi,0xb2986800
  409ea1:	add    BYTE PTR [rdx-0x65],ah
  409ea4:	mov    ebx,0x8ccf7a00
  409ea9:	add    BYTE PTR [rdi+rcx*4],dh
  409eac:	rol    DWORD PTR [rax],0x33
  409eaf:	xchg   edx,eax
  409eb0:	(bad)
  409eb3:	xchg   ebp,eax
  409eb4:	(bad)  
  409eb5:	add    BYTE PTR [rbx-0x67],al
  409eb8:	mov    DWORD PTR [rax],0xc1984b
  409ebe:	rex.B (bad) 
  409ec0:	enter  0x5200,0x9a
  409ec4:	ret    
  409ec5:	add    BYTE PTR [rbp-0x63],dl
  409ec8:	(bad)  
  409ec9:	add    BYTE PTR [rdi-0x67],bl
  409ecc:	rol    DWORD PTR [rax],0x5b
  409ecf:	pushf  
  409ed0:	rol    DWORD PTR [rax],0x59
  409ed3:	lahf   
  409ed4:	mov    BYTE PTR [rax],0x56
  409ed7:	pushf  
  409ed8:	retf   
  409ed9:	add    BYTE PTR [rsi-0x61],ah
  409edc:	ret    0x5100
  409edf:	movabs ds:0xa75d00caa35b00cd,al
  409ee8:	int    0x0
  409eea:	rex.WXB movabs ds:0xa45900d0a05b00d2,al
  409ef4:	rol    BYTE PTR [rax],cl
  409ef6:	(bad)  
  409ef7:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  409ef8:	retf   0x6100
  409efb:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  409efc:	int    0x0
  409efe:	outs   dx,DWORD PTR ds:[rsi]
  409eff:	test   al,0xc8
  409f01:	add    BYTE PTR [rbx+rbp*4-0x34],ch
  409f05:	add    BYTE PTR [rax-0x58],bh
  409f08:	leave  
  409f09:	add    BYTE PTR [rbp-0x52],ah
  409f0c:	(bad)  
  409f0d:	add    BYTE PTR [rdi-0x53],ch
  409f10:	rol    BYTE PTR [rax],1
  409f12:	jae    0x409ec8
  409f14:	fiadd  DWORD PTR [rax]
  409f16:	js     0x409ed2
  409f18:	fild   WORD PTR [rax]
  409f1a:	gs mov bh,0xe1
  409f1d:	add    BYTE PTR [rdx-0x47],ch
  409f20:	jrcxz  0x409f22
  409f22:	jns    0x409ee1
  409f24:	loop   0x409f26
  409f26:	jne    0x409ee9
  409f28:	call   0xffffffffeb04172d
  409f2d:	add    BYTE PTR [rsp+rsi*4-0x227aff6b],cl
  409f34:	nop
  409f35:	add    BYTE PTR [rdx-0x68ff631d],dl
  409f3b:	out    0x9e,eax
  409f3d:	add    BYTE PTR [rsi-0x64ff5329],bl
  409f43:	in     eax,0xa3
  409f45:	add    BYTE PTR [rcx-0x5fff5819],ah
  409f4b:	jmp    0xffffffffeeea9ff7
  409f50:	mov    al,0x0
  409f52:	mov    ebx,0x8500b4f6
  409f57:	mov    edi,0xc38d00e0
  409f5c:	fiadd  WORD PTR [rax]
  409f5e:	mov    esp,0x8000c1fa
  409f63:	ret    
  409f64:	out    0x0,eax
  409f66:	pop    rbp
  409f68:	in     al,0x0
  409f6a:	add    edi,0xcd8f00ec
  409f70:	in     al,dx
  409f71:	add    BYTE PTR [rbx-0x6eff1536],dl
  409f77:	(bad)  
  409f78:	out    dx,eax
  409f79:	add    BYTE PTR [rcx-0x60ff0c2e],bl
  409f7f:	(bad)  
  409f81:	add    BYTE PTR [rdi-0x45ff192d],ch
  409f87:	fldl2t 
  409f89:	add    BYTE PTR [rax-0x5cff0f2d],ah
  409f8f:	fdiv   st,st(3)
  409f91:	add    BYTE PTR [rdi-0x42ff0e22],dh
  409f97:	in     eax,0xfc
  409f99:	add    al,cl
  409f9b:	out    dx,eax
  409f9c:	inc    DWORD PTR [rax]
  409f9e:	shr    eax,1
  409fa0:	repz add cl,dh
  409fa3:	push   rdi
  409fa5:	add    ch,dh
  409fa7:	(bad)  
  409fa8:	stc    
	...
  40a189:	add    bh,bh
  40a18b:	(bad)  
  40a18c:	inc    DWORD PTR [rax]
  40a18e:	add    BYTE PTR [rax],al
  40a190:	add    BYTE PTR [rax],al
  40a192:	add    BYTE PTR [rax],al
  40a194:	add    BYTE PTR [rsi],bl
  40a196:	sbb    ebx,DWORD PTR [rdx]
  40a198:	or     DWORD PTR [rdx],ecx
  40a19a:	(bad)  
  40a19b:	add    al,BYTE PTR [rcx]
  40a19d:	add    BYTE PTR [rax],al
  40a19f:	add    BYTE PTR [rax],al
  40a1a1:	add    BYTE PTR [rax],al
  40a1a3:	add    BYTE PTR [rip+0x812221e],bh        # 0x852c3c7
  40a1a9:	sbb    BYTE PTR [rsi],dl
  40a1ab:	add    eax,0x3
  40a1b0:	add    BYTE PTR [rax],al
  40a1b2:	cmp    eax,0x201e3f3d
  40a1b7:	test   DWORD PTR [rax],ecx
  40a1b9:	(bad)  
  40a1ba:	adc    DWORD PTR [rip+0x15],ebx        # 0x40a1d5
  40a1c0:	add    BYTE PTR [rip+0x1e528473],bh        # 0x1e932639
  40a1c6:	imul   esp,DWORD PTR [rax],0x3a850885
  40a1cc:	add    al,0x0
  40a1ce:	add    BYTE PTR [rax],al
  40a1d0:	add    BYTE PTR [rax+0x76],al
  40a1d3:	jge    0x40a22d
  40a1d5:	(bad)  
  40a1d6:	push   0x20
  40a1d8:	and    bh,bh
  40a1da:	jmp    FWORD PTR [rax+0x17]
  40a1dd:	add    BYTE PTR [rax],al
  40a1df:	add    BYTE PTR [rax],al
  40a1e1:	rex.WRX
  40a1e2:	gs pop rdi
  40a1e4:	pop    rax
  40a1e5:	(bad)  
  40a1e6:	imul   eax,DWORD PTR [rsi-0x7b],0xffffff85
  40a1ea:	xchg   BYTE PTR [rcx+rbx*1+0x0],ch
  40a1ee:	add    BYTE PTR [rax],al
  40a1f0:	add    BYTE PTR [rbp+0x78],dl
  40a1f3:	and    DWORD PTR [rdx+0x1e],0x6e707471
  40a1fa:	ins    DWORD PTR es:[rdi],dx
  40a1fb:	outs   dx,DWORD PTR ds:[rsi]
  40a1fc:	and    BYTE PTR [rax],al
  40a1fe:	add    BYTE PTR [rax],al
  40a200:	add    BYTE PTR [rbp-0x80],dl
  40a203:	jle    0x40a260
  40a205:	and    DWORD PTR [rcx],esp
  40a207:	and    DWORD PTR [rcx],esp
  40a209:	and    DWORD PTR [rcx],esp
  40a20b:	and    DWORD PTR [rax+rax*1],ebx
  40a20e:	add    BYTE PTR [rax],al
  40a210:	add    BYTE PTR [rdx+0x5d],al
  40a213:	(bad)  
  40a214:	rex.WXB and rax,0x43512d13
  40a21a:	sub    al,0xd
  40a21c:	add    BYTE PTR [rax],al
  40a21e:	add    BYTE PTR [rax],al
  40a220:	rex.RB pop r13
  40a222:	push   rbx
  40a223:	cmp    al,0x27
  40a225:	adc    BYTE PTR [rsi+rsi*1],ah
  40a228:	xor    al,BYTE PTR [rax+0x5b]
  40a22b:	push   rcx
  40a22c:	cmp    eax,DWORD PTR [rax]
  40a22e:	add    BYTE PTR [rbp+rdi*1+0x30],al
  40a232:	and    ecx,DWORD PTR [rip+0x4c250e0b]        # 0x4c65b043
  40a238:	rex.WB cmp BYTE PTR [r14],bpl
  40a23b:	(bad)  
  40a23c:	xor    DWORD PTR [rbx],edi
  40a23e:	add    BYTE PTR [rax],al
  40a240:	pop    rsi
  40a241:	(bad)  
  40a242:	cmp    DWORD PTR [rdx],ebp
  40a244:	adc    al,0xf
  40a246:	sub    cl,BYTE PTR [rdx+0x33]
  40a249:	xor    esi,DWORD PTR [rip+0x3e36]        # 0x40e085
  40a24f:	pop    rsi
  40a250:	(bad)  
  40a251:	cmp    DWORD PTR [rbx+riz*2+0x48],0x2b
  40a256:	sub    BYTE PTR [rdx],dh
  40a258:	rex.RXB push r15
  40a25a:	fs ja  0x40a2d2
  40a25d:	push   rcx
  40a25e:	add    BYTE PTR [rax],al
  40a260:	pop    rsi
  40a261:	pop    rsi
  40a262:	jg     0x40a2df
  40a264:	addr32 push rsp
  40a266:	add    BYTE PTR [rsi+0x66],cl
  40a269:	jp     0x40a2e5
  40a26b:	pop    rsi
  40a26c:	pop    rsi
  40a26d:	add    BYTE PTR [rax],al
  40a26f:	add    BYTE PTR [rax],al
  40a271:	add    BYTE PTR [rsi+0x5e],bl
  40a274:	pop    rsi
  40a275:	add    BYTE PTR [rax],al
  40a277:	add    BYTE PTR [rsi+0x72],bl
  40a27a:	pop    rsi
	...
  40a28b:	add    BYTE PTR [rax],al
  40a28d:	add    dh,bh
  40a28f:	add    DWORD PTR [rax],eax
  40a291:	add    ah,bh
  40a293:	add    DWORD PTR [rax],eax
  40a295:	add    al,dh
  40a297:	add    DWORD PTR [rax],eax
  40a299:	add    al,ah
  40a29b:	add    DWORD PTR [rax],eax
  40a29d:	add    al,ah
  40a29f:	add    DWORD PTR [rax],eax
  40a2a1:	add    al,ah
  40a2a3:	add    DWORD PTR [rax],eax
  40a2a5:	add    al,ah
  40a2a7:	add    DWORD PTR [rax],eax
  40a2a9:	add    al,ah
  40a2ab:	add    DWORD PTR [rax],eax
  40a2ad:	add    al,ah
  40a2af:	add    eax,DWORD PTR [rax]
  40a2b1:	add    al,al
  40a2b3:	add    DWORD PTR [rax],eax
  40a2b5:	add    BYTE PTR [rax-0x40000000],al
  40a2bb:	add    DWORD PTR [rax],eax
  40a2bd:	add    BYTE PTR [rax-0x40000000],al
  40a2c3:	add    DWORD PTR [rax],0xc7f100
  40a2c9:	add    bh,bh
  40a2cb:	inc    DWORD PTR [rax]
  40a2cd:	add    BYTE PTR [rax],ch
  40a2cf:	add    BYTE PTR [rax],al
  40a2d1:	add    BYTE PTR [rax],ah
  40a2d3:	add    BYTE PTR [rax],al
  40a2d5:	add    BYTE PTR [rax+0x0],al
  40a2d8:	add    BYTE PTR [rax],al
  40a2da:	add    DWORD PTR [rax],eax
  40a2dc:	and    BYTE PTR [rax],al
  40a2de:	add    BYTE PTR [rax],al
  40a2e0:	add    BYTE PTR [rax],al
  40a2e2:	adc    BYTE PTR [rax],0x0
	...
  40a32d:	add    BYTE PTR [rbx],dh
  40a32f:	cdq    
  40a330:	xor    edi,edi
  40a332:	xor    esp,DWORD PTR [rsi+0x33]
  40a335:	push   QWORD PTR [rbx]
  40a337:	xor    di,di
  40a33a:	xor    esp,DWORD PTR [rsi+0x33]
  40a33d:	push   QWORD PTR [rbx]
  40a33f:	xor    di,di
  40a342:	xor    esp,DWORD PTR [rsi+0x33]
  40a345:	push   QWORD PTR [rbx]
  40a347:	xor    di,di
  40a34a:	xor    esp,DWORD PTR [rsi+0x33]
  40a34d:	push   QWORD PTR [rbx]
  40a34f:	xor    di,di
  40a352:	xor    esp,DWORD PTR [rsi+0x33]
  40a355:	push   QWORD PTR [rbx]
  40a357:	xor    di,di
  40a35a:	xor    esp,DWORD PTR [rsi+0x33]
  40a35d:	push   QWORD PTR [rbx]
  40a35f:	xor    di,di
  40a362:	xor    esp,DWORD PTR [rsi+0x33]
  40a365:	push   QWORD PTR [rbx]
  40a367:	xor    di,di
  40a36a:	xor    esp,DWORD PTR [rsi+0x33]
  40a36d:	inc    DWORD PTR [rax]
	...
  40a3ab:	add    BYTE PTR [rax],al
  40a3ad:	add    BYTE PTR [rbx],dh
  40a3af:	cdq    
  40a3b0:	xor    edi,edi
  40a3b2:	cwd    
  40a3b4:	jmp    WORD PTR [rsi-0x67]
  40a3b8:	push   WORD PTR [rbx]
  40a3bb:	cdq    
  40a3bc:	push   WORD PTR [rbx]
  40a3bf:	cdq    
  40a3c0:	push   WORD PTR [rbx]
  40a3c3:	cdq    
  40a3c4:	push   WORD PTR [rbx]
  40a3c7:	cdq    
  40a3c8:	xor    edi,edi
  40a3ca:	xor    ebx,DWORD PTR [rcx-0x66cc00cd]
  40a3d0:	xor    edi,edi
  40a3d2:	xor    ebx,DWORD PTR [rcx-0x66cc00cd]
  40a3d8:	xor    edi,edi
  40a3da:	xor    ebx,DWORD PTR [rcx-0x66cc00cd]
  40a3e0:	xor    edi,edi
  40a3e2:	xor    ebx,DWORD PTR [rcx-0x66cc00cd]
  40a3e8:	xor    edi,edi
  40a3ea:	xor    esp,DWORD PTR [rsi+0x33]
  40a3ed:	inc    DWORD PTR [rax]
	...
  40a42b:	add    BYTE PTR [rax],al
  40a42d:	add    BYTE PTR [rbx],dh
  40a42f:	cdq    
  40a430:	xor    edi,edi
  40a432:	rcr    ah,0xc0
  40a435:	jmp    QWORD PTR [rsi-0x34]
  40a438:	jmp    WORD PTR [rsi-0x67]
  40a43c:	push   WORD PTR [rbx]
  40a43f:	cdq    
  40a440:	push   WORD PTR [rbx]
  40a443:	xor    di,di
  40a446:	cwd    
  40a448:	jmp    WORD PTR [rsi-0x67]
  40a44c:	push   WORD PTR [rbx]
  40a44f:	cdq    
  40a450:	push   WORD PTR [rbx]
  40a453:	cdq    
  40a454:	push   WORD PTR [rbx]
  40a457:	cdq    
  40a458:	xor    edi,edi
  40a45a:	xor    ebx,DWORD PTR [rcx-0x66cc009a]
  40a460:	xor    edi,edi
  40a462:	xor    ebx,DWORD PTR [rcx-0x66cc009a]
  40a468:	xor    edi,edi
  40a46a:	xor    esp,DWORD PTR [rsi+0x33]
  40a46d:	inc    DWORD PTR [rax]
	...
  40a4ab:	add    BYTE PTR [rax],al
  40a4ad:	add    BYTE PTR [rbx],dh
  40a4af:	cdq    
  40a4b0:	xor    edi,edi
  40a4b2:	rcr    ah,0xc0
  40a4b5:	jmp    QWORD PTR [rsi-0x34]
  40a4b8:	cdq    
  40a4b9:	jmp    QWORD PTR [rsi-0x67]
  40a4bc:	push   WORD PTR [rbx]
  40a4bf:	xor    di,di
  40a4c2:	rol    al,0xc0
  40a4c5:	push   QWORD PTR [rbx]
  40a4c7:	xor    di,di
  40a4ca:	xor    ebx,DWORD PTR [rcx-0x6699009a]
  40a4d0:	push   WORD PTR [rbx]
  40a4d3:	cdq    
  40a4d4:	xor    edi,edi
  40a4d6:	xor    ebx,DWORD PTR [rcx-0x66cc009a]
  40a4dc:	xor    edi,edi
  40a4de:	xor    ebx,DWORD PTR [rcx-0x66cc009a]
  40a4e4:	xor    edi,edi
  40a4e6:	xor    ebx,DWORD PTR [rcx+0x6633ff33]
  40a4ec:	xor    edi,edi
	...
  40a52e:	xor    ebx,DWORD PTR [rcx-0x233f00cd]
  40a534:	sar    bh,0x66
  40a537:	int3   
  40a538:	cdq    
  40a539:	push   QWORD PTR [rbx]
  40a53b:	xor    di,di
  40a53e:	fstp   st(5)
  40a540:	(bad)  
  40a542:	rol    al,0xc0
  40a545:	inc    eax
  40a547:	rol    al,0xff
  40a54a:	xor    esp,DWORD PTR [rsi+0x33]
  40a54d:	jmp    QWORD PTR [rsi-0x67]
  40a550:	push   WORD PTR [rbx]
  40a553:	cdq    
  40a554:	jmp    WORD PTR [rsi+0x66]
  40a558:	push   WORD PTR [rbx]
  40a55b:	xor    di,di
  40a55e:	xor    ebx,DWORD PTR [rcx-0x66cc009a]
  40a564:	push   WORD PTR [rbx]
  40a567:	cdq    
  40a568:	xor    edi,edi
  40a56a:	xor    esp,DWORD PTR [rsi+0x33]
  40a56d:	inc    DWORD PTR [rax]
	...
  40a5ab:	add    BYTE PTR [rax],al
  40a5ad:	add    BYTE PTR [rsi-0x67],ah
  40a5b0:	inc    ax
  40a5b3:	fadd   st(0),st
  40a5b5:	call   FWORD PTR [rcx-0x6634]
  40a5bb:	(bad)  
  40a5bc:	(bad)  
  40a5bd:	(bad)  
  40a5be:	(bad)  
  40a5bf:	(bad)  
  40a5c0:	(bad)  
  40a5c1:	push   rcx
  40a5c3:	icebp  
  40a5c4:	icebp  
  40a5c5:	dec    esp
  40a5c7:	int3   
  40a5c8:	int3   
  40a5c9:	inc    eax
  40a5cb:	rol    al,0xff
  40a5ce:	xor    esp,DWORD PTR [rsi+0x33]
  40a5d1:	push   QWORD PTR [rbx]
  40a5d3:	xor    esi,DWORD PTR [rbx]
  40a5d5:	dec    esp
  40a5d7:	int3   
  40a5d8:	int3   
  40a5d9:	inc    eax
  40a5db:	rol    al,0xff
  40a5de:	xor    ebx,DWORD PTR [rcx-0x66cc00cd]
  40a5e4:	push   WORD PTR [rbx]
  40a5e7:	cdq    
  40a5e8:	xor    edi,edi
  40a5ea:	xor    esp,DWORD PTR [rsi+0x33]
  40a5ed:	inc    DWORD PTR [rax]
	...
  40a623:	add    BYTE PTR [rax],al
  40a625:	add    BYTE PTR [rbx],dh
  40a627:	xor    esp,DWORD PTR [rsi-0x1]
  40a62a:	xor    esi,DWORD PTR [rbx]
  40a62c:	jmp    WORD PTR [rsi-0x67]
  40a630:	inc    ax
  40a633:	fadd   st(0),st
  40a635:	call   FWORD PTR [rcx+0x66ff99cc]
  40a63b:	int3   
  40a63c:	cdq    
  40a63d:	(bad)  
  40a63e:	(bad)  
  40a63f:	(bad)  
  40a640:	(bad)  
  40a641:	(bad)  
  40a642:	(bad)  
  40a643:	(bad)  
  40a644:	(bad)  
  40a645:	(bad)  
  40a646:	(bad)  
  40a647:	(bad)  
  40a648:	(bad)  
  40a649:	call   rdi
  40a64b:	xlat   BYTE PTR ds:[rbx]
  40a64c:	xlat   BYTE PTR ds:[rbx]
  40a64d:	inc    eax
  40a64f:	rol    al,0xff
  40a652:	xlat   BYTE PTR ds:[rbx]
  40a653:	xlat   BYTE PTR ds:[rbx]
  40a654:	xlat   BYTE PTR ds:[rbx]
  40a655:	call   rdi
  40a657:	xlat   BYTE PTR ds:[rbx]
  40a658:	xlat   BYTE PTR ds:[rbx]
  40a659:	inc    eax
  40a65b:	rol    al,0xff
  40a65e:	xor    ebx,DWORD PTR [rcx-0x66cc00cd]
  40a664:	push   WORD PTR [rbx]
  40a667:	cdq    
  40a668:	xor    edi,edi
  40a66a:	xor    esp,DWORD PTR [rsi+0x33]
  40a66d:	inc    DWORD PTR [rax]
	...
  40a69b:	add    BYTE PTR [rax],al
  40a69d:	add    BYTE PTR [rbx],dh
  40a69f:	cwd    
  40a6a1:	push   QWORD PTR [rbx]
  40a6a3:	cwd    
  40a6a5:	jmp    QWORD PTR [rsi-0x67]
  40a6a8:	int3   
  40a6a9:	jmp    QWORD PTR [rsi-0x67]
  40a6ac:	cdq    
  40a6ad:	push   QWORD PTR [rbx]
  40a6af:	cdq    
  40a6b0:	inc    ax
  40a6b3:	fadd   st(0),st
  40a6b5:	call   FWORD PTR [rcx+0x66ff99cc]
  40a6bb:	int3   
  40a6bc:	cdq    
  40a6bd:	jmp    QWORD PTR [rsi-0x34]
  40a6c0:	data16 (bad) 
  40a6c2:	(bad)  
  40a6c3:	(bad)  
  40a6c4:	(bad)  
  40a6c5:	(bad)  
  40a6c6:	(bad)  
  40a6c7:	(bad)  
  40a6c8:	(bad)  
  40a6c9:	(bad)  
  40a6ca:	(bad)  
  40a6cb:	(bad)  
  40a6cc:	(bad)  
  40a6cd:	push   rcx
  40a6cf:	icebp  
  40a6d0:	icebp  
  40a6d1:	push   rcx
  40a6d3:	icebp  
  40a6d4:	icebp  
  40a6d5:	push   rcx
  40a6d7:	icebp  
  40a6d8:	icebp  
  40a6d9:	dec    esp
  40a6db:	int3   
  40a6dc:	int3   
  40a6dd:	push   QWORD PTR [rbx]
  40a6df:	cdq    
  40a6e0:	jmp    WORD PTR [rsi-0x67]
  40a6e4:	push   WORD PTR [rbx]
  40a6e7:	cdq    
  40a6e8:	xor    edi,edi
  40a6ea:	xor    esp,DWORD PTR [rsi+0x33]
  40a6ed:	inc    DWORD PTR [rax]
	...
  40a713:	add    BYTE PTR [rax],al
  40a715:	add    BYTE PTR [rsi-0x67],ah
  40a718:	cdq    
  40a719:	push   QWORD PTR [rbx]
  40a71b:	cwd    
  40a71d:	call   rsi
  40a71f:	out    0xe7,eax
  40a721:	call   rsi
  40a723:	out    0xe7,eax
  40a725:	jmp    QWORD PTR [rsi-0x67]
  40a728:	cdq    
  40a729:	jmp    QWORD PTR [rsi-0x67]
  40a72c:	int3   
  40a72d:	jmp    QWORD PTR [rsi-0x67]
  40a730:	inc    ax
  40a733:	fadd   st(0),st
  40a735:	call   FWORD PTR [rcx-0x66006634]
  40a73b:	int3   
  40a73c:	cdq    
  40a73d:	jmp    QWORD PTR [rsi-0x34]
  40a740:	cdq    
  40a741:	jmp    QWORD PTR [rsi-0x67]
  40a744:	data16 (bad) 
  40a746:	(bad)  
  40a747:	(bad)  
  40a748:	(bad)  
  40a749:	push   rcx
  40a74b:	icebp  
  40a74c:	icebp  
  40a74d:	(bad)  
  40a74e:	(bad)  
  40a74f:	(bad)  
  40a750:	(bad)  
  40a751:	(bad)  
  40a752:	(bad)  
  40a753:	(bad)  
  40a754:	(bad)  
  40a755:	push   rcx
  40a757:	icebp  
  40a758:	icebp  
  40a759:	dec    esp
  40a75b:	int3   
  40a75c:	int3   
  40a75d:	jmp    QWORD PTR [rsi-0x67]
  40a760:	push   WORD PTR [rbx]
  40a763:	cdq    
  40a764:	push   WORD PTR [rbx]
  40a767:	cdq    
  40a768:	xor    edi,edi
  40a76a:	xor    esp,DWORD PTR [rsi+0x33]
  40a76d:	inc    DWORD PTR [rax]
	...
  40a78b:	add    BYTE PTR [rax],al
  40a78d:	add    BYTE PTR [rsi-0x67],ah
  40a790:	cdq    
  40a791:	jmp    QWORD PTR [rsi-0x67]
  40a794:	cdq    
  40a795:	jmp    QWORD PTR [rsi-0x67]
  40a798:	int3   
  40a799:	call   rsi
  40a79b:	out    0xe7,eax
  40a79d:	call   rsi
  40a79f:	out    0xe7,eax
  40a7a1:	call   rsi
  40a7a3:	out    0xe7,eax
  40a7a5:	jmp    QWORD PTR [rsi-0x67]
  40a7a8:	int3   
  40a7a9:	jmp    QWORD PTR [rsi-0x67]
  40a7ac:	int3   
  40a7ad:	jmp    QWORD PTR [rsi-0x67]
  40a7b0:	inc    ax
  40a7b3:	fadd   st(0),st
  40a7b5:	call   FWORD PTR [rcx-0x66006634]
  40a7bb:	int3   
  40a7bc:	cdq    
  40a7bd:	jmp    QWORD PTR [rsi-0x67]
  40a7c0:	push   WORD PTR [rbx]
  40a7c3:	data16 data16 (bad) 
  40a7c6:	(bad)  
  40a7c7:	(bad)  
  40a7c8:	(bad)  
  40a7c9:	push   rcx
  40a7cb:	icebp  
  40a7cc:	icebp  
  40a7cd:	(bad)  
  40a7ce:	(bad)  
  40a7cf:	(bad)  
  40a7d0:	(bad)  
  40a7d1:	push   rax
  40a7d3:	sti    
  40a7d4:	(bad)  
  40a7d5:	push   rcx
  40a7d7:	icebp  
  40a7d8:	icebp  
  40a7d9:	call   rdi
  40a7db:	xlat   BYTE PTR ds:[rbx]
  40a7dc:	xlat   BYTE PTR ds:[rbx]
  40a7dd:	jmp    QWORD PTR [rsi-0x67]
  40a7e0:	jmp    WORD PTR [rsi-0x67]
  40a7e4:	push   WORD PTR [rbx]
  40a7e7:	cdq    
  40a7e8:	push   WORD PTR [rbx]
  40a7eb:	xor    di,di
	...
  40a80a:	cwd    
  40a80c:	cdq    
  40a80d:	jmp    QWORD PTR [rsi-0x67]
  40a810:	int3   
  40a811:	call   FWORD PTR [rcx-0x66003334]
  40a817:	int3   
  40a818:	int3   
  40a819:	push   rax
  40a81b:	sti    
  40a81c:	(bad)  
  40a81d:	call   rsi
  40a81f:	out    0xe7,eax
  40a821:	call   rsi
  40a823:	out    0xe7,eax
  40a825:	call   FWORD PTR [rcx+0x66ffcccc]
  40a82b:	cdq    
  40a82c:	int3   
  40a82d:	jmp    QWORD PTR [rsi-0x67]
  40a830:	inc    ax
  40a833:	fadd   st(0),st
  40a835:	call   FWORD PTR [rcx-0x66006634]
  40a83b:	int3   
  40a83c:	cdq    
  40a83d:	jmp    QWORD PTR [rsi-0x34]
  40a840:	cdq    
  40a841:	(bad)  
  40a842:	(bad)  
  40a843:	(bad)  
  40a844:	(bad)  
  40a845:	(bad)  
  40a846:	(bad)  
  40a847:	(bad)  
  40a848:	(bad)  
  40a849:	(bad)  
  40a84a:	(bad)  
  40a84b:	(bad)  
  40a84c:	(bad)  
  40a84d:	(bad)  
  40a84e:	(bad)  
  40a84f:	(bad)  
  40a850:	(bad)  
  40a851:	(bad)  
  40a852:	(bad)  
  40a853:	(bad)  
  40a854:	(bad)  
  40a855:	(bad)  
  40a856:	(bad)  
  40a857:	(bad)  
  40a858:	(bad)  
  40a859:	jmp    rbx
  40a85b:	jrcxz  0x40a840
  40a85d:	jmp    QWORD PTR [rsi-0x67]
  40a860:	jmp    WORD PTR [rsi-0x34]
  40a864:	push   WORD PTR [rbx]
  40a867:	cdq    
  40a868:	push   WORD PTR [rbx]
  40a86b:	xor    di,di
	...
  40a88a:	cwd    
  40a88c:	cdq    
  40a88d:	call   FWORD PTR [rcx+0x66ffffcc]
  40a893:	cdq    
  40a894:	int3   
  40a895:	jmp    QWORD PTR [rsi-0x67]
  40a898:	int3   
  40a899:	push   rax
  40a89b:	sti    
  40a89c:	(bad)  
  40a89d:	call   rsi
  40a89f:	out    0xe7,eax
  40a8a1:	call   rsi
  40a8a3:	out    0xe7,eax
  40a8a5:	jmp    QWORD PTR [rsi-0x67]
  40a8a8:	int3   
  40a8a9:	call   FWORD PTR [rcx+0x66ffcccc]
  40a8af:	cdq    
  40a8b0:	inc    ax
  40a8b3:	fadd   st(0),st
  40a8b5:	call   FWORD PTR [rcx-0x66006634]
  40a8bb:	int3   
  40a8bc:	cdq    
  40a8bd:	jmp    QWORD PTR [rsi-0x34]
  40a8c0:	cdq    
  40a8c1:	(bad)  
  40a8c2:	(bad)  
  40a8c3:	(bad)  
  40a8c4:	(bad)  
  40a8c5:	(bad)  
  40a8c6:	(bad)  
  40a8c7:	(bad)  
  40a8c8:	(bad)  
  40a8c9:	(bad)  
  40a8ca:	(bad)  
  40a8cb:	(bad)  
  40a8cc:	(bad)  
  40a8cd:	(bad)  
  40a8ce:	(bad)  
  40a8cf:	(bad)  
  40a8d0:	(bad)  
  40a8d1:	(bad)  
  40a8d2:	(bad)  
  40a8d3:	(bad)  
  40a8d4:	(bad)  
  40a8d5:	(bad)  
  40a8d6:	(bad)  
  40a8d7:	(bad)  
  40a8d8:	(bad)  
  40a8d9:	(bad)  
  40a8da:	(bad)  
  40a8db:	(bad)  
  40a8dc:	(bad)  
  40a8dd:	jmp    QWORD PTR [rsi-0x34]
  40a8e0:	jmp    WORD PTR [rsi-0x67]
  40a8e4:	push   WORD PTR [rbx]
  40a8e7:	cdq    
  40a8e8:	push   WORD PTR [rbx]
  40a8eb:	xor    di,di
	...
  40a90a:	cwd    
  40a90c:	cdq    
  40a90d:	call   FWORD PTR [rcx-0x66003334]
  40a913:	int3   
  40a914:	int3   
  40a915:	call   FWORD PTR [rcx-0xf003334]
  40a91b:	sti    
  40a91c:	(bad)  
  40a91d:	call   rsi
  40a91f:	out    0xe7,eax
  40a921:	call   rsi
  40a923:	out    0xe7,eax
  40a925:	call   FWORD PTR [rcx+0x66ffcccc]
  40a92b:	cdq    
  40a92c:	int3   
  40a92d:	jmp    QWORD PTR [rsi-0x67]
  40a930:	inc    ax
  40a933:	fadd   st(0),st
  40a935:	call   FWORD PTR [rcx-0x66006634]
  40a93b:	int3   
  40a93c:	cdq    
  40a93d:	call   FWORD PTR [rcx-0x66006634]
  40a943:	int3   
  40a944:	cdq    
  40a945:	call   FWORD PTR [rcx-0x66006634]
  40a94b:	int3   
  40a94c:	cdq    
  40a94d:	call   FWORD PTR [rcx-0x66006634]
  40a953:	int3   
  40a954:	cdq    
  40a955:	call   FWORD PTR [rcx-0x66006634]
  40a95b:	int3   
  40a95c:	cdq    
  40a95d:	call   FWORD PTR [rcx+0x66ff99cc]
  40a963:	int3   
  40a964:	jmp    WORD PTR [rsi-0x67]
  40a968:	push   WORD PTR [rbx]
  40a96b:	xor    di,di
	...
  40a98a:	cwd    
  40a98c:	cdq    
  40a98d:	call   FWORD PTR [rcx+0x66ffffcc]
  40a993:	cdq    
  40a994:	int3   
  40a995:	call   FWORD PTR [rcx-0xf003334]
  40a99b:	sti    
  40a99c:	(bad)  
  40a99d:	call   rsi
  40a99f:	out    0xe7,eax
  40a9a1:	call   FWORD PTR [rcx+0x66ffffcc]
  40a9a7:	cdq    
  40a9a8:	int3   
  40a9a9:	call   FWORD PTR [rcx+0x66ffcccc]
  40a9af:	cdq    
  40a9b0:	inc    ax
  40a9b3:	fadd   st(0),st
  40a9b5:	inc    eax
  40a9b7:	fadd   st(0),st
  40a9b9:	inc    eax
  40a9bb:	fadd   st(0),st
  40a9bd:	inc    eax
  40a9bf:	fadd   st(0),st
  40a9c1:	inc    eax
  40a9c3:	fadd   st(0),st
  40a9c5:	inc    eax
  40a9c7:	fadd   st(0),st
  40a9c9:	inc    eax
  40a9cb:	fadd   st(0),st
  40a9cd:	inc    eax
  40a9cf:	fadd   st(0),st
  40a9d1:	inc    eax
  40a9d3:	fadd   st(0),st
  40a9d5:	inc    eax
  40a9d7:	fadd   st(0),st
  40a9d9:	inc    eax
  40a9db:	fadd   st(0),st
  40a9dd:	inc    eax
  40a9df:	fadd   st(0),st
  40a9e1:	inc    eax
  40a9e3:	fadd   st(0),st
  40a9e5:	jmp    QWORD PTR [rsi-0x34]
  40a9e8:	push   WORD PTR [rbx]
  40a9eb:	xor    di,di
	...
  40aa0a:	cwd    
  40aa0c:	cdq    
  40aa0d:	call   FWORD PTR [rcx-0x66000034]
  40aa13:	int3   
  40aa14:	int3   
  40aa15:	call   FWORD PTR [rcx-0x29000034]
  40aa1b:	out    0xe7,eax
  40aa1d:	call   rsi
  40aa1f:	out    0xe7,eax
  40aa21:	call   FWORD PTR [rcx-0x66003334]
  40aa27:	int3   
  40aa28:	int3   
  40aa29:	jmp    QWORD PTR [rsi-0x67]
  40aa2c:	int3   
  40aa2d:	jmp    QWORD PTR [rsi-0x67]
  40aa30:	jmp    WORD PTR [rsi-0x67]
  40aa34:	jmp    WORD PTR [rsi-0x67]
  40aa38:	jmp    WORD PTR [rsi-0x67]
  40aa3c:	jmp    WORD PTR [rsi-0x67]
  40aa40:	jmp    WORD PTR [rsi-0x67]
  40aa44:	jmp    WORD PTR [rsi-0x67]
  40aa48:	jmp    WORD PTR [rsi-0x67]
  40aa4c:	jmp    WORD PTR [rsi-0x67]
  40aa50:	push   WORD PTR [rbx]
  40aa53:	cdq    
  40aa54:	xor    edi,edi
  40aa56:	cwd    
  40aa58:	push   WORD PTR [rbx]
  40aa5b:	cdq    
  40aa5c:	xor    edi,edi
  40aa5e:	cwd    
  40aa60:	push   WORD PTR [rbx]
  40aa63:	cdq    
  40aa64:	xor    edi,edi
  40aa66:	xor    ebx,DWORD PTR [rcx-0x66cc00cd]
  40aa6c:	xor    edi,edi
	...
  40aa8a:	cwd    
  40aa8c:	cdq    
  40aa8d:	call   FWORD PTR [rcx-0x66003334]
  40aa93:	int3   
  40aa94:	(bad)  
  40aa95:	call   FWORD PTR [rcx-0x66003334]
  40aa9b:	int3   
  40aa9c:	int3   
  40aa9d:	call   FWORD PTR [rcx-0x66000034]
  40aaa3:	int3   
  40aaa4:	int3   
  40aaa5:	call   FWORD PTR [rcx+0x66ffffcc]
  40aaab:	int3   
  40aaac:	int3   
  40aaad:	call   FWORD PTR [rcx+0x66ffcccc]
  40aab3:	cdq    
  40aab4:	int3   
  40aab5:	push   QWORD PTR [rbx]
  40aab7:	data16 inc WORD PTR [rax]
  40aabb:	xor    esp,DWORD PTR [rsi-0x1]
  40aabe:	xor    esp,DWORD PTR [rsi-0x67]
  40aac1:	push   QWORD PTR [rbx]
  40aac3:	data16 push WORD PTR [rbx]
  40aac7:	cwd    
  40aac9:	push   QWORD PTR [rbx]
  40aacb:	data16 push WORD PTR [rbx]
  40aacf:	cwd    
  40aad1:	push   QWORD PTR [rbx]
  40aad3:	cwd    
  40aad5:	push   QWORD PTR [rbx]
  40aad7:	cwd    
  40aad9:	push   QWORD PTR [rbx]
  40aadb:	cwd    
  40aadd:	push   QWORD PTR [rbx]
  40aadf:	cwd    
  40aae1:	push   QWORD PTR [rbx]
  40aae3:	xor    esp,DWORD PTR [rsi-0x1]
	...
  40ab0a:	cwd    
  40ab0c:	cdq    
  40ab0d:	call   FWORD PTR [rcx-0x66000034]
  40ab13:	int3   
  40ab14:	int3   
  40ab15:	call   FWORD PTR [rcx-0x39000034]
  40ab1b:	(bad)  
  40ab1c:	out    dx,eax
  40ab1d:	push   rax
  40ab1f:	sti    
  40ab20:	(bad)  
  40ab21:	push   rax
  40ab23:	sti    
  40ab24:	(bad)  
  40ab25:	call   FWORD PTR [rcx-0x66003334]
  40ab2b:	int3   
  40ab2c:	(bad)  
  40ab2d:	call   FWORD PTR [rcx-0x66003334]
  40ab33:	int3   
  40ab34:	int3   
  40ab35:	push   QWORD PTR [rbx]
  40ab37:	data16 inc WORD PTR [rax]
  40ab3b:	xor    esp,DWORD PTR [rsi-0x1]
  40ab3e:	xor    esp,DWORD PTR [rsi+0x66]
  40ab41:	push   QWORD PTR [rbx]
  40ab43:	cwd    
  40ab45:	push   QWORD PTR [rbx]
  40ab47:	data16 push WORD PTR [rbx]
  40ab4b:	cwd    
  40ab4d:	push   QWORD PTR [rbx]
  40ab4f:	cwd    
  40ab51:	push   QWORD PTR [rbx]
  40ab53:	data16 push WORD PTR [rbx]
  40ab57:	cwd    
  40ab59:	push   QWORD PTR [rbx]
  40ab5b:	cwd    
  40ab5d:	push   QWORD PTR [rbx]
  40ab5f:	cwd    
  40ab61:	push   QWORD PTR [rbx]
  40ab63:	xor    esp,DWORD PTR [rsi-0x1]
	...
  40ab8a:	cwd    
  40ab8c:	cdq    
  40ab8d:	call   FWORD PTR [rcx-0x66000034]
  40ab93:	int3   
  40ab94:	int3   
  40ab95:	call   FWORD PTR [rcx-0x29000034]
  40ab9b:	out    0xe7,eax
  40ab9d:	push   rax
  40ab9f:	sti    
  40aba0:	(bad)  
  40aba1:	push   rax
  40aba3:	sti    
  40aba4:	(bad)  
  40aba5:	call   FWORD PTR [rcx-0x66003334]
  40abab:	int3   
  40abac:	int3   
  40abad:	call   FWORD PTR [rcx-0x66000034]
  40abb3:	int3   
  40abb4:	int3   
  40abb5:	push   QWORD PTR [rbx]
  40abb7:	data16 inc WORD PTR [rax]
  40abbb:	xor    esp,DWORD PTR [rsi-0x1]
  40abbe:	add    BYTE PTR [rbx],dh
  40abc0:	inc    WORD PTR [rax]
  40abc3:	xor    esp,DWORD PTR [rsi-0x1]
  40abc6:	xor    esp,DWORD PTR [rsi-0x67]
  40abc9:	push   QWORD PTR [rbx]
  40abcb:	cwd    
  40abcd:	push   QWORD PTR [rbx]
  40abcf:	cwd    
  40abd1:	push   QWORD PTR [rbx]
  40abd3:	data16 inc WORD PTR [rax]
  40abd7:	cwd    
  40abd9:	push   QWORD PTR [rbx]
  40abdb:	cwd    
  40abdd:	push   QWORD PTR [rbx]
  40abdf:	cwd    
  40abe1:	push   QWORD PTR [rbx]
  40abe3:	xor    esp,DWORD PTR [rsi-0x1]
	...
  40ac0a:	cwd    
  40ac0c:	cdq    
  40ac0d:	call   FWORD PTR [rcx-0x66003334]
  40ac13:	int3   
  40ac14:	(bad)  
  40ac15:	call   FWORD PTR [rcx-0xf003334]
  40ac1b:	sti    
  40ac1c:	(bad)  
  40ac1d:	push   rax
  40ac1f:	sti    
  40ac20:	(bad)  
  40ac21:	call   rsi
  40ac23:	out    0xe7,eax
  40ac25:	call   FWORD PTR [rcx-0x66000034]
  40ac2b:	int3   
  40ac2c:	(bad)  
  40ac2d:	call   FWORD PTR [rcx-0x66003334]
  40ac33:	int3   
  40ac34:	int3   
  40ac35:	push   QWORD PTR [rbx]
  40ac37:	data16 jmp WORD PTR [rsi-0x67]
  40ac3c:	cdq    
  40ac3d:	jmp    QWORD PTR [rsi-0x67]
  40ac40:	cdq    
  40ac41:	jmp    QWORD PTR [rsi-0x67]
  40ac44:	cdq    
  40ac45:	push   QWORD PTR [rbx]
  40ac47:	data16 inc WORD PTR [rax]
  40ac4b:	xor    esp,DWORD PTR [rsi-0x1]
  40ac4e:	add    BYTE PTR [rbx],dh
  40ac50:	inc    WORD PTR [rax]
  40ac53:	cwd    
  40ac55:	push   QWORD PTR [rbx]
  40ac57:	data16 push WORD PTR [rbx]
  40ac5b:	cwd    
  40ac5d:	inc    DWORD PTR [rax]
  40ac5f:	data16 push WORD PTR [rbx]
  40ac63:	xor    esp,DWORD PTR [rsi-0x1]
	...
  40ac8a:	cwd    
  40ac8c:	cdq    
  40ac8d:	call   FWORD PTR [rcx-0x66000034]
  40ac93:	int3   
  40ac94:	(bad)  
  40ac95:	call   FWORD PTR [rcx-0x29003334]
  40ac9b:	out    0xe7,eax
  40ac9d:	jmp    QWORD PTR [rsi-0x67]
  40aca0:	int3   
  40aca1:	jmp    QWORD PTR [rsi-0x67]
  40aca4:	int3   
  40aca5:	push   QWORD PTR [rbx]
  40aca7:	cdq    
  40aca8:	cdq    
  40aca9:	jmp    QWORD PTR [rsi-0x67]
  40acac:	cdq    
  40acad:	push   QWORD PTR [rbx]
  40acaf:	cwd    
  40acb1:	push   QWORD PTR [rbx]
  40acb3:	cdq    
  40acb4:	int3   
  40acb5:	push   QWORD PTR [rbx]
  40acb7:	cwd    
  40acb9:	jmp    QWORD PTR [rsi-0x67]
  40acbc:	int3   
  40acbd:	call   FWORD PTR [rcx-0x66003334]
  40acc3:	int3   
  40acc4:	int3   
  40acc5:	jmp    QWORD PTR [rsi-0x67]
  40acc8:	cdq    
  40acc9:	jmp    QWORD PTR [rsi-0x67]
  40accc:	cdq    
  40accd:	jmp    QWORD PTR [rsi-0x67]
  40acd0:	cdq    
  40acd1:	inc    DWORD PTR [rax]
  40acd3:	xor    esp,DWORD PTR [rsi-0x1]
  40acd6:	add    BYTE PTR [rbx],dh
  40acd8:	inc    WORD PTR [rax]
  40acdb:	xor    esp,DWORD PTR [rsi-0x1]
  40acde:	add    BYTE PTR [rsi+0x66],ah
  40ace1:	push   QWORD PTR [rbx]
  40ace3:	xor    esp,DWORD PTR [rsi-0x1]
	...
  40ad0a:	cwd    
  40ad0c:	cdq    
  40ad0d:	call   FWORD PTR [rcx+0x66ffcccc]
  40ad13:	cdq    
  40ad14:	int3   
  40ad15:	jmp    QWORD PTR [rsi-0x67]
  40ad18:	int3   
  40ad19:	jmp    QWORD PTR [rsi-0x67]
  40ad1c:	cdq    
  40ad1d:	call   FWORD PTR [rcx-0x39003334]
  40ad23:	(bad)  
  40ad24:	out    dx,eax
  40ad25:	call   FWORD PTR [rcx-0x66003334]
  40ad2b:	int3   
  40ad2c:	(bad)  
  40ad2d:	jmp    QWORD PTR [rsi-0x67]
  40ad30:	int3   
  40ad31:	jmp    QWORD PTR [rsi-0x67]
  40ad34:	int3   
  40ad35:	push   QWORD PTR [rbx]
  40ad37:	cwd    
  40ad39:	push   QWORD PTR [rbx]
  40ad3b:	cdq    
  40ad3c:	cdq    
  40ad3d:	jmp    QWORD PTR [rsi-0x67]
  40ad40:	int3   
  40ad41:	call   FWORD PTR [rcx-0x66003334]
  40ad47:	int3   
  40ad48:	int3   
  40ad49:	call   FWORD PTR [rcx-0x66000034]
  40ad4f:	int3   
  40ad50:	int3   
  40ad51:	call   QWORD PTR [rax+0x66ffada9]
  40ad57:	cdq    
  40ad58:	cdq    
  40ad59:	jmp    QWORD PTR [rsi-0x67]
  40ad5c:	cdq    
  40ad5d:	inc    DWORD PTR [rax]
  40ad5f:	xor    esp,DWORD PTR [rsi-0x1]
  40ad62:	xor    esi,DWORD PTR [rbx]
  40ad64:	inc    WORD PTR [rax]
	...
  40ad83:	add    BYTE PTR [rax],al
  40ad85:	add    BYTE PTR [rsi-0x67],ah
  40ad88:	int3   
  40ad89:	jmp    QWORD PTR [rsi-0x67]
  40ad8c:	int3   
  40ad8d:	jmp    QWORD PTR [rsi-0x67]
  40ad90:	int3   
  40ad91:	jmp    QWORD PTR [rsi-0x67]
  40ad94:	int3   
  40ad95:	inc    esi
  40ad97:	(bad)  
  40ad98:	out    dx,eax
  40ad99:	inc    esi
  40ad9b:	(bad)  
  40ad9c:	out    dx,eax
  40ad9d:	inc    esi
  40ad9f:	(bad)  
  40ada0:	out    dx,eax
  40ada1:	call   QWORD PTR [rax+0x66ffada9]
  40ada7:	cdq    
  40ada8:	int3   
  40ada9:	jmp    QWORD PTR [rsi-0x67]
  40adac:	int3   
  40adad:	jmp    QWORD PTR [rsi-0x67]
  40adb0:	int3   
  40adb1:	push   QWORD PTR [rbx]
  40adb3:	cwd    
  40adb5:	push   QWORD PTR [rbx]
  40adb7:	cwd    
  40adb9:	jmp    QWORD PTR [rsi-0x67]
  40adbc:	int3   
  40adbd:	jmp    QWORD PTR [rsi-0x67]
  40adc0:	int3   
  40adc1:	jmp    QWORD PTR [rsi-0x67]
  40adc4:	int3   
  40adc5:	jmp    QWORD PTR [rsi-0x67]
  40adc8:	cdq    
  40adc9:	jmp    QWORD PTR [rsi-0x67]
  40adcc:	int3   
  40adcd:	call   FWORD PTR [rcx-0x66003334]
  40add3:	int3   
  40add4:	(bad)  
  40add5:	call   FWORD PTR [rcx+0x66ffcccc]
  40addb:	cdq    
  40addc:	int3   
  40addd:	jmp    QWORD PTR [rsi-0x67]
  40ade0:	cdq    
  40ade1:	jmp    QWORD PTR [rsi-0x67]
  40ade4:	cdq    
  40ade5:	jmp    QWORD PTR [rsi-0x67]
  40ade8:	cdq    
  40ade9:	inc    DWORD PTR [rax]
	...
  40adfb:	add    BYTE PTR [rax],al
  40adfd:	add    BYTE PTR [rsi-0x67],ah
  40ae00:	int3   
  40ae01:	jmp    QWORD PTR [rsi-0x67]
  40ae04:	int3   
  40ae05:	dec    esp
  40ae07:	(bad)  
  40ae08:	(bad)  
  40ae09:	call   rsi
  40ae0b:	out    0xe7,eax
  40ae0d:	inc    esi
  40ae0f:	(bad)  
  40ae10:	out    dx,eax
  40ae11:	call   rsi
  40ae13:	out    0xe7,eax
  40ae15:	call   FWORD PTR [rcx+0x66ffcccc]
  40ae1b:	cdq    
  40ae1c:	int3   
  40ae1d:	jmp    QWORD PTR [rsi-0x67]
  40ae20:	int3   
  40ae21:	jmp    QWORD PTR [rsi-0x67]
  40ae24:	int3   
  40ae25:	push   QWORD PTR [rbx]
  40ae27:	cwd    
  40ae29:	push   QWORD PTR [rbx]
  40ae2b:	cwd    
  40ae2d:	push   QWORD PTR [rbx]
  40ae2f:	cwd    
  40ae31:	push   QWORD PTR [rbx]
  40ae33:	cwd    
  40ae35:	push   QWORD PTR [rbx]
  40ae37:	cwd    
  40ae39:	jmp    QWORD PTR [rsi-0x67]
  40ae3c:	int3   
  40ae3d:	jmp    QWORD PTR [rsi-0x67]
  40ae40:	int3   
  40ae41:	jmp    QWORD PTR [rsi-0x67]
  40ae44:	int3   
  40ae45:	jmp    QWORD PTR [rsi-0x67]
  40ae48:	int3   
  40ae49:	jmp    QWORD PTR [rsi-0x67]
  40ae4c:	int3   
  40ae4d:	jmp    QWORD PTR [rsi-0x67]
  40ae50:	int3   
  40ae51:	jmp    QWORD PTR [rsi-0x67]
  40ae54:	cdq    
  40ae55:	jmp    QWORD PTR [rsi-0x67]
  40ae58:	int3   
  40ae59:	call   FWORD PTR [rcx-0x66000034]
  40ae5f:	int3   
  40ae60:	int3   
  40ae61:	jmp    QWORD PTR [rsi-0x67]
  40ae64:	int3   
  40ae65:	call   QWORD PTR [rax+0x66ffada9]
  40ae6b:	cdq    
  40ae6c:	cdq    
  40ae6d:	inc    DWORD PTR [rax]
	...
  40ae77:	add    BYTE PTR [rax],al
  40ae79:	add    BYTE PTR [rsi-0x67],ah
  40ae7c:	int3   
  40ae7d:	jmp    QWORD PTR [rsi-0x67]
  40ae80:	int3   
  40ae81:	jmp    QWORD PTR [rsi-0x67]
  40ae84:	int3   
  40ae85:	jmp    QWORD PTR [rsi-0x67]
  40ae88:	int3   
  40ae89:	jmp    QWORD PTR [rsi-0x67]
  40ae8c:	int3   
  40ae8d:	jmp    QWORD PTR [rsi-0x67]
  40ae90:	int3   
  40ae91:	jmp    QWORD PTR [rsi-0x67]
  40ae94:	int3   
  40ae95:	jmp    QWORD PTR [rsi-0x67]
  40ae98:	int3   
  40ae99:	push   QWORD PTR [rbx]
  40ae9b:	cwd    
  40ae9d:	push   QWORD PTR [rbx]
  40ae9f:	cwd    
  40aea1:	push   QWORD PTR [rbx]
  40aea3:	cwd    
  40aea5:	push   QWORD PTR [rbx]
  40aea7:	cwd    
  40aea9:	push   QWORD PTR [rbx]
  40aeab:	cwd    
  40aead:	push   QWORD PTR [rbx]
  40aeaf:	cwd    
  40aeb1:	push   QWORD PTR [rbx]
  40aeb3:	cwd    
  40aeb5:	push   QWORD PTR [rbx]
  40aeb7:	cwd    
  40aeb9:	jmp    QWORD PTR [rsi-0x67]
  40aebc:	int3   
  40aebd:	jmp    QWORD PTR [rsi-0x67]
  40aec0:	int3   
  40aec1:	jmp    QWORD PTR [rsi-0x67]
  40aec4:	int3   
  40aec5:	jmp    QWORD PTR [rsi-0x67]
  40aec8:	int3   
  40aec9:	jmp    QWORD PTR [rsi-0x67]
  40aecc:	int3   
  40aecd:	jmp    QWORD PTR [rsi-0x67]
  40aed0:	int3   
  40aed1:	jmp    QWORD PTR [rsi-0x67]
  40aed4:	int3   
  40aed5:	jmp    QWORD PTR [rsi-0x67]
  40aed8:	int3   
  40aed9:	jmp    QWORD PTR [rsi-0x67]
  40aedc:	cdq    
  40aedd:	jmp    QWORD PTR [rsi-0x67]
  40aee0:	int3   
  40aee1:	jmp    QWORD PTR [rsi-0x67]
  40aee4:	cdq    
  40aee5:	jmp    QWORD PTR [rsi-0x67]
  40aee8:	cdq    
  40aee9:	jmp    QWORD PTR [rsi-0x67]
  40aeec:	cdq    
  40aeed:	jmp    QWORD PTR [rsi-0x67]
  40aef0:	cdq    
  40aef1:	inc    DWORD PTR [rax]
	...
  40af07:	add    BYTE PTR [rax],al
  40af09:	add    BYTE PTR [rcx+0x66ffcc99],bl
  40af0f:	cdq    
  40af10:	cdq    
  40af11:	jmp    QWORD PTR [rsi-0x67]
  40af14:	int3   
  40af15:	push   QWORD PTR [rbx]
  40af17:	cdq    
  40af18:	cdq    
  40af19:	push   QWORD PTR [rbx]
  40af1b:	cwd    
  40af1d:	push   QWORD PTR [rbx]
  40af1f:	cwd    
  40af21:	push   QWORD PTR [rbx]
  40af23:	cwd    
  40af25:	push   QWORD PTR [rbx]
  40af27:	cwd    
  40af29:	push   QWORD PTR [rbx]
  40af2b:	cwd    
  40af2d:	push   QWORD PTR [rbx]
  40af2f:	cwd    
  40af31:	push   QWORD PTR [rbx]
  40af33:	cwd    
  40af35:	push   QWORD PTR [rbx]
  40af37:	cwd    
  40af39:	jmp    QWORD PTR [rsi-0x67]
  40af3c:	int3   
  40af3d:	jmp    QWORD PTR [rsi-0x34]
  40af40:	int3   
  40af41:	jmp    QWORD PTR [rsi-0x67]
  40af44:	int3   
  40af45:	jmp    QWORD PTR [rsi-0x34]
  40af48:	int3   
  40af49:	jmp    QWORD PTR [rsi-0x67]
  40af4c:	int3   
  40af4d:	jmp    QWORD PTR [rsi-0x34]
  40af50:	int3   
  40af51:	jmp    QWORD PTR [rsi-0x67]
  40af54:	int3   
  40af55:	jmp    QWORD PTR [rsi-0x67]
  40af58:	cdq    
  40af59:	jmp    QWORD PTR [rsi-0x67]
  40af5c:	int3   
  40af5d:	jmp    QWORD PTR [rsi-0x67]
  40af60:	cdq    
  40af61:	jmp    QWORD PTR [rsi-0x67]
  40af64:	int3   
  40af65:	inc    DWORD PTR [rax]
	...
  40af83:	add    BYTE PTR [rax],al
  40af85:	add    BYTE PTR [rsi-0x67],ah
  40af88:	int3   
  40af89:	jmp    QWORD PTR [rsi-0x34]
  40af8c:	int3   
  40af8d:	call   FWORD PTR [rcx-0x66000034]
  40af93:	int3   
  40af94:	int3   
  40af95:	jmp    QWORD PTR [rsi-0x67]
  40af98:	int3   
  40af99:	jmp    QWORD PTR [rsi-0x67]
  40af9c:	int3   
  40af9d:	jmp    QWORD PTR [rsi-0x67]
  40afa0:	cdq    
  40afa1:	push   QWORD PTR [rbx]
  40afa3:	cwd    
  40afa5:	push   QWORD PTR [rbx]
  40afa7:	cwd    
  40afa9:	push   QWORD PTR [rbx]
  40afab:	cwd    
  40afad:	push   QWORD PTR [rbx]
  40afaf:	cwd    
  40afb1:	push   QWORD PTR [rbx]
  40afb3:	cwd    
  40afb5:	push   QWORD PTR [rbx]
  40afb7:	cwd    
  40afb9:	jmp    QWORD PTR [rsi-0x67]
  40afbc:	int3   
  40afbd:	jmp    QWORD PTR [rsi-0x67]
  40afc0:	int3   
  40afc1:	jmp    QWORD PTR [rsi-0x67]
  40afc4:	int3   
  40afc5:	jmp    QWORD PTR [rsi-0x67]
  40afc8:	int3   
  40afc9:	jmp    QWORD PTR [rsi-0x67]
  40afcc:	int3   
  40afcd:	jmp    QWORD PTR [rsi-0x67]
  40afd0:	int3   
  40afd1:	jmp    QWORD PTR [rsi-0x67]
  40afd4:	int3   
  40afd5:	jmp    QWORD PTR [rsi-0x67]
  40afd8:	int3   
  40afd9:	jmp    QWORD PTR [rsi-0x34]
  40afdc:	int3   
  40afdd:	jmp    QWORD PTR [rsi-0x67]
  40afe0:	int3   
  40afe1:	jmp    QWORD PTR [rsi-0x67]
  40afe4:	int3   
  40afe5:	jmp    QWORD PTR [rsi-0x67]
  40afe8:	int3   
  40afe9:	inc    DWORD PTR [rax]
	...
  40afff:	add    BYTE PTR [rax],al
  40b001:	add    BYTE PTR [rsi-0x67],ah
  40b004:	int3   
  40b005:	inc    esi
  40b007:	(bad)  
  40b008:	out    dx,eax
  40b009:	inc    esi
  40b00b:	(bad)  
  40b00c:	out    dx,eax
  40b00d:	inc    esi
  40b00f:	(bad)  
  40b010:	out    dx,eax
  40b011:	call   FWORD PTR [rcx-0x66000034]
  40b017:	int3   
  40b018:	int3   
  40b019:	call   FWORD PTR [rcx+0x66ffffcc]
  40b01f:	cdq    
  40b020:	int3   
  40b021:	push   QWORD PTR [rbx]
  40b023:	cdq    
  40b024:	cdq    
  40b025:	push   QWORD PTR [rbx]
  40b027:	cdq    
  40b028:	cdq    
  40b029:	push   QWORD PTR [rbx]
  40b02b:	cdq    
  40b02c:	cdq    
  40b02d:	push   QWORD PTR [rbx]
  40b02f:	cwd    
  40b031:	push   QWORD PTR [rbx]
  40b033:	cwd    
  40b035:	push   QWORD PTR [rbx]
  40b037:	cwd    
  40b039:	jmp    QWORD PTR [rsi-0x67]
  40b03c:	int3   
  40b03d:	jmp    QWORD PTR [rsi-0x34]
  40b040:	int3   
  40b041:	jmp    QWORD PTR [rsi-0x67]
  40b044:	int3   
  40b045:	jmp    QWORD PTR [rsi-0x67]
  40b048:	int3   
  40b049:	jmp    QWORD PTR [rsi-0x34]
  40b04c:	int3   
  40b04d:	jmp    QWORD PTR [rsi-0x67]
  40b050:	int3   
  40b051:	jmp    QWORD PTR [rsi-0x67]
  40b054:	int3   
  40b055:	jmp    QWORD PTR [rsi-0x34]
  40b058:	int3   
  40b059:	jmp    QWORD PTR [rsi-0x67]
  40b05c:	int3   
  40b05d:	call   FWORD PTR [rcx-0x66003334]
  40b063:	int3   
  40b064:	int3   
  40b065:	jmp    QWORD PTR [rsi-0x67]
  40b068:	int3   
  40b069:	jmp    QWORD PTR [rsi-0x67]
  40b06c:	int3   
  40b06d:	inc    DWORD PTR [rax]
	...
  40b07b:	add    BYTE PTR [rax],al
  40b07d:	add    BYTE PTR [rsi-0x67],ah
  40b080:	int3   
  40b081:	inc    esi
  40b083:	(bad)  
  40b084:	out    dx,eax
  40b085:	dec    esp
  40b087:	(bad)  
  40b088:	(bad)  
  40b089:	dec    esp
  40b08b:	(bad)  
  40b08c:	(bad)  
  40b08d:	inc    esi
  40b08f:	(bad)  
  40b090:	out    dx,eax
  40b091:	inc    esi
  40b093:	(bad)  
  40b094:	out    dx,eax
  40b095:	call   FWORD PTR [rcx-0x66000034]
  40b09b:	int3   
  40b09c:	int3   
  40b09d:	call   FWORD PTR [rcx+0x66ffcccc]
  40b0a3:	int3   
  40b0a4:	int3   
  40b0a5:	jmp    QWORD PTR [rsi-0x67]
  40b0a8:	int3   
  40b0a9:	jmp    QWORD PTR [rsi-0x67]
  40b0ac:	int3   
  40b0ad:	push   QWORD PTR [rbx]
  40b0af:	cdq    
  40b0b0:	cdq    
  40b0b1:	push   QWORD PTR [rbx]
  40b0b3:	cdq    
  40b0b4:	cdq    
  40b0b5:	push   QWORD PTR [rbx]
  40b0b7:	cdq    
  40b0b8:	cdq    
  40b0b9:	jmp    QWORD PTR [rsi-0x67]
  40b0bc:	int3   
  40b0bd:	jmp    QWORD PTR [rsi-0x67]
  40b0c0:	int3   
  40b0c1:	jmp    QWORD PTR [rsi-0x67]
  40b0c4:	int3   
  40b0c5:	jmp    QWORD PTR [rsi-0x34]
  40b0c8:	int3   
  40b0c9:	jmp    QWORD PTR [rsi-0x67]
  40b0cc:	int3   
  40b0cd:	jmp    QWORD PTR [rsi-0x34]
  40b0d0:	int3   
  40b0d1:	call   FWORD PTR [rcx-0x66000034]
  40b0d7:	int3   
  40b0d8:	int3   
  40b0d9:	call   FWORD PTR [rcx-0x66003334]
  40b0df:	int3   
  40b0e0:	(bad)  
  40b0e1:	call   FWORD PTR [rcx-0x66003334]
  40b0e7:	int3   
  40b0e8:	(bad)  
  40b0e9:	call   FWORD PTR [rcx+0x66ffcccc]
  40b0ef:	cdq    
  40b0f0:	int3   
  40b0f1:	inc    DWORD PTR [rax]
	...
  40b0fb:	add    BYTE PTR [rax],al
  40b0fd:	add    BYTE PTR [rsi-0x67],ah
  40b100:	int3   
  40b101:	jmp    QWORD PTR [rsi-0x67]
  40b104:	int3   
  40b105:	inc    esi
  40b107:	(bad)  
  40b108:	out    dx,eax
  40b109:	inc    esi
  40b10b:	(bad)  
  40b10c:	out    dx,eax
  40b10d:	dec    esp
  40b10f:	(bad)  
  40b110:	(bad)  
  40b111:	call   rsi
  40b113:	out    0xe7,eax
  40b115:	dec    esp
  40b117:	(bad)  
  40b118:	(bad)  
  40b119:	inc    esi
  40b11b:	(bad)  
  40b11c:	out    dx,eax
  40b11d:	call   FWORD PTR [rcx-0x66000034]
  40b123:	int3   
  40b124:	(bad)  
  40b125:	call   FWORD PTR [rcx+0x66ffcccc]
  40b12b:	int3   
  40b12c:	int3   
  40b12d:	jmp    QWORD PTR [rsi-0x67]
  40b130:	int3   
  40b131:	jmp    QWORD PTR [rsi-0x67]
  40b134:	int3   
  40b135:	jmp    QWORD PTR [rsi-0x67]
  40b138:	int3   
  40b139:	jmp    QWORD PTR [rsi-0x67]
  40b13c:	cdq    
  40b13d:	jmp    QWORD PTR [rsi-0x34]
  40b140:	int3   
  40b141:	jmp    QWORD PTR [rsi-0x67]
  40b144:	int3   
  40b145:	call   FWORD PTR [rcx-0x66003334]
  40b14b:	int3   
  40b14c:	int3   
  40b14d:	call   FWORD PTR [rcx-0x66003334]
  40b153:	int3   
  40b154:	int3   
  40b155:	call   FWORD PTR [rcx-0x66000034]
  40b15b:	int3   
  40b15c:	(bad)  
  40b15d:	inc    esi
  40b15f:	(bad)  
  40b160:	out    dx,eax
  40b161:	inc    esi
  40b163:	(bad)  
  40b164:	out    dx,eax
  40b165:	inc    esi
  40b167:	(bad)  
  40b168:	out    dx,eax
  40b169:	jmp    QWORD PTR [rsi-0x67]
  40b16c:	int3   
  40b16d:	jmp    QWORD PTR [rsi-0x67]
  40b170:	int3   
  40b171:	inc    DWORD PTR [rax]
	...
  40b183:	add    BYTE PTR [rax],al
  40b185:	add    BYTE PTR [rsi-0x67],ah
  40b188:	int3   
  40b189:	jmp    QWORD PTR [rsi-0x67]
  40b18c:	int3   
  40b18d:	jmp    QWORD PTR [rsi-0x67]
  40b190:	int3   
  40b191:	inc    esi
  40b193:	(bad)  
  40b194:	out    dx,eax
  40b195:	inc    esi
  40b197:	(bad)  
  40b198:	out    dx,eax
  40b199:	inc    esi
  40b19b:	(bad)  
  40b19c:	out    dx,eax
  40b19d:	inc    esi
  40b19f:	(bad)  
  40b1a0:	out    dx,eax
  40b1a1:	call   FWORD PTR [rcx-0x66000034]
  40b1a7:	int3   
  40b1a8:	int3   
  40b1a9:	call   FWORD PTR [rcx-0x66000034]
  40b1af:	int3   
  40b1b0:	int3   
  40b1b1:	jmp    QWORD PTR [rsi-0x67]
  40b1b4:	int3   
  40b1b5:	jmp    QWORD PTR [rsi-0x67]
  40b1b8:	cdq    
  40b1b9:	jmp    QWORD PTR [rsi-0x67]
  40b1bc:	int3   
  40b1bd:	call   QWORD PTR [rax-0x66005257]
  40b1c3:	int3   
  40b1c4:	(bad)  
  40b1c5:	call   FWORD PTR [rcx-0x66003334]
  40b1cb:	int3   
  40b1cc:	(bad)  
  40b1cd:	call   FWORD PTR [rcx-0x39000034]
  40b1d3:	(bad)  
  40b1d4:	out    dx,eax
  40b1d5:	inc    esi
  40b1d7:	(bad)  
  40b1d8:	out    dx,eax
  40b1d9:	inc    esi
  40b1db:	(bad)  
  40b1dc:	out    dx,eax
  40b1dd:	jmp    QWORD PTR [rsi-0x67]
  40b1e0:	int3   
  40b1e1:	jmp    QWORD PTR [rsi-0x67]
  40b1e4:	int3   
  40b1e5:	jmp    QWORD PTR [rsi-0x67]
  40b1e8:	int3   
  40b1e9:	inc    DWORD PTR [rax]
	...
  40b20f:	add    BYTE PTR [rax],al
  40b211:	add    BYTE PTR [rsi-0x67],ah
  40b214:	int3   
  40b215:	jmp    QWORD PTR [rsi-0x67]
  40b218:	int3   
  40b219:	jmp    QWORD PTR [rsi-0x67]
  40b21c:	int3   
  40b21d:	inc    esi
  40b21f:	(bad)  
  40b220:	out    dx,eax
  40b221:	inc    esi
  40b223:	(bad)  
  40b224:	out    dx,eax
  40b225:	call   FWORD PTR [rcx-0x66000034]
  40b22b:	int3   
  40b22c:	int3   
  40b22d:	jmp    QWORD PTR [rsi-0x67]
  40b230:	int3   
  40b231:	inc    DWORD PTR [rax]
	...
  40b23b:	add    BYTE PTR [rax],al
  40b23d:	add    BYTE PTR [rsi-0x67],ah
  40b240:	int3   
  40b241:	jmp    QWORD PTR [rsi-0x67]
  40b244:	int3   
  40b245:	inc    esi
  40b247:	(bad)  
  40b248:	out    dx,eax
  40b249:	inc    esi
  40b24b:	(bad)  
  40b24c:	out    dx,eax
  40b24d:	inc    esi
  40b24f:	(bad)  
  40b250:	out    dx,eax
  40b251:	inc    esi
  40b253:	(bad)  
  40b254:	out    dx,eax
  40b255:	jmp    QWORD PTR [rsi-0x67]
  40b258:	int3   
  40b259:	jmp    QWORD PTR [rsi-0x67]
  40b25c:	int3   
  40b25d:	inc    DWORD PTR [rax]
	...
  40b29b:	add    BYTE PTR [rax],al
  40b29d:	add    BYTE PTR [rsi-0x67],ah
  40b2a0:	int3   
  40b2a1:	jmp    QWORD PTR [rsi-0x67]
  40b2a4:	int3   
  40b2a5:	call   FWORD PTR [rcx+0x66ffcc99]
  40b2ab:	cdq    
  40b2ac:	int3   
  40b2ad:	inc    DWORD PTR [rax]
	...
  40b2c3:	add    BYTE PTR [rax],al
  40b2c5:	add    BYTE PTR [rsi-0x67],ah
  40b2c8:	int3   
  40b2c9:	jmp    QWORD PTR [rsi-0x67]
  40b2cc:	int3   
  40b2cd:	jmp    QWORD PTR [rsi-0x67]
  40b2d0:	int3   
  40b2d1:	jmp    QWORD PTR [rsi-0x67]
  40b2d4:	int3   
  40b2d5:	inc    DWORD PTR [rax]
	...
  40b2f3:	add    BYTE PTR [rax],al
  40b2f5:	add    bh,bh
  40b2f7:	cld    
  40b2f8:	add    BYTE PTR [rbx],al
  40b2fa:	(bad)  
  40b2fb:	cld    
  40b2fc:	add    BYTE PTR [rbx],al
  40b2fe:	(bad)  
  40b2ff:	cld    
  40b300:	add    BYTE PTR [rbx],al
  40b302:	(bad)  
  40b303:	cld    
  40b304:	add    BYTE PTR [rbx],al
  40b306:	(bad)  
  40b307:	cld    
  40b308:	add    BYTE PTR [rbx],al
  40b30a:	(bad)  
  40b30b:	cld    
  40b30c:	add    BYTE PTR [rbx],al
  40b30e:	push   rax
  40b310:	add    BYTE PTR [rbx],al
  40b312:	inc    eax
  40b314:	add    BYTE PTR [rbx],al
  40b316:	inc    DWORD PTR [rax]
  40b318:	add    BYTE PTR [rbx],al
  40b31a:	cld    
  40b31b:	add    BYTE PTR [rax],al
  40b31d:	add    edi,eax
  40b31f:	add    BYTE PTR [rax],al
  40b321:	add    edi,eax
  40b323:	add    BYTE PTR [rax],al
  40b325:	add    edi,eax
  40b327:	add    BYTE PTR [rax],al
  40b329:	add    edi,eax
  40b32b:	add    BYTE PTR [rax],al
  40b32d:	add    edi,eax
  40b32f:	add    BYTE PTR [rax],al
  40b331:	add    edi,eax
  40b333:	add    BYTE PTR [rax],al
  40b335:	psubb  mm0,QWORD PTR [rax]
  40b338:	add    BYTE PTR [rdi],cl
  40b33a:	clc    
  40b33b:	add    BYTE PTR [rax],al
  40b33d:	psubb  mm0,QWORD PTR [rax]
  40b340:	add    BYTE PTR [rdi],cl
  40b342:	clc    
  40b343:	add    BYTE PTR [rax],al
  40b345:	psubb  mm0,QWORD PTR [rax]
  40b348:	add    BYTE PTR [rdi],cl
  40b34a:	lock add BYTE PTR [rax],al
  40b34d:	(bad)  
  40b34e:	rol    BYTE PTR [rax],0x0
  40b351:	add    eax,DWORD PTR [rax-0x7ff0000]
  40b357:	add    BYTE PTR [rax],al
  40b359:	(bad)  
  40b35b:	add    BYTE PTR [rax],al
  40b35d:	(bad)  
  40b35e:	loopne 0x40b360
  40b360:	add    BYTE PTR [rbx],al
  40b362:	rol    BYTE PTR [rax],0x0
  40b365:	add    eax,eax
  40b367:	add    BYTE PTR [rax],al
  40b369:	add    eax,esi
  40b36b:	add    BYTE PTR [rax],al
  40b36d:	(bad)  
  40b36e:	inc    BYTE PTR [rcx]
  40b370:	sar    BYTE PTR [rdi],0xff
  40b373:	ret    
  40b374:	lock jmp FWORD PTR [rax]
  40b377:	add    BYTE PTR [rax],al
  40b379:	add    BYTE PTR [rax],dl
  40b37b:	add    BYTE PTR [rax],al
  40b37d:	add    BYTE PTR [rax],ah
  40b37f:	add    BYTE PTR [rax],al
  40b381:	add    BYTE PTR [rcx],al
  40b383:	add    BYTE PTR [rax],ah
  40b385:	add    BYTE PTR [rax],al
  40b387:	add    BYTE PTR [rax],al
  40b389:	add    BYTE PTR [rax+0x4],al
	...
  40b3b8:	add    BYTE PTR [rax],al
  40b3ba:	push   rdx
  40b3bb:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40b3bc:	push   0xffffffffffffffff
  40b3be:	cmp    BYTE PTR [rbp+rax*2+0x387e2bff],cl
  40b3c5:	hlt    
  40b3c6:	(bad)  
  40b3c7:	outs   dx,BYTE PTR ds:[rsi]
  40b3c8:	sub    eax,0x306e21f4
  40b3cd:	hlt    
  40b3ce:	sbb    BYTE PTR [rsi+0x27],ah
  40b3d1:	hlt    
  40b3d2:	adc    BYTE PTR [rbp+0x21],bl
  40b3d5:	hlt    
  40b3d6:	or     al,0x50
  40b3d8:	sbb    bh,bh
	...
  40b3f6:	xor    eax,0x52e3a37a
  40b3fb:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40b3fc:	push   0xffffffffffffffff
  40b3fe:	(bad)  
  40b3ff:	sar    BYTE PTR [rax-0x1],0x35
  40b403:	jbe    0x40b44a
  40b405:	push   QWORD PTR [rbx]
  40b407:	(bad)  
  40b408:	(bad)  
  40b409:	call   FWORD PTR [rdx]
  40b40b:	mov    DWORD PTR [rdi],esi
  40b40d:	call   QWORD PTR [rsi+rax*4]
  40b410:	xor    eax,0x317f12ff
  40b415:	inc    DWORD PTR [rdx+rsi*2]
  40b418:	and    eax,0xff
	...
  40b42d:	add    BYTE PTR [rbx-0x77],cl
  40b430:	lods   eax,DWORD PTR ds:[rsi]
  40b431:	dec    DWORD PTR [rbx-0x77]
  40b434:	lods   eax,DWORD PTR ds:[rsi]
  40b435:	inc    DWORD PTR [rax-0x75]
  40b438:	mov    ebp,0x6aa452f8
  40b43d:	call   FWORD PTR [rcx-0x4a]
  40b440:	outs   dx,BYTE PTR ds:[rsi]
  40b441:	push   rcx
  40b443:	push   rdi
  40b445:	push   QWORD PTR [rbx]
  40b447:	(bad)  
  40b448:	(bad)  
  40b449:	jmp    FWORD PTR [rdi]
  40b44b:	gs cmp al,0xff
  40b44e:	sub    eax,0x45ff4076
  40b453:	mov    dl,BYTE PTR [rdi-0x1]
  40b456:	or     eax,0xff2d82
	...
  40b467:	add    BYTE PTR [rax],al
  40b469:	add    BYTE PTR [rbx-0x77],cl
  40b46c:	lods   eax,DWORD PTR ds:[rsi]
  40b46d:	dec    DWORD PTR [rbp-0x2e00213d]
  40b473:	call   0xffffffff978eb46b
  40b478:	enter  0x52f1,0xa4
  40b47c:	push   0xffffffffffffffff
  40b47e:	test   ebp,ebx
  40b480:	nop
  40b481:	call   FWORD PTR [rcx-0x4a]
  40b484:	outs   dx,BYTE PTR ds:[rsi]
  40b485:	push   rcx
  40b487:	push   rdi
  40b489:	push   QWORD PTR [rbx]
  40b48b:	(bad)  
  40b48c:	(bad)  
  40b48d:	push   rcx
  40b48f:	push   rdi
  40b491:	(bad)  
  40b492:	jl     0x40b449
  40b494:	mov    edi,edi
  40b496:	or     al,0x7d
  40b498:	sub    bh,bh
	...
  40b4aa:	rex.RX xchg ebx,eax
  40b4ac:	mov    ebx,0xe4c58fff
  40b4b1:	jmp    FWORD PTR [rdi+0x51ffe6d3]
  40b4b7:	fwait
  40b4b8:	(bad)  
  40b4b9:	lock push rdx
  40b4bb:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40b4bc:	push   0xffffffffffffffff
  40b4be:	xchg   edx,eax
  40b4bf:	jrcxz  0x40b45d
  40b4c1:	call   FWORD PTR [rcx-0x4a]
  40b4c4:	outs   dx,BYTE PTR ds:[rsi]
  40b4c5:	call   FWORD PTR [rcx-0x4a]
  40b4c8:	outs   dx,BYTE PTR ds:[rsi]
  40b4c9:	(bad)  
  40b4ca:	(bad)  
  40b4cb:	(bad)  
  40b4cc:	(bad)  
  40b4cd:	(bad)  
  40b4ce:	(bad)  
  40b4cf:	(bad)  
  40b4d0:	(bad)  
  40b4d1:	dec    DWORD PTR [rsp+rsi*4-0x7fe5006b]
  40b4d8:	xor    eax,0xff
	...
  40b4e9:	add    BYTE PTR [rbp-0x63],dl
  40b4ec:	(bad)  
  40b4ed:	(bad)  
  40b4ee:	jns    0x40b4ad
  40b4f0:	loop   0x40b4f1
  40b4f2:	gs scas al,BYTE PTR es:[rdi]
  40b4f4:	(bad)  
  40b4f5:	call   QWORD PTR [rsi-0x5e]
  40b4f8:	sar    ecx,1
  40b4fa:	push   rdx
  40b4fb:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40b4fc:	push   0xffffffffffffffff
  40b4fe:	xchg   edi,eax
  40b4ff:	out    0x9e,eax
  40b501:	(bad)  
  40b502:	jp     0x40b4d3
  40b504:	mov    edi,?
  40b506:	icebp  
  40b507:	push   rdi
  40b509:	push   rcx
  40b50b:	push   rdi
  40b50d:	push   rbp
  40b50f:	(bad)  
  40b510:	stc    
  40b511:	call   FWORD PTR [rsi+0x25ffacd7]
  40b517:	mov    ?,WORD PTR [rdi]
  40b519:	inc    DWORD PTR [rax]
	...
  40b527:	add    BYTE PTR [rax],al
  40b529:	add    BYTE PTR [rbx-0x5d],bl
  40b52c:	retf   0x8fff
  40b52f:	int    0xec
  40b531:	push   QWORD PTR [rdi+0x78fff1de]
  40b537:	mov    edx,0xa452ffdf
  40b53c:	push   0xffffffffffffffff
  40b53e:	mov    ebx,0xbcffb4f6
  40b543:	cli    
  40b544:	sar    edi,0xaa
  40b547:	out    dx,al
  40b548:	mov    al,0xff
  40b54a:	movabs eax,ds:0xa0ffa3e59bffa7e7
  40b553:	jmp    0xffffffffb69bb4ff
  40b558:	imul   edi,edi,0x0
	...
  40b567:	add    BYTE PTR [rax],al
  40b569:	add    BYTE PTR [rbp-0x59],bl
  40b56c:	int    0xff
  40b56e:	movabs ds:0x61ffe9d9bafff3d8,eax
  40b577:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  40b578:	int    0xff
  40b57a:	fs test eax,0xa964ff68
  40b580:	push   0x68a964ff
  40b585:	jmp    QWORD PTR [rcx+rbp*4+0x68]
  40b589:	jmp    QWORD PTR [rcx+rbp*4+0x68]
  40b58d:	jmp    QWORD PTR [rcx+rbp*4+0x68]
  40b591:	jmp    QWORD PTR [rcx+rbp*4+0x68]
  40b595:	(bad)  
  40b596:	(bad)  
  40b597:	or     DWORD PTR [rax-0x1],0x0
	...
  40b5a7:	add    BYTE PTR [rax],al
  40b5a9:	add    BYTE PTR [rbx-0x6d],cl
  40b5ac:	mov    ecx,0xccab6cff
  40b5b1:	jmp    FWORD PTR [rdi-0x53]
  40b5b4:	sar    bh,1
  40b5b6:	rex.WXB cdqe 
  40b5b8:	sar    edi,0xd
  40b5bb:	pop    rsp
  40b5bc:	mov    bh,bh
  40b5be:	add    BYTE PTR [rcx+0x6f],al
  40b5c1:	jmp    QWORD PTR [rdx]
  40b5c3:	jb     0x40b562
  40b5c5:	call   FWORD PTR [rcx-0x61]
  40b5c8:	(bad)  
  40b5c9:	call   QWORD PTR [rbp-0x66]
  40b5cc:	mov    edi,0x8f672fff
  40b5d1:	inc    DWORD PTR [rdi]
  40b5d3:	es push rsp
  40b5d5:	inc    DWORD PTR [rax]
	...
  40b5e3:	add    BYTE PTR [rax],al
  40b5e5:	add    BYTE PTR [rcx-0x65],ah
  40b5e8:	mov    ebx,0xc8a86ffd
  40b5ed:	jmp    QWORD PTR [rsi-0x61]
  40b5f0:	ret    0x45ff
  40b5f3:	sub    DWORD PTR [rbx-0x7baae401],0xffffffff
  40b5fa:	add    edi,DWORD PTR [rax+rsi*2]
  40b5fd:	dec    DWORD PTR [rax]
  40b5ff:	push   rdi
  40b600:	mov    edi,edi
  40b602:	sub    eax,0x2cffb988
  40b607:	sub    DWORD PTR [rdi-0x426ab801],0xcaa661ff
  40b611:	call   FWORD PTR [rbx-0x64]
  40b614:	sar    edi,0x47
  40b617:	jg     0x40b5bd
  40b619:	std    
	...
  40b622:	push   0x3bffb298
  40b627:	jge    0x40b5ce
  40b629:	jmp    0xffffffffffe83165
  40b62e:	or     al,0x52
  40b630:	mov    bh,bh
  40b632:	add    BYTE PTR [rcx],ah
  40b634:	push   rsp
  40b635:	inc    DWORD PTR [rax]
  40b637:	sbb    al,0x4b
  40b639:	inc    DWORD PTR [rax]
  40b63b:	(bad)  
  40b63c:	pop    rdx
  40b63d:	dec    DWORD PTR [rsi]
  40b63f:	pop    rsi
  40b640:	mov    ?,edi
  40b642:	rex.B (bad) 
  40b644:	enter  0x3dff,0x95
  40b648:	(bad)  
  40b649:	push   QWORD PTR [rdx+rcx*4]
  40b64c:	mov    ecx,0xa77722ff
  40b651:	jmp    FWORD PTR [rdx]
  40b653:	js     0x40b5f9
  40b655:	jmp    FWORD PTR [rsi]
  40b657:	imul   edx,DWORD PTR [rax-0x5a7fb717],0xff
  40b661:	add    BYTE PTR [rax],al
  40b663:	add    BYTE PTR [rax],al
  40b665:	add    BYTE PTR [rax-0x58],bh
  40b668:	leave  
  40b669:	push   QWORD PTR [rbx-0x4c]
  40b66c:	(bad)  
  40b66e:	cmp    ecx,DWORD PTR [rbp+0x6414ffbc]
  40b674:	xchg   edi,eax
  40b675:	inc    DWORD PTR [rbx]
  40b677:	rex.X jne 0x40b679
  40b67a:	add    BYTE PTR [rcx],ch
  40b67c:	pop    rdx
  40b67d:	call   QWORD PTR [rax]
  40b67f:	(bad)  
  40b680:	nop
  40b681:	inc    DWORD PTR [rbx-0x67]
  40b684:	(bad)  
  40b685:	jmp    FWORD PTR [rip+0x2affb281]        # 0x2b40690c
  40b68b:	xor    DWORD PTR [rbp-0x457bdd01],0xbf8d2dff
  40b695:	push   QWORD PTR [rdi]
  40b697:	(bad)  
  40b698:	lods   eax,DWORD PTR ds:[rsi]
  40b699:	repnz add BYTE PTR [rax],al
  40b69c:	add    BYTE PTR [rax],al
  40b69e:	add    BYTE PTR [rax],al
  40b6a0:	add    BYTE PTR [rax],al
  40b6a2:	js     0x40b64c
  40b6a4:	leave  
  40b6a5:	(bad)  
  40b6a6:	mov    ebp,0xc8fffce5
  40b6ab:	out    dx,eax
  40b6ac:	(bad)  
  40b6ad:	call   FWORD PTR [rdi+0x65fffada]
  40b6b3:	mov    bh,0xe1
  40b6b5:	push   QWORD PTR [rbx]
  40b6b7:	xchg   edx,eax
  40b6b8:	(bad)  
  40b6bb:	imul   ebx,DWORD PTR [rsi-0x709ee801],0xb0822dff
  40b6c5:	push   QWORD PTR [rdi+rcx*4]
  40b6c8:	sar    edi,0x4b
  40b6cb:	movabs ds:0xc781ffe3b96affd2,al
  40b6d4:	in     al,dx
  40b6d5:	inc    DWORD PTR [rax+0x58ffe7c3]
  40b6db:	xchg   ebp,eax
  40b6dc:	mov    esi,0xf3
  40b6e1:	add    BYTE PTR [rax],al
  40b6e3:	add    BYTE PTR [rax],al
  40b6e5:	add    BYTE PTR [rax-0x58],bh
  40b6e8:	leave  
  40b6e9:	(bad)  
  40b6ea:	js     0x40b694
  40b6ec:	leave  
  40b6ed:	jmp    QWORD PTR [rax-0x66000f2d]
  40b6f3:	shl    bl,cl
  40b6f5:	(bad)  
  40b6f6:	js     0x40b6bb
  40b6f8:	(bad)  
  40b6f9:	(bad)  
  40b6fa:	ds cwde 
  40b6fc:	enter  0xe5,0x0
  40b700:	add    BYTE PTR [rax],al
  40b702:	rex.X xchg ecx,eax
  40b704:	mov    esi,0xe8c175e9
  40b709:	call   QWORD PTR [rcx-0x6c001032]
  40b70f:	retf   0xffea
  40b712:	js     0x40b6bc
  40b714:	leave  
  40b715:	(bad)  
  40b716:	js     0x40b6c0
  40b718:	leave  
  40b719:	inc    DWORD PTR [rax]
	...
  40b72b:	add    BYTE PTR [rax],al
  40b72d:	add    BYTE PTR [rax-0x58],bh
  40b730:	leave  
  40b731:	(bad)  
  40b732:	js     0x40b6dc
  40b734:	leave  
  40b735:	(bad)  
  40b736:	js     0x40b6e0
  40b738:	leave  
  40b739:	inc    DWORD PTR [rax]
	...
  40b743:	add    BYTE PTR [rax],al
  40b745:	add    BYTE PTR [rax-0x58],bh
  40b748:	leave  
  40b749:	(bad)  
  40b74a:	jnp    0x40b706
  40b74c:	fsubp  st(2),st
  40b74e:	js     0x40b6f8
  40b750:	leave  
  40b751:	inc    DWORD PTR [rax]
	...
  40b79b:	add    BYTE PTR [rax],al
  40b79d:	add    dh,bh
  40b79f:	add    DWORD PTR [rax],eax
  40b7a1:	add    ah,bh
  40b7a3:	add    DWORD PTR [rax],eax
  40b7a5:	add    al,dh
  40b7a7:	add    DWORD PTR [rax],eax
  40b7a9:	add    al,ah
  40b7ab:	add    DWORD PTR [rax],eax
  40b7ad:	add    al,ah
  40b7af:	add    DWORD PTR [rax],eax
  40b7b1:	add    al,ah
  40b7b3:	add    DWORD PTR [rax],eax
  40b7b5:	add    al,ah
  40b7b7:	add    DWORD PTR [rax],eax
  40b7b9:	add    al,ah
  40b7bb:	add    DWORD PTR [rax],eax
  40b7bd:	add    al,ah
  40b7bf:	add    eax,DWORD PTR [rax]
  40b7c1:	add    al,al
  40b7c3:	add    DWORD PTR [rax],eax
  40b7c5:	add    BYTE PTR [rax-0x40000000],al
  40b7cb:	add    DWORD PTR [rax],eax
  40b7cd:	add    BYTE PTR [rax-0x40000000],al
  40b7d3:	add    DWORD PTR [rax],0xc7f100
  40b7d9:	add    bh,bh
  40b7db:	inc    DWORD PTR [rax]
  40b7dd:	add    BYTE PTR [rbx],cl
  40b7df:	add    BYTE PTR [r9],al
  40b7e2:	add    BYTE PTR [rax],al
  40b7e4:	add    bh,bh
  40b7e6:	(bad)  
  40b7e7:	(bad)  
  40b7e8:	inc    DWORD PTR [rcx]
  40b7ea:	add    BYTE PTR [rax],al
  40b7ec:	add    BYTE PTR [rax],al
  40b7ee:	add    BYTE PTR [rax],al
  40b7f0:	add    BYTE PTR [rdx+rax*1],cl
  40b7f3:	add    BYTE PTR [rax],al
  40b7f5:	add    BYTE PTR [rcx+0x53],dl
  40b7f8:	jns    0x40b86d
  40b7fa:	je     0x40b861
  40b7fc:	ins    DWORD PTR es:[rdi],dx
  40b7fd:	cs rex.R jb 0x40b862
  40b801:	ja     0x40b86c
  40b803:	outs   dx,BYTE PTR ds:[rsi]
  40b804:	addr32 sub al,0x20
  40b807:	push   rsi
  40b808:	gs jb  0x40b87e
  40b80b:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40b812:	xor    BYTE PTR cs:[rsi],ch
  40b815:	xor    BYTE PTR [rax+riz*1],ch
  40b818:	rex.XB jne 0x40b887
  40b81b:	je     0x40b892
  40b81d:	jb     0x40b884
  40b81f:	cmp    eax,0x7475656e
  40b824:	jb     0x40b887
  40b826:	ins    BYTE PTR es:[rdi],dx
  40b827:	sub    al,0x20
  40b829:	push   rax
  40b82a:	jne    0x40b88e
  40b82c:	ins    BYTE PTR es:[rdi],dx
  40b82d:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40b834:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40b838:	(bad)  
  40b839:	xor    BYTE PTR [rbx],dh
  40b83b:	xor    ax,0x3766
  40b83f:	xor    WORD PTR [rcx],si
  40b842:	fs xor eax,0x61336130
  40b848:	add    eax,0x1
  40b84d:	adc    edx,DWORD PTR [rbx+0x79]
  40b850:	jae    0x40b8c6
  40b852:	gs ins DWORD PTR es:[rdi],dx
  40b854:	cs rex.R jb 0x40b8b9
  40b858:	ja     0x40b8c3
  40b85a:	outs   dx,BYTE PTR ds:[rsi]
  40b85b:	addr32 cs push rbx
  40b85e:	imul   edi,DWORD PTR [rdx+0x65],0x2
  40b865:	add    eax,0x74646977
  40b86a:	push   0x69656806
  40b86f:	addr32 push 0x8000074
  40b875:	or     BYTE PTR [rdx],al
  40b877:	add    BYTE PTR [rax],al
  40b879:	add    BYTE PTR [rax+0x5e000001],dl
  40b87f:	add    DWORD PTR [rax],eax
  40b881:	add    BYTE PTR [rbx],cl
  40b883:	add    DWORD PTR [rsi],ebx
  40b885:	push   rbx
  40b886:	push   rcx
  40b887:	rex.WR and BYTE PTR [rbx+0x65],r10b
  40b88b:	jb     0x40b903
  40b88d:	gs jb  0x40b8b0
  40b890:	rex.WB outs dx,BYTE PTR ds:[rsi]
  40b892:	jae    0x40b908
  40b894:	(bad)  
  40b895:	ins    BYTE PTR es:[rdi],dx
  40b896:	ins    BYTE PTR es:[rdi],dx
  40b897:	(bad)  
  40b898:	je     0x40b903
  40b89a:	outs   dx,DWORD PTR ds:[rsi]
  40b89b:	outs   dx,BYTE PTR ds:[rsi]
  40b89c:	and    BYTE PTR [rbx+0x65],al
  40b89f:	outs   dx,BYTE PTR ds:[rsi]
  40b8a0:	je     0x40b907
  40b8a2:	jb     0x40b8a5
  40b8a4:	cmovl  esp,DWORD PTR [rcx+0x6e]
  40b8a8:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x65676150
  40b8b0:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40b8b2:	jb     0x40b921
  40b8b4:	add    DWORD PTR [rdx+0x53],esi
  40b8b7:	jns    0x40b92c
  40b8b9:	je     0x40b920
  40b8bb:	ins    DWORD PTR es:[rdi],dx
  40b8bc:	cs push rdi
  40b8be:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40b8c5:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40b8c7:	jb     0x40b936
  40b8c9:	jae    0x40b8f9
  40b8cb:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40b8cd:	jb     0x40b93c
  40b8cf:	sub    al,0x20
  40b8d1:	push   rbx
  40b8d2:	jns    0x40b947
  40b8d4:	je     0x40b93b
  40b8d6:	ins    DWORD PTR es:[rdi],dx
  40b8d7:	cs push rdi
  40b8d9:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40b8e0:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40b8e2:	jb     0x40b951
  40b8e4:	jae    0x40b912
  40b8e6:	and    BYTE PTR [rsi+0x65],dl
  40b8e9:	jb     0x40b95e
  40b8eb:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40b8f2:	xor    BYTE PTR cs:[rsi],ch
  40b8f5:	xor    BYTE PTR [rax+riz*1],ch
  40b8f8:	rex.XB jne 0x40b967
  40b8fb:	je     0x40b972
  40b8fd:	jb     0x40b964
  40b8ff:	cmp    eax,0x7475656e
  40b904:	jb     0x40b967
  40b906:	ins    BYTE PTR es:[rdi],dx
  40b907:	sub    al,0x20
  40b909:	push   rax
  40b90a:	jne    0x40b96e
  40b90c:	ins    BYTE PTR es:[rdi],dx
  40b90d:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40b914:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40b918:	(bad)  
  40b919:	(bad)  
  40b91a:	(bad)  
  40b91b:	(bad)  
  40b91c:	xor    eax,0x31363563
  40b921:	cmp    DWORD PTR [rbx],esi
  40b923:	xor    al,0x65
  40b925:	xor    BYTE PTR [rax],bh
  40b927:	cmp    DWORD PTR [rcx],eax
  40b929:	adc    ch,BYTE PTR [rcx+riz*2+0x6e]
  40b92d:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x65676150
  40b935:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40b937:	outs   dx,BYTE PTR ds:[rsi]
  40b938:	je     0x40b9ac
  40b93a:	outs   dx,DWORD PTR ds:[rsi]
  40b93b:	ins    BYTE PTR es:[rdi],dx
  40b93c:	add    DWORD PTR [rip+0x69687424],eax        # 0x69a92d66
  40b942:	jae    0x40b945
  40b944:	test   BYTE PTR [rcx],al
  40b946:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
  40b94e:	je     0x40b97e
  40b950:	push   rbx
  40b951:	jno    0x40b9bf
  40b953:	push   rbx
  40b954:	gs jb  0x40b9cd
  40b957:	gs jb  0x40b988
  40b95a:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40b95c:	outs   dx,BYTE PTR ds:[rsi]
  40b95d:	imul   sp,WORD PTR [rdi+0x75],0x6172
  40b963:	je     0x40b9ce
  40b965:	outs   dx,DWORD PTR ds:[rsi]
  40b966:	outs   dx,BYTE PTR ds:[rsi]
  40b967:	cs rex.WR (bad) 
  40b96a:	outs   dx,BYTE PTR ds:[rsi]
  40b96b:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x65676150
  40b973:	cs rex.WR (bad) 
  40b976:	outs   dx,BYTE PTR ds:[rsi]
  40b977:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x65676150
  40b97f:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40b981:	outs   dx,BYTE PTR ds:[rsi]
  40b982:	je     0x40b9f6
  40b984:	outs   dx,DWORD PTR ds:[rsi]
  40b985:	ins    BYTE PTR es:[rdi],dx
  40b986:	sub    al,0x20
  40b988:	rex.WR (bad) 
  40b98a:	outs   dx,BYTE PTR ds:[rsi]
  40b98b:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x65676150
  40b993:	sub    al,0x20
  40b995:	push   rsi
  40b996:	gs jb  0x40ba0c
  40b999:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e393d
  40b9a0:	xor    BYTE PTR cs:[rsi],ch
  40b9a3:	xor    BYTE PTR [rax+riz*1],ch
  40b9a6:	rex.XB jne 0x40ba15
  40b9a9:	je     0x40ba20
  40b9ab:	jb     0x40ba12
  40b9ad:	cmp    eax,0x7475656e
  40b9b2:	jb     0x40ba15
  40b9b4:	ins    BYTE PTR es:[rdi],dx
  40b9b5:	sub    al,0x20
  40b9b7:	push   rax
  40b9b8:	jne    0x40ba1c
  40b9ba:	ins    BYTE PTR es:[rdi],dx
  40b9bb:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40b9c2:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40b9c6:	outs   dx,BYTE PTR ds:[rsi]
  40b9c7:	jne    0x40ba35
  40b9c9:	ins    BYTE PTR es:[rdi],dx
  40b9ca:	add    DWORD PTR [rcx],eax
  40b9cc:	xor    BYTE PTR [rbx+0x0],al
  40b9cf:	add    DWORD PTR [rax],eax
  40b9d1:	add    BYTE PTR [rax],al
  40b9d3:	(bad)  
  40b9d4:	(bad)  
  40b9d5:	(bad)  
  40b9d6:	inc    DWORD PTR [rcx]
  40b9d8:	add    BYTE PTR [rax],al
  40b9da:	add    BYTE PTR [rax],al
  40b9dc:	add    BYTE PTR [rax],al
  40b9de:	add    BYTE PTR [rdx+rax*1],cl
  40b9e1:	add    BYTE PTR [rax],al
  40b9e3:	add    BYTE PTR [rdi+0x53],dl
  40b9e6:	jns    0x40ba5b
  40b9e8:	je     0x40ba4f
  40b9ea:	ins    DWORD PTR es:[rdi],dx
  40b9eb:	cs push rdi
  40b9ed:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40b9f4:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40b9f6:	jb     0x40ba65
  40b9f8:	jae    0x40ba26
  40b9fa:	and    BYTE PTR [rsi+0x65],dl
  40b9fd:	jb     0x40ba72
  40b9ff:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40ba06:	xor    BYTE PTR cs:[rsi],ch
  40ba09:	xor    BYTE PTR [rax+riz*1],ch
  40ba0c:	rex.XB jne 0x40ba7b
  40ba0f:	je     0x40ba86
  40ba11:	jb     0x40ba78
  40ba13:	cmp    eax,0x7475656e
  40ba18:	jb     0x40ba7b
  40ba1a:	ins    BYTE PTR es:[rdi],dx
  40ba1b:	sub    al,0x20
  40ba1d:	push   rax
  40ba1e:	jne    0x40ba82
  40ba20:	ins    BYTE PTR es:[rdi],dx
  40ba21:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40ba28:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40ba2c:	(bad)  
  40ba2d:	(bad)  
  40ba2e:	(bad)  
  40ba2f:	(bad)  
  40ba30:	xor    eax,0x31363563
  40ba35:	cmp    DWORD PTR [rbx],esi
  40ba37:	xor    al,0x65
  40ba39:	xor    BYTE PTR [rax],bh
  40ba3b:	cmp    DWORD PTR [rip+0x1],eax        # 0x40ba42
  40ba41:	(bad)  
  40ba42:	push   rbx
  40ba43:	jns    0x40bab8
  40ba45:	je     0x40baac
  40ba47:	ins    DWORD PTR es:[rdi],dx
  40ba48:	cs push rdi
  40ba4a:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40ba51:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40ba53:	jb     0x40bac2
  40ba55:	jae    0x40ba85
  40ba57:	rex.R outs dx,DWORD PTR ds:[rsi]
  40ba59:	movsxd ebp,DWORD PTR [rbx+0x53]
  40ba5c:	je     0x40bad7
  40ba5e:	ins    BYTE PTR es:[rdi],dx
  40ba5f:	add    DWORD PTR gs:[rax],eax
  40ba62:	add    BYTE PTR [rax],al
  40ba64:	(bad)  
  40ba65:	jbe    0x40bac8
  40ba67:	ins    BYTE PTR es:[rdi],dx
  40ba68:	jne    0x40bacf
  40ba6a:	pop    rdi
  40ba6b:	pop    rdi
  40ba6c:	add    BYTE PTR [rax],cl
  40ba6e:	add    al,BYTE PTR [rax]
  40ba70:	add    BYTE PTR [rax],al
  40ba72:	add    eax,0xb000000
  40ba77:	add    BYTE PTR [rcx],r8b
  40ba7a:	add    BYTE PTR [rax],al
  40ba7c:	add    bh,bh
  40ba7e:	(bad)  
  40ba7f:	(bad)  
  40ba80:	inc    DWORD PTR [rcx]
  40ba82:	add    BYTE PTR [rax],al
  40ba84:	add    BYTE PTR [rax],al
  40ba86:	add    BYTE PTR [rax],al
  40ba88:	add    BYTE PTR [rdx+rax*1],cl
  40ba8b:	add    BYTE PTR [rax],al
  40ba8d:	add    BYTE PTR [rcx+0x53],dl
  40ba90:	jns    0x40bb05
  40ba92:	je     0x40baf9
  40ba94:	ins    DWORD PTR es:[rdi],dx
  40ba95:	cs rex.R jb 0x40bafa
  40ba99:	ja     0x40bb04
  40ba9b:	outs   dx,BYTE PTR ds:[rsi]
  40ba9c:	addr32 sub al,0x20
  40ba9f:	push   rsi
  40baa0:	gs jb  0x40bb16
  40baa3:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40baaa:	xor    BYTE PTR cs:[rsi],ch
  40baad:	xor    BYTE PTR [rax+riz*1],ch
  40bab0:	rex.XB jne 0x40bb1f
  40bab3:	je     0x40bb2a
  40bab5:	jb     0x40bb1c
  40bab7:	cmp    eax,0x7475656e
  40babc:	jb     0x40bb1f
  40babe:	ins    BYTE PTR es:[rdi],dx
  40babf:	sub    al,0x20
  40bac1:	push   rax
  40bac2:	jne    0x40bb26
  40bac4:	ins    BYTE PTR es:[rdi],dx
  40bac5:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40bacc:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40bad0:	(bad)  
  40bad1:	xor    BYTE PTR [rbx],dh
  40bad3:	xor    ax,0x3766
  40bad7:	xor    WORD PTR [rcx],si
  40bada:	fs xor eax,0x61336130
  40bae0:	add    eax,0x1
  40bae5:	adc    al,0x53
  40bae7:	jns    0x40bb5c
  40bae9:	je     0x40bb50
  40baeb:	ins    DWORD PTR es:[rdi],dx
  40baec:	cs rex.R jb 0x40bb51
  40baf0:	ja     0x40bb5b
  40baf2:	outs   dx,BYTE PTR ds:[rsi]
  40baf3:	addr32 cs push rax
  40baf6:	outs   dx,DWORD PTR ds:[rsi]
  40baf7:	imul   ebp,DWORD PTR [rsi+0x74],0x2
  40bafe:	add    DWORD PTR [rax+0x1],edi
  40bb01:	jns    0x40bb03
  40bb03:	add    BYTE PTR [rax],cl
  40bb05:	or     BYTE PTR [rdx],al
	...
  40bb0f:	add    BYTE PTR [rax],al
  40bb11:	add    BYTE PTR [rbx],cl
  40bb13:	add    BYTE PTR [r9],al
  40bb16:	add    BYTE PTR [rax],al
  40bb18:	add    bh,bh
  40bb1a:	(bad)  
  40bb1b:	(bad)  
  40bb1c:	inc    DWORD PTR [rcx]
  40bb1e:	add    BYTE PTR [rax],al
  40bb20:	add    BYTE PTR [rax],al
  40bb22:	add    BYTE PTR [rax],al
  40bb24:	add    BYTE PTR [rdx+rax*1],cl
  40bb27:	add    BYTE PTR [rax],al
  40bb29:	add    BYTE PTR [rcx+0x53],dl
  40bb2c:	jns    0x40bba1
  40bb2e:	je     0x40bb95
  40bb30:	ins    DWORD PTR es:[rdi],dx
  40bb31:	cs rex.R jb 0x40bb96
  40bb35:	ja     0x40bba0
  40bb37:	outs   dx,BYTE PTR ds:[rsi]
  40bb38:	addr32 sub al,0x20
  40bb3b:	push   rsi
  40bb3c:	gs jb  0x40bbb2
  40bb3f:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40bb46:	xor    BYTE PTR cs:[rsi],ch
  40bb49:	xor    BYTE PTR [rax+riz*1],ch
  40bb4c:	rex.XB jne 0x40bbbb
  40bb4f:	je     0x40bbc6
  40bb51:	jb     0x40bbb8
  40bb53:	cmp    eax,0x7475656e
  40bb58:	jb     0x40bbbb
  40bb5a:	ins    BYTE PTR es:[rdi],dx
  40bb5b:	sub    al,0x20
  40bb5d:	push   rax
  40bb5e:	jne    0x40bbc2
  40bb60:	ins    BYTE PTR es:[rdi],dx
  40bb61:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40bb68:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40bb6c:	(bad)  
  40bb6d:	xor    BYTE PTR [rbx],dh
  40bb6f:	xor    ax,0x3766
  40bb73:	xor    WORD PTR [rcx],si
  40bb76:	fs xor eax,0x61336130
  40bb7c:	add    eax,0x1
  40bb81:	adc    edx,DWORD PTR [rbx+0x79]
  40bb84:	jae    0x40bbfa
  40bb86:	gs ins DWORD PTR es:[rdi],dx
  40bb88:	cs rex.R jb 0x40bbed
  40bb8c:	ja     0x40bbf7
  40bb8e:	outs   dx,BYTE PTR ds:[rsi]
  40bb8f:	addr32 cs push rbx
  40bb92:	imul   edi,DWORD PTR [rdx+0x65],0x2
  40bb99:	add    eax,0x74646977
  40bb9e:	push   0x69656806
  40bba3:	addr32 push 0x8000074
  40bba9:	or     BYTE PTR [rdx],al
  40bbab:	add    BYTE PTR [rax],al
  40bbad:	add    BYTE PTR [rip+0xffffffff9d000002],dl        # 0xffffffff9d40bbb5
  40bbb3:	add    DWORD PTR [rax],eax
  40bbb5:	add    BYTE PTR [rbx],cl
  40bbb7:	or     BYTE PTR [rax],al
  40bbb9:	add    BYTE PTR [rax],al
  40bbbb:	add    BYTE PTR [rax],al
  40bbbd:	add    BYTE PTR [rax],al
  40bbbf:	add    BYTE PTR [rax-0x31ffffc1],ah
  40bbc5:	retf   0xbeef
  40bbc8:	add    DWORD PTR [rax],eax
  40bbca:	add    BYTE PTR [rax],al
  40bbcc:	xchg   ecx,eax
  40bbcd:	add    BYTE PTR [rax],al
  40bbcf:	add    BYTE PTR [rbx+rdx*2+0x79],ch
  40bbd3:	jae    0x40bc49
  40bbd5:	gs ins DWORD PTR es:[rdi],dx
  40bbd7:	cs push rdx
  40bbd9:	gs jae 0x40bc4b
  40bbdc:	jne    0x40bc50
  40bbde:	movsxd esp,DWORD PTR [rbp+0x73]
  40bbe1:	cs push rdx
  40bbe3:	gs jae 0x40bc55
  40bbe6:	jne    0x40bc5a
  40bbe8:	movsxd esp,DWORD PTR [rbp+0x52]
  40bbeb:	gs (bad) 
  40bbed:	fs gs jb 0x40bc1d
  40bbf1:	and    BYTE PTR [rbp+0x73],ch
  40bbf4:	movsxd ebp,DWORD PTR [rdi+0x72]
  40bbf7:	ins    BYTE PTR es:[rdi],dx
  40bbf8:	imul   esp,DWORD PTR [rdx+0x2c],0x72655620
  40bbff:	jae    0x40bc6a
  40bc01:	outs   dx,DWORD PTR ds:[rsi]
  40bc02:	outs   dx,BYTE PTR ds:[rsi]
  40bc03:	cmp    eax,0x2e302e32
  40bc08:	xor    BYTE PTR [rsi],ch
  40bc0a:	xor    BYTE PTR [rax+riz*1],ch
  40bc0d:	rex.XB jne 0x40bc7c
  40bc10:	je     0x40bc87
  40bc12:	jb     0x40bc79
  40bc14:	cmp    eax,0x7475656e
  40bc19:	jb     0x40bc7c
  40bc1b:	ins    BYTE PTR es:[rdi],dx
  40bc1c:	sub    al,0x20
  40bc1e:	push   rax
  40bc1f:	jne    0x40bc83
  40bc21:	ins    BYTE PTR es:[rdi],dx
  40bc22:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40bc29:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40bc2d:	(bad)  
  40bc2e:	(bad)  
  40bc2f:	(bad)  
  40bc30:	(bad)  
  40bc31:	xor    eax,0x31363563
  40bc36:	cmp    DWORD PTR [rbx],esi
  40bc38:	xor    al,0x65
  40bc3a:	xor    BYTE PTR [rax],bh
  40bc3c:	cmp    DWORD PTR [rbx],esp
  40bc3e:	push   rbx
  40bc3f:	jns    0x40bcb4
  40bc41:	je     0x40bca8
  40bc43:	ins    DWORD PTR es:[rdi],dx
  40bc44:	cs push rdx
  40bc46:	gs jae 0x40bcb8
  40bc49:	jne    0x40bcbd
  40bc4b:	movsxd esp,DWORD PTR [rbp+0x73]
  40bc4e:	cs push rdx
  40bc50:	jne    0x40bcc0
  40bc52:	je     0x40bcbd
  40bc54:	ins    DWORD PTR es:[rdi],dx
  40bc55:	gs push rdx
  40bc57:	gs jae 0x40bcc9
  40bc5a:	jne    0x40bcce
  40bc5c:	movsxd esp,DWORD PTR [rbp+0x53]
  40bc5f:	gs je  0x40bc64
  40bc62:	add    BYTE PTR [rax],al
  40bc64:	add    BYTE PTR [rax+rax*1+0x0],ch
  40bc68:	add    BYTE PTR [rax],cl
  40bc6a:	add    BYTE PTR [rax],al
  40bc6c:	add    BYTE PTR [rdi+0x53],ah
  40bc6f:	jns    0x40bce4
  40bc71:	je     0x40bcd8
  40bc73:	ins    DWORD PTR es:[rdi],dx
  40bc74:	cs rex.R jb 0x40bcd9
  40bc78:	ja     0x40bce3
  40bc7a:	outs   dx,BYTE PTR ds:[rsi]
  40bc7b:	addr32 cs push rbx
  40bc7e:	imul   edi,DWORD PTR [rdx+0x65],0x53202c46
  40bc85:	jns    0x40bcfa
  40bc87:	je     0x40bcee
  40bc89:	ins    DWORD PTR es:[rdi],dx
  40bc8a:	cs rex.R jb 0x40bcef
  40bc8e:	ja     0x40bcf9
  40bc90:	outs   dx,BYTE PTR ds:[rsi]
  40bc91:	addr32 sub al,0x20
  40bc94:	push   rsi
  40bc95:	gs jb  0x40bd0b
  40bc98:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40bc9f:	xor    BYTE PTR cs:[rsi],ch
  40bca2:	xor    BYTE PTR [rax+riz*1],ch
  40bca5:	rex.XB jne 0x40bd14
  40bca8:	je     0x40bd1f
  40bcaa:	jb     0x40bd11
  40bcac:	cmp    eax,0x7475656e
  40bcb1:	jb     0x40bd14
  40bcb3:	ins    BYTE PTR es:[rdi],dx
  40bcb4:	sub    al,0x20
  40bcb6:	push   rax
  40bcb7:	jne    0x40bd1b
  40bcb9:	ins    BYTE PTR es:[rdi],dx
  40bcba:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40bcc1:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40bcc5:	(bad)  
  40bcc6:	xor    BYTE PTR [rbx],dh
  40bcc8:	xor    ax,0x3766
  40bccc:	xor    WORD PTR [rcx],si
  40bccf:	fs xor eax,0x61336130
  40bcd5:	push   bx
  40bcd7:	jns    0x40bd4c
  40bcd9:	je     0x40bd40
  40bcdb:	ins    DWORD PTR es:[rdi],dx
  40bcdc:	cs rex.R jb 0x40bd41
  40bce0:	ja     0x40bd4b
  40bce2:	outs   dx,BYTE PTR ds:[rsi]
  40bce3:	addr32 cs push rbx
  40bce6:	imul   edi,DWORD PTR [rdx+0x65],0x7953202c
  40bced:	jae    0x40bd63
  40bcef:	gs ins DWORD PTR es:[rdi],dx
  40bcf1:	cs rex.R jb 0x40bd56
  40bcf5:	ja     0x40bd60
  40bcf7:	outs   dx,BYTE PTR ds:[rsi]
  40bcf8:	addr32 sub al,0x20
  40bcfb:	push   rsi
  40bcfc:	gs jb  0x40bd72
  40bcff:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40bd06:	xor    BYTE PTR cs:[rsi],ch
  40bd09:	xor    BYTE PTR [rax+riz*1],ch
  40bd0c:	rex.XB jne 0x40bd7b
  40bd0f:	je     0x40bd86
  40bd11:	jb     0x40bd78
  40bd13:	cmp    eax,0x7475656e
  40bd18:	jb     0x40bd7b
  40bd1a:	ins    BYTE PTR es:[rdi],dx
  40bd1b:	sub    al,0x20
  40bd1d:	push   rax
  40bd1e:	jne    0x40bd82
  40bd20:	ins    BYTE PTR es:[rdi],dx
  40bd21:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40bd28:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40bd2c:	(bad)  
  40bd2d:	xor    BYTE PTR [rbx],dh
  40bd2f:	xor    ax,0x3766
  40bd33:	xor    WORD PTR [rcx],si
  40bd36:	fs xor eax,0x61336130
  40bd3c:	jne    0x40bd91
  40bd3e:	jns    0x40bdb3
  40bd40:	je     0x40bda7
  40bd42:	ins    DWORD PTR es:[rdi],dx
  40bd43:	cs push rdi
  40bd45:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40bd4c:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40bd4e:	jb     0x40bdbd
  40bd50:	jae    0x40bd80
  40bd52:	rex.WB ins DWORD PTR es:[rdi],dx
  40bd54:	rex.WRB outs dx,DWORD PTR gs:[rsi]
  40bd57:	fs gs sub al,0x20
  40bd5b:	push   rbx
  40bd5c:	jns    0x40bdd1
  40bd5e:	je     0x40bdc5
  40bd60:	ins    DWORD PTR es:[rdi],dx
  40bd61:	cs push rdi
  40bd63:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40bd6a:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40bd6c:	jb     0x40bddb
  40bd6e:	jae    0x40bd9c
  40bd70:	and    BYTE PTR [rsi+0x65],dl
  40bd73:	jb     0x40bde8
  40bd75:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40bd7c:	xor    BYTE PTR cs:[rsi],ch
  40bd7f:	xor    BYTE PTR [rax+riz*1],ch
  40bd82:	rex.XB jne 0x40bdf1
  40bd85:	je     0x40bdfc
  40bd87:	jb     0x40bdee
  40bd89:	cmp    eax,0x7475656e
  40bd8e:	jb     0x40bdf1
  40bd90:	ins    BYTE PTR es:[rdi],dx
  40bd91:	sub    al,0x20
  40bd93:	push   rax
  40bd94:	jne    0x40bdf8
  40bd96:	ins    BYTE PTR es:[rdi],dx
  40bd97:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40bd9e:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40bda2:	(bad)  
  40bda3:	(bad)  
  40bda4:	(bad)  
  40bda5:	(bad)  
  40bda6:	xor    eax,0x31363563
  40bdab:	cmp    DWORD PTR [rbx],esi
  40bdad:	xor    al,0x65
  40bdaf:	xor    BYTE PTR [rax],bh
  40bdb1:	cmp    DWORD PTR [rdi+0x53],esp
  40bdb4:	jns    0x40be29
  40bdb6:	je     0x40be1d
  40bdb8:	ins    DWORD PTR es:[rdi],dx
  40bdb9:	cs rex.R jb 0x40be1e
  40bdbd:	ja     0x40be28
  40bdbf:	outs   dx,BYTE PTR ds:[rsi]
  40bdc0:	addr32 cs push rax
  40bdc3:	outs   dx,DWORD PTR ds:[rsi]
  40bdc4:	imul   ebp,DWORD PTR [rsi+0x74],0x7953202c
  40bdcb:	jae    0x40be41
  40bdcd:	gs ins DWORD PTR es:[rdi],dx
  40bdcf:	cs rex.R jb 0x40be34
  40bdd3:	ja     0x40be3e
  40bdd5:	outs   dx,BYTE PTR ds:[rsi]
  40bdd6:	addr32 sub al,0x20
  40bdd9:	push   rsi
  40bdda:	gs jb  0x40be50
  40bddd:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40bde4:	xor    BYTE PTR cs:[rsi],ch
  40bde7:	xor    BYTE PTR [rax+riz*1],ch
  40bdea:	rex.XB jne 0x40be59
  40bded:	je     0x40be64
  40bdef:	jb     0x40be56
  40bdf1:	cmp    eax,0x7475656e
  40bdf6:	jb     0x40be59
  40bdf8:	ins    BYTE PTR es:[rdi],dx
  40bdf9:	sub    al,0x20
  40bdfb:	push   rax
  40bdfc:	jne    0x40be60
  40bdfe:	ins    BYTE PTR es:[rdi],dx
  40bdff:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40be06:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40be0a:	(bad)  
  40be0b:	xor    BYTE PTR [rbx],dh
  40be0d:	xor    ax,0x3766
  40be11:	xor    WORD PTR [rcx],si
  40be14:	fs xor eax,0x61336130
  40be1a:	jne    0x40be6f
  40be1c:	jns    0x40be91
  40be1e:	je     0x40be85
  40be20:	ins    DWORD PTR es:[rdi],dx
  40be21:	cs push rdi
  40be23:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40be2a:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40be2c:	jb     0x40be9b
  40be2e:	jae    0x40be5e
  40be30:	push   rax
  40be31:	(bad)  
  40be32:	fs imul ebp,DWORD PTR fs:[rsi+0x67],0x7953202c
  40be3b:	jae    0x40beb1
  40be3d:	gs ins DWORD PTR es:[rdi],dx
  40be3f:	cs push rdi
  40be41:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40be48:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40be4a:	jb     0x40beb9
  40be4c:	jae    0x40be7a
  40be4e:	and    BYTE PTR [rsi+0x65],dl
  40be51:	jb     0x40bec6
  40be53:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40be5a:	xor    BYTE PTR cs:[rsi],ch
  40be5d:	xor    BYTE PTR [rax+riz*1],ch
  40be60:	rex.XB jne 0x40becf
  40be63:	je     0x40beda
  40be65:	jb     0x40becc
  40be67:	cmp    eax,0x7475656e
  40be6c:	jb     0x40becf
  40be6e:	ins    BYTE PTR es:[rdi],dx
  40be6f:	sub    al,0x20
  40be71:	push   rax
  40be72:	jne    0x40bed6
  40be74:	ins    BYTE PTR es:[rdi],dx
  40be75:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40be7c:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40be80:	(bad)  
  40be81:	(bad)  
  40be82:	(bad)  
  40be83:	(bad)  
  40be84:	xor    eax,0x31363563
  40be89:	cmp    DWORD PTR [rbx],esi
  40be8b:	xor    al,0x65
  40be8d:	xor    BYTE PTR [rax],bh
  40be8f:	cmp    DWORD PTR [rdx+0x53],edi
  40be92:	jns    0x40bf07
  40be94:	je     0x40befb
  40be96:	ins    DWORD PTR es:[rdi],dx
  40be97:	cs push rdi
  40be99:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40bea0:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40bea2:	jb     0x40bf11
  40bea4:	jae    0x40bed4
  40bea6:	rex.B jne 0x40bf1d
  40bea9:	outs   dx,DWORD PTR ds:[rsi]
  40beaa:	push   rbx
  40beab:	imul   edi,DWORD PTR [rdx+0x65],0x65646f4d
  40beb2:	sub    al,0x20
  40beb4:	push   rbx
  40beb5:	jns    0x40bf2a
  40beb7:	je     0x40bf1e
  40beb9:	ins    DWORD PTR es:[rdi],dx
  40beba:	cs push rdi
  40bebc:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40bec3:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40bec5:	jb     0x40bf34
  40bec7:	jae    0x40bef5
  40bec9:	and    BYTE PTR [rsi+0x65],dl
  40becc:	jb     0x40bf41
  40bece:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40bed5:	xor    BYTE PTR cs:[rsi],ch
  40bed8:	xor    BYTE PTR [rax+riz*1],ch
  40bedb:	rex.XB jne 0x40bf4a
  40bede:	je     0x40bf55
  40bee0:	jb     0x40bf47
  40bee2:	cmp    eax,0x7475656e
  40bee7:	jb     0x40bf4a
  40bee9:	ins    BYTE PTR es:[rdi],dx
  40beea:	sub    al,0x20
  40beec:	push   rax
  40beed:	jne    0x40bf51
  40beef:	ins    BYTE PTR es:[rdi],dx
  40bef0:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40bef7:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40befb:	(bad)  
  40befc:	(bad)  
  40befd:	(bad)  
  40befe:	(bad)  
  40beff:	xor    eax,0x31363563
  40bf04:	cmp    DWORD PTR [rbx],esi
  40bf06:	xor    al,0x65
  40bf08:	xor    BYTE PTR [rax],bh
  40bf0a:	cmp    DWORD PTR [rdi+0x53],esi
  40bf0d:	jns    0x40bf82
  40bf0f:	je     0x40bf76
  40bf11:	ins    DWORD PTR es:[rdi],dx
  40bf12:	cs push rdi
  40bf14:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40bf1b:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40bf1d:	jb     0x40bf8c
  40bf1f:	jae    0x40bf4f
  40bf21:	rex.R outs dx,DWORD PTR ds:[rsi]
  40bf23:	movsxd ebp,DWORD PTR [rbx+0x53]
  40bf26:	je     0x40bfa1
  40bf28:	ins    BYTE PTR es:[rdi],dx
  40bf29:	gs sub al,0x20
  40bf2c:	push   rbx
  40bf2d:	jns    0x40bfa2
  40bf2f:	je     0x40bf96
  40bf31:	ins    DWORD PTR es:[rdi],dx
  40bf32:	cs push rdi
  40bf34:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40bf3b:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40bf3d:	jb     0x40bfac
  40bf3f:	jae    0x40bf6d
  40bf41:	and    BYTE PTR [rsi+0x65],dl
  40bf44:	jb     0x40bfb9
  40bf46:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40bf4d:	xor    BYTE PTR cs:[rsi],ch
  40bf50:	xor    BYTE PTR [rax+riz*1],ch
  40bf53:	rex.XB jne 0x40bfc2
  40bf56:	je     0x40bfcd
  40bf58:	jb     0x40bfbf
  40bf5a:	cmp    eax,0x7475656e
  40bf5f:	jb     0x40bfc2
  40bf61:	ins    BYTE PTR es:[rdi],dx
  40bf62:	sub    al,0x20
  40bf64:	push   rax
  40bf65:	jne    0x40bfc9
  40bf67:	ins    BYTE PTR es:[rdi],dx
  40bf68:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40bf6f:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40bf73:	(bad)  
  40bf74:	(bad)  
  40bf75:	(bad)  
  40bf76:	(bad)  
  40bf77:	xor    eax,0x31363563
  40bf7c:	cmp    DWORD PTR [rbx],esi
  40bf7e:	xor    al,0x65
  40bf80:	xor    BYTE PTR [rax],bh
  40bf82:	cmp    DWORD PTR [rcx+0x73795301],eax
  40bf88:	je     0x40bfef
  40bf8a:	ins    DWORD PTR es:[rdi],dx
  40bf8b:	cs push rdi
  40bf8d:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40bf94:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40bf96:	jb     0x40c005
  40bf98:	jae    0x40bfc8
  40bf9a:	push   rsp
  40bf9b:	(bad)  
  40bf9c:	(bad)  
  40bf9d:	ins    BYTE PTR es:[rdi],dx
  40bf9e:	gs rex.WR (bad) 
  40bfa1:	jns    0x40c012
  40bfa3:	jne    0x40c019
  40bfa5:	push   rbx
  40bfa6:	gs je  0x40c01d
  40bfa9:	imul   ebp,DWORD PTR [rsi+0x67],0x53202c73
  40bfb0:	jns    0x40c025
  40bfb2:	je     0x40c019
  40bfb4:	ins    DWORD PTR es:[rdi],dx
  40bfb5:	cs push rdi
  40bfb7:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40bfbe:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40bfc0:	jb     0x40c02f
  40bfc2:	jae    0x40bff0
  40bfc4:	and    BYTE PTR [rsi+0x65],dl
  40bfc7:	jb     0x40c03c
  40bfc9:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40bfd0:	xor    BYTE PTR cs:[rsi],ch
  40bfd3:	xor    BYTE PTR [rax+riz*1],ch
  40bfd6:	rex.XB jne 0x40c045
  40bfd9:	je     0x40c050
  40bfdb:	jb     0x40c042
  40bfdd:	cmp    eax,0x7475656e
  40bfe2:	jb     0x40c045
  40bfe4:	ins    BYTE PTR es:[rdi],dx
  40bfe5:	sub    al,0x20
  40bfe7:	push   rax
  40bfe8:	jne    0x40c04c
  40bfea:	ins    BYTE PTR es:[rdi],dx
  40bfeb:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40bff2:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40bff6:	(bad)  
  40bff7:	(bad)  
  40bff8:	(bad)  
  40bff9:	(bad)  
  40bffa:	xor    eax,0x31363563
  40bfff:	cmp    DWORD PTR [rbx],esi
  40c001:	xor    al,0x65
  40c003:	xor    BYTE PTR [rax],bh
  40c005:	cmp    DWORD PTR [rax+0x41],edx
  40c008:	rex.R push rax
  40c00a:	rex.B
  40c00b:	rex.R xchg ecx,eax
  40c00d:	jmp    0x40c06e
  40c00f:	test   BYTE PTR [rip+0x249652fe],ah        # 0x24d71313
  40c015:	pushf  
  40c016:	test   DWORD PTR [rdi-0x67555df7],edx
  40c01c:	rex.WB sar BYTE PTR [r8+rbx*4-0x65589094],cl
  40c024:	rex.WXB fisubr DWORD PTR [r15-0x65]
  40c028:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  40c029:	sbb    edx,DWORD PTR [rbx*4-0x61f9f1b7]
  40c030:	ret    
  40c031:	fwait
  40c032:	mov    ah,BYTE PTR [rcx-0x5e4afca2]
  40c038:	rex.WRXB movabs r13,0xcc0aa22448f0a21a
  40c042:	fsub   DWORD PTR [rbp+rcx*1+0x32a5286c]
  40c049:	push   0x38
  40c04b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  40c04c:	or     cl,BYTE PTR [rbx+0x70b2a7b2]
  40c052:	mov    dh,0xa7
  40c054:	sahf   
  40c055:	mul    BYTE PTR cs:[rdi-0x57fc4968]
  40c05c:	test   al,0x4e
  40c05e:	retf   
  40c05f:	stos   DWORD PTR es:[rdi],eax
  40c060:	jg     0x40c053
  40c062:	ja     0x40c010
  40c064:	fild   QWORD PTR [rbx+0xa]
  40c067:	scas   eax,DWORD PTR es:[rdi]
  40c068:	popf   
  40c069:	mov    ch,0x89
  40c06b:	mov    dl,0xe5
  40c06d:	push   rcx
  40c06e:	mov    dh,BYTE PTR [rdx-0x4c760197]
  40c074:	jo     0x40c0d1
  40c076:	int    0xb6
  40c078:	test   BYTE PTR [rbx-0x1b7e492c],0xe5
  40c07f:	mov    ecx,0xbb9f0c37
  40c084:	(bad)  
  40c085:	inc    BYTE PTR [rsi]
  40c087:	mov    esi,0xbefb61a1
  40c08c:	fsubr  st(4),st
  40c08e:	(bad)  
  40c08f:	(bad)  
  40c090:	xor    eax,0xadc9ab8c
  40c095:	out    dx,eax
  40c096:	(bad)  
  40c097:	(bad)  
  40c098:	rex.WRX (bad) 
  40c09a:	sti    
  40c09b:	ror    DWORD PTR [rbx-0x22e02ad],1
  40c0a1:	adc    BYTE PTR [rbx-0x2806302e],cl
  40c0a7:	shl    BYTE PTR [rax-0x7b],cl
  40c0aa:	loope  0x40c07e
  40c0ac:	pop    rax
  40c0ad:	sbb    cl,BYTE PTR [rsi]
  40c0af:	xlat   BYTE PTR ds:[rbx]
  40c0b0:	clc    
  40c0b1:	test   eax,0xc594d9ca
  40c0b6:	(bad)  
  40c0b7:	loop   0x40c0cb
  40c0b9:	(bad)  
  40c0ba:	ins    BYTE PTR es:[rdi],dx
  40c0bb:	loop   0x40c085
  40c0bd:	sub    ebx,DWORD PTR [rbx-0x19]
  40c0c0:	xor    DWORD PTR [rdx-0x4b1a1848],0x36cbec4e
  40c0ca:	outs   dx,BYTE PTR ds:[rsi]
  40c0cb:	lock rex.XB clc 
  40c0ce:	mov    dh,dh
  40c0d0:	mov    DWORD PTR [rdx+0x1f],eax
  40c0d3:	sti    
  40c0d4:	xor    ah,dl
  40c0d6:	in     al,dx
  40c0d7:	std    
  40c0d8:	test   al,0xea
  40c0da:	pop    rdx
  40c0db:	call   QWORD PTR [rax-0x61]
  40c0de:	pop    rsp
  40c0df:	jmp    QWORD PTR [rbx+0x5c00be07]
  40c0e5:	push   rbx
  40c0e6:	ret    
  40c0e7:	add    BYTE PTR [rsi+0x6f],ah
  40c0ea:	cmp    al,BYTE PTR [rdx]
  40c0ec:	(bad)  
  40c0ed:	mov    es,WORD PTR [rbp+0x1bba6f02]
  40c0f3:	(bad)  
  40c0f4:	xor    bl,ah
  40c0f6:	pop    rax
  40c0f7:	or     BYTE PTR [rsi],bl
  40c0f9:	in     al,dx
  40c0fa:	ror    DWORD PTR [rax],1
  40c0fc:	data16 (bad) 
  40c0fe:	(bad)  
  40c0ff:	or     dh,al
  40c101:	and    DWORD PTR [rdi],ebp
  40c103:	or     al,0xb9
  40c105:	sub    al,0x30
  40c107:	or     al,0xef
  40c109:	mov    ebx,0xb6760f64
  40c10e:	lock adc BYTE PTR [rdx],cl
  40c111:	(bad)  
  40c112:	jl     0x40c125
  40c114:	mov    dl,0xac
  40c116:	adc    BYTE PTR [rcx],0x27
  40c119:	(bad)  
  40c11a:	rex.X adc eax,0x1e3d3f5e
  40c120:	fdivr  QWORD PTR [rbp+rdx*2-0x742958e2]
  40c127:	(bad)  
  40c128:	in     al,dx
  40c129:	jbe    0x40c160
  40c12b:	(bad)  
  40c12c:	(bad)  
  40c12d:	(bad)  
  40c12e:	add    BYTE PTR [rdx],ah
  40c130:	jbe    0x40c167
  40c132:	add    eax,0xd475ee22
  40c137:	and    esi,DWORD PTR [rdx-0x59]
  40c13a:	(bad)  
  40c13b:	(bad)  
  40c13c:	or     dl,BYTE PTR [rax-0x2266d7b0]
  40c142:	pop    rdi
  40c143:	sub    BYTE PTR [rbp-0x25d2f118],ah
  40c149:	data16 (bad) 
  40c14b:	sub    eax,0x2d653d1c
  40c150:	xchg   esp,eax
  40c151:	mov    edx,0x75aa2e99
  40c156:	rex.WR cmp al,0xae
  40c159:	rex.XB icebp 
  40c15b:	rex.X xchg ecx,eax
  40c15d:	(bad)  
  40c15e:	cli    
  40c15f:	rex.X test eax,0xe646b92c
  40c165:	icebp  
  40c166:	mov    ebx,0xc929d646
  40c16b:	rex.RX int3 
  40c16d:	in     al,0x98
  40c16f:	rex.RXB xor r12d,DWORD PTR [r9+0x21bc47a4]
  40c176:	rex.W push rsp
  40c178:	std    
  40c179:	(bad)  
  40c17a:	add    dl,BYTE PTR [rsi+0x2]
  40c17d:	je     0x40c111
  40c17f:	pop    rcx
  40c180:	xor    ah,BYTE PTR [rax]
  40c182:	call   0x1ab75ee0
  40c187:	movsxd ecx,DWORD PTR [rcx+0x6d66e0fa]
  40c18d:	push   0x2492675b
  40c192:	addr32 and esp,DWORD PTR [esi-0x5d]
  40c197:	push   0x68a8b1dc
  40c19c:	repnz sub DWORD PTR [rcx-0x4351d895],ebp
  40c1a3:	outs   dx,BYTE PTR ds:[rsi]
  40c1a4:	fdivr  st,st(2)
  40c1a6:	shr    DWORD PTR [rsi-0x4b],0xe6
  40c1aa:	jle    0x40c21c
  40c1ac:	jge    0x40c18e
  40c1ae:	xchg   ebp,eax
  40c1af:	jo     0x40c1e6
  40c1b1:	rex.W sbb al,0x78
  40c1b4:	pop    rsi
  40c1b5:	mov    eax,0x186b78f8
  40c1ba:	ins    DWORD PTR es:[rdi],dx
  40c1bb:	jnp    0x40c151
  40c1bd:	(bad)  
  40c1be:	add    BYTE PTR [rax],al
  40c1c0:	xor    DWORD PTR [rax],edx
  40c1c2:	add    BYTE PTR [rax],al
  40c1c4:	xchg   esp,eax
  40c1c5:	or     al,0x0
  40c1c7:	add    BYTE PTR [rdi+0x36000002],bh
  40c1cd:	or     BYTE PTR [rax],al
  40c1cf:	add    BYTE PTR [rdi],dh
  40c1d1:	add    BYTE PTR [rax],al
  40c1d3:	add    bh,bh
  40c1d5:	add    DWORD PTR [rax],eax
  40c1d7:	add    BYTE PTR [rbx],ch
  40c1d9:	sldt   WORD PTR [rax]
  40c1dc:	mov    eax,0x5d00000a
  40c1e1:	add    al,BYTE PTR [rax]
  40c1e3:	add    BYTE PTR [rax+0x30000008],dl
  40c1e9:	add    al,BYTE PTR [rax]
  40c1eb:	add    dl,dl
  40c1ed:	add    DWORD PTR [rax],eax
  40c1ef:	add    BYTE PTR [rdi-0xbfffff6],al
  40c1f5:	add    al,BYTE PTR [rax]
  40c1f7:	add    BYTE PTR [rsi-0x3cfffffe],cl
  40c1fd:	or     BYTE PTR [rax],al
  40c1ff:	add    BYTE PTR [rbp+0x8],ah
  40c202:	add    BYTE PTR [rax],al
  40c204:	pop    rax
  40c205:	adc    BYTE PTR [rax],al
  40c207:	add    bl,ah
  40c209:	sldt   WORD PTR [rax]
  40c20c:	pop    rbp
  40c20d:	or     DWORD PTR [rax],eax
  40c20f:	add    BYTE PTR [rdi],bh
  40c211:	(bad)  
  40c212:	add    BYTE PTR [rax],al
  40c214:	out    dx,al
  40c215:	or     BYTE PTR [rax],al
  40c217:	add    BYTE PTR [rbx+0xe],dh
  40c21a:	add    BYTE PTR [rax],al
  40c21c:	sub    DWORD PTR [rsi],ecx
  40c21e:	add    BYTE PTR [rax],al
  40c220:	ins    DWORD PTR es:[rdi],dx
  40c221:	add    DWORD PTR [rax],eax
  40c223:	add    BYTE PTR [rdx],dh
  40c225:	or     al,0x0
  40c227:	add    BYTE PTR [rax+0xb],ch
  40c22a:	add    BYTE PTR [rax],al
  40c22c:	and    eax,0xe5000003
  40c231:	(bad)  
  40c232:	add    BYTE PTR [rax],al
  40c234:	mov    al,0x11
  40c236:	add    BYTE PTR [rax],al
  40c238:	scas   eax,DWORD PTR es:[rdi]
  40c239:	add    DWORD PTR [rax],eax
  40c23b:	add    BYTE PTR [rcx],dl
  40c23d:	or     DWORD PTR [rax],eax
  40c23f:	add    dl,dl
  40c241:	(bad)  
  40c242:	add    BYTE PTR [rax],al
  40c244:	jns    0x40c249
  40c246:	add    BYTE PTR [rax],al
  40c248:	(bad)  
  40c249:	adc    BYTE PTR [rax],al
  40c24b:	add    dl,cl
  40c24d:	or     eax,DWORD PTR [rax]
  40c24f:	add    al,bh
  40c251:	or     DWORD PTR [rax],eax
  40c253:	add    ah,ch
  40c255:	add    BYTE PTR [rax],al
  40c257:	add    BYTE PTR [rdx+0x2a000000],cl
  40c25d:	or     eax,0xd680000
  40c262:	add    BYTE PTR [rax],al
  40c264:	rex.WRB or rax,0xcbd0000
  40c26a:	add    BYTE PTR [rax],al
  40c26c:	xchg   ebp,eax
  40c26d:	or     eax,DWORD PTR [rax]
  40c26f:	add    BYTE PTR [rsi-0x44fffff0],ah
  40c275:	add    eax,DWORD PTR [rax]
  40c277:	add    BYTE PTR [rcx+0x1b000000],bh
  40c27d:	add    DWORD PTR [rax],eax
  40c27f:	add    BYTE PTR [rdx+0xe],cl
  40c282:	add    BYTE PTR [rax],al
  40c284:	sti    
  40c285:	or     eax,DWORD PTR [rax]
  40c287:	add    ch,bl
  40c289:	or     DWORD PTR [rax],eax
  40c28b:	add    BYTE PTR [rdi+0x68000009],bl
  40c291:	(bad)  
  40c292:	add    BYTE PTR [rax],al
  40c294:	(bad)  
  40c295:	(bad)  
  40c296:	add    BYTE PTR [rax],al
  40c298:	clc    
  40c299:	(bad)  
  40c29a:	add    BYTE PTR [rax],al
  40c29c:	cmp    al,0x9
  40c29e:	add    BYTE PTR [rax],al
  40c2a0:	jrcxz  0x40c2a7
  40c2a2:	add    BYTE PTR [rax],al
  40c2a4:	sub    DWORD PTR [rdx],ecx
  40c2a6:	add    BYTE PTR [rax],al
  40c2a8:	pop    rdx
  40c2a9:	sldt   WORD PTR [rax]
  40c2ac:	mov    eax,0x7700000f
  40c2b1:	add    al,0x0
  40c2b3:	add    BYTE PTR [rax],bh
  40c2b5:	add    al,0x0
  40c2b7:	add    BYTE PTR [rdi+0x2f000006],cl
  40c2bd:	adc    DWORD PTR [rax],eax
  40c2bf:	add    BYTE PTR [rdi],bh
  40c2c1:	or     eax,DWORD PTR [rax]
  40c2c3:	add    ch,ah
  40c2c5:	or     al,BYTE PTR [rax]
  40c2c7:	add    BYTE PTR [rcx+0xe000005],al
  40c2cd:	or     eax,DWORD PTR [rax]
  40c2cf:	add    bl,bl
  40c2d1:	add    al,0x0
  40c2d3:	add    BYTE PTR [rip+0x7000006],bh        # 0x740c2df
  40c2d9:	or     eax,0x11890000
  40c2de:	add    BYTE PTR [rax],al
  40c2e0:	fist   WORD PTR [rcx]
  40c2e2:	add    BYTE PTR [rax],al
  40c2e4:	fmul   DWORD PTR [rax+rax*1]
  40c2e7:	add    BYTE PTR [rbp+0x300000f],al
  40c2ed:	or     BYTE PTR [rax],al
  40c2ef:	add    bh,al
  40c2f1:	(bad)  
  40c2f2:	add    BYTE PTR [rax],al
  40c2f4:	fiadd  WORD PTR [rbx]
  40c2f6:	add    BYTE PTR [rax],al
  40c2f8:	or     eax,DWORD PTR [rax+rax*1]
  40c2fb:	add    BYTE PTR [rdi+0xc],bl
  40c2fe:	add    BYTE PTR [rax],al
  40c300:	sub    DWORD PTR [rip+0xd8b0000],eax        # 0xdcbc306
  40c306:	add    BYTE PTR [rax],al
  40c308:	push   rax
  40c309:	add    BYTE PTR [rax],al
  40c30b:	add    BYTE PTR [rbp+0x0],ch
  40c30e:	add    BYTE PTR [rax],al
  40c310:	pushf  
  40c311:	add    eax,DWORD PTR [rax]
  40c313:	add    BYTE PTR [rsi],al
  40c315:	adc    BYTE PTR [rax],al
  40c317:	add    BYTE PTR [rdx+0x3],bl
  40c31a:	add    BYTE PTR [rax],al
  40c31c:	mov    edx,0x14000006
  40c321:	(bad)  
  40c322:	add    BYTE PTR [rax],al
  40c324:	mov    edx,0x6e000009
  40c329:	(bad)  
  40c32a:	add    BYTE PTR [rax],al
  40c32c:	mov    ah,0xd
  40c32e:	add    BYTE PTR [rax],al
  40c330:	movabs eax,ds:0x200000ddb000007
  40c339:	adc    DWORD PTR [rax],eax
  40c33b:	add    BYTE PTR [rax+0x4e000001],dl
  40c341:	add    DWORD PTR [rax],eax
  40c343:	add    BYTE PTR [rbp+rax*1+0x5520000],dh
  40c34a:	add    BYTE PTR [rax],al
  40c34c:	jnp    0x40c35e
  40c34e:	add    BYTE PTR [rax],al
  40c350:	mov    dh,0x4
  40c352:	add    BYTE PTR [rax],al
  40c354:	add    al,0x5
  40c356:	add    BYTE PTR [rax],al
  40c358:	pop    rsi
  40c359:	adc    DWORD PTR [rax],eax
  40c35b:	add    BYTE PTR [rax],al
  40c35d:	add    BYTE PTR [rax],al
  40c35f:	add    BYTE PTR [rax+0xa],bl
  40c362:	add    BYTE PTR [rax],al
  40c364:	add    al,0xe
  40c366:	add    BYTE PTR [rax],al
  40c368:	or     BYTE PTR [rcx],0x0
  40c36b:	add    BYTE PTR [rdx+0x32000019],dh
  40c371:	and    al,0x0
  40c373:	je     0x40c375
  40c375:	push   0x73006900
  40c37a:	add    BYTE PTR [rsi],ch
  40c37c:	add    BYTE PTR [rcx+0x0],al
  40c37f:	jne    0x40c381
  40c381:	je     0x40c383
  40c383:	outs   dx,DWORD PTR ds:[rsi]
  40c384:	add    BYTE PTR [rbx+0x0],dl
  40c387:	movsxd eax,DWORD PTR [rax]
  40c389:	(bad)  
  40c38a:	add    BYTE PTR [rax+rax*1+0x65],ch
  40c38e:	add    BYTE PTR [rax+rax*1+0x69],al
  40c392:	add    BYTE PTR [rbp+0x0],ch
  40c395:	add    BYTE PTR gs:[rsi+0x0],ch
  40c399:	jae    0x40c39b
  40c39b:	imul   eax,DWORD PTR [rax],0x6e006f
  40c3a1:	jae    0x40c3a3
  40c3a3:	add    BYTE PTR [rax],al
  40c3a5:	add    BYTE PTR [rax],al
  40c3a7:	adc    al,0x24
  40c3a9:	add    BYTE PTR [rax+rax*1+0x68],dh
  40c3ad:	add    BYTE PTR [rcx+0x0],ch
  40c3b0:	jae    0x40c3b2
  40c3b2:	add    BYTE PTR cs:[rbx+0x0],dl
  40c3b6:	imul   eax,DWORD PTR [rax],0x65007a
  40c3bc:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  40c3bd:	add    BYTE PTR [rax],al
  40c3bf:	add    BYTE PTR [rax],bl
  40c3c1:	add    BYTE PTR ds:[rsi],bh
  40c3c4:	add    BYTE PTR [rax+rax*1],ah
  40c3c7:	je     0x40c3c9
  40c3c9:	push   0x73006900
  40c3ce:	add    BYTE PTR [rsi],ch
  40c3d0:	add    BYTE PTR [rsi+0x0],cl
  40c3d3:	(bad)  
  40c3d4:	add    BYTE PTR [rbp+0x0],ch
  40c3d7:	add    BYTE PTR gs:[rcx+0x1],cl
  40c3db:	add    BYTE PTR [rax],al
  40c3dd:	sbb    BYTE PTR [rsi],bh
  40c3df:	add    BYTE PTR [rsi],bh
  40c3e1:	add    BYTE PTR [rax+rax*1],ah
  40c3e4:	je     0x40c3e6
  40c3e6:	push   0x73006900
  40c3eb:	add    BYTE PTR [rsi],ch
  40c3ed:	add    BYTE PTR [rax+rax*1+0x79],dl
  40c3f1:	add    BYTE PTR [rax+0x0],dh
  40c3f4:	add    BYTE PTR gs:[rsi+0x1],dl
  40c3f8:	add    BYTE PTR [rax],al
  40c3fa:	sub    bh,BYTE PTR [rsi]
  40c3fc:	add    BYTE PTR [rsi],bh
  40c3fe:	add    BYTE PTR [rcx+0x0],ah
  40c401:	ins    DWORD PTR es:[rdi],dx
  40c402:	add    BYTE PTR [rax+rax*1+0x36],ah
  40c406:	add    BYTE PTR [rax+rax*1],dh
  40c409:	push   rax
  40c40a:	add    BYTE PTR [rdx+0x0],dh
  40c40d:	outs   dx,DWORD PTR ds:[rsi]
  40c40e:	add    BYTE PTR [rbx+0x0],ah
  40c411:	add    BYTE PTR gs:[rbx+0x0],dh
  40c415:	jae    0x40c417
  40c417:	outs   dx,DWORD PTR ds:[rsi]
  40c418:	add    BYTE PTR [rdx+0x0],dh
  40c41b:	add    BYTE PTR cs:[rsi+0x0],cl
  40c41f:	(bad)  
  40c420:	add    BYTE PTR [rbp+0x0],ch
  40c423:	gs add cl,dl
  40c426:	add    DWORD PTR [rax],eax
  40c428:	add    BYTE PTR [rsi],ch
  40c42a:	add    BYTE PTR ds:[rsi],bh
  40c42d:	add    BYTE PTR [rcx+0x0],ah
  40c430:	ins    DWORD PTR es:[rdi],dx
  40c431:	add    BYTE PTR [rax+rax*1+0x36],ah
  40c435:	add    BYTE PTR [rax+rax*1],dh
  40c438:	push   rax
  40c439:	add    BYTE PTR [rdx+0x0],dh
  40c43c:	outs   dx,DWORD PTR ds:[rsi]
  40c43d:	add    BYTE PTR [rbx+0x0],ah
  40c440:	add    BYTE PTR gs:[rbx+0x0],dh
  40c444:	jae    0x40c446
  40c446:	outs   dx,DWORD PTR ds:[rsi]
  40c447:	add    BYTE PTR [rdx+0x0],dh
  40c44a:	add    BYTE PTR cs:[rax+0x0],dl
  40c44e:	(bad)  
  40c44f:	add    BYTE PTR [rdx+0x0],dh
  40c452:	add    BYTE PTR gs:[rsi+0x0],ch
  40c456:	je     0x40c458
  40c458:	loope  0x40c45b
  40c45a:	add    BYTE PTR [rax],al
  40c45c:	sub    bh,BYTE PTR [rsi]
  40c45e:	add    BYTE PTR [rsi],bh
  40c460:	add    BYTE PTR [rcx+0x0],ah
  40c463:	ins    DWORD PTR es:[rdi],dx
  40c464:	add    BYTE PTR [rax+rax*1+0x36],ah
  40c468:	add    BYTE PTR [rax+rax*1],dh
  40c46b:	push   rax
  40c46c:	add    BYTE PTR [rdx+0x0],dh
  40c46f:	outs   dx,DWORD PTR ds:[rsi]
  40c470:	add    BYTE PTR [rbx+0x0],ah
  40c473:	add    BYTE PTR gs:[rbx+0x0],dh
  40c477:	jae    0x40c479
  40c479:	outs   dx,DWORD PTR ds:[rsi]
  40c47a:	add    BYTE PTR [rdx+0x0],dh
  40c47d:	add    BYTE PTR cs:[rax+rax*1+0x79],dl
  40c482:	add    BYTE PTR [rax+0x0],dh
  40c485:	gs add cl,ch
  40c488:	add    DWORD PTR [rax],eax
  40c48a:	add    BYTE PTR [rsi],ch
  40c48c:	add    BYTE PTR ds:[rsi],bh
  40c48f:	add    BYTE PTR [rcx+0x0],ah
  40c492:	ins    DWORD PTR es:[rdi],dx
  40c493:	add    BYTE PTR [rax+rax*1+0x36],ah
  40c497:	add    BYTE PTR [rax+rax*1],dh
  40c49a:	push   rax
  40c49b:	add    BYTE PTR [rdx+0x0],dh
  40c49e:	outs   dx,DWORD PTR ds:[rsi]
  40c49f:	add    BYTE PTR [rbx+0x0],ah
  40c4a2:	add    BYTE PTR gs:[rbx+0x0],dh
  40c4a6:	jae    0x40c4a8
  40c4a8:	outs   dx,DWORD PTR ds:[rsi]
  40c4a9:	add    BYTE PTR [rdx+0x0],dh
  40c4ac:	add    BYTE PTR cs:[rdx+0x0],bl
  40c4b0:	rex.WRXB add BYTE PTR [r10+0x0],r14b
  40c4b4:	add    BYTE PTR fs:[rbp+0x0],ah
  40c4b8:	jb     0x40c4ba
  40c4ba:	xchg   ebx,eax
  40c4bb:	add    al,BYTE PTR [rax]
  40c4bd:	add    BYTE PTR [rdx],bl
  40c4bf:	add    BYTE PTR ds:[rsi],bh
  40c4c2:	add    BYTE PTR [rdx+0x0],ah
  40c4c5:	jb     0x40c4c7
  40c4c7:	outs   dx,DWORD PTR ds:[rsi]
  40c4c8:	add    BYTE PTR [rdi+0x0],dh
  40c4cb:	jae    0x40c4cd
  40c4cd:	add    BYTE PTR gs:[rsi],ch
  40c4d0:	add    BYTE PTR [rsi+0x0],cl
  40c4d3:	(bad)  
  40c4d4:	add    BYTE PTR [rbp+0x0],ch
  40c4d7:	add    BYTE PTR gs:[rsi+0x1e000002],dl
  40c4de:	add    BYTE PTR ds:[rsi],bh
  40c4e1:	add    BYTE PTR [rdx+0x0],ah
  40c4e4:	jb     0x40c4e6
  40c4e6:	outs   dx,DWORD PTR ds:[rsi]
  40c4e7:	add    BYTE PTR [rdi+0x0],dh
  40c4ea:	jae    0x40c4ec
  40c4ec:	add    BYTE PTR gs:[rsi],ch
  40c4ef:	add    BYTE PTR [rax+0x0],dl
  40c4f2:	(bad)  
  40c4f3:	add    BYTE PTR [rdx+0x0],dh
  40c4f6:	add    BYTE PTR gs:[rsi+0x0],ch
  40c4fa:	je     0x40c4fc
  40c4fc:	sahf   
  40c4fd:	add    al,BYTE PTR [rax]
  40c4ff:	add    BYTE PTR [rdx],bl
  40c501:	add    BYTE PTR ds:[rsi],bh
  40c504:	add    BYTE PTR [rdx+0x0],ah
  40c507:	jb     0x40c509
  40c509:	outs   dx,DWORD PTR ds:[rsi]
  40c50a:	add    BYTE PTR [rdi+0x0],dh
  40c50d:	jae    0x40c50f
  40c50f:	add    BYTE PTR gs:[rsi],ch
  40c512:	add    BYTE PTR [rax+rax*1+0x79],dl
  40c516:	add    BYTE PTR [rax+0x0],dh
  40c519:	add    BYTE PTR gs:[rsi+0x1e000002],ah
  40c520:	add    BYTE PTR ds:[rsi],bh
  40c523:	add    BYTE PTR [rdx+0x0],ah
  40c526:	jb     0x40c528
  40c528:	outs   dx,DWORD PTR ds:[rsi]
  40c529:	add    BYTE PTR [rdi+0x0],dh
  40c52c:	jae    0x40c52e
  40c52e:	add    BYTE PTR gs:[rsi],ch
  40c531:	add    BYTE PTR [rdx+0x0],bl
  40c534:	rex.WRXB add BYTE PTR [r10+0x0],r14b
  40c538:	add    BYTE PTR fs:[rbp+0x0],ah
  40c53c:	jb     0x40c53e
  40c53e:	sbb    al,0x3
  40c540:	add    BYTE PTR [rax],al
  40c542:	sub    BYTE PTR [rsi],bh
  40c544:	add    BYTE PTR [rsi],bh
  40c546:	add    BYTE PTR [rcx+0x0],ch
  40c549:	(bad)  
  40c54a:	add    BYTE PTR [rsi],dh
  40c54c:	add    BYTE PTR [rax+rax*1],dh
  40c54f:	push   rax
  40c550:	add    BYTE PTR [rdx+0x0],dh
  40c553:	outs   dx,DWORD PTR ds:[rsi]
  40c554:	add    BYTE PTR [rbx+0x0],ah
  40c557:	add    BYTE PTR gs:[rbx+0x0],dh
  40c55b:	jae    0x40c55d
  40c55d:	outs   dx,DWORD PTR ds:[rsi]
  40c55e:	add    BYTE PTR [rdx+0x0],dh
  40c561:	add    BYTE PTR cs:[rsi+0x0],cl
  40c565:	(bad)  
  40c566:	add    BYTE PTR [rbp+0x0],ch
  40c569:	add    BYTE PTR gs:[rdi],bl
  40c56c:	add    eax,DWORD PTR [rax]
  40c56e:	add    BYTE PTR [rsi+rdi*1],ch
  40c571:	add    BYTE PTR [rsi],bh
  40c573:	add    BYTE PTR [rcx+0x0],ch
  40c576:	(bad)  
  40c577:	add    BYTE PTR [rsi],dh
  40c579:	add    BYTE PTR [rax+rax*1],dh
  40c57c:	push   rax
  40c57d:	add    BYTE PTR [rdx+0x0],dh
  40c580:	outs   dx,DWORD PTR ds:[rsi]
  40c581:	add    BYTE PTR [rbx+0x0],ah
  40c584:	add    BYTE PTR gs:[rbx+0x0],dh
  40c588:	jae    0x40c58a
  40c58a:	outs   dx,DWORD PTR ds:[rsi]
  40c58b:	add    BYTE PTR [rdx+0x0],dh
  40c58e:	add    BYTE PTR cs:[rax+0x0],dl
  40c592:	(bad)  
  40c593:	add    BYTE PTR [rdx+0x0],dh
  40c596:	add    BYTE PTR gs:[rsi+0x0],ch
  40c59a:	je     0x40c59c
  40c59c:	add    eax,DWORD PTR cs:[rax]
  40c59f:	add    BYTE PTR [rax],ch
  40c5a1:	add    BYTE PTR ds:[rsi],bh
  40c5a4:	add    BYTE PTR [rcx+0x0],ch
  40c5a7:	(bad)  
  40c5a8:	add    BYTE PTR [rsi],dh
  40c5aa:	add    BYTE PTR [rax+rax*1],dh
  40c5ad:	push   rax
  40c5ae:	add    BYTE PTR [rdx+0x0],dh
  40c5b1:	outs   dx,DWORD PTR ds:[rsi]
  40c5b2:	add    BYTE PTR [rbx+0x0],ah
  40c5b5:	add    BYTE PTR gs:[rbx+0x0],dh
  40c5b9:	jae    0x40c5bb
  40c5bb:	outs   dx,DWORD PTR ds:[rsi]
  40c5bc:	add    BYTE PTR [rdx+0x0],dh
  40c5bf:	add    BYTE PTR cs:[rax+rax*1+0x79],dl
  40c5c4:	add    BYTE PTR [rax+0x0],dh
  40c5c7:	add    BYTE PTR gs:[rsi],dh
  40c5ca:	add    eax,DWORD PTR [rax]
  40c5cc:	add    BYTE PTR [rsi+rdi*1],ch
  40c5cf:	add    BYTE PTR [rsi],bh
  40c5d1:	add    BYTE PTR [rcx+0x0],ch
  40c5d4:	(bad)  
  40c5d5:	add    BYTE PTR [rsi],dh
  40c5d7:	add    BYTE PTR [rax+rax*1],dh
  40c5da:	push   rax
  40c5db:	add    BYTE PTR [rdx+0x0],dh
  40c5de:	outs   dx,DWORD PTR ds:[rsi]
  40c5df:	add    BYTE PTR [rbx+0x0],ah
  40c5e2:	add    BYTE PTR gs:[rbx+0x0],dh
  40c5e6:	jae    0x40c5e8
  40c5e8:	outs   dx,DWORD PTR ds:[rsi]
  40c5e9:	add    BYTE PTR [rdx+0x0],dh
  40c5ec:	add    BYTE PTR cs:[rdx+0x0],bl
  40c5f0:	rex.WRXB add BYTE PTR [r10+0x0],r14b
  40c5f4:	add    BYTE PTR fs:[rbp+0x0],ah
  40c5f8:	jb     0x40c5fa
  40c5fa:	loopne 0x40c5ff
  40c5fc:	add    BYTE PTR [rax],al
  40c5fe:	sub    al,0x3e
  40c600:	add    BYTE PTR [rsi],bh
  40c602:	add    BYTE PTR [rcx+0x0],ch
  40c605:	outs   dx,BYTE PTR ds:[rsi]
  40c606:	add    BYTE PTR [rbx+0x0],dh
  40c609:	je     0x40c60b
  40c60b:	jb     0x40c60d
  40c60d:	jne    0x40c60f
  40c60f:	movsxd eax,DWORD PTR [rax]
  40c611:	je     0x40c613
  40c613:	imul   eax,DWORD PTR [rax],0x6e006f
  40c619:	jae    0x40c61b
  40c61b:	rex.X add BYTE PTR [rdi+0x0],bpl
  40c61f:	js     0x40c621
  40c621:	add    BYTE PTR cs:[rsi+0x0],cl
  40c625:	(bad)  
  40c626:	add    BYTE PTR [rbp+0x0],ch
  40c629:	gs add bl,ah
  40c62c:	add    eax,DWORD PTR [rax]
  40c62e:	add    BYTE PTR [rax],dh
  40c630:	add    BYTE PTR ds:[rsi],bh
  40c633:	add    BYTE PTR [rcx+0x0],ch
  40c636:	outs   dx,BYTE PTR ds:[rsi]
  40c637:	add    BYTE PTR [rbx+0x0],dh
  40c63a:	je     0x40c63c
  40c63c:	jb     0x40c63e
  40c63e:	jne    0x40c640
  40c640:	movsxd eax,DWORD PTR [rax]
  40c642:	je     0x40c644
  40c644:	imul   eax,DWORD PTR [rax],0x6e006f
  40c64a:	jae    0x40c64c
  40c64c:	rex.X add BYTE PTR [rdi+0x0],bpl
  40c650:	js     0x40c652
  40c652:	add    BYTE PTR cs:[rax+0x0],dl
  40c656:	(bad)  
  40c657:	add    BYTE PTR [rdx+0x0],dh
  40c65a:	add    BYTE PTR gs:[rsi+0x0],ch
  40c65e:	je     0x40c660
  40c660:	hlt    
  40c661:	add    eax,DWORD PTR [rax]
  40c663:	add    BYTE PTR [rsi+rdi*1],ch
  40c666:	add    BYTE PTR [rsi],bh
  40c668:	add    BYTE PTR [rcx+0x0],ch
  40c66b:	outs   dx,BYTE PTR ds:[rsi]
  40c66c:	add    BYTE PTR [rbx+0x0],dh
  40c66f:	je     0x40c671
  40c671:	jb     0x40c673
  40c673:	jne    0x40c675
  40c675:	movsxd eax,DWORD PTR [rax]
  40c677:	je     0x40c679
  40c679:	imul   eax,DWORD PTR [rax],0x6e006f
  40c67f:	jae    0x40c681
  40c681:	rex.X add BYTE PTR [rdi+0x0],bpl
  40c685:	js     0x40c687
  40c687:	add    BYTE PTR cs:[rax+rax*1+0x79],dl
  40c68c:	add    BYTE PTR [rax+0x0],dh
  40c68f:	gs add ah,bh
  40c692:	add    eax,DWORD PTR [rax]
  40c694:	add    BYTE PTR [rax],dh
  40c696:	add    BYTE PTR ds:[rsi],bh
  40c699:	add    BYTE PTR [rcx+0x0],ch
  40c69c:	outs   dx,BYTE PTR ds:[rsi]
  40c69d:	add    BYTE PTR [rbx+0x0],dh
  40c6a0:	je     0x40c6a2
  40c6a2:	jb     0x40c6a4
  40c6a4:	jne    0x40c6a6
  40c6a6:	movsxd eax,DWORD PTR [rax]
  40c6a8:	je     0x40c6aa
  40c6aa:	imul   eax,DWORD PTR [rax],0x6e006f
  40c6b0:	jae    0x40c6b2
  40c6b2:	rex.X add BYTE PTR [rdi+0x0],bpl
  40c6b6:	js     0x40c6b8
  40c6b8:	add    BYTE PTR cs:[rdx+0x0],bl
  40c6bc:	rex.WRXB add BYTE PTR [r10+0x0],r14b
  40c6c0:	add    BYTE PTR fs:[rbp+0x0],ah
  40c6c4:	jb     0x40c6c6
  40c6c6:	jae    0x40c6cc
  40c6c8:	add    BYTE PTR [rax],al
  40c6ca:	sbb    bh,BYTE PTR [rsi]
  40c6cc:	add    BYTE PTR [rsi],bh
  40c6ce:	add    BYTE PTR [rax+rax*1+0x61],ch
  40c6d2:	add    BYTE PTR [rcx+0x0],bh
  40c6d5:	outs   dx,DWORD PTR ds:[rsi]
  40c6d6:	add    BYTE PTR [rbp+0x0],dh
  40c6d9:	je     0x40c6db
  40c6db:	add    BYTE PTR cs:[rsi+0x0],cl
  40c6df:	(bad)  
  40c6e0:	add    BYTE PTR [rbp+0x0],ch
  40c6e3:	add    BYTE PTR gs:[rsi+0x4],dh
  40c6e7:	add    BYTE PTR [rax],al
  40c6e9:	(bad)  
  40c6ea:	add    BYTE PTR ds:[rsi],bh
  40c6ed:	add    BYTE PTR [rax+rax*1+0x61],ch
  40c6f1:	add    BYTE PTR [rcx+0x0],bh
  40c6f4:	outs   dx,DWORD PTR ds:[rsi]
  40c6f5:	add    BYTE PTR [rbp+0x0],dh
  40c6f8:	je     0x40c6fa
  40c6fa:	add    BYTE PTR cs:[rax+0x0],dl
  40c6fe:	(bad)  
  40c6ff:	add    BYTE PTR [rdx+0x0],dh
  40c702:	add    BYTE PTR gs:[rsi+0x0],ch
  40c706:	je     0x40c708
  40c708:	jle    0x40c70e
  40c70a:	add    BYTE PTR [rax],al
  40c70c:	sbb    bh,BYTE PTR [rsi]
  40c70e:	add    BYTE PTR [rsi],bh
  40c710:	add    BYTE PTR [rax+rax*1+0x61],ch
  40c714:	add    BYTE PTR [rcx+0x0],bh
  40c717:	outs   dx,DWORD PTR ds:[rsi]
  40c718:	add    BYTE PTR [rbp+0x0],dh
  40c71b:	je     0x40c71d
  40c71d:	add    BYTE PTR cs:[rax+rax*1+0x79],dl
  40c722:	add    BYTE PTR [rax+0x0],dh
  40c725:	add    BYTE PTR gs:[rbp+0x1e000004],al
  40c72c:	add    BYTE PTR ds:[rsi],bh
  40c72f:	add    BYTE PTR [rax+rax*1+0x61],ch
  40c733:	add    BYTE PTR [rcx+0x0],bh
  40c736:	outs   dx,DWORD PTR ds:[rsi]
  40c737:	add    BYTE PTR [rbp+0x0],dh
  40c73a:	je     0x40c73c
  40c73c:	add    BYTE PTR cs:[rdx+0x0],bl
  40c740:	rex.WRXB add BYTE PTR [r10+0x0],r14b
  40c744:	add    BYTE PTR fs:[rbp+0x0],ah
  40c748:	jb     0x40c74a
  40c74a:	add    eax,0x28000005
  40c74f:	add    BYTE PTR ds:[rsi],bh
  40c752:	add    BYTE PTR [rax+rax*1+0x61],ch
  40c756:	add    BYTE PTR [rcx+0x0],bh
  40c759:	outs   dx,DWORD PTR ds:[rsi]
  40c75a:	add    BYTE PTR [rbp+0x0],dh
  40c75d:	je     0x40c75f
  40c75f:	rex.WRB add BYTE PTR [r9+0x0],r12b
  40c763:	outs   dx,BYTE PTR ds:[rsi]
  40c764:	add    BYTE PTR [rcx+0x0],ah
  40c767:	add    BYTE PTR [ebp+0x0],ah
  40c76b:	jb     0x40c76d
  40c76d:	add    BYTE PTR cs:[rsi+0x0],cl
  40c771:	(bad)  
  40c772:	add    BYTE PTR [rbp+0x0],ch
  40c775:	add    BYTE PTR gs:[rax],cl
  40c778:	add    eax,0x3e280000
  40c77d:	add    BYTE PTR [rsi],bh
  40c77f:	add    BYTE PTR [rax+rax*1+0x61],ch
  40c783:	add    BYTE PTR [rcx+0x0],bh
  40c786:	outs   dx,DWORD PTR ds:[rsi]
  40c787:	add    BYTE PTR [rbp+0x0],dh
  40c78a:	je     0x40c78c
  40c78c:	rex.WRB add BYTE PTR [r9+0x0],r12b
  40c790:	outs   dx,BYTE PTR ds:[rsi]
  40c791:	add    BYTE PTR [rcx+0x0],ah
  40c794:	add    BYTE PTR [ebp+0x0],ah
  40c798:	jb     0x40c79a
  40c79a:	add    BYTE PTR cs:[rax+rax*1+0x79],dl
  40c79f:	add    BYTE PTR [rax+0x0],dh
  40c7a2:	add    BYTE PTR gs:[rdi],dl
  40c7a5:	add    eax,0x3e3a0000
  40c7aa:	add    BYTE PTR [rsi],bh
  40c7ac:	add    BYTE PTR [rbp+0x0],ch
  40c7af:	add    BYTE PTR gs:[rax+rax*1+0x69],ah
  40c7b4:	add    BYTE PTR [rcx+0x0],ah
  40c7b7:	push   rax
  40c7b8:	add    BYTE PTR [rcx+0x0],ah
  40c7bb:	je     0x40c7bd
  40c7bd:	push   0x69004200
  40c7c2:	add    BYTE PTR [rsi+0x0],ch
  40c7c5:	add    BYTE PTR fs:[rcx+0x0],ch
  40c7c9:	outs   dx,BYTE PTR ds:[rsi]
  40c7ca:	add    BYTE PTR [rdi+0x0],ah
  40c7cd:	push   rbx
  40c7ce:	add    BYTE PTR [rdi+0x0],ch
  40c7d1:	jne    0x40c7d3
  40c7d3:	jb     0x40c7d5
  40c7d5:	movsxd eax,DWORD PTR [rax]
  40c7d7:	add    BYTE PTR gs:[rsi],ch
  40c7da:	add    BYTE PTR [rsi+0x0],cl
  40c7dd:	(bad)  
  40c7de:	add    BYTE PTR [rbp+0x0],ch
  40c7e1:	gs add ch,al
  40c7e4:	add    eax,0x3e3a0000
  40c7e9:	add    BYTE PTR [rsi],bh
  40c7eb:	add    BYTE PTR [rbp+0x0],ch
  40c7ee:	add    BYTE PTR gs:[rax+rax*1+0x69],ah
  40c7f3:	add    BYTE PTR [rcx+0x0],ah
  40c7f6:	push   rax
  40c7f7:	add    BYTE PTR [rcx+0x0],ah
  40c7fa:	je     0x40c7fc
  40c7fc:	push   0x69004200
  40c801:	add    BYTE PTR [rsi+0x0],ch
  40c804:	add    BYTE PTR fs:[rcx+0x0],ch
  40c808:	outs   dx,BYTE PTR ds:[rsi]
  40c809:	add    BYTE PTR [rdi+0x0],ah
  40c80c:	push   rbx
  40c80d:	add    BYTE PTR [rdi+0x0],ch
  40c810:	jne    0x40c812
  40c812:	jb     0x40c814
  40c814:	movsxd eax,DWORD PTR [rax]
  40c816:	add    BYTE PTR gs:[rsi],ch
  40c819:	add    BYTE PTR [rax+rax*1+0x79],dl
  40c81d:	add    BYTE PTR [rax+0x0],dh
  40c820:	gs add ch,bl
  40c823:	add    eax,0x3e200000
  40c828:	add    BYTE PTR [rsi],bh
  40c82a:	add    BYTE PTR [rax+0x0],dh
  40c82d:	(bad)  
  40c82e:	add    BYTE PTR [rax+rax*1+0x68],dh
  40c832:	add    BYTE PTR [rax+rax*1+0x61],cl
  40c836:	add    BYTE PTR [rdx+0x0],ah
  40c839:	add    BYTE PTR gs:[rax+rax*1+0x2e],ch
  40c83e:	add    BYTE PTR [rsi+0x0],cl
  40c841:	(bad)  
  40c842:	add    BYTE PTR [rbp+0x0],ch
  40c845:	add    BYTE PTR gs:[rdx+0x6],bl
  40c849:	add    BYTE PTR [rax],al
  40c84b:	and    al,0x3e
  40c84d:	add    BYTE PTR [rsi],bh
  40c84f:	add    BYTE PTR [rax+0x0],dh
  40c852:	(bad)  
  40c853:	add    BYTE PTR [rax+rax*1+0x68],dh
  40c857:	add    BYTE PTR [rax+rax*1+0x61],cl
  40c85b:	add    BYTE PTR [rdx+0x0],ah
  40c85e:	add    BYTE PTR gs:[rax+rax*1+0x2e],ch
  40c863:	add    BYTE PTR [rax+0x0],dl
  40c866:	(bad)  
  40c867:	add    BYTE PTR [rdx+0x0],dh
  40c86a:	add    BYTE PTR gs:[rsi+0x0],ch
  40c86e:	je     0x40c870
  40c870:	gs (bad) 
  40c872:	add    BYTE PTR [rax],al
  40c874:	and    BYTE PTR [rsi],bh
  40c876:	add    BYTE PTR [rsi],bh
  40c878:	add    BYTE PTR [rax+0x0],dh
  40c87b:	(bad)  
  40c87c:	add    BYTE PTR [rax+rax*1+0x68],dh
  40c880:	add    BYTE PTR [rax+rax*1+0x61],cl
  40c884:	add    BYTE PTR [rdx+0x0],ah
  40c887:	add    BYTE PTR gs:[rax+rax*1+0x2e],ch
  40c88c:	add    BYTE PTR [rax+rax*1+0x79],dl
  40c890:	add    BYTE PTR [rax+0x0],dh
  40c893:	add    BYTE PTR gs:[rbp+0x6],ch
  40c897:	add    BYTE PTR [rax],al
  40c899:	and    al,0x3e
  40c89b:	add    BYTE PTR [rsi],bh
  40c89d:	add    BYTE PTR [rax+0x0],dh
  40c8a0:	(bad)  
  40c8a1:	add    BYTE PTR [rax+rax*1+0x68],dh
  40c8a5:	add    BYTE PTR [rax+rax*1+0x61],cl
  40c8a9:	add    BYTE PTR [rdx+0x0],ah
  40c8ac:	add    BYTE PTR gs:[rax+rax*1+0x2e],ch
  40c8b1:	add    BYTE PTR [rdx+0x0],bl
  40c8b4:	rex.WRXB add BYTE PTR [r10+0x0],r14b
  40c8b8:	add    BYTE PTR fs:[rbp+0x0],ah
  40c8bc:	jb     0x40c8be
  40c8be:	loop   0x40c8c6
  40c8c0:	add    BYTE PTR [rax],al
  40c8c2:	sub    bh,BYTE PTR [rsi]
  40c8c4:	add    BYTE PTR [rsi],bh
  40c8c6:	add    BYTE PTR [rax+0x0],dh
  40c8c9:	jb     0x40c8cb
  40c8cb:	outs   dx,DWORD PTR ds:[rsi]
  40c8cc:	add    BYTE PTR [rbx+0x0],ah
  40c8cf:	add    BYTE PTR gs:[rbx+0x0],dh
  40c8d3:	jae    0x40c8d5
  40c8d5:	outs   dx,DWORD PTR ds:[rsi]
  40c8d6:	add    BYTE PTR [rdx+0x0],dh
  40c8d9:	rex.WR add BYTE PTR [rcx+0x0],r12b
  40c8dd:	(bad)  
  40c8de:	add    BYTE PTR [rbp+0x0],ah
  40c8e1:	ins    BYTE PTR es:[rdi],dx
  40c8e2:	add    BYTE PTR [rsi],ch
  40c8e4:	add    BYTE PTR [rsi+0x0],cl
  40c8e7:	(bad)  
  40c8e8:	add    BYTE PTR [rbp+0x0],ch
  40c8eb:	gs add ch,ah
  40c8ee:	(bad)  
  40c8ef:	add    BYTE PTR [rax],al
  40c8f1:	cs add BYTE PTR ds:[rsi],bh
  40c8f5:	add    BYTE PTR [rax+0x0],dh
  40c8f8:	jb     0x40c8fa
  40c8fa:	outs   dx,DWORD PTR ds:[rsi]
  40c8fb:	add    BYTE PTR [rbx+0x0],ah
  40c8fe:	add    BYTE PTR gs:[rbx+0x0],dh
  40c902:	jae    0x40c904
  40c904:	outs   dx,DWORD PTR ds:[rsi]
  40c905:	add    BYTE PTR [rdx+0x0],dh
  40c908:	rex.WR add BYTE PTR [rcx+0x0],r12b
  40c90c:	(bad)  
  40c90d:	add    BYTE PTR [rbp+0x0],ah
  40c910:	ins    BYTE PTR es:[rdi],dx
  40c911:	add    BYTE PTR [rsi],ch
  40c913:	add    BYTE PTR [rax+0x0],dl
  40c916:	(bad)  
  40c917:	add    BYTE PTR [rdx+0x0],dh
  40c91a:	add    BYTE PTR gs:[rsi+0x0],ch
  40c91e:	je     0x40c920
  40c920:	cmc    
  40c921:	(bad)  
  40c922:	add    BYTE PTR [rax],al
  40c924:	sub    bh,BYTE PTR [rsi]
  40c926:	add    BYTE PTR [rsi],bh
  40c928:	add    BYTE PTR [rax+0x0],dh
  40c92b:	jb     0x40c92d
  40c92d:	outs   dx,DWORD PTR ds:[rsi]
  40c92e:	add    BYTE PTR [rbx+0x0],ah
  40c931:	add    BYTE PTR gs:[rbx+0x0],dh
  40c935:	jae    0x40c937
  40c937:	outs   dx,DWORD PTR ds:[rsi]
  40c938:	add    BYTE PTR [rdx+0x0],dh
  40c93b:	rex.WR add BYTE PTR [rcx+0x0],r12b
  40c93f:	(bad)  
  40c940:	add    BYTE PTR [rbp+0x0],ah
  40c943:	ins    BYTE PTR es:[rdi],dx
  40c944:	add    BYTE PTR [rsi],ch
  40c946:	add    BYTE PTR [rax+rax*1+0x79],dl
  40c94a:	add    BYTE PTR [rax+0x0],dh
  40c94d:	gs add ch,bh
  40c950:	(bad)  
  40c951:	add    BYTE PTR [rax],al
  40c953:	cs add BYTE PTR ds:[rsi],bh
  40c957:	add    BYTE PTR [rax+0x0],dh
  40c95a:	jb     0x40c95c
  40c95c:	outs   dx,DWORD PTR ds:[rsi]
  40c95d:	add    BYTE PTR [rbx+0x0],ah
  40c960:	add    BYTE PTR gs:[rbx+0x0],dh
  40c964:	jae    0x40c966
  40c966:	outs   dx,DWORD PTR ds:[rsi]
  40c967:	add    BYTE PTR [rdx+0x0],dh
  40c96a:	rex.WR add BYTE PTR [rcx+0x0],r12b
  40c96e:	(bad)  
  40c96f:	add    BYTE PTR [rbp+0x0],ah
  40c972:	ins    BYTE PTR es:[rdi],dx
  40c973:	add    BYTE PTR [rsi],ch
  40c975:	add    BYTE PTR [rdx+0x0],bl
  40c978:	rex.WRXB add BYTE PTR [r10+0x0],r14b
  40c97c:	add    BYTE PTR fs:[rbp+0x0],ah
  40c980:	jb     0x40c982
  40c982:	jb     0x40c98b
  40c984:	add    BYTE PTR [rax],al
  40c986:	and    bh,BYTE PTR [rsi]
  40c988:	add    BYTE PTR [rsi],bh
  40c98a:	add    BYTE PTR [rbx+0x0],dh
  40c98d:	outs   dx,DWORD PTR ds:[rsi]
  40c98e:	add    BYTE PTR [rbp+0x0],dh
  40c991:	jb     0x40c993
  40c993:	movsxd eax,DWORD PTR [rax]
  40c995:	add    BYTE PTR gs:[rax+0x0],dl
  40c999:	(bad)  
  40c99a:	add    BYTE PTR [rax+rax*1+0x68],dh
  40c99e:	add    BYTE PTR [rsi],ch
  40c9a0:	add    BYTE PTR [rsi+0x0],cl
  40c9a3:	(bad)  
  40c9a4:	add    BYTE PTR [rbp+0x0],ch
  40c9a7:	add    BYTE PTR gs:[rbp+0x7],dh
  40c9ab:	add    BYTE PTR [rax],al
  40c9ad:	es add BYTE PTR ds:[rsi],bh
  40c9b1:	add    BYTE PTR [rbx+0x0],dh
  40c9b4:	outs   dx,DWORD PTR ds:[rsi]
  40c9b5:	add    BYTE PTR [rbp+0x0],dh
  40c9b8:	jb     0x40c9ba
  40c9ba:	movsxd eax,DWORD PTR [rax]
  40c9bc:	add    BYTE PTR gs:[rax+0x0],dl
  40c9c0:	(bad)  
  40c9c1:	add    BYTE PTR [rax+rax*1+0x68],dh
  40c9c5:	add    BYTE PTR [rsi],ch
  40c9c7:	add    BYTE PTR [rax+0x0],dl
  40c9ca:	(bad)  
  40c9cb:	add    BYTE PTR [rdx+0x0],dh
  40c9ce:	add    BYTE PTR gs:[rsi+0x0],ch
  40c9d2:	je     0x40c9d4
  40c9d4:	add    DWORD PTR [rdi],0x3e220000
  40c9da:	add    BYTE PTR [rsi],bh
  40c9dc:	add    BYTE PTR [rbx+0x0],dh
  40c9df:	outs   dx,DWORD PTR ds:[rsi]
  40c9e0:	add    BYTE PTR [rbp+0x0],dh
  40c9e3:	jb     0x40c9e5
  40c9e5:	movsxd eax,DWORD PTR [rax]
  40c9e7:	add    BYTE PTR gs:[rax+0x0],dl
  40c9eb:	(bad)  
  40c9ec:	add    BYTE PTR [rax+rax*1+0x68],dh
  40c9f0:	add    BYTE PTR [rsi],ch
  40c9f2:	add    BYTE PTR [rax+rax*1+0x79],dl
  40c9f6:	add    BYTE PTR [rax+0x0],dh
  40c9f9:	add    BYTE PTR gs:[rcx+0x26000007],cl
  40ca00:	add    BYTE PTR ds:[rsi],bh
  40ca03:	add    BYTE PTR [rbx+0x0],dh
  40ca06:	outs   dx,DWORD PTR ds:[rsi]
  40ca07:	add    BYTE PTR [rbp+0x0],dh
  40ca0a:	jb     0x40ca0c
  40ca0c:	movsxd eax,DWORD PTR [rax]
  40ca0e:	add    BYTE PTR gs:[rax+0x0],dl
  40ca12:	(bad)  
  40ca13:	add    BYTE PTR [rax+rax*1+0x68],dh
  40ca17:	add    BYTE PTR [rsi],ch
  40ca19:	add    BYTE PTR [rdx+0x0],bl
  40ca1c:	rex.WRXB add BYTE PTR [r10+0x0],r14b
  40ca20:	add    BYTE PTR fs:[rbp+0x0],ah
  40ca24:	jb     0x40ca26
  40ca26:	add    BYTE PTR [rax],cl
  40ca28:	add    BYTE PTR [rax],al
  40ca2a:	es add BYTE PTR ds:[rsi],bh
  40ca2e:	add    BYTE PTR [rax+0x0],bh
  40ca31:	cmp    BYTE PTR [rax],al
  40ca33:	add    BYTE PTR ss:[rax+0x0],dl
  40ca37:	jb     0x40ca39
  40ca39:	outs   dx,DWORD PTR ds:[rsi]
  40ca3a:	add    BYTE PTR [rbx+0x0],ah
  40ca3d:	add    BYTE PTR gs:[rbx+0x0],dh
  40ca41:	jae    0x40ca43
  40ca43:	outs   dx,DWORD PTR ds:[rsi]
  40ca44:	add    BYTE PTR [rdx+0x0],dh
  40ca47:	add    BYTE PTR cs:[rsi+0x0],cl
  40ca4b:	(bad)  
  40ca4c:	add    BYTE PTR [rbp+0x0],ch
  40ca4f:	add    BYTE PTR gs:[rbx],al
  40ca52:	or     BYTE PTR [rax],al
  40ca54:	add    BYTE PTR [rdx],ch
  40ca56:	add    BYTE PTR ds:[rsi],bh
  40ca59:	add    BYTE PTR [rax+0x0],bh
  40ca5c:	cmp    BYTE PTR [rax],al
  40ca5e:	add    BYTE PTR ss:[rax+0x0],dl
  40ca62:	jb     0x40ca64
  40ca64:	outs   dx,DWORD PTR ds:[rsi]
  40ca65:	add    BYTE PTR [rbx+0x0],ah
  40ca68:	add    BYTE PTR gs:[rbx+0x0],dh
  40ca6c:	jae    0x40ca6e
  40ca6e:	outs   dx,DWORD PTR ds:[rsi]
  40ca6f:	add    BYTE PTR [rdx+0x0],dh
  40ca72:	add    BYTE PTR cs:[rax+0x0],dl
  40ca76:	(bad)  
  40ca77:	add    BYTE PTR [rdx+0x0],dh
  40ca7a:	add    BYTE PTR gs:[rsi+0x0],ch
  40ca7e:	je     0x40ca80
  40ca80:	adc    DWORD PTR [rax],ecx
  40ca82:	add    BYTE PTR [rax],al
  40ca84:	es add BYTE PTR ds:[rsi],bh
  40ca88:	add    BYTE PTR [rax+0x0],bh
  40ca8b:	cmp    BYTE PTR [rax],al
  40ca8d:	add    BYTE PTR ss:[rax+0x0],dl
  40ca91:	jb     0x40ca93
  40ca93:	outs   dx,DWORD PTR ds:[rsi]
  40ca94:	add    BYTE PTR [rbx+0x0],ah
  40ca97:	add    BYTE PTR gs:[rbx+0x0],dh
  40ca9b:	jae    0x40ca9d
  40ca9d:	outs   dx,DWORD PTR ds:[rsi]
  40ca9e:	add    BYTE PTR [rdx+0x0],dh
  40caa1:	add    BYTE PTR cs:[rax+rax*1+0x79],dl
  40caa6:	add    BYTE PTR [rax+0x0],dh
  40caa9:	add    BYTE PTR gs:[rcx],bl
  40caac:	or     BYTE PTR [rax],al
  40caae:	add    BYTE PTR [rdx],ch
  40cab0:	add    BYTE PTR ds:[rsi],bh
  40cab3:	add    BYTE PTR [rax+0x0],bh
  40cab6:	cmp    BYTE PTR [rax],al
  40cab8:	add    BYTE PTR ss:[rax+0x0],dl
  40cabc:	jb     0x40cabe
  40cabe:	outs   dx,DWORD PTR ds:[rsi]
  40cabf:	add    BYTE PTR [rbx+0x0],ah
  40cac2:	add    BYTE PTR gs:[rbx+0x0],dh
  40cac6:	jae    0x40cac8
  40cac8:	outs   dx,DWORD PTR ds:[rsi]
  40cac9:	add    BYTE PTR [rdx+0x0],dh
  40cacc:	add    BYTE PTR cs:[rdx+0x0],bl
  40cad0:	rex.WRXB add BYTE PTR [r10+0x0],r14b
  40cad4:	add    BYTE PTR fs:[rbp+0x0],ah
  40cad8:	jb     0x40cada
  40cada:	ret    
  40cadb:	or     BYTE PTR [rax],al
  40cadd:	add    BYTE PTR [rsi],ch
  40cadf:	(bad)  
  40cae0:	add    BYTE PTR [rbp+0x0],ch
  40cae3:	add    BYTE PTR fs:[rsi],dh
  40cae6:	add    BYTE PTR [rax+rax*1],dh
  40cae9:	push   rax
  40caea:	add    BYTE PTR [rdx+0x0],dh
  40caed:	outs   dx,DWORD PTR ds:[rsi]
  40caee:	add    BYTE PTR [rbx+0x0],ah
  40caf1:	add    BYTE PTR gs:[rbx+0x0],dh
  40caf5:	jae    0x40caf7
  40caf7:	outs   dx,DWORD PTR ds:[rsi]
  40caf8:	add    BYTE PTR [rdx+0x0],dh
  40cafb:	add    BYTE PTR cs:[rcx+0x0],al
  40caff:	jne    0x40cb01
  40cb01:	je     0x40cb03
  40cb03:	outs   dx,DWORD PTR ds:[rsi]
  40cb04:	add    BYTE PTR [rbx+0x0],dl
  40cb07:	imul   eax,DWORD PTR [rax],0x65007a
  40cb0d:	(bad)  
  40cb0e:	or     BYTE PTR [rax],al
  40cb10:	add    BYTE PTR [rcx+riz*2],ch
  40cb13:	add    BYTE PTR [rbp+0x0],ch
  40cb16:	add    BYTE PTR fs:[rsi],dh
  40cb19:	add    BYTE PTR [rax+rax*1],dh
  40cb1c:	push   rax
  40cb1d:	add    BYTE PTR [rdx+0x0],dh
  40cb20:	outs   dx,DWORD PTR ds:[rsi]
  40cb21:	add    BYTE PTR [rbx+0x0],ah
  40cb24:	add    BYTE PTR gs:[rbx+0x0],dh
  40cb28:	jae    0x40cb2a
  40cb2a:	outs   dx,DWORD PTR ds:[rsi]
  40cb2b:	add    BYTE PTR [rdx+0x0],dh
  40cb2e:	add    BYTE PTR cs:[rbp+0x0],al
  40cb32:	outs   dx,BYTE PTR ds:[rsi]
  40cb33:	add    BYTE PTR [rcx+0x0],ah
  40cb36:	(bad)  
  40cb37:	add    BYTE PTR [rax+rax*1+0x65],ch
  40cb3b:	add    BYTE PTR [rax+rax*1-0x38],ah
  40cb3f:	or     BYTE PTR [rax],al
  40cb41:	add    BYTE PTR [rcx+riz*2],ch
  40cb44:	add    BYTE PTR [rbp+0x0],ch
  40cb47:	add    BYTE PTR fs:[rsi],dh
  40cb4a:	add    BYTE PTR [rax+rax*1],dh
  40cb4d:	push   rax
  40cb4e:	add    BYTE PTR [rdx+0x0],dh
  40cb51:	outs   dx,DWORD PTR ds:[rsi]
  40cb52:	add    BYTE PTR [rbx+0x0],ah
  40cb55:	add    BYTE PTR gs:[rbx+0x0],dh
  40cb59:	jae    0x40cb5b
  40cb5b:	outs   dx,DWORD PTR ds:[rsi]
  40cb5c:	add    BYTE PTR [rdx+0x0],dh
  40cb5f:	add    BYTE PTR cs:[rcx+0x0],cl
  40cb63:	ins    DWORD PTR es:[rdi],dx
  40cb64:	add    BYTE PTR [rbp+0x0],ah
  40cb67:	rex.WRB add BYTE PTR [r15+0x0],r13b
  40cb6b:	add    BYTE PTR fs:[rbp+0x0],ah
  40cb6f:	retf   0x8
  40cb72:	add    BYTE PTR [rsi],ch
  40cb74:	(bad)  
  40cb75:	add    BYTE PTR [rbp+0x0],ch
  40cb78:	add    BYTE PTR fs:[rsi],dh
  40cb7b:	add    BYTE PTR [rax+rax*1],dh
  40cb7e:	push   rax
  40cb7f:	add    BYTE PTR [rdx+0x0],dh
  40cb82:	outs   dx,DWORD PTR ds:[rsi]
  40cb83:	add    BYTE PTR [rbx+0x0],ah
  40cb86:	add    BYTE PTR gs:[rbx+0x0],dh
  40cb8a:	jae    0x40cb8c
  40cb8c:	outs   dx,DWORD PTR ds:[rsi]
  40cb8d:	add    BYTE PTR [rdx+0x0],dh
  40cb90:	add    BYTE PTR cs:[rax+rax*1+0x6f],cl
  40cb95:	add    BYTE PTR [rbx+0x0],ah
  40cb98:	(bad)  
  40cb99:	add    BYTE PTR [rax+rax*1+0x69],dh
  40cb9d:	add    BYTE PTR [rdi+0x0],ch
  40cba0:	outs   dx,BYTE PTR ds:[rsi]
  40cba1:	add    BYTE PTR [rdx+0x9],dh
  40cba4:	add    BYTE PTR [rax],al
  40cba6:	sub    ah,BYTE PTR [rcx+0x0]
  40cba9:	ins    DWORD PTR es:[rdi],dx
  40cbaa:	add    BYTE PTR [rax+rax*1+0x36],ah
  40cbae:	add    BYTE PTR [rax+rax*1],dh
  40cbb1:	push   rax
  40cbb2:	add    BYTE PTR [rdx+0x0],dh
  40cbb5:	outs   dx,DWORD PTR ds:[rsi]
  40cbb6:	add    BYTE PTR [rbx+0x0],ah
  40cbb9:	add    BYTE PTR gs:[rbx+0x0],dh
  40cbbd:	jae    0x40cbbf
  40cbbf:	outs   dx,DWORD PTR ds:[rsi]
  40cbc0:	add    BYTE PTR [rdx+0x0],dh
  40cbc3:	add    BYTE PTR cs:[rbp+0x0],cl
  40cbc7:	(bad)  
  40cbc8:	add    BYTE PTR [rdx+0x0],dh
  40cbcb:	add    BYTE PTR [ecx+0x0],ch
  40cbcf:	outs   dx,BYTE PTR ds:[rsi]
  40cbd0:	add    BYTE PTR [rsi],cl
  40cbd2:	or     al,BYTE PTR [rax]
  40cbd4:	add    BYTE PTR [rsi],ah
  40cbd6:	(bad)  
  40cbd7:	add    BYTE PTR [rbp+0x0],ch
  40cbda:	add    BYTE PTR fs:[rsi],dh
  40cbdd:	add    BYTE PTR [rax+rax*1],dh
  40cbe0:	push   rax
  40cbe1:	add    BYTE PTR [rdx+0x0],dh
  40cbe4:	outs   dx,DWORD PTR ds:[rsi]
  40cbe5:	add    BYTE PTR [rbx+0x0],ah
  40cbe8:	add    BYTE PTR gs:[rbx+0x0],dh
  40cbec:	jae    0x40cbee
  40cbee:	outs   dx,DWORD PTR ds:[rsi]
  40cbef:	add    BYTE PTR [rdx+0x0],dh
  40cbf2:	add    BYTE PTR cs:[rbx+0x0],dl
  40cbf6:	imul   eax,DWORD PTR [rax],0x65007a
  40cbfc:	loop   0x40cc08
  40cbfe:	add    BYTE PTR [rax],al
  40cc00:	cs (bad) 
  40cc02:	add    BYTE PTR [rbp+0x0],ch
  40cc05:	add    BYTE PTR fs:[rsi],dh
  40cc08:	add    BYTE PTR [rax+rax*1],dh
  40cc0b:	push   rax
  40cc0c:	add    BYTE PTR [rdx+0x0],dh
  40cc0f:	outs   dx,DWORD PTR ds:[rsi]
  40cc10:	add    BYTE PTR [rbx+0x0],ah
  40cc13:	add    BYTE PTR gs:[rbx+0x0],dh
  40cc17:	jae    0x40cc19
  40cc19:	outs   dx,DWORD PTR ds:[rsi]
  40cc1a:	add    BYTE PTR [rdx+0x0],dh
  40cc1d:	add    BYTE PTR cs:[rax+rax*1+0x61],dl
  40cc22:	add    BYTE PTR [rdx+0x0],ah
  40cc25:	rex.WB add BYTE PTR [r14+0x0],bpl
  40cc29:	add    BYTE PTR fs:[rbp+0x0],ah
  40cc2d:	js     0x40cc2f
  40cc2f:	xchg   BYTE PTR [rbx],cl
  40cc31:	add    BYTE PTR [rax],al
  40cc33:	es (bad) 
  40cc35:	add    BYTE PTR [rbp+0x0],ch
  40cc38:	add    BYTE PTR fs:[rsi],dh
  40cc3b:	add    BYTE PTR [rax+rax*1],dh
  40cc3e:	push   rax
  40cc3f:	add    BYTE PTR [rdx+0x0],dh
  40cc42:	outs   dx,DWORD PTR ds:[rsi]
  40cc43:	add    BYTE PTR [rbx+0x0],ah
  40cc46:	add    BYTE PTR gs:[rbx+0x0],dh
  40cc4a:	jae    0x40cc4c
  40cc4c:	outs   dx,DWORD PTR ds:[rsi]
  40cc4d:	add    BYTE PTR [rdx+0x0],dh
  40cc50:	add    BYTE PTR cs:[rax+rax*1+0x65],dl
  40cc55:	add    BYTE PTR [rax+0x0],bh
  40cc58:	je     0x40cc5a
  40cc5a:	mov    ecx,DWORD PTR [rbx]
  40cc5c:	add    BYTE PTR [rax],al
  40cc5e:	(bad)  
  40cc5f:	(bad)  
  40cc60:	add    BYTE PTR [rdx+0x0],dh
  40cc63:	outs   dx,DWORD PTR ds:[rsi]
  40cc64:	add    BYTE PTR [rdi+0x0],dh
  40cc67:	jae    0x40cc69
  40cc69:	add    BYTE PTR gs:[rsi],ch
  40cc6c:	add    BYTE PTR [rcx+0x0],al
  40cc6f:	jne    0x40cc71
  40cc71:	je     0x40cc73
  40cc73:	outs   dx,DWORD PTR ds:[rsi]
  40cc74:	add    BYTE PTR [rbx+0x0],dl
  40cc77:	imul   eax,DWORD PTR [rax],0x65007a
  40cc7d:	xchg   ecx,eax
  40cc7e:	or     eax,DWORD PTR [rax]
  40cc80:	add    BYTE PTR [rsi],ah
  40cc82:	(bad)  
  40cc83:	add    BYTE PTR [rdx+0x0],dh
  40cc86:	outs   dx,DWORD PTR ds:[rsi]
  40cc87:	add    BYTE PTR [rdi+0x0],dh
  40cc8a:	jae    0x40cc8c
  40cc8c:	add    BYTE PTR gs:[rsi],ch
  40cc8f:	add    BYTE PTR [rcx+0x0],al
  40cc92:	jne    0x40cc94
  40cc94:	je     0x40cc96
  40cc96:	outs   dx,DWORD PTR ds:[rsi]
  40cc97:	add    BYTE PTR [rbx+0x0],dl
  40cc9a:	imul   eax,DWORD PTR [rax],0x65007a
  40cca0:	rex.WRB add BYTE PTR [r15+0x0],r13b
  40cca4:	add    BYTE PTR fs:[rbp+0x0],ah
  40cca8:	xchg   ebx,eax
  40cca9:	or     eax,DWORD PTR [rax]
  40ccab:	add    BYTE PTR [rdx+riz*2],bl
  40ccae:	add    BYTE PTR [rdx+0x0],dh
  40ccb1:	outs   dx,DWORD PTR ds:[rsi]
  40ccb2:	add    BYTE PTR [rdi+0x0],dh
  40ccb5:	jae    0x40ccb7
  40ccb7:	add    BYTE PTR gs:[rsi],ch
  40ccba:	add    BYTE PTR [rcx+0x0],cl
  40ccbd:	ins    DWORD PTR es:[rdi],dx
  40ccbe:	add    BYTE PTR [rbp+0x0],ah
  40ccc1:	rex.WRB add BYTE PTR [r15+0x0],r13b
  40ccc5:	add    BYTE PTR fs:[rbp+0x0],ah
  40ccc9:	or     al,0x0
  40cccc:	add    BYTE PTR [rsi],bl
  40ccce:	(bad)  
  40cccf:	add    BYTE PTR [rdx+0x0],dh
  40ccd2:	outs   dx,DWORD PTR ds:[rsi]
  40ccd3:	add    BYTE PTR [rdi+0x0],dh
  40ccd6:	jae    0x40ccd8
  40ccd8:	add    BYTE PTR gs:[rsi],ch
  40ccdb:	add    BYTE PTR [rax+rax*1+0x6f],cl
  40ccdf:	add    BYTE PTR [rbx+0x0],ah
  40cce2:	(bad)  
  40cce3:	add    BYTE PTR [rax+rax*1+0x69],dh
  40cce7:	add    BYTE PTR [rdi+0x0],ch
  40ccea:	outs   dx,BYTE PTR ds:[rsi]
  40cceb:	add    al,ch
  40cced:	or     al,0x0
  40ccef:	add    BYTE PTR [rdx],bl
  40ccf1:	(bad)  
  40ccf2:	add    BYTE PTR [rdx+0x0],dh
  40ccf5:	outs   dx,DWORD PTR ds:[rsi]
  40ccf6:	add    BYTE PTR [rdi+0x0],dh
  40ccf9:	jae    0x40ccfb
  40ccfb:	add    BYTE PTR gs:[rsi],ch
  40ccfe:	add    BYTE PTR [rbp+0x0],cl
  40cd01:	(bad)  
  40cd02:	add    BYTE PTR [rdx+0x0],dh
  40cd05:	add    BYTE PTR [ecx+0x0],ch
  40cd09:	outs   dx,BYTE PTR ds:[rsi]
  40cd0a:	add    BYTE PTR [rbp+rcx*1+0x62160000],al
  40cd11:	add    BYTE PTR [rdx+0x0],dh
  40cd14:	outs   dx,DWORD PTR ds:[rsi]
  40cd15:	add    BYTE PTR [rdi+0x0],dh
  40cd18:	jae    0x40cd1a
  40cd1a:	add    BYTE PTR gs:[rsi],ch
  40cd1d:	add    BYTE PTR [rbx+0x0],dl
  40cd20:	imul   eax,DWORD PTR [rax],0x65007a
  40cd26:	pop    rax
  40cd27:	(bad)  
  40cd28:	add    BYTE PTR [rax],al
  40cd2a:	(bad)  
  40cd2b:	(bad)  
  40cd2c:	add    BYTE PTR [rdx+0x0],dh
  40cd2f:	outs   dx,DWORD PTR ds:[rsi]
  40cd30:	add    BYTE PTR [rdi+0x0],dh
  40cd33:	jae    0x40cd35
  40cd35:	add    BYTE PTR gs:[rsi],ch
  40cd38:	add    BYTE PTR [rax+rax*1+0x61],dl
  40cd3c:	add    BYTE PTR [rdx+0x0],ah
  40cd3f:	rex.WB add BYTE PTR [r14+0x0],bpl
  40cd43:	add    BYTE PTR fs:[rbp+0x0],ah
  40cd47:	js     0x40cd49
  40cd49:	cld    
  40cd4a:	(bad)  
  40cd4b:	add    BYTE PTR [rax],al
  40cd4d:	(bad)  
  40cd4e:	(bad)  
  40cd4f:	add    BYTE PTR [rdx+0x0],dh
  40cd52:	outs   dx,DWORD PTR ds:[rsi]
  40cd53:	add    BYTE PTR [rdi+0x0],dh
  40cd56:	jae    0x40cd58
  40cd58:	add    BYTE PTR gs:[rsi],ch
  40cd5b:	add    BYTE PTR [rax+rax*1+0x65],dl
  40cd5f:	add    BYTE PTR [rax+0x0],bh
  40cd62:	je     0x40cd64
  40cd64:	add    DWORD PTR [rdi],ecx
  40cd66:	add    BYTE PTR [rax],al
  40cd68:	sub    al,0x69
  40cd6a:	add    BYTE PTR [rcx+0x0],ah
  40cd6d:	add    BYTE PTR ss:[rax+rax*1],dh
  40cd71:	push   rax
  40cd72:	add    BYTE PTR [rdx+0x0],dh
  40cd75:	outs   dx,DWORD PTR ds:[rsi]
  40cd76:	add    BYTE PTR [rbx+0x0],ah
  40cd79:	add    BYTE PTR gs:[rbx+0x0],dh
  40cd7d:	jae    0x40cd7f
  40cd7f:	outs   dx,DWORD PTR ds:[rsi]
  40cd80:	add    BYTE PTR [rdx+0x0],dh
  40cd83:	add    BYTE PTR cs:[rcx+0x0],al
  40cd87:	jne    0x40cd89
  40cd89:	je     0x40cd8b
  40cd8b:	outs   dx,DWORD PTR ds:[rsi]
  40cd8c:	add    BYTE PTR [rbx+0x0],dl
  40cd8f:	imul   eax,DWORD PTR [rax],0x65007a
  40cd95:	(bad)  
  40cd96:	sldt   WORD PTR [rax]
  40cd99:	sub    ch,BYTE PTR [rcx+0x0]
  40cd9c:	(bad)  
  40cd9d:	add    BYTE PTR [rsi],dh
  40cd9f:	add    BYTE PTR [rax+rax*1],dh
  40cda2:	push   rax
  40cda3:	add    BYTE PTR [rdx+0x0],dh
  40cda6:	outs   dx,DWORD PTR ds:[rsi]
  40cda7:	add    BYTE PTR [rbx+0x0],ah
  40cdaa:	add    BYTE PTR gs:[rbx+0x0],dh
  40cdae:	jae    0x40cdb0
  40cdb0:	outs   dx,DWORD PTR ds:[rsi]
  40cdb1:	add    BYTE PTR [rdx+0x0],dh
  40cdb4:	add    BYTE PTR cs:[rbp+0x0],al
  40cdb8:	outs   dx,BYTE PTR ds:[rsi]
  40cdb9:	add    BYTE PTR [rcx+0x0],ah
  40cdbc:	(bad)  
  40cdbd:	add    BYTE PTR [rax+rax*1+0x65],ch
  40cdc1:	add    BYTE PTR [rax+rax*1+0x8],ah
  40cdc5:	sldt   WORD PTR [rax]
  40cdc8:	sub    ch,BYTE PTR [rcx+0x0]
  40cdcb:	(bad)  
  40cdcc:	add    BYTE PTR [rsi],dh
  40cdce:	add    BYTE PTR [rax+rax*1],dh
  40cdd1:	push   rax
  40cdd2:	add    BYTE PTR [rdx+0x0],dh
  40cdd5:	outs   dx,DWORD PTR ds:[rsi]
  40cdd6:	add    BYTE PTR [rbx+0x0],ah
  40cdd9:	add    BYTE PTR gs:[rbx+0x0],dh
  40cddd:	jae    0x40cddf
  40cddf:	outs   dx,DWORD PTR ds:[rsi]
  40cde0:	add    BYTE PTR [rdx+0x0],dh
  40cde3:	add    BYTE PTR cs:[rcx+0x0],cl
  40cde7:	ins    DWORD PTR es:[rdi],dx
  40cde8:	add    BYTE PTR [rbp+0x0],ah
  40cdeb:	rex.WRB add BYTE PTR [r15+0x0],r13b
  40cdef:	add    BYTE PTR fs:[rbp+0x0],ah
  40cdf3:	or     cl,BYTE PTR [rdi]
  40cdf5:	add    BYTE PTR [rax],al
  40cdf7:	sub    al,0x69
  40cdf9:	add    BYTE PTR [rcx+0x0],ah
  40cdfc:	add    BYTE PTR ss:[rax+rax*1],dh
  40ce00:	push   rax
  40ce01:	add    BYTE PTR [rdx+0x0],dh
  40ce04:	outs   dx,DWORD PTR ds:[rsi]
  40ce05:	add    BYTE PTR [rbx+0x0],ah
  40ce08:	add    BYTE PTR gs:[rbx+0x0],dh
  40ce0c:	jae    0x40ce0e
  40ce0e:	outs   dx,DWORD PTR ds:[rsi]
  40ce0f:	add    BYTE PTR [rdx+0x0],dh
  40ce12:	add    BYTE PTR cs:[rax+rax*1+0x6f],cl
  40ce17:	add    BYTE PTR [rbx+0x0],ah
  40ce1a:	(bad)  
  40ce1b:	add    BYTE PTR [rax+rax*1+0x69],dh
  40ce1f:	add    BYTE PTR [rdi+0x0],ch
  40ce22:	outs   dx,BYTE PTR ds:[rsi]
  40ce23:	add    BYTE PTR [rdx+0x2800000f],dh
  40ce29:	imul   eax,DWORD PTR [rax],0x360061
  40ce2f:	xor    al,0x0
  40ce31:	push   rax
  40ce32:	add    BYTE PTR [rdx+0x0],dh
  40ce35:	outs   dx,DWORD PTR ds:[rsi]
  40ce36:	add    BYTE PTR [rbx+0x0],ah
  40ce39:	add    BYTE PTR gs:[rbx+0x0],dh
  40ce3d:	jae    0x40ce3f
  40ce3f:	outs   dx,DWORD PTR ds:[rsi]
  40ce40:	add    BYTE PTR [rdx+0x0],dh
  40ce43:	add    BYTE PTR cs:[rbp+0x0],cl
  40ce47:	(bad)  
  40ce48:	add    BYTE PTR [rdx+0x0],dh
  40ce4b:	add    BYTE PTR [ecx+0x0],ch
  40ce4f:	outs   dx,BYTE PTR ds:[rsi]
  40ce50:	add    BYTE PTR [rsi+0x10],cl
  40ce53:	add    BYTE PTR [rax],al
  40ce55:	and    al,0x69
  40ce57:	add    BYTE PTR [rcx+0x0],ah
  40ce5a:	add    BYTE PTR ss:[rax+rax*1],dh
  40ce5e:	push   rax
  40ce5f:	add    BYTE PTR [rdx+0x0],dh
  40ce62:	outs   dx,DWORD PTR ds:[rsi]
  40ce63:	add    BYTE PTR [rbx+0x0],ah
  40ce66:	add    BYTE PTR gs:[rbx+0x0],dh
  40ce6a:	jae    0x40ce6c
  40ce6c:	outs   dx,DWORD PTR ds:[rsi]
  40ce6d:	add    BYTE PTR [rdx+0x0],dh
  40ce70:	add    BYTE PTR cs:[rbx+0x0],dl
  40ce74:	imul   eax,DWORD PTR [rax],0x65007a
  40ce7a:	and    dl,BYTE PTR [rcx]
  40ce7c:	add    BYTE PTR [rax],al
  40ce7e:	sub    al,0x69
  40ce80:	add    BYTE PTR [rcx+0x0],ah
  40ce83:	add    BYTE PTR ss:[rax+rax*1],dh
  40ce87:	push   rax
  40ce88:	add    BYTE PTR [rdx+0x0],dh
  40ce8b:	outs   dx,DWORD PTR ds:[rsi]
  40ce8c:	add    BYTE PTR [rbx+0x0],ah
  40ce8f:	add    BYTE PTR gs:[rbx+0x0],dh
  40ce93:	jae    0x40ce95
  40ce95:	outs   dx,DWORD PTR ds:[rsi]
  40ce96:	add    BYTE PTR [rdx+0x0],dh
  40ce99:	add    BYTE PTR cs:[rax+rax*1+0x61],dl
  40ce9e:	add    BYTE PTR [rdx+0x0],ah
  40cea1:	rex.WB add BYTE PTR [r14+0x0],bpl
  40cea5:	add    BYTE PTR fs:[rbp+0x0],ah
  40cea9:	js     0x40ceab
  40ceab:	(bad)  
  40ceac:	adc    DWORD PTR [rax],eax
  40ceae:	add    BYTE PTR [rcx+rbp*2],ah
  40ceb1:	add    BYTE PTR [rcx+0x0],ah
  40ceb4:	add    BYTE PTR ss:[rax+rax*1],dh
  40ceb8:	push   rax
  40ceb9:	add    BYTE PTR [rdx+0x0],dh
  40cebc:	outs   dx,DWORD PTR ds:[rsi]
  40cebd:	add    BYTE PTR [rbx+0x0],ah
  40cec0:	add    BYTE PTR gs:[rbx+0x0],dh
  40cec4:	jae    0x40cec6
  40cec6:	outs   dx,DWORD PTR ds:[rsi]
  40cec7:	add    BYTE PTR [rdx+0x0],dh
  40ceca:	add    BYTE PTR cs:[rax+rax*1+0x65],dl
  40cecf:	add    BYTE PTR [rax+0x0],bh
  40ced2:	je     0x40ced4
  40ced4:	retf   
  40ced5:	adc    DWORD PTR [rax],eax
  40ced7:	add    BYTE PTR [rax],ch
  40ced9:	imul   eax,DWORD PTR [rax],0x73006e
  40cedf:	je     0x40cee1
  40cee1:	jb     0x40cee3
  40cee3:	jne    0x40cee5
  40cee5:	movsxd eax,DWORD PTR [rax]
  40cee7:	je     0x40cee9
  40cee9:	imul   eax,DWORD PTR [rax],0x6e006f
  40ceef:	jae    0x40cef1
  40cef1:	rex.X add BYTE PTR [rdi+0x0],bpl
  40cef5:	js     0x40cef7
  40cef7:	add    BYTE PTR cs:[rax+rax*1+0x6f],al
  40cefc:	add    BYTE PTR [rbx+0x0],ah
  40ceff:	imul   eax,DWORD PTR [rax],0xffffffd2
  40cf02:	adc    DWORD PTR [rax],eax
  40cf04:	add    BYTE PTR [rax],dh
  40cf06:	imul   eax,DWORD PTR [rax],0x73006e
  40cf0c:	je     0x40cf0e
  40cf0e:	jb     0x40cf10
  40cf10:	jne    0x40cf12
  40cf12:	movsxd eax,DWORD PTR [rax]
  40cf14:	je     0x40cf16
  40cf16:	imul   eax,DWORD PTR [rax],0x6e006f
  40cf1c:	jae    0x40cf1e
  40cf1e:	rex.X add BYTE PTR [rdi+0x0],bpl
  40cf22:	js     0x40cf24
  40cf24:	add    BYTE PTR cs:[rax+rax*1+0x6f],cl
  40cf29:	add    BYTE PTR [rbx+0x0],ah
  40cf2c:	(bad)  
  40cf2d:	add    BYTE PTR [rax+rax*1+0x69],dh
  40cf31:	add    BYTE PTR [rdi+0x0],ch
  40cf34:	outs   dx,BYTE PTR ds:[rsi]
  40cf35:	add    BYTE PTR [rdx+rdx*1+0x0],bh
  40cf39:	add    BYTE PTR [rcx+rbp*2],ch
  40cf3c:	add    BYTE PTR [rsi+0x0],ch
  40cf3f:	jae    0x40cf41
  40cf41:	je     0x40cf43
  40cf43:	jb     0x40cf45
  40cf45:	jne    0x40cf47
  40cf47:	movsxd eax,DWORD PTR [rax]
  40cf49:	je     0x40cf4b
  40cf4b:	imul   eax,DWORD PTR [rax],0x6e006f
  40cf51:	jae    0x40cf53
  40cf53:	rex.X add BYTE PTR [rdi+0x0],bpl
  40cf57:	js     0x40cf59
  40cf59:	add    BYTE PTR cs:[rbp+0x0],cl
  40cf5d:	(bad)  
  40cf5e:	add    BYTE PTR [rdx+0x0],dh
  40cf61:	add    BYTE PTR [ecx+0x0],ch
  40cf65:	outs   dx,BYTE PTR ds:[rsi]
  40cf66:	add    BYTE PTR [rax],bl
  40cf68:	adc    eax,DWORD PTR [rax]
  40cf6a:	add    BYTE PTR [rdx],dh
  40cf6c:	imul   eax,DWORD PTR [rax],0x73006e
  40cf72:	je     0x40cf74
  40cf74:	jb     0x40cf76
  40cf76:	jne    0x40cf78
  40cf78:	movsxd eax,DWORD PTR [rax]
  40cf7a:	je     0x40cf7c
  40cf7c:	imul   eax,DWORD PTR [rax],0x6e006f
  40cf82:	jae    0x40cf84
  40cf84:	rex.X add BYTE PTR [rdi+0x0],bpl
  40cf88:	js     0x40cf8a
  40cf8a:	add    BYTE PTR cs:[rbp+0x0],cl
  40cf8e:	jne    0x40cf90
  40cf90:	ins    BYTE PTR es:[rdi],dx
  40cf91:	add    BYTE PTR [rax+rax*1+0x69],dh
  40cf95:	add    BYTE PTR [rax+rax*1+0x69],ch
  40cf99:	add    BYTE PTR [rsi+0x0],ch
  40cf9c:	gs add ah,ch
  40cf9f:	adc    eax,DWORD PTR [rax]
  40cfa1:	add    BYTE PTR [rax],ch
  40cfa3:	imul   eax,DWORD PTR [rax],0x73006e
  40cfa9:	je     0x40cfab
  40cfab:	jb     0x40cfad
  40cfad:	jne    0x40cfaf
  40cfaf:	movsxd eax,DWORD PTR [rax]
  40cfb1:	je     0x40cfb3
  40cfb3:	imul   eax,DWORD PTR [rax],0x6e006f
  40cfb9:	jae    0x40cfbb
  40cfbb:	rex.X add BYTE PTR [rdi+0x0],bpl
  40cfbf:	js     0x40cfc1
  40cfc1:	add    BYTE PTR cs:[rbx+0x0],dl
  40cfc5:	imul   eax,DWORD PTR [rax],0x65007a
  40cfcb:	out    dx,al
  40cfcc:	adc    eax,DWORD PTR [rax]
  40cfce:	add    BYTE PTR [rax],dh
  40cfd0:	imul   eax,DWORD PTR [rax],0x73006e
  40cfd6:	je     0x40cfd8
  40cfd8:	jb     0x40cfda
  40cfda:	jne    0x40cfdc
  40cfdc:	movsxd eax,DWORD PTR [rax]
  40cfde:	je     0x40cfe0
  40cfe0:	imul   eax,DWORD PTR [rax],0x6e006f
  40cfe6:	jae    0x40cfe8
  40cfe8:	rex.X add BYTE PTR [rdi+0x0],bpl
  40cfec:	js     0x40cfee
  40cfee:	add    BYTE PTR cs:[rax+rax*1+0x61],dl
  40cff3:	add    BYTE PTR [rdx+0x0],ah
  40cff6:	rex.WB add BYTE PTR [r14+0x0],bpl
  40cffa:	add    BYTE PTR fs:[rbp+0x0],ah
  40cffe:	js     0x40d000
  40d000:	xchg   edx,eax
  40d001:	adc    al,0x0
  40d003:	add    BYTE PTR [rsp+rbp*2],ah
  40d006:	add    BYTE PTR [rcx+0x0],ah
  40d009:	jns    0x40d00b
  40d00b:	outs   dx,DWORD PTR ds:[rsi]
  40d00c:	add    BYTE PTR [rbp+0x0],dh
  40d00f:	je     0x40d011
  40d011:	add    BYTE PTR cs:[rbx+0x0],al
  40d015:	outs   dx,DWORD PTR ds:[rsi]
  40d016:	add    BYTE PTR [rax+rax*1+0x75],ch
  40d01a:	add    BYTE PTR [rbp+0x0],ch
  40d01d:	outs   dx,BYTE PTR ds:[rsi]
  40d01e:	add    BYTE PTR [rbx+0x0],al
  40d021:	outs   dx,DWORD PTR ds:[rsi]
  40d022:	add    BYTE PTR [rbp+0x0],dh
  40d025:	outs   dx,BYTE PTR ds:[rsi]
  40d026:	add    BYTE PTR [rax+rax*1-0x69],dh
  40d02a:	adc    al,0x0
  40d02c:	add    BYTE PTR [rsi],dl
  40d02e:	ins    BYTE PTR es:[rdi],dx
  40d02f:	add    BYTE PTR [rcx+0x0],ah
  40d032:	jns    0x40d034
  40d034:	outs   dx,DWORD PTR ds:[rsi]
  40d035:	add    BYTE PTR [rbp+0x0],dh
  40d038:	je     0x40d03a
  40d03a:	add    BYTE PTR cs:[rax+rax*1+0x6f],al
  40d03f:	add    BYTE PTR [rbx+0x0],ah
  40d042:	imul   eax,DWORD PTR [rax],0xffffff9c
  40d045:	adc    al,0x0
  40d047:	add    BYTE PTR [rdx],ch
  40d049:	ins    BYTE PTR es:[rdi],dx
  40d04a:	add    BYTE PTR [rcx+0x0],ah
  40d04d:	jns    0x40d04f
  40d04f:	outs   dx,DWORD PTR ds:[rsi]
  40d050:	add    BYTE PTR [rbp+0x0],dh
  40d053:	je     0x40d055
  40d055:	add    BYTE PTR cs:[rax+rax*1+0x61],cl
  40d05a:	add    BYTE PTR [rcx+0x0],bh
  40d05d:	outs   dx,DWORD PTR ds:[rsi]
  40d05e:	add    BYTE PTR [rbp+0x0],dh
  40d061:	je     0x40d063
  40d063:	push   rbx
  40d064:	add    BYTE PTR [rbp+0x0],ah
  40d067:	je     0x40d069
  40d069:	je     0x40d06b
  40d06b:	imul   eax,DWORD PTR [rax],0x67006e
  40d071:	jae    0x40d073
  40d073:	rex.RX adc eax,0x6c1e0000
  40d079:	add    BYTE PTR [rcx+0x0],ah
  40d07c:	jns    0x40d07e
  40d07e:	outs   dx,DWORD PTR ds:[rsi]
  40d07f:	add    BYTE PTR [rbp+0x0],dh
  40d082:	je     0x40d084
  40d084:	add    BYTE PTR cs:[rax+rax*1+0x6f],cl
  40d089:	add    BYTE PTR [rbx+0x0],ah
  40d08c:	(bad)  
  40d08d:	add    BYTE PTR [rax+rax*1+0x69],dh
  40d091:	add    BYTE PTR [rdi+0x0],ch
  40d094:	outs   dx,BYTE PTR ds:[rsi]
  40d095:	add    BYTE PTR [rdx+0x19],bl
  40d098:	add    BYTE PTR [rax],al
  40d09a:	(bad)  
  40d09b:	ins    BYTE PTR es:[rdi],dx
  40d09c:	add    BYTE PTR [rcx+0x0],ah
  40d09f:	jns    0x40d0a1
  40d0a1:	outs   dx,DWORD PTR ds:[rsi]
  40d0a2:	add    BYTE PTR [rbp+0x0],dh
  40d0a5:	je     0x40d0a7
  40d0a7:	add    BYTE PTR cs:[rdx+0x0],dl
  40d0ab:	outs   dx,DWORD PTR ds:[rsi]
  40d0ac:	add    BYTE PTR [rdi+0x0],dh
  40d0af:	rex.XB add BYTE PTR [r15+0x0],bpl
  40d0b3:	jne    0x40d0b5
  40d0b5:	outs   dx,BYTE PTR ds:[rsi]
  40d0b6:	add    BYTE PTR [rax+rax*1-0xa],dh
  40d0ba:	sbb    DWORD PTR [rax],eax
  40d0bc:	add    BYTE PTR [rsi],dl
  40d0be:	ins    BYTE PTR es:[rdi],dx
  40d0bf:	add    BYTE PTR [rcx+0x0],ah
  40d0c2:	jns    0x40d0c4
  40d0c4:	outs   dx,DWORD PTR ds:[rsi]
  40d0c5:	add    BYTE PTR [rbp+0x0],dh
  40d0c8:	je     0x40d0ca
  40d0ca:	add    BYTE PTR cs:[rbx+0x0],dl
  40d0ce:	imul   eax,DWORD PTR [rax],0x65007a
  40d0d4:	sti    
  40d0d5:	sbb    DWORD PTR [rax],eax
  40d0d7:	add    BYTE PTR [rsi],bl
  40d0d9:	ins    BYTE PTR es:[rdi],dx
  40d0da:	add    BYTE PTR [rcx+0x0],ah
  40d0dd:	jns    0x40d0df
  40d0df:	outs   dx,DWORD PTR ds:[rsi]
  40d0e0:	add    BYTE PTR [rbp+0x0],dh
  40d0e3:	je     0x40d0e5
  40d0e5:	add    BYTE PTR cs:[rax+rax*1+0x61],dl
  40d0ea:	add    BYTE PTR [rdx+0x0],ah
  40d0ed:	rex.WB add BYTE PTR [r14+0x0],bpl
  40d0f1:	add    BYTE PTR fs:[rbp+0x0],ah
  40d0f5:	js     0x40d0f7
  40d0f7:	lahf   
  40d0f8:	sbb    al,BYTE PTR [rax]
  40d0fa:	add    BYTE PTR [rax+rsi*2],ah
  40d0fd:	add    BYTE PTR [rcx+0x0],ah
  40d100:	je     0x40d102
  40d102:	push   0x61004c00
  40d107:	add    BYTE PTR [rdx+0x0],ah
  40d10a:	add    BYTE PTR gs:[rax+rax*1+0x2e],ch
  40d10f:	add    BYTE PTR [rcx+0x0],al
  40d112:	jne    0x40d114
  40d114:	je     0x40d116
  40d116:	outs   dx,DWORD PTR ds:[rsi]
  40d117:	add    BYTE PTR [rbx+0x0],dl
  40d11a:	imul   eax,DWORD PTR [rax],0x65007a
  40d120:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40d121:	sbb    al,BYTE PTR [rax]
  40d123:	add    BYTE PTR [rdx],ah
  40d125:	jo     0x40d127
  40d127:	(bad)  
  40d128:	add    BYTE PTR [rax+rax*1+0x68],dh
  40d12c:	add    BYTE PTR [rax+rax*1+0x61],cl
  40d130:	add    BYTE PTR [rdx+0x0],ah
  40d133:	add    BYTE PTR gs:[rax+rax*1+0x2e],ch
  40d138:	add    BYTE PTR [rcx+0x0],cl
  40d13b:	ins    DWORD PTR es:[rdi],dx
  40d13c:	add    BYTE PTR [rbp+0x0],ah
  40d13f:	rex.WRB add BYTE PTR [r15+0x0],r13b
  40d143:	add    BYTE PTR fs:[rbp+0x0],ah
  40d147:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40d148:	sbb    al,BYTE PTR [rax]
  40d14a:	add    BYTE PTR [rax+rsi*2],ah
  40d14d:	add    BYTE PTR [rcx+0x0],ah
  40d150:	je     0x40d152
  40d152:	push   0x61004c00
  40d157:	add    BYTE PTR [rdx+0x0],ah
  40d15a:	add    BYTE PTR gs:[rax+rax*1+0x2e],ch
  40d15f:	add    BYTE PTR [rax+rax*1+0x6f],cl
  40d163:	add    BYTE PTR [rbx+0x0],ah
  40d166:	(bad)  
  40d167:	add    BYTE PTR [rax+rax*1+0x69],dh
  40d16b:	add    BYTE PTR [rdi+0x0],ch
  40d16e:	outs   dx,BYTE PTR ds:[rsi]
  40d16f:	add    BYTE PTR [rsi+0x1b],cl
  40d172:	add    BYTE PTR [rax],al
  40d174:	and    BYTE PTR [rax+0x0],dh
  40d177:	(bad)  
  40d178:	add    BYTE PTR [rax+rax*1+0x68],dh
  40d17c:	add    BYTE PTR [rax+rax*1+0x61],cl
  40d180:	add    BYTE PTR [rdx+0x0],ah
  40d183:	add    BYTE PTR gs:[rax+rax*1+0x2e],ch
  40d188:	add    BYTE PTR [rbp+0x0],cl
  40d18b:	(bad)  
  40d18c:	add    BYTE PTR [rdx+0x0],dh
  40d18f:	add    BYTE PTR [ecx+0x0],ch
  40d193:	outs   dx,BYTE PTR ds:[rsi]
  40d194:	add    dl,ch
  40d196:	sbb    eax,DWORD PTR [rax]
  40d198:	add    BYTE PTR [rax+rsi*2],bl
  40d19b:	add    BYTE PTR [rcx+0x0],ah
  40d19e:	je     0x40d1a0
  40d1a0:	push   0x61004c00
  40d1a5:	add    BYTE PTR [rdx+0x0],ah
  40d1a8:	add    BYTE PTR gs:[rax+rax*1+0x2e],ch
  40d1ad:	add    BYTE PTR [rbx+0x0],dl
  40d1b0:	imul   eax,DWORD PTR [rax],0x65007a
  40d1b6:	mov    esi,0x2400001c
  40d1bb:	jo     0x40d1bd
  40d1bd:	(bad)  
  40d1be:	add    BYTE PTR [rax+rax*1+0x68],dh
  40d1c2:	add    BYTE PTR [rax+rax*1+0x61],cl
  40d1c6:	add    BYTE PTR [rdx+0x0],ah
  40d1c9:	add    BYTE PTR gs:[rax+rax*1+0x2e],ch
  40d1ce:	add    BYTE PTR [rax+rax*1+0x61],dl
  40d1d2:	add    BYTE PTR [rdx+0x0],ah
  40d1d5:	rex.WB add BYTE PTR [r14+0x0],bpl
  40d1d9:	add    BYTE PTR fs:[rbp+0x0],ah
  40d1dd:	js     0x40d1df
  40d1df:	(bad)  
  40d1e0:	sbb    eax,0x701c0000
  40d1e5:	add    BYTE PTR [rcx+0x0],ah
  40d1e8:	je     0x40d1ea
  40d1ea:	push   0x61004c00
  40d1ef:	add    BYTE PTR [rdx+0x0],ah
  40d1f2:	add    BYTE PTR gs:[rax+rax*1+0x2e],ch
  40d1f7:	add    BYTE PTR [rax+rax*1+0x65],dl
  40d1fb:	add    BYTE PTR [rax+0x0],bh
  40d1fe:	je     0x40d200
  40d200:	addr32 sbb eax,0x702e0000
  40d206:	add    BYTE PTR [rdx+0x0],dh
  40d209:	outs   dx,DWORD PTR ds:[rsi]
  40d20a:	add    BYTE PTR [rbx+0x0],ah
  40d20d:	add    BYTE PTR gs:[rbx+0x0],dh
  40d211:	jae    0x40d213
  40d213:	outs   dx,DWORD PTR ds:[rsi]
  40d214:	add    BYTE PTR [rdx+0x0],dh
  40d217:	rex.WR add BYTE PTR [rcx+0x0],r12b
  40d21b:	(bad)  
  40d21c:	add    BYTE PTR [rbp+0x0],ah
  40d21f:	ins    BYTE PTR es:[rdi],dx
  40d220:	add    BYTE PTR [rsi],ch
  40d222:	add    BYTE PTR [rcx+0x0],al
  40d225:	jne    0x40d227
  40d227:	je     0x40d229
  40d229:	outs   dx,DWORD PTR ds:[rsi]
  40d22a:	add    BYTE PTR [rbx+0x0],dl
  40d22d:	imul   eax,DWORD PTR [rax],0x65007a
  40d233:	mov    WORD PTR [rip+0x702c0000],ds        # 0x706cd239
  40d239:	add    BYTE PTR [rdx+0x0],dh
  40d23c:	outs   dx,DWORD PTR ds:[rsi]
  40d23d:	add    BYTE PTR [rbx+0x0],ah
  40d240:	add    BYTE PTR gs:[rbx+0x0],dh
  40d244:	jae    0x40d246
  40d246:	outs   dx,DWORD PTR ds:[rsi]
  40d247:	add    BYTE PTR [rdx+0x0],dh
  40d24a:	rex.WR add BYTE PTR [rcx+0x0],r12b
  40d24e:	(bad)  
  40d24f:	add    BYTE PTR [rbp+0x0],ah
  40d252:	ins    BYTE PTR es:[rdi],dx
  40d253:	add    BYTE PTR [rsi],ch
  40d255:	add    BYTE PTR [rcx+0x0],cl
  40d258:	ins    DWORD PTR es:[rdi],dx
  40d259:	add    BYTE PTR [rbp+0x0],ah
  40d25c:	rex.WRB add BYTE PTR [r15+0x0],r13b
  40d260:	add    BYTE PTR fs:[rbp+0x0],ah
  40d264:	mov    ds,WORD PTR [rip+0x702e0000]        # 0x706ed26a
  40d26a:	add    BYTE PTR [rdx+0x0],dh
  40d26d:	outs   dx,DWORD PTR ds:[rsi]
  40d26e:	add    BYTE PTR [rbx+0x0],ah
  40d271:	add    BYTE PTR gs:[rbx+0x0],dh
  40d275:	jae    0x40d277
  40d277:	outs   dx,DWORD PTR ds:[rsi]
  40d278:	add    BYTE PTR [rdx+0x0],dh
  40d27b:	rex.WR add BYTE PTR [rcx+0x0],r12b
  40d27f:	(bad)  
  40d280:	add    BYTE PTR [rbp+0x0],ah
  40d283:	ins    BYTE PTR es:[rdi],dx
  40d284:	add    BYTE PTR [rsi],ch
  40d286:	add    BYTE PTR [rax+rax*1+0x6f],cl
  40d28a:	add    BYTE PTR [rbx+0x0],ah
  40d28d:	(bad)  
  40d28e:	add    BYTE PTR [rax+rax*1+0x69],dh
  40d292:	add    BYTE PTR [rdi+0x0],ch
  40d295:	outs   dx,BYTE PTR ds:[rsi]
  40d296:	add    BYTE PTR [rsi],dh
  40d298:	(bad)  
  40d299:	add    BYTE PTR [rax],al
  40d29b:	sub    dh,BYTE PTR [rax+0x0]
  40d29e:	jb     0x40d2a0
  40d2a0:	outs   dx,DWORD PTR ds:[rsi]
  40d2a1:	add    BYTE PTR [rbx+0x0],ah
  40d2a4:	add    BYTE PTR gs:[rbx+0x0],dh
  40d2a8:	jae    0x40d2aa
  40d2aa:	outs   dx,DWORD PTR ds:[rsi]
  40d2ab:	add    BYTE PTR [rdx+0x0],dh
  40d2ae:	rex.WR add BYTE PTR [rcx+0x0],r12b
  40d2b2:	(bad)  
  40d2b3:	add    BYTE PTR [rbp+0x0],ah
  40d2b6:	ins    BYTE PTR es:[rdi],dx
  40d2b7:	add    BYTE PTR [rsi],ch
  40d2b9:	add    BYTE PTR [rbp+0x0],cl
  40d2bc:	(bad)  
  40d2bd:	add    BYTE PTR [rdx+0x0],dh
  40d2c0:	add    BYTE PTR [ecx+0x0],ch
  40d2c4:	outs   dx,BYTE PTR ds:[rsi]
  40d2c5:	add    dl,dl
  40d2c7:	(bad)  
  40d2c8:	add    BYTE PTR [rax],al
  40d2ca:	es jo  0x40d2cd
  40d2cd:	jb     0x40d2cf
  40d2cf:	outs   dx,DWORD PTR ds:[rsi]
  40d2d0:	add    BYTE PTR [rbx+0x0],ah
  40d2d3:	add    BYTE PTR gs:[rbx+0x0],dh
  40d2d7:	jae    0x40d2d9
  40d2d9:	outs   dx,DWORD PTR ds:[rsi]
  40d2da:	add    BYTE PTR [rdx+0x0],dh
  40d2dd:	rex.WR add BYTE PTR [rcx+0x0],r12b
  40d2e1:	(bad)  
  40d2e2:	add    BYTE PTR [rbp+0x0],ah
  40d2e5:	ins    BYTE PTR es:[rdi],dx
  40d2e6:	add    BYTE PTR [rsi],ch
  40d2e8:	add    BYTE PTR [rbx+0x0],dl
  40d2eb:	imul   eax,DWORD PTR [rax],0x65007a
  40d2f1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40d2f2:	(bad)  
  40d2f3:	add    BYTE PTR [rax],al
  40d2f5:	cs jo  0x40d2f8
  40d2f8:	jb     0x40d2fa
  40d2fa:	outs   dx,DWORD PTR ds:[rsi]
  40d2fb:	add    BYTE PTR [rbx+0x0],ah
  40d2fe:	add    BYTE PTR gs:[rbx+0x0],dh
  40d302:	jae    0x40d304
  40d304:	outs   dx,DWORD PTR ds:[rsi]
  40d305:	add    BYTE PTR [rdx+0x0],dh
  40d308:	rex.WR add BYTE PTR [rcx+0x0],r12b
  40d30c:	(bad)  
  40d30d:	add    BYTE PTR [rbp+0x0],ah
  40d310:	ins    BYTE PTR es:[rdi],dx
  40d311:	add    BYTE PTR [rsi],ch
  40d313:	add    BYTE PTR [rax+rax*1+0x61],dl
  40d317:	add    BYTE PTR [rdx+0x0],ah
  40d31a:	rex.WB add BYTE PTR [r14+0x0],bpl
  40d31e:	add    BYTE PTR fs:[rbp+0x0],ah
  40d322:	js     0x40d324
  40d324:	rex.WX and BYTE PTR [rax],al
  40d327:	add    BYTE PTR [rsi],ah
  40d329:	jo     0x40d32b
  40d32b:	jb     0x40d32d
  40d32d:	outs   dx,DWORD PTR ds:[rsi]
  40d32e:	add    BYTE PTR [rbx+0x0],ah
  40d331:	add    BYTE PTR gs:[rbx+0x0],dh
  40d335:	jae    0x40d337
  40d337:	outs   dx,DWORD PTR ds:[rsi]
  40d338:	add    BYTE PTR [rdx+0x0],dh
  40d33b:	rex.WR add BYTE PTR [rcx+0x0],r12b
  40d33f:	(bad)  
  40d340:	add    BYTE PTR [rbp+0x0],ah
  40d343:	ins    BYTE PTR es:[rdi],dx
  40d344:	add    BYTE PTR [rsi],ch
  40d346:	add    BYTE PTR [rax+rax*1+0x65],dl
  40d34a:	add    BYTE PTR [rax+0x0],bh
  40d34d:	je     0x40d34f
  40d34f:	rex.WRXB and BYTE PTR [r8],r8b
  40d352:	add    BYTE PTR [rsi],bl
  40d354:	jae    0x40d356
  40d356:	outs   dx,DWORD PTR ds:[rsi]
  40d357:	add    BYTE PTR [rbp+0x0],dh
  40d35a:	jb     0x40d35c
  40d35c:	movsxd eax,DWORD PTR [rax]
  40d35e:	add    BYTE PTR gs:[rax+0x0],dl
  40d362:	(bad)  
  40d363:	add    BYTE PTR [rax+rax*1+0x68],dh
  40d367:	add    BYTE PTR [rsi],ch
  40d369:	add    BYTE PTR [rax+rax*1+0x6f],al
  40d36d:	add    BYTE PTR [rbx+0x0],ah
  40d370:	imul   eax,DWORD PTR [rax],0x60
  40d373:	and    BYTE PTR [rax],al
  40d375:	add    BYTE PTR [rsi],ah
  40d377:	jae    0x40d379
  40d379:	outs   dx,DWORD PTR ds:[rsi]
  40d37a:	add    BYTE PTR [rbp+0x0],dh
  40d37d:	jb     0x40d37f
  40d37f:	movsxd eax,DWORD PTR [rax]
  40d381:	add    BYTE PTR gs:[rax+0x0],dl
  40d385:	(bad)  
  40d386:	add    BYTE PTR [rax+rax*1+0x68],dh
  40d38a:	add    BYTE PTR [rsi],ch
  40d38c:	add    BYTE PTR [rax+rax*1+0x6f],cl
  40d390:	add    BYTE PTR [rbx+0x0],ah
  40d393:	(bad)  
  40d394:	add    BYTE PTR [rax+rax*1+0x69],dh
  40d398:	add    BYTE PTR [rdi+0x0],ch
  40d39b:	outs   dx,BYTE PTR ds:[rsi]
  40d39c:	add    BYTE PTR [rdx],cl
  40d39e:	and    DWORD PTR [rax],eax
  40d3a0:	add    BYTE PTR [rdx],ah
  40d3a2:	jae    0x40d3a4
  40d3a4:	outs   dx,DWORD PTR ds:[rsi]
  40d3a5:	add    BYTE PTR [rbp+0x0],dh
  40d3a8:	jb     0x40d3aa
  40d3aa:	movsxd eax,DWORD PTR [rax]
  40d3ac:	add    BYTE PTR gs:[rax+0x0],dl
  40d3b0:	(bad)  
  40d3b1:	add    BYTE PTR [rax+rax*1+0x68],dh
  40d3b5:	add    BYTE PTR [rsi],ch
  40d3b7:	add    BYTE PTR [rbp+0x0],cl
  40d3ba:	(bad)  
  40d3bb:	add    BYTE PTR [rdx+0x0],dh
  40d3be:	add    BYTE PTR [ecx+0x0],ch
  40d3c2:	outs   dx,BYTE PTR ds:[rsi]
  40d3c3:	add    BYTE PTR [rsi+0x1e000021],ah
  40d3c9:	jae    0x40d3cb
  40d3cb:	outs   dx,DWORD PTR ds:[rsi]
  40d3cc:	add    BYTE PTR [rbp+0x0],dh
  40d3cf:	jb     0x40d3d1
  40d3d1:	movsxd eax,DWORD PTR [rax]
  40d3d3:	add    BYTE PTR gs:[rax+0x0],dl
  40d3d7:	(bad)  
  40d3d8:	add    BYTE PTR [rax+rax*1+0x68],dh
  40d3dc:	add    BYTE PTR [rsi],ch
  40d3de:	add    BYTE PTR [rbx+0x0],dl
  40d3e1:	imul   eax,DWORD PTR [rax],0x65007a
  40d3e7:	jp     0x40d40b
  40d3e9:	add    BYTE PTR [rax],al
  40d3eb:	es jae 0x40d3ee
  40d3ee:	outs   dx,DWORD PTR ds:[rsi]
  40d3ef:	add    BYTE PTR [rbp+0x0],dh
  40d3f2:	jb     0x40d3f4
  40d3f4:	movsxd eax,DWORD PTR [rax]
  40d3f6:	add    BYTE PTR gs:[rax+0x0],dl
  40d3fa:	(bad)  
  40d3fb:	add    BYTE PTR [rax+rax*1+0x68],dh
  40d3ff:	add    BYTE PTR [rsi],ch
  40d401:	add    BYTE PTR [rax+rax*1+0x61],dl
  40d405:	add    BYTE PTR [rdx+0x0],ah
  40d408:	rex.WB add BYTE PTR [r14+0x0],bpl
  40d40c:	add    BYTE PTR fs:[rbp+0x0],ah
  40d410:	js     0x40d412
  40d412:	(bad)  
  40d413:	and    eax,DWORD PTR [rax]
  40d415:	add    BYTE PTR [rdx],ch
  40d417:	js     0x40d419
  40d419:	cmp    BYTE PTR [rax],al
  40d41b:	add    BYTE PTR ss:[rax+0x0],dl
  40d41f:	jb     0x40d421
  40d421:	outs   dx,DWORD PTR ds:[rsi]
  40d422:	add    BYTE PTR [rbx+0x0],ah
  40d425:	add    BYTE PTR gs:[rbx+0x0],dh
  40d429:	jae    0x40d42b
  40d42b:	outs   dx,DWORD PTR ds:[rsi]
  40d42c:	add    BYTE PTR [rdx+0x0],dh
  40d42f:	add    BYTE PTR cs:[rcx+0x0],al
  40d433:	jne    0x40d435
  40d435:	je     0x40d437
  40d437:	outs   dx,DWORD PTR ds:[rsi]
  40d438:	add    BYTE PTR [rbx+0x0],dl
  40d43b:	imul   eax,DWORD PTR [rax],0x65007a
  40d441:	and    esp,DWORD PTR [rbx]
  40d443:	add    BYTE PTR [rax],al
  40d445:	sub    BYTE PTR [rax+0x0],bh
  40d448:	cmp    BYTE PTR [rax],al
  40d44a:	add    BYTE PTR ss:[rax+0x0],dl
  40d44e:	jb     0x40d450
  40d450:	outs   dx,DWORD PTR ds:[rsi]
  40d451:	add    BYTE PTR [rbx+0x0],ah
  40d454:	add    BYTE PTR gs:[rbx+0x0],dh
  40d458:	jae    0x40d45a
  40d45a:	outs   dx,DWORD PTR ds:[rsi]
  40d45b:	add    BYTE PTR [rdx+0x0],dh
  40d45e:	add    BYTE PTR cs:[rbp+0x0],al
  40d462:	outs   dx,BYTE PTR ds:[rsi]
  40d463:	add    BYTE PTR [rcx+0x0],ah
  40d466:	(bad)  
  40d467:	add    BYTE PTR [rax+rax*1+0x65],ch
  40d46b:	add    BYTE PTR [rax+rax*1+0x25],ah
  40d46f:	and    eax,DWORD PTR [rax]
  40d471:	add    BYTE PTR [rax],ch
  40d473:	js     0x40d475
  40d475:	cmp    BYTE PTR [rax],al
  40d477:	add    BYTE PTR ss:[rax+0x0],dl
  40d47b:	jb     0x40d47d
  40d47d:	outs   dx,DWORD PTR ds:[rsi]
  40d47e:	add    BYTE PTR [rbx+0x0],ah
  40d481:	add    BYTE PTR gs:[rbx+0x0],dh
  40d485:	jae    0x40d487
  40d487:	outs   dx,DWORD PTR ds:[rsi]
  40d488:	add    BYTE PTR [rdx+0x0],dh
  40d48b:	add    BYTE PTR cs:[rcx+0x0],cl
  40d48f:	ins    DWORD PTR es:[rdi],dx
  40d490:	add    BYTE PTR [rbp+0x0],ah
  40d493:	rex.WRB add BYTE PTR [r15+0x0],r13b
  40d497:	add    BYTE PTR fs:[rbp+0x0],ah
  40d49b:	(bad)  
  40d49c:	and    eax,DWORD PTR [rax]
  40d49e:	add    BYTE PTR [rdx],ch
  40d4a0:	js     0x40d4a2
  40d4a2:	cmp    BYTE PTR [rax],al
  40d4a4:	add    BYTE PTR ss:[rax+0x0],dl
  40d4a8:	jb     0x40d4aa
  40d4aa:	outs   dx,DWORD PTR ds:[rsi]
  40d4ab:	add    BYTE PTR [rbx+0x0],ah
  40d4ae:	add    BYTE PTR gs:[rbx+0x0],dh
  40d4b2:	jae    0x40d4b4
  40d4b4:	outs   dx,DWORD PTR ds:[rsi]
  40d4b5:	add    BYTE PTR [rdx+0x0],dh
  40d4b8:	add    BYTE PTR cs:[rax+rax*1+0x6f],cl
  40d4bd:	add    BYTE PTR [rbx+0x0],ah
  40d4c0:	(bad)  
  40d4c1:	add    BYTE PTR [rax+rax*1+0x69],dh
  40d4c5:	add    BYTE PTR [rdi+0x0],ch
  40d4c8:	outs   dx,BYTE PTR ds:[rsi]
  40d4c9:	add    bh,cl
  40d4cb:	and    eax,DWORD PTR [rax]
  40d4cd:	add    BYTE PTR [rsi],ah
  40d4cf:	js     0x40d4d1
  40d4d1:	cmp    BYTE PTR [rax],al
  40d4d3:	add    BYTE PTR ss:[rax+0x0],dl
  40d4d7:	jb     0x40d4d9
  40d4d9:	outs   dx,DWORD PTR ds:[rsi]
  40d4da:	add    BYTE PTR [rbx+0x0],ah
  40d4dd:	add    BYTE PTR gs:[rbx+0x0],dh
  40d4e1:	jae    0x40d4e3
  40d4e3:	outs   dx,DWORD PTR ds:[rsi]
  40d4e4:	add    BYTE PTR [rdx+0x0],dh
  40d4e7:	add    BYTE PTR cs:[rbp+0x0],cl
  40d4eb:	(bad)  
  40d4ec:	add    BYTE PTR [rdx+0x0],dh
  40d4ef:	add    BYTE PTR [ecx+0x0],ch
  40d4f3:	outs   dx,BYTE PTR ds:[rsi]
  40d4f4:	add    BYTE PTR [rbx+0x24],ch
  40d4f7:	add    BYTE PTR [rax],al
  40d4f9:	and    bh,BYTE PTR [rax+0x0]
  40d4fc:	cmp    BYTE PTR [rax],al
  40d4fe:	add    BYTE PTR ss:[rax+0x0],dl
  40d502:	jb     0x40d504
  40d504:	outs   dx,DWORD PTR ds:[rsi]
  40d505:	add    BYTE PTR [rbx+0x0],ah
  40d508:	add    BYTE PTR gs:[rbx+0x0],dh
  40d50c:	jae    0x40d50e
  40d50e:	outs   dx,DWORD PTR ds:[rsi]
  40d50f:	add    BYTE PTR [rdx+0x0],dh
  40d512:	add    BYTE PTR cs:[rbx+0x0],dl
  40d516:	imul   eax,DWORD PTR [rax],0x65007a
  40d51c:	(bad)  
  40d51d:	and    eax,0x782a0000
  40d522:	add    BYTE PTR [rax],bh
  40d524:	add    BYTE PTR [rsi],dh
  40d526:	add    BYTE PTR [rax+0x0],dl
  40d529:	jb     0x40d52b
  40d52b:	outs   dx,DWORD PTR ds:[rsi]
  40d52c:	add    BYTE PTR [rbx+0x0],ah
  40d52f:	add    BYTE PTR gs:[rbx+0x0],dh
  40d533:	jae    0x40d535
  40d535:	outs   dx,DWORD PTR ds:[rsi]
  40d536:	add    BYTE PTR [rdx+0x0],dh
  40d539:	add    BYTE PTR cs:[rax+rax*1+0x61],dl
  40d53e:	add    BYTE PTR [rdx+0x0],ah
  40d541:	rex.WB add BYTE PTR [r14+0x0],bpl
  40d545:	add    BYTE PTR fs:[rbp+0x0],ah
  40d549:	js     0x40d54b
  40d54b:	jrcxz  0x40d572
  40d54d:	add    BYTE PTR [rax],al
  40d54f:	and    bh,BYTE PTR [rax+0x0]
  40d552:	cmp    BYTE PTR [rax],al
  40d554:	add    BYTE PTR ss:[rax+0x0],dl
  40d558:	jb     0x40d55a
  40d55a:	outs   dx,DWORD PTR ds:[rsi]
  40d55b:	add    BYTE PTR [rbx+0x0],ah
  40d55e:	add    BYTE PTR gs:[rbx+0x0],dh
  40d562:	jae    0x40d564
  40d564:	outs   dx,DWORD PTR ds:[rsi]
  40d565:	add    BYTE PTR [rdx+0x0],dh
  40d568:	add    BYTE PTR cs:[rax+rax*1+0x65],dl
  40d56d:	add    BYTE PTR [rax+0x0],bh
  40d570:	je     0x40d572
  40d572:	call   0x4040d59c
  40d577:	add    BYTE PTR [rcx],al
  40d579:	add    BYTE PTR [rax],al
  40d57b:	add    bh,bh
  40d57d:	(bad)  
  40d57e:	(bad)  
  40d57f:	inc    DWORD PTR [rcx]
  40d581:	add    BYTE PTR [rax],al
  40d583:	add    BYTE PTR [rax],al
  40d585:	add    BYTE PTR [rax],al
  40d587:	add    BYTE PTR [rdx+rax*1],cl
  40d58a:	add    BYTE PTR [rax],al
  40d58c:	add    BYTE PTR [rcx+0x53],dl
  40d58f:	jns    0x40d604
  40d591:	je     0x40d5f8
  40d593:	ins    DWORD PTR es:[rdi],dx
  40d594:	cs rex.R jb 0x40d5f9
  40d598:	ja     0x40d603
  40d59a:	outs   dx,BYTE PTR ds:[rsi]
  40d59b:	addr32 sub al,0x20
  40d59e:	push   rsi
  40d59f:	gs jb  0x40d615
  40d5a2:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40d5a9:	xor    BYTE PTR cs:[rsi],ch
  40d5ac:	xor    BYTE PTR [rax+riz*1],ch
  40d5af:	rex.XB jne 0x40d61e
  40d5b2:	je     0x40d629
  40d5b4:	jb     0x40d61b
  40d5b6:	cmp    eax,0x7475656e
  40d5bb:	jb     0x40d61e
  40d5bd:	ins    BYTE PTR es:[rdi],dx
  40d5be:	sub    al,0x20
  40d5c0:	push   rax
  40d5c1:	jne    0x40d625
  40d5c3:	ins    BYTE PTR es:[rdi],dx
  40d5c4:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40d5cb:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40d5cf:	(bad)  
  40d5d0:	xor    BYTE PTR [rbx],dh
  40d5d2:	xor    ax,0x3766
  40d5d6:	xor    WORD PTR [rcx],si
  40d5d9:	fs xor eax,0x61336130
  40d5df:	add    eax,0x1
  40d5e4:	adc    al,0x53
  40d5e6:	jns    0x40d65b
  40d5e8:	je     0x40d64f
  40d5ea:	ins    DWORD PTR es:[rdi],dx
  40d5eb:	cs rex.R jb 0x40d650
  40d5ef:	ja     0x40d65a
  40d5f1:	outs   dx,BYTE PTR ds:[rsi]
  40d5f2:	addr32 cs push rbx
  40d5f5:	imul   edi,DWORD PTR [rdx+0x65],0x246
  40d5fc:	add    BYTE PTR [rip+0x74646977],al        # 0x74a53f79
  40d602:	push   0x69656806
  40d607:	addr32 push 0xb000074
  40d60d:	or     eax,DWORD PTR [rdx]
  40d60f:	add    BYTE PTR [rax],al
  40d611:	add    BYTE PTR [rax],al
  40d613:	add    al,al
  40d615:	add    BYTE PTR [rax],al
  40d618:	push   rax
  40d619:	or     eax,DWORD PTR [r9+0x0]
  40d61d:	add    DWORD PTR [rax],eax
  40d61f:	add    BYTE PTR [rax],al
  40d621:	(bad)  
  40d622:	(bad)  
  40d623:	(bad)  
  40d624:	inc    DWORD PTR [rcx]
  40d626:	add    BYTE PTR [rax],al
  40d628:	add    BYTE PTR [rax],al
  40d62a:	add    BYTE PTR [rax],al
  40d62c:	add    BYTE PTR [rdx+rax*1],cl
  40d62f:	add    BYTE PTR [rax],al
  40d631:	add    BYTE PTR [rcx+0x53],dl
  40d634:	jns    0x40d6a9
  40d636:	je     0x40d69d
  40d638:	ins    DWORD PTR es:[rdi],dx
  40d639:	cs rex.R jb 0x40d69e
  40d63d:	ja     0x40d6a8
  40d63f:	outs   dx,BYTE PTR ds:[rsi]
  40d640:	addr32 sub al,0x20
  40d643:	push   rsi
  40d644:	gs jb  0x40d6ba
  40d647:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40d64e:	xor    BYTE PTR cs:[rsi],ch
  40d651:	xor    BYTE PTR [rax+riz*1],ch
  40d654:	rex.XB jne 0x40d6c3
  40d657:	je     0x40d6ce
  40d659:	jb     0x40d6c0
  40d65b:	cmp    eax,0x7475656e
  40d660:	jb     0x40d6c3
  40d662:	ins    BYTE PTR es:[rdi],dx
  40d663:	sub    al,0x20
  40d665:	push   rax
  40d666:	jne    0x40d6ca
  40d668:	ins    BYTE PTR es:[rdi],dx
  40d669:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40d670:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40d674:	(bad)  
  40d675:	xor    BYTE PTR [rbx],dh
  40d677:	xor    ax,0x3766
  40d67b:	xor    WORD PTR [rcx],si
  40d67e:	fs xor eax,0x61336130
  40d684:	add    eax,0x1
  40d689:	adc    edx,DWORD PTR [rbx+0x79]
  40d68c:	jae    0x40d702
  40d68e:	gs ins DWORD PTR es:[rdi],dx
  40d690:	cs rex.R jb 0x40d6f5
  40d694:	ja     0x40d6ff
  40d696:	outs   dx,BYTE PTR ds:[rsi]
  40d697:	addr32 cs push rbx
  40d69a:	imul   edi,DWORD PTR [rdx+0x65],0x2
  40d6a1:	add    eax,0x74646977
  40d6a6:	push   0x69656806
  40d6ab:	addr32 push 0x8000074
  40d6b1:	or     BYTE PTR [rdx],al
  40d6b3:	add    BYTE PTR [rax],al
  40d6b5:	add    BYTE PTR [rbx+0x1],dh
  40d6b8:	add    BYTE PTR [rax],al
  40d6ba:	add    al,BYTE PTR [rcx]
  40d6bc:	add    BYTE PTR [rax],al
  40d6be:	or     eax,DWORD PTR [rcx]
  40d6c0:	or     ecx,DWORD PTR [rdi+0x70]
  40d6c3:	je     0x40d72e
  40d6c5:	outs   dx,DWORD PTR ds:[rsi]
  40d6c6:	outs   dx,BYTE PTR ds:[rsi]
  40d6c7:	jae    0x40d719
  40d6c9:	(bad)  
  40d6ca:	add    DWORD PTR gs:[ecx+0x53],edi
  40d6cf:	jns    0x40d744
  40d6d1:	je     0x40d738
  40d6d3:	ins    DWORD PTR es:[rdi],dx
  40d6d4:	cs push rdi
  40d6d6:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40d6dd:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40d6df:	jb     0x40d74e
  40d6e1:	jae    0x40d711
  40d6e3:	push   rbp
  40d6e4:	jae    0x40d74b
  40d6e6:	jb     0x40d72b
  40d6e8:	outs   dx,DWORD PTR ds:[rsi]
  40d6e9:	outs   dx,BYTE PTR ds:[rsi]
  40d6ea:	je     0x40d75e
  40d6ec:	outs   dx,DWORD PTR ds:[rsi]
  40d6ed:	ins    BYTE PTR es:[rdi],dx
  40d6ee:	sub    al,0x20
  40d6f0:	push   rbx
  40d6f1:	jns    0x40d766
  40d6f3:	je     0x40d75a
  40d6f5:	ins    DWORD PTR es:[rdi],dx
  40d6f6:	cs push rdi
  40d6f8:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40d6ff:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40d701:	jb     0x40d770
  40d703:	jae    0x40d731
  40d705:	and    BYTE PTR [rsi+0x65],dl
  40d708:	jb     0x40d77d
  40d70a:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40d711:	xor    BYTE PTR cs:[rsi],ch
  40d714:	xor    BYTE PTR [rax+riz*1],ch
  40d717:	rex.XB jne 0x40d786
  40d71a:	je     0x40d791
  40d71c:	jb     0x40d783
  40d71e:	cmp    eax,0x7475656e
  40d723:	jb     0x40d786
  40d725:	ins    BYTE PTR es:[rdi],dx
  40d726:	sub    al,0x20
  40d728:	push   rax
  40d729:	jne    0x40d78d
  40d72b:	ins    BYTE PTR es:[rdi],dx
  40d72c:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40d733:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40d737:	(bad)  
  40d738:	(bad)  
  40d739:	(bad)  
  40d73a:	(bad)  
  40d73b:	xor    eax,0x31363563
  40d740:	cmp    DWORD PTR [rbx],esi
  40d742:	xor    al,0x65
  40d744:	xor    BYTE PTR [rax],bh
  40d746:	cmp    DWORD PTR [rcx],eax
  40d748:	(bad)  
  40d749:	(bad)  
  40d74a:	ins    DWORD PTR es:[rdi],dx
  40d74b:	fs ss xor al,0x50
  40d74f:	jb     0x40d7c0
  40d751:	movsxd esp,DWORD PTR [rbp+0x73]
  40d754:	jae    0x40d7c5
  40d756:	jb     0x40d759
  40d758:	(bad)  
  40d759:	ins    BYTE PTR es:[rdi],dx
  40d75a:	(bad)  
  40d75b:	jns    0x40d7cc
  40d75d:	jne    0x40d7d3
  40d75f:	add    DWORD PTR [rdi+0x63694d01],esp
  40d765:	jb     0x40d7d6
  40d767:	jae    0x40d7d8
  40d769:	data16 je 0x40d79a
  40d76c:	push   rbx
  40d76d:	jno    0x40d7db
  40d76f:	push   rbx
  40d770:	gs jb  0x40d7e9
  40d773:	gs jb  0x40d7a4
  40d776:	rex.WRB (bad) 
  40d778:	outs   dx,BYTE PTR ds:[rsi]
  40d779:	(bad)  
  40d77a:	gs ins DWORD PTR es:[edi],dx
  40d77d:	outs   dx,BYTE PTR gs:[rsi]
  40d77f:	je     0x40d7af
  40d781:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40d783:	outs   dx,BYTE PTR ds:[rsi]
  40d784:	je     0x40d7f8
  40d786:	outs   dx,DWORD PTR ds:[rsi]
  40d787:	ins    BYTE PTR es:[rdi],dx
  40d788:	jae    0x40d7b8
  40d78a:	rex.X imul ebp,DWORD PTR [rsi+0x64],0x52676e69
  40d792:	(bad)  
  40d793:	imul   ebp,DWORD PTR fs:[rdi+0x42],0x6f747475
  40d79b:	outs   dx,BYTE PTR ds:[rsi]
  40d79c:	sub    al,0x20
  40d79e:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
  40d7a6:	je     0x40d7d6
  40d7a8:	push   rbx
  40d7a9:	jno    0x40d817
  40d7ab:	push   rbx
  40d7ac:	gs jb  0x40d825
  40d7af:	gs jb  0x40d7e0
  40d7b2:	rex.WRB (bad) 
  40d7b4:	outs   dx,BYTE PTR ds:[rsi]
  40d7b5:	(bad)  
  40d7b6:	gs ins DWORD PTR es:[edi],dx
  40d7b9:	outs   dx,BYTE PTR gs:[rsi]
  40d7bb:	je     0x40d7eb
  40d7bd:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40d7bf:	outs   dx,BYTE PTR ds:[rsi]
  40d7c0:	je     0x40d834
  40d7c2:	outs   dx,DWORD PTR ds:[rsi]
  40d7c3:	ins    BYTE PTR es:[rdi],dx
  40d7c4:	jae    0x40d7f2
  40d7c6:	and    BYTE PTR [rsi+0x65],dl
  40d7c9:	jb     0x40d83e
  40d7cb:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e30313d
  40d7d2:	xor    BYTE PTR [rsi],ch
  40d7d4:	xor    BYTE PTR [rsi],ch
  40d7d6:	xor    BYTE PTR [rax+riz*1],ch
  40d7d9:	rex.XB jne 0x40d848
  40d7dc:	je     0x40d853
  40d7de:	jb     0x40d845
  40d7e0:	cmp    eax,0x7475656e
  40d7e5:	jb     0x40d848
  40d7e7:	ins    BYTE PTR es:[rdi],dx
  40d7e8:	sub    al,0x20
  40d7ea:	push   rax
  40d7eb:	jne    0x40d84f
  40d7ed:	ins    BYTE PTR es:[rdi],dx
  40d7ee:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40d7f5:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40d7f9:	cmp    BYTE PTR [rcx],bh
  40d7fb:	cmp    BYTE PTR [rsi*1+0x38646364],dh
  40d802:	xor    BYTE PTR [rax],bh
  40d804:	xor    BYTE PTR [rbx+0x63],ah
  40d807:	cmp    DWORD PTR [rcx],esi
  40d809:	add    DWORD PTR [rcx],eax
  40d80b:	xor    al,BYTE PTR [rcx]
  40d80d:	(bad)  
  40d80e:	(bad)
  40d813:	add    DWORD PTR gs:[rsi],eax
  40d816:	ins    BYTE PTR es:[rdi],dx
  40d817:	(bad)  
  40d818:	jns    0x40d889
  40d81a:	jne    0x40d890
  40d81c:	add    DWORD PTR [rbx+rdx*2+0x79],esi
  40d820:	jae    0x40d896
  40d822:	gs ins DWORD PTR es:[rdi],dx
  40d824:	cs push rdi
  40d826:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40d82d:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40d82f:	jb     0x40d89e
  40d831:	jae    0x40d861
  40d833:	rex.X jne 0x40d8aa
  40d836:	je     0x40d8a7
  40d838:	outs   dx,BYTE PTR ds:[rsi]
  40d839:	sub    al,0x20
  40d83b:	push   rbx
  40d83c:	jns    0x40d8b1
  40d83e:	je     0x40d8a5
  40d840:	ins    DWORD PTR es:[rdi],dx
  40d841:	cs push rdi
  40d843:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40d84a:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40d84c:	jb     0x40d8bb
  40d84e:	jae    0x40d87c
  40d850:	and    BYTE PTR [rsi+0x65],dl
  40d853:	jb     0x40d8c8
  40d855:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40d85c:	xor    BYTE PTR cs:[rsi],ch
  40d85f:	xor    BYTE PTR [rax+riz*1],ch
  40d862:	rex.XB jne 0x40d8d1
  40d865:	je     0x40d8dc
  40d867:	jb     0x40d8ce
  40d869:	cmp    eax,0x7475656e
  40d86e:	jb     0x40d8d1
  40d870:	ins    BYTE PTR es:[rdi],dx
  40d871:	sub    al,0x20
  40d873:	push   rax
  40d874:	jne    0x40d8d8
  40d876:	ins    BYTE PTR es:[rdi],dx
  40d877:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40d87e:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40d882:	(bad)  
  40d883:	(bad)  
  40d884:	(bad)  
  40d885:	(bad)  
  40d886:	xor    eax,0x31363563
  40d88b:	cmp    DWORD PTR [rbx],esi
  40d88d:	xor    al,0x65
  40d88f:	xor    BYTE PTR [rax],bh
  40d891:	cmp    DWORD PTR [rcx],eax
  40d893:	add    DWORD PTR [rsi],esi
  40d895:	add    DWORD PTR [rip+0x34366169],ecx        # 0x34773a04
  40d89b:	push   rax
  40d89c:	jb     0x40d90d
  40d89e:	movsxd esp,DWORD PTR [rbp+0x73]
  40d8a1:	jae    0x40d912
  40d8a3:	jb     0x40d8a6
  40d8a5:	(bad)  
  40d8a6:	ins    BYTE PTR es:[rdi],dx
  40d8a7:	(bad)  
  40d8a8:	jns    0x40d919
  40d8aa:	jne    0x40d920
  40d8ac:	add    DWORD PTR [rdi+0x63694d01],esp
  40d8b2:	jb     0x40d923
  40d8b4:	jae    0x40d925
  40d8b6:	data16 je 0x40d8e7
  40d8b9:	push   rbx
  40d8ba:	jno    0x40d928
  40d8bc:	push   rbx
  40d8bd:	gs jb  0x40d936
  40d8c0:	gs jb  0x40d8f1
  40d8c3:	rex.WRB (bad) 
  40d8c5:	outs   dx,BYTE PTR ds:[rsi]
  40d8c6:	(bad)  
  40d8c7:	gs ins DWORD PTR es:[edi],dx
  40d8ca:	outs   dx,BYTE PTR gs:[rsi]
  40d8cc:	je     0x40d8fc
  40d8ce:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40d8d0:	outs   dx,BYTE PTR ds:[rsi]
  40d8d1:	je     0x40d945
  40d8d3:	outs   dx,DWORD PTR ds:[rsi]
  40d8d4:	ins    BYTE PTR es:[rdi],dx
  40d8d5:	jae    0x40d905
  40d8d7:	rex.X imul ebp,DWORD PTR [rsi+0x64],0x52676e69
  40d8df:	(bad)  
  40d8e0:	imul   ebp,DWORD PTR fs:[rdi+0x42],0x6f747475
  40d8e8:	outs   dx,BYTE PTR ds:[rsi]
  40d8e9:	sub    al,0x20
  40d8eb:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
  40d8f3:	je     0x40d923
  40d8f5:	push   rbx
  40d8f6:	jno    0x40d964
  40d8f8:	push   rbx
  40d8f9:	gs jb  0x40d972
  40d8fc:	gs jb  0x40d92d
  40d8ff:	rex.WRB (bad) 
  40d901:	outs   dx,BYTE PTR ds:[rsi]
  40d902:	(bad)  
  40d903:	gs ins DWORD PTR es:[edi],dx
  40d906:	outs   dx,BYTE PTR gs:[rsi]
  40d908:	je     0x40d938
  40d90a:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40d90c:	outs   dx,BYTE PTR ds:[rsi]
  40d90d:	je     0x40d981
  40d90f:	outs   dx,DWORD PTR ds:[rsi]
  40d910:	ins    BYTE PTR es:[rdi],dx
  40d911:	jae    0x40d93f
  40d913:	and    BYTE PTR [rsi+0x65],dl
  40d916:	jb     0x40d98b
  40d918:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e30313d
  40d91f:	xor    BYTE PTR [rsi],ch
  40d921:	xor    BYTE PTR [rsi],ch
  40d923:	xor    BYTE PTR [rax+riz*1],ch
  40d926:	rex.XB jne 0x40d995
  40d929:	je     0x40d9a0
  40d92b:	jb     0x40d992
  40d92d:	cmp    eax,0x7475656e
  40d932:	jb     0x40d995
  40d934:	ins    BYTE PTR es:[rdi],dx
  40d935:	sub    al,0x20
  40d937:	push   rax
  40d938:	jne    0x40d99c
  40d93a:	ins    BYTE PTR es:[rdi],dx
  40d93b:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40d942:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40d946:	cmp    BYTE PTR [rcx],bh
  40d948:	cmp    BYTE PTR [rsi*1+0x38646364],dh
  40d94f:	xor    BYTE PTR [rax],bh
  40d951:	xor    BYTE PTR [rbx+0x63],ah
  40d954:	cmp    DWORD PTR [rcx],esi
  40d956:	add    DWORD PTR [rcx],eax
  40d958:	xor    eax,DWORD PTR [rcx]
  40d95a:	punpckhwd mm5,QWORD PTR [rsi+0x73]
  40d95e:	je     0x40d9d2
  40d960:	jne    0x40d9c5
  40d962:	je     0x40d9cd
  40d964:	outs   dx,DWORD PTR ds:[rsi]
  40d965:	outs   dx,BYTE PTR ds:[rsi]
  40d966:	jae    0x40d9aa
  40d968:	outs   dx,DWORD PTR ds:[rsi]
  40d969:	js     0x40d96c
  40d96b:	(bad)  
  40d96c:	ins    BYTE PTR es:[rdi],dx
  40d96d:	(bad)  
  40d96e:	jns    0x40d9df
  40d970:	jne    0x40d9e6
  40d972:	add    DWORD PTR [rbp+0x53],esi
  40d975:	jns    0x40d9ea
  40d977:	je     0x40d9de
  40d979:	ins    DWORD PTR es:[rdi],dx
  40d97a:	cs push rdi
  40d97c:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40d983:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40d985:	jb     0x40d9f4
  40d987:	jae    0x40d9b7
  40d989:	push   rsp
  40d98a:	gs js  0x40da01
  40d98d:	rex.X outs dx,DWORD PTR ds:[rsi]
  40d98f:	js     0x40d9bd
  40d991:	and    BYTE PTR [rbx+0x79],dl
  40d994:	jae    0x40da0a
  40d996:	gs ins DWORD PTR es:[rdi],dx
  40d998:	cs push rdi
  40d99a:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40d9a1:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40d9a3:	jb     0x40da12
  40d9a5:	jae    0x40d9d3
  40d9a7:	and    BYTE PTR [rsi+0x65],dl
  40d9aa:	jb     0x40da1f
  40d9ac:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40d9b3:	xor    BYTE PTR cs:[rsi],ch
  40d9b6:	xor    BYTE PTR [rax+riz*1],ch
  40d9b9:	rex.XB jne 0x40da28
  40d9bc:	je     0x40da33
  40d9be:	jb     0x40da25
  40d9c0:	cmp    eax,0x7475656e
  40d9c5:	jb     0x40da28
  40d9c7:	ins    BYTE PTR es:[rdi],dx
  40d9c8:	sub    al,0x20
  40d9ca:	push   rax
  40d9cb:	jne    0x40da2f
  40d9cd:	ins    BYTE PTR es:[rdi],dx
  40d9ce:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40d9d5:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40d9d9:	(bad)  
  40d9da:	(bad)  
  40d9db:	(bad)  
  40d9dc:	(bad)  
  40d9dd:	xor    eax,0x31363563
  40d9e2:	cmp    DWORD PTR [rbx],esi
  40d9e4:	xor    al,0x65
  40d9e6:	xor    BYTE PTR [rax],bh
  40d9e8:	cmp    DWORD PTR [rcx],eax
  40d9ea:	add    DWORD PTR [rdi],esi
  40d9ec:	add    DWORD PTR [rsi],eax
  40d9ee:	ins    BYTE PTR es:[rdi],dx
  40d9ef:	(bad)  
  40d9f0:	jns    0x40da61
  40d9f2:	jne    0x40da68
  40d9f4:	add    DWORD PTR [rip+0x69687424],eax        # 0x69a94e1e
  40d9fa:	jae    0x40d9fd
  40d9fc:	jle    0x40da51
  40d9fe:	jns    0x40da73
  40da00:	je     0x40da67
  40da02:	ins    DWORD PTR es:[rdi],dx
  40da03:	cs push rdi
  40da05:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40da0c:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40da0e:	jb     0x40da7d
  40da10:	jae    0x40da40
  40da12:	push   rsp
  40da13:	(bad)  
  40da14:	(bad)  
  40da15:	ins    BYTE PTR es:[rdi],dx
  40da16:	gs rex.WR (bad) 
  40da19:	jns    0x40da8a
  40da1b:	jne    0x40da91
  40da1d:	push   rax
  40da1e:	(bad)  
  40da1f:	outs   dx,BYTE PTR ds:[rsi]
  40da20:	gs ins BYTE PTR es:[rdi],dx
  40da22:	sub    al,0x20
  40da24:	push   rbx
  40da25:	jns    0x40da9a
  40da27:	je     0x40da8e
  40da29:	ins    DWORD PTR es:[rdi],dx
  40da2a:	cs push rdi
  40da2c:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40da33:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40da35:	jb     0x40daa4
  40da37:	jae    0x40da65
  40da39:	and    BYTE PTR [rsi+0x65],dl
  40da3c:	jb     0x40dab1
  40da3e:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40da45:	xor    BYTE PTR cs:[rsi],ch
  40da48:	xor    BYTE PTR [rax+riz*1],ch
  40da4b:	rex.XB jne 0x40daba
  40da4e:	je     0x40dac5
  40da50:	jb     0x40dab7
  40da52:	cmp    eax,0x7475656e
  40da57:	jb     0x40daba
  40da59:	ins    BYTE PTR es:[rdi],dx
  40da5a:	sub    al,0x20
  40da5c:	push   rax
  40da5d:	jne    0x40dac1
  40da5f:	ins    BYTE PTR es:[rdi],dx
  40da60:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40da67:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40da6b:	(bad)  
  40da6c:	(bad)  
  40da6d:	(bad)  
  40da6e:	(bad)  
  40da6f:	xor    eax,0x31363563
  40da74:	cmp    DWORD PTR [rbx],esi
  40da76:	xor    al,0x65
  40da78:	xor    BYTE PTR [rax],bh
  40da7a:	cmp    DWORD PTR [rcx],eax
  40da7c:	add    DWORD PTR [rax],esi
  40da7e:	add    DWORD PTR [rip+0x6f79616c],ecx        # 0x6fba3bf0
  40da84:	jne    0x40dafa
  40da86:	rex.WRB (bad) 
  40da88:	outs   dx,BYTE PTR ds:[rsi]
  40da89:	(bad)  
  40da8a:	addr32 gs jb 0x40da8f
  40da8e:	stos   DWORD PTR es:[rdi],eax
  40da8f:	add    DWORD PTR [rbp+0x69],ecx
  40da92:	movsxd esi,DWORD PTR [rdx+0x6f]
  40da95:	jae    0x40db06
  40da97:	data16 je 0x40dac8
  40da9a:	push   rbx
  40da9b:	jno    0x40db09
  40da9d:	push   rbx
  40da9e:	gs jb  0x40db17
  40daa1:	gs jb  0x40dad2
  40daa4:	rex.WRB (bad) 
  40daa6:	outs   dx,BYTE PTR ds:[rsi]
  40daa7:	(bad)  
  40daa8:	gs ins DWORD PTR es:[edi],dx
  40daab:	outs   dx,BYTE PTR gs:[rsi]
  40daad:	je     0x40dadd
  40daaf:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40dab1:	outs   dx,BYTE PTR ds:[rsi]
  40dab2:	je     0x40db26
  40dab4:	outs   dx,DWORD PTR ds:[rsi]
  40dab5:	ins    BYTE PTR es:[rdi],dx
  40dab6:	jae    0x40dae6
  40dab8:	push   rbx
  40dab9:	jno    0x40db27
  40dabb:	push   rbx
  40dabc:	je     0x40db33
  40dabe:	imul   ebp,DWORD PTR fs:[rdi+0x4c],0x756f7961
  40dac6:	je     0x40db15
  40dac8:	(bad)  
  40dac9:	outs   dx,BYTE PTR ds:[rsi]
  40daca:	(bad)  
  40dacb:	addr32 gs jb 0x40dafb
  40dacf:	and    BYTE PTR [rbp+0x69],cl
  40dad2:	movsxd esi,DWORD PTR [rdx+0x6f]
  40dad5:	jae    0x40db46
  40dad7:	data16 je 0x40db08
  40dada:	push   rbx
  40dadb:	jno    0x40db49
  40dadd:	push   rbx
  40dade:	gs jb  0x40db57
  40dae1:	gs jb  0x40db12
  40dae4:	rex.WRB (bad) 
  40dae6:	outs   dx,BYTE PTR ds:[rsi]
  40dae7:	(bad)  
  40dae8:	gs ins DWORD PTR es:[edi],dx
  40daeb:	outs   dx,BYTE PTR gs:[rsi]
  40daed:	je     0x40db1d
  40daef:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40daf1:	outs   dx,BYTE PTR ds:[rsi]
  40daf2:	je     0x40db66
  40daf4:	outs   dx,DWORD PTR ds:[rsi]
  40daf5:	ins    BYTE PTR es:[rdi],dx
  40daf6:	jae    0x40db24
  40daf8:	and    BYTE PTR [rsi+0x65],dl
  40dafb:	jb     0x40db70
  40dafd:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e30313d
  40db04:	xor    BYTE PTR [rsi],ch
  40db06:	xor    BYTE PTR [rsi],ch
  40db08:	xor    BYTE PTR [rax+riz*1],ch
  40db0b:	rex.XB jne 0x40db7a
  40db0e:	je     0x40db85
  40db10:	jb     0x40db77
  40db12:	cmp    eax,0x7475656e
  40db17:	jb     0x40db7a
  40db19:	ins    BYTE PTR es:[rdi],dx
  40db1a:	sub    al,0x20
  40db1c:	push   rax
  40db1d:	jne    0x40db81
  40db1f:	ins    BYTE PTR es:[rdi],dx
  40db20:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40db27:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40db2b:	cmp    BYTE PTR [rcx],bh
  40db2d:	cmp    BYTE PTR [rsi*1+0x38646364],dh
  40db34:	xor    BYTE PTR [rax],bh
  40db36:	xor    BYTE PTR [rbx+0x63],ah
  40db39:	cmp    DWORD PTR [rcx],esi
  40db3b:	add    DWORD PTR [rsi],edx
  40db3d:	ins    DWORD PTR es:[rdi],dx
  40db3e:	gs imul esp,DWORD PTR fs:[rcx+0x50],0x42687461
  40db47:	imul   ebp,DWORD PTR [rsi+0x64],0x53676e69
  40db4e:	outs   dx,DWORD PTR ds:[rsi]
  40db4f:	jne    0x40dbc3
  40db51:	movsxd esp,DWORD PTR [rbp+0x1]
  40db54:	jnp    0x40dba9
  40db56:	jns    0x40dbcb
  40db58:	je     0x40dbbf
  40db5a:	ins    DWORD PTR es:[rdi],dx
  40db5b:	cs push rdi
  40db5d:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40db64:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40db66:	jb     0x40dbd5
  40db68:	jae    0x40db98
  40db6a:	rex.X imul ebp,DWORD PTR [rsi+0x64],0x53676e69
  40db72:	outs   dx,DWORD PTR ds:[rsi]
  40db73:	jne    0x40dbe7
  40db75:	movsxd esp,DWORD PTR [rbp+0x2c]
  40db78:	and    BYTE PTR [rbx+0x79],dl
  40db7b:	jae    0x40dbf1
  40db7d:	gs ins DWORD PTR es:[rdi],dx
  40db7f:	cs push rdi
  40db81:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40db88:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40db8a:	jb     0x40dbf9
  40db8c:	jae    0x40dbba
  40db8e:	and    BYTE PTR [rsi+0x65],dl
  40db91:	jb     0x40dc06
  40db93:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40db9a:	xor    BYTE PTR cs:[rsi],ch
  40db9d:	xor    BYTE PTR [rax+riz*1],ch
  40dba0:	rex.XB jne 0x40dc0f
  40dba3:	je     0x40dc1a
  40dba5:	jb     0x40dc0c
  40dba7:	cmp    eax,0x7475656e
  40dbac:	jb     0x40dc0f
  40dbae:	ins    BYTE PTR es:[rdi],dx
  40dbaf:	sub    al,0x20
  40dbb1:	push   rax
  40dbb2:	jne    0x40dc16
  40dbb4:	ins    BYTE PTR es:[rdi],dx
  40dbb5:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40dbbc:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40dbc0:	(bad)  
  40dbc1:	(bad)  
  40dbc2:	(bad)  
  40dbc3:	(bad)  
  40dbc4:	xor    eax,0x31363563
  40dbc9:	cmp    DWORD PTR [rbx],esi
  40dbcb:	xor    al,0x65
  40dbcd:	xor    BYTE PTR [rax],bh
  40dbcf:	cmp    DWORD PTR [rcx],eax
  40dbd1:	or     DWORD PTR [rax+0x61],esi
  40dbd4:	je     0x40dc3e
  40dbd6:	rex.WR (bad) 
  40dbd8:	(bad)  
  40dbd9:	gs ins BYTE PTR es:[rdi],dx
  40dbdb:	add    DWORD PTR [rsi],eax
  40dbdd:	ins    BYTE PTR es:[rdi],dx
  40dbde:	(bad)  
  40dbdf:	jns    0x40dc50
  40dbe1:	jne    0x40dc57
  40dbe3:	add    DWORD PTR [rbx+0x53],esi
  40dbe6:	jns    0x40dc5b
  40dbe8:	je     0x40dc4f
  40dbea:	ins    DWORD PTR es:[rdi],dx
  40dbeb:	cs push rdi
  40dbed:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40dbf4:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40dbf6:	jb     0x40dc65
  40dbf8:	jae    0x40dc28
  40dbfa:	rex.WR (bad) 
  40dbfc:	(bad)  
  40dbfd:	gs ins BYTE PTR es:[rdi],dx
  40dbff:	sub    al,0x20
  40dc01:	push   rbx
  40dc02:	jns    0x40dc77
  40dc04:	je     0x40dc6b
  40dc06:	ins    DWORD PTR es:[rdi],dx
  40dc07:	cs push rdi
  40dc09:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40dc10:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40dc12:	jb     0x40dc81
  40dc14:	jae    0x40dc42
  40dc16:	and    BYTE PTR [rsi+0x65],dl
  40dc19:	jb     0x40dc8e
  40dc1b:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40dc22:	xor    BYTE PTR cs:[rsi],ch
  40dc25:	xor    BYTE PTR [rax+riz*1],ch
  40dc28:	rex.XB jne 0x40dc97
  40dc2b:	je     0x40dca2
  40dc2d:	jb     0x40dc94
  40dc2f:	cmp    eax,0x7475656e
  40dc34:	jb     0x40dc97
  40dc36:	ins    BYTE PTR es:[rdi],dx
  40dc37:	sub    al,0x20
  40dc39:	push   rax
  40dc3a:	jne    0x40dc9e
  40dc3c:	ins    BYTE PTR es:[rdi],dx
  40dc3d:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40dc44:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40dc48:	(bad)  
  40dc49:	(bad)  
  40dc4a:	(bad)  
  40dc4b:	(bad)  
  40dc4c:	xor    eax,0x31363563
  40dc51:	cmp    DWORD PTR [rbx],esi
  40dc53:	xor    al,0x65
  40dc55:	xor    BYTE PTR [rax],bh
  40dc57:	cmp    DWORD PTR [rcx],eax
  40dc59:	add    DWORD PTR [rcx+rax*1],esi
  40dc5c:	(bad)  
  40dc5d:	jo     0x40dcd1
  40dc5f:	outs   dx,DWORD PTR ds:[rsi]
  40dc60:	movsxd esp,DWORD PTR [rbp+0x73]
  40dc63:	jae    0x40dcd4
  40dc65:	jb     0x40dcb3
  40dc67:	(bad)  
  40dc68:	(bad)  
  40dc69:	gs ins BYTE PTR es:[rdi],dx
  40dc6b:	add    DWORD PTR [rsi],eax
  40dc6d:	ins    BYTE PTR es:[rdi],dx
  40dc6e:	(bad)  
  40dc6f:	jns    0x40dce0
  40dc71:	jne    0x40dce7
  40dc73:	add    DWORD PTR [rbx+0x53],esi
  40dc76:	jns    0x40dceb
  40dc78:	je     0x40dcdf
  40dc7a:	ins    DWORD PTR es:[rdi],dx
  40dc7b:	cs push rdi
  40dc7d:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40dc84:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40dc86:	jb     0x40dcf5
  40dc88:	jae    0x40dcb8
  40dc8a:	rex.WR (bad) 
  40dc8c:	(bad)  
  40dc8d:	gs ins BYTE PTR es:[rdi],dx
  40dc8f:	sub    al,0x20
  40dc91:	push   rbx
  40dc92:	jns    0x40dd07
  40dc94:	je     0x40dcfb
  40dc96:	ins    DWORD PTR es:[rdi],dx
  40dc97:	cs push rdi
  40dc99:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40dca0:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40dca2:	jb     0x40dd11
  40dca4:	jae    0x40dcd2
  40dca6:	and    BYTE PTR [rsi+0x65],dl
  40dca9:	jb     0x40dd1e
  40dcab:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40dcb2:	xor    BYTE PTR cs:[rsi],ch
  40dcb5:	xor    BYTE PTR [rax+riz*1],ch
  40dcb8:	rex.XB jne 0x40dd27
  40dcbb:	je     0x40dd32
  40dcbd:	jb     0x40dd24
  40dcbf:	cmp    eax,0x7475656e
  40dcc4:	jb     0x40dd27
  40dcc6:	ins    BYTE PTR es:[rdi],dx
  40dcc7:	sub    al,0x20
  40dcc9:	push   rax
  40dcca:	jne    0x40dd2e
  40dccc:	ins    BYTE PTR es:[rdi],dx
  40dccd:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40dcd4:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40dcd8:	(bad)  
  40dcd9:	(bad)  
  40dcda:	(bad)  
  40dcdb:	(bad)  
  40dcdc:	xor    eax,0x31363563
  40dce1:	cmp    DWORD PTR [rbx],esi
  40dce3:	xor    al,0x65
  40dce5:	xor    BYTE PTR [rax],bh
  40dce7:	cmp    DWORD PTR [rcx],eax
  40dce9:	add    DWORD PTR [rax],esi
  40dceb:	add    DWORD PTR [rdx],ecx
  40dced:	jae    0x40dd5e
  40dcef:	jne    0x40dd63
  40dcf1:	movsxd esp,DWORD PTR [rbp+0x50]
  40dcf4:	(bad)  
  40dcf5:	je     0x40dd5f
  40dcf7:	add    DWORD PTR [rsi],eax
  40dcf9:	ins    BYTE PTR es:[rdi],dx
  40dcfa:	(bad)  
  40dcfb:	jns    0x40dd6c
  40dcfd:	jne    0x40dd73
  40dcff:	add    DWORD PTR [rbp+0x53],esi
  40dd02:	jns    0x40dd77
  40dd04:	je     0x40dd6b
  40dd06:	ins    DWORD PTR es:[rdi],dx
  40dd07:	cs push rdi
  40dd09:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40dd10:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40dd12:	jb     0x40dd81
  40dd14:	jae    0x40dd44
  40dd16:	push   rsp
  40dd17:	gs js  0x40dd8e
  40dd1a:	rex.X outs dx,DWORD PTR ds:[rsi]
  40dd1c:	js     0x40dd4a
  40dd1e:	and    BYTE PTR [rbx+0x79],dl
  40dd21:	jae    0x40dd97
  40dd23:	gs ins DWORD PTR es:[rdi],dx
  40dd25:	cs push rdi
  40dd27:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40dd2e:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40dd30:	jb     0x40dd9f
  40dd32:	jae    0x40dd60
  40dd34:	and    BYTE PTR [rsi+0x65],dl
  40dd37:	jb     0x40ddac
  40dd39:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40dd40:	xor    BYTE PTR cs:[rsi],ch
  40dd43:	xor    BYTE PTR [rax+riz*1],ch
  40dd46:	rex.XB jne 0x40ddb5
  40dd49:	je     0x40ddc0
  40dd4b:	jb     0x40ddb2
  40dd4d:	cmp    eax,0x7475656e
  40dd52:	jb     0x40ddb5
  40dd54:	ins    BYTE PTR es:[rdi],dx
  40dd55:	sub    al,0x20
  40dd57:	push   rax
  40dd58:	jne    0x40ddbc
  40dd5a:	ins    BYTE PTR es:[rdi],dx
  40dd5b:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40dd62:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40dd66:	(bad)  
  40dd67:	(bad)  
  40dd68:	(bad)  
  40dd69:	(bad)  
  40dd6a:	xor    eax,0x31363563
  40dd6f:	cmp    DWORD PTR [rbx],esi
  40dd71:	xor    al,0x65
  40dd73:	xor    BYTE PTR [rax],bh
  40dd75:	cmp    DWORD PTR [rcx],eax
  40dd77:	add    DWORD PTR [rip+0x38780c01],esi        # 0x38b8e97e
  40dd7d:	ss push rax
  40dd7f:	jb     0x40ddf0
  40dd81:	movsxd esp,DWORD PTR [rbp+0x73]
  40dd84:	jae    0x40ddf5
  40dd86:	jb     0x40dd89
  40dd88:	(bad)  
  40dd89:	ins    BYTE PTR es:[rdi],dx
  40dd8a:	(bad)  
  40dd8b:	jns    0x40ddfc
  40dd8d:	jne    0x40de03
  40dd8f:	add    DWORD PTR [rdi+0x63694d01],esp
  40dd95:	jb     0x40de06
  40dd97:	jae    0x40de08
  40dd99:	data16 je 0x40ddca
  40dd9c:	push   rbx
  40dd9d:	jno    0x40de0b
  40dd9f:	push   rbx
  40dda0:	gs jb  0x40de19
  40dda3:	gs jb  0x40ddd4
  40dda6:	rex.WRB (bad) 
  40dda8:	outs   dx,BYTE PTR ds:[rsi]
  40dda9:	(bad)  
  40ddaa:	gs ins DWORD PTR es:[edi],dx
  40ddad:	outs   dx,BYTE PTR gs:[rsi]
  40ddaf:	je     0x40dddf
  40ddb1:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40ddb3:	outs   dx,BYTE PTR ds:[rsi]
  40ddb4:	je     0x40de28
  40ddb6:	outs   dx,DWORD PTR ds:[rsi]
  40ddb7:	ins    BYTE PTR es:[rdi],dx
  40ddb8:	jae    0x40dde8
  40ddba:	rex.X imul ebp,DWORD PTR [rsi+0x64],0x52676e69
  40ddc2:	(bad)  
  40ddc3:	imul   ebp,DWORD PTR fs:[rdi+0x42],0x6f747475
  40ddcb:	outs   dx,BYTE PTR ds:[rsi]
  40ddcc:	sub    al,0x20
  40ddce:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
  40ddd6:	je     0x40de06
  40ddd8:	push   rbx
  40ddd9:	jno    0x40de47
  40dddb:	push   rbx
  40dddc:	gs jb  0x40de55
  40dddf:	gs jb  0x40de10
  40dde2:	rex.WRB (bad) 
  40dde4:	outs   dx,BYTE PTR ds:[rsi]
  40dde5:	(bad)  
  40dde6:	gs ins DWORD PTR es:[edi],dx
  40dde9:	outs   dx,BYTE PTR gs:[rsi]
  40ddeb:	je     0x40de1b
  40dded:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40ddef:	outs   dx,BYTE PTR ds:[rsi]
  40ddf0:	je     0x40de64
  40ddf2:	outs   dx,DWORD PTR ds:[rsi]
  40ddf3:	ins    BYTE PTR es:[rdi],dx
  40ddf4:	jae    0x40de22
  40ddf6:	and    BYTE PTR [rsi+0x65],dl
  40ddf9:	jb     0x40de6e
  40ddfb:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e30313d
  40de02:	xor    BYTE PTR [rsi],ch
  40de04:	xor    BYTE PTR [rsi],ch
  40de06:	xor    BYTE PTR [rax+riz*1],ch
  40de09:	rex.XB jne 0x40de78
  40de0c:	je     0x40de83
  40de0e:	jb     0x40de75
  40de10:	cmp    eax,0x7475656e
  40de15:	jb     0x40de78
  40de17:	ins    BYTE PTR es:[rdi],dx
  40de18:	sub    al,0x20
  40de1a:	push   rax
  40de1b:	jne    0x40de7f
  40de1d:	ins    BYTE PTR es:[rdi],dx
  40de1e:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40de25:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40de29:	cmp    BYTE PTR [rcx],bh
  40de2b:	cmp    BYTE PTR [rsi*1+0x38646364],dh
  40de32:	xor    BYTE PTR [rax],bh
  40de34:	xor    BYTE PTR [rbx+0x63],ah
  40de37:	cmp    DWORD PTR [rcx],esi
  40de39:	add    DWORD PTR [rcx],eax
  40de3b:	xor    DWORD PTR [rdx],eax
  40de3d:	add    DWORD PTR [rdx],eax
  40de3f:	add    BYTE PTR [rdx+0x0],al
  40de42:	add    DWORD PTR [rax],eax
  40de44:	add    BYTE PTR [rax],al
  40de46:	(bad)  
  40de47:	(bad)  
  40de48:	(bad)  
  40de49:	inc    DWORD PTR [rcx]
  40de4b:	add    BYTE PTR [rax],al
  40de4d:	add    BYTE PTR [rax],al
  40de4f:	add    BYTE PTR [rax],al
  40de51:	add    BYTE PTR [rdx+rax*1],cl
  40de54:	add    BYTE PTR [rax],al
  40de56:	add    BYTE PTR [rdi+0x53],dl
  40de59:	jns    0x40dece
  40de5b:	je     0x40dec2
  40de5d:	ins    DWORD PTR es:[rdi],dx
  40de5e:	cs push rdi
  40de60:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40de67:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40de69:	jb     0x40ded8
  40de6b:	jae    0x40de99
  40de6d:	and    BYTE PTR [rsi+0x65],dl
  40de70:	jb     0x40dee5
  40de72:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40de79:	xor    BYTE PTR cs:[rsi],ch
  40de7c:	xor    BYTE PTR [rax+riz*1],ch
  40de7f:	rex.XB jne 0x40deee
  40de82:	je     0x40def9
  40de84:	jb     0x40deeb
  40de86:	cmp    eax,0x7475656e
  40de8b:	jb     0x40deee
  40de8d:	ins    BYTE PTR es:[rdi],dx
  40de8e:	sub    al,0x20
  40de90:	push   rax
  40de91:	jne    0x40def5
  40de93:	ins    BYTE PTR es:[rdi],dx
  40de94:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40de9b:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40de9f:	(bad)  
  40dea0:	(bad)  
  40dea1:	(bad)  
  40dea2:	(bad)  
  40dea3:	xor    eax,0x31363563
  40dea8:	cmp    DWORD PTR [rbx],esi
  40deaa:	xor    al,0x65
  40deac:	xor    BYTE PTR [rax],bh
  40deae:	cmp    DWORD PTR [rip+0x1],eax        # 0x40deb5
  40deb4:	sbb    al,0x53
  40deb6:	jns    0x40df2b
  40deb8:	je     0x40df1f
  40deba:	ins    DWORD PTR es:[rdi],dx
  40debb:	cs push rdi
  40debd:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40dec4:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40dec6:	jb     0x40df35
  40dec8:	jae    0x40def8
  40deca:	rex.WB ins DWORD PTR es:[rdi],dx
  40decc:	rex.WRB outs dx,DWORD PTR gs:[rsi]
  40decf:	fs add DWORD PTR gs:[rax],eax
  40ded3:	add    BYTE PTR [rax],al
  40ded5:	(bad)  
  40ded6:	jbe    0x40df39
  40ded8:	ins    BYTE PTR es:[rdi],dx
  40ded9:	jne    0x40df40
  40dedb:	pop    rdi
  40dedc:	pop    rdi
  40dedd:	add    BYTE PTR [rax],cl
  40dedf:	add    al,BYTE PTR [rax]
  40dee1:	add    BYTE PTR [rax],al
  40dee3:	add    BYTE PTR [rax],al
  40dee5:	add    BYTE PTR [rax],al
  40dee7:	or     eax,DWORD PTR [rbx+0x0]
  40deea:	add    DWORD PTR [rax],eax
  40deec:	add    BYTE PTR [rax],al
  40deee:	(bad)  
  40deef:	(bad)  
  40def0:	(bad)  
  40def1:	inc    DWORD PTR [rcx]
  40def3:	add    BYTE PTR [rax],al
  40def5:	add    BYTE PTR [rax],al
  40def7:	add    BYTE PTR [rax],al
  40def9:	add    BYTE PTR [rdx+rax*1],cl
  40defc:	add    BYTE PTR [rax],al
  40defe:	add    BYTE PTR [rcx+0x53],dl
  40df01:	jns    0x40df76
  40df03:	je     0x40df6a
  40df05:	ins    DWORD PTR es:[rdi],dx
  40df06:	cs rex.R jb 0x40df6b
  40df0a:	ja     0x40df75
  40df0c:	outs   dx,BYTE PTR ds:[rsi]
  40df0d:	addr32 sub al,0x20
  40df10:	push   rsi
  40df11:	gs jb  0x40df87
  40df14:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40df1b:	xor    BYTE PTR cs:[rsi],ch
  40df1e:	xor    BYTE PTR [rax+riz*1],ch
  40df21:	rex.XB jne 0x40df90
  40df24:	je     0x40df9b
  40df26:	jb     0x40df8d
  40df28:	cmp    eax,0x7475656e
  40df2d:	jb     0x40df90
  40df2f:	ins    BYTE PTR es:[rdi],dx
  40df30:	sub    al,0x20
  40df32:	push   rax
  40df33:	jne    0x40df97
  40df35:	ins    BYTE PTR es:[rdi],dx
  40df36:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40df3d:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40df41:	(bad)  
  40df42:	xor    BYTE PTR [rbx],dh
  40df44:	xor    ax,0x3766
  40df48:	xor    WORD PTR [rcx],si
  40df4b:	fs xor eax,0x61336130
  40df51:	add    eax,0x1
  40df56:	adc    al,0x53
  40df58:	jns    0x40dfcd
  40df5a:	je     0x40dfc1
  40df5c:	ins    DWORD PTR es:[rdi],dx
  40df5d:	cs rex.R jb 0x40dfc2
  40df61:	ja     0x40dfcc
  40df63:	outs   dx,BYTE PTR ds:[rsi]
  40df64:	addr32 cs push rax
  40df67:	outs   dx,DWORD PTR ds:[rsi]
  40df68:	imul   ebp,DWORD PTR [rsi+0x74],0x2
  40df6f:	add    DWORD PTR [rax+0x1],edi
  40df72:	jns    0x40df74
  40df74:	add    BYTE PTR [rax],cl
  40df76:	or     BYTE PTR [rdx],al
  40df78:	add    BYTE PTR [rax],al
  40df7a:	add    BYTE PTR [rsi],cl
  40df7c:	add    BYTE PTR [rax],al
  40df7e:	add    BYTE PTR [rax+rax*1],bh
  40df81:	add    BYTE PTR [rax],al
  40df83:	or     eax,DWORD PTR [rax+rax*1+0x1]
  40df87:	add    BYTE PTR [rax],al
  40df89:	add    bh,bh
  40df8b:	(bad)  
  40df8c:	(bad)  
  40df8d:	inc    DWORD PTR [rcx]
  40df8f:	add    BYTE PTR [rax],al
  40df91:	add    BYTE PTR [rax],al
  40df93:	add    BYTE PTR [rax],al
  40df95:	add    BYTE PTR [rdx+rax*1],cl
  40df98:	add    BYTE PTR [rax],al
  40df9a:	add    BYTE PTR [rdi+0x53],dl
  40df9d:	jns    0x40e012
  40df9f:	je     0x40e006
  40dfa1:	ins    DWORD PTR es:[rdi],dx
  40dfa2:	cs push rdi
  40dfa4:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40dfab:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40dfad:	jb     0x40e01c
  40dfaf:	jae    0x40dfdd
  40dfb1:	and    BYTE PTR [rsi+0x65],dl
  40dfb4:	jb     0x40e029
  40dfb6:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40dfbd:	xor    BYTE PTR cs:[rsi],ch
  40dfc0:	xor    BYTE PTR [rax+riz*1],ch
  40dfc3:	rex.XB jne 0x40e032
  40dfc6:	je     0x40e03d
  40dfc8:	jb     0x40e02f
  40dfca:	cmp    eax,0x7475656e
  40dfcf:	jb     0x40e032
  40dfd1:	ins    BYTE PTR es:[rdi],dx
  40dfd2:	sub    al,0x20
  40dfd4:	push   rax
  40dfd5:	jne    0x40e039
  40dfd7:	ins    BYTE PTR es:[rdi],dx
  40dfd8:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40dfdf:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40dfe3:	(bad)  
  40dfe4:	(bad)  
  40dfe5:	(bad)  
  40dfe6:	(bad)  
  40dfe7:	xor    eax,0x31363563
  40dfec:	cmp    DWORD PTR [rbx],esi
  40dfee:	xor    al,0x65
  40dff0:	xor    BYTE PTR [rax],bh
  40dff2:	cmp    DWORD PTR [rip+0x1],eax        # 0x40dff9
  40dff8:	sbb    al,0x53
  40dffa:	jns    0x40e06f
  40dffc:	je     0x40e063
  40dffe:	ins    DWORD PTR es:[rdi],dx
  40dfff:	cs push rdi
  40e001:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40e008:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40e00a:	jb     0x40e079
  40e00c:	jae    0x40e03c
  40e00e:	push   rax
  40e00f:	(bad)  
  40e010:	fs imul ebp,DWORD PTR fs:[rsi+0x67],0x5
  40e019:	add    al,0x5f
  40e01b:	(bad)  
  40e01c:	ins    BYTE PTR es:[rdi],dx
  40e01d:	ins    BYTE PTR es:[rdi],dx
  40e01e:	add    al,0x5f
  40e020:	je     0x40e091
  40e022:	jo     0x40e029
  40e024:	pop    rdi
  40e025:	ins    BYTE PTR es:[rdi],dx
  40e026:	gs data16 je 0x40e030
  40e02a:	pop    rdi
  40e02b:	jb     0x40e096
  40e02d:	addr32 push 0x625f0774
  40e033:	outs   dx,DWORD PTR ds:[rsi]
  40e034:	je     0x40e0aa
  40e036:	outs   dx,DWORD PTR ds:[rsi]
  40e037:	ins    DWORD PTR es:[rdi],dx
  40e038:	add    BYTE PTR [rax],al
  40e03a:	add    BYTE PTR [rax],al
  40e03c:	add    BYTE PTR [rcx],al
  40e03e:	or     BYTE PTR [rax],cl
  40e040:	or     BYTE PTR [rax],cl
  40e042:	add    al,BYTE PTR [rax]
  40e044:	add    BYTE PTR [rax],al
  40e046:	add    BYTE PTR [rdx],al
  40e048:	add    BYTE PTR [rax],al
  40e04a:	add    BYTE PTR [rsi],cl
  40e04c:	add    BYTE PTR [rax],al
  40e04e:	add    BYTE PTR [rax],al
  40e050:	add    BYTE PTR [rax],al
  40e052:	add    BYTE PTR [rdx],al
  40e054:	add    BYTE PTR [rax],al
  40e056:	add    BYTE PTR [rbx],cl
  40e058:	add    BYTE PTR [r9],al
  40e05b:	add    BYTE PTR [rax],al
  40e05d:	add    bh,bh
  40e05f:	(bad)  
  40e060:	(bad)  
  40e061:	inc    DWORD PTR [rcx]
  40e063:	add    BYTE PTR [rax],al
  40e065:	add    BYTE PTR [rax],al
  40e067:	add    BYTE PTR [rax],al
  40e069:	add    BYTE PTR [rdx+rax*1],cl
  40e06c:	add    BYTE PTR [rax],al
  40e06e:	add    BYTE PTR [rcx+0x53],dl
  40e071:	jns    0x40e0e6
  40e073:	je     0x40e0da
  40e075:	ins    DWORD PTR es:[rdi],dx
  40e076:	cs rex.R jb 0x40e0db
  40e07a:	ja     0x40e0e5
  40e07c:	outs   dx,BYTE PTR ds:[rsi]
  40e07d:	addr32 sub al,0x20
  40e080:	push   rsi
  40e081:	gs jb  0x40e0f7
  40e084:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40e08b:	xor    BYTE PTR cs:[rsi],ch
  40e08e:	xor    BYTE PTR [rax+riz*1],ch
  40e091:	rex.XB jne 0x40e100
  40e094:	je     0x40e10b
  40e096:	jb     0x40e0fd
  40e098:	cmp    eax,0x7475656e
  40e09d:	jb     0x40e100
  40e09f:	ins    BYTE PTR es:[rdi],dx
  40e0a0:	sub    al,0x20
  40e0a2:	push   rax
  40e0a3:	jne    0x40e107
  40e0a5:	ins    BYTE PTR es:[rdi],dx
  40e0a6:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40e0ad:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40e0b1:	(bad)  
  40e0b2:	xor    BYTE PTR [rbx],dh
  40e0b4:	xor    ax,0x3766
  40e0b8:	xor    WORD PTR [rcx],si
  40e0bb:	fs xor eax,0x61336130
  40e0c1:	add    eax,0x1
  40e0c6:	adc    edx,DWORD PTR [rbx+0x79]
  40e0c9:	jae    0x40e13f
  40e0cb:	gs ins DWORD PTR es:[rdi],dx
  40e0cd:	cs rex.R jb 0x40e132
  40e0d1:	ja     0x40e13c
  40e0d3:	outs   dx,BYTE PTR ds:[rsi]
  40e0d4:	addr32 cs push rbx
  40e0d7:	imul   edi,DWORD PTR [rdx+0x65],0x2
  40e0de:	add    eax,0x74646977
  40e0e3:	push   0x69656806
  40e0e8:	addr32 push 0x8000074
  40e0ee:	or     BYTE PTR [rdx],al
  40e0f0:	add    BYTE PTR [rax],al
  40e0f2:	add    BYTE PTR [rdx],ch
  40e0f4:	add    BYTE PTR [rax],al
  40e0f6:	add    BYTE PTR [rcx],dl
  40e0f8:	add    BYTE PTR [rax],al
  40e0fa:	add    BYTE PTR [rbx],cl
  40e0fc:	or     BYTE PTR [rax+rax*1],al
  40e0ff:	add    BYTE PTR [rax],al
  40e101:	add    DWORD PTR [rax+rdi*2],eax
  40e104:	es ss xor al,0x2
  40e108:	add    DWORD PTR [rbp+0x0],eax
  40e10b:	add    DWORD PTR [rax],eax
  40e10d:	add    BYTE PTR [rax],al
  40e10f:	(bad)  
  40e110:	(bad)  
  40e111:	(bad)  
  40e112:	inc    DWORD PTR [rcx]
  40e114:	add    BYTE PTR [rax],al
  40e116:	add    BYTE PTR [rax],al
  40e118:	add    BYTE PTR [rax],al
  40e11a:	add    BYTE PTR [rdx+rax*1],cl
  40e11d:	add    BYTE PTR [rax],al
  40e11f:	add    BYTE PTR [rdi+0x53],dl
  40e122:	jns    0x40e197
  40e124:	je     0x40e18b
  40e126:	ins    DWORD PTR es:[rdi],dx
  40e127:	cs push rdi
  40e129:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40e130:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40e132:	jb     0x40e1a1
  40e134:	jae    0x40e162
  40e136:	and    BYTE PTR [rsi+0x65],dl
  40e139:	jb     0x40e1ae
  40e13b:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40e142:	xor    BYTE PTR cs:[rsi],ch
  40e145:	xor    BYTE PTR [rax+riz*1],ch
  40e148:	rex.XB jne 0x40e1b7
  40e14b:	je     0x40e1c2
  40e14d:	jb     0x40e1b4
  40e14f:	cmp    eax,0x7475656e
  40e154:	jb     0x40e1b7
  40e156:	ins    BYTE PTR es:[rdi],dx
  40e157:	sub    al,0x20
  40e159:	push   rax
  40e15a:	jne    0x40e1be
  40e15c:	ins    BYTE PTR es:[rdi],dx
  40e15d:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40e164:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40e168:	(bad)  
  40e169:	(bad)  
  40e16a:	(bad)  
  40e16b:	(bad)  
  40e16c:	xor    eax,0x31363563
  40e171:	cmp    DWORD PTR [rbx],esi
  40e173:	xor    al,0x65
  40e175:	xor    BYTE PTR [rax],bh
  40e177:	cmp    DWORD PTR [rip+0x1],eax        # 0x40e17e
  40e17d:	and    DWORD PTR [rbx+0x79],edx
  40e180:	jae    0x40e1f6
  40e182:	gs ins DWORD PTR es:[rdi],dx
  40e184:	cs push rdi
  40e186:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40e18d:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40e18f:	jb     0x40e1fe
  40e191:	jae    0x40e1c1
  40e193:	rex.B jne 0x40e20a
  40e196:	outs   dx,DWORD PTR ds:[rsi]
  40e197:	push   rbx
  40e198:	imul   edi,DWORD PTR [rdx+0x65],0x65646f4d
  40e19f:	add    DWORD PTR [rax],eax
  40e1a1:	add    BYTE PTR [rax],al
  40e1a3:	(bad)  
  40e1a4:	jbe    0x40e207
  40e1a6:	ins    BYTE PTR es:[rdi],dx
  40e1a7:	jne    0x40e20e
  40e1a9:	pop    rdi
  40e1aa:	pop    rdi
  40e1ab:	add    BYTE PTR [rax],cl
  40e1ad:	add    al,BYTE PTR [rax]
  40e1af:	add    BYTE PTR [rax],al
  40e1b1:	add    BYTE PTR [rax],al
  40e1b3:	add    BYTE PTR [rax],al
  40e1b5:	or     eax,DWORD PTR [rdx+0x0]
  40e1b8:	add    DWORD PTR [rax],eax
  40e1ba:	add    BYTE PTR [rax],al
  40e1bc:	(bad)  
  40e1bd:	(bad)  
  40e1be:	(bad)  
  40e1bf:	inc    DWORD PTR [rcx]
  40e1c1:	add    BYTE PTR [rax],al
  40e1c3:	add    BYTE PTR [rax],al
  40e1c5:	add    BYTE PTR [rax],al
  40e1c7:	add    BYTE PTR [rdx+rax*1],cl
  40e1ca:	add    BYTE PTR [rax],al
  40e1cc:	add    BYTE PTR [rdi+0x53],dl
  40e1cf:	jns    0x40e244
  40e1d1:	je     0x40e238
  40e1d3:	ins    DWORD PTR es:[rdi],dx
  40e1d4:	cs push rdi
  40e1d6:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40e1dd:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40e1df:	jb     0x40e24e
  40e1e1:	jae    0x40e20f
  40e1e3:	and    BYTE PTR [rsi+0x65],dl
  40e1e6:	jb     0x40e25b
  40e1e8:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40e1ef:	xor    BYTE PTR cs:[rsi],ch
  40e1f2:	xor    BYTE PTR [rax+riz*1],ch
  40e1f5:	rex.XB jne 0x40e264
  40e1f8:	je     0x40e26f
  40e1fa:	jb     0x40e261
  40e1fc:	cmp    eax,0x7475656e
  40e201:	jb     0x40e264
  40e203:	ins    BYTE PTR es:[rdi],dx
  40e204:	sub    al,0x20
  40e206:	push   rax
  40e207:	jne    0x40e26b
  40e209:	ins    BYTE PTR es:[rdi],dx
  40e20a:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40e211:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40e215:	(bad)  
  40e216:	(bad)  
  40e217:	(bad)  
  40e218:	(bad)  
  40e219:	xor    eax,0x31363563
  40e21e:	cmp    DWORD PTR [rbx],esi
  40e220:	xor    al,0x65
  40e222:	xor    BYTE PTR [rax],bh
  40e224:	cmp    DWORD PTR [rip+0x1],eax        # 0x40e22b
  40e22a:	sbb    al,0x53
  40e22c:	jns    0x40e2a1
  40e22e:	je     0x40e295
  40e230:	ins    DWORD PTR es:[rdi],dx
  40e231:	cs push rdi
  40e233:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40e23a:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40e23c:	jb     0x40e2ab
  40e23e:	jae    0x40e26e
  40e240:	rex.WB ins DWORD PTR es:[rdi],dx
  40e242:	rex.WRB outs dx,DWORD PTR gs:[rsi]
  40e245:	fs add DWORD PTR gs:[rax],eax
  40e249:	add    BYTE PTR [rax],al
  40e24b:	(bad)  
  40e24c:	jbe    0x40e2af
  40e24e:	ins    BYTE PTR es:[rdi],dx
  40e24f:	jne    0x40e2b6
  40e251:	pop    rdi
  40e252:	pop    rdi
  40e253:	add    BYTE PTR [rax],cl
  40e255:	add    al,BYTE PTR [rax]
  40e257:	add    BYTE PTR [rax],al
  40e259:	add    BYTE PTR [rax],al
  40e25b:	add    BYTE PTR [rax],al
  40e25d:	or     eax,DWORD PTR [rbx+0x0]
  40e260:	add    DWORD PTR [rax],eax
  40e262:	add    BYTE PTR [rax],al
  40e264:	(bad)  
  40e265:	(bad)  
  40e266:	(bad)  
  40e267:	inc    DWORD PTR [rcx]
  40e269:	add    BYTE PTR [rax],al
  40e26b:	add    BYTE PTR [rax],al
  40e26d:	add    BYTE PTR [rax],al
  40e26f:	add    BYTE PTR [rdx+rax*1],cl
  40e272:	add    BYTE PTR [rax],al
  40e274:	add    BYTE PTR [rcx+0x53],dl
  40e277:	jns    0x40e2ec
  40e279:	je     0x40e2e0
  40e27b:	ins    DWORD PTR es:[rdi],dx
  40e27c:	cs rex.R jb 0x40e2e1
  40e280:	ja     0x40e2eb
  40e282:	outs   dx,BYTE PTR ds:[rsi]
  40e283:	addr32 sub al,0x20
  40e286:	push   rsi
  40e287:	gs jb  0x40e2fd
  40e28a:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40e291:	xor    BYTE PTR cs:[rsi],ch
  40e294:	xor    BYTE PTR [rax+riz*1],ch
  40e297:	rex.XB jne 0x40e306
  40e29a:	je     0x40e311
  40e29c:	jb     0x40e303
  40e29e:	cmp    eax,0x7475656e
  40e2a3:	jb     0x40e306
  40e2a5:	ins    BYTE PTR es:[rdi],dx
  40e2a6:	sub    al,0x20
  40e2a8:	push   rax
  40e2a9:	jne    0x40e30d
  40e2ab:	ins    BYTE PTR es:[rdi],dx
  40e2ac:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40e2b3:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40e2b7:	(bad)  
  40e2b8:	xor    BYTE PTR [rbx],dh
  40e2ba:	xor    ax,0x3766
  40e2be:	xor    WORD PTR [rcx],si
  40e2c1:	fs xor eax,0x61336130
  40e2c7:	add    eax,0x1
  40e2cc:	adc    al,0x53
  40e2ce:	jns    0x40e343
  40e2d0:	je     0x40e337
  40e2d2:	ins    DWORD PTR es:[rdi],dx
  40e2d3:	cs rex.R jb 0x40e338
  40e2d7:	ja     0x40e342
  40e2d9:	outs   dx,BYTE PTR ds:[rsi]
  40e2da:	addr32 cs push rax
  40e2dd:	outs   dx,DWORD PTR ds:[rsi]
  40e2de:	imul   ebp,DWORD PTR [rsi+0x74],0x2
  40e2e5:	add    DWORD PTR [rax+0x1],edi
  40e2e8:	jns    0x40e2ea
  40e2ea:	add    BYTE PTR [rax],cl
  40e2ec:	or     BYTE PTR [rdx],al
  40e2ee:	add    BYTE PTR [rax],al
  40e2f0:	add    BYTE PTR [rbp+0x1],dl
  40e2f3:	add    BYTE PTR [rax],al
  40e2f5:	outs   dx,BYTE PTR ds:[rsi]
  40e2f6:	add    BYTE PTR [rax],al
  40e2f8:	add    BYTE PTR [rbx],cl
  40e2fa:	add    BYTE PTR [rcx],r8b
  40e2fd:	add    BYTE PTR [rax],al
  40e2ff:	add    bh,bh
  40e301:	(bad)  
  40e302:	(bad)  
  40e303:	inc    DWORD PTR [rcx]
  40e305:	add    BYTE PTR [rax],al
  40e307:	add    BYTE PTR [rax],al
  40e309:	add    BYTE PTR [rax],al
  40e30b:	add    BYTE PTR [rdx+rax*1],cl
  40e30e:	add    BYTE PTR [rax],al
  40e310:	add    BYTE PTR [rdi+0x53],dl
  40e313:	jns    0x40e388
  40e315:	je     0x40e37c
  40e317:	ins    DWORD PTR es:[rdi],dx
  40e318:	cs push rdi
  40e31a:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40e321:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40e323:	jb     0x40e392
  40e325:	jae    0x40e353
  40e327:	and    BYTE PTR [rsi+0x65],dl
  40e32a:	jb     0x40e39f
  40e32c:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40e333:	xor    BYTE PTR cs:[rsi],ch
  40e336:	xor    BYTE PTR [rax+riz*1],ch
  40e339:	rex.XB jne 0x40e3a8
  40e33c:	je     0x40e3b3
  40e33e:	jb     0x40e3a5
  40e340:	cmp    eax,0x7475656e
  40e345:	jb     0x40e3a8
  40e347:	ins    BYTE PTR es:[rdi],dx
  40e348:	sub    al,0x20
  40e34a:	push   rax
  40e34b:	jne    0x40e3af
  40e34d:	ins    BYTE PTR es:[rdi],dx
  40e34e:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40e355:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40e359:	(bad)  
  40e35a:	(bad)  
  40e35b:	(bad)  
  40e35c:	(bad)  
  40e35d:	xor    eax,0x31363563
  40e362:	cmp    DWORD PTR [rbx],esi
  40e364:	xor    al,0x65
  40e366:	xor    BYTE PTR [rax],bh
  40e368:	cmp    DWORD PTR [rip+0x1],eax        # 0x40e36f
  40e36e:	sbb    al,0x53
  40e370:	jns    0x40e3e5
  40e372:	je     0x40e3d9
  40e374:	ins    DWORD PTR es:[rdi],dx
  40e375:	cs push rdi
  40e377:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40e37e:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40e380:	jb     0x40e3ef
  40e382:	jae    0x40e3b2
  40e384:	push   rax
  40e385:	(bad)  
  40e386:	fs imul ebp,DWORD PTR fs:[rsi+0x67],0x5
  40e38f:	add    al,0x5f
  40e391:	(bad)  
  40e392:	ins    BYTE PTR es:[rdi],dx
  40e393:	ins    BYTE PTR es:[rdi],dx
  40e394:	add    al,0x5f
  40e396:	je     0x40e407
  40e398:	jo     0x40e39f
  40e39a:	pop    rdi
  40e39b:	ins    BYTE PTR es:[rdi],dx
  40e39c:	gs data16 je 0x40e3a6
  40e3a0:	pop    rdi
  40e3a1:	jb     0x40e40c
  40e3a3:	addr32 push 0x625f0774
  40e3a9:	outs   dx,DWORD PTR ds:[rsi]
  40e3aa:	je     0x40e420
  40e3ac:	outs   dx,DWORD PTR ds:[rsi]
  40e3ad:	ins    DWORD PTR es:[rdi],dx
  40e3ae:	add    BYTE PTR [rax],al
  40e3b0:	add    BYTE PTR [rax],al
  40e3b2:	add    BYTE PTR [rcx],al
  40e3b4:	or     BYTE PTR [rax],cl
  40e3b6:	or     BYTE PTR [rax],cl
  40e3b8:	add    al,BYTE PTR [rax]
  40e3ba:	add    BYTE PTR [rax],al
  40e3bc:	add    BYTE PTR [rdx],cl
  40e3be:	add    BYTE PTR [rax],al
  40e3c0:	add    BYTE PTR [rdx],al
	...
  40e3ca:	add    BYTE PTR [rax],al
  40e3cc:	add    BYTE PTR [rbx],cl
  40e3ce:	add    BYTE PTR [r9],al
  40e3d1:	add    BYTE PTR [rax],al
  40e3d3:	add    bh,bh
  40e3d5:	(bad)  
  40e3d6:	(bad)  
  40e3d7:	inc    DWORD PTR [rcx]
  40e3d9:	add    BYTE PTR [rax],al
  40e3db:	add    BYTE PTR [rax],al
  40e3dd:	add    BYTE PTR [rax],al
  40e3df:	add    BYTE PTR [rdx+rax*1],cl
  40e3e2:	add    BYTE PTR [rax],al
  40e3e4:	add    BYTE PTR [rcx+0x53],dl
  40e3e7:	jns    0x40e45c
  40e3e9:	je     0x40e450
  40e3eb:	ins    DWORD PTR es:[rdi],dx
  40e3ec:	cs rex.R jb 0x40e451
  40e3f0:	ja     0x40e45b
  40e3f2:	outs   dx,BYTE PTR ds:[rsi]
  40e3f3:	addr32 sub al,0x20
  40e3f6:	push   rsi
  40e3f7:	gs jb  0x40e46d
  40e3fa:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40e401:	xor    BYTE PTR cs:[rsi],ch
  40e404:	xor    BYTE PTR [rax+riz*1],ch
  40e407:	rex.XB jne 0x40e476
  40e40a:	je     0x40e481
  40e40c:	jb     0x40e473
  40e40e:	cmp    eax,0x7475656e
  40e413:	jb     0x40e476
  40e415:	ins    BYTE PTR es:[rdi],dx
  40e416:	sub    al,0x20
  40e418:	push   rax
  40e419:	jne    0x40e47d
  40e41b:	ins    BYTE PTR es:[rdi],dx
  40e41c:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40e423:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40e427:	(bad)  
  40e428:	xor    BYTE PTR [rbx],dh
  40e42a:	xor    ax,0x3766
  40e42e:	xor    WORD PTR [rcx],si
  40e431:	fs xor eax,0x61336130
  40e437:	add    eax,0x1
  40e43c:	adc    edx,DWORD PTR [rbx+0x79]
  40e43f:	jae    0x40e4b5
  40e441:	gs ins DWORD PTR es:[rdi],dx
  40e443:	cs rex.R jb 0x40e4a8
  40e447:	ja     0x40e4b2
  40e449:	outs   dx,BYTE PTR ds:[rsi]
  40e44a:	addr32 cs push rbx
  40e44d:	imul   edi,DWORD PTR [rdx+0x65],0x2
  40e454:	add    eax,0x74646977
  40e459:	push   0x69656806
  40e45e:	addr32 push 0x8000074
  40e464:	or     BYTE PTR [rdx],al
  40e466:	add    BYTE PTR [rax],al
  40e468:	add    BYTE PTR [rsi],bl
  40e46a:	add    BYTE PTR [rax],al
  40e46c:	add    BYTE PTR [rdi],dl
  40e46e:	add    BYTE PTR [rax],al
  40e470:	add    BYTE PTR [rbx],cl
  40e472:	or     BYTE PTR [rax],cl
  40e474:	add    BYTE PTR [rax],al
  40e476:	add    BYTE PTR [rcx],al
  40e478:	add    ebp,DWORD PTR [rsi]
  40e47a:	cs add al,BYTE PTR cs:[rcx]
  40e47e:	add    al,BYTE PTR [rax]
  40e480:	rex.X add BYTE PTR [rcx],al
  40e483:	add    BYTE PTR [rax],al
  40e485:	add    bh,bh
  40e487:	(bad)  
  40e488:	(bad)  
  40e489:	inc    DWORD PTR [rcx]
  40e48b:	add    BYTE PTR [rax],al
  40e48d:	add    BYTE PTR [rax],al
  40e48f:	add    BYTE PTR [rax],al
  40e491:	add    BYTE PTR [rdx+rax*1],cl
  40e494:	add    BYTE PTR [rax],al
  40e496:	add    BYTE PTR [rdi+0x53],dl
  40e499:	jns    0x40e50e
  40e49b:	je     0x40e502
  40e49d:	ins    DWORD PTR es:[rdi],dx
  40e49e:	cs push rdi
  40e4a0:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40e4a7:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40e4a9:	jb     0x40e518
  40e4ab:	jae    0x40e4d9
  40e4ad:	and    BYTE PTR [rsi+0x65],dl
  40e4b0:	jb     0x40e525
  40e4b2:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40e4b9:	xor    BYTE PTR cs:[rsi],ch
  40e4bc:	xor    BYTE PTR [rax+riz*1],ch
  40e4bf:	rex.XB jne 0x40e52e
  40e4c2:	je     0x40e539
  40e4c4:	jb     0x40e52b
  40e4c6:	cmp    eax,0x7475656e
  40e4cb:	jb     0x40e52e
  40e4cd:	ins    BYTE PTR es:[rdi],dx
  40e4ce:	sub    al,0x20
  40e4d0:	push   rax
  40e4d1:	jne    0x40e535
  40e4d3:	ins    BYTE PTR es:[rdi],dx
  40e4d4:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40e4db:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40e4df:	(bad)  
  40e4e0:	(bad)  
  40e4e1:	(bad)  
  40e4e2:	(bad)  
  40e4e3:	xor    eax,0x31363563
  40e4e8:	cmp    DWORD PTR [rbx],esi
  40e4ea:	xor    al,0x65
  40e4ec:	xor    BYTE PTR [rax],bh
  40e4ee:	cmp    DWORD PTR [rip+0x1],eax        # 0x40e4f5
  40e4f4:	sbb    al,0x53
  40e4f6:	jns    0x40e56b
  40e4f8:	je     0x40e55f
  40e4fa:	ins    DWORD PTR es:[rdi],dx
  40e4fb:	cs push rdi
  40e4fd:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40e504:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40e506:	jb     0x40e575
  40e508:	jae    0x40e538
  40e50a:	rex.WB ins DWORD PTR es:[rdi],dx
  40e50c:	rex.WRB outs dx,DWORD PTR gs:[rsi]
  40e50f:	fs add DWORD PTR gs:[rax],eax
  40e513:	add    BYTE PTR [rax],al
  40e515:	(bad)  
  40e516:	jbe    0x40e579
  40e518:	ins    BYTE PTR es:[rdi],dx
  40e519:	jne    0x40e580
  40e51b:	pop    rdi
  40e51c:	pop    rdi
  40e51d:	add    BYTE PTR [rax],cl
  40e51f:	add    al,BYTE PTR [rax]
  40e521:	add    BYTE PTR [rax],al
  40e523:	add    BYTE PTR [rax],al
  40e525:	add    BYTE PTR [rax],al
  40e527:	or     eax,DWORD PTR [rbx+0x0]
  40e52a:	add    DWORD PTR [rax],eax
  40e52c:	add    BYTE PTR [rax],al
  40e52e:	(bad)  
  40e52f:	(bad)  
  40e530:	(bad)  
  40e531:	inc    DWORD PTR [rcx]
  40e533:	add    BYTE PTR [rax],al
  40e535:	add    BYTE PTR [rax],al
  40e537:	add    BYTE PTR [rax],al
  40e539:	add    BYTE PTR [rdx+rax*1],cl
  40e53c:	add    BYTE PTR [rax],al
  40e53e:	add    BYTE PTR [rcx+0x53],dl
  40e541:	jns    0x40e5b6
  40e543:	je     0x40e5aa
  40e545:	ins    DWORD PTR es:[rdi],dx
  40e546:	cs rex.R jb 0x40e5ab
  40e54a:	ja     0x40e5b5
  40e54c:	outs   dx,BYTE PTR ds:[rsi]
  40e54d:	addr32 sub al,0x20
  40e550:	push   rsi
  40e551:	gs jb  0x40e5c7
  40e554:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40e55b:	xor    BYTE PTR cs:[rsi],ch
  40e55e:	xor    BYTE PTR [rax+riz*1],ch
  40e561:	rex.XB jne 0x40e5d0
  40e564:	je     0x40e5db
  40e566:	jb     0x40e5cd
  40e568:	cmp    eax,0x7475656e
  40e56d:	jb     0x40e5d0
  40e56f:	ins    BYTE PTR es:[rdi],dx
  40e570:	sub    al,0x20
  40e572:	push   rax
  40e573:	jne    0x40e5d7
  40e575:	ins    BYTE PTR es:[rdi],dx
  40e576:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40e57d:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40e581:	(bad)  
  40e582:	xor    BYTE PTR [rbx],dh
  40e584:	xor    ax,0x3766
  40e588:	xor    WORD PTR [rcx],si
  40e58b:	fs xor eax,0x61336130
  40e591:	add    eax,0x1
  40e596:	adc    al,0x53
  40e598:	jns    0x40e60d
  40e59a:	je     0x40e601
  40e59c:	ins    DWORD PTR es:[rdi],dx
  40e59d:	cs rex.R jb 0x40e602
  40e5a1:	ja     0x40e60c
  40e5a3:	outs   dx,BYTE PTR ds:[rsi]
  40e5a4:	addr32 cs push rax
  40e5a7:	outs   dx,DWORD PTR ds:[rsi]
  40e5a8:	imul   ebp,DWORD PTR [rsi+0x74],0x2
  40e5af:	add    DWORD PTR [rax+0x1],edi
  40e5b2:	jns    0x40e5b4
  40e5b4:	add    BYTE PTR [rax],cl
  40e5b6:	or     BYTE PTR [rdx],al
  40e5b8:	add    BYTE PTR [rax],al
  40e5ba:	add    BYTE PTR [rsi],cl
  40e5bc:	add    BYTE PTR [rax],al
  40e5be:	add    BYTE PTR [rcx+0x0],dl
  40e5c1:	add    BYTE PTR [rax],al
  40e5c3:	or     eax,DWORD PTR [rax+rax*1+0x1]
  40e5c7:	add    BYTE PTR [rax],al
  40e5c9:	add    bh,bh
  40e5cb:	(bad)  
  40e5cc:	(bad)  
  40e5cd:	inc    DWORD PTR [rcx]
  40e5cf:	add    BYTE PTR [rax],al
  40e5d1:	add    BYTE PTR [rax],al
  40e5d3:	add    BYTE PTR [rax],al
  40e5d5:	add    BYTE PTR [rdx+rax*1],cl
  40e5d8:	add    BYTE PTR [rax],al
  40e5da:	add    BYTE PTR [rdi+0x53],dl
  40e5dd:	jns    0x40e652
  40e5df:	je     0x40e646
  40e5e1:	ins    DWORD PTR es:[rdi],dx
  40e5e2:	cs push rdi
  40e5e4:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40e5eb:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40e5ed:	jb     0x40e65c
  40e5ef:	jae    0x40e61d
  40e5f1:	and    BYTE PTR [rsi+0x65],dl
  40e5f4:	jb     0x40e669
  40e5f6:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40e5fd:	xor    BYTE PTR cs:[rsi],ch
  40e600:	xor    BYTE PTR [rax+riz*1],ch
  40e603:	rex.XB jne 0x40e672
  40e606:	je     0x40e67d
  40e608:	jb     0x40e66f
  40e60a:	cmp    eax,0x7475656e
  40e60f:	jb     0x40e672
  40e611:	ins    BYTE PTR es:[rdi],dx
  40e612:	sub    al,0x20
  40e614:	push   rax
  40e615:	jne    0x40e679
  40e617:	ins    BYTE PTR es:[rdi],dx
  40e618:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40e61f:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40e623:	(bad)  
  40e624:	(bad)  
  40e625:	(bad)  
  40e626:	(bad)  
  40e627:	xor    eax,0x31363563
  40e62c:	cmp    DWORD PTR [rbx],esi
  40e62e:	xor    al,0x65
  40e630:	xor    BYTE PTR [rax],bh
  40e632:	cmp    DWORD PTR [rip+0x1],eax        # 0x40e639
  40e638:	sbb    al,0x53
  40e63a:	jns    0x40e6af
  40e63c:	je     0x40e6a3
  40e63e:	ins    DWORD PTR es:[rdi],dx
  40e63f:	cs push rdi
  40e641:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40e648:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40e64a:	jb     0x40e6b9
  40e64c:	jae    0x40e67c
  40e64e:	push   rax
  40e64f:	(bad)  
  40e650:	fs imul ebp,DWORD PTR fs:[rsi+0x67],0x5
  40e659:	add    al,0x5f
  40e65b:	(bad)  
  40e65c:	ins    BYTE PTR es:[rdi],dx
  40e65d:	ins    BYTE PTR es:[rdi],dx
  40e65e:	add    al,0x5f
  40e660:	je     0x40e6d1
  40e662:	jo     0x40e669
  40e664:	pop    rdi
  40e665:	ins    BYTE PTR es:[rdi],dx
  40e666:	gs data16 je 0x40e670
  40e66a:	pop    rdi
  40e66b:	jb     0x40e6d6
  40e66d:	addr32 push 0x625f0774
  40e673:	outs   dx,DWORD PTR ds:[rsi]
  40e674:	je     0x40e6ea
  40e676:	outs   dx,DWORD PTR ds:[rsi]
  40e677:	ins    DWORD PTR es:[rdi],dx
  40e678:	add    BYTE PTR [rax],al
  40e67a:	add    BYTE PTR [rax],al
  40e67c:	add    BYTE PTR [rcx],al
  40e67e:	or     BYTE PTR [rax],cl
  40e680:	or     BYTE PTR [rax],cl
  40e682:	add    al,BYTE PTR [rax]
  40e684:	add    BYTE PTR [rax],al
  40e686:	add    BYTE PTR [rdx],al
  40e688:	add    BYTE PTR [rax],al
  40e68a:	add    BYTE PTR [rsi],cl
  40e68c:	add    BYTE PTR [rax],al
  40e68e:	add    BYTE PTR [rax],al
  40e690:	add    BYTE PTR [rax],al
  40e692:	add    BYTE PTR [rdx],al
  40e694:	add    BYTE PTR [rax],al
  40e696:	add    BYTE PTR [rbx],cl
  40e698:	add    BYTE PTR [r9],al
  40e69b:	add    BYTE PTR [rax],al
  40e69d:	add    bh,bh
  40e69f:	(bad)  
  40e6a0:	(bad)  
  40e6a1:	inc    DWORD PTR [rcx]
  40e6a3:	add    BYTE PTR [rax],al
  40e6a5:	add    BYTE PTR [rax],al
  40e6a7:	add    BYTE PTR [rax],al
  40e6a9:	add    BYTE PTR [rdx+rax*1],cl
  40e6ac:	add    BYTE PTR [rax],al
  40e6ae:	add    BYTE PTR [rcx+0x53],dl
  40e6b1:	jns    0x40e726
  40e6b3:	je     0x40e71a
  40e6b5:	ins    DWORD PTR es:[rdi],dx
  40e6b6:	cs rex.R jb 0x40e71b
  40e6ba:	ja     0x40e725
  40e6bc:	outs   dx,BYTE PTR ds:[rsi]
  40e6bd:	addr32 sub al,0x20
  40e6c0:	push   rsi
  40e6c1:	gs jb  0x40e737
  40e6c4:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40e6cb:	xor    BYTE PTR cs:[rsi],ch
  40e6ce:	xor    BYTE PTR [rax+riz*1],ch
  40e6d1:	rex.XB jne 0x40e740
  40e6d4:	je     0x40e74b
  40e6d6:	jb     0x40e73d
  40e6d8:	cmp    eax,0x7475656e
  40e6dd:	jb     0x40e740
  40e6df:	ins    BYTE PTR es:[rdi],dx
  40e6e0:	sub    al,0x20
  40e6e2:	push   rax
  40e6e3:	jne    0x40e747
  40e6e5:	ins    BYTE PTR es:[rdi],dx
  40e6e6:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40e6ed:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40e6f1:	(bad)  
  40e6f2:	xor    BYTE PTR [rbx],dh
  40e6f4:	xor    ax,0x3766
  40e6f8:	xor    WORD PTR [rcx],si
  40e6fb:	fs xor eax,0x61336130
  40e701:	add    eax,0x1
  40e706:	adc    edx,DWORD PTR [rbx+0x79]
  40e709:	jae    0x40e77f
  40e70b:	gs ins DWORD PTR es:[rdi],dx
  40e70d:	cs rex.R jb 0x40e772
  40e711:	ja     0x40e77c
  40e713:	outs   dx,BYTE PTR ds:[rsi]
  40e714:	addr32 cs push rbx
  40e717:	imul   edi,DWORD PTR [rdx+0x65],0x2
  40e71e:	add    eax,0x74646977
  40e723:	push   0x69656806
  40e728:	addr32 push 0x8000074
  40e72e:	or     BYTE PTR [rdx],al
  40e730:	add    BYTE PTR [rax],al
  40e732:	add    BYTE PTR [rip+0x11000000],ch        # 0x1140e738
  40e738:	add    BYTE PTR [rax],al
  40e73a:	add    BYTE PTR [rbx],cl
  40e73c:	or     BYTE PTR [rip+0x1000000],al        # 0x140e742
  40e742:	add    eax,0x36612669
  40e747:	xor    al,0x46
  40e749:	add    BYTE PTR [rcx],al
  40e74b:	add    BYTE PTR [rax],al
  40e74d:	add    bh,bh
  40e74f:	(bad)  
  40e750:	(bad)  
  40e751:	inc    DWORD PTR [rcx]
  40e753:	add    BYTE PTR [rax],al
  40e755:	add    BYTE PTR [rax],al
  40e757:	add    BYTE PTR [rax],al
  40e759:	add    BYTE PTR [rdx+rax*1],cl
  40e75c:	add    BYTE PTR [rax],al
  40e75e:	add    BYTE PTR [rdi+0x53],dl
  40e761:	jns    0x40e7d6
  40e763:	je     0x40e7ca
  40e765:	ins    DWORD PTR es:[rdi],dx
  40e766:	cs push rdi
  40e768:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40e76f:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40e771:	jb     0x40e7e0
  40e773:	jae    0x40e7a1
  40e775:	and    BYTE PTR [rsi+0x65],dl
  40e778:	jb     0x40e7ed
  40e77a:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40e781:	xor    BYTE PTR cs:[rsi],ch
  40e784:	xor    BYTE PTR [rax+riz*1],ch
  40e787:	rex.XB jne 0x40e7f6
  40e78a:	je     0x40e801
  40e78c:	jb     0x40e7f3
  40e78e:	cmp    eax,0x7475656e
  40e793:	jb     0x40e7f6
  40e795:	ins    BYTE PTR es:[rdi],dx
  40e796:	sub    al,0x20
  40e798:	push   rax
  40e799:	jne    0x40e7fd
  40e79b:	ins    BYTE PTR es:[rdi],dx
  40e79c:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40e7a3:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40e7a7:	(bad)  
  40e7a8:	(bad)  
  40e7a9:	(bad)  
  40e7aa:	(bad)  
  40e7ab:	xor    eax,0x31363563
  40e7b0:	cmp    DWORD PTR [rbx],esi
  40e7b2:	xor    al,0x65
  40e7b4:	xor    BYTE PTR [rax],bh
  40e7b6:	cmp    DWORD PTR [rip+0x1],eax        # 0x40e7bd
  40e7bc:	(bad)  
  40e7bd:	push   rbx
  40e7be:	jns    0x40e833
  40e7c0:	je     0x40e827
  40e7c2:	ins    DWORD PTR es:[rdi],dx
  40e7c3:	cs push rdi
  40e7c5:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40e7cc:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40e7ce:	jb     0x40e83d
  40e7d0:	jae    0x40e800
  40e7d2:	rex.R outs dx,DWORD PTR ds:[rsi]
  40e7d4:	movsxd ebp,DWORD PTR [rbx+0x53]
  40e7d7:	je     0x40e852
  40e7d9:	ins    BYTE PTR es:[rdi],dx
  40e7da:	add    DWORD PTR gs:[rax],eax
  40e7dd:	add    BYTE PTR [rax],al
  40e7df:	(bad)  
  40e7e0:	jbe    0x40e843
  40e7e2:	ins    BYTE PTR es:[rdi],dx
  40e7e3:	jne    0x40e84a
  40e7e5:	pop    rdi
  40e7e6:	pop    rdi
  40e7e7:	add    BYTE PTR [rax],cl
  40e7e9:	add    al,BYTE PTR [rax]
  40e7eb:	add    BYTE PTR [rax],al
  40e7ed:	add    eax,0xb000000
  40e7f2:	rex.XB add BYTE PTR [r9],al
  40e7f5:	add    BYTE PTR [rax],al
  40e7f7:	add    bh,bh
  40e7f9:	(bad)  
  40e7fa:	(bad)  
  40e7fb:	inc    DWORD PTR [rcx]
  40e7fd:	add    BYTE PTR [rax],al
  40e7ff:	add    BYTE PTR [rax],al
  40e801:	add    BYTE PTR [rax],al
  40e803:	add    BYTE PTR [rdx+rax*1],cl
  40e806:	add    BYTE PTR [rax],al
  40e808:	add    BYTE PTR [rcx+0x53],dl
  40e80b:	jns    0x40e880
  40e80d:	je     0x40e874
  40e80f:	ins    DWORD PTR es:[rdi],dx
  40e810:	cs rex.R jb 0x40e875
  40e814:	ja     0x40e87f
  40e816:	outs   dx,BYTE PTR ds:[rsi]
  40e817:	addr32 sub al,0x20
  40e81a:	push   rsi
  40e81b:	gs jb  0x40e891
  40e81e:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40e825:	xor    BYTE PTR cs:[rsi],ch
  40e828:	xor    BYTE PTR [rax+riz*1],ch
  40e82b:	rex.XB jne 0x40e89a
  40e82e:	je     0x40e8a5
  40e830:	jb     0x40e897
  40e832:	cmp    eax,0x7475656e
  40e837:	jb     0x40e89a
  40e839:	ins    BYTE PTR es:[rdi],dx
  40e83a:	sub    al,0x20
  40e83c:	push   rax
  40e83d:	jne    0x40e8a1
  40e83f:	ins    BYTE PTR es:[rdi],dx
  40e840:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40e847:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40e84b:	(bad)  
  40e84c:	xor    BYTE PTR [rbx],dh
  40e84e:	xor    ax,0x3766
  40e852:	xor    WORD PTR [rcx],si
  40e855:	fs xor eax,0x61336130
  40e85b:	add    eax,0x1
  40e860:	adc    al,0x53
  40e862:	jns    0x40e8d7
  40e864:	je     0x40e8cb
  40e866:	ins    DWORD PTR es:[rdi],dx
  40e867:	cs rex.R jb 0x40e8cc
  40e86b:	ja     0x40e8d6
  40e86d:	outs   dx,BYTE PTR ds:[rsi]
  40e86e:	addr32 cs push rax
  40e871:	outs   dx,DWORD PTR ds:[rsi]
  40e872:	imul   ebp,DWORD PTR [rsi+0x74],0x2
  40e879:	add    DWORD PTR [rax+0x1],edi
  40e87c:	jns    0x40e87e
  40e87e:	add    BYTE PTR [rax],cl
  40e880:	or     BYTE PTR [rdx],al
	...
  40e88a:	add    BYTE PTR [rax],al
  40e88c:	add    BYTE PTR [rbx],cl
  40e88e:	add    BYTE PTR [rcx],r8b
  40e891:	add    BYTE PTR [rax],al
  40e893:	add    bh,bh
  40e895:	(bad)  
  40e896:	(bad)  
  40e897:	inc    DWORD PTR [rcx]
  40e899:	add    BYTE PTR [rax],al
  40e89b:	add    BYTE PTR [rax],al
  40e89d:	add    BYTE PTR [rax],al
  40e89f:	add    BYTE PTR [rdx+rax*1],cl
  40e8a2:	add    BYTE PTR [rax],al
  40e8a4:	add    BYTE PTR [rdi+0x53],dl
  40e8a7:	jns    0x40e91c
  40e8a9:	je     0x40e910
  40e8ab:	ins    DWORD PTR es:[rdi],dx
  40e8ac:	cs push rdi
  40e8ae:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40e8b5:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40e8b7:	jb     0x40e926
  40e8b9:	jae    0x40e8e7
  40e8bb:	and    BYTE PTR [rsi+0x65],dl
  40e8be:	jb     0x40e933
  40e8c0:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40e8c7:	xor    BYTE PTR cs:[rsi],ch
  40e8ca:	xor    BYTE PTR [rax+riz*1],ch
  40e8cd:	rex.XB jne 0x40e93c
  40e8d0:	je     0x40e947
  40e8d2:	jb     0x40e939
  40e8d4:	cmp    eax,0x7475656e
  40e8d9:	jb     0x40e93c
  40e8db:	ins    BYTE PTR es:[rdi],dx
  40e8dc:	sub    al,0x20
  40e8de:	push   rax
  40e8df:	jne    0x40e943
  40e8e1:	ins    BYTE PTR es:[rdi],dx
  40e8e2:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40e8e9:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40e8ed:	(bad)  
  40e8ee:	(bad)  
  40e8ef:	(bad)  
  40e8f0:	(bad)  
  40e8f1:	xor    eax,0x31363563
  40e8f6:	cmp    DWORD PTR [rbx],esi
  40e8f8:	xor    al,0x65
  40e8fa:	xor    BYTE PTR [rax],bh
  40e8fc:	cmp    DWORD PTR [rip+0x1],eax        # 0x40e903
  40e902:	sbb    al,0x53
  40e904:	jns    0x40e979
  40e906:	je     0x40e96d
  40e908:	ins    DWORD PTR es:[rdi],dx
  40e909:	cs push rdi
  40e90b:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40e912:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40e914:	jb     0x40e983
  40e916:	jae    0x40e946
  40e918:	push   rax
  40e919:	(bad)  
  40e91a:	fs imul ebp,DWORD PTR fs:[rsi+0x67],0x5
  40e923:	add    al,0x5f
  40e925:	(bad)  
  40e926:	ins    BYTE PTR es:[rdi],dx
  40e927:	ins    BYTE PTR es:[rdi],dx
  40e928:	add    al,0x5f
  40e92a:	je     0x40e99b
  40e92c:	jo     0x40e933
  40e92e:	pop    rdi
  40e92f:	ins    BYTE PTR es:[rdi],dx
  40e930:	gs data16 je 0x40e93a
  40e934:	pop    rdi
  40e935:	jb     0x40e9a0
  40e937:	addr32 push 0x625f0774
  40e93d:	outs   dx,DWORD PTR ds:[rsi]
  40e93e:	je     0x40e9b4
  40e940:	outs   dx,DWORD PTR ds:[rsi]
  40e941:	ins    DWORD PTR es:[rdi],dx
  40e942:	add    BYTE PTR [rax],al
  40e944:	add    BYTE PTR [rax],al
  40e946:	add    BYTE PTR [rcx],al
  40e948:	or     BYTE PTR [rax],cl
  40e94a:	or     BYTE PTR [rax],cl
  40e94c:	add    al,BYTE PTR [rax]
	...
  40e95a:	add    BYTE PTR [rax],al
  40e95c:	add    BYTE PTR [rdx],al
  40e95e:	add    BYTE PTR [rax],al
  40e960:	add    BYTE PTR [rbx],cl
  40e962:	add    al,BYTE PTR [rcx]
  40e964:	add    BYTE PTR [r9],al
  40e967:	add    BYTE PTR [rax],al
  40e969:	add    bh,bh
  40e96b:	(bad)  
  40e96c:	(bad)  
  40e96d:	inc    DWORD PTR [rcx]
  40e96f:	add    BYTE PTR [rax],al
  40e971:	add    BYTE PTR [rax],al
  40e973:	add    BYTE PTR [rax],al
  40e975:	add    BYTE PTR [rdx+rax*1],cl
  40e978:	add    BYTE PTR [rax],al
  40e97a:	add    BYTE PTR [rcx+0x53],dl
  40e97d:	jns    0x40e9f2
  40e97f:	je     0x40e9e6
  40e981:	ins    DWORD PTR es:[rdi],dx
  40e982:	cs rex.R jb 0x40e9e7
  40e986:	ja     0x40e9f1
  40e988:	outs   dx,BYTE PTR ds:[rsi]
  40e989:	addr32 sub al,0x20
  40e98c:	push   rsi
  40e98d:	gs jb  0x40ea03
  40e990:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40e997:	xor    BYTE PTR cs:[rsi],ch
  40e99a:	xor    BYTE PTR [rax+riz*1],ch
  40e99d:	rex.XB jne 0x40ea0c
  40e9a0:	je     0x40ea17
  40e9a2:	jb     0x40ea09
  40e9a4:	cmp    eax,0x7475656e
  40e9a9:	jb     0x40ea0c
  40e9ab:	ins    BYTE PTR es:[rdi],dx
  40e9ac:	sub    al,0x20
  40e9ae:	push   rax
  40e9af:	jne    0x40ea13
  40e9b1:	ins    BYTE PTR es:[rdi],dx
  40e9b2:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40e9b9:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40e9bd:	(bad)  
  40e9be:	xor    BYTE PTR [rbx],dh
  40e9c0:	xor    ax,0x3766
  40e9c4:	xor    WORD PTR [rcx],si
  40e9c7:	fs xor eax,0x61336130
  40e9cd:	add    eax,0x1
  40e9d2:	adc    edx,DWORD PTR [rbx+0x79]
  40e9d5:	jae    0x40ea4b
  40e9d7:	gs ins DWORD PTR es:[rdi],dx
  40e9d9:	cs rex.R jb 0x40ea3e
  40e9dd:	ja     0x40ea48
  40e9df:	outs   dx,BYTE PTR ds:[rsi]
  40e9e0:	addr32 cs push rbx
  40e9e3:	imul   edi,DWORD PTR [rdx+0x65],0x2
  40e9ea:	add    eax,0x74646977
  40e9ef:	push   0x69656806
  40e9f4:	addr32 push 0x8000074
  40e9fa:	or     BYTE PTR [rdx],al
  40e9fc:	add    BYTE PTR [rax],al
  40e9fe:	add    BYTE PTR [rbx+0x1],dh
  40ea01:	add    BYTE PTR [rax],al
  40ea03:	adc    al,BYTE PTR [rax]
  40ea05:	add    BYTE PTR [rax],al
  40ea07:	or     ecx,DWORD PTR [rax]
  40ea09:	add    DWORD PTR [rax],eax
  40ea0b:	add    BYTE PTR [rax],al
  40ea0d:	or     BYTE PTR [rbx],al
  40ea0f:	add    BYTE PTR [rax],al
  40ea11:	add    BYTE PTR [rsi+0x0],al
  40ea14:	add    DWORD PTR [rax],eax
  40ea16:	add    BYTE PTR [rax],al
  40ea18:	(bad)  
  40ea19:	(bad)  
  40ea1a:	(bad)  
  40ea1b:	inc    DWORD PTR [rcx]
  40ea1d:	add    BYTE PTR [rax],al
  40ea1f:	add    BYTE PTR [rax],al
  40ea21:	add    BYTE PTR [rax],al
  40ea23:	add    BYTE PTR [rdx+rax*1],cl
  40ea26:	add    BYTE PTR [rax],al
  40ea28:	add    BYTE PTR [rdi+0x53],dl
  40ea2b:	jns    0x40eaa0
  40ea2d:	je     0x40ea94
  40ea2f:	ins    DWORD PTR es:[rdi],dx
  40ea30:	cs push rdi
  40ea32:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40ea39:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40ea3b:	jb     0x40eaaa
  40ea3d:	jae    0x40ea6b
  40ea3f:	and    BYTE PTR [rsi+0x65],dl
  40ea42:	jb     0x40eab7
  40ea44:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40ea4b:	xor    BYTE PTR cs:[rsi],ch
  40ea4e:	xor    BYTE PTR [rax+riz*1],ch
  40ea51:	rex.XB jne 0x40eac0
  40ea54:	je     0x40eacb
  40ea56:	jb     0x40eabd
  40ea58:	cmp    eax,0x7475656e
  40ea5d:	jb     0x40eac0
  40ea5f:	ins    BYTE PTR es:[rdi],dx
  40ea60:	sub    al,0x20
  40ea62:	push   rax
  40ea63:	jne    0x40eac7
  40ea65:	ins    BYTE PTR es:[rdi],dx
  40ea66:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40ea6d:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40ea71:	(bad)  
  40ea72:	(bad)  
  40ea73:	(bad)  
  40ea74:	(bad)  
  40ea75:	xor    eax,0x31363563
  40ea7a:	cmp    DWORD PTR [rbx],esi
  40ea7c:	xor    al,0x65
  40ea7e:	xor    BYTE PTR [rax],bh
  40ea80:	cmp    DWORD PTR [rip+0x1],eax        # 0x40ea87
  40ea86:	(bad)  
  40ea87:	push   rbx
  40ea88:	jns    0x40eafd
  40ea8a:	je     0x40eaf1
  40ea8c:	ins    DWORD PTR es:[rdi],dx
  40ea8d:	cs push rdi
  40ea8f:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40ea96:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40ea98:	jb     0x40eb07
  40ea9a:	jae    0x40eaca
  40ea9c:	rex.R outs dx,DWORD PTR ds:[rsi]
  40ea9e:	movsxd ebp,DWORD PTR [rbx+0x53]
  40eaa1:	je     0x40eb1c
  40eaa3:	ins    BYTE PTR es:[rdi],dx
  40eaa4:	add    DWORD PTR gs:[rax],eax
  40eaa7:	add    BYTE PTR [rax],al
  40eaa9:	(bad)  
  40eaaa:	jbe    0x40eb0d
  40eaac:	ins    BYTE PTR es:[rdi],dx
  40eaad:	jne    0x40eb14
  40eaaf:	pop    rdi
  40eab0:	pop    rdi
  40eab1:	add    BYTE PTR [rax],cl
  40eab3:	add    al,BYTE PTR [rax]
  40eab5:	add    BYTE PTR [rax],al
  40eab7:	add    eax,0xb000000
  40eabc:	rex.RXB add BYTE PTR [r9],r8b
  40eabf:	add    BYTE PTR [rax],al
  40eac1:	add    bh,bh
  40eac3:	(bad)  
  40eac4:	(bad)  
  40eac5:	inc    DWORD PTR [rcx]
  40eac7:	add    BYTE PTR [rax],al
  40eac9:	add    BYTE PTR [rax],al
  40eacb:	add    BYTE PTR [rax],al
  40eacd:	add    BYTE PTR [rdx+rax*1],cl
  40ead0:	add    BYTE PTR [rax],al
  40ead2:	add    BYTE PTR [rdi+0x53],dl
  40ead5:	jns    0x40eb4a
  40ead7:	je     0x40eb3e
  40ead9:	ins    DWORD PTR es:[rdi],dx
  40eada:	cs push rdi
  40eadc:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40eae3:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40eae5:	jb     0x40eb54
  40eae7:	jae    0x40eb15
  40eae9:	and    BYTE PTR [rsi+0x65],dl
  40eaec:	jb     0x40eb61
  40eaee:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40eaf5:	xor    BYTE PTR cs:[rsi],ch
  40eaf8:	xor    BYTE PTR [rax+riz*1],ch
  40eafb:	rex.XB jne 0x40eb6a
  40eafe:	je     0x40eb75
  40eb00:	jb     0x40eb67
  40eb02:	cmp    eax,0x7475656e
  40eb07:	jb     0x40eb6a
  40eb09:	ins    BYTE PTR es:[rdi],dx
  40eb0a:	sub    al,0x20
  40eb0c:	push   rax
  40eb0d:	jne    0x40eb71
  40eb0f:	ins    BYTE PTR es:[rdi],dx
  40eb10:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40eb17:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40eb1b:	(bad)  
  40eb1c:	(bad)  
  40eb1d:	(bad)  
  40eb1e:	(bad)  
  40eb1f:	xor    eax,0x31363563
  40eb24:	cmp    DWORD PTR [rbx],esi
  40eb26:	xor    al,0x65
  40eb28:	xor    BYTE PTR [rax],bh
  40eb2a:	cmp    DWORD PTR [rip+0x1],eax        # 0x40eb31
  40eb30:	sub    BYTE PTR [rbx+0x79],dl
  40eb33:	jae    0x40eba9
  40eb35:	gs ins DWORD PTR es:[rdi],dx
  40eb37:	cs push rdi
  40eb39:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40eb40:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40eb42:	jb     0x40ebb1
  40eb44:	jae    0x40eb74
  40eb46:	push   rsp
  40eb47:	(bad)  
  40eb48:	(bad)  
  40eb49:	ins    BYTE PTR es:[rdi],dx
  40eb4a:	gs rex.WR (bad) 
  40eb4d:	jns    0x40ebbe
  40eb4f:	jne    0x40ebc5
  40eb51:	push   rbx
  40eb52:	gs je  0x40ebc9
  40eb55:	imul   ebp,DWORD PTR [rsi+0x67],0x173
  40eb5c:	add    BYTE PTR [rax],dl
  40eb5e:	push   rbx
  40eb5f:	gs jb  0x40ebcb
  40eb62:	(bad)  
  40eb63:	ins    BYTE PTR es:[rdi],dx
  40eb64:	imul   edi,DWORD PTR [rdx+0x65],0x72745364
  40eb6b:	imul   ebp,DWORD PTR [rsi+0x67],0x201
  40eb72:	add    BYTE PTR [rsi],al
  40eb74:	add    eax,DWORD PTR [rax]
  40eb76:	add    BYTE PTR [rax],al
  40eb78:	(bad)  
  40eb79:	(bad)  
  40eb7a:	cmp    al,0x3f
  40eb7c:	js     0x40ebeb
  40eb7e:	ins    BYTE PTR es:[rdi],dx
  40eb7f:	and    BYTE PTR [rsi+0x65],dh
  40eb82:	jb     0x40ebf7
  40eb84:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
  40eb8b:	xor    BYTE PTR [rdx],ah
  40eb8d:	and    BYTE PTR [rbp+0x6e],ah
  40eb90:	movsxd ebp,DWORD PTR [rdi+0x64]
  40eb93:	imul   ebp,DWORD PTR [rsi+0x67],0x7475223d
  40eb9a:	sub    ax,0x3631
  40eb9e:	and    bh,BYTE PTR [rdi]
  40eba0:	ds cmp al,0x54
  40eba3:	(bad)  
  40eba4:	(bad)  
  40eba5:	ins    BYTE PTR es:[rdi],dx
  40eba6:	gs rex.WR (bad) 
  40eba9:	jns    0x40ec1a
  40ebab:	jne    0x40ec21
  40ebad:	push   rbx
  40ebae:	gs je  0x40ec25
  40ebb1:	imul   ebp,DWORD PTR [rsi+0x67],0x433c3e73
  40ebb8:	outs   dx,DWORD PTR ds:[rsi]
  40ebb9:	outs   dx,BYTE PTR ds:[rsi]
  40ebba:	je     0x40ec2e
  40ebbc:	outs   dx,DWORD PTR ds:[rsi]
  40ebbd:	ins    BYTE PTR es:[rdi],dx
  40ebbe:	jae    0x40ebfe
  40ebc0:	cmp    al,0x43
  40ebc2:	outs   dx,DWORD PTR ds:[rsi]
  40ebc3:	outs   dx,BYTE PTR ds:[rsi]
  40ebc4:	je     0x40ec38
  40ebc6:	outs   dx,DWORD PTR ds:[rsi]
  40ebc7:	ins    BYTE PTR es:[rdi],dx
  40ebc8:	and    BYTE PTR [rsi+0x61],cl
  40ebcb:	ins    DWORD PTR es:[rdi],dx
  40ebcc:	gs cmp eax,0x6f727022
  40ebd2:	movsxd esp,DWORD PTR [rbp+0x73]
  40ebd5:	jae    0x40ec46
  40ebd7:	jb     0x40ec25
  40ebd9:	(bad)  
  40ebda:	(bad)  
  40ebdb:	gs ins BYTE PTR es:[rdi],dx
  40ebdd:	and    ah,BYTE PTR [rax]
  40ebdf:	push   rdx
  40ebe0:	outs   dx,DWORD PTR ds:[rsi]
  40ebe1:	ja     0x40ec20
  40ebe3:	and    dh,BYTE PTR [rcx]
  40ebe5:	and    ah,BYTE PTR [rax]
  40ebe7:	push   rdx
  40ebe8:	outs   dx,DWORD PTR ds:[rsi]
  40ebe9:	ja     0x40ec3e
  40ebeb:	jo     0x40ec4e
  40ebed:	outs   dx,BYTE PTR ds:[rsi]
  40ebee:	cmp    eax,0x20223122
  40ebf3:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40ebf5:	ins    BYTE PTR es:[rdi],dx
  40ebf6:	jne    0x40ec65
  40ebf8:	outs   dx,BYTE PTR ds:[rsi]
  40ebf9:	cmp    eax,0x20223022
  40ebfe:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40ec00:	ins    BYTE PTR es:[rdi],dx
  40ec01:	jne    0x40ec70
  40ec03:	outs   dx,BYTE PTR ds:[rsi]
  40ec04:	push   rbx
  40ec05:	jo     0x40ec68
  40ec07:	outs   dx,BYTE PTR ds:[rsi]
  40ec08:	cmp    eax,0x20223322
  40ec0d:	(bad)  
  40ec0e:	ds cmp al,0x43
  40ec11:	outs   dx,DWORD PTR ds:[rsi]
  40ec12:	outs   dx,BYTE PTR ds:[rsi]
  40ec13:	je     0x40ec87
  40ec15:	outs   dx,DWORD PTR ds:[rsi]
  40ec16:	ins    BYTE PTR es:[rdi],dx
  40ec17:	and    BYTE PTR [rsi+0x61],cl
  40ec1a:	ins    DWORD PTR es:[rdi],dx
  40ec1b:	gs cmp eax,0x36387822
  40ec21:	push   rax
  40ec22:	jb     0x40ec93
  40ec24:	movsxd esp,DWORD PTR [rbp+0x73]
  40ec27:	jae    0x40ec98
  40ec29:	jb     0x40ec4d
  40ec2b:	and    BYTE PTR [rdx+0x6f],dl
  40ec2e:	ja     0x40ec6d
  40ec30:	and    dh,BYTE PTR [rdx]
  40ec32:	and    ah,BYTE PTR [rax]
  40ec34:	push   rdx
  40ec35:	outs   dx,DWORD PTR ds:[rsi]
  40ec36:	ja     0x40ec8b
  40ec38:	jo     0x40ec9b
  40ec3a:	outs   dx,BYTE PTR ds:[rsi]
  40ec3b:	cmp    eax,0x20223122
  40ec40:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40ec42:	ins    BYTE PTR es:[rdi],dx
  40ec43:	jne    0x40ecb2
  40ec45:	outs   dx,BYTE PTR ds:[rsi]
  40ec46:	cmp    eax,0x20223022
  40ec4b:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40ec4d:	ins    BYTE PTR es:[rdi],dx
  40ec4e:	jne    0x40ecbd
  40ec50:	outs   dx,BYTE PTR ds:[rsi]
  40ec51:	push   rbx
  40ec52:	jo     0x40ecb5
  40ec54:	outs   dx,BYTE PTR ds:[rsi]
  40ec55:	cmp    eax,0x20223322
  40ec5a:	(bad)  
  40ec5b:	ds cmp al,0x43
  40ec5e:	outs   dx,DWORD PTR ds:[rsi]
  40ec5f:	outs   dx,BYTE PTR ds:[rsi]
  40ec60:	je     0x40ecd4
  40ec62:	outs   dx,DWORD PTR ds:[rsi]
  40ec63:	ins    BYTE PTR es:[rdi],dx
  40ec64:	and    BYTE PTR [rsi+0x61],cl
  40ec67:	ins    DWORD PTR es:[rdi],dx
  40ec68:	gs cmp eax,0x646d6122
  40ec6e:	ss xor al,0x50
  40ec71:	jb     0x40ece2
  40ec73:	movsxd esp,DWORD PTR [rbp+0x73]
  40ec76:	jae    0x40ece7
  40ec78:	jb     0x40ec9c
  40ec7a:	and    BYTE PTR [rdx+0x6f],dl
  40ec7d:	ja     0x40ecbc
  40ec7f:	and    dh,BYTE PTR [rbx]
  40ec81:	and    ah,BYTE PTR [rax]
  40ec83:	push   rdx
  40ec84:	outs   dx,DWORD PTR ds:[rsi]
  40ec85:	ja     0x40ecda
  40ec87:	jo     0x40ecea
  40ec89:	outs   dx,BYTE PTR ds:[rsi]
  40ec8a:	cmp    eax,0x20223122
  40ec8f:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40ec91:	ins    BYTE PTR es:[rdi],dx
  40ec92:	jne    0x40ed01
  40ec94:	outs   dx,BYTE PTR ds:[rsi]
  40ec95:	cmp    eax,0x20223022
  40ec9a:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40ec9c:	ins    BYTE PTR es:[rdi],dx
  40ec9d:	jne    0x40ed0c
  40ec9f:	outs   dx,BYTE PTR ds:[rsi]
  40eca0:	push   rbx
  40eca1:	jo     0x40ed04
  40eca3:	outs   dx,BYTE PTR ds:[rsi]
  40eca4:	cmp    eax,0x20223322
  40eca9:	(bad)  
  40ecaa:	ds cmp al,0x43
  40ecad:	outs   dx,DWORD PTR ds:[rsi]
  40ecae:	outs   dx,BYTE PTR ds:[rsi]
  40ecaf:	je     0x40ed23
  40ecb1:	outs   dx,DWORD PTR ds:[rsi]
  40ecb2:	ins    BYTE PTR es:[rdi],dx
  40ecb3:	and    BYTE PTR [rsi+0x61],cl
  40ecb6:	ins    DWORD PTR es:[rdi],dx
  40ecb7:	gs cmp eax,0x36616922
  40ecbd:	xor    al,0x50
  40ecbf:	jb     0x40ed30
  40ecc1:	movsxd esp,DWORD PTR [rbp+0x73]
  40ecc4:	jae    0x40ed35
  40ecc6:	jb     0x40ecea
  40ecc8:	and    BYTE PTR [rdx+0x6f],dl
  40eccb:	ja     0x40ed0a
  40eccd:	and    dh,BYTE PTR [rdx+riz*1]
  40ecd0:	and    BYTE PTR [rdx+0x6f],dl
  40ecd3:	ja     0x40ed28
  40ecd5:	jo     0x40ed38
  40ecd7:	outs   dx,BYTE PTR ds:[rsi]
  40ecd8:	cmp    eax,0x20223122
  40ecdd:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40ecdf:	ins    BYTE PTR es:[rdi],dx
  40ece0:	jne    0x40ed4f
  40ece2:	outs   dx,BYTE PTR ds:[rsi]
  40ece3:	cmp    eax,0x20223022
  40ece8:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40ecea:	ins    BYTE PTR es:[rdi],dx
  40eceb:	jne    0x40ed5a
  40eced:	outs   dx,BYTE PTR ds:[rsi]
  40ecee:	push   rbx
  40ecef:	jo     0x40ed52
  40ecf1:	outs   dx,BYTE PTR ds:[rsi]
  40ecf2:	cmp    eax,0x20223322
  40ecf7:	(bad)  
  40ecf8:	ds cmp al,0x43
  40ecfb:	outs   dx,DWORD PTR ds:[rsi]
  40ecfc:	outs   dx,BYTE PTR ds:[rsi]
  40ecfd:	je     0x40ed71
  40ecff:	outs   dx,DWORD PTR ds:[rsi]
  40ed00:	ins    BYTE PTR es:[rdi],dx
  40ed01:	and    BYTE PTR [rsi+0x61],cl
  40ed04:	ins    DWORD PTR es:[rdi],dx
  40ed05:	gs cmp eax,0x74617022
  40ed0b:	push   0x6562614c
  40ed10:	ins    BYTE PTR es:[rdi],dx
  40ed11:	and    ah,BYTE PTR [rax]
  40ed13:	push   rdx
  40ed14:	outs   dx,DWORD PTR ds:[rsi]
  40ed15:	ja     0x40ed54
  40ed17:	and    dh,BYTE PTR [rip+0x6f522022]        # 0x6f930d3f
  40ed1d:	ja     0x40ed72
  40ed1f:	jo     0x40ed82
  40ed21:	outs   dx,BYTE PTR ds:[rsi]
  40ed22:	cmp    eax,0x20223122
  40ed27:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40ed29:	ins    BYTE PTR es:[rdi],dx
  40ed2a:	jne    0x40ed99
  40ed2c:	outs   dx,BYTE PTR ds:[rsi]
  40ed2d:	cmp    eax,0x20223022
  40ed32:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40ed34:	ins    BYTE PTR es:[rdi],dx
  40ed35:	jne    0x40eda4
  40ed37:	outs   dx,BYTE PTR ds:[rsi]
  40ed38:	push   rbx
  40ed39:	jo     0x40ed9c
  40ed3b:	outs   dx,BYTE PTR ds:[rsi]
  40ed3c:	cmp    eax,0x20223122
  40ed41:	(bad)  
  40ed42:	ds cmp al,0x43
  40ed45:	outs   dx,DWORD PTR ds:[rsi]
  40ed46:	outs   dx,BYTE PTR ds:[rsi]
  40ed47:	je     0x40edbb
  40ed49:	outs   dx,DWORD PTR ds:[rsi]
  40ed4a:	ins    BYTE PTR es:[rdi],dx
  40ed4b:	and    BYTE PTR [rsi+0x61],cl
  40ed4e:	ins    DWORD PTR es:[rdi],dx
  40ed4f:	gs cmp eax,0x756f7322
  40ed55:	jb     0x40edba
  40ed57:	gs push rax
  40ed59:	(bad)  
  40ed5a:	je     0x40edc4
  40ed5c:	and    ah,BYTE PTR [rax]
  40ed5e:	push   rdx
  40ed5f:	outs   dx,DWORD PTR ds:[rsi]
  40ed60:	ja     0x40ed9f
  40ed62:	and    dh,BYTE PTR [rip+0x6f522022]        # 0x6f930d8a
  40ed68:	ja     0x40edbd
  40ed6a:	jo     0x40edcd
  40ed6c:	outs   dx,BYTE PTR ds:[rsi]
  40ed6d:	cmp    eax,0x20223122
  40ed72:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40ed74:	ins    BYTE PTR es:[rdi],dx
  40ed75:	jne    0x40ede4
  40ed77:	outs   dx,BYTE PTR ds:[rsi]
  40ed78:	cmp    eax,0x20223122
  40ed7d:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40ed7f:	ins    BYTE PTR es:[rdi],dx
  40ed80:	jne    0x40edef
  40ed82:	outs   dx,BYTE PTR ds:[rsi]
  40ed83:	push   rbx
  40ed84:	jo     0x40ede7
  40ed86:	outs   dx,BYTE PTR ds:[rsi]
  40ed87:	cmp    eax,0x20223122
  40ed8c:	(bad)  
  40ed8d:	ds cmp al,0x43
  40ed90:	outs   dx,DWORD PTR ds:[rsi]
  40ed91:	outs   dx,BYTE PTR ds:[rsi]
  40ed92:	je     0x40ee06
  40ed94:	outs   dx,DWORD PTR ds:[rsi]
  40ed95:	ins    BYTE PTR es:[rdi],dx
  40ed96:	and    BYTE PTR [rsi+0x61],cl
  40ed99:	ins    DWORD PTR es:[rdi],dx
  40ed9a:	gs cmp eax,0x6f726222
  40eda0:	ja     0x40ee15
  40eda2:	and    ah,BYTE PTR gs:[rax]
  40eda5:	push   rdx
  40eda6:	outs   dx,DWORD PTR ds:[rsi]
  40eda7:	ja     0x40ede6
  40eda9:	and    dh,BYTE PTR [rip+0x6f522022]        # 0x6f930dd1
  40edaf:	ja     0x40ee04
  40edb1:	jo     0x40ee14
  40edb3:	outs   dx,BYTE PTR ds:[rsi]
  40edb4:	cmp    eax,0x20223122
  40edb9:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40edbb:	ins    BYTE PTR es:[rdi],dx
  40edbc:	jne    0x40ee2b
  40edbe:	outs   dx,BYTE PTR ds:[rsi]
  40edbf:	cmp    eax,0x20223222
  40edc4:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40edc6:	ins    BYTE PTR es:[rdi],dx
  40edc7:	jne    0x40ee36
  40edc9:	outs   dx,BYTE PTR ds:[rsi]
  40edca:	push   rbx
  40edcb:	jo     0x40ee2e
  40edcd:	outs   dx,BYTE PTR ds:[rsi]
  40edce:	cmp    eax,0x20223122
  40edd3:	(bad)  
  40edd4:	ds cmp al,0x43
  40edd7:	outs   dx,DWORD PTR ds:[rsi]
  40edd8:	outs   dx,BYTE PTR ds:[rsi]
  40edd9:	je     0x40ee4d
  40eddb:	outs   dx,DWORD PTR ds:[rsi]
  40eddc:	ins    BYTE PTR es:[rdi],dx
  40eddd:	and    BYTE PTR [rsi+0x61],cl
  40ede0:	ins    DWORD PTR es:[rdi],dx
  40ede1:	gs cmp eax,0x736e6922
  40ede7:	je     0x40ee5b
  40ede9:	jne    0x40ee4e
  40edeb:	je     0x40ee56
  40eded:	outs   dx,DWORD PTR ds:[rsi]
  40edee:	outs   dx,BYTE PTR ds:[rsi]
  40edef:	jae    0x40ee33
  40edf1:	outs   dx,DWORD PTR ds:[rsi]
  40edf2:	js     0x40ee16
  40edf4:	and    BYTE PTR [rdx+0x6f],dl
  40edf7:	ja     0x40ee36
  40edf9:	and    dh,BYTE PTR [rax]
  40edfb:	and    ah,BYTE PTR [rax]
  40edfd:	push   rdx
  40edfe:	outs   dx,DWORD PTR ds:[rsi]
  40edff:	ja     0x40ee54
  40ee01:	jo     0x40ee64
  40ee03:	outs   dx,BYTE PTR ds:[rsi]
  40ee04:	cmp    eax,0x20223122
  40ee09:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40ee0b:	ins    BYTE PTR es:[rdi],dx
  40ee0c:	jne    0x40ee7b
  40ee0e:	outs   dx,BYTE PTR ds:[rsi]
  40ee0f:	cmp    eax,0x20223022
  40ee14:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40ee16:	ins    BYTE PTR es:[rdi],dx
  40ee17:	jne    0x40ee86
  40ee19:	outs   dx,BYTE PTR ds:[rsi]
  40ee1a:	push   rbx
  40ee1b:	jo     0x40ee7e
  40ee1d:	outs   dx,BYTE PTR ds:[rsi]
  40ee1e:	cmp    eax,0x20223322
  40ee23:	(bad)  
  40ee24:	ds cmp al,0x2f
  40ee27:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40ee29:	outs   dx,BYTE PTR ds:[rsi]
  40ee2a:	je     0x40ee9e
  40ee2c:	outs   dx,DWORD PTR ds:[rsi]
  40ee2d:	ins    BYTE PTR es:[rdi],dx
  40ee2e:	jae    0x40ee6e
  40ee30:	cmp    al,0x43
  40ee32:	outs   dx,DWORD PTR ds:[rsi]
  40ee33:	ins    BYTE PTR es:[rdi],dx
  40ee34:	jne    0x40eea3
  40ee36:	outs   dx,BYTE PTR ds:[rsi]
  40ee37:	jae    0x40ee59
  40ee39:	push   rbx
  40ee3a:	je     0x40eeb5
  40ee3c:	ins    BYTE PTR es:[rdi],dx
  40ee3d:	gs jae 0x40ee7d
  40ee40:	and    al,BYTE PTR [rcx+0x75]
  40ee43:	je     0x40eeb4
  40ee45:	push   rbx
  40ee46:	imul   edi,DWORD PTR [rdx+0x65],0x502c302c
  40ee4d:	gs jb  0x40eeb3
  40ee50:	outs   dx,BYTE PTR gs:[rsi]
  40ee52:	je     0x40ee80
  40ee54:	xor    DWORD PTR [rax],esi
  40ee56:	xor    BYTE PTR [rcx+rax*2],ch
  40ee59:	jne    0x40eecf
  40ee5b:	outs   dx,DWORD PTR ds:[rsi]
  40ee5c:	push   rbx
  40ee5d:	imul   edi,DWORD PTR [rdx+0x65],0x2022302c
  40ee64:	(bad)  
  40ee65:	ds cmp al,0x52
  40ee68:	outs   dx,DWORD PTR ds:[rsi]
  40ee69:	ja     0x40eede
  40ee6b:	and    BYTE PTR [rbx+0x74],dl
  40ee6e:	jns    0x40eedc
  40ee70:	gs jae 0x40eeb0
  40ee73:	and    al,BYTE PTR [rcx+0x75]
  40ee76:	je     0x40eee7
  40ee78:	push   rbx
  40ee79:	imul   edi,DWORD PTR [rdx+0x65],0x412c302c
  40ee80:	jne    0x40eef6
  40ee82:	outs   dx,DWORD PTR ds:[rsi]
  40ee83:	push   rbx
  40ee84:	imul   edi,DWORD PTR [rdx+0x65],0x412c302c
  40ee8b:	jne    0x40ef01
  40ee8d:	outs   dx,DWORD PTR ds:[rsi]
  40ee8e:	push   rbx
  40ee8f:	imul   edi,DWORD PTR [rdx+0x65],0x412c302c
  40ee96:	jne    0x40ef0c
  40ee98:	outs   dx,DWORD PTR ds:[rsi]
  40ee99:	push   rbx
  40ee9a:	imul   edi,DWORD PTR [rdx+0x65],0x412c302c
  40eea1:	jne    0x40ef17
  40eea3:	outs   dx,DWORD PTR ds:[rsi]
  40eea4:	push   rbx
  40eea5:	imul   edi,DWORD PTR [rdx+0x65],0x412c302c
  40eeac:	jne    0x40ef22
  40eeae:	outs   dx,DWORD PTR ds:[rsi]
  40eeaf:	push   rbx
  40eeb0:	imul   edi,DWORD PTR [rdx+0x65],0x2022302c
  40eeb7:	(bad)  
  40eeb8:	ds cmp al,0x2f
  40eebb:	push   rsp
  40eebc:	(bad)  
  40eebd:	(bad)  
  40eebe:	ins    BYTE PTR es:[rdi],dx
  40eebf:	gs rex.WR (bad) 
  40eec2:	jns    0x40ef33
  40eec4:	jne    0x40ef3a
  40eec6:	push   rbx
  40eec7:	gs je  0x40ef3e
  40eeca:	imul   ebp,DWORD PTR [rsi+0x67],0x430b3e73
  40eed1:	add    BYTE PTR [rcx],al
  40eed3:	add    BYTE PTR [rax],al
  40eed5:	add    bh,bh
  40eed7:	(bad)  
  40eed8:	(bad)  
  40eed9:	inc    DWORD PTR [rcx]
  40eedb:	add    BYTE PTR [rax],al
  40eedd:	add    BYTE PTR [rax],al
  40eedf:	add    BYTE PTR [rax],al
  40eee1:	add    BYTE PTR [rdx+rax*1],cl
  40eee4:	add    BYTE PTR [rax],al
  40eee6:	add    BYTE PTR [rcx+0x53],dl
  40eee9:	jns    0x40ef5e
  40eeeb:	je     0x40ef52
  40eeed:	ins    DWORD PTR es:[rdi],dx
  40eeee:	cs rex.R jb 0x40ef53
  40eef2:	ja     0x40ef5d
  40eef4:	outs   dx,BYTE PTR ds:[rsi]
  40eef5:	addr32 sub al,0x20
  40eef8:	push   rsi
  40eef9:	gs jb  0x40ef6f
  40eefc:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40ef03:	xor    BYTE PTR cs:[rsi],ch
  40ef06:	xor    BYTE PTR [rax+riz*1],ch
  40ef09:	rex.XB jne 0x40ef78
  40ef0c:	je     0x40ef83
  40ef0e:	jb     0x40ef75
  40ef10:	cmp    eax,0x7475656e
  40ef15:	jb     0x40ef78
  40ef17:	ins    BYTE PTR es:[rdi],dx
  40ef18:	sub    al,0x20
  40ef1a:	push   rax
  40ef1b:	jne    0x40ef7f
  40ef1d:	ins    BYTE PTR es:[rdi],dx
  40ef1e:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40ef25:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40ef29:	(bad)  
  40ef2a:	xor    BYTE PTR [rbx],dh
  40ef2c:	xor    ax,0x3766
  40ef30:	xor    WORD PTR [rcx],si
  40ef33:	fs xor eax,0x61336130
  40ef39:	add    eax,0x1
  40ef3e:	adc    al,0x53
  40ef40:	jns    0x40efb5
  40ef42:	je     0x40efa9
  40ef44:	ins    DWORD PTR es:[rdi],dx
  40ef45:	cs rex.R jb 0x40efaa
  40ef49:	ja     0x40efb4
  40ef4b:	outs   dx,BYTE PTR ds:[rsi]
  40ef4c:	addr32 cs push rax
  40ef4f:	outs   dx,DWORD PTR ds:[rsi]
  40ef50:	imul   ebp,DWORD PTR [rsi+0x74],0x2
  40ef57:	add    DWORD PTR [rax+0x1],edi
  40ef5a:	jns    0x40ef5c
  40ef5c:	add    BYTE PTR [rax],cl
  40ef5e:	or     BYTE PTR [rdx],al
	...
  40ef68:	add    BYTE PTR [rax],al
  40ef6a:	add    BYTE PTR [rbx],cl
  40ef6c:	or     BYTE PTR [rsi],al
  40ef6e:	add    BYTE PTR [rax],al
  40ef70:	add    BYTE PTR [rcx+0x0],al
  40ef73:	add    DWORD PTR [rax],eax
  40ef75:	add    BYTE PTR [rax],al
  40ef77:	(bad)  
  40ef78:	(bad)  
  40ef79:	(bad)  
  40ef7a:	inc    DWORD PTR [rcx]
  40ef7c:	add    BYTE PTR [rax],al
  40ef7e:	add    BYTE PTR [rax],al
  40ef80:	add    BYTE PTR [rax],al
  40ef82:	add    BYTE PTR [rdx+rax*1],cl
  40ef85:	add    BYTE PTR [rax],al
  40ef87:	add    BYTE PTR [rcx+0x53],dl
  40ef8a:	jns    0x40efff
  40ef8c:	je     0x40eff3
  40ef8e:	ins    DWORD PTR es:[rdi],dx
  40ef8f:	cs rex.R jb 0x40eff4
  40ef93:	ja     0x40effe
  40ef95:	outs   dx,BYTE PTR ds:[rsi]
  40ef96:	addr32 sub al,0x20
  40ef99:	push   rsi
  40ef9a:	gs jb  0x40f010
  40ef9d:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40efa4:	xor    BYTE PTR cs:[rsi],ch
  40efa7:	xor    BYTE PTR [rax+riz*1],ch
  40efaa:	rex.XB jne 0x40f019
  40efad:	je     0x40f024
  40efaf:	jb     0x40f016
  40efb1:	cmp    eax,0x7475656e
  40efb6:	jb     0x40f019
  40efb8:	ins    BYTE PTR es:[rdi],dx
  40efb9:	sub    al,0x20
  40efbb:	push   rax
  40efbc:	jne    0x40f020
  40efbe:	ins    BYTE PTR es:[rdi],dx
  40efbf:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40efc6:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40efca:	(bad)  
  40efcb:	xor    BYTE PTR [rbx],dh
  40efcd:	xor    ax,0x3766
  40efd1:	xor    WORD PTR [rcx],si
  40efd4:	fs xor eax,0x61336130
  40efda:	add    eax,0x1
  40efdf:	adc    edx,DWORD PTR [rbx+0x79]
  40efe2:	jae    0x40f058
  40efe4:	gs ins DWORD PTR es:[rdi],dx
  40efe6:	cs rex.R jb 0x40f04b
  40efea:	ja     0x40f055
  40efec:	outs   dx,BYTE PTR ds:[rsi]
  40efed:	addr32 cs push rbx
  40eff0:	imul   edi,DWORD PTR [rdx+0x65],0x2
  40eff7:	add    eax,0x74646977
  40effc:	push   0x69656806
  40f001:	addr32 push 0x8000074
  40f007:	or     BYTE PTR [rdx],al
  40f009:	add    BYTE PTR [rax],al
  40f00b:	add    BYTE PTR [rbx+0x1],dh
  40f00e:	add    BYTE PTR [rax],al
  40f010:	add    al,BYTE PTR [rcx]
  40f012:	add    BYTE PTR [rax],al
  40f014:	or     ecx,DWORD PTR [rax]
  40f016:	add    BYTE PTR [rax],al
  40f018:	add    BYTE PTR [rax],al
  40f01a:	add    al,BYTE PTR [rcx]
  40f01c:	rex.X add BYTE PTR [rcx],al
  40f01f:	add    BYTE PTR [rax],al
  40f021:	add    bh,bh
  40f023:	(bad)  
  40f024:	(bad)  
  40f025:	inc    DWORD PTR [rcx]
  40f027:	add    BYTE PTR [rax],al
  40f029:	add    BYTE PTR [rax],al
  40f02b:	add    BYTE PTR [rax],al
  40f02d:	add    BYTE PTR [rdx+rax*1],cl
  40f030:	add    BYTE PTR [rax],al
  40f032:	add    BYTE PTR [rdi+0x53],dl
  40f035:	jns    0x40f0aa
  40f037:	je     0x40f09e
  40f039:	ins    DWORD PTR es:[rdi],dx
  40f03a:	cs push rdi
  40f03c:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40f043:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40f045:	jb     0x40f0b4
  40f047:	jae    0x40f075
  40f049:	and    BYTE PTR [rsi+0x65],dl
  40f04c:	jb     0x40f0c1
  40f04e:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40f055:	xor    BYTE PTR cs:[rsi],ch
  40f058:	xor    BYTE PTR [rax+riz*1],ch
  40f05b:	rex.XB jne 0x40f0ca
  40f05e:	je     0x40f0d5
  40f060:	jb     0x40f0c7
  40f062:	cmp    eax,0x7475656e
  40f067:	jb     0x40f0ca
  40f069:	ins    BYTE PTR es:[rdi],dx
  40f06a:	sub    al,0x20
  40f06c:	push   rax
  40f06d:	jne    0x40f0d1
  40f06f:	ins    BYTE PTR es:[rdi],dx
  40f070:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40f077:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40f07b:	(bad)  
  40f07c:	(bad)  
  40f07d:	(bad)  
  40f07e:	(bad)  
  40f07f:	xor    eax,0x31363563
  40f084:	cmp    DWORD PTR [rbx],esi
  40f086:	xor    al,0x65
  40f088:	xor    BYTE PTR [rax],bh
  40f08a:	cmp    DWORD PTR [rip+0x1],eax        # 0x40f091
  40f090:	sbb    al,0x53
  40f092:	jns    0x40f107
  40f094:	je     0x40f0fb
  40f096:	ins    DWORD PTR es:[rdi],dx
  40f097:	cs push rdi
  40f099:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40f0a0:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40f0a2:	jb     0x40f111
  40f0a4:	jae    0x40f0d4
  40f0a6:	rex.WB ins DWORD PTR es:[rdi],dx
  40f0a8:	rex.WRB outs dx,DWORD PTR gs:[rsi]
  40f0ab:	fs add DWORD PTR gs:[rax],eax
  40f0af:	add    BYTE PTR [rax],al
  40f0b1:	(bad)  
  40f0b2:	jbe    0x40f115
  40f0b4:	ins    BYTE PTR es:[rdi],dx
  40f0b5:	jne    0x40f11c
  40f0b7:	pop    rdi
  40f0b8:	pop    rdi
  40f0b9:	add    BYTE PTR [rax],cl
  40f0bb:	add    al,BYTE PTR [rax]
  40f0bd:	add    BYTE PTR [rax],al
  40f0bf:	add    BYTE PTR [rax],al
  40f0c1:	add    BYTE PTR [rax],al
  40f0c3:	or     eax,DWORD PTR [rbx+0x0]
  40f0c6:	add    DWORD PTR [rax],eax
  40f0c8:	add    BYTE PTR [rax],al
  40f0ca:	(bad)  
  40f0cb:	(bad)  
  40f0cc:	(bad)  
  40f0cd:	inc    DWORD PTR [rcx]
  40f0cf:	add    BYTE PTR [rax],al
  40f0d1:	add    BYTE PTR [rax],al
  40f0d3:	add    BYTE PTR [rax],al
  40f0d5:	add    BYTE PTR [rdx+rax*1],cl
  40f0d8:	add    BYTE PTR [rax],al
  40f0da:	add    BYTE PTR [rcx+0x53],dl
  40f0dd:	jns    0x40f152
  40f0df:	je     0x40f146
  40f0e1:	ins    DWORD PTR es:[rdi],dx
  40f0e2:	cs rex.R jb 0x40f147
  40f0e6:	ja     0x40f151
  40f0e8:	outs   dx,BYTE PTR ds:[rsi]
  40f0e9:	addr32 sub al,0x20
  40f0ec:	push   rsi
  40f0ed:	gs jb  0x40f163
  40f0f0:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40f0f7:	xor    BYTE PTR cs:[rsi],ch
  40f0fa:	xor    BYTE PTR [rax+riz*1],ch
  40f0fd:	rex.XB jne 0x40f16c
  40f100:	je     0x40f177
  40f102:	jb     0x40f169
  40f104:	cmp    eax,0x7475656e
  40f109:	jb     0x40f16c
  40f10b:	ins    BYTE PTR es:[rdi],dx
  40f10c:	sub    al,0x20
  40f10e:	push   rax
  40f10f:	jne    0x40f173
  40f111:	ins    BYTE PTR es:[rdi],dx
  40f112:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40f119:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40f11d:	(bad)  
  40f11e:	xor    BYTE PTR [rbx],dh
  40f120:	xor    ax,0x3766
  40f124:	xor    WORD PTR [rcx],si
  40f127:	fs xor eax,0x61336130
  40f12d:	add    eax,0x1
  40f132:	adc    al,0x53
  40f134:	jns    0x40f1a9
  40f136:	je     0x40f19d
  40f138:	ins    DWORD PTR es:[rdi],dx
  40f139:	cs rex.R jb 0x40f19e
  40f13d:	ja     0x40f1a8
  40f13f:	outs   dx,BYTE PTR ds:[rsi]
  40f140:	addr32 cs push rax
  40f143:	outs   dx,DWORD PTR ds:[rsi]
  40f144:	imul   ebp,DWORD PTR [rsi+0x74],0x2
  40f14b:	add    DWORD PTR [rax+0x1],edi
  40f14e:	jns    0x40f150
  40f150:	add    BYTE PTR [rax],cl
  40f152:	or     BYTE PTR [rdx],al
  40f154:	add    BYTE PTR [rax],al
  40f156:	add    BYTE PTR [rax],al
  40f158:	add    BYTE PTR [rax],al
  40f15a:	add    BYTE PTR [rbx+0x0],dh
  40f15d:	add    BYTE PTR [rax],al
  40f15f:	or     eax,DWORD PTR [rax+rax*1+0x1]
  40f163:	add    BYTE PTR [rax],al
  40f165:	add    bh,bh
  40f167:	(bad)  
  40f168:	(bad)  
  40f169:	inc    DWORD PTR [rcx]
  40f16b:	add    BYTE PTR [rax],al
  40f16d:	add    BYTE PTR [rax],al
  40f16f:	add    BYTE PTR [rax],al
  40f171:	add    BYTE PTR [rdx+rax*1],cl
  40f174:	add    BYTE PTR [rax],al
  40f176:	add    BYTE PTR [rdi+0x53],dl
  40f179:	jns    0x40f1ee
  40f17b:	je     0x40f1e2
  40f17d:	ins    DWORD PTR es:[rdi],dx
  40f17e:	cs push rdi
  40f180:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40f187:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40f189:	jb     0x40f1f8
  40f18b:	jae    0x40f1b9
  40f18d:	and    BYTE PTR [rsi+0x65],dl
  40f190:	jb     0x40f205
  40f192:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40f199:	xor    BYTE PTR cs:[rsi],ch
  40f19c:	xor    BYTE PTR [rax+riz*1],ch
  40f19f:	rex.XB jne 0x40f20e
  40f1a2:	je     0x40f219
  40f1a4:	jb     0x40f20b
  40f1a6:	cmp    eax,0x7475656e
  40f1ab:	jb     0x40f20e
  40f1ad:	ins    BYTE PTR es:[rdi],dx
  40f1ae:	sub    al,0x20
  40f1b0:	push   rax
  40f1b1:	jne    0x40f215
  40f1b3:	ins    BYTE PTR es:[rdi],dx
  40f1b4:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40f1bb:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40f1bf:	(bad)  
  40f1c0:	(bad)  
  40f1c1:	(bad)  
  40f1c2:	(bad)  
  40f1c3:	xor    eax,0x31363563
  40f1c8:	cmp    DWORD PTR [rbx],esi
  40f1ca:	xor    al,0x65
  40f1cc:	xor    BYTE PTR [rax],bh
  40f1ce:	cmp    DWORD PTR [rip+0x1],eax        # 0x40f1d5
  40f1d4:	sbb    al,0x53
  40f1d6:	jns    0x40f24b
  40f1d8:	je     0x40f23f
  40f1da:	ins    DWORD PTR es:[rdi],dx
  40f1db:	cs push rdi
  40f1dd:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40f1e4:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40f1e6:	jb     0x40f255
  40f1e8:	jae    0x40f218
  40f1ea:	push   rax
  40f1eb:	(bad)  
  40f1ec:	fs imul ebp,DWORD PTR fs:[rsi+0x67],0x5
  40f1f5:	add    al,0x5f
  40f1f7:	(bad)  
  40f1f8:	ins    BYTE PTR es:[rdi],dx
  40f1f9:	ins    BYTE PTR es:[rdi],dx
  40f1fa:	add    al,0x5f
  40f1fc:	je     0x40f26d
  40f1fe:	jo     0x40f205
  40f200:	pop    rdi
  40f201:	ins    BYTE PTR es:[rdi],dx
  40f202:	gs data16 je 0x40f20c
  40f206:	pop    rdi
  40f207:	jb     0x40f272
  40f209:	addr32 push 0x625f0774
  40f20f:	outs   dx,DWORD PTR ds:[rsi]
  40f210:	je     0x40f286
  40f212:	outs   dx,DWORD PTR ds:[rsi]
  40f213:	ins    DWORD PTR es:[rdi],dx
  40f214:	add    BYTE PTR [rax],al
  40f216:	add    BYTE PTR [rax],al
  40f218:	add    BYTE PTR [rcx],al
  40f21a:	or     BYTE PTR [rax],cl
  40f21c:	or     BYTE PTR [rax],cl
  40f21e:	add    al,BYTE PTR [rax]
  40f220:	add    BYTE PTR [rax],al
  40f222:	add    BYTE PTR [rdi],cl
  40f224:	add    BYTE PTR [rax],al
  40f226:	add    BYTE PTR [rax],al
  40f228:	add    BYTE PTR [rax],al
  40f22a:	add    BYTE PTR [rdx],al
  40f22c:	add    BYTE PTR [rax],al
  40f22e:	add    BYTE PTR [rax],al
  40f230:	add    BYTE PTR [rax],al
  40f232:	add    BYTE PTR [rbx],cl
  40f234:	add    BYTE PTR [r9],al
  40f237:	add    BYTE PTR [rax],al
  40f239:	add    bh,bh
  40f23b:	(bad)  
  40f23c:	(bad)  
  40f23d:	inc    DWORD PTR [rcx]
  40f23f:	add    BYTE PTR [rax],al
  40f241:	add    BYTE PTR [rax],al
  40f243:	add    BYTE PTR [rax],al
  40f245:	add    BYTE PTR [rdx+rax*1],cl
  40f248:	add    BYTE PTR [rax],al
  40f24a:	add    BYTE PTR [rcx+0x53],dl
  40f24d:	jns    0x40f2c2
  40f24f:	je     0x40f2b6
  40f251:	ins    DWORD PTR es:[rdi],dx
  40f252:	cs rex.R jb 0x40f2b7
  40f256:	ja     0x40f2c1
  40f258:	outs   dx,BYTE PTR ds:[rsi]
  40f259:	addr32 sub al,0x20
  40f25c:	push   rsi
  40f25d:	gs jb  0x40f2d3
  40f260:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40f267:	xor    BYTE PTR cs:[rsi],ch
  40f26a:	xor    BYTE PTR [rax+riz*1],ch
  40f26d:	rex.XB jne 0x40f2dc
  40f270:	je     0x40f2e7
  40f272:	jb     0x40f2d9
  40f274:	cmp    eax,0x7475656e
  40f279:	jb     0x40f2dc
  40f27b:	ins    BYTE PTR es:[rdi],dx
  40f27c:	sub    al,0x20
  40f27e:	push   rax
  40f27f:	jne    0x40f2e3
  40f281:	ins    BYTE PTR es:[rdi],dx
  40f282:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40f289:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40f28d:	(bad)  
  40f28e:	xor    BYTE PTR [rbx],dh
  40f290:	xor    ax,0x3766
  40f294:	xor    WORD PTR [rcx],si
  40f297:	fs xor eax,0x61336130
  40f29d:	add    eax,0x1
  40f2a2:	adc    edx,DWORD PTR [rbx+0x79]
  40f2a5:	jae    0x40f31b
  40f2a7:	gs ins DWORD PTR es:[rdi],dx
  40f2a9:	cs rex.R jb 0x40f30e
  40f2ad:	ja     0x40f318
  40f2af:	outs   dx,BYTE PTR ds:[rsi]
  40f2b0:	addr32 cs push rbx
  40f2b3:	imul   edi,DWORD PTR [rdx+0x65],0x2
  40f2ba:	add    eax,0x74646977
  40f2bf:	push   0x69656806
  40f2c4:	addr32 push 0x8000074
  40f2ca:	or     BYTE PTR [rdx],al
  40f2cc:	add    BYTE PTR [rax],al
  40f2ce:	add    BYTE PTR [rbx+0xd000000],ah
  40f2d4:	add    BYTE PTR [rax],al
  40f2d6:	add    BYTE PTR [rbx],cl
  40f2d8:	or     BYTE PTR [rsi],al
  40f2da:	add    BYTE PTR [rax],al
  40f2dc:	add    BYTE PTR [rcx],al
  40f2de:	and    esp,DWORD PTR [rsi]
  40f2e0:	rex.WB outs dx,BYTE PTR ds:[rsi]
  40f2e2:	jae    0x40f358
  40f2e4:	(bad)  
  40f2e5:	ins    BYTE PTR es:[rdi],dx
  40f2e6:	ins    BYTE PTR es:[rdi],dx
  40f2e7:	(bad)  
  40f2e8:	je     0x40f353
  40f2ea:	outs   dx,DWORD PTR ds:[rsi]
  40f2eb:	outs   dx,BYTE PTR ds:[rsi]
  40f2ec:	and    BYTE PTR [rbp+0x65],cl
  40f2ef:	imul   esp,DWORD PTR fs:[rcx+0x20],0x746f6f52
  40f2f7:	and    BYTE PTR [rcx+rbp*2+0x72],al
  40f2fb:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
  40f300:	jns    0x40f33c
  40f302:	add    al,BYTE PTR [rcx]
  40f304:	rex.X add BYTE PTR [rcx],al
  40f307:	add    BYTE PTR [rax],al
  40f309:	add    bh,bh
  40f30b:	(bad)  
  40f30c:	(bad)  
  40f30d:	inc    DWORD PTR [rcx]
  40f30f:	add    BYTE PTR [rax],al
  40f311:	add    BYTE PTR [rax],al
  40f313:	add    BYTE PTR [rax],al
  40f315:	add    BYTE PTR [rdx+rax*1],cl
  40f318:	add    BYTE PTR [rax],al
  40f31a:	add    BYTE PTR [rdi+0x53],dl
  40f31d:	jns    0x40f392
  40f31f:	je     0x40f386
  40f321:	ins    DWORD PTR es:[rdi],dx
  40f322:	cs push rdi
  40f324:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40f32b:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40f32d:	jb     0x40f39c
  40f32f:	jae    0x40f35d
  40f331:	and    BYTE PTR [rsi+0x65],dl
  40f334:	jb     0x40f3a9
  40f336:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40f33d:	xor    BYTE PTR cs:[rsi],ch
  40f340:	xor    BYTE PTR [rax+riz*1],ch
  40f343:	rex.XB jne 0x40f3b2
  40f346:	je     0x40f3bd
  40f348:	jb     0x40f3af
  40f34a:	cmp    eax,0x7475656e
  40f34f:	jb     0x40f3b2
  40f351:	ins    BYTE PTR es:[rdi],dx
  40f352:	sub    al,0x20
  40f354:	push   rax
  40f355:	jne    0x40f3b9
  40f357:	ins    BYTE PTR es:[rdi],dx
  40f358:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40f35f:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40f363:	(bad)  
  40f364:	(bad)  
  40f365:	(bad)  
  40f366:	(bad)  
  40f367:	xor    eax,0x31363563
  40f36c:	cmp    DWORD PTR [rbx],esi
  40f36e:	xor    al,0x65
  40f370:	xor    BYTE PTR [rax],bh
  40f372:	cmp    DWORD PTR [rip+0x1],eax        # 0x40f379
  40f378:	sbb    al,0x53
  40f37a:	jns    0x40f3ef
  40f37c:	je     0x40f3e3
  40f37e:	ins    DWORD PTR es:[rdi],dx
  40f37f:	cs push rdi
  40f381:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40f388:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40f38a:	jb     0x40f3f9
  40f38c:	jae    0x40f3bc
  40f38e:	rex.WB ins DWORD PTR es:[rdi],dx
  40f390:	rex.WRB outs dx,DWORD PTR gs:[rsi]
  40f393:	fs add DWORD PTR gs:[rax],eax
  40f397:	add    BYTE PTR [rax],al
  40f399:	(bad)  
  40f39a:	jbe    0x40f3fd
  40f39c:	ins    BYTE PTR es:[rdi],dx
  40f39d:	jne    0x40f404
  40f39f:	pop    rdi
  40f3a0:	pop    rdi
  40f3a1:	add    BYTE PTR [rax],cl
  40f3a3:	add    al,BYTE PTR [rax]
  40f3a5:	add    BYTE PTR [rax],al
  40f3a7:	add    BYTE PTR [rax],al
  40f3a9:	add    BYTE PTR [rax],al
  40f3ab:	or     eax,DWORD PTR [rbx+0x0]
  40f3ae:	add    DWORD PTR [rax],eax
  40f3b0:	add    BYTE PTR [rax],al
  40f3b2:	(bad)  
  40f3b3:	(bad)  
  40f3b4:	(bad)  
  40f3b5:	inc    DWORD PTR [rcx]
  40f3b7:	add    BYTE PTR [rax],al
  40f3b9:	add    BYTE PTR [rax],al
  40f3bb:	add    BYTE PTR [rax],al
  40f3bd:	add    BYTE PTR [rdx+rax*1],cl
  40f3c0:	add    BYTE PTR [rax],al
  40f3c2:	add    BYTE PTR [rcx+0x53],dl
  40f3c5:	jns    0x40f43a
  40f3c7:	je     0x40f42e
  40f3c9:	ins    DWORD PTR es:[rdi],dx
  40f3ca:	cs rex.R jb 0x40f42f
  40f3ce:	ja     0x40f439
  40f3d0:	outs   dx,BYTE PTR ds:[rsi]
  40f3d1:	addr32 sub al,0x20
  40f3d4:	push   rsi
  40f3d5:	gs jb  0x40f44b
  40f3d8:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40f3df:	xor    BYTE PTR cs:[rsi],ch
  40f3e2:	xor    BYTE PTR [rax+riz*1],ch
  40f3e5:	rex.XB jne 0x40f454
  40f3e8:	je     0x40f45f
  40f3ea:	jb     0x40f451
  40f3ec:	cmp    eax,0x7475656e
  40f3f1:	jb     0x40f454
  40f3f3:	ins    BYTE PTR es:[rdi],dx
  40f3f4:	sub    al,0x20
  40f3f6:	push   rax
  40f3f7:	jne    0x40f45b
  40f3f9:	ins    BYTE PTR es:[rdi],dx
  40f3fa:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40f401:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40f405:	(bad)  
  40f406:	xor    BYTE PTR [rbx],dh
  40f408:	xor    ax,0x3766
  40f40c:	xor    WORD PTR [rcx],si
  40f40f:	fs xor eax,0x61336130
  40f415:	add    eax,0x1
  40f41a:	adc    al,0x53
  40f41c:	jns    0x40f491
  40f41e:	je     0x40f485
  40f420:	ins    DWORD PTR es:[rdi],dx
  40f421:	cs rex.R jb 0x40f486
  40f425:	ja     0x40f490
  40f427:	outs   dx,BYTE PTR ds:[rsi]
  40f428:	addr32 cs push rax
  40f42b:	outs   dx,DWORD PTR ds:[rsi]
  40f42c:	imul   ebp,DWORD PTR [rsi+0x74],0x2
  40f433:	add    DWORD PTR [rax+0x1],edi
  40f436:	jns    0x40f438
  40f438:	add    BYTE PTR [rax],cl
  40f43a:	or     BYTE PTR [rdx],al
  40f43c:	add    BYTE PTR [rax],al
  40f43e:	add    BYTE PTR [rax],al
  40f440:	add    BYTE PTR [rax],al
  40f442:	add    BYTE PTR [rsi],dl
  40f444:	add    BYTE PTR [rax],al
  40f446:	add    BYTE PTR [rbx],cl
  40f448:	add    BYTE PTR [rcx],r8b
  40f44b:	add    BYTE PTR [rax],al
  40f44d:	add    bh,bh
  40f44f:	(bad)  
  40f450:	(bad)  
  40f451:	inc    DWORD PTR [rcx]
  40f453:	add    BYTE PTR [rax],al
  40f455:	add    BYTE PTR [rax],al
  40f457:	add    BYTE PTR [rax],al
  40f459:	add    BYTE PTR [rdx+rax*1],cl
  40f45c:	add    BYTE PTR [rax],al
  40f45e:	add    BYTE PTR [rdi+0x53],dl
  40f461:	jns    0x40f4d6
  40f463:	je     0x40f4ca
  40f465:	ins    DWORD PTR es:[rdi],dx
  40f466:	cs push rdi
  40f468:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40f46f:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40f471:	jb     0x40f4e0
  40f473:	jae    0x40f4a1
  40f475:	and    BYTE PTR [rsi+0x65],dl
  40f478:	jb     0x40f4ed
  40f47a:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40f481:	xor    BYTE PTR cs:[rsi],ch
  40f484:	xor    BYTE PTR [rax+riz*1],ch
  40f487:	rex.XB jne 0x40f4f6
  40f48a:	je     0x40f501
  40f48c:	jb     0x40f4f3
  40f48e:	cmp    eax,0x7475656e
  40f493:	jb     0x40f4f6
  40f495:	ins    BYTE PTR es:[rdi],dx
  40f496:	sub    al,0x20
  40f498:	push   rax
  40f499:	jne    0x40f4fd
  40f49b:	ins    BYTE PTR es:[rdi],dx
  40f49c:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40f4a3:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40f4a7:	(bad)  
  40f4a8:	(bad)  
  40f4a9:	(bad)  
  40f4aa:	(bad)  
  40f4ab:	xor    eax,0x31363563
  40f4b0:	cmp    DWORD PTR [rbx],esi
  40f4b2:	xor    al,0x65
  40f4b4:	xor    BYTE PTR [rax],bh
  40f4b6:	cmp    DWORD PTR [rip+0x1],eax        # 0x40f4bd
  40f4bc:	sbb    al,0x53
  40f4be:	jns    0x40f533
  40f4c0:	je     0x40f527
  40f4c2:	ins    DWORD PTR es:[rdi],dx
  40f4c3:	cs push rdi
  40f4c5:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40f4cc:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40f4ce:	jb     0x40f53d
  40f4d0:	jae    0x40f500
  40f4d2:	push   rax
  40f4d3:	(bad)  
  40f4d4:	fs imul ebp,DWORD PTR fs:[rsi+0x67],0x5
  40f4dd:	add    al,0x5f
  40f4df:	(bad)  
  40f4e0:	ins    BYTE PTR es:[rdi],dx
  40f4e1:	ins    BYTE PTR es:[rdi],dx
  40f4e2:	add    al,0x5f
  40f4e4:	je     0x40f555
  40f4e6:	jo     0x40f4ed
  40f4e8:	pop    rdi
  40f4e9:	ins    BYTE PTR es:[rdi],dx
  40f4ea:	gs data16 je 0x40f4f4
  40f4ee:	pop    rdi
  40f4ef:	jb     0x40f55a
  40f4f1:	addr32 push 0x625f0774
  40f4f7:	outs   dx,DWORD PTR ds:[rsi]
  40f4f8:	je     0x40f56e
  40f4fa:	outs   dx,DWORD PTR ds:[rsi]
  40f4fb:	ins    DWORD PTR es:[rdi],dx
  40f4fc:	add    BYTE PTR [rax],al
  40f4fe:	add    BYTE PTR [rax],al
  40f500:	add    BYTE PTR [rcx],al
  40f502:	or     BYTE PTR [rax],cl
  40f504:	or     BYTE PTR [rax],cl
  40f506:	add    al,BYTE PTR [rax]
  40f508:	add    BYTE PTR [rax],al
  40f50a:	add    BYTE PTR [rdx],al
	...
  40f514:	add    BYTE PTR [rax],al
  40f516:	add    BYTE PTR [rdx],al
  40f518:	add    BYTE PTR [rax],al
  40f51a:	add    BYTE PTR [rbx],cl
  40f51c:	add    BYTE PTR [r9],al
  40f51f:	add    BYTE PTR [rax],al
  40f521:	add    bh,bh
  40f523:	(bad)  
  40f524:	(bad)  
  40f525:	inc    DWORD PTR [rcx]
  40f527:	add    BYTE PTR [rax],al
  40f529:	add    BYTE PTR [rax],al
  40f52b:	add    BYTE PTR [rax],al
  40f52d:	add    BYTE PTR [rdx+rax*1],cl
  40f530:	add    BYTE PTR [rax],al
  40f532:	add    BYTE PTR [rcx+0x53],dl
  40f535:	jns    0x40f5aa
  40f537:	je     0x40f59e
  40f539:	ins    DWORD PTR es:[rdi],dx
  40f53a:	cs rex.R jb 0x40f59f
  40f53e:	ja     0x40f5a9
  40f540:	outs   dx,BYTE PTR ds:[rsi]
  40f541:	addr32 sub al,0x20
  40f544:	push   rsi
  40f545:	gs jb  0x40f5bb
  40f548:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40f54f:	xor    BYTE PTR cs:[rsi],ch
  40f552:	xor    BYTE PTR [rax+riz*1],ch
  40f555:	rex.XB jne 0x40f5c4
  40f558:	je     0x40f5cf
  40f55a:	jb     0x40f5c1
  40f55c:	cmp    eax,0x7475656e
  40f561:	jb     0x40f5c4
  40f563:	ins    BYTE PTR es:[rdi],dx
  40f564:	sub    al,0x20
  40f566:	push   rax
  40f567:	jne    0x40f5cb
  40f569:	ins    BYTE PTR es:[rdi],dx
  40f56a:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40f571:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40f575:	(bad)  
  40f576:	xor    BYTE PTR [rbx],dh
  40f578:	xor    ax,0x3766
  40f57c:	xor    WORD PTR [rcx],si
  40f57f:	fs xor eax,0x61336130
  40f585:	add    eax,0x1
  40f58a:	adc    edx,DWORD PTR [rbx+0x79]
  40f58d:	jae    0x40f603
  40f58f:	gs ins DWORD PTR es:[rdi],dx
  40f591:	cs rex.R jb 0x40f5f6
  40f595:	ja     0x40f600
  40f597:	outs   dx,BYTE PTR ds:[rsi]
  40f598:	addr32 cs push rbx
  40f59b:	imul   edi,DWORD PTR [rdx+0x65],0x2
  40f5a2:	add    eax,0x74646977
  40f5a7:	push   0x69656806
  40f5ac:	addr32 push 0x8000074
  40f5b2:	or     BYTE PTR [rdx],al
  40f5b4:	add    BYTE PTR [rax],al
  40f5b6:	add    BYTE PTR [rax+rax*1+0x0],dl
  40f5ba:	add    BYTE PTR [rip+0xb000000],cl        # 0xb40f5c0
  40f5c0:	or     BYTE PTR [rdx],al
  40f5c2:	add    BYTE PTR [rax],al
  40f5c4:	add    BYTE PTR [rcx],al
  40f5c6:	(bad)  
  40f5c8:	jb     0x40f639
  40f5ca:	movsxd esp,DWORD PTR [rbp+0x73]
  40f5cd:	jae    0x40f63e
  40f5cf:	jb     0x40f5f1
  40f5d1:	push   rsp
  40f5d2:	jns    0x40f644
  40f5d4:	cmp    al,BYTE PTR gs:[rsi+0x0]
  40f5d8:	add    DWORD PTR [rax],eax
  40f5da:	add    BYTE PTR [rax],al
  40f5dc:	(bad)  
  40f5dd:	(bad)  
  40f5de:	(bad)  
  40f5df:	inc    DWORD PTR [rcx]
  40f5e1:	add    BYTE PTR [rax],al
  40f5e3:	add    BYTE PTR [rax],al
  40f5e5:	add    BYTE PTR [rax],al
  40f5e7:	add    BYTE PTR [rdx+rax*1],cl
  40f5ea:	add    BYTE PTR [rax],al
  40f5ec:	add    BYTE PTR [rdi+0x53],dl
  40f5ef:	jns    0x40f664
  40f5f1:	je     0x40f658
  40f5f3:	ins    DWORD PTR es:[rdi],dx
  40f5f4:	cs push rdi
  40f5f6:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40f5fd:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40f5ff:	jb     0x40f66e
  40f601:	jae    0x40f62f
  40f603:	and    BYTE PTR [rsi+0x65],dl
  40f606:	jb     0x40f67b
  40f608:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40f60f:	xor    BYTE PTR cs:[rsi],ch
  40f612:	xor    BYTE PTR [rax+riz*1],ch
  40f615:	rex.XB jne 0x40f684
  40f618:	je     0x40f68f
  40f61a:	jb     0x40f681
  40f61c:	cmp    eax,0x7475656e
  40f621:	jb     0x40f684
  40f623:	ins    BYTE PTR es:[rdi],dx
  40f624:	sub    al,0x20
  40f626:	push   rax
  40f627:	jne    0x40f68b
  40f629:	ins    BYTE PTR es:[rdi],dx
  40f62a:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40f631:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40f635:	(bad)  
  40f636:	(bad)  
  40f637:	(bad)  
  40f638:	(bad)  
  40f639:	xor    eax,0x31363563
  40f63e:	cmp    DWORD PTR [rbx],esi
  40f640:	xor    al,0x65
  40f642:	xor    BYTE PTR [rax],bh
  40f644:	cmp    DWORD PTR [rip+0x1],eax        # 0x40f64b
  40f64a:	(bad)  
  40f64b:	push   rbx
  40f64c:	jns    0x40f6c1
  40f64e:	je     0x40f6b5
  40f650:	ins    DWORD PTR es:[rdi],dx
  40f651:	cs push rdi
  40f653:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40f65a:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40f65c:	jb     0x40f6cb
  40f65e:	jae    0x40f68e
  40f660:	rex.R outs dx,DWORD PTR ds:[rsi]
  40f662:	movsxd ebp,DWORD PTR [rbx+0x53]
  40f665:	je     0x40f6e0
  40f667:	ins    BYTE PTR es:[rdi],dx
  40f668:	add    DWORD PTR gs:[rax],eax
  40f66b:	add    BYTE PTR [rax],al
  40f66d:	(bad)  
  40f66e:	jbe    0x40f6d1
  40f670:	ins    BYTE PTR es:[rdi],dx
  40f671:	jne    0x40f6d8
  40f673:	pop    rdi
  40f674:	pop    rdi
  40f675:	add    BYTE PTR [rax],cl
  40f677:	add    al,BYTE PTR [rax]
  40f679:	add    BYTE PTR [rax],al
  40f67b:	add    eax,0xb000000
  40f680:	rex.XB add BYTE PTR [r9],al
  40f683:	add    BYTE PTR [rax],al
  40f685:	add    bh,bh
  40f687:	(bad)  
  40f688:	(bad)  
  40f689:	inc    DWORD PTR [rcx]
  40f68b:	add    BYTE PTR [rax],al
  40f68d:	add    BYTE PTR [rax],al
  40f68f:	add    BYTE PTR [rax],al
  40f691:	add    BYTE PTR [rdx+rax*1],cl
  40f694:	add    BYTE PTR [rax],al
  40f696:	add    BYTE PTR [rcx+0x53],dl
  40f699:	jns    0x40f70e
  40f69b:	je     0x40f702
  40f69d:	ins    DWORD PTR es:[rdi],dx
  40f69e:	cs rex.R jb 0x40f703
  40f6a2:	ja     0x40f70d
  40f6a4:	outs   dx,BYTE PTR ds:[rsi]
  40f6a5:	addr32 sub al,0x20
  40f6a8:	push   rsi
  40f6a9:	gs jb  0x40f71f
  40f6ac:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40f6b3:	xor    BYTE PTR cs:[rsi],ch
  40f6b6:	xor    BYTE PTR [rax+riz*1],ch
  40f6b9:	rex.XB jne 0x40f728
  40f6bc:	je     0x40f733
  40f6be:	jb     0x40f725
  40f6c0:	cmp    eax,0x7475656e
  40f6c5:	jb     0x40f728
  40f6c7:	ins    BYTE PTR es:[rdi],dx
  40f6c8:	sub    al,0x20
  40f6ca:	push   rax
  40f6cb:	jne    0x40f72f
  40f6cd:	ins    BYTE PTR es:[rdi],dx
  40f6ce:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40f6d5:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40f6d9:	(bad)  
  40f6da:	xor    BYTE PTR [rbx],dh
  40f6dc:	xor    ax,0x3766
  40f6e0:	xor    WORD PTR [rcx],si
  40f6e3:	fs xor eax,0x61336130
  40f6e9:	add    eax,0x1
  40f6ee:	adc    al,0x53
  40f6f0:	jns    0x40f765
  40f6f2:	je     0x40f759
  40f6f4:	ins    DWORD PTR es:[rdi],dx
  40f6f5:	cs rex.R jb 0x40f75a
  40f6f9:	ja     0x40f764
  40f6fb:	outs   dx,BYTE PTR ds:[rsi]
  40f6fc:	addr32 cs push rax
  40f6ff:	outs   dx,DWORD PTR ds:[rsi]
  40f700:	imul   ebp,DWORD PTR [rsi+0x74],0x2
  40f707:	add    DWORD PTR [rax+0x1],edi
  40f70a:	jns    0x40f70c
  40f70c:	add    BYTE PTR [rax],cl
  40f70e:	or     BYTE PTR [rdx],al
  40f710:	add    BYTE PTR [rax],al
  40f712:	add    BYTE PTR [rdi+0x70000000],ah
  40f718:	add    BYTE PTR [rax],al
  40f71a:	add    BYTE PTR [rbx],cl
  40f71c:	add    BYTE PTR [rcx],r8b
  40f71f:	add    BYTE PTR [rax],al
  40f721:	add    bh,bh
  40f723:	(bad)  
  40f724:	(bad)  
  40f725:	inc    DWORD PTR [rcx]
  40f727:	add    BYTE PTR [rax],al
  40f729:	add    BYTE PTR [rax],al
  40f72b:	add    BYTE PTR [rax],al
  40f72d:	add    BYTE PTR [rdx+rax*1],cl
  40f730:	add    BYTE PTR [rax],al
  40f732:	add    BYTE PTR [rdi+0x53],dl
  40f735:	jns    0x40f7aa
  40f737:	je     0x40f79e
  40f739:	ins    DWORD PTR es:[rdi],dx
  40f73a:	cs push rdi
  40f73c:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40f743:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40f745:	jb     0x40f7b4
  40f747:	jae    0x40f775
  40f749:	and    BYTE PTR [rsi+0x65],dl
  40f74c:	jb     0x40f7c1
  40f74e:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40f755:	xor    BYTE PTR cs:[rsi],ch
  40f758:	xor    BYTE PTR [rax+riz*1],ch
  40f75b:	rex.XB jne 0x40f7ca
  40f75e:	je     0x40f7d5
  40f760:	jb     0x40f7c7
  40f762:	cmp    eax,0x7475656e
  40f767:	jb     0x40f7ca
  40f769:	ins    BYTE PTR es:[rdi],dx
  40f76a:	sub    al,0x20
  40f76c:	push   rax
  40f76d:	jne    0x40f7d1
  40f76f:	ins    BYTE PTR es:[rdi],dx
  40f770:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40f777:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40f77b:	(bad)  
  40f77c:	(bad)  
  40f77d:	(bad)  
  40f77e:	(bad)  
  40f77f:	xor    eax,0x31363563
  40f784:	cmp    DWORD PTR [rbx],esi
  40f786:	xor    al,0x65
  40f788:	xor    BYTE PTR [rax],bh
  40f78a:	cmp    DWORD PTR [rip+0x1],eax        # 0x40f791
  40f790:	sbb    al,0x53
  40f792:	jns    0x40f807
  40f794:	je     0x40f7fb
  40f796:	ins    DWORD PTR es:[rdi],dx
  40f797:	cs push rdi
  40f799:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40f7a0:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40f7a2:	jb     0x40f811
  40f7a4:	jae    0x40f7d4
  40f7a6:	push   rax
  40f7a7:	(bad)  
  40f7a8:	fs imul ebp,DWORD PTR fs:[rsi+0x67],0x5
  40f7b1:	add    al,0x5f
  40f7b3:	(bad)  
  40f7b4:	ins    BYTE PTR es:[rdi],dx
  40f7b5:	ins    BYTE PTR es:[rdi],dx
  40f7b6:	add    al,0x5f
  40f7b8:	je     0x40f829
  40f7ba:	jo     0x40f7c1
  40f7bc:	pop    rdi
  40f7bd:	ins    BYTE PTR es:[rdi],dx
  40f7be:	gs data16 je 0x40f7c8
  40f7c2:	pop    rdi
  40f7c3:	jb     0x40f82e
  40f7c5:	addr32 push 0x625f0774
  40f7cb:	outs   dx,DWORD PTR ds:[rsi]
  40f7cc:	je     0x40f842
  40f7ce:	outs   dx,DWORD PTR ds:[rsi]
  40f7cf:	ins    DWORD PTR es:[rdi],dx
  40f7d0:	add    BYTE PTR [rax],al
  40f7d2:	add    BYTE PTR [rax],al
  40f7d4:	add    BYTE PTR [rcx],al
  40f7d6:	or     BYTE PTR [rax],cl
  40f7d8:	or     BYTE PTR [rax],cl
  40f7da:	add    al,BYTE PTR [rax]
  40f7dc:	add    BYTE PTR [rax],al
  40f7de:	add    BYTE PTR [rax+rax*1],cl
  40f7e1:	add    BYTE PTR [rax],al
  40f7e3:	add    al,BYTE PTR [rax]
  40f7e5:	add    BYTE PTR [rax],al
  40f7e7:	add    al,BYTE PTR [rax]
  40f7e9:	add    BYTE PTR [rax],al
  40f7eb:	add    BYTE PTR [rax],al
  40f7ed:	add    BYTE PTR [rax],al
  40f7ef:	or     eax,DWORD PTR [rcx+0x0]
  40f7f2:	add    DWORD PTR [rax],eax
  40f7f4:	add    BYTE PTR [rax],al
  40f7f6:	(bad)  
  40f7f7:	(bad)  
  40f7f8:	(bad)  
  40f7f9:	inc    DWORD PTR [rcx]
  40f7fb:	add    BYTE PTR [rax],al
  40f7fd:	add    BYTE PTR [rax],al
  40f7ff:	add    BYTE PTR [rax],al
  40f801:	add    BYTE PTR [rdx+rax*1],cl
  40f804:	add    BYTE PTR [rax],al
  40f806:	add    BYTE PTR [rcx+0x53],dl
  40f809:	jns    0x40f87e
  40f80b:	je     0x40f872
  40f80d:	ins    DWORD PTR es:[rdi],dx
  40f80e:	cs rex.R jb 0x40f873
  40f812:	ja     0x40f87d
  40f814:	outs   dx,BYTE PTR ds:[rsi]
  40f815:	addr32 sub al,0x20
  40f818:	push   rsi
  40f819:	gs jb  0x40f88f
  40f81c:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40f823:	xor    BYTE PTR cs:[rsi],ch
  40f826:	xor    BYTE PTR [rax+riz*1],ch
  40f829:	rex.XB jne 0x40f898
  40f82c:	je     0x40f8a3
  40f82e:	jb     0x40f895
  40f830:	cmp    eax,0x7475656e
  40f835:	jb     0x40f898
  40f837:	ins    BYTE PTR es:[rdi],dx
  40f838:	sub    al,0x20
  40f83a:	push   rax
  40f83b:	jne    0x40f89f
  40f83d:	ins    BYTE PTR es:[rdi],dx
  40f83e:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40f845:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40f849:	(bad)  
  40f84a:	xor    BYTE PTR [rbx],dh
  40f84c:	xor    ax,0x3766
  40f850:	xor    WORD PTR [rcx],si
  40f853:	fs xor eax,0x61336130
  40f859:	add    eax,0x1
  40f85e:	adc    edx,DWORD PTR [rbx+0x79]
  40f861:	jae    0x40f8d7
  40f863:	gs ins DWORD PTR es:[rdi],dx
  40f865:	cs rex.R jb 0x40f8ca
  40f869:	ja     0x40f8d4
  40f86b:	outs   dx,BYTE PTR ds:[rsi]
  40f86c:	addr32 cs push rbx
  40f86f:	imul   edi,DWORD PTR [rdx+0x65],0x2
  40f876:	add    eax,0x74646977
  40f87b:	push   0x69656806
  40f880:	addr32 push 0x8000074
  40f886:	or     BYTE PTR [rdx],al
  40f888:	add    BYTE PTR [rax],al
  40f88a:	add    BYTE PTR [rdx+0x14000000],ch
  40f890:	add    BYTE PTR [rax],al
  40f892:	add    BYTE PTR [rbx],cl
  40f894:	or     BYTE PTR [rdi],al
  40f896:	add    BYTE PTR [rax],al
  40f898:	add    BYTE PTR [rdx],al
  40f89a:	add    DWORD PTR [rdx],eax
  40f89c:	add    BYTE PTR [rdx+0x0],al
  40f89f:	add    DWORD PTR [rax],eax
  40f8a1:	add    BYTE PTR [rax],al
  40f8a3:	(bad)  
  40f8a4:	(bad)  
  40f8a5:	(bad)  
  40f8a6:	inc    DWORD PTR [rcx]
  40f8a8:	add    BYTE PTR [rax],al
  40f8aa:	add    BYTE PTR [rax],al
  40f8ac:	add    BYTE PTR [rax],al
  40f8ae:	add    BYTE PTR [rdx+rax*1],cl
  40f8b1:	add    BYTE PTR [rax],al
  40f8b3:	add    BYTE PTR [rdi+0x53],dl
  40f8b6:	jns    0x40f92b
  40f8b8:	je     0x40f91f
  40f8ba:	ins    DWORD PTR es:[rdi],dx
  40f8bb:	cs push rdi
  40f8bd:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40f8c4:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40f8c6:	jb     0x40f935
  40f8c8:	jae    0x40f8f6
  40f8ca:	and    BYTE PTR [rsi+0x65],dl
  40f8cd:	jb     0x40f942
  40f8cf:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40f8d6:	xor    BYTE PTR cs:[rsi],ch
  40f8d9:	xor    BYTE PTR [rax+riz*1],ch
  40f8dc:	rex.XB jne 0x40f94b
  40f8df:	je     0x40f956
  40f8e1:	jb     0x40f948
  40f8e3:	cmp    eax,0x7475656e
  40f8e8:	jb     0x40f94b
  40f8ea:	ins    BYTE PTR es:[rdi],dx
  40f8eb:	sub    al,0x20
  40f8ed:	push   rax
  40f8ee:	jne    0x40f952
  40f8f0:	ins    BYTE PTR es:[rdi],dx
  40f8f1:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40f8f8:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40f8fc:	(bad)  
  40f8fd:	(bad)  
  40f8fe:	(bad)  
  40f8ff:	(bad)  
  40f900:	xor    eax,0x31363563
  40f905:	cmp    DWORD PTR [rbx],esi
  40f907:	xor    al,0x65
  40f909:	xor    BYTE PTR [rax],bh
  40f90b:	cmp    DWORD PTR [rip+0x1],eax        # 0x40f912
  40f911:	sbb    al,0x53
  40f913:	jns    0x40f988
  40f915:	je     0x40f97c
  40f917:	ins    DWORD PTR es:[rdi],dx
  40f918:	cs push rdi
  40f91a:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40f921:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40f923:	jb     0x40f992
  40f925:	jae    0x40f955
  40f927:	rex.WB ins DWORD PTR es:[rdi],dx
  40f929:	rex.WRB outs dx,DWORD PTR gs:[rsi]
  40f92c:	fs add DWORD PTR gs:[rax],eax
  40f930:	add    BYTE PTR [rax],al
  40f932:	(bad)  
  40f933:	jbe    0x40f996
  40f935:	ins    BYTE PTR es:[rdi],dx
  40f936:	jne    0x40f99d
  40f938:	pop    rdi
  40f939:	pop    rdi
  40f93a:	add    BYTE PTR [rax],cl
  40f93c:	add    al,BYTE PTR [rax]
  40f93e:	add    BYTE PTR [rax],al
  40f940:	add    BYTE PTR [rax],al
  40f942:	add    BYTE PTR [rax],al
  40f944:	or     eax,DWORD PTR [rbx+0x0]
  40f947:	add    DWORD PTR [rax],eax
  40f949:	add    BYTE PTR [rax],al
  40f94b:	(bad)  
  40f94c:	(bad)  
  40f94d:	(bad)  
  40f94e:	inc    DWORD PTR [rcx]
  40f950:	add    BYTE PTR [rax],al
  40f952:	add    BYTE PTR [rax],al
  40f954:	add    BYTE PTR [rax],al
  40f956:	add    BYTE PTR [rdx+rax*1],cl
  40f959:	add    BYTE PTR [rax],al
  40f95b:	add    BYTE PTR [rcx+0x53],dl
  40f95e:	jns    0x40f9d3
  40f960:	je     0x40f9c7
  40f962:	ins    DWORD PTR es:[rdi],dx
  40f963:	cs rex.R jb 0x40f9c8
  40f967:	ja     0x40f9d2
  40f969:	outs   dx,BYTE PTR ds:[rsi]
  40f96a:	addr32 sub al,0x20
  40f96d:	push   rsi
  40f96e:	gs jb  0x40f9e4
  40f971:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40f978:	xor    BYTE PTR cs:[rsi],ch
  40f97b:	xor    BYTE PTR [rax+riz*1],ch
  40f97e:	rex.XB jne 0x40f9ed
  40f981:	je     0x40f9f8
  40f983:	jb     0x40f9ea
  40f985:	cmp    eax,0x7475656e
  40f98a:	jb     0x40f9ed
  40f98c:	ins    BYTE PTR es:[rdi],dx
  40f98d:	sub    al,0x20
  40f98f:	push   rax
  40f990:	jne    0x40f9f4
  40f992:	ins    BYTE PTR es:[rdi],dx
  40f993:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40f99a:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40f99e:	(bad)  
  40f99f:	xor    BYTE PTR [rbx],dh
  40f9a1:	xor    ax,0x3766
  40f9a5:	xor    WORD PTR [rcx],si
  40f9a8:	fs xor eax,0x61336130
  40f9ae:	add    eax,0x1
  40f9b3:	adc    al,0x53
  40f9b5:	jns    0x40fa2a
  40f9b7:	je     0x40fa1e
  40f9b9:	ins    DWORD PTR es:[rdi],dx
  40f9ba:	cs rex.R jb 0x40fa1f
  40f9be:	ja     0x40fa29
  40f9c0:	outs   dx,BYTE PTR ds:[rsi]
  40f9c1:	addr32 cs push rax
  40f9c4:	outs   dx,DWORD PTR ds:[rsi]
  40f9c5:	imul   ebp,DWORD PTR [rsi+0x74],0x2
  40f9cc:	add    DWORD PTR [rax+0x1],edi
  40f9cf:	jns    0x40f9d1
  40f9d1:	add    BYTE PTR [rax],cl
  40f9d3:	or     BYTE PTR [rdx],al
  40f9d5:	add    BYTE PTR [rax],al
  40f9d7:	add    BYTE PTR [rsi],cl
  40f9d9:	add    BYTE PTR [rax],al
  40f9db:	add    BYTE PTR [rdi],ah
  40f9dd:	add    BYTE PTR [rax],al
  40f9df:	add    BYTE PTR [rbx],cl
  40f9e1:	add    BYTE PTR [rcx],r8b
  40f9e4:	add    BYTE PTR [rax],al
  40f9e6:	add    bh,bh
  40f9e8:	(bad)  
  40f9e9:	(bad)  
  40f9ea:	inc    DWORD PTR [rcx]
  40f9ec:	add    BYTE PTR [rax],al
  40f9ee:	add    BYTE PTR [rax],al
  40f9f0:	add    BYTE PTR [rax],al
  40f9f2:	add    BYTE PTR [rdx+rax*1],cl
  40f9f5:	add    BYTE PTR [rax],al
  40f9f7:	add    BYTE PTR [rdi+0x53],dl
  40f9fa:	jns    0x40fa6f
  40f9fc:	je     0x40fa63
  40f9fe:	ins    DWORD PTR es:[rdi],dx
  40f9ff:	cs push rdi
  40fa01:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40fa08:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40fa0a:	jb     0x40fa79
  40fa0c:	jae    0x40fa3a
  40fa0e:	and    BYTE PTR [rsi+0x65],dl
  40fa11:	jb     0x40fa86
  40fa13:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40fa1a:	xor    BYTE PTR cs:[rsi],ch
  40fa1d:	xor    BYTE PTR [rax+riz*1],ch
  40fa20:	rex.XB jne 0x40fa8f
  40fa23:	je     0x40fa9a
  40fa25:	jb     0x40fa8c
  40fa27:	cmp    eax,0x7475656e
  40fa2c:	jb     0x40fa8f
  40fa2e:	ins    BYTE PTR es:[rdi],dx
  40fa2f:	sub    al,0x20
  40fa31:	push   rax
  40fa32:	jne    0x40fa96
  40fa34:	ins    BYTE PTR es:[rdi],dx
  40fa35:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40fa3c:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40fa40:	(bad)  
  40fa41:	(bad)  
  40fa42:	(bad)  
  40fa43:	(bad)  
  40fa44:	xor    eax,0x31363563
  40fa49:	cmp    DWORD PTR [rbx],esi
  40fa4b:	xor    al,0x65
  40fa4d:	xor    BYTE PTR [rax],bh
  40fa4f:	cmp    DWORD PTR [rip+0x1],eax        # 0x40fa56
  40fa55:	sbb    al,0x53
  40fa57:	jns    0x40facc
  40fa59:	je     0x40fac0
  40fa5b:	ins    DWORD PTR es:[rdi],dx
  40fa5c:	cs push rdi
  40fa5e:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40fa65:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40fa67:	jb     0x40fad6
  40fa69:	jae    0x40fa99
  40fa6b:	push   rax
  40fa6c:	(bad)  
  40fa6d:	fs imul ebp,DWORD PTR fs:[rsi+0x67],0x5
  40fa76:	add    al,0x5f
  40fa78:	(bad)  
  40fa79:	ins    BYTE PTR es:[rdi],dx
  40fa7a:	ins    BYTE PTR es:[rdi],dx
  40fa7b:	add    al,0x5f
  40fa7d:	je     0x40faee
  40fa7f:	jo     0x40fa86
  40fa81:	pop    rdi
  40fa82:	ins    BYTE PTR es:[rdi],dx
  40fa83:	gs data16 je 0x40fa8d
  40fa87:	pop    rdi
  40fa88:	jb     0x40faf3
  40fa8a:	addr32 push 0x625f0774
  40fa90:	outs   dx,DWORD PTR ds:[rsi]
  40fa91:	je     0x40fb07
  40fa93:	outs   dx,DWORD PTR ds:[rsi]
  40fa94:	ins    DWORD PTR es:[rdi],dx
  40fa95:	add    BYTE PTR [rax],al
  40fa97:	add    BYTE PTR [rax],al
  40fa99:	add    BYTE PTR [rcx],al
  40fa9b:	or     BYTE PTR [rax],cl
  40fa9d:	or     BYTE PTR [rax],cl
  40fa9f:	add    al,BYTE PTR [rax]
  40faa1:	add    BYTE PTR [rax],al
  40faa3:	add    BYTE PTR [rdx],al
  40faa5:	add    BYTE PTR [rax],al
  40faa7:	add    BYTE PTR [rsi],cl
  40faa9:	add    BYTE PTR [rax],al
  40faab:	add    BYTE PTR [rax],al
  40faad:	add    BYTE PTR [rax],al
  40faaf:	add    BYTE PTR [rdx],al
  40fab1:	add    BYTE PTR [rax],al
  40fab3:	add    BYTE PTR [rbx],cl
  40fab5:	add    BYTE PTR [r9],al
  40fab8:	add    BYTE PTR [rax],al
  40faba:	add    bh,bh
  40fabc:	(bad)  
  40fabd:	(bad)  
  40fabe:	inc    DWORD PTR [rcx]
  40fac0:	add    BYTE PTR [rax],al
  40fac2:	add    BYTE PTR [rax],al
  40fac4:	add    BYTE PTR [rax],al
  40fac6:	add    BYTE PTR [rdx+rax*1],cl
  40fac9:	add    BYTE PTR [rax],al
  40facb:	add    BYTE PTR [rcx+0x53],dl
  40face:	jns    0x40fb43
  40fad0:	je     0x40fb37
  40fad2:	ins    DWORD PTR es:[rdi],dx
  40fad3:	cs rex.R jb 0x40fb38
  40fad7:	ja     0x40fb42
  40fad9:	outs   dx,BYTE PTR ds:[rsi]
  40fada:	addr32 sub al,0x20
  40fadd:	push   rsi
  40fade:	gs jb  0x40fb54
  40fae1:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40fae8:	xor    BYTE PTR cs:[rsi],ch
  40faeb:	xor    BYTE PTR [rax+riz*1],ch
  40faee:	rex.XB jne 0x40fb5d
  40faf1:	je     0x40fb68
  40faf3:	jb     0x40fb5a
  40faf5:	cmp    eax,0x7475656e
  40fafa:	jb     0x40fb5d
  40fafc:	ins    BYTE PTR es:[rdi],dx
  40fafd:	sub    al,0x20
  40faff:	push   rax
  40fb00:	jne    0x40fb64
  40fb02:	ins    BYTE PTR es:[rdi],dx
  40fb03:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40fb0a:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40fb0e:	(bad)  
  40fb0f:	xor    BYTE PTR [rbx],dh
  40fb11:	xor    ax,0x3766
  40fb15:	xor    WORD PTR [rcx],si
  40fb18:	fs xor eax,0x61336130
  40fb1e:	add    eax,0x1
  40fb23:	adc    edx,DWORD PTR [rbx+0x79]
  40fb26:	jae    0x40fb9c
  40fb28:	gs ins DWORD PTR es:[rdi],dx
  40fb2a:	cs rex.R jb 0x40fb8f
  40fb2e:	ja     0x40fb99
  40fb30:	outs   dx,BYTE PTR ds:[rsi]
  40fb31:	addr32 cs push rbx
  40fb34:	imul   edi,DWORD PTR [rdx+0x65],0x2
  40fb3b:	add    eax,0x74646977
  40fb40:	push   0x69656806
  40fb45:	addr32 push 0x8000074
  40fb4b:	or     BYTE PTR [rdx],al
  40fb4d:	add    BYTE PTR [rax],al
  40fb4f:	add    BYTE PTR [rdx],ch
  40fb51:	add    BYTE PTR [rax],al
  40fb53:	add    BYTE PTR [rcx],dl
  40fb55:	add    BYTE PTR [rax],al
  40fb57:	add    BYTE PTR [rbx],cl
  40fb59:	or     BYTE PTR [rbx],al
  40fb5b:	add    BYTE PTR [rax],al
  40fb5d:	add    BYTE PTR [rcx],al
  40fb5f:	add    al,0x78
  40fb61:	cmp    BYTE PTR es:[rsi],dh
  40fb64:	add    BYTE PTR [rax],al
  40fb66:	add    BYTE PTR [rax],al
  40fb68:	mov    ah,0x0
  40fb6a:	add    BYTE PTR [rax],al
  40fb6c:	(bad)  
  40fb6d:	retf   0xbeef
  40fb70:	add    DWORD PTR [rax],eax
  40fb72:	add    BYTE PTR [rax],al
  40fb74:	xchg   ecx,eax
  40fb75:	add    BYTE PTR [rax],al
  40fb77:	add    BYTE PTR [rbx+rdx*2+0x79],ch
  40fb7b:	jae    0x40fbf1
  40fb7d:	gs ins DWORD PTR es:[rdi],dx
  40fb7f:	cs push rdx
  40fb81:	gs jae 0x40fbf3
  40fb84:	jne    0x40fbf8
  40fb86:	movsxd esp,DWORD PTR [rbp+0x73]
  40fb89:	cs push rdx
  40fb8b:	gs jae 0x40fbfd
  40fb8e:	jne    0x40fc02
  40fb90:	movsxd esp,DWORD PTR [rbp+0x52]
  40fb93:	gs (bad) 
  40fb95:	fs gs jb 0x40fbc5
  40fb99:	and    BYTE PTR [rbp+0x73],ch
  40fb9c:	movsxd ebp,DWORD PTR [rdi+0x72]
  40fb9f:	ins    BYTE PTR es:[rdi],dx
  40fba0:	imul   esp,DWORD PTR [rdx+0x2c],0x72655620
  40fba7:	jae    0x40fc12
  40fba9:	outs   dx,DWORD PTR ds:[rsi]
  40fbaa:	outs   dx,BYTE PTR ds:[rsi]
  40fbab:	cmp    eax,0x2e302e32
  40fbb0:	xor    BYTE PTR [rsi],ch
  40fbb2:	xor    BYTE PTR [rax+riz*1],ch
  40fbb5:	rex.XB jne 0x40fc24
  40fbb8:	je     0x40fc2f
  40fbba:	jb     0x40fc21
  40fbbc:	cmp    eax,0x7475656e
  40fbc1:	jb     0x40fc24
  40fbc3:	ins    BYTE PTR es:[rdi],dx
  40fbc4:	sub    al,0x20
  40fbc6:	push   rax
  40fbc7:	jne    0x40fc2b
  40fbc9:	ins    BYTE PTR es:[rdi],dx
  40fbca:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40fbd1:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40fbd5:	(bad)  
  40fbd6:	(bad)  
  40fbd7:	(bad)  
  40fbd8:	(bad)  
  40fbd9:	xor    eax,0x31363563
  40fbde:	cmp    DWORD PTR [rbx],esi
  40fbe0:	xor    al,0x65
  40fbe2:	xor    BYTE PTR [rax],bh
  40fbe4:	cmp    DWORD PTR [rbx],esp
  40fbe6:	push   rbx
  40fbe7:	jns    0x40fc5c
  40fbe9:	je     0x40fc50
  40fbeb:	ins    DWORD PTR es:[rdi],dx
  40fbec:	cs push rdx
  40fbee:	gs jae 0x40fc60
  40fbf1:	jne    0x40fc65
  40fbf3:	movsxd esp,DWORD PTR [rbp+0x73]
  40fbf6:	cs push rdx
  40fbf8:	jne    0x40fc68
  40fbfa:	je     0x40fc65
  40fbfc:	ins    DWORD PTR es:[rdi],dx
  40fbfd:	gs push rdx
  40fbff:	gs jae 0x40fc71
  40fc02:	jne    0x40fc76
  40fc04:	movsxd esp,DWORD PTR [rbp+0x53]
  40fc07:	gs je  0x40fc0c
	...
  40fc12:	add    BYTE PTR [rax],al
  40fc14:	add    BYTE PTR [rax+0x41],dl
  40fc17:	rex.R push rax
  40fc19:	rex.B
  40fc1a:	rex.R push rax
  40fc1c:	mov    ah,0x0
  40fc1e:	add    BYTE PTR [rax],al
  40fc20:	adc    eax,0xce00000f
  40fc25:	retf   0xbeef
  40fc28:	add    DWORD PTR [rax],eax
  40fc2a:	add    BYTE PTR [rax],al
  40fc2c:	xchg   ecx,eax
  40fc2d:	add    BYTE PTR [rax],al
  40fc2f:	add    BYTE PTR [rbx+rdx*2+0x79],ch
  40fc33:	jae    0x40fca9
  40fc35:	gs ins DWORD PTR es:[rdi],dx
  40fc37:	cs push rdx
  40fc39:	gs jae 0x40fcab
  40fc3c:	jne    0x40fcb0
  40fc3e:	movsxd esp,DWORD PTR [rbp+0x73]
  40fc41:	cs push rdx
  40fc43:	gs jae 0x40fcb5
  40fc46:	jne    0x40fcba
  40fc48:	movsxd esp,DWORD PTR [rbp+0x52]
  40fc4b:	gs (bad) 
  40fc4d:	fs gs jb 0x40fc7d
  40fc51:	and    BYTE PTR [rbp+0x73],ch
  40fc54:	movsxd ebp,DWORD PTR [rdi+0x72]
  40fc57:	ins    BYTE PTR es:[rdi],dx
  40fc58:	imul   esp,DWORD PTR [rdx+0x2c],0x72655620
  40fc5f:	jae    0x40fcca
  40fc61:	outs   dx,DWORD PTR ds:[rsi]
  40fc62:	outs   dx,BYTE PTR ds:[rsi]
  40fc63:	cmp    eax,0x2e302e32
  40fc68:	xor    BYTE PTR [rsi],ch
  40fc6a:	xor    BYTE PTR [rax+riz*1],ch
  40fc6d:	rex.XB jne 0x40fcdc
  40fc70:	je     0x40fce7
  40fc72:	jb     0x40fcd9
  40fc74:	cmp    eax,0x7475656e
  40fc79:	jb     0x40fcdc
  40fc7b:	ins    BYTE PTR es:[rdi],dx
  40fc7c:	sub    al,0x20
  40fc7e:	push   rax
  40fc7f:	jne    0x40fce3
  40fc81:	ins    BYTE PTR es:[rdi],dx
  40fc82:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40fc89:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40fc8d:	(bad)  
  40fc8e:	(bad)  
  40fc8f:	(bad)  
  40fc90:	(bad)  
  40fc91:	xor    eax,0x31363563
  40fc96:	cmp    DWORD PTR [rbx],esi
  40fc98:	xor    al,0x65
  40fc9a:	xor    BYTE PTR [rax],bh
  40fc9c:	cmp    DWORD PTR [rbx],esp
  40fc9e:	push   rbx
  40fc9f:	jns    0x40fd14
  40fca1:	je     0x40fd08
  40fca3:	ins    DWORD PTR es:[rdi],dx
  40fca4:	cs push rdx
  40fca6:	gs jae 0x40fd18
  40fca9:	jne    0x40fd1d
  40fcab:	movsxd esp,DWORD PTR [rbp+0x73]
  40fcae:	cs push rdx
  40fcb0:	jne    0x40fd20
  40fcb2:	je     0x40fd1d
  40fcb4:	ins    DWORD PTR es:[rdi],dx
  40fcb5:	gs push rdx
  40fcb7:	gs jae 0x40fd29
  40fcba:	jne    0x40fd2e
  40fcbc:	movsxd esp,DWORD PTR [rbp+0x53]
  40fcbf:	gs je  0x40fcc4
  40fcc2:	add    BYTE PTR [rax],al
  40fcc4:	add    BYTE PTR [rdi],dl
  40fcc6:	add    BYTE PTR [rax],al
  40fcc8:	add    BYTE PTR [rip+0x66000000],al        # 0x6640fcce
  40fcce:	push   rbx
  40fccf:	jns    0x40fd44
  40fcd1:	je     0x40fd38
  40fcd3:	ins    DWORD PTR es:[rdi],dx
  40fcd4:	cs rex.R jb 0x40fd39
  40fcd8:	ja     0x40fd43
  40fcda:	outs   dx,BYTE PTR ds:[rsi]
  40fcdb:	addr32 cs push rbx
  40fcde:	imul   edi,DWORD PTR [rdx+0x65],0x7953202c
  40fce5:	jae    0x40fd5b
  40fce7:	gs ins DWORD PTR es:[rdi],dx
  40fce9:	cs rex.R jb 0x40fd4e
  40fced:	ja     0x40fd58
  40fcef:	outs   dx,BYTE PTR ds:[rsi]
  40fcf0:	addr32 sub al,0x20
  40fcf3:	push   rsi
  40fcf4:	gs jb  0x40fd6a
  40fcf7:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40fcfe:	xor    BYTE PTR cs:[rsi],ch
  40fd01:	xor    BYTE PTR [rax+riz*1],ch
  40fd04:	rex.XB jne 0x40fd73
  40fd07:	je     0x40fd7e
  40fd09:	jb     0x40fd70
  40fd0b:	cmp    eax,0x7475656e
  40fd10:	jb     0x40fd73
  40fd12:	ins    BYTE PTR es:[rdi],dx
  40fd13:	sub    al,0x20
  40fd15:	push   rax
  40fd16:	jne    0x40fd7a
  40fd18:	ins    BYTE PTR es:[rdi],dx
  40fd19:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40fd20:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40fd24:	(bad)  
  40fd25:	xor    BYTE PTR [rbx],dh
  40fd27:	xor    ax,0x3766
  40fd2b:	xor    WORD PTR [rcx],si
  40fd2e:	fs xor eax,0x61336130
  40fd34:	ja     0x40fd89
  40fd36:	jns    0x40fdab
  40fd38:	je     0x40fd9f
  40fd3a:	ins    DWORD PTR es:[rdi],dx
  40fd3b:	cs push rdi
  40fd3d:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40fd44:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40fd46:	jb     0x40fdb5
  40fd48:	jae    0x40fd78
  40fd4a:	rex.R outs dx,DWORD PTR ds:[rsi]
  40fd4c:	movsxd ebp,DWORD PTR [rbx+0x53]
  40fd4f:	je     0x40fdca
  40fd51:	ins    BYTE PTR es:[rdi],dx
  40fd52:	gs sub al,0x20
  40fd55:	push   rbx
  40fd56:	jns    0x40fdcb
  40fd58:	je     0x40fdbf
  40fd5a:	ins    DWORD PTR es:[rdi],dx
  40fd5b:	cs push rdi
  40fd5d:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40fd64:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40fd66:	jb     0x40fdd5
  40fd68:	jae    0x40fd96
  40fd6a:	and    BYTE PTR [rsi+0x65],dl
  40fd6d:	jb     0x40fde2
  40fd6f:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40fd76:	xor    BYTE PTR cs:[rsi],ch
  40fd79:	xor    BYTE PTR [rax+riz*1],ch
  40fd7c:	rex.XB jne 0x40fdeb
  40fd7f:	je     0x40fdf6
  40fd81:	jb     0x40fde8
  40fd83:	cmp    eax,0x7475656e
  40fd88:	jb     0x40fdeb
  40fd8a:	ins    BYTE PTR es:[rdi],dx
  40fd8b:	sub    al,0x20
  40fd8d:	push   rax
  40fd8e:	jne    0x40fdf2
  40fd90:	ins    BYTE PTR es:[rdi],dx
  40fd91:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40fd98:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40fd9c:	(bad)  
  40fd9d:	(bad)  
  40fd9e:	(bad)  
  40fd9f:	(bad)  
  40fda0:	xor    eax,0x31363563
  40fda5:	cmp    DWORD PTR [rbx],esi
  40fda7:	xor    al,0x65
  40fda9:	xor    BYTE PTR [rax],bh
  40fdab:	cmp    DWORD PTR [rbp+0x53],esi
  40fdae:	jns    0x40fe23
  40fdb0:	je     0x40fe17
  40fdb2:	ins    DWORD PTR es:[rdi],dx
  40fdb3:	cs push rdi
  40fdb5:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40fdbc:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40fdbe:	jb     0x40fe2d
  40fdc0:	jae    0x40fdf0
  40fdc2:	rex.WB ins DWORD PTR es:[rdi],dx
  40fdc4:	rex.WRB outs dx,DWORD PTR gs:[rsi]
  40fdc7:	fs gs sub al,0x20
  40fdcb:	push   rbx
  40fdcc:	jns    0x40fe41
  40fdce:	je     0x40fe35
  40fdd0:	ins    DWORD PTR es:[rdi],dx
  40fdd1:	cs push rdi
  40fdd3:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40fdda:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40fddc:	jb     0x40fe4b
  40fdde:	jae    0x40fe0c
  40fde0:	and    BYTE PTR [rsi+0x65],dl
  40fde3:	jb     0x40fe58
  40fde5:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40fdec:	xor    BYTE PTR cs:[rsi],ch
  40fdef:	xor    BYTE PTR [rax+riz*1],ch
  40fdf2:	rex.XB jne 0x40fe61
  40fdf5:	je     0x40fe6c
  40fdf7:	jb     0x40fe5e
  40fdf9:	cmp    eax,0x7475656e
  40fdfe:	jb     0x40fe61
  40fe00:	ins    BYTE PTR es:[rdi],dx
  40fe01:	sub    al,0x20
  40fe03:	push   rax
  40fe04:	jne    0x40fe68
  40fe06:	ins    BYTE PTR es:[rdi],dx
  40fe07:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40fe0e:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40fe12:	(bad)  
  40fe13:	(bad)  
  40fe14:	(bad)  
  40fe15:	(bad)  
  40fe16:	xor    eax,0x31363563
  40fe1b:	cmp    DWORD PTR [rbx],esi
  40fe1d:	xor    al,0x65
  40fe1f:	xor    BYTE PTR [rax],bh
  40fe21:	cmp    DWORD PTR [rdi+0x53],esp
  40fe24:	jns    0x40fe99
  40fe26:	je     0x40fe8d
  40fe28:	ins    DWORD PTR es:[rdi],dx
  40fe29:	cs rex.R jb 0x40fe8e
  40fe2d:	ja     0x40fe98
  40fe2f:	outs   dx,BYTE PTR ds:[rsi]
  40fe30:	addr32 cs push rax
  40fe33:	outs   dx,DWORD PTR ds:[rsi]
  40fe34:	imul   ebp,DWORD PTR [rsi+0x74],0x7953202c
  40fe3b:	jae    0x40feb1
  40fe3d:	gs ins DWORD PTR es:[rdi],dx
  40fe3f:	cs rex.R jb 0x40fea4
  40fe43:	ja     0x40feae
  40fe45:	outs   dx,BYTE PTR ds:[rsi]
  40fe46:	addr32 sub al,0x20
  40fe49:	push   rsi
  40fe4a:	gs jb  0x40fec0
  40fe4d:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40fe54:	xor    BYTE PTR cs:[rsi],ch
  40fe57:	xor    BYTE PTR [rax+riz*1],ch
  40fe5a:	rex.XB jne 0x40fec9
  40fe5d:	je     0x40fed4
  40fe5f:	jb     0x40fec6
  40fe61:	cmp    eax,0x7475656e
  40fe66:	jb     0x40fec9
  40fe68:	ins    BYTE PTR es:[rdi],dx
  40fe69:	sub    al,0x20
  40fe6b:	push   rax
  40fe6c:	jne    0x40fed0
  40fe6e:	ins    BYTE PTR es:[rdi],dx
  40fe6f:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40fe76:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40fe7a:	(bad)  
  40fe7b:	xor    BYTE PTR [rbx],dh
  40fe7d:	xor    ax,0x3766
  40fe81:	xor    WORD PTR [rcx],si
  40fe84:	fs xor eax,0x61336130
  40fe8a:	jne    0x40fedf
  40fe8c:	jns    0x40ff01
  40fe8e:	je     0x40fef5
  40fe90:	ins    DWORD PTR es:[rdi],dx
  40fe91:	cs push rdi
  40fe93:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40fe9a:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40fe9c:	jb     0x40ff0b
  40fe9e:	jae    0x40fece
  40fea0:	push   rax
  40fea1:	(bad)  
  40fea2:	fs imul ebp,DWORD PTR fs:[rsi+0x67],0x7953202c
  40feab:	jae    0x40ff21
  40fead:	gs ins DWORD PTR es:[rdi],dx
  40feaf:	cs push rdi
  40feb1:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40feb8:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40feba:	jb     0x40ff29
  40febc:	jae    0x40feea
  40febe:	and    BYTE PTR [rsi+0x65],dl
  40fec1:	jb     0x40ff36
  40fec3:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40feca:	xor    BYTE PTR cs:[rsi],ch
  40fecd:	xor    BYTE PTR [rax+riz*1],ch
  40fed0:	rex.XB jne 0x40ff3f
  40fed3:	je     0x40ff4a
  40fed5:	jb     0x40ff3c
  40fed7:	cmp    eax,0x7475656e
  40fedc:	jb     0x40ff3f
  40fede:	ins    BYTE PTR es:[rdi],dx
  40fedf:	sub    al,0x20
  40fee1:	push   rax
  40fee2:	jne    0x40ff46
  40fee4:	ins    BYTE PTR es:[rdi],dx
  40fee5:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40feec:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40fef0:	(bad)  
  40fef1:	(bad)  
  40fef2:	(bad)  
  40fef3:	(bad)  
  40fef4:	xor    eax,0x31363563
  40fef9:	cmp    DWORD PTR [rbx],esi
  40fefb:	xor    al,0x65
  40fefd:	xor    BYTE PTR [rax],bh
  40feff:	cmp    DWORD PTR [rax+0x41],edx
  40ff02:	rex.R push rax
  40ff04:	mov    ah,0x5c
  40ff06:	sti    
  40ff07:	mov    BYTE PTR [rcx],ch
  40ff09:	sub    ebp,DWORD PTR [rdx-0x5890936a]
  40ff0f:	(bad)  
  40ff10:	mov    esp,0xc3a4f39d
  40ff15:	mov    bl,0x4a
  40ff17:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40ff18:	(bad)
  40ff1b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40ff1c:	(bad)
  40ff21:	(bad)  
  40ff22:	jrcxz  0x40ff26
  40ff24:	adc    BYTE PTR [rdx+0x718713ad],al
  40ff2a:	outs   dx,BYTE PTR ds:[rsi]
  40ff2b:	sbb    bh,BYTE PTR [rax]
  40ff2d:	jge    0x40ff9e
  40ff2f:	sbb    bh,BYTE PTR [rbp+0x19]
  40ff32:	and    dh,BYTE PTR [rdx]
  40ff34:	test   al,0xc2
  40ff36:	(bad)  
  40ff37:	cmp    eax,0x3e23feb5
  40ff3c:	scas   al,BYTE PTR es:[rdi]
  40ff3d:	rex.XB icebp 
  40ff3f:	rex.X xchg ecx,eax
  40ff41:	(bad)  
  40ff42:	cli    
  40ff43:	rex.X ret 0x7292
  40ff47:	rex.WB
  40ff48:	rex.R mov cl,0x78
  40ff4b:	movabs r12,0x316b71a03c497b3d
  40ff55:	loopne 0x40ff5f
  40ff57:	je     0x40fedf
  40ff59:	lea    edx,[rdx-0x6825868b]
  40ff5f:	jne    0x40ff09
  40ff61:	add    BYTE PTR [rax],al
  40ff63:	add    dl,dh
  40ff65:	add    DWORD PTR [rax],eax
  40ff67:	add    BYTE PTR [rax],al
  40ff69:	add    BYTE PTR [rax],al
  40ff6b:	add    BYTE PTR [rdx+rax*1],dh
  40ff6e:	add    BYTE PTR [rax],al
  40ff70:	imul   eax,DWORD PTR [rcx],0x0
  40ff73:	add    bl,bl
  40ff75:	add    DWORD PTR [rax],eax
  40ff77:	add    BYTE PTR [rdx-0x60ffffff],al
  40ff7d:	add    DWORD PTR [rax],eax
  40ff7f:	add    BYTE PTR [rdi+0x2],bl
  40ff82:	add    BYTE PTR [rax],al
  40ff84:	push   rbx
  40ff85:	add    BYTE PTR [rax],al
  40ff87:	add    BYTE PTR [rbp-0x12000000],cl
  40ff8d:	add    BYTE PTR [rax],al
  40ff8f:	add    BYTE PTR [rbx+0x40000002],ch
  40ff95:	add    DWORD PTR [rax],eax
  40ff97:	add    BYTE PTR [rcx],bl
  40ff99:	add    BYTE PTR [rax],al
  40ff9b:	add    BYTE PTR [rsi],dh
  40ff9d:	add    BYTE PTR [rax],al
  40ff9f:	add    BYTE PTR [rcx],dl
  40ffa1:	add    al,BYTE PTR [rax]
  40ffa3:	add    BYTE PTR [rax-0x29fffffe],cl
  40ffa9:	add    al,BYTE PTR [rax]
  40ffab:	add    BYTE PTR [rsi+0x0],ch
  40ffae:	add    BYTE PTR [rax],al
  40ffb0:	mov    esi,0xc7000001
  40ffb5:	add    BYTE PTR [rax],al
  40ffb7:	add    BYTE PTR [rcx],bl
  40ffb9:	add    DWORD PTR [rax],eax
  40ffbb:	add    BYTE PTR [rbp+0x14000006],dl
  40ffc1:	and    al,0x0
  40ffc3:	je     0x40ffc5
  40ffc5:	push   0x73006900
  40ffca:	add    BYTE PTR [rsi],ch
  40ffcc:	add    BYTE PTR [rbx+0x0],dl
  40ffcf:	imul   eax,DWORD PTR [rax],0x65007a
  40ffd5:	add    BYTE PTR [rax],al
  40ffd7:	add    BYTE PTR [rax],al
  40ffd9:	sbb    BYTE PTR [rsi],bh
  40ffdb:	add    BYTE PTR [rsi],bh
  40ffdd:	add    BYTE PTR [rax+rax*1],ah
  40ffe0:	je     0x40ffe2
  40ffe2:	push   0x73006900
  40ffe7:	add    BYTE PTR [rsi],ch
  40ffe9:	add    BYTE PTR [rsi+0x0],cl
  40ffec:	(bad)  
  40ffed:	add    BYTE PTR [rbp+0x0],ch
  40fff0:	add    BYTE PTR gs:[rax+rax*1+0x3e180000],ah
  40fff8:	add    BYTE PTR [rsi],bh
  40fffa:	add    BYTE PTR [rax+rax*1],ah
  40fffd:	je     0x40ffff
  40ffff:	push   0x73006900
  410004:	add    BYTE PTR [rsi],ch
  410006:	add    BYTE PTR [rax+rax*1+0x79],dl
  41000a:	add    BYTE PTR [rax+0x0],dh
  41000d:	add    BYTE PTR gs:[rdx+0x16000000],dh
  410014:	add    BYTE PTR ds:[rsi],bh
  410017:	add    BYTE PTR [rax+rax*1+0x6f],ch
  41001b:	add    BYTE PTR [rdi+0x0],ah
  41001e:	outs   dx,DWORD PTR ds:[rsi]
  41001f:	add    BYTE PTR [rsi],ch
  410021:	add    BYTE PTR [rsi+0x0],cl
  410024:	(bad)  
  410025:	add    BYTE PTR [rbp+0x0],ch
  410028:	add    BYTE PTR gs:[rip+0x1a000001],ch        # 0x1a410030
  41002f:	add    BYTE PTR ds:[rsi],bh
  410032:	add    BYTE PTR [rax+rax*1+0x6f],ch
  410036:	add    BYTE PTR [rdi+0x0],ah
  410039:	outs   dx,DWORD PTR ds:[rsi]
  41003a:	add    BYTE PTR [rsi],ch
  41003c:	add    BYTE PTR [rax+0x0],dl
  41003f:	(bad)  
  410040:	add    BYTE PTR [rdx+0x0],dh
  410043:	add    BYTE PTR gs:[rsi+0x0],ch
  410047:	je     0x410049
  410049:	xor    eax,DWORD PTR [rcx]
  41004b:	add    BYTE PTR [rax],al
  41004d:	(bad)  
  41004e:	add    BYTE PTR ds:[rsi],bh
  410051:	add    BYTE PTR [rax+rax*1+0x6f],ch
  410055:	add    BYTE PTR [rdi+0x0],ah
  410058:	outs   dx,DWORD PTR ds:[rsi]
  410059:	add    BYTE PTR [rsi],ch
  41005b:	add    BYTE PTR [rax+rax*1+0x79],dl
  41005f:	add    BYTE PTR [rax+0x0],dh
  410062:	add    BYTE PTR gs:[rdx],bh
  410065:	add    DWORD PTR [rax],eax
  410067:	add    BYTE PTR [rdx],bl
  410069:	add    BYTE PTR ds:[rsi],bh
  41006c:	add    BYTE PTR [rax+rax*1+0x6f],ch
  410070:	add    BYTE PTR [rdi+0x0],ah
  410073:	outs   dx,DWORD PTR ds:[rsi]
  410074:	add    BYTE PTR [rsi],ch
  410076:	add    BYTE PTR [rdx+0x0],bl
  410079:	rex.WRXB add BYTE PTR [r10+0x0],r14b
  41007d:	add    BYTE PTR fs:[rbp+0x0],ah
  410081:	jb     0x410083
  410083:	mov    ah,0x1
  410085:	add    BYTE PTR [rax],al
  410087:	and    bh,BYTE PTR [rsi]
  410089:	add    BYTE PTR [rsi],bh
  41008b:	add    BYTE PTR [rsi+0x0],ch
  41008e:	(bad)  
  41008f:	add    BYTE PTR [rsi+0x0],dh
  410092:	imul   eax,DWORD PTR [rax],0x610067
  410098:	je     0x41009a
  41009a:	imul   eax,DWORD PTR [rax],0x6e006f
  4100a0:	add    BYTE PTR cs:[rsi+0x0],cl
  4100a4:	(bad)  
  4100a5:	add    BYTE PTR [rbp+0x0],ch
  4100a8:	add    BYTE PTR gs:[rdi+0x26000001],dh
  4100af:	add    BYTE PTR ds:[rsi],bh
  4100b2:	add    BYTE PTR [rsi+0x0],ch
  4100b5:	(bad)  
  4100b6:	add    BYTE PTR [rsi+0x0],dh
  4100b9:	imul   eax,DWORD PTR [rax],0x610067
  4100bf:	je     0x4100c1
  4100c1:	imul   eax,DWORD PTR [rax],0x6e006f
  4100c7:	add    BYTE PTR cs:[rax+0x0],dl
  4100cb:	(bad)  
  4100cc:	add    BYTE PTR [rdx+0x0],dh
  4100cf:	add    BYTE PTR gs:[rsi+0x0],ch
  4100d3:	je     0x4100d5
  4100d5:	ret    
  4100d6:	add    DWORD PTR [rax],eax
  4100d8:	add    BYTE PTR [rdx],ah
  4100da:	add    BYTE PTR ds:[rsi],bh
  4100dd:	add    BYTE PTR [rsi+0x0],ch
  4100e0:	(bad)  
  4100e1:	add    BYTE PTR [rsi+0x0],dh
  4100e4:	imul   eax,DWORD PTR [rax],0x610067
  4100ea:	je     0x4100ec
  4100ec:	imul   eax,DWORD PTR [rax],0x6e006f
  4100f2:	add    BYTE PTR cs:[rax+rax*1+0x79],dl
  4100f7:	add    BYTE PTR [rax+0x0],dh
  4100fa:	gs add dl,cl
  4100fd:	add    DWORD PTR [rax],eax
  4100ff:	add    BYTE PTR [rsi],ah
  410101:	add    BYTE PTR ds:[rsi],bh
  410104:	add    BYTE PTR [rsi+0x0],ch
  410107:	(bad)  
  410108:	add    BYTE PTR [rsi+0x0],dh
  41010b:	imul   eax,DWORD PTR [rax],0x610067
  410111:	je     0x410113
  410113:	imul   eax,DWORD PTR [rax],0x6e006f
  410119:	add    BYTE PTR cs:[rdx+0x0],bl
  41011d:	rex.WRXB add BYTE PTR [r10+0x0],r14b
  410121:	add    BYTE PTR fs:[rbp+0x0],ah
  410125:	jb     0x410127
  410127:	rex.XB add al,BYTE PTR [r8]
  41012a:	add    BYTE PTR [rdx],dl
  41012c:	ins    BYTE PTR es:[rdi],dx
  41012d:	add    BYTE PTR [rdi+0x0],ch
  410130:	add    BYTE PTR [edi+0x0],ch
  410134:	add    BYTE PTR cs:[rax+rax*1+0x6f],al
  410139:	add    BYTE PTR [rbx+0x0],ah
  41013c:	imul   eax,DWORD PTR [rax],0x46
  41013f:	add    al,BYTE PTR [rax]
  410141:	add    BYTE PTR [rax],bl
  410143:	ins    BYTE PTR es:[rdi],dx
  410144:	add    BYTE PTR [rdi+0x0],ch
  410147:	add    BYTE PTR [edi+0x0],ch
  41014b:	add    BYTE PTR cs:[rcx+0x0],cl
  41014f:	ins    DWORD PTR es:[rdi],dx
  410150:	add    BYTE PTR [rbp+0x0],ah
  410153:	rex.WRB add BYTE PTR [r15+0x0],r13b
  410157:	add    BYTE PTR fs:[rbp+0x0],ah
  41015b:	lock add al,BYTE PTR [rax]
  41015e:	add    BYTE PTR [rdx],bl
  410160:	ins    BYTE PTR es:[rdi],dx
  410161:	add    BYTE PTR [rdi+0x0],ch
  410164:	add    BYTE PTR [edi+0x0],ch
  410168:	add    BYTE PTR cs:[rax+rax*1+0x6f],cl
  41016d:	add    BYTE PTR [rbx+0x0],ah
  410170:	(bad)  
  410171:	add    BYTE PTR [rax+rax*1+0x69],dh
  410175:	add    BYTE PTR [rdi+0x0],ch
  410178:	outs   dx,BYTE PTR ds:[rsi]
  410179:	add    BYTE PTR [rax+0x18000003],bl
  41017f:	ins    BYTE PTR es:[rdi],dx
  410180:	add    BYTE PTR [rdi+0x0],ch
  410183:	add    BYTE PTR [edi+0x0],ch
  410187:	add    BYTE PTR cs:[rax+0x0],dl
  41018b:	(bad)  
  41018c:	add    BYTE PTR [rax+rax*1+0x64],ah
  410190:	add    BYTE PTR [rcx+0x0],ch
  410193:	outs   dx,BYTE PTR ds:[rsi]
  410194:	add    BYTE PTR [rdi+0x0],ah
  410197:	xor    al,0x4
  410199:	add    BYTE PTR [rax],al
  41019b:	adc    ch,BYTE PTR [rax+rax*1+0x6f]
  41019f:	add    BYTE PTR [rdi+0x0],ah
  4101a2:	outs   dx,DWORD PTR ds:[rsi]
  4101a3:	add    BYTE PTR [rsi],ch
  4101a5:	add    BYTE PTR [rbx+0x0],dl
  4101a8:	imul   eax,DWORD PTR [rax],0x65007a
  4101ae:	or     BYTE PTR [rip+0x6c1a0000],al        # 0x6c5b01b4
  4101b4:	add    BYTE PTR [rdi+0x0],ch
  4101b7:	add    BYTE PTR [edi+0x0],ch
  4101bb:	add    BYTE PTR cs:[rax+rax*1+0x61],dl
  4101c0:	add    BYTE PTR [rdx+0x0],ah
  4101c3:	rex.WB add BYTE PTR [r14+0x0],bpl
  4101c7:	add    BYTE PTR fs:[rbp+0x0],ah
  4101cb:	js     0x4101cd
  4101cd:	lods   al,BYTE PTR ds:[rsi]
  4101ce:	add    eax,0x6e1e0000
  4101d3:	add    BYTE PTR [rcx+0x0],ah
  4101d6:	jbe    0x4101d8
  4101d8:	imul   eax,DWORD PTR [rax],0x610067
  4101de:	je     0x4101e0
  4101e0:	imul   eax,DWORD PTR [rax],0x6e006f
  4101e6:	add    BYTE PTR cs:[rax+rax*1+0x6f],al
  4101eb:	add    BYTE PTR [rbx+0x0],ah
  4101ee:	imul   eax,DWORD PTR [rax],0xffffffb1
  4101f1:	add    eax,0x6e260000
  4101f6:	add    BYTE PTR [rcx+0x0],ah
  4101f9:	jbe    0x4101fb
  4101fb:	imul   eax,DWORD PTR [rax],0x610067
  410201:	je     0x410203
  410203:	imul   eax,DWORD PTR [rax],0x6e006f
  410209:	add    BYTE PTR cs:[rax+rax*1+0x6f],cl
  41020e:	add    BYTE PTR [rbx+0x0],ah
  410211:	(bad)  
  410212:	add    BYTE PTR [rax+rax*1+0x69],dh
  410216:	add    BYTE PTR [rdi+0x0],ch
  410219:	outs   dx,BYTE PTR ds:[rsi]
  41021a:	add    BYTE PTR [rbx+0x6],bl
  41021d:	add    BYTE PTR [rax],al
  41021f:	and    al,0x6e
  410221:	add    BYTE PTR [rcx+0x0],ah
  410224:	jbe    0x410226
  410226:	imul   eax,DWORD PTR [rax],0x610067
  41022c:	je     0x41022e
  41022e:	imul   eax,DWORD PTR [rax],0x6e006f
  410234:	add    BYTE PTR cs:[rax+0x0],dl
  410238:	(bad)  
  410239:	add    BYTE PTR [rax+rax*1+0x64],ah
  41023d:	add    BYTE PTR [rcx+0x0],ch
  410240:	outs   dx,BYTE PTR ds:[rsi]
  410241:	add    BYTE PTR [rdi+0x0],ah
  410244:	test   DWORD PTR [rsi],0x6e1e0000
  41024a:	add    BYTE PTR [rcx+0x0],ah
  41024d:	jbe    0x41024f
  41024f:	imul   eax,DWORD PTR [rax],0x610067
  410255:	je     0x410257
  410257:	imul   eax,DWORD PTR [rax],0x6e006f
  41025d:	add    BYTE PTR cs:[rbx+0x0],dl
  410261:	imul   eax,DWORD PTR [rax],0x65007a
  410267:	retf   
  410268:	(bad)  
  410269:	add    BYTE PTR [rax],al
  41026b:	outs   dx,BYTE PTR es:[rsi]
  41026d:	add    BYTE PTR [rcx+0x0],ah
  410270:	jbe    0x410272
  410272:	imul   eax,DWORD PTR [rax],0x610067
  410278:	je     0x41027a
  41027a:	imul   eax,DWORD PTR [rax],0x6e006f
  410280:	add    BYTE PTR cs:[rax+rax*1+0x61],dl
  410285:	add    BYTE PTR [rdx+0x0],ah
  410288:	rex.WB add BYTE PTR [r14+0x0],bpl
  41028c:	add    BYTE PTR fs:[rbp+0x0],ah
  410290:	js     0x410292
  410292:	outs   dx,DWORD PTR ds:[rsi]
  410293:	or     BYTE PTR [rax],al
  410295:	add    BYTE PTR [rsi],bl
  410297:	outs   dx,BYTE PTR ds:[rsi]
  410298:	add    BYTE PTR [rcx+0x0],ah
  41029b:	jbe    0x41029d
  41029d:	imul   eax,DWORD PTR [rax],0x610067
  4102a3:	je     0x4102a5
  4102a5:	imul   eax,DWORD PTR [rax],0x6e006f
  4102ab:	add    BYTE PTR cs:[rax+rax*1+0x65],dl
  4102b0:	add    BYTE PTR [rax+0x0],bh
  4102b3:	je     0x4102b5
  4102b5:	je     0x4102bf
  4102b7:	add    BYTE PTR [rax],al
  4102b9:	add    BYTE PTR [rcx],al
  4102bc:	add    BYTE PTR [rax],al
  4102be:	add    bh,bh
  4102c0:	(bad)  
  4102c1:	(bad)  
  4102c2:	inc    DWORD PTR [rcx]
  4102c4:	add    BYTE PTR [rax],al
  4102c6:	add    BYTE PTR [rax],al
  4102c8:	add    BYTE PTR [rax],al
  4102ca:	add    BYTE PTR [rdx+rax*1],cl
  4102cd:	add    BYTE PTR [rax],al
  4102cf:	add    BYTE PTR [rcx+0x53],dl
  4102d2:	jns    0x410347
  4102d4:	je     0x41033b
  4102d6:	ins    DWORD PTR es:[rdi],dx
  4102d7:	cs rex.R jb 0x41033c
  4102db:	ja     0x410346
  4102dd:	outs   dx,BYTE PTR ds:[rsi]
  4102de:	addr32 sub al,0x20
  4102e1:	push   rsi
  4102e2:	gs jb  0x410358
  4102e5:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  4102ec:	xor    BYTE PTR cs:[rsi],ch
  4102ef:	xor    BYTE PTR [rax+riz*1],ch
  4102f2:	rex.XB jne 0x410361
  4102f5:	je     0x41036c
  4102f7:	jb     0x41035e
  4102f9:	cmp    eax,0x7475656e
  4102fe:	jb     0x410361
  410300:	ins    BYTE PTR es:[rdi],dx
  410301:	sub    al,0x20
  410303:	push   rax
  410304:	jne    0x410368
  410306:	ins    BYTE PTR es:[rdi],dx
  410307:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  41030e:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  410312:	(bad)  
  410313:	xor    BYTE PTR [rbx],dh
  410315:	xor    ax,0x3766
  410319:	xor    WORD PTR [rcx],si
  41031c:	fs xor eax,0x61336130
  410322:	add    eax,0x1
  410327:	adc    edx,DWORD PTR [rbx+0x79]
  41032a:	jae    0x4103a0
  41032c:	gs ins DWORD PTR es:[rdi],dx
  41032e:	cs rex.R jb 0x410393
  410332:	ja     0x41039d
  410334:	outs   dx,BYTE PTR ds:[rsi]
  410335:	addr32 cs push rbx
  410338:	imul   edi,DWORD PTR [rdx+0x65],0x2
  41033f:	add    eax,0x74646977
  410344:	push   0x69656806
  410349:	addr32 push 0x8000074
  41034f:	or     BYTE PTR [rdx],al
  410351:	add    BYTE PTR [rax],al
  410353:	add    BYTE PTR [rdx+0x57000000],bl
  410359:	add    DWORD PTR [rax],eax
  41035b:	add    BYTE PTR [rbx],cl
  41035d:	add    DWORD PTR [rax+rdx*2],ecx
  410360:	(bad)  
  410361:	addr32 gs push rbx
  410364:	ja     0x4103cf
  410366:	je     0x4103cb
  410368:	push   0x79017265
  41036d:	push   rbx
  41036e:	jns    0x4103e3
  410370:	je     0x4103d7
  410372:	ins    DWORD PTR es:[rdi],dx
  410373:	cs push rdi
  410375:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  41037c:	rex.RX outs dx,DWORD PTR ds:[rsi]
  41037e:	jb     0x4103ed
  410380:	jae    0x4103b0
  410382:	push   rbp
  410383:	jae    0x4103ea
  410385:	jb     0x4103ca
  410387:	outs   dx,DWORD PTR ds:[rsi]
  410388:	outs   dx,BYTE PTR ds:[rsi]
  410389:	je     0x4103fd
  41038b:	outs   dx,DWORD PTR ds:[rsi]
  41038c:	ins    BYTE PTR es:[rdi],dx
  41038d:	sub    al,0x20
  41038f:	push   rbx
  410390:	jns    0x410405
  410392:	je     0x4103f9
  410394:	ins    DWORD PTR es:[rdi],dx
  410395:	cs push rdi
  410397:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  41039e:	rex.RX outs dx,DWORD PTR ds:[rsi]
  4103a0:	jb     0x41040f
  4103a2:	jae    0x4103d0
  4103a4:	and    BYTE PTR [rsi+0x65],dl
  4103a7:	jb     0x41041c
  4103a9:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  4103b0:	xor    BYTE PTR cs:[rsi],ch
  4103b3:	xor    BYTE PTR [rax+riz*1],ch
  4103b6:	rex.XB jne 0x410425
  4103b9:	je     0x410430
  4103bb:	jb     0x410422
  4103bd:	cmp    eax,0x7475656e
  4103c2:	jb     0x410425
  4103c4:	ins    BYTE PTR es:[rdi],dx
  4103c5:	sub    al,0x20
  4103c7:	push   rax
  4103c8:	jne    0x41042c
  4103ca:	ins    BYTE PTR es:[rdi],dx
  4103cb:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  4103d2:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  4103d6:	(bad)  
  4103d7:	(bad)  
  4103d8:	(bad)  
  4103d9:	(bad)  
  4103da:	xor    eax,0x31363563
  4103df:	cmp    DWORD PTR [rbx],esi
  4103e1:	xor    al,0x65
  4103e3:	xor    BYTE PTR [rax],bh
  4103e5:	cmp    DWORD PTR [rcx],eax
  4103e7:	add    al,0x6c
  4103e9:	outs   dx,DWORD PTR ds:[rsi]
  4103ea:	outs   dx,DWORD PTR ds:[esi]
  4103ec:	add    DWORD PTR [rip+0x69687424],eax        # 0x69a97816
  4103f2:	jae    0x4103f5
  4103f4:	js     0x410449
  4103f6:	jns    0x41046b
  4103f8:	je     0x41045f
  4103fa:	ins    DWORD PTR es:[rdi],dx
  4103fb:	cs push rdi
  4103fd:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  410404:	rex.RX outs dx,DWORD PTR ds:[rsi]
  410406:	jb     0x410475
  410408:	jae    0x410438
  41040a:	push   rax
  41040b:	imul   esp,DWORD PTR [rbx+0x74],0x42657275
  410412:	outs   dx,DWORD PTR ds:[rsi]
  410413:	js     0x410441
  410415:	and    BYTE PTR [rbx+0x79],dl
  410418:	jae    0x41048e
  41041a:	gs ins DWORD PTR es:[rdi],dx
  41041c:	cs push rdi
  41041e:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  410425:	rex.RX outs dx,DWORD PTR ds:[rsi]
  410427:	jb     0x410496
  410429:	jae    0x410457
  41042b:	and    BYTE PTR [rsi+0x65],dl
  41042e:	jb     0x4104a3
  410430:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  410437:	xor    BYTE PTR cs:[rsi],ch
  41043a:	xor    BYTE PTR [rax+riz*1],ch
  41043d:	rex.XB jne 0x4104ac
  410440:	je     0x4104b7
  410442:	jb     0x4104a9
  410444:	cmp    eax,0x7475656e
  410449:	jb     0x4104ac
  41044b:	ins    BYTE PTR es:[rdi],dx
  41044c:	sub    al,0x20
  41044e:	push   rax
  41044f:	jne    0x4104b3
  410451:	ins    BYTE PTR es:[rdi],dx
  410452:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  410459:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  41045d:	(bad)  
  41045e:	(bad)  
  41045f:	(bad)  
  410460:	(bad)  
  410461:	xor    eax,0x31363563
  410466:	cmp    DWORD PTR [rbx],esi
  410468:	xor    al,0x65
  41046a:	xor    BYTE PTR [rax],bh
  41046c:	cmp    DWORD PTR [rcx],eax
  41046e:	add    DWORD PTR [rcx],esi
  410470:	add    DWORD PTR [rdx],ecx
  410472:	outs   dx,BYTE PTR ds:[rsi]
  410473:	(bad)  
  410474:	jbe    0x4104df
  410476:	addr32 (bad) 
  410478:	je     0x4104e3
  41047a:	outs   dx,DWORD PTR ds:[rsi]
  41047b:	outs   dx,BYTE PTR ds:[rsi]
  41047c:	add    DWORD PTR [rip+0x69687424],eax        # 0x69a978a6
  410482:	jae    0x410485
  410484:	ja     0x4104d9
  410486:	jns    0x4104fb
  410488:	je     0x4104ef
  41048a:	ins    DWORD PTR es:[rdi],dx
  41048b:	cs push rdi
  41048d:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  410494:	rex.RX outs dx,DWORD PTR ds:[rsi]
  410496:	jb     0x410505
  410498:	jae    0x4104c8
  41049a:	push   rsp
  41049b:	outs   dx,DWORD PTR ds:[rsi]
  41049c:	outs   dx,DWORD PTR ds:[rsi]
  41049d:	ins    BYTE PTR es:[rdi],dx
  41049e:	push   rbx
  41049f:	je     0x410513
  4104a1:	imul   esi,DWORD PTR [rax+0x2c],0x73795320
  4104a8:	je     0x41050f
  4104aa:	ins    DWORD PTR es:[rdi],dx
  4104ab:	cs push rdi
  4104ad:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  4104b4:	rex.RX outs dx,DWORD PTR ds:[rsi]
  4104b6:	jb     0x410525
  4104b8:	jae    0x4104e6
  4104ba:	and    BYTE PTR [rsi+0x65],dl
  4104bd:	jb     0x410532
  4104bf:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  4104c6:	xor    BYTE PTR cs:[rsi],ch
  4104c9:	xor    BYTE PTR [rax+riz*1],ch
  4104cc:	rex.XB jne 0x41053b
  4104cf:	je     0x410546
  4104d1:	jb     0x410538
  4104d3:	cmp    eax,0x7475656e
  4104d8:	jb     0x41053b
  4104da:	ins    BYTE PTR es:[rdi],dx
  4104db:	sub    al,0x20
  4104dd:	push   rax
  4104de:	jne    0x410542
  4104e0:	ins    BYTE PTR es:[rdi],dx
  4104e1:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  4104e8:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  4104ec:	(bad)  
  4104ed:	(bad)  
  4104ee:	(bad)  
  4104ef:	(bad)  
  4104f0:	xor    eax,0x31363563
  4104f5:	cmp    DWORD PTR [rbx],esi
  4104f7:	xor    al,0x65
  4104f9:	xor    BYTE PTR [rax],bh
  4104fb:	cmp    DWORD PTR [rcx],eax
  4104fd:	add    DWORD PTR [rax],esi
  4104ff:	add    BYTE PTR [r9],al
  410502:	add    BYTE PTR [rax],al
  410504:	add    bh,bh
  410506:	(bad)  
  410507:	(bad)  
  410508:	inc    DWORD PTR [rcx]
  41050a:	add    BYTE PTR [rax],al
  41050c:	add    BYTE PTR [rax],al
  41050e:	add    BYTE PTR [rax],al
  410510:	add    BYTE PTR [rdx+rax*1],cl
  410513:	add    BYTE PTR [rax],al
  410515:	add    BYTE PTR [rdi+0x53],dl
  410518:	jns    0x41058d
  41051a:	je     0x410581
  41051c:	ins    DWORD PTR es:[rdi],dx
  41051d:	cs push rdi
  41051f:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  410526:	rex.RX outs dx,DWORD PTR ds:[rsi]
  410528:	jb     0x410597
  41052a:	jae    0x410558
  41052c:	and    BYTE PTR [rsi+0x65],dl
  41052f:	jb     0x4105a4
  410531:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  410538:	xor    BYTE PTR cs:[rsi],ch
  41053b:	xor    BYTE PTR [rax+riz*1],ch
  41053e:	rex.XB jne 0x4105ad
  410541:	je     0x4105b8
  410543:	jb     0x4105aa
  410545:	cmp    eax,0x7475656e
  41054a:	jb     0x4105ad
  41054c:	ins    BYTE PTR es:[rdi],dx
  41054d:	sub    al,0x20
  41054f:	push   rax
  410550:	jne    0x4105b4
  410552:	ins    BYTE PTR es:[rdi],dx
  410553:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  41055a:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  41055e:	(bad)  
  41055f:	(bad)  
  410560:	(bad)  
  410561:	(bad)  
  410562:	xor    eax,0x31363563
  410567:	cmp    DWORD PTR [rbx],esi
  410569:	xor    al,0x65
  41056b:	xor    BYTE PTR [rax],bh
  41056d:	cmp    DWORD PTR [rip+0x1],eax        # 0x410574
  410573:	(bad)  
  410574:	push   rbx
  410575:	jns    0x4105ea
  410577:	je     0x4105de
  410579:	ins    DWORD PTR es:[rdi],dx
  41057a:	cs push rdi
  41057c:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  410583:	rex.RX outs dx,DWORD PTR ds:[rsi]
  410585:	jb     0x4105f4
  410587:	jae    0x4105b7
  410589:	rex.R outs dx,DWORD PTR ds:[rsi]
  41058b:	movsxd ebp,DWORD PTR [rbx+0x53]
  41058e:	je     0x410609
  410590:	ins    BYTE PTR es:[rdi],dx
  410591:	add    DWORD PTR gs:[rax],eax
  410594:	add    BYTE PTR [rax],al
  410596:	(bad)  
  410597:	jbe    0x4105fa
  410599:	ins    BYTE PTR es:[rdi],dx
  41059a:	jne    0x410601
  41059c:	pop    rdi
  41059d:	pop    rdi
  41059e:	add    BYTE PTR [rax],cl
  4105a0:	add    al,BYTE PTR [rax]
  4105a2:	add    BYTE PTR [rax],al
  4105a4:	add    al,BYTE PTR [rax]
  4105a6:	add    BYTE PTR [rax],al
  4105a8:	or     eax,DWORD PTR [rdx+0x0]
  4105ab:	add    DWORD PTR [rax],eax
  4105ad:	add    BYTE PTR [rax],al
  4105af:	(bad)  
  4105b0:	(bad)  
  4105b1:	(bad)  
  4105b2:	inc    DWORD PTR [rcx]
  4105b4:	add    BYTE PTR [rax],al
  4105b6:	add    BYTE PTR [rax],al
  4105b8:	add    BYTE PTR [rax],al
  4105ba:	add    BYTE PTR [rdx+rax*1],cl
  4105bd:	add    BYTE PTR [rax],al
  4105bf:	add    BYTE PTR [rdi+0x53],dl
  4105c2:	jns    0x410637
  4105c4:	je     0x41062b
  4105c6:	ins    DWORD PTR es:[rdi],dx
  4105c7:	cs push rdi
  4105c9:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  4105d0:	rex.RX outs dx,DWORD PTR ds:[rsi]
  4105d2:	jb     0x410641
  4105d4:	jae    0x410602
  4105d6:	and    BYTE PTR [rsi+0x65],dl
  4105d9:	jb     0x41064e
  4105db:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  4105e2:	xor    BYTE PTR cs:[rsi],ch
  4105e5:	xor    BYTE PTR [rax+riz*1],ch
  4105e8:	rex.XB jne 0x410657
  4105eb:	je     0x410662
  4105ed:	jb     0x410654
  4105ef:	cmp    eax,0x7475656e
  4105f4:	jb     0x410657
  4105f6:	ins    BYTE PTR es:[rdi],dx
  4105f7:	sub    al,0x20
  4105f9:	push   rax
  4105fa:	jne    0x41065e
  4105fc:	ins    BYTE PTR es:[rdi],dx
  4105fd:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  410604:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  410608:	(bad)  
  410609:	(bad)  
  41060a:	(bad)  
  41060b:	(bad)  
  41060c:	xor    eax,0x31363563
  410611:	cmp    DWORD PTR [rbx],esi
  410613:	xor    al,0x65
  410615:	xor    BYTE PTR [rax],bh
  410617:	cmp    DWORD PTR [rip+0x1],eax        # 0x41061e
  41061d:	sbb    al,0x53
  41061f:	jns    0x410694
  410621:	je     0x410688
  410623:	ins    DWORD PTR es:[rdi],dx
  410624:	cs push rdi
  410626:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  41062d:	rex.RX outs dx,DWORD PTR ds:[rsi]
  41062f:	jb     0x41069e
  410631:	jae    0x410661
  410633:	rex.WB ins DWORD PTR es:[rdi],dx
  410635:	rex.WRB outs dx,DWORD PTR gs:[rsi]
  410638:	fs add DWORD PTR gs:[rax],eax
  41063c:	add    BYTE PTR [rax],al
  41063e:	(bad)  
  41063f:	jbe    0x4106a2
  410641:	ins    BYTE PTR es:[rdi],dx
  410642:	jne    0x4106a9
  410644:	pop    rdi
  410645:	pop    rdi
  410646:	add    BYTE PTR [rax],cl
  410648:	add    al,BYTE PTR [rax]
  41064a:	add    BYTE PTR [rax],al
  41064c:	add    BYTE PTR [rax],al
  41064e:	add    BYTE PTR [rax],al
  410650:	or     eax,DWORD PTR [rbx+0x0]
  410653:	add    DWORD PTR [rax],eax
  410655:	add    BYTE PTR [rax],al
  410657:	(bad)  
  410658:	(bad)  
  410659:	(bad)  
  41065a:	inc    DWORD PTR [rcx]
  41065c:	add    BYTE PTR [rax],al
  41065e:	add    BYTE PTR [rax],al
  410660:	add    BYTE PTR [rax],al
  410662:	add    BYTE PTR [rdx+rax*1],cl
  410665:	add    BYTE PTR [rax],al
  410667:	add    BYTE PTR [rcx+0x53],dl
  41066a:	jns    0x4106df
  41066c:	je     0x4106d3
  41066e:	ins    DWORD PTR es:[rdi],dx
  41066f:	cs rex.R jb 0x4106d4
  410673:	ja     0x4106de
  410675:	outs   dx,BYTE PTR ds:[rsi]
  410676:	addr32 sub al,0x20
  410679:	push   rsi
  41067a:	gs jb  0x4106f0
  41067d:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  410684:	xor    BYTE PTR cs:[rsi],ch
  410687:	xor    BYTE PTR [rax+riz*1],ch
  41068a:	rex.XB jne 0x4106f9
  41068d:	je     0x410704
  41068f:	jb     0x4106f6
  410691:	cmp    eax,0x7475656e
  410696:	jb     0x4106f9
  410698:	ins    BYTE PTR es:[rdi],dx
  410699:	sub    al,0x20
  41069b:	push   rax
  41069c:	jne    0x410700
  41069e:	ins    BYTE PTR es:[rdi],dx
  41069f:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  4106a6:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  4106aa:	(bad)  
  4106ab:	xor    BYTE PTR [rbx],dh
  4106ad:	xor    ax,0x3766
  4106b1:	xor    WORD PTR [rcx],si
  4106b4:	fs xor eax,0x61336130
  4106ba:	add    eax,0x1
  4106bf:	adc    al,0x53
  4106c1:	jns    0x410736
  4106c3:	je     0x41072a
  4106c5:	ins    DWORD PTR es:[rdi],dx
  4106c6:	cs rex.R jb 0x41072b
  4106ca:	ja     0x410735
  4106cc:	outs   dx,BYTE PTR ds:[rsi]
  4106cd:	addr32 cs push rax
  4106d0:	outs   dx,DWORD PTR ds:[rsi]
  4106d1:	imul   ebp,DWORD PTR [rsi+0x74],0x2
  4106d8:	add    DWORD PTR [rax+0x1],edi
  4106db:	jns    0x4106dd
  4106dd:	add    BYTE PTR [rax],cl
  4106df:	or     BYTE PTR [rdx],al
  4106e1:	add    BYTE PTR [rax],al
  4106e3:	add    BYTE PTR [rax],al
  4106e5:	add    BYTE PTR [rax],al
  4106e7:	add    BYTE PTR [rip+0xb000001],ah        # 0xb4106ee
  4106ed:	add    BYTE PTR [rcx],r8b
  4106f0:	add    BYTE PTR [rax],al
  4106f2:	add    bh,bh
  4106f4:	(bad)  
  4106f5:	(bad)  
  4106f6:	inc    DWORD PTR [rcx]
  4106f8:	add    BYTE PTR [rax],al
  4106fa:	add    BYTE PTR [rax],al
  4106fc:	add    BYTE PTR [rax],al
  4106fe:	add    BYTE PTR [rdx+rax*1],cl
  410701:	add    BYTE PTR [rax],al
  410703:	add    BYTE PTR [rdi+0x53],dl
  410706:	jns    0x41077b
  410708:	je     0x41076f
  41070a:	ins    DWORD PTR es:[rdi],dx
  41070b:	cs push rdi
  41070d:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  410714:	rex.RX outs dx,DWORD PTR ds:[rsi]
  410716:	jb     0x410785
  410718:	jae    0x410746
  41071a:	and    BYTE PTR [rsi+0x65],dl
  41071d:	jb     0x410792
  41071f:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  410726:	xor    BYTE PTR cs:[rsi],ch
  410729:	xor    BYTE PTR [rax+riz*1],ch
  41072c:	rex.XB jne 0x41079b
  41072f:	je     0x4107a6
  410731:	jb     0x410798
  410733:	cmp    eax,0x7475656e
  410738:	jb     0x41079b
  41073a:	ins    BYTE PTR es:[rdi],dx
  41073b:	sub    al,0x20
  41073d:	push   rax
  41073e:	jne    0x4107a2
  410740:	ins    BYTE PTR es:[rdi],dx
  410741:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  410748:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  41074c:	(bad)  
  41074d:	(bad)  
  41074e:	(bad)  
  41074f:	(bad)  
  410750:	xor    eax,0x31363563
  410755:	cmp    DWORD PTR [rbx],esi
  410757:	xor    al,0x65
  410759:	xor    BYTE PTR [rax],bh
  41075b:	cmp    DWORD PTR [rip+0x1],eax        # 0x410762
  410761:	sbb    al,0x53
  410763:	jns    0x4107d8
  410765:	je     0x4107cc
  410767:	ins    DWORD PTR es:[rdi],dx
  410768:	cs push rdi
  41076a:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  410771:	rex.RX outs dx,DWORD PTR ds:[rsi]
  410773:	jb     0x4107e2
  410775:	jae    0x4107a5
  410777:	push   rax
  410778:	(bad)  
  410779:	fs imul ebp,DWORD PTR fs:[rsi+0x67],0x5
  410782:	add    al,0x5f
  410784:	(bad)  
  410785:	ins    BYTE PTR es:[rdi],dx
  410786:	ins    BYTE PTR es:[rdi],dx
  410787:	add    al,0x5f
  410789:	je     0x4107fa
  41078b:	jo     0x410792
  41078d:	pop    rdi
  41078e:	ins    BYTE PTR es:[rdi],dx
  41078f:	gs data16 je 0x410799
  410793:	pop    rdi
  410794:	jb     0x4107ff
  410796:	addr32 push 0x625f0774
  41079c:	outs   dx,DWORD PTR ds:[rsi]
  41079d:	je     0x410813
  41079f:	outs   dx,DWORD PTR ds:[rsi]
  4107a0:	ins    DWORD PTR es:[rdi],dx
  4107a1:	add    BYTE PTR [rax],al
  4107a3:	add    BYTE PTR [rax],al
  4107a5:	add    BYTE PTR [rcx],al
  4107a7:	or     BYTE PTR [rax],cl
  4107a9:	or     BYTE PTR [rax],cl
  4107ab:	add    al,BYTE PTR [rax]
  4107ad:	add    BYTE PTR [rax],al
  4107af:	add    BYTE PTR [rax],al
  4107b1:	add    BYTE PTR [rax],al
  4107b3:	add    BYTE PTR [rax],dl
	...
  4107bd:	add    BYTE PTR [rax],al
  4107bf:	add    BYTE PTR [rbx],cl
  4107c1:	add    BYTE PTR [rcx],al
  4107c4:	add    BYTE PTR [rax],al
  4107c6:	add    bh,bh
  4107c8:	(bad)  
  4107c9:	(bad)  
  4107ca:	inc    DWORD PTR [rcx]
  4107cc:	add    BYTE PTR [rax],al
  4107ce:	add    BYTE PTR [rax],al
  4107d0:	add    BYTE PTR [rax],al
  4107d2:	add    BYTE PTR [rdx+rax*1],cl
  4107d5:	add    BYTE PTR [rax],al
  4107d7:	add    BYTE PTR [rcx+0x53],dl
  4107da:	jns    0x41084f
  4107dc:	je     0x410843
  4107de:	ins    DWORD PTR es:[rdi],dx
  4107df:	cs rex.R jb 0x410844
  4107e3:	ja     0x41084e
  4107e5:	outs   dx,BYTE PTR ds:[rsi]
  4107e6:	addr32 sub al,0x20
  4107e9:	push   rsi
  4107ea:	gs jb  0x410860
  4107ed:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  4107f4:	xor    BYTE PTR cs:[rsi],ch
  4107f7:	xor    BYTE PTR [rax+riz*1],ch
  4107fa:	rex.XB jne 0x410869
  4107fd:	je     0x410874
  4107ff:	jb     0x410866
  410801:	cmp    eax,0x7475656e
  410806:	jb     0x410869
  410808:	ins    BYTE PTR es:[rdi],dx
  410809:	sub    al,0x20
  41080b:	push   rax
  41080c:	jne    0x410870
  41080e:	ins    BYTE PTR es:[rdi],dx
  41080f:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  410816:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  41081a:	(bad)  
  41081b:	xor    BYTE PTR [rbx],dh
  41081d:	xor    ax,0x3766
  410821:	xor    WORD PTR [rcx],si
  410824:	fs xor eax,0x61336130
  41082a:	add    eax,0x1
  41082f:	adc    edx,DWORD PTR [rbx+0x79]
  410832:	jae    0x4108a8
  410834:	gs ins DWORD PTR es:[rdi],dx
  410836:	cs rex.R jb 0x41089b
  41083a:	ja     0x4108a5
  41083c:	outs   dx,BYTE PTR ds:[rsi]
  41083d:	addr32 cs push rbx
  410840:	imul   edi,DWORD PTR [rdx+0x65],0x2
  410847:	add    eax,0x74646977
  41084c:	push   0x69656806
  410851:	addr32 push 0x8000074
  410857:	or     BYTE PTR [rdx],al
  410859:	add    BYTE PTR [rax],al
  41085b:	add    BYTE PTR [rdx+0x32000000],bl
  410861:	add    BYTE PTR [rax],al
  410863:	add    BYTE PTR [rbx],cl
  410865:	or     BYTE PTR [rcx],al
  410867:	add    BYTE PTR [rax],al
  410869:	add    BYTE PTR [rcx+0x0],al
  41086c:	add    DWORD PTR [rax],eax
  41086e:	add    BYTE PTR [rax],al
  410870:	(bad)  
  410871:	(bad)  
  410872:	(bad)  
  410873:	inc    DWORD PTR [rcx]
  410875:	add    BYTE PTR [rax],al
  410877:	add    BYTE PTR [rax],al
  410879:	add    BYTE PTR [rax],al
  41087b:	add    BYTE PTR [rdx+rax*1],cl
  41087e:	add    BYTE PTR [rax],al
  410880:	add    BYTE PTR [rdi+0x53],dl
  410883:	jns    0x4108f8
  410885:	je     0x4108ec
  410887:	ins    DWORD PTR es:[rdi],dx
  410888:	cs push rdi
  41088a:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  410891:	rex.RX outs dx,DWORD PTR ds:[rsi]
  410893:	jb     0x410902
  410895:	jae    0x4108c3
  410897:	and    BYTE PTR [rsi+0x65],dl
  41089a:	jb     0x41090f
  41089c:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  4108a3:	xor    BYTE PTR cs:[rsi],ch
  4108a6:	xor    BYTE PTR [rax+riz*1],ch
  4108a9:	rex.XB jne 0x410918
  4108ac:	je     0x410923
  4108ae:	jb     0x410915
  4108b0:	cmp    eax,0x7475656e
  4108b5:	jb     0x410918
  4108b7:	ins    BYTE PTR es:[rdi],dx
  4108b8:	sub    al,0x20
  4108ba:	push   rax
  4108bb:	jne    0x41091f
  4108bd:	ins    BYTE PTR es:[rdi],dx
  4108be:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  4108c5:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  4108c9:	(bad)  
  4108ca:	(bad)  
  4108cb:	(bad)  
  4108cc:	(bad)  
  4108cd:	xor    eax,0x31363563
  4108d2:	cmp    DWORD PTR [rbx],esi
  4108d4:	xor    al,0x65
  4108d6:	xor    BYTE PTR [rax],bh
  4108d8:	cmp    DWORD PTR [rip+0x1],eax        # 0x4108df
  4108de:	(bad)  
  4108df:	push   rbx
  4108e0:	jns    0x410955
  4108e2:	je     0x410949
  4108e4:	ins    DWORD PTR es:[rdi],dx
  4108e5:	cs push rdi
  4108e7:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  4108ee:	rex.RX outs dx,DWORD PTR ds:[rsi]
  4108f0:	jb     0x41095f
  4108f2:	jae    0x410922
  4108f4:	rex.R outs dx,DWORD PTR ds:[rsi]
  4108f6:	movsxd ebp,DWORD PTR [rbx+0x53]
  4108f9:	je     0x410974
  4108fb:	ins    BYTE PTR es:[rdi],dx
  4108fc:	add    DWORD PTR gs:[rax],eax
  4108ff:	add    BYTE PTR [rax],al
  410901:	(bad)  
  410902:	jbe    0x410965
  410904:	ins    BYTE PTR es:[rdi],dx
  410905:	jne    0x41096c
  410907:	pop    rdi
  410908:	pop    rdi
  410909:	add    BYTE PTR [rax],cl
  41090b:	add    al,BYTE PTR [rax]
  41090d:	add    BYTE PTR [rax],al
  41090f:	add    eax,0xb000000
  410914:	rex.XB add BYTE PTR [r9],al
  410917:	add    BYTE PTR [rax],al
  410919:	add    bh,bh
  41091b:	(bad)  
  41091c:	(bad)  
  41091d:	inc    DWORD PTR [rcx]
  41091f:	add    BYTE PTR [rax],al
  410921:	add    BYTE PTR [rax],al
  410923:	add    BYTE PTR [rax],al
  410925:	add    BYTE PTR [rdx+rax*1],cl
  410928:	add    BYTE PTR [rax],al
  41092a:	add    BYTE PTR [rcx+0x53],dl
  41092d:	jns    0x4109a2
  41092f:	je     0x410996
  410931:	ins    DWORD PTR es:[rdi],dx
  410932:	cs rex.R jb 0x410997
  410936:	ja     0x4109a1
  410938:	outs   dx,BYTE PTR ds:[rsi]
  410939:	addr32 sub al,0x20
  41093c:	push   rsi
  41093d:	gs jb  0x4109b3
  410940:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  410947:	xor    BYTE PTR cs:[rsi],ch
  41094a:	xor    BYTE PTR [rax+riz*1],ch
  41094d:	rex.XB jne 0x4109bc
  410950:	je     0x4109c7
  410952:	jb     0x4109b9
  410954:	cmp    eax,0x7475656e
  410959:	jb     0x4109bc
  41095b:	ins    BYTE PTR es:[rdi],dx
  41095c:	sub    al,0x20
  41095e:	push   rax
  41095f:	jne    0x4109c3
  410961:	ins    BYTE PTR es:[rdi],dx
  410962:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  410969:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  41096d:	(bad)  
  41096e:	xor    BYTE PTR [rbx],dh
  410970:	xor    ax,0x3766
  410974:	xor    WORD PTR [rcx],si
  410977:	fs xor eax,0x61336130
  41097d:	add    eax,0x1
  410982:	adc    al,0x53
  410984:	jns    0x4109f9
  410986:	je     0x4109ed
  410988:	ins    DWORD PTR es:[rdi],dx
  410989:	cs rex.R jb 0x4109ee
  41098d:	ja     0x4109f8
  41098f:	outs   dx,BYTE PTR ds:[rsi]
  410990:	addr32 cs push rax
  410993:	outs   dx,DWORD PTR ds:[rsi]
  410994:	imul   ebp,DWORD PTR [rsi+0x74],0x2
  41099b:	add    DWORD PTR [rax+0x1],edi
  41099e:	jns    0x4109a0
  4109a0:	add    BYTE PTR [rax],cl
  4109a2:	or     BYTE PTR [rdx],al
	...
  4109ac:	add    BYTE PTR [rax],al
  4109ae:	add    BYTE PTR [rbx],cl
  4109b0:	add    BYTE PTR [rcx],r8b
  4109b3:	add    BYTE PTR [rax],al
  4109b5:	add    bh,bh
  4109b7:	(bad)  
  4109b8:	(bad)  
  4109b9:	inc    DWORD PTR [rcx]
  4109bb:	add    BYTE PTR [rax],al
  4109bd:	add    BYTE PTR [rax],al
  4109bf:	add    BYTE PTR [rax],al
  4109c1:	add    BYTE PTR [rdx+rax*1],cl
  4109c4:	add    BYTE PTR [rax],al
  4109c6:	add    BYTE PTR [rdi+0x53],dl
  4109c9:	jns    0x410a3e
  4109cb:	je     0x410a32
  4109cd:	ins    DWORD PTR es:[rdi],dx
  4109ce:	cs push rdi
  4109d0:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  4109d7:	rex.RX outs dx,DWORD PTR ds:[rsi]
  4109d9:	jb     0x410a48
  4109db:	jae    0x410a09
  4109dd:	and    BYTE PTR [rsi+0x65],dl
  4109e0:	jb     0x410a55
  4109e2:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  4109e9:	xor    BYTE PTR cs:[rsi],ch
  4109ec:	xor    BYTE PTR [rax+riz*1],ch
  4109ef:	rex.XB jne 0x410a5e
  4109f2:	je     0x410a69
  4109f4:	jb     0x410a5b
  4109f6:	cmp    eax,0x7475656e
  4109fb:	jb     0x410a5e
  4109fd:	ins    BYTE PTR es:[rdi],dx
  4109fe:	sub    al,0x20
  410a00:	push   rax
  410a01:	jne    0x410a65
  410a03:	ins    BYTE PTR es:[rdi],dx
  410a04:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  410a0b:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  410a0f:	(bad)  
  410a10:	(bad)  
  410a11:	(bad)  
  410a12:	(bad)  
  410a13:	xor    eax,0x31363563
  410a18:	cmp    DWORD PTR [rbx],esi
  410a1a:	xor    al,0x65
  410a1c:	xor    BYTE PTR [rax],bh
  410a1e:	cmp    DWORD PTR [rip+0x1],eax        # 0x410a25
  410a24:	sbb    al,0x53
  410a26:	jns    0x410a9b
  410a28:	je     0x410a8f
  410a2a:	ins    DWORD PTR es:[rdi],dx
  410a2b:	cs push rdi
  410a2d:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  410a34:	rex.RX outs dx,DWORD PTR ds:[rsi]
  410a36:	jb     0x410aa5
  410a38:	jae    0x410a68
  410a3a:	push   rax
  410a3b:	(bad)  
  410a3c:	fs imul ebp,DWORD PTR fs:[rsi+0x67],0x5
  410a45:	add    al,0x5f
  410a47:	(bad)  
  410a48:	ins    BYTE PTR es:[rdi],dx
  410a49:	ins    BYTE PTR es:[rdi],dx
  410a4a:	add    al,0x5f
  410a4c:	je     0x410abd
  410a4e:	jo     0x410a55
  410a50:	pop    rdi
  410a51:	ins    BYTE PTR es:[rdi],dx
  410a52:	gs data16 je 0x410a5c
  410a56:	pop    rdi
  410a57:	jb     0x410ac2
  410a59:	addr32 push 0x625f0774
  410a5f:	outs   dx,DWORD PTR ds:[rsi]
  410a60:	je     0x410ad6
  410a62:	outs   dx,DWORD PTR ds:[rsi]
  410a63:	ins    DWORD PTR es:[rdi],dx
  410a64:	add    BYTE PTR [rax],al
  410a66:	add    BYTE PTR [rax],al
  410a68:	add    BYTE PTR [rcx],al
  410a6a:	or     BYTE PTR [rax],cl
  410a6c:	or     BYTE PTR [rax],cl
  410a6e:	add    al,BYTE PTR [rax]
  410a70:	add    BYTE PTR [rax],al
  410a72:	add    BYTE PTR [rdx],cl
  410a74:	add    BYTE PTR [rax],al
  410a76:	add    BYTE PTR [rax],dl
  410a78:	add    BYTE PTR [rax],al
  410a7a:	add    BYTE PTR [rax],dl
  410a7c:	add    BYTE PTR [rax],al
  410a7e:	add    BYTE PTR [rax],al
  410a80:	add    BYTE PTR [rax],al
  410a82:	add    BYTE PTR [rbx],cl
  410a84:	add    BYTE PTR [rcx],al
  410a87:	add    BYTE PTR [rax],al
  410a89:	add    bh,bh
  410a8b:	(bad)  
  410a8c:	(bad)  
  410a8d:	inc    DWORD PTR [rcx]
  410a8f:	add    BYTE PTR [rax],al
  410a91:	add    BYTE PTR [rax],al
  410a93:	add    BYTE PTR [rax],al
  410a95:	add    BYTE PTR [rdx+rax*1],cl
  410a98:	add    BYTE PTR [rax],al
  410a9a:	add    BYTE PTR [rcx+0x53],dl
  410a9d:	jns    0x410b12
  410a9f:	je     0x410b06
  410aa1:	ins    DWORD PTR es:[rdi],dx
  410aa2:	cs rex.R jb 0x410b07
  410aa6:	ja     0x410b11
  410aa8:	outs   dx,BYTE PTR ds:[rsi]
  410aa9:	addr32 sub al,0x20
  410aac:	push   rsi
  410aad:	gs jb  0x410b23
  410ab0:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  410ab7:	xor    BYTE PTR cs:[rsi],ch
  410aba:	xor    BYTE PTR [rax+riz*1],ch
  410abd:	rex.XB jne 0x410b2c
  410ac0:	je     0x410b37
  410ac2:	jb     0x410b29
  410ac4:	cmp    eax,0x7475656e
  410ac9:	jb     0x410b2c
  410acb:	ins    BYTE PTR es:[rdi],dx
  410acc:	sub    al,0x20
  410ace:	push   rax
  410acf:	jne    0x410b33
  410ad1:	ins    BYTE PTR es:[rdi],dx
  410ad2:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  410ad9:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  410add:	(bad)  
  410ade:	xor    BYTE PTR [rbx],dh
  410ae0:	xor    ax,0x3766
  410ae4:	xor    WORD PTR [rcx],si
  410ae7:	fs xor eax,0x61336130
  410aed:	add    eax,0x1
  410af2:	adc    edx,DWORD PTR [rbx+0x79]
  410af5:	jae    0x410b6b
  410af7:	gs ins DWORD PTR es:[rdi],dx
  410af9:	cs rex.R jb 0x410b5e
  410afd:	ja     0x410b68
  410aff:	outs   dx,BYTE PTR ds:[rsi]
  410b00:	addr32 cs push rbx
  410b03:	imul   edi,DWORD PTR [rdx+0x65],0x2
  410b0a:	add    eax,0x74646977
  410b0f:	push   0x69656806
  410b14:	addr32 push 0x8000074
  410b1a:	or     BYTE PTR [rdx],al
  410b1c:	add    BYTE PTR [rax],al
  410b1e:	add    BYTE PTR [rdx+0x25000000],bl
  410b24:	add    DWORD PTR [rax],eax
  410b26:	add    BYTE PTR [rbx],cl
  410b28:	or     BYTE PTR [rax],al
  410b2a:	add    BYTE PTR [rax],al
  410b2c:	add    BYTE PTR [rcx],al
  410b2e:	or     ch,BYTE PTR [rsi+0x61]
  410b31:	jbe    0x410b9c
  410b33:	addr32 (bad) 
  410b35:	je     0x410ba0
  410b37:	outs   dx,DWORD PTR ds:[rsi]
  410b38:	outs   dx,BYTE PTR ds:[rsi]
  410b39:	add    BYTE PTR [rax],al
  410b3b:	add    BYTE PTR [rax],al
  410b3d:	add    BYTE PTR [rax],al
  410b3f:	add    BYTE PTR [rip+0xffffffffce000433],bl        # 0xffffffffce410f78
  410b45:	retf   0xbeef
  410b48:	add    DWORD PTR [rax],eax
  410b4a:	add    BYTE PTR [rax],al
  410b4c:	xchg   ecx,eax
  410b4d:	add    BYTE PTR [rax],al
  410b4f:	add    BYTE PTR [rbx+rdx*2+0x79],ch
  410b53:	jae    0x410bc9
  410b55:	gs ins DWORD PTR es:[rdi],dx
  410b57:	cs push rdx
  410b59:	gs jae 0x410bcb
  410b5c:	jne    0x410bd0
  410b5e:	movsxd esp,DWORD PTR [rbp+0x73]
  410b61:	cs push rdx
  410b63:	gs jae 0x410bd5
  410b66:	jne    0x410bda
  410b68:	movsxd esp,DWORD PTR [rbp+0x52]
  410b6b:	gs (bad) 
  410b6d:	fs gs jb 0x410b9d
  410b71:	and    BYTE PTR [rbp+0x73],ch
  410b74:	movsxd ebp,DWORD PTR [rdi+0x72]
  410b77:	ins    BYTE PTR es:[rdi],dx
  410b78:	imul   esp,DWORD PTR [rdx+0x2c],0x72655620
  410b7f:	jae    0x410bea
  410b81:	outs   dx,DWORD PTR ds:[rsi]
  410b82:	outs   dx,BYTE PTR ds:[rsi]
  410b83:	cmp    eax,0x2e302e32
  410b88:	xor    BYTE PTR [rsi],ch
  410b8a:	xor    BYTE PTR [rax+riz*1],ch
  410b8d:	rex.XB jne 0x410bfc
  410b90:	je     0x410c07
  410b92:	jb     0x410bf9
  410b94:	cmp    eax,0x7475656e
  410b99:	jb     0x410bfc
  410b9b:	ins    BYTE PTR es:[rdi],dx
  410b9c:	sub    al,0x20
  410b9e:	push   rax
  410b9f:	jne    0x410c03
  410ba1:	ins    BYTE PTR es:[rdi],dx
  410ba2:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  410ba9:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  410bad:	(bad)  
  410bae:	(bad)  
  410baf:	(bad)  
  410bb0:	(bad)  
  410bb1:	xor    eax,0x31363563
  410bb6:	cmp    DWORD PTR [rbx],esi
  410bb8:	xor    al,0x65
  410bba:	xor    BYTE PTR [rax],bh
  410bbc:	cmp    DWORD PTR [rbx],esp
  410bbe:	push   rbx
  410bbf:	jns    0x410c34
  410bc1:	je     0x410c28
  410bc3:	ins    DWORD PTR es:[rdi],dx
  410bc4:	cs push rdx
  410bc6:	gs jae 0x410c38
  410bc9:	jne    0x410c3d
  410bcb:	movsxd esp,DWORD PTR [rbp+0x73]
  410bce:	cs push rdx
  410bd0:	jne    0x410c40
  410bd2:	je     0x410c3d
  410bd4:	ins    DWORD PTR es:[rdi],dx
  410bd5:	gs push rdx
  410bd7:	gs jae 0x410c49
  410bda:	jne    0x410c4e
  410bdc:	movsxd esp,DWORD PTR [rbp+0x53]
  410bdf:	gs je  0x410be4
  410be2:	add    BYTE PTR [rax],al
  410be4:	add    BYTE PTR [rdx],bl
  410be6:	add    BYTE PTR [rax],al
  410be8:	add    BYTE PTR [rdx],al
  410bea:	add    BYTE PTR [rax],al
  410bec:	add    BYTE PTR [rsi+0x53],ah
  410bef:	jns    0x410c64
  410bf1:	je     0x410c58
  410bf3:	ins    DWORD PTR es:[rdi],dx
  410bf4:	cs rex.R jb 0x410c59
  410bf8:	ja     0x410c63
  410bfa:	outs   dx,BYTE PTR ds:[rsi]
  410bfb:	movsxd rbp,DWORD PTR cs:[r15d+0x6e]
  410c01:	sub    al,0x20
  410c03:	push   rbx
  410c04:	jns    0x410c79
  410c06:	je     0x410c6d
  410c08:	ins    DWORD PTR es:[rdi],dx
  410c09:	cs rex.R jb 0x410c6e
  410c0d:	ja     0x410c78
  410c0f:	outs   dx,BYTE PTR ds:[rsi]
  410c10:	addr32 sub al,0x20
  410c13:	push   rsi
  410c14:	gs jb  0x410c8a
  410c17:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  410c1e:	xor    BYTE PTR cs:[rsi],ch
  410c21:	xor    BYTE PTR [rax+riz*1],ch
  410c24:	rex.XB jne 0x410c93
  410c27:	je     0x410c9e
  410c29:	jb     0x410c90
  410c2b:	cmp    eax,0x7475656e
  410c30:	jb     0x410c93
  410c32:	ins    BYTE PTR es:[rdi],dx
  410c33:	sub    al,0x20
  410c35:	push   rax
  410c36:	jne    0x410c9a
  410c38:	ins    BYTE PTR es:[rdi],dx
  410c39:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  410c40:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  410c44:	(bad)  
  410c45:	xor    BYTE PTR [rbx],dh
  410c47:	xor    ax,0x3766
  410c4b:	xor    WORD PTR [rcx],si
  410c4e:	fs xor eax,0x61336130
  410c54:	push   0x74737953
  410c59:	gs ins DWORD PTR es:[rdi],dx
  410c5b:	cs rex.R jb 0x410cc0
  410c5f:	ja     0x410cca
  410c61:	outs   dx,BYTE PTR ds:[rsi]
  410c62:	imul   esi,DWORD PTR cs:[ebp+r13d*2+0x61],0x53202c70
  410c6d:	jns    0x410ce2
  410c6f:	je     0x410cd6
  410c71:	ins    DWORD PTR es:[rdi],dx
  410c72:	cs rex.R jb 0x410cd7
  410c76:	ja     0x410ce1
  410c78:	outs   dx,BYTE PTR ds:[rsi]
  410c79:	addr32 sub al,0x20
  410c7c:	push   rsi
  410c7d:	gs jb  0x410cf3
  410c80:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  410c87:	xor    BYTE PTR cs:[rsi],ch
  410c8a:	xor    BYTE PTR [rax+riz*1],ch
  410c8d:	rex.XB jne 0x410cfc
  410c90:	je     0x410d07
  410c92:	jb     0x410cf9
  410c94:	cmp    eax,0x7475656e
  410c99:	jb     0x410cfc
  410c9b:	ins    BYTE PTR es:[rdi],dx
  410c9c:	sub    al,0x20
  410c9e:	push   rax
  410c9f:	jne    0x410d03
  410ca1:	ins    BYTE PTR es:[rdi],dx
  410ca2:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  410ca9:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  410cad:	(bad)  
  410cae:	xor    BYTE PTR [rbx],dh
  410cb0:	xor    ax,0x3766
  410cb4:	xor    WORD PTR [rcx],si
  410cb7:	fs xor eax,0x61336130
  410cbd:	push   rax
  410cbe:	rex.B
  410cbf:	rex.R push rax
  410cc1:	rex.B
  410cc2:	rex.R push rax
  410cc4:	(bad)  
  410cc5:	pop    rcx
  410cc6:	cmc    
  410cc7:	mov    BYTE PTR [rcx-0x626f211a],al
  410ccd:	rex.RXB js 0x410c61
  410cd0:	mov    ch,0x17
  410cd2:	or     edx,DWORD PTR [rbx-0x4dca1c48]
  410cd8:	movabs ds:0x94da877a76bdf0ed,eax
  410ce1:	in     eax,dx
  410ce2:	xor    edi,ebx
  410ce4:	(bad)  
  410ce5:	cmp    eax,0x7691e1c7
  410cea:	adc    ah,ah
  410cec:	or     bh,BYTE PTR [rbx]
  410cee:	and    esp,esp
  410cf0:	pop    rsp
  410cf1:	test   eax,0xcad3e99c
  410cf6:	(bad)  
  410cf7:	mul    BYTE PTR [rax]
  410cf9:	mov    dl,0x8
  410cfb:	stc    
  410cfc:	and    eax,0x54fdfdbc
  410d01:	lods   eax,DWORD PTR ds:[rsi]
  410d02:	ins    DWORD PTR es:[rdi],dx
  410d03:	or     eax,0xd9a51ce
  410d08:	mov    DWORD PTR [rdx-0x5b],0x2deb211
  410d0f:	sbb    cl,BYTE PTR [rdi+0x61]
  410d12:	(bad)  
  410d13:	sbb    al,0x93
  410d15:	rex.W loopne 0x410d72
  410d18:	xor    bl,BYTE PTR [rdi-0x54]
  410d1b:	pop    rbx
  410d1c:	and    al,0x5b
  410d1e:	xchg   edi,eax
  410d1f:	fs and eax,0x2e750a29
  410d25:	and    ebp,DWORD PTR [rdi+0x7c]
  410d28:	je     0x410d2b
  410d2a:	xchg   BYTE PTR [rsp+rbp*1+0x3],bh
  410d2e:	add    BYTE PTR [rax],al
  410d30:	stos   DWORD PTR es:[rdi],eax
  410d31:	add    al,BYTE PTR [rax]
  410d33:	add    BYTE PTR [rdx],bl
  410d35:	add    al,BYTE PTR [rax]
  410d37:	add    BYTE PTR [rax+0x60000002],bl
  410d3d:	add    DWORD PTR [rax],eax
  410d3f:	add    BYTE PTR [rdi],bh
  410d41:	add    al,BYTE PTR [rax]
  410d43:	add    ah,cl
  410d45:	add    al,BYTE PTR [rax]
  410d47:	add    BYTE PTR [rcx+0x2],bh
  410d4a:	add    BYTE PTR [rax],al
  410d4c:	add    DWORD PTR [rbx],eax
  410d4e:	add    BYTE PTR [rax],al
  410d50:	(bad)  
  410d51:	add    DWORD PTR [rax],eax
  410d53:	add    BYTE PTR [rcx],ch
  410d55:	add    BYTE PTR [rax],al
  410d57:	add    bl,ah
  410d59:	add    DWORD PTR [rax],eax
  410d5b:	add    BYTE PTR [rax+rax*1+0x0],bh
  410d5f:	add    ch,ah
  410d61:	add    BYTE PTR [rax],al
  410d63:	add    BYTE PTR [rbx+0x1],bh
  410d66:	add    BYTE PTR [rax],al
  410d68:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  410d69:	add    BYTE PTR [rax],al
  410d6b:	add    BYTE PTR [rdx+0x2],ch
  410d6e:	add    BYTE PTR [rax],al
  410d70:	sbb    BYTE PTR [rcx],al
  410d72:	add    BYTE PTR [rax],al
  410d74:	pop    rbx
  410d75:	add    BYTE PTR [rax],al
  410d77:	add    BYTE PTR [rbx+rax*1+0x0],bl
  410d7b:	add    BYTE PTR [rcx+0x3],bh
  410d7e:	add    BYTE PTR [rax],al
  410d80:	add    BYTE PTR [rax],al
  410d82:	add    BYTE PTR [rax],al
  410d84:	xchg   ebx,eax
  410d85:	add    BYTE PTR [rax],al
  410d87:	add    BYTE PTR [rcx+rax*1+0x34f0000],bh
  410d8e:	add    BYTE PTR [rax],al
  410d90:	rex.WRX add BYTE PTR [rax],r8b
  410d93:	add    dl,ah
  410d95:	add    eax,0x43240000
  410d9a:	add    BYTE PTR [rdi+0x0],ch
  410d9d:	outs   dx,BYTE PTR ds:[rsi]
  410d9e:	add    BYTE PTR [rsi+0x0],ah
  410da1:	imul   eax,DWORD PTR [rax],0x750067
  410da7:	jb     0x410da9
  410da9:	(bad)  
  410daa:	add    BYTE PTR [rax+rax*1+0x69],dh
  410dae:	add    BYTE PTR [rdi+0x0],ch
  410db1:	outs   dx,BYTE PTR ds:[rsi]
  410db2:	add    BYTE PTR [rcx+0x0],cl
  410db5:	ins    DWORD PTR es:[rdi],dx
  410db6:	add    BYTE PTR [rcx+0x0],ah
  410db9:	add    BYTE PTR [ebp+0x0],ah
  410dbd:	add    BYTE PTR [rax],al
  410dbf:	add    BYTE PTR [rax],al
  410dc1:	and    BYTE PTR [rdi+0x0],al
  410dc4:	add    BYTE PTR gs:[rsi+0x0],ch
  410dc8:	add    BYTE PTR gs:[rdx+0x0],dh
  410dcc:	(bad)  
  410dcd:	add    BYTE PTR [rax+rax*1+0x52],ch
  410dd1:	add    BYTE PTR [rbp+0x0],ah
  410dd4:	jae    0x410dd6
  410dd6:	outs   dx,DWORD PTR ds:[rsi]
  410dd7:	add    BYTE PTR [rbp+0x0],dh
  410dda:	jb     0x410ddc
  410ddc:	movsxd eax,DWORD PTR [rax]
  410dde:	add    BYTE PTR gs:[rbx+0x0],dh
  410de2:	xchg   edi,eax
  410de3:	sub    BYTE PTR [rax],al
  410de5:	add    BYTE PTR [rax],cl
  410de7:	rex.W add BYTE PTR [rbp+0x0],spl
  410deb:	ins    BYTE PTR es:[rdi],dx
  410dec:	add    BYTE PTR [rax+0x0],dh
  410def:	cs push rcx
  410df1:	add    BYTE PTR [rax],al
  410df3:	sbb    al,0x48
  410df5:	add    BYTE PTR [rbp+0x0],ah
  410df8:	ins    BYTE PTR es:[rdi],dx
  410df9:	add    BYTE PTR [rax+0x0],dh
  410dfc:	rex.X add BYTE PTR [rdi+0x0],bpl
  410e00:	outs   dx,DWORD PTR ds:[rsi]
  410e01:	add    BYTE PTR [rbx+0x0],ch
  410e04:	rex.WRXB add BYTE PTR [r14+0x0],r13b
  410e08:	ins    BYTE PTR es:[rdi],dx
  410e09:	add    BYTE PTR [rcx+0x0],ch
  410e0c:	outs   dx,BYTE PTR ds:[rsi]
  410e0d:	add    BYTE PTR [rbp+0x0],ah
  410e10:	adc    eax,0x12000073
  410e15:	rex.W add BYTE PTR [rcx+0x0],dil
  410e19:	jo     0x410e1b
  410e1b:	add    BYTE PTR gs:[rdx+0x0],dh
  410e1f:	rex.WR add BYTE PTR [rcx+0x0],r13b
  410e23:	outs   dx,BYTE PTR ds:[rsi]
  410e24:	add    BYTE PTR [rbx+0x0],ch
  410e27:	jl     0x410dc0
  410e29:	add    BYTE PTR [rax],al
  410e2b:	(bad)  
  410e2c:	rex.WB add BYTE PTR [r14+0x0],bpl
  410e30:	jae    0x410e32
  410e32:	je     0x410e34
  410e34:	(bad)  
  410e35:	add    BYTE PTR [rax+rax*1+0x6c],ch
  410e39:	add    BYTE PTR [rbx-0x2d],ch
  410e3c:	add    BYTE PTR [rax],al
  410e3e:	cmp    cl,BYTE PTR [rcx+0x0]
  410e41:	outs   dx,BYTE PTR ds:[rsi]
  410e42:	add    BYTE PTR [rbx+0x0],dh
  410e45:	je     0x410e47
  410e47:	(bad)  
  410e48:	add    BYTE PTR [rax+rax*1+0x6c],ch
  410e4c:	add    BYTE PTR [rbp+0x0],dl
  410e4f:	jae    0x410e51
  410e51:	imul   eax,DWORD PTR [rax],0x67006e
  410e57:	rex.XB add BYTE PTR [r15+0x0],bpl
  410e5b:	outs   dx,BYTE PTR ds:[rsi]
  410e5c:	add    BYTE PTR [rsi+0x0],ah
  410e5f:	imul   eax,DWORD PTR [rax],0x750067
  410e65:	jb     0x410e67
  410e67:	(bad)  
  410e68:	add    BYTE PTR [rax+rax*1+0x69],dh
  410e6c:	add    BYTE PTR [rdi+0x0],ch
  410e6f:	outs   dx,BYTE PTR ds:[rsi]
  410e70:	add    BYTE PTR [rsi+0x0],al
  410e73:	imul   eax,DWORD PTR [rax],0x65006c
  410e79:	add    bh,ah
  410e7b:	add    BYTE PTR [rax],al
  410e7d:	rex.WB add BYTE PTR cs:[r14+0x0],bpl
  410e82:	jae    0x410e84
  410e84:	je     0x410e86
  410e86:	(bad)  
  410e87:	add    BYTE PTR [rax+rax*1+0x6c],ch
  410e8b:	add    BYTE PTR [rdi+0x0],dl
  410e8e:	imul   eax,DWORD PTR [rax],0x680074
  410e94:	outs   dx,DWORD PTR ds:[rsi]
  410e95:	add    BYTE PTR [rbp+0x0],dh
  410e98:	je     0x410e9a
  410e9a:	rex.XB add BYTE PTR [r15+0x0],bpl
  410e9e:	outs   dx,BYTE PTR ds:[rsi]
  410e9f:	add    BYTE PTR [rsi+0x0],ah
  410ea2:	imul   eax,DWORD PTR [rax],0x750067
  410ea8:	jb     0x410eaa
  410eaa:	add    BYTE PTR gs:[rcx+0x22000124],bl
  410eb1:	rex.WB add BYTE PTR [r14+0x0],bpl
  410eb5:	je     0x410eb7
  410eb7:	add    BYTE PTR gs:[rdx+0x0],dh
  410ebb:	outs   dx,BYTE PTR ds:[rsi]
  410ebc:	add    BYTE PTR [rbp+0x0],ah
  410ebf:	je     0x410ec1
  410ec1:	push   rdx
  410ec2:	add    BYTE PTR [rbp+0x0],ah
  410ec5:	jae    0x410ec7
  410ec7:	outs   dx,DWORD PTR ds:[rsi]
  410ec8:	add    BYTE PTR [rbp+0x0],dh
  410ecb:	jb     0x410ecd
  410ecd:	movsxd eax,DWORD PTR [rax]
  410ecf:	add    BYTE PTR gs:[rbx+0x0],dh
  410ed3:	xor    BYTE PTR [rbp+0x1],cl
  410ed6:	add    BYTE PTR [rsp+rcx*2],bl
  410ed9:	add    BYTE PTR [rdi+0x0],ch
  410edc:	movsxd eax,DWORD PTR [rax]
  410ede:	(bad)  
  410edf:	add    BYTE PTR [rax+rax*1+0x52],ch
  410ee3:	add    BYTE PTR [rbp+0x0],ah
  410ee6:	jae    0x410ee8
  410ee8:	outs   dx,DWORD PTR ds:[rsi]
  410ee9:	add    BYTE PTR [rbp+0x0],dh
  410eec:	jb     0x410eee
  410eee:	movsxd eax,DWORD PTR [rax]
  410ef0:	add    BYTE PTR gs:[rbx+0x0],dh
  410ef4:	(bad)  
  410ef5:	jne    0x410ef8
  410ef7:	add    BYTE PTR [rsi],dl
  410ef9:	rex.WRB add BYTE PTR [r9+0x0],r12b
  410efd:	imul   eax,DWORD PTR [rax],0x74006e
  410f03:	add    BYTE PTR gs:[rsi+0x0],ch
  410f07:	(bad)  
  410f08:	add    BYTE PTR [rsi+0x0],ch
  410f0b:	movsxd eax,DWORD PTR [rax]
  410f0d:	add    BYTE PTR gs:[rsi-0x62],bl
  410f11:	add    DWORD PTR [rax],eax
  410f13:	cmp    al,0x4d
  410f15:	add    BYTE PTR [rcx+0x0],ah
  410f18:	imul   eax,DWORD PTR [rax],0x74006e
  410f1e:	add    BYTE PTR gs:[rsi+0x0],ch
  410f22:	(bad)  
  410f23:	add    BYTE PTR [rsi+0x0],ch
  410f26:	movsxd eax,DWORD PTR [rax]
  410f28:	add    BYTE PTR gs:[rcx+0x0],al
  410f2c:	add    BYTE PTR fs:[rax+rax*1+0x4f],ah
  410f31:	add    BYTE PTR [rdx+0x0],dh
  410f34:	push   rdx
  410f35:	add    BYTE PTR [rbp+0x0],ah
  410f38:	ins    DWORD PTR es:[rdi],dx
  410f39:	add    BYTE PTR [rdi+0x0],ch
  410f3c:	jbe    0x410f3e
  410f3e:	add    BYTE PTR gs:[rsi+0x0],al
  410f42:	add    BYTE PTR gs:[rcx+0x0],ah
  410f46:	je     0x410f48
  410f48:	jne    0x410f4a
  410f4a:	jb     0x410f4c
  410f4c:	add    BYTE PTR gs:[rbx+0x0],dh
  410f50:	cmc    
  410f51:	mov    BYTE PTR [rcx],0x0
  410f54:	and    cl,BYTE PTR [rbp+0x0]
  410f57:	(bad)  
  410f58:	add    BYTE PTR [rcx+0x0],ch
  410f5b:	outs   dx,BYTE PTR ds:[rsi]
  410f5c:	add    BYTE PTR [rax+rax*1+0x65],dh
  410f60:	add    BYTE PTR [rsi+0x0],ch
  410f63:	(bad)  
  410f64:	add    BYTE PTR [rsi+0x0],ch
  410f67:	movsxd eax,DWORD PTR [rax]
  410f69:	add    BYTE PTR gs:[rdx+0x0],dl
  410f6d:	add    BYTE PTR gs:[rax+0x0],dh
  410f71:	(bad)  
  410f72:	add    BYTE PTR [rcx+0x0],ch
  410f75:	jb     0x410f77
  410f77:	mov    edi,gs
  410f79:	add    DWORD PTR [rax],eax
  410f7b:	xor    cl,BYTE PTR [rbp+0x0]
  410f7e:	(bad)  
  410f7f:	add    BYTE PTR [rcx+0x0],ch
  410f82:	outs   dx,BYTE PTR ds:[rsi]
  410f83:	add    BYTE PTR [rax+rax*1+0x65],dh
  410f87:	add    BYTE PTR [rsi+0x0],ch
  410f8a:	(bad)  
  410f8b:	add    BYTE PTR [rsi+0x0],ch
  410f8e:	movsxd eax,DWORD PTR [rax]
  410f90:	add    BYTE PTR gs:[rbp+0x0],dl
  410f94:	jo     0x410f96
  410f96:	add    BYTE PTR [edx+0x0],dh
  410f9a:	(bad)  
  410f9b:	add    BYTE PTR [rax+rax*1+0x65],ah
  410f9f:	add    BYTE PTR [rbp+0x0],al
  410fa2:	add    BYTE PTR fs:[rcx+0x0],ch
  410fa6:	je     0x410fa8
  410fa8:	imul   eax,DWORD PTR [rax],0x6e006f
  410fae:	and    ebx,DWORD PTR [rax]
  410fb0:	add    al,BYTE PTR [rax]
  410fb2:	and    BYTE PTR [rdx+0x0],dl
  410fb5:	add    BYTE PTR gs:[rcx+0x0],ah
  410fb9:	add    BYTE PTR fs:[rdx+0x0],dl
  410fbd:	add    BYTE PTR gs:[rax+rax*1+0x65],ch
  410fc2:	add    BYTE PTR [rcx+0x0],ah
  410fc5:	jae    0x410fc7
  410fc7:	add    BYTE PTR gs:[rsi+0x0],cl
  410fcb:	outs   dx,DWORD PTR ds:[rsi]
  410fcc:	add    BYTE PTR [rax+rax*1+0x65],dh
  410fd0:	add    BYTE PTR [rbx+0x0],dh
  410fd3:	mov    edx,0x26000240
  410fd8:	push   rdx
  410fd9:	add    BYTE PTR [rbp+0x0],ah
  410fdc:	movsxd eax,DWORD PTR [rax]
  410fde:	outs   dx,DWORD PTR ds:[rsi]
  410fdf:	add    BYTE PTR [rsi+0x0],dh
  410fe2:	add    BYTE PTR gs:[rdx+0x0],dh
  410fe6:	rex.WB add BYTE PTR [r14+0x0],bpl
  410fea:	jae    0x410fec
  410fec:	je     0x410fee
  410fee:	(bad)  
  410fef:	add    BYTE PTR [rax+rax*1+0x6c],ch
  410ff3:	add    BYTE PTR [rcx+0x0],ah
  410ff6:	je     0x410ff8
  410ff8:	imul   eax,DWORD PTR [rax],0x6e006f
  410ffe:	mov    cl,0x4b
  411000:	add    al,BYTE PTR [rax]
  411002:	or     dl,BYTE PTR [rax+rax*1+0x6f]
  411006:	add    BYTE PTR [rdi+0x0],ch
  411009:	ins    BYTE PTR es:[rdi],dx
  41100a:	add    BYTE PTR [rbx+0x0],dh
  41100d:	rex.W je 0x411012
  411010:	add    BYTE PTR [rdx],bl
  411012:	push   rbp
  411013:	add    BYTE PTR [rsi+0x0],ch
  411016:	imul   eax,DWORD PTR [rax],0x73006e
  41101c:	je     0x41101e
  41101e:	(bad)  
  41101f:	add    BYTE PTR [rax+rax*1+0x6c],ch
  411023:	add    BYTE PTR [rcx+0x0],cl
  411026:	movsxd eax,DWORD PTR [rax]
  411028:	outs   dx,DWORD PTR ds:[rsi]
  411029:	add    BYTE PTR [rsi+0x0],ch
  41102c:	fistp  WORD PTR [rdx+rax*1+0x550e00]
  411033:	jo     0x411035
  411035:	add    BYTE PTR [edx+0x0],dh
  411039:	(bad)  
  41103a:	add    BYTE PTR [rax+rax*1+0x65],ah
  41103e:	add    BYTE PTR [rsi-0x3b],dh
  411041:	add    al,BYTE PTR [rax]
  411043:	sbb    al,0x55
  411045:	add    BYTE PTR [rax+0x0],dh
  411048:	add    BYTE PTR [edx+0x0],dh
  41104c:	(bad)  
  41104d:	add    BYTE PTR [rax+rax*1+0x65],ah
  411051:	add    BYTE PTR [rcx+0x0],al
  411054:	add    BYTE PTR fs:[rsi+0x0],dh
  411058:	imul   eax,DWORD PTR [rax],0x6f0073
  41105e:	jb     0x411060
  411060:	or     eax,0x300002ee
  411065:	push   rbp
  411066:	add    BYTE PTR [rax+0x0],dh
  411069:	add    BYTE PTR [edx+0x0],dh
  41106d:	(bad)  
  41106e:	add    BYTE PTR [rax+rax*1+0x65],ah
  411072:	add    BYTE PTR [rcx+0x0],al
  411075:	jo     0x411077
  411077:	jo     0x411079
  411079:	ins    BYTE PTR es:[rdi],dx
  41107a:	add    BYTE PTR [rcx+0x0],bh
  41107d:	push   rbx
  41107e:	add    BYTE PTR [rbp+0x0],ah
  411081:	jb     0x411083
  411083:	jbe    0x411085
  411085:	imul   eax,DWORD PTR [rax],0x650063
  41108b:	push   rax
  41108c:	add    BYTE PTR [rcx+0x0],ah
  41108f:	movsxd eax,DWORD PTR [rax]
  411091:	imul   eax,DWORD PTR [rax],0x73
  411094:	add    BYTE PTR [rbx+rdx*1+0x55260003],ch
  41109b:	add    BYTE PTR [rax+0x0],dh
  41109e:	add    BYTE PTR [edx+0x0],dh
  4110a2:	(bad)  
  4110a3:	add    BYTE PTR [rax+rax*1+0x65],ah
  4110a7:	add    BYTE PTR [rbp+0x0],cl
  4110aa:	(bad)  
  4110ab:	add    BYTE PTR [rdx+0x0],ch
  4110ae:	outs   dx,DWORD PTR ds:[rsi]
  4110af:	add    BYTE PTR [rdx+0x0],dh
  4110b2:	push   rbp
  4110b3:	add    BYTE PTR [rax+0x0],dh
  4110b6:	add    BYTE PTR [edx+0x0],dh
  4110ba:	(bad)  
  4110bb:	add    BYTE PTR [rax+rax*1+0x65],ah
  4110bf:	add    BYTE PTR [rbx+0x3c],al
  4110c2:	add    eax,DWORD PTR [rax]
  4110c4:	(bad)  
  4110c5:	ins    BYTE PTR es:[rdi],dx
  4110c6:	add    BYTE PTR [rcx+0x0],ah
  4110c9:	jne    0x4110cb
  4110cb:	outs   dx,BYTE PTR ds:[rsi]
  4110cc:	add    BYTE PTR [rbx+0x0],ah
  4110cf:	push   0x75007300
  4110d4:	add    BYTE PTR [rax+0x0],dh
  4110d7:	add    BYTE PTR gs:[rdx+0x0],dh
  4110db:	add    BYTE PTR [edx+0x0],dh
  4110df:	imul   eax,DWORD PTR [rax],0x64da0064
  4110e5:	add    eax,DWORD PTR [rax]
  4110e7:	or     BYTE PTR [rax+rax*1+0x6f],ch
  4110eb:	add    BYTE PTR [rdi+0x0],ah
  4110ee:	outs   dx,DWORD PTR ds:[rsi]
  4110ef:	add    BYTE PTR [rdx+0x18000405],al
  4110f5:	jb     0x4110f7
  4110f7:	add    BYTE PTR gs:[rax+rax*1+0x65],ch
  4110fc:	add    BYTE PTR [rcx+0x0],ah
  4110ff:	jae    0x411101
  411101:	add    BYTE PTR gs:[rsi+0x0],ch
  411105:	outs   dx,DWORD PTR ds:[rsi]
  411106:	add    BYTE PTR [rax+rax*1+0x65],dh
  41110a:	add    BYTE PTR [rbx+0x0],dh
  41110d:	rex.RB adc al,0x4
  411110:	add    BYTE PTR [rax],dl
  411112:	jae    0x411114
  411114:	add    BYTE PTR gs:[rbx+0x0],ah
  411118:	jne    0x41111a
  41111a:	jb     0x41111c
  41111c:	imul   eax,DWORD PTR [rax],0x790074
  411122:	add    al,0x1e
  411124:	add    al,0x0
  411126:	add    BYTE PTR [rcx],al
  411129:	add    BYTE PTR [rax],al
  41112b:	add    bh,bh
  41112d:	(bad)  
  41112e:	(bad)  
  41112f:	inc    DWORD PTR [rcx]
  411131:	add    BYTE PTR [rax],al
  411133:	add    BYTE PTR [rax],al
  411135:	add    BYTE PTR [rax],al
  411137:	add    BYTE PTR [rdx+rax*1],cl
  41113a:	add    BYTE PTR [rax],al
  41113c:	add    BYTE PTR [rcx+0x53],dl
  41113f:	jns    0x4111b4
  411141:	je     0x4111a8
  411143:	ins    DWORD PTR es:[rdi],dx
  411144:	cs rex.R jb 0x4111a9
  411148:	ja     0x4111b3
  41114a:	outs   dx,BYTE PTR ds:[rsi]
  41114b:	addr32 sub al,0x20
  41114e:	push   rsi
  41114f:	gs jb  0x4111c5
  411152:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  411159:	xor    BYTE PTR cs:[rsi],ch
  41115c:	xor    BYTE PTR [rax+riz*1],ch
  41115f:	rex.XB jne 0x4111ce
  411162:	je     0x4111d9
  411164:	jb     0x4111cb
  411166:	cmp    eax,0x7475656e
  41116b:	jb     0x4111ce
  41116d:	ins    BYTE PTR es:[rdi],dx
  41116e:	sub    al,0x20
  411170:	push   rax
  411171:	jne    0x4111d5
  411173:	ins    BYTE PTR es:[rdi],dx
  411174:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  41117b:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  41117f:	(bad)  
  411180:	xor    BYTE PTR [rbx],dh
  411182:	xor    ax,0x3766
  411186:	xor    WORD PTR [rcx],si
  411189:	fs xor eax,0x61336130
  41118f:	add    eax,0x1
  411194:	adc    edx,DWORD PTR [rbx+0x79]
  411197:	jae    0x41120d
  411199:	gs ins DWORD PTR es:[rdi],dx
  41119b:	cs rex.R jb 0x411200
  41119f:	ja     0x41120a
  4111a1:	outs   dx,BYTE PTR ds:[rsi]
  4111a2:	movsxd rbp,DWORD PTR cs:[r15d+0x6e]
  4111a8:	add    al,BYTE PTR [rax]
  4111aa:	add    BYTE PTR [rax],al
  4111ac:	or     BYTE PTR [rcx+0x63],cl
  4111af:	outs   dx,DWORD PTR ds:[rsi]
  4111b0:	outs   dx,BYTE PTR ds:[rsi]
  4111b1:	rex.R (bad) 
  4111b3:	je     0x411216
  4111b5:	or     BYTE PTR [rcx+0x63],cl
  4111b8:	outs   dx,DWORD PTR ds:[rsi]
  4111b9:	outs   dx,BYTE PTR ds:[rsi]
  4111ba:	push   rbx
  4111bb:	imul   edi,DWORD PTR [rdx+0x65],0x13020407
  4111c2:	push   rbx
  4111c3:	jns    0x411238
  4111c5:	je     0x41122c
  4111c7:	ins    DWORD PTR es:[rdi],dx
  4111c8:	cs rex.R jb 0x41122d
  4111cc:	ja     0x411237
  4111ce:	outs   dx,BYTE PTR ds:[rsi]
  4111cf:	addr32 cs push rbx
  4111d2:	imul   edi,DWORD PTR [rdx+0x65],0x2
  4111d9:	add    al,BYTE PTR [rax]
  4111db:	add    BYTE PTR [rax],al
  4111dd:	or     DWORD PTR [rbx],eax
  4111df:	add    BYTE PTR [rax],al
  4111e1:	add    BYTE PTR [rip+0xfffffffffffffffc],al        # 0x4111e3
  4111e7:	adc    edx,DWORD PTR [rbx+0x79]
  4111ea:	jae    0x411260
  4111ec:	gs ins DWORD PTR es:[rdi],dx
  4111ee:	cs rex.R jb 0x411253
  4111f2:	ja     0x41125d
  4111f4:	outs   dx,BYTE PTR ds:[rsi]
  4111f5:	addr32 cs push rbx
  4111f8:	imul   edi,DWORD PTR [rdx+0x65],0x2
  4111ff:	add    eax,0x74646977
  411204:	push   0x69656806
  411209:	addr32 push 0x8000074
  41120f:	or     BYTE PTR [rdx],al
	...
  411219:	add    BYTE PTR [rax],al
  41121b:	add    BYTE PTR [rdi],cl
  41121d:	add    eax,DWORD PTR [rax]
  41121f:	add    BYTE PTR [rax],al
  411221:	xchg   esi,eax
  411222:	(bad)  
  411223:	add    BYTE PTR [rax],al
  411225:	add    al,BYTE PTR [rax]
  411227:	add    BYTE PTR [rcx],al
  411229:	add    BYTE PTR [rsi],al
  41122b:	add    BYTE PTR [rax],ah
  41122d:	and    BYTE PTR [rax],dl
  41122f:	add    BYTE PTR [rcx],al
  411231:	add    BYTE PTR [rax+rax*1],al
  411234:	call   0x6641123b
  411239:	add    BYTE PTR [rax],al
  41123b:	add    BYTE PTR [rax],dl
  41123d:	adc    BYTE PTR [rax],dl
  41123f:	add    BYTE PTR [rcx],al
  411241:	add    BYTE PTR [rax+rax*1],al
  411244:	sub    BYTE PTR [rcx],al
  411246:	add    BYTE PTR [rax],al
  411248:	rex.WRX add r8,QWORD PTR [rax]
  41124b:	add    BYTE PTR [rax],ah
  41124d:	and    BYTE PTR [rax],al
  41124f:	add    BYTE PTR [rcx],al
  411251:	add    BYTE PTR [rax],cl
  411253:	add    BYTE PTR [rax+0x76000008],ch
  411259:	add    al,0x0
  41125b:	add    BYTE PTR [rax],dl
  41125d:	adc    BYTE PTR [rax],al
  41125f:	add    BYTE PTR [rcx],al
  411261:	add    BYTE PTR [rax],cl
  411263:	add    BYTE PTR [rax+0x5],ch
  411266:	add    BYTE PTR [rax],al
  411268:	(bad)  
  411269:	or     eax,0x20200000
  41126e:	add    BYTE PTR [rax],al
  411270:	add    DWORD PTR [rax],eax
  411272:	and    BYTE PTR [rax],al
  411274:	test   al,0x10
  411276:	add    BYTE PTR [rax],al
  411278:	xchg   BYTE PTR [rdx],dl
  41127a:	add    BYTE PTR [rax],al
  41127c:	adc    BYTE PTR [rax],dl
  41127e:	add    BYTE PTR [rax],al
  411280:	add    DWORD PTR [rax],eax
  411282:	and    BYTE PTR [rax],al
  411284:	push   0x2e000004
  411289:	and    eax,DWORD PTR [rax]
  41128b:	add    BYTE PTR [rax],ch
  41128d:	add    BYTE PTR [rax],al
  41128f:	add    BYTE PTR [rax],ah
  411291:	add    BYTE PTR [rax],al
  411293:	add    BYTE PTR [rax+0x0],al
  411296:	add    BYTE PTR [rax],al
  411298:	add    DWORD PTR [rax],eax
  41129a:	add    al,0x0
  41129c:	add    BYTE PTR [rax],al
  41129e:	add    BYTE PTR [rax],al
  4112a0:	add    BYTE PTR [rdx],al
	...
  4112ba:	add    BYTE PTR [rax],0x0
  4112bd:	add    BYTE PTR [rax],0x0
  4112c0:	add    BYTE PTR [rax+0x800080],al
  4112c6:	add    BYTE PTR [rax],al
  4112c8:	add    BYTE PTR [rax],0x80
  4112cb:	add    BYTE PTR [rax-0x7fffff80],al
  4112d1:	add    BYTE PTR [rax-0x3f3f4000],0x0
  4112d8:	add    BYTE PTR [rax],al
  4112da:	inc    DWORD PTR [rax]
  4112dc:	add    bh,bh
  4112de:	add    BYTE PTR [rax],al
  4112e0:	add    bh,bh
  4112e2:	inc    DWORD PTR [rax]
  4112e4:	inc    DWORD PTR [rax]
  4112e6:	add    BYTE PTR [rax],al
  4112e8:	inc    DWORD PTR [rax]
  4112ea:	inc    DWORD PTR [rax]
  4112ec:	(bad)  
  4112ed:	inc    DWORD PTR [rax]
  4112ef:	add    bh,bh
  4112f1:	(bad)  
  4112f2:	inc    DWORD PTR [rax]
  4112f4:	add    BYTE PTR [rax],al
  4112f6:	ja     0x41136f
  4112f8:	ja     0x411371
  4112fa:	jbe    0x411373
  4112fc:	jbe    0x411375
  4112fe:	(bad)  
  4112ff:	add    BYTE PTR [rax],al
  411301:	add    BYTE PTR [rax],al
  411303:	add    BYTE PTR [rax],al
  411305:	add    BYTE PTR [rdi-0x79],bh
  411308:	xchg   DWORD PTR [rdi-0x79],esi
  41130b:	xchg   DWORD PTR [rdi+0x7087],eax
  411311:	add    BYTE PTR [rax],al
  411313:	add    BYTE PTR [rax],al
  411315:	add    BYTE PTR [rdi-0x78],bh
  411318:	mov    BYTE PTR [rax-0x77777778],cl
  41131e:	(bad)  
  41131f:	add    BYTE PTR [rax],al
  411321:	add    BYTE PTR [rax],al
  411323:	add    BYTE PTR [rax],al
  411325:	add    BYTE PTR [rdi-0x78],bh
  411328:	(bad)  
  411329:	(bad)  
  41132a:	(bad)
  41132e:	push   rax
  41132f:	add    BYTE PTR [rax],al
  411331:	add    BYTE PTR [rax],al
  411333:	add    BYTE PTR [rax],al
  411335:	add    BYTE PTR [rdi-0x71],bh
  411338:	jbe    0x4113b0
  41133a:	mov    BYTE PTR [rdi+0x6088aa],cl
  411340:	add    BYTE PTR [rax],al
  411342:	add    BYTE PTR [rax],al
  411344:	add    BYTE PTR [rax],al
  411346:	jg     0x4112ce
  411348:	(bad)  
  411349:	clc    
  41134a:	xchg   BYTE PTR [rax+0x70888f],cl
  411350:	add    BYTE PTR [rax],al
  411352:	add    BYTE PTR [rax],al
  411354:	add    BYTE PTR [rax],al
  411356:	jg     0x4113cf
  411358:	jbe    0x4112e9
  41135a:	xchg   DWORD PTR [rax-0x8],edi
  41135d:	mov    BYTE PTR [rax+0x0],ah
  411360:	add    BYTE PTR [rax],al
  411362:	add    BYTE PTR [rax],al
  411364:	add    BYTE PTR [rax],al
  411366:	jg     0x4112f7
  411368:	(bad)  
  411369:	js     0x4112f3
  41136b:	outs   dx,DWORD PTR ds:[rsi]
  41136c:	mov    BYTE PTR [rax+0x70],cl
  411372:	add    BYTE PTR [rax],al
  411374:	add    BYTE PTR [rax],al
  411376:	jg     0x411370
  411378:	clc    
  411379:	js     0x411302
  41137b:	push   0x60f7f8
  411380:	add    BYTE PTR [rax],al
  411382:	add    BYTE PTR [rax],al
  411384:	add    BYTE PTR [rax],al
  411386:	jg     0x4113ff
  411388:	mov    BYTE PTR [eax+0x70888f78],cl
  41138f:	add    BYTE PTR [rax],al
  411391:	add    BYTE PTR [rax],al
  411393:	add    BYTE PTR [rax],al
  411395:	add    BYTE PTR [rdi-0x79],bh
  411398:	clc    
  411399:	mov    BYTE PTR [rsi+0x60888f78],al
  41139f:	add    BYTE PTR [rax],al
  4113a1:	add    BYTE PTR [rax],al
  4113a3:	add    BYTE PTR [rax],al
  4113a5:	add    BYTE PTR [rdi-0x78],bh
  4113a8:	jg     0x4113a9
  4113aa:	mov    BYTE PTR [rdi+0x708888],al
  4113b0:	add    BYTE PTR [rax],al
  4113b2:	add    BYTE PTR [rax],al
  4113b4:	add    BYTE PTR [rax],al
  4113b6:	jg     0x4113b0
  4113b8:	xchg   DWORD PTR [rdi+0x78],esi
  4113bb:	xchg   DWORD PTR [rax-0x8],ebp
  4113be:	(bad)  
  4113bf:	add    BYTE PTR [rax],al
  4113c1:	add    BYTE PTR [rax],al
  4113c3:	add    BYTE PTR [rax],al
  4113c5:	add    BYTE PTR [rdi-0x78070771],cl
  4113cb:	mov    BYTE PTR [rsi+0x7088],al
  4113d1:	add    BYTE PTR [rax],al
  4113d3:	add    BYTE PTR [rax],al
  4113d5:	add    BYTE PTR [rdi-0x8],bh
  4113d8:	dec    DWORD PTR [rdi-0x37879078]
  4113de:	jo     0x4113e0
  4113e0:	add    BYTE PTR [rax],al
  4113e2:	add    BYTE PTR [rax],al
  4113e4:	add    BYTE PTR [rax],al
  4113e6:	(bad)  
  4113e7:	(bad)  
  4113e8:	(bad)  
  4113e9:	(bad)  
  4113ea:	inc    DWORD PTR [rdi+0x707688]
  4113f0:	add    BYTE PTR [rax],al
  4113f2:	add    BYTE PTR [rax],al
  4113f4:	add    BYTE PTR [rax],al
  4113f6:	jg     0x411387
  4113f8:	mov    al,bh
  4113fa:	mov    BYTE PTR [rax+0x70786f],cl
  411400:	add    BYTE PTR [rax],al
  411402:	add    BYTE PTR [rax],al
  411404:	add    BYTE PTR [rax],al
  411406:	mov    BYTE PTR [rax+0x67787888],cl
  41140c:	ja     0x411395
  41140e:	jbe    0x411410
  411410:	add    BYTE PTR [rax],al
  411412:	add    BYTE PTR [rax],al
  411414:	add    BYTE PTR [rax],al
  411416:	jg     0x411410
  411418:	clc    
  411419:	clc    
  41141a:	(bad)  
  41141b:	dec    DWORD PTR [rax+0x70776f]
  411421:	add    BYTE PTR [rax],al
  411423:	add    BYTE PTR [rax],al
  411425:	add    BYTE PTR [rdi-0x70000001],cl
  41142b:	(bad)  
  41142c:	(bad)  
  41142d:	jbe    0x4113b6
  41142f:	jbe    0x4114a5
  411431:	ja     0x4113b3
  411433:	add    BYTE PTR [rax],al
  411435:	add    BYTE PTR [rdi-0x771],cl
  41143b:	dec    DWORD PTR [rdi+0x788878f7]
  411441:	ja     0x4114aa
  411443:	add    BYTE PTR [rax],al
  411445:	add    BYTE PTR [rdi-0x1],bh
  411448:	dec    DWORD PTR [rdi-0x7077071]
  41144e:	xchg   DWORD PTR [esi+0x707788],eax
  411455:	add    BYTE PTR [rdi-0x1],cl
  41145b:	(bad)  
  41145c:	(bad)  
  41145d:	push   QWORD PTR [rdi-0x78]
  411460:	ja     0x4114a6
  411462:	fs jo  0x411465
  411465:	add    BYTE PTR [rax+0x77878787],cl
  41146b:	jbe    0x4114e3
  41146d:	jbe    0x4113f6
  41146f:	mov    BYTE PTR [rax+rax*1+0x0],bh
  411473:	add    BYTE PTR [rax],al
  411475:	add    BYTE PTR [rax-0x70707001],cl
  41147b:	(bad)  
  41147c:	(bad)
  411480:	xchg   DWORD PTR [rax],eax
  411482:	add    BYTE PTR [rax],al
  411484:	add    BYTE PTR [rax],al
  411486:	(bad)  
  411487:	(bad)  
  411488:	(bad)  
  411489:	(bad)  
  41148a:	(bad)  
  41148b:	(bad)  
  41148c:	clc    
  41148d:	clc    
  41148e:	xchg   DWORD PTR [rax+0x87],ecx
  411494:	add    BYTE PTR [rax],al
  411496:	(bad)  
  411497:	(bad)  
  411498:	(bad)  
  411499:	dec    DWORD PTR [rdi+0x78f88f8f]
  41149f:	js     0x411429
  4114a1:	fs jbe 0x411424
  4114a4:	add    BYTE PTR [rax],al
  4114a6:	(bad)  
  4114a7:	(bad)  
  4114a8:	dec    DWORD PTR [rdi-0x77000001]
  4114ae:	add    BYTE PTR [rdi+0x678888],0x0
  4114b5:	add    BYTE PTR [rdi-0x1],cl
  4114bb:	(bad)  
  4114bc:	clc    
  4114bd:	clc    
  4114be:	jo     0x4114c8
  4114c0:	jbe    0x411539
  4114c2:	add    BYTE PTR [rax],0x0
  4114c5:	add    BYTE PTR [rdi-0x1],cl
  4114cb:	(bad)  
  4114cc:	(bad)  
  4114cd:	inc    DWORD PTR [rax+0x0]
  4114d3:	add    BYTE PTR [rax],al
  4114d5:	add    BYTE PTR [rax-0x77788778],cl
  4114db:	js     0x411464
  4114dd:	xchg   DWORD PTR [rax+0x0],eax
	...
  4114f3:	add    al,dh
  4114f5:	add    BYTE PTR [rdi],al
  4114f7:	push   rax
  4114f9:	add    BYTE PTR [rdi],al
  4114fb:	push   rax
  4114fd:	add    BYTE PTR [rdi],al
  4114ff:	push   rax
  411501:	add    BYTE PTR [rdi],al
  411503:	push   rax
  411505:	add    BYTE PTR [rdi],al
  411507:	push   rax
  411509:	add    BYTE PTR [rdi],al
  41150b:	push   rax
  41150d:	add    BYTE PTR [rdi],al
  41150f:	push   rax
  411511:	add    BYTE PTR [rdi],al
  411513:	push   rax
  411515:	add    BYTE PTR [rdi],al
  411517:	push   rax
  411519:	add    BYTE PTR [rdi],al
  41151b:	push   rax
  41151d:	add    BYTE PTR [rdi],al
  41151f:	push   rax
  411521:	add    BYTE PTR [rdi],al
  411523:	push   rax
  411525:	add    BYTE PTR [rdi],al
  411527:	push   rax
  411529:	add    BYTE PTR [rdi],al
  41152b:	push   rax
  41152d:	add    BYTE PTR [rdi],al
  41152f:	push   rax
  411531:	add    BYTE PTR [rdi],al
  411533:	push   rax
  411535:	add    BYTE PTR [rdi],al
  411537:	push   rax
  411539:	add    BYTE PTR [rbx],al
  41153b:	push   rax
  41153d:	add    BYTE PTR [rcx],al
  41153f:	push   rax
  411541:	add    BYTE PTR [rax],al
  411543:	(bad)  
  411544:	lock add BYTE PTR [rax],al
  411547:	add    esi,eax
  411549:	add    BYTE PTR [rax],al
  41154b:	add    eax,esi
  41154d:	add    BYTE PTR [rax],al
  41154f:	add    eax,esi
  411551:	add    BYTE PTR [rax],al
  411553:	(bad)  
  411554:	lock add BYTE PTR [rax],al
  411557:	(bad)  
  411558:	lock add BYTE PTR [rax],al
  41155b:	(bad)  
  41155c:	lock add BYTE PTR [rax],al
  41155f:	add    eax,esi
  411561:	add    BYTE PTR [rbx+rax*1],al
  411564:	lock add BYTE PTR [rsi],al
  411567:	(bad)  
  411568:	lock add BYTE PTR [rdi],al
  41156b:	push   rax
  41156d:	add    BYTE PTR [rdi],al
  41156f:	(bad)  
  411570:	(bad)  
  411571:	(bad)  
  411572:	(bad)  
  411573:	jmp    FWORD PTR [rax]
  411575:	add    BYTE PTR [rax],al
  411577:	add    BYTE PTR [rax],dl
  411579:	add    BYTE PTR [rax],al
  41157b:	add    BYTE PTR [rax],ah
  41157d:	add    BYTE PTR [rax],al
  41157f:	add    BYTE PTR [rcx],al
  411581:	add    BYTE PTR [rax+rax*1],al
  411584:	add    BYTE PTR [rax],al
  411586:	add    BYTE PTR [rax],al
  411588:	add    BYTE PTR [rax],0x0
	...
  41159f:	add    BYTE PTR [rax],al
  4115a1:	add    BYTE PTR [rax+0x800000],al
  4115a7:	add    BYTE PTR [rax],al
  4115a9:	add    BYTE PTR [rax+0x8000],0x0
  4115b0:	add    BYTE PTR [rax],0x80
  4115b3:	add    BYTE PTR [rax-0x7fffff80],al
  4115b9:	add    BYTE PTR [rax-0x3f3f4000],0x0
  4115c0:	add    BYTE PTR [rax],al
  4115c2:	inc    DWORD PTR [rax]
  4115c4:	add    bh,bh
  4115c6:	add    BYTE PTR [rax],al
  4115c8:	add    bh,bh
  4115ca:	inc    DWORD PTR [rax]
  4115cc:	inc    DWORD PTR [rax]
  4115ce:	add    BYTE PTR [rax],al
  4115d0:	inc    DWORD PTR [rax]
  4115d2:	inc    DWORD PTR [rax]
  4115d4:	(bad)  
  4115d5:	inc    DWORD PTR [rax]
  4115d7:	add    bh,bh
  4115d9:	(bad)  
  4115da:	inc    DWORD PTR [rax]
  4115dc:	(bad)  
  4115dd:	gs addr32 rex.RXB
  4115e0:	rex.RX add BYTE PTR [rax],r8b
  4115e3:	add    BYTE PTR [rdi],al
  4115e5:	xchg   DWORD PTR [rdi+0x8487],eax
  4115eb:	add    BYTE PTR [rsi],al
  4115ed:	clc    
  4115ee:	mov    BYTE PTR [rsi+0x86],ah
  4115f4:	(bad)  
  4115f5:	dec    DWORD PTR [rdi+0x85aa]
  4115fb:	add    BYTE PTR [rdi],al
  4115fd:	clc    
  4115fe:	mov    BYTE PTR [rdi+0x76],dh
  411601:	add    BYTE PTR [rax],al
  411603:	add    BYTE PTR [rdi],al
  411605:	dec    DWORD PTR [rdi+0x7687]
  41160b:	add    BYTE PTR [rdi],al
  41160d:	clc    
  41160e:	mov    BYTE PTR [rax+0x47],cl
  411614:	(bad)  
  411615:	dec    DWORD PTR [rax+0x6787]
  41161b:	add    BYTE PTR [rdi],al
  41161d:	xchg   DWORD PTR [rsi+0x77],esi
  411620:	test   BYTE PTR [rax],0x0
  411623:	add    BYTE PTR [rdi],al
  411625:	(bad)  
  411626:	(bad)  
  411627:	clc    
  411628:	(bad)  
  411629:	jo     0x41162b
  41162b:	add    BYTE PTR [rax],cl
  41162d:	(bad)  
  41162e:	(bad)  
  41162f:	push   rdi
  411631:	test   BYTE PTR [rax],0x0
  411634:	(bad)  
  411635:	mov    BYTE PTR [rax+0x77],bh
  411638:	ja     0x4116b9
  41163a:	ja     0x4116ac
  41163c:	or     al,bh
  41163e:	clc    
  41163f:	mov    BYTE PTR [rsi+0x8778707],al
  411645:	(bad)  
  411646:	(bad)  
  411647:	push   rdi
  411649:	(bad)  
  41164a:	or     BYTE PTR [rax],0x8
  41164d:	js     0x4116c7
  41164f:	js     0x4116c9
  411651:	or     BYTE PTR [rax+0x0],al
  411657:	add    BYTE PTR [rax],al
  411659:	add    BYTE PTR [rdi+0x3f8000],al
  41165f:	add    BYTE PTR [rax-0x7fffffc1],al
  411665:	(bad)  
  411666:	add    BYTE PTR [rax],al
  411668:	cmp    BYTE PTR [rdi],0x0
  41166b:	add    BYTE PTR [rax-0x7fffffc1],al
  411671:	(bad)  
  411672:	add    BYTE PTR [rax],al
  411674:	cmp    BYTE PTR [rdi],0x0
  411677:	add    BYTE PTR [rax-0x7fffffc1],al
  41167d:	(bad)  
  41167e:	add    BYTE PTR [rax],al
  411680:	sbb    BYTE PTR [rdi],0x0
  411683:	add    BYTE PTR [rax-0x7ffffff1],al
  411689:	add    DWORD PTR [rax],eax
  41168b:	add    BYTE PTR [rax-0x7fffffe0],al
  411691:	add    BYTE PTR es:[rax],al
  411694:	and    BYTE PTR [rdi],0x0
  411697:	add    bh,bh
  411699:	repz add BYTE PTR [rax],al
  41169c:	sub    BYTE PTR [rax],al
  41169e:	add    BYTE PTR [rax],al
  4116a0:	and    BYTE PTR [rax],al
  4116a2:	add    BYTE PTR [rax],al
  4116a4:	add    BYTE PTR [rax],al
  4116a7:	add    BYTE PTR [rcx],al
  4116a9:	add    BYTE PTR [rax],cl
  4116ab:	add    BYTE PTR [rax],al
  4116ad:	add    BYTE PTR [rax],al
  4116af:	add    BYTE PTR [rax],al
  4116b1:	add    al,0x0
	...
  4116bb:	add    BYTE PTR [rax],al
  4116bd:	add    DWORD PTR [rax],eax
  4116bf:	add    BYTE PTR [rax],al
  4116c1:	add    DWORD PTR [rax],eax
  4116c3:	add    BYTE PTR [rax],al
  4116c5:	add    BYTE PTR [rax],al
  4116c7:	add    BYTE PTR [rbx+0x48],ah
  4116ca:	xor    eax,DWORD PTR [rax]
  4116cc:	ins    DWORD PTR es:[rdi],dx
  4116cd:	push   rbp
  4116ce:	rex.X add BYTE PTR [rax+0x55],sil
  4116d2:	add    BYTE PTR [r9+rbx*2+0x45],sil
  4116d7:	add    BYTE PTR [rsi+0x5d],dh
  4116da:	rex.WB add BYTE PTR [r11+0x61],dil
  4116de:	rex.WRB add BYTE PTR [r13+0x63],r15b
  4116e2:	rex.WRX add BYTE PTR [rdx+0x66],r15b
  4116e6:	push   rsi
  4116e7:	add    BYTE PTR [rdi+riz*2+0x58],bh
  4116eb:	add    BYTE PTR [rbp+0x68],bh
  4116ee:	pop    rcx
  4116ef:	add    BYTE PTR [rdi+0x6b],bh
  4116f2:	pop    rsp
  4116f3:	add    BYTE PTR [rcx-0x7dffab99],al
  4116f9:	imul   edx,DWORD PTR [rsi+0x0],0x586b83
  411700:	sub    BYTE PTR [rbp+rbx*2+0x0],0x86
  411705:	outs   dx,DWORD PTR ds:[rsi]
  411706:	pop    rbp
  411707:	add    BYTE PTR [rdx-0x7dffa190],cl
  41170d:	outs   dx,DWORD PTR ds:[rsi]
  41170e:	(bad)  
  41170f:	add    BYTE PTR [rbx-0x7aff9d90],al
  411715:	jb     0x41177a
  411717:	add    BYTE PTR [rbp-0x78ff9a8d],al
  41171d:	je     0x411785
  41171f:	add    BYTE PTR [rsp+rsi*2+0x758d0062],cl
  411726:	add    BYTE PTR gs:[rcx-0x75ff9689],cl
  41172d:	jns    0x411799
  41172f:	add    BYTE PTR [rbx-0x72ff9386],cl
  411735:	jnp    0x4117a5
  411737:	add    BYTE PTR [rax-0x6eff9b8b],dl
  41173d:	jns    0x4117a6
  41173f:	add    BYTE PTR [rcx+rdi*2+0x79910065],dl
  411746:	push   0x697a9400
  41174b:	add    BYTE PTR [rdx-0x6aff9483],dl
  411751:	jl     0x4117bd
  411753:	add    BYTE PTR [rdx-0x6aff9383],dl
  411759:	jle    0x4117c8
  41175b:	add    BYTE PTR [rax-0x66ff9483],bl
  411761:	jle    0x4117d0
  411763:	add    BYTE PTR [rsi-0x6eff8e82],cl
  411769:	jle    0x4117dc
  41176b:	add    BYTE PTR [rsi],ch
  41176d:	fwait
  41176e:	add    BYTE PTR [rax],al
  411770:	cs int3 
  411772:	add    BYTE PTR [rax],al
  411774:	xor    ecx,ecx
  411776:	add    BYTE PTR [rax],al
  411778:	or     al,0xff
  41177a:	add    BYTE PTR [rax],al
  41177c:	xchg   esi,eax
  41177d:	sub    BYTE PTR [rdi+0x0],0x96
  411781:	(bad)  
  411782:	jb     0x411784
  411784:	xchg   ecx,eax
  411785:	(bad)  
  411786:	jne    0x411788
  411788:	cdq    
  411789:	(bad)  
  41178a:	jno    0x41178c
  41178c:	lahf   
  41178d:	test   BYTE PTR [rbx+0x0],dh
  411790:	popf   
  411791:	test   DWORD PTR [rbp+0x0],esi
  411794:	xchg   ebp,eax
  411795:	xchg   BYTE PTR [rcx+0x0],bh
  411798:	lahf   
  411799:	mov    DWORD PTR [rcx+0x0],edi
  41179c:	cwde   
  41179d:	mov    DWORD PTR [rbp+0x0],edi
  4117a0:	movabs eax,ds:0xa500798ba7007a8a
  4117a9:	lea    edi,[rbp+0x0]
  4117ac:	test   eax,0x9a007e8f
  4117b1:	mov    WORD PTR [rcx-0x7b716400],es
  4117b7:	add    BYTE PTR [rdi-0x59ff796f],bl
  4117bd:	nop
  4117be:	add    DWORD PTR [rax],0x8593a7
  4117c4:	stos   BYTE PTR es:[rdi],al
  4117c5:	xchg   ecx,eax
  4117c6:	add    DWORD PTR [rax],0x8192ad
  4117cc:	test   eax,0xad008494
  4117d1:	xchg   ebp,eax
  4117d2:	xchg   BYTE PTR [rax],al
  4117d4:	movabs eax,ds:0xad008c97a3008994
  4117dd:	xchg   edi,eax
  4117de:	mov    DWORD PTR [rax],eax
  4117e0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  4117e1:	cdq    
  4117e2:	mov    es,WORD PTR [rax]
  4117e4:	lods   eax,DWORD PTR ds:[rsi]
  4117e5:	cdq    
  4117e6:	mov    al,BYTE PTR [rax]
  4117e8:	scas   eax,DWORD PTR es:[rdi]
  4117e9:	pushf  
  4117ea:	pop    QWORD PTR [rax]
  4117ec:	mov    al,0x97
  4117ee:	mov    BYTE PTR [rax],al
  4117f0:	mov    dl,0x99
  4117f2:	mov    DWORD PTR [rax],eax
  4117f4:	mov    ah,0x9a
  4117f6:	mov    al,BYTE PTR [rax]
  4117f8:	mov    ch,0x9b
  4117fa:	lea    eax,[rax]
  4117fc:	mov    ch,0x9c
  4117fe:	lea    eax,[rax]
  411800:	mov    ecx,0xa7008e9e
  411805:	fwait
  411806:	xchg   ecx,eax
  411807:	add    BYTE PTR [rdi-0x51ff6d64],ah
  41180d:	sahf   
  41180e:	xchg   edx,eax
  41180f:	add    BYTE PTR [rdx-0x47ff6a62],ch
  411815:	sahf   
  411816:	nop
  411817:	add    BYTE PTR [rbx-0x53ff6860],ch
  41181d:	movabs ds:0xa5af009ba4ae0099,al
  411826:	popf   
  411827:	add    BYTE PTR [rdx-0x40ff6e60],bh
  41182d:	movabs ds:0xa3bc0094a2bb0093,al
  411836:	xchg   esi,eax
  411837:	add    BYTE PTR [rdx-0x42ff685c],bh
  41183d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  41183e:	xchg   ebp,eax
  41183f:	add    BYTE PTR [rcx-0x47ff6159],dh
  411845:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  411846:	(bad)  
  411847:	add    BYTE PTR [rsi-0x48ff675a],bh
  41184d:	test   al,0x9e
  41184f:	add    BYTE PTR [rsi-0x4dff6457],bh
  411855:	test   eax,0xaeb600a1
  41185a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41185b:	add    BYTE PTR [rsi-0x47ff5d53],bh
  411861:	scas   eax,DWORD PTR es:[rdi]
  411862:	test   al,0x0
  411864:	mov    ecx,0xba00a9b1
  411869:	mov    bl,0xac
  41186b:	add    BYTE PTR [rbx-0x43ff524c],bh
  411871:	mov    ch,0xad
  411873:	add    BYTE PTR [rbp-0x40ff4f4a],bh
  411879:	mov    eax,0xa3c600b1
  41187e:	xchg   edx,eax
  41187f:	add    bh,al
  411881:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  411882:	xchg   esi,eax
  411883:	add    cl,al
  411885:	stos   BYTE PTR es:[rdi],al
  411886:	sahf   
  411887:	add    al,cl
  411889:	stos   DWORD PTR es:[rdi],eax
  41188a:	fwait
  41188b:	add    bl,al
  41188d:	lods   eax,DWORD PTR ds:[rsi]
  41188e:	movabs al,ds:0xa3b0ca00a5b1c700
  411897:	add    al,cl
  411899:	mov    bl,0xa8
  41189b:	add    cl,cl
  41189d:	mov    ch,0xaa
  41189f:	add    bh,cl
  4118a1:	mov    bh,0xab
  4118a3:	add    dh,al
  4118a5:	mov    ecx,0xb8cb00af
  4118aa:	lods   al,BYTE PTR ds:[rsi]
  4118ab:	add    ah,cl
  4118ad:	mov    eax,0xb1d200ac
  4118b2:	movabs ds:0xa9b8d300a4b4d500,al
  4118bb:	add    ch,dl
  4118bd:	mov    edx,0xbad200ab
  4118c2:	scas   al,BYTE PTR es:[rdi]
  4118c3:	add    ah,dl
  4118c5:	mov    ebx,0xbcd700ad
  4118ca:	scas   al,BYTE PTR es:[rdi]
  4118cb:	add    al,al
  4118cd:	mov    ecx,0xbac700b3
  4118d2:	mov    al,0x0
  4118d4:	sar    BYTE PTR [rdx-0x433eff4c],0xb5
  4118db:	add    bh,cl
  4118dd:	mov    esp,0xbed500b3
  4118e2:	mov    cl,0x0
  4118e4:	rol    cl,cl
  4118e6:	mov    bh,0x0
  4118e8:	rol    dl,cl
  4118ea:	mov    ecx,0xbdc6d500
  4118ef:	add    bl,ah
  4118f1:	enter  0xbb,0xe4
  4118f5:	retf   
  4118f6:	mov    edi,0xc0c7d600
  4118fb:	add    ch,dl
  4118fd:	enter  0xc0,0xd9
  411901:	retf   0xc3
  411904:	fcmovne st,st(6)
  411906:	mov    BYTE PTR [rax],0xdb
  411909:	iret   
  41190a:	enter  0xdc00,0xd1
  41190e:	retf   0xde00
  411911:	ror    ebp,cl
  411913:	add    bh,bl
  411915:	(bad)  
  411916:	iret   
  411917:	add    al,ch
  411919:	iret   
  41191a:	ret    0xeb00
  41191d:	rol    bh,cl
  41191f:	add    dl,ah
  411921:	(bad)  
  411922:	(bad)  
  411923:	add    ah,ah
  411925:	(bad)  
  411926:	(bad)  
  411927:	add    cl,dh
  411929:	rol    ecx,1
  41192b:	add    bl,dh
  41192d:	(bad)  
  41192e:	mov    DWORD PTR [rax],0xc8d6f3
  411934:	hlt    
  411935:	(bad)  
  411936:	retf   0xf300
  411939:	fmul   st,st(2)
  41193b:	add    ah,dh
  41193d:	fmul   st,st(2)
  41193f:	add    ah,dh
  411941:	fxch   st(5)
  411943:	add    al,ah
  411945:	fcom   st(2)
  411947:	add    cl,ah
  411949:	fcmovbe st,st(5)
  41194b:	add    ch,ch
  41194d:	fcmovnbe st,st(3)
  41194f:	add    ch,ch
  411951:	fcmovnbe st,st(4)
  411953:	add    ah,ah
  411955:	fstp   st(2)
  411957:	add    dl,ch
  411959:	fcompp 
  41195b:	add    ch,dh
  41195d:	fcmovnbe st,st(0)
  41195f:	add    ch,dh
  411961:	fst    st(1)
  411963:	add    ch,dh
  411965:	(bad)  
  411967:	add    dh,ah
  411969:	loopne 0x411948
  41196b:	add    bl,ch
  41196d:	loopne 0x411949
  41196f:	add    ah,ch
  411971:	loope  0x41194e
  411973:	add    ah,ch
  411975:	loop   0x411955
  411977:	add    dh,dh
  411979:	loopne 0x411950
  41197b:	add    dh,dh
  41197d:	loope  0x411957
  41197f:	add    bh,dh
  411981:	in     al,0xda
  411983:	add    bh,dh
  411985:	in     eax,0xdc
  411987:	add    bh,ah
  411989:	jrcxz  0x41196b
  41198b:	add    al,ch
  41198d:	in     al,0xe1
  41198f:	add    cl,ch
  411991:	out    0xe5,eax
  411993:	add    al,bh
  411995:	jmp    0xffffffffeb3a1a7b
  41199a:	in     al,0x0
  41199c:	stc    
  41199d:	in     al,dx
  41199e:	out    0x0,al
  4119a0:	lock in eax,dx
  4119a2:	jmp    0x4119a4
  4119a4:	cli    
  4119a5:	out    dx,al
  4119a6:	call   0xffffffffeb3213ab
  4119ab:	add    bl,bh
  4119ad:	icebp  
  4119ae:	in     eax,dx
  4119af:	add    ah,bh
  4119b1:	repnz out dx,al
  4119b3:	add    ah,bh
  4119b5:	hlt    
  4119b6:	out    dx,eax
  4119b7:	add    bl,bh
  4119b9:	repz lock add ah,bh
  4119bd:	repz lock add ah,bh
  4119c1:	cmc    
  4119c2:	icebp  
  4119c3:	add    ch,bh
  4119c5:	div    ah
  4119c7:	add    ah,bh
  4119c9:	clc    
  4119ca:	test   BYTE PTR [rax],0xfd
  4119cd:	cli    
  4119ce:	stc    
  4119cf:	add    dh,bh
  4119d1:	cld    
  4119d2:	cli    
  4119d3:	add    dh,bh
  4119d5:	(bad)  
  4119d6:	inc    BYTE PTR [rax]
	...
  411ac0:	(bad)  
  411ac1:	(bad)  
  411ac2:	inc    DWORD PTR [rax]
  411ac4:	add    BYTE PTR [rax],al
  411ac6:	add    BYTE PTR [rax],al
  411ac8:	(bad)  
  411ac9:	(bad)  
  411aca:	(bad)  
  411acb:	adc    dl,BYTE PTR [rdx]
  411acd:	adc    dl,BYTE PTR [rdx]
  411acf:	adc    cl,BYTE PTR [rbx]
  411ad1:	or     ecx,DWORD PTR [rbx]
  411ad3:	or     ecx,DWORD PTR [rax]
  411ad5:	or     BYTE PTR [rax],cl
  411ad7:	or     BYTE PTR [rax],cl
	...
  411ae5:	add    BYTE PTR [rax],al
  411ae7:	add    BYTE PTR [rcx],bl
  411ae9:	ret    0x6e7b
  411aec:	outs   dx,BYTE PTR ds:[rsi]
  411aed:	outs   dx,BYTE PTR ds:[rsi]
  411aee:	outs   dx,BYTE PTR ds:[rsi]
  411aef:	outs   dx,BYTE PTR ds:[rsi]
  411af0:	outs   dx,BYTE PTR ds:[rsi]
  411af1:	outs   dx,BYTE PTR ds:[rsi]
  411af2:	outs   dx,BYTE PTR ds:[rsi]
  411af3:	outs   dx,BYTE PTR ds:[rsi]
  411af4:	outs   dx,BYTE PTR ds:[rsi]
  411af5:	outs   dx,BYTE PTR ds:[rsi]
  411af6:	outs   dx,BYTE PTR ds:[rsi]
  411af7:	outs   dx,BYTE PTR ds:[rsi]
  411af8:	or     DWORD PTR [rax],eax
	...
  411b06:	add    BYTE PTR [rax],al
  411b08:	sbb    al,dl
  411b0a:	lahf   
  411b0b:	lahf   
  411b0c:	lahf   
  411b0d:	lahf   
  411b0e:	pushf  
  411b0f:	pushf  
  411b10:	lahf   
  411b11:	(bad)  
  411b12:	pushf  
  411b13:	(bad)  
  411b14:	pushf  
  411b15:	pushf  
  411b16:	(bad)  
  411b17:	jno    0x411b24
	...
  411b25:	add    BYTE PTR [rax],al
  411b27:	add    BYTE PTR [rdx],bl
  411b29:	ret    0x9f9f
  411b2c:	lahf   
  411b2d:	lahf   
  411b2e:	lahf   
  411b2f:	lahf   
  411b30:	lahf   
  411b31:	lahf   
  411b32:	lahf   
  411b33:	pushf  
  411b34:	sub    ebp,DWORD PTR [rdx]
  411b36:	pushf  
  411b37:	jno    0x411b42
	...
  411b45:	add    BYTE PTR [rax],al
  411b47:	add    BYTE PTR [rax],ch
  411b49:	ret    0x95a7
  411b4c:	pop    rsi
  411b4d:	xor    edx,DWORD PTR [rdx]
  411b4f:	(bad)  
  411b50:	rex.WRX mov r11,QWORD PTR [rdi-0x60d3d261]
  411b57:	jno    0x411b64
	...
  411b65:	add    BYTE PTR [rax],al
  411b67:	add    BYTE PTR [rax],dh
  411b69:	ret    0x3396
  411b6c:	xchg   ebx,eax
  411b6d:	mov    ah,0xaf
  411b6f:	lea    esi,[rcx+0x9]
  411b72:	jle    0x411b13
  411b74:	lahf   
  411b75:	lahf   
  411b76:	lahf   
  411b77:	jno    0x411b8b
	...
  411b85:	add    BYTE PTR [rax],al
  411b87:	add    BYTE PTR [rdx+rax*8],dh
  411b8a:	and    eax,0x49181f33
  411b8f:	ret    0x3391
  411b92:	and    eax,0x9f9f9f9f
  411b97:	jno    0x411bab
	...
  411ba5:	add    BYTE PTR [rax],al
  411ba7:	add    BYTE PTR [rdx+rax*8],dh
  411baa:	scas   al,BYTE PTR es:[rdi]
  411bab:	scas   al,BYTE PTR es:[rdi]
  411bac:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  411bad:	scas   al,BYTE PTR es:[rdi]
  411bae:	sbb    BYTE PTR [rcx-0x60e7bd71],bh
  411bb4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  411bb5:	lahf   
  411bb6:	lahf   
  411bb7:	jno    0x411bcf
	...
  411bc5:	add    BYTE PTR [rax],al
  411bc7:	add    BYTE PTR [rsi],dh
  411bc9:	ret    0xaeae
  411bcc:	scas   al,BYTE PTR es:[rdi]
  411bcd:	scas   al,BYTE PTR es:[rdi]
  411bce:	and    eax,0x53e8aae
  411bd3:	scas   al,BYTE PTR es:[rdi]
  411bd4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  411bd5:	scas   al,BYTE PTR es:[rdi]
  411bd6:	lahf   
  411bd7:	jno    0x411bef
	...
  411be5:	add    BYTE PTR [rax],al
  411be7:	add    BYTE PTR [rbx],bh
  411be9:	ret    0x3236
  411bec:	xor    esp,DWORD PTR [rip+0x428a9f48]        # 0x42cbbb3a
  411bf2:	or     al,0xae
  411bf4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  411bf5:	scas   al,BYTE PTR es:[rdi]
  411bf6:	lahf   
  411bf7:	jno    0x411c0f
	...
  411c05:	add    BYTE PTR [rax],al
  411c07:	add    BYTE PTR [rbx],bh
  411c09:	ret    0x427a
  411c0c:	mov    ecx,0x7a8a8f8f
  411c11:	cmp    ah,BYTE PTR [rip+0xffffffffaeaeae77]        # 0xffffffffaeefca8e
  411c17:	jno    0x411c33
	...
  411c25:	add    BYTE PTR [rax],al
  411c27:	add    BYTE PTR [rdx+rax*8-0x5d],al
  411c2b:	jno    0x411c71
  411c2d:	ret    0xb9bf
  411c30:	cwde   
  411c31:	jne    0x411c91
  411c33:	and    eax,0x71a7ae7e
  411c38:	sbb    al,BYTE PTR [rax]
	...
  411c46:	add    BYTE PTR [rax],al
  411c48:	rex.R ret 0xa3b5
  411c4c:	jp     0x411c96
  411c4e:	xor    esi,DWORD PTR [rdi]
  411c50:	rex.X cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  411c52:	jb     0x411c9d
  411c54:	(bad)  
  411c55:	jle    0x411c05
  411c57:	jno    0x411c75
	...
  411c65:	add    BYTE PTR [rax],al
  411c67:	add    BYTE PTR [rbp-0x3e],al
  411c6a:	mov    ah,0xb4
  411c6c:	mov    ah,0xb4
  411c6e:	mov    ch,0xaf
  411c70:	jo     0x411ca9
  411c72:	scas   al,BYTE PTR es:[rdi]
  411c73:	pop    rsi
  411c74:	and    rax,0x286e77
	...
  411c86:	add    BYTE PTR [rax],al
  411c88:	push   rax
  411c89:	ret    0xb4b9
  411c8c:	mov    ecx,0xb5b5b4b4
  411c91:	pop    rbp
  411c92:	xor    ebp,DWORD PTR [rsi+0x5e25494e]
  411c98:	xor    BYTE PTR [rax],al
	...
  411ca6:	add    BYTE PTR [rax],al
  411ca8:	push   rax
  411ca9:	ret    0xc2c2
  411cac:	ret    0xc2c2
  411caf:	ret    0xc2c2
  411cb2:	pop    rbp
  411cb3:	xor    ebp,DWORD PTR [rbp+0x291d414e]
	...
  411cc5:	add    BYTE PTR [rax],al
  411cc7:	add    BYTE PTR [rbp-0x49],dl
  411cca:	mov    bl,0xae
  411ccc:	mov    bl,0xac
  411cce:	lods   al,BYTE PTR ds:[rsi]
  411ccf:	lods   al,BYTE PTR ds:[rsi]
  411cd0:	lods   al,BYTE PTR ds:[rsi]
  411cd1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  411cd2:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  411cd3:	rex.W (bad) 
  411cd5:	scas   eax,DWORD PTR es:[rdi]
  411cd6:	rex.WR cmp r10b,BYTE PTR [rcx]
	...
  411ce5:	add    BYTE PTR [rax],al
  411ce7:	add    BYTE PTR [rbp-0x7b],dl
  411cea:	(bad)  
  411ceb:	push   0x65
  411ced:	fs push rbp
  411cef:	push   rcx
  411cf0:	cmp    r14d,DWORD PTR [rsp+rbx*1]
  411cf4:	sbb    DWORD PTR [rdi],ebx
  411cf6:	lods   eax,DWORD PTR ds:[rsi]
  411cf7:	cmp    ah,BYTE PTR [rdi]
  411cf9:	(bad)  
	...
  411d06:	add    BYTE PTR [rax],al
  411d08:	push   rbp
  411d09:	ret    0xb9bf
  411d0c:	mov    ecx,0xb9b9b9b9
  411d11:	mov    ecx,0x42b4b9b4
  411d16:	adc    DWORD PTR [rdi+0x51f27],ebp
	...
  411d28:	fs ret 0xbfbf
  411d2c:	mov    edi,0xb9b9b9bf
  411d31:	mov    ecx,0xb4b4b9b9
  411d36:	rex.X or al,0xae
  411d39:	rex.X cmp al,BYTE PTR [rbx]
  411d3c:	add    eax,0x62250202
  411d41:	add    BYTE PTR [rax],al
  411d43:	add    BYTE PTR [rax],al
  411d45:	add    BYTE PTR [rax],al
  411d47:	add    BYTE PTR [rdx+rax*8-0x41],ah
  411d4b:	mov    edi,0xbfbfbfbf
  411d50:	mov    ecx,0xb9b9b9b9
  411d55:	mov    ah,0xb4
  411d57:	(bad)  
  411d58:	(bad)  
  411d59:	scas   eax,DWORD PTR es:[rdi]
  411d5a:	movsxd edx,DWORD PTR [rsp+r9*2+0x37]
  411d5f:	xor    eax,DWORD PTR [rip+0x30]        # 0x411d95
  411d65:	add    BYTE PTR [rax],al
  411d67:	add    BYTE PTR [rdx+rax*8-0x3e],ah
  411d6b:	mov    edi,0xbfbfbfbf
  411d70:	mov    edi,0xb9b9b9b9
  411d75:	mov    ecx,0x181274b4
  411d7a:	cdq    
  411d7b:	rex.WB
  411d7c:	rex.WB xor sil,BYTE PTR [r15+0x5e]
  411d80:	rex.WB add al,0x49
  411d83:	add    BYTE PTR [rax],al
  411d85:	add    BYTE PTR [rax],al
  411d87:	add    BYTE PTR [rdx-0x3e],ch
  411d8a:	ret    0xc2c2
  411d8d:	ret    0xc2c2
  411d90:	ret    0xc2c2
  411d93:	ret    0xc2c2
  411d96:	ret    0x51c2
  411d99:	and    eax,0x1d495e9a
  411d9e:	add    DWORD PTR [rcx],eax
  411da0:	add    DWORD PTR [rcx],eax
  411da2:	add    eax,DWORD PTR [rax]
  411da4:	add    BYTE PTR [rax],al
  411da6:	add    BYTE PTR [rax],al
  411da8:	push   0x686d8285
  411dad:	fs push rbp
  411daf:	push   rbp
  411db0:	rex.RB cmp al,0x36
  411db3:	xor    BYTE PTR [rdx],bl
  411db5:	(bad)  
  411db6:	(bad)  
  411db7:	or     eax,DWORD PTR [rbp+0x25]
  411dba:	lahf   
  411dbb:	jno    0x411e1b
  411dbd:	adc    DWORD PTR [rax],eax
	...
  411dc7:	add    BYTE PTR [rdx-0x4d],ch
  411dca:	mov    bl,0xb3
  411dcc:	mov    cl,0xb3
  411dce:	mov    cl,0xa4
  411dd0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  411dd1:	movabs eax,ds:0x335191919191a1a1
  411dda:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  411ddb:	jne    0x411e4f
  411ddd:	sbb    BYTE PTR [rax],al
	...
  411de7:	add    BYTE PTR [rdx-0x3e],ch
  411dea:	ret    0xc2c2
  411ded:	ret    0xc2bf
  411df0:	mov    edi,0xbfb9bfbf
  411df5:	mov    ecx,0x3e557bb9
  411dfa:	scas   al,BYTE PTR es:[rdi]
  411dfb:	mov    dh,BYTE PTR [rbp+0x25]
	...
  411e06:	add    BYTE PTR [rax],al
  411e08:	ins    BYTE PTR es:[rdi],dx
  411e09:	ret    0xc2c2
  411e0c:	ret    0xc2c2
  411e0f:	ret    0xbfbf
  411e12:	mov    edi,0xb9b9b9bf
  411e17:	jnp    0x411e7b
  411e19:	(bad)  
  411e1a:	xor    eax,0x1428aae
  411e1f:	add    DWORD PTR [rcx],eax
  411e21:	add    DWORD PTR [rcx+0x0],edx
  411e24:	add    BYTE PTR [rax],al
  411e26:	add    BYTE PTR [rax],al
  411e28:	ins    DWORD PTR es:[rdi],dx
  411e29:	ret    0xc2c2
  411e2c:	ret    0xc2c2
  411e2f:	ret    0xbfbf
  411e32:	mov    edi,0xb9b9b9bf
  411e37:	jl     0x411e8e
  411e39:	add    BYTE PTR [rax+0x30],dh
  411e3c:	scas   eax,DWORD PTR es:[rdi]
  411e3d:	cmp    DWORD PTR [rsi+0x7e],0x3005
  411e44:	add    BYTE PTR [rax],al
  411e46:	add    BYTE PTR [rax],al
  411e48:	(bad)  
  411e49:	ret    0xc2c2
  411e4c:	ret    0xc2c2
  411e4f:	ret    0xbfc2
  411e52:	mov    edi,0xb9b9bfbf
  411e57:	xchg   ebp,eax
  411e58:	add    BYTE PTR fs:[rax],al
  411e5b:	cmp    DWORD PTR [rsi],0x30
  411e5e:	(bad)  
  411e5f:	xor    BYTE PTR [rax+0x0],dh
  411e62:	add    BYTE PTR [rax],al
  411e64:	add    BYTE PTR [rax],al
  411e66:	add    BYTE PTR [rax],al
  411e68:	(bad)  
  411e69:	ret    0xc2c2
  411e6c:	ret    0xc2c2
  411e6f:	ret    0xc2c2
  411e72:	ret    0xc2c2
  411e75:	ret    0xbfc2
  411e78:	add    BYTE PTR fs:[rax],al
	...
  411e87:	add    BYTE PTR [rbp-0x7a7a7a7b],al
  411e8d:	(bad)  
  411e8e:	(bad)  
  411e8f:	ins    DWORD PTR es:[rdi],dx
  411e90:	ins    DWORD PTR es:[rdi],dx
  411e91:	ins    DWORD PTR es:[rdi],dx
  411e92:	ins    BYTE PTR es:[rdi],dx
  411e93:	push   0x6a
  411e95:	push   0x67
  411e97:	addr32 add BYTE PTR [eax],al
	...
  411ec3:	add    al,dh
  411ec5:	add    BYTE PTR [rdi],al
  411ec7:	push   rax
  411ec9:	add    BYTE PTR [rdi],al
  411ecb:	push   rax
  411ecd:	add    BYTE PTR [rdi],al
  411ecf:	push   rax
  411ed1:	add    BYTE PTR [rdi],al
  411ed3:	push   rax
  411ed5:	add    BYTE PTR [rdi],al
  411ed7:	push   rax
  411ed9:	add    BYTE PTR [rdi],al
  411edb:	push   rax
  411edd:	add    BYTE PTR [rdi],al
  411edf:	push   rax
  411ee1:	add    BYTE PTR [rdi],al
  411ee3:	push   rax
  411ee5:	add    BYTE PTR [rdi],al
  411ee7:	push   rax
  411ee9:	add    BYTE PTR [rdi],al
  411eeb:	push   rax
  411eed:	add    BYTE PTR [rdi],al
  411eef:	push   rax
  411ef1:	add    BYTE PTR [rdi],al
  411ef3:	push   rax
  411ef5:	add    BYTE PTR [rdi],al
  411ef7:	push   rax
  411ef9:	add    BYTE PTR [rdi],al
  411efb:	push   rax
  411efd:	add    BYTE PTR [rdi],al
  411eff:	push   rax
  411f01:	add    BYTE PTR [rdi],al
  411f03:	push   rax
  411f05:	add    BYTE PTR [rdi],al
  411f07:	push   rax
  411f09:	add    BYTE PTR [rbx],al
  411f0b:	push   rax
  411f0d:	add    BYTE PTR [rcx],al
  411f0f:	push   rax
  411f11:	add    BYTE PTR [rax],al
  411f13:	(bad)  
  411f14:	lock add BYTE PTR [rax],al
  411f17:	add    esi,eax
  411f19:	add    BYTE PTR [rax],al
  411f1b:	add    eax,esi
  411f1d:	add    BYTE PTR [rax],al
  411f1f:	add    eax,esi
  411f21:	add    BYTE PTR [rax],al
  411f23:	(bad)  
  411f24:	lock add BYTE PTR [rax],al
  411f27:	(bad)  
  411f28:	lock add BYTE PTR [rax],al
  411f2b:	(bad)  
  411f2c:	lock add BYTE PTR [rax],al
  411f2f:	add    eax,esi
  411f31:	add    BYTE PTR [rbx+rax*1],al
  411f34:	lock add BYTE PTR [rsi],al
  411f37:	(bad)  
  411f38:	lock add BYTE PTR [rdi],al
  411f3b:	push   rax
  411f3d:	add    BYTE PTR [rdi],al
  411f3f:	(bad)  
  411f40:	(bad)  
  411f41:	(bad)  
  411f42:	(bad)  
  411f43:	jmp    FWORD PTR [rax]
  411f45:	add    BYTE PTR [rax],al
  411f47:	add    BYTE PTR [rax],dl
  411f49:	add    BYTE PTR [rax],al
  411f4b:	add    BYTE PTR [rax],ah
  411f4d:	add    BYTE PTR [rax],al
  411f4f:	add    BYTE PTR [rcx],al
  411f51:	add    BYTE PTR [rax],cl
  411f53:	add    BYTE PTR [rax],al
  411f55:	add    BYTE PTR [rax],al
  411f57:	add    BYTE PTR [rax],al
  411f59:	add    DWORD PTR [rax],eax
	...
  411f63:	add    BYTE PTR [rax],al
  411f65:	add    DWORD PTR [rax],eax
  411f67:	add    BYTE PTR [rax],al
  411f69:	add    DWORD PTR [rax],eax
  411f6b:	add    BYTE PTR [rax],al
  411f6d:	add    BYTE PTR [rax],al
  411f6f:	add    BYTE PTR [rbx+0x48],ah
  411f72:	xor    eax,DWORD PTR [rax]
  411f74:	fs rex.WX xor rax,0x364c6600
  411f7b:	add    BYTE PTR [rax+0x4e],ch
  411f7e:	cmp    al,BYTE PTR [rax]
  411f80:	imul   edx,DWORD PTR [rcx+0x3d],0x0
  411f84:	outs   dx,BYTE PTR ds:[rsi]
  411f85:	push   rbx
  411f86:	(bad)  
  411f87:	add    BYTE PTR [rsi+0x55],ch
  411f8a:	add    BYTE PTR [rdx+0x58],sil
  411f8e:	add    BYTE PTR [rbp+0x59],r14b
  411f92:	add    BYTE PTR [rsi+0x5c],r14b
  411f96:	rex.WB add BYTE PTR [r15+0x5f],sil
  411f9a:	rex.WRX add BYTE PTR [rdx+0x61],r15b
  411f9e:	rex.WRX add BYTE PTR [rdx+0x64],r15b
  411fa2:	push   rbx
  411fa3:	add    BYTE PTR [rbx+0x6b],bh
  411fa6:	(bad)  
  411fa7:	add    BYTE PTR [rax-0x7bffaa98],al
  411fad:	imul   edx,DWORD PTR [rdi+0x0],0x5b6d86
  411fb4:	sub    DWORD PTR [rsi+rbx*2+0x0],0xffffff88
  411fb9:	outs   dx,DWORD PTR ds:[rsi]
  411fba:	pop    rbp
  411fbb:	add    BYTE PTR [rsp+rsi*2+0x738b0062],cl
  411fc2:	add    BYTE PTR fs:[rax-0x6eff9488],cl
  411fc9:	jp     0x412033
  411fcb:	add    BYTE PTR [rsp+rdi*2+0x7e96006a],dl
  411fd2:	ins    BYTE PTR es:[rdi],dx
  411fd3:	add    BYTE PTR [rax+0x2e006d7e],bl
  411fd9:	fwait
  411fda:	add    BYTE PTR [rax],al
  411fdc:	cs int3 
  411fde:	add    BYTE PTR [rax],al
  411fe0:	or     al,0xff
  411fe2:	add    BYTE PTR [rax],al
  411fe4:	cdq    
  411fe5:	xor    DWORD PTR [rax+0x0],0x77879e
  411fec:	cwde   
  411fed:	xchg   DWORD PTR [rbx+0x0],edi
  411ff0:	lahf   
  411ff1:	mov    BYTE PTR [rax+0x0],bh
  411ff4:	movabs al,ds:0x9b007e8ea4007d8d
  411ffd:	mov    WORD PTR [rax-0x7c706200],es
  412003:	add    BYTE PTR [rsi-0x5aff7f70],ah
  412009:	xchg   ebx,eax
  41200a:	test   DWORD PTR [rax],eax
  41200c:	stos   BYTE PTR es:[rdi],al
  41200d:	xchg   ebp,eax
  41200e:	xchg   BYTE PTR [rax],al
  412010:	scas   al,BYTE PTR es:[rdi]
  412011:	cdq    
  412012:	mov    al,BYTE PTR [rax]
  412014:	stos   BYTE PTR es:[rdi],al
  412015:	cwde   
  412016:	mov    WORD PTR [rax],es
  412018:	scas   eax,DWORD PTR es:[rdi]
  412019:	(bad)  
  41201a:	mov    WORD PTR [rax],es
  41201c:	mov    al,0x9b
  41201e:	mov    WORD PTR [rax],es
  412020:	mov    bh,0x9c
  412022:	mov    WORD PTR [rax],es
  412024:	mov    ah,0x9f
  412026:	nop
  412027:	add    BYTE PTR [rsi-0x48ff6f5f],dh
  41202d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  41202e:	xchg   esi,eax
  41202f:	add    BYTE PTR [rax-0x44ff6a5d],bh
  412035:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  412036:	xchg   edi,eax
  412037:	add    BYTE PTR [rbx-0x42ff6759],bh
  41203d:	test   al,0x99
  41203f:	add    BYTE PTR [rsi-0x39ff6355],bh
  412045:	movabs ds:0xa5c70092a4c60091,al
  41204e:	xchg   esp,eax
  41204f:	add    al,cl
  412051:	test   al,0x97
  412053:	add    cl,al
  412055:	lods   eax,DWORD PTR ds:[rsi]
  412056:	lahf   
  412057:	add    al,cl
  412059:	test   al,0x98
  41205b:	add    dl,al
  41205d:	scas   al,BYTE PTR es:[rdi]
  41205e:	movabs al,ds:0xa5b2c500a2b0c400
  412067:	add    cl,cl
  412069:	mov    dh,0xa9
  41206b:	add    ah,cl
  41206d:	mov    edx,0xb4d500ad
  412072:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  412073:	add    ch,al
  412075:	mov    ebp,0xd6eb00b6
  41207a:	retf   
  41207b:	add    dl,dh
  41207d:	(bad)  
  41207e:	mov    BYTE PTR [rax],0xf3
  412081:	xlat   BYTE PTR ds:[rbx]
  412082:	retf   0xf400
  412085:	fcmove st,st(5)
  412087:	add    ch,dh
  412089:	fst    st(2)
  41208b:	add    ch,dh
  41208d:	(bad)  
  41208f:	add    dh,dh
  412091:	loopne 0x412069
  412093:	add    dh,dh
  412095:	loop   0x41206f
  412097:	add    bh,dh
  412099:	in     eax,0xdc
  41209b:	add    al,bh
  41209d:	in     eax,0xdc
  41209f:	add    al,bh
  4120a1:	call   0xffffffffec3a2188
  4120a6:	in     al,0x0
  4120a8:	stc    
  4120a9:	in     al,dx
  4120aa:	out    0x0,al
  4120ac:	repz out dx,eax
  4120ae:	in     al,dx
  4120af:	add    dl,bh
  4120b1:	out    dx,al
  4120b2:	call   0xffffffffec321bb7
  4120b7:	add    bl,bh
  4120b9:	repnz out dx,al
  4120bb:	add    dh,bh
  4120bd:	(bad)  
  4120be:	inc    BYTE PTR [rax]
	...
  412368:	(bad)  
  412369:	(bad)  
  41236a:	inc    DWORD PTR [rax]
  41236c:	add    BYTE PTR [rdx],cl
  41236e:	or     BYTE PTR [rdi],al
  412370:	add    eax,0x1030304
  412375:	add    eax,DWORD PTR [rax]
  412377:	add    BYTE PTR [rax],al
  412379:	add    BYTE PTR [rax],al
  41237b:	add    BYTE PTR [rax],al
  41237d:	or     al,0x42
  41237f:	cmp    DWORD PTR [rax],edi
  412381:	cmp    BYTE PTR [rax],bh
  412383:	cmp    BYTE PTR [rsi],dh
  412385:	add    DWORD PTR [rax],eax
  412387:	add    BYTE PTR [rax],al
  412389:	add    BYTE PTR [rax],al
  41238b:	add    BYTE PTR [rax],al
  41238d:	ud0    eax,DWORD PTR [rbp+0x44]
  412391:	rex.R sbb al,0x1b
  412394:	cmp    BYTE PTR [rbx],al
  412396:	add    BYTE PTR [rax],al
  412398:	add    BYTE PTR [rax],al
  41239a:	add    BYTE PTR [rax],al
  41239c:	add    BYTE PTR [rcx],dl
  41239e:	inc    DWORD PTR [rsi+0x46]
  4123a1:	rex.RB sbb eax,0x4391c
  4123a7:	add    BYTE PTR [rax],al
  4123a9:	add    BYTE PTR [rax],al
  4123ab:	add    BYTE PTR [rax],al
  4123ad:	adc    al,0xff
  4123af:	rex.W
  4123b0:	rex.W
  4123b1:	rex.RX (bad) 
  4123b3:	(bad)  
  4123b4:	sub    eax,0x5
  4123b9:	add    BYTE PTR [rax],al
  4123bb:	add    BYTE PTR [rax],al
  4123bd:	(bad)  
  4123be:	dec    DWORD PTR [rdx+0x48]
  4123c1:	rex.W
  4123c2:	rex.WX and al,0x14
  4123c5:	or     BYTE PTR [rax],al
  4123c7:	add    BYTE PTR [rax],al
  4123c9:	add    BYTE PTR [rax],al
  4123cb:	add    BYTE PTR [rax],al
  4123cd:	(bad)  
  4123ce:	dec    DWORD PTR [rdx+0x2f]
  4123d1:	rex.WRB
  4123d2:	rex.XB (bad) 
  4123d4:	or     ecx,DWORD PTR [rdx]
  4123d6:	add    BYTE PTR [rax],al
  4123d8:	add    BYTE PTR [rax],al
  4123da:	add    BYTE PTR [rax],al
  4123dc:	add    BYTE PTR [rsi],bl
  4123de:	(bad)  
  4123df:	jmp    FWORD PTR [rdi]
  4123e1:	cmp    ch,BYTE PTR ds:[rdx]
  4123e4:	or     eax,0xd
  4123e9:	add    BYTE PTR [rax],al
  4123eb:	add    BYTE PTR [rax],al
  4123ed:	(bad)  
  4123ee:	rex (bad) 
  4123f0:	sub    ah,BYTE PTR [rax]
  4123f2:	(bad)  
  4123f3:	adc    edi,edi
  4123f5:	or     BYTE PTR [rax],al
  4123f7:	add    BYTE PTR [rax],al
  4123f9:	add    BYTE PTR [rax],al
  4123fb:	add    BYTE PTR [rax],al
  4123fd:	sub    bh,bh
  4123ff:	push   rdx
  412400:	push   rdx
  412401:	rex.WRB push r9
  412403:	rex.WRB (bad) 
  412405:	dec    DWORD PTR [rax]
  412407:	add    BYTE PTR [rax],al
  412409:	add    BYTE PTR [rax],al
  41240b:	add    BYTE PTR [rax],al
  41240d:	sub    eax,0xffffffff
  412412:	(bad)  
  412413:	call   QWORD PTR [rax+0x2f]
  412416:	dec    DWORD PTR [rax]
  412418:	add    BYTE PTR [rax],al
  41241a:	add    BYTE PTR [rax],al
  41241c:	add    BYTE PTR [rdi],ch
  41241e:	rex
  41241f:	ds xor al,0x2f
  412422:	sub    ch,BYTE PTR [rax]
  412424:	(bad)  
  412425:	(bad)  
  412426:	(bad)  
  412427:	call   QWORD PTR [rbx]
  412429:	nop    DWORD PTR [rax]
  41242c:	add    BYTE PTR [rbx],dh
  41242e:	call   QWORD PTR [rdx+0x4d]
  412431:	rex.WR
  412432:	rex.W
  412433:	rex.RB
  412434:	rex.B (bad) 
  412436:	add    BYTE PTR [rdx],bl
  412438:	cmp    al,0x2f
  41243a:	(bad)  
  41243b:	and    BYTE PTR [rax],al
  41243d:	cmp    al,0xff
  41243f:	(bad)  
  412440:	(bad)  
  412441:	(bad)  
  412442:	(bad)  
  412443:	call   QWORD PTR [rax+0x28]
  412446:	add    BYTE PTR [rdx],bl
  412448:	cmp    al,0x0
  41244a:	add    BYTE PTR [rax],ch
  41244c:	add    BYTE PTR [rsi],bh
  41244e:	ds xor al,0x34
  412451:	xor    al,0x2f
  412453:	(bad)  
  412454:	sub    eax,0x3f340028
	...
  412465:	add    BYTE PTR [rax],al
  412467:	add    BYTE PTR [rdi],ch
  412469:	(bad)  
  41246a:	add    BYTE PTR [rax],al
  41246c:	cmp    BYTE PTR [rdi],0x0
  41246f:	add    BYTE PTR [rax-0x7fffffc1],al
  412475:	(bad)  
  412476:	add    BYTE PTR [rax],al
  412478:	cmp    BYTE PTR [rdi],0x0
  41247b:	add    BYTE PTR [rax-0x7fffffc1],al
  412481:	(bad)  
  412482:	add    BYTE PTR [rax],al
  412484:	cmp    BYTE PTR [rdi],0x0
  412487:	add    BYTE PTR [rax-0x7fffffc1],al
  41248d:	(bad)  
  41248e:	add    BYTE PTR [rax],al
  412490:	sbb    BYTE PTR [rdi],0x0
  412493:	add    BYTE PTR [rax-0x7ffffff1],al
  412499:	add    DWORD PTR [rax],eax
  41249b:	add    BYTE PTR [rax-0x7fffffe0],al
  4124a1:	add    BYTE PTR es:[rax],al
  4124a4:	and    BYTE PTR [rdi],0x0
  4124a7:	add    bh,bh
  4124a9:	repz add BYTE PTR [rax],al
  4124ac:	sub    BYTE PTR [rax],al
  4124ae:	add    BYTE PTR [rax],al
  4124b0:	and    BYTE PTR [rax],al
  4124b2:	add    BYTE PTR [rax],al
  4124b4:	add    BYTE PTR [rax],al
  4124b7:	add    BYTE PTR [rcx],al
  4124b9:	add    BYTE PTR [rax],ah
  4124bb:	add    BYTE PTR [rax],al
  4124bd:	add    BYTE PTR [rax],al
  4124bf:	add    BYTE PTR [rax+0x10],al
	...
  4124e1:	add    BYTE PTR [rax],al
  4124e3:	add    BYTE PTR [rdi-0x7a00998c],al
  4124e9:	jae    0x412550
  4124eb:	inc    DWORD PTR [rbp-0x7c009c8e]
  4124f1:	jo     0x412555
  4124f3:	inc    DWORD PTR [rbx-0x7d009e91]
  4124f9:	outs   dx,BYTE PTR ds:[rsi]
  4124fa:	pop    rdi
  4124fb:	inc    DWORD PTR [rcx-0x7f00a193]
  412501:	ins    BYTE PTR es:[rdi],dx
  412502:	pop    rbp
  412503:	inc    DWORD PTR [rax+0x7eff5c6c]
  412509:	push   0x5b
  41250b:	(bad)  
  41250c:	jle    0x412577
  41250e:	pop    rdx
  41250f:	(bad)  
  412510:	jge    0x41257b
  412512:	pop    rcx
  412513:	(bad)  
  412514:	jl     0x41257d
  412516:	pop    rax
  412517:	(bad)  
  412518:	jnp    0x412581
  41251a:	push   rdi
  41251b:	(bad)  
  41251c:	jnp    0x412584
  41251e:	push   rsi
  41251f:	(bad)  
  412520:	jp     0x412588
  412522:	push   rsi
  412523:	(bad)  
  412524:	jp     0x41258b
  412526:	push   rbp
  412527:	inc    DWORD PTR [rax]
	...
  412561:	add    BYTE PTR [rax],al
  412563:	add    BYTE PTR [rcx-0x1009689],cl
  412569:	sti    
  41256a:	cli    
  41256b:	call   rdx
  41256d:	mov    cl,0xa2
  41256f:	inc    esi
  412571:	movabs ds:0xa3c6ff92a3c6ff92,eax
  41257a:	xchg   edx,eax
  41257b:	inc    esi
  41257d:	movabs ds:0xa3c6ff92a3c6ff92,eax
  412586:	xchg   edx,eax
  412587:	inc    esi
  412589:	movabs ds:0xa3c6ff92a3c6ff92,eax
  412592:	xchg   edx,eax
  412593:	inc    esi
  412595:	movabs ds:0xa3c6ff92a3c6ff92,eax
  41259e:	xchg   edx,eax
  41259f:	inc    edi
  4125a1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4125a2:	xchg   esi,eax
  4125a3:	(bad)  
  4125a4:	jnp    0x41260c
  4125a6:	push   rdi
  4125a7:	inc    DWORD PTR [rax]
	...
  4125e1:	add    BYTE PTR [rax],al
  4125e3:	add    BYTE PTR [rbx-0x1009487],cl
  4125e9:	sti    
  4125ea:	cli    
  4125eb:	push   rsp
  4125ed:	fxch   st(4)
  4125ef:	push   rsp
  4125f1:	fmul   st,st(4)
  4125f3:	push   rsp
  4125f5:	fmul   st,st(4)
  4125f7:	push   rsp
  4125f9:	fmul   st,st(3)
  4125fb:	push   rsp
  4125fd:	fmul   st,st(3)
  4125ff:	push   rsp
  412601:	xlat   BYTE PTR ds:[rbx]
  412602:	retf   
  412603:	push   rsp
  412605:	fmul   st,st(2)
  412607:	push   rbx
  412609:	xlat   BYTE PTR ds:[rbx]
  41260a:	leave  
  41260b:	push   rbx
  41260d:	xlat   BYTE PTR ds:[rbx]
  41260e:	retf   0xf4ff
  412611:	(bad)  
  412612:	leave  
  412613:	push   rbx
  412615:	(bad)  
  412616:	leave  
  412617:	push   rbx
  412619:	(bad)  
  41261a:	enter  0xf3ff,0xd5
  41261e:	(bad)  
  41261f:	dec    eax
  412621:	stos   DWORD PTR es:[rdi],eax
  412622:	fwait
  412623:	(bad)  
  412624:	jl     0x41268e
  412626:	pop    rax
  412627:	inc    DWORD PTR [rax]
	...
  412661:	add    BYTE PTR [rax],al
  412663:	add    BYTE PTR [rbp-0x1009185],cl
  412669:	cld    
  41266a:	cli    
  41266b:	push   rsp
  41266d:	fcmove st,st(6)
  41266f:	push   rbp
  412671:	fcmove st,st(6)
  412673:	push   rsp
  412675:	fxch   st(5)
  412677:	push   rsp
  412679:	fcmove st,st(5)
  41267b:	push   rsp
  41267d:	fxch   st(5)
  41267f:	push   rsp
  412681:	fxch   st(5)
  412683:	push   rsp
  412685:	fxch   st(4)
  412687:	push   rsp
  412689:	fxch   st(4)
  41268b:	push   rsp
  41268d:	fmul   st,st(3)
  41268f:	push   rbx
  412691:	xlat   BYTE PTR ds:[rbx]
  412692:	retf   0x2eff
  412695:	int3   
  412696:	add    bh,bh
  412698:	cs fwait
  41269a:	add    bh,bh
  41269c:	repz (bad) 
  41269e:	enter  0xc8ff,0xab
  4126a2:	fwait
  4126a3:	(bad)  
  4126a4:	jge    0x41270f
  4126a6:	pop    rcx
  4126a7:	inc    DWORD PTR [rax]
	...
  4126e1:	add    BYTE PTR [rax],al
  4126e3:	add    BYTE PTR [rsi-0x1008e82],cl
  4126e9:	cld    
  4126ea:	sti    
  4126eb:	push   rbp
  4126ed:	fcmovne st,st(7)
  4126ef:	(bad)  
  4126f0:	call   0xffffffffbe40e9c4
  4126f5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  4126f6:	xchg   ebp,eax
  4126f7:	call   FWORD PTR [rdi-0x7c00897a]
  4126fd:	imul   ebx,DWORD PTR [rax-0x1],0xffffff95
  412701:	jl     0x41276d
  412703:	push   QWORD PTR [rdi-0x1c007364]
  412709:	enter  0xffbb,0xf4
  41270d:	fxch   st(4)
  41270f:	push   rsp
  412711:	fmul   st,st(4)
  412713:	dec    DWORD PTR [rdi+rdi*8]
  412716:	add    bh,bh
  412718:	xor    ecx,ecx
  41271a:	add    bh,bh
  41271c:	repz fmul st,st(2)
  41271f:	dec    eax
  412721:	stos   DWORD PTR es:[rdi],eax
  412722:	fwait
  412723:	(bad)  
  412724:	jg     0x412791
  412726:	pop    rsp
  412727:	inc    DWORD PTR [rax]
	...
  412761:	add    BYTE PTR [rax],al
  412763:	add    BYTE PTR [rcx-0x1008b7f],dl
  412769:	cld    
  41276a:	sti    
  41276b:	(bad)  
  41276c:	jmp    0x412740
  41276e:	(bad)  
  41276f:	call   FWORD PTR [rcx-0x1d008e7f]
  412775:	(bad)  
  412776:	(bad)  
  412777:	(bad)  
  412778:	stc    
  412779:	jmp    0x41275e
  41277b:	push   rdi
  41277d:	out    0xdd,al
  41277f:	call   rbp
  412781:	enter  0xffc0,0xbe
  412785:	lods   eax,DWORD PTR ds:[rsi]
  412786:	movabs ds:0xadbbd4ff566982ff,al
  41278f:	push   rbp
  412791:	fcmove st,st(6)
  412793:	push   rbp
  412795:	fxch   st(5)
  412797:	push   rsp
  412799:	fxch   st(4)
  41279b:	push   rbx
  41279d:	fxch   st(3)
  41279f:	dec    eax
  4127a1:	stos   DWORD PTR es:[rdi],eax
  4127a2:	fwait
  4127a3:	inc    DWORD PTR [rcx+0xff5e6d]
	...
  4127e1:	add    BYTE PTR [rax],al
  4127e3:	add    BYTE PTR [rbx-0x100887d],dl
  4127e9:	cld    
  4127ea:	sti    
  4127eb:	call   QWORD PTR [rsi-0x63009181]
  4127f1:	xchg   BYTE PTR [rbp-0x1],dh
  4127f4:	xchg   ecx,eax
  4127f5:	jns    0x41285e
  4127f7:	dec    DWORD PTR [rsi-0x50009a8a]
  4127fd:	pushf  
  4127fe:	(bad)  
  4127ff:	(bad)  
  412800:	std    
  412801:	cli    
  412802:	clc    
  412803:	(bad)  
  412804:	fcmovne st,st(7)
  412806:	(bad)  
  412807:	call   FWORD PTR [rbp+rax*4+0x7a94ff75]
  41280e:	imul   edi,edi,0xffcfdbf4
  412814:	cmc    
  412815:	fcmovne st,st(6)
  412817:	push   rbp
  412819:	fcmove st,st(6)
  41281b:	push   rbp
  41281d:	fcmove st,st(5)
  41281f:	dec    eax
  412821:	stos   DWORD PTR es:[rdi],eax
  412822:	fwait
  412823:	inc    DWORD PTR [rcx+0xff606f]
	...
  412861:	add    BYTE PTR [rax],al
  412863:	add    BYTE PTR [rbp-0x100857a],dl
  412869:	cld    
  41286a:	sti    
  41286b:	push   rsi
  41286d:	(bad)  
  41286f:	push   rsi
  412871:	loopne 0x412848
  412873:	push   rsi
  412875:	(bad)  
  412877:	push   rsi
  412879:	loopne 0x412850
  41287b:	dec    DWORD PTR [rsi-0x4009a89]
  412881:	lock jmp 0x412883
  412884:	fxch   st(2)
  412886:	ret    
  412887:	jmp    FWORD PTR [rcx-0x73007a6c]
  41288d:	je     0x4128f1
  41288f:	push   rsi
  412891:	fst    st(1)
  412893:	push   rbp
  412895:	(bad)  
  412897:	push   rbp
  412899:	fcmovnbe st,st(0)
  41289b:	push   rbp
  41289d:	fcmove st,st(7)
  41289f:	dec    eax
  4128a1:	stos   DWORD PTR es:[rdi],eax
  4128a2:	fwait
  4128a3:	inc    DWORD PTR [rbx+0xff6270]
	...
  4128e1:	add    BYTE PTR [rax],al
  4128e3:	add    BYTE PTR [rax-0x1008277],bl
  4128e9:	cld    
  4128ea:	sti    
  4128eb:	push   rdi
  4128ed:	loope  0x4128c6
  4128ef:	push   rdi
  4128f1:	loope  0x4128cb
  4128f3:	push   rsi
  4128f5:	loope  0x4128cf
  4128f7:	push   rdi
  4128f9:	loope  0x4128d2
  4128fb:	call   QWORD PTR [rcx-0x8009786]
  412901:	in     eax,0xdc
  412903:	call   rbp
  412905:	(bad)  
  412906:	mov    ebp,0x8191a7ff
  41290b:	push   QWORD PTR [rbp+0x5c]
  41290e:	rex.W push rbp
  412911:	(bad)  
  412913:	push   rbp
  412915:	fst    st(2)
  412917:	push   rbp
  412919:	fst    st(1)
  41291b:	push   rbp
  41291d:	(bad)  
  41291f:	dec    eax
  412921:	stos   DWORD PTR es:[rdi],eax
  412922:	fwait
  412923:	inc    DWORD PTR [rbp+0xff6573]
	...
  412961:	add    BYTE PTR [rax],al
  412963:	add    BYTE PTR [rdx-0x1007f74],bl
  412969:	cld    
  41296a:	cld    
  41296b:	call   FWORD PTR [rdi-0x62008677]
  412971:	xchg   BYTE PTR [rbp-0x1],dh
  412974:	cdq    
  412975:	xor    DWORD PTR [rdx-0x1],0xffffff97
  412979:	sub    BYTE PTR [rdi-0x1],0xad
  41297d:	cdq    
  41297e:	mov    edi,edi
  412980:	hlt    
  412981:	fcmovne st,st(6)
  412983:	call   rdx
  412985:	shl    DWORD PTR [rdi-0x796a5201],0xff
  41298c:	and    BYTE PTR [rdi+0x55],0xff
  412990:	mul    al
  412992:	(bad)  
  412993:	push   rsi
  412995:	(bad)  
  412997:	push   rbp
  412999:	(bad)  
  41299b:	push   rbp
  41299d:	fst    st(2)
  41299f:	dec    eax
  4129a1:	stos   DWORD PTR es:[rdi],eax
  4129a2:	fwait
  4129a3:	inc    DWORD PTR [rdi+0xff6775]
	...
  4129e1:	add    BYTE PTR [rax],al
  4129e3:	add    BYTE PTR [rsi+rcx*4-0x201007c],bl
  4129ea:	cld    
  4129eb:	dec    ecx
  4129ed:	mov    dh,0xaa
  4129ef:	jmp    FWORD PTR [rcx-0x3007b6c]
  4129f5:	repz lock (bad) 
  4129f8:	fcmovne st,st(5)
  4129fa:	(bad)  
  4129fd:	mov    eax,0xb9c2d2ff
  412a03:	dec    edi
  412a05:	mov    esp,0x8ea7ffb3
  412a0a:	jge    0x412a0b
  412a0c:	xchg   ebx,eax
  412a0d:	jnp    0x412a79
  412a0f:	dec    edi
  412a11:	mov    bh,0xab
  412a13:	push   rsi
  412a15:	loopne 0x4129ed
  412a17:	push   rsi
  412a19:	(bad)  
  412a1b:	push   rsi
  412a1d:	(bad)  
  412a1f:	dec    eax
  412a21:	stos   DWORD PTR es:[rdi],eax
  412a22:	fwait
  412a23:	dec    DWORD PTR [rcx+0xff6977]
	...
  412a61:	add    BYTE PTR [rax],al
  412a63:	add    BYTE PTR [rdi-0x100796f],bl
  412a69:	std    
  412a6a:	cld    
  412a6b:	(bad)  
  412a6c:	in     eax,dx
  412a6d:	fcmovnbe st,st(3)
  412a6f:	inc    eax
  412a71:	stos   DWORD PTR es:[rdi],eax
  412a72:	sahf   
  412a73:	jmp    FWORD PTR [rcx-0x3007b6c]
  412a79:	clc    
  412a7a:	idiv   bh
  412a7c:	cld    
  412a7d:	div    dl
  412a7f:	(bad)  
  412a80:	sti    
  412a81:	repz out dx,al
  412a83:	jmp    rsp
  412a85:	(bad)  
  412a86:	(bad)  
  412a87:	dec    eax
  412a89:	mov    bl,0xa8
  412a8b:	(bad)  
  412a8c:	mov    edi,0x92ff99a7
  412a91:	jge    0x412aff
  412a93:	call   rbp
  412a95:	mov    esi,0xe0f6ffb1
  412a9a:	(bad)  
  412a9b:	push   rsi
  412a9d:	(bad)  
  412a9f:	dec    eax
  412aa1:	stos   DWORD PTR es:[rdi],eax
  412aa2:	fwait
  412aa3:	dec    DWORD PTR [rbx+0xff6c7a]
	...
  412ae1:	add    BYTE PTR [rax],al
  412ae3:	add    BYTE PTR [rcx-0x100766c],ah
  412ae9:	std    
  412aea:	cld    
  412aeb:	(bad)  
  412aec:	clc    
  412aed:	call   0xffffffffdc2f2ad3
  412af2:	(bad)  
  412af3:	dec    esp
  412af5:	mov    eax,0x99aeffac
  412afa:	mov    bh,bh
  412afc:	(bad)  
  412afd:	xor    DWORD PTR [rdx-0x1],0xffffffa1
  412b01:	mov    bh,BYTE PTR [rdx-0x1]
  412b04:	stos   BYTE PTR es:[rdi],al
  412b05:	xchg   esp,eax
  412b06:	test   edi,edi
  412b08:	cmc    
  412b09:	(bad)  
  412b0b:	inc    edx
  412b0d:	stos   BYTE PTR es:[rdi],al
  412b0e:	sahf   
  412b0f:	push   QWORD PTR [rsi-0x71007164]
  412b15:	ja     0x412b7e
  412b17:	call   rbx
  412b19:	mov    ebx,0xe1f7ffaf
  412b1e:	(bad)  
  412b1f:	dec    eax
  412b21:	stos   DWORD PTR es:[rdi],eax
  412b22:	fwait
  412b23:	dec    DWORD PTR [rbp+0xff707c]
	...
  412b61:	add    BYTE PTR [rax],al
  412b63:	add    BYTE PTR [rbx-0x1007369],ah
  412b69:	std    
  412b6a:	cld    
  412b6b:	(bad)  
  412b6c:	stc    
  412b6d:	(bad)  
  412b6e:	jrcxz  0x412b6f
  412b70:	stc    
  412b71:	(bad)  
  412b72:	loop   0x412b73
  412b74:	clc    
  412b75:	jmp    0xffffffffe93a2b5d
  412b7a:	loope  0x412b7b
  412b7c:	clc    
  412b7d:	jmp    0xffffffffe93b2b63
  412b82:	loopne 0x412b83
  412b84:	mov    esi,0xa4ff9ba9
  412b89:	lea    edi,[rsi-0x1]
  412b8c:	cmc    
  412b8d:	(bad)  
  412b8f:	(bad)  
  412b90:	mov    ebx,0xb1ff95a3
  412b95:	cwde   
  412b96:	mov    edi,edi
  412b98:	xchg   edx,eax
  412b99:	js     0x412c04
  412b9b:	call   rcx
  412b9d:	mov    edx,0xa6c7ffae
  412ba2:	xchg   esi,eax
  412ba3:	dec    DWORD PTR [rdi+0xff727f]
	...
  412be1:	add    BYTE PTR [rax],al
  412be3:	add    BYTE PTR [rbp-0x1007066],ah
  412be9:	std    
  412bea:	std    
  412beb:	(bad)  
  412bec:	stc    
  412bed:	jmp    0x412bd4
  412bef:	(bad)  
  412bf0:	stc    
  412bf1:	jmp    0x412bd8
  412bf3:	(bad)  
  412bf4:	stc    
  412bf5:	jmp    0x412bdb
  412bf7:	(bad)  
  412bf8:	cli    
  412bf9:	(bad)  
  412bfa:	in     al,0xff
  412bfc:	stc    
  412bfd:	(bad)  
  412bfe:	jrcxz  0x412bff
  412c00:	clc    
  412c01:	(bad)  
  412c02:	loop   0x412c03
  412c04:	clc    
  412c05:	jmp    0xffffffffa4fc2beb
  412c0a:	xchg   edi,eax
  412c0b:	call   FWORD PTR [rsi-0x9008a7a]
  412c11:	loopne 0x412be9
  412c13:	(bad)  
  412c14:	mov    edx,0xb3ff91a0
  412c19:	cdq    
  412c1a:	mov    bh,bh
  412c1c:	xchg   esp,eax
  412c1d:	jnp    0x412c89
  412c1f:	(bad)  
  412c20:	mov    edi,0x91ff93a2
  412c25:	(bad)  
  412c26:	jne    0x412c27
	...
  412c64:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  412c65:	popf   
  412c66:	xchg   ebx,eax
  412c67:	(bad)  
  412c68:	(bad)  
  412c69:	(bad)  
  412c6a:	(bad)  
  412c6b:	(bad)  
  412c6c:	(bad)  
  412c6d:	sti    
  412c6e:	cli    
  412c6f:	(bad)  
  412c70:	(bad)  
  412c71:	sti    
  412c72:	cli    
  412c73:	(bad)  
  412c74:	(bad)  
  412c75:	sti    
  412c76:	cli    
  412c77:	(bad)  
  412c78:	(bad)  
  412c79:	sti    
  412c7a:	cli    
  412c7b:	(bad)  
  412c7c:	(bad)  
  412c7d:	sti    
  412c7e:	cli    
  412c7f:	(bad)  
  412c80:	(bad)  
  412c81:	sti    
  412c82:	cli    
  412c83:	(bad)  
  412c84:	(bad)  
  412c85:	sti    
  412c86:	cli    
  412c87:	(bad)  
  412c88:	(bad)  
  412c89:	sti    
  412c8a:	stc    
  412c8b:	(bad)  
  412c8c:	mov    eax,0x9bff9aa6
  412c91:	(bad)  
  412c92:	jo     0x412c93
  412c94:	mul    cl
  412c96:	(bad)  
  412c97:	(bad)  
  412c98:	mov    ecx,0xadff8e9e
  412c9d:	xchg   edx,eax
  412c9e:	cmp    edi,0xff64748f
  412ca4:	xchg   ebx,eax
  412ca5:	jg     0x412d18
  412ca7:	inc    DWORD PTR [rax]
	...
  412ce1:	add    BYTE PTR [rax],al
  412ce3:	add    BYTE PTR [rbx-0xf006961],ch
  412ce9:	in     eax,dx
  412cea:	jmp    0x412ceb
  412cec:	in     eax,dx
  412ced:	jrcxz  0x412cce
  412cef:	(bad)  
  412cf0:	in     eax,dx
  412cf1:	jrcxz  0x412cd1
  412cf3:	(bad)  
  412cf4:	in     eax,dx
  412cf5:	jrcxz  0x412cd5
  412cf7:	(bad)  
  412cf8:	in     al,dx
  412cf9:	loop   0x412cd9
  412cfb:	(bad)  
  412cfc:	in     al,dx
  412cfd:	loop   0x412cdc
  412cff:	(bad)  
  412d00:	in     al,dx
  412d01:	loope  0x412cde
  412d03:	(bad)  
  412d04:	jmp    0x412ce6
  412d06:	(bad)  
  412d08:	jmp    0x412ce9
  412d0a:	(bad)  
  412d0c:	(bad)  
  412d0d:	(bad)  
  412d0f:	jmp    FWORD PTR [rsi-0x66007467]
  412d15:	jg     0x412d86
  412d17:	push   rsi
  412d19:	loope  0x412cf3
  412d1b:	push   QWORD PTR [rbp-0x58007566]
  412d21:	mov    edi,DWORD PTR [rcx-0x1]
  412d24:	mov    esi,DWORD PTR [rax+0x5f]
  412d27:	dec    DWORD PTR [rcx+0x665b6e]
	...
  412d61:	add    BYTE PTR [rax],al
  412d63:	add    BYTE PTR [rcx+riz*4-0x433d0067],ch
  412d6a:	mov    dh,0xff
  412d6c:	mov    edi,0xbcffb2b8
  412d71:	mov    ah,0xad
  412d73:	push   QWORD PTR [rdi-0x4d005851]
  412d79:	test   eax,0xa2acffa0
  412d7e:	cdq    
  412d7f:	jmp    QWORD PTR [rdi-0x5e006d64]
  412d85:	xchg   esp,eax
  412d86:	mov    bh,bh
  412d88:	fwait
  412d89:	lea    eax,[rcx+0x798695ff]
  412d8f:	dec    DWORD PTR [rdi-0x73008d81]
  412d95:	jne    0x412dfc
  412d97:	call   QWORD PTR [rbx-0x9009786]
  412d9d:	loop   0x412d77
  412d9f:	jmp    FWORD PTR [rbx-0x65008071]
  412da5:	jle    0x412e13
  412da7:	(bad)  
  412da8:	jp     0x412e0a
  412daa:	rex.WR std 
  412dac:	jg     0x412e13
  412dae:	push   rcx
  412daf:	add    BYTE PTR fs:[rax],al
	...
  412de2:	add    BYTE PTR [rax],al
  412de4:	scas   al,BYTE PTR es:[rdi]
  412de5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  412de6:	fwait
  412de7:	(bad)  
  412de8:	(bad)  
  412de9:	(bad)  
  412dea:	std    
  412deb:	(bad)  
  412dec:	sti    
  412ded:	repnz in eax,dx
  412def:	(bad)  
  412df0:	sti    
  412df1:	icebp  
  412df2:	out    dx,al
  412df3:	(bad)  
  412df4:	sti    
  412df5:	icebp  
  412df6:	in     eax,dx
  412df7:	(bad)  
  412df8:	sti    
  412df9:	icebp  
  412dfa:	in     al,dx
  412dfb:	(bad)  
  412dfc:	sti    
  412dfd:	lock jmp 0x412dff
  412e00:	sti    
  412e01:	out    dx,eax
  412e02:	jmp    0x412e03
  412e04:	cli    
  412e05:	out    dx,eax
  412e06:	jmp    0xffffffffe92f290a
  412e0b:	(bad)  
  412e0c:	cli    
  412e0d:	in     eax,dx
  412e0e:	out    0xff,eax
  412e10:	cli    
  412e11:	in     al,dx
  412e12:	out    0xff,al
  412e14:	stc    
  412e15:	(bad)  
  412e16:	in     al,0xff
  412e18:	stos   DWORD PTR es:[rdi],eax
  412e19:	xchg   ebp,eax
  412e1a:	test   edi,edi
  412e1c:	mov    DWORD PTR [rax+0x5e],esi
  412e1f:	push   rsi
  412e21:	loop   0x412dfc
  412e23:	call   FWORD PTR [rax-0x6b009483]
  412e29:	jns    0x412e90
  412e2b:	push   QWORD PTR [rbx+0x58]
  412e2e:	rex.R std 
  412e30:	jnp    0x412e92
  412e32:	rex.WRB
  412e33:	add    BYTE PTR fs:[rax],al
	...
  412e62:	add    BYTE PTR [rax],al
  412e64:	mov    cl,0xa7
  412e66:	sahf   
  412e67:	(bad)  
  412e68:	(bad)  
  412e69:	(bad)  
  412e6a:	(bad)  
  412e6b:	(bad)  
  412e6c:	cld    
  412e6d:	repz out dx,eax
  412e6f:	(bad)  
  412e70:	cld    
  412e71:	repz out dx,eax
  412e73:	(bad)  
  412e74:	cld    
  412e75:	repz out dx,eax
  412e77:	(bad)  
  412e78:	sti    
  412e79:	repnz out dx,al
  412e7b:	(bad)  
  412e7c:	cld    
  412e7d:	repnz in eax,dx
  412e7f:	(bad)  
  412e80:	sti    
  412e81:	icebp  
  412e82:	in     al,dx
  412e83:	(bad)  
  412e84:	cli    
  412e85:	lock jmp 0x412e87
  412e88:	sti    
  412e89:	out    dx,eax
  412e8a:	(bad)  
  412e8b:	(bad)  
  412e8c:	cli    
  412e8d:	out    dx,al
  412e8e:	call   0xffffffffe82f2992
  412e93:	(bad)  
  412e94:	stc    
  412e95:	jmp    0x412e7c
  412e97:	(bad)  
  412e98:	stc    
  412e99:	jmp    0x412e7f
  412e9b:	jmp    QWORD PTR [rdi-0x7d007e70]
  412ea1:	addr32 push rsp
  412ea3:	push   rsi
  412ea5:	jrcxz  0x412e81
  412ea7:	jmp    FWORD PTR [rdx-0x55007e6f]
  412ead:	xchg   ecx,eax
  412eae:	cmp    edi,0xfe415570
  412eb4:	outs   dx,BYTE PTR ds:[rsi]
  412eb5:	push   rbx
  412eb6:	(bad)  
  412eb7:	out    dx,al
  412eb8:	ins    DWORD PTR es:[rdi],dx
  412eb9:	push   rbp
  412eba:	rex.X (bad) 
  412ebc:	ins    DWORD PTR es:[rdi],dx
  412ebd:	push   rbp
  412ebe:	rex.X (bad) 
  412ec0:	jns    0x412f20
  412ec2:	rex.WX sar BYTE PTR [rbx+0x60],cl
  412ec6:	rex.WR mov r15b,BYTE PTR [rcx+riz*2+0x4d]
  412ecb:	add    al,BYTE PTR [rax]
	...
  412ee1:	add    BYTE PTR [rax],al
  412ee3:	add    BYTE PTR [rdx-0x5e56],dh
  412ee9:	(bad)  
  412eea:	(bad)  
  412eeb:	(bad)  
  412eec:	cld    
  412eed:	cmc    
  412eee:	icebp  
  412eef:	(bad)  
  412ef0:	cld    
  412ef1:	cmc    
  412ef2:	icebp  
  412ef3:	(bad)  
  412ef4:	cld    
  412ef5:	hlt    
  412ef6:	icebp  
  412ef7:	(bad)  
  412ef8:	cld    
  412ef9:	hlt    
  412efa:	lock (bad) 
  412efc:	cld    
  412efd:	repz out dx,eax
  412eff:	(bad)  
  412f00:	cld    
  412f01:	repnz out dx,al
  412f03:	(bad)  
  412f04:	cld    
  412f05:	icebp  
  412f06:	in     eax,dx
  412f07:	(bad)  
  412f08:	sti    
  412f09:	lock in al,dx
  412f0b:	(bad)  
  412f0c:	cli    
  412f0d:	lock (bad) 
  412f0f:	(bad)  
  412f10:	cli    
  412f11:	out    dx,al
  412f12:	call   0xffffffffe82e2a16
  412f17:	(bad)  
  412f18:	stc    
  412f19:	in     al,dx
  412f1a:	in     eax,0xff
  412f1c:	stc    
  412f1d:	(bad)  
  412f1e:	jrcxz  0x412f1f
  412f20:	xchg   esi,eax
  412f21:	jge    0x412f8f
  412f23:	(bad)  
  412f24:	jge    0x412f89
  412f26:	rex.WRX push rdi
  412f29:	jrcxz  0x412f06
  412f2b:	jmp    FWORD PTR [rdx-0x3f007e6f]
  412f31:	test   eax,0x9eb8ff9d
  412f36:	nop
  412f37:	push   QWORD PTR [rax-0x57007769]
  412f3d:	(bad)  
  412f3e:	jle    0x412f3f
  412f40:	lahf   
  412f41:	test   BYTE PTR [rbx-0x1],dh
  412f44:	jne    0x412fa0
  412f46:	rex.RX push QWORD PTR [rcx+r11*2+0x44]
  412f4b:	sar    BYTE PTR [rcx+riz*2+0x4d],0x2
	...
  412f64:	mov    ch,0xac
  412f66:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  412f67:	(bad)  
  412f68:	(bad)  
  412f69:	(bad)  
  412f6a:	(bad)  
  412f6b:	(bad)  
  412f6c:	std    
  412f6d:	div    bl
  412f6f:	(bad)  
  412f70:	cld    
  412f71:	div    bl
  412f73:	(bad)  
  412f74:	cld    
  412f75:	div    bl
  412f77:	(bad)  
  412f78:	cld    
  412f79:	cmc    
  412f7a:	repnz (bad) 
  412f7c:	cld    
  412f7d:	cmc    
  412f7e:	lock (bad) 
  412f80:	cld    
  412f81:	repz out dx,eax
  412f83:	(bad)  
  412f84:	sti    
  412f85:	repz out dx,al
  412f87:	(bad)  
  412f88:	sti    
  412f89:	repnz in eax,dx
  412f8b:	(bad)  
  412f8c:	cli    
  412f8d:	icebp  
  412f8e:	jmp    0x412f8f
  412f90:	sti    
  412f91:	out    dx,eax
  412f92:	(bad)  
  412f93:	(bad)  
  412f94:	cli    
  412f95:	out    dx,al
  412f96:	call   0xffffffffe72e2a9a
  412f9b:	(bad)  
  412f9c:	stc    
  412f9d:	jmp    0x412f83
  412f9f:	dec    edx
  412fa1:	mov    al,0xa3
  412fa3:	inc    DWORD PTR [rbp-0x7300a191]
  412fa9:	je     0x41300e
  412fab:	push   rcx
  412fad:	rol    ecx,1
  412faf:	push   QWORD PTR [rsp+rbx*4-0x654b0073]
  412fb6:	mov    edi,edi
  412fb8:	lahf   
  412fb9:	xchg   DWORD PTR [rsi-0x1],esi
  412fbc:	(bad)  
  412fbd:	mov    cl,0xa5
  412fbf:	(bad)  
  412fc0:	mov    esi,0xb5ff98a6
  412fc5:	fwait
  412fc6:	(bad)  
  412fc7:	push   QWORD PTR [rbp+0x5a]
  412fca:	rex.RX push QWORD PTR [rdi+0x5c]
  412fce:	rex.RXB xchg r15d,eax
	...
  412fe4:	mov    bh,0xae
  412fe6:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  412fe7:	(bad)  
  412fe8:	(bad)  
  412fe9:	(bad)  
  412fea:	(bad)  
  412feb:	(bad)  
  412fec:	(bad)  
  412fed:	(bad)  
  412fee:	(bad)  
  412fef:	(bad)  
  412ff0:	(bad)  
  412ff1:	(bad)  
  412ff2:	(bad)  
  412ff3:	(bad)  
  412ff4:	(bad)  
  412ff5:	(bad)  
  412ff6:	(bad)  
  412ff7:	(bad)  
  412ff8:	(bad)  
  412ff9:	(bad)  
  412ffa:	(bad)  
  412ffb:	(bad)  
  412ffc:	(bad)  
  412ffd:	(bad)  
  412ffe:	(bad)  
  412fff:	(bad)  
  413000:	(bad)  
  413001:	(bad)  
  413002:	(bad)  
  413003:	(bad)  
  413004:	(bad)  
  413005:	(bad)  
  413006:	(bad)  
  413007:	(bad)  
  413008:	(bad)  
  413009:	(bad)  
  41300a:	(bad)  
  41300b:	(bad)  
  41300c:	(bad)  
  41300d:	(bad)  
  41300e:	(bad)  
  41300f:	(bad)  
  413010:	(bad)  
  413011:	(bad)  
  413012:	(bad)  
  413013:	(bad)  
  413014:	(bad)  
  413015:	(bad)  
  413016:	(bad)  
  413017:	(bad)  
  413018:	(bad)  
  413019:	(bad)  
  41301a:	(bad)  
  41301b:	(bad)  
  41301c:	(bad)  
  41301d:	(bad)  
  41301e:	(bad)  
  41301f:	(bad)  
  413020:	(bad)  
  413021:	std    
  413022:	cld    
  413023:	jmp    QWORD PTR [rbp-0x6f007168]
  413029:	jns    0x413093
  41302b:	div    bl
  41302d:	(bad)  
  41302e:	enter  0xbcff,0xa3
  413032:	xchg   esi,eax
  413033:	push   QWORD PTR [rbx-0x6f007466]
  413039:	jne    0x41309f
  41303b:	jmp    QWORD PTR [rbx+0x48]
  41303e:	xor    edi,edi
  413040:	movsxd ecx,DWORD PTR [rax+0x33]
  413043:	jmp    QWORD PTR [rbx+0x48]
  413046:	xor    edi,edi
  413048:	movsxd ecx,DWORD PTR [rax+0x33]
  41304b:	jmp    FWORD PTR [rbx+0x50]
  41304e:	cmp    esi,esi
	...
  413064:	mov    eax,0xc2ffa9b1
  413069:	mov    esp,0xb9bfffb6
  41306e:	mov    dl,0xff
  413070:	mov    ebx,0xb7ffadb5
  413075:	scas   eax,DWORD PTR es:[rdi]
  413076:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  413077:	push   QWORD PTR [rdx-0x52005e57]
  41307d:	movabs ds:0x95a1ff929ba7ff9a,al
  413086:	mov    bh,bh
  413088:	fwait
  413089:	lea    eax,[rdx+0x798695ff]
  41308f:	call   QWORD PTR [rax-0x75008d82]
  413095:	jns    0x413101
  413097:	inc    DWORD PTR [rbp-0x7f009c8e]
  41309d:	ins    DWORD PTR es:[rdi],dx
  41309e:	pop    rsi
  41309f:	(bad)  
  4130a0:	jge    0x41310a
  4130a2:	pop    rcx
  4130a3:	jmp    QWORD PTR [rdi-0x6a006e65]
  4130a9:	jle    0x413118
  4130ab:	std    
  4130ac:	hlt    
  4130ad:	fcmove st,st(6)
  4130af:	inc    ebx
  4130b1:	lods   eax,DWORD PTR ds:[rsi]
  4130b2:	movabs al,ds:0x5d6f87ff94a2bbff
  4130bb:	inc    DWORD PTR [rax]
	...
  4130e1:	add    BYTE PTR [rax],al
  4130e3:	add    BYTE PTR [rdx-0x1600544d],bh
  4130e9:	out    0xe5,eax
  4130eb:	(bad)  
  4130ec:	call   0xffffffffe94112d5
  4130f1:	in     al,0xe1
  4130f3:	jmp    rdi
  4130f5:	jrcxz  0x4130d7
  4130f7:	jmp    rdi
  4130f9:	loope  0x4130da
  4130fb:	jmp    rbp
  4130fd:	loopne 0x4130db
  4130ff:	jmp    rbp
  413101:	(bad)  
  413103:	jmp    rsp
  413105:	fstp   st(1)
  413107:	jmp    rdx
  413109:	fcmovnbe st,st(7)
  41310b:	jmp    rcx
  41310d:	(bad)  
  41310f:	jmp    rax
  413111:	fcom   st(2)
  413113:	(bad)  
  413114:	(bad)  
  413116:	iret   
  413117:	(bad)  
  413118:	(bad)  
  41311a:	int    0xff
  41311c:	(bad)  
  41311e:	retf   0xdbff
  413121:	iret   
  413122:	enter  0xa9ff,0x9e
  413126:	xchg   ebp,eax
  413127:	call   FWORD PTR [rcx-0xa028e7e]
  41312d:	(bad)  
  41312f:	dec    ebx
  413131:	mov    eax,0xabc2ffac
  413136:	lahf   
  413137:	dec    DWORD PTR [rbp+0xff6375]
	...
  413161:	add    BYTE PTR [rax],al
  413163:	add    BYTE PTR [rbp+rsi*4-0x53],bh
  41316a:	(bad)  
  41316b:	(bad)  
  41316c:	(bad)  
  41316d:	sti    
  41316e:	cli    
  41316f:	(bad)  
  413170:	std    
  413171:	sti    
  413172:	stc    
  413173:	(bad)  
  413174:	(bad)  
  413175:	cli    
  413176:	stc    
  413177:	(bad)  
  413178:	std    
  413179:	cli    
  41317a:	idiv   edi
  41317c:	std    
  41317d:	clc    
  41317e:	idiv   edi
  413180:	std    
  413181:	clc    
  413182:	cmc    
  413183:	(bad)  
  413184:	cld    
  413185:	div    ebx
  413187:	(bad)  
  413188:	cld    
  413189:	cmc    
  41318a:	repnz (bad) 
  41318c:	sti    
  41318d:	repz lock (bad) 
  413190:	sti    
  413191:	repz out dx,al
  413193:	(bad)  
  413194:	sti    
  413195:	icebp  
  413196:	in     al,dx
  413197:	(bad)  
  413198:	sti    
  413199:	out    dx,eax
  41319a:	(bad)  
  41319b:	(bad)  
  41319c:	cli    
  41319d:	out    dx,al
  41319e:	call   0xffffffffa4f607a2
  4131a3:	jmp    FWORD PTR [rbx-0x62006860]
  4131a9:	xchg   BYTE PTR [rsi-0x1d],dh
  4131ac:	mul    esp
  4131ae:	(bad)  
  4131b0:	rol    ebx,cl
  4131b2:	mov    edx,0xabb5c9ff
  4131b7:	call   QWORD PTR [rdx+0xfd6a7c]
	...
  4131e1:	add    BYTE PTR [rax],al
  4131e3:	add    BYTE PTR [rbp-0x4f4a],bh
  4131e9:	(bad)  
  4131ea:	(bad)  
  4131eb:	(bad)  
  4131ec:	(bad)  
  4131ed:	cld    
  4131ee:	sti    
  4131ef:	(bad)  
  4131f0:	(bad)  
  4131f1:	cld    
  4131f2:	cli    
  4131f3:	(bad)  
  4131f4:	std    
  4131f5:	cld    
  4131f6:	cli    
  4131f7:	(bad)  
  4131f8:	(bad)  
  4131f9:	sti    
  4131fa:	stc    
  4131fb:	(bad)  
  4131fc:	(bad)  
  4131fd:	stc    
  4131fe:	clc    
  4131ff:	(bad)  
  413200:	std    
  413201:	stc    
  413202:	idiv   bh
  413204:	std    
  413205:	div    ah
  413207:	(bad)  
  413208:	cld    
  413209:	cmc    
  41320a:	repnz (bad) 
  41320c:	cld    
  41320d:	hlt    
  41320e:	icebp  
  41320f:	(bad)  
  413210:	cld    
  413211:	repz out dx,eax
  413213:	(bad)  
  413214:	sti    
  413215:	repnz in eax,dx
  413217:	(bad)  
  413218:	sti    
  413219:	lock jmp 0x41321b
  41321c:	sti    
  41321d:	out    dx,eax
  41321e:	call   0xffffffffa4f60822
  413223:	jmp    FWORD PTR [rsi-0x5e00645d]
  413229:	mov    edi,DWORD PTR [rbx-0x69]
  41322c:	pushf  
  41322d:	test   DWORD PTR [rbp-0x1],esi
  413230:	mul    esp
  413232:	(bad)  
  413234:	rol    cl,cl
  413236:	mov    eax,0x8997adff
  41323b:	jmp    QWORD PTR [rbx+0x48]
  41323e:	xor    edi,edi
  413240:	movsxd ecx,DWORD PTR [rax+0x33]
  413243:	jmp    QWORD PTR [rbx+0x48]
  413246:	xor    edi,edi
  413248:	movsxd ecx,DWORD PTR [rax+0x33]
  41324b:	push   QWORD PTR [rdi+0x5c]
  41324e:	rex.RXB xchg r15d,eax
	...
  413264:	mov    edi,0xffffb2b8
  413269:	(bad)  
  41326a:	(bad)  
  41326b:	(bad)  
  41326c:	(bad)  
  41326d:	std    
  41326e:	cld    
  41326f:	(bad)  
  413270:	(bad)  
  413271:	std    
  413272:	cld    
  413273:	(bad)  
  413274:	(bad)  
  413275:	cld    
  413276:	cli    
  413277:	(bad)  
  413278:	(bad)  
  413279:	sti    
  41327a:	stc    
  41327b:	(bad)  
  41327c:	(bad)  
  41327d:	stc    
  41327e:	clc    
  41327f:	(bad)  
  413280:	std    
  413281:	stc    
  413282:	idiv   bh
  413284:	std    
  413285:	clc    
  413286:	cmc    
  413287:	(bad)  
  413288:	cld    
  413289:	div    bl
  41328b:	(bad)  
  41328c:	cld    
  41328d:	hlt    
  41328e:	icebp  
  41328f:	(bad)  
  413290:	cld    
  413291:	repz lock (bad) 
  413294:	cld    
  413295:	repnz in eax,dx
  413297:	(bad)  
  413298:	sti    
  413299:	icebp  
  41329a:	jmp    0x41329b
  41329c:	cli    
  41329d:	out    dx,eax
  41329e:	jmp    0xffffffffa4f608a2
  4132a3:	jmp    FWORD PTR [rdi-0x5900625b]
  4132a9:	nop
  4132aa:	add    BYTE PTR [rdx],0xa1
  4132ad:	mov    bh,BYTE PTR [rdx-0x40]
  4132b0:	pushf  
  4132b1:	test   DWORD PTR [rdi+rdi*8-0x9],esi
  4132b5:	in     eax,0xdc
  4132b7:	call   rdi
  4132b9:	mov    esp,0xbad5ffae
  4132be:	stos   DWORD PTR es:[rdi],eax
  4132bf:	call   rbx
  4132c1:	mov    eax,0x5a75ffa9
  4132c6:	rex.RX push QWORD PTR [rcx+r11*2+0x44]
  4132cb:	sar    BYTE PTR [rcx+riz*2+0x4d],0x2
	...
  4132e4:	sar    BYTE PTR [rcx-0x4d],0xff
  4132eb:	(bad)  
  4132ec:	(bad)  
  4132ed:	(bad)  
  4132ee:	std    
  4132ef:	(bad)  
  4132f0:	(bad)  
  4132f1:	std    
  4132f2:	std    
  4132f3:	(bad)  
  4132f4:	(bad)  
  4132f5:	std    
  4132f6:	cld    
  4132f7:	(bad)  
  4132f8:	(bad)  
  4132f9:	cld    
  4132fa:	cli    
  4132fb:	(bad)  
  4132fc:	(bad)  
  4132fd:	cli    
  4132fe:	stc    
  4132ff:	(bad)  
  413300:	std    
  413301:	stc    
  413302:	idiv   edi
  413304:	std    
  413305:	div    esi
  413307:	(bad)  
  413308:	std    
  413309:	div    ebx
  41330b:	(bad)  
  41330c:	cld    
  41330d:	hlt    
  41330e:	icebp  
  41330f:	(bad)  
  413310:	cld    
  413311:	hlt    
  413312:	out    dx,eax
  413313:	(bad)  
  413314:	cld    
  413315:	repnz in eax,dx
  413317:	(bad)  
  413318:	sti    
  413319:	lock jmp 0x41331b
  41331c:	cli    
  41331d:	out    dx,eax
  41331e:	jmp    0xffffffffc00d1822
  413323:	push   QWORD PTR [rcx+0xffa0a9]
  413329:	add    BYTE PTR [rax],al
  41332b:	add    BYTE PTR [rbp-0x5ffd8071],ah
  413331:	mov    bh,BYTE PTR [rcx-0x69]
  413334:	fwait
  413335:	test   BYTE PTR [rbx-0x1d],dh
  413338:	xchg   esi,eax
  413339:	jg     0x4133a9
  41333b:	std    
  41333c:	xchg   ecx,eax
  41333d:	jns    0x4133a7
  41333f:	std    
  413340:	mov    esi,DWORD PTR [rdx+riz*2-0x1d]
  413344:	xchg   BYTE PTR [rsi+0x5c],ch
  413347:	xchg   edi,eax
  413348:	sub    DWORD PTR [rax+0x55],0x2
	...
  413363:	add    cl,al
  413365:	mov    edx,0xffffffb5
  41336a:	(bad)  
  41336b:	(bad)  
  41336c:	(bad)  
  41336d:	(bad)  
  41336e:	(bad)  
  41336f:	(bad)  
  413370:	(bad)  
  413371:	(bad)  
  413372:	(bad)  
  413373:	(bad)  
  413374:	(bad)  
  413375:	(bad)  
  413376:	(bad)  
  413377:	(bad)  
  413378:	(bad)  
  413379:	(bad)  
  41337a:	(bad)  
  41337b:	(bad)  
  41337c:	(bad)  
  41337d:	(bad)  
  41337e:	(bad)  
  41337f:	(bad)  
  413380:	(bad)  
  413381:	(bad)  
  413382:	std    
  413383:	(bad)  
  413384:	(bad)  
  413385:	(bad)  
  413386:	std    
  413387:	(bad)  
  413388:	(bad)  
  413389:	std    
  41338a:	std    
  41338b:	(bad)  
  41338c:	(bad)  
  41338d:	std    
  41338e:	cld    
  41338f:	(bad)  
  413390:	(bad)  
  413391:	std    
  413392:	cld    
  413393:	(bad)  
  413394:	(bad)  
  413395:	cld    
  413396:	cld    
  413397:	(bad)  
  413398:	(bad)  
  413399:	cld    
  41339a:	sti    
  41339b:	(bad)  
  41339c:	(bad)  
  41339d:	cld    
  41339e:	sti    
  41339f:	(bad)  
  4133a0:	std    
  4133a1:	div    ah
  4133a3:	push   QWORD PTR [rbx+0xffa3ab]
	...
  4133e1:	add    BYTE PTR [rax],al
  4133e3:	add    dl,al
  4133e5:	mov    esp,0xbcc1ffb6
  4133ea:	mov    ch,0xff
  4133ec:	sar    DWORD PTR [rbx-0x453f004b],0xb4
  4133f3:	inc    eax
  4133f5:	mov    ecx,0xb8bfffb3
  4133fa:	mov    dl,0xff
  4133fc:	mov    edi,0xbeffb1b8
  413401:	mov    bh,0xb0
  413403:	(bad)  
  413404:	mov    esp,0xbcffafb6
  413409:	mov    ch,0xae
  41340b:	(bad)  
  41340c:	mov    ebx,0xbaffadb4
  413411:	mov    bl,0xac
  413413:	(bad)  
  413414:	mov    ecx,0xb9ffaab2
  413419:	mov    al,0xa9
  41341b:	(bad)  
  41341c:	mov    eax,0xb7ffa8af
  413421:	scas   eax,DWORD PTR es:[rdi]
  413422:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  413423:	push   QWORD PTR [rsi+0xffa5ad]
	...
  4134d1:	add    BYTE PTR [rax],al
  4134d3:	add    al,dh
  4134d5:	add    BYTE PTR [rdi],al
  4134d7:	push   rax
  4134d9:	add    BYTE PTR [rdi],al
  4134db:	push   rax
  4134dd:	add    BYTE PTR [rdi],al
  4134df:	push   rax
  4134e1:	add    BYTE PTR [rdi],al
  4134e3:	push   rax
  4134e5:	add    BYTE PTR [rdi],al
  4134e7:	push   rax
  4134e9:	add    BYTE PTR [rdi],al
  4134eb:	push   rax
  4134ed:	add    BYTE PTR [rdi],al
  4134ef:	push   rax
  4134f1:	add    BYTE PTR [rdi],al
  4134f3:	push   rax
  4134f5:	add    BYTE PTR [rdi],al
  4134f7:	push   rax
  4134f9:	add    BYTE PTR [rdi],al
  4134fb:	push   rax
  4134fd:	add    BYTE PTR [rdi],al
  4134ff:	push   rax
  413501:	add    BYTE PTR [rdi],al
  413503:	push   rax
  413505:	add    BYTE PTR [rdi],al
  413507:	push   rax
  413509:	add    BYTE PTR [rdi],al
  41350b:	push   rax
  41350d:	add    BYTE PTR [rdi],al
  41350f:	push   rax
  413511:	add    BYTE PTR [rdi],al
  413513:	push   rax
  413515:	add    BYTE PTR [rbx],al
  413517:	push   rax
  413519:	add    BYTE PTR [rcx],al
  41351b:	push   rax
  41351d:	add    BYTE PTR [rax],al
  41351f:	push   rax
  413521:	add    BYTE PTR [rax],al
  413523:	add    esi,eax
  413525:	add    BYTE PTR [rax],al
  413527:	add    eax,esi
  413529:	add    BYTE PTR [rax],al
  41352b:	add    eax,esi
  41352d:	add    BYTE PTR [rax],al
  41352f:	add    eax,esi
  413531:	add    BYTE PTR [rax],al
  413533:	(bad)  
  413534:	lock add BYTE PTR [rax],al
  413537:	(bad)  
  413538:	lock add BYTE PTR [rax],al
  41353b:	(bad)  
  41353c:	lock add BYTE PTR [rax],al
  41353f:	add    eax,esi
  413541:	add    BYTE PTR [rax],al
  413543:	add    eax,esi
  413545:	add    BYTE PTR [rbx+rax*1],al
  413548:	lock add BYTE PTR [rdi],al
  41354b:	push   rax
  41354d:	add    BYTE PTR [rdi],al
  41354f:	(bad)  
  413550:	(bad)  
  413551:	(bad)  
  413552:	(bad)  
  413553:	jmp    FWORD PTR [rax]
  413555:	add    BYTE PTR [rax],al
  413557:	add    BYTE PTR [rax],dl
  413559:	add    BYTE PTR [rax],al
  41355b:	add    BYTE PTR [rax],ah
  41355d:	add    BYTE PTR [rax],al
  41355f:	add    BYTE PTR [rcx],al
  413561:	add    BYTE PTR [rax],ah
  413563:	add    BYTE PTR [rax],al
  413565:	add    BYTE PTR [rax],al
  413567:	add    BYTE PTR [rax+0x4],al
	...
  41357e:	add    BYTE PTR [rax],al
  413580:	jne    0x4135de
  413582:	rex.W push QWORD PTR [rdx+0x58]
  413586:	rex.R jmp FWORD PTR [rsi+0x55]
  41358a:	rex jmp FWORD PTR [rbx+0x51]
  41358e:	cmp    eax,0x3a4e68ff
  413593:	jmp    QWORD PTR [rsi+0x4c]
  413596:	jmp    QWORD PTR ss:[rcx+rcx*2+0x34]
  41359b:	jmp    QWORD PTR [rbx+0x48]
  41359e:	xor    edi,edi
  4135a0:	movsxd ecx,DWORD PTR [rax+0x33]
  4135a3:	inc    DWORD PTR [rax]
	...
  4135bd:	add    BYTE PTR [rax],al
  4135bf:	add    BYTE PTR [rdx+0x61],bh
  4135c2:	rex.WRX inc rbp
  4135c5:	mov    ebp,0xa8c8ffb6
  4135ca:	xchg   edi,eax
  4135cb:	inc    edi
  4135cd:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4135ce:	xchg   ebp,eax
  4135cf:	inc    edi
  4135d1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  4135d2:	xchg   esp,eax
  4135d3:	inc    esi
  4135d5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  4135d6:	xchg   edx,eax
  4135d7:	inc    esi
  4135d9:	movabs ds:0x4863ff90a2c6ff92,eax
  4135e2:	xor    edi,edi
	...
  413600:	sub    BYTE PTR [rax+0x55],0xff
  413604:	(bad)  
  413605:	(bad)  
  413606:	(bad)  
  413607:	push   rbx
  413609:	xlat   BYTE PTR ds:[rbx]
  41360a:	leave  
  41360b:	push   rdx
  41360d:	(bad)  
  41360e:	(bad)  
  41360f:	push   rdx
  413611:	(bad)  
  413612:	(bad)  
  413615:	int3   
  413616:	add    bh,bh
  413618:	cs fwait
  41361a:	add    bh,bh
  41361c:	(bad)  
  41361d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  41361e:	xchg   esp,eax
  41361f:	jmp    QWORD PTR [rbp+0x4b]
  413622:	(bad)  
  413623:	inc    DWORD PTR [rax]
	...
  41363d:	add    BYTE PTR [rax],al
  41363f:	add    BYTE PTR [rsi-0xa493],al
  413645:	(bad)  
  413646:	(bad)  
  413647:	push   rsp
  413649:	fcmove st,st(6)
  41364b:	push   rsp
  41364d:	fxch   st(4)
  41364f:	push   rbx
  413651:	xlat   BYTE PTR ds:[rbx]
  413652:	retf   0xcff
  413655:	inc    DWORD PTR [rax]
  413657:	jmp    FWORD PTR [rsi]
  413659:	int3   
  41365a:	add    bh,bh
  41365c:	enter  0x98a8,0xff
  413660:	imul   ecx,DWORD PTR [rsi+0x3a],0xff
	...
  41367f:	add    BYTE PTR [rsp+rsi*2-0x9e],cl
  413686:	(bad)  
  413687:	push   rbp
  413689:	(bad)  
  41368b:	push   rbp
  41368d:	fst    st(1)
  41368f:	push   rsp
  413691:	fcmovne st,st(7)
  413693:	dec    DWORD PTR [rax+0x7bff6b78]
  413699:	imul   esp,DWORD PTR [rdx-0x1],0xffffffb7
  41369d:	pushf  
  41369e:	mov    edi,?
  4136a0:	outs   dx,BYTE PTR ds:[rsi]
  4136a1:	push   rbx
  4136a2:	(bad)  
  4136a3:	inc    DWORD PTR [rax]
	...
  4136bd:	add    BYTE PTR [rax],al
  4136bf:	add    BYTE PTR [rdx-0x9686],dl
  4136c5:	(bad)  
  4136c6:	(bad)  
  4136c7:	push   rsi
  4136c9:	loope  0x4136a3
  4136cb:	push   rsi
  4136cd:	loopne 0x4136a5
  4136cf:	push   rbp
  4136d1:	(bad)  
  4136d3:	push   rsi
  4136d5:	jrcxz  0x4136b0
  4136d7:	call   FWORD PTR [rbx-0x74007f74]
  4136dd:	jae    0x413743
  4136df:	push   QWORD PTR [rdx+0x58]
  4136e2:	rex.R inc DWORD PTR [rax]
	...
  4136fd:	add    BYTE PTR [rax],al
  4136ff:	add    BYTE PTR [rax-0x8f7f],bl
  413705:	(bad)  
  413706:	(bad)  
  413707:	push   rdi
  413709:	in     eax,0xdc
  41370b:	push   QWORD PTR [rdi-0x7006f5f]
  413711:	call   0xffffffffd72d36f8
  413716:	retf   
  413717:	jmp    QWORD PTR [rbx+rdx*4+0x5f77ff87]
  41371e:	rex.WRX push QWORD PTR [rdi+0x5d]
  413722:	rex.WX inc QWORD PTR [rax]
	...
  41373d:	add    BYTE PTR [rax],al
  41373f:	add    BYTE PTR [rsi-0x8879],bl
  413745:	(bad)  
  413746:	(bad)  
  413747:	(bad)  
  413748:	(bad)  
  413749:	(bad)  
  41374a:	(bad)  
  41374b:	push   QWORD PTR [rdi-0x3b006f5f]
  413751:	mov    dl,0xa5
  413753:	inc    ecx
  413755:	lods   eax,DWORD PTR ds:[rsi]
  413756:	lahf   
  413757:	jmp    FWORD PTR [rdx+0x7aff8c98]
  41375d:	fs push rbx
  41375f:	(bad)  
  413760:	jnp    0x4137c3
  413762:	rex.WRX inc QWORD PTR [rax]
	...
  41377d:	add    BYTE PTR [rax],al
  41377f:	add    BYTE PTR [rsi+rcx*4-0x45330082],ah
  413786:	lods   eax,DWORD PTR ds:[rsi]
  413787:	push   QWORD PTR [rdi-0x50006c5e]
  41378d:	(bad)  
  41378e:	mov    edi,edi
  413790:	cwde   
  413791:	xchg   DWORD PTR [rbx-0x1],edi
  413794:	xchg   ecx,eax
  413795:	jp     0x4137ff
  413797:	inc    DWORD PTR [rbx-0xa194]
  41379d:	(bad)  
  41379e:	std    
  41379f:	push   QWORD PTR [rbp+0x59]
  4137a2:	rex.R push QWORD PTR [rbp+0x59]
  4137a6:	xor    r8d,DWORD PTR [rax]
	...
  4137bd:	add    BYTE PTR [rax],al
  4137bf:	add    BYTE PTR [rcx-0x7a6c],ch
  4137c5:	(bad)  
  4137c6:	(bad)  
  4137c7:	(bad)  
  4137c8:	sti    
  4137c9:	lock jmp 0x4137cb
  4137cc:	cli    
  4137cd:	out    dx,eax
  4137ce:	jmp    0xffffffffe92f32d2
  4137d3:	(bad)  
  4137d4:	stc    
  4137d5:	in     al,dx
  4137d6:	out    0xff,al
  4137d8:	stc    
  4137d9:	jmp    0x4137bf
  4137db:	push   QWORD PTR [rdi-0x6f5f]
  4137e1:	(bad)  
  4137e2:	std    
  4137e3:	push   QWORD PTR [rbp+0x59]
  4137e6:	rex.R push QWORD PTR [rbp+0x59]
  4137ea:	xor    r8d,DWORD PTR [rax]
	...
  4137fd:	add    BYTE PTR [rax],al
  4137ff:	add    BYTE PTR [rax-0x7365],dh
  413805:	(bad)  
  413806:	(bad)  
  413807:	(bad)  
  413808:	(bad)  
  413809:	(bad)  
  41380a:	(bad)  
  41380b:	(bad)  
  41380c:	(bad)  
  41380d:	(bad)  
  41380e:	(bad)  
  41380f:	(bad)  
  413810:	(bad)  
  413811:	(bad)  
  413812:	(bad)  
  413813:	(bad)  
  413814:	(bad)  
  413815:	(bad)  
  413816:	(bad)  
  413817:	(bad)  
  413818:	(bad)  
  413819:	(bad)  
  41381a:	(bad)  
  41381b:	push   rbx
  41381d:	out    dx,eax
  41381e:	in     al,dx
  41381f:	push   QWORD PTR [rdi-0x6f5f]
  413825:	(bad)  
  413826:	std    
  413827:	push   QWORD PTR [rbp+0x59]
  41382a:	rex.R push QWORD PTR [rbp+0x59]
  41382e:	xor    r8d,DWORD PTR [rax]
	...
  41383d:	add    BYTE PTR [rax],al
  41383f:	add    BYTE PTR [rbp-0x33006d5f],dh
  413845:	mov    edx,0xb0c4ffad
  41384a:	movabs ds:0x92a2b6ff9ba9bdff,al
  413853:	jmp    FWORD PTR [rsi-0x59007567]
  413859:	xchg   ecx,eax
  41385a:	cmp    edi,0xff78889f
  413860:	xchg   esp,eax
  413861:	jl     0x4138cd
  413863:	push   QWORD PTR [rdi-0x6f5f]
  413869:	(bad)  
  41386a:	std    
  41386b:	dec    DWORD PTR [rax-0x7b00a291]
  413871:	imul   edx,DWORD PTR [rdi-0x1],0xff70819a
  413878:	movabs ds:0xbb000000006c7a8b,eax
  413881:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  413882:	xchg   edi,eax
  413883:	(bad)  
  413884:	(bad)  
  413885:	(bad)  
  413886:	(bad)  
  413887:	(bad)  
  413888:	sti    
  413889:	repnz out dx,al
  41388b:	(bad)  
  41388c:	stc    
  41388d:	jmp    0x413874
  41388f:	(bad)  
  413890:	clc    
  413891:	in     eax,0xdc
  413893:	push   rbp
  413895:	(bad)  
  413897:	push   rbx
  413899:	xlat   BYTE PTR ds:[rbx]
  41389a:	retf   
  41389b:	call   rbp
  41389d:	mov    ah,0xa4
  41389f:	call   FWORD PTR [rdx+0xff7283]
  4138a5:	add    BYTE PTR [rax],al
  4138a7:	add    BYTE PTR [rsi-0x3d009382],dl
  4138ad:	scas   eax,DWORD PTR es:[rdi]
  4138ae:	movabs al,ds:0x838f9eff96a5b7ff
  4138b7:	std    
  4138b8:	movabs al,ds:0xc300000000ff7d8d
  4138c1:	scas   eax,DWORD PTR es:[rdi]
  4138c2:	movabs ds:0xfffffffffcfcfcff,al
  4138cb:	(bad)  
  4138cc:	(bad)  
  4138cd:	(bad)  
  4138ce:	(bad)  
  4138cf:	(bad)  
  4138d0:	(bad)  
  4138d1:	(bad)  
  4138d2:	(bad)  
  4138d3:	(bad)  
  4138d4:	(bad)  
  4138d5:	(bad)  
  4138d6:	(bad)  
  4138d7:	(bad)  
  4138d8:	(bad)  
  4138d9:	(bad)  
  4138da:	(bad)  
  4138db:	push   rbx
  4138dd:	out    dx,eax
  4138de:	in     al,dx
  4138df:	jmp    QWORD PTR [rsi+0xff8090]
  4138e5:	add    BYTE PTR [rax],al
  4138e7:	add    BYTE PTR [rax-0x3e009282],bl
  4138ed:	lods   eax,DWORD PTR ds:[rsi]
  4138ee:	lahf   
  4138ef:	inc    eax
  4138f1:	lods   al,BYTE PTR ds:[rsi]
  4138f2:	popf   
  4138f3:	xor    eax,0x25fefefe
  4138f8:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4138f9:	xchg   ebx,eax
  4138fa:	test   bh,bh
  4138fc:	add    BYTE PTR [rax],al
  4138fe:	add    BYTE PTR [rax],al
  413900:	(bad)  
  413901:	mov    bl,0xa6
  413903:	inc    esp
  413905:	mov    cl,0xa3
  413907:	inc    ecx
  413909:	scas   al,BYTE PTR es:[rdi]
  41390a:	movabs al,ds:0x98a7bbff9cabbeff
  413913:	(bad)  
  413914:	mov    eax,0xb4ff95a3
  413919:	lahf   
  41391a:	nop
  41391b:	jmp    FWORD PTR [rdi-0x54007366]
  413921:	xchg   esi,eax
  413922:	xchg   edi,edi
  413924:	add    BYTE PTR [rax],al
  413926:	add    BYTE PTR [rax],al
  413928:	mov    ebp,0xc9ff98a8
  41392d:	mov    dh,0xa9
  41392f:	(bad)  
  413930:	cld    
  413931:	cli    
  413932:	stc    
  413933:	add    BYTE PTR [rax],r8b
	...
  413966:	add    BYTE PTR [rax],al
  413968:	mov    bh,0xa1
  41396a:	nop
  41396b:	push   rbp
  41396c:	mov    bh,0xa1
  41396e:	nop
  41396f:	push   QWORD PTR [rdi+0xff90a1]
  413975:	add    BYTE PTR [rax],al
  413977:	add    BYTE PTR [rax],al
  413979:	add    BYTE PTR [rax],al
  41397b:	add    BYTE PTR [rax-0x7fffffc1],al
  413981:	(bad)  
  413982:	add    BYTE PTR [rax],al
  413984:	cmp    BYTE PTR [rdi],0x0
  413987:	add    BYTE PTR [rax-0x7fffffc1],al
  41398d:	(bad)  
  41398e:	add    BYTE PTR [rax],al
  413990:	cmp    BYTE PTR [rdi],0x0
  413993:	add    BYTE PTR [rax-0x7fffffc1],al
  413999:	(bad)  
  41399a:	add    BYTE PTR [rax],al
  41399c:	sbb    BYTE PTR [rdi],0x0
  41399f:	add    BYTE PTR [rax-0x7ffffff1],al
  4139a5:	(bad)  
  4139a6:	add    BYTE PTR [rax],al
  4139a8:	add    BYTE PTR [rax],0x0
  4139ab:	add    BYTE PTR [rax-0x7fffffe0],al
  4139b1:	and    BYTE PTR [rax],al
  4139b3:	add    BYTE PTR [rax-0xffffdd],al
  4139b9:	jrcxz  0x4139bb
  4139bb:	add    BYTE PTR [rbx],cl
  4139bd:	add    BYTE PTR [rcx],al
  4139c0:	add    BYTE PTR [rax],al
  4139c2:	add    bh,bh
  4139c4:	(bad)  
  4139c5:	(bad)  
  4139c6:	inc    DWORD PTR [rcx]
  4139c8:	add    BYTE PTR [rax],al
  4139ca:	add    BYTE PTR [rax],al
  4139cc:	add    BYTE PTR [rax],al
  4139ce:	add    BYTE PTR [rdx+rax*1],cl
  4139d1:	add    BYTE PTR [rax],al
  4139d3:	add    BYTE PTR [rcx+0x53],dl
  4139d6:	jns    0x413a4b
  4139d8:	je     0x413a3f
  4139da:	ins    DWORD PTR es:[rdi],dx
  4139db:	cs rex.R jb 0x413a40
  4139df:	ja     0x413a4a
  4139e1:	outs   dx,BYTE PTR ds:[rsi]
  4139e2:	addr32 sub al,0x20
  4139e5:	push   rsi
  4139e6:	gs jb  0x413a5c
  4139e9:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  4139f0:	xor    BYTE PTR cs:[rsi],ch
  4139f3:	xor    BYTE PTR [rax+riz*1],ch
  4139f6:	rex.XB jne 0x413a65
  4139f9:	je     0x413a70
  4139fb:	jb     0x413a62
  4139fd:	cmp    eax,0x7475656e
  413a02:	jb     0x413a65
  413a04:	ins    BYTE PTR es:[rdi],dx
  413a05:	sub    al,0x20
  413a07:	push   rax
  413a08:	jne    0x413a6c
  413a0a:	ins    BYTE PTR es:[rdi],dx
  413a0b:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  413a12:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  413a16:	(bad)  
  413a17:	xor    BYTE PTR [rbx],dh
  413a19:	xor    ax,0x3766
  413a1d:	xor    WORD PTR [rcx],si
  413a20:	fs xor eax,0x61336130
  413a26:	add    eax,0x1
  413a2b:	adc    edx,DWORD PTR [rbx+0x79]
  413a2e:	jae    0x413aa4
  413a30:	gs ins DWORD PTR es:[rdi],dx
  413a32:	cs rex.R jb 0x413a97
  413a36:	ja     0x413aa1
  413a38:	outs   dx,BYTE PTR ds:[rsi]
  413a39:	movsxd rbp,DWORD PTR cs:[r15d+0x6e]
  413a3f:	add    al,BYTE PTR [rax]
  413a41:	add    BYTE PTR [rax],al
  413a43:	or     BYTE PTR [rcx+0x63],cl
  413a46:	outs   dx,DWORD PTR ds:[rsi]
  413a47:	outs   dx,BYTE PTR ds:[rsi]
  413a48:	rex.R (bad) 
  413a4a:	je     0x413aad
  413a4c:	or     BYTE PTR [rcx+0x63],cl
  413a4f:	outs   dx,DWORD PTR ds:[rsi]
  413a50:	outs   dx,BYTE PTR ds:[rsi]
  413a51:	push   rbx
  413a52:	imul   edi,DWORD PTR [rdx+0x65],0x13020407
  413a59:	push   rbx
  413a5a:	jns    0x413acf
  413a5c:	je     0x413ac3
  413a5e:	ins    DWORD PTR es:[rdi],dx
  413a5f:	cs rex.R jb 0x413ac4
  413a63:	ja     0x413ace
  413a65:	outs   dx,BYTE PTR ds:[rsi]
  413a66:	addr32 cs push rbx
  413a69:	imul   edi,DWORD PTR [rdx+0x65],0x2
  413a70:	add    al,BYTE PTR [rax]
  413a72:	add    BYTE PTR [rax],al
  413a74:	or     DWORD PTR [rbx],eax
  413a76:	add    BYTE PTR [rax],al
  413a78:	add    BYTE PTR [rip+0xfffffffffffffffc],al        # 0x413a7a
  413a7e:	adc    edx,DWORD PTR [rbx+0x79]
  413a81:	jae    0x413af7
  413a83:	gs ins DWORD PTR es:[rdi],dx
  413a85:	cs rex.R jb 0x413aea
  413a89:	ja     0x413af4
  413a8b:	outs   dx,BYTE PTR ds:[rsi]
  413a8c:	addr32 cs push rbx
  413a8f:	imul   edi,DWORD PTR [rdx+0x65],0x2
  413a96:	add    eax,0x74646977
  413a9b:	push   0x69656806
  413aa0:	addr32 push 0x8000074
  413aa6:	or     BYTE PTR [rdx],al
	...
  413ab0:	add    BYTE PTR [rax],al
  413ab2:	add    BYTE PTR [rdi],cl
  413ab4:	add    eax,DWORD PTR [rax]
  413ab6:	add    BYTE PTR [rax],al
  413ab8:	xchg   esi,eax
  413ab9:	(bad)  
  413aba:	add    BYTE PTR [rax],al
  413abc:	add    al,BYTE PTR [rax]
  413abe:	add    BYTE PTR [rcx],al
  413ac0:	add    BYTE PTR [rsi],al
  413ac2:	add    BYTE PTR [rax],ah
  413ac4:	and    BYTE PTR [rax],dl
  413ac6:	add    BYTE PTR [rcx],al
  413ac8:	add    BYTE PTR [rax+rax*1],al
  413acb:	call   0x66413ad2
  413ad0:	add    BYTE PTR [rax],al
  413ad2:	add    BYTE PTR [rax],dl
  413ad4:	adc    BYTE PTR [rax],dl
  413ad6:	add    BYTE PTR [rcx],al
  413ad8:	add    BYTE PTR [rax+rax*1],al
  413adb:	sub    BYTE PTR [rcx],al
  413add:	add    BYTE PTR [rax],al
  413adf:	rex.WRX add r8,QWORD PTR [rax]
  413ae2:	add    BYTE PTR [rax],ah
  413ae4:	and    BYTE PTR [rax],al
  413ae6:	add    BYTE PTR [rcx],al
  413ae8:	add    BYTE PTR [rax],cl
  413aea:	add    BYTE PTR [rax+0x76000008],ch
  413af0:	add    al,0x0
  413af2:	add    BYTE PTR [rax],dl
  413af4:	adc    BYTE PTR [rax],al
  413af6:	add    BYTE PTR [rcx],al
  413af8:	add    BYTE PTR [rax],cl
  413afa:	add    BYTE PTR [rax+0x5],ch
  413afd:	add    BYTE PTR [rax],al
  413aff:	(bad)  
  413b00:	or     eax,0x20200000
  413b05:	add    BYTE PTR [rax],al
  413b07:	add    DWORD PTR [rax],eax
  413b09:	and    BYTE PTR [rax],al
  413b0b:	test   al,0x10
  413b0d:	add    BYTE PTR [rax],al
  413b0f:	xchg   BYTE PTR [rdx],dl
  413b11:	add    BYTE PTR [rax],al
  413b13:	adc    BYTE PTR [rax],dl
  413b15:	add    BYTE PTR [rax],al
  413b17:	add    DWORD PTR [rax],eax
  413b19:	and    BYTE PTR [rax],al
  413b1b:	push   0x2e000004
  413b20:	and    eax,DWORD PTR [rax]
  413b22:	add    BYTE PTR [rax],ch
  413b24:	add    BYTE PTR [rax],al
  413b26:	add    BYTE PTR [rax],ah
  413b28:	add    BYTE PTR [rax],al
  413b2a:	add    BYTE PTR [rax+0x0],al
  413b2d:	add    BYTE PTR [rax],al
  413b2f:	add    DWORD PTR [rax],eax
  413b31:	add    al,0x0
  413b33:	add    BYTE PTR [rax],al
  413b35:	add    BYTE PTR [rax],al
  413b37:	add    BYTE PTR [rdx],al
	...
  413b51:	add    BYTE PTR [rax],0x0
  413b54:	add    BYTE PTR [rax],0x0
  413b57:	add    BYTE PTR [rax+0x800080],al
  413b5d:	add    BYTE PTR [rax],al
  413b5f:	add    BYTE PTR [rax],0x80
  413b62:	add    BYTE PTR [rax-0x7fffff80],al
  413b68:	add    BYTE PTR [rax-0x3f3f4000],0x0
  413b6f:	add    BYTE PTR [rax],al
  413b71:	inc    DWORD PTR [rax]
  413b73:	add    bh,bh
  413b75:	add    BYTE PTR [rax],al
  413b77:	add    bh,bh
  413b79:	inc    DWORD PTR [rax]
  413b7b:	inc    DWORD PTR [rax]
  413b7d:	add    BYTE PTR [rax],al
  413b7f:	inc    DWORD PTR [rax]
  413b81:	inc    DWORD PTR [rax]
  413b83:	(bad)  
  413b84:	inc    DWORD PTR [rax]
  413b86:	add    bh,bh
  413b88:	(bad)  
  413b89:	inc    DWORD PTR [rax]
	...
  413b9b:	add    BYTE PTR [rax],al
  413b9d:	(bad)  
  413b9e:	rex.RXB
  413b9f:	rex.RXB
  413ba0:	rex.RXB
  413ba1:	rex.RXB
  413ba2:	rex.RXB
  413ba3:	rex.RXB
  413ba4:	rex.RXB
  413ba5:	rex.RXB
  413ba6:	rex.RXB
  413ba7:	rex.RXB
  413ba8:	rex.RXB add BYTE PTR [r8],r8b
  413bab:	add    BYTE PTR [rax],al
  413bad:	(bad)  
  413bae:	mov    BYTE PTR [rax-0x77787778],cl
  413bb4:	js     0x413b3d
  413bb6:	xchg   DWORD PTR [rdi+0x86],eax
  413bbc:	add    BYTE PTR [rdi],al
  413bbe:	(bad)  
  413bbf:	vpmacssdqh xmm1,xmm14,xmm7,XMMWORD PTR [r8-0x77777778]
  413bc9:	add    BYTE PTR [rax],al
  413bcb:	add    BYTE PTR [rax],al
  413bcd:	(bad)  
  413bce:	(bad)  
  413bcf:	clc    
  413bd0:	dec    DWORD PTR [rdi-0x77777078]
  413bd6:	mov    BYTE PTR [rax+0x84],cl
  413bdc:	add    BYTE PTR [rdi],al
  413bde:	(bad)  
  413bdf:	(bad)  
  413be0:	(bad)  
  413be1:	(bad)  
  413be2:	(bad)
  413be6:	mov    BYTE PTR [rax+0xe7],cl
  413bec:	add    BYTE PTR [rdi],al
  413bee:	(bad)  
  413bef:	clc    
  413bf0:	clc    
  413bf1:	clc    
  413bf2:	(bad)  
  413bf3:	(bad)
  413bf7:	mov    BYTE PTR [rax+rax*1+0x7000000],al
  413bfe:	clc    
  413bff:	dec    DWORD PTR [rdi-0x70077771]
  413c05:	mov    BYTE PTR [rax+0x8688],cl
  413c0b:	add    BYTE PTR [rax],al
  413c0d:	(bad)  
  413c0e:	(bad)  
  413c0f:	clc    
  413c10:	xchg   BYTE PTR [rdi-0x7777008],cl
  413c16:	clc    
  413c17:	mov    BYTE PTR [rax+rax*1+0x7000000],al
  413c1e:	(bad)  
  413c1f:	jmp    FWORD PTR [rax+0x68]
  413c22:	clc    
  413c23:	jbe    0x413bab
  413c25:	jbe    0x413c96
  413c27:	mov    BYTE PTR [rsi+0x0],al
  413c2d:	(bad)  
  413c2e:	(bad)  
  413c2f:	(bad)  
  413c30:	mov    edi,?
  413c32:	(bad)  
  413c33:	dec    DWORD PTR [rdi-0x79777071]
  413c39:	add    BYTE PTR [rax],al
  413c3b:	add    BYTE PTR [rax],al
  413c3d:	(bad)  
  413c3e:	(bad)  
  413c3f:	(bad)  
  413c40:	dec    DWORD PTR [rdi-0x70707008]
  413c46:	(bad)  
  413c47:	pop    QWORD PTR [rax+rax*1+0x7000000]
  413c4e:	(bad)  
  413c4f:	clc    
  413c50:	(bad)  
  413c51:	dec    DWORD PTR [rdi-0x7070708]
  413c57:	mov    BYTE PTR [rsi+0x0],al
  413c5d:	(bad)  
  413c5e:	clc    
  413c5f:	(bad)  
  413c60:	dec    DWORD PTR [rdi-0x7070008]
  413c66:	clc    
  413c67:	clc    
  413c68:	xchg   BYTE PTR [rax],al
  413c6a:	add    BYTE PTR [rax],al
  413c6c:	add    BYTE PTR [rdi],al
  413c6e:	(bad)  
  413c6f:	inc    DWORD PTR [rsi-0x70700071]
  413c75:	clc    
  413c76:	clc    
  413c77:	clc    
  413c78:	test   BYTE PTR [rax],al
  413c7a:	add    BYTE PTR [rax],al
  413c7c:	add    BYTE PTR [rdi],al
  413c7e:	(bad)  
  413c7f:	jmp    FWORD PTR [rax-0x31]
  413c82:	mov    BYTE PTR [rsi-0x7790987a],al
  413c88:	xchg   BYTE PTR [rax],al
  413c8a:	add    BYTE PTR [rax],al
  413c8c:	add    BYTE PTR [rdi],al
  413c8e:	(bad)  
  413c8f:	inc    DWORD PTR [rsi-0x71]
  413c95:	clc    
  413c96:	clc    
  413c97:	inc    DWORD PTR [rsi+0x0]
  413c9d:	(bad)  
  413c9e:	(bad)  
  413c9f:	(bad)  
  413ca0:	(bad)  
  413ca1:	(bad)  
  413ca2:	dec    DWORD PTR [rdi-0x70700071]
  413ca8:	test   BYTE PTR [rax],al
  413caa:	add    BYTE PTR [rax],al
  413cac:	add    BYTE PTR [rdi],al
  413cae:	(bad)  
  413caf:	(bad)  
  413cb0:	(bad)  
  413cb1:	(bad)  
  413cb2:	(bad)  
  413cb3:	(bad)  
  413cb4:	dec    DWORD PTR [rdi+0x86f8ff]
  413cba:	add    BYTE PTR [rax],al
  413cbc:	add    BYTE PTR [rax],cl
  413cbe:	(bad)  
  413cbf:	(bad)  
  413cc0:	(bad)  
  413cc1:	dec    DWORD PTR [rdi-0x70000701]
  413cc7:	pop    QWORD PTR [rax+rax*1+0x7000000]
  413cce:	(bad)  
  413ccf:	inc    DWORD PTR [rsi-0x71]
  413cd5:	(bad)  
  413cd6:	clc    
  413cd7:	inc    DWORD PTR [rsi+0x0]
  413cdd:	or     bh,bh
  413cdf:	jmp    QWORD PTR [rdi-0x31]
  413ce2:	clc    
  413ce3:	ja     0x413d5b
  413ce5:	jbe    0x413d66
  413ce7:	clc    
  413ce8:	xchg   BYTE PTR [rax],al
  413cea:	add    BYTE PTR [rax],al
  413cec:	add    BYTE PTR [rdi],al
  413cee:	(bad)  
  413cef:	dec    DWORD PTR [rdi+rdi*8-0x1]
  413cf6:	clc    
  413cf7:	inc    DWORD PTR [rax+rax*1+0x8000000]
  413cfe:	(bad)  
  413cff:	(bad)  
  413d00:	(bad)  
  413d01:	(bad)  
  413d02:	(bad)  
  413d03:	(bad)  
  413d04:	(bad)  
  413d05:	(bad)  
  413d06:	(bad)  
  413d07:	clc    
  413d08:	xchg   DWORD PTR [rax],eax
  413d0a:	add    BYTE PTR [rax],al
  413d0c:	add    BYTE PTR [rdi],al
  413d0e:	(bad)  
  413d0f:	(bad)  
  413d10:	(bad)  
  413d11:	(bad)  
  413d12:	(bad)  
  413d13:	(bad)  
  413d14:	(bad)  
  413d15:	dec    DWORD PTR [rax+0x7678]
  413d1b:	add    BYTE PTR [rax],al
  413d1d:	or     bh,bh
  413d1f:	(bad)  
  413d20:	(bad)  
  413d21:	(bad)  
  413d22:	(bad)  
  413d23:	(bad)  
  413d24:	(bad)  
  413d25:	push   QWORD PTR [rsi+0x46]
  413d28:	rex.RXB add BYTE PTR [r8],r8b
  413d2b:	add    BYTE PTR [rax],al
  413d2d:	or     bh,bh
  413d2f:	(bad)  
  413d30:	(bad)  
  413d31:	(bad)  
  413d32:	(bad)  
  413d33:	(bad)  
  413d34:	(bad)  
  413d35:	(bad)  
  413d36:	js     0x413cc0
  413d38:	(bad)  
  413d39:	add    BYTE PTR [rax],al
  413d3b:	add    BYTE PTR [rax],al
  413d3d:	or     bh,bh
  413d3f:	(bad)  
  413d40:	(bad)  
  413d41:	(bad)  
  413d42:	(bad)  
  413d43:	(bad)  
  413d44:	(bad)  
  413d45:	(bad)  
  413d46:	js     0x413ccf
  413d48:	add    BYTE PTR [rax],al
  413d4a:	add    BYTE PTR [rax],al
  413d4c:	add    BYTE PTR [rax],cl
  413d4e:	(bad)  
  413d4f:	(bad)  
  413d50:	(bad)  
  413d51:	(bad)  
  413d52:	(bad)  
  413d53:	(bad)  
  413d54:	(bad)  
  413d55:	(bad)  
  413d56:	jg     0x413db8
  413d58:	add    BYTE PTR [rax],al
  413d5a:	add    BYTE PTR [rax],al
  413d5c:	add    BYTE PTR [rax],cl
  413d5e:	(bad)  
  413d5f:	(bad)  
  413d60:	(bad)  
  413d61:	(bad)  
  413d62:	clc    
  413d63:	clc    
  413d64:	clc    
  413d65:	clc    
  413d66:	ja     0x413d68
  413d68:	add    BYTE PTR [rax],al
  413d6a:	add    BYTE PTR [rax],al
  413d6c:	add    BYTE PTR [rax],cl
  413d6e:	js     0x413de8
  413d70:	js     0x413de9
  413d72:	xchg   DWORD PTR [rdi+0xe07887],eax
	...
  413d88:	add    BYTE PTR [rax],al
  413d8a:	add    bh,bh
  413d8c:	(bad)  
  413d8d:	(bad)  
  413d8e:	(bad)  
  413d8f:	clc    
  413d90:	add    BYTE PTR [rax],al
  413d92:	psubb  mm0,QWORD PTR [rax]
  413d95:	add    BYTE PTR [rdi],cl
  413d97:	clc    
  413d98:	add    BYTE PTR [rax],al
  413d9a:	psubb  mm0,QWORD PTR [rax]
  413d9d:	add    BYTE PTR [rdi],cl
  413d9f:	clc    
  413da0:	add    BYTE PTR [rax],al
  413da2:	psubb  mm0,QWORD PTR [rax]
  413da5:	add    BYTE PTR [rdi],cl
  413da7:	clc    
  413da8:	add    BYTE PTR [rax],al
  413daa:	psubb  mm0,QWORD PTR [rax]
  413dad:	add    BYTE PTR [rdi],cl
  413daf:	clc    
  413db0:	add    BYTE PTR [rax],al
  413db2:	psubb  mm0,QWORD PTR [rax]
  413db5:	add    BYTE PTR [rdi],cl
  413db7:	clc    
  413db8:	add    BYTE PTR [rax],al
  413dba:	psubb  mm0,QWORD PTR [rax]
  413dbd:	add    BYTE PTR [rdi],cl
  413dbf:	clc    
  413dc0:	add    BYTE PTR [rax],al
  413dc2:	psubb  mm0,QWORD PTR [rax]
  413dc5:	add    BYTE PTR [rdi],cl
  413dc7:	clc    
  413dc8:	add    BYTE PTR [rax],al
  413dca:	psubb  mm0,QWORD PTR [rax]
  413dcd:	add    BYTE PTR [rdi],cl
  413dcf:	clc    
  413dd0:	add    BYTE PTR [rax],al
  413dd2:	psubb  mm0,QWORD PTR [rax]
  413dd5:	add    BYTE PTR [rdi],cl
  413dd7:	clc    
  413dd8:	add    BYTE PTR [rax],al
  413dda:	psubb  mm0,QWORD PTR [rax]
  413ddd:	add    BYTE PTR [rdi],cl
  413ddf:	clc    
  413de0:	add    BYTE PTR [rax],al
  413de2:	psubb  mm0,QWORD PTR [rax]
  413de5:	add    BYTE PTR [rdi],cl
  413de7:	clc    
  413de8:	add    BYTE PTR [rax],al
  413dea:	psubb  mm0,QWORD PTR [rax]
  413ded:	add    BYTE PTR [rdi],cl
  413def:	clc    
  413df0:	add    BYTE PTR [rax],al
  413df2:	psubb  mm0,QWORD PTR [rax]
  413df5:	add    BYTE PTR [rdi],bl
  413df7:	clc    
  413df8:	add    BYTE PTR [rax],al
  413dfa:	(bad)  
  413dfb:	clc    
  413dfc:	add    BYTE PTR [rax],al
  413dfe:	jg     0x413df8
  413e00:	add    BYTE PTR [rax],al
  413e02:	(bad)  
  413e03:	clc    
  413e04:	add    BYTE PTR [rcx],al
  413e06:	(bad)  
  413e07:	(bad)  
  413e08:	(bad)  
  413e09:	(bad)  
  413e0a:	jmp    FWORD PTR [rax]
  413e0c:	add    BYTE PTR [rax],al
  413e0e:	add    BYTE PTR [rax],dl
  413e10:	add    BYTE PTR [rax],al
  413e12:	add    BYTE PTR [rax],ah
  413e14:	add    BYTE PTR [rax],al
  413e16:	add    BYTE PTR [rcx],al
  413e18:	add    BYTE PTR [rax+rax*1],al
  413e1b:	add    BYTE PTR [rax],al
  413e1d:	add    BYTE PTR [rax],al
  413e1f:	add    BYTE PTR [rax],0x0
	...
  413e36:	add    BYTE PTR [rax],al
  413e38:	add    BYTE PTR [rax+0x800000],al
  413e3e:	add    BYTE PTR [rax],al
  413e40:	add    BYTE PTR [rax+0x8000],0x0
  413e47:	add    BYTE PTR [rax],0x80
  413e4a:	add    BYTE PTR [rax-0x7fffff80],al
  413e50:	add    BYTE PTR [rax-0x3f3f4000],0x0
  413e57:	add    BYTE PTR [rax],al
  413e59:	inc    DWORD PTR [rax]
  413e5b:	add    bh,bh
  413e5d:	add    BYTE PTR [rax],al
  413e5f:	add    bh,bh
  413e61:	inc    DWORD PTR [rax]
  413e63:	inc    DWORD PTR [rax]
  413e65:	add    BYTE PTR [rax],al
  413e67:	inc    DWORD PTR [rax]
  413e69:	inc    DWORD PTR [rax]
  413e6b:	(bad)  
  413e6c:	inc    DWORD PTR [rax]
  413e6e:	add    bh,bh
  413e70:	(bad)  
  413e71:	inc    DWORD PTR [rax]
  413e73:	add    BYTE PTR [rsp+rsi*2+0x65],dh
  413e77:	gs gs add BYTE PTR gs:[rax],al
  413e7c:	push   0xffffffff88878888
  413e81:	jbe    0x413e83
  413e83:	add    BYTE PTR [rdi-0x1],bh
  413e86:	(bad)  
  413e87:	(bad)
  413e8b:	add    BYTE PTR [rax-0x8],bh
  413e8e:	clc    
  413e8f:	clc    
  413e90:	mov    BYTE PTR [rsi+0x68780000],al
  413e96:	mov    BYTE PTR [rsi+0x76],bh
  413e99:	test   DWORD PTR [rax],eax
  413e9b:	add    BYTE PTR [rdi-0x3a],bh
  413e9e:	dec    DWORD PTR [rdi+0x86f8]
  413ea4:	jg     0x413ea5
  413ea6:	(bad)  
  413ea7:	clc    
  413ea8:	clc    
  413ea9:	hlt    
  413eaa:	add    BYTE PTR [rax],al
  413eac:	jg     0x413f15
  413eae:	test   DWORD PTR [rdi+0x8776],0x8fff7c7f
  413eb8:	inc    DWORD PTR [rsi-0x810000]
  413ebe:	(bad)  
  413ebf:	dec    DWORD PTR [rdi+0x7f000085]
  413ec5:	test   DWORD PTR [edi+0xf676],0xffff7c8f
  413ed0:	inc    DWORD PTR [rbp-0x810000]
  413ed6:	(bad)  
  413ed7:	push   QWORD PTR [rsi+0x76]
  413eda:	add    BYTE PTR [rax],al
  413edc:	(bad)  
  413edd:	(bad)  
  413ede:	(bad)  
  413edf:	(bad)  
  413ee0:	js     0x413f52
  413ee2:	add    BYTE PTR [rax],al
  413ee4:	(bad)  
  413ee5:	(bad)  
  413ee6:	(bad)  
  413ee7:	push   QWORD PTR [rdi+0x0]
  413eea:	add    BYTE PTR [rax],al
  413eec:	xchg   DWORD PTR [rdi+0x707777],eax
  413ef2:	add    al,al
  413ef4:	add    eax,DWORD PTR [rax]
  413ef6:	add    al,al
  413ef8:	add    eax,DWORD PTR [rax]
  413efa:	add    al,al
  413efc:	add    eax,DWORD PTR [rax]
  413efe:	add    al,al
  413f00:	add    eax,DWORD PTR [rax]
  413f02:	add    al,al
  413f04:	add    eax,DWORD PTR [rax]
  413f06:	add    al,al
  413f08:	add    eax,DWORD PTR [rax]
  413f0a:	add    al,al
  413f0c:	add    eax,DWORD PTR [rax]
  413f0e:	add    al,al
  413f10:	add    eax,DWORD PTR [rax]
  413f12:	add    al,al
  413f14:	add    eax,DWORD PTR [rax]
  413f16:	add    al,al
  413f18:	add    eax,DWORD PTR [rax]
  413f1a:	add    al,al
  413f1c:	add    eax,DWORD PTR [rax]
  413f1e:	add    al,al
  413f20:	add    eax,DWORD PTR [rax]
  413f22:	add    al,al
  413f24:	add    eax,DWORD PTR [rax]
  413f26:	add    al,al
  413f28:	(bad)  
  413f29:	add    BYTE PTR [rax],al
  413f2b:	ror    BYTE PTR [rdi],0x0
  413f2e:	add    al,al
  413f30:	(bad)  
  413f31:	add    BYTE PTR [rax],al
  413f33:	sub    BYTE PTR [rax],al
  413f35:	add    BYTE PTR [rax],al
  413f37:	and    BYTE PTR [rax],al
  413f39:	add    BYTE PTR [rax],al
  413f3b:	add    BYTE PTR [rax],al
  413f3e:	add    BYTE PTR [rcx],al
  413f40:	add    BYTE PTR [rax],cl
  413f42:	add    BYTE PTR [rax],al
  413f44:	add    BYTE PTR [rax],al
  413f46:	add    BYTE PTR [rax],al
  413f48:	add    al,0x0
	...
  413f52:	add    BYTE PTR [rax],al
  413f54:	add    DWORD PTR [rax],eax
  413f56:	add    BYTE PTR [rax],al
  413f58:	add    DWORD PTR [rax],eax
  413f5a:	add    BYTE PTR [rax],al
  413f5c:	add    BYTE PTR [rax],al
  413f5e:	add    BYTE PTR [rbx+0x49],ah
  413f61:	xor    eax,0x3e526c00
  413f66:	add    BYTE PTR [rcx+rbx*2+0x45],dh
  413f6a:	add    BYTE PTR [rdi+0x5c],dh
  413f6d:	rex.WB add BYTE PTR [r9+0x60],dil
  413f71:	rex.WR add BYTE PTR [rdi+0x64],r15b
  413f75:	push   rcx
  413f76:	add    BYTE PTR [rax+riz*2+0x6680002a],ah
  413f7d:	push   rdx
  413f7e:	add    BYTE PTR [rcx-0x7effab9a],al
  413f84:	push   0x6b840056
  413f89:	pop    rcx
  413f8a:	add    BYTE PTR [rsi-0x78ffa594],al
  413f90:	ins    DWORD PTR es:[rdi],dx
  413f91:	pop    rsp
  413f92:	add    BYTE PTR [rax-0x74ffa290],cl
  413f98:	jb     0x413ffa
  413f9a:	add    BYTE PTR [rbp-0x70ff9b8a],cl
  413fa0:	js     0x414009
  413fa2:	add    BYTE PTR [rcx-0x6dff9a8a],dl
  413fa8:	jp     0x414012
  413faa:	add    BYTE PTR [rsi-0x67ff9282],dl
  413fb0:	(bad)  
  413fb1:	jno    0x413fb3
  413fb3:	fwait
  413fb4:	test   BYTE PTR [rbx+0x0],dh
  413fb7:	popf   
  413fb8:	xchg   DWORD PTR [rsi+0x0],esi
  413fbb:	lahf   
  413fbc:	mov    DWORD PTR [rcx+0x0],edi
  413fbf:	movabs al,ds:0xa4007989a1007586
  413fc8:	mov    bh,BYTE PTR [rax+0x0]
  413fcb:	movabs ds:0xa4007c8ca2007b8c,al
  413fd4:	mov    ?,WORD PTR [rsi+0x0]
  413fd7:	fcomp  QWORD PTR [rcx-0x6e59ff9a]
  413fdd:	add    DWORD PTR [rax],0x8493aa
  413fe3:	lods   al,BYTE PTR ds:[rsi]
  413fe4:	xchg   ebx,eax
  413fe5:	test   BYTE PTR [rax],al
  413fe7:	stos   BYTE PTR es:[rdi],al
  413fe8:	xchg   esp,eax
  413fe9:	test   DWORD PTR [rax],eax
  413feb:	lods   eax,DWORD PTR ds:[rsi]
  413fec:	xchg   ebp,eax
  413fed:	xchg   BYTE PTR [rax],al
  413fef:	lods   eax,DWORD PTR ds:[rsi]
  413ff0:	cdq    
  413ff1:	mov    DWORD PTR [rax],eax
  413ff3:	mov    dl,0x99
  413ff5:	mov    DWORD PTR [rax],eax
  413ff7:	mov    al,0x9b
  413ff9:	lea    eax,[rax]
  413ffb:	mov    dl,0x9d
  413ffd:	mov    es,WORD PTR [rax]
  413fff:	mov    bl,0x9e
  414001:	nop
  414002:	add    BYTE PTR [rdi-0x4aff6f62],dh
  414008:	movabs al,ds:0xa1b90094a2b70092
  414011:	xchg   edx,eax
  414012:	add    BYTE PTR [rax-0x46ff6b5d],bh
  414018:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  414019:	xchg   esi,eax
  41401a:	add    BYTE PTR [rbp-0x45ff685b],bh
  414020:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  414021:	cwde   
  414022:	add    BYTE PTR [rdi+riz*4-0x5743ff66],bh
  414029:	(bad)  
  41402a:	add    BYTE PTR [rsi-0x32ff6357],bh
  414030:	sahf   
  414031:	xchg   DWORD PTR [rax],eax
  414033:	int    0x9f
  414035:	mov    DWORD PTR [rax],eax
  414037:	(bad)  
  414038:	movabs al,ds:0xa2d0008da3cf008a
  414041:	lea    eax,[rax]
  414043:	shl    BYTE PTR [rdi+rcx*4-0x63563f00],1
  41404a:	add    al,al
  41404c:	lods   al,BYTE PTR ds:[rsi]
  41404d:	lahf   
  41404e:	add    al,dl
  414050:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  414051:	xchg   ecx,eax
  414052:	add    dl,dl
  414054:	test   al,0x93
  414056:	add    dl,dl
  414058:	stos   BYTE PTR es:[rdi],al
  414059:	xchg   ebp,eax
  41405a:	add    ah,dl
  41405c:	stos   DWORD PTR es:[rdi],eax
  41405d:	xchg   edi,eax
  41405e:	add    ah,dl
  414060:	lods   eax,DWORD PTR ds:[rsi]
  414061:	(bad)  
  414062:	add    dh,dl
  414064:	mov    al,0x9d
  414066:	add    dl,al
  414068:	scas   al,BYTE PTR es:[rdi]
  414069:	movabs al,ds:0xa5b1c700a3b1c500
  414072:	add    bh,al
  414074:	mov    bl,0xa8
  414076:	add    cl,cl
  414078:	mov    ah,0xa9
  41407a:	add    bh,dl
  41407c:	mov    bl,0xa0
  41407e:	add    bh,dl
  414080:	mov    ch,0xa3
  414082:	add    al,bl
  414084:	mov    ch,0xa3
  414086:	add    al,bl
  414088:	mov    bh,0xa5
  41408a:	add    dl,bl
  41408c:	mov    ecx,0xbada00a7
  414091:	test   eax,0xacbcdb00
  414096:	add    ah,bl
  414098:	mov    esi,0xc1de00ae
  41409d:	mov    cl,0x0
  41409f:	ffreep st(4)
  4140a1:	mov    dh,0x0
  4140a3:	rol    bl,cl
  4140a5:	mov    ecx,0xbcc5d500
  4140aa:	add    al,ah
  4140ac:	(bad)  
  4140ad:	mov    eax,0xbacbef00
  4140b2:	add    al,dh
  4140b4:	int    0xbd
  4140b6:	add    cl,dh
  4140b8:	sar    BYTE PTR [rdi-0x3f2e1900],1
  4140be:	add    cl,dh
  4140c0:	rol    ecx,1
  4140c2:	add    cl,dh
  4140c4:	rol    ah,cl
  4140c6:	add    dl,dh
  4140c8:	(bad)  
  4140c9:	mov    BYTE PTR [rax],0xf2
  4140cc:	(bad)  
  4140cd:	leave  
  4140ce:	add    bl,dh
  4140d0:	fmul   st,st(2)
  4140d2:	add    ah,dh
  4140d4:	fmul   st,st(3)
  4140d6:	add    bl,dh
  4140d8:	fcmove st,st(4)
  4140da:	add    ah,dh
  4140dc:	fcmove st,st(5)
  4140de:	add    ch,dh
  4140e0:	fmul   st(7),st
  4140e2:	add    bl,ah
  4140e4:	fcmovbe st,st(3)
  4140e6:	add    ah,dh
  4140e8:	fcmovnbe st,st(0)
  4140ea:	add    ah,dh
  4140ec:	fst    st(1)
  4140ee:	add    ch,dh
  4140f0:	(bad)  
  4140f2:	add    ch,dh
  4140f4:	loopne 0x4140cc
  4140f6:	add    dh,dh
  4140f8:	loop   0x4140d2
  4140fa:	add    dh,dh
  4140fc:	in     al,0xda
  4140fe:	add    bh,dh
  414100:	in     eax,0xdd
  414102:	add    al,bh
  414104:	out    0xdd,al
  414106:	add    al,bh
  414108:	call   0xffffffffe93941ec
  41410d:	loope  0x41410f
  41410f:	clc    
  414110:	(bad)  
  414111:	in     al,0x0
  414113:	stc    
  414114:	in     al,dx
  414115:	out    0x0,al
  414117:	repz out dx,eax
  414119:	in     eax,dx
  41411a:	add    dl,bh
  41411c:	out    dx,al
  41411d:	call   0xffffffffeb323b22
  414122:	add    dl,bh
  414124:	icebp  
  414125:	in     eax,dx
  414126:	add    ah,bh
  414128:	repnz out dx,al
  41412a:	add    bl,bh
  41412c:	repz lock add bl,bh
  414130:	hlt    
  414131:	lock add ah,bh
  414134:	cmc    
  414135:	icebp  
  414136:	add    ah,bh
  414138:	div    ah
  41413a:	add    ch,bh
  41413c:	clc    
  41413d:	test   BYTE PTR [rax],0xfd
  414140:	cli    
  414141:	stc    
  414142:	add    dh,bh
  414144:	cld    
  414145:	cli    
  414146:	add    dh,bh
  414148:	(bad)  
  414149:	inc    BYTE PTR [rax]
	...
  414357:	(bad)  
  414358:	(bad)  
  414359:	inc    DWORD PTR [rax]
	...
  41437f:	add    BYTE PTR [rdx],cl
  414381:	add    DWORD PTR [rcx],eax
  414383:	add    DWORD PTR [rcx],eax
  414385:	add    DWORD PTR [rcx],eax
  414387:	add    DWORD PTR [rcx],eax
  414389:	add    DWORD PTR [rcx],eax
  41438b:	add    DWORD PTR [rcx],eax
  41438d:	add    DWORD PTR [rcx],eax
  41438f:	add    DWORD PTR [rcx],eax
  414391:	add    DWORD PTR [rcx],eax
  414393:	add    DWORD PTR [rcx],eax
  414395:	add    DWORD PTR [rcx],eax
	...
  41439f:	add    BYTE PTR [rbx],cl
  4143a1:	(bad)  
  4143a2:	push   rax
  4143a3:	rex.WRXB
  4143a4:	rex.WRXB
  4143a5:	rex.WRXB
  4143a6:	rex.WXB
  4143a7:	rex.WXB
  4143a8:	rex.WXB
  4143a9:	rex.W
  4143aa:	rex.X
  4143ab:	rex.X
  4143ac:	rex.B
  4143ad:	rex
  4143ae:	rex
  4143af:	cmp    dil,BYTE PTR [rdx]
  4143b2:	cmp    bh,BYTE PTR [rdx]
  4143b4:	xor    eax,0x135
  4143b9:	add    BYTE PTR [rax],al
  4143bb:	add    BYTE PTR [rax],al
  4143bd:	add    BYTE PTR [rax],al
  4143bf:	add    BYTE PTR [rbx],cl
  4143c1:	fs ins BYTE PTR es:[rdi],dx
  4143c3:	imul   ebp,DWORD PTR [rax+0x68],0x66
  4143c7:	fs fs fs (bad) 
  4143cb:	(bad)  
  4143cc:	pop    rbp
  4143cd:	pop    rsp
  4143ce:	pop    rsp
  4143cf:	pop    rcx
  4143d0:	pop    rsp
  4143d1:	push   rsi
  4143d2:	push   rsi
  4143d3:	push   rsi
  4143d4:	push   rbp
  4143d5:	cmp    al,BYTE PTR [rcx]
	...
  4143df:	add    BYTE PTR [rdi],cl
  4143e1:	fs ins BYTE PTR es:[rdi],dx
  4143e3:	ins    BYTE PTR es:[rdi],dx
  4143e4:	ins    BYTE PTR es:[rdi],dx
  4143e5:	push   0x64666868
  4143ea:	fs fs (bad) 
  4143ed:	pop    rbp
  4143ee:	pop    rsp
  4143ef:	pop    rsp
  4143f0:	push   rsi
  4143f1:	pop    rsp
  4143f2:	push   rsi
  4143f3:	push   rsi
  4143f4:	push   rbp
  4143f5:	cmp    al,BYTE PTR [rcx]
	...
  4143ff:	add    BYTE PTR [rdi],cl
  414401:	push   0x6c6c706c
  414406:	imul   ebp,DWORD PTR [rax+0x68],0x66
  41440a:	fs fs fs (bad) 
  41440e:	pop    rbp
  41440f:	pop    rsp
  414410:	pop    rsp
  414411:	push   rdi
  414412:	pop    rsp
  414413:	push   rsi
  414414:	push   rsi
  414415:	cmp    al,BYTE PTR [rcx]
	...
  41441f:	add    BYTE PTR [rdi],cl
  414421:	push   0x6c706c71
  414426:	ins    BYTE PTR es:[rdi],dx
  414427:	push   0x6b646b68
  41442c:	(bad)  
  41442d:	fs (bad) 
  41442f:	pop    rbp
  414430:	pop    rsp
  414431:	pop    rsp
  414432:	push   rdi
  414433:	pop    rsp
  414434:	push   rsi
  414435:	cmp    al,BYTE PTR [rcx]
	...
  41443f:	add    BYTE PTR [rcx],dl
  414441:	push   0x6c707171
  414446:	ins    BYTE PTR es:[rdi],dx
  414447:	ins    BYTE PTR es:[rdi],dx
  414448:	push   0x6764686b
  41444d:	fs (bad) 
  41444f:	(bad)  
  414450:	pop    rbp
  414451:	pop    rbp
  414452:	pop    rsp
  414453:	pop    rsp
  414454:	push   rdi
  414455:	cmp    eax,0x1
  41445a:	add    BYTE PTR [rax],al
  41445c:	add    BYTE PTR [rax],al
  41445e:	add    BYTE PTR [rax],al
  414460:	adc    DWORD PTR [rbx+0x71],ebp
  414463:	jno    0x4144d6
  414465:	pop    rax
  414466:	(bad)  
  414467:	pop    rax
  414468:	ins    BYTE PTR es:[rdi],dx
  414469:	ins    BYTE PTR es:[rdi],dx
  41446a:	push   0x64646868
  41446f:	fs fs pop rbp
  414472:	pop    rsp
  414473:	pop    rsp
  414474:	pop    rsp
  414475:	rex add DWORD PTR [rax],eax
	...
  414480:	adc    DWORD PTR [rax+rdi*2+0x76],ebp
  414484:	jno    0x41448d
  414486:	(bad)  
  414487:	(bad)  
  414488:	ins    BYTE PTR es:[rdi],dx
  414489:	ins    BYTE PTR es:[rdi],dx
  41448a:	cmp    al,0x24
  41448c:	sbb    DWORD PTR [rdx+rdx*1],edx
  41448f:	or     eax,0x5d600808
  414494:	pop    rsp
  414495:	rex add DWORD PTR [rax],eax
	...
  4144a0:	adc    eax,0x7676766c
  4144a5:	pop    rax
  4144a6:	(bad)  
  4144a7:	pop    rax
  4144a8:	jo     0x414516
  4144aa:	ins    BYTE PTR es:[rdi],dx
  4144ab:	ins    BYTE PTR es:[rdi],dx
  4144ac:	push   0x6466686b
  4144b1:	fs (bad) 
  4144b3:	(bad)  
  4144b4:	pop    rbp
  4144b5:	rex add DWORD PTR [rax],eax
	...
  4144c0:	adc    eax,0x76767870
  4144c5:	jbe    0x41453d
  4144c7:	jno    0x414539
  4144c9:	jo     0x41453b
  4144cb:	ins    BYTE PTR es:[rdi],dx
  4144cc:	ins    BYTE PTR es:[rdi],dx
  4144cd:	push   0x64686868
  4144d2:	fs fs (bad) 
  4144d5:	add    DWORD PTR [r8],eax
	...
  4144e0:	adc    eax,0x76787970
  4144e5:	jbe    0x41455d
  4144e7:	jbe    0x41455a
  4144e9:	jo     0x41455b
  4144eb:	jo     0x414559
  4144ed:	ins    BYTE PTR es:[rdi],dx
  4144ee:	ins    BYTE PTR es:[rdi],dx
  4144ef:	imul   ebp,DWORD PTR [rax+0x68],0x66
  4144f3:	fs add QWORD PTR fs:[rax],rax
	...
  414500:	(bad)  
  414501:	jno    0x41457c
  414503:	jns    0x41457e
  414505:	jbe    0x41457d
  414507:	jbe    0x41457f
  414509:	jno    0x41457b
  41450b:	jo     0x41457d
  41450d:	ins    BYTE PTR es:[rdi],dx
  41450e:	ins    BYTE PTR es:[rdi],dx
  41450f:	push   0x66686868
  414514:	add    QWORD PTR fs:[rax],rax
	...
  414520:	sbb    BYTE PTR [rcx+0x79],dh
  414523:	jns    0x41459e
  414525:	pop    rax
  414526:	(bad)  
  414527:	pop    rax
  414528:	jbe    0x4145a0
  41452a:	jbe    0x41459c
  41452c:	jo     0x41459e
  41452e:	ins    BYTE PTR es:[rdi],dx
  41452f:	jo     0x41459d
  414531:	imul   ebp,DWORD PTR [rax+0x68],0x66
  414535:	add    QWORD PTR [rax],rax
	...
  414540:	sbb    eax,0x79797976
  414545:	(bad)  
  414546:	(bad)  
  414547:	(bad)  
  414548:	jbe    0x4145c0
  41454a:	sub    r12d,DWORD PTR [r11*1+0x3040812]
  414552:	push   0x14c6868
	...
  41455f:	add    BYTE PTR [rip+0x79797978],bl        # 0x79babedd
  414565:	pop    rcx
  414566:	(bad)  
  414567:	pop    rax
  414568:	js     0x4145e0
  41456a:	jbe    0x4145e2
  41456c:	jae    0x4145de
  41456e:	jbe    0x4145e0
  414570:	ins    BYTE PTR es:[rdi],dx
  414571:	ins    BYTE PTR es:[rdi],dx
  414572:	ins    BYTE PTR es:[rdi],dx
  414573:	ins    BYTE PTR es:[rdi],dx
  414574:	push   0x14f
  414579:	add    BYTE PTR [rax],al
  41457b:	add    BYTE PTR [rax],al
  41457d:	add    BYTE PTR [rax],al
  41457f:	add    BYTE PTR [rax],ah
  414581:	js     0x4145fc
  414583:	jns    0x4145fe
  414585:	jns    0x414600
  414587:	jns    0x414602
  414589:	js     0x414601
  41458b:	jbe    0x414603
  41458d:	jbe    0x4145ff
  41458f:	jo     0x414601
  414591:	jo     0x4145ff
  414593:	ins    BYTE PTR es:[rdi],dx
  414594:	ins    BYTE PTR es:[rdi],dx
  414595:	add    QWORD PTR [rax],r8
	...
  4145a0:	and    al,0x79
  4145a2:	jns    0x41461d
  4145a4:	jns    0x41461f
  4145a6:	jns    0x414621
  4145a8:	jns    0x414623
  4145aa:	js     0x414624
  4145ac:	jbe    0x414624
  4145ae:	jbe    0x414626
  4145b0:	jo     0x414623
  4145b2:	jo     0x414624
  4145b4:	ins    BYTE PTR es:[rdi],dx
  4145b5:	rex.WRXB add QWORD PTR [r8],r8
	...
  4145c0:	and    al,0x79
  4145c2:	jns    0x41463d
  4145c4:	jns    0x41463f
  4145c6:	jns    0x414641
  4145c8:	jns    0x414643
  4145ca:	jns    0x414645
  4145cc:	jbe    0x414644
  4145ce:	jbe    0x414646
  4145d0:	jbe    0x414642
  4145d2:	jo     0x414644
  4145d4:	ins    BYTE PTR es:[rdi],dx
  4145d5:	rex.WRXB add QWORD PTR [r8],r8
	...
  4145e0:	and    eax,0x79797979
  4145e5:	pop    rcx
  4145e6:	(bad)  
  4145e7:	pop    rax
  4145e8:	jns    0x414663
  4145ea:	jns    0x414665
  4145ec:	jns    0x414666
  4145ee:	jbe    0x414666
  4145f0:	jbe    0x414668
  4145f2:	jo     0x414664
  4145f4:	jo     0x414646
  4145f6:	add    DWORD PTR [rax],eax
	...
  414600:	sub    BYTE PTR [rcx+0x79],bh
  414603:	jns    0x41467e
  414605:	(bad)  
  414606:	(bad)  
  414607:	(bad)  
  414608:	jns    0x414683
  41460a:	push   rbx
  41460b:	xor    al,0x2b
  41460d:	and    al,0x14
  41460f:	ud2    
  414611:	or     esi,DWORD PTR [rsi+0x73]
  414614:	jo     0x414666
  414616:	add    DWORD PTR [rax],eax
	...
  414620:	sub    edi,DWORD PTR [rcx+0x79]
  414623:	jns    0x41469e
  414625:	pop    rax
  414626:	(bad)  
  414627:	pop    rax
  414628:	jns    0x4146a3
  41462a:	jns    0x4146a5
  41462c:	jns    0x4146a7
  41462e:	js     0x4146a8
  414630:	js     0x4146a8
  414632:	jbe    0x4146aa
  414634:	jae    0x414687
  414636:	add    DWORD PTR [rax],eax
	...
  414640:	sub    edi,DWORD PTR [rcx+0x79]
  414643:	jns    0x4146be
  414645:	jns    0x4146c0
  414647:	jns    0x4146c2
  414649:	jns    0x4146c4
  41464b:	jns    0x4146c6
  41464d:	jns    0x4146c8
  41464f:	jns    0x4146ca
  414651:	js     0x4146c9
  414653:	jbe    0x4146cb
  414655:	push   rsp
  414656:	add    DWORD PTR [rax],eax
	...
  414660:	cs jns 0x4146dc
  414663:	jns    0x4146de
  414665:	jns    0x4146e0
  414667:	jns    0x4146e2
  414669:	jns    0x4146e4
  41466b:	jns    0x4146e6
  41466d:	jns    0x4146e8
  41466f:	jns    0x4146ea
  414671:	js     0x4146ba
  414673:	xor    BYTE PTR [rsi],ah
  414675:	sbb    eax,DWORD PTR [rcx]
	...
  41467f:	add    BYTE PTR [rax],dh
  414681:	jns    0x4146fc
  414683:	jns    0x4146fe
  414685:	jns    0x414700
  414687:	jns    0x414702
  414689:	jns    0x414704
  41468b:	jns    0x414706
  41468d:	jns    0x414708
  41468f:	jns    0x41470a
  414691:	sbb    eax,0x1010101
  414696:	add    DWORD PTR [rax],eax
	...
  4146a0:	xor    al,0x79
  4146a2:	jns    0x41471d
  4146a4:	jns    0x41471f
  4146a6:	jns    0x414721
  4146a8:	jns    0x414723
  4146aa:	jns    0x414725
  4146ac:	jns    0x414727
  4146ae:	jns    0x414729
  4146b0:	jns    0x4146cf
  4146b2:	push   rbx
  4146b3:	cmp    al,0x2e
  4146b5:	add    al,BYTE PTR [rax]
	...
  4146bf:	add    BYTE PTR [rcx+rdi*2],dh
  4146c2:	jns    0x41473d
  4146c4:	jns    0x41473f
  4146c6:	jns    0x414741
  4146c8:	jns    0x414743
  4146ca:	jns    0x414745
  4146cc:	jns    0x414747
  4146ce:	jns    0x414749
  4146d0:	jns    0x4146ef
  4146d2:	(bad)
	...
  4146df:	add    BYTE PTR [rcx+rdi*2],bh
  4146e2:	jns    0x41475d
  4146e4:	jns    0x41475f
  4146e6:	jns    0x414761
  4146e8:	jns    0x414763
  4146ea:	jns    0x414765
  4146ec:	jns    0x414767
  4146ee:	jns    0x414769
  4146f0:	jns    0x414712
  4146f2:	outs   dx,DWORD PTR ds:[rsi]
  4146f3:	(bad)  
	...
  414700:	rex.R jns 0x41477c
  414703:	jns    0x41477e
  414705:	jns    0x414780
  414707:	jns    0x414782
  414709:	js     0x414781
  41470b:	jno    0x41477e
  41470d:	jo     0x41477b
  41470f:	ins    BYTE PTR es:[rdi],dx
  414710:	push   0x20
  414712:	adc    al,0x0
	...
  414720:	rex.R
  414721:	rex.R
  414722:	rex.R cmp al,0x3c
  414725:	xor    al,0x34
  414727:	xor    al,0x2e
  414729:	sub    ebp,DWORD PTR [rbx]
  41472b:	sub    ebp,DWORD PTR [rbx]
  41472d:	and    eax,0x24252525
	...
  41475a:	add    bh,bh
  41475c:	(bad)  
  41475d:	(bad)  
  41475e:	(bad)  
  41475f:	clc    
  414760:	add    BYTE PTR [rax],al
  414762:	psubb  mm0,QWORD PTR [rax]
  414765:	add    BYTE PTR [rdi],cl
  414767:	clc    
  414768:	add    BYTE PTR [rax],al
  41476a:	psubb  mm0,QWORD PTR [rax]
  41476d:	add    BYTE PTR [rdi],cl
  41476f:	clc    
  414770:	add    BYTE PTR [rax],al
  414772:	psubb  mm0,QWORD PTR [rax]
  414775:	add    BYTE PTR [rdi],cl
  414777:	clc    
  414778:	add    BYTE PTR [rax],al
  41477a:	psubb  mm0,QWORD PTR [rax]
  41477d:	add    BYTE PTR [rdi],cl
  41477f:	clc    
  414780:	add    BYTE PTR [rax],al
  414782:	psubb  mm0,QWORD PTR [rax]
  414785:	add    BYTE PTR [rdi],cl
  414787:	clc    
  414788:	add    BYTE PTR [rax],al
  41478a:	psubb  mm0,QWORD PTR [rax]
  41478d:	add    BYTE PTR [rdi],cl
  41478f:	clc    
  414790:	add    BYTE PTR [rax],al
  414792:	psubb  mm0,QWORD PTR [rax]
  414795:	add    BYTE PTR [rdi],cl
  414797:	clc    
  414798:	add    BYTE PTR [rax],al
  41479a:	psubb  mm0,QWORD PTR [rax]
  41479d:	add    BYTE PTR [rdi],cl
  41479f:	clc    
  4147a0:	add    BYTE PTR [rax],al
  4147a2:	psubb  mm0,QWORD PTR [rax]
  4147a5:	add    BYTE PTR [rdi],cl
  4147a7:	clc    
  4147a8:	add    BYTE PTR [rax],al
  4147aa:	psubb  mm0,QWORD PTR [rax]
  4147ad:	add    BYTE PTR [rdi],cl
  4147af:	clc    
  4147b0:	add    BYTE PTR [rax],al
  4147b2:	psubb  mm0,QWORD PTR [rax]
  4147b5:	add    BYTE PTR [rdi],cl
  4147b7:	clc    
  4147b8:	add    BYTE PTR [rax],al
  4147ba:	psubb  mm0,QWORD PTR [rax]
  4147bd:	add    BYTE PTR [rdi],cl
  4147bf:	clc    
  4147c0:	add    BYTE PTR [rax],al
  4147c2:	psubb  mm0,QWORD PTR [rax]
  4147c5:	add    BYTE PTR [rdi],bl
  4147c7:	clc    
  4147c8:	add    BYTE PTR [rax],al
  4147ca:	(bad)  
  4147cb:	clc    
  4147cc:	add    BYTE PTR [rax],al
  4147ce:	jg     0x4147c8
  4147d0:	add    BYTE PTR [rax],al
  4147d2:	(bad)  
  4147d3:	clc    
  4147d4:	add    BYTE PTR [rcx],al
  4147d6:	(bad)  
  4147d7:	(bad)  
  4147d8:	(bad)  
  4147d9:	(bad)  
  4147da:	jmp    FWORD PTR [rax]
  4147dc:	add    BYTE PTR [rax],al
  4147de:	add    BYTE PTR [rax],dl
  4147e0:	add    BYTE PTR [rax],al
  4147e2:	add    BYTE PTR [rax],ah
  4147e4:	add    BYTE PTR [rax],al
  4147e6:	add    BYTE PTR [rcx],al
  4147e8:	add    BYTE PTR [rax],cl
  4147ea:	add    BYTE PTR [rax],al
  4147ec:	add    BYTE PTR [rax],al
  4147ee:	add    BYTE PTR [rax],al
  4147f0:	add    DWORD PTR [rax],eax
	...
  4147fa:	add    BYTE PTR [rax],al
  4147fc:	add    DWORD PTR [rax],eax
  4147fe:	add    BYTE PTR [rax],al
  414800:	add    DWORD PTR [rax],eax
  414802:	add    BYTE PTR [rax],al
  414804:	add    BYTE PTR [rax],al
  414806:	add    BYTE PTR [rbx+0x49],ah
  414809:	xor    eax,0x3d516c00
  41480e:	add    BYTE PTR [rcx+0x57],dh
  414811:	add    BYTE PTR [rsi+0x5c],r14b
  414815:	rex.WB add BYTE PTR [r10+0x61],dil
  414819:	rex.WRX add BYTE PTR [rax+r12*2+0x6780002a],r12b
  414821:	push   rbp
  414822:	add    BYTE PTR [rsi-0x77ffa593],al
  414828:	jo     0x414887
  41482a:	add    BYTE PTR [rbx-0x6eff9f8f],cl
  414830:	jns    0x41489a
  414832:	add    BYTE PTR [rdi-0x68ff9082],dl
  414838:	sub    BYTE PTR [rdi+0x0],0x9d
  41483c:	xchg   BYTE PTR [rsi+0x0],dh
  41483f:	movabs ds:0xa8006699dc007c8c,al
  414848:	xchg   ebx,eax
  414849:	add    DWORD PTR [rax],0xffffffaa
  41484c:	xchg   ebx,eax
  41484d:	test   BYTE PTR [rax],al
  41484f:	scas   al,BYTE PTR es:[rdi]
  414850:	cdq    
  414851:	mov    al,BYTE PTR [rax]
  414853:	mov    bl,0x9f
  414855:	pop    QWORD PTR [rax]
  414857:	mov    bl,0x9d
  414859:	nop
  41485a:	add    BYTE PTR [rax-0x42ff6a5c],bh
  414860:	test   al,0x9b
  414862:	add    BYTE PTR [rbp-0x28ff6358],bh
  414868:	lods   al,BYTE PTR ds:[rsi]
  414869:	xchg   esi,eax
  41486a:	add    bl,bl
  41486c:	lods   al,BYTE PTR ds:[rsi]
  41486d:	xchg   ebp,eax
  41486e:	add    bh,dl
  414870:	lods   eax,DWORD PTR ds:[rsi]
  414871:	cdq    
  414872:	add    al,bl
  414874:	mov    al,0x9d
  414876:	add    dl,al
  414878:	scas   al,BYTE PTR es:[rdi]
  414879:	movabs al,ds:0xa7b8dc00a2b4da00
  414882:	add    bh,bl
  414884:	mov    ebp,0xbfde00ab
  414889:	scas   eax,DWORD PTR es:[rdi]
  41488a:	add    dl,ch
  41488c:	shr    BYTE PTR [rax+rax*1+0xb0c3eb],0xed
  414894:	(bad)  
  414895:	mov    dh,0x0
  414897:	out    dx,al
  414898:	int    0xbc
  41489a:	add    bh,ch
  41489c:	rol    esi,cl
  41489e:	add    cl,dh
  4148a0:	rol    edx,1
  4148a2:	add    dl,dh
  4148a4:	(bad)  
  4148a5:	mov    DWORD PTR [rax],0xc9d6f3
  4148ab:	hlt    
  4148ac:	fmul   st,st(4)
  4148ae:	add    bh,ah
  4148b0:	(bad)  
  4148b2:	add    ah,dh
  4148b4:	(bad)  
  4148b6:	add    dh,dh
  4148b8:	loope  0x414891
  4148ba:	add    bh,dh
  4148bc:	in     eax,0xdd
  4148be:	add    al,bh
  4148c0:	loop   0x41489a
  4148c2:	add    al,bh
  4148c4:	in     al,0xdb
  4148c6:	add    al,bh
  4148c8:	in     eax,0xdc
  4148ca:	add    cl,bh
  4148cc:	jmp    0xffffffffec3b49b2
  4148d1:	in     al,0x0
  4148d3:	stc    
  4148d4:	in     eax,dx
  4148d5:	out    0x0,eax
  4148d7:	stc    
  4148d8:	out    dx,al
  4148d9:	call   0xffffffffed3342de
  4148de:	add    ah,bh
  4148e0:	lock in al,dx
  4148e2:	add    ch,bh
  4148e4:	repz lock add ah,bh
  4148e8:	hlt    
  4148e9:	icebp  
  4148ea:	add    ch,bh
  4148ec:	div    ebp
  4148ee:	add    ch,bh
  4148f0:	clc    
  4148f1:	cmc    
  4148f2:	add    ch,bh
  4148f4:	cli    
  4148f5:	stc    
  4148f6:	add    dh,bh
  4148f8:	cld    
  4148f9:	sti    
  4148fa:	add    dh,bh
  4148fc:	(bad)  
  4148fd:	inc    BYTE PTR [rax]
	...
  414bff:	(bad)  
  414c00:	(bad)  
  414c01:	inc    DWORD PTR [rax]
  414c03:	add    BYTE PTR [rax],al
  414c05:	add    eax,DWORD PTR [rcx]
  414c07:	add    DWORD PTR [rcx],eax
  414c09:	add    DWORD PTR [rcx],eax
  414c0b:	add    DWORD PTR [rcx],eax
  414c0d:	add    DWORD PTR [rcx],eax
  414c0f:	add    DWORD PTR [rcx],eax
  414c11:	add    BYTE PTR [rax],al
  414c13:	add    BYTE PTR [rax],al
  414c15:	add    al,0x26
  414c17:	and    DWORD PTR [rcx],esp
  414c19:	(bad)  
  414c1a:	(bad)  
  414c1b:	sbb    ebx,DWORD PTR [rbx]
  414c1d:	sbb    DWORD PTR [rcx],ebx
  414c1f:	sbb    al,BYTE PTR [rcx]
  414c21:	add    BYTE PTR [rax],al
  414c23:	add    BYTE PTR [rax],al
  414c25:	add    eax,0x2f34342f
  414c2a:	sub    eax,0x28282a2c
  414c2f:	and    al,BYTE PTR [rcx]
  414c31:	add    BYTE PTR [rax],al
  414c33:	add    BYTE PTR [rax],al
  414c35:	(bad)  
  414c36:	(bad)  
  414c37:	ss xor al,0x34
  414c3a:	(bad)  
  414c3b:	sub    eax,0x22282a2c
  414c40:	add    DWORD PTR [rax],eax
  414c42:	add    BYTE PTR [rax],al
  414c44:	add    BYTE PTR [rax],cl
  414c46:	xor    al,0x6
  414c48:	adc    BYTE PTR [rdi+rdx*1],dh
  414c4b:	adc    eax,0x230a0c12
  414c50:	add    DWORD PTR [rax],eax
  414c52:	add    BYTE PTR [rax],al
  414c54:	add    BYTE PTR [rdx],cl
  414c56:	xor    al,0x10
  414c58:	(bad)  
  414c59:	ss xor al,0x34
  414c5c:	(bad)  
  414c5d:	(bad)  
  414c5e:	sub    al,0x24
  414c60:	add    DWORD PTR [rax],eax
  414c62:	add    BYTE PTR [rax],al
  414c64:	add    BYTE PTR [rbx],cl
  414c66:	xor    al,0x3b
  414c68:	cmp    dh,BYTE PTR [rsi]
  414c6a:	ss xor al,0x34
  414c6d:	(bad)  
  414c6e:	(bad)  
  414c6f:	and    eax,0x1
  414c74:	add    BYTE PTR [rip+0x3b100636],cl        # 0x3b5152b0
  414c7a:	(bad)  
  414c7b:	adc    eax,0x280a0c12
  414c80:	add    DWORD PTR [rax],eax
  414c82:	add    BYTE PTR [rax],al
  414c84:	add    BYTE PTR [rsi],cl
  414c86:	cmp    dl,BYTE PTR [rax]
  414c88:	(bad)  
  414c89:	cmp    eax,0x34363a3b
  414c8e:	xor    al,0x28
  414c90:	add    DWORD PTR [rax],eax
  414c92:	add    BYTE PTR [rax],al
  414c94:	add    BYTE PTR [rdi],cl
  414c96:	cmp    bh,BYTE PTR [rip+0x3a3d3d3d]        # 0x3a7e89d9
  414c9c:	cmp    dh,BYTE PTR [rip+0x12a34]        # 0x4276d6
  414ca2:	add    BYTE PTR [rax],al
  414ca4:	add    BYTE PTR [rdx],dl
  414ca6:	cmp    al,BYTE PTR [rsi]
  414ca8:	adc    BYTE PTR [rip+0xc121517],bh        # 0xc5361c5
  414cae:	or     ch,BYTE PTR [rdi]
  414cb0:	add    DWORD PTR [rax],eax
  414cb2:	add    BYTE PTR [rax],al
  414cb4:	add    BYTE PTR [rbx],dl
  414cb6:	cmp    edx,DWORD PTR [rax]
  414cb8:	(bad)  
  414cb9:	cmp    eax,0x3a3d3d3d
  414cbe:	cmp    dh,BYTE PTR [rdx]
  414cc0:	add    DWORD PTR [rax],eax
  414cc2:	add    BYTE PTR [rax],al
  414cc4:	add    BYTE PTR [rdi*1+0x3d3d3d3d],dl
  414ccb:	cmp    eax,0x2020f3d
  414cd0:	add    DWORD PTR [rax],eax
  414cd2:	add    BYTE PTR [rax],al
  414cd4:	add    BYTE PTR [rsi],dl
  414cd6:	cmp    eax,0x3d3d3d3d
  414cdb:	cmp    eax,0xa2b0f3d
  414ce0:	add    BYTE PTR [rax],al
  414ce2:	add    BYTE PTR [rax],al
  414ce4:	add    BYTE PTR [rdi],dl
  414ce6:	cmp    eax,0x3d3d3d3d
  414ceb:	cmp    eax,0x90f3d
  414cf0:	add    BYTE PTR [rax],al
  414cf2:	add    BYTE PTR [rax],al
  414cf4:	add    BYTE PTR [rip+0x13141617],bl        # 0x13556311
  414cfa:	adc    cl,BYTE PTR [rdi]
  414cfc:	(bad)  
  414cfd:	or     eax,0x0
  414d02:	add    al,al
  414d04:	add    eax,DWORD PTR [rax]
  414d06:	add    al,al
  414d08:	add    eax,DWORD PTR [rax]
  414d0a:	add    al,al
  414d0c:	add    eax,DWORD PTR [rax]
  414d0e:	add    al,al
  414d10:	add    eax,DWORD PTR [rax]
  414d12:	add    al,al
  414d14:	add    eax,DWORD PTR [rax]
  414d16:	add    al,al
  414d18:	add    eax,DWORD PTR [rax]
  414d1a:	add    al,al
  414d1c:	add    eax,DWORD PTR [rax]
  414d1e:	add    al,al
  414d20:	add    eax,DWORD PTR [rax]
  414d22:	add    al,al
  414d24:	add    eax,DWORD PTR [rax]
  414d26:	add    al,al
  414d28:	add    eax,DWORD PTR [rax]
  414d2a:	add    al,al
  414d2c:	add    eax,DWORD PTR [rax]
  414d2e:	add    al,al
  414d30:	add    eax,DWORD PTR [rax]
  414d32:	add    al,al
  414d34:	add    eax,DWORD PTR [rax]
  414d36:	add    al,al
  414d38:	(bad)  
  414d39:	add    BYTE PTR [rax],al
  414d3b:	ror    BYTE PTR [rdi],0x0
  414d3e:	add    al,al
  414d40:	(bad)  
  414d41:	add    BYTE PTR [rax],al
  414d43:	sub    BYTE PTR [rax],al
  414d45:	add    BYTE PTR [rax],al
  414d47:	and    BYTE PTR [rax],al
  414d49:	add    BYTE PTR [rax],al
  414d4b:	add    BYTE PTR [rax],al
  414d4e:	add    BYTE PTR [rcx],al
  414d50:	add    BYTE PTR [rax],ah
  414d52:	add    BYTE PTR [rax],al
  414d54:	add    BYTE PTR [rax],al
  414d56:	add    BYTE PTR [rax+0x10],al
	...
  414dfc:	add    BYTE PTR [rax],al
  414dfe:	add    BYTE PTR [rcx+0x63ff5668],al
  414e04:	rex.WB xor rax,0x354963ff
  414e0a:	jmp    QWORD PTR [rbx+0x49]
  414e0d:	xor    eax,0x354963ff
  414e12:	jmp    QWORD PTR [rbx+0x49]
  414e15:	xor    eax,0x354963ff
  414e1a:	jmp    QWORD PTR [rbx+0x49]
  414e1d:	xor    eax,0x354963ff
  414e22:	jmp    QWORD PTR [rbx+0x49]
  414e25:	xor    eax,0x354963ff
  414e2a:	jmp    QWORD PTR [rbx+0x49]
  414e2d:	xor    eax,0x354963ff
  414e32:	jmp    QWORD PTR [rbx+0x49]
  414e35:	xor    eax,0x354963ff
  414e3a:	jmp    QWORD PTR [rbx+0x49]
  414e3d:	xor    eax,0x354963ff
  414e42:	jmp    QWORD PTR [rbx+0x49]
  414e45:	xor    eax,0x354963ff
  414e4a:	jmp    QWORD PTR [rbx+0x49]
  414e4d:	xor    eax,0x354963ff
  414e52:	jmp    QWORD PTR [rbx+0x49]
  414e55:	xor    eax,0x354963ff
  414e5a:	inc    DWORD PTR [rax]
	...
  414e7c:	add    BYTE PTR [rax],al
  414e7e:	add    BYTE PTR [rbx+rbp*2-0x240b00a7],al
  414e85:	(bad)  
  414e86:	(bad)  
  414e87:	faddp  st(0),st
  414e89:	mov    cl,0xff
  414e8b:	fdivr  QWORD PTR [rsi-0x43240052]
  414e91:	lods   al,BYTE PTR ds:[rsi]
  414e92:	(bad)  
  414e93:	fstp   TBYTE PTR [rbx-0x46260056]
  414e99:	test   al,0xff
  414e9b:	fdiv   DWORD PTR [rdi-0x4a27005b]
  414ea1:	movabs ds:0x9fb1d6ffa1b3d7ff,eax
  414eaa:	call   rsi
  414eac:	mov    al,0x9c
  414eae:	call   rsp
  414eb0:	lods   eax,DWORD PTR ds:[rsi]
  414eb1:	(bad)  
  414eb2:	call   rsp
  414eb4:	stos   DWORD PTR es:[rdi],eax
  414eb5:	xchg   edi,eax
  414eb6:	call   rdx
  414eb8:	stos   BYTE PTR es:[rdi],al
  414eb9:	xchg   esi,eax
  414eba:	call   rdx
  414ebc:	test   al,0x93
  414ebe:	call   rax
  414ec0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  414ec1:	xchg   ecx,eax
  414ec2:	call   rax
  414ec4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  414ec5:	(bad)  
  414ec6:	dec    edi
  414ec8:	movabs ds:0x9fcdff8ba0cfff8d,eax
  414ed1:	mov    edi,edi
  414ed3:	int    0x9e
  414ed5:	xchg   edi,edi
  414ed7:	movsxd ecx,DWORD PTR [rcx+0x35]
  414eda:	inc    DWORD PTR [rax]
	...
  414efc:	add    BYTE PTR [rax],al
  414efe:	add    BYTE PTR [rsi-0xb00a492],al
  414f04:	(bad)  
  414f06:	(bad)  
  414f07:	clc    
  414f08:	jmp    0xffffffffe73a4eee
  414f0d:	(bad)  
  414f0f:	mul    ebp
  414f11:	fdiv   st(7),st
  414f13:	mul    ah
  414f15:	(bad)  
  414f17:	mul    cl
  414f19:	xlat   BYTE PTR ds:[rbx]
  414f1a:	push   rbp
  414f1c:	(bad)  
  414f1e:	push   rbp
  414f20:	(bad)  
  414f22:	push   rsp
  414f24:	(bad)  
  414f26:	push   rsp
  414f28:	fcmove st,st(6)
  414f2a:	push   rsp
  414f2c:	fxch   st(4)
  414f2e:	push   rbx
  414f30:	xlat   BYTE PTR ds:[rbx]
  414f31:	retf   0xf3ff
  414f34:	(bad)  
  414f35:	(bad)  
  414f36:	push   rdx
  414f38:	(bad)  
  414f39:	(bad)  
  414f3a:	push   rcx
  414f3c:	rol    ah,cl
  414f3e:	push   rcx
  414f40:	rol    edx,1
  414f42:	push   rcx
  414f44:	sar    BYTE PTR [rdi-0x42310f01],1
  414f4a:	push   rax
  414f4c:	int3   
  414f4d:	mov    esp,0xbacbefff
  414f52:	dec    ebp
  414f54:	movabs al,ds:0xff354963ff89
	...
  414f7d:	add    BYTE PTR [rax],al
  414f7f:	mov    DWORD PTR [rax+0x5e],esi
  414f82:	push   rbp
  414f84:	(bad)  
  414f86:	(bad)  
  414f87:	stc    
  414f88:	(bad)  
  414f89:	in     al,0xff
  414f8b:	clc    
  414f8c:	jmp    0xffffffffe8394f72
  414f91:	(bad)  
  414f93:	mul    ebp
  414f95:	(bad)  
  414f97:	mul    ebx
  414f99:	(bad)  
  414f9b:	mul    edx
  414f9d:	fdivr  st,st(7)
  414f9f:	cmc    
  414fa0:	loopne 0x414f78
  414fa2:	push   rsi
  414fa4:	(bad)  
  414fa6:	push   rsp
  414fa8:	(bad)  
  414faa:	push   rsp
  414fac:	fcmovne st,st(7)
  414fae:	push   rbx
  414fb0:	fcmove st,st(4)
  414fb2:	push   rbx
  414fb4:	xlat   BYTE PTR ds:[rbx]
  414fb5:	retf   0xf3ff
  414fb8:	(bad)  
  414fb9:	enter  0xf2ff,0xd4
  414fbd:	(bad)  
  414fbe:	push   rdx
  414fc0:	rol    ah,cl
  414fc2:	push   rcx
  414fc4:	rol    edx,1
  414fc6:	push   rcx
  414fc8:	iret   
  414fc9:	mov    edi,0xbecef1ff
  414fce:	push   rax
  414fd0:	int3   
  414fd1:	mov    esp,0x8ba1cfff
  414fd6:	jmp    QWORD PTR [rbx+0x49]
  414fd9:	xor    eax,0xff
	...
  414ffe:	add    BYTE PTR [rbx-0x9009e8d],cl
  415004:	loopne 0x414fdc
  415006:	(bad)  
  415007:	stc    
  415008:	in     eax,dx
  415009:	out    0xff,al
  41500b:	stc    
  41500c:	jmp    0x414ff3
  41500e:	(bad)  
  41500f:	stc    
  415010:	jmp    0xffffffffe93a4ff7
  415015:	(bad)  
  415017:	clc    
  415018:	out    0xdd,al
  41501a:	push   rdi
  41501c:	in     al,0xdb
  41501e:	push   rdi
  415020:	jrcxz  0x414ffb
  415022:	push   rsi
  415024:	loopne 0x414ffc
  415026:	push   rbp
  415028:	(bad)  
  41502a:	push   rbp
  41502c:	fst    st(2)
  41502e:	push   rbp
  415030:	fmul   st(7),st
  415032:	push   rsp
  415034:	fcmove st,st(5)
  415036:	push   rbx
  415038:	fmul   st,st(3)
  41503a:	push   rdx
  41503c:	(bad)  
  41503d:	leave  
  41503e:	push   rbx
  415040:	(bad)  
  415041:	(bad)  
  415042:	push   rdx
  415044:	rol    esp,cl
  415046:	push   rcx
  415048:	rol    edx,1
  41504a:	push   rcx
  41504c:	rol    al,1
  41504e:	push   rax
  415050:	iret   
  415051:	mov    edi,0x8da2d0ff
  415056:	jmp    QWORD PTR [rbx+0x49]
  415059:	xor    eax,0xff
	...
  41507e:	add    BYTE PTR [rbp-0x9009b8a],cl
  415084:	loop   0x41505e
  415086:	(bad)  
  415087:	cli    
  415088:	out    dx,eax
  415089:	jmp    0xffffffffe82f4a8d
  41508e:	(bad)  
  41508f:	stc    
  415090:	jmp    0x415077
  415092:	(bad)  
  415093:	clc    
  415094:	jmp    0xffffffffe93a507c
  415099:	loopne 0x41509a
  41509b:	mul    edi
  41509d:	fdivp  st(7),st
  41509f:	mul    ebp
  4150a1:	(bad)  
  4150a3:	mul    edx
  4150a5:	fcos   
  4150a7:	mul    al
  4150a9:	(bad)  
  4150aa:	push   rsi
  4150ac:	(bad)  
  4150ae:	push   rbp
  4150b0:	(bad)  
  4150b2:	push   rsp
  4150b4:	fcmovnbe st,st(0)
  4150b6:	push   rsp
  4150b8:	fcmove st,st(5)
  4150ba:	push   rsp
  4150bc:	fxch   st(3)
  4150be:	push   rbx
  4150c0:	(bad)  
  4150c1:	leave  
  4150c2:	push   rdx
  4150c4:	(bad)  
  4150c5:	(bad)  
  4150c6:	push   rdx
  4150c8:	rol    ebp,cl
  4150ca:	push   rcx
  4150cc:	rol    bl,cl
  4150ce:	push   rcx
  4150d0:	rol    cl,1
  4150d2:	call   rax
  4150d4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  4150d5:	(bad)  
  4150d6:	jmp    QWORD PTR [rbx+0x49]
  4150d9:	xor    eax,0xff
	...
  4150fe:	add    BYTE PTR [rdi-0x8009888],cl
  415104:	in     al,0xdb
  415106:	(bad)  
  415107:	sti    
  415108:	icebp  
  415109:	jmp    0x41510a
  41510b:	sti    
  41510c:	out    dx,eax
  41510d:	jmp    0xffffffffe82f4c11
  415112:	(bad)  
  415113:	stc    
  415114:	jmp    0x4150fb
  415116:	(bad)  
  415117:	stc    
  415118:	(bad)  
  415119:	jrcxz  0x41511a
  41511b:	clc    
  41511c:	call   0xffffffffe7395101
  415121:	fdivp  st(7),st
  415123:	mul    ebp
  415125:	fdiv   st(7),st
  415127:	mul    bl
  415129:	(bad)  
  41512b:	mul    cl
  41512d:	fdivr  st,st(7)
  41512f:	mul    al
  415131:	(bad)  
  415132:	push   rbp
  415134:	(bad)  
  415136:	push   rsp
  415138:	(bad)  
  41513a:	push   rsp
  41513c:	fcmovne st,st(6)
  41513e:	push   rsp
  415140:	fxch   st(4)
  415142:	push   rbx
  415144:	xlat   BYTE PTR ds:[rbx]
  415145:	retf   0xf2ff
  415148:	(bad)  
  415149:	(bad)  
  41514a:	push   rdx
  41514c:	(bad)  
  41514d:	(bad)  
  415150:	rol    ebx,cl
  415152:	call   rcx
  415154:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  415155:	xchg   ecx,eax
  415156:	jmp    QWORD PTR [rbx+0x49]
  415159:	xor    eax,0xff
	...
  41517e:	add    BYTE PTR [rdx-0x7009685],dl
  415184:	out    0xde,al
  415186:	(bad)  
  415187:	sti    
  415188:	repz out dx,al
  41518a:	(bad)  
  41518b:	sti    
  41518c:	icebp  
  41518d:	in     al,dx
  41518e:	(bad)  
  41518f:	cli    
  415190:	out    dx,eax
  415191:	(bad)  
  415192:	jmp    rdi
  415194:	rol    eax,1
  415196:	jmp    QWORD PTR [rax+riz*2-0x2e1800d6]
  41519d:	sar    bh,0xf8
  4151a0:	call   0xffffffffe8395186
  4151a5:	(bad)  
  4151a7:	mul    ebp
  4151a9:	(bad)  
  4151ab:	mul    bl
  4151ad:	(bad)  
  4151af:	mul    dl
  4151b1:	fdivr  st,st(7)
  4151b3:	cmc    
  4151b4:	loopne 0x41518c
  4151b6:	push   rbp
  4151b8:	(bad)  
  4151ba:	push   rbp
  4151bc:	(bad)  
  4151be:	push   rbp
  4151c0:	fcmovne st,st(7)
  4151c2:	push   rsp
  4151c4:	fxch   st(5)
  4151c6:	push   rbx
  4151c8:	fmul   st,st(2)
  4151ca:	push   rbx
  4151cc:	(bad)  
  4151cd:	enter  0xf2ff,0xd4
  4151d1:	(bad)  
  4151d2:	call   rdx
  4151d4:	test   eax,0x4963ff94
  4151d9:	xor    eax,0xff
	...
  4151fe:	add    BYTE PTR [rbp-0x7009383],dl
  415204:	call   0xfffffffff53e51ea
  415209:	icebp  
  41520a:	(bad)  
  41520b:	cld    
  41520c:	repz out dx,al
  41520e:	(bad)  
  41520f:	sti    
  415210:	icebp  
  415211:	in     eax,dx
  415212:	jmp    QWORD PTR [rax+riz*2-0x662300d6]
  415219:	jmp    WORD PTR [rax+riz*2-0x140600d6]
  415221:	in     al,0xff
  415223:	clc    
  415224:	jmp    0xffffffffaa03520a
  415229:	pushf  
  41522a:	jmp    FWORD PTR [rsi-0x5f007a6b]
  415230:	xchg   BYTE PTR [rbp-0x1],dh
  415233:	xchg   edi,eax
  415234:	jle    0x4152a3
  415236:	call   QWORD PTR [rcx-0x79009a8a]
  41523c:	ins    BYTE PTR es:[rdi],dx
  41523d:	pop    rcx
  41523e:	inc    DWORD PTR [rax+0x7fff5266]
  415244:	fs push rcx
  415246:	push   rbx
  415248:	fcmove st,st(5)
  41524a:	push   rsp
  41524c:	fmul   st,st(3)
  41524e:	push   rdx
  415250:	(bad)  
  415251:	leave  
  415252:	call   rbx
  415254:	stos   DWORD PTR es:[rdi],eax
  415255:	xchg   esi,eax
  415256:	jmp    QWORD PTR [rbx+0x49]
  415259:	xor    eax,0xff
	...
  41527e:	add    BYTE PTR [rsi-0x6009081],dl
  415284:	(bad)  
  415285:	jrcxz  0x415286
  415287:	cld    
  415288:	div    bl
  41528a:	(bad)  
  41528b:	cld    
  41528c:	cmc    
  41528d:	icebp  
  41528e:	(bad)  
  41528f:	cld    
  415290:	repz out dx,eax
  415292:	jmp    rdi
  415294:	rol    eax,1
  415296:	jmp    QWORD PTR [rax+riz*2-0x2e1800d6]
  41529d:	sar    bh,0xfa
  4152a0:	in     al,dx
  4152a1:	out    0xff,eax
  4152a3:	stc    
  4152a4:	jmp    0x41528a
  4152a6:	(bad)  
  4152a7:	stc    
  4152a8:	jmp    0xffffffffe93a528f
  4152ad:	loopne 0x4152ae
  4152af:	mul    esi
  4152b1:	fdivp  st(7),st
  4152b3:	mul    ebp
  4152b5:	(bad)  
  4152b7:	mul    dl
  4152b9:	fcos   
  4152bb:	mul    cl
  4152bd:	xlat   BYTE PTR ds:[rbx]
  4152be:	push   rbp
  4152c0:	(bad)  
  4152c2:	push   rbp
  4152c4:	fst    st(2)
  4152c6:	push   rsp
  4152c8:	fcmovnbe st,st(0)
  4152ca:	push   rsp
  4152cc:	fcmove st,st(6)
  4152ce:	push   rbx
  4152d0:	fmul   st,st(3)
  4152d2:	call   rsp
  4152d4:	lods   al,BYTE PTR ds:[rsi]
  4152d5:	cdq    
  4152d6:	jmp    QWORD PTR [rbx+0x49]
  4152d9:	xor    eax,0xff
	...
  4152fe:	add    BYTE PTR [rax-0x6008e7e],bl
  415304:	in     al,dx
  415305:	out    0xff,al
  415307:	std    
  415308:	clc    
  415309:	cmc    
  41530a:	(bad)  
  41530b:	std    
  41530c:	div    bl
  41530e:	(bad)  
  41530f:	cld    
  415310:	cmc    
  415311:	icebp  
  415312:	(bad)  
  415313:	sti    
  415314:	hlt    
  415315:	lock (bad) 
  415317:	sti    
  415318:	repnz out dx,al
  41531a:	(bad)  
  41531b:	sti    
  41531c:	lock in al,dx
  41531e:	(bad)  
  41531f:	cli    
  415320:	out    dx,eax
  415321:	jmp    0xffffffffe92f4d25
  415326:	(bad)  
  415327:	stc    
  415328:	in     al,dx
  415329:	out    0xff,al
  41532b:	stc    
  41532c:	(bad)  
  41532d:	loop   0x41532e
  41532f:	clc    
  415330:	jmp    0xffffffffe8395315
  415335:	fdivp  st(7),st
  415337:	mul    esp
  415339:	fdiv   st(7),st
  41533b:	mul    ebx
  41533d:	fcos   
  41533f:	mul    dl
  415341:	fdivr  st,st(7)
  415343:	cmc    
  415344:	loopne 0x41531b
  415346:	push   rbp
  415348:	(bad)  
  41534a:	push   rbp
  41534c:	(bad)  
  41534e:	push   rsp
  415350:	fcmove st,st(6)
  415352:	call   rbp
  415354:	scas   al,BYTE PTR es:[rdi]
  415355:	fwait
  415356:	jmp    QWORD PTR [rbx+0x49]
  415359:	xor    eax,0xff
	...
  41537e:	add    BYTE PTR [rbx-0x5008c7c],bl
  415384:	out    dx,al
  415385:	call   0xfffffffff83b5189
  41538a:	(bad)  
  41538b:	std    
  41538c:	clc    
  41538d:	cmc    
  41538e:	(bad)  
  41538f:	cld    
  415390:	div    esp
  415392:	(bad)  
  415393:	cld    
  415394:	cmc    
  415395:	repnz (bad) 
  415397:	cld    
  415398:	hlt    
  415399:	lock (bad) 
  41539b:	cld    
  41539c:	repnz out dx,al
  41539e:	(bad)  
  41539f:	sti    
  4153a0:	icebp  
  4153a1:	in     al,dx
  4153a2:	(bad)  
  4153a3:	cli    
  4153a4:	out    dx,eax
  4153a5:	(bad)  
  4153a6:	(bad)  
  4153a7:	cli    
  4153a8:	in     eax,dx
  4153a9:	call   0xffffffffe72d4dad
  4153ae:	(bad)  
  4153af:	stc    
  4153b0:	(bad)  
  4153b1:	in     al,0xff
  4153b3:	clc    
  4153b4:	jmp    0xffffffffe83a539a
  4153b9:	fdivp  st(7),st
  4153bb:	clc    
  4153bc:	in     eax,0xdc
  4153be:	push   rdi
  4153c0:	jrcxz  0x41539c
  4153c2:	push   rsi
  4153c4:	loop   0x41539e
  4153c6:	push   rsi
  4153c8:	loopne 0x4153a0
  4153ca:	push   rbp
  4153cc:	(bad)  
  4153ce:	push   rbp
  4153d0:	fst    st(1)
  4153d2:	call   rsi
  4153d4:	mov    cl,0x9e
  4153d6:	jmp    QWORD PTR [rbx+0x49]
  4153d9:	xor    eax,0xff
	...
  4153fe:	add    BYTE PTR [rbp-0x5008979],bl
  415404:	icebp  
  415405:	jmp    0x415406
  415407:	std    
  415408:	sti    
  415409:	stc    
  41540a:	(bad)  
  41540b:	std    
  41540c:	stc    
  41540d:	idiv   edi
  41540f:	std    
  415410:	clc    
  415411:	idiv   bh
  415413:	cld    
  415414:	div    esp
  415416:	(bad)  
  415417:	cld    
  415418:	div    dl
  41541a:	(bad)  
  41541b:	cld    
  41541c:	hlt    
  41541d:	lock (bad) 
  41541f:	sti    
  415420:	repnz out dx,al
  415422:	(bad)  
  415423:	sti    
  415424:	repnz in al,dx
  415426:	(bad)  
  415427:	cli    
  415428:	out    dx,eax
  415429:	(bad)  
  41542a:	(bad)  
  41542b:	cli    
  41542c:	out    dx,al
  41542d:	call   0xffffffffe82e4f31
  415432:	(bad)  
  415433:	stc    
  415434:	(bad)  
  415435:	in     al,0xff
  415437:	stc    
  415438:	jmp    0xffffffffe839541e
  41543d:	(bad)  
  41543f:	mul    esi
  415441:	(bad)  
  415443:	mul    esp
  415445:	(bad)  
  415447:	mul    dl
  415449:	fdivr  st,st(7)
  41544b:	mul    cl
  41544d:	(bad)  
  41544e:	push   rbp
  415450:	(bad)  
  415452:	call   rdi
  415454:	mov    bl,0xa0
  415456:	jmp    QWORD PTR [rbx+0x49]
  415459:	xor    eax,0xff
	...
  41547e:	add    BYTE PTR [rdi-0x4008677],bl
  415484:	repnz out dx,al
  415486:	(bad)  
  415487:	(bad)  
  415488:	cld    
  415489:	sti    
  41548a:	(bad)  
  41548b:	(bad)  
  41548c:	sti    
  41548d:	cli    
  41548e:	(bad)  
  41548f:	std    
  415490:	cli    
  415491:	idiv   edi
  415493:	out    0xd1,eax
  415495:	sar    bh,0xa4
  415498:	(bad)  
  415499:	sub    bh,bh
  41549b:	out    0xd1,eax
  41549d:	sar    bh,0xfc
  4154a0:	hlt    
  4154a1:	icebp  
  4154a2:	(bad)  
  4154a3:	sti    
  4154a4:	repz out dx,eax
  4154a6:	(bad)  
  4154a7:	sti    
  4154a8:	icebp  
  4154a9:	in     eax,dx
  4154aa:	(bad)  
  4154ab:	sti    
  4154ac:	lock jmp 0x4154ae
  4154af:	cli    
  4154b0:	out    dx,al
  4154b1:	jmp    0xffffffffe72e4eb5
  4154b6:	(bad)  
  4154b7:	stc    
  4154b8:	jmp    0x41549e
  4154ba:	(bad)  
  4154bb:	clc    
  4154bc:	jmp    0xffffffffe93a54a4
  4154c1:	loopne 0x4154c2
  4154c3:	clc    
  4154c4:	out    0xde,al
  4154c6:	push   rdi
  4154c8:	in     al,0xdb
  4154ca:	push   rsi
  4154cc:	loop   0x4154a7
  4154ce:	push   rsi
  4154d0:	loope  0x4154a8
  4154d2:	call   rdi
  4154d4:	mov    ch,0xa3
  4154d6:	jmp    QWORD PTR [rbx+0x49]
  4154d9:	xor    eax,0xff
	...
  4154fe:	add    BYTE PTR [rdx-0x4008474],ah
  415504:	hlt    
  415505:	icebp  
  415506:	(bad)  
  415507:	(bad)  
  415508:	std    
  415509:	cld    
  41550a:	(bad)  
  41550b:	(bad)  
  41550c:	cld    
  41550d:	sti    
  41550e:	(bad)  
  41550f:	(bad)  
  415510:	sti    
  415511:	stc    
  415512:	jmp    QWORD PTR [rax+riz*2-0x662300d6]
  415519:	jmp    WORD PTR [rax+riz*2-0x90300d6]
  415521:	repz (bad) 
  415523:	cld    
  415524:	cmc    
  415525:	icebp  
  415526:	inc    edi
  415528:	mov    bl,0xa8
  41552a:	push   QWORD PTR [rdi-0x53006f62]
  415530:	xchg   ebx,eax
  415531:	test   bh,bh
  415533:	movabs ds:0x81ff687993ff7a8a,eax
  41553c:	push   sp
  41553e:	push   QWORD PTR [rdi+0x5c]
  415541:	rex.WB push QWORD PTR [r9+rbx*2+0x45]
  415546:	push   rdi
  415548:	out    0xde,al
  41554a:	push   rdi
  41554c:	in     al,0xdc
  41554e:	push   rdi
  415550:	jrcxz  0x41552b
  415552:	(bad)  
  415553:	fnstenv [rdi+0x4963ffa5]
  415559:	xor    eax,0xff
	...
  41557e:	add    BYTE PTR [rsi+rcx*4-0x9030082],ah
  415585:	repz (bad) 
  415587:	(bad)  
  415588:	(bad)  
  415589:	(bad)  
  41558a:	(bad)  
  41558b:	(bad)  
  41558c:	std    
  41558d:	std    
  41558e:	(bad)  
  41558f:	(bad)  
  415590:	cld    
  415591:	sti    
  415592:	jmp    rdi
  415594:	rol    eax,1
  415596:	jmp    QWORD PTR [rax+riz*2-0x2e1800d6]
  41559d:	sar    bh,0xfd
  4155a0:	clc    
  4155a1:	cmc    
  4155a2:	(bad)  
  4155a3:	cld    
  4155a4:	div    ah
  4155a6:	(bad)  
  4155a7:	cld    
  4155a8:	cmc    
  4155a9:	repnz (bad) 
  4155ab:	sti    
  4155ac:	repz lock (bad) 
  4155af:	cld    
  4155b0:	repnz out dx,al
  4155b2:	(bad)  
  4155b3:	sti    
  4155b4:	icebp  
  4155b5:	in     al,dx
  4155b6:	(bad)  
  4155b7:	cli    
  4155b8:	lock (bad) 
  4155ba:	(bad)  
  4155bb:	cli    
  4155bc:	in     eax,dx
  4155bd:	call   0xffffffffe62e4fc1
  4155c2:	(bad)  
  4155c3:	clc    
  4155c4:	(bad)  
  4155c5:	jrcxz  0x4155c6
  4155c7:	clc    
  4155c8:	jmp    0xffffffffe73955ae
  4155cd:	fdivp  st(7),st
  4155cf:	mul    ebp
  4155d1:	fdiv   st(7),st
  4155d3:	fidivr DWORD PTR [rcx+0x4963ffa7]
  4155d9:	xor    eax,0xff
	...
  4155fe:	add    BYTE PTR [rsi-0x2007e6f],ah
  415604:	clc    
  415605:	idiv   bh
  415607:	(bad)  
  415608:	(bad)  
  415609:	(bad)  
  41560a:	(bad)  
  41560b:	(bad)  
  41560c:	(bad)  
  41560d:	(bad)  
  41560e:	(bad)  
  41560f:	(bad)  
  415610:	(bad)  
  415611:	std    
  415612:	(bad)  
  415613:	(bad)  
  415614:	std    
  415615:	cld    
  415616:	(bad)  
  415617:	(bad)  
  415618:	sti    
  415619:	sti    
  41561a:	(bad)  
  41561b:	(bad)  
  41561c:	cli    
  41561d:	clc    
  41561e:	(bad)  
  41561f:	std    
  415620:	stc    
  415621:	idiv   edi
  415623:	std    
  415624:	clc    
  415625:	idiv   bh
  415627:	cld    
  415628:	div    ah
  41562a:	(bad)  
  41562b:	cld    
  41562c:	div    dl
  41562e:	(bad)  
  41562f:	sti    
  415630:	hlt    
  415631:	lock (bad) 
  415633:	cld    
  415634:	repnz out dx,al
  415636:	(bad)  
  415637:	sti    
  415638:	lock in eax,dx
  41563a:	(bad)  
  41563b:	sti    
  41563c:	lock (bad) 
  41563e:	(bad)  
  41563f:	cli    
  415640:	out    dx,al
  415641:	call   0xffffffffe72e5045
  415646:	(bad)  
  415647:	clc    
  415648:	(bad)  
  415649:	in     al,0xff
  41564b:	clc    
  41564c:	jmp    0xffffffffe83a5632
  415651:	(bad)  
  415653:	fstp   TBYTE PTR [rdx+0x4963ffaa]
  415659:	xor    eax,0xff
	...
  41567e:	add    BYTE PTR [rdx-0x1007b6c],ch
  415684:	stc    
  415685:	clc    
  415686:	(bad)  
  415687:	(bad)  
  415688:	(bad)  
  415689:	(bad)  
  41568a:	(bad)  
  41568b:	(bad)  
  41568c:	(bad)  
  41568d:	(bad)  
  41568e:	(bad)  
  41568f:	(bad)  
  415690:	(bad)  
  415691:	(bad)  
  415692:	(bad)  
  415693:	(bad)  
  415694:	(bad)  
  415695:	std    
  415696:	(bad)  
  415697:	(bad)  
  415698:	std    
  415699:	cld    
  41569a:	(bad)  
  41569b:	(bad)  
  41569c:	cld    
  41569d:	cli    
  41569e:	(bad)  
  41569f:	(bad)  
  4156a0:	sti    
  4156a1:	stc    
  4156a2:	(bad)  
  4156a3:	std    
  4156a4:	cli    
  4156a5:	clc    
  4156a6:	(bad)  
  4156a7:	std    
  4156a8:	stc    
  4156a9:	idiv   bh
  4156ab:	std    
  4156ac:	div    ebp
  4156ae:	(bad)  
  4156af:	cld    
  4156b0:	div    bl
  4156b2:	(bad)  
  4156b3:	cld    
  4156b4:	cmc    
  4156b5:	icebp  
  4156b6:	(bad)  
  4156b7:	sti    
  4156b8:	repz out dx,eax
  4156ba:	(bad)  
  4156bb:	sti    
  4156bc:	repnz in eax,dx
  4156be:	(bad)  
  4156bf:	cli    
  4156c0:	lock jmp 0x4156c2
  4156c3:	cli    
  4156c4:	out    dx,eax
  4156c5:	jmp    0xffffffffe82f51c9
  4156ca:	(bad)  
  4156cb:	stc    
  4156cc:	jmp    0x4156b3
  4156ce:	(bad)  
  4156cf:	stc    
  4156d0:	jmp    0xffffffffbd1d56b7
  4156d5:	lods   al,BYTE PTR ds:[rsi]
  4156d6:	jmp    QWORD PTR [rbx+0x49]
  4156d9:	xor    eax,0xff
	...
  4156fe:	add    BYTE PTR [rsi+rdx*4-0x4010079],ch
  415705:	cli    
  415706:	(bad)  
  415707:	(bad)  
  415708:	(bad)  
  415709:	(bad)  
  41570a:	(bad)  
  41570b:	(bad)  
  41570c:	(bad)  
  41570d:	(bad)  
  41570e:	(bad)  
  41570f:	(bad)  
  415710:	(bad)  
  415711:	(bad)  
  415712:	(bad)  
  415713:	(bad)  
  415714:	(bad)  
  415715:	(bad)  
  415716:	(bad)  
  415717:	(bad)  
  415718:	(bad)  
  415719:	(bad)  
  41571a:	(bad)  
  41571b:	(bad)  
  41571c:	std    
  41571d:	cld    
  41571e:	(bad)  
  41571f:	(bad)  
  415720:	cld    
  415721:	sti    
  415722:	(bad)  
  415723:	(bad)  
  415724:	sti    
  415725:	cli    
  415726:	(bad)  
  415727:	std    
  415728:	cli    
  415729:	clc    
  41572a:	(bad)  
  41572b:	std    
  41572c:	stc    
  41572d:	idiv   bh
  41572f:	std    
  415730:	div    ebp
  415732:	(bad)  
  415733:	cld    
  415734:	div    bl
  415736:	(bad)  
  415737:	cld    
  415738:	hlt    
  415739:	repnz (bad) 
  41573b:	cld    
  41573c:	hlt    
  41573d:	lock (bad) 
  41573f:	sti    
  415740:	repnz in eax,dx
  415742:	(bad)  
  415743:	sti    
  415744:	lock jmp 0x415746
  415747:	cli    
  415748:	out    dx,eax
  415749:	jmp    0xffffffffe82f524d
  41574e:	(bad)  
  41574f:	stc    
  415750:	in     al,dx
  415751:	in     eax,0xff
  415753:	fdivr  QWORD PTR [rsi+0x4963ffae]
  415759:	xor    eax,0xff
	...
  41577e:	add    BYTE PTR [rsi-0x1007567],ch
  415784:	cld    
  415785:	cld    
  415786:	(bad)  
  415787:	(bad)  
  415788:	(bad)  
  415789:	(bad)  
  41578a:	(bad)  
  41578b:	(bad)  
  41578c:	(bad)  
  41578d:	(bad)  
  41578e:	(bad)  
  41578f:	(bad)  
  415790:	(bad)  
  415791:	(bad)  
  415792:	jmp    rdi
  415794:	rol    eax,1
  415796:	jmp    QWORD PTR [rax+riz*2-0x2e1800d6]
  41579d:	sar    bh,0xfe
  4157a0:	std    
  4157a1:	std    
  4157a2:	(bad)  
  4157a3:	(bad)  
  4157a4:	std    
  4157a5:	cld    
  4157a6:	(bad)  
  4157a7:	(bad)  
  4157a8:	sti    
  4157a9:	cli    
  4157aa:	(bad)  
  4157ab:	(bad)  
  4157ac:	cli    
  4157ad:	stc    
  4157ae:	(bad)  
  4157af:	std    
  4157b0:	stc    
  4157b1:	idiv   edi
  4157b3:	std    
  4157b4:	clc    
  4157b5:	cmc    
  4157b6:	(bad)  
  4157b7:	std    
  4157b8:	div    esp
  4157ba:	(bad)  
  4157bb:	cld    
  4157bc:	cmc    
  4157bd:	repnz (bad) 
  4157bf:	sti    
  4157c0:	hlt    
  4157c1:	lock (bad) 
  4157c3:	sti    
  4157c4:	repnz out dx,al
  4157c6:	(bad)  
  4157c7:	sti    
  4157c8:	icebp  
  4157c9:	in     al,dx
  4157ca:	(bad)  
  4157cb:	cli    
  4157cc:	out    dx,eax
  4157cd:	(bad)  
  4157ce:	(bad)  
  4157cf:	cli    
  4157d0:	in     eax,dx
  4157d1:	call   0xffffffffb20335d5
  4157d6:	jmp    QWORD PTR [rbx+0x49]
  4157d9:	xor    eax,0xff
	...
  4157fe:	add    BYTE PTR [rcx-0x7264],dh
  415804:	(bad)  
  415805:	std    
  415806:	(bad)  
  415807:	(bad)  
  415808:	(bad)  
  415809:	(bad)  
  41580a:	(bad)  
  41580b:	(bad)  
  41580c:	(bad)  
  41580d:	(bad)  
  41580e:	(bad)  
  41580f:	(bad)  
  415810:	(bad)  
  415811:	(bad)  
  415812:	jmp    QWORD PTR [rax+riz*2-0x662300d6]
  415819:	jmp    WORD PTR [rax+riz*2-0xd6]
  415821:	(bad)  
  415822:	(bad)  
  415823:	(bad)  
  415824:	(bad)  
  415825:	std    
  415826:	call   rdx
  415828:	ret    
  415829:	mov    ecx,0x9ca8bdff
  41582e:	push   QWORD PTR [rbx-0x55006f63]
  415834:	xchg   ebx,eax
  415835:	test   bh,bh
  415837:	xchg   edi,eax
  415838:	jle    0x4158a9
  41583a:	dec    DWORD PTR [rbx-0x78009f8f]
  415840:	ins    DWORD PTR es:[rdi],dx
  415841:	pop    rsp
  415842:	inc    DWORD PTR [rsi-0x300a594]
  415848:	repnz out dx,al
  41584a:	(bad)  
  41584b:	cli    
  41584c:	icebp  
  41584d:	in     al,dx
  41584e:	(bad)  
  41584f:	cli    
  415850:	out    dx,eax
  415851:	jmp    0x415852
  415853:	ffreep st(2)
  415855:	mov    bl,0xff
  415857:	movsxd ecx,DWORD PTR [rcx+0x35]
  41585a:	inc    DWORD PTR [rax]
	...
  41587c:	add    BYTE PTR [rax],al
  41587e:	add    BYTE PTR [rbx-0x7062],dh
  415884:	(bad)  
  415885:	(bad)  
  415886:	(bad)  
  415887:	(bad)  
  415888:	(bad)  
  415889:	(bad)  
  41588a:	(bad)  
  41588b:	(bad)  
  41588c:	(bad)  
  41588d:	(bad)  
  41588e:	(bad)  
  41588f:	(bad)  
  415890:	(bad)  
  415891:	(bad)  
  415892:	jmp    rdi
  415894:	rol    eax,1
  415896:	jmp    QWORD PTR [rax+riz*2-0x2e1800d6]
  41589d:	sar    bh,0xff
  4158a0:	(bad)  
  4158a1:	(bad)  
  4158a2:	(bad)  
  4158a3:	(bad)  
  4158a4:	(bad)  
  4158a5:	(bad)  
  4158a6:	(bad)  
  4158a7:	(bad)  
  4158a8:	(bad)  
  4158a9:	std    
  4158aa:	(bad)  
  4158ab:	(bad)  
  4158ac:	std    
  4158ad:	cld    
  4158ae:	(bad)  
  4158af:	(bad)  
  4158b0:	cld    
  4158b1:	cli    
  4158b2:	(bad)  
  4158b3:	(bad)  
  4158b4:	cli    
  4158b5:	stc    
  4158b6:	(bad)  
  4158b7:	std    
  4158b8:	stc    
  4158b9:	clc    
  4158ba:	(bad)  
  4158bb:	std    
  4158bc:	clc    
  4158bd:	idiv   bh
  4158bf:	std    
  4158c0:	div    ebp
  4158c2:	(bad)  
  4158c3:	std    
  4158c4:	div    dl
  4158c6:	(bad)  
  4158c7:	cld    
  4158c8:	hlt    
  4158c9:	icebp  
  4158ca:	(bad)  
  4158cb:	sti    
  4158cc:	repz out dx,eax
  4158ce:	(bad)  
  4158cf:	sti    
  4158d0:	icebp  
  4158d1:	in     eax,dx
  4158d2:	(bad)  
  4158d3:	ffreep st(4)
  4158d5:	mov    dh,0xff
  4158d7:	movsxd ecx,DWORD PTR [rcx+0x35]
  4158da:	inc    DWORD PTR [rax]
	...
  4158fc:	add    BYTE PTR [rax],al
  4158fe:	add    BYTE PTR [rbp-0x6d60],dh
  415904:	(bad)  
  415905:	(bad)  
  415906:	(bad)  
  415907:	(bad)  
  415908:	(bad)  
  415909:	(bad)  
  41590a:	(bad)  
  41590b:	(bad)  
  41590c:	(bad)  
  41590d:	(bad)  
  41590e:	(bad)  
  41590f:	(bad)  
  415910:	(bad)  
  415911:	(bad)  
  415912:	(bad)  
  415913:	(bad)  
  415914:	(bad)  
  415915:	(bad)  
  415916:	(bad)  
  415917:	(bad)  
  415918:	(bad)  
  415919:	(bad)  
  41591a:	(bad)  
  41591b:	(bad)  
  41591c:	(bad)  
  41591d:	(bad)  
  41591e:	(bad)  
  41591f:	(bad)  
  415920:	(bad)  
  415921:	(bad)  
  415922:	(bad)  
  415923:	(bad)  
  415924:	(bad)  
  415925:	(bad)  
  415926:	(bad)  
  415927:	(bad)  
  415928:	(bad)  
  415929:	(bad)  
  41592a:	(bad)  
  41592b:	(bad)  
  41592c:	(bad)  
  41592d:	std    
  41592e:	(bad)  
  41592f:	(bad)  
  415930:	std    
  415931:	cld    
  415932:	(bad)  
  415933:	(bad)  
  415934:	cld    
  415935:	sti    
  415936:	(bad)  
  415937:	(bad)  
  415938:	sti    
  415939:	cli    
  41593a:	(bad)  
  41593b:	std    
  41593c:	cli    
  41593d:	clc    
  41593e:	(bad)  
  41593f:	std    
  415940:	stc    
  415941:	idiv   bh
  415943:	std    
  415944:	div    ebp
  415946:	(bad)  
  415947:	cld    
  415948:	div    bl
  41594a:	(bad)  
  41594b:	cld    
  41594c:	hlt    
  41594d:	icebp  
  41594e:	(bad)  
  41594f:	cld    
  415950:	repz out dx,eax
  415952:	jmp    rax
  415954:	(bad)  
  415955:	mov    eax,0x354963ff
  41595a:	inc    DWORD PTR [rax]
	...
  41597c:	add    BYTE PTR [rax],al
  41597e:	add    BYTE PTR [rax-0x6b5d],bh
  415984:	(bad)  
  415985:	(bad)  
  415986:	(bad)  
  415987:	(bad)  
  415988:	(bad)  
  415989:	(bad)  
  41598a:	(bad)  
  41598b:	(bad)  
  41598c:	(bad)  
  41598d:	(bad)  
  41598e:	(bad)  
  41598f:	(bad)  
  415990:	(bad)  
  415991:	(bad)  
  415992:	(bad)  
  415993:	(bad)  
  415994:	(bad)  
  415995:	(bad)  
  415996:	(bad)  
  415997:	(bad)  
  415998:	(bad)  
  415999:	(bad)  
  41599a:	(bad)  
  41599b:	(bad)  
  41599c:	(bad)  
  41599d:	(bad)  
  41599e:	(bad)  
  41599f:	(bad)  
  4159a0:	(bad)  
  4159a1:	(bad)  
  4159a2:	(bad)  
  4159a3:	(bad)  
  4159a4:	(bad)  
  4159a5:	(bad)  
  4159a6:	(bad)  
  4159a7:	(bad)  
  4159a8:	(bad)  
  4159a9:	(bad)  
  4159aa:	(bad)  
  4159ab:	(bad)  
  4159ac:	(bad)  
  4159ad:	(bad)  
  4159ae:	(bad)  
  4159af:	(bad)  
  4159b0:	(bad)  
  4159b1:	(bad)  
  4159b2:	(bad)  
  4159b3:	(bad)  
  4159b4:	std    
  4159b5:	cld    
  4159b6:	(bad)  
  4159b7:	(bad)  
  4159b8:	cld    
  4159b9:	sti    
  4159ba:	(bad)  
  4159bb:	(bad)  
  4159bc:	sti    
  4159bd:	cli    
  4159be:	(bad)  
  4159bf:	std    
  4159c0:	cli    
  4159c1:	clc    
  4159c2:	(bad)  
  4159c3:	std    
  4159c4:	stc    
  4159c5:	idiv   edi
  4159c7:	leave  
  4159c8:	mov    ah,0xa9
  4159ca:	(bad)  
  4159cb:	mov    ebp,0xb2ff97a5
  4159d0:	cdq    
  4159d1:	mov    edi,edi
  4159d3:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  4159d4:	mov    bh,BYTE PTR [rax-0x1]
  4159d7:	movsxd ecx,DWORD PTR [rcx+0x35]
  4159da:	inc    DWORD PTR [rax]
	...
  4159fc:	add    BYTE PTR [rax],al
  4159fe:	add    BYTE PTR [rdx-0x675a],bh
  415a04:	(bad)  
  415a05:	(bad)  
  415a06:	(bad)  
  415a07:	(bad)  
  415a08:	(bad)  
  415a09:	(bad)  
  415a0a:	(bad)  
  415a0b:	(bad)  
  415a0c:	(bad)  
  415a0d:	(bad)  
  415a0e:	(bad)  
  415a0f:	(bad)  
  415a10:	(bad)  
  415a11:	(bad)  
  415a12:	(bad)  
  415a13:	(bad)  
  415a14:	(bad)  
  415a15:	(bad)  
  415a16:	(bad)  
  415a17:	(bad)  
  415a18:	(bad)  
  415a19:	(bad)  
  415a1a:	(bad)  
  415a1b:	(bad)  
  415a1c:	(bad)  
  415a1d:	(bad)  
  415a1e:	(bad)  
  415a1f:	(bad)  
  415a20:	(bad)  
  415a21:	(bad)  
  415a22:	(bad)  
  415a23:	(bad)  
  415a24:	(bad)  
  415a25:	(bad)  
  415a26:	(bad)  
  415a27:	(bad)  
  415a28:	(bad)  
  415a29:	(bad)  
  415a2a:	(bad)  
  415a2b:	(bad)  
  415a2c:	(bad)  
  415a2d:	(bad)  
  415a2e:	(bad)  
  415a2f:	(bad)  
  415a30:	(bad)  
  415a31:	(bad)  
  415a32:	(bad)  
  415a33:	(bad)  
  415a34:	(bad)  
  415a35:	(bad)  
  415a36:	(bad)  
  415a37:	(bad)  
  415a38:	std    
  415a39:	cld    
  415a3a:	(bad)  
  415a3b:	(bad)  
  415a3c:	std    
  415a3d:	sti    
  415a3e:	(bad)  
  415a3f:	(bad)  
  415a40:	sti    
  415a41:	cli    
  415a42:	call   FWORD PTR [rsi+0x63ff7687]
  415a48:	rex.WB xor rax,0x354963ff
  415a4e:	jmp    QWORD PTR [rbx+0x49]
  415a51:	xor    eax,0x354963ff
  415a56:	jmp    QWORD PTR [rbx+0x49]
  415a59:	xor    eax,0xff
	...
  415a7e:	add    BYTE PTR [rax+rbp*4-0x66],bh
  415a85:	(bad)  
  415a86:	(bad)  
  415a87:	(bad)  
  415a88:	(bad)  
  415a89:	(bad)  
  415a8a:	(bad)  
  415a8b:	(bad)  
  415a8c:	(bad)  
  415a8d:	(bad)  
  415a8e:	(bad)  
  415a8f:	(bad)  
  415a90:	(bad)  
  415a91:	(bad)  
  415a92:	(bad)  
  415a93:	(bad)  
  415a94:	(bad)  
  415a95:	(bad)  
  415a96:	(bad)  
  415a97:	(bad)  
  415a98:	(bad)  
  415a99:	(bad)  
  415a9a:	(bad)  
  415a9b:	(bad)  
  415a9c:	(bad)  
  415a9d:	(bad)  
  415a9e:	(bad)  
  415a9f:	(bad)  
  415aa0:	(bad)  
  415aa1:	(bad)  
  415aa2:	(bad)  
  415aa3:	(bad)  
  415aa4:	(bad)  
  415aa5:	(bad)  
  415aa6:	(bad)  
  415aa7:	(bad)  
  415aa8:	(bad)  
  415aa9:	(bad)  
  415aaa:	(bad)  
  415aab:	(bad)  
  415aac:	(bad)  
  415aad:	(bad)  
  415aae:	(bad)  
  415aaf:	(bad)  
  415ab0:	(bad)  
  415ab1:	(bad)  
  415ab2:	(bad)  
  415ab3:	(bad)  
  415ab4:	(bad)  
  415ab5:	(bad)  
  415ab6:	(bad)  
  415ab7:	(bad)  
  415ab8:	(bad)  
  415ab9:	(bad)  
  415aba:	(bad)  
  415abb:	(bad)  
  415abc:	std    
  415abd:	(bad)  
  415abe:	(bad)  
  415abf:	(bad)  
  415ac0:	cld    
  415ac1:	cld    
  415ac2:	jmp    QWORD PTR [rax-0x2a008677]
  415ac8:	(bad)
  415acb:	(bad)  
  415acc:	mov    cl,0xa5
  415ace:	(bad)  
  415acf:	mov    ecx,0x6cff92a1
  415ad4:	push   rdx
  415ad5:	inc    DWORD PTR ds:[rax]
	...
  415afc:	add    BYTE PTR [rax],al
  415afe:	add    BYTE PTR [rsi-0x6356],bh
  415b04:	(bad)  
  415b05:	(bad)  
  415b06:	(bad)  
  415b07:	(bad)  
  415b08:	(bad)  
  415b09:	(bad)  
  415b0a:	(bad)  
  415b0b:	(bad)  
  415b0c:	(bad)  
  415b0d:	(bad)  
  415b0e:	(bad)  
  415b0f:	(bad)  
  415b10:	(bad)  
  415b11:	(bad)  
  415b12:	(bad)  
  415b13:	(bad)  
  415b14:	(bad)  
  415b15:	(bad)  
  415b16:	(bad)  
  415b17:	(bad)  
  415b18:	(bad)  
  415b19:	(bad)  
  415b1a:	(bad)  
  415b1b:	(bad)  
  415b1c:	(bad)  
  415b1d:	(bad)  
  415b1e:	(bad)  
  415b1f:	(bad)  
  415b20:	(bad)  
  415b21:	(bad)  
  415b22:	(bad)  
  415b23:	(bad)  
  415b24:	(bad)  
  415b25:	(bad)  
  415b26:	(bad)  
  415b27:	(bad)  
  415b28:	(bad)  
  415b29:	(bad)  
  415b2a:	(bad)  
  415b2b:	(bad)  
  415b2c:	(bad)  
  415b2d:	(bad)  
  415b2e:	(bad)  
  415b2f:	(bad)  
  415b30:	(bad)  
  415b31:	(bad)  
  415b32:	(bad)  
  415b33:	(bad)  
  415b34:	(bad)  
  415b35:	(bad)  
  415b36:	(bad)  
  415b37:	(bad)  
  415b38:	(bad)  
  415b39:	(bad)  
  415b3a:	(bad)  
  415b3b:	(bad)  
  415b3c:	(bad)  
  415b3d:	(bad)  
  415b3e:	(bad)  
  415b3f:	(bad)  
  415b40:	(bad)  
  415b41:	std    
  415b42:	jmp    QWORD PTR [rdx-0x1c008374]
  415b48:	fcmovbe st,st(3)
  415b4a:	call   rbp
  415b4c:	(bad)
  415b4f:	jns    0x415bb1
  415b51:	rex.WR inc QWORD PTR [rax]
	...
  415b7c:	add    BYTE PTR [rax],al
  415b7e:	add    al,al
  415b80:	lods   eax,DWORD PTR ds:[rsi]
  415b81:	lahf   
  415b82:	(bad)  
  415b83:	(bad)  
  415b84:	(bad)  
  415b85:	(bad)  
  415b86:	(bad)  
  415b87:	(bad)  
  415b88:	(bad)  
  415b89:	(bad)  
  415b8a:	(bad)  
  415b8b:	(bad)  
  415b8c:	(bad)  
  415b8d:	(bad)  
  415b8e:	(bad)  
  415b8f:	(bad)  
  415b90:	(bad)  
  415b91:	(bad)  
  415b92:	(bad)  
  415b93:	(bad)  
  415b94:	(bad)  
  415b95:	(bad)  
  415b96:	(bad)  
  415b97:	(bad)  
  415b98:	(bad)  
  415b99:	(bad)  
  415b9a:	(bad)  
  415b9b:	(bad)  
  415b9c:	(bad)  
  415b9d:	(bad)  
  415b9e:	(bad)  
  415b9f:	(bad)  
  415ba0:	(bad)  
  415ba1:	(bad)  
  415ba2:	(bad)  
  415ba3:	(bad)  
  415ba4:	(bad)  
  415ba5:	(bad)  
  415ba6:	(bad)  
  415ba7:	(bad)  
  415ba8:	(bad)  
  415ba9:	(bad)  
  415baa:	(bad)  
  415bab:	(bad)  
  415bac:	(bad)  
  415bad:	(bad)  
  415bae:	(bad)  
  415baf:	(bad)  
  415bb0:	(bad)  
  415bb1:	(bad)  
  415bb2:	(bad)  
  415bb3:	(bad)  
  415bb4:	(bad)  
  415bb5:	(bad)  
  415bb6:	(bad)  
  415bb7:	(bad)  
  415bb8:	(bad)  
  415bb9:	(bad)  
  415bba:	(bad)  
  415bbb:	(bad)  
  415bbc:	(bad)  
  415bbd:	(bad)  
  415bbe:	(bad)  
  415bbf:	(bad)  
  415bc0:	(bad)  
  415bc1:	(bad)  
  415bc2:	jmp    QWORD PTR [rbp-0xc008172]
  415bc8:	out    dx,eax
  415bc9:	in     eax,dx
  415bca:	dec    DWORD PTR [rax+0xff5d70]
	...
  415bfc:	add    BYTE PTR [rax],al
  415bfe:	add    dl,al
  415c00:	scas   eax,DWORD PTR es:[rdi]
  415c01:	movabs eax,ds:0xffffffffffffffff
  415c0a:	(bad)  
  415c0b:	(bad)  
  415c0c:	(bad)  
  415c0d:	(bad)  
  415c0e:	(bad)  
  415c0f:	(bad)  
  415c10:	(bad)  
  415c11:	(bad)  
  415c12:	(bad)  
  415c13:	(bad)  
  415c14:	std    
  415c15:	cld    
  415c16:	(bad)  
  415c17:	(bad)  
  415c18:	sti    
  415c19:	sti    
  415c1a:	(bad)  
  415c1b:	std    
  415c1c:	stc    
  415c1d:	clc    
  415c1e:	(bad)  
  415c1f:	std    
  415c20:	clc    
  415c21:	cmc    
  415c22:	(bad)  
  415c23:	cld    
  415c24:	cmc    
  415c25:	repnz (bad) 
  415c27:	sti    
  415c28:	repz out dx,eax
  415c2a:	(bad)  
  415c2b:	sti    
  415c2c:	lock jmp 0x415c2e
  415c2f:	cli    
  415c30:	in     eax,dx
  415c31:	call   0xffffffffe52d5635
  415c36:	(bad)  
  415c37:	clc    
  415c38:	jmp    0xffffffffe8395c1f
  415c3d:	(bad)  
  415c3f:	mul    esp
  415c41:	(bad)  
  415c43:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  415c44:	xchg   ecx,eax
  415c45:	(bad)  
  415c46:	call   QWORD PTR [rsi+0xff6e7f]
	...
  415c7c:	add    BYTE PTR [rax],al
  415c7e:	add    ch,al
  415c80:	mov    cl,0xa3
  415c82:	inc    ebx
  415c84:	scas   eax,DWORD PTR es:[rdi]
  415c85:	movabs eax,ds:0x9facc0ffa0aec2ff
  415c8e:	(bad)  
  415c8f:	mov    edi,0xbdff9cab
  415c94:	test   eax,0xa7bcff9b
  415c99:	(bad)  
  415c9a:	(bad)  
  415c9b:	mov    ebx,0xb8ff97a6
  415ca0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  415ca1:	xchg   ebp,eax
  415ca2:	push   QWORD PTR [rdi-0x49006b5e]
  415ca8:	movabs eax,ds:0x9db2ff909fb3ff92
  415cb1:	(bad)  
  415cb2:	push   QWORD PTR [rax-0x51007265]
  415cb8:	(bad)  
  415cb9:	mov    edi,edi
  415cbb:	lods   eax,DWORD PTR ds:[rsi]
  415cbc:	cwde   
  415cbd:	mov    bh,bh
  415cbf:	stos   DWORD PTR es:[rdi],eax
  415cc0:	xchg   esi,eax
  415cc1:	xchg   edi,edi
  415cc3:	test   eax,0xff8494
	...
  415d68:	add    BYTE PTR [rax],al
  415d6a:	add    bh,bh
  415d6c:	(bad)  
  415d6d:	(bad)  
  415d6e:	(bad)  
  415d6f:	clc    
  415d70:	add    BYTE PTR [rax],al
  415d72:	psubb  mm0,QWORD PTR [rax]
  415d75:	add    BYTE PTR [rdi],cl
  415d77:	clc    
  415d78:	add    BYTE PTR [rax],al
  415d7a:	psubb  mm0,QWORD PTR [rax]
  415d7d:	add    BYTE PTR [rdi],cl
  415d7f:	clc    
  415d80:	add    BYTE PTR [rax],al
  415d82:	psubb  mm0,QWORD PTR [rax]
  415d85:	add    BYTE PTR [rdi],cl
  415d87:	clc    
  415d88:	add    BYTE PTR [rax],al
  415d8a:	psubb  mm0,QWORD PTR [rax]
  415d8d:	add    BYTE PTR [rdi],cl
  415d8f:	clc    
  415d90:	add    BYTE PTR [rax],al
  415d92:	psubb  mm0,QWORD PTR [rax]
  415d95:	add    BYTE PTR [rdi],cl
  415d97:	clc    
  415d98:	add    BYTE PTR [rax],al
  415d9a:	psubb  mm0,QWORD PTR [rax]
  415d9d:	add    BYTE PTR [rdi],cl
  415d9f:	clc    
  415da0:	add    BYTE PTR [rax],al
  415da2:	psubb  mm0,QWORD PTR [rax]
  415da5:	add    BYTE PTR [rdi],cl
  415da7:	clc    
  415da8:	add    BYTE PTR [rax],al
  415daa:	psubb  mm0,QWORD PTR [rax]
  415dad:	add    BYTE PTR [rdi],cl
  415daf:	clc    
  415db0:	add    BYTE PTR [rax],al
  415db2:	psubb  mm0,QWORD PTR [rax]
  415db5:	add    BYTE PTR [rdi],cl
  415db7:	clc    
  415db8:	add    BYTE PTR [rax],al
  415dba:	psubb  mm0,QWORD PTR [rax]
  415dbd:	add    BYTE PTR [rdi],cl
  415dbf:	clc    
  415dc0:	add    BYTE PTR [rax],al
  415dc2:	psubb  mm0,QWORD PTR [rax]
  415dc5:	add    BYTE PTR [rdi],cl
  415dc7:	clc    
  415dc8:	add    BYTE PTR [rax],al
  415dca:	psubb  mm0,QWORD PTR [rax]
  415dcd:	add    BYTE PTR [rdi],cl
  415dcf:	clc    
  415dd0:	add    BYTE PTR [rax],al
  415dd2:	psubb  mm0,QWORD PTR [rax]
  415dd5:	add    BYTE PTR [rdi],bl
  415dd7:	clc    
  415dd8:	add    BYTE PTR [rax],al
  415dda:	(bad)  
  415ddb:	clc    
  415ddc:	add    BYTE PTR [rax],al
  415dde:	jg     0x415dd8
  415de0:	add    BYTE PTR [rax],al
  415de2:	(bad)  
  415de3:	clc    
  415de4:	add    BYTE PTR [rcx],al
  415de6:	(bad)  
  415de7:	(bad)  
  415de8:	(bad)  
  415de9:	(bad)  
  415dea:	jmp    FWORD PTR [rax]
  415dec:	add    BYTE PTR [rax],al
  415dee:	add    BYTE PTR [rax],dl
  415df0:	add    BYTE PTR [rax],al
  415df2:	add    BYTE PTR [rax],ah
  415df4:	add    BYTE PTR [rax],al
  415df6:	add    BYTE PTR [rcx],al
  415df8:	add    BYTE PTR [rax],ah
  415dfa:	add    BYTE PTR [rax],al
  415dfc:	add    BYTE PTR [rax],al
  415dfe:	add    BYTE PTR [rax+0x4],al
	...
  415e19:	add    BYTE PTR [rax],al
  415e1b:	jno    0x415e74
  415e1d:	rex.R jmp QWORD PTR [rbx+0x49]
  415e21:	xor    eax,0x354963ff
  415e26:	jmp    QWORD PTR [rbx+0x49]
  415e29:	xor    eax,0x354963ff
  415e2e:	jmp    QWORD PTR [rbx+0x49]
  415e31:	xor    eax,0x354963ff
  415e36:	jmp    QWORD PTR [rbx+0x49]
  415e39:	xor    eax,0x354963ff
  415e3e:	jmp    QWORD PTR [rbx+0x49]
  415e41:	xor    eax,0x354963ff
  415e46:	jmp    QWORD PTR [rbx+0x49]
  415e49:	xor    eax,0xff
	...
  415e5a:	add    BYTE PTR [rsi+0x5c],dh
  415e5d:	rex.WB (bad) 
  415e5f:	out    dx,eax
  415e60:	rol    esi,cl
  415e62:	(bad)  
  415e63:	fidivr WORD PTR [rdi-0x42200051]
  415e69:	stos   DWORD PTR es:[rdi],eax
  415e6a:	(bad)  
  415e6b:	fdivr  QWORD PTR [rax-0x4b250059]
  415e71:	movabs ds:0x99add7ff9db0d8ff,al
  415e7a:	call   rdi
  415e7c:	lods   al,BYTE PTR ds:[rsi]
  415e7d:	xchg   esi,eax
  415e7e:	call   rdi
  415e80:	lods   al,BYTE PTR ds:[rsi]
  415e81:	xchg   esi,eax
  415e82:	(bad)  
  415e83:	fld    TBYTE PTR [rbp+rdx*4+0x354963ff]
  415e8a:	inc    DWORD PTR [rax]
	...
  415e98:	add    BYTE PTR [rax],al
  415e9a:	add    BYTE PTR [rdx+0x61],bh
  415e9d:	rex.WRX (bad) 
  415e9f:	clc    
  415ea0:	loop   0x415e7a
  415ea2:	(bad)  
  415ea3:	cli    
  415ea4:	out    dx,al
  415ea5:	out    0xff,eax
  415ea7:	stc    
  415ea8:	(bad)  
  415ea9:	loop   0x415eaa
  415eab:	mul    ebp
  415ead:	(bad)  
  415eaf:	mul    cl
  415eb1:	xlat   BYTE PTR ds:[rbx]
  415eb2:	push   rsp
  415eb4:	fst    st(1)
  415eb6:	push   rsp
  415eb8:	fxch   st(4)
  415eba:	push   rdx
  415ebc:	(bad)  
  415ebd:	(bad)  
  415ebe:	push   rdx
  415ec0:	rol    ecx,1
  415ec2:	(bad)  
  415ec3:	(bad)  
  415ec4:	shr    BYTE PTR [rdi+rdi*8-0xcab69d],0x0
	...
  415ed8:	add    BYTE PTR [rax],al
  415eda:	add    BYTE PTR [rax-0x700aa99],al
  415ee0:	in     al,0xdb
  415ee2:	(bad)  
  415ee3:	sti    
  415ee4:	icebp  
  415ee5:	in     eax,dx
  415ee6:	(bad)  
  415ee7:	cli    
  415ee8:	in     eax,dx
  415ee9:	out    0xff,eax
  415eeb:	stc    
  415eec:	(bad)  
  415eed:	loop   0x415eee
  415eef:	clc    
  415ef0:	in     eax,0xdd
  415ef2:	push   rsi
  415ef4:	loope  0x415ecd
  415ef6:	push   rsp
  415ef8:	(bad)  
  415efa:	push   rsp
  415efc:	fmul   st,st(4)
  415efe:	push   rbx
  415f00:	(bad)  
  415f01:	(bad)  
  415f02:	(bad)  
  415f03:	(bad)  
  415f04:	shr    BYTE PTR [rdi+rdi*8-0xcab69d],0x0
	...
  415f18:	add    BYTE PTR [rax],al
  415f1a:	add    BYTE PTR [rsi-0x600a593],al
  415f20:	call   0x60e65f05
  415f25:	sub    bh,bh
  415f27:	fcomp  QWORD PTR [rcx-0x1106009a]
  415f2d:	out    0xff,eax
  415f2f:	mov    ebp,0xb3ff9ca8
  415f34:	popf   
  415f35:	nop
  415f36:	jmp    FWORD PTR [rdx-0x68007b6d]
  415f3c:	jle    0x415fad
  415f3e:	dec    DWORD PTR [rbx-0x14009f8f]
  415f44:	ret    
  415f45:	mov    al,0xff
  415f47:	movsxd ecx,DWORD PTR [rcx+0x35]
  415f4a:	inc    DWORD PTR [rax]
	...
  415f58:	add    BYTE PTR [rax],al
  415f5a:	add    BYTE PTR [rbx-0x5009e8d],cl
  415f60:	jmp    0x415f46
  415f62:	(bad)  
  415f63:	fcomp  QWORD PTR [rcx+0x60a4ff66]
  415f69:	sub    bh,bh
  415f6b:	cli    
  415f6c:	icebp  
  415f6d:	in     al,dx
  415f6e:	(bad)  
  415f6f:	stc    
  415f70:	out    dx,al
  415f71:	call   0xffffffffe32b5975
  415f76:	push   rdi
  415f78:	in     eax,0xdd
  415f7a:	push   rsi
  415f7c:	loope  0x415f55
  415f7e:	push   rsp
  415f80:	fst    st(1)
  415f82:	(bad)  
  415f83:	in     eax,dx
  415f84:	(bad)  
  415f85:	mov    dh,0xff
  415f87:	movsxd ecx,DWORD PTR [rcx+0x35]
  415f8a:	inc    DWORD PTR [rax]
	...
  415f98:	add    BYTE PTR [rax],al
  415f9a:	add    BYTE PTR [rcx-0x4009787],dl
  415fa0:	out    dx,al
  415fa1:	out    0xff,eax
  415fa3:	std    
  415fa4:	cli    
  415fa5:	stc    
  415fa6:	(bad)  
  415fa7:	cld    
  415fa8:	clc    
  415fa9:	cmc    
  415faa:	(bad)  
  415fab:	cld    
  415fac:	cmc    
  415fad:	icebp  
  415fae:	(bad)  
  415faf:	sti    
  415fb0:	icebp  
  415fb1:	in     al,dx
  415fb2:	(bad)  
  415fb3:	cli    
  415fb4:	in     eax,dx
  415fb5:	out    0xff,eax
  415fb7:	clc    
  415fb8:	jmp    0xffffffffe63a5f9f
  415fbd:	fdiv   st(7),st
  415fbf:	mul    cl
  415fc1:	xlat   BYTE PTR ds:[rbx]
  415fc2:	(bad)  
  415fc3:	out    dx,al
  415fc4:	int    0xbc
  415fc6:	jmp    QWORD PTR [rbx+0x49]
  415fc9:	xor    eax,0xff
	...
  415fda:	add    BYTE PTR [rdi-0x3009080],dl
  415fe0:	lock in al,dx
  415fe2:	jmp    QWORD PTR [rax+riz*2-0x662300d6]
  415fe9:	data16 (bad) 
  415feb:	std    
  415fec:	div    esi
  415fee:	(bad)  
  415fef:	mov    ebp,0xb3ff9ca8
  415ff4:	popf   
  415ff5:	nop
  415ff6:	jmp    FWORD PTR [rdx-0x68007b6d]
  415ffc:	jle    0x41606d
  415ffe:	dec    DWORD PTR [rbx-0xf009f8f]
  416004:	rol    bl,cl
  416006:	jmp    QWORD PTR [rbx+0x49]
  416009:	xor    eax,0xff
	...
  41601a:	add    BYTE PTR [rbp-0x200897a],bl
  416020:	repz lock (bad) 
  416023:	fcomp  QWORD PTR [rcx+0x60a4ff66]
  416029:	sub    bh,bh
  41602b:	(bad)  
  41602c:	sti    
  41602d:	cli    
  41602e:	(bad)  
  41602f:	std    
  416030:	clc    
  416031:	idiv   bh
  416033:	cld    
  416034:	cmc    
  416035:	icebp  
  416036:	(bad)  
  416037:	sti    
  416038:	icebp  
  416039:	in     eax,dx
  41603a:	(bad)  
  41603b:	stc    
  41603c:	in     eax,dx
  41603d:	out    0xff,eax
  41603f:	clc    
  416040:	jmp    0xffffffffd7356027
  416045:	leave  
  416046:	jmp    QWORD PTR [rbx+0x49]
  416049:	xor    eax,0xff
	...
  41605a:	add    BYTE PTR [rbx-0x3008274],ah
  416060:	cmc    
  416061:	repnz (bad) 
  416063:	(bad)  
  416064:	(bad)  
  416065:	(bad)  
  416066:	(bad)  
  416067:	(bad)  
  416068:	(bad)  
  416069:	(bad)  
  41606a:	(bad)  
  41606b:	(bad)  
  41606c:	std    
  41606d:	cld    
  41606e:	(bad)  
  41606f:	(bad)  
  416070:	cli    
  416071:	stc    
  416072:	(bad)  
  416073:	std    
  416074:	div    ebp
  416076:	(bad)  
  416077:	cld    
  416078:	hlt    
  416079:	icebp  
  41607a:	(bad)  
  41607b:	sti    
  41607c:	icebp  
  41607d:	in     al,dx
  41607e:	(bad)  
  41607f:	cli    
  416080:	out    dx,al
  416081:	out    0xff,eax
  416083:	hlt    
  416084:	(bad)  
  416086:	jmp    QWORD PTR [rbx+0x49]
  416089:	xor    eax,0xff
	...
  41609a:	add    BYTE PTR [rax-0x1007c6d],ch
  4160a0:	clc    
  4160a1:	cmc    
  4160a2:	jmp    QWORD PTR [rax+riz*2-0x662300d6]
  4160a9:	data16 (bad) 
  4160ab:	(bad)  
  4160ac:	(bad)  
  4160ad:	(bad)  
  4160ae:	(bad)  
  4160af:	mov    ebp,0xb3ff9ca8
  4160b4:	popf   
  4160b5:	nop
  4160b6:	jmp    FWORD PTR [rdx-0x68007b6d]
  4160bc:	jle    0x41612d
  4160be:	dec    DWORD PTR [rbx-0x8009f8f]
  4160c4:	loop   0x41609d
  4160c6:	jmp    QWORD PTR [rbx+0x49]
  4160c9:	xor    eax,0xff
	...
  4160da:	add    BYTE PTR [rsi-0x1007567],ch
  4160e0:	stc    
  4160e1:	idiv   edi
  4160e3:	fcomp  QWORD PTR [rcx+0x60a4ff66]
  4160e9:	sub    bh,bh
  4160eb:	(bad)  
  4160ec:	(bad)  
  4160ed:	(bad)  
  4160ee:	(bad)  
  4160ef:	(bad)  
  4160f0:	(bad)  
  4160f1:	(bad)  
  4160f2:	(bad)  
  4160f3:	(bad)  
  4160f4:	std    
  4160f5:	cld    
  4160f6:	(bad)  
  4160f7:	(bad)  
  4160f8:	cli    
  4160f9:	stc    
  4160fa:	(bad)  
  4160fb:	std    
  4160fc:	div    ebp
  4160fe:	(bad)  
  4160ff:	cld    
  416100:	hlt    
  416101:	icebp  
  416102:	(bad)  
  416103:	sti    
  416104:	(bad)  
  416105:	loopne 0x416106
  416107:	movsxd ecx,DWORD PTR [rcx+0x35]
  41610a:	inc    DWORD PTR [rax]
	...
  416118:	add    BYTE PTR [rax],al
  41611a:	add    BYTE PTR [rbx-0x1007061],dh
  416120:	sti    
  416121:	stc    
  416122:	(bad)  
  416123:	(bad)  
  416124:	(bad)  
  416125:	(bad)  
  416126:	(bad)  
  416127:	(bad)  
  416128:	(bad)  
  416129:	(bad)  
  41612a:	(bad)  
  41612b:	(bad)  
  41612c:	(bad)  
  41612d:	(bad)  
  41612e:	(bad)  
  41612f:	(bad)  
  416130:	(bad)  
  416131:	(bad)  
  416132:	(bad)  
  416133:	(bad)  
  416134:	(bad)  
  416135:	(bad)  
  416136:	(bad)  
  416137:	(bad)  
  416138:	std    
  416139:	cld    
  41613a:	jmp    QWORD PTR [rdx+0x6cff7c8c]
  416140:	push   rcx
  416141:	cmp    eax,0x3d516cff
  416146:	jmp    QWORD PTR [rbx+0x49]
  416149:	xor    eax,0xff
	...
  41615a:	add    BYTE PTR [rax-0x1006a5c],bh
  416160:	cld    
  416161:	sti    
  416162:	(bad)  
  416163:	(bad)  
  416164:	(bad)  
  416165:	(bad)  
  416166:	(bad)  
  416167:	(bad)  
  416168:	(bad)  
  416169:	(bad)  
  41616a:	(bad)  
  41616b:	(bad)  
  41616c:	(bad)  
  41616d:	(bad)  
  41616e:	(bad)  
  41616f:	(bad)  
  416170:	(bad)  
  416171:	(bad)  
  416172:	(bad)  
  416173:	(bad)  
  416174:	(bad)  
  416175:	(bad)  
  416176:	(bad)  
  416177:	(bad)  
  416178:	(bad)  
  416179:	(bad)  
  41617a:	jmp    QWORD PTR [rdx-0x18008374]
  416180:	(bad)  
  416182:	dec    DWORD PTR [rax+0xff5d70]
	...
  416198:	add    BYTE PTR [rax],al
  41619a:	add    BYTE PTR [rbp-0x6458],bh
  4161a0:	(bad)  
  4161a1:	(bad)  
  4161a2:	(bad)  
  4161a3:	(bad)  
  4161a4:	(bad)  
  4161a5:	(bad)  
  4161a6:	(bad)  
  4161a7:	(bad)  
  4161a8:	(bad)  
  4161a9:	(bad)  
  4161aa:	(bad)  
  4161ab:	(bad)  
  4161ac:	(bad)  
  4161ad:	(bad)  
  4161ae:	(bad)  
  4161af:	(bad)  
  4161b0:	(bad)  
  4161b1:	(bad)  
  4161b2:	(bad)  
  4161b3:	(bad)  
  4161b4:	(bad)  
  4161b5:	(bad)  
  4161b6:	(bad)  
  4161b7:	(bad)  
  4161b8:	(bad)  
  4161b9:	(bad)  
  4161ba:	jmp    QWORD PTR [rdx-0x77008374]
  4161c0:	jo     0x41621f
  4161c2:	inc    DWORD PTR [rax]
	...
  4161d8:	add    BYTE PTR [rax],al
  4161da:	add    dl,al
  4161dc:	scas   al,BYTE PTR es:[rdi]
  4161dd:	movabs al,ds:0x95a4b8ff9ba8bdff
  4161e6:	push   QWORD PTR [rbx-0x51006f61]
  4161ec:	cdq    
  4161ed:	mov    bh,bh
  4161ef:	test   al,0x93
  4161f1:	cmp    edi,0xffffffa3
  4161f4:	lea    edi,[rbp-0x1]
  4161f7:	popf   
  4161f8:	xchg   BYTE PTR [rsi-0x1],dh
  4161fb:	xchg   edi,eax
  4161fc:	sub    BYTE PTR [rdi-0x1],0x0
	...
  416210:	add    BYTE PTR [rax],al
  416212:	add    al,al
  416214:	add    eax,DWORD PTR [rax]
  416216:	add    al,al
  416218:	add    eax,DWORD PTR [rax]
  41621a:	add    al,al
  41621c:	add    eax,DWORD PTR [rax]
  41621e:	add    al,al
  416220:	add    eax,DWORD PTR [rax]
  416222:	add    al,al
  416224:	add    eax,DWORD PTR [rax]
  416226:	add    al,al
  416228:	add    eax,DWORD PTR [rax]
  41622a:	add    al,al
  41622c:	add    eax,DWORD PTR [rax]
  41622e:	add    al,al
  416230:	add    eax,DWORD PTR [rax]
  416232:	add    al,al
  416234:	add    eax,DWORD PTR [rax]
  416236:	add    al,al
  416238:	add    eax,DWORD PTR [rax]
  41623a:	add    al,al
  41623c:	add    eax,DWORD PTR [rax]
  41623e:	add    al,al
  416240:	add    eax,DWORD PTR [rax]
  416242:	add    al,al
  416244:	add    eax,DWORD PTR [rax]
  416246:	add    al,al
  416248:	(bad)  
  416249:	add    BYTE PTR [rax],al
  41624b:	ror    BYTE PTR [rdi],0x0
  41624e:	add    al,al
  416250:	(bad)  
  416251:	add    BYTE PTR [rax],al
  416253:	or     eax,DWORD PTR [rax+0x0]
  416256:	add    DWORD PTR [rax],eax
  416258:	add    BYTE PTR [rax],al
  41625a:	(bad)  
  41625b:	(bad)  
  41625c:	(bad)  
  41625d:	inc    DWORD PTR [rcx]
  41625f:	add    BYTE PTR [rax],al
  416261:	add    BYTE PTR [rax],al
  416263:	add    BYTE PTR [rax],al
  416265:	add    BYTE PTR [rdx+rax*1],cl
  416268:	add    BYTE PTR [rax],al
  41626a:	add    BYTE PTR [rcx+0x53],dl
  41626d:	jns    0x4162e2
  41626f:	je     0x4162d6
  416271:	ins    DWORD PTR es:[rdi],dx
  416272:	cs rex.R jb 0x4162d7
  416276:	ja     0x4162e1
  416278:	outs   dx,BYTE PTR ds:[rsi]
  416279:	addr32 sub al,0x20
  41627c:	push   rsi
  41627d:	gs jb  0x4162f3
  416280:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  416287:	xor    BYTE PTR cs:[rsi],ch
  41628a:	xor    BYTE PTR [rax+riz*1],ch
  41628d:	rex.XB jne 0x4162fc
  416290:	je     0x416307
  416292:	jb     0x4162f9
  416294:	cmp    eax,0x7475656e
  416299:	jb     0x4162fc
  41629b:	ins    BYTE PTR es:[rdi],dx
  41629c:	sub    al,0x20
  41629e:	push   rax
  41629f:	jne    0x416303
  4162a1:	ins    BYTE PTR es:[rdi],dx
  4162a2:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  4162a9:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  4162ad:	(bad)  
  4162ae:	xor    BYTE PTR [rbx],dh
  4162b0:	xor    ax,0x3766
  4162b4:	xor    WORD PTR [rcx],si
  4162b7:	fs xor eax,0x61336130
  4162bd:	add    eax,0x1
  4162c2:	adc    edx,DWORD PTR [rbx+0x79]
  4162c5:	jae    0x41633b
  4162c7:	gs ins DWORD PTR es:[rdi],dx
  4162c9:	cs rex.R jb 0x41632e
  4162cd:	ja     0x416338
  4162cf:	outs   dx,BYTE PTR ds:[rsi]
  4162d0:	movsxd rbp,DWORD PTR cs:[r15d+0x6e]
  4162d6:	add    al,BYTE PTR [rax]
  4162d8:	add    BYTE PTR [rax],al
  4162da:	or     BYTE PTR [rcx+0x63],cl
  4162dd:	outs   dx,DWORD PTR ds:[rsi]
  4162de:	outs   dx,BYTE PTR ds:[rsi]
  4162df:	rex.R (bad) 
  4162e1:	je     0x416344
  4162e3:	or     BYTE PTR [rcx+0x63],cl
  4162e6:	outs   dx,DWORD PTR ds:[rsi]
  4162e7:	outs   dx,BYTE PTR ds:[rsi]
  4162e8:	push   rbx
  4162e9:	imul   edi,DWORD PTR [rdx+0x65],0x13020407
  4162f0:	push   rbx
  4162f1:	jns    0x416366
  4162f3:	je     0x41635a
  4162f5:	ins    DWORD PTR es:[rdi],dx
  4162f6:	cs rex.R jb 0x41635b
  4162fa:	ja     0x416365
  4162fc:	outs   dx,BYTE PTR ds:[rsi]
  4162fd:	addr32 cs push rbx
  416300:	imul   edi,DWORD PTR [rdx+0x65],0x2
  416307:	add    al,BYTE PTR [rax]
  416309:	add    BYTE PTR [rax],al
  41630b:	or     DWORD PTR [rbx],eax
  41630d:	add    BYTE PTR [rax],al
  41630f:	add    BYTE PTR [rip+0xfffffffffffffffc],al        # 0x416311
  416315:	adc    edx,DWORD PTR [rbx+0x79]
  416318:	jae    0x41638e
  41631a:	gs ins DWORD PTR es:[rdi],dx
  41631c:	cs rex.R jb 0x416381
  416320:	ja     0x41638b
  416322:	outs   dx,BYTE PTR ds:[rsi]
  416323:	addr32 cs push rbx
  416326:	imul   edi,DWORD PTR [rdx+0x65],0x2
  41632d:	add    eax,0x74646977
  416332:	push   0x69656806
  416337:	addr32 push 0x8000074
  41633d:	or     BYTE PTR [rdx],al
	...
  416347:	add    BYTE PTR [rax],al
  416349:	add    BYTE PTR [rdi],cl
  41634b:	add    eax,DWORD PTR [rax]
  41634d:	add    BYTE PTR [rax],al
  41634f:	out    0x20,al
  416351:	add    BYTE PTR [rax],al
  416353:	add    al,BYTE PTR [rax]
  416355:	add    BYTE PTR [rcx],al
  416357:	add    BYTE PTR [rax+rax*1],al
  41635a:	xor    BYTE PTR [rax],dh
  41635c:	adc    BYTE PTR [rax],al
  41635e:	add    BYTE PTR [rax],al
  416360:	add    al,0x0
  416362:	push   0x46000006
  416367:	add    BYTE PTR [rax],al
  416369:	add    BYTE PTR [rax],ah
  41636b:	and    BYTE PTR [rax],dl
  41636d:	add    BYTE PTR [rax],al
  41636f:	add    BYTE PTR [rax+rax*1],al
  416372:	call   0xffffffffae416379
  416377:	(bad)  
  416378:	add    BYTE PTR [rax],al
  41637a:	xor    BYTE PTR [rax],dh
  41637c:	add    BYTE PTR [rax],al
  41637e:	add    BYTE PTR [rax],al
  416380:	or     BYTE PTR [rax],al
  416382:	test   al,0xe
  416384:	add    BYTE PTR [rax],al
  416386:	xchg   esi,eax
  416387:	or     DWORD PTR [rax],eax
  416389:	add    BYTE PTR [rax],ah
  41638b:	and    BYTE PTR [rax],al
  41638d:	add    BYTE PTR [rax],al
  41638f:	add    BYTE PTR [rax],cl
  416391:	add    BYTE PTR [rax+0x3e000008],ch
  416397:	sbb    BYTE PTR [rax],al
  416399:	add    BYTE PTR [rax],ch
  41639b:	add    BYTE PTR [rax],al
  41639d:	add    BYTE PTR [rax],dh
  41639f:	add    BYTE PTR [rax],al
  4163a1:	add    BYTE PTR [rax+0x0],ah
  4163a4:	add    BYTE PTR [rax],al
  4163a6:	add    DWORD PTR [rax],eax
  4163a8:	add    al,0x0
	...
  4163ca:	add    BYTE PTR [rax-0x80000000],al
  4163d0:	add    BYTE PTR [rax],0x80
  4163d3:	add    BYTE PTR [rax],al
  4163d5:	add    BYTE PTR [rax-0x7fff8000],al
  4163db:	add    BYTE PTR [rax],0x0
  4163de:	add    BYTE PTR [rax-0x3f3fff80],0xc0
  4163e5:	add    BYTE PTR [rax],al
  4163e7:	add    bh,bh
  4163e9:	add    BYTE PTR [rax],al
  4163eb:	add    BYTE PTR [rax],al
  4163ed:	add    BYTE PTR [rax],al
  4163ef:	(bad)  
  4163f0:	inc    DWORD PTR [rax]
  4163f2:	inc    DWORD PTR [rax]
  4163f4:	add    BYTE PTR [rax],al
  4163f6:	inc    DWORD PTR [rax]
  4163f8:	inc    DWORD PTR [rax]
  4163fa:	(bad)  
  4163fb:	inc    DWORD PTR [rax]
  4163fd:	add    bh,bh
  4163ff:	(bad)  
  416400:	inc    DWORD PTR [rax]
  416402:	adc    DWORD PTR [rcx],edx
  416404:	adc    DWORD PTR [rcx],edx
  416406:	adc    DWORD PTR [rcx],edx
  416408:	adc    DWORD PTR [rcx],edx
  41640a:	adc    DWORD PTR [rcx],edx
  41640c:	adc    DWORD PTR [rcx],edx
  41640e:	adc    DWORD PTR [rcx],edx
  416410:	adc    DWORD PTR [rcx],edx
  416412:	adc    DWORD PTR [rcx],edx
  416414:	adc    DWORD PTR [rcx],edx
  416416:	adc    DWORD PTR [rcx],edx
  416418:	adc    DWORD PTR [rcx],edx
  41641a:	adc    DWORD PTR [rcx],edx
  41641c:	adc    DWORD PTR [rcx],edx
  41641e:	adc    DWORD PTR [rcx],edx
  416420:	adc    DWORD PTR [rcx],edx
  416422:	adc    DWORD PTR [rcx],edx
  416424:	adc    DWORD PTR [rcx],edx
  416426:	adc    DWORD PTR [rcx],edx
  416428:	adc    DWORD PTR [rcx],edx
  41642a:	adc    DWORD PTR [rcx],edx
  41642c:	adc    DWORD PTR [rcx],edx
  41642e:	adc    DWORD PTR [rcx],edx
  416430:	adc    DWORD PTR [rcx],edx
  416432:	adc    DWORD PTR [rcx],edx
  416434:	adc    DWORD PTR [rcx],edx
  416436:	adc    DWORD PTR [rcx],edx
  416438:	adc    DWORD PTR [rcx],edx
  41643a:	adc    DWORD PTR [rax],eax
  41643c:	add    BYTE PTR [rax],al
  41643e:	add    BYTE PTR [rcx],al
  416440:	adc    DWORD PTR [rcx],edx
  416442:	adc    DWORD PTR [rcx],edx
  416444:	adc    DWORD PTR [rcx],edx
  416446:	adc    DWORD PTR [rcx],edx
  416448:	adc    DWORD PTR [rcx],edx
  41644a:	adc    DWORD PTR [rcx],edx
  41644c:	adc    DWORD PTR [rcx],edx
  41644e:	adc    DWORD PTR [rcx],edx
  416450:	adc    DWORD PTR [rax],eax
  416452:	add    BYTE PTR [rax-0x7f777778],cl
  416458:	add    BYTE PTR [rcx],al
  41645a:	adc    DWORD PTR [rcx],edx
  41645c:	adc    DWORD PTR [rcx],edx
  41645e:	adc    DWORD PTR [rcx],edx
  416460:	adc    DWORD PTR [rcx],edx
  416462:	adc    DWORD PTR [rcx],edx
  416464:	adc    DWORD PTR [rcx],edx
  416466:	adc    DWORD PTR [rcx],edx
  416468:	add    BYTE PTR [rax-0x71],cl
  41646e:	(bad)  
  41646f:	(bad)  
  416470:	clc    
  416471:	add    BYTE PTR [rcx],0x11
  416474:	adc    DWORD PTR [rcx],edx
  416476:	adc    DWORD PTR [rcx],edx
  416478:	adc    DWORD PTR [rcx],edx
  41647a:	adc    DWORD PTR [rcx],edx
  41647c:	adc    DWORD PTR [rcx],edx
  41647e:	adc    DWORD PTR [rax],eax
  416480:	mov    bh,bh
  416482:	(bad)  
  416483:	(bad)  
  416484:	(bad)  
  416485:	(bad)  
  416486:	(bad)  
  416487:	(bad)  
  416488:	(bad)  
  416489:	clc    
  41648a:	add    BYTE PTR [rcx],0x11
  41648d:	adc    DWORD PTR [rcx],edx
  41648f:	adc    DWORD PTR [rcx],edx
  416491:	adc    DWORD PTR [rcx],edx
  416493:	adc    DWORD PTR [rcx],edx
  416495:	adc    DWORD PTR [rdi],edx
  416497:	mov    bh,bh
  416499:	(bad)  
  41649a:	(bad)  
  41649b:	(bad)  
  41649c:	(bad)  
  41649d:	(bad)  
  41649e:	(bad)  
  41649f:	(bad)  
  4164a0:	(bad)  
  4164a1:	(bad)  
  4164a2:	clc    
  4164a3:	adc    BYTE PTR [rcx],0x11
  4164a6:	adc    DWORD PTR [rcx],edx
  4164a8:	adc    DWORD PTR [rcx],edx
  4164aa:	adc    DWORD PTR [rcx],edx
  4164ac:	adc    DWORD PTR [rcx],edx
  4164ae:	js     0x4164af
  4164b0:	(bad)  
  4164b1:	(bad)  
  4164b2:	clc    
  4164b3:	rex.R
  4164b4:	rex.R
  4164b5:	rex.R
  4164b6:	rex.R
  4164b7:	rex.W (bad) 
  4164b9:	(bad)  
  4164ba:	(bad)  
  4164bb:	clc    
  4164bc:	add    DWORD PTR [rcx],edx
  4164be:	adc    DWORD PTR [rcx],edx
  4164c0:	adc    DWORD PTR [rcx],edx
  4164c2:	adc    DWORD PTR [rcx],edx
  4164c4:	adc    DWORD PTR [rdi],edx
  4164c6:	(bad)  
  4164c7:	(bad)  
  4164c8:	inc    DWORD PTR [rsp+rax*2+0x4c4c4c4c]
  4164cf:	rex.R
  4164d0:	rex.R (bad) 
  4164d2:	(bad)  
  4164d3:	inc    DWORD PTR [rax+0x11111111]
  4164d9:	adc    DWORD PTR [rcx],edx
  4164db:	adc    DWORD PTR [rcx],edx
  4164dd:	js     0x4164de
  4164df:	(bad)  
  4164e0:	clc    
  4164e1:	rex.R (bad) 
  4164e3:	(bad)  
  4164e4:	rex.R
  4164e5:	rex.R (bad) 
  4164e7:	(bad)  
  4164e8:	(bad)  
  4164e9:	rex.W (bad) 
  4164eb:	(bad)  
  4164ec:	clc    
  4164ed:	add    DWORD PTR [rcx],edx
  4164ef:	adc    DWORD PTR [rcx],edx
  4164f1:	adc    DWORD PTR [rcx],edx
  4164f3:	adc    DWORD PTR [rdi],edx
  4164f5:	(bad)  
  4164f6:	(bad)  
  4164f7:	clc    
  4164f8:	rex.R
  4164f9:	rex.WR
  4164fa:	rex.WR
  4164fb:	rex.R (bad) 
  4164fd:	dec    DWORD PTR [rsp+rcx*2+0x4c]
  416501:	rex.R
  416502:	rex.WRXB (bad) 
  416504:	inc    DWORD PTR [rax+0x11111111]
  41650a:	adc    DWORD PTR [rcx],edx
  41650c:	js     0x41650d
  41650e:	inc    DWORD PTR [rsp+rax*8-0x803b3c]
  416515:	push   rsp
  416517:	(bad)  
  416518:	(bad)  
  416519:	(bad)  
  41651a:	(bad)  
  41651b:	(bad)  
  41651c:	(bad)  
  41651d:	clc    
  41651e:	add    DWORD PTR [rcx],edx
  416520:	adc    DWORD PTR [rcx],edx
  416522:	adc    DWORD PTR [rdi],edx
  416524:	(bad)  
  416525:	(bad)  
  416526:	clc    
  416527:	rex.WR
  416528:	rex.WR
  416529:	rex.WR
  41652a:	rex.WR jg 0x41652c
  41652d:	push   rdi
  41652f:	rex.WR
  416530:	rex.WR
  416531:	rex.WR
  416532:	rex.WR
  416533:	rex.W (bad) 
  416535:	inc    DWORD PTR [rax+0x11111111]
  41653b:	(bad)  
  41653c:	(bad)  
  41653d:	inc    DWORD PTR [rsp+rax*8+0x7fc4c4c4]
  416544:	(bad)  
  416545:	push   rdi
  416547:	(bad)  
  416548:	(bad)  
  416549:	(bad)  
  41654a:	(bad)  
  41654b:	(bad)  
  41654c:	(bad)  
  41654d:	push   rax
  41654f:	adc    DWORD PTR [rcx],edx
  416551:	adc    DWORD PTR [rcx],edx
  416553:	js     0x416554
  416555:	clc    
  416556:	rex.WR
  416557:	rex.WR
  416558:	rex.WR
  416559:	rex.WR
  41655a:	rex.WR
  41655b:	rex.RXB (bad) 
  41655d:	(bad)  
  41655e:	jl     0x4165ac
  416560:	rex.WR
  416561:	rex.WR
  416562:	rex.WR
  416563:	rex.WR
  416564:	rex.WRXB (bad) 
  416566:	clc    
  416567:	add    DWORD PTR [rcx],edx
  416569:	adc    DWORD PTR [rcx],edx
  41656b:	jg     0x41656c
  41656d:	mov    BYTE PTR [rsp+rax*8-0x3c],al
  416571:	(bad)  
  416572:	(bad)  
  416573:	(bad)  
  416574:	ja     0x4165ed
  416576:	(bad)  
  416577:	(bad)  
  416578:	(bad)  
  416579:	(bad)  
  41657a:	(bad)  
  41657b:	(bad)  
  41657c:	rex.W (bad) 
  41657e:	inc    DWORD PTR [rcx]
  416580:	adc    DWORD PTR [rcx],edx
  416582:	(bad)  
  416583:	(bad)  
  416584:	inc    DWORD PTR [rsp+rcx*2-0x33b3b3b4]
  41658b:	rex.WR
  41658c:	rex.WR
  41658d:	rex.WR
  41658e:	rex.WR
  41658f:	rex.WR
  416590:	rex.WR
  416591:	rex.WR
  416592:	rex.WR
  416593:	rex.WR
  416594:	rex.R (bad) 
  416596:	inc    DWORD PTR [rax-0x70e8eeef]
  41659c:	clc    
  41659d:	rex.R (bad) 
  41659f:	int3   
  4165a0:	int3   
  4165a1:	int3   
  4165a2:	rex.WR mov QWORD PTR [rsp+rax*2+0x4c],0xffffffffc4c4cccc
  4165ab:	(bad)  
  4165ac:	(bad)  
  4165ad:	rex.WRXB inc QWORD PTR [r8-0xe8eeef]
  4165b4:	clc    
  4165b5:	rex.WR
  4165b6:	rex.WR int3 
  4165b8:	rex.WR
  4165b9:	rex.WR int3 
  4165bb:	(bad)  
  4165bc:	(bad)  
  4165bd:	dec    DWORD PTR [rsp+rax*8-0x3c]
  4165c1:	int3   
  4165c2:	rex.WR
  4165c3:	rex.WR
  4165c4:	rex.WR
  4165c5:	rex.WRXB push r8
  4165c8:	adc    DWORD PTR [rcx],edx
  4165ca:	(bad)  
  4165cb:	dec    DWORD PTR [rax-0x33b333b4]
  4165d1:	(bad)  
  4165d2:	(bad)  
  4165d3:	(bad)  
  4165d4:	(bad)  
  4165d5:	dec    DWORD PTR [rsp+rcx*2-0x34]
  4165d9:	rex.WR (bad) 
  4165db:	(bad)  
  4165dc:	(bad)  
  4165dd:	rex.W push rax
  4165e0:	adc    DWORD PTR [rcx],edx
  4165e2:	js     0x4165e3
  4165e4:	test   ah,al
  4165e6:	int3   
  4165e7:	int3   
  4165e8:	rex.WR int3 
  4165ea:	rex.WR (bad) 
  4165ec:	(bad)  
  4165ed:	push   rsp
  4165ef:	int3   
  4165f0:	int3   
  4165f1:	int3   
  4165f2:	rex.WR int3 
  4165f4:	int3   
  4165f5:	(bad)  
  4165f6:	(bad)  
  4165f7:	clc    
  4165f8:	add    DWORD PTR [rcx],edx
  4165fa:	js     0x4165fb
  4165fc:	test   BYTE PTR [rsp+rax*8-0x34],cl
  416600:	int3   
  416601:	int3   
  416602:	int3   
  416603:	rex.RXB (bad) 
  416605:	push   rsp
  416607:	int3   
  416608:	rex.WR (bad) 
  41660a:	int3   
  41660b:	rex.WR
  41660c:	rex.WR
  41660d:	rex.R (bad) 
  41660f:	clc    
  416610:	add    DWORD PTR [rcx],edx
  416612:	jg     0x416613
  416614:	test   ah,al
  416616:	int3   
  416617:	int3   
  416618:	rex.WR
  416619:	rex.WR int3 
  41661b:	int3   
  41661c:	jg     0x41661d
  41661e:	dec    DWORD PTR [rsp+rcx*8-0x34]
  416622:	int3   
  416623:	int3   
  416624:	int3   
  416625:	(bad)  
  416626:	(bad)  
  416627:	inc    DWORD PTR [rcx]
  416629:	adc    DWORD PTR [rdi-0x1],edi
  41662c:	test   ah,cl
  41662e:	int3   
  41662f:	rex.WR int3 
  416631:	int3   
  416632:	int3   
  416633:	int3   
  416634:	jg     0x416635
  416636:	push   rsp
  416638:	int3   
  416639:	int3   
  41663a:	int3   
  41663b:	(bad)  
  41663c:	(bad)  
  41663d:	(bad)  
  41663e:	(bad)  
  41663f:	inc    DWORD PTR [rcx]
  416641:	adc    DWORD PTR [rdi-0x1],edi
  416644:	test   ah,cl
  416646:	int3   
  416647:	int3   
  416648:	int3   
  416649:	int3   
  41664a:	int3   
  41664b:	int3   
  41664c:	(bad)  
  41664d:	(bad)  
  41664e:	(bad)  
  41664f:	dec    DWORD PTR [rsp+rcx*8-0x34]
  416653:	int3   
  416654:	int3   
  416655:	(bad)  
  416656:	(bad)  
  416657:	inc    DWORD PTR [rcx]
  416659:	adc    DWORD PTR [rdi-0x1],edi
  41665c:	test   ah,cl
  41665e:	int3   
  41665f:	int3   
  416660:	int3   
  416661:	int3   
  416662:	int3   
  416663:	int3   
  416664:	int3   
  416665:	jg     0x416666
  416667:	push   rsp
  416669:	int3   
  41666a:	int3   
  41666b:	int3   
  41666c:	int3   
  41666d:	(bad)  
  41666e:	(bad)  
  41666f:	inc    DWORD PTR [rcx]
  416671:	adc    DWORD PTR [rdi-0x1],edi
  416674:	test   ah,cl
  416676:	int3   
  416677:	int3   
  416678:	int3   
  416679:	int3   
  41667a:	int3   
  41667b:	int3   
  41667c:	int3   
  41667d:	(bad)  
  41667e:	(bad)  
  41667f:	(bad)  
  416680:	dec    DWORD PTR [rsp+rcx*8-0x34]
  416684:	int3   
  416685:	(bad)  
  416686:	(bad)  
  416687:	inc    DWORD PTR [rcx]
  416689:	adc    DWORD PTR [rax-0x1],edi
  41668c:	test   ah,cl
  41668e:	int3   
  41668f:	int3   
  416690:	int3   
  416691:	int3   
  416692:	int3   
  416693:	int3   
  416694:	int3   
  416695:	int3   
  416696:	jg     0x416697
  416698:	dec    DWORD PTR [rsp+rcx*8-0x34]
  41669c:	int3   
  41669d:	(bad)  
  41669e:	(bad)  
  41669f:	clc    
  4166a0:	add    DWORD PTR [rcx],edx
  4166a2:	js     0x4166a3
  4166a4:	test   ah,cl
  4166a6:	int3   
  4166a7:	int3   
  4166a8:	int3   
  4166a9:	int3   
  4166aa:	int3   
  4166ab:	int3   
  4166ac:	int3   
  4166ad:	int3   
  4166ae:	(bad)  
  4166af:	(bad)  
  4166b0:	push   rsp
  4166b2:	int3   
  4166b3:	int3   
  4166b4:	int3   
  4166b5:	(bad)  
  4166b6:	(bad)  
  4166b7:	clc    
  4166b8:	add    DWORD PTR [rcx],edx
  4166ba:	(bad)  
  4166bb:	dec    DWORD PTR [rax-0x333333b4]
  4166c1:	int3   
  4166c2:	int3   
  4166c3:	int3   
  4166c4:	int3   
  4166c5:	int3   
  4166c6:	(bad)  
  4166c7:	(bad)  
  4166c8:	push   rsp
  4166ca:	int3   
  4166cb:	int3   
  4166cc:	int3   
  4166cd:	rex.W push rax
  4166d0:	adc    DWORD PTR [rcx],edx
  4166d2:	(bad)  
  4166d3:	(bad)  
  4166d4:	clc    
  4166d5:	rex.WR int3 
  4166d7:	int3   
  4166d8:	(bad)  
  4166d9:	ja     0x416752
  4166db:	jl     0x4166a9
  4166dd:	int3   
  4166de:	(bad)  
  4166df:	(bad)  
  4166e0:	push   rdi
  4166e2:	int3   
  4166e3:	int3   
  4166e4:	int3   
  4166e5:	rex.W push rax
  4166e8:	adc    DWORD PTR [rcx],edx
  4166ea:	(bad)  
  4166eb:	(bad)  
  4166ec:	clc    
  4166ed:	rex.WR int3 
  4166ef:	int3   
  4166f0:	(bad)  
  4166f1:	(bad)  
  4166f2:	push   rdi
  4166f4:	int3   
  4166f5:	int3   
  4166f6:	(bad)  
  4166f7:	(bad)  
  4166f8:	push   rdi
  4166fa:	int3   
  4166fb:	int3   
  4166fc:	int3   
  4166fd:	inc    QWORD PTR [rax-0x70e8eeef]
  416704:	clc    
  416705:	test   ah,cl
  416707:	int3   
  416708:	(bad)  
  416709:	(bad)  
  41670a:	(bad)  
  41670b:	clc    
  41670c:	int3   
  41670d:	int3   
  41670e:	(bad)  
  41670f:	(bad)  
  416710:	push   rdi
  416712:	int3   
  416713:	int3   
  416714:	(bad)  
  416715:	(bad)  
  416716:	inc    DWORD PTR [rax+0x7f111111]
  41671c:	dec    DWORD PTR [rax-0x3833b4]
  416722:	(bad)  
  416723:	push   QWORD PTR [rdi+0x77]
  416726:	jg     0x416727
  416728:	push   rdi
  41672a:	int3   
  41672b:	int3   
  41672c:	rex.W (bad) 
  41672e:	inc    DWORD PTR [rcx]
  416730:	adc    DWORD PTR [rcx],edx
  416732:	adc    DWORD PTR [rdi-0x1],edi
  416735:	mov    BYTE PTR [rsp+rcx*8-0x39],cl
  416739:	jg     0x41673a
  41673b:	(bad)  
  41673c:	(bad)  
  41673d:	(bad)  
  41673e:	(bad)  
  41673f:	(bad)  
  416740:	push   rsp
  416742:	int3   
  416743:	int3   
  416744:	rex.W (bad) 
  416746:	clc    
  416747:	add    DWORD PTR [rcx],edx
  416749:	adc    DWORD PTR [rcx],edx
  41674b:	(bad)  
  41674c:	(bad)  
  41674d:	clc    
  41674e:	test   ah,cl
  416750:	int3   
  416751:	jg     0x416752
  416753:	(bad)  
  416754:	(bad)  
  416755:	(bad)  
  416756:	(bad)  
  416757:	(bad)  
  416758:	dec    DWORD PTR [rsp+rcx*8-0x3c]
  41675c:	mov    bh,bh
  41675e:	lock adc DWORD PTR [rcx],edx
  416761:	adc    DWORD PTR [rcx],edx
  416763:	(bad)  
  416764:	(bad)  
  416765:	dec    DWORD PTR [rax+0x7fc7cc4c]
  41676b:	(bad)  
  41676c:	(bad)  
  41676d:	(bad)  
  41676e:	(bad)  
  41676f:	push   rsp
  416771:	int3   
  416772:	int3   
  416773:	rex.W (bad) 
  416775:	inc    DWORD PTR [rax+0x11111111]
  41677b:	adc    DWORD PTR [rdi-0x1],edi
  41677e:	clc    
  41677f:	test   ah,cl
  416781:	int3   
  416782:	(bad)  
  416783:	(bad)  
  416784:	(bad)  
  416785:	(bad)  
  416786:	push   rsp
  416788:	rex.WR int3 
  41678a:	(bad)  
  41678b:	mov    bh,bh
  41678d:	clc    
  41678e:	add    DWORD PTR [rcx],edx
  416790:	adc    DWORD PTR [rcx],edx
  416792:	adc    DWORD PTR [rcx],edx
  416794:	(bad)  
  416795:	(bad)  
  416796:	dec    DWORD PTR [rax-0x383333bc]
  41679c:	ja     0x416815
  41679e:	ja     0x41681c
  4167a0:	int3   
  4167a1:	int3   
  4167a2:	rex.W (bad) 
  4167a4:	inc    DWORD PTR [rdi+0x11111111]
  4167aa:	adc    DWORD PTR [rcx],edx
  4167ac:	adc    DWORD PTR [rdi-0x1],edi
  4167af:	dec    DWORD PTR [rax-0x333333b4]
  4167b5:	int3   
  4167b6:	int3   
  4167b7:	int3   
  4167b8:	int3   
  4167b9:	rex.R (bad) 
  4167bb:	(bad)  
  4167bc:	clc    
  4167bd:	jno    0x4167d0
  4167bf:	adc    DWORD PTR [rcx],edx
  4167c1:	adc    DWORD PTR [rcx],edx
  4167c3:	adc    DWORD PTR [rcx],edx
  4167c5:	(bad)  
  4167c6:	(bad)  
  4167c7:	(bad)  
  4167c8:	inc    DWORD PTR [rsp+rax*2-0x33333334]
  4167cf:	(bad)  
  4167d0:	mov    dil,r15b
  4167d3:	inc    DWORD PTR [rdi+0x11111111]
  4167d9:	adc    DWORD PTR [rcx],edx
  4167db:	adc    DWORD PTR [rcx],edx
  4167dd:	adc    DWORD PTR [rdi-0x1],edi
  4167e0:	(bad)  
  4167e1:	clc    
  4167e2:	mov    BYTE PTR [rsp+rax*2+0x44],al
  4167e6:	rex.R
  4167e7:	rex.W (bad) 
  4167e9:	(bad)  
  4167ea:	(bad)  
  4167eb:	push   QWORD PTR [rcx+0x11]
  4167ee:	adc    DWORD PTR [rcx],edx
  4167f0:	adc    DWORD PTR [rcx],edx
  4167f2:	adc    DWORD PTR [rcx],edx
  4167f4:	adc    DWORD PTR [rcx],edx
  4167f6:	(bad)  
  4167f7:	(bad)  
  4167f8:	(bad)  
  4167f9:	(bad)  
  4167fa:	(bad)  
  4167fb:	(bad)  
  4167fc:	(bad)  
  4167fd:	(bad)  
  4167fe:	(bad)  
  4167ff:	(bad)  
  416800:	(bad)  
  416801:	(bad)  
  416802:	inc    DWORD PTR [rdi+0x11111111]
  416808:	adc    DWORD PTR [rcx],edx
  41680a:	adc    DWORD PTR [rcx],edx
  41680c:	adc    DWORD PTR [rcx],edx
  41680e:	adc    DWORD PTR [rdi-0x71],esi
  416811:	(bad)  
  416812:	(bad)  
  416813:	(bad)  
  416814:	(bad)  
  416815:	(bad)  
  416816:	(bad)  
  416817:	(bad)  
  416818:	(bad)  
  416819:	inc    DWORD PTR [rdi+0x11111171]
  41681f:	adc    DWORD PTR [rcx],edx
  416821:	adc    DWORD PTR [rcx],edx
  416823:	adc    DWORD PTR [rcx],edx
  416825:	adc    DWORD PTR [rcx],edx
  416827:	adc    DWORD PTR [rdi-0x78],esi
  41682a:	(bad)  
  41682b:	(bad)  
  41682c:	(bad)  
  41682d:	(bad)  
  41682e:	(bad)  
  41682f:	(bad)  
  416830:	clc    
  416831:	xchg   DWORD PTR [rcx+0x11],esi
  416834:	adc    DWORD PTR [rcx],edx
  416836:	adc    DWORD PTR [rcx],edx
  416838:	adc    DWORD PTR [rcx],edx
  41683a:	adc    DWORD PTR [rcx],edx
  41683c:	adc    DWORD PTR [rcx],edx
  41683e:	adc    DWORD PTR [rcx],edx
  416840:	adc    DWORD PTR [rdi+0x77],esi
  416843:	mov    BYTE PTR [rax+0x77878888],cl
  416849:	jno    0x41685c
  41684b:	adc    DWORD PTR [rcx],edx
  41684d:	adc    DWORD PTR [rcx],edx
  41684f:	adc    DWORD PTR [rcx],edx
  416851:	adc    DWORD PTR [rcx],edx
  416853:	adc    DWORD PTR [rcx],edx
  416855:	adc    DWORD PTR [rcx],edx
  416857:	adc    DWORD PTR [rcx],edx
  416859:	adc    DWORD PTR [rcx],edx
  41685b:	ja     0x4168d4
  41685d:	ja     0x4168d6
  41685f:	jno    0x416872
  416861:	adc    DWORD PTR [rcx],edx
  416863:	adc    DWORD PTR [rcx],edx
  416865:	adc    DWORD PTR [rcx],edx
  416867:	adc    DWORD PTR [rcx],edx
  416869:	adc    DWORD PTR [rcx],edx
  41686b:	adc    DWORD PTR [rcx],edx
  41686d:	adc    DWORD PTR [rcx],edx
  41686f:	adc    DWORD PTR [rcx],edx
  416871:	adc    DWORD PTR [rcx],edx
  416873:	adc    DWORD PTR [rcx],edx
  416875:	adc    DWORD PTR [rcx],edx
  416877:	adc    DWORD PTR [rcx],edx
  416879:	adc    DWORD PTR [rcx],edx
  41687b:	adc    DWORD PTR [rcx],edx
  41687d:	adc    DWORD PTR [rcx],edx
  41687f:	adc    DWORD PTR [rcx],edx
  416881:	adc    edi,edi
  416883:	(bad)  
  416884:	(bad)  
  416885:	(bad)  
  416886:	(bad)  
  416887:	inc    DWORD PTR [rax]
  416889:	add    bh,bh
  41688b:	(bad)  
  41688c:	(bad)  
  41688d:	(bad)  
  41688e:	(bad)  
  41688f:	inc    DWORD PTR [rax]
  416891:	add    bh,bh
  416893:	inc    eax
  416895:	(bad)  
  416896:	(bad)  
  416897:	inc    DWORD PTR [rax]
  416899:	add    bh,bh
  41689b:	cld    
  41689c:	add    BYTE PTR [rcx],al
  41689e:	(bad)  
  41689f:	inc    DWORD PTR [rax]
  4168a1:	add    bh,bh
  4168a3:	lock add BYTE PTR [rax],al
  4168a6:	jg     0x4168a7
  4168a8:	add    BYTE PTR [rax],al
  4168aa:	inc    eax
  4168ac:	add    BYTE PTR [rax],al
  4168ae:	(bad)  
  4168af:	inc    DWORD PTR [rax]
  4168b1:	add    bh,bh
  4168b3:	add    BYTE PTR [rax],0x0
  4168b6:	ud0    eax,DWORD PTR [rax]
  4168b9:	add    bh,bh
  4168bb:	add    BYTE PTR [rax],al
  4168bd:	add    BYTE PTR [rdi],al
  4168bf:	inc    DWORD PTR [rax]
  4168c1:	add    dh,bh
  4168c3:	add    BYTE PTR [rax],al
  4168c5:	add    BYTE PTR [rbx],al
  4168c7:	inc    DWORD PTR [rax]
  4168c9:	add    ah,bh
  4168cb:	add    BYTE PTR [rax],al
  4168cd:	add    BYTE PTR [rcx],al
  4168cf:	inc    DWORD PTR [rax]
  4168d1:	add    al,bh
  4168d3:	add    BYTE PTR [rax],al
  4168d5:	add    BYTE PTR [rax],al
  4168d7:	inc    DWORD PTR [rax]
  4168d9:	add    al,dh
  4168db:	add    BYTE PTR [rax],al
  4168dd:	add    BYTE PTR [rax],al
  4168df:	jg     0x4168e1
  4168e1:	add    al,ah
  4168e3:	add    BYTE PTR [rax],al
  4168e5:	add    BYTE PTR [rax],al
  4168e7:	(bad)  
  4168e8:	add    BYTE PTR [rax],al
  4168ea:	loopne 0x4168ec
  4168ec:	add    BYTE PTR [rax],al
  4168ee:	add    BYTE PTR [rdi],bh
  4168f0:	add    BYTE PTR [rax],al
  4168f2:	rol    BYTE PTR [rax],0x0
  4168f5:	add    BYTE PTR [rax],al
  4168f7:	(bad)  
  4168f8:	add    BYTE PTR [rax],al
  4168fa:	rol    BYTE PTR [rax],0x0
  4168fd:	add    BYTE PTR [rax],al
  4168ff:	(bad)  
  416900:	add    BYTE PTR [rax],al
  416902:	add    BYTE PTR [rax],0x0
  416905:	add    BYTE PTR [rax],al
  416907:	sldt   WORD PTR [rax]
  41690a:	add    BYTE PTR [rax],0x0
  41690d:	add    BYTE PTR [rax],al
  41690f:	sldt   WORD PTR [rax]
  416912:	add    BYTE PTR [rax],0x0
  416915:	add    BYTE PTR [rax],al
  416917:	sldt   WORD PTR [rax]
  41691a:	add    BYTE PTR [rax],0x0
  41691d:	add    BYTE PTR [rax],al
  41691f:	sldt   WORD PTR [rax]
  416922:	add    BYTE PTR [rax],al
  416924:	add    BYTE PTR [rax],al
  416926:	add    BYTE PTR [rdi],al
  416928:	add    BYTE PTR [rax],al
  41692a:	add    BYTE PTR [rax],al
  41692c:	add    BYTE PTR [rax],al
  41692e:	add    BYTE PTR [rdi],al
  416930:	add    BYTE PTR [rax],al
  416932:	add    BYTE PTR [rax],al
  416934:	add    BYTE PTR [rax],al
  416936:	add    BYTE PTR [rdi],al
  416938:	add    BYTE PTR [rax],al
  41693a:	add    BYTE PTR [rax],al
  41693c:	add    BYTE PTR [rax],al
  41693e:	add    BYTE PTR [rdi],al
  416940:	add    BYTE PTR [rax],al
  416942:	add    BYTE PTR [rax],al
  416944:	add    BYTE PTR [rax],al
  416946:	add    BYTE PTR [rdi],al
  416948:	add    BYTE PTR [rax],al
  41694a:	add    BYTE PTR [rax],al
  41694c:	add    BYTE PTR [rax],al
  41694e:	add    BYTE PTR [rdi],al
  416950:	add    BYTE PTR [rax],al
  416952:	add    BYTE PTR [rax],al
  416954:	add    BYTE PTR [rax],al
  416956:	add    BYTE PTR [rdi],al
  416958:	add    BYTE PTR [rax],al
  41695a:	add    BYTE PTR [rax],al
  41695c:	add    BYTE PTR [rax],al
  41695e:	add    BYTE PTR [rdi],al
  416960:	add    BYTE PTR [rax],al
  416962:	add    BYTE PTR [rax],al
  416964:	add    BYTE PTR [rax],al
  416966:	add    BYTE PTR [rdi],al
  416968:	add    BYTE PTR [rax],al
  41696a:	add    BYTE PTR [rax],0x0
  41696d:	add    BYTE PTR [rax],al
  41696f:	sldt   WORD PTR [rax]
  416972:	add    BYTE PTR [rax],0x0
  416975:	add    BYTE PTR [rax],al
  416977:	sldt   WORD PTR [rax]
  41697a:	add    BYTE PTR [rax],0x0
  41697d:	add    BYTE PTR [rax],al
  41697f:	sldt   WORD PTR [rax]
  416982:	add    BYTE PTR [rax],0x0
  416985:	add    BYTE PTR [rax],al
  416987:	sldt   WORD PTR [rax]
  41698a:	rol    BYTE PTR [rax],0x0
  41698d:	add    BYTE PTR [rax],al
  41698f:	(bad)  
  416990:	add    BYTE PTR [rax],al
  416992:	rol    BYTE PTR [rax],0x0
  416995:	add    BYTE PTR [rax],al
  416997:	(bad)  
  416998:	add    BYTE PTR [rax],al
  41699a:	loopne 0x41699c
  41699c:	add    BYTE PTR [rax],al
  41699e:	add    BYTE PTR [rdi],bh
  4169a0:	add    BYTE PTR [rax],al
  4169a2:	loopne 0x4169a4
  4169a4:	add    BYTE PTR [rax],al
  4169a6:	add    BYTE PTR [rdi],bh
  4169a8:	add    BYTE PTR [rax],al
  4169aa:	lock add BYTE PTR [rax],al
  4169ad:	add    BYTE PTR [rax],al
  4169af:	jg     0x4169b1
  4169b1:	add    al,bh
  4169b3:	add    BYTE PTR [rax],al
  4169b5:	add    BYTE PTR [rax],al
  4169b7:	inc    DWORD PTR [rax]
  4169b9:	add    ah,bh
  4169bb:	add    BYTE PTR [rax],al
  4169bd:	add    BYTE PTR [rcx],al
  4169bf:	inc    DWORD PTR [rax]
  4169c1:	add    dh,bh
  4169c3:	add    BYTE PTR [rax],al
  4169c5:	add    BYTE PTR [rbx],al
  4169c7:	inc    DWORD PTR [rax]
  4169c9:	add    bh,bh
  4169cb:	add    BYTE PTR [rax],al
  4169cd:	add    BYTE PTR [rdi],al
  4169cf:	inc    DWORD PTR [rax]
  4169d1:	add    bh,bh
  4169d3:	add    BYTE PTR [rax],0x0
  4169d6:	ud0    eax,DWORD PTR [rax]
  4169d9:	add    bh,bh
  4169db:	rol    BYTE PTR [rax],0x0
  4169de:	(bad)  
  4169df:	inc    DWORD PTR [rax]
  4169e1:	add    bh,bh
  4169e3:	lock add BYTE PTR [rax],al
  4169e6:	jg     0x4169e7
  4169e8:	add    BYTE PTR [rax],al
  4169ea:	(bad)  
  4169eb:	cld    
  4169ec:	add    BYTE PTR [rcx],al
  4169ee:	(bad)  
  4169ef:	inc    DWORD PTR [rax]
  4169f1:	add    bh,bh
  4169f3:	inc    eax
  4169f5:	(bad)  
  4169f6:	(bad)  
  4169f7:	inc    DWORD PTR [rax]
  4169f9:	add    bh,bh
  4169fb:	(bad)  
  4169fc:	(bad)  
  4169fd:	(bad)  
  4169fe:	(bad)  
  4169ff:	inc    DWORD PTR [rax]
  416a01:	add    BYTE PTR [rax],ch
  416a03:	add    BYTE PTR [rax],al
  416a05:	add    BYTE PTR [rax],ah
  416a07:	add    BYTE PTR [rax],al
  416a09:	add    BYTE PTR [rax+0x0],al
  416a0c:	add    BYTE PTR [rax],al
  416a0e:	add    DWORD PTR [rax],eax
  416a10:	add    al,0x0
	...
  416a2e:	add    BYTE PTR [rax],al
  416a30:	add    BYTE PTR [rax],0x0
  416a33:	add    BYTE PTR [rax],0x0
  416a36:	add    BYTE PTR [rax+0x800080],al
  416a3c:	add    BYTE PTR [rax],al
  416a3e:	add    BYTE PTR [rax],0x80
  416a41:	add    BYTE PTR [rax-0x7fffff80],al
  416a47:	add    BYTE PTR [rax-0x3f3f4000],0x0
  416a4e:	add    BYTE PTR [rax],al
  416a50:	inc    DWORD PTR [rax]
  416a52:	add    BYTE PTR [rax],al
  416a54:	add    BYTE PTR [rax],al
  416a56:	add    bh,bh
  416a58:	inc    DWORD PTR [rax]
  416a5a:	inc    DWORD PTR [rax]
  416a5c:	add    BYTE PTR [rax],al
  416a5e:	inc    DWORD PTR [rax]
  416a60:	inc    DWORD PTR [rax]
  416a62:	(bad)  
  416a63:	inc    DWORD PTR [rax]
  416a65:	add    bh,bh
  416a67:	(bad)  
  416a68:	inc    DWORD PTR [rax]
  416a6a:	stos   BYTE PTR es:[rdi],al
  416a6b:	stos   BYTE PTR es:[rdi],al
  416a6c:	stos   BYTE PTR es:[rdi],al
  416a6d:	stos   BYTE PTR es:[rdi],al
  416a6e:	stos   BYTE PTR es:[rdi],al
  416a6f:	stos   BYTE PTR es:[rdi],al
  416a70:	ja     0x416ae9
  416a72:	ja     0x416aee
  416a74:	stos   BYTE PTR es:[rdi],al
  416a75:	stos   BYTE PTR es:[rdi],al
  416a76:	stos   BYTE PTR es:[rdi],al
  416a77:	stos   BYTE PTR es:[rdi],al
  416a78:	stos   BYTE PTR es:[rdi],al
  416a79:	stos   BYTE PTR es:[rdi],al
  416a7a:	stos   BYTE PTR es:[rdi],al
  416a7b:	stos   BYTE PTR es:[rdi],al
  416a7c:	stos   BYTE PTR es:[rdi],al
  416a7d:	stos   BYTE PTR es:[rdi],al
  416a7e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  416a7f:	ja     0x416a09
  416a81:	(bad)  
  416a82:	clc    
  416a83:	xchg   DWORD PTR [rdi-0x56],esi
  416a86:	stos   BYTE PTR es:[rdi],al
  416a87:	stos   BYTE PTR es:[rdi],al
  416a88:	stos   BYTE PTR es:[rdi],al
  416a89:	stos   BYTE PTR es:[rdi],al
  416a8a:	stos   BYTE PTR es:[rdi],al
  416a8b:	stos   BYTE PTR es:[rdi],al
  416a8c:	stos   BYTE PTR es:[rdi],al
  416a8d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  416a8e:	js     0x416a8f
  416a90:	(bad)  
  416a91:	(bad)  
  416a92:	(bad)  
  416a93:	dec    DWORD PTR [rax-0x55555589]
  416a99:	stos   BYTE PTR es:[rdi],al
  416a9a:	stos   BYTE PTR es:[rdi],al
  416a9b:	stos   BYTE PTR es:[rdi],al
  416a9c:	stos   BYTE PTR es:[rdi],al
  416a9d:	js     0x416a9e
  416a9f:	(bad)  
  416aa0:	(bad)  
  416aa1:	(bad)  
  416aa2:	(bad)  
  416aa3:	(bad)  
  416aa4:	dec    DWORD PTR [rax-0x55555586]
  416aaa:	stos   BYTE PTR es:[rdi],al
  416aab:	stos   BYTE PTR es:[rdi],al
  416aac:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  416aad:	(bad)  
  416aae:	dec    DWORD PTR [rax+0x48444444]
  416ab4:	(bad)  
  416ab5:	inc    DWORD PTR [rdi-0x55555556]
  416abb:	stos   BYTE PTR es:[rdi],al
  416abc:	jg     0x416abd
  416abe:	clc    
  416abf:	rex.R (bad) 
  416ac1:	ja     0x416a87
  416ac3:	(bad)  
  416ac4:	rex.W (bad) 
  416ac6:	clc    
  416ac7:	jp     0x416a73
  416ac9:	stos   BYTE PTR es:[rdi],al
  416aca:	stos   BYTE PTR es:[rdi],al
  416acb:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  416acc:	(bad)  
  416acd:	clc    
  416ace:	rex.R
  416acf:	rex.WR js 0x416aca
  416ad2:	jl     0x416b20
  416ad4:	rex.R
  416ad5:	rex.WRXB push QWORD PTR [r15-0x56]
  416ad9:	stos   BYTE PTR es:[rdi],al
  416ada:	stos   BYTE PTR es:[rdi],al
  416adb:	js     0x416adc
  416add:	test   ah,al
  416adf:	(bad)  
  416ae0:	jg     0x416ae1
  416ae2:	je     0x416aa8
  416ae4:	(bad)  
  416ae5:	(bad)  
  416ae6:	push   rdi
  416ae8:	jp     0x416a94
  416aea:	stos   BYTE PTR es:[rdi],al
  416aeb:	jg     0x416ae5
  416aed:	rex.WR
  416aee:	rex.WR
  416aef:	rex.WR js 0x416aea
  416af2:	jl     0x416b40
  416af4:	rex.WR
  416af5:	rex.WR
  416af6:	rex.WRXB clc 
  416af8:	jp     0x416aa4
  416afa:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  416afb:	(bad)  
  416afc:	test   DWORD PTR [rsp+rax*8-0x3c],0xc4c477c7
  416b04:	(bad)  
  416b05:	(bad)  
  416b06:	rex.W push QWORD PTR [rdi-0x56]
  416b0a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  416b0b:	inc    DWORD PTR [rsp+rcx*8+0x4c4c4c4c]
  416b12:	rex.WR int3 
  416b14:	rex.WR
  416b15:	rex.WR
  416b16:	rex.R pop QWORD PTR [rdi+0x74ffa7aa]
  416b1d:	(bad)  
  416b1e:	int3   
  416b1f:	int3   
  416b20:	enter  0x7c88,0x4c
  416b24:	(bad)  
  416b25:	(bad)  
  416b26:	(bad)  
  416b27:	(bad)  
  416b28:	imul   DWORD PTR [rdx-0x33b30788]
  416b2e:	(bad)  
  416b2f:	(bad)  
  416b30:	enter  0x7cff,0xcc
  416b34:	rex.WR int3 
  416b36:	rex.WR
  416b37:	rex.WRXB idiv QWORD PTR [r10+0x7f]
  416b3b:	clc    
  416b3c:	rex.WR int3 
  416b3e:	int3   
  416b3f:	int3   
  416b40:	enter  0x7cff,0xcc
  416b44:	int3   
  416b45:	rex.WR int3 
  416b47:	rex.WRXB clc 
  416b49:	jp     0x416bca
  416b4b:	clc    
  416b4c:	rex.WR int3 
  416b4e:	int3   
  416b4f:	int3   
  416b50:	enter  0xf4ff,0xcc
  416b54:	int3   
  416b55:	int3   
  416b56:	int3   
  416b57:	rex.WRXB clc 
  416b59:	jp     0x416bda
  416b5b:	clc    
  416b5c:	rex.WR int3 
  416b5e:	int3   
  416b5f:	int3   
  416b60:	int3   
  416b61:	jg     0x416b62
  416b63:	rex.WR int3 
  416b65:	int3   
  416b66:	int3   
  416b67:	rex.WRXB clc 
  416b69:	jp     0x416bea
  416b6b:	clc    
  416b6c:	rex.WR int3 
  416b6e:	int3   
  416b6f:	int3   
  416b70:	int3   
  416b71:	(bad)  
  416b72:	push   rsp
  416b74:	int3   
  416b75:	int3   
  416b76:	int3   
  416b77:	rex.WRXB clc 
  416b79:	jp     0x416bfa
  416b7b:	clc    
  416b7c:	rex.WR int3 
  416b7e:	int3   
  416b7f:	int3   
  416b80:	int3   
  416b81:	int3   
  416b82:	jg     0x416b83
  416b84:	rex.WR int3 
  416b86:	int3   
  416b87:	rex.WRXB clc 
  416b89:	jp     0x416c03
  416b8b:	clc    
  416b8c:	rex.WR int3 
  416b8e:	int3   
  416b8f:	int3   
  416b90:	int3   
  416b91:	int3   
  416b92:	jg     0x416b93
  416b94:	jl     0x416b62
  416b96:	int3   
  416b97:	rex.WRXB clc 
  416b99:	jp     0x416b42
  416b9b:	inc    DWORD PTR [rsp+rcx*8-0x33838839]
  416ba2:	js     0x416ba3
  416ba4:	jl     0x416b72
  416ba6:	(bad)  
  416ba7:	(bad)  
  416ba8:	imul   DWORD PTR [rdx-0x337b0059]
  416bae:	(bad)  
  416baf:	dec    DWORD PTR [rsp+rcx*8-0x33830081]
  416bb6:	(bad)  
  416bb7:	pop    QWORD PTR [rdi-0x7705856]
  416bbd:	rex.WR (bad) 
  416bbf:	(bad)  
  416bc0:	clc    
  416bc1:	ja     0x416b52
  416bc3:	dec    DWORD PTR [rsp+rcx*8+0x48]
  416bc7:	inc    DWORD PTR [rdi-0x805556]
  416bcd:	rex.WR int3 
  416bcf:	jg     0x416bd0
  416bd1:	(bad)  
  416bd2:	(bad)  
  416bd3:	clc    
  416bd4:	int3   
  416bd5:	int3   
  416bd6:	rex.WRXB clc 
  416bd8:	jp     0x416b84
  416bda:	stos   BYTE PTR es:[rdi],al
  416bdb:	js     0x416bdc
  416bdd:	test   ah,cl
  416bdf:	(bad)  
  416be0:	(bad)  
  416be1:	(bad)  
  416be2:	push   QWORD PTR [rdi-0x34]
  416be5:	(bad)  
  416be6:	(bad)  
  416be7:	clc    
  416be8:	jp     0x416b94
  416bea:	stos   BYTE PTR es:[rdi],al
  416beb:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  416bec:	(bad)  
  416bed:	inc    DWORD PTR [rsp+rcx*8+0x77]
  416bf1:	ja     0x416c6a
  416bf3:	int3   
  416bf4:	(bad)  
  416bf5:	rex.WRXB inc QWORD PTR [r15-0x55555556]
  416bfc:	jg     0x416bfd
  416bfe:	mov    BYTE PTR [rsp+rcx*8-0x34],al
  416c02:	int3   
  416c03:	(bad)  
  416c04:	rex.W (bad) 
  416c06:	(bad)  
  416c07:	jp     0x416bb3
  416c09:	stos   BYTE PTR es:[rdi],al
  416c0a:	stos   BYTE PTR es:[rdi],al
  416c0b:	stos   BYTE PTR es:[rdi],al
  416c0c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  416c0d:	(bad)  
  416c0e:	dec    DWORD PTR [rax+0x48444444]
  416c14:	(bad)  
  416c15:	inc    DWORD PTR [rdi-0x55555556]
  416c1b:	stos   BYTE PTR es:[rdi],al
  416c1c:	stos   BYTE PTR es:[rdi],al
  416c1d:	js     0x416c1e
  416c1f:	(bad)  
  416c20:	(bad)  
  416c21:	(bad)  
  416c22:	(bad)  
  416c23:	(bad)  
  416c24:	(bad)  
  416c25:	clc    
  416c26:	jp     0x416bd2
  416c28:	stos   BYTE PTR es:[rdi],al
  416c29:	stos   BYTE PTR es:[rdi],al
  416c2a:	stos   BYTE PTR es:[rdi],al
  416c2b:	stos   BYTE PTR es:[rdi],al
  416c2c:	stos   BYTE PTR es:[rdi],al
  416c2d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  416c2e:	js     0x416c2f
  416c30:	(bad)  
  416c31:	(bad)  
  416c32:	(bad)  
  416c33:	(bad)  
  416c34:	clc    
  416c35:	ja     0x416be1
  416c37:	stos   BYTE PTR es:[rdi],al
  416c38:	stos   BYTE PTR es:[rdi],al
  416c39:	stos   BYTE PTR es:[rdi],al
  416c3a:	stos   BYTE PTR es:[rdi],al
  416c3b:	stos   BYTE PTR es:[rdi],al
  416c3c:	stos   BYTE PTR es:[rdi],al
  416c3d:	stos   BYTE PTR es:[rdi],al
  416c3e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  416c3f:	ja     0x416bc9
  416c41:	(bad)  
  416c42:	clc    
  416c43:	xchg   DWORD PTR [rdi-0x56],esi
  416c46:	stos   BYTE PTR es:[rdi],al
  416c47:	stos   BYTE PTR es:[rdi],al
  416c48:	stos   BYTE PTR es:[rdi],al
  416c49:	stos   BYTE PTR es:[rdi],al
  416c4a:	stos   BYTE PTR es:[rdi],al
  416c4b:	stos   BYTE PTR es:[rdi],al
  416c4c:	stos   BYTE PTR es:[rdi],al
  416c4d:	stos   BYTE PTR es:[rdi],al
  416c4e:	stos   BYTE PTR es:[rdi],al
  416c4f:	stos   BYTE PTR es:[rdi],al
  416c50:	ja     0x416cc9
  416c52:	ja     0x416cce
  416c54:	stos   BYTE PTR es:[rdi],al
  416c55:	stos   BYTE PTR es:[rdi],al
  416c56:	stos   BYTE PTR es:[rdi],al
  416c57:	stos   BYTE PTR es:[rdi],al
  416c58:	stos   BYTE PTR es:[rdi],al
  416c59:	stos   BYTE PTR es:[rdi],al
  416c5a:	stos   BYTE PTR es:[rdi],al
  416c5b:	stos   BYTE PTR es:[rdi],al
  416c5c:	stos   BYTE PTR es:[rdi],al
  416c5d:	stos   BYTE PTR es:[rdi],al
  416c5e:	stos   BYTE PTR es:[rdi],al
  416c5f:	stos   BYTE PTR es:[rdi],al
  416c60:	stos   BYTE PTR es:[rdi],al
  416c61:	stos   BYTE PTR es:[rdi],al
  416c62:	stos   BYTE PTR es:[rdi],al
  416c63:	stos   BYTE PTR es:[rdi],al
  416c64:	stos   BYTE PTR es:[rdi],al
  416c65:	stos   BYTE PTR es:[rdi],al
  416c66:	stos   BYTE PTR es:[rdi],al
  416c67:	stos   BYTE PTR es:[rdi],al
  416c68:	stos   BYTE PTR es:[rdi],al
  416c69:	stos   BYTE PTR es:[rdi],al
  416c6a:	push   rax
  416c6c:	(bad)  
  416c6d:	(bad)  
  416c6e:	inc    DWORD PTR [rax+0xfeff03]
  416c74:	add    bh,bh
  416c76:	cld    
  416c77:	add    BYTE PTR [rax],al
  416c79:	jg     0x416c73
  416c7b:	add    BYTE PTR [rax],al
  416c7d:	(bad)  
  416c7e:	lock add BYTE PTR [rax],al
  416c81:	(bad)  
  416c82:	loopne 0x416c84
  416c84:	add    BYTE PTR [rdi],cl
  416c86:	rol    BYTE PTR [rax],0x0
  416c89:	(bad)  
  416c8a:	rol    BYTE PTR [rax],0x0
  416c8d:	(bad)  
  416c8e:	add    BYTE PTR [rax],0x0
  416c91:	add    eax,DWORD PTR [rax-0x7ffd0000]
  416c97:	add    BYTE PTR [rax],al
  416c99:	add    eax,DWORD PTR [rax]
  416c9b:	add    BYTE PTR [rax],al
  416c9d:	add    DWORD PTR [rax],eax
  416c9f:	add    BYTE PTR [rax],al
  416ca1:	add    DWORD PTR [rax],eax
  416ca3:	add    BYTE PTR [rax],al
  416ca5:	add    DWORD PTR [rax],eax
  416ca7:	add    BYTE PTR [rax],al
  416ca9:	add    DWORD PTR [rax],eax
  416cab:	add    BYTE PTR [rax],al
  416cad:	add    DWORD PTR [rax],eax
  416caf:	add    BYTE PTR [rax],al
  416cb1:	add    DWORD PTR [rax],eax
  416cb3:	add    BYTE PTR [rax],al
  416cb5:	add    DWORD PTR [rax-0x7ffd0000],eax
  416cbb:	add    BYTE PTR [rax],al
  416cbd:	add    eax,DWORD PTR [rax-0x3ffd0000]
  416cc3:	add    BYTE PTR [rax],al
  416cc5:	(bad)  
  416cc6:	rol    BYTE PTR [rax],0x0
  416cc9:	(bad)  
  416cca:	loopne 0x416ccc
  416ccc:	add    BYTE PTR [rdi],cl
  416cce:	lock add BYTE PTR [rax],al
  416cd1:	(bad)  
  416cd2:	clc    
  416cd3:	add    BYTE PTR [rax],al
  416cd5:	(bad)  
  416cd6:	cld    
  416cd7:	add    BYTE PTR [rax],al
  416cd9:	jg     0x416cd9
  416cdb:	add    BYTE PTR [rax],al
  416cdd:	(bad)  
  416cde:	inc    DWORD PTR [rax-0xf0000fd]
  416ce4:	(bad)  
  416ce5:	(bad)  
  416ce6:	(bad)  
  416ce7:	(bad)  
  416ce8:	(bad)  
  416ce9:	jmp    FWORD PTR [rax]
  416ceb:	add    BYTE PTR [rax],al
  416ced:	add    BYTE PTR [rax],dh
  416cef:	add    BYTE PTR [rax],al
  416cf1:	add    BYTE PTR [rax+0x0],ah
  416cf4:	add    BYTE PTR [rax],al
  416cf6:	add    DWORD PTR [rax],eax
  416cf8:	or     BYTE PTR [rax],al
	...
  416d1a:	cmc    
  416d1b:	add    ch,dh
  416d1d:	add    dh,ah
  416d1f:	add    dh,ah
  416d21:	add    ah,cl
  416d23:	add    ah,cl
  416d25:	add    BYTE PTR [rbx-0x4dff4500],bh
  416d2b:	add    BYTE PTR [rdx-0x69ff6a00],dh
  416d31:	add    BYTE PTR [rbp+0x0],dh
  416d34:	jne    0x416d36
  416d36:	push   rcx
  416d37:	add    BYTE PTR [rcx+0x0],dl
  416d3a:	(bad)  
  416d3b:	add    BYTE PTR [rdi],dh
  416d3d:	add    BYTE PTR [rdx],bl
  416d3f:	add    BYTE PTR [rdx],bl
  416d41:	add    BYTE PTR [rip+0x7000d00],cl        # 0x7417a47
  416d47:	add    BYTE PTR [rdi],al
  416d49:	add    BYTE PTR [rbx],al
  416d4b:	add    BYTE PTR [rbx],al
  416d4d:	add    ch,ah
  416d4f:	movsxd edx,ecx
  416d51:	add    al,dl
  416d53:	ja     0x416d0d
  416d55:	add    ch,ah
  416d57:	nop
  416d58:	retf   0xd400
  416d5b:	mov    DWORD PTR [rcx-0x2a590c00],edi
  416d61:	add    bl,bl
  416d63:	lahf   
  416d64:	mov    esp,0xd5b7f500
  416d69:	add    bh,ch
  416d6b:	mov    ah,0xce
  416d6d:	add    ch,bl
  416d6f:	test   eax,0xc4f900bd
  416d74:	fld    DWORD PTR [rax]
  416d76:	stc    
  416d77:	enter  0xdb,0xf9
  416d7b:	ret    0xd5
  416d7e:	repz ret 
  416d80:	rol    BYTE PTR [rax],1
  416d82:	jrcxz  0x416d3b
  416d84:	rol    DWORD PTR [rax],0xf9
  416d87:	(bad)  
  416d88:	xlat   BYTE PTR ds:[rbx]
  416d89:	add    ch,ch
  416d8b:	(bad)  
  416d8c:	retf   0xf600
  416d8f:	(bad)  
  416d90:	rol    BYTE PTR [rax],cl
  416d92:	call   0xffffffffdd423258
  416d97:	(bad)  
  416d99:	add    al,bh
  416d9b:	(bad)  
  416d9c:	rol    BYTE PTR [rax],cl
  416d9e:	jmp    0x416d69
  416da0:	mov    DWORD PTR [rax],0xcacded
  416da6:	repnz (bad) 
  416da8:	rol    BYTE PTR [rax],1
  416daa:	lock ror bl,cl
  416dad:	add    ah,dh
  416daf:	(bad)  
  416db0:	iret   
  416db1:	add    dh,bh
  416db3:	cli    
  416db4:	stc    
  416db5:	add    bl,ch
  416db7:	in     al,0xe2
  416db9:	add    bh,dh
  416dbb:	fcmovbe st,st(1)
  416dbd:	add    bl,dh
  416dbf:	xlat   BYTE PTR ds:[rbx]
  416dc0:	(bad)  
  416dc1:	add    al,bh
  416dc3:	cmc    
  416dc4:	hlt    
  416dc5:	add    al,bh
  416dc7:	(bad)  
  416dc9:	add    bh,dh
  416dcb:	loopne 0x416da4
  416dcd:	add    bh,dh
  416dcf:	in     al,0xdc
  416dd1:	add    dl,bh
  416dd3:	jmp    0xffffffffef3b6eba
  416dd8:	jmp    0xffffffffef3469dd
  416ddd:	add    ch,bh
  416ddf:	clc    
  416de0:	test   BYTE PTR [rax],0xf9
  416de3:	hlt    
  416de4:	repnz add bh,ah
  416de7:	(bad)  
  416de8:	mov    eax,0x9ba4b800
  416ded:	add    ah,dh
  416def:	fcmove st,st(7)
  416df1:	add    ch,dh
  416df3:	fst    st(2)
  416df5:	add    al,bh
  416df7:	jrcxz  0x416dd3
  416df9:	add    bl,ah
  416dfb:	ror    dl,cl
  416dfd:	add    cl,bh
  416dff:	out    0xdf,eax
  416e01:	add    al,bl
  416e03:	retf   0xc4
  416e06:	mov    ecx,0xbe00afb2
  416e0b:	pop    rdi
  416e0c:	(bad)  
  416e0d:	add    BYTE PTR [rbp-0x33ffd0a2],bh
  416e13:	xor    ax,WORD PTR [rax]
  416e16:	retf   
  416e17:	xor    ax,WORD PTR [rax]
  416e1a:	retf   0x3365
  416e1d:	add    dh,al
  416e1f:	movsxd esi,DWORD PTR [rdx]
  416e21:	add    ah,al
  416e23:	(bad)  
  416e25:	add    bl,al
  416e27:	(bad)  
  416e29:	add    dl,al
  416e2b:	(bad)  
  416e2c:	xor    DWORD PTR [rax],eax
  416e2e:	shl    BYTE PTR [rax+0x30],0x0
  416e32:	(bad)  
  416e33:	push   0x67cc0035
  416e38:	xor    al,0x0
  416e3a:	retf   
  416e3b:	data16 xor al,0x0
  416e3e:	enter  0x3365,0x0
  416e42:	(bad)  
  416e43:	xor    eax,DWORD PTR fs:[rax]
  416e46:	(bad)
  416e4a:	ret    
  416e4b:	(bad)  
  416e4d:	add    ch,cl
  416e4f:	push   0x65c90035
  416e54:	xor    al,0x0
  416e56:	mov    esp,0xce00315f
  416e5b:	imul   esi,DWORD PTR [rsi],0x3668cd00
  416e61:	add    cl,cl
  416e63:	xor    ax,0xc600
  416e67:	gs xor al,0x0
  416e6a:	(bad)
  416e6d:	add    al,dl
  416e6f:	imul   edi,DWORD PTR [rax],0x0
  416e72:	iret   
  416e73:	push   0x37
  416e75:	add    dl,cl
  416e77:	push   0x67c90036
  416e7c:	ss add cl,dl
  416e7f:	ins    BYTE PTR es:[rdi],dx
  416e80:	cmp    DWORD PTR [rax],eax
  416e82:	iret   
  416e83:	push   0x38
  416e85:	add    dl,dl
  416e87:	ins    DWORD PTR es:[rdi],dx
  416e88:	cmp    al,BYTE PTR [rax]
  416e8a:	int3   
  416e8b:	imul   edi,DWORD PTR [rax],0x3a6cd100
  416e91:	add    ah,cl
  416e93:	push   0x39
  416e95:	add    bl,cl
  416e97:	push   0x39
  416e99:	add    ah,dl
  416e9b:	outs   dx,DWORD PTR ds:[rsi]
  416e9c:	cmp    al,0x0
  416e9e:	shr    DWORD PTR [rsi+0x3c],cl
  416ea1:	add    bh,cl
  416ea3:	ins    BYTE PTR es:[rdi],dx
  416ea4:	cmp    eax,DWORD PTR [rax]
  416ea6:	shr    DWORD PTR [rsi+0x3d],1
  416ea9:	add    al,bl
  416eab:	jae    0x416eed
  416ead:	add    ch,dl
  416eaf:	jno    0x416ef0
  416eb1:	add    BYTE PTR [rsi-0x2fffc79c],bh
  416eb7:	outs   dx,DWORD PTR ds:[rsi]
  416eb8:	ds add cl,al
  416ebb:	cmp    al,BYTE PTR [eax]
  416ebe:	xlat   BYTE PTR ds:[rbx]
  416ebf:	jae    0x416f02
  416ec1:	add    dl,bl
  416ec3:	jne    0x416f08
  416ec5:	add    bh,dl
  416ec7:	je     0x416f0b
  416ec9:	add    cl,cl
  416ecb:	ins    BYTE PTR es:[rdi],dx
  416ecc:	ds add dl,bl
  416ecf:	jbe    0x416f15
  416ed1:	add    ah,bl
  416ed3:	ja     0x416f1a
  416ed5:	add    cl,al
  416ed7:	imul   edi,DWORD PTR [rip+0x4779de00],0x4372cf00        # 0x47bb4ce1
  416ee1:	add    bh,bl
  416ee3:	jnp    0x416f2e
  416ee5:	add    al,dl
  416ee7:	je     0x416f2e
  416ee9:	add    bl,ah
  416eeb:	jle    0x416f39
  416eed:	add    al,cl
  416eef:	outs   dx,DWORD PTR ds:[rsi]
  416ef0:	rex.XB add r10b,bl
  416ef3:	jp     0x416f3f
  416ef5:	add    cl,dl
  416ef7:	jne    0x416f40
  416ef9:	add    dh,ah
  416efb:	or     DWORD PTR [rdi+0x0],0x4976d1
  416f02:	call   0xffffffffe441c18b
  416f07:	(bad)  
  416f08:	push   rcx
  416f09:	add    cl,cl
  416f0b:	jb     0x416f54
  416f0d:	add    ah,ch
  416f0f:	xchg   DWORD PTR [rax+rax*1-0x12],edx
  416f13:	mov    bl,BYTE PTR [rax+0x0]
  416f16:	icebp  
  416f17:	mov    WORD PTR [rdx+0x0],ds
  416f1a:	hlt    
  416f1b:	nop
  416f1c:	pop    rsi
  416f1d:	add    al,bh
  416f1f:	xchg   esp,eax
  416f20:	(bad)  
  416f21:	add    cl,bh
  416f23:	xchg   ebp,eax
  416f24:	movsxd eax,DWORD PTR [rax]
  416f26:	std    
  416f27:	cwde   
  416f28:	data16 add ah,dl
  416f2b:	adc    BYTE PTR [rsi+0x0],0xff
  416f2f:	fwait
  416f30:	imul   eax,DWORD PTR [rax],0x5f8ce7
  416f36:	mov    esi,0xf7005075
  416f3b:	fwait
  416f3c:	ins    DWORD PTR es:[rdi],dx
  416f3d:	add    al,ch
  416f3f:	xchg   edx,eax
  416f40:	data16 add bl,dl
  416f43:	test   BYTE PTR [rbp+0x0],bl
  416f46:	vcvtss2sd xmm8,xmm0,DWORD PTR [rax]
  416f4a:	(bad)  
  416f4b:	mov    ah,BYTE PTR [rbp+0x0]
  416f4e:	out    dx,eax
  416f4f:	pushf  
  416f50:	jb     0x416f52
  416f52:	retf   0x6285
  416f55:	add    cl,bl
  416f57:	xchg   ecx,eax
  416f58:	ins    DWORD PTR es:[rdi],dx
  416f59:	add    cl,bh
  416f5b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  416f5c:	jg     0x416f5e
  416f5e:	retf   0x6788
  416f61:	add    dh,ch
  416f63:	movabs eax,ds:0x87c4006280bd007a
  416f6c:	imul   eax,DWORD PTR [rax],0x6f8ecd
  416f72:	ficomp WORD PTR [rbx+rdi*2+0x7898d900]
  416f79:	add    bl,dl
  416f7b:	xchg   esp,eax
  416f7c:	jne    0x416f7e
  416f7e:	mov    edx,0xd3006984
  416f83:	fwait
  416f84:	jle    0x416f86
  416f86:	jmp    0xffffffffc041fc36
  416f8b:	mov    ?,WORD PTR [rbp+0x0]
  416f8e:	rcr    DWORD PTR [rsi-0x4307ff7c],cl
  416f94:	sahf   
  416f95:	add    cl,ah
  416f97:	lods   al,BYTE PTR ds:[rsi]
  416f98:	xchg   ecx,eax
  416f99:	add    bh,dl
  416f9b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  416f9c:	mov    eax,DWORD PTR [rax]
  416f9e:	fisubr WORD PTR [rdx-0x4c17ff6f]
  416fa4:	cdq    
  416fa5:	add    al,al
  416fa7:	xchg   esp,eax
  416fa8:	jg     0x416faa
  416faa:	mov    dl,0x8c
  416fac:	jns    0x416fae
  416fae:	iret   
  416faf:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  416fb0:	mov    es,WORD PTR [rax]
  416fb2:	cmc    
  416fb3:	(bad)
  416fb6:	fdiv   QWORD PTR [rdx-0x6d4bff62]
  416fbc:	add    DWORD PTR [rax],0xadc1eb
  416fc2:	ret    0x92a2
  416fc5:	add    ah,ch
  416fc7:	(bad)
  416fca:	fnstcw WORD PTR [rdx-0x4122ff55]
  416fd0:	scas   eax,DWORD PTR es:[rdi]
  416fd1:	add    dh,ch
  416fd3:	int    0xbd
  416fd5:	add    cl,ah
  416fd7:	(bad)  
  416fd8:	mov    ch,0x0
  416fda:	out    dx,eax
  416fdb:	rol    ah,cl
  416fdd:	add    ch,ah
  416fdf:	retf   0xbc
  416fe2:	repnz xlat BYTE PTR ds:[rbx]
  416fe4:	retf   0xe400
  416fe7:	int    0xc2
  416fe9:	add    ah,ch
  416feb:	(bad)  
  416fec:	retf   0xed00
  416fef:	fxch   st(7)
  416ff1:	add    dl,bh
  416ff3:	in     al,dx
  416ff4:	in     eax,0x0
  416ff6:	stc    
  416ff7:	jmp    0x416fdd
  416ff9:	add    bh,dh
  416ffb:	jmp    0x416fe2
  416ffd:	add    al,dh
  416fff:	out    0xe1,al
  417001:	add    al,ch
  417003:	loopne 0x416fe1
  417005:	add    bh,bl
  417007:	xlat   BYTE PTR ds:[rbx]
  417008:	rol    DWORD PTR [rax],cl
  41700a:	std    
  41700b:	cmc    
  41700c:	icebp  
  41700d:	add    ah,bh
  41700f:	hlt    
  417010:	lock add cl,bh
  417013:	repz lock add dl,dh
  417017:	out    dx,al
  417018:	in     al,dx
  417019:	add    dh,dh
  41701b:	hlt    
  41701c:	repz add ch,dh
  41701f:	repz repnz add bh,ch
  417023:	in     eax,dx
  417024:	in     al,dx
  417025:	add    ch,ch
  417027:	jmp    0x417013
  417029:	add    bh,bh
  41702b:	movabs al,ds:0xa8ff0070a3ff006e
  417034:	ja     0x417036
  417036:	(bad)  
  417037:	mov    ch,0x8b
  417039:	add    bh,bh
  41703b:	sar    BYTE PTR [rax-0x2c1d0200],cl
  417041:	add    bh,bh
  417043:	(bad)  
  417044:	fiadd  WORD PTR [rax]
  417046:	(bad)  
  417047:	(bad)
  41704a:	out    0xda,eax
  41704c:	rol    DWORD PTR [rax],cl
  41704e:	cld    
  41704f:	icebp  
  417050:	jmp    0x417052
  417052:	div    eax
  417054:	in     al,dx
  417055:	add    bh,bh
  417057:	lods   eax,DWORD PTR ds:[rsi]
  417058:	jnp    0x41705a
  41705a:	push   QWORD PTR [rax-0x3000ff81]
  417060:	mov    bl,0x0
  417062:	cld    
  417063:	hlt    
  417064:	out    dx,eax
  417065:	add    ah,bh
  417067:	div    esp
  417069:	add    dh,dh
  41706b:	icebp  
  41706c:	out    dx,al
  41706d:	add    bh,bh
  41706f:	mov    dh,0x84
  417071:	add    bh,bh
  417073:	mov    ecx,0xbdff0087
  417078:	mov    eax,DWORD PTR [rax]
  41707a:	(bad)  
  41707b:	ffree  st(3)
  41707d:	add    ch,bh
  41707f:	div    edx
  417081:	add    bh,bh
  417083:	(bad)  
  417084:	xchg   ebx,eax
  417085:	add    bh,bh
  417087:	(bad)  
  417088:	test   eax,0xbbbdbf00
  41708d:	add    cl,bh
  41708f:	div    ebp
  417091:	add    bl,ch
  417093:	(bad)  
  417094:	jmp    0xffffffffa0126f99
  417099:	add    bh,bh
  41709b:	(bad)  
  41709c:	movabs ds:0xacddff00d5edff00,eax
  4170a5:	add    dh,bh
  4170a7:	std    
  4170a8:	sti    
  4170a9:	add    bh,bh
  4170ab:	jmp    0xfffffffff1407167
  4170b0:	rol    BYTE PTR [rax],0xff
  4170b3:	clc    
  4170b4:	(bad)
  4170b7:	sti    
  4170b8:	(bad)  
  4170b9:	add    bh,bh
  4170bb:	jmp    rsi
  4170bd:	add    bh,bh
  4170bf:	(bad)  
  4170c0:	jmp    0x4170c2
  4170c2:	(bad)  
  4170c3:	(bad)  
  4170c4:	cli    
  4170c5:	add    dl,bh
  4170c7:	cli    
  4170c8:	stc    
  4170c9:	add    ch,cl
  4170cb:	int    0xcc
  4170cd:	add    bh,bh
  4170cf:	(bad)  
  4170d0:	inc    DWORD PTR [rax]
  4170d2:	(bad)  
  4170d3:	(bad)  
  4170d4:	inc    BYTE PTR [rax]
  4170d6:	std    
  4170d7:	std    
  4170d8:	std    
  4170d9:	add    dl,bh
  4170db:	cli    
  4170dc:	cli    
  4170dd:	add    al,bh
  4170df:	clc    
  4170e0:	clc    
  4170e1:	add    bh,dh
  4170e3:	div    edi
  4170e5:	add    ch,dh
  4170e7:	cmc    
  4170e8:	cmc    
  4170e9:	add    bl,dh
  4170eb:	repz repz add cl,dh
  4170ef:	icebp  
  4170f0:	icebp  
  4170f1:	add    dh,ch
  4170f3:	out    dx,al
  4170f4:	out    dx,al
  4170f5:	add    ah,ch
  4170f7:	in     al,dx
  4170f8:	in     al,dx
  4170f9:	add    dl,ch
  4170fb:	(bad)  
  4170fc:	(bad)  
  4170fd:	add    al,ch
  4170ff:	call   0xffffffffe52571ec
  417104:	in     al,0x0
  417106:	(bad)  
  417107:	(bad)  
  417108:	(bad)  
  417109:	add    BYTE PTR [rax],al
  41710b:	add    BYTE PTR [rax],al
  41710d:	add    bh,bh
  41710f:	(bad)  
  417110:	inc    DWORD PTR [rax]
	...
  417152:	add    BYTE PTR [rax],al
  417154:	or     BYTE PTR [rcx],cl
  417156:	or     ecx,DWORD PTR [rsi+rcx*1]
  417159:	(bad)  
  41715a:	(bad)  
  41715b:	or     eax,0x80a0b
	...
  417180:	add    BYTE PTR [rcx],cl
  417182:	or     DWORD PTR [rax],ecx
  417184:	adc    al,0x1c
  417186:	and    ebp,DWORD PTR [rbx]
  417188:	(bad)  
  417189:	(bad)  
  41718a:	and    al,0x1c
  41718c:	(bad)  
  41718d:	adc    al,0xfe
  41718f:	(bad)  
  417190:	or     al,0x9
	...
  4171ae:	add    BYTE PTR [rcx],cl
  4171b0:	adc    al,0x20
  4171b2:	(bad)  
  4171b3:	cmp    DWORD PTR [rdx-0x3c3c2930],edi
  4171b9:	ret    
  4171ba:	(bad)  
  4171bb:	sar    BYTE PTR [rdx+0x14142b39],1
  4171c1:	dec    BYTE PTR [rsi]
  4171c3:	or     DWORD PTR [rax],eax
	...
  4171dd:	or     BYTE PTR [rdi],dl
  4171df:	(bad)  
  4171e0:	(bad)  
  4171e1:	(bad)  
  4171e2:	ret    0xf6f5
  4171e5:	div    bh
  4171e7:	div    edi
  4171e9:	div    edi
  4171eb:	div    esi
  4171ed:	cmc    
  4171ee:	ret    0x2fd6
  4171f1:	(bad)  
  4171f2:	adc    al,0xfe
  4171f4:	(bad)  
  4171f5:	or     DWORD PTR [rax],eax
	...
  41720b:	add    BYTE PTR [rdx],dl
  41720d:	sub    edi,DWORD PTR [rcx-0x8090ad4]
  417213:	idiv   eax
  417215:	clc    
  417216:	clc    
  417217:	stc    
  417218:	stc    
  417219:	stc    
  41721a:	stc    
  41721b:	clc    
  41721c:	clc    
  41721d:	clc    
  41721e:	div    esi
  417220:	cmc    
  417221:	ret    0x27ba
  417224:	adc    al,0xfe
  417226:	or     DWORD PTR [rax],eax
	...
  417238:	add    BYTE PTR [rax],al
  41723a:	add    BYTE PTR [rsi+rbp*1],dl
  41723d:	sub    al,0xf5
  41723f:	div    bh
  417241:	clc    
  417242:	stc    
  417243:	cld    
  417244:	and    esi,ebp
  417246:	std    
  417247:	and    ebx,edi
  417249:	cli    
  41724a:	cli    
  41724b:	cli    
  41724c:	cli    
  41724d:	cli    
  41724e:	stc    
  41724f:	clc    
  417250:	clc    
  417251:	div    ebp
  417253:	sub    al,0x2f
  417255:	adc    al,0xfe
  417257:	or     DWORD PTR [rax],eax
	...
  417269:	add    BYTE PTR [rcx+rsi*1],ah
  41726c:	hlt    
  41726d:	cmc    
  41726e:	idiv   eax
  417270:	stc    
  417271:	cli    
  417272:	cld    
  417273:	int    0xac
  417275:	sahf   
  417276:	xchg   ebp,eax
  417277:	lea    ecx,[rbp-0x51606c73]
  41727d:	cmp    bh,bl
  41727f:	cli    
  417280:	stc    
  417281:	clc    
  417282:	div    esi
  417284:	hlt    
  417285:	shl    BYTE PTR [rsi+rdi*8],1
  417288:	or     DWORD PTR [rax],eax
	...
  417296:	add    BYTE PTR [rax],al
  417298:	add    BYTE PTR [rbx],ch
  41729a:	xor    al,0xf4
  41729c:	div    bh
  41729e:	clc    
  41729f:	stc    
  4172a0:	mov    esp,0x516896ae
  4172a5:	(bad)  
  4172a6:	(bad)  
  4172a7:	ds ds ds (bad) 
  4172ab:	(bad)  
  4172ac:	push   rcx
  4172ad:	push   0xffffffffffffff97
  4172af:	scas   al,BYTE PTR es:[rdi]
  4172b0:	mov    esp,0xf6f8f9fa
  4172b5:	cmc    
  4172b6:	xor    al,0x25
  4172b8:	dec    BYTE PTR [rcx]
	...
  4172c6:	add    BYTE PTR [rax],al
  4172c8:	sub    ebx,edi
  4172ca:	hlt    
  4172cb:	div    bh
  4172cd:	clc    
  4172ce:	stc    
  4172cf:	mov    cl,0x90
  4172d1:	(bad)  
  4172d2:	ds ds rex.RXB
  4172d5:	rex.RXB push 0xffffffffffffff97
  4172d8:	lahf   
  4172d9:	xchg   edi,eax
  4172da:	rex.RXB
  4172db:	rex.RXB
  4172dc:	ds ds (bad) 
  4172df:	(bad)  
  4172e0:	nop
  4172e1:	scas   eax,DWORD PTR es:[rdi]
  4172e2:	cli    
  4172e3:	stc    
  4172e4:	clc    
  4172e5:	div    ebp
  4172e7:	sub    al,0x25
  4172e9:	dec    BYTE PTR [rcx]
	...
  4172f7:	and    al,0x34
  4172f9:	hlt    
  4172fa:	cmc    
  4172fb:	idiv   eax
  4172fd:	loopne 0x4172a1
  4172ff:	jno    0x41733f
  417301:	rex.RXB
  417302:	rex.RXB
  417303:	rex.RX
  417304:	rex.RB jno 0x4172b3
  417307:	std    
  417308:	hlt    
  417309:	ret    
  41730a:	test   eax,0x4746454d
  41730f:	ds (bad) 
  417311:	push   0xfffffffff8f9bc9c
  417316:	div    ebp
  417318:	xor    al,0x26
  41731a:	dec    BYTE PTR [rcx]
	...
  417324:	add    BYTE PTR [rax],al
  417326:	(bad)  
  417327:	xor    ebx,esi
  417329:	cmc    
  41732a:	idiv   eax
  41732c:	mov    esp,0x46473e97
  417331:	rex.RB
  417332:	rex.R
  417333:	rex.XB
  417334:	rex.WR
  417335:	fdivp  st(4),st
  417338:	repz repnz fist WORD PTR [rcx+0x46444343]
  417340:	rex.RXB
  417341:	ds (bad) 
  417343:	nop
  417344:	(bad)  
  417345:	stc    
  417346:	clc    
  417347:	div    ah
  417349:	rcl    BYTE PTR [rdi],1
  41734b:	dec    BYTE PTR [rax]
	...
  417355:	add    BYTE PTR [rsi],ch
  417357:	in     eax,dx
  417358:	hlt    
  417359:	div    bh
  41735b:	mov    esp,0x46474790
  417360:	rex.R
  417361:	rex.XB
  417362:	rex.WXB
  417363:	rex.X
  417364:	rex.X cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  417366:	fdivp  st(0),st
  417368:	icebp  
  417369:	icebp  
  41736a:	icebp  
  41736b:	movabs ds:0x3e474645434c4b42,eax
  417374:	(bad)  
  417375:	(bad)  
  417376:	clc    
  417377:	div    esi
  417379:	hlt    
  41737a:	adc    cl,BYTE PTR cs:[rsi]
	...
  417385:	es fcomip st,st(3)
  417388:	cmc    
  417389:	test   ebp,0x44464797
  41738f:	rex.XB
  417390:	rex.WXB
  417391:	rex.X
  417392:	rex.B
  417393:	rex.WX
  417394:	rex.WX
  417395:	fwait
  417396:	cmp    eax,0xfaf5f1f7
  41739b:	(bad)  
  41739c:	rex.B
  41739d:	rex.B
  41739e:	rex.X
  41739f:	rex.WXB
  4173a0:	rex.WR
  4173a1:	rex.R
  4173a2:	rex.RX
  4173a3:	rex.RXB
  4173a4:	ds nop
  4173a6:	mov    esp,0xdff5f7f8
  4173ab:	sub    edi,esi
  4173ad:	or     DWORD PTR [rax],eax
  4173af:	add    BYTE PTR [rax],al
  4173b1:	add    BYTE PTR [rax],al
  4173b3:	add    BYTE PTR [rdi],dh
  4173b5:	cmp    esi,edx
  4173b7:	hlt    
  4173b8:	idiv   al
  4173ba:	movabs ds:0x404a4a4b4c4d4647,al
  4173c3:	rex
  4173c4:	rex ja 0x4173fd
  4173c7:	clc    
  4173c8:	icebp  
  4173c9:	(bad)  
  4173ca:	test   eax,0x41404049
  4173cf:	rex.B
  4173d0:	rex.X
  4173d1:	rex.WR
  4173d2:	rex.XB
  4173d3:	rex.RX
  4173d4:	rex.RXB
  4173d5:	ds pushf 
  4173d7:	(bad)  
  4173da:	hlt    
  4173db:	mov    eax,0xe17
  4173e0:	add    BYTE PTR [rax],al
  4173e2:	add    BYTE PTR [rax],al
  4173e4:	sub    esi,DWORD PTR [rbx]
  4173e6:	in     eax,dx
  4173e7:	cmc    
  4173e8:	div    BYTE PTR [rbp+0x4c4d4e6a]
  4173ee:	push   rax
  4173ef:	rex.WX
  4173f0:	rex.WB
  4173f1:	rex.WB
  4173f2:	rex.WB
  4173f3:	rex
  4173f4:	rex
  4173f5:	rex ja 0x41739a
  4173f8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  4173f9:	cdq    
  4173fa:	push   rbx
  4173fb:	rex
  4173fc:	rex
  4173fd:	rex
  4173fe:	rex
  4173ff:	rex
  417400:	rex.WX
  417401:	rex.X
  417402:	rex.WXB
  417403:	rex.XB
  417404:	rex.RX
  417405:	rex.RXB push 0xfffffffff5f7f8af
  41740b:	fbstp  TBYTE PTR [rdi]
  41740d:	dec    BYTE PTR [rcx]
  41740f:	add    BYTE PTR [rax],al
  417411:	add    BYTE PTR [rax],al
  417413:	sbb    ebp,DWORD PTR [rsi]
  417415:	repnz hlt 
  417417:	cmc    
  417418:	(bad)  
  417419:	xchg   edi,eax
  41741a:	rex.WRX
  41741b:	rex.WRB
  41741c:	rex.WXB push r8
  41741e:	rex.WB
  41741f:	rex.WB
  417420:	rex.WB
  417421:	rex.WB
  417422:	rex
  417423:	rex
  417424:	rex
  417425:	rex
  417426:	rex
  417427:	rex
  417428:	rex
  417429:	rex
  41742a:	rex
  41742b:	rex
  41742c:	rex
  41742d:	rex
  41742e:	rex
  41742f:	rex
  417430:	rex
  417431:	rex.WX
  417432:	rex.B
  417433:	rex.WXB
  417434:	rex.XB
  417435:	rex.RX
  417436:	rex.RXB xchg r8d,eax
  417438:	sub    edi,esi
  41743a:	div    ah
  41743c:	cmp    edx,DWORD PTR [rsp+rcx*1]
  41743f:	add    BYTE PTR [rax],al
  417441:	add    BYTE PTR [rax],al
  417443:	sbb    edi,DWORD PTR [rdi-0x4c0a0b0e]
  417449:	push   rsi
  41744a:	rex.WRB push r13
  41744c:	push   rax
  41744d:	rex.WB
  41744e:	rex.WB
  41744f:	rex.WRXB
  417450:	rex.WB
  417451:	rex
  417452:	rex
  417453:	rex
  417454:	rex
  417455:	rex.WB outs dx,BYTE PTR ds:[rsi]
  417457:	jne    0x4174ce
  417459:	jns    0x4174c4
  41745b:	rex
  41745c:	rex
  41745d:	rex
  41745e:	rex
  41745f:	rex
  417460:	rex
  417461:	rex.WB
  417462:	rex.WX
  417463:	rex.WX
  417464:	rex.WR
  417465:	rex.WRB
  417466:	rex.RX
  417467:	rex.RXB scas eax,DWORD PTR es:[rdi]
  417469:	clc    
  41746a:	div    ah
  41746c:	shl    BYTE PTR [rax],0xe
  41746f:	add    BYTE PTR [rax],al
  417471:	add    BYTE PTR [rax],al
  417473:	sub    ch,BYTE PTR [rax]
  417475:	repnz hlt 
  417477:	neg    BYTE PTR [rbp+rcx*2+0x53495455]
  41747e:	rex.WRXB
  41747f:	rex.WB
  417480:	rex.WB
  417481:	rex
  417482:	rex
  417483:	rex
  417484:	rex ja 0x417433
  417487:	mov    dh,0x37
  417489:	cmp    BYTE PTR [rax+rax*2+0x40404040],ah
  417490:	rex
  417491:	rex.WB
  417492:	rex.WB
  417493:	rex.WX push rax
  417495:	rex.WR
  417496:	rex.WRX
  417497:	rex.RX xchg eax,eax
  417499:	(bad)  
  41749a:	div    ch
  41749c:	fbstp  TBYTE PTR [rdi]
  41749e:	dec    BYTE PTR [rax]
  4174a0:	add    BYTE PTR [rax],al
  4174a2:	add    BYTE PTR [rsi],ch
  4174a4:	icebp  
  4174a5:	repnz hlt 
  4174a7:	mov    ebx,0x5954557e
  4174ac:	push   rbx
  4174ad:	push   rbx
  4174ae:	rex.WRXB
  4174af:	rex.WB
  4174b0:	rex
  4174b1:	rex
  4174b2:	rex
  4174b3:	rex
  4174b4:	rex ja 0x4174f4
  4174b7:	cmc    
  4174b8:	icebp  
  4174b9:	out    dx,eax
  4174ba:	mov    ah,0x40
  4174bc:	rex
  4174bd:	rex
  4174be:	rex
  4174bf:	rex
  4174c0:	rex
  4174c1:	rex.WB
  4174c2:	rex.WB
  4174c3:	rex.WB
  4174c4:	rex.WX
  4174c5:	rex.WXB
  4174c6:	rex.XB
  4174c7:	rex.RB push 0xffffffffffffffce
  4174ca:	div    ebp
  4174cc:	in     eax,dx
  4174cd:	cmp    DWORD PTR [rdx+rcx*1],edx
  4174d0:	add    BYTE PTR [rax],al
  4174d2:	(bad)  
  4174d3:	mov    ecx,0x35f4f2f1
  4174d8:	push   rbp
  4174d9:	push   rsp
  4174da:	pop    rcx
  4174db:	push   rdx
  4174dc:	push   rdx
  4174dd:	rex.W
  4174de:	rex.WRXB
  4174df:	rex.WB
  4174e0:	rex
  4174e1:	rex
  4174e2:	rex
  4174e3:	rex
  4174e4:	rex ja 0x417524
  4174e7:	div    al
  4174e9:	out    dx,eax
  4174ea:	cmp    BYTE PTR [rax+rax*2+0x40],ah
  4174ee:	rex
  4174ef:	rex
  4174f0:	rex
  4174f1:	rex
  4174f2:	rex.WB
  4174f3:	rex.WRXB
  4174f4:	rex.WB
  4174f5:	rex.WX
  4174f6:	rex.WXB
  4174f7:	rex.WRB
  4174f8:	rex.RB test eax,0x31f3f5f7
  4174fe:	(bad)  
  4174ff:	or     eax,DWORD PTR [rax]
  417501:	add    BYTE PTR [rip+0xfffffffff3f2f032],dl        # 0xfffffffff4346539
  417507:	movabs ds:0x404948585c5e5954,eax
  417510:	rex
  417511:	rex
  417512:	rex
  417513:	rex
  417514:	rex outs dx,BYTE PTR ds:[rsi]
  417516:	ss stc 
  417518:	lock icebp 
  41751a:	xor    DWORD PTR [rax+rax*2+0x40404040],ecx
  417521:	rex
  417522:	rex.WB
  417523:	rex.WRXB
  417524:	rex.WRXB
  417525:	rex.WB push r8
  417527:	rex.WR
  417528:	rex.WRX pushf 
  41752a:	div    ch
  41752c:	repz (bad) 
  41752e:	sbb    al,0xd
  417530:	add    BYTE PTR [rax],al
  417532:	(bad)  
  417533:	fucomi st,st(7)
  417535:	icebp  
  417536:	repnz cdq 
  417538:	pop    rcx
  417539:	pop    rsi
  41753a:	pop    rsp
  41753b:	push   rdi
  41753c:	pop    rax
  41753d:	rex.W
  41753e:	rex.WB
  41753f:	rex
  417540:	rex
  417541:	rex
  417542:	rex
  417543:	rex
  417544:	rex
  417545:	rex.WB stos BYTE PTR es:[rdi],al
  417547:	std    
  417548:	repnz lock out dx,eax
  41754b:	mov    dl,0x79
  41754d:	rex
  41754e:	rex
  41754f:	rex
  417550:	rex
  417551:	rex
  417552:	rex.WB
  417553:	rex.WRXB
  417554:	rex.WRXB push r11
  417556:	push   rsp
  417557:	push   rbp
  417558:	push   rsi
  417559:	nop
  41755a:	div    ch
  41755c:	repz (bad) 
  41755e:	and    al,0xe
  417560:	add    BYTE PTR [rax],al
  417562:	sub    ch,BYTE PTR [rax]
  417564:	out    dx,eax
  417565:	icebp  
  417566:	repnz mov fs,WORD PTR [rax+0x64]
  41756a:	pop    rdi
  41756b:	pop    rdi
  41756c:	push   rdi
  41756d:	rex.W
  41756e:	rex.WB
  41756f:	rex
  417570:	rex
  417571:	rex
  417572:	rex
  417573:	rex
  417574:	rex
  417575:	rex mov DWORD PTR [rip+0xffffffffeff1f0f9],edi        # 0xfffffffff0336675
  41757c:	mov    al,0x73
  41757e:	rex
  41757f:	rex
  417580:	rex
  417581:	rex
  417582:	rex.WB
  417583:	rex.WRXB
  417584:	rex.W push rdx
  417586:	push   rbx
  417587:	push   rsp
  417588:	push   rbp
  417589:	mov    ecx,es
  41758b:	hlt    
  41758c:	in     eax,dx
  41758d:	sub    BYTE PTR [rbx],ch
  41758f:	inc    BYTE PTR [rax]
  417591:	add    BYTE PTR [rdx],ch
  417593:	sub    bh,ch
  417595:	out    dx,eax
  417596:	(bad)  
  417597:	mov    WORD PTR [rbp+riz*2+0x63],fs
  41759b:	pop    rbp
  41759c:	push   rdi
  41759d:	push   rdx
  41759e:	rex.WB
  41759f:	rex
  4175a0:	rex
  4175a1:	rex
  4175a2:	rex
  4175a3:	rex
  4175a4:	rex
  4175a5:	rex
  4175a6:	rex xchg ebp,eax
  4175a8:	cmp    eax,0xeff1f0f7
  4175ad:	mov    al,0x7b
  4175af:	rex
  4175b0:	rex
  4175b1:	rex
  4175b2:	rex.WB
  4175b3:	rex.WRXB push r10
  4175b5:	push   rdx
  4175b6:	push   rdx
  4175b7:	pop    rcx
  4175b8:	push   rsp
  4175b9:	mov    ecx,es
  4175bb:	hlt    
  4175bc:	repnz sub BYTE PTR [rdx],ch
  4175bf:	(bad)  
  4175c0:	add    BYTE PTR [rax],al
  4175c2:	sub    ch,BYTE PTR [rax]
  4175c4:	out    dx,eax
  4175c5:	out    dx,eax
  4175c6:	in     eax,0x8e
  4175c8:	addr32 movsxd ebx,DWORD PTR gs:[ebx+0x52]
  4175ce:	rex.WB
  4175cf:	rex
  4175d0:	rex
  4175d1:	rex
  4175d2:	rex
  4175d3:	rex
  4175d4:	rex
  4175d5:	rex
  4175d6:	rex
  4175d7:	rex xchg ebp,eax
  4175d9:	fdivrp st(6),st
  4175db:	lock icebp 
  4175dd:	out    dx,eax
  4175de:	mov    al,0x79
  4175e0:	rex
  4175e1:	rex
  4175e2:	rex.WB
  4175e3:	rex.W pop rax
  4175e5:	pop    rsp
  4175e6:	pop    rsp
  4175e7:	pop    rsi
  4175e8:	pop    rdx
  4175e9:	mov    esi,ss
  4175eb:	in     eax,dx
  4175ec:	icebp  
  4175ed:	in     eax,0x37
  4175ef:	or     eax,0x33220000
  4175f4:	out    dx,eax
  4175f5:	out    dx,eax
  4175f6:	out    dx,eax
  4175f7:	xchg   ecx,eax
  4175f8:	imul   ebp,DWORD PTR [ebx+0x67],0x5d
  4175fd:	pop    rax
  4175fe:	rex.WB
  4175ff:	rex
  417600:	rex
  417601:	rex
  417602:	rex
  417603:	rex
  417604:	rex
  417605:	rex
  417606:	rex
  417607:	rex
  417608:	rex xchg ebp,eax
  41760a:	out    dx,al
  41760b:	hlt    
  41760c:	lock lock out dx,eax
  41760f:	lods   eax,DWORD PTR ds:[rsi]
  417610:	pop    rsi
  417611:	rex
  417612:	rex.WB
  417613:	rex.W pop rsp
  417615:	pop    rbx
  417616:	pop    rdi
  417617:	(bad)  
  417618:	pop    rsi
  417619:	mov    WORD PTR [rdx+rsi*8],gs
  41761c:	icebp  
  41761d:	sub    BYTE PTR [rbx],ch
  41761f:	or     al,0x0
  417621:	add    BYTE PTR [rbx],bl
  417623:	mov    esi,0x9defefef
  417628:	outs   dx,DWORD PTR ds:[rsi]
  417629:	outs   dx,DWORD PTR ds:[rsi]
  41762a:	outs   dx,DWORD PTR ds:[rsi]
  41762b:	data16 (bad) 
  41762d:	push   rdi
  41762e:	rex.W
  41762f:	rex
  417630:	rex
  417631:	rex
  417632:	rex
  417633:	rex
  417634:	rex
  417635:	rex
  417636:	rex
  417637:	rex
  417638:	rex
  417639:	rex
  41763a:	fwait
  41763b:	mov    ebp,0xf1eff0f2
  417640:	cwde   
  417641:	rex
  417642:	rex.WB push r10
  417644:	pop    rbx
  417645:	pop    rbp
  417646:	pop    rbp
  417647:	fs (bad) 
  417649:	xchg   ecx,eax
  41764a:	repnz icebp 
  41764c:	out    dx,eax
  41764d:	xor    esp,DWORD PTR [rbx]
  41764f:	or     eax,DWORD PTR [rax]
  417651:	add    BYTE PTR [rbx],dl
  417653:	iret   
  417654:	out    dx,eax
  417655:	out    dx,eax
  417656:	out    dx,eax
  417657:	test   al,0x72
  417659:	je     0x4176cd
  41765b:	outs   dx,DWORD PTR ds:[rsi]
  41765c:	addr32 pop rbp
  41765e:	push   rdx
  41765f:	rex.WB
  417660:	rex
  417661:	rex
  417662:	rex
  417663:	rex
  417664:	rex
  417665:	rex
  417666:	rex
  417667:	rex
  417668:	rex
  417669:	rex
  41766a:	rex.WB movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  41766c:	div    eax
  41766e:	icebp  
  41766f:	out    dx,eax
  417670:	mov    dl,0x64
  417672:	rex.W push rdi
  417674:	pop    rbp
  417675:	(bad)
  41767a:	icebp  
  41767b:	out    dx,eax
  41767c:	out    dx,eax
  41767d:	xor    ah,BYTE PTR [rbx]
  41767f:	or     DWORD PTR [rax],eax
  417681:	add    BYTE PTR [rbx],dl
  417683:	xor    bh,ch
  417685:	out    dx,eax
  417686:	out    dx,eax
  417687:	int3   
  417688:	jge    0x417700
  41768a:	jbe    0x417700
  41768c:	ins    BYTE PTR es:[rdi],dx
  41768d:	(bad)  
  41768e:	push   rdi
  41768f:	rex.W
  417690:	rex
  417691:	rex
  417692:	rex
  417693:	rex
  417694:	rex
  417695:	rex
  417696:	rex
  417697:	rex
  417698:	rex
  417699:	rex
  41769a:	rex jle 0x41765a
  41769d:	icebp  
  41769e:	lock out dx,eax
  4176a0:	xor    DWORD PTR [rsi+0x67625b52],eax
  4176a6:	addr32 gs gs mov al,0xef
  4176ab:	out    dx,eax
  4176ac:	out    dx,eax
  4176ad:	mov    eax,0x923
  4176b2:	add    BYTE PTR [rsi],ch
  4176b4:	lock out dx,eax
  4176b6:	out    dx,eax
  4176b7:	out    dx,eax
  4176b8:	(bad)  
  4176b9:	jl     0x417737
  4176bb:	jp     0x417731
  4176bd:	pop    bp
  4176bf:	jnp    0x41765b
  4176c1:	lahf   
  4176c2:	test   eax,0x404998ab
  4176c7:	rex
  4176c8:	rex
  4176c9:	rex
  4176ca:	rex (bad) 
  4176cc:	int    0xf2
  4176ce:	lock icebp 
  4176d0:	xor    edx,DWORD PTR [rcx+0x66666257]
  4176d6:	imul   esp,DWORD PTR [rdi-0x7a],0xffffffbe
  4176da:	out    dx,eax
  4176db:	out    dx,eax
  4176dc:	lock cmp DWORD PTR [rsi],ecx
  4176df:	add    BYTE PTR [rax],al
  4176e1:	add    BYTE PTR [rax],al
  4176e3:	sub    ch,BYTE PTR [rax]
  4176e5:	out    dx,eax
  4176e6:	out    dx,eax
  4176e7:	out    dx,eax
  4176e8:	retf   0x8080
  4176eb:	jg     0x417767
  4176ed:	jb     0x417756
  4176ef:	xchg   ebx,eax
  4176f0:	out    dx,al
  4176f1:	and    ebp,esi
  4176f3:	out    dx,eax
  4176f4:	mov    eax,0x4040407b
  4176f9:	rex
  4176fa:	rex ja 0x417737
  4176fd:	repnz lock repnz (bad) 
  417701:	xchg   ecx,eax
  417702:	movsxd esp,DWORD PTR [rsi+0x6c]
  417705:	jo     0x417776
  417707:	ins    DWORD PTR es:[rdi],dx
  417708:	popf   
  417709:	out    dx,eax
  41770a:	out    dx,eax
  41770b:	out    dx,eax
  41770c:	in     eax,0x37
  41770e:	or     eax,DWORD PTR [rax]
  417710:	add    BYTE PTR [rax],al
  417712:	add    BYTE PTR [rsi],bl
  417714:	xor    ch,bh
  417716:	out    dx,eax
  417717:	out    dx,eax
  417718:	out    dx,eax
  417719:	mov    al,BYTE PTR [rdx+0x727a8082]
  41771f:	xchg   dh,bl
  417721:	stc    
  417722:	in     eax,dx
  417723:	out    dx,eax
  417724:	lock movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  417726:	rex
  417727:	rex
  417728:	rex
  417729:	rex
  41772a:	rex (bad) 
  41772c:	shl    ecx,0xef
  41772f:	repz (bad) 
  417731:	xchg   BYTE PTR [rsi+0x70],ah
  417734:	jb     0x4177a8
  417736:	jb     0x4177b0
  417738:	retf   
  417739:	out    dx,eax
  41773a:	out    dx,eax
  41773b:	out    dx,eax
  41773c:	mov    edi,0x937
  417741:	add    BYTE PTR [rax],al
  417743:	add    BYTE PTR [rsi],ch
  417745:	lock out dx,eax
  417747:	out    dx,eax
  417748:	out    dx,eax
  417749:	fiadd  DWORD PTR [rbp+0x7c818485]
  41774f:	jb     0x4176fd
  417751:	cld    
  417752:	lock out dx,eax
  417754:	out    dx,eax
  417755:	(bad)  
  417756:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  417757:	jnp    0x4177ac
  417759:	jae    0x4176f5
  41775b:	mov    esp,0xf7f1eff2
  417760:	mov    ch,0x78
  417762:	jb     0x4177da
  417764:	jbe    0x4177dc
  417766:	je     0x41770c
  417768:	out    dx,eax
  417769:	out    dx,eax
  41776a:	out    dx,eax
  41776b:	lock cmp DWORD PTR [rip+0x0],ecx        # 0x417772
  417772:	add    BYTE PTR [rax],al
  417774:	and    dh,BYTE PTR [rbx]
  417776:	out    dx,eax
  417777:	out    dx,eax
  417778:	out    dx,eax
  417779:	out    dx,eax
  41777a:	leave  
  41777b:	mov    dh,0x87
  41777e:	(bad)  
  41777f:	jg     0x41770f
  417781:	fdivrp st(5),st
  417783:	out    dx,eax
  417784:	out    dx,eax
  417785:	out    dx,eax
  417786:	out    dx,eax
  417787:	(bad)  
  417788:	mov    dl,0xb7
  41778a:	ret    0xeff1
  41778d:	out    dx,eax
  41778e:	repnz cld 
  417790:	movabs eax,ds:0xefdb8b7d7c7c7a74
  417799:	out    dx,eax
  41779a:	out    dx,eax
  41779b:	sub    BYTE PTR [rsi],ah
  41779d:	or     DWORD PTR [rax],eax
  41779f:	add    BYTE PTR [rax],al
  4177a1:	add    BYTE PTR [rax],al
  4177a3:	add    BYTE PTR [rax],al
  4177a5:	cmp    eax,esi
  4177a7:	out    dx,eax
  4177a8:	out    dx,eax
  4177a9:	out    dx,eax
  4177aa:	out    dx,eax
  4177ab:	rcl    cl,cl
  4177ad:	enter  0x85c7,0x81
  4177b1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4177b2:	out    dx,al
  4177b3:	in     eax,dx
  4177b4:	out    dx,eax
  4177b5:	out    dx,eax
  4177b6:	out    dx,eax
  4177b7:	out    dx,eax
  4177b8:	out    dx,eax
  4177b9:	out    dx,eax
  4177ba:	out    dx,eax
  4177bb:	out    dx,eax
  4177bc:	out    dx,eax
  4177bd:	out    dx,eax
  4177be:	cli    
  4177bf:	cmp    cl,BYTE PTR [rax-0x7f7e7f81]
  4177c5:	or     bl,0xef
  4177c8:	out    dx,eax
  4177c9:	out    dx,eax
  4177ca:	out    dx,eax
  4177cb:	cmp    edx,DWORD PTR [rdi]
	...
  4177d5:	sbb    bh,BYTE PTR [rdi-0x10101011]
  4177db:	jmp    0x4177b5
  4177dd:	fcom   st(7)
  4177df:	rol    edi,1
  4177e1:	mov    ch,BYTE PTR [rcx-0x100d0712]
  4177e7:	out    dx,eax
  4177e8:	out    dx,eax
  4177e9:	out    dx,eax
  4177ea:	out    dx,eax
  4177eb:	out    dx,eax
  4177ec:	repnz sti 
  4177ee:	(bad)  
  4177ef:	xchg   esp,eax
  4177f0:	(bad)  
  4177f1:	add    DWORD PTR [rbx+rax*4-0x10102c7e],0xffffffef
  4177f9:	out    dx,eax
  4177fa:	(bad)  
  4177fb:	(bad)  
  4177fc:	or     DWORD PTR [rax],eax
	...
  417806:	sub    eax,0xefefefe5
  41780b:	out    dx,eax
  41780c:	jmp    0x4177ea
  41780e:	(bad)  
  417810:	(bad)  
  417812:	enter  0x3ca4,0xfd
  417816:	std    
  417817:	std    
  417818:	std    
  417819:	std    
  41781a:	std    
  41781b:	and    DWORD PTR [rcx],esp
  41781d:	mov    al,0x92
  41781f:	xchg   esi,eax
  417821:	mov    dh,0x87
  417824:	shr    edi,cl
  417826:	out    dx,eax
  417827:	out    dx,eax
  417828:	out    dx,eax
  417829:	lock sub eax,0x9
  41782f:	add    BYTE PTR [rax],al
  417831:	add    BYTE PTR [rax],al
  417833:	add    BYTE PTR [rax],al
  417835:	add    BYTE PTR [rsi],dl
  417837:	xor    al,dh
  417839:	out    dx,eax
  41783a:	out    dx,eax
  41783b:	out    dx,eax
  41783c:	out    dx,eax
  41783d:	out    dx,eax
  41783e:	in     al,0xe2
  417840:	loop   0x417823
  417842:	(bad)  
  417844:	leave  
  417845:	movabs al,ds:0xc8c9abb1b1b1b1ab
  41784e:	rcl    ecx,1
  417850:	rcl    ecx,1
  417852:	shl    ebx,1
  417854:	out    dx,eax
  417855:	out    dx,eax
  417856:	out    dx,eax
  417857:	out    dx,eax
  417858:	out    dx,eax
  417859:	mov    eax,0x17
	...
  417866:	add    BYTE PTR [rsi],bl
  417868:	iret   
  417869:	out    dx,eax
  41786a:	out    dx,eax
  41786b:	out    dx,eax
  41786c:	out    dx,eax
  41786d:	out    dx,eax
  41786e:	out    dx,eax
  41786f:	jmp    0xffffffffe5265f5a
  417874:	loope  0x417852
  417876:	(bad)  
  417878:	fcom   st(7)
  41787a:	xlat   BYTE PTR ds:[rbx]
  41787b:	fcomp  st(1)
  41787d:	(bad)  
  41787f:	(bad)  
  417881:	loope  0x41786f
  417883:	out    dx,eax
  417884:	out    dx,eax
  417885:	out    dx,eax
  417886:	out    dx,eax
  417887:	out    dx,eax
  417888:	xor    dl,BYTE PTR [rax+rax*1]
	...
  417897:	add    BYTE PTR [rdx],bl
  417899:	(bad)  
  41789a:	out    dx,eax
  41789b:	out    dx,eax
  41789c:	out    dx,eax
  41789d:	out    dx,eax
  41789e:	out    dx,eax
  41789f:	out    dx,eax
  4178a0:	out    dx,eax
  4178a1:	jmp    0xffffffffe729618e
  4178a6:	out    0xe4,al
  4178a8:	in     al,0xe2
  4178aa:	loop   0x41788e
  4178ac:	loope  0x41788f
  4178ae:	loope  0x41788d
  4178b0:	(bad)  
  4178b1:	out    dx,eax
  4178b2:	out    dx,eax
  4178b3:	out    dx,eax
  4178b4:	out    dx,eax
  4178b5:	out    dx,eax
  4178b6:	out    dx,eax
  4178b7:	(bad)  
  4178b8:	(bad)  
	...
  4178c9:	sbb    dh,BYTE PTR [rcx]
  4178cb:	lock out dx,eax
  4178cd:	out    dx,eax
  4178ce:	out    dx,eax
  4178cf:	out    dx,eax
  4178d0:	out    dx,eax
  4178d1:	out    dx,eax
  4178d2:	out    dx,eax
  4178d3:	in     al,dx
  4178d4:	(bad)  
  4178d5:	jmp    0xffffffffe82a61c2
  4178da:	out    0xe6,al
  4178dc:	out    0xe9,eax
  4178de:	in     al,dx
  4178df:	out    dx,eax
  4178e0:	out    dx,eax
  4178e1:	out    dx,eax
  4178e2:	out    dx,eax
  4178e3:	out    dx,eax
  4178e4:	out    dx,eax
  4178e5:	out    dx,eax
  4178e6:	iret   
  4178e7:	(bad)  
	...
  4178f8:	add    BYTE PTR [rax],al
  4178fa:	adc    edi,DWORD PTR [rbx]
  4178fc:	sub    bh,ch
  4178fe:	out    dx,eax
  4178ff:	out    dx,eax
  417900:	out    dx,eax
  417901:	out    dx,eax
  417902:	out    dx,eax
  417903:	out    dx,eax
  417904:	out    dx,eax
  417905:	out    dx,eax
  417906:	out    dx,eax
  417907:	out    dx,eax
  417908:	out    dx,eax
  417909:	out    dx,eax
  41790a:	out    dx,eax
  41790b:	out    dx,eax
  41790c:	out    dx,eax
  41790d:	out    dx,eax
  41790e:	out    dx,eax
  41790f:	out    dx,eax
  417910:	out    dx,eax
  417911:	out    dx,eax
  417912:	out    dx,eax
  417913:	out    dx,eax
  417914:	in     eax,0x30
  417916:	and    eax,0x0
	...
  41792b:	adc    ebp,DWORD PTR [rip+0xffffffffefeff032]        # 0xfffffffff0316963
  417931:	out    dx,eax
  417932:	out    dx,eax
  417933:	out    dx,eax
  417934:	out    dx,eax
  417935:	out    dx,eax
  417936:	out    dx,eax
  417937:	out    dx,eax
  417938:	out    dx,eax
  417939:	out    dx,eax
  41793a:	out    dx,eax
  41793b:	out    dx,eax
  41793c:	out    dx,eax
  41793d:	out    dx,eax
  41793e:	out    dx,eax
  41793f:	out    dx,eax
  417940:	out    dx,eax
  417941:	out    dx,eax
  417942:	lock mov edi,0x1538
	...
  41795c:	add    BYTE PTR [rip+0xffffffffefe5d439],dl        # 0xfffffffff0274d9b
  417962:	out    dx,eax
  417963:	out    dx,eax
  417964:	out    dx,eax
  417965:	out    dx,eax
  417966:	out    dx,eax
  417967:	out    dx,eax
  417968:	out    dx,eax
  417969:	out    dx,eax
  41796a:	out    dx,eax
  41796b:	out    dx,eax
  41796c:	out    dx,eax
  41796d:	out    dx,eax
  41796e:	out    dx,eax
  41796f:	out    dx,eax
  417970:	in     eax,0xbe
  417972:	cmp    DWORD PTR [rbx],ebx
	...
  41798c:	add    BYTE PTR [rax],al
  41798e:	add    BYTE PTR [rdx],bl
  417990:	cs mov eax,0xefefe5db
  417996:	out    dx,eax
  417997:	out    dx,eax
  417998:	out    dx,eax
  417999:	out    dx,eax
  41799a:	out    dx,eax
  41799b:	out    dx,eax
  41799c:	lock in eax,0xd5
  41799f:	mov    eax,0x1b2e
	...
  4179c0:	add    BYTE PTR [rsi],dl
  4179c2:	sbb    eax,0xd4313b2e
  4179c7:	fcmovnu st,st(3)
  4179c9:	fstp   TBYTE PTR [rdi+0x1f2e2f31]
  4179cf:	adc    eax,0x0
	...
  4179f4:	add    BYTE PTR [rax],bl
  4179f6:	sbb    bl,BYTE PTR [rip+0x18181d1d]        # 0x18599719
  4179fc:	sbb    DWORD PTR [rcx],ebx
	...
  417a12:	(bad)  
  417a13:	(bad)  
  417a14:	(bad)  
  417a15:	(bad)  
  417a16:	(bad)  
  417a17:	inc    DWORD PTR [rax]
  417a19:	add    bh,bh
  417a1b:	inc    eax
  417a1d:	(bad)  
  417a1e:	(bad)  
  417a1f:	inc    DWORD PTR [rax]
  417a21:	add    bh,bh
  417a23:	inc    BYTE PTR [rax]
  417a25:	add    bh,bh
  417a27:	inc    DWORD PTR [rax]
  417a29:	add    bh,bh
  417a2b:	clc    
  417a2c:	add    BYTE PTR [rax],al
  417a2e:	(bad)  
  417a2f:	inc    DWORD PTR [rax]
  417a31:	add    bh,bh
  417a33:	loopne 0x417a35
  417a35:	add    BYTE PTR [rdi],cl
  417a37:	inc    DWORD PTR [rax]
  417a39:	add    bh,bh
  417a3b:	rol    BYTE PTR [rax],0x0
  417a3e:	(bad)  
  417a3f:	inc    DWORD PTR [rax]
  417a41:	add    bh,bh
  417a43:	add    BYTE PTR [rax],0x0
  417a46:	add    edi,edi
  417a48:	add    BYTE PTR [rax],al
  417a4a:	inc    DWORD PTR [rax]
  417a4c:	add    BYTE PTR [rax],al
  417a4e:	add    edi,edi
  417a50:	add    BYTE PTR [rax],al
  417a52:	inc    BYTE PTR [rax]
  417a54:	add    BYTE PTR [rax],al
  417a56:	add    bh,bh
  417a58:	add    BYTE PTR [rax],al
  417a5a:	cld    
  417a5b:	add    BYTE PTR [rax],al
  417a5d:	add    BYTE PTR [rax],al
  417a5f:	jg     0x417a61
  417a61:	add    al,bh
  417a63:	add    BYTE PTR [rax],al
  417a65:	add    BYTE PTR [rax],al
  417a67:	(bad)  
  417a68:	add    BYTE PTR [rax],al
  417a6a:	lock add BYTE PTR [rax],al
  417a6d:	add    BYTE PTR [rax],al
  417a6f:	(bad)  
  417a70:	add    BYTE PTR [rax],al
  417a72:	lock add BYTE PTR [rax],al
  417a75:	add    BYTE PTR [rax],al
  417a77:	(bad)  
  417a78:	add    BYTE PTR [rax],al
  417a7a:	loopne 0x417a7c
  417a7c:	add    BYTE PTR [rax],al
  417a7e:	add    BYTE PTR [rdi],cl
  417a80:	add    BYTE PTR [rax],al
  417a82:	rol    BYTE PTR [rax],0x0
  417a85:	add    BYTE PTR [rax],al
  417a87:	sldt   WORD PTR [rax]
  417a8a:	rol    BYTE PTR [rax],0x0
  417a8d:	add    BYTE PTR [rax],al
  417a8f:	(bad)  
  417a90:	add    BYTE PTR [rax],al
  417a92:	add    BYTE PTR [rax],0x0
  417a95:	add    BYTE PTR [rax],al
  417a97:	(bad)  
  417a98:	add    BYTE PTR [rax],al
  417a9a:	add    BYTE PTR [rax],0x0
  417a9d:	add    BYTE PTR [rax],al
  417a9f:	(bad)  
  417aa0:	add    BYTE PTR [rax],al
  417aa2:	add    BYTE PTR [rax],0x0
  417aa5:	add    BYTE PTR [rax],al
  417aa7:	add    eax,DWORD PTR [rax]
  417aa9:	add    BYTE PTR [rax+0x0],al
  417aaf:	add    eax,DWORD PTR [rax]
  417ab1:	add    BYTE PTR [rax],al
  417ab3:	add    BYTE PTR [rax],al
  417ab5:	add    BYTE PTR [rax],al
  417ab7:	add    eax,DWORD PTR [rax]
  417ab9:	add    BYTE PTR [rax],al
  417abb:	add    BYTE PTR [rax],al
  417abd:	add    BYTE PTR [rax],al
  417abf:	add    eax,DWORD PTR [rax]
  417ac1:	add    BYTE PTR [rax],al
  417ac3:	add    BYTE PTR [rax],al
  417ac5:	add    BYTE PTR [rax],al
  417ac7:	add    eax,DWORD PTR [rax]
  417ac9:	add    BYTE PTR [rax],al
  417acb:	add    BYTE PTR [rax],al
  417acd:	add    BYTE PTR [rax],al
  417acf:	add    eax,DWORD PTR [rax]
  417ad1:	add    BYTE PTR [rax],al
  417ad3:	add    BYTE PTR [rax],al
  417ad5:	add    BYTE PTR [rax],al
  417ad7:	add    eax,DWORD PTR [rax]
  417ad9:	add    BYTE PTR [rax],al
  417adb:	add    BYTE PTR [rax],al
  417add:	add    BYTE PTR [rax],al
  417adf:	add    eax,DWORD PTR [rax]
  417ae1:	add    BYTE PTR [rax],al
  417ae3:	add    BYTE PTR [rax],al
  417ae5:	add    BYTE PTR [rax],al
  417ae7:	add    eax,DWORD PTR [rax]
  417ae9:	add    BYTE PTR [rax],al
  417aeb:	add    BYTE PTR [rax],al
  417aed:	add    BYTE PTR [rax],al
  417aef:	add    eax,DWORD PTR [rax]
  417af1:	add    BYTE PTR [rax],al
  417af3:	add    BYTE PTR [rax],al
  417af5:	add    BYTE PTR [rax],al
  417af7:	add    eax,DWORD PTR [rax]
  417af9:	add    BYTE PTR [rax],al
  417afb:	add    BYTE PTR [rax],al
  417afd:	add    BYTE PTR [rax],al
  417aff:	add    eax,DWORD PTR [rax]
  417b01:	add    BYTE PTR [rax+0x0],al
  417b07:	(bad)  
  417b08:	add    BYTE PTR [rax],al
  417b0a:	add    BYTE PTR [rax],0x0
  417b0d:	add    BYTE PTR [rax],al
  417b0f:	(bad)  
  417b10:	add    BYTE PTR [rax],al
  417b12:	add    BYTE PTR [rax],0x0
  417b15:	add    BYTE PTR [rax],al
  417b17:	(bad)  
  417b18:	add    BYTE PTR [rax],al
  417b1a:	rol    BYTE PTR [rax],0x0
  417b1d:	add    BYTE PTR [rax],al
  417b1f:	sldt   WORD PTR [rax]
  417b22:	rol    BYTE PTR [rax],0x0
  417b25:	add    BYTE PTR [rax],al
  417b27:	sldt   WORD PTR [rax]
  417b2a:	loopne 0x417b2c
  417b2c:	add    BYTE PTR [rax],al
  417b2e:	add    BYTE PTR [rdi],bl
  417b30:	add    BYTE PTR [rax],al
  417b32:	loopne 0x417b34
  417b34:	add    BYTE PTR [rax],al
  417b36:	add    BYTE PTR [rdi],bl
  417b38:	add    BYTE PTR [rax],al
  417b3a:	lock add BYTE PTR [rax],al
  417b3d:	add    BYTE PTR [rax],al
  417b3f:	(bad)  
  417b40:	add    BYTE PTR [rax],al
  417b42:	lock add BYTE PTR [rax],al
  417b45:	add    BYTE PTR [rax],al
  417b47:	jg     0x417b49
  417b49:	add    al,bh
  417b4b:	add    BYTE PTR [rax],al
  417b4d:	add    BYTE PTR [rax],al
  417b4f:	inc    DWORD PTR [rax]
  417b51:	add    ah,bh
  417b53:	add    BYTE PTR [rax],al
  417b55:	add    BYTE PTR [rcx],al
  417b57:	inc    DWORD PTR [rax]
  417b59:	add    dh,bh
  417b5b:	add    BYTE PTR [rax],al
  417b5d:	add    BYTE PTR [rbx],al
  417b5f:	inc    DWORD PTR [rax]
  417b61:	add    bh,bh
  417b63:	add    BYTE PTR [rax],al
  417b65:	add    BYTE PTR [rdi],al
  417b67:	inc    DWORD PTR [rax]
  417b69:	add    bh,bh
  417b6b:	add    BYTE PTR [rax],0x0
  417b6e:	ud0    eax,DWORD PTR [rax]
  417b71:	add    bh,bh
  417b73:	loopne 0x417b75
  417b75:	add    BYTE PTR [rdi],bh
  417b77:	inc    DWORD PTR [rax]
  417b79:	add    bh,bh
  417b7b:	clc    
  417b7c:	add    BYTE PTR [rax],al
  417b7e:	(bad)  
  417b7f:	inc    DWORD PTR [rax]
  417b81:	add    bh,bh
  417b83:	inc    BYTE PTR [rax]
  417b85:	add    edi,edi
  417b87:	inc    DWORD PTR [rax]
  417b89:	add    bh,bh
  417b8b:	jmp    rax
  417b8d:	ud0    edi,edi
  417b90:	add    BYTE PTR [rax],al
  417b92:	sub    BYTE PTR [rax],al
  417b94:	add    BYTE PTR [rax],al
  417b96:	and    BYTE PTR [rax],al
  417b98:	add    BYTE PTR [rax],al
  417b9a:	add    BYTE PTR [rax],al
  417b9d:	add    BYTE PTR [rcx],al
  417b9f:	add    BYTE PTR [rax],cl
  417ba1:	add    BYTE PTR [rax],al
  417ba3:	add    BYTE PTR [rax],al
  417ba5:	add    BYTE PTR [rax],al
  417ba7:	add    al,0x0
	...
  417bb1:	add    BYTE PTR [rax],al
  417bb3:	add    DWORD PTR [rax],eax
  417bb5:	add    BYTE PTR [rax],al
  417bb7:	add    DWORD PTR [rax],eax
  417bb9:	add    BYTE PTR [rax],al
  417bbb:	add    BYTE PTR [rax],al
  417bbd:	add    BYTE PTR [rbx+rcx*1],cl
  417bc0:	or     eax,DWORD PTR [rax]
  417bc2:	sub    DWORD PTR [rdi],esp
  417bc4:	(bad)  
  417bc5:	add    dh,bh
  417bc7:	sti    
  417bc8:	sti    
  417bc9:	add    dh,dh
  417bcb:	hlt    
  417bcc:	hlt    
  417bcd:	add    dh,bh
  417bcf:	std    
  417bd0:	std    
  417bd1:	add    dl,dh
  417bd3:	icebp  
  417bd4:	icebp  
  417bd5:	add    dl,ch
  417bd7:	jmp    0xffffffffde257cc5
  417bdc:	fild   DWORD PTR [rax]
  417bde:	std    
  417bdf:	cli    
  417be0:	stc    
  417be1:	add    ah,bh
  417be3:	div    ebp
  417be5:	add    ah,dh
  417be7:	out    dx,eax
  417be8:	in     eax,dx
  417be9:	add    bl,cl
  417beb:	xchg   ebp,eax
  417bec:	jl     0x417bee
  417bee:	call   0xffffffffc44235bb
  417bf3:	scas   al,BYTE PTR es:[rdi]
  417bf4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  417bf5:	add    ch,dh
  417bf7:	loopne 0x417bd0
  417bf9:	add    ch,ch
  417bfb:	(bad)  
  417bfd:	add    bh,dl
  417bff:	mov    eax,0xdee5f400
  417c05:	add    dh,dh
  417c07:	out    0xe0,eax
  417c09:	add    al,ch
  417c0b:	fcmovnbe st,st(5)
  417c0d:	add    dl,bl
  417c0f:	ror    ebp,1
  417c11:	add    dl,bh
  417c13:	icebp  
  417c14:	in     eax,dx
  417c15:	add    BYTE PTR [rsi+rdx*2+0x5fca0023],bh
  417c1c:	sub    DWORD PTR [rax],eax
  417c1e:	mov    esp,0xca002758
  417c23:	(bad)  
  417c24:	sub    eax,DWORD PTR [rax]
  417c26:	rcr    BYTE PTR [rcx+rbp*1+0x0],0xbd
  417c2b:	pop    rdx
  417c2c:	sub    BYTE PTR [rax],al
  417c2e:	retf   
  417c2f:	(bad)  
  417c30:	sub    al,0x0
  417c32:	int    0x63
  417c34:	sub    eax,0x2d62cb00
  417c39:	add    bl,al
  417c3b:	pop    rsi
  417c3c:	sub    eax,DWORD PTR [rax]
  417c3e:	mov    edi,0xbb002b5c
  417c43:	pop    rbx
  417c44:	sub    al,BYTE PTR [rax]
  417c46:	int    0x64
  417c48:	(bad)  
  417c49:	add    bl,cl
  417c4b:	(bad)  
  417c4c:	add    BYTE PTR cs:[rsi-0x34ffd3a3],bh
  417c53:	xor    BYTE PTR fs:[rax],al
  417c56:	retf   0x3063
  417c59:	add    al,al
  417c5b:	pop    rsi
  417c5c:	sub    eax,0x3165cd00
  417c61:	add    bh,al
  417c63:	movsxd esi,DWORD PTR [rax]
  417c65:	add    bl,al
  417c67:	(bad)  
  417c68:	(bad)  
  417c69:	add    al,dl
  417c6b:	xor    eax,DWORD PTR [eax]
  417c6e:	int3   
  417c6f:	xor    al,BYTE PTR gs:[rax]
  417c72:	int3   
  417c73:	xor    ax,WORD PTR [rax]
  417c76:	retf   
  417c77:	xor    ax,WORD PTR [rax]
  417c7a:	retf   0x3365
  417c7d:	add    dh,al
  417c7f:	movsxd esi,DWORD PTR [rdx]
  417c81:	add    ch,al
  417c83:	movsxd esi,DWORD PTR [rdx]
  417c85:	add    dl,al
  417c87:	(bad)  
  417c88:	xor    DWORD PTR [rax],eax
  417c8a:	(bad)  
  417c8b:	push   0x67cc0035
  417c90:	xor    al,0x0
  417c92:	retf   0x3465
  417c95:	add    dl,cl
  417c97:	data16 xor al,0x0
  417c9a:	enter  0x3365,0x0
  417c9e:	(bad)  
  417c9f:	xor    eax,DWORD PTR fs:[rax]
  417ca2:	int    0x68
  417ca4:	xor    eax,0x3465c900
  417ca9:	add    al,cl
  417cab:	data16 xor al,0x0
  417cae:	(bad)  
  417caf:	ins    DWORD PTR es:[rdi],dx
  417cb0:	cmp    BYTE PTR [rax],al
  417cb2:	shr    BYTE PTR [rbx+0x37],cl
  417cb5:	add    dh,cl
  417cb7:	imul   esi,DWORD PTR [rsi],0x3668cd00
  417cbd:	add    al,dl
  417cbf:	imul   edi,DWORD PTR [rax],0x0
  417cc2:	(bad)  
  417cc3:	push   0x37
  417cc5:	add    bl,cl
  417cc7:	push   0x61be0036
  417ccc:	xor    eax,DWORD PTR [rax]
  417cce:	shr    BYTE PTR [rcx+rdi*1+0x0],cl
  417cd2:	iret   
  417cd3:	imul   edi,DWORD PTR [rcx],0x0
  417cd6:	(bad)  
  417cd7:	addr32 (bad) 
  417cd9:	add    bl,dl
  417cdb:	outs   dx,BYTE PTR ds:[rsi]
  417cdc:	cmp    eax,DWORD PTR [rax]
  417cde:	shr    BYTE PTR [rbp+0x3b],cl
  417ce1:	add    cl,dl
  417ce3:	ins    BYTE PTR es:[rdi],dx
  417ce4:	cmp    al,BYTE PTR [rax]
  417ce6:	shr    BYTE PTR [rsi+0x3c],cl
  417ce9:	add    cl,cl
  417ceb:	push   0x3a
  417ced:	add    dh,al
  417cef:	imul   edi,DWORD PTR [rcx],0x3866c200
  417cf5:	add    bh,bl
  417cf7:	jbe    0x417d3a
  417cf9:	add    al,bl
  417cfb:	jb     0x417d3c
  417cfd:	add    ch,dl
  417cff:	jno    0x417d3f
  417d01:	add    bh,cl
  417d03:	outs   dx,BYTE PTR ds:[rsi]
  417d04:	ds add al,ah
  417d07:	ja     0x417d4d
  417d09:	add    al,bl
  417d0b:	je     0x417d4e
  417d0d:	add    dl,bl
  417d0f:	jbe    0x417d55
  417d11:	add    ah,ah
  417d13:	jl     0x417d5d
  417d15:	add    bh,bl
  417d17:	jns    0x417d5f
  417d19:	add    ah,bl
  417d1b:	js     0x417d63
  417d1d:	add    ah,cl
  417d1f:	jno    0x417d64
  417d21:	add    dl,ah
  417d23:	jle    0x417d71
  417d25:	add    ah,al
  417d27:	outs   dx,BYTE PTR ds:[rsi]
  417d28:	rex.XB add r8b,bpl
  417d2b:	adc    DWORD PTR [rax+0x0],0xfffffff0
  417d2f:	mov    DWORD PTR [rbp+0x0],edx
  417d32:	in     al,dx
  417d33:	xchg   BYTE PTR [rbx+0x0],dl
  417d36:	shl    BYTE PTR [rdi+0x4a],cl
  417d39:	add    dh,dh
  417d3b:	xchg   ecx,eax
  417d3c:	pop    rbp
  417d3d:	add    dh,al
  417d3f:	je     0x417d8c
  417d41:	add    al,al
  417d43:	jo     0x417d8d
  417d45:	add    dl,bh
  417d47:	xchg   esp,eax
  417d48:	(bad)  
  417d49:	add    bl,dl
  417d4b:	jge    0x417d9f
  417d4d:	add    ah,ch
  417d4f:	xchg   edx,eax
  417d50:	gs add ah,al
  417d53:	jnp    0x417dab
  417d55:	add    bl,bl
  417d57:	mov    esp,DWORD PTR [rbx+0x0]
  417d5a:	(bad)  
  417d5b:	xchg   DWORD PTR [rcx+0x0],esp
  417d5e:	mov    esi,0xc800587a
  417d63:	sbb    DWORD PTR [rsi+0x0],0x739cf1
  417d6a:	fist   DWORD PTR [rcx-0x7833ff94]
  417d70:	data16 add dh,ah
  417d73:	movabs eax,ds:0xa0df007190cd007e
  417d7c:	add    DWORD PTR [rax],0x7c98d0
  417d82:	out    0xaa,al
  417d84:	mov    WORD PTR [rax],es
  417d86:	mov    ebx,0xdd00758c
  417d8b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  417d8c:	mov    eax,DWORD PTR [rax]
  417d8e:	fsubr  QWORD PTR [rax-0x5e2eff71]
  417d94:	mov    DWORD PTR [rax],eax
  417d96:	out    0xb4,eax
  417d98:	(bad)  
  417d99:	add    ch,dl
  417d9b:	stos   DWORD PTR es:[rdi],eax
  417d9c:	xchg   esi,eax
  417d9d:	add    dh,al
  417d9f:	lahf   
  417da0:	mov    WORD PTR [rax],es
  417da2:	out    0xbb,al
  417da4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  417da5:	add    ah,bl
  417da7:	mov    eax,0xaac500a6
  417dac:	popf   
  417dad:	add    dl,bh
  417daf:	fcmovne st,st(3)
  417db1:	add    BYTE PTR [rax],ah
  417db3:	sbb    al,0x1a
  417db5:	add    BYTE PTR [rdx+rcx*2+0x45],dl
  417db9:	add    BYTE PTR [rip+0x5c002c2f],dh        # 0x5c41a9ee
  417dbf:	push   rdx
  417dc0:	rex.WRB add r8b,r15b
  417dc3:	(bad)  
  417dc5:	add    ah,bl
  417dc7:	(bad)  
  417dc8:	mov    ebp,0xb3bdd100
  417dcd:	add    dh,ch
  417dcf:	fcmovnbe st,st(2)
  417dd1:	add    ah,dh
  417dd3:	loop   0x417dae
  417dd5:	add    dl,ch
  417dd7:	fcmovbe st,st(2)
  417dd9:	add    dh,al
  417ddb:	mov    edx,0xe9f700b4
  417de0:	loop   0x417de2
  417de2:	imul   al
  417de4:	loope  0x417de6
  417de6:	clc    
  417de7:	in     al,dx
  417de8:	out    0x0,al
  417dea:	in     eax,dx
  417deb:	jrcxz  0x417dcb
  417ded:	add    al,bh
  417def:	out    dx,al
  417df0:	jmp    0xffffffffea2f72f5
  417df5:	add    ah,bh
  417df7:	div    bl
  417df9:	add    dh,bh
  417dfb:	cli    
  417dfc:	clc    
  417dfd:	add    bl,ch
  417dff:	out    0xe5,eax
  417e01:	add    ah,ch
  417e03:	(bad)  
  417e04:	jmp    0xffffffffc5074509
  417e09:	add    bh,bh
  417e0b:	movabs ds:0xacfe0073a3fe006f,eax
  417e14:	jge    0x417e16
  417e16:	sti    
  417e17:	leave  
  417e18:	scas   al,BYTE PTR es:[rdi]
  417e19:	add    cl,ch
  417e1b:	shr    DWORD PTR [rax+rax*1+0x6b7381],0x8b
  417e23:	jl     0x417e99
  417e25:	add    BYTE PTR [rcx-0x5dff635a],bh
  417e2b:	xchg   edx,eax
  417e2c:	mov    DWORD PTR [rax],eax
  417e2e:	(bad)  
  417e2f:	shl    BYTE PTR [rbp-0x40352100],0x0
  417e36:	mov    dh,0xa5
  417e38:	pushf  
  417e39:	add    cl,ch
  417e3b:	(bad)  
  417e3c:	retf   0xe700
  417e3f:	ror    eax,cl
  417e41:	add    dl,dh
  417e43:	fst    st(2)
  417e45:	add    al,dh
  417e47:	(bad)  
  417e49:	add    bh,ch
  417e4b:	fcmovnbe st,st(0)
  417e4d:	add    dl,dh
  417e4f:	(bad)  
  417e51:	add    cl,dh
  417e53:	fst    st(2)
  417e55:	add    ah,ch
  417e57:	fxch   st(6)
  417e59:	add    cl,dh
  417e5b:	(bad)  
  417e5d:	add    BYTE PTR [rbx-0xcff5b54],bh
  417e63:	loopne 0x417e3b
  417e65:	add    dl,dh
  417e67:	(bad)  
  417e69:	add    bl,dh
  417e6b:	loop   0x417e46
  417e6d:	add    ch,dh
  417e6f:	in     eax,0xdc
  417e71:	add    ch,dh
  417e73:	out    0xde,al
  417e75:	add    bl,dh
  417e77:	in     eax,0xdd
  417e79:	add    ch,ah
  417e7b:	fcom   st(1)
  417e7d:	add    bh,dh
  417e7f:	(bad)  
  417e80:	jrcxz  0x417e82
  417e82:	imul   bl
  417e84:	in     eax,0x0
  417e86:	hlt    
  417e87:	jmp    0xffffffffc30a7f6f
  417e8c:	mov    esi,0x89b3f700
  417e91:	add    bh,bh
  417e93:	jrcxz  0x417e67
  417e95:	add    BYTE PTR [rdx-0x7cff685f],dh
  417e9b:	ja     0x417f0d
  417e9d:	add    cl,ah
  417e9f:	int    0xc1
  417ea1:	add    cl,cl
  417ea3:	mov    bh,0xac
  417ea5:	add    BYTE PTR [rdx+rbp*2+0x64],dh
  417ea9:	add    ch,dh
  417eab:	in     al,0xda
  417ead:	add    BYTE PTR [rax+0x5b],ah
  417eb0:	pop    rax
  417eb1:	add    bh,dh
  417eb3:	in     al,dx
  417eb4:	in     eax,0x0
  417eb6:	(bad)  
  417eb7:	div    cl
  417eb9:	add    dh,dh
  417ebb:	icebp  
  417ebc:	out    dx,al
  417ebd:	add    bh,bh
  417ebf:	mov    ch,0x81
  417ec1:	add    BYTE PTR [rcx+rdi*4-0x4400ff49],bh
  417ec8:	xchg   DWORD PTR [rax],eax
  417eca:	cld    
  417ecb:	clc    
  417ecc:	cmc    
  417ecd:	add    dh,bh
  417ecf:	mov    edi,0xc9ff008d
  417ed4:	xchg   edi,eax
  417ed5:	add    ch,bh
  417ed7:	cmc    
  417ed8:	out    dx,al
  417ed9:	add    bh,bh
  417edb:	(bad)  
  417edc:	(bad)  
  417edd:	add    BYTE PTR [rax],al
  417edf:	add    BYTE PTR [rax],al
  417ee1:	add    bl,dh
  417ee3:	repnz icebp 
  417ee5:	add    bh,bh
  417ee7:	xlat   BYTE PTR ds:[rbx]
  417ee8:	stos   DWORD PTR es:[rdi],eax
  417ee9:	add    bh,bh
  417eeb:	rcr    DWORD PTR [rax+rax*1+0xc7e9ff],1
  417ef2:	push   rsi
  417ef4:	call   0xffffffffb72a7df9
  417ef9:	add    bh,bh
  417efb:	test   bl,0x0
  417efe:	(bad)  
  417eff:	sti    
  417f00:	rol    DWORD PTR [rax],1
  417f02:	(bad)  
  417f03:	std    
  417f04:	in     eax,0x0
  417f06:	(bad)  
  417f07:	(bad)  
  417f08:	in     eax,dx
  417f09:	add    bh,bh
  417f0b:	(bad)  
  417f0c:	std    
  417f0d:	add    dh,dh
  417f0f:	div    ch
  417f11:	add    ah,dh
  417f13:	hlt    
  417f14:	repz add ch,ch
  417f17:	in     eax,dx
  417f18:	in     al,dx
  417f19:	add    ah,bh
  417f1b:	(bad)  
  417f1c:	inc    DWORD PTR [rax]
  417f1e:	out    dx,eax
  417f1f:	repnz repnz add bh,ch
  417f23:	icebp  
  417f24:	icebp  
  417f25:	add    dh,dh
  417f27:	div    edi
  417f29:	add    ah,dh
  417f2b:	cmc    
  417f2c:	cmc    
  417f2d:	add    bh,dh
  417f2f:	sti    
  417f30:	cld    
  417f31:	add    dh,dh
  417f33:	cli    
  417f34:	sti    
  417f35:	add    al,dh
  417f37:	hlt    
  417f38:	cmc    
  417f39:	add    ah,ah
  417f3b:	(bad)  
  417f3c:	in     al,dx
  417f3d:	add    dl,bh
  417f3f:	std    
  417f40:	inc    BYTE PTR [rax]
  417f42:	call   0xffffffffee426c32
  417f47:	repz cmc 
  417f49:	add    ch,dh
  417f4b:	cld    
  417f4c:	inc    DWORD PTR [rax]
  417f4e:	cmc    
  417f4f:	stc    
  417f50:	sti    
  417f51:	add    cl,dh
  417f53:	cmc    
  417f54:	test   DWORD PTR [rax],0xf9f8f6
  417f5a:	in     al,dx
  417f5b:	out    dx,al
  417f5c:	out    dx,eax
  417f5d:	add    cl,dh
  417f5f:	idiv   cl
  417f61:	add    ch,ch
  417f63:	lock repnz add bh,bl
  417f67:	loop   0x417f4d
  417f69:	add    bh,dh
  417f6b:	stc    
  417f6c:	sti    
  417f6d:	add    ch,ch
  417f6f:	out    dx,eax
  417f70:	icebp  
  417f71:	add    ch,dh
  417f73:	div    bh
  417f75:	add    bl,dh
  417f77:	hlt    
  417f78:	cmc    
  417f79:	add    dl,dh
  417f7b:	repz hlt 
  417f7d:	add    cl,dh
  417f7f:	repnz repz add al,dh
  417f83:	icebp  
  417f84:	repnz add cl,bh
  417f87:	stc    
  417f88:	cli    
  417f89:	add    bh,bh
  417f8b:	(bad)  
  417f8c:	inc    DWORD PTR [rax]
  417f8e:	icebp  
  417f8f:	icebp  
  417f90:	icebp  
  417f91:	add    BYTE PTR [rdi+0x77],dh
  417f94:	ja     0x417f96
  417f96:	ins    BYTE PTR es:[rdi],dx
  417f97:	ins    BYTE PTR es:[rdi],dx
  417f98:	ins    BYTE PTR es:[rdi],dx
  417f99:	add    BYTE PTR [rbp+0x55],dl
  417f9c:	push   rbp
  417f9d:	add    BYTE PTR [rsp+rax*2+0x44],al
  417fa1:	add    BYTE PTR [rsp+rdi*1],bh
  417fa4:	cmp    al,0x0
  417fa6:	ss ss add BYTE PTR ss:[rsi],dl
  417fab:	(bad)  
  417fac:	(bad)  
  417fad:	add    BYTE PTR [rdx],al
  417faf:	add    al,BYTE PTR [rdx]
  417fb1:	add    BYTE PTR [rax],al
  417fb3:	add    BYTE PTR [rax],al
  417fb5:	add    bh,bh
  417fb7:	(bad)  
  417fb8:	inc    DWORD PTR [rax]
  417fba:	std    
  417fbb:	std    
  417fbc:	std    
  417fbd:	std    
  417fbe:	std    
  417fbf:	std    
  417fc0:	std    
  417fc1:	std    
  417fc2:	std    
  417fc3:	std    
  417fc4:	std    
  417fc5:	std    
  417fc6:	std    
  417fc7:	std    
  417fc8:	std    
  417fc9:	std    
  417fca:	std    
  417fcb:	std    
  417fcc:	std    
  417fcd:	std    
  417fce:	std    
  417fcf:	std    
  417fd0:	std    
  417fd1:	std    
  417fd2:	std    
  417fd3:	std    
  417fd4:	std    
  417fd5:	std    
  417fd6:	std    
  417fd7:	std    
  417fd8:	std    
  417fd9:	std    
  417fda:	std    
  417fdb:	std    
  417fdc:	std    
  417fdd:	std    
  417fde:	std    
  417fdf:	std    
  417fe0:	std    
  417fe1:	std    
  417fe2:	std    
  417fe3:	std    
  417fe4:	mov    eax,0xfdfd0102
  417fe9:	std    
  417fea:	std    
  417feb:	std    
  417fec:	std    
  417fed:	cld    
  417fee:	cli    
  417fef:	std    
  417ff0:	std    
  417ff1:	std    
  417ff2:	std    
  417ff3:	std    
  417ff4:	std    
  417ff5:	std    
  417ff6:	std    
  417ff7:	std    
  417ff8:	std    
  417ff9:	std    
  417ffa:	std    
  417ffb:	std    
  417ffc:	std    
  417ffd:	std    
  417ffe:	std    
  417fff:	std    
  418000:	std    
  418001:	std    
  418002:	mov    eax,0xa2a1bab8
  418007:	movabs ds:0xfd029f9e10a2a2a2,al
  418010:	add    bh,ch
  418012:	std    
  418013:	std    
  418014:	std    
  418015:	std    
  418016:	std    
  418017:	std    
  418018:	std    
  418019:	std    
  41801a:	std    
  41801b:	std    
  41801c:	std    
  41801d:	std    
  41801e:	std    
  41801f:	std    
  418020:	std    
  418021:	mov    ebx,0xbb2aaa0
  418026:	(bad)  
  418027:	(bad)  
  418028:	(bad)  
  418029:	(bad)  
  41802a:	(bad)  
  41802b:	(bad)  
  41802c:	or     ebp,DWORD PTR [rbp-0x27f45f0]
  418032:	idiv   ebp
  418034:	std    
  418035:	std    
  418036:	std    
  418037:	std    
  418038:	std    
  418039:	std    
  41803a:	std    
  41803b:	std    
  41803c:	std    
  41803d:	std    
  41803e:	std    
  41803f:	std    
  418040:	popf   
  418041:	movabs ds:0xedd7ebebd7d6d6c0,al
  41804a:	in     eax,dx
  41804b:	jrcxz  0x418030
  41804d:	jrcxz  0x418025
  41804f:	mov    dl,0x10
  418051:	(bad)  
  418052:	std    
  418053:	cli    
  418054:	std    
  418055:	std    
  418056:	std    
  418057:	std    
  418058:	std    
  418059:	std    
  41805a:	std    
  41805b:	std    
  41805c:	std    
  41805d:	std    
  41805e:	std    
  41805f:	movabs eax,ds:0x69730e08e3d6d6b2
  418068:	data16 outs dx,WORD PTR ds:[rsi]
  41806b:	js     0x418026
  41806d:	xlat   BYTE PTR ds:[rbx]
  41806e:	jrcxz  0x418046
  418070:	(bad)  
  418071:	lods   eax,DWORD PTR ds:[rsi]
  418072:	fwait
  418073:	std    
  418074:	cli    
  418075:	std    
  418076:	std    
  418077:	std    
  418078:	std    
  418079:	std    
  41807a:	std    
  41807b:	std    
  41807c:	std    
  41807d:	std    
  41807e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  41807f:	rcl    dh,0xd6
  418082:	xchg   ecx,eax
  418083:	js     0x4180e6
  418085:	and    eax,0x616a4425
  41808a:	(bad)  
  41808b:	sbb    al,0x44
  41808d:	ins    DWORD PTR es:[rdi],dx
  41808e:	and    ebx,0xffffffe3
  418091:	(bad)  
  418092:	lods   eax,DWORD PTR ds:[rsi]
  418093:	fwait
  418094:	std    
  418095:	idiv   ebp
  418097:	std    
  418098:	std    
  418099:	std    
  41809a:	std    
  41809b:	std    
  41809c:	std    
  41809d:	popf   
  41809e:	rcl    dh,0xd6
  4180a1:	adc    al,0x6a
  4180a3:	and    eax,0x7c4e2a25
  4180a8:	xlat   BYTE PTR ds:[rbx]
  4180a9:	or     ebp,DWORD PTR [rax+0x20]
  4180ac:	and    BYTE PTR [rsp+rax*2],bl
  4180af:	jbe    0x418088
  4180b1:	jrcxz  0x418089
  4180b3:	lods   eax,DWORD PTR ds:[rsi]
  4180b4:	(bad)  
  4180b5:	std    
  4180b6:	std    
  4180b7:	std    
  4180b8:	std    
  4180b9:	std    
  4180ba:	std    
  4180bb:	std    
  4180bc:	popf   
  4180bd:	mov    dl,0xd6
  4180bf:	jmp    0x3266dc7d
  4180c4:	xor    bl,BYTE PTR [rsi]
  4180c6:	imul   edx,DWORD PTR [rbx+0x320d0303],0x25203232
  4180d0:	outs   dx,DWORD PTR ds:[rsi]
  4180d1:	xlat   BYTE PTR ds:[rbx]
  4180d2:	(bad)  
  4180d3:	(bad)  
  4180d4:	movabs ds:0xa2fdfdfdfdfdfc7f,al
  4180dd:	add    edx,esi
  4180df:	adc    BYTE PTR [rbx+0x20],bl
  4180e2:	xor    ch,BYTE PTR [rip+0xffffffffc2612d2d]        # 0xffffffffc2a2ae15
  4180e8:	add    ebx,esi
  4180ea:	jne    0x41810a
  4180ec:	sub    eax,0x1c32322d
  4180f1:	jno    0x4180e0
  4180f3:	(bad)  
  4180f4:	or     eax,DWORD PTR [rbx-0x20202ff]
  4180fa:	std    
  4180fb:	popf   
  4180fc:	(bad)  
  4180fd:	(bad)  
  4180ff:	ins    DWORD PTR es:[rdi],dx
  418100:	and    BYTE PTR [rdx],dh
  418102:	sub    eax,0x2d2d2d2d
  418107:	ins    DWORD PTR es:[rdi],dx
  418108:	or     eax,0x2d2d3f75
  41810d:	sub    eax,0x252a322d
  418112:	jnp    0x4180ea
  418114:	(bad)  
  418115:	movabs ds:0xde0310fdfdfdfc81,al
  41811e:	cwde   
  41811f:	sub    dh,BYTE PTR [rdx]
  418121:	sub    eax,0x2d2d2d2d
  418126:	sub    eax,0x1e1d1e1e
  41812b:	sub    eax,0x2d2d2d2d
  418130:	xor    ah,BYTE PTR [rax]
  418132:	(bad)  
  418133:	xchg   ecx,eax
  418134:	(bad)  
  418135:	or     eax,DWORD PTR [rbx-0x62020203]
  41813b:	lods   eax,DWORD PTR ds:[rsi]
  41813c:	add    edx,esi
  41813e:	ins    DWORD PTR es:[rdi],dx
  41813f:	and    BYTE PTR [rip+0x2d2d3f3f],ch        # 0x2d6ec084
  418145:	sub    eax,0x98980c2d
  41814a:	fs (bad) 
  41814c:	sub    eax,0x2d2d2d2d
  418151:	xor    ah,BYTE PTR [rip+0x10d6de7b]        # 0x11185fd2
  418157:	jle    0x41814f
  418159:	std    
  41815a:	movabs ds:0x3f3f3f2d3210038d,al
  418163:	sub    eax,0x88322d2d
  418168:	add    eax,DWORD PTR [rbx]
  41816a:	ins    BYTE PTR es:[rdi],dx
  41816b:	sbb    eax,0x2d2d2d2d
  418170:	sub    eax,0xd66d202d
  418175:	fisub  WORD PTR [rdx-0x5d020667]
  41817b:	(bad)  
  41817f:	(bad)  
  418180:	rex.W (bad) 
  418182:	sub    eax,0x2d2d2d2d
  418187:	(bad)  
  418188:	add    eax,DWORD PTR [rbx]
  41818a:	jb     0x4181a9
  41818c:	sub    eax,0x3f2d2d2d
  418191:	sub    eax,0xde8c612a
  418196:	lods   eax,DWORD PTR ds:[rsi]
  418197:	mov    bh,0xfb
  418199:	std    
  41819a:	movabs ds:0x2d3f484c2d750303,al
  4181a3:	sub    eax,0x731e2d2d
  4181a8:	loopne 0x4181ad
  4181aa:	(bad)  
  4181ab:	addr32 (bad) 
  4181ad:	sub    eax,0x3f3f2d2d
  4181b2:	sub    eax,0xb2de104d
  4181b7:	test   eax,0x3a2fdfb
  4181bc:	add    esi,DWORD PTR [rax+0x3f]
  4181bf:	rex.W
  4181c0:	rex.W (bad) 
  4181c2:	sub    eax,0x2d2d2d2d
  4181c7:	rex.WRB
  4181c8:	fwait
  4181c9:	jmp    0x1ea948d1
  4181ce:	sub    eax,0x2d3f3f2d
  4181d3:	rex.WR cmps QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
  4181d5:	add    esi,DWORD PTR [rdx-0x5d0204f2]
  4181db:	add    eax,DWORD PTR [rbx]
  4181dd:	jb     0x418227
  4181df:	push   rcx
  4181e0:	rex.W (bad) 
  4181e2:	sub    eax,0x2d2d2d2d
  4181e7:	(bad)  
  4181e8:	rex.WRB (bad) 
  4181ea:	fiadd  WORD PTR [rbx]
  4181ec:	(bad)  
  4181ed:	push   0x4c3f2d1e
  4181f2:	(bad)  
  4181f3:	rex.WR adc BYTE PTR [rbx],r8b
  4181f6:	mov    dl,0xa9
  4181f8:	cli    
  4181f9:	std    
  4181fa:	movabs ds:0x2d48515550770303,al
  418203:	sub    eax,0x2d2d2d2d
  418208:	(bad)  
  418209:	rex.WRB test BYTE PTR [r11],r8b
  41820c:	add    ebp,DWORD PTR [rdx+0x48482d4c]
  418212:	(bad)  
  418213:	pop    rcx
  418214:	lods   eax,DWORD PTR ds:[rsi]
  418215:	add    esi,DWORD PTR [rdx-0x5d020757]
  41821b:	pop    QWORD PTR [rbx]
  41821d:	jge    0x418277
  41821f:	pop    rdx
  418220:	push   rbp
  418221:	rex.W (bad) 
  418223:	(bad)  
  418224:	(bad)  
  418225:	(bad)  
  418226:	sub    eax,0x611e2d2d
  41822b:	xchg   ecx,eax
  41822c:	add    eax,DWORD PTR [rbx]
  41822e:	ins    BYTE PTR es:[rdi],dx
  41822f:	(bad)  
  418230:	rex.W push rcx
  418232:	(bad)  
  418233:	push   0xffffffff9cad038f
  418238:	idiv   ch
  41823a:	stos   BYTE PTR es:[rdi],al
  41823b:	mov    eax,DWORD PTR [rbx]
  41823d:	add    esp,DWORD PTR [rbp+0x5e]
  418240:	pop    rdx
  418241:	push   rax
  418242:	rex.WR outs dx,DWORD PTR ds:[rsi]
  418244:	jne    0x4182c0
  418246:	fs (bad) 
  418248:	sub    eax,0x3b92d2d
  41824d:	add    esi,DWORD PTR [rdi+0x2c]
  418250:	push   rcx
  418251:	push   rbp
  418252:	ds jb  0x418258
  418255:	add    esp,DWORD PTR [rdx+0x15fdfd81]
  41825b:	lods   eax,DWORD PTR ds:[rsi]
  41825c:	add    eax,DWORD PTR [rbx]
  41825e:	xchg   edi,eax
  41825f:	pop    rbp
  418260:	pop    rbp
  418261:	pop    rdx
  418262:	pop    rdi
  418263:	mov    ah,0xe9
  418265:	add    ebx,DWORD PTR [rax+0x591e1e1d]
  41826b:	mov    WORD PTR [rbx],es
  41826d:	add    esi,DWORD PTR [rax+rcx*2+0x58]
  418271:	pop    rax
  418272:	push   rbp
  418273:	(bad)  
  418274:	add    eax,DWORD PTR [rbx]
  418276:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  418277:	stc    
  418278:	std    
  418279:	std    
  41827a:	std    
  41827b:	movabs ds:0x795a6063958f0303,al
  418284:	(bad)  
  418285:	add    eax,DWORD PTR [rbx]
  418287:	ja     0x4182e8
  418289:	fs or  eax,0x6cd70303
  41828f:	push   rbp
  418290:	pop    rdx
  418291:	push   rbx
  418292:	jb     0x418297
  418294:	add    esi,DWORD PTR [rdx-0x2020249]
  41829a:	std    
  41829b:	popf   
  41829c:	mov    bl,0x3
  41829e:	add    esi,DWORD PTR [rsi+0x67639494]
  4182a4:	xchg   ebx,eax
  4182a5:	add    eax,DWORD PTR [rbx]
  4182a7:	add    ecx,DWORD PTR [rdi-0x21fcfc3c]
  4182ad:	sahf   
  4182ae:	pop    rsi
  4182af:	pop    rsi
  4182b0:	pop    rsi
  4182b1:	mov    DWORD PTR gs:[rbx],0xfdbd1003
  4182b8:	std    
  4182b9:	std    
  4182ba:	std    
  4182bb:	std    
  4182bc:	movabs ds:0x6e94c1c1cd030303,al
  4182c5:	adc    eax,0xdededee3
  4182ca:	fsubp  st(1),st
  4182cc:	adc    BYTE PTR [rbx+0x60],ch
  4182cf:	movsxd esp,DWORD PTR [rbx-0x4a]
  4182d2:	add    eax,DWORD PTR [rbx]
  4182d4:	mov    dl,0x9b
  4182d6:	std    
  4182d7:	std    
  4182d8:	std    
  4182d9:	std    
  4182da:	std    
  4182db:	std    
  4182dc:	popf   
  4182dd:	stos   BYTE PTR es:[rdi],al
  4182de:	add    eax,DWORD PTR [rbx]
  4182e0:	add    ecx,eax
  4182e2:	int3   
  4182e3:	mov    bl,0xb5
  4182e6:	cwde   
  4182e7:	adc    DWORD PTR [rcx],0x11
  4182ea:	sahf   
  4182eb:	cwde   
  4182ec:	xchg   esi,eax
  4182ed:	xchg   esp,eax
  4182ee:	xchg   esp,eax
  4182ef:	xchg   esi,eax
  4182f0:	enter  0x303,0x8f
  4182f4:	movabs al,ds:0xfdfdfdfdfdfdfdc2
  4182fd:	popf   
  4182fe:	mov    bl,0x3
  418300:	add    eax,DWORD PTR [rbx]
  418302:	ror    ebp,cl
  418304:	iret   
  418305:	retf   
  418306:	int3   
  418307:	mov    ch,0xc5
  41830a:	(bad)
  41830d:	(bad)
  418310:	add    eax,DWORD PTR [rbx]
  418312:	add    esp,DWORD PTR [rdx-0x2020257]
  418318:	std    
  418319:	std    
  41831a:	std    
  41831b:	std    
  41831c:	std    
  41831d:	std    
  41831e:	popf   
  41831f:	mov    bl,0x3
  418321:	add    eax,DWORD PTR [rbx]
  418323:	add    edx,ebx
  418325:	rcl    cl,cl
  418327:	ror    bh,1
  418329:	iret   
  41832a:	iret   
  41832b:	iret   
  41832c:	int    0xc7
  41832e:	add    eax,DWORD PTR [rbx]
  418330:	add    eax,DWORD PTR [rbx]
  418332:	movabs ds:0xfdfdfdfdfdfdfd88,al
  41833b:	std    
  41833c:	std    
  41833d:	std    
  41833e:	std    
  41833f:	popf   
  418340:	stos   BYTE PTR es:[rdi],al
  418341:	pop    QWORD PTR [rbx]
  418343:	add    eax,DWORD PTR [rbx]
  418345:	add    eax,DWORD PTR [rbx]
  418347:	add    eax,DWORD PTR [rbx]
  418349:	add    eax,DWORD PTR [rbx]
  41834b:	add    eax,DWORD PTR [rbx]
  41834d:	add    eax,DWORD PTR [rbx]
  41834f:	add    ecx,DWORD PTR [rbp-0x20262f0]
  418355:	std    
  418356:	std    
  418357:	std    
  418358:	std    
  418359:	std    
  41835a:	std    
  41835b:	std    
  41835c:	std    
  41835d:	std    
  41835e:	std    
  41835f:	std    
  418360:	popf   
  418361:	movabs ds:0x30303030303c4ad,al
  41836a:	add    eax,DWORD PTR [rbx]
  41836c:	add    eax,DWORD PTR [rbx]
  41836e:	(bad)  
  41836f:	movabs ds:0xfdfdfdfdfdfdfda1,al
  418378:	std    
  418379:	std    
  41837a:	std    
  41837b:	std    
  41837c:	std    
  41837d:	std    
  41837e:	std    
  41837f:	std    
  418380:	std    
  418381:	std    
  418382:	popf   
  418383:	movabs ds:0x8d8f030303c7b2aa,al
  41838c:	lods   eax,DWORD PTR ds:[rsi]
  41838d:	adc    BYTE PTR [rdi-0x2020203],ah
  418393:	std    
  418394:	std    
  418395:	std    
  418396:	std    
  418397:	std    
  418398:	std    
  418399:	std    
  41839a:	std    
  41839b:	std    
  41839c:	std    
  41839d:	std    
  41839e:	std    
  41839f:	std    
  4183a0:	std    
  4183a1:	std    
  4183a2:	std    
  4183a3:	std    
  4183a4:	adc    eax,0xa2a2a2ad
  4183a9:	movabs ds:0xfdfdfdfdfd9daaa2,al
  4183b2:	std    
  4183b3:	std    
  4183b4:	std    
  4183b5:	std    
  4183b6:	std    
  4183b7:	std    
  4183b8:	std    
  4183b9:	std    
  4183ba:	(bad)  
  4183bb:	(bad)  
  4183bc:	(bad)  
  4183bd:	(bad)  
  4183be:	inc    eax
  4183c0:	(bad)  
  4183c1:	(bad)  
  4183c2:	inc    DWORD PTR [rax]
  4183c4:	add    edi,edi
  4183c6:	inc    BYTE PTR [rax]
  4183c8:	add    BYTE PTR [rdi-0x4],bh
  4183cb:	add    BYTE PTR [rax],al
  4183cd:	(bad)  
  4183ce:	clc    
  4183cf:	add    BYTE PTR [rax],al
  4183d1:	(bad)  
  4183d2:	lock add BYTE PTR [rax],al
  4183d5:	pavgb  mm0,QWORD PTR [rax]
  4183d8:	add    BYTE PTR [rdi],cl
  4183da:	rol    BYTE PTR [rax],0x0
  4183dd:	(bad)  
  4183de:	rol    BYTE PTR [rax],0x0
  4183e1:	(bad)  
  4183e2:	add    BYTE PTR [rax],0x0
  4183e5:	add    eax,DWORD PTR [rax+0x30000]
  4183eb:	add    BYTE PTR [rax],al
  4183ed:	add    DWORD PTR [rax],eax
  4183ef:	add    BYTE PTR [rax],al
  4183f1:	add    DWORD PTR [rax],eax
  4183f3:	add    BYTE PTR [rax],al
  4183f5:	add    DWORD PTR [rax],eax
  4183f7:	add    BYTE PTR [rax],al
  4183f9:	add    DWORD PTR [rax],eax
  4183fb:	add    BYTE PTR [rax],al
  4183fd:	add    DWORD PTR [rax],eax
  4183ff:	add    BYTE PTR [rax],al
  418401:	add    DWORD PTR [rax],eax
  418403:	add    BYTE PTR [rax],al
  418405:	add    DWORD PTR [rax],eax
  418407:	add    BYTE PTR [rax],al
  418409:	add    DWORD PTR [rax],eax
  41840b:	add    BYTE PTR [rax],al
  41840d:	add    eax,DWORD PTR [rax]
  41840f:	add    BYTE PTR [rax],al
  418411:	add    eax,DWORD PTR [rax-0x7ff90000]
  418417:	add    BYTE PTR [rax],al
  418419:	(bad)  
  41841a:	rol    BYTE PTR [rax],0x0
  41841d:	xadd   BYTE PTR [rax],al
  418420:	add    BYTE PTR [rdi],cl
  418422:	loopne 0x418424
  418424:	add    BYTE PTR [rdi],bl
  418426:	lock add BYTE PTR [rax],al
  418429:	(bad)  
  41842a:	clc    
  41842b:	add    BYTE PTR [rax],al
  41842d:	jg     0x41842b
  41842f:	add    BYTE PTR [rcx],al
  418431:	(bad)  
  418432:	inc    DWORD PTR [rax]
  418434:	(bad)  
  418435:	(bad)  
  418436:	inc    eax
  418438:	(bad)  
  418439:	dec    DWORD PTR [rbx]
  41843b:	add    BYTE PTR [rcx],al
  41843e:	add    BYTE PTR [rax],al
  418440:	add    bh,bh
  418442:	(bad)  
  418443:	(bad)  
  418444:	inc    DWORD PTR [rcx]
  418446:	add    BYTE PTR [rax],al
  418448:	add    BYTE PTR [rax],al
  41844a:	add    BYTE PTR [rax],al
  41844c:	add    BYTE PTR [rdx+rax*1],cl
  41844f:	add    BYTE PTR [rax],al
  418451:	add    BYTE PTR [rcx+0x53],dl
  418454:	jns    0x4184c9
  418456:	je     0x4184bd
  418458:	ins    DWORD PTR es:[rdi],dx
  418459:	cs rex.R jb 0x4184be
  41845d:	ja     0x4184c8
  41845f:	outs   dx,BYTE PTR ds:[rsi]
  418460:	addr32 sub al,0x20
  418463:	push   rsi
  418464:	gs jb  0x4184da
  418467:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  41846e:	xor    BYTE PTR cs:[rsi],ch
  418471:	xor    BYTE PTR [rax+riz*1],ch
  418474:	rex.XB jne 0x4184e3
  418477:	je     0x4184ee
  418479:	jb     0x4184e0
  41847b:	cmp    eax,0x7475656e
  418480:	jb     0x4184e3
  418482:	ins    BYTE PTR es:[rdi],dx
  418483:	sub    al,0x20
  418485:	push   rax
  418486:	jne    0x4184ea
  418488:	ins    BYTE PTR es:[rdi],dx
  418489:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  418490:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  418494:	(bad)  
  418495:	xor    BYTE PTR [rbx],dh
  418497:	xor    ax,0x3766
  41849b:	xor    WORD PTR [rcx],si
  41849e:	fs xor eax,0x61336130
  4184a4:	add    eax,0x1
  4184a9:	adc    edx,DWORD PTR [rbx+0x79]
  4184ac:	jae    0x418522
  4184ae:	gs ins DWORD PTR es:[rdi],dx
  4184b0:	cs rex.R jb 0x418515
  4184b4:	ja     0x41851f
  4184b6:	outs   dx,BYTE PTR ds:[rsi]
  4184b7:	movsxd rbp,DWORD PTR cs:[r15d+0x6e]
  4184bd:	add    al,BYTE PTR [rax]
  4184bf:	add    BYTE PTR [rax],al
  4184c1:	or     BYTE PTR [rcx+0x63],cl
  4184c4:	outs   dx,DWORD PTR ds:[rsi]
  4184c5:	outs   dx,BYTE PTR ds:[rsi]
  4184c6:	rex.R (bad) 
  4184c8:	je     0x41852b
  4184ca:	or     BYTE PTR [rcx+0x63],cl
  4184cd:	outs   dx,DWORD PTR ds:[rsi]
  4184ce:	outs   dx,BYTE PTR ds:[rsi]
  4184cf:	push   rbx
  4184d0:	imul   edi,DWORD PTR [rdx+0x65],0x13020407
  4184d7:	push   rbx
  4184d8:	jns    0x41854d
  4184da:	je     0x418541
  4184dc:	ins    DWORD PTR es:[rdi],dx
  4184dd:	cs rex.R jb 0x418542
  4184e1:	ja     0x41854c
  4184e3:	outs   dx,BYTE PTR ds:[rsi]
  4184e4:	addr32 cs push rbx
  4184e7:	imul   edi,DWORD PTR [rdx+0x65],0x2
  4184ee:	add    al,BYTE PTR [rax]
  4184f0:	add    BYTE PTR [rax],al
  4184f2:	or     DWORD PTR [rbx],eax
  4184f4:	add    BYTE PTR [rax],al
  4184f6:	add    BYTE PTR [rip+0xfffffffffffffffc],al        # 0x4184f8
  4184fc:	adc    edx,DWORD PTR [rbx+0x79]
  4184ff:	jae    0x418575
  418501:	gs ins DWORD PTR es:[rdi],dx
  418503:	cs rex.R jb 0x418568
  418507:	ja     0x418572
  418509:	outs   dx,BYTE PTR ds:[rsi]
  41850a:	addr32 cs push rbx
  41850d:	imul   edi,DWORD PTR [rdx+0x65],0x2
  418514:	add    eax,0x74646977
  418519:	push   0x69656806
  41851e:	addr32 push 0x8000074
  418524:	or     BYTE PTR [rdx],al
	...
  41852e:	add    BYTE PTR [rax],al
  418530:	add    BYTE PTR [rdi],cl
  418532:	add    eax,DWORD PTR [rax]
  418534:	add    BYTE PTR [rax],al
  418536:	and    ax,WORD PTR [rax]
  418539:	add    BYTE PTR [rdx],al
  41853b:	add    BYTE PTR [rax],al
  41853d:	add    DWORD PTR [rax],eax
  41853f:	add    al,0x0
  418541:	and    BYTE PTR [rax],ah
  418543:	add    BYTE PTR [rax],al
  418545:	add    DWORD PTR [rax],eax
  418547:	or     BYTE PTR [rax],al
  418549:	test   al,0x8
  41854b:	add    BYTE PTR [rax],al
  41854d:	rex.RX add BYTE PTR [rax],r8b
  418550:	add    BYTE PTR [rax],dl
  418552:	adc    BYTE PTR [rax],al
  418554:	add    BYTE PTR [rcx],al
  418556:	add    BYTE PTR [rax],cl
  418558:	add    BYTE PTR [rax+0x5],ch
  41855b:	add    BYTE PTR [rax],al
  41855d:	out    dx,al
  41855e:	or     BYTE PTR [rax],al
  418560:	add    BYTE PTR [rax],ah
  418562:	and    BYTE PTR [rax],al
  418564:	add    BYTE PTR [rcx],al
  418566:	add    BYTE PTR [rax],ah
  418568:	add    BYTE PTR [rax+0x56000010],ch
  41856e:	(bad)  
  41856f:	add    BYTE PTR [rax],al
  418571:	adc    BYTE PTR [rax],dl
  418573:	add    BYTE PTR [rax],al
  418575:	add    DWORD PTR [rax],eax
  418577:	and    BYTE PTR [rax],al
  418579:	push   0xfffffffffe000004
  41857e:	(bad)  
  41857f:	add    BYTE PTR [rax],al
  418581:	sub    BYTE PTR [rax],al
  418583:	add    BYTE PTR [rax],al
  418585:	and    BYTE PTR [rax],al
  418587:	add    BYTE PTR [rax],al
  418589:	add    BYTE PTR [rax],al
  41858c:	add    BYTE PTR [rcx],al
  41858e:	add    BYTE PTR [rax],cl
	...
  4185ac:	add    BYTE PTR [rdi-0x76ffa6aa],al
  4185b2:	pop    rax
  4185b3:	pop    rbx
  4185b4:	add    BYTE PTR [rcx-0x72ff9ea2],dl
  4185ba:	pop    rbx
  4185bb:	pop    rbp
  4185bc:	add    BYTE PTR [rbp-0x5eff9a9d],dl
  4185c2:	ins    BYTE PTR es:[rdi],dx
  4185c3:	outs   dx,BYTE PTR ds:[rsi]
  4185c4:	add    BYTE PTR [rdx-0x5dff9699],bl
  4185ca:	outs   dx,BYTE PTR ds:[rsi]
  4185cb:	jo     0x4185cd
  4185cd:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4185ce:	jno    0x418643
  4185d0:	add    BYTE PTR [rdx-0x1eff8184],dh
  4185d6:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4185d7:	test   al,0x0
  4185d9:	frstor [rsi+riz*4-0x5c5e2600]
  4185e0:	add    bh,dh
  4185e2:	mov    ecx,0xc0fb00bb
  4185e7:	ret    0x9e00
  4185ea:	imul   ebp,DWORD PTR [rax+rax*1-0x56],0x76
  4185ef:	ja     0x4185f1
  4185f1:	scas   al,BYTE PTR es:[rdi]
  4185f2:	jns    0x41866e
  4185f4:	add    BYTE PTR [rdi-0x3bff7e80],dh
  4185fa:	mov    ecx,DWORD PTR [rax+rax*1+0x8a89c1]
  418601:	iret   
  418602:	xchg   esp,eax
  418603:	xchg   ebp,eax
  418604:	add    dl,cl
  418606:	xchg   ecx,eax
  418607:	xchg   edx,eax
  418608:	add    ch,ch
  41860a:	stos   DWORD PTR es:[rdi],eax
  41860b:	lods   al,BYTE PTR ds:[rsi]
  41860c:	add    bl,dh
  41860e:	mov    bl,0xb4
  418610:	add    dl,dh
  418612:	mov    dl,0xb3
  418614:	add    cl,dh
  418616:	mov    cl,0xb2
  418618:	add    BYTE PTR [rcx-0x59ff7678],bh
  41861e:	jp     0x41869b
  418620:	add    ah,dh
  418622:	mov    ch,0xb6
  418624:	add    bl,dh
  418626:	mov    ah,0xb5
  418628:	add    ah,bl
  41862a:	movabs ds:0x97cc009c9bd100a4,eax
  418633:	cwde   
  418634:	add    al,cl
  418636:	xchg   esp,eax
  418637:	xchg   ebp,eax
  418638:	add    ch,al
  41863a:	xchg   edx,eax
  41863b:	xchg   ebx,eax
  41863c:	add    BYTE PTR [rsi-0x21ff7173],bh
  418642:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  418643:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  418644:	add    ah,bl
  418646:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  418647:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  418648:	add    dl,dl
  41864a:	pushf  
  41864b:	popf   
  41864c:	add    dh,cl
  41864e:	cdq    
  41864f:	(bad)  
  418650:	add    dh,dh
  418652:	mov    eax,0xb7f500b9
  418657:	mov    eax,0xbcbbf800
  41865c:	add    cl,bh
  41865e:	mov    ebp,0xa7da00be
  418663:	test   al,0x0
  418665:	fld    TBYTE PTR [rcx+0x6ab600aa]
  41866b:	imul   eax,DWORD PTR [rax],0x6d6eb8
  418671:	mov    esp,0xbf007374
  418676:	jnp    0x4186f2
  418678:	add    cl,al
  41867a:	jle    0x4186fa
  41867c:	add    ch,al
  41867e:	test   BYTE PTR [rbx-0x68672100],al
  418684:	add    bl,ah
  418686:	popf   
  418687:	pushf  
  418688:	add    dl,ah
  41868a:	pushf  
  41868b:	fwait
  41868c:	add    cl,ah
  41868e:	fwait
  41868f:	(bad)  
  418690:	add    dl,cl
  418692:	mov    ecx,DWORD PTR [rbx-0x605f1b00]
  418698:	add    ah,ah
  41869a:	lahf   
  41869b:	sahf   
  41869c:	add    al,ch
  41869e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  41869f:	movabs ds:0x8484bb00a1a2e600,eax
  4186a8:	add    ch,cl
  4186aa:	xchg   ecx,eax
  4186ab:	xchg   ecx,eax
  4186ac:	add    dl,ch
  4186ae:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4186af:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4186b0:	add    al,ch
  4186b2:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4186b3:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  4186b4:	add    BYTE PTR [rdi-0x39ff7778],bh
  4186ba:	mov    cs,WORD PTR [rsi-0x55551400]
  4186c0:	add    dl,ch
  4186c2:	test   eax,0x97d100a9
  4186c7:	xchg   edi,eax
  4186c8:	add    ch,cl
  4186ca:	xchg   esp,eax
  4186cb:	xchg   esp,eax
  4186cc:	add    ch,ch
  4186ce:	lods   al,BYTE PTR ds:[rsi]
  4186cf:	lods   al,BYTE PTR ds:[rsi]
  4186d0:	add    dh,ch
  4186d2:	lods   eax,DWORD PTR ds:[rsi]
  4186d3:	lods   eax,DWORD PTR ds:[rsi]
  4186d4:	add    bl,dl
  4186d6:	(bad)  
  4186d7:	(bad)  
  4186d8:	add    al,dh
  4186da:	mov    al,0xb0
  4186dc:	add    bh,ch
  4186de:	scas   eax,DWORD PTR es:[rdi]
  4186df:	scas   eax,DWORD PTR es:[rdi]
  4186e0:	add    dh,ch
  4186e2:	scas   al,BYTE PTR es:[rdi]
  4186e3:	scas   al,BYTE PTR es:[rdi]
  4186e4:	add    BYTE PTR [rcx+rdi*2+0x78a30079],ah
  4186eb:	js     0x4186ed
  4186ed:	int3   
  4186ee:	xchg   edi,eax
  4186ef:	xchg   edi,eax
  4186f0:	add    BYTE PTR [rbp-0x4fff797a],dh
  4186f6:	(bad)  
  4186f7:	(bad)  
  4186f8:	add    BYTE PTR [rbp-0x2bff8586],ah
  4186fe:	sahf   
  4186ff:	sahf   
  418700:	add    dl,al
  418702:	nop
  418703:	nop
  418704:	add    BYTE PTR [rbx-0x4cff7475],bh
  41870a:	test   DWORD PTR [rbp+0x7e7ea900],eax
  418710:	add    BYTE PTR [rdi-0x20ff8384],ah
  418716:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  418717:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  418718:	add    bh,dl
  41871a:	movabs eax,ds:0x86a500a5a5d900a1
  418723:	xchg   BYTE PTR [rax],al
  418725:	lods   al,BYTE PTR ds:[rsi]
  418726:	pop    rcx
  418727:	push   rdi
  418728:	add    BYTE PTR [rdi-0x4dffa2a1],ch
  41872e:	movsxd eax,DWORD PTR gs:[rax]
  418731:	int    0x7e
  418733:	jnp    0x418735
  418735:	rol    BYTE PTR [rbp-0x762bff7e],cl
  41873b:	xchg   BYTE PTR [rax],al
  41873d:	xlat   BYTE PTR ds:[rbx]
  41873e:	mov    WORD PTR [rdx-0x716f2700],cs
  418744:	add    dl,bl
  418746:	xchg   edx,eax
  418747:	nop
  418748:	add    ah,bl
  41874a:	xchg   ebp,eax
  41874b:	xchg   ebx,eax
  41874c:	add    bh,bl
  41874e:	(bad)  
  41874f:	cwde   
  418750:	add    bh,ah
  418752:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  418753:	movabs ds:0x7f80ac009394cc00,al
  41875c:	add    BYTE PTR [rdi-0x41ff8282],bl
  418762:	push   0x65
  418764:	add    cl,al
  418766:	outs   dx,BYTE PTR ds:[rsi]
  418767:	imul   eax,DWORD PTR [rax],0x6c71c3
  41876d:	(bad)  
  41876e:	jbe    0x4187e1
  418770:	add    dl,cl
  418772:	jp     0x4187ea
  418774:	add    dh,cl
  418776:	(bad)  
  418777:	jle    0x418779
  418779:	(bad)  
  41877a:	pop    rdx
  41877b:	pop    rax
  41877c:	add    BYTE PTR [rcx-0x44ff9594],dl
  418782:	data16 (bad) 
  418784:	add    BYTE PTR [rax-0x2ff8d8b],bl
  41878a:	stc    
  41878b:	clc    
  41878c:	add    ah,bh
  41878e:	repz lock add ah,bh
  418792:	hlt    
  418793:	icebp  
  418794:	add    bl,bh
  418796:	repz lock add dh,bh
  41879a:	sti    
  41879b:	cli    
  41879c:	add    ch,bh
  41879e:	cli    
  41879f:	stc    
  4187a0:	add    dl,bh
  4187a2:	jmp    0x418789
  4187a4:	add    dl,bh
  4187a6:	in     eax,dx
  4187a7:	call   0xffffffffe82e80ac
  4187ac:	add    dl,dh
  4187ae:	rol    al,1
  4187b0:	add    ah,dh
  4187b2:	(bad)  
  4187b3:	mov    DWORD PTR [rax],0xc8d5f3
  4187b9:	cmc    
  4187ba:	xlat   BYTE PTR ds:[rbx]
  4187bb:	retf   0xf500
  4187be:	fcmovne st,st(7)
  4187c0:	add    ch,dh
  4187c2:	fst    st(2)
  4187c4:	add    dh,dh
  4187c6:	(bad)  
  4187c8:	add    dh,dh
  4187ca:	loope  0x4187a4
  4187cc:	add    dh,dh
  4187ce:	loop   0x4187a9
  4187d0:	add    bh,dh
  4187d2:	in     eax,0xdd
  4187d4:	add    al,bh
  4187d6:	out    0xdf,eax
  4187d8:	add    dl,bh
  4187da:	(bad)  
  4187db:	jrcxz  0x4187dd
  4187dd:	stc    
  4187de:	(bad)  
  4187df:	jrcxz  0x4187e1
  4187e1:	clc    
  4187e2:	jmp    0xfffffffff03d88c9
  4187e7:	jmp    0xffffffffe82f81ec
  4187ec:	add    bl,bh
  4187ee:	lock jmp 0x4187f1
  4187f1:	cli    
  4187f2:	out    dx,eax
  4187f3:	(bad)  
  4187f4:	add    cl,bh
  4187f6:	out    dx,al
  4187f7:	jmp    0xfffffffff33783fc
  4187fc:	add    BYTE PTR [rsi-0xdff7a6d],ch
  418802:	(bad)  
  418803:	mov    ebp,0xc3d3f200
  418808:	add    ah,al
  41880a:	lods   eax,DWORD PTR ds:[rsi]
  41880b:	movabs eax,ds:0xcbd8f300cbd9f400
  418814:	add    ch,dh
  418816:	fmul   st(7),st
  418818:	add    dh,dh
  41881a:	(bad)  
  41881c:	add    ah,cl
  41881e:	mov    ecx,0xe4f700b0
  418823:	fild   DWORD PTR [rax]
  418825:	mul    bl
  418827:	fiadd  DWORD PTR [rax]
  418829:	(bad)  
  41882a:	(bad)  
  41882b:	mov    esp,0xe0e8f800
  418830:	add    cl,bh
  418832:	jmp    0x418818
  418834:	add    ch,bh
  418836:	repz out dx,al
  418838:	add    cl,bh
  41883a:	out    dx,eax
  41883b:	(bad)  
  41883c:	add    bl,bh
  41883e:	repz out dx,eax
  418840:	add    ch,bh
  418842:	stc    
  418843:	test   DWORD PTR [rax],0xedeff3
  418849:	(bad)  
  41884a:	cld    
  41884b:	sti    
  41884c:	add    BYTE PTR [rbp-0x44ff7265],dh
  418852:	movabs ds:0xaac10099a6be0094,al
  41885b:	popf   
  41885c:	add    bh,al
  41885e:	mov    cl,0xa5
  418860:	add    dh,al
  418862:	mov    cl,0xa6
  418864:	add    dl,cl
  418866:	mov    ch,0xaa
  418868:	add    ch,cl
  41886a:	mov    edx,0xe3f800af
  41886f:	fadd   DWORD PTR [rax]
  418871:	mul    cl
  418873:	(bad)  
  418874:	add    ch,dh
  418876:	loope  0x41884e
  418878:	add    al,bh
  41887a:	out    0xde,eax
  41887c:	add    bh,dh
  41887e:	call   0xffffffffed3b8963
  418883:	in     al,0x0
  418885:	stc    
  418886:	in     al,dx
  418887:	in     eax,0x0
  418889:	cli    
  41888a:	out    dx,eax
  41888b:	jmp    0xffffffffd0166590
  418890:	add    bl,bh
  418892:	repnz in eax,dx
  418894:	add    dl,bh
  418896:	icebp  
  418897:	in     al,dx
  418898:	add    BYTE PTR [rcx-0x5aff897a],ah
  41889e:	mov    bh,BYTE PTR [rdx+0x0]
  4188a1:	test   al,0x8e
  4188a3:	jle    0x4188a5
  4188a5:	lods   al,BYTE PTR ds:[rsi]
  4188a6:	xchg   ebx,eax
  4188a7:	add    DWORD PTR [rax],0xffffffaa
  4188aa:	xchg   ecx,eax
  4188ab:	add    DWORD PTR [rax],0x8494ad
  4188b1:	mov    al,0x97
  4188b3:	xchg   DWORD PTR [rax],eax
  4188b5:	mov    dl,0x99
  4188b7:	mov    al,BYTE PTR [rax]
  4188b9:	mov    ch,0x9c
  4188bb:	lea    eax,[rax]
  4188bd:	mov    eax,0xb900909f
  4188c2:	movabs eax,ds:0xb0c50096a4ba0092
  4188cb:	movabs ds:0xdfe8f700dae5f700,eax
  4188d4:	add    ch,bh
  4188d6:	clc    
  4188d7:	cmc    
  4188d8:	add    ah,bh
  4188da:	div    esp
  4188dc:	add    bl,bh
  4188de:	div    bl
  4188e0:	add    BYTE PTR [rdi-0x59ff8d7c],bl
  4188e6:	mov    WORD PTR [rbx+0x0],?
  4188e9:	lods   al,BYTE PTR ds:[rsi]
  4188ea:	xchg   esi,eax
  4188eb:	xchg   DWORD PTR [rax],eax
  4188ed:	mov    ah,0x9f
  4188ef:	xchg   ecx,eax
  4188f0:	add    BYTE PTR [rdx-0x43ff6f62],dh
  4188f6:	test   al,0x9a
  4188f8:	add    BYTE PTR [rsi-0x3fff6a5e],dh
  4188fe:	lods   al,BYTE PTR ds:[rsi]
  4188ff:	sahf   
  418900:	add    BYTE PTR [rdi-0x3dff6255],bh
  418906:	scas   al,BYTE PTR es:[rdi]
  418907:	movabs al,ds:0xa4b1c500a7b4c800
  418910:	add    bl,cl
  418912:	mov    eax,0xb7ca00ab
  418917:	stos   BYTE PTR es:[rdi],al
  418918:	add    cl,cl
  41891a:	mov    dh,0xa9
  41891c:	add    al,cl
  41891e:	mov    ch,0xa8
  418920:	add    al,dl
  418922:	mov    edi,0xf7fd00b4
  418927:	repz add dh,bh
  41892a:	sti    
  41892b:	stc    
  41892c:	add    BYTE PTR [rbx+0x49],ah
  41892f:	xor    eax,0x3e526c00
  418934:	add    BYTE PTR [rbp-0x76ffa694],al
  41893a:	jno    0x41899b
  41893c:	add    BYTE PTR [rdi-0x69ff9989],cl
  418942:	jg     0x4189b2
  418944:	add    BYTE PTR [rbp-0x5eff8a7a],bl
  41894a:	mov    edi,DWORD PTR [rbx+0x0]
  41894d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  41894e:	mov    ?,WORD PTR [rsi+0x0]
  418951:	movabs ds:0xa7008494aa007d8d,eax
  41895a:	xchg   edx,eax
  41895b:	(bad)  
  41895c:	add    BYTE PTR [rsi-0x4fff7667],ch
  418962:	fwait
  418963:	mov    WORD PTR [rax],es
  418965:	mov    dl,0x9e
  418967:	pop    QWORD PTR [rax]
  418969:	mov    dh,0xa2
  41896b:	xchg   ebx,eax
  41896c:	add    BYTE PTR [rcx-0x47ff695b],bh
  418972:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  418973:	xchg   ebp,eax
  418974:	add    BYTE PTR [rbx-0x3cff6759],bh
  41897a:	mov    al,0xa2
  41897c:	add    bh,al
  41897e:	mov    ah,0xa6
  418980:	add    dh,al
  418982:	mov    bl,0xa5
  418984:	add    BYTE PTR [rcx+0x60],bh
  418987:	rex.WR add BYTE PTR [rdx-0x69ff9785],r10b
  41898e:	jg     0x4189fd
  418990:	add    ch,bh
  418992:	cli    
  418993:	test   DWORD PTR [rax],0xfcfdfe
  418999:	cli    
  41899a:	stc    
  41899b:	clc    
  41899c:	add    dh,bh
  41899e:	(bad)  
  41899f:	std    
  4189a0:	add    bh,bh
  4189a2:	(bad)  
  4189a3:	inc    DWORD PTR [rax]
  4189a5:	(bad)  
  4189a6:	(bad)  
  4189a7:	inc    DWORD PTR [rax]
	...
  4189b5:	add    BYTE PTR [rax],al
  4189b7:	call   0xffffffffe2236b9d
  4189bc:	loope  0x41899f
  4189be:	loope  0x4189a1
  4189c0:	loope  0x4189a3
  4189c2:	loope  0x4189a5
  4189c4:	loope  0x4189a7
  4189c6:	loope  0x4189a9
  4189c8:	loope  0x4189ca
	...
  4189d6:	add    dl,ch
  4189d8:	xchg   DWORD PTR [rdi-0x54536752],ebp
  4189de:	stos   BYTE PTR es:[rdi],al
  4189df:	(bad)
  4189e2:	ret    0xc0c1
  4189e5:	mov    esi,0xe1bcbd
	...
  4189f6:	add    ah,ch
  4189f8:	mov    BYTE PTR [rbx-0x6075715e],dl
  4189fe:	mov    dl,0x9c
  418a00:	fwait
  418a01:	cdq    
  418a02:	adc    DWORD PTR [rdi-0x4169697f],0xffffffe1
	...
  418a15:	add    BYTE PTR [rax],al
  418a17:	jmp    0x4189b8
  418a19:	mov    ebx,0x8aa1b67f
  418a1e:	mov    DWORD PTR [rdx-0x7c657a64],esi
  418a24:	xchg   edi,eax
  418a25:	add    DWORD PTR [rcx+0xe1c0],0x77776d00
  418a2f:	ja     0x418aa8
  418a31:	ja     0x418a1b
  418a33:	loope  0x418a16
  418a35:	loope  0x418a18
  418a37:	rcr    BYTE PTR [rsi-0x29372785],1
  418a3d:	(bad)  
  418a3e:	out    dx,eax
  418a3f:	shr    cl,1
  418a41:	out    0xf9,eax
  418a43:	in     eax,0xe4
  418a45:	jrcxz  0x4189de
  418a47:	xchg   ebp,eax
  418a48:	loope  0x418a4a
  418a4a:	pop    rsi
  418a4b:	jne    0x4189ed
  418a4d:	rcl    dl,cl
  418a4f:	rcl    dl,cl
  418a51:	shr    dl,cl
  418a53:	xchg   DWORD PTR [rdi-0x75126752],ebp
  418a59:	int    0xa5
  418a5b:	mov    ebx,0x8ab5a27f
  418a60:	lahf   
  418a61:	mov    dl,0x86
  418a63:	test   DWORD PTR [rdx-0x1e3d7d7e],ebx
  418a69:	pop    rsi
  418a6a:	pop    rsi
  418a6b:	mov    ecx,0xd4d4d4d4
  418a70:	(bad)  
  418a71:	(bad)  
  418a72:	in     al,dx
  418a73:	mov    BYTE PTR [rbx-0x7411715e],dl
  418a79:	retf   
  418a7a:	xchg   esp,eax
  418a7b:	jnp    0x418a0e
  418a7d:	nop
  418a7e:	lea    esp,[rcx-0x794c7676]
  418a84:	test   DWORD PTR [rsp+rax*4+0x102e1c3],eax
  418a8b:	add    DWORD PTR [rcx],eax
  418a8d:	add    DWORD PTR [rax+0x5f],esp
  418a90:	pop    rdi
  418a91:	pop    rdi
  418a92:	jmp    0x418a33
  418a94:	mov    ebx,0xa1efb67f
  418a99:	jge    0x418a73
  418a9b:	enter  0xc7d6,0xef
  418a9f:	shr    cl,1
  418aa1:	out    0xf9,eax
  418aa3:	in     eax,0xe4
  418aa5:	jrcxz  0x418a2c
  418aa7:	(bad)
  418aab:	rex.WRXB push r8
  418aad:	add    ah,BYTE PTR [rcx+0x6e]
  418ab0:	outs   dx,BYTE PTR ds:[rsi]
  418ab1:	jbe    0x418a83
  418ab3:	sahf   
  418ab4:	jnp    0x418a8e
  418ab6:	enter  0x8ed1,0xa8
  418aba:	js     0x418a87
  418abc:	xchg   esp,eax
  418abd:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  418abe:	xchg   ecx,eax
  418abf:	nop
  418ac0:	lea    esi,[rsi+rbx*4-0x79797878]
  418ac7:	(bad)
  418aca:	sbb    eax,0x6104541d
  418acf:	jo     0x418b40
  418ad1:	outs   dx,BYTE PTR ds:[rsi]
  418ad2:	in     eax,dx
  418ad3:	mov    cl,ch
  418ad5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  418ad6:	mov    ebx,0xa8fba2f0
  418adb:	jge    0x418aa8
  418add:	xchg   esp,eax
  418ade:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  418adf:	xchg   ecx,eax
  418ae0:	or     BYTE PTR [rbp-0x78766136],0x87
  418ae7:	stos   BYTE PTR es:[rdi],al
  418ae8:	loope  0x418aed
  418aea:	pop    rcx
  418aeb:	pop    rdx
  418aec:	sbb    eax,0x70713004
  418af1:	outs   dx,DWORD PTR ds:[rsi]
  418af2:	out    dx,al
  418af3:	mov    ecx,ebx
  418af5:	xchg   esp,eax
  418af6:	jnp    0x418aea
  418af8:	jle    0x418af8
  418afa:	fmul   st,st(0)
  418afc:	(bad)  
  418afd:	(bad)  
  418afe:	out    dx,eax
  418aff:	shr    cl,1
  418b01:	out    0xf9,eax
  418b03:	in     eax,0xe4
  418b05:	jrcxz  0x418ab8
  418b07:	stos   DWORD PTR es:[rdi],eax
  418b08:	loope  0x418b0f
  418b0a:	pop    rcx
  418b0b:	pop    rcx
  418b0c:	pop    rcx
  418b0d:	add    esi,DWORD PTR [rcx]
  418b0f:	jb     0x418b82
  418b11:	jo     0x418b02
  418b13:	movabs eax,ds:0xfdfefe90f3c8d87d
  418b1c:	test   al,0x78
  418b1e:	int3   
  418b1f:	jp     0x418ac6
  418b21:	xchg   ecx,eax
  418b22:	or     BYTE PTR [rsi-0x53616075],0xe1
  418b29:	add    eax,0x56c6c6c
  418b2e:	xor    ah,BYTE PTR [rdx+0x72]
  418b31:	jno    0x418b04
  418b33:	mov    gs,WORD PTR [rax-0x472c3488]
  418b39:	(bad)  
  418b3a:	(bad)  
  418b3b:	(bad)  
  418b3c:	std    
  418b3d:	test   al,0x78
  418b3f:	int3   
  418b40:	jp     0x418afc
  418b42:	xchg   edx,eax
  418b43:	mov    bh,0x8d
  418b45:	mov    ecx,DWORD PTR [rbx+0x5307e198]
  418b4b:	push   rbx
  418b4c:	push   rbx
  418b4d:	add    eax,0x72627332
  418b52:	lock movabs ds:0xc8d8fe91d67da8fb,al
  418b5c:	(bad)  
  418b5d:	(bad)  
  418b5e:	out    dx,eax
  418b5f:	shr    cl,1
  418b61:	out    0xf9,eax
  418b63:	in     eax,0xe4
  418b65:	jrcxz  0x418af3
  418b67:	lods   eax,DWORD PTR ds:[rsi]
  418b68:	loope  0x418b7a
  418b6a:	pop    rax
  418b6b:	pop    rax
  418b6c:	push   rbx
  418b6d:	(bad)  
  418b6e:	xor    esp,DWORD PTR [rbx+0x73]
  418b71:	jae    0x418b65
  418b73:	jle    0x418b73
  418b75:	fmul   st,st(0)
  418b77:	(bad)  
  418b78:	mov    ebx,0xfefefefe
  418b7d:	(bad)  
  418b7e:	test   al,0x7c
  418b80:	cli    
  418b81:	int3   
  418b82:	jp     0x418b3e
  418b84:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  418b85:	jle    0x418c05
  418b87:	scas   eax,DWORD PTR es:[rdi]
  418b88:	loope  0x418b90
  418b8a:	push   rdx
  418b8b:	push   rdx
  418b8c:	push   rdx
  418b8d:	adc    BYTE PTR [rsp+riz*2],dh
  418b90:	fs movsxd esi,ebx
  418b93:	nop
  418b94:	(bad)  
  418b95:	(bad)  
  418b96:	std    
  418b97:	xlat   BYTE PTR ds:[rbx]
  418b98:	mov    edx,0xfefefefe
  418b9d:	(bad)  
  418b9e:	std    
  418b9f:	sti    
  418ba0:	jl     0x418b48
  418ba2:	int3   
  418ba3:	jns    0x418b5f
  418ba5:	(bad)  
  418ba6:	(bad)  
  418ba7:	popf   
  418ba8:	loope  0x418bb3
  418baa:	sbb    al,0x1c
  418bac:	sbb    al,0x8
  418bae:	xor    eax,0xd3646566
  418bb3:	mov    eax,0xf4fefefe
  418bb8:	jns    0x418bb8
  418bba:	fcom   st(5)
  418bbc:	lock jmp 0x418b7b
  418bbf:	clc    
  418bc0:	in     al,0x7c
  418bc2:	js     0x418b90
  418bc4:	jp     0x418b69
  418bc6:	movabs ds:0x350957575709e1de,eax
  418bcf:	addr32 data16 gs (bad) 
  418bd3:	xchg   ecx,eax
  418bd4:	(bad)  
  418bd5:	fmul   st,st(0)
  418bd7:	fst    DWORD PTR [rsi+rdi*8-0x1010102]
  418bde:	(bad)  
  418bdf:	(bad)  
  418be0:	(bad)  
  418be1:	sti    
  418be2:	loopne 0x418bde
  418be4:	xchg   esp,eax
  418be5:	xchg   ecx,eax
  418be6:	and    BYTE PTR [rax+0x252511e1],0x25
  418bed:	adc    DWORD PTR [rdx],edi
  418bef:	ss push 0xfffffffffebbd567
  418bf5:	(bad)  
  418bf6:	(bad)  
  418bf7:	test   ah,0xfe
  418bfa:	(bad)  
  418bfb:	(bad)  
  418bfc:	(bad)  
  418bfd:	(bad)  
  418bfe:	(bad)  
  418bff:	(bad)  
  418c00:	(bad)  
  418c01:	std    
  418c02:	sti    
  418c03:	test   al,0xa8
  418c05:	movabs al,ds:0x1256565612e1adb0
  418c0e:	cmp    bh,BYTE PTR [rax]
  418c10:	ss push 0xfffffffffefebad7
  418c16:	(bad)  
  418c17:	fmul   st,st(4)
  418c19:	(bad)  
  418c1a:	(bad)  
  418c1b:	(bad)  
  418c1c:	(bad)  
  418c1d:	(bad)  
  418c1e:	(bad)  
  418c1f:	(bad)  
  418c20:	(bad)  
  418c21:	(bad)  
  418c22:	(bad)  
  418c23:	js     0x418bf3
  418c25:	loope  0x418c08
  418c27:	loope  0x418c0a
  418c29:	or     ah,BYTE PTR [rsp]
  418c2c:	and    al,0xa
  418c2e:	rex cmp esi,DWORD PTR [rdi]
  418c31:	imul   esi,esp,0xd5d8fe79
  418c37:	fsub   QWORD PTR [rsi-0x1010102]
  418c3d:	(bad)  
  418c3e:	(bad)  
  418c3f:	(bad)  
  418c40:	(bad)  
  418c41:	(bad)  
  418c42:	(bad)  
  418c43:	cld    
  418c44:	iret   
  418c45:	movabs al,ds:0xa2323231300e2c6
  418c4e:	(bad)  
  418c4f:	cmp    eax,0x94d93c3e
  418c54:	(bad)  
  418c55:	(bad)  
  418c56:	(bad)  
  418c57:	fstp   TBYTE PTR [rax-0x2]
  418c5a:	(bad)  
  418c5b:	(bad)  
  418c5c:	(bad)  
  418c5d:	(bad)  
  418c5e:	(bad)  
  418c5f:	(bad)  
  418c60:	(bad)  
  418c61:	(bad)  
  418c62:	(bad)  
  418c63:	jge    0x418c24
  418c65:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  418c66:	test   DWORD PTR [rax],0x51223f00
  418c6c:	push   rcx
  418c6d:	adc    eax,DWORD PTR [rdi+0x41]
  418c70:	rex.X push 0xfffffffffffffff6
  418c73:	int3   
  418c74:	(bad)  
  418c75:	(bad)  
  418c76:	(bad)  
  418c77:	(bad)  
  418c79:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  418c7a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  418c7b:	retf   
  418c7c:	int3   
  418c7d:	fist   WORD PTR [rdx+rdi*2-0x455a5a87]
  418c84:	ret    
  418c85:	out    0x0,al
  418c87:	add    BYTE PTR [rax],al
  418c89:	(bad)  
  418c8a:	sub    DWORD PTR [rcx],ebp
  418c8c:	sub    DWORD PTR [rdi],edi
  418c8e:	rex.WXB
  418c8f:	rex.WB
  418c90:	rex.RB
  418c91:	rex.B fmul st,st(4)
  418c94:	(bad)  
  418c95:	(bad)  
  418c96:	(bad)  
  418c97:	fcmovu st,st(2)
  418c99:	(bad)  
  418c9b:	cmc    
  418c9c:	test   al,0xf4
  418c9f:	xlat   BYTE PTR ds:[rbx]
  418ca0:	(bad)  
  418ca1:	(bad)  
  418ca2:	shl    ebx,cl
  418ca4:	icebp  
  418ca5:	add    BYTE PTR [rax],al
  418ca7:	add    BYTE PTR [rax],al
  418ca9:	rex.XB sub BYTE PTR [r8],bpl
  418cac:	and    DWORD PTR [rbx+0x55],eax
  418caf:	rex.WR
  418cb0:	rex.WX
  418cb1:	rex.RB fsub QWORD PTR [r14-0x1010102]
  418cb8:	(bad)  
  418cb9:	(bad)  
  418cba:	(bad)  
  418cbb:	(bad)  
  418cbc:	(bad)  
  418cbd:	(bad)  
  418cbe:	cld    
  418cbf:	iret   
  418cc0:	movabs al,ds:0x74e2c6
  418cc9:	adc    al,0x55
  418ccb:	push   rbp
  418ccc:	push   rbp
  418ccd:	adc    eax,0x4e1b195c
  418cd2:	fstp   TBYTE PTR [rax-0x2]
  418cd5:	(bad)  
  418cd6:	(bad)  
  418cd7:	(bad)  
  418cd8:	(bad)  
  418cd9:	(bad)  
  418cda:	(bad)  
  418cdb:	(bad)  
  418cdc:	(bad)  
  418cdd:	(bad)  
  418cde:	jge    0x418c9f
  418ce0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  418ce1:	test   DWORD PTR [rax],0x0
  418ce7:	add    BYTE PTR [rax],al
  418ce9:	rex.R pop rsp
  418ceb:	pop    rsp
  418cec:	pop    rsp
  418ced:	adc    al,0x5c
  418cef:	sub    ebx,DWORD PTR [rdi]
  418cf1:	sbb    ebx,edx
  418cf3:	loopne 0x418c9b
  418cf5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  418cf6:	retf   
  418cf7:	int3   
  418cf8:	fist   WORD PTR [rdx+rdi*2-0x455a5a87]
  418cff:	ret    
  418d00:	out    0x0,al
  418d02:	add    BYTE PTR [rax],al
  418d04:	add    BYTE PTR [rax],al
  418d06:	add    BYTE PTR [rax],al
  418d08:	add    BYTE PTR [rbp+rcx*1+0xd],al
  418d0c:	or     eax,0x2b0e5d44
  418d11:	(bad)  
  418d12:	fcmovu st,st(2)
  418d14:	(bad)  
  418d16:	cmc    
  418d17:	test   al,0xf4
  418d1a:	xlat   BYTE PTR ds:[rbx]
  418d1b:	(bad)  
  418d1c:	(bad)  
  418d1d:	shl    ebx,cl
  418d1f:	icebp  
	...
  418d28:	add    BYTE PTR [rdi],dl
  418d2a:	(bad)  
  418d2b:	and    BYTE PTR [rax],ah
  418d2d:	(bad)  
  418d2e:	cs sub eax,0x192b2a2c
  418d34:	sbb    ecx,DWORD PTR [rbp+0x49]
  418d37:	rex.RB
  418d38:	rex.B cmp eax,0x3639373b
  418d3e:	push   0x35
  418d43:	add    BYTE PTR [rax],al
  418d45:	add    BYTE PTR [rax],al
  418d47:	add    BYTE PTR [rax],al
  418d49:	(bad)  
  418d4a:	es es or al,0x17
  418d4e:	(bad)  
  418d4f:	cvtps2pi mm5,QWORD PTR [rsi+rcx*1]
  418d53:	sub    ebx,DWORD PTR [rsi]
  418d55:	sbb    cl,BYTE PTR [rdx+rcx*2+0x45]
  418d59:	rex.B
  418d5a:	rex.X
  418d5b:	ds cmp al,0x38
  418d5e:	imul   esi,DWORD PTR [rip+0x0],0x0        # 0x418d68
  418d68:	add    BYTE PTR [rax+0xb],cl
  418d6b:	pop    rbx
  418d6c:	pop    rbx
  418d6d:	imul   ebp,DWORD PTR [rdi],0xf
  418d70:	cvtps2pi mm5,QWORD PTR [rip+0x191e2a0e]        # 0x195fb785
  418d77:	sbb    ecx,DWORD PTR [rbp+0x18]
  418d7a:	rex.RX
  418d7b:	rex.B push 0x3b
  418d7e:	(bad)  
  418d7f:	cmp    al,BYTE PTR [rax]
	...
  418d89:	rex.W
  418d8a:	rex.W
  418d8b:	rex.W
  418d8c:	rex.W
  418d8d:	rex.W (bad) 
  418d8f:	(bad)  
  418d90:	(bad)  
  418d91:	cs cs pop rbp
  418d94:	pop    rbp
  418d95:	pop    rsp
  418d96:	pop    rsp
  418d97:	push   rbp
  418d98:	push   rbp
  418d99:	rex.WXB
  418d9a:	rex.WXB
  418d9b:	rex.RXB (bad) 
  418d9d:	rex
  418d9e:	cmp    al,BYTE PTR [rax]
	...
  418da9:	(bad)  
  418daa:	cld    
  418dab:	add    BYTE PTR [rax],al
  418dad:	(bad)  
  418dae:	cld    
  418daf:	add    BYTE PTR [rax],al
  418db1:	(bad)  
  418db2:	cld    
  418db3:	add    BYTE PTR [rax],al
  418db5:	(bad)  
  418db6:	cld    
  418db7:	add    BYTE PTR [rax],al
  418db9:	loopne 0x418dbb
  418dbb:	add    BYTE PTR [rax],al
  418dbd:	add    BYTE PTR [rax],0x0
	...
  418dfc:	add    DWORD PTR [rax],eax
  418dfe:	add    BYTE PTR [rax],al
  418e00:	add    eax,DWORD PTR [rax]
  418e02:	add    BYTE PTR [rax],al
  418e04:	(bad)  
  418e05:	add    BYTE PTR [rax],al
  418e07:	add    BYTE PTR [rdi],cl
  418e09:	add    BYTE PTR [rax],al
  418e0b:	add    BYTE PTR [rdi],bl
  418e0d:	add    BYTE PTR [rax],al
  418e0f:	add    BYTE PTR [rdi+0x0],bh
  418e12:	add    BYTE PTR [rax],al
  418e14:	inc    DWORD PTR [rax]
  418e16:	add    BYTE PTR [rcx],al
  418e18:	inc    DWORD PTR [rax]
  418e1a:	add    BYTE PTR [rcx],al
  418e1c:	inc    DWORD PTR [rax]
  418e1e:	add    BYTE PTR [rcx],al
  418e20:	inc    DWORD PTR [rax]
  418e22:	add    BYTE PTR [rcx],al
  418e24:	inc    DWORD PTR [rax]
  418e26:	add    BYTE PTR [rcx],al
  418e28:	jmp    FWORD PTR [rax]
  418e2a:	add    BYTE PTR [rax],al
  418e2c:	add    BYTE PTR [rax],dl
  418e2e:	add    BYTE PTR [rax],al
  418e30:	add    BYTE PTR [rax],ah
  418e32:	add    BYTE PTR [rax],al
  418e34:	add    BYTE PTR [rcx],al
  418e36:	add    BYTE PTR [rax],cl
	...
  418e54:	add    BYTE PTR [rbx-0x6fffaaae],al
  418e5a:	pop    rcx
  418e5b:	pop    rbx
  418e5c:	add    BYTE PTR [rax-0x6fff9c9f],dl
  418e62:	(bad)  
  418e63:	add    BYTE PTR fs:[rdx-0x75ff8d90],ah
  418e6a:	push   rbp
  418e6b:	push   rsi
  418e6c:	add    BYTE PTR [rbx-0x5bff9ea0],bl
  418e72:	addr32 push 0x62618f00
  418e78:	add    BYTE PTR [rsi-0x52ff9092],bl
  418e7e:	jp     0x418efb
  418e80:	add    ah,al
  418e82:	mov    ecx,DWORD PTR [rax+rax*1+0x8281b6]
  418e89:	mov    al,0x7d
  418e8b:	jle    0x418e8d
  418e8d:	mov    ebp,0xb8008887
  418e92:	add    DWORD PTR [rax+rax*1+0x807fb2],0xffffffba
  418e9a:	test   DWORD PTR [rsi+0x72719e00],eax
  418ea0:	add    BYTE PTR [rdi-0x3aff9294],dl
  418ea6:	mov    cs,WORD PTR [rdi-0x72733e00]
  418eac:	add    BYTE PTR [rbp-0x1ff8d8f],bl
  418eb2:	mov    ecx,0x8dc200ba
  418eb7:	mov    es,WORD PTR [rax]
  418eb9:	rcr    BYTE PTR [rax-0x6b35ff67],1
  418ebf:	xchg   ebp,eax
  418ec0:	add    BYTE PTR [rdx-0xff8789],ah
  418ec6:	mov    ebp,0x7da900bf
  418ecb:	jle    0x418ecd
  418ecd:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  418ece:	jp     0x418f4b
  418ed0:	add    dl,ah
  418ed2:	test   al,0xa9
  418ed4:	add    BYTE PTR [rdi-0x56ff8284],ah
  418eda:	add    DWORD PTR [rdx+0x72719300],0xaaa9db00
  418ee4:	add    cl,bl
  418ee6:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  418ee7:	test   al,0x0
  418ee9:	cwde   
  418eea:	pop    rsi
  418eeb:	pop    rsi
  418eec:	add    BYTE PTR [rbp-0x1dffa7a8],cl
  418ef2:	xchg   esi,eax
  418ef3:	xchg   ebp,eax
  418ef4:	add    dl,ch
  418ef6:	sahf   
  418ef7:	popf   
  418ef8:	add    al,ch
  418efa:	sahf   
  418efb:	popf   
  418efc:	add    al,dh
  418efe:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  418eff:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  418f00:	add    ch,ch
  418f02:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  418f03:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  418f04:	add    BYTE PTR [rax-0xaff898a],ch
  418f0a:	lods   eax,DWORD PTR ds:[rsi]
  418f0b:	lods   eax,DWORD PTR ds:[rsi]
  418f0c:	add    dl,dh
  418f0e:	stos   DWORD PTR es:[rdi],eax
  418f0f:	stos   DWORD PTR es:[rdi],eax
  418f10:	add    dl,cl
  418f12:	nop
  418f13:	nop
  418f14:	add    bh,dh
  418f16:	mov    cl,0xb1
  418f18:	add    BYTE PTR [rbx-0x4bff797a],bh
  418f1e:	add    DWORD PTR [rcx-0x4a4a0500],0x9494cd00
  418f28:	add    BYTE PTR [rdi-0x52ff7576],bh
  418f2e:	jge    0x418fad
  418f30:	add    bl,bh
  418f32:	mov    dh,0xb6
  418f34:	add    al,cl
  418f36:	xchg   edx,eax
  418f37:	xchg   edx,eax
  418f38:	add    BYTE PTR [rcx-0x28ff7e7f],dh
  418f3e:	lahf   
  418f3f:	lahf   
  418f40:	add    BYTE PTR [rdi+rdi*2+0x77a1007f],ch
  418f47:	ja     0x418f49
  418f49:	lods   al,BYTE PTR ds:[rsi]
  418f4a:	add    BYTE PTR [rax-0x66663800],0x0
  418f51:	retf   
  418f52:	pushf  
  418f53:	pushf  
  418f54:	add    cl,dl
  418f56:	movabs eax,ds:0xa6d6009f9fce00a1
  418f5f:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  418f60:	add    ah,dl
  418f62:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  418f63:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  418f64:	add    bh,bh
  418f66:	(bad)  
  418f67:	inc    BYTE PTR [rax]
  418f69:	(bad)  
  418f6a:	std    
  418f6b:	std    
  418f6c:	add    BYTE PTR [rbx-0x39ffa8a7],ah
  418f72:	jo     0x418fe2
  418f74:	add    dh,cl
  418f76:	jns    0x418fef
  418f78:	add    cl,dl
  418f7a:	cmp    DWORD PTR [rsi+0x0],0x4f5083
  418f81:	xchg   BYTE PTR [rbx+0x52],dl
  418f84:	add    dh,dl
  418f86:	mov    BYTE PTR [rbp-0x73712300],al
  418f8c:	add    ah,bl
  418f8e:	(bad)  
  418f8f:	mov    WORD PTR [rax],es
  418f91:	in     al,0x97
  418f93:	xchg   esp,eax
  418f94:	add    cl,al
  418f96:	xchg   ebp,eax
  418f97:	xchg   esp,eax
  418f98:	add    cl,dl
  418f9a:	jle    0x419016
  418f9c:	add    ch,al
  418f9e:	xchg   edx,eax
  418f9f:	mov    BYTE PTR [rax],al
  418fa1:	(bad)  
  418fa2:	lahf   
  418fa3:	xchg   ebp,eax
  418fa4:	add    BYTE PTR [rcx-0x4ff7c75],dh
  418faa:	clc    
  418fab:	test   DWORD PTR [rax],0x7f8da5
  418fb1:	ret    
  418fb2:	stos   DWORD PTR es:[rdi],eax
  418fb3:	pushf  
  418fb4:	add    bl,ch
  418fb6:	(bad)  
  418fb8:	add    BYTE PTR [rbp+riz*4-0x432aff6a],bh
  418fbf:	stos   DWORD PTR es:[rdi],eax
  418fc0:	add    ah,al
  418fc2:	lods   eax,DWORD PTR ds:[rsi]
  418fc3:	popf   
  418fc4:	add    cl,al
  418fc6:	stos   BYTE PTR es:[rdi],al
  418fc7:	fwait
  418fc8:	add    al,cl
  418fca:	mov    cl,0xa1
  418fcc:	add    BYTE PTR [rbx+0x49],ah
  418fcf:	xor    eax,0x364a6400
  418fd4:	add    BYTE PTR [rsi-0x37ff7e6f],ah
  418fda:	mov    cl,0xa0
  418fdc:	add    cl,bl
  418fde:	shr    BYTE PTR [rsi-0x59483100],0x0
  418fe5:	shr    DWORD PTR [rbx-0x5944ff65],0x96
  418fec:	add    BYTE PTR [rdi-0x64ff6c5e],dh
  418ff2:	mov    bh,BYTE PTR [rbp+0x0]
  418ff5:	sahf   
  418ff6:	lea    eax,[rax-0x776a5900]
  418ffc:	add    BYTE PTR [rdx-0x1eff7b6f],ah
  419002:	int    0xbe
  419004:	add    ch,ah
  419006:	(bad)  
  419007:	mov    DWORD PTR [rax],0xc9d5e5
  41900d:	(bad)  
  41900e:	(bad)
  419011:	out    dx,eax
  419012:	in     al,0xdc
  419014:	add    ah,dh
  419016:	in     eax,dx
  419017:	call   0xffffffff8ede3e1c
  41901c:	add    BYTE PTR [rdx-0x4fff6d60],dh
  419022:	sahf   
  419023:	nop
  419024:	add    BYTE PTR [rcx-0x49ff7568],ch
  41902a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  41902b:	xchg   esi,eax
  41902c:	add    BYTE PTR [rbp-0x4cff6a5d],dh
  419032:	movabs ds:0xf1f600d0dbe90094,al
  41903b:	in     eax,dx
  41903c:	add    ch,ch
  41903e:	jrcxz  0x41901a
  419040:	add    ah,bh
  419042:	cli    
  419043:	clc    
  419044:	add    bl,bh
  419046:	stc    
  419047:	test   DWORD PTR [rax],0xfbfdfd
  41904d:	(bad)  
  41904e:	(bad)  
  41904f:	std    
  419050:	add    bh,bh
  419052:	(bad)  
  419053:	inc    DWORD PTR [rax]
  419055:	(bad)  
  419056:	(bad)  
  419057:	inc    BYTE PTR [rax]
  419059:	(bad)  
  41905a:	(bad)  
  41905b:	inc    DWORD PTR [rax]
	...
  419255:	add    BYTE PTR [rax],al
  419257:	add    BYTE PTR [rcx+0x5f],ch
  41925a:	pop    rdi
  41925b:	pop    rdi
  41925c:	pop    rdi
  41925d:	pop    rdi
  41925e:	pop    rdi
  41925f:	pop    rdi
  419260:	pop    rdi
  419261:	add    BYTE PTR [rbx],ah
  419263:	add    ah,BYTE PTR [rdi]
  419265:	(bad)  
  419266:	rex.WR
  419267:	rex.WXB push 0x625b637c
  41926d:	gs addr32 pop di
  419271:	and    cl,BYTE PTR [rcx]
  419273:	(bad)  
  419274:	push   rdi
  419275:	imul   ebx,DWORD PTR [rdi+0x5f],0x7a568168
  41927c:	pop    rcx
  41927d:	outs   dx,BYTE PTR ds:[rsi]
  41927e:	ins    BYTE PTR es:[rdi],dx
  41927f:	pop    rdx
  419280:	pop    rdi
  419281:	add    al,0x3
  419283:	add    DWORD PTR [rdi+0x68],eax
  419286:	jl     0x4192eb
  419288:	imul   eax,DWORD PTR [rax+0x65656565],0x1c5f5d6d
  419292:	cmp    eax,0x81685214
  419297:	push   rsi
  419298:	imul   eax,DWORD PTR [rax+0x70717e80],0x79
  41929f:	pop    rsi
  4192a0:	pop    rdi
  4192a1:	(bad)  
  4192a2:	and    DWORD PTR [rdi],edx
  4192a4:	rex.WX imul rax,QWORD PTR [rax+0x65806a46],0x7b656565
  4192af:	fs pop rdi
  4192b1:	(bad)  
  4192b2:	adc    ecx,DWORD PTR ds:[rbp+0x6b]
  4192b6:	add    BYTE PTR [rax-0x7f7f7f8c],0x45
  4192bd:	jge    0x419339
  4192bf:	movsxd ebx,DWORD PTR [rdi+0x3c]
  4192c2:	cmp    cl,BYTE PTR [rdx]
  4192c4:	rex.WRXB push 0xffffffffffffff80
  4192c7:	cmp    BYTE PTR [rax-0x80],0x65
  4192cb:	cmp    BYTE PTR gs:[rdi+0x5c],0x58
  4192d0:	(bad)  
  4192d1:	(bad)  
  4192d2:	xor    eax,DWORD PTR [rip+0xffffffff80807428]        # 0xffffffff80c20700
  4192d8:	jbe    0x41925a
  4192da:	add    BYTE PTR [rax+0x60607580],0x60
  4192e1:	(bad)  
  4192e2:	adc    ch,BYTE PTR [rip+0xffffffff8080782a]        # 0xffffffff80c20b12
  4192e8:	jbe    0x41926a
  4192ea:	add    BYTE PTR [rax+0x606f7280],0x0
  4192f1:	or     eax,0x762c0b16
  4192f6:	add    BYTE PTR [rax-0x7f7f7f8a],0x80
  4192fd:	jae    0x41935f
  4192ff:	add    BYTE PTR [rax],al
  419301:	xor    bh,BYTE PTR [rcx]
  419303:	adc    DWORD PTR [rdi],ebp
  419305:	jbe    0x419287
  419307:	xor    BYTE PTR [rsi+0x76],0x76
  41930b:	jbe    0x419383
  41930d:	ja     0x419364
  41930f:	add    BYTE PTR [rax],al
  419311:	sbb    dl,BYTE PTR ss:[rax]
  419314:	xor    DWORD PTR [rsi-0x80],esi
  419317:	add    BYTE PTR [rax+0x53607380],0x80
  41931e:	add    BYTE PTR es:[rax],al
  419321:	adc    eax,0x76380f3b
  419326:	jbe    0x41939e
  419328:	jbe    0x4193a0
  41932a:	ja     0x419380
  41932c:	rex.W add BYTE PTR [rdi],0x0
  419330:	add    BYTE PTR [rbx],bl
  419332:	and    BYTE PTR [rcx],bl
  419334:	sbb    eax,0x2b2e3418
  419339:	sub    DWORD PTR [rax+0x4e],edx
  41933c:	rex.WB or BYTE PTR [r8],0x0
  419340:	add    BYTE PTR [rip+0x25240c30],dh        # 0x25659f76
  419346:	rex.XB
  419347:	rex.R
  419348:	rex.B
  419349:	rex.X
  41934a:	rex (bad) 
  41934c:	push   rcx
  41934d:	rex.WB add BYTE PTR [r8],al
  419350:	add    dh,bh
  419352:	add    BYTE PTR [rdi+0x50],cl
  419355:	add    BYTE PTR [rax],0x6e
  419358:	outs   dx,BYTE PTR ds:[rsi]
  419359:	add    BYTE PTR [rax],al
  41935b:	sahf   
  41935c:	jnp    0x41935e
  41935e:	add    cl,dl
  419360:	mov    es,WORD PTR [rax]
  419362:	add    bl,cl
  419364:	xchg   esp,eax
  419365:	add    BYTE PTR [rax],al
  419367:	nop
  419368:	lea    eax,[rax]
  41936a:	add    BYTE PTR [rax-0x3affff79],cl
  419370:	loope  0x419372
  419372:	add    BYTE PTR [rip+0x70010054],bl        # 0x704293cc
  419378:	outs   dx,DWORD PTR ds:[rsi]
  419379:	add    BYTE PTR [rbx],al
  41937b:	mov    cl,ch
  41937d:	add    BYTE PTR [rbx],al
  41937f:	lock movabs ds:0x80910300cb7d0300,al
  419389:	add    BYTE PTR [rbx],al
  41938b:	sahf   
  41938c:	mov    DWORD PTR [rax],eax
  41938e:	(bad)  
  41938f:	stos   BYTE PTR es:[rdi],al
  419390:	loope  0x4193ba
  419392:	add    BYTE PTR [rax],al
  419394:	add    BYTE PTR [rax],ah
  419396:	add    BYTE PTR [rax],al
  419398:	add    BYTE PTR [rax+0x0],al
  41939b:	add    BYTE PTR [rax],al
  41939d:	add    DWORD PTR [rax],eax
  41939f:	and    BYTE PTR [rax],al
	...
  4193f1:	movabs eax,ds:0x63ff354963ff7b8b
  4193fa:	rex.WB xor rax,0x354963ff
  419400:	jmp    QWORD PTR [rbx+0x49]
  419403:	xor    eax,0x354963ff
  419408:	jmp    QWORD PTR [rbx+0x49]
  41940b:	xor    eax,0x354963ff
  419410:	jmp    QWORD PTR [rbx+0x49]
  419413:	xor    eax,0x354963ff
  419418:	jmp    QWORD PTR [rbx+0x49]
  41941b:	xor    eax,0x354963ff
  419420:	jmp    QWORD PTR [rbx+0x49]
  419423:	xor    eax,0x354963ff
  419428:	jmp    QWORD PTR [rbx+0x49]
  41942b:	xor    eax,0x354963ff
  419430:	jmp    QWORD PTR [rbx+0x49]
  419433:	xor    eax,0x354963ff
  419438:	inc    DWORD PTR [rax]
	...
  41946e:	add    BYTE PTR [rax],al
  419470:	add    BYTE PTR [rbx-0x9008273],ah
  419476:	(bad)  
  419478:	dec    edx
  41947a:	mov    ch,0xaa
  41947c:	inc    esi
  41947e:	mov    cl,0xa6
  419480:	inc    esp
  419482:	lods   eax,DWORD PTR ds:[rsi]
  419483:	movabs eax,ds:0x99a6beff9daac1ff
  41948c:	(bad)  
  41948d:	mov    edx,0xb8ff94a1
  419492:	lahf   
  419493:	nop
  419494:	push   QWORD PTR [rbp-0x4d007265]
  41949a:	cdq    
  41949b:	mov    bh,bh
  41949d:	mov    al,0x97
  41949f:	xchg   edi,edi
  4194a1:	lods   eax,DWORD PTR ds:[rsi]
  4194a2:	xchg   esp,eax
  4194a3:	test   bh,bh
  4194a5:	stos   BYTE PTR es:[rdi],al
  4194a6:	xchg   ecx,eax
  4194a7:	cmp    edi,0xff7e8ea7
  4194ad:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  4194ae:	mov    bh,BYTE PTR [rdx-0x1]
  4194b1:	movabs eax,ds:0xff354963ff7686
	...
  4194ee:	add    BYTE PTR [rax],al
  4194f0:	add    BYTE PTR [rdi-0x9007d6e],ah
  4194f6:	loope  0x4194d0
  4194f8:	(bad)  
  4194f9:	stc    
  4194fa:	out    dx,al
  4194fb:	jmp    0xffffffffe52d8eff
  419500:	(bad)  
  419501:	stc    
  419502:	jmp    0xffffffffe73a94e8
  419507:	(bad)  
  419509:	mul    ah
  41950b:	(bad)  
  41950d:	mul    cl
  41950f:	(bad)  
  419510:	push   rbp
  419512:	(bad)  
  419514:	push   rbp
  419516:	fmul   st(7),st
  419518:	push   rsp
  41951a:	fxch   st(3)
  41951c:	push   rbx
  41951e:	(bad)  
  41951f:	enter  0xf2ff,0xd3
  419523:	ret    
  419524:	push   rcx
  419526:	rol    al,1
  419528:	push   rcx
  41952a:	int    0xbd
  41952c:	push   rdx
  41952e:	(bad)  
  41952f:	mov    ebp,0x7d8ea8ff
  419534:	jmp    QWORD PTR [rbx+0x49]
  419537:	xor    eax,0xff
	...
  419544:	add    BYTE PTR [rcx+0x4b],bh
  419547:	rex.WXB and rax,0x334b4b79
  41954d:	jns    0x41959a
  41954f:	rex.WXB xor rdi,QWORD PTR [r9+0x4b]
  419553:	rex.WXB xor rdi,QWORD PTR [r9+0x4b]
  419557:	rex.WXB xor rdi,QWORD PTR [r9+0x4b]
  41955b:	rex.WXB xor rdi,QWORD PTR [r9+0x4b]
  41955f:	rex.WXB xor rdi,QWORD PTR [r9+0x4b]
  419563:	rex.WXB xor rdi,QWORD PTR [r9+0x4b]
  419567:	rex.WXB xor rdi,QWORD PTR [r9+0x4b]
  41956b:	rex.WXB xor rdi,QWORD PTR [r9+0x4b]
  41956f:	rex.WXB xor rbp,QWORD PTR [r10-0x9007b6c]
  419576:	jrcxz  0x419552
  419578:	(bad)  
  419579:	sti    
  41957a:	icebp  
  41957b:	in     al,dx
  41957c:	(bad)  
  41957d:	cli    
  41957e:	in     eax,dx
  41957f:	call   0xffffffffe52e9083
  419584:	(bad)  
  419585:	clc    
  419586:	call   0xffffffffe63a956b
  41958b:	(bad)  
  41958d:	mul    dl
  41958f:	(bad)  
  419591:	mul    cl
  419593:	(bad)  
  419594:	push   rsi
  419596:	(bad)  
  419598:	push   rbp
  41959a:	fcmovne st,st(7)
  41959c:	push   rbx
  41959e:	fmul   st,st(3)
  4195a0:	push   rbx
  4195a2:	(bad)  
  4195a3:	enter  0xf1ff,0xd3
  4195a7:	(bad)  
  4195a8:	push   rcx
  4195aa:	iret   
  4195ab:	sar    bh,0xf3
  4195ae:	rol    cl,1
  4195b0:	jmp    FWORD PTR [rdx+0x63ff8191]
  4195b6:	rex.WB xor rax,0xff
  4195bc:	add    BYTE PTR [rax],al
  4195be:	add    BYTE PTR [rax],al
  4195c0:	add    BYTE PTR [rcx+0x4b],bh
  4195c3:	rex.WXB (bad) 
  4195c5:	jle    0x419619
  4195c7:	push   rax
  4195c8:	mov    esi,0xd6575b84
  4195cd:	test   BYTE PTR [rbx+0x57],bl
  4195d0:	(bad)  
  4195d1:	test   BYTE PTR [rbx+0x57],bl
  4195d4:	(bad)  
  4195d5:	test   BYTE PTR [rbx+0x57],bl
  4195d8:	(bad)  
  4195d9:	test   BYTE PTR [rbx+0x57],bl
  4195dc:	(bad)  
  4195dd:	movabs eax,ds:0x63ff354963ff7b8b
  4195e6:	rex.WB xor rax,0x354963ff
  4195ec:	jmp    QWORD PTR [rbx+0x49]
  4195ef:	xor    eax,0x8796acff
  4195f4:	push   rdi
  4195f6:	in     eax,0xdb
  4195f8:	(bad)  
  4195f9:	sti    
  4195fa:	repz lock dec eax
  4195fe:	mov    ah,0xa7
  419600:	inc    ebp
  419602:	mov    al,0xa3
  419604:	(bad)  
  419605:	mov    edi,0xbaff9dab
  41960a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  41960b:	xchg   esi,eax
  41960c:	push   QWORD PTR [rdx-0x53007062]
  419612:	xchg   esi,eax
  419613:	xchg   edi,edi
  419615:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  419616:	mov    ?,WORD PTR [rsi-0x1]
  419619:	popf   
  41961a:	xchg   BYTE PTR [rbp-0x1],dh
  41961d:	xchg   esi,eax
  41961e:	jg     0x41968d
  419620:	dec    DWORD PTR [rdi-0x76009989]
  419626:	jno    0x419687
  419628:	inc    DWORD PTR [rbp-0xc00a694]
  41962e:	rol    bl,cl
  419630:	jmp    FWORD PTR [rsi+0x63ff8593]
  419636:	rex.WB xor rax,0x4b4b79ff
  41963c:	adc    edi,DWORD PTR [rcx+0x4b]
  41963f:	rex.WXB lods al,BYTE PTR ds:[rsi]
  419641:	jge    0x419694
  419643:	rex.WRXB fcom st(2)
  419646:	(bad)
  419649:	mov    dl,0x9e
  41964b:	nop
  41964c:	push   QWORD PTR [rdx-0x4d006f62]
  419652:	sahf   
  419653:	nop
  419654:	push   QWORD PTR [rdx-0x4d006f62]
  41965a:	sahf   
  41965b:	nop
  41965c:	jmp    QWORD PTR [rbx-0x9008273]
  419662:	(bad)  
  419664:	dec    edx
  419666:	mov    ch,0xaa
  419668:	inc    esi
  41966a:	mov    cl,0xa6
  41966c:	inc    esp
  41966e:	lods   eax,DWORD PTR ds:[rsi]
  41966f:	movabs eax,ds:0xdde5f7ff8999aeff
  419678:	(bad)  
  419679:	sti    
  41967a:	div    bl
  41967c:	(bad)  
  41967d:	sti    
  41967e:	repz out dx,eax
  419680:	(bad)  
  419681:	cli    
  419682:	icebp  
  419683:	in     al,dx
  419684:	(bad)  
  419685:	cli    
  419686:	out    dx,al
  419687:	call   0xffffffffe52d908b
  41968c:	push   rdi
  41968e:	call   0xffffffffe63a9673
  419693:	fdiv   st(7),st
  419695:	mul    ah
  419697:	fcos   
  419699:	mul    cl
  41969b:	(bad)  
  41969c:	push   rbp
  41969e:	fst    st(2)
  4196a0:	push   rsp
  4196a2:	fcmovne st,st(6)
  4196a4:	push   rbx
  4196a6:	fmul   st,st(3)
  4196a8:	push   rbx
  4196aa:	(bad)  
  4196ab:	(bad)  
  4196ac:	push   rsp
  4196ae:	(bad)  
  4196af:	(bad)  
  4196b0:	push   QWORD PTR [rax+0x63ff8797]
  4196b6:	rex.WB xor rax,0x4b4b79ff
  4196bc:	je     0x419737
  4196be:	rex.WXB
  4196bf:	rex.WXB xchg r13b,bl
  4196c2:	(bad)  
  4196c3:	iret   
  4196c4:	push   QWORD PTR [rsi-0x49006a5e]
  4196ca:	movabs ds:0xa2b6ff95a2b6ff95,al
  4196d3:	xchg   ebp,eax
  4196d4:	push   QWORD PTR [rsi-0x49006a5e]
  4196da:	movabs ds:0xe1f6ff8292a7ff95,al
  4196e3:	fdivr  st,st(7)
  4196e5:	stc    
  4196e6:	out    dx,al
  4196e7:	jmp    0xffffffffe52d90eb
  4196ec:	(bad)  
  4196ed:	stc    
  4196ee:	jmp    0xffffffff9bf296d4
  4196f3:	mov    edi,?
  4196f5:	clc    
  4196f6:	out    0xdf,eax
  4196f8:	(bad)  
  4196f9:	std    
  4196fa:	clc    
  4196fb:	cmc    
  4196fc:	(bad)  
  4196fd:	cld    
  4196fe:	cmc    
  4196ff:	repnz (bad) 
  419701:	sti    
  419702:	repz lock (bad) 
  419705:	sti    
  419706:	lock jmp 0x419708
  419709:	cli    
  41970a:	in     eax,dx
  41970b:	out    0xff,eax
  41970d:	stc    
  41970e:	(bad)  
  41970f:	in     al,0xff
  419711:	clc    
  419712:	call   0xffffffffe63996f7
  419717:	fdiv   st(7),st
  419719:	mul    dl
  41971b:	fcos   
  41971d:	cmc    
  41971e:	loope  0x4196f6
  419720:	push   rbp
  419722:	fst    st(1)
  419724:	push   rsp
  419726:	fcmovne st,st(7)
  419728:	push   rsp
  41972a:	xlat   BYTE PTR ds:[rbx]
  41972b:	retf   
  41972c:	push   rbp
  41972e:	xlat   BYTE PTR ds:[rbx]
  41972f:	retf   0xb3ff
  419732:	cdq    
  419733:	mov    bh,bh
  419735:	movsxd ecx,DWORD PTR [rcx+0x35]
  419738:	dec    DWORD PTR [rcx-0x7700a5a9]
  41973e:	push   rsi
  41973f:	pop    rcx
  419740:	inc    DWORD PTR [rdi-0x7800a6aa]
  419746:	push   rsi
  419747:	pop    rcx
  419748:	inc    DWORD PTR [rdi-0x5000a6ab]
  41974e:	pop    rdi
  41974f:	pop    rbp
  419750:	jmp    FWORD PTR [rsi-0x5300a6a4]
  419756:	pop    rcx
  419757:	push   rdi
  419758:	jmp    FWORD PTR [rbx-0x5500aba9]
  41975e:	xchg   esp,eax
  41975f:	test   bh,bh
  419761:	mul    bl
  419763:	(bad)  
  419765:	sti    
  419766:	icebp  
  419767:	in     al,dx
  419768:	(bad)  
  419769:	cli    
  41976a:	in     eax,dx
  41976b:	call   0xffffffffe52e926f
  419770:	push   QWORD PTR [rdx-0x7007163]
  419776:	call   0xfffffffffc3f975b
  41977b:	stc    
  41977c:	dec    eax
  41977e:	mov    ah,0xa7
  419780:	inc    ebp
  419782:	mov    al,0xa3
  419784:	(bad)  
  419785:	mov    edi,0xbaff9dab
  41978a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  41978b:	xchg   esi,eax
  41978c:	push   QWORD PTR [rdx-0x53007062]
  419792:	xchg   esi,eax
  419793:	xchg   edi,edi
  419795:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  419796:	mov    ?,WORD PTR [rsi-0x1]
  419799:	popf   
  41979a:	xchg   BYTE PTR [rbp-0x1],dh
  41979d:	xchg   esi,eax
  41979e:	jg     0x41980d
  4197a0:	dec    DWORD PTR [rdi-0x76009989]
  4197a6:	jno    0x419807
  4197a8:	inc    DWORD PTR [rbp-0x900a694]
  4197ae:	fcmovne st,st(6)
  4197b0:	push   QWORD PTR [rbp+0x63ff8d9c]
  4197b6:	rex.WB xor rax,0x5b598bff
  4197bc:	jmp    QWORD PTR [rcx+rdi*2+0x79a4ff79]
  4197c3:	js     0x4197c4
  4197c5:	movabs ds:0xb1ff5b5889ff7878,eax
  4197ce:	movsxd esp,DWORD PTR [rcx-0x1]
  4197d1:	mov    edi,0xbdff666b
  4197d6:	push   0x66bbff63
  4197db:	(bad)  
  4197dc:	jmp    FWORD PTR [rsi+rdx*4-0x1a080079]
  4197e3:	(bad)  
  4197e5:	sti    
  4197e6:	repz lock dec eax
  4197ea:	mov    ah,0xa7
  4197ec:	inc    ebp
  4197ee:	mov    al,0xa3
  4197f0:	push   QWORD PTR [rdi+rbx*4-0x1607006f]
  4197f7:	loop   0x4197f8
  4197f9:	(bad)  
  4197fa:	cld    
  4197fb:	sti    
  4197fc:	(bad)  
  4197fd:	std    
  4197fe:	stc    
  4197ff:	clc    
  419800:	(bad)  
  419801:	std    
  419802:	clc    
  419803:	cmc    
  419804:	(bad)  
  419805:	cld    
  419806:	cmc    
  419807:	repnz (bad) 
  419809:	sti    
  41980a:	repz out dx,al
  41980c:	(bad)  
  41980d:	cli    
  41980e:	lock jmp 0x419810
  419811:	cli    
  419812:	in     eax,dx
  419813:	out    0xff,eax
  419815:	stc    
  419816:	(bad)  
  419817:	jrcxz  0x419818
  419819:	mul    edi
  41981b:	fdivp  st(7),st
  41981d:	mul    esp
  41981f:	fdiv   st(7),st
  419821:	mul    dl
  419823:	fdivr  st,st(7)
  419825:	neg    bh
  419827:	(bad)  
  419828:	push   rbp
  41982a:	(bad)  
  41982c:	push   rsi
  41982e:	fst    st(1)
  419830:	(bad)  
  419831:	mov    eax,0x63ff909e
  419836:	rex.WB xor rax,0x5e5b8dff
  41983c:	jmp    QWORD PTR [rsi-0x59008486]
  419842:	jp     0x4198bf
  419844:	jmp    QWORD PTR [rbp-0x73008586]
  41984a:	pop    rdx
  41984b:	pop    rbp
  41984c:	push   QWORD PTR [rbx-0x3d009a99]
  419852:	jo     0x4198bf
  419854:	inc    eax
  419856:	ins    DWORD PTR es:[rdi],dx
  419857:	push   0x656abeff
  41985c:	jmp    FWORD PTR [rsi-0x8007667]
  419862:	in     eax,0xdd
  419864:	(bad)  
  419865:	sti    
  419866:	div    bl
  419868:	(bad)  
  419869:	sti    
  41986a:	repz out dx,eax
  41986c:	(bad)  
  41986d:	cli    
  41986e:	icebp  
  41986f:	in     al,dx
  419870:	push   QWORD PTR [rsi-0x6006c5e]
  419876:	jmp    0x41985c
  419878:	(bad)  
  419879:	(bad)  
  41987a:	std    
  41987b:	std    
  41987c:	(bad)  
  41987d:	(bad)  
  41987e:	cld    
  41987f:	sti    
  419880:	(bad)  
  419881:	std    
  419882:	cli    
  419883:	stc    
  419884:	(bad)  
  419885:	std    
  419886:	div    ebp
  419888:	(bad)  
  419889:	cld    
  41988a:	cmc    
  41988b:	repnz (bad) 
  41988d:	sti    
  41988e:	repz out dx,eax
  419890:	(bad)  
  419891:	cli    
  419892:	lock jmp 0x419894
  419895:	stc    
  419896:	in     al,dx
  419897:	out    0xff,eax
  419899:	stc    
  41989a:	jmp    0xffffffffe9399882
  41989f:	(bad)  
  4198a1:	mul    esp
  4198a3:	(bad)  
  4198a5:	mul    dl
  4198a7:	fcos   
  4198a9:	mul    al
  4198ab:	(bad)  
  4198ac:	push   rdi
  4198ae:	loopne 0x419885
  4198b0:	(bad)  
  4198b1:	mov    ebx,0x63ff94a2
  4198b6:	rex.WB xor rax,0x615e90ff
  4198bc:	jmp    FWORD PTR [rax-0x58008283]
  4198c2:	jl     0x419940
  4198c4:	jmp    QWORD PTR [rdi-0x71008485]
  4198ca:	pop    rsp
  4198cb:	pop    rsi
  4198cc:	push   QWORD PTR [rsi-0x3a009696]
  4198d2:	jne    0x419944
  4198d4:	inc    ebx
  4198d6:	jno    0x419944
  4198d8:	inc    ecx
  4198da:	outs   dx,BYTE PTR ds:[rsi]
  4198db:	imul   edi,edi,0xff8c9bb0
  4198e1:	clc    
  4198e2:	out    0xdf,eax
  4198e4:	(bad)  
  4198e5:	std    
  4198e6:	clc    
  4198e7:	cmc    
  4198e8:	(bad)  
  4198e9:	cld    
  4198ea:	cmc    
  4198eb:	repnz (bad) 
  4198ed:	sti    
  4198ee:	repz lock (bad) 
  4198f1:	mov    eax,0xfaff95a4
  4198f6:	jmp    0x4198dd
  4198f8:	(bad)  
  4198f9:	(bad)  
  4198fa:	(bad)  
  4198fb:	(bad)  
  4198fc:	dec    eax
  4198fe:	mov    ah,0xa7
  419900:	inc    ebp
  419902:	mov    al,0xa3
  419904:	(bad)  
  419905:	mov    edi,0xbaff9dab
  41990a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  41990b:	xchg   esi,eax
  41990c:	push   QWORD PTR [rdx-0x53007062]
  419912:	xchg   esi,eax
  419913:	xchg   edi,edi
  419915:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  419916:	mov    ?,WORD PTR [rsi-0x1]
  419919:	popf   
  41991a:	xchg   BYTE PTR [rbp-0x1],dh
  41991d:	xchg   esi,eax
  41991e:	jg     0x41998d
  419920:	dec    DWORD PTR [rdi-0x76009989]
  419926:	jno    0x419987
  419928:	inc    DWORD PTR [rbp-0x700a694]
  41992e:	jrcxz  0x419908
  419930:	(bad)  
  419931:	mov    esi,0x63ff99a6
  419936:	rex.WB xor rax,0x636193ff
  41993c:	jmp    FWORD PTR [rdx-0x55008182]
  419942:	jge    0x4199c2
  419944:	jmp    FWORD PTR [rcx-0x6e008282]
  41994a:	pop    rsi
  41994b:	(bad)  
  41994c:	(bad)  
  41994d:	mov    eax,0xc9ff6d6e
  419952:	jns    0x4199c9
  419954:	inc    edi
  419956:	jne    0x4199c9
  419958:	inc    esp
  41995a:	jb     0x4199ca
  41995c:	push   QWORD PTR [rdx-0x7007163]
  419962:	call   0xfffffffffc3f9947
  419967:	stc    
  419968:	dec    eax
  41996a:	mov    ah,0xa7
  41996c:	inc    ebp
  41996e:	mov    al,0xa3
  419970:	(bad)  
  419971:	mov    edx,0xfaff98a6
  419976:	in     eax,dx
  419977:	out    0xff,eax
  419979:	(bad)  
  41997a:	(bad)  
  41997b:	(bad)  
  41997c:	(bad)  
  41997d:	(bad)  
  41997e:	(bad)  
  41997f:	(bad)  
  419980:	(bad)  
  419981:	(bad)  
  419982:	(bad)  
  419983:	(bad)  
  419984:	(bad)  
  419985:	(bad)  
  419986:	cld    
  419987:	sti    
  419988:	(bad)  
  419989:	(bad)  
  41998a:	cli    
  41998b:	clc    
  41998c:	(bad)  
  41998d:	cld    
  41998e:	div    ch
  419990:	(bad)  
  419991:	cld    
  419992:	hlt    
  419993:	icebp  
  419994:	(bad)  
  419995:	sti    
  419996:	repz out dx,al
  419998:	(bad)  
  419999:	sti    
  41999a:	lock (bad) 
  41999c:	(bad)  
  41999d:	stc    
  41999e:	in     al,dx
  41999f:	out    0xff,al
  4199a1:	clc    
  4199a2:	(bad)  
  4199a3:	loop   0x4199a4
  4199a5:	clc    
  4199a6:	call   0xffffffffe439998a
  4199ab:	(bad)  
  4199ad:	clc    
  4199ae:	in     al,0xdb
  4199b0:	inc    ecx
  4199b2:	stos   BYTE PTR es:[rdi],al
  4199b3:	popf   
  4199b4:	jmp    QWORD PTR [rbx+0x49]
  4199b7:	xor    eax,0x666397ff
  4199bc:	jmp    FWORD PTR [rbp-0x53007f80]
  4199c2:	cmp    BYTE PTR [rdi-0x1],0xab
  4199c6:	cmp    BYTE PTR [rdi-0x1],0x94
  4199ca:	(bad)  
  4199cb:	fs (bad) 
  4199cd:	mov    ebx,0xccff7172
  4199d2:	jge    0x419a4e
  4199d4:	dec    edx
  4199d6:	jp     0x419a4e
  4199d8:	inc    edi
  4199da:	ja     0x419a4e
  4199dc:	push   QWORD PTR [rdi+rbx*4-0x1607006f]
  4199e3:	loop   0x4199e4
  4199e5:	(bad)  
  4199e6:	cld    
  4199e7:	sti    
  4199e8:	(bad)  
  4199e9:	std    
  4199ea:	stc    
  4199eb:	clc    
  4199ec:	(bad)  
  4199ed:	std    
  4199ee:	clc    
  4199ef:	cmc    
  4199f0:	(bad)  
  4199f1:	mov    esp,0xfaff9aa8
  4199f6:	out    dx,eax
  4199f7:	jmp    0x4199fb
  4199fc:	(bad)  
  4199fd:	(bad)  
  4199fe:	(bad)  
  4199ff:	(bad)  
  419a00:	(bad)  
  419a01:	(bad)  
  419a02:	(bad)  
  419a03:	(bad)  
  419a04:	(bad)  
  419a05:	(bad)  
  419a06:	(bad)  
  419a07:	std    
  419a08:	(bad)  
  419a09:	(bad)  
  419a0a:	cld    
  419a0b:	sti    
  419a0c:	(bad)  
  419a0d:	std    
  419a0e:	stc    
  419a0f:	clc    
  419a10:	(bad)  
  419a11:	cld    
  419a12:	clc    
  419a13:	hlt    
  419a14:	(bad)  
  419a15:	cld    
  419a16:	cmc    
  419a17:	icebp  
  419a18:	(bad)  
  419a19:	sti    
  419a1a:	repnz out dx,al
  419a1c:	(bad)  
  419a1d:	cli    
  419a1e:	out    dx,eax
  419a1f:	(bad)  
  419a20:	(bad)  
  419a21:	stc    
  419a22:	in     al,dx
  419a23:	in     eax,0xff
  419a25:	stc    
  419a26:	(bad)  
  419a27:	jrcxz  0x419a28
  419a29:	clc    
  419a2a:	out    0xdf,eax
  419a2c:	(bad)  
  419a2d:	cli    
  419a2e:	call   0xffffffffae069a12
  419a33:	movabs eax,ds:0x686699ff354963ff
  419a3c:	push   QWORD PTR [rax-0x4f007d7e]
  419a42:	(bad)  
  419a43:	(bad)  
  419a44:	jmp    FWORD PTR [rdi-0x68007d7f]
  419a4a:	fs addr32 (bad) 
  419a4d:	mov    ebp,0xcfff7576
  419a52:	(bad)  
  419a53:	jg     0x419a54
  419a55:	int    0x7e
  419a57:	jnp    0x419a58
  419a59:	retf   
  419a5a:	jnp    0x419ad3
  419a5c:	push   QWORD PTR [rsi-0x6006c5e]
  419a62:	jmp    0x419a48
  419a64:	(bad)  
  419a65:	(bad)  
  419a66:	std    
  419a67:	std    
  419a68:	(bad)  
  419a69:	(bad)  
  419a6a:	cld    
  419a6b:	sti    
  419a6c:	(bad)  
  419a6d:	std    
  419a6e:	cli    
  419a6f:	stc    
  419a70:	(bad)  
  419a71:	mov    esi,0xfbff9caa
  419a76:	lock jmp 0x419a78
  419a79:	(bad)  
  419a7a:	(bad)  
  419a7b:	(bad)  
  419a7c:	dec    eax
  419a7e:	mov    ah,0xa7
  419a80:	inc    ebp
  419a82:	mov    al,0xa3
  419a84:	(bad)  
  419a85:	mov    edi,0xbaff9dab
  419a8a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  419a8b:	xchg   esi,eax
  419a8c:	push   QWORD PTR [rdx-0x53007062]
  419a92:	xchg   esi,eax
  419a93:	xchg   edi,edi
  419a95:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  419a96:	mov    ?,WORD PTR [rsi-0x1]
  419a99:	popf   
  419a9a:	xchg   BYTE PTR [rbp-0x1],dh
  419a9d:	xchg   esi,eax
  419a9e:	jg     0x419b0d
  419aa0:	dec    DWORD PTR [rdi-0x76009989]
  419aa6:	jno    0x419b07
  419aa8:	inc    DWORD PTR [rbp-0x500a694]
  419aae:	(bad)  
  419aaf:	jrcxz  0x419ab0
  419ab1:	(bad)  
  419ab2:	mov    cl,0xa5
  419ab4:	jmp    QWORD PTR [rbx+0x49]
  419ab7:	xor    eax,0x6b6a9eff
  419abc:	push   QWORD PTR [rbx-0x4d007a7b]
  419ac2:	test   BYTE PTR [rdi+rdi*8-0x7c7c4f],al
  419ac9:	fwait
  419aca:	addr32 imul edi,edi,0xff7a7bbf
  419ad1:	rol    BYTE PTR [rsi-0x7c30007d],cl
  419ad7:	jg     0x419ad8
  419ad9:	int    0x80
  419adb:	jge    0x419adc
  419add:	mov    eax,0xfaff95a4
  419ae2:	jmp    0x419ac9
  419ae4:	(bad)  
  419ae5:	(bad)  
  419ae6:	(bad)  
  419ae7:	(bad)  
  419ae8:	dec    eax
  419aea:	mov    ah,0xa7
  419aec:	inc    ebp
  419aee:	mov    al,0xa3
  419af0:	inc    eax
  419af2:	lods   al,BYTE PTR ds:[rsi]
  419af3:	sahf   
  419af4:	(bad)  
  419af5:	cli    
  419af6:	icebp  
  419af7:	in     eax,dx
  419af8:	(bad)  
  419af9:	(bad)  
  419afa:	(bad)  
  419afb:	(bad)  
  419afc:	(bad)  
  419afd:	(bad)  
  419afe:	(bad)  
  419aff:	(bad)  
  419b00:	(bad)  
  419b01:	(bad)  
  419b02:	(bad)  
  419b03:	(bad)  
  419b04:	(bad)  
  419b05:	(bad)  
  419b06:	(bad)  
  419b07:	(bad)  
  419b08:	(bad)  
  419b09:	(bad)  
  419b0a:	(bad)  
  419b0b:	(bad)  
  419b0c:	(bad)  
  419b0d:	(bad)  
  419b0e:	cld    
  419b0f:	cld    
  419b10:	(bad)  
  419b11:	(bad)  
  419b12:	sti    
  419b13:	cli    
  419b14:	(bad)  
  419b15:	std    
  419b16:	cli    
  419b17:	idiv   edi
  419b19:	std    
  419b1a:	div    esp
  419b1c:	(bad)  
  419b1d:	sti    
  419b1e:	cmc    
  419b1f:	lock (bad) 
  419b21:	sti    
  419b22:	icebp  
  419b23:	in     eax,dx
  419b24:	(bad)  
  419b25:	stc    
  419b26:	out    dx,eax
  419b27:	(bad)  
  419b28:	(bad)  
  419b29:	cli    
  419b2a:	in     al,dx
  419b2b:	out    0xff,al
  419b2d:	sti    
  419b2e:	in     al,dx
  419b2f:	out    0xff,al
  419b31:	retf   0xaab6
  419b34:	jmp    QWORD PTR [rbx+0x49]
  419b37:	xor    eax,0x6e6ca1ff
  419b3c:	push   QWORD PTR [rsi-0x4a007879]
  419b42:	xchg   BYTE PTR [rsi-0x797a4b01],al
  419b48:	call   FWORD PTR [rsi-0x3e009295]
  419b4e:	jle    0x419bce
  419b50:	call   rbp
  419b52:	mov    eax,DWORD PTR [rdi-0x7b772c01]
  419b58:	call   rcx
  419b5a:	test   BYTE PTR [rcx-0x67594501],al
  419b60:	(bad)  
  419b61:	cli    
  419b62:	in     eax,dx
  419b63:	out    0xff,eax
  419b65:	(bad)  
  419b66:	(bad)  
  419b67:	(bad)  
  419b68:	(bad)  
  419b69:	(bad)  
  419b6a:	(bad)  
  419b6b:	(bad)  
  419b6c:	(bad)  
  419b6d:	(bad)  
  419b6e:	(bad)  
  419b6f:	(bad)  
  419b70:	inc    edx
  419b72:	scas   al,BYTE PTR es:[rdi]
  419b73:	movabs al,ds:0xffffffffeef2fbff
  419b7c:	(bad)  
  419b7d:	(bad)  
  419b7e:	(bad)  
  419b7f:	(bad)  
  419b80:	(bad)  
  419b81:	(bad)  
  419b82:	(bad)  
  419b83:	(bad)  
  419b84:	(bad)  
  419b85:	(bad)  
  419b86:	(bad)  
  419b87:	(bad)  
  419b88:	(bad)  
  419b89:	(bad)  
  419b8a:	(bad)  
  419b8b:	(bad)  
  419b8c:	(bad)  
  419b8d:	(bad)  
  419b8e:	(bad)  
  419b8f:	(bad)  
  419b90:	(bad)  
  419b91:	(bad)  
  419b92:	std    
  419b93:	cld    
  419b94:	(bad)  
  419b95:	(bad)  
  419b96:	cld    
  419b97:	cli    
  419b98:	(bad)  
  419b99:	std    
  419b9a:	stc    
  419b9b:	idiv   edi
  419b9d:	cld    
  419b9e:	div    esp
  419ba0:	(bad)  
  419ba1:	cld    
  419ba2:	repz lock (bad) 
  419ba5:	sti    
  419ba6:	repnz in eax,dx
  419ba8:	(bad)  
  419ba9:	sti    
  419baa:	out    dx,al
  419bab:	jmp    0xffffffffea3198af
  419bb0:	dec    esp
  419bb2:	mov    ecx,0x4963ffb0
  419bb7:	xor    eax,0x7270a4ff
  419bbc:	(bad)  
  419bbd:	mov    ecx,0xb9ff8a89
  419bc2:	mov    BYTE PTR [rcx-0x76774701],cl
  419bc8:	jmp    QWORD PTR [rdx-0x3b008f92]
  419bce:	(bad)  
  419bcf:	cmp    edi,0xff8d8fd9
  419bd5:	(bad)  
  419bd6:	mov    ecx,DWORD PTR [rcx-0x79772b01]
  419bdc:	(bad)  
  419bdd:	mov    esp,0xfaff9aa8
  419be2:	out    dx,eax
  419be3:	jmp    0x419be7
  419be8:	(bad)  
  419be9:	(bad)  
  419bea:	(bad)  
  419beb:	(bad)  
  419bec:	(bad)  
  419bed:	(bad)  
  419bee:	(bad)  
  419bef:	(bad)  
  419bf0:	inc    ebx
  419bf2:	mov    al,0xa2
  419bf4:	(bad)  
  419bf5:	cld    
  419bf6:	hlt    
  419bf7:	lock (bad) 
  419bf9:	(bad)  
  419bfa:	(bad)  
  419bfb:	(bad)  
  419bfc:	dec    eax
  419bfe:	mov    ah,0xa7
  419c00:	inc    ecx
  419c02:	lods   al,BYTE PTR ds:[rsi]
  419c03:	lahf   
  419c04:	push   QWORD PTR [rsi-0x54006c5e]
  419c0a:	xchg   ebp,eax
  419c0b:	test   edi,edi
  419c0d:	lahf   
  419c0e:	xchg   DWORD PTR [rdi-0x1],esi
  419c11:	xchg   edx,eax
  419c12:	jnp    0x419c7c
  419c14:	dec    DWORD PTR [rax-0x100a291]
  419c1a:	cld    
  419c1b:	cli    
  419c1c:	(bad)  
  419c1d:	std    
  419c1e:	stc    
  419c1f:	clc    
  419c20:	(bad)  
  419c21:	cld    
  419c22:	div    ebx
  419c24:	(bad)  
  419c25:	cld    
  419c26:	hlt    
  419c27:	icebp  
  419c28:	(bad)  
  419c29:	cld    
  419c2a:	repnz out dx,al
  419c2c:	(bad)  
  419c2d:	(bad)  
  419c2e:	repz out dx,al
  419c30:	call   rax
  419c32:	mov    edi,0x4963ffb4
  419c37:	xor    eax,0x7573a7ff
  419c3c:	(bad)  
  419c3d:	mov    esp,0xbbff8c8b
  419c42:	mov    ecx,DWORD PTR [rbx-0x74754501]
  419c48:	jmp    QWORD PTR [rsi-0x39008c8f]
  419c4e:	xchg   BYTE PTR [rbp-0x6e6c2401],al
  419c54:	(bad)  
  419c55:	fst    DWORD PTR [rax-0x72280072]
  419c5b:	mov    edi,edi
  419c5d:	mov    esi,0xfbff9caa
  419c62:	lock jmp 0x419c64
  419c65:	(bad)  
  419c66:	(bad)  
  419c67:	(bad)  
  419c68:	dec    eax
  419c6a:	mov    ah,0xa7
  419c6c:	inc    ebp
  419c6e:	mov    al,0xa3
  419c70:	inc    ebp
  419c72:	mov    cl,0xa4
  419c74:	(bad)  
  419c75:	cld    
  419c76:	cmc    
  419c77:	repnz (bad) 
  419c79:	(bad)  
  419c7a:	(bad)  
  419c7b:	(bad)  
  419c7c:	(bad)  
  419c7d:	(bad)  
  419c7e:	(bad)  
  419c7f:	(bad)  
  419c80:	(bad)  
  419c81:	(bad)  
  419c82:	(bad)  
  419c83:	(bad)  
  419c84:	(bad)  
  419c85:	(bad)  
  419c86:	(bad)  
  419c87:	(bad)  
  419c88:	(bad)  
  419c89:	(bad)  
  419c8a:	(bad)  
  419c8b:	(bad)  
  419c8c:	(bad)  
  419c8d:	(bad)  
  419c8e:	(bad)  
  419c8f:	(bad)  
  419c90:	(bad)  
  419c91:	(bad)  
  419c92:	(bad)  
  419c93:	(bad)  
  419c94:	(bad)  
  419c95:	(bad)  
  419c96:	(bad)  
  419c97:	(bad)  
  419c98:	(bad)  
  419c99:	(bad)  
  419c9a:	std    
  419c9b:	cld    
  419c9c:	(bad)  
  419c9d:	(bad)  
  419c9e:	sti    
  419c9f:	stc    
  419ca0:	(bad)  
  419ca1:	std    
  419ca2:	cli    
  419ca3:	idiv   edi
  419ca5:	cld    
  419ca6:	cmc    
  419ca7:	repnz (bad) 
  419ca9:	cli    
  419caa:	lock jmp 0x419cac
  419cad:	clc    
  419cae:	in     eax,dx
  419caf:	out    0xff,eax
  419cb1:	(bad)  
  419cb2:	ret    0xffba
  419cb5:	movsxd ecx,DWORD PTR [rcx+0x35]
  419cb8:	jmp    FWORD PTR [rbx-0x40008889]
  419cbe:	lea    ecx,[rsi-0x71724101]
  419cc4:	(bad)  
  419cc5:	mov    esi,0xa9ff8d8d
  419cca:	je     0x419d42
  419ccc:	dec    ecx
  419cce:	mov    DWORD PTR [rcx-0x68672001],ecx
  419cd4:	(bad)  
  419cd5:	fcom   QWORD PTR [rbp-0x6d25006e]
  419cdb:	nop
  419cdc:	inc    eax
  419cde:	lods   al,BYTE PTR ds:[rsi]
  419cdf:	sahf   
  419ce0:	(bad)  
  419ce1:	cli    
  419ce2:	icebp  
  419ce3:	in     eax,dx
  419ce4:	(bad)  
  419ce5:	(bad)  
  419ce6:	(bad)  
  419ce7:	(bad)  
  419ce8:	(bad)  
  419ce9:	(bad)  
  419cea:	(bad)  
  419ceb:	(bad)  
  419cec:	(bad)  
  419ced:	(bad)  
  419cee:	(bad)  
  419cef:	(bad)  
  419cf0:	inc    esi
  419cf2:	mov    bl,0xa5
  419cf4:	(bad)  
  419cf5:	cld    
  419cf6:	div    ah
  419cf8:	(bad)  
  419cf9:	(bad)  
  419cfa:	(bad)  
  419cfb:	(bad)  
  419cfc:	(bad)  
  419cfd:	(bad)  
  419cfe:	(bad)  
  419cff:	(bad)  
  419d00:	(bad)  
  419d01:	(bad)  
  419d02:	(bad)  
  419d03:	(bad)  
  419d04:	(bad)  
  419d05:	(bad)  
  419d06:	(bad)  
  419d07:	(bad)  
  419d08:	(bad)  
  419d09:	(bad)  
  419d0a:	(bad)  
  419d0b:	(bad)  
  419d0c:	(bad)  
  419d0d:	(bad)  
  419d0e:	(bad)  
  419d0f:	(bad)  
  419d10:	(bad)  
  419d11:	(bad)  
  419d12:	(bad)  
  419d13:	(bad)  
  419d14:	(bad)  
  419d15:	(bad)  
  419d16:	(bad)  
  419d17:	(bad)  
  419d18:	(bad)  
  419d19:	(bad)  
  419d1a:	(bad)  
  419d1b:	(bad)  
  419d1c:	(bad)  
  419d1d:	(bad)  
  419d1e:	std    
  419d1f:	cld    
  419d20:	(bad)  
  419d21:	(bad)  
  419d22:	cld    
  419d23:	sti    
  419d24:	(bad)  
  419d25:	(bad)  
  419d26:	cld    
  419d27:	sti    
  419d28:	call   rsp
  419d2a:	ret    
  419d2b:	mov    edx,0xafbacdff
  419d30:	inc    edi
  419d32:	mov    cl,0xa5
  419d34:	jmp    QWORD PTR [rbx+0x49]
  419d37:	xor    eax,0x7b79afff
  419d3c:	inc    edx
  419d3e:	nop
  419d3f:	xchg   ecx,eax
  419d40:	inc    edx
  419d42:	nop
  419d43:	nop
  419d44:	inc    ecx
  419d46:	(bad)  
  419d47:	nop
  419d48:	jmp    FWORD PTR [rbp-0x34008788]
  419d4e:	lea    ecx,[rbp-0x64631d01]
  419d54:	(bad)  
  419d55:	fistp  WORD PTR [rax-0x69220069]
  419d5b:	xchg   esp,eax
  419d5c:	inc    edx
  419d5e:	scas   al,BYTE PTR es:[rdi]
  419d5f:	movabs al,ds:0xffffffffeef2fbff
  419d68:	(bad)  
  419d69:	(bad)  
  419d6a:	(bad)  
  419d6b:	(bad)  
  419d6c:	(bad)  
  419d6d:	(bad)  
  419d6e:	(bad)  
  419d6f:	(bad)  
  419d70:	dec    eax
  419d72:	mov    ah,0xa7
  419d74:	(bad)  
  419d75:	std    
  419d76:	div    esp
  419d78:	(bad)  
  419d79:	(bad)  
  419d7a:	(bad)  
  419d7b:	(bad)  
  419d7c:	(bad)  
  419d7d:	(bad)  
  419d7e:	(bad)  
  419d7f:	(bad)  
  419d80:	(bad)  
  419d81:	(bad)  
  419d82:	(bad)  
  419d83:	(bad)  
  419d84:	(bad)  
  419d85:	(bad)  
  419d86:	(bad)  
  419d87:	(bad)  
  419d88:	(bad)  
  419d89:	(bad)  
  419d8a:	(bad)  
  419d8b:	(bad)  
  419d8c:	(bad)  
  419d8d:	(bad)  
  419d8e:	(bad)  
  419d8f:	(bad)  
  419d90:	(bad)  
  419d91:	(bad)  
  419d92:	(bad)  
  419d93:	(bad)  
  419d94:	(bad)  
  419d95:	(bad)  
  419d96:	(bad)  
  419d97:	(bad)  
  419d98:	(bad)  
  419d99:	(bad)  
  419d9a:	(bad)  
  419d9b:	(bad)  
  419d9c:	(bad)  
  419d9d:	(bad)  
  419d9e:	(bad)  
  419d9f:	(bad)  
  419da0:	(bad)  
  419da1:	cld    
  419da2:	stc    
  419da3:	clc    
  419da4:	call   FWORD PTR [rdi+0x63ff7284]
  419daa:	rex.WB xor rax,0x354963ff
  419db0:	jmp    QWORD PTR [rbx+0x49]
  419db3:	xor    eax,0x354963ff
  419db8:	push   QWORD PTR [rbx-0x3a008183]
  419dbe:	xchg   ebx,eax
  419dbf:	xchg   esp,eax
  419dc0:	inc    ebp
  419dc2:	xchg   edx,eax
  419dc3:	xchg   ebx,eax
  419dc4:	inc    esp
  419dc6:	xchg   edx,eax
  419dc7:	xchg   edx,eax
  419dc8:	push   QWORD PTR [rax-0x33008385]
  419dce:	xchg   ecx,eax
  419dcf:	xchg   ecx,eax
  419dd0:	jmp    rbp
  419dd2:	movabs al,ds:0x9ae0ff9c9de3ff9f
  419ddb:	cdq    
  419ddc:	inc    ebx
  419dde:	mov    al,0xa2
  419de0:	(bad)  
  419de1:	cld    
  419de2:	hlt    
  419de3:	lock (bad) 
  419de5:	(bad)  
  419de6:	(bad)  
  419de7:	(bad)  
  419de8:	dec    eax
  419dea:	mov    ah,0xa7
  419dec:	inc    ecx
  419dee:	lods   al,BYTE PTR ds:[rsi]
  419def:	lahf   
  419df0:	dec    ecx
  419df2:	mov    dh,0xa8
  419df4:	(bad)  
  419df5:	std    
  419df6:	stc    
  419df7:	idiv   bh
  419df9:	(bad)  
  419dfa:	(bad)  
  419dfb:	(bad)  
  419dfc:	(bad)  
  419dfd:	(bad)  
  419dfe:	(bad)  
  419dff:	(bad)  
  419e00:	(bad)  
  419e01:	(bad)  
  419e02:	(bad)  
  419e03:	(bad)  
  419e04:	(bad)  
  419e05:	(bad)  
  419e06:	(bad)  
  419e07:	(bad)  
  419e08:	(bad)  
  419e09:	(bad)  
  419e0a:	(bad)  
  419e0b:	(bad)  
  419e0c:	(bad)  
  419e0d:	(bad)  
  419e0e:	(bad)  
  419e0f:	(bad)  
  419e10:	(bad)  
  419e11:	(bad)  
  419e12:	(bad)  
  419e13:	(bad)  
  419e14:	(bad)  
  419e15:	(bad)  
  419e16:	(bad)  
  419e17:	(bad)  
  419e18:	(bad)  
  419e19:	(bad)  
  419e1a:	(bad)  
  419e1b:	(bad)  
  419e1c:	(bad)  
  419e1d:	(bad)  
  419e1e:	(bad)  
  419e1f:	(bad)  
  419e20:	(bad)  
  419e21:	cli    
  419e22:	stc    
  419e23:	clc    
  419e24:	jmp    QWORD PTR [rsi-0x2a008474]
  419e2a:	(bad)
  419e2d:	mov    ecx,0x6cff92a1
  419e32:	push   rdx
  419e33:	notrack jmp QWORD PTR [rdx+0x48]
  419e37:	xor    al,0x13
  419e39:	mov    dh,0x7f
  419e3b:	cmp    bh,0xc9
  419e3e:	xchg   ebp,eax
  419e3f:	xchg   esi,eax
  419e40:	dec    eax
  419e42:	xchg   esp,eax
  419e43:	xchg   ebp,eax
  419e44:	dec    eax
  419e46:	xchg   esp,eax
  419e47:	xchg   esp,eax
  419e48:	push   QWORD PTR [rbp+rdi*2-0x6b300081]
  419e4f:	xchg   esp,eax
  419e50:	(bad)  
  419e51:	call   0xffffffffe64141fa
  419e56:	movabs eax,ds:0xb1c5ff9d9ee4ffa1
  419e5f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  419e60:	(bad)  
  419e61:	cld    
  419e62:	cmc    
  419e63:	repnz (bad) 
  419e65:	(bad)  
  419e66:	(bad)  
  419e67:	(bad)  
  419e68:	(bad)  
  419e69:	(bad)  
  419e6a:	(bad)  
  419e6b:	(bad)  
  419e6c:	(bad)  
  419e6d:	(bad)  
  419e6e:	(bad)  
  419e6f:	(bad)  
  419e70:	dec    edx
  419e72:	mov    bh,0xaa
  419e74:	(bad)  
  419e75:	std    
  419e76:	stc    
  419e77:	clc    
  419e78:	(bad)  
  419e79:	(bad)  
  419e7a:	(bad)  
  419e7b:	(bad)  
  419e7c:	(bad)  
  419e7d:	(bad)  
  419e7e:	(bad)  
  419e7f:	(bad)  
  419e80:	(bad)  
  419e81:	(bad)  
  419e82:	(bad)  
  419e83:	(bad)  
  419e84:	(bad)  
  419e85:	(bad)  
  419e86:	(bad)  
  419e87:	(bad)  
  419e88:	(bad)  
  419e89:	(bad)  
  419e8a:	(bad)  
  419e8b:	(bad)  
  419e8c:	(bad)  
  419e8d:	(bad)  
  419e8e:	(bad)  
  419e8f:	(bad)  
  419e90:	(bad)  
  419e91:	(bad)  
  419e92:	(bad)  
  419e93:	(bad)  
  419e94:	(bad)  
  419e95:	(bad)  
  419e96:	(bad)  
  419e97:	(bad)  
  419e98:	(bad)  
  419e99:	(bad)  
  419e9a:	(bad)  
  419e9b:	(bad)  
  419e9c:	(bad)  
  419e9d:	(bad)  
  419e9e:	(bad)  
  419e9f:	(bad)  
  419ea0:	(bad)  
  419ea1:	cld    
  419ea2:	cli    
  419ea3:	stc    
  419ea4:	jmp    FWORD PTR [rbx+rdx*4-0x100c007d]
  419eab:	in     eax,dx
  419eac:	(bad)  
  419ead:	jns    0x419f0f
  419eaf:	rex.WR jmp FWORD PTR [rdx+rdx*2+0x3e]
  419eb4:	adc    al,0x0
  419eb6:	add    BYTE PTR [rax],al
  419eb8:	add    BYTE PTR [rcx-0x33007c7d],bh
  419ebe:	xchg   edi,eax
  419ebf:	cwde   
  419ec0:	dec    esp
  419ec2:	xchg   edi,eax
  419ec3:	xchg   edi,eax
  419ec4:	dec    ebx
  419ec6:	xchg   esi,eax
  419ec7:	xchg   edi,eax
  419ec8:	(bad)  
  419ec9:	mov    eax,0xd1ff8181
  419ece:	xchg   edi,eax
  419ecf:	xchg   edi,eax
  419ed0:	(bad)  
  419ed1:	(bad)  
  419ed2:	test   al,0xa8
  419ed4:	(bad)  
  419ed5:	call   0xffffffffe8414480
  419eda:	movabs ds:0xf6fcffa5b3c6ffa2,eax
  419ee3:	hlt    
  419ee4:	(bad)  
  419ee5:	(bad)  
  419ee6:	(bad)  
  419ee7:	(bad)  
  419ee8:	(bad)  
  419ee9:	(bad)  
  419eea:	(bad)  
  419eeb:	(bad)  
  419eec:	(bad)  
  419eed:	(bad)  
  419eee:	(bad)  
  419eef:	(bad)  
  419ef0:	dec    ebx
  419ef2:	mov    eax,0xfbfeffab
  419ef7:	stc    
  419ef8:	(bad)  
  419ef9:	std    
  419efa:	stc    
  419efb:	idiv   edi
  419efd:	std    
  419efe:	clc    
  419eff:	idiv   edi
  419f01:	cld    
  419f02:	clc    
  419f03:	cmc    
  419f04:	(bad)  
  419f05:	cld    
  419f06:	div    esp
  419f08:	(bad)  
  419f09:	std    
  419f0a:	div    ebx
  419f0c:	(bad)  
  419f0d:	cld    
  419f0e:	cmc    
  419f0f:	repnz (bad) 
  419f11:	cld    
  419f12:	cmc    
  419f13:	icebp  
  419f14:	(bad)  
  419f15:	cld    
  419f16:	hlt    
  419f17:	lock (bad) 
  419f19:	sti    
  419f1a:	repz out dx,eax
  419f1c:	(bad)  
  419f1d:	sti    
  419f1e:	repz out dx,eax
  419f20:	(bad)  
  419f21:	sti    
  419f22:	repnz in eax,dx
  419f24:	push   QWORD PTR [rdx-0x69007567]
  419f2a:	jg     0x419f9a
  419f2c:	(bad)  
  419f2d:	jg     0x419f95
  419f2f:	push   rdx
  419f30:	adc    eax,0x0
  419f35:	add    BYTE PTR [rax],al
  419f37:	add    BYTE PTR [rax],al
  419f39:	mov    ebp,0xcfff8686
  419f3e:	(bad)  
  419f3f:	fwait
  419f40:	dec    edi
  419f42:	cdq    
  419f43:	(bad)  
  419f44:	dec    ebp
  419f46:	cdq    
  419f47:	cdq    
  419f48:	(bad)  
  419f49:	mov    edx,0xd3ff8483
  419f4e:	(bad)  
  419f4f:	fwait
  419f50:	(bad)  
  419f51:	in     eax,dx
  419f52:	lods   al,BYTE PTR ds:[rsi]
  419f53:	lods   al,BYTE PTR ds:[rsi]
  419f54:	(bad)  
  419f55:	in     al,dx
  419f56:	test   eax,0xa7eaffa9
  419f5b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  419f5c:	dec    eax
  419f5e:	mov    ah,0xa7
  419f60:	(bad)  
  419f61:	std    
  419f62:	div    esp
  419f64:	(bad)  
  419f65:	(bad)  
  419f66:	(bad)  
  419f67:	(bad)  
  419f68:	(bad)  
  419f69:	(bad)  
  419f6a:	(bad)  
  419f6b:	(bad)  
  419f6c:	(bad)  
  419f6d:	(bad)  
  419f6e:	(bad)  
  419f6f:	(bad)  
  419f70:	dec    ebx
  419f72:	mov    eax,0xb8cbffab
  419f77:	stos   DWORD PTR es:[rdi],eax
  419f78:	dec    ecx
  419f7a:	mov    dh,0xa9
  419f7c:	dec    eax
  419f7e:	mov    ch,0xa8
  419f80:	inc    edi
  419f82:	mov    ah,0xa6
  419f84:	inc    esi
  419f86:	mov    dl,0xa5
  419f88:	inc    esp
  419f8a:	mov    cl,0xa3
  419f8c:	inc    ebx
  419f8e:	scas   eax,DWORD PTR es:[rdi]
  419f8f:	movabs ds:0x9eacc0ffa0aec1ff,al
  419f98:	(bad)  
  419f99:	mov    esi,0xbcff9caa
  419f9e:	test   al,0x9a
  419fa0:	(bad)  
  419fa1:	mov    ebx,0xb9ff98a7
  419fa6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  419fa7:	xchg   esi,eax
  419fa8:	dec    DWORD PTR [rsi+0x3f6477]
	...
  419fb6:	add    BYTE PTR [rax],al
  419fb8:	add    al,al
  419fba:	mov    BYTE PTR [rax-0x62632d01],cl
  419fc0:	call   rdx
  419fc2:	pushf  
  419fc3:	pushf  
  419fc4:	call   rcx
  419fc6:	fwait
  419fc7:	pushf  
  419fc8:	(bad)  
  419fc9:	mov    esi,0xd4ff8787
  419fce:	sahf   
  419fcf:	popf   
  419fd0:	push   rax
  419fd2:	scas   eax,DWORD PTR es:[rdi]
  419fd3:	mov    al,0xff
  419fd5:	out    dx,al
  419fd6:	lods   eax,DWORD PTR ds:[rsi]
  419fd7:	lods   eax,DWORD PTR ds:[rsi]
  419fd8:	(bad)  
  419fd9:	in     al,dx
  419fda:	stos   BYTE PTR es:[rdi],al
  419fdb:	stos   DWORD PTR es:[rdi],eax
  419fdc:	dec    ecx
  419fde:	mov    dh,0xa8
  419fe0:	(bad)  
  419fe1:	std    
  419fe2:	stc    
  419fe3:	idiv   bh
  419fe5:	(bad)  
  419fe6:	(bad)  
  419fe7:	(bad)  
  419fe8:	(bad)  
  419fe9:	(bad)  
  419fea:	(bad)  
  419feb:	(bad)  
  419fec:	(bad)  
  419fed:	(bad)  
  419fee:	(bad)  
  419fef:	(bad)  
  419ff0:	(bad)  
  419ff1:	(bad)  
  419ff2:	(bad)  
  419ff3:	(bad)  
  419ff4:	(bad)  
  419ff5:	(bad)  
  419ff6:	(bad)  
  419ff7:	(bad)  
  419ff8:	(bad)  
  419ff9:	(bad)  
  419ffa:	(bad)  
  419ffb:	(bad)  
  419ffc:	(bad)  
  419ffd:	(bad)  
  419ffe:	(bad)  
  419fff:	(bad)  
  41a000:	(bad)  
  41a001:	(bad)  
  41a002:	(bad)  
  41a003:	(bad)  
  41a004:	(bad)  
  41a005:	(bad)  
  41a006:	(bad)  
  41a007:	(bad)  
  41a008:	(bad)  
  41a009:	(bad)  
  41a00a:	(bad)  
  41a00b:	(bad)  
  41a00c:	(bad)  
  41a00d:	cli    
  41a00e:	stc    
  41a00f:	clc    
  41a010:	jmp    QWORD PTR [rsi-0x2a008474]
  41a016:	(bad)
  41a019:	mov    ecx,0x6cff92a1
  41a01e:	push   rdx
  41a01f:	push   QWORD PTR ds:[rdi+0x4b]
  41a023:	rex.WB (bad) 
	...
  41a039:	ret    
  41a03a:	mov    ecx,DWORD PTR [rbx-0x60612a01]
  41a040:	call   rsp
  41a042:	sahf   
  41a043:	sahf   
  41a044:	call   rsp
  41a046:	sahf   
  41a047:	sahf   
  41a048:	inc    ecx
  41a04a:	mov    DWORD PTR [rdx-0x5e5f2901],ecx
  41a050:	push   rdx
  41a052:	mov    bl,0xb4
  41a054:	push   rax
  41a056:	mov    cl,0xb1
  41a058:	(bad)  
  41a059:	out    dx,al
  41a05a:	scas   al,BYTE PTR es:[rdi]
  41a05b:	scas   al,BYTE PTR es:[rdi]
  41a05c:	dec    edx
  41a05e:	mov    bh,0xaa
  41a060:	(bad)  
  41a061:	std    
  41a062:	stc    
  41a063:	clc    
  41a064:	(bad)  
  41a065:	(bad)  
  41a066:	(bad)  
  41a067:	(bad)  
  41a068:	(bad)  
  41a069:	(bad)  
  41a06a:	(bad)  
  41a06b:	(bad)  
  41a06c:	(bad)  
  41a06d:	(bad)  
  41a06e:	(bad)  
  41a06f:	(bad)  
  41a070:	(bad)  
  41a071:	(bad)  
  41a072:	(bad)  
  41a073:	(bad)  
  41a074:	(bad)  
  41a075:	(bad)  
  41a076:	(bad)  
  41a077:	(bad)  
  41a078:	(bad)  
  41a079:	(bad)  
  41a07a:	(bad)  
  41a07b:	(bad)  
  41a07c:	(bad)  
  41a07d:	(bad)  
  41a07e:	(bad)  
  41a07f:	(bad)  
  41a080:	(bad)  
  41a081:	(bad)  
  41a082:	(bad)  
  41a083:	(bad)  
  41a084:	(bad)  
  41a085:	(bad)  
  41a086:	(bad)  
  41a087:	(bad)  
  41a088:	(bad)  
  41a089:	(bad)  
  41a08a:	(bad)  
  41a08b:	(bad)  
  41a08c:	(bad)  
  41a08d:	cld    
  41a08e:	cli    
  41a08f:	stc    
  41a090:	jmp    FWORD PTR [rbx+rdx*4-0x100c007d]
  41a097:	in     eax,dx
  41a098:	(bad)  
  41a099:	jns    0x41a0fb
  41a09b:	rex.WR inc QWORD PTR [rax]
	...
  41a0b6:	add    BYTE PTR [rax],al
  41a0b8:	add    ch,al
  41a0ba:	lea    ecx,[rbp-0x5e5f2701]
  41a0c0:	call   rdi
  41a0c2:	movabs al,ds:0x8bc4ffa0a0d6ffa0
  41a0cb:	mov    edi,?
  41a0cd:	xlat   BYTE PTR ds:[rbx]
  41a0ce:	movabs ds:0xb4f3ffb8b6f4ffa3,al
  41a0d7:	mov    ch,0xff
  41a0d9:	icebp  
  41a0da:	mov    cl,0xb2
  41a0dc:	dec    ebx
  41a0de:	mov    eax,0xfbfeffab
  41a0e3:	stc    
  41a0e4:	(bad)  
  41a0e5:	std    
  41a0e6:	stc    
  41a0e7:	idiv   edi
  41a0e9:	std    
  41a0ea:	clc    
  41a0eb:	idiv   edi
  41a0ed:	cld    
  41a0ee:	clc    
  41a0ef:	cmc    
  41a0f0:	(bad)  
  41a0f1:	cld    
  41a0f2:	div    esp
  41a0f4:	(bad)  
  41a0f5:	std    
  41a0f6:	div    ebx
  41a0f8:	(bad)  
  41a0f9:	cld    
  41a0fa:	cmc    
  41a0fb:	repnz (bad) 
  41a0fd:	cld    
  41a0fe:	cmc    
  41a0ff:	icebp  
  41a100:	(bad)  
  41a101:	cld    
  41a102:	hlt    
  41a103:	lock (bad) 
  41a105:	sti    
  41a106:	repz out dx,eax
  41a108:	(bad)  
  41a109:	sti    
  41a10a:	repz out dx,eax
  41a10c:	(bad)  
  41a10d:	sti    
  41a10e:	repnz in eax,dx
  41a110:	push   QWORD PTR [rdx-0x69007567]
  41a116:	jg     0x41a186
  41a118:	inc    DWORD PTR [rax]
	...
  41a136:	add    BYTE PTR [rax],al
  41a138:	add    bh,al
  41a13a:	(bad)  
  41a13b:	(bad)  
  41a13c:	(bad)  
  41a13d:	fisub  DWORD PTR [rdx-0x5e25005d]
  41a143:	movabs ds:0x8e8dc7ffa2a1d9ff,eax
  41a14c:	(bad)  
  41a14d:	fldenv [rbp-0x4608005b]
  41a153:	mov    ebx,0xb8b7f5ff
  41a158:	push   rbx
  41a15a:	mov    ch,0xb6
  41a15c:	dec    ebx
  41a15e:	mov    eax,0xb8cbffab
  41a163:	stos   DWORD PTR es:[rdi],eax
  41a164:	dec    ecx
  41a166:	mov    dh,0xa9
  41a168:	dec    eax
  41a16a:	mov    ch,0xa8
  41a16c:	inc    edi
  41a16e:	mov    ah,0xa6
  41a170:	inc    esi
  41a172:	mov    dl,0xa5
  41a174:	inc    esp
  41a176:	mov    cl,0xa3
  41a178:	inc    ebx
  41a17a:	scas   eax,DWORD PTR es:[rdi]
  41a17b:	movabs ds:0x9eacc0ffa0aec1ff,al
  41a184:	(bad)  
  41a185:	mov    esi,0xbcff9caa
  41a18a:	test   al,0x9a
  41a18c:	(bad)  
  41a18d:	mov    ebx,0xb9ff98a7
  41a192:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  41a193:	xchg   esi,eax
  41a194:	jmp    rbx
  41a196:	fstp   st(0)
  41a198:	inc    DWORD PTR [rax]
	...
  41a1b6:	add    BYTE PTR [rax],al
  41a1b8:	add    dl,cl
  41a1ba:	xchg   edx,eax
  41a1bb:	xchg   edx,eax
  41a1bc:	(bad)  
  41a1bd:	fsub   QWORD PTR [rbp+riz*4-0x5b5b2301]
  41a1c4:	(bad)  
  41a1c5:	fsub   QWORD PTR [rbx-0x6f37005c]
  41a1cb:	nop
  41a1cc:	(bad)  
  41a1cd:	fldenv [rdi-0x43060058]
  41a1d3:	mov    esi,0xbcbaf8ff
  41a1d8:	push   rsi
  41a1da:	mov    eax,0xb6f5ffb9
  41a1df:	mov    bh,0xff
  41a1e1:	repz mov ah,0xb4
  41a1e4:	push   rcx
  41a1e6:	mov    cl,0xb2
  41a1e8:	(bad)  
  41a1e9:	out    dx,eax
  41a1ea:	scas   eax,DWORD PTR es:[rdi]
  41a1eb:	scas   eax,DWORD PTR es:[rdi]
  41a1ec:	(bad)  
  41a1ed:	in     eax,dx
  41a1ee:	lods   al,BYTE PTR ds:[rsi]
  41a1ef:	lods   al,BYTE PTR ds:[rsi]
  41a1f0:	(bad)  
  41a1f1:	jmp    0x41a19d
  41a1f3:	stos   BYTE PTR es:[rdi],al
  41a1f4:	(bad)  
  41a1f5:	(bad)  
  41a1f6:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  41a1f7:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  41a1f8:	jmp    rdi
  41a1fa:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  41a1fb:	movabs ds:0x9d9ee3ffa0a0e6ff,eax
  41a204:	jmp    rcx
  41a206:	fwait
  41a207:	(bad)  
  41a208:	(bad)  
  41a209:	fistp  WORD PTR [rax-0x6a23006a]
  41a20f:	xchg   ebx,eax
  41a210:	inc    esp
  41a212:	(bad)  
  41a213:	(bad)  
  41a214:	inc    DWORD PTR [rax]
	...
  41a236:	add    BYTE PTR [rax],al
  41a238:	add    bl,cl
  41a23a:	xchg   edx,eax
  41a23b:	xchg   ebx,eax
  41a23c:	(bad)  
  41a23d:	fisub  WORD PTR [rbp-0x5a21005a]
  41a243:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41a244:	(bad)  
  41a245:	frstor [rsi+riz*4-0x6e6e3401]
  41a24c:	(bad)  
  41a24d:	fld    TBYTE PTR [rcx-0x40040056]
  41a253:	sar    edi,0xf9
  41a256:	mov    esi,0xbbf8ffbf
  41a25b:	mov    esp,0xbab9f7ff
  41a260:	push   rbp
  41a262:	mov    bh,0xb8
  41a264:	push   rsp
  41a266:	mov    ch,0xb5
  41a268:	push   rdx
  41a26a:	mov    dl,0xb3
  41a26c:	push   rax
  41a26e:	mov    al,0xb0
  41a270:	(bad)  
  41a271:	out    dx,al
  41a272:	lods   eax,DWORD PTR ds:[rsi]
  41a273:	scas   al,BYTE PTR es:[rdi]
  41a274:	(bad)  
  41a275:	in     al,dx
  41a276:	stos   BYTE PTR es:[rdi],al
  41a277:	stos   BYTE PTR es:[rdi],al
  41a278:	(bad)  
  41a279:	(bad)  
  41a27a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  41a27b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  41a27c:	(bad)  
  41a27d:	call   0xffffffffe7414827
  41a282:	movabs ds:0x9ce1ff9e9fe4ffa1,al
  41a28b:	fwait
  41a28c:	(bad)  
  41a28d:	fistp  WORD PTR [rdx-0x7a390068]
  41a293:	test   edi,edi
	...
  41a2b9:	int    0x94
  41a2bb:	xchg   esp,eax
  41a2bc:	jmp    rcx
  41a2be:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41a2bf:	test   al,0xff
  41a2c1:	fbld   TBYTE PTR [rdi-0x59200059]
  41a2c7:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  41a2c8:	dec    esp
  41a2ca:	xchg   esp,eax
  41a2cb:	xchg   ebx,eax
  41a2cc:	(bad)  
  41a2cd:	fld    TBYTE PTR [rcx-0x3e030056]
  41a2d3:	ret    
  41a2d4:	(bad)  
  41a2d5:	sti    
  41a2d6:	rol    dl,0xff
  41a2d9:	cli    
  41a2da:	mov    esi,0xbcf9ffbf
  41a2df:	mov    ebp,0xbbbaf8ff
  41a2e4:	push   rbp
  41a2e6:	mov    eax,0xb5f4ffb9
  41a2eb:	mov    dh,0xff
  41a2ed:	repz mov bl,0xb4
  41a2f0:	push   rcx
  41a2f2:	mov    cl,0xb1
  41a2f4:	(bad)  
  41a2f5:	out    dx,eax
  41a2f6:	scas   al,BYTE PTR es:[rdi]
  41a2f7:	scas   eax,DWORD PTR es:[rdi]
  41a2f8:	(bad)  
  41a2f9:	in     eax,dx
  41a2fa:	stos   DWORD PTR es:[rdi],eax
  41a2fb:	lods   al,BYTE PTR ds:[rsi]
  41a2fc:	(bad)  
  41a2fd:	(bad)  
  41a2fe:	test   eax,0xa7e9ffa9
  41a303:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41a304:	jmp    rdi
  41a306:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  41a307:	movabs ds:0x9c9de3ff9fa0e5ff,al
  41a310:	dec    eax
  41a312:	mov    DWORD PTR [rcx+0xff],ecx
	...
  41a338:	add    ch,cl
  41a33a:	xchg   esp,eax
  41a33b:	xchg   esp,eax
  41a33c:	dec    ebp
  41a33e:	xchg   esp,eax
  41a33f:	xchg   esp,eax
  41a340:	dec    ebp
  41a342:	xchg   esp,eax
  41a343:	xchg   esp,eax
  41a344:	dec    ebp
  41a346:	xchg   esp,eax
  41a347:	xchg   esp,eax
  41a348:	dec    ebp
  41a34a:	xchg   esp,eax
  41a34b:	xchg   esp,eax
  41a34c:	(bad)  
  41a34d:	fld    TBYTE PTR [rcx-0x56240056]
  41a353:	stos   BYTE PTR es:[rdi],al
  41a354:	(bad)  
  41a355:	fld    TBYTE PTR [rcx-0x57250056]
  41a35b:	test   eax,0xa8a7daff
  41a360:	(bad)  
  41a361:	fldenv [rsi-0x5b27005a]
  41a367:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  41a368:	call   rdi
  41a36a:	movabs ds:0x9fd5ffa1a1d6ffa3,al
  41a373:	lahf   
  41a374:	call   rsp
  41a376:	popf   
  41a377:	popf   
  41a378:	call   rbx
  41a37a:	(bad)  
  41a37b:	fwait
  41a37c:	call   rdx
  41a37e:	cdq    
  41a37f:	cdq    
  41a380:	call   rax
  41a382:	xchg   esi,eax
  41a383:	xchg   esi,eax
  41a384:	dec    esi
  41a386:	xchg   esp,eax
  41a387:	xchg   ebp,eax
  41a388:	dec    esi
  41a38a:	xchg   edx,eax
  41a38b:	xchg   edx,eax
  41a38c:	dec    esp
  41a38e:	(bad)  
  41a38f:	(bad)  
  41a390:	dec    ebx
  41a392:	lea    ecx,[rbp+0xff]
	...
  41a3b8:	add    bh,bh
  41a3ba:	cld    
  41a3bb:	add    BYTE PTR [rax],al
  41a3bd:	(bad)  
  41a3be:	cld    
  41a3bf:	add    BYTE PTR [rax],al
  41a3c1:	(bad)  
  41a3c2:	cld    
  41a3c3:	add    BYTE PTR [rax],al
  41a3c5:	loopne 0x41a3c7
  41a3c7:	add    BYTE PTR [rax],al
  41a3c9:	rol    BYTE PTR [rax],0x0
	...
  41a410:	add    DWORD PTR [rax],eax
  41a412:	add    BYTE PTR [rax],al
  41a414:	add    eax,DWORD PTR [rax]
  41a416:	add    BYTE PTR [rax],al
  41a418:	(bad)  
  41a419:	add    BYTE PTR [rax],al
  41a41b:	add    BYTE PTR [rdi],bl
  41a41d:	add    BYTE PTR [rax],al
  41a41f:	add    BYTE PTR [rdi+0x0],bh
  41a422:	add    BYTE PTR [rax],al
  41a424:	inc    DWORD PTR [rax]
  41a426:	add    BYTE PTR [rax],al
  41a428:	inc    DWORD PTR [rax]
  41a42a:	add    BYTE PTR [rcx],al
  41a42c:	inc    DWORD PTR [rax]
  41a42e:	add    BYTE PTR [rcx],al
  41a430:	inc    DWORD PTR [rax]
  41a432:	add    BYTE PTR [rcx],al
  41a434:	inc    DWORD PTR [rax]
  41a436:	add    BYTE PTR [rcx],al
  41a438:	jmp    FWORD PTR [rax]
  41a43a:	add    BYTE PTR [rax],al
  41a43c:	add    BYTE PTR [rax],dl
  41a43e:	add    BYTE PTR [rax],al
  41a440:	add    BYTE PTR [rax],ah
  41a442:	add    BYTE PTR [rax],al
  41a444:	add    BYTE PTR [rcx],al
  41a446:	add    BYTE PTR [rax],ah
	...
  41a47c:	add    BYTE PTR [rsi+0x63ff808d],bl
  41a482:	rex.WB xor rax,0x354963ff
  41a488:	jmp    QWORD PTR [rbx+0x49]
  41a48b:	xor    eax,0x354963ff
  41a490:	jmp    QWORD PTR [rbx+0x49]
  41a493:	xor    eax,0x354963ff
  41a498:	jmp    QWORD PTR [rbx+0x49]
  41a49b:	xor    eax,0x354963ff
  41a4a0:	inc    DWORD PTR [rdx+0x67044947]
  41a4a6:	cmp    BYTE PTR [rcx],bh
  41a4a8:	mov    dh,0x90
  41a4aa:	pop    rcx
  41a4ab:	pop    rbx
  41a4ac:	dec    DWORD PTR [rbp-0x7500a7a8]
  41a4b2:	push   rbp
  41a4b3:	push   rsi
  41a4b4:	inc    DWORD PTR [rsi-0x7c00adad]
  41a4ba:	push   rax
  41a4bb:	rex.WRXB call FWORD PTR [r11-0x3008276]
  41a4c2:	cli    
  41a4c3:	clc    
  41a4c4:	(bad)  
  41a4c5:	fld    st(0)
  41a4c7:	scas   al,BYTE PTR es:[rdi]
  41a4c8:	call   rbp
  41a4ca:	mov    esp,0xb1c8ffab
  41a4cf:	movabs al,ds:0x96a6bbff9babc1ff
  41a4d8:	push   QWORD PTR [rdi+0x63ff93a2]
  41a4de:	rex.WB xor rax,0x4b4983ff
  41a4e4:	mov    cl,0x7b
  41a4e6:	rex.R
  41a4e7:	rex.RX fsub DWORD PTR [rsi+r9*4-0x725a0682]
  41a4ef:	jle    0x41a4ef
  41a4f1:	sahf   
  41a4f2:	lea    eax,[rax+0x354963ff]
  41a4f8:	jmp    QWORD PTR [rbx+0x49]
  41a4fb:	xor    eax,0x7d8a9bff
  41a500:	(bad)  
  41a501:	(bad)  
  41a502:	(bad)  
  41a503:	(bad)  
  41a504:	(bad)  
  41a505:	sti    
  41a506:	clc    
  41a507:	idiv   edi
  41a509:	div    cl
  41a50b:	in     eax,dx
  41a50c:	(bad)  
  41a50d:	jmp    0x41a4ed
  41a50f:	(bad)  
  41a510:	jmp    rbp
  41a512:	(bad)  
  41a513:	leave  
  41a514:	jmp    rcx
  41a516:	int    0xbe
  41a518:	(bad)  
  41a519:	mov    esp,0x63ff96a5
  41a51e:	rex.WB xor rax,0x646290ff
  41a524:	call   QWORD PTR [rax-0x7c009c9f]
  41a52a:	push   rdx
  41a52b:	push   rbp
  41a52c:	jmp    QWORD PTR [rax-0x6407adac]
  41a532:	mov    bh,BYTE PTR [rbp-0x1]
  41a535:	cld    
  41a536:	cli    
  41a537:	clc    
  41a538:	(bad)  
  41a539:	fld    st(0)
  41a53b:	scas   al,BYTE PTR es:[rdi]
  41a53c:	call   FWORD PTR [rsi-0x7f73]
  41a542:	(bad)  
  41a543:	(bad)  
  41a544:	inc    ecx
  41a546:	stos   DWORD PTR es:[rdi],eax
  41a547:	fwait
  41a548:	inc    ecx
  41a54a:	stos   DWORD PTR es:[rdi],eax
  41a54b:	fwait
  41a54c:	inc    ecx
  41a54e:	stos   DWORD PTR es:[rdi],eax
  41a54f:	fwait
  41a550:	inc    ecx
  41a552:	stos   DWORD PTR es:[rdi],eax
  41a553:	fwait
  41a554:	jmp    rbp
  41a556:	(bad)  
  41a557:	(bad)  
  41a558:	inc    ecx
  41a55a:	stos   BYTE PTR es:[rdi],al
  41a55b:	fwait
  41a55c:	jmp    QWORD PTR [rbx+0x49]
  41a55f:	xor    eax,0x7877a2ff
  41a564:	jmp    QWORD PTR [rcx-0x68008889]
  41a56a:	ins    BYTE PTR es:[rdi],dx
  41a56b:	ins    DWORD PTR es:[rdi],dx
  41a56c:	call   rcx
  41a56e:	jle    0x41a5ea
  41a570:	call   FWORD PTR [rbx-0x1008276]
  41a576:	(bad)  
  41a577:	(bad)  
  41a578:	(bad)  
  41a579:	sti    
  41a57a:	clc    
  41a57b:	idiv   edi
  41a57d:	movabs ds:0xffffffffffff8491,al
  41a586:	(bad)  
  41a587:	(bad)  
  41a588:	(bad)  
  41a589:	std    
  41a58a:	std    
  41a58b:	sti    
  41a58c:	push   rsp
  41a58e:	in     eax,dx
  41a58f:	call   0xffffffffdd269593
  41a594:	(bad)  
  41a595:	jmp    0xffffffffc9417675
  41a59a:	mov    cl,0xa1
  41a59c:	jmp    QWORD PTR [rbx+0x49]
  41a59f:	xor    eax,0x7b7aa5ff
  41a5a4:	jmp    QWORD PTR [rdi-0x62008284]
  41a5aa:	jno    0x41a61e
  41a5ac:	call   rcx
  41a5ae:	cmp    DWORD PTR [rsi-0x1],0xff808d9e
  41a5b5:	(bad)  
  41a5b6:	(bad)  
  41a5b7:	(bad)  
  41a5b8:	(bad)  
  41a5b9:	(bad)  
  41a5ba:	std    
  41a5bb:	std    
  41a5bc:	jmp    QWORD PTR [rdi-0x776b]
  41a5c2:	(bad)  
  41a5c3:	(bad)  
  41a5c4:	inc    ecx
  41a5c6:	stos   DWORD PTR es:[rdi],eax
  41a5c7:	fwait
  41a5c8:	inc    ecx
  41a5ca:	stos   DWORD PTR es:[rdi],eax
  41a5cb:	fwait
  41a5cc:	inc    ecx
  41a5ce:	stos   DWORD PTR es:[rdi],eax
  41a5cf:	fwait
  41a5d0:	inc    ecx
  41a5d2:	stos   DWORD PTR es:[rdi],eax
  41a5d3:	fwait
  41a5d4:	(bad)  
  41a5d5:	in     eax,dx
  41a5d6:	jrcxz  0x41a5b2
  41a5d8:	dec    edi
  41a5da:	mov    bh,0xa6
  41a5dc:	jmp    QWORD PTR [rbx+0x49]
  41a5df:	xor    eax,0x7e7da9ff
  41a5e4:	jmp    FWORD PTR [rax+rax*4+0x719eff80]
  41a5eb:	jb     0x41a5ec
  41a5ed:	(bad)  
  41a5ee:	mov    BYTE PTR [rbp-0x7b6e5d01],al
  41a5f4:	(bad)  
  41a5f5:	(bad)  
  41a5f6:	(bad)  
  41a5f7:	(bad)  
  41a5f8:	(bad)  
  41a5f9:	(bad)  
  41a5fa:	(bad)  
  41a5fb:	(bad)  
  41a5fc:	push   QWORD PTR [rax-0x6f62]
  41a602:	(bad)  
  41a603:	(bad)  
  41a604:	(bad)  
  41a605:	(bad)  
  41a606:	(bad)  
  41a607:	(bad)  
  41a608:	(bad)  
  41a609:	(bad)  
  41a60a:	(bad)  
  41a60b:	(bad)  
  41a60c:	(bad)  
  41a60d:	(bad)  
  41a60e:	(bad)  
  41a60f:	(bad)  
  41a610:	(bad)  
  41a611:	sti    
  41a612:	stc    
  41a613:	idiv   edi
  41a615:	div    cl
  41a617:	in     eax,dx
  41a618:	(bad)  
  41a619:	fld    st(0)
  41a61b:	scas   al,BYTE PTR es:[rdi]
  41a61c:	jmp    QWORD PTR [rbx+0x49]
  41a61f:	xor    eax,0x7f7facff
  41a624:	push   QWORD PTR [rcx-0x61007e7f]
  41a62a:	outs   dx,BYTE PTR ds:[rsi]
  41a62b:	outs   dx,DWORD PTR ds:[rsi]
  41a62c:	(bad)  
  41a62d:	fmul   QWORD PTR [rdi-0x6a580074]
  41a633:	mov    bh,bh
  41a635:	(bad)  
  41a636:	(bad)  
  41a637:	(bad)  
  41a638:	(bad)  
  41a639:	(bad)  
  41a63a:	(bad)  
  41a63b:	(bad)  
  41a63c:	push   QWORD PTR [rbx-0x6b5e]
  41a642:	(bad)  
  41a643:	(bad)  
  41a644:	inc    ecx
  41a646:	stos   DWORD PTR es:[rdi],eax
  41a647:	fwait
  41a648:	inc    ecx
  41a64a:	stos   DWORD PTR es:[rdi],eax
  41a64b:	fwait
  41a64c:	(bad)  
  41a64d:	(bad)  
  41a64e:	(bad)  
  41a64f:	(bad)  
  41a650:	(bad)  
  41a651:	(bad)  
  41a652:	(bad)  
  41a653:	std    
  41a654:	inc    esp
  41a656:	lods   eax,DWORD PTR ds:[rsi]
  41a657:	popf   
  41a658:	inc    ebx
  41a65a:	stos   DWORD PTR es:[rdi],eax
  41a65b:	pushf  
  41a65c:	jmp    QWORD PTR [rdx+rcx*2+0x36]
  41a660:	jmp    FWORD PTR [rbp-0x4b008283]
  41a666:	add    DWORD PTR [rcx+0x7270a2ff],0x9596e2ff
  41a670:	push   QWORD PTR [rax-0x6f62]
  41a676:	(bad)  
  41a677:	(bad)  
  41a678:	(bad)  
  41a679:	(bad)  
  41a67a:	(bad)  
  41a67b:	(bad)  
  41a67c:	push   QWORD PTR [rsi-0x695c]
  41a682:	(bad)  
  41a683:	(bad)  
  41a684:	(bad)  
  41a685:	(bad)  
  41a686:	(bad)  
  41a687:	(bad)  
  41a688:	(bad)  
  41a689:	(bad)  
  41a68a:	(bad)  
  41a68b:	(bad)  
  41a68c:	(bad)  
  41a68d:	(bad)  
  41a68e:	(bad)  
  41a68f:	(bad)  
  41a690:	jmp    FWORD PTR [rcx+0x64ff8a98]
  41a696:	rex.WX
  41a697:	jmp    QWORD PTR ss:[rdx+rcx*2+0x36]
  41a69c:	jmp    QWORD PTR [rdx+rcx*2+0x36]
  41a6a0:	push   QWORD PTR [rax-0x45008183]
  41a6a6:	test   DWORD PTR [rsi+0x7676a8ff],eax
  41a6ac:	(bad)  
  41a6ad:	call   0xffffffffb4414450
  41a6b2:	movabs ds:0xffffffffffffff94,al
  41a6bb:	(bad)  
  41a6bc:	push   QWORD PTR [rsi-0x695c]
  41a6c2:	(bad)  
  41a6c3:	(bad)  
  41a6c4:	(bad)  
  41a6c5:	(bad)  
  41a6c6:	(bad)  
  41a6c7:	(bad)  
  41a6c8:	(bad)  
  41a6c9:	(bad)  
  41a6ca:	(bad)  
  41a6cb:	(bad)  
  41a6cc:	(bad)  
  41a6cd:	(bad)  
  41a6ce:	(bad)  
  41a6cf:	(bad)  
  41a6d0:	jmp    FWORD PTR [rsi-0x2b007164]
  41a6d6:	(bad)
  41a6d9:	fs rex.WX
  41a6db:	ss dec ecx
  41a6de:	mov    bl,0xa4
  41a6e0:	mov    WORD PTR [rsi-0x3d007d7f],?
  41a6e6:	mov    WORD PTR [rbp+0x7b7aadff],cs
  41a6ec:	(bad)  
  41a6ed:	in     eax,dx
  41a6ee:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  41a6ef:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  41a6f0:	push   QWORD PTR [rsi-0x695c]
  41a6f6:	(bad)  
  41a6f7:	(bad)  
  41a6f8:	(bad)  
  41a6f9:	(bad)  
  41a6fa:	(bad)  
  41a6fb:	(bad)  
  41a6fc:	push   QWORD PTR [rsi-0x695c]
  41a702:	(bad)  
  41a703:	(bad)  
  41a704:	(bad)  
  41a705:	(bad)  
  41a706:	(bad)  
  41a707:	(bad)  
  41a708:	(bad)  
  41a709:	(bad)  
  41a70a:	(bad)  
  41a70b:	(bad)  
  41a70c:	(bad)  
  41a70d:	(bad)  
  41a70e:	(bad)  
  41a70f:	(bad)  
  41a710:	push   QWORD PTR [rdx+0x64ff92a0]
  41a716:	rex.WX
  41a717:	ss dec ecx
  41a71a:	mov    bl,0xa4
  41a71c:	mov    eax,DWORD PTR [rax]
  41a71e:	add    BYTE PTR [rax],al
  41a720:	add    BYTE PTR [rbx-0x3700797a],bh
  41a726:	xchg   edx,eax
  41a727:	xchg   edx,eax
  41a728:	push   QWORD PTR [rdx-0xd007f81]
  41a72e:	stos   DWORD PTR es:[rdi],eax
  41a72f:	stos   DWORD PTR es:[rdi],eax
  41a730:	push   QWORD PTR [rsi-0x695c]
  41a736:	(bad)  
  41a737:	(bad)  
  41a738:	(bad)  
  41a739:	(bad)  
  41a73a:	(bad)  
  41a73b:	(bad)  
  41a73c:	push   QWORD PTR [rsi-0x4900695c]
  41a742:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  41a743:	xchg   esi,eax
  41a744:	push   QWORD PTR [rsi-0x4900695c]
  41a74a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  41a74b:	xchg   esi,eax
  41a74c:	push   QWORD PTR [rsi-0x4a00695c]
  41a752:	movabs ds:0xff838bb1ff95,eax
  41a75b:	add    BYTE PTR [rax],al
  41a75d:	add    BYTE PTR [rax],al
  41a75f:	add    BYTE PTR [rax],al
  41a761:	mov    edi,0xd0ff8a8a
  41a766:	cwde   
  41a767:	cdq    
  41a768:	(bad)  
  41a769:	mov    eax,0xf7ff8483
  41a76e:	mov    cl,0xb1
  41a770:	push   QWORD PTR [rsi-0x695c]
  41a776:	(bad)  
  41a777:	(bad)  
  41a778:	(bad)  
  41a779:	(bad)  
  41a77a:	(bad)  
  41a77b:	(bad)  
  41a77c:	(bad)  
  41a77d:	(bad)  
  41a77e:	(bad)  
  41a77f:	(bad)  
  41a780:	(bad)  
  41a781:	(bad)  
  41a782:	(bad)  
  41a783:	(bad)  
  41a784:	push   QWORD PTR [rdx+0x64ff92a0]
  41a78a:	rex.WX
  41a78b:	ss inc ebp
  41a78e:	xchg   edx,eax
  41a78f:	mov    bh,bh
  41a791:	(bad)  
  41a792:	(bad)  
  41a793:	(bad)  
  41a794:	call   FWORD PTR [rax+0xff5e5e]
  41a79a:	add    BYTE PTR [rax],al
  41a79c:	add    BYTE PTR [rax],al
  41a79e:	add    BYTE PTR [rax],al
  41a7a0:	add    ch,al
  41a7a2:	mov    cs,WORD PTR [rdi-0x60602801]
  41a7a8:	(bad)  
  41a7a9:	mov    ebp,0xfbff8887
  41a7ae:	mov    dh,0xb6
  41a7b0:	push   QWORD PTR [rsi-0x4900695c]
  41a7b6:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  41a7b7:	xchg   esi,eax
  41a7b8:	push   QWORD PTR [rsi-0x4900695c]
  41a7be:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  41a7bf:	xchg   esi,eax
  41a7c0:	push   QWORD PTR [rsi-0x4a00695c]
  41a7c6:	movabs ds:0x70c6ff959fceff95,eax
  41a7cf:	outs   dx,BYTE PTR ds:[rsi]
  41a7d0:	(bad)  
  41a7d1:	(bad)  
  41a7d2:	(bad)  
  41a7d3:	(bad)  
  41a7d4:	call   FWORD PTR [rbx+0xff6160]
  41a7da:	add    BYTE PTR [rax],al
  41a7dc:	add    BYTE PTR [rax],al
  41a7de:	add    BYTE PTR [rax],al
  41a7e0:	add    dl,cl
  41a7e2:	xchg   esp,eax
  41a7e3:	xchg   ebp,eax
  41a7e4:	jmp    rdx
  41a7e6:	test   al,0xa9
  41a7e8:	inc    edx
  41a7ea:	lea    ecx,[rsi-0x40420001]
  41a7f0:	(bad)  
  41a7f1:	(bad)  
  41a7f2:	mov    ecx,0xb5fbffba
  41a7f7:	mov    ch,0xff
  41a7f9:	cmc    
  41a7fa:	lods   eax,DWORD PTR ds:[rsi]
  41a7fb:	lods   eax,DWORD PTR ds:[rsi]
  41a7fc:	push   rax
  41a7fe:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41a7ff:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  41a800:	(bad)  
  41a801:	(bad)  
  41a802:	sahf   
  41a803:	popf   
  41a804:	jmp    rsp
  41a806:	xchg   edi,eax
  41a807:	xchg   esp,eax
  41a808:	(bad)  
  41a809:	fisttp QWORD PTR [rsi+0x79ceff8c]
  41a80f:	ja     0x41a810
  41a811:	(bad)  
  41a812:	(bad)  
  41a813:	(bad)  
  41a814:	jmp    QWORD PTR [rdi+riz*2+0xff68]
  41a81b:	add    BYTE PTR [rax],al
  41a81d:	add    BYTE PTR [rax],al
  41a81f:	add    BYTE PTR [rax],al
  41a821:	vpsubusw xmm0,xmm15,xmm9
  41a826:	jge    0x41a8a5
  41a828:	fnstcw WORD PTR [rdx-0x31258789]
  41a82e:	mov    ecx,DWORD PTR [rsp+rdi*4-0x43767735]
  41a835:	enter  0x8686,0xbc
  41a839:	(bad)
  41a83d:	rol    BYTE PTR [rax+0x7dbdbc80],0x7d
  41a844:	mov    esp,0xbc7979b8
  41a849:	mov    ch,0x75
  41a84b:	jne    0x41a809
  41a84d:	stos   DWORD PTR es:[rdi],eax
  41a84e:	outs   dx,DWORD PTR ds:[rsi]
  41a84f:	outs   dx,BYTE PTR ds:[rsi]
  41a850:	mov    esp,0x887a79a5
  41a855:	imul   esi,DWORD PTR [rsi],0x38
  41a858:	sbb    eax,0x0
  41a85d:	add    BYTE PTR [rax],al
  41a85f:	add    BYTE PTR [rax],al
  41a861:	inc    BYTE PTR [rax]
  41a863:	pop    rbx
  41a864:	inc    DWORD PTR [rax]
  41a866:	add    BYTE PTR [rcx-0x1],bh
  41a869:	add    BYTE PTR [rax],al
  41a86b:	js     0x41a86c
  41a86d:	add    BYTE PTR [rax],al
  41a86f:	js     0x41a870
  41a871:	add    BYTE PTR [rax],al
  41a873:	pop    rbx
  41a874:	inc    DWORD PTR [rax]
  41a876:	add    BYTE PTR [rcx-0x1],ah
  41a879:	add    BYTE PTR [rax],al
  41a87b:	inc    WORD PTR [rax]
  41a87e:	add    BYTE PTR [rbx-0x1],ah
  41a881:	add    BYTE PTR [rax],al
  41a883:	(bad)  
  41a884:	inc    DWORD PTR [rax]
  41a886:	add    BYTE PTR [rdi-0x24feff01],al
  41a88c:	inc    DWORD PTR [rax]
  41a88e:	add    esi,eax
  41a890:	inc    DWORD PTR [rax]
  41a892:	add    esp,DWORD PTR [rdi-0x5cfcff01]
  41a898:	inc    DWORD PTR [rax]
  41a89a:	add    edx,DWORD PTR [rcx-0x1dfcff01]
  41a8a0:	dec    DWORD PTR [rbx]
  41a8a2:	add    BYTE PTR [rcx],al
  41a8a5:	add    BYTE PTR [rax],al
  41a8a7:	add    bh,bh
  41a8a9:	(bad)  
  41a8aa:	(bad)  
  41a8ab:	inc    DWORD PTR [rcx]
  41a8ad:	add    BYTE PTR [rax],al
  41a8af:	add    BYTE PTR [rax],al
  41a8b1:	add    BYTE PTR [rax],al
  41a8b3:	add    BYTE PTR [rdx+rax*1],cl
  41a8b6:	add    BYTE PTR [rax],al
  41a8b8:	add    BYTE PTR [rcx+0x53],dl
  41a8bb:	jns    0x41a930
  41a8bd:	je     0x41a924
  41a8bf:	ins    DWORD PTR es:[rdi],dx
  41a8c0:	cs rex.R jb 0x41a925
  41a8c4:	ja     0x41a92f
  41a8c6:	outs   dx,BYTE PTR ds:[rsi]
  41a8c7:	addr32 sub al,0x20
  41a8ca:	push   rsi
  41a8cb:	gs jb  0x41a941
  41a8ce:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  41a8d5:	xor    BYTE PTR cs:[rsi],ch
  41a8d8:	xor    BYTE PTR [rax+riz*1],ch
  41a8db:	rex.XB jne 0x41a94a
  41a8de:	je     0x41a955
  41a8e0:	jb     0x41a947
  41a8e2:	cmp    eax,0x7475656e
  41a8e7:	jb     0x41a94a
  41a8e9:	ins    BYTE PTR es:[rdi],dx
  41a8ea:	sub    al,0x20
  41a8ec:	push   rax
  41a8ed:	jne    0x41a951
  41a8ef:	ins    BYTE PTR es:[rdi],dx
  41a8f0:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  41a8f7:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  41a8fb:	(bad)  
  41a8fc:	xor    BYTE PTR [rbx],dh
  41a8fe:	xor    ax,0x3766
  41a902:	xor    WORD PTR [rcx],si
  41a905:	fs xor eax,0x61336130
  41a90b:	add    eax,0x1
  41a910:	adc    edx,DWORD PTR [rbx+0x79]
  41a913:	jae    0x41a989
  41a915:	gs ins DWORD PTR es:[rdi],dx
  41a917:	cs rex.R jb 0x41a97c
  41a91b:	ja     0x41a986
  41a91d:	outs   dx,BYTE PTR ds:[rsi]
  41a91e:	movsxd rbp,DWORD PTR cs:[r15d+0x6e]
  41a924:	add    al,BYTE PTR [rax]
  41a926:	add    BYTE PTR [rax],al
  41a928:	or     BYTE PTR [rcx+0x63],cl
  41a92b:	outs   dx,DWORD PTR ds:[rsi]
  41a92c:	outs   dx,BYTE PTR ds:[rsi]
  41a92d:	rex.R (bad) 
  41a92f:	je     0x41a992
  41a931:	or     BYTE PTR [rcx+0x63],cl
  41a934:	outs   dx,DWORD PTR ds:[rsi]
  41a935:	outs   dx,BYTE PTR ds:[rsi]
  41a936:	push   rbx
  41a937:	imul   edi,DWORD PTR [rdx+0x65],0x13020407
  41a93e:	push   rbx
  41a93f:	jns    0x41a9b4
  41a941:	je     0x41a9a8
  41a943:	ins    DWORD PTR es:[rdi],dx
  41a944:	cs rex.R jb 0x41a9a9
  41a948:	ja     0x41a9b3
  41a94a:	outs   dx,BYTE PTR ds:[rsi]
  41a94b:	addr32 cs push rbx
  41a94e:	imul   edi,DWORD PTR [rdx+0x65],0x2
  41a955:	add    al,BYTE PTR [rax]
  41a957:	add    BYTE PTR [rax],al
  41a959:	or     DWORD PTR [rbx],eax
  41a95b:	add    BYTE PTR [rax],al
  41a95d:	add    BYTE PTR [rip+0xfffffffffffffffc],al        # 0x41a95f
  41a963:	adc    edx,DWORD PTR [rbx+0x79]
  41a966:	jae    0x41a9dc
  41a968:	gs ins DWORD PTR es:[rdi],dx
  41a96a:	cs rex.R jb 0x41a9cf
  41a96e:	ja     0x41a9d9
  41a970:	outs   dx,BYTE PTR ds:[rsi]
  41a971:	addr32 cs push rbx
  41a974:	imul   edi,DWORD PTR [rdx+0x65],0x2
  41a97b:	add    eax,0x74646977
  41a980:	push   0x69656806
  41a985:	addr32 push 0x8000074
  41a98b:	or     BYTE PTR [rdx],al
	...
  41a995:	add    BYTE PTR [rax],al
  41a997:	add    BYTE PTR [rdi],cl
  41a999:	add    eax,DWORD PTR [rax]
  41a99b:	add    BYTE PTR [rax],al
  41a99d:	out    dx,al
  41a99e:	cmp    al,BYTE PTR [rax]
  41a9a0:	add    BYTE PTR [rdx],al
  41a9a2:	add    BYTE PTR [rax],al
  41a9a4:	add    DWORD PTR [rax],eax
  41a9a6:	add    eax,DWORD PTR [rax]
  41a9a8:	xor    BYTE PTR [rax],dh
  41a9aa:	add    BYTE PTR [rax],al
  41a9ac:	add    DWORD PTR [rax],eax
  41a9ae:	and    BYTE PTR [rax],al
  41a9b0:	test   al,0x25
  41a9b2:	add    BYTE PTR [rax],al
  41a9b4:	add    BYTE PTR ss:[rax],al
  41a9b7:	add    BYTE PTR [rax],ah
  41a9b9:	and    BYTE PTR [rax],al
  41a9bb:	add    BYTE PTR [rcx],al
  41a9bd:	add    BYTE PTR [rax],ah
  41a9bf:	add    BYTE PTR [rax-0x21fffff0],ch
  41a9c5:	and    eax,0x10100000
  41a9ca:	add    BYTE PTR [rax],al
  41a9cc:	add    DWORD PTR [rax],eax
  41a9ce:	and    BYTE PTR [rax],al
  41a9d0:	push   0xffffffff86000004
  41a9d5:	add    BYTE PTR ss:[rax],al
  41a9d8:	sub    BYTE PTR [rax],al
  41a9da:	add    BYTE PTR [rax],al
  41a9dc:	xor    BYTE PTR [rax],al
  41a9de:	add    BYTE PTR [rax],al
  41a9e0:	(bad)  
  41a9e1:	add    BYTE PTR [rax],al
  41a9e3:	add    BYTE PTR [rcx],al
  41a9e5:	add    BYTE PTR [rax],ah
  41a9e7:	add    BYTE PTR [rax],al
  41a9e9:	add    BYTE PTR [rax],al
  41a9eb:	add    BYTE PTR [rax+0x25],al
	...
  41aa35:	add    BYTE PTR [rax],al
  41aa37:	add    BYTE PTR [rsp+rbp*4-0x534bab5e],dh
  41aa3e:	movabs ds:0x48586cff6e7c8cff,al
  41aa47:	call   QWORD PTR [rbp+0x3e]
  41aa4a:	dec    DWORD PTR cs:[rdi+0x3a]
  41aa4e:	sub    edi,edi
  41aa50:	rex.WXB (bad) 
  41aa52:	sub    edi,edi
  41aa54:	rex.W xor al,0x27
  41aa57:	inc    DWORD PTR [rbp+0x31]
  41aa5a:	and    eax,0x232e42ff
  41aa5f:	(bad)  
  41aa60:	sub    esp,DWORD PTR ds:[rcx]
  41aa63:	dec    DWORD PTR [rbx+0x3b]
  41aa66:	xor    edi,edi
  41aa68:	addr32 pop rdx
  41aa6a:	push   rcx
  41aa6b:	call   QWORD PTR [rcx-0x6e007d78]
  41aa71:	mov    BYTE PTR [rdx+0x55],al
  41aa77:	add    BYTE PTR [rax],al
  41aa79:	add    BYTE PTR [rax],al
  41aa7b:	add    BYTE PTR [rdx-0x61566057],dh
  41aa81:	xchg   edx,eax
  41aa82:	xchg   bh,bh
  41aa84:	ja     0x41aaeb
  41aa86:	push   rbp
  41aa87:	jmp    QWORD PTR [rcx+0x4b]
  41aa8a:	cmp    edi,edi
  41aa8c:	push   rbx
  41aa8d:	cmp    eax,0x394dff2d
  41aa92:	sub    bh,bh
  41aa94:	rex.WB xor rax,0x3246ff28
  41aa9a:	inc    DWORD PTR es:[rax+rsi*1+0x25]
  41aa9f:	inc    DWORD PTR [rax+0x2c]
  41aaa2:	and    bh,bh
  41aaa4:	rex.RX xor r13d,DWORD PTR [rcx]
  41aaa7:	call   QWORD PTR [rbp+0x46]
  41aaaa:	cmp    al,0xff
  41aaac:	jle    0x41ab22
  41aaae:	ins    BYTE PTR es:[rdi],dx
  41aaaf:	call   QWORD PTR [rsp+rcx*4+0xaa85]
	...
  41aaf2:	add    BYTE PTR [rax],al
  41aaf4:	mov    esi,0xaf71abb5
  41aaf9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  41aafa:	xchg   edi,eax
  41aafb:	(bad)  
  41aafc:	cwde   
  41aafd:	mov    BYTE PTR [rsi-0x1],dh
  41ab00:	cwde   
  41ab01:	test   BYTE PTR [rdx-0x1],dh
  41ab04:	fwait
  41ab05:	xchg   BYTE PTR [rbp-0x1],dh
  41ab08:	movabs ds:0xaaff8493a8ff7e8e,eax
  41ab11:	xchg   esp,eax
  41ab12:	test   edi,edi
  41ab14:	test   al,0x92
  41ab16:	cmp    edi,0xffffffa7
  41ab19:	nop
  41ab1a:	cmp    edi,0xff7b8aa2
  41ab20:	xchg   edi,eax
  41ab21:	jg     0x41ab92
  41ab23:	inc    DWORD PTR [rbp+0x75ff5d6d]
  41ab29:	pop    rsi
  41ab2a:	push   rax
  41ab2b:	jmp    QWORD PTR [rdi+0x54]
  41ab2e:	inc    QWORD PTR [r11-0x66399089]
  41ab35:	(bad)
  41ab39:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  41ab3a:	sahf   
  41ab3b:	stos   BYTE PTR es:[rdi],al
  41ab3c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  41ab3d:	xchg   esi,eax
  41ab3e:	xchg   dl,ah
  41ab40:	sahf   
  41ab41:	mov    WORD PTR [rcx-0x1],?
  41ab44:	sahf   
  41ab45:	mov    bh,BYTE PTR [rax-0x1]
  41ab48:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  41ab49:	(bad)  
  41ab4a:	jle    0x41ab4b
  41ab4c:	test   eax,0xacff8493
  41ab51:	xchg   edi,eax
  41ab52:	mov    edi,edi
  41ab54:	test   eax,0xa7ff8593
  41ab59:	nop
  41ab5a:	cmp    edi,0xff7f8ea5
  41ab60:	(bad)  
  41ab61:	xor    BYTE PTR [rcx-0x1],0x8a
  41ab65:	jno    0x41abc8
  41ab67:	push   QWORD PTR [rsi+0x5e]
  41ab6a:	rex.WRB jmp FWORD PTR [r10+0x57]
  41ab6e:	rex.WB push QWORD PTR [r14+riz*2+0x5c]
  41ab73:	loop   0x41ab0a
  41ab75:	mov    WORD PTR [rbp-0x7a736a56],es
  41ab7b:	cmp    BYTE PTR [rax],al
	...
  41abb1:	add    BYTE PTR [rax],al
  41abb3:	add    BYTE PTR [rdx-0x4e565c51],bh
  41abb9:	movabs ds:0xa2b6ff798da2ff92,al
  41abc2:	xchg   ecx,eax
  41abc3:	inc    esi
  41abc5:	mov    bl,0xa3
  41abc7:	call   rdx
  41abc9:	mov    edi,0xc4d7ffb0
  41abce:	mov    ch,0xff
  41abd0:	fcmovnb st,st(6)
  41abd2:	mov    eax,0xb7c7dcff
  41abd7:	(bad)  
  41abd8:	fadd   st(6),st
  41abda:	mov    dh,0xff
  41abdc:	(bad)  
  41abdd:	mov    ebp,0xabc6ffac
  41abe2:	(bad)  
  41abe3:	jmp    QWORD PTR [rsi-0x7e008675]
  41abe9:	push   bp
  41abeb:	call   QWORD PTR [rsi+0x3d]
  41abee:	(bad)  
  41abef:	jmp    FWORD PTR [rdi+0x5e]
  41abf2:	push   rbx
  41abf3:	inc    DWORD PTR [rdi-0x61008f87]
  41abf9:	xchg   ecx,eax
  41abfa:	test   edi,edi
  41abfc:	xchg   ebx,eax
  41abfd:	sub    DWORD PTR [rdi-0x1],0xff6f8397
  41ac04:	stos   DWORD PTR es:[rdi],eax
  41ac05:	cwde   
  41ac06:	mov    bh,bh
  41ac08:	mov    ebp,0xccff9ba9
  41ac0d:	mov    eax,0xc6d9ffab
  41ac12:	mov    eax,0xb8c7dbff
  41ac17:	(bad)  
  41ac18:	fadd   st(7),st
  41ac1a:	mov    bh,0xff
  41ac1c:	ffree  st(6)
  41ac1e:	mov    dh,0xff
  41ac20:	sar    DWORD PTR [rdx-0x583e0056],cl
  41ac26:	xchg   ebp,eax
  41ac27:	jmp    QWORD PTR [rdi+0x7aff788b]
  41ac2d:	(bad)  
  41ac2e:	push   rax
  41ac2f:	jmp    FWORD PTR [rsi+0x5b]
  41ac32:	rex.WRB inc QWORD PTR [r11-0x71009189]
  41ac39:	test   DWORD PTR [rbp+0x55],edi
	...
  41ac74:	mov    al,0x9e
  41ac76:	mov    BYTE PTR [rcx-0x6b5846],ch
  41ac7c:	sar    BYTE PTR [rbp+rbp*4-0x352a1a01],1
  41ac83:	(bad)  
  41ac84:	in     al,dx
  41ac85:	fst    st(2)
  41ac87:	jmp    rdx
  41ac89:	rol    esp,cl
  41ac8b:	(bad)  
  41ac8c:	fmulp  st(6),st
  41ac8e:	sar    bh,0xdf
  41ac91:	(bad)  
  41ac92:	sar    bh,0xe6
  41ac95:	(bad)  
  41ac96:	(bad)  
  41ac99:	rol    bl,cl
  41ac9b:	(bad)  
  41ac9c:	fld    st(6)
  41ac9e:	mov    bh,0xff
  41aca0:	leave  
  41aca1:	mov    cl,0xa2
  41aca3:	jmp    FWORD PTR [rdi-0x73007a6b]
  41aca9:	jno    0x41ad0b
  41acab:	call   FWORD PTR [rdi+0x45]
  41acae:	xor    edi,edi
  41acb0:	push   rbx
  41acb1:	cmp    eax,0x475bff2f
  41acb6:	cmp    bh,bh
  41acb8:	jp     0x41ad20
  41acba:	push   rbp
  41acbb:	(bad)  
  41acbc:	jge    0x41ad27
  41acbe:	pop    rax
  41acbf:	dec    DWORD PTR [rax-0x62009789]
  41acc5:	mov    es,WORD PTR [rbp-0x6e655501]
  41accb:	(bad)  
  41accc:	mov    ebx,0xd2ffa1ac
  41acd1:	(bad)  
  41acd2:	mov    dh,0xff
  41acd4:	(bad)  
  41acd6:	sar    bh,0xe7
  41acd9:	(bad)  
  41acda:	(bad)  
  41acdb:	(bad)  
  41acdc:	(bad)  
  41acdd:	fmul   st,st(1)
  41acdf:	(bad)  
  41ace0:	in     al,dx
  41ace1:	fxch   st(3)
  41ace3:	(bad)  
  41ace4:	jmp    0x41acbb
  41ace6:	(bad)  
  41ace7:	jmp    rdi
  41ace9:	int    0xbd
  41aceb:	jmp    FWORD PTR [rdi-0x7d007e6b]
  41acf1:	push   0x58
  41acf3:	call   FWORD PTR [rdi+0x4e]
  41acf6:	call   FWORD PTR [r15+0x4e]
  41acfa:	push   r13
	...
  41ad34:	mov    dl,0x9f
  41ad36:	xchg   DWORD PTR [rcx-0x5e4a3a],ebp
  41ad3c:	in     al,dx
  41ad3d:	(bad)  
  41ad3f:	jmp    rdx
  41ad41:	(bad)  
  41ad42:	leave  
  41ad43:	dec    eax
  41ad45:	mov    bh,0xa9
  41ad47:	call   FWORD PTR [rsi-0x4f008977]
  41ad4d:	movabs al,ds:0xbeccffa3b1c0ff90
  41ad56:	scas   eax,DWORD PTR es:[rdi]
  41ad57:	inc    eax
  41ad59:	mov    al,0x9e
  41ad5b:	jmp    FWORD PTR [rdi-0x68007765]
  41ad61:	sub    DWORD PTR [rsi-0x1],0xff606f88
  41ad68:	jnp    0x41adcc
  41ad6a:	push   rbx
  41ad6b:	push   QWORD PTR [rcx+0x59]
  41ad6e:	rex.WB push QWORD PTR [r11+0x5c]
  41ad72:	rex.WRX push QWORD PTR [rbp+0x60]
  41ad76:	push   rdx
  41ad77:	push   QWORD PTR [rdi+0x62]
  41ad7a:	push   rbp
  41ad7b:	push   QWORD PTR [rsi+rbx*2+0x52]
  41ad7f:	push   QWORD PTR [rax+0x5c]
  41ad82:	rex.WRXB jmp FWORD PTR [r11+0x5a]
  41ad86:	rex.WRX jmp QWORD PTR [rdi+0x54]
  41ad8a:	rex.W push QWORD PTR [rdx+0x5e]
  41ad8e:	push   rcx
  41ad8f:	dec    DWORD PTR [rsi-0x4c009686]
  41ad95:	movabs ds:0xc3d0ffadbcc9ff94,eax
  41ad9e:	mov    ch,0xff
  41ada0:	iret   
  41ada1:	mov    edi,0xc2d6ffaf
  41ada6:	mov    dl,0xff
  41ada8:	jrcxz  0x41ad77
  41adaa:	mov    ebp,0xa1b1caff
  41adaf:	call   FWORD PTR [rbx+rax*4+0x4459ff73]
  41adb6:	xor    edi,edi
  41adb8:	pop    rbp
  41adb9:	rex.WX cmp al,0x55
	...
  41adf4:	mov    dh,0xa2
  41adf6:	xchg   DWORD PTR [rcx-0x564233],ebp
  41adfc:	cld    
  41adfd:	cmc    
  41adfe:	out    dx,al
  41adff:	(bad)  
  41ae00:	fmul   st(7),st
  41ae02:	(bad)  
  41ae03:	jmp    FWORD PTR [rbp+0x6fff8b9b]
  41ae09:	push   rdi
  41ae0a:	rex.XB call QWORD PTR [r13-0x5100877b]
  41ae11:	movabs ds:0x9babffa1aeb8ff97,al
  41ae1a:	mov    bh,bh
  41ae1c:	lahf   
  41ae1d:	mov    esi,DWORD PTR [rdi-0x1]
  41ae20:	xchg   ebx,eax
  41ae21:	jle    0x41ae8d
  41ae23:	call   QWORD PTR [rdx-0x69009384]
  41ae29:	xor    BYTE PTR [rdx-0x1],0x9f
  41ae2d:	mov    bh,BYTE PTR [rbp-0x1]
  41ae30:	test   eax,0xa8ff8794
  41ae35:	xchg   esp,eax
  41ae36:	xchg   edi,edi
  41ae38:	lahf   
  41ae39:	mov    edi,DWORD PTR [rdi-0x1]
  41ae3c:	cdq    
  41ae3d:	test   BYTE PTR [rdi-0x1],dh
  41ae40:	lea    esi,[rdi+0x69]
  41ae43:	(bad)  
  41ae44:	jnp    0x41aeab
  41ae46:	push   rsp
  41ae47:	jmp    FWORD PTR [rax+0x50]
  41ae4a:	rex jmp QWORD PTR [rdx+0x4b]
  41ae4e:	cmp    bh,bh
  41ae50:	ins    BYTE PTR es:[rdi],dx
  41ae51:	push   rsi
  41ae52:	rex.R call FWORD PTR [rcx-0x4b008376]
  41ae59:	test   eax,0xb4bdff9e
  41ae5e:	stos   BYTE PTR es:[rdi],al
  41ae5f:	(bad)  
  41ae60:	mov    eax,0xc3ff98a9
  41ae65:	scas   eax,DWORD PTR es:[rdi]
  41ae66:	sahf   
  41ae67:	(bad)  
  41ae68:	fmulp  st(1),st
  41ae6a:	mov    ecx,0xb5c4dcff
  41ae6f:	push   QWORD PTR [rax+0x59ff8697]
  41ae75:	rex.B sub eax,0x2d3f57ff
  41ae7b:	push   rbp
	...
  41aeb4:	mov    bh,0xa3
  41aeb6:	mov    BYTE PTR [rcx-0x533f32],ch
  41aebc:	(bad)  
  41aebd:	cld    
  41aebe:	idiv   bh
  41aec0:	(bad)  
  41aec1:	enter  0xffbe,0x9c
  41aec5:	mov    BYTE PTR [rdx-0x1],bh
  41aec8:	push   rsp
  41aec9:	cmp    al,0x2b
  41aecb:	dec    DWORD PTR [rbx-0x56008a81]
  41aed1:	movabs ds:0x94a3ff9da4acff9b,al
  41aeda:	xchg   bh,bh
  41aedc:	test   al,0x96
  41aede:	cmp    edi,0xffffffbc
  41aee1:	test   eax,0xbacdff95
  41aee6:	test   al,0xff
  41aee8:	(bad)  
  41aeea:	mov    ebx,0xcedbecff
  41aeef:	push   rbx
  41aef1:	in     al,0xd8
  41aef3:	push   rbp
  41aef5:	out    0xda,al
  41aef7:	push   rbx
  41aef9:	loop   0x41aece
  41aefb:	(bad)  
  41aefc:	in     al,dx
  41aefd:	fxch   st(1)
  41aeff:	(bad)  
  41af00:	(bad)  
  41af02:	mov    dh,0xff
  41af04:	int3   
  41af05:	mov    al,0x98
  41af07:	jmp    FWORD PTR [rdi+rcx*4+0x728cff78]
  41af0e:	pop    rbp
  41af0f:	jmp    FWORD PTR [rax+rbx*2+0x47]
  41af13:	dec    DWORD PTR [rdi-0x5800877d]
  41af19:	lahf   
  41af1a:	cwde   
  41af1b:	push   QWORD PTR [rbx-0x59005954]
  41af21:	xchg   esi,eax
  41af22:	xchg   bh,bh
  41af24:	mov    dl,0x9d
  41af26:	mov    bh,bh
  41af28:	fadd   st,st(1)
  41af2a:	mov    cl,0xff
  41af2c:	in     eax,0xcd
  41af2e:	mov    esi,0x93a4bdff
  41af33:	call   FWORD PTR [rdi+0x45]
  41af36:	(bad)  
  41af37:	call   FWORD PTR [rdi+0x45]
  41af3a:	(bad)  
  41af3b:	push   rbp
	...
  41af6c:	js     0x41afda
  41af6e:	push   rdi
  41af6f:	cmp    BYTE PTR [rbp-0x5a569882],cl
  41af75:	xchg   ebp,eax
  41af76:	jl     0x41af5a
  41af78:	leave  
  41af79:	mov    ebx,0xeff7ffa6
  41af7e:	out    0xff,al
  41af80:	in     al,0xd8
  41af82:	iret   
  41af83:	(bad)  
  41af84:	mov    ecx,0x76ff9ca9
  41af89:	(bad)  
  41af8a:	rex.WRXB push QWORD PTR [r13+0x65]
  41af8e:	pop    rax
  41af8f:	push   QWORD PTR [rbp+0x66]
  41af92:	pop    rbx
  41af93:	push   QWORD PTR [rsi+0x66]
  41af96:	pop    rdx
  41af97:	inc    DWORD PTR [rsi-0x61009c8d]
  41af9d:	mov    DWORD PTR [rsi-0x1],esi
  41afa0:	mov    esp,0xcbff93a7
  41afa5:	mov    eax,0xc2d4ffa5
  41afaa:	scas   eax,DWORD PTR es:[rdi]
  41afab:	call   rbp
  41afad:	ret    
  41afae:	mov    dl,0xff
  41afb0:	int    0xbb
  41afb2:	test   eax,0xa7bacbff
  41afb7:	call   rax
  41afb9:	mov    edi,0xc1d3ffaa
  41afbe:	scas   al,BYTE PTR es:[rdi]
  41afbf:	call   rdx
  41afc1:	mov    esi,0xb6cdffab
  41afc6:	movabs al,ds:0x677c95ff869db6ff
  41afcf:	jmp    FWORD PTR [rsi+rdx*2+0x44]
  41afd3:	jmp    FWORD PTR [rdi+0x5c]
  41afd6:	rex.WRXB (bad) 
  41afd8:	jns    0x41b042
  41afda:	pop    rsp
  41afdb:	dec    DWORD PTR [rax-0x63009588]
  41afe1:	xchg   DWORD PTR [rbp-0x1],esi
  41afe4:	mov    ebx,0xe4ff93a5
  41afe9:	rol    bl,1
  41afeb:	jmp    rbx
  41afed:	int    0xbf
  41afef:	(bad)  
  41aff0:	mov    edx,0x68ff90a2
  41aff5:	rex.WRB xor rax,0x314762ff
  41affb:	push   rbp
	...
  41b028:	(bad)  
  41b029:	rex.RX sub DWORD PTR [rax],r15d
  41b02c:	gs pop rsi
  41b02e:	rex.RX lea r13d,[rbx+0x5d]
  41b032:	rex.XB dec DWORD PTR [r13-0x4800987b]
  41b039:	scas   eax,DWORD PTR es:[rdi]
  41b03a:	xchg   esi,eax
  41b03b:	(bad)  
  41b03c:	call   0xffffffffed41811d
  41b041:	loope  0x41b01a
  41b043:	(bad)  
  41b044:	fmul   st,st(3)
  41b046:	sar    edi,0xac
  41b049:	pushf  
  41b04a:	mov    ?,edi
  41b04c:	xchg   esp,eax
  41b04d:	test   BYTE PTR [rdi-0x1],dh
  41b050:	xchg   DWORD PTR [rbp+0x69],esi
  41b053:	inc    DWORD PTR [rcx+rsi*2-0x7b68009b]
  41b05a:	jbe    0x41b05b
  41b05c:	scas   eax,DWORD PTR es:[rdi]
  41b05d:	fwait
  41b05e:	mov    edi,edi
  41b060:	retf   
  41b061:	mov    bh,0xa5
  41b063:	call   rbp
  41b065:	ret    0xffb1
  41b068:	sar    DWORD PTR [rdi-0x523e0053],1
  41b06e:	(bad)  
  41b06f:	jmp    FWORD PTR [rcx-0x5b00866f]
  41b075:	mov    ch,BYTE PTR [rdi-0x1]
  41b078:	mov    al,0x98
  41b07a:	jle    0x41b07b
  41b07c:	ret    
  41b07d:	mov    al,0x9b
  41b07f:	call   rcx
  41b081:	shr    DWORD PTR [rdi-0x46352501],0xff
  41b088:	retf   0xa7b8
  41b08b:	push   QWORD PTR [rcx-0x71007262]
  41b091:	jp     0x41b0ff
  41b093:	inc    DWORD PTR [rdi-0x7500998d]
  41b099:	ja     0x41b105
  41b09b:	call   FWORD PTR [rax-0x4b00887b]
  41b0a1:	movabs al,ds:0xdbedffadbcd0ff90
  41b0aa:	iret   
  41b0ab:	(bad)  
  41b0ac:	fld    st(5)
  41b0ae:	mov    ch,0xff
  41b0b0:	mov    bl,0x9d
  41b0b2:	mov    bh,bh
  41b0b4:	jnp    0x41b119
  41b0b6:	rex.WRB push QWORD PTR [r9+0x57]
  41b0ba:	(bad)  
  41b0bb:	push   rbp
	...
  41b0e8:	(bad)  
  41b0e9:	rex.RX sub DWORD PTR [rcx-0xdbbbc0],r13d
  41b0f0:	push   rbx
  41b0f1:	rex sbb edi,edi
  41b0f4:	ins    DWORD PTR es:[rdi],dx
  41b0f5:	jae    0x41b13f
  41b0f7:	call   FWORD PTR [rax-0x2b008461]
  41b0fd:	(bad)  
  41b0fe:	mov    bl,0xff
  41b100:	in     al,dx
  41b101:	loope  0x41b0d9
  41b103:	(bad)  
  41b104:	clc    
  41b105:	out    dx,eax
  41b106:	call   0xffffffffe92fa80a
  41b10b:	(bad)  
  41b10c:	call   0xffffffffde4185ed
  41b111:	rol    dh,1
  41b113:	call   rsi
  41b115:	enter  0xffbe,0xd6
  41b119:	enter  0xffbf,0xdc
  41b11d:	int    0xc4
  41b11f:	(bad)  
  41b120:	call   0xffffffffeb417ffd
  41b125:	fmul   st,st(4)
  41b127:	call   rdi
  41b129:	ret    0xffb4
  41b12c:	scas   eax,DWORD PTR es:[rdi]
  41b12d:	xchg   edi,eax
  41b12e:	test   bh,bh
  41b130:	mov    DWORD PTR [rsi+rax*2-0x1],esp
  41b134:	jg     0x41b18c
  41b136:	xor    al,0xff
  41b138:	xchg   ebx,eax
  41b139:	ins    DWORD PTR es:[rdi],dx
  41b13a:	rex.WRXB (bad) 
  41b13c:	mov    esp,0xddff90a5
  41b141:	iret   
  41b142:	ret    0xf4ff
  41b145:	(bad)  
  41b146:	jrcxz  0x41b147
  41b148:	jmp    0x41b12c
  41b14a:	(bad)  
  41b14c:	loopne 0x41b124
  41b14e:	iret   
  41b14f:	call   rbx
  41b151:	(bad)  
  41b152:	mov    edi,0xbfc8d6ff
  41b157:	(bad)  
  41b158:	fmul   st(5),st
  41b15a:	(bad)  
  41b15b:	jmp    rbp
  41b15d:	(bad)  
  41b15e:	int    0xff
  41b160:	out    dx,al
  41b161:	(bad)  
  41b163:	push   rdx
  41b165:	jrcxz  0x41b141
  41b167:	push   rcx
  41b169:	loope  0x41b141
  41b16b:	inc    esi
  41b16d:	mov    bl,0xa1
  41b16f:	jmp    FWORD PTR [rcx-0x66007e6b]
  41b175:	mov    BYTE PTR [rdi-0x1],dh
  41b178:	cdq    
  41b179:	mov    BYTE PTR [rdi+0x55],dh
	...
  41b1a0:	rex.R (bad) 
  41b1a2:	sbb    BYTE PTR [rax],bh
  41b1a4:	(bad)  
  41b1a5:	cmp    al,0x1d
  41b1a7:	test   eax,0xe227573e
  41b1ac:	ds gs sub bh,bh
  41b1b0:	ds fs dec DWORD PTR es:[rdx+0x77]
  41b1b6:	cmp    edi,edi
  41b1b8:	push   0xffffffffffffff8c
  41b1ba:	push   rdi
  41b1bb:	call   FWORD PTR [rsi-0x3f007d5b]
  41b1c1:	mov    ebx,0xc9d4ffa6
  41b1c6:	mov    esp,0xc4cfdaff
  41b1cb:	(bad)  
  41b1cc:	fmul   st,st(3)
  41b1ce:	sar    bh,0xd5
  41b1d1:	enter  0xffbc,0xd2
  41b1d5:	(bad)
  41b1d8:	rol    ebx,1
  41b1da:	mov    bh,0xff
  41b1dc:	rol    edx,1
  41b1de:	mov    dh,0xff
  41b1e0:	rol    dl,cl
  41b1e2:	mov    ah,0xff
  41b1e4:	iret   
  41b1e5:	mov    esi,0xa4bbffae
  41b1ea:	nop
  41b1eb:	call   QWORD PTR [rdi-0x6f00a38b]
  41b1f1:	push   rcx
  41b1f2:	call   QWORD PTR cs:[rax-0x6a00e3bd]
  41b1f9:	rex.WXB and rax,0x5f7caaff
  41b1ff:	(bad)  
  41b200:	mov    esi,0xd2ff90a5
  41b205:	(bad)  
  41b206:	mov    dh,0xff
  41b208:	(bad)  
  41b209:	leave  
  41b20a:	mov    esp,0xbecad5ff
  41b20f:	call   rbx
  41b211:	(bad)  
  41b212:	mov    ebx,0xb9c5d2ff
  41b217:	call   rbx
  41b219:	(bad)
  41b21c:	(bad)  
  41b21d:	(bad)  
  41b21e:	mov    ebx,0xb9c5d4ff
  41b223:	dec    edi
  41b225:	mov    edi,0xb3c5ffb1
  41b22a:	movabs ds:0x8799acff92a3b5ff,eax
  41b233:	(bad)  
  41b234:	cdq    
  41b235:	mov    BYTE PTR [rdi+0x55],dh
  41b238:	cdq    
  41b239:	mov    BYTE PTR [rdi+0x1c],dh
	...
  41b25c:	ja     0x41b299
  41b25e:	adc    bh,BYTE PTR [rax]
  41b260:	push   rax
  41b261:	cmp    al,0x17
  41b263:	lea    eax,[rdi+0x45]
  41b266:	sbb    edi,edi
  41b268:	rex.B
  41b269:	addr32 sub bh,bh
  41b26c:	cmp    bh,BYTE PTR [rax+0x2f]
  41b26f:	push   QWORD PTR [rcx+rdi*2]
  41b272:	cs (bad) 
  41b274:	cmp    BYTE PTR [rcx+0x31],bh
  41b277:	dec    DWORD PTR [rbx+0x7f]
  41b27a:	jmp    FWORD PTR ds:[rsp+rcx*4+0x57]
  41b27f:	inc    DWORD PTR [rsi-0x68009068]
  41b285:	movabs ds:0xaca0ff88aa9eff80,al
  41b28e:	mov    edi,edi
  41b290:	movabs eax,ds:0xa1ff8cada0ff8cad
  41b299:	mov    cl,0x8f
  41b29b:	call   FWORD PTR [rdi-0x64007351]
  41b2a1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  41b2a2:	cmp    edi,0xff759b9b
  41b2a8:	xchg   esi,eax
  41b2a9:	jg     0x41b306
  41b2ab:	dec    DWORD PTR [rbx-0x6900ccac]
  41b2b1:	rex.XB sbb edi,r15d
  41b2b4:	(bad)  
  41b2b5:	cmp    cl,BYTE PTR [rsi]
  41b2b7:	call   FWORD PTR [rcx-0x6000f1c8]
  41b2bd:	push   rdi
  41b2be:	xor    bh,bh
  41b2c0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  41b2c1:	jno    0x41b316
  41b2c3:	jmp    FWORD PTR [rbx-0x4b008f77]
  41b2c9:	popf   
  41b2ca:	mov    edi,edi
  41b2cc:	shl    DWORD PTR [rcx-0x372c1d5f],0xba
  41b2d3:	stos   BYTE PTR es:[rdi],al
  41b2d4:	rol    ebp,1
  41b2d6:	mov    bh,0xaa
  41b2d8:	iret   
  41b2d9:	shl    DWORD PTR [rdx+rbp*4-0x554d4033],0xc9
  41b2e1:	mov    ebx,0xb0c0aaac
  41b2e6:	lahf   
  41b2e7:	stos   BYTE PTR es:[rdi],al
  41b2e8:	scas   eax,DWORD PTR es:[rdi]
  41b2e9:	pushf  
  41b2ea:	mov    ch,BYTE PTR [rdx-0x55756353]
  41b2f0:	lods   al,BYTE PTR ds:[rsi]
  41b2f1:	pushf  
  41b2f2:	mov    WORD PTR [rcx+0x0],?
	...
  41b319:	add    BYTE PTR [rax],al
  41b31b:	add    BYTE PTR [rdi+0x3b],dh
  41b31e:	adc    ch,BYTE PTR [rcx-0xe8b897]
  41b324:	rex.WRB (bad) 
  41b326:	and    bh,bh
  41b328:	cmp    eax,0x36ff2d74
  41b32d:	jle    0x41b361
  41b32f:	push   QWORD PTR [rsi]
  41b331:	jge    0x41b363
  41b333:	(bad)  
  41b334:	cmp    DWORD PTR [rcx+0x31],edi
  41b337:	(bad)  
  41b338:	cmp    al,0x78
  41b33a:	xor    bh,bh
  41b33c:	(bad)  
  41b33d:	jns    0x41b372
  41b33f:	(bad)  
  41b340:	(bad)  
  41b341:	js     0x41b376
  41b343:	inc    DWORD PTR [rax+0x79]
  41b346:	xor    edi,edi
  41b348:	rex jl 0x41b37e
  41b34b:	inc    DWORD PTR [rcx+0x7e]
  41b34e:	xor    eax,0x377f42ff
  41b353:	inc    DWORD PTR [rdx+0x7f]
  41b356:	cmp    bh,bh
  41b358:	rex.RXB xchg r9d,eax
  41b35a:	rex.RXB inc DWORD PTR [r15-0x6d]
  41b35e:	rex.RX inc DWORD PTR [rbx-0x7b]
  41b362:	xor    eax,0x206d4eff
  41b367:	jmp    QWORD PTR [rsi+0x52]
  41b36a:	adc    bh,bh
  41b36c:	mov    esi,DWORD PTR [rsi]
  41b36e:	or     edi,edi
  41b370:	cdq    
  41b371:	cmp    DWORD PTR [rbx],ecx
  41b373:	call   FWORD PTR [rdi-0x6200f4c6]
  41b379:	ss or  edi,edi
  41b37c:	fwait
  41b37d:	xor    eax,0x3692ff0a
  41b382:	or     edi,edi
  41b384:	cmp    DWORD PTR [rax],0x5c8bff10
  41b38a:	rex call QWORD PTR [rcx+0xaa596f]
	...
  41b3d1:	add    BYTE PTR [rax],al
  41b3d3:	add    BYTE PTR [rdi+0x39],dh
  41b3d6:	adc    edi,DWORD PTR [rax]
  41b3d8:	ja     0x41b413
  41b3da:	adc    ch,BYTE PTR [rcx-0x1dedbf85]
  41b3e0:	push   0x54
  41b3e2:	sbb    bh,bh
  41b3e4:	rex.RB je 0x41b412
  41b3e7:	(bad)  
  41b3e8:	xor    DWORD PTR ds:[rcx],0x32863bff
  41b3ef:	(bad)  
  41b3f0:	cmp    eax,0x3eff3084
  41b3f5:	xor    BYTE PTR [rdx],0xff
  41b3f8:	rex jle 0x41b430
  41b3fb:	inc    DWORD PTR [rdx-0x7f]
  41b3fe:	cmp    bh,bh
  41b400:	rex.XB cmp DWORD PTR [r10],0xffffffff
  41b404:	xchg   BYTE PTR [rdx],r15b
  41b407:	inc    DWORD PTR [rcx+rcx*4+0x3b]
  41b40b:	inc    DWORD PTR [rsi-0x75]
  41b40e:	rex.X dec DWORD PTR [rax-0x6e]
  41b412:	rex.WR dec QWORD PTR [rdx-0x63]
  41b416:	push   rdi
  41b417:	dec    DWORD PTR [rcx-0x67]
  41b41a:	rex.WRXB dec QWORD PTR [r14-0x76]
  41b41e:	call   FWORD PTR [r11+0x72]
  41b422:	cs (bad) 
  41b424:	jnp    0x41b484
  41b426:	(bad)  
  41b427:	call   QWORD PTR [rdi-0x5100e9af]
  41b42d:	rex.WXB adc al,0xff
  41b430:	scas   eax,DWORD PTR es:[rdi]
  41b431:	adc    rdi,r15
  41b434:	lods   eax,DWORD PTR ds:[rsi]
  41b435:	adc    dil,r15b
  41b438:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  41b439:	ds (bad) 
  41b43b:	call   FWORD PTR [rdi-0x6600f4c7]
  41b441:	ss or  edi,edi
  41b444:	xchg   edx,eax
  41b445:	ss or  al,0xff
  41b448:	test   DWORD PTR [rdx+0x1f],eax
  41b44b:	(bad)  
  41b44c:	jge    0x41b4a4
  41b44e:	cmp    ah,dl
  41b450:	outs   dx,DWORD PTR ds:[rsi]
  41b451:	jno    0x41b4b2
  41b453:	test   eax,0x385f716f
	...
  41b490:	jp     0x41b4cf
  41b492:	sbb    DWORD PTR [rax],edi
  41b494:	jp     0x41b4d1
  41b496:	adc    ecx,DWORD PTR [rbp-0xeec380]
  41b49c:	(bad)  
  41b49d:	adc    edi,r15d
  41b4a0:	outs   dx,DWORD PTR ds:[rsi]
  41b4a1:	pop    rcx
  41b4a2:	sbb    edi,edi
  41b4a4:	rex.RXB jl 0x41b4d6
  41b4a7:	inc    DWORD PTR [rdx-0x7a]
  41b4aa:	xor    edi,edi
  41b4ac:	mov    WORD PTR [rip+0x338c43ff],?        # 0x33cdf8b2
  41b4b3:	inc    DWORD PTR [rbx-0x76]
  41b4b6:	xor    eax,0x388a44ff
  41b4bb:	inc    DWORD PTR [rbp-0x75]
  41b4be:	cmp    eax,0x419047ff
  41b4c3:	dec    DWORD PTR [rax-0x6c]
  41b4c6:	rex.RX dec DWORD PTR [rcx-0x67]
  41b4ca:	rex.WXB dec QWORD PTR [r11-0x63]
  41b4ce:	push   rsp
  41b4cf:	dec    DWORD PTR [rcx+riz*4+0x58]
  41b4d3:	dec    DWORD PTR [rbp-0x5b]
  41b4d6:	pop    rax
  41b4d7:	call   QWORD PTR [rsi-0x71]
  41b4da:	rex.W jmp FWORD PTR [rcx+0x7b]
  41b4de:	cmp    bh,bh
  41b4e0:	test   DWORD PTR [rax+0x2a],ebp
  41b4e3:	jmp    QWORD PTR [rbp-0x4500dda4]
  41b4e9:	pop    rax
  41b4ea:	(bad)  
  41b4eb:	inc    esp
  41b4ed:	pop    rbx
  41b4ee:	sbb    eax,0x1a56bfff
  41b4f3:	(bad)  
  41b4f4:	mov    edx,0xb2ff1750
  41b4f9:	adc    rdi,r15
  41b4fc:	test   eax,0xa2ff1042
  41b501:	cmp    al,0xd
  41b503:	call   FWORD PTR [rbp-0x7b00f4c9]
  41b509:	(bad)  
  41b50a:	(bad)  
  41b50b:	jmp    FWORD PTR [rsi+0x44]
  41b50e:	and    bh,bh
  41b510:	pop    rbp
  41b511:	pop    rdi
  41b512:	rex.WB jmp FWORD PTR [r13+0x70]
  41b516:	pop    rbp
  41b517:	lea    eax,[rbp+0x387b88]
	...
  41b54d:	add    BYTE PTR [rax],al
  41b54f:	add    BYTE PTR [rdx+0x3d],bh
  41b552:	sbb    DWORD PTR [rcx-0xeac07e],ebp
  41b558:	xchg   esp,eax
  41b559:	ud0    r9d,DWORD PTR [rbp+0x78ff1048]
  41b561:	pop    rax
  41b562:	sbb    edi,edi
  41b564:	push   rsp
  41b565:	ja     0x41b593
  41b567:	dec    DWORD PTR [rdx-0x7b]
  41b56a:	xor    al,0xff
  41b56c:	rex.RX (bad) 
  41b56e:	cmp    edi,edi
  41b570:	rex.RXB xchg r12d,eax
  41b572:	cmp    bh,bh
  41b574:	rex.RXB cwde 
  41b576:	cmp    bh,bh
  41b578:	rex.RXB (bad) 
  41b57a:	cmp    al,0xff
  41b57c:	rex.WB (bad) 
  41b57e:	(bad)  
  41b57f:	dec    DWORD PTR [rbx-0x62]
  41b582:	dec    QWORD PTR [r14-0x5c]
  41b586:	push   rbp
  41b587:	call   QWORD PTR [rax-0x54]
  41b58a:	call   QWORD PTR fs:[rdx-0x4d]
  41b58e:	push   0xffffffffffffffff
  41b590:	rex.WRXB lods al,BYTE PTR ds:[rsi]
  41b592:	pop    rbp
  41b593:	dec    DWORD PTR [rcx-0x6a]
  41b596:	push   QWORD PTR ds:[rax+0x75]
  41b59a:	xor    bh,bh
  41b59c:	cwde   
  41b59d:	gs sub edi,edi
  41b5a0:	shl    DWORD PTR [rdi+0x29],0xff
  41b5a4:	retf   
  41b5a5:	push   0x67cfff2a
  41b5aa:	sub    bh,bh
  41b5ac:	int    0x65
  41b5ae:	es dec edx
  41b5b1:	(bad)  
  41b5b2:	and    edi,edi
  41b5b4:	(bad)  
  41b5b5:	pop    rbp
  41b5b6:	and    bh,bh
  41b5b8:	rcl    DWORD PTR [rdi+0x1c],0xff
  41b5bc:	mov    eax,0xadff164f
  41b5c1:	rex.RX adc r15b,dil
  41b5c4:	movabs eax,ds:0x64ff0d3986ff0e3c
  41b5cd:	cmp    DWORD PTR [rdx],edx
  41b5cf:	(bad)  
  41b5d0:	cmp    bh,BYTE PTR [rsi+rbx*1]
  41b5d3:	jmp    FWORD PTR [rbx+0x6e]
  41b5d6:	pop    rbx
  41b5d7:	inc    DWORD PTR [rbp+0xaa7b88]
	...
  41b605:	add    BYTE PTR [rax],al
  41b607:	add    BYTE PTR [rdx-0x70c79f89],bl
  41b60d:	movsxd ecx,DWORD PTR [rax-0x57]
  41b610:	mov    BYTE PTR [rcx+0x25],cl
  41b613:	loop   0x41b5a4
  41b615:	cmp    eax,0x42a4ff11
  41b61a:	(bad)  
  41b61b:	call   FWORD PTR [rbx-0x7b00f0b9]
  41b621:	push   rbp
  41b622:	(bad)  
  41b623:	jmp    QWORD PTR [rax+0x6b]
  41b626:	call   QWORD PTR es:[rdx-0x7d]
  41b62a:	xor    edi,edi
  41b62c:	rex.WX xchg rbx,rax
  41b62e:	cmp    al,0xff
  41b630:	rex.WB popf 
  41b632:	rex dec DWORD PTR [rdx-0x5f]
  41b636:	dec    DWORD PTR [r11-0x5b]
  41b63a:	dec    DWORD PTR [r8+r13*4+0x47]
  41b63f:	call   QWORD PTR [rax-0x4c]
  41b642:	pop    rbx
  41b643:	call   QWORD PTR [rdx-0x48]
  41b646:	call   QWORD PTR [edx-0x4c]
  41b64a:	imul   edi,edi,0x50
  41b64d:	stos   DWORD PTR es:[rdi],eax
  41b64e:	pop    rdi
  41b64f:	dec    DWORD PTR [rbp-0x5e]
  41b652:	rex.WRX dec QWORD PTR [rcx-0x66]
  41b656:	cmp    bh,bh
  41b658:	jge    0x41b6ce
  41b65a:	jmp    FWORD PTR cs:[rbx-0x2c00d298]
  41b661:	jne    0x41b697
  41b663:	call   rsi
  41b665:	jae    0x41b69a
  41b667:	call   rsi
  41b669:	jno    0x41b69d
  41b66b:	call   rbx
  41b66d:	outs   dx,BYTE PTR ds:[rsi]
  41b66e:	(bad)  
  41b66f:	call   rcx
  41b671:	imul   ebp,DWORD PTR [rbx],0xffffffff
  41b674:	(bad)  
  41b675:	addr32 (bad) 
  41b677:	dec    ecx
  41b679:	(bad)  
  41b67a:	and    edi,edi
  41b67c:	ret    0x1f59
  41b67f:	push   QWORD PTR [rdx-0x6600e7b3]
  41b685:	(bad)  
  41b686:	adc    bh,bh
  41b688:	jne    0x41b6ce
  41b68a:	adc    edi,edi
  41b68c:	push   rdi
  41b68d:	rex.WRB sbb r15b,r15b
  41b690:	ds pop rcx
  41b692:	and    eax,0x496654ff
  41b697:	push   QWORD PTR [rsi+0x7e]
  41b69a:	outs   dx,DWORD PTR ds:[rsi]
  41b69b:	loop   0x41b650
  41b69d:	lods   al,BYTE PTR ds:[rsi]
  41b69e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41b69f:	test   eax,0x38a6acb3
	...
  41b6c8:	xchg   esi,eax
  41b6c9:	jo     0x41b722
  41b6cb:	push   rsp
  41b6cc:	mov    fs,WORD PTR [rdx+0x47]
  41b6cf:	call   QWORD PTR [rdx-0x6500ddb7]
  41b6d5:	cmp    eax,0x3fa7ff0f
  41b6da:	or     eax,0xf449bff
  41b6df:	inc    DWORD PTR [rdx+rdx*2+0x6961ff18]
  41b6e6:	sub    bh,bh
  41b6e8:	push   rbx
  41b6e9:	xchg   BYTE PTR [rdi],dh
  41b6eb:	dec    DWORD PTR [rbx+rbx*4+0x41]
  41b6ef:	dec    DWORD PTR [rbx-0x59]
  41b6f2:	rex.RXB dec DWORD PTR [r13-0x56]
  41b6f6:	dec    QWORD PTR [rsi-0x51]
  41b6fa:	rex.WRX call QWORD PTR [rax-0x4a]
  41b6fe:	pop    rax
  41b6ff:	call   QWORD PTR [rcx-0x47]
  41b702:	(bad)  
  41b703:	call   QWORD PTR [rcx-0x49]
  41b706:	(bad)  
  41b707:	call   QWORD PTR [rax-0x51]
  41b70a:	pop    rsi
  41b70b:	dec    DWORD PTR [rsi-0x5c]
  41b70e:	rex.WRXB call QWORD PTR [r14-0x67]
  41b712:	rex jmp QWORD PTR [rdi-0x73]
  41b716:	xor    al,0xff
  41b718:	pushf  
  41b719:	ja     0x41b74e
  41b71b:	inc    esp
  41b71d:	jae    0x41b755
  41b71f:	(bad)  
  41b720:	fistp  QWORD PTR [rdi+0x3e]
  41b723:	(bad)  
  41b724:	fnstsw WORD PTR [rbp+0x3c]
  41b727:	(bad)  
  41b728:	fstp   TBYTE PTR [rbx+0x3a]
  41b72b:	(bad)  
  41b72c:	fnstcw WORD PTR [rax+0x38]
  41b72f:	call   rdi
  41b731:	je     0x41b767
  41b733:	call   rbx
  41b735:	outs   dx,DWORD PTR ds:[rsi]
  41b736:	(bad)  
  41b737:	dec    ebp
  41b739:	push   0x5fc2ff2a
  41b73e:	and    al,0xff
  41b740:	test   al,0x58
  41b742:	(bad)  
  41b743:	inc    DWORD PTR [rcx+0x61ff1953]
  41b749:	pop    rcx
  41b74a:	sbb    al,0xff
  41b74c:	rex.WX (bad) 
  41b74e:	and    bh,bh
  41b750:	cmp    eax,0x41ff256b
  41b755:	pop    rbx
  41b756:	xor    eax,0x5c6e64ff
  41b75b:	jmp    QWORD PTR [rdi-0x5000655e]
  41b761:	test   al,0xa2
  41b763:	push   rbp
	...
  41b788:	ja     0x41b7c3
  41b78a:	adc    eax,0x15397754
  41b78f:	call   FWORD PTR [rax-0x5b00efc2]
  41b795:	(bad)  
  41b796:	or     eax,0xd3d9bff
  41b79b:	dec    DWORD PTR [rsi+0x77ff1040]
  41b7a1:	push   rcx
  41b7a2:	sbb    eax,0x347255ff
  41b7a7:	dec    DWORD PTR [rsi-0x71]
  41b7aa:	cmp    eax,0x47a54cff
  41b7af:	dec    DWORD PTR [rdi-0x4f]
  41b7b2:	push   rax
  41b7b3:	dec    DWORD PTR [rdi-0x4e]
  41b7b6:	push   rax
  41b7b7:	call   QWORD PTR [rdx-0x48]
  41b7ba:	pop    rsp
  41b7bb:	call   QWORD PTR [rsi-0x3d]
  41b7be:	jne    0x41b7bf
  41b7c0:	rex.WRXB scas al,BYTE PTR es:[rdi]
  41b7c2:	push   rdi
  41b7c3:	dec    DWORD PTR [rbx-0x5f]
  41b7c6:	rex.RB dec DWORD PTR [r11-0x64]
  41b7ca:	dec    DWORD PTR ds:[rsi-0x62]
  41b7ce:	cmp    bh,bh
  41b7d0:	imul   ecx,DWORD PTR [rdi+0x6fa3ff34],0x32
  41b7d7:	dec    ebx
  41b7d9:	jle    0x41b81b
  41b7db:	jmp    rcx
  41b7dd:	xchg   DWORD PTR [rdi-0x1],eax
  41b7e0:	jrcxz  0x41b769
  41b7e2:	rex.RXB jmp r9
  41b7e5:	test   DWORD PTR [rbp-0x1],eax
  41b7e8:	loopne 0x41b76d
  41b7ea:	rex.XB (bad) 
  41b7ec:	fild   WORD PTR [rcx+0x7dddff40]
  41b7f2:	cmp    al,0xff
  41b7f4:	xlat   BYTE PTR ds:[rbx]
  41b7f5:	jbe    0x41b82e
  41b7f7:	dec    ebp
  41b7f9:	outs   dx,BYTE PTR ds:[rsi]
  41b7fa:	xor    edi,edi
  41b7fc:	mov    bh,0x62
  41b7fe:	(bad)  
  41b7ff:	call   QWORD PTR [rcx+0x5bff2366]
  41b805:	jns    0x41b82f
  41b807:	dec    DWORD PTR [rcx+0x79]
  41b80a:	cs (bad) 
  41b80c:	cmp    eax,0x37ff2b77
  41b811:	jno    0x41b832
  41b813:	push   QWORD PTR [rdx]
  41b815:	rex.WRB (bad) 
  41b817:	dec    DWORD PTR [rdi+0x57]
  41b81a:	dec    DWORD PTR [r15-0x70007b71]
  41b821:	pop    QWORD PTR [rbp+rdx*2+0x0]
	...
  41b848:	js     0x41b883
  41b84a:	adc    al,0x54
  41b84c:	jl     0x41b887
  41b84e:	adc    edi,edi
  41b850:	xchg   esp,eax
  41b851:	cmp    al,0xe
  41b853:	call   QWORD PTR [rsi-0x7d00edbc]
  41b859:	rex.WRXB (bad) 
  41b85b:	push   QWORD PTR [rcx+0x5d]
  41b85e:	(bad)  
  41b85f:	jmp    QWORD PTR [rax+0x71]
  41b862:	xor    bh,bh
  41b864:	rex.WRB mov WORD PTR [r9],?
  41b867:	dec    DWORD PTR [rsi-0x5f]
  41b86a:	rex.RXB dec DWORD PTR [r15-0x51]
  41b86e:	push   rcx
  41b86f:	call   QWORD PTR [rcx-0x49]
  41b872:	push   rsi
  41b873:	call   QWORD PTR [rax-0x4b]
  41b876:	push   rcx
  41b877:	call   QWORD PTR [rcx-0x4f]
  41b87a:	rex.WRX call QWORD PTR [rbx-0x56]
  41b87e:	rex.WRB jmp QWORD PTR [r8-0x66]
  41b882:	rex.X push QWORD PTR [rbp-0x71]
  41b886:	notrack call QWORD PTR [rdx-0x5800bf76]
  41b88d:	xchg   edx,eax
  41b88e:	rex.RB (bad) 
  41b890:	mov    esp,0xd1ff4891
  41b895:	mov    BYTE PTR [rcx-0x1],cl
  41b898:	fisttp WORD PTR [rsi-0x6f1900b1]
  41b89e:	push   rcx
  41b89f:	jmp    rsi
  41b8a1:	(bad)  
  41b8a2:	push   rcx
  41b8a3:	jmp    rbp
  41b8a5:	lea    ecx,[rsi-0x1]
  41b8a8:	in     al,0x8b
  41b8aa:	rex.WXB jmp r10
  41b8ad:	mov    BYTE PTR [rax-0x1],cl
  41b8b0:	fild   WORD PTR [rsp+rax*2+0x3d7ed2ff]
  41b8b7:	(bad)  
  41b8b8:	mov    esp,0x95ff3377
  41b8bd:	jne    0x41b8ea
  41b8bf:	push   QWORD PTR [rdi+rdi*2+0x33]
  41b8c3:	call   FWORD PTR [rcx-0x6c]
  41b8c6:	rex.WX call QWORD PTR [rdx-0x6e]
  41b8ca:	rex.WXB dec QWORD PTR [r8-0x76]
  41b8ce:	cmp    eax,0x227b39ff
  41b8d3:	inc    DWORD PTR [rax+0x5f]
  41b8d6:	sbb    eax,0x365f54ff
  41b8db:	push   QWORD PTR [rbp+0x7c]
  41b8de:	outs   dx,BYTE PTR ds:[rsi]
  41b8df:	call   QWORD PTR [rdi-0x4939726a]
  41b8e5:	scas   al,BYTE PTR es:[rdi]
  41b8e6:	stos   BYTE PTR es:[rdi],al
  41b8e7:	jno    0x41b8e9
	...
  41b901:	add    BYTE PTR [rax],al
  41b903:	add    BYTE PTR [rdi-0x7cc7a58f],dl
  41b909:	and    DWORD PTR [r13-0xefc782],r9d
  41b910:	mov    BYTE PTR [rdi],bh
  41b912:	adc    bh,bh
  41b914:	test   DWORD PTR [rdi+0x1f],ecx
  41b917:	push   QWORD PTR [rbx+0x68]
  41b91a:	(bad)  
  41b91b:	jmp    QWORD PTR [rdx+0x79]
  41b91e:	cmp    bh,bh
  41b920:	push   rbp
  41b921:	mov    WORD PTR [rsi],?
  41b923:	dec    DWORD PTR [rax+riz*4+0x43]
  41b927:	jmp    FWORD PTR [rsi+rbx*4+0x46]
  41b92b:	push   QWORD PTR [rax-0x5a]
  41b92e:	rex.WRX call FWORD PTR [rax-0x47]
  41b932:	pop    rbx
  41b933:	call   FWORD PTR [rbp+rbp*4+0x4c]
  41b937:	jmp    QWORD PTR [rsi-0x5f]
  41b93a:	push   QWORD PTR [rbp+r10*4+0x3b]
  41b93f:	dec    DWORD PTR [rbp-0x5700c071]
  41b945:	mov    eax,DWORD PTR [rbx-0x1]
  41b948:	enter  0x4989,0xff
  41b94c:	fcom   QWORD PTR [rcx-0x691800af]
  41b952:	push   rdi
  41b953:	(bad)  
  41b954:	(bad)  
  41b955:	cdq    
  41b956:	pop    rdx
  41b957:	(bad)  
  41b958:	(bad)  
  41b959:	cdq    
  41b95a:	pop    rdx
  41b95b:	(bad)  
  41b95c:	jmp    0xffffffffea4113f9
  41b961:	xchg   edi,eax
  41b962:	pop    rcx
  41b963:	(bad)  
  41b964:	call   0xffffffffe84110fe
  41b969:	xchg   edx,eax
  41b96a:	push   rsp
  41b96b:	jmp    rbp
  41b96d:	(bad)  
  41b96e:	rex.WRXB jmp r10
  41b971:	mov    ecx,DWORD PTR [rdi+rdi*8-0x30]
  41b975:	xchg   BYTE PTR [rdi+rdi*8-0x52],al
  41b979:	cmp    DWORD PTR [rax],0x35857cff
  41b97f:	jmp    QWORD PTR [rcx-0x6e]
  41b982:	rex.R call FWORD PTR [rbx-0x58]
  41b986:	call   QWORD PTR fs:[rdi-0x5f]
  41b98a:	pop    rdx
  41b98b:	dec    DWORD PTR [rbp-0x6a]
  41b98e:	rex.RX (bad) 
  41b990:	cmp    eax,0x47ff2686
  41b995:	outs   dx,BYTE PTR ds:[rsi]
  41b996:	sbb    eax,0x2f6553ff
  41b99b:	jmp    QWORD PTR [rax+0x6c]
  41b99e:	pop    rdx
  41b99f:	call   FWORD PTR [rax-0x4a007169]
  41b9a5:	lods   eax,DWORD PTR ds:[rsi]
  41b9a6:	test   eax,0xaa
	...
  41b9c3:	add    BYTE PTR [rdi-0x7155a58f],dl
  41b9c9:	pop    rsp
  41b9ca:	rex (bad) 
  41b9cc:	jl     0x41ba02
  41b9ce:	(bad)  
  41b9cf:	push   QWORD PTR [rbp+0x46]
  41b9d2:	sbb    edi,edi
  41b9d4:	jno    0x41ba38
  41b9d6:	xor    edi,edi
  41b9d8:	outs   dx,DWORD PTR ds:[rsi]
  41b9d9:	mov    BYTE PTR [rdi+rdi*8+0x5f],dl
  41b9dd:	xchg   esp,eax
  41b9de:	rex.W call QWORD PTR [rsi-0x5f]
  41b9e2:	rex.RXB call QWORD PTR [r10-0x4f]
  41b9e6:	push   rdx
  41b9e7:	jmp    FWORD PTR [rcx-0x4f00c479]
  41b9ed:	mov    DWORD PTR [rsi],edi
  41b9ef:	jmp    QWORD PTR [rsi-0x47]
  41b9f2:	pop    rbp
  41b9f3:	push   QWORD PTR [rbx+rbx*4+0x42]
  41b9f7:	call   QWORD PTR [rax-0x4400c777]
  41b9fd:	add    DWORD PTR [rax-0x1],0xffffffd5
  41ba01:	lea    ecx,[rdi+rdi*8-0x1b]
  41ba05:	xchg   ebp,eax
  41ba06:	push   rbp
  41ba07:	(bad)  
  41ba08:	jmp    0x41b9a4
  41ba0a:	pop    rbx
  41ba0b:	(bad)  
  41ba0c:	jmp    0x41b9aa
  41ba0e:	pop    rsi
  41ba0f:	(bad)  
  41ba10:	in     al,dx
  41ba11:	sahf   
  41ba12:	(bad)  
  41ba13:	(bad)  
  41ba14:	in     eax,dx
  41ba15:	lahf   
  41ba16:	movsxd edi,edi
  41ba18:	in     al,dx
  41ba19:	lahf   
  41ba1a:	movsxd edi,edi
  41ba1c:	jmp    0x41b9bd
  41ba1e:	(bad)  
  41ba1f:	(bad)  
  41ba20:	jmp    0x41b9c1
  41ba22:	(bad)  
  41ba23:	(bad)  
  41ba24:	(bad)  
  41ba25:	pushf  
  41ba26:	pop    rdi
  41ba27:	(bad)  
  41ba28:	jmp    0xffffffffe94116c6
  41ba2d:	xchg   edi,eax
  41ba2e:	pop    rax
  41ba2f:	jmp    rsi
  41ba31:	xchg   ecx,eax
  41ba32:	push   rsp
  41ba33:	call   rax
  41ba35:	mov    cs,WORD PTR [rbx-0x1]
  41ba38:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  41ba39:	mov    WORD PTR [rdi],?
  41ba3b:	jmp    FWORD PTR [rbp-0x6f]
  41ba3e:	rex.R call QWORD PTR [rdi-0x62]
  41ba42:	push   rsi
  41ba43:	jmp    QWORD PTR [rbx-0x4d]
  41ba46:	jne    0x41ba47
  41ba48:	pop    rax
  41ba49:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41ba4a:	pop    rbp
  41ba4b:	dec    DWORD PTR [rbp-0x66]
  41ba4e:	rex.R inc DWORD PTR [rdx-0x70]
  41ba52:	sub    bh,bh
  41ba54:	rex.RX jp 0x41ba77
  41ba57:	dec    DWORD PTR [rbx+0x6a]
  41ba5a:	sub    edi,edi
  41ba5c:	push   rax
  41ba5d:	pop    rsi
  41ba5e:	rex.WX call QWORD PTR [rcx-0x4c00786f]
  41ba65:	stos   DWORD PTR es:[rdi],eax
  41ba66:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  41ba67:	stos   BYTE PTR es:[rdi],al
	...
  41ba84:	(bad)  
  41ba85:	fs rex.WX stos BYTE PTR es:[rdi],al
  41ba88:	jle    0x41bae2
  41ba8a:	xor    bh,bh
  41ba8c:	fs rex.WXB adc rdi,r15
  41ba90:	pop    rdx
  41ba91:	(bad)  
  41ba92:	sub    bh,bh
  41ba94:	push   rsp
  41ba95:	jns    0x41bacd
  41ba97:	call   QWORD PTR [rbp-0x72]
  41ba9a:	notrack call QWORD PTR [rbp-0x5c]
  41ba9e:	push   rax
  41ba9f:	push   QWORD PTR [rcx-0x60]
  41baa2:	rex.WRX jmp FWORD PTR [rcx-0x3500c87d]
  41baa9:	jp     0x41bae0
  41baab:	dec    edi
  41baad:	cmp    BYTE PTR [rbx],0xff
  41bab0:	mov    bh,0x96
  41bab2:	rex.WX (bad) 
  41bab4:	mov    edi,0xcaff4790
  41bab9:	mov    cs,WORD PTR [rax-0x1]
  41babc:	fst    DWORD PTR [rax-0x681c00b1]
  41bac2:	push   rdi
  41bac3:	(bad)  
  41bac4:	(bad)  
  41bac5:	pushf  
  41bac6:	pop    rbp
  41bac7:	(bad)  
  41bac8:	in     eax,dx
  41bac9:	movabs al,ds:0xa5eeff66a3edff62
  41bad2:	imul   edi,edi,0xff6aa6ef
  41bad8:	out    dx,al
  41bad9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41bada:	imul   edi,edi,0xffffffee
  41badd:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41bade:	imul   edi,edi,0xffffffed
  41bae1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  41bae2:	push   0xffffffffffffffff
  41bae4:	in     al,dx
  41bae5:	movabs ds:0x9deaff64a0ebff67,eax
  41baee:	pop    rdi
  41baef:	(bad)  
  41baf0:	call   0xffffffffd241168c
  41baf5:	xchg   ebx,eax
  41baf6:	push   rdx
  41baf7:	jmp    QWORD PTR [rbp+0x6fff4390]
  41bafd:	xchg   esi,eax
  41bafe:	rex.WX call FWORD PTR [rcx-0x5d]
  41bb02:	pop    rbx
  41bb03:	jmp    QWORD PTR [rsi+rsi*4+0x77]
  41bb07:	call   QWORD PTR [rsi-0x56]
  41bb0a:	push   rsp
  41bb0b:	dec    DWORD PTR [rbx-0x61]
  41bb0e:	cmp    edi,edi
  41bb10:	rex.R xchg edi,eax
  41bb12:	sub    al,0xff
  41bb14:	xchg   BYTE PTR [rdi+r15*8],r12b
  41bb18:	rex.RB jo 0x41bb46
  41bb1b:	inc    DWORD PTR [rbx+0x57]
  41bb1e:	rex dec DWORD PTR [rbp-0x4d007c72]
  41bb25:	stos   BYTE PTR es:[rdi],al
  41bb26:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41bb27:	stos   BYTE PTR es:[rdi],al
	...
  41bb44:	adc    DWORD PTR [rax+0x30],0xffffffaa
  41bb48:	jb     0x41bba0
  41bb4a:	sub    edi,edi
  41bb4c:	push   rcx
  41bb4d:	addr32 and eax,0x367b4bff
  41bb53:	call   QWORD PTR [rbp-0x7e]
  41bb56:	cmp    bh,bh
  41bb58:	outs   dx,DWORD PTR ds:[rsi]
  41bb59:	jle    0x41bb85
  41bb5b:	(bad)  
  41bb5c:	js     0x41baf1
  41bb5e:	rex.XB call FWORD PTR [r11-0x2900bb72]
  41bb65:	outs   dx,DWORD PTR ds:[rsi]
  41bb66:	sub    al,0xff
  41bb68:	(bad)  [rdi+0x34]
  41bb6b:	(bad)  
  41bb6c:	fistp  QWORD PTR [rsi+0x3c]
  41bb6f:	jmp    rdx
  41bb71:	xchg   DWORD PTR [rbx-0x1],eax
  41bb74:	in     eax,0x8d
  41bb76:	rex.WXB (bad) 
  41bb78:	call   0xffffffffeb410f10
  41bb7d:	(bad)  
  41bb7e:	pop    rcx
  41bb7f:	(bad)  
  41bb80:	in     al,dx
  41bb81:	lahf   
  41bb82:	pop    rdi
  41bb83:	(bad)  
  41bb84:	in     eax,dx
  41bb85:	movabs ds:0xaaefff6aa7efff65,eax
  41bb8e:	outs   dx,BYTE PTR ds:[rsi]
  41bb8f:	push   rax
  41bb91:	lods   al,BYTE PTR ds:[rsi]
  41bb92:	jno    0x41bb93
  41bb94:	lock lods eax,DWORD PTR ds:[rsi]
  41bb96:	jae    0x41bb97
  41bb98:	lock scas al,BYTE PTR es:[rdi]
  41bb9a:	je     0x41bb9b
  41bb9c:	lock lods eax,DWORD PTR ds:[rsi]
  41bb9e:	jae    0x41bb9f
  41bba0:	lock lods al,BYTE PTR ds:[rsi]
  41bba2:	jb     0x41bba3
  41bba4:	out    dx,al
  41bba5:	test   eax,0xa6edff6f
  41bbaa:	imul   edi,edi,0xffffffec
  41bbad:	movabs ds:0x99d4ff629deaff67,al
  41bbb6:	pop    rax
  41bbb7:	jmp    FWORD PTR [rcx+0x71ff4a97]
  41bbbd:	(bad)  
  41bbbe:	rex.WRB call FWORD PTR [r10-0x5b]
  41bbc2:	pop    rsp
  41bbc3:	jmp    QWORD PTR [rbp-0x47]
  41bbc6:	ja     0x41bbc7
  41bbc8:	pop    rax
  41bbc9:	mov    al,0x56
  41bbcb:	dec    DWORD PTR [rsi-0x59]
  41bbce:	inc    DWORD PTR ds:[rdi-0x63]
  41bbd2:	(bad)  
  41bbd3:	inc    DWORD PTR [rbp-0x70]
  41bbd6:	sub    edi,edi
  41bbd8:	rex.X ja 0x41bc06
  41bbdb:	(bad)  
  41bbdc:	cmp    edx,DWORD PTR [rcx+0x38]
  41bbdf:	dec    DWORD PTR [rdx-0x4e007f74]
  41bbe5:	test   eax,0xaaa4
	...
  41bc02:	add    BYTE PTR [rax],al
  41bc04:	jnp    0x41bc48
  41bc06:	(bad)  
  41bc07:	stos   BYTE PTR es:[rdi],al
  41bc08:	push   0x42ff2a59
  41bc0d:	mov    BYTE PTR [rdx-0x1],al
  41bc10:	rex.W nop
  41bc12:	rex.RX push QWORD PTR [rdx+0x7f]
  41bc16:	cmp    bh,bh
  41bc18:	mov    edi,0xc9ff1856
  41bc1d:	pop    rdi
  41bc1e:	and    edi,edi
  41bc20:	shr    BYTE PTR [rdx+0x29],cl
  41bc23:	(bad)  
  41bc24:	fnstenv [rbp+0x31]
  41bc27:	(bad)  
  41bc28:	fnstsw WORD PTR [rbp+0x39]
  41bc2b:	jmp    rax
  41bc2d:	test   BYTE PTR [rcx-0x1],al
  41bc30:	in     al,0x8b
  41bc32:	rex.W jmp rdi
  41bc35:	xchg   edx,eax
  41bc36:	push   rax
  41bc37:	(bad)  
  41bc38:	(bad)  
  41bc39:	cdq    
  41bc3a:	pop    rax
  41bc3b:	(bad)  
  41bc3c:	in     al,dx
  41bc3d:	movabs al,ds:0xa9efff66a4eeff60
  41bc46:	ins    DWORD PTR es:[rdi],dx
  41bc47:	push   rcx
  41bc49:	scas   al,BYTE PTR es:[rdi]
  41bc4a:	jae    0x41bc4b
  41bc4c:	icebp  
  41bc4d:	mov    al,0x76
  41bc4f:	push   rdx
  41bc51:	mov    bl,0x79
  41bc53:	push   rdx
  41bc55:	mov    ch,0x7d
  41bc57:	push   rdx
  41bc59:	mov    ch,0x7d
  41bc5b:	push   rdx
  41bc5d:	mov    ah,0x7c
  41bc5f:	push   rdx
  41bc61:	mov    bl,0x7b
  41bc63:	push   rax
  41bc65:	scas   eax,DWORD PTR es:[rdi]
  41bc66:	ja     0x41bc67
  41bc68:	out    dx,eax
  41bc69:	lods   al,BYTE PTR ds:[rsi]
  41bc6a:	jae    0x41bc6b
  41bc6c:	out    dx,al
  41bc6d:	test   al,0x6f
  41bc6f:	(bad)  
  41bc70:	in     al,dx
  41bc71:	movabs ds:0xa0b0ff5fa0d7ff69,al
  41bc7a:	push   rbx
  41bc7b:	push   QWORD PTR [rbp-0x64]
  41bc7e:	rex.WRB call FWORD PTR [r13+riz*4+0x58]
  41bc83:	jmp    QWORD PTR [rbp-0x44]
  41bc86:	ja     0x41bc87
  41bc88:	pop    rdi
  41bc89:	mov    ecx,0xb055ff65
  41bc8e:	rex.WRX dec QWORD PTR [rcx-0x5e]
  41bc92:	xor    edi,edi
  41bc94:	rex.RB cdq 
  41bc96:	sub    eax,0x2d7d40ff
  41bc9b:	(bad)  
  41bc9c:	cmp    DWORD PTR [rbp+0x34],ecx
  41bc9f:	dec    DWORD PTR [rax-0x4e008176]
  41bca5:	test   eax,0xaaa4
	...
  41bcc2:	add    BYTE PTR [rax],al
  41bcc4:	jnp    0x41bd08
  41bcc6:	(bad)  
  41bcc7:	stos   BYTE PTR es:[rdi],al
  41bcc8:	push   0x42ff2c5a
  41bccd:	mov    WORD PTR [rdi-0x1],es
  41bcd0:	rex.WX mov WORD PTR [rdi+r15*8+0x6f],es
  41bcd5:	jp     0x41bd0c
  41bcd7:	push   QWORD PTR [rdx-0x3900e4a9]
  41bcdd:	movsxd esp,DWORD PTR [rbx]
  41bcdf:	call   rsp
  41bce1:	ins    DWORD PTR es:[rdi],dx
  41bce2:	sub    al,0xff
  41bce4:	(bad)  [rdi+0x34]
  41bce7:	(bad)  
  41bce8:	fild   WORD PTR [rax-0x781d00c4]
  41bcee:	rex.RB jmp r13
  41bcf1:	mov    cs,WORD PTR [rbp-0x1]
  41bcf4:	call   0xffffffffec41128f
  41bcf9:	popf   
  41bcfa:	pop    rbp
  41bcfb:	(bad)  
  41bcfc:	in     eax,dx
  41bcfd:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  41bcfe:	data16 (bad) 
  41bd00:	out    dx,eax
  41bd01:	test   eax,0xaef1ff6d
  41bd06:	je     0x41bd07
  41bd08:	repz mov ah,0x7b
  41bd0b:	push   rbx
  41bd0d:	mov    bh,0x80
  41bd0f:	push   rsp
  41bd11:	mov    ecx,0xbbf4ff84
  41bd16:	xchg   bh,bh
  41bd18:	hlt    
  41bd19:	mov    ebx,0xbaf4ff87
  41bd1e:	xchg   bh,bh
  41bd20:	repz mov eax,0xb5f2ff84
  41bd26:	cmp    bh,0xf0
  41bd29:	mov    cl,0x7b
  41bd2b:	(bad)  
  41bd2c:	out    dx,eax
  41bd2d:	lods   al,BYTE PTR ds:[rsi]
  41bd2e:	jne    0x41bd2f
  41bd30:	in     eax,dx
  41bd31:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41bd32:	outs   dx,DWORD PTR ds:[rsi]
  41bd33:	jmp    rbp
  41bd35:	movabs ds:0x9a8dff5c9ed5ff67,al
  41bd3e:	rex.WR jmp QWORD PTR [rcx+riz*4+0x4d]
  41bd43:	call   FWORD PTR [rcx-0x50]
  41bd46:	pop    rsi
  41bd47:	call   FWORD PTR [rsi-0x48]
  41bd4a:	call   FWORD PTR fs:[rcx-0x4b]
  41bd4e:	pop    rax
  41bd4f:	dec    DWORD PTR [rdi+riz*4+0x39]
  41bd53:	dec    DWORD PTR [rax-0x63]
  41bd56:	xor    bh,bh
  41bd58:	rex.XB xor BYTE PTR [r8],0xff
  41bd5c:	cmp    eax,0x8aff344f
  41bd61:	mov    bh,BYTE PTR [rsi-0x1]
  41bd64:	mov    cl,0xa9
  41bd66:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  41bd67:	stos   BYTE PTR es:[rdi],al
	...
  41bd84:	jge    0x41bdcc
  41bd86:	and    al,0xaa
  41bd88:	push   0x5f
  41bd8a:	xor    bh,bh
  41bd8c:	rex.XB mov cs,WORD PTR [r10-0x1]
  41bd90:	mov    rax,QWORD PTR [r10-0x1]
  41bd94:	data16 jnp 0x41bdcb
  41bd97:	call   FWORD PTR [rsp+rbx*2+0x63b9ff21]
  41bd9e:	and    eax,0x2c6dcdff
  41bda3:	call   rdi
  41bda5:	js     0x41bddd
  41bda7:	(bad)  
  41bda8:	fiadd  WORD PTR [rdx-0x741c00c1]
  41bdae:	rex.W jmp rsi
  41bdb1:	xchg   edx,eax
  41bdb2:	push   rdx
  41bdb3:	(bad)  
  41bdb4:	(bad)  
  41bdb5:	(bad)  
  41bdb6:	pop    rdx
  41bdb7:	(bad)  
  41bdb8:	in     eax,dx
  41bdb9:	movabs eax,ds:0xaef1ff6ca8efff63
  41bdc2:	je     0x41bdc3
  41bdc4:	repz mov bl,0x7c
  41bdc7:	push   rsp
  41bdc9:	mov    ecx,0xbdf5ff84
  41bdce:	mov    edi,edi
  41bdd0:	test   al,0x8e
  41bdd3:	push   rdi
  41bdd5:	ret    0xff91
  41bdd8:	test   cl,0x91
  41bddb:	push   rbp
  41bddd:	rcl    BYTE PTR [rax-0x72410a01],0xff
  41bde4:	repz mov ebx,0xb6f2ff88
  41bdea:	(bad)  
  41bdeb:	push   rax
  41bded:	mov    cl,0x7c
  41bdef:	(bad)  
  41bdf0:	out    dx,al
  41bdf1:	stos   BYTE PTR es:[rdi],al
  41bdf2:	je     0x41bdf3
  41bdf4:	in     al,dx
  41bdf5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  41bdf6:	ins    BYTE PTR es:[rdi],dx
  41bdf7:	(bad)  
  41bdf8:	jmp    0xffffffffae41229b
  41bdfd:	(bad)  
  41bdfe:	push   rcx
  41bdff:	(bad)  
  41be00:	jp     0x41bd9e
  41be02:	rex.WB call QWORD PTR [r9-0x5b]
  41be06:	rex.WR call FWORD PTR [rdx-0x4c]
  41be0a:	pop    rbp
  41be0b:	call   FWORD PTR [rbx-0x49]
  41be0e:	pop    rsp
  41be0f:	call   QWORD PTR [rdx-0x51]
  41be12:	dec    QWORD PTR [rsi-0x5f]
  41be16:	cmp    edi,edi
  41be18:	rex.W (bad) 
  41be1a:	xor    al,0xff
  41be1c:	rex.X push rdx
  41be1e:	cmp    bh,bh
  41be20:	lea    ecx,[rax+rax*4-0x5b564d01]
  41be27:	stos   BYTE PTR es:[rdi],al
	...
  41be44:	xchg   BYTE PTR [rbp+0x36],dl
  41be47:	stos   BYTE PTR es:[rdi],al
  41be48:	jo     0x41beb2
  41be4a:	cmp    al,0xff
  41be4c:	rex.RB mov cs,WORD PTR [r8-0x1]
  41be50:	lea    r8d,[rax-0x1]
  41be54:	push   rdi
  41be55:	jg     0x41be8d
  41be57:	(bad)  
  41be58:	jle    0x41bebf
  41be5a:	sub    bh,bh
  41be5c:	movabs eax,ds:0xceff2a68bcff2662
  41be65:	jbe    0x41be9d
  41be67:	(bad)  
  41be68:	fadd   QWORD PTR [rbx-0x711b00c0]
  41be6e:	rex.WX (bad) 
  41be70:	call   0xffffffffed41130b
  41be75:	popf   
  41be76:	pop    rsi
  41be77:	(bad)  
  41be78:	out    dx,eax
  41be79:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  41be7a:	addr32 push rcx
  41be7d:	lods   al,BYTE PTR ds:[rsi]
  41be7e:	jb     0x41be7f
  41be80:	repnz mov bl,0x7a
  41be83:	push   rbx
  41be85:	mov    ecx,0xbff5ff83
  41be8a:	(bad)  
  41be8b:	push   rsi
  41be8d:	ret    
  41be8e:	xchg   ebx,eax
  41be8f:	push   rdi
  41be91:	(bad)  
  41be92:	xchg   edi,eax
  41be93:	(bad)  
  41be94:	stc    
  41be95:	enter  0xff9b,0xf7
  41be99:	enter  0xff9b,0xf7
  41be9d:	(bad)  
  41be9e:	(bad)  
  41be9f:	push   rdi
  41bea1:	(bad)  
  41bea2:	xchg   esi,eax
  41bea3:	push   rbp
  41bea5:	rcl    BYTE PTR [rax-0x75440c01],0xff
  41beac:	icebp  
  41bead:	mov    dh,0x82
  41beaf:	(bad)  
  41beb0:	out    dx,eax
  41beb1:	scas   al,BYTE PTR es:[rdi]
  41beb2:	jns    0x41beb3
  41beb4:	in     eax,dx
  41beb5:	test   al,0x71
  41beb7:	(bad)  
  41beb8:	jmp    0x41be5c
  41beba:	imul   edi,edi,0xff5b9ad3
  41bec0:	sahf   
  41bec1:	cwde   
  41bec2:	rex.WRB dec QWORD PTR [r11+rbx*4+0x41]
  41bec7:	call   QWORD PTR [rbp+rbp*4+0x50]
  41becb:	call   FWORD PTR [rdx-0x49]
  41bece:	pop    rbx
  41becf:	call   FWORD PTR [rbp-0x47]
  41bed2:	(bad)  
  41bed3:	call   QWORD PTR [rsi-0x5d]
  41bed6:	rex.XB dec DWORD PTR [r15-0x7d]
  41beda:	cmp    bh,bh
  41bedc:	rex.W pop rcx
  41bede:	rex dec DWORD PTR [rdi-0x4b007c71]
  41bee5:	stos   DWORD PTR es:[rdi],eax
  41bee6:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41bee7:	stos   BYTE PTR es:[rdi],al
	...
  41bf04:	mov    DWORD PTR [rbx+0x46],esp
  41bf07:	stos   BYTE PTR es:[rdi],al
  41bf08:	jbe    0x41bf7f
  41bf0a:	rex.WR dec QWORD PTR [rbp-0x73]
  41bf0e:	inc    QWORD PTR [r15-0x70]
  41bf12:	rex dec DWORD PTR [rdi-0x72]
  41bf16:	cmp    edi,edi
  41bf18:	xchg   DWORD PTR fs:[rip+0x448484ff],edi        # 0x44c6441e
  41bf1f:	call   FWORD PTR [rbx-0x5600ba80]
  41bf25:	jp     0x41bf65
  41bf27:	push   QWORD PTR [rax+rdi*2+0x7ebfff3b]
  41bf2e:	(bad)  
  41bf2f:	dec    esp
  41bf31:	mov    cl,BYTE PTR [rbx-0x1]
  41bf34:	loopne 0x41bed1
  41bf36:	pop    rsp
  41bf37:	(bad)  
  41bf38:	in     eax,dx
  41bf39:	test   al,0x6b
  41bf3b:	push   rcx
  41bf3d:	mov    al,0x77
  41bf3f:	push   rbx
  41bf41:	mov    bh,0x82
  41bf43:	push   rsp
  41bf45:	mov    ebp,0xc3f6ff8c
  41bf4a:	xchg   esp,eax
  41bf4b:	push   rdi
  41bf4d:	(bad)  
  41bf4e:	(bad)  
  41bf4f:	(bad)  
  41bf50:	clc    
  41bf51:	retf   
  41bf52:	movabs al,ds:0xa4cdf8ffa4cdf9ff
  41bf5b:	push   rdi
  41bf5d:	retf   
  41bf5e:	movabs ds:0x98c3f5ff9fc8f7ff,eax
  41bf67:	push   rsp
  41bf69:	mov    esi,0xb8f2ff90
  41bf6e:	xchg   edi,edi
  41bf70:	lock mov cl,0x7d
  41bf73:	(bad)  
  41bf74:	in     eax,dx
  41bf75:	stos   BYTE PTR es:[rdi],al
  41bf76:	je     0x41bf77
  41bf78:	jmp    0x41bf1d
  41bf7a:	ins    BYTE PTR es:[rdi],dx
  41bf7b:	jmp    rcx
  41bf7d:	pushf  
  41bf7e:	(bad)  
  41bf7f:	(bad)  
  41bf80:	mov    ebp,0x7dff5597
  41bf85:	xchg   ebp,eax
  41bf86:	rex.WX jmp QWORD PTR [rcx-0x58]
  41bf8a:	rex.WRB call QWORD PTR [r13-0x4d]
  41bf8e:	push   rdx
  41bf8f:	call   FWORD PTR [rcx-0x49]
  41bf92:	pop    rdx
  41bf93:	call   FWORD PTR [rsi-0x61]
  41bf96:	call   FWORD PTR [rbx+r8*4+0x3d]
  41bf9b:	call   QWORD PTR [rbx+0x62]
  41bf9e:	rex.WXB call QWORD PTR [r13-0x4a00776c]
  41bfa5:	lods   al,BYTE PTR ds:[rsi]
  41bfa6:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41bfa7:	stos   BYTE PTR es:[rdi],al
	...
  41bfc4:	xchg   ecx,eax
  41bfc5:	jnp    0x41c029
  41bfc7:	stos   BYTE PTR es:[rdi],al
  41bfc8:	jle    0x41bf4c
  41bfca:	pop    rbp
  41bfcb:	call   QWORD PTR [rbx-0x75]
  41bfce:	dec    QWORD PTR [r10-0x6c]
  41bfd2:	rex.XB dec DWORD PTR [r11-0x66]
  41bfd6:	rex.RB call FWORD PTR [r9-0x62]
  41bfda:	rex.WRXB jmp FWORD PTR [r15-0x61]
  41bfde:	pop    rbp
  41bfdf:	inc    DWORD PTR [rax-0x75009f64]
  41bfe5:	xchg   esp,eax
  41bfe6:	pop    rax
  41bfe7:	call   QWORD PTR [rax-0x6400af72]
  41bfed:	lea    ecx,[rsi-0x1]
  41bff0:	stos   DWORD PTR es:[rdi],eax
  41bff1:	xchg   edx,eax
  41bff2:	push   rbx
  41bff3:	dec    eax
  41bff5:	(bad)  
  41bff6:	pop    rbx
  41bff7:	(bad)  
  41bff8:	frstor [rdi+riz*2+0x77afe9ff]
  41bfff:	push   rax
  41c001:	mov    ecx,0xc1f5ff86
  41c006:	xchg   edx,eax
  41c007:	push   rdi
  41c009:	(bad)  
  41c00a:	fwait
  41c00b:	push   rdi
  41c00d:	retf   
  41c00e:	movabs eax,ds:0xaad1faffa6cef8ff
  41c017:	(bad)  
  41c018:	stc    
  41c019:	shr    DWORD PTR [rdi+rdi*8-0x552f08],1
  41c020:	test   esp,0xc7f6ffa6
  41c026:	sahf   
  41c027:	push   rsp
  41c029:	rcl    DWORD PTR [rsi-0x73450c01],0xff
  41c030:	icebp  
  41c031:	mov    bl,0x81
  41c033:	(bad)  
  41c034:	out    dx,al
  41c035:	lods   al,BYTE PTR ds:[rsi]
  41c036:	ja     0x41c037
  41c038:	jmp    0x41bfde
  41c03a:	outs   dx,BYTE PTR ds:[rsi]
  41c03b:	(bad)  
  41c03c:	jmp    0xffffffffd64123dd
  41c041:	xchg   esi,eax
  41c042:	pop    rcx
  41c043:	jmp    FWORD PTR [rdi-0x7800b070]
  41c049:	xchg   esi,eax
  41c04a:	rex.RXB push QWORD PTR [r15-0x64]
  41c04e:	rex.RX inc DWORD PTR [rcx+0x77ff4ca1]
  41c055:	xchg   DWORD PTR [rbx],edi
  41c057:	jmp    FWORD PTR [rbp+0x76]
  41c05a:	(bad)  
  41c05b:	jmp    QWORD PTR [rsi+rbp*2+0x5a]
  41c05f:	inc    DWORD PTR [rsi-0x48398478]
  41c065:	scas   al,BYTE PTR es:[rdi]
  41c066:	test   al,0x71
	...
  41c084:	sahf   
  41c085:	xchg   ebx,eax
  41c086:	jg     0x41c032
  41c088:	xchg   BYTE PTR [rdi-0x78a80093],cl
  41c08e:	dec    QWORD PTR [r11-0x67]
  41c092:	rex.WXB dec QWORD PTR [r13-0x5c]
  41c096:	push   rbx
  41c097:	call   FWORD PTR [rbx-0x57]
  41c09a:	(bad)  
  41c09b:	jmp    QWORD PTR [rbx-0x4d]
  41c09e:	outs   dx,DWORD PTR ds:[rsi]
  41c09f:	jmp    FWORD PTR [rdx-0x44]
  41c0a2:	jp     0x41c0a3
  41c0a4:	jo     0x41c06a
  41c0a6:	cmp    edi,0x70
  41c0a9:	ret    
  41c0aa:	jg     0x41c0ab
  41c0ac:	ja     0x41c06a
  41c0ae:	js     0x41c0af
  41c0b0:	xchg   DWORD PTR [rsi-0x665d0092],ebp
  41c0b6:	pop    rcx
  41c0b7:	(bad)  
  41c0b8:	mov    ebp,0xd7ff5997
  41c0bd:	test   eax,0xb9eaff70
  41c0c2:	xchg   bh,bh
  41c0c4:	cmc    
  41c0c5:	(bad)  
  41c0c6:	xchg   esi,eax
  41c0c7:	push   rdi
  41c0c9:	leave  
  41c0ca:	lahf   
  41c0cb:	push   rdi
  41c0cd:	int    0xa5
  41c0cf:	(bad)  
  41c0d0:	clc    
  41c0d1:	shr    BYTE PTR [rdx-0x512c0501],1
  41c0d7:	(bad)  
  41c0d8:	cli    
  41c0d9:	(bad)  
  41c0da:	mov    cl,0xff
  41c0dc:	stc    
  41c0dd:	(bad)  
  41c0de:	mov    al,0xff
  41c0e0:	stc    
  41c0e1:	shr    BYTE PTR [rbx-0x5c350801],1
  41c0e7:	push   rbp
  41c0e9:	(bad)  
  41c0ea:	(bad)  
  41c0eb:	push   rbx
  41c0ed:	mov    esi,0xb6f1ff90
  41c0f2:	test   bh,bh
  41c0f4:	out    dx,eax
  41c0f5:	scas   al,BYTE PTR es:[rdi]
  41c0f6:	jns    0x41c0f7
  41c0f8:	in     eax,dx
  41c0f9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41c0fa:	outs   dx,DWORD PTR ds:[rsi]
  41c0fb:	(bad)  
  41c0fc:	jmp    0xffffffffe641269e
  41c101:	xchg   esp,eax
  41c102:	pop    rbx
  41c103:	jmp    rax
  41c105:	mov    WORD PTR [rcx-0x1],ss
  41c108:	(bad)  
  41c109:	js     0x41c14a
  41c10b:	inc    ebx
  41c10d:	jo     0x41c146
  41c10f:	(bad)  
  41c110:	fdiv   DWORD PTR [rbp+0x38]
  41c113:	jmp    QWORD PTR [rcx-0x7d00d1a5]
  41c119:	pop    rsi
  41c11a:	(bad)  
  41c11b:	(bad)  
  41c11c:	jl     0x41c19b
  41c11e:	ins    DWORD PTR es:[rdi],dx
  41c11f:	(bad)  
  41c120:	jl     0x41c19f
  41c122:	ins    DWORD PTR es:[rdi],dx
  41c123:	push   rbp
	...
  41c144:	sahf   
  41c145:	xchg   ebx,eax
  41c146:	jg     0x41c180
  41c148:	(bad)  
  41c149:	mov    gs,WORD PTR [rsi-0x73]
  41c14c:	test   QWORD PTR [r15+r15*8+0x49],rcx
  41c151:	cwde   
  41c152:	rex.WRB dec QWORD PTR [r14+riz*4+0x55]
  41c157:	call   QWORD PTR [rsi-0x4f]
  41c15a:	movsxd edi,edi
  41c15c:	pop    rdi
  41c15d:	mov    dh,0x6b
  41c15f:	jmp    QWORD PTR [rsi-0x44]
  41c162:	jae    0x41c163
  41c164:	push   0xffffffffffffffc4
  41c166:	jp     0x41c167
  41c168:	ins    DWORD PTR es:[rdi],dx
  41c169:	(bad)  
  41c16a:	jle    0x41c16b
  41c16c:	je     0x41c134
  41c16e:	cmp    edi,0xff85c37f
  41c174:	mov    WORD PTR [rcx+rax*4+0x7ab49eff],?
  41c17b:	push   QWORD PTR [rdi-0x2d008e55]
  41c181:	mov    bl,0x7d
  41c183:	jmp    rdi
  41c185:	mov    ebp,0xc7f5ff8c
  41c18a:	sahf   
  41c18b:	push   rdi
  41c18d:	retf   
  41c18e:	movabs ds:0xacd1f8ffa8cff8ff,eax
  41c197:	(bad)  
  41c198:	clc    
  41c199:	shr    BYTE PTR [rsi-0x522d0701],cl
  41c19f:	(bad)  
  41c1a0:	clc    
  41c1a1:	iret   
  41c1a2:	stos   BYTE PTR es:[rdi],al
  41c1a3:	push   rsi
  41c1a5:	retf   0xffa3
  41c1a8:	cmc    
  41c1a9:	(bad)  
  41c1aa:	fwait
  41c1ab:	push   rbx
  41c1ad:	mov    esi,0xb6f1ff92
  41c1b2:	test   edi,edi
  41c1b4:	out    dx,al
  41c1b5:	scas   al,BYTE PTR es:[rdi]
  41c1b6:	jns    0x41c1b7
  41c1b8:	in     al,dx
  41c1b9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  41c1ba:	outs   dx,BYTE PTR ds:[rsi]
  41c1bb:	(bad)  
  41c1bc:	jmp    0xffffffffe341265e
  41c1c1:	xchg   esp,eax
  41c1c2:	pop    rcx
  41c1c3:	call   rdi
  41c1c5:	mov    ecx,DWORD PTR [rsi-0x1]
  41c1c8:	movabs ds:0xbeff3a7f9aff458b,al
  41c1d1:	addr32 (bad) 
  41c1d3:	dec    DWORD PTR [rbp-0x7d00cc9d]
  41c1d9:	jae    0x41c22d
  41c1db:	call   FWORD PTR [rax+rbx*4-0x79790073]
  41c1e2:	ja     0x41c239
	...
  41c208:	test   QWORD PTR [r8+0x54],rdx
  41c20c:	push   rcx
  41c20d:	xchg   BYTE PTR [rbp-0x1],dl
  41c210:	push   rax
  41c211:	xchg   esp,eax
  41c212:	push   rcx
  41c213:	call   QWORD PTR [rax-0x5c]
  41c216:	push   rbp
  41c217:	call   QWORD PTR [rbx-0x4a]
  41c21a:	call   FWORD PTR fs:[rsp+rdi*4+0x6d]
  41c21f:	jmp    QWORD PTR [rdx-0x3e]
  41c222:	jne    0x41c223
  41c224:	leavew 
  41c226:	jnp    0x41c227
  41c228:	push   0xffffffffffffffcc
  41c22a:	(bad)  
  41c22b:	push   QWORD PTR [rax-0x31]
  41c22e:	mov    bh,bh
  41c230:	jbe    0x41c203
  41c232:	(bad)  
  41c233:	(bad)  
  41c234:	jg     0x41c206
  41c236:	xchg   esi,eax
  41c237:	dec    DWORD PTR [rsi+rax*8-0x4d610072]
  41c23e:	js     0x41c23f
  41c240:	mov    eax,0xcfff79b2
  41c245:	mov    ch,0x80
  41c247:	jmp    rsp
  41c249:	mov    ebp,0xc3e9ff8e
  41c24e:	xchg   edi,eax
  41c24f:	(bad)  
  41c250:	out    dx,eax
  41c251:	enter  0xff9f,0xf5
  41c255:	(bad)  
  41c256:	test   al,0xff
  41c258:	test   bh,0xaa
  41c25b:	push   rdi
  41c25d:	iret   
  41c25e:	stos   BYTE PTR es:[rdi],al
  41c25f:	push   rdi
  41c261:	int    0xa8
  41c263:	push   rsi
  41c265:	leave  
  41c266:	movabs ds:0x92bdf3ff9bc3f4ff,al
  41c26f:	push   rax
  41c271:	mov    ch,0x85
  41c273:	(bad)  
  41c274:	out    dx,al
  41c275:	lods   eax,DWORD PTR ds:[rsi]
  41c276:	jns    0x41c277
  41c278:	jmp    0x41c21e
  41c27a:	ins    DWORD PTR es:[rdi],dx
  41c27b:	(bad)  
  41c27c:	call   0xffffffffe041251d
  41c281:	xchg   esp,eax
  41c282:	pop    rax
  41c283:	call   rcx
  41c285:	lea    ecx,[rsi-0x1]
  41c288:	mov    DWORD PTR [rbp-0x6b8700b4],ebx
  41c28e:	rex.R call FWORD PTR [rbx+rsi*2+0x7381ff35]
  41c296:	rex.RB inc DWORD PTR [r8-0x521da283]
  41c29d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41c29e:	sahf   
  41c29f:	stos   BYTE PTR es:[rdi],al
  41c2a0:	lods   eax,DWORD PTR ds:[rsi]
  41c2a1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41c2a2:	sahf   
  41c2a3:	cmp    BYTE PTR [rax],al
	...
  41c2c5:	add    BYTE PTR [rax],al
  41c2c7:	add    BYTE PTR [rcx+rcx*4+0x66],ch
  41c2cb:	push   rsp
  41c2cc:	ins    BYTE PTR es:[rdi],dx
  41c2cd:	mov    DWORD PTR [rsi-0x1],esp
  41c2d0:	(bad)  
  41c2d1:	mov    ss,WORD PTR [rsi-0x1]
  41c2d4:	pop    rax
  41c2d5:	sahf   
  41c2d6:	push   rbp
  41c2d7:	call   QWORD PTR [rdx-0x48]
  41c2da:	call   FWORD PTR gs:[rax-0x3b]
  41c2de:	je     0x41c2df
  41c2e0:	pop    rsi
  41c2e1:	(bad)  
  41c2e2:	jg     0x41c2e3
  41c2e4:	movsxd edx,ebx
  41c2e6:	xchg   edi,edi
  41c2e8:	data16 (bad) 
  41c2ea:	mov    edi,edi
  41c2ec:	imul   edx,edi,0xd66cff8d
  41c2f2:	(bad)  
  41c2f3:	(bad)  
  41c2f4:	jge    0x41c2cb
  41c2f6:	cwde   
  41c2f7:	dec    DWORD PTR [rax-0x73006933]
  41c2fd:	mov    esi,0xb49bff86
  41c302:	jp     0x41c303
  41c304:	lods   eax,DWORD PTR ds:[rsi]
  41c305:	scas   al,BYTE PTR es:[rdi]
  41c306:	jae    0x41c307
  41c308:	ret    0x70ab
  41c30b:	dec    edi
  41c30d:	mov    bl,0x7e
  41c30f:	(bad)  
  41c310:	fidivr WORD PTR [rsi+rcx*4-0x5e371001]
  41c317:	push   rbx
  41c319:	retf   0xffa5
  41c31c:	test   bl,0xa6
  41c31f:	push   rsi
  41c321:	retf   0xffa4
  41c324:	cmc    
  41c325:	(bad)  
  41c326:	movabs al,ds:0x91bcf2ff99c2f4ff
  41c32f:	push   rax
  41c331:	mov    ah,0x83
  41c333:	(bad)  
  41c334:	in     eax,dx
  41c335:	lods   al,BYTE PTR ds:[rsi]
  41c336:	ja     0x41c337
  41c338:	jmp    0x41c2de
  41c33a:	imul   edi,edi,0xffffffe7
  41c33d:	(bad)  
  41c33e:	(bad)  
  41c33f:	(bad)  
  41c340:	fst    QWORD PTR [rbx-0x6e3200a9]
  41c346:	push   rax
  41c347:	(bad)  
  41c348:	jnp    0x41c2f8
  41c34a:	push   rbp
  41c34b:	call   FWORD PTR [rax+rsi*4+0x53]
  41c34f:	push   QWORD PTR [rbx-0x68]
  41c352:	rex.WXB (bad) 
  41c354:	jle    0x41c2e0
  41c356:	inc    DWORD PTR fs:[rsp+rax*4+0xaa72]
	...
  41c386:	add    BYTE PTR [rax],al
  41c388:	jnp    0x41c31b
  41c38a:	jae    0x41c3e0
  41c38c:	fwait
  41c38d:	movabs ds:0x9555ff62906bff8d,al
  41c396:	push   rsp
  41c397:	call   FWORD PTR [rdx-0x4e]
  41c39a:	call   FWORD PTR gs:[rbx-0x3e]
  41c39e:	je     0x41c39f
  41c3a0:	pop    rbp
  41c3a1:	int    0x7f
  41c3a3:	jmp    QWORD PTR [rax-0x2e]
  41c3a6:	cmp    edi,0x63
  41c3a9:	(bad)  
  41c3aa:	xchg   edi,edi
  41c3ac:	push   0xffffffffffffffd5
  41c3ae:	mov    bh,bh
  41c3b0:	je     0x41c386
  41c3b2:	mov    edi,?
  41c3b4:	jl     0x41c38e
  41c3b6:	xchg   edi,eax
  41c3b7:	(bad)  
  41c3b8:	jg     0x41c38f
  41c3ba:	cwde   
  41c3bb:	(bad)  
  41c3bc:	jge    0x41c389
  41c3be:	(bad)  
  41c3bf:	inc    DWORD PTR [rax+rax*8-0x4671007e]
  41c3c6:	jnp    0x41c3c7
  41c3c8:	(bad)  
  41c3c9:	mov    ch,0x7b
  41c3cb:	jmp    FWORD PTR [rdx-0x4400834b]
  41c3d1:	mov    ch,0x7f
  41c3d3:	dec    ebp
  41c3d5:	mov    bh,0x83
  41c3d7:	jmp    rbp
  41c3d9:	rcl    DWORD PTR [rbp-0x60390d01],0xff
  41c3e0:	hlt    
  41c3e1:	(bad)  
  41c3e2:	lahf   
  41c3e3:	push   rsp
  41c3e5:	ret    0xff9a
  41c3e8:	repnz mov esi,0xb8f0ff94
  41c3ee:	mov    edi,edi
  41c3f0:	out    dx,al
  41c3f1:	mov    al,0x7f
  41c3f3:	(bad)  
  41c3f4:	in     al,dx
  41c3f5:	test   al,0x73
  41c3f7:	(bad)  
  41c3f8:	jmp    0xffffffffe7412b9d
  41c3fd:	xchg   edi,eax
  41c3fe:	pop    rbp
  41c3ff:	jmp    rax
  41c401:	(bad)  
  41c402:	push   rbx
  41c403:	(bad)  
  41c404:	fmul   DWORD PTR [rcx-0x577800b4]
  41c40a:	push   rbp
  41c40b:	jmp    FWORD PTR [rdx-0x59]
  41c40e:	push   rsi
  41c40f:	inc    DWORD PTR [rax+0x7bff4e88]
  41c415:	mov    ss,WORD PTR [rbp+rcx*4-0x7c]
  41c419:	test   BYTE PTR [rdx+0x38],dh
	...
  41c448:	mov    ah,0xb0
  41c44a:	movabs ds:0x72967baaa2b0b438,al
  41c453:	loop   0x41c4b4
  41c455:	xchg   edx,eax
  41c456:	pop    rsp
  41c457:	call   FWORD PTR [rdi-0x5c]
  41c45a:	pop    rsi
  41c45b:	call   FWORD PTR [rsp+rdi*4+0x71]
  41c45f:	call   FWORD PTR [rbx+rcx*8+0x7d]
  41c463:	call   FWORD PTR [rsi-0x2f]
  41c466:	(bad)  
  41c467:	jmp    QWORD PTR [rbx-0x2d]
  41c46a:	xchg   edi,edi
  41c46c:	ins    DWORD PTR es:[rdi],dx
  41c46d:	(bad)  
  41c46e:	mov    edi,edi
  41c470:	jl     0x41c444
  41c472:	(bad)  
  41c473:	(bad)  
  41c474:	jle    0x41c44b
  41c476:	xchg   edx,eax
  41c477:	(bad)  
  41c478:	jl     0x41c450
  41c47a:	xchg   esi,eax
  41c47b:	(bad)  
  41c47c:	jns    0x41c454
  41c47e:	cwde   
  41c47f:	inc    DWORD PTR [rax-0x79006c32]
  41c485:	leave  
  41c486:	nop
  41c487:	dec    DWORD PTR [rsi+rax*8-0x3e69006f]
  41c48e:	mov    edi,edi
  41c490:	movabs ds:0xd7ff7ab6aeff84bc,al
  41c499:	mov    esi,0xc1eeff8e
  41c49e:	xchg   edi,eax
  41c49f:	push   rcx
  41c4a1:	rcl    DWORD PTR [rdi-0x6c410d01],0xff
  41c4a8:	icebp  
  41c4a9:	mov    edx,0xb4eeff8d
  41c4ae:	test   bh,bh
  41c4b0:	in     eax,dx
  41c4b1:	lods   al,BYTE PTR ds:[rsi]
  41c4b2:	js     0x41c4b3
  41c4b4:	jmp    0x41c45a
  41c4b6:	ins    DWORD PTR es:[rdi],dx
  41c4b7:	(bad)  
  41c4b8:	call   0xffffffffe5412859
  41c4bd:	xchg   ebx,eax
  41c4be:	pop    rcx
  41c4bf:	jmp    rcx
  41c4c1:	mov    ecx,DWORD PTR [rdi-0x1]
  41c4c4:	fld    QWORD PTR [rbx-0x6b6300b9]
  41c4ca:	push   rax
  41c4cb:	inc    DWORD PTR [rsi+rdx*4-0x766a00a6]
  41c4d2:	dec    DWORD PTR fs:[rbx+rax*4+0x5556]
	...
  41c50e:	add    BYTE PTR [rax],al
  41c510:	adc    DWORD PTR [rbp-0x6c885687],0x6c
  41c517:	call   FWORD PTR [rdi-0x71]
  41c51a:	push   rdx
  41c51b:	call   FWORD PTR [rdx+rsi*4+0x6a]
  41c51f:	call   FWORD PTR [rax+rcx*8+0x7a]
  41c523:	call   FWORD PTR [rsi-0x2f]
  41c526:	(bad)  
  41c527:	jmp    QWORD PTR [rdi-0x2d]
  41c52a:	mov    edi,edi
  41c52c:	jne    0x41c501
  41c52e:	mov    ?,edi
  41c530:	test   edi,ecx
  41c532:	xchg   ecx,eax
  41c533:	inc    DWORD PTR [rbx-0x7e007635]
  41c539:	ror    BYTE PTR [rsi-0x5e227f01],1
  41c53f:	dec    DWORD PTR [rsi-0x69005321]
  41c545:	fbstp  TBYTE PTR [rdx-0x4d206701]
  41c54b:	call   QWORD PTR [rbp-0x6c005428]
  41c551:	rcr    BYTE PTR [rbp-0x78386e01],1
  41c557:	dec    edx
  41c559:	ror    DWORD PTR [rbp-0x70421601],0xff
  41c560:	in     eax,dx
  41c561:	mov    ebx,0xb9efff8c
  41c566:	mov    bh,bh
  41c568:	out    dx,eax
  41c569:	mov    dh,0x84
  41c56b:	(bad)  
  41c56c:	in     al,dx
  41c56d:	mov    al,0x7c
  41c56f:	(bad)  
  41c570:	jmp    0x41c51a
  41c572:	jno    0x41c573
  41c574:	jmp    0xffffffffe8412d19
  41c579:	cwde   
  41c57a:	pop    rbp
  41c57b:	jmp    rbx
  41c57d:	nop
  41c57e:	push   rsp
  41c57f:	(bad)  
  41c580:	fild   WORD PTR [rdi+0x7edbff4b]
  41c586:	rex.X (bad) 
  41c588:	mov    ecx,0xabff4774
  41c58d:	jge    0x41c5f0
  41c58f:	push   QWORD PTR [rcx-0x4e007164]
  41c595:	pushf  
  41c596:	mov    ss,WORD PTR [rbp+0x0]
	...
  41c5cd:	add    BYTE PTR [rax],al
  41c5cf:	add    BYTE PTR [rbx+0x7a387995],al
  41c5d5:	xchg   edx,eax
  41c5d6:	jno    0x41c565
  41c5d8:	push   0x63ff618d
  41c5dd:	lahf   
  41c5de:	movsxd edi,edi
  41c5e0:	(bad)  
  41c5e1:	mov    bl,0x6b
  41c5e3:	call   FWORD PTR [rsi-0x37]
  41c5e6:	jp     0x41c5e7
  41c5e8:	(bad)  
  41c5e9:	retf   
  41c5ea:	jg     0x41c5eb
  41c5ec:	outs   dx,DWORD PTR ds:[rsi]
  41c5ed:	(bad)  
  41c5f0:	test   DWORD PTR [rax-0x47740088],edi
  41c5f6:	jbe    0x41c5f7
  41c5f8:	xchg   ebx,eax
  41c5f9:	mov    ch,0x72
  41c5fb:	call   FWORD PTR [rbp-0x50009150]
  41c601:	mov    bh,0x7b
  41c603:	push   QWORD PTR [rbx-0x5600723d]
  41c609:	shl    DWORD PTR [rbx-0x61324b01],cl
  41c60f:	(bad)  
  41c610:	mov    edx,0xbdff94c6
  41c615:	mov    esi,0xafc7ff83
  41c61a:	je     0x41c61b
  41c61c:	int3   
  41c61d:	test   al,0x6c
  41c61f:	dec    ebx
  41c621:	test   eax,0xafdeff6b
  41c626:	jne    0x41c627
  41c628:	jmp    0xffffffffec413edc
  41c62d:	stos   BYTE PTR es:[rdi],al
  41c62e:	jb     0x41c62f
  41c630:	jmp    0xffffffffe8412ed6
  41c635:	cdq    
  41c636:	pop    rdi
  41c637:	jmp    rsp
  41c639:	xchg   ecx,eax
  41c63a:	push   rsi
  41c63b:	jmp    rax
  41c63d:	mov    DWORD PTR [rsi-0x1],ecx
  41c640:	rol    DWORD PTR [rax+0x76bdff49],cl
  41c646:	rex.WB push QWORD PTR [r9-0x55009e81]
  41c64d:	(bad)  
  41c64e:	imul   eax,esi,0x558e9cb1
  41c654:	mov    cl,0x9c
  41c656:	mov    ds,WORD PTR [rax+rax*1]
	...
  41c691:	add    BYTE PTR [rax],al
  41c693:	add    BYTE PTR [rsi-0x74],ch
  41c696:	push   0x38
  41c698:	outs   dx,BYTE PTR ds:[rsi]
  41c699:	mov    WORD PTR [rdx-0x56],gs
  41c69c:	imul   edx,DWORD PTR [rdx-0x5f981d9d],0x64
  41c6a3:	jmp    QWORD PTR [rcx-0x4a]
  41c6a6:	ins    DWORD PTR es:[rdi],dx
  41c6a7:	jmp    QWORD PTR [rbx-0x44]
  41c6aa:	jb     0x41c6ab
  41c6ac:	imul   edi,DWORD PTR [rdx-0x4f86008f],0x6b
  41c6b3:	dec    DWORD PTR [rax-0x6c009755]
  41c6b9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41c6ba:	(bad)  
  41c6bb:	call   FWORD PTR [rbx-0x5100a661]
  41c6c1:	movabs ds:0xbcb5ff6fadb7ff61,eax
  41c6ca:	test   edi,edi
  41c6cc:	(bad)
  41c6cf:	dec    esp
  41c6d1:	mov    dh,0x7d
  41c6d3:	inc    edi
  41c6d5:	scas   eax,DWORD PTR es:[rdi]
  41c6d6:	jno    0x41c6d7
  41c6d8:	scas   eax,DWORD PTR es:[rdi]
  41c6d9:	stos   BYTE PTR es:[rdi],al
  41c6da:	(bad)  
  41c6db:	jmp    QWORD PTR [rdx-0x5e00a657]
  41c6e1:	stos   DWORD PTR es:[rdi],eax
  41c6e2:	pop    rbx
  41c6e3:	inc    edi
  41c6e5:	scas   al,BYTE PTR es:[rdi]
  41c6e6:	imul   edi,edi,0xffffffdf
  41c6e9:	stos   DWORD PTR es:[rdi],eax
  41c6ea:	outs   dx,DWORD PTR ds:[rsi]
  41c6eb:	(bad)  
  41c6ec:	(bad)  
  41c6ed:	movabs ds:0x92e3ff5f9ae7ff68,eax
  41c6f6:	pop    rax
  41c6f7:	(bad)  
  41c6f8:	fisttp QWORD PTR [rdx-0x7d2d00af]
  41c6fe:	rex.WRB inc r10
  41c701:	jge    0x41c754
  41c703:	jmp    FWORD PTR [rsi-0x5200a184]
  41c709:	sub    DWORD PTR [rax-0x3a],0xffffffac
  41c70d:	nop
  41c70e:	jg     0x41c781
	...
  41c75c:	jbe    0x41c6ea
  41c75e:	ins    BYTE PTR es:[rdi],dx
  41c75f:	test   eax,0xff668f70
  41c764:	xchg   di,ax
  41c766:	pop    rdx
  41c767:	jmp    FWORD PTR [rcx-0x5a]
  41c76a:	(bad)  
  41c76b:	jmp    FWORD PTR [rax-0x4f]
  41c76e:	jmp    QWORD PTR [ebx-0x49]
  41c772:	imul   edi,edi,0x78
  41c775:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  41c776:	pop    rdi
  41c777:	(bad)  
  41c778:	jg     0x41c71c
  41c77a:	pop    rsp
  41c77b:	push   QWORD PTR [rdi-0x57]
  41c77e:	movsxd edi,edi
  41c780:	mov    WORD PTR [rcx-0x625d00a3],fs
  41c786:	pop    rcx
  41c787:	(bad)  
  41c788:	mov    edx,0xcaff579b
  41c78d:	lahf   
  41c78e:	pop    rbx
  41c78f:	inc    edi
  41c791:	lahf   
  41c792:	pop    rax
  41c793:	jmp    FWORD PTR [rdi+0x7fff4f9b]
  41c799:	mov    ah,0x51
  41c79b:	jmp    FWORD PTR [rdx-0x3f]
  41c79e:	push   rsi
  41c79f:	push   QWORD PTR [rcx-0x3f]
  41c7a2:	pop    rbp
  41c7a3:	jmp    FWORD PTR [rdx-0x2d009549]
  41c7a9:	stos   DWORD PTR es:[rdi],eax
  41c7aa:	imul   edi,edi,0xffffffe8
  41c7ad:	fwait
  41c7ae:	pop    rbp
  41c7af:	jmp    rbp
  41c7b1:	xchg   ebx,eax
  41c7b2:	push   rsi
  41c7b3:	(bad)  
  41c7b4:	fimul  WORD PTR [rbx-0x7c2c00af]
  41c7ba:	rex.WRX (bad) 
  41c7bc:	mov    eax,0xacff5179
  41c7c1:	jle    0x41c825
  41c7c3:	jmp    FWORD PTR [rsi-0x51007e6d]
  41c7c9:	xchg   ebx,eax
  41c7ca:	adc    DWORD PTR [rbp+0x0],0x0
	...
  41c819:	add    BYTE PTR [rax],al
  41c81b:	add    BYTE PTR [rsi-0x74],dh
  41c81e:	ins    BYTE PTR es:[rdi],dx
  41c81f:	cmp    BYTE PTR [rdx-0x70],bh
  41c822:	outs   dx,BYTE PTR ds:[rsi]
  41c823:	lea    eax,[rdx+0x6cff7399]
  41c829:	(bad)  
  41c82a:	jmp    QWORD PTR gs:[rsi-0x61]
  41c82e:	pop    rdi
  41c82f:	push   QWORD PTR [rax-0x57]
  41c832:	movsxd edi,edi
  41c834:	jno    0x41c7e3
  41c836:	jmp    DWORD PTR [rdi-0x4f]
  41c83a:	push   0x68b469ff
  41c83f:	push   QWORD PTR [rbp-0x51]
  41c842:	(bad)  
  41c843:	inc    DWORD PTR [rbx-0x6d00a257]
  41c849:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  41c84a:	pop    rax
  41c84b:	jmp    QWORD PTR [rcx-0x6300a85f]
  41c851:	stos   BYTE PTR es:[rdi],al
  41c852:	pop    rbp
  41c853:	inc    DWORD PTR [rcx+0x74ff6bbe]
  41c859:	retf   0xff76
  41c85c:	add    bh,0x75
  41c85f:	jmp    QWORD PTR [rbp-0x37009749]
  41c865:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  41c866:	movsxd edi,edi
  41c868:	fcomp  QWORD PTR [rdx-0x6f1e00a5]
  41c86e:	push   rbx
  41c86f:	call   rax
  41c871:	xchg   DWORD PTR [rbx-0x1],edx
  41c874:	sar    BYTE PTR [rdi+0x53],0xff
  41c878:	mov    dl,0x79
  41c87a:	push   rbx
  41c87b:	push   QWORD PTR [rbx-0x4e008e76]
  41c881:	mov    WORD PTR [rbp-0x3a],?
  41c884:	scas   al,BYTE PTR es:[rdi]
  41c885:	xchg   ebx,eax
  41c886:	adc    DWORD PTR [rbp-0x52],0x1c8193
	...
  41c8dd:	add    BYTE PTR [rax],al
  41c8df:	add    BYTE PTR [rcx-0x6ec77e66],dl
  41c8e5:	(bad)  
  41c8e6:	sub    DWORD PTR [rdx-0x558f6987],0xc65e9466
  41c8f0:	jnp    0x41c88e
  41c8f2:	push   QWORD PTR gs:[rcx-0x5e]
  41c8f6:	jmp    FWORD PTR fs:[rax+rbp*4+0x64]
  41c8fb:	jmp    FWORD PTR [rsi+rbp*4+0x65]
  41c8ff:	push   QWORD PTR [rdi-0x59]
  41c902:	pop    rsp
  41c903:	(bad)  
  41c904:	jp     0x41c8ac
  41c906:	pop    rdx
  41c907:	push   QWORD PTR [rbx-0x54]
  41c90a:	pop    rsp
  41c90b:	call   QWORD PTR [rdx-0x6400a85d]
  41c911:	test   al,0x5c
  41c913:	dec    DWORD PTR [rsp+rdi*4-0x3c770095]
  41c91a:	jp     0x41c91b
  41c91c:	cdq    
  41c91d:	mov    edx,0xa2c0ff79
  41c922:	dec    sp
  41c925:	xchg   ebx,eax
  41c926:	pop    rsp
  41c927:	dec    edi
  41c929:	mov    DWORD PTR [rbp-0x1],edx
  41c92c:	retf   0x5184
  41c92f:	(bad)  
  41c930:	mov    ebp,0xb2ff5e85
  41c935:	and    BYTE PTR [rax-0x1e],0xa2
  41c939:	je     0x41c992
  41c93b:	stos   BYTE PTR es:[rdi],al
  41c93c:	lods   al,BYTE PTR ds:[rsi]
  41c93d:	mov    BYTE PTR [rdx-0x56],dh
  41c940:	mov    ecx,0x7196a3
	...
  41c9a9:	add    BYTE PTR [rax],al
  41c9ab:	add    BYTE PTR [rbp-0x7aab8b6f],al
  41c9b1:	xchg   ecx,eax
  41c9b2:	je     0x41c9b3
  41c9b4:	ja     0x41c93b
  41c9b6:	pop    rdx
  41c9b7:	push   QWORD PTR [rsi-0x79]
  41c9ba:	push   rax
  41c9bb:	inc    DWORD PTR [rdx-0x6b00a76a]
  41c9c1:	mov    cl,BYTE PTR [rdx-0x1]
  41c9c4:	mov    BYTE PTR [rbx-0x4ba100b2],dl
  41c9ca:	call   FWORD PTR gs:[rbp-0x3b00a55c]
  41c9d1:	cdq    
  41c9d2:	push   rbx
  41c9d3:	call   rdx
  41c9d5:	xchg   ebx,eax
  41c9d6:	rex.WRXB (bad) 
  41c9d8:	mov    ebx,0xb5ff5ea0
  41c9dd:	(bad)  
  41c9de:	(bad)  
  41c9df:	inc    ecx
  41c9e1:	(bad)  
  41c9e2:	push   rbp
  41c9e3:	push   QWORD PTR [rdi-0x5200a883]
  41c9e9:	jns    0x41ca43
  41c9eb:	jmp    QWORD PTR [rbx-0x5200a78a]
  41c9f1:	lea    esi,[rdi-0x1]
  41c9f4:	mov    bl,0x99
  41c9f6:	mov    BYTE PTR [rdx+0x0],ch
	...
  41ca6c:	test   DWORD PTR [rcx-0x6e7ae38c],edx
  41ca72:	je     0x41cac9
  41ca74:	or     BYTE PTR [rbp-0x747baa95],0x5f
  41ca7b:	lea    ebp,[rdx-0x55007a5d]
  41ca81:	xchg   ebp,eax
  41ca82:	je     0x41ca83
  41ca84:	movabs eax,ds:0xa0ff67928dff6a8f
  41ca8d:	xchg   DWORD PTR [rdi+rdi*8-0x54],ebx
  41ca91:	(bad)  
  41ca92:	push   rdi
  41ca93:	push   QWORD PTR [rdx-0x5200a87f]
  41ca99:	mov    esp,DWORD PTR [rdi+rdi*8-0x51]
  41ca9d:	nop
  41ca9e:	outs   dx,BYTE PTR ds:[rsi]
  41ca9f:	(bad)  
  41caa0:	mov    eax,0xbbff7590
  41caa5:	(bad)  
  41caa6:	test   bh,bh
  41caa8:	mov    bh,0x92
  41caaa:	jnp    0x41ca72
  41caac:	movabs ds:0xb355627da6555876,eax
  41cab5:	cdq    
  41cab6:	mov    BYTE PTR [rax],bh
	...
  41cb38:	mov    edi,0xbf389daa
  41cb3d:	stos   BYTE PTR es:[rdi],al
  41cb3e:	popf   
  41cb3f:	stos   BYTE PTR es:[rdi],al
  41cb40:	mov    ecx,0xafaa90a0
  41cb45:	(bad)  
  41cb46:	jp     0x41caf2
  41cb48:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41cb49:	sub    DWORD PTR [rax-0x56],0xaa617ca3
  41cb50:	movabs al,ds:0xa5aa5c78a2aa5976
  41cb59:	jge    0x41cbbe
  41cb5b:	stos   BYTE PTR es:[rdi],al
  41cb5c:	stos   DWORD PTR es:[rdi],eax
  41cb5d:	mov    DWORD PTR [rcx-0x56],esi
  41cb60:	mov    ah,0x98
  41cb62:	xchg   BYTE PTR [rdx-0x556b5c46],ch
  41cb68:	ret    
  41cb69:	mov    dl,0xa6
  41cb6b:	jno    0x41cb6d
	...
  41cdfd:	add    BYTE PTR [rax],al
  41cdff:	add    bh,bh
  41ce01:	cld    
  41ce02:	add    BYTE PTR [rsi],al
  41ce04:	add    BYTE PTR [rdi],al
  41ce06:	add    BYTE PTR [rax],al
  41ce08:	(bad)  
  41ce09:	clc    
  41ce0a:	add    BYTE PTR [rax],al
  41ce0c:	add    BYTE PTR [rcx],al
  41ce0e:	add    BYTE PTR [rax],al
  41ce10:	(bad)  
  41ce11:	clc    
  41ce12:	add    BYTE PTR [rax],al
  41ce14:	add    BYTE PTR [rcx],al
  41ce16:	add    BYTE PTR [rax],al
  41ce18:	(bad)  
  41ce19:	clc    
  41ce1a:	add    BYTE PTR [rax],al
  41ce1c:	add    BYTE PTR [rcx],al
  41ce1e:	add    BYTE PTR [rax],al
  41ce20:	(bad)  
  41ce21:	clc    
  41ce22:	add    BYTE PTR [rax],al
  41ce24:	add    BYTE PTR [rcx],al
  41ce26:	add    BYTE PTR [rax],al
  41ce28:	(bad)  
  41ce29:	clc    
  41ce2a:	add    BYTE PTR [rax],al
  41ce2c:	add    BYTE PTR [rcx],al
  41ce2e:	add    BYTE PTR [rax],al
  41ce30:	(bad)  
  41ce31:	clc    
  41ce32:	add    BYTE PTR [rax],al
  41ce34:	add    BYTE PTR [rcx],al
  41ce36:	add    BYTE PTR [rax],al
  41ce38:	jmp    rax
  41ce3a:	add    BYTE PTR [rax],al
  41ce3c:	add    BYTE PTR [rcx],al
  41ce3e:	add    BYTE PTR [rax],al
  41ce40:	inc    eax
  41ce42:	add    BYTE PTR [rax],al
  41ce44:	add    BYTE PTR [rcx],al
  41ce46:	add    BYTE PTR [rax],al
  41ce48:	inc    eax
  41ce4a:	add    BYTE PTR [rax],al
  41ce4c:	add    BYTE PTR [rcx],al
  41ce4e:	add    BYTE PTR [rax],al
  41ce50:	inc    DWORD PTR [rax]
  41ce52:	add    BYTE PTR [rax],al
  41ce54:	add    BYTE PTR [rcx],al
  41ce56:	add    BYTE PTR [rax],al
  41ce58:	inc    BYTE PTR [rax]
  41ce5a:	add    BYTE PTR [rax],al
  41ce5c:	add    BYTE PTR [rdi],al
  41ce5e:	add    BYTE PTR [rax],al
  41ce60:	inc    BYTE PTR [rax]
  41ce62:	add    BYTE PTR [rax],al
  41ce64:	ud0    eax,DWORD PTR [rax]
  41ce67:	add    al,bh
  41ce69:	add    BYTE PTR [rax],al
  41ce6b:	add    BYTE PTR [rbx],al
  41ce6d:	inc    DWORD PTR [rax]
  41ce6f:	add    al,dh
  41ce71:	add    BYTE PTR [rax],al
  41ce73:	add    BYTE PTR [rcx],al
  41ce75:	inc    DWORD PTR [rax]
  41ce77:	add    al,dh
  41ce79:	add    BYTE PTR [rax],al
  41ce7b:	add    BYTE PTR [rcx],al
  41ce7d:	inc    DWORD PTR [rax]
  41ce7f:	add    al,al
  41ce81:	add    BYTE PTR [rax],al
  41ce83:	add    BYTE PTR [rax],al
  41ce85:	jg     0x41ce87
  41ce87:	add    al,al
  41ce89:	add    BYTE PTR [rax],al
  41ce8b:	add    BYTE PTR [rax],al
  41ce8d:	jg     0x41ce8f
  41ce8f:	add    al,al
  41ce91:	add    BYTE PTR [rax],al
  41ce93:	add    BYTE PTR [rax],al
  41ce95:	jg     0x41ce97
  41ce97:	add    al,al
  41ce99:	add    BYTE PTR [rax],al
  41ce9b:	add    BYTE PTR [rax],al
  41ce9d:	(bad)  
  41ce9e:	add    BYTE PTR [rax],al
  41cea0:	add    BYTE PTR [rax],0x0
  41cea3:	add    BYTE PTR [rax],al
  41cea5:	(bad)  
  41cea6:	add    BYTE PTR [rax],al
  41cea8:	add    BYTE PTR [rax],0x0
  41ceab:	add    BYTE PTR [rax],al
  41cead:	(bad)  
  41ceae:	add    BYTE PTR [rax],al
  41ceb0:	add    BYTE PTR [rax],0x0
  41ceb3:	add    BYTE PTR [rax],al
  41ceb5:	(bad)  
  41ceb6:	add    BYTE PTR [rax],al
  41ceb8:	add    BYTE PTR [rax],0x0
  41cebb:	add    BYTE PTR [rax],al
  41cebd:	(bad)  
  41cebe:	add    BYTE PTR [rax],al
  41cec0:	add    BYTE PTR [rax],0x0
  41cec3:	add    BYTE PTR [rax],al
  41cec5:	(bad)  
  41cec6:	add    BYTE PTR [rax],al
  41cec8:	add    BYTE PTR [rax],0x0
  41cecb:	add    BYTE PTR [rax],al
  41cecd:	(bad)  
  41cece:	add    BYTE PTR [rax],al
  41ced0:	add    BYTE PTR [rax],0x0
  41ced3:	add    BYTE PTR [rax],al
  41ced5:	(bad)  
  41ced6:	add    BYTE PTR [rax],al
  41ced8:	add    BYTE PTR [rax],0x0
  41cedb:	add    BYTE PTR [rax],al
  41cedd:	(bad)  
  41cede:	add    BYTE PTR [rax],al
  41cee0:	add    BYTE PTR [rax],0x0
  41cee3:	add    BYTE PTR [rax],al
  41cee5:	(bad)  
  41cee6:	add    BYTE PTR [rax],al
  41cee8:	add    BYTE PTR [rax],0x0
  41ceeb:	add    BYTE PTR [rax],al
  41ceed:	(bad)  
  41ceee:	add    BYTE PTR [rax],al
  41cef0:	add    BYTE PTR [rax],0x0
  41cef3:	add    BYTE PTR [rax],al
  41cef5:	jg     0x41cef7
  41cef7:	add    BYTE PTR [rax+0x0],al
  41cefd:	jg     0x41ceff
  41ceff:	add    al,al
  41cf01:	add    BYTE PTR [rax],al
  41cf03:	add    BYTE PTR [rax],al
  41cf05:	jg     0x41cf07
  41cf07:	add    al,al
  41cf09:	add    BYTE PTR [rax],al
  41cf0b:	add    BYTE PTR [rcx],al
  41cf0d:	inc    DWORD PTR [rax]
  41cf0f:	add    al,al
  41cf11:	add    BYTE PTR [rax],al
  41cf13:	add    BYTE PTR [rcx],al
  41cf15:	inc    DWORD PTR [rax]
  41cf17:	add    al,al
  41cf19:	add    BYTE PTR [rax],al
  41cf1b:	add    BYTE PTR [rbx],al
  41cf1d:	inc    DWORD PTR [rax]
  41cf1f:	add    al,dh
  41cf21:	add    BYTE PTR [rax],al
  41cf23:	add    BYTE PTR [rbx],al
  41cf25:	inc    DWORD PTR [rax]
  41cf27:	add    al,dh
  41cf29:	add    BYTE PTR [rax],al
  41cf2b:	add    BYTE PTR [rbx],al
  41cf2d:	inc    DWORD PTR [rax]
  41cf2f:	add    al,bh
  41cf31:	add    BYTE PTR [rax],al
  41cf33:	add    BYTE PTR [rdi],cl
  41cf35:	inc    DWORD PTR [rax]
  41cf37:	add    dh,bh
  41cf39:	add    BYTE PTR [rax],al
  41cf3b:	add    BYTE PTR [rdi],bl
  41cf3d:	inc    DWORD PTR [rax]
  41cf3f:	add    dh,bh
  41cf41:	add    BYTE PTR [rax],al
  41cf43:	add    BYTE PTR [rdi],bl
  41cf45:	inc    DWORD PTR [rax]
  41cf47:	add    bh,bh
  41cf49:	add    BYTE PTR [rax],al
  41cf4b:	add    BYTE PTR [rdi-0x1],bh
  41cf4e:	add    BYTE PTR [rax],al
  41cf50:	jmp    rax
  41cf52:	add    BYTE PTR [rbx],al
  41cf54:	(bad)  
  41cf55:	inc    DWORD PTR [rax]
  41cf57:	add    bh,bh
  41cf59:	loopne 0x41cf5b
  41cf5b:	add    edi,edi
  41cf5d:	inc    DWORD PTR [rax]
  41cf5f:	add    bh,bh
  41cf61:	cld    
  41cf62:	add    BYTE PTR [rdi],bl
  41cf64:	(bad)  
  41cf65:	inc    DWORD PTR [rax]
  41cf67:	add    bh,bh
  41cf69:	(bad)  
  41cf6a:	(bad)  
  41cf6b:	(bad)  
  41cf6c:	(bad)  
  41cf6d:	inc    DWORD PTR [rax]
  41cf6f:	add    bh,bh
  41cf71:	(bad)  
  41cf72:	(bad)  
  41cf73:	(bad)  
  41cf74:	(bad)  
  41cf75:	inc    DWORD PTR [rax]
  41cf77:	add    bh,bh
  41cf79:	(bad)  
  41cf7a:	(bad)  
  41cf7b:	(bad)  
  41cf7c:	(bad)  
  41cf7d:	inc    DWORD PTR [rax]
  41cf7f:	add    BYTE PTR [rax],ch
  41cf81:	add    BYTE PTR [rax],al
  41cf83:	add    BYTE PTR [rax],ah
  41cf85:	add    BYTE PTR [rax],al
  41cf87:	add    BYTE PTR [rax+0x0],al
  41cf8a:	add    BYTE PTR [rax],al
  41cf8c:	add    DWORD PTR [rax],eax
  41cf8e:	and    BYTE PTR [rax],al
  41cf90:	add    BYTE PTR [rax],al
  41cf92:	add    BYTE PTR [rax],al
  41cf94:	adc    BYTE PTR [rax],0x0
	...
  41cfcf:	add    BYTE PTR [rsp+rbp*4+0x6578ffa2],dh
  41cfd6:	push   rbp
  41cfd7:	call   QWORD PTR [rbp+0x3e]
  41cfda:	dec    DWORD PTR cs:[rbp+0x39]
  41cfde:	sub    bh,bh
  41cfe0:	rex.W xor al,0x27
  41cfe3:	inc    DWORD PTR [rax+rsi*1+0x25]
  41cfe7:	(bad)  
  41cfe8:	sub    esp,DWORD PTR ds:[rcx]
  41cfeb:	call   QWORD PTR [rbx+0x44]
  41cfee:	cmp    bh,bh
  41cff0:	xchg   ecx,eax
  41cff1:	mov    BYTE PTR [rdx+0xff],al
  41cff7:	add    BYTE PTR [rax],al
  41cff9:	add    BYTE PTR [rax],al
  41cffb:	add    BYTE PTR [rdx+0x77ff9fa9],dh
  41d001:	gs push rbp
  41d003:	call   QWORD PTR [rsi+0x3f]
  41d006:	(bad)  
  41d007:	dec    DWORD PTR [rbp+0x39]
  41d00a:	sub    bh,bh
  41d00c:	xor    rsp,QWORD PTR [rdi]
  41d00f:	inc    DWORD PTR [rax+rsi*1+0x25]
  41d013:	(bad)  
  41d014:	(bad)  
  41d015:	sub    esp,DWORD PTR [rcx]
  41d017:	call   QWORD PTR [rbp+0x46]
  41d01a:	cmp    al,0xff
  41d01c:	xchg   esp,eax
  41d01d:	mov    WORD PTR [rbp+0xff],es
	...
  41d04b:	add    BYTE PTR [rsi-0x7400544b],bh
  41d051:	jbe    0x41d0b3
  41d053:	jmp    FWORD PTR [rax-0x3400806e]
  41d059:	mov    dh,0xa6
  41d05b:	(bad)  
  41d05c:	fcmovb st,st(4)
  41d05e:	mov    dh,0xff
  41d060:	fadd   st,st(1)
  41d062:	mov    cl,0xff
  41d064:	fld    st(0)
  41d066:	scas   eax,DWORD PTR es:[rdi]
  41d067:	inc    ebp
  41d069:	test   eax,0x7491ff97
  41d06e:	(bad)  
  41d06f:	call   QWORD PTR [rdx+0x3a]
  41d072:	sub    eax,0x828993ff
  41d077:	push   QWORD PTR [rax-0x6a006159]
  41d07d:	sub    BYTE PTR [rax-0x1],0xb2
  41d081:	popf   
  41d082:	mov    bh,bh
  41d084:	sar    DWORD PTR [rbx-0x38220054],1
  41d08a:	mov    ecx,0xb1c1d8ff
  41d08f:	call   rdi
  41d091:	mov    ebp,0xa2bfffad
  41d096:	nop
  41d097:	inc    DWORD PTR [rdi+0x4dff566b]
  41d09d:	cmp    BYTE PTR [rcx],ch
  41d09f:	call   QWORD PTR [rbp+0xff858c]
	...
  41d0c9:	add    BYTE PTR [rax],al
  41d0cb:	add    BYTE PTR [rax-0x2f007762],dh
  41d0d1:	mov    esp,0xe3f1ffad
  41d0d6:	fcos   
  41d0d8:	loop   0x41d0ad
  41d0da:	(bad)  
  41d0db:	(bad)  
  41d0dc:	fmul   st(4),st
  41d0de:	mov    esi,0xc5d4e6ff
  41d0e3:	jmp    rdx
  41d0e5:	rol    edx,1
  41d0e7:	dec    ecx
  41d0e9:	mov    cl,0xa2
  41d0eb:	jmp    QWORD PTR [rbx+0x5fff7788]
  41d0f1:	xor    r15d,r15d
  41d0f4:	cmp    QWORD PTR [r14],r13
  41d0f7:	(bad)  
  41d0f8:	jp     0x41d160
  41d0fa:	push   rbp
  41d0fb:	(bad)  
  41d0fc:	jg     0x41d16a
  41d0fe:	pop    rbx
  41d0ff:	call   FWORD PTR [rbp-0x4e007a72]
  41d105:	movabs eax,ds:0xd5e6ffb6c4d2ff98
  41d10e:	(bad)  
  41d10f:	(bad)  
  41d110:	(bad)  
  41d111:	fmul   st,st(1)
  41d113:	(bad)  
  41d114:	out    dx,al
  41d115:	fcmove st,st(4)
  41d117:	jmp    rdi
  41d119:	int    0xbd
  41d11b:	call   QWORD PTR [rcx+rdi*2+0x4e5fff64]
  41d122:	inc    DWORD PTR [r8]
	...
  41d149:	add    BYTE PTR [rax],al
  41d14b:	add    BYTE PTR [rsi-0x400785e],dh
  41d151:	bnd jmp 0x41d153
  41d154:	rol    esp,cl
  41d156:	mov    bh,0xff
  41d158:	jge    0x41d1bf
  41d15a:	push   rax
  41d15b:	jmp    FWORD PTR [rcx-0x40007165]
  41d161:	mov    bl,0xa4
  41d163:	jmp    FWORD PTR [rax+0x7fff8095]
  41d169:	imul   edx,DWORD PTR [rbp-0x1],0xff4a576f
  41d170:	jp     0x41d1d5
  41d172:	push   rbp
  41d173:	dec    DWORD PTR [rcx+0x76ff6372]
  41d179:	(bad)  
  41d17a:	push   rsi
  41d17b:	jmp    FWORD PTR [rbp+0x56]
  41d17e:	rex.WXB call QWORD PTR [r11+0x40]
  41d182:	xor    edi,edi
  41d184:	(bad)  
  41d185:	sub    DWORD PTR [rdi+rdi*8],ebx
  41d188:	ins    BYTE PTR es:[rdi],dx
  41d189:	push   rsi
  41d18a:	rex.XB push QWORD PTR [r15-0x3c006356]
  41d191:	mov    ecx,0xafc0ffac
  41d196:	popf   
  41d197:	jmp    rdx
  41d199:	int    0xbe
  41d19b:	call   rbx
  41d19d:	mov    ecx,0x3f57ffaa
  41d1a2:	sub    eax,0xff
	...
  41d1cb:	add    BYTE PTR [rdi-0x775d],dh
  41d1d1:	cld    
  41d1d2:	idiv   bh
  41d1d4:	shr    DWORD PTR [rdi+0x3c54ffa2],0x2b
  41d1db:	jmp    FWORD PTR [rax-0x5300645f]
  41d1e1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  41d1e2:	popf   
  41d1e3:	call   FWORD PTR [rdi-0x43008473]
  41d1e9:	test   eax,0xc4d6ff95
  41d1ee:	mov    bl,0xff
  41d1f0:	in     al,dx
  41d1f1:	fcmovne st,st(6)
  41d1f3:	push   rdi
  41d1f5:	jmp    0xffffffffe335d1d8
  41d1fa:	sar    edi,cl
  41d1fc:	jmp    0xffffffffcd4197d6
  41d201:	mov    al,0x98
  41d203:	call   FWORD PTR [rbp+0x6cff697f]
  41d209:	pop    rax
  41d20a:	rex.RXB jmp QWORD PTR [r10-0x4c006d67]
  41d211:	lods   al,BYTE PTR ds:[rsi]
  41d212:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41d213:	jmp    QWORD PTR [rax-0x27008874]
  41d219:	shl    DWORD PTR [rcx-0x392b1301],0xff
  41d220:	pop    rdi
  41d221:	rex.RB (bad) 
  41d223:	inc    DWORD PTR [rax]
	...
  41d245:	add    BYTE PTR [rax],al
  41d247:	add    BYTE PTR [rax+0x6c],bh
  41d24a:	push   rdi
  41d24b:	push   QWORD PTR [rax-0xc007960]
  41d251:	jmp    0xffffffffde2ad235
  41d256:	(bad)  
  41d257:	dec    DWORD PTR [rax+0x5cff6274]
  41d25d:	rex.WX cmp rax,0x39475cff
  41d263:	inc    DWORD PTR [rdi-0x4200a18f]
  41d269:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  41d26a:	xchg   edx,eax
  41d26b:	call   rdx
  41d26d:	shr    BYTE PTR [rdi+rdi*8-0x5a4736],0xb2
  41d275:	lahf   
  41d276:	mov    edi,edi
  41d278:	mov    edi,0xcaff96ae
  41d27d:	mov    edx,0xbaceffa6
  41d282:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  41d283:	push   QWORD PTR [rcx+0x6cff8299]
  41d289:	push   rbp
  41d28a:	rex.XB call FWORD PTR [r9+0x44]
  41d28e:	push   QWORD PTR ss:[rbx+0x5e]
  41d292:	rex.WRB jmp FWORD PTR [r10-0x1400816e]
  41d299:	fmul   st,st(4)
  41d29b:	(bad)  
  41d29c:	(bad)  
  41d29e:	mov    ecx,0x39516dff
  41d2a3:	inc    DWORD PTR [rax]
	...
  41d2c1:	add    BYTE PTR [rax],al
  41d2c3:	add    BYTE PTR [rdi],dh
  41d2c5:	rex.RX sub edi,r15d
  41d2c8:	push   rbx
  41d2c9:	rex sbb edi,edi
  41d2cc:	jnp    0x41d25b
  41d2ce:	(bad)  
  41d2cf:	call   rsp
  41d2d1:	(bad)  
  41d2d2:	mov    bl,0xff
  41d2d4:	stc    
  41d2d5:	lock jmp 0xffffffffe92fc9da
  41d2db:	jmp    rcx
  41d2dd:	(bad)  
  41d2de:	retf   
  41d2df:	call   rsi
  41d2e1:	enter  0xffbe,0xd7
  41d2e5:	enter  0xffc0,0xe8
  41d2e9:	fmul   st,st(6)
  41d2eb:	(bad)  
  41d2ec:	jmp    0x41d2c6
  41d2ee:	int3   
  41d2ef:	jmp    FWORD PTR [rdi+0x76ff8497]
  41d2f5:	rex.WXB sub r15b,dil
  41d2f8:	xchg   ebx,eax
  41d2f9:	ins    DWORD PTR es:[rdi],dx
  41d2fa:	rex.WRXB call r10
  41d2fd:	ret    0xffb2
  41d300:	hlt    
  41d301:	(bad)  
  41d302:	jrcxz  0x41d303
  41d304:	out    0xde,eax
  41d306:	xlat   BYTE PTR ds:[rbx]
  41d307:	call   rbx
  41d309:	(bad)  
  41d30a:	mov    edi,0xc0c9d8ff
  41d30f:	jmp    rbp
  41d311:	(bad)  
  41d312:	int    0xff
  41d314:	repz in al,0xdc
  41d317:	push   rcx
  41d319:	loope  0x41d2f1
  41d31b:	push   QWORD PTR [rcx-0x66007864]
  41d321:	mov    BYTE PTR [rdi-0x1],dh
	...
  41d340:	rex.R (bad) 
  41d342:	sbb    bh,bh
  41d344:	rex.X jne 0x41d375
  41d347:	push   QWORD PTR [rdi+rsi*2]
  41d34a:	sub    eax,0x337a3bff
  41d34f:	inc    DWORD PTR [rbx-0x4100956a]
  41d355:	mov    cl,0xa0
  41d357:	dec    ebp
  41d359:	shl    DWORD PTR [rbx-0x463a2d01],0xff
  41d360:	rol    ah,1
  41d362:	mov    ch,0xff
  41d364:	(bad)  
  41d365:	shl    BYTE PTR [rbx-0x57473801],0xff
  41d36c:	mov    edi,0x8cff9baf
  41d371:	rex.W call FWORD PTR fs:[rcx-0x6800efc6]
  41d379:	cmp    dl,BYTE PTR [rax]
  41d37b:	jmp    QWORD PTR [rdi-0x3e009c81]
  41d381:	mov    dl,0xa0
  41d383:	dec    esi
  41d385:	ret    
  41d386:	mov    ah,0xff
  41d388:	ror    eax,cl
  41d38a:	mov    edx,0xb5c2d0ff
  41d38f:	dec    ebp
  41d391:	mov    edi,0xb6c5ffb2
  41d396:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41d397:	jmp    FWORD PTR [rdi-0x53007564]
  41d39d:	pushf  
  41d39e:	mov    edi,?
	...
  41d3bc:	ja     0x41d3f9
  41d3be:	adc    bh,bh
  41d3c0:	rex.WRB (bad) 
  41d3c2:	and    bh,bh
  41d3c4:	ss jg  0x41d3fa
  41d3c7:	push   QWORD PTR [rsi]
  41d3c9:	jge    0x41d3fb
  41d3cb:	(bad)  
  41d3cc:	cmp    edi,DWORD PTR [rax+0x32]
  41d3cf:	(bad)  
  41d3d0:	(bad)  
  41d3d1:	jns    0x41d406
  41d3d3:	inc    DWORD PTR [rax+0x78]
  41d3d6:	xor    al,0xff
  41d3d8:	rex jl 0x41d40e
  41d3db:	inc    DWORD PTR [rdx-0x80]
  41d3de:	inc    DWORD PTR ss:[rdx+0x7f]
  41d3e2:	cmp    bh,bh
  41d3e4:	rex.WX
  41d3e5:	fwait
  41d3e6:	rex.WRXB inc QWORD PTR [r11-0x7b]
  41d3ea:	xor    eax,0x166154ff
  41d3ef:	dec    DWORD PTR [rbx-0x5e00f4ca]
  41d3f5:	cmp    al,0xc
  41d3f7:	call   FWORD PTR [rbp-0x6400f4ca]
  41d3fd:	xor    eax,0x3881ff0a
  41d402:	adc    bh,bh
  41d404:	xchg   ecx,eax
  41d405:	outs   dx,DWORD PTR ds:[rsi]
  41d406:	pop    rcx
  41d407:	inc    DWORD PTR [rax]
	...
  41d435:	add    BYTE PTR [rax],al
  41d437:	add    BYTE PTR [rdi+0x39],dh
  41d43a:	adc    edi,edi
  41d43c:	or     DWORD PTR [rax+0x12],0x317f41ff
  41d443:	(bad)  
  41d444:	cmp    eax,0x41ff348c
  41d449:	mov    BYTE PTR [rcx],dh
  41d44b:	inc    DWORD PTR [rdx-0x7f]
  41d44e:	xor    al,0xff
  41d450:	test   DWORD PTR [rdi+rdi*8],r15d
  41d454:	rex.RX mov WORD PTR [rsi],?
  41d457:	inc    DWORD PTR [rdi-0x70]
  41d45a:	rex dec DWORD PTR [rdx-0x6d]
  41d45e:	rex.WRXB dec QWORD PTR [r15-0x53]
  41d462:	dec    WORD PTR [rax-0x6b]
  41d466:	rex.WB jmp FWORD PTR [r8+0x69]
  41d46a:	sub    edi,edi
  41d46c:	test   al,0x4e
  41d46e:	sbb    bh,bh
  41d470:	rcl    BYTE PTR [rdi+0x1a],0xff
  41d474:	mov    eax,0xacff154e
  41d479:	rex.XB adc r15b,dil
  41d47c:	popf   
  41d47d:	cmp    BYTE PTR [rbx],cl
  41d47f:	call   FWORD PTR [rbx+0x77ff0b36]
  41d485:	ss adc edi,edi
  41d488:	outs   dx,DWORD PTR ds:[rsi]
  41d489:	jno    0x41d4ea
  41d48b:	inc    DWORD PTR [rax]
	...
  41d4b1:	add    BYTE PTR [rax],al
  41d4b3:	add    BYTE PTR [rdx+0x3d],bh
  41d4b6:	sbb    edi,edi
  41d4b8:	xchg   esp,eax
  41d4b9:	ud0    r9d,DWORD PTR [rdx+0x54ff114a]
  41d4c1:	ja     0x41d4ef
  41d4c3:	inc    DWORD PTR [rsi-0x73]
  41d4c6:	cmp    edi,edi
  41d4c8:	rex.RXB xchg r12d,eax
  41d4ca:	cmp    bh,bh
  41d4cc:	rex.RXB (bad) 
  41d4ce:	cmp    edi,edi
  41d4d0:	rex.WB (bad) 
  41d4d2:	(bad)  
  41d4d3:	dec    DWORD PTR [rbp-0x60]
  41d4d6:	rex.WRXB call QWORD PTR [r8-0x54]
  41d4da:	call   QWORD PTR fs:[rbx-0x49]
  41d4de:	ins    DWORD PTR es:[rdi],dx
  41d4df:	dec    DWORD PTR [rcx-0x6a]
  41d4e2:	inc    DWORD PTR ds:[rbp+riz*2+0x67c1ff2d]
  41d4ea:	sub    edi,edi
  41d4ec:	shr    DWORD PTR [rcx+0x2c],1
  41d4ef:	dec    ebp
  41d4f1:	gs es dec ecx
  41d4f5:	(bad)  
  41d4f6:	and    bh,bh
  41d4f8:	rcl    DWORD PTR [rdi+0x1c],0xff
  41d4fc:	mov    ah,0x4b
  41d4fe:	adc    al,0xff
  41d500:	movabs eax,ds:0x3aff0d3879ff0e3c
  41d509:	cmp    al,0x1e
  41d50b:	inc    DWORD PTR [rbp+0xff7b88]
	...
  41d52d:	add    BYTE PTR [rax],al
  41d52f:	add    BYTE PTR [rdx-0x75009f89],bl
  41d535:	cmp    edx,DWORD PTR [rcx]
  41d537:	jmp    FWORD PTR [rbp-0x6200f1bf]
  41d53d:	rex.WX adc dil,dil
  41d540:	addr32 and di,di
  41d544:	rex.WRX xchg rax,rax
  41d546:	cmp    al,0xff
  41d548:	rex.WX movabs ds:0xb04eff46a94dff43,al
  41d552:	rex.WXB call QWORD PTR [r13-0x39]
  41d556:	jb     0x41d557
  41d558:	push   rbx
  41d559:	mov    ecx,0x9f4dff6f
  41d55e:	push   rax
  41d55f:	dec    DWORD PTR [rdx-0x63]
  41d562:	xor    eax,0x2960a2ff
  41d567:	(bad)  
  41d568:	fnstsw WORD PTR [rdx+rdi*1-0x1]
  41d56c:	fstp   TBYTE PTR [rax+0x37]
  41d56f:	call   rdi
  41d571:	je     0x41d5a8
  41d573:	call   rsp
  41d575:	outs   dx,DWORD PTR ds:[rsi]
  41d576:	sub    eax,0x2866ceff
  41d57b:	inc    esp
  41d57d:	pop    rdx
  41d57e:	and    edi,edi
  41d580:	xchg   ebp,eax
  41d581:	adc    dil,r15b
  41d584:	pop    rcx
  41d585:	rex.WRX adc rax,0x296941ff
  41d58b:	dec    DWORD PTR [rbp+0x60]
  41d58e:	rex.WR push QWORD PTR [rbx+0xffa6ac]
	...
  41d5ad:	add    BYTE PTR [rax],al
  41d5af:	add    BYTE PTR [rdi+0x39],dh
  41d5b2:	adc    eax,0xe41a9ff
  41d5b7:	call   FWORD PTR [rbx-0x7700f2c3]
  41d5bd:	rex.X adc dil,dil
  41d5c0:	push   rbp
  41d5c1:	jb     0x41d5f7
  41d5c3:	dec    DWORD PTR [rbx-0x61]
  41d5c6:	rex.XB dec DWORD PTR [r15-0x4f]
  41d5ca:	push   rax
  41d5cb:	call   QWORD PTR [rax-0x4d]
  41d5ce:	push   rax
  41d5cf:	call   QWORD PTR [rsi-0x3d]
  41d5d2:	jne    0x41d5d3
  41d5d4:	rex.WR movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  41d5d6:	dec    QWORD PTR [r11-0x64]
  41d5da:	notrack call QWORD PTR [rax-0x60]
  41d5de:	jmp    QWORD PTR ss:[rbx-0x1f00cd91]
  41d5e5:	xchg   DWORD PTR [rax-0x1],ecx
  41d5e8:	jrcxz  0x41d571
  41d5ea:	rex.RXB jmp r9
  41d5ed:	test   DWORD PTR [rbp-0x1],eax
  41d5f0:	fild   WORD PTR [rcx+0x7bdcff40]
  41d5f6:	cmp    edi,edi
  41d5f8:	int    0x6e
  41d5fa:	xor    edi,edi
  41d5fc:	lods   eax,DWORD PTR ds:[rsi]
  41d5fd:	pop    rbp
  41d5fe:	and    bh,bh
  41d600:	pop    rbx
  41d601:	jns    0x41d62b
  41d603:	inc    DWORD PTR [rcx+0x7a]
  41d606:	xor    bh,bh
  41d608:	(bad)  
  41d609:	jno    0x41d62a
  41d60b:	push   QWORD PTR [rax]
  41d60d:	cmp    al,0x20
  41d60f:	dec    DWORD PTR [rdi+0xff848f]
	...
  41d62d:	add    BYTE PTR [rax],al
  41d62f:	add    BYTE PTR [rdi+0x3a],bh
  41d632:	adc    bh,bh
  41d634:	pushf  
  41d635:	cmp    eax,0x5976ff0c
  41d63a:	sub    edi,edi
  41d63c:	pop    rdx
  41d63d:	jbe    0x41d678
  41d63f:	dec    DWORD PTR [rdx-0x67]
  41d642:	cmp    eax,0x54b350ff
  41d647:	call   QWORD PTR [rdx-0x46]
  41d64a:	pop    rdx
  41d64b:	call   QWORD PTR [rax-0x4a]
  41d64e:	rex.WRX call QWORD PTR [rdx-0x62]
  41d652:	cmp    edi,edi
  41d654:	jne    0x41d5e0
  41d656:	cmp    bh,bh
  41d658:	mov    bh,0x81
  41d65a:	jmp    r11
  41d65d:	xchg   ecx,eax
  41d65e:	push   rcx
  41d65f:	(bad)  
  41d660:	jmp    0xffffffffea412cfb
  41d665:	xchg   esi,eax
  41d666:	push   rdi
  41d667:	(bad)  
  41d668:	call   0xffffffffe8412d01
  41d66d:	xchg   ecx,eax
  41d66e:	push   rdx
  41d66f:	jmp    rsp
  41d671:	mov    WORD PTR [rdi+rdi*8-0x21],cs
  41d675:	xchg   BYTE PTR [rsi-0x1],al
  41d678:	mov    ah,0x7c
  41d67a:	xor    eax,0x2b816dff
  41d67f:	call   FWORD PTR [rax-0x5d]
  41d682:	pop    rsp
  41d683:	call   QWORD PTR [rdi-0x63]
  41d686:	pop    rax
  41d687:	(bad)  
  41d688:	cmp    eax,DWORD PTR [rcx+0x5b4eff25]
  41d68e:	sbb    bh,bh
  41d690:	imul   esi,DWORD PTR [rbx+0x63],0xaaaeb6ff
  41d697:	inc    DWORD PTR [rax]
	...
  41d6a9:	add    BYTE PTR [rax],al
  41d6ab:	add    BYTE PTR [rdi+0x7cff5a71],dl
  41d6b1:	xor    al,0xe
  41d6b3:	push   QWORD PTR [rdx+0x50]
  41d6b6:	and    edi,edi
  41d6b8:	outs   dx,DWORD PTR ds:[rsi]
  41d6b9:	mov    BYTE PTR [rdi+rdi*8+0x58],dl
  41d6bd:	(bad)  
  41d6be:	rex.X call QWORD PTR [rdx-0x4f]
  41d6c2:	push   rdx
  41d6c3:	call   rsi
  41d6c5:	jb     0x41d6f7
  41d6c7:	jmp    QWORD PTR [rsi-0x47]
  41d6ca:	pop    rbp
  41d6cb:	(bad)  
  41d6cc:	jl     0x41d65a
  41d6ce:	xor    eax,0x4083bbff
  41d6d3:	jmp    rdx
  41d6d5:	xchg   ebx,eax
  41d6d6:	push   rbx
  41d6d7:	(bad)  
  41d6d8:	jmp    0x41d674
  41d6da:	pop    rbx
  41d6db:	(bad)  
  41d6dc:	in     al,dx
  41d6dd:	sahf   
  41d6de:	(bad)  
  41d6df:	(bad)  
  41d6e0:	in     eax,dx
  41d6e1:	lahf   
  41d6e2:	movsxd edi,edi
  41d6e4:	in     al,dx
  41d6e5:	movabs al,ds:0x9beaff629febff63
  41d6ee:	pop    rsi
  41d6ef:	(bad)  
  41d6f0:	call   0xffffffffe7412f8c
  41d6f5:	(bad)  
  41d6f6:	push   rdx
  41d6f7:	jmp    QWORD PTR [rsp+rcx*4-0x6bad00c1]
  41d6fe:	rex.RXB jmp QWORD PTR [r11-0x4d]
  41d702:	jne    0x41d703
  41d704:	push   rbx
  41d705:	movabs al,ds:0x7049ff289042ff52
  41d70e:	sbb    eax,0x4a5e50ff
  41d713:	push   QWORD PTR [rbx+0xffa7ab]
	...
  41d729:	add    BYTE PTR [rax],al
  41d72b:	add    BYTE PTR [rsi+0x59ff3655],al
  41d731:	push   rdi
  41d732:	(bad)  
  41d733:	inc    DWORD PTR [rsi+0x7e]
  41d736:	cmp    bh,bh
  41d738:	xchg   rdx,rax
  41d73a:	xor    edi,edi
  41d73c:	push   rbp
  41d73d:	mov    edx,0x6dd5ff66
  41d742:	sub    bh,bh
  41d744:	fnstsw WORD PTR [rax+0x36]
  41d747:	jmp    rcx
  41d749:	test   DWORD PTR [rcx-0x1],eax
  41d74c:	out    0x8e,al
  41d74e:	rex.WRX (bad) 
  41d750:	jmp    0xffffffffed412eec
  41d755:	lahf   
  41d756:	pop    rdi
  41d757:	(bad)  
  41d758:	out    dx,eax
  41d759:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  41d75a:	addr32 (bad) 
  41d75c:	out    dx,eax
  41d75d:	test   eax,0xaaf0ff6c
  41d762:	outs   dx,DWORD PTR ds:[rsi]
  41d763:	push   rax
  41d765:	stos   DWORD PTR es:[rdi],eax
  41d766:	jo     0x41d767
  41d768:	out    dx,eax
  41d769:	test   eax,0xa5edff6e
  41d76e:	push   0xffffffffffffffff
  41d770:	in     al,dx
  41d771:	movabs al,ds:0x93a6ff5d98e9ff64
  41d77a:	rex.RX call QWORD PTR [rbp-0x63]
  41d77e:	push   rcx
  41d77f:	jmp    QWORD PTR [rbp-0x48]
  41d782:	js     0x41d783
  41d784:	rex.WRB cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41d786:	cmp    edi,edi
  41d788:	rex.RX
  41d789:	fwait
  41d78a:	inc    DWORD PTR cs:[rsi-0x7c]
  41d78e:	and    edi,edi
  41d790:	cmp    eax,0xb2ff3b54
  41d795:	stos   BYTE PTR es:[rdi],al
  41d796:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  41d797:	inc    DWORD PTR [rax]
	...
  41d7a9:	add    BYTE PTR [rax],al
  41d7ab:	add    BYTE PTR [rbx+0x42],bh
  41d7ae:	(bad)  
  41d7af:	inc    DWORD PTR [rdx-0x78]
  41d7b2:	dec    DWORD PTR [rsp+r10*4+0x49]
  41d7b7:	(bad)  
  41d7b8:	mov    edi,0xcfff1856
  41d7bd:	gs es (bad) 
  41d7c0:	fnstenv [rbp+0x31]
  41d7c3:	(bad)  
  41d7c4:	fild   WORD PTR [rcx-0x741b00c2]
  41d7ca:	rex.W (bad) 
  41d7cc:	jmp    0xffffffffed412d67
  41d7d1:	movabs al,ds:0xaef1ff6aa7efff60
  41d7da:	jae    0x41d7db
  41d7dc:	repnz mov dl,0x78
  41d7df:	push   rdx
  41d7e1:	mov    ch,0x7d
  41d7e3:	push   rbx
  41d7e5:	mov    ch,0x7d
  41d7e7:	push   rdx
  41d7e9:	mov    bl,0x7b
  41d7eb:	push   rax
  41d7ed:	scas   al,BYTE PTR es:[rdi]
  41d7ee:	jbe    0x41d7ef
  41d7f0:	out    dx,al
  41d7f1:	test   al,0x6f
  41d7f3:	(bad)  
  41d7f4:	jmp    0x41d796
  41d7f6:	push   WORD PTR [rax+0x58ff53a0]
  41d7fd:	(bad)  
  41d7fe:	rex.WX jmp QWORD PTR [rbp-0x44]
  41d802:	ja     0x41d803
  41d804:	pop    rsp
  41d805:	mov    eax,0xa249ff5c
  41d80a:	xor    edi,edi
  41d80c:	rex.R xchg ebp,eax
  41d80e:	sub    edi,edi
  41d810:	cmp    DWORD PTR [rbp+0x34],ecx
  41d813:	push   QWORD PTR [rcx+0xffa4a9]
	...
  41d829:	add    BYTE PTR [rax],al
  41d82b:	add    BYTE PTR [rbx+0x42],bh
  41d82e:	(bad)  
  41d82f:	inc    DWORD PTR [rdx-0x71]
  41d832:	rex.WXB call QWORD PTR [r8-0x77]
  41d836:	rex jmp FWORD PTR [rax+rbx*2+0x6bd2ff1d]
  41d83e:	sub    edi,edi
  41d840:	fdivr  QWORD PTR [rcx+0x36]
  41d843:	jmp    rdx
  41d845:	xchg   BYTE PTR [rbx-0x1],al
  41d848:	out    0x91,al
  41d84a:	push   rcx
  41d84b:	(bad)  
  41d84c:	jmp    0x41d7eb
  41d84e:	pop    rsp
  41d84f:	(bad)  
  41d850:	out    dx,al
  41d851:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41d852:	push   0xffffffffffffffff
  41d854:	repnz scas al,BYTE PTR es:[rdi]
  41d856:	jne    0x41d857
  41d858:	hlt    
  41d859:	mov    bh,0x80
  41d85b:	push   rbp
  41d85d:	mov    esp,0xbff6ff88
  41d862:	mov    edi,?
  41d864:	idiv   BYTE PTR [rsi-0x430b0073]
  41d86a:	mov    edi,edi
  41d86c:	repnz mov bh,0x82
  41d86f:	push   rax
  41d871:	scas   eax,DWORD PTR es:[rdi]
  41d872:	jns    0x41d873
  41d874:	out    dx,al
  41d875:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41d876:	outs   dx,DWORD PTR ds:[rsi]
  41d877:	(bad)  
  41d878:	call   0x74413b1a
  41d87d:	cdq    
  41d87e:	call   QWORD PTR [rbx+r13*4+0x52]
  41d883:	jmp    QWORD PTR [rbx-0x41]
  41d886:	ins    DWORD PTR es:[rdi],dx
  41d887:	dec    DWORD PTR [rsi-0x56]
  41d88a:	cmp    eax,0x319b48ff
  41d88f:	inc    DWORD PTR [rax+0x50]
  41d892:	xor    eax,0xa4a9b2ff
  41d897:	inc    DWORD PTR [rax]
	...
  41d8a9:	add    BYTE PTR [rax],al
  41d8ab:	add    BYTE PTR [rsi+0x45ff3655],al
  41d8b1:	mov    cs,WORD PTR [rax-0x1]
  41d8b4:	lea    r15d,[rdi+rdi*8]
  41d8b8:	jle    0x41d91f
  41d8ba:	sub    bh,bh
  41d8bc:	mov    ah,0x61
  41d8be:	and    al,0xff
  41d8c0:	(bad)  
  41d8c1:	jbe    0x41d8f9
  41d8c3:	jmp    rbx
  41d8c5:	mov    al,BYTE PTR [rsi-0x1]
  41d8c8:	call   0xffffffffef412d63
  41d8cd:	movabs eax,ds:0xb7f3ff72acf1ff63
  41d8d6:	jg     0x41d8d7
  41d8d8:	cmc    
  41d8d9:	mov    edi,0xc5f7ff8d
  41d8de:	xchg   esi,eax
  41d8df:	(bad)  
  41d8e0:	stc    
  41d8e1:	enter  0xff9b,0xf7
  41d8e5:	enter  0xff9c,0xf7
  41d8e9:	(bad)  
  41d8ea:	xchg   esi,eax
  41d8eb:	push   rbp
  41d8ed:	mov    esi,0xb6f1ff8e
  41d8f2:	(bad)  
  41d8f3:	(bad)  
  41d8f4:	out    dx,al
  41d8f5:	stos   DWORD PTR es:[rdi],eax
  41d8f6:	jne    0x41d8f7
  41d8f8:	jmp    0x41d89c
  41d8fa:	imul   edi,edi,0xff5497c7
  41d900:	rex.WR
  41d901:	fwait
  41d902:	call   FWORD PTR [r9-0x49]
  41d906:	pop    rcx
  41d907:	call   FWORD PTR [rbp-0x47]
  41d90a:	(bad)  
  41d90b:	call   QWORD PTR [rbx-0x68]
  41d90e:	xor    eax,0x405948ff
  41d913:	push   QWORD PTR [rbx+rbp*4+0xffa6]
	...
  41d92a:	add    BYTE PTR [rax],al
  41d92c:	mov    ?,WORD PTR [rbp+0x5b]
  41d92f:	call   QWORD PTR [rdx-0x73]
  41d932:	rex.WX inc QWORD PTR [rbp-0x6c]
  41d936:	cmp    edi,edi
  41d938:	pop    rax
  41d939:	cdq    
  41d93a:	rex.RXB inc DWORD PTR [r13-0x6800a46c]
  41d941:	jge    0x41d986
  41d943:	jmp    QWORD PTR [rbp-0x4100cc91]
  41d949:	test   DWORD PTR [rdi-0x1],eax
  41d94c:	(bad)  
  41d94d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41d94e:	addr32 push rdx
  41d951:	mov    bl,0x7b
  41d953:	push   rsp
  41d955:	mov    ebp,0xc6f7ff8c
  41d95a:	cdq    
  41d95b:	(bad)  
  41d95c:	clc    
  41d95d:	int3   
  41d95e:	movabs ds:0xaad0f9ffa9d1faff,al
  41d967:	push   rdi
  41d969:	retf   
  41d96a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  41d96b:	push   rbp
  41d96d:	ret    
  41d96e:	cdq    
  41d96f:	push   rbx
  41d971:	mov    ecx,0xaff0ff8a
  41d976:	jnp    0x41d977
  41d978:	jmp    0x41d91e
  41d97a:	outs   dx,BYTE PTR ds:[rsi]
  41d97b:	(bad)  
  41d97c:	call   0xffffffff9841381a
  41d981:	xchg   edx,eax
  41d982:	rex.WRXB call QWORD PTR [r8-0x51]
  41d986:	rex.WB call QWORD PTR [r15-0x49]
  41d98a:	push   rdi
  41d98b:	jmp    FWORD PTR [rax-0x6f]
  41d98e:	(bad)  
  41d98f:	call   FWORD PTR [rcx+0x67]
  41d992:	push   rdx
  41d993:	push   QWORD PTR [rdi+0xffa8ae]
	...
  41d9a9:	add    BYTE PTR [rax],al
  41d9ab:	add    BYTE PTR [rsi+0x57ff7f93],bl
  41d9b1:	xchg   DWORD PTR [rcx-0x1],ecx
  41d9b4:	rex.RX movabs ds:0xb968ff61a95bff4c,al
  41d9be:	jbe    0x41d9bf
  41d9c0:	jo     0x41d986
  41d9c2:	cmp    edi,0x70
  41d9c5:	ret    
  41d9c6:	jle    0x41d9c7
  41d9c8:	xchg   DWORD PTR [rsi-0x704e0092],ebp
  41d9ce:	rex.WRXB call r15
  41d9d1:	test   eax,0xc2f4ff70
  41d9d6:	xchg   edx,eax
  41d9d7:	push   rdi
  41d9d9:	leave  
  41d9da:	lahf   
  41d9db:	(bad)  
  41d9dc:	clc    
  41d9dd:	iret   
  41d9de:	test   al,0xff
  41d9e0:	cli    
  41d9e1:	shr    DWORD PTR [rsi-0x4c290501],cl
  41d9e7:	(bad)  
  41d9e8:	stc    
  41d9e9:	shr    BYTE PTR [rbx-0x60370901],1
  41d9ef:	push   rbx
  41d9f1:	mov    esi,0xb2f0ff90
  41d9f6:	jg     0x41d9f7
  41d9f8:	in     eax,dx
  41d9f9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41d9fa:	outs   dx,DWORD PTR ds:[rsi]
  41d9fb:	(bad)  
  41d9fc:	call   0xffffffffe1413a9a
  41da01:	mov    WORD PTR [rcx-0x1],ss
  41da04:	mov    ecx,0xd8ff376f
  41da09:	jne    0x41da43
  41da0b:	inc    DWORD PTR [rsi+0x7cff294f]
  41da11:	jge    0x41da80
  41da13:	inc    DWORD PTR [rax]
	...
  41da2d:	add    BYTE PTR [rax],al
  41da2f:	add    BYTE PTR [rbp-0x7b],al
  41da32:	rex.WRX dec QWORD PTR [rcx-0x5f]
  41da36:	rex.WRXB call QWORD PTR [r14+r14*4+0x64]
  41da3b:	jmp    QWORD PTR [rbx-0x47]
  41da3e:	ins    DWORD PTR es:[rdi],dx
  41da3f:	jmp    FWORD PTR [rax-0x3c]
  41da42:	jbe    0x41da43
  41da44:	outs   dx,DWORD PTR ds:[rsi]
  41da45:	retf   0xff81
  41da48:	jl     0x41da19
  41da4a:	xchg   ecx,eax
  41da4b:	inc    DWORD PTR [rbx-0x58006733]
  41da51:	lods   eax,DWORD PTR ds:[rsi]
  41da52:	jb     0x41da53
  41da54:	xlat   BYTE PTR ds:[rbx]
  41da55:	mov    bl,0x7c
  41da57:	push   rbp
  41da59:	(bad)  
  41da5a:	sahf   
  41da5b:	(bad)  
  41da5c:	clc    
  41da5d:	int    0xa6
  41da5f:	(bad)  
  41da60:	clc    
  41da61:	shr    DWORD PTR [rdi+rdi*8-0x512d08],1
  41da68:	clc    
  41da69:	iret   
  41da6a:	stos   BYTE PTR es:[rdi],al
  41da6b:	push   rsi
  41da6d:	enter  0xffa0,0xf4
  41da71:	mov    esi,0xb3f0ff93
  41da76:	cmp    bh,0xec
  41da79:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  41da7a:	outs   dx,BYTE PTR ds:[rsi]
  41da7b:	jmp    rdi
  41da7d:	cdq    
  41da7e:	pop    rdi
  41da7f:	call   rbx
  41da81:	mov    ecx,DWORD PTR [rbp-0x1]
  41da84:	jo     0x41da20
  41da86:	rex.RB push QWORD PTR [r9+0x6dff2b61]
  41da8d:	imul   edi,DWORD PTR [rbx],0xffffffff
  41da90:	lods   eax,DWORD PTR ds:[rsi]
  41da91:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41da92:	sahf   
  41da93:	inc    DWORD PTR [rax]
	...
  41daad:	add    BYTE PTR [rax],al
  41daaf:	add    BYTE PTR [rcx+rcx*4+0x66],ch
  41dab3:	call   FWORD PTR [rcx+rdx*4+0x4e]
  41dab7:	call   QWORD PTR [rdx-0x48]
  41daba:	call   FWORD PTR gs:[rsp+rcx*8+0x7c]
  41dabf:	jmp    QWORD PTR [rbx-0x2d]
  41dac2:	xchg   edi,edi
  41dac4:	push   0x6cff8ed8
  41dac9:	(bad)  
  41daca:	(bad)  
  41dacb:	inc    DWORD PTR [rdi-0x7300612b]
  41dad1:	mov    esi,0xb0a3ff86
  41dad6:	jne    0x41dad7
  41dad8:	ret    0x70ab
  41dadb:	call   rsi
  41dadd:	mov    bh,0x86
  41dadf:	(bad)  
  41dae0:	out    dx,eax
  41dae1:	enter  0xffa1,0xf6
  41dae5:	int3   
  41dae6:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  41dae7:	push   rsi
  41dae9:	retf   0xffa4
  41daec:	cmc    
  41daed:	(bad)
  41daf0:	repnz mov esp,0xb0efff91
  41daf6:	jge    0x41daf7
  41daf8:	jmp    0x41da9e
  41dafa:	imul   edi,edi,0xffffffe6
  41dafd:	xchg   ebp,eax
  41dafe:	pop    rbx
  41daff:	dec    ebp
  41db01:	xchg   ecx,eax
  41db02:	push   rax
  41db03:	call   QWORD PTR [rdx-0x43]
  41db06:	pop    rax
  41db07:	push   QWORD PTR [rbx-0x68]
  41db0a:	inc    QWORD PTR [r12+r8*4+0xff72]
	...
  41db2e:	add    BYTE PTR [rax],al
  41db30:	mov    ah,0xb0
  41db32:	movabs ds:0x65af5fff4c834eff,al
  41db3b:	call   FWORD PTR [rbx+rcx*8+0x7d]
  41db3f:	call   FWORD PTR [rdi-0x2e]
  41db42:	(bad)  
  41db43:	jmp    QWORD PTR [rbx-0x2b]
  41db46:	mov    bh,bh
  41db48:	jns    0x41db1e
  41db4a:	mov    edi,?
  41db4c:	jge    0x41db2b
  41db4e:	popf   
  41db4f:	push   QWORD PTR [rsi-0x2d]
  41db52:	xchg   esp,eax
  41db53:	(bad)  
  41db54:	jnp    0x41db17
  41db56:	cmp    bh,0x87
  41db59:	mov    ebx,0xb4a0ff81
  41db5e:	jns    0x41db5f
  41db60:	mov    ebp,0xefff75af
  41db65:	(bad)  
  41db66:	fwait
  41db67:	push   rsp
  41db69:	(bad)  
  41db6a:	popf   
  41db6b:	push   rbx
  41db6d:	mov    edi,0xb7f0ff96
  41db72:	mov    bh,bh
  41db74:	in     eax,dx
  41db75:	stos   DWORD PTR es:[rdi],eax
  41db76:	ja     0x41db77
  41db78:	jmp    0xffffffffe541421c
  41db7d:	xchg   ecx,eax
  41db7e:	push   rsi
  41db7f:	(bad)  
  41db80:	fild   WORD PTR [rsi-0x4a9900b6]
  41db86:	pop    rbx
  41db87:	dec    DWORD PTR [rax+0xff5080]
	...
  41dbb1:	add    BYTE PTR [rax],al
  41dbb3:	add    BYTE PTR [rbx+0x5fff7995],al
  41dbb9:	(bad)  
  41dbba:	push   rdx
  41dbbb:	call   FWORD PTR [rbx-0x3c]
  41dbbe:	ja     0x41dbbf
  41dbc0:	pop    rsi
  41dbc1:	rol    DWORD PTR [rdx-0x722a9201],1
  41dbc7:	inc    DWORD PTR [rbp-0x7d006e31]
  41dbcd:	retf   0xff85
  41dbd0:	sbb    ch,0xa1
  41dbd3:	call   QWORD PTR [rsi-0x67004d20]
  41dbd9:	fbstp  TBYTE PTR [rdx-0x572a6b01]
  41dbdf:	call   QWORD PTR [rcx-0x18007839]
  41dbe5:	mov    edi,0xbbedff91
  41dbea:	mov    edi,?
  41dbec:	icebp  
  41dbed:	mov    ecx,0xb0ecff89
  41dbf2:	jl     0x41dbf3
  41dbf4:	jmp    0x41db9b
  41dbf6:	ins    BYTE PTR es:[rdi],dx
  41dbf7:	jmp    rdi
  41dbf9:	cwde   
  41dbfa:	pop    rbp
  41dbfb:	jmp    rcx
  41dbfd:	mov    WORD PTR [rax-0x1],ss
  41dc00:	fstp   TBYTE PTR [rsi+0x42]
  41dc03:	jmp    FWORD PTR [rax-0x4e00b491]
  41dc09:	pushf  
  41dc0a:	mov    ?,edi
	...
  41dc38:	outs   dx,BYTE PTR ds:[rsi]
  41dc39:	mov    WORD PTR [rdx-0x1],gs
  41dc3c:	fs (bad) 
  41dc3e:	pop    rbx
  41dc3f:	call   FWORD PTR [rdi-0x3a]
  41dc42:	ja     0x41dc43
  41dc44:	(bad)  
  41dc45:	enter  0xff7c,0x85
  41dc49:	lods   eax,DWORD PTR ds:[rsi]
  41dc4a:	ins    BYTE PTR es:[rdi],dx
  41dc4b:	call   QWORD PTR [rbp-0x52009251]
  41dc51:	(bad)  
  41dc52:	push   rbp
  41dc53:	dec    ecx
  41dc55:	test   eax,0xcdb3ff6a
  41dc5a:	pushf  
  41dc5b:	dec    esp
  41dc5d:	(bad)  
  41dc5e:	xchg   edi,eax
  41dc5f:	call   rsp
  41dc61:	mov    edx,0x9cc0ff82
  41dc66:	pop    rbx
  41dc67:	(bad)  
  41dc68:	mov    edx,0xe4ff5ba1
  41dc6d:	scas   al,BYTE PTR es:[rdi]
  41dc6e:	je     0x41dc6f
  41dc70:	jmp    0x41dc19
  41dc72:	outs   dx,BYTE PTR ds:[rsi]
  41dc73:	(bad)  
  41dc74:	call   0xffffffffe4413d13
  41dc79:	mov    ss,WORD PTR [rbx-0x1]
  41dc7c:	fld    QWORD PTR [rbx+0x72afff47]
  41dc82:	rex.WRB jmp FWORD PTR [r8+rdx*4+0xff7f]
	...
  41dcba:	add    BYTE PTR [rax],al
  41dcbc:	jbe    0x41dc4a
  41dcbe:	ins    BYTE PTR es:[rdi],dx
  41dcbf:	jmp    QWORD PTR [rsi-0x69]
  41dcc2:	pop    rdx
  41dcc3:	jmp    FWORD PTR [rbx-0x51]
  41dcc6:	jmp    QWORD PTR gs:[rbx-0x49]
  41dcca:	imul   edi,edi,0xffffff84
  41dccd:	lahf   
  41dcce:	pop    rcx
  41dccf:	push   QWORD PTR [rdi-0x57]
  41dcd2:	movsxd edi,edi
  41dcd4:	xchg   edi,eax
  41dcd5:	sahf   
  41dcd6:	pop    rdx
  41dcd7:	(bad)  
  41dcd8:	mov    edx,0xd3ff579b
  41dcdd:	movabs eax,ds:0xc168ff4f9bafff5d
  41dce6:	push   rbx
  41dce7:	push   QWORD PTR [rcx-0x3f]
  41dcea:	pop    rbp
  41dceb:	dec    eax
  41dced:	mov    bl,0x72
  41dcef:	(bad)  
  41dcf0:	call   0xffffffffe5413a90
  41dcf5:	(bad)  
  41dcf6:	push   rbx
  41dcf7:	call   rbx
  41dcf9:	or     DWORD PTR [rsi-0x1],0xffffffab
  41dcfd:	jne    0x41dd52
  41dcff:	jmp    FWORD PTR [rsi+0xff8193]
	...
  41dd3d:	add    BYTE PTR [rax],al
  41dd3f:	add    BYTE PTR [rcx+0x5cff819a],dl
  41dd45:	xchg   ecx,eax
  41dd46:	pop    rbx
  41dd47:	push   QWORD PTR [rdi-0x5e]
  41dd4a:	pop    rdi
  41dd4b:	jmp    FWORD PTR [rdx-0x47]
  41dd4e:	outs   dx,DWORD PTR ds:[rsi]
  41dd4f:	jmp    QWORD PTR [rdx-0x46]
  41dd52:	ins    BYTE PTR es:[rdi],dx
  41dd53:	jmp    FWORD PTR [rsi-0x4c]
  41dd56:	movsxd edi,edi
  41dd58:	jle    0x41dd03
  41dd5a:	pop    rcx
  41dd5b:	call   QWORD PTR [rbp+0x6aff54a0]
  41dd61:	sar    DWORD PTR [rdx-0x1],1
  41dd64:	jb     0x41dd3d
  41dd66:	nop
  41dd67:	inc    eax
  41dd69:	mov    dl,0x6f
  41dd6b:	jmp    rbx
  41dd6d:	xchg   ebp,eax
  41dd6e:	push   rdi
  41dd6f:	(bad)  
  41dd70:	fimul  WORD PTR [rbx+0x7cb9ff4f]
  41dd76:	push   rsp
  41dd77:	jmp    QWORD PTR [rdx-0x4600a88c]
  41dd7d:	movabs ds:0xff96,eax
	...
  41ddc6:	add    BYTE PTR [rax],al
  41ddc8:	test   DWORD PTR [rcx-0x7f8e008c],edx
  41ddce:	rex.WRB inc QWORD PTR [r10-0x6200a76a]
  41ddd5:	test   BYTE PTR [rdi+rdi*8+0x5e],al
  41ddd9:	mov    ah,0x65
  41dddb:	(bad)  
  41dddc:	mov    esi,0xd2ff559c
  41dde1:	xchg   ebx,eax
  41dde2:	rex.WRXB push QWORD PTR [r8-0x3e009859]
  41dde9:	(bad)  
  41ddea:	push   rbp
  41ddeb:	push   QWORD PTR [rdx-0x5c00a685]
  41ddf1:	jbe    0x41de4b
  41ddf3:	push   QWORD PTR [rbx+0xff8899]
	...
  41de4d:	add    BYTE PTR [rax],al
  41de4f:	add    BYTE PTR [rdi-0x4d006256],bh
  41de55:	xchg   esp,eax
  41de56:	cmp    bh,0xa6
  41de59:	sub    DWORD PTR [rax-0x1],0xff5976a0
  41de60:	movabs ds:0xb4ff6c85a9ff5c78,al
  41de69:	cwde   
  41de6a:	xchg   bh,bh
  41de6c:	ret    
  41de6d:	mov    dl,0xa6
  41de6f:	inc    DWORD PTR [rax]
	...
  41dfa5:	add    BYTE PTR [rax],al
  41dfa7:	add    bh,bh
  41dfa9:	rcr    BYTE PTR [rax],0x3
  41dfac:	inc    DWORD PTR [rax-0x7f00ff00]
  41dfb2:	add    BYTE PTR [rcx],al
  41dfb4:	inc    DWORD PTR [rax-0x7f00ff00]
  41dfba:	add    BYTE PTR [rcx],al
  41dfbc:	inc    DWORD PTR [rax]
  41dfbe:	add    BYTE PTR [rcx],al
  41dfc0:	inc    BYTE PTR [rax]
  41dfc2:	add    BYTE PTR [rcx],al
  41dfc4:	cld    
  41dfc5:	add    BYTE PTR [rax],al
  41dfc7:	add    edi,eax
  41dfc9:	add    BYTE PTR [rax],al
  41dfcb:	push   rax
  41dfcd:	add    BYTE PTR [rax],al
  41dfcf:	jg     0x41dfb1
  41dfd1:	add    BYTE PTR [rax],al
  41dfd3:	(bad)  
  41dfd4:	rol    BYTE PTR [rax],0x0
  41dfd7:	(bad)  
  41dfd8:	rol    BYTE PTR [rax],0x0
  41dfdb:	(bad)  
  41dfdc:	rol    BYTE PTR [rax],0x0
  41dfdf:	jo     0xffffffff8050dfe5
  41dfe5:	add    BYTE PTR [rax],al
  41dfe7:	jo     0xffffffff8050dfed
  41dfed:	add    BYTE PTR [rax],al
  41dfef:	jo     0xffffffff8050dff5
  41dff5:	add    BYTE PTR [rax],al
  41dff7:	jo     0xffffffffc060dffd
  41dffd:	add    BYTE PTR [rax],al
  41dfff:	(bad)  
  41e000:	rol    BYTE PTR [rax],0x0
  41e003:	(bad)  
  41e004:	rol    BYTE PTR [rax],0x0
  41e007:	jg     0x41dfe9
  41e009:	add    BYTE PTR [rax],al
  41e00b:	jg     0x41dffd
  41e00d:	add    BYTE PTR [rax],al
  41e00f:	(bad)  
  41e010:	clc    
  41e011:	add    BYTE PTR [rcx],al
  41e013:	(bad)  
  41e014:	cld    
  41e015:	add    BYTE PTR [rbx],al
  41e017:	(bad)  
  41e018:	inc    DWORD PTR [rax]
  41e01a:	ud0    edi,edi
  41e01d:	sar    BYTE PTR [rdi],0xff
  41e020:	(bad)  
  41e021:	(bad)  
  41e022:	(bad)  
  41e023:	(bad)  
  41e024:	(bad)  
  41e025:	(bad)  
  41e026:	(bad)  
  41e027:	jmp    FWORD PTR [rax]
  41e029:	add    BYTE PTR [rax],al
  41e02b:	add    BYTE PTR [rax],dl
  41e02d:	add    BYTE PTR [rax],al
  41e02f:	add    BYTE PTR [rax],ah
  41e031:	add    BYTE PTR [rax],al
  41e033:	add    BYTE PTR [rcx],al
  41e035:	add    BYTE PTR [rax],ah
  41e037:	add    BYTE PTR [rax],al
  41e039:	add    BYTE PTR [rax],al
  41e03b:	add    BYTE PTR [rax+0x4],al
	...
  41e05e:	add    BYTE PTR [rax],al
  41e060:	mov    dl,0xa6
  41e062:	cwde   
  41e063:	pop    rbx
  41e064:	sahf   
  41e065:	mov    WORD PTR [rdi+rdi*8-0x67],?
  41e069:	test   DWORD PTR [rsi-0x1],esi
  41e06c:	xchg   esi,eax
  41e06d:	xor    DWORD PTR [rdx-0x1],0xff59677e
  41e074:	xor    DWORD PTR [rdx+0x68],0x8391a0c0
  41e07b:	int3   
  41e07c:	xchg   esi,eax
  41e07d:	(bad)  
  41e07e:	jb     0x41e07f
  41e080:	cdq    
  41e081:	test   DWORD PTR [rsi-0x1],esi
  41e084:	mov    ?,WORD PTR [rdi+0x69]
  41e087:	(bad)  
  41e088:	jp     0x41e0f2
  41e08a:	pop    rbx
  41e08b:	repnz cwde 
  41e08d:	mov    DWORD PTR [rbp+0x3e],edi
	...
  41e0a0:	mov    cl,0xa3
  41e0a2:	mov    WORD PTR [rbp-0x3e3224],cs
  41e0a8:	mov    ch,0xa4
  41e0aa:	xchg   ebp,eax
  41e0ab:	inc    ebx
  41e0ad:	mov    dl,0xa2
  41e0af:	call   FWORD PTR [rax+0x7bff7080]
  41e0b5:	gs push rdi
  41e0b7:	inc    DWORD PTR [rbx-0x7e009e91]
  41e0bd:	outs   dx,BYTE PTR ds:[rsi]
  41e0be:	(bad)  
  41e0bf:	push   QWORD PTR [rsp+riz*4-0x3d2c006b]
  41e0c6:	mov    bl,0xff
  41e0c8:	shr    DWORD PTR [rcx+0x6074ff98],0x50
  41e0cf:	jno    0x41e0d1
	...
  41e0d9:	add    BYTE PTR [rax],al
  41e0db:	add    BYTE PTR [rsi+0x7a],dh
  41e0de:	pop    rax
  41e0df:	sbb    al,0xa3
  41e0e1:	xchg   edi,eax
  41e0e2:	jge    0x41e0b0
  41e0e4:	fcmove st,st(6)
  41e0e6:	(bad)  
  41e0e7:	inc    DWORD PTR [rbp-0x6700978b]
  41e0ed:	xchg   DWORD PTR [rax-0x1],edi
  41e0f0:	int3   
  41e0f1:	mov    ecx,0xbdcfffa7
  41e0f6:	stos   DWORD PTR es:[rdi],eax
  41e0f7:	call   rsp
  41e0f9:	shr    DWORD PTR [rbp-0x745f4801],0xff
  41e100:	(bad)  
  41e101:	jo     0x41e166
  41e103:	jmp    FWORD PTR [rbx-0x2b007567]
  41e109:	mov    esi,0x657dffae
  41e10e:	push   rcx
  41e10f:	jno    0x41e111
  41e111:	add    BYTE PTR [rax],al
  41e113:	add    BYTE PTR [rax],al
  41e115:	add    BYTE PTR [rax],al
  41e117:	add    BYTE PTR [rbx+0x5c],ah
  41e11a:	sub    al,0x1c
  41e11c:	rex.R pop rcx
  41e11e:	sub    cl,ah
  41e120:	push   rbp
  41e121:	jbe    0x41e161
  41e123:	push   QWORD PTR [rdi-0x35006047]
  41e129:	(bad)  
  41e12a:	mov    ch,0xff
  41e12c:	ret    
  41e12d:	mov    esi,0xb4c1ffac
  41e132:	sahf   
  41e133:	call   QWORD PTR [rdx-0x5400c7a6]
  41e139:	jp     0x41e198
  41e13b:	call   rcx
  41e13d:	shl    DWORD PTR [rbx+rdi*8-0x1d44392d],0xd7
  41e145:	enter  0xe2bc,0xba
  41e149:	test   al,0x97
  41e14b:	(bad)  
  41e14c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  41e14d:	xchg   ebx,eax
  41e14e:	xor    DWORD PTR [rdx],0x0
  41e151:	add    BYTE PTR [rax],al
  41e153:	add    BYTE PTR [rax+0x4f],dh
  41e156:	(bad)  
  41e157:	sbb    al,0x73
  41e159:	rex.W (bad) 
  41e15b:	int3   
  41e15c:	rex jl 0x41e18d
  41e15f:	(bad)  
  41e160:	xor    DWORD PTR ds:[rdx],0x398343ff
  41e167:	inc    DWORD PTR [rbp-0x73]
  41e16a:	rex.XB dec DWORD PTR [r13-0x70]
  41e16e:	rex.RXB (bad) 
  41e170:	jns    0x41e1d5
  41e172:	and    bh,bh
  41e174:	stos   DWORD PTR es:[rdi],eax
  41e175:	rex.RXB adc r15b,r15b
  41e178:	movabs al,ds:0x85f2244787ff0c3b
  41e181:	jnp    0x41e1e7
  41e183:	rex.WXB add BYTE PTR [r8],al
	...
  41e18e:	add    BYTE PTR [rax],al
  41e190:	(bad)  
  41e191:	pop    rbx
  41e192:	xor    BYTE PTR [rdi],cl
  41e194:	mov    BYTE PTR [rbx+0x24],cl
  41e197:	int3   
  41e198:	xchg   edx,eax
  41e199:	adc    r15,rdi
  41e19c:	push   rcx
  41e19d:	(bad)  
  41e19e:	xor    edi,edi
  41e1a0:	rex.WB movabs rax,ds:0xa950ff55ad4eff41
  41e1aa:	pop    rdx
  41e1ab:	inc    DWORD PTR [rcx-0x2c00cc84]
  41e1b1:	jb     0x41e1e5
  41e1b3:	call   rax
  41e1b5:	push   0x2b
  41e1b7:	(bad)  
  41e1b8:	mov    ebx,0x74ff1d57
  41e1bd:	rex.W adc al,0xff
  41e1c0:	push   rdi
  41e1c1:	addr32 rex.RXB
  41e1c3:	repnz fwait
  41e1c5:	cwde   
  41e1c6:	(bad)  
  41e1c7:	add    BYTE PTR ds:[rax],al
  41e1ca:	add    BYTE PTR [rax],al
  41e1cc:	add    BYTE PTR [rax],al
  41e1ce:	add    BYTE PTR [rax],al
  41e1d0:	jg     0x41e224
  41e1d2:	(bad)  
  41e1d3:	sub    BYTE PTR [rbx+0x75ff123e],cl
  41e1d9:	pop    rdi
  41e1da:	(bad)  
  41e1db:	call   QWORD PTR [rbp-0x67]
  41e1de:	call   QWORD PTR [r9+r14*4+0x51]
  41e1e3:	jmp    FWORD PTR [rdx-0x62]
  41e1e6:	rex.WX call FWORD PTR [rdx+r10*4-0x742600bc]
  41e1ee:	rex.WR jmp rsp
  41e1f1:	mov    WORD PTR [rbp-0x1],cs
  41e1f4:	fadd   QWORD PTR [rbx+0x7899ff43]
  41e1fa:	xor    edi,edi
  41e1fc:	push   rax
  41e1fd:	lea    eax,[rdx-0x1]
  41e200:	rex.XB
  41e201:	addr32 (bad) 
  41e203:	dec    DWORD PTR [rsi+0xb08390]
  41e209:	add    BYTE PTR [rax],al
  41e20b:	add    BYTE PTR [rax],al
  41e20d:	add    BYTE PTR [rax],al
  41e20f:	add    BYTE PTR [rcx+0x608d385f],al
  41e215:	(bad)  
  41e216:	(bad)  
  41e217:	jmp    FWORD PTR [rdx-0x6d]
  41e21a:	rex.RB (bad) 
  41e21c:	mov    eax,0xb4ff3a83
  41e221:	xchg   esp,eax
  41e222:	rex.WB (bad) 
  41e224:	fist   WORD PTR [rbp-0x5d1200ab]
  41e22a:	gs (bad) 
  41e22c:	out    dx,al
  41e22d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41e22e:	push   0xffffffffffffffff
  41e230:	in     al,dx
  41e231:	movabs ds:0x9879ff5997e1ff66,al
  41e23a:	rex.WR call FWORD PTR [rax-0x56]
  41e23e:	pop    rcx
  41e23f:	inc    DWORD PTR [rbp-0x7c]
  41e242:	sub    edi,edi
  41e244:	add    DWORD PTR [rbp+0xe278],0x0
  41e24e:	add    BYTE PTR [rax],al
  41e250:	jb     0x41e2ac
  41e252:	sub    eax,0x4086528d
  41e257:	inc    eax
  41e259:	(bad)  {k5}{z}
  41e25e:	cmp    al,0xff
  41e260:	call   0xfffffffff04137fa
  41e265:	test   eax,0xb6f3ff6d
  41e26a:	jg     0x41e26b
  41e26c:	hlt    
  41e26d:	mov    edx,0xb4f1ff86
  41e272:	jg     0x41e273
  41e274:	(bad)  
  41e275:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41e276:	outs   dx,BYTE PTR ds:[rsi]
  41e277:	call   QWORD PTR [rdi+0x5aff539e]
  41e27d:	mov    bl,0x5d
  41e27f:	dec    DWORD PTR [rax-0x6a]
  41e282:	xor    eax,0x72817dff
  41e287:	loop   0x41e289
  41e289:	add    BYTE PTR [rax],al
  41e28b:	add    BYTE PTR [rax],al
  41e28d:	add    BYTE PTR [rax],al
  41e28f:	add    BYTE PTR [rcx+0x73],bh
  41e292:	lea    rcx,[r11-0x72]
  41e296:	inc    DWORD PTR [rdx+r8*4-0x7b4a00bf]
  41e29e:	rex.RB (bad) 
  41e2a0:	ficomp DWORD PTR [rbx-0x4a0e00a4]
  41e2a6:	cmp    bh,0xf6
  41e2a9:	(bad)  
  41e2aa:	cdq    
  41e2ab:	(bad)  
  41e2ac:	clc    
  41e2ad:	int3   
  41e2ae:	movabs ds:0x7db0efff97c3f5ff,eax
  41e2b7:	call   rsi
  41e2b9:	pushf  
  41e2ba:	pop    rdi
  41e2bb:	jmp    FWORD PTR [rbp-0x5f]
  41e2be:	rex.WR jmp QWORD PTR [rdx-0x69]
  41e2c2:	rex.RX dec DWORD PTR [rax+0xd67c89]
  41e2c9:	add    BYTE PTR [rax],al
  41e2cb:	add    BYTE PTR [rax],al
  41e2cd:	add    BYTE PTR [rax],al
  41e2cf:	add    BYTE PTR [rax-0x74],bh
  41e2d2:	(bad)  
  41e2d3:	rex.WRX
  41e2d4:	rex.WRX xchg rbp,rax
  41e2d6:	push   rax
  41e2d7:	call   FWORD PTR [rsi-0x49]
  41e2da:	ins    BYTE PTR es:[rdi],dx
  41e2db:	jmp    FWORD PTR [rsi-0x3a]
  41e2de:	jg     0x41e2df
  41e2e0:	nop
  41e2e1:	mov    eax,0xb4cfff7b
  41e2e6:	jg     0x41e2e7
  41e2e8:	repnz enter 0xff9f,0xf7
  41e2ed:	shr    DWORD PTR [rdi+rdi*8-0x5d360a],1
  41e2f4:	lock mov ch,0x85
  41e2f7:	jmp    rdi
  41e2f9:	pushf  
  41e2fa:	movsxd edi,edi
  41e2fc:	mov    bl,0x87
  41e2fe:	rex.RB call FWORD PTR [r9-0x7204c194]
  41e305:	nop
  41e306:	jne    0x41e36c
	...
  41e310:	je     0x41e2a6
  41e312:	sbb    BYTE PTR gs:[rbx-0x69],dh
  41e316:	imul   esi,edx,0x5a
  41e319:	mov    edi,0xd365ff71
  41e31e:	xchg   edi,edi
  41e320:	jnp    0x41e2f6
  41e322:	xchg   ebx,eax
  41e323:	dec    DWORD PTR [rdx-0x4f00793f]
  41e329:	mov    eax,0xc1e1ff82
  41e32e:	xchg   ebp,eax
  41e32f:	push   rbx
  41e331:	rcr    DWORD PTR [rcx+0x7eb0eeff],0xff
  41e338:	in     al,0x97
  41e33a:	pop    rsp
  41e33b:	call   FWORD PTR [rdx-0x7800ae65]
  41e341:	mov    bl,BYTE PTR [rbp-0x5d]
	...
  41e354:	jae    0x41e2f1
  41e356:	outs   dx,DWORD PTR ds:[rsi]
  41e357:	rex.WXB movsxd rsp,DWORD PTR [r8-0x39990d9a]
  41e35e:	jl     0x41e35f
  41e360:	xchg   DWORD PTR [rdx-0x415f0088],edi
  41e366:	cmp    edi,0xffffffad
  41e369:	leave  
  41e36a:	xchg   edi,eax
  41e36b:	(bad)  
  41e36c:	mov    ebp,0xd9ff77b4
  41e371:	mov    al,0x76
  41e373:	(bad)  
  41e374:	call   0xffffffffdb414c1a
  41e379:	mov    DWORD PTR [rax-0x1],edx
  41e37c:	mov    ch,0x7e
  41e37e:	pop    rsp
  41e37f:	loop   0x41e334
  41e381:	xchg   ebx,eax
  41e382:	jae    0x41e3b6
	...
  41e398:	jne    0x41e337
  41e39a:	jno    0x41e3e7
  41e39c:	jno    0x41e33a
  41e39e:	push   0x64a872e5
  41e3a3:	(bad)  
  41e3a4:	jl     0x41e34e
  41e3a6:	pop    rdi
  41e3a7:	jmp    QWORD PTR [rdx-0x7900a65d]
  41e3ad:	mov    ebx,0xa6baff68
  41e3b2:	(bad)  
  41e3b3:	call   rax
  41e3b5:	mov    DWORD PTR [rsi-0x5],edx
  41e3b8:	mov    ah,0x84
  41e3ba:	data16 (bad) 
  41e3bc:	mov    ecx,0x327193
	...
  41e3d9:	add    BYTE PTR [rax],al
  41e3db:	add    BYTE PTR [rsi-0x5d],bh
  41e3de:	jno    0x41e3ec
  41e3e0:	xchg   DWORD PTR [rbp-0x685d8293],edx
  41e3e6:	jno    0x41e3ca
  41e3e8:	pushf  
  41e3e9:	mov    ds,WORD PTR [rsi-0x1e]
  41e3ec:	mov    dl,0x8b
  41e3ee:	(bad)  
  41e3ef:	loop   0x41e3a9
  41e3f1:	xchg   ecx,eax
  41e3f2:	js     0x41e3ca
  41e3f4:	mov    al,0x8c
  41e3f6:	ins    BYTE PTR es:[rdi],dx
  41e3f7:	add    BYTE PTR fs:[rax],al
	...
  41e44e:	add    BYTE PTR [rax],al
  41e450:	lock add BYTE PTR [rax],al
  41e453:	add    al,dh
  41e455:	add    BYTE PTR [rax],al
  41e457:	add    al,ah
  41e459:	add    BYTE PTR [rax],al
  41e45b:	add    al,al
  41e45d:	add    BYTE PTR [rax],al
  41e45f:	add    BYTE PTR [rax+0x7],al
  41e465:	add    eax,DWORD PTR [rax]
  41e467:	add    BYTE PTR [rax],al
  41e469:	add    eax,DWORD PTR [rax]
  41e46b:	add    BYTE PTR [rax],al
  41e46d:	add    eax,DWORD PTR [rax]
  41e46f:	add    BYTE PTR [rax],al
  41e471:	add    eax,DWORD PTR [rax]
  41e473:	add    BYTE PTR [rax],al
  41e475:	add    eax,DWORD PTR [rax]
  41e477:	add    BYTE PTR [rax],al
  41e479:	add    eax,DWORD PTR [rax]
  41e47b:	add    BYTE PTR [rax],al
  41e47d:	(bad)  
  41e47e:	add    BYTE PTR [rax],al
  41e480:	add    BYTE PTR [rdi],0x0
  41e483:	add    al,al
  41e485:	sldt   WORD PTR [rax]
  41e488:	loopne 0x41e4c9
  41e48a:	add    BYTE PTR [rax],al
  41e48c:	(bad)  
  41e48d:	inc    DWORD PTR [rax]
  41e48f:	add    BYTE PTR [rbx],cl
  41e491:	add    BYTE PTR [rcx],al
  41e494:	add    BYTE PTR [rax],al
  41e496:	add    bh,bh
  41e498:	(bad)  
  41e499:	(bad)  
  41e49a:	inc    DWORD PTR [rcx]
  41e49c:	add    BYTE PTR [rax],al
  41e49e:	add    BYTE PTR [rax],al
  41e4a0:	add    BYTE PTR [rax],al
  41e4a2:	add    BYTE PTR [rdx+rax*1],cl
  41e4a5:	add    BYTE PTR [rax],al
  41e4a7:	add    BYTE PTR [rcx+0x53],dl
  41e4aa:	jns    0x41e51f
  41e4ac:	je     0x41e513
  41e4ae:	ins    DWORD PTR es:[rdi],dx
  41e4af:	cs rex.R jb 0x41e514
  41e4b3:	ja     0x41e51e
  41e4b5:	outs   dx,BYTE PTR ds:[rsi]
  41e4b6:	addr32 sub al,0x20
  41e4b9:	push   rsi
  41e4ba:	gs jb  0x41e530
  41e4bd:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  41e4c4:	xor    BYTE PTR cs:[rsi],ch
  41e4c7:	xor    BYTE PTR [rax+riz*1],ch
  41e4ca:	rex.XB jne 0x41e539
  41e4cd:	je     0x41e544
  41e4cf:	jb     0x41e536
  41e4d1:	cmp    eax,0x7475656e
  41e4d6:	jb     0x41e539
  41e4d8:	ins    BYTE PTR es:[rdi],dx
  41e4d9:	sub    al,0x20
  41e4db:	push   rax
  41e4dc:	jne    0x41e540
  41e4de:	ins    BYTE PTR es:[rdi],dx
  41e4df:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  41e4e6:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  41e4ea:	(bad)  
  41e4eb:	xor    BYTE PTR [rbx],dh
  41e4ed:	xor    ax,0x3766
  41e4f1:	xor    WORD PTR [rcx],si
  41e4f4:	fs xor eax,0x61336130
  41e4fa:	add    eax,0x1
  41e4ff:	adc    edx,DWORD PTR [rbx+0x79]
  41e502:	jae    0x41e578
  41e504:	gs ins DWORD PTR es:[rdi],dx
  41e506:	cs rex.R jb 0x41e56b
  41e50a:	ja     0x41e575
  41e50c:	outs   dx,BYTE PTR ds:[rsi]
  41e50d:	movsxd rbp,DWORD PTR cs:[r15d+0x6e]
  41e513:	add    al,BYTE PTR [rax]
  41e515:	add    BYTE PTR [rax],al
  41e517:	or     BYTE PTR [rcx+0x63],cl
  41e51a:	outs   dx,DWORD PTR ds:[rsi]
  41e51b:	outs   dx,BYTE PTR ds:[rsi]
  41e51c:	rex.R (bad) 
  41e51e:	je     0x41e581
  41e520:	or     BYTE PTR [rcx+0x63],cl
  41e523:	outs   dx,DWORD PTR ds:[rsi]
  41e524:	outs   dx,BYTE PTR ds:[rsi]
  41e525:	push   rbx
  41e526:	imul   edi,DWORD PTR [rdx+0x65],0x13020407
  41e52d:	push   rbx
  41e52e:	jns    0x41e5a3
  41e530:	je     0x41e597
  41e532:	ins    DWORD PTR es:[rdi],dx
  41e533:	cs rex.R jb 0x41e598
  41e537:	ja     0x41e5a2
  41e539:	outs   dx,BYTE PTR ds:[rsi]
  41e53a:	addr32 cs push rbx
  41e53d:	imul   edi,DWORD PTR [rdx+0x65],0x2
  41e544:	add    al,BYTE PTR [rax]
  41e546:	add    BYTE PTR [rax],al
  41e548:	or     DWORD PTR [rbx],eax
  41e54a:	add    BYTE PTR [rax],al
  41e54c:	add    BYTE PTR [rip+0xfffffffffffffffc],al        # 0x41e54e
  41e552:	adc    edx,DWORD PTR [rbx+0x79]
  41e555:	jae    0x41e5cb
  41e557:	gs ins DWORD PTR es:[rdi],dx
  41e559:	cs rex.R jb 0x41e5be
  41e55d:	ja     0x41e5c8
  41e55f:	outs   dx,BYTE PTR ds:[rsi]
  41e560:	addr32 cs push rbx
  41e563:	imul   edi,DWORD PTR [rdx+0x65],0x2
  41e56a:	add    eax,0x74646977
  41e56f:	push   0x69656806
  41e574:	addr32 push 0x8000074
  41e57a:	or     BYTE PTR [rdx],al
	...
  41e584:	add    BYTE PTR [rax],al
  41e586:	add    BYTE PTR [rdi],cl
  41e588:	add    eax,DWORD PTR [rax]
  41e58a:	add    BYTE PTR [rax],al
  41e58c:	xchg   esi,eax
  41e58d:	(bad)  
  41e58e:	add    BYTE PTR [rax],al
  41e590:	add    al,BYTE PTR [rax]
  41e592:	add    BYTE PTR [rcx],al
  41e594:	add    BYTE PTR [rsi],al
  41e596:	add    BYTE PTR [rax],ah
  41e598:	and    BYTE PTR [rax],dl
  41e59a:	add    BYTE PTR [rcx],al
  41e59c:	add    BYTE PTR [rax+rax*1],al
  41e59f:	call   0x6641e5a6
  41e5a4:	add    BYTE PTR [rax],al
  41e5a6:	add    BYTE PTR [rax],dl
  41e5a8:	adc    BYTE PTR [rax],dl
  41e5aa:	add    BYTE PTR [rcx],al
  41e5ac:	add    BYTE PTR [rax+rax*1],al
  41e5af:	sub    BYTE PTR [rcx],al
  41e5b1:	add    BYTE PTR [rax],al
  41e5b3:	rex.WRX add r8,QWORD PTR [rax]
  41e5b6:	add    BYTE PTR [rax],ah
  41e5b8:	and    BYTE PTR [rax],al
  41e5ba:	add    BYTE PTR [rcx],al
  41e5bc:	add    BYTE PTR [rax],cl
  41e5be:	add    BYTE PTR [rax+0x76000008],ch
  41e5c4:	add    al,0x0
  41e5c6:	add    BYTE PTR [rax],dl
  41e5c8:	adc    BYTE PTR [rax],al
  41e5ca:	add    BYTE PTR [rcx],al
  41e5cc:	add    BYTE PTR [rax],cl
  41e5ce:	add    BYTE PTR [rax+0x5],ch
  41e5d1:	add    BYTE PTR [rax],al
  41e5d3:	(bad)  
  41e5d4:	or     eax,0x20200000
  41e5d9:	add    BYTE PTR [rax],al
  41e5db:	add    DWORD PTR [rax],eax
  41e5dd:	and    BYTE PTR [rax],al
  41e5df:	test   al,0x10
  41e5e1:	add    BYTE PTR [rax],al
  41e5e3:	xchg   BYTE PTR [rdx],dl
  41e5e5:	add    BYTE PTR [rax],al
  41e5e7:	adc    BYTE PTR [rax],dl
  41e5e9:	add    BYTE PTR [rax],al
  41e5eb:	add    DWORD PTR [rax],eax
  41e5ed:	and    BYTE PTR [rax],al
  41e5ef:	push   0x2e000004
  41e5f4:	and    eax,DWORD PTR [rax]
  41e5f6:	add    BYTE PTR [rax],ch
  41e5f8:	add    BYTE PTR [rax],al
  41e5fa:	add    BYTE PTR [rax],ah
  41e5fc:	add    BYTE PTR [rax],al
  41e5fe:	add    BYTE PTR [rax+0x0],al
  41e601:	add    BYTE PTR [rax],al
  41e603:	add    DWORD PTR [rax],eax
  41e605:	add    al,0x0
  41e607:	add    BYTE PTR [rax],al
  41e609:	add    BYTE PTR [rax],al
  41e60b:	add    BYTE PTR [rdx],al
	...
  41e625:	add    BYTE PTR [rax],0x0
  41e628:	add    BYTE PTR [rax],0x0
  41e62b:	add    BYTE PTR [rax+0x800080],al
  41e631:	add    BYTE PTR [rax],al
  41e633:	add    BYTE PTR [rax],0x80
  41e636:	add    BYTE PTR [rax-0x7fffff80],al
  41e63c:	add    BYTE PTR [rax-0x3f3f4000],0x0
  41e643:	add    BYTE PTR [rax],al
  41e645:	inc    DWORD PTR [rax]
  41e647:	add    bh,bh
  41e649:	add    BYTE PTR [rax],al
  41e64b:	add    bh,bh
  41e64d:	inc    DWORD PTR [rax]
  41e64f:	inc    DWORD PTR [rax]
  41e651:	add    BYTE PTR [rax],al
  41e653:	inc    DWORD PTR [rax]
  41e655:	inc    DWORD PTR [rax]
  41e657:	(bad)  
  41e658:	inc    DWORD PTR [rax]
  41e65a:	add    bh,bh
  41e65c:	(bad)  
  41e65d:	inc    DWORD PTR [rax]
  41e65f:	add    BYTE PTR [rax],al
  41e661:	add    BYTE PTR [rax],al
  41e663:	add    BYTE PTR [rax],al
  41e665:	add    BYTE PTR [rdi],ah
  41e667:	and    dh,BYTE PTR [rdx+0x36]
  41e66a:	and    esp,DWORD PTR [rbx+0x62]
  41e66d:	add    BYTE PTR ss:[rax],al
  41e670:	add    BYTE PTR [rax],al
  41e672:	add    BYTE PTR [rax],al
  41e674:	add    BYTE PTR [rax],al
  41e676:	(bad)  
  41e677:	jae    0x41e6ec
  41e679:	movsxd esp,DWORD PTR [rdx+0x72]
  41e67c:	and    eax,DWORD PTR ss:[rax]
  41e67f:	add    BYTE PTR [rax],al
  41e681:	add    BYTE PTR [rax],al
  41e683:	add    BYTE PTR [rax],al
  41e685:	add    BYTE PTR [rax+0x77],bh
  41e688:	es ja  0x41e6be
  41e68b:	(bad)  
  41e68c:	(bad)  
  41e68d:	add    BYTE PTR ss:[rax],al
  41e690:	add    BYTE PTR [rax],al
  41e692:	add    BYTE PTR [rax],al
  41e694:	add    BYTE PTR [rax],al
  41e696:	sub    BYTE PTR [rdx+0x78],bh
  41e699:	and    esi,DWORD PTR [rsi+0x3a]
  41e69c:	jb     0x41e701
	...
  41e6a6:	(bad)  
  41e6a7:	(bad)  
  41e6a8:	clc    
  41e6a9:	(bad)  
  41e6aa:	jp     0x41e723
  41e6ac:	xor    esp,DWORD PTR [rsi+0x0]
  41e6b2:	add    BYTE PTR [rax],al
  41e6b4:	add    BYTE PTR [rax],al
  41e6b6:	js     0x41e647
  41e6b8:	dec    DWORD PTR [rax+0x72638870]
  41e6be:	add    BYTE PTR [rax],al
  41e6c0:	add    BYTE PTR [rax],al
  41e6c2:	add    BYTE PTR [rax],al
  41e6c4:	add    BYTE PTR [rdi],dl
  41e6c6:	js     0x41e743
  41e6c8:	(bad)  
  41e6c9:	clc    
  41e6ca:	vpperm ymm0,ymm11,YMMWORD PTR [r8],ymm0
  41e6d0:	add    BYTE PTR [rax],al
  41e6d2:	add    BYTE PTR [rax],al
  41e6d4:	(bad)  
  41e6d5:	jae    0x41e70f
  41e6d7:	mov    bh,BYTE PTR [rdi-0x1]
  41e6da:	(bad)  
  41e6db:	clc    
  41e6dc:	(bad)  
  41e6dd:	add    BYTE PTR es:[rax],al
  41e6e0:	add    BYTE PTR [rax],al
  41e6e2:	add    BYTE PTR [rbx-0x8],dh
  41e6e5:	mov    BYTE PTR [rax-0x78],bh
  41e6e8:	ja     0x41e6e9
  41e6ea:	(bad)  
  41e6eb:	clc    
  41e6ec:	jae    0x41e751
  41e6ee:	add    BYTE PTR [rax],al
  41e6f0:	add    BYTE PTR [rax],al
  41e6f2:	ja     0x41e67c
  41e6f4:	clc    
  41e6f5:	mov    bh,0x38
  41e6f7:	xchg   DWORD PTR [rdi+0x77f8fff8],esp
  41e6fd:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  41e6fe:	add    BYTE PTR [rax],al
  41e700:	add    BYTE PTR [rdi],al
  41e702:	mov    eax,0x78878f8f
  41e707:	mov    BYTE PTR [rdi-0x1],bh
  41e70a:	(bad)  
  41e70b:	(bad)  
  41e70c:	jp     0x41e780
  41e70e:	add    BYTE PTR [rax],al
  41e710:	add    BYTE PTR [rdi],al
  41e712:	mov    edi,DWORD PTR [rdi-0x78]
  41e715:	mov    eax,0xff8f8a38
  41e71a:	(bad)  
  41e71b:	push   QWORD PTR [rdi+0x37]
  41e71e:	add    BYTE PTR [rax],al
  41e720:	add    BYTE PTR [rdi],al
  41e722:	mov    BYTE PTR [rdi-0x77877871],cl
  41e728:	xchg   DWORD PTR [rdi+0x728a8787],eax
  41e72e:	add    BYTE PTR [rax],al
  41e730:	add    BYTE PTR [rdi],al
  41e732:	mov    bh,0xbf
  41e734:	sti    
  41e735:	js     0x41e76f
  41e737:	mov    BYTE PTR [rax-0x77777778],cl
  41e73d:	jb     0x41e73f
  41e73f:	add    BYTE PTR [rax],al
  41e741:	(bad)  
  41e742:	mov    BYTE PTR [rax-0x58887408],cl
  41e748:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  41e749:	(bad)  
  41e74a:	movabs ds:0x8b070000007a7a6a,eax
  41e753:	mov    BYTE PTR [rbx+0x73318788],cl
  41e759:	jae    0x41e7ce
  41e75b:	jae    0x41e792
  41e75d:	add    BYTE PTR [rax],al
  41e75f:	add    BYTE PTR [rax],al
  41e761:	(bad)  
  41e762:	mov    BYTE PTR [rax+0x33888bff],cl
  41e768:	(bad)  
  41e769:	xor    esi,DWORD PTR [rbx+0x39]
  41e76c:	jae    0x41e76e
  41e76e:	add    BYTE PTR [rax],al
  41e770:	add    BYTE PTR [rdi],al
  41e772:	mov    eax,0x8b88ff88
  41e777:	jno    0x41e78a
  41e779:	(bad)  
  41e77a:	(bad)  
  41e77b:	(bad)  
  41e77c:	xor    eax,0x0
  41e781:	(bad)  
  41e782:	mov    BYTE PTR [rdi+0x3788b8f8],bh
  41e788:	ja     0x41e7bb
  41e78a:	xor    DWORD PTR [rdi],esi
  41e78c:	adc    eax,DWORD PTR [rax]
  41e78e:	add    BYTE PTR [rax],al
  41e790:	add    BYTE PTR [rdi],al
  41e792:	mov    edi,0x3b778b88
  41e797:	push   rdi
  41e798:	mov    BYTE PTR [rdi+0x73],dh
  41e79b:	adc    DWORD PTR [rip+0x0],esi        # 0x41e7a1
  41e7a1:	(bad)  
  41e7a2:	xchg   DWORD PTR [rdi+0x33988888],esi
  41e7a8:	mov    eax,0x3177888b
  41e7ad:	add    BYTE PTR [rax],al
  41e7af:	add    BYTE PTR [rax],al
  41e7b1:	mov    edi,DWORD PTR [rax-0x78]
  41e7b4:	mov    BYTE PTR [rdi+0x787b9883],dh
  41e7ba:	mov    eax,DWORD PTR [rdi+0x7077]
  41e7c0:	jnp    0x41e751
  41e7c2:	mov    BYTE PTR [rbx+0x7b337979],cl
  41e7c8:	js     0x41e762
  41e7ca:	cmp    BYTE PTR [rbx-0x75],bh
  41e7cd:	xchg   DWORD PTR [rax],eax
  41e7cf:	(bad)  
  41e7d0:	xchg   DWORD PTR [rdi-0x49],esi
  41e7d3:	jns    0x41e848
  41e7d5:	(bad)  
  41e7d6:	(bad)  
  41e7d7:	cwde   
  41e7d8:	cwde   
  41e7d9:	mov    bh,0x89
  41e7db:	xchg   DWORD PTR [rdi+0x8073],eax
  41e7e1:	or     BYTE PTR [rdi-0x4d],dh
  41e7e4:	jae    0x41e85f
  41e7e6:	jae    0x41e820
  41e7e8:	mov    bh,0x8b
  41e7ea:	mov    edi,DWORD PTR [rbx+0x7b]
  41e7ed:	add    BYTE PTR [rax],al
  41e7ef:	add    BYTE PTR [rax],al
  41e7f1:	jnp    0x41e77b
  41e7f3:	ja     0x41e86e
  41e7f5:	(bad)  
  41e7f6:	cmp    DWORD PTR [rdi-0x77],esi
  41e7f9:	xor    DWORD PTR [rdi+0x78],0xffffff98
  41e7fd:	jo     0x41e7ff
  41e7ff:	add    BYTE PTR [rdi],al
  41e801:	mov    BYTE PTR [rax+0x733bb7b8],cl
  41e807:	(bad)  
  41e808:	mov    eax,0x88b7b738
  41e80d:	mov    bh,0x0
  41e80f:	add    BYTE PTR [rax-0x74777701],cl
  41e815:	xchg   DWORD PTR [rdi],esi
  41e817:	cmp    BYTE PTR [rdi-0x48],dh
  41e81a:	mov    BYTE PTR [rax+0x7088b8],cl
  41e820:	cmp    BYTE PTR [rax-0x74777771],cl
  41e826:	mov    DWORD PTR [rbx-0x77477748],eax
  41e82c:	mov    BYTE PTR [rbx-0x48ffff90],cl
  41e832:	mov    eax,0x8b8888f8
  41e837:	js     0x41e8b1
  41e839:	mov    BYTE PTR [rax+0x70b888],cl
  41e83f:	add    BYTE PTR [rax],al
  41e841:	add    BYTE PTR [rax],cl
  41e843:	cmp    ecx,DWORD PTR [rax+0x7b0070b8]
  41e849:	mov    BYTE PTR [rax+0xb7],cl
  41e84f:	add    BYTE PTR [rax],al
  41e851:	add    BYTE PTR [rax],al
  41e853:	add    BYTE PTR [rdi+0x89],al
  41e859:	jnp    0x41e8d2
  41e85b:	add    BYTE PTR [rax],al
  41e85d:	add    BYTE PTR [rax],al
  41e85f:	(bad)  
  41e860:	cld    
  41e861:	add    BYTE PTR [rbx],al
  41e863:	(bad)  
  41e864:	cld    
  41e865:	add    BYTE PTR [rbx],al
  41e867:	(bad)  
  41e868:	cld    
  41e869:	add    BYTE PTR [rbx],al
  41e86b:	(bad)  
  41e86c:	cld    
  41e86d:	add    BYTE PTR [rbx],al
  41e86f:	(bad)  
  41e870:	cld    
  41e871:	add    BYTE PTR [rbx],al
  41e873:	(bad)  
  41e874:	cld    
  41e875:	add    BYTE PTR [rbx],al
  41e877:	push   rax
  41e879:	add    BYTE PTR [rbx],al
  41e87b:	inc    eax
  41e87d:	add    BYTE PTR [rbx],al
  41e87f:	inc    DWORD PTR [rax]
  41e881:	add    BYTE PTR [rbx],al
  41e883:	cld    
  41e884:	add    BYTE PTR [rax],al
  41e886:	add    edi,eax
  41e888:	add    BYTE PTR [rax],al
  41e88a:	add    edi,eax
  41e88c:	add    BYTE PTR [rax],al
  41e88e:	add    edi,eax
  41e890:	add    BYTE PTR [rax],al
  41e892:	add    edi,eax
  41e894:	add    BYTE PTR [rax],al
  41e896:	add    edi,eax
  41e898:	add    BYTE PTR [rax],al
  41e89a:	add    edi,eax
  41e89c:	add    BYTE PTR [rax],al
  41e89e:	psubb  mm0,QWORD PTR [rax]
  41e8a1:	add    BYTE PTR [rdi],cl
  41e8a3:	clc    
  41e8a4:	add    BYTE PTR [rax],al
  41e8a6:	psubb  mm0,QWORD PTR [rax]
  41e8a9:	add    BYTE PTR [rdi],cl
  41e8ab:	clc    
  41e8ac:	add    BYTE PTR [rax],al
  41e8ae:	psubb  mm0,QWORD PTR [rax]
  41e8b1:	add    BYTE PTR [rdi],cl
  41e8b3:	lock add BYTE PTR [rax],al
  41e8b6:	(bad)  
  41e8b7:	rol    BYTE PTR [rax],0x0
  41e8ba:	add    eax,DWORD PTR [rax-0x7ff0000]
  41e8c0:	add    BYTE PTR [rax],al
  41e8c2:	(bad)  
  41e8c4:	add    BYTE PTR [rax],al
  41e8c6:	(bad)  
  41e8c7:	loopne 0x41e8c9
  41e8c9:	add    BYTE PTR [rbx],al
  41e8cb:	rol    BYTE PTR [rax],0x0
  41e8ce:	add    eax,eax
  41e8d0:	add    BYTE PTR [rax],al
  41e8d2:	add    eax,esi
  41e8d4:	add    BYTE PTR [rax],al
  41e8d6:	(bad)  
  41e8d7:	inc    BYTE PTR [rcx]
  41e8d9:	sar    BYTE PTR [rdi],0xff
  41e8dc:	ret    
  41e8dd:	lock jmp FWORD PTR [rax]
  41e8e0:	add    BYTE PTR [rax],al
  41e8e2:	add    BYTE PTR [rax],dl
  41e8e4:	add    BYTE PTR [rax],al
  41e8e6:	add    BYTE PTR [rax],ah
  41e8e8:	add    BYTE PTR [rax],al
  41e8ea:	add    BYTE PTR [rcx],al
  41e8ec:	add    BYTE PTR [rax+rax*1],al
  41e8ef:	add    BYTE PTR [rax],al
  41e8f1:	add    BYTE PTR [rax],al
  41e8f3:	add    BYTE PTR [rax],0x0
	...
  41e90a:	add    BYTE PTR [rax],al
  41e90c:	add    BYTE PTR [rax+0x800000],al
  41e912:	add    BYTE PTR [rax],al
  41e914:	add    BYTE PTR [rax+0x8000],0x0
  41e91b:	add    BYTE PTR [rax],0x80
  41e91e:	add    BYTE PTR [rax-0x7fffff80],al
  41e924:	add    BYTE PTR [rax-0x3f3f4000],0x0
  41e92b:	add    BYTE PTR [rax],al
  41e92d:	inc    DWORD PTR [rax]
  41e92f:	add    bh,bh
  41e931:	add    BYTE PTR [rax],al
  41e933:	add    bh,bh
  41e935:	inc    DWORD PTR [rax]
  41e937:	inc    DWORD PTR [rax]
  41e939:	add    BYTE PTR [rax],al
  41e93b:	inc    DWORD PTR [rax]
  41e93d:	inc    DWORD PTR [rax]
  41e93f:	(bad)  
  41e940:	inc    DWORD PTR [rax]
  41e942:	add    bh,bh
  41e944:	(bad)  
  41e945:	inc    DWORD PTR [rax]
  41e947:	add    BYTE PTR [rax],al
  41e949:	add    BYTE PTR [rdi],al
  41e94b:	(bad)  
  41e94c:	and    esp,DWORD PTR [rdx]
  41e94e:	add    BYTE PTR [rax],al
  41e950:	add    BYTE PTR [rax],al
  41e952:	jae    0x41e9c7
  41e954:	(bad)  
  41e955:	xor    BYTE PTR ss:[rax],al
  41e958:	add    BYTE PTR [rbx-0x49],dh
  41e95b:	jg     0x41e993
  41e95d:	(bad)  
  41e95e:	and    BYTE PTR [rax],al
  41e960:	(bad)  
  41e961:	(bad)  
  41e962:	jae    0x41e8ee
  41e964:	icebp  
  41e965:	mul    DWORD PTR [rax]
  41e967:	add    BYTE PTR [rbx],al
  41e969:	mov    BYTE PTR [rdi+0x20f77f87],dh
  41e96f:	add    BYTE PTR [rbx],cl
  41e971:	mov    esi,DWORD PTR [rbx-0x76]
  41e974:	(bad)  
  41e975:	clc    
  41e976:	xor    BYTE PTR [rax],al
  41e978:	(bad)  
  41e979:	mov    BYTE PTR [rbx-0x5f777771],al
  41e97f:	add    BYTE PTR [rbx],cl
  41e981:	mov    BYTE PTR [rdi+0x707a7a7a],dh
  41e987:	add    BYTE PTR [rdi],al
  41e989:	mov    esi,DWORD PTR [rbx+0x33]
  41e98c:	xchg   DWORD PTR [rcx],esi
  41e98e:	add    BYTE PTR [rax],al
  41e990:	jnp    0x41ea0b
  41e992:	jno    0x41e9cb
  41e994:	fwait
  41e995:	js     0x41e9c7
  41e997:	(bad)  
  41e998:	jns    0x41e9cb
  41e99a:	add    DWORD PTR [rbx],esi
  41e99c:	cmp    DWORD PTR [rcx],0x77
  41e99f:	add    BYTE PTR [rbx-0x64c8ce8d],cl
  41e9a5:	jnp    0x41e9d7
  41e9a7:	or     BYTE PTR [rdi+0x739b3388],cl
  41e9ad:	mov    BYTE PTR [rdi-0x47777500],al
  41e9b3:	(bad)  
  41e9b4:	mov    BYTE PTR [rdi-0x74ffff50],dh
  41e9ba:	jo     0x41e9bc
  41e9bc:	mov    eax,0x80
  41e9c1:	add    BYTE PTR [rax],al
  41e9c3:	add    BYTE PTR [rax],al
  41e9c5:	add    BYTE PTR [rax],al
  41e9c7:	inc    BYTE PTR [rcx]
  41e9c9:	add    BYTE PTR [rax],al
  41e9cb:	cld    
  41e9cc:	add    DWORD PTR [rax],eax
  41e9ce:	add    al,dh
  41e9d0:	add    DWORD PTR [rax],eax
  41e9d2:	add    al,ah
  41e9d4:	add    DWORD PTR [rax],eax
  41e9d6:	add    al,ah
  41e9d8:	add    DWORD PTR [rax],eax
  41e9da:	add    al,ah
  41e9dc:	add    DWORD PTR [rax],eax
  41e9de:	add    al,ah
  41e9e0:	add    DWORD PTR [rax],eax
  41e9e2:	add    al,ah
  41e9e4:	add    DWORD PTR [rax],eax
  41e9e6:	add    al,ah
  41e9e8:	add    eax,DWORD PTR [rax]
  41e9ea:	add    al,al
  41e9ec:	add    DWORD PTR [rax],eax
  41e9ee:	add    BYTE PTR [rax-0x40000000],al
  41e9f4:	add    DWORD PTR [rax],eax
  41e9f6:	add    BYTE PTR [rax-0x40000000],al
  41e9fc:	add    DWORD PTR [rax],0xc7f100
  41ea02:	add    bh,bh
  41ea04:	inc    DWORD PTR [rax]
  41ea06:	add    BYTE PTR [rax],ch
  41ea08:	add    BYTE PTR [rax],al
  41ea0a:	add    BYTE PTR [rax],ah
  41ea0c:	add    BYTE PTR [rax],al
  41ea0e:	add    BYTE PTR [rax+0x0],al
  41ea11:	add    BYTE PTR [rax],al
  41ea13:	add    DWORD PTR [rax],eax
  41ea15:	or     BYTE PTR [rax],al
  41ea17:	add    BYTE PTR [rax],al
  41ea19:	add    BYTE PTR [rax],al
  41ea1b:	add    BYTE PTR [rax+rax*1],al
	...
  41ea26:	add    BYTE PTR [rax],al
  41ea28:	add    DWORD PTR [rax],eax
  41ea2a:	add    BYTE PTR [rax],al
  41ea2c:	add    DWORD PTR [rax],eax
  41ea2e:	add    BYTE PTR [rax],al
  41ea30:	add    BYTE PTR [rax],al
  41ea32:	add    BYTE PTR [rbx],dh
  41ea34:	xor    esi,DWORD PTR [rbx]
  41ea36:	add    BYTE PTR [rbx],dh
  41ea38:	xor    ax,WORD PTR [rax]
  41ea3b:	add    BYTE PTR [rbx],dh
  41ea3d:	data16 add BYTE PTR [rbx],dh
  41ea40:	xor    esp,DWORD PTR [rsi+0x0]
  41ea43:	add    BYTE PTR [rsi+0x66],ah
  41ea46:	add    BYTE PTR [rbx],dh
  41ea48:	data16 data16 add BYTE PTR [rsi+0x66],ah
  41ea4d:	data16 add BYTE PTR [rbx],dh
  41ea50:	cdq    
  41ea51:	xor    eax,DWORD PTR [rax]
  41ea53:	xor    ebx,DWORD PTR [rcx-0x6699ff9a]
  41ea59:	data16 add BYTE PTR [rsi-0x34],ah
  41ea5d:	data16 add BYTE PTR [rax],al
  41ea60:	cwd    
  41ea62:	add    BYTE PTR [rbx],dh
  41ea64:	cwd    
  41ea66:	add    BYTE PTR [rbx],dh
  41ea68:	cdq    
  41ea69:	cdq    
  41ea6a:	add    BYTE PTR [rsi-0x67],ah
  41ea6d:	cdq    
  41ea6e:	add    BYTE PTR [rsi-0x34],ah
  41ea71:	cdq    
  41ea72:	add    BYTE PTR [rbx],dh
  41ea74:	cdq    
  41ea75:	int3   
  41ea76:	add    BYTE PTR [rsi-0x67],ah
  41ea79:	int3   
  41ea7a:	add    BYTE PTR [rsi-0x34],ah
  41ea7d:	int3   
  41ea7e:	add    BYTE PTR [rax-0x66ff5257],dl
  41ea84:	int3   
  41ea85:	cdq    
  41ea86:	add    BYTE PTR [rcx-0x66ff3367],bl
  41ea8c:	int3   
  41ea8d:	int3   
  41ea8e:	add    BYTE PTR [rcx-0x3fff0034],bl
  41ea94:	rol    al,0x0
  41ea97:	int3   
  41ea98:	int3   
  41ea99:	int3   
  41ea9a:	add    al,al
  41ea9c:	fadd   st(0),st
  41ea9e:	add    bh,dl
  41eaa0:	xlat   BYTE PTR ds:[rbx]
  41eaa1:	xlat   BYTE PTR ds:[rbx]
  41eaa2:	add    ch,bl
  41eaa4:	fstp   st(5)
  41eaa6:	add    dh,al
  41eaa8:	(bad)  
  41eaa9:	out    dx,eax
  41eaaa:	add    dh,dl
  41eaac:	out    0xe7,eax
  41eaae:	add    ah,cl
  41eab0:	(bad)  
  41eab1:	inc    DWORD PTR [rax]
  41eab3:	jrcxz  0x41ea98
  41eab5:	jrcxz  0x41eab7
  41eab7:	icebp  
  41eab8:	icebp  
  41eab9:	icebp  
  41eaba:	add    al,dh
  41eabc:	sti    
  41eabd:	inc    DWORD PTR [rax]
	...
  41ee2b:	(bad)  
  41ee2c:	(bad)  
  41ee2d:	inc    DWORD PTR [rax]
	...
  41ee3b:	add    BYTE PTR [rax],al
  41ee3d:	or     BYTE PTR [rdx],al
  41ee3f:	add    al,BYTE PTR [rdx]
  41ee41:	add    al,BYTE PTR [rdx]
  41ee43:	add    al,BYTE PTR [rdx]
  41ee45:	add    al,BYTE PTR [rdx]
  41ee47:	add    al,BYTE PTR [rdx]
  41ee49:	add    al,BYTE PTR [rdx]
  41ee4b:	add    al,BYTE PTR [rdx]
	...
  41ee5d:	or     BYTE PTR [rdx],cl
  41ee5f:	or     cl,BYTE PTR [rcx]
  41ee61:	or     DWORD PTR [rcx],ecx
  41ee63:	or     BYTE PTR [rax],cl
  41ee65:	or     BYTE PTR [rax],cl
  41ee67:	or     BYTE PTR [rax],cl
  41ee69:	or     BYTE PTR [rax],cl
  41ee6b:	or     BYTE PTR [rdx],al
	...
  41ee7d:	or     BYTE PTR [rbx],bl
  41ee7f:	or     ecx,DWORD PTR [rdx]
  41ee81:	or     DWORD PTR [rdx],eax
  41ee83:	or     cl,BYTE PTR [rdx]
  41ee85:	or     DWORD PTR [rcx],ecx
  41ee87:	or     BYTE PTR [rcx],cl
  41ee89:	or     BYTE PTR [rcx],cl
  41ee8b:	or     BYTE PTR [rdx],al
	...
  41ee9d:	or     BYTE PTR [rbx],bl
  41ee9f:	adc    BYTE PTR [rdx],cl
  41eea1:	add    bl,BYTE PTR [rcx]
  41eea3:	add    cl,BYTE PTR [rcx]
  41eea5:	or     cl,BYTE PTR [rax]
  41eea7:	or     DWORD PTR [rax],ecx
  41eea9:	or     DWORD PTR [rax],ecx
  41eeab:	or     BYTE PTR [rdx],al
	...
  41eebd:	or     BYTE PTR [rbx],bl
  41eebf:	adc    BYTE PTR [rdx],al
  41eec1:	sbb    eax,0xa021919
  41eec6:	or     DWORD PTR [rdi],eax
  41eec8:	add    cl,BYTE PTR [rcx]
  41eeca:	or     DWORD PTR [rax],ecx
  41eecc:	add    al,BYTE PTR [rax]
	...
  41eeda:	add    BYTE PTR [rax],al
  41eedc:	add    BYTE PTR [rdx],cl
  41eede:	sbb    edx,DWORD PTR [rip+0x1a22ffff]        # 0x1a64eee3
  41eee4:	sbb    DWORD PTR [rdx],eax
  41eee6:	add    DWORD PTR [rdx],ebx
  41eee8:	sbb    DWORD PTR [rax],ecx
  41eeea:	or     DWORD PTR [rax],ecx
  41eeec:	add    al,BYTE PTR [rax]
	...
  41eefa:	add    BYTE PTR [rsp+rax*1],al
  41eefd:	or     bl,BYTE PTR [rbx]
  41eeff:	adc    eax,0xffffff10
  41ef04:	sbb    al,0x19
  41ef06:	sbb    al,0x1c
  41ef08:	sbb    DWORD PTR [rax],ecx
  41ef0a:	or     DWORD PTR [rax],ecx
  41ef0c:	add    al,BYTE PTR [rax]
	...
  41ef16:	add    BYTE PTR [rax],al
  41ef18:	add    BYTE PTR [rip+0x90f120d],cl        # 0x951012b
  41ef1e:	sbb    edx,DWORD PTR [rip+0xffffffffffff0b10]        # 0x40fa34
  41ef24:	jmp    QWORD PTR [rdx]
  41ef26:	and    ah,BYTE PTR [rdx]
  41ef28:	sbb    cl,BYTE PTR [rcx]
  41ef2a:	or     cl,BYTE PTR [rax]
  41ef2c:	add    al,BYTE PTR [rax]
	...
  41ef36:	add    BYTE PTR [rdi],cl
  41ef38:	or     eax,0x120f1f1f
  41ef3d:	or     bl,BYTE PTR [rbx]
  41ef3f:	adc    eax,0xff0a1015
  41ef44:	and    bh,bh
  41ef46:	jmp    QWORD PTR [rdx]
  41ef48:	sbb    cl,BYTE PTR [rdx]
  41ef4a:	or     DWORD PTR [rax],ecx
  41ef4c:	add    al,BYTE PTR [rax]
  41ef4e:	add    BYTE PTR [rax],al
  41ef50:	add    BYTE PTR [rax],al
  41ef52:	add    BYTE PTR [rax],al
  41ef54:	add    BYTE PTR [rdi],cl
  41ef56:	movlps xmm3,QWORD PTR [rdi]
  41ef59:	(bad)  
  41ef5a:	(bad)  
  41ef5b:	adc    dl,BYTE PTR [rdx]
  41ef5d:	or     bl,BYTE PTR [rbx]
  41ef5f:	adc    eax,0xff060a15
  41ef64:	and    bh,bh
  41ef66:	and    esp,DWORD PTR [rdx]
  41ef68:	sbb    al,0xa
  41ef6a:	or     cl,BYTE PTR [rcx]
  41ef6c:	add    al,BYTE PTR [rax]
  41ef6e:	add    BYTE PTR [rax],al
  41ef70:	add    BYTE PTR [rax],al
  41ef72:	add    BYTE PTR [rax],al
  41ef74:	movlps xmm2,QWORD PTR [rdi]
  41ef77:	(bad)  
  41ef78:	and    ebx,DWORD PTR [rdi]
  41ef7a:	(bad)  
  41ef7b:	(bad)  
  41ef7c:	adc    cl,BYTE PTR [rdx]
  41ef7e:	sbb    edx,DWORD PTR [rip+0xffffffffffff1015]        # 0x40ff99
  41ef84:	(bad)  
  41ef85:	(bad)  
  41ef86:	(bad)  
  41ef87:	jmp    QWORD PTR [rcx]
  41ef89:	or     cl,BYTE PTR [rbx]
  41ef8b:	or     DWORD PTR [rdx],eax
  41ef8d:	add    BYTE PTR [rax],al
  41ef8f:	add    BYTE PTR [rax],al
  41ef91:	add    BYTE PTR [rax],al
  41ef93:	add    BYTE PTR [rdi],cl
  41ef95:	sbb    BYTE PTR [rdx],dl
  41ef97:	adc    ah,BYTE PTR [rbx]
  41ef99:	(bad)  
  41ef9a:	(bad)  
  41ef9b:	adc    dl,BYTE PTR [rdi]
  41ef9d:	or     bl,BYTE PTR [rbx]
  41ef9f:	adc    eax,0xffff1015
  41efa4:	(bad)  
  41efa5:	(bad)  
  41efa6:	(bad)  
  41efa7:	(bad)  
  41efa8:	dec    DWORD PTR [rbx]
  41efaa:	or     cl,BYTE PTR [rcx]
  41efac:	add    al,BYTE PTR [rax]
  41efae:	add    BYTE PTR [rax],al
  41efb0:	add    BYTE PTR [rax],al
  41efb2:	add    BYTE PTR [rax],al
  41efb4:	movhps QWORD PTR [rdi],xmm2
  41efb7:	(bad)  
  41efb8:	and    ebx,DWORD PTR [rdi]
  41efba:	(bad)  
  41efbb:	(bad)  
  41efbc:	adc    cl,BYTE PTR [rdx]
  41efbe:	sbb    edx,DWORD PTR [rip+0x15151515]        # 0x155704d9
  41efc4:	adc    eax,0x15151515
  41efc9:	adc    eax,0x20a0b
  41efce:	add    BYTE PTR [rax],al
  41efd0:	add    BYTE PTR [rax],al
  41efd2:	add    BYTE PTR [rax],al
  41efd4:	prefetcht1 BYTE PTR [rdx]
  41efd7:	(bad)  
  41efd8:	and    ebx,DWORD PTR [rdi]
  41efda:	sbb    BYTE PTR [rdx],dl
  41efdc:	(bad)  
  41efdd:	or     bl,BYTE PTR [rbx]
  41efdf:	sbb    ebx,DWORD PTR [rbx]
  41efe1:	sbb    ebx,DWORD PTR [rbx]
  41efe3:	sbb    ebx,DWORD PTR [rbx]
  41efe5:	sbb    ebx,DWORD PTR [rbx]
  41efe7:	sbb    ebx,DWORD PTR [rbx]
  41efe9:	sbb    ebx,DWORD PTR [rbx]
  41efeb:	or     eax,DWORD PTR [rdx]
  41efed:	add    BYTE PTR [rax],al
  41efef:	add    BYTE PTR [rax],al
  41eff1:	add    BYTE PTR [rax],al
  41eff3:	add    BYTE PTR [rdi],cl
  41eff5:	sbb    BYTE PTR [rdi],dl
  41eff7:	sbb    BYTE PTR [rdi],bl
  41eff9:	(bad)  
  41effa:	(bad)  
  41effb:	(bad)  
  41effc:	adc    cl,BYTE PTR [rdx]
  41effe:	or     cl,BYTE PTR [rdx]
  41f000:	or     cl,BYTE PTR [rdx]
  41f002:	or     cl,BYTE PTR [rdx]
  41f004:	or     cl,BYTE PTR [rdx]
  41f006:	or     BYTE PTR [rdx],cl
  41f008:	or     BYTE PTR [rdx],cl
  41f00a:	or     BYTE PTR [rax],cl
  41f00c:	or     BYTE PTR [rax],al
  41f00e:	add    BYTE PTR [rax],al
  41f010:	add    BYTE PTR [rax],al
  41f012:	add    BYTE PTR [rax],al
  41f014:	movhps QWORD PTR [rax],xmm3
  41f017:	(bad)  
  41f018:	(bad)  
  41f019:	sbb    BYTE PTR [rdi],dl
  41f01b:	sbb    BYTE PTR [rbx],dl
  41f01d:	(bad)  
  41f01e:	adc    al,BYTE PTR [rsi]
  41f020:	add    ecx,DWORD PTR [rip+0xd060d06]        # 0xd47fd2c
  41f026:	or     eax,0x40d0d0d
	...
  41f033:	add    BYTE PTR [rdi],cl
  41f035:	sbb    BYTE PTR [rdi],dl
  41f037:	sbb    BYTE PTR [rsi],bl
  41f039:	and    esp,DWORD PTR [rbx]
  41f03b:	(bad)  
  41f03c:	sbb    BYTE PTR [rdi],dl
  41f03e:	(bad)  
  41f03f:	(bad)  
  41f040:	add    eax,DWORD PTR [rsi]
  41f042:	or     eax,0x60d0d06
  41f047:	or     eax,0x40d0d
	...
  41f054:	prefetcht1 BYTE PTR [rdi]
  41f057:	sbb    BYTE PTR [rdi],bl
  41f059:	and    esp,DWORD PTR [rbx]
  41f05b:	(bad)  
  41f05c:	(bad)  
  41f05d:	sbb    BYTE PTR [rdi],dl
  41f05f:	(bad)  
  41f060:	add    eax,DWORD PTR [rbx]
  41f062:	add    ecx,DWORD PTR [rip+0xc060d0d]        # 0xc47fd75
  41f068:	or     eax,0x40d
  41f06d:	add    BYTE PTR [rax],al
  41f06f:	add    BYTE PTR [rax],al
  41f071:	add    BYTE PTR [rax],al
  41f073:	add    BYTE PTR [rdi],cl
  41f075:	(bad)  
  41f076:	sbb    BYTE PTR [rdi],dl
  41f078:	and    esp,DWORD PTR [rbx]
  41f07a:	(bad)  
  41f07b:	sbb    BYTE PTR [rax],bl
  41f07d:	(bad)  
  41f07e:	(bad)  
  41f07f:	(bad)  
  41f080:	(bad)  
  41f081:	(bad)  
  41f082:	clts   
  41f084:	add    eax,DWORD PTR [rbx]
  41f086:	or     al,0x6
  41f088:	or     eax,0x405
  41f08d:	add    BYTE PTR [rax],al
  41f08f:	add    BYTE PTR [rax],al
  41f091:	add    BYTE PTR [rax],al
  41f093:	add    BYTE PTR [rdi],cl
  41f095:	sbb    BYTE PTR [rax],bl
  41f097:	(bad)  
  41f098:	(bad)  
  41f099:	adc    dl,BYTE PTR [rdx]
  41f09b:	(bad)  
  41f09c:	prefetchwt1 BYTE PTR [rcx]
  41f09f:	or     eax,0xf171712
  41f0a4:	(bad)  
  41f0a5:	lsl    eax,WORD PTR [rbx]
  41f0a8:	add    eax,DWORD PTR [rip+0x4]        # 0x41f0b2
  41f0ae:	add    BYTE PTR [rax],al
  41f0b0:	add    BYTE PTR [rax],al
  41f0b2:	add    BYTE PTR [rax],al
  41f0b4:	movhps QWORD PTR [rdx],xmm2
  41f0b7:	adc    cl,BYTE PTR [rdi]
  41f0b9:	(bad)  
  41f0ba:	(bad)  
  41f0bb:	(bad)  
  41f0bc:	sbb    BYTE PTR [rdx],dl
  41f0be:	adc    cl,BYTE PTR [rip+0x1717120e]        # 0x175902d2
  41f0c4:	sbb    BYTE PTR [rdi],dl
  41f0c6:	adc    al,0xf
  41f0c8:	lsl    eax,WORD PTR [rax+rax*1]
  41f0cc:	add    BYTE PTR [rax],al
  41f0ce:	add    BYTE PTR [rax],al
  41f0d0:	add    BYTE PTR [rax],al
  41f0d2:	add    BYTE PTR [rdx],dl
  41f0d4:	adc    dl,BYTE PTR [rdx]
  41f0d6:	adc    bl,BYTE PTR [rsi]
  41f0d8:	(bad)  
  41f0d9:	(bad)  
  41f0da:	adc    al,0x12
  41f0dc:	adc    dl,BYTE PTR [rdx]
  41f0de:	or     eax,0x1212120d
  41f0e3:	movlps xmm2,QWORD PTR [rdi]
  41f0e6:	sbb    BYTE PTR [rdi],dl
  41f0e8:	adc    cl,BYTE PTR [rdi]
  41f0ea:	(bad)  
  41f0eb:	sldt   WORD PTR [rax]
  41f0ee:	add    BYTE PTR [rax],al
  41f0f0:	add    BYTE PTR [rdx],dl
  41f0f2:	adc    ah,BYTE PTR [rax]
  41f0f4:	(bad)  
  41f0f5:	(bad)  
  41f0f6:	(bad)  
  41f0f7:	(bad)  
  41f0f8:	adc    dl,BYTE PTR [rdx]
  41f0fa:	adc    cl,BYTE PTR [rip+0xd0d0d0d]        # 0xd4efe0d
  41f100:	adc    dl,BYTE PTR [rdx]
  41f102:	adc    dl,BYTE PTR [rdx]
  41f104:	adc    dl,BYTE PTR [rdx]
  41f106:	movlps xmm3,QWORD PTR [rax]
  41f109:	(bad)  
  41f10a:	adc    dl,BYTE PTR [rdi+rcx*1]
  41f10d:	add    BYTE PTR [rax],al
  41f10f:	add    BYTE PTR [rdx],dl
  41f111:	adc    dl,BYTE PTR [rdx]
  41f113:	adc    dl,BYTE PTR [rdx]
  41f115:	adc    dl,BYTE PTR [rdx]
  41f117:	adc    cl,BYTE PTR [rip+0xd0d0d0d]        # 0xd4efe2a
  41f11d:	or     eax,0x12120d0d
  41f122:	adc    dl,BYTE PTR [rdx]
  41f124:	adc    dl,BYTE PTR [rdx]
  41f126:	adc    dl,BYTE PTR [rdx]
  41f128:	movlps xmm1,QWORD PTR [rdi]
  41f12b:	(bad)  
  41f12c:	(bad)  
  41f12d:	sldt   WORD PTR [rax]
  41f130:	add    BYTE PTR [rax],al
  41f132:	add    BYTE PTR [rax],al
  41f134:	(bad)  
  41f135:	movlps xmm1,QWORD PTR [rsi]
  41f138:	or     eax,0xd0d0d0d
  41f13d:	or     eax,0x13120d0d
  41f142:	adc    dl,BYTE PTR [rbx]
  41f144:	adc    dl,BYTE PTR [rbx]
  41f146:	adc    cl,BYTE PTR [rdi]
  41f148:	adc    cl,BYTE PTR [rdi]
  41f14a:	adc    al,BYTE PTR [rax]
  41f14c:	add    BYTE PTR [rax],al
  41f14e:	add    BYTE PTR [rax],al
  41f150:	add    BYTE PTR [rax],al
  41f152:	add    BYTE PTR [rdx],dl
  41f154:	adc    ebx,DWORD PTR [rax]
  41f156:	(bad)  
  41f157:	adc    dl,BYTE PTR [rdx]
  41f159:	prefetchw BYTE PTR [rip+0xd0d0d0d]        # 0xd4efe6d
  41f160:	adc    dl,BYTE PTR [rdx]
  41f162:	adc    dl,BYTE PTR [rdx]
  41f164:	adc    dl,BYTE PTR [rdx]
  41f166:	adc    dl,BYTE PTR [rdx]
  41f168:	adc    edx,DWORD PTR [rdx]
  41f16a:	adc    dl,BYTE PTR [rdx]
  41f16c:	add    BYTE PTR [rax],al
  41f16e:	add    BYTE PTR [rax],al
  41f170:	add    BYTE PTR [rax],al
  41f172:	adc    bl,BYTE PTR [rsi]
  41f174:	(bad)  
  41f175:	(bad)  
  41f176:	sbb    BYTE PTR [rdi],dl
  41f178:	sbb    BYTE PTR [rdx],dl
  41f17a:	(bad)  
  41f17b:	(bad)  
  41f17c:	(bad)  
  41f17d:	or     eax,0x13120d0d
  41f182:	adc    dl,BYTE PTR [rdx]
  41f184:	adc    edx,DWORD PTR [rdx]
  41f186:	adc    dl,BYTE PTR [rbx]
  41f188:	adc    dl,BYTE PTR [rdi]
  41f18a:	(bad)  
  41f18b:	adc    dl,BYTE PTR [rdx]
  41f18d:	add    BYTE PTR [rax],al
  41f18f:	add    BYTE PTR [rax],al
  41f191:	adc    bl,BYTE PTR [rsi]
  41f193:	and    BYTE PTR [rax],ah
  41f195:	(bad)  
  41f196:	(bad)  
  41f197:	sbb    BYTE PTR [rdi],dl
  41f199:	(bad)  
  41f19a:	adc    edx,DWORD PTR [rdx]
  41f19c:	adc    cl,BYTE PTR [rsi]
  41f19e:	(bad)  
  41f19f:	(bad)  
  41f1a0:	adc    dl,BYTE PTR [rdx]
  41f1a2:	adc    dl,BYTE PTR [rbx]
  41f1a4:	adc    dl,BYTE PTR [rbx]
  41f1a6:	sbb    BYTE PTR [rdi],dl
  41f1a8:	(bad)  
  41f1a9:	sbb    BYTE PTR [rdi],dl
  41f1ab:	sbb    BYTE PTR [rdi],dl
  41f1ad:	adc    al,BYTE PTR [rax]
  41f1af:	add    BYTE PTR [rax],al
  41f1b1:	adc    dl,BYTE PTR [rdx]
  41f1b3:	(bad)  
  41f1b4:	(bad)  
  41f1b5:	and    BYTE PTR [rdi],bl
  41f1b7:	and    BYTE PTR [rsi],bl
  41f1b9:	sbb    BYTE PTR [rax],bl
  41f1bb:	(bad)  
  41f1bc:	adc    edx,DWORD PTR [rdx]
  41f1be:	adc    dl,BYTE PTR [rdx]
  41f1c0:	movlps QWORD PTR [rdx],xmm2
  41f1c3:	(bad)  
  41f1c4:	(bad)  
  41f1c5:	(bad)  
  41f1c6:	(bad)  
  41f1c7:	sbb    BYTE PTR [rax],bl
  41f1c9:	(bad)  
  41f1ca:	(bad)  
  41f1cb:	(bad)  
  41f1cc:	adc    dl,BYTE PTR [rdx]
  41f1ce:	add    BYTE PTR [rax],al
  41f1d0:	add    BYTE PTR [rax],al
  41f1d2:	add    BYTE PTR [rdx],dl
  41f1d4:	adc    dl,BYTE PTR [rdx]
  41f1d6:	(bad)  
  41f1d7:	(bad)  
  41f1d8:	(bad)  
  41f1d9:	(bad)  
  41f1da:	sbb    BYTE PTR [rdi],dl
  41f1dc:	sbb    BYTE PTR [rdi],dl
  41f1de:	adc    cl,BYTE PTR [rdi]
  41f1e0:	adc    dl,BYTE PTR [rax+rbx*1]
  41f1e3:	(bad)  
  41f1e4:	sbb    BYTE PTR [rax],bl
  41f1e6:	(bad)  
  41f1e7:	(bad)  
  41f1e8:	(bad)  
  41f1e9:	adc    dl,BYTE PTR [rdx]
  41f1eb:	adc    al,BYTE PTR [rax]
	...
  41f1f5:	add    BYTE PTR [rdx],dl
  41f1f7:	adc    dl,BYTE PTR [rdx]
  41f1f9:	(bad)  
  41f1fa:	(bad)  
  41f1fb:	sbb    BYTE PTR [rdi],dl
  41f1fd:	adc    al,BYTE PTR [rax]
  41f1ff:	add    BYTE PTR [rax],al
  41f201:	adc    dl,BYTE PTR [rdx]
  41f203:	(bad)  
  41f204:	(bad)  
  41f205:	(bad)  
  41f206:	(bad)  
  41f207:	adc    dl,BYTE PTR [rdx]
	...
  41f219:	adc    dl,BYTE PTR [rdx]
  41f21b:	(bad)  
  41f21c:	adc    al,BYTE PTR [rax]
  41f21e:	add    BYTE PTR [rax],al
  41f220:	add    BYTE PTR [rax],al
  41f222:	add    BYTE PTR [rdx],dl
  41f224:	adc    dl,BYTE PTR [rdx]
  41f226:	adc    al,BYTE PTR [rax]
  41f228:	add    BYTE PTR [rax],al
  41f22a:	add    BYTE PTR [rax],al
  41f22c:	add    BYTE PTR [rax],al
  41f22e:	add    bh,bh
  41f230:	cld    
  41f231:	add    BYTE PTR [rbx],al
  41f233:	(bad)  
  41f234:	cld    
  41f235:	add    BYTE PTR [rbx],al
  41f237:	(bad)  
  41f238:	cld    
  41f239:	add    BYTE PTR [rbx],al
  41f23b:	(bad)  
  41f23c:	cld    
  41f23d:	add    BYTE PTR [rbx],al
  41f23f:	(bad)  
  41f240:	cld    
  41f241:	add    BYTE PTR [rbx],al
  41f243:	(bad)  
  41f244:	cld    
  41f245:	add    BYTE PTR [rbx],al
  41f247:	push   rax
  41f249:	add    BYTE PTR [rbx],al
  41f24b:	inc    eax
  41f24d:	add    BYTE PTR [rbx],al
  41f24f:	inc    DWORD PTR [rax]
  41f251:	add    BYTE PTR [rbx],al
  41f253:	cld    
  41f254:	add    BYTE PTR [rax],al
  41f256:	add    edi,eax
  41f258:	add    BYTE PTR [rax],al
  41f25a:	add    edi,eax
  41f25c:	add    BYTE PTR [rax],al
  41f25e:	add    edi,eax
  41f260:	add    BYTE PTR [rax],al
  41f262:	add    edi,eax
  41f264:	add    BYTE PTR [rax],al
  41f266:	add    edi,eax
  41f268:	add    BYTE PTR [rax],al
  41f26a:	add    edi,eax
  41f26c:	add    BYTE PTR [rax],al
  41f26e:	psubb  mm0,QWORD PTR [rax]
  41f271:	add    BYTE PTR [rdi],cl
  41f273:	clc    
  41f274:	add    BYTE PTR [rax],al
  41f276:	psubb  mm0,QWORD PTR [rax]
  41f279:	add    BYTE PTR [rdi],cl
  41f27b:	clc    
  41f27c:	add    BYTE PTR [rax],al
  41f27e:	psubb  mm0,QWORD PTR [rax]
  41f281:	add    BYTE PTR [rdi],cl
  41f283:	lock add BYTE PTR [rax],al
  41f286:	(bad)  
  41f287:	rol    BYTE PTR [rax],0x0
  41f28a:	add    eax,DWORD PTR [rax-0x7ff0000]
  41f290:	add    BYTE PTR [rax],al
  41f292:	(bad)  
  41f294:	add    BYTE PTR [rax],al
  41f296:	(bad)  
  41f297:	loopne 0x41f299
  41f299:	add    BYTE PTR [rbx],al
  41f29b:	rol    BYTE PTR [rax],0x0
  41f29e:	add    eax,eax
  41f2a0:	add    BYTE PTR [rax],al
  41f2a2:	add    eax,esi
  41f2a4:	add    BYTE PTR [rax],al
  41f2a6:	(bad)  
  41f2a7:	inc    BYTE PTR [rcx]
  41f2a9:	sar    BYTE PTR [rdi],0xff
  41f2ac:	ret    
  41f2ad:	lock jmp FWORD PTR [rax]
  41f2b0:	add    BYTE PTR [rax],al
  41f2b2:	add    BYTE PTR [rax],dl
  41f2b4:	add    BYTE PTR [rax],al
  41f2b6:	add    BYTE PTR [rax],ah
  41f2b8:	add    BYTE PTR [rax],al
  41f2ba:	add    BYTE PTR [rcx],al
  41f2bc:	add    BYTE PTR [rax],cl
  41f2be:	add    BYTE PTR [rax],al
  41f2c0:	add    BYTE PTR [rax],al
  41f2c2:	add    BYTE PTR [rax],al
  41f2c4:	add    DWORD PTR [rax],eax
	...
  41f2ce:	add    BYTE PTR [rax],al
  41f2d0:	add    DWORD PTR [rax],eax
  41f2d2:	add    BYTE PTR [rax],al
  41f2d4:	add    DWORD PTR [rax],eax
  41f2d6:	add    BYTE PTR [rax],al
  41f2d8:	add    BYTE PTR [rax],al
  41f2da:	add    BYTE PTR [rax+rdx*2],cl
  41f2dd:	sbb    al,BYTE PTR [rax]
  41f2df:	sbb    ah,BYTE PTR [rbx+0x2a]
  41f2e2:	add    BYTE PTR [rdx+rsi*2],al
  41f2e5:	and    eax,0x2a7d0c00
  41f2ea:	add    BYTE PTR [rdx],dl
  41f2ec:	jg     0x41f31f
  41f2ee:	add    BYTE PTR [rcx],ah
  41f2f0:	ins    BYTE PTR es:[rdi],dx
  41f2f1:	xor    BYTE PTR [rax],al
  41f2f3:	(bad)  
  41f2f4:	gs cmp al,0x0
  41f2f7:	xor    esp,DWORD PTR [rdx+0x3f]
  41f2fa:	add    BYTE PTR [rax],ch
  41f2fc:	je     0x41f334
  41f2fe:	add    BYTE PTR [rdx],ch
  41f300:	je     0x41f33a
  41f302:	add    BYTE PTR [rax],al
  41f304:	sbb    al,0x4b
  41f306:	add    BYTE PTR [rax],al
  41f308:	and    DWORD PTR [rax+rax*1+0x7],edx
  41f30c:	es push rsp
  41f30e:	add    BYTE PTR [rax],al
  41f310:	(bad)  
  41f311:	pop    rdx
  41f312:	add    BYTE PTR [rax],al
  41f314:	sub    DWORD PTR [rdx+0x0],ebx
  41f317:	add    edi,DWORD PTR [rax+rsi*2]
  41f31a:	add    BYTE PTR [rip+0x35004076],ch        # 0x35423396
  41f320:	jbe    0x41f367
  41f322:	add    BYTE PTR [rax],al
  41f324:	rex.B outs dx,DWORD PTR ds:[rsi]
  41f326:	add    BYTE PTR [rbx],al
  41f328:	rex.X jne 0x41f32b
  41f32b:	or     eax,0x14002d82
  41f330:	xchg   BYTE PTR [rip+0x35801a00],dh        # 0x35c20d36
  41f336:	add    BYTE PTR [rdx],bl
  41f338:	mov    DWORD PTR [rdi],esi
  41f33a:	add    BYTE PTR [rip+0x34003f8e],ah        # 0x344232ce
  41f340:	add    DWORD PTR [rax+0x0],0x38
  41f344:	mov    WORD PTR [rbp+0x0],es
  41f347:	(bad)  
  41f348:	or     DWORD PTR [rax+0x0],0x45
  41f34c:	mov    dl,BYTE PTR [rdi+0x0]
  41f34f:	push   rdx
  41f350:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  41f351:	push   0x0
  41f353:	pop    rdx
  41f354:	mov    dh,0x6b
  41f356:	add    BYTE PTR [rcx-0x4a],bl
  41f359:	outs   dx,BYTE PTR ds:[rsi]
  41f35a:	add    BYTE PTR [rcx+rbp*4+0x68],ah
  41f35e:	add    BYTE PTR [rcx-0x40],ah
  41f361:	js     0x41f363
  41f363:	or     al,0x52
  41f365:	mov    BYTE PTR [rax],al
  41f367:	or     BYTE PTR [rdi-0x77],dl
  41f36a:	add    BYTE PTR [rip+0xe008a5c],cl        # 0xe427dcc
  41f370:	pop    rsi
  41f371:	mov    es,WORD PTR [rax]
  41f373:	sbb    edx,DWORD PTR [rbp-0x7c]
  41f376:	add    BYTE PTR [rdi],dl
  41f378:	(bad)  
  41f379:	pop    QWORD PTR [rax]
  41f37b:	adc    BYTE PTR [rcx-0x70],ah
  41f37e:	add    BYTE PTR [rsp+riz*2],dl
  41f381:	xchg   edi,eax
  41f382:	add    BYTE PTR [rbx],dl
  41f384:	imul   ebx,DWORD PTR [rsi-0x7098d100],0x9d722200
  41f38e:	add    BYTE PTR [rdx],ah
  41f390:	ja     0x41f339
  41f392:	add    BYTE PTR [rdx],ch
  41f394:	js     0x41f33a
  41f396:	add    BYTE PTR [rdi],dh
  41f398:	jnp    0x41f341
  41f39a:	add    BYTE PTR [rax+0x75],al
  41f39d:	cdq    
  41f39e:	add    BYTE PTR [rcx+rax*4],ch
  41f3a1:	scas   eax,DWORD PTR es:[rdi]
  41f3a2:	add    BYTE PTR [rip+0x2a00b181],ch        # 0x2a42a529
  41f3a8:	xor    DWORD PTR [rbp-0x457bde00],0xb9882d00
  41f3b2:	add    BYTE PTR [rip+0x3400bf8d],ch        # 0x3442b345
  41f3b8:	mov    bh,BYTE PTR [rcx-0x4372c500]
  41f3be:	add    BYTE PTR [rbp+rsi*4-0x75],bh
  41f3c2:	add    BYTE PTR [rax-0x80],cl
  41f3c5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  41f3c6:	add    BYTE PTR [rbp-0x7d],al
  41f3c9:	stos   DWORD PTR es:[rdi],eax
  41f3ca:	add    BYTE PTR [rbx-0x78],cl
  41f3cd:	lods   al,BYTE PTR ds:[rsi]
  41f3ce:	add    BYTE PTR [rcx-0x78],al
  41f3d1:	mov    cl,0x0
  41f3d3:	rex.RB mov ?,WORD PTR [r14-0x446cba00]
  41f3da:	add    BYTE PTR [rdi-0x6b],al
  41f3dd:	mov    ebp,0xb9934b00
  41f3e2:	add    BYTE PTR [rbp-0x66],dl
  41f3e5:	mov    edi,0xb2986800
  41f3ea:	add    BYTE PTR [rdx-0x65],ah
  41f3ed:	mov    ebx,0x8ccf7a00
  41f3f2:	add    BYTE PTR [rdi+rcx*4],dh
  41f3f5:	rol    DWORD PTR [rax],0x33
  41f3f8:	xchg   edx,eax
  41f3f9:	(bad)
  41f3fc:	xchg   ebp,eax
  41f3fd:	(bad)  
  41f3fe:	add    BYTE PTR [rbx-0x67],al
  41f401:	mov    DWORD PTR [rax],0xc1984b
  41f407:	rex.B (bad) 
  41f409:	enter  0x5200,0x9a
  41f40d:	ret    
  41f40e:	add    BYTE PTR [rbp-0x63],dl
  41f411:	(bad)  
  41f412:	add    BYTE PTR [rdi-0x67],bl
  41f415:	rol    DWORD PTR [rax],0x5b
  41f418:	pushf  
  41f419:	rol    DWORD PTR [rax],0x59
  41f41c:	lahf   
  41f41d:	mov    BYTE PTR [rax],0x56
  41f420:	pushf  
  41f421:	retf   
  41f422:	add    BYTE PTR [rsi-0x61],ah
  41f425:	ret    0x5100
  41f428:	movabs ds:0xa75d00caa35b00cd,al
  41f431:	int    0x0
  41f433:	rex.WXB movabs ds:0xa45900d0a05b00d2,al
  41f43d:	rol    BYTE PTR [rax],cl
  41f43f:	(bad)  
  41f440:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41f441:	retf   0x6100
  41f444:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  41f445:	int    0x0
  41f447:	outs   dx,DWORD PTR ds:[rsi]
  41f448:	test   al,0xc8
  41f44a:	add    BYTE PTR [rbx+rbp*4-0x34],ch
  41f44e:	add    BYTE PTR [rax-0x58],bh
  41f451:	leave  
  41f452:	add    BYTE PTR [rbp-0x52],ah
  41f455:	(bad)  
  41f456:	add    BYTE PTR [rdi-0x53],ch
  41f459:	rol    BYTE PTR [rax],1
  41f45b:	jae    0x41f411
  41f45d:	fiadd  DWORD PTR [rax]
  41f45f:	js     0x41f41b
  41f461:	fild   WORD PTR [rax]
  41f463:	gs mov bh,0xe1
  41f466:	add    BYTE PTR [rdx-0x47],ch
  41f469:	jrcxz  0x41f46b
  41f46b:	jns    0x41f42a
  41f46d:	loop   0x41f46f
  41f46f:	jne    0x41f432
  41f471:	call   0xffffffffeb056c76
  41f476:	add    BYTE PTR [rsp+rsi*4-0x227aff6b],cl
  41f47d:	nop
  41f47e:	add    BYTE PTR [rdx-0x68ff631d],dl
  41f484:	out    0x9e,eax
  41f486:	add    BYTE PTR [rsi-0x64ff5329],bl
  41f48c:	in     eax,0xa3
  41f48e:	add    BYTE PTR [rcx-0x5fff5819],ah
  41f494:	jmp    0xffffffffeeebf540
  41f499:	mov    al,0x0
  41f49b:	mov    ebx,0x8500b4f6
  41f4a0:	mov    edi,0xc38d00e0
  41f4a5:	fiadd  WORD PTR [rax]
  41f4a7:	mov    esp,0x8000c1fa
  41f4ac:	ret    
  41f4ad:	out    0x0,eax
  41f4af:	pop    rbp
  41f4b1:	in     al,0x0
  41f4b3:	add    edi,0xcd8f00ec
  41f4b9:	in     al,dx
  41f4ba:	add    BYTE PTR [rbx-0x6eff1536],dl
  41f4c0:	(bad)  
  41f4c1:	out    dx,eax
  41f4c2:	add    BYTE PTR [rcx-0x60ff0c2e],bl
  41f4c8:	(bad)  
  41f4ca:	add    BYTE PTR [rdi-0x45ff192d],ch
  41f4d0:	fldl2t 
  41f4d2:	add    BYTE PTR [rax-0x5cff0f2d],ah
  41f4d8:	fdiv   st,st(3)
  41f4da:	add    BYTE PTR [rdi-0x42ff0e22],dh
  41f4e0:	in     eax,0xfc
  41f4e2:	add    al,cl
  41f4e4:	out    dx,eax
  41f4e5:	inc    DWORD PTR [rax]
  41f4e7:	shr    eax,1
  41f4e9:	repz add cl,dh
  41f4ec:	push   rdi
  41f4ee:	add    ch,dh
  41f4f0:	(bad)  
  41f4f1:	stc    
	...
  41f6d2:	add    bh,bh
  41f6d4:	(bad)  
  41f6d5:	inc    DWORD PTR [rax]
  41f6d7:	add    BYTE PTR [rax],al
  41f6d9:	add    BYTE PTR [rax],al
  41f6db:	add    BYTE PTR [rax],al
  41f6dd:	add    BYTE PTR [rsi],bl
  41f6df:	sbb    ebx,DWORD PTR [rdx]
  41f6e1:	or     DWORD PTR [rdx],ecx
  41f6e3:	(bad)  
  41f6e4:	add    al,BYTE PTR [rcx]
  41f6e6:	add    BYTE PTR [rax],al
  41f6e8:	add    BYTE PTR [rax],al
  41f6ea:	add    BYTE PTR [rax],al
  41f6ec:	add    BYTE PTR [rip+0x812221e],bh        # 0x8541910
  41f6f2:	sbb    BYTE PTR [rsi],dl
  41f6f4:	add    eax,0x3
  41f6f9:	add    BYTE PTR [rax],al
  41f6fb:	cmp    eax,0x201e3f3d
  41f700:	test   DWORD PTR [rax],ecx
  41f702:	(bad)  
  41f703:	adc    DWORD PTR [rip+0x15],ebx        # 0x41f71e
  41f709:	add    BYTE PTR [rip+0x1e528473],bh        # 0x1e947b82
  41f70f:	imul   esp,DWORD PTR [rax],0x3a850885
  41f715:	add    al,0x0
  41f717:	add    BYTE PTR [rax],al
  41f719:	add    BYTE PTR [rax+0x76],al
  41f71c:	jge    0x41f776
  41f71e:	(bad)  
  41f71f:	push   0x20
  41f721:	and    bh,bh
  41f723:	jmp    FWORD PTR [rax+0x17]
  41f726:	add    BYTE PTR [rax],al
  41f728:	add    BYTE PTR [rax],al
  41f72a:	rex.WRX
  41f72b:	gs pop rdi
  41f72d:	pop    rax
  41f72e:	(bad)  
  41f72f:	imul   eax,DWORD PTR [rsi-0x7b],0xffffff85
  41f733:	xchg   BYTE PTR [rcx+rbx*1+0x0],ch
  41f737:	add    BYTE PTR [rax],al
  41f739:	add    BYTE PTR [rbp+0x78],dl
  41f73c:	and    DWORD PTR [rdx+0x1e],0x6e707471
  41f743:	ins    DWORD PTR es:[rdi],dx
  41f744:	outs   dx,DWORD PTR ds:[rsi]
  41f745:	and    BYTE PTR [rax],al
  41f747:	add    BYTE PTR [rax],al
  41f749:	add    BYTE PTR [rbp-0x80],dl
  41f74c:	jle    0x41f7a9
  41f74e:	and    DWORD PTR [rcx],esp
  41f750:	and    DWORD PTR [rcx],esp
  41f752:	and    DWORD PTR [rcx],esp
  41f754:	and    DWORD PTR [rax+rax*1],ebx
  41f757:	add    BYTE PTR [rax],al
  41f759:	add    BYTE PTR [rdx+0x5d],al
  41f75c:	(bad)  
  41f75d:	rex.WXB and rax,0x43512d13
  41f763:	sub    al,0xd
  41f765:	add    BYTE PTR [rax],al
  41f767:	add    BYTE PTR [rax],al
  41f769:	rex.RB pop r13
  41f76b:	push   rbx
  41f76c:	cmp    al,0x27
  41f76e:	adc    BYTE PTR [rsi+rsi*1],ah
  41f771:	xor    al,BYTE PTR [rax+0x5b]
  41f774:	push   rcx
  41f775:	cmp    eax,DWORD PTR [rax]
  41f777:	add    BYTE PTR [rbp+rdi*1+0x30],al
  41f77b:	and    ecx,DWORD PTR [rip+0x4c250e0b]        # 0x4c67058c
  41f781:	rex.WB cmp BYTE PTR [r14],bpl
  41f784:	(bad)  
  41f785:	xor    DWORD PTR [rbx],edi
  41f787:	add    BYTE PTR [rax],al
  41f789:	pop    rsi
  41f78a:	(bad)  
  41f78b:	cmp    DWORD PTR [rdx],ebp
  41f78d:	adc    al,0xf
  41f78f:	sub    cl,BYTE PTR [rdx+0x33]
  41f792:	xor    esi,DWORD PTR [rip+0x3e36]        # 0x4235ce
  41f798:	pop    rsi
  41f799:	(bad)  
  41f79a:	cmp    DWORD PTR [rbx+riz*2+0x48],0x2b
  41f79f:	sub    BYTE PTR [rdx],dh
  41f7a1:	rex.RXB push r15
  41f7a3:	fs ja  0x41f81b
  41f7a6:	push   rcx
  41f7a7:	add    BYTE PTR [rax],al
  41f7a9:	pop    rsi
  41f7aa:	pop    rsi
  41f7ab:	jg     0x41f828
  41f7ad:	addr32 push rsp
  41f7af:	add    BYTE PTR [rsi+0x66],cl
  41f7b2:	jp     0x41f82e
  41f7b4:	pop    rsi
  41f7b5:	pop    rsi
  41f7b6:	add    BYTE PTR [rax],al
  41f7b8:	add    BYTE PTR [rax],al
  41f7ba:	add    BYTE PTR [rsi+0x5e],bl
  41f7bd:	pop    rsi
  41f7be:	add    BYTE PTR [rax],al
  41f7c0:	add    BYTE PTR [rsi+0x72],bl
  41f7c3:	pop    rsi
	...
  41f7d4:	add    BYTE PTR [rax],al
  41f7d6:	add    dh,bh
  41f7d8:	add    DWORD PTR [rax],eax
  41f7da:	add    ah,bh
  41f7dc:	add    DWORD PTR [rax],eax
  41f7de:	add    al,dh
  41f7e0:	add    DWORD PTR [rax],eax
  41f7e2:	add    al,ah
  41f7e4:	add    DWORD PTR [rax],eax
  41f7e6:	add    al,ah
  41f7e8:	add    DWORD PTR [rax],eax
  41f7ea:	add    al,ah
  41f7ec:	add    DWORD PTR [rax],eax
  41f7ee:	add    al,ah
  41f7f0:	add    DWORD PTR [rax],eax
  41f7f2:	add    al,ah
  41f7f4:	add    DWORD PTR [rax],eax
  41f7f6:	add    al,ah
  41f7f8:	add    eax,DWORD PTR [rax]
  41f7fa:	add    al,al
  41f7fc:	add    DWORD PTR [rax],eax
  41f7fe:	add    BYTE PTR [rax-0x40000000],al
  41f804:	add    DWORD PTR [rax],eax
  41f806:	add    BYTE PTR [rax-0x40000000],al
  41f80c:	add    DWORD PTR [rax],0xc7f100
  41f812:	add    bh,bh
  41f814:	inc    DWORD PTR [rax]
  41f816:	add    BYTE PTR [rax],ch
  41f818:	add    BYTE PTR [rax],al
  41f81a:	add    BYTE PTR [rax],ah
  41f81c:	add    BYTE PTR [rax],al
  41f81e:	add    BYTE PTR [rax+0x0],al
  41f821:	add    BYTE PTR [rax],al
  41f823:	add    DWORD PTR [rax],eax
  41f825:	and    BYTE PTR [rax],al
  41f827:	add    BYTE PTR [rax],al
  41f829:	add    BYTE PTR [rax],al
  41f82b:	adc    BYTE PTR [rax],0x0
	...
  41f876:	add    BYTE PTR [rbx],dh
  41f878:	cdq    
  41f879:	xor    edi,edi
  41f87b:	xor    esp,DWORD PTR [rsi+0x33]
  41f87e:	push   QWORD PTR [rbx]
  41f880:	xor    di,di
  41f883:	xor    esp,DWORD PTR [rsi+0x33]
  41f886:	push   QWORD PTR [rbx]
  41f888:	xor    di,di
  41f88b:	xor    esp,DWORD PTR [rsi+0x33]
  41f88e:	push   QWORD PTR [rbx]
  41f890:	xor    di,di
  41f893:	xor    esp,DWORD PTR [rsi+0x33]
  41f896:	push   QWORD PTR [rbx]
  41f898:	xor    di,di
  41f89b:	xor    esp,DWORD PTR [rsi+0x33]
  41f89e:	push   QWORD PTR [rbx]
  41f8a0:	xor    di,di
  41f8a3:	xor    esp,DWORD PTR [rsi+0x33]
  41f8a6:	push   QWORD PTR [rbx]
  41f8a8:	xor    di,di
  41f8ab:	xor    esp,DWORD PTR [rsi+0x33]
  41f8ae:	push   QWORD PTR [rbx]
  41f8b0:	xor    di,di
  41f8b3:	xor    esp,DWORD PTR [rsi+0x33]
  41f8b6:	inc    DWORD PTR [rax]
	...
  41f8f4:	add    BYTE PTR [rax],al
  41f8f6:	add    BYTE PTR [rbx],dh
  41f8f8:	cdq    
  41f8f9:	xor    edi,edi
  41f8fb:	cwd    
  41f8fd:	jmp    WORD PTR [rsi-0x67]
  41f901:	push   WORD PTR [rbx]
  41f904:	cdq    
  41f905:	push   WORD PTR [rbx]
  41f908:	cdq    
  41f909:	push   WORD PTR [rbx]
  41f90c:	cdq    
  41f90d:	push   WORD PTR [rbx]
  41f910:	cdq    
  41f911:	xor    edi,edi
  41f913:	xor    ebx,DWORD PTR [rcx-0x66cc00cd]
  41f919:	xor    edi,edi
  41f91b:	xor    ebx,DWORD PTR [rcx-0x66cc00cd]
  41f921:	xor    edi,edi
  41f923:	xor    ebx,DWORD PTR [rcx-0x66cc00cd]
  41f929:	xor    edi,edi
  41f92b:	xor    ebx,DWORD PTR [rcx-0x66cc00cd]
  41f931:	xor    edi,edi
  41f933:	xor    esp,DWORD PTR [rsi+0x33]
  41f936:	inc    DWORD PTR [rax]
	...
  41f974:	add    BYTE PTR [rax],al
  41f976:	add    BYTE PTR [rbx],dh
  41f978:	cdq    
  41f979:	xor    edi,edi
  41f97b:	rcr    ah,0xc0
  41f97e:	jmp    QWORD PTR [rsi-0x34]
  41f981:	jmp    WORD PTR [rsi-0x67]
  41f985:	push   WORD PTR [rbx]
  41f988:	cdq    
  41f989:	push   WORD PTR [rbx]
  41f98c:	xor    di,di
  41f98f:	cwd    
  41f991:	jmp    WORD PTR [rsi-0x67]
  41f995:	push   WORD PTR [rbx]
  41f998:	cdq    
  41f999:	push   WORD PTR [rbx]
  41f99c:	cdq    
  41f99d:	push   WORD PTR [rbx]
  41f9a0:	cdq    
  41f9a1:	xor    edi,edi
  41f9a3:	xor    ebx,DWORD PTR [rcx-0x66cc009a]
  41f9a9:	xor    edi,edi
  41f9ab:	xor    ebx,DWORD PTR [rcx-0x66cc009a]
  41f9b1:	xor    edi,edi
  41f9b3:	xor    esp,DWORD PTR [rsi+0x33]
  41f9b6:	inc    DWORD PTR [rax]
	...
  41f9f4:	add    BYTE PTR [rax],al
  41f9f6:	add    BYTE PTR [rbx],dh
  41f9f8:	cdq    
  41f9f9:	xor    edi,edi
  41f9fb:	rcr    ah,0xc0
  41f9fe:	jmp    QWORD PTR [rsi-0x34]
  41fa01:	cdq    
  41fa02:	jmp    QWORD PTR [rsi-0x67]
  41fa05:	push   WORD PTR [rbx]
  41fa08:	xor    di,di
  41fa0b:	rol    al,0xc0
  41fa0e:	push   QWORD PTR [rbx]
  41fa10:	xor    di,di
  41fa13:	xor    ebx,DWORD PTR [rcx-0x6699009a]
  41fa19:	push   WORD PTR [rbx]
  41fa1c:	cdq    
  41fa1d:	xor    edi,edi
  41fa1f:	xor    ebx,DWORD PTR [rcx-0x66cc009a]
  41fa25:	xor    edi,edi
  41fa27:	xor    ebx,DWORD PTR [rcx-0x66cc009a]
  41fa2d:	xor    edi,edi
  41fa2f:	xor    ebx,DWORD PTR [rcx+0x6633ff33]
  41fa35:	xor    edi,edi
	...
  41fa77:	xor    ebx,DWORD PTR [rcx-0x233f00cd]
  41fa7d:	sar    bh,0x66
  41fa80:	int3   
  41fa81:	cdq    
  41fa82:	push   QWORD PTR [rbx]
  41fa84:	xor    di,di
  41fa87:	fstp   st(5)
  41fa89:	(bad)  
  41fa8b:	rol    al,0xc0
  41fa8e:	inc    eax
  41fa90:	rol    al,0xff
  41fa93:	xor    esp,DWORD PTR [rsi+0x33]
  41fa96:	jmp    QWORD PTR [rsi-0x67]
  41fa99:	push   WORD PTR [rbx]
  41fa9c:	cdq    
  41fa9d:	jmp    WORD PTR [rsi+0x66]
  41faa1:	push   WORD PTR [rbx]
  41faa4:	xor    di,di
  41faa7:	xor    ebx,DWORD PTR [rcx-0x66cc009a]
  41faad:	push   WORD PTR [rbx]
  41fab0:	cdq    
  41fab1:	xor    edi,edi
  41fab3:	xor    esp,DWORD PTR [rsi+0x33]
  41fab6:	inc    DWORD PTR [rax]
	...
  41faf4:	add    BYTE PTR [rax],al
  41faf6:	add    BYTE PTR [rsi-0x67],ah
  41faf9:	inc    ax
  41fafc:	fadd   st(0),st
  41fafe:	call   FWORD PTR [rcx-0x6634]
  41fb04:	(bad)  
  41fb05:	(bad)  
  41fb06:	(bad)  
  41fb07:	(bad)  
  41fb08:	(bad)  
  41fb09:	(bad)  
  41fb0a:	push   rcx
  41fb0c:	icebp  
  41fb0d:	icebp  
  41fb0e:	dec    esp
  41fb10:	int3   
  41fb11:	int3   
  41fb12:	inc    eax
  41fb14:	rol    al,0xff
  41fb17:	xor    esp,DWORD PTR [rsi+0x33]
  41fb1a:	push   QWORD PTR [rbx]
  41fb1c:	xor    esi,DWORD PTR [rbx]
  41fb1e:	dec    esp
  41fb20:	int3   
  41fb21:	int3   
  41fb22:	inc    eax
  41fb24:	rol    al,0xff
  41fb27:	xor    ebx,DWORD PTR [rcx-0x66cc00cd]
  41fb2d:	push   WORD PTR [rbx]
  41fb30:	cdq    
  41fb31:	xor    edi,edi
  41fb33:	xor    esp,DWORD PTR [rsi+0x33]
  41fb36:	inc    DWORD PTR [rax]
	...
  41fb6c:	add    BYTE PTR [rax],al
  41fb6e:	add    BYTE PTR [rbx],dh
  41fb70:	xor    esp,DWORD PTR [rsi-0x1]
  41fb73:	xor    esi,DWORD PTR [rbx]
  41fb75:	jmp    WORD PTR [rsi-0x67]
  41fb79:	inc    ax
  41fb7c:	fadd   st(0),st
  41fb7e:	call   FWORD PTR [rcx+0x66ff99cc]
  41fb84:	int3   
  41fb85:	cdq    
  41fb86:	(bad)  
  41fb87:	(bad)  
  41fb88:	(bad)  
  41fb89:	(bad)  
  41fb8a:	(bad)  
  41fb8b:	(bad)  
  41fb8c:	(bad)  
  41fb8d:	(bad)  
  41fb8e:	(bad)  
  41fb8f:	(bad)  
  41fb90:	(bad)  
  41fb91:	(bad)  
  41fb92:	call   rdi
  41fb94:	xlat   BYTE PTR ds:[rbx]
  41fb95:	xlat   BYTE PTR ds:[rbx]
  41fb96:	inc    eax
  41fb98:	rol    al,0xff
  41fb9b:	xlat   BYTE PTR ds:[rbx]
  41fb9c:	xlat   BYTE PTR ds:[rbx]
  41fb9d:	xlat   BYTE PTR ds:[rbx]
  41fb9e:	call   rdi
  41fba0:	xlat   BYTE PTR ds:[rbx]
  41fba1:	xlat   BYTE PTR ds:[rbx]
  41fba2:	inc    eax
  41fba4:	rol    al,0xff
  41fba7:	xor    ebx,DWORD PTR [rcx-0x66cc00cd]
  41fbad:	push   WORD PTR [rbx]
  41fbb0:	cdq    
  41fbb1:	xor    edi,edi
  41fbb3:	xor    esp,DWORD PTR [rsi+0x33]
  41fbb6:	inc    DWORD PTR [rax]
	...
  41fbe4:	add    BYTE PTR [rax],al
  41fbe6:	add    BYTE PTR [rbx],dh
  41fbe8:	cwd    
  41fbea:	push   QWORD PTR [rbx]
  41fbec:	cwd    
  41fbee:	jmp    QWORD PTR [rsi-0x67]
  41fbf1:	int3   
  41fbf2:	jmp    QWORD PTR [rsi-0x67]
  41fbf5:	cdq    
  41fbf6:	push   QWORD PTR [rbx]
  41fbf8:	cdq    
  41fbf9:	inc    ax
  41fbfc:	fadd   st(0),st
  41fbfe:	call   FWORD PTR [rcx+0x66ff99cc]
  41fc04:	int3   
  41fc05:	cdq    
  41fc06:	jmp    QWORD PTR [rsi-0x34]
  41fc09:	data16 (bad) 
  41fc0b:	(bad)  
  41fc0c:	(bad)  
  41fc0d:	(bad)  
  41fc0e:	(bad)  
  41fc0f:	(bad)  
  41fc10:	(bad)  
  41fc11:	(bad)  
  41fc12:	(bad)  
  41fc13:	(bad)  
  41fc14:	(bad)  
  41fc15:	(bad)  
  41fc16:	push   rcx
  41fc18:	icebp  
  41fc19:	icebp  
  41fc1a:	push   rcx
  41fc1c:	icebp  
  41fc1d:	icebp  
  41fc1e:	push   rcx
  41fc20:	icebp  
  41fc21:	icebp  
  41fc22:	dec    esp
  41fc24:	int3   
  41fc25:	int3   
  41fc26:	push   QWORD PTR [rbx]
  41fc28:	cdq    
  41fc29:	jmp    WORD PTR [rsi-0x67]
  41fc2d:	push   WORD PTR [rbx]
  41fc30:	cdq    
  41fc31:	xor    edi,edi
  41fc33:	xor    esp,DWORD PTR [rsi+0x33]
  41fc36:	inc    DWORD PTR [rax]
	...
  41fc5c:	add    BYTE PTR [rax],al
  41fc5e:	add    BYTE PTR [rsi-0x67],ah
  41fc61:	cdq    
  41fc62:	push   QWORD PTR [rbx]
  41fc64:	cwd    
  41fc66:	call   rsi
  41fc68:	out    0xe7,eax
  41fc6a:	call   rsi
  41fc6c:	out    0xe7,eax
  41fc6e:	jmp    QWORD PTR [rsi-0x67]
  41fc71:	cdq    
  41fc72:	jmp    QWORD PTR [rsi-0x67]
  41fc75:	int3   
  41fc76:	jmp    QWORD PTR [rsi-0x67]
  41fc79:	inc    ax
  41fc7c:	fadd   st(0),st
  41fc7e:	call   FWORD PTR [rcx-0x66006634]
  41fc84:	int3   
  41fc85:	cdq    
  41fc86:	jmp    QWORD PTR [rsi-0x34]
  41fc89:	cdq    
  41fc8a:	jmp    QWORD PTR [rsi-0x67]
  41fc8d:	data16 (bad) 
  41fc8f:	(bad)  
  41fc90:	(bad)  
  41fc91:	(bad)  
  41fc92:	push   rcx
  41fc94:	icebp  
  41fc95:	icebp  
  41fc96:	(bad)  
  41fc97:	(bad)  
  41fc98:	(bad)  
  41fc99:	(bad)  
  41fc9a:	(bad)  
  41fc9b:	(bad)  
  41fc9c:	(bad)  
  41fc9d:	(bad)  
  41fc9e:	push   rcx
  41fca0:	icebp  
  41fca1:	icebp  
  41fca2:	dec    esp
  41fca4:	int3   
  41fca5:	int3   
  41fca6:	jmp    QWORD PTR [rsi-0x67]
  41fca9:	push   WORD PTR [rbx]
  41fcac:	cdq    
  41fcad:	push   WORD PTR [rbx]
  41fcb0:	cdq    
  41fcb1:	xor    edi,edi
  41fcb3:	xor    esp,DWORD PTR [rsi+0x33]
  41fcb6:	inc    DWORD PTR [rax]
	...
  41fcd4:	add    BYTE PTR [rax],al
  41fcd6:	add    BYTE PTR [rsi-0x67],ah
  41fcd9:	cdq    
  41fcda:	jmp    QWORD PTR [rsi-0x67]
  41fcdd:	cdq    
  41fcde:	jmp    QWORD PTR [rsi-0x67]
  41fce1:	int3   
  41fce2:	call   rsi
  41fce4:	out    0xe7,eax
  41fce6:	call   rsi
  41fce8:	out    0xe7,eax
  41fcea:	call   rsi
  41fcec:	out    0xe7,eax
  41fcee:	jmp    QWORD PTR [rsi-0x67]
  41fcf1:	int3   
  41fcf2:	jmp    QWORD PTR [rsi-0x67]
  41fcf5:	int3   
  41fcf6:	jmp    QWORD PTR [rsi-0x67]
  41fcf9:	inc    ax
  41fcfc:	fadd   st(0),st
  41fcfe:	call   FWORD PTR [rcx-0x66006634]
  41fd04:	int3   
  41fd05:	cdq    
  41fd06:	jmp    QWORD PTR [rsi-0x67]
  41fd09:	push   WORD PTR [rbx]
  41fd0c:	data16 data16 (bad) 
  41fd0f:	(bad)  
  41fd10:	(bad)  
  41fd11:	(bad)  
  41fd12:	push   rcx
  41fd14:	icebp  
  41fd15:	icebp  
  41fd16:	(bad)  
  41fd17:	(bad)  
  41fd18:	(bad)  
  41fd19:	(bad)  
  41fd1a:	push   rax
  41fd1c:	sti    
  41fd1d:	(bad)  
  41fd1e:	push   rcx
  41fd20:	icebp  
  41fd21:	icebp  
  41fd22:	call   rdi
  41fd24:	xlat   BYTE PTR ds:[rbx]
  41fd25:	xlat   BYTE PTR ds:[rbx]
  41fd26:	jmp    QWORD PTR [rsi-0x67]
  41fd29:	jmp    WORD PTR [rsi-0x67]
  41fd2d:	push   WORD PTR [rbx]
  41fd30:	cdq    
  41fd31:	push   WORD PTR [rbx]
  41fd34:	xor    di,di
	...
  41fd53:	cwd    
  41fd55:	cdq    
  41fd56:	jmp    QWORD PTR [rsi-0x67]
  41fd59:	int3   
  41fd5a:	call   FWORD PTR [rcx-0x66003334]
  41fd60:	int3   
  41fd61:	int3   
  41fd62:	push   rax
  41fd64:	sti    
  41fd65:	(bad)  
  41fd66:	call   rsi
  41fd68:	out    0xe7,eax
  41fd6a:	call   rsi
  41fd6c:	out    0xe7,eax
  41fd6e:	call   FWORD PTR [rcx+0x66ffcccc]
  41fd74:	cdq    
  41fd75:	int3   
  41fd76:	jmp    QWORD PTR [rsi-0x67]
  41fd79:	inc    ax
  41fd7c:	fadd   st(0),st
  41fd7e:	call   FWORD PTR [rcx-0x66006634]
  41fd84:	int3   
  41fd85:	cdq    
  41fd86:	jmp    QWORD PTR [rsi-0x34]
  41fd89:	cdq    
  41fd8a:	(bad)  
  41fd8b:	(bad)  
  41fd8c:	(bad)  
  41fd8d:	(bad)  
  41fd8e:	(bad)  
  41fd8f:	(bad)  
  41fd90:	(bad)  
  41fd91:	(bad)  
  41fd92:	(bad)  
  41fd93:	(bad)  
  41fd94:	(bad)  
  41fd95:	(bad)  
  41fd96:	(bad)  
  41fd97:	(bad)  
  41fd98:	(bad)  
  41fd99:	(bad)  
  41fd9a:	(bad)  
  41fd9b:	(bad)  
  41fd9c:	(bad)  
  41fd9d:	(bad)  
  41fd9e:	(bad)  
  41fd9f:	(bad)  
  41fda0:	(bad)  
  41fda1:	(bad)  
  41fda2:	jmp    rbx
  41fda4:	jrcxz  0x41fd89
  41fda6:	jmp    QWORD PTR [rsi-0x67]
  41fda9:	jmp    WORD PTR [rsi-0x34]
  41fdad:	push   WORD PTR [rbx]
  41fdb0:	cdq    
  41fdb1:	push   WORD PTR [rbx]
  41fdb4:	xor    di,di
	...
  41fdd3:	cwd    
  41fdd5:	cdq    
  41fdd6:	call   FWORD PTR [rcx+0x66ffffcc]
  41fddc:	cdq    
  41fddd:	int3   
  41fdde:	jmp    QWORD PTR [rsi-0x67]
  41fde1:	int3   
  41fde2:	push   rax
  41fde4:	sti    
  41fde5:	(bad)  
  41fde6:	call   rsi
  41fde8:	out    0xe7,eax
  41fdea:	call   rsi
  41fdec:	out    0xe7,eax
  41fdee:	jmp    QWORD PTR [rsi-0x67]
  41fdf1:	int3   
  41fdf2:	call   FWORD PTR [rcx+0x66ffcccc]
  41fdf8:	cdq    
  41fdf9:	inc    ax
  41fdfc:	fadd   st(0),st
  41fdfe:	call   FWORD PTR [rcx-0x66006634]
  41fe04:	int3   
  41fe05:	cdq    
  41fe06:	jmp    QWORD PTR [rsi-0x34]
  41fe09:	cdq    
  41fe0a:	(bad)  
  41fe0b:	(bad)  
  41fe0c:	(bad)  
  41fe0d:	(bad)  
  41fe0e:	(bad)  
  41fe0f:	(bad)  
  41fe10:	(bad)  
  41fe11:	(bad)  
  41fe12:	(bad)  
  41fe13:	(bad)  
  41fe14:	(bad)  
  41fe15:	(bad)  
  41fe16:	(bad)  
  41fe17:	(bad)  
  41fe18:	(bad)  
  41fe19:	(bad)  
  41fe1a:	(bad)  
  41fe1b:	(bad)  
  41fe1c:	(bad)  
  41fe1d:	(bad)  
  41fe1e:	(bad)  
  41fe1f:	(bad)  
  41fe20:	(bad)  
  41fe21:	(bad)  
  41fe22:	(bad)  
  41fe23:	(bad)  
  41fe24:	(bad)  
  41fe25:	(bad)  
  41fe26:	jmp    QWORD PTR [rsi-0x34]
  41fe29:	jmp    WORD PTR [rsi-0x67]
  41fe2d:	push   WORD PTR [rbx]
  41fe30:	cdq    
  41fe31:	push   WORD PTR [rbx]
  41fe34:	xor    di,di
	...
  41fe53:	cwd    
  41fe55:	cdq    
  41fe56:	call   FWORD PTR [rcx-0x66003334]
  41fe5c:	int3   
  41fe5d:	int3   
  41fe5e:	call   FWORD PTR [rcx-0xf003334]
  41fe64:	sti    
  41fe65:	(bad)  
  41fe66:	call   rsi
  41fe68:	out    0xe7,eax
  41fe6a:	call   rsi
  41fe6c:	out    0xe7,eax
  41fe6e:	call   FWORD PTR [rcx+0x66ffcccc]
  41fe74:	cdq    
  41fe75:	int3   
  41fe76:	jmp    QWORD PTR [rsi-0x67]
  41fe79:	inc    ax
  41fe7c:	fadd   st(0),st
  41fe7e:	call   FWORD PTR [rcx-0x66006634]
  41fe84:	int3   
  41fe85:	cdq    
  41fe86:	call   FWORD PTR [rcx-0x66006634]
  41fe8c:	int3   
  41fe8d:	cdq    
  41fe8e:	call   FWORD PTR [rcx-0x66006634]
  41fe94:	int3   
  41fe95:	cdq    
  41fe96:	call   FWORD PTR [rcx-0x66006634]
  41fe9c:	int3   
  41fe9d:	cdq    
  41fe9e:	call   FWORD PTR [rcx-0x66006634]
  41fea4:	int3   
  41fea5:	cdq    
  41fea6:	call   FWORD PTR [rcx+0x66ff99cc]
  41feac:	int3   
  41fead:	jmp    WORD PTR [rsi-0x67]
  41feb1:	push   WORD PTR [rbx]
  41feb4:	xor    di,di
	...
  41fed3:	cwd    
  41fed5:	cdq    
  41fed6:	call   FWORD PTR [rcx+0x66ffffcc]
  41fedc:	cdq    
  41fedd:	int3   
  41fede:	call   FWORD PTR [rcx-0xf003334]
  41fee4:	sti    
  41fee5:	(bad)  
  41fee6:	call   rsi
  41fee8:	out    0xe7,eax
  41feea:	call   FWORD PTR [rcx+0x66ffffcc]
  41fef0:	cdq    
  41fef1:	int3   
  41fef2:	call   FWORD PTR [rcx+0x66ffcccc]
  41fef8:	cdq    
  41fef9:	inc    ax
  41fefc:	fadd   st(0),st
  41fefe:	inc    eax
  41ff00:	fadd   st(0),st
  41ff02:	inc    eax
  41ff04:	fadd   st(0),st
  41ff06:	inc    eax
  41ff08:	fadd   st(0),st
  41ff0a:	inc    eax
  41ff0c:	fadd   st(0),st
  41ff0e:	inc    eax
  41ff10:	fadd   st(0),st
  41ff12:	inc    eax
  41ff14:	fadd   st(0),st
  41ff16:	inc    eax
  41ff18:	fadd   st(0),st
  41ff1a:	inc    eax
  41ff1c:	fadd   st(0),st
  41ff1e:	inc    eax
  41ff20:	fadd   st(0),st
  41ff22:	inc    eax
  41ff24:	fadd   st(0),st
  41ff26:	inc    eax
  41ff28:	fadd   st(0),st
  41ff2a:	inc    eax
  41ff2c:	fadd   st(0),st
  41ff2e:	jmp    QWORD PTR [rsi-0x34]
  41ff31:	push   WORD PTR [rbx]
  41ff34:	xor    di,di
	...
  41ff53:	cwd    
  41ff55:	cdq    
  41ff56:	call   FWORD PTR [rcx-0x66000034]
  41ff5c:	int3   
  41ff5d:	int3   
  41ff5e:	call   FWORD PTR [rcx-0x29000034]
  41ff64:	out    0xe7,eax
  41ff66:	call   rsi
  41ff68:	out    0xe7,eax
  41ff6a:	call   FWORD PTR [rcx-0x66003334]
  41ff70:	int3   
  41ff71:	int3   
  41ff72:	jmp    QWORD PTR [rsi-0x67]
  41ff75:	int3   
  41ff76:	jmp    QWORD PTR [rsi-0x67]
  41ff79:	jmp    WORD PTR [rsi-0x67]
  41ff7d:	jmp    WORD PTR [rsi-0x67]
  41ff81:	jmp    WORD PTR [rsi-0x67]
  41ff85:	jmp    WORD PTR [rsi-0x67]
  41ff89:	jmp    WORD PTR [rsi-0x67]
  41ff8d:	jmp    WORD PTR [rsi-0x67]
  41ff91:	jmp    WORD PTR [rsi-0x67]
  41ff95:	jmp    WORD PTR [rsi-0x67]
  41ff99:	push   WORD PTR [rbx]
  41ff9c:	cdq    
  41ff9d:	xor    edi,edi
  41ff9f:	cwd    
  41ffa1:	push   WORD PTR [rbx]
  41ffa4:	cdq    
  41ffa5:	xor    edi,edi
  41ffa7:	cwd    
  41ffa9:	push   WORD PTR [rbx]
  41ffac:	cdq    
  41ffad:	xor    edi,edi
  41ffaf:	xor    ebx,DWORD PTR [rcx-0x66cc00cd]
  41ffb5:	xor    edi,edi
	...
  41ffd3:	cwd    
  41ffd5:	cdq    
  41ffd6:	call   FWORD PTR [rcx-0x66003334]
  41ffdc:	int3   
  41ffdd:	(bad)  
  41ffde:	call   FWORD PTR [rcx-0x66003334]
  41ffe4:	int3   
  41ffe5:	int3   
  41ffe6:	call   FWORD PTR [rcx-0x66000034]
  41ffec:	int3   
  41ffed:	int3   
  41ffee:	call   FWORD PTR [rcx+0x66ffffcc]
  41fff4:	int3   
  41fff5:	int3   
  41fff6:	call   FWORD PTR [rcx+0x66ffcccc]
  41fffc:	cdq    
  41fffd:	int3   
  41fffe:	push   QWORD PTR [rbx]
  420000:	data16 inc WORD PTR [rax]
  420004:	xor    esp,DWORD PTR [rsi-0x1]
  420007:	xor    esp,DWORD PTR [rsi-0x67]
  42000a:	push   QWORD PTR [rbx]
  42000c:	data16 push WORD PTR [rbx]
  420010:	cwd    
  420012:	push   QWORD PTR [rbx]
  420014:	data16 push WORD PTR [rbx]
  420018:	cwd    
  42001a:	push   QWORD PTR [rbx]
  42001c:	cwd    
  42001e:	push   QWORD PTR [rbx]
  420020:	cwd    
  420022:	push   QWORD PTR [rbx]
  420024:	cwd    
  420026:	push   QWORD PTR [rbx]
  420028:	cwd    
  42002a:	push   QWORD PTR [rbx]
  42002c:	xor    esp,DWORD PTR [rsi-0x1]
	...
  420053:	cwd    
  420055:	cdq    
  420056:	call   FWORD PTR [rcx-0x66000034]
  42005c:	int3   
  42005d:	int3   
  42005e:	call   FWORD PTR [rcx-0x39000034]
  420064:	(bad)  
  420065:	out    dx,eax
  420066:	push   rax
  420068:	sti    
  420069:	(bad)  
  42006a:	push   rax
  42006c:	sti    
  42006d:	(bad)  
  42006e:	call   FWORD PTR [rcx-0x66003334]
  420074:	int3   
  420075:	(bad)  
  420076:	call   FWORD PTR [rcx-0x66003334]
  42007c:	int3   
  42007d:	int3   
  42007e:	push   QWORD PTR [rbx]
  420080:	data16 inc WORD PTR [rax]
  420084:	xor    esp,DWORD PTR [rsi-0x1]
  420087:	xor    esp,DWORD PTR [rsi+0x66]
  42008a:	push   QWORD PTR [rbx]
  42008c:	cwd    
  42008e:	push   QWORD PTR [rbx]
  420090:	data16 push WORD PTR [rbx]
  420094:	cwd    
  420096:	push   QWORD PTR [rbx]
  420098:	cwd    
  42009a:	push   QWORD PTR [rbx]
  42009c:	data16 push WORD PTR [rbx]
  4200a0:	cwd    
  4200a2:	push   QWORD PTR [rbx]
  4200a4:	cwd    
  4200a6:	push   QWORD PTR [rbx]
  4200a8:	cwd    
  4200aa:	push   QWORD PTR [rbx]
  4200ac:	xor    esp,DWORD PTR [rsi-0x1]
	...
  4200d3:	cwd    
  4200d5:	cdq    
  4200d6:	call   FWORD PTR [rcx-0x66000034]
  4200dc:	int3   
  4200dd:	int3   
  4200de:	call   FWORD PTR [rcx-0x29000034]
  4200e4:	out    0xe7,eax
  4200e6:	push   rax
  4200e8:	sti    
  4200e9:	(bad)  
  4200ea:	push   rax
  4200ec:	sti    
  4200ed:	(bad)  
  4200ee:	call   FWORD PTR [rcx-0x66003334]
  4200f4:	int3   
  4200f5:	int3   
  4200f6:	call   FWORD PTR [rcx-0x66000034]
  4200fc:	int3   
  4200fd:	int3   
  4200fe:	push   QWORD PTR [rbx]
  420100:	data16 inc WORD PTR [rax]
  420104:	xor    esp,DWORD PTR [rsi-0x1]
  420107:	add    BYTE PTR [rbx],dh
  420109:	inc    WORD PTR [rax]
  42010c:	xor    esp,DWORD PTR [rsi-0x1]
  42010f:	xor    esp,DWORD PTR [rsi-0x67]
  420112:	push   QWORD PTR [rbx]
  420114:	cwd    
  420116:	push   QWORD PTR [rbx]
  420118:	cwd    
  42011a:	push   QWORD PTR [rbx]
  42011c:	data16 inc WORD PTR [rax]
  420120:	cwd    
  420122:	push   QWORD PTR [rbx]
  420124:	cwd    
  420126:	push   QWORD PTR [rbx]
  420128:	cwd    
  42012a:	push   QWORD PTR [rbx]
  42012c:	xor    esp,DWORD PTR [rsi-0x1]
	...
  420153:	cwd    
  420155:	cdq    
  420156:	call   FWORD PTR [rcx-0x66003334]
  42015c:	int3   
  42015d:	(bad)  
  42015e:	call   FWORD PTR [rcx-0xf003334]
  420164:	sti    
  420165:	(bad)  
  420166:	push   rax
  420168:	sti    
  420169:	(bad)  
  42016a:	call   rsi
  42016c:	out    0xe7,eax
  42016e:	call   FWORD PTR [rcx-0x66000034]
  420174:	int3   
  420175:	(bad)  
  420176:	call   FWORD PTR [rcx-0x66003334]
  42017c:	int3   
  42017d:	int3   
  42017e:	push   QWORD PTR [rbx]
  420180:	data16 jmp WORD PTR [rsi-0x67]
  420185:	cdq    
  420186:	jmp    QWORD PTR [rsi-0x67]
  420189:	cdq    
  42018a:	jmp    QWORD PTR [rsi-0x67]
  42018d:	cdq    
  42018e:	push   QWORD PTR [rbx]
  420190:	data16 inc WORD PTR [rax]
  420194:	xor    esp,DWORD PTR [rsi-0x1]
  420197:	add    BYTE PTR [rbx],dh
  420199:	inc    WORD PTR [rax]
  42019c:	cwd    
  42019e:	push   QWORD PTR [rbx]
  4201a0:	data16 push WORD PTR [rbx]
  4201a4:	cwd    
  4201a6:	inc    DWORD PTR [rax]
  4201a8:	data16 push WORD PTR [rbx]
  4201ac:	xor    esp,DWORD PTR [rsi-0x1]
	...
  4201d3:	cwd    
  4201d5:	cdq    
  4201d6:	call   FWORD PTR [rcx-0x66000034]
  4201dc:	int3   
  4201dd:	(bad)  
  4201de:	call   FWORD PTR [rcx-0x29003334]
  4201e4:	out    0xe7,eax
  4201e6:	jmp    QWORD PTR [rsi-0x67]
  4201e9:	int3   
  4201ea:	jmp    QWORD PTR [rsi-0x67]
  4201ed:	int3   
  4201ee:	push   QWORD PTR [rbx]
  4201f0:	cdq    
  4201f1:	cdq    
  4201f2:	jmp    QWORD PTR [rsi-0x67]
  4201f5:	cdq    
  4201f6:	push   QWORD PTR [rbx]
  4201f8:	cwd    
  4201fa:	push   QWORD PTR [rbx]
  4201fc:	cdq    
  4201fd:	int3   
  4201fe:	push   QWORD PTR [rbx]
  420200:	cwd    
  420202:	jmp    QWORD PTR [rsi-0x67]
  420205:	int3   
  420206:	call   FWORD PTR [rcx-0x66003334]
  42020c:	int3   
  42020d:	int3   
  42020e:	jmp    QWORD PTR [rsi-0x67]
  420211:	cdq    
  420212:	jmp    QWORD PTR [rsi-0x67]
  420215:	cdq    
  420216:	jmp    QWORD PTR [rsi-0x67]
  420219:	cdq    
  42021a:	inc    DWORD PTR [rax]
  42021c:	xor    esp,DWORD PTR [rsi-0x1]
  42021f:	add    BYTE PTR [rbx],dh
  420221:	inc    WORD PTR [rax]
  420224:	xor    esp,DWORD PTR [rsi-0x1]
  420227:	add    BYTE PTR [rsi+0x66],ah
  42022a:	push   QWORD PTR [rbx]
  42022c:	xor    esp,DWORD PTR [rsi-0x1]
	...
  420253:	cwd    
  420255:	cdq    
  420256:	call   FWORD PTR [rcx+0x66ffcccc]
  42025c:	cdq    
  42025d:	int3   
  42025e:	jmp    QWORD PTR [rsi-0x67]
  420261:	int3   
  420262:	jmp    QWORD PTR [rsi-0x67]
  420265:	cdq    
  420266:	call   FWORD PTR [rcx-0x39003334]
  42026c:	(bad)  
  42026d:	out    dx,eax
  42026e:	call   FWORD PTR [rcx-0x66003334]
  420274:	int3   
  420275:	(bad)  
  420276:	jmp    QWORD PTR [rsi-0x67]
  420279:	int3   
  42027a:	jmp    QWORD PTR [rsi-0x67]
  42027d:	int3   
  42027e:	push   QWORD PTR [rbx]
  420280:	cwd    
  420282:	push   QWORD PTR [rbx]
  420284:	cdq    
  420285:	cdq    
  420286:	jmp    QWORD PTR [rsi-0x67]
  420289:	int3   
  42028a:	call   FWORD PTR [rcx-0x66003334]
  420290:	int3   
  420291:	int3   
  420292:	call   FWORD PTR [rcx-0x66000034]
  420298:	int3   
  420299:	int3   
  42029a:	call   QWORD PTR [rax+0x66ffada9]
  4202a0:	cdq    
  4202a1:	cdq    
  4202a2:	jmp    QWORD PTR [rsi-0x67]
  4202a5:	cdq    
  4202a6:	inc    DWORD PTR [rax]
  4202a8:	xor    esp,DWORD PTR [rsi-0x1]
  4202ab:	xor    esi,DWORD PTR [rbx]
  4202ad:	inc    WORD PTR [rax]
	...
  4202cc:	add    BYTE PTR [rax],al
  4202ce:	add    BYTE PTR [rsi-0x67],ah
  4202d1:	int3   
  4202d2:	jmp    QWORD PTR [rsi-0x67]
  4202d5:	int3   
  4202d6:	jmp    QWORD PTR [rsi-0x67]
  4202d9:	int3   
  4202da:	jmp    QWORD PTR [rsi-0x67]
  4202dd:	int3   
  4202de:	inc    esi
  4202e0:	(bad)  
  4202e1:	out    dx,eax
  4202e2:	inc    esi
  4202e4:	(bad)  
  4202e5:	out    dx,eax
  4202e6:	inc    esi
  4202e8:	(bad)  
  4202e9:	out    dx,eax
  4202ea:	call   QWORD PTR [rax+0x66ffada9]
  4202f0:	cdq    
  4202f1:	int3   
  4202f2:	jmp    QWORD PTR [rsi-0x67]
  4202f5:	int3   
  4202f6:	jmp    QWORD PTR [rsi-0x67]
  4202f9:	int3   
  4202fa:	push   QWORD PTR [rbx]
  4202fc:	cwd    
  4202fe:	push   QWORD PTR [rbx]
  420300:	cwd    
  420302:	jmp    QWORD PTR [rsi-0x67]
  420305:	int3   
  420306:	jmp    QWORD PTR [rsi-0x67]
  420309:	int3   
  42030a:	jmp    QWORD PTR [rsi-0x67]
  42030d:	int3   
  42030e:	jmp    QWORD PTR [rsi-0x67]
  420311:	cdq    
  420312:	jmp    QWORD PTR [rsi-0x67]
  420315:	int3   
  420316:	call   FWORD PTR [rcx-0x66003334]
  42031c:	int3   
  42031d:	(bad)  
  42031e:	call   FWORD PTR [rcx+0x66ffcccc]
  420324:	cdq    
  420325:	int3   
  420326:	jmp    QWORD PTR [rsi-0x67]
  420329:	cdq    
  42032a:	jmp    QWORD PTR [rsi-0x67]
  42032d:	cdq    
  42032e:	jmp    QWORD PTR [rsi-0x67]
  420331:	cdq    
  420332:	inc    DWORD PTR [rax]
	...
  420344:	add    BYTE PTR [rax],al
  420346:	add    BYTE PTR [rsi-0x67],ah
  420349:	int3   
  42034a:	jmp    QWORD PTR [rsi-0x67]
  42034d:	int3   
  42034e:	dec    esp
  420350:	(bad)  
  420351:	(bad)  
  420352:	call   rsi
  420354:	out    0xe7,eax
  420356:	inc    esi
  420358:	(bad)  
  420359:	out    dx,eax
  42035a:	call   rsi
  42035c:	out    0xe7,eax
  42035e:	call   FWORD PTR [rcx+0x66ffcccc]
  420364:	cdq    
  420365:	int3   
  420366:	jmp    QWORD PTR [rsi-0x67]
  420369:	int3   
  42036a:	jmp    QWORD PTR [rsi-0x67]
  42036d:	int3   
  42036e:	push   QWORD PTR [rbx]
  420370:	cwd    
  420372:	push   QWORD PTR [rbx]
  420374:	cwd    
  420376:	push   QWORD PTR [rbx]
  420378:	cwd    
  42037a:	push   QWORD PTR [rbx]
  42037c:	cwd    
  42037e:	push   QWORD PTR [rbx]
  420380:	cwd    
  420382:	jmp    QWORD PTR [rsi-0x67]
  420385:	int3   
  420386:	jmp    QWORD PTR [rsi-0x67]
  420389:	int3   
  42038a:	jmp    QWORD PTR [rsi-0x67]
  42038d:	int3   
  42038e:	jmp    QWORD PTR [rsi-0x67]
  420391:	int3   
  420392:	jmp    QWORD PTR [rsi-0x67]
  420395:	int3   
  420396:	jmp    QWORD PTR [rsi-0x67]
  420399:	int3   
  42039a:	jmp    QWORD PTR [rsi-0x67]
  42039d:	cdq    
  42039e:	jmp    QWORD PTR [rsi-0x67]
  4203a1:	int3   
  4203a2:	call   FWORD PTR [rcx-0x66000034]
  4203a8:	int3   
  4203a9:	int3   
  4203aa:	jmp    QWORD PTR [rsi-0x67]
  4203ad:	int3   
  4203ae:	call   QWORD PTR [rax+0x66ffada9]
  4203b4:	cdq    
  4203b5:	cdq    
  4203b6:	inc    DWORD PTR [rax]
	...
  4203c0:	add    BYTE PTR [rax],al
  4203c2:	add    BYTE PTR [rsi-0x67],ah
  4203c5:	int3   
  4203c6:	jmp    QWORD PTR [rsi-0x67]
  4203c9:	int3   
  4203ca:	jmp    QWORD PTR [rsi-0x67]
  4203cd:	int3   
  4203ce:	jmp    QWORD PTR [rsi-0x67]
  4203d1:	int3   
  4203d2:	jmp    QWORD PTR [rsi-0x67]
  4203d5:	int3   
  4203d6:	jmp    QWORD PTR [rsi-0x67]
  4203d9:	int3   
  4203da:	jmp    QWORD PTR [rsi-0x67]
  4203dd:	int3   
  4203de:	jmp    QWORD PTR [rsi-0x67]
  4203e1:	int3   
  4203e2:	push   QWORD PTR [rbx]
  4203e4:	cwd    
  4203e6:	push   QWORD PTR [rbx]
  4203e8:	cwd    
  4203ea:	push   QWORD PTR [rbx]
  4203ec:	cwd    
  4203ee:	push   QWORD PTR [rbx]
  4203f0:	cwd    
  4203f2:	push   QWORD PTR [rbx]
  4203f4:	cwd    
  4203f6:	push   QWORD PTR [rbx]
  4203f8:	cwd    
  4203fa:	push   QWORD PTR [rbx]
  4203fc:	cwd    
  4203fe:	push   QWORD PTR [rbx]
  420400:	cwd    
  420402:	jmp    QWORD PTR [rsi-0x67]
  420405:	int3   
  420406:	jmp    QWORD PTR [rsi-0x67]
  420409:	int3   
  42040a:	jmp    QWORD PTR [rsi-0x67]
  42040d:	int3   
  42040e:	jmp    QWORD PTR [rsi-0x67]
  420411:	int3   
  420412:	jmp    QWORD PTR [rsi-0x67]
  420415:	int3   
  420416:	jmp    QWORD PTR [rsi-0x67]
  420419:	int3   
  42041a:	jmp    QWORD PTR [rsi-0x67]
  42041d:	int3   
  42041e:	jmp    QWORD PTR [rsi-0x67]
  420421:	int3   
  420422:	jmp    QWORD PTR [rsi-0x67]
  420425:	cdq    
  420426:	jmp    QWORD PTR [rsi-0x67]
  420429:	int3   
  42042a:	jmp    QWORD PTR [rsi-0x67]
  42042d:	cdq    
  42042e:	jmp    QWORD PTR [rsi-0x67]
  420431:	cdq    
  420432:	jmp    QWORD PTR [rsi-0x67]
  420435:	cdq    
  420436:	jmp    QWORD PTR [rsi-0x67]
  420439:	cdq    
  42043a:	inc    DWORD PTR [rax]
	...
  420450:	add    BYTE PTR [rax],al
  420452:	add    BYTE PTR [rcx+0x66ffcc99],bl
  420458:	cdq    
  420459:	cdq    
  42045a:	jmp    QWORD PTR [rsi-0x67]
  42045d:	int3   
  42045e:	push   QWORD PTR [rbx]
  420460:	cdq    
  420461:	cdq    
  420462:	push   QWORD PTR [rbx]
  420464:	cwd    
  420466:	push   QWORD PTR [rbx]
  420468:	cwd    
  42046a:	push   QWORD PTR [rbx]
  42046c:	cwd    
  42046e:	push   QWORD PTR [rbx]
  420470:	cwd    
  420472:	push   QWORD PTR [rbx]
  420474:	cwd    
  420476:	push   QWORD PTR [rbx]
  420478:	cwd    
  42047a:	push   QWORD PTR [rbx]
  42047c:	cwd    
  42047e:	push   QWORD PTR [rbx]
  420480:	cwd    
  420482:	jmp    QWORD PTR [rsi-0x67]
  420485:	int3   
  420486:	jmp    QWORD PTR [rsi-0x34]
  420489:	int3   
  42048a:	jmp    QWORD PTR [rsi-0x67]
  42048d:	int3   
  42048e:	jmp    QWORD PTR [rsi-0x34]
  420491:	int3   
  420492:	jmp    QWORD PTR [rsi-0x67]
  420495:	int3   
  420496:	jmp    QWORD PTR [rsi-0x34]
  420499:	int3   
  42049a:	jmp    QWORD PTR [rsi-0x67]
  42049d:	int3   
  42049e:	jmp    QWORD PTR [rsi-0x67]
  4204a1:	cdq    
  4204a2:	jmp    QWORD PTR [rsi-0x67]
  4204a5:	int3   
  4204a6:	jmp    QWORD PTR [rsi-0x67]
  4204a9:	cdq    
  4204aa:	jmp    QWORD PTR [rsi-0x67]
  4204ad:	int3   
  4204ae:	inc    DWORD PTR [rax]
	...
  4204cc:	add    BYTE PTR [rax],al
  4204ce:	add    BYTE PTR [rsi-0x67],ah
  4204d1:	int3   
  4204d2:	jmp    QWORD PTR [rsi-0x34]
  4204d5:	int3   
  4204d6:	call   FWORD PTR [rcx-0x66000034]
  4204dc:	int3   
  4204dd:	int3   
  4204de:	jmp    QWORD PTR [rsi-0x67]
  4204e1:	int3   
  4204e2:	jmp    QWORD PTR [rsi-0x67]
  4204e5:	int3   
  4204e6:	jmp    QWORD PTR [rsi-0x67]
  4204e9:	cdq    
  4204ea:	push   QWORD PTR [rbx]
  4204ec:	cwd    
  4204ee:	push   QWORD PTR [rbx]
  4204f0:	cwd    
  4204f2:	push   QWORD PTR [rbx]
  4204f4:	cwd    
  4204f6:	push   QWORD PTR [rbx]
  4204f8:	cwd    
  4204fa:	push   QWORD PTR [rbx]
  4204fc:	cwd    
  4204fe:	push   QWORD PTR [rbx]
  420500:	cwd    
  420502:	jmp    QWORD PTR [rsi-0x67]
  420505:	int3   
  420506:	jmp    QWORD PTR [rsi-0x67]
  420509:	int3   
  42050a:	jmp    QWORD PTR [rsi-0x67]
  42050d:	int3   
  42050e:	jmp    QWORD PTR [rsi-0x67]
  420511:	int3   
  420512:	jmp    QWORD PTR [rsi-0x67]
  420515:	int3   
  420516:	jmp    QWORD PTR [rsi-0x67]
  420519:	int3   
  42051a:	jmp    QWORD PTR [rsi-0x67]
  42051d:	int3   
  42051e:	jmp    QWORD PTR [rsi-0x67]
  420521:	int3   
  420522:	jmp    QWORD PTR [rsi-0x34]
  420525:	int3   
  420526:	jmp    QWORD PTR [rsi-0x67]
  420529:	int3   
  42052a:	jmp    QWORD PTR [rsi-0x67]
  42052d:	int3   
  42052e:	jmp    QWORD PTR [rsi-0x67]
  420531:	int3   
  420532:	inc    DWORD PTR [rax]
	...
  420548:	add    BYTE PTR [rax],al
  42054a:	add    BYTE PTR [rsi-0x67],ah
  42054d:	int3   
  42054e:	inc    esi
  420550:	(bad)  
  420551:	out    dx,eax
  420552:	inc    esi
  420554:	(bad)  
  420555:	out    dx,eax
  420556:	inc    esi
  420558:	(bad)  
  420559:	out    dx,eax
  42055a:	call   FWORD PTR [rcx-0x66000034]
  420560:	int3   
  420561:	int3   
  420562:	call   FWORD PTR [rcx+0x66ffffcc]
  420568:	cdq    
  420569:	int3   
  42056a:	push   QWORD PTR [rbx]
  42056c:	cdq    
  42056d:	cdq    
  42056e:	push   QWORD PTR [rbx]
  420570:	cdq    
  420571:	cdq    
  420572:	push   QWORD PTR [rbx]
  420574:	cdq    
  420575:	cdq    
  420576:	push   QWORD PTR [rbx]
  420578:	cwd    
  42057a:	push   QWORD PTR [rbx]
  42057c:	cwd    
  42057e:	push   QWORD PTR [rbx]
  420580:	cwd    
  420582:	jmp    QWORD PTR [rsi-0x67]
  420585:	int3   
  420586:	jmp    QWORD PTR [rsi-0x34]
  420589:	int3   
  42058a:	jmp    QWORD PTR [rsi-0x67]
  42058d:	int3   
  42058e:	jmp    QWORD PTR [rsi-0x67]
  420591:	int3   
  420592:	jmp    QWORD PTR [rsi-0x34]
  420595:	int3   
  420596:	jmp    QWORD PTR [rsi-0x67]
  420599:	int3   
  42059a:	jmp    QWORD PTR [rsi-0x67]
  42059d:	int3   
  42059e:	jmp    QWORD PTR [rsi-0x34]
  4205a1:	int3   
  4205a2:	jmp    QWORD PTR [rsi-0x67]
  4205a5:	int3   
  4205a6:	call   FWORD PTR [rcx-0x66003334]
  4205ac:	int3   
  4205ad:	int3   
  4205ae:	jmp    QWORD PTR [rsi-0x67]
  4205b1:	int3   
  4205b2:	jmp    QWORD PTR [rsi-0x67]
  4205b5:	int3   
  4205b6:	inc    DWORD PTR [rax]
	...
  4205c4:	add    BYTE PTR [rax],al
  4205c6:	add    BYTE PTR [rsi-0x67],ah
  4205c9:	int3   
  4205ca:	inc    esi
  4205cc:	(bad)  
  4205cd:	out    dx,eax
  4205ce:	dec    esp
  4205d0:	(bad)  
  4205d1:	(bad)  
  4205d2:	dec    esp
  4205d4:	(bad)  
  4205d5:	(bad)  
  4205d6:	inc    esi
  4205d8:	(bad)  
  4205d9:	out    dx,eax
  4205da:	inc    esi
  4205dc:	(bad)  
  4205dd:	out    dx,eax
  4205de:	call   FWORD PTR [rcx-0x66000034]
  4205e4:	int3   
  4205e5:	int3   
  4205e6:	call   FWORD PTR [rcx+0x66ffcccc]
  4205ec:	int3   
  4205ed:	int3   
  4205ee:	jmp    QWORD PTR [rsi-0x67]
  4205f1:	int3   
  4205f2:	jmp    QWORD PTR [rsi-0x67]
  4205f5:	int3   
  4205f6:	push   QWORD PTR [rbx]
  4205f8:	cdq    
  4205f9:	cdq    
  4205fa:	push   QWORD PTR [rbx]
  4205fc:	cdq    
  4205fd:	cdq    
  4205fe:	push   QWORD PTR [rbx]
  420600:	cdq    
  420601:	cdq    
  420602:	jmp    QWORD PTR [rsi-0x67]
  420605:	int3   
  420606:	jmp    QWORD PTR [rsi-0x67]
  420609:	int3   
  42060a:	jmp    QWORD PTR [rsi-0x67]
  42060d:	int3   
  42060e:	jmp    QWORD PTR [rsi-0x34]
  420611:	int3   
  420612:	jmp    QWORD PTR [rsi-0x67]
  420615:	int3   
  420616:	jmp    QWORD PTR [rsi-0x34]
  420619:	int3   
  42061a:	call   FWORD PTR [rcx-0x66000034]
  420620:	int3   
  420621:	int3   
  420622:	call   FWORD PTR [rcx-0x66003334]
  420628:	int3   
  420629:	(bad)  
  42062a:	call   FWORD PTR [rcx-0x66003334]
  420630:	int3   
  420631:	(bad)  
  420632:	call   FWORD PTR [rcx+0x66ffcccc]
  420638:	cdq    
  420639:	int3   
  42063a:	inc    DWORD PTR [rax]
	...
  420644:	add    BYTE PTR [rax],al
  420646:	add    BYTE PTR [rsi-0x67],ah
  420649:	int3   
  42064a:	jmp    QWORD PTR [rsi-0x67]
  42064d:	int3   
  42064e:	inc    esi
  420650:	(bad)  
  420651:	out    dx,eax
  420652:	inc    esi
  420654:	(bad)  
  420655:	out    dx,eax
  420656:	dec    esp
  420658:	(bad)  
  420659:	(bad)  
  42065a:	call   rsi
  42065c:	out    0xe7,eax
  42065e:	dec    esp
  420660:	(bad)  
  420661:	(bad)  
  420662:	inc    esi
  420664:	(bad)  
  420665:	out    dx,eax
  420666:	call   FWORD PTR [rcx-0x66000034]
  42066c:	int3   
  42066d:	(bad)  
  42066e:	call   FWORD PTR [rcx+0x66ffcccc]
  420674:	int3   
  420675:	int3   
  420676:	jmp    QWORD PTR [rsi-0x67]
  420679:	int3   
  42067a:	jmp    QWORD PTR [rsi-0x67]
  42067d:	int3   
  42067e:	jmp    QWORD PTR [rsi-0x67]
  420681:	int3   
  420682:	jmp    QWORD PTR [rsi-0x67]
  420685:	cdq    
  420686:	jmp    QWORD PTR [rsi-0x34]
  420689:	int3   
  42068a:	jmp    QWORD PTR [rsi-0x67]
  42068d:	int3   
  42068e:	call   FWORD PTR [rcx-0x66003334]
  420694:	int3   
  420695:	int3   
  420696:	call   FWORD PTR [rcx-0x66003334]
  42069c:	int3   
  42069d:	int3   
  42069e:	call   FWORD PTR [rcx-0x66000034]
  4206a4:	int3   
  4206a5:	(bad)  
  4206a6:	inc    esi
  4206a8:	(bad)  
  4206a9:	out    dx,eax
  4206aa:	inc    esi
  4206ac:	(bad)  
  4206ad:	out    dx,eax
  4206ae:	inc    esi
  4206b0:	(bad)  
  4206b1:	out    dx,eax
  4206b2:	jmp    QWORD PTR [rsi-0x67]
  4206b5:	int3   
  4206b6:	jmp    QWORD PTR [rsi-0x67]
  4206b9:	int3   
  4206ba:	inc    DWORD PTR [rax]
	...
  4206cc:	add    BYTE PTR [rax],al
  4206ce:	add    BYTE PTR [rsi-0x67],ah
  4206d1:	int3   
  4206d2:	jmp    QWORD PTR [rsi-0x67]
  4206d5:	int3   
  4206d6:	jmp    QWORD PTR [rsi-0x67]
  4206d9:	int3   
  4206da:	inc    esi
  4206dc:	(bad)  
  4206dd:	out    dx,eax
  4206de:	inc    esi
  4206e0:	(bad)  
  4206e1:	out    dx,eax
  4206e2:	inc    esi
  4206e4:	(bad)  
  4206e5:	out    dx,eax
  4206e6:	inc    esi
  4206e8:	(bad)  
  4206e9:	out    dx,eax
  4206ea:	call   FWORD PTR [rcx-0x66000034]
  4206f0:	int3   
  4206f1:	int3   
  4206f2:	call   FWORD PTR [rcx-0x66000034]
  4206f8:	int3   
  4206f9:	int3   
  4206fa:	jmp    QWORD PTR [rsi-0x67]
  4206fd:	int3   
  4206fe:	jmp    QWORD PTR [rsi-0x67]
  420701:	cdq    
  420702:	jmp    QWORD PTR [rsi-0x67]
  420705:	int3   
  420706:	call   QWORD PTR [rax-0x66005257]
  42070c:	int3   
  42070d:	(bad)  
  42070e:	call   FWORD PTR [rcx-0x66003334]
  420714:	int3   
  420715:	(bad)  
  420716:	call   FWORD PTR [rcx-0x39000034]
  42071c:	(bad)  
  42071d:	out    dx,eax
  42071e:	inc    esi
  420720:	(bad)  
  420721:	out    dx,eax
  420722:	inc    esi
  420724:	(bad)  
  420725:	out    dx,eax
  420726:	jmp    QWORD PTR [rsi-0x67]
  420729:	int3   
  42072a:	jmp    QWORD PTR [rsi-0x67]
  42072d:	int3   
  42072e:	jmp    QWORD PTR [rsi-0x67]
  420731:	int3   
  420732:	inc    DWORD PTR [rax]
	...
  420758:	add    BYTE PTR [rax],al
  42075a:	add    BYTE PTR [rsi-0x67],ah
  42075d:	int3   
  42075e:	jmp    QWORD PTR [rsi-0x67]
  420761:	int3   
  420762:	jmp    QWORD PTR [rsi-0x67]
  420765:	int3   
  420766:	inc    esi
  420768:	(bad)  
  420769:	out    dx,eax
  42076a:	inc    esi
  42076c:	(bad)  
  42076d:	out    dx,eax
  42076e:	call   FWORD PTR [rcx-0x66000034]
  420774:	int3   
  420775:	int3   
  420776:	jmp    QWORD PTR [rsi-0x67]
  420779:	int3   
  42077a:	inc    DWORD PTR [rax]
	...
  420784:	add    BYTE PTR [rax],al
  420786:	add    BYTE PTR [rsi-0x67],ah
  420789:	int3   
  42078a:	jmp    QWORD PTR [rsi-0x67]
  42078d:	int3   
  42078e:	inc    esi
  420790:	(bad)  
  420791:	out    dx,eax
  420792:	inc    esi
  420794:	(bad)  
  420795:	out    dx,eax
  420796:	inc    esi
  420798:	(bad)  
  420799:	out    dx,eax
  42079a:	inc    esi
  42079c:	(bad)  
  42079d:	out    dx,eax
  42079e:	jmp    QWORD PTR [rsi-0x67]
  4207a1:	int3   
  4207a2:	jmp    QWORD PTR [rsi-0x67]
  4207a5:	int3   
  4207a6:	inc    DWORD PTR [rax]
	...
  4207e4:	add    BYTE PTR [rax],al
  4207e6:	add    BYTE PTR [rsi-0x67],ah
  4207e9:	int3   
  4207ea:	jmp    QWORD PTR [rsi-0x67]
  4207ed:	int3   
  4207ee:	call   FWORD PTR [rcx+0x66ffcc99]
  4207f4:	cdq    
  4207f5:	int3   
  4207f6:	inc    DWORD PTR [rax]
	...
  42080c:	add    BYTE PTR [rax],al
  42080e:	add    BYTE PTR [rsi-0x67],ah
  420811:	int3   
  420812:	jmp    QWORD PTR [rsi-0x67]
  420815:	int3   
  420816:	jmp    QWORD PTR [rsi-0x67]
  420819:	int3   
  42081a:	jmp    QWORD PTR [rsi-0x67]
  42081d:	int3   
  42081e:	inc    DWORD PTR [rax]
	...
  42083c:	add    BYTE PTR [rax],al
  42083e:	add    bh,bh
  420840:	cld    
  420841:	add    BYTE PTR [rbx],al
  420843:	(bad)  
  420844:	cld    
  420845:	add    BYTE PTR [rbx],al
  420847:	(bad)  
  420848:	cld    
  420849:	add    BYTE PTR [rbx],al
  42084b:	(bad)  
  42084c:	cld    
  42084d:	add    BYTE PTR [rbx],al
  42084f:	(bad)  
  420850:	cld    
  420851:	add    BYTE PTR [rbx],al
  420853:	(bad)  
  420854:	cld    
  420855:	add    BYTE PTR [rbx],al
  420857:	push   rax
  420859:	add    BYTE PTR [rbx],al
  42085b:	inc    eax
  42085d:	add    BYTE PTR [rbx],al
  42085f:	inc    DWORD PTR [rax]
  420861:	add    BYTE PTR [rbx],al
  420863:	cld    
  420864:	add    BYTE PTR [rax],al
  420866:	add    edi,eax
  420868:	add    BYTE PTR [rax],al
  42086a:	add    edi,eax
  42086c:	add    BYTE PTR [rax],al
  42086e:	add    edi,eax
  420870:	add    BYTE PTR [rax],al
  420872:	add    edi,eax
  420874:	add    BYTE PTR [rax],al
  420876:	add    edi,eax
  420878:	add    BYTE PTR [rax],al
  42087a:	add    edi,eax
  42087c:	add    BYTE PTR [rax],al
  42087e:	psubb  mm0,QWORD PTR [rax]
  420881:	add    BYTE PTR [rdi],cl
  420883:	clc    
  420884:	add    BYTE PTR [rax],al
  420886:	psubb  mm0,QWORD PTR [rax]
  420889:	add    BYTE PTR [rdi],cl
  42088b:	clc    
  42088c:	add    BYTE PTR [rax],al
  42088e:	psubb  mm0,QWORD PTR [rax]
  420891:	add    BYTE PTR [rdi],cl
  420893:	lock add BYTE PTR [rax],al
  420896:	(bad)  
  420897:	rol    BYTE PTR [rax],0x0
  42089a:	add    eax,DWORD PTR [rax-0x7ff0000]
  4208a0:	add    BYTE PTR [rax],al
  4208a2:	(bad)  
  4208a4:	add    BYTE PTR [rax],al
  4208a6:	(bad)  
  4208a7:	loopne 0x4208a9
  4208a9:	add    BYTE PTR [rbx],al
  4208ab:	rol    BYTE PTR [rax],0x0
  4208ae:	add    eax,eax
  4208b0:	add    BYTE PTR [rax],al
  4208b2:	add    eax,esi
  4208b4:	add    BYTE PTR [rax],al
  4208b6:	(bad)  
  4208b7:	inc    BYTE PTR [rcx]
  4208b9:	sar    BYTE PTR [rdi],0xff
  4208bc:	ret    
  4208bd:	lock jmp FWORD PTR [rax]
  4208c0:	add    BYTE PTR [rax],al
  4208c2:	add    BYTE PTR [rax],dl
  4208c4:	add    BYTE PTR [rax],al
  4208c6:	add    BYTE PTR [rax],ah
  4208c8:	add    BYTE PTR [rax],al
  4208ca:	add    BYTE PTR [rcx],al
  4208cc:	add    BYTE PTR [rax],ah
  4208ce:	add    BYTE PTR [rax],al
  4208d0:	add    BYTE PTR [rax],al
  4208d2:	add    BYTE PTR [rax+0x4],al
	...
  420901:	add    BYTE PTR [rax],al
  420903:	push   rdx
  420904:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  420905:	push   0xffffffffffffffff
  420907:	cmp    BYTE PTR [rbp+rax*2+0x387e2bff],cl
  42090e:	hlt    
  42090f:	(bad)  
  420910:	outs   dx,BYTE PTR ds:[rsi]
  420911:	sub    eax,0x306e21f4
  420916:	hlt    
  420917:	sbb    BYTE PTR [rsi+0x27],ah
  42091a:	hlt    
  42091b:	adc    BYTE PTR [rbp+0x21],bl
  42091e:	hlt    
  42091f:	or     al,0x50
  420921:	sbb    bh,bh
	...
  42093f:	xor    eax,0x52e3a37a
  420944:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  420945:	push   0xffffffffffffffff
  420947:	(bad)  
  420948:	sar    BYTE PTR [rax-0x1],0x35
  42094c:	jbe    0x420993
  42094e:	push   QWORD PTR [rbx]
  420950:	(bad)  
  420951:	(bad)  
  420952:	call   FWORD PTR [rdx]
  420954:	mov    DWORD PTR [rdi],esi
  420956:	call   QWORD PTR [rsi+rax*4]
  420959:	xor    eax,0x317f12ff
  42095e:	inc    DWORD PTR [rdx+rsi*2]
  420961:	and    eax,0xff
	...
  420976:	add    BYTE PTR [rbx-0x77],cl
  420979:	lods   eax,DWORD PTR ds:[rsi]
  42097a:	dec    DWORD PTR [rbx-0x77]
  42097d:	lods   eax,DWORD PTR ds:[rsi]
  42097e:	inc    DWORD PTR [rax-0x75]
  420981:	mov    ebp,0x6aa452f8
  420986:	call   FWORD PTR [rcx-0x4a]
  420989:	outs   dx,BYTE PTR ds:[rsi]
  42098a:	push   rcx
  42098c:	push   rdi
  42098e:	push   QWORD PTR [rbx]
  420990:	(bad)  
  420991:	(bad)  
  420992:	jmp    FWORD PTR [rdi]
  420994:	gs cmp al,0xff
  420997:	sub    eax,0x45ff4076
  42099c:	mov    dl,BYTE PTR [rdi-0x1]
  42099f:	or     eax,0xff2d82
	...
  4209b0:	add    BYTE PTR [rax],al
  4209b2:	add    BYTE PTR [rbx-0x77],cl
  4209b5:	lods   eax,DWORD PTR ds:[rsi]
  4209b6:	dec    DWORD PTR [rbp-0x2e00213d]
  4209bc:	call   0xffffffff979009b4
  4209c1:	enter  0x52f1,0xa4
  4209c5:	push   0xffffffffffffffff
  4209c7:	test   ebp,ebx
  4209c9:	nop
  4209ca:	call   FWORD PTR [rcx-0x4a]
  4209cd:	outs   dx,BYTE PTR ds:[rsi]
  4209ce:	push   rcx
  4209d0:	push   rdi
  4209d2:	push   QWORD PTR [rbx]
  4209d4:	(bad)  
  4209d5:	(bad)  
  4209d6:	push   rcx
  4209d8:	push   rdi
  4209da:	(bad)  
  4209db:	jl     0x420992
  4209dd:	mov    edi,edi
  4209df:	or     al,0x7d
  4209e1:	sub    bh,bh
	...
  4209f3:	rex.RX xchg ebx,eax
  4209f5:	mov    ebx,0xe4c58fff
  4209fa:	jmp    FWORD PTR [rdi+0x51ffe6d3]
  420a00:	fwait
  420a01:	(bad)  
  420a02:	lock push rdx
  420a04:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  420a05:	push   0xffffffffffffffff
  420a07:	xchg   edx,eax
  420a08:	jrcxz  0x4209a6
  420a0a:	call   FWORD PTR [rcx-0x4a]
  420a0d:	outs   dx,BYTE PTR ds:[rsi]
  420a0e:	call   FWORD PTR [rcx-0x4a]
  420a11:	outs   dx,BYTE PTR ds:[rsi]
  420a12:	(bad)  
  420a13:	(bad)  
  420a14:	(bad)  
  420a15:	(bad)  
  420a16:	(bad)  
  420a17:	(bad)  
  420a18:	(bad)  
  420a19:	(bad)  
  420a1a:	dec    DWORD PTR [rsp+rsi*4-0x7fe5006b]
  420a21:	xor    eax,0xff
	...
  420a32:	add    BYTE PTR [rbp-0x63],dl
  420a35:	(bad)  
  420a36:	(bad)  
  420a37:	jns    0x4209f6
  420a39:	loop   0x420a3a
  420a3b:	gs scas al,BYTE PTR es:[rdi]
  420a3d:	(bad)  
  420a3e:	call   QWORD PTR [rsi-0x5e]
  420a41:	sar    ecx,1
  420a43:	push   rdx
  420a44:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  420a45:	push   0xffffffffffffffff
  420a47:	xchg   edi,eax
  420a48:	out    0x9e,eax
  420a4a:	(bad)  
  420a4b:	jp     0x420a1c
  420a4d:	mov    edi,?
  420a4f:	icebp  
  420a50:	push   rdi
  420a52:	push   rcx
  420a54:	push   rdi
  420a56:	push   rbp
  420a58:	(bad)  
  420a59:	stc    
  420a5a:	call   FWORD PTR [rsi+0x25ffacd7]
  420a60:	mov    ?,WORD PTR [rdi]
  420a62:	inc    DWORD PTR [rax]
	...
  420a70:	add    BYTE PTR [rax],al
  420a72:	add    BYTE PTR [rbx-0x5d],bl
  420a75:	retf   0x8fff
  420a78:	int    0xec
  420a7a:	push   QWORD PTR [rdi+0x78fff1de]
  420a80:	mov    edx,0xa452ffdf
  420a85:	push   0xffffffffffffffff
  420a87:	mov    ebx,0xbcffb4f6
  420a8c:	cli    
  420a8d:	sar    edi,0xaa
  420a90:	out    dx,al
  420a91:	mov    al,0xff
  420a93:	movabs eax,ds:0xa0ffa3e59bffa7e7
  420a9c:	jmp    0xffffffffb69d0a48
  420aa1:	imul   edi,edi,0x0
	...
  420ab0:	add    BYTE PTR [rax],al
  420ab2:	add    BYTE PTR [rbp-0x59],bl
  420ab5:	int    0xff
  420ab7:	movabs ds:0x61ffe9d9bafff3d8,eax
  420ac0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  420ac1:	int    0xff
  420ac3:	fs test eax,0xa964ff68
  420ac9:	push   0x68a964ff
  420ace:	jmp    QWORD PTR [rcx+rbp*4+0x68]
  420ad2:	jmp    QWORD PTR [rcx+rbp*4+0x68]
  420ad6:	jmp    QWORD PTR [rcx+rbp*4+0x68]
  420ada:	jmp    QWORD PTR [rcx+rbp*4+0x68]
  420ade:	(bad)  
  420adf:	(bad)  
  420ae0:	or     DWORD PTR [rax-0x1],0x0
	...
  420af0:	add    BYTE PTR [rax],al
  420af2:	add    BYTE PTR [rbx-0x6d],cl
  420af5:	mov    ecx,0xccab6cff
  420afa:	jmp    FWORD PTR [rdi-0x53]
  420afd:	sar    bh,1
  420aff:	rex.WXB cdqe 
  420b01:	sar    edi,0xd
  420b04:	pop    rsp
  420b05:	mov    bh,bh
  420b07:	add    BYTE PTR [rcx+0x6f],al
  420b0a:	jmp    QWORD PTR [rdx]
  420b0c:	jb     0x420aab
  420b0e:	call   FWORD PTR [rcx-0x61]
  420b11:	(bad)  
  420b12:	call   QWORD PTR [rbp-0x66]
  420b15:	mov    edi,0x8f672fff
  420b1a:	inc    DWORD PTR [rdi]
  420b1c:	es push rsp
  420b1e:	inc    DWORD PTR [rax]
	...
  420b2c:	add    BYTE PTR [rax],al
  420b2e:	add    BYTE PTR [rcx-0x65],ah
  420b31:	mov    ebx,0xc8a86ffd
  420b36:	jmp    QWORD PTR [rsi-0x61]
  420b39:	ret    0x45ff
  420b3c:	sub    DWORD PTR [rbx-0x7baae401],0xffffffff
  420b43:	add    edi,DWORD PTR [rax+rsi*2]
  420b46:	dec    DWORD PTR [rax]
  420b48:	push   rdi
  420b49:	mov    edi,edi
  420b4b:	sub    eax,0x2cffb988
  420b50:	sub    DWORD PTR [rdi-0x426ab801],0xcaa661ff
  420b5a:	call   FWORD PTR [rbx-0x64]
  420b5d:	sar    edi,0x47
  420b60:	jg     0x420b06
  420b62:	std    
	...
  420b6b:	push   0x3bffb298
  420b70:	jge    0x420b17
  420b72:	jmp    0xffffffffffe986ae
  420b77:	or     al,0x52
  420b79:	mov    bh,bh
  420b7b:	add    BYTE PTR [rcx],ah
  420b7d:	push   rsp
  420b7e:	inc    DWORD PTR [rax]
  420b80:	sbb    al,0x4b
  420b82:	inc    DWORD PTR [rax]
  420b84:	(bad)  
  420b85:	pop    rdx
  420b86:	dec    DWORD PTR [rsi]
  420b88:	pop    rsi
  420b89:	mov    ?,edi
  420b8b:	rex.B (bad) 
  420b8d:	enter  0x3dff,0x95
  420b91:	(bad)  
  420b92:	push   QWORD PTR [rdx+rcx*4]
  420b95:	mov    ecx,0xa77722ff
  420b9a:	jmp    FWORD PTR [rdx]
  420b9c:	js     0x420b42
  420b9e:	jmp    FWORD PTR [rsi]
  420ba0:	imul   edx,DWORD PTR [rax-0x5a7fb717],0xff
  420baa:	add    BYTE PTR [rax],al
  420bac:	add    BYTE PTR [rax],al
  420bae:	add    BYTE PTR [rax-0x58],bh
  420bb1:	leave  
  420bb2:	push   QWORD PTR [rbx-0x4c]
  420bb5:	(bad)  
  420bb7:	cmp    ecx,DWORD PTR [rbp+0x6414ffbc]
  420bbd:	xchg   edi,eax
  420bbe:	inc    DWORD PTR [rbx]
  420bc0:	rex.X jne 0x420bc2
  420bc3:	add    BYTE PTR [rcx],ch
  420bc5:	pop    rdx
  420bc6:	call   QWORD PTR [rax]
  420bc8:	(bad)  
  420bc9:	nop
  420bca:	inc    DWORD PTR [rbx-0x67]
  420bcd:	(bad)  
  420bce:	jmp    FWORD PTR [rip+0x2affb281]        # 0x2b41be55
  420bd4:	xor    DWORD PTR [rbp-0x457bdd01],0xbf8d2dff
  420bde:	push   QWORD PTR [rdi]
  420be0:	(bad)  
  420be1:	lods   eax,DWORD PTR ds:[rsi]
  420be2:	repnz add BYTE PTR [rax],al
  420be5:	add    BYTE PTR [rax],al
  420be7:	add    BYTE PTR [rax],al
  420be9:	add    BYTE PTR [rax],al
  420beb:	js     0x420b95
  420bed:	leave  
  420bee:	(bad)  
  420bef:	mov    ebp,0xc8fffce5
  420bf4:	out    dx,eax
  420bf5:	(bad)  
  420bf6:	call   FWORD PTR [rdi+0x65fffada]
  420bfc:	mov    bh,0xe1
  420bfe:	push   QWORD PTR [rbx]
  420c00:	xchg   edx,eax
  420c01:	(bad)  
  420c04:	imul   ebx,DWORD PTR [rsi-0x709ee801],0xb0822dff
  420c0e:	push   QWORD PTR [rdi+rcx*4]
  420c11:	sar    edi,0x4b
  420c14:	movabs ds:0xc781ffe3b96affd2,al
  420c1d:	in     al,dx
  420c1e:	inc    DWORD PTR [rax+0x58ffe7c3]
  420c24:	xchg   ebp,eax
  420c25:	mov    esi,0xf3
  420c2a:	add    BYTE PTR [rax],al
  420c2c:	add    BYTE PTR [rax],al
  420c2e:	add    BYTE PTR [rax-0x58],bh
  420c31:	leave  
  420c32:	(bad)  
  420c33:	js     0x420bdd
  420c35:	leave  
  420c36:	jmp    QWORD PTR [rax-0x66000f2d]
  420c3c:	shl    bl,cl
  420c3e:	(bad)  
  420c3f:	js     0x420c04
  420c41:	(bad)  
  420c42:	(bad)  
  420c43:	ds cwde 
  420c45:	enter  0xe5,0x0
  420c49:	add    BYTE PTR [rax],al
  420c4b:	rex.X xchg ecx,eax
  420c4d:	mov    esi,0xe8c175e9
  420c52:	call   QWORD PTR [rcx-0x6c001032]
  420c58:	retf   0xffea
  420c5b:	js     0x420c05
  420c5d:	leave  
  420c5e:	(bad)  
  420c5f:	js     0x420c09
  420c61:	leave  
  420c62:	inc    DWORD PTR [rax]
	...
  420c74:	add    BYTE PTR [rax],al
  420c76:	add    BYTE PTR [rax-0x58],bh
  420c79:	leave  
  420c7a:	(bad)  
  420c7b:	js     0x420c25
  420c7d:	leave  
  420c7e:	(bad)  
  420c7f:	js     0x420c29
  420c81:	leave  
  420c82:	inc    DWORD PTR [rax]
	...
  420c8c:	add    BYTE PTR [rax],al
  420c8e:	add    BYTE PTR [rax-0x58],bh
  420c91:	leave  
  420c92:	(bad)  
  420c93:	jnp    0x420c4f
  420c95:	fsubp  st(2),st
  420c97:	js     0x420c41
  420c99:	leave  
  420c9a:	inc    DWORD PTR [rax]
	...
  420ce4:	add    BYTE PTR [rax],al
  420ce6:	add    dh,bh
  420ce8:	add    DWORD PTR [rax],eax
  420cea:	add    ah,bh
  420cec:	add    DWORD PTR [rax],eax
  420cee:	add    al,dh
  420cf0:	add    DWORD PTR [rax],eax
  420cf2:	add    al,ah
  420cf4:	add    DWORD PTR [rax],eax
  420cf6:	add    al,ah
  420cf8:	add    DWORD PTR [rax],eax
  420cfa:	add    al,ah
  420cfc:	add    DWORD PTR [rax],eax
  420cfe:	add    al,ah
  420d00:	add    DWORD PTR [rax],eax
  420d02:	add    al,ah
  420d04:	add    DWORD PTR [rax],eax
  420d06:	add    al,ah
  420d08:	add    eax,DWORD PTR [rax]
  420d0a:	add    al,al
  420d0c:	add    DWORD PTR [rax],eax
  420d0e:	add    BYTE PTR [rax-0x40000000],al
  420d14:	add    DWORD PTR [rax],eax
  420d16:	add    BYTE PTR [rax-0x40000000],al
  420d1c:	add    DWORD PTR [rax],0xc7f100
  420d22:	add    bh,bh
  420d24:	inc    DWORD PTR [rax]
  420d26:	add    BYTE PTR [rbx],cl
  420d28:	add    BYTE PTR [rcx],al
  420d2b:	add    BYTE PTR [rax],al
  420d2d:	add    bh,bh
  420d2f:	(bad)  
  420d30:	(bad)  
  420d31:	inc    DWORD PTR [rcx]
  420d33:	add    BYTE PTR [rax],al
  420d35:	add    BYTE PTR [rax],al
  420d37:	add    BYTE PTR [rax],al
  420d39:	add    BYTE PTR [rdx+rax*1],cl
  420d3c:	add    BYTE PTR [rax],al
  420d3e:	add    BYTE PTR [rcx+0x53],dl
  420d41:	jns    0x420db6
  420d43:	je     0x420daa
  420d45:	ins    DWORD PTR es:[rdi],dx
  420d46:	cs rex.R jb 0x420dab
  420d4a:	ja     0x420db5
  420d4c:	outs   dx,BYTE PTR ds:[rsi]
  420d4d:	addr32 sub al,0x20
  420d50:	push   rsi
  420d51:	gs jb  0x420dc7
  420d54:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  420d5b:	xor    BYTE PTR cs:[rsi],ch
  420d5e:	xor    BYTE PTR [rax+riz*1],ch
  420d61:	rex.XB jne 0x420dd0
  420d64:	je     0x420ddb
  420d66:	jb     0x420dcd
  420d68:	cmp    eax,0x7475656e
  420d6d:	jb     0x420dd0
  420d6f:	ins    BYTE PTR es:[rdi],dx
  420d70:	sub    al,0x20
  420d72:	push   rax
  420d73:	jne    0x420dd7
  420d75:	ins    BYTE PTR es:[rdi],dx
  420d76:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  420d7d:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  420d81:	(bad)  
  420d82:	xor    BYTE PTR [rbx],dh
  420d84:	xor    ax,0x3766
  420d88:	xor    WORD PTR [rcx],si
  420d8b:	fs xor eax,0x61336130
  420d91:	add    eax,0x1
  420d96:	adc    edx,DWORD PTR [rbx+0x79]
  420d99:	jae    0x420e0f
  420d9b:	gs ins DWORD PTR es:[rdi],dx
  420d9d:	cs rex.R jb 0x420e02
  420da1:	ja     0x420e0c
  420da3:	outs   dx,BYTE PTR ds:[rsi]
  420da4:	movsxd rbp,DWORD PTR cs:[r15d+0x6e]
  420daa:	add    al,BYTE PTR [rax]
  420dac:	add    BYTE PTR [rax],al
  420dae:	or     BYTE PTR [rcx+0x63],cl
  420db1:	outs   dx,DWORD PTR ds:[rsi]
  420db2:	outs   dx,BYTE PTR ds:[rsi]
  420db3:	rex.R (bad) 
  420db5:	je     0x420e18
  420db7:	or     BYTE PTR [rcx+0x63],cl
  420dba:	outs   dx,DWORD PTR ds:[rsi]
  420dbb:	outs   dx,BYTE PTR ds:[rsi]
  420dbc:	push   rbx
  420dbd:	imul   edi,DWORD PTR [rdx+0x65],0x13020407
  420dc4:	push   rbx
  420dc5:	jns    0x420e3a
  420dc7:	je     0x420e2e
  420dc9:	ins    DWORD PTR es:[rdi],dx
  420dca:	cs rex.R jb 0x420e2f
  420dce:	ja     0x420e39
  420dd0:	outs   dx,BYTE PTR ds:[rsi]
  420dd1:	addr32 cs push rbx
  420dd4:	imul   edi,DWORD PTR [rdx+0x65],0x2
  420ddb:	add    al,BYTE PTR [rax]
  420ddd:	add    BYTE PTR [rax],al
  420ddf:	or     DWORD PTR [rbx],eax
  420de1:	add    BYTE PTR [rax],al
  420de3:	add    BYTE PTR [rip+0xfffffffffffffffc],al        # 0x420de5
  420de9:	adc    edx,DWORD PTR [rbx+0x79]
  420dec:	jae    0x420e62
  420dee:	gs ins DWORD PTR es:[rdi],dx
  420df0:	cs rex.R jb 0x420e55
  420df4:	ja     0x420e5f
  420df6:	outs   dx,BYTE PTR ds:[rsi]
  420df7:	addr32 cs push rbx
  420dfa:	imul   edi,DWORD PTR [rdx+0x65],0x2
  420e01:	add    eax,0x74646977
  420e06:	push   0x69656806
  420e0b:	addr32 push 0x8000074
  420e11:	or     BYTE PTR [rdx],al
	...
  420e1b:	add    BYTE PTR [rax],al
  420e1d:	add    BYTE PTR [rdi],cl
  420e1f:	add    eax,DWORD PTR [rax]
  420e21:	add    BYTE PTR [rax],al
  420e23:	xchg   esi,eax
  420e24:	(bad)  
  420e25:	add    BYTE PTR [rax],al
  420e27:	add    al,BYTE PTR [rax]
  420e29:	add    BYTE PTR [rcx],al
  420e2b:	add    BYTE PTR [rsi],al
  420e2d:	add    BYTE PTR [rax],ah
  420e2f:	and    BYTE PTR [rax],dl
  420e31:	add    BYTE PTR [rcx],al
  420e33:	add    BYTE PTR [rax+rax*1],al
  420e36:	call   0x66420e3d
  420e3b:	add    BYTE PTR [rax],al
  420e3d:	add    BYTE PTR [rax],dl
  420e3f:	adc    BYTE PTR [rax],dl
  420e41:	add    BYTE PTR [rcx],al
  420e43:	add    BYTE PTR [rax+rax*1],al
  420e46:	sub    BYTE PTR [rcx],al
  420e48:	add    BYTE PTR [rax],al
  420e4a:	rex.WRX add r8,QWORD PTR [rax]
  420e4d:	add    BYTE PTR [rax],ah
  420e4f:	and    BYTE PTR [rax],al
  420e51:	add    BYTE PTR [rcx],al
  420e53:	add    BYTE PTR [rax],cl
  420e55:	add    BYTE PTR [rax+0x76000008],ch
  420e5b:	add    al,0x0
  420e5d:	add    BYTE PTR [rax],dl
  420e5f:	adc    BYTE PTR [rax],al
  420e61:	add    BYTE PTR [rcx],al
  420e63:	add    BYTE PTR [rax],cl
  420e65:	add    BYTE PTR [rax+0x5],ch
  420e68:	add    BYTE PTR [rax],al
  420e6a:	(bad)  
  420e6b:	or     eax,0x20200000
  420e70:	add    BYTE PTR [rax],al
  420e72:	add    DWORD PTR [rax],eax
  420e74:	and    BYTE PTR [rax],al
  420e76:	test   al,0x10
  420e78:	add    BYTE PTR [rax],al
  420e7a:	xchg   BYTE PTR [rdx],dl
  420e7c:	add    BYTE PTR [rax],al
  420e7e:	adc    BYTE PTR [rax],dl
  420e80:	add    BYTE PTR [rax],al
  420e82:	add    DWORD PTR [rax],eax
  420e84:	and    BYTE PTR [rax],al
  420e86:	push   0x2e000004
  420e8b:	and    eax,DWORD PTR [rax]
  420e8d:	add    BYTE PTR [rax],ch
  420e8f:	add    BYTE PTR [rax],al
  420e91:	add    BYTE PTR [rax],ah
  420e93:	add    BYTE PTR [rax],al
  420e95:	add    BYTE PTR [rax+0x0],al
  420e98:	add    BYTE PTR [rax],al
  420e9a:	add    DWORD PTR [rax],eax
  420e9c:	add    al,0x0
  420e9e:	add    BYTE PTR [rax],al
  420ea0:	add    BYTE PTR [rax],al
  420ea2:	add    BYTE PTR [rdx],al
	...
  420ebc:	add    BYTE PTR [rax],0x0
  420ebf:	add    BYTE PTR [rax],0x0
  420ec2:	add    BYTE PTR [rax+0x800080],al
  420ec8:	add    BYTE PTR [rax],al
  420eca:	add    BYTE PTR [rax],0x80
  420ecd:	add    BYTE PTR [rax-0x7fffff80],al
  420ed3:	add    BYTE PTR [rax-0x3f3f4000],0x0
  420eda:	add    BYTE PTR [rax],al
  420edc:	inc    DWORD PTR [rax]
  420ede:	add    bh,bh
  420ee0:	add    BYTE PTR [rax],al
  420ee2:	add    bh,bh
  420ee4:	inc    DWORD PTR [rax]
  420ee6:	inc    DWORD PTR [rax]
  420ee8:	add    BYTE PTR [rax],al
  420eea:	inc    DWORD PTR [rax]
  420eec:	inc    DWORD PTR [rax]
  420eee:	(bad)  
  420eef:	inc    DWORD PTR [rax]
  420ef1:	add    bh,bh
  420ef3:	(bad)  
  420ef4:	inc    DWORD PTR [rax]
	...
  420f1a:	add    BYTE PTR [rax],al
  420f1c:	add    BYTE PTR [rdi],ah
  420f1e:	and    dh,BYTE PTR [rdx+0x36]
  420f21:	and    esp,DWORD PTR [rbx+0x62]
  420f24:	add    BYTE PTR ss:[rax],al
  420f27:	add    BYTE PTR [rax],al
  420f29:	add    BYTE PTR [rax],al
  420f2b:	add    BYTE PTR [rax],al
  420f2d:	(bad)  
  420f2e:	jae    0x420fa3
  420f30:	movsxd esp,DWORD PTR [rdx+0x72]
  420f33:	and    eax,DWORD PTR ss:[rax]
  420f36:	add    BYTE PTR [rax],al
  420f38:	add    BYTE PTR [rax],al
  420f3a:	add    BYTE PTR [rax],al
  420f3c:	add    BYTE PTR [rax+0x77],bh
  420f3f:	es ja  0x420f75
  420f42:	(bad)  
  420f43:	(bad)  
  420f44:	add    BYTE PTR ss:[rax],al
  420f47:	add    BYTE PTR [rdi+0x77],al
  420f4d:	sub    BYTE PTR [rdx+0x78],bh
  420f50:	and    esi,DWORD PTR [rsi+0x3a]
  420f53:	jb     0x420fb8
  420f55:	add    BYTE PTR [rax],al
  420f57:	(bad)  
  420f58:	(bad)
  420f5c:	add    BYTE PTR [rdi],ch
  420f5e:	(bad)  
  420f5f:	clc    
  420f60:	(bad)  
  420f61:	jp     0x420fda
  420f63:	xor    esp,DWORD PTR [rsi+0x77770000]
  420f69:	pop    QWORD PTR [rdi-0x7087ff90]
  420f6f:	dec    DWORD PTR [rax+0x72638870]
  420f75:	add    BYTE PTR [rax],al
  420f77:	add    BYTE PTR [rax],al
  420f79:	outs   dx,DWORD PTR ds:[rsi]
  420f7a:	xchg   DWORD PTR [rax+0x0],esi
  420f7d:	js     0x420ffa
  420f7f:	(bad)  
  420f80:	clc    
  420f81:	vpperm ymm0,ymm11,YMMWORD PTR [r8],ymm0
  420f87:	add    BYTE PTR [rax],al
  420f89:	jg     0x420f12
  420f8b:	(bad)  
  420f8c:	add    BYTE PTR [rax],bh
  420f8e:	xchg   DWORD PTR [rdi+0x37f8ffff],ebp
  420f94:	add    BYTE PTR es:[rax],al
  420f97:	ja     0x421010
  420f99:	mov    BYTE PTR [rax-0x7787ffa0],cl
  420f9f:	ja     0x420fa0
  420fa1:	(bad)  
  420fa2:	clc    
  420fa3:	jae    0x421008
  420fa5:	add    BYTE PTR [rax],al
  420fa7:	or     al,bh
  420fa9:	mov    BYTE PTR [rdi+0x77780070],al
  420faf:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  420fb0:	clc    
  420fb1:	dec    DWORD PTR [rdi+0xa777]
  420fb7:	or     BYTE PTR [rdi-0x8],bh
  420fba:	mov    BYTE PTR [rdi+0x7f887800],al
  420fc0:	(bad)  
  420fc1:	(bad)  
  420fc2:	clc    
  420fc3:	jp     0x421037
  420fc5:	add    BYTE PTR [rax],al
  420fc7:	add    BYTE PTR [rdi],al
  420fc9:	ja     0x420f53
  420fcb:	xchg   DWORD PTR [rax+0x78],esi
  420fce:	js     0x420f7f
  420fd0:	(bad)  
  420fd1:	(bad)  
  420fd2:	push   QWORD PTR [rdi+0x37]
  420fd5:	add    BYTE PTR [rax],al
  420fd7:	add    BYTE PTR [rax],al
  420fd9:	add    BYTE PTR [rsi-0x78978878],al
  420fdf:	mov    BYTE PTR [rdi+0x728a7888],al
  420fe5:	add    BYTE PTR [rax],al
  420fe7:	add    BYTE PTR [rax],al
  420fe9:	add    BYTE PTR [rax],cl
  420feb:	js     0x420f75
  420fed:	js     0x420f77
  420fef:	mov    BYTE PTR [rax+0x76888888],cl
  420ff5:	add    BYTE PTR [rax],al
  420ff7:	add    BYTE PTR [rax],al
  420ff9:	add    BYTE PTR [rax],al
  420ffb:	xchg   DWORD PTR [rsi-0x5858888a],ecx
  421001:	jp     0x42107d
  421003:	jp     0x42103f
  421005:	add    BYTE PTR [rax],al
  421007:	add    BYTE PTR [rax],al
  421009:	add    BYTE PTR [rax],al
  42100b:	or     BYTE PTR [rax-0x79],bh
  42100e:	jo     0x421010
	...
  42101c:	xchg   DWORD PTR [rdi+0x76],eax
	...
  42102a:	add    BYTE PTR [rax],al
  42102c:	or     BYTE PTR [rdi+0x77],ch
  42102f:	jo     0x421031
	...
  42103d:	test   bh,dh
  42103f:	jbe    0x4210b7
  421041:	ja     0x420fc3
	...
  42104b:	add    BYTE PTR [rax],al
  42104d:	or     BYTE PTR [rdi+0x78],ch
  421050:	ja     0x4210c9
  421052:	add    BYTE PTR [eax],al
	...
  42105d:	add    BYTE PTR [rdi-0x78],dh
  421060:	ja     0x420fea
  421062:	ja     0x4210d4
	...
  42106c:	add    BYTE PTR [rax],al
  42106e:	(bad)  
  42106f:	mov    BYTE PTR [rsp+riz*2+0x64],bh
  421073:	jo     0x421075
	...
  42107d:	add    BYTE PTR [rdi],al
  42107f:	mov    BYTE PTR [rdi+0x0],al
	...
  42108d:	add    BYTE PTR [rdi],al
  42108f:	mov    BYTE PTR [rsi+0x0],al
	...
  42109d:	add    BYTE PTR [rax],cl
  42109f:	mov    BYTE PTR [rdi+0x0],al
	...
  4210ad:	add    BYTE PTR [rax],cl
  4210af:	js     0x421038
  4210b1:	gs add BYTE PTR gs:[rax],0x0
	...
  4210be:	add    BYTE PTR [rsi+0x6788f8],al
	...
  4210cc:	add    BYTE PTR [rax],al
  4210ce:	add    BYTE PTR [rax],cl
  4210d0:	ja     0x421139
  4210d2:	add    BYTE PTR [rax],0x0
	...
  4210f5:	add    bh,bh
  4210f7:	(bad)  
  4210f8:	(bad)  
  4210f9:	(bad)  
  4210fa:	(bad)  
  4210fb:	(bad)  
  4210fc:	(bad)  
  4210fd:	(bad)  
  4210fe:	(bad)  
  4210ff:	cld    
  421100:	add    BYTE PTR [rbx],al
  421102:	(bad)  
  421103:	cld    
  421104:	add    BYTE PTR [rbx],al
  421106:	(bad)  
  421107:	cld    
  421108:	add    BYTE PTR [rbx],al
  42110a:	lock cld 
  42110c:	add    BYTE PTR [rbx],al
  42110e:	loopne 0x42114c
  421110:	add    BYTE PTR [rbx],al
  421112:	rcr    BYTE PTR [rax+rax*1],0x3
  421116:	cld    
  421117:	sbb    al,0x0
  421119:	add    edi,esp
  42111b:	sbb    al,0x0
  42111d:	add    eax,eax
  42111f:	sbb    al,0x0
  421121:	add    esp,eax
  421123:	sbb    al,0x0
  421125:	add    esp,eax
  421127:	or     al,0x0
  421129:	add    edi,eax
  42112b:	add    al,0x0
  42112d:	add    edi,edi
  42112f:	add    BYTE PTR [rax],al
  421131:	add    edi,edi
  421133:	add    BYTE PTR [rax],0x3
  421136:	inc    eax
  421138:	add    BYTE PTR [rbx],al
  42113a:	jmp    rax
  42113c:	jg     0x42113d
  42113e:	push   rax
  421140:	(bad)  
  421141:	(bad)  
  421142:	(bad)  
  421143:	clc    
  421144:	(bad)  
  421145:	(bad)  
  421146:	(bad)  
  421147:	cld    
  421148:	add    BYTE PTR [rdi-0x1],bh
  42114b:	inc    BYTE PTR [rax]
  42114d:	(bad)  
  42114e:	(bad)  
  42114f:	inc    DWORD PTR [rax]
  421151:	(bad)  
  421152:	(bad)  
  421153:	inc    DWORD PTR [rax-0x7c0000e1]
  421159:	(bad)  
  42115a:	(bad)  
  42115b:	inc    DWORD PTR [rbx-0x7c000001]
  421161:	(bad)  
  421162:	(bad)  
  421163:	inc    DWORD PTR [rax-0x3f0000e1]
  421169:	(bad)  
  42116a:	(bad)  
  42116b:	jmp    rax
  42116d:	jg     0x42116e
  42116f:	(bad)  
  421170:	(bad)  
  421171:	(bad)  
  421172:	(bad)  
  421173:	(bad)  
  421174:	(bad)  
  421175:	jmp    FWORD PTR [rax]
  421177:	add    BYTE PTR [rax],al
  421179:	add    BYTE PTR [rax],dl
  42117b:	add    BYTE PTR [rax],al
  42117d:	add    BYTE PTR [rax],ah
  42117f:	add    BYTE PTR [rax],al
  421181:	add    BYTE PTR [rcx],al
  421183:	add    BYTE PTR [rax+rax*1],al
  421186:	add    BYTE PTR [rax],al
  421188:	add    BYTE PTR [rax],al
  42118a:	add    BYTE PTR [rax],0x0
	...
  4211a1:	add    BYTE PTR [rax],al
  4211a3:	add    BYTE PTR [rax+0x800000],al
  4211a9:	add    BYTE PTR [rax],al
  4211ab:	add    BYTE PTR [rax+0x8000],0x0
  4211b2:	add    BYTE PTR [rax],0x80
  4211b5:	add    BYTE PTR [rax-0x7fffff80],al
  4211bb:	add    BYTE PTR [rax-0x3f3f4000],0x0
  4211c2:	add    BYTE PTR [rax],al
  4211c4:	inc    DWORD PTR [rax]
  4211c6:	add    bh,bh
  4211c8:	add    BYTE PTR [rax],al
  4211ca:	add    bh,bh
  4211cc:	inc    DWORD PTR [rax]
  4211ce:	inc    DWORD PTR [rax]
  4211d0:	add    BYTE PTR [rax],al
  4211d2:	inc    DWORD PTR [rax]
  4211d4:	inc    DWORD PTR [rax]
  4211d6:	(bad)  
  4211d7:	inc    DWORD PTR [rax]
  4211d9:	add    bh,bh
  4211db:	(bad)  
  4211dc:	inc    DWORD PTR [rax]
	...
  4211e6:	add    BYTE PTR [rax],al
  4211e8:	add    BYTE PTR [rdx],al
  4211ea:	jb     0x42120e
  4211ec:	and    ah,BYTE PTR [rax]
  4211ee:	add    BYTE PTR [rax],al
  4211f0:	add    BYTE PTR [rdi],al
  4211f2:	(bad)  
  4211f3:	xor    dh,BYTE PTR ss:[rax]
  4211f6:	add    BYTE PTR [rdi],al
  4211f8:	jo     0x421201
  4211fa:	scas   eax,DWORD PTR es:[rdi]
  4211fb:	and    esp,DWORD PTR [rbx+0x20]
  4211fe:	add    BYTE PTR [rax],al
  421200:	ja     0x42120a
  421202:	xchg   edx,esi
  421204:	mul    DWORD PTR [rax]
  421206:	or     BYTE PTR [rax],al
  421208:	jbe    0x421211
  42120a:	mov    bh,BYTE PTR [rdi-0x9]
  42120d:	and    BYTE PTR [rdi],al
  42120f:	mov    BYTE PTR [rdi+0x8],dh
  421212:	js     0x421213
  421214:	clc    
  421215:	and    BYTE PTR [rax],al
  421217:	ja     0x421298
  421219:	mov    BYTE PTR [eax+0xa088],cl
  421220:	or     dh,dh
  421222:	xor    dh,BYTE PTR [rbx]
  421224:	and    esi,DWORD PTR [rax+0x0]
  421227:	add    BYTE PTR [rax],al
  421229:	jg     0x42129b
  42122b:	add    BYTE PTR [rax],al
  42122d:	add    BYTE PTR [rax],al
  42122f:	add    BYTE PTR [rax],al
  421231:	or     bh,dh
  421233:	add    BYTE PTR [eax],al
  421236:	add    BYTE PTR [rax],al
  421238:	add    BYTE PTR [rax],al
  42123a:	js     0x4211c3
  42123c:	jo     0x42123e
  42123e:	add    BYTE PTR [rax],al
  421240:	add    BYTE PTR [rax],al
  421242:	ja     0x421244
  421244:	add    BYTE PTR [rax],0x0
  421247:	add    BYTE PTR [rax],al
  421249:	add    BYTE PTR [rax+0x0],cl
  42124f:	add    BYTE PTR [rax],al
  421251:	add    BYTE PTR [rax],cl
  421253:	add    BYTE PTR [rax],0x0
	...
  42125e:	(bad)  
  42125f:	inc    DWORD PTR [rax]
  421261:	add    dh,bh
  421263:	add    DWORD PTR [rax],eax
  421265:	add    dh,bh
  421267:	add    DWORD PTR [rax],eax
  421269:	add    dh,ah
  42126b:	add    DWORD PTR [rax],eax
  42126d:	add    dl,dh
  42126f:	add    DWORD PTR [rax],eax
  421271:	add    BYTE PTR [rdx-0x7dffffff],dh
  421277:	add    DWORD PTR [rax],eax
  421279:	add    al,al
  42127b:	add    DWORD PTR [rax],eax
  42127d:	add    al,bh
  42127f:	add    DWORD PTR [rax],eax
  421281:	add    ah,bh
  421283:	jg     0x421285
  421285:	add    dh,bh
  421287:	sldt   WORD PTR [rax]
  42128a:	inc    DWORD PTR [rdi]
  42128c:	add    BYTE PTR [rax],al
  42128e:	push   QWORD PTR [rdi]
  421290:	add    BYTE PTR [rax],al
  421292:	(bad)  
  421293:	(bad)  
  421294:	add    BYTE PTR [rax],al
  421296:	call   FWORD PTR [rdi-0x10000]
  42129c:	add    BYTE PTR [rax],al
  42129e:	sub    BYTE PTR [rax],al
  4212a0:	add    BYTE PTR [rax],al
  4212a2:	and    BYTE PTR [rax],al
  4212a4:	add    BYTE PTR [rax],al
  4212a6:	add    BYTE PTR [rax],al
  4212a9:	add    BYTE PTR [rcx],al
  4212ab:	add    BYTE PTR [rax],cl
  4212ad:	add    BYTE PTR [rax],al
  4212af:	add    BYTE PTR [rax],al
  4212b1:	add    BYTE PTR [rax],al
  4212b3:	add    al,0x0
	...
  4212bd:	add    BYTE PTR [rax],al
  4212bf:	add    DWORD PTR [rax],eax
  4212c1:	add    BYTE PTR [rax],al
  4212c3:	add    DWORD PTR [rax],eax
  4212c5:	add    BYTE PTR [rax],al
  4212c7:	add    BYTE PTR [rax],al
  4212c9:	add    BYTE PTR [rbx],dh
  4212cb:	xor    esi,DWORD PTR [rbx]
  4212cd:	add    BYTE PTR [rbx],dh
  4212cf:	xor    ax,WORD PTR [rax]
  4212d2:	movsxd ecx,DWORD PTR [rax+0x33]
  4212d5:	add    BYTE PTR [rbx],dh
  4212d7:	data16 data16 add BYTE PTR [rbp+0x55],ch
  4212dc:	rex.X add BYTE PTR [rax+0x55],sil
  4212e0:	add    BYTE PTR [r9+rbx*2+0x45],sil
  4212e5:	add    BYTE PTR [rsi+0x5d],dh
  4212e8:	rex.WB add BYTE PTR [r11+0x61],dil
  4212ec:	rex.WRB add BYTE PTR [r13+0x63],r15b
  4212f0:	rex.WRX add BYTE PTR [rsi+0x66],r12b
  4212f4:	data16 add BYTE PTR [rcx-0x7cffaa99],al
  4212fb:	ins    BYTE PTR es:[rdi],dx
  4212fc:	pop    rcx
  4212fd:	add    BYTE PTR [rbx-0x78ffa393],al
  421303:	outs   dx,DWORD PTR ds:[rsi]
  421304:	pop    rbp
  421305:	add    BYTE PTR [rcx-0x74ffa190],cl
  42130b:	jno    0x42136d
  42130d:	add    BYTE PTR [rsi-0x73ff9c8d],cl
  421313:	je     0x421378
  421315:	add    BYTE PTR [rbp-0x6fff9a8a],cl
  42131b:	jne    0x421381
  42131d:	add    BYTE PTR [rcx-0x6bff9887],dl
  421323:	jns    0x42138a
  421325:	add    BYTE PTR [rcx-0x6dff9787],dl
  42132b:	jge    0x421398
  42132d:	add    BYTE PTR [rdx-0x6aff9383],dl
  421333:	jg     0x4213a3
  421335:	add    BYTE PTR [rax-0x66ff9483],bl
  42133b:	jle    0x4213aa
  42133d:	add    BYTE PTR [rbx],dh
  42133f:	cdq    
  421340:	xor    eax,DWORD PTR [rax]
  421342:	xor    ebx,DWORD PTR [rcx-0x7487ff9a]
  421348:	data16 add BYTE PTR [rsi-0x67],ah
  42134c:	data16 add BYTE PTR [rax+rdx*4+0x6b],bh
  421351:	add    BYTE PTR [rsi-0x34],ah
  421354:	data16 add BYTE PTR [rsi-0x69ff9080],dl
  42135b:	(bad)  
  42135c:	jb     0x42135e
  42135e:	xchg   esi,eax
  42135f:	xor    DWORD PTR [rbp+0x0],0xffffff97
  421363:	test   BYTE PTR [rax+rax*1-0x67],dh
  421367:	(bad)  
  421368:	jno    0x42136a
  42136a:	lahf   
  42136b:	test   BYTE PTR [rbx+0x0],dh
  42136e:	pushf  
  42136f:	test   DWORD PTR [rbp+0x0],esi
  421372:	lahf   
  421373:	mov    DWORD PTR [rcx+0x0],edi
  421376:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  421377:	mov    edi,DWORD PTR [rcx+0x0]
  42137a:	movabs ds:0xa9007d8da5007e8d,al
  421383:	(bad)  
  421384:	jle    0x421386
  421386:	data16 int3 
  421388:	cdq    
  421389:	add    BYTE PTR [rcx-0x5dff7e72],ah
  42138f:	nop
  421390:	(bad)  
  421391:	add    BYTE PTR [rsi-0x59ff7e6f],ah
  421397:	xchg   ebx,eax
  421398:	test   DWORD PTR [rax],eax
  42139a:	stos   BYTE PTR es:[rdi],al
  42139b:	xchg   ecx,eax
  42139c:	add    DWORD PTR [rax],0x8192ad
  4213a2:	test   eax,0xad008494
  4213a7:	xchg   ebp,eax
  4213a8:	xchg   BYTE PTR [rax],al
  4213aa:	test   eax,0xad008a97
  4213af:	xchg   edi,eax
  4213b0:	mov    DWORD PTR [rax],eax
  4213b2:	lods   eax,DWORD PTR ds:[rsi]
  4213b3:	cdq    
  4213b4:	mov    eax,DWORD PTR [rax]
  4213b6:	lods   eax,DWORD PTR ds:[rsi]
  4213b7:	fwait
  4213b8:	mov    es,WORD PTR [rax]
  4213ba:	scas   eax,DWORD PTR es:[rdi]
  4213bb:	pushf  
  4213bc:	pop    QWORD PTR [rax]
  4213be:	mov    al,0x97
  4213c0:	mov    BYTE PTR [rax],al
  4213c2:	mov    dl,0x99
  4213c4:	mov    DWORD PTR [rax],eax
  4213c6:	mov    ah,0x9a
  4213c8:	mov    al,BYTE PTR [rax]
  4213ca:	mov    ch,0x9b
  4213cc:	lea    eax,[rax]
  4213ce:	mov    ch,0x9c
  4213d0:	lea    eax,[rax]
  4213d2:	mov    ecx,0xae008e9e
  4213d7:	sahf   
  4213d8:	xchg   ecx,eax
  4213d9:	add    BYTE PTR [rax-0x47ff6c61],dh
  4213df:	sahf   
  4213e0:	nop
  4213e1:	add    BYTE PTR [rbx+riz*4-0x5f45ff69],dh
  4213e8:	xchg   ecx,eax
  4213e9:	add    BYTE PTR [rbx-0x43ff6b5e],bh
  4213ef:	movabs ds:0xa6be009aa6b80096,eax
  4213f8:	cwde   
  4213f9:	add    BYTE PTR [rax-0x48ff6359],bh
  4213ff:	test   al,0x9e
  421401:	add    BYTE PTR [rdi-0x43ff624b],ch
  421407:	stos   DWORD PTR es:[rdi],eax
  421408:	movabs al,ds:0x9eaac100a2adbe00
  421411:	add    bl,al
  421413:	lods   eax,DWORD PTR ds:[rsi]
  421414:	movabs al,ds:0xa5b1c700a5b0c000
  42141d:	add    dl,al
  42141f:	mov    bl,0xa9
  421421:	add    cl,al
  421423:	mov    ah,0xab
  421425:	add    al,cl
  421427:	mov    bl,0xa8
  421429:	add    cl,cl
  42142b:	mov    ch,0xab
  42142d:	add    dh,al
  42142f:	mov    ecx,0xb8cb00af
  421434:	lods   al,BYTE PTR ds:[rsi]
  421435:	add    bl,dl
  421437:	mov    eax,0xbad500a9
  42143c:	stos   DWORD PTR es:[rdi],eax
  42143d:	add    bh,dl
  42143f:	mov    esp,0xbac700ae
  421444:	mov    al,0x0
  421446:	iret   
  421447:	mov    esp,0xcc9900b3
  42144c:	cdq    
  42144d:	add    dl,dl
  42144f:	shl    DWORD PTR [rdi-0x463d2e00],0x0
  421456:	(bad)  
  421457:	(bad)  
  421458:	mov    ebp,0xc0c0c000
  42145d:	add    ah,cl
  42145f:	int3   
  421460:	int3   
  421461:	add    dh,dl
  421463:	mov    eax,0xc0c8d500
  421469:	add    cl,bl
  42146b:	retf   0xc3
  42146e:	fcmovne st,st(6)
  421470:	mov    BYTE PTR [rax],0xc0
  421473:	fadd   st(0),st
  421475:	add    bh,dl
  421477:	xlat   BYTE PTR ds:[rbx]
  421478:	xlat   BYTE PTR ds:[rbx]
  421479:	add    ch,bl
  42147b:	fstp   st(5)
  42147d:	add    dl,ah
  42147f:	(bad)  
  421480:	(bad)  
  421481:	add    ah,ah
  421483:	(bad)  
  421484:	(bad)  
  421485:	add    cl,dh
  421487:	rol    ecx,1
  421489:	add    bl,dh
  42148b:	(bad)  
  42148c:	enter  0xf400,0xda
  421490:	(bad)  
  421491:	add    ch,dh
  421493:	(bad)  
  421495:	add    dh,dh
  421497:	loopne 0x42146f
  421499:	add    dh,dh
  42149b:	loop   0x421476
  42149d:	add    bh,dh
  42149f:	in     al,0xda
  4214a1:	add    bh,dh
  4214a3:	in     eax,0xdc
  4214a5:	add    bl,ah
  4214a7:	jrcxz  0x42148c
  4214a9:	add    cl,bh
  4214ab:	jmp    0x421490
  4214ad:	add    bl,bh
  4214af:	lock jmp 0x4214b2
  4214b2:	sti    
  4214b3:	repz out dx,al
  4214b5:	add    cl,dh
  4214b7:	icebp  
  4214b8:	icebp  
  4214b9:	add    ah,bh
  4214bb:	repz lock add ah,bh
  4214bf:	div    dl
  4214c1:	add    ah,bh
  4214c3:	clc    
  4214c4:	test   BYTE PTR [rax],0xf0
  4214c7:	sti    
  4214c8:	inc    DWORD PTR [rax]
  4214ca:	std    
  4214cb:	cli    
  4214cc:	clc    
	...
  4216c1:	add    bh,bh
  4216c3:	(bad)  
  4216c4:	inc    DWORD PTR [rax]
	...
  421712:	add    BYTE PTR [rax],al
  421714:	(bad)  
  421715:	add    al,BYTE PTR [rdx]
  421717:	add    al,BYTE PTR [rdx]
  421719:	add    al,BYTE PTR [rdx]
  42171b:	add    al,BYTE PTR [rdx]
  42171d:	add    al,BYTE PTR [rdx]
  42171f:	add    al,BYTE PTR [rdx]
  421721:	add    al,BYTE PTR [rdx]
  421723:	add    al,BYTE PTR [rax]
	...
  421731:	add    BYTE PTR [rax],al
  421733:	add    BYTE PTR [rsi],bl
  421735:	and    DWORD PTR [rcx],esp
  421737:	(bad)  
  421738:	(bad)  
  421739:	(bad)  
  42173a:	(bad)  
  42173b:	(bad)  
  42173c:	(bad)  
  42173d:	(bad)  
  42173e:	(bad)  
  42173f:	(bad)  
  421740:	(bad)  
  421741:	(bad)  
  421742:	(bad)  
  421743:	add    al,BYTE PTR [rax]
	...
  421751:	add    BYTE PTR [rax],al
  421753:	add    BYTE PTR [rsi],bl
  421755:	imul   esp,DWORD PTR [rbx],0x21
  421758:	(bad)  
  421759:	add    ah,BYTE PTR [rcx]
  42175b:	and    DWORD PTR [rdi],ebx
  42175d:	(bad)  
  42175e:	(bad)  
  42175f:	(bad)  
  421760:	(bad)  
  421761:	(bad)  
  421762:	(bad)  
  421763:	add    al,BYTE PTR [rax]
  421765:	add    BYTE PTR [rax],al
  421767:	add    BYTE PTR [rax],al
  421769:	add    BYTE PTR [rdi+0x31],dl
  42176c:	or     eax,0x27
  421771:	add    BYTE PTR [rax],al
  421773:	add    BYTE PTR [rsi],bl
  421775:	imul   esi,DWORD PTR [rax],0x21
  421778:	add    ah,BYTE PTR [rbp+0x2]
  42177b:	(bad)  
  42177c:	and    DWORD PTR [rsi],ebx
  42177e:	(bad)  
  42177f:	(bad)  
  421780:	(bad)  
  421781:	(bad)  
  421782:	(bad)  
  421783:	add    al,BYTE PTR [rax]
  421785:	add    BYTE PTR [rax],al
  421787:	add    BYTE PTR [rax],al
  421789:	sub    BYTE PTR [rsi+0x79],ch
  42178c:	ja     0x4217f6
  42178e:	push   rcx
  42178f:	or     eax,0x0
  421794:	(bad)  
  421795:	imul   esi,DWORD PTR [rax],0x2
  421798:	ins    DWORD PTR es:[rdi],dx
  421799:	gs add ah,BYTE PTR gs:[rcx]
  42179d:	(bad)  
  42179e:	or     eax,DWORD PTR [rdx]
  4217a0:	(bad)  
  4217a1:	(bad)  
  4217a2:	(bad)  
  4217a3:	add    al,BYTE PTR [rax]
  4217a5:	add    BYTE PTR [rax],al
  4217a7:	add    BYTE PTR [rbx],bl
  4217a9:	sub    BYTE PTR [rbx],bl
  4217ab:	adc    edi,DWORD PTR [rip+0x26286a81]        # 0x266a8232
  4217b1:	add    BYTE PTR [rax],al
  4217b3:	add    BYTE PTR [rcx],ah
  4217b5:	imul   esp,DWORD PTR [rcx-0x7f],0xffffff81
  4217b9:	jl     0x421821
  4217bb:	add    al,BYTE PTR gs:[rcx]
  4217be:	data16 gs (bad) 
  4217c1:	(bad)  
  4217c2:	(bad)  
  4217c3:	add    al,BYTE PTR [rax]
  4217c5:	add    BYTE PTR [rax],al
  4217c7:	add    BYTE PTR [rax],al
  4217c9:	add    BYTE PTR [rax],al
  4217cb:	add    BYTE PTR [rbx],dl
  4217cd:	jp     0x421838
  4217cf:	cmp    DWORD PTR [rbx],edx
  4217d1:	add    BYTE PTR [rax],al
  4217d3:	add    BYTE PTR [rcx],ah
  4217d5:	imul   esp,DWORD PTR [rcx+0x30],0xffffff81
  4217d9:	add    DWORD PTR [rcx+0x6c6c656d],0x1e1f1e65
  4217e3:	add    al,BYTE PTR [rax]
  4217e5:	add    BYTE PTR [rax],al
  4217e7:	add    BYTE PTR [rax],al
  4217e9:	add    BYTE PTR [rax],al
  4217eb:	add    BYTE PTR [rbx],bl
  4217ed:	ja     0x421853
  4217ef:	xor    ecx,DWORD PTR [rax]
  4217f1:	add    BYTE PTR [rax],al
  4217f3:	add    BYTE PTR [rdi],bl
  4217f5:	imul   esp,DWORD PTR [rcx+0x30],0x23
  4217f9:	add    DWORD PTR [rcx+0x7c7c7c81],0x1e211f66
  421803:	add    al,BYTE PTR [rax]
  421805:	add    BYTE PTR [rax],al
  421807:	add    BYTE PTR [rbx],ch
  421809:	sub    BYTE PTR [rax],ch
  42180b:	and    al,0x3d
  42180d:	jno    0x421873
  42180f:	cmp    BYTE PTR [rax+rax*1],cl
  421812:	add    BYTE PTR [rax],al
  421814:	and    DWORD PTR [rbx+0x61],ebp
  421817:	(bad)  
  421818:	xor    BYTE PTR [rcx],ah
  42181a:	cmp    DWORD PTR [rcx+rax*4-0x7f],0x1f21667c
  421822:	(bad)  
  421823:	add    al,BYTE PTR [rax]
  421825:	add    BYTE PTR [rax],al
  421827:	add    BYTE PTR [rax],al
  421829:	cmp    BYTE PTR [rbp+0x69],bh
  42182c:	fs fs pop rbx
  42182f:	sbb    eax,DWORD PTR cs:[rax]
  421832:	add    BYTE PTR [rax],al
  421834:	and    DWORD PTR [rbx+0x61],ebp
  421837:	(bad)  
  421838:	and    DWORD PTR [rcx+rax*4],eax
  42183b:	jl     0x4217be
  42183d:	cmp    BYTE PTR [rsp+rbp*2+0x21],0x21
  421842:	(bad)  
  421843:	add    al,BYTE PTR [rax]
  421845:	add    BYTE PTR [rax],al
  421847:	add    BYTE PTR [rax],al
  421849:	push   rdi
  42184a:	cmp    BYTE PTR [rdi+0x7d],bh
  42184d:	jp     0x4218be
  42184f:	pop    rax
  421850:	sbb    r8,QWORD PTR [rax]
  421853:	add    BYTE PTR [rcx],ah
  421855:	imul   esp,DWORD PTR [rcx+0x61],0x30
  421859:	add    DWORD PTR [rcx-0x7e7e7e7f],0x1f232178
  421863:	add    al,BYTE PTR [rax]
  421865:	add    BYTE PTR [rax],al
  421867:	add    BYTE PTR [rax],al
  421869:	add    BYTE PTR [rax],al
  42186b:	sub    BYTE PTR [rcx],r14b
  42186e:	cmp    BYTE PTR [rbx+0x52],dh
  421871:	adc    eax,DWORD PTR [r8]
  421874:	and    DWORD PTR [rbx+0x61],ebp
  421877:	(bad)  
  421878:	xor    BYTE PTR [rcx-0x7e7e7e7f],al
  42187e:	add    DWORD PTR [rcx+0x21f2123],0x0
  421888:	add    BYTE PTR [rax],al
  42188a:	add    BYTE PTR [rax],al
  42188c:	add    BYTE PTR [rax],al
  42188e:	push   rsp
  42188f:	cs jae 0x4218dc
  421892:	sbb    BYTE PTR [r10],spl
  421895:	imul   esp,DWORD PTR [rcx+0x61],0x61
  421899:	(bad)  
  42189a:	(bad)  
  42189b:	(bad)  
  42189c:	(bad)  
  42189d:	(bad)  
  42189e:	(bad)  
  42189f:	(bad)  
  4218a0:	(bad)  
  4218a1:	and    esp,DWORD PTR [rcx]
  4218a3:	add    al,BYTE PTR [rax]
	...
  4218ad:	add    BYTE PTR [rax],al
  4218af:	push   rcx
  4218b0:	sub    BYTE PTR [rsi+rax*2+0x41],dh
  4218b4:	(bad)  
  4218b5:	rex.WRXB imul r13,QWORD PTR [r11+0x6b],0x6b
  4218ba:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
  4218be:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
  4218c2:	and    eax,DWORD PTR [rdx]
	...
  4218d0:	rex.WRB sub BYTE PTR [r11+rax*2+0x38],r14b
  4218d5:	adc    esp,DWORD PTR [rax]
  4218d7:	and    DWORD PTR [rcx],esp
  4218d9:	and    DWORD PTR [rcx],esp
  4218db:	and    DWORD PTR [rcx],esp
  4218dd:	(bad)  
  4218de:	and    DWORD PTR [rsi],ebx
  4218e0:	and    DWORD PTR [rsi],ebx
  4218e2:	(bad)  
  4218e3:	(bad)  
	...
  4218f0:	add    BYTE PTR [rdi+0x1d],al
  4218f3:	je     0x421935
  4218f5:	sub    al,0x11
	...
  42190f:	add    BYTE PTR [rax],al
  421911:	add    BYTE PTR [rbp+0x16],al
  421914:	je     0x421945
  421916:	sbb    eax,0xa
	...
  421933:	cmp    eax,0x161d7711
  421938:	(bad)  
	...
  421951:	add    BYTE PTR [rax],al
  421953:	add    BYTE PTR [rcx],bh
  421955:	or     al,0x74
  421957:	cmp    BYTE PTR [rdi],ch
  421959:	(bad)  
  42195a:	or     BYTE PTR [rip+0x4e1b05],al        # 0x903465
	...
  421974:	add    BYTE PTR [rbx],dh
  421976:	or     dh,BYTE PTR [rdi+0x38]
  421979:	rex.WRB
  42197a:	rex.WX cmp rax,0x2707282e
	...
  421994:	add    BYTE PTR [rax],al
  421996:	xor    edx,DWORD PTR [rbx]
  421998:	jo     0x4219db
  42199a:	sub    BYTE PTR [rax+0x4c],bl
  42199e:	rex.XB (bad) 
  4219a0:	add    BYTE PTR [rax],r8b
	...
  4219b7:	sbb    esi,DWORD PTR [rcx+0x4a]
  4219ba:	rex.B adc eax,0x3030303
  4219c0:	(bad)  
	...
  4219d5:	add    BYTE PTR [rax],al
  4219d7:	sbb    esi,DWORD PTR [rcx+0x52]
  4219da:	rex.WX sldt WORD PTR [rax]
	...
  4219f6:	add    BYTE PTR [rax],ch
  4219f8:	je     0x421a55
  4219fa:	push   rdx
  4219fb:	adc    eax,DWORD PTR [rax]
	...
  421a15:	add    BYTE PTR [rax],al
  421a17:	xor    esi,DWORD PTR [rdi+0x64]
  421a1a:	pop    rax
  421a1b:	sbb    eax,DWORD PTR [rax]
	...
  421a35:	add    BYTE PTR [rax],al
  421a37:	pop    rdi
  421a38:	sub    BYTE PTR [rdi+0x64],dh
  421a3b:	cmp    BYTE PTR [rbx],al
  421a3d:	add    eax,DWORD PTR [rbx]
  421a3f:	add    eax,DWORD PTR [rax+rax*1+0x0]
	...
  421a57:	add    BYTE PTR [rax+rbp*1+0x77],cl
  421a5b:	pop    rsi
  421a5c:	pop    rsi
  421a5d:	pop    rsp
  421a5e:	(bad)  
  421a5f:	(bad)  
	...
  421a78:	add    BYTE PTR [rdi+0x33],bl
  421a7b:	and    al,0x1b
  421a7d:	(bad)  
  421a7e:	rex.WRB add BYTE PTR [r8],r8b
	...
  421ac5:	add    bh,bh
  421ac7:	(bad)  
  421ac8:	(bad)  
  421ac9:	(bad)  
  421aca:	(bad)  
  421acb:	(bad)  
  421acc:	(bad)  
  421acd:	(bad)  
  421ace:	(bad)  
  421acf:	cld    
  421ad0:	add    BYTE PTR [rbx],al
  421ad2:	(bad)  
  421ad3:	cld    
  421ad4:	add    BYTE PTR [rbx],al
  421ad6:	(bad)  
  421ad7:	cld    
  421ad8:	add    BYTE PTR [rbx],al
  421ada:	lock cld 
  421adc:	add    BYTE PTR [rbx],al
  421ade:	loopne 0x421b1c
  421ae0:	add    BYTE PTR [rbx],al
  421ae2:	rcr    BYTE PTR [rax+rax*1],0x3
  421ae6:	cld    
  421ae7:	sbb    al,0x0
  421ae9:	add    edi,esp
  421aeb:	sbb    al,0x0
  421aed:	add    eax,eax
  421aef:	sbb    al,0x0
  421af1:	add    esp,eax
  421af3:	sbb    al,0x0
  421af5:	add    esp,eax
  421af7:	or     al,0x0
  421af9:	add    edi,eax
  421afb:	add    al,0x0
  421afd:	add    edi,edi
  421aff:	add    BYTE PTR [rax],al
  421b01:	add    edi,edi
  421b03:	add    BYTE PTR [rax],0x3
  421b06:	inc    eax
  421b08:	add    BYTE PTR [rbx],al
  421b0a:	jmp    rax
  421b0c:	jg     0x421b0d
  421b0e:	push   rax
  421b10:	(bad)  
  421b11:	(bad)  
  421b12:	(bad)  
  421b13:	clc    
  421b14:	(bad)  
  421b15:	(bad)  
  421b16:	(bad)  
  421b17:	cld    
  421b18:	add    BYTE PTR [rdi-0x1],bh
  421b1b:	inc    BYTE PTR [rax]
  421b1d:	(bad)  
  421b1e:	(bad)  
  421b1f:	inc    DWORD PTR [rax]
  421b21:	(bad)  
  421b22:	(bad)  
  421b23:	inc    DWORD PTR [rax-0x7c0000e1]
  421b29:	(bad)  
  421b2a:	(bad)  
  421b2b:	inc    DWORD PTR [rbx-0x7c000001]
  421b31:	(bad)  
  421b32:	(bad)  
  421b33:	inc    DWORD PTR [rax-0x3f0000e1]
  421b39:	(bad)  
  421b3a:	(bad)  
  421b3b:	jmp    rax
  421b3d:	jg     0x421b3e
  421b3f:	(bad)  
  421b40:	(bad)  
  421b41:	(bad)  
  421b42:	(bad)  
  421b43:	(bad)  
  421b44:	(bad)  
  421b45:	jmp    FWORD PTR [rax]
  421b47:	add    BYTE PTR [rax],al
  421b49:	add    BYTE PTR [rax],dl
  421b4b:	add    BYTE PTR [rax],al
  421b4d:	add    BYTE PTR [rax],ah
  421b4f:	add    BYTE PTR [rax],al
  421b51:	add    BYTE PTR [rcx],al
  421b53:	add    BYTE PTR [rax],cl
  421b55:	add    BYTE PTR [rax],al
  421b57:	add    BYTE PTR [rax],al
  421b59:	add    BYTE PTR [rax],al
  421b5b:	add    DWORD PTR [rax],eax
	...
  421b65:	add    BYTE PTR [rax],al
  421b67:	add    DWORD PTR [rax],eax
  421b69:	add    BYTE PTR [rax],al
  421b6b:	add    DWORD PTR [rax],eax
  421b6d:	add    BYTE PTR [rax],al
  421b6f:	add    BYTE PTR [rax],al
  421b71:	add    BYTE PTR [rip+0x1a000f6b],cl        # 0x1a422ae2
  421b77:	ja     0x421b96
  421b79:	add    BYTE PTR [rip+0x1b001f76],bl        # 0x1b423af5
  421b7f:	jns    0x421b9d
  421b81:	add    BYTE PTR [rdx],dl
  421b83:	jb     0x421bb7
  421b85:	add    BYTE PTR [rsi],ch
  421b87:	imul   esi,DWORD PTR [rdi],0x39762c00
  421b8d:	add    BYTE PTR [rsi],dh
  421b8f:	jnp    0x421bd9
  421b91:	add    BYTE PTR [rdx],bh
  421b93:	gs pop rdx
  421b95:	add    BYTE PTR [rip+0x32006a6b],ch        # 0x32428606
  421b9b:	outs   dx,DWORD PTR ds:[rsi]
  421b9c:	data16 add BYTE PTR [rax],ch
  421b9f:	jbe    0x421c0a
  421ba1:	add    BYTE PTR [rdi],ch
  421ba3:	jbe    0x421c0d
  421ba5:	add    BYTE PTR [rcx],bh
  421ba7:	ja     0x421c0f
  421ba9:	add    BYTE PTR [rbp+0x59],dh
  421bac:	add    BYTE PTR [rdi+0x5f],r14b
  421bb0:	rex.WRX add BYTE PTR [rdx+0x64],r15b
  421bb4:	push   rbx
  421bb5:	add    BYTE PTR [rbx+0x6b],bh
  421bb8:	(bad)  
  421bb9:	add    BYTE PTR [rcx+rbp*2+0x6c830057],al
  421bc0:	pop    rsi
  421bc1:	add    BYTE PTR [rax-0x74ffa291],cl
  421bc7:	jae    0x421c2d
  421bc9:	add    BYTE PTR [rax-0x6eff9488],cl
  421bcf:	jp     0x421c39
  421bd1:	add    BYTE PTR [rsi-0x67ff9382],dl
  421bd7:	jle    0x421c46
  421bd9:	add    BYTE PTR [rdx],cl
  421bdb:	sbb    DWORD PTR [rcx],0x0
  421bde:	(bad)  
  421bdf:	lea    ebx,[rax+rax*1]
  421be2:	add    eax,0x5002088
  421be7:	lea    esp,[rax+rax*1]
  421bea:	adc    eax,DWORD PTR [rbp-0x6df7ffd2]
  421bf0:	sub    eax,DWORD PTR [rax]
  421bf2:	(bad)  
  421bf3:	mov    ?,WORD PTR [rax+rax*1]
  421bf6:	sbb    eax,0x39003d94
  421bfb:	lea    esi,[rsi]
  421bfd:	add    BYTE PTR [rax],bh
  421bff:	add    DWORD PTR [rdx+0x0],0x4d932f
  421c06:	push   rbp
  421c07:	pushf  
  421c08:	pop    rdi
  421c09:	add    BYTE PTR [rsi-0x4d],dl
  421c0c:	push   rsp
  421c0d:	add    BYTE PTR [rsi-0x5d],cl
  421c10:	push   0x0
  421c12:	pop    rdx
  421c13:	test   al,0x6f
  421c15:	add    BYTE PTR [rbx-0x4d],dl
  421c18:	imul   eax,DWORD PTR [rax],0x77
  421c1b:	mov    edi,0xc568007b
  421c20:	ins    BYTE PTR es:[rdi],dx
  421c21:	add    BYTE PTR [rdx-0x67ff8f7f],bl
  421c27:	xchg   DWORD PTR [rbx+0x0],edi
  421c2a:	movabs al,ds:0x780076a581007d8d
  421c33:	test   eax,0xb67d0081
  421c38:	mov    BYTE PTR [rax],al
  421c3a:	(bad)  
  421c3b:	mov    eax,DWORD PTR [rax-0x7c706200]
  421c41:	add    BYTE PTR [rbp-0x55ff7a6d],ah
  421c47:	cwde   
  421c48:	mov    WORD PTR [rax],es
  421c4a:	test   BYTE PTR [rbx-0x4376ff71],bh
  421c50:	mov    es,WORD PTR [rax]
  421c52:	mov    bh,0xa1
  421c54:	nop
  421c55:	add    BYTE PTR [rdi-0x42ff695b],dh
  421c5b:	test   al,0x98
  421c5d:	add    cl,al
  421c5f:	lods   eax,DWORD PTR ds:[rsi]
  421c60:	lahf   
  421c61:	add    dl,al
  421c63:	scas   eax,DWORD PTR es:[rdi]
  421c64:	movabs al,ds:0xa9b6c900a5b2c400
  421c6d:	add    BYTE PTR [rsi-0x72ff7531],cl
  421c73:	(bad)  
  421c74:	pop    QWORD PTR [rax]
  421c76:	xchg   edx,eax
  421c77:	xlat   BYTE PTR ds:[rbx]
  421c78:	xchg   ebx,eax
  421c79:	add    BYTE PTR [rsp+riz*8-0x2167ff65],ah
  421c80:	mov    ch,0x0
  421c82:	test   eax,0xac00a4de
  421c87:	fbld   TBYTE PTR [rax+rax*1+0xa3e18e]
  421c8e:	lods   al,BYTE PTR ds:[rsi]
  421c8f:	loopne 0x421c34
  421c91:	add    BYTE PTR [rdi-0x50ff591f],ch
  421c97:	loopne 0x421c42
  421c99:	add    bh,ch
  421c9b:	call   0xffffffffe9351d8a
  421ca0:	out    dx,eax
  421ca1:	add    bh,bh
  421ca3:	(bad)  
  421ca4:	inc    BYTE PTR [rax]
	...
  421f6a:	(bad)  
  421f6b:	(bad)  
  421f6c:	inc    DWORD PTR [rax]
	...
  421f82:	add    BYTE PTR [rax],al
  421f84:	add    BYTE PTR [rbx],ah
  421f86:	(bad)  
  421f87:	add    eax,0x4030303
  421f8c:	add    DWORD PTR [rax],eax
  421f8e:	add    BYTE PTR [rax],al
  421f90:	add    BYTE PTR [rax],al
  421f92:	add    BYTE PTR [rax],al
  421f94:	add    BYTE PTR [rdx+rbp*1],ch
  421f97:	or     BYTE PTR [rdx+riz*1],ah
  421f9a:	(bad)  
  421f9b:	and    BYTE PTR [rax+rax*1],bl
  421f9e:	add    BYTE PTR [rax],al
  421fa0:	add    BYTE PTR [rdi],dl
  421fa2:	adc    al,BYTE PTR [rax]
  421fa4:	add    BYTE PTR [rbx],ch
  421fa6:	sub    BYTE PTR [rbx+0x6],cl
  421fa9:	(bad)  
  421faa:	(bad)  
  421fab:	and    eax,0x1e
  421fb0:	add    BYTE PTR [rax],al
  421fb2:	xor    edx,DWORD PTR [rsi]
  421fb4:	add    BYTE PTR [rdx],dh
  421fb6:	rex.RXB sub r15b,r15b
  421fb9:	(bad)  
  421fba:	sub    QWORD PTR [rbx],r11
  421fbd:	add    BYTE PTR [rax],al
  421fbf:	cmp    DWORD PTR [rax],eax
  421fc1:	add    BYTE PTR [rip+0x42370010],dh        # 0x42791fd7
  421fc7:	sub    BYTE PTR [rax],ch
  421fc9:	(bad)  
  421fca:	push   QWORD PTR [rcx]
  421fcc:	(bad)  
  421fcd:	add    BYTE PTR [rax],al
  421fcf:	cmp    DWORD PTR [rsi],edi
  421fd1:	cmp    al,0x36
  421fd3:	adc    DWORD PTR [rax],eax
  421fd5:	cmp    BYTE PTR [rcx+0x44],al
  421fd8:	(bad)  
  421fd9:	(bad)  
  421fda:	inc    DWORD PTR [rax+0x21]
  421fdd:	add    BYTE PTR [rax],al
  421fdf:	add    BYTE PTR [rsi],ch
  421fe1:	sbb    BYTE PTR [rdi+rdi*8],dl
  421fe4:	wrmsr  
  421fe6:	rex.WB
  421fe7:	rex.RB
  421fe8:	rex.WX
  421fe9:	rex.RB
  421fea:	rex.WB
  421feb:	rex.XB (bad) 
  421fed:	add    BYTE PTR [rax],al
  421fef:	add    BYTE PTR [rax],al
  421ff1:	add    BYTE PTR [rax],al
  421ff3:	cmp    edi,edi
  421ff5:	wbinvd 
  421ff7:	or     ecx,DWORD PTR [rsi]
  421ff9:	or     eax,0x260a0c
  421ffe:	add    BYTE PTR [rax],al
  422000:	add    BYTE PTR [rax],al
  422002:	add    BYTE PTR [rax],al
  422004:	cmp    edi,edi
  422006:	sldt   WORD PTR [rax]
	...
  422015:	cmp    edi,edi
  422017:	adc    eax,0x2d13
	...
  422024:	add    BYTE PTR [rax],al
  422026:	sbb    BYTE PTR [rsi],bh
  422028:	cmp    DWORD PTR [rdi+rbp*1],esi
	...
  422033:	add    BYTE PTR [rax],al
  422035:	add    BYTE PTR [rdx],bl
  422037:	cmp    al,0x0
  422039:	add    BYTE PTR [rip+0x0],dh        # 0x42203f
  42203f:	add    BYTE PTR [rax],al
  422041:	add    BYTE PTR [rax],al
  422043:	add    BYTE PTR [rax],al
  422045:	add    BYTE PTR [rbx],bh
  422047:	(bad)  
	...
  422054:	add    BYTE PTR [rax],al
  422056:	add    BYTE PTR [rcx],bh
  422058:	cmp    DWORD PTR [rax],eax
	...
  42206e:	(bad)  
  42206f:	inc    DWORD PTR [rax]
  422071:	add    dh,bh
  422073:	add    DWORD PTR [rax],eax
  422075:	add    dh,bh
  422077:	add    DWORD PTR [rax],eax
  422079:	add    dh,ah
  42207b:	add    DWORD PTR [rax],eax
  42207d:	add    dl,dh
  42207f:	add    DWORD PTR [rax],eax
  422081:	add    BYTE PTR [rdx-0x7dffffff],dh
  422087:	add    DWORD PTR [rax],eax
  422089:	add    al,al
  42208b:	add    DWORD PTR [rax],eax
  42208d:	add    al,bh
  42208f:	add    DWORD PTR [rax],eax
  422091:	add    ah,bh
  422093:	jg     0x422095
  422095:	add    dh,bh
  422097:	sldt   WORD PTR [rax]
  42209a:	inc    DWORD PTR [rdi]
  42209c:	add    BYTE PTR [rax],al
  42209e:	push   QWORD PTR [rdi]
  4220a0:	add    BYTE PTR [rax],al
  4220a2:	(bad)  
  4220a3:	(bad)  
  4220a4:	add    BYTE PTR [rax],al
  4220a6:	call   FWORD PTR [rdi-0x10000]
  4220ac:	add    BYTE PTR [rax],al
  4220ae:	sub    BYTE PTR [rax],al
  4220b0:	add    BYTE PTR [rax],al
  4220b2:	and    BYTE PTR [rax],al
  4220b4:	add    BYTE PTR [rax],al
  4220b6:	add    BYTE PTR [rax],al
  4220b9:	add    BYTE PTR [rcx],al
  4220bb:	add    BYTE PTR [rax],ah
  4220bd:	add    BYTE PTR [rax],al
  4220bf:	add    BYTE PTR [rax],al
  4220c1:	add    BYTE PTR [rax+0x10],al
	...
  42220b:	add    BYTE PTR [rax],al
  42220d:	add    BYTE PTR [rbx],dh
  42220f:	cdq    
  422210:	xor    edi,edi
  422212:	xor    esp,DWORD PTR [rsi+0x33]
  422215:	push   QWORD PTR [rbx]
  422217:	xor    di,di
  42221a:	xor    esp,DWORD PTR [rsi+0x33]
  42221d:	push   QWORD PTR [rbx]
  42221f:	xor    di,di
  422222:	xor    esp,DWORD PTR [rsi+0x33]
  422225:	push   QWORD PTR [rbx]
  422227:	xor    di,di
  42222a:	xor    esp,DWORD PTR [rsi+0x33]
  42222d:	push   QWORD PTR [rbx]
  42222f:	xor    di,di
  422232:	xor    esp,DWORD PTR [rsi+0x33]
  422235:	push   QWORD PTR [rbx]
  422237:	xor    di,di
  42223a:	xor    esp,DWORD PTR [rsi+0x33]
  42223d:	push   QWORD PTR [rbx]
  42223f:	xor    di,di
  422242:	xor    esp,DWORD PTR [rsi+0x33]
  422245:	push   QWORD PTR [rbx]
  422247:	xor    di,di
  42224a:	xor    esp,DWORD PTR [rsi+0x33]
  42224d:	inc    DWORD PTR [rax]
	...
  42228b:	add    BYTE PTR [rax],al
  42228d:	add    BYTE PTR [rbx],dh
  42228f:	cdq    
  422290:	xor    edi,edi
  422292:	cwd    
  422294:	jmp    WORD PTR [rsi-0x67]
  422298:	push   WORD PTR [rbx]
  42229b:	cdq    
  42229c:	push   WORD PTR [rbx]
  42229f:	cdq    
  4222a0:	push   WORD PTR [rbx]
  4222a3:	cdq    
  4222a4:	push   WORD PTR [rbx]
  4222a7:	cdq    
  4222a8:	xor    edi,edi
  4222aa:	xor    ebx,DWORD PTR [rcx-0x66cc00cd]
  4222b0:	xor    edi,edi
  4222b2:	xor    ebx,DWORD PTR [rcx-0x66cc00cd]
  4222b8:	xor    edi,edi
  4222ba:	xor    ebx,DWORD PTR [rcx-0x66cc00cd]
  4222c0:	xor    edi,edi
  4222c2:	xor    ebx,DWORD PTR [rcx-0x66cc00cd]
  4222c8:	xor    edi,edi
  4222ca:	xor    esp,DWORD PTR [rsi+0x33]
  4222cd:	inc    DWORD PTR [rax]
	...
  42230b:	add    BYTE PTR [rax],al
  42230d:	add    BYTE PTR [rbx],dh
  42230f:	cdq    
  422310:	xor    edi,edi
  422312:	rcr    ah,0xc0
  422315:	jmp    QWORD PTR [rsi-0x34]
  422318:	jmp    WORD PTR [rsi-0x67]
  42231c:	push   WORD PTR [rbx]
  42231f:	cdq    
  422320:	push   WORD PTR [rbx]
  422323:	xor    di,di
  422326:	cwd    
  422328:	jmp    WORD PTR [rsi-0x67]
  42232c:	push   WORD PTR [rbx]
  42232f:	cdq    
  422330:	push   WORD PTR [rbx]
  422333:	cdq    
  422334:	push   WORD PTR [rbx]
  422337:	cdq    
  422338:	xor    edi,edi
  42233a:	xor    ebx,DWORD PTR [rcx-0x66cc009a]
  422340:	xor    edi,edi
  422342:	xor    ebx,DWORD PTR [rcx-0x66cc009a]
  422348:	xor    edi,edi
  42234a:	xor    esp,DWORD PTR [rsi+0x33]
  42234d:	inc    DWORD PTR [rax]
	...
  42235f:	add    BYTE PTR [rax],al
  422361:	add    BYTE PTR [rsp+rdi*2+0x768e206b],dl
  422368:	mov    al,BYTE PTR fs:[rdi-0x7f39a292]
  42236f:	push   0x617af855
  422374:	rex.WRB (bad) 
  422376:	je     0x4223d2
  422378:	rex.RXB jnp 0x4223e9
  42237b:	push   rsp
  42237c:	and    BYTE PTR [r8],al
	...
  42238b:	add    BYTE PTR [rax],al
  42238d:	add    BYTE PTR [rbx],dh
  42238f:	cdq    
  422390:	xor    edi,edi
  422392:	rcr    ah,0xc0
  422395:	jmp    QWORD PTR [rsi-0x34]
  422398:	cdq    
  422399:	jmp    QWORD PTR [rsi-0x67]
  42239c:	push   WORD PTR [rbx]
  42239f:	xor    di,di
  4223a2:	rol    al,0xc0
  4223a5:	push   QWORD PTR [rbx]
  4223a7:	xor    di,di
  4223aa:	xor    ebx,DWORD PTR [rcx-0x6699009a]
  4223b0:	push   WORD PTR [rbx]
  4223b3:	cdq    
  4223b4:	xor    edi,edi
  4223b6:	xor    ebx,DWORD PTR [rcx-0x66cc009a]
  4223bc:	xor    edi,edi
  4223be:	xor    ebx,DWORD PTR [rcx-0x66cc009a]
  4223c4:	xor    edi,edi
  4223c6:	xor    ebx,DWORD PTR [rcx+0x6633ff33]
  4223cc:	xor    edi,edi
	...
  4223de:	movabs ds:0xe2fb6f8098207e8e,eax
  4223e7:	(bad)  
  4223e8:	(bad)  
  4223e9:	(bad)  
  4223ea:	stc    
  4223eb:	jmp    0x4223d0
  4223ed:	push   rdi
  4223ef:	out    0xdd,al
  4223f1:	call   rbp
  4223f3:	enter  0xffc0,0xbe
  4223f7:	lods   eax,DWORD PTR ds:[rsi]
  4223f8:	movabs ds:0x3f536ddf455972ff,al
  422401:	cmp    al,0x0
	...
  42240b:	add    BYTE PTR [rax],al
  42240d:	add    BYTE PTR [rbx],dh
  42240f:	cdq    
  422410:	xor    edi,edi
  422412:	rcr    ah,0xc0
  422415:	jmp    QWORD PTR [rsi-0x34]
  422418:	cdq    
  422419:	push   QWORD PTR [rbx]
  42241b:	xor    di,di
  42241e:	fstp   st(5)
  422420:	(bad)  
  422422:	rol    al,0xc0
  422425:	inc    eax
  422427:	rol    al,0xff
  42242a:	xor    esp,DWORD PTR [rsi+0x33]
  42242d:	jmp    QWORD PTR [rsi-0x67]
  422430:	push   WORD PTR [rbx]
  422433:	cdq    
  422434:	jmp    WORD PTR [rsi+0x66]
  422438:	push   WORD PTR [rbx]
  42243b:	xor    di,di
  42243e:	xor    ebx,DWORD PTR [rcx-0x66cc009a]
  422444:	push   WORD PTR [rbx]
  422447:	cdq    
  422448:	xor    edi,edi
  42244a:	xor    esp,DWORD PTR [rsi+0x33]
  42244d:	inc    DWORD PTR [rax]
	...
  42245b:	add    BYTE PTR [rax],al
  42245d:	add    BYTE PTR [rsi-0x63009181],dl
  422463:	xchg   BYTE PTR [rbp-0x1],dh
  422466:	xchg   ecx,eax
  422467:	jns    0x4224d0
  422469:	dec    DWORD PTR [rsi-0x50009a8a]
  42246f:	pushf  
  422470:	(bad)  
  422471:	(bad)  
  422472:	std    
  422473:	cli    
  422474:	clc    
  422475:	(bad)  
  422476:	fcmovne st,st(7)
  422478:	(bad)  
  422479:	call   FWORD PTR [rbp+rax*4+0x5771ff75]
  422480:	rex.XB mov r11d,0x0
	...
  42248e:	cwd    
  422490:	inc    ax
  422493:	fadd   st(0),st
  422495:	call   FWORD PTR [rcx-0x6634]
  42249b:	(bad)  
  42249c:	(bad)  
  42249d:	(bad)  
  42249e:	(bad)  
  42249f:	(bad)  
  4224a0:	(bad)  
  4224a1:	push   rcx
  4224a3:	icebp  
  4224a4:	icebp  
  4224a5:	dec    esp
  4224a7:	int3   
  4224a8:	int3   
  4224a9:	inc    eax
  4224ab:	rol    al,0xff
  4224ae:	xor    esp,DWORD PTR [rsi+0x33]
  4224b1:	push   QWORD PTR [rbx]
  4224b3:	xor    esi,DWORD PTR [rbx]
  4224b5:	dec    esp
  4224b7:	int3   
  4224b8:	int3   
  4224b9:	inc    eax
  4224bb:	rol    al,0xff
  4224be:	xor    ebx,DWORD PTR [rcx-0x66cc00cd]
  4224c4:	push   WORD PTR [rbx]
  4224c7:	cdq    
  4224c8:	xor    edi,edi
  4224ca:	xor    esp,DWORD PTR [rsi+0x33]
  4224cd:	inc    DWORD PTR [rax]
	...
  4224eb:	add    BYTE PTR [rax],al
  4224ed:	add    BYTE PTR [rsi-0x4009a89],cl
  4224f3:	lock jmp 0x4224f5
  4224f6:	fxch   st(2)
  4224f8:	ret    
  4224f9:	jmp    FWORD PTR [rcx-0x79007a6c]
  4224ff:	outs   dx,BYTE PTR ds:[rsi]
  422500:	pop    rsp
  422501:	repnz add BYTE PTR [rax],al
	...
  42250c:	add    BYTE PTR [rax],al
  42250e:	cwd    
  422510:	inc    ax
  422513:	fadd   st(0),st
  422515:	call   FWORD PTR [rcx+0x66ff99cc]
  42251b:	int3   
  42251c:	cdq    
  42251d:	(bad)  
  42251e:	(bad)  
  42251f:	(bad)  
  422520:	(bad)  
  422521:	(bad)  
  422522:	(bad)  
  422523:	(bad)  
  422524:	(bad)  
  422525:	(bad)  
  422526:	(bad)  
  422527:	(bad)  
  422528:	(bad)  
  422529:	call   rdi
  42252b:	xlat   BYTE PTR ds:[rbx]
  42252c:	xlat   BYTE PTR ds:[rbx]
  42252d:	inc    eax
  42252f:	rol    al,0xff
  422532:	xlat   BYTE PTR ds:[rbx]
  422533:	xlat   BYTE PTR ds:[rbx]
  422534:	xlat   BYTE PTR ds:[rbx]
  422535:	call   rdi
  422537:	xlat   BYTE PTR ds:[rbx]
  422538:	xlat   BYTE PTR ds:[rbx]
  422539:	inc    eax
  42253b:	rol    al,0xff
  42253e:	xor    ebx,DWORD PTR [rcx-0x66cc00cd]
  422544:	push   WORD PTR [rbx]
  422547:	cdq    
  422548:	xor    edi,edi
  42254a:	xor    esp,DWORD PTR [rsi+0x33]
  42254d:	inc    DWORD PTR [rax]
	...
  42256b:	add    BYTE PTR [rax],al
  42256d:	add    BYTE PTR [rcx-0x8009786],dl
  422573:	in     eax,0xdc
  422575:	call   rbp
  422577:	(bad)  
  422578:	mov    ebp,0x8191a7ff
  42257d:	push   QWORD PTR [rbp+0x5c]
  422580:	inc    QWORD PTR [rax]
	...
  42258b:	add    BYTE PTR [rax],al
  42258d:	add    BYTE PTR [rbx],dh
  42258f:	cdq    
  422590:	inc    ax
  422593:	fadd   st(0),st
  422595:	call   FWORD PTR [rcx+0x66ff99cc]
  42259b:	int3   
  42259c:	cdq    
  42259d:	jmp    QWORD PTR [rsi-0x34]
  4225a0:	data16 (bad) 
  4225a2:	(bad)  
  4225a3:	(bad)  
  4225a4:	(bad)  
  4225a5:	(bad)  
  4225a6:	(bad)  
  4225a7:	(bad)  
  4225a8:	(bad)  
  4225a9:	(bad)  
  4225aa:	(bad)  
  4225ab:	(bad)  
  4225ac:	(bad)  
  4225ad:	push   rcx
  4225af:	icebp  
  4225b0:	icebp  
  4225b1:	push   rcx
  4225b3:	icebp  
  4225b4:	icebp  
  4225b5:	push   rcx
  4225b7:	icebp  
  4225b8:	icebp  
  4225b9:	dec    esp
  4225bb:	int3   
  4225bc:	int3   
  4225bd:	push   QWORD PTR [rbx]
  4225bf:	cdq    
  4225c0:	jmp    WORD PTR [rsi-0x67]
  4225c4:	push   WORD PTR [rbx]
  4225c7:	cdq    
  4225c8:	xor    edi,edi
  4225ca:	xor    esp,DWORD PTR [rsi+0x33]
  4225cd:	inc    DWORD PTR [rax]
	...
  4225db:	add    BYTE PTR [rax],al
  4225dd:	add    BYTE PTR [rdi-0x62008677],bl
  4225e3:	xchg   BYTE PTR [rbp-0x1],dh
  4225e6:	cdq    
  4225e7:	xor    DWORD PTR [rdx-0x1],0xffffff97
  4225eb:	sub    BYTE PTR [rdi-0x1],0xad
  4225ef:	cdq    
  4225f0:	mov    edi,edi
  4225f2:	hlt    
  4225f3:	fcmovne st,st(6)
  4225f5:	call   rdx
  4225f7:	shl    DWORD PTR [rdi-0x796a5201],0xff
  4225fe:	jl     0x422663
  422600:	push   rcx
  422601:	test   DWORD PTR [rax],0x0
  422607:	add    BYTE PTR [rax],al
  422609:	add    BYTE PTR [rax],al
  42260b:	add    BYTE PTR [rax],al
  42260d:	add    BYTE PTR [rsi-0x67],ah
  422610:	inc    ax
  422613:	fadd   st(0),st
  422615:	call   FWORD PTR [rcx-0x66006634]
  42261b:	int3   
  42261c:	cdq    
  42261d:	jmp    QWORD PTR [rsi-0x34]
  422620:	cdq    
  422621:	jmp    QWORD PTR [rsi-0x67]
  422624:	data16 (bad) 
  422626:	(bad)  
  422627:	(bad)  
  422628:	(bad)  
  422629:	push   rcx
  42262b:	icebp  
  42262c:	icebp  
  42262d:	(bad)  
  42262e:	(bad)  
  42262f:	(bad)  
  422630:	(bad)  
  422631:	(bad)  
  422632:	(bad)  
  422633:	(bad)  
  422634:	(bad)  
  422635:	push   rcx
  422637:	icebp  
  422638:	icebp  
  422639:	dec    esp
  42263b:	int3   
  42263c:	int3   
  42263d:	jmp    QWORD PTR [rsi-0x67]
  422640:	push   WORD PTR [rbx]
  422643:	cdq    
  422644:	push   WORD PTR [rbx]
  422647:	cdq    
  422648:	xor    edi,edi
  42264a:	xor    esp,DWORD PTR [rsi+0x33]
  42264d:	inc    DWORD PTR [rax]
	...
  42265b:	add    BYTE PTR [rax],al
  42265d:	add    BYTE PTR [rdi-0x56848b7d],dl
  422663:	xchg   esp,eax
  422664:	test   bh,bh
  422666:	cld    
  422667:	repz lock (bad) 
  42266a:	fcmovne st,st(5)
  42266c:	(bad)  
  42266f:	mov    eax,0xb9c2d2ff
  422675:	dec    edi
  422677:	mov    esp,0x8ea7ffb3
  42267c:	jge    0x42267d
  42267e:	xchg   ebx,eax
  42267f:	jnp    0x4226eb
  422681:	call   QWORD PTR [rcx+0x646878]
  422687:	add    BYTE PTR [rax],al
  422689:	add    BYTE PTR [rax],al
  42268b:	add    BYTE PTR [rax],al
  42268d:	add    BYTE PTR [rsi-0x67],ah
  422690:	inc    ax
  422693:	fadd   st(0),st
  422695:	call   FWORD PTR [rcx-0x66006634]
  42269b:	int3   
  42269c:	cdq    
  42269d:	jmp    QWORD PTR [rsi-0x67]
  4226a0:	push   WORD PTR [rbx]
  4226a3:	data16 data16 (bad) 
  4226a6:	(bad)  
  4226a7:	(bad)  
  4226a8:	(bad)  
  4226a9:	push   rcx
  4226ab:	icebp  
  4226ac:	icebp  
  4226ad:	(bad)  
  4226ae:	(bad)  
  4226af:	(bad)  
  4226b0:	(bad)  
  4226b1:	push   rax
  4226b3:	sti    
  4226b4:	(bad)  
  4226b5:	push   rcx
  4226b7:	icebp  
  4226b8:	icebp  
  4226b9:	call   rdi
  4226bb:	xlat   BYTE PTR ds:[rbx]
  4226bc:	xlat   BYTE PTR ds:[rbx]
  4226bd:	jmp    QWORD PTR [rsi-0x67]
  4226c0:	jmp    WORD PTR [rsi-0x67]
  4226c4:	push   WORD PTR [rbx]
  4226c7:	cdq    
  4226c8:	push   WORD PTR [rbx]
  4226cb:	xor    di,di
	...
  4226de:	movabs ds:0xa9a57b8ba2207e8e,eax
  4226e7:	xchg   esp,eax
  4226e8:	test   bh,bh
  4226ea:	cld    
  4226eb:	clc    
  4226ec:	idiv   bh
  4226ee:	cld    
  4226ef:	div    dl
  4226f1:	(bad)  
  4226f2:	sti    
  4226f3:	repz out dx,al
  4226f5:	jmp    rsp
  4226f7:	(bad)  
  4226f8:	(bad)  
  4226f9:	dec    eax
  4226fb:	mov    bl,0xa8
  4226fd:	(bad)  
  4226fe:	mov    edi,0x92ff99a7
  422703:	jge    0x422771
  422705:	(bad)  
  422706:	movabs al,ds:0x6600000000647788
  42270f:	cdq    
  422710:	inc    ax
  422713:	fadd   st(0),st
  422715:	call   FWORD PTR [rcx-0x66006634]
  42271b:	int3   
  42271c:	cdq    
  42271d:	jmp    QWORD PTR [rsi-0x34]
  422720:	cdq    
  422721:	(bad)  
  422722:	(bad)  
  422723:	(bad)  
  422724:	(bad)  
  422725:	(bad)  
  422726:	(bad)  
  422727:	(bad)  
  422728:	(bad)  
  422729:	(bad)  
  42272a:	(bad)  
  42272b:	(bad)  
  42272c:	(bad)  
  42272d:	(bad)  
  42272e:	(bad)  
  42272f:	(bad)  
  422730:	(bad)  
  422731:	(bad)  
  422732:	(bad)  
  422733:	(bad)  
  422734:	(bad)  
  422735:	(bad)  
  422736:	(bad)  
  422737:	(bad)  
  422738:	(bad)  
  422739:	jmp    rbx
  42273b:	jrcxz  0x422720
  42273d:	jmp    QWORD PTR [rsi-0x67]
  422740:	jmp    WORD PTR [rsi-0x34]
  422744:	push   WORD PTR [rbx]
  422747:	cdq    
  422748:	push   WORD PTR [rbx]
  42274b:	xor    di,di
	...
  422762:	lahf   
  422763:	mov    BYTE PTR [rax+0x20],bh
  422766:	pushf  
  422767:	test   DWORD PTR [rbp+0x7b],esi
  42276a:	cdq    
  42276b:	xor    DWORD PTR [rdx-0x3a],0xffffff97
  42276f:	sub    BYTE PTR [rdi-0x8],0x95
  422773:	jge    0x4227e1
  422775:	fild   QWORD PTR [rdx-0xa007a6c]
  42277b:	(bad)  
  42277d:	inc    edx
  42277f:	stos   BYTE PTR es:[rdi],al
  422780:	sahf   
  422781:	push   QWORD PTR [rsi-0x72007164]
  422787:	jbe    0x4227ef
  422789:	std    
  42278a:	pushf  
  42278b:	xor    DWORD PTR [rdx+0x66],0x66
  42278f:	cdq    
  422790:	inc    ax
  422793:	fadd   st(0),st
  422795:	call   FWORD PTR [rcx-0x66006634]
  42279b:	int3   
  42279c:	cdq    
  42279d:	jmp    QWORD PTR [rsi-0x34]
  4227a0:	cdq    
  4227a1:	(bad)  
  4227a2:	(bad)  
  4227a3:	(bad)  
  4227a4:	(bad)  
  4227a5:	(bad)  
  4227a6:	(bad)  
  4227a7:	(bad)  
  4227a8:	(bad)  
  4227a9:	(bad)  
  4227aa:	(bad)  
  4227ab:	(bad)  
  4227ac:	(bad)  
  4227ad:	(bad)  
  4227ae:	(bad)  
  4227af:	(bad)  
  4227b0:	(bad)  
  4227b1:	(bad)  
  4227b2:	(bad)  
  4227b3:	(bad)  
  4227b4:	(bad)  
  4227b5:	(bad)  
  4227b6:	(bad)  
  4227b7:	(bad)  
  4227b8:	(bad)  
  4227b9:	(bad)  
  4227ba:	(bad)  
  4227bb:	(bad)  
  4227bc:	(bad)  
  4227bd:	jmp    QWORD PTR [rsi-0x34]
  4227c0:	jmp    WORD PTR [rsi-0x67]
  4227c4:	push   WORD PTR [rbx]
  4227c7:	cdq    
  4227c8:	push   WORD PTR [rbx]
  4227cb:	xor    di,di
	...
  4227f6:	movabs ds:0xf5ff7e8da4ae7c8c,eax
  4227ff:	(bad)  
  422801:	(bad)  
  422802:	mov    ebx,0xb1ff95a3
  422807:	cwde   
  422808:	mov    edi,edi
  42280a:	xchg   ecx,eax
  42280b:	ja     0x422875
  42280d:	std    
  42280e:	jl     0x4227a0
  422810:	imul   edi,edi,0xffffffc0
  422813:	fadd   st(0),st
  422815:	call   FWORD PTR [rcx-0x66006634]
  42281b:	int3   
  42281c:	cdq    
  42281d:	call   FWORD PTR [rcx-0x66006634]
  422823:	int3   
  422824:	cdq    
  422825:	call   FWORD PTR [rcx-0x66006634]
  42282b:	int3   
  42282c:	cdq    
  42282d:	call   FWORD PTR [rcx-0x66006634]
  422833:	int3   
  422834:	cdq    
  422835:	call   FWORD PTR [rcx-0x66006634]
  42283b:	int3   
  42283c:	cdq    
  42283d:	call   FWORD PTR [rcx+0x66ff99cc]
  422843:	int3   
  422844:	jmp    WORD PTR [rsi-0x67]
  422848:	push   WORD PTR [rbx]
  42284b:	xor    di,di
	...
  42287a:	popf   
  42287b:	test   DWORD PTR [rbp-0x52],esi
  42287e:	sahf   
  42287f:	xchg   BYTE PTR [rbp-0x1],dh
  422882:	mul    al
  422884:	(bad)  
  422885:	(bad)  
  422886:	mov    edx,0xb3ff91a0
  42288b:	cdq    
  42288c:	mov    bh,bh
  42288e:	xchg   ebx,eax
  42288f:	jp     0x4228fa
  422891:	jmp    FWORD PTR [rdi-0x3f00624b]
  422897:	fadd   st(0),st
  422899:	inc    eax
  42289b:	fadd   st(0),st
  42289d:	inc    eax
  42289f:	fadd   st(0),st
  4228a1:	inc    eax
  4228a3:	fadd   st(0),st
  4228a5:	inc    eax
  4228a7:	fadd   st(0),st
  4228a9:	inc    eax
  4228ab:	fadd   st(0),st
  4228ad:	inc    eax
  4228af:	fadd   st(0),st
  4228b1:	inc    eax
  4228b3:	fadd   st(0),st
  4228b5:	inc    eax
  4228b7:	fadd   st(0),st
  4228b9:	inc    eax
  4228bb:	fadd   st(0),st
  4228bd:	inc    eax
  4228bf:	fadd   st(0),st
  4228c1:	inc    eax
  4228c3:	fadd   st(0),st
  4228c5:	jmp    QWORD PTR [rsi-0x34]
  4228c8:	push   WORD PTR [rbx]
  4228cb:	xor    di,di
	...
  4228fe:	xchg   edi,eax
  4228ff:	jg     0x42296f
  422901:	scas   al,BYTE PTR es:[rdi]
  422902:	fwait
  422903:	(bad)  
  422904:	jo     0x422905
  422906:	mul    cl
  422908:	(bad)  
  422909:	(bad)  
  42290a:	mov    ecx,0xadff8e9e
  42290f:	xchg   edx,eax
  422910:	cmp    edi,0xff63738e
  422916:	js     0x4228a3
  422918:	jmp    WORD PTR [rsi-0x67]
  42291c:	jmp    WORD PTR [rsi-0x67]
  422920:	jmp    WORD PTR [rsi-0x67]
  422924:	jmp    WORD PTR [rsi-0x67]
  422928:	jmp    WORD PTR [rsi-0x67]
  42292c:	jmp    WORD PTR [rsi-0x67]
  422930:	push   WORD PTR [rbx]
  422933:	cdq    
  422934:	xor    edi,edi
  422936:	cwd    
  422938:	push   WORD PTR [rbx]
  42293b:	cdq    
  42293c:	xor    edi,edi
  42293e:	cwd    
  422940:	push   WORD PTR [rbx]
  422943:	cdq    
  422944:	xor    edi,edi
  422946:	xor    ebx,DWORD PTR [rcx-0x66cc00cd]
  42294c:	xor    edi,edi
	...
  422982:	xchg   edx,eax
  422983:	jns    0x4229ec
  422985:	scas   al,BYTE PTR es:[rdi]
  422986:	cdq    
  422987:	jg     0x4229f8
  422989:	push   rsi
  42298b:	loope  0x422965
  42298d:	push   QWORD PTR [rbp-0x58007566]
  422993:	mov    edi,DWORD PTR [rcx-0x1]
  422996:	mov    esi,DWORD PTR [rax+0x5f]
  422999:	std    
  42299a:	mov    DWORD PTR [rsi+0x5b],ebp
  42299d:	data16 add BYTE PTR [rax],al
	...
  422a04:	add    BYTE PTR [rax],al
  422a06:	lea    esi,[rdx+riz*2-0x51]
  422a0a:	xchg   ebx,eax
  422a0b:	jp     0x422a75
  422a0d:	push   rsi
  422a0f:	loop   0x4229e9
  422a11:	jmp    FWORD PTR [rbx-0x65008071]
  422a17:	jle    0x422a85
  422a19:	(bad)  
  422a1a:	jp     0x422a7c
  422a1c:	rex.WR std 
  422a1e:	jg     0x422a85
  422a20:	push   rcx
  422a21:	add    BYTE PTR fs:[rax],al
	...
  422a88:	add    BYTE PTR [rax],al
  422a8a:	xchg   DWORD PTR [rbp+0x5a],ebp
  422a8d:	scas   al,BYTE PTR es:[rdi]
  422a8e:	mov    DWORD PTR [rax+0x5e],esi
  422a91:	push   rsi
  422a93:	loop   0x422a6e
  422a95:	call   FWORD PTR [rax-0x6b009483]
  422a9b:	jns    0x422b02
  422a9d:	push   QWORD PTR [rbx+0x58]
  422aa0:	rex.R std 
  422aa2:	jnp    0x422b04
  422aa4:	rex.WRB
  422aa5:	add    BYTE PTR fs:[rax],al
	...
  422b0c:	add    BYTE PTR [rax],al
  422b0e:	and    DWORD PTR [rdi+0x54],0x546782ae
  422b15:	push   rsi
  422b17:	jrcxz  0x422af3
  422b19:	jmp    FWORD PTR [rdx-0x55007e6f]
  422b1f:	xchg   ecx,eax
  422b20:	cmp    edi,0xfe415570
  422b26:	outs   dx,BYTE PTR ds:[rsi]
  422b27:	push   rbx
  422b28:	(bad)  
  422b29:	out    dx,al
  422b2a:	ins    DWORD PTR es:[rdi],dx
  422b2b:	push   rbp
  422b2c:	rex.X (bad) 
  422b2e:	ins    DWORD PTR es:[rdi],dx
  422b2f:	push   rbp
  422b30:	rex.X (bad) 
  422b32:	jns    0x422b92
  422b34:	rex.WX sar BYTE PTR [rbx+0x60],cl
  422b38:	rex.WR mov r15b,BYTE PTR [rcx+riz*2+0x4d]
  422b3d:	add    al,BYTE PTR [rax]
	...
  422b8f:	add    BYTE PTR [rax],al
  422b91:	add    BYTE PTR [rcx+riz*2+0x4d],bh
  422b95:	scas   al,BYTE PTR es:[rdi]
  422b96:	jge    0x422bfb
  422b98:	rex.WRX push rdi
  422b9b:	jrcxz  0x422b78
  422b9d:	jmp    FWORD PTR [rdx-0x3f007e6f]
  422ba3:	test   eax,0x9eb8ff9d
  422ba8:	nop
  422ba9:	push   QWORD PTR [rax-0x57007769]
  422baf:	(bad)  
  422bb0:	jle    0x422bb1
  422bb2:	lahf   
  422bb3:	test   BYTE PTR [rbx-0x1],dh
  422bb6:	jne    0x422c12
  422bb8:	rex.RX push QWORD PTR [rcx+r11*2+0x44]
  422bbd:	sar    BYTE PTR [rcx+riz*2+0x4d],0x2
	...
  422c16:	js     0x422c75
  422c18:	rex.WB scas al,BYTE PTR es:[rdi]
  422c1a:	mov    WORD PTR [rbx+riz*2-0x1],?
  422c1e:	icebp  
  422c1f:	rol    ecx,1
  422c21:	push   QWORD PTR [rsp+rbx*4-0x654b0073]
  422c28:	mov    edi,edi
  422c2a:	lahf   
  422c2b:	xchg   DWORD PTR [rsi-0x1],esi
  422c2e:	(bad)  
  422c2f:	mov    cl,0xa5
  422c31:	(bad)  
  422c32:	mov    esi,0xb5ff98a6
  422c37:	fwait
  422c38:	(bad)  
  422c39:	push   QWORD PTR [rbp+0x5a]
  422c3c:	rex.RX push QWORD PTR [rdi+0x5c]
  422c40:	rex.RXB xchg r15d,eax
	...
  422c9a:	nop
  422c9b:	jns    0x422d05
  422c9d:	div    bl
  422c9f:	(bad)  
  422ca0:	enter  0xbcff,0xa3
  422ca4:	xchg   esi,eax
  422ca5:	push   QWORD PTR [rbx-0x6f007466]
  422cab:	jne    0x422d11
  422cad:	jmp    QWORD PTR [rbx+0x48]
  422cb0:	xor    edi,edi
  422cb2:	movsxd ecx,DWORD PTR [rax+0x33]
  422cb5:	jmp    QWORD PTR [rbx+0x48]
  422cb8:	xor    edi,edi
  422cba:	movsxd ecx,DWORD PTR [rax+0x33]
  422cbd:	jmp    FWORD PTR [rbx+0x50]
  422cc0:	cmp    esi,esi
	...
  422d1a:	xchg   ebp,eax
  422d1b:	jle    0x422d8a
  422d1d:	std    
  422d1e:	hlt    
  422d1f:	fcmove st,st(6)
  422d21:	inc    ebx
  422d23:	lods   eax,DWORD PTR ds:[rsi]
  422d24:	movabs al,ds:0x5d6f87ff94a2bbff
  422d2d:	inc    DWORD PTR [rax]
	...
  422d97:	add    BYTE PTR [rax],al
  422d99:	add    BYTE PTR [rcx-0xa028e7e],bl
  422d9f:	(bad)  
  422da1:	dec    ebx
  422da3:	mov    eax,0xabc2ffac
  422da8:	lahf   
  422da9:	dec    DWORD PTR [rbp+0xff6375]
	...
  422e17:	add    BYTE PTR [rax],al
  422e19:	add    BYTE PTR [rbp-0x81c897a],bl
  422e1f:	in     al,0xda
  422e21:	call   rbx
  422e23:	ret    
  422e24:	mov    edx,0xabb5c9ff
  422e29:	call   QWORD PTR [rdx+0xfd6a7c]
	...
  422e97:	add    BYTE PTR [rax],al
  422e99:	add    BYTE PTR [rcx-0x63688475],ah
  422e9f:	test   DWORD PTR [rbp-0x1],esi
  422ea2:	mul    esp
  422ea4:	(bad)  
  422ea6:	rol    cl,cl
  422ea8:	mov    eax,0x8997adff
  422ead:	jmp    QWORD PTR [rbx+0x48]
  422eb0:	xor    edi,edi
  422eb2:	movsxd ecx,DWORD PTR [rax+0x33]
  422eb5:	jmp    QWORD PTR [rbx+0x48]
  422eb8:	xor    edi,edi
  422eba:	movsxd ecx,DWORD PTR [rax+0x33]
  422ebd:	push   QWORD PTR [rdi+0x5c]
  422ec0:	rex.RXB xchg r15d,eax
	...
  422f1a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  422f1b:	nop
  422f1c:	add    BYTE PTR [rdx],0xa1
  422f1f:	mov    bh,BYTE PTR [rdx-0x40]
  422f22:	pushf  
  422f23:	test   DWORD PTR [rdi+rdi*8-0x9],esi
  422f27:	in     eax,0xdc
  422f29:	call   rdi
  422f2b:	mov    esp,0xbad5ffae
  422f30:	stos   DWORD PTR es:[rdi],eax
  422f31:	call   rbx
  422f33:	mov    eax,0x5a75ffa9
  422f38:	rex.RX push QWORD PTR [rcx+r11*2+0x44]
  422f3d:	sar    BYTE PTR [rcx+riz*2+0x4d],0x2
	...
  422f9e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  422f9f:	(bad)  
  422fa0:	jg     0x422fa4
  422fa2:	movabs al,ds:0x96e373849b97798a
  422fab:	jg     0x42301b
  422fad:	std    
  422fae:	xchg   ecx,eax
  422faf:	jns    0x423019
  422fb1:	std    
  422fb2:	mov    esi,DWORD PTR [rdx+riz*2-0x1d]
  422fb6:	xchg   BYTE PTR [rsi+0x5c],ch
  422fb9:	xchg   edi,eax
  422fba:	sub    DWORD PTR [rax+0x55],0x2
	...
  4230d5:	add    bh,bh
  4230d7:	(bad)  
  4230d8:	(bad)  
  4230d9:	(bad)  
  4230da:	(bad)  
  4230db:	(bad)  
  4230dc:	(bad)  
  4230dd:	(bad)  
  4230de:	(bad)  
  4230df:	cld    
  4230e0:	add    BYTE PTR [rbx],al
  4230e2:	(bad)  
  4230e3:	cld    
  4230e4:	add    BYTE PTR [rbx],al
  4230e6:	(bad)  
  4230e7:	cld    
  4230e8:	add    BYTE PTR [rbx],al
  4230ea:	loopne 0x423128
  4230ec:	add    BYTE PTR [rbx],al
  4230ee:	rcr    BYTE PTR [rax+rax*1],0x3
  4230f2:	rcr    BYTE PTR [rax+rax*1],0x3
  4230f6:	cld    
  4230f7:	sbb    al,0x0
  4230f9:	add    edi,esp
  4230fb:	sbb    al,0x0
  4230fd:	add    eax,eax
  4230ff:	sbb    al,0x0
  423101:	add    eax,eax
  423103:	or     al,0x0
  423105:	add    eax,eax
  423107:	add    al,0x0
  423109:	add    esp,eax
  42310b:	add    BYTE PTR [rax],al
  42310d:	add    edi,edi
  42310f:	add    BYTE PTR [rax],al
  423111:	add    edi,edi
  423113:	add    BYTE PTR [rax],0x3
  423116:	inc    eax
  423118:	add    BYTE PTR [rbx],al
  42311a:	jmp    rax
  42311c:	(bad)  
  42311d:	(bad)  
  42311e:	push   rax
  423120:	(bad)  
  423121:	(bad)  
  423122:	(bad)  
  423123:	clc    
  423124:	ud0    edi,edi
  423127:	cld    
  423128:	add    BYTE PTR [rdi],bh
  42312a:	(bad)  
  42312b:	inc    BYTE PTR [rax]
  42312d:	(bad)  
  42312e:	(bad)  
  42312f:	inc    DWORD PTR [rax]
  423131:	(bad)  
  423132:	(bad)  
  423133:	inc    DWORD PTR [rax-0x7c0000e1]
  423139:	(bad)  
  42313a:	(bad)  
  42313b:	inc    DWORD PTR [rbx-0x7c000001]
  423141:	(bad)  
  423142:	(bad)  
  423143:	inc    DWORD PTR [rax-0x7f0000e1]
  423149:	(bad)  
  42314a:	(bad)  
  42314b:	inc    eax
  42314d:	(bad)  
  42314e:	(bad)  
  42314f:	(bad)  
  423150:	(bad)  
  423151:	(bad)  
  423152:	(bad)  
  423153:	(bad)  
  423154:	(bad)  
  423155:	jmp    FWORD PTR [rax]
  423157:	add    BYTE PTR [rax],al
  423159:	add    BYTE PTR [rax],dl
  42315b:	add    BYTE PTR [rax],al
  42315d:	add    BYTE PTR [rax],ah
  42315f:	add    BYTE PTR [rax],al
  423161:	add    BYTE PTR [rcx],al
  423163:	add    BYTE PTR [rax],ah
  423165:	add    BYTE PTR [rax],al
  423167:	add    BYTE PTR [rax],al
  423169:	add    BYTE PTR [rax+0x4],al
	...
  4231d8:	add    BYTE PTR [rax],al
  4231da:	and    al,0x81
  4231dc:	and    esi,esp
  4231de:	and    al,0x71
  4231e0:	xor    ebp,esi
  4231e2:	add    al,0x6a
  4231e4:	lock movd mm2,DWORD PTR es:[rdx]
  4231e9:	lock or eax,0xbf0126f
  4231ef:	outs   dx,DWORD PTR ds:[rsi]
  4231f0:	(bad)  
  4231f1:	lock or eax,0xdf00e71
  4231f7:	imul   ecx,DWORD PTR [rdi],0xffffffff
	...
  42321a:	(bad)
  42321f:	mov    bl,0x6b
  423221:	push   QWORD PTR [rsi]
  423223:	jnp    0x42326d
  423225:	(bad)  
  423226:	cmp    BYTE PTR [rcx-0x6be200be],al
  42322c:	cmp    eax,0x248d05ff
  423231:	dec    DWORD PTR [rax]
  423233:	xchg   edx,eax
  423234:	sub    edi,edi
  423236:	(bad)  
  423237:	lea    ebx,[rdi+rdi*8]
	...
  42324a:	mov    BYTE PTR [rax+0x6b],bh
  42324d:	(bad)  
  42324e:	jnp    0x4232bb
  423250:	(bad)  
  423251:	call   FWORD PTR [rdi+0x6c7787]
  423257:	add    BYTE PTR [rax],al
  423259:	add    BYTE PTR [rdx-0x43],dh
  42325c:	jbe    0x423253
  42325e:	rex.WRX movabs ds:0x692effeae8efff6a,rax
  423268:	(bad)  
  423269:	jmp    FWORD PTR [rsi]
  42326b:	imul   esi,DWORD PTR [rdi],0x37692eff
  423271:	jmp    FWORD PTR [rdi]
  423273:	xchg   ebx,eax
  423274:	rex.WRB inc QWORD PTR [rip+0xff2088]        # 0x1415303
	...
  423287:	add    BYTE PTR [rax],al
  423289:	add    bh,bh
  42328b:	(bad)  
  42328c:	jmp    QWORD PTR [rip+0xfffffffffd7f8b9a]        # 0xfffffffffdc1be2c
  423292:	mov    esi,DWORD PTR [rbx+0x64]
  423295:	inc    DWORD PTR [rax]
  423297:	add    BYTE PTR [rax],al
  423299:	add    BYTE PTR [rbp-0x4a],bh
  42329c:	mov    bh,bh
  42329e:	mov    fs,ecx
  4232a0:	movabs ds:0xffffffff6aa34eff,eax
  4232a9:	jmp    FWORD PTR [rsi]
  4232ab:	imul   esi,DWORD PTR [rdi],0xefe8f3ff
  4232b1:	call   FWORD PTR [rdx-0x58]
  4232b4:	outs   dx,DWORD PTR ds:[rsi]
  4232b5:	dec    DWORD PTR [rdx]
  4232b7:	sbb    DWORD PTR [rcx],0xffffffff
	...
  4232c2:	mov    bh,0xa1
  4232c4:	nop
  4232c5:	(bad)  
  4232c6:	cld    
  4232c7:	cli    
  4232c8:	stc    
  4232c9:	rex.R shr BYTE PTR [rbp+rbx*4-0x786c5bcb],0xff
  4232d2:	ja     0x423333
  4232d4:	rex.WRX inc QWORD PTR [rax]
  4232d7:	add    BYTE PTR [rax],al
  4232d9:	add    BYTE PTR [rbx+rdi*4-0x286d0071],al
  4232e0:	xchg   ebx,eax
  4232e1:	dec    DWORD PTR [rsi-0x5d]
  4232e4:	push   0xffffffffffffffff
  4232e6:	rex.WRX movabs ds:0xffffffffffffff6a,rax
  4232f0:	(bad)  
  4232f1:	(bad)  
  4232f2:	js     0x42329d
  4232f4:	cmp    edi,0xff2e8513
	...
  423302:	mov    bh,0xa1
  423304:	nop
  423305:	inc    esp
  423307:	mov    dl,0xa5
  423309:	inc    cl
  42330b:	lods   eax,DWORD PTR ds:[rsi]
  42330c:	lahf   
  42330d:	jmp    FWORD PTR [rdx+0x7aff8c98]
  423313:	fs push rbx
  423315:	push   QWORD PTR [rbp+0x59]
  423318:	xor    r9d,DWORD PTR [rcx-0x72007144]
  42331f:	(bad)  
  423320:	(bad)  
  423321:	call   FWORD PTR [rax-0x4a22]
  423327:	(bad)  
  423328:	(bad)  
  423329:	(bad)  
  42332a:	(bad)  
  42332b:	(bad)  
  42332c:	(bad)  
  42332d:	(bad)  
  42332e:	(bad)  
  42332f:	(bad)  
  423330:	(bad)  
  423331:	dec    DWORD PTR [rsi+0x1fff8acf]
  423337:	mov    ?,WORD PTR [rdi+rdi*8]
	...
  423342:	mov    al,0x9b
  423344:	mov    dl,BYTE PTR [rbp-0x68]
  423347:	xchg   DWORD PTR [rbx-0x1],edi
  42334a:	xchg   ecx,eax
  42334b:	jp     0x4233b5
  42334d:	inc    DWORD PTR [rbx-0xa194]
  423353:	(bad)  
  423354:	std    
  423355:	push   QWORD PTR [rbp+0x59]
  423358:	rex.R inc DWORD PTR [rcx-0x5000895b]
  42335f:	loope  0x423307
  423361:	jmp    FWORD PTR [rcx-0x50005b22]
  423367:	loopne 0x423312
  423369:	jmp    FWORD PTR [rdi+rbx*8-0x1f53005c]
  423370:	movabs ds:0x54b356ff9be4a4ff,eax
  423379:	inc    DWORD PTR [rax]
	...
  42338f:	add    BYTE PTR [rax],al
  423391:	add    BYTE PTR [rdi-0x6f5f],dh
  423397:	(bad)  
  423398:	std    
  423399:	push   QWORD PTR [rbp+0x59]
  42339c:	rex.R (bad) 
  42339e:	cmp    ah,BYTE PTR [rbp+0x5a]
  4233a1:	push   QWORD PTR [rdx]
  4233a3:	outs   dx,DWORD PTR ds:[rsi]
  4233a4:	data16 (bad) 
  4233a6:	cmp    DWORD PTR [rdi+0x66],esi
  4233a9:	jmp    FWORD PTR [rdi]
  4233ab:	jbe    0x423415
  4233ad:	jmp    FWORD PTR [rax]
  4233af:	jbe    0x42341a
  4233b1:	jmp    FWORD PTR [rip+0x19ff6a6b]        # 0x1a419e22
  4233b7:	jp     0x4233df
  4233b9:	mov    esp,0x0
	...
  4233d6:	mov    bh,0xa1
  4233d8:	nop
  4233d9:	(bad)  
  4233da:	(bad)  
  4233db:	(bad)  
  4233dc:	std    
  4233dd:	push   QWORD PTR [rbp+0x59]
  4233e0:	rex.R push QWORD PTR [rbp+0x59]
  4233e4:	xor    r8d,DWORD PTR [rax]
	...
  423417:	add    BYTE PTR [rax],al
  423419:	add    BYTE PTR [rdi-0x6f5f],dh
  42341f:	(bad)  
  423420:	std    
  423421:	dec    DWORD PTR [rax-0x7b00a291]
  423427:	imul   edx,DWORD PTR [rdi-0x1],0xff70819a
  42342e:	movabs ds:0x6c7a8b,eax
	...
  42345b:	add    BYTE PTR [rax],al
  42345d:	add    BYTE PTR [rsi-0x3d009382],dl
  423463:	scas   eax,DWORD PTR es:[rdi]
  423464:	movabs al,ds:0x838f9eff96a5b7ff
  42346d:	std    
  42346e:	movabs al,ds:0xff7d8d
	...
  42349b:	add    BYTE PTR [rax],al
  42349d:	add    BYTE PTR [rax-0x3e009282],bl
  4234a3:	lods   eax,DWORD PTR ds:[rsi]
  4234a4:	lahf   
  4234a5:	inc    eax
  4234a7:	lods   al,BYTE PTR ds:[rsi]
  4234a8:	popf   
  4234a9:	xor    eax,0x25fefefe
  4234ae:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4234af:	xchg   ebx,eax
  4234b0:	test   bh,bh
	...
  4234de:	mov    ebp,0xc9ff98a8
  4234e3:	mov    dh,0xa9
  4234e5:	(bad)  
  4234e6:	cld    
  4234e7:	cli    
  4234e8:	stc    
  4234e9:	add    BYTE PTR [rax],r8b
	...
  42351c:	add    BYTE PTR [rax],al
  42351e:	mov    bh,0xa1
  423520:	nop
  423521:	push   rbp
  423522:	mov    bh,0xa1
  423524:	nop
  423525:	push   QWORD PTR [rdi+0xff90a1]
	...
  42357b:	add    BYTE PTR [rax],al
  42357d:	add    bh,bh
  42357f:	inc    DWORD PTR [rax]
  423581:	add    dh,bh
  423583:	add    DWORD PTR [rax],eax
  423585:	add    dh,bh
  423587:	add    DWORD PTR [rax],eax
  423589:	add    dl,ah
  42358b:	add    DWORD PTR [rax],eax
  42358d:	add    dl,ah
  42358f:	add    DWORD PTR [rax],eax
  423591:	add    BYTE PTR [rdx-0x7fffffff],al
  423597:	add    DWORD PTR [rax],eax
  423599:	add    BYTE PTR [rax-0x7ffffff],al
  42359f:	add    DWORD PTR [rax],eax
  4235a1:	add    ah,bh
  4235a3:	(bad)  
  4235a4:	add    BYTE PTR [rax],al
  4235a6:	inc    BYTE PTR [rdi]
  4235a8:	add    BYTE PTR [rax],al
  4235aa:	inc    DWORD PTR [rdi]
  4235ac:	add    BYTE PTR [rax],al
  4235ae:	inc    DWORD PTR [rdi]
  4235b0:	add    BYTE PTR [rax],al
  4235b2:	call   FWORD PTR [rdi]
  4235b4:	add    BYTE PTR [rax],al
  4235b6:	call   FWORD PTR [rdi]
  4235b8:	add    BYTE PTR [rax],al
  4235ba:	(bad)  
  4235bb:	inc    DWORD PTR [rax]
  4235bd:	add    BYTE PTR [rbx],cl
  4235bf:	add    BYTE PTR [rcx],al
  4235c2:	add    BYTE PTR [rax],al
  4235c4:	add    bh,bh
  4235c6:	(bad)  
  4235c7:	(bad)  
  4235c8:	inc    DWORD PTR [rcx]
  4235ca:	add    BYTE PTR [rax],al
  4235cc:	add    BYTE PTR [rax],al
  4235ce:	add    BYTE PTR [rax],al
  4235d0:	add    BYTE PTR [rdx+rax*1],cl
  4235d3:	add    BYTE PTR [rax],al
  4235d5:	add    BYTE PTR [rcx+0x53],dl
  4235d8:	jns    0x42364d
  4235da:	je     0x423641
  4235dc:	ins    DWORD PTR es:[rdi],dx
  4235dd:	cs rex.R jb 0x423642
  4235e1:	ja     0x42364c
  4235e3:	outs   dx,BYTE PTR ds:[rsi]
  4235e4:	addr32 sub al,0x20
  4235e7:	push   rsi
  4235e8:	gs jb  0x42365e
  4235eb:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  4235f2:	xor    BYTE PTR cs:[rsi],ch
  4235f5:	xor    BYTE PTR [rax+riz*1],ch
  4235f8:	rex.XB jne 0x423667
  4235fb:	je     0x423672
  4235fd:	jb     0x423664
  4235ff:	cmp    eax,0x7475656e
  423604:	jb     0x423667
  423606:	ins    BYTE PTR es:[rdi],dx
  423607:	sub    al,0x20
  423609:	push   rax
  42360a:	jne    0x42366e
  42360c:	ins    BYTE PTR es:[rdi],dx
  42360d:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  423614:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  423618:	(bad)  
  423619:	xor    BYTE PTR [rbx],dh
  42361b:	xor    ax,0x3766
  42361f:	xor    WORD PTR [rcx],si
  423622:	fs xor eax,0x61336130
  423628:	add    eax,0x1
  42362d:	adc    edx,DWORD PTR [rbx+0x79]
  423630:	jae    0x4236a6
  423632:	gs ins DWORD PTR es:[rdi],dx
  423634:	cs rex.R jb 0x423699
  423638:	ja     0x4236a3
  42363a:	outs   dx,BYTE PTR ds:[rsi]
  42363b:	movsxd rbp,DWORD PTR cs:[r15d+0x6e]
  423641:	add    al,BYTE PTR [rax]
  423643:	add    BYTE PTR [rax],al
  423645:	or     BYTE PTR [rcx+0x63],cl
  423648:	outs   dx,DWORD PTR ds:[rsi]
  423649:	outs   dx,BYTE PTR ds:[rsi]
  42364a:	rex.R (bad) 
  42364c:	je     0x4236af
  42364e:	or     BYTE PTR [rcx+0x63],cl
  423651:	outs   dx,DWORD PTR ds:[rsi]
  423652:	outs   dx,BYTE PTR ds:[rsi]
  423653:	push   rbx
  423654:	imul   edi,DWORD PTR [rdx+0x65],0x13020407
  42365b:	push   rbx
  42365c:	jns    0x4236d1
  42365e:	je     0x4236c5
  423660:	ins    DWORD PTR es:[rdi],dx
  423661:	cs rex.R jb 0x4236c6
  423665:	ja     0x4236d0
  423667:	outs   dx,BYTE PTR ds:[rsi]
  423668:	addr32 cs push rbx
  42366b:	imul   edi,DWORD PTR [rdx+0x65],0x2
  423672:	add    al,BYTE PTR [rax]
  423674:	add    BYTE PTR [rax],al
  423676:	or     DWORD PTR [rbx],eax
  423678:	add    BYTE PTR [rax],al
  42367a:	add    BYTE PTR [rip+0xfffffffffffffffc],al        # 0x42367c
  423680:	adc    edx,DWORD PTR [rbx+0x79]
  423683:	jae    0x4236f9
  423685:	gs ins DWORD PTR es:[rdi],dx
  423687:	cs rex.R jb 0x4236ec
  42368b:	ja     0x4236f6
  42368d:	outs   dx,BYTE PTR ds:[rsi]
  42368e:	addr32 cs push rbx
  423691:	imul   edi,DWORD PTR [rdx+0x65],0x2
  423698:	add    eax,0x74646977
  42369d:	push   0x69656806
  4236a2:	addr32 push 0x8000074
  4236a8:	or     BYTE PTR [rdx],al
	...
  4236b2:	add    BYTE PTR [rax],al
  4236b4:	add    BYTE PTR [rdi],cl
  4236b6:	add    eax,DWORD PTR [rax]
  4236b8:	add    BYTE PTR [rax],al
  4236ba:	xchg   esi,eax
  4236bb:	(bad)  
  4236bc:	add    BYTE PTR [rax],al
  4236be:	add    al,BYTE PTR [rax]
  4236c0:	add    BYTE PTR [rcx],al
  4236c2:	add    BYTE PTR [rsi],al
  4236c4:	add    BYTE PTR [rax],ah
  4236c6:	and    BYTE PTR [rax],dl
  4236c8:	add    BYTE PTR [rcx],al
  4236ca:	add    BYTE PTR [rax+rax*1],al
  4236cd:	call   0x664236d4
  4236d2:	add    BYTE PTR [rax],al
  4236d4:	add    BYTE PTR [rax],dl
  4236d6:	adc    BYTE PTR [rax],dl
  4236d8:	add    BYTE PTR [rcx],al
  4236da:	add    BYTE PTR [rax+rax*1],al
  4236dd:	sub    BYTE PTR [rcx],al
  4236df:	add    BYTE PTR [rax],al
  4236e1:	rex.WRX add r8,QWORD PTR [rax]
  4236e4:	add    BYTE PTR [rax],ah
  4236e6:	and    BYTE PTR [rax],al
  4236e8:	add    BYTE PTR [rcx],al
  4236ea:	add    BYTE PTR [rax],cl
  4236ec:	add    BYTE PTR [rax+0x76000008],ch
  4236f2:	add    al,0x0
  4236f4:	add    BYTE PTR [rax],dl
  4236f6:	adc    BYTE PTR [rax],al
  4236f8:	add    BYTE PTR [rcx],al
  4236fa:	add    BYTE PTR [rax],cl
  4236fc:	add    BYTE PTR [rax+0x5],ch
  4236ff:	add    BYTE PTR [rax],al
  423701:	(bad)  
  423702:	or     eax,0x20200000
  423707:	add    BYTE PTR [rax],al
  423709:	add    DWORD PTR [rax],eax
  42370b:	and    BYTE PTR [rax],al
  42370d:	test   al,0x10
  42370f:	add    BYTE PTR [rax],al
  423711:	xchg   BYTE PTR [rdx],dl
  423713:	add    BYTE PTR [rax],al
  423715:	adc    BYTE PTR [rax],dl
  423717:	add    BYTE PTR [rax],al
  423719:	add    DWORD PTR [rax],eax
  42371b:	and    BYTE PTR [rax],al
  42371d:	push   0x2e000004
  423722:	and    eax,DWORD PTR [rax]
  423724:	add    BYTE PTR [rax],ch
  423726:	add    BYTE PTR [rax],al
  423728:	add    BYTE PTR [rax],ah
  42372a:	add    BYTE PTR [rax],al
  42372c:	add    BYTE PTR [rax+0x0],al
  42372f:	add    BYTE PTR [rax],al
  423731:	add    DWORD PTR [rax],eax
  423733:	add    al,0x0
  423735:	add    BYTE PTR [rax],al
  423737:	add    BYTE PTR [rax],al
  423739:	add    BYTE PTR [rdx],al
	...
  423753:	add    BYTE PTR [rax],0x0
  423756:	add    BYTE PTR [rax],0x0
  423759:	add    BYTE PTR [rax+0x800080],al
  42375f:	add    BYTE PTR [rax],al
  423761:	add    BYTE PTR [rax],0x80
  423764:	add    BYTE PTR [rax-0x7fffff80],al
  42376a:	add    BYTE PTR [rax-0x3f3f4000],0x0
  423771:	add    BYTE PTR [rax],al
  423773:	inc    DWORD PTR [rax]
  423775:	add    bh,bh
  423777:	add    BYTE PTR [rax],al
  423779:	add    bh,bh
  42377b:	inc    DWORD PTR [rax]
  42377d:	inc    DWORD PTR [rax]
  42377f:	add    BYTE PTR [rax],al
  423781:	inc    DWORD PTR [rax]
  423783:	inc    DWORD PTR [rax]
  423785:	(bad)  
  423786:	inc    DWORD PTR [rax]
  423788:	add    bh,bh
  42378a:	(bad)  
  42378b:	inc    DWORD PTR [rax]
  42378d:	mov    BYTE PTR [rax+0x70],cl
  423793:	add    BYTE PTR [rdx],al
  423795:	jb     0x4237be
  423797:	and    esp,DWORD PTR [rdx+0x36]
  42379a:	and    esp,DWORD PTR ss:[rax-0x1]
  42379e:	jo     0x4237a4
  4237a4:	add    dh,BYTE PTR [rdi+0x37]
  4237a7:	ss ss (bad) 
  4237aa:	and    esp,DWORD PTR [rdx+0x30]
  4237ad:	add    BYTE PTR [rax],0x80
  4237b0:	add    BYTE PTR [rax],al
  4237b2:	add    BYTE PTR [rax],al
  4237b4:	(bad)  
  4237b5:	xchg   DWORD PTR [rdx+0x67],esi
  4237b8:	jae    0x4237ec
  4237ba:	jb     0x42382f
  4237bc:	(bad)  
  4237bd:	lock lock add BYTE PTR [rax],0x0
  4237c2:	add    BYTE PTR [rax],al
  4237c4:	add    al,BYTE PTR [rdi+0x633782a7]
  4237ca:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4237cb:	xor    BYTE PTR es:[rdi+0x7088],cl
  4237d2:	add    BYTE PTR [rax],al
  4237d4:	add    bh,al
  4237d6:	(bad)  
  4237d7:	mov    BYTE PTR [rdi],ah
  4237d9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4237da:	jae    0x423816
  4237dc:	(bad)  
  4237dd:	add    BYTE PTR [rax],al
  4237df:	add    BYTE PTR [rax],al
  4237e1:	add    BYTE PTR [rax],al
  4237e3:	add    BYTE PTR [rdi],al
  4237e5:	mov    bh,bh
  4237e7:	clc    
  4237e8:	xchg   DWORD PTR [rax],ecx
  4237ea:	xchg   BYTE PTR [rdi],dh
  4237ec:	and    BYTE PTR [rax+0x8088],cl
  4237f2:	add    BYTE PTR [rcx],al
  4237f4:	ja     0x42377d
  4237f6:	mov    edi,0x82f888ff
  4237fb:	jp     0x42382d
  4237fd:	dec    DWORD PTR [rdi]
  4237ff:	jo     0x423801
  423801:	add    BYTE PTR [rbx],al
  423803:	ja     0x423878
  423805:	mov    BYTE PTR [rdi-0x7c000001],ah
  42380b:	jb     0x42386d
  42380d:	add    BYTE PTR [rax],0x80
  423810:	add    BYTE PTR [rdi],al
  423812:	js     0x423807
  423814:	or     DWORD PTR [rax-0x8079],0xffffff87
  42381b:	ss xor al,dh
  42381e:	add    BYTE PTR [rax-0x80784f9],al
  423824:	mov    bh,0x88
  423826:	jp     0x4238a7
  423828:	(bad)  
  423829:	inc    DWORD PTR [rdi-0x77708f86]
  42382f:	cmp    BYTE PTR [rax-0x78],0xf8
  423833:	clc    
  423834:	ja     0x4237be
  423836:	xchg   edi,edi
  423838:	(bad)  
  423839:	push   rdi
  42383b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  42383c:	and    BYTE PTR [rax],al
  42383e:	add    BYTE PTR [rax],al
  423840:	jnp    0x4238bd
  423842:	clc    
  423843:	mov    eax,DWORD PTR [rdi-0x8479]
  423849:	push   rdi
  42384b:	jae    0x4238bd
  42384d:	mov    BYTE PTR [rax-0x778780],cl
  423853:	mov    BYTE PTR [rbx-0x78],dh
  423856:	mov    ?,WORD PTR [rax+0x78]
  423859:	js     0x4238d3
  42385b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  42385c:	and    bh,bh
  42385e:	pshufw mm7,QWORD PTR [rax-0x48],0x8f
  423863:	mov    eax,DWORD PTR [rdi-0x77777778]
  423869:	mov    BYTE PTR [rax+0x802087],cl
  42386f:	cmp    BYTE PTR [rax-0x78],0x88
  423873:	mov    BYTE PTR [rdi+0x777a737a],dh
  423879:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  42387a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  42387b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  42387c:	movabs al,ds:0x8888b8887b8000f0
  423885:	(bad)  
  423886:	xor    esi,DWORD PTR [rbx+0x33]
  423889:	jae    0x4238c2
  42388b:	adc    BYTE PTR [rax],al
  42388d:	(bad)
  423891:	mov    BYTE PTR [rdi+0x178388fb],cl
  423897:	(bad)  
  423898:	jae    0x4238cf
  42389a:	xor    edx,DWORD PTR [rax+0x0]
  42389d:	add    BYTE PTR [rax],al
  42389f:	add    BYTE PTR [rax-0x48],bh
  4238a2:	(bad)  
  4238a3:	clc    
  4238a4:	mov    eax,DWORD PTR [rbx+0x33171311]
  4238aa:	xchg   edi,eax
  4238ab:	adc    BYTE PTR [rax],al
  4238ad:	add    BYTE PTR [rax],al
  4238af:	add    BYTE PTR [rax-0x78],bh
  4238b2:	clc    
  4238b3:	mov    BYTE PTR [rax+0x31737783],bh
  4238b9:	(bad)  
  4238ba:	xor    esi,DWORD PTR [rax+0x0]
  4238bd:	add    BYTE PTR [rax],al
  4238bf:	add    BYTE PTR [rbx-0x75],bh
  4238c2:	sti    
  4238c3:	jnp    0x423938
  4238c5:	jae    0x42384f
  4238c7:	xchg   DWORD PTR [rdi+0x11],esi
  4238ca:	adc    edx,DWORD PTR [rax]
  4238cc:	add    BYTE PTR [rax],al
  4238ce:	add    BYTE PTR [rax],al
  4238d0:	js     0x423859
  4238d2:	js     0x42385c
  4238d4:	xchg   DWORD PTR [rcx-0x784777c5],ecx
  4238da:	jae    0x42391c
  4238dc:	add    BYTE PTR [rax],al
  4238de:	add    BYTE PTR [rax],cl
  4238e0:	mov    bh,0xb8
  4238e2:	mov    BYTE PTR [rbx+0x38783779],cl
  4238e8:	js     0x4238a2
  4238ea:	ja     0x4238a3
  4238ec:	add    BYTE PTR [rax],al
  4238ee:	(bad)  
  4238ef:	mov    BYTE PTR [rax+0x7379b7f8],cl
  4238f5:	jae    0x4238ae
  4238f7:	mov    edi,DWORD PTR [rbx+0x78]
  4238fa:	mov    eax,0x8b007078
  4238ff:	jnp    0x423888
  423901:	cwde   
  423902:	adc    edx,DWORD PTR [rdi-0x768668c9]
  423908:	xchg   DWORD PTR [rdi+0x78],esi
  42390b:	(bad)  
  42390c:	ja     0x42390e
  42390e:	add    BYTE PTR [rax],al
  423910:	add    DWORD PTR [rbx+0x73933777],0xffffff8b
  423917:	mov    edi,DWORD PTR [rbx-0x7d]
  42391a:	add    DWORD PTR [rax+0x7000000],0xffffffb8
  423921:	mov    eax,DWORD PTR [rbx-0x7cc6c869]
  423927:	xchg   DWORD PTR [rdi+0x7b],esi
  42392a:	mov    DWORD PTR [rbx-0x78000000],eax
  423930:	mov    BYTE PTR [rax+0x37733b88],cl
  423936:	mov    eax,0xb878b798
  42393b:	mov    BYTE PTR [rax-0x770f900],dh
  423941:	mov    BYTE PTR [rax-0x67c84879],bh
  423947:	mov    eax,0xb888887b
  42394c:	xchg   DWORD PTR [rax],eax
  42394e:	or     edi,DWORD PTR [rax-0x78]
  423951:	clc    
  423952:	mov    BYTE PTR [rax+0x7b788b89],bh
  423958:	mov    BYTE PTR [rbx+0x8b8888],cl
  42395e:	add    BYTE PTR [rbx],cl
  423960:	mov    ecx,DWORD PTR [rax-0x48777708]
  423966:	xchg   DWORD PTR [rax-0x76747778],ecx
  42396c:	add    BYTE PTR [rax],al
  42396e:	add    BYTE PTR [rax],al
  423970:	add    BYTE PTR [rbx+0x8b8b78],cl
  423976:	or     edi,DWORD PTR [rax-0x78]
  423979:	mov    esi,DWORD PTR [rax+0x0]
  42397c:	add    BYTE PTR [rax],al
  42397e:	add    BYTE PTR [rax],al
  423980:	add    BYTE PTR [rax],al
  423982:	or     ecx,DWORD PTR [rax+0xb000070]
  423988:	jnp    0x4239fa
  42398a:	add    BYTE PTR [rax],al
  42398c:	add    BYTE PTR [rdi],al
  42398e:	inc    BYTE PTR [rax]
  423990:	add    DWORD PTR [rdi],esp
  423992:	inc    BYTE PTR [rax]
  423994:	add    DWORD PTR [rdi-0x2],esi
  423997:	add    BYTE PTR [rcx],al
  423999:	push   rdi
  42399a:	inc    BYTE PTR [rax]
  42399c:	add    DWORD PTR [rdi],eax
  42399e:	inc    BYTE PTR [rax]
  4239a0:	add    edi,edi
  4239a2:	inc    BYTE PTR [rax]
  4239a4:	add    DWORD PTR [rdi],eax
  4239a6:	clc    
  4239a7:	add    BYTE PTR [rcx],al
  4239a9:	(bad)  
  4239aa:	loopne 0x4239ac
  4239ac:	add    DWORD PTR [rdi-0x80],esi
  4239af:	add    BYTE PTR [rcx],al
  4239b1:	jbe    0x4239b3
  4239b3:	add    BYTE PTR [rcx],al
  4239b5:	add    al,0x0
  4239b7:	add    BYTE PTR [rcx],al
  4239b9:	cld    
  4239ba:	add    BYTE PTR [rax],al
  4239bc:	add    DWORD PTR [rax+rax*1],eax
  4239bf:	add    BYTE PTR [rcx],al
  4239c1:	and    al,0x0
  4239c3:	add    BYTE PTR [rcx],al
  4239c5:	je     0x4239c7
  4239c7:	add    BYTE PTR [rcx],al
  4239c9:	je     0x4239cb
  4239cb:	add    BYTE PTR [rdi],al
  4239cd:	add    al,0x0
  4239cf:	add    BYTE PTR [rdi],al
  4239d1:	cld    
  4239d2:	add    BYTE PTR [rax],al
  4239d4:	(bad)  
  4239d5:	cld    
  4239d6:	add    BYTE PTR [rax],al
  4239d8:	(bad)  
  4239d9:	cld    
  4239da:	add    BYTE PTR [rax],al
  4239dc:	(bad)  
  4239dd:	cld    
  4239de:	add    BYTE PTR [rax],al
  4239e0:	(bad)  
  4239e1:	clc    
  4239e2:	add    BYTE PTR [rax],al
  4239e4:	add    esp,eax
  4239e6:	add    BYTE PTR [rax],al
  4239e8:	add    eax,eax
  4239ea:	add    BYTE PTR [rax],al
  4239ec:	add    ah,bh
  4239ee:	add    BYTE PTR [rax],al
  4239f0:	(bad)  
  4239f1:	clc    
  4239f2:	add    BYTE PTR [rax],al
  4239f4:	add    esi,eax
  4239f6:	add    BYTE PTR [rax],al
  4239f8:	add    eax,esp
  4239fa:	add    BYTE PTR [rax],al
  4239fc:	add    al,ah
  4239fe:	add    BYTE PTR [rax],al
  423a00:	add    al,bh
  423a02:	add    BYTE PTR [rax],al
  423a04:	add    edi,edi
  423a06:	add    al,ah
  423a08:	(bad)  
  423a09:	jmp    rcx
  423a0b:	clc    
  423a0c:	jg     0x423a36
  423a0e:	add    BYTE PTR [rax],al
  423a10:	add    BYTE PTR [rax],dl
  423a12:	add    BYTE PTR [rax],al
  423a14:	add    BYTE PTR [rax],ah
  423a16:	add    BYTE PTR [rax],al
  423a18:	add    BYTE PTR [rcx],al
  423a1a:	add    BYTE PTR [rax+rax*1],al
  423a1d:	add    BYTE PTR [rax],al
  423a1f:	add    BYTE PTR [rax],al
  423a21:	add    BYTE PTR [rax],0x0
	...
  423a38:	add    BYTE PTR [rax],al
  423a3a:	add    BYTE PTR [rax+0x800000],al
  423a40:	add    BYTE PTR [rax],al
  423a42:	add    BYTE PTR [rax+0x8000],0x0
  423a49:	add    BYTE PTR [rax],0x80
  423a4c:	add    BYTE PTR [rax-0x7fffff80],al
  423a52:	add    BYTE PTR [rax-0x3f3f4000],0x0
  423a59:	add    BYTE PTR [rax],al
  423a5b:	inc    DWORD PTR [rax]
  423a5d:	add    bh,bh
  423a5f:	add    BYTE PTR [rax],al
  423a61:	add    bh,bh
  423a63:	inc    DWORD PTR [rax]
  423a65:	inc    DWORD PTR [rax]
  423a67:	add    BYTE PTR [rax],al
  423a69:	inc    DWORD PTR [rax]
  423a6b:	inc    DWORD PTR [rax]
  423a6d:	(bad)  
  423a6e:	inc    DWORD PTR [rax]
  423a70:	add    bh,bh
  423a72:	(bad)  
  423a73:	inc    DWORD PTR [rax]
  423a75:	xchg   DWORD PTR [rax+0x0],eax
  423a7b:	add    BYTE PTR [rax],al
  423a7d:	add    BYTE PTR [rax+0x23270700],0x22
  423a84:	add    al,bh
  423a86:	add    BYTE PTR [rax],0x73
  423a89:	jae    0x423aed
  423a8b:	xor    BYTE PTR ss:[rax],al
  423a8e:	add    BYTE PTR [rbx-0x7d],dh
  423a91:	jg     0x423ac9
  423a93:	(bad)  
  423a94:	and    BYTE PTR [rax-0x75487779],cl
  423a9a:	icebp  
  423a9b:	mul    DWORD PTR [rax]
  423a9d:	add    BYTE PTR [rbx+0x7f877388],0xf7
  423aa4:	and    al,bh
  423aa6:	xchg   DWORD PTR [rax-0x7007549],edi
  423aac:	xor    BYTE PTR [rax],al
  423aae:	or     BYTE PTR [rax-0x7777777d],cl
  423ab4:	movabs al,ds:0x70a7a777b7b87788
  423abd:	or     BYTE PTR [rax-0x74cc6c78],0x71
  423ac4:	add    al,bh
  423ac6:	mov    BYTE PTR [rbx+0x7b373333],al
  423acc:	jo     0x423ad5
  423ace:	jae    0x423ac1
  423ad0:	adc    DWORD PTR [rax],edi
  423ad2:	fwait
  423ad3:	(bad)  
  423ad4:	(bad)  
  423ad5:	add    BYTE PTR [rbx+0x37373173],cl
  423adb:	xchg   ebx,eax
  423adc:	jo     0x423ae6
  423ade:	mov    BYTE PTR [rbx-0x7784e48d],cl
  423ae4:	mov    bh,0x0
  423ae6:	mov    ecx,DWORD PTR [rax-0x4777f875]
  423aec:	jo     0x423aee
  423aee:	add    BYTE PTR [rbx+0x70b80070],cl
  423af4:	add    BYTE PTR [rdi],bl
  423af6:	inc    DWORD PTR [rax]
  423af8:	add    BYTE PTR [rsi+0x1],bl
  423afb:	add    BYTE PTR [rax],al
  423afd:	sbb    al,0x1
  423aff:	add    BYTE PTR [rax],al
  423b01:	lock add DWORD PTR [rax],eax
  423b04:	add    BYTE PTR [rax],al
  423b06:	add    DWORD PTR [rax],eax
  423b08:	add    BYTE PTR [rax+0x1],al
  423b0b:	add    BYTE PTR [rax],al
  423b0d:	add    BYTE PTR [rcx],al
  423b0f:	add    BYTE PTR [rax],al
  423b11:	loopne 0x423b14
  423b13:	add    BYTE PTR [rax],al
  423b15:	add    BYTE PTR [rcx],al
  423b17:	add    BYTE PTR [rax],al
  423b19:	rex add eax,DWORD PTR [rax]
  423b1c:	add    BYTE PTR [rax],al
  423b1e:	add    DWORD PTR [rax],eax
  423b20:	add    BYTE PTR [rax-0x40000000],al
  423b26:	add    DWORD PTR [rax],eax
  423b28:	add    BYTE PTR [rax-0x40000000],al
  423b2e:	add    DWORD PTR [rax],0xc7f100
  423b34:	add    BYTE PTR [rax],ch
  423b36:	add    BYTE PTR [rax],al
  423b38:	add    BYTE PTR [rax],ah
  423b3a:	add    BYTE PTR [rax],al
  423b3c:	add    BYTE PTR [rax+0x0],al
  423b3f:	add    BYTE PTR [rax],al
  423b41:	add    DWORD PTR [rax],eax
  423b43:	or     BYTE PTR [rax],al
  423b45:	add    BYTE PTR [rax],al
  423b47:	add    BYTE PTR [rax],al
  423b49:	add    BYTE PTR [rax+rax*1],al
	...
  423b54:	add    BYTE PTR [rax],al
  423b56:	add    DWORD PTR [rax],eax
  423b58:	add    BYTE PTR [rax],al
  423b5a:	add    DWORD PTR [rax],eax
  423b5c:	add    BYTE PTR [rax],al
  423b5e:	add    BYTE PTR [rax],al
  423b60:	add    BYTE PTR [rbx],dh
  423b62:	xor    esi,DWORD PTR [rbx]
  423b64:	add    BYTE PTR [rbx],dh
  423b66:	xor    ax,WORD PTR [rax]
  423b69:	add    BYTE PTR [rbx],dh
  423b6b:	data16 add BYTE PTR [rbx],dh
  423b6e:	xor    esp,DWORD PTR [rsi+0x0]
  423b71:	add    BYTE PTR [rsi+0x66],ah
  423b74:	add    BYTE PTR [rbx],dh
  423b76:	data16 data16 add BYTE PTR [rsi+0x66],ah
  423b7b:	data16 add BYTE PTR [rbx],dh
  423b7e:	cdq    
  423b7f:	xor    eax,DWORD PTR [rax]
  423b81:	xor    ebx,DWORD PTR [rcx-0x6699ff9a]
  423b87:	data16 add BYTE PTR [rsi-0x34],ah
  423b8b:	data16 add BYTE PTR [rax],al
  423b8e:	cwd    
  423b90:	add    BYTE PTR [rbx],dh
  423b92:	cwd    
  423b94:	add    BYTE PTR [rbx],dh
  423b96:	cdq    
  423b97:	cdq    
  423b98:	add    BYTE PTR [rsi-0x67],ah
  423b9b:	cdq    
  423b9c:	add    BYTE PTR [rsi-0x34],ah
  423b9f:	cdq    
  423ba0:	add    BYTE PTR [rbx],dh
  423ba2:	cdq    
  423ba3:	int3   
  423ba4:	add    BYTE PTR [rsi-0x67],ah
  423ba7:	int3   
  423ba8:	add    BYTE PTR [rsi-0x34],ah
  423bab:	int3   
  423bac:	add    BYTE PTR [rax-0x44ff665a],bh
  423bb2:	stos   BYTE PTR es:[rdi],al
  423bb3:	popf   
  423bb4:	add    BYTE PTR [rax-0x4bff5257],dl
  423bba:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  423bbb:	movabs ds:0x99cc9900b1bfd000,eax
  423bc4:	add    dl,bl
  423bc6:	leave  
  423bc7:	mov    ebx,0xbdcadc00
  423bcc:	add    BYTE PTR [rcx-0x66ff3367],bl
  423bd2:	int3   
  423bd3:	int3   
  423bd4:	add    BYTE PTR [rcx-0x3fff0034],bl
  423bda:	rol    al,0x0
  423bdd:	int3   
  423bde:	int3   
  423bdf:	int3   
  423be0:	add    al,al
  423be2:	fadd   st(0),st
  423be4:	add    bh,dl
  423be6:	xlat   BYTE PTR ds:[rbx]
  423be7:	xlat   BYTE PTR ds:[rbx]
  423be8:	add    ch,bl
  423bea:	fstp   st(5)
  423bec:	add    dh,ah
  423bee:	rol    esi,cl
  423bf0:	add    al,ch
  423bf2:	(bad)  
  423bf3:	enter  0xea00,0xd8
  423bf7:	retf   0xc600
  423bfa:	(bad)  
  423bfb:	out    dx,eax
  423bfc:	add    dh,dl
  423bfe:	out    0xe7,eax
  423c00:	add    ah,cl
  423c02:	(bad)  
  423c03:	inc    DWORD PTR [rax]
  423c05:	jrcxz  0x423bea
  423c07:	jrcxz  0x423c09
  423c09:	icebp  
  423c0a:	icebp  
  423c0b:	icebp  
  423c0c:	add    al,dh
  423c0e:	sti    
  423c0f:	inc    DWORD PTR [rax]
	...
  423f59:	(bad)  
  423f5a:	(bad)  
  423f5b:	inc    DWORD PTR [rax]
  423f5d:	and    al,0x1a
  423f5f:	adc    al,0x14
  423f61:	adc    al,0x0
	...
  423f6b:	add    BYTE PTR [rax],cl
  423f6d:	add    al,BYTE PTR [rdx]
  423f6f:	add    al,BYTE PTR [rdx]
  423f71:	add    al,BYTE PTR [rdx]
  423f73:	add    al,BYTE PTR [rdx]
  423f75:	add    al,BYTE PTR [rdx]
  423f77:	add    al,BYTE PTR [rdx]
  423f79:	add    al,BYTE PTR [rdx]
  423f7b:	add    al,BYTE PTR [rax]
  423f7d:	and    eax,0x15ff00ff
	...
  423f8a:	add    BYTE PTR [rax],al
  423f8c:	or     BYTE PTR [rdx],cl
  423f8e:	or     cl,BYTE PTR [rcx]
  423f90:	or     DWORD PTR [rcx],ecx
  423f92:	or     BYTE PTR [rax],cl
  423f94:	or     BYTE PTR [rax],cl
  423f96:	or     BYTE PTR [rax],cl
  423f98:	or     BYTE PTR [rax],cl
  423f9a:	or     BYTE PTR [rdx],al
  423f9c:	add    BYTE PTR [rsi],ah
  423f9e:	add    BYTE PTR [rax],al
  423fa0:	add    BYTE PTR [rdi],dl
	...
  423faa:	add    BYTE PTR [rax],al
  423fac:	or     BYTE PTR [rcx],ah
  423fae:	or     ecx,DWORD PTR [rdx]
  423fb0:	or     DWORD PTR [rdx],eax
  423fb2:	or     cl,BYTE PTR [rdx]
  423fb4:	or     DWORD PTR [rcx],ecx
  423fb6:	or     BYTE PTR [rcx],cl
  423fb8:	or     BYTE PTR [rcx],cl
  423fba:	or     BYTE PTR [rdx],al
  423fbc:	add    BYTE PTR [rsi],ah
  423fbe:	add    bh,bh
  423fc0:	add    BYTE PTR [rax+rax*1],dl
	...
  423fcb:	add    BYTE PTR [rax],cl
  423fcd:	and    DWORD PTR [rax],edx
  423fcf:	or     al,BYTE PTR [rdx]
  423fd1:	(bad)  
  423fd2:	add    cl,BYTE PTR [rcx]
  423fd4:	or     cl,BYTE PTR [rax]
  423fd6:	or     DWORD PTR [rax],ecx
  423fd8:	or     DWORD PTR [rax],ecx
  423fda:	or     BYTE PTR [rdx],al
  423fdc:	add    BYTE PTR [rsi],ah
  423fde:	sbb    bl,BYTE PTR es:[rax]
  423fe1:	adc    al,0x0
	...
  423feb:	add    BYTE PTR [rax],cl
  423fed:	and    DWORD PTR [rax],edx
  423fef:	add    ah,BYTE PTR [rbx]
  423ff1:	(bad)  
  423ff2:	(bad)  
  423ff3:	add    cl,BYTE PTR [rdx]
  423ff5:	or     DWORD PTR [rdi],eax
  423ff7:	add    cl,BYTE PTR [rcx]
  423ff9:	or     DWORD PTR [rax],ecx
  423ffb:	add    al,BYTE PTR [rax]
	...
  424009:	add    BYTE PTR [rax],al
  42400b:	add    BYTE PTR [rdx],cl
  42400d:	and    DWORD PTR [rcx],ebx
  42400f:	(bad)  
  424010:	jmp    FWORD PTR [rbx]
  424012:	and    BYTE PTR [rdi],bl
  424014:	add    al,BYTE PTR [rcx]
  424016:	and    BYTE PTR [rdi],bl
  424018:	or     BYTE PTR [rcx],cl
  42401a:	or     BYTE PTR [rdx],al
  42401c:	add    BYTE PTR [rdx+rbx*1],ah
  42401f:	adc    al,0x14
  424021:	adc    al,0x0
  424023:	add    BYTE PTR [rax],al
  424025:	add    BYTE PTR [rax],al
  424027:	add    BYTE PTR [rax],al
  424029:	add    BYTE PTR [rsp+rax*1],al
  42402c:	or     ah,BYTE PTR [rcx]
  42402e:	sbb    DWORD PTR [rax],edx
  424030:	(bad)  
  424031:	(bad)  
  424032:	jmp    QWORD PTR [rdx]
  424034:	(bad)  
  424035:	and    ah,BYTE PTR [rdx]
  424037:	(bad)  
  424038:	or     BYTE PTR [rcx],cl
  42403a:	or     BYTE PTR [rdx],al
  42403c:	add    BYTE PTR [rip+0x15ff00ff],ah        # 0x16414141
  424042:	add    BYTE PTR [rax],al
  424044:	add    BYTE PTR [rax],al
  424046:	add    BYTE PTR [rax],al
  424048:	or     eax,0x90f120d
  42404d:	and    DWORD PTR [rcx],ebx
  42404f:	adc    BYTE PTR [rbx],cl
  424051:	(bad)  
  424052:	(bad)  
  424053:	jmp    FWORD PTR [rbx]
  424055:	sub    ebp,DWORD PTR [rbx]
  424057:	and    BYTE PTR [rcx],cl
  424059:	or     cl,BYTE PTR [rax]
  42405b:	add    al,BYTE PTR [rax]
  42405d:	add    BYTE PTR es:[rax],al
  424060:	add    BYTE PTR [rdi],dl
  424062:	add    BYTE PTR [rax],al
  424064:	add    BYTE PTR [rax],al
  424066:	prefetch BYTE PTR [rax]
  424069:	sub    BYTE PTR [rdi],cl
  42406b:	adc    cl,BYTE PTR [rdx]
  42406d:	and    DWORD PTR [rcx],ebx
  42406f:	sbb    DWORD PTR [rax],edx
  424071:	or     bh,bh
  424073:	sub    edi,edi
  424075:	jmp    FWORD PTR [rbx]
  424077:	and    BYTE PTR [rdx],cl
  424079:	or     DWORD PTR [rax],ecx
  42407b:	add    al,BYTE PTR [rax]
  42407d:	add    BYTE PTR es:[rax],al
  424080:	add    BYTE PTR [rax+rax*1],dl
  424083:	add    BYTE PTR [rdi],cl
  424085:	movlps xmm5,QWORD PTR [rax]
  424088:	sub    BYTE PTR [rax],ch
  42408a:	adc    dl,BYTE PTR [rdx]
  42408c:	or     ah,BYTE PTR [rcx]
  42408e:	sbb    DWORD PTR [rcx],ebx
  424090:	or     al,BYTE PTR [rsi]
  424092:	jmp    FWORD PTR [rbx]
  424094:	jmp    FWORD PTR [rbx+rbp*1]
  424097:	and    cl,BYTE PTR [rdx]
  424099:	or     cl,BYTE PTR [rcx]
  42409b:	add    al,BYTE PTR [rax]
  42409d:	es sbb bl,BYTE PTR es:[rax]
  4240a1:	adc    al,0x0
  4240a3:	movlps xmm3,QWORD PTR [rip+0x28282c1d]        # 0x286a6cc7
  4240aa:	sbb    eax,0x19210a12
  4240af:	sbb    DWORD PTR [rax],edx
  4240b1:	(bad)  
  4240b2:	(bad)  
  4240b3:	(bad)  
  4240b4:	(bad)  
  4240b5:	(bad)  
  4240b6:	jmp    FWORD PTR [rdx]
  4240b8:	or     cl,BYTE PTR [rbx]
  4240ba:	or     DWORD PTR [rdx],eax
  4240bc:	add    BYTE PTR [rax],al
  4240be:	add    BYTE PTR [rax],al
  4240c0:	add    BYTE PTR [rax],al
  4240c2:	add    BYTE PTR [rdi],cl
  4240c4:	(bad)  
  4240c5:	adc    dl,BYTE PTR [rdx]
  4240c7:	sub    al,0x28
  4240c9:	sub    BYTE PTR [rdx],dl
  4240cb:	sbb    eax,0x1919210a
  4240d0:	adc    bh,bh
  4240d2:	(bad)  
  4240d3:	(bad)  
  4240d4:	(bad)  
  4240d5:	(bad)  
  4240d6:	(bad)  
  4240d7:	dec    DWORD PTR [rbx]
  4240d9:	or     cl,BYTE PTR [rcx]
  4240db:	add    al,BYTE PTR [rax]
  4240dd:	and    al,0x1a
  4240df:	adc    al,0x14
  4240e1:	adc    al,0x0
  4240e3:	nop    DWORD PTR [rip+0x28282c1d]        # 0x286a6d07
  4240ea:	sbb    eax,0x19210a12
  4240ef:	sbb    DWORD PTR [rcx],ebx
  4240f1:	sbb    DWORD PTR [rcx],ebx
  4240f3:	sbb    DWORD PTR [rcx],ebx
  4240f5:	sbb    DWORD PTR [rcx],ebx
  4240f7:	sbb    DWORD PTR [rcx],ebx
  4240f9:	or     ecx,DWORD PTR [rdx]
  4240fb:	add    al,BYTE PTR [rax]
  4240fd:	and    eax,0x15ff00ff
  424102:	add    BYTE PTR [rdi],cl
  424104:	(bad)  
  424105:	adc    bl,BYTE PTR [rip+0x121e282c]        # 0x12606937
  42410b:	sbb    eax,0x2121210a
  424110:	and    DWORD PTR [rcx],esp
  424112:	and    DWORD PTR [rcx],esp
  424114:	and    DWORD PTR [rcx],esp
  424116:	and    DWORD PTR [rcx],esp
  424118:	and    DWORD PTR [rcx],esp
  42411a:	or     eax,DWORD PTR [rdx]
  42411c:	add    BYTE PTR [rsi],ah
  42411e:	add    BYTE PTR [rax],al
  424120:	add    BYTE PTR [rdi],dl
  424122:	add    BYTE PTR [rdi],cl
  424124:	(bad)  
  424125:	sbb    eax,0x1d28281e
  42412a:	sbb    eax,0xa0a0a12
  42412f:	or     cl,BYTE PTR [rdx]
  424131:	or     cl,BYTE PTR [rdx]
  424133:	or     cl,BYTE PTR [rdx]
  424135:	or     BYTE PTR [rdx],cl
  424137:	or     BYTE PTR [rdx],cl
  424139:	or     BYTE PTR [rax],cl
  42413b:	or     BYTE PTR [rax],al
  42413d:	add    BYTE PTR es:[rax],al
  424140:	add    BYTE PTR [rax+rax*1],dl
  424143:	nop    DWORD PTR [rsi]
  424146:	sbb    eax,0x1e1d1e1d
  42414b:	adc    ebx,DWORD PTR [rip+0xd030612]        # 0xd454763
  424151:	(bad)  
  424152:	or     eax,0xd0d0d06
  424157:	or     eax,0x40d
  42415c:	add    BYTE PTR [rsi],ah
  42415e:	sbb    bl,BYTE PTR es:[rax]
  424161:	adc    al,0x0
  424163:	nop    DWORD PTR [rip+0x2c2c271e]        # 0x2c6e6888
  42416a:	sbb    eax,0x61d1d1e
  42416f:	add    eax,DWORD PTR [rsi]
  424171:	or     eax,0x60d0d06
  424176:	or     eax,0x40d0d
	...
  424183:	nop    DWORD PTR [rip+0x2c2c281e]        # 0x2c6e69a8
  42418a:	sbb    eax,0x61d1e1d
  42418f:	add    eax,DWORD PTR [rbx]
  424191:	add    ecx,DWORD PTR [rip+0xc060d0d]        # 0xc484ea4
  424197:	or     eax,0x40d
  42419c:	add    BYTE PTR [rax],al
  42419e:	add    BYTE PTR [rax],al
  4241a0:	add    BYTE PTR [rax],al
  4241a2:	add    BYTE PTR [rdi],cl
  4241a4:	sbb    eax,0x2c2c1d1e
  4241a9:	sub    BYTE PTR [rsi],bl
  4241ab:	(bad)  
  4241ac:	sbb    eax,0xf0f061d
  4241b1:	clts   
  4241b3:	add    eax,DWORD PTR [rbx]
  4241b5:	or     al,0x6
  4241b7:	or     eax,0x405
  4241bc:	add    BYTE PTR [rax],al
  4241be:	add    BYTE PTR [rax],al
  4241c0:	add    BYTE PTR [rax],al
  4241c2:	add    BYTE PTR [rdi],cl
  4241c4:	(bad)  
  4241c5:	(bad)  
  4241c6:	sbb    eax,0xe121228
  4241cb:	prefetchwt1 BYTE PTR [rcx]
  4241ce:	or     eax,0xf1d1d12
  4241d3:	(bad)  
  4241d4:	lsl    eax,WORD PTR [rbx]
  4241d7:	add    eax,DWORD PTR [rip+0x4]        # 0x4241e1
  4241dd:	add    BYTE PTR [rax],al
  4241df:	add    BYTE PTR [rax],al
  4241e1:	add    BYTE PTR [rax],al
  4241e3:	nop    DWORD PTR [rdx]
  4241e6:	adc    cl,BYTE PTR [rdi]
  4241e8:	sbb    eax,0x121e1d27
  4241ed:	adc    cl,BYTE PTR [rip+0x1d1d120e]        # 0x1d5f5401
  4241f3:	(bad)  
  4241f4:	sbb    eax,0x30f0f16
  4241f9:	add    al,0x0
  4241fb:	add    BYTE PTR [rax],al
  4241fd:	add    BYTE PTR [rax],al
  4241ff:	add    BYTE PTR [rax],al
  424201:	add    BYTE PTR [rdx],dl
  424203:	adc    dl,BYTE PTR [rdx]
  424205:	adc    ah,BYTE PTR [rdi]
  424207:	(bad)  
  424208:	(bad)  
  424209:	(bad)  
  42420a:	adc    dl,BYTE PTR [rdx]
  42420c:	adc    cl,BYTE PTR [rip+0x1212120d]        # 0x1254541f
  424212:	movlps xmm3,QWORD PTR [rip+0xf121d1e]        # 0xf545f37
  424219:	(bad)  
  42421a:	sldt   WORD PTR [rax]
  42421d:	add    BYTE PTR [rax],al
  42421f:	add    BYTE PTR [rdx],dl
  424221:	adc    ch,BYTE PTR [rcx]
  424223:	sub    BYTE PTR [rdi],ah
  424225:	sub    BYTE PTR [rip+0xd121212],bl        # 0xd54543d
  42422b:	or     eax,0x120d0d0d
  424230:	adc    dl,BYTE PTR [rdx]
  424232:	adc    dl,BYTE PTR [rdx]
  424234:	adc    cl,BYTE PTR [rdi]
  424236:	adc    bl,BYTE PTR [rsi]
  424238:	sbb    eax,0xf1612
  42423d:	add    BYTE PTR [rax],al
  42423f:	adc    dl,BYTE PTR [rdx]
  424241:	adc    dl,BYTE PTR [rdx]
  424243:	adc    dl,BYTE PTR [rdx]
  424245:	adc    dl,BYTE PTR [rdx]
  424247:	or     eax,0xd0d0d0d
  42424c:	or     eax,0x12120d0d
  424251:	adc    dl,BYTE PTR [rdx]
  424253:	adc    dl,BYTE PTR [rdx]
  424255:	adc    dl,BYTE PTR [rdx]
  424257:	movlps xmm1,QWORD PTR [rdi]
  42425a:	(bad)  
  42425b:	(bad)  
  42425c:	sldt   WORD PTR [rax]
  42425f:	add    BYTE PTR [rax],al
  424261:	add    BYTE PTR [rax],al
  424263:	sbb    al,0xf
  424265:	adc    cl,BYTE PTR [rsi]
  424267:	or     eax,0xd0d0d0d
  42426c:	or     eax,0x13120d0d
  424271:	adc    dl,BYTE PTR [rbx]
  424273:	adc    dl,BYTE PTR [rbx]
  424275:	adc    cl,BYTE PTR [rdi]
  424277:	adc    cl,BYTE PTR [rdi]
  424279:	adc    al,BYTE PTR [rax]
  42427b:	add    BYTE PTR [rax],al
  42427d:	add    BYTE PTR [rax],al
  42427f:	add    BYTE PTR [rax],al
  424281:	add    BYTE PTR [rdx],dl
  424283:	adc    ebx,DWORD PTR [rsi]
  424285:	sbb    eax,0xd0f1212
  42428a:	or     eax,0xd0d0d0d
  42428f:	adc    dl,BYTE PTR [rdx]
  424291:	adc    dl,BYTE PTR [rdx]
  424293:	adc    dl,BYTE PTR [rdx]
  424295:	adc    dl,BYTE PTR [rdx]
  424297:	adc    edx,DWORD PTR [rdx]
  424299:	adc    dl,BYTE PTR [rdx]
  42429b:	add    BYTE PTR [rax],al
  42429d:	add    BYTE PTR [rax],al
  42429f:	add    BYTE PTR [rax],al
  4242a1:	adc    ah,BYTE PTR [rdi]
  4242a3:	(bad)  
  4242a4:	(bad)  
  4242a5:	(bad)  
  4242a6:	sbb    eax,0xe0e121e
  4242ab:	(bad)  
  4242ac:	or     eax,0x13120d0d
  4242b1:	adc    dl,BYTE PTR [rdx]
  4242b3:	adc    edx,DWORD PTR [rdx]
  4242b5:	adc    dl,BYTE PTR [rbx]
  4242b7:	adc    bl,BYTE PTR [rip+0x12121d]        # 0x5454da
  4242bd:	add    BYTE PTR [rax],al
  4242bf:	add    BYTE PTR [rdx],dl
  4242c1:	(bad)  
  4242c2:	sub    DWORD PTR [rcx],ebp
  4242c4:	(bad)  
  4242c5:	(bad)  
  4242c6:	(bad)  
  4242c7:	sbb    eax,0x1212131d
  4242cc:	(bad)  
  4242cd:	(bad)  
  4242ce:	(bad)  
  4242cf:	adc    dl,BYTE PTR [rdx]
  4242d1:	adc    dl,BYTE PTR [rbx]
  4242d3:	adc    dl,BYTE PTR [rbx]
  4242d5:	(bad)  
  4242d6:	sbb    eax,0x1e1d1e1d
  4242db:	sbb    eax,0x12
  4242e0:	adc    dl,BYTE PTR [rdx]
  4242e2:	(bad)  
  4242e3:	(bad)  
  4242e4:	sub    DWORD PTR [rax],ebp
  4242e6:	sub    DWORD PTR [rdi],esp
  4242e8:	(bad)  
  4242e9:	(bad)  
  4242ea:	sbb    eax,0x12121213
  4242ef:	movlps QWORD PTR [rdx],xmm2
  4242f2:	sbb    eax,0x1e1d1d1d
  4242f7:	(bad)  
  4242f8:	(bad)  
  4242f9:	(bad)  
  4242fa:	(bad)  
  4242fb:	adc    dl,BYTE PTR [rdx]
  4242fd:	add    BYTE PTR [rax],al
  4242ff:	add    BYTE PTR [rax],al
  424301:	add    BYTE PTR [rdx],dl
  424303:	adc    dl,BYTE PTR [rdx]
  424305:	(bad)  
  424306:	(bad)  
  424307:	(bad)  
  424308:	(bad)  
  424309:	(bad)  
  42430a:	sbb    eax,0xf121d1e
  42430f:	adc    dl,BYTE PTR [rsi]
  424311:	(bad)  
  424312:	sbb    eax,0x27271e1e
  424317:	(bad)  
  424318:	adc    dl,BYTE PTR [rdx]
  42431a:	adc    al,BYTE PTR [rax]
	...
  424324:	add    BYTE PTR [rdx],dl
  424326:	adc    dl,BYTE PTR [rdx]
  424328:	(bad)  
  424329:	(bad)  
  42432a:	(bad)  
  42432b:	sbb    eax,0x12
  424330:	adc    dl,BYTE PTR [rdx]
  424332:	(bad)  
  424333:	(bad)  
  424334:	(bad)  
  424335:	(bad)  
  424336:	adc    dl,BYTE PTR [rdx]
	...
  424348:	adc    dl,BYTE PTR [rdx]
  42434a:	sbb    al,0x12
  42434c:	add    BYTE PTR [rax],al
  42434e:	add    BYTE PTR [rax],al
  424350:	add    BYTE PTR [rax],al
  424352:	adc    dl,BYTE PTR [rdx]
  424354:	adc    dl,BYTE PTR [rdx]
  424356:	add    BYTE PTR [rax],al
  424358:	add    BYTE PTR [rax],al
  42435a:	add    BYTE PTR [rax],al
  42435c:	add    BYTE PTR [rdi],al
  42435e:	inc    BYTE PTR [rax]
  424360:	add    DWORD PTR [rdi],esp
  424362:	inc    BYTE PTR [rax]
  424364:	add    DWORD PTR [rdi-0x2],esi
  424367:	add    BYTE PTR [rcx],al
  424369:	push   rdi
  42436a:	inc    BYTE PTR [rax]
  42436c:	add    DWORD PTR [rdi],eax
  42436e:	inc    BYTE PTR [rax]
  424370:	add    edi,edi
  424372:	inc    BYTE PTR [rax]
  424374:	add    DWORD PTR [rdi],eax
  424376:	clc    
  424377:	add    BYTE PTR [rcx],al
  424379:	(bad)  
  42437a:	loopne 0x42437c
  42437c:	add    DWORD PTR [rdi-0x80],esi
  42437f:	add    BYTE PTR [rcx],al
  424381:	jbe    0x424383
  424383:	add    BYTE PTR [rcx],al
  424385:	add    al,0x0
  424387:	add    BYTE PTR [rcx],al
  424389:	cld    
  42438a:	add    BYTE PTR [rax],al
  42438c:	add    DWORD PTR [rax+rax*1],eax
  42438f:	add    BYTE PTR [rcx],al
  424391:	and    al,0x0
  424393:	add    BYTE PTR [rcx],al
  424395:	je     0x424397
  424397:	add    BYTE PTR [rcx],al
  424399:	je     0x42439b
  42439b:	add    BYTE PTR [rdi],al
  42439d:	add    al,0x0
  42439f:	add    BYTE PTR [rdi],al
  4243a1:	cld    
  4243a2:	add    BYTE PTR [rax],al
  4243a4:	(bad)  
  4243a5:	cld    
  4243a6:	add    BYTE PTR [rax],al
  4243a8:	(bad)  
  4243a9:	cld    
  4243aa:	add    BYTE PTR [rax],al
  4243ac:	(bad)  
  4243ad:	cld    
  4243ae:	add    BYTE PTR [rax],al
  4243b0:	(bad)  
  4243b1:	clc    
  4243b2:	add    BYTE PTR [rax],al
  4243b4:	add    esp,eax
  4243b6:	add    BYTE PTR [rax],al
  4243b8:	add    eax,eax
  4243ba:	add    BYTE PTR [rax],al
  4243bc:	add    ah,bh
  4243be:	add    BYTE PTR [rax],al
  4243c0:	(bad)  
  4243c1:	clc    
  4243c2:	add    BYTE PTR [rax],al
  4243c4:	add    esi,eax
  4243c6:	add    BYTE PTR [rax],al
  4243c8:	add    eax,esp
  4243ca:	add    BYTE PTR [rax],al
  4243cc:	add    al,ah
  4243ce:	add    BYTE PTR [rax],al
  4243d0:	add    al,bh
  4243d2:	add    BYTE PTR [rax],al
  4243d4:	add    edi,edi
  4243d6:	add    al,ah
  4243d8:	(bad)  
  4243d9:	jmp    rcx
  4243db:	clc    
  4243dc:	jg     0x424406
  4243de:	add    BYTE PTR [rax],al
  4243e0:	add    BYTE PTR [rax],dl
  4243e2:	add    BYTE PTR [rax],al
  4243e4:	add    BYTE PTR [rax],ah
  4243e6:	add    BYTE PTR [rax],al
  4243e8:	add    BYTE PTR [rcx],al
  4243ea:	add    BYTE PTR [rax],cl
  4243ec:	add    BYTE PTR [rax],al
  4243ee:	add    BYTE PTR [rax],al
  4243f0:	add    BYTE PTR [rax],al
  4243f2:	add    DWORD PTR [rax],eax
	...
  4243fc:	add    BYTE PTR [rax],al
  4243fe:	add    DWORD PTR [rax],eax
  424400:	add    BYTE PTR [rax],al
  424402:	add    DWORD PTR [rax],eax
  424404:	add    BYTE PTR [rax],al
  424406:	add    BYTE PTR [rax],al
  424408:	add    BYTE PTR [rax+rdx*2],cl
  42440b:	sbb    al,BYTE PTR [rax]
  42440d:	sbb    ah,BYTE PTR [rbx+0x2a]
  424410:	add    BYTE PTR [rdx+rsi*2],al
  424413:	and    eax,0x2a7d0c00
  424418:	add    BYTE PTR [rdx],dl
  42441a:	jg     0x42444d
  42441c:	add    BYTE PTR [rcx],ah
  42441e:	ins    BYTE PTR es:[rdi],dx
  42441f:	xor    BYTE PTR [rax],al
  424421:	(bad)  
  424422:	gs cmp al,0x0
  424425:	xor    esp,DWORD PTR [rdx+0x3f]
  424428:	add    BYTE PTR [rax],ch
  42442a:	je     0x424462
  42442c:	add    BYTE PTR [rdx],ch
  42442e:	je     0x424468
  424430:	add    BYTE PTR [rax],al
  424432:	sbb    al,0x4b
  424434:	add    BYTE PTR [rax],al
  424436:	and    DWORD PTR [rax+rax*1+0x7],edx
  42443a:	es push rsp
  42443c:	add    BYTE PTR [rax],al
  42443e:	(bad)  
  42443f:	pop    rdx
  424440:	add    BYTE PTR [rax],al
  424442:	sub    DWORD PTR [rdx+0x0],ebx
  424445:	add    edi,DWORD PTR [rax+rsi*2]
  424448:	add    BYTE PTR [rip+0x35004076],ch        # 0x354284c4
  42444e:	jbe    0x424495
  424450:	add    BYTE PTR [rax],al
  424452:	rex.B outs dx,DWORD PTR ds:[rsi]
  424454:	add    BYTE PTR [rbx],al
  424456:	rex.X jne 0x424459
  424459:	or     eax,0x14002d82
  42445e:	xchg   BYTE PTR [rip+0x35801a00],dh        # 0x35c25e64
  424464:	add    BYTE PTR [rdx],bl
  424466:	mov    DWORD PTR [rdi],esi
  424468:	add    BYTE PTR [rip+0x34003f8e],ah        # 0x344283fc
  42446e:	add    DWORD PTR [rax+0x0],0x38
  424472:	mov    WORD PTR [rbp+0x0],es
  424475:	(bad)  
  424476:	or     DWORD PTR [rax+0x0],0x45
  42447a:	mov    dl,BYTE PTR [rdi+0x0]
  42447d:	push   rdx
  42447e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  42447f:	push   0x0
  424481:	pop    rdx
  424482:	mov    dh,0x6b
  424484:	add    BYTE PTR [rcx-0x4a],bl
  424487:	outs   dx,BYTE PTR ds:[rsi]
  424488:	add    BYTE PTR [rcx+rbp*4+0x68],ah
  42448c:	add    BYTE PTR [rcx-0x40],ah
  42448f:	js     0x424491
  424491:	or     BYTE PTR [rdi-0x77],dl
  424494:	add    BYTE PTR [rip+0xe008a5c],cl        # 0xe42cef6
  42449a:	pop    rsi
  42449b:	mov    es,WORD PTR [rax]
  42449d:	sbb    edx,DWORD PTR [rbp-0x7c]
  4244a0:	add    BYTE PTR [rdi],dl
  4244a2:	(bad)  
  4244a3:	pop    QWORD PTR [rax]
  4244a5:	adc    BYTE PTR [rcx-0x70],ah
  4244a8:	add    BYTE PTR [rsp+riz*2],dl
  4244ab:	xchg   edi,eax
  4244ac:	add    BYTE PTR [rbx],dl
  4244ae:	imul   ebx,DWORD PTR [rsi-0x7098d100],0x9d722200
  4244b8:	add    BYTE PTR [rdx],ah
  4244ba:	ja     0x424463
  4244bc:	add    BYTE PTR [rdx],ch
  4244be:	js     0x424464
  4244c0:	add    BYTE PTR [rdi],dh
  4244c2:	jnp    0x42446b
  4244c4:	add    BYTE PTR [rax+0x75],al
  4244c7:	cdq    
  4244c8:	add    BYTE PTR [rcx+rax*4],ch
  4244cb:	scas   eax,DWORD PTR es:[rdi]
  4244cc:	add    BYTE PTR [rip+0x2a00b181],ch        # 0x2a42f653
  4244d2:	xor    DWORD PTR [rbp-0x457bde00],0xb9882d00
  4244dc:	add    BYTE PTR [rip+0x3400bf8d],ch        # 0x3443046f
  4244e2:	mov    bh,BYTE PTR [rcx-0x4372c500]
  4244e8:	add    BYTE PTR [rbp+rsi*4-0x75],bh
  4244ec:	add    BYTE PTR [rax-0x80],cl
  4244ef:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  4244f0:	add    BYTE PTR [rbp-0x7d],al
  4244f3:	stos   DWORD PTR es:[rdi],eax
  4244f4:	add    BYTE PTR [rbx-0x78],cl
  4244f7:	lods   al,BYTE PTR ds:[rsi]
  4244f8:	add    BYTE PTR [rcx-0x78],al
  4244fb:	mov    cl,0x0
  4244fd:	rex.RB mov ?,WORD PTR [r14-0x446cba00]
  424504:	add    BYTE PTR [rdi-0x6b],al
  424507:	mov    ebp,0xbf9a5500
  42450c:	add    BYTE PTR [rax-0x68],ch
  42450f:	mov    dl,0x0
  424511:	jp     0x4244e2
  424513:	mov    WORD PTR [rax],es
  424515:	xor    al,0x8f
  424517:	rol    DWORD PTR [rax],0x33
  42451a:	xchg   edx,eax
  42451b:	(bad)
  42451e:	xchg   ebp,eax
  42451f:	(bad)  
  424520:	add    BYTE PTR [rbx-0x67],al
  424523:	mov    DWORD PTR [rax],0xc1984b
  424529:	rex.B (bad) 
  42452b:	enter  0x5200,0x9a
  42452f:	ret    
  424530:	add    BYTE PTR [rbp-0x63],dl
  424533:	(bad)  
  424534:	add    BYTE PTR [rdi-0x67],bl
  424537:	rol    DWORD PTR [rax],0x5b
  42453a:	pushf  
  42453b:	rol    DWORD PTR [rax],0x59
  42453e:	lahf   
  42453f:	mov    BYTE PTR [rax],0x56
  424542:	pushf  
  424543:	retf   
  424544:	add    BYTE PTR [rax-0x60],dl
  424547:	leave  
  424548:	add    BYTE PTR [rcx-0x5e],dl
  42454b:	int    0x0
  42454d:	pop    rbx
  42454e:	movabs ds:0xa24b00cda75d00ca,eax
  424557:	rol    BYTE PTR [rax],cl
  424559:	pop    rbx
  42455a:	movabs al,ds:0xa66100d2a45900d0
  424563:	retf   0x6100
  424566:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  424567:	int    0x0
  424569:	ins    BYTE PTR es:[rdi],dx
  42456a:	stos   DWORD PTR es:[rdi],eax
  42456b:	int3   
  42456c:	add    BYTE PTR [rax-0x58],bh
  42456f:	leave  
  424570:	add    BYTE PTR [rbp-0x52],ah
  424573:	(bad)  
  424574:	add    BYTE PTR [rdi-0x53],ch
  424577:	rol    BYTE PTR [rax],1
  424579:	jae    0x42452f
  42457b:	fiadd  DWORD PTR [rax]
  42457d:	js     0x424539
  42457f:	fild   WORD PTR [rax]
  424581:	gs mov bh,0xe1
  424584:	add    BYTE PTR [rdx-0x47],ch
  424587:	jrcxz  0x424589
  424589:	jns    0x424548
  42458b:	loop   0x42458d
  42458d:	jne    0x424550
  42458f:	call   0xffffffffeb05bd94
  424594:	add    BYTE PTR [rsp+rsi*4-0x5847ff6b],cl
  42459b:	(bad)  
  42459c:	add    BYTE PTR [rbp-0x6dff6f23],al
  4245a2:	jrcxz  0x424540
  4245a4:	add    BYTE PTR [rdi-0x61ff6119],dl
  4245aa:	xlat   BYTE PTR ds:[rbx]
  4245ab:	lods   al,BYTE PTR ds:[rsi]
  4245ac:	add    BYTE PTR [rbx-0x5eff5c1b],bl
  4245b2:	out    0xa7,eax
  4245b4:	add    BYTE PTR [rax-0x55ff5817],ah
  4245ba:	out    dx,al
  4245bb:	mov    al,0x0
  4245bd:	mov    ebx,0x8500b4f6
  4245c2:	mov    edi,0xc08a00e0
  4245c7:	fld    QWORD PTR [rax]
  4245c9:	mov    esp,0x8000c1fa
  4245ce:	ret    
  4245cf:	out    0x0,eax
  4245d1:	pop    rbp
  4245d3:	in     al,0x0
  4245d5:	add    edi,0xcd8f00ec
  4245db:	in     al,dx
  4245dc:	add    BYTE PTR [rbx-0x6eff1536],dl
  4245e2:	(bad)  
  4245e3:	out    dx,eax
  4245e4:	add    BYTE PTR [rcx-0x60ff0c2e],bl
  4245ea:	(bad)  
  4245ec:	add    BYTE PTR [rdi-0x45ff192d],ch
  4245f2:	fldl2t 
  4245f4:	add    BYTE PTR [rax-0x5cff0f2d],ah
  4245fa:	fdiv   st,st(3)
  4245fc:	add    BYTE PTR [rdi-0x42ff0e22],dh
  424602:	in     eax,0xfc
  424604:	add    bl,ch
  424606:	fxch   st(3)
  424608:	add    al,cl
  42460a:	out    dx,eax
  42460b:	inc    DWORD PTR [rax]
  42460d:	shr    eax,1
  42460f:	repz add cl,dh
  424612:	push   rdi
  424614:	add    ch,dh
  424616:	(bad)  
  424617:	stc    
	...
  424800:	add    bh,bh
  424802:	(bad)  
  424803:	inc    DWORD PTR [rax]
  424805:	gs gs add BYTE PTR gs:[rax],al
	...
  424812:	add    BYTE PTR [rax],al
  424814:	add    BYTE PTR [rax+0x6500],al
  42481a:	add    BYTE PTR [rax],al
  42481c:	(bad)  
  42481d:	sbb    ebx,DWORD PTR [rdx]
  42481f:	or     DWORD PTR [rdx],ecx
  424821:	(bad)  
  424822:	add    al,BYTE PTR [rcx]
  424824:	add    BYTE PTR [rax+0x6580],al
  42482a:	add    BYTE PTR [rsi+rbx*1],bh
  42482d:	and    dl,BYTE PTR [rdx]
  42482f:	or     BYTE PTR [rax],bl
  424831:	(bad)  
  424832:	add    eax,0x3
  424837:	add    BYTE PTR [rax],al
  424839:	cmp    al,0x3c
  42483b:	ds (bad) 
  42483d:	and    BYTE PTR [rbx+0x1d110708],al
  424843:	adc    eax,0x65656500
  424848:	cmp    al,0x70
  42484a:	(bad)  
  42484b:	rex.WRXB (bad) 
  42484d:	data16 and BYTE PTR [rbx+0x4398308],al
  424854:	add    BYTE PTR [rax+0x733f6500],al
  42485a:	jp     0x4248b1
  42485c:	(bad)  
  42485d:	and    BYTE PTR [eax],ah
  424860:	(bad)  
  424861:	jmp    QWORD PTR [rdi+rdx*1+0x0]
  424865:	add    BYTE PTR [rax+0x5b614b65],0x55
  42486c:	(bad)  
  42486d:	push   0xffffffff84838343
  424872:	imul   ebx,DWORD PTR [rcx],0x0
  424878:	push   rdx
  424879:	jne    0x4248f9
  42487b:	pop    rsi
  42487c:	(bad)  
  42487d:	outs   dx,BYTE PTR ds:[rsi]
  42487e:	jno    0x4248ed
  424880:	imul   ebp,DWORD PTR [rdx+0x6c],0x20
  424884:	add    BYTE PTR [rbp+0x65],ah
  424887:	gs push rdx
  424889:	jge    0x424906
  42488b:	pop    rax
  42488c:	push   rax
  42488d:	and    DWORD PTR [rcx],esp
  42488f:	and    DWORD PTR [rcx],esp
  424891:	and    DWORD PTR [rcx],esp
  424893:	sbb    al,0x0
  424895:	add    BYTE PTR [rax],0x65
  424898:	jnp    0x4248f3
  42489a:	pop    rsp
  42489b:	rex.W and al,0x13
  42489e:	sub    al,0x4e
  4248a0:	sub    ecx,DWORD PTR [rip+0xffffffff80800000]        # 0xffffffff80c248a7
  4248a7:	gs jnp 0x424925
  4248aa:	cmp    esp,DWORD PTR [rsi]
  4248ac:	adc    BYTE PTR [rbx],ah
  4248ae:	xor    eax,0x4e583f31
  4248b3:	cmp    al,BYTE PTR [rax]
  4248b5:	add    BYTE PTR [rdx+0x3c],al
  4248b8:	(bad)  
  4248b9:	jnp    0x4248c8
  4248bb:	or     ecx,DWORD PTR [rsi]
  4248bd:	and    al,0x49
  4248bf:	rex.RX (bad) 
  4248c1:	sub    eax,0x3a302e
  4248c6:	add    BYTE PTR [rdx+0x5d],bl
  4248c9:	cmp    BYTE PTR [rcx],ch
  4248cb:	adc    al,0xf
  4248cd:	sub    DWORD PTR [rdi+0x32],eax
  4248d0:	xor    dh,BYTE PTR [rsi*1+0x5a00003d]
  4248d7:	jg     0x42485a
  4248d9:	jns    0x42493a
  4248db:	sub    r12b,BYTE PTR [r15]
  4248de:	xor    DWORD PTR [rsp+rdx*2+0x60],eax
  4248e2:	je     0x424956
  4248e4:	rex.WRX add BYTE PTR [rax],r8b
  4248e7:	pop    rdx
  4248e8:	pop    rdx
  4248e9:	jl     0x424963
  4248eb:	movsxd edx,DWORD PTR [rax+0x0]
  4248ee:	rex.WXB (bad) 
  4248f0:	ja     0x424969
  4248f2:	pop    rdx
  4248f3:	pop    rdx
  4248f4:	add    BYTE PTR [rax],al
  4248f6:	add    BYTE PTR [rax],al
  4248f8:	add    BYTE PTR [rdx+0x5a],bl
  4248fb:	pop    rdx
  4248fc:	add    BYTE PTR [rax],al
  4248fe:	add    BYTE PTR [rdx+0x6f],bl
  424901:	pop    rdx
  424902:	add    BYTE PTR [rax],al
  424904:	add    BYTE PTR [rdi],bl
  424906:	inc    DWORD PTR [rax]
  424908:	add    BYTE PTR [rsi+0x1],bl
  42490b:	add    BYTE PTR [rax],al
  42490d:	sbb    al,0x1
  42490f:	add    BYTE PTR [rax],al
  424911:	lock add DWORD PTR [rax],eax
  424914:	add    BYTE PTR [rax],al
  424916:	add    DWORD PTR [rax],eax
  424918:	add    BYTE PTR [rax+0x1],al
  42491b:	add    BYTE PTR [rax],al
  42491d:	add    BYTE PTR [rcx],al
  42491f:	add    BYTE PTR [rax],al
  424921:	loopne 0x424924
  424923:	add    BYTE PTR [rax],al
  424925:	add    BYTE PTR [rcx],al
  424927:	add    BYTE PTR [rax],al
  424929:	rex add eax,DWORD PTR [rax]
  42492c:	add    BYTE PTR [rax],al
  42492e:	add    DWORD PTR [rax],eax
  424930:	add    BYTE PTR [rax-0x40000000],al
  424936:	add    DWORD PTR [rax],eax
  424938:	add    BYTE PTR [rax-0x40000000],al
  42493e:	add    DWORD PTR [rax],0xc7f100
  424944:	add    BYTE PTR [rax],ch
  424946:	add    BYTE PTR [rax],al
  424948:	add    BYTE PTR [rax],ah
  42494a:	add    BYTE PTR [rax],al
  42494c:	add    BYTE PTR [rax+0x0],al
  42494f:	add    BYTE PTR [rax],al
  424951:	add    DWORD PTR [rax],eax
  424953:	and    BYTE PTR [rax],al
  424955:	add    BYTE PTR [rax],al
  424957:	add    BYTE PTR [rax],al
  424959:	adc    BYTE PTR [rax],0x0
	...
  42496c:	add    bl,bl
  42496e:	shr    DWORD PTR [rsi-0x614d344f],0xb1
  424975:	mov    eax,0xb8ff9aa7
  42497a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  42497b:	(bad)  
  42497c:	call   FWORD PTR [rcx+0xb16d80]
	...
  4249a6:	add    BYTE PTR [rax],al
  4249a8:	add    BYTE PTR [rbx],dh
  4249aa:	cdq    
  4249ab:	xor    edi,edi
  4249ad:	xor    esp,DWORD PTR [rsi+0x33]
  4249b0:	push   QWORD PTR [rbx]
  4249b2:	xor    di,di
  4249b5:	xor    esp,DWORD PTR [rsi+0x33]
  4249b8:	push   QWORD PTR [rbx]
  4249ba:	xor    di,di
  4249bd:	xor    esp,DWORD PTR [rsi+0x33]
  4249c0:	push   QWORD PTR [rbx]
  4249c2:	xor    di,di
  4249c5:	xor    esp,DWORD PTR [rsi+0x33]
  4249c8:	push   QWORD PTR [rbx]
  4249ca:	xor    di,di
  4249cd:	xor    esp,DWORD PTR [rsi+0x33]
  4249d0:	push   QWORD PTR [rbx]
  4249d2:	xor    di,di
  4249d5:	xor    esp,DWORD PTR [rsi+0x33]
  4249d8:	push   QWORD PTR [rbx]
  4249da:	xor    di,di
  4249dd:	xor    esp,DWORD PTR [rsi+0x33]
  4249e0:	push   QWORD PTR [rbx]
  4249e2:	xor    di,di
  4249e5:	xor    esp,DWORD PTR [rsi+0x33]
  4249e8:	inc    DWORD PTR [rax]
  4249ea:	add    BYTE PTR [rax],al
  4249ec:	add    bh,bl
  4249ee:	(bad)  
  4249ef:	mov    cl,0xb1
  4249f1:	(bad)  
  4249f2:	(bad)  
  4249f3:	(bad)  
  4249f4:	inc    DWORD PTR [rax]
  4249f6:	add    BYTE PTR [rax],al
  4249f8:	add    bh,bh
  4249fa:	(bad)  
  4249fb:	(bad)  
  4249fc:	call   FWORD PTR [rsi+0xb17285]
	...
  424a26:	add    BYTE PTR [rax],al
  424a28:	add    BYTE PTR [rbx],dh
  424a2a:	cdq    
  424a2b:	xor    edi,edi
  424a2d:	cwd    
  424a2f:	jmp    WORD PTR [rsi-0x67]
  424a33:	push   WORD PTR [rbx]
  424a36:	cdq    
  424a37:	push   WORD PTR [rbx]
  424a3a:	cdq    
  424a3b:	push   WORD PTR [rbx]
  424a3e:	cdq    
  424a3f:	push   WORD PTR [rbx]
  424a42:	cdq    
  424a43:	xor    edi,edi
  424a45:	xor    ebx,DWORD PTR [rcx-0x66cc00cd]
  424a4b:	xor    edi,edi
  424a4d:	xor    ebx,DWORD PTR [rcx-0x66cc00cd]
  424a53:	xor    edi,edi
  424a55:	xor    ebx,DWORD PTR [rcx-0x66cc00cd]
  424a5b:	xor    edi,edi
  424a5d:	xor    ebx,DWORD PTR [rcx-0x66cc00cd]
  424a63:	xor    edi,edi
  424a65:	xor    esp,DWORD PTR [rsi+0x33]
  424a68:	inc    DWORD PTR [rax]
  424a6a:	add    BYTE PTR [rax],al
  424a6c:	add    dl,ah
  424a6e:	enter  0xb1b4,0x0
	...
  424a7a:	add    BYTE PTR [rax],al
  424a7c:	add    BYTE PTR [rsi+0xb57e7f],dl
	...
  424aa6:	add    BYTE PTR [rax],al
  424aa8:	add    BYTE PTR [rbx],dh
  424aaa:	cdq    
  424aab:	xor    edi,edi
  424aad:	rcr    ah,0xc0
  424ab0:	jmp    QWORD PTR [rsi-0x34]
  424ab3:	jmp    WORD PTR [rsi-0x67]
  424ab7:	push   WORD PTR [rbx]
  424aba:	cdq    
  424abb:	push   WORD PTR [rbx]
  424abe:	xor    di,di
  424ac1:	cwd    
  424ac3:	jmp    WORD PTR [rsi-0x67]
  424ac7:	push   WORD PTR [rbx]
  424aca:	cdq    
  424acb:	push   WORD PTR [rbx]
  424ace:	cdq    
  424acf:	push   WORD PTR [rbx]
  424ad2:	cdq    
  424ad3:	xor    edi,edi
  424ad5:	xor    ebx,DWORD PTR [rcx-0x66cc009a]
  424adb:	xor    edi,edi
  424add:	xor    ebx,DWORD PTR [rcx-0x66cc009a]
  424ae3:	xor    edi,edi
  424ae5:	xor    esp,DWORD PTR [rsi+0x33]
  424ae8:	inc    DWORD PTR [rax]
  424aea:	add    BYTE PTR [rax],al
  424aec:	add    bl,ch
  424aee:	fxch   st(3)
  424af0:	inc    DWORD PTR [rax]
  424af2:	add    BYTE PTR [rax],al
  424af4:	add    bh,bh
  424af6:	(bad)  
  424af7:	(bad)  
  424af8:	inc    DWORD PTR [rax]
  424afa:	add    BYTE PTR [rax],al
  424afc:	add    BYTE PTR [rax+0xff9aa7],bh
	...
  424b26:	add    BYTE PTR [rax],al
  424b28:	add    BYTE PTR [rbx],dh
  424b2a:	cdq    
  424b2b:	xor    edi,edi
  424b2d:	rcr    ah,0xc0
  424b30:	jmp    QWORD PTR [rsi-0x34]
  424b33:	cdq    
  424b34:	jmp    QWORD PTR [rsi-0x67]
  424b37:	push   WORD PTR [rbx]
  424b3a:	xor    di,di
  424b3d:	rol    al,0xc0
  424b40:	push   QWORD PTR [rbx]
  424b42:	xor    di,di
  424b45:	xor    ebx,DWORD PTR [rcx-0x6699009a]
  424b4b:	push   WORD PTR [rbx]
  424b4e:	cdq    
  424b4f:	xor    edi,edi
  424b51:	xor    ebx,DWORD PTR [rcx-0x66cc009a]
  424b57:	xor    edi,edi
  424b59:	xor    ebx,DWORD PTR [rcx-0x66cc009a]
  424b5f:	xor    edi,edi
  424b61:	xor    ebx,DWORD PTR [rcx+0x6633ff33]
  424b67:	xor    edi,edi
  424b69:	add    BYTE PTR [rax],al
  424b6b:	add    BYTE PTR [rax],al
  424b6d:	jmp    0x424b48
  424b6f:	retf   
  424b70:	(bad)  
  424b71:	jmp    0x424b4c
  424b73:	retf   
  424b74:	dec    esi
  424b76:	mov    ah,0xa1
  424b78:	mov    cl,0xbc
  424b7a:	movabs ds:0xff9aa7b8b190,eax
	...
  424ba7:	add    BYTE PTR [rax],al
  424ba9:	xor    ebx,DWORD PTR [rcx-0x233f00cd]
  424baf:	sar    bh,0x66
  424bb2:	int3   
  424bb3:	cdq    
  424bb4:	push   QWORD PTR [rbx]
  424bb6:	xor    di,di
  424bb9:	fstp   st(5)
  424bbb:	(bad)  
  424bbd:	rol    al,0xc0
  424bc0:	inc    eax
  424bc2:	rol    al,0xff
  424bc5:	xor    esp,DWORD PTR [rsi+0x33]
  424bc8:	jmp    QWORD PTR [rsi-0x67]
  424bcb:	push   WORD PTR [rbx]
  424bce:	cdq    
  424bcf:	jmp    WORD PTR [rsi+0x66]
  424bd3:	push   WORD PTR [rbx]
  424bd6:	xor    di,di
  424bd9:	xor    ebx,DWORD PTR [rcx-0x66cc009a]
  424bdf:	push   WORD PTR [rbx]
  424be2:	cdq    
  424be3:	xor    edi,edi
  424be5:	xor    esp,DWORD PTR [rsi+0x33]
  424be8:	inc    DWORD PTR [rax]
	...
  424c26:	add    BYTE PTR [rax],al
  424c28:	add    BYTE PTR [rsi-0x67],ah
  424c2b:	inc    ax
  424c2e:	fadd   st(0),st
  424c30:	call   FWORD PTR [rcx-0x6634]
  424c36:	(bad)  
  424c37:	(bad)  
  424c38:	(bad)  
  424c39:	(bad)  
  424c3a:	(bad)  
  424c3b:	(bad)  
  424c3c:	push   rcx
  424c3e:	icebp  
  424c3f:	icebp  
  424c40:	dec    esp
  424c42:	int3   
  424c43:	int3   
  424c44:	inc    eax
  424c46:	rol    al,0xff
  424c49:	xor    esp,DWORD PTR [rsi+0x33]
  424c4c:	push   QWORD PTR [rbx]
  424c4e:	xor    esi,DWORD PTR [rbx]
  424c50:	dec    esp
  424c52:	int3   
  424c53:	int3   
  424c54:	inc    eax
  424c56:	rol    al,0xff
  424c59:	xor    ebx,DWORD PTR [rcx-0x66cc00cd]
  424c5f:	push   WORD PTR [rbx]
  424c62:	cdq    
  424c63:	xor    edi,edi
  424c65:	xor    esp,DWORD PTR [rsi+0x33]
  424c68:	inc    DWORD PTR [rax]
  424c6a:	add    BYTE PTR [rax],al
  424c6c:	add    bl,bl
  424c6e:	shr    DWORD PTR [rsi-0x614d344f],0xb1
  424c75:	mov    eax,0xb8ff9aa7
  424c7a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  424c7b:	(bad)  
  424c7c:	call   FWORD PTR [rcx+0xb16d80]
	...
  424c9e:	add    BYTE PTR [rax],al
  424ca0:	add    BYTE PTR [rbx],dh
  424ca2:	xor    esp,DWORD PTR [rsi-0x1]
  424ca5:	xor    esi,DWORD PTR [rbx]
  424ca7:	jmp    WORD PTR [rsi-0x67]
  424cab:	inc    ax
  424cae:	fadd   st(0),st
  424cb0:	call   FWORD PTR [rcx+0x66ff99cc]
  424cb6:	int3   
  424cb7:	cdq    
  424cb8:	(bad)  
  424cb9:	(bad)  
  424cba:	(bad)  
  424cbb:	(bad)  
  424cbc:	(bad)  
  424cbd:	(bad)  
  424cbe:	(bad)  
  424cbf:	(bad)  
  424cc0:	(bad)  
  424cc1:	(bad)  
  424cc2:	(bad)  
  424cc3:	(bad)  
  424cc4:	call   rdi
  424cc6:	xlat   BYTE PTR ds:[rbx]
  424cc7:	xlat   BYTE PTR ds:[rbx]
  424cc8:	inc    eax
  424cca:	rol    al,0xff
  424ccd:	xlat   BYTE PTR ds:[rbx]
  424cce:	xlat   BYTE PTR ds:[rbx]
  424ccf:	xlat   BYTE PTR ds:[rbx]
  424cd0:	call   rdi
  424cd2:	xlat   BYTE PTR ds:[rbx]
  424cd3:	xlat   BYTE PTR ds:[rbx]
  424cd4:	inc    eax
  424cd6:	rol    al,0xff
  424cd9:	xor    ebx,DWORD PTR [rcx-0x66cc00cd]
  424cdf:	push   WORD PTR [rbx]
  424ce2:	cdq    
  424ce3:	xor    edi,edi
  424ce5:	xor    esp,DWORD PTR [rsi+0x33]
  424ce8:	inc    DWORD PTR [rax]
  424cea:	add    BYTE PTR [rax],al
  424cec:	add    bh,bl
  424cee:	(bad)  
  424cef:	mov    cl,0xb1
  424cf1:	(bad)  
  424cf2:	(bad)  
  424cf3:	(bad)  
  424cf4:	inc    DWORD PTR [rax]
  424cf6:	add    BYTE PTR [rax],al
  424cf8:	add    bh,bh
  424cfa:	(bad)  
  424cfb:	(bad)  
  424cfc:	call   FWORD PTR [rsi+0xb17285]
	...
  424d16:	add    BYTE PTR [rax],al
  424d18:	add    BYTE PTR [rbx],dh
  424d1a:	cwd    
  424d1c:	push   QWORD PTR [rbx]
  424d1e:	cwd    
  424d20:	jmp    QWORD PTR [rsi-0x67]
  424d23:	int3   
  424d24:	jmp    QWORD PTR [rsi-0x67]
  424d27:	cdq    
  424d28:	push   QWORD PTR [rbx]
  424d2a:	cdq    
  424d2b:	inc    ax
  424d2e:	fadd   st(0),st
  424d30:	call   FWORD PTR [rcx+0x66ff99cc]
  424d36:	int3   
  424d37:	cdq    
  424d38:	jmp    QWORD PTR [rsi-0x34]
  424d3b:	data16 (bad) 
  424d3d:	(bad)  
  424d3e:	(bad)  
  424d3f:	(bad)  
  424d40:	(bad)  
  424d41:	(bad)  
  424d42:	(bad)  
  424d43:	(bad)  
  424d44:	(bad)  
  424d45:	(bad)  
  424d46:	(bad)  
  424d47:	(bad)  
  424d48:	push   rcx
  424d4a:	icebp  
  424d4b:	icebp  
  424d4c:	push   rcx
  424d4e:	icebp  
  424d4f:	icebp  
  424d50:	push   rcx
  424d52:	icebp  
  424d53:	icebp  
  424d54:	dec    esp
  424d56:	int3   
  424d57:	int3   
  424d58:	push   QWORD PTR [rbx]
  424d5a:	cdq    
  424d5b:	jmp    WORD PTR [rsi-0x67]
  424d5f:	push   WORD PTR [rbx]
  424d62:	cdq    
  424d63:	xor    edi,edi
  424d65:	xor    esp,DWORD PTR [rsi+0x33]
  424d68:	inc    DWORD PTR [rax]
  424d6a:	add    BYTE PTR [rax],al
  424d6c:	add    dl,ah
  424d6e:	enter  0xb1b4,0x0
	...
  424d7a:	add    BYTE PTR [rax],al
  424d7c:	add    BYTE PTR [rsi+0xb57e7f],dl
	...
  424d8e:	add    BYTE PTR [rax],al
  424d90:	add    BYTE PTR [rsi-0x67],ah
  424d93:	cdq    
  424d94:	push   QWORD PTR [rbx]
  424d96:	cwd    
  424d98:	call   rsi
  424d9a:	out    0xe7,eax
  424d9c:	call   rsi
  424d9e:	out    0xe7,eax
  424da0:	jmp    QWORD PTR [rsi-0x67]
  424da3:	cdq    
  424da4:	jmp    QWORD PTR [rsi-0x67]
  424da7:	int3   
  424da8:	jmp    QWORD PTR [rsi-0x67]
  424dab:	inc    ax
  424dae:	fadd   st(0),st
  424db0:	call   FWORD PTR [rcx-0x66006634]
  424db6:	int3   
  424db7:	cdq    
  424db8:	jmp    QWORD PTR [rsi-0x34]
  424dbb:	cdq    
  424dbc:	jmp    QWORD PTR [rsi-0x67]
  424dbf:	data16 (bad) 
  424dc1:	(bad)  
  424dc2:	(bad)  
  424dc3:	(bad)  
  424dc4:	push   rcx
  424dc6:	icebp  
  424dc7:	icebp  
  424dc8:	(bad)  
  424dc9:	(bad)  
  424dca:	(bad)  
  424dcb:	(bad)  
  424dcc:	(bad)  
  424dcd:	(bad)  
  424dce:	(bad)  
  424dcf:	(bad)  
  424dd0:	push   rcx
  424dd2:	icebp  
  424dd3:	icebp  
  424dd4:	dec    esp
  424dd6:	int3   
  424dd7:	int3   
  424dd8:	jmp    QWORD PTR [rsi-0x67]
  424ddb:	push   WORD PTR [rbx]
  424dde:	cdq    
  424ddf:	push   WORD PTR [rbx]
  424de2:	cdq    
  424de3:	xor    edi,edi
  424de5:	xor    esp,DWORD PTR [rsi+0x33]
  424de8:	inc    DWORD PTR [rax]
  424dea:	add    BYTE PTR [rax],al
  424dec:	add    bl,ch
  424dee:	fxch   st(3)
  424df0:	inc    DWORD PTR [rax]
	...
  424dfa:	add    BYTE PTR [rax],al
  424dfc:	add    BYTE PTR [rax+0xff9aa7],bh
  424e02:	add    BYTE PTR [rax],al
  424e04:	add    BYTE PTR [rax],al
  424e06:	add    BYTE PTR [rax],al
  424e08:	add    BYTE PTR [rsi-0x67],ah
  424e0b:	cdq    
  424e0c:	jmp    QWORD PTR [rsi-0x67]
  424e0f:	cdq    
  424e10:	jmp    QWORD PTR [rsi-0x67]
  424e13:	int3   
  424e14:	call   rsi
  424e16:	out    0xe7,eax
  424e18:	call   rsi
  424e1a:	out    0xe7,eax
  424e1c:	call   rsi
  424e1e:	out    0xe7,eax
  424e20:	jmp    QWORD PTR [rsi-0x67]
  424e23:	int3   
  424e24:	jmp    QWORD PTR [rsi-0x67]
  424e27:	int3   
  424e28:	jmp    QWORD PTR [rsi-0x67]
  424e2b:	inc    ax
  424e2e:	fadd   st(0),st
  424e30:	call   FWORD PTR [rcx-0x66006634]
  424e36:	int3   
  424e37:	cdq    
  424e38:	jmp    QWORD PTR [rsi-0x67]
  424e3b:	push   WORD PTR [rbx]
  424e3e:	data16 data16 (bad) 
  424e41:	(bad)  
  424e42:	(bad)  
  424e43:	(bad)  
  424e44:	push   rcx
  424e46:	icebp  
  424e47:	icebp  
  424e48:	(bad)  
  424e49:	(bad)  
  424e4a:	(bad)  
  424e4b:	(bad)  
  424e4c:	push   rax
  424e4e:	sti    
  424e4f:	(bad)  
  424e50:	push   rcx
  424e52:	icebp  
  424e53:	icebp  
  424e54:	call   rdi
  424e56:	xlat   BYTE PTR ds:[rbx]
  424e57:	xlat   BYTE PTR ds:[rbx]
  424e58:	jmp    QWORD PTR [rsi-0x67]
  424e5b:	jmp    WORD PTR [rsi-0x67]
  424e5f:	push   WORD PTR [rbx]
  424e62:	cdq    
  424e63:	push   WORD PTR [rbx]
  424e66:	xor    di,di
  424e69:	add    BYTE PTR [rax],al
  424e6b:	add    BYTE PTR [rax],al
  424e6d:	jmp    0x424e48
  424e6f:	retf   
  424e70:	(bad)  
  424e71:	jmp    0x424e4c
  424e73:	retf   
  424e74:	dec    esi
  424e76:	mov    ah,0xa1
  424e78:	mov    cl,0xbc
  424e7a:	movabs ds:0xff9aa7b8b190,eax
  424e83:	add    BYTE PTR [rax],al
  424e85:	cwd    
  424e87:	cdq    
  424e88:	jmp    QWORD PTR [rsi-0x67]
  424e8b:	int3   
  424e8c:	call   FWORD PTR [rcx-0x66003334]
  424e92:	int3   
  424e93:	int3   
  424e94:	push   rax
  424e96:	sti    
  424e97:	(bad)  
  424e98:	call   rsi
  424e9a:	out    0xe7,eax
  424e9c:	call   rsi
  424e9e:	out    0xe7,eax
  424ea0:	call   FWORD PTR [rcx+0x66ffcccc]
  424ea6:	cdq    
  424ea7:	int3   
  424ea8:	jmp    QWORD PTR [rsi-0x67]
  424eab:	inc    ax
  424eae:	fadd   st(0),st
  424eb0:	call   FWORD PTR [rcx-0x66006634]
  424eb6:	int3   
  424eb7:	cdq    
  424eb8:	jmp    QWORD PTR [rsi-0x34]
  424ebb:	cdq    
  424ebc:	(bad)  
  424ebd:	(bad)  
  424ebe:	(bad)  
  424ebf:	(bad)  
  424ec0:	(bad)  
  424ec1:	(bad)  
  424ec2:	(bad)  
  424ec3:	(bad)  
  424ec4:	(bad)  
  424ec5:	(bad)  
  424ec6:	(bad)  
  424ec7:	(bad)  
  424ec8:	(bad)  
  424ec9:	(bad)  
  424eca:	(bad)  
  424ecb:	(bad)  
  424ecc:	(bad)  
  424ecd:	(bad)  
  424ece:	(bad)  
  424ecf:	(bad)  
  424ed0:	(bad)  
  424ed1:	(bad)  
  424ed2:	(bad)  
  424ed3:	(bad)  
  424ed4:	jmp    rbx
  424ed6:	jrcxz  0x424ebb
  424ed8:	jmp    QWORD PTR [rsi-0x67]
  424edb:	jmp    WORD PTR [rsi-0x34]
  424edf:	push   WORD PTR [rbx]
  424ee2:	cdq    
  424ee3:	push   WORD PTR [rbx]
  424ee6:	xor    di,di
	...
  424f05:	cwd    
  424f07:	cdq    
  424f08:	call   FWORD PTR [rcx+0x66ffffcc]
  424f0e:	cdq    
  424f0f:	int3   
  424f10:	jmp    QWORD PTR [rsi-0x67]
  424f13:	int3   
  424f14:	push   rax
  424f16:	sti    
  424f17:	(bad)  
  424f18:	call   rsi
  424f1a:	out    0xe7,eax
  424f1c:	call   rsi
  424f1e:	out    0xe7,eax
  424f20:	jmp    QWORD PTR [rsi-0x67]
  424f23:	int3   
  424f24:	call   FWORD PTR [rcx+0x66ffcccc]
  424f2a:	cdq    
  424f2b:	inc    ax
  424f2e:	fadd   st(0),st
  424f30:	call   FWORD PTR [rcx-0x66006634]
  424f36:	int3   
  424f37:	cdq    
  424f38:	jmp    QWORD PTR [rsi-0x34]
  424f3b:	cdq    
  424f3c:	(bad)  
  424f3d:	(bad)  
  424f3e:	(bad)  
  424f3f:	(bad)  
  424f40:	(bad)  
  424f41:	(bad)  
  424f42:	(bad)  
  424f43:	(bad)  
  424f44:	(bad)  
  424f45:	(bad)  
  424f46:	(bad)  
  424f47:	(bad)  
  424f48:	(bad)  
  424f49:	(bad)  
  424f4a:	(bad)  
  424f4b:	(bad)  
  424f4c:	(bad)  
  424f4d:	(bad)  
  424f4e:	(bad)  
  424f4f:	(bad)  
  424f50:	(bad)  
  424f51:	(bad)  
  424f52:	(bad)  
  424f53:	(bad)  
  424f54:	(bad)  
  424f55:	(bad)  
  424f56:	(bad)  
  424f57:	(bad)  
  424f58:	jmp    QWORD PTR [rsi-0x34]
  424f5b:	jmp    WORD PTR [rsi-0x67]
  424f5f:	push   WORD PTR [rbx]
  424f62:	cdq    
  424f63:	push   WORD PTR [rbx]
  424f66:	xor    di,di
  424f69:	add    BYTE PTR [rax],al
  424f6b:	add    BYTE PTR [rax],al
  424f6d:	fcmovnb st,st(1)
  424f6f:	scas   al,BYTE PTR es:[rdi]
  424f70:	mov    cl,0xcb
  424f72:	mov    dl,0x9e
  424f74:	mov    cl,0xb8
  424f76:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  424f77:	(bad)  
  424f78:	(bad)  
  424f79:	mov    eax,0x99ff9aa7
  424f7e:	sub    BYTE PTR [rbp-0x4f],0x0
  424f82:	add    BYTE PTR [rax],al
  424f84:	add    BYTE PTR [rsi-0x67],ah
  424f87:	cdq    
  424f88:	call   FWORD PTR [rcx-0x66003334]
  424f8e:	int3   
  424f8f:	int3   
  424f90:	call   FWORD PTR [rcx-0xf003334]
  424f96:	sti    
  424f97:	(bad)  
  424f98:	call   rsi
  424f9a:	out    0xe7,eax
  424f9c:	call   rsi
  424f9e:	out    0xe7,eax
  424fa0:	call   FWORD PTR [rcx+0x66ffcccc]
  424fa6:	cdq    
  424fa7:	int3   
  424fa8:	jmp    QWORD PTR [rsi-0x67]
  424fab:	inc    ax
  424fae:	fadd   st(0),st
  424fb0:	call   FWORD PTR [rcx-0x66006634]
  424fb6:	int3   
  424fb7:	cdq    
  424fb8:	call   FWORD PTR [rcx-0x66006634]
  424fbe:	int3   
  424fbf:	cdq    
  424fc0:	call   FWORD PTR [rcx-0x66006634]
  424fc6:	int3   
  424fc7:	cdq    
  424fc8:	call   FWORD PTR [rcx-0x66006634]
  424fce:	int3   
  424fcf:	cdq    
  424fd0:	call   FWORD PTR [rcx-0x66006634]
  424fd6:	int3   
  424fd7:	cdq    
  424fd8:	call   FWORD PTR [rcx+0x66ff99cc]
  424fde:	int3   
  424fdf:	jmp    WORD PTR [rsi-0x67]
  424fe3:	push   WORD PTR [rbx]
  424fe6:	xor    di,di
  424fe9:	add    BYTE PTR [rax],al
  424feb:	add    BYTE PTR [rax],al
  424fed:	ffreep st(4)
  424fef:	mov    cl,0xb1
  424ff1:	(bad)  
  424ff2:	(bad)  
  424ff3:	(bad)  
  424ff4:	inc    DWORD PTR [rax]
  424ff6:	add    BYTE PTR [rax],al
  424ff8:	add    bh,bh
  424ffa:	(bad)  
  424ffb:	(bad)  
  424ffc:	call   FWORD PTR [rsi+0xb17285]
  425002:	add    BYTE PTR [rax],al
  425004:	add    BYTE PTR [rsi-0x67],ah
  425007:	cdq    
  425008:	call   FWORD PTR [rcx+0x66ffffcc]
  42500e:	cdq    
  42500f:	int3   
  425010:	call   FWORD PTR [rcx-0xf003334]
  425016:	sti    
  425017:	(bad)  
  425018:	call   rsi
  42501a:	out    0xe7,eax
  42501c:	call   FWORD PTR [rcx+0x66ffffcc]
  425022:	cdq    
  425023:	int3   
  425024:	call   FWORD PTR [rcx+0x66ffcccc]
  42502a:	cdq    
  42502b:	inc    ax
  42502e:	fadd   st(0),st
  425030:	inc    eax
  425032:	fadd   st(0),st
  425034:	inc    eax
  425036:	fadd   st(0),st
  425038:	inc    eax
  42503a:	fadd   st(0),st
  42503c:	inc    eax
  42503e:	fadd   st(0),st
  425040:	inc    eax
  425042:	fadd   st(0),st
  425044:	inc    eax
  425046:	fadd   st(0),st
  425048:	inc    eax
  42504a:	fadd   st(0),st
  42504c:	inc    eax
  42504e:	fadd   st(0),st
  425050:	inc    eax
  425052:	fadd   st(0),st
  425054:	inc    eax
  425056:	fadd   st(0),st
  425058:	inc    eax
  42505a:	fadd   st(0),st
  42505c:	inc    eax
  42505e:	fadd   st(0),st
  425060:	jmp    QWORD PTR [rsi-0x34]
  425063:	push   WORD PTR [rbx]
  425066:	xor    di,di
  425069:	add    BYTE PTR [rax],al
  42506b:	add    BYTE PTR [rax],al
  42506d:	loop   0x425037
  42506f:	mov    ah,0xb1
	...
  42507d:	xchg   esi,eax
  42507e:	jg     0x4250fe
  425080:	mov    ch,0x0
  425082:	add    BYTE PTR [rax],al
  425084:	add    BYTE PTR [rsi-0x67],ah
  425087:	cdq    
  425088:	call   FWORD PTR [rcx-0x66000034]
  42508e:	int3   
  42508f:	int3   
  425090:	call   FWORD PTR [rcx-0x29000034]
  425096:	out    0xe7,eax
  425098:	call   rsi
  42509a:	out    0xe7,eax
  42509c:	call   FWORD PTR [rcx-0x66003334]
  4250a2:	int3   
  4250a3:	int3   
  4250a4:	jmp    QWORD PTR [rsi-0x67]
  4250a7:	int3   
  4250a8:	jmp    QWORD PTR [rsi-0x67]
  4250ab:	jmp    WORD PTR [rsi-0x67]
  4250af:	jmp    WORD PTR [rsi-0x67]
  4250b3:	jmp    WORD PTR [rsi-0x67]
  4250b7:	jmp    WORD PTR [rsi-0x67]
  4250bb:	jmp    WORD PTR [rsi-0x67]
  4250bf:	jmp    WORD PTR [rsi-0x67]
  4250c3:	jmp    WORD PTR [rsi-0x67]
  4250c7:	jmp    WORD PTR [rsi-0x67]
  4250cb:	push   WORD PTR [rbx]
  4250ce:	cdq    
  4250cf:	xor    edi,edi
  4250d1:	cwd    
  4250d3:	push   WORD PTR [rbx]
  4250d6:	cdq    
  4250d7:	xor    edi,edi
  4250d9:	cwd    
  4250db:	push   WORD PTR [rbx]
  4250de:	cdq    
  4250df:	xor    edi,edi
  4250e1:	xor    ebx,DWORD PTR [rcx-0x66cc00cd]
  4250e7:	xor    edi,edi
  4250e9:	add    BYTE PTR [rax],al
  4250eb:	add    BYTE PTR [rax],al
  4250ed:	jmp    0x4250c8
  4250ef:	retf   
  4250f0:	inc    DWORD PTR [rax]
	...
  4250fa:	add    BYTE PTR [rax],al
  4250fc:	add    BYTE PTR [rax+0xff9aa7],bh
  425102:	add    BYTE PTR [rax],al
  425104:	add    BYTE PTR [rsi-0x67],ah
  425107:	cdq    
  425108:	call   FWORD PTR [rcx-0x66003334]
  42510e:	int3   
  42510f:	(bad)  
  425110:	call   FWORD PTR [rcx-0x66003334]
  425116:	int3   
  425117:	int3   
  425118:	call   FWORD PTR [rcx-0x66000034]
  42511e:	int3   
  42511f:	int3   
  425120:	call   FWORD PTR [rcx+0x66ffffcc]
  425126:	int3   
  425127:	int3   
  425128:	call   FWORD PTR [rcx+0x66ffcccc]
  42512e:	cdq    
  42512f:	int3   
  425130:	push   QWORD PTR [rbx]
  425132:	data16 inc WORD PTR [rax]
  425136:	xor    esp,DWORD PTR [rsi-0x1]
  425139:	xor    esp,DWORD PTR [rsi-0x67]
  42513c:	push   QWORD PTR [rbx]
  42513e:	data16 push WORD PTR [rbx]
  425142:	cwd    
  425144:	push   QWORD PTR [rbx]
  425146:	data16 push WORD PTR [rbx]
  42514a:	cwd    
  42514c:	push   QWORD PTR [rbx]
  42514e:	cwd    
  425150:	push   QWORD PTR [rbx]
  425152:	cwd    
  425154:	push   QWORD PTR [rbx]
  425156:	cwd    
  425158:	push   QWORD PTR [rbx]
  42515a:	cwd    
  42515c:	push   QWORD PTR [rbx]
  42515e:	xor    esp,DWORD PTR [rsi-0x1]
	...
  42516d:	jmp    0x425148
  42516f:	retf   
  425170:	(bad)  
  425171:	jmp    0x42514c
  425173:	retf   
  425174:	dec    esi
  425176:	mov    ah,0xa1
  425178:	mov    cl,0xbc
  42517a:	movabs ds:0xff9aa7b8b190,eax
  425183:	add    BYTE PTR [rax],al
  425185:	cwd    
  425187:	cdq    
  425188:	call   FWORD PTR [rcx-0x66000034]
  42518e:	int3   
  42518f:	int3   
  425190:	call   FWORD PTR [rcx-0x39000034]
  425196:	(bad)  
  425197:	out    dx,eax
  425198:	push   rax
  42519a:	sti    
  42519b:	(bad)  
  42519c:	push   rax
  42519e:	sti    
  42519f:	(bad)  
  4251a0:	call   FWORD PTR [rcx-0x66003334]
  4251a6:	int3   
  4251a7:	(bad)  
  4251a8:	call   FWORD PTR [rcx-0x66003334]
  4251ae:	int3   
  4251af:	int3   
  4251b0:	push   QWORD PTR [rbx]
  4251b2:	data16 inc WORD PTR [rax]
  4251b6:	xor    esp,DWORD PTR [rsi-0x1]
  4251b9:	xor    esp,DWORD PTR [rsi+0x66]
  4251bc:	push   QWORD PTR [rbx]
  4251be:	cwd    
  4251c0:	push   QWORD PTR [rbx]
  4251c2:	data16 push WORD PTR [rbx]
  4251c6:	cwd    
  4251c8:	push   QWORD PTR [rbx]
  4251ca:	cwd    
  4251cc:	push   QWORD PTR [rbx]
  4251ce:	data16 push WORD PTR [rbx]
  4251d2:	cwd    
  4251d4:	push   QWORD PTR [rbx]
  4251d6:	cwd    
  4251d8:	push   QWORD PTR [rbx]
  4251da:	cwd    
  4251dc:	push   QWORD PTR [rbx]
  4251de:	xor    esp,DWORD PTR [rsi-0x1]
	...
  425205:	cwd    
  425207:	cdq    
  425208:	call   FWORD PTR [rcx-0x66000034]
  42520e:	int3   
  42520f:	int3   
  425210:	call   FWORD PTR [rcx-0x29000034]
  425216:	out    0xe7,eax
  425218:	push   rax
  42521a:	sti    
  42521b:	(bad)  
  42521c:	push   rax
  42521e:	sti    
  42521f:	(bad)  
  425220:	call   FWORD PTR [rcx-0x66003334]
  425226:	int3   
  425227:	int3   
  425228:	call   FWORD PTR [rcx-0x66000034]
  42522e:	int3   
  42522f:	int3   
  425230:	push   QWORD PTR [rbx]
  425232:	data16 inc WORD PTR [rax]
  425236:	xor    esp,DWORD PTR [rsi-0x1]
  425239:	add    BYTE PTR [rbx],dh
  42523b:	inc    WORD PTR [rax]
  42523e:	xor    esp,DWORD PTR [rsi-0x1]
  425241:	xor    esp,DWORD PTR [rsi-0x67]
  425244:	push   QWORD PTR [rbx]
  425246:	cwd    
  425248:	push   QWORD PTR [rbx]
  42524a:	cwd    
  42524c:	push   QWORD PTR [rbx]
  42524e:	data16 inc WORD PTR [rax]
  425252:	cwd    
  425254:	push   QWORD PTR [rbx]
  425256:	cwd    
  425258:	push   QWORD PTR [rbx]
  42525a:	cwd    
  42525c:	push   QWORD PTR [rbx]
  42525e:	xor    esp,DWORD PTR [rsi-0x1]
	...
  425285:	cwd    
  425287:	cdq    
  425288:	call   FWORD PTR [rcx-0x66003334]
  42528e:	int3   
  42528f:	(bad)  
  425290:	call   FWORD PTR [rcx-0xf003334]
  425296:	sti    
  425297:	(bad)  
  425298:	push   rax
  42529a:	sti    
  42529b:	(bad)  
  42529c:	call   rsi
  42529e:	out    0xe7,eax
  4252a0:	call   FWORD PTR [rcx-0x66000034]
  4252a6:	int3   
  4252a7:	(bad)  
  4252a8:	call   FWORD PTR [rcx-0x66003334]
  4252ae:	int3   
  4252af:	int3   
  4252b0:	push   QWORD PTR [rbx]
  4252b2:	data16 jmp WORD PTR [rsi-0x67]
  4252b7:	cdq    
  4252b8:	jmp    QWORD PTR [rsi-0x67]
  4252bb:	cdq    
  4252bc:	jmp    QWORD PTR [rsi-0x67]
  4252bf:	cdq    
  4252c0:	push   QWORD PTR [rbx]
  4252c2:	data16 inc WORD PTR [rax]
  4252c6:	xor    esp,DWORD PTR [rsi-0x1]
  4252c9:	add    BYTE PTR [rbx],dh
  4252cb:	inc    WORD PTR [rax]
  4252ce:	cwd    
  4252d0:	push   QWORD PTR [rbx]
  4252d2:	data16 push WORD PTR [rbx]
  4252d6:	cwd    
  4252d8:	inc    DWORD PTR [rax]
  4252da:	data16 push WORD PTR [rbx]
  4252de:	xor    esp,DWORD PTR [rsi-0x1]
	...
  425305:	cwd    
  425307:	cdq    
  425308:	call   FWORD PTR [rcx-0x66000034]
  42530e:	int3   
  42530f:	(bad)  
  425310:	call   FWORD PTR [rcx-0x29003334]
  425316:	out    0xe7,eax
  425318:	jmp    QWORD PTR [rsi-0x67]
  42531b:	int3   
  42531c:	jmp    QWORD PTR [rsi-0x67]
  42531f:	int3   
  425320:	push   QWORD PTR [rbx]
  425322:	cdq    
  425323:	cdq    
  425324:	jmp    QWORD PTR [rsi-0x67]
  425327:	cdq    
  425328:	push   QWORD PTR [rbx]
  42532a:	cwd    
  42532c:	push   QWORD PTR [rbx]
  42532e:	cdq    
  42532f:	int3   
  425330:	push   QWORD PTR [rbx]
  425332:	cwd    
  425334:	jmp    QWORD PTR [rsi-0x67]
  425337:	int3   
  425338:	call   FWORD PTR [rcx-0x66003334]
  42533e:	int3   
  42533f:	int3   
  425340:	jmp    QWORD PTR [rsi-0x67]
  425343:	cdq    
  425344:	jmp    QWORD PTR [rsi-0x67]
  425347:	cdq    
  425348:	jmp    QWORD PTR [rsi-0x67]
  42534b:	cdq    
  42534c:	inc    DWORD PTR [rax]
  42534e:	xor    esp,DWORD PTR [rsi-0x1]
  425351:	add    BYTE PTR [rbx],dh
  425353:	inc    WORD PTR [rax]
  425356:	xor    esp,DWORD PTR [rsi-0x1]
  425359:	add    BYTE PTR [rsi+0x66],ah
  42535c:	push   QWORD PTR [rbx]
  42535e:	xor    esp,DWORD PTR [rsi-0x1]
	...
  425385:	cwd    
  425387:	cdq    
  425388:	call   FWORD PTR [rcx+0x66ffcccc]
  42538e:	cdq    
  42538f:	int3   
  425390:	jmp    QWORD PTR [rsi-0x67]
  425393:	int3   
  425394:	jmp    QWORD PTR [rsi-0x67]
  425397:	cdq    
  425398:	call   FWORD PTR [rcx-0x39003334]
  42539e:	(bad)  
  42539f:	out    dx,eax
  4253a0:	call   FWORD PTR [rcx-0x66003334]
  4253a6:	int3   
  4253a7:	(bad)  
  4253a8:	jmp    QWORD PTR [rsi-0x67]
  4253ab:	int3   
  4253ac:	jmp    QWORD PTR [rsi-0x67]
  4253af:	int3   
  4253b0:	push   QWORD PTR [rbx]
  4253b2:	cwd    
  4253b4:	push   QWORD PTR [rbx]
  4253b6:	cdq    
  4253b7:	cdq    
  4253b8:	jmp    QWORD PTR [rsi-0x67]
  4253bb:	int3   
  4253bc:	call   FWORD PTR [rcx-0x66003334]
  4253c2:	int3   
  4253c3:	int3   
  4253c4:	call   FWORD PTR [rcx-0x66000034]
  4253ca:	int3   
  4253cb:	int3   
  4253cc:	call   QWORD PTR [rax+0x66ffada9]
  4253d2:	cdq    
  4253d3:	cdq    
  4253d4:	jmp    QWORD PTR [rsi-0x67]
  4253d7:	cdq    
  4253d8:	inc    DWORD PTR [rax]
  4253da:	xor    esp,DWORD PTR [rsi-0x1]
  4253dd:	xor    esi,DWORD PTR [rbx]
  4253df:	inc    WORD PTR [rax]
	...
  4253fe:	add    BYTE PTR [rax],al
  425400:	add    BYTE PTR [rsi-0x67],ah
  425403:	int3   
  425404:	jmp    QWORD PTR [rsi-0x67]
  425407:	int3   
  425408:	jmp    QWORD PTR [rsi-0x67]
  42540b:	int3   
  42540c:	jmp    QWORD PTR [rsi-0x67]
  42540f:	int3   
  425410:	inc    esi
  425412:	(bad)  
  425413:	out    dx,eax
  425414:	inc    esi
  425416:	(bad)  
  425417:	out    dx,eax
  425418:	inc    esi
  42541a:	(bad)  
  42541b:	out    dx,eax
  42541c:	call   QWORD PTR [rax+0x66ffada9]
  425422:	cdq    
  425423:	int3   
  425424:	jmp    QWORD PTR [rsi-0x67]
  425427:	int3   
  425428:	jmp    QWORD PTR [rsi-0x67]
  42542b:	int3   
  42542c:	push   QWORD PTR [rbx]
  42542e:	cwd    
  425430:	push   QWORD PTR [rbx]
  425432:	cwd    
  425434:	jmp    QWORD PTR [rsi-0x67]
  425437:	int3   
  425438:	jmp    QWORD PTR [rsi-0x67]
  42543b:	int3   
  42543c:	jmp    QWORD PTR [rsi-0x67]
  42543f:	int3   
  425440:	jmp    QWORD PTR [rsi-0x67]
  425443:	cdq    
  425444:	jmp    QWORD PTR [rsi-0x67]
  425447:	int3   
  425448:	call   FWORD PTR [rcx-0x66003334]
  42544e:	int3   
  42544f:	(bad)  
  425450:	call   FWORD PTR [rcx+0x66ffcccc]
  425456:	cdq    
  425457:	int3   
  425458:	jmp    QWORD PTR [rsi-0x67]
  42545b:	cdq    
  42545c:	jmp    QWORD PTR [rsi-0x67]
  42545f:	cdq    
  425460:	jmp    QWORD PTR [rsi-0x67]
  425463:	cdq    
  425464:	inc    DWORD PTR [rax]
	...
  425476:	add    BYTE PTR [rax],al
  425478:	add    BYTE PTR [rsi-0x67],ah
  42547b:	int3   
  42547c:	jmp    QWORD PTR [rsi-0x67]
  42547f:	int3   
  425480:	dec    esp
  425482:	(bad)  
  425483:	(bad)  
  425484:	call   rsi
  425486:	out    0xe7,eax
  425488:	inc    esi
  42548a:	(bad)  
  42548b:	out    dx,eax
  42548c:	call   rsi
  42548e:	out    0xe7,eax
  425490:	call   FWORD PTR [rcx+0x66ffcccc]
  425496:	cdq    
  425497:	int3   
  425498:	jmp    QWORD PTR [rsi-0x67]
  42549b:	int3   
  42549c:	jmp    QWORD PTR [rsi-0x67]
  42549f:	int3   
  4254a0:	push   QWORD PTR [rbx]
  4254a2:	cwd    
  4254a4:	push   QWORD PTR [rbx]
  4254a6:	cwd    
  4254a8:	push   QWORD PTR [rbx]
  4254aa:	cwd    
  4254ac:	push   QWORD PTR [rbx]
  4254ae:	cwd    
  4254b0:	push   QWORD PTR [rbx]
  4254b2:	cwd    
  4254b4:	jmp    QWORD PTR [rsi-0x67]
  4254b7:	int3   
  4254b8:	jmp    QWORD PTR [rsi-0x67]
  4254bb:	int3   
  4254bc:	jmp    QWORD PTR [rsi-0x67]
  4254bf:	int3   
  4254c0:	jmp    QWORD PTR [rsi-0x67]
  4254c3:	int3   
  4254c4:	jmp    QWORD PTR [rsi-0x67]
  4254c7:	int3   
  4254c8:	jmp    QWORD PTR [rsi-0x67]
  4254cb:	int3   
  4254cc:	jmp    QWORD PTR [rsi-0x67]
  4254cf:	cdq    
  4254d0:	jmp    QWORD PTR [rsi-0x67]
  4254d3:	int3   
  4254d4:	call   FWORD PTR [rcx-0x66000034]
  4254da:	int3   
  4254db:	int3   
  4254dc:	jmp    QWORD PTR [rsi-0x67]
  4254df:	int3   
  4254e0:	call   QWORD PTR [rax+0x66ffada9]
  4254e6:	cdq    
  4254e7:	cdq    
  4254e8:	inc    DWORD PTR [rax]
	...
  4254f2:	add    BYTE PTR [rax],al
  4254f4:	add    BYTE PTR [rsi-0x67],ah
  4254f7:	int3   
  4254f8:	jmp    QWORD PTR [rsi-0x67]
  4254fb:	int3   
  4254fc:	jmp    QWORD PTR [rsi-0x67]
  4254ff:	int3   
  425500:	jmp    QWORD PTR [rsi-0x67]
  425503:	int3   
  425504:	jmp    QWORD PTR [rsi-0x67]
  425507:	int3   
  425508:	jmp    QWORD PTR [rsi-0x67]
  42550b:	int3   
  42550c:	jmp    QWORD PTR [rsi-0x67]
  42550f:	int3   
  425510:	jmp    QWORD PTR [rsi-0x67]
  425513:	int3   
  425514:	push   QWORD PTR [rbx]
  425516:	cwd    
  425518:	push   QWORD PTR [rbx]
  42551a:	cwd    
  42551c:	push   QWORD PTR [rbx]
  42551e:	cwd    
  425520:	push   QWORD PTR [rbx]
  425522:	cwd    
  425524:	push   QWORD PTR [rbx]
  425526:	cwd    
  425528:	push   QWORD PTR [rbx]
  42552a:	cwd    
  42552c:	push   QWORD PTR [rbx]
  42552e:	cwd    
  425530:	push   QWORD PTR [rbx]
  425532:	cwd    
  425534:	jmp    QWORD PTR [rsi-0x67]
  425537:	int3   
  425538:	jmp    QWORD PTR [rsi-0x67]
  42553b:	int3   
  42553c:	jmp    QWORD PTR [rsi-0x67]
  42553f:	int3   
  425540:	jmp    QWORD PTR [rsi-0x67]
  425543:	int3   
  425544:	jmp    QWORD PTR [rsi-0x67]
  425547:	int3   
  425548:	jmp    QWORD PTR [rsi-0x67]
  42554b:	int3   
  42554c:	jmp    QWORD PTR [rsi-0x67]
  42554f:	int3   
  425550:	jmp    QWORD PTR [rsi-0x67]
  425553:	int3   
  425554:	jmp    QWORD PTR [rsi-0x67]
  425557:	cdq    
  425558:	jmp    QWORD PTR [rsi-0x67]
  42555b:	int3   
  42555c:	jmp    QWORD PTR [rsi-0x67]
  42555f:	cdq    
  425560:	jmp    QWORD PTR [rsi-0x67]
  425563:	cdq    
  425564:	jmp    QWORD PTR [rsi-0x67]
  425567:	cdq    
  425568:	jmp    QWORD PTR [rsi-0x67]
  42556b:	cdq    
  42556c:	inc    DWORD PTR [rax]
	...
  425582:	add    BYTE PTR [rax],al
  425584:	add    BYTE PTR [rcx+0x66ffcc99],bl
  42558a:	cdq    
  42558b:	cdq    
  42558c:	jmp    QWORD PTR [rsi-0x67]
  42558f:	int3   
  425590:	push   QWORD PTR [rbx]
  425592:	cdq    
  425593:	cdq    
  425594:	push   QWORD PTR [rbx]
  425596:	cwd    
  425598:	push   QWORD PTR [rbx]
  42559a:	cwd    
  42559c:	push   QWORD PTR [rbx]
  42559e:	cwd    
  4255a0:	push   QWORD PTR [rbx]
  4255a2:	cwd    
  4255a4:	push   QWORD PTR [rbx]
  4255a6:	cwd    
  4255a8:	push   QWORD PTR [rbx]
  4255aa:	cwd    
  4255ac:	push   QWORD PTR [rbx]
  4255ae:	cwd    
  4255b0:	push   QWORD PTR [rbx]
  4255b2:	cwd    
  4255b4:	jmp    QWORD PTR [rsi-0x67]
  4255b7:	int3   
  4255b8:	jmp    QWORD PTR [rsi-0x34]
  4255bb:	int3   
  4255bc:	jmp    QWORD PTR [rsi-0x67]
  4255bf:	int3   
  4255c0:	jmp    QWORD PTR [rsi-0x34]
  4255c3:	int3   
  4255c4:	jmp    QWORD PTR [rsi-0x67]
  4255c7:	int3   
  4255c8:	jmp    QWORD PTR [rsi-0x34]
  4255cb:	int3   
  4255cc:	jmp    QWORD PTR [rsi-0x67]
  4255cf:	int3   
  4255d0:	jmp    QWORD PTR [rsi-0x67]
  4255d3:	cdq    
  4255d4:	jmp    QWORD PTR [rsi-0x67]
  4255d7:	int3   
  4255d8:	jmp    QWORD PTR [rsi-0x67]
  4255db:	cdq    
  4255dc:	jmp    QWORD PTR [rsi-0x67]
  4255df:	int3   
  4255e0:	inc    DWORD PTR [rax]
	...
  4255fe:	add    BYTE PTR [rax],al
  425600:	add    BYTE PTR [rsi-0x67],ah
  425603:	int3   
  425604:	jmp    QWORD PTR [rsi-0x34]
  425607:	int3   
  425608:	call   FWORD PTR [rcx-0x66000034]
  42560e:	int3   
  42560f:	int3   
  425610:	jmp    QWORD PTR [rsi-0x67]
  425613:	int3   
  425614:	jmp    QWORD PTR [rsi-0x67]
  425617:	int3   
  425618:	jmp    QWORD PTR [rsi-0x67]
  42561b:	cdq    
  42561c:	push   QWORD PTR [rbx]
  42561e:	cwd    
  425620:	push   QWORD PTR [rbx]
  425622:	cwd    
  425624:	push   QWORD PTR [rbx]
  425626:	cwd    
  425628:	push   QWORD PTR [rbx]
  42562a:	cwd    
  42562c:	push   QWORD PTR [rbx]
  42562e:	cwd    
  425630:	push   QWORD PTR [rbx]
  425632:	cwd    
  425634:	jmp    QWORD PTR [rsi-0x67]
  425637:	int3   
  425638:	jmp    QWORD PTR [rsi-0x67]
  42563b:	int3   
  42563c:	jmp    QWORD PTR [rsi-0x67]
  42563f:	int3   
  425640:	jmp    QWORD PTR [rsi-0x67]
  425643:	int3   
  425644:	jmp    QWORD PTR [rsi-0x67]
  425647:	int3   
  425648:	jmp    QWORD PTR [rsi-0x67]
  42564b:	int3   
  42564c:	jmp    QWORD PTR [rsi-0x67]
  42564f:	int3   
  425650:	jmp    QWORD PTR [rsi-0x67]
  425653:	int3   
  425654:	jmp    QWORD PTR [rsi-0x34]
  425657:	int3   
  425658:	jmp    QWORD PTR [rsi-0x67]
  42565b:	int3   
  42565c:	jmp    QWORD PTR [rsi-0x67]
  42565f:	int3   
  425660:	jmp    QWORD PTR [rsi-0x67]
  425663:	int3   
  425664:	inc    DWORD PTR [rax]
	...
  42567a:	add    BYTE PTR [rax],al
  42567c:	add    BYTE PTR [rsi-0x67],ah
  42567f:	int3   
  425680:	inc    esi
  425682:	(bad)  
  425683:	out    dx,eax
  425684:	inc    esi
  425686:	(bad)  
  425687:	out    dx,eax
  425688:	inc    esi
  42568a:	(bad)  
  42568b:	out    dx,eax
  42568c:	call   FWORD PTR [rcx-0x66000034]
  425692:	int3   
  425693:	int3   
  425694:	call   FWORD PTR [rcx+0x66ffffcc]
  42569a:	cdq    
  42569b:	int3   
  42569c:	push   QWORD PTR [rbx]
  42569e:	cdq    
  42569f:	cdq    
  4256a0:	push   QWORD PTR [rbx]
  4256a2:	cdq    
  4256a3:	cdq    
  4256a4:	push   QWORD PTR [rbx]
  4256a6:	cdq    
  4256a7:	cdq    
  4256a8:	push   QWORD PTR [rbx]
  4256aa:	cwd    
  4256ac:	push   QWORD PTR [rbx]
  4256ae:	cwd    
  4256b0:	push   QWORD PTR [rbx]
  4256b2:	cwd    
  4256b4:	jmp    QWORD PTR [rsi-0x67]
  4256b7:	int3   
  4256b8:	jmp    QWORD PTR [rsi-0x34]
  4256bb:	int3   
  4256bc:	jmp    QWORD PTR [rsi-0x67]
  4256bf:	int3   
  4256c0:	jmp    QWORD PTR [rsi-0x67]
  4256c3:	int3   
  4256c4:	jmp    QWORD PTR [rsi-0x34]
  4256c7:	int3   
  4256c8:	jmp    QWORD PTR [rsi-0x67]
  4256cb:	int3   
  4256cc:	jmp    QWORD PTR [rsi-0x67]
  4256cf:	int3   
  4256d0:	jmp    QWORD PTR [rsi-0x34]
  4256d3:	int3   
  4256d4:	jmp    QWORD PTR [rsi-0x67]
  4256d7:	int3   
  4256d8:	call   FWORD PTR [rcx-0x66003334]
  4256de:	int3   
  4256df:	int3   
  4256e0:	jmp    QWORD PTR [rsi-0x67]
  4256e3:	int3   
  4256e4:	jmp    QWORD PTR [rsi-0x67]
  4256e7:	int3   
  4256e8:	inc    DWORD PTR [rax]
	...
  4256f6:	add    BYTE PTR [rax],al
  4256f8:	add    BYTE PTR [rsi-0x67],ah
  4256fb:	int3   
  4256fc:	inc    esi
  4256fe:	(bad)  
  4256ff:	out    dx,eax
  425700:	dec    esp
  425702:	(bad)  
  425703:	(bad)  
  425704:	dec    esp
  425706:	(bad)  
  425707:	(bad)  
  425708:	inc    esi
  42570a:	(bad)  
  42570b:	out    dx,eax
  42570c:	inc    esi
  42570e:	(bad)  
  42570f:	out    dx,eax
  425710:	call   FWORD PTR [rcx-0x66000034]
  425716:	int3   
  425717:	int3   
  425718:	call   FWORD PTR [rcx+0x66ffcccc]
  42571e:	int3   
  42571f:	int3   
  425720:	jmp    QWORD PTR [rsi-0x67]
  425723:	int3   
  425724:	jmp    QWORD PTR [rsi-0x67]
  425727:	int3   
  425728:	push   QWORD PTR [rbx]
  42572a:	cdq    
  42572b:	cdq    
  42572c:	push   QWORD PTR [rbx]
  42572e:	cdq    
  42572f:	cdq    
  425730:	push   QWORD PTR [rbx]
  425732:	cdq    
  425733:	cdq    
  425734:	jmp    QWORD PTR [rsi-0x67]
  425737:	int3   
  425738:	jmp    QWORD PTR [rsi-0x67]
  42573b:	int3   
  42573c:	jmp    QWORD PTR [rsi-0x67]
  42573f:	int3   
  425740:	jmp    QWORD PTR [rsi-0x34]
  425743:	int3   
  425744:	jmp    QWORD PTR [rsi-0x67]
  425747:	int3   
  425748:	jmp    QWORD PTR [rsi-0x34]
  42574b:	int3   
  42574c:	call   FWORD PTR [rcx-0x66000034]
  425752:	int3   
  425753:	int3   
  425754:	call   FWORD PTR [rcx-0x66003334]
  42575a:	int3   
  42575b:	(bad)  
  42575c:	call   FWORD PTR [rcx-0x66003334]
  425762:	int3   
  425763:	(bad)  
  425764:	call   FWORD PTR [rcx+0x66ffcccc]
  42576a:	cdq    
  42576b:	int3   
  42576c:	inc    DWORD PTR [rax]
	...
  425776:	add    BYTE PTR [rax],al
  425778:	add    BYTE PTR [rsi-0x67],ah
  42577b:	int3   
  42577c:	jmp    QWORD PTR [rsi-0x67]
  42577f:	int3   
  425780:	inc    esi
  425782:	(bad)  
  425783:	out    dx,eax
  425784:	inc    esi
  425786:	(bad)  
  425787:	out    dx,eax
  425788:	dec    esp
  42578a:	(bad)  
  42578b:	(bad)  
  42578c:	call   rsi
  42578e:	out    0xe7,eax
  425790:	dec    esp
  425792:	(bad)  
  425793:	(bad)  
  425794:	inc    esi
  425796:	(bad)  
  425797:	out    dx,eax
  425798:	call   FWORD PTR [rcx-0x66000034]
  42579e:	int3   
  42579f:	(bad)  
  4257a0:	call   FWORD PTR [rcx+0x66ffcccc]
  4257a6:	int3   
  4257a7:	int3   
  4257a8:	jmp    QWORD PTR [rsi-0x67]
  4257ab:	int3   
  4257ac:	jmp    QWORD PTR [rsi-0x67]
  4257af:	int3   
  4257b0:	jmp    QWORD PTR [rsi-0x67]
  4257b3:	int3   
  4257b4:	jmp    QWORD PTR [rsi-0x67]
  4257b7:	cdq    
  4257b8:	jmp    QWORD PTR [rsi-0x34]
  4257bb:	int3   
  4257bc:	jmp    QWORD PTR [rsi-0x67]
  4257bf:	int3   
  4257c0:	call   FWORD PTR [rcx-0x66003334]
  4257c6:	int3   
  4257c7:	int3   
  4257c8:	call   FWORD PTR [rcx-0x66003334]
  4257ce:	int3   
  4257cf:	int3   
  4257d0:	call   FWORD PTR [rcx-0x66000034]
  4257d6:	int3   
  4257d7:	(bad)  
  4257d8:	inc    esi
  4257da:	(bad)  
  4257db:	out    dx,eax
  4257dc:	inc    esi
  4257de:	(bad)  
  4257df:	out    dx,eax
  4257e0:	inc    esi
  4257e2:	(bad)  
  4257e3:	out    dx,eax
  4257e4:	jmp    QWORD PTR [rsi-0x67]
  4257e7:	int3   
  4257e8:	jmp    QWORD PTR [rsi-0x67]
  4257eb:	int3   
  4257ec:	inc    DWORD PTR [rax]
	...
  4257fe:	add    BYTE PTR [rax],al
  425800:	add    BYTE PTR [rsi-0x67],ah
  425803:	int3   
  425804:	jmp    QWORD PTR [rsi-0x67]
  425807:	int3   
  425808:	jmp    QWORD PTR [rsi-0x67]
  42580b:	int3   
  42580c:	inc    esi
  42580e:	(bad)  
  42580f:	out    dx,eax
  425810:	inc    esi
  425812:	(bad)  
  425813:	out    dx,eax
  425814:	inc    esi
  425816:	(bad)  
  425817:	out    dx,eax
  425818:	inc    esi
  42581a:	(bad)  
  42581b:	out    dx,eax
  42581c:	call   FWORD PTR [rcx-0x66000034]
  425822:	int3   
  425823:	int3   
  425824:	call   FWORD PTR [rcx-0x66000034]
  42582a:	int3   
  42582b:	int3   
  42582c:	jmp    QWORD PTR [rsi-0x67]
  42582f:	int3   
  425830:	jmp    QWORD PTR [rsi-0x67]
  425833:	cdq    
  425834:	jmp    QWORD PTR [rsi-0x67]
  425837:	int3   
  425838:	call   QWORD PTR [rax-0x66005257]
  42583e:	int3   
  42583f:	(bad)  
  425840:	call   FWORD PTR [rcx-0x66003334]
  425846:	int3   
  425847:	(bad)  
  425848:	call   FWORD PTR [rcx-0x39000034]
  42584e:	(bad)  
  42584f:	out    dx,eax
  425850:	inc    esi
  425852:	(bad)  
  425853:	out    dx,eax
  425854:	inc    esi
  425856:	(bad)  
  425857:	out    dx,eax
  425858:	jmp    QWORD PTR [rsi-0x67]
  42585b:	int3   
  42585c:	jmp    QWORD PTR [rsi-0x67]
  42585f:	int3   
  425860:	jmp    QWORD PTR [rsi-0x67]
  425863:	int3   
  425864:	inc    DWORD PTR [rax]
	...
  42588a:	add    BYTE PTR [rax],al
  42588c:	add    BYTE PTR [rsi-0x67],ah
  42588f:	int3   
  425890:	jmp    QWORD PTR [rsi-0x67]
  425893:	int3   
  425894:	jmp    QWORD PTR [rsi-0x67]
  425897:	int3   
  425898:	inc    esi
  42589a:	(bad)  
  42589b:	out    dx,eax
  42589c:	inc    esi
  42589e:	(bad)  
  42589f:	out    dx,eax
  4258a0:	call   FWORD PTR [rcx-0x66000034]
  4258a6:	int3   
  4258a7:	int3   
  4258a8:	jmp    QWORD PTR [rsi-0x67]
  4258ab:	int3   
  4258ac:	inc    DWORD PTR [rax]
	...
  4258b6:	add    BYTE PTR [rax],al
  4258b8:	add    BYTE PTR [rsi-0x67],ah
  4258bb:	int3   
  4258bc:	jmp    QWORD PTR [rsi-0x67]
  4258bf:	int3   
  4258c0:	inc    esi
  4258c2:	(bad)  
  4258c3:	out    dx,eax
  4258c4:	inc    esi
  4258c6:	(bad)  
  4258c7:	out    dx,eax
  4258c8:	inc    esi
  4258ca:	(bad)  
  4258cb:	out    dx,eax
  4258cc:	inc    esi
  4258ce:	(bad)  
  4258cf:	out    dx,eax
  4258d0:	jmp    QWORD PTR [rsi-0x67]
  4258d3:	int3   
  4258d4:	jmp    QWORD PTR [rsi-0x67]
  4258d7:	int3   
  4258d8:	inc    DWORD PTR [rax]
	...
  425916:	add    BYTE PTR [rax],al
  425918:	add    BYTE PTR [rsi-0x67],ah
  42591b:	int3   
  42591c:	jmp    QWORD PTR [rsi-0x67]
  42591f:	int3   
  425920:	call   FWORD PTR [rcx+0x66ffcc99]
  425926:	cdq    
  425927:	int3   
  425928:	inc    DWORD PTR [rax]
	...
  42593e:	add    BYTE PTR [rax],al
  425940:	add    BYTE PTR [rsi-0x67],ah
  425943:	int3   
  425944:	jmp    QWORD PTR [rsi-0x67]
  425947:	int3   
  425948:	jmp    QWORD PTR [rsi-0x67]
  42594b:	int3   
  42594c:	jmp    QWORD PTR [rsi-0x67]
  42594f:	int3   
  425950:	inc    DWORD PTR [rax]
	...
  42596a:	add    BYTE PTR [rax],al
  42596c:	add    BYTE PTR [rdi],al
  42596e:	inc    BYTE PTR [rax]
  425970:	add    DWORD PTR [rdi],esp
  425972:	inc    BYTE PTR [rax]
  425974:	add    DWORD PTR [rdi-0x2],esi
  425977:	add    BYTE PTR [rcx],al
  425979:	push   rdi
  42597a:	inc    BYTE PTR [rax]
  42597c:	add    DWORD PTR [rdi],eax
  42597e:	inc    BYTE PTR [rax]
  425980:	add    edi,edi
  425982:	inc    BYTE PTR [rax]
  425984:	add    DWORD PTR [rdi],eax
  425986:	clc    
  425987:	add    BYTE PTR [rcx],al
  425989:	(bad)  
  42598a:	loopne 0x42598c
  42598c:	add    DWORD PTR [rdi-0x80],esi
  42598f:	add    BYTE PTR [rcx],al
  425991:	jbe    0x425993
  425993:	add    BYTE PTR [rcx],al
  425995:	add    al,0x0
  425997:	add    BYTE PTR [rcx],al
  425999:	cld    
  42599a:	add    BYTE PTR [rax],al
  42599c:	add    DWORD PTR [rax+rax*1],eax
  42599f:	add    BYTE PTR [rcx],al
  4259a1:	and    al,0x0
  4259a3:	add    BYTE PTR [rcx],al
  4259a5:	je     0x4259a7
  4259a7:	add    BYTE PTR [rcx],al
  4259a9:	je     0x4259ab
  4259ab:	add    BYTE PTR [rdi],al
  4259ad:	add    al,0x0
  4259af:	add    BYTE PTR [rdi],al
  4259b1:	cld    
  4259b2:	add    BYTE PTR [rax],al
  4259b4:	(bad)  
  4259b5:	cld    
  4259b6:	add    BYTE PTR [rax],al
  4259b8:	(bad)  
  4259b9:	cld    
  4259ba:	add    BYTE PTR [rax],al
  4259bc:	(bad)  
  4259bd:	cld    
  4259be:	add    BYTE PTR [rax],al
  4259c0:	(bad)  
  4259c1:	clc    
  4259c2:	add    BYTE PTR [rax],al
  4259c4:	add    esp,eax
  4259c6:	add    BYTE PTR [rax],al
  4259c8:	add    eax,eax
  4259ca:	add    BYTE PTR [rax],al
  4259cc:	add    ah,bh
  4259ce:	add    BYTE PTR [rax],al
  4259d0:	(bad)  
  4259d1:	clc    
  4259d2:	add    BYTE PTR [rax],al
  4259d4:	add    esi,eax
  4259d6:	add    BYTE PTR [rax],al
  4259d8:	add    eax,esp
  4259da:	add    BYTE PTR [rax],al
  4259dc:	add    al,ah
  4259de:	add    BYTE PTR [rax],al
  4259e0:	add    al,bh
  4259e2:	add    BYTE PTR [rax],al
  4259e4:	add    edi,edi
  4259e6:	add    al,ah
  4259e8:	(bad)  
  4259e9:	jmp    rcx
  4259eb:	clc    
  4259ec:	jg     0x425a16
  4259ee:	add    BYTE PTR [rax],al
  4259f0:	add    BYTE PTR [rax],dl
  4259f2:	add    BYTE PTR [rax],al
  4259f4:	add    BYTE PTR [rax],ah
  4259f6:	add    BYTE PTR [rax],al
  4259f8:	add    BYTE PTR [rcx],al
  4259fa:	add    BYTE PTR [rax],ah
  4259fc:	add    BYTE PTR [rax],al
  4259fe:	add    BYTE PTR [rax],al
  425a00:	add    BYTE PTR [rax+0x4],al
	...
  425a13:	add    BYTE PTR [rax],al
  425a15:	mov    eax,0xb8ff9aa7
  425a1a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  425a1b:	(bad)  
  425a1c:	(bad)  
  425a1d:	mov    eax,0xff9aa7
	...
  425a52:	add    BYTE PTR [rax],al
  425a54:	add    bl,ch
  425a56:	fxch   st(3)
  425a58:	inc    DWORD PTR [rax]
  425a5a:	add    BYTE PTR [rax],al
  425a5c:	add    BYTE PTR [rax+0xff9aa7],bh
	...
  425a6e:	add    BYTE PTR [rax],al
  425a70:	add    BYTE PTR [rdx-0x5c],dl
  425a73:	push   0xffffffffffffffff
  425a75:	cmp    BYTE PTR [rbp+rax*2+0x387e2bff],cl
  425a7c:	hlt    
  425a7d:	(bad)  
  425a7e:	outs   dx,BYTE PTR ds:[rsi]
  425a7f:	sub    eax,0x306e21f4
  425a84:	hlt    
  425a85:	sbb    BYTE PTR [rsi+0x27],ah
  425a88:	hlt    
  425a89:	adc    BYTE PTR [rbp+0x21],bl
  425a8c:	hlt    
  425a8d:	or     al,0x50
  425a8f:	sbb    bh,bh
  425a91:	add    BYTE PTR [rax],al
  425a93:	add    BYTE PTR [rax],al
  425a95:	jmp    0x425a70
  425a97:	retf   
  425a98:	(bad)  
  425a99:	jmp    0x425a74
  425a9b:	retf   
  425a9c:	(bad)  
  425a9d:	mov    eax,0xff9aa7
	...
  425aaa:	add    BYTE PTR [rax],al
  425aac:	add    BYTE PTR [rip+0x52e3a37a],dh        # 0x5325fe2c
  425ab2:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  425ab3:	push   0xffffffffffffffff
  425ab5:	(bad)  
  425ab6:	sar    BYTE PTR [rax-0x1],0x35
  425aba:	jbe    0x425b01
  425abc:	push   QWORD PTR [rbx]
  425abe:	(bad)  
  425abf:	(bad)  
  425ac0:	call   FWORD PTR [rdx]
  425ac2:	mov    DWORD PTR [rdi],esi
  425ac4:	call   QWORD PTR [rsi+rax*4]
  425ac7:	xor    eax,0x317f12ff
  425acc:	inc    DWORD PTR [rdx+rsi*2]
  425acf:	and    eax,0xff
	...
  425ae4:	add    BYTE PTR [rbx-0x77],cl
  425ae7:	lods   eax,DWORD PTR ds:[rsi]
  425ae8:	dec    DWORD PTR [rbx-0x77]
  425aeb:	lods   eax,DWORD PTR ds:[rsi]
  425aec:	inc    DWORD PTR [rax-0x75]
  425aef:	mov    ebp,0x6aa452f8
  425af4:	call   FWORD PTR [rcx-0x4a]
  425af7:	outs   dx,BYTE PTR ds:[rsi]
  425af8:	push   rcx
  425afa:	push   rdi
  425afc:	push   QWORD PTR [rbx]
  425afe:	(bad)  
  425aff:	(bad)  
  425b00:	jmp    FWORD PTR [rdi]
  425b02:	gs cmp al,0xff
  425b05:	sub    eax,0x45ff4076
  425b0a:	mov    dl,BYTE PTR [rdi-0x1]
  425b0d:	or     eax,0xff2d82
  425b12:	add    BYTE PTR [rax],al
  425b14:	add    BYTE PTR [rax-0x47006559],bh
  425b1a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  425b1b:	(bad)  
  425b1c:	(bad)  
  425b1d:	mov    eax,0x4bff9aa7
  425b22:	mov    DWORD PTR [rbp-0x223f7501],ebp
  425b28:	call   rcx
  425b2a:	call   0xffffffff97905b22
  425b2f:	enter  0x52f1,0xa4
  425b33:	push   0xffffffffffffffff
  425b35:	test   ebp,ebx
  425b37:	nop
  425b38:	call   FWORD PTR [rcx-0x4a]
  425b3b:	outs   dx,BYTE PTR ds:[rsi]
  425b3c:	push   rcx
  425b3e:	push   rdi
  425b40:	push   QWORD PTR [rbx]
  425b42:	(bad)  
  425b43:	(bad)  
  425b44:	push   rcx
  425b46:	push   rdi
  425b48:	(bad)  
  425b49:	jl     0x425b00
  425b4b:	mov    edi,edi
  425b4d:	or     al,0x7d
  425b4f:	sub    bh,bh
  425b51:	add    BYTE PTR [rax],al
  425b53:	add    BYTE PTR [rax],al
  425b55:	jmp    0x425b30
  425b57:	retf   
  425b58:	inc    DWORD PTR [rax]
  425b5a:	add    BYTE PTR [rax],al
  425b5c:	add    BYTE PTR [rax+0x46ff9aa7],bh
  425b62:	xchg   ebx,eax
  425b63:	mov    ebx,0xe4c58fff
  425b68:	jmp    FWORD PTR [rdi+0x51ffe6d3]
  425b6e:	fwait
  425b6f:	(bad)  
  425b70:	lock push rdx
  425b72:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  425b73:	push   0xffffffffffffffff
  425b75:	xchg   edx,eax
  425b76:	jrcxz  0x425b14
  425b78:	call   FWORD PTR [rcx-0x4a]
  425b7b:	outs   dx,BYTE PTR ds:[rsi]
  425b7c:	call   FWORD PTR [rcx-0x4a]
  425b7f:	outs   dx,BYTE PTR ds:[rsi]
  425b80:	(bad)  
  425b81:	(bad)  
  425b82:	(bad)  
  425b83:	(bad)  
  425b84:	(bad)  
  425b85:	(bad)  
  425b86:	(bad)  
  425b87:	(bad)  
  425b88:	dec    DWORD PTR [rsp+rsi*4-0x7fe5006b]
  425b8f:	xor    eax,0xff
  425b94:	add    bl,ch
  425b96:	fxch   st(3)
  425b98:	(bad)  
  425b99:	jmp    0x425b74
  425b9b:	retf   
  425b9c:	(bad)  
  425b9d:	mov    eax,0x55ff9aa7
  425ba2:	popf   
  425ba3:	(bad)  
  425ba4:	(bad)  
  425ba5:	jns    0x425b64
  425ba7:	loop   0x425ba8
  425ba9:	gs scas al,BYTE PTR es:[rdi]
  425bab:	(bad)  
  425bac:	call   QWORD PTR [rsi-0x5e]
  425baf:	sar    ecx,1
  425bb1:	push   rdx
  425bb2:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  425bb3:	push   0xffffffffffffffff
  425bb5:	xchg   edi,eax
  425bb6:	out    0x9e,eax
  425bb8:	(bad)  
  425bb9:	jp     0x425b8a
  425bbb:	mov    edi,?
  425bbd:	icebp  
  425bbe:	push   rdi
  425bc0:	push   rcx
  425bc2:	push   rdi
  425bc4:	push   rbp
  425bc6:	(bad)  
  425bc7:	stc    
  425bc8:	call   FWORD PTR [rsi+0x25ffacd7]
  425bce:	mov    ?,WORD PTR [rdi]
  425bd0:	inc    DWORD PTR [rax]
	...
  425bde:	add    BYTE PTR [rax],al
  425be0:	add    BYTE PTR [rbx-0x5d],bl
  425be3:	retf   0x8fff
  425be6:	int    0xec
  425be8:	push   QWORD PTR [rdi+0x78fff1de]
  425bee:	mov    edx,0xa452ffdf
  425bf3:	push   0xffffffffffffffff
  425bf5:	mov    ebx,0xbcffb4f6
  425bfa:	cli    
  425bfb:	sar    edi,0xaa
  425bfe:	out    dx,al
  425bff:	mov    al,0xff
  425c01:	movabs eax,ds:0xa0ffa3e59bffa7e7
  425c0a:	jmp    0xffffffffb69d5bb6
  425c0f:	imul   edi,edi,0x0
  425c12:	add    BYTE PTR [rax],al
  425c14:	add    BYTE PTR [rax-0x47006559],bh
  425c1a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  425c1b:	(bad)  
  425c1c:	(bad)  
  425c1d:	mov    eax,0x5dff9aa7
  425c22:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  425c23:	int    0xff
  425c25:	movabs ds:0x61ffe9d9bafff3d8,eax
  425c2e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  425c2f:	int    0xff
  425c31:	push   rax
  425c32:	movabs al,ds:0xa964ff68a964ffc9
  425c3b:	push   0x68a964ff
  425c40:	jmp    QWORD PTR [rcx+rbp*4+0x68]
  425c44:	jmp    QWORD PTR [rcx+rbp*4+0x68]
  425c48:	jmp    QWORD PTR [rcx+rbp*4+0x68]
  425c4c:	(bad)  
  425c4d:	(bad)  
  425c4e:	or     DWORD PTR [rax-0x1],0x0
  425c52:	add    BYTE PTR [rax],al
  425c54:	add    bl,ch
  425c56:	fxch   st(3)
  425c58:	inc    DWORD PTR [rax]
  425c5a:	add    BYTE PTR [rax],al
  425c5c:	add    BYTE PTR [rax-0x45006559],bh
  425c62:	fldl2t 
  425c64:	jmp    FWORD PTR [rbx+rbp*4-0x34]
  425c68:	jmp    FWORD PTR [rdi-0x53]
  425c6b:	sar    bh,1
  425c6d:	rex.WXB cdqe 
  425c6f:	sar    edi,0xd
  425c72:	pop    rsp
  425c73:	mov    bh,bh
  425c75:	add    BYTE PTR [rcx+0x6f],al
  425c78:	jmp    QWORD PTR [rdx]
  425c7a:	jb     0x425c19
  425c7c:	call   FWORD PTR [rcx-0x61]
  425c7f:	(bad)  
  425c80:	call   QWORD PTR [rbp-0x66]
  425c83:	mov    edi,0x8f672fff
  425c88:	inc    DWORD PTR [rdi]
  425c8a:	es push rsp
  425c8c:	inc    DWORD PTR [rax]
  425c8e:	add    BYTE PTR [rax],al
  425c90:	add    BYTE PTR [rax],al
  425c92:	add    BYTE PTR [rax],al
  425c94:	add    bl,ch
  425c96:	fxch   st(3)
  425c98:	(bad)  
  425c99:	jmp    0x425c74
  425c9b:	retf   
  425c9c:	(bad)  
  425c9d:	mov    eax,0xbaff9aa7
  425ca2:	fldl2t 
  425ca4:	(bad)  
  425ca5:	mov    edx,0x45ffe9d9
  425caa:	sub    DWORD PTR [rbx-0x7baae401],0xffffffff
  425cb1:	add    edi,DWORD PTR [rax+rsi*2]
  425cb4:	dec    DWORD PTR [rax]
  425cb6:	push   rdi
  425cb7:	mov    edi,edi
  425cb9:	sub    eax,0x2cffb988
  425cbe:	sub    DWORD PTR [rdi-0x426ab801],0xcaa661ff
  425cc8:	call   FWORD PTR [rbx-0x64]
  425ccb:	sar    edi,0x47
  425cce:	jg     0x425c74
  425cd0:	std    
	...
  425cd9:	push   0x3bffb298
  425cde:	jge    0x425c85
  425ce0:	jmp    0xffffffffffe9d81c
  425ce5:	mov    edx,0xffe9d9
  425cea:	and    DWORD PTR [rdi+rdi*8+0x0],edx
  425cee:	sbb    al,0x4b
  425cf0:	inc    DWORD PTR [rax]
  425cf2:	(bad)  
  425cf3:	pop    rdx
  425cf4:	dec    DWORD PTR [rsi]
  425cf6:	pop    rsi
  425cf7:	mov    ?,edi
  425cf9:	rex.B (bad) 
  425cfb:	enter  0x3dff,0x95
  425cff:	(bad)  
  425d00:	push   QWORD PTR [rdx+rcx*4]
  425d03:	mov    ecx,0xa77722ff
  425d08:	jmp    FWORD PTR [rdx]
  425d0a:	js     0x425cb0
  425d0c:	jmp    FWORD PTR [rsi]
  425d0e:	imul   edx,DWORD PTR [rax-0x5a7fb717],0xff
  425d18:	add    BYTE PTR [rax],al
  425d1a:	add    BYTE PTR [rax],al
  425d1c:	add    BYTE PTR [rax-0x58],bh
  425d1f:	leave  
  425d20:	push   QWORD PTR [rbx-0x4c]
  425d23:	(bad)  
  425d25:	cmp    ecx,DWORD PTR [rbp+0x6414ffbc]
  425d2b:	xchg   edi,eax
  425d2c:	inc    DWORD PTR [rbx]
  425d2e:	rex.X jne 0x425d30
  425d31:	add    BYTE PTR [rcx],ch
  425d33:	pop    rdx
  425d34:	call   QWORD PTR [rax]
  425d36:	(bad)  
  425d37:	nop
  425d38:	inc    DWORD PTR [rbx-0x67]
  425d3b:	(bad)  
  425d3c:	jmp    FWORD PTR [rip+0x2affb281]        # 0x2b420fc3
  425d42:	xor    DWORD PTR [rbp-0x457bdd01],0xbf8d2dff
  425d4c:	push   QWORD PTR [rdi]
  425d4e:	(bad)  
  425d4f:	lods   eax,DWORD PTR ds:[rsi]
  425d50:	repnz add BYTE PTR [rax],al
  425d53:	add    BYTE PTR [rax],al
  425d55:	add    BYTE PTR [rax],al
  425d57:	add    BYTE PTR [rax],al
  425d59:	js     0x425d03
  425d5b:	leave  
  425d5c:	(bad)  
  425d5d:	mov    ebp,0xc8fffce5
  425d62:	out    dx,eax
  425d63:	(bad)  
  425d64:	call   FWORD PTR [rdi+0x65fffada]
  425d6a:	mov    bh,0xe1
  425d6c:	push   QWORD PTR [rbx]
  425d6e:	xchg   edx,eax
  425d6f:	(bad)  
  425d72:	imul   ebx,DWORD PTR [rsi-0x709ee801],0xb0822dff
  425d7c:	push   QWORD PTR [rdi+rcx*4]
  425d7f:	sar    edi,0x4b
  425d82:	movabs ds:0xc781ffe3b96affd2,al
  425d8b:	in     al,dx
  425d8c:	inc    DWORD PTR [rax+0x58ffe7c3]
  425d92:	xchg   ebp,eax
  425d93:	mov    esi,0xf3
  425d98:	add    BYTE PTR [rax],al
  425d9a:	add    BYTE PTR [rax],al
  425d9c:	add    BYTE PTR [rax-0x58],bh
  425d9f:	leave  
  425da0:	(bad)  
  425da1:	js     0x425d4b
  425da3:	leave  
  425da4:	jmp    QWORD PTR [rax-0x66000f2d]
  425daa:	shl    bl,cl
  425dac:	(bad)  
  425dad:	js     0x425d72
  425daf:	(bad)  
  425db0:	(bad)  
  425db1:	ds cwde 
  425db3:	enter  0xe5,0x0
  425db7:	add    BYTE PTR [rax],al
  425db9:	rex.X xchg ecx,eax
  425dbb:	mov    esi,0xe8c175e9
  425dc0:	call   QWORD PTR [rcx-0x6c001032]
  425dc6:	retf   0xffea
  425dc9:	js     0x425d73
  425dcb:	leave  
  425dcc:	(bad)  
  425dcd:	js     0x425d77
  425dcf:	leave  
  425dd0:	inc    DWORD PTR [rax]
	...
  425de2:	add    BYTE PTR [rax],al
  425de4:	add    BYTE PTR [rax-0x58],bh
  425de7:	leave  
  425de8:	(bad)  
  425de9:	js     0x425d93
  425deb:	leave  
  425dec:	(bad)  
  425ded:	js     0x425d97
  425def:	leave  
  425df0:	inc    DWORD PTR [rax]
	...
  425dfa:	add    BYTE PTR [rax],al
  425dfc:	add    BYTE PTR [rax-0x58],bh
  425dff:	leave  
  425e00:	(bad)  
  425e01:	jnp    0x425dbd
  425e03:	fsubp  st(2),st
  425e05:	js     0x425daf
  425e07:	leave  
  425e08:	inc    DWORD PTR [rax]
	...
  425e12:	add    BYTE PTR [rax],al
  425e14:	add    BYTE PTR [rdi],bl
  425e16:	inc    DWORD PTR [rax]
  425e18:	add    BYTE PTR [rsi+0x1],bl
  425e1b:	add    BYTE PTR [rax],al
  425e1d:	sbb    al,0x1
  425e1f:	add    BYTE PTR [rax],al
  425e21:	lock add DWORD PTR [rax],eax
  425e24:	add    BYTE PTR [rax],al
  425e26:	add    DWORD PTR [rax],eax
  425e28:	add    BYTE PTR [rax+0x1],al
  425e2b:	add    BYTE PTR [rax],al
  425e2d:	add    BYTE PTR [rcx],al
  425e2f:	add    BYTE PTR [rax],al
  425e31:	loopne 0x425e34
  425e33:	add    BYTE PTR [rax],al
  425e35:	add    BYTE PTR [rcx],al
  425e37:	add    BYTE PTR [rax],al
  425e39:	rex add eax,DWORD PTR [rax]
  425e3c:	add    BYTE PTR [rax],al
  425e3e:	add    DWORD PTR [rax],eax
  425e40:	add    BYTE PTR [rax-0x40000000],al
  425e46:	add    DWORD PTR [rax],eax
  425e48:	add    BYTE PTR [rax-0x40000000],al
  425e4e:	add    DWORD PTR [rax],0xc7f100
  425e54:	add    BYTE PTR [rbx],cl
  425e56:	add    BYTE PTR [rcx],al
  425e59:	add    BYTE PTR [rax],al
  425e5b:	add    bh,bh
  425e5d:	(bad)  
  425e5e:	(bad)  
  425e5f:	inc    DWORD PTR [rcx]
  425e61:	add    BYTE PTR [rax],al
  425e63:	add    BYTE PTR [rax],al
  425e65:	add    BYTE PTR [rax],al
  425e67:	add    BYTE PTR [rdx+rax*1],cl
  425e6a:	add    BYTE PTR [rax],al
  425e6c:	add    BYTE PTR [rcx+0x53],dl
  425e6f:	jns    0x425ee4
  425e71:	je     0x425ed8
  425e73:	ins    DWORD PTR es:[rdi],dx
  425e74:	cs rex.R jb 0x425ed9
  425e78:	ja     0x425ee3
  425e7a:	outs   dx,BYTE PTR ds:[rsi]
  425e7b:	addr32 sub al,0x20
  425e7e:	push   rsi
  425e7f:	gs jb  0x425ef5
  425e82:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  425e89:	xor    BYTE PTR cs:[rsi],ch
  425e8c:	xor    BYTE PTR [rax+riz*1],ch
  425e8f:	rex.XB jne 0x425efe
  425e92:	je     0x425f09
  425e94:	jb     0x425efb
  425e96:	cmp    eax,0x7475656e
  425e9b:	jb     0x425efe
  425e9d:	ins    BYTE PTR es:[rdi],dx
  425e9e:	sub    al,0x20
  425ea0:	push   rax
  425ea1:	jne    0x425f05
  425ea3:	ins    BYTE PTR es:[rdi],dx
  425ea4:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  425eab:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  425eaf:	(bad)  
  425eb0:	xor    BYTE PTR [rbx],dh
  425eb2:	xor    ax,0x3766
  425eb6:	xor    WORD PTR [rcx],si
  425eb9:	fs xor eax,0x61336130
  425ebf:	add    eax,0x1
  425ec4:	adc    edx,DWORD PTR [rbx+0x79]
  425ec7:	jae    0x425f3d
  425ec9:	gs ins DWORD PTR es:[rdi],dx
  425ecb:	cs rex.R jb 0x425f30
  425ecf:	ja     0x425f3a
  425ed1:	outs   dx,BYTE PTR ds:[rsi]
  425ed2:	movsxd rbp,DWORD PTR cs:[r15d+0x6e]
  425ed8:	add    al,BYTE PTR [rax]
  425eda:	add    BYTE PTR [rax],al
  425edc:	or     BYTE PTR [rcx+0x63],cl
  425edf:	outs   dx,DWORD PTR ds:[rsi]
  425ee0:	outs   dx,BYTE PTR ds:[rsi]
  425ee1:	rex.R (bad) 
  425ee3:	je     0x425f46
  425ee5:	or     BYTE PTR [rcx+0x63],cl
  425ee8:	outs   dx,DWORD PTR ds:[rsi]
  425ee9:	outs   dx,BYTE PTR ds:[rsi]
  425eea:	push   rbx
  425eeb:	imul   edi,DWORD PTR [rdx+0x65],0x13020407
  425ef2:	push   rbx
  425ef3:	jns    0x425f68
  425ef5:	je     0x425f5c
  425ef7:	ins    DWORD PTR es:[rdi],dx
  425ef8:	cs rex.R jb 0x425f5d
  425efc:	ja     0x425f67
  425efe:	outs   dx,BYTE PTR ds:[rsi]
  425eff:	addr32 cs push rbx
  425f02:	imul   edi,DWORD PTR [rdx+0x65],0x2
  425f09:	add    al,BYTE PTR [rax]
  425f0b:	add    BYTE PTR [rax],al
  425f0d:	or     DWORD PTR [rbx],eax
  425f0f:	add    BYTE PTR [rax],al
  425f11:	add    BYTE PTR [rip+0xfffffffffffffffc],al        # 0x425f13
  425f17:	adc    edx,DWORD PTR [rbx+0x79]
  425f1a:	jae    0x425f90
  425f1c:	gs ins DWORD PTR es:[rdi],dx
  425f1e:	cs rex.R jb 0x425f83
  425f22:	ja     0x425f8d
  425f24:	outs   dx,BYTE PTR ds:[rsi]
  425f25:	addr32 cs push rbx
  425f28:	imul   edi,DWORD PTR [rdx+0x65],0x2
  425f2f:	add    eax,0x74646977
  425f34:	push   0x69656806
  425f39:	addr32 push 0x8000074
  425f3f:	or     BYTE PTR [rdx],al
	...
  425f49:	add    BYTE PTR [rax],al
  425f4b:	add    BYTE PTR [rdi],cl
  425f4d:	add    eax,DWORD PTR [rax]
  425f4f:	add    BYTE PTR [rax],al
  425f51:	xchg   esi,eax
  425f52:	(bad)  
  425f53:	add    BYTE PTR [rax],al
  425f55:	add    al,BYTE PTR [rax]
  425f57:	add    BYTE PTR [rcx],al
  425f59:	add    BYTE PTR [rsi],al
  425f5b:	add    BYTE PTR [rax],ah
  425f5d:	and    BYTE PTR [rax],dl
  425f5f:	add    BYTE PTR [rcx],al
  425f61:	add    BYTE PTR [rax+rax*1],al
  425f64:	call   0x66425f6b
  425f69:	add    BYTE PTR [rax],al
  425f6b:	add    BYTE PTR [rax],dl
  425f6d:	adc    BYTE PTR [rax],dl
  425f6f:	add    BYTE PTR [rcx],al
  425f71:	add    BYTE PTR [rax+rax*1],al
  425f74:	sub    BYTE PTR [rcx],al
  425f76:	add    BYTE PTR [rax],al
  425f78:	rex.WRX add r8,QWORD PTR [rax]
  425f7b:	add    BYTE PTR [rax],ah
  425f7d:	and    BYTE PTR [rax],al
  425f7f:	add    BYTE PTR [rcx],al
  425f81:	add    BYTE PTR [rax],cl
  425f83:	add    BYTE PTR [rax+0x76000008],ch
  425f89:	add    al,0x0
  425f8b:	add    BYTE PTR [rax],dl
  425f8d:	adc    BYTE PTR [rax],al
  425f8f:	add    BYTE PTR [rcx],al
  425f91:	add    BYTE PTR [rax],cl
  425f93:	add    BYTE PTR [rax+0x5],ch
  425f96:	add    BYTE PTR [rax],al
  425f98:	(bad)  
  425f99:	or     eax,0x20200000
  425f9e:	add    BYTE PTR [rax],al
  425fa0:	add    DWORD PTR [rax],eax
  425fa2:	and    BYTE PTR [rax],al
  425fa4:	test   al,0x10
  425fa6:	add    BYTE PTR [rax],al
  425fa8:	xchg   BYTE PTR [rdx],dl
  425faa:	add    BYTE PTR [rax],al
  425fac:	adc    BYTE PTR [rax],dl
  425fae:	add    BYTE PTR [rax],al
  425fb0:	add    DWORD PTR [rax],eax
  425fb2:	and    BYTE PTR [rax],al
  425fb4:	push   0x2e000004
  425fb9:	and    eax,DWORD PTR [rax]
  425fbb:	add    BYTE PTR [rax],ch
  425fbd:	add    BYTE PTR [rax],al
  425fbf:	add    BYTE PTR [rax],ah
  425fc1:	add    BYTE PTR [rax],al
  425fc3:	add    BYTE PTR [rax+0x0],al
  425fc6:	add    BYTE PTR [rax],al
  425fc8:	add    DWORD PTR [rax],eax
  425fca:	add    al,0x0
  425fcc:	add    BYTE PTR [rax],al
  425fce:	add    BYTE PTR [rax],al
  425fd0:	add    BYTE PTR [rdx],al
	...
  425fea:	add    BYTE PTR [rax],0x0
  425fed:	add    BYTE PTR [rax],0x0
  425ff0:	add    BYTE PTR [rax+0x800080],al
  425ff6:	add    BYTE PTR [rax],al
  425ff8:	add    BYTE PTR [rax],0x80
  425ffb:	add    BYTE PTR [rax-0x7fffff80],al
  426001:	add    BYTE PTR [rax-0x3f3f4000],0x0
  426008:	add    BYTE PTR [rax],al
  42600a:	inc    DWORD PTR [rax]
  42600c:	add    bh,bh
  42600e:	add    BYTE PTR [rax],al
  426010:	add    bh,bh
  426012:	inc    DWORD PTR [rax]
  426014:	inc    DWORD PTR [rax]
  426016:	add    BYTE PTR [rax],al
  426018:	inc    DWORD PTR [rax]
  42601a:	inc    DWORD PTR [rax]
  42601c:	(bad)  
  42601d:	inc    DWORD PTR [rax]
  42601f:	add    bh,bh
  426021:	(bad)  
  426022:	inc    DWORD PTR [rax]
	...
  42602c:	ja     0x4260a4
  42602e:	ja     0x4260a0
	...
  426038:	add    BYTE PTR [rax],al
  42603a:	or     BYTE PTR [rdi+0x65],ah
  42603d:	gs fs jbe 0x4260b8
	...
  426049:	add    BYTE PTR [rsi+0x56],dh
  42604c:	jbe    0x426014
  42604e:	jl     0x4260cc
  426050:	addr32 (bad) 
  426052:	add    BYTE PTR [rax],al
  426054:	add    BYTE PTR [rax],al
  426056:	add    BYTE PTR [rax],al
  426058:	add    BYTE PTR [rdi],al
  42605a:	ins    BYTE PTR es:[rdi],dx
  42605b:	jl     0x4260c4
  42605d:	jl     0x4260d5
  42605f:	addr32 mov edi,0x0
  426066:	add    BYTE PTR [rax],al
  426068:	add    BYTE PTR [rsi+0x7c],dh
  42606b:	xchg   BYTE PTR [rax+0x67],dh
  42606e:	mov    edi,0x707466
  426074:	add    BYTE PTR [rax],al
  426076:	add    BYTE PTR [rax],al
  426078:	(bad)  
  426079:	ins    BYTE PTR es:[rdi],dx
  42607a:	xchg   BYTE PTR [rdi+riz*2+0x67],bh
  42607e:	out    0xc7,eax
  426080:	mov    esi,0x76
  426086:	add    BYTE PTR [rax],al
  426088:	xchg   BYTE PTR [rdi-0x38],dh
  42608b:	out    0x62,eax
  42608d:	push   rsi
  42608e:	enter  0xc767,0x67
  426092:	rex.RXB jo 0x426095
  426095:	add    BYTE PTR [rax],al
  426097:	add    BYTE PTR [rsp+rcx*4-0x19],bh
  42609b:	enter  0x2746,0x7c
  42609f:	mov    edi,fs
  4260a1:	fs es push rax
  4260a4:	add    BYTE PTR [rax],al
  4260a6:	add    BYTE PTR [rax],al
  4260a8:	jle    0x426122
  4260aa:	enter  0x368c,0x26
  4260ae:	addr32 out 0xc7,eax
  4260b1:	addr32 jo 0x426124
  4260b4:	add    BYTE PTR [rax],al
  4260b6:	add    BYTE PTR [rax],cl
  4260b8:	jl     0x426048
  4260ba:	mov    edi,fs
  4260bc:	data16 es jl 0x42604c
  4260c0:	mov    WORD PTR [rax+0x66],?
  4260c3:	add    BYTE PTR [eax],al
  4260c6:	add    BYTE PTR [rax],cl
  4260c8:	enter  0xc8c8,0x86
  4260cc:	(bad)  
  4260cd:	movsxd ebp,DWORD PTR [rax-0x19]
  4260d0:	movsxd ax,DWORD PTR [edi+0x0]
  4260d5:	add    BYTE PTR [rax],al
  4260d7:	or     al,ch
  4260d9:	call   0x7ea946c6
  4260de:	mov    WORD PTR [rdi+riz*2+0x76676727],es
  4260e5:	push   rsi
  4260e6:	push   rsi
  4260e7:	rex.RXB
  4260e8:	rex.R push rsp
  4260ea:	push   rsp
  4260eb:	addr32 addr32 mov al,ch
  4260ef:	(bad)
  4260f6:	mov    BYTE PTR [rdi+0x63878888],al
  4260fc:	push   0x62c7c8e7
  426101:	jbe    0x42616a
  426103:	(bad)  
  426104:	js     0x4260fe
  426106:	mov    al,bh
  426108:	mov    BYTE PTR [rax+0x78884788],cl
  42610e:	mov    cs,WORD PTR [rsi+rsi*2+0x78573636]
  426115:	(bad)  
  426116:	clc    
  426117:	clc    
  426118:	clc    
  426119:	mov    BYTE PTR [rsi+0x7ce76856],cl
  42611f:	mov    ?,WORD PTR [rsi]
  426121:	jbe    0x426199
  426123:	addr32 js 0x42611e
  426126:	push   0xffffffff888888f8
  42612b:	addr32 jbe 0x4260b6
  42612e:	mov    cs,WORD PTR [rsi+rsi*2+0x78703636]
  426135:	test   BYTE PTR [rax+rdi*8+0x6788778e],0xb7
  42613d:	jle    0x4261bb
  42613f:	mov    ?,WORD PTR [rdx+0x7a]
  426142:	jbe    0x4261b4
  426144:	js     0x42613e
  426146:	push   0xffffffff888f8ff8
  42614b:	addr32 jbe 0x4260d5
  42614e:	mov    al,cl
  426150:	data16 jbe 0x4261c5
  426153:	jo     0x4261cd
  426155:	(bad)  
  426156:	dec    DWORD PTR [rdi+0x4888f8f8]
  42615c:	js     0x426145
  42615e:	addr32 out 0x76,eax
  426161:	addr32 (bad) 
  426163:	add    BYTE PTR [rdi-0x8],bh
  426166:	push   0xfffffffff8f8f8f8
  42616b:	add    DWORD PTR [esi+0x67686777],0x60
  426173:	add    BYTE PTR [rdi-0xa],ch
  426176:	jl     0x426170
  426178:	js     0x4261e1
  42617a:	mov    BYTE PTR [rdi+0x77],ah
  42617d:	out    0x77,eax
  42617f:	jbe    0x4261fd
  426181:	ja     0x426103
  426183:	add    BYTE PTR [rdi-0x8],bh
  426186:	iret   
  426187:	(bad)  
  426188:	clc    
  426189:	dec    DWORD PTR [rax+0x7a777767]
  42618f:	ja     0x426178
  426191:	jo     0x426193
  426193:	add    BYTE PTR [rax-0x1],bh
  426196:	(bad)  
  426197:	clc    
  426198:	(bad)  
  426199:	clc    
  42619a:	clc    
  42619b:	rex.W xchg BYTE PTR [rdi-0x49],sil
  42619f:	ja     0x426219
  4261a1:	add    BYTE PTR [rax],al
  4261a3:	add    BYTE PTR [rdi-0x8],bh
  4261a6:	push   0xfffffffff88fffff
  4261ab:	(bad)  
  4261ac:	mov    BYTE PTR [rdi+0x88e8],al
  4261b2:	add    BYTE PTR [rax],al
  4261b4:	jg     0x4261ac
  4261b6:	mov    edi,?
  4261b8:	xchg   DWORD PTR [rsi-0x8],esi
  4261bb:	(bad)  
	...
  4261c4:	jg     0x4261be
  4261c6:	push   0xfffffffff8ffffff
  4261cb:	add    BYTE PTR [rax],al
  4261ce:	add    BYTE PTR [rax],al
  4261d0:	add    BYTE PTR [rax],al
  4261d2:	add    BYTE PTR [rax],al
  4261d4:	(bad)  
  4261d5:	(bad)  
  4261d6:	(bad)  
  4261d7:	(bad)  
  4261d8:	(bad)  
  4261d9:	clc    
  4261da:	js     0x42623c
	...
  4261e4:	jg     0x4261e5
  4261e6:	(bad)  
  4261e7:	(bad)  
  4261e8:	push   rdi
  4261ea:	fs jo  0x4261ed
  4261ed:	add    BYTE PTR [rax],al
  4261ef:	add    BYTE PTR [rax],al
  4261f1:	add    BYTE PTR [rax],al
  4261f3:	add    BYTE PTR [rdi-0x1],cl
  4261f9:	div    edi
	...
  426203:	add    BYTE PTR [rdi-0x1],cl
  426209:	mul    DWORD PTR [rax+0x0]
	...
  426214:	js     0x42628d
  426216:	ja     0x42628f
  426218:	addr32 add BYTE PTR [eax],al
	...
  426224:	(bad)  
  426225:	inc    DWORD PTR [rcx]
  426227:	(bad)  
  426228:	(bad)  
  426229:	clc    
  42622a:	add    BYTE PTR [rdi],bh
  42622c:	push   rax
  42622e:	add    BYTE PTR [rdi],bl
  426230:	jmp    rax
  426232:	add    BYTE PTR [rdi],cl
  426234:	inc    eax
  426236:	add    BYTE PTR [rdi],al
  426238:	inc    DWORD PTR [rax+0xff0300]
  42623e:	add    BYTE PTR [rcx],al
  426240:	inc    DWORD PTR [rax]
  426242:	add    BYTE PTR [rcx],al
  426244:	inc    DWORD PTR [rax]
  426246:	add    BYTE PTR [rcx],al
  426248:	inc    BYTE PTR [rax]
  42624a:	add    BYTE PTR [rax],al
  42624c:	inc    BYTE PTR [rax]
  42624e:	add    BYTE PTR [rax],al
  426250:	inc    BYTE PTR [rax]
	...
  426266:	add    BYTE PTR [rcx],al
  426268:	add    BYTE PTR [rax],al
  42626a:	add    BYTE PTR [rcx],al
  42626c:	add    BYTE PTR [rax],al
  42626e:	add    BYTE PTR [rcx],al
  426270:	add    BYTE PTR [rax],al
  426272:	add    BYTE PTR [rbx],al
  426274:	add    BYTE PTR [rax],al
  426276:	add    BYTE PTR [rdi],al
  426278:	add    BYTE PTR [rax],al
  42627a:	add    BYTE PTR [rdi],al
  42627c:	add    BYTE PTR [rax],al
  42627e:	add    BYTE PTR [rdi],bl
  426280:	add    BYTE PTR [rax],al
  426282:	add    BYTE PTR [rdi],bh
  426284:	add    BYTE PTR [rcx],al
  426286:	add    bh,bh
  426288:	add    BYTE PTR [rcx],al
  42628a:	(bad)  
  42628b:	inc    DWORD PTR [rax]
  42628d:	add    edi,edi
  42628f:	inc    DWORD PTR [rax]
  426291:	add    edi,edi
  426293:	inc    DWORD PTR [rax]
  426295:	add    edi,edi
  426297:	inc    DWORD PTR [rax]
  426299:	add    edi,edi
  42629b:	inc    DWORD PTR [rax]
  42629d:	(bad)  
  42629e:	(bad)  
  42629f:	inc    DWORD PTR [rax]
  4262a1:	ud0    edi,edi
  4262a4:	sub    BYTE PTR [rax],al
  4262a6:	add    BYTE PTR [rax],al
  4262a8:	adc    BYTE PTR [rax],al
  4262aa:	add    BYTE PTR [rax],al
  4262ac:	and    BYTE PTR [rax],al
  4262ae:	add    BYTE PTR [rax],al
  4262b0:	add    DWORD PTR [rax],eax
  4262b2:	add    al,0x0
  4262b4:	add    BYTE PTR [rax],al
  4262b6:	add    BYTE PTR [rax],al
  4262b8:	add    BYTE PTR [rax],0x0
	...
  4262cf:	add    BYTE PTR [rax],al
  4262d1:	add    BYTE PTR [rax+0x800000],al
  4262d7:	add    BYTE PTR [rax],al
  4262d9:	add    BYTE PTR [rax+0x8000],0x0
  4262e0:	add    BYTE PTR [rax],0x80
  4262e3:	add    BYTE PTR [rax-0x7fffff80],al
  4262e9:	add    BYTE PTR [rax-0x3f3f4000],0x0
  4262f0:	add    BYTE PTR [rax],al
  4262f2:	inc    DWORD PTR [rax]
  4262f4:	add    bh,bh
  4262f6:	add    BYTE PTR [rax],al
  4262f8:	add    bh,bh
  4262fa:	inc    DWORD PTR [rax]
  4262fc:	inc    DWORD PTR [rax]
  4262fe:	add    BYTE PTR [rax],al
  426300:	inc    DWORD PTR [rax]
  426302:	inc    DWORD PTR [rax]
  426304:	(bad)  
  426305:	inc    DWORD PTR [rax]
  426307:	add    bh,bh
  426309:	(bad)  
  42630a:	inc    DWORD PTR [rax]
  42630c:	add    BYTE PTR [rax],al
  42630e:	add    BYTE PTR [rdi+0x7877],al
  426314:	add    BYTE PTR [rax],al
  426316:	(bad)  
  426317:	ins    BYTE PTR es:[edi],dx
  426319:	data16 jo 0x42631c
  42631c:	add    BYTE PTR [rax],al
  42631e:	ja     0x426386
  426320:	ja     0x42639e
  426322:	je     0x426324
  426324:	add    BYTE PTR [rdi],al
  426326:	jle    0x42637e
  426328:	es push rsi
  42632a:	jbe    0x42639c
  42632c:	add    BYTE PTR [rdi+0x67727677],al
  426332:	gs push 0x767e8e00
  426338:	addr32 jbe 0x4263ad
  42633b:	addr32 je 0x4263b2
  42633e:	push   rsp
  42633f:	ja     0x4263a9
  426341:	(bad)  
  426342:	es (bad) 
  426344:	js     0x4262d5
  426346:	pop    QWORD PTR [rsi+rcx*4+0x7f676276]
  42634d:	outs   dx,DWORD PTR ds:[rsi]
  42634e:	jbe    0x4262d6
  426350:	js     0x42631a
  426352:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  426353:	addr32 jg 0x42634e
  426356:	inc    DWORD PTR [rdi+0x78628e86]
  42635c:	jg     0x4263cd
  42635e:	ja     0x4262e4
  426360:	clc    
  426361:	ja     0x4263d9
  426363:	jo     0x4262f4
  426365:	dec    DWORD PTR [rdi-0x7999877a]
  42636b:	add    BYTE PTR [rdi+0x6f],bh
  42636e:	ja     0x4262f6
  426370:	mov    BYTE PTR [rax-0x70ff90],ch
  426376:	mul    DWORD PTR [rbp+0x78]
  426379:	mov    BYTE PTR [rax],al
  42637b:	add    BYTE PTR [rdi+0x80f7ff],cl
  426381:	add    BYTE PTR [rax],al
  426383:	add    BYTE PTR [rdi+0x7787],al
  426389:	add    BYTE PTR [rax],al
  42638b:	add    ah,bh
  42638d:	sldt   WORD PTR [rax]
  426390:	clc    
  426391:	(bad)  
  426392:	add    BYTE PTR [rax],al
  426394:	lock add eax,DWORD PTR [rax]
  426397:	add    al,ah
  426399:	add    DWORD PTR [rax],eax
  42639b:	add    al,al
  42639d:	add    BYTE PTR [rax],al
  42639f:	add    al,al
	...
  4263b5:	add    DWORD PTR [rax],eax
  4263b7:	add    BYTE PTR [rax],al
  4263b9:	add    eax,DWORD PTR [rax]
  4263bb:	add    BYTE PTR [rax],al
  4263bd:	(bad)  
  4263be:	add    BYTE PTR [rax],al
  4263c0:	add    BYTE PTR [rdi],cl
  4263c2:	add    BYTE PTR [rax],al
  4263c4:	add    edi,edi
  4263c6:	add    BYTE PTR [rax],al
  4263c8:	add    edi,edi
  4263ca:	add    BYTE PTR [rax],al
  4263cc:	sub    BYTE PTR [rax],al
  4263ce:	add    BYTE PTR [rax],al
  4263d0:	and    BYTE PTR [rax],al
  4263d2:	add    BYTE PTR [rax],al
  4263d4:	add    BYTE PTR [rax],al
  4263d7:	add    BYTE PTR [rcx],al
  4263d9:	add    BYTE PTR [rax],cl
  4263db:	add    BYTE PTR [rax],al
  4263dd:	add    BYTE PTR [rax],al
  4263df:	add    BYTE PTR [rax],al
  4263e1:	add    al,0x0
	...
  4263eb:	add    BYTE PTR [rax],al
  4263ed:	add    DWORD PTR [rax],eax
  4263ef:	add    BYTE PTR [rax],al
  4263f1:	add    DWORD PTR [rax],eax
  4263f3:	add    BYTE PTR [rax],al
  4263f5:	add    BYTE PTR [rax],al
  4263f7:	add    BYTE PTR [rsi],bh
  4263f9:	push   rsp
  4263fa:	sub    eax,DWORD PTR [rax]
  4263fc:	rex.X
  4263fd:	data16 (bad) 
  4263ff:	add    BYTE PTR [rdx+0x72],al
  426402:	adc    al,BYTE PTR [rax]
  426404:	rex.RB jl 0x426418
  426407:	add    BYTE PTR [rcx+0x7d],cl
  42640a:	sbb    al,BYTE PTR [rax]
  42640c:	rex.R
  42640d:	rex.WR
  42640e:	add    BYTE PTR es:[rdi+rcx*2+0x28],al
  426413:	add    BYTE PTR [rbx+0x56],al
  426416:	sub    eax,DWORD PTR [rax]
  426418:	rex.WXB push r14
  42641a:	sub    al,BYTE PTR [rax]
  42641c:	rex.XB pop r9
  42641e:	sub    al,BYTE PTR [rax]
  426420:	rex.WRB pop r11
  426422:	sub    DWORD PTR [rax],eax
  426424:	push   rsp
  426425:	push   rbp
  426426:	sub    eax,DWORD PTR [rax]
  426428:	push   rcx
  426429:	pop    rbx
  42642a:	sub    al,BYTE PTR [rax]
  42642c:	pop    rsp
  42642d:	pop    rsp
  42642e:	(bad)  
  42642f:	add    BYTE PTR [rsi+0x57],bl
  426432:	xor    BYTE PTR [rax],al
  426434:	push   rcx
  426435:	pop    rsi
  426436:	xor    al,BYTE PTR [rax]
  426438:	pop    rcx
  426439:	pop    rsp
  42643a:	add    BYTE PTR ss:[rbx+0x49],ah
  42643e:	xor    eax,0x32576a00
  426443:	add    BYTE PTR [rcx+rdx*2+0x3d],ch
  426447:	add    BYTE PTR [rsp+rbx*2+0x38],ah
  42644b:	add    BYTE PTR [rax+0x5c],ch
  42644e:	cmp    al,BYTE PTR [rax]
  426450:	jbe    0x4264a7
  426452:	add    BYTE PTR ss:[rax+0x5f],bh
  426456:	xor    eax,DWORD PTR [rax]
  426458:	rex.RB (bad) 
  42645a:	sub    DWORD PTR [rax],eax
  42645c:	rex.WB push 0x2c
  42645f:	add    BYTE PTR [rbx+0x61],dl
  426462:	sub    al,0x0
  426464:	rex.RB jp 0x426493
  426467:	add    BYTE PTR [rdi+0x7e],bl
  42646a:	and    eax,DWORD PTR [rax]
  42646c:	pop    rdx
  42646d:	jo     0x42649c
  42646f:	add    BYTE PTR [rcx+0x6b],dl
  426472:	xor    eax,0x32685c00
  426477:	add    BYTE PTR [rbp+0x62],bl
  42647a:	cmp    DWORD PTR [rax],eax
  42647c:	push   rax
  42647d:	imul   edi,DWORD PTR [rax],0x0
  426480:	rex.WXB jg 0x4264b6
  426483:	add    BYTE PTR [rcx+0x72],dl
  426486:	xor    eax,0x33725e00
  42648b:	add    BYTE PTR [rcx+0x7a],dl
  42648e:	xor    eax,0x337a5b00
  426493:	add    BYTE PTR [rcx+rsi*2+0x39],bl
  426497:	add    BYTE PTR [rdx+0x60],ah
  42649a:	xor    al,0x0
  42649c:	(bad)  
  42649d:	outs   dx,BYTE PTR ds:[rsi]
  42649e:	add    BYTE PTR ss:[rbx+0x64],dh
  4264a2:	cmp    DWORD PTR [rax],eax
  4264a4:	push   0x6a00367f
  4264a9:	jne    0x4264e7
  4264ab:	add    BYTE PTR [rsi+0x7a],ch
  4264ae:	cmp    eax,0x38747500
  4264b3:	add    BYTE PTR [rbp+0x7b],bh
  4264b6:	add    BYTE PTR ds:[rdx+0x59],dh
  4264ba:	add    BYTE PTR [rbp+0x5c],r15b
  4264be:	add    BYTE PTR [r9+r14*2+0x42],r11b
  4264c3:	add    BYTE PTR [rdx+0x74],bl
  4264c6:	rex.WXB add BYTE PTR [r11+r12*2+0x43],bpl
  4264cb:	add    BYTE PTR [rbx+0x64],dh
  4264ce:	add    BYTE PTR [rbp+r12*2+0x54],r15b
  4264d3:	add    BYTE PTR [rdi+rdx*2+0x5789003e],al
  4264da:	cmp    al,0x0
  4264dc:	test   DWORD PTR [rax+0x3e],ebx
  4264df:	add    BYTE PTR [rbp-0x64ffc1a6],cl
  4264e5:	pop    rax
  4264e6:	add    BYTE PTR ss:[rbx-0x5affc6a8],dl
  4264ed:	pop    rax
  4264ee:	xor    eax,DWORD PTR [rax]
  4264f0:	stos   BYTE PTR es:[rdi],al
  4264f1:	pop    rbx
  4264f2:	xor    eax,0x3a5da400
  4264f7:	add    BYTE PTR [rdi-0x4effc7a2],ch
  4264fd:	pop    rdi
  4264fe:	cmp    BYTE PTR [rax],al
  426500:	test   BYTE PTR [rdx+0x33],ch
  426503:	add    BYTE PTR [rdx-0x6cffc696],dl
  426509:	jns    0x426546
  42650b:	add    BYTE PTR [rax+riz*2+0x61a3002a],ah
  426512:	add    BYTE PTR ds:[rdx+riz*2+0x65ba003a],dh
  42651a:	cmp    eax,0x3f68bd00
  42651f:	add    BYTE PTR [rbx-0x7bffb6a1],al
  426525:	fs push rax
  426527:	add    BYTE PTR [rcx-0x75ffac99],cl
  42652d:	push   0x6d860053
  426532:	pop    rsp
  426533:	add    BYTE PTR [rdx-0x73ffa290],cl
  426539:	jnp    0x426598
  42653b:	add    BYTE PTR [rsi-0x5effbb97],ch
  426541:	push   0x67b2004a
  426546:	rex.X add BYTE PTR [rdi-0x42ffbf97],dil
  42654d:	jbe    0x426593
  42654f:	add    BYTE PTR [rdx-0x41ffa78b],ch
  426555:	jbe    0x4265a8
  426557:	add    BYTE PTR [rbx-0x70ff9e8e],cl
  42655d:	jnp    0x4265cc
  42655f:	add    BYTE PTR [rdx-0x65ff9f8c],dl
  426565:	js     0x4265ca
  426567:	add    BYTE PTR [rsi-0x45ff9183],dl
  42656d:	jle    0x4265cf
  42656f:	add    ah,al
  426571:	ins    BYTE PTR es:[rdi],dx
  426572:	rex.X add al,cl
  426575:	outs   dx,DWORD PTR ds:[rsi]
  426576:	add    dl,r9b
  426579:	jno    0x4265c0
  42657b:	add    dl,al
  42657d:	jns    0x4265c5
  42657f:	add    al,cl
  426581:	ja     0x4265d1
  426583:	add    dl,dl
  426585:	jbe    0x4265d0
  426587:	add    ch,dl
  426589:	js     0x4265d6
  42658b:	add    bl,bl
  42658d:	jl     0x4265dc
  42658f:	add    bh,cl
  426591:	jge    0x4265e7
  426593:	add    ah,al
  426595:	jg     0x4265f1
  426597:	add    BYTE PTR [rsp+rax*4+0x3],al
  42659b:	add    BYTE PTR [rbp-0x76],al
  42659e:	add    DWORD PTR [rax],eax
  4265a0:	rex.W adc BYTE PTR [rbx],0x0
  4265a4:	rex.WR sbb BYTE PTR [rax+rax*1],0x51
  4265a9:	xchg   DWORD PTR [rdx],ebx
  4265ab:	add    BYTE PTR [rax+rdx*4+0x10],cl
  4265af:	add    BYTE PTR [rdi-0x7b],cl
  4265b2:	and    eax,DWORD PTR [rax]
  4265b4:	push   rax
  4265b5:	xchg   BYTE PTR [rip+0x278e5900],ah        # 0x27d0bebb
  4265bb:	add    BYTE PTR [rbx-0x7a],bl
  4265be:	sub    al,BYTE PTR [rax]
  4265c0:	push   rdx
  4265c1:	xchg   edi,eax
  4265c2:	and    DWORD PTR [rax],eax
  4265c4:	push   rdi
  4265c5:	cdq    
  4265c6:	sub    BYTE PTR [rax],al
  4265c8:	pop    rax
  4265c9:	pushf  
  4265ca:	sub    BYTE PTR [rax],al
  4265cc:	rex.WRXB test BYTE PTR [rip+0x37825f00],r14b        # 0x37c4c4d3
  4265d3:	add    BYTE PTR [rcx-0x77],dl
  4265d6:	xor    eax,DWORD PTR [rax]
  4265d8:	pop    rsp
  4265d9:	mov    DWORD PTR [rip+0x3a855c00],esi        # 0x3ac7c1df
  4265df:	add    BYTE PTR [rcx-0x6a],bl
  4265e2:	(bad)  
  4265e3:	add    BYTE PTR [rbx-0x66],bl
  4265e6:	cmp    al,0x0
  4265e8:	(bad)  
  4265e9:	(bad)  
  4265ea:	xor    eax,DWORD PTR [rax]
  4265ec:	imul   eax,DWORD PTR [rcx-0x788effca],0x33
  4265f3:	add    BYTE PTR [rdx-0x6b],ch
  4265f6:	(bad)  
  4265f7:	add    BYTE PTR [rcx-0x64],ah
  4265fa:	(bad)  
  4265fb:	add    BYTE PTR [rbx+rcx*4+0x46],bl
  4265ff:	add    BYTE PTR [rbx-0x75],bl
  426602:	pop    rdx
  426603:	add    BYTE PTR [rdx-0x76],dh
  426606:	rex.WR add BYTE PTR [rdx-0x6e],r12b
  42660a:	rex.WRX add BYTE PTR [rdx-0x7a],r13b
  42660e:	push   rsi
  42660f:	add    BYTE PTR [rdx-0x77],dh
  426612:	push   rdx
  426613:	add    BYTE PTR [rdi-0x69],ah
  426616:	pop    rdx
  426617:	add    BYTE PTR [rdi-0x5d],bl
  42661a:	rex.RX add BYTE PTR [rcx-0x5a],r12b
  42661e:	rex.WB add BYTE PTR [r10-0x77],dil
  426622:	(bad)  
  426623:	add    BYTE PTR [rcx-0x63],ch
  426626:	movsxd eax,DWORD PTR [rax]
  426628:	jge    0x4265bf
  42662a:	jo     0x42662c
  42662c:	push   0xffffffffffffffa1
  42662e:	jno    0x426630
  426630:	jo     0x4265d6
  426632:	jnp    0x426634
  426634:	push   0xffffffffffffffb6
  426636:	jnp    0x426638
  426638:	xchg   edx,eax
  426639:	xchg   BYTE PTR [rsi],bh
  42663b:	add    BYTE PTR [rdi-0x75ffce6d],al
  426641:	xchg   DWORD PTR [rbp+0x0],ecx
  426644:	xchg   edi,eax
  426645:	mov    BYTE PTR [rbx+0x0],al
  426648:	mov    BYTE PTR [rbp-0x7f54ffba],dl
  42664e:	add    BYTE PTR [r9+rdx*4-0x6c7affae],dil
  426656:	push   0x74849b00
  42665b:	add    BYTE PTR [rsi-0x6cff8865],al
  426661:	pushf  
  426662:	je     0x426664
  426664:	movabs eax,ds:0xa6006492a0006988
  42666d:	xchg   DWORD PTR [rbp+0x0],esi
  426670:	movabs ds:0xb3007b8ca9007c8c,al
  426679:	mov    esi,DWORD PTR [rsi+0x0]
  42667c:	xchg   DWORD PTR [rcx-0x5b40ff8c],esp
  426682:	jns    0x426684
  426684:	ret    
  426685:	xchg   BYTE PTR [rcx+0x0],cl
  426688:	int    0x86
  42668a:	rex.WRB add r9b,r11b
  42668d:	mov    DWORD PTR [rax+0x0],edx
  426690:	fimul  WORD PTR [rcx-0x6f3affa3]
  426696:	push   rbp
  426697:	add    ah,cl
  426699:	fwait
  42669a:	pop    rdx
  42669b:	add    dl,ah
  42669d:	adc    BYTE PTR [rax+0x0],0xea
  4266a1:	xchg   BYTE PTR [rbx+0x0],dl
  4266a4:	out    dx,al
  4266a5:	mov    BYTE PTR [rbp+0x0],dl
  4266a8:	in     eax,dx
  4266a9:	mov    WORD PTR [rbx+0x0],ds
  4266ac:	cmc    
  4266ad:	mov    WORD PTR [rax+0x0],ds
  4266b0:	stc    
  4266b1:	(bad)  
  4266b2:	pop    rbx
  4266b3:	add    dl,ah
  4266b5:	(bad)  
  4266b6:	pop    rsi
  4266b7:	add    bl,bh
  4266b9:	xchg   ecx,eax
  4266ba:	pop    rsp
  4266bb:	add    ah,bl
  4266bd:	cdq    
  4266be:	data16 add ah,ah
  4266c1:	sahf   
  4266c2:	ins    BYTE PTR es:[rdi],dx
  4266c3:	add    bh,bh
  4266c5:	xchg   ebp,eax
  4266c6:	(bad)  
  4266c7:	add    bh,bh
  4266c9:	cdq    
  4266ca:	gs add bh,bh
  4266cd:	pushf  
  4266ce:	push   0x0
  4266d0:	shl    DWORD PTR [rbx-0x5d00ff8a],1
  4266d6:	jb     0x4266d8
  4266d8:	jmp    QWORD PTR [rsi-0x5700ff87]
  4266de:	jl     0x4266e0
  4266e0:	jl     0x42668a
  4266e2:	add    DWORD PTR [rax],0x87bc6d
  4266e8:	jg     0x42669c
  4266ea:	add    DWORD PTR [rax],0x80c55d
  4266f0:	(bad)
  4266f4:	gs int3 
  4266f6:	xchg   ebx,eax
  4266f7:	add    BYTE PTR [rdi-0x39],dh
  4266fa:	xchg   edi,eax
  4266fb:	add    BYTE PTR [rdx-0x5fff7c6d],ch
  426701:	cdq    
  426702:	add    DWORD PTR [rax],0x8896ae
  426708:	mov    bl,0x94
  42670a:	(bad)  
  42670b:	add    BYTE PTR [rcx+rbx*4-0x634cff79],dh
  426712:	mov    eax,DWORD PTR [rax]
  426714:	mov    edx,0xaa008e9e
  426719:	fwait
  42671a:	nop
  42671b:	add    BYTE PTR [rbx-0x7cff6f63],dh
  426721:	scas   eax,DWORD PTR es:[rdi]
  426722:	add    DWORD PTR [rax],0xffffff96
  426725:	lods   eax,DWORD PTR ds:[rsi]
  426726:	mov    al,BYTE PTR [rax]
  426728:	xor    DWORD PTR [rbp-0x4c6eff7b],0xffffff8b
  42672f:	add    BYTE PTR [rbp-0x49ff6a51],ah
  426735:	movabs ds:0xa8bf0092a8b70092,al
  42673e:	xchg   edi,eax
  42673f:	add    BYTE PTR [rsi-0x40ff655a],dh
  426745:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  426746:	cwde   
  426747:	add    BYTE PTR [rbp-0x30ff6457],bh
  42674d:	movabs eax,ds:0xa5c8008fa5d3008a
  426756:	xchg   ecx,eax
  426757:	add    ah,dl
  426759:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  42675a:	xchg   ecx,eax
  42675b:	add    ch,dl
  42675d:	test   eax,0xadd80093
  426762:	cdq    
  426763:	add    cl,bl
  426765:	mov    cl,0x9e
  426767:	add    dl,ah
  426769:	lods   eax,DWORD PTR ds:[rsi]
  42676a:	add    DWORD PTR [rax],0xffffffff
  42676d:	lods   eax,DWORD PTR ds:[rsi]
  42676e:	(bad)  
  42676f:	add    bh,bh
  426771:	mov    al,0x87
  426773:	add    bh,bh
  426775:	mov    cl,0x89
  426777:	add    bl,al
  426779:	lods   eax,DWORD PTR ds:[rsi]
  42677a:	movabs al,ds:0xaebfce00a4b0c100
  426783:	add    bl,bl
  426785:	mov    ch,0xa2
  426787:	add    dh,bl
  426789:	mov    ecx,0xbadc00a6
  42678e:	test   al,0x0
  426790:	sar    DWORD PTR [rdi-0x421fff4d],1
  426796:	lods   al,BYTE PTR ds:[rsi]
  426797:	add    dl,ah
  426799:	(bad)  
  42679a:	mov    bh,0x0
  42679c:	lock int3 
  42679e:	mov    esp,0xbfd0f100
  4267a3:	add    dl,bl
  4267a5:	retf   
  4267a6:	ret    
  4267a7:	add    bh,ah
  4267a9:	iret   
  4267aa:	ret    0xf000
  4267ad:	iret   
  4267ae:	rol    BYTE PTR [rax],0xe7
  4267b1:	rol    eax,1
  4267b3:	add    cl,dh
  4267b5:	rol    esp,cl
  4267b7:	add    dl,dh
  4267b9:	(bad)  
  4267ba:	enter  0xf400,0xd9
  4267be:	int    0x0
  4267c0:	out    0xde,eax
  4267c2:	fadd   DWORD PTR [rax]
  4267c4:	cmc    
  4267c5:	fst    st(2)
  4267c7:	add    ch,dh
  4267c9:	loopne 0x4267a0
  4267cb:	add    dh,dh
  4267cd:	jrcxz  0x4267a9
  4267cf:	add    al,bh
  4267d1:	out    0xde,al
  4267d3:	add    al,bh
  4267d5:	out    0xe0,eax
  4267d7:	add    al,bh
  4267d9:	(bad)  
  4267da:	jrcxz  0x4267dc
  4267dc:	cli    
  4267dd:	out    dx,al
  4267de:	jmp    0xffffffffed3461e3
  4267e3:	add    ah,bh
  4267e5:	cmc    
  4267e6:	repnz add ah,bh
  4267e9:	clc    
  4267ea:	cmc    
  4267eb:	add    dh,bh
  4267ed:	(bad)  
  4267ee:	inc    BYTE PTR [rax]
  4267f0:	(bad)  
  4267f1:	(bad)  
  4267f2:	inc    DWORD PTR [rax]
	...
  426804:	leave  
  426805:	pop    rdx
  426806:	(bad)  
  426807:	xor    DWORD PTR [rdi],esi
  426809:	pop    rdx
  42680a:	leave  
	...
  42681f:	add    BYTE PTR [rax],al
  426821:	ror    DWORD PTR [rdx+rdi*1+0x3d],cl
  426825:	cmp    al,0x3e
  426827:	ds ds cmp al,0x3d
  42682b:	cmp    BYTE PTR [rdx],dh
  42682d:	(bad)  
	...
  42683e:	add    BYTE PTR [rax],al
  426840:	pop    rbx
  426841:	cmp    eax,0x1116483c
  426846:	rex.B (bad) 
  426848:	ds ds ds ds cmp al,0x39
  42684e:	rex.WRX add BYTE PTR [rax],r8b
	...
  42685d:	add    BYTE PTR [rax],al
  42685f:	rex.WRB
  426860:	rex.RXB
  426861:	rex.WB
  426862:	rex.WX
  426863:	rex.WX add QWORD PTR [rbx],rbp
  426866:	rex.W
  426867:	rex.W
  426868:	rex.W (bad) 
  42686a:	(bad)  
  42686b:	ds ds ds cmp eax,0x4b
	...
  42687b:	add    BYTE PTR [rax],al
  42687d:	add    BYTE PTR [rsi+0x54],cl
  426880:	pop    rdi
  426881:	(bad)  
  426882:	(bad)  
  426883:	(bad)  
  426884:	add    DWORD PTR [rax],edx
  426886:	pop    rdi
  426887:	pop    rdi
  426888:	rex.WX
  426889:	rex.WB
  42688a:	rex.W (bad) 
  42688c:	(bad)  
  42688d:	ds ds cmp al,0x4b
	...
  42689d:	pop    rbx
  42689e:	push   rdx
  42689f:	(bad)  
  4268a0:	fs fs gs or BYTE PTR gs:[rdx],bl
  4268a6:	sub    esp,DWORD PTR [rcx+0x61]
  4268a9:	pop    rdi
  4268aa:	rex.WB
  4268ab:	rex.W (bad) 
  4268ad:	(bad)  
  4268ae:	ds (bad) 
  4268b0:	cmp    eax,0x4d
  4268b5:	add    BYTE PTR [rax],al
  4268b7:	add    BYTE PTR [rax],al
  4268b9:	add    BYTE PTR [rax],al
  4268bb:	add    cl,ah
  4268bd:	push   rbx
  4268be:	fs data16 data16 data16 stos BYTE PTR es:[rdi],al
  4268c3:	stos   BYTE PTR es:[rdi],al
  4268c4:	or     BYTE PTR [rip+0x61655608],al        # 0x61a7bed2
  4268ca:	(bad)  
  4268cb:	rex.WX
  4268cc:	rex.WB
  4268cd:	rex.B (bad) 
  4268cf:	add    DWORD PTR [rsi],eax
  4268d1:	cmp    DWORD PTR [rax+0x0],esp
  4268d7:	add    BYTE PTR [rax],al
  4268d9:	add    BYTE PTR [rax],al
  4268db:	add    BYTE PTR [rbx+riz*2+0x66],bl
  4268df:	stos   BYTE PTR es:[rdi],al
  4268e0:	lods   al,BYTE PTR ds:[rsi]
  4268e1:	lods   al,BYTE PTR ds:[rsi]
  4268e2:	lods   al,BYTE PTR ds:[rsi]
  4268e3:	lods   al,BYTE PTR ds:[rsi]
  4268e4:	sbb    eax,DWORD PTR [rip+0x66620803]        # 0x66a470ed
  4268ea:	movsxd esp,DWORD PTR [rcx+0x55]
  4268ed:	rex.WB sbb BYTE PTR [r8],cl
  4268f0:	or     BYTE PTR [rbx],dl
  4268f2:	xor    al,BYTE PTR [rax]
	...
  4268fc:	push   rdi
  4268fd:	stos   BYTE PTR es:[rdi],al
  4268fe:	lods   al,BYTE PTR ds:[rsi]
  4268ff:	lods   al,BYTE PTR ds:[rsi]
  426900:	scas   al,BYTE PTR es:[rdi]
  426901:	scas   al,BYTE PTR es:[rdi]
  426902:	scas   eax,DWORD PTR es:[rdi]
  426903:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  426904:	sbb    DWORD PTR [rbx+0x69],ebp
  426907:	add    bl,BYTE PTR [rbx]
  426909:	stos   BYTE PTR es:[rdi],al
  42690a:	data16 fs (bad) 
  42690d:	rex.WX (bad) 
  42690f:	sbb    esp,DWORD PTR [rip+0x3807]        # 0x42a11c
  426915:	add    BYTE PTR [rax],al
  426917:	add    BYTE PTR [rax],al
  426919:	add    BYTE PTR [rax],al
  42691b:	loop   0x426985
  42691d:	lods   al,BYTE PTR ds:[rsi]
  42691e:	scas   al,BYTE PTR es:[rdi]
  42691f:	scas   eax,DWORD PTR es:[rdi]
  426920:	scas   eax,DWORD PTR es:[rdi]
  426921:	mov    ah,0xb4
  426923:	(bad)  
  426924:	jo     0x42699a
  426926:	outs   dx,BYTE PTR ds:[rsi]
  426927:	imul   esp,DWORD PTR [rdx],0xffffffac
  42692a:	stos   BYTE PTR es:[rdi],al
  42692b:	fs pop di
  42692e:	adc    DWORD PTR [rbx],ebx
  426930:	sub    al,0x6
  426932:	(bad)  
  426933:	leave  
  426934:	add    BYTE PTR [rax],al
  426936:	add    BYTE PTR [rax],al
  426938:	add    BYTE PTR [rax],al
  42693a:	add    ah,dl
  42693c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  42693d:	scas   al,BYTE PTR es:[rdi]
  42693e:	scas   eax,DWORD PTR es:[rdi]
  42693f:	mov    ah,0xb5
  426941:	mov    dh,0xb6
  426943:	sub    ch,BYTE PTR [rdi+0x75]
  426946:	jno    0x4268ca
  426948:	cs scas al,BYTE PTR es:[rdi]
  42694a:	lods   al,BYTE PTR ds:[rsi]
  42694b:	stos   BYTE PTR es:[rdi],al
  42694c:	rex.XB
  42694d:	or     DWORD PTR [rdx],r13d
  426950:	sub    al,0x1b
  426952:	cvtps2pd xmm0,QWORD PTR [rax]
  426955:	add    BYTE PTR [rax],al
  426957:	add    BYTE PTR [rax],al
  426959:	add    BYTE PTR [rax],al
  42695b:	(bad)  
  42695c:	lods   eax,DWORD PTR ds:[rsi]
  42695d:	scas   eax,DWORD PTR es:[rdi]
  42695e:	mov    ch,0xb5
  426960:	mov    dh,0xb8
  426962:	mov    bl,0x33
  426964:	sbb    eax,0xb5b09592
  426969:	scas   eax,DWORD PTR es:[rdi]
  42696a:	scas   al,BYTE PTR es:[rdi]
  42696b:	sbb    ecx,DWORD PTR [rcx]
  42696d:	or     DWORD PTR [rsi],ebx
  42696f:	sub    al,0x2c
  426971:	and    BYTE PTR [rdi+rsi*1],cl
  426974:	rex.WRXB adc r10b,BYTE PTR [r10]
  426977:	adc    dl,BYTE PTR [rdx]
  426979:	adc    dl,BYTE PTR [rdx]
  42697b:	adc    dl,BYTE PTR [rdx]
  42697d:	adc    dl,BYTE PTR [rdx]
  42697f:	adc    dl,BYTE PTR [rdx]
  426981:	adc    dl,BYTE PTR [rdx]
  426983:	xor    BYTE PTR cs:[rdi-0x4a4a4957],dl
  42698a:	sbb    r13d,DWORD PTR [r10+0x69]
  42698e:	ins    DWORD PTR es:[rdi],dx
  42698f:	jb     0x426a0e
  426991:	sub    cl,BYTE PTR [rcx+rsi*1]
  426994:	rex.WRXB
  426995:	repnz out 0xe6,al
  426998:	in     al,0xdc
  42699a:	fcmovnu st,st(3)
  42699c:	fcmovu st,st(1)
  42699e:	xlat   BYTE PTR ds:[rbx]
  42699f:	xlat   BYTE PTR ds:[rbx]
  4269a0:	xlat   BYTE PTR ds:[rbx]
  4269a1:	(bad)  
  4269a2:	adc    bl,BYTE PTR [rdi]
  4269a4:	sub    eax,0xb6b8bade
  4269a9:	mov    ch,0xa4
  4269ab:	sbb    ebp,DWORD PTR [rbx+rsi*2+0x7b]
  4269af:	(bad)  
  4269b0:	(bad)  
  4269b1:	(bad)  
  4269b2:	sub    DWORD PTR [rdi],esi
  4269b4:	rex.WRXB
  4269b5:	repnz stc 
  4269b7:	stc    
  4269b8:	div    ch
  4269ba:	cmc    
  4269bb:	repnz repnz icebp 
  4269be:	icebp  
  4269bf:	out    dx,al
  4269c0:	out    dx,al
  4269c1:	fst    DWORD PTR [rdx]
  4269c3:	sub    ch,bl
  4269c5:	loopne 0x4269a5
  4269c7:	mov    edx,0xafafb6b6
  4269cc:	es jl  0x426a4c
  4269cf:	jle    0x426a4f
  4269d1:	jge    0x4269fc
  4269d3:	pop    rdx
  4269d4:	rex.WRXB cmc 
  4269d6:	stc    
  4269d7:	stc    
  4269d8:	stc    
  4269d9:	div    dh
  4269db:	cmc    
  4269dc:	repnz repnz icebp 
  4269df:	icebp  
  4269e0:	out    dx,al
  4269e1:	xlat   BYTE PTR ds:[rbx]
  4269e2:	adc    al,BYTE PTR [rbp-0x4521227c]
  4269e8:	mov    eax,0x26afb5b6
  4269ed:	jl     0x42696f
  4269ef:	ja     0x426a68
  4269f1:	jns    0x426a09
  4269f3:	leave  
  4269f4:	rex.WRXB cmc 
  4269f6:	sti    
  4269f7:	out    dx,eax
  4269f8:	rex.RX out dx,eax
  4269fa:	div    dh
  4269fc:	cmc    
  4269fd:	repnz repnz icebp 
  426a00:	icebp  
  426a01:	fst    DWORD PTR [rdx]
  426a03:	mov    edi,0xbae08788
  426a08:	mov    eax,0x91afb5b6
  426a0d:	jbe    0x426a8b
  426a0f:	mov    cl,BYTE PTR [rdx+0x4f001627]
  426a15:	idiv   ah
  426a17:	rex.RX mov dl,0x46
  426a1a:	stc    
  426a1b:	(bad)  
  426a1c:	retf   0x5ac2
  426a1f:	pop    rbx
  426a20:	icebp  
  426a21:	ficom  DWORD PTR [rdx]
  426a23:	mov    esp,0xba9890c1
  426a28:	mov    eax,0x23afb5b6
  426a2d:	js     0x426aab
  426a2f:	mov    cl,BYTE PTR [rdx+0x4f003120]
  426a35:	idiv   ah
  426a37:	out    dx,eax
  426a38:	rex.RX out dx,eax
  426a3a:	stc    
  426a3b:	stc    
  426a3c:	div    dh
  426a3e:	cmc    
  426a3f:	repnz repnz ficom DWORD PTR [rdx]
  426a43:	int    0xcb
  426a45:	mov    esp,DWORD PTR [rbx-0x504a4746]
  426a4b:	scas   eax,DWORD PTR es:[rdi]
  426a4c:	jg     0x426acb
  426a4e:	sbb    al,0x81
  426a50:	jl     0x426a73
  426a52:	sahf   
  426a53:	add    BYTE PTR [rdi-0x7],cl
  426a56:	std    
  426a57:	cld    
  426a58:	cld    
  426a59:	sti    
  426a5a:	cli    
  426a5b:	stc    
  426a5c:	stc    
  426a5d:	div    dh
  426a5f:	cmc    
  426a60:	cmc    
  426a61:	fcom   QWORD PTR [rdx]
  426a63:	mov    ebp,0x9dbaa2cb
  426a68:	xor    esi,DWORD PTR [rbp-0x695a6b58]
  426a6e:	sbb    al,0x81
  426a70:	and    dh,BYTE PTR [rsi]
  426a72:	add    BYTE PTR [rax],al
  426a74:	rex.WRXB stc 
  426a76:	std    
  426a77:	out    dx,eax
  426a78:	rex.RX out dx,eax
  426a7a:	sti    
  426a7b:	sti    
  426a7c:	stc    
  426a7d:	stc    
  426a7e:	div    dh
  426a80:	cmc    
  426a81:	in     al,0x12
  426a83:	(bad)  
  426a84:	int3   
  426a85:	nop
  426a86:	mov    bh,0x34
  426a88:	add    DWORD PTR [rdi+0x66947a87],0x45
  426a8f:	and    al,0x35
  426a91:	add    BYTE PTR [rax],al
  426a93:	add    BYTE PTR [rcx-0x7],bl
  426a96:	std    
  426a97:	rex.RX mov dl,0x46
  426a9a:	cld    
  426a9b:	(bad)  
  426a9c:	retf   0x99c2
  426a9f:	pop    rcx
  426aa0:	mul    ch
  426aa2:	adc    bl,BYTE PTR [rdx+0x34b38ecc]
  426aa8:	mov    edi,0xaaac878c
  426aad:	fs pop rax
  426aaf:	push   rcx
  426ab0:	rol    BYTE PTR [rax],cl
  426ab2:	add    BYTE PTR [rax],al
  426ab4:	pop    rcx
  426ab5:	sti    
  426ab6:	std    
  426ab7:	out    dx,eax
  426ab8:	rex.RX out dx,eax
  426aba:	std    
  426abb:	cld    
  426abc:	cld    
  426abd:	cli    
  426abe:	cli    
  426abf:	stc    
  426ac0:	imul   al
  426ac2:	adc    bl,BYTE PTR [rbx-0x70796773]
  426ac8:	sar    BYTE PTR [rsi+0x5e679387],0xa1
  426acf:	add    BYTE PTR [rax],al
  426ad1:	add    BYTE PTR [rax],al
  426ad3:	add    BYTE PTR [rdx-0x5],bl
  426ad6:	std    
  426ad7:	std    
  426ad8:	std    
  426ad9:	std    
  426ada:	std    
  426adb:	std    
  426adc:	cld    
  426add:	sti    
  426ade:	cli    
  426adf:	cli    
  426ae0:	stc    
  426ae1:	jmp    0xffffffff9b122df8
  426ae6:	mov    ebx,0x8b90bfc1
  426aeb:	pushf  
  426aec:	movabs eax,ds:0x99000000000000d8
  426af5:	cld    
  426af6:	std    
  426af7:	icebp  
  426af8:	rex.RX icebp 
  426afa:	std    
  426afb:	std    
  426afc:	std    
  426afd:	cld    
  426afe:	cld    
  426aff:	cli    
  426b00:	stc    
  426b01:	jmp    0xffffffffe2296b18
  426b06:	enter  0xc6c5,0xc8
  426b0a:	shl    ebx,1
	...
  426b14:	lahf   
  426b15:	cld    
  426b16:	std    
  426b17:	rex.RX mov dl,0x46
  426b1a:	std    
  426b1b:	loop   0x426ae7
  426b1d:	ret    0x595d
  426b20:	sti    
  426b21:	out    dx,eax
  426b22:	adc    al,BYTE PTR [rax]
	...
  426b34:	ret    0xfdfc
  426b37:	in     eax,dx
  426b38:	rex.RX out dx,eax
  426b3a:	std    
  426b3b:	std    
  426b3c:	std    
  426b3d:	std    
  426b3e:	std    
  426b3f:	cld    
  426b40:	cld    
  426b41:	in     eax,dx
  426b42:	adc    al,BYTE PTR [rax]
	...
  426b54:	(bad)  
  426b55:	std    
  426b56:	std    
  426b57:	std    
  426b58:	std    
  426b59:	std    
  426b5a:	std    
  426b5b:	std    
  426b5c:	std    
  426b5d:	std    
  426b5e:	std    
  426b5f:	in     al,dx
  426b60:	mov    edx,0x12
	...
  426b72:	add    BYTE PTR [rax],al
  426b74:	sar    ch,1
  426b76:	std    
  426b77:	std    
  426b78:	std    
  426b79:	std    
  426b7a:	std    
  426b7b:	std    
  426b7c:	std    
  426b7d:	std    
  426b7e:	std    
  426b7f:	lahf   
  426b80:	adc    al,0x14
  426b82:	adc    al,BYTE PTR [rax]
	...
  426b94:	(bad)  
  426b95:	std    
  426b96:	std    
  426b97:	std    
  426b98:	std    
  426b99:	std    
  426b9a:	std    
  426b9b:	std    
  426b9c:	std    
  426b9d:	std    
  426b9e:	std    
  426b9f:	ret    0x50f3
	...
  426bb2:	add    BYTE PTR [rax],al
  426bb4:	(bad)  
  426bb5:	std    
  426bb6:	std    
  426bb7:	std    
  426bb8:	std    
  426bb9:	std    
  426bba:	std    
  426bbb:	std    
  426bbc:	std    
  426bbd:	std    
  426bbe:	std    
  426bbf:	lahf   
  426bc0:	rex.WRXB add BYTE PTR [r8],r8b
	...
  426bd3:	add    cl,ah
  426bd5:	loope  0x426bac
  426bd7:	(bad)  
  426bd8:	leave  
  426bd9:	leave  
  426bda:	lahf   
  426bdb:	lahf   
  426bdc:	pop    rbp
  426bdd:	pop    rdx
  426bde:	pop    rcx
  426bdf:	rex.WRXB add BYTE PTR [r8],r8b
	...
  426bf2:	add    BYTE PTR [rax],al
  426bf4:	(bad)  
  426bf5:	inc    DWORD PTR [rcx]
  426bf7:	(bad)  
  426bf8:	(bad)  
  426bf9:	clc    
  426bfa:	add    BYTE PTR [rdi],bh
  426bfc:	push   rax
  426bfe:	add    BYTE PTR [rdi],bl
  426c00:	jmp    rax
  426c02:	add    BYTE PTR [rdi],cl
  426c04:	inc    eax
  426c06:	add    BYTE PTR [rdi],al
  426c08:	inc    DWORD PTR [rax+0xff0300]
  426c0e:	add    BYTE PTR [rcx],al
  426c10:	inc    DWORD PTR [rax]
  426c12:	add    BYTE PTR [rcx],al
  426c14:	inc    DWORD PTR [rax]
  426c16:	add    BYTE PTR [rcx],al
  426c18:	inc    BYTE PTR [rax]
  426c1a:	add    BYTE PTR [rax],al
  426c1c:	inc    BYTE PTR [rax]
  426c1e:	add    BYTE PTR [rax],al
  426c20:	inc    BYTE PTR [rax]
	...
  426c36:	add    BYTE PTR [rcx],al
  426c38:	add    BYTE PTR [rax],al
  426c3a:	add    BYTE PTR [rcx],al
  426c3c:	add    BYTE PTR [rax],al
  426c3e:	add    BYTE PTR [rcx],al
  426c40:	add    BYTE PTR [rax],al
  426c42:	add    BYTE PTR [rbx],al
  426c44:	add    BYTE PTR [rax],al
  426c46:	add    BYTE PTR [rdi],al
  426c48:	add    BYTE PTR [rax],al
  426c4a:	add    BYTE PTR [rdi],al
  426c4c:	add    BYTE PTR [rax],al
  426c4e:	add    BYTE PTR [rdi],bl
  426c50:	add    BYTE PTR [rax],al
  426c52:	add    BYTE PTR [rdi],bh
  426c54:	add    BYTE PTR [rcx],al
  426c56:	add    bh,bh
  426c58:	add    BYTE PTR [rcx],al
  426c5a:	(bad)  
  426c5b:	inc    DWORD PTR [rax]
  426c5d:	add    edi,edi
  426c5f:	inc    DWORD PTR [rax]
  426c61:	add    edi,edi
  426c63:	inc    DWORD PTR [rax]
  426c65:	add    edi,edi
  426c67:	inc    DWORD PTR [rax]
  426c69:	add    edi,edi
  426c6b:	inc    DWORD PTR [rax]
  426c6d:	(bad)  
  426c6e:	(bad)  
  426c6f:	inc    DWORD PTR [rax]
  426c71:	ud0    edi,edi
  426c74:	sub    BYTE PTR [rax],al
  426c76:	add    BYTE PTR [rax],al
  426c78:	adc    BYTE PTR [rax],al
  426c7a:	add    BYTE PTR [rax],al
  426c7c:	and    BYTE PTR [rax],al
  426c7e:	add    BYTE PTR [rax],al
  426c80:	add    DWORD PTR [rax],eax
  426c82:	or     BYTE PTR [rax],al
  426c84:	add    BYTE PTR [rax],al
  426c86:	add    BYTE PTR [rax],al
  426c88:	add    BYTE PTR [rcx],al
	...
  426c92:	add    BYTE PTR [rax],al
  426c94:	add    BYTE PTR [rcx],al
  426c96:	add    BYTE PTR [rax],al
  426c98:	add    BYTE PTR [rcx],al
  426c9a:	add    BYTE PTR [rax],al
  426c9c:	add    BYTE PTR [rax],al
  426c9e:	add    BYTE PTR [rax],al
  426ca0:	xor    DWORD PTR [rbx+0x16],edi
  426ca3:	add    BYTE PTR [rdi*2+0x5f5d001c],bh
  426caa:	add    BYTE PTR ds:[rcx+rdx*2+0x3d],ch
  426caf:	add    BYTE PTR [rcx+0x53],bh
  426cb2:	cmp    eax,DWORD PTR [rax]
  426cb4:	pop    rsp
  426cb5:	je     0x426cdb
  426cb7:	add    BYTE PTR [rdx+0x67],bl
  426cba:	(bad)  
  426cbb:	add    BYTE PTR [rbx+0x61],dl
  426cbe:	add    BYTE PTR ds:[rsi+rdi*2+0x3f],dl
  426cc3:	add    BYTE PTR [rdx+0x6a],ah
  426cc6:	xor    eax,DWORD PTR [rax]
  426cc8:	ins    DWORD PTR es:[rdi],dx
  426cc9:	ins    BYTE PTR es:[rdi],dx
  426cca:	cmp    eax,0x40536e00
  426ccf:	add    BYTE PTR [rcx+0x59],ah
  426cd2:	add    BYTE PTR [rcx+0x57],r14b
  426cd6:	add    BYTE PTR [rbx+0x65],r9b
  426cda:	rex.X add BYTE PTR [rcx+0x6e],dl
  426cde:	rex.W add BYTE PTR [rdi+0x64],bpl
  426ce2:	add    BYTE PTR [r11+0x65],bpl
  426ce6:	add    BYTE PTR [r14+0x7a],r13b
  426cea:	push   rdx
  426ceb:	add    BYTE PTR [rbx-0x69ffc7aa],cl
  426cf1:	pop    rbp
  426cf2:	cmp    eax,0x2e748700
  426cf7:	add    BYTE PTR [rdi-0x77ffc3a0],al
  426cfd:	(bad)  
  426cfe:	cmp    al,0x0
  426d00:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  426d01:	(bad)  
  426d02:	sub    al,BYTE PTR [rax]
  426d04:	mov    ch,0x62
  426d06:	cmp    al,BYTE PTR [rax]
  426d08:	mov    dl,0x66
  426d0a:	add    BYTE PTR ds:[rsi-0x44ffc299],dh
  426d11:	cmp    ax,0x9300
  426d15:	data16 add BYTE PTR [rdx-0x77ffb690],r10b
  426d1d:	push   0x56
  426d1f:	add    BYTE PTR [rax-0x72ffa797],al
  426d25:	outs   dx,BYTE PTR ds:[rsi]
  426d26:	pop    rdx
  426d27:	add    BYTE PTR [rbx+rbp*2+0x778f0042],dh
  426d2e:	data16 add BYTE PTR [rdi-0x5dff9082],dl
  426d35:	jle    0x426d98
  426d37:	add    BYTE PTR [rsi-0x32ff9b84],ah
  426d3d:	jp     0x426d8b
  426d3f:	add    ch,al
  426d41:	jle    0x426d9b
  426d43:	add    BYTE PTR [rbx],ch
  426d45:	lea    edx,[rip+0x22883400]        # 0x22caa14b
  426d4b:	add    BYTE PTR [rbx],bh
  426d4d:	test   BYTE PTR [rax+rax*1],ch
  426d50:	cmp    al,0x8b
  426d52:	sub    BYTE PTR [rax],al
  426d54:	cmp    ebx,DWORD PTR [rbx-0x62c0ffdc]
  426d5a:	and    al,0x0
  426d5c:	mov    BYTE PTR [r15],r11b
  426d5f:	add    BYTE PTR [rbp-0x75],bl
  426d62:	(bad)  
  426d63:	add    BYTE PTR [rax-0x6a],al
  426d66:	sbb    eax,0x2c8a5200
  426d6b:	add    BYTE PTR [rbx-0x61],al
  426d6e:	and    eax,DWORD PTR [rax]
  426d70:	gs xchg esi,eax
  426d72:	cmp    al,BYTE PTR [rax]
  426d74:	rex.WR movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  426d76:	sub    al,BYTE PTR [rax]
  426d78:	push   rbx
  426d79:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  426d7a:	add    BYTE PTR cs:[rdi-0x5a],cl
  426d7e:	xor    BYTE PTR [rax],al
  426d80:	push   rbp
  426d81:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  426d82:	cmp    BYTE PTR [rax],al
  426d84:	movabs eax,fs:0xb14e0040846f002b
  426d8e:	push   0x0
  426d90:	addr32 mov dh,0x70
  426d93:	add    BYTE PTR [rax-0x5affd26b],al
  426d99:	xchg   esi,eax
  426d9a:	cmp    al,0x0
  426d9c:	mov    al,0x93
  426d9e:	cmp    DWORD PTR [rax],eax
  426da0:	xchg   esi,eax
  426da1:	movabs ds:0x859f0042878b003e,al
  426daa:	push   rsi
  426dab:	add    BYTE PTR [rdi-0x78ff9080],dl
  426db1:	cwde   
  426db2:	add    BYTE PTR [edx-0x60ff8d7e],bl
  426db9:	mov    DWORD PTR [rax+0x0],edi
  426dbc:	movabs al,ds:0xa2007285a5006f86
  426dc5:	mov    WORD PTR [rax+rax*1-0x59],?
  426dc9:	mov    ?,WORD PTR [rbp+0x0]
  426dcc:	mov    al,0x8e
  426dce:	jnp    0x426dd0
  426dd0:	xchg   BYTE PTR [rax-0x5954ff8b],dh
  426dd6:	imul   eax,DWORD PTR [rax],0xffffffb9
  426dd9:	movabs ds:0x98d6004781cb006e,al
  426de2:	rex.RXB add r13b,r8b
  426de5:	test   BYTE PTR [rdx+0x0],bl
  426de8:	enter  0x5b85,0x0
  426dec:	(bad)  
  426ded:	adc    BYTE PTR [rax+rax*1-0x23],0x89
  426df2:	pop    rsp
  426df3:	add    al,ah
  426df5:	lea    ebx,[rbx+0x0]
  426df8:	call   0xffffffffce42c786
  426dfd:	xchg   BYTE PTR [rdx+0x0],ah
  426e00:	ror    DWORD PTR [rax-0x6d22ff95],0x69
  426e07:	add    dl,dl
  426e09:	cdq    
  426e0a:	push   0x7196de00
  426e0f:	add    ah,ah
  426e11:	(bad)  
  426e12:	fs add dh,ah
  426e15:	xchg   ecx,eax
  426e16:	data16 add dh,ch
  426e19:	nop
  426e1a:	(bad)  
  426e1b:	add    ch,ah
  426e1d:	xchg   edi,eax
  426e1e:	outs   dx,BYTE PTR ds:[rsi]
  426e1f:	add    ch,ch
  426e21:	cdq    
  426e22:	imul   eax,DWORD PTR [rax],0x6494f5
  426e28:	stc    
  426e29:	pushf  
  426e2a:	outs   dx,BYTE PTR ds:[rsi]
  426e2b:	add    BYTE PTR [rbp-0x25],bh
  426e2e:	nop
  426e2f:	add    BYTE PTR [rdi-0x50ff7e6f],ah
  426e35:	cdq    
  426e36:	mov    eax,DWORD PTR [rax]
  426e38:	lods   al,BYTE PTR ds:[rsi]
  426e39:	(bad)  
  426e3a:	mov    WORD PTR [rax],es
  426e3c:	mov    edx,0xbd008598
  426e41:	popf   
  426e42:	mov    eax,DWORD PTR [rax]
  426e44:	mov    dh,0xa1
  426e46:	xchg   ebx,eax
  426e47:	add    BYTE PTR [rdi-0x43ff6f60],bh
  426e4d:	test   al,0x9a
  426e4f:	add    BYTE PTR [rax-0x3bff6056],bh
  426e55:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  426e56:	xchg   edi,eax
  426e57:	add    dl,al
  426e59:	scas   al,BYTE PTR es:[rdi]
  426e5a:	movabs eax,ds:0xabb5c700a7b4c700
  426e63:	add    bl,dl
  426e65:	mov    edi,0xd2a200b4
  426e6a:	xchg   edi,eax
  426e6b:	add    BYTE PTR [rcx-0x4cff5d23],al
  426e71:	in     eax,0xab
  426e73:	add    BYTE PTR [rdi-0x2bff491c],dh
  426e79:	shl    BYTE PTR [rax+rax*1+0xb5c4e4],0xe4
  426e81:	(bad)  
  426e82:	mov    eax,0xbac8e500
  426e87:	add    ch,ah
  426e89:	retf   
  426e8a:	mov    ebp,0xc3d1e900
  426e8f:	add    bh,ch
  426e91:	(bad)  
  426e92:	leave  
  426e93:	add    dh,dh
  426e95:	loope  0x426e6e
  426e97:	add    cl,bh
  426e99:	in     al,0xda
  426e9b:	add    al,bh
  426e9d:	out    0xdf,eax
  426e9f:	add    bl,ch
  426ea1:	not    edi
  426ea3:	add    cl,bh
  426ea5:	in     eax,dx
  426ea6:	call   0xffffffffef3669ab
  426eab:	add    ch,bh
  426ead:	clc    
  426eae:	cmc    
  426eaf:	add    dh,bh
  426eb1:	cld    
  426eb2:	sti    
	...
  427097:	add    bh,bh
  427099:	(bad)  
  42709a:	inc    DWORD PTR [rax]
  42709c:	add    BYTE PTR [rax],al
  42709e:	add    BYTE PTR [rax],al
  4270a0:	add    BYTE PTR [rax],al
  4270a2:	jno    0x4270ef
  4270a4:	and    ah,BYTE PTR [rax]
  4270a6:	rex.RX ins DWORD PTR es:[rdi],dx
	...
  4270b0:	add    BYTE PTR [rcx+0x1f],cl
  4270b3:	adc    bl,BYTE PTR [rsi]
  4270b5:	sbb    edx,DWORD PTR [rip+0x2105]        # 0x4291c0
  4270bb:	add    BYTE PTR [rax],al
  4270bd:	add    BYTE PTR [rax],al
  4270bf:	add    BYTE PTR [rdi],ah
  4270c1:	sub    DWORD PTR [rsi],edx
  4270c3:	(bad)  
  4270c4:	or     BYTE PTR [rax],bl
  4270c6:	sbb    eax,0xc141b
  4270cb:	add    BYTE PTR [rax],al
  4270cd:	add    BYTE PTR [rax],al
  4270cf:	rex.WR pop rax
  4270d1:	push   rdi
  4270d2:	push   rax
  4270d3:	xor    DWORD PTR [rbx],ebp
  4270d5:	(bad)  
  4270d6:	adc    DWORD PTR [rbx],ebx
  4270d8:	sbb    eax,0x2114
  4270dd:	add    BYTE PTR [rdx+0x59],dh
  4270e0:	(bad)  
  4270e1:	pop    rdi
  4270e2:	push   rdx
  4270e3:	or     DWORD PTR [rsi],ebp
  4270e5:	sub    eax,0x317230b
  4270ea:	or     eax,0x6b00006d
  4270ef:	pop    rsp
  4270f0:	movsxd ebx,DWORD PTR [rdx+0x13]
  4270f3:	cmp    DWORD PTR [rax],edi
  4270f5:	sub    BYTE PTR ds:[rbx],cl
  4270f8:	sidt   [rdx]
  4270fb:	rex.RX (bad) 
  4270fd:	add    al,0x4
  4270ff:	add    al,0x4
  427101:	add    al,0x4
  427103:	add    al,0x41
  427105:	push   rbp
  427106:	push   rsp
  427107:	adc    BYTE PTR [rdx+rbp*1],ch
  42710a:	add    ah,BYTE PTR [rax]
  42710c:	and    al,0x7f
  42710e:	jge    0x42718d
  427110:	jge    0x42718f
  427112:	js     0x427118
  427114:	(bad)  
  427115:	pop    rsi
  427116:	push   rbp
  427117:	cmp    ch,BYTE PTR [rsi]
  427119:	xor    dh,BYTE PTR [rax]
  42711b:	and    al,BYTE PTR [rbx+rax*4+0x19]
  42711f:	jg     0x427165
  427121:	rex.R js 0x427128
  427124:	rex.WRXB pop r11
  427126:	pop    rbp
  427127:	(bad)  
  427128:	ss xor al,0x33
  42712b:	rex.WXB
  42712c:	rex.RXB test BYTE PTR [r11+0x797e8082],r8b
  427133:	add    al,0x73
  427135:	rex.WRX (bad) 
  427137:	push   rsi
  427138:	(bad)  
  427139:	cmp    esi,DWORD PTR ss:[rcx+0x65]
  42713d:	test   DWORD PTR [rcx],ebx
  42713f:	add    DWORD PTR [rsp+rax*2+0x79],0x4
  427144:	xor    DWORD PTR [rbp+0x45],0x48354051
  42714b:	add    BYTE PTR [rsi-0x7b],ah
  42714e:	test   DWORD PTR [rbx+rax*4+0x4d047b82],eax
  427155:	fs cmp al,0x42
  427158:	push   rbx
  427159:	(bad)  
  42715a:	add    BYTE PTR [rax],al
  42715c:	push   0xffffffffffffff85
  42715e:	sbb    DWORD PTR [rbp+0x47c4444],eax
  427164:	jbe    0x4271da
  427166:	cmp    eax,0x4c43
  42716b:	add    BYTE PTR [rbp-0x7b],ch
  42716e:	test   DWORD PTR [rbp+0x4044b85],eax
  427174:	push   0x776e69
  427179:	add    BYTE PTR [rax],al
  42717b:	add    BYTE PTR [rdi-0x7b],ch
  42717e:	test   DWORD PTR [rbp+0x664b85],eax
	...
  42718c:	jno    0x4271fd
  42718e:	ins    DWORD PTR es:[rdi],dx
  42718f:	imul   esp,DWORD PTR [rsi+0x65],0x0
	...
  42719b:	add    ah,bh
  42719d:	sldt   WORD PTR [rax]
  4271a0:	clc    
  4271a1:	(bad)  
  4271a2:	add    BYTE PTR [rax],al
  4271a4:	lock add eax,DWORD PTR [rax]
  4271a7:	add    al,ah
  4271a9:	add    DWORD PTR [rax],eax
  4271ab:	add    al,al
  4271ad:	add    BYTE PTR [rax],al
  4271af:	add    al,al
	...
  4271c5:	add    DWORD PTR [rax],eax
  4271c7:	add    BYTE PTR [rax],al
  4271c9:	add    eax,DWORD PTR [rax]
  4271cb:	add    BYTE PTR [rax],al
  4271cd:	(bad)  
  4271ce:	add    BYTE PTR [rax],al
  4271d0:	add    BYTE PTR [rdi],cl
  4271d2:	add    BYTE PTR [rax],al
  4271d4:	add    edi,edi
  4271d6:	add    BYTE PTR [rax],al
  4271d8:	add    edi,edi
  4271da:	add    BYTE PTR [rax],al
  4271dc:	sub    BYTE PTR [rax],al
  4271de:	add    BYTE PTR [rax],al
  4271e0:	and    BYTE PTR [rax],al
  4271e2:	add    BYTE PTR [rax],al
  4271e4:	add    BYTE PTR [rax],al
  4271e7:	add    BYTE PTR [rcx],al
  4271e9:	add    BYTE PTR [rax],ah
  4271eb:	add    BYTE PTR [rax],al
  4271ed:	add    BYTE PTR [rax],al
  4271ef:	add    BYTE PTR [rax+0x10],al
	...
  427239:	add    BYTE PTR [rax],al
  42723b:	add    BYTE PTR [rax+0x57],dh
  42723e:	rex.R sbb eax,0x5e445770
  427244:	jo     0x42729d
  427246:	rex.R xchg edi,eax
  427248:	jo     0x4272a1
  42724a:	rex.R (bad) 
  42724c:	jo     0x4272a5
  42724e:	rex.R jmp 0xfffffffffd86c9c4
  427254:	jo     0x4272ad
  427256:	rex.R jmp 0xffffffffc786c9cc
  42725c:	jo     0x4272b5
  42725e:	rex.R xchg edi,eax
  427260:	jo     0x4272b9
  427262:	rex.R pop rsi
  427264:	jo     0x4272bd
  427266:	rex.R sbb eax,0x0
	...
  4272b4:	jo     0x42730d
  4272b6:	sbb    r14d,DWORD PTR [rsi+0x57]
  4272ba:	rex.X xchg DWORD PTR [rdi+0x57],esi
  4272be:	rex.X in al,dx
  4272c0:	test   DWORD PTR [rax+0x3e],ebx
  4272c3:	call   QWORD PTR [rcx-0x6400c4a8]
  4272c9:	pop    rcx
  4272ca:	(bad)  
  4272cb:	jmp    QWORD PTR [rcx-0x5900cba8]
  4272d1:	pop    rax
  4272d2:	xor    edi,edi
  4272d4:	movabs eax,ds:0x90ff37589aff3458
  4272dd:	pop    rax
  4272de:	cmp    bh,bh
  4272e0:	test   BYTE PTR [rdi+0x3e],dl
  4272e3:	(bad)  
  4272e4:	jns    0x42733d
  4272e6:	idiv   BYTE PTR [r13+0x57]
  4272ea:	rex sahf 
  4272ec:	jne    0x427345
  4272ee:	rex.X (bad) 
	...
  427330:	jb     0x427389
  427332:	rex.XB
  427333:	rex.WB jnp 0x42738e
  427336:	rex.X fmul DWORD PTR [rbp-0x5b00c1a6]
  42733d:	pop    rbp
  42733e:	cmp    bh,bh
  427340:	mov    cl,0x5f
  427342:	cmp    bh,bh
  427344:	push   0x59ff385e
  427349:	pop    rsp
  42734a:	jmp    FWORD PTR ss:[rbp-0x5400c8a3]
  427351:	pop    rsp
  427352:	jmp    FWORD PTR ss:[rcx-0x5900cba6]
  427359:	pop    rax
  42735a:	xor    edi,edi
  42735c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42735d:	pop    rax
  42735e:	xor    edi,edi
  427360:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  427361:	pop    rax
  427362:	xor    edi,edi
  427364:	pushf  
  427365:	pop    rax
  427366:	dec    DWORD PTR ss:[rcx+0x7cff3c57]
  42736d:	push   rdi
  42736e:	rex in eax,0x7b
  427371:	push   rdi
  427372:	rex pop rcx
	...
  4273ac:	jb     0x427405
  4273ae:	rex.R push rdi
  4273b0:	jle    0x42740b
  4273b2:	rex.X call 0xffffffffff80d55b
  4273b8:	mov    ebx,0xbcff3e66
  4273bd:	addr32 ds (bad) 
  4273c0:	mov    ebp,0x3eff3f68
  4273c5:	push   rsp
  4273c6:	sub    edi,edi
  4273c8:	jae    0x42742c
  4273ca:	cmp    bh,bh
  4273cc:	mov    eax,0xb5ff3c65
  4273d1:	movsxd edi,DWORD PTR [rbx]
  4273d3:	push   QWORD PTR [rdx-0x5200c6a0]
  4273d9:	pop    rbp
  4273da:	(bad)  
  4273db:	jmp    FWORD PTR [rcx-0x5900caa6]
  4273e1:	pop    rax
  4273e2:	xor    edi,edi
  4273e4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4273e5:	pop    rax
  4273e6:	xor    edi,edi
  4273e8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4273e9:	pop    rax
  4273ea:	xor    edi,edi
  4273ec:	xchg   esi,eax
  4273ed:	pop    rax
  4273ee:	cmp    bh,bh
  4273f0:	jge    0x427449
  4273f2:	rex
  4273f3:	repnz adc BYTE PTR [rdi+0x3f],0x77
	...
  427428:	jae    0x427482
  42742a:	rex.R
  42742b:	rex.WB sbb BYTE PTR [r10+0x43],0xe8
  427430:	mov    dl,0x67
  427432:	rex.X inc ebp
  427435:	ins    DWORD PTR es:[rdi],dx
  427436:	rex.XB dec r8d
  427439:	outs   dx,DWORD PTR ds:[rsi]
  42743a:	rex.R dec ecx
  42743d:	jo     0x427484
  42743f:	dec    edx
  427441:	jo     0x427488
  427443:	(bad)  
  427444:	(bad)  
  427445:	push   rsi
  427446:	sub    al,0xff
  427448:	push   rcx
  427449:	pop    rsi
  42744a:	xor    bh,bh
  42744c:	(bad)
  42744f:	inc    ecx
  427451:	imul   eax,DWORD PTR [rcx-0x1],0xffffffbd
  427455:	push   0x64b8ff3f
  42745a:	cmp    al,0xff
  42745c:	mov    dl,0x60
  42745e:	cmp    edi,edi
  427460:	lods   al,BYTE PTR ds:[rsi]
  427461:	pop    rsp
  427462:	jmp    FWORD PTR ss:[rax-0x5900cba7]
  427469:	pop    rax
  42746a:	xor    edi,edi
  42746c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42746d:	pop    rax
  42746e:	xor    edi,edi
  427470:	pushf  
  427471:	pop    rax
  427472:	ss (bad) 
  427474:	jge    0x4274cd
  427476:	rex
  427477:	bnd jle 0x4274d1
  42747a:	rex pop rdi
	...
  4274a4:	jnp    0x427506
  4274a6:	sbb    r15,QWORD PTR [r15+0x5b]
  4274aa:	rex.R fsubr DWORD PTR [rsi-0x3200bb97]
  4274b1:	jae    0x4274fa
  4274b3:	call   rcx
  4274b5:	jne    0x427500
  4274b7:	call   rbx
  4274b9:	ja     0x427505
  4274bb:	call   rbp
  4274bd:	js     0x42750a
  4274bf:	call   rbp
  4274c1:	js     0x42750e
  4274c3:	inc    DWORD PTR [rbx+0x57]
  4274c6:	sub    al,0xff
  4274c8:	rex.WB push 0x2c
  4274cb:	push   QWORD PTR [rdi+riz*2+0x38]
  4274cf:	dec    ebp
  4274d1:	jae    0x42751a
  4274d3:	dec    ecx
  4274d5:	jo     0x42751b
  4274d7:	inc    ebx
  4274d9:	ins    BYTE PTR es:[rdi],dx
  4274da:	rex.X (bad) 
  4274dc:	mov    esp,0xb5ff3e67
  4274e1:	movsxd edi,DWORD PTR [rbx]
  4274e3:	jmp    FWORD PTR [rdi-0x5600c8a2]
  4274e9:	pop    rdx
  4274ea:	xor    al,0xff
  4274ec:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4274ed:	pop    rax
  4274ee:	xor    edi,edi
  4274f0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4274f1:	pop    rax
  4274f2:	xor    edi,edi
  4274f4:	xchg   esi,eax
  4274f5:	pop    rax
  4274f6:	cmp    bh,bh
  4274f8:	jl     0x427551
  4274fa:	rex call 0x2183cc7a
	...
  427524:	(bad)
  427528:	movabs eax,ds:0xd8ff4a77d3ff4a68
  427531:	jp     0x42757f
  427533:	(bad)  
  427534:	fdivr  QWORD PTR [rbp+0x4e]
  427537:	(bad)  
  427538:	fistp  QWORD PTR [rdi+0x4f]
  42753b:	jmp    rcx
  42753d:	adc    BYTE PTR [rax-0x1],0xe2
  427541:	adc    BYTE PTR [rax-0x1],0x44
  427545:	pop    rdx
  427546:	sub    bh,bh
  427548:	rex.WB jge 0x427565
  42754b:	inc    DWORD PTR [rax+0x56]
  42754e:	sub    al,0xff
  427550:	mov    ebp,0xd3ff4476
  427555:	ja     0x4275a1
  427557:	dec    esi
  427559:	jae    0x4275a2
  42755b:	inc    edi
  42755d:	outs   dx,DWORD PTR ds:[rsi]
  42755e:	rex.R (bad) 
  427560:	mov    edi,0xb7ff4069
  427565:	fs cmp al,0xff
  427568:	scas   eax,DWORD PTR es:[rdi]
  427569:	pop    rsi
  42756a:	cmp    bh,bh
  42756c:	test   eax,0x3dff345a
  427571:	push   rdx
  427572:	sub    bh,bh
  427574:	rex.B
  427575:	rex.WRXB sub r15b,r15b
  427578:	mov    DWORD PTR [rdi+0x3c],edx
  42757b:	inc    DWORD PTR [rcx+0xae3f57]
	...
  42759d:	add    BYTE PTR [rax],al
  42759f:	add    BYTE PTR [rsi-0x6ae2a08f],cl
  4275a5:	jno    0x427601
  4275a7:	icebp  
  4275a8:	enter  0x4e77,0xff
  4275ac:	fidivr WORD PTR [rsi+0x4f]
  4275af:	jmp    rsp
  4275b1:	(bad)  
  4275b2:	push   rcx
  4275b3:	(bad)  
  4275b4:	jmp    0xffffffffed41c93d
  4275b9:	xchg   DWORD PTR [rdi+rdi*8-0x12],edx
  4275bd:	mov    BYTE PTR [rbp-0x1],dl
  4275c0:	out    dx,eax
  4275c1:	mov    BYTE PTR [rbp-0x1],dl
  4275c4:	push   rsp
  4275c5:	(bad)  
  4275c6:	sub    edi,edi
  4275c8:	rex.WXB sbb QWORD PTR [r15],0x127242ff
  4275cf:	inc    DWORD PTR [rdx+0x58]
  4275d2:	sub    bh,bh
  4275d4:	ret    0x4679
  4275d7:	(bad)  
  4275d8:	fdivr  DWORD PTR [rdx+0x4c]
  4275db:	call   rcx
  4275dd:	jne    0x427628
  4275df:	dec    ecx
  4275e1:	jo     0x427628
  4275e3:	inc    eax
  4275e5:	push   0x40
  4275e7:	push   QWORD PTR [rdi+0x78ff3c64]
  4275ed:	pop    rdi
  4275ee:	xor    edi,edi
  4275f0:	rex.R push rbp
  4275f2:	sub    bh,bh
  4275f4:	rex.RXB push r14
  4275f6:	sub    bh,bh
  4275f8:	push   0x57
  4275fa:	xor    bh,bh
  4275fc:	jns    0x427655
  4275fe:	div    BYTE PTR [r8+0x57]
  427602:	rex.R sbb eax,0x0
	...
  427620:	mov    ?,WORD PTR [rdx+0x60]
  427623:	pop    rsi
  427624:	stos   BYTE PTR es:[rdi],al
  427625:	jne    0x42767f
  427627:	jmp    rdx
  427629:	adc    BYTE PTR [rax-0x1],0xe9
  42762d:	test   DWORD PTR [rbx-0x1],edx
  427630:	out    dx,eax
  427631:	mov    DWORD PTR [rsi-0x1],edx
  427634:	hlt    
  427635:	mov    WORD PTR [rax-0x1],ds
  427638:	test   DWORD PTR [rsi-0x700600a6],0x89d9ff5b
  427642:	push   rax
  427643:	inc    DWORD PTR [rbp+0x60]
  427646:	sub    edi,edi
  427648:	rex.RB jl 0x42765c
  42764b:	inc    DWORD PTR [rbx-0x7d]
  42764e:	add    bh,bh
  427650:	rex.X
  427651:	data16 (bad) 
  427653:	call   QWORD PTR [rbx+0x65]
  427656:	sub    eax,0x5080e2ff
  42765b:	(bad)  
  42765c:	fidivr DWORD PTR [rbx+0x4d]
  42765f:	call   rdx
  427661:	jbe    0x4276ac
  427663:	dec    ecx
  427665:	jo     0x4276ac
  427667:	(bad)  
  427668:	mov    edi,0x5cff4069
  42766d:	pop    rbp
  42766e:	(bad)  
  42766f:	call   QWORD PTR [rdx+0x60]
  427672:	call   FWORD PTR cs:[rdi+0x71]
  427676:	xor    edi,edi
  427678:	rex.RXB
  427679:	rex.WRXB sub r15b,r15b
  42767c:	test   BYTE PTR [rdi+0x3e],dl
  42767f:	push   QWORD PTR [rax+0x57]
  427682:	rex.R pop rsi
	...
  4276a0:	xchg   edi,eax
  4276a1:	jp     0x42770a
  4276a3:	xchg   edi,eax
  4276a4:	(bad)  
  4276a5:	jg     0x427701
  4276a7:	(bad)  
  4276a8:	in     al,dx
  4276a9:	xchg   DWORD PTR [rdi+rdi*8-0xd],edx
  4276ad:	mov    ebx,DWORD PTR [rax-0x1]
  4276b0:	stc    
  4276b1:	(bad)  
  4276b2:	pop    rbx
  4276b3:	(bad)  
  4276b4:	std    
  4276b5:	xchg   edx,eax
  4276b6:	pop    rsi
  4276b7:	(bad)  
  4276b8:	call   QWORD PTR [rbp-0x690000a0]
  4276be:	(bad)  
  4276bf:	push   QWORD PTR [rbp+0x74]
  4276c2:	cmp    bh,bh
  4276c4:	push   rax
  4276c5:	xchg   BYTE PTR [rip+0x289957ff],ah        # 0x28dbceca
  4276cb:	dec    DWORD PTR [rax+rdx*4+0x10]
  4276cf:	dec    DWORD PTR [rax-0x80]
  4276d2:	adc    edi,edi
  4276d4:	push   rax
  4276d5:	imul   edi,DWORD PTR [rax],0xffffffff
  4276d8:	in     al,dx
  4276d9:	xchg   DWORD PTR [rdi+rdi*8-0x1d],edx
  4276dd:	adc    DWORD PTR [rcx-0x1],0xff4d7bda
  4276e4:	shl    DWORD PTR [rbp+0x49],1
  4276e7:	inc    edi
  4276e9:	outs   dx,DWORD PTR ds:[rsi]
  4276ea:	rex.R call FWORD PTR [rsp+rbx*2+0x2f]
  4276ef:	call   QWORD PTR [rdx+0x60]
  4276f2:	jmp    FWORD PTR cs:[rcx+0x7f]
  4276f6:	inc    DWORD PTR ss:[rsp+rcx*2+0x26]
  4276fb:	push   QWORD PTR [rsi+0x55]
  4276fe:	push   QWORD PTR ss:[rax+0x57]
  427702:	rex.R xchg edi,eax
	...
  427720:	lods   eax,DWORD PTR ds:[rsi]
  427721:	mov    ?,WORD PTR [rdi+rax*8-0x22]
  427725:	mov    DWORD PTR [rbp-0x1],ebx
  427728:	cmc    
  427729:	mov    WORD PTR [rax-0x1],ds
  42772c:	sti    
  42772d:	xchg   ecx,eax
  42772e:	pop    rsp
  42772f:	(bad)  
  427730:	call   QWORD PTR [rbp-0x660000a0]
  427736:	fs (bad) 
  427738:	call   FWORD PTR [rbx-0x62000098]
  42773e:	push   0xffffffffffffffff
  427740:	(bad)  
  427741:	outs   dx,BYTE PTR ds:[rsi]
  427742:	(bad)  
  427743:	dec    DWORD PTR [rdi-0x7b]
  427746:	and    edi,edi
  427748:	pop    rax
  427749:	pushf  
  42774a:	sub    bh,bh
  42774c:	pop    rcx
  42774d:	mov    fs,WORD PTR [rdi]
  42774f:	call   FWORD PTR [rbx+rcx*4+0x46]
  427753:	jmp    FWORD PTR [rdi+0x7b]
  427756:	cmp    edi,edi
  427758:	cmc    
  427759:	mov    WORD PTR [rax-0x1],ds
  42775c:	in     al,dx
  42775d:	xchg   DWORD PTR [rdi+rdi*8-0x1e],edx
  427761:	adc    BYTE PTR [rax-0x1],0x84
  427765:	push   0x33
  427767:	call   QWORD PTR [rdx+0x4cff396a]
  42776d:	push   rsi
  42776e:	sub    edi,edi
  427770:	pop    rsi
  427771:	jo     0x4277a5
  427773:	jmp    FWORD PTR [rcx+0x7f]
  427776:	(bad)  
  427777:	call   QWORD PTR [rax+0x5a]
  42777a:	sub    bh,bh
  42777c:	pop    rsi
  42777d:	push   rdi
  42777e:	xor    bh,bh
  427780:	jo     0x4277d9
  427782:	rex.R mov DWORD PTR [rax],0x0
	...
  42779d:	add    BYTE PTR [rax],al
  42779f:	add    BYTE PTR [rcx-0x12167e6d],dh
  4277a5:	mov    WORD PTR [rbx-0x1],ds
  4277a8:	sti    
  4277a9:	xchg   ecx,eax
  4277aa:	pop    rsp
  4277ab:	(bad)  
  4277ac:	call   QWORD PTR [rsi-0x6400009f]
  4277b2:	addr32 (bad) 
  4277b4:	call   FWORD PTR [rsi-0x5e000094]
  4277ba:	jo     0x4277bb
  4277bc:	jrcxz  0x42775d
  4277be:	imul   edi,edi,0x5e
  4277c1:	jb     0x427804
  4277c3:	call   FWORD PTR [rdi+0x7e]
  4277c6:	and    edi,edi
  4277c8:	xchg   DWORD PTR [rbx-0x6a7700cf],edx
  4277ce:	rex.RX jmp rdx
  4277d1:	(bad)  
  4277d2:	pop    rsi
  4277d3:	(bad)  
  4277d4:	call   QWORD PTR [rsi-0x6e04009f]
  4277da:	pop    rsp
  4277db:	push   rbx
  4277dd:	mov    ebx,DWORD PTR [rax-0x1]
  4277e0:	push   rcx
  4277e1:	pop    rbx
  4277e2:	sub    edi,edi
  4277e4:	rex.WRB pop r11
  4277e6:	sub    edi,edi
  4277e8:	rex.WXB push r15
  4277ea:	sub    bh,bh
  4277ec:	pop    rdx
  4277ed:	jo     0x42781c
  4277ef:	jmp    FWORD PTR [rax+0x7f]
  4277f2:	xor    eax,0x367f69ff
  4277f7:	call   FWORD PTR [rcx+rbp*2+0x30]
  4277fb:	call   QWORD PTR [rbx+rdx*2+0x2b]
  4277ff:	push   QWORD PTR [rax+0x57]
  427802:	rex.R jmp 0xffffffffff9ee58e
  427808:	movsxd ecx,DWORD PTR [rcx+0x35]
  42780b:	jmp    QWORD PTR [rbx+0x49]
  42780e:	xor    eax,0x354963ff
  427813:	jmp    QWORD PTR [rbx+0x49]
  427816:	xor    eax,0x354963ff
  42781b:	jmp    QWORD PTR [rbx+0x49]
  42781e:	xor    eax,0x354963ff
  427823:	jmp    QWORD PTR [rbx+0x49]
  427826:	xor    eax,0x354963ff
  42782b:	jmp    QWORD PTR [rbx+0x49]
  42782e:	xor    eax,0x354963ff
  427833:	jmp    QWORD PTR [rbx+0x49]
  427836:	xor    eax,0x354963ff
  42783b:	jmp    QWORD PTR [rbx+0x49]
  42783e:	xor    eax,0x3f7a6dff
  427843:	(bad)  
  427844:	jge    0x4278c1
  427846:	ds (bad) 
  427848:	mov    esp,0xccff5291
  42784d:	fwait
  42784e:	pop    rdx
  42784f:	(bad)  
  427850:	call   FWORD PTR [rdi-0x64000092]
  427856:	addr32 (bad) 
  427858:	call   QWORD PTR [rbp+0x7997ff60]
  42785e:	cmp    bh,bh
  427860:	push   rbx
  427861:	pop    rsi
  427862:	sub    edi,edi
  427864:	mov    r8b,BYTE PTR [r9]
  427867:	inc    DWORD PTR [rsi-0x7b]
  42786a:	(bad)  
  42786b:	call   QWORD PTR [rcx-0x79]
  42786e:	sbb    bh,bh
  427870:	pop    rbx
  427871:	xchg   BYTE PTR [rdx],ch
  427873:	jmp    QWORD PTR [rax-0x7d]
  427876:	xor    bh,bh
  427878:	(bad)  
  427879:	outs   dx,DWORD PTR ds:[rsi]
  42787a:	call   QWORD PTR ss:[rdi+rdx*2+0x2c]
  42787f:	push   QWORD PTR [rax+0x57]
  427882:	rex.R std 
  427884:	xchg   BYTE PTR [rbp+0x5c],ch
  427887:	push   rsp
  427889:	fmul   st,st(4)
  42788b:	(bad)  
  42788c:	fdivr  QWORD PTR [rbx-0x45220057]
  427892:	test   al,0xff
  427894:	(bad)  [rbp-0x4d26005e]
  42789a:	lahf   
  42789b:	(bad)  
  42789c:	fsubr  DWORD PTR [rdi-0x54290065]
  4278a2:	xchg   edi,eax
  4278a3:	call   rbp
  4278a5:	test   eax,0xa7d4ff93
  4278aa:	xchg   ecx,eax
  4278ab:	call   rsp
  4278ad:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4278ae:	(bad)  
  4278af:	call   rbx
  4278b1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  4278b2:	(bad)  
  4278b3:	call   rsp
  4278b5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4278b6:	(bad)  
  4278b7:	dec    edi
  4278b9:	movabs eax,ds:0x6b51ff354963ff8a
  4278c2:	xor    eax,0x3c756aff
  4278c7:	(bad)  
  4278c8:	jmp    FWORD PTR [rcx+rax*4+0x7ba8ffff]
  4278cf:	(bad)  
  4278d0:	jmp    QWORD PTR [rbx-0x6100008c]
  4278d6:	ins    BYTE PTR es:[rdi],dx
  4278d7:	(bad)  
  4278d8:	call   FWORD PTR [rcx-0x793c009c]
  4278de:	rex.WB call QWORD PTR [r13+0x62]
  4278e2:	sub    eax,0x1a804eff
  4278e7:	call   QWORD PTR [rdx-0x69]
  4278ea:	and    edi,edi
  4278ec:	pop    rcx
  4278ed:	xchg   esi,eax
  4278ee:	(bad)  
  4278ef:	call   FWORD PTR [rbx+0x7c]
  4278f2:	xor    al,0xff
  4278f4:	pop    rdx
  4278f5:	jp     0x427929
  4278f7:	call   FWORD PTR [rsi+0x79]
  4278fa:	xor    edi,edi
  4278fc:	(bad)  
  4278fd:	(bad)  
  4278fe:	xor    edi,edi
  427900:	jo     0x427959
  427902:	rex.R jmp 0xffffffffff9ee68e
  427908:	hlt    
  427909:	fcmovne st,st(7)
  42790b:	(bad)  
  42790c:	stc    
  42790d:	jmp    0x4278f2
  42790f:	(bad)  
  427910:	clc    
  427911:	out    0xe0,eax
  427913:	push   rdi
  427915:	in     al,0xdb
  427917:	push   rsi
  427919:	loope  0x4278f2
  42791b:	push   rbp
  42791d:	(bad)  
  42791f:	push   rsp
  427921:	fcmovne st,st(7)
  427923:	push   rsp
  427925:	fmul   st,st(3)
  427927:	push   rdx
  427929:	(bad)  
  42792a:	(bad)  
  42792b:	push   rdx
  42792d:	rol    bl,cl
  42792f:	push   rax
  427931:	iret   
  427932:	sar    bh,0xf0
  427935:	int3   
  427936:	mov    esp,0x92a8d5ff
  42793b:	jmp    QWORD PTR [rbx+0x49]
  42793e:	xor    eax,0x39715cff
  427943:	jmp    rdx
  427945:	lods   eax,DWORD PTR ds:[rsi]
  427946:	(bad)  
  427947:	(bad)  
  427948:	push   QWORD PTR [rcx-0x53000077]
  42794e:	cmp    edi,0xff79a6ff
  427954:	jmp    QWORD PTR [rcx-0x64000090]
  42795a:	push   0x6095ffff
  42795f:	push   rdi
  427961:	mov    ds,WORD PTR [rdx-0x1]
  427964:	push   rdx
  427965:	jns    0x42799c
  427967:	call   FWORD PTR [rbx-0x64]
  42796a:	cmp    edi,edi
  42796c:	(bad)  
  42796d:	(bad)  
  42796e:	jmp    FWORD PTR ss:[rsi-0x7e]
  427972:	(bad)  
  427973:	jmp    FWORD PTR [rcx-0x80]
  427976:	jmp    QWORD PTR ss:[rdx-0x7f]
  42797a:	xor    al,0xff
  42797c:	fs (bad) 
  42797e:	push   QWORD PTR ss:[rax+0x57]
  427982:	rex.R mov DWORD PTR [rsi-0xa00a393],0xfaffd3dd
  42798d:	out    dx,al
  42798e:	call   0xffffffffe52d7392
  427993:	(bad)  
  427994:	clc    
  427995:	call   0xffffffffe53a797a
  42799a:	fdiv   st(7),st
  42799c:	mul    edx
  42799e:	fdivr  st,st(7)
  4279a0:	neg    bh
  4279a2:	(bad)  
  4279a3:	push   rsp
  4279a5:	fcmovne st,st(7)
  4279a7:	push   rbx
  4279a9:	fmul   st,st(3)
  4279ab:	push   rdx
  4279ad:	(bad)  
  4279ae:	enter  0xf1ff,0xd3
  4279b2:	(bad)  
  4279b3:	push   rcx
  4279b5:	sar    BYTE PTR [rdi-0x6e582a01],1
  4279bb:	jmp    QWORD PTR [rbx+0x49]
  4279be:	xor    eax,0x4e9262ff
  4279c3:	push   QWORD PTR [rdx-0x76]
  4279c6:	rex.WR jmp rbx
  4279c9:	scas   al,BYTE PTR es:[rdi]
  4279ca:	test   bh,bh
  4279cc:	jmp    FWORD PTR [rdi-0x5700007b]
  4279d2:	jl     0x4279d3
  4279d4:	jmp    QWORD PTR [rbx-0x6200008d]
  4279da:	push   0xffffffffffffffff
  4279dc:	call   QWORD PTR [rsi-0x7006009f]
  4279e2:	pop    rbx
  4279e3:	call   QWORD PTR [rcx+0x7c]
  4279e6:	xor    eax,0x3c9b5bff
  4279eb:	jmp    FWORD PTR [rdx-0x6b]
  4279ee:	(bad)  
  4279ef:	call   FWORD PTR [rdi-0x7e]
  4279f2:	(bad)  
  4279f3:	call   FWORD PTR [rdi-0x79]
  4279f6:	cmp    bh,bh
  4279f8:	pop    rsp
  4279f9:	mov    DWORD PTR [rip+0x385c64ff],esi        # 0x389edefe
  4279ff:	push   QWORD PTR [rax+0x57]
  427a02:	rex.R xchg edi,eax
  427a04:	xchg   BYTE PTR [rbp+0x5c],ch
  427a07:	push   rbp
  427a09:	loopne 0x4279e1
  427a0b:	(bad)  
  427a0c:	sti    
  427a0d:	icebp  
  427a0e:	jmp    0x427a0f
  427a10:	out    0xd1,eax
  427a12:	sar    bh,0xa4
  427a15:	(bad)  
  427a16:	sub    bh,bh
  427a18:	out    0xd1,eax
  427a1a:	sar    bh,0xf7
  427a1d:	in     al,0xdc
  427a1f:	push   rsi
  427a21:	loope  0x4279fb
  427a23:	push   rsi
  427a25:	(bad)  
  427a27:	push   rbp
  427a29:	fmul   st(7),st
  427a2b:	push   rsp
  427a2d:	fxch   st(4)
  427a2f:	push   rdx
  427a31:	(bad)  
  427a32:	enter  0xf1ff,0xd3
  427a36:	(bad)  
  427a37:	call   rsi
  427a39:	test   al,0x92
  427a3b:	jmp    QWORD PTR [rbx+0x49]
  427a3e:	xor    eax,0x8dca62ff
  427a43:	jmp    QWORD PTR [rdi-0x69]
  427a46:	pop    rdx
  427a47:	push   QWORD PTR [rax-0x78]
  427a4a:	push   rax
  427a4b:	(bad)  
  427a4c:	push   QWORD PTR [rax-0x56000079]
  427a52:	jle    0x427a53
  427a54:	jmp    QWORD PTR [rbx-0x6200008c]
  427a5a:	imul   edi,edi,0xffffffff
  427a5d:	xchg   edi,eax
  427a5e:	(bad)  
  427a5f:	(bad)  
  427a60:	stc    
  427a61:	nop
  427a62:	pop    rbx
  427a63:	call   QWORD PTR [rdx+0x4fff3e86]
  427a69:	test   BYTE PTR [rip+0x3e9a5bff],dh        # 0x3edcd66e
  427a6f:	call   FWORD PTR [rdi-0x5b]
  427a72:	rex.RB jmp QWORD PTR [r8-0x5b]
  427a76:	rex.RXB call FWORD PTR [r13+0x77]
  427a7a:	jmp    FWORD PTR ss:[rcx+0x5b]
  427a7e:	cmp    al,0xff
  427a80:	jo     0x427ad9
  427a82:	rex.R pop rsi
  427a84:	xchg   BYTE PTR [rbp+0x5c],ch
  427a87:	push   rsi
  427a89:	jrcxz  0x427a64
  427a8b:	(bad)  
  427a8c:	cld    
  427a8d:	repz lock jmp QWORD PTR [rax+riz*2-0x662300d6]
  427a96:	jmp    WORD PTR [rax+riz*2-0x170700d6]
  427a9e:	loopne 0x427a9f
  427aa0:	mov    ebp,0xb3ff9ca8
  427aa5:	popf   
  427aa6:	nop
  427aa7:	jmp    FWORD PTR [rdx-0x68007b6d]
  427aad:	jle    0x427b1e
  427aaf:	dec    DWORD PTR [rbx-0xc009f8f]
  427ab5:	(bad)  
  427ab6:	enter  0xd7ff,0xaa
  427aba:	xchg   esp,eax
  427abb:	jmp    QWORD PTR [rbx+0x49]
  427abe:	xor    eax,0x87bc6dff
  427ac3:	(bad)  
  427ac4:	jns    0x427a8d
  427ac6:	xchg   edi,eax
  427ac7:	jmp    FWORD PTR [rdi-0x4a]
  427aca:	jg     0x427acb
  427acc:	xchg   BYTE PTR [rbp+riz*2+0x7ca8ffff],dl
  427ad3:	(bad)  
  427ad4:	jmp    QWORD PTR [rbx-0x6200008d]
  427ada:	push   0xffffffffffffffff
  427adc:	call   QWORD PTR [rsi-0x7006009f]
  427ae2:	pop    rbx
  427ae3:	dec    DWORD PTR [rbx+0x7f]
  427ae6:	xor    edi,edi
  427ae8:	push   rcx
  427ae9:	mov    DWORD PTR [rbx],esi
  427aeb:	call   FWORD PTR [rsi-0x67]
  427aee:	cmp    edi,edi
  427af0:	pop    rdi
  427af1:	movabs eax,ds:0x685dff4ba762ff47
  427afa:	xor    eax,0x415a72ff
  427aff:	cli    
  427b00:	jo     0x427b59
  427b02:	rex.R sbb eax,0xff5c6d86
  427b08:	mul    ebp
  427b0a:	fdiv   st(7),st
  427b0c:	std    
  427b0d:	div    bl
  427b0f:	jmp    rdi
  427b11:	rol    eax,1
  427b13:	jmp    QWORD PTR [rax+riz*2-0x2e1800d6]
  427b1a:	sar    bh,0xf9
  427b1d:	jmp    0x427b04
  427b1f:	(bad)  
  427b20:	stc    
  427b21:	jmp    0xffffffffe73a7b07
  427b26:	(bad)  
  427b28:	mul    edx
  427b2a:	fcos   
  427b2c:	cmc    
  427b2d:	loopne 0x427b03
  427b2f:	push   rsp
  427b31:	(bad)  
  427b33:	push   rsp
  427b35:	fxch   st(5)
  427b37:	(bad)  
  427b38:	fsubr  DWORD PTR [rax+rbx*4+0x354963ff]
  427b3f:	inc    DWORD PTR [rbx+0x7dff85b5]
  427b45:	lods   al,BYTE PTR ds:[rsi]
  427b46:	(bad)  
  427b47:	push   QWORD PTR [rdi-0x74]
  427b4a:	(bad)  
  427b4b:	(bad)  
  427b4c:	mov    edi,0xffff79a4
  427b51:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  427b52:	jns    0x427b53
  427b54:	jmp    QWORD PTR [rcx-0x64000090]
  427b5a:	push   0x6095ffff
  427b5f:	push   rdi
  427b61:	mov    ds,WORD PTR [rdx-0x1]
  427b64:	jno    0x427aed
  427b66:	xor    edi,edi
  427b68:	movsxd eax,DWORD PTR [rbx+0x7e48ff31]
  427b6e:	sub    eax,0x3f9d62ff
  427b73:	call   FWORD PTR [rcx-0x68]
  427b76:	call   FWORD PTR ds:[rbp+0x62]
  427b7a:	cmp    edi,edi
  427b7c:	sbb    DWORD PTR [rax+0x3e],0xffffffb6
  427b80:	add    BYTE PTR [rax],al
  427b82:	add    BYTE PTR [rax],al
  427b84:	xchg   BYTE PTR [rbp+0x5c],ch
  427b87:	(bad)  
  427b88:	clc    
  427b89:	out    0xdf,eax
  427b8b:	(bad)  
  427b8c:	std    
  427b8d:	stc    
  427b8e:	idiv   edi
  427b90:	cld    
  427b91:	div    esp
  427b93:	(bad)  
  427b94:	cld    
  427b95:	hlt    
  427b96:	lock (bad) 
  427b98:	sti    
  427b99:	icebp  
  427b9a:	in     al,dx
  427b9b:	(bad)  
  427b9c:	cli    
  427b9d:	out    dx,al
  427b9e:	jmp    0xffffffffe62e75a2
  427ba3:	(bad)  
  427ba4:	stc    
  427ba5:	jmp    0xffffffffe63b7b8b
  427baa:	(bad)  
  427bac:	mul    edx
  427bae:	fcos   
  427bb0:	neg    bh
  427bb2:	(bad)  
  427bb3:	push   rsp
  427bb5:	fst    st(1)
  427bb7:	(bad)  
  427bb8:	fnstenv [rcx+0x4963ff9d]
  427bbe:	xor    eax,0x81b27fff
  427bc3:	inc    DWORD PTR [rbx-0x78007c51]
  427bc9:	movabs eax,ds:0x92a0ff7ba8ffff74
  427bd2:	call   FWORD PTR fs:[rbx+0x71]
  427bd6:	rex.XB (bad) 
  427bd8:	call   FWORD PTR [rcx-0x6f3a009c]
  427bde:	push   rbp
  427bdf:	call   QWORD PTR [rbx-0x3200bb75]
  427be5:	xchg   BYTE PTR [rbp-0x1],cl
  427be8:	stos   DWORD PTR es:[rdi],eax
  427be9:	add    BYTE PTR [rcx-0x1],0x43
  427bed:	jbe    0x427c1b
  427bef:	jmp    QWORD PTR [rcx-0x64]
  427bf2:	(bad)  
  427bf3:	call   QWORD PTR [rbx+0x70]
  427bf6:	jmp    FWORD PTR ss:[rsi+0x5e]
  427bfa:	(bad)  
  427bfb:	cmc    
  427bfc:	xchg   BYTE PTR [rdi+0x3d],dl
  427bff:	sub    eax,0x0
  427c04:	xchg   BYTE PTR [rbp+0x5c],ch
  427c07:	(bad)  
  427c08:	clc    
  427c09:	jmp    0xfffffffffc417bf0
  427c0e:	stc    
  427c0f:	jmp    rdi
  427c11:	rol    eax,1
  427c13:	jmp    QWORD PTR [rax+riz*2-0x2e1800d6]
  427c1a:	sar    bh,0xfb
  427c1d:	icebp  
  427c1e:	in     eax,dx
  427c1f:	(bad)  
  427c20:	cli    
  427c21:	out    dx,eax
  427c22:	jmp    0xffffffffe72f7626
  427c27:	(bad)  
  427c28:	stc    
  427c29:	jmp    0xffffffffe73a7c10
  427c2e:	fdivp  st(7),st
  427c30:	mul    ebx
  427c32:	fcos   
  427c34:	mul    al
  427c36:	(bad)  
  427c37:	(bad)  
  427c38:	(bad)  [rbp+0x4963ffa2]
  427c3e:	xor    eax,0x8bb391ff
  427c43:	call   FWORD PTR [rdx+0x66ff86ad]
  427c49:	mov    bh,0x7e
  427c4b:	call   rcx
  427c4d:	movabs ds:0x8b5bff4c755bff76,eax
  427c56:	pop    rdx
  427c57:	push   QWORD PTR [rcx+rcx*4+0x54]
  427c5b:	push   QWORD PTR [rcx-0x75]
  427c5e:	push   rax
  427c5f:	call   FWORD PTR [rdx-0x7d]
  427c62:	cmp    eax,0x42869bff
  427c67:	(bad)  
  427c68:	fdivr  DWORD PTR [rdx+0x4c]
  427c6b:	call   QWORD PTR [rax+0x50ff3c79]
  427c71:	je     0x427ca8
  427c73:	jmp    FWORD PTR [rbx+riz*2+0x43]
  427c77:	dec    BYTE PTR [rax+0x763e59]
  427c7d:	add    BYTE PTR [rax],al
  427c7f:	add    BYTE PTR [rax],al
  427c81:	add    BYTE PTR [rax],al
  427c83:	add    BYTE PTR [rdx-0x6009f8f],cl
  427c89:	jmp    0x427c71
  427c8b:	(bad)  
  427c8c:	(bad)  
  427c8d:	std    
  427c8e:	cld    
  427c8f:	jmp    QWORD PTR [rax+riz*2-0x662300d6]
  427c96:	jmp    WORD PTR [rax+riz*2-0xb0300d6]
  427c9e:	icebp  
  427c9f:	(bad)  
  427ca0:	mov    ebp,0xb3ff9ca8
  427ca5:	popf   
  427ca6:	nop
  427ca7:	jmp    FWORD PTR [rdx-0x68007b6d]
  427cad:	jle    0x427d1e
  427caf:	dec    DWORD PTR [rbx-0x9009f8f]
  427cb5:	jrcxz  0x427c91
  427cb7:	(bad)  
  427cb8:	fidivr WORD PTR [rcx+0x4963ffa6]
  427cbe:	xor    eax,0x759d82ff
  427cc3:	call   QWORD PTR [rbx+0x6aff8ead]
  427cc9:	movabs eax,ds:0x7359ff6d9de6ff71
  427cd2:	rex.WXB jmp QWORD PTR [r9+r8*8-0x77]
  427cd7:	jmp    FWORD PTR [rcx-0x63]
  427cda:	movsxd edi,edi
  427cdc:	jne    0x427c68
  427cde:	push   rsp
  427cdf:	(bad)  
  427ce0:	jmp    0xffffffffdf41d06a
  427ce5:	jle    0x427d36
  427ce7:	call   rbx
  427ce9:	ja     0x427d35
  427ceb:	(bad)  
  427cec:	mov    esi,0x8bff5176
  427cf1:	jns    0x427d4e
  427cf3:	sti    
  427cf4:	mov    fs,WORD PTR [rbp+0x48]
  427cf7:	nop
	...
  427d04:	mov    ?,WORD PTR [rdi+0x66]
  427d07:	(bad)  
  427d08:	cli    
  427d09:	out    dx,al
  427d0a:	jmp    0x427d0e
  427d0f:	jmp    rdi
  427d11:	rol    eax,1
  427d13:	jmp    QWORD PTR [rax+riz*2-0x2e1800d6]
  427d1a:	sar    bh,0xfd
  427d1d:	clc    
  427d1e:	cmc    
  427d1f:	(bad)  
  427d20:	cld    
  427d21:	hlt    
  427d22:	repnz (bad) 
  427d24:	sti    
  427d25:	repnz out dx,al
  427d27:	(bad)  
  427d28:	cli    
  427d29:	out    dx,eax
  427d2a:	jmp    0x427d2b
  427d2c:	cli    
  427d2d:	in     eax,dx
  427d2e:	out    0xff,eax
  427d30:	stc    
  427d31:	(bad)  
  427d32:	jrcxz  0x427d33
  427d34:	clc    
  427d35:	out    0xde,al
  427d37:	jmp    rax
  427d39:	mov    ebp,0x4963ffac
  427d3e:	xor    eax,0x749c93ff
  427d43:	(bad)  
  427d44:	jge    0x427cdb
  427d46:	jo     0x427d47
  427d48:	test   BYTE PTR [rdx-0x7e980095],dl
  427d4e:	pop    rax
  427d4f:	push   QWORD PTR [rax-0x5c]
  427d52:	jnp    0x427d53
  427d54:	gs int3 
  427d56:	xchg   ebx,eax
  427d57:	call   FWORD PTR [rbp-0x3b]
  427d5a:	cmp    bh,0x6d
  427d5d:	mov    edx,DWORD PTR [rdi+rdi*8-0x76]
  427d61:	xchg   DWORD PTR [rbp-0x1],ecx
  427d64:	iret   
  427d65:	jge    0x427dbb
  427d67:	(bad)  
  427d68:	mov    edx,0xadff607e
  427d6d:	sub    DWORD PTR [rcx-0x18],0x765b76ac
	...
  427d84:	xchg   ebp,eax
  427d85:	jge    0x427df3
  427d87:	(bad)  
  427d88:	cli    
  427d89:	lock jmp 0x427d8b
  427d8c:	(bad)  
  427d8d:	(bad)  
  427d8e:	(bad)  
  427d8f:	(bad)  
  427d90:	(bad)  
  427d91:	(bad)  
  427d92:	(bad)  
  427d93:	(bad)  
  427d94:	(bad)  
  427d95:	std    
  427d96:	cld    
  427d97:	(bad)  
  427d98:	(bad)  
  427d99:	cld    
  427d9a:	cli    
  427d9b:	(bad)  
  427d9c:	(bad)  
  427d9d:	cli    
  427d9e:	clc    
  427d9f:	(bad)  
  427da0:	cld    
  427da1:	clc    
  427da2:	cmc    
  427da3:	(bad)  
  427da4:	cld    
  427da5:	hlt    
  427da6:	icebp  
  427da7:	(bad)  
  427da8:	sti    
  427da9:	repz out dx,al
  427dab:	(bad)  
  427dac:	cli    
  427dad:	out    dx,eax
  427dae:	(bad)  
  427daf:	(bad)  
  427db0:	cli    
  427db1:	in     eax,dx
  427db2:	out    0xff,al
  427db4:	stc    
  427db5:	jmp    0xffffffffc3237d9c
  427dba:	mov    dl,0xff
  427dbc:	movsxd ecx,DWORD PTR [rcx+0x35]
  427dbf:	jmp    QWORD PTR [rax-0x5a007e67]
  427dc5:	scas   eax,DWORD PTR es:[rdi]
  427dc6:	xchg   ebp,eax
  427dc7:	dec    DWORD PTR [rdx+0x7bff799a]
  427dcd:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  427dce:	cmp    bh,0x76
  427dd1:	(bad)  
  427dd2:	cwde   
  427dd3:	jmp    FWORD PTR [rbx-0x3a]
  427dd6:	(bad)  
  427dd7:	jmp    FWORD PTR [rbx-0x4a]
  427dda:	jne    0x427ddb
  427ddc:	jle    0x427d64
  427dde:	(bad)  
  427ddf:	jmp    QWORD PTR [rcx-0x4f009678]
  427de5:	xchg   DWORD PTR [rcx-0xa],esi
  427de8:	mov    bl,0x81
  427dea:	gs mov dh,0xb0
  427ded:	jnp    0x427e4e
  427def:	sub    eax,0x0
	...
  427e04:	fwait
  427e05:	test   BYTE PTR [rdi+rdi*8-0x5],dh
  427e09:	repnz out dx,eax
  427e0b:	(bad)  
  427e0c:	(bad)  
  427e0d:	(bad)  
  427e0e:	(bad)  
  427e0f:	jmp    rdi
  427e11:	rol    eax,1
  427e13:	jmp    QWORD PTR [rax+riz*2-0x2e1800d6]
  427e1a:	sar    bh,0xfe
  427e1d:	cld    
  427e1e:	sti    
  427e1f:	(bad)  
  427e20:	std    
  427e21:	stc    
  427e22:	clc    
  427e23:	(bad)  
  427e24:	std    
  427e25:	div    ebp
  427e27:	(bad)  
  427e28:	std    
  427e29:	cmc    
  427e2a:	icebp  
  427e2b:	(bad)  
  427e2c:	sti    
  427e2d:	repz out dx,eax
  427e2f:	(bad)  
  427e30:	cli    
  427e31:	lock jmp 0x427e33
  427e34:	stc    
  427e35:	in     eax,dx
  427e36:	out    0xff,eax
  427e38:	jrcxz  0x427e00
  427e3a:	mov    bh,0xff
  427e3c:	movsxd ecx,DWORD PTR [rcx+0x35]
  427e3f:	push   QWORD PTR [rdi-0x49917964]
  427e45:	(bad)  
  427e46:	xchg   DWORD PTR [rax-0x3779674a],esp
  427e4c:	mov    ah,0x96
  427e4e:	test   dl,ch
  427e50:	mov    bl,0x94
  427e52:	(bad)  
  427e53:	std    
  427e54:	mov    al,0x93
  427e56:	sub    bh,0xab
  427e59:	xchg   ecx,eax
  427e5a:	jnp    0x427e39
  427e5c:	movabs ds:0xb48a6b8aa5c5728f,eax
  427e65:	test   BYTE PTR [rbx+0x28],ch
	...
  427e84:	movabs ds:0xfffff1f5fcff7c8c,al
  427e8d:	(bad)  
  427e8e:	(bad)  
  427e8f:	jmp    QWORD PTR [rax+riz*2-0x662300d6]
  427e96:	jmp    WORD PTR [rax+riz*2-0x10100d6]
  427e9e:	std    
  427e9f:	(bad)  
  427ea0:	mov    ebp,0xb3ff9ca8
  427ea5:	popf   
  427ea6:	nop
  427ea7:	jmp    FWORD PTR [rdx-0x68007b6d]
  427ead:	jle    0x427f1e
  427eaf:	dec    DWORD PTR [rbx-0x5009f8f]
  427eb5:	lock jmp 0x427eb7
  427eb8:	in     eax,0xcb
  427eba:	mov    esp,0x354963ff
  427ebf:	inc    DWORD PTR [rax]
	...
  427f01:	add    BYTE PTR [rax],al
  427f03:	add    BYTE PTR [rcx-0x3007b6c],ch
  427f09:	div    bl
  427f0b:	(bad)  
  427f0c:	(bad)  
  427f0d:	(bad)  
  427f0e:	(bad)  
  427f0f:	jmp    rdi
  427f11:	rol    eax,1
  427f13:	jmp    QWORD PTR [rax+riz*2-0x2e1800d6]
  427f1a:	sar    bh,0xff
  427f1d:	(bad)  
  427f1e:	(bad)  
  427f1f:	(bad)  
  427f20:	(bad)  
  427f21:	(bad)  
  427f22:	std    
  427f23:	(bad)  
  427f24:	(bad)  
  427f25:	cld    
  427f26:	cld    
  427f27:	(bad)  
  427f28:	(bad)  
  427f29:	cli    
  427f2a:	stc    
  427f2b:	(bad)  
  427f2c:	cld    
  427f2d:	clc    
  427f2e:	cmc    
  427f2f:	(bad)  
  427f30:	cld    
  427f31:	cmc    
  427f32:	repz (bad) 
  427f34:	sti    
  427f35:	hlt    
  427f36:	out    dx,eax
  427f37:	jmp    rdi
  427f39:	iret   
  427f3a:	ret    0x63ff
  427f3d:	rex.WB xor rax,0xff
	...
  427f83:	add    BYTE PTR [rcx-0x3007464],dh
  427f89:	clc    
  427f8a:	cmc    
  427f8b:	(bad)  
  427f8c:	(bad)  
  427f8d:	(bad)  
  427f8e:	(bad)  
  427f8f:	(bad)  
  427f90:	(bad)  
  427f91:	(bad)  
  427f92:	(bad)  
  427f93:	(bad)  
  427f94:	(bad)  
  427f95:	(bad)  
  427f96:	(bad)  
  427f97:	(bad)  
  427f98:	(bad)  
  427f99:	(bad)  
  427f9a:	(bad)  
  427f9b:	(bad)  
  427f9c:	(bad)  
  427f9d:	(bad)  
  427f9e:	(bad)  
  427f9f:	(bad)  
  427fa0:	(bad)  
  427fa1:	(bad)  
  427fa2:	(bad)  
  427fa3:	(bad)  
  427fa4:	(bad)  
  427fa5:	(bad)  
  427fa6:	std    
  427fa7:	(bad)  
  427fa8:	(bad)  
  427fa9:	cld    
  427faa:	sti    
  427fab:	(bad)  
  427fac:	(bad)  
  427fad:	sti    
  427fae:	stc    
  427faf:	(bad)  
  427fb0:	fcmove st,st(3)
  427fb2:	ret    
  427fb3:	push   QWORD PTR [rdx-0x53007366]
  427fb9:	xchg   ebx,eax
  427fba:	cmp    edi,0x63
  427fbd:	rex.WB xor rax,0xff
	...
  428003:	add    BYTE PTR [rsi-0x2006d5d],dh
  428009:	cli    
  42800a:	clc    
  42800b:	(bad)  
  42800c:	(bad)  
  42800d:	(bad)  
  42800e:	(bad)  
  42800f:	(bad)  
  428010:	(bad)  
  428011:	(bad)  
  428012:	(bad)  
  428013:	(bad)  
  428014:	(bad)  
  428015:	(bad)  
  428016:	(bad)  
  428017:	(bad)  
  428018:	(bad)  
  428019:	(bad)  
  42801a:	(bad)  
  42801b:	(bad)  
  42801c:	(bad)  
  42801d:	(bad)  
  42801e:	(bad)  
  42801f:	(bad)  
  428020:	(bad)  
  428021:	(bad)  
  428022:	(bad)  
  428023:	(bad)  
  428024:	(bad)  
  428025:	(bad)  
  428026:	(bad)  
  428027:	(bad)  
  428028:	(bad)  
  428029:	(bad)  
  42802a:	(bad)  
  42802b:	(bad)  
  42802c:	(bad)  
  42802d:	std    
  42802e:	sti    
  42802f:	jmp    QWORD PTR [rdx+0x6cff7c8c]
  428035:	push   rcx
  428036:	cmp    eax,0x3d516cff
  42803b:	jmp    QWORD PTR [rbx+0x49]
  42803e:	xor    eax,0xff
	...
  428083:	add    BYTE PTR [rbx-0x1006758],bh
  428089:	sti    
  42808a:	cli    
  42808b:	(bad)  
  42808c:	(bad)  
  42808d:	(bad)  
  42808e:	(bad)  
  42808f:	(bad)  
  428090:	(bad)  
  428091:	(bad)  
  428092:	(bad)  
  428093:	(bad)  
  428094:	(bad)  
  428095:	(bad)  
  428096:	(bad)  
  428097:	(bad)  
  428098:	(bad)  
  428099:	(bad)  
  42809a:	(bad)  
  42809b:	(bad)  
  42809c:	(bad)  
  42809d:	(bad)  
  42809e:	(bad)  
  42809f:	(bad)  
  4280a0:	(bad)  
  4280a1:	(bad)  
  4280a2:	(bad)  
  4280a3:	(bad)  
  4280a4:	(bad)  
  4280a5:	(bad)  
  4280a6:	(bad)  
  4280a7:	(bad)  
  4280a8:	(bad)  
  4280a9:	(bad)  
  4280aa:	(bad)  
  4280ab:	(bad)  
  4280ac:	(bad)  
  4280ad:	(bad)  
  4280ae:	(bad)  
  4280af:	jmp    QWORD PTR [rdx-0x18008374]
  4280b5:	(bad)  
  4280b7:	dec    DWORD PTR [rax+0xff5d70]
	...
  428101:	add    BYTE PTR [rax],al
  428103:	add    BYTE PTR [rdi-0x1006354],bh
  428109:	std    
  42810a:	cld    
  42810b:	(bad)  
  42810c:	(bad)  
  42810d:	cld    
  42810e:	sti    
  42810f:	(bad)  
  428110:	(bad)  
  428111:	sti    
  428112:	cli    
  428113:	(bad)  
  428114:	(bad)  
  428115:	cli    
  428116:	clc    
  428117:	(bad)  
  428118:	std    
  428119:	stc    
  42811a:	idiv   edi
  42811c:	(bad)  
  42811d:	stc    
  42811e:	idiv   bh
  428120:	std    
  428121:	div    esi
  428123:	(bad)  
  428124:	std    
  428125:	div    esp
  428127:	(bad)  
  428128:	cld    
  428129:	div    dl
  42812b:	(bad)  
  42812c:	cld    
  42812d:	hlt    
  42812e:	icebp  
  42812f:	jmp    QWORD PTR [rdx-0x77008374]
  428135:	jo     0x428194
  428137:	inc    DWORD PTR [rax]
	...
  428181:	add    BYTE PTR [rax],al
  428183:	add    BYTE PTR [rdi-0x40006354],bh
  428189:	lods   al,BYTE PTR ds:[rsi]
  42818a:	pushf  
  42818b:	(bad)  
  42818c:	mov    ebx,0xb6ff98a8
  428191:	movabs ds:0x94a9ff8b9bb0ff92,al
  42819a:	test   bh,bh
  42819c:	movabs ds:0x95ff74849bff7c8d,al
  4281a5:	jge    0x428214
  4281a7:	dec    DWORD PTR [rdi-0x75009a8a]
  4281ad:	jno    0x42820f
  4281af:	inc    DWORD PTR [rsi+0xff5c6d]
	...
  428201:	add    BYTE PTR [rax],al
  428203:	add    bh,bh
  428205:	cld    
  428206:	add    BYTE PTR [rdi-0x1],bh
  428209:	lock add BYTE PTR [rdi],bl
  42820c:	jmp    rax
  42820e:	add    BYTE PTR [rdi],cl
  428210:	inc    eax
  428212:	add    BYTE PTR [rdi],al
  428214:	inc    DWORD PTR [rax+0xff0300]
  42821a:	add    BYTE PTR [rcx],al
  42821c:	inc    DWORD PTR [rax]
  42821e:	add    BYTE PTR [rcx],al
  428220:	inc    BYTE PTR [rax]
  428222:	add    BYTE PTR [rax],al
  428224:	inc    BYTE PTR [rax]
  428226:	add    BYTE PTR [rax],al
  428228:	inc    BYTE PTR [rax]
  42822a:	add    BYTE PTR [rax],al
  42822c:	inc    BYTE PTR [rax]
  42822e:	add    BYTE PTR [rax],al
  428230:	inc    BYTE PTR [rax]
	...
  42824e:	add    BYTE PTR [rcx],al
  428250:	add    BYTE PTR [rax],al
  428252:	add    BYTE PTR [rcx],al
  428254:	add    BYTE PTR [rax],al
  428256:	add    BYTE PTR [rbx],al
  428258:	add    BYTE PTR [rax],al
  42825a:	add    BYTE PTR [rdi],al
  42825c:	add    BYTE PTR [rax],al
  42825e:	add    BYTE PTR [rdi],cl
  428260:	add    BYTE PTR [rax],al
  428262:	add    BYTE PTR [rdi],bl
  428264:	add    BYTE PTR [rax],al
  428266:	add    BYTE PTR [rdi+0x0],bh
  428269:	add    edi,edi
  42826b:	inc    DWORD PTR [rax]
  42826d:	add    edi,edi
  42826f:	inc    DWORD PTR [rax]
  428271:	add    edi,edi
  428273:	inc    DWORD PTR [rax]
  428275:	add    edi,edi
  428277:	inc    DWORD PTR [rax]
  428279:	add    edi,edi
  42827b:	inc    DWORD PTR [rax]
  42827d:	(bad)  
  42827e:	(bad)  
  42827f:	inc    DWORD PTR [rax]
  428281:	ud0    edi,edi
  428284:	sub    BYTE PTR [rax],al
  428286:	add    BYTE PTR [rax],al
  428288:	adc    BYTE PTR [rax],al
  42828a:	add    BYTE PTR [rax],al
  42828c:	and    BYTE PTR [rax],al
  42828e:	add    BYTE PTR [rax],al
  428290:	add    DWORD PTR [rax],eax
  428292:	and    BYTE PTR [rax],al
  428294:	add    BYTE PTR [rax],al
  428296:	add    BYTE PTR [rax],al
  428298:	add    al,0x0
	...
  4282bf:	add    BYTE PTR [rdi-0x6ecba38e],dl
  4282c5:	ins    DWORD PTR es:[rdi],dx
  4282c6:	pop    rax
  4282c7:	or     BYTE PTR [rbx-0x7a3fac97],0x64
  4282ce:	rex.WRX in eax,dx
  4282d0:	jg     0x428331
  4282d2:	rex.WX in eax,dx
  4282d4:	jns    0x428330
  4282d6:	rex.RB shl BYTE PTR [r11+0x56],0x41
  4282db:	sub    BYTE PTR [rsi+0x52],0x3d
  4282df:	xor    al,0x0
	...
  4282f9:	add    BYTE PTR [rax],al
  4282fb:	add    BYTE PTR [rbp-0x6a989e89],bl
  428301:	outs   dx,DWORD PTR ds:[rsi]
  428302:	pop    rcx
  428303:	fcom   DWORD PTR [rdx+0x6bff4970]
  428309:	rex.RB call QWORD PTR gs:[r11-0x4d00bb9a]
  428311:	call   WORD PTR ds:[rsi+0x79ff3d5d]
  428319:	push   rbx
  42831a:	cmp    edi,edi
  42831c:	push   0x4e
  42831e:	cmp    ebx,eax
  428320:	imul   ecx,DWORD PTR [rdi+0x3b],0x67
	...
  428338:	movabs ds:0xc5f45e77a267657c,eax
  428341:	jle    0x42839b
  428343:	inc    DWORD PTR [rdi+0x5cff2e74]
  428349:	je     0x42836f
  42834b:	call   QWORD PTR [rbx+0x61]
  42834e:	dec    DWORD PTR ds:[rax-0x4400c39e]
  428355:	cmp    ax,0xb6ff
  428359:	movsxd edi,DWORD PTR [rbx]
  42835b:	dec    DWORD PTR [rbx+0x68ff3856]
  428361:	rex.WR cmp spl,r14b
  428364:	imul   ecx,DWORD PTR [rdi+0x3b],0x67
	...
  428374:	test   al,0x80
  428376:	imul   esi,DWORD PTR [rdx+riz*4],0xced8647a
  42837d:	xchg   BYTE PTR [rdx-0x1],ah
  428380:	call   0xffffffffcc41dd0e
  428385:	add    DWORD PTR [rdi-0x1],0xff1f8b5d
  42838c:	xor    al,0x88
  42838e:	and    bh,bh
  428390:	pop    rdx
  428391:	addr32 (bad) 
  428393:	jmp    FWORD PTR [rdi+0x64]
  428396:	push   QWORD PTR [r14-0x4a00c299]
  42839d:	(bad)  
  42839e:	cmp    bh,bh
  4283a0:	mov    edx,DWORD PTR [rsi+0x38]
  4283a3:	jmp    FWORD PTR [rdx+0x4e]
  4283a6:	cmp    ebx,eax
  4283a8:	outs   dx,BYTE PTR ds:[rsi]
  4283a9:	push   rdx
  4283aa:	cmp    eax,0x34
  4283af:	add    BYTE PTR [rax],al
  4283b1:	add    BYTE PTR [rax],al
  4283b3:	add    BYTE PTR [rcx-0x3e7f957f],ch
  4283b9:	mov    BYTE PTR [rbx-0x1],ch
  4283bc:	cmc    
  4283bd:	xchg   esp,eax
  4283be:	fs (bad) 
  4283c0:	out    dx,al
  4283c1:	nop
  4283c2:	(bad)  
  4283c3:	inc    ebp
  4283c5:	test   BYTE PTR [rdx-0x1],bl
  4283c8:	push   rsp
  4283c9:	jle    0x42840a
  4283cb:	(bad)  
  4283cc:	cmp    ebx,DWORD PTR [rbx-0x74c300dc]
  4283d2:	sub    bh,bh
  4283d4:	ins    DWORD PTR es:[rdi],dx
  4283d5:	ins    BYTE PTR es:[rdi],dx
  4283d6:	cmp    al,0xff
  4283d8:	mov    ah,0x6b
  4283da:	rex.X inc DWORD PTR [rdi+0x5dff3c60]
  4283e1:	pop    rdi
  4283e2:	notrack jmp QWORD PTR [rcx+0x59]
  4283e6:	rex.R push QWORD PTR [rbx+0x56]
  4283ea:	add    BYTE PTR [r8],0x0
  4283ee:	add    BYTE PTR [rax],al
  4283f0:	add    BYTE PTR [rax],al
  4283f2:	add    BYTE PTR [rax],al
  4283f4:	stos   DWORD PTR es:[rdi],eax
  4283f5:	(bad)  
  4283f6:	ins    BYTE PTR es:[rdi],dx
  4283f7:	rcr    dh,0x96
  4283fa:	jno    0x4283fb
  4283fc:	stc    
  4283fd:	pushf  
  4283fe:	outs   dx,BYTE PTR ds:[rsi]
  4283ff:	(bad)  
  428400:	fst    QWORD PTR [rdx+0x7a6eff69]
  428406:	push   rdx
  428407:	call   QWORD PTR [rbp-0x5c]
  42840a:	cmp    bh,bh
  42840c:	rex.WRXB cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42840e:	xor    bh,bh
  428410:	adc    BYTE PTR [rbp+0x7acdff2d],0x4c
  428417:	jmp    FWORD PTR [rbp+0x6d]
  42841a:	(bad)  
  42841b:	dec    DWORD PTR [rbx+0x65]
  42841e:	rex.X push QWORD PTR [rcx]
  428421:	jnp    0x428439
  428423:	jmp    QWORD PTR [rdx+0x6a]
  428426:	xor    edi,edi
  428428:	jns    0x428484
  42842a:	rex.RB shl BYTE PTR [r9+0x57],0x44
  42842f:	jmp    FWORD PTR [rcx+rdx*2+0x3d]
  428433:	jmp    FWORD PTR [rcx+rdx*2+0x3d]
  428437:	jmp    FWORD PTR [rcx+rdx*2+0x3d]
  42843b:	jmp    FWORD PTR [rcx+rdx*2+0x3d]
  42843f:	jmp    FWORD PTR [rcx+rdx*2+0x3d]
  428443:	jmp    FWORD PTR [rcx+rdx*2+0x3d]
  428447:	jmp    FWORD PTR [rcx+rdx*2+0x3d]
  42844b:	call   QWORD PTR [rsi-0x2000c15e]
  428451:	mov    DWORD PTR [rbp-0x1],ebx
  428454:	(bad)  
  428455:	adc    BYTE PTR [rdi+rdi*8+0x51],0x6e
  42845a:	rex.W (bad) 
  42845c:	cmp    eax,DWORD PTR [rsp+rbp*1+0x158d2bff]
  428463:	(bad)  
  428464:	cmp    al,0x7d
  428466:	sbb    al,0xff
  428468:	jg     0x4284c9
  42846a:	rex.WX in eax,dx
  42846c:	(bad)  
  42846d:	ja     0x4284d5
  42846f:	(bad)  
  428470:	stc    
  428471:	in     al,0xda
  428473:	(bad)  
  428474:	out    dx,eax
  428475:	(bad)  
  428476:	leave  
  428477:	(bad)  
  428478:	out    dx,eax
  428479:	(bad)  
  42847a:	leave  
  42847b:	(bad)  
  42847c:	out    dx,eax
  42847d:	(bad)  
  42847e:	leave  
  42847f:	(bad)  
  428480:	out    dx,eax
  428481:	(bad)  
  428482:	leave  
  428483:	jmp    rsp
  428485:	(bad)  
  428486:	mov    ch,0xff
  428488:	ins    BYTE PTR es:[rdi],dx
  428489:	push   rcx
  42848a:	cmp    eax,0x6e97e5ff
  42848f:	jmp    rsi
  428491:	xchg   ecx,eax
  428492:	data16 (bad) 
  428494:	fmul   QWORD PTR [rcx-0x5e9b00a4]
  42849a:	sub    edi,edi
  42849c:	(bad)  
  42849d:	popf   
  42849e:	and    al,0xff
  4284a0:	rex xchg esi,eax
  4284a2:	sbb    eax,0x1f8845ff
  4284a7:	inc    DWORD PTR [rbp-0x6812b19c]
  4284ad:	sub    BYTE PTR [rdi-0x1],0xfb
  4284b1:	repz out dx,eax
  4284b3:	jmp    QWORD PTR [rax+riz*2-0x180700d6]
  4284ba:	(bad)  
  4284bc:	xchg   edi,eax
  4284bd:	jle    0x42852e
  4284bf:	call   QWORD PTR [rdi-0x1b009082]
  4284c5:	(bad)  
  4284c6:	mov    ch,0xff
  4284c8:	ins    BYTE PTR es:[rdi],dx
  4284c9:	push   rcx
  4284ca:	cmp    eax,0x6ea2b9ff
  4284cf:	call   rdx
  4284d1:	cdq    
  4284d2:	push   0x648fe4ff
  4284d7:	jmp    QWORD PTR [rbp+0x4dff3c96]
  4284dd:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  4284de:	sub    edi,edi
  4284e0:	rex.XB lahf 
  4284e2:	and    edi,edi
  4284e4:	push   rdx
  4284e5:	mov    ch,BYTE PTR [rdi+rdi*8]
  4284e8:	mov    ebp,DWORD PTR [rcx+0x53]
  4284eb:	rcr    BYTE PTR [rdi-0x2008777],0xf8
  4284f2:	cmc    
  4284f3:	(bad)  
  4284f4:	sti    
  4284f5:	repz out dx,al
  4284f7:	(bad)  
  4284f8:	stc    
  4284f9:	in     eax,dx
  4284fa:	call   0xffffffffe02a7dfe
  4284ff:	push   rsi
  428501:	loope  0x4284da
  428503:	jmp    rsp
  428505:	(bad)  
  428506:	mov    eax,0x3d516cff
  42850b:	jmp    QWORD PTR [rdx-0x5400682e]
  428511:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  428512:	imul   edi,edi,0xffffffed
  428515:	cdq    
  428516:	imul   edi,edi,0xff5b8de0
  42851c:	push   rbx
  42851d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  42851e:	dec    DWORD PTR cs:[rbp+riz*4+0x29]
  428523:	jmp    FWORD PTR [rdi-0x7c]
  428526:	rex call QWORD PTR [rcx-0x587fa793]
  42852d:	xchg   edx,eax
  42852e:	cmp    edi,0xfffbfcfe
  428534:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  428535:	(bad)  
  428536:	sub    bh,bh
  428538:	sti    
  428539:	repz out dx,eax
  42853b:	call   QWORD PTR [rdi-0x68009082]
  428541:	jle    0x4285b2
  428543:	jmp    rbp
  428545:	enter  0xffba,0x6c
  428549:	push   rcx
  42854a:	cmp    eax,0xd7f7ebff
  42854f:	push   QWORD PTR [rbx-0x7800541b]
  428555:	cwde   
  428556:	addr32 call rsi
  428559:	cwde   
  42855a:	rex.RXB push QWORD PTR [r8+0x65ff3993]
  428561:	xchg   esi,eax
  428562:	cmp    bh,bh
  428564:	(bad)  
  428565:	jno    0x4285bd
  428567:	fcom   DWORD PTR [rdi-0x50cba38e]
  42856d:	cdq    
  42856e:	mov    edi,edi
  428570:	(bad)  
  428571:	(bad)  
  428572:	(bad)  
  428573:	(bad)  
  428574:	(bad)  
  428575:	cld    
  428576:	sti    
  428577:	(bad)  
  428578:	std    
  428579:	clc    
  42857a:	cmc    
  42857b:	(bad)  
  42857c:	sti    
  42857d:	repz out dx,eax
  42857f:	(bad)  
  428580:	cli    
  428581:	in     eax,dx
  428582:	call   0xffffffffbe0e6b86
  428587:	jmp    FWORD PTR [rcx+rdx*2+0x3d]
  42858b:	inc    DWORD PTR [rsi+0x7dff75b0]
  428591:	fist   DWORD PTR [rax+0x6ab14eff]
  428597:	dec    DWORD PTR [rbx-0x3700bd79]
  42859d:	test   DWORD PTR [rbx-0x1],ebx
  4285a0:	sahf   
  4285a1:	jns    0x4285fd
  4285a3:	hlt    
  4285a4:	popf   
  4285a5:	ja     0x428608
  4285a7:	add    BYTE PTR [eax],al
  4285aa:	add    BYTE PTR [rax],al
  4285ac:	mov    dh,0xa1
  4285ae:	xchg   ebx,eax
  4285af:	(bad)  
  4285b0:	(bad)  
  4285b1:	(bad)  
  4285b2:	(bad)  
  4285b3:	jmp    QWORD PTR [rax+riz*2-0x30100d6]
  4285ba:	sti    
  4285bb:	call   QWORD PTR [rdi-0x68009082]
  4285c1:	jle    0x428632
  4285c3:	(bad)  
  4285c4:	jmp    0x6d42499a
  4285c9:	push   rcx
  4285ca:	cmp    eax,0xb6e4b7ff
  4285cf:	inc    DWORD PTR [rcx+0x67ffa2dd]
  4285d5:	mov    dh,0x70
  4285d7:	call   FWORD PTR [rdi-0x5d00a97b]
  4285dd:	jp     0x428643
  4285df:	fsub   DWORD PTR [rbx+0x67657c]
  4285e5:	add    BYTE PTR [rax],al
  4285e7:	add    BYTE PTR [rax],al
  4285e9:	add    BYTE PTR [rax],al
  4285eb:	add    BYTE PTR [rcx+rbp*4-0x66],bh
  4285f2:	(bad)  
  4285f3:	(bad)  
  4285f4:	(bad)  
  4285f5:	(bad)  
  4285f6:	(bad)  
  4285f7:	(bad)  
  4285f8:	(bad)  
  4285f9:	(bad)  
  4285fa:	(bad)  
  4285fb:	(bad)  
  4285fc:	(bad)  
  4285fd:	cld    
  4285fe:	sti    
  4285ff:	jmp    QWORD PTR [rdx+0x6cff7c8c]
  428605:	push   rcx
  428606:	cmp    eax,0x3d516cff
  42860b:	push   QWORD PTR [rsi-0x4610826e]
  428611:	xchg   edi,eax
  428612:	test   al,dh
  428614:	mov    bl,0x8d
  428616:	js     0x4285dc
  428618:	stos   BYTE PTR es:[rdi],al
  428619:	(bad)  
  42861a:	imul   eax,DWORD PTR [rax+0x346980a8],0x0
	...
  428629:	add    BYTE PTR [rax],al
  42862b:	add    dl,al
  42862d:	scas   al,BYTE PTR es:[rdi]
  42862e:	movabs eax,ds:0xffffffffffffffff
  428637:	(bad)  
  428638:	(bad)  
  428639:	(bad)  
  42863a:	(bad)  
  42863b:	(bad)  
  42863c:	(bad)  
  42863d:	(bad)  
  42863e:	(bad)  
  42863f:	jmp    QWORD PTR [rdx-0x53008374]
  428645:	(bad)  
  428646:	mov    edi,?
	...
  42866c:	(bad)  
  42866d:	mov    ah,0xa7
  42866f:	inc    edx
  428671:	scas   al,BYTE PTR es:[rdi]
  428672:	movabs eax,ds:0x93a1b6ff9aa8bdff
  42867b:	jmp    FWORD PTR [rdi-0x58007467]
  428681:	xchg   ecx,eax
  428682:	(bad)  
  428683:	inc    DWORD PTR [rax]
	...
  4286a9:	add    BYTE PTR [rax],al
  4286ab:	add    al,bh
  4286ad:	(bad)  
  4286ae:	add    BYTE PTR [rax],al
  4286b0:	lock add eax,DWORD PTR [rax]
  4286b3:	add    al,ah
  4286b5:	add    DWORD PTR [rax],eax
  4286b7:	add    al,al
  4286b9:	add    BYTE PTR [rax],al
  4286bb:	add    al,al
  4286bd:	add    BYTE PTR [rax],al
  4286bf:	add    al,al
	...
  4286d9:	add    DWORD PTR [rax],eax
  4286db:	add    BYTE PTR [rax],al
  4286dd:	add    eax,DWORD PTR [rax]
  4286df:	add    BYTE PTR [rax],al
  4286e1:	(bad)  
  4286e2:	add    BYTE PTR [rax],al
  4286e4:	add    edi,edi
  4286e6:	add    BYTE PTR [rax],al
  4286e8:	add    edi,edi
  4286ea:	add    BYTE PTR [rax],al
  4286ec:	or     eax,DWORD PTR [rax+0x0]
  4286ef:	add    DWORD PTR [rax],eax
  4286f1:	add    BYTE PTR [rax],al
  4286f3:	(bad)  
  4286f4:	(bad)  
  4286f5:	(bad)  
  4286f6:	inc    DWORD PTR [rcx]
  4286f8:	add    BYTE PTR [rax],al
  4286fa:	add    BYTE PTR [rax],al
  4286fc:	add    BYTE PTR [rax],al
  4286fe:	add    BYTE PTR [rdx+rax*1],cl
  428701:	add    BYTE PTR [rax],al
  428703:	add    BYTE PTR [rcx+0x53],dl
  428706:	jns    0x42877b
  428708:	je     0x42876f
  42870a:	ins    DWORD PTR es:[rdi],dx
  42870b:	cs rex.R jb 0x428770
  42870f:	ja     0x42877a
  428711:	outs   dx,BYTE PTR ds:[rsi]
  428712:	addr32 sub al,0x20
  428715:	push   rsi
  428716:	gs jb  0x42878c
  428719:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  428720:	xor    BYTE PTR cs:[rsi],ch
  428723:	xor    BYTE PTR [rax+riz*1],ch
  428726:	rex.XB jne 0x428795
  428729:	je     0x4287a0
  42872b:	jb     0x428792
  42872d:	cmp    eax,0x7475656e
  428732:	jb     0x428795
  428734:	ins    BYTE PTR es:[rdi],dx
  428735:	sub    al,0x20
  428737:	push   rax
  428738:	jne    0x42879c
  42873a:	ins    BYTE PTR es:[rdi],dx
  42873b:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  428742:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  428746:	(bad)  
  428747:	xor    BYTE PTR [rbx],dh
  428749:	xor    ax,0x3766
  42874d:	xor    WORD PTR [rcx],si
  428750:	fs xor eax,0x61336130
  428756:	add    eax,0x1
  42875b:	adc    edx,DWORD PTR [rbx+0x79]
  42875e:	jae    0x4287d4
  428760:	gs ins DWORD PTR es:[rdi],dx
  428762:	cs rex.R jb 0x4287c7
  428766:	ja     0x4287d1
  428768:	outs   dx,BYTE PTR ds:[rsi]
  428769:	movsxd rbp,DWORD PTR cs:[r15d+0x6e]
  42876f:	add    al,BYTE PTR [rax]
  428771:	add    BYTE PTR [rax],al
  428773:	or     BYTE PTR [rcx+0x63],cl
  428776:	outs   dx,DWORD PTR ds:[rsi]
  428777:	outs   dx,BYTE PTR ds:[rsi]
  428778:	rex.R (bad) 
  42877a:	je     0x4287dd
  42877c:	or     BYTE PTR [rcx+0x63],cl
  42877f:	outs   dx,DWORD PTR ds:[rsi]
  428780:	outs   dx,BYTE PTR ds:[rsi]
  428781:	push   rbx
  428782:	imul   edi,DWORD PTR [rdx+0x65],0x13020407
  428789:	push   rbx
  42878a:	jns    0x4287ff
  42878c:	je     0x4287f3
  42878e:	ins    DWORD PTR es:[rdi],dx
  42878f:	cs rex.R jb 0x4287f4
  428793:	ja     0x4287fe
  428795:	outs   dx,BYTE PTR ds:[rsi]
  428796:	addr32 cs push rbx
  428799:	imul   edi,DWORD PTR [rdx+0x65],0x2
  4287a0:	add    al,BYTE PTR [rax]
  4287a2:	add    BYTE PTR [rax],al
  4287a4:	or     DWORD PTR [rbx],eax
  4287a6:	add    BYTE PTR [rax],al
  4287a8:	add    BYTE PTR [rip+0xfffffffffffffffc],al        # 0x4287aa
  4287ae:	adc    edx,DWORD PTR [rbx+0x79]
  4287b1:	jae    0x428827
  4287b3:	gs ins DWORD PTR es:[rdi],dx
  4287b5:	cs rex.R jb 0x42881a
  4287b9:	ja     0x428824
  4287bb:	outs   dx,BYTE PTR ds:[rsi]
  4287bc:	addr32 cs push rbx
  4287bf:	imul   edi,DWORD PTR [rdx+0x65],0x2
  4287c6:	add    eax,0x74646977
  4287cb:	push   0x69656806
  4287d0:	addr32 push 0x8000074
  4287d6:	or     BYTE PTR [rdx],al
	...
  4287e0:	add    BYTE PTR [rax],al
  4287e2:	add    BYTE PTR [rdi],cl
  4287e4:	add    eax,DWORD PTR [rax]
  4287e6:	add    BYTE PTR [rax],al
  4287e8:	xchg   esi,eax
  4287e9:	(bad)  
  4287ea:	add    BYTE PTR [rax],al
  4287ec:	add    al,BYTE PTR [rax]
  4287ee:	add    BYTE PTR [rcx],al
  4287f0:	add    BYTE PTR [rsi],al
  4287f2:	add    BYTE PTR [rax],ah
  4287f4:	and    BYTE PTR [rax],dl
  4287f6:	add    BYTE PTR [rcx],al
  4287f8:	add    BYTE PTR [rax+rax*1],al
  4287fb:	call   0x66428802
  428800:	add    BYTE PTR [rax],al
  428802:	add    BYTE PTR [rax],dl
  428804:	adc    BYTE PTR [rax],dl
  428806:	add    BYTE PTR [rcx],al
  428808:	add    BYTE PTR [rax+rax*1],al
  42880b:	sub    BYTE PTR [rcx],al
  42880d:	add    BYTE PTR [rax],al
  42880f:	rex.WRX add r8,QWORD PTR [rax]
  428812:	add    BYTE PTR [rax],ah
  428814:	and    BYTE PTR [rax],al
  428816:	add    BYTE PTR [rcx],al
  428818:	add    BYTE PTR [rax],cl
  42881a:	add    BYTE PTR [rax+0x76000008],ch
  428820:	add    al,0x0
  428822:	add    BYTE PTR [rax],dl
  428824:	adc    BYTE PTR [rax],al
  428826:	add    BYTE PTR [rcx],al
  428828:	add    BYTE PTR [rax],cl
  42882a:	add    BYTE PTR [rax+0x5],ch
  42882d:	add    BYTE PTR [rax],al
  42882f:	(bad)  
  428830:	or     eax,0x20200000
  428835:	add    BYTE PTR [rax],al
  428837:	add    DWORD PTR [rax],eax
  428839:	and    BYTE PTR [rax],al
  42883b:	test   al,0x10
  42883d:	add    BYTE PTR [rax],al
  42883f:	xchg   BYTE PTR [rdx],dl
  428841:	add    BYTE PTR [rax],al
  428843:	adc    BYTE PTR [rax],dl
  428845:	add    BYTE PTR [rax],al
  428847:	add    DWORD PTR [rax],eax
  428849:	and    BYTE PTR [rax],al
  42884b:	push   0x2e000004
  428850:	and    eax,DWORD PTR [rax]
  428852:	add    BYTE PTR [rax],ch
  428854:	add    BYTE PTR [rax],al
  428856:	add    BYTE PTR [rax],ah
  428858:	add    BYTE PTR [rax],al
  42885a:	add    BYTE PTR [rax+0x0],al
  42885d:	add    BYTE PTR [rax],al
  42885f:	add    DWORD PTR [rax],eax
  428861:	add    al,0x0
  428863:	add    BYTE PTR [rax],al
  428865:	add    BYTE PTR [rax],al
  428867:	add    BYTE PTR [rdx],al
	...
  428881:	add    BYTE PTR [rax],0x0
  428884:	add    BYTE PTR [rax],0x0
  428887:	add    BYTE PTR [rax+0x800080],al
  42888d:	add    BYTE PTR [rax],al
  42888f:	add    BYTE PTR [rax],0x80
  428892:	add    BYTE PTR [rax-0x7fffff80],al
  428898:	add    BYTE PTR [rax-0x3f3f4000],0x0
  42889f:	add    BYTE PTR [rax],al
  4288a1:	inc    DWORD PTR [rax]
  4288a3:	add    bh,bh
  4288a5:	add    BYTE PTR [rax],al
  4288a7:	add    bh,bh
  4288a9:	inc    DWORD PTR [rax]
  4288ab:	inc    DWORD PTR [rax]
  4288ad:	add    BYTE PTR [rax],al
  4288af:	inc    DWORD PTR [rax]
  4288b1:	inc    DWORD PTR [rax]
  4288b3:	(bad)  
  4288b4:	inc    DWORD PTR [rax]
  4288b6:	add    bh,bh
  4288b8:	(bad)  
  4288b9:	inc    DWORD PTR [rax]
  4288bb:	add    BYTE PTR [rax],al
  4288bd:	add    BYTE PTR [rax],al
  4288bf:	add    BYTE PTR [rax+0x77778787],cl
  4288c5:	add    BYTE PTR [eax],al
	...
  4288d0:	(bad)  
  4288d1:	(bad)
  4288d5:	ja     0x4288d7
	...
  4288df:	add    BYTE PTR [rax],al
  4288e1:	mov    al,bh
  4288e3:	mov    BYTE PTR [rsi+0x0],al
	...
  4288f1:	(bad)  
  4288f2:	jbe    0x42896a
  4288f4:	shl    BYTE PTR [rdi+0x77],0x77
  4288f8:	ja     0x428971
  4288fa:	jo     0x4288fc
  4288fc:	add    BYTE PTR [rax],al
  4288fe:	(bad)  
  4288ff:	xchg   DWORD PTR [rdi+0x77],esi
  428902:	ja     0x42897b
  428904:	ja     0x42896d
  428906:	rex.RX
  428907:	xchg   QWORD PTR [rax+0x40],rcx
  42890e:	or     BYTE PTR [rdi-0x77777771],cl
  428914:	js     0x428990
  428916:	addr32 js 0x42889f
  428919:	push   0x60
  42891e:	or     BYTE PTR [rdi-0x77777778],cl
  428924:	mov    BYTE PTR [rdi-0x5775b771],cl
  42892a:	add    BYTE PTR [rax],al
  42892d:	add    BYTE PTR [rax],cl
  42892f:	test   BYTE PTR [rsi+0x6cec7cce],0x6c
  428936:	push   0x6088886f
  42893b:	add    BYTE PTR [rax],al
  42893d:	add    BYTE PTR [rdi],al
  42893f:	test   eax,0x77778e8c
  428945:	jbe    0x4289bf
  428947:	js     0x4288d1
  428949:	mov    BYTE PTR [rax+0x0],al
  42894c:	add    BYTE PTR [rax],al
  42894e:	or     dh,bh
  428950:	mov    ?,WORD PTR [rax-0x38]
  428953:	(bad)  
  428954:	(bad)  
  428955:	(bad)  
  428956:	iret   
  428957:	rex.WRXB mov BYTE PTR [r8+0x60],r9b
  42895e:	or     BYTE PTR [rax+0x7e7e7e77],cl
  428964:	jl     0x4289e2
  428966:	js     0x4289d7
  428968:	(bad)
  42896c:	add    BYTE PTR [rax],al
  42896e:	or     bh,dh
  428970:	mov    ?,WORD PTR [rdi+0x7c]
  428973:	mov    WORD PTR [rsi+rax*4-0x7777a091],cs
  42897a:	(bad)  
  42897b:	add    BYTE PTR [rsi+0x56],dh
  42897e:	rex.RX
  42897f:	rex.RX
  428980:	rex.RB
  428981:	fs jbe 0x4289e2
  428984:	jle    0x42894e
  428986:	iret   
  428987:	outs   dx,DWORD PTR ds:[rsi]
  428988:	(bad)
  42898c:	js     0x428916
  42898e:	mov    BYTE PTR [rax+0x67878888],cl
  428994:	enter  0x7876,0x7f
  428998:	(bad)  
  428999:	clc    
  42899a:	(bad)  
  42899b:	add    BYTE PTR [rax-0x8],bh
  42899e:	clc    
  42899f:	mov    BYTE PTR [rax-0x13b77778],cl
  4289a5:	mov    eax,gs
  4289a7:	addr32 ja 0x428a21
  4289aa:	jo     0x4289ac
  4289ac:	js     0x4289ad
  4289ae:	(bad)  
  4289af:	clc    
  4289b0:	clc    
  4289b1:	mov    BYTE PTR [rax-0x301887b8],cl
  4289b7:	pop    rdi
  4289b8:	mov    BYTE PTR [rax-0x787ffa0],cl
  4289be:	push   0xffffffff8e888ff8
  4289c3:	pop    rsi
  4289c4:	enter  0x6fc8,0x6f
  4289c8:	(bad)
  4289cc:	js     0x4289c4
  4289ce:	mov    eax,?
  4289d0:	ja     0x4289b9
  4289d2:	mov    BYTE PTR [rdi-0x71],cl
  4289d5:	mov    BYTE PTR [rax+0x60ffff7f],cl
  4289db:	add    BYTE PTR [rax-0x8],bh
  4289de:	push   0xffffffff88f8f8f8
  4289e3:	xchg   DWORD PTR [edi+0x77],esi
  4289e7:	push   0x707877
  4289ec:	js     0x4289ed
  4289ee:	dec    DWORD PTR [rdi+0x40f8f8f8]
  4289f4:	add    BYTE PTR [rdi-0x77777771],cl
  4289fa:	(bad)  
  4289fb:	add    BYTE PTR [rdi-0x8],bh
  4289fe:	push   0xffffffff88f8f8f8
  428a03:	(bad)  
  428a04:	add    BYTE PTR [rdi-0x77700008],cl
  428a0a:	add    BYTE PTR [rax],0x78
  428a0d:	idiv   BYTE PTR [rax+rdi*8+0x78]
  428a11:	mov    BYTE PTR [eax+0x0],al
  428a15:	(bad)  
  428a16:	(bad)  
  428a17:	(bad)  
  428a18:	(bad)  
  428a19:	clc    
  428a1a:	jo     0x428a1c
  428a1c:	jg     0x428a16
  428a1e:	iret   
  428a1f:	(bad)  
  428a20:	clc    
  428a21:	(bad)  
  428a22:	clc    
  428a23:	(bad)  
  428a24:	add    BYTE PTR [rdi-0x78787879],al
  428a2a:	add    BYTE PTR [rax],0x78
  428a2d:	(bad)  
  428a2e:	(bad)  
  428a2f:	clc    
  428a30:	(bad)  
  428a31:	clc    
  428a32:	clc    
  428a33:	add    BYTE PTR [rax],al
  428a36:	add    BYTE PTR [rax],al
  428a38:	add    BYTE PTR [rax],al
  428a3a:	add    BYTE PTR [rax],al
  428a3c:	jg     0x428a36
  428a3e:	push   0xffffffff888fffff
  428a43:	(bad)  
	...
  428a4c:	jg     0x428a44
  428a4e:	mov    edi,?
  428a50:	xchg   DWORD PTR [rsi-0x8],esi
  428a53:	jo     0x428a55
  428a55:	add    BYTE PTR [rax],al
  428a57:	add    BYTE PTR [rax],al
  428a59:	add    BYTE PTR [rax],al
  428a5b:	add    BYTE PTR [rdi-0x8],bh
  428a5e:	push   0xfffffffff8ffffff
  428a63:	add    BYTE PTR [rax],al
  428a66:	add    BYTE PTR [rax],al
  428a68:	add    BYTE PTR [rax],al
  428a6a:	add    BYTE PTR [rax],al
  428a6c:	(bad)  
  428a6d:	(bad)  
  428a6e:	(bad)  
  428a6f:	(bad)  
  428a70:	(bad)  
  428a71:	clc    
  428a72:	js     0x428ad4
	...
  428a7c:	jg     0x428a7d
  428a7e:	(bad)  
  428a7f:	(bad)  
  428a80:	push   rdi
  428a82:	fs jo  0x428a85
  428a85:	add    BYTE PTR [rax],al
  428a87:	add    BYTE PTR [rax],al
  428a89:	add    BYTE PTR [rax],al
  428a8b:	add    BYTE PTR [rdi-0x1],cl
  428a91:	div    edi
	...
  428a9b:	add    BYTE PTR [rdi-0x1],cl
  428aa1:	mul    DWORD PTR [rax+0x0]
	...
  428aac:	xchg   DWORD PTR [rdi+0x67677777],eax
	...
  428aba:	add    bh,bh
  428abc:	rol    BYTE PTR [rbx],0xff
  428abf:	inc    eax
  428ac1:	add    edi,edi
  428ac3:	push   rax
  428ac5:	ud0    edi,edi
  428ac8:	clc    
  428ac9:	adc    BYTE PTR [rcx],al
  428acb:	inc    BYTE PTR [rax]
  428acd:	add    BYTE PTR [rcx],al
  428acf:	inc    BYTE PTR [rax]
  428ad1:	add    BYTE PTR [rcx],al
  428ad3:	inc    BYTE PTR [rax]
  428ad5:	add    BYTE PTR [rcx],al
  428ad7:	inc    BYTE PTR [rax]
  428ad9:	add    BYTE PTR [rcx],al
  428adb:	inc    BYTE PTR [rax]
  428add:	add    BYTE PTR [rcx],al
  428adf:	inc    BYTE PTR [rax]
  428ae1:	add    BYTE PTR [rcx],al
  428ae3:	inc    BYTE PTR [rax]
  428ae5:	add    BYTE PTR [rcx],al
  428ae7:	inc    BYTE PTR [rax]
  428ae9:	add    BYTE PTR [rcx],al
  428aeb:	rol    BYTE PTR [rax],0x0
  428aee:	add    eax,eax
  428af0:	add    BYTE PTR [rax],al
  428af2:	add    eax,eax
  428af4:	add    BYTE PTR [rax],al
  428af6:	add    eax,eax
  428af8:	add    BYTE PTR [rax],al
  428afa:	add    eax,eax
  428afc:	add    BYTE PTR [rax],al
  428afe:	add    eax,eax
  428b00:	add    BYTE PTR [rax],al
  428b02:	add    eax,eax
  428b04:	add    BYTE PTR [rax],al
  428b06:	add    eax,eax
  428b08:	add    BYTE PTR [rax+0x1],dh
  428b0b:	rol    BYTE PTR [rax],0x70
  428b0e:	add    eax,eax
  428b10:	add    BYTE PTR [rax+0x1],dh
  428b13:	rol    BYTE PTR [rax],0x70
  428b16:	add    eax,eax
  428b18:	add    BYTE PTR [rdi-0x1],bh
  428b1b:	rol    BYTE PTR [rax],0x7f
  428b1e:	inc    eax
  428b20:	add    BYTE PTR [rdi-0x1],bh
  428b23:	rol    BYTE PTR [rax],0x7f
  428b26:	inc    eax
  428b28:	add    BYTE PTR [rdi-0x1],bh
  428b2b:	rol    BYTE PTR [rax],0x7f
  428b2e:	inc    eax
  428b30:	add    bh,bh
  428b32:	inc    eax
  428b34:	add    edi,edi
  428b36:	inc    eax
  428b38:	add    edi,edi
  428b3a:	jmp    FWORD PTR [rax]
  428b3c:	add    BYTE PTR [rax],al
  428b3e:	add    BYTE PTR [rax],dl
  428b40:	add    BYTE PTR [rax],al
  428b42:	add    BYTE PTR [rax],ah
  428b44:	add    BYTE PTR [rax],al
  428b46:	add    BYTE PTR [rcx],al
  428b48:	add    BYTE PTR [rax+rax*1],al
  428b4b:	add    BYTE PTR [rax],al
  428b4d:	add    BYTE PTR [rax],al
  428b4f:	add    BYTE PTR [rax],0x0
	...
  428b66:	add    BYTE PTR [rax],al
  428b68:	add    BYTE PTR [rax+0x800000],al
  428b6e:	add    BYTE PTR [rax],al
  428b70:	add    BYTE PTR [rax+0x8000],0x0
  428b77:	add    BYTE PTR [rax],0x80
  428b7a:	add    BYTE PTR [rax-0x7fffff80],al
  428b80:	add    BYTE PTR [rax-0x3f3f4000],0x0
  428b87:	add    BYTE PTR [rax],al
  428b89:	inc    DWORD PTR [rax]
  428b8b:	add    bh,bh
  428b8d:	add    BYTE PTR [rax],al
  428b8f:	add    bh,bh
  428b91:	inc    DWORD PTR [rax]
  428b93:	inc    DWORD PTR [rax]
  428b95:	add    BYTE PTR [rax],al
  428b97:	inc    DWORD PTR [rax]
  428b99:	inc    DWORD PTR [rax]
  428b9b:	(bad)  
  428b9c:	inc    DWORD PTR [rax]
  428b9e:	add    bh,bh
  428ba0:	(bad)  
  428ba1:	inc    DWORD PTR [rax]
  428ba3:	or     BYTE PTR [rax+0x70778787],cl
  428ba9:	add    BYTE PTR [rax],al
  428bab:	add    BYTE PTR [rax+0x778788],cl
  428bb1:	add    BYTE PTR [rax],al
  428bb3:	add    BYTE PTR [rax],al
  428bb5:	xchg   DWORD PTR [rdi+0x7e],esp
  428bb8:	ja     0x428c31
  428bba:	ja     0x428c33
  428bbc:	jbe    0x428c32
  428bbe:	je     0x428c25
  428bc0:	rex.RXB xchg DWORD PTR [r14-0x7070781],r8d
  428bc7:	movabs ds:0x67c7c8787f84a684,al
  428bd0:	xchg   al,bh
  428bd2:	xchg   BYTE PTR [rsi+riz*2+0x76],ah
  428bd6:	mov    BYTE PTR [eax+edi*8-0x7707807c],0x86
  428bdf:	mov    esi,?
  428be1:	pop    QWORD PTR [rsi-0x7a88b081]
  428be7:	out    0x84,eax
  428be9:	push   rdi
  428beb:	jg     0x428bec
  428bed:	pop    QWORD PTR [rsi+0x767786c8]
  428bf3:	jg     0x428c64
  428bf5:	ja     0x428b7e
  428bf7:	mov    WORD PTR [rdi-0x707871],es
  428bfd:	clc    
  428bfe:	test   bh,bh
  428c00:	xchg   bh,bh
  428c02:	xchg   DWORD PTR [rdi+0x6f],edi
  428c05:	ja     0x428b8d
  428c07:	jbe    0x428c7e
  428c09:	ja     0x428c82
  428c0b:	(bad)  
  428c0c:	push   rdi
  428c0e:	gs (bad) 
  428c10:	clc    
  428c11:	clc    
  428c12:	xchg   DWORD PTR [rdi-0x707f0801],ecx
  428c18:	(bad)  
  428c19:	push   rdi
  428c1b:	xchg   DWORD PTR [rdi-0x7878ff89],eax
  428c21:	xchg   DWORD PTR [rax-0x80],edi
  428c24:	(bad)  
  428c25:	add    BYTE PTR [rax],al
  428c27:	sar    BYTE PTR [rdi],0x0
  428c2a:	add    al,dh
	...
  428c58:	add    BYTE PTR [rax],al
  428c5a:	add    BYTE PTR [rcx],al
  428c5c:	add    BYTE PTR [rax],al
  428c5e:	add    BYTE PTR [rbx],al
  428c60:	add    BYTE PTR [rax],al
  428c62:	add    BYTE PTR [rax],ch
  428c64:	add    BYTE PTR [rax],al
  428c66:	add    BYTE PTR [rax],ah
  428c68:	add    BYTE PTR [rax],al
  428c6a:	add    BYTE PTR [rax+0x0],al
  428c6d:	add    BYTE PTR [rax],al
  428c6f:	add    DWORD PTR [rax],eax
  428c71:	or     BYTE PTR [rax],al
  428c73:	add    BYTE PTR [rax],al
  428c75:	add    BYTE PTR [rax],al
  428c77:	add    BYTE PTR [rax+rax*1],al
	...
  428c82:	add    BYTE PTR [rax],al
  428c84:	add    DWORD PTR [rax],eax
  428c86:	add    BYTE PTR [rax],al
  428c88:	add    DWORD PTR [rax],eax
  428c8a:	add    BYTE PTR [rax],al
  428c8c:	add    BYTE PTR [rax],al
  428c8e:	add    BYTE PTR [rbx+0x48],ah
  428c91:	xor    eax,DWORD PTR [rax]
  428c93:	movsxd ecx,DWORD PTR [rcx+0x35]
  428c96:	add    BYTE PTR [rbp+0x49],ah
  428c99:	xor    eax,0x374c6700
  428c9e:	add    BYTE PTR [rax+0x4d],ch
  428ca1:	cmp    BYTE PTR [rax],al
  428ca3:	push   0x50
  428ca5:	cmp    eax,DWORD PTR [rax]
  428ca7:	imul   edx,DWORD PTR [rax+0x3c],0x0
  428cab:	ins    BYTE PTR es:[rdi],dx
  428cac:	push   rcx
  428cad:	cmp    eax,0x40536e00
  428cb2:	add    BYTE PTR [rdi+0x54],ch
  428cb5:	add    BYTE PTR [r8+0x56],sil
  428cb9:	rex.XB add BYTE PTR [r10+0x58],sil
  428cbd:	add    BYTE PTR [rdx+rbx*2+0x46],r14b
  428cc2:	add    BYTE PTR [rbp+0x5c],dh
  428cc5:	rex.W add BYTE PTR [rax+0x5f],dil
  428cc9:	rex.WR add BYTE PTR [rdx+0x61],r15b
  428ccd:	rex.WRB add BYTE PTR [r14+0x64],r15b
  428cd1:	push   rdx
  428cd2:	add    BYTE PTR [rbx-0x58ffd7b0],ah
  428cd8:	push   rbx
  428cd9:	sub    al,BYTE PTR [rax]
  428cdb:	scas   al,BYTE PTR es:[rdi]
  428cdc:	push   rdi
  428cdd:	sub    eax,0x3458a600
  428ce2:	add    BYTE PTR [rdx-0x47ffc9a6],ch
  428ce8:	pop    rbp
  428ce9:	xor    DWORD PTR [rax],eax
  428ceb:	mov    cl,0x5f
  428ced:	cmp    BYTE PTR [rax],al
  428cef:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  428cf0:	(bad)  
  428cf1:	sub    al,BYTE PTR [rax]
  428cf3:	mov    ecx,0xc2003b64
  428cf8:	fs xor eax,0x3f69c200
  428cfe:	add    ah,al
  428d00:	imul   edi,DWORD PTR [rdi],0x0
  428d03:	int    0x6a
  428d05:	cmp    DWORD PTR [rax],eax
  428d07:	fdiv   DWORD PTR [rcx+0x3e]
  428d0a:	add    BYTE PTR [rcx-0x7cffa998],al
  428d10:	push   0x58
  428d12:	add    BYTE PTR [rsp+rbp*2+0x6d86005a],al
  428d19:	pop    rsp
  428d1a:	add    BYTE PTR [rax-0x75ffa290],cl
  428d20:	jno    0x428d82
  428d22:	add    BYTE PTR [rsp+rsi*2+0x768a0062],cl
  428d29:	add    BYTE PTR fs:[rsi-0x70ff9a8a],cl
  428d30:	js     0x428d98
  428d32:	add    BYTE PTR [rcx-0x6dff9e8a],dl
  428d38:	js     0x428d9d
  428d3a:	add    BYTE PTR [rbp-0x6eff9986],dl
  428d40:	jp     0x428dab
  428d42:	add    BYTE PTR [rsp+rdi*2+0x7e96006b],dl
  428d49:	outs   dx,BYTE PTR ds:[rsi]
  428d4a:	add    BYTE PTR [rax-0x34ff9682],bl
  428d50:	outs   dx,DWORD PTR ds:[rsi]
  428d51:	rex.X add bpl,cl
  428d54:	jo     0x428d99
  428d56:	add    ch,dl
  428d58:	jbe    0x428da0
  428d5a:	add    bh,bl
  428d5c:	jp     0x428da4
  428d5e:	add    al,bl
  428d60:	ja     0x428daa
  428d62:	add    cl,bl
  428d64:	js     0x428dae
  428d66:	add    bh,bl
  428d68:	jl     0x428db4
  428d6a:	add    dh,bl
  428d6c:	jl     0x428dba
  428d6e:	add    dl,ah
  428d70:	js     0x428db6
  428d72:	add    al,ah
  428d74:	jge    0x428dc1
  428d76:	add    cl,ah
  428d78:	jge    0x428dc6
  428d7a:	add    ch,ch
  428d7c:	jg     0x428dc7
  428d7e:	add    BYTE PTR [rsi],ch
  428d80:	fwait
  428d81:	add    BYTE PTR [rax],al
  428d83:	cs int3 
  428d85:	add    BYTE PTR [rax],al
  428d87:	or     al,0xff
  428d89:	add    BYTE PTR [rax],al
  428d8b:	(bad)  
  428d8c:	sub    BYTE PTR [rax+rax*1-0x63],0x83
  428d91:	outs   dx,BYTE PTR ds:[rsi]
  428d92:	add    BYTE PTR [rcx-0x61ff8e7e],bl
  428d98:	test   BYTE PTR [rbx+0x0],dh
  428d9b:	fwait
  428d9c:	test   BYTE PTR [rax+rax*1-0x64],dh
  428da0:	test   DWORD PTR [rbp+0x0],esi
  428da3:	sahf   
  428da4:	mov    BYTE PTR [rax+0x0],bh
  428da7:	movabs al,ds:0xa1007687a3007285
  428db0:	mov    DWORD PTR [rcx+0x0],edi
  428db3:	movabs ds:0xe8007d8da5007c8c,al
  428dbc:	(bad)  
  428dbd:	rex.WRX add sil,r14b
  428dc0:	test   DWORD PTR [rbp+0x0],ecx
  428dc3:	(bad)  
  428dc4:	adc    DWORD PTR [rcx+0x0],0xffffffea
  428dc8:	test   BYTE PTR [rax+0x0],dl
  428dcb:	in     al,dx
  428dcc:	test   BYTE PTR [rcx+0x0],dl
  428dcf:	(bad)  
  428dd0:	mov    edx,DWORD PTR [rsi+0x0]
  428dd3:	(bad)  
  428dd4:	mov    WORD PTR [rdi+0x0],ss
  428dd7:	repnz mov DWORD PTR [rbp+0x0],edx
  428ddb:	hlt    
  428ddc:	mov    edx,DWORD PTR [rsi+0x0]
  428ddf:	dec    BYTE PTR [rdx-0x7106ffaf]
  428de5:	pop    rdx
  428de6:	add    dl,ch
  428de8:	nop
  428de9:	pop    rsp
  428dea:	add    dl,bh
  428dec:	nop
  428ded:	pop    rbx
  428dee:	add    bh,bh
  428df0:	nop
  428df1:	pop    rax
  428df2:	add    dl,bh
  428df4:	nop
  428df5:	pop    rsp
  428df6:	add    ah,bh
  428df8:	xchg   ecx,eax
  428df9:	pop    rsp
  428dfa:	add    dh,bh
  428dfc:	xchg   esp,eax
  428dfd:	pop    rdi
  428dfe:	add    ah,bl
  428e00:	cdq    
  428e01:	data16 add bl,ch
  428e04:	xchg   ebp,eax
  428e05:	fs add bl,ch
  428e08:	cwde   
  428e09:	push   0x6f9deb00
  428e0e:	add    dh,bh
  428e10:	xchg   esi,eax
  428e11:	(bad)  
  428e12:	add    bh,bh
  428e14:	(bad)  
  428e15:	data16 add bh,bh
  428e18:	fwait
  428e19:	push   0x689cff00
  428e1e:	add    bh,bh
  428e20:	movabs al,ds:0xa7ec0077a2ec006e
  428e29:	jle    0x428e2b
  428e2b:	jmp    QWORD PTR [rsi-0x5300ff8b]
  428e31:	jge    0x428e33
  428e33:	mov    dl,0x8d
  428e35:	add    DWORD PTR [rax],0xffffffa6
  428e38:	nop
  428e39:	add    BYTE PTR [rax],0xa9
  428e3c:	xchg   edx,eax
  428e3d:	(bad)  
  428e3e:	add    BYTE PTR [rbx+rdx*4-0x6c55ff7d],ch
  428e45:	test   BYTE PTR [rax],al
  428e47:	stos   BYTE PTR es:[rdi],al
  428e48:	xchg   esp,eax
  428e49:	test   DWORD PTR [rax],eax
  428e4b:	lods   eax,DWORD PTR ds:[rsi]
  428e4c:	xchg   esi,eax
  428e4d:	xchg   DWORD PTR [rax],eax
  428e4f:	scas   al,BYTE PTR es:[rdi]
  428e50:	xchg   edi,eax
  428e51:	mov    BYTE PTR [rax],al
  428e53:	scas   al,BYTE PTR es:[rdi]
  428e54:	cdq    
  428e55:	mov    al,BYTE PTR [rax]
  428e57:	test   eax,0xb0008d9a
  428e5c:	(bad)  
  428e5d:	mov    al,BYTE PTR [rax]
  428e5f:	mov    cl,0x9c
  428e61:	mov    eax,DWORD PTR [rax]
  428e63:	mov    dl,0x9a
  428e65:	mov    WORD PTR [rax],es
  428e67:	mov    dl,0x9d
  428e69:	mov    es,WORD PTR [rax]
  428e6b:	mov    bl,0x9d
  428e6d:	nop
  428e6e:	add    BYTE PTR [rsi+rbx*4-0x6043ff70],dh
  428e75:	xchg   esi,eax
  428e76:	add    BYTE PTR [rbp-0x48ff6d5e],dh
  428e7c:	movabs ds:0xa6bb0095a3b80095,eax
  428e85:	cwde   
  428e86:	add    BYTE PTR [rbx-0x42ff6758],bh
  428e8c:	test   al,0x9a
  428e8e:	add    BYTE PTR [rbp-0x40ff6357],bh
  428e94:	lods   al,BYTE PTR ds:[rsi]
  428e95:	pushf  
  428e96:	add    bh,cl
  428e98:	movabs eax,ds:0xa6d4008fa5d3008a
  428ea1:	pop    QWORD PTR [rax]
  428ea3:	shl    DWORD PTR [rbp+rbx*4-0x60534000],0x0
  428eab:	enter  0x9bab,0x0
  428eaf:	(bad)  
  428eb0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  428eb1:	xchg   ecx,eax
  428eb2:	add    ch,dl
  428eb4:	test   al,0x92
  428eb6:	add    dh,dl
  428eb8:	stos   BYTE PTR es:[rdi],al
  428eb9:	xchg   ebp,eax
  428eba:	add    al,bl
  428ebc:	lods   eax,DWORD PTR ds:[rsi]
  428ebd:	cdq    
  428ebe:	add    cl,bl
  428ec0:	mov    cl,0x9e
  428ec2:	add    dl,al
  428ec4:	scas   al,BYTE PTR es:[rdi]
  428ec5:	movabs al,ds:0xa3b0c400a4abc500
  428ece:	add    dh,al
  428ed0:	mov    dl,0xa4
  428ed2:	add    al,cl
  428ed4:	mov    dl,0xab
  428ed6:	add    bl,cl
  428ed8:	mov    eax,0xb4d500ad
  428edd:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  428ede:	add    bl,bl
  428ee0:	mov    ch,0xa2
  428ee2:	add    dh,bl
  428ee4:	mov    ecx,0xbadc00a6
  428ee9:	test   al,0x0
  428eeb:	int    0xb8
  428eed:	mov    bl,0x0
  428eef:	enter  0xb7bf,0x0
  428ef3:	sar    BYTE PTR [rdx+rsi*4-0x45402f00],1
  428efa:	add    al,ah
  428efc:	mov    ebp,0xc4cf00ac
  428f01:	mov    ebp,0xbec7d700
  428f06:	add    al,ah
  428f08:	ret    0xb2
  428f0b:	jrcxz  0x428ed3
  428f0d:	mov    bh,0x0
  428f0f:	out    dx,al
  428f10:	enter  0xb5,0xe6
  428f14:	retf   0xbc
  428f17:	out    0xcc,al
  428f19:	mov    ebp,0xbacbef00
  428f1e:	add    al,dh
  428f20:	retf   
  428f21:	mov    edx,0xbecef000
  428f26:	add    dl,dh
  428f28:	sar    BYTE PTR [rdi-0x3e392b00],1
  428f2e:	add    bh,dl
  428f30:	enter  0xc0,0xda
  428f34:	retf   
  428f35:	ret    
  428f36:	add    dl,bl
  428f38:	int3   
  428f39:	(bad)
  428f3c:	ror    cl,1
  428f3e:	add    ch,bl
  428f40:	ror    esi,1
  428f42:	add    bh,bl
  428f44:	(bad)  
  428f45:	int3   
  428f46:	add    bh,ah
  428f48:	iret   
  428f49:	ret    0xf000
  428f4c:	iret   
  428f4d:	rol    BYTE PTR [rax],0xe7
  428f50:	rol    eax,1
  428f52:	add    dl,ch
  428f54:	rol    ah,1
  428f56:	add    cl,ah
  428f58:	(bad)  
  428f59:	iret   
  428f5a:	add    dl,dh
  428f5c:	rol    dl,cl
  428f5e:	add    cl,dh
  428f60:	rol    esp,cl
  428f62:	add    cl,dh
  428f64:	(bad)  
  428f65:	(bad)
  428f68:	(bad)  
  428f69:	mov    BYTE PTR [rax],0xf2
  428f6c:	(bad)  
  428f6d:	enter  0xf400,0xd7
  428f71:	retf   
  428f72:	add    bl,dh
  428f74:	fmul   st,st(3)
  428f76:	add    ah,dh
  428f78:	fmul   st,st(2)
  428f7a:	add    bl,dh
  428f7c:	fmul   st,st(4)
  428f7e:	add    ah,dh
  428f80:	fcmove st,st(5)
  428f82:	add    ch,dh
  428f84:	fmul   st(7),st
  428f86:	add    cl,ah
  428f88:	xlat   BYTE PTR ds:[rbx]
  428f89:	rol    BYTE PTR [rax],cl
  428f8b:	in     eax,0xda
  428f8d:	(bad)  
  428f8e:	add    dh,ah
  428f90:	(bad)  
  428f92:	add    dl,ah
  428f94:	(bad)  
  428f96:	add    dh,ah
  428f98:	fcompp 
  428f9a:	add    ah,dh
  428f9c:	fst    st(1)
  428f9e:	add    dh,dh
  428fa0:	(bad)  
  428fa2:	add    ch,dh
  428fa4:	loopne 0x428f7c
  428fa6:	add    cl,bh
  428fa8:	loopne 0x428f7f
  428faa:	add    dh,dh
  428fac:	loop   0x428f87
  428fae:	add    bh,dh
  428fb0:	in     al,0xdb
  428fb2:	add    bh,dh
  428fb4:	in     eax,0xdc
  428fb6:	add    al,bh
  428fb8:	out    0xdd,al
  428fba:	add    bh,ah
  428fbc:	jrcxz  0x428f9f
  428fbe:	add    dl,ch
  428fc0:	loop   0x428fa2
  428fc2:	add    bl,ch
  428fc4:	in     eax,0xe3
  428fc6:	add    al,bh
  428fc8:	out    0xe0,eax
  428fca:	add    al,bh
  428fcc:	jmp    0xffffffffeb3b90b2
  428fd1:	in     al,0x0
  428fd3:	stc    
  428fd4:	in     al,dx
  428fd5:	out    0x0,al
  428fd7:	lock jmp 0x428fc2
  428fda:	add    dl,dh
  428fdc:	in     eax,dx
  428fdd:	jmp    0x428fdf
  428fdf:	hlt    
  428fe0:	out    dx,al
  428fe1:	jmp    0x428fe3
  428fe3:	repz out dx,eax
  428fe5:	in     al,dx
  428fe6:	add    ah,dh
  428fe8:	out    dx,eax
  428fe9:	in     eax,dx
  428fea:	add    dl,bh
  428fec:	out    dx,al
  428fed:	jmp    0xfffffffff03484f2
  428ff2:	add    dl,bh
  428ff4:	lock jmp 0x428ff7
  428ff7:	sti    
  428ff8:	icebp  
  428ff9:	in     eax,dx
  428ffa:	add    bl,bh
  428ffc:	hlt    
  428ffd:	out    dx,eax
  428ffe:	add    bh,bh
  429000:	hlt    
  429001:	out    dx,eax
  429002:	add    bh,dh
  429004:	repz icebp 
  429006:	add    ah,bh
  429008:	repz lock add ah,bh
  42900c:	hlt    
  42900d:	icebp  
  42900e:	add    al,bh
  429010:	cmc    
  429011:	hlt    
  429012:	add    ah,bh
  429014:	div    esp
  429016:	add    ch,bh
  429018:	clc    
  429019:	cmc    
  42901a:	add    ch,bh
  42901c:	cli    
  42901d:	stc    
  42901e:	add    dh,bh
  429020:	cld    
  429021:	cli    
  429022:	add    dh,bh
  429024:	(bad)  
  429025:	inc    BYTE PTR [rax]
	...
  429087:	(bad)  
  429088:	(bad)  
  429089:	inc    DWORD PTR [rax]
	...
  429093:	add    BYTE PTR [rax],al
  429095:	popf   
  429096:	xchg   ecx,eax
  429097:	(bad)  
  429098:	jl     0x42910e
  42909a:	imul   eax,DWORD PTR [rbp+0x2e],0x25
  42909e:	and    BYTE PTR [rdi],cl
  4290a0:	or     eax,DWORD PTR [rax]
	...
  4290b2:	add    BYTE PTR [rax],al
  4290b4:	add    BYTE PTR [rbx+rax*8-0x543f3132],ch
  4290bb:	(bad)  
  4290bc:	xchg   ecx,eax
  4290bd:	js     0x429130
  4290bf:	rex.W
  4290c0:	rex.W add BYTE PTR [rax],al
	...
  4290d7:	sahf   
  4290d8:	cdq    
  4290d9:	ret    
  4290da:	lods   al,BYTE PTR ds:[rsi]
  4290db:	xchg   ebx,eax
  4290dc:	mov    ?,WORD PTR [rax+0x25]
	...
  4290f7:	add    BYTE PTR [rdi+rbp*1+0x2f],dh
  4290fb:	(bad)  
  4290fc:	(bad)  
  4290fd:	(bad)  
  4290fe:	add    BYTE PTR [rax+0x41],cl
  429101:	rex.B
  429102:	cs sub al,0x2c
  429105:	sub    al,0x2a
  429107:	sub    ch,BYTE PTR [rdx]
  429109:	sub    al,BYTE PTR [rax]
  42910b:	add    BYTE PTR [rax],al
  42910d:	add    BYTE PTR [rax],al
  42910f:	add    BYTE PTR [rax],al
  429111:	add    BYTE PTR [rdi+rbp*2+0x6b],dh
  429115:	rex.RB
  429116:	rex.RB
  429117:	cs (bad) 
  429119:	and    eax,0x10102424
  42911e:	(bad)  
  42911f:	or     al,0x9
  429121:	(bad)  
  429122:	add    al,0x4
  429124:	mov    BYTE PTR [rax+0x4888888],cl
	...
  429132:	ja     0x429109
  429134:	int3   
  429135:	ret    
  429136:	mov    edi,0x9ba8acac
  42913b:	cwde   
  42913c:	xchg   edx,eax
  42913d:	mov    es,WORD PTR [rsi+0x6a3d3f7a]
  429143:	add    al,0xa1
  429145:	movabs eax,ds:0x1883d3e
  42914e:	add    BYTE PTR [rax],al
  429150:	add    BYTE PTR [rax],al
  429152:	jl     0x429127
  429154:	mov    bl,0xac
  429156:	mov    edi,0xbfacbfbf
  42915b:	lods   al,BYTE PTR ds:[rsi]
  42915c:	mov    edi,0xb3b3bfbf
  429161:	mov    bl,0xb3
  429163:	add    al,0xb0
  429165:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  429166:	(bad)  
  429167:	mov    BYTE PTR ds:[rax+rax*1],al
  42916b:	add    BYTE PTR [rax],al
  42916d:	add    BYTE PTR [rax],al
  42916f:	add    BYTE PTR [rax],al
  429171:	add    BYTE PTR [rbp+rdx*8+0x52],bh
  429175:	pop    rcx
  429176:	push   rbp
  429177:	rex.WRB cmp al,0x39
  42917a:	(bad)  
  42917b:	(bad)  
  42917c:	sbb    edx,DWORD PTR [rdi]
  42917e:	adc    al,0x13
  429180:	adc    dl,BYTE PTR [rbx]
  429182:	lods   al,BYTE PTR ds:[rsi]
  429183:	(bad)  
  429184:	mov    al,0xb0
  429186:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  429187:	movabs eax,ds:0x488
  429190:	add    BYTE PTR [rax],al
  429192:	jle    0x429169
  429194:	pop    rdi
  429195:	fs (bad) 
  429197:	pop    rdx
  429198:	push   rsp
  429199:	push   rax
  42919a:	cmp    esi,DWORD PTR [rsi]
  42919c:	xor    bl,BYTE PTR [rip+0x1516181a]        # 0x1558a9bc
  4291a2:	mov    edi,0xb0b0bd06
  4291a7:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  4291a8:	mov    BYTE PTR [rsi],al
	...
  4291b2:	(bad)  
  4291b3:	fstp   DWORD PTR [rdi+0x65]
  4291b6:	fs (bad) 
  4291b8:	pop    rcx
  4291b9:	push   rsp
  4291ba:	push   rax
  4291bb:	cmp    esi,DWORD PTR [rip+0x181a1d32]        # 0x185caef3
  4291c1:	(bad)  
  4291c2:	mov    bl,0x6
  4291c4:	(bad)
  4291c7:	mov    al,0x88
  4291c9:	or     DWORD PTR [rax],eax
  4291cb:	add    BYTE PTR [rax],al
  4291cd:	add    BYTE PTR [rax],al
  4291cf:	add    BYTE PTR [rax],al
  4291d1:	add    BYTE PTR [rdx+0x656567d9],al
  4291d7:	fs (bad) 
  4291d9:	(bad)  
  4291da:	push   rbx
  4291db:	push   rax
  4291dc:	cmp    esi,DWORD PTR [rip+0x181a1d32]        # 0x185caf14
  4291e2:	mov    edi,0xbdc5c60b
  4291e7:	mov    al,0x88
  4291e9:	or     al,0x0
  4291eb:	add    BYTE PTR [rax],al
  4291ed:	add    BYTE PTR [rax],al
  4291ef:	add    BYTE PTR [rax],al
  4291f1:	add    BYTE PTR [rsi+0x696967e1],cl
  4291f7:	fs fs (bad) 
  4291fa:	pop    rdx
  4291fb:	push   rsp
  4291fc:	push   rax
  4291fd:	ss xor bl,BYTE PTR ss:[rip+0xffffffffcb0bb31a]        # 0xffffffffcb4e451f
  429205:	mov    ch,0xbd
  429208:	mov    BYTE PTR [rsi],cl
  42920a:	add    BYTE PTR [rax],al
  42920c:	add    BYTE PTR [rsp+rax*1],ah
  42920f:	add    DWORD PTR [rsp+rax*1],eax
  429212:	add    DWORD PTR [rsp+rax*1],eax
  429215:	add    al,0x1
  429217:	add    al,0x1
  429219:	add    DWORD PTR [rdx],eax
  42921b:	add    al,0x54
  42921d:	push   rax
  42921e:	ss xor eax,0xeac1c32
  429224:	ror    ebx,1
  429226:	mov    ch,0x88
  429229:	adc    BYTE PTR [rax],al
  42922b:	add    BYTE PTR [rax],al
  42922d:	and    al,0xb8
  42922f:	xchg   edi,eax
  429230:	xchg   edi,eax
  429231:	xchg   esp,eax
  429232:	lea    ecx,[rbx+rcx*4-0x7b7b7b75]
  429239:	test   BYTE PTR [rbx+0x50545401],al
  42923f:	xor    esi,DWORD PTR ss:[rdx]
  429242:	mov    edi,0xe5e5e50e
  429247:	in     eax,0xd5
  429249:	adc    BYTE PTR [rax],al
  42924b:	add    BYTE PTR [rax],al
  42924d:	and    al,0xc5
  42924f:	ror    bh,1
  429251:	iret   
  429252:	mov    ch,0xbd
  429255:	mov    eax,0xa5b0b0b8
  42925a:	mov    eax,DWORD PTR [rcx+riz*2]
  42925d:	pop    rdx
  42925e:	push   rsp
  42925f:	push   rax
  429260:	ss xor eax,0x6f7710b3
  429266:	rex.WXB
  429267:	rex.W
  429268:	rex.RB and al,0x0
  42926b:	add    BYTE PTR [rax],al
  42926d:	and    al,0xc5
  42926f:	rcl    al,1
  429271:	iret   
  429272:	iret   
  429273:	mov    ch,0xc5
  429276:	mov    eax,0x84b0b0b8
  42927b:	add    al,0x61
  42927d:	(bad)  
  42927e:	pop    rdx
  42927f:	push   rbx
  429280:	push   rax
  429281:	ss mov edi,0xa3b0b010
  429287:	movabs ds:0xd9c5240000002494,eax
  429290:	mov    al,0x19
  429292:	mov    cl,0xcf
  429294:	(bad)
  429297:	mov    ebp,0x48bb0bd
  42929c:	pop    rsi
  42929d:	push   rdx
  42929e:	push   rdx
  42929f:	push   rax
  4292a0:	rex.WR xor al,0xb3
  4292a3:	and    al,dl
  4292a5:	iret   
  4292a6:	(bad)
  4292a9:	and    eax,0x24000000
  4292ae:	(bad)  
  4292af:	loope  0x4292ca
  4292b1:	pop    rbp
  4292b2:	sbb    edi,ecx
  4292b4:	(bad)  
  4292b5:	je     0x429326
  4292b7:	cs and eax,0xc3018bb8
  4292bd:	ret    
  4292be:	mov    edi,0x9eabacac
  4292c3:	and    al,0xe3
  4292c5:	jrcxz  0x4292aa
  4292c7:	loope  0x4292ac
  4292c9:	add    BYTE PTR cs:[rax],al
  4292cc:	add    BYTE PTR [rdi+rcx*8],ah
  4292cf:	loope  0x429282
  4292d1:	sbb    DWORD PTR [rcx-0x34302f30],esi
  4292d7:	(bad)
  4292da:	mov    WORD PTR [rcx+rsi*2],es
  4292dd:	imul   ecx,DWORD PTR [rbx+0x46],0x45
  4292e1:	cs and eax,0x777e8224
  4292e7:	ja     0x429358
  4292e9:	(bad)  
  4292ea:	add    BYTE PTR [rax],al
  4292ec:	add    BYTE PTR [rdi+rcx*8],ah
  4292ef:	loope  0x4292d2
  4292f1:	loope  0x4292cc
  4292f3:	rcl    ecx,1
  4292f5:	ror    ebx,1
  4292f7:	iret   
  4292f8:	(bad)
  4292fb:	add    DWORD PTR [rax],eax
  4292fd:	add    BYTE PTR [rax],al
  4292ff:	(bad)  
  429300:	in     eax,0xc7
  429302:	(bad)
  429305:	mov    eax,0x4595a7b0
  42930a:	add    BYTE PTR [rax],al
  42930c:	add    BYTE PTR [rdi+rcx*8],ah
  42930f:	in     eax,0xb1
  429311:	sbb    DWORD PTR [rcx-0x342e2627],esi
  429317:	retf   
  429318:	mov    dh,0x95
  42931b:	add    al,0x0
  42931d:	add    BYTE PTR [rax],al
  42931f:	(bad)  
  429320:	in     eax,0xda
  429322:	rcl    ecx,1
  429324:	retf   
  429325:	(bad)  
  429326:	mov    ebp,0x4b94b0
  42932b:	add    BYTE PTR [rax],al
  42932d:	and    al,0xd1
  42932f:	in     eax,0x19
  429331:	pop    rbp
  429332:	sbb    ecx,esp
  429334:	mov    BYTE PTR [rdi+0x6f],dh
  429337:	(bad)  
  429338:	and    eax,0x495cb
  42933d:	add    BYTE PTR [rax],al
  42933f:	xchg   ecx,eax
  429340:	in     eax,0xe5
  429342:	in     eax,0xe5
  429344:	in     eax,0xe5
  429346:	jrcxz  0x42932d
  429348:	fldcw  WORD PTR [rbx+0x0]
  42934b:	add    BYTE PTR [rax],al
  42934d:	sub    edx,ebx
  42934f:	in     eax,0xb0
  429351:	sbb    DWORD PTR [rcx-0x25261e1f],esi
  429357:	rcl    ecx,1
  429359:	retf   
  42935a:	pushf  
  42935b:	add    al,0x0
  42935d:	add    BYTE PTR [rax],al
  42935f:	xchg   ecx,eax
  429360:	xchg   ecx,eax
  429361:	xchg   ecx,eax
  429362:	xchg   DWORD PTR [rdi+0x77787c82],eax
  429368:	ja     0x4293d9
  42936a:	add    BYTE PTR [rax],al
  42936c:	add    BYTE PTR [rsi],ch
  42936e:	(bad)  
  429370:	in     eax,0xe5
  429372:	in     eax,0xe5
  429374:	jrcxz  0x42934f
  429376:	(bad)  
  429378:	rcl    ecx,1
  42937a:	lahf   
  42937b:	add    al,0x0
	...
  42938d:	rex.RB loope 0x429375
  429390:	mov    dl,0x19
  429392:	mov    dl,0xe5
  429394:	jrcxz  0x429379
  429396:	(bad)  
  429398:	(bad)  
  42939a:	lahf   
  42939b:	add    al,0x0
	...
  4293ad:	rex.WXB loope 0x429395
  4293b0:	sbb    DWORD PTR [rbp+0x19],ebx
  4293b3:	in     eax,0x82
  4293b5:	js     0x429427
  4293b7:	sub    bl,r9b
  4293ba:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  4293bb:	add    al,BYTE PTR [rax]
	...
  4293cd:	outs   dx,DWORD PTR ds:[rsi]
  4293ce:	loope  0x4293b5
  4293d0:	mov    dl,0x19
  4293d2:	mov    dl,0xe5
  4293d4:	in     eax,0xe5
  4293d6:	in     eax,0xe1
  4293d8:	loope  0x4293b3
  4293da:	mov    al,0x2
	...
  4293ec:	add    BYTE PTR [rdi-0x1d],dh
  4293ef:	in     eax,0xe5
  4293f1:	in     eax,0xe5
  4293f3:	in     eax,0xe5
  4293f5:	in     eax,0xe5
  4293f7:	in     eax,0xab
  4293f9:	ja     0x42946a
  4293fb:	add    al,0x0
	...
  42940d:	jl     0x4293f2
  42940f:	in     eax,0xe5
  429411:	in     eax,0xe5
  429413:	in     eax,0xe5
  429415:	in     eax,0xe5
  429417:	in     eax,0x4b
  429419:	(bad)  
  42941a:	(bad)  
  42941b:	add    al,0x0
	...
  42942d:	jg     0x429414
  42942f:	in     eax,0xe5
  429431:	in     eax,0xe5
  429433:	in     eax,0xe5
  429435:	in     eax,0xe5
  429437:	in     eax,0x4b
  429439:	ret    
  42943a:	and    al,0x0
	...
  42944c:	add    BYTE PTR [rdx-0x1a1a1a1b],al
  429452:	in     eax,0xe5
  429454:	in     eax,0xe3
  429456:	jrcxz  0x429439
  429458:	rex.WXB and al,0x0
	...
  42946b:	add    BYTE PTR [rax],al
  42946d:	(bad)  
  42946e:	(bad)  
  42946f:	(bad)  
  429470:	jl     0x4294e6
  429472:	outs   dx,DWORD PTR ds:[rsi]
  429473:	rex.WXB
  429474:	rex.RB
  429475:	sub    ah,BYTE PTR cs:[rip+0x24]        # 0x4294a0
	...
  429488:	add    BYTE PTR [rax],al
  42948a:	add    bh,bh
  42948c:	rol    BYTE PTR [rbx],0xff
  42948f:	inc    eax
  429491:	add    edi,edi
  429493:	push   rax
  429495:	ud0    edi,edi
  429498:	clc    
  429499:	adc    BYTE PTR [rcx],al
  42949b:	inc    BYTE PTR [rax]
  42949d:	add    BYTE PTR [rcx],al
  42949f:	inc    BYTE PTR [rax]
  4294a1:	add    BYTE PTR [rcx],al
  4294a3:	inc    BYTE PTR [rax]
  4294a5:	add    BYTE PTR [rcx],al
  4294a7:	inc    BYTE PTR [rax]
  4294a9:	add    BYTE PTR [rcx],al
  4294ab:	inc    BYTE PTR [rax]
  4294ad:	add    BYTE PTR [rcx],al
  4294af:	inc    BYTE PTR [rax]
  4294b1:	add    BYTE PTR [rcx],al
  4294b3:	inc    BYTE PTR [rax]
  4294b5:	add    BYTE PTR [rcx],al
  4294b7:	inc    BYTE PTR [rax]
  4294b9:	add    BYTE PTR [rcx],al
  4294bb:	rol    BYTE PTR [rax],0x0
  4294be:	add    eax,eax
  4294c0:	add    BYTE PTR [rax],al
  4294c2:	add    eax,eax
  4294c4:	add    BYTE PTR [rax],al
  4294c6:	add    eax,eax
  4294c8:	add    BYTE PTR [rax],al
  4294ca:	add    eax,eax
  4294cc:	add    BYTE PTR [rax],al
  4294ce:	add    eax,eax
  4294d0:	add    BYTE PTR [rax],al
  4294d2:	add    eax,eax
  4294d4:	add    BYTE PTR [rax],al
  4294d6:	add    eax,eax
  4294d8:	add    BYTE PTR [rax+0x1],dh
  4294db:	rol    BYTE PTR [rax],0x70
  4294de:	add    eax,eax
  4294e0:	add    BYTE PTR [rax+0x1],dh
  4294e3:	rol    BYTE PTR [rax],0x70
  4294e6:	add    eax,eax
  4294e8:	add    BYTE PTR [rdi-0x1],bh
  4294eb:	rol    BYTE PTR [rax],0x7f
  4294ee:	inc    eax
  4294f0:	add    BYTE PTR [rdi-0x1],bh
  4294f3:	rol    BYTE PTR [rax],0x7f
  4294f6:	inc    eax
  4294f8:	add    BYTE PTR [rdi-0x1],bh
  4294fb:	rol    BYTE PTR [rax],0x7f
  4294fe:	inc    eax
  429500:	add    bh,bh
  429502:	inc    eax
  429504:	add    edi,edi
  429506:	inc    eax
  429508:	add    edi,edi
  42950a:	jmp    FWORD PTR [rax]
  42950c:	add    BYTE PTR [rax],al
  42950e:	add    BYTE PTR [rax],dl
  429510:	add    BYTE PTR [rax],al
  429512:	add    BYTE PTR [rax],ah
  429514:	add    BYTE PTR [rax],al
  429516:	add    BYTE PTR [rcx],al
  429518:	add    BYTE PTR [rax],cl
  42951a:	add    BYTE PTR [rax],al
  42951c:	add    BYTE PTR [rax],al
  42951e:	add    BYTE PTR [rax],al
  429520:	add    DWORD PTR [rax],eax
	...
  42952a:	add    BYTE PTR [rax],al
  42952c:	add    DWORD PTR [rax],eax
  42952e:	add    BYTE PTR [rax],al
  429530:	add    DWORD PTR [rax],eax
  429532:	add    BYTE PTR [rax],al
  429534:	add    BYTE PTR [rax],al
  429536:	add    BYTE PTR [rbx+0x48],ah
  429539:	xor    eax,DWORD PTR [rax]
  42953b:	movsxd ecx,DWORD PTR [rcx+0x34]
  42953e:	add    BYTE PTR [rbp+0x4a],ah
  429541:	add    BYTE PTR ss:[rsi+0x4c],ah
  429545:	add    BYTE PTR ss:[rcx+0x4e],ch
  429549:	cmp    al,BYTE PTR [rax]
  42954b:	ins    BYTE PTR es:[rdi],dx
  42954c:	push   rcx
  42954d:	cmp    eax,0x40546f00
  429552:	add    BYTE PTR [rcx+0x57],dh
  429555:	add    BYTE PTR [rdx+0x58],r14b
  429559:	add    BYTE PTR [rdx+rbx*2+0x46],r14b
  42955e:	add    BYTE PTR [rbp+0x5c],dh
  429561:	rex.WB add BYTE PTR [r10+0x61],dil
  429565:	rex.WRX add BYTE PTR [rbx+r12*2+0x50],r15b
  42956a:	add    BYTE PTR [rsi-0x5bffcca8],ah
  429570:	(bad)  
  429571:	sub    al,BYTE PTR [rax]
  429573:	mov    dl,0x60
  429575:	cmp    DWORD PTR [rax],eax
  429577:	sub    DWORD PTR [rcx+0x56],0x5d6f8600
  42957e:	add    BYTE PTR [rbx-0x75ff9e8d],cl
  429584:	jbe    0x4295ea
  429586:	add    BYTE PTR [rsi-0x6eff9a8a],cl
  42958c:	jns    0x4295f5
  42958e:	add    BYTE PTR [rdx-0x6fff9686],dl
  429594:	jge    0x429601
  429596:	add    BYTE PTR [rsp+rdi*2+0x7e97006a],dl
  42959d:	outs   dx,DWORD PTR ds:[rsi]
  42959e:	add    BYTE PTR [rdi+rdi*2+0x6bc60068],bl
  4295a5:	add    bpl,al
  4295a8:	ins    BYTE PTR es:[rdi],dx
  4295a9:	add    dl,bl
  4295ac:	js     0x4295f6
  4295ae:	add    BYTE PTR [rdi],al
  4295b0:	popf   
  4295b1:	add    BYTE PTR [rax],al
  4295b3:	cs fwait
  4295b5:	add    BYTE PTR [rax],al
  4295b7:	or     al,0xff
  4295b9:	add    BYTE PTR [rax],al
  4295bb:	xchg   edi,eax
  4295bc:	sub    BYTE PTR [rdi+0x0],0x9d
  4295c0:	sub    BYTE PTR [rcx+0x0],0x94
  4295c4:	xor    BYTE PTR [rcx+0x0],0x98
  4295c8:	xor    DWORD PTR [rax+0x0],0x758598
  4295cf:	lahf   
  4295d0:	mov    BYTE PTR [rax+0x0],bh
  4295d3:	movabs al,ds:0xa5007086a2006b83
  4295dc:	mov    DWORD PTR [rbx+0x0],esi
  4295df:	movabs al,ds:0xa6007c8ca2007989
  4295e8:	nop
  4295e9:	jg     0x4295eb
  4295eb:	lods   eax,DWORD PTR ds:[rsi]
  4295ec:	nop
  4295ed:	jnp    0x4295ef
  4295ef:	mov    al,0x95
  4295f1:	jg     0x4295f3
  4295f3:	out    dx,al
  4295f4:	xchg   BYTE PTR [rdx+0x0],dl
  4295f7:	cld    
  4295f8:	xchg   ebx,eax
  4295f9:	pop    rbp
  4295fa:	add    al,bl
  4295fc:	xchg   ecx,eax
  4295fd:	imul   eax,DWORD PTR [rax],0x7298da
  429603:	fstp   QWORD PTR [rdi-0x6200ff84]
  429609:	imul   eax,DWORD PTR [rax],0x8190a2
  42960f:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  429610:	xchg   ecx,eax
  429611:	add    DWORD PTR [rax],0x8695ab
  429617:	test   al,0x96
  429619:	mov    al,BYTE PTR [rax]
  42961b:	scas   al,BYTE PTR es:[rdi]
  42961c:	cdq    
  42961d:	mov    al,BYTE PTR [rax]
  42961f:	stos   BYTE PTR es:[rdi],al
  429620:	(bad)  
  429621:	lea    eax,[rax]
  429623:	lods   eax,DWORD PTR ds:[rsi]
  429624:	(bad)  
  429625:	mov    WORD PTR [rax],es
  429627:	mov    ah,0x9f
  429629:	nop
  42962a:	add    BYTE PTR [rsi-0x47ff6c5f],dh
  429630:	movabs ds:0xa5b60097a6bb0095,eax
  429639:	cdq    
  42963a:	add    BYTE PTR [rbx-0x43ff6759],bh
  429640:	test   al,0x9a
  429642:	add    BYTE PTR [rsi-0x40ff6355],bh
  429648:	scas   al,BYTE PTR es:[rdi]
  429649:	movabs ds:0x99a9c80090a2c600,eax
  429652:	add    dl,al
  429654:	scas   al,BYTE PTR es:[rdi]
  429655:	movabs eax,ds:0xa3b1c400a0aec900
  42965e:	add    bh,al
  429660:	mov    bl,0xa6
  429662:	add    bh,al
  429664:	mov    ah,0xa7
  429666:	add    dl,cl
  429668:	mov    al,0xa3
  42966a:	add    ah,al
  42966c:	mov    ah,0xaa
  42966e:	add    cl,cl
  429670:	mov    ch,0xaa
  429672:	add    ch,al
  429674:	mov    eax,0xb9cd00ad
  429679:	scas   al,BYTE PTR es:[rdi]
  42967a:	add    ch,dl
  42967c:	mov    ah,0xa4
  42967e:	add    cl,dl
  429680:	mov    ecx,0xbfc900ae
  429685:	mov    bh,0x0
  429687:	sar    DWORD PTR [rbx-0x422aff4f],cl
  42968d:	mov    cl,0x0
  42968f:	fdivr  QWORD PTR [rdi-0x3b25ff4d]
  429695:	mov    esp,0xb5c4e400
  42969a:	add    ah,ah
  42969c:	(bad)  
  42969d:	mov    eax,0xbac8e500
  4296a2:	add    ch,ah
  4296a4:	retf   
  4296a5:	mov    ebp,0xc8cfdc00
  4296aa:	add    dh,bl
  4296ac:	ror    edx,1
  4296ae:	add    ch,bl
  4296b0:	rcl    ebx,cl
  4296b2:	add    ch,bl
  4296b4:	(bad)  
  4296b5:	(bad)  
  4296b6:	add    dh,bl
  4296b8:	(bad)  
  4296ba:	add    bh,bl
  4296bc:	fstp   st(6)
  4296be:	add    cl,ch
  4296c0:	rol    ebx,1
  4296c2:	add    bh,ch
  4296c4:	(bad)  
  4296c5:	leave  
  4296c6:	add    bl,dh
  4296c8:	xlat   BYTE PTR ds:[rbx]
  4296c9:	retf   
  4296ca:	add    bl,dh
  4296cc:	fmul   st,st(4)
  4296ce:	add    ah,dh
  4296d0:	fcmove st,st(5)
  4296d2:	add    ah,ah
  4296d4:	(bad)  
  4296d6:	add    bh,ah
  4296d8:	fcompp 
  4296da:	add    ch,dh
  4296dc:	fst    st(1)
  4296de:	add    ch,dh
  4296e0:	(bad)  
  4296e2:	add    dh,dh
  4296e4:	loopne 0x4296bc
  4296e6:	add    cl,bh
  4296e8:	in     al,0xda
  4296ea:	add    al,bh
  4296ec:	out    0xde,al
  4296ee:	add    bh,bl
  4296f0:	fnstsw ax
  4296f2:	add    dl,ah
  4296f4:	jrcxz  0x4296dd
  4296f6:	add    ah,ch
  4296f8:	out    0xe1,al
  4296fa:	add    bh,ch
  4296fc:	call   0xffffffffec3b97e6
  429701:	in     al,0x0
  429703:	stc    
  429704:	in     al,dx
  429705:	out    0x0,al
  429707:	repz out dx,eax
  429709:	in     al,dx
  42970a:	add    cl,bh
  42970c:	in     eax,dx
  42970d:	call   0xffffffffef369212
  429712:	add    ch,bh
  429714:	clc    
  429715:	cmc    
  429716:	add    dh,bh
  429718:	cld    
  429719:	sti    
  42971a:	add    dh,bh
  42971c:	(bad)  
  42971d:	inc    BYTE PTR [rax]
	...
  42992f:	(bad)  
  429930:	(bad)  
  429931:	inc    DWORD PTR [rax]
  429933:	add    BYTE PTR [rsi+rcx*2+0x4e],dl
  429937:	rex.RB
  429938:	rex.B cmp al,0x36
  42993b:	sbb    BYTE PTR es:[rax],bl
  42993e:	add    BYTE PTR [rax],al
  429940:	add    BYTE PTR [rax],al
  429942:	add    BYTE PTR [rax],al
  429944:	add    BYTE PTR [rsp+rdx*2+0x61],dl
  429948:	pop    rbp
  429949:	cmp    QWORD PTR [r8+r11*1],r10
	...
  429955:	add    BYTE PTR [rax],al
  429957:	cmp    al,0x24
  429959:	adc    cl,BYTE PTR [rbx]
  42995b:	(bad)  
  42995c:	sub    ch,BYTE PTR cs:[rcx]
  42995f:	sub    BYTE PTR [rbx],ah
  429961:	sbb    ebx,DWORD PTR [rbx]
  429963:	sub    esp,DWORD PTR [rsi]
  429965:	(bad)  
  429966:	adc    DWORD PTR [rdx+rcx*1],ecx
  429969:	(bad)  
  42996a:	add    eax,0x3010303
  42996f:	rex.RX
  429970:	rex.RX
  429971:	rex.RX add r13d,DWORD PTR [rbx]
  429974:	jno    0x4299e6
  429976:	outs   dx,DWORD PTR ds:[rsi]
  429977:	(bad)  
  429978:	(bad)  
  429979:	(bad)  
  42997a:	(bad)  
  42997b:	and    DWORD PTR [rdi],ebx
  42997d:	push   rax
  42997e:	add    DWORD PTR [rcx],esp
  429980:	and    BYTE PTR [rdi+0x5],al
  429983:	cmp    dh,BYTE PTR [rdx+0x34]
  429986:	xor    eax,0x1c1e3031
  42998b:	adc    BYTE PTR [rsi],cl
  42998d:	pop    rax
  42998e:	add    esp,DWORD PTR [rsi+0x66]
  429991:	rex.RXB (bad) 
  429993:	or     BYTE PTR [rsi],al
  429995:	(bad)  
  429996:	(bad)  
  429997:	(bad)  
  429998:	(bad)  
  429999:	(bad)  
  42999a:	(bad)  
  42999b:	sbb    eax,0x6a015310
  4299a0:	push   0x49
  4299a2:	or     dl,BYTE PTR [rbp*2+0x64646464]
  4299a9:	pop    rcx
  4299aa:	(bad)  
  4299ab:	(bad)  
  4299ac:	sbb    eax,0x6c6c0355
  4299b1:	or     r12,QWORD PTR [r14]
  4299b4:	ja     0x4299c5
  4299b6:	ins    DWORD PTR es:[rdi],dx
  4299b7:	and    ah,BYTE PTR [rdx]
  4299b9:	pop    rcx
  4299ba:	(bad)  
  4299bb:	xor    BYTE PTR [rsi],bl
  4299bd:	push   rbp
  4299be:	add    edi,DWORD PTR [rdx+0x7a]
  4299c1:	jne    0x4299d0
  4299c3:	es js  0x429a3d
  4299c6:	jbe    0x429a36
  4299c8:	ins    BYTE PTR es:[rdi],dx
  4299c9:	pop    rdx
  4299ca:	(bad)  
  4299cb:	xor    DWORD PTR [rax],esi
  4299cd:	push   rbp
  4299ce:	add    ebp,DWORD PTR [rbx]
  4299d0:	es (bad) 
  4299d2:	adc    DWORD PTR [rdx],edi
  4299d4:	js     0x4299e5
  4299d6:	ja     0x4299fa
  4299d8:	and    bl,BYTE PTR [rdx+0x6]
  4299db:	xor    esi,DWORD PTR [rdx]
  4299dd:	push   rdi
  4299de:	(bad)  
  4299df:	je     0x429a55
  4299e1:	push   rcx
  4299e2:	adc    bh,BYTE PTR [rcx]
  4299e4:	jp     0x429a60
  4299e6:	ja     0x429a5f
  4299e8:	jbe    0x429a46
  4299ea:	(bad)  
  4299eb:	imul   ebp,DWORD PTR [rax+0x5e],0x757a7a0a
  4299f2:	adc    al,0x3e
  4299f4:	jp     0x429a05
  4299f6:	jp     0x429a1a
  4299f8:	and    ah,BYTE PTR [rbx+0x6]
  4299fb:	sbb    BYTE PTR [rsp+rcx*1],dl
  4299fe:	or     edi,DWORD PTR [rsi+rsi*1]
  429a01:	sub    ebx,DWORD PTR [rax]
  429a03:	rex.XB jp 0x429a80
  429a06:	jp     0x429a82
  429a08:	sub    eax,DWORD PTR [rdi]
  429a0a:	(bad)  
  429a0b:	ds jp  0x429a82
  429a0e:	ins    DWORD PTR es:[rdi],dx
  429a0f:	push   0x66
  429a11:	push   rdx
  429a12:	es rex.W jp 0x429a90
  429a16:	jp     0x429a92
  429a18:	sub    edi,DWORD PTR [rax+rax*1]
  429a1b:	rex.WX jp 0x429a98
  429a1e:	jp     0x429a9a
  429a20:	jp     0x429a97
  429a22:	sub    eax,0x3e43484a
  429a27:	cmp    bh,BYTE PTR [rdx]
  429a29:	add    BYTE PTR [rax],al
  429a2b:	rex.WX
  429a2c:	rex.WX
  429a2d:	rex.XB
  429a2e:	rex.XB
  429a2f:	ds cmp bh,BYTE PTR ds:[rdx]
  429a33:	sbb    BYTE PTR [rdi],0x0
  429a36:	add    al,al
  429a38:	(bad)  
  429a39:	add    BYTE PTR [rax],al
  429a3b:	lock add BYTE PTR [rax],al
	...
  429a6a:	add    BYTE PTR [rcx],al
  429a6c:	add    BYTE PTR [rax],al
  429a6e:	add    BYTE PTR [rbx],al
  429a70:	add    BYTE PTR [rax],al
  429a72:	add    BYTE PTR [rax],ch
  429a74:	add    BYTE PTR [rax],al
  429a76:	add    BYTE PTR [rax],ah
  429a78:	add    BYTE PTR [rax],al
  429a7a:	add    BYTE PTR [rax+0x0],al
  429a7d:	add    BYTE PTR [rax],al
  429a7f:	add    DWORD PTR [rax],eax
  429a81:	and    BYTE PTR [rax],al
  429a83:	add    BYTE PTR [rax],al
  429a85:	add    BYTE PTR [rax],al
  429a87:	adc    BYTE PTR [rax],0x0
	...
  429ac2:	add    bh,cl
  429ac4:	(bad)  
  429ac5:	mov    ebp,0xa4b2c6ff
  429aca:	(bad)  
  429acb:	mov    edi,0xb7ff9dab
  429ad0:	movabs ds:0x90a6ff8b9aafff95,eax
  429ad9:	cmp    bh,0x9c
  429adc:	xchg   BYTE PTR [rsi-0x1],dh
  429adf:	xchg   esp,eax
  429ae0:	jl     0x429b4d
  429ae2:	dec    DWORD PTR [rcx-0x7f009f8f]
  429ae8:	push   0x5f78ff55
  429aed:	rex.WR push QWORD PTR [rax+0x56]
  429af1:	rex.XB inc DWORD PTR [r8]
	...
  429b40:	add    BYTE PTR [rax],al
  429b42:	add    dh,bl
  429b44:	ror    edx,1
  429b46:	jmp    rsi
  429b48:	fcompp 
  429b4a:	(bad)  
  429b4b:	jmp    0x429b32
  429b4d:	jrcxz  0x429b4e
  429b4f:	(bad)  
  429b50:	loop   0x429b32
  429b52:	jmp    rsi
  429b54:	(bad)  
  429b56:	(bad)  
  429b57:	fcmovne st,st(4)
  429b59:	vaddsubps ymm7,ymm0,YMMWORD PTR [rdx+rsi*4-0x5c4f3a01]
  429b62:	push   QWORD PTR [rbp+rbx*4-0x68500070]
  429b69:	mov    edi,edi
  429b6b:	movabs ds:0xff7687a3ff7687,eax
	...
  429bc8:	add    BYTE PTR [rax],al
  429bca:	add    bh,dl
  429bcc:	enter  0xffc0,0xc8
  429bd0:	mov    edi,0xdee5ffb7
  429bd5:	(bad)  
  429bd7:	(bad)  
  429bd9:	retf   0xcbff
  429bdc:	mov    eax,0xadc3ffad
  429be1:	movabs al,ds:0x64768aff909db4ff
  429bea:	inc    DWORD PTR [rax]
	...
  429c4c:	add    BYTE PTR [rax],al
  429c4e:	add    BYTE PTR [rcx-0x69007266],ch
  429c54:	jg     0x429cc5
  429c56:	call   QWORD PTR [rsi-0x69009081]
  429c5c:	jg     0x429ccd
  429c5e:	call   QWORD PTR [rsi+0x74ff6f7f]
  429c64:	pop    rsp
  429c65:	inc    QWORD PTR [rax]
  429c68:	add    BYTE PTR [rax],al
  429c6a:	add    BYTE PTR [rax-0x62008d7b],ah
  429c70:	sub    DWORD PTR [rsi-0x1],0xffffff9a
  429c74:	sub    BYTE PTR [rdi+rdi*8-0x68],0x7e
  429c79:	imul   edi,edi,0xff677b96
  429c7f:	xchg   esp,eax
  429c80:	jns    0x429ce7
  429c82:	call   QWORD PTR [rdx-0x6e009c88]
  429c88:	jbe    0x429ceb
  429c8a:	call   QWORD PTR [rcx-0x6e009e8a]
  429c90:	jbe    0x429cf3
  429c92:	call   QWORD PTR [rcx+0xff6176]
	...
  429cb4:	add    BYTE PTR [rax],al
  429cb6:	add    BYTE PTR [rdi-0x54007466],ch
  429cbc:	xchg   ebp,eax
  429cbd:	xchg   bh,bh
  429cbf:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  429cc0:	xchg   ecx,eax
  429cc1:	cmp    bh,0x9d
  429cc4:	xchg   BYTE PTR [rsi-0x1],dh
  429cc7:	cdq    
  429cc8:	xor    DWORD PTR [rcx-0x1],0xff6b7d94
  429ccf:	(bad)  
  429cd0:	js     0x429d38
  429cd2:	dec    DWORD PTR [rbx-0x79009f8d]
  429cd8:	outs   dx,BYTE PTR ds:[rsi]
  429cd9:	pop    rsp
  429cda:	inc    DWORD PTR [rdx+0x7eff5769]
  429ce0:	fs push rdx
  429ce2:	(bad)  
  429ce3:	jp     0x429d45
  429ce5:	rex.WRB push QWORD PTR [r14+0x5c]
  429ce9:	rex.WB push QWORD PTR [r10+0x58]
  429ced:	rex.R jmp FWORD PTR [rdi+0x54]
  429cf1:	jmp    FWORD PTR [r11+0x50]
  429cf5:	cmp    al,0xff
  429cf7:	data16 rex.WXB
  429cf9:	jmp    QWORD PTR ss:[rcx+rcx*2+0x34]
  429cfe:	dec    eax
  429d00:	stos   DWORD PTR es:[rdi],eax
  429d01:	fwait
  429d02:	dec    eax
  429d04:	stos   DWORD PTR es:[rdi],eax
  429d05:	fwait
  429d06:	dec    eax
  429d08:	stos   DWORD PTR es:[rdi],eax
  429d09:	fwait
  429d0a:	dec    eax
  429d0c:	stos   DWORD PTR es:[rdi],eax
  429d0d:	fwait
  429d0e:	dec    eax
  429d10:	stos   DWORD PTR es:[rdi],eax
  429d11:	fwait
  429d12:	jmp    QWORD PTR [rbx+0x48]
  429d15:	xor    edi,edi
	...
  429d37:	mov    dl,0x9d
  429d39:	mov    ?,edi
  429d3b:	hlt    
  429d3c:	out    dx,al
  429d3d:	jmp    0x429d3e
  429d3f:	out    0xe3,eax
  429d41:	loope  0x429d42
  429d43:	loop   0x429d21
  429d45:	fcos   
  429d47:	loopne 0x429d20
  429d49:	sar    edi,cl
  429d4b:	fst    st(1)
  429d4d:	(bad)  
  429d4e:	(bad)  
  429d4f:	fxch   st(4)
  429d51:	(bad)  
  429d52:	call   rbp
  429d54:	mov    cl,0xff
  429d57:	sar    DWORD PTR [rdi-0x47320046],1
  429d5d:	mov    bl,0xff
  429d5f:	enter  0xabb2,0xff
  429d63:	(bad)
  429d66:	inc    ecx
  429d68:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  429d69:	popf   
  429d6a:	(bad)  
  429d6b:	mov    esp,0xcff969f
  429d70:	inc    DWORD PTR [rax]
  429d72:	jmp    FWORD PTR [rsi]
  429d74:	fwait
  429d75:	add    bh,bh
  429d77:	mov    dl,0x8d
  429d79:	cmp    edi,0x65
  429d7c:	rex.WX xor rax,0xffffffffbacbf0ff
  429d82:	(bad)  
  429d83:	out    dx,al
  429d84:	enter  0xffb6,0x2e
  429d88:	int3   
  429d89:	add    bh,bh
  429d8b:	cs fwait
  429d8d:	add    bh,bh
  429d8f:	enter  0x9bab,0xff
  429d93:	movsxd ecx,DWORD PTR [rax+0x33]
  429d96:	inc    DWORD PTR [rax]
	...
  429db4:	add    BYTE PTR [rax],al
  429db6:	add    BYTE PTR [rcx+riz*4-0x140f006e],dh
  429dbd:	call   0xffffffffd0177fc1
  429dc2:	jmp    rcx
  429dc4:	(bad)  
  429dc5:	iret   
  429dc6:	jmp    rcx
  429dc8:	(bad)  
  429dc9:	iret   
  429dca:	jmp    rcx
  429dcc:	(bad)  
  429dcd:	iret   
  429dce:	jmp    rcx
  429dd0:	(bad)  
  429dd1:	iret   
  429dd2:	jmp    rcx
  429dd4:	(bad)  
  429dd5:	iret   
  429dd6:	jmp    rcx
  429dd8:	(bad)  
  429dd9:	iret   
  429dda:	jmp    rcx
  429ddc:	(bad)  
  429ddd:	iret   
  429dde:	jmp    rcx
  429de0:	(bad)  
  429de1:	iret   
  429de2:	jmp    rcx
  429de4:	(bad)  
  429de5:	iret   
  429de6:	jmp    rcx
  429de8:	(bad)  
  429de9:	iret   
  429dea:	jmp    rcx
  429dec:	(bad)  
  429ded:	iret   
  429dee:	jmp    rcx
  429df0:	(bad)  
  429df1:	iret   
  429df2:	jmp    rcx
  429df4:	(bad)  
  429df5:	iret   
  429df6:	jmp    rcx
  429df8:	(bad)  
  429df9:	iret   
  429dfa:	jmp    QWORD PTR [rdi+0x4c]
  429dfd:	(bad)  
  429dfe:	push   rax
  429e00:	iret   
  429e01:	sar    bh,0xef
  429e04:	retf   
  429e05:	mov    edx,0xff0cff
  429e0a:	jmp    FWORD PTR [rsi]
  429e0c:	int3   
  429e0d:	add    bh,bh
  429e0f:	enter  0x9bab,0xff
  429e13:	gs rex.WB xor rax,0xff
	...
  429e36:	add    BYTE PTR [rax-0xd006b5d],bh
  429e3c:	in     eax,dx
  429e3d:	jmp    0x429e3e
  429e3f:	(bad)  
  429e40:	mov    WORD PTR [rdi-0x1],ss
  429e43:	call   QWORD PTR [rax-0x750100a8]
  429e49:	push   rcx
  429e4a:	push   rsi
  429e4c:	test   DWORD PTR [rbp-0x1],ecx
  429e4f:	in     eax,dx
  429e50:	jg     0x429e9b
  429e52:	jmp    rdx
  429e54:	js     0x429e9a
  429e56:	(bad)  
  429e57:	fdiv   DWORD PTR [rcx+0x3e]
  429e5a:	dec    ebp
  429e5c:	push   0x39
  429e5e:	inc    edx
  429e60:	fs xor eax,0x315db8ff
  429e66:	jmp    FWORD PTR [rsi-0x5800d2a9]
  429e6c:	push   rbx
  429e6d:	sub    bh,bh
  429e6f:	movabs ds:0xe1ff2950a3ff2850,eax
  429e78:	(bad)  
  429e79:	iret   
  429e7a:	jmp    FWORD PTR [rcx+0x4e]
  429e7d:	cmp    edi,edi
  429e7f:	repnz (bad) 
  429e81:	(bad)  
  429e82:	push   rcx
  429e84:	iret   
  429e85:	mov    edi,0xbbcbf0ff
  429e8a:	(bad)  
  429e8b:	out    dx,eax
  429e8c:	enter  0xffb5,0xc8
  429e90:	stos   DWORD PTR es:[rdi],eax
  429e91:	fwait
  429e92:	jmp    FWORD PTR [rax+0x4c]
  429e95:	cmp    bh,bh
	...
  429eb7:	mov    ebx,0xf4ff98a6
  429ebc:	out    dx,eax
  429ebd:	in     eax,dx
  429ebe:	(bad)  
  429ebf:	jmp    0x429e59
  429ec1:	push   0x689cffff
  429ec6:	(bad)  
  429ec7:	call   QWORD PTR [rsi-0x6e03009e]
  429ecd:	pop    rsp
  429ece:	push   rbp
  429ed0:	mov    edx,DWORD PTR [rsi-0x1]
  429ed3:	in     al,dx
  429ed4:	test   BYTE PTR [rdx-0x1],dl
  429ed7:	loop   0x429f57
  429ed9:	rex.WRB (bad) 
  429edb:	fnstcw WORD PTR [rax+0x48]
  429ede:	dec    esi
  429ee0:	jno    0x429f25
  429ee2:	inc    esp
  429ee4:	imul   edi,DWORD PTR [rdi],0xffffffff
  429ee7:	mov    edx,0xb1ff3b65
  429eec:	pop    rdi
  429eed:	cmp    bh,bh
  429eef:	stos   BYTE PTR es:[rdi],al
  429ef0:	pop    rdx
  429ef1:	xor    eax,0x3458a6ff
  429ef6:	jmp    rcx
  429ef8:	(bad)  
  429ef9:	iret   
  429efa:	jmp    FWORD PTR [rdx+0x50]
  429efd:	cmp    edi,edi
  429eff:	hlt    
  429f00:	fmul   st,st(2)
  429f02:	push   rdx
  429f04:	(bad)  
  429f05:	(bad)  
  429f06:	push   rax
  429f08:	iret   
  429f09:	sar    bh,0xf0
  429f0c:	retf   
  429f0d:	mov    edx,0x9babc8ff
  429f12:	jmp    FWORD PTR [rdx+0x50]
  429f15:	cmp    edi,edi
	...
  429f37:	mov    ebp,0xf5ff9ba9
  429f3c:	icebp  
  429f3d:	out    dx,eax
  429f3e:	(bad)  
  429f3f:	jmp    0x429ede
  429f41:	outs   dx,DWORD PTR ds:[rsi]
  429f42:	(bad)  
  429f43:	jmp    QWORD PTR [rcx-0x64000092]
  429f49:	push   0x6196ffff
  429f4e:	(bad)  
  429f4f:	sti    
  429f50:	xchg   ecx,eax
  429f51:	pop    rbx
  429f52:	push   rsp
  429f54:	mov    edx,DWORD PTR [rdi-0x1]
  429f57:	in     al,dx
  429f58:	test   BYTE PTR [rcx-0x1],dl
  429f5b:	loop   0x429fdb
  429f5d:	rex.WRB (bad) 
  429f5f:	fdiv   DWORD PTR [rdi+0x48]
  429f62:	dec    ebp
  429f64:	jno    0x429fa9
  429f66:	inc    ebx
  429f68:	imul   edi,DWORD PTR [rdi],0xffffffff
  429f6b:	mov    ecx,0xb1ff3b64
  429f70:	pop    rdi
  429f71:	cmp    bh,bh
  429f73:	stos   DWORD PTR es:[rdi],eax
  429f74:	pop    rdx
  429f75:	(bad)  
  429f76:	jmp    rcx
  429f78:	(bad)  
  429f79:	iret   
  429f7a:	jmp    FWORD PTR [rdx+rdx*2+0x3e]
  429f7e:	push   rbp
  429f80:	(bad)  
  429f82:	push   rsp
  429f84:	xlat   BYTE PTR ds:[rbx]
  429f85:	retf   
  429f86:	push   rdx
  429f88:	rol    ebp,cl
  429f8a:	push   rcx
  429f8c:	iret   
  429f8d:	mov    edi,0x9babc8ff
  429f92:	jmp    FWORD PTR [rsi+0x53]
  429f95:	rex inc DWORD PTR [rax]
	...
  429fb4:	add    BYTE PTR [rax],al
  429fb6:	add    BYTE PTR [rdi-0x8006255],bh
  429fbc:	repz icebp 
  429fbe:	(bad)  
  429fbf:	in     al,dx
  429fc0:	movabs ds:0xa0ffff76a6ffff77,al
  429fc9:	outs   dx,BYTE PTR ds:[rsi]
  429fca:	(bad)  
  429fcb:	call   FWORD PTR [rbx-0x69000099]
  429fd1:	(bad)  
  429fd2:	(bad)  
  429fd3:	cli    
  429fd4:	nop
  429fd5:	pop    rsp
  429fd6:	push   rbx
  429fd8:	mov    dl,BYTE PTR [rsi-0x1]
  429fdb:	jmp    0x429f61
  429fdd:	push   rcx
  429fde:	jmp    rcx
  429fe0:	jge    0x42a02e
  429fe2:	call   rsi
  429fe4:	ja     0x42a02d
  429fe6:	dec    ebp
  429fe8:	jo     0x42a02d
  429fea:	inc    ebx
  429fec:	imul   edi,DWORD PTR [rdi],0x3b64baff
  429ff2:	push   QWORD PTR [rcx-0x1e00c6a1]
  429ff8:	(bad)  
  429ff9:	iret   
  429ffa:	jmp    FWORD PTR [rdi+0x55]
  429ffd:	push   r14
  42a000:	loope  0x429fd9
  42a002:	push   rsp
  42a004:	(bad)  
  42a006:	push   rbx
  42a008:	fmul   st,st(3)
  42a00a:	push   rcx
  42a00c:	(bad)  
  42a00d:	(bad)  
  42a010:	stos   DWORD PTR es:[rdi],eax
  42a011:	fwait
  42a012:	push   QWORD PTR [rcx+0x57]
  42a015:	rex.XB inc DWORD PTR [r8]
	...
  42a034:	add    BYTE PTR [rax],al
  42a036:	add    dl,al
  42a038:	scas   al,BYTE PTR es:[rdi]
  42a039:	movabs al,ds:0x7ea7ecfff4f5f8ff
  42a042:	(bad)  
  42a043:	jmp    FWORD PTR [rbp+rdi*2+0x75a6ffff]
  42a04a:	(bad)  
  42a04b:	jmp    QWORD PTR [rax-0x65000092]
  42a051:	data16 (bad) 
  42a053:	(bad)  
  42a054:	xchg   esi,eax
  42a055:	(bad)  
  42a056:	(bad)  
  42a057:	cli    
  42a058:	nop
  42a059:	pop    rbx
  42a05a:	push   rbx
  42a05c:	mov    dl,BYTE PTR [rsi-0x1]
  42a05f:	(bad)  
  42a060:	adc    DWORD PTR [rcx-0x1],0xffffffe0
  42a064:	jge    0x42a0b2
  42a066:	call   rsi
  42a068:	jbe    0x42a0b1
  42a06a:	dec    ebx
  42a06c:	outs   dx,DWORD PTR ds:[rsi]
  42a06d:	rex.XB inc r9d
  42a070:	imul   edi,DWORD PTR [rdi],0x3b64b9ff
  42a076:	jmp    rcx
  42a078:	(bad)  
  42a079:	iret   
  42a07a:	push   QWORD PTR [rcx+0x57]
  42a07d:	rex.XB (bad) 
  42a07f:	clc    
  42a080:	out    0xdd,al
  42a082:	push   rsi
  42a084:	loope  0x42a05d
  42a086:	push   rbp
  42a088:	fst    st(0)
  42a08a:	push   rbx
  42a08c:	xlat   BYTE PTR ds:[rbx]
  42a08d:	retf   0xc8ff
  42a090:	stos   DWORD PTR es:[rdi],eax
  42a091:	fwait
  42a092:	push   QWORD PTR [rbp+0x5c]
  42a095:	inc    QWORD PTR [rax]
	...
  42a0a0:	add    BYTE PTR [rax],al
  42a0a2:	add    BYTE PTR [rsi+0x63ff5c6d],al
  42a0a8:	rex.WB xor rax,0x354963ff
  42a0ae:	jmp    QWORD PTR [rbx+0x49]
  42a0b1:	xor    eax,0x354963ff
  42a0b6:	jmp    QWORD PTR [rbx+0x49]
  42a0b9:	xor    eax,0x354963ff
  42a0be:	jmp    QWORD PTR [rbx+0x49]
  42a0c1:	xor    eax,0x354963ff
  42a0c6:	jmp    QWORD PTR [rbx+0x49]
  42a0c9:	xor    eax,0x354963ff
  42a0ce:	jmp    QWORD PTR [rbx+0x49]
  42a0d1:	xor    eax,0x354963ff
  42a0d6:	jmp    QWORD PTR [rbx+0x49]
  42a0d9:	xor    eax,0x354963ff
  42a0de:	push   rdx
  42a0e0:	mov    dl,BYTE PTR [rsi-0x1]
  42a0e3:	jmp    0xffffffffe141f16c
  42a0e8:	jge    0x42a135
  42a0ea:	call   rbp
  42a0ec:	jbe    0x42a135
  42a0ee:	dec    ebx
  42a0f0:	outs   dx,DWORD PTR ds:[rsi]
  42a0f1:	rex.X inc ecx
  42a0f4:	push   0x3f
  42a0f6:	jmp    rcx
  42a0f8:	(bad)  
  42a0f9:	iret   
  42a0fa:	push   QWORD PTR [rdx+rbx*2+0x46]
  42a0fe:	(bad)  
  42a0ff:	stc    
  42a100:	jmp    0x42a0e6
  42a102:	(bad)  
  42a103:	clc    
  42a104:	out    0xdd,al
  42a106:	push   rsi
  42a108:	loope  0x42a0e1
  42a10a:	push   rsp
  42a10c:	fst    st(1)
  42a10e:	dec    eax
  42a110:	stos   DWORD PTR es:[rdi],eax
  42a111:	fwait
  42a112:	(bad)  
  42a113:	jp     0x42a176
  42a115:	rex.WRB inc QWORD PTR [r8]
	...
  42a120:	add    BYTE PTR [rax],al
  42a122:	add    BYTE PTR [rsi-0xb00a393],al
  42a128:	fmul   st,st(4)
  42a12a:	(bad)  
  42a12b:	fdivr  QWORD PTR [rbx-0x45220057]
  42a131:	test   al,0xff
  42a133:	(bad)  [rbp-0x4d26005e]
  42a139:	lahf   
  42a13a:	(bad)  
  42a13b:	fsubr  DWORD PTR [rdi-0x54290065]
  42a141:	xchg   edi,eax
  42a142:	call   rbp
  42a144:	test   eax,0xa7d4ff93
  42a149:	xchg   ecx,eax
  42a14a:	call   rsp
  42a14c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42a14d:	(bad)  
  42a14e:	call   rbx
  42a150:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  42a151:	(bad)  
  42a152:	call   rsp
  42a154:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42a155:	(bad)  
  42a156:	dec    edi
  42a158:	movabs eax,ds:0x8ffaff354963ff8a
  42a161:	pop    rbx
  42a162:	push   rdx
  42a164:	mov    DWORD PTR [rdi+rdi*8-0x16],edx
  42a168:	or     DWORD PTR [rdi-0x1],0xffffffdf
  42a16c:	jl     0x42a1b9
  42a16e:	call   rsi
  42a170:	jbe    0x42a1b8
  42a172:	dec    ebx
  42a174:	outs   dx,DWORD PTR ds:[rsi]
  42a175:	rex.XB jmp r9
  42a178:	(bad)  
  42a179:	iret   
  42a17a:	push   QWORD PTR [rsi+0x5c]
  42a17d:	rex.WB (bad) 
  42a17f:	(bad)  
  42a180:	sti    
  42a181:	cli    
  42a182:	(bad)  
  42a183:	(bad)  
  42a184:	sti    
  42a185:	cli    
  42a186:	(bad)  
  42a187:	(bad)  
  42a188:	sti    
  42a189:	cli    
  42a18a:	(bad)  
  42a18b:	(bad)  
  42a18c:	sti    
  42a18d:	cli    
  42a18e:	push   rbx
  42a190:	out    dx,eax
  42a191:	in     al,dx
  42a192:	(bad)  
  42a193:	jle    0x42a1fa
  42a195:	push   rbx
  42a196:	inc    DWORD PTR [rax]
	...
  42a1a0:	add    BYTE PTR [rax],al
  42a1a2:	add    BYTE PTR [rsi-0xb00a393],al
  42a1a8:	fcmovne st,st(7)
  42a1aa:	(bad)  
  42a1ab:	stc    
  42a1ac:	jmp    0x42a191
  42a1ae:	(bad)  
  42a1af:	clc    
  42a1b0:	out    0xe0,eax
  42a1b2:	push   rdi
  42a1b4:	in     al,0xdb
  42a1b6:	push   rsi
  42a1b8:	loope  0x42a191
  42a1ba:	push   rbp
  42a1bc:	(bad)  
  42a1be:	push   rsp
  42a1c0:	fcmovne st,st(7)
  42a1c2:	push   rsp
  42a1c4:	fmul   st,st(3)
  42a1c6:	push   rdx
  42a1c8:	(bad)  
  42a1c9:	(bad)  
  42a1ca:	push   rdx
  42a1cc:	rol    bl,cl
  42a1ce:	push   rax
  42a1d0:	iret   
  42a1d1:	sar    bh,0xf0
  42a1d4:	int3   
  42a1d5:	mov    esp,0x92a8d5ff
  42a1da:	jmp    QWORD PTR [rbx+0x49]
  42a1dd:	xor    eax,0x5f94ffff
  42a1e2:	(bad)  
  42a1e3:	stc    
  42a1e4:	(bad)  
  42a1e5:	pop    rcx
  42a1e6:	push   rdx
  42a1e8:	mov    DWORD PTR [rdi+rdi*8-0x17],edx
  42a1ec:	(bad)  
  42a1ed:	rex.WRXB (bad) 
  42a1ef:	fistp  QWORD PTR [rdx+rcx*2-0x1]
  42a1f3:	(bad)  
  42a1f4:	jbe    0x42a23d
  42a1f6:	jmp    rcx
  42a1f8:	(bad)  
  42a1f9:	iret   
  42a1fa:	(bad)  
  42a1fb:	jns    0x42a25d
  42a1fd:	rex.WRB push QWORD PTR [r9-0x54007667]
  42a204:	xchg   ebx,eax
  42a205:	(bad)  
  42a206:	jmp    QWORD PTR [rbp-0x5e008273]
  42a20c:	mov    BYTE PTR [rax-0x1],bh
  42a20f:	sahf   
  42a210:	test   BYTE PTR [rbx-0x1],dh
  42a213:	sub    DWORD PTR [rdx+0x58],0xffffffff
	...
  42a223:	xchg   BYTE PTR [rbp+0x5c],ch
  42a226:	push   rbp
  42a228:	fst    st(3)
  42a22a:	(bad)  
  42a22b:	cli    
  42a22c:	out    dx,al
  42a22d:	call   0xffffffffe52d9c31
  42a232:	(bad)  
  42a233:	clc    
  42a234:	call   0xffffffffe53aa219
  42a239:	fdiv   st(7),st
  42a23b:	mul    edx
  42a23d:	fdivr  st,st(7)
  42a23f:	neg    bh
  42a241:	(bad)  
  42a242:	push   rsp
  42a244:	fcmovne st,st(7)
  42a246:	push   rbx
  42a248:	fmul   st,st(3)
  42a24a:	push   rdx
  42a24c:	(bad)  
  42a24d:	enter  0xf1ff,0xd3
  42a251:	(bad)  
  42a252:	push   rcx
  42a254:	sar    BYTE PTR [rdi-0x6e582a01],1
  42a25a:	jmp    QWORD PTR [rbx+0x49]
  42a25d:	xor    eax,0x6599ffff
  42a262:	(bad)  
  42a263:	std    
  42a264:	xchg   esp,eax
  42a265:	pop    rdi
  42a266:	(bad)  
  42a267:	stc    
  42a268:	mov    ds,WORD PTR [rdx-0x1]
  42a26b:	icebp  
  42a26c:	mov    DWORD PTR [rdi+rdi*8-0x18],edx
  42a270:	or     DWORD PTR [rdi-0x1],0xffffffde
  42a274:	jl     0x42a2c2
  42a276:	jmp    rcx
  42a278:	(bad)  
  42a279:	iret   
  42a27a:	(bad)  
  42a27b:	jnp    0x42a2e0
  42a27d:	rex.WRXB push r8
  42a280:	xlat   BYTE PTR ds:[rbx]
  42a281:	retf   0xeaff
  42a284:	rol    ah,1
  42a286:	jmp    rsi
  42a288:	int3   
  42a289:	mov    ebp,0xbccae7ff
  42a28e:	call   rbp
  42a290:	mov    ah,0xa4
  42a292:	dec    DWORD PTR [rax+0xff5e70]
	...
  42a2a0:	add    BYTE PTR [rax],al
  42a2a2:	add    BYTE PTR [rsi-0xa00a393],al
  42a2a8:	loopne 0x42a280
  42a2aa:	(bad)  
  42a2ab:	sti    
  42a2ac:	icebp  
  42a2ad:	jmp    0x42a2ae
  42a2af:	out    0xd1,eax
  42a2b1:	sar    bh,0xa4
  42a2b4:	(bad)  
  42a2b5:	sub    bh,bh
  42a2b7:	out    0xd1,eax
  42a2b9:	sar    bh,0xf7
  42a2bc:	in     al,0xdc
  42a2be:	push   rsi
  42a2c0:	loope  0x42a29a
  42a2c2:	push   rsi
  42a2c4:	(bad)  
  42a2c6:	push   rbp
  42a2c8:	fmul   st(7),st
  42a2ca:	push   rsp
  42a2cc:	fxch   st(4)
  42a2ce:	push   rdx
  42a2d0:	(bad)  
  42a2d1:	enter  0xf1ff,0xd3
  42a2d5:	(bad)  
  42a2d6:	call   rsi
  42a2d8:	test   al,0x92
  42a2da:	jmp    QWORD PTR [rbx+0x49]
  42a2dd:	xor    eax,0x6495ebff
  42a2e2:	(bad)  
  42a2e3:	(bad)  
  42a2e4:	nop
  42a2e5:	pop    rsp
  42a2e6:	(bad)  
  42a2e7:	(bad)  
  42a2e8:	mov    edx,DWORD PTR [rsi-0x1]
  42a2eb:	(bad)  
  42a2ec:	xchg   BYTE PTR [rax-0x1],dl
  42a2ef:	call   0xffffffffe041ef75
  42a2f4:	jp     0x42a33c
  42a2f6:	jmp    rcx
  42a2f8:	(bad)  
  42a2f9:	iret   
  42a2fa:	inc    DWORD PTR [rcx-0x700a997]
  42a300:	out    0xdd,al
  42a302:	push   rsi
  42a304:	jrcxz  0x42a2e0
  42a306:	push   rsi
  42a308:	loopne 0x42a2e0
  42a30a:	push   rbp
  42a30c:	(bad)  
  42a30e:	call   rbp
  42a310:	mov    ah,0xa4
  42a312:	dec    DWORD PTR [rbp+0xff6374]
	...
  42a320:	add    BYTE PTR [rax],al
  42a322:	add    BYTE PTR [rsi-0x900a393],al
  42a328:	jrcxz  0x42a303
  42a32a:	(bad)  
  42a32b:	cld    
  42a32c:	repz lock jmp QWORD PTR [rax+riz*2-0x662300d6]
  42a335:	jmp    WORD PTR [rax+riz*2-0x170700d6]
  42a33d:	loopne 0x42a33e
  42a33f:	mov    ebp,0xb3ff9ca8
  42a344:	popf   
  42a345:	nop
  42a346:	jmp    FWORD PTR [rdx-0x68007b6d]
  42a34c:	jle    0x42a3bd
  42a34e:	dec    DWORD PTR [rbx-0xc009f8f]
  42a354:	(bad)  
  42a355:	enter  0xd7ff,0xaa
  42a359:	xchg   esp,eax
  42a35a:	jmp    QWORD PTR [rbx+0x49]
  42a35d:	xor    eax,0xdadfe7ff
  42a362:	jmp    rbp
  42a364:	fcmovbe st,st(5)
  42a366:	jmp    rdx
  42a368:	xlat   BYTE PTR ds:[rbx]
  42a369:	sar    edi,1
  42a36b:	(bad)  
  42a36d:	int3   
  42a36e:	(bad)  
  42a36f:	fst    st(0)
  42a371:	enter  0xdaff,0xcc
  42a375:	(bad)  
  42a378:	(bad)  
  42a379:	mov    esi,0x5a6c84ff
  42a37e:	(bad)  
  42a37f:	(bad)  
  42a380:	cli    
  42a381:	idiv   edi
  42a383:	(bad)  
  42a384:	stc    
  42a385:	idiv   bh
  42a387:	(bad)  
  42a388:	stc    
  42a389:	cmc    
  42a38a:	(bad)  
  42a38b:	(bad)  
  42a38c:	stc    
  42a38d:	cmc    
  42a38e:	(bad)  
  42a38f:	(bad)  
  42a390:	stc    
  42a391:	idiv   bh
  42a393:	xchg   ecx,eax
  42a394:	jp     0x42a3ff
  42a396:	inc    DWORD PTR [rax]
	...
  42a3a0:	add    BYTE PTR [rax],al
  42a3a2:	add    BYTE PTR [rsi-0x800a393],al
  42a3a8:	in     eax,0xdc
  42a3aa:	(bad)  
  42a3ab:	std    
  42a3ac:	div    bl
  42a3ae:	jmp    rdi
  42a3b0:	rol    eax,1
  42a3b2:	jmp    QWORD PTR [rax+riz*2-0x2e1800d6]
  42a3b9:	sar    bh,0xf9
  42a3bc:	jmp    0x42a3a3
  42a3be:	(bad)  
  42a3bf:	stc    
  42a3c0:	jmp    0xffffffffe73aa3a6
  42a3c5:	(bad)  
  42a3c7:	mul    edx
  42a3c9:	fcos   
  42a3cb:	cmc    
  42a3cc:	loopne 0x42a3a2
  42a3ce:	push   rsp
  42a3d0:	(bad)  
  42a3d2:	push   rsp
  42a3d4:	fxch   st(5)
  42a3d6:	(bad)  
  42a3d7:	fsubr  DWORD PTR [rax+rbx*4+0x354963ff]
  42a3de:	jmp    FWORD PTR [rbp-0x57007769]
  42a3e4:	xchg   edx,eax
  42a3e5:	(bad)  
  42a3e6:	jmp    QWORD PTR [rbx-0x61008273]
  42a3ec:	mov    BYTE PTR [rax-0x1],bh
  42a3ef:	(bad)  
  42a3f0:	xor    DWORD PTR [rdx-0x1],0xffffff96
  42a3f4:	jle    0x42a463
  42a3f6:	dec    DWORD PTR [rsp+rsi*2+0x7088ff62]
  42a3fd:	pop    rbp
  42a3fe:	(bad)  
  42a3ff:	mov    ebp,0xb9ff9aa8
  42a404:	movabs ds:0x9ab0ff909fb5ff96,eax
  42a40d:	mov    edi,edi
  42a40f:	lods   eax,DWORD PTR ds:[rsi]
  42a410:	xchg   esi,eax
  42a411:	xchg   edi,edi
  42a413:	xchg   edi,eax
  42a414:	jg     0x42a485
  42a416:	inc    DWORD PTR [rax]
	...
  42a420:	add    BYTE PTR [rax],al
  42a422:	add    BYTE PTR [rsi-0x700a393],al
  42a428:	out    0xdf,eax
  42a42a:	(bad)  
  42a42b:	std    
  42a42c:	stc    
  42a42d:	idiv   edi
  42a42f:	cld    
  42a430:	div    esp
  42a432:	(bad)  
  42a433:	cld    
  42a434:	hlt    
  42a435:	lock (bad) 
  42a437:	sti    
  42a438:	icebp  
  42a439:	in     al,dx
  42a43a:	(bad)  
  42a43b:	cli    
  42a43c:	out    dx,al
  42a43d:	jmp    0xffffffffe62e9e41
  42a442:	(bad)  
  42a443:	stc    
  42a444:	jmp    0xffffffffe63ba42a
  42a449:	(bad)  
  42a44b:	mul    edx
  42a44d:	fcos   
  42a44f:	neg    bh
  42a451:	(bad)  
  42a452:	push   rsp
  42a454:	fst    st(1)
  42a456:	(bad)  
  42a457:	fnstenv [rcx+0x4963ff9d]
  42a45d:	xor    eax,0xff
	...
  42a46a:	add    BYTE PTR [rbp-0x1006458],bh
  42a470:	sti    
  42a471:	cli    
  42a472:	(bad)  
  42a473:	stc    
  42a474:	loopne 0x42a44b
  42a476:	push   rdi
  42a478:	(bad)  
  42a47a:	push   rsi
  42a47c:	fcmovne st,st(5)
  42a47e:	push   rbp
  42a480:	fmul   st,st(1)
  42a482:	push   rbp
  42a484:	(bad)  
  42a485:	(bad)  
  42a486:	push   rbx
  42a488:	rol    cl,cl
  42a48a:	push   rbx
  42a48c:	sar    BYTE PTR [rdi-0x5b4b2a01],1
  42a492:	call   FWORD PTR [rbp+rax*4+0xff74]
	...
  42a4a1:	add    BYTE PTR [rax],al
  42a4a3:	xchg   BYTE PTR [rbp+0x5c],ch
  42a4a6:	(bad)  
  42a4a7:	clc    
  42a4a8:	jmp    0xfffffffffc41a48f
  42a4ad:	stc    
  42a4ae:	jmp    rdi
  42a4b0:	rol    eax,1
  42a4b2:	jmp    QWORD PTR [rax+riz*2-0x2e1800d6]
  42a4b9:	sar    bh,0xfb
  42a4bc:	icebp  
  42a4bd:	in     eax,dx
  42a4be:	(bad)  
  42a4bf:	cli    
  42a4c0:	out    dx,eax
  42a4c1:	jmp    0xffffffffe72f9ec5
  42a4c6:	(bad)  
  42a4c7:	stc    
  42a4c8:	jmp    0xffffffffe73aa4af
  42a4cd:	fdivp  st(7),st
  42a4cf:	mul    ebx
  42a4d1:	fcos   
  42a4d3:	mul    al
  42a4d5:	(bad)  
  42a4d6:	(bad)  
  42a4d7:	(bad)  [rbp+0x4963ffa2]
  42a4dd:	xor    eax,0xff
	...
  42a4ea:	add    al,al
  42a4ec:	lods   eax,DWORD PTR ds:[rsi]
  42a4ed:	lahf   
  42a4ee:	(bad)  
  42a4ef:	(bad)  
  42a4f0:	sti    
  42a4f1:	cli    
  42a4f2:	(bad)  
  42a4f3:	sti    
  42a4f4:	icebp  
  42a4f5:	in     eax,dx
  42a4f6:	(bad)  
  42a4f7:	cli    
  42a4f8:	in     al,dx
  42a4f9:	out    0xff,eax
  42a4fb:	clc    
  42a4fc:	out    0xe0,eax
  42a4fe:	push   rdi
  42a500:	jrcxz  0x42a4db
  42a502:	push   rbp
  42a504:	fst    st(1)
  42a506:	push   rbx
  42a508:	fmul   st,st(4)
  42a50a:	push   rdx
  42a50c:	rol    ebp,cl
  42a50e:	call   rbp
  42a510:	mov    ah,0xa4
  42a512:	jmp    QWORD PTR [rcx+0xff7b8a]
	...
  42a520:	add    BYTE PTR [rax],al
  42a522:	add    BYTE PTR [rdx-0x6009f8f],cl
  42a528:	jmp    0x42a510
  42a52a:	(bad)  
  42a52b:	(bad)  
  42a52c:	std    
  42a52d:	cld    
  42a52e:	jmp    QWORD PTR [rax+riz*2-0x662300d6]
  42a535:	jmp    WORD PTR [rax+riz*2-0xb0300d6]
  42a53d:	icebp  
  42a53e:	(bad)  
  42a53f:	mov    ebp,0xb3ff9ca8
  42a544:	popf   
  42a545:	nop
  42a546:	jmp    FWORD PTR [rdx-0x68007b6d]
  42a54c:	jle    0x42a5bd
  42a54e:	dec    DWORD PTR [rbx-0x9009f8f]
  42a554:	jrcxz  0x42a530
  42a556:	(bad)  
  42a557:	fidivr WORD PTR [rcx+0x4963ffa6]
  42a55d:	xor    eax,0xff
	...
  42a56a:	add    ah,al
  42a56c:	mov    al,0xa3
  42a56e:	(bad)  
  42a56f:	cld    
  42a570:	sti    
  42a571:	cli    
  42a572:	(bad)  
  42a573:	(bad)  
  42a574:	(bad)  
  42a575:	(bad)  
  42a576:	(bad)  
  42a577:	(bad)  
  42a578:	(bad)  
  42a579:	(bad)  
  42a57a:	(bad)  
  42a57b:	(bad)  
  42a57c:	(bad)  
  42a57d:	(bad)  
  42a57e:	(bad)  
  42a57f:	(bad)  
  42a580:	(bad)  
  42a581:	std    
  42a582:	(bad)  
  42a583:	(bad)  
  42a584:	cld    
  42a585:	cli    
  42a586:	(bad)  
  42a587:	(bad)  
  42a588:	stc    
  42a589:	idiv   bh
  42a58b:	(bad)  
  42a58c:	stc    
  42a58d:	cmc    
  42a58e:	(bad)  
  42a58f:	push   rsp
  42a591:	out    dx,eax
  42a592:	jmp    QWORD PTR [rsi+0xff8090]
	...
  42a5a0:	add    BYTE PTR [rax],al
  42a5a2:	add    BYTE PTR [rsi-0x5009989],cl
  42a5a8:	out    dx,al
  42a5a9:	jmp    0x42a5ad
  42a5ae:	jmp    rdi
  42a5b0:	rol    eax,1
  42a5b2:	jmp    QWORD PTR [rax+riz*2-0x2e1800d6]
  42a5b9:	sar    bh,0xfd
  42a5bc:	clc    
  42a5bd:	cmc    
  42a5be:	(bad)  
  42a5bf:	cld    
  42a5c0:	hlt    
  42a5c1:	repnz (bad) 
  42a5c3:	sti    
  42a5c4:	repnz out dx,al
  42a5c6:	(bad)  
  42a5c7:	cli    
  42a5c8:	out    dx,eax
  42a5c9:	jmp    0x42a5ca
  42a5cb:	cli    
  42a5cc:	in     eax,dx
  42a5cd:	out    0xff,eax
  42a5cf:	stc    
  42a5d0:	(bad)  
  42a5d1:	jrcxz  0x42a5d2
  42a5d3:	clc    
  42a5d4:	out    0xde,al
  42a5d6:	jmp    rax
  42a5d8:	mov    ebp,0x4963ffac
  42a5dd:	xor    eax,0xff
	...
  42a5ea:	add    bh,al
  42a5ec:	mov    bl,0xa6
  42a5ee:	inc    ebp
  42a5f0:	mov    dl,0xa4
  42a5f2:	inc    ebx
  42a5f4:	scas   eax,DWORD PTR es:[rdi]
  42a5f5:	movabs eax,ds:0x9ca9beff9facc0ff
  42a5fe:	(bad)  
  42a5ff:	mov    ebx,0xb8ff98a7
  42a604:	movabs ds:0x9db2ff919fb4ff95,eax
  42a60d:	mov    ?,edi
  42a60f:	scas   al,BYTE PTR es:[rdi]
  42a610:	cdq    
  42a611:	mov    edi,edi
  42a613:	stos   DWORD PTR es:[rdi],eax
  42a614:	xchg   ebp,eax
  42a615:	xchg   bh,bh
	...
  42a623:	xchg   ebp,eax
  42a624:	jge    0x42a692
  42a626:	(bad)  
  42a627:	cli    
  42a628:	lock jmp 0x42a62a
  42a62b:	(bad)  
  42a62c:	(bad)  
  42a62d:	(bad)  
  42a62e:	(bad)  
  42a62f:	(bad)  
  42a630:	(bad)  
  42a631:	(bad)  
  42a632:	(bad)  
  42a633:	(bad)  
  42a634:	std    
  42a635:	cld    
  42a636:	(bad)  
  42a637:	(bad)  
  42a638:	cld    
  42a639:	cli    
  42a63a:	(bad)  
  42a63b:	(bad)  
  42a63c:	cli    
  42a63d:	clc    
  42a63e:	(bad)  
  42a63f:	cld    
  42a640:	clc    
  42a641:	cmc    
  42a642:	(bad)  
  42a643:	cld    
  42a644:	hlt    
  42a645:	icebp  
  42a646:	(bad)  
  42a647:	sti    
  42a648:	repz out dx,al
  42a64a:	(bad)  
  42a64b:	cli    
  42a64c:	out    dx,eax
  42a64d:	(bad)  
  42a64e:	(bad)  
  42a64f:	cli    
  42a650:	in     eax,dx
  42a651:	out    0xff,al
  42a653:	stc    
  42a654:	jmp    0xffffffffc323a63b
  42a659:	mov    dl,0xff
  42a65b:	movsxd ecx,DWORD PTR [rcx+0x35]
  42a65e:	inc    DWORD PTR [rax]
	...
  42a6a0:	add    BYTE PTR [rax],al
  42a6a2:	add    BYTE PTR [rbx-0x4008b7c],bl
  42a6a8:	repnz out dx,eax
  42a6aa:	(bad)  
  42a6ab:	(bad)  
  42a6ac:	(bad)  
  42a6ad:	(bad)  
  42a6ae:	jmp    rdi
  42a6b0:	rol    eax,1
  42a6b2:	jmp    QWORD PTR [rax+riz*2-0x2e1800d6]
  42a6b9:	sar    bh,0xfe
  42a6bc:	cld    
  42a6bd:	sti    
  42a6be:	(bad)  
  42a6bf:	std    
  42a6c0:	stc    
  42a6c1:	clc    
  42a6c2:	(bad)  
  42a6c3:	std    
  42a6c4:	div    ebp
  42a6c6:	(bad)  
  42a6c7:	std    
  42a6c8:	cmc    
  42a6c9:	icebp  
  42a6ca:	(bad)  
  42a6cb:	sti    
  42a6cc:	repz out dx,eax
  42a6ce:	(bad)  
  42a6cf:	cli    
  42a6d0:	lock jmp 0x42a6d2
  42a6d3:	stc    
  42a6d4:	in     eax,dx
  42a6d5:	out    0xff,eax
  42a6d7:	jrcxz  0x42a69f
  42a6d9:	mov    bh,0xff
  42a6db:	movsxd ecx,DWORD PTR [rcx+0x35]
  42a6de:	inc    DWORD PTR [rax]
	...
  42a720:	add    BYTE PTR [rax],al
  42a722:	add    BYTE PTR [rdx-0x3008374],ah
  42a728:	cmc    
  42a729:	icebp  
  42a72a:	(bad)  
  42a72b:	(bad)  
  42a72c:	(bad)  
  42a72d:	(bad)  
  42a72e:	jmp    QWORD PTR [rax+riz*2-0x662300d6]
  42a735:	jmp    WORD PTR [rax+riz*2-0x10100d6]
  42a73d:	std    
  42a73e:	(bad)  
  42a73f:	mov    ebp,0xb3ff9ca8
  42a744:	popf   
  42a745:	nop
  42a746:	jmp    FWORD PTR [rdx-0x68007b6d]
  42a74c:	jle    0x42a7bd
  42a74e:	dec    DWORD PTR [rbx-0x5009f8f]
  42a754:	lock jmp 0x42a756
  42a757:	in     eax,0xcb
  42a759:	mov    esp,0x354963ff
  42a75e:	inc    DWORD PTR [rax]
	...
  42a7a0:	add    BYTE PTR [rax],al
  42a7a2:	add    BYTE PTR [rcx-0x3007b6c],ch
  42a7a8:	div    bl
  42a7aa:	(bad)  
  42a7ab:	(bad)  
  42a7ac:	(bad)  
  42a7ad:	(bad)  
  42a7ae:	jmp    rdi
  42a7b0:	rol    eax,1
  42a7b2:	jmp    QWORD PTR [rax+riz*2-0x2e1800d6]
  42a7b9:	sar    bh,0xff
  42a7bc:	(bad)  
  42a7bd:	(bad)  
  42a7be:	(bad)  
  42a7bf:	(bad)  
  42a7c0:	(bad)  
  42a7c1:	std    
  42a7c2:	(bad)  
  42a7c3:	(bad)  
  42a7c4:	cld    
  42a7c5:	cld    
  42a7c6:	(bad)  
  42a7c7:	(bad)  
  42a7c8:	cli    
  42a7c9:	stc    
  42a7ca:	(bad)  
  42a7cb:	cld    
  42a7cc:	clc    
  42a7cd:	cmc    
  42a7ce:	(bad)  
  42a7cf:	cld    
  42a7d0:	cmc    
  42a7d1:	repz (bad) 
  42a7d3:	sti    
  42a7d4:	hlt    
  42a7d5:	out    dx,eax
  42a7d6:	jmp    rdi
  42a7d8:	iret   
  42a7d9:	ret    0x63ff
  42a7dc:	rex.WB xor rax,0xff
	...
  42a822:	add    BYTE PTR [rcx-0x3007464],dh
  42a828:	clc    
  42a829:	cmc    
  42a82a:	(bad)  
  42a82b:	(bad)  
  42a82c:	(bad)  
  42a82d:	(bad)  
  42a82e:	(bad)  
  42a82f:	(bad)  
  42a830:	(bad)  
  42a831:	(bad)  
  42a832:	(bad)  
  42a833:	(bad)  
  42a834:	(bad)  
  42a835:	(bad)  
  42a836:	(bad)  
  42a837:	(bad)  
  42a838:	(bad)  
  42a839:	(bad)  
  42a83a:	(bad)  
  42a83b:	(bad)  
  42a83c:	(bad)  
  42a83d:	(bad)  
  42a83e:	(bad)  
  42a83f:	(bad)  
  42a840:	(bad)  
  42a841:	(bad)  
  42a842:	(bad)  
  42a843:	(bad)  
  42a844:	(bad)  
  42a845:	std    
  42a846:	(bad)  
  42a847:	(bad)  
  42a848:	cld    
  42a849:	sti    
  42a84a:	(bad)  
  42a84b:	(bad)  
  42a84c:	sti    
  42a84d:	stc    
  42a84e:	(bad)  
  42a84f:	fcmove st,st(3)
  42a851:	ret    
  42a852:	push   QWORD PTR [rdx-0x53007366]
  42a858:	xchg   ebx,eax
  42a859:	cmp    edi,0x63
  42a85c:	rex.WB xor rax,0xff
	...
  42a8a2:	add    BYTE PTR [rsi-0x2006d5d],dh
  42a8a8:	cli    
  42a8a9:	clc    
  42a8aa:	(bad)  
  42a8ab:	(bad)  
  42a8ac:	(bad)  
  42a8ad:	(bad)  
  42a8ae:	(bad)  
  42a8af:	(bad)  
  42a8b0:	(bad)  
  42a8b1:	(bad)  
  42a8b2:	(bad)  
  42a8b3:	(bad)  
  42a8b4:	(bad)  
  42a8b5:	(bad)  
  42a8b6:	(bad)  
  42a8b7:	(bad)  
  42a8b8:	(bad)  
  42a8b9:	(bad)  
  42a8ba:	(bad)  
  42a8bb:	(bad)  
  42a8bc:	(bad)  
  42a8bd:	(bad)  
  42a8be:	(bad)  
  42a8bf:	(bad)  
  42a8c0:	(bad)  
  42a8c1:	(bad)  
  42a8c2:	(bad)  
  42a8c3:	(bad)  
  42a8c4:	(bad)  
  42a8c5:	(bad)  
  42a8c6:	(bad)  
  42a8c7:	(bad)  
  42a8c8:	(bad)  
  42a8c9:	(bad)  
  42a8ca:	(bad)  
  42a8cb:	(bad)  
  42a8cc:	std    
  42a8cd:	sti    
  42a8ce:	jmp    QWORD PTR [rdx+0x6cff7c8c]
  42a8d4:	push   rcx
  42a8d5:	cmp    eax,0x3d516cff
  42a8da:	jmp    QWORD PTR [rbx+0x49]
  42a8dd:	xor    eax,0xff
	...
  42a922:	add    BYTE PTR [rbx-0x1006758],bh
  42a928:	sti    
  42a929:	cli    
  42a92a:	(bad)  
  42a92b:	(bad)  
  42a92c:	(bad)  
  42a92d:	(bad)  
  42a92e:	(bad)  
  42a92f:	(bad)  
  42a930:	(bad)  
  42a931:	(bad)  
  42a932:	(bad)  
  42a933:	(bad)  
  42a934:	(bad)  
  42a935:	(bad)  
  42a936:	(bad)  
  42a937:	(bad)  
  42a938:	(bad)  
  42a939:	(bad)  
  42a93a:	(bad)  
  42a93b:	(bad)  
  42a93c:	(bad)  
  42a93d:	(bad)  
  42a93e:	(bad)  
  42a93f:	(bad)  
  42a940:	(bad)  
  42a941:	(bad)  
  42a942:	(bad)  
  42a943:	(bad)  
  42a944:	(bad)  
  42a945:	(bad)  
  42a946:	(bad)  
  42a947:	(bad)  
  42a948:	(bad)  
  42a949:	(bad)  
  42a94a:	(bad)  
  42a94b:	(bad)  
  42a94c:	(bad)  
  42a94d:	(bad)  
  42a94e:	jmp    QWORD PTR [rdx-0x18008374]
  42a954:	(bad)  
  42a956:	dec    DWORD PTR [rax+0xff5d70]
	...
  42a9a0:	add    BYTE PTR [rax],al
  42a9a2:	add    BYTE PTR [rdi-0x1006354],bh
  42a9a8:	std    
  42a9a9:	cld    
  42a9aa:	(bad)  
  42a9ab:	(bad)  
  42a9ac:	cld    
  42a9ad:	sti    
  42a9ae:	(bad)  
  42a9af:	(bad)  
  42a9b0:	sti    
  42a9b1:	cli    
  42a9b2:	(bad)  
  42a9b3:	(bad)  
  42a9b4:	cli    
  42a9b5:	clc    
  42a9b6:	(bad)  
  42a9b7:	std    
  42a9b8:	stc    
  42a9b9:	idiv   edi
  42a9bb:	(bad)  
  42a9bc:	stc    
  42a9bd:	idiv   bh
  42a9bf:	std    
  42a9c0:	div    esi
  42a9c2:	(bad)  
  42a9c3:	std    
  42a9c4:	div    esp
  42a9c6:	(bad)  
  42a9c7:	cld    
  42a9c8:	div    dl
  42a9ca:	(bad)  
  42a9cb:	cld    
  42a9cc:	hlt    
  42a9cd:	icebp  
  42a9ce:	jmp    QWORD PTR [rdx-0x77008374]
  42a9d4:	jo     0x42aa33
  42a9d6:	inc    DWORD PTR [rax]
	...
  42aa20:	add    BYTE PTR [rax],al
  42aa22:	add    BYTE PTR [rdi-0x40006354],bh
  42aa28:	lods   al,BYTE PTR ds:[rsi]
  42aa29:	pushf  
  42aa2a:	(bad)  
  42aa2b:	mov    ebx,0xb6ff98a8
  42aa30:	movabs ds:0x94a9ff8b9bb0ff92,al
  42aa39:	test   bh,bh
  42aa3b:	movabs ds:0x95ff74849bff7c8d,al
  42aa44:	jge    0x42aab3
  42aa46:	dec    DWORD PTR [rdi-0x75009a8a]
  42aa4c:	jno    0x42aaae
  42aa4e:	inc    DWORD PTR [rsi+0xff5c6d]
	...
  42aa98:	add    BYTE PTR [rax],al
  42aa9a:	add    bh,bh
  42aa9c:	rol    BYTE PTR [rbx],0xff
  42aa9f:	inc    eax
  42aaa1:	add    edi,edi
  42aaa3:	push   rax
  42aaa5:	ud0    edi,edi
  42aaa8:	clc    
  42aaa9:	adc    BYTE PTR [rcx],al
  42aaab:	inc    BYTE PTR [rax]
  42aaad:	add    BYTE PTR [rcx],al
  42aaaf:	inc    BYTE PTR [rax]
  42aab1:	add    BYTE PTR [rcx],al
  42aab3:	inc    BYTE PTR [rax]
  42aab5:	add    BYTE PTR [rcx],al
  42aab7:	inc    BYTE PTR [rax]
  42aab9:	add    BYTE PTR [rcx],al
  42aabb:	inc    BYTE PTR [rax]
  42aabd:	add    BYTE PTR [rcx],al
  42aabf:	inc    BYTE PTR [rax]
  42aac1:	add    BYTE PTR [rcx],al
  42aac3:	inc    BYTE PTR [rax]
  42aac5:	add    BYTE PTR [rcx],al
  42aac7:	inc    BYTE PTR [rax]
  42aac9:	add    BYTE PTR [rcx],al
  42aacb:	rol    BYTE PTR [rax],0x0
  42aace:	add    eax,eax
  42aad0:	add    BYTE PTR [rax],al
  42aad2:	add    eax,eax
  42aad4:	add    BYTE PTR [rax],al
  42aad6:	add    eax,eax
  42aad8:	add    BYTE PTR [rax],al
  42aada:	add    eax,eax
  42aadc:	add    BYTE PTR [rax],al
  42aade:	add    eax,eax
  42aae0:	add    BYTE PTR [rax],al
  42aae2:	add    eax,eax
  42aae4:	add    BYTE PTR [rax],al
  42aae6:	add    eax,eax
  42aae8:	add    BYTE PTR [rax+0x1],dh
  42aaeb:	rol    BYTE PTR [rax],0x70
  42aaee:	add    eax,eax
  42aaf0:	add    BYTE PTR [rax+0x1],dh
  42aaf3:	rol    BYTE PTR [rax],0x70
  42aaf6:	add    eax,eax
  42aaf8:	add    BYTE PTR [rdi-0x1],bh
  42aafb:	rol    BYTE PTR [rax],0x7f
  42aafe:	inc    eax
  42ab00:	add    BYTE PTR [rdi-0x1],bh
  42ab03:	rol    BYTE PTR [rax],0x7f
  42ab06:	inc    eax
  42ab08:	add    BYTE PTR [rdi-0x1],bh
  42ab0b:	rol    BYTE PTR [rax],0x7f
  42ab0e:	inc    eax
  42ab10:	add    bh,bh
  42ab12:	inc    eax
  42ab14:	add    edi,edi
  42ab16:	inc    eax
  42ab18:	add    edi,edi
  42ab1a:	jmp    FWORD PTR [rax]
  42ab1c:	add    BYTE PTR [rax],al
  42ab1e:	add    BYTE PTR [rax],dl
  42ab20:	add    BYTE PTR [rax],al
  42ab22:	add    BYTE PTR [rax],ah
  42ab24:	add    BYTE PTR [rax],al
  42ab26:	add    BYTE PTR [rcx],al
  42ab28:	add    BYTE PTR [rax],ah
  42ab2a:	add    BYTE PTR [rax],al
  42ab2c:	add    BYTE PTR [rax],al
  42ab2e:	add    BYTE PTR [rax+0x4],al
	...
  42ab45:	add    BYTE PTR [rax],al
  42ab47:	leave  
  42ab48:	mov    edi,0xb4c4ffb7
  42ab4d:	stos   BYTE PTR es:[rdi],al
  42ab4e:	inc    esp
  42ab50:	mov    ah,0xaa
  42ab52:	(bad)  
  42ab53:	mov    edi,0xb6ffa3ae
  42ab58:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  42ab59:	cdq    
  42ab5a:	jmp    FWORD PTR [rbx+rbx*4-0x6f5d0073]
  42ab61:	cmp    edi,0xff758598
  42ab67:	nop
  42ab68:	jge    0x42abd5
  42ab6a:	call   QWORD PTR [rax+0xff6b7d]
	...
  42ab88:	add    BYTE PTR [rax],al
  42ab8a:	add    cl,cl
  42ab8c:	mov    edi,0xbfc9ffb7
  42ab91:	mov    bh,0xff
  42ab93:	fcompp 
  42ab95:	(bad)  
  42ab97:	fmul   st(7),st
  42ab99:	enter  0xc9ff,0xb5
  42ab9d:	stos   BYTE PTR es:[rdi],al
  42ab9e:	jmp    FWORD PTR [rax-0x7500756a]
  42aba4:	jbe    0x42ac0a
  42aba6:	call   QWORD PTR [rax+0xff6b7d]
	...
  42abd0:	add    BYTE PTR [rax],al
  42abd2:	add    BYTE PTR [rdx-0x6b007266],ch
  42abd8:	xor    BYTE PTR [rcx-0x1],0x86
  42abdc:	outs   dx,DWORD PTR ds:[rsi]
  42abdd:	pop    rsi
  42abde:	push   QWORD PTR [rsp+rbx*2+0x48]
  42abe2:	push   QWORD PTR [rax-0x5200806b]
  42abe8:	nop
  42abe9:	jnp    0x42abea
  42abeb:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  42abec:	mov    DWORD PTR [rbx-0x1],esi
  42abef:	movabs ds:0x9dff6b83a0ff7086,al
  42abf8:	sub    BYTE PTR [rcx-0x1],0x9c
  42abfc:	jg     0x42ac66
  42abfe:	call   FWORD PTR [rdi+rdi*2-0x765f0098]
  42ac05:	jns    0x42ac06
  42ac07:	cwde   
  42ac08:	xor    DWORD PTR [rax-0x1],0xff677991
  42ac0f:	(bad)  
  42ac10:	imul   edx,DWORD PTR [rsi-0x1],0xff4e617a
  42ac17:	je     0x42ac73
  42ac19:	rex.RX jmp FWORD PTR [rdi+0x54]
  42ac1d:	rex jmp FWORD PTR [rcx+0x4e]
  42ac21:	cmp    bh,bh
  42ac23:	gs rex.WX xor rax,0x334863ff
  42ac2a:	jmp    QWORD PTR [rbx+0x48]
  42ac2d:	xor    edi,edi
  42ac2f:	movsxd ecx,DWORD PTR [rax+0x33]
  42ac32:	inc    esi
  42ac34:	movabs ds:0xa2c6ff90a2c6ff90,al
  42ac3d:	nop
  42ac3e:	jmp    QWORD PTR [rbp+0x4b]
  42ac41:	(bad)  
  42ac42:	jmp    QWORD PTR [rsi-0x13008070]
  42ac48:	out    0xe1,al
  42ac4a:	jmp    rdx
  42ac4c:	jrcxz  0x42ac35
  42ac4e:	(bad)  
  42ac4f:	(bad)  
  42ac51:	loopne 0x42ac52
  42ac53:	(bad)  
  42ac55:	fdivp  st(7),st
  42ac57:	fcompp 
  42ac59:	(bad)  
  42ac5b:	fst    st(6)
  42ac5d:	(bad)  
  42ac5e:	(bad)  
  42ac5f:	fst    st(3)
  42ac61:	sar    edi,cl
  42ac63:	or     al,0xff
  42ac65:	add    bh,bh
  42ac67:	(bad)  
  42ac68:	popf   
  42ac69:	add    bh,bh
  42ac6b:	(bad)
  42ac6e:	jmp    QWORD PTR [rbx+0x48]
  42ac71:	xor    edi,edi
  42ac73:	or     al,0xff
  42ac75:	add    bh,bh
  42ac77:	cs fwait
  42ac79:	add    bh,bh
  42ac7b:	enter  0x98a8,0xff
  42ac7f:	imul   ecx,DWORD PTR [rsi+0x3a],0x8595abff
  42ac86:	(bad)  
  42ac87:	out    dx,eax
  42ac88:	call   0xffffffffa020ac72
  42ac8d:	jl     0x42ac8e
  42ac8f:	call   FWORD PTR [rbp-0x6c020097]
  42ac95:	pop    rbp
  42ac96:	(bad)  
  42ac97:	out    dx,al
  42ac98:	xchg   BYTE PTR [rbx-0x1],dl
  42ac9b:	fstp   TBYTE PTR [rax+0x49]
  42ac9e:	inc    esi
  42aca0:	ins    BYTE PTR es:[rdi],dx
  42aca1:	rex push QWORD PTR [rdx-0x5900c6a0]
  42aca8:	pop    rax
  42aca9:	xor    edi,edi
  42acab:	fcmovb st,st(4)
  42acad:	mov    esp,0x334863ff
  42acb2:	push   rsp
  42acb4:	fcmove st,st(5)
  42acb6:	push   rbx
  42acb8:	fmul   st,st(4)
  42acba:	dec    eax
  42acbc:	stos   DWORD PTR es:[rdi],eax
  42acbd:	fwait
  42acbe:	jmp    FWORD PTR [rsi+0x53]
  42acc1:	(bad)  
  42acc2:	push   QWORD PTR [rcx+0x57]
  42acc5:	rex.R jmp FWORD PTR [rcx+rdx*2+0x3d]
  42acca:	jmp    FWORD PTR [rcx+rdx*2+0x3d]
  42acce:	jmp    FWORD PTR [rcx+rdx*2+0x3d]
  42acd2:	jmp    FWORD PTR [rcx+rdx*2+0x3d]
  42acd6:	jmp    FWORD PTR [rcx+rdx*2+0x3d]
  42acda:	jmp    FWORD PTR [rcx+rdx*2+0x3d]
  42acde:	jmp    FWORD PTR [rcx+rdx*2+0x3d]
  42ace2:	inc    ebp
  42ace4:	ins    BYTE PTR es:[rdi],dx
  42ace5:	rex push QWORD PTR [rdx-0x2e00c6a0]
  42acec:	mov    ecx,0x4863ffae
  42acf1:	xor    edi,edi
  42acf3:	cmc    
  42acf4:	(bad)  
  42acf6:	push   rbp
  42acf8:	(bad)  
  42acfa:	dec    ecx
  42acfc:	scas   al,BYTE PTR es:[rdi]
  42acfd:	movabs al,ds:0x66778fff445872ff
  42ad06:	(bad)  
  42ad07:	stc    
  42ad08:	in     al,0xda
  42ad0a:	(bad)  
  42ad0b:	out    dx,eax
  42ad0c:	(bad)  
  42ad0d:	leave  
  42ad0e:	(bad)  
  42ad0f:	out    dx,eax
  42ad10:	(bad)  
  42ad11:	leave  
  42ad12:	(bad)  
  42ad13:	out    dx,eax
  42ad14:	(bad)  
  42ad15:	leave  
  42ad16:	(bad)  
  42ad17:	out    dx,eax
  42ad18:	(bad)  
  42ad19:	leave  
  42ad1a:	jmp    rsp
  42ad1c:	(bad)  
  42ad1d:	mov    ch,0xff
  42ad1f:	ins    BYTE PTR es:[rdi],dx
  42ad20:	push   rcx
  42ad21:	cmp    eax,0x4879dbff
  42ad26:	inc    esi
  42ad28:	imul   eax,DWORD PTR [rax-0x1],0xffffffd3
  42ad2c:	mov    ebx,0x4863ffb1
  42ad31:	xor    edi,edi
  42ad33:	mul    cl
  42ad35:	xlat   BYTE PTR ds:[rbx]
  42ad36:	push   rsi
  42ad38:	loopne 0x42ad0f
  42ad3a:	dec    edx
  42ad3c:	mov    al,0xa3
  42ad3e:	push   QWORD PTR [rdi+0x5d]
  42ad41:	rex.WX call QWORD PTR [rdi-0x4009080]
  42ad48:	repz out dx,eax
  42ad4a:	jmp    QWORD PTR [rax+riz*2-0x180700d6]
  42ad51:	(bad)  
  42ad53:	xchg   edi,eax
  42ad54:	jle    0x42adc5
  42ad56:	call   QWORD PTR [rdi-0x1b009082]
  42ad5c:	(bad)  
  42ad5d:	mov    ch,0xff
  42ad5f:	ins    BYTE PTR es:[rdi],dx
  42ad60:	push   rcx
  42ad61:	cmp    eax,0x5287eeff
  42ad66:	(bad)  
  42ad67:	fidivr DWORD PTR [rcx+0x49]
  42ad6a:	call   rsp
  42ad6c:	mov    esp,0x4963ffb1
  42ad71:	xor    al,0xff
  42ad73:	(bad)  
  42ad74:	(bad)  
  42ad75:	(bad)  
  42ad76:	(bad)  
  42ad77:	(bad)  
  42ad78:	(bad)  
  42ad79:	(bad)  
  42ad7a:	push   rbx
  42ad7c:	out    dx,eax
  42ad7d:	in     al,dx
  42ad7e:	(bad)  
  42ad7f:	jl     0x42ade4
  42ad81:	push   rax
  42ad82:	call   FWORD PTR [rdi-0x2008777]
  42ad88:	clc    
  42ad89:	cmc    
  42ad8a:	(bad)  
  42ad8b:	sti    
  42ad8c:	repz out dx,al
  42ad8e:	(bad)  
  42ad8f:	stc    
  42ad90:	in     eax,dx
  42ad91:	call   0xffffffffe02aa695
  42ad96:	push   rsi
  42ad98:	loope  0x42ad71
  42ad9a:	jmp    rsp
  42ad9c:	(bad)  
  42ad9d:	mov    eax,0x3d516cff
  42ada2:	(bad)  
  42ada3:	cld    
  42ada4:	xchg   ebx,eax
  42ada5:	pop    rbp
  42ada6:	(bad)  
  42ada7:	out    dx,al
  42ada8:	xchg   DWORD PTR [rbx-0x1],edx
  42adab:	xlat   BYTE PTR ds:[rbx]
  42adac:	mov    esi,0x4c66ffb2
  42adb1:	call   FWORD PTR ss:[rdi-0x67008677]
  42adb8:	xor    DWORD PTR [rax-0x1],0xff697a91
  42adbf:	sub    DWORD PTR [rcx+0x56],0x8192a7ff
  42adc6:	(bad)  
  42adc7:	(bad)  
  42adc8:	cld    
  42adc9:	sti    
  42adca:	jmp    QWORD PTR [rax+riz*2-0xc0400d6]
  42add1:	out    dx,eax
  42add2:	call   QWORD PTR [rdi-0x68009082]
  42add8:	jle    0x42ae49
  42adda:	jmp    rbp
  42addc:	enter  0xffba,0x6c
  42ade0:	push   rcx
  42ade1:	cmp    eax,0x7298daff
  42ade6:	(bad)  
  42ade7:	fcom   DWORD PTR [rcx-0x40230097]
  42aded:	mov    bl,0xff
  42adef:	ins    DWORD PTR es:[rdi],dx
  42adf0:	push   rbx
  42adf1:	(bad)  
  42adf2:	(bad)  
  42adf3:	stc    
  42adf4:	in     al,dx
  42adf5:	out    0xff,al
  42adf7:	stc    
  42adf8:	jmp    0x42adde
  42adfa:	dec    ebp
  42adfc:	mov    ecx,0x6f87ffae
  42ae01:	pop    rbp
  42ae02:	jmp    FWORD PTR [rdi-0x7467]
  42ae08:	(bad)  
  42ae09:	(bad)  
  42ae0a:	(bad)  
  42ae0b:	(bad)  
  42ae0c:	cld    
  42ae0d:	sti    
  42ae0e:	(bad)  
  42ae0f:	std    
  42ae10:	clc    
  42ae11:	cmc    
  42ae12:	(bad)  
  42ae13:	sti    
  42ae14:	repz out dx,eax
  42ae16:	(bad)  
  42ae17:	cli    
  42ae18:	in     eax,dx
  42ae19:	call   0xffffffffbe0e941d
  42ae1e:	jmp    FWORD PTR [rcx+rdx*2+0x3d]
  42ae22:	jmp    rdi
  42ae24:	fcompp 
  42ae26:	jmp    rsp
  42ae28:	(bad)  
  42ae2a:	(bad)  
  42ae2b:	(bad)  
  42ae2d:	retf   0x71ff
  42ae30:	push   rdi
  42ae31:	rex.R (bad) 
  42ae33:	(bad)  
  42ae34:	(bad)  
  42ae35:	(bad)  
  42ae36:	(bad)  
  42ae37:	(bad)  
  42ae38:	(bad)  
  42ae39:	(bad)  
  42ae3a:	push   rbx
  42ae3c:	out    dx,eax
  42ae3d:	in     al,dx
  42ae3e:	dec    DWORD PTR [rsi-0x49009b8a]
  42ae44:	movabs eax,ds:0x60a4ffffffffff93
  42ae4d:	sub    bh,bh
  42ae4f:	(bad)  
  42ae50:	cld    
  42ae51:	sti    
  42ae52:	call   QWORD PTR [rdi-0x68009082]
  42ae58:	jle    0x42aec9
  42ae5a:	(bad)  
  42ae5b:	jmp    0x6d427231
  42ae60:	push   rcx
  42ae61:	cmp    eax,0x6a7b93ff
  42ae66:	dec    DWORD PTR [rbx+0x7cff6173]
  42ae6c:	movsxd edx,DWORD PTR [rax-0x1]
  42ae6f:	jbe    0x42aecd
  42ae71:	rex.WB jmp FWORD PTR [r14-0x59007567]
  42ae78:	xchg   ecx,eax
  42ae79:	cmp    edi,0xff78889f
  42ae7f:	xchg   esp,eax
  42ae80:	jl     0x42aeec
  42ae82:	(bad)  
  42ae83:	mov    esp,0xffff9aa9
  42ae88:	(bad)  
  42ae89:	(bad)  
  42ae8a:	(bad)  
  42ae8b:	(bad)  
  42ae8c:	(bad)  
  42ae8d:	(bad)  
  42ae8e:	(bad)  
  42ae8f:	(bad)  
  42ae90:	(bad)  
  42ae91:	(bad)  
  42ae92:	(bad)  
  42ae93:	(bad)  
  42ae94:	cld    
  42ae95:	sti    
  42ae96:	jmp    QWORD PTR [rdx+0x6cff7c8c]
  42ae9c:	push   rcx
  42ae9d:	cmp    eax,0x3d516cff
  42aea2:	(bad)  
  42aea3:	mov    ebx,0xffff97a6
  42aea8:	(bad)  
  42aea9:	(bad)  
  42aeaa:	(bad)  
  42aeab:	stc    
  42aeac:	jmp    0x42ae93
  42aeae:	(bad)  
  42aeaf:	clc    
  42aeb0:	in     eax,0xdc
  42aeb2:	push   rbp
  42aeb4:	(bad)  
  42aeb6:	push   rbx
  42aeb8:	xlat   BYTE PTR ds:[rbx]
  42aeb9:	retf   
  42aeba:	call   rbp
  42aebc:	mov    ah,0xa4
  42aebe:	call   FWORD PTR [rdx-0x3d008d7d]
  42aec4:	scas   al,BYTE PTR es:[rdi]
  42aec5:	movabs eax,ds:0xffffffffffffffff
  42aece:	(bad)  
  42aecf:	(bad)  
  42aed0:	(bad)  
  42aed1:	(bad)  
  42aed2:	(bad)  
  42aed3:	(bad)  
  42aed4:	(bad)  
  42aed5:	(bad)  
  42aed6:	jmp    QWORD PTR [rdx-0x53008374]
  42aedc:	(bad)  
  42aedd:	mov    edi,?
  42aedf:	add    BYTE PTR [rax],al
  42aee1:	add    BYTE PTR [rax],al
  42aee3:	ret    
  42aee4:	scas   eax,DWORD PTR es:[rdi]
  42aee5:	movabs ds:0xfffffffffcfcfcff,al
  42aeee:	(bad)  
  42aeef:	(bad)  
  42aef0:	(bad)  
  42aef1:	(bad)  
  42aef2:	(bad)  
  42aef3:	(bad)  
  42aef4:	(bad)  
  42aef5:	(bad)  
  42aef6:	(bad)  
  42aef7:	(bad)  
  42aef8:	(bad)  
  42aef9:	(bad)  
  42aefa:	push   rbx
  42aefc:	out    dx,eax
  42aefd:	in     al,dx
  42aefe:	jmp    QWORD PTR [rsi-0x38007f70]
  42af04:	mov    ah,0xa7
  42af06:	inc    edx
  42af08:	scas   al,BYTE PTR es:[rdi]
  42af09:	movabs eax,ds:0x93a1b6ff9aa8bdff
  42af12:	jmp    FWORD PTR [rdi-0x58007467]
  42af18:	xchg   ecx,eax
  42af19:	(bad)  
  42af1a:	inc    DWORD PTR [rax]
  42af1c:	add    BYTE PTR [rax],al
  42af1e:	add    BYTE PTR [rax],al
  42af20:	add    BYTE PTR [rax],al
  42af22:	add    bh,al
  42af24:	mov    bl,0xa6
  42af26:	inc    esp
  42af28:	mov    cl,0xa3
  42af2a:	(bad)  
  42af2b:	mov    esi,0xbbff9cab
  42af30:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  42af31:	cwde   
  42af32:	(bad)  
  42af33:	mov    eax,0xb4ff95a3
  42af38:	lahf   
  42af39:	nop
  42af3a:	jmp    FWORD PTR [rdi-0x54007366]
  42af40:	xchg   esi,eax
  42af41:	xchg   edi,edi
  42af43:	sbb    BYTE PTR [rdi],0x0
  42af46:	add    al,al
  42af48:	(bad)  
  42af49:	add    BYTE PTR [rax],al
  42af4b:	lock add BYTE PTR [rax],al
	...
  42af7a:	add    BYTE PTR [rcx],al
  42af7c:	add    BYTE PTR [rax],al
  42af7e:	add    BYTE PTR [rbx],al
  42af80:	add    BYTE PTR [rax],al
  42af82:	add    BYTE PTR [rbx],cl
  42af84:	add    BYTE PTR [rcx],al
  42af87:	add    BYTE PTR [rax],al
  42af89:	add    bh,bh
  42af8b:	(bad)  
  42af8c:	(bad)  
  42af8d:	inc    DWORD PTR [rcx]
  42af8f:	add    BYTE PTR [rax],al
  42af91:	add    BYTE PTR [rax],al
  42af93:	add    BYTE PTR [rax],al
  42af95:	add    BYTE PTR [rdx+rax*1],cl
  42af98:	add    BYTE PTR [rax],al
  42af9a:	add    BYTE PTR [rcx+0x53],dl
  42af9d:	jns    0x42b012
  42af9f:	je     0x42b006
  42afa1:	ins    DWORD PTR es:[rdi],dx
  42afa2:	cs rex.R jb 0x42b007
  42afa6:	ja     0x42b011
  42afa8:	outs   dx,BYTE PTR ds:[rsi]
  42afa9:	addr32 sub al,0x20
  42afac:	push   rsi
  42afad:	gs jb  0x42b023
  42afb0:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  42afb7:	xor    BYTE PTR cs:[rsi],ch
  42afba:	xor    BYTE PTR [rax+riz*1],ch
  42afbd:	rex.XB jne 0x42b02c
  42afc0:	je     0x42b037
  42afc2:	jb     0x42b029
  42afc4:	cmp    eax,0x7475656e
  42afc9:	jb     0x42b02c
  42afcb:	ins    BYTE PTR es:[rdi],dx
  42afcc:	sub    al,0x20
  42afce:	push   rax
  42afcf:	jne    0x42b033
  42afd1:	ins    BYTE PTR es:[rdi],dx
  42afd2:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  42afd9:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  42afdd:	(bad)  
  42afde:	xor    BYTE PTR [rbx],dh
  42afe0:	xor    ax,0x3766
  42afe4:	xor    WORD PTR [rcx],si
  42afe7:	fs xor eax,0x61336130
  42afed:	add    eax,0x1
  42aff2:	adc    edx,DWORD PTR [rbx+0x79]
  42aff5:	jae    0x42b06b
  42aff7:	gs ins DWORD PTR es:[rdi],dx
  42aff9:	cs rex.R jb 0x42b05e
  42affd:	ja     0x42b068
  42afff:	outs   dx,BYTE PTR ds:[rsi]
  42b000:	movsxd rbp,DWORD PTR cs:[r15d+0x6e]
  42b006:	add    al,BYTE PTR [rax]
  42b008:	add    BYTE PTR [rax],al
  42b00a:	or     BYTE PTR [rcx+0x63],cl
  42b00d:	outs   dx,DWORD PTR ds:[rsi]
  42b00e:	outs   dx,BYTE PTR ds:[rsi]
  42b00f:	rex.R (bad) 
  42b011:	je     0x42b074
  42b013:	or     BYTE PTR [rcx+0x63],cl
  42b016:	outs   dx,DWORD PTR ds:[rsi]
  42b017:	outs   dx,BYTE PTR ds:[rsi]
  42b018:	push   rbx
  42b019:	imul   edi,DWORD PTR [rdx+0x65],0x13020407
  42b020:	push   rbx
  42b021:	jns    0x42b096
  42b023:	je     0x42b08a
  42b025:	ins    DWORD PTR es:[rdi],dx
  42b026:	cs rex.R jb 0x42b08b
  42b02a:	ja     0x42b095
  42b02c:	outs   dx,BYTE PTR ds:[rsi]
  42b02d:	addr32 cs push rbx
  42b030:	imul   edi,DWORD PTR [rdx+0x65],0x2
  42b037:	add    al,BYTE PTR [rax]
  42b039:	add    BYTE PTR [rax],al
  42b03b:	or     DWORD PTR [rbx],eax
  42b03d:	add    BYTE PTR [rax],al
  42b03f:	add    BYTE PTR [rip+0xfffffffffffffffc],al        # 0x42b041
  42b045:	adc    edx,DWORD PTR [rbx+0x79]
  42b048:	jae    0x42b0be
  42b04a:	gs ins DWORD PTR es:[rdi],dx
  42b04c:	cs rex.R jb 0x42b0b1
  42b050:	ja     0x42b0bb
  42b052:	outs   dx,BYTE PTR ds:[rsi]
  42b053:	addr32 cs push rbx
  42b056:	imul   edi,DWORD PTR [rdx+0x65],0x2
  42b05d:	add    eax,0x74646977
  42b062:	push   0x69656806
  42b067:	addr32 push 0x8000074
  42b06d:	or     BYTE PTR [rdx],al
	...
  42b077:	add    BYTE PTR [rax],al
  42b079:	add    BYTE PTR [rdi],cl
  42b07b:	add    eax,DWORD PTR [rax]
  42b07d:	add    BYTE PTR [rax],al
  42b07f:	xchg   esi,eax
  42b080:	(bad)  
  42b081:	add    BYTE PTR [rax],al
  42b083:	add    al,BYTE PTR [rax]
  42b085:	add    BYTE PTR [rcx],al
  42b087:	add    BYTE PTR [rsi],al
  42b089:	add    BYTE PTR [rax],ah
  42b08b:	and    BYTE PTR [rax],dl
  42b08d:	add    BYTE PTR [rcx],al
  42b08f:	add    BYTE PTR [rax+rax*1],al
  42b092:	call   0x6642b099
  42b097:	add    BYTE PTR [rax],al
  42b099:	add    BYTE PTR [rax],dl
  42b09b:	adc    BYTE PTR [rax],dl
  42b09d:	add    BYTE PTR [rcx],al
  42b09f:	add    BYTE PTR [rax+rax*1],al
  42b0a2:	sub    BYTE PTR [rcx],al
  42b0a4:	add    BYTE PTR [rax],al
  42b0a6:	rex.WRX add r8,QWORD PTR [rax]
  42b0a9:	add    BYTE PTR [rax],ah
  42b0ab:	and    BYTE PTR [rax],al
  42b0ad:	add    BYTE PTR [rcx],al
  42b0af:	add    BYTE PTR [rax],cl
  42b0b1:	add    BYTE PTR [rax+0x76000008],ch
  42b0b7:	add    al,0x0
  42b0b9:	add    BYTE PTR [rax],dl
  42b0bb:	adc    BYTE PTR [rax],al
  42b0bd:	add    BYTE PTR [rcx],al
  42b0bf:	add    BYTE PTR [rax],cl
  42b0c1:	add    BYTE PTR [rax+0x5],ch
  42b0c4:	add    BYTE PTR [rax],al
  42b0c6:	(bad)  
  42b0c7:	or     eax,0x20200000
  42b0cc:	add    BYTE PTR [rax],al
  42b0ce:	add    DWORD PTR [rax],eax
  42b0d0:	and    BYTE PTR [rax],al
  42b0d2:	test   al,0x10
  42b0d4:	add    BYTE PTR [rax],al
  42b0d6:	xchg   BYTE PTR [rdx],dl
  42b0d8:	add    BYTE PTR [rax],al
  42b0da:	adc    BYTE PTR [rax],dl
  42b0dc:	add    BYTE PTR [rax],al
  42b0de:	add    DWORD PTR [rax],eax
  42b0e0:	and    BYTE PTR [rax],al
  42b0e2:	push   0x2e000004
  42b0e7:	and    eax,DWORD PTR [rax]
  42b0e9:	add    BYTE PTR [rax],ch
  42b0eb:	add    BYTE PTR [rax],al
  42b0ed:	add    BYTE PTR [rax],ah
  42b0ef:	add    BYTE PTR [rax],al
  42b0f1:	add    BYTE PTR [rax+0x0],al
  42b0f4:	add    BYTE PTR [rax],al
  42b0f6:	add    DWORD PTR [rax],eax
  42b0f8:	add    al,0x0
  42b0fa:	add    BYTE PTR [rax],al
  42b0fc:	add    BYTE PTR [rax],al
  42b0fe:	add    BYTE PTR [rdx],al
	...
  42b118:	add    BYTE PTR [rax],0x0
  42b11b:	add    BYTE PTR [rax],0x0
  42b11e:	add    BYTE PTR [rax+0x800080],al
  42b124:	add    BYTE PTR [rax],al
  42b126:	add    BYTE PTR [rax],0x80
  42b129:	add    BYTE PTR [rax-0x7fffff80],al
  42b12f:	add    BYTE PTR [rax-0x3f3f4000],0x0
  42b136:	add    BYTE PTR [rax],al
  42b138:	inc    DWORD PTR [rax]
  42b13a:	add    bh,bh
  42b13c:	add    BYTE PTR [rax],al
  42b13e:	add    bh,bh
  42b140:	inc    DWORD PTR [rax]
  42b142:	inc    DWORD PTR [rax]
  42b144:	add    BYTE PTR [rax],al
  42b146:	inc    DWORD PTR [rax]
  42b148:	inc    DWORD PTR [rax]
  42b14a:	(bad)  
  42b14b:	inc    DWORD PTR [rax]
  42b14d:	add    bh,bh
  42b14f:	(bad)  
  42b150:	inc    DWORD PTR [rax]
  42b152:	add    BYTE PTR [rax],al
  42b154:	add    BYTE PTR [rax],al
  42b156:	add    BYTE PTR [rax],al
  42b158:	add    BYTE PTR [rsi+0x70],dh
  42b15b:	add    BYTE PTR [rax],al
  42b15d:	add    DWORD PTR [rip+0x10],edx        # 0x42b173
  42b163:	add    BYTE PTR [rax],al
  42b165:	add    BYTE PTR [rax],al
  42b167:	add    BYTE PTR [rdi],al
  42b169:	mov    BYTE PTR [rsi+0x0],dh
  42b16c:	add    BYTE PTR [rdi+0x1113],dl
  42b172:	add    BYTE PTR [rax],al
  42b174:	add    BYTE PTR [rax],al
  42b176:	add    BYTE PTR [rax],al
  42b178:	(bad)  
  42b179:	clc    
  42b17a:	test   DWORD PTR [rax],eax
  42b17c:	add    BYTE PTR [rcx],bl
  42b17e:	cdq    
  42b17f:	push   rcx
	...
  42b188:	(bad)  
  42b189:	clc    
  42b18a:	xchg   BYTE PTR [rax],al
  42b18c:	add    BYTE PTR [rdi-0x6d],dh
  42b18f:	xchg   edx,eax
	...
  42b198:	or     al,bh
  42b19a:	jbe    0x42b19c
  42b19c:	add    BYTE PTR [rdi+0x9595],dl
  42b1a2:	add    BYTE PTR [rax],al
  42b1a4:	add    BYTE PTR [rax],al
  42b1a6:	add    BYTE PTR [rax],al
  42b1a8:	(bad)  
  42b1a9:	clc    
  42b1aa:	test   DWORD PTR [rax],eax
  42b1ac:	add    BYTE PTR [rax+0x7193],bl
  42b1b2:	add    BYTE PTR [rax],al
  42b1b4:	add    BYTE PTR [rax],al
  42b1b6:	add    BYTE PTR [rax],al
  42b1b8:	or     al,bh
  42b1ba:	xchg   BYTE PTR [rax],al
  42b1bc:	add    BYTE PTR [rcx+0x79],bh
  42b1bf:	xchg   ecx,eax
	...
  42b1c8:	or     al,bh
  42b1ca:	jbe    0x42b1cc
  42b1cc:	add    BYTE PTR [rax+0x7197],bl
  42b1d2:	or     BYTE PTR [rdi+0x65],dh
  42b1d5:	addr32 rex.RXB
  42b1d7:	gs push 0x4787f8
  42b1dd:	js     0x42b176
  42b1df:	xchg   edi,eax
  42b1e0:	add    BYTE PTR [rax],al
  42b1e2:	or     al,bh
  42b1e4:	mov    BYTE PTR [rax-0x7777778],cl
  42b1ea:	ja     0x42b1d1
  42b1ec:	add    BYTE PTR [rax+0x7179],bl
  42b1f2:	or     bh,bh
  42b1f4:	dec    DWORD PTR [rax-0x77777178]
  42b1fa:	xchg   BYTE PTR [rsi-0x68877900],al
  42b200:	add    BYTE PTR [rax],al
  42b202:	or     al,bh
  42b204:	clc    
  42b205:	dec    DWORD PTR [rax-0x78078778]
  42b20b:	push   rsi
  42b20c:	add    BYTE PTR [rax+0x9798],bl
  42b212:	or     bh,bh
  42b214:	dec    DWORD PTR [rdi-0x777878]
  42b21a:	mov    BYTE PTR [rsi+0x0],dh
  42b21d:	mov    BYTE PTR [rdi+0x8000097],al
  42b223:	(bad)  
  42b224:	(bad)  
  42b225:	clc    
  42b226:	clc    
  42b227:	mov    BYTE PTR [rdi-0x7f780001],cl
  42b22d:	js     0x42b1c7
  42b22f:	add    DWORD PTR [rax],0xf8ff0800
  42b235:	dec    DWORD PTR [rdi+0x7f67f8ef]
  42b23b:	test   DWORD PTR [rax-0x78],0x9788
  42b242:	or     bh,bh
  42b244:	(bad)  
  42b245:	dec    DWORD PTR [rdi-0x77777971]
  42b24b:	clc    
  42b24c:	(bad)  
  42b24d:	js     0x42b1d7
  42b24f:	jns    0x42b251
  42b251:	add    BYTE PTR [rax],cl
  42b253:	(bad)  
  42b254:	(bad)  
  42b255:	(bad)  
  42b256:	clc    
  42b257:	pop    QWORD PTR [rdi+0x70f78888]
  42b25d:	mov    BYTE PTR [rax+0x8000087],cl
  42b263:	(bad)  
  42b264:	(bad)  
  42b265:	clc    
  42b266:	dec    DWORD PTR [rdi-0x8909709]
  42b26c:	add    BYTE PTR [rdi+0x3787],0x8
  42b273:	(bad)  
  42b274:	(bad)  
  42b275:	(bad)  
  42b276:	clc    
  42b277:	mov    bh,bh
  42b279:	js     0x42b27a
  42b27b:	xchg   DWORD PTR [rax],eax
  42b27d:	(bad)  
  42b27e:	xchg   DWORD PTR [rax+0x0],edx
  42b281:	add    BYTE PTR [rax],cl
  42b283:	(bad)  
  42b284:	(bad)  
  42b285:	(bad)  
  42b286:	(bad)  
  42b287:	clc    
  42b288:	xchg   DWORD PTR [rax-0x79],edi
  42b28b:	ja     0x42b28d
  42b28d:	(bad)  
  42b28e:	mul    DWORD PTR [rax+0x0]
  42b291:	add    BYTE PTR [rax],cl
  42b293:	(bad)  
  42b294:	(bad)  
  42b295:	(bad)  
  42b296:	(bad)  
  42b297:	dec    DWORD PTR [rdi+0x868888]
  42b29d:	(bad)  
  42b29e:	not    DWORD PTR [rax+0x0]
  42b2a1:	add    BYTE PTR [rax],cl
  42b2a3:	(bad)  
  42b2a4:	(bad)  
  42b2a5:	(bad)  
  42b2a6:	dec    DWORD PTR [rdi+0x6788fff8]
  42b2ac:	add    BYTE PTR [rdi],al
  42b2ae:	mov    BYTE PTR [rax+0x0],ah
  42b2b1:	je     0x42b2bb
  42b2b3:	(bad)  
  42b2b4:	(bad)  
  42b2b5:	(bad)  
  42b2b6:	(bad)  
  42b2b7:	(bad)  
  42b2b8:	dec    DWORD PTR [rax-0x77887778]
  42b2be:	mov    BYTE PTR [rbp+0x61],dh
  42b2c1:	movsxd ecx,DWORD PTR [rax]
  42b2c3:	(bad)  
  42b2c4:	(bad)  
  42b2c5:	(bad)  
  42b2c6:	(bad)  
  42b2c7:	dec    DWORD PTR [rdi-0x77000808]
  42b2cd:	mov    BYTE PTR [rax+0x8777877],cl
  42b2d3:	(bad)  
  42b2d4:	(bad)  
  42b2d5:	dec    DWORD PTR [rax-0x77707778]
  42b2db:	clc    
  42b2dc:	clc    
  42b2dd:	(bad)  
  42b2de:	clc    
  42b2df:	mov    BYTE PTR [rdi-0xf7a0],al
  42b2e5:	ja     0x42b35e
  42b2e7:	jbe    0x42b35f
  42b2e9:	js     0x42b2e1
  42b2eb:	(bad)  
  42b2ec:	js     0x42b27d
  42b2ee:	dec    DWORD PTR [rax-0xf7ff89]
  42b2f4:	(bad)  
  42b2f5:	js     0x42b282
  42b2f7:	jnp    0x42b371
  42b2f9:	js     0x42b2f3
  42b2fb:	xchg   DWORD PTR [rax],eax
  42b2fd:	div    DWORD PTR [rdi-0x79]
  42b300:	add    BYTE PTR [rax],0x8
  42b303:	(bad)  
  42b304:	(bad)  
  42b305:	js     0x42b28e
  42b307:	mov    BYTE PTR [rdi+0x86883f],dh
  42b30d:	add    BYTE PTR [rax],al
  42b30f:	add    BYTE PTR [rax],al
  42b311:	add    BYTE PTR [rax],cl
  42b313:	(bad)  
  42b314:	(bad)  
  42b315:	sti    
  42b316:	repz jae 0x42b2a0
  42b319:	(bad)  
  42b31a:	push   rdi
  42b31c:	add    BYTE PTR [rax],al
  42b31e:	add    BYTE PTR [rax],al
  42b320:	add    BYTE PTR [rax],al
  42b322:	add    BYTE PTR [rax-0x7777878],cl
  42b328:	add    DWORD PTR [rdi+0x8087],0x0
  42b32f:	add    BYTE PTR [rax],al
  42b331:	add    BYTE PTR [rax],al
  42b333:	add    BYTE PTR [rax],al
  42b335:	add    BYTE PTR [rax+0x3b],bh
  42b338:	jo     0x42b33a
	...
  42b352:	(bad)  
  42b353:	cld    
  42b354:	jle    0x42b375
  42b356:	(bad)  
  42b357:	clc    
  42b358:	cmp    al,0xf
  42b35a:	(bad)  
  42b35b:	clc    
  42b35c:	cmp    al,0xf
  42b35e:	(bad)  
  42b35f:	clc    
  42b360:	cmp    al,0xf
  42b362:	(bad)  
  42b363:	clc    
  42b364:	cmp    al,0xf
  42b366:	(bad)  
  42b367:	clc    
  42b368:	cmp    al,0xf
  42b36a:	(bad)  
  42b36b:	clc    
  42b36c:	cmp    al,0xf
  42b36e:	(bad)  
  42b36f:	clc    
  42b370:	cmp    al,0xf
  42b372:	add    BYTE PTR [rax],0xc
  42b375:	jo     0xffffffff8051bf7b
  42b37b:	add    BYTE PTR [rdi+rcx*1],cl
  42b37e:	add    BYTE PTR [rax],0xc
  42b381:	jo     0xffffffff8051bf87
  42b387:	add    BYTE PTR [rdi+rcx*1],al
  42b38a:	add    BYTE PTR [rax],0x4
  42b38d:	jo     0xffffffff8051b793
  42b393:	add    BYTE PTR [rdi+rcx*1],al
  42b396:	add    BYTE PTR [rax],0x4
  42b399:	jo     0xffffffff8061c19f
  42b39f:	add    BYTE PTR [rsi],cl
  42b3a1:	(bad)  
  42b3a2:	add    BYTE PTR [rax],0xe
  42b3a5:	(bad)  
  42b3a6:	add    BYTE PTR [rax],0xe
  42b3a9:	sbb    al,0x80
  42b3ab:	add    BYTE PTR [rax],al
  42b3ad:	add    BYTE PTR [rax-0x80000000],al
  42b3b3:	add    BYTE PTR [rax],al
  42b3b5:	add    DWORD PTR [rax-0x7ffd0000],eax
  42b3bb:	add    BYTE PTR [rdi+rax*1],cl
  42b3be:	add    BYTE PTR [rax],0xf
  42b3c1:	inc    DWORD PTR [rax-0x3f00f100]
  42b3c7:	add    BYTE PTR [rdi],bl
  42b3c9:	(bad)  
  42b3ca:	inc    DWORD PTR [rdi]
  42b3cc:	(bad)  
  42b3cd:	(bad)  
  42b3ce:	(bad)  
  42b3cf:	(bad)  
  42b3d0:	(bad)  
  42b3d1:	jmp    FWORD PTR [rax]
  42b3d3:	add    BYTE PTR [rax],al
  42b3d5:	add    BYTE PTR [rax],dl
  42b3d7:	add    BYTE PTR [rax],al
  42b3d9:	add    BYTE PTR [rax],ah
  42b3db:	add    BYTE PTR [rax],al
  42b3dd:	add    BYTE PTR [rcx],al
  42b3df:	add    BYTE PTR [rax+rax*1],al
  42b3e2:	add    BYTE PTR [rax],al
  42b3e4:	add    BYTE PTR [rax],al
  42b3e6:	add    BYTE PTR [rax],0x0
	...
  42b3fd:	add    BYTE PTR [rax],al
  42b3ff:	add    BYTE PTR [rax+0x800000],al
  42b405:	add    BYTE PTR [rax],al
  42b407:	add    BYTE PTR [rax+0x8000],0x0
  42b40e:	add    BYTE PTR [rax],0x80
  42b411:	add    BYTE PTR [rax-0x7fffff80],al
  42b417:	add    BYTE PTR [rax-0x3f3f4000],0x0
  42b41e:	add    BYTE PTR [rax],al
  42b420:	inc    DWORD PTR [rax]
  42b422:	add    bh,bh
  42b424:	add    BYTE PTR [rax],al
  42b426:	add    bh,bh
  42b428:	inc    DWORD PTR [rax]
  42b42a:	inc    DWORD PTR [rax]
  42b42c:	add    BYTE PTR [rax],al
  42b42e:	inc    DWORD PTR [rax]
  42b430:	inc    DWORD PTR [rax]
  42b432:	(bad)  
  42b433:	inc    DWORD PTR [rax]
  42b435:	add    bh,bh
  42b437:	(bad)  
  42b438:	inc    DWORD PTR [rax]
  42b43a:	add    BYTE PTR [rax],al
  42b43c:	(bad)  
  42b43d:	add    BYTE PTR [ecx],al
  42b440:	adc    BYTE PTR [rax],al
  42b442:	add    BYTE PTR [rax],al
  42b444:	(bad)  
  42b445:	mov    WORD PTR [rax],es
  42b447:	xchg   ebp,eax
  42b448:	adc    eax,0xc000000
  42b44d:	xchg   BYTE PTR [rax],al
  42b44f:	jno    0x42b4c2
  42b451:	add    BYTE PTR [rax],al
  42b453:	add    BYTE PTR [rax],cl
  42b455:	mov    WORD PTR [rax],es
  42b457:	xchg   edi,eax
  42b458:	xchg   ecx,eax
  42b459:	add    BYTE PTR [rdi],al
  42b45b:	xchg   WORD PTR gs:[rdi-0x77],sp
  42b460:	jno    0x42b462
  42b462:	vpmacssdd xmm1,xmm14,xmm15,XMMWORD PTR [r8-0x70ff8687]
  42b46c:	js     0x42b3f6
  42b46e:	iret   
  42b46f:	mov    DWORD PTR [rcx-0x77077100],eax
  42b475:	pop    QWORD PTR [rdi-0x70ff7678]
  42b47b:	(bad)  
  42b47c:	div    esi
  42b47e:	xchg   DWORD PTR [rdi+0x70],edx
  42b481:	add    BYTE PTR [rdi-0x30077808],cl
  42b487:	clc    
  42b488:	add    BYTE PTR [rdi+0x77ffffff],cl
  42b48f:	clc    
  42b490:	(bad)  
  42b491:	(bad)  
  42b492:	(bad)  
  42b493:	dec    DWORD PTR [rax+0x7768788f]
  42b499:	ja     0x42b42a
  42b49b:	div    DWORD PTR [rdi+0x78]
  42b49e:	jg     0x42b518
  42b4a0:	mov    BYTE PTR [rax-0x71],dh
  42b4a3:	test   DWORD PTR [rax-0x78078848],0x8b870800
  42b4ad:	mov    BYTE PTR [rax+0x0],cl
  42b4b3:	add    BYTE PTR [rax+0x80],cl
  42b4b9:	add    al,bh
  42b4bb:	out    0x0,eax
  42b4bd:	add    al,bh
  42b4bf:	ret    
  42b4c0:	add    BYTE PTR [rax],al
  42b4c2:	clc    
  42b4c3:	ret    
  42b4c4:	add    BYTE PTR [rax],al
  42b4c6:	clc    
  42b4c7:	ret    
  42b4c8:	add    BYTE PTR [rax],al
  42b4ca:	add    BYTE PTR [rbx],0x0
  42b4cd:	add    BYTE PTR [rax],al
  42b4cf:	add    eax,DWORD PTR [rax]
  42b4d1:	add    BYTE PTR [rax],al
  42b4d3:	add    eax,DWORD PTR [rax]
  42b4d5:	add    BYTE PTR [rax],al
  42b4d7:	add    eax,DWORD PTR [rax]
  42b4d9:	add    BYTE PTR [rax],al
  42b4db:	(bad)  
  42b4dc:	add    BYTE PTR [rax],al
  42b4de:	add    BYTE PTR [rdi],al
  42b4e0:	add    BYTE PTR [rax],al
  42b4e2:	add    BYTE PTR [rsi],al
  42b4e4:	add    BYTE PTR [rax],al
  42b4e6:	add    BYTE PTR [rax],al
  42b4e8:	add    BYTE PTR [rax],al
  42b4ea:	add    BYTE PTR [rcx],al
  42b4ec:	add    BYTE PTR [rax],al
  42b4ee:	add    BYTE PTR [rbx],al
  42b4f0:	add    BYTE PTR [rax],al
  42b4f2:	cmp    BYTE PTR [rdi],0x0
  42b4f5:	add    cl,dh
  42b4f7:	inc    DWORD PTR [rax]
  42b4f9:	add    BYTE PTR [rax],ch
  42b4fb:	add    BYTE PTR [rax],al
  42b4fd:	add    BYTE PTR [rax],ah
  42b4ff:	add    BYTE PTR [rax],al
  42b501:	add    BYTE PTR [rax+0x0],al
  42b504:	add    BYTE PTR [rax],al
  42b506:	add    DWORD PTR [rax],eax
  42b508:	or     BYTE PTR [rax],al
  42b50a:	add    BYTE PTR [rax],al
  42b50c:	add    BYTE PTR [rax],al
  42b50e:	add    BYTE PTR [rax+rax*1],al
	...
  42b519:	add    BYTE PTR [rax],al
  42b51b:	add    DWORD PTR [rax],eax
  42b51d:	add    BYTE PTR [rax],al
  42b51f:	add    DWORD PTR [rax],eax
  42b521:	add    BYTE PTR [rax],al
  42b523:	add    BYTE PTR [rax],al
  42b525:	add    BYTE PTR [rdi+rdi*1+0x37],cl
  42b529:	add    BYTE PTR [rbp+0x41],cl
  42b52c:	cmp    DWORD PTR [rax],eax
  42b52e:	pop    rax
  42b52f:	rex.WB (bad) 
  42b531:	add    BYTE PTR [rax+0x47],ah
  42b534:	(bad)  
  42b535:	add    BYTE PTR [rbx+0x48],ah
  42b538:	xor    eax,DWORD PTR [rax]
  42b53a:	fs rex.WB xor al,0x0
  42b53e:	rex.WR cmp BYTE PTR [eax],r8b
  42b542:	push   0x7000384c
  42b547:	rex.WRXB xor BYTE PTR [r8],r8b
  42b54a:	(bad)  
  42b54b:	push   rax
  42b54c:	xor    eax,DWORD PTR [rax]
  42b54e:	push   0x50
  42b550:	cmp    al,0x0
  42b552:	outs   dx,BYTE PTR ds:[rsi]
  42b553:	push   rbp
  42b554:	(bad)  
  42b555:	add    BYTE PTR [rax+0x52],dh
  42b558:	(bad)  
  42b559:	add    BYTE PTR [rax+rdx*1],bl
  42b55c:	pop    rdx
  42b55d:	add    BYTE PTR [rsi],bl
  42b55f:	adc    ebx,DWORD PTR [rax+rax*1+0x22]
  42b563:	(bad)  
  42b564:	(bad)  
  42b565:	add    BYTE PTR [rsi],ah
  42b567:	sbb    esp,DWORD PTR [rax+rax*1+0x27]
  42b56b:	sbb    al,0x65
  42b56d:	add    BYTE PTR [rcx],ch
  42b56f:	(bad)  
  42b570:	push   0x6a212b00
  42b575:	add    BYTE PTR [rbx+riz*1],ch
  42b578:	imul   eax,DWORD PTR [rax],0x2f
  42b57b:	and    eax,0x2932006d
  42b580:	jno    0x42b582
  42b582:	cmp    BYTE PTR [rcx],dh
  42b584:	js     0x42b586
  42b586:	(bad)  
  42b587:	cmp    BYTE PTR [rdi+0x0],bh
  42b58a:	push   rsp
  42b58b:	rex.RXB
  42b58c:	add    BYTE PTR [rbx+0x4d],bl
  42b590:	add    BYTE PTR [rdi+rcx*2+0x48],r11b
  42b595:	add    BYTE PTR [rsi+0x54],ch
  42b598:	add    BYTE PTR [rcx+0x53],spl
  42b59c:	rex.WXB add BYTE PTR [r10+0x58],sil
  42b5a0:	add    BYTE PTR [rdx+rbx*2+0x46],r14b
  42b5a5:	add    BYTE PTR [rsi+0x5c],dh
  42b5a8:	rex.WB add BYTE PTR [r15+0x5c],spl
  42b5ac:	push   rbp
  42b5ad:	add    BYTE PTR [rax+0x60],bh
  42b5b0:	rex.WR add BYTE PTR [rdi+0x64],r15b
  42b5b4:	push   rdx
  42b5b5:	add    BYTE PTR [rbp+0x69],bh
  42b5b8:	pop    rdi
  42b5b9:	add    BYTE PTR [rdx+0x5f],cl
  42b5bc:	outs   dx,DWORD PTR ds:[rsi]
  42b5bd:	add    BYTE PTR [rbp+0x6a],dh
  42b5c0:	data16 add BYTE PTR [rbx+0x6a],bh
  42b5c4:	(bad)  
  42b5c5:	add    BYTE PTR [rbp+0x6e],ch
  42b5c8:	jb     0x42b5ca
  42b5ca:	(bad)  
  42b5cb:	(bad)  
  42b5cc:	rex.WRB add BYTE PTR [r9+rbp*2+0x6b830054],r9b
  42b5d4:	pop    rcx
  42b5d5:	add    BYTE PTR [rcx+rsi*2+0x72890065],al
  42b5dc:	(bad)  
  42b5dd:	add    BYTE PTR [rbp-0x78ff9a8a],cl
  42b5e3:	je     0x42b64e
  42b5e5:	add    BYTE PTR [rax-0x69ff9887],dl
  42b5eb:	jle    0x42b65a
  42b5ed:	add    BYTE PTR [rbx-0x6fff8b85],cl
  42b5f3:	jge    0x42b666
  42b5f5:	add    BYTE PTR [rax-0x63ff9f89],ah
  42b5fb:	sub    DWORD PTR [rdi+0x0],0x79818e
  42b602:	sahf   
  42b603:	xor    DWORD PTR [rbx+0x0],0xffffff92
  42b607:	test   BYTE PTR [rsi+0x0],bh
  42b60a:	lahf   
  42b60b:	mov    BYTE PTR [rdx+0x0],bh
  42b60e:	movabs eax,ds:0xa0007b8ba4007587
  42b617:	mov    edi,DWORD PTR [rax+rax*1-0x59]
  42b61b:	lea    edi,[rax+rax*1-0x1e]
  42b61f:	xchg   edx,eax
  42b620:	(bad)  
  42b621:	add    BYTE PTR [rsi],dl
  42b623:	sbb    ebp,DWORD PTR [rdx-0x55e3e900]
  42b629:	add    BYTE PTR [rax],bl
  42b62b:	sbb    eax,0x1f1900ab
  42b630:	lods   al,BYTE PTR ds:[rsi]
  42b631:	add    BYTE PTR [rdx],bl
  42b633:	and    BYTE PTR [rbp-0x4fdae000],ch
  42b639:	add    BYTE PTR [rsi],ah
  42b63b:	sub    esi,DWORD PTR [rax+rax*1+0xb8322c]
  42b642:	xor    al,0x39
  42b644:	mov    ebp,0x86404600
  42b649:	add    BYTE PTR [rbp+0x48],cl
  42b64c:	mov    es,WORD PTR [rax]
  42b64e:	push   rbp
  42b64f:	push   rcx
  42b650:	xchg   esi,eax
  42b651:	add    BYTE PTR [rdx+rbx*2-0x62],bl
  42b655:	add    BYTE PTR [rsi+0x70],cl
  42b658:	xchg   DWORD PTR [rax],eax
  42b65a:	jge    0x42b6d8
  42b65c:	mov    esp,0xc6191400
  42b661:	add    BYTE PTR [rdi],dl
  42b663:	sbb    eax,0x201a00c7
  42b668:	enter  0x1e00,0x24
  42b66c:	retf   0x2100
  42b66f:	(bad)  
  42b670:	retf   0x2600
  42b673:	sub    al,0xcb
  42b675:	add    BYTE PTR [rdx],ch
  42b677:	xor    ch,cl
  42b679:	add    BYTE PTR [rdx+rsi*1],ch
  42b67c:	int    0x0
  42b67e:	cmp    bh,BYTE PTR [rdi]
  42b680:	rol    DWORD PTR [rax],0x30
  42b683:	ss iret 
  42b685:	add    BYTE PTR [rbx],dh
  42b687:	cmp    bh,cl
  42b689:	add    BYTE PTR [rcx+rdi*1],dh
  42b68c:	iret   
  42b68d:	add    BYTE PTR [rdx],bh
  42b68f:	rex rol DWORD PTR [rax],1
  42b692:	(bad)  
  42b693:	rex.RB rol DWORD PTR [r8],cl
  42b696:	rex.B
  42b697:	(bad)
  42b69b:	rex.WRX retf 0x5000
  42b69f:	push   rbp
  42b6a0:	(bad)  
  42b6a1:	add    BYTE PTR [rcx+0x47],al
  42b6a4:	rol    DWORD PTR [rax],cl
  42b6a6:	rex.RX
  42b6a7:	rex.WXB (bad) 
  42b6a9:	add    BYTE PTR [rax+0x4e],cl
  42b6ac:	(bad)  
  42b6ad:	add    BYTE PTR [rbx+0x50],cl
  42b6b0:	(bad)  
  42b6b1:	add    BYTE PTR [rcx+rdx*2-0x2a],cl
  42b6b5:	add    BYTE PTR [rax+0x55],dl
  42b6b8:	xlat   BYTE PTR ds:[rbx]
  42b6b9:	add    BYTE PTR [rsi+0x5b],dl
  42b6bc:	rol    DWORD PTR [rax],cl
  42b6be:	push   rdx
  42b6bf:	push   rdi
  42b6c0:	fadd   DWORD PTR [rax]
  42b6c2:	push   rsi
  42b6c3:	pop    rsp
  42b6c4:	fiadd  DWORD PTR [rax]
  42b6c6:	pop    rdx
  42b6c7:	pop    rsi
  42b6c8:	fld    DWORD PTR [rax]
  42b6ca:	pop    rbx
  42b6cb:	(bad)  
  42b6cc:	xlat   BYTE PTR ds:[rbx]
  42b6cd:	add    BYTE PTR [rsi+0x63],bl
  42b6d0:	fild   DWORD PTR [rax]
  42b6d2:	pop    rdi
  42b6d3:	fadd   QWORD PTR fs:[rax]
  42b6d6:	(bad)  
  42b6d7:	data16 fiadd DWORD PTR [rax]
  42b6da:	(bad)  
  42b6db:	data16 fadd QWORD PTR [rax]
  42b6de:	fs push 0xffffffffffffffdc
  42b6e1:	add    BYTE PTR [rcx+0x6f],ch
  42b6e4:	fiadd  WORD PTR [rax]
  42b6e6:	outs   dx,DWORD PTR ds:[rsi]
  42b6e7:	je     0x42b6c9
  42b6e9:	add    BYTE PTR [rbp+0x79],dh
  42b6ec:	loop   0x42b6ee
  42b6ee:	push   0x63008c82
  42b6f3:	xchg   edx,eax
  42b6f4:	movabs al,ds:0xc7b36c00af9a6e00
  42b6fd:	add    BYTE PTR [rax+rax*4-0x1d],bh
  42b701:	add    BYTE PTR [rdx-0x80],bh
  42b704:	in     al,0x0
  42b706:	jge    0x42b68b
  42b708:	in     eax,0x0
  42b70a:	ins    BYTE PTR es:[rdi],dx
  42b70b:	(bad)  
  42b70c:	iret   
  42b70d:	add    BYTE PTR [rdx-0x3f],ah
  42b710:	fild   WORD PTR [rax]
  42b712:	jl     0x42b6e4
  42b714:	fild   WORD PTR [rax]
  42b716:	xchg   edi,eax
  42b717:	xchg   BYTE PTR [rdx-0x7a756c00],al
  42b71d:	add    BYTE PTR [rsi-0x69ff7f75],bl
  42b723:	mov    WORD PTR [rcx-0x756e6500],cs
  42b729:	add    BYTE PTR [rsi-0x63ff6e6b],bl
  42b72f:	cwde   
  42b730:	xchg   esi,eax
  42b731:	add    BYTE PTR [rbx-0x56ff7b72],ah
  42b737:	xchg   ebx,eax
  42b738:	xchg   BYTE PTR [rax],al
  42b73a:	test   eax,0xae008694
  42b73f:	xchg   esp,eax
  42b740:	test   BYTE PTR [rax],al
  42b742:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  42b743:	xchg   esp,eax
  42b744:	mov    al,BYTE PTR [rax]
  42b746:	scas   al,BYTE PTR es:[rdi]
  42b747:	cdq    
  42b748:	lea    eax,[rax]
  42b74a:	mov    cl,0x9a
  42b74c:	lea    eax,[rax]
  42b74e:	mov    ch,0x9b
  42b750:	mov    WORD PTR [rax],es
  42b752:	movabs ds:0xa400949dab009198,eax
  42b75b:	popf   
  42b75c:	cdq    
  42b75d:	add    BYTE PTR [rcx-0x53ff6b61],dh
  42b763:	movabs al,ds:0xa3bc0093a0b50098
  42b76c:	xchg   ebp,eax
  42b76d:	add    BYTE PTR [rbx-0x43ff695c],bh
  42b773:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  42b774:	xchg   ebp,eax
  42b775:	add    BYTE PTR [rsi+riz*4-0x5840ff66],dh
  42b77c:	(bad)  
  42b77d:	add    BYTE PTR [rsi-0x53ff4f5c],al
  42b783:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  42b784:	movabs eax,ds:0xafb3b500a9afbc00
  42b78d:	add    BYTE PTR [rdi-0x20ff4e4a],bh
  42b793:	lods   eax,DWORD PTR ds:[rsi]
  42b794:	mov    eax,DWORD PTR [rax]
  42b796:	ret    
  42b797:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  42b798:	xchg   ebp,eax
  42b799:	add    al,al
  42b79b:	scas   eax,DWORD PTR es:[rdi]
  42b79c:	lahf   
  42b79d:	add    al,al
  42b79f:	mov    bh,0x9f
  42b7a1:	add    cl,dh
  42b7a3:	scas   eax,DWORD PTR es:[rdi]
  42b7a4:	nop
  42b7a5:	add    dl,ah
  42b7a7:	mov    eax,0xacc2009d
  42b7ac:	movabs al,ds:0xa6b1c600a4aec000
  42b7b5:	add    dh,al
  42b7b7:	mov    ch,0xac
  42b7b9:	add    cl,cl
  42b7bb:	mov    ah,0xa9
  42b7bd:	add    cl,cl
  42b7bf:	mov    bh,0xad
  42b7c1:	add    ah,cl
  42b7c3:	mov    bh,0xad
  42b7c5:	add    ah,cl
  42b7c7:	mov    ecx,0xb7d000ae
  42b7cc:	scas   eax,DWORD PTR es:[rdi]
  42b7cd:	add    al,dl
  42b7cf:	mov    edi,0xbedb00af
  42b7d4:	stos   DWORD PTR es:[rdi],eax
  42b7d5:	add    dl,al
  42b7d7:	mov    ecx,0xbfc600b4
  42b7dc:	mov    ecx,0xb3bdd100
  42b7e1:	add    al,dl
  42b7e3:	mov    ebp,0xbfe300b4
  42b7e8:	test   al,0x0
  42b7ea:	(bad)  
  42b7eb:	sar    DWORD PTR [rax-0x4c3c2500],0x0
  42b7f2:	rol    ecx,cl
  42b7f4:	mov    eax,0xbdc4d000
  42b7f9:	add    al,bl
  42b7fb:	enter  0xbf,0xf4
  42b7ff:	ret    0xa1
  42b802:	hlt    
  42b803:	leave  
  42b804:	lods   eax,DWORD PTR ds:[rsi]
  42b805:	add    ah,ah
  42b807:	(bad)  
  42b808:	mov    ah,0x0
  42b80a:	icebp  
  42b80b:	(bad)  
  42b80c:	mov    al,0x0
  42b80e:	cmc    
  42b80f:	int    0xb2
  42b811:	add    dh,dh
  42b813:	sar    DWORD PTR [rbx-0x40261000],cl
  42b819:	add    BYTE PTR [rcx-0x7aff197a],al
  42b81f:	mov    ah,dh
  42b821:	add    BYTE PTR [rsi-0x73ff1775],al
  42b827:	xchg   ecx,eax
  42b828:	jmp    0xffffffffe7d6482d
  42b82d:	add    BYTE PTR [rax-0x69ff156b],dl
  42b833:	fwait
  42b834:	in     al,dx
  42b835:	add    BYTE PTR [rdx-0x5dff1463],bl
  42b83b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42b83c:	in     eax,dx
  42b83d:	add    BYTE PTR [rsi+rbp*4-0x484bff11],ch
  42b844:	icebp  
  42b845:	add    BYTE PTR [rdx-0x72ff0c43],bh
  42b84b:	(bad)  
  42b84c:	rol    BYTE PTR [rax],cl
  42b84e:	popf   
  42b84f:	enter  0xd2,0x8d
  42b853:	rcr    bh,1
  42b855:	add    BYTE PTR [rcx-0x44ff0b20],bl
  42b85b:	out    dx,al
  42b85c:	out    dx,eax
  42b85d:	add    bh,cl
  42b85f:	mov    bl,0x0
  42b862:	(bad)  
  42b863:	leave  
  42b864:	ret    0xda00
  42b867:	int3   
  42b868:	(bad)
  42b86b:	iret   
  42b86c:	leave  
  42b86d:	add    ah,bl
  42b86f:	ror    ah,cl
  42b871:	add    al,cl
  42b873:	(bad)  
  42b874:	rol    DWORD PTR [rax],1
  42b876:	(bad)  
  42b878:	rol    DWORD PTR [rax],1
  42b87a:	icebp  
  42b87b:	iret   
  42b87c:	rol    BYTE PTR [rax],0xe0
  42b87f:	(bad)  
  42b880:	int    0x0
  42b882:	call   0xfffffffff743855f
  42b887:	(bad)  
  42b888:	rol    BYTE PTR [rax],0xf7
  42b88b:	fadd   st,st(3)
  42b88d:	add    al,bh
  42b88f:	fld    st(5)
  42b891:	add    al,bh
  42b893:	(bad)  
  42b895:	add    al,ah
  42b897:	xlat   BYTE PTR ds:[rbx]
  42b898:	rol    DWORD PTR [rax],cl
  42b89a:	in     al,0xdb
  42b89c:	xlat   BYTE PTR ds:[rbx]
  42b89d:	add    dl,ah
  42b89f:	(bad)  
  42b8a1:	add    cl,dh
  42b8a3:	(bad)  
  42b8a4:	rol    BYTE PTR [rax],1
  42b8a6:	lock (bad) 
  42b8a9:	add    bh,ch
  42b8ab:	loopne 0x42b884
  42b8ad:	add    bl,ch
  42b8af:	loop   0x42b890
  42b8b1:	add    cl,bh
  42b8b3:	loop   0x42b888
  42b8b5:	add    dl,bh
  42b8b7:	out    0xd9,al
  42b8b9:	add    dl,bh
  42b8bb:	jmp    0xffffffffdc1cb99d
  42b8c0:	clc    
  42b8c1:	add    bh,bl
  42b8c3:	call   0xffffffffe52db9b8
  42b8c8:	loopne 0x42b8ca
  42b8ca:	in     eax,dx
  42b8cb:	in     eax,0xe2
  42b8cd:	add    dh,ch
  42b8cf:	call   0xffffffffed3db9b9
  42b8d4:	loop   0x42b8d6
  42b8d6:	repnz in eax,dx
  42b8d8:	(bad)  
  42b8d9:	add    bh,bh
  42b8db:	lock loopne 0x42b8de
  42b8de:	cmc    
  42b8df:	lock out dx,al
  42b8e1:	add    ah,bh
  42b8e3:	icebp  
  42b8e4:	jmp    0xffffffffed36b4e9
  42b8e9:	add    ch,bh
  42b8eb:	hlt    
  42b8ec:	out    dx,al
  42b8ed:	add    dl,ah
  42b8ef:	jrcxz  0x42b8eb
  42b8f1:	add    ah,ch
  42b8f3:	in     al,dx
  42b8f4:	sti    
  42b8f5:	add    ch,bh
  42b8f7:	div    cl
  42b8f9:	add    bh,bh
  42b8fb:	clc    
  42b8fc:	lock add ch,bh
  42b8ff:	clc    
  42b900:	cmc    
  42b901:	add    bl,bh
  42b903:	stc    
  42b904:	stc    
  42b905:	add    dh,bh
  42b907:	cli    
  42b908:	clc    
  42b909:	add    dh,bh
  42b90b:	cld    
  42b90c:	cli    
  42b90d:	add    dh,bh
  42b90f:	(bad)  
  42b910:	inc    BYTE PTR [rax]
	...
  42b91e:	(bad)  
  42b91f:	(bad)  
  42b920:	inc    DWORD PTR [rax]
	...
  42b92e:	add    BYTE PTR [rax],al
  42b930:	and    esp,DWORD PTR [rcx]
  42b932:	(bad)  
  42b933:	add    BYTE PTR [rax],al
  42b935:	add    BYTE PTR [rax],al
  42b937:	add    BYTE PTR [rax],al
  42b939:	(bad)  
  42b93a:	(bad)  
  42b93b:	adc    dl,BYTE PTR [rdx]
	...
  42b94d:	add    BYTE PTR [rax],al
  42b94f:	ss (bad) 
  42b951:	mov    ah,0x94
  42b953:	(bad)  
  42b954:	add    BYTE PTR [rax],al
  42b956:	add    BYTE PTR [rax],al
  42b958:	push   rbx
  42b959:	rex.X
  42b95a:	rex.B
  42b95b:	rex.B
  42b95c:	rex.B (bad) 
	...
  42b96e:	add    BYTE PTR [rbx],bh
  42b970:	push   QWORD PTR [rsp+rdx*4+0x7]
  42b977:	add    BYTE PTR [rsp+riz*2+0x50],dl
  42b97b:	push   rax
  42b97c:	rex.X (bad) 
	...
  42b98e:	add    BYTE PTR [rsi],bh
  42b990:	push   QWORD PTR [rsp+rdx*4+0xb]
  42b997:	add    BYTE PTR [rsi+0x67],dl
  42b99a:	push   rdx
  42b99b:	push   rcx
  42b99c:	rex.RB (bad) 
	...
  42b9ae:	add    BYTE PTR [rdi+0x1d94b4ff],al
  42b9b4:	add    BYTE PTR [rax],al
  42b9b6:	add    BYTE PTR [rax],al
  42b9b8:	pop    rcx
  42b9b9:	imul   edx,DWORD PTR [rbx+rdx*2+0x46],0xe
	...
  42b9cd:	add    BYTE PTR [rax],al
  42b9cf:	mov    edi,edi
  42b9d1:	mov    ah,0x94
  42b9d3:	(bad)  
  42b9d4:	add    BYTE PTR [rax],al
  42b9d6:	add    BYTE PTR [rax],al
  42b9d8:	pop    rbx
  42b9d9:	outs   dx,BYTE PTR ds:[rsi]
  42b9da:	pop    rax
  42b9db:	push   rsi
  42b9dc:	rex.RXB (bad) 
	...
  42b9ee:	add    BYTE PTR [rdi+rdi*8+0x2394b4],dl
  42b9f5:	add    BYTE PTR [rax],al
  42b9f7:	add    BYTE PTR [rax+0x70],ah
  42b9fa:	pop    rbx
  42b9fb:	pop    rcx
  42b9fc:	rex.W adc al,BYTE PTR [rax]
	...
  42ba0f:	movabs ds:0x2494b4ff,al
  42ba18:	(bad)  
  42ba1a:	(bad)  
  42ba1b:	pop    rbx
  42ba1c:	push   rdi
  42ba1d:	adc    al,BYTE PTR [rax]
  42ba1f:	add    BYTE PTR [rax],al
  42ba21:	add    BYTE PTR [rax],al
  42ba23:	(bad)  
  42ba24:	(bad)  
  42ba25:	sub    cl,BYTE PTR [rip+0xd0d0d0d]        # 0xd4fc738
  42ba2b:	or     eax,0xa6090d0d
  42ba30:	push   QWORD PTR [rsp+rdx*4+0x37042c]
  42ba37:	add    BYTE PTR [rbp+0x77],ah
  42ba3a:	addr32 fs pop rbp
  42ba3d:	(bad)  
  42ba3e:	add    BYTE PTR [rax],al
  42ba40:	add    BYTE PTR [rax],al
  42ba42:	add    BYTE PTR [rsi-0x45291f12],bl
  42ba48:	mov    edx,0xa0a0a0a0
  42ba4d:	movabs al,ds:0xa3f2e94b4ffb0a0
  42ba56:	add    BYTE PTR [rax],al
  42ba58:	shr    BYTE PTR [ebx+0x67],0x5e
  42ba5d:	(bad)  
  42ba5e:	add    BYTE PTR [rax],al
  42ba60:	add    BYTE PTR [rax],al
  42ba62:	add    BYTE PTR [rsi-0x190d0d09],bl
  42ba68:	in     eax,0xe4
  42ba6a:	fcmovnu st,st(1)
  42ba6c:	mov    esp,0xffb6a1bb
  42ba71:	rcl    DWORD PTR [rcx+rsi*1+0x99c],1
  42ba78:	outs   dx,BYTE PTR ds:[rsi]
  42ba79:	ret    0x6f70
  42ba7c:	pop    rdi
  42ba7d:	sbb    BYTE PTR [rax],al
  42ba7f:	add    BYTE PTR [rax],al
  42ba81:	add    BYTE PTR [rax],al
  42ba83:	sahf   
  42ba84:	push   rdx
  42ba86:	repnz in al,dx
  42ba88:	in     al,dx
  42ba89:	in     al,0xe4
  42ba8b:	fstp   TBYTE PTR [rcx+rsi*4-0x280049ce]
  42ba92:	movabs ds:0x72c56f00000b2436,al
  42ba9b:	jno    0x42bb03
  42ba9d:	sbb    DWORD PTR [rax],eax
  42ba9f:	add    BYTE PTR [rax],al
  42baa1:	add    BYTE PTR [rax],al
  42baa3:	sahf   
  42baa4:	push   rdi
  42baa6:	cmc    
  42baa7:	repnz in al,dx
  42baa9:	out    0xe4,al
  42baab:	fdivr  QWORD PTR [rcx-0x2e59ce]
  42bab1:	jrcxz  0x42ba90
  42bab3:	sar    BYTE PTR [rsi],1
  42bab5:	(bad)  
  42bab6:	add    BYTE PTR [rax],al
  42bab8:	jno    0x42ba80
  42baba:	mov    esi,0x496a77
  42babf:	add    BYTE PTR [rax],al
  42bac1:	add    BYTE PTR [rax],al
  42bac3:	lahf   
  42bac4:	(bad)  
  42bac5:	push   rdi
  42bac7:	repnz repnz in al,dx
  42baca:	out    0xe4,al
  42bacc:	xchg   ebx,eax
  42bacd:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  42bace:	jmp    0x42bacf
  42bad0:	(bad)  
  42bad1:	(bad)  
  42bad2:	(bad)  
  42bad3:	jmp    0x42ba8a
  42bad5:	cmp    cl,BYTE PTR [rbp-0x3e388e00]
  42badb:	shr    BYTE PTR [rsi+0x4a],0x0
  42badf:	add    BYTE PTR [rax],al
  42bae1:	add    BYTE PTR [rax],al
  42bae3:	stos   BYTE PTR es:[rdi],al
  42bae4:	(bad)  
  42bae5:	push   rdi
  42bae7:	div    edx
  42bae9:	out    dx,al
  42baea:	in     al,dx
  42baeb:	in     eax,0xa3
  42baed:	(bad)  
  42baee:	push   QWORD PTR [rsi+rbp*1-0x14006cd2]
  42baf5:	xchg   DWORD PTR [rdi],eax
  42baf7:	add    BYTE PTR [rdi-0x38],dh
  42bafa:	(bad)
  42bafe:	add    BYTE PTR [rax],al
  42bb00:	add    BYTE PTR [rax],al
  42bb02:	add    BYTE PTR [rdx-0x1],ch
  42bb08:	cmc    
  42bb09:	repnz in al,dx
  42bb0b:	out    0xa6,al
  42bb0d:	call   rdi
  42bb0f:	and    DWORD PTR [rcx-0x225e48],esi
  42bb15:	xchg   ebx,eax
  42bb16:	or     eax,DWORD PTR [rax]
  42bb18:	ror    cl,0xc9
  42bb1b:	enter  0x4c6f,0x0
  42bb1f:	add    BYTE PTR [rax],al
  42bb21:	add    BYTE PTR [rax],al
  42bb23:	stos   BYTE PTR es:[rdi],al
  42bb24:	(bad)  
  42bb25:	(bad)  
  42bb26:	(bad)  
  42bb27:	push   rdi
  42bb29:	cmc    
  42bb2a:	repnz in al,dx
  42bb2c:	test   eax,0xbc1fd2ff
  42bb31:	mov    ebx,0x8fffb2b8
  42bb36:	and    DWORD PTR [rax],eax
  42bb38:	shl    ah,0xf3
  42bb3b:	out    0xc8,eax
  42bb3d:	rex.WR add BYTE PTR [rax],r8b
  42bb40:	add    BYTE PTR [rax],al
  42bb42:	add    BYTE PTR [rdx-0x1],ch
  42bb48:	div    edi
  42bb4a:	repnz repnz mov al,0xff
  42bb4e:	call   QWORD PTR [rbx-0xcd43e1]
  42bb54:	call   QWORD PTR [rbx+0x33c60095]
  42bb5a:	lea    esi,[rdi]
  42bb5c:	add    DWORD PTR [rsi+0x0],ecx
  42bb5f:	add    BYTE PTR [rax],al
  42bb61:	add    BYTE PTR [rax],al
  42bb63:	stos   BYTE PTR es:[rdi],al
  42bb64:	(bad)  
  42bb65:	(bad)  
  42bb66:	(bad)  
  42bb67:	(bad)  
  42bb68:	(bad)  
  42bb69:	push   rbp
  42bb6b:	repnz loop 0x42bb17
  42bb6e:	(bad)  
  42bb6f:	jmp    QWORD PTR [rcx]
  42bb71:	mov    esp,0x88a6ffff
  42bb76:	add    BYTE PTR [rax],al
  42bb78:	add    BYTE PTR [rax],dh
  42bb7a:	(bad)  
  42bb7b:	add    BYTE PTR [rcx],0x0
  42bb7e:	add    BYTE PTR [rax],al
  42bb80:	add    BYTE PTR [rax],al
  42bb82:	add    BYTE PTR [rdx-0x1],ch
  42bb88:	(bad)  
  42bb89:	push   rdi
  42bb8b:	cmc    
  42bb8c:	repnz fsub DWORD PTR [rbx+rcx*4-0x765b24c2]
  42bb94:	ds sub al,0x0
  42bb97:	add    BYTE PTR [rax],al
  42bb99:	jge    0x42bb78
  42bb9b:	add    DWORD PTR [rdx],0x0
  42bba1:	add    BYTE PTR [rax],al
  42bba3:	stos   BYTE PTR es:[rdi],al
  42bba4:	(bad)  
  42bba5:	(bad)  
  42bba6:	(bad)  
  42bba7:	(bad)  
  42bba8:	(bad)  
  42bba9:	(bad)  
  42bbaa:	push   rdi
  42bbac:	repnz repnz in al,dx
  42bbaf:	in     eax,0xe4
  42bbb1:	(bad)  
  42bbb3:	mov    esp,0x2bb7
  42bbb8:	add    BYTE PTR [rdi-0x21],bh
  42bbbb:	(bad)  
  42bbbc:	sbb    al,BYTE PTR [rax]
  42bbbe:	add    BYTE PTR [rax],al
  42bbc0:	add    BYTE PTR [rax],al
  42bbc2:	add    BYTE PTR [rdx-0x1],ch
  42bbc8:	(bad)  
  42bbc9:	(bad)  
  42bbca:	push   rdi
  42bbcc:	div    edx
  42bbce:	out    dx,al
  42bbcf:	in     al,dx
  42bbd0:	in     eax,0xe4
  42bbd2:	fld    TBYTE PTR [rbp+rbp*1+0x25]
  42bbd9:	mov    bh,cl
  42bbdb:	nop
  42bbdc:	(bad)  
  42bbdd:	add    BYTE PTR [rax],al
  42bbdf:	add    BYTE PTR [rdx],al
  42bbe1:	add    eax,DWORD PTR [rax]
  42bbe3:	stos   BYTE PTR es:[rdi],al
  42bbe4:	(bad)  
  42bbe5:	(bad)  
  42bbe6:	(bad)  
  42bbe7:	(bad)  
  42bbe8:	(bad)  
  42bbe9:	(bad)  
  42bbea:	(bad)  
  42bbeb:	push   rdi
  42bbed:	div    ebp
  42bbef:	in     al,dx
  42bbf0:	in     al,dx
  42bbf1:	in     al,0xe4
  42bbf3:	mov    edi,edx
  42bbf5:	scas   al,BYTE PTR es:[rdi]
  42bbf6:	test   BYTE PTR [rsp+rcx*4],dh
  42bbf9:	(bad)  
  42bbfa:	rcr    BYTE PTR [rcx+0x1b1b1b28],cl
  42bc00:	sbb    ebx,DWORD PTR [rax+rax*1]
  42bc03:	stos   DWORD PTR es:[rdi],eax
  42bc04:	(bad)  
  42bc05:	(bad)  
  42bc06:	(bad)  
  42bc07:	(bad)  
  42bc08:	(bad)  
  42bc09:	(bad)  
  42bc0a:	(bad)  
  42bc0b:	(bad)  
  42bc0c:	push   rdi
  42bc0e:	div    edx
  42bc10:	in     al,dx
  42bc11:	out    0xe4,al
  42bc13:	mov    edi,edi
  42bc15:	fbstp  TBYTE PTR [rbp+rbx*8-0x4f2e205a]
  42bc1c:	test   BYTE PTR [rbp*1+0x82229b],dh
  42bc23:	stos   DWORD PTR es:[rdi],eax
  42bc24:	(bad)  
  42bc25:	(bad)  
  42bc26:	(bad)  
  42bc27:	(bad)  
  42bc28:	push   rsi
  42bc2a:	out    0xe1,al
  42bc2c:	mov    esp,0xe0d6bad6
  42bc31:	out    dx,al
  42bc32:	out    dx,al
  42bc33:	mov    edi,edi
  42bc35:	jmp    0x42bc16
  42bc37:	mov    ch,0xd7
  42bc39:	(bad)  
  42bc3a:	out    dx,eax
  42bc3b:	xlat   BYTE PTR ds:[rbx]
  42bc3c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42bc3d:	xchg   esi,eax
  42bc3e:	fidiv  WORD PTR [rbx]
  42bc40:	(bad)  
  42bc41:	add    BYTE PTR [rax],al
  42bc43:	stos   DWORD PTR es:[rdi],eax
  42bc44:	(bad)  
  42bc45:	(bad)  
  42bc46:	(bad)  
  42bc47:	push   QWORD PTR [rbp+rcx*2+0x4d]
  42bc4b:	rex.WRB
  42bc4c:	es es sub DWORD PTR es:[rax-0x761143],ecx
  42bc55:	call   FWORD PTR [rax-0xa2859]
  42bc5b:	out    dx,eax
  42bc5c:	jmp    0x42bc48
  42bc5e:	jle    0x42bc99
  42bc60:	add    BYTE PTR [rax],al
  42bc62:	add    BYTE PTR [rbx-0x1],ch
  42bc68:	jne    0x42bc38
  42bc6a:	int    0x7c
  42bc6c:	jp     0x42bce8
  42bc6e:	jbe    0x42bce6
  42bc70:	sub    DWORD PTR [rbp+0x369db3ee],edi
  42bc76:	add    BYTE PTR [rax],al
  42bc78:	fisttp QWORD PTR [rsi+0x7e83838e]
  42bc7e:	jle    0x42bc80
  42bc80:	add    BYTE PTR [rax],al
  42bc82:	add    BYTE PTR [rbx-0x1],ch
  42bc88:	xchg   edi,eax
  42bc89:	retf   
  42bc8a:	(bad)  
  42bc8b:	je     0x42bd03
  42bc8d:	jl     0x42bd0a
  42bc8f:	je     0x42bcb7
  42bc91:	loope  0x42bc7f
  42bc93:	fdivr  QWORD PTR [rbx+0x35]
	...
  42bca1:	add    BYTE PTR [rax],al
  42bca3:	stos   DWORD PTR es:[rdi],eax
  42bca4:	(bad)  
  42bca5:	(bad)  
  42bca6:	(bad)  
  42bca7:	(bad)  
  42bca8:	call   0x73908b22
  42bcad:	je     0x42bc7b
  42bcaf:	rex.WRB (bad) 
  42bcb1:	cmc    
  42bcb2:	repnz div esi
  42bcb5:	xor    eax,0x0
	...
  42bcc2:	add    BYTE PTR [rax],al
  42bcc4:	shr    BYTE PTR [rcx+0x75aaabab],1
  42bcca:	retf   
  42bccb:	(bad)  
  42bccc:	(bad)  
  42bccd:	(bad)  
  42bcce:	retf   0x9e73
  42bcd1:	lahf   
  42bcd2:	sahf   
  42bcd3:	sahf   
  42bcd4:	sahf   
	...
  42bce9:	add    BYTE PTR [rdi+0x73747597],dl
	...
  42bd1f:	add    BYTE PTR [rax],al
  42bd21:	add    bh,bh
  42bd23:	cld    
  42bd24:	jle    0x42bd45
  42bd26:	(bad)  
  42bd27:	clc    
  42bd28:	cmp    al,0xf
  42bd2a:	(bad)  
  42bd2b:	clc    
  42bd2c:	cmp    al,0xf
  42bd2e:	(bad)  
  42bd2f:	clc    
  42bd30:	cmp    al,0xf
  42bd32:	(bad)  
  42bd33:	clc    
  42bd34:	cmp    al,0xf
  42bd36:	(bad)  
  42bd37:	clc    
  42bd38:	cmp    al,0xf
  42bd3a:	(bad)  
  42bd3b:	clc    
  42bd3c:	cmp    al,0xf
  42bd3e:	(bad)  
  42bd3f:	clc    
  42bd40:	cmp    al,0xf
  42bd42:	add    BYTE PTR [rax],0xc
  42bd45:	jo     0xffffffff8051c94b
  42bd4b:	add    BYTE PTR [rdi+rcx*1],cl
  42bd4e:	add    BYTE PTR [rax],0xc
  42bd51:	jo     0xffffffff8051c957
  42bd57:	add    BYTE PTR [rdi+rcx*1],al
  42bd5a:	add    BYTE PTR [rax],0x4
  42bd5d:	jo     0xffffffff8051c163
  42bd63:	add    BYTE PTR [rdi+rcx*1],al
  42bd66:	add    BYTE PTR [rax],0x4
  42bd69:	jo     0xffffffff8061cb6f
  42bd6f:	add    BYTE PTR [rsi],cl
  42bd71:	(bad)  
  42bd72:	add    BYTE PTR [rax],0xe
  42bd75:	(bad)  
  42bd76:	add    BYTE PTR [rax],0xe
  42bd79:	sbb    al,0x80
  42bd7b:	add    BYTE PTR [rax],al
  42bd7d:	add    BYTE PTR [rax-0x80000000],al
  42bd83:	add    BYTE PTR [rax],al
  42bd85:	add    DWORD PTR [rax-0x7ffd0000],eax
  42bd8b:	add    BYTE PTR [rdi+rax*1],cl
  42bd8e:	add    BYTE PTR [rax],0xf
  42bd91:	inc    DWORD PTR [rax-0x3f00f100]
  42bd97:	add    BYTE PTR [rdi],bl
  42bd99:	(bad)  
  42bd9a:	inc    DWORD PTR [rdi]
  42bd9c:	(bad)  
  42bd9d:	(bad)  
  42bd9e:	(bad)  
  42bd9f:	(bad)  
  42bda0:	(bad)  
  42bda1:	jmp    FWORD PTR [rax]
  42bda3:	add    BYTE PTR [rax],al
  42bda5:	add    BYTE PTR [rax],dl
  42bda7:	add    BYTE PTR [rax],al
  42bda9:	add    BYTE PTR [rax],ah
  42bdab:	add    BYTE PTR [rax],al
  42bdad:	add    BYTE PTR [rcx],al
  42bdaf:	add    BYTE PTR [rax],cl
  42bdb1:	add    BYTE PTR [rax],al
  42bdb3:	add    BYTE PTR [rax],al
  42bdb5:	add    BYTE PTR [rax],al
  42bdb7:	add    DWORD PTR [rax],eax
	...
  42bdc1:	add    BYTE PTR [rax],al
  42bdc3:	add    DWORD PTR [rax],eax
  42bdc5:	add    BYTE PTR [rax],al
  42bdc7:	add    DWORD PTR [rax],eax
  42bdc9:	add    BYTE PTR [rax],al
  42bdcb:	add    BYTE PTR [rax],al
  42bdcd:	add    BYTE PTR [rcx+0x4b],bl
  42bdd0:	cmp    al,0x0
  42bdd2:	movsxd edx,DWORD PTR [rbx+0x43]
  42bdd5:	add    BYTE PTR [rsi+0x55],ch
  42bdd8:	add    BYTE PTR [r15+0x5d],bpl
  42bddc:	rex.WR add BYTE PTR [rax+0x56],r14b
  42bde0:	add    BYTE PTR [rcx+r9*2+0x51],spl
  42bde5:	add    BYTE PTR [rcx+0x60],bh
  42bde8:	rex.WRB add BYTE PTR [r8+0x6c],r11b
  42bdec:	jnp    0x42bdee
  42bdee:	pop    rdx
  42bdef:	jno    0x42be6e
  42bdf1:	add    BYTE PTR [rbx+0x6f],bh
  42bdf4:	add    BYTE PTR gs:[rbx+0x70],bh
  42bdf8:	data16 add BYTE PTR [rbx+0x77],bh
  42bdfc:	jae    0x42bdfe
  42bdfe:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  42bdff:	pop    rcx
  42be00:	xor    eax,DWORD PTR [rax]
  42be02:	stos   BYTE PTR es:[rdi],al
  42be03:	pop    rbp
  42be04:	cmp    BYTE PTR [rax],al
  42be06:	scas   eax,DWORD PTR es:[rdi]
  42be07:	(bad)  
  42be08:	cmp    al,0x0
  42be0a:	mov    cl,0x60
  42be0c:	cmp    DWORD PTR [rax],eax
  42be0e:	lods   eax,DWORD PTR ds:[rsi]
  42be0f:	imul   ecx,DWORD PTR [rax+0x0],0x4368b6
  42be16:	mov    eax,0xbe004d6f
  42be1b:	jno    0x42be68
  42be1d:	add    BYTE PTR [rbx-0x48ffb390],bh
  42be23:	je     0x42be78
  42be25:	add    BYTE PTR [rdi-0x46ffa989],bh
  42be2b:	js     0x42be85
  42be2d:	add    BYTE PTR [rsi-0x7fffa787],bh
  42be33:	jl     0x42bead
  42be35:	add    ah,al
  42be37:	jbe    0x42be8a
  42be39:	add    dl,cl
  42be3b:	jge    0x42be95
  42be3d:	add    bh,cl
  42be3f:	sbb    DWORD PTR [rdi+0x0],0xffffffd5
  42be43:	mov    ah,BYTE PTR [rsi+0x0]
  42be46:	ror    DWORD PTR [rbx-0x6c23ff95],1
  42be4c:	jno    0x42be4e
  42be4e:	loopne 0x42bde9
  42be50:	js     0x42be52
  42be52:	loope  0x42bdf3
  42be54:	jg     0x42be56
  42be56:	out    0x9f,eax
  42be58:	jge    0x42be5a
  42be5a:	out    0xa0,al
  42be5c:	jle    0x42be5e
  42be5e:	jmp    0x29433e04
  42be63:	adc    al,BYTE PTR [rax-0x71ecd200]
  42be69:	add    BYTE PTR [rsi],ch
  42be6b:	adc    al,0x8f
  42be6d:	add    BYTE PTR [rbx],dh
  42be6f:	and    BYTE PTR [rsi-0x52d1c800],bl
  42be75:	add    BYTE PTR [rsi],bh
  42be77:	cmp    eax,0x735d00bf
  42be7c:	add    DWORD PTR [rax],0x887d63
  42be82:	sub    al,0x32
  42be84:	(bad)  
  42be85:	add    BYTE PTR [rdi],bh
  42be87:	rex.RB rol DWORD PTR [r8],cl
  42be8a:	rex.XB
  42be8b:	rex.WR (bad) 
  42be8d:	add    BYTE PTR [rax+0x59],cl
  42be90:	fld    QWORD PTR [rax]
  42be92:	push   rdx
  42be93:	pop    rax
  42be94:	fadd   DWORD PTR [rax]
  42be96:	ins    BYTE PTR es:[edi],dx
  42be98:	fild   WORD PTR [rax]
  42be9a:	gs xchg ebp,eax
  42be9c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42be9d:	add    BYTE PTR [rdi+rbx*4-0x57],bh
  42bea1:	add    BYTE PTR [rbx-0x80],bh
  42bea4:	in     al,0x0
  42bea6:	jno    0x42be6d
  42bea8:	fld    DWORD PTR [rax]
  42beaa:	mov    al,BYTE PTR [rsi-0x665eff7e]
  42beb0:	pop    QWORD PTR [rax]
  42beb2:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  42beb3:	fwait
  42beb4:	xchg   ebp,eax
  42beb5:	add    BYTE PTR [rsi-0x40ff6556],dh
  42bebb:	lods   al,BYTE PTR ds:[rsi]
  42bebc:	sahf   
  42bebd:	add    BYTE PTR [rdx-0x53ff495a],al
  42bec3:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  42bec4:	movabs eax,ds:0xa1a9b400a5aaaf00
  42becd:	add    BYTE PTR [rsi-0x40ff454d],ah
  42bed3:	mov    edx,0xbbb800b3
  42bed8:	mov    ch,0x0
  42beda:	(bad)  
  42bedb:	scas   eax,DWORD PTR es:[rdi]
  42bedc:	fwait
  42bedd:	add    bh,bh
  42bedf:	mov    bl,0x8b
  42bee1:	add    bh,bh
  42bee3:	mov    eax,0xbeff0094
  42bee8:	sahf   
  42bee9:	add    dl,al
  42beeb:	scas   al,BYTE PTR es:[rdi]
  42beec:	movabs al,ds:0xa7b5c900a3b2c600
  42bef5:	add    ch,cl
  42bef7:	mov    edx,0xb6d400ab
  42befc:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  42befd:	add    cl,dl
  42beff:	mov    esp,0xbedc00ae
  42bf04:	scas   al,BYTE PTR es:[rdi]
  42bf05:	add    cl,al
  42bf07:	mov    ecx,0xc0d500b1
  42bf0c:	mov    cl,0x0
  42bf0e:	xlat   BYTE PTR ds:[rbx]
  42bf0f:	ret    
  42bf10:	mov    ah,0x0
  42bf12:	fld    st(4)
  42bf14:	mov    dh,0x0
  42bf16:	inc    dh
  42bf18:	test   eax,0xb3c4e500
  42bf1d:	add    bh,bh
  42bf1f:	int    0xb4
  42bf21:	add    ch,bh
  42bf23:	(bad)  
  42bf24:	mov    esi,0xc2b38b00
  42bf29:	add    BYTE PTR [rsi-0x71ff3747],cl
  42bf2f:	xchg   ebx,eax
  42bf30:	jmp    0xffffffffeee65d35
  42bf35:	add    BYTE PTR [rcx-0x72ff0b53],ah
  42bf3b:	(bad)  
  42bf3c:	fild   DWORD PTR [rax]
  42bf3e:	xchg   esp,eax
  42bf3f:	fsub   st,st(4)
  42bf41:	add    BYTE PTR [rbx-0x5dff1f28],bl
  42bf47:	(bad)  
  42bf48:	cmc    
  42bf49:	add    BYTE PTR [rdx+rbp*8-0x3b3aff10],ch
  42bf50:	ret    
  42bf51:	add    dl,dl
  42bf53:	int3   
  42bf54:	(bad)  
  42bf55:	add    bl,al
  42bf57:	int3   
  42bf58:	rol    DWORD PTR [rax],1
  42bf5a:	not    ch
  42bf5c:	(bad)  
  42bf5d:	add    ch,bh
  42bf5f:	fadd   st,st(3)
  42bf61:	add    dh,ch
  42bf63:	(bad)  
  42bf65:	add    cl,ah
  42bf67:	(bad)  
  42bf69:	add    ch,bh
  42bf6b:	loope  0x42bf3f
  42bf6d:	add    cl,dh
  42bf6f:	jrcxz  0x42bf4e
  42bf71:	add    bl,al
  42bf73:	retf   0xf8
  42bf76:	loope  0x42bf58
  42bf78:	loopne 0x42bf7a
  42bf7a:	(bad)  
  42bf7b:	in     al,dx
  42bf7c:	out    0x0,al
  42bf7e:	sti    
  42bf7f:	out    dx,al
  42bf80:	out    0x0,al
  42bf82:	hlt    
  42bf83:	lock jmp 0xffffffffec35bc89
  42bf89:	add    dl,dh
  42bf8b:	icebp  
  42bf8c:	hlt    
  42bf8d:	add    ch,bh
  42bf8f:	clc    
  42bf90:	test   BYTE PTR [rax],0xfe
  42bf93:	cld    
  42bf94:	sti    
  42bf95:	add    dh,bh
  42bf97:	(bad)  
  42bf98:	inc    BYTE PTR [rax]
	...
  42c1c6:	(bad)  
  42c1c7:	(bad)  
  42c1c8:	inc    DWORD PTR [rax]
  42c1ca:	add    BYTE PTR [rax],al
  42c1cc:	add    BYTE PTR [rax],al
  42c1ce:	add    BYTE PTR [rax],bl
  42c1d0:	adc    BYTE PTR [rip+0x26000000],cl        # 0x2642c1d6
  42c1d6:	add    BYTE PTR es:[rax],al
  42c1d9:	add    BYTE PTR [rax],al
  42c1db:	add    BYTE PTR [rax],al
  42c1dd:	add    BYTE PTR [rax],al
  42c1df:	adc    eax,0xe45
  42c1e4:	sub    BYTE PTR cs:[rax],ch
  42c1e7:	sub    BYTE PTR [rax],al
  42c1e9:	add    BYTE PTR [rax],al
  42c1eb:	add    BYTE PTR [rax],al
  42c1ed:	add    BYTE PTR [rax],al
  42c1ef:	sbb    eax,DWORD PTR [rsi+0xf]
  42c1f2:	add    BYTE PTR [rax],al
  42c1f4:	(bad)  
  42c1f5:	sub    DWORD PTR [rcx],ebp
  42c1f7:	sub    BYTE PTR [rax],al
  42c1f9:	add    BYTE PTR [rax],al
  42c1fb:	add    BYTE PTR [rax],al
  42c1fd:	add    BYTE PTR [rax],al
  42c1ff:	sbb    al,0x47
  42c201:	adc    al,BYTE PTR [rax]
  42c203:	add    BYTE PTR [rdx],dh
  42c205:	sub    ch,BYTE PTR [rdx]
  42c207:	sub    BYTE PTR [rax],al
  42c209:	add    BYTE PTR [rax],al
  42c20b:	(bad)  
  42c20c:	add    eax,DWORD PTR [rbx]
  42c20e:	add    ebx,DWORD PTR [rip+0x5051553]        # 0x547d767
  42c214:	xor    ebp,DWORD PTR [rbx]
  42c216:	sub    ebp,DWORD PTR [rax]
  42c218:	add    BYTE PTR [rax],al
  42c21a:	cmp    al,0x71
  42c21c:	rex.WRX
  42c21d:	rex.WRX
  42c21e:	rex.R (bad) 
  42c220:	push   rbp
  42c221:	(bad)  
  42c222:	rex.R
  42c223:	rex.WR
  42c224:	xor    BYTE PTR ss:[rax],dh
  42c227:	sub    DWORD PTR [rax],eax
  42c229:	add    BYTE PTR [rax+0x72],cl
  42c22c:	jno    0x42c294
  42c22e:	and    BYTE PTR [rax+0x68],ch
  42c231:	push   rsi
  42c232:	adc    DWORD PTR [rcx+0x59],ebp
  42c235:	xor    DWORD PTR [rcx],esi
  42c237:	sub    DWORD PTR [rax],eax
  42c239:	add    BYTE PTR [rcx+0x72],cl
  42c23c:	jb     0x42c262
  42c23e:	outs   dx,DWORD PTR ds:[rsi]
  42c23f:	fs (bad) 
  42c241:	ins    DWORD PTR es:[rdi],dx
  42c242:	adc    ebx,DWORD PTR gs:[rdx+0x6a]
  42c246:	pop    rbx
  42c247:	sub    DWORD PTR [rax],eax
  42c249:	add    BYTE PTR [rdx+0x72],cl
  42c24c:	jb     0x42c272
  42c24e:	ins    DWORD PTR es:[rdi],dx
  42c24f:	and    DWORD PTR [rdx+0x1f],esi
  42c252:	push   rsp
  42c253:	sbb    eax,DWORD PTR [rsi]
  42c255:	or     eax,DWORD PTR [rdx]
  42c257:	add    BYTE PTR [rax],al
  42c259:	add    BYTE PTR [rbx+0x72],cl
  42c25c:	jb     0x42c2c7
  42c25e:	and    al,0x24
  42c260:	jb     0x42c283
  42c262:	sbb    BYTE PTR [rcx+0x72],ch
  42c265:	rex.X add DWORD PTR [rax],eax
  42c268:	add    BYTE PTR [rax],al
  42c26a:	rex.WRB jb 0x42c2df
  42c26d:	jb     0x42c2e1
  42c26f:	jb     0x42c2e3
  42c271:	jb     0x42c2ab
  42c273:	cmp    BYTE PTR [rdx+0x40],dh
  42c276:	add    al,BYTE PTR [rax]
  42c278:	add    BYTE PTR [rax+rdx*2],al
  42c27b:	jb     0x42c2ef
  42c27d:	jb     0x42c2ea
  42c27f:	imul   ebp,DWORD PTR [rbx+0x70],0x38
  42c283:	cmp    al,0x2
  42c285:	cmp    DWORD PTR [r12+r8*1],ecx
  42c289:	cmp    dl,BYTE PTR [rax+0x72]
  42c28c:	jb     0x42c2bb
  42c28e:	sub    al,0x2c
  42c290:	or     BYTE PTR [rbx+0x38],ah
  42c293:	outs   dx,BYTE PTR ds:[rsi]
  42c294:	or     ebp,DWORD PTR [rdx+riz*2+0x3f]
  42c298:	sbb    al,BYTE PTR [rax]
  42c29a:	push   rdx
  42c29b:	jb     0x42c30f
  42c29d:	xor    eax,0x63375c5e
  42c2a2:	cmp    BYTE PTR [rax],bh
  42c2a4:	jb     0x42c2e8
  42c2a6:	cmp    BYTE PTR ds:[rax],al
  42c2a9:	add    BYTE PTR [rax],al
  42c2ab:	push   rdx
  42c2ac:	push   rax
  42c2ad:	xor    al,0x60
  42c2af:	pop    rdi
  42c2b0:	pop    rbp
  42c2b1:	rex.B (bad) 
  42c2b3:	(bad)  
	...
  42c2bc:	add    BYTE PTR [rax],al
  42c2be:	pop    rax
  42c2bf:	push   rdi
  42c2c0:	cmp    eax,0x0
  42c2c5:	add    BYTE PTR [rax],al
  42c2c7:	add    BYTE PTR [rax],al
  42c2c9:	add    al,bh
  42c2cb:	out    0x0,eax
  42c2cd:	add    al,bh
  42c2cf:	ret    
  42c2d0:	add    BYTE PTR [rax],al
  42c2d2:	clc    
  42c2d3:	ret    
  42c2d4:	add    BYTE PTR [rax],al
  42c2d6:	clc    
  42c2d7:	ret    
  42c2d8:	add    BYTE PTR [rax],al
  42c2da:	add    BYTE PTR [rbx],0x0
  42c2dd:	add    BYTE PTR [rax],al
  42c2df:	add    eax,DWORD PTR [rax]
  42c2e1:	add    BYTE PTR [rax],al
  42c2e3:	add    eax,DWORD PTR [rax]
  42c2e5:	add    BYTE PTR [rax],al
  42c2e7:	add    eax,DWORD PTR [rax]
  42c2e9:	add    BYTE PTR [rax],al
  42c2eb:	(bad)  
  42c2ec:	add    BYTE PTR [rax],al
  42c2ee:	add    BYTE PTR [rdi],al
  42c2f0:	add    BYTE PTR [rax],al
  42c2f2:	add    BYTE PTR [rsi],al
  42c2f4:	add    BYTE PTR [rax],al
  42c2f6:	add    BYTE PTR [rax],al
  42c2f8:	add    BYTE PTR [rax],al
  42c2fa:	add    BYTE PTR [rcx],al
  42c2fc:	add    BYTE PTR [rax],al
  42c2fe:	add    BYTE PTR [rbx],al
  42c300:	add    BYTE PTR [rax],al
  42c302:	cmp    BYTE PTR [rdi],0x0
  42c305:	add    cl,dh
  42c307:	inc    DWORD PTR [rax]
  42c309:	add    BYTE PTR [rax],ch
  42c30b:	add    BYTE PTR [rax],al
  42c30d:	add    BYTE PTR [rax],ah
  42c30f:	add    BYTE PTR [rax],al
  42c311:	add    BYTE PTR [rax+0x0],al
  42c314:	add    BYTE PTR [rax],al
  42c316:	add    DWORD PTR [rax],eax
  42c318:	and    BYTE PTR [rax],al
  42c31a:	add    BYTE PTR [rax],al
  42c31c:	add    BYTE PTR [rax],al
  42c31e:	adc    BYTE PTR [rax],0x0
	...
  42c365:	add    BYTE PTR [rcx+0x79387888],ah
  42c36b:	(bad)  
  42c36c:	rex.WRB push QWORD PTR [r14+0x5c]
  42c370:	rex.W push QWORD PTR [rdx+0x58]
  42c374:	rex.R jmp QWORD PTR [rcx+0x387888]
	...
  42c387:	add    BYTE PTR [rax],al
  42c389:	add    BYTE PTR [rcx],bl
  42c38b:	(bad)  
  42c38c:	lods   al,BYTE PTR ds:[rsi]
  42c38d:	rex.RX (bad) 
  42c38f:	and    eax,0x212bff6d
  42c394:	push   0xffffffffffffffff
  42c396:	sub    DWORD PTR [rsi],ebx
  42c398:	push   0x641b26ff
  42c39d:	call   FWORD PTR [rax+rdx*1]
  42c3a0:	pop    rdx
  42c3a1:	rex.RX add BYTE PTR [rax],r8b
	...
  42c3e4:	add    BYTE PTR [rax],al
  42c3e6:	pushf  
  42c3e7:	sub    DWORD PTR [rdi-0x1],0xffe2e5ed
  42c3ee:	rol    edx,cl
  42c3f0:	mov    eax,0x95a4bcff
  42c3f5:	jmp    QWORD PTR [rcx+rcx*2+0x34]
  42c3f9:	inc    DWORD PTR [rax]
	...
  42c407:	add    BYTE PTR [rax],al
  42c409:	add    BYTE PTR [rcx],ah
  42c40b:	(bad)  
  42c40c:	retf   0x19ff
  42c40f:	(bad)  
  42c410:	lods   al,BYTE PTR ds:[rsi]
  42c411:	call   FWORD PTR [rax]
  42c413:	sbb    eax,0x1c17ffab
  42c418:	stos   BYTE PTR es:[rdi],al
  42c419:	call   QWORD PTR [rsi]
  42c41b:	sbb    ebp,DWORD PTR [rdx+0x5a101cff]
  42c421:	inc    DWORD PTR [rax]
	...
  42c463:	add    BYTE PTR [rax],al
  42c465:	add    BYTE PTR [rcx-0x8a79],ah
  42c46b:	(bad)  
  42c46c:	(bad)  
  42c46d:	call   rbx
  42c46f:	sar    DWORD PTR [rcx-0x6a5b4301],0xff
  42c476:	addr32 rex.WR cmp dil,r15b
	...
  42c48a:	(bad)  
  42c48b:	sub    al,0xcb
  42c48d:	dec    DWORD PTR [rcx+rdx*2-0x2a]
  42c491:	call   QWORD PTR [rdi]
  42c493:	sbb    eax,0x1914ffc7
  42c498:	(bad)  
  42c499:	call   FWORD PTR [rdx]
  42c49b:	and    BYTE PTR [rbp+0x5a101cff],ch
  42c4a1:	inc    DWORD PTR [rax]
	...
  42c4e3:	add    BYTE PTR [rax],al
  42c4e5:	add    BYTE PTR [rdi-0x8373],ah
  42c4eb:	(bad)  
  42c4ec:	(bad)  
  42c4ed:	call   rbx
  42c4ef:	sar    DWORD PTR [rax-0x695c4301],0xff
  42c4f6:	push   0x50
  42c4f8:	cmp    al,0xff
	...
  42c50a:	sub    al,0x32
  42c50c:	int    0xff
  42c50e:	push   rbx
  42c50f:	push   rdi
  42c510:	fdivr  st,st(7)
  42c512:	(bad)  
  42c513:	and    al,0xca
  42c515:	call   FWORD PTR [rdx]
  42c517:	and    al,cl
  42c519:	jmp    QWORD PTR [rax]
  42c51b:	and    eax,0x101cffb0
  42c520:	pop    rdx
  42c521:	inc    DWORD PTR [rax]
	...
  42c563:	add    BYTE PTR [rax],al
  42c565:	add    BYTE PTR [rsi-0x7b6c],ch
  42c56b:	(bad)  
  42c56c:	(bad)  
  42c56d:	call   rbx
  42c56f:	sar    DWORD PTR [rax-0x6a5c4301],0xff
  42c576:	outs   dx,DWORD PTR ds:[rsi]
  42c577:	push   rsp
  42c578:	inc    DWORD PTR [r8]
	...
  42c587:	add    BYTE PTR [rax],al
  42c589:	add    BYTE PTR [rbx],dh
  42c58b:	cmp    bh,cl
  42c58d:	call   FWORD PTR [rdx+0x5e]
  42c590:	fcos   
  42c592:	es sub eax,0x2721ffcb
  42c598:	retf   0x26ff
  42c59b:	sub    esi,DWORD PTR [rdi+rdi*8-0xa5efe4]
	...
  42c5e6:	mov    ch,0x9b
  42c5e8:	mov    edi,?
  42c5ea:	(bad)  
  42c5eb:	(bad)  
  42c5ec:	(bad)  
  42c5ed:	call   rbx
  42c5ef:	ret    0xffb8
  42c5f2:	mov    esp,0x74ff96a3
  42c5f7:	pop    rdx
  42c5f8:	rex.RX inc DWORD PTR [rax]
	...
  42c607:	add    BYTE PTR [rax],al
  42c609:	add    BYTE PTR [rdx],bh
  42c60b:	rex sar edi,1
  42c60e:	(bad)  
  42c60f:	data16 fdiv st(7),st
  42c612:	xor    BYTE PTR [rsi],dh
  42c614:	iret   
  42c615:	jmp    FWORD PTR [rdx]
  42c617:	xor    ch,cl
  42c619:	jmp    FWORD PTR [rdx+rsi*1]
  42c61c:	mov    eax,0x5c131eff
  42c621:	inc    DWORD PTR [rax]
	...
  42c663:	add    BYTE PTR [rax],al
  42c665:	add    BYTE PTR [rbx+riz*4-0x69],bh
  42c66c:	(bad)  
  42c66d:	call   rbx
  42c66f:	ret    0xffb8
  42c672:	mov    esp,0x78ff96a3
  42c677:	(bad)  
  42c678:	rex.WR inc QWORD PTR [rax]
	...
  42c687:	add    BYTE PTR [rax],al
  42c689:	add    BYTE PTR [rcx+0x47],al
  42c68c:	sar    edi,cl
  42c68e:	push   0x6f
  42c690:	fdivp  st(7),st
  42c692:	cmp    al,BYTE PTR [rax-0x2f]
  42c695:	push   QWORD PTR [rcx+rdi*1]
  42c698:	iret   
  42c699:	push   QWORD PTR [rcx+rdi*1]
  42c69c:	mov    ebp,0x601722ff
  42c6a1:	inc    DWORD PTR [rax]
	...
  42c6e3:	add    BYTE PTR [rax],al
  42c6e5:	add    dl,al
  42c6e7:	lods   al,BYTE PTR ds:[rsi]
  42c6e8:	movabs al,ds:0xb9c1d3ffffffffff
  42c6f1:	(bad)  
  42c6f2:	mov    ebx,0x7fff96a4
  42c6f7:	gs push rdx
  42c6f9:	inc    DWORD PTR [rax]
	...
  42c707:	add    BYTE PTR [rax],al
  42c709:	add    BYTE PTR [rax+0x4e],cl
  42c70c:	(bad)  
  42c70d:	push   QWORD PTR [rax+rdi*2-0x1f]
  42c711:	inc    DWORD PTR [rsi+0x4b]
  42c714:	(bad)  
  42c715:	(bad)  
  42c716:	(bad)  
  42c717:	rex.RB sar r15d,cl
  42c71a:	cmp    bh,BYTE PTR [rdi]
  42c71c:	sar    edi,0x27
  42c71f:	sbb    al,0x65
  42c721:	inc    DWORD PTR [rax]
	...
  42c733:	add    BYTE PTR [rax],al
  42c735:	add    al,cl
  42c737:	(bad)  
  42c738:	sar    edi,1
  42c73a:	pop    QWORD PTR [rcx+0x6282ff78]
  42c740:	rex.WRB push QWORD PTR [r8+0x52]
  42c744:	(bad)  
  42c745:	push   QWORD PTR [rax+0x52]
  42c748:	(bad)  
  42c749:	push   QWORD PTR [rax+0x52]
  42c74c:	(bad)  
  42c74d:	push   QWORD PTR [rax+0x52]
  42c750:	(bad)  
  42c751:	push   QWORD PTR [rax+0x52]
  42c754:	(bad)  
  42c755:	push   QWORD PTR [rax+0x52]
  42c758:	(bad)  
  42c759:	push   QWORD PTR [rax+0x52]
  42c75c:	(bad)  
  42c75d:	push   QWORD PTR [rax+0x52]
  42c760:	(bad)  
  42c761:	push   QWORD PTR [rax+0x4f]
  42c764:	xor    bh,bh
  42c766:	leave  
  42c767:	mov    ah,0xa9
  42c769:	(bad)  
  42c76a:	(bad)  
  42c76b:	(bad)  
  42c76c:	(bad)  
  42c76d:	call   rbx
  42c76f:	sar    DWORD PTR [rax-0x6a5c4301],0xff
  42c776:	sub    DWORD PTR [rbx+0x59],0xffffffff
  42c77a:	(bad)  
  42c77b:	rex.RXB (bad) 
  42c77d:	dec    DWORD PTR [rdi+0xff7881]
  42c783:	add    BYTE PTR [rax],al
  42c785:	add    BYTE PTR [rax],al
  42c787:	add    BYTE PTR [rax],al
  42c789:	add    BYTE PTR [rax+0x55],dl
  42c78c:	xlat   BYTE PTR ds:[rbx]
  42c78d:	(bad)  
  42c78e:	jl     0x42c710
  42c790:	jrcxz  0x42c791
  42c792:	push   rcx
  42c793:	push   rdi
  42c794:	fdivr  st,st(7)
  42c796:	rex.WXB push r8
  42c798:	(bad)  
  42c799:	inc    DWORD PTR [rcx+0x47]
  42c79c:	vcvttsd2si esp,QWORD PTR [rbx]
  42c7a0:	imul   edi,edi,0x0
	...
  42c7b3:	add    BYTE PTR [rax],al
  42c7b5:	add    al,al
  42c7b7:	scas   eax,DWORD PTR es:[rdi]
  42c7b8:	lahf   
  42c7b9:	(bad)  
  42c7ba:	push   rax
  42c7bc:	loopne 0x42c7bd
  42c7be:	icebp  
  42c7bf:	(bad)  
  42c7c0:	sar    bh,1
  42c7c2:	icebp  
  42c7c3:	iret   
  42c7c4:	sar    bh,0xf1
  42c7c7:	(bad)  
  42c7c8:	mov    al,0xff
  42c7ca:	icebp  
  42c7cb:	(bad)  
  42c7cc:	mov    al,0xff
  42c7ce:	icebp  
  42c7cf:	scas   eax,DWORD PTR es:[rdi]
  42c7d0:	nop
  42c7d1:	push   rcx
  42c7d3:	scas   eax,DWORD PTR es:[rdi]
  42c7d4:	nop
  42c7d5:	push   rcx
  42c7d7:	scas   eax,DWORD PTR es:[rdi]
  42c7d8:	nop
  42c7d9:	push   rcx
  42c7db:	scas   eax,DWORD PTR es:[rdi]
  42c7dc:	nop
  42c7dd:	push   rcx
  42c7df:	scas   eax,DWORD PTR es:[rdi]
  42c7e0:	nop
  42c7e1:	push   rcx
  42c7e3:	scas   eax,DWORD PTR es:[rdi]
  42c7e4:	nop
  42c7e5:	call   rax
  42c7e7:	mov    ebp,0xffffffb4
  42c7ec:	(bad)  
  42c7ed:	call   rbx
  42c7ef:	sar    DWORD PTR [rcx-0x695c4301],0xff
  42c7f6:	mov    dh,BYTE PTR [rcx+0x60]
  42c7f9:	jmp    rdx
  42c7fb:	xchg   edx,eax
  42c7fc:	(bad)  
  42c7fd:	jmp    QWORD PTR [rcx+0x50]
  42c800:	xor    edi,edi
	...
  42c80a:	push   rdi
  42c80b:	pop    rsp
  42c80c:	(bad)  
  42c80e:	xchg   BYTE PTR [rdx+0x635effe6],cl
  42c814:	(bad)  
  42c816:	push   rsi
  42c817:	pop    rsp
  42c818:	(bad)  
  42c81a:	rex.WB
  42c81b:	rex.WRX retf 0x32ff
  42c81f:	sub    DWORD PTR [rcx-0x1],esi
	...
  42c836:	shr    BYTE PTR [rdi-0x6010061],0xf5
  42c83d:	(bad)  
  42c83e:	std    
  42c83f:	cmc    
  42c840:	out    dx,al
  42c841:	(bad)  
  42c842:	cld    
  42c843:	lock call 0xffffffffe22ec448
  42c849:	(bad)  
  42c84a:	cli    
  42c84b:	out    0xd9,eax
  42c84d:	(bad)  
  42c84e:	stc    
  42c84f:	loope  0x42c822
  42c851:	(bad)  
  42c852:	clc    
  42c853:	fmul   st(0),st
  42c855:	push   rdi
  42c857:	(bad)  
  42c858:	sar    bh,0xf6
  42c85b:	sar    DWORD PTR [rax-0x4e330a01],1
  42c861:	jmp    rdx
  42c863:	mov    ecx,0xc8d8ff9e
  42c868:	mov    edi,0xffffffff
  42c86d:	(bad)  
  42c86e:	fcmove st,st(2)
  42c870:	ret    
  42c871:	(bad)  
  42c872:	mov    esp,0x90ff95a3
  42c877:	jns    0x42c8e0
  42c879:	(bad)  
  42c87a:	fild   QWORD PTR [rbp+0x4f70ff8b]
  42c880:	xor    bh,bh
	...
  42c88a:	pop    rdi
  42c88b:	fs fdiv st(7),st
  42c88e:	nop
  42c88f:	xchg   ebx,eax
  42c890:	out    0xff,eax
  42c892:	imul   ebp,DWORD PTR [rdi-0x21],0xdd6863ff
  42c899:	call   QWORD PTR [rax+0x55]
  42c89c:	(bad)  
  42c89d:	(bad)  
  42c89e:	cmp    BYTE PTR [rcx],dh
  42c8a0:	js     0x42c8a1
	...
  42c8b6:	shr    BYTE PTR [rdi-0x5010061],0xf8
  42c8bd:	(bad)  
  42c8be:	(bad)  
  42c8bf:	div    ebx
  42c8c1:	(bad)  
  42c8c2:	std    
  42c8c3:	repz in eax,dx
  42c8c5:	(bad)  
  42c8c6:	cld    
  42c8c7:	out    dx,eax
  42c8c8:	out    0xff,al
  42c8ca:	sti    
  42c8cb:	(bad)  
  42c8cc:	(bad)  
  42c8ce:	cli    
  42c8cf:	in     eax,0xd7
  42c8d1:	(bad)  
  42c8d2:	stc    
  42c8d3:	(bad)  
  42c8d5:	(bad)  
  42c8d6:	clc    
  42c8d7:	fcmovb st,st(6)
  42c8d9:	push   rdi
  42c8db:	(bad)  
  42c8dc:	mov    edi,0xa8bfe3ff
  42c8e1:	call   QWORD PTR [rdi-0x27009181]
  42c8e7:	enter  0xffbf,0xff
  42c8eb:	(bad)  
  42c8ec:	(bad)  
  42c8ed:	jmp    rax
  42c8ef:	ror    ah,cl
  42c8f1:	inc    esi
  42c8f3:	mov    cl,0xa6
  42c8f5:	call   QWORD PTR [rdi+0x7fff6e7f]
  42c8fb:	fs push rdx
  42c8fd:	jmp    FWORD PTR [rsi+0x55]
  42c900:	(bad)  
  42c901:	inc    DWORD PTR [rax]
  42c903:	add    BYTE PTR [rax],al
  42c905:	add    BYTE PTR [rax],al
  42c907:	add    BYTE PTR [rax],al
  42c909:	add    BYTE PTR [rsi+0x6c],ah
  42c90c:	fdivp  st(7),st
  42c90e:	(bad)  
  42c90f:	popf   
  42c910:	jmp    0x42c911
  42c912:	jbe    0x42c98e
  42c914:	jrcxz  0x42c915
  42c916:	outs   dx,DWORD PTR ds:[rsi]
  42c917:	je     0x42c8f9
  42c919:	call   QWORD PTR [rsi+0x5b]
  42c91c:	sar    edi,cl
  42c91e:	(bad)  
  42c91f:	cmp    BYTE PTR [rdi-0x1],bh
	...
  42c936:	shr    BYTE PTR [rdi-0x2000061],0xfc
  42c93d:	(bad)  
  42c93e:	(bad)  
  42c93f:	cli    
  42c940:	clc    
  42c941:	(bad)  
  42c942:	(bad)  
  42c943:	div    ecx
  42c945:	(bad)  
  42c946:	cld    
  42c947:	bnd jmp 0x42c949
  42c94a:	sti    
  42c94b:	out    dx,al
  42c94c:	in     al,0xff
  42c94e:	sti    
  42c94f:	jmp    0xffffffffe53cc930
  42c954:	(bad)  
  42c955:	(bad)  
  42c956:	stc    
  42c957:	fmulp  st(5),st
  42c959:	jmp    rsp
  42c95b:	(bad)  
  42c95c:	mov    ah,0xff
  42c95e:	xchg   edi,eax
  42c95f:	jg     0x42c9cf
  42c961:	dec    esp
  42c963:	mov    bh,0xad
  42c965:	(bad)  
  42c966:	fcmove st,st(1)
  42c968:	ret    
  42c969:	(bad)  
  42c96a:	(bad)  
  42c96b:	(bad)  
  42c96c:	(bad)  
  42c96d:	(bad)  
  42c96e:	jmp    0x42c952
  42c970:	(bad)  
  42c972:	(bad)  
  42c974:	sar    bh,1
  42c976:	(bad)  
  42c977:	retf   0xffc3
  42c97a:	movabs al,ds:0x9cff334863ff7c8b
  42c983:	(bad)  
  42c984:	jo     0x42c9d3
  42c986:	add    BYTE PTR [rax],al
  42c988:	add    BYTE PTR [rax],al
  42c98a:	outs   dx,DWORD PTR ds:[rsi]
  42c98b:	je     0x42c96e
  42c98d:	jmp    QWORD PTR [rdx-0x7e00125a]
  42c993:	xchg   dh,ah
  42c995:	(bad)  
  42c996:	jp     0x42c918
  42c998:	in     al,0xff
  42c99a:	pop    rbx
  42c99b:	(bad)  
  42c99c:	xlat   BYTE PTR ds:[rbx]
  42c99d:	inc    DWORD PTR [rsi+0x40]
  42c9a0:	xchg   bh,bh
	...
  42c9b6:	shl    BYTE PTR [rdi-0x61],0xff
  42c9bd:	(bad)  
  42c9be:	(bad)  
  42c9bf:	cld    
  42c9c0:	sti    
  42c9c1:	(bad)  
  42c9c2:	(bad)  
  42c9c3:	stc    
  42c9c4:	idiv   bh
  42c9c6:	std    
  42c9c7:	cmc    
  42c9c8:	lock (bad) 
  42c9ca:	std    
  42c9cb:	icebp  
  42c9cc:	(bad)  
  42c9cd:	(bad)  
  42c9ce:	sti    
  42c9cf:	in     al,dx
  42c9d0:	loop   0x42c9d1
  42c9d2:	sti    
  42c9d3:	out    0xda,eax
  42c9d5:	(bad)  
  42c9d6:	stc    
  42c9d7:	loop   0x42c9ab
  42c9d9:	push   QWORD PTR [rdi-0x37006a5d]
  42c9df:	mov    bh,0xae
  42c9e1:	(bad)  
  42c9e2:	out    dx,eax
  42c9e3:	jmp    0x42c9cd
  42c9e8:	(bad)  
  42c9e9:	(bad)  
  42c9ea:	(bad)  
  42c9eb:	(bad)  
  42c9ec:	(bad)  
  42c9ed:	(bad)  
  42c9ee:	(bad)  
  42c9ef:	(bad)  
  42c9f0:	(bad)  
  42c9f1:	(bad)  
  42c9f2:	(bad)  
  42c9f3:	(bad)  
  42c9f4:	(bad)  
  42c9f5:	(bad)  
  42c9f6:	out    dx,eax
  42c9f7:	jmp    0xffffffffc715c9e1
  42c9fc:	mov    esi,0x7a889fff
  42ca01:	dec    DWORD PTR [rsi+0xb96b7a]
  42ca07:	add    BYTE PTR [rax],al
  42ca09:	add    BYTE PTR [rsi+0x7b],dh
  42ca0c:	jrcxz  0x42ca0d
  42ca0e:	lods   al,BYTE PTR ds:[rsi]
  42ca0f:	scas   al,BYTE PTR es:[rdi]
  42ca10:	out    dx,eax
  42ca11:	dec    DWORD PTR [rcx+rdx*4-0x74790017]
  42ca18:	call   0xffffffffdaa92b1c
  42ca1d:	dec    DWORD PTR [rbp+0x48]
  42ca20:	mov    ?,edi
	...
  42ca36:	shl    BYTE PTR [rdi-0x51],1
  42ca3c:	(bad)  
  42ca3d:	(bad)  
  42ca3e:	(bad)  
  42ca3f:	(bad)  
  42ca40:	(bad)  
  42ca41:	(bad)  
  42ca42:	(bad)  
  42ca43:	sti    
  42ca44:	stc    
  42ca45:	(bad)  
  42ca46:	std    
  42ca47:	clc    
  42ca48:	hlt    
  42ca49:	(bad)  
  42ca4a:	std    
  42ca4b:	hlt    
  42ca4c:	out    dx,al
  42ca4d:	(bad)  
  42ca4e:	cld    
  42ca4f:	lock call 0xffffffffe12ec654
  42ca55:	(bad)  
  42ca56:	cli    
  42ca57:	in     eax,0xd9
  42ca59:	inc    eax
  42ca5b:	scas   al,BYTE PTR es:[rdi]
  42ca5c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  42ca5d:	(bad)  
  42ca5e:	in     eax,dx
  42ca5f:	in     eax,0xe2
  42ca61:	(bad)  
  42ca62:	(bad)  
  42ca63:	(bad)  
  42ca64:	(bad)  
  42ca65:	call   rbx
  42ca67:	sar    DWORD PTR [rax+0x627389ff],0xff
  42ca6e:	lea    esi,[rsi+0x65]
  42ca71:	push   QWORD PTR [rax+riz*4-0x303006f]
  42ca78:	cld    
  42ca79:	(bad)  
  42ca7a:	out    dx,eax
  42ca7b:	jmp    0xffffffff93ecca65
  42ca80:	xchg   bh,bh
  42ca82:	push   0xff384c
  42ca87:	add    BYTE PTR [rax],al
  42ca89:	add    BYTE PTR [rbp-0x7d],bh
  42ca8c:	in     eax,0xff
  42ca8e:	mov    ah,0xb7
  42ca90:	bnd call QWORD PTR [rsi-0x6f001365]
  42ca97:	xchg   ebp,eax
  42ca98:	(bad)  
  42ca99:	jmp    QWORD PTR [rbp+0x6b]
  42ca9c:	fdiv   st(7),st
  42ca9e:	push   rbp
  42ca9f:	push   rcx
  42caa0:	xchg   esi,eax
  42caa1:	inc    DWORD PTR [rax]
	...
  42cab3:	add    BYTE PTR [rax],al
  42cab5:	add    al,dl
  42cab7:	mov    bh,0xaf
  42cab9:	(bad)  
  42caba:	(bad)  
  42cabb:	(bad)  
  42cabc:	(bad)  
  42cabd:	(bad)  
  42cabe:	(bad)  
  42cabf:	(bad)  
  42cac0:	(bad)  
  42cac1:	(bad)  
  42cac2:	(bad)  
  42cac3:	std    
  42cac4:	cld    
  42cac5:	(bad)  
  42cac6:	(bad)  
  42cac7:	sti    
  42cac8:	stc    
  42cac9:	(bad)  
  42caca:	(bad)  
  42cacb:	div    ebx
  42cacd:	(bad)  
  42cace:	cld    
  42cacf:	repz in eax,dx
  42cad1:	(bad)  
  42cad2:	cld    
  42cad3:	out    dx,al
  42cad4:	in     eax,0xff
  42cad6:	cli    
  42cad7:	jmp    0xffffffffb40acaba
  42cadc:	test   eax,0xffffffff
  42cae1:	(bad)  
  42cae2:	(bad)  
  42cae4:	iret   
  42cae5:	push   QWORD PTR [rbp+0x5b]
  42cae8:	rex.RXB jmp r11
  42caeb:	mov    edi,0xcaf5ffa8
  42caf0:	scas   al,BYTE PTR es:[rdi]
  42caf1:	jmp    rdx
  42caf3:	mov    eax,0xd7e0ff9c
  42caf8:	sar    edi,cl
  42cafa:	(bad)  
  42cafb:	(bad)  
  42cafc:	(bad)  
  42cafd:	push   QWORD PTR [rbp+0x6eff94a0]
  42cb03:	push   rsp
  42cb04:	rex inc DWORD PTR [rax]
  42cb07:	add    BYTE PTR [rax],al
  42cb09:	add    BYTE PTR [rbp-0x43001876],al
  42cb0f:	mov    edi,0xbbb9fff4
  42cb14:	repnz push QWORD PTR [rdi+rsi*4+0x6b65fff1]
  42cb1c:	fdiv   st(7),st
  42cb1e:	pop    rsp
  42cb1f:	pop    rdx
  42cb20:	sahf   
  42cb21:	inc    DWORD PTR [rax]
	...
  42cb33:	add    BYTE PTR [rax],al
  42cb35:	add    al,dl
  42cb37:	mov    bh,0xaf
  42cb39:	(bad)  
  42cb3a:	(bad)  
  42cb3b:	(bad)  
  42cb3c:	(bad)  
  42cb3d:	(bad)  
  42cb3e:	(bad)  
  42cb3f:	(bad)  
  42cb40:	(bad)  
  42cb41:	(bad)  
  42cb42:	(bad)  
  42cb43:	(bad)  
  42cb44:	(bad)  
  42cb45:	(bad)  
  42cb46:	(bad)  
  42cb47:	std    
  42cb48:	sti    
  42cb49:	(bad)  
  42cb4a:	(bad)  
  42cb4b:	stc    
  42cb4c:	idiv   bh
  42cb4e:	(bad)  
  42cb4f:	div    cl
  42cb51:	(bad)  
  42cb52:	cld    
  42cb53:	repnz (bad) 
  42cb55:	(bad)  
  42cb56:	cld    
  42cb57:	in     eax,dx
  42cb58:	jrcxz  0x42cb59
  42cb5a:	int3   
  42cb5b:	mov    ecx,0xffffffaf
  42cb60:	(bad)  
  42cb61:	(bad)  
  42cb62:	fmul   st,st(5)
  42cb64:	(bad)  
  42cb65:	push   QWORD PTR [rbp+0x5b]
  42cb68:	rex.RXB push r15
  42cb6b:	(bad)  
  42cb6c:	mov    ebx,0xb4cef6ff
  42cb71:	push   rsp
  42cb73:	leave  
  42cb74:	lods   al,BYTE PTR ds:[rsi]
  42cb75:	dec    esi
  42cb77:	sar    DWORD PTR [rax-0x1],0xff
  42cb7e:	mov    ch,0xa0
  42cb80:	xchg   esp,eax
  42cb81:	push   QWORD PTR [rdi+0x5d]
  42cb84:	rex.WX inc QWORD PTR [rax]
  42cb87:	add    BYTE PTR [rax],al
  42cb89:	add    BYTE PTR [rbp-0x13001876],al
  42cb8f:	in     al,dx
  42cb90:	sti    
  42cb91:	jmp    rdx
  42cb93:	jrcxz  0x42cb8f
  42cb95:	(bad)  
  42cb96:	fcmovu st,st(3)
  42cb98:	clc    
  42cb99:	push   QWORD PTR [rdi+rsi*4+0x5a5cfff1]
  42cba0:	sahf   
  42cba1:	inc    DWORD PTR [rax]
	...
  42cbb3:	add    BYTE PTR [rax],al
  42cbb5:	add    al,dl
  42cbb7:	mov    bh,0xaf
  42cbb9:	(bad)  
  42cbba:	(bad)  
  42cbbb:	(bad)  
  42cbbc:	(bad)  
  42cbbd:	(bad)  
  42cbbe:	(bad)  
  42cbbf:	(bad)  
  42cbc0:	(bad)  
  42cbc1:	(bad)  
  42cbc2:	(bad)  
  42cbc3:	(bad)  
  42cbc4:	(bad)  
  42cbc5:	(bad)  
  42cbc6:	(bad)  
  42cbc7:	(bad)  
  42cbc8:	(bad)  
  42cbc9:	(bad)  
  42cbca:	(bad)  
  42cbcb:	cld    
  42cbcc:	cli    
  42cbcd:	(bad)  
  42cbce:	(bad)  
  42cbcf:	stc    
  42cbd0:	cmc    
  42cbd1:	(bad)  
  42cbd2:	std    
  42cbd3:	cmc    
  42cbd4:	out    dx,eax
  42cbd5:	(bad)  
  42cbd6:	cld    
  42cbd7:	lock call 0xffffffffb4009ddc
  42cbdd:	(bad)  
  42cbde:	(bad)  
  42cbdf:	(bad)  
  42cbe0:	(bad)  
  42cbe1:	(bad)  
  42cbe2:	(bad)  
  42cbe3:	(bad)  
  42cbe4:	(bad)  
  42cbe5:	push   QWORD PTR [rbp+0x75ff94a0]
  42cbeb:	pop    rbx
  42cbec:	rex.RXB push r14
  42cbef:	sar    BYTE PTR [rcx+0x6b7c93ff],cl
  42cbf5:	(bad)  
  42cbf6:	(bad)  
  42cbf7:	(bad)  
  42cbf8:	(bad)  
  42cbf9:	(bad)  
  42cbfa:	(bad)  
  42cbfb:	(bad)  
  42cbfc:	(bad)  
  42cbfd:	push   QWORD PTR [rbp-0x5c006b60]
  42cc03:	xchg   ecx,eax
  42cc04:	or     esi,0x0
  42cc07:	add    BYTE PTR [rax],al
  42cc09:	add    BYTE PTR [rbx-0x7300115a],ah
  42cc0f:	jnp    0x42cc88
  42cc11:	jmp    FWORD PTR [rcx-0x73006963]
  42cc17:	cmp    DWORD PTR [rbx-0x1],0xff373f4c
  42cc1e:	jge    0x42cc9c
  42cc20:	mov    esp,0xff
	...
  42cc35:	add    al,dl
  42cc37:	mov    bh,0xaf
  42cc39:	(bad)  
  42cc3a:	(bad)  
  42cc3b:	(bad)  
  42cc3c:	(bad)  
  42cc3d:	(bad)  
  42cc3e:	(bad)  
  42cc3f:	(bad)  
  42cc40:	(bad)  
  42cc41:	(bad)  
  42cc42:	(bad)  
  42cc43:	(bad)  
  42cc44:	(bad)  
  42cc45:	(bad)  
  42cc46:	(bad)  
  42cc47:	(bad)  
  42cc48:	(bad)  
  42cc49:	(bad)  
  42cc4a:	(bad)  
  42cc4b:	(bad)  
  42cc4c:	std    
  42cc4d:	(bad)  
  42cc4e:	(bad)  
  42cc4f:	sti    
  42cc50:	stc    
  42cc51:	(bad)  
  42cc52:	(bad)  
  42cc53:	div    esp
  42cc55:	(bad)  
  42cc56:	std    
  42cc57:	repz in eax,dx
  42cc59:	(bad)  
  42cc5a:	out    dx,eax
  42cc5b:	loopne 0x42cc34
  42cc5d:	dec    esp
  42cc5f:	mov    ecx,0xffffffae
  42cc64:	(bad)  
  42cc65:	(bad)  
  42cc66:	(bad)  
  42cc67:	(bad)  
  42cc68:	(bad)  
  42cc69:	push   QWORD PTR [rbp+0x5b]
  42cc6c:	rex.RXB push r15
  42cc6f:	(bad)  
  42cc70:	mov    edi,0xffffffff
  42cc75:	(bad)  
  42cc76:	(bad)  
  42cc77:	(bad)  
  42cc78:	(bad)  
  42cc79:	inc    esp
  42cc7b:	mov    bh,0xad
  42cc7d:	jmp    FWORD PTR [rcx-0x6400796c]
  42cc83:	(bad)  
  42cc84:	jno    0x42ccda
  42cc86:	add    BYTE PTR [rax],al
  42cc88:	add    BYTE PTR [rax],al
  42cc8a:	mov    ecx,0x8746f2bb
  42cc8f:	je     0x42ccfa
  42cc91:	(bad)  
  42cc92:	fcom   st(4)
  42cc94:	sar    edi,1
  42cc96:	xchg   esi,eax
  42cc97:	mov    WORD PTR [rdi+0x373f4cff],es
  42cc9d:	(bad)  
  42cc9e:	mov    ecx,0x59f2bb
	...
  42ccb3:	add    BYTE PTR [rax],al
  42ccb5:	add    al,dl
  42ccb7:	mov    bh,0xaf
  42ccb9:	(bad)  
  42ccba:	(bad)  
  42ccbb:	(bad)  
  42ccbc:	(bad)  
  42ccbd:	(bad)  
  42ccbe:	(bad)  
  42ccbf:	(bad)  
  42ccc0:	(bad)  
  42ccc1:	(bad)  
  42ccc2:	(bad)  
  42ccc3:	(bad)  
  42ccc4:	(bad)  
  42ccc5:	(bad)  
  42ccc6:	(bad)  
  42ccc7:	(bad)  
  42ccc8:	(bad)  
  42ccc9:	(bad)  
  42ccca:	(bad)  
  42cccb:	(bad)  
  42cccc:	(bad)  
  42cccd:	(bad)  
  42ccce:	(bad)  
  42cccf:	(bad)  
  42ccd0:	std    
  42ccd1:	(bad)  
  42ccd2:	(bad)  
  42ccd3:	sti    
  42ccd4:	clc    
  42ccd5:	(bad)  
  42ccd6:	std    
  42ccd7:	div    edx
  42ccd9:	(bad)  
  42ccda:	std    
  42ccdb:	repz in al,dx
  42ccdd:	(bad)  
  42ccde:	call   0xffffffffc74299bb
  42cce3:	mov    dl,0xa7
  42cce5:	push   QWORD PTR [rcx-0x5b007266]
  42cceb:	mov    edi,DWORD PTR [rbx-0x1]
  42ccee:	clc    
  42ccef:	fld    st(5)
  42ccf1:	inc    esi
  42ccf3:	mov    dl,0xa7
  42ccf5:	push   QWORD PTR [rcx-0x5b007266]
  42ccfb:	mov    edi,DWORD PTR [rbx-0x1]
  42ccfe:	mov    WORD PTR [rbx+0x57],gs
  42cd01:	inc    DWORD PTR [rax]
  42cd03:	add    BYTE PTR [rax],al
  42cd05:	add    BYTE PTR [rax],al
  42cd07:	add    BYTE PTR [rax],al
  42cd09:	add    BYTE PTR [rcx-0x68e50d45],bh
  42cd0f:	xchg   BYTE PTR [rdx-0x2a282301],al
  42cd15:	call   FWORD PTR [rbx+0x4cff8a91]
  42cd1b:	rex cmp edi,edi
  42cd1e:	mov    ecx,0x1af2bb
	...
  42cd33:	add    BYTE PTR [rax],al
  42cd35:	add    al,dl
  42cd37:	mov    bh,0xaf
  42cd39:	(bad)  
  42cd3a:	(bad)  
  42cd3b:	(bad)  
  42cd3c:	(bad)  
  42cd3d:	(bad)  
  42cd3e:	(bad)  
  42cd3f:	(bad)  
  42cd40:	(bad)  
  42cd41:	(bad)  
  42cd42:	(bad)  
  42cd43:	(bad)  
  42cd44:	(bad)  
  42cd45:	(bad)  
  42cd46:	(bad)  
  42cd47:	(bad)  
  42cd48:	(bad)  
  42cd49:	(bad)  
  42cd4a:	(bad)  
  42cd4b:	(bad)  
  42cd4c:	(bad)  
  42cd4d:	(bad)  
  42cd4e:	(bad)  
  42cd4f:	(bad)  
  42cd50:	(bad)  
  42cd51:	(bad)  
  42cd52:	(bad)  
  42cd53:	cld    
  42cd54:	sti    
  42cd55:	(bad)  
  42cd56:	(bad)  
  42cd57:	stc    
  42cd58:	idiv   bh
  42cd5a:	std    
  42cd5b:	div    cl
  42cd5d:	(bad)  
  42cd5e:	cld    
  42cd5f:	repnz (bad) 
  42cd61:	(bad)  
  42cd62:	cld    
  42cd63:	in     eax,dx
  42cd64:	jrcxz  0x42cd65
  42cd66:	cli    
  42cd67:	out    0xdb,eax
  42cd69:	(bad)  
  42cd6a:	stc    
  42cd6b:	jrcxz  0x42cd40
  42cd6d:	(bad)  
  42cd6e:	clc    
  42cd6f:	(bad)  
  42cd71:	push   rdi
  42cd73:	fadd   st,st(3)
  42cd75:	push   rdi
  42cd77:	sar    DWORD PTR [rdx-0x5e3d0b01],cl
  42cd7d:	dec    DWORD PTR [rax+rbp*2+0xff52]
	...
  42cd8c:	add    BYTE PTR [rax],al
  42cd8e:	sahf   
  42cd8f:	mov    eax,DWORD PTR [rax-0x25241e01]
  42cd95:	jmp    QWORD PTR [rbx+0x54ff9098]
  42cd9b:	rex.RXB
  42cd9c:	rex inc DWORD PTR [rax]
	...
  42cdab:	add    BYTE PTR [rax],al
  42cdad:	add    BYTE PTR [rdi+0x42],cl
  42cdb0:	cmp    DWORD PTR [rsi+0x0],eax
  42cdb3:	add    BYTE PTR [rax],al
  42cdb5:	add    al,dl
  42cdb7:	mov    bh,0xaf
  42cdb9:	(bad)  
  42cdba:	(bad)  
  42cdbb:	(bad)  
  42cdbc:	(bad)  
  42cdbd:	(bad)  
  42cdbe:	(bad)  
  42cdbf:	(bad)  
  42cdc0:	(bad)  
  42cdc1:	(bad)  
  42cdc2:	(bad)  
  42cdc3:	(bad)  
  42cdc4:	(bad)  
  42cdc5:	(bad)  
  42cdc6:	(bad)  
  42cdc7:	(bad)  
  42cdc8:	(bad)  
  42cdc9:	(bad)  
  42cdca:	(bad)  
  42cdcb:	(bad)  
  42cdcc:	(bad)  
  42cdcd:	(bad)  
  42cdce:	(bad)  
  42cdcf:	(bad)  
  42cdd0:	(bad)  
  42cdd1:	(bad)  
  42cdd2:	(bad)  
  42cdd3:	(bad)  
  42cdd4:	(bad)  
  42cdd5:	(bad)  
  42cdd6:	(bad)  
  42cdd7:	sti    
  42cdd8:	cli    
  42cdd9:	(bad)  
  42cdda:	std    
  42cddb:	clc    
  42cddc:	hlt    
  42cddd:	(bad)  
  42cdde:	std    
  42cddf:	cmc    
  42cde0:	out    dx,al
  42cde1:	(bad)  
  42cde2:	cld    
  42cde3:	lock call 0xffffffffe22fc9e8
  42cde9:	(bad)  
  42cdea:	cli    
  42cdeb:	out    0xd9,al
  42cded:	(bad)  
  42cdee:	cli    
  42cdef:	loope  0x42cdc1
  42cdf1:	(bad)  
  42cdf2:	clc    
  42cdf3:	fcmovne st,st(1)
  42cdf5:	(bad)  
  42cdf6:	fstp   TBYTE PTR [rsi+0x7184ffab]
  42cdfc:	gs (bad) 
  42cdfe:	jge    0x42ce69
  42ce00:	pop    rdi
  42ce01:	call   FWORD PTR [rsi+0x53808b]
  42ce07:	add    BYTE PTR [rax],al
  42ce09:	add    BYTE PTR [rdi+0x42],cl
  42ce0c:	cmp    DWORD PTR [rcx],esi
  42ce0e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42ce0f:	xchg   ebx,eax
  42ce10:	mov    edi,edi
  42ce12:	iret   
  42ce13:	mov    bl,0xff
  42ce16:	lods   al,BYTE PTR ds:[rsi]
  42ce17:	movabs al,ds:0x424fff4b5361ff98
  42ce20:	cmp    DWORD PTR [rcx],esi
  42ce22:	add    BYTE PTR [rax],al
  42ce24:	add    BYTE PTR [rax],al
  42ce26:	rex.WRXB
  42ce27:	rex.X cmp DWORD PTR [rsi+0x4f],eax
  42ce2b:	rex.X cmp edi,edi
  42ce2e:	pop    rax
  42ce2f:	rex.WB (bad) 
  42ce31:	inc    DWORD PTR [rax]
  42ce33:	add    BYTE PTR [rax],al
  42ce35:	add    al,dl
  42ce37:	mov    bh,0xaf
  42ce39:	(bad)  
  42ce3a:	(bad)  
  42ce3b:	(bad)  
  42ce3c:	(bad)  
  42ce3d:	(bad)  
  42ce3e:	(bad)  
  42ce3f:	(bad)  
  42ce40:	(bad)  
  42ce41:	(bad)  
  42ce42:	(bad)  
  42ce43:	(bad)  
  42ce44:	(bad)  
  42ce45:	(bad)  
  42ce46:	(bad)  
  42ce47:	(bad)  
  42ce48:	(bad)  
  42ce49:	(bad)  
  42ce4a:	(bad)  
  42ce4b:	(bad)  
  42ce4c:	(bad)  
  42ce4d:	(bad)  
  42ce4e:	(bad)  
  42ce4f:	(bad)  
  42ce50:	(bad)  
  42ce51:	(bad)  
  42ce52:	(bad)  
  42ce53:	(bad)  
  42ce54:	(bad)  
  42ce55:	(bad)  
  42ce56:	(bad)  
  42ce57:	(bad)  
  42ce58:	std    
  42ce59:	(bad)  
  42ce5a:	(bad)  
  42ce5b:	sti    
  42ce5c:	clc    
  42ce5d:	(bad)  
  42ce5e:	(bad)  
  42ce5f:	div    ebx
  42ce61:	(bad)  
  42ce62:	std    
  42ce63:	hlt    
  42ce64:	in     eax,dx
  42ce65:	(bad)  
  42ce66:	sti    
  42ce67:	out    dx,eax
  42ce68:	out    0xff,al
  42ce6a:	sti    
  42ce6b:	(bad)  
  42ce6c:	(bad)  
  42ce6e:	cli    
  42ce6f:	in     al,0xd7
  42ce71:	(bad)  
  42ce72:	clc    
  42ce73:	(bad)  
  42ce75:	jmp    FWORD PTR [rsi-0x25007267]
  42ce7b:	ror    ebp,1
  42ce7d:	inc    esi
  42ce7f:	mov    edi,0x8ea3ffb9
  42ce84:	test   bh,bh
  42ce86:	nop
  42ce87:	jge    0x42cefa
  42ce89:	jmp    QWORD PTR [rdi-0x4e006f68]
  42ce8f:	lahf   
  42ce90:	xchg   esp,eax
  42ce91:	(bad)  
  42ce92:	fmul   st,st(7)
  42ce94:	leave  
  42ce95:	(bad)  
  42ce96:	mov    esp,0x7bffa9af
  42ce9b:	push   0x61
  42ce9d:	call   FWORD PTR [rbx+0x4d]
  42cea0:	rex.R call FWORD PTR [rbx+0x4d]
  42cea4:	rex.R call FWORD PTR [rbx+0x4d]
  42cea8:	rex.R call FWORD PTR [rbx+0x4d]
  42ceac:	rex.R call FWORD PTR [rdi+rcx*2+0x48]
  42ceb1:	inc    DWORD PTR [rax]
  42ceb3:	add    BYTE PTR [rax],al
  42ceb5:	add    al,dl
  42ceb7:	mov    edi,0xffffffaf
  42cebc:	(bad)  
  42cebd:	(bad)  
  42cebe:	(bad)  
  42cebf:	(bad)  
  42cec0:	(bad)  
  42cec1:	(bad)  
  42cec2:	(bad)  
  42cec3:	(bad)  
  42cec4:	(bad)  
  42cec5:	(bad)  
  42cec6:	(bad)  
  42cec7:	(bad)  
  42cec8:	(bad)  
  42cec9:	(bad)  
  42ceca:	(bad)  
  42cecb:	(bad)  
  42cecc:	(bad)  
  42cecd:	(bad)  
  42cece:	(bad)  
  42cecf:	(bad)  
  42ced0:	(bad)  
  42ced1:	(bad)  
  42ced2:	(bad)  
  42ced3:	(bad)  
  42ced4:	(bad)  
  42ced5:	(bad)  
  42ced6:	(bad)  
  42ced7:	(bad)  
  42ced8:	(bad)  
  42ced9:	(bad)  
  42ceda:	(bad)  
  42cedb:	std    
  42cedc:	cld    
  42cedd:	(bad)  
  42cede:	(bad)  
  42cedf:	cli    
  42cee0:	clc    
  42cee1:	(bad)  
  42cee2:	std    
  42cee3:	div    ecx
  42cee5:	(bad)  
  42cee6:	std    
  42cee7:	bnd jmp 0x42cee9
  42ceea:	cld    
  42ceeb:	out    dx,al
  42ceec:	in     eax,0xff
  42ceee:	sti    
  42ceef:	jmp    0xffffffffe43cced0
  42cef4:	(bad)  
  42cef5:	jmp    FWORD PTR [rsi-0x7166]
  42cefb:	(bad)  
  42cefc:	(bad)  
  42cefd:	jmp    rbp
  42ceff:	(bad)  
  42cf01:	call   rax
  42cf03:	(bad)  
  42cf04:	mov    ebp,0xced5e1ff
  42cf09:	inc    edi
  42cf0b:	mov    bh,0xae
  42cf0d:	jmp    rsi
  42cf0f:	(bad)  
  42cf11:	(bad)  
  42cf12:	fcmovne st,st(5)
  42cf14:	(bad)  
  42cf15:	call   rax
  42cf17:	mov    esi,0x8ea3ffb5
  42cf1c:	test   bh,bh
  42cf1e:	nop
  42cf1f:	jge    0x42cf92
  42cf21:	inc    DWORD PTR [rcx+rsi*2-0x4940009b]
  42cf28:	mov    cl,0xff
  42cf2a:	addr32 pop rsp
  42cf2c:	push   rbp
  42cf2d:	call   FWORD PTR [rbp+0x56]
  42cf30:	push   rbx
  42cf31:	fwait
  42cf32:	add    BYTE PTR [rax],al
  42cf34:	add    BYTE PTR [rax],al
  42cf36:	sar    BYTE PTR [rdi-0x51],1
  42cf3c:	(bad)  
  42cf3d:	(bad)  
  42cf3e:	(bad)  
  42cf3f:	(bad)  
  42cf40:	(bad)  
  42cf41:	(bad)  
  42cf42:	(bad)  
  42cf43:	(bad)  
  42cf44:	(bad)  
  42cf45:	(bad)  
  42cf46:	(bad)  
  42cf47:	(bad)  
  42cf48:	(bad)  
  42cf49:	(bad)  
  42cf4a:	(bad)  
  42cf4b:	(bad)  
  42cf4c:	(bad)  
  42cf4d:	(bad)  
  42cf4e:	(bad)  
  42cf4f:	clc    
  42cf50:	lock (bad) 
  42cf52:	(bad)  
  42cf53:	jmp    0x42cf35
  42cf55:	push   rax
  42cf57:	(bad)  
  42cf59:	push   rcx
  42cf5b:	iret   
  42cf5c:	sar    bh,0xf1
  42cf5f:	iret   
  42cf60:	sar    bh,0xf1
  42cf63:	(bad)  
  42cf64:	mov    al,0xff
  42cf66:	icebp  
  42cf67:	iret   
  42cf68:	sar    bh,0xf1
  42cf6b:	(bad)  
  42cf6c:	sar    bh,1
  42cf6e:	push   rax
  42cf70:	loopne 0x42cf71
  42cf72:	push   rax
  42cf74:	loopne 0x42cf75
  42cf76:	scas   al,BYTE PTR es:[rdi]
  42cf77:	(bad)  
  42cf78:	mov    ?,edi
  42cf7a:	(bad)  
  42cf7b:	(bad)  
  42cf7c:	(bad)  
  42cf7d:	(bad)  
  42cf7e:	in     eax,dx
  42cf7f:	call   0xffffffffdd25cf6a
  42cf84:	fcos   
  42cf86:	rol    ah,1
  42cf88:	mov    ebp,0xced5e1ff
  42cf8d:	(bad)  
  42cf8e:	std    
  42cf8f:	cld    
  42cf90:	sti    
  42cf91:	push   rbp
  42cf93:	lock out dx,al
  42cf95:	(bad)  
  42cf96:	(bad)  
  42cf98:	retf   0xcbff
  42cf9b:	mov    bh,0xad
  42cf9d:	(bad)  
  42cf9e:	mov    edi,0xe3ff9aa7
  42cfa3:	fcmovnbe st,st(7)
  42cfa5:	dec    DWORD PTR [rbx+0x75ff727b]
  42cfab:	push   0x66
  42cfad:	jmp    FWORD PTR [rsi+0x66]
  42cfb0:	(bad)  
  42cfb1:	and    BYTE PTR [rax],al
  42cfb3:	add    BYTE PTR [rax],al
  42cfb5:	add    al,dl
  42cfb7:	mov    edi,0xffffffaf
  42cfbc:	(bad)  
  42cfbd:	(bad)  
  42cfbe:	(bad)  
  42cfbf:	(bad)  
  42cfc0:	(bad)  
  42cfc1:	(bad)  
  42cfc2:	(bad)  
  42cfc3:	(bad)  
  42cfc4:	(bad)  
  42cfc5:	(bad)  
  42cfc6:	(bad)  
  42cfc7:	(bad)  
  42cfc8:	(bad)  
  42cfc9:	jmp    QWORD PTR [rbx-0x6e]
  42cfcc:	movabs al,ds:0x87704eff87704eff
  42cfd5:	dec    DWORD PTR [rsi+0x70]
  42cfd8:	xchg   edi,edi
  42cfda:	rex.WX pop rdi
  42cfdc:	outs   dx,DWORD PTR ds:[rsi]
  42cfdd:	dec    DWORD PTR [rdx+0x5f]
  42cfe0:	outs   dx,DWORD PTR ds:[rsi]
  42cfe1:	dec    DWORD PTR [rdx+0x5f]
  42cfe4:	outs   dx,DWORD PTR ds:[rsi]
  42cfe5:	jmp    FWORD PTR [rbp+0x6e]
  42cfe8:	jb     0x42cfe9
  42cfea:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  42cfeb:	xchg   ebp,eax
  42cfec:	mov    edi,edi
  42cfee:	lock fnstcw WORD PTR [rdi-0x1f0f0001]
  42cff5:	jmp    FWORD PTR [rsi-0x7166]
  42cffb:	(bad)  
  42cffc:	(bad)  
  42cffd:	(bad)  
  42cffe:	(bad)  
  42cfff:	(bad)  
  42d000:	(bad)  
  42d001:	jmp    FWORD PTR [rsp+riz*4-0x463d005f]
  42d008:	mov    ah,0xff
  42d00a:	(bad)  
  42d00c:	(bad)  
  42d00d:	(bad)  
  42d00e:	sti    
  42d00f:	stc    
  42d010:	stc    
  42d011:	(bad)  
  42d012:	std    
  42d013:	std    
  42d014:	cld    
  42d015:	push   rbx
  42d017:	out    dx,eax
  42d018:	in     al,dx
  42d019:	push   rcx
  42d01b:	in     al,dx
  42d01c:	jmp    0xffffffffe127bc20
  42d021:	call   QWORD PTR [rsi-0x6d007c76]
  42d027:	test   BYTE PTR [rsi-0x1],bh
  42d02a:	jle    0x42d0a1
  42d02c:	jno    0x42d04e
	...
  42d036:	sar    BYTE PTR [rdi-0x51],1
  42d03c:	(bad)  
  42d03d:	(bad)  
  42d03e:	(bad)  
  42d03f:	(bad)  
  42d040:	(bad)  
  42d041:	(bad)  
  42d042:	(bad)  
  42d043:	(bad)  
  42d044:	(bad)  
  42d045:	(bad)  
  42d046:	(bad)  
  42d047:	(bad)  
  42d048:	(bad)  
  42d049:	jmp    FWORD PTR [rsi-0x66]
  42d04c:	scas   eax,DWORD PTR es:[rdi]
  42d04d:	(bad)  
  42d04e:	mov    ebx,0x99ffefee
  42d053:	loopne 0x42d049
  42d055:	(bad)  
  42d056:	jl     0x42d028
  42d058:	(bad)  
  42d05a:	ins    BYTE PTR es:[rdi],dx
  42d05b:	(bad)  
  42d05c:	iret   
  42d05d:	jmp    FWORD PTR [rsp+rax*8-0x31]
  42d061:	jmp    FWORD PTR [rbx+rsi*4-0x39]
  42d065:	jmp    FWORD PTR [rbx+rsi*4-0x39]
  42d069:	jmp    FWORD PTR [rbp+0x6e]
  42d06c:	jb     0x42d06d
  42d06e:	lock fnstcw WORD PTR [rdi-0x1f0f0001]
  42d075:	(bad)  
  42d076:	fcmovnb st,st(3)
  42d078:	mov    bl,0xff
  42d07a:	ret    
  42d07b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  42d07c:	xchg   ebp,eax
  42d07d:	call   FWORD PTR [rsi-0x6b008c7d]
  42d083:	lea    ecx,[rdx-0x75716ab4]
  42d089:	sbb    al,0xdd
  42d08b:	(bad)  
  42d08c:	sar    bh,1
  42d08e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  42d08f:	sahf   
  42d090:	(bad)  
  42d091:	jmp    QWORD PTR [rsp+rbx*4-0x675e0068]
  42d098:	xchg   esp,eax
  42d099:	call   FWORD PTR [rsi-0x69006e6b]
  42d09f:	mov    WORD PTR [rcx+0x7d8189ff],cs
  42d0a5:	jmp    0x42d02c
  42d0a7:	jge    0x42d122
  42d0a9:	adc    BYTE PTR [rax],al
	...
  42d0b3:	add    BYTE PTR [rax],al
  42d0b5:	add    al,dl
  42d0b7:	mov    edi,0xffffffaf
  42d0bc:	(bad)  
  42d0bd:	(bad)  
  42d0be:	(bad)  
  42d0bf:	(bad)  
  42d0c0:	(bad)  
  42d0c1:	(bad)  
  42d0c2:	(bad)  
  42d0c3:	(bad)  
  42d0c4:	(bad)  
  42d0c5:	(bad)  
  42d0c6:	(bad)  
  42d0c7:	(bad)  
  42d0c8:	(bad)  
  42d0c9:	inc    DWORD PTR [rsi-0x62004f5c]
  42d0cf:	enter  0xffd2,0xbb
  42d0d3:	out    dx,al
  42d0d4:	out    dx,eax
  42d0d5:	jmp    QWORD PTR [rbx-0x6e]
  42d0d8:	movabs al,ds:0xdfd07cffc7b36cff
  42d0e1:	jmp    QWORD PTR [rdx-0x3f]
  42d0e4:	(bad)  
  42d0e6:	movsxd edx,DWORD PTR [rdx+0x5f4affa0]
  42d0ec:	outs   dx,DWORD PTR ds:[rsi]
  42d0ed:	push   rax
  42d0ef:	(bad)  
  42d0f1:	(bad)  
  42d0f2:	(bad)  
  42d0f3:	call   0xffffffffdf3cd0d8
  42d0f8:	int3   
  42d0f9:	push   rsi
  42d0fb:	int    0xb1
  42d0fd:	jmp    QWORD PTR [rax+0xff6077]
  42d103:	add    BYTE PTR [rax],al
  42d105:	add    BYTE PTR [rax],al
  42d107:	add    BYTE PTR [rax],al
  42d109:	add    BYTE PTR [rbp-0x69f67472],dl
  42d10f:	(bad)  
  42d110:	mov    esi,DWORD PTR [rbx]
  42d112:	xchg   ebp,eax
  42d113:	mov    cs,WORD PTR [rbx-0x75726bcd]
  42d119:	xor    edx,DWORD PTR [rdx-0x70cc7876]
  42d11f:	xchg   DWORD PTR [rbx+rsi*1+0x97f838b],eax
	...
  42d136:	sar    BYTE PTR [rdi-0x51],1
  42d13c:	(bad)  
  42d13d:	(bad)  
  42d13e:	(bad)  
  42d13f:	(bad)  
  42d140:	(bad)  
  42d141:	(bad)  
  42d142:	(bad)  
  42d143:	(bad)  
  42d144:	(bad)  
  42d145:	(bad)  
  42d146:	(bad)  
  42d147:	(bad)  
  42d148:	(bad)  
  42d149:	(bad)  
  42d14a:	fucomip st,st(0)
  42d14c:	lock jmp FWORD PTR [rsi-0x66]
  42d150:	scas   eax,DWORD PTR es:[rdi]
  42d151:	(bad)  
  42d152:	mov    ebx,0x4effefee
  42d157:	jo     0x42d0e0
  42d159:	jmp    FWORD PTR [rax-0x7e]
  42d15c:	mov    edi,?
  42d15e:	movsxd edx,DWORD PTR [rdx-0x2f720060]
  42d164:	(bad)  
  42d166:	rex.WRX jo 0x42d0f0
  42d169:	push   QWORD PTR [rbp-0x504d]
  42d16f:	clc    
  42d170:	lock (bad) 
  42d172:	(bad)  
  42d173:	clc    
  42d174:	lock (bad) 
  42d176:	(bad)  
  42d177:	clc    
  42d178:	lock (bad) 
  42d17a:	(bad)  
  42d17b:	clc    
  42d17c:	lock jmp QWORD PTR [rax+0xff6077]
	...
  42d1b7:	add    BYTE PTR [rax],al
  42d1b9:	add    dl,dl
  42d1bb:	leave  
  42d1bc:	sar    edi,0xd0
  42d1bf:	mov    edi,0xbfd0ffaf
  42d1c4:	scas   eax,DWORD PTR es:[rdi]
  42d1c5:	call   rax
  42d1c7:	mov    edi,0xb7d0ffaf
  42d1cc:	scas   eax,DWORD PTR es:[rdi]
  42d1cd:	jmp    FWORD PTR [rsi-0x66]
  42d1d0:	scas   eax,DWORD PTR es:[rdi]
  42d1d1:	call   FWORD PTR [rbp-0x44002d38]
  42d1d7:	out    dx,al
  42d1d8:	out    dx,eax
  42d1d9:	(bad)  
  42d1da:	mov    ebx,0xbbffefee
  42d1df:	out    dx,al
  42d1e0:	out    dx,eax
  42d1e1:	dec    DWORD PTR [rbp+0x68ffd2c7]
  42d1e7:	(bad)  
  42d1e8:	mov    edi,?
  42d1ea:	shr    BYTE PTR [rdi-0x503f0061],0x9f
  42d1f1:	inc    eax
  42d1f3:	scas   eax,DWORD PTR es:[rdi]
  42d1f4:	lahf   
  42d1f5:	inc    eax
  42d1f7:	scas   eax,DWORD PTR es:[rdi]
  42d1f8:	lahf   
  42d1f9:	inc    eax
  42d1fb:	scas   eax,DWORD PTR es:[rdi]
  42d1fc:	lahf   
  42d1fd:	inc    DWORD PTR [rax]
	...
  42d24f:	add    BYTE PTR [rax],al
  42d251:	add    BYTE PTR [rsi-0x79004f5c],al
  42d257:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  42d258:	mov    al,0xff
  42d25a:	outs   dx,BYTE PTR ds:[rsi]
  42d25b:	(bad)  
  42d25c:	scas   eax,DWORD PTR es:[rdi]
  42d25d:	jmp    QWORD PTR [rbx-0x6e]
  42d260:	movabs al,ds:0xff8c8268ff
	...
  42d331:	add    bh,bh
  42d333:	clc    
  42d334:	cmp    al,0xf
  42d336:	(bad)  
  42d337:	clc    
  42d338:	cmp    al,0xf
  42d33a:	(bad)  
  42d33b:	clc    
  42d33c:	cmp    al,0xf
  42d33e:	(bad)  
  42d33f:	clc    
  42d340:	cmp    al,0xf
  42d342:	(bad)  
  42d343:	clc    
  42d344:	cmp    al,0xf
  42d346:	(bad)  
  42d347:	clc    
  42d348:	cmp    al,0xf
  42d34a:	(bad)  
  42d34b:	clc    
  42d34c:	cmp    al,0xf
  42d34e:	(bad)  
  42d34f:	clc    
  42d350:	cmp    al,0xf
  42d352:	add    BYTE PTR [rax],0xc
  42d355:	jo     0xffffffff8051df5b
  42d35b:	add    BYTE PTR [rdi+rcx*1],cl
  42d35e:	add    BYTE PTR [rax],0xc
  42d361:	jo     0xffffffff8051d767
  42d367:	add    BYTE PTR [rdi+rcx*1],al
  42d36a:	add    BYTE PTR [rax],0x4
  42d36d:	jo     0xffffffff8051d773
  42d373:	add    BYTE PTR [rdi+rcx*1],al
  42d376:	add    BYTE PTR [rax],0x4
  42d379:	jo     0xffffffff8051d77f
  42d37f:	add    BYTE PTR [rdi+rcx*1],cl
  42d382:	add    BYTE PTR [rax],0xe
  42d385:	(bad)  
  42d386:	add    BYTE PTR [rax],0x4
  42d389:	or     BYTE PTR [rax-0x80000000],al
  42d38f:	add    BYTE PTR [rax],al
  42d391:	add    BYTE PTR [rax-0x80000000],al
  42d397:	add    BYTE PTR [rax],al
  42d399:	add    DWORD PTR [rax-0x7ffd0000],eax
  42d39f:	add    BYTE PTR [rdi+rax*1],cl
  42d3a2:	add    BYTE PTR [rax],0xf
  42d3a5:	inc    eax
  42d3a7:	add    BYTE PTR [rdi],bl
  42d3a9:	(bad)  
  42d3aa:	inc    DWORD PTR [rdi]
  42d3ac:	(bad)  
  42d3ad:	(bad)  
  42d3ae:	(bad)  
  42d3af:	(bad)  
  42d3b0:	(bad)  
  42d3b1:	jmp    FWORD PTR [rax]
  42d3b3:	add    BYTE PTR [rax],al
  42d3b5:	add    BYTE PTR [rax],dl
  42d3b7:	add    BYTE PTR [rax],al
  42d3b9:	add    BYTE PTR [rax],ah
  42d3bb:	add    BYTE PTR [rax],al
  42d3bd:	add    BYTE PTR [rcx],al
  42d3bf:	add    BYTE PTR [rax],ah
  42d3c1:	add    BYTE PTR [rax],al
  42d3c3:	add    BYTE PTR [rax],al
  42d3c5:	add    BYTE PTR [rax+0x4],al
	...
  42d3ec:	add    BYTE PTR [rax],al
  42d3ee:	mov    ch,0x71
  42d3f0:	rex.WRXB icebp 
  42d3f2:	mov    cl,0x60
  42d3f4:	cmp    edi,edi
  42d3f6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  42d3f7:	pop    rax
  42d3f8:	xor    bh,ch
	...
  42d402:	(bad)  
  42d403:	adc    al,0x8e
  42d405:	rex.RX sub BYTE PTR [rcx],r10b
  42d408:	cmp    ch,0x28
  42d40b:	adc    DWORD PTR [rax-0x71ebd003],eax
  42d411:	pop    rcx
	...
  42d42e:	mov    ebx,0xffff4c70
  42d433:	mov    bl,0x8b
  42d435:	jmp    FWORD PTR [rdx+0xff385d]
  42d43b:	add    BYTE PTR [rax],al
  42d43d:	add    BYTE PTR [rax],al
  42d43f:	add    BYTE PTR [rax],al
  42d441:	add    BYTE PTR [rdx+rsi*1],ch
  42d444:	(bad)  
  42d445:	jmp    FWORD PTR [rip+0x2dfd8f13]        # 0x2e40635e
  42d44b:	adc    ecx,DWORD PTR [rdi-0x71ecd103]
  42d451:	inc    BYTE PTR [rax]
	...
  42d46b:	add    BYTE PTR [rax],al
  42d46d:	add    ah,al
  42d46f:	jbe    0x42d4c2
  42d471:	(bad)  
  42d472:	(bad)  
  42d473:	mov    eax,0x62afff94
  42d478:	cmp    al,0xff
	...
  42d482:	(bad)  
  42d483:	rex.RB sar r15d,cl
  42d486:	xor    esp,DWORD PTR [rax]
  42d488:	sahf   
  42d489:	push   QWORD PTR [rbx]
  42d48b:	and    BYTE PTR [rsi-0x71ecd101],bl
  42d491:	inc    DWORD PTR [rax]
	...
  42d4ab:	add    BYTE PTR [rax],al
  42d4ad:	add    dl,cl
  42d4af:	jge    0x42d509
  42d4b1:	(bad)  
  42d4b2:	(bad)  
  42d4b3:	mov    esi,0x68b6ff9e
  42d4b8:	rex.XB inc DWORD PTR [r8]
  42d4bb:	add    BYTE PTR [rax],al
  42d4bd:	add    BYTE PTR [rax],al
  42d4bf:	add    BYTE PTR [rax],al
  42d4c1:	add    BYTE PTR [rdx+0x58],dl
  42d4c4:	fdivr  st,st(7)
  42d4c6:	cmp    BYTE PTR [rsi],ch
  42d4c8:	lods   eax,DWORD PTR ds:[rsi]
  42d4c9:	(bad)  
  42d4ca:	cmp    BYTE PTR [rsi],ch
  42d4cc:	lods   eax,DWORD PTR ds:[rsi]
  42d4cd:	jmp    FWORD PTR [rsi]
  42d4cf:	adc    ecx,DWORD PTR [rsi+0xff]
	...
  42d4dd:	add    BYTE PTR [rcx+0x60],bh
  42d4e0:	rex.WRB jmp FWORD PTR [r14+0x55]
  42d4e4:	jmp    FWORD PTR [r15+0x55]
  42d4e8:	jmp    FWORD PTR [r15+0x56]
  42d4ec:	rex.X dec edi
  42d4ef:	sbb    DWORD PTR [rdi-0x1],0xfffffffe
  42d4f3:	(bad)  
  42d4f4:	test   eax,0x4b71beff
  42d4f9:	push   QWORD PTR [rax+0x56]
  42d4fc:	rex.X push QWORD PTR [rax+0x56]
  42d500:	rex.X jmp QWORD PTR [rdi+0x6c]
  42d504:	(bad)  
  42d506:	ds cmp eax,0x3d3effbf
  42d50c:	mov    edi,0x8e132eff
  42d511:	inc    DWORD PTR [rax]
  42d513:	add    BYTE PTR [rax],al
  42d515:	add    BYTE PTR [rax],al
  42d517:	add    BYTE PTR [rax],al
  42d519:	add    BYTE PTR [rdi-0x2006154],bh
  42d51f:	clc    
  42d520:	idiv   bh
  42d522:	fdivr  QWORD PTR [rsi-0x41230052]
  42d528:	scas   al,BYTE PTR es:[rdi]
  42d529:	call   rbp
  42d52b:	scas   eax,DWORD PTR es:[rdi]
  42d52c:	fwait
  42d52d:	call   rbp
  42d52f:	mov    ah,BYTE PTR [rsi-0x1]
  42d532:	dec    ebp
  42d534:	mov    ah,0xff
  42d536:	mov    bh,0x74
  42d538:	push   rbx
  42d539:	call   rbp
  42d53b:	scas   eax,DWORD PTR es:[rdi]
  42d53c:	fwait
  42d53d:	call   rsp
  42d53f:	mov    dh,0xa5
  42d541:	(bad)  
  42d542:	jnp    0x42d4c4
  42d544:	in     al,0xff
  42d546:	rex.XB
  42d547:	rex.WR (bad) 
  42d549:	inc    DWORD PTR [rbx+0x4c]
  42d54c:	(bad)  
  42d54d:	push   QWORD PTR [rbx]
  42d54f:	and    BYTE PTR [rsi+0xff],bl
  42d555:	add    BYTE PTR [rax],al
  42d557:	add    BYTE PTR [rax],al
  42d559:	add    dl,al
  42d55b:	scas   al,BYTE PTR es:[rdi]
  42d55c:	movabs al,ds:0xf7f9fdfffbfcfeff
  42d565:	(bad)  
  42d566:	out    dx,al
  42d567:	(bad)  
  42d569:	(bad)  
  42d56a:	fcom   QWORD PTR [rbx-0x1e02008f]
  42d570:	sar    bh,cl
  42d572:	std    
  42d573:	loope  0x42d547
  42d575:	(bad)  
  42d576:	std    
  42d577:	(bad)  
  42d578:	mov    esi,0x4869adff
  42d57d:	push   rcx
  42d57f:	jrcxz  0x42d55e
  42d581:	dec    DWORD PTR [rsi+0x48ffe993]
  42d587:	pop    rcx
  42d588:	(bad)  
  42d58a:	rex.W pop rcx
  42d58c:	(bad)  
  42d58e:	xor    esp,DWORD PTR [rax]
  42d590:	sahf   
  42d591:	inc    DWORD PTR [rax]
  42d593:	add    BYTE PTR [rax],al
  42d595:	add    BYTE PTR [rax],al
  42d597:	add    BYTE PTR [rax],al
  42d599:	add    dh,al
  42d59b:	mov    dl,0xa3
  42d59d:	(bad)  
  42d59e:	(bad)  
  42d59f:	(bad)  
  42d5a0:	(bad)  
  42d5a1:	(bad)  
  42d5a2:	(bad)  
  42d5a3:	std    
  42d5a4:	std    
  42d5a5:	jmp    rsi
  42d5a7:	movabs al,ds:0xd5f6ffebf2fdff7e
  42d5b0:	(bad)  
  42d5b1:	call   rcx
  42d5b3:	mov    ebp,DWORD PTR [rbx-0x1]
  42d5b6:	sti    
  42d5b7:	out    dx,al
  42d5b8:	out    0xff,al
  42d5ba:	std    
  42d5bb:	fadd   st,st(3)
  42d5bd:	(bad)  
  42d5be:	mov    eax,0x9eff4d6f
  42d5c3:	movabs ds:0xada1fff8cac3ffee,eax
  42d5cc:	hlt    
  42d5cd:	push   QWORD PTR [rbx]
  42d5cf:	and    BYTE PTR [rsi+0xff],bl
  42d5d5:	add    BYTE PTR [rax],al
  42d5d7:	add    BYTE PTR [rax],al
  42d5d9:	add    cl,cl
  42d5db:	mov    ch,0xa7
  42d5dd:	(bad)  
  42d5de:	(bad)  
  42d5df:	(bad)  
  42d5e0:	(bad)  
  42d5e1:	(bad)  
  42d5e2:	(bad)  
  42d5e3:	(bad)  
  42d5e4:	(bad)  
  42d5e5:	jmp    rcx
  42d5e7:	lahf   
  42d5e8:	jg     0x42d5e9
  42d5ea:	sti    
  42d5eb:	out    dx,al
  42d5ec:	out    0xff,al
  42d5ee:	loope  0x42d58a
  42d5f0:	js     0x42d5f1
  42d5f2:	(bad)  
  42d5f3:	(bad)  
  42d5f4:	(bad)  
  42d5f5:	call   rbp
  42d5f7:	mov    esp,DWORD PTR [rdi-0x1]
  42d5fa:	in     eax,0xc4
  42d5fc:	mov    bl,0xff
  42d5fe:	mov    edi,0x64ff5677
  42d603:	rex.WB push r9
  42d605:	(bad)  
  42d606:	jnp    0x42d677
  42d608:	jmp    QWORD PTR gs:[rbx+0x53]
  42d60c:	rex.XB jmp FWORD PTR [r15]
  42d60f:	adc    al,0x8e
  42d611:	pop    rcx
	...
  42d61a:	int    0xba
  42d61c:	stos   DWORD PTR es:[rdi],eax
  42d61d:	(bad)  
  42d61e:	(bad)  
  42d61f:	(bad)  
  42d620:	(bad)  
  42d621:	(bad)  
  42d622:	(bad)  
  42d623:	(bad)  
  42d624:	(bad)  
  42d625:	push   rcx
  42d627:	jrcxz  0x42d606
  42d629:	(bad)  
  42d62a:	jmp    0xffffffffe84255d0
  42d62f:	lahf   
  42d630:	jge    0x42d631
  42d632:	(bad)  
  42d633:	(bad)  
  42d634:	(bad)  
  42d635:	jmp    rax
  42d637:	cdq    
  42d638:	js     0x42d639
  42d63a:	mov    esi,0xf1ff5879
  42d63f:	jrcxz  0x42d61e
  42d641:	(bad)  
  42d642:	(bad)  
  42d643:	(bad)  
  42d644:	(bad)  
  42d645:	inc    ecx
  42d647:	mov    ecx,0x4b59ffb1
  42d64c:	cmp    al,0xff
	...
  42d65a:	sar    DWORD PTR [rsi+rbp*4-0x1],1
  42d661:	(bad)  
  42d662:	(bad)  
  42d663:	(bad)  
  42d664:	(bad)  
  42d665:	(bad)  
  42d666:	(bad)  
  42d667:	(bad)  
  42d668:	(bad)  
  42d669:	(bad)  
  42d66a:	(bad)  
  42d66b:	(bad)  
  42d66c:	(bad)  
  42d66d:	(bad)  
  42d66e:	(bad)  
  42d66f:	(bad)  
  42d670:	(bad)  
  42d671:	(bad)  
  42d672:	(bad)  
  42d673:	(bad)  
  42d674:	(bad)  
  42d675:	(bad)  
  42d676:	(bad)  
  42d677:	(bad)  
  42d678:	(bad)  
  42d679:	dec    DWORD PTR [rbx-0x74007d79]
  42d67f:	xchg   DWORD PTR [rdx-0x1],eax
  42d685:	push   QWORD PTR [rcx+rbp*4+0x5363ffa1]
  42d68c:	rex.XB jmp FWORD PTR [r10]
  42d68f:	and    ebx,DWORD PTR [rcx+rdi*2]
  42d692:	add    BYTE PTR [rax],al
  42d694:	add    BYTE PTR [rax],al
  42d696:	outs   dx,BYTE PTR ds:[rsi]
  42d697:	pop    rsp
  42d698:	rex.WXB std 
  42d69a:	(bad)  
  42d69b:	shl    BYTE PTR [rcx-0x1],0xff
  42d6a2:	(bad)  
  42d6a3:	(bad)  
  42d6a4:	(bad)  
  42d6a5:	(bad)  
  42d6a6:	(bad)  
  42d6a7:	(bad)  
  42d6a8:	(bad)  
  42d6a9:	jmp    rcx
  42d6ab:	loopne 0x42d68d
  42d6ad:	jmp    rdx
  42d6af:	loopne 0x42d691
  42d6b1:	jmp    rcx
  42d6b3:	(bad)  
  42d6b5:	push   rdx
  42d6b7:	icebp  
  42d6b8:	hlt    
  42d6b9:	dec    DWORD PTR [rbx-0x49007d79]
  42d6bf:	stos   BYTE PTR es:[rdi],al
  42d6c0:	(bad)  
  42d6c1:	jmp    QWORD PTR [rbx+0x53]
  42d6c4:	rex.XB push QWORD PTR [r14-0x630a4d47]
  42d6cb:	xchg   esp,eax
  42d6cc:	mov    edx,esi
  42d6ce:	pop    rdx
  42d6cf:	push   rbp
  42d6d0:	push   rcx
  42d6d1:	int3   
  42d6d2:	outs   dx,BYTE PTR ds:[rsi]
  42d6d3:	pop    rsp
  42d6d4:	rex.WXB std 
  42d6d6:	movabs ds:0xffffb4c3d7fb949a,eax
  42d6df:	(bad)  
  42d6e0:	(bad)  
  42d6e1:	(bad)  
  42d6e2:	(bad)  
  42d6e3:	(bad)  
  42d6e4:	(bad)  
  42d6e5:	jmp    QWORD PTR [rbx+0x7d]
  42d6e8:	mov    bh,bh
  42d6ea:	pop    rbp
  42d6eb:	jae    0x42d66e
  42d6ed:	call   FWORD PTR [rdx+0x71]
  42d6f0:	jge    0x42d6f1
  42d6f2:	pop    rax
  42d6f3:	ins    BYTE PTR es:[rdi],dx
  42d6f4:	jnp    0x42d6f5
  42d6f6:	ret    
  42d6f7:	int3   
  42d6f8:	sar    edi,1
  42d6fa:	mov    eax,DWORD PTR [rdi-0xf0b007e]
  42d700:	jmp    0x66b35304
  42d705:	(bad)  
  42d706:	(bad)  
  42d707:	in     al,dx
  42d708:	in     eax,0xf5
  42d70a:	ror    ebx,1
  42d70c:	ret    0xadf6
  42d70f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  42d710:	movabs ds:0xa1acbef271757af6,al
  42d719:	sbb    bl,cl
  42d71b:	(bad)  
  42d71c:	mov    dh,0xff
  42d71e:	(bad)  
  42d71f:	(bad)  
  42d720:	(bad)  
  42d721:	(bad)  
  42d722:	(bad)  
  42d723:	(bad)  
  42d724:	(bad)  
  42d725:	(bad)  
  42d726:	jl     0x42d6c7
  42d728:	test   eax,0xe0d89bff
  42d72d:	inc    DWORD PTR [rdi+0x6ff1d9cc]
  42d733:	(bad)  
  42d734:	fsqrt  
  42d736:	ret    
  42d737:	int3   
  42d738:	sar    edi,1
  42d73a:	mov    eax,DWORD PTR [rdi-0x7874007e]
  42d740:	(bad)  
  42d741:	(bad)  
  42d742:	(bad)  
  42d743:	(bad)  
  42d744:	(bad)  
  42d745:	jmp    QWORD PTR [rdi-0x6f476860]
  42d74b:	mov    al,BYTE PTR [rdx+0x62686dbe]
  42d751:	retf   
  42d752:	mov    esi,0x1aa1ac
  42d757:	add    BYTE PTR [rax],al
  42d759:	add    BYTE PTR [rax],al
  42d75b:	add    BYTE PTR [rax],al
  42d75d:	add    dl,bl
  42d75f:	(bad)
  42d762:	xlat   BYTE PTR ds:[rbx]
  42d763:	ret    
  42d764:	mov    ah,0xff
  42d766:	gs xchg ebp,eax
  42d768:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42d769:	jmp    FWORD PTR [rdx+rbp*8-0x155d0010]
  42d770:	cmc    
  42d771:	call   QWORD PTR [rax+rbx*8-0x4c59001c]
  42d778:	mov    edx,0xc3c5c6ff
  42d77d:	inc    ebp
  42d77f:	(bad)  
	...
  42d7a7:	add    BYTE PTR [rax],al
  42d7a9:	add    BYTE PTR [rsi-0x74003747],cl
  42d7af:	mov    bl,0xc2
  42d7b1:	inc    DWORD PTR [rdx+0xffb6a6]
	...
  42d7d7:	add    BYTE PTR [rax],al
  42d7d9:	add    al,bh
  42d7db:	ret    
  42d7dc:	add    BYTE PTR [rax],al
  42d7de:	clc    
  42d7df:	ret    
  42d7e0:	add    BYTE PTR [rax],al
  42d7e2:	clc    
  42d7e3:	ret    
  42d7e4:	add    BYTE PTR [rax],al
  42d7e6:	clc    
  42d7e7:	ret    
  42d7e8:	add    BYTE PTR [rax],al
  42d7ea:	add    BYTE PTR [rbx],0x0
  42d7ed:	add    BYTE PTR [rax],al
  42d7ef:	add    eax,DWORD PTR [rax]
  42d7f1:	add    BYTE PTR [rax],al
  42d7f3:	add    eax,DWORD PTR [rax]
  42d7f5:	add    BYTE PTR [rax],al
  42d7f7:	add    eax,DWORD PTR [rax]
  42d7f9:	add    BYTE PTR [rax],al
  42d7fb:	add    eax,DWORD PTR [rax]
  42d7fd:	add    BYTE PTR [rax],al
  42d7ff:	(bad)  
  42d800:	add    BYTE PTR [rax],al
  42d802:	add    BYTE PTR [rdx],al
	...
  42d80c:	add    BYTE PTR [rax],al
  42d80e:	add    BYTE PTR [rcx],al
  42d810:	add    BYTE PTR [rax],al
  42d812:	cmp    BYTE PTR [rdi],0x0
  42d815:	add    cl,dh
  42d817:	inc    DWORD PTR [rax]
  42d819:	add    BYTE PTR [rbx],cl
  42d81b:	add    BYTE PTR [rcx],al
  42d81e:	add    BYTE PTR [rax],al
  42d820:	add    bh,bh
  42d822:	(bad)  
  42d823:	(bad)  
  42d824:	inc    DWORD PTR [rcx]
  42d826:	add    BYTE PTR [rax],al
  42d828:	add    BYTE PTR [rax],al
  42d82a:	add    BYTE PTR [rax],al
  42d82c:	add    BYTE PTR [rdx+rax*1],cl
  42d82f:	add    BYTE PTR [rax],al
  42d831:	add    BYTE PTR [rcx+0x53],dl
  42d834:	jns    0x42d8a9
  42d836:	je     0x42d89d
  42d838:	ins    DWORD PTR es:[rdi],dx
  42d839:	cs rex.R jb 0x42d89e
  42d83d:	ja     0x42d8a8
  42d83f:	outs   dx,BYTE PTR ds:[rsi]
  42d840:	addr32 sub al,0x20
  42d843:	push   rsi
  42d844:	gs jb  0x42d8ba
  42d847:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  42d84e:	xor    BYTE PTR cs:[rsi],ch
  42d851:	xor    BYTE PTR [rax+riz*1],ch
  42d854:	rex.XB jne 0x42d8c3
  42d857:	je     0x42d8ce
  42d859:	jb     0x42d8c0
  42d85b:	cmp    eax,0x7475656e
  42d860:	jb     0x42d8c3
  42d862:	ins    BYTE PTR es:[rdi],dx
  42d863:	sub    al,0x20
  42d865:	push   rax
  42d866:	jne    0x42d8ca
  42d868:	ins    BYTE PTR es:[rdi],dx
  42d869:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  42d870:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  42d874:	(bad)  
  42d875:	xor    BYTE PTR [rbx],dh
  42d877:	xor    ax,0x3766
  42d87b:	xor    WORD PTR [rcx],si
  42d87e:	fs xor eax,0x61336130
  42d884:	add    eax,0x1
  42d889:	adc    edx,DWORD PTR [rbx+0x79]
  42d88c:	jae    0x42d902
  42d88e:	gs ins DWORD PTR es:[rdi],dx
  42d890:	cs rex.R jb 0x42d8f5
  42d894:	ja     0x42d8ff
  42d896:	outs   dx,BYTE PTR ds:[rsi]
  42d897:	movsxd rbp,DWORD PTR cs:[r15d+0x6e]
  42d89d:	add    al,BYTE PTR [rax]
  42d89f:	add    BYTE PTR [rax],al
  42d8a1:	or     BYTE PTR [rcx+0x63],cl
  42d8a4:	outs   dx,DWORD PTR ds:[rsi]
  42d8a5:	outs   dx,BYTE PTR ds:[rsi]
  42d8a6:	rex.R (bad) 
  42d8a8:	je     0x42d90b
  42d8aa:	or     BYTE PTR [rcx+0x63],cl
  42d8ad:	outs   dx,DWORD PTR ds:[rsi]
  42d8ae:	outs   dx,BYTE PTR ds:[rsi]
  42d8af:	push   rbx
  42d8b0:	imul   edi,DWORD PTR [rdx+0x65],0x13020407
  42d8b7:	push   rbx
  42d8b8:	jns    0x42d92d
  42d8ba:	je     0x42d921
  42d8bc:	ins    DWORD PTR es:[rdi],dx
  42d8bd:	cs rex.R jb 0x42d922
  42d8c1:	ja     0x42d92c
  42d8c3:	outs   dx,BYTE PTR ds:[rsi]
  42d8c4:	addr32 cs push rbx
  42d8c7:	imul   edi,DWORD PTR [rdx+0x65],0x2
  42d8ce:	add    al,BYTE PTR [rax]
  42d8d0:	add    BYTE PTR [rax],al
  42d8d2:	or     DWORD PTR [rbx],eax
  42d8d4:	add    BYTE PTR [rax],al
  42d8d6:	add    BYTE PTR [rip+0xfffffffffffffffc],al        # 0x42d8d8
  42d8dc:	adc    edx,DWORD PTR [rbx+0x79]
  42d8df:	jae    0x42d955
  42d8e1:	gs ins DWORD PTR es:[rdi],dx
  42d8e3:	cs rex.R jb 0x42d948
  42d8e7:	ja     0x42d952
  42d8e9:	outs   dx,BYTE PTR ds:[rsi]
  42d8ea:	addr32 cs push rbx
  42d8ed:	imul   edi,DWORD PTR [rdx+0x65],0x2
  42d8f4:	add    eax,0x74646977
  42d8f9:	push   0x69656806
  42d8fe:	addr32 push 0x8000074
  42d904:	or     BYTE PTR [rdx],al
	...
  42d90e:	add    BYTE PTR [rax],al
  42d910:	add    BYTE PTR [rdi],cl
  42d912:	add    eax,DWORD PTR [rax]
  42d914:	add    BYTE PTR [rax],al
  42d916:	xchg   esi,eax
  42d917:	(bad)  
  42d918:	add    BYTE PTR [rax],al
  42d91a:	add    al,BYTE PTR [rax]
  42d91c:	add    BYTE PTR [rcx],al
  42d91e:	add    BYTE PTR [rsi],al
  42d920:	add    BYTE PTR [rax],ah
  42d922:	and    BYTE PTR [rax],dl
  42d924:	add    BYTE PTR [rcx],al
  42d926:	add    BYTE PTR [rax+rax*1],al
  42d929:	call   0x6642d930
  42d92e:	add    BYTE PTR [rax],al
  42d930:	add    BYTE PTR [rax],dl
  42d932:	adc    BYTE PTR [rax],dl
  42d934:	add    BYTE PTR [rcx],al
  42d936:	add    BYTE PTR [rax+rax*1],al
  42d939:	sub    BYTE PTR [rcx],al
  42d93b:	add    BYTE PTR [rax],al
  42d93d:	rex.WRX add r8,QWORD PTR [rax]
  42d940:	add    BYTE PTR [rax],ah
  42d942:	and    BYTE PTR [rax],al
  42d944:	add    BYTE PTR [rcx],al
  42d946:	add    BYTE PTR [rax],cl
  42d948:	add    BYTE PTR [rax+0x76000008],ch
  42d94e:	add    al,0x0
  42d950:	add    BYTE PTR [rax],dl
  42d952:	adc    BYTE PTR [rax],al
  42d954:	add    BYTE PTR [rcx],al
  42d956:	add    BYTE PTR [rax],cl
  42d958:	add    BYTE PTR [rax+0x5],ch
  42d95b:	add    BYTE PTR [rax],al
  42d95d:	(bad)  
  42d95e:	or     eax,0x20200000
  42d963:	add    BYTE PTR [rax],al
  42d965:	add    DWORD PTR [rax],eax
  42d967:	and    BYTE PTR [rax],al
  42d969:	test   al,0x10
  42d96b:	add    BYTE PTR [rax],al
  42d96d:	xchg   BYTE PTR [rdx],dl
  42d96f:	add    BYTE PTR [rax],al
  42d971:	adc    BYTE PTR [rax],dl
  42d973:	add    BYTE PTR [rax],al
  42d975:	add    DWORD PTR [rax],eax
  42d977:	and    BYTE PTR [rax],al
  42d979:	push   0x2e000004
  42d97e:	and    eax,DWORD PTR [rax]
  42d980:	add    BYTE PTR [rax],ch
  42d982:	add    BYTE PTR [rax],al
  42d984:	add    BYTE PTR [rax],ah
  42d986:	add    BYTE PTR [rax],al
  42d988:	add    BYTE PTR [rax+0x0],al
  42d98b:	add    BYTE PTR [rax],al
  42d98d:	add    DWORD PTR [rax],eax
  42d98f:	add    al,0x0
  42d991:	add    BYTE PTR [rax],al
  42d993:	add    BYTE PTR [rax],al
  42d995:	add    BYTE PTR [rdx],al
	...
  42d9af:	add    BYTE PTR [rax],0x0
  42d9b2:	add    BYTE PTR [rax],0x0
  42d9b5:	add    BYTE PTR [rax+0x800080],al
  42d9bb:	add    BYTE PTR [rax],al
  42d9bd:	add    BYTE PTR [rax],0x80
  42d9c0:	add    BYTE PTR [rax-0x7fffff80],al
  42d9c6:	add    BYTE PTR [rax-0x3f3f4000],0x0
  42d9cd:	add    BYTE PTR [rax],al
  42d9cf:	inc    DWORD PTR [rax]
  42d9d1:	add    bh,bh
  42d9d3:	add    BYTE PTR [rax],al
  42d9d5:	add    bh,bh
  42d9d7:	inc    DWORD PTR [rax]
  42d9d9:	inc    DWORD PTR [rax]
  42d9db:	add    BYTE PTR [rax],al
  42d9dd:	inc    DWORD PTR [rax]
  42d9df:	inc    DWORD PTR [rax]
  42d9e1:	(bad)  
  42d9e2:	inc    DWORD PTR [rax]
  42d9e4:	add    bh,bh
  42d9e6:	(bad)  
  42d9e7:	inc    DWORD PTR [rax]
	...
  42d9f9:	or     BYTE PTR [rax+0x88],cl
	...
  42da07:	add    BYTE PTR [rax],al
  42da09:	psllw  mm6,mm7
	...
  42da18:	add    BYTE PTR [rax],cl
  42da1a:	jns    0x42da94
	...
  42da28:	add    BYTE PTR [rdi],al
  42da2a:	lahf   
  42da2b:	mov    DWORD PTR [rax],eax
  42da2d:	add    BYTE PTR [rax],al
  42da2f:	add    BYTE PTR [rsi+0x70],dh
  42da32:	add    BYTE PTR [rax],al
  42da34:	add    DWORD PTR [rip+0x8000010],edx        # 0x842da4a
  42da3a:	mov    BYTE PTR [rbp+0x7000000],al
  42da40:	mov    BYTE PTR [rsi+0x0],dh
  42da43:	add    BYTE PTR [rdi+0x1113],dl
  42da49:	add    BYTE PTR [rax],al
  42da4b:	add    BYTE PTR [rax-0x7f90000],dl
  42da51:	test   DWORD PTR [rax],eax
  42da53:	add    BYTE PTR [rcx],bl
  42da55:	cdq    
  42da56:	push   rcx
  42da57:	add    BYTE PTR [rax],al
  42da59:	or     BYTE PTR [rax+0x88],cl
  42da5f:	(bad)  
  42da60:	clc    
  42da61:	xchg   BYTE PTR [rax],al
  42da63:	add    BYTE PTR [rdi-0x6d],dh
  42da66:	xchg   edx,eax
  42da67:	add    BYTE PTR [rax],al
  42da69:	psubw  mm7,mm0
  42da6c:	add    BYTE PTR [rax],al
  42da6e:	add    BYTE PTR [rax],cl
  42da70:	clc    
  42da71:	jbe    0x42da73
  42da73:	add    BYTE PTR [rdi+0x9595],dl
  42da79:	or     BYTE PTR [rdi-0x68],dh
  42da7c:	add    BYTE PTR [rax],al
  42da7e:	add    BYTE PTR [rdi],al
  42da80:	clc    
  42da81:	test   DWORD PTR [rax],eax
  42da83:	add    BYTE PTR [rax+0x7193],bl
  42da89:	(bad)  
  42da8a:	lahf   
  42da8b:	jns    0x42da8d
  42da8d:	add    BYTE PTR [rax],al
  42da8f:	or     al,bh
  42da91:	xchg   BYTE PTR [rax],al
  42da93:	add    BYTE PTR [rcx+0x79],bh
  42da96:	xchg   ecx,eax
  42da97:	add    BYTE PTR [rax],al
  42da99:	or     BYTE PTR [rax+0x87],cl
  42da9f:	or     al,bh
  42daa1:	jbe    0x42daa3
  42daa3:	add    BYTE PTR [rax+0x7197],bl
  42daa9:	add    BYTE PTR [rax],al
  42daab:	add    BYTE PTR [rax-0x7f80000],dl
  42dab1:	xchg   DWORD PTR [rax],eax
  42dab3:	add    BYTE PTR [rax-0x69],bh
  42dab6:	xchg   edi,eax
  42dab7:	add    BYTE PTR [rax],al
  42dab9:	or     BYTE PTR [rax+0x88],cl
  42dabf:	or     al,bh
  42dac1:	jbe    0x42dac3
  42dac3:	add    BYTE PTR [rax+0x7179],bl
  42dac9:	psubw  mm7,mm0
  42dacc:	add    BYTE PTR [rax],al
  42dace:	add    BYTE PTR [rax],cl
  42dad0:	clc    
  42dad1:	xchg   DWORD PTR [rax],eax
  42dad3:	add    BYTE PTR [rax+0x9798],cl
  42dad9:	or     BYTE PTR [rdi-0x68],dh
  42dadc:	add    BYTE PTR [rax],al
  42dade:	add    BYTE PTR [rax-0x8],bh
  42dae1:	xchg   BYTE PTR [rax+0x0],dh
  42dae4:	cwde   
  42dae5:	xchg   DWORD PTR [rdi-0x60f90000],edx
  42daeb:	jns    0x42daed
  42daed:	add    BYTE PTR [rdi],al
  42daef:	mov    al,bh
  42daf1:	mov    BYTE PTR [rsi+0x0],dh
  42daf4:	mov    BYTE PTR [rax+0x8000071],bl
  42dafa:	mov    BYTE PTR [rdi-0x780000],al
  42db00:	(bad)  
  42db01:	inc    DWORD PTR [rdi-0x68776780]
  42db07:	add    BYTE PTR [rax],al
  42db09:	add    BYTE PTR [rax],al
  42db0b:	add    BYTE PTR [rax+0x67f88800],dl
  42db11:	(bad)  
  42db12:	test   DWORD PTR [rax-0x78],0x7987
  42db19:	add    BYTE PTR [rax],al
  42db1b:	add    BYTE PTR [rax],al
  42db1d:	add    BYTE PTR [rdi-0x7f7ff7a],cl
  42db23:	(bad)  
  42db24:	mov    BYTE PTR [rax+0x97],cl
  42db2a:	add    BYTE PTR [rax],al
  42db2c:	add    BYTE PTR [rax],al
  42db2e:	pop    QWORD PTR [rdi+0x70f70800]
  42db34:	js     0x42dac5
  42db36:	xchg   DWORD PTR [rax],eax
  42db38:	add    BYTE PTR [rax],al
  42db3a:	add    BYTE PTR [rax],al
  42db3c:	add    BYTE PTR [rax],al
  42db3e:	(bad)  
  42db3f:	div    DWORD PTR [rax+0x7f]
  42db42:	clc    
  42db43:	jo     0x42dacc
  42db45:	xchg   DWORD PTR [rdi],esi
  42db47:	add    BYTE PTR [rax],al
  42db49:	add    BYTE PTR [rax],al
  42db4b:	add    BYTE PTR [rax],al
  42db4d:	add    BYTE PTR [rax],cl
  42db4f:	jmp    QWORD PTR [rax-0x1]
  42db52:	xchg   DWORD PTR [rax],eax
  42db54:	(bad)  
  42db55:	xchg   DWORD PTR [rax+0x0],edx
  42db58:	add    BYTE PTR [rax],al
  42db5a:	add    BYTE PTR [rax],al
  42db5c:	add    BYTE PTR [rax],al
  42db5e:	add    BYTE PTR [rdi+0x708770],al
  42db64:	(bad)  
  42db65:	mul    DWORD PTR [rax+0x0]
	...
  42db74:	(bad)  
  42db75:	not    DWORD PTR [rax+0x0]
	...
  42db80:	add    BYTE PTR [rax],al
  42db82:	ja     0x42db84
  42db84:	or     BYTE PTR [rdi+0x740070],al
  42db8a:	add    BYTE PTR [rax],al
  42db8c:	add    BYTE PTR [rax],al
  42db8e:	add    BYTE PTR [rax],al
  42db90:	add    BYTE PTR [rax],cl
  42db92:	mov    BYTE PTR [rdi-0x79],dh
  42db95:	mov    BYTE PTR [rdi+0x43],ah
  42db98:	rex.XB add BYTE PTR [r8],al
  42db9b:	add    BYTE PTR [rax],al
  42db9d:	add    BYTE PTR [rax],al
  42db9f:	add    BYTE PTR [rax],al
  42dba1:	or     al,bh
  42dba3:	mov    BYTE PTR [rax+0x77787788],cl
	...
  42dbb1:	(bad)  
  42dbb2:	dec    DWORD PTR [rax-0x78770771]
  42dbb8:	jo     0x42dbba
  42dbba:	add    BYTE PTR [rax],al
  42dbbc:	add    BYTE PTR [rax],al
  42dbbe:	add    BYTE PTR [rax],al
  42dbc0:	add    BYTE PTR [rax],cl
  42dbc2:	dec    DWORD PTR [rax+0x778fff8f]
	...
  42dbd0:	add    BYTE PTR [rax],al
  42dbd2:	mov    BYTE PTR [rax],al
  42dbd4:	mov    BYTE PTR [rdi-0x79],dh
  42dbd7:	jo     0x42dbd9
	...
  42dbe9:	(bad)  
  42dbea:	(bad)  
  42dbeb:	(bad)  
  42dbec:	inc    DWORD PTR [rbx-0x7c000001]
  42dbf2:	(bad)  
  42dbf3:	(bad)  
  42dbf4:	inc    DWORD PTR [rbx-0x7c000001]
  42dbfa:	cld    
  42dbfb:	jle    0x42dc1c
  42dbfd:	cmp    eax,0x3c
  42dc00:	paddw  mm7,mm0
  42dc03:	cmp    al,0xf
  42dc05:	cmp    eax,0x3c
  42dc08:	jae    0xffffffff83521906
  42dc0e:	clc    
  42dc0f:	cmp    al,0xf
  42dc11:	cmp    eax,0x3c
  42dc14:	jae    0xfffffffffd521912
  42dc1a:	clc    
  42dc1b:	cmp    al,0xf
  42dc1d:	cmp    eax,0x3c
  42dc20:	jae    0xffffffff8352191e
  42dc26:	lock sbb al,0xf
  42dc29:	and    eax,0xc
  42dc2c:	jae    0xfffffffffd51e0f2
  42dc32:	rol    BYTE PTR [rdi+rcx*1],0xff
  42dc36:	ret    
  42dc37:	test   BYTE PTR [rdi],cl
  42dc39:	inc    ebx
  42dc3b:	test   BYTE PTR [rdi],cl
  42dc3d:	inc    ecx
  42dc3f:	add    al,0xf
  42dc41:	jmp    rcx
  42dc43:	(bad)  
  42dc44:	(bad)  
  42dc45:	push   rcx
  42dc47:	(bad)  
  42dc48:	(bad)  
  42dc49:	(bad)  
  42dc4a:	(bad)  
  42dc4b:	(bad)  
  42dc4c:	(bad)  
  42dc4d:	(bad)  
  42dc4e:	dec    esi
  42dc50:	sbb    al,0xff
  42dc52:	inc    DWORD PTR [rax-0x7f000100]
  42dc58:	add    bh,bh
  42dc5a:	inc    DWORD PTR [rax-0x7f0000ff]
  42dc60:	add    edi,edi
  42dc62:	dec    esp
  42dc64:	(bad)  
  42dc65:	(bad)  
  42dc66:	(bad)  
  42dc67:	(bad)  
  42dc68:	jmp    FWORD PTR [rax]
  42dc6a:	add    BYTE PTR [rax],al
  42dc6c:	add    BYTE PTR [rax],dl
  42dc6e:	add    BYTE PTR [rax],al
  42dc70:	add    BYTE PTR [rax],ah
  42dc72:	add    BYTE PTR [rax],al
  42dc74:	add    BYTE PTR [rcx],al
  42dc76:	add    BYTE PTR [rax+rax*1],al
  42dc79:	add    BYTE PTR [rax],al
  42dc7b:	add    BYTE PTR [rax],al
  42dc7d:	add    BYTE PTR [rax],0x0
	...
  42dc94:	add    BYTE PTR [rax],al
  42dc96:	add    BYTE PTR [rax+0x800000],al
  42dc9c:	add    BYTE PTR [rax],al
  42dc9e:	add    BYTE PTR [rax+0x8000],0x0
  42dca5:	add    BYTE PTR [rax],0x80
  42dca8:	add    BYTE PTR [rax-0x7fffff80],al
  42dcae:	add    BYTE PTR [rax-0x3f3f4000],0x0
  42dcb5:	add    BYTE PTR [rax],al
  42dcb7:	inc    DWORD PTR [rax]
  42dcb9:	add    bh,bh
  42dcbb:	add    BYTE PTR [rax],al
  42dcbd:	add    bh,bh
  42dcbf:	inc    DWORD PTR [rax]
  42dcc1:	inc    DWORD PTR [rax]
  42dcc3:	add    BYTE PTR [rax],al
  42dcc5:	inc    DWORD PTR [rax]
  42dcc7:	inc    DWORD PTR [rax]
  42dcc9:	(bad)  
  42dcca:	inc    DWORD PTR [rax]
  42dccc:	add    bh,bh
  42dcce:	(bad)  
  42dccf:	inc    DWORD PTR [rax]
  42dcd1:	mov    BYTE PTR [rax+0x0],al
  42dcd7:	add    BYTE PTR [rax],al
  42dcd9:	mov    DWORD PTR [rax+0x0],eax
  42dcdf:	add    BYTE PTR [rax],al
  42dce1:	mov    BYTE PTR [rax+0x7],dh
  42dce4:	add    BYTE PTR [ecx],al
  42dce7:	adc    BYTE PTR [rax],al
  42dce9:	add    BYTE PTR [rax],al
  42dceb:	(bad)  
  42dcec:	mov    WORD PTR [rax],es
  42dcee:	xchg   ebp,eax
  42dcef:	adc    eax,0xc80f700
  42dcf4:	xchg   BYTE PTR [rax],al
  42dcf6:	jno    0x42dd69
  42dcf8:	add    BYTE PTR [rcx+0x8c0880],cl
  42dcfe:	xchg   edi,eax
  42dcff:	xchg   ecx,eax
  42dd00:	add    BYTE PTR [rax+0x870670],cl
  42dd06:	mov    DWORD PTR [rcx+0x0],esi
  42dd09:	add    BYTE PTR [rax],al
  42dd0b:	or     BYTE PTR [rsi+0x798900],cl
  42dd11:	mov    BYTE PTR [rax-0x768f7778],al
  42dd17:	jns    0x42dd19
  42dd19:	jns    0x42dca2
  42dd1b:	clc    
  42dd1c:	mov    BYTE PTR [rdi-0x70ff7a78],al
  42dd22:	ja     0x42dd1b
  42dd24:	(bad)  
  42dd25:	mov    WORD PTR [rdi],es
  42dd27:	jo     0x42dd29
  42dd29:	add    BYTE PTR [rax],cl
  42dd2b:	xchg   DWORD PTR [rax],ecx
  42dd2d:	(bad)  
  42dd2e:	or     BYTE PTR [rax+0x0],dh
  42dd31:	add    BYTE PTR [rax],al
  42dd33:	add    BYTE PTR [rax],al
  42dd35:	test   DWORD PTR [rax],0x740
  42dd3b:	add    BYTE PTR [rax],al
  42dd3d:	mov    BYTE PTR [rax+0x77],ch
  42dd40:	ja     0x42dd42
  42dd42:	add    BYTE PTR [rax],al
  42dd44:	add    BYTE PTR [rdi+0x70887f],cl
  42dd4a:	add    BYTE PTR [rax],al
  42dd4c:	add    BYTE PTR [rax+0x1f007708],cl
  42dd52:	inc    DWORD PTR [rax]
  42dd54:	add    BYTE PTR [rdi],bl
  42dd56:	inc    DWORD PTR [rax]
  42dd58:	add    BYTE PTR [rax],bl
  42dd5a:	out    0x0,eax
  42dd5c:	add    al,bh
  42dd5e:	ret    
  42dd5f:	add    BYTE PTR [rax],al
  42dd61:	sbb    bl,al
  42dd63:	add    BYTE PTR [rax],al
  42dd65:	sbb    bl,al
  42dd67:	add    BYTE PTR [rax],al
  42dd69:	sbb    bl,al
  42dd6b:	add    BYTE PTR [rax],al
  42dd6d:	clc    
  42dd6e:	ret    
  42dd6f:	add    BYTE PTR [rax],al
  42dd71:	adc    BYTE PTR [rbx+0x0],al
  42dd74:	add    BYTE PTR [rax],al
  42dd76:	add    eax,DWORD PTR [rax]
  42dd78:	add    BYTE PTR [rdx],al
  42dd7a:	(bad)  
  42dd7b:	add    BYTE PTR [rax],al
  42dd7d:	loop   0x42dde6
  42dd7f:	add    BYTE PTR [rax],al
  42dd81:	jmp    QWORD PTR [rsi]
  42dd83:	add    BYTE PTR [rax],al
  42dd85:	inc    DWORD PTR [rax]
  42dd87:	add    BYTE PTR [rax],al
  42dd89:	inc    DWORD PTR [rcx]
  42dd8b:	add    BYTE PTR [rax],al
  42dd8d:	jmp    QWORD PTR [rbx]
  42dd8f:	add    BYTE PTR [rax],al
  42dd91:	sub    BYTE PTR [rax],al
  42dd93:	add    BYTE PTR [rax],al
  42dd95:	and    BYTE PTR [rax],al
  42dd97:	add    BYTE PTR [rax],al
  42dd99:	add    BYTE PTR [rax],al
  42dd9c:	add    BYTE PTR [rcx],al
  42dd9e:	add    BYTE PTR [rax],cl
  42dda0:	add    BYTE PTR [rax],al
  42dda2:	add    BYTE PTR [rax],al
  42dda4:	add    BYTE PTR [rax],al
  42dda6:	add    al,0x0
	...
  42ddb0:	add    BYTE PTR [rax],al
  42ddb2:	add    DWORD PTR [rax],eax
  42ddb4:	add    BYTE PTR [rax],al
  42ddb6:	add    DWORD PTR [rax],eax
  42ddb8:	add    BYTE PTR [rax],al
  42ddba:	add    BYTE PTR [rax],al
  42ddbc:	add    BYTE PTR [rdi+rdi*1+0x37],cl
  42ddc0:	add    BYTE PTR [rbp+0x41],cl
  42ddc3:	cmp    DWORD PTR [rax],eax
  42ddc5:	pop    rax
  42ddc6:	rex.WB (bad) 
  42ddc8:	add    BYTE PTR [rbx+0x48],ah
  42ddcb:	xor    eax,DWORD PTR [rax]
  42ddcd:	fs rex.WB xor al,0x0
  42ddd1:	rex.WR cmp BYTE PTR [eax],r8b
  42ddd5:	push   0x6a00384c
  42ddda:	push   rax
  42dddb:	cmp    al,0x0
  42dddd:	sbb    al,0x10
  42dddf:	pop    rdx
  42dde0:	add    BYTE PTR [rsi],bl
  42dde2:	adc    ebx,DWORD PTR [rax+rax*1+0x22]
  42dde6:	(bad)  
  42dde7:	(bad)  
  42dde8:	add    BYTE PTR [rsi],ah
  42ddea:	sbb    esp,DWORD PTR [rax+rax*1+0x27]
  42ddee:	sbb    al,0x65
  42ddf0:	add    BYTE PTR [rcx],ch
  42ddf2:	(bad)  
  42ddf3:	push   0x6a212b00
  42ddf8:	add    BYTE PTR [rbx+riz*1],ch
  42ddfb:	imul   eax,DWORD PTR [rax],0x2f
  42ddfe:	and    eax,0x2932006d
  42de03:	jno    0x42de05
  42de05:	cmp    BYTE PTR [rcx],dh
  42de07:	js     0x42de09
  42de09:	(bad)  
  42de0a:	cmp    BYTE PTR [rdi+0x0],bh
  42de0d:	push   rsp
  42de0e:	rex.RXB
  42de0f:	add    BYTE PTR [rbx+0x4d],bl
  42de13:	add    BYTE PTR [rdi+rcx*2+0x48],r11b
  42de18:	add    BYTE PTR [rsi+0x54],ch
  42de1b:	add    BYTE PTR [rcx+0x53],spl
  42de1f:	rex.WXB add BYTE PTR [r10+0x58],sil
  42de23:	add    BYTE PTR [rdx+rbx*2+0x46],r14b
  42de28:	add    BYTE PTR [rsi+0x5c],dh
  42de2b:	rex.WB add BYTE PTR [r15+0x5c],spl
  42de2f:	push   rbp
  42de30:	add    BYTE PTR [rax+0x60],bh
  42de33:	rex.WR add BYTE PTR [rdi+0x64],r15b
  42de37:	push   rdx
  42de38:	add    BYTE PTR [rbp+0x69],bh
  42de3b:	pop    rdi
  42de3c:	add    BYTE PTR [rbp+0x6a],dh
  42de3f:	data16 add BYTE PTR [rbx+0x6a],bh
  42de43:	(bad)  
  42de44:	add    BYTE PTR [rbx-0x7bffa695],al
  42de4a:	jno    0x42deb1
  42de4c:	add    BYTE PTR [rcx-0x78ff9e8e],cl
  42de52:	je     0x42debd
  42de54:	add    BYTE PTR [rbp-0x6fff9788],cl
  42de5a:	jns    0x42dec3
  42de5c:	add    BYTE PTR [rbx-0x68ff9484],dl
  42de62:	jg     0x42ded2
  42de64:	add    BYTE PTR [rbx-0x73ff8d85],cl
  42de6a:	jnp    0x42dee3
  42de6c:	add    BYTE PTR [rax-0x63ff8e83],dl
  42de72:	sub    DWORD PTR [rdi+0x0],0x7b818c
  42de79:	xchg   edx,eax
  42de7a:	test   BYTE PTR [rsi+0x0],bh
  42de7d:	lahf   
  42de7e:	mov    BYTE PTR [rdx+0x0],bh
  42de81:	movabs eax,ds:0xa0007b8ba4007587
  42de8a:	mov    edi,DWORD PTR [rax+rax*1-0x5c]
  42de8e:	mov    edi,DWORD PTR [rax+rax*1-0x59]
  42de92:	lea    edi,[rax+rax*1+0x16]
  42de96:	sbb    ebp,DWORD PTR [rdx-0x55e3e900]
  42de9c:	add    BYTE PTR [rax],bl
  42de9e:	sbb    eax,0x1f1900ab
  42dea3:	lods   al,BYTE PTR ds:[rsi]
  42dea4:	add    BYTE PTR [rdx],bl
  42dea6:	and    BYTE PTR [rbp-0x4fdae000],ch
  42deac:	add    BYTE PTR [rsi],ah
  42deae:	sub    esi,DWORD PTR [rax+rax*1+0xb8322c]
  42deb5:	cmp    al,0x36
  42deb7:	mov    edi,0xbd393400
  42debc:	add    BYTE PTR [rsi+0x40],al
  42debf:	xchg   BYTE PTR [rax],al
  42dec1:	rex.WRB
  42dec2:	rex.W mov es,WORD PTR [rax]
  42dec5:	push   rbp
  42dec6:	push   rcx
  42dec7:	xchg   esi,eax
  42dec8:	add    BYTE PTR [rdx+rbx*2-0x62],bl
  42decc:	add    BYTE PTR [rbp+0x7c],bh
  42decf:	mov    esp,0xc6191400
  42ded4:	add    BYTE PTR [rdi],dl
  42ded6:	sbb    eax,0x131300c7
  42dedb:	iret   
  42dedc:	add    BYTE PTR [rdx],bl
  42dede:	and    al,cl
  42dee0:	add    BYTE PTR [rsi],bl
  42dee2:	and    al,0xca
  42dee4:	add    BYTE PTR [rcx],ah
  42dee6:	(bad)  
  42dee7:	retf   0x2600
  42deea:	sub    al,0xcb
  42deec:	add    BYTE PTR [rdx],ch
  42deee:	xor    ch,cl
  42def0:	add    BYTE PTR [rdx+rsi*1],ch
  42def3:	int    0x0
  42def5:	cmp    DWORD PTR [rcx+rax*8],esi
  42def8:	add    BYTE PTR [rdx],bh
  42defa:	(bad)  
  42defb:	rol    DWORD PTR [rax],0x30
  42defe:	ss iret 
  42df00:	add    BYTE PTR [rbx],dh
  42df02:	cmp    bh,cl
  42df04:	add    BYTE PTR [rcx+rdi*1],dh
  42df07:	iret   
  42df08:	add    BYTE PTR [rip+0x2a00d325],ah        # 0x2a43b233
  42df0e:	sub    dl,ah
  42df10:	add    BYTE PTR [rdx],bh
  42df12:	rex rol DWORD PTR [rax],1
  42df15:	(bad)  
  42df16:	rex.RB rol DWORD PTR [r8],cl
  42df19:	rex.B
  42df1a:	(bad)
  42df1e:	rex.WRX retf 0x5000
  42df22:	push   rbp
  42df23:	(bad)  
  42df24:	add    BYTE PTR [rcx+0x47],al
  42df27:	rol    DWORD PTR [rax],cl
  42df29:	rex.RX
  42df2a:	rex.WXB (bad) 
  42df2c:	add    BYTE PTR [rax+0x4e],cl
  42df2f:	(bad)  
  42df30:	add    BYTE PTR [rcx+0x41],al
  42df33:	fld    DWORD PTR [rax]
  42df35:	rex.RX
  42df36:	rex.RX fiadd DWORD PTR [rax]
  42df39:	rex.WXB push r8
  42df3b:	(bad)  
  42df3c:	add    BYTE PTR [rcx+rdx*2-0x2a],cl
  42df40:	add    BYTE PTR [rax+0x55],dl
  42df43:	xlat   BYTE PTR ds:[rbx]
  42df44:	add    BYTE PTR [rsi+0x5b],dl
  42df47:	rol    DWORD PTR [rax],cl
  42df49:	push   rdx
  42df4a:	push   rdi
  42df4b:	fadd   DWORD PTR [rax]
  42df4d:	push   rsi
  42df4e:	pop    rsp
  42df4f:	fiadd  DWORD PTR [rax]
  42df51:	pop    rdx
  42df52:	pop    rsi
  42df53:	fld    DWORD PTR [rax]
  42df55:	pop    rbx
  42df56:	(bad)  
  42df57:	xlat   BYTE PTR ds:[rbx]
  42df58:	add    BYTE PTR [rsi+0x63],bl
  42df5b:	fild   DWORD PTR [rax]
  42df5d:	pop    rdi
  42df5e:	fadd   QWORD PTR fs:[rax]
  42df61:	js     0x42dfd2
  42df63:	int3   
  42df64:	add    BYTE PTR [rax+0x66],ah
  42df67:	fiadd  DWORD PTR [rax]
  42df69:	(bad)  
  42df6a:	data16 fadd QWORD PTR [rax]
  42df6d:	movsxd ebp,DWORD PTR [rax-0x23]
  42df70:	add    BYTE PTR [rbp+0x6b],ah
  42df73:	fadd   QWORD PTR [rax]
  42df75:	data16 ins BYTE PTR es:[rdi],dx
  42df77:	fiadd  WORD PTR [rax]
  42df79:	imul   ebp,DWORD PTR [rdi-0x22],0xe0746f00
  42df80:	add    BYTE PTR [rax+0x70],dh
  42df83:	loop   0x42df85
  42df85:	jne    0x42e000
  42df87:	loop   0x42df89
  42df89:	jge    0x42e008
  42df8b:	in     eax,0x0
  42df8d:	test   DWORD PTR [rbx-0x34],edi
  42df90:	add    BYTE PTR [rax+rax*4-0x1d],bh
  42df94:	add    BYTE PTR [rdx-0x80],bh
  42df97:	in     al,0x0
  42df99:	jge    0x42df1e
  42df9b:	in     eax,0x0
  42df9d:	xchg   edi,eax
  42df9e:	xchg   BYTE PTR [rdx-0x7c756a00],al
  42dfa4:	add    BYTE PTR [rdx-0x69ff7876],dl
  42dfaa:	mov    WORD PTR [rdi-0x7f746200],es
  42dfb0:	add    BYTE PTR [rsi-0x64ff7674],dl
  42dfb6:	xchg   ecx,eax
  42dfb7:	mov    al,BYTE PTR [rax]
  42dfb9:	sahf   
  42dfba:	xchg   ebp,eax
  42dfbb:	xchg   ecx,eax
  42dfbc:	add    BYTE PTR [rax+rbx*4-0x715cff6a],bl
  42dfc3:	test   BYTE PTR [rax],al
  42dfc5:	test   eax,0xa9008693
  42dfca:	xchg   esp,eax
  42dfcb:	xchg   BYTE PTR [rax],al
  42dfcd:	scas   al,BYTE PTR es:[rdi]
  42dfce:	xchg   esp,eax
  42dfcf:	test   BYTE PTR [rax],al
  42dfd1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42dfd2:	xchg   ebx,eax
  42dfd3:	mov    DWORD PTR [rax],eax
  42dfd5:	mov    cl,0x9a
  42dfd7:	lea    eax,[rax]
  42dfd9:	mov    ch,0x9b
  42dfdb:	mov    WORD PTR [rax],es
  42dfdd:	movabs ds:0xa1009098a7009098,eax
  42dfe6:	cwde   
  42dfe7:	xchg   esp,eax
  42dfe8:	add    BYTE PTR [rbp-0x56ff6c62],ch
  42dfee:	popf   
  42dfef:	xchg   esi,eax
  42dff0:	add    BYTE PTR [rdi-0x5bff6961],ch
  42dff6:	popf   
  42dff7:	cdq    
  42dff8:	add    BYTE PTR [rcx-0x53ff6b61],dh
  42dffe:	movabs al,ds:0xa3bc0094a0b50098
  42e007:	xchg   ebp,eax
  42e008:	add    BYTE PTR [rbx-0x43ff695c],bh
  42e00e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  42e00f:	xchg   ebp,eax
  42e010:	add    BYTE PTR [rsi+riz*4-0x5947ff66],dh
  42e017:	cdq    
  42e018:	add    BYTE PTR [rdi-0x48ff6559],bh
  42e01e:	test   eax,0xaabb009f
  42e023:	popf   
  42e024:	add    BYTE PTR [rsp+riz*4-0x5b4bff5f],ch
  42e02b:	movabs ds:0xb3a2b100a9afbc00,eax
  42e034:	add    BYTE PTR [rdi-0x3dff4e4a],bh
  42e03a:	lods   al,BYTE PTR ds:[rsi]
  42e03b:	movabs al,ds:0xa5b1c500a4aec000
  42e044:	add    bh,al
  42e046:	mov    bl,0xa9
  42e048:	add    ch,al
  42e04a:	mov    bh,0xad
  42e04c:	add    cl,cl
  42e04e:	mov    ah,0xa9
  42e050:	add    cl,cl
  42e052:	mov    bh,0xad
  42e054:	add    ah,cl
  42e056:	mov    bh,0xad
  42e058:	add    bl,cl
  42e05a:	mov    eax,0xb9cc00ad
  42e05f:	scas   eax,DWORD PTR es:[rdi]
  42e060:	add    dl,al
  42e062:	mov    ecx,0xbbc600b4
  42e067:	mov    ch,0x0
  42e069:	(bad)  
  42e06a:	mov    edi,0xbfd000b9
  42e06f:	mov    cl,0x0
  42e071:	sar    BYTE PTR [rbp-0x3e31ff4c],1
  42e077:	mov    eax,0xb8c1d200
  42e07c:	add    al,dl
  42e07e:	(bad)  
  42e07f:	mov    ebp,0xbbc9da00
  42e084:	add    al,bl
  42e086:	enter  0xbf,0xdc
  42e08a:	retf   0xbd
  42e08d:	add    DWORD PTR [rsi-0x757aff1a],0x8b8600e6
  42e097:	call   0xffffffffe9d46c9c
  42e09c:	add    BYTE PTR [rax-0x6fff186d],dl
  42e0a2:	xchg   ebp,eax
  42e0a3:	(bad)  
  42e0a4:	add    BYTE PTR [rsi-0x65ff1365],dl
  42e0aa:	popf   
  42e0ab:	jmp    0x42e0ad
  42e0ad:	movabs ds:0xb400efaeac00eda6,al
  42e0b6:	mov    bh,0xf1
  42e0b8:	add    BYTE PTR [rcx-0x43ff0d45],bh
  42e0be:	mov    edi,0xbaca00f4
  42e0c3:	enter  0xcf00,0xc6
  42e0c7:	ret    
  42e0c8:	add    dh,dl
  42e0ca:	retf   0xc3
  42e0cd:	fcmove st,st(1)
  42e0cf:	ret    
  42e0d0:	add    cl,bl
  42e0d2:	int    0xc6
  42e0d4:	add    ch,bl
  42e0d6:	iret   
  42e0d7:	mov    DWORD PTR [rax],0xc9cfd8
  42e0dd:	(bad)  
  42e0df:	retf   0xda00
  42e0e2:	ror    ebp,1
  42e0e4:	add    dh,bl
  42e0e6:	(bad)  
  42e0e7:	iret   
  42e0e8:	add    al,bl
  42e0ea:	(bad)  
  42e0eb:	rol    DWORD PTR [rax],1
  42e0ed:	(bad)  
  42e0ef:	rol    BYTE PTR [rax],1
  42e0f1:	(bad)  
  42e0f3:	(bad)  
  42e0f4:	add    dh,ah
  42e0f6:	rol    esi,cl
  42e0f8:	add    al,ah
  42e0fa:	ror    ah,cl
  42e0fc:	add    cl,ah
  42e0fe:	(bad)  
  42e0ff:	(bad)  
  42e100:	add    al,ch
  42e102:	(bad)  
  42e103:	enter  0xea00,0xd8
  42e107:	retf   0xe000
  42e10a:	xlat   BYTE PTR ds:[rbx]
  42e10b:	rol    DWORD PTR [rax],cl
  42e10d:	jrcxz  0x42e0ea
  42e10f:	xlat   BYTE PTR ds:[rbx]
  42e110:	add    dh,ah
  42e112:	(bad)  
  42e114:	add    cl,ah
  42e116:	fcmovnu st,st(2)
  42e118:	add    dl,ah
  42e11a:	(bad)  
  42e11c:	add    ch,ah
  42e11e:	(bad)  
  42e120:	add    bl,ch
  42e122:	loop   0x42e103
  42e124:	add    dl,bl
  42e126:	(bad)  
  42e128:	add    bl,ch
  42e12a:	in     al,0xe0
  42e12c:	add    ch,ch
  42e12e:	in     eax,0xe2
  42e130:	add    dh,ch
  42e132:	call   0xffffffffed33e21c
  42e137:	jmp    0xffffffffed32d43c
  42e13c:	add    ch,dh
  42e13e:	lock out dx,al
  42e140:	add    dl,ah
  42e142:	jrcxz  0x42e13e
  42e144:	add    ah,ch
  42e146:	in     al,dx
  42e147:	sti    
  42e148:	add    bl,bh
  42e14a:	stc    
  42e14b:	stc    
  42e14c:	add    ch,bh
  42e14e:	cld    
  42e14f:	sti    
  42e150:	add    dh,bh
  42e152:	(bad)  
  42e153:	inc    BYTE PTR [rax]
	...
  42e1b5:	(bad)  
  42e1b6:	(bad)  
  42e1b7:	inc    DWORD PTR [rax]
	...
  42e1d9:	add    bh,cl
  42e1db:	mov    dl,0x9e
  42e1dd:	movabs ds:0x97,al
	...
  42e1fa:	sar    bh,cl
  42e1fc:	rex.W call FWORD PTR [rdx+0x0]
	...
  42e217:	add    BYTE PTR [rax],al
  42e219:	add    bl,dl
  42e21b:	pop    rsi
  42e21c:	jb     0x42e273
  42e21e:	pushf  
	...
  42e237:	add    BYTE PTR [rax],al
  42e239:	add    BYTE PTR [rbp+0x5e],dh
  42e23c:	push   QWORD PTR [rdi+rdi*1+0x0]
  42e240:	add    BYTE PTR [rax],al
  42e242:	add    BYTE PTR [rax],al
  42e244:	add    BYTE PTR [rax],al
  42e246:	add    BYTE PTR [rsi],bl
  42e248:	sbb    al,0x1a
  42e24a:	add    BYTE PTR [rax],al
  42e24c:	add    BYTE PTR [rax],al
  42e24e:	add    BYTE PTR [rax],al
  42e250:	adc    DWORD PTR [rcx],edx
  42e252:	or     eax,0xd
  42e257:	add    BYTE PTR [rax],al
  42e259:	add    BYTE PTR [rdx-0x3e],ch
  42e25c:	mov    dl,0xad
  42e25e:	rex.WRXB add BYTE PTR [r8],r8b
  42e261:	add    BYTE PTR [rax],al
  42e263:	add    BYTE PTR [rax],al
  42e265:	add    BYTE PTR [rsi],ch
  42e267:	fnsave [rax+0x595]
  42e26d:	add    BYTE PTR [rax],al
  42e26f:	rex.WXB cmp QWORD PTR [r8],rdi
  42e272:	cmp    BYTE PTR [rax],bh
  42e274:	or     DWORD PTR [rax],eax
	...
  42e27e:	add    BYTE PTR [rax+rax*1+0x0],dl
  42e282:	add    BYTE PTR [rax],al
  42e284:	add    BYTE PTR [rax],al
  42e286:	xor    bh,bh
  42e288:	mov    al,0x95
  42e28a:	(bad)  
  42e28b:	add    BYTE PTR [rax],al
  42e28d:	add    BYTE PTR [rax],al
  42e28f:	rex.WR (bad) 
  42e291:	rex.RXB
  42e292:	rex.RXB cmp DWORD PTR [r9],r9d
  42e295:	add    BYTE PTR [rax],al
  42e297:	add    BYTE PTR [rax],al
  42e299:	add    bh,cl
  42e29b:	mov    dl,0x9e
  42e29d:	movabs ds:0x97,al
  42e2a6:	push   QWORD PTR ss:[rax+0x895]
  42e2ad:	add    BYTE PTR [rax],al
  42e2af:	rex.WRX
  42e2b0:	fs rex.WX
  42e2b2:	rex.WB cmp al,0x9
  42e2b5:	add    BYTE PTR [rax],al
  42e2b7:	add    BYTE PTR [rax],al
  42e2b9:	add    dl,dl
  42e2bb:	dec    DWORD PTR [rax-0x1]
  42e2be:	(bad)  
  42e2bf:	add    BYTE PTR [rax],al
  42e2c1:	add    BYTE PTR [rax],al
  42e2c3:	add    BYTE PTR [rax],al
  42e2c5:	add    BYTE PTR [rbp+0x1895b0ff],al
  42e2cb:	add    BYTE PTR [rax],al
  42e2cd:	add    BYTE PTR [rax],al
  42e2cf:	push   rdx
  42e2d0:	data16 rex.WR
  42e2d2:	rex.WXB cmp rax,0x9
  42e2d8:	add    BYTE PTR [rax],al
  42e2da:	rcr    DWORD PTR [rsi+0x72],cl
  42e2dd:	push   rbp
  42e2de:	pushf  
  42e2df:	add    BYTE PTR [rax],al
  42e2e1:	add    BYTE PTR [rax],al
  42e2e3:	add    BYTE PTR [rax],al
  42e2e5:	add    BYTE PTR [rax+0x1a95b0ff],cl
  42e2eb:	add    BYTE PTR [rax],al
  42e2ed:	add    BYTE PTR [rax],al
  42e2ef:	push   rsi
  42e2f0:	ins    BYTE PTR es:[rdi],dx
  42e2f1:	push   rcx
  42e2f2:	rex.WRX
  42e2f3:	or     DWORD PTR ds:[rax],eax
  42e2f6:	add    BYTE PTR [rax],al
  42e2f8:	add    BYTE PTR [rax],al
  42e2fa:	jne    0x42e35a
  42e2fc:	push   QWORD PTR [rdi+rdi*1+0x0]
  42e300:	add    BYTE PTR [rax],al
  42e302:	add    BYTE PTR [rax],al
  42e304:	add    BYTE PTR [rax],al
  42e306:	xchg   ebp,eax
  42e307:	push   QWORD PTR [rax+0x1e95]
  42e30d:	add    BYTE PTR [rax],al
  42e30f:	pop    rbx
  42e310:	jo     0x42e368
  42e312:	push   rdx
  42e313:	rex or eax,0x0
  42e319:	add    BYTE PTR [rdx-0x3e],ch
  42e31c:	mov    dl,0xad
  42e31e:	rex.WRXB add BYTE PTR [r8],r8b
  42e321:	add    BYTE PTR [rax],al
  42e323:	add    BYTE PTR [rax],al
  42e325:	add    BYTE PTR [rax+0x1f95b0ff],ah
  42e32b:	add    BYTE PTR [rax],al
  42e32d:	add    BYTE PTR [rax],al
  42e32f:	pop    rbp
  42e330:	jae    0x42e38e
  42e332:	push   rsi
  42e333:	push   rax
  42e334:	or     eax,0x0
  42e339:	add    BYTE PTR [rax],al
  42e33b:	add    BYTE PTR [rax],al
  42e33d:	add    BYTE PTR [rax],al
  42e33f:	push   rsp
  42e340:	add    BYTE PTR [rax],al
  42e342:	add    BYTE PTR [rax],al
  42e344:	add    BYTE PTR [rax],al
  42e346:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  42e347:	push   QWORD PTR [rax+0x2395]
  42e34d:	add    BYTE PTR [rax],al
  42e34f:	(bad)  
  42e350:	jbe    0x42e3b6
  42e352:	(bad)  
  42e353:	pop    rax
  42e354:	adc    DWORD PTR [rax],eax
  42e356:	add    BYTE PTR [rax],al
  42e358:	add    BYTE PTR [rax],al
  42e35a:	iret   
  42e35b:	mov    dl,0x9e
  42e35d:	movabs ds:0x97,al
  42e366:	scas   al,BYTE PTR es:[rdi]
  42e367:	push   QWORD PTR [rax+0x2595]
  42e36d:	add    BYTE PTR [rax],al
  42e36f:	fs mov bh,0x68
  42e372:	fs pop rcx
  42e374:	adc    al,BYTE PTR [rax]
  42e376:	add    BYTE PTR [rax],al
  42e378:	add    BYTE PTR [rax],al
  42e37a:	sar    bh,cl
  42e37c:	rex.W call FWORD PTR [rdx+0x0]
  42e383:	add    BYTE PTR [rax],al
  42e385:	add    BYTE PTR [rdx+0x2895c5ff],dh
  42e38b:	add    BYTE PTR [rax],al
  42e38d:	add    BYTE PTR [rax],al
  42e38f:	ins    BYTE PTR es:[rdi],dx
  42e390:	mov    ecx,0x135a6d70
  42e395:	add    BYTE PTR [rax],al
  42e397:	add    BYTE PTR [rax],al
  42e399:	add    bl,dl
  42e39b:	pop    rsi
  42e39c:	jb     0x42e3f3
  42e39e:	pushf  
  42e39f:	add    BYTE PTR [rax],al
  42e3a1:	add    BYTE PTR [rax],al
  42e3a3:	add    BYTE PTR [rax],al
  42e3a5:	sub    dh,BYTE PTR [rbx+0x2aa2d0ff]
  42e3ab:	(bad)  
  42e3ac:	add    BYTE PTR [rax],al
  42e3ae:	add    BYTE PTR [rbp-0x44],ch
  42e3b1:	jae    0x42e424
  42e3b3:	movsxd edx,DWORD PTR [rax+rax*1]
  42e3b6:	add    BYTE PTR [rax],al
  42e3b8:	add    BYTE PTR [rax],al
  42e3ba:	jne    0x42e41a
  42e3bc:	push   QWORD PTR [rdi+rdi*1+0x0]
  42e3c0:	add    BYTE PTR [rax],al
  42e3c2:	add    BYTE PTR [rax],al
  42e3c4:	sub    ah,BYTE PTR [rbp-0x3225003b]
  42e3ca:	mov    bl,0x7d
  42e3cc:	add    eax,0xbd720000
  42e3d1:	mov    ch,0x76
  42e3d3:	add    BYTE PTR [r8d],al
  42e3d7:	add    BYTE PTR [rax],al
  42e3d9:	add    BYTE PTR [rdx-0x3e],ch
  42e3dc:	mov    dl,0xad
  42e3de:	rex.WRXB add BYTE PTR [r8],r8b
  42e3e1:	add    BYTE PTR [rax],al
  42e3e3:	cdq    
  42e3e4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42e3e5:	(bad)  
  42e3e7:	(bad)  
  42e3e8:	(bad)  
  42e3e9:	(bad)  
  42e3ea:	fidiv  WORD PTR [rax+0x73008c7d]
  42e3f0:	mov    esi,0x426db7b8
	...
  42e3fd:	add    BYTE PTR [rax],al
  42e3ff:	push   rsp
  42e400:	add    BYTE PTR [rax],al
  42e402:	add    BYTE PTR [rax+0x25b0ffdd],ah
  42e408:	(bad)  
  42e409:	xchg   esi,eax
  42e40a:	(bad)  
  42e40b:	fiadd  WORD PTR [rbp-0x4089fffb]
  42e411:	mov    ebx,0x436db8
	...
  42e422:	add    BYTE PTR [rbx+0x1acbff],ah
  42e428:	add    BYTE PTR [rax],al
  42e42a:	(bad)  
  42e42b:	call   QWORD PTR [rdx-0x3e48ffe8]
  42e431:	sar    DWORD PTR [rdi+0x446d],0x0
	...
  42e440:	add    BYTE PTR [rax],al
  42e442:	add    BYTE PTR [rcx+0x1cc8ff],ch
  42e448:	add    BYTE PTR [rax],al
  42e44a:	scas   eax,DWORD PTR es:[rdi]
  42e44b:	call   QWORD PTR [rdx-0x1c4affe4]
  42e451:	loop   0x42e42e
  42e453:	mov    edi,0x44
	...
  42e460:	add    BYTE PTR [rax],al
  42e462:	add    BYTE PTR [rax+0x1a92ffff],dh
  42e468:	add    BYTE PTR [rdx],ch
  42e46a:	(bad)  
  42e46b:	call   QWORD PTR [rdx+0x2cbd0096]
  42e471:	xchg   ecx,eax
  42e472:	(bad)  
  42e473:	add    al,BYTE PTR [rbp+0x0]
	...
  42e482:	add    BYTE PTR [rax],al
  42e484:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42e485:	(bad)  
  42e486:	call   FWORD PTR [rax+rax*1]
  42e489:	(bad)  
  42e48a:	jmp    QWORD PTR [rbx+0x84]
  42e490:	es int3 
  42e492:	jl     0x42e495
	...
  42e4a4:	add    BYTE PTR [rdx-0x5dffc978],ah
  42e4aa:	mov    BYTE PTR [rsi],dh
  42e4ac:	add    BYTE PTR [rax],al
  42e4ae:	add    BYTE PTR [rax],al
  42e4b0:	jl     0x42e47f
  42e4b2:	jg     0x42e4b6
	...
  42e4d0:	jge    0x42e4a9
  42e4d2:	mov    DWORD PTR [rip+0x0],edx        # 0x42e4d8
	...
  42e4e8:	add    BYTE PTR [rax],al
  42e4ea:	add    BYTE PTR [rax+riz*1],ah
  42e4ed:	add    BYTE PTR [rax],al
  42e4ef:	add    BYTE PTR [rsi+0x1991c3],al
  42e4f5:	add    BYTE PTR [rax],al
  42e4f7:	add    al,BYTE PTR [rbx]
	...
  42e509:	add    BYTE PTR [rbx+rcx*8-0x76d27d54],cl
  42e510:	nop
  42e511:	enter  0x209d,0x16
  42e515:	(bad)  
  42e516:	(bad)  
  42e517:	(bad)  
  42e518:	(bad)  
	...
  42e529:	add    BYTE PTR [rdi+rdi*8-0x592e4f29],cl
  42e530:	xlat   BYTE PTR ds:[rbx]
  42e531:	(bad)
  42e534:	sub    eax,0x811d9f24
	...
  42e549:	add    BYTE PTR [rax-0x4f282101],dl
  42e54f:	sar    edi,1
  42e551:	loope  0x42e51e
  42e553:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  42e554:	cwde   
  42e555:	xlat   BYTE PTR ds:[rbx]
  42e556:	sub    al,0x21
	...
  42e568:	add    BYTE PTR [rax],al
  42e56a:	mov    edi,?
  42e56c:	call   FWORD PTR [rbx-0x3a54]
  42e572:	(bad)  
  42e574:	fnstsw WORD PTR [rax+rsi*1+0x0]
	...
  42e588:	add    BYTE PTR [rax],al
  42e58a:	add    BYTE PTR [rbx-0x32ffff55],ch
  42e590:	mov    DWORD PTR [rdi+0x7c7e8089],ecx
	...
  42e5b6:	add    BYTE PTR [rax],al
  42e5b8:	add    bh,bh
  42e5ba:	(bad)  
  42e5bb:	(bad)  
  42e5bc:	inc    DWORD PTR [rbx-0x7c000001]
  42e5c2:	(bad)  
  42e5c3:	(bad)  
  42e5c4:	inc    DWORD PTR [rbx-0x7c000001]
  42e5ca:	cld    
  42e5cb:	jle    0x42e5ec
  42e5cd:	cmp    eax,0x3c
  42e5d0:	paddw  mm7,mm0
  42e5d3:	cmp    al,0xf
  42e5d5:	cmp    eax,0x3c
  42e5d8:	jae    0xffffffff835222d6
  42e5de:	clc    
  42e5df:	cmp    al,0xf
  42e5e1:	cmp    eax,0x3c
  42e5e4:	jae    0xfffffffffd5222e2
  42e5ea:	clc    
  42e5eb:	cmp    al,0xf
  42e5ed:	cmp    eax,0x3c
  42e5f0:	jae    0xffffffff835222ee
  42e5f6:	lock sbb al,0xf
  42e5f9:	and    eax,0xc
  42e5fc:	jae    0xfffffffffd51eac2
  42e602:	rol    BYTE PTR [rdi+rcx*1],0xff
  42e606:	ret    
  42e607:	test   BYTE PTR [rdi],cl
  42e609:	inc    ebx
  42e60b:	test   BYTE PTR [rdi],cl
  42e60d:	inc    ecx
  42e60f:	add    al,0xf
  42e611:	jmp    rcx
  42e613:	(bad)  
  42e614:	(bad)  
  42e615:	push   rcx
  42e617:	(bad)  
  42e618:	(bad)  
  42e619:	(bad)  
  42e61a:	(bad)  
  42e61b:	(bad)  
  42e61c:	(bad)  
  42e61d:	(bad)  
  42e61e:	dec    esi
  42e620:	sbb    al,0xff
  42e622:	inc    DWORD PTR [rax-0x7f000100]
  42e628:	add    bh,bh
  42e62a:	inc    DWORD PTR [rax-0x7f0000ff]
  42e630:	add    edi,edi
  42e632:	dec    esp
  42e634:	(bad)  
  42e635:	(bad)  
  42e636:	(bad)  
  42e637:	(bad)  
  42e638:	jmp    FWORD PTR [rax]
  42e63a:	add    BYTE PTR [rax],al
  42e63c:	add    BYTE PTR [rax],dl
  42e63e:	add    BYTE PTR [rax],al
  42e640:	add    BYTE PTR [rax],ah
  42e642:	add    BYTE PTR [rax],al
  42e644:	add    BYTE PTR [rcx],al
  42e646:	add    BYTE PTR [rax],cl
  42e648:	add    BYTE PTR [rax],al
  42e64a:	add    BYTE PTR [rax],al
  42e64c:	add    BYTE PTR [rax],al
  42e64e:	add    DWORD PTR [rax],eax
	...
  42e658:	add    BYTE PTR [rax],al
  42e65a:	add    DWORD PTR [rax],eax
  42e65c:	add    BYTE PTR [rax],al
  42e65e:	add    DWORD PTR [rax],eax
  42e660:	add    BYTE PTR [rax],al
  42e662:	add    BYTE PTR [rax],al
  42e664:	add    BYTE PTR [rcx+0x4b],bl
  42e667:	cmp    al,0x0
  42e669:	movsxd edx,DWORD PTR [rbx+0x43]
  42e66c:	add    BYTE PTR [rsp+rdx*2+0x44],ah
  42e670:	add    BYTE PTR [rdi+0x5d],ch
  42e673:	rex.WR add BYTE PTR [rbx+0x6f],r15b
  42e677:	add    BYTE PTR gs:[rbx+0x77],bh
  42e67b:	jae    0x42e67d
  42e67d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  42e67e:	pop    rcx
  42e67f:	xor    eax,DWORD PTR [rax]
  42e681:	stos   BYTE PTR es:[rdi],al
  42e682:	pop    rbp
  42e683:	cmp    BYTE PTR [rax],al
  42e685:	scas   eax,DWORD PTR es:[rdi]
  42e686:	(bad)  
  42e687:	cmp    al,0x0
  42e689:	mov    cl,0x60
  42e68b:	cmp    DWORD PTR [rax],eax
  42e68d:	lods   eax,DWORD PTR ds:[rsi]
  42e68e:	imul   ecx,DWORD PTR [rax+0x0],0x4368b6
  42e695:	mov    eax,0xbe004d6f
  42e69a:	jno    0x42e6e7
  42e69c:	add    BYTE PTR [rbx-0x48ffb390],bh
  42e6a2:	je     0x42e6f7
  42e6a4:	add    BYTE PTR [rdi-0x46ffa989],bh
  42e6aa:	js     0x42e704
  42e6ac:	add    BYTE PTR [rsi-0x7bffa787],bh
  42e6b2:	jp     0x42e725
  42e6b4:	add    BYTE PTR [rax-0x3bff8784],al
  42e6ba:	jbe    0x42e70d
  42e6bc:	add    dl,cl
  42e6be:	jge    0x42e718
  42e6c0:	add    bh,cl
  42e6c2:	sbb    DWORD PTR [rdi+0x0],0xffffffd5
  42e6c6:	mov    ah,BYTE PTR [rsi+0x0]
  42e6c9:	ror    DWORD PTR [rbx-0x6c23ff95],1
  42e6cf:	jno    0x42e6d1
  42e6d1:	loopne 0x42e66c
  42e6d3:	js     0x42e6d5
  42e6d5:	out    0x9f,eax
  42e6d7:	jge    0x42e6d9
  42e6d9:	out    0xa0,al
  42e6db:	jle    0x42e6dd
  42e6dd:	jmp    0x29436683
  42e6e2:	adc    al,BYTE PTR [rax-0x71ecd200]
  42e6e8:	add    BYTE PTR [rsi],ch
  42e6ea:	adc    al,0x8f
  42e6ec:	add    BYTE PTR [rbx],dh
  42e6ee:	and    BYTE PTR [rsi-0x52d1c800],bl
  42e6f4:	add    BYTE PTR [rsi],bh
  42e6f6:	cmp    eax,0x322c00bf
  42e6fb:	(bad)  
  42e6fc:	add    BYTE PTR [rdi],bh
  42e6fe:	rex.RB rol DWORD PTR [r8],cl
  42e701:	rex.XB
  42e702:	rex.WR (bad) 
  42e704:	add    BYTE PTR [rax+0x59],cl
  42e707:	fld    QWORD PTR [rax]
  42e709:	push   rdx
  42e70a:	pop    rax
  42e70b:	fadd   DWORD PTR [rax]
  42e70d:	(bad)  
  42e70e:	pop    rbp
  42e70f:	(bad)  
  42e710:	add    BYTE PTR [rbp+0x77],bh
  42e713:	ret    0x6900
  42e716:	addr32 (bad) 
  42e718:	add    BYTE PTR [rax+rbp*2-0x2e],ch
  42e71c:	add    BYTE PTR [rdi+0x6c],ah
  42e71f:	fild   WORD PTR [rax]
  42e721:	jp     0x42e799
  42e723:	rol    DWORD PTR [rax],1
  42e725:	rex.WX
  42e726:	rex.WRX in eax,dx
  42e728:	add    BYTE PTR [rsi+0x59],dl
  42e72b:	in     al,dx
  42e72c:	add    BYTE PTR [rax+0x69],ch
  42e72f:	call   0xffffffff96b58834
  42e734:	add    BYTE PTR [rbp+0x7b00d27d],al
  42e73a:	and    ah,0x0
  42e73d:	mov    al,BYTE PTR [rsi-0x7467ff7e]
  42e743:	add    BYTE PTR [rax],0xa1
  42e746:	cdq    
  42e747:	pop    QWORD PTR [rax]
  42e749:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  42e74a:	fwait
  42e74b:	xchg   ebp,eax
  42e74c:	add    BYTE PTR [rsi-0x5eff6556],dh
  42e752:	cwde   
  42e753:	mov    esi,0xa1a7ac00
  42e758:	add    BYTE PTR [rdi-0x4bff5a56],ch
  42e75e:	test   eax,0xb4bc00a1
  42e763:	lods   al,BYTE PTR ds:[rsi]
  42e764:	add    BYTE PTR [rdi-0x47ff4c46],bh
  42e76a:	mov    ebx,0xb3ff00b5
  42e76f:	mov    eax,DWORD PTR [rax]
  42e771:	(bad)  
  42e772:	mov    eax,0xbeff0094
  42e777:	sahf   
  42e778:	add    bl,al
  42e77a:	mov    dh,0xb5
  42e77c:	add    cl,al
  42e77e:	mov    ecx,0xb8c400b1
  42e783:	mov    ecx,0xb9c0c900
  42e788:	add    ch,cl
  42e78a:	(bad)
  42e78d:	rol    ch,cl
  42e78f:	mov    ah,0x0
  42e791:	inc    dh
  42e793:	test   eax,0xb3c4e500
  42e798:	add    bh,bh
  42e79a:	int    0xb4
  42e79c:	add    ch,bh
  42e79e:	(bad)  
  42e79f:	mov    esi,0xcc878d00
  42e7a4:	add    BYTE PTR [rcx-0x6fff3e78],dl
  42e7aa:	mov    bh,dl
  42e7ac:	add    BYTE PTR [rax-0x64ff2c71],bl
  42e7b2:	xchg   esp,eax
  42e7b3:	fadd   DWORD PTR [rax]
  42e7b5:	test   eax,0xac00c49e
  42e7ba:	movabs ds:0x938e00dbaab100d5,eax
  42e7c3:	jmp    0xffffffffeee685c8
  42e7c8:	add    BYTE PTR [rcx-0x3cff0b53],ah
  42e7ce:	mov    edx,0xc9d000d4
  42e7d3:	(bad)  
  42e7d4:	add    dl,dl
  42e7d6:	int3   
  42e7d7:	(bad)  
  42e7d8:	add    ah,bl
  42e7da:	rcl    edx,1
  42e7dc:	add    bl,bl
  42e7de:	(bad)  
  42e7df:	rol    BYTE PTR [rax],1
  42e7e1:	not    ch
  42e7e3:	(bad)  
  42e7e4:	add    ch,bh
  42e7e6:	fadd   st,st(3)
  42e7e8:	add    dl,ah
  42e7ea:	(bad)  
  42e7eb:	rol    BYTE PTR [rax],1
  42e7ed:	jmp    0xffffffffec43b8ce
  42e7f2:	(bad)  
  42e7f4:	add    ch,bh
  42e7f6:	loope  0x42e7ca
  42e7f8:	add    bl,al
  42e7fa:	retf   0xf8
  42e7fd:	(bad)  
  42e7fe:	in     al,dx
  42e7ff:	out    0x0,al
  42e801:	sti    
  42e802:	out    dx,al
  42e803:	out    0x0,al
  42e805:	hlt    
  42e806:	lock jmp 0xffffffffec35e50c
	...
  42ea5c:	add    bh,bh
  42ea5e:	(bad)  
  42ea5f:	inc    DWORD PTR [rax]
  42ea61:	fs push rbp
  42ea63:	rex.WXB add BYTE PTR [r8],al
	...
  42ea6e:	add    BYTE PTR [rax],al
  42ea70:	add    BYTE PTR [rsi+0x31],dl
  42ea73:	cmp    al,0x0
	...
  42ea81:	xor    eax,0x2b5b
  42ea86:	adc    cl,BYTE PTR [rdx]
  42ea88:	(bad)  
  42ea89:	add    BYTE PTR [rax],al
  42ea8b:	add    BYTE PTR [rax],ah
  42ea8d:	and    BYTE PTR [rax],al
  42ea8f:	add    BYTE PTR [rax],al
  42ea91:	add    BYTE PTR [rax],al
  42ea93:	add    BYTE PTR [rax],al
  42ea95:	add    BYTE PTR [rdi],cl
  42ea97:	rex.XB or BYTE PTR [r8],al
  42ea9a:	add    BYTE PTR [rsi],ah
  42ea9c:	and    ah,BYTE PTR [rdx]
  42ea9e:	and    al,BYTE PTR [rax]
  42eaa0:	add    BYTE PTR [rax+rdx*2+0x48],ah
  42eaa4:	add    BYTE PTR [rax],al
  42eaa6:	(bad)  
  42eaa7:	or     DWORD PTR [rax],r8d
  42eaaa:	add    BYTE PTR [rdi],ah
  42eaac:	and    esp,DWORD PTR [rbx]
  42eaae:	and    al,BYTE PTR [rax]
  42eab0:	add    BYTE PTR [rbx+0x32],dl
  42eab3:	push   rcx
  42eab4:	add    BYTE PTR [rax],al
  42eab6:	(bad)  
  42eab7:	rex.RB or al,0x0
  42eaba:	add    BYTE PTR [rdx],ch
  42eabc:	and    al,0x24
  42eabe:	and    al,BYTE PTR [rax]
  42eac0:	add    BYTE PTR [rsi+rbx*2+0x2e],dl
  42eac4:	add    BYTE PTR [rax],al
  42eac6:	sbb    BYTE PTR [rdi+rcx*1+0x0],cl
  42eaca:	add    BYTE PTR [rdi],ch
  42eacc:	and    eax,0x2225
  42ead1:	add    BYTE PTR [rax],al
  42ead3:	add    BYTE PTR [rax],al
  42ead5:	add    BYTE PTR [rcx],bl
  42ead7:	rex.WRX adc BYTE PTR [rax],r8b
  42eada:	add    BYTE PTR [rsi],dh
  42eadc:	sub    BYTE PTR [rax],ch
  42eade:	and    eax,DWORD PTR [rax]
  42eae0:	add    BYTE PTR [rdx+0x2d],ah
  42eae3:	rex.RX add BYTE PTR [rbx],r11b
  42eae6:	gs rex.WRXB or r8,QWORD PTR gs:[r8]
  42eaeb:	pop    rax
  42eaec:	sub    DWORD PTR [rcx],ebp
  42eaee:	and    eax,DWORD PTR [rax]
  42eaf0:	add    BYTE PTR [rip+0x6a1e2c33],dh        # 0x6a611729
  42eaf6:	(bad)  
  42eaf7:	sbb    ch,BYTE PTR [rax+0x61]
  42eafa:	or     eax,0x235a6659
  42eaff:	add    BYTE PTR [rax],al
  42eb01:	push   rdi
  42eb02:	xor    BYTE PTR fs:[rax+rbp*2],dh
  42eb06:	sbb    al,0x0
  42eb08:	sbb    DWORD PTR [rbp+0x10],ecx
  42eb0b:	add    BYTE PTR [rip+0x2],al        # 0x42eb13
  42eb11:	add    BYTE PTR [rax],al
  42eb13:	add    BYTE PTR [rdx+0x1f],dl
  42eb16:	sbb    al,0x0
  42eb18:	sbb    al,0x13
  42eb1a:	add    BYTE PTR [rax],al
  42eb1c:	rex.RXB add DWORD PTR [r8],r8d
	...
  42eb27:	add    BYTE PTR [rax],al
  42eb29:	pop    rsp
  42eb2a:	cmp    BYTE PTR [rax],al
  42eb2c:	(bad)  
  42eb2d:	add    al,BYTE PTR [rax]
  42eb2f:	add    BYTE PTR [rax+rax*1],al
  42eb32:	add    BYTE PTR [rax],al
  42eb34:	add    BYTE PTR [rax],al
  42eb36:	add    BYTE PTR [rax],al
  42eb38:	add    BYTE PTR [rcx+0x3b],cl
  42eb3b:	add    al,BYTE PTR [rdx+0x39]
  42eb3e:	(bad)  
  42eb3f:	add    al,0x3a
	...
  42eb49:	rex.WB push 0x14
  42eb4c:	addr32 pop rsp
  42eb4e:	(bad)  
  42eb4f:	adc    eax,0x0
  42eb54:	add    BYTE PTR [rax],al
  42eb56:	add    BYTE PTR [rax],al
  42eb58:	add    BYTE PTR [rsi+0x40],bl
  42eb5b:	add    BYTE PTR [rdx+0x3d],al
  42eb5e:	(bad)  
  42eb5f:	add    BYTE PTR [rax],al
  42eb61:	(bad)  
  42eb62:	inc    DWORD PTR [rax]
  42eb64:	add    BYTE PTR [rdi],bl
  42eb66:	inc    DWORD PTR [rax]
  42eb68:	add    BYTE PTR [rax],bl
  42eb6a:	out    0x0,eax
  42eb6c:	add    al,bh
  42eb6e:	ret    
  42eb6f:	add    BYTE PTR [rax],al
  42eb71:	sbb    bl,al
  42eb73:	add    BYTE PTR [rax],al
  42eb75:	sbb    bl,al
  42eb77:	add    BYTE PTR [rax],al
  42eb79:	sbb    bl,al
  42eb7b:	add    BYTE PTR [rax],al
  42eb7d:	clc    
  42eb7e:	ret    
  42eb7f:	add    BYTE PTR [rax],al
  42eb81:	adc    BYTE PTR [rbx+0x0],al
  42eb84:	add    BYTE PTR [rax],al
  42eb86:	add    eax,DWORD PTR [rax]
  42eb88:	add    BYTE PTR [rdx],al
  42eb8a:	(bad)  
  42eb8b:	add    BYTE PTR [rax],al
  42eb8d:	loop   0x42ebf6
  42eb8f:	add    BYTE PTR [rax],al
  42eb91:	jmp    QWORD PTR [rsi]
  42eb93:	add    BYTE PTR [rax],al
  42eb95:	inc    DWORD PTR [rax]
  42eb97:	add    BYTE PTR [rax],al
  42eb99:	inc    DWORD PTR [rcx]
  42eb9b:	add    BYTE PTR [rax],al
  42eb9d:	jmp    QWORD PTR [rbx]
  42eb9f:	add    BYTE PTR [rax],al
  42eba1:	sub    BYTE PTR [rax],al
  42eba3:	add    BYTE PTR [rax],al
  42eba5:	and    BYTE PTR [rax],al
  42eba7:	add    BYTE PTR [rax],al
  42eba9:	add    BYTE PTR [rax],al
  42ebac:	add    BYTE PTR [rcx],al
  42ebae:	add    BYTE PTR [rax],ah
  42ebb0:	add    BYTE PTR [rax],al
  42ebb2:	add    BYTE PTR [rax],al
  42ebb4:	add    BYTE PTR [rax+0x10],al
	...
  42ec4a:	add    BYTE PTR [rax],al
  42ec4c:	add    bl,bl
  42ec4e:	shr    DWORD PTR [rsi-0x614d344f],0xb1
  42ec55:	xchg   esi,eax
  42ec56:	sbb    DWORD PTR [rcx+0x7e90aabc],0x6d8099b1
  42ec60:	mov    cl,0x0
	...
  42ecca:	add    BYTE PTR [rax],al
  42eccc:	add    bh,bl
  42ecce:	(bad)  
  42eccf:	mov    cl,0xb1
  42ecd1:	(bad)  
  42ecd2:	(bad)  
  42ecd3:	(bad)  
  42ecd4:	inc    DWORD PTR [rax]
  42ecd6:	add    ah,cl
  42ecd8:	in     al,dx
  42ecd9:	(bad)  
  42ecda:	(bad)  
  42ecdb:	(bad)  
  42ecdc:	call   FWORD PTR [rsi+0xb17285]
	...
  42ed4a:	add    BYTE PTR [rax],al
  42ed4c:	add    dl,ah
  42ed4e:	enter  0xb1b4,0x0
  42ed52:	add    ah,cl
  42ed54:	mov    esi,0x8fcc0000
  42ed59:	add    BYTE PTR [rax],al
  42ed5b:	int3   
  42ed5c:	(bad)  
  42ed5d:	xchg   esi,eax
  42ed5e:	jg     0x42edde
  42ed60:	mov    ch,0x0
	...
  42edca:	add    BYTE PTR [rax],al
  42edcc:	add    BYTE PTR [rax+riz*2-0x3e],ch
  42edd0:	rol    DWORD PTR [rax],cl
  42edd2:	add    ah,cl
  42edd4:	mov    ecx,0xffffffff
  42edd9:	add    BYTE PTR [rax],al
  42eddb:	int3   
  42eddc:	(bad)  
  42eddd:	sub    BYTE PTR [rdx],ah
  42eddf:	mov    ecx,0xe7
	...
  42edfc:	add    BYTE PTR [rcx+0x79387888],ah
  42ee02:	(bad)  
  42ee03:	rex.WRB push QWORD PTR [r14+0x5c]
  42ee07:	rex.W push QWORD PTR [rdx+0x58]
  42ee0b:	rex.R jmp QWORD PTR [rcx+0x387888]
	...
  42ee1e:	add    BYTE PTR [rax],al
  42ee20:	add    BYTE PTR [rcx],bl
  42ee22:	(bad)  
  42ee23:	lods   al,BYTE PTR ds:[rsi]
  42ee24:	rex.RX (bad) 
  42ee26:	and    eax,0x212bff6d
  42ee2b:	push   0xffffffffffffffff
  42ee2d:	sub    DWORD PTR [rsi],ebx
  42ee2f:	push   0x641b26ff
  42ee34:	call   FWORD PTR [rax+rdx*1]
  42ee37:	pop    rdx
  42ee38:	rex.RX add BYTE PTR [rax],r8b
	...
  42ee4b:	add    BYTE PTR [rax],al
  42ee4d:	(bad)  
  42ee4e:	push   rbp
  42ee4f:	ret    
  42ee50:	xlat   BYTE PTR ds:[rbx]
  42ee51:	mov    bh,0xa1
  42ee53:	mov    ah,0xbb
  42ee55:	(bad)  
  42ee56:	mov    ah,0xa1
  42ee58:	mov    cl,0xbc
  42ee5a:	movabs ds:0xe8bb2026b190,eax
  42ee63:	int3   
  42ee64:	jns    0x42ee66
	...
  42ee7a:	add    BYTE PTR [rax],al
  42ee7c:	add    BYTE PTR [rcx+rax*4-0x1a120091],bl
  42ee83:	loop   0x42ee84
  42ee85:	rol    edx,cl
  42ee87:	mov    eax,0x95a4bcff
  42ee8c:	jmp    QWORD PTR [rcx+rcx*2+0x34]
  42ee90:	inc    DWORD PTR [rax]
	...
  42ee9e:	add    BYTE PTR [rax],al
  42eea0:	add    BYTE PTR [rcx],ah
  42eea2:	(bad)  
  42eea3:	retf   0x19ff
  42eea6:	(bad)  
  42eea7:	lods   al,BYTE PTR ds:[rsi]
  42eea8:	call   FWORD PTR [rax]
  42eeaa:	sbb    eax,0x1c17ffab
  42eeaf:	stos   BYTE PTR es:[rdi],al
  42eeb0:	call   QWORD PTR [rsi]
  42eeb2:	sbb    ebp,DWORD PTR [rdx+0x5a101cff]
  42eeb8:	inc    DWORD PTR [rax]
	...
  42eede:	add    ah,cl
  42eee0:	adc    eax,DWORD PTR [rax]
  42eee2:	add    ah,cl
  42eee4:	fiadd  DWORD PTR [rax]
  42eee6:	add    ah,cl
  42eee8:	rex.RX add BYTE PTR [rax],r8b
	...
  42eefb:	add    BYTE PTR [rax],al
  42eefd:	movabs eax,ds:0xd3ffffffffff7587
  42ef06:	sar    DWORD PTR [rcx-0x6a5b4301],0xff
  42ef0d:	addr32 rex.WR cmp dil,r15b
	...
  42ef21:	(bad)  
  42ef22:	sub    al,0xcb
  42ef24:	dec    DWORD PTR [rcx+rdx*2-0x2a]
  42ef28:	call   QWORD PTR [rdi]
  42ef2a:	sbb    eax,0x1914ffc7
  42ef2f:	(bad)  
  42ef30:	call   FWORD PTR [rdx]
  42ef32:	and    BYTE PTR [rbp+0x5a101cff],ch
  42ef38:	inc    DWORD PTR [rax]
	...
  42ef4a:	add    BYTE PTR [rax],al
  42ef4c:	add    bl,bl
  42ef4e:	shr    DWORD PTR [rsi-0x614d344f],0xb1
  42ef55:	xchg   esi,eax
  42ef56:	sbb    DWORD PTR [rcx+0x7e90aabc],0x6d8099b1
  42ef60:	mov    cl,0x0
  42ef62:	add    ah,cl
  42ef64:	add    BYTE PTR cs:[rax],al
  42ef67:	int3   
  42ef68:	je     0x42ef6a
	...
  42ef7a:	add    BYTE PTR [rax],al
  42ef7c:	add    BYTE PTR [rdi-0x8373],ah
  42ef82:	(bad)  
  42ef83:	(bad)  
  42ef84:	call   rbx
  42ef86:	sar    DWORD PTR [rax-0x695c4301],0xff
  42ef8d:	push   0x50
  42ef8f:	cmp    al,0xff
	...
  42efa1:	sub    al,0x32
  42efa3:	int    0xff
  42efa5:	push   rbx
  42efa6:	push   rdi
  42efa7:	fdivr  st,st(7)
  42efa9:	(bad)  
  42efaa:	and    al,0xca
  42efac:	call   FWORD PTR [rdx]
  42efae:	and    al,cl
  42efb0:	jmp    QWORD PTR [rax]
  42efb2:	and    eax,0x101cffb0
  42efb7:	pop    rdx
  42efb8:	inc    DWORD PTR [rax]
	...
  42efca:	add    BYTE PTR [rax],al
  42efcc:	add    bh,bl
  42efce:	(bad)  
  42efcf:	mov    cl,0xb1
  42efd1:	(bad)  
  42efd2:	(bad)  
  42efd3:	(bad)  
  42efd4:	inc    DWORD PTR [rax]
  42efd6:	add    ah,cl
  42efd8:	in     al,dx
  42efd9:	(bad)  
  42efda:	(bad)  
  42efdb:	(bad)  
  42efdc:	call   FWORD PTR [rsi+0xb17285]
	...
  42effa:	add    BYTE PTR [rax],al
  42effc:	add    BYTE PTR [rsi-0x7b6c],ch
  42f002:	(bad)  
  42f003:	(bad)  
  42f004:	call   rbx
  42f006:	sar    DWORD PTR [rax-0x6a5c4301],0xff
  42f00d:	outs   dx,DWORD PTR ds:[rsi]
  42f00e:	push   rsp
  42f00f:	inc    DWORD PTR [r8]
	...
  42f01e:	add    BYTE PTR [rax],al
  42f020:	add    BYTE PTR [rbx],dh
  42f022:	cmp    bh,cl
  42f024:	call   FWORD PTR [rdx+0x5e]
  42f027:	fcos   
  42f029:	es sub eax,0x2721ffcb
  42f02f:	retf   0x26ff
  42f032:	sub    esi,DWORD PTR [rdi+rdi*8-0xa5efe4]
	...
  42f04d:	loop   0x42f017
  42f04f:	mov    ah,0xb1
  42f051:	add    BYTE PTR [rax],al
  42f053:	int3   
  42f054:	mov    esi,0x8fcc0000
  42f059:	add    BYTE PTR [rax],al
  42f05b:	int3   
  42f05c:	(bad)  
  42f05d:	xchg   esi,eax
  42f05e:	jg     0x42f0de
  42f060:	mov    ch,0x0
	...
  42f07a:	add    BYTE PTR [rax],al
  42f07c:	add    BYTE PTR [rbp-0x7365],dh
  42f082:	(bad)  
  42f083:	(bad)  
  42f084:	call   rbx
  42f086:	ret    0xffb8
  42f089:	mov    esp,0x74ff96a3
  42f08e:	pop    rdx
  42f08f:	rex.RX inc DWORD PTR [rax]
	...
  42f09e:	add    BYTE PTR [rax],al
  42f0a0:	add    BYTE PTR [rdx],bh
  42f0a2:	rex sar edi,1
  42f0a5:	(bad)  
  42f0a6:	data16 fdiv st(7),st
  42f0a9:	xor    BYTE PTR [rsi],dh
  42f0ab:	iret   
  42f0ac:	jmp    FWORD PTR [rdx]
  42f0ae:	xor    ch,cl
  42f0b0:	jmp    FWORD PTR [rdx+rsi*1]
  42f0b3:	mov    eax,0x5c131eff
  42f0b8:	inc    DWORD PTR [rax]
	...
  42f0ca:	add    BYTE PTR [rax],al
  42f0cc:	add    BYTE PTR [rax+riz*2-0x3e],ch
  42f0d0:	rol    DWORD PTR [rax],cl
  42f0d2:	add    ah,cl
  42f0d4:	mov    ecx,0xffffffff
  42f0d9:	add    BYTE PTR [rax],al
  42f0db:	int3   
  42f0dc:	(bad)  
  42f0dd:	sub    BYTE PTR [rdx],ah
  42f0df:	mov    ecx,0xe7
	...
  42f0fc:	add    BYTE PTR [rbx+riz*4-0x69],bh
  42f103:	(bad)  
  42f104:	call   rbx
  42f106:	ret    0xffb8
  42f109:	mov    esp,0x78ff96a3
  42f10e:	(bad)  
  42f10f:	rex.WR inc QWORD PTR [rax]
	...
  42f11e:	add    BYTE PTR [rax],al
  42f120:	add    BYTE PTR [rcx+0x47],al
  42f123:	sar    edi,cl
  42f125:	push   0x6f
  42f127:	fdivp  st(7),st
  42f129:	cmp    al,BYTE PTR [rax-0x2f]
  42f12c:	push   QWORD PTR [rcx+rdi*1]
  42f12f:	iret   
  42f130:	push   QWORD PTR [rcx+rdi*1]
  42f133:	mov    ebp,0x601722ff
  42f138:	inc    DWORD PTR [rax]
	...
  42f14a:	add    BYTE PTR [rax],al
  42f14c:	add    BYTE PTR [rax+0x55],ah
  42f14f:	ret    
  42f150:	xlat   BYTE PTR ds:[rbx]
  42f151:	mov    bh,0xa1
  42f153:	mov    ah,0xbb
  42f155:	(bad)  
  42f156:	mov    ah,0xa1
  42f158:	mov    cl,0xbc
  42f15a:	movabs ds:0xe8bb2026b190,eax
  42f163:	int3   
  42f164:	jns    0x42f166
	...
  42f17a:	add    BYTE PTR [rax],al
  42f17c:	add    dl,al
  42f17e:	lods   al,BYTE PTR ds:[rsi]
  42f17f:	movabs al,ds:0xb9c1d3ffffffffff
  42f188:	(bad)  
  42f189:	mov    ebx,0x7fff96a4
  42f18e:	gs push rdx
  42f190:	inc    DWORD PTR [rax]
	...
  42f19e:	add    BYTE PTR [rax],al
  42f1a0:	add    BYTE PTR [rax+0x4e],cl
  42f1a3:	(bad)  
  42f1a4:	push   QWORD PTR [rax+rdi*2-0x1f]
  42f1a8:	inc    DWORD PTR [rsi+0x4b]
  42f1ab:	(bad)  
  42f1ac:	(bad)  
  42f1ad:	(bad)  
  42f1ae:	rex.RB sar r15d,cl
  42f1b1:	cmp    bh,BYTE PTR [rdi]
  42f1b3:	sar    edi,0x27
  42f1b6:	sbb    al,0x65
  42f1b8:	inc    DWORD PTR [rax]
	...
  42f1de:	add    ah,cl
  42f1e0:	adc    eax,DWORD PTR [rax]
  42f1e2:	add    ah,cl
  42f1e4:	fiadd  DWORD PTR [rax]
  42f1e6:	add    ah,cl
  42f1e8:	rex.RX add BYTE PTR [rax],r8b
	...
  42f1fb:	add    BYTE PTR [rax],al
  42f1fd:	leave  
  42f1fe:	mov    ah,0xa9
  42f200:	(bad)  
  42f201:	(bad)  
  42f202:	(bad)  
  42f203:	(bad)  
  42f204:	call   rbx
  42f206:	sar    DWORD PTR [rax-0x6a5c4301],0xff
  42f20d:	sub    DWORD PTR [rbx+0x59],0xffffffff
	...
  42f221:	push   rax
  42f222:	push   rbp
  42f223:	xlat   BYTE PTR ds:[rbx]
  42f224:	(bad)  
  42f225:	jl     0x42f1a7
  42f227:	jrcxz  0x42f228
  42f229:	push   rcx
  42f22a:	push   rdi
  42f22b:	fdivr  st,st(7)
  42f22d:	rex.WXB push r8
  42f22f:	(bad)  
  42f230:	inc    DWORD PTR [rcx+0x47]
  42f233:	vcvttsd2si esp,QWORD PTR [rbx]
  42f237:	imul   edi,edi,0x0
	...
  42f24a:	add    BYTE PTR [rax],al
  42f24c:	add    bl,bl
  42f24e:	shr    DWORD PTR [rsi-0x614d344f],0xb1
  42f255:	xchg   esi,eax
  42f256:	sbb    DWORD PTR [rcx+0x7e90aabc],0x6d8099b1
  42f260:	mov    cl,0x0
  42f262:	add    ah,cl
  42f264:	add    BYTE PTR cs:[rax],al
  42f267:	int3   
  42f268:	je     0x42f26a
	...
  42f27a:	add    BYTE PTR [rax],al
  42f27c:	add    al,dl
  42f27e:	mov    ebp,0xffffffb4
  42f283:	(bad)  
  42f284:	call   rbx
  42f286:	sar    DWORD PTR [rcx-0x695c4301],0xff
  42f28d:	mov    dh,BYTE PTR [rcx+0x60]
  42f290:	inc    DWORD PTR [rax]
	...
  42f29e:	add    BYTE PTR [rax],al
  42f2a0:	add    BYTE PTR [rdi+0x5c],dl
  42f2a3:	(bad)  
  42f2a5:	xchg   BYTE PTR [rdx+0x635effe6],cl
  42f2ab:	(bad)  
  42f2ad:	push   rsi
  42f2ae:	pop    rsp
  42f2af:	(bad)  
  42f2b1:	rex.WB
  42f2b2:	rex.WRX retf 0x32ff
  42f2b6:	sub    DWORD PTR [rcx-0x1],esi
	...
  42f2cd:	ffreep st(4)
  42f2cf:	mov    cl,0xb1
  42f2d1:	(bad)  
  42f2d2:	(bad)  
  42f2d3:	(bad)  
  42f2d4:	inc    DWORD PTR [rax]
  42f2d6:	add    ah,cl
  42f2d8:	in     al,dx
  42f2d9:	(bad)  
  42f2da:	(bad)  
  42f2db:	(bad)  
  42f2dc:	call   FWORD PTR [rsi+0xb17285]
	...
  42f2f6:	add    BYTE PTR [rax],al
  42f2f8:	add    BYTE PTR [rcx-0x27c78778],ah
  42f2fe:	enter  0xffbf,0xff
  42f302:	(bad)  
  42f303:	(bad)  
  42f304:	(bad)  
  42f305:	fcmove st,st(2)
  42f307:	ret    
  42f308:	(bad)  
  42f309:	mov    esp,0x90ff95a3
  42f30e:	jns    0x42f377
  42f310:	jmp    QWORD PTR [rcx+0x387888]
	...
  42f31e:	add    BYTE PTR [rax],al
  42f320:	add    BYTE PTR [rdi+0x64],bl
  42f323:	fdiv   st(7),st
  42f325:	nop
  42f326:	xchg   ebx,eax
  42f327:	out    0xff,eax
  42f329:	imul   ebp,DWORD PTR [rdi-0x21],0xdd6863ff
  42f330:	call   QWORD PTR [rax+0x55]
  42f333:	(bad)  
  42f334:	(bad)  
  42f335:	cmp    BYTE PTR [rcx],dh
  42f337:	js     0x42f338
	...
  42f34d:	loop   0x42f317
  42f34f:	mov    ah,0xb1
  42f351:	add    BYTE PTR [rax],al
  42f353:	int3   
  42f354:	mov    esi,0x8fcc0000
  42f359:	add    BYTE PTR [rax],al
  42f35b:	int3   
  42f35c:	(bad)  
  42f35d:	xchg   esi,eax
  42f35e:	jg     0x42f3de
  42f360:	mov    ch,0x0
	...
  42f372:	add    BYTE PTR [rax],al
  42f374:	add    BYTE PTR [rcx-0x68c78778],ah
  42f37a:	jg     0x42f3ea
  42f37c:	(bad)  
  42f37d:	fmul   st,st(0)
  42f37f:	mov    edi,0xffffffff
  42f384:	jmp    rax
  42f386:	ror    ah,cl
  42f388:	inc    esi
  42f38a:	mov    cl,0xa6
  42f38c:	call   QWORD PTR [rdi+0x7eff6e7f]
  42f392:	movsxd edx,DWORD PTR [rcx-0x4]
  42f395:	movabs eax,ds:0x387888
  42f39e:	add    BYTE PTR [rax],al
  42f3a0:	add    BYTE PTR [rsi+0x6c],ah
  42f3a3:	fdivp  st(7),st
  42f3a5:	(bad)  
  42f3a6:	popf   
  42f3a7:	jmp    0x42f3a8
  42f3a9:	jbe    0x42f425
  42f3ab:	jrcxz  0x42f3ac
  42f3ad:	outs   dx,DWORD PTR ds:[rsi]
  42f3ae:	je     0x42f390
  42f3b0:	call   QWORD PTR [rsi+0x5b]
  42f3b3:	sar    edi,cl
  42f3b5:	(bad)  
  42f3b6:	cmp    BYTE PTR [rdi-0x1],bh
	...
  42f3cd:	ins    BYTE PTR es:[rdi],dx
  42f3ce:	(bad)  
  42f3cf:	ret    0xd3
  42f3d2:	add    ah,cl
  42f3d4:	mov    ecx,0xffffffff
  42f3d9:	add    BYTE PTR [rax],al
  42f3db:	int3   
  42f3dc:	(bad)  
  42f3dd:	sub    BYTE PTR [rdx],ah
  42f3df:	mov    ecx,0xe7
	...
  42f3f0:	add    BYTE PTR [rcx-0x68c78778],ah
  42f3f6:	jg     0x42f466
  42f3f8:	dec    esp
  42f3fa:	mov    bh,0xad
  42f3fc:	(bad)  
  42f3fd:	fcmove st,st(1)
  42f3ff:	ret    
  42f400:	(bad)  
  42f401:	(bad)  
  42f402:	(bad)  
  42f403:	(bad)  
  42f404:	(bad)  
  42f405:	jmp    0x42f3e9
  42f407:	(bad)  
  42f409:	(bad)  
  42f40b:	sar    bh,1
  42f40d:	(bad)  
  42f40e:	retf   0xffc3
  42f411:	movabs al,ds:0x9cff334863ff7c8b
  42f41a:	(bad)  
  42f41b:	jo     0x42f46a
  42f41d:	add    BYTE PTR [rax],al
  42f41f:	add    BYTE PTR [rax],al
  42f421:	outs   dx,DWORD PTR ds:[rsi]
  42f422:	je     0x42f405
  42f424:	jmp    QWORD PTR [rdx-0x7e00125a]
  42f42a:	xchg   dh,ah
  42f42c:	(bad)  
  42f42d:	jp     0x42f3af
  42f42f:	in     al,0xff
  42f431:	pop    rbx
  42f432:	(bad)  
  42f433:	xlat   BYTE PTR ds:[rbx]
  42f434:	inc    DWORD PTR [rsi+0x40]
  42f437:	xchg   bh,bh
	...
  42f44d:	(bad)  
  42f44e:	push   rbp
  42f44f:	ret    
  42f450:	xlat   BYTE PTR ds:[rbx]
  42f451:	mov    bh,0xa1
  42f453:	mov    ah,0xbb
  42f455:	(bad)  
  42f456:	mov    ah,0xa1
  42f458:	mov    cl,0xbc
  42f45a:	movabs ds:0xe8bb2026b190,eax
  42f463:	int3   
  42f464:	jns    0x42f466
	...
  42f46e:	add    BYTE PTR [rax],al
  42f470:	add    BYTE PTR [rdi-0x3731766b],ah
  42f476:	mov    bh,0xae
  42f478:	(bad)  
  42f479:	out    dx,eax
  42f47a:	jmp    0x42f464
  42f47f:	(bad)  
  42f480:	(bad)  
  42f481:	(bad)  
  42f482:	(bad)  
  42f483:	(bad)  
  42f484:	(bad)  
  42f485:	(bad)  
  42f486:	(bad)  
  42f487:	(bad)  
  42f488:	(bad)  
  42f489:	(bad)  
  42f48a:	(bad)  
  42f48b:	(bad)  
  42f48c:	(bad)  
  42f48d:	out    dx,eax
  42f48e:	jmp    0xffffffffc715f478
  42f493:	mov    esi,0x7a889fff
  42f498:	dec    DWORD PTR [rsi+0xb96b7a]
  42f49e:	add    BYTE PTR [rax],al
  42f4a0:	add    BYTE PTR [rsi+0x7b],dh
  42f4a3:	jrcxz  0x42f4a4
  42f4a5:	lods   al,BYTE PTR ds:[rsi]
  42f4a6:	scas   al,BYTE PTR es:[rdi]
  42f4a7:	out    dx,eax
  42f4a8:	dec    DWORD PTR [rcx+rdx*4-0x74790017]
  42f4af:	call   0xffffffffdaa955b3
  42f4b4:	dec    DWORD PTR [rbp+0x48]
  42f4b7:	mov    ?,edi
	...
  42f4dd:	add    BYTE PTR [rax],al
  42f4df:	int3   
  42f4e0:	adc    eax,DWORD PTR [rax]
  42f4e2:	add    ah,cl
  42f4e4:	fiadd  DWORD PTR [rax]
  42f4e6:	add    ah,cl
  42f4e8:	rex.RX add BYTE PTR [rax],r8b
  42f4eb:	add    BYTE PTR [rax],al
  42f4ed:	add    BYTE PTR [rax],al
  42f4ef:	add    BYTE PTR [rax],al
  42f4f1:	shr    BYTE PTR [rsi-0x1a12005c],0xe2
  42f4f8:	(bad)  
  42f4f9:	(bad)  
  42f4fa:	(bad)  
  42f4fb:	(bad)  
  42f4fc:	call   rbx
  42f4fe:	sar    DWORD PTR [rax+0x627389ff],0xfe
  42f505:	mov    DWORD PTR [rbx+0x62],esi
  42f508:	cmc    
  42f509:	lods   eax,DWORD PTR ds:[rsi]
  42f50a:	pushf  
  42f50b:	(bad)  
  42f50c:	in     eax,0xfc
  42f50e:	cld    
  42f50f:	cld    
  42f510:	(bad)  
  42f511:	out    dx,eax
  42f512:	jmp    0xffffffff93ecf4fc
  42f517:	xchg   bh,bh
  42f519:	push   0xff384c
  42f51e:	add    BYTE PTR [rax],al
  42f520:	add    BYTE PTR [rbp-0x7d],bh
  42f523:	in     eax,0xff
  42f525:	mov    ah,0xb7
  42f527:	bnd call QWORD PTR [rsi-0x6f001365]
  42f52e:	xchg   ebp,eax
  42f52f:	(bad)  
  42f530:	jmp    QWORD PTR [rbp+0x6b]
  42f533:	fdiv   st(7),st
  42f535:	push   rbp
  42f536:	push   rcx
  42f537:	xchg   esi,eax
  42f538:	inc    DWORD PTR [rax]
	...
  42f562:	add    ah,cl
  42f564:	add    BYTE PTR cs:[rax],al
  42f567:	int3   
  42f568:	je     0x42f56a
  42f56a:	add    BYTE PTR [rax],al
  42f56c:	add    BYTE PTR [rax],al
  42f56e:	add    BYTE PTR [rax],al
  42f570:	add    bh,al
  42f572:	mov    bl,0xa9
  42f574:	(bad)  
  42f575:	(bad)  
  42f576:	(bad)  
  42f577:	(bad)  
  42f578:	(bad)  
  42f579:	(bad)  
  42f57b:	iret   
  42f57c:	push   QWORD PTR [rbp+0x5b]
  42f57f:	rex.RXB jmp QWORD PTR [r9+0x387888]
  42f586:	add    BYTE PTR [rax],al
  42f588:	add    BYTE PTR [rcx-0x1fc78778],ah
  42f58e:	xlat   BYTE PTR ds:[rbx]
  42f58f:	sar    edi,cl
  42f591:	(bad)  
  42f592:	(bad)  
  42f593:	(bad)  
  42f594:	push   QWORD PTR [rbp+0x6eff94a0]
  42f59a:	push   rsp
  42f59b:	rex inc DWORD PTR [rax]
  42f59e:	add    BYTE PTR [rax],al
  42f5a0:	add    BYTE PTR [rbp-0x43001876],al
  42f5a6:	mov    edi,0xbbb9fff4
  42f5ab:	repnz push QWORD PTR [rdi+rsi*4+0x6b65fff1]
  42f5b3:	fdiv   st(7),st
  42f5b5:	pop    rsp
  42f5b6:	pop    rdx
  42f5b7:	sahf   
  42f5b8:	inc    DWORD PTR [rax]
	...
  42f5ee:	add    BYTE PTR [rax],al
  42f5f0:	add    ah,cl
  42f5f2:	mov    ecx,0xffffffaf
  42f5f7:	(bad)  
  42f5f8:	(bad)  
  42f5f9:	fmul   st,st(5)
  42f5fb:	(bad)  
  42f5fc:	push   QWORD PTR [rbp+0x5b]
  42f5ff:	rex.RXB inc DWORD PTR [r8]
	...
  42f60a:	add    BYTE PTR [rax],al
  42f60c:	add    dh,cl
  42f60e:	sar    DWORD PTR [rax-0x1],0xff
  42f615:	mov    ch,0xa0
  42f617:	xchg   esp,eax
  42f618:	push   QWORD PTR [rdi+0x5d]
  42f61b:	rex.WX inc QWORD PTR [rax]
  42f61e:	add    BYTE PTR [rax],al
  42f620:	add    BYTE PTR [rbp-0x13001876],al
  42f626:	in     al,dx
  42f627:	sti    
  42f628:	jmp    rdx
  42f62a:	jrcxz  0x42f626
  42f62c:	(bad)  
  42f62d:	fcmovu st,st(3)
  42f62f:	clc    
  42f630:	push   QWORD PTR [rdi+rsi*4+0x5a5cfff1]
  42f637:	sahf   
  42f638:	inc    DWORD PTR [rax]
	...
  42f66e:	add    BYTE PTR [rax],al
  42f670:	add    ch,al
  42f672:	mov    al,0xa5
  42f674:	(bad)  
  42f675:	(bad)  
  42f676:	(bad)  
  42f677:	(bad)  
  42f678:	(bad)  
  42f679:	(bad)  
  42f67a:	(bad)  
  42f67b:	(bad)  
  42f67c:	push   QWORD PTR [rbp+0x75ff94a0]
  42f682:	pop    rbx
  42f683:	rex.RXB inc DWORD PTR [r8]
  42f686:	add    BYTE PTR [rax],al
  42f688:	add    BYTE PTR [rbx-0x9484],dl
  42f68e:	(bad)  
  42f68f:	(bad)  
  42f690:	(bad)  
  42f691:	(bad)  
  42f692:	(bad)  
  42f693:	(bad)  
  42f694:	push   QWORD PTR [rbp-0x5c006b60]
  42f69a:	xchg   ecx,eax
  42f69b:	or     esi,0x0
  42f69e:	add    BYTE PTR [rax],al
  42f6a0:	add    BYTE PTR [rbx-0x7300115a],ah
  42f6a6:	jnp    0x42f71f
  42f6a8:	jmp    FWORD PTR [rcx-0x73006963]
  42f6ae:	cmp    DWORD PTR [rbx-0x1],0xff373f4c
  42f6b5:	jge    0x42f733
  42f6b7:	mov    esp,0xff
	...
  42f6f0:	add    BYTE PTR [rdx-0x34cd6a5e],bh
  42f6f6:	mov    eax,0xfffffcad
  42f6fb:	(bad)  
  42f6fc:	(bad)  
  42f6fd:	(bad)  
  42f6fe:	(bad)  
  42f6ff:	(bad)  
  42f700:	push   QWORD PTR [rbp+0x5b]
  42f703:	rex.RXB inc DWORD PTR [r8]
  42f706:	add    BYTE PTR [rax],al
  42f708:	add    bh,bh
  42f70a:	(bad)  
  42f70b:	(bad)  
  42f70c:	(bad)  
  42f70d:	(bad)  
  42f70e:	(bad)  
  42f70f:	(bad)  
  42f710:	inc    esp
  42f712:	mov    bh,0xad
  42f714:	jmp    FWORD PTR [rcx-0x6400796c]
  42f71a:	(bad)  
  42f71b:	jno    0x42f771
  42f71d:	add    BYTE PTR [rax],al
  42f71f:	add    BYTE PTR [rax],al
  42f721:	mov    ecx,0x8746f2bb
  42f726:	je     0x42f791
  42f728:	(bad)  
  42f729:	fcom   st(4)
  42f72b:	sar    edi,1
  42f72d:	xchg   esi,eax
  42f72e:	mov    WORD PTR [rdi+0x373f4cff],es
  42f734:	(bad)  
  42f735:	mov    ecx,0x59f2bb
	...
  42f772:	add    BYTE PTR [rax],al
  42f774:	add    BYTE PTR [rcx-0x39c78778],ah
  42f77a:	mov    dl,0xa7
  42f77c:	push   QWORD PTR [rcx-0x5b007266]
  42f782:	mov    edi,DWORD PTR [rbx-0x1]
  42f785:	add    BYTE PTR [rax],al
  42f787:	add    BYTE PTR [rax],al
  42f789:	(bad)  
  42f78a:	mov    dl,0xa7
  42f78c:	push   QWORD PTR [rcx-0x5c007266]
  42f792:	mov    bh,BYTE PTR [rdx-0x5]
  42f795:	movabs eax,ds:0x387888
  42f79e:	add    BYTE PTR [rax],al
  42f7a0:	add    BYTE PTR [rcx-0x68e50d45],bh
  42f7a6:	xchg   BYTE PTR [rdx-0x2a282301],al
  42f7ac:	call   FWORD PTR [rbx+0x4cff8a91]
  42f7b2:	rex cmp edi,edi
  42f7b5:	mov    ecx,0x1af2bb
	...
  42f822:	add    BYTE PTR [rax],al
  42f824:	add    BYTE PTR [rsi-0x1e007f75],bl
  42f82a:	fcmovnu st,st(2)
  42f82c:	jmp    QWORD PTR [rbx+0x54ff9098]
  42f832:	rex.RXB
  42f833:	rex inc DWORD PTR [rax]
	...
  42f842:	add    BYTE PTR [rax],al
  42f844:	add    BYTE PTR [rdi+0x42],cl
  42f847:	cmp    DWORD PTR [rsi+0x0],eax
	...
  42f88a:	add    BYTE PTR [rax],al
  42f88c:	add    BYTE PTR [rsi-0x7bac7f75],bl
  42f892:	jno    0x42f8f9
  42f894:	(bad)  
  42f895:	jge    0x42f900
  42f897:	pop    rdi
  42f898:	call   FWORD PTR [rsi+0x53808b]
  42f89e:	add    BYTE PTR [rax],al
  42f8a0:	add    BYTE PTR [rdi+0x42],cl
  42f8a3:	cmp    DWORD PTR [rcx],esi
  42f8a5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42f8a6:	xchg   ebx,eax
  42f8a7:	mov    edi,edi
  42f8a9:	iret   
  42f8aa:	mov    bl,0xff
  42f8ad:	lods   al,BYTE PTR ds:[rsi]
  42f8ae:	movabs al,ds:0x424fff4b5361ff98
  42f8b7:	cmp    DWORD PTR [rcx],esi
  42f8b9:	add    BYTE PTR [rax],al
  42f8bb:	add    BYTE PTR [rax],al
  42f8bd:	rex.WRXB
  42f8be:	rex.X cmp DWORD PTR [rsi+0x4f],eax
  42f8c2:	rex.X cmp edi,edi
  42f8c5:	pop    rax
  42f8c6:	rex.WB (bad) 
  42f8c8:	inc    DWORD PTR [rax]
	...
  42f90a:	add    BYTE PTR [rax],al
  42f90c:	add    BYTE PTR [rsi-0x252e7f75],bl
  42f912:	ror    ebp,1
  42f914:	inc    esi
  42f916:	mov    edi,0x8ea3ffb9
  42f91b:	test   bh,bh
  42f91d:	nop
  42f91e:	jge    0x42f991
  42f920:	jmp    QWORD PTR [rdi-0x4e006f68]
  42f926:	lahf   
  42f927:	xchg   esp,eax
  42f928:	(bad)  
  42f929:	fmul   st,st(7)
  42f92b:	leave  
  42f92c:	(bad)  
  42f92d:	mov    esp,0x7bffa9af
  42f932:	push   0x61
  42f934:	call   FWORD PTR [rbx+0x4d]
  42f937:	rex.R call FWORD PTR [rbx+0x4d]
  42f93b:	rex.R call FWORD PTR [rbx+0x4d]
  42f93f:	rex.R call FWORD PTR [rbx+0x4d]
  42f943:	rex.R call FWORD PTR [rdi+rcx*2+0x48]
  42f948:	inc    DWORD PTR [rax]
	...
  42f98a:	add    BYTE PTR [rax],al
  42f98c:	add    BYTE PTR [rsi-0x2e7f75],bl
  42f992:	(bad)  
  42f993:	(bad)  
  42f994:	jmp    rbp
  42f996:	(bad)  
  42f998:	call   rax
  42f99a:	(bad)  
  42f99b:	mov    ebp,0xced5e1ff
  42f9a0:	inc    edi
  42f9a2:	mov    bh,0xae
  42f9a4:	jmp    rsi
  42f9a6:	(bad)  
  42f9a8:	(bad)  
  42f9a9:	fcmovne st,st(5)
  42f9ab:	(bad)  
  42f9ac:	call   rax
  42f9ae:	mov    esi,0x8ea3ffb5
  42f9b3:	test   bh,bh
  42f9b5:	nop
  42f9b6:	jge    0x42fa29
  42f9b8:	inc    DWORD PTR [rcx+rsi*2-0x4940009b]
  42f9bf:	mov    cl,0xff
  42f9c1:	addr32 pop rsp
  42f9c3:	push   rbp
  42f9c4:	call   FWORD PTR [rbp+0x56]
  42f9c7:	push   rbx
  42f9c8:	fwait
	...
  42fa0d:	sahf   
  42fa0e:	mov    eax,DWORD PTR [rax-0x2f]
  42fa14:	(bad)  
  42fa15:	in     eax,dx
  42fa16:	call   0xffffffffdd25fa01
  42fa1b:	fcos   
  42fa1d:	rol    ah,1
  42fa1f:	mov    ebp,0xced5e1ff
  42fa24:	(bad)  
  42fa25:	std    
  42fa26:	cld    
  42fa27:	sti    
  42fa28:	push   rbp
  42fa2a:	lock out dx,al
  42fa2c:	(bad)  
  42fa2d:	(bad)  
  42fa2f:	retf   0xcbff
  42fa32:	mov    bh,0xad
  42fa34:	(bad)  
  42fa35:	mov    edi,0xe3ff9aa7
  42fa3a:	fcmovnbe st,st(7)
  42fa3c:	dec    DWORD PTR [rbx+0x75ff727b]
  42fa42:	push   0x66
  42fa44:	jmp    FWORD PTR [rsi+0x66]
  42fa47:	(bad)  
  42fa48:	and    BYTE PTR [rax],al
	...
  42fa8a:	add    BYTE PTR [rax],al
  42fa8c:	add    BYTE PTR [rsi-0x2e7f75],bl
  42fa92:	(bad)  
  42fa93:	(bad)  
  42fa94:	(bad)  
  42fa95:	(bad)  
  42fa96:	(bad)  
  42fa97:	(bad)  
  42fa98:	jmp    FWORD PTR [rsp+riz*4-0x463d005f]
  42fa9f:	mov    ah,0xff
  42faa1:	(bad)  
  42faa3:	(bad)  
  42faa4:	(bad)  
  42faa5:	sti    
  42faa6:	stc    
  42faa7:	stc    
  42faa8:	(bad)  
  42faa9:	std    
  42faaa:	std    
  42faab:	cld    
  42faac:	push   rbx
  42faae:	out    dx,eax
  42faaf:	in     al,dx
  42fab0:	push   rcx
  42fab2:	in     al,dx
  42fab3:	jmp    0xffffffffe127e6b7
  42fab8:	call   QWORD PTR [rsi-0x6d007c76]
  42fabe:	test   BYTE PTR [rsi-0x1],bh
  42fac1:	jle    0x42fb38
  42fac3:	jno    0x42fae5
	...
  42fb0d:	sahf   
  42fb0e:	mov    eax,DWORD PTR [rax-0x7f7461ad]
  42fb14:	xchg   esp,eax
  42fb15:	sahf   
  42fb16:	mov    eax,DWORD PTR [rax-0x75726b6c]
  42fb1c:	rex.WR xchg rbp,rax
  42fb1e:	mov    cs,WORD PTR [rdx-0x2f2b22e4]
  42fb24:	jmp    QWORD PTR [rbp-0x5b006562]
  42fb2a:	pushf  
  42fb2b:	cwde   
  42fb2c:	jmp    QWORD PTR [rcx-0x61006b68]
  42fb32:	xchg   ebp,eax
  42fb33:	xchg   ecx,eax
  42fb34:	call   QWORD PTR [rsi-0x76007674]
  42fb3a:	cmp    DWORD PTR [rbp-0x15],0x10797d85
	...
  42fbc9:	(bad)  
  42fbca:	(bad)  
  42fbcb:	(bad)  
  42fbcc:	inc    DWORD PTR [rbx-0x7c000001]
  42fbd2:	(bad)  
  42fbd3:	(bad)  
  42fbd4:	inc    DWORD PTR [rbx-0x7c000001]
  42fbda:	clc    
  42fbdb:	cmp    al,0xf
  42fbdd:	cmp    eax,0xf8f80f3c
  42fbe3:	cmp    al,0xf
  42fbe5:	cmp    al,0x3c
  42fbe8:	jae    0xffffffff835238e6
  42fbee:	clc    
  42fbef:	cmp    al,0xf
  42fbf1:	cmp    eax,0x3c
  42fbf4:	jno    0xfffffffff85238f2
  42fbfa:	clc    
  42fbfb:	cmp    al,0xf
  42fbfd:	cmp    al,0x3c
  42fc00:	jae    0xffffffff835218f6
  42fc06:	loopne 0x42fc14
  42fc08:	jae    0xffffffff815200ce
  42fc0e:	rol    BYTE PTR [rdi+rcx*1],0xf8
  42fc12:	rol    BYTE PTR [rdi+rcx*1],0xfc
  42fc16:	rol    DWORD PTR [rdi+rcx*1],0xff
  42fc1a:	ret    
  42fc1b:	test   BYTE PTR [rdi],cl
  42fc1d:	inc    ecx
  42fc1f:	add    al,0xf
  42fc21:	inc    ecx
  42fc23:	add    al,0xf
  42fc25:	jmp    rcx
  42fc27:	or     al,0xf
  42fc29:	(bad)  
  42fc2a:	(bad)  
  42fc2b:	(bad)  
  42fc2c:	(bad)  
  42fc2d:	(bad)  
  42fc2e:	inc    DWORD PTR [rax+rcx*1+0x80ffff]
  42fc35:	(bad)  
  42fc36:	inc    DWORD PTR [rax-0x7f000100]
  42fc3c:	add    bh,bh
  42fc3e:	inc    DWORD PTR [rax-0x7f0000ff]
  42fc44:	add    edi,edi
  42fc46:	(bad)  
  42fc47:	(bad)  
  42fc48:	jmp    FWORD PTR [rax]
  42fc4a:	add    BYTE PTR [rax],al
  42fc4c:	add    BYTE PTR [rax],dl
  42fc4e:	add    BYTE PTR [rax],al
  42fc50:	add    BYTE PTR [rax],ah
  42fc52:	add    BYTE PTR [rax],al
  42fc54:	add    BYTE PTR [rcx],al
  42fc56:	add    BYTE PTR [rax],ah
  42fc58:	add    BYTE PTR [rax],al
  42fc5a:	add    BYTE PTR [rax],al
  42fc5c:	add    BYTE PTR [rax+0x4],al
	...
  42fc6f:	add    BYTE PTR [rax],al
  42fc71:	jrcxz  0x42fc41
  42fc73:	mov    eax,0xb48492a8
  42fc78:	enter  0x9bb2,0x7e
  42fc7c:	xchg   ebx,eax
	...
  42fcb1:	xchg   edx,eax
  42fcb2:	test   eax,ecx
  42fcb4:	shr    BYTE PTR [rbx],0x30
  42fcb7:	(bad)  
  42fcb8:	fnstenv [rbp+0x67]
  42fcbb:	lahf   
  42fcbc:	lods   al,BYTE PTR ds:[rsi]
	...
  42fcf1:	pop    rax
  42fcf2:	rex.WRX ret 
  42fcf4:	mov    ecx,0xb4c39eaa
  42fcf9:	and    DWORD PTR [rbx],ebx
  42fcfb:	mov    edx,0xce0202b5
  42fd00:	sbb    al,BYTE PTR [rax]
  42fd02:	add    BYTE PTR [rax],al
  42fd04:	add    BYTE PTR [rbp-0x4e0eb08f],dh
  42fd0a:	(bad)  
  42fd0b:	cmp    edi,edi
  42fd0d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  42fd0e:	pop    rax
  42fd0f:	xor    bh,ch
	...
  42fd19:	(bad)  
  42fd1a:	adc    al,0x8e
  42fd1c:	rex.RX sub BYTE PTR [rcx],r10b
  42fd1f:	cmp    ch,0x28
  42fd22:	adc    DWORD PTR [rax-0x71ebd003],eax
  42fd28:	pop    rcx
	...
  42fd31:	(bad)  
  42fd32:	mov    BYTE PTR [rsi-0x734325b7],dh
  42fd38:	rex.RX
  42fd39:	rex.WX (bad) 
  42fd3b:	test   al,0x6b
  42fd3d:	add    BYTE PTR [rax],al
  42fd3f:	shl    DWORD PTR [rax+rax*1+0x0],1
  42fd43:	add    BYTE PTR [rax],al
  42fd45:	mov    ebx,0xffff4c70
  42fd4a:	mov    bl,0x8b
  42fd4c:	jmp    FWORD PTR [rdx+0xff385d]
  42fd52:	add    BYTE PTR [rax],al
  42fd54:	add    BYTE PTR [rax],al
  42fd56:	add    BYTE PTR [rax],al
  42fd58:	add    BYTE PTR [rdx+rsi*1],ch
  42fd5b:	(bad)  
  42fd5c:	jmp    FWORD PTR [rip+0x2dfd8f13]        # 0x2e408c75
  42fd62:	adc    ecx,DWORD PTR [rdi-0x71ecd103]
  42fd68:	inc    BYTE PTR [rax]
  42fd6a:	add    BYTE PTR [rax],al
  42fd6c:	add    BYTE PTR [rax],al
  42fd6e:	add    BYTE PTR [rax],al
  42fd70:	add    bl,ah
  42fd72:	(bad)  
  42fd73:	mov    esi,0xc4747bb6
  42fd78:	(bad)  [rdx+0x7a0908f]
  42fd7e:	(bad)  
  42fd7f:	(bad)  
  42fd80:	and    eax,DWORD PTR [rax]
  42fd82:	add    BYTE PTR [rax],al
  42fd84:	add    ah,al
  42fd86:	jbe    0x42fdd9
  42fd88:	(bad)  
  42fd89:	(bad)  
  42fd8a:	mov    eax,0x62afff94
  42fd8f:	cmp    al,0xff
	...
  42fd99:	(bad)  
  42fd9a:	rex.RB sar r15d,cl
  42fd9d:	xor    esp,DWORD PTR [rax]
  42fd9f:	sahf   
  42fda0:	push   QWORD PTR [rbx]
  42fda2:	and    BYTE PTR [rsi-0x71ecd101],bl
  42fda8:	inc    DWORD PTR [rax]
  42fdaa:	add    BYTE PTR [rax],al
  42fdac:	add    BYTE PTR [rax],al
  42fdae:	add    BYTE PTR [rax],al
  42fdb0:	add    BYTE PTR [rdi+0x6c],dh
  42fdb3:	mov    cl,0x32
  42fdb6:	ss jmp 0xffffffffa392598e
  42fdbc:	stos   DWORD PTR es:[rdi],eax
	...
  42fdc5:	retf   0x587d
  42fdc8:	(bad)  
  42fdc9:	(bad)  
  42fdca:	mov    esi,0x68b6ff9e
  42fdcf:	rex.XB inc DWORD PTR [r8]
  42fdd2:	add    BYTE PTR [rax],al
  42fdd4:	add    BYTE PTR [rax],al
  42fdd6:	add    BYTE PTR [rax],al
  42fdd8:	add    BYTE PTR [rdx+0x58],dl
  42fddb:	fdivr  st,st(7)
  42fddd:	cmp    BYTE PTR [rsi],ch
  42fddf:	lods   eax,DWORD PTR ds:[rsi]
  42fde0:	(bad)  
  42fde1:	cmp    BYTE PTR [rsi],ch
  42fde3:	lods   eax,DWORD PTR ds:[rsi]
  42fde4:	jmp    FWORD PTR [rsi]
  42fde6:	adc    ecx,DWORD PTR [rsi+0xff]
  42fdec:	add    BYTE PTR [rax],al
  42fdee:	add    BYTE PTR [rax],al
  42fdf0:	add    BYTE PTR [rdx+0x57],ah
  42fdf3:	ret    0xc7a2
  42fdf6:	mov    ah,0xb5
  42fdf8:	fwait
  42fdf9:	and    eax,0xabbc1f
  42fdfe:	add    bh,cl
  42fe00:	(bad)  
  42fe01:	add    BYTE PTR [rax],al
  42fe03:	add    BYTE PTR [rax],al
  42fe05:	iret   
  42fe06:	sbb    DWORD PTR [rdi-0x1],0xfffffffe
  42fe0a:	(bad)  
  42fe0b:	test   eax,0x4b71beff
  42fe10:	inc    DWORD PTR [rax]
  42fe12:	add    BYTE PTR [rax],al
  42fe14:	add    BYTE PTR [rax],al
  42fe16:	add    BYTE PTR [rax],al
  42fe18:	add    BYTE PTR [rdi+0x6c],ah
  42fe1b:	(bad)  
  42fe1d:	ds cmp eax,0x3d3effbf
  42fe23:	mov    edi,0x8e132eff
  42fe28:	inc    DWORD PTR [rax]
  42fe2a:	add    BYTE PTR [rax],al
  42fe2c:	add    BYTE PTR [rax],al
  42fe2e:	add    BYTE PTR [rax],al
  42fe30:	add    BYTE PTR [rsi-0x2faf4b66],ch
  42fe36:	mov    ah,0x8f
  42fe38:	push   rsi
  42fe39:	pop    rsp
  42fe3a:	rex.WRX lahf 
  42fe3c:	imul   eax,DWORD PTR [rax],0xb872d100
  42fe42:	outs   dx,DWORD PTR ds:[rsi]
  42fe43:	xor    r13,r10
  42fe46:	mov    ah,BYTE PTR [rsi-0x1]
  42fe49:	dec    ebp
  42fe4b:	mov    ah,0xff
  42fe4d:	mov    bh,0x74
  42fe4f:	push   rbx
  42fe50:	(bad)  
  42fe51:	mov    eax,0x314d6f
  42fe56:	add    BYTE PTR [rax],al
  42fe58:	add    BYTE PTR [rbx-0x80],bh
  42fe5b:	in     al,0xff
  42fe5d:	rex.XB
  42fe5e:	rex.WR (bad) 
  42fe60:	inc    DWORD PTR [rbx+0x4c]
  42fe63:	(bad)  
  42fe64:	push   QWORD PTR [rbx]
  42fe66:	and    BYTE PTR [rsi+0xff],bl
  42fe6c:	add    BYTE PTR [rax],al
  42fe6e:	add    BYTE PTR [rax],al
  42fe70:	add    dl,bl
  42fe72:	enter  0xc4c3,0x5c
  42fe76:	pop    rdx
  42fe77:	shr    edx,cl
  42fe79:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42fe7a:	xchg   ebx,eax
  42fe7b:	xchg   edx,eax
  42fe7c:	stos   DWORD PTR es:[rdi],eax
  42fe7d:	xchg   ecx,eax
  42fe7e:	pop    rax
  42fe7f:	push   0x7193dc3c
  42fe84:	(bad)  
  42fe85:	std    
  42fe86:	loope  0x42fe5a
  42fe88:	(bad)  
  42fe89:	std    
  42fe8a:	loope  0x42fe5e
  42fe8c:	(bad)  
  42fe8d:	std    
  42fe8e:	(bad)  
  42fe8f:	mov    esi,0x4869adff
  42fe94:	(bad)  
  42fe95:	mov    eax,0x8e314d6f
  42fe9a:	xchg   ebx,eax
  42fe9b:	jmp    0xffffffffdd9c479f
  42fea0:	dec    DWORD PTR [rax+0x59]
  42fea3:	(bad)  
  42fea5:	xor    esp,DWORD PTR [rax]
  42fea7:	sahf   
  42fea8:	inc    DWORD PTR [rax]
  42feaa:	add    BYTE PTR [rax],al
  42feac:	add    BYTE PTR [rax],al
  42feae:	add    BYTE PTR [rax],al
  42feb0:	add    BYTE PTR [rbx+0x58],ah
  42feb3:	(bad)
  42feb6:	rex.W in al,0xd0
  42feb9:	cmp    r13b,BYTE PTR [rax+0x7ea0e6b0]
  42fec0:	(bad)  
  42fec1:	std    
  42fec2:	bnd jmp 0x42fec4
  42fec5:	not    ch
  42fec7:	(bad)  
  42fec8:	call   rcx
  42feca:	mov    ebp,DWORD PTR [rbx-0x1]
  42fecd:	sti    
  42fece:	out    dx,al
  42fecf:	out    0xff,al
  42fed1:	std    
  42fed2:	fadd   st,st(3)
  42fed4:	(bad)  
  42fed5:	mov    eax,0x9eff4d6f
  42feda:	movabs ds:0xada1fff8cac3ffee,eax
  42fee3:	hlt    
  42fee4:	push   QWORD PTR [rbx]
  42fee6:	and    BYTE PTR [rsi+0xff],bl
  42feec:	add    BYTE PTR [rax],al
  42feee:	add    BYTE PTR [rax],al
  42fef0:	add    BYTE PTR [rbp+0x68],dh
  42fef3:	ror    BYTE PTR [rdi-0x7757412b],0x31
  42fefa:	sub    bh,BYTE PTR [rax-0x698d5e5c]
  42ff00:	(bad)  
  42ff01:	sti    
  42ff02:	out    dx,al
  42ff03:	out    0xff,al
  42ff05:	loope  0x42fea1
  42ff07:	js     0x42ff08
  42ff09:	add    BYTE PTR [rax],al
  42ff0b:	add    BYTE PTR [rax],al
  42ff0d:	(bad)  
  42ff0e:	mov    esp,DWORD PTR [rdi-0x1]
  42ff11:	in     eax,0xc4
  42ff13:	mov    bl,0xff
  42ff15:	mov    edi,0x2fff5677
  42ff1a:	adc    al,0x8e
  42ff1c:	xor    DWORD PTR [rbx+0x6f],edi
  42ff1f:	jmp    QWORD PTR gs:[rbx+0x53]
  42ff23:	rex.XB jmp FWORD PTR [r15]
  42ff26:	adc    al,0x8e
  42ff28:	pop    rcx
	...
  42ff39:	xor    ebp,DWORD PTR [rdx+rdi*4]
  42ff3c:	movaps xmm3,XMMWORD PTR [rax]
  42ff3f:	mov    dl,0x83
  42ff41:	jmp    0xffffffffe8427ee7
  42ff46:	lahf   
  42ff47:	jge    0x42ff48
  42ff49:	add    BYTE PTR [rax],al
  42ff4b:	add    BYTE PTR [rax],al
  42ff4d:	loopne 0x42fee8
  42ff4f:	js     0x42ff50
  42ff51:	mov    esi,0xb8ff5879
  42ff56:	outs   dx,DWORD PTR ds:[rsi]
  42ff57:	xor    QWORD PTR [r8],r8
  42ff5a:	add    BYTE PTR [rax],al
  42ff5c:	add    cl,al
  42ff5e:	mov    ecx,0x4b59ffb1
  42ff63:	cmp    al,0xff
	...
  42ff91:	scas   eax,DWORD PTR es:[rdi]
  42ff92:	movabs ds:0xc95f6d7d9399,eax
  42ff9b:	add    BYTE PTR [rax],al
  42ff9d:	mov    ah,0xa9
  42ff9f:	movabs eax,ds:0x1c232aff435363ff
  42ffa8:	jns    0x42ffaa
  42ffaa:	add    BYTE PTR [rax],al
  42ffac:	add    BYTE PTR [rsi+0x5c],ch
  42ffaf:	rex.WXB std 
	...
  42ffd1:	leave  
  42ffd2:	sar    BYTE PTR [rax-0x65554905],0xff
  42ffd9:	movsxd edx,DWORD PTR [rbx+0x43]
  42ffdc:	std    
  42ffdd:	mov    dh,0xb9
  42ffdf:	mov    dl,0xf5
  42ffe1:	pushf  
  42ffe2:	xchg   esp,eax
  42ffe3:	mov    edx,esi
  42ffe5:	pop    rdx
  42ffe6:	push   rbp
  42ffe7:	push   rcx
  42ffe8:	int3   
  42ffe9:	outs   dx,BYTE PTR ds:[rsi]
  42ffea:	pop    rsp
  42ffeb:	rex.WXB std 
  42ffed:	movabs ds:0xfb949a,eax
	...
  43000e:	add    BYTE PTR [rax],al
  430010:	add    cl,cl
  430012:	sar    BYTE PTR [rax-0x160f0b17],0xfe
  430019:	jl     0x43008d
  43001b:	push   0xffffffffe5eceaef
  430020:	cmc    
  430021:	ror    ebx,1
  430023:	ret    0xadf6
  430026:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  430027:	movabs ds:0xa1acbef271757af6,al
  430030:	sbb    al,BYTE PTR [rax]
	...
  43004e:	add    BYTE PTR [rax],al
  430050:	add    cl,bl
  430052:	ror    ch,cl
  430054:	out    dx,eax
  430055:	mov    esp,0xfeacb4
  43005a:	add    BYTE PTR [rax],al
  43005c:	add    BYTE PTR [rdi-0x6f476860],ah
  430062:	mov    al,BYTE PTR [rdx+0x62686dbe]
  430068:	retf   
  430069:	mov    esi,0x1aa1ac
  43006e:	add    BYTE PTR [rax],al
  430070:	add    BYTE PTR [rdi],bl
  430072:	inc    DWORD PTR [rax]
  430074:	add    BYTE PTR [rdi],bl
  430076:	inc    DWORD PTR [rax]
  430078:	add    BYTE PTR [rax],cl
  43007a:	ret    
  43007b:	add    BYTE PTR [rax],al
  43007d:	or     bl,al
  43007f:	add    BYTE PTR [rax],al
  430081:	or     bl,al
  430083:	add    BYTE PTR [rax],al
  430085:	sbb    bl,al
  430087:	add    BYTE PTR [rax],al
  430089:	or     bl,al
  43008b:	add    BYTE PTR [rax],al
  43008d:	add    BYTE PTR [rbx+0x0],al
  430090:	add    BYTE PTR [rax],al
  430092:	add    eax,DWORD PTR [rax]
  430094:	add    BYTE PTR [rax],al
  430096:	add    eax,DWORD PTR [rax]
  430098:	add    BYTE PTR [rdx],al
  43009a:	add    eax,DWORD PTR [rax]
  43009c:	add    dl,al
  43009e:	(bad)  
  43009f:	add    BYTE PTR [rax],al
  4300a1:	jmp    QWORD PTR [rdx]
  4300a3:	add    BYTE PTR [rax],al
  4300a5:	inc    DWORD PTR [rax]
  4300a7:	add    BYTE PTR [rax],al
  4300a9:	inc    DWORD PTR [rax]
  4300ab:	add    BYTE PTR [rax],al
  4300ad:	jmp    QWORD PTR [rcx]
  4300af:	add    BYTE PTR [rax],al
  4300b1:	or     eax,DWORD PTR [rax+0x0]
  4300b4:	add    DWORD PTR [rax],eax
  4300b6:	add    BYTE PTR [rax],al
  4300b8:	(bad)  
  4300b9:	(bad)  
  4300ba:	(bad)  
  4300bb:	inc    DWORD PTR [rcx]
  4300bd:	add    BYTE PTR [rax],al
  4300bf:	add    BYTE PTR [rax],al
  4300c1:	add    BYTE PTR [rax],al
  4300c3:	add    BYTE PTR [rdx+rax*1],cl
  4300c6:	add    BYTE PTR [rax],al
  4300c8:	add    BYTE PTR [rcx+0x53],dl
  4300cb:	jns    0x430140
  4300cd:	je     0x430134
  4300cf:	ins    DWORD PTR es:[rdi],dx
  4300d0:	cs rex.R jb 0x430135
  4300d4:	ja     0x43013f
  4300d6:	outs   dx,BYTE PTR ds:[rsi]
  4300d7:	addr32 sub al,0x20
  4300da:	push   rsi
  4300db:	gs jb  0x430151
  4300de:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  4300e5:	xor    BYTE PTR cs:[rsi],ch
  4300e8:	xor    BYTE PTR [rax+riz*1],ch
  4300eb:	rex.XB jne 0x43015a
  4300ee:	je     0x430165
  4300f0:	jb     0x430157
  4300f2:	cmp    eax,0x7475656e
  4300f7:	jb     0x43015a
  4300f9:	ins    BYTE PTR es:[rdi],dx
  4300fa:	sub    al,0x20
  4300fc:	push   rax
  4300fd:	jne    0x430161
  4300ff:	ins    BYTE PTR es:[rdi],dx
  430100:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  430107:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  43010b:	(bad)  
  43010c:	xor    BYTE PTR [rbx],dh
  43010e:	xor    ax,0x3766
  430112:	xor    WORD PTR [rcx],si
  430115:	fs xor eax,0x61336130
  43011b:	add    eax,0x1
  430120:	adc    edx,DWORD PTR [rbx+0x79]
  430123:	jae    0x430199
  430125:	gs ins DWORD PTR es:[rdi],dx
  430127:	cs rex.R jb 0x43018c
  43012b:	ja     0x430196
  43012d:	outs   dx,BYTE PTR ds:[rsi]
  43012e:	movsxd rbp,DWORD PTR cs:[r15d+0x6e]
  430134:	add    al,BYTE PTR [rax]
  430136:	add    BYTE PTR [rax],al
  430138:	or     BYTE PTR [rcx+0x63],cl
  43013b:	outs   dx,DWORD PTR ds:[rsi]
  43013c:	outs   dx,BYTE PTR ds:[rsi]
  43013d:	rex.R (bad) 
  43013f:	je     0x4301a2
  430141:	or     BYTE PTR [rcx+0x63],cl
  430144:	outs   dx,DWORD PTR ds:[rsi]
  430145:	outs   dx,BYTE PTR ds:[rsi]
  430146:	push   rbx
  430147:	imul   edi,DWORD PTR [rdx+0x65],0x13020407
  43014e:	push   rbx
  43014f:	jns    0x4301c4
  430151:	je     0x4301b8
  430153:	ins    DWORD PTR es:[rdi],dx
  430154:	cs rex.R jb 0x4301b9
  430158:	ja     0x4301c3
  43015a:	outs   dx,BYTE PTR ds:[rsi]
  43015b:	addr32 cs push rbx
  43015e:	imul   edi,DWORD PTR [rdx+0x65],0x2
  430165:	add    al,BYTE PTR [rax]
  430167:	add    BYTE PTR [rax],al
  430169:	or     DWORD PTR [rbx],eax
  43016b:	add    BYTE PTR [rax],al
  43016d:	add    BYTE PTR [rip+0xfffffffffffffffc],al        # 0x43016f
  430173:	adc    edx,DWORD PTR [rbx+0x79]
  430176:	jae    0x4301ec
  430178:	gs ins DWORD PTR es:[rdi],dx
  43017a:	cs rex.R jb 0x4301df
  43017e:	ja     0x4301e9
  430180:	outs   dx,BYTE PTR ds:[rsi]
  430181:	addr32 cs push rbx
  430184:	imul   edi,DWORD PTR [rdx+0x65],0x2
  43018b:	add    eax,0x74646977
  430190:	push   0x69656806
  430195:	addr32 push 0x8000074
  43019b:	or     BYTE PTR [rdx],al
	...
  4301a5:	add    BYTE PTR [rax],al
  4301a7:	add    BYTE PTR [rdi],cl
  4301a9:	add    eax,DWORD PTR [rax]
  4301ab:	add    BYTE PTR [rax],al
  4301ad:	xchg   esi,eax
  4301ae:	(bad)  
  4301af:	add    BYTE PTR [rax],al
  4301b1:	add    al,BYTE PTR [rax]
  4301b3:	add    BYTE PTR [rcx],al
  4301b5:	add    BYTE PTR [rsi],al
  4301b7:	add    BYTE PTR [rax],ah
  4301b9:	and    BYTE PTR [rax],dl
  4301bb:	add    BYTE PTR [rcx],al
  4301bd:	add    BYTE PTR [rax+rax*1],al
  4301c0:	call   0x664301c7
  4301c5:	add    BYTE PTR [rax],al
  4301c7:	add    BYTE PTR [rax],dl
  4301c9:	adc    BYTE PTR [rax],dl
  4301cb:	add    BYTE PTR [rcx],al
  4301cd:	add    BYTE PTR [rax+rax*1],al
  4301d0:	sub    BYTE PTR [rcx],al
  4301d2:	add    BYTE PTR [rax],al
  4301d4:	rex.WRX add r8,QWORD PTR [rax]
  4301d7:	add    BYTE PTR [rax],ah
  4301d9:	and    BYTE PTR [rax],al
  4301db:	add    BYTE PTR [rcx],al
  4301dd:	add    BYTE PTR [rax],cl
  4301df:	add    BYTE PTR [rax+0x76000008],ch
  4301e5:	add    al,0x0
  4301e7:	add    BYTE PTR [rax],dl
  4301e9:	adc    BYTE PTR [rax],al
  4301eb:	add    BYTE PTR [rcx],al
  4301ed:	add    BYTE PTR [rax],cl
  4301ef:	add    BYTE PTR [rax+0x5],ch
  4301f2:	add    BYTE PTR [rax],al
  4301f4:	(bad)  
  4301f5:	or     eax,0x20200000
  4301fa:	add    BYTE PTR [rax],al
  4301fc:	add    DWORD PTR [rax],eax
  4301fe:	and    BYTE PTR [rax],al
  430200:	test   al,0x10
  430202:	add    BYTE PTR [rax],al
  430204:	xchg   BYTE PTR [rdx],dl
  430206:	add    BYTE PTR [rax],al
  430208:	adc    BYTE PTR [rax],dl
  43020a:	add    BYTE PTR [rax],al
  43020c:	add    DWORD PTR [rax],eax
  43020e:	and    BYTE PTR [rax],al
  430210:	push   0x2e000004
  430215:	and    eax,DWORD PTR [rax]
  430217:	add    BYTE PTR [rax],ch
  430219:	add    BYTE PTR [rax],al
  43021b:	add    BYTE PTR [rax],ah
  43021d:	add    BYTE PTR [rax],al
  43021f:	add    BYTE PTR [rax+0x0],al
  430222:	add    BYTE PTR [rax],al
  430224:	add    DWORD PTR [rax],eax
  430226:	add    al,0x0
  430228:	add    BYTE PTR [rax],al
  43022a:	add    BYTE PTR [rax],al
  43022c:	add    BYTE PTR [rdx],al
	...
  430246:	add    BYTE PTR [rax],0x0
  430249:	add    BYTE PTR [rax],0x0
  43024c:	add    BYTE PTR [rax+0x800080],al
  430252:	add    BYTE PTR [rax],al
  430254:	add    BYTE PTR [rax],0x80
  430257:	add    BYTE PTR [rax-0x7fffff80],al
  43025d:	add    BYTE PTR [rax-0x3f3f4000],0x0
  430264:	add    BYTE PTR [rax],al
  430266:	inc    DWORD PTR [rax]
  430268:	add    bh,bh
  43026a:	add    BYTE PTR [rax],al
  43026c:	add    bh,bh
  43026e:	inc    DWORD PTR [rax]
  430270:	inc    DWORD PTR [rax]
  430272:	add    BYTE PTR [rax],al
  430274:	inc    DWORD PTR [rax]
  430276:	inc    DWORD PTR [rax]
  430278:	(bad)  
  430279:	inc    DWORD PTR [rax]
  43027b:	add    bh,bh
  43027d:	(bad)  
  43027e:	inc    DWORD PTR [rax]
  430280:	add    BYTE PTR [rax],al
  430282:	add    BYTE PTR [rax],al
  430284:	add    BYTE PTR [rax],al
  430286:	add    BYTE PTR [rsi+0x70],dh
  430289:	add    BYTE PTR [rax],al
  43028b:	add    DWORD PTR [rip+0x77000010],edx        # 0x774302a1
  430291:	ja     0x43030a
  430293:	ja     0x43030b
  430295:	ja     0x43030e
  430297:	mov    BYTE PTR [rsi+0x0],dh
  43029a:	add    BYTE PTR [rdi+0x1113],dl
  4302a0:	jg     0x430229
  4302a2:	xchg   DWORD PTR [rdi-0x79],esi
  4302a5:	xchg   DWORD PTR [rdi-0x8],esi
  4302a8:	test   DWORD PTR [rax],eax
  4302aa:	add    BYTE PTR [rcx],bl
  4302ac:	cdq    
  4302ad:	push   rcx
  4302ae:	add    BYTE PTR [rax],al
  4302b0:	jg     0x43023a
  4302b2:	mov    BYTE PTR [rax-0x7777778],cl
  4302b8:	jbe    0x4302ba
  4302ba:	add    BYTE PTR [rdi-0x6d],dh
  4302bd:	xchg   edx,eax
  4302be:	add    BYTE PTR [rax],al
  4302c0:	jg     0x43024a
  4302c2:	(bad)  
  4302c3:	(bad)  
  4302c4:	(bad)  
  4302c5:	(bad)  
  4302c6:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4302c7:	clc    
  4302c8:	test   BYTE PTR [rax],al
  4302ca:	add    BYTE PTR [rdi+0x9595],dl
  4302d0:	jg     0x430261
  4302d2:	mov    BYTE PTR [rax-0x7577778],cl
  4302d8:	xchg   BYTE PTR [rax],al
  4302da:	add    BYTE PTR [rax+0x7193],bl
  4302e0:	jg     0x43026a
  4302e2:	clc    
  4302e3:	(bad)  
  4302e4:	(bad)  
  4302e5:	(bad)
  4302e9:	add    BYTE PTR [rax],al
  4302eb:	jns    0x430366
  4302ed:	xchg   ecx,eax
  4302ee:	add    BYTE PTR [rax],al
  4302f0:	jg     0x4302ea
  4302f2:	(bad)
  4302f6:	mov    al,bh
  4302f8:	xchg   BYTE PTR [rax],al
  4302fa:	add    BYTE PTR [rax+0x7197],bl
  430300:	jg     0x430291
  430302:	mov    al,bh
  430304:	clc    
  430305:	clc    
  430306:	mov    al,bh
  430308:	ja     0x43030a
  43030a:	add    BYTE PTR [rdi+0x7179],al
  430310:	jg     0x4302a1
  430312:	vpmacssdqh ymm1,ymm14,ymm9,YMMWORD PTR [r8+0x86f8]
  43031c:	cwde   
  43031d:	xchg   edi,eax
  43031e:	add    BYTE PTR [rax],al
  430320:	jg     0x43031a
  430322:	clc    
  430323:	clc    
  430324:	clc    
  430325:	mov    BYTE PTR [rax+0x87f8],cl
  43032b:	mov    BYTE PTR [rax+0x7f000093],bl
  430331:	vpmacssdqh xmm1,xmm0,xmm0,XMMWORD PTR [r8+0x7086f8e8]
  43033b:	cwde   
  43033c:	mov    DWORD PTR [rbp-0x7810000],eax
  430342:	clc    
  430343:	clc    
  430344:	clc    
  430345:	xchg   DWORD PTR [rax+0x7688f8],ecx
  43034b:	mov    BYTE PTR [rax-0x6d],bh
  43034e:	add    BYTE PTR [rax],al
  430350:	jg     0x43034a
  430352:	clc    
  430353:	clc    
  430354:	clc    
  430355:	mov    bh,bh
  430357:	(bad)  
  430358:	inc    DWORD PTR [rdi+0x75987880]
  43035e:	add    BYTE PTR [rax],al
  430360:	jg     0x43035a
  430362:	dec    DWORD PTR [rdi+0x67f8888f]
  430368:	jg     0x430361
  43036a:	mov    BYTE PTR [rax-0x70ffff69],cl
  430371:	clc    
  430372:	clc    
  430373:	clc    
  430374:	clc    
  430375:	pop    QWORD PTR [rsi+0x60f87888]
  43037b:	js     0x430305
  43037d:	jns    0x43037f
  43037f:	add    BYTE PTR [rdi-0x1],bh
  430382:	(bad)  
  430383:	(bad)  
  430384:	dec    DWORD PTR [rdi-0x8870079]
  43038a:	jo     0x430314
  43038c:	mov    BYTE PTR [rdi-0x7780000],al
  430392:	clc    
  430393:	(bad)
  430397:	push   0xffffffff8770f87f
  43039c:	xchg   DWORD PTR [rdi],esi
  43039e:	add    BYTE PTR [rax],al
  4303a0:	js     0x43032a
  4303a2:	mov    BYTE PTR [rax+0x77],bh
  4303a5:	push   0xffffffff87ff77ff
  4303aa:	add    BYTE PTR [rdi],al
  4303ac:	xchg   DWORD PTR [rax+0x0],edx
  4303af:	add    BYTE PTR [rdi-0x70708],cl
  4303b5:	clc    
  4303b6:	xchg   DWORD PTR [rax-0x79],edi
  4303b9:	jo     0x4303bb
  4303bb:	(bad)  
  4303bc:	mul    DWORD PTR [rax+0x0]
  4303bf:	add    BYTE PTR [rdi-0x70000001],cl
  4303c5:	dec    DWORD PTR [rdi+0x7088]
  4303cb:	(bad)  
  4303cc:	not    DWORD PTR [rax+0x0]
  4303cf:	add    BYTE PTR [rdi-0x8],bh
  4303d2:	clc    
  4303d3:	(bad)  
  4303d4:	clc    
  4303d5:	clc    
  4303d6:	dec    DWORD PTR [rax+0x7007770]
  4303dc:	mov    BYTE PTR [rax+0x0],ah
  4303df:	je     0x430370
  4303e1:	(bad)  
  4303e2:	dec    DWORD PTR [rdi-0x7700001]
  4303e8:	js     0x430372
  4303ea:	ja     0x430374
  4303ec:	mov    BYTE PTR [rbp+0x61],dh
  4303ef:	movsxd ecx,DWORD PTR [rdi-0x1]
  4303f5:	(bad)  
  4303f6:	(bad)  
  4303f7:	(bad)  
  4303f8:	js     0x4303f2
  4303fa:	mov    BYTE PTR [rax+0x77787788],cl
  430400:	mov    BYTE PTR [rdi+0x67778787],al
  430406:	addr32 addr32 ja 0x430409
  43040a:	mov    BYTE PTR [rdi+0x708788f8],cl
  430410:	mov    al,bh
  430412:	clc    
  430413:	clc    
  430414:	clc    
  430415:	clc    
  430416:	clc    
  430417:	mov    BYTE PTR [rax-0x707771],cl
  43041d:	mov    BYTE PTR [rdi+0x0],dh
  430420:	(bad)  
  430421:	(bad)  
  430422:	(bad)  
  430423:	(bad)  
  430424:	(bad)  
  430425:	(bad)  
  430426:	(bad)  
  430427:	clc    
  430428:	jo     0x4303b2
  43042a:	add    BYTE PTR [rax+0x808777],cl
  430430:	(bad)  
  430431:	(bad)  
  430432:	(bad)  
  430433:	clc    
  430434:	dec    DWORD PTR [rdi+0x80888f]
  43043a:	add    BYTE PTR [rax],al
  43043c:	add    BYTE PTR [rax],al
  43043e:	add    BYTE PTR [rax],al
  430440:	(bad)  
  430441:	(bad)  
  430442:	(bad)  
  430443:	(bad)  
  430444:	(bad)  
  430445:	(bad)  
  430446:	(bad)  
  430447:	clc    
  430448:	jo     0x43044a
  43044a:	add    BYTE PTR [rax],al
  43044c:	add    BYTE PTR [rax],al
  43044e:	add    BYTE PTR [rax],al
  430450:	(bad)  
  430451:	(bad)  
  430452:	(bad)  
  430453:	dec    DWORD PTR [rdi-0x7f070708]
  430459:	add    BYTE PTR [rax],al
  43045b:	add    BYTE PTR [rax],al
  43045d:	add    BYTE PTR [rax],al
  43045f:	add    BYTE PTR [rdi-0x1],cl
  430465:	(bad)  
  430466:	(bad)  
  430467:	clc    
  430468:	add    BYTE PTR [rax],0x0
  43046b:	add    BYTE PTR [rax],al
  43046d:	add    BYTE PTR [rax],al
  43046f:	add    BYTE PTR [rax-0x77788778],cl
  430475:	js     0x4303fe
  430477:	mov    BYTE PTR [rax+0x0],al
  43047d:	add    BYTE PTR [rax],al
  43047f:	add    bh,bh
  430481:	cld    
  430482:	jle    0x4304a3
  430484:	add    BYTE PTR [rax],al
  430486:	cmp    al,0xf
  430488:	add    BYTE PTR [rax],al
  43048a:	cmp    al,0xf
  43048c:	add    BYTE PTR [rax],al
  43048e:	cmp    al,0xf
  430490:	add    BYTE PTR [rax],al
  430492:	cmp    al,0xf
  430494:	add    BYTE PTR [rax],al
  430496:	cmp    al,0xf
  430498:	add    BYTE PTR [rax],al
  43049a:	cmp    al,0xf
  43049c:	add    BYTE PTR [rax],al
  43049e:	cmp    al,0xf
  4304a0:	add    BYTE PTR [rax],al
  4304a2:	cmp    al,0xf
  4304a4:	add    BYTE PTR [rax],al
  4304a6:	cmp    al,0xf
  4304a8:	add    BYTE PTR [rax],al
  4304aa:	cmp    al,0xf
  4304ac:	add    BYTE PTR [rax],al
  4304ae:	sbb    al,0xf
  4304b0:	add    BYTE PTR [rax],al
  4304b2:	or     al,0xf
  4304b4:	add    BYTE PTR [rax],al
  4304b6:	add    al,0xf
  4304b8:	add    BYTE PTR [rax],al
  4304ba:	add    al,0xf
  4304bc:	add    BYTE PTR [rax],al
  4304be:	add    al,0xf
  4304c0:	add    BYTE PTR [rax],al
  4304c2:	add    al,0xf
  4304c4:	add    BYTE PTR [rax],al
  4304c6:	add    al,0xf
  4304c8:	add    BYTE PTR [rax],al
  4304ca:	(bad)  
  4304cb:	(bad)  
  4304cc:	add    BYTE PTR [rax],al
  4304ce:	(bad)  
  4304cf:	(bad)  
  4304d0:	add    BYTE PTR [rax],al
  4304d2:	jle    0x4304f3
  4304d4:	add    BYTE PTR [rax],al
  4304d6:	rex.WRX sbb al,0x0
	...
  4304e1:	add    BYTE PTR [rax],al
  4304e3:	add    DWORD PTR [rax],eax
  4304e5:	add    BYTE PTR [rax],al
  4304e7:	add    eax,DWORD PTR [rax]
  4304e9:	add    BYTE PTR [rdi+rax*1+0x0],cl
  4304ed:	add    BYTE PTR [rdi-0x1],bh
  4304f0:	add    BYTE PTR [rax],al
  4304f2:	jg     0x4304f3
  4304f4:	add    BYTE PTR [rax],al
  4304f6:	jg     0x4304f7
  4304f8:	add    BYTE PTR [rax],al
  4304fa:	jg     0x4304fb
  4304fc:	add    BYTE PTR [rax],al
  4304fe:	jg     0x4304ff
  430500:	sub    BYTE PTR [rax],al
  430502:	add    BYTE PTR [rax],al
  430504:	adc    BYTE PTR [rax],al
  430506:	add    BYTE PTR [rax],al
  430508:	and    BYTE PTR [rax],al
  43050a:	add    BYTE PTR [rax],al
  43050c:	add    DWORD PTR [rax],eax
  43050e:	add    al,0x0
  430510:	add    BYTE PTR [rax],al
  430512:	add    BYTE PTR [rax],al
  430514:	add    BYTE PTR [rax],0x0
	...
  43052b:	add    BYTE PTR [rax],al
  43052d:	add    BYTE PTR [rax+0x800000],al
  430533:	add    BYTE PTR [rax],al
  430535:	add    BYTE PTR [rax+0x8000],0x0
  43053c:	add    BYTE PTR [rax],0x80
  43053f:	add    BYTE PTR [rax-0x7fffff80],al
  430545:	add    BYTE PTR [rax-0x3f3f4000],0x0
  43054c:	add    BYTE PTR [rax],al
  43054e:	inc    DWORD PTR [rax]
  430550:	add    bh,bh
  430552:	add    BYTE PTR [rax],al
  430554:	add    bh,bh
  430556:	inc    DWORD PTR [rax]
  430558:	inc    DWORD PTR [rax]
  43055a:	add    BYTE PTR [rax],al
  43055c:	inc    DWORD PTR [rax]
  43055e:	inc    DWORD PTR [rax]
  430560:	(bad)  
  430561:	inc    DWORD PTR [rax]
  430563:	add    bh,bh
  430565:	(bad)  
  430566:	inc    DWORD PTR [rax]
  430568:	jbe    0x4305c0
  43056a:	jbe    0x4305e2
  43056c:	push   rax
  43056d:	add    DWORD PTR [rax],edx
  43056f:	add    BYTE PTR [rax+0x78],bh
  430572:	jl     0x430500
  430574:	(bad)  
  430575:	xchg   ebp,eax
  430576:	adc    eax,0xf7886f00
  43057b:	xchg   BYTE PTR [rax+0x71],dh
  43057e:	jno    0x430580
  430580:	jg     0x43057a
  430582:	mov    cs,WORD PTR [rax+rsi*2+0x7f009197]
  430589:	mov    ah,bh
  43058b:	mul    DWORD PTR [rax-0x77]
  43058e:	jno    0x430590
  430590:	jg     0x43058a
  430592:	mov    BYTE PTR [rax+rsi*2+0x7f007979],cl
  430599:	mov    al,ch
  43059b:	clc    
  43059c:	(bad)  
  43059d:	mov    DWORD PTR [rcx-0x7078100],eax
  4305a3:	jg     0x43052c
  4305a5:	mov    BYTE PTR [rcx-0x77878800],cl
  4305ab:	push   0x70078c
  4305b0:	jg     0x4305aa
  4305b2:	call   0x404bc63e
  4305b7:	add    BYTE PTR [rdi-0x78000001],cl
  4305bd:	or     BYTE PTR [rax+0x7],dh
  4305c0:	js     0x430549
  4305c2:	xchg   DWORD PTR [rdi-0x78],esi
  4305c5:	push   0xffffffff8f8f7777
  4305ca:	mov    BYTE PTR [rax+0x7088788f],cl
  4305d0:	(bad)  
  4305d1:	(bad)  
  4305d2:	(bad)  
  4305d3:	dec    DWORD PTR [rax-0x78ff78f8]
  4305d9:	mov    BYTE PTR [rax+0x77],bh
  4305dc:	jo     0x4305de
	...
  4305e6:	add    BYTE PTR [rax],al
  4305e8:	add    BYTE PTR [rdi+0x0],ah
  4305eb:	add    BYTE PTR [rax],al
  4305ed:	rex.XB add BYTE PTR [r8],al
  4305f0:	add    BYTE PTR [rbx+0x0],al
  4305f3:	add    BYTE PTR [rax],al
  4305f5:	rex.XB add BYTE PTR [r8],al
  4305f8:	add    BYTE PTR [rbx+0x0],al
  4305fb:	add    BYTE PTR [rax],al
  4305fd:	rex.XB add BYTE PTR [r8],al
  430600:	add    BYTE PTR [rbx+0x0],al
  430603:	add    BYTE PTR [rax],al
  430605:	add    eax,DWORD PTR [rax]
  430607:	add    BYTE PTR [rax],al
  430609:	(bad)  
  43060a:	add    BYTE PTR [rax],al
  43060c:	add    BYTE PTR [rdi+0x0],ah
  43060f:	add    BYTE PTR [rax],al
  430611:	add    BYTE PTR es:[rax],al
  430614:	add    BYTE PTR [rax],al
  430616:	add    BYTE PTR [rax],al
  430618:	add    BYTE PTR [rcx],al
  43061a:	add    BYTE PTR [rax],al
  43061c:	add    BYTE PTR [rbx],ah
  43061e:	add    BYTE PTR [rax],al
  430620:	add    BYTE PTR [rdi+0x0],bh
  430623:	add    bh,bh
  430625:	inc    DWORD PTR [rax]
  430627:	add    BYTE PTR [rax],ch
  430629:	add    BYTE PTR [rax],al
  43062b:	add    BYTE PTR [rax],ah
  43062d:	add    BYTE PTR [rax],al
  43062f:	add    BYTE PTR [rax+0x0],al
  430632:	add    BYTE PTR [rax],al
  430634:	add    DWORD PTR [rax],eax
  430636:	or     BYTE PTR [rax],al
  430638:	add    BYTE PTR [rax],al
  43063a:	add    BYTE PTR [rax],al
  43063c:	add    BYTE PTR [rax+rax*1],al
	...
  430647:	add    BYTE PTR [rax],al
  430649:	add    DWORD PTR [rax],eax
  43064b:	add    BYTE PTR [rax],al
  43064d:	add    DWORD PTR [rax],eax
  43064f:	add    BYTE PTR [rax],al
  430651:	add    BYTE PTR [rax],al
  430653:	add    BYTE PTR [rdi+rdi*1+0x37],cl
  430657:	add    BYTE PTR [rbp+0x41],cl
  43065a:	cmp    DWORD PTR [rax],eax
  43065c:	pop    rax
  43065d:	rex.WB (bad) 
  43065f:	add    BYTE PTR [rbx+0x48],ah
  430662:	xor    eax,DWORD PTR [rax]
  430664:	fs rex.WB xor al,0x0
  430668:	rex.WR cmp BYTE PTR [eax],r8b
  43066c:	push   0x6a00384c
  430671:	push   rax
  430672:	cmp    al,0x0
  430674:	sbb    al,0x10
  430676:	pop    rdx
  430677:	add    BYTE PTR [rsi],bl
  430679:	adc    ebx,DWORD PTR [rax+rax*1+0x22]
  43067d:	(bad)  
  43067e:	(bad)  
  43067f:	add    BYTE PTR [rsi],ah
  430681:	sbb    esp,DWORD PTR [rax+rax*1+0x27]
  430685:	sbb    al,0x65
  430687:	add    BYTE PTR [rcx],ch
  430689:	(bad)  
  43068a:	push   0x6a212b00
  43068f:	add    BYTE PTR [rbx+riz*1],ch
  430692:	imul   eax,DWORD PTR [rax],0x2f
  430695:	and    eax,0x2932006d
  43069a:	jno    0x43069c
  43069c:	cmp    BYTE PTR [rcx],dh
  43069e:	js     0x4306a0
  4306a0:	(bad)  
  4306a1:	cmp    BYTE PTR [rdi+0x0],bh
  4306a4:	push   rsp
  4306a5:	rex.RXB
  4306a6:	add    BYTE PTR [rbx+0x4d],bl
  4306aa:	add    BYTE PTR [rdi+rcx*2+0x48],r11b
  4306af:	add    BYTE PTR [rsi+0x54],ch
  4306b2:	add    BYTE PTR [rcx+0x53],spl
  4306b6:	rex.WXB add BYTE PTR [r10+0x58],sil
  4306ba:	add    BYTE PTR [rdx+rbx*2+0x46],r14b
  4306bf:	add    BYTE PTR [rsi+0x5c],dh
  4306c2:	rex.WB add BYTE PTR [r15+0x5c],spl
  4306c6:	push   rbp
  4306c7:	add    BYTE PTR [rax+0x60],bh
  4306ca:	rex.WR add BYTE PTR [rdi+0x64],r15b
  4306ce:	push   rdx
  4306cf:	add    BYTE PTR [rdi+riz*2+0x58],bh
  4306d3:	add    BYTE PTR [rbp+0x68],bh
  4306d6:	pop    rcx
  4306d7:	add    BYTE PTR [rbp+0x69],bh
  4306da:	pop    rdi
  4306db:	add    BYTE PTR [rbp+0x6a],dh
  4306de:	data16 add BYTE PTR [rbx+0x6a],bh
  4306e2:	(bad)  
  4306e3:	add    BYTE PTR [rbx-0x7fffa695],al
  4306e9:	ins    BYTE PTR es:[rdi],dx
  4306ea:	pop    rbp
  4306eb:	add    BYTE PTR [rbx-0x7cff9e91],al
  4306f1:	jo     0x430755
  4306f3:	add    BYTE PTR [rbp-0x7bff9c8e],al
  4306f9:	jno    0x430760
  4306fb:	add    BYTE PTR [rdi-0x76ff998c],al
  430701:	jb     0x430764
  430703:	add    BYTE PTR [rbx-0x78ff9b8b],cl
  430709:	je     0x430774
  43070b:	add    BYTE PTR [rcx-0x75ff9689],cl
  430711:	jns    0x43077d
  430713:	add    BYTE PTR [rbp-0x6fff9185],cl
  430719:	jns    0x430782
  43071b:	add    BYTE PTR [rbx-0x68ff9484],dl
  430721:	jg     0x430791
  430723:	add    BYTE PTR [rbx-0x71ff8d85],cl
  430729:	jle    0x43079c
  43072b:	add    BYTE PTR [rbx+rdi*2+0x7d900077],cl
  430732:	jno    0x430734
  430734:	cs int3 
  430736:	add    BYTE PTR [rax],al
  430738:	or     al,0xff
  43073a:	add    BYTE PTR [rax],al
  43073c:	pushf  
  43073d:	sub    DWORD PTR [rdi+0x0],0x7b818c
  430744:	xchg   edx,eax
  430745:	(bad)  
  430746:	jne    0x430748
  430748:	xchg   ebp,eax
  430749:	xor    DWORD PTR [rsi+0x0],0xffffff94
  43074d:	test   DWORD PTR [rcx+0x0],edi
  430750:	xchg   edx,eax
  430751:	test   BYTE PTR [rsi+0x0],bh
  430754:	lahf   
  430755:	mov    BYTE PTR [rdx+0x0],bh
  430758:	cwde   
  430759:	mov    DWORD PTR [rbp+0x0],edi
  43075c:	pushf  
  43075d:	mov    edi,DWORD PTR [rsi+0x0]
  430760:	movabs eax,ds:0xa0007b8ba4007587
  430769:	mov    edi,DWORD PTR [rax+rax*1-0x5c]
  43076d:	mov    edi,DWORD PTR [rax+rax*1-0x59]
  430771:	lea    edi,[rax+rax*1+0x16]
  430775:	sbb    ebp,DWORD PTR [rdx-0x55e3e900]
  43077b:	add    BYTE PTR [rax],bl
  43077d:	sbb    eax,0x1f1900ab
  430782:	lods   al,BYTE PTR ds:[rsi]
  430783:	add    BYTE PTR [rdx],bl
  430785:	and    BYTE PTR [rbp-0x4fdae000],ch
  43078b:	add    BYTE PTR [rsi],ah
  43078d:	sub    esi,DWORD PTR [rax+rax*1+0xb8322c]
  430794:	xor    al,0x39
  430796:	mov    ebp,0x86404600
  43079b:	add    BYTE PTR [rbp+0x48],cl
  43079e:	mov    es,WORD PTR [rax]
  4307a0:	push   rbp
  4307a1:	push   rcx
  4307a2:	xchg   esi,eax
  4307a3:	add    BYTE PTR [rdx+rbx*2-0x62],bl
  4307a7:	add    BYTE PTR [rbp+0x7c],bh
  4307aa:	mov    esp,0xc6191400
  4307af:	add    BYTE PTR [rdi],dl
  4307b1:	sbb    eax,0x201a00c7
  4307b6:	enter  0x1e00,0x24
  4307ba:	retf   0x2100
  4307bd:	(bad)  
  4307be:	retf   0x2600
  4307c1:	sub    al,0xcb
  4307c3:	add    BYTE PTR [rdx],ch
  4307c5:	xor    ch,cl
  4307c7:	add    BYTE PTR [rdx+rsi*1],ch
  4307ca:	int    0x0
  4307cc:	cmp    bh,BYTE PTR [rdi]
  4307ce:	rol    DWORD PTR [rax],0x30
  4307d1:	ss iret 
  4307d3:	add    BYTE PTR [rbx],dh
  4307d5:	cmp    bh,cl
  4307d7:	add    BYTE PTR [rcx+rdi*1],dh
  4307da:	iret   
  4307db:	add    BYTE PTR [rdx],bh
  4307dd:	rex rol DWORD PTR [rax],1
  4307e0:	(bad)  
  4307e1:	rex.RB rol DWORD PTR [r8],cl
  4307e4:	rex.B
  4307e5:	(bad)
  4307e9:	rex.WRX retf 0x5000
  4307ed:	push   rbp
  4307ee:	(bad)  
  4307ef:	add    BYTE PTR [rcx+0x47],al
  4307f2:	rol    DWORD PTR [rax],cl
  4307f4:	rex.RX
  4307f5:	rex.WXB (bad) 
  4307f7:	add    BYTE PTR [rax+0x4e],cl
  4307fa:	(bad)  
  4307fb:	add    BYTE PTR [rbx+0x50],cl
  4307fe:	(bad)  
  4307ff:	add    BYTE PTR [rcx+rdx*2-0x2a],cl
  430803:	add    BYTE PTR [rax+0x55],dl
  430806:	xlat   BYTE PTR ds:[rbx]
  430807:	add    BYTE PTR [rsi+0x5b],dl
  43080a:	rol    DWORD PTR [rax],cl
  43080c:	push   rdx
  43080d:	push   rdi
  43080e:	fadd   DWORD PTR [rax]
  430810:	push   rsi
  430811:	pop    rsp
  430812:	fiadd  DWORD PTR [rax]
  430814:	pop    rdx
  430815:	pop    rsi
  430816:	fld    DWORD PTR [rax]
  430818:	pop    rbx
  430819:	(bad)  
  43081a:	xlat   BYTE PTR ds:[rbx]
  43081b:	add    BYTE PTR [rsi+0x63],bl
  43081e:	fild   DWORD PTR [rax]
  430820:	pop    rdi
  430821:	fadd   QWORD PTR fs:[rax]
  430824:	(bad)  
  430825:	data16 fiadd DWORD PTR [rax]
  430828:	(bad)  
  430829:	data16 fadd QWORD PTR [rax]
  43082c:	movsxd ebp,DWORD PTR [rax-0x23]
  43082f:	add    BYTE PTR [rbp+0x6b],ah
  430832:	fadd   QWORD PTR [rax]
  430834:	data16 ins BYTE PTR es:[rdi],dx
  430836:	fiadd  WORD PTR [rax]
  430838:	imul   ebp,DWORD PTR [rdi-0x22],0xe0746f00
  43083f:	add    BYTE PTR [rbp+0x79],dh
  430842:	loop   0x430844
  430844:	jl     0x4307c6
  430846:	jrcxz  0x430848
  430848:	jp     0x4307ca
  43084a:	in     al,0x0
  43084c:	jge    0x4307d1
  43084e:	in     eax,0x0
  430850:	xchg   edi,eax
  430851:	xchg   BYTE PTR [rdx-0x7a756c00],al
  430857:	add    BYTE PTR [rsi-0x65ff7f75],bl
  43085d:	mov    WORD PTR [rcx-0x7b716400],es
  430863:	add    BYTE PTR [rsi-0x61ff7674],dl
  430869:	nop
  43086a:	test   DWORD PTR [rax],eax
  43086c:	fwait
  43086d:	xchg   ecx,eax
  43086e:	mov    al,BYTE PTR [rax]
  430870:	sahf   
  430871:	xchg   ebp,eax
  430872:	xchg   ecx,eax
  430873:	add    BYTE PTR [rax+rbx*4-0x715cff6a],bl
  43087a:	test   BYTE PTR [rax],al
  43087c:	test   eax,0xa9008693
  430881:	xchg   esp,eax
  430882:	xchg   BYTE PTR [rax],al
  430884:	scas   al,BYTE PTR es:[rdi]
  430885:	xchg   esp,eax
  430886:	test   BYTE PTR [rax],al
  430888:	movabs ds:0xaa008e99a5008994,al
  430891:	cdq    
  430892:	mov    WORD PTR [rax],es
  430894:	mov    cl,0x9a
  430896:	lea    eax,[rax]
  430898:	mov    ch,0x9b
  43089a:	mov    WORD PTR [rax],es
  43089c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  43089d:	(bad)  
  43089e:	xchg   ecx,eax
  43089f:	add    BYTE PTR [rsi+rbx*4-0x625bff6b],ch
  4308a6:	cdq    
  4308a7:	add    BYTE PTR [rcx-0x54ff6b61],dh
  4308ad:	movabs al,ds:0xa0b5009aa2ad0097
  4308b6:	xchg   esp,eax
  4308b7:	add    BYTE PTR [rbx+riz*4-0x5b44ff6b],bh
  4308be:	xchg   esi,eax
  4308bf:	add    BYTE PTR [rsp+riz*4-0x5a4bff6b],bh
  4308c6:	fwait
  4308c7:	add    BYTE PTR [rdi-0x53ff6559],bh
  4308cd:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  4308ce:	movabs eax,ds:0xa8afba00a3acb400
  4308d7:	add    BYTE PTR [rdx-0x41ff534d],bh
  4308dd:	mov    dh,0xb0
  4308df:	add    BYTE PTR [rdi-0x39ff4e48],bh
  4308e5:	movabs ds:0xaec000a0acc20092,eax
  4308ee:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  4308ef:	add    dh,al
  4308f1:	mov    cl,0xa6
  4308f3:	add    dl,cl
  4308f5:	mov    al,0xa3
  4308f7:	add    dh,al
  4308f9:	mov    ch,0xac
  4308fb:	add    cl,cl
  4308fd:	mov    ah,0xa9
  4308ff:	add    cl,cl
  430901:	mov    bh,0xad
  430903:	add    ah,cl
  430905:	mov    bh,0xad
  430907:	add    ah,cl
  430909:	mov    ecx,0xb1d200ae
  43090e:	movabs ds:0xaebdda00a4b4d500,al
  430917:	add    cl,al
  430919:	mov    edx,0xbacd00b4
  43091e:	mov    al,0x0
  430920:	(bad)  
  430921:	mov    edi,0xbdd000b9
  430926:	mov    ah,0x0
  430928:	(bad)  
  430929:	sar    DWORD PTR [rax-0x473e2d00],0x0
  430930:	rol    ah,1
  430932:	mov    ebp,0xbfc8d800
  430937:	add    ah,ah
  430939:	retf   
  43093a:	mov    edi,0xe6868100
  43093f:	add    BYTE PTR [rbp-0x79ff1976],al
  430945:	mov    ebp,eax
  430947:	add    BYTE PTR [rcx+rdx*4-0x6c6fff17],cl
  43094e:	out    0x0,eax
  430950:	nop
  430951:	xchg   ebp,eax
  430952:	(bad)  
  430953:	add    BYTE PTR [rsi-0x65ff1365],dl
  430959:	popf   
  43095a:	jmp    0x43095c
  43095c:	movabs ds:0xb400efaeac00eda6,al
  430965:	mov    bh,0xf1
  430967:	add    BYTE PTR [rdx-0x30ff0c43],bh
  43096d:	mov    bl,0x0
  430970:	(bad)  
  430971:	retf   0xc3
  430974:	fcmove st,st(1)
  430976:	ret    
  430977:	add    cl,bl
  430979:	int    0xc6
  43097b:	add    ch,bl
  43097d:	iret   
  43097e:	mov    DWORD PTR [rax],0xc8cfd9
  430984:	fst    st(2)
  430986:	int3   
  430987:	add    ah,bl
  430989:	(bad)  
  43098a:	rol    DWORD PTR [rax],1
  43098c:	jrcxz  0x430959
  43098e:	rol    BYTE PTR [rax],0xe4
  430991:	int    0xc2
  430993:	add    ah,ah
  430995:	iret   
  430996:	(bad)  
  430997:	add    ch,ah
  430999:	rol    ch,1
  43099b:	add    al,ah
  43099d:	ror    ah,cl
  43099f:	add    cl,ah
  4309a1:	(bad)  
  4309a2:	(bad)  
  4309a3:	add    dh,ah
  4309a5:	(bad)  
  4309a6:	(bad)  
  4309a7:	add    bl,dh
  4309a9:	(bad)  
  4309aa:	leave  
  4309ab:	add    ah,dh
  4309ad:	(bad)  
  4309ae:	retf   0xf400
  4309b1:	fmul   st,st(2)
  4309b3:	add    ah,dh
  4309b5:	fxch   st(5)
  4309b7:	add    al,ah
  4309b9:	xlat   BYTE PTR ds:[rbx]
  4309ba:	rol    DWORD PTR [rax],cl
  4309bc:	jrcxz  0x430997
  4309be:	(bad)  
  4309bf:	add    bl,ah
  4309c1:	(bad)  
  4309c3:	add    bl,ch
  4309c5:	(bad)  
  4309c7:	add    ch,dh
  4309c9:	fcmovnbe st,st(0)
  4309cb:	add    ch,dh
  4309cd:	fst    st(1)
  4309cf:	add    ch,dh
  4309d1:	(bad)  
  4309d3:	add    dh,ah
  4309d5:	loopne 0x4309b4
  4309d7:	add    bl,ch
  4309d9:	loopne 0x4309b5
  4309db:	add    ah,ch
  4309dd:	loope  0x4309ba
  4309df:	add    bl,ch
  4309e1:	loop   0x4309c2
  4309e3:	add    ah,ch
  4309e5:	loop   0x4309c5
  4309e7:	add    dh,dh
  4309e9:	loopne 0x4309c1
  4309eb:	add    dh,dh
  4309ed:	loop   0x4309c7
  4309ef:	add    bh,dh
  4309f1:	in     al,0xda
  4309f3:	add    bh,dh
  4309f5:	in     eax,0xdc
  4309f7:	add    al,bh
  4309f9:	in     eax,0xdd
  4309fb:	add    dl,bl
  4309fd:	(bad)  
  4309ff:	add    bh,ah
  430a01:	jrcxz  0x4309e3
  430a03:	add    cl,ch
  430a05:	in     al,0xe0
  430a07:	add    ch,ch
  430a09:	in     eax,0xe2
  430a0b:	add    cl,ch
  430a0d:	out    0xe5,eax
  430a0f:	add    dh,ch
  430a11:	call   0xffffffffe83b0afb
  430a16:	loope  0x430a18
  430a18:	clc    
  430a19:	(bad)  
  430a1a:	jrcxz  0x430a1c
  430a1c:	icebp  
  430a1d:	in     eax,dx
  430a1e:	(bad)  
  430a1f:	add    dl,bh
  430a21:	out    dx,al
  430a22:	call   0xffffffffef33ff27
  430a27:	add    bl,bh
  430a29:	icebp  
  430a2a:	in     eax,dx
  430a2b:	add    dl,ah
  430a2d:	jrcxz  0x430a29
  430a2f:	add    ah,ch
  430a31:	in     al,dx
  430a32:	sti    
  430a33:	add    ah,bh
  430a35:	cmc    
  430a36:	repnz add ch,bh
  430a39:	clc    
  430a3a:	test   BYTE PTR [rax],0xfb
  430a3d:	stc    
  430a3e:	stc    
  430a3f:	add    ch,bh
  430a41:	cli    
  430a42:	stc    
  430a43:	add    dh,bh
  430a45:	cld    
  430a46:	cli    
  430a47:	add    dh,bh
  430a49:	(bad)  
  430a4a:	inc    BYTE PTR [rax]
  430a4c:	(bad)  
  430a4d:	(bad)  
  430a4e:	inc    DWORD PTR [rax]
	...
  430a5c:	add    BYTE PTR [rax],al
  430a5e:	(bad)  
  430a5f:	sbb    al,0x1a
  430a61:	add    BYTE PTR [rax],al
  430a63:	add    BYTE PTR [rax],al
  430a65:	add    BYTE PTR [rax],al
  430a67:	adc    DWORD PTR [rcx],edx
  430a69:	or     eax,0xd
  430a6e:	add    BYTE PTR [rax],al
  430a70:	sub    ebp,DWORD PTR [rbx]
  430a72:	sub    esp,DWORD PTR [rdi]
  430a74:	(bad)  
  430a75:	(bad)  
  430a76:	(bad)  
  430a77:	es (bad) 
  430a79:	es and BYTE PTR es:[rax],ah
  430a7d:	cmp    ebp,esi
  430a7f:	mov    bh,0x9c
  430a81:	add    eax,0x0
  430a86:	pop    rbx
  430a87:	rex.WXB
  430a88:	rex.WX
  430a89:	rex.WX
  430a8a:	rex.WX or QWORD PTR [rax],rax
  430a8d:	add    BYTE PTR [rax],al
  430a8f:	add    BYTE PTR [rdi],ch
  430a91:	cld    
  430a92:	scas   eax,DWORD PTR es:[rdi]
  430a93:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  430a94:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  430a95:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  430a96:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  430a97:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  430a98:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  430a99:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  430a9a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  430a9b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  430a9c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  430a9d:	rex.R cld 
  430a9f:	mov    bh,0x9c
  430aa1:	(bad)  
  430aa2:	add    BYTE PTR [rax],al
  430aa4:	add    BYTE PTR [rax],al
  430aa6:	pop    rsp
  430aa7:	ins    BYTE PTR es:[rdi],dx
  430aa8:	pop    rax
  430aa9:	pop    rax
  430aaa:	rex.WXB or QWORD PTR [r8],rax
  430aad:	add    BYTE PTR [rax],al
  430aaf:	add    BYTE PTR [rax],dh
  430ab1:	cld    
  430ab2:	(bad)  
  430ab4:	(bad)  
  430ab6:	(bad)  
  430ab8:	(bad)  
  430ab9:	(bad)  
  430aba:	(bad)  
  430abb:	(bad)  
  430abc:	(bad)  
  430abd:	rex.W cld 
  430abf:	mov    bh,0x9b
  430ac1:	or     BYTE PTR [rax],al
  430ac3:	add    BYTE PTR [rax],al
  430ac5:	add    BYTE PTR [rsi+0x6f],bl
  430ac8:	pop    rdx
  430ac9:	pop    rcx
  430aca:	rex.WRX or QWORD PTR [rax],r8
  430acd:	add    BYTE PTR [rax],al
  430acf:	add    BYTE PTR [rax],dh
  430ad1:	cld    
  430ad2:	(bad)  
  430ad4:	(bad)  
  430ad6:	(bad)  
  430ad8:	(bad)  
  430ada:	(bad)  
  430adc:	cmp    DWORD PTR [rbp+0x189bb7fc],ecx
  430ae2:	add    BYTE PTR [rax],al
  430ae4:	add    BYTE PTR [rax],al
  430ae6:	(bad)  
  430ae7:	jno    0x430b45
  430ae9:	pop    rbx
  430aea:	rex.WRXB or QWORD PTR [r8],r8
  430aed:	add    BYTE PTR [rax],al
  430aef:	add    BYTE PTR [rsi],dh
  430af1:	cld    
  430af2:	(bad)  
  430af4:	(bad)  
  430af6:	(bad)  
  430af8:	(bad)  
  430afa:	(bad)  
  430afc:	cmp    dl,BYTE PTR [rdx+0x1c9bb7fc]
  430b02:	add    BYTE PTR [rax],al
  430b04:	add    BYTE PTR [rax],al
  430b06:	movsxd esi,DWORD PTR [rsi+0x60]
  430b09:	pop    rsi
  430b0a:	push   rax
  430b0b:	or     DWORD PTR [rax],eax
  430b0d:	add    BYTE PTR [rax],al
  430b0f:	add    BYTE PTR [rip+0xffffffffdfdfdffc],bh        # 0xffffffffe022eb11
  430b15:	(bad)  
  430b17:	(bad)  
  430b19:	(bad)  
  430b1b:	(bad)  
  430b1d:	fwait
  430b1e:	cld    
  430b1f:	mov    bh,0x9b
  430b21:	sbb    al,0x0
  430b23:	add    BYTE PTR [rax],al
  430b25:	add    BYTE PTR [rax+0x7a],ch
  430b28:	movsxd esp,DWORD PTR [rcx+0x51]
  430b2b:	or     eax,0x0
  430b30:	(bad)  
  430b31:	cld    
  430b32:	(bad)  
  430b34:	(bad)  
  430b36:	(bad)  
  430b38:	(bad)  
  430b3a:	(bad)  
  430b3c:	fldenv [rdi+0x209bb7fc]
  430b42:	add    BYTE PTR [rax],al
  430b44:	add    BYTE PTR [rax],al
  430b46:	push   0x7c
  430b48:	imul   esp,DWORD PTR [rbx+0x5f],0xd
  430b4f:	add    BYTE PTR [rdi],bh
  430b51:	cld    
  430b52:	out    0xe6,eax
  430b54:	out    0xe6,al
  430b56:	(bad)  
  430b58:	out    0xdf,al
  430b5a:	(bad)  
  430b5c:	fild   QWORD PTR [rbx+0x279bb7fc]
  430b62:	add    BYTE PTR [rax],al
  430b64:	add    BYTE PTR [rax],al
  430b66:	ins    DWORD PTR es:[rdi],dx
  430b67:	jge    0x430bd8
  430b69:	ins    BYTE PTR es:[rdi],dx
  430b6a:	adc    DWORD PTR gs:[rax],eax
  430b6d:	add    BYTE PTR [rax],al
  430b6f:	add    BYTE PTR [rdx-0x4],al
  430b72:	out    0xe7,eax
  430b74:	out    0xe7,eax
  430b76:	out    0xe7,eax
  430b78:	(bad)  
  430b7a:	out    0xdf,al
  430b7c:	fbstp  TBYTE PTR [rbp+0x2c9bb7fc]
  430b82:	add    BYTE PTR [rax],al
  430b84:	add    BYTE PTR [rax],al
  430b86:	outs   dx,DWORD PTR ds:[rsi]
  430b87:	mov    ebp,0x12666f73
  430b8c:	add    BYTE PTR [rax],al
  430b8e:	add    BYTE PTR [rax],al
  430b90:	cmp    esp,0xffffffe7
  430b93:	out    0xe7,eax
  430b95:	out    0xe7,eax
  430b97:	out    0xe7,eax
  430b99:	out    0xe6,al
  430b9b:	out    0xcf,al
  430b9d:	mov    ecx,0x329cccfc
  430ba2:	add    BYTE PTR [rax],al
  430ba4:	add    BYTE PTR [rax],al
  430ba6:	jbe    0x430b67
  430ba8:	jp     0x430c21
  430baa:	adc    eax,DWORD PTR [eax]
  430bad:	add    BYTE PTR [rax],al
  430baf:	add    BYTE PTR [rsi-0x18180e04],al
  430bb5:	out    0xe7,eax
  430bb7:	out    0xe7,eax
  430bb9:	out    0xe7,eax
  430bbb:	iret   
  430bbc:	cmp    edi,DWORD PTR [rcx+0x34a8d4fc]
  430bc2:	(bad)  
  430bc3:	add    BYTE PTR [rax],al
  430bc5:	add    BYTE PTR [rdi-0x3e],dh
  430bc8:	jl     0x430c45
  430bca:	outs   dx,BYTE PTR ds:[rsi]
  430bcb:	adc    al,0x0
  430bcd:	add    BYTE PTR [rax],al
  430bcf:	add    BYTE PTR [rsi-0xe0e0e04],al
  430bd5:	icebp  
  430bd6:	icebp  
  430bd7:	out    0xf1,eax
  430bd9:	out    0xcf,eax
  430bdb:	ds stos DWORD PTR es:[rdi],eax
  430bdd:	mov    ecx,0xb9d4eefc
  430be2:	rex.W add al,0x0
  430be5:	add    BYTE PTR [rbx-0x3d],bh
  430be8:	mov    ebx,0x52727d
  430bed:	add    BYTE PTR [rax],al
  430bef:	add    BYTE PTR [rsi-0xe0e0e04],cl
  430bf5:	icebp  
  430bf6:	icebp  
  430bf7:	icebp  
  430bf8:	out    0xf1,eax
  430bfa:	fwait
  430bfb:	scas   al,BYTE PTR es:[rdi]
  430bfc:	lock cld 
  430bfe:	cld    
  430bff:	cld    
  430c00:	cld    
  430c01:	repz mov eax,0x7c009642
  430c07:	(bad)  
  430c08:	mov    esi,0x5376bd
  430c0d:	add    BYTE PTR [rax],al
  430c0f:	add    BYTE PTR [rdi-0xe0e0e04],cl
  430c15:	icebp  
  430c16:	icebp  
  430c17:	icebp  
  430c18:	icebp  
  430c19:	icebp  
  430c1a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  430c1b:	out    dx,al
  430c1c:	cld    
  430c1d:	mov    bh,0x30
  430c1f:	sub    eax,0x8df3fc90
  430c24:	add    eax,0xc1c57d00
  430c29:	shl    BYTE PTR [rdi+0x54],0x0
  430c2d:	add    BYTE PTR [rax],al
  430c2f:	add    BYTE PTR [rbx-0xb0b0904],dl
  430c35:	icebp  
  430c36:	hlt    
  430c37:	icebp  
  430c38:	icebp  
  430c39:	icebp  
  430c3a:	stos   DWORD PTR es:[rdi],eax
  430c3b:	cld    
  430c3c:	ficomp DWORD PTR [rdx+rdx*8]
  430c3f:	mov    cl,0x3f
  430c41:	(bad)  
  430c43:	cdq    
  430c44:	sbb    BYTE PTR [rax],al
  430c46:	mov    ebp,0x77c5c6c6
  430c4b:	push   rbp
  430c4c:	add    BYTE PTR [rax],al
  430c4e:	add    BYTE PTR [rax],al
  430c50:	xchg   ebx,eax
  430c51:	cld    
  430c52:	cld    
  430c53:	cld    
  430c54:	cld    
  430c55:	cld    
  430c56:	cld    
  430c57:	cld    
  430c58:	cld    
  430c59:	cld    
  430c5a:	mov    bl,0xfc
  430c5c:	int3   
  430c5d:	sbb    al,0xfc
  430c5f:	cli    
  430c60:	(bad)  
  430c61:	mov    eax,0x1c9dfc
  430c66:	mov    esp,0xc5ebf7f8
  430c6b:	push   rbp
  430c6c:	add    BYTE PTR [rax],al
  430c6e:	add    BYTE PTR [rax],al
  430c70:	xchg   edi,eax
  430c71:	cmc    
  430c72:	out    dx,al
  430c73:	in     eax,0xe5
  430c75:	in     eax,0xe5
  430c77:	in     eax,0xe5
  430c79:	in     eax,0xae
  430c7b:	cld    
  430c7c:	cld    
  430c7d:	cdq    
  430c7e:	sbb    al,0xda
  430c80:	xor    edi,esp
  430c82:	cld    
  430c83:	cdq    
  430c84:	popf   
  430c85:	add    bl,al
  430c87:	(bad)  
  430c88:	xchg   esi,eax
  430c89:	cmp    al,0x1
  430c8b:	push   rsi
  430c8c:	add    BYTE PTR [rax],al
  430c8e:	add    BYTE PTR [rax],al
  430c90:	xchg   edi,eax
  430c91:	mov    dl,0xa4
  430c93:	movabs ds:0xb342428f9098a0a1,eax
  430c9c:	cld    
  430c9d:	cld    
  430c9e:	sbb    al,0x26
  430ca0:	cld    
  430ca1:	cld    
  430ca2:	mov    dl,0x8d
  430ca4:	add    BYTE PTR [rax],al
  430ca6:	add    BYTE PTR [rsi],ch
  430ca8:	(bad)  
  430ca9:	add    DWORD PTR [rcx],0x0
  430caf:	add    BYTE PTR [rdi-0x9090904],dl
  430cb5:	div    dh
  430cb7:	div    ah
  430cb9:	hlt    
  430cba:	not    ch
  430cbc:	stos   BYTE PTR es:[rdi],al
  430cbd:	xchg   edx,eax
  430cbe:	rex.W test al,0xab
  430cc1:	xchg   edx,eax
  430cc2:	rex.W add BYTE PTR [rax],al
  430cc5:	add    BYTE PTR [rax],al
  430cc7:	or     dh,0x87
  430cca:	add    al,BYTE PTR [rax]
  430ccc:	add    BYTE PTR [rax],al
  430cce:	add    BYTE PTR [rax],al
  430cd0:	movabs al,ds:0xf6f6f6f6f6f6f9fc
  430cd9:	hlt    
  430cda:	icebp  
  430cdb:	div    cl
  430cdd:	repnz repnz scas al,BYTE PTR es:[rdi]
  430ce0:	xchg   BYTE PTR [rax],al
  430ce2:	add    BYTE PTR [rax],al
  430ce4:	add    BYTE PTR [rax],al
  430ce6:	add    BYTE PTR [rbx+0x1588dc],al
  430cec:	add    BYTE PTR [rax],al
  430cee:	add    BYTE PTR [rax],al
  430cf0:	movabs al,ds:0xf6f6f6f6faf9fafc
  430cf9:	div    dh
  430cfb:	hlt    
  430cfc:	icebp  
  430cfd:	div    cl
  430cff:	scas   al,BYTE PTR es:[rdi]
  430d00:	mov    es,WORD PTR [rax]
  430d02:	sub    esp,DWORD PTR [rsi]
  430d04:	add    BYTE PTR [rax],al
  430d06:	add    BYTE PTR [rsi+0x1997c7],cl
  430d0c:	add    BYTE PTR [rax],al
  430d0e:	add    al,BYTE PTR [rbx]
  430d10:	movabs al,ds:0xf6f6f9fafaf9fafc
  430d19:	div    dh
  430d1b:	div    ah
  430d1d:	hlt    
  430d1e:	icebp  
  430d1f:	stos   DWORD PTR es:[rdi],eax
  430d20:	mov    ss,WORD PTR [rsi+0x388ab4cc]
  430d26:	xchg   esi,eax
  430d27:	xchg   esi,eax
  430d28:	int3   
  430d29:	movabs eax,ds:0xfca1171616161624
  430d32:	cld    
  430d33:	cld    
  430d34:	cld    
  430d35:	cld    
  430d36:	cld    
  430d37:	cld    
  430d38:	cld    
  430d39:	cld    
  430d3a:	cld    
  430d3b:	cld    
  430d3c:	cld    
  430d3d:	cld    
  430d3e:	cld    
  430d3f:	cld    
  430d40:	(bad)  
  430d41:	cwde   
  430d42:	cld    
  430d43:	loope  0x430cfd
  430d45:	int3   
  430d46:	stos   BYTE PTR es:[rdi],al
  430d47:	fcmove st,st(4)
  430d49:	mov    ch,0x8a
  430d4b:	cmp    BYTE PTR [rbx],ch
  430d4d:	movabs ds:0xa0a2a4a4b4a2881d,eax
  430d56:	xchg   edi,eax
  430d57:	xchg   edi,eax
  430d58:	pop    QWORD PTR [rsi+0x2e303642]
  430d5e:	sub    esp,DWORD PTR [rsi]
  430d60:	(bad)  
  430d61:	cwde   
  430d62:	cld    
  430d63:	repz fadd st(7),st
  430d66:	(bad)  
  430d67:	cld    
  430d68:	cmc    
  430d69:	int3   
  430d6a:	scas   al,BYTE PTR es:[rdi]
  430d6b:	fdiv   QWORD PTR [rdi]
  430d6e:	and    eax,DWORD PTR [rax]
  430d70:	movabs ds:0xdcdce1e1efe1efef,eax
  430d79:	fcmovu st,st(2)
  430d7b:	fcmovu st,st(2)
  430d7d:	int3   
  430d7e:	int3   
  430d7f:	mov    ecx,0xfcfc9698
  430d84:	lahf   
  430d85:	mov    dl,0xcc
  430d87:	cld    
  430d88:	cld    
  430d89:	cmc    
  430d8a:	repz out dx,al
  430d8c:	cmp    DWORD PTR [rdi],0xfca30000
  430d92:	cld    
  430d93:	cld    
  430d94:	cli    
  430d95:	cli    
  430d96:	cli    
  430d97:	cli    
  430d98:	cli    
  430d99:	cli    
  430d9a:	stc    
  430d9b:	div    dh
  430d9d:	div    dh
  430d9f:	scas   eax,DWORD PTR es:[rdi]
  430da0:	cwde   
  430da1:	add    BYTE PTR [rdx+rsi*4-0x6a2c0000],dh
  430da8:	xchg   ebp,eax
  430da9:	xchg   ebx,eax
  430daa:	mov    BYTE PTR [rbp+0x81],al
  430db0:	movabs ds:0xfafafcfcfcfcfcfc,eax
  430db9:	idiv   cl
  430dbb:	stc    
  430dbc:	div    dh
  430dbe:	hlt    
  430dbf:	scas   eax,DWORD PTR es:[rdi]
  430dc0:	xchg   edi,eax
	...
  430dcd:	add    BYTE PTR [rax],al
  430dcf:	add    BYTE PTR [rsp+rdi*8-0x3030304],ah
  430dd6:	cld    
  430dd7:	cli    
  430dd8:	cli    
  430dd9:	cli    
  430dda:	stc    
  430ddb:	div    dh
  430ddd:	div    ah
  430ddf:	mov    al,0xa0
	...
  430ded:	add    BYTE PTR [rax],al
  430def:	add    BYTE PTR [rdx-0x3030304],dh
  430df5:	cld    
  430df6:	cld    
  430df7:	cld    
  430df8:	cli    
  430df9:	stc    
  430dfa:	stc    
  430dfb:	div    dh
  430dfd:	div    ah
  430dff:	mov    edx,0xa0
	...
  430e10:	mov    dl,0xfc
  430e12:	cld    
  430e13:	cld    
  430e14:	cld    
  430e15:	cld    
  430e16:	cld    
  430e17:	cld    
  430e18:	cld    
  430e19:	cld    
  430e1a:	cld    
  430e1b:	cld    
  430e1c:	cld    
  430e1d:	cld    
  430e1e:	cld    
  430e1f:	cli    
  430e20:	movabs al,ds:0x0
  430e29:	add    BYTE PTR [rax],al
  430e2b:	add    BYTE PTR [rax],al
  430e2d:	add    BYTE PTR [rax],al
  430e2f:	add    BYTE PTR [rsp+rsi*4-0x4d5b4b4e],dh
  430e36:	mov    dl,0xa4
  430e38:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  430e39:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  430e3a:	movabs ds:0xa0a0a3a2a3a3,eax
	...
  430e4f:	add    bh,bh
  430e51:	cld    
  430e52:	jle    0x430e73
  430e54:	add    BYTE PTR [rax],al
  430e56:	cmp    al,0xf
  430e58:	add    BYTE PTR [rax],al
  430e5a:	cmp    al,0xf
  430e5c:	add    BYTE PTR [rax],al
  430e5e:	cmp    al,0xf
  430e60:	add    BYTE PTR [rax],al
  430e62:	cmp    al,0xf
  430e64:	add    BYTE PTR [rax],al
  430e66:	cmp    al,0xf
  430e68:	add    BYTE PTR [rax],al
  430e6a:	cmp    al,0xf
  430e6c:	add    BYTE PTR [rax],al
  430e6e:	cmp    al,0xf
  430e70:	add    BYTE PTR [rax],al
  430e72:	cmp    al,0xf
  430e74:	add    BYTE PTR [rax],al
  430e76:	cmp    al,0xf
  430e78:	add    BYTE PTR [rax],al
  430e7a:	cmp    al,0xf
  430e7c:	add    BYTE PTR [rax],al
  430e7e:	sbb    al,0xf
  430e80:	add    BYTE PTR [rax],al
  430e82:	or     al,0xf
  430e84:	add    BYTE PTR [rax],al
  430e86:	add    al,0xf
  430e88:	add    BYTE PTR [rax],al
  430e8a:	add    al,0xf
  430e8c:	add    BYTE PTR [rax],al
  430e8e:	add    al,0xf
  430e90:	add    BYTE PTR [rax],al
  430e92:	add    al,0xf
  430e94:	add    BYTE PTR [rax],al
  430e96:	add    al,0xf
  430e98:	add    BYTE PTR [rax],al
  430e9a:	(bad)  
  430e9b:	(bad)  
  430e9c:	add    BYTE PTR [rax],al
  430e9e:	(bad)  
  430e9f:	(bad)  
  430ea0:	add    BYTE PTR [rax],al
  430ea2:	jle    0x430ec3
  430ea4:	add    BYTE PTR [rax],al
  430ea6:	rex.WRX sbb al,0x0
	...
  430eb1:	add    BYTE PTR [rax],al
  430eb3:	add    DWORD PTR [rax],eax
  430eb5:	add    BYTE PTR [rax],al
  430eb7:	add    eax,DWORD PTR [rax]
  430eb9:	add    BYTE PTR [rdi+rax*1+0x0],cl
  430ebd:	add    BYTE PTR [rdi-0x1],bh
  430ec0:	add    BYTE PTR [rax],al
  430ec2:	jg     0x430ec3
  430ec4:	add    BYTE PTR [rax],al
  430ec6:	jg     0x430ec7
  430ec8:	add    BYTE PTR [rax],al
  430eca:	jg     0x430ecb
  430ecc:	add    BYTE PTR [rax],al
  430ece:	jg     0x430ecf
  430ed0:	sub    BYTE PTR [rax],al
  430ed2:	add    BYTE PTR [rax],al
  430ed4:	adc    BYTE PTR [rax],al
  430ed6:	add    BYTE PTR [rax],al
  430ed8:	and    BYTE PTR [rax],al
  430eda:	add    BYTE PTR [rax],al
  430edc:	add    DWORD PTR [rax],eax
  430ede:	or     BYTE PTR [rax],al
  430ee0:	add    BYTE PTR [rax],al
  430ee2:	add    BYTE PTR [rax],al
  430ee4:	add    BYTE PTR [rcx],al
	...
  430eee:	add    BYTE PTR [rax],al
  430ef0:	add    BYTE PTR [rcx],al
  430ef2:	add    BYTE PTR [rax],al
  430ef4:	add    BYTE PTR [rcx],al
  430ef6:	add    BYTE PTR [rax],al
  430ef8:	add    BYTE PTR [rax],al
  430efa:	add    BYTE PTR [rax],al
  430efc:	pop    rcx
  430efd:	rex.WXB cmp al,0x0
  430f00:	movsxd ecx,DWORD PTR [rax+0x33]
  430f03:	add    BYTE PTR [rbp+0x4b],ah
  430f06:	(bad)  
  430f07:	add    BYTE PTR [rax+0x4e],ch
  430f0a:	cmp    al,BYTE PTR [rax]
  430f0c:	imul   edx,DWORD PTR [rcx+0x3d],0x0
  430f10:	outs   dx,BYTE PTR ds:[rsi]
  430f11:	push   rbx
  430f12:	(bad)  
  430f13:	add    BYTE PTR [rbx+0x53],ah
  430f16:	add    BYTE PTR [r12+r10*2+0x44],spl
  430f1b:	add    BYTE PTR [rsi+0x55],ch
  430f1e:	add    BYTE PTR [rdi+0x5d],bpl
  430f22:	rex.WR add BYTE PTR [rdx+0x58],r14b
  430f26:	add    BYTE PTR [rdi+0x5c],r15b
  430f2a:	rex.RX add BYTE PTR [rbp+0x5c],r14b
  430f2e:	rex.W add BYTE PTR [rdx+0x61],dil
  430f32:	rex.WRX add BYTE PTR [rbx+0x6f],r15b
  430f36:	add    BYTE PTR gs:[rbx+0x77],bh
  430f3a:	jae    0x430f3c
  430f3c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  430f3d:	pop    rax
  430f3e:	xor    al,BYTE PTR [rax]
  430f40:	stos   BYTE PTR es:[rdi],al
  430f41:	pop    rbp
  430f42:	cmp    BYTE PTR [rax],al
  430f44:	scas   eax,DWORD PTR es:[rdi]
  430f45:	(bad)  
  430f46:	cmp    al,0x0
  430f48:	mov    cl,0x60
  430f4a:	cmp    DWORD PTR [rax],eax
  430f4c:	sub    BYTE PTR [rax+0x55],0x0
  430f50:	xchg   BYTE PTR [rbp+0x5b],ch
  430f53:	add    BYTE PTR [rbp-0x49ffb797],ch
  430f59:	push   0x6fb10043
  430f5e:	rex.WRX add BYTE PTR [rax-0x41ffb291],r15b
  430f65:	jno    0x430fb2
  430f67:	add    BYTE PTR [rbx-0x48ffb390],bh
  430f6d:	je     0x430fc2
  430f6f:	add    BYTE PTR [rdi-0x41ffa989],bh
  430f75:	jns    0x430fcf
  430f77:	add    BYTE PTR [rsp+rsi*2+0x7a920062],cl
  430f7e:	imul   eax,DWORD PTR [rax],0x717a84
  430f84:	cmp    BYTE PTR [rax+rdi*2+0x0],0xc4
  430f89:	jbe    0x430fdc
  430f8b:	add    dl,cl
  430f8d:	jge    0x430fe7
  430f8f:	add    BYTE PTR [rax-0x61ff8f7f],bl
  430f95:	xchg   DWORD PTR [rdi+0x0],esi
  430f98:	lahf   
  430f99:	mov    BYTE PTR [rax+0x0],bh
  430f9c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  430f9d:	mov    ?,WORD PTR [rsi+0x0]
  430fa0:	iret   
  430fa1:	sbb    DWORD PTR [rdi+0x0],0xffffffd5
  430fa5:	mov    ah,BYTE PTR [rsi+0x0]
  430fa8:	ror    DWORD PTR [rbx-0x6c23ff95],1
  430fae:	jno    0x430fb0
  430fb0:	loopne 0x430f4b
  430fb2:	js     0x430fb4
  430fb4:	loope  0x430f55
  430fb6:	jg     0x430fb8
  430fb8:	out    0x9f,eax
  430fba:	jge    0x430fbc
  430fbc:	out    0xa0,al
  430fbe:	jle    0x430fc0
  430fc0:	jmp    0x29438f66
  430fc5:	adc    al,BYTE PTR [rax-0x71ecd200]
  430fcb:	add    BYTE PTR [rsi],ch
  430fcd:	adc    al,0x8f
  430fcf:	add    BYTE PTR [rbx],dh
  430fd1:	and    BYTE PTR [rsi-0x52d1c800],bl
  430fd7:	add    BYTE PTR [rsi],bh
  430fd9:	cmp    eax,0x322c00bf
  430fde:	(bad)  
  430fdf:	add    BYTE PTR [rdi],bh
  430fe1:	rex.RB rol DWORD PTR [r8],cl
  430fe4:	rex.XB
  430fe5:	rex.WR (bad) 
  430fe7:	add    BYTE PTR [rax+0x59],cl
  430fea:	fld    QWORD PTR [rax]
  430fec:	push   rdx
  430fed:	pop    rax
  430fee:	fadd   DWORD PTR [rax]
  430ff0:	ins    BYTE PTR es:[edi],dx
  430ff2:	fild   WORD PTR [rax]
  430ff4:	jnp    0x430f76
  430ff6:	in     al,0x0
  430ff8:	mov    al,BYTE PTR [rsi-0x7467ff7e]
  430ffe:	add    BYTE PTR [rax],0xa1
  431001:	nop
  431002:	add    DWORD PTR [rax],0xffffffa6
  431005:	xchg   ecx,eax
  431006:	add    DWORD PTR [rax],0x8695aa
  43100c:	movabs eax,ds:0xaf008a99ae008f99
  431015:	(bad)  
  431016:	mov    WORD PTR [rax],es
  431018:	mov    al,0x9b
  43101a:	mov    WORD PTR [rax],es
  43101c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  43101d:	fwait
  43101e:	xchg   ebp,eax
  43101f:	add    BYTE PTR [rdi+rbx*4-0x5e49ff70],dh
  431026:	xchg   edx,eax
  431027:	add    BYTE PTR [rax-0x44ff6a5d],bh
  43102d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  43102e:	xchg   edi,eax
  43102f:	add    BYTE PTR [rbx-0x49ff6759],bh
  431035:	stos   BYTE PTR es:[rdi],al
  431036:	(bad)  
  431037:	add    BYTE PTR [rbp-0x41ff6457],bh
  43103d:	stos   DWORD PTR es:[rdi],eax
  43103e:	pushf  
  43103f:	add    BYTE PTR [rdi+riz*4-0x5550ff5f],ch
  431046:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  431047:	add    BYTE PTR [rcx+rbp*4-0x4b43ff5f],dh
  43104e:	lods   al,BYTE PTR ds:[rsi]
  43104f:	add    BYTE PTR [rdi-0x47ff4c46],bh
  431055:	mov    ebx,0xa5c700b5
  43105a:	xchg   esp,eax
  43105b:	add    al,cl
  43105d:	test   al,0x97
  43105f:	add    bh,bh
  431061:	mov    bl,0x8b
  431063:	add    bh,bh
  431065:	mov    eax,0xbeff0094
  43106a:	sahf   
  43106b:	add    dl,al
  43106d:	scas   al,BYTE PTR es:[rdi]
  43106e:	movabs eax,ds:0xa6b3c700a2b0c400
  431077:	add    ah,cl
  431079:	mov    edx,0xb4d500ad
  43107e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  43107f:	add    cl,al
  431081:	mov    ecx,0xbbc500b1
  431086:	mov    dl,0x0
  431088:	(bad)
  43108b:	add    al,cl
  43108d:	mov    edi,0xc6fe00b7
  431092:	test   eax,0xb3c4e500
  431097:	add    cl,ch
  431099:	leave  
  43109a:	mov    edx,0xbfceeb00
  43109f:	add    bh,bh
  4310a1:	int    0xb4
  4310a3:	add    ch,bh
  4310a5:	(bad)  
  4310a6:	mov    esi,0xe9938e00
  4310ab:	add    BYTE PTR [rsi-0x5eff115d],bl
  4310b1:	lods   eax,DWORD PTR ds:[rsi]
  4310b2:	hlt    
  4310b3:	add    dl,dl
  4310b5:	int3   
  4310b6:	(bad)  
  4310b7:	add    dh,dl
  4310b9:	(bad)  
  4310ba:	enter  0xed00,0xd6
  4310be:	retf   
  4310bf:	add    dl,dh
  4310c1:	(bad)  
  4310c2:	mov    BYTE PTR [rax],0xf6
  4310c5:	(bad)  
  4310c6:	(bad)  
  4310c7:	add    ch,bh
  4310c9:	fadd   st,st(3)
  4310cb:	add    bl,dh
  4310cd:	xlat   BYTE PTR ds:[rbx]
  4310ce:	retf   0xf400
  4310d1:	fcmove st,st(5)
  4310d3:	add    ch,dh
  4310d5:	fst    st(2)
  4310d7:	add    ch,dh
  4310d9:	(bad)  
  4310db:	add    dh,dh
  4310dd:	loopne 0x4310b5
  4310df:	add    ch,bh
  4310e1:	loope  0x4310b5
  4310e3:	add    dh,dh
  4310e5:	loope  0x4310bf
  4310e7:	add    bh,dh
  4310e9:	in     eax,0xdc
  4310eb:	add    al,bh
  4310ed:	in     eax,0xdc
  4310ef:	add    bl,al
  4310f1:	retf   0xf8
  4310f4:	(bad)  
  4310f5:	in     al,dx
  4310f6:	out    0x0,al
  4310f8:	stc    
  4310f9:	jmp    0x4310df
  4310fb:	add    bl,bh
  4310fd:	out    dx,al
  4310fe:	out    0x0,al
  431100:	repz out dx,eax
  431102:	in     al,dx
  431103:	add    ah,dh
  431105:	lock jmp 0xffffffffec340c0b
  43110b:	add    ch,bh
  43110d:	bnd jmp 0x431110
  431110:	sti    
  431111:	repnz out dx,al
  431113:	add    dh,bh
  431115:	(bad)  
  431116:	inc    BYTE PTR [rax]
	...
  4312f4:	(bad)  
  4312f5:	(bad)  
  4312f6:	inc    DWORD PTR [rax]
  4312f8:	or     eax,0x405090b
  4312fd:	sbb    DWORD PTR [rcx+rdx*1],edx
  431300:	add    al,BYTE PTR [rax]
  431302:	add    BYTE PTR [rbx],dh
  431304:	xor    eax,DWORD PTR [rax]
  431306:	add    BYTE PTR [rax],al
  431308:	(bad)  
  431309:	fs pop rcx
  43130b:	pop    rax
  43130c:	pop    rax
  43130d:	sbb    al,0x5a
  43130f:	adc    al,BYTE PTR [rdx]
  431311:	add    BYTE PTR [rcx],bh
  431313:	xor    eax,0x3535
  431318:	adc    eax,0x727275ff
  43131d:	and    al,0x5b
  43131f:	adc    eax,DWORD PTR [rdx]
  431321:	add    BYTE PTR [rdx],bh
  431323:	ss ss xor eax,0xff160000
  43132a:	jbe    0x4313a2
  43132c:	jne    0x431353
  43132e:	pop    rsp
  43132f:	sbb    BYTE PTR [rax+rax*1],al
  431332:	cmp    eax,0x353737
  431337:	add    BYTE PTR [rax],ah
  431339:	(bad)  
  43133a:	js     0x4313b4
  43133c:	jbe    0x431368
  43133e:	data16 sbb al,0x6
  431341:	add    BYTE PTR [rsi],bh
  431343:	cmp    BYTE PTR [rax],bh
  431345:	xor    eax,0xff210000
  43134a:	jnp    0x4313c4
  43134c:	push   0xc1d6a2b
  431351:	add    BYTE PTR [rdi],bh
  431353:	cmp    edi,DWORD PTR [rbx]
  431355:	add    BYTE PTR ss:[rax],al
  431358:	es (bad) 
  43135a:	jl     0x4313c4
  43135c:	sub    eax,0x176b7a7a
  431361:	add    BYTE PTR [rsp+rdi*1+0x3c],ch
  431365:	add    BYTE PTR ss:[rax],al
  431368:	es (bad) 
  43136a:	push   QWORD PTR [rdx]
  43136c:	test   DWORD PTR [rdx+0x2c],esi
  43136f:	xor    DWORD PTR [rdx+rbx*1+0x6d],0x366e7e
  431377:	add    BYTE PTR [rbx+0x60],al
  43137a:	rex.WXB (bad) 
  43137c:	sub    DWORD PTR [rsi],0x1d672b26
  431382:	add    BYTE PTR [rdi],cl
  431384:	(bad)  
  431385:	add    BYTE PTR [rax],al
  431387:	add    BYTE PTR [rdi+rdi*8-0x7b],al
  43138b:	jno    0x4313bf
  43138d:	xor    BYTE PTR [rcx+0x1f2e],al
  431393:	add    DWORD PTR fs:[rax],eax
  431396:	add    BYTE PTR [rax],al
  431398:	rex.W (bad) 
  43139a:	(bad)  
  43139b:	(bad)  
  43139c:	(bad)  
  43139d:	(bad)  
  43139e:	inc    DWORD PTR [rdx+0x54004143]
  4313a4:	(bad)  
  4313a5:	add    BYTE PTR [rax],al
  4313a7:	or     cl,BYTE PTR [rbx+0x60]
  4313aa:	pop    rsi
  4313ab:	push   rax
  4313ac:	rex.WXB
  4313ad:	rex.RX
  4313ae:	rex.XB sub BYTE PTR [r13+0x54],spl
  4313b2:	(bad)  
  4313b3:	push   rdi
  4313b4:	adc    BYTE PTR [r10],r9b
  4313b7:	rex.WB
  4313b8:	rex.WRB inc QWORD PTR [r13+0x75787c81]
  4313bf:	(bad)  
  4313c0:	and    DWORD PTR fs:[rdx],0x7f
  4313c4:	outs   dx,DWORD PTR ds:[rsi]
  4313c5:	push   rbx
  4313c6:	and    eax,DWORD PTR [rax]
  4313c8:	pop    rsi
  4313c9:	(bad)  
  4313ca:	(bad)  
  4313cb:	(bad)  
  4313cc:	(bad)  
  4313cd:	(bad)  
  4313ce:	inc    DWORD PTR [rdx+0x6400556f]
  4313d4:	push   rdx
  4313d5:	add    BYTE PTR [rax],al
  4313d8:	pop    rsi
  4313d9:	pop    rsi
  4313da:	pop    rsi
  4313db:	push   rax
  4313dc:	rex.WRX
  4313dd:	rex.WRB
  4313de:	rex.W
  4313df:	rex.W
  4313e0:	add    BYTE PTR [rax],r8b
	...
  4313f7:	add    BYTE PTR [rax],al
  4313f9:	add    BYTE PTR [eax],al
  4313fc:	add    BYTE PTR [rbx+0x0],al
  4313ff:	add    BYTE PTR [rax],al
  431401:	rex.XB add BYTE PTR [r8],al
  431404:	add    BYTE PTR [rbx+0x0],al
  431407:	add    BYTE PTR [rax],al
  431409:	rex.XB add BYTE PTR [r8],al
  43140c:	add    BYTE PTR [rbx+0x0],al
  43140f:	add    BYTE PTR [rax],al
  431411:	rex.XB add BYTE PTR [r8],al
  431414:	add    BYTE PTR [rbx],al
  431416:	add    BYTE PTR [rax],al
  431418:	add    BYTE PTR [rdi],ah
  43141a:	add    BYTE PTR [rax],al
  43141c:	add    BYTE PTR [rdi+0x0],ah
  43141f:	add    BYTE PTR [rax],al
  431421:	add    BYTE PTR es:[rax],al
  431424:	add    BYTE PTR [rax],al
  431426:	add    BYTE PTR [rax],al
  431428:	add    BYTE PTR [rcx],al
  43142a:	add    BYTE PTR [rax],al
  43142c:	add    BYTE PTR [rbx],ah
  43142e:	add    BYTE PTR [rax],al
  431430:	add    BYTE PTR [rdi+0x0],bh
  431433:	add    bh,bh
  431435:	inc    DWORD PTR [rax]
  431437:	add    BYTE PTR [rax],ch
  431439:	add    BYTE PTR [rax],al
  43143b:	add    BYTE PTR [rax],ah
  43143d:	add    BYTE PTR [rax],al
  43143f:	add    BYTE PTR [rax+0x0],al
  431442:	add    BYTE PTR [rax],al
  431444:	add    DWORD PTR [rax],eax
  431446:	and    BYTE PTR [rax],al
  431448:	add    BYTE PTR [rax],al
  43144a:	add    BYTE PTR [rax],al
  43144c:	adc    BYTE PTR [rax],0x0
	...
  431493:	add    BYTE PTR [rcx+0x79387888],ah
  431499:	(bad)  
  43149a:	rex.WRB push QWORD PTR [r14+0x5c]
  43149e:	rex.W push QWORD PTR [rdx+0x58]
  4314a2:	rex.R jmp QWORD PTR [rcx+0x387888]
	...
  4314b5:	add    BYTE PTR [rax],al
  4314b7:	add    BYTE PTR [rcx],bl
  4314b9:	(bad)  
  4314ba:	lods   al,BYTE PTR ds:[rsi]
  4314bb:	rex.RX (bad) 
  4314bd:	and    eax,0x212bff6d
  4314c2:	push   0xffffffffffffffff
  4314c4:	sub    DWORD PTR [rsi],ebx
  4314c6:	push   0x641b26ff
  4314cb:	call   FWORD PTR [rax+rdx*1]
  4314ce:	pop    rdx
  4314cf:	rex.RX add BYTE PTR [rax],r8b
	...
  4314de:	add    BYTE PTR [rax],al
  4314e0:	xchg   DWORD PTR [rsi+riz*2-0x1],esi
  4314e4:	test   DWORD PTR [rbx+0x65],esi
  4314e7:	inc    DWORD PTR [rbp-0x7c009c8e]
  4314ed:	jo     0x431551
  4314ef:	inc    DWORD PTR [rbx-0x7d009e91]
  4314f5:	outs   dx,BYTE PTR ds:[rsi]
  4314f6:	pop    rdi
  4314f7:	inc    DWORD PTR [rcx-0x7f00a193]
  4314fd:	ins    BYTE PTR es:[rdi],dx
  4314fe:	pop    rbp
  4314ff:	inc    DWORD PTR [rax+0x7eff5c6c]
  431505:	push   0x5b
  431507:	(bad)  
  431508:	jle    0x431573
  43150a:	pop    rdx
  43150b:	(bad)  
  43150c:	jge    0x431577
  43150e:	pop    rcx
  43150f:	(bad)  
  431510:	jl     0x431579
  431512:	pop    rax
  431513:	call   FWORD PTR [rcx+rax*4-0x1a120091]
  43151a:	loop   0x43151b
  43151c:	rol    edx,cl
  43151e:	mov    eax,0x95a4bcff
  431523:	jmp    QWORD PTR [rcx+rcx*2+0x34]
  431527:	inc    DWORD PTR [rax]
	...
  431535:	add    BYTE PTR [rax],al
  431537:	add    BYTE PTR [rcx],ah
  431539:	(bad)  
  43153a:	retf   0x19ff
  43153d:	(bad)  
  43153e:	lods   al,BYTE PTR ds:[rsi]
  43153f:	call   FWORD PTR [rax]
  431541:	sbb    eax,0x1c17ffab
  431546:	stos   BYTE PTR es:[rdi],al
  431547:	call   QWORD PTR [rsi]
  431549:	sbb    ebp,DWORD PTR [rdx+0x5a101cff]
  43154f:	inc    DWORD PTR [rax]
	...
  43155d:	add    BYTE PTR [rax],al
  43155f:	add    BYTE PTR [rcx-0x1009689],cl
  431565:	sti    
  431566:	cli    
  431567:	call   rdx
  431569:	mov    cl,0xa2
  43156b:	inc    esi
  43156d:	movabs ds:0xa3c6ff92a3c6ff92,eax
  431576:	xchg   edx,eax
  431577:	inc    esi
  431579:	movabs ds:0xa3c6ff92a3c6ff92,eax
  431582:	xchg   edx,eax
  431583:	inc    esi
  431585:	movabs ds:0xa3c6ff92a3c6ff92,eax
  43158e:	xchg   edx,eax
  43158f:	inc    esi
  431591:	movabs ds:0xffffff7587a1ff92,eax
  43159a:	(bad)  
  43159b:	call   rbx
  43159d:	sar    DWORD PTR [rcx-0x6a5b4301],0xff
  4315a4:	addr32 rex.WR cmp dil,r15b
	...
  4315b8:	(bad)  
  4315b9:	sub    al,0xcb
  4315bb:	dec    DWORD PTR [rcx+rdx*2-0x2a]
  4315bf:	call   QWORD PTR [rdi]
  4315c1:	sbb    eax,0x1914ffc7
  4315c6:	(bad)  
  4315c7:	call   FWORD PTR [rdx]
  4315c9:	and    BYTE PTR [rbp+0x5a101cff],ch
  4315cf:	inc    DWORD PTR [rax]
	...
  4315dd:	add    BYTE PTR [rax],al
  4315df:	add    BYTE PTR [rbx-0x1009487],cl
  4315e5:	sti    
  4315e6:	cli    
  4315e7:	push   rsp
  4315e9:	fxch   st(4)
  4315eb:	push   rsp
  4315ed:	fmul   st,st(4)
  4315ef:	push   rsp
  4315f1:	fmul   st,st(4)
  4315f3:	push   rsp
  4315f5:	fmul   st,st(3)
  4315f7:	push   rsp
  4315f9:	fmul   st,st(3)
  4315fb:	push   rsp
  4315fd:	xlat   BYTE PTR ds:[rbx]
  4315fe:	retf   
  4315ff:	push   rsp
  431601:	fmul   st,st(2)
  431603:	push   rbx
  431605:	xlat   BYTE PTR ds:[rbx]
  431606:	leave  
  431607:	push   rbx
  431609:	xlat   BYTE PTR ds:[rbx]
  43160a:	retf   0xf4ff
  43160d:	(bad)  
  43160e:	leave  
  43160f:	push   rbx
  431611:	(bad)  
  431612:	leave  
  431613:	jmp    QWORD PTR [rdi-0x8373]
  431619:	(bad)  
  43161a:	(bad)  
  43161b:	call   rbx
  43161d:	sar    DWORD PTR [rax-0x695c4301],0xff
  431624:	push   0x50
  431626:	cmp    al,0xff
	...
  431638:	sub    al,0x32
  43163a:	int    0xff
  43163c:	push   rbx
  43163d:	push   rdi
  43163e:	fdivr  st,st(7)
  431640:	(bad)  
  431641:	and    al,0xca
  431643:	call   FWORD PTR [rdx]
  431645:	and    al,cl
  431647:	jmp    QWORD PTR [rax]
  431649:	and    eax,0x101cffb0
  43164e:	pop    rdx
  43164f:	inc    DWORD PTR [rax]
	...
  43165d:	add    BYTE PTR [rax],al
  43165f:	add    BYTE PTR [rbp-0x1009185],cl
  431665:	cld    
  431666:	cli    
  431667:	push   rsp
  431669:	fcmove st,st(6)
  43166b:	push   rbp
  43166d:	fcmove st,st(6)
  43166f:	push   rsp
  431671:	fxch   st(5)
  431673:	push   rsp
  431675:	fcmove st,st(5)
  431677:	push   rsp
  431679:	fxch   st(5)
  43167b:	push   rsp
  43167d:	fxch   st(5)
  43167f:	push   rsp
  431681:	fxch   st(4)
  431683:	push   rsp
  431685:	fxch   st(4)
  431687:	push   rsp
  431689:	fmul   st,st(3)
  43168b:	push   rbx
  43168d:	xlat   BYTE PTR ds:[rbx]
  43168e:	retf   0x2eff
  431691:	int3   
  431692:	add    bh,bh
  431694:	scas   al,BYTE PTR es:[rdi]
  431695:	xchg   esp,eax
  431696:	test   bh,bh
  431698:	(bad)  
  431699:	(bad)  
  43169a:	(bad)  
  43169b:	call   rbx
  43169d:	sar    DWORD PTR [rax-0x6a5c4301],0xff
  4316a4:	outs   dx,DWORD PTR ds:[rsi]
  4316a5:	push   rsp
  4316a6:	inc    DWORD PTR [r8]
	...
  4316b5:	add    BYTE PTR [rax],al
  4316b7:	add    BYTE PTR [rbx],dh
  4316b9:	cmp    bh,cl
  4316bb:	call   FWORD PTR [rdx+0x5e]
  4316be:	fcos   
  4316c0:	es sub eax,0x2721ffcb
  4316c6:	retf   0x26ff
  4316c9:	sub    esi,DWORD PTR [rdi+rdi*8-0xa5efe4]
	...
  4316e0:	mov    ?,WORD PTR [rsi+0x71]
  4316e3:	(bad)  
  4316e4:	(bad)  
  4316e5:	cld    
  4316e6:	sti    
  4316e7:	push   rbp
  4316e9:	fcmovne st,st(7)
  4316eb:	push   rsp
  4316ed:	fcmovne st,st(7)
  4316ef:	push   rbp
  4316f1:	fcmovne st,st(7)
  4316f3:	push   rsp
  4316f5:	fcmove st,st(7)
  4316f7:	push   rbp
  4316f9:	fcmove st,st(6)
  4316fb:	push   rbp
  4316fd:	fcmove st,st(6)
  4316ff:	push   rbp
  431701:	fcmove st,st(5)
  431703:	push   rsp
  431705:	fxch   st(5)
  431707:	push   rsp
  431709:	fxch   st(4)
  43170b:	push   rsp
  43170d:	fmul   st,st(4)
  43170f:	dec    DWORD PTR [rdi+rdi*8]
  431712:	add    bh,bh
  431714:	mov    ch,0x9b
  431716:	mov    edi,?
  431718:	(bad)  
  431719:	(bad)  
  43171a:	(bad)  
  43171b:	call   rbx
  43171d:	ret    0xffb8
  431720:	mov    esp,0x74ff96a3
  431725:	pop    rdx
  431726:	rex.RX inc DWORD PTR [rax]
	...
  431735:	add    BYTE PTR [rax],al
  431737:	add    BYTE PTR [rdx],bh
  431739:	rex sar edi,1
  43173c:	(bad)  
  43173d:	data16 fdiv st(7),st
  431740:	xor    BYTE PTR [rsi],dh
  431742:	iret   
  431743:	jmp    FWORD PTR [rdx]
  431745:	xor    ch,cl
  431747:	jmp    FWORD PTR [rdx+rsi*1]
  43174a:	mov    eax,0x5c131eff
  43174f:	inc    DWORD PTR [rax]
	...
  43175d:	add    BYTE PTR [rax],al
  43175f:	add    BYTE PTR [rcx-0x1008b7f],dl
  431765:	cld    
  431766:	sti    
  431767:	push   rbp
  431769:	(bad)  
  43176b:	push   rbp
  43176d:	(bad)  
  43176f:	push   rbp
  431771:	fst    st(1)
  431773:	push   rbp
  431775:	fst    st(1)
  431777:	push   rbp
  431779:	(bad)  
  43177b:	push   rbp
  43177d:	(bad)  
  43177f:	push   rbp
  431781:	fcmovnbe st,st(0)
  431783:	push   rsp
  431785:	fcmovne st,st(7)
  431787:	push   rsp
  431789:	fcmovne st,st(7)
  43178b:	push   rbp
  43178d:	fcmove st,st(6)
  43178f:	push   rbp
  431791:	fxch   st(5)
  431793:	(bad)  
  431794:	mov    esp,0xffff97a3
  431799:	(bad)  
  43179a:	(bad)  
  43179b:	call   rbx
  43179d:	ret    0xffb8
  4317a0:	mov    esp,0x78ff96a3
  4317a5:	(bad)  
  4317a6:	rex.WR inc QWORD PTR [rax]
	...
  4317b5:	add    BYTE PTR [rax],al
  4317b7:	add    BYTE PTR [rcx+0x47],al
  4317ba:	sar    edi,cl
  4317bc:	push   0x6f
  4317be:	fdivp  st(7),st
  4317c0:	cmp    al,BYTE PTR [rax-0x2f]
  4317c3:	push   QWORD PTR [rcx+rdi*1]
  4317c6:	iret   
  4317c7:	push   QWORD PTR [rcx+rdi*1]
  4317ca:	mov    ebp,0x601722ff
  4317cf:	inc    DWORD PTR [rax]
	...
  4317dd:	add    BYTE PTR [rax],al
  4317df:	add    BYTE PTR [rbx-0x100887d],dl
  4317e5:	cld    
  4317e6:	sti    
  4317e7:	push   rsi
  4317e9:	(bad)  
  4317eb:	push   rbp
  4317ed:	(bad)  
  4317ef:	push   rbp
  4317f1:	(bad)  
  4317f3:	push   rbp
  4317f5:	(bad)  
  4317f7:	push   rbp
  4317f9:	fst    st(2)
  4317fb:	push   rbp
  4317fd:	fst    st(2)
  4317ff:	push   rbp
  431801:	(bad)  
  431803:	push   rbp
  431805:	fst    st(1)
  431807:	push   rbp
  431809:	fcmovnbe st,st(0)
  43180b:	push   rsp
  43180d:	fcmovne st,st(7)
  43180f:	push   rbp
  431811:	fcmovne st,st(6)
  431813:	inc    edx
  431815:	lods   al,BYTE PTR ds:[rsi]
  431816:	movabs al,ds:0xb9c1d3ffffffffff
  43181f:	(bad)  
  431820:	mov    ebx,0x7fff96a4
  431825:	gs push rdx
  431827:	inc    DWORD PTR [rax]
	...
  431835:	add    BYTE PTR [rax],al
  431837:	add    BYTE PTR [rax+0x4e],cl
  43183a:	(bad)  
  43183b:	push   QWORD PTR [rax+rdi*2-0x1f]
  43183f:	inc    DWORD PTR [rsi+0x4b]
  431842:	(bad)  
  431843:	(bad)  
  431844:	(bad)  
  431845:	rex.RB sar r15d,cl
  431848:	cmp    bh,BYTE PTR [rdi]
  43184a:	sar    edi,0x27
  43184d:	sbb    al,0x65
  43184f:	inc    DWORD PTR [rax]
	...
  43185d:	add    BYTE PTR [rax],al
  43185f:	add    BYTE PTR [rbp-0x100857a],dl
  431865:	cld    
  431866:	sti    
  431867:	push   rsi
  431869:	(bad)  
  43186b:	push   rsi
  43186d:	loopne 0x431844
  43186f:	push   rsi
  431871:	(bad)  
  431873:	push   rsi
  431875:	loopne 0x43184c
  431877:	push   rbp
  431879:	(bad)  
  43187b:	push   rbp
  43187d:	(bad)  
  43187f:	push   rsi
  431881:	(bad)  
  431883:	push   rsi
  431885:	(bad)  
  431887:	push   rsi
  431889:	fst    st(2)
  43188b:	push   rsi
  43188d:	fst    st(1)
  43188f:	push   rbp
  431891:	(bad)  
  431893:	dec    ecx
  431895:	mov    ah,0xa9
  431897:	(bad)  
  431898:	(bad)  
  431899:	(bad)  
  43189a:	(bad)  
  43189b:	call   rbx
  43189d:	sar    DWORD PTR [rax-0x6a5c4301],0xff
  4318a4:	sub    DWORD PTR [rbx+0x59],0xffffffff
	...
  4318b8:	push   rax
  4318b9:	push   rbp
  4318ba:	xlat   BYTE PTR ds:[rbx]
  4318bb:	(bad)  
  4318bc:	jl     0x43183e
  4318be:	jrcxz  0x4318bf
  4318c0:	push   rcx
  4318c1:	push   rdi
  4318c2:	fdivr  st,st(7)
  4318c4:	rex.WXB push r8
  4318c6:	(bad)  
  4318c7:	inc    DWORD PTR [rcx+0x47]
  4318ca:	vcvttsd2si esp,QWORD PTR [rbx]
  4318ce:	imul   edi,edi,0x0
	...
  4318dd:	add    BYTE PTR [rax],al
  4318df:	add    BYTE PTR [rax-0x1008277],bl
  4318e5:	cld    
  4318e6:	sti    
  4318e7:	push   rdi
  4318e9:	loope  0x4318c2
  4318eb:	push   rdi
  4318ed:	loope  0x4318c7
  4318ef:	push   rsi
  4318f1:	loope  0x4318cb
  4318f3:	push   rdi
  4318f5:	loope  0x4318ce
  4318f7:	push   rsi
  4318f9:	loopne 0x4318d2
  4318fb:	push   rsi
  4318fd:	loopne 0x4318d5
  4318ff:	push   rsi
  431901:	(bad)  
  431903:	push   rsi
  431905:	(bad)  
  431907:	push   rsi
  431909:	(bad)  
  43190b:	push   rbp
  43190d:	(bad)  
  43190f:	push   rbp
  431911:	fst    st(2)
  431913:	call   rax
  431915:	mov    ebp,0xffffffb4
  43191a:	(bad)  
  43191b:	call   rbx
  43191d:	sar    DWORD PTR [rcx-0x695c4301],0xff
  431924:	mov    dh,BYTE PTR [rcx+0x60]
  431927:	inc    DWORD PTR [rax]
	...
  431935:	add    BYTE PTR [rax],al
  431937:	add    BYTE PTR [rdi+0x5c],dl
  43193a:	(bad)  
  43193c:	xchg   BYTE PTR [rdx+0x635effe6],cl
  431942:	(bad)  
  431944:	push   rsi
  431945:	pop    rsp
  431946:	(bad)  
  431948:	rex.WB
  431949:	rex.WRX retf 0x32ff
  43194d:	sub    DWORD PTR [rcx-0x1],esi
	...
  431960:	(bad)  
  431961:	mov    WORD PTR [rax-0x3030101],es
  431967:	push   rdi
  431969:	jrcxz  0x431944
  43196b:	push   rdi
  43196d:	jrcxz  0x431949
  43196f:	push   rdi
  431971:	jrcxz  0x43194c
  431973:	push   rdi
  431975:	loop   0x431950
  431977:	push   rdi
  431979:	loop   0x431954
  43197b:	push   rsi
  43197d:	loop   0x431957
  43197f:	push   rsi
  431981:	loope  0x43195b
  431983:	push   rsi
  431985:	loope  0x43195d
  431987:	push   rsi
  431989:	loopne 0x431961
  43198b:	push   rsi
  43198d:	loopne 0x431964
  43198f:	jmp    rbx
  431991:	retf   
  431992:	sar    bh,0xd8
  431995:	enter  0xffbf,0xff
  431999:	(bad)  
  43199a:	(bad)  
  43199b:	(bad)  
  43199c:	fcmove st,st(2)
  43199e:	ret    
  43199f:	(bad)  
  4319a0:	mov    esp,0x90ff95a3
  4319a5:	jns    0x431a0e
  4319a7:	jmp    QWORD PTR [rcx+0x387888]
	...
  4319b5:	add    BYTE PTR [rax],al
  4319b7:	add    BYTE PTR [rdi+0x64],bl
  4319ba:	fdiv   st(7),st
  4319bc:	nop
  4319bd:	xchg   ebx,eax
  4319be:	out    0xff,eax
  4319c0:	imul   ebp,DWORD PTR [rdi-0x21],0xdd6863ff
  4319c7:	call   QWORD PTR [rax+0x55]
  4319ca:	(bad)  
  4319cb:	(bad)  
  4319cc:	cmp    BYTE PTR [rcx],dh
  4319ce:	js     0x4319cf
	...
  4319e0:	pushf  
  4319e1:	mov    es,WORD PTR [rdi+rdi*8-0x30202]
  4319e8:	clc    
  4319e9:	in     eax,0xdc
  4319eb:	push   rdi
  4319ed:	in     eax,0xdc
  4319ef:	(bad)  
  4319f0:	clc    
  4319f1:	in     al,0xdc
  4319f3:	push   rdi
  4319f5:	in     al,0xdb
  4319f7:	push   rdi
  4319f9:	in     al,0xda
  4319fb:	push   rdi
  4319fd:	jrcxz  0x4319d9
  4319ff:	push   rdi
  431a01:	loop   0x4319dc
  431a03:	push   rdi
  431a05:	loop   0x4319e0
  431a07:	push   rdi
  431a09:	loop   0x4319e3
  431a0b:	jmp    rsp
  431a0d:	int    0xc2
  431a0f:	call   QWORD PTR [rdi-0x27009181]
  431a15:	enter  0xffbf,0xff
  431a19:	(bad)  
  431a1a:	(bad)  
  431a1b:	jmp    rax
  431a1d:	ror    ah,cl
  431a1f:	inc    esi
  431a21:	mov    cl,0xa6
  431a23:	call   QWORD PTR [rdi+0x7eff6e7f]
  431a29:	movsxd edx,DWORD PTR [rcx-0x4]
  431a2c:	movabs eax,ds:0x387888
  431a35:	add    BYTE PTR [rax],al
  431a37:	add    BYTE PTR [rsi+0x6c],ah
  431a3a:	fdivp  st(7),st
  431a3c:	(bad)  
  431a3d:	popf   
  431a3e:	jmp    0x431a3f
  431a40:	jbe    0x431abc
  431a42:	jrcxz  0x431a43
  431a44:	outs   dx,DWORD PTR ds:[rsi]
  431a45:	je     0x431a27
  431a47:	call   QWORD PTR [rsi+0x5b]
  431a4a:	sar    edi,cl
  431a4c:	(bad)  
  431a4d:	cmp    BYTE PTR [rdi-0x1],bh
	...
  431a60:	lahf   
  431a61:	xchg   ecx,eax
  431a62:	xchg   bh,bh
  431a64:	(bad)  
  431a65:	std    
  431a66:	cld    
  431a67:	(bad)  
  431a68:	clc    
  431a69:	out    0xdf,al
  431a6b:	(bad)  
  431a6c:	clc    
  431a6d:	out    0xde,al
  431a6f:	(bad)  
  431a70:	clc    
  431a71:	out    0xde,al
  431a73:	push   rdi
  431a75:	out    0xdd,al
  431a77:	(bad)  
  431a78:	clc    
  431a79:	in     eax,0xdc
  431a7b:	push   rdi
  431a7d:	in     al,0xdc
  431a7f:	(bad)  
  431a80:	clc    
  431a81:	in     al,0xdc
  431a83:	push   rdi
  431a85:	in     al,0xdb
  431a87:	jmp    rsp
  431a89:	iret   
  431a8a:	(bad)  
  431a8b:	call   QWORD PTR [rdi-0x33009181]
  431a91:	mov    bh,0xad
  431a93:	(bad)  
  431a94:	fcmove st,st(1)
  431a96:	ret    
  431a97:	(bad)  
  431a98:	(bad)  
  431a99:	(bad)  
  431a9a:	(bad)  
  431a9b:	(bad)  
  431a9c:	jmp    0x431a80
  431a9e:	(bad)  
  431aa0:	(bad)  
  431aa2:	sar    bh,1
  431aa4:	(bad)  
  431aa5:	retf   0xffc3
  431aa8:	movabs al,ds:0x9cff334863ff7c8b
  431ab1:	(bad)  
  431ab2:	jo     0x431b01
  431ab4:	add    BYTE PTR [rax],al
  431ab6:	add    BYTE PTR [rax],al
  431ab8:	outs   dx,DWORD PTR ds:[rsi]
  431ab9:	je     0x431a9c
  431abb:	jmp    QWORD PTR [rdx-0x7e00125a]
  431ac1:	xchg   dh,ah
  431ac3:	(bad)  
  431ac4:	jp     0x431a46
  431ac6:	in     al,0xff
  431ac8:	pop    rbx
  431ac9:	(bad)  
  431aca:	xlat   BYTE PTR ds:[rbx]
  431acb:	inc    DWORD PTR [rsi+0x40]
  431ace:	xchg   bh,bh
	...
  431ae0:	movabs eax,ds:0xf8fffcfdfeff8994
  431ae9:	call   0xffffffffe83c1acf
  431aee:	loope  0x431aef
  431af0:	clc    
  431af1:	call   0xffffffffe83c1ad6
  431af6:	(bad)  
  431af8:	stc    
  431af9:	out    0xdf,eax
  431afb:	push   rdi
  431afd:	out    0xde,eax
  431aff:	(bad)  
  431b00:	clc    
  431b01:	out    0xdd,al
  431b03:	push   rdi
  431b05:	in     eax,0xdc
  431b07:	push   QWORD PTR [rdi-0x3700665c]
  431b0d:	mov    bh,0xae
  431b0f:	(bad)  
  431b10:	out    dx,eax
  431b11:	jmp    0x431afb
  431b16:	(bad)  
  431b17:	(bad)  
  431b18:	(bad)  
  431b19:	(bad)  
  431b1a:	(bad)  
  431b1b:	(bad)  
  431b1c:	(bad)  
  431b1d:	(bad)  
  431b1e:	(bad)  
  431b1f:	(bad)  
  431b20:	(bad)  
  431b21:	(bad)  
  431b22:	(bad)  
  431b23:	(bad)  
  431b24:	out    dx,eax
  431b25:	jmp    0xffffffffc7161b0f
  431b2a:	mov    esi,0x7a889fff
  431b2f:	dec    DWORD PTR [rsi+0xb96b7a]
  431b35:	add    BYTE PTR [rax],al
  431b37:	add    BYTE PTR [rsi+0x7b],dh
  431b3a:	jrcxz  0x431b3b
  431b3c:	lods   al,BYTE PTR ds:[rsi]
  431b3d:	scas   al,BYTE PTR es:[rdi]
  431b3e:	out    dx,eax
  431b3f:	dec    DWORD PTR [rcx+rdx*4-0x74790017]
  431b46:	call   0xffffffffdaa97c4a
  431b4b:	dec    DWORD PTR [rbp+0x48]
  431b4e:	mov    ?,edi
	...
  431b60:	movabs ds:0xf9fffcfdfeff8c97,eax
  431b69:	(bad)  
  431b6a:	jrcxz  0x431b6b
  431b6c:	stc    
  431b6d:	(bad)  
  431b6e:	loop   0x431b6f
  431b70:	clc    
  431b71:	jmp    0xffffffffe93c1b59
  431b76:	loope  0x431b77
  431b78:	clc    
  431b79:	jmp    0xffffffffe93d1b5f
  431b7e:	loopne 0x431b7f
  431b80:	clc    
  431b81:	out    0xdf,eax
  431b83:	(bad)  
  431b84:	clc    
  431b85:	out    0xdf,al
  431b87:	inc    eax
  431b89:	scas   al,BYTE PTR es:[rdi]
  431b8a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  431b8b:	(bad)  
  431b8c:	in     eax,dx
  431b8d:	in     eax,0xe2
  431b8f:	(bad)  
  431b90:	(bad)  
  431b91:	(bad)  
  431b92:	(bad)  
  431b93:	call   rbx
  431b95:	sar    DWORD PTR [rax+0x627389ff],0xff
  431b9c:	mov    esi,DWORD PTR [rbp+0x64]
  431b9f:	jmp    FWORD PTR [rdx-0x3007367]
  431ba5:	cld    
  431ba6:	cld    
  431ba7:	(bad)  
  431ba8:	out    dx,eax
  431ba9:	jmp    0xffffffff93ed1b93
  431bae:	xchg   bh,bh
  431bb0:	push   0xff384c
  431bb5:	add    BYTE PTR [rax],al
  431bb7:	add    BYTE PTR [rbp-0x7d],bh
  431bba:	in     eax,0xff
  431bbc:	mov    ah,0xb7
  431bbe:	bnd call QWORD PTR [rsi-0x6f001365]
  431bc5:	xchg   ebp,eax
  431bc6:	(bad)  
  431bc7:	jmp    QWORD PTR [rbp+0x6b]
  431bca:	fdiv   st(7),st
  431bcc:	push   rbp
  431bcd:	push   rcx
  431bce:	xchg   esi,eax
  431bcf:	inc    DWORD PTR [rax]
	...
  431bdd:	add    BYTE PTR [rax],al
  431bdf:	add    BYTE PTR [rbp-0x1007066],ah
  431be5:	std    
  431be6:	std    
  431be7:	(bad)  
  431be8:	stc    
  431be9:	jmp    0x431bd0
  431beb:	(bad)  
  431bec:	stc    
  431bed:	jmp    0x431bd4
  431bef:	(bad)  
  431bf0:	stc    
  431bf1:	jmp    0x431bd7
  431bf3:	(bad)  
  431bf4:	cli    
  431bf5:	(bad)  
  431bf6:	in     al,0xff
  431bf8:	stc    
  431bf9:	(bad)  
  431bfa:	jrcxz  0x431bfb
  431bfc:	clc    
  431bfd:	(bad)  
  431bfe:	loop   0x431bff
  431c00:	clc    
  431c01:	jmp    0xffffffffe93c1be7
  431c06:	loope  0x431c07
  431c08:	(bad)  
  431c09:	mov    bl,0xa9
  431c0b:	(bad)  
  431c0c:	(bad)  
  431c0d:	(bad)  
  431c0e:	(bad)  
  431c0f:	(bad)  
  431c10:	(bad)  
  431c12:	iret   
  431c13:	push   QWORD PTR [rbp+0x5b]
  431c16:	rex.RXB jmp r13
  431c19:	rol    ch,1
  431c1b:	(bad)  
  431c1c:	fidivr DWORD PTR [rbp-0x7c6a0052]
  431c22:	jbe    0x431c23
  431c24:	loopne 0x431bfd
  431c26:	sar    edi,cl
  431c28:	(bad)  
  431c29:	(bad)  
  431c2a:	(bad)  
  431c2b:	push   QWORD PTR [rbp+0x6eff94a0]
  431c31:	push   rsp
  431c32:	rex inc DWORD PTR [rax]
  431c35:	add    BYTE PTR [rax],al
  431c37:	add    BYTE PTR [rbp-0x43001876],al
  431c3d:	mov    edi,0xbbb9fff4
  431c42:	repnz push QWORD PTR [rdi+rsi*4+0x6b65fff1]
  431c4a:	fdiv   st(7),st
  431c4c:	pop    rsp
  431c4d:	pop    rdx
  431c4e:	sahf   
  431c4f:	inc    DWORD PTR [rax]
	...
  431c5d:	add    BYTE PTR [rax],al
  431c5f:	add    BYTE PTR [rdi-0x6c63],ah
  431c65:	(bad)  
  431c66:	(bad)  
  431c67:	(bad)  
  431c68:	(bad)  
  431c69:	sti    
  431c6a:	cli    
  431c6b:	(bad)  
  431c6c:	(bad)  
  431c6d:	sti    
  431c6e:	cli    
  431c6f:	(bad)  
  431c70:	(bad)  
  431c71:	sti    
  431c72:	cli    
  431c73:	(bad)  
  431c74:	(bad)  
  431c75:	sti    
  431c76:	cli    
  431c77:	(bad)  
  431c78:	(bad)  
  431c79:	sti    
  431c7a:	cli    
  431c7b:	(bad)  
  431c7c:	(bad)  
  431c7d:	sti    
  431c7e:	cli    
  431c7f:	(bad)  
  431c80:	(bad)  
  431c81:	sti    
  431c82:	cli    
  431c83:	(bad)  
  431c84:	(bad)  
  431c85:	sti    
  431c86:	stc    
  431c87:	dec    esp
  431c89:	mov    ecx,0xffffffaf
  431c8e:	(bad)  
  431c8f:	(bad)  
  431c90:	fmul   st,st(5)
  431c92:	(bad)  
  431c93:	push   QWORD PTR [rbp+0x5b]
  431c96:	rex.RXB (bad) 
  431c98:	(bad)  
  431c99:	cli    
  431c9a:	clc    
  431c9b:	(bad)  
  431c9c:	std    
  431c9d:	div    ebp
  431c9f:	call   QWORD PTR [rsp+rax*4-0x3e310088]
  431ca6:	mov    eax,0xffffffff
  431cab:	push   QWORD PTR [rbp+0x77ff94a0]
  431cb1:	pop    rbp
  431cb2:	rex.WX inc QWORD PTR [rax]
  431cb5:	add    BYTE PTR [rax],al
  431cb7:	add    BYTE PTR [rbp-0x13001876],al
  431cbd:	in     al,dx
  431cbe:	sti    
  431cbf:	jmp    rdx
  431cc1:	jrcxz  0x431cbd
  431cc3:	(bad)  
  431cc4:	fcmovu st,st(3)
  431cc6:	clc    
  431cc7:	push   QWORD PTR [rdi+rsi*4+0x5a5cfff1]
  431cce:	sahf   
  431ccf:	inc    DWORD PTR [rax]
	...
  431cdd:	add    BYTE PTR [rax],al
  431cdf:	add    BYTE PTR [rbx-0xf006961],ch
  431ce5:	in     eax,dx
  431ce6:	jmp    0x431ce7
  431ce8:	in     eax,dx
  431ce9:	jrcxz  0x431cca
  431ceb:	(bad)  
  431cec:	in     eax,dx
  431ced:	jrcxz  0x431ccd
  431cef:	(bad)  
  431cf0:	in     eax,dx
  431cf1:	jrcxz  0x431cd1
  431cf3:	(bad)  
  431cf4:	in     al,dx
  431cf5:	loop   0x431cd5
  431cf7:	(bad)  
  431cf8:	in     al,dx
  431cf9:	loop   0x431cd8
  431cfb:	(bad)  
  431cfc:	in     al,dx
  431cfd:	loope  0x431cda
  431cff:	(bad)  
  431d00:	jmp    0x431ce2
  431d02:	(bad)  
  431d04:	jmp    0x431ce5
  431d06:	(bad)  
  431d08:	int    0xba
  431d0a:	mov    al,0xff
  431d0c:	(bad)  
  431d0d:	(bad)  
  431d0e:	(bad)  
  431d0f:	(bad)  
  431d10:	(bad)  
  431d11:	(bad)  
  431d12:	(bad)  
  431d13:	push   QWORD PTR [rbp+0x75ff94a0]
  431d19:	pop    rbx
  431d1a:	rex.RXB jmp r14
  431d1d:	fcom   st(0)
  431d1f:	call   QWORD PTR [rbx-0x9484]
  431d25:	(bad)  
  431d26:	(bad)  
  431d27:	(bad)  
  431d28:	(bad)  
  431d29:	(bad)  
  431d2a:	(bad)  
  431d2b:	push   QWORD PTR [rbp-0x5c006b60]
  431d31:	xchg   ecx,eax
  431d32:	or     esi,0x0
  431d35:	add    BYTE PTR [rax],al
  431d37:	add    BYTE PTR [rbx-0x7300115a],ah
  431d3d:	jnp    0x431db6
  431d3f:	jmp    FWORD PTR [rcx-0x73006963]
  431d45:	cmp    DWORD PTR [rbx-0x1],0xff373f4c
  431d4c:	jge    0x431dca
  431d4e:	mov    esp,0xff
	...
  431d5f:	add    BYTE PTR [rcx+riz*4-0x433d0067],ch
  431d66:	mov    dh,0xff
  431d68:	mov    edi,0xbcffb2b8
  431d6d:	mov    ah,0xad
  431d6f:	push   QWORD PTR [rdi-0x4d005851]
  431d75:	test   eax,0xa2acffa0
  431d7a:	cdq    
  431d7b:	jmp    QWORD PTR [rdi-0x5e006d64]
  431d81:	xchg   esp,eax
  431d82:	mov    bh,bh
  431d84:	fwait
  431d85:	lea    eax,[rcx+0x7e8b9cff]
  431d8b:	dec    edx
  431d8d:	mov    bh,0xac
  431d8f:	(bad)  
  431d90:	(bad)  
  431d91:	(bad)  
  431d92:	(bad)  
  431d93:	(bad)  
  431d94:	(bad)  
  431d95:	(bad)  
  431d96:	(bad)  
  431d97:	push   QWORD PTR [rbp+0x5b]
  431d9a:	rex.RXB (bad) 
  431d9c:	jge    0x431e06
  431d9e:	pop    rcx
  431d9f:	(bad)  
  431da0:	(bad)  
  431da1:	(bad)  
  431da2:	(bad)  
  431da3:	(bad)  
  431da4:	(bad)  
  431da5:	(bad)  
  431da6:	(bad)  
  431da7:	inc    esp
  431da9:	mov    bh,0xad
  431dab:	jmp    FWORD PTR [rcx-0x6400796c]
  431db1:	(bad)  
  431db2:	jno    0x431e08
  431db4:	add    BYTE PTR [rax],al
  431db6:	add    BYTE PTR [rax],al
  431db8:	mov    ecx,0x8746f2bb
  431dbd:	je     0x431e28
  431dbf:	(bad)  
  431dc0:	fcom   st(4)
  431dc2:	sar    edi,1
  431dc4:	xchg   esi,eax
  431dc5:	mov    WORD PTR [rdi+0x373f4cff],es
  431dcb:	(bad)  
  431dcc:	mov    ecx,0x59f2bb
	...
  431ddd:	add    BYTE PTR [rax],al
  431ddf:	add    BYTE PTR [rsi-0x645c],ch
  431de5:	(bad)  
  431de6:	std    
  431de7:	(bad)  
  431de8:	sti    
  431de9:	repnz in eax,dx
  431deb:	(bad)  
  431dec:	sti    
  431ded:	icebp  
  431dee:	out    dx,al
  431def:	(bad)  
  431df0:	sti    
  431df1:	icebp  
  431df2:	in     eax,dx
  431df3:	(bad)  
  431df4:	sti    
  431df5:	icebp  
  431df6:	in     al,dx
  431df7:	(bad)  
  431df8:	sti    
  431df9:	lock jmp 0x431dfb
  431dfc:	sti    
  431dfd:	out    dx,eax
  431dfe:	jmp    0x431dff
  431e00:	cli    
  431e01:	out    dx,eax
  431e02:	jmp    0xffffffffe9311906
  431e07:	(bad)  
  431e08:	cli    
  431e09:	in     eax,dx
  431e0a:	out    0xff,eax
  431e0c:	out    0xd6,al
  431e0e:	(bad)  
  431e0f:	inc    esi
  431e11:	mov    dl,0xa7
  431e13:	push   QWORD PTR [rcx-0x5b007266]
  431e19:	mov    edi,DWORD PTR [rbx-0x1]
  431e1c:	retf   0xa3b0
  431e1f:	inc    esi
  431e21:	mov    dl,0xa7
  431e23:	push   QWORD PTR [rcx-0x5c007266]
  431e29:	mov    bh,BYTE PTR [rdx-0x5]
  431e2c:	movabs eax,ds:0x387888
  431e35:	add    BYTE PTR [rax],al
  431e37:	add    BYTE PTR [rcx-0x68e50d45],bh
  431e3d:	xchg   BYTE PTR [rdx-0x2a282301],al
  431e43:	call   FWORD PTR [rbx+0x4cff8a91]
  431e49:	rex cmp edi,edi
  431e4c:	mov    ecx,0x1af2bb
	...
  431e5d:	add    BYTE PTR [rax],al
  431e5f:	add    BYTE PTR [rcx-0x6159],dh
  431e65:	(bad)  
  431e66:	(bad)  
  431e67:	(bad)  
  431e68:	cld    
  431e69:	repz out dx,eax
  431e6b:	(bad)  
  431e6c:	cld    
  431e6d:	repz out dx,eax
  431e6f:	(bad)  
  431e70:	cld    
  431e71:	repz out dx,eax
  431e73:	(bad)  
  431e74:	sti    
  431e75:	repnz out dx,al
  431e77:	(bad)  
  431e78:	cld    
  431e79:	repnz in eax,dx
  431e7b:	(bad)  
  431e7c:	sti    
  431e7d:	icebp  
  431e7e:	in     al,dx
  431e7f:	(bad)  
  431e80:	cli    
  431e81:	lock jmp 0x431e83
  431e84:	sti    
  431e85:	out    dx,eax
  431e86:	(bad)  
  431e87:	(bad)  
  431e88:	cli    
  431e89:	out    dx,al
  431e8a:	call   0xffffffffe831198e
  431e8f:	(bad)  
  431e90:	stc    
  431e91:	jmp    0x431e78
  431e93:	(bad)  
  431e94:	stc    
  431e95:	jmp    0x431e7b
  431e97:	(bad)  
  431e98:	clc    
  431e99:	jmp    0xffffffffba111e80
  431e9e:	scas   al,BYTE PTR es:[rdi]
  431e9f:	call   FWORD PTR [rsi+0xff8490]
	...
  431eb9:	add    BYTE PTR [rax],al
  431ebb:	add    BYTE PTR [rsi-0x1e007f75],bl
  431ec1:	fcmovnu st,st(2)
  431ec3:	jmp    QWORD PTR [rbx+0x54ff9098]
  431ec9:	rex.RXB
  431eca:	rex inc DWORD PTR [rax]
	...
  431ed9:	add    BYTE PTR [rax],al
  431edb:	add    BYTE PTR [rdi+0x42],cl
  431ede:	cmp    DWORD PTR [rsi-0x4e],eax
  431ee1:	stos   BYTE PTR es:[rdi],al
  431ee2:	movabs eax,ds:0xf1f5fcfffefeffff
  431eeb:	(bad)  
  431eec:	cld    
  431eed:	cmc    
  431eee:	icebp  
  431eef:	(bad)  
  431ef0:	cld    
  431ef1:	hlt    
  431ef2:	icebp  
  431ef3:	(bad)  
  431ef4:	cld    
  431ef5:	hlt    
  431ef6:	lock (bad) 
  431ef8:	cld    
  431ef9:	repz out dx,eax
  431efb:	(bad)  
  431efc:	cld    
  431efd:	repnz out dx,al
  431eff:	(bad)  
  431f00:	cld    
  431f01:	icebp  
  431f02:	in     eax,dx
  431f03:	(bad)  
  431f04:	sti    
  431f05:	lock in al,dx
  431f07:	(bad)  
  431f08:	cli    
  431f09:	lock (bad) 
  431f0b:	(bad)  
  431f0c:	cli    
  431f0d:	out    dx,al
  431f0e:	call   0xffffffffe8301a12
  431f13:	(bad)  
  431f14:	stc    
  431f15:	in     al,dx
  431f16:	in     eax,0xff
  431f18:	stc    
  431f19:	(bad)  
  431f1a:	jrcxz  0x431f1b
  431f1c:	int    0xb9
  431f1e:	scas   al,BYTE PTR es:[rdi]
  431f1f:	jmp    QWORD PTR [rax-0x6100776d]
  431f25:	mov    eax,DWORD PTR [rax+0x65718453]
  431f2b:	(bad)  
  431f2c:	jge    0x431f97
  431f2e:	pop    rdi
  431f2f:	call   FWORD PTR [rsi+0x53808b]
  431f35:	add    BYTE PTR [rax],al
  431f37:	add    BYTE PTR [rdi+0x42],cl
  431f3a:	cmp    DWORD PTR [rcx],esi
  431f3c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  431f3d:	xchg   ebx,eax
  431f3e:	mov    edi,edi
  431f40:	iret   
  431f41:	mov    bl,0xff
  431f44:	lods   al,BYTE PTR ds:[rsi]
  431f45:	movabs al,ds:0x424fff4b5361ff98
  431f4e:	cmp    DWORD PTR [rcx],esi
  431f50:	add    BYTE PTR [rax],al
  431f52:	add    BYTE PTR [rax],al
  431f54:	rex.WRXB
  431f55:	rex.X cmp DWORD PTR [rsi+0x4f],eax
  431f59:	rex.X cmp edi,edi
  431f5c:	pop    rax
  431f5d:	rex.WB (bad) 
  431f5f:	push   QWORD PTR [rbp-0x5b54]
  431f65:	(bad)  
  431f66:	(bad)  
  431f67:	(bad)  
  431f68:	std    
  431f69:	div    bl
  431f6b:	(bad)  
  431f6c:	cld    
  431f6d:	div    bl
  431f6f:	(bad)  
  431f70:	cld    
  431f71:	div    bl
  431f73:	(bad)  
  431f74:	cld    
  431f75:	cmc    
  431f76:	repnz (bad) 
  431f78:	cld    
  431f79:	cmc    
  431f7a:	lock (bad) 
  431f7c:	cld    
  431f7d:	repz out dx,eax
  431f7f:	(bad)  
  431f80:	sti    
  431f81:	repz out dx,al
  431f83:	(bad)  
  431f84:	sti    
  431f85:	repnz in eax,dx
  431f87:	(bad)  
  431f88:	cli    
  431f89:	icebp  
  431f8a:	jmp    0x431f8b
  431f8c:	sti    
  431f8d:	out    dx,eax
  431f8e:	(bad)  
  431f8f:	(bad)  
  431f90:	cli    
  431f91:	out    dx,al
  431f92:	call   0xffffffffe7301a96
  431f97:	(bad)  
  431f98:	stc    
  431f99:	jmp    0x431f7f
  431f9b:	dec    edx
  431f9d:	mov    al,0xa3
  431f9f:	jmp    QWORD PTR [rdx-0x6100746a]
  431fa5:	mov    eax,DWORD PTR [rax-0x322e252f]
  431fab:	inc    esi
  431fad:	mov    edi,0x8ea3ffb9
  431fb2:	test   bh,bh
  431fb4:	nop
  431fb5:	jge    0x432028
  431fb7:	jmp    QWORD PTR [rdi-0x4e006f68]
  431fbd:	lahf   
  431fbe:	xchg   esp,eax
  431fbf:	(bad)  
  431fc0:	fmul   st,st(7)
  431fc2:	leave  
  431fc3:	(bad)  
  431fc4:	mov    esp,0x7bffa9af
  431fc9:	push   0x61
  431fcb:	call   FWORD PTR [rbx+0x4d]
  431fce:	rex.R call FWORD PTR [rbx+0x4d]
  431fd2:	rex.R call FWORD PTR [rbx+0x4d]
  431fd6:	rex.R call FWORD PTR [rbx+0x4d]
  431fda:	rex.R call FWORD PTR [rdi+rcx*2+0x48]
  431fdf:	push   QWORD PTR [rdi-0x5852]
  431fe5:	(bad)  
  431fe6:	(bad)  
  431fe7:	(bad)  
  431fe8:	(bad)  
  431fe9:	(bad)  
  431fea:	(bad)  
  431feb:	(bad)  
  431fec:	(bad)  
  431fed:	(bad)  
  431fee:	(bad)  
  431fef:	(bad)  
  431ff0:	(bad)  
  431ff1:	(bad)  
  431ff2:	(bad)  
  431ff3:	(bad)  
  431ff4:	(bad)  
  431ff5:	(bad)  
  431ff6:	(bad)  
  431ff7:	(bad)  
  431ff8:	(bad)  
  431ff9:	(bad)  
  431ffa:	(bad)  
  431ffb:	(bad)  
  431ffc:	(bad)  
  431ffd:	(bad)  
  431ffe:	(bad)  
  431fff:	(bad)  
  432000:	(bad)  
  432001:	(bad)  
  432002:	(bad)  
  432003:	(bad)  
  432004:	(bad)  
  432005:	(bad)  
  432006:	(bad)  
  432007:	(bad)  
  432008:	(bad)  
  432009:	(bad)  
  43200a:	(bad)  
  43200b:	(bad)  
  43200c:	(bad)  
  43200d:	(bad)  
  43200e:	(bad)  
  43200f:	(bad)  
  432010:	(bad)  
  432011:	(bad)  
  432012:	(bad)  
  432013:	(bad)  
  432014:	(bad)  
  432015:	(bad)  
  432016:	(bad)  
  432017:	(bad)  
  432018:	(bad)  
  432019:	(bad)  
  43201a:	(bad)  
  43201b:	(bad)  
  43201c:	(bad)  
  43201d:	std    
  43201e:	cld    
  43201f:	jmp    QWORD PTR [rbp-0x61007168]
  432025:	mov    eax,DWORD PTR [rax-0x2f]
  43202b:	jmp    rbp
  43202d:	(bad)  
  43202f:	call   rax
  432031:	(bad)  
  432032:	mov    ebp,0xced5e1ff
  432037:	inc    edi
  432039:	mov    bh,0xae
  43203b:	jmp    rsi
  43203d:	(bad)  
  43203f:	(bad)  
  432040:	fcmovne st,st(5)
  432042:	(bad)  
  432043:	call   rax
  432045:	mov    esi,0x8ea3ffb5
  43204a:	test   bh,bh
  43204c:	nop
  43204d:	jge    0x4320c0
  43204f:	inc    DWORD PTR [rcx+rsi*2-0x4940009b]
  432056:	mov    cl,0xff
  432058:	addr32 pop rsp
  43205a:	push   rbp
  43205b:	call   FWORD PTR [rbp+0x56]
  43205e:	push   rbx
  43205f:	fwait
  432060:	mov    eax,0xc2ffa9b1
  432065:	mov    esp,0xb9bfffb6
  43206a:	mov    dl,0xff
  43206c:	mov    ebx,0xb7ffadb5
  432071:	scas   eax,DWORD PTR es:[rdi]
  432072:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  432073:	push   QWORD PTR [rdx-0x52005e57]
  432079:	movabs ds:0x95a1ff929ba7ff9a,al
  432082:	mov    bh,bh
  432084:	fwait
  432085:	lea    eax,[rdx+0x798695ff]
  43208b:	call   QWORD PTR [rax-0x75008d82]
  432091:	jns    0x4320fd
  432093:	inc    DWORD PTR [rbp-0x7f009c8e]
  432099:	ins    DWORD PTR es:[rdi],dx
  43209a:	pop    rsi
  43209b:	(bad)  
  43209c:	jge    0x432106
  43209e:	pop    rcx
  43209f:	jmp    QWORD PTR [rdi-0x61006e65]
  4320a5:	mov    eax,DWORD PTR [rax-0x2f]
  4320ab:	(bad)  
  4320ac:	in     eax,dx
  4320ad:	call   0xffffffffdd262098
  4320b2:	fcos   
  4320b4:	rol    ah,1
  4320b6:	mov    ebp,0xced5e1ff
  4320bb:	(bad)  
  4320bc:	std    
  4320bd:	cld    
  4320be:	sti    
  4320bf:	push   rbp
  4320c1:	lock out dx,al
  4320c3:	(bad)  
  4320c4:	(bad)  
  4320c6:	retf   0xcbff
  4320c9:	mov    bh,0xad
  4320cb:	(bad)  
  4320cc:	mov    edi,0xe3ff9aa7
  4320d1:	fcmovnbe st,st(7)
  4320d3:	dec    DWORD PTR [rbx+0x75ff727b]
  4320d9:	push   0x66
  4320db:	jmp    FWORD PTR [rsi+0x66]
  4320de:	(bad)  
  4320df:	and    BYTE PTR [rdx-0x1600544d],bh
  4320e5:	out    0xe5,eax
  4320e7:	(bad)  
  4320e8:	call   0xffffffffe94302d1
  4320ed:	in     al,0xe1
  4320ef:	jmp    rdi
  4320f1:	jrcxz  0x4320d3
  4320f3:	jmp    rdi
  4320f5:	loope  0x4320d6
  4320f7:	jmp    rbp
  4320f9:	loopne 0x4320d7
  4320fb:	jmp    rbp
  4320fd:	(bad)  
  4320ff:	jmp    rsp
  432101:	fstp   st(1)
  432103:	jmp    rdx
  432105:	fcmovnbe st,st(7)
  432107:	jmp    rcx
  432109:	(bad)  
  43210b:	jmp    rax
  43210d:	fcom   st(2)
  43210f:	(bad)  
  432110:	(bad)  
  432112:	iret   
  432113:	(bad)  
  432114:	(bad)  
  432116:	int    0xff
  432118:	(bad)  
  43211a:	retf   0xdbff
  43211d:	iret   
  43211e:	enter  0xa9ff,0x9e
  432122:	xchg   ebp,eax
  432123:	call   FWORD PTR [rsi-0x2e7f75]
  432129:	(bad)  
  43212a:	(bad)  
  43212b:	(bad)  
  43212c:	(bad)  
  43212d:	(bad)  
  43212e:	(bad)  
  43212f:	jmp    FWORD PTR [rsp+riz*4-0x463d005f]
  432136:	mov    ah,0xff
  432138:	(bad)  
  43213a:	(bad)  
  43213b:	(bad)  
  43213c:	sti    
  43213d:	stc    
  43213e:	stc    
  43213f:	(bad)  
  432140:	std    
  432141:	std    
  432142:	cld    
  432143:	push   rbx
  432145:	out    dx,eax
  432146:	in     al,dx
  432147:	push   rcx
  432149:	in     al,dx
  43214a:	jmp    0xffffffffe1280d4e
  43214f:	call   QWORD PTR [rsi-0x6d007c76]
  432155:	test   BYTE PTR [rsi-0x1],bh
  432158:	jle    0x4321cf
  43215a:	jno    0x43217c
  43215c:	add    BYTE PTR [rax],al
  43215e:	add    BYTE PTR [rax],al
  432160:	mov    esp,0xffffadb5
  432165:	(bad)  
  432166:	(bad)  
  432167:	(bad)  
  432168:	(bad)  
  432169:	sti    
  43216a:	cli    
  43216b:	(bad)  
  43216c:	std    
  43216d:	sti    
  43216e:	stc    
  43216f:	(bad)  
  432170:	(bad)  
  432171:	cli    
  432172:	stc    
  432173:	(bad)  
  432174:	std    
  432175:	cli    
  432176:	idiv   edi
  432178:	std    
  432179:	clc    
  43217a:	idiv   edi
  43217c:	std    
  43217d:	clc    
  43217e:	cmc    
  43217f:	(bad)  
  432180:	cld    
  432181:	div    ebx
  432183:	(bad)  
  432184:	cld    
  432185:	cmc    
  432186:	repnz (bad) 
  432188:	sti    
  432189:	repz lock (bad) 
  43218c:	sti    
  43218d:	repz out dx,al
  43218f:	(bad)  
  432190:	sti    
  432191:	icebp  
  432192:	in     al,dx
  432193:	(bad)  
  432194:	sti    
  432195:	out    dx,eax
  432196:	(bad)  
  432197:	(bad)  
  432198:	cli    
  432199:	out    dx,al
  43219a:	call   0xffffffffa4f7f79e
  43219f:	jmp    FWORD PTR [rbx-0x61006860]
  4321a5:	mov    eax,DWORD PTR [rax-0x7f7461ad]
  4321ab:	xchg   esp,eax
  4321ac:	sahf   
  4321ad:	mov    eax,DWORD PTR [rax-0x75726b6c]
  4321b3:	rex.WR xchg rbp,rax
  4321b5:	mov    cs,WORD PTR [rdx-0x2f2b22e4]
  4321bb:	jmp    QWORD PTR [rbp-0x5b006562]
  4321c1:	pushf  
  4321c2:	cwde   
  4321c3:	jmp    QWORD PTR [rcx-0x61006b68]
  4321c9:	xchg   ebp,eax
  4321ca:	xchg   ecx,eax
  4321cb:	call   QWORD PTR [rsi-0x76007674]
  4321d1:	cmp    DWORD PTR [rbp-0x15],0x10797d85
	...
  4321e0:	mov    ebp,0xffffb0b6
  4321e5:	(bad)  
  4321e6:	(bad)  
  4321e7:	(bad)  
  4321e8:	(bad)  
  4321e9:	cld    
  4321ea:	sti    
  4321eb:	(bad)  
  4321ec:	(bad)  
  4321ed:	cld    
  4321ee:	cli    
  4321ef:	(bad)  
  4321f0:	std    
  4321f1:	cld    
  4321f2:	cli    
  4321f3:	(bad)  
  4321f4:	(bad)  
  4321f5:	sti    
  4321f6:	stc    
  4321f7:	(bad)  
  4321f8:	(bad)  
  4321f9:	stc    
  4321fa:	clc    
  4321fb:	(bad)  
  4321fc:	std    
  4321fd:	stc    
  4321fe:	idiv   bh
  432200:	std    
  432201:	div    ah
  432203:	(bad)  
  432204:	cld    
  432205:	cmc    
  432206:	repnz (bad) 
  432208:	cld    
  432209:	hlt    
  43220a:	icebp  
  43220b:	(bad)  
  43220c:	cld    
  43220d:	repz out dx,eax
  43220f:	(bad)  
  432210:	sti    
  432211:	repnz in eax,dx
  432213:	(bad)  
  432214:	sti    
  432215:	lock jmp 0x432217
  432218:	sti    
  432219:	out    dx,eax
  43221a:	call   0xffffffffa4f7f81e
  43221f:	jmp    FWORD PTR [rsi+0xff9ba3]
	...
  432235:	add    BYTE PTR [rax],al
  432237:	add    BYTE PTR [rbp+0x98b8e],dl
	...
  43225d:	add    BYTE PTR [rax],al
  43225f:	add    BYTE PTR [rdi-0x4d48],bh
  432265:	(bad)  
  432266:	(bad)  
  432267:	(bad)  
  432268:	(bad)  
  432269:	std    
  43226a:	cld    
  43226b:	(bad)  
  43226c:	(bad)  
  43226d:	std    
  43226e:	cld    
  43226f:	(bad)  
  432270:	(bad)  
  432271:	cld    
  432272:	cli    
  432273:	(bad)  
  432274:	(bad)  
  432275:	sti    
  432276:	stc    
  432277:	(bad)  
  432278:	(bad)  
  432279:	stc    
  43227a:	clc    
  43227b:	(bad)  
  43227c:	std    
  43227d:	stc    
  43227e:	idiv   bh
  432280:	std    
  432281:	clc    
  432282:	cmc    
  432283:	(bad)  
  432284:	cld    
  432285:	div    bl
  432287:	(bad)  
  432288:	cld    
  432289:	hlt    
  43228a:	icebp  
  43228b:	(bad)  
  43228c:	cld    
  43228d:	repz lock (bad) 
  432290:	cld    
  432291:	repnz in eax,dx
  432293:	(bad)  
  432294:	sti    
  432295:	icebp  
  432296:	jmp    0x432297
  432298:	cli    
  432299:	out    dx,eax
  43229a:	jmp    0xffffffffa4f7f89e
  43229f:	jmp    FWORD PTR [rdi+0xff9da5]
	...
  4322dd:	add    BYTE PTR [rax],al
  4322df:	add    al,al
  4322e1:	mov    ecx,0xffffffb3
  4322e6:	(bad)  
  4322e7:	(bad)  
  4322e8:	(bad)  
  4322e9:	(bad)  
  4322ea:	std    
  4322eb:	(bad)  
  4322ec:	(bad)  
  4322ed:	std    
  4322ee:	std    
  4322ef:	(bad)  
  4322f0:	(bad)  
  4322f1:	std    
  4322f2:	cld    
  4322f3:	(bad)  
  4322f4:	(bad)  
  4322f5:	cld    
  4322f6:	cli    
  4322f7:	(bad)  
  4322f8:	(bad)  
  4322f9:	cli    
  4322fa:	stc    
  4322fb:	(bad)  
  4322fc:	std    
  4322fd:	stc    
  4322fe:	idiv   edi
  432300:	std    
  432301:	div    esi
  432303:	(bad)  
  432304:	std    
  432305:	div    ebx
  432307:	(bad)  
  432308:	cld    
  432309:	hlt    
  43230a:	icebp  
  43230b:	(bad)  
  43230c:	cld    
  43230d:	hlt    
  43230e:	out    dx,eax
  43230f:	(bad)  
  432310:	cld    
  432311:	repnz in eax,dx
  432313:	(bad)  
  432314:	sti    
  432315:	lock jmp 0x432317
  432318:	cli    
  432319:	out    dx,eax
  43231a:	jmp    0xffffffffc00f081e
  43231f:	push   QWORD PTR [rcx+0xffa0a9]
	...
  43235d:	add    BYTE PTR [rax],al
  43235f:	add    cl,al
  432361:	mov    edx,0xffffffb5
  432366:	(bad)  
  432367:	(bad)  
  432368:	(bad)  
  432369:	(bad)  
  43236a:	(bad)  
  43236b:	(bad)  
  43236c:	(bad)  
  43236d:	(bad)  
  43236e:	(bad)  
  43236f:	(bad)  
  432370:	(bad)  
  432371:	(bad)  
  432372:	(bad)  
  432373:	(bad)  
  432374:	(bad)  
  432375:	(bad)  
  432376:	(bad)  
  432377:	(bad)  
  432378:	(bad)  
  432379:	(bad)  
  43237a:	(bad)  
  43237b:	(bad)  
  43237c:	(bad)  
  43237d:	(bad)  
  43237e:	std    
  43237f:	(bad)  
  432380:	(bad)  
  432381:	(bad)  
  432382:	std    
  432383:	(bad)  
  432384:	(bad)  
  432385:	std    
  432386:	std    
  432387:	(bad)  
  432388:	(bad)  
  432389:	std    
  43238a:	cld    
  43238b:	(bad)  
  43238c:	(bad)  
  43238d:	std    
  43238e:	cld    
  43238f:	(bad)  
  432390:	(bad)  
  432391:	cld    
  432392:	cld    
  432393:	(bad)  
  432394:	(bad)  
  432395:	cld    
  432396:	sti    
  432397:	(bad)  
  432398:	(bad)  
  432399:	cld    
  43239a:	sti    
  43239b:	(bad)  
  43239c:	std    
  43239d:	div    ah
  43239f:	push   QWORD PTR [rbx+0xffa3ab]
	...
  4323dd:	add    BYTE PTR [rax],al
  4323df:	add    dl,al
  4323e1:	mov    esp,0xbcc1ffb6
  4323e6:	mov    ch,0xff
  4323e8:	sar    DWORD PTR [rbx-0x453f004b],0xb4
  4323ef:	inc    eax
  4323f1:	mov    ecx,0xb8bfffb3
  4323f6:	mov    dl,0xff
  4323f8:	mov    edi,0xbeffb1b8
  4323fd:	mov    bh,0xb0
  4323ff:	(bad)  
  432400:	mov    esp,0xbcffafb6
  432405:	mov    ch,0xae
  432407:	(bad)  
  432408:	mov    ebx,0xbaffadb4
  43240d:	mov    bl,0xac
  43240f:	(bad)  
  432410:	mov    ecx,0xb9ffaab2
  432415:	mov    al,0xa9
  432417:	(bad)  
  432418:	mov    eax,0xb7ffa8af
  43241d:	scas   eax,DWORD PTR es:[rdi]
  43241e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  43241f:	push   QWORD PTR [rsi+0xffa5ad]
	...
  43245d:	add    BYTE PTR [rax],al
  43245f:	add    bh,bh
  432461:	clc    
  432462:	cmp    al,0xf
  432464:	add    BYTE PTR [rax],al
  432466:	cmp    al,0xf
  432468:	add    BYTE PTR [rax],al
  43246a:	cmp    al,0xf
  43246c:	add    BYTE PTR [rax],al
  43246e:	cmp    al,0xf
  432470:	add    BYTE PTR [rax],al
  432472:	cmp    al,0xf
  432474:	add    BYTE PTR [rax],al
  432476:	cmp    al,0xf
  432478:	add    BYTE PTR [rax],al
  43247a:	cmp    al,0xf
  43247c:	add    BYTE PTR [rax],al
  43247e:	cmp    al,0xf
  432480:	add    BYTE PTR [rax],al
  432482:	cmp    al,0xf
  432484:	add    BYTE PTR [rax],al
  432486:	cmp    al,0xf
  432488:	add    BYTE PTR [rax],al
  43248a:	sbb    al,0xf
  43248c:	add    BYTE PTR [rax],al
  43248e:	or     al,0xf
  432490:	add    BYTE PTR [rax],al
  432492:	add    al,0xf
  432494:	add    BYTE PTR [rax],al
  432496:	add    al,0xf
  432498:	add    BYTE PTR [rax],al
  43249a:	add    al,0xf
  43249c:	add    BYTE PTR [rax],al
  43249e:	add    al,0xf
  4324a0:	add    BYTE PTR [rax],al
  4324a2:	add    al,0xf
  4324a4:	add    BYTE PTR [rax],al
  4324a6:	add    al,0xf
  4324a8:	add    BYTE PTR [rax],al
  4324aa:	add    al,0xf
  4324ac:	add    BYTE PTR [rax],al
  4324ae:	or     al,0xf
  4324b0:	add    BYTE PTR [rax],al
  4324b2:	jle    0x4324d2
  4324b4:	add    BYTE PTR [rax],al
  4324b6:	add    al,0x8
	...
  4324c4:	add    BYTE PTR [rax],al
  4324c6:	add    BYTE PTR [rcx],al
  4324c8:	add    BYTE PTR [rax],al
  4324ca:	add    BYTE PTR [rbx],al
  4324cc:	add    BYTE PTR [rax],al
  4324ce:	jge    0x4324cf
  4324d0:	add    BYTE PTR [rax],al
  4324d2:	jg     0x4324d3
  4324d4:	add    BYTE PTR [rax],al
  4324d6:	jg     0x4324d7
  4324d8:	add    BYTE PTR [rax],al
  4324da:	jg     0x4324db
  4324dc:	add    BYTE PTR [rax],al
  4324de:	jg     0x4324df
  4324e0:	sub    BYTE PTR [rax],al
  4324e2:	add    BYTE PTR [rax],al
  4324e4:	adc    BYTE PTR [rax],al
  4324e6:	add    BYTE PTR [rax],al
  4324e8:	and    BYTE PTR [rax],al
  4324ea:	add    BYTE PTR [rax],al
  4324ec:	add    DWORD PTR [rax],eax
  4324ee:	and    BYTE PTR [rax],al
  4324f0:	add    BYTE PTR [rax],al
  4324f2:	add    BYTE PTR [rax],al
  4324f4:	add    al,0x0
	...
  432507:	add    BYTE PTR [rbp+0x5c],dh
  43250a:	rex.W push QWORD PTR [rdx+0x58]
  43250e:	rex.R jmp FWORD PTR [rsi+0x55]
  432512:	rex jmp FWORD PTR [rbx+0x51]
  432516:	cmp    eax,0x3a4e68ff
  43251b:	push   QWORD PTR [rcx-0x4e00b191]
  432521:	(bad)  
  432522:	cmp    edi,edi
  432524:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  432525:	pop    rax
  432526:	xor    bh,bh
  432528:	movsxd ecx,DWORD PTR [rax+0x33]
  43252b:	inc    DWORD PTR [rax]
  43252d:	add    BYTE PTR [rax],al
  43252f:	add    BYTE PTR [rdi],ch
  432531:	adc    al,0x8e
  432533:	rex.RX sub BYTE PTR [rcx],r10b
  432536:	cmp    ch,0x28
  432539:	adc    DWORD PTR [rax-0x71ebd003],eax
  43253f:	pop    rcx
	...
  432548:	jp     0x4325ab
  43254a:	rex.WRX inc rbp
  43254d:	mov    ebp,0xa8c8ffb6
  432552:	xchg   edi,eax
  432553:	inc    edi
  432555:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  432556:	xchg   ebp,eax
  432557:	inc    edi
  432559:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  43255a:	xchg   esp,eax
  43255b:	(bad)  
  43255c:	mov    ebx,0xffff4c70
  432561:	mov    bl,0x8b
  432563:	jmp    FWORD PTR [rdx+0x63ff385d]
  432569:	xor    rdi,rdi
  43256c:	add    BYTE PTR [rax],al
  43256e:	add    BYTE PTR [rax],al
  432570:	sub    al,0x32
  432572:	(bad)  
  432573:	jmp    FWORD PTR [rip+0x2dfd8f13]        # 0x2e40b48c
  432579:	adc    ecx,DWORD PTR [rdi-0x71ecd103]
  43257f:	inc    BYTE PTR [rax]
  432581:	add    BYTE PTR [rax],al
  432583:	add    BYTE PTR [rax],al
  432585:	add    BYTE PTR [rax],al
  432587:	add    BYTE PTR [rax-0xaa98],al
  43258d:	(bad)  
  43258e:	(bad)  
  43258f:	push   rbx
  432591:	xlat   BYTE PTR ds:[rbx]
  432592:	leave  
  432593:	push   rdx
  432595:	(bad)  
  432596:	(bad)  
  432597:	push   rdx
  432599:	(bad)  
  43259a:	(bad)  
  43259d:	jbe    0x4325f0
  43259f:	(bad)  
  4325a0:	(bad)  
  4325a1:	mov    eax,0x62afff94
  4325a6:	cmp    al,0xff
  4325a8:	gs rex.WXB (bad) 
  4325ab:	inc    DWORD PTR [rax]
  4325ad:	add    BYTE PTR [rax],al
  4325af:	add    BYTE PTR [rdi],bh
  4325b1:	rex.RB sar r15d,cl
  4325b4:	xor    esp,DWORD PTR [rax]
  4325b6:	sahf   
  4325b7:	push   QWORD PTR [rbx]
  4325b9:	and    BYTE PTR [rsi-0x71ecd101],bl
  4325bf:	inc    DWORD PTR [rax]
  4325c1:	add    BYTE PTR [rax],al
  4325c3:	add    BYTE PTR [rax],al
  4325c5:	add    BYTE PTR [rax],al
  4325c7:	add    BYTE PTR [rsi-0xa493],al
  4325cd:	(bad)  
  4325ce:	(bad)  
  4325cf:	push   rsp
  4325d1:	fcmove st,st(6)
  4325d3:	push   rsp
  4325d5:	fxch   st(4)
  4325d7:	push   rbx
  4325d9:	xlat   BYTE PTR ds:[rbx]
  4325da:	retf   0xcaff
  4325dd:	jge    0x432637
  4325df:	(bad)  
  4325e0:	(bad)  
  4325e1:	mov    esi,0x68b6ff9e
  4325e6:	rex.XB jmp FWORD PTR [r9+0x4e]
  4325ea:	cmp    bh,bh
  4325ec:	add    BYTE PTR [rax],al
  4325ee:	add    BYTE PTR [rax],al
  4325f0:	push   rdx
  4325f1:	pop    rax
  4325f2:	fdivr  st,st(7)
  4325f4:	cmp    BYTE PTR [rsi],ch
  4325f6:	lods   eax,DWORD PTR ds:[rsi]
  4325f7:	(bad)  
  4325f8:	cmp    BYTE PTR [rsi],ch
  4325fa:	lods   eax,DWORD PTR ds:[rsi]
  4325fb:	jmp    FWORD PTR [rsi]
  4325fd:	adc    ecx,DWORD PTR [rsi+0xff]
  432603:	add    BYTE PTR [rax],al
  432605:	add    BYTE PTR [rax],al
  432607:	add    BYTE PTR [rsp+rsi*2-0x9e],cl
  43260e:	(bad)  
  43260f:	push   rbp
  432611:	(bad)  
  432613:	push   rbp
  432615:	fst    st(1)
  432617:	push   rsp
  432619:	fcmovne st,st(7)
  43261b:	dec    edi
  43261d:	sbb    DWORD PTR [rdi-0x1],0xfffffffe
  432621:	(bad)  
  432622:	test   eax,0x4b71beff
  432627:	jmp    FWORD PTR [rsi+0x53]
  43262a:	(bad)  
  43262b:	inc    DWORD PTR [rax]
  43262d:	add    BYTE PTR [rax],al
  43262f:	add    BYTE PTR [rdi+0x6c],ah
  432632:	(bad)  
  432634:	ds cmp eax,0x3d3effbf
  43263a:	mov    edi,0x8e132eff
  43263f:	inc    DWORD PTR [rax]
  432641:	add    BYTE PTR [rax],al
  432643:	add    BYTE PTR [rax],al
  432645:	add    BYTE PTR [rax],al
  432647:	add    BYTE PTR [rdx-0x9686],dl
  43264d:	(bad)  
  43264e:	(bad)  
  43264f:	push   rsi
  432651:	loope  0x43262b
  432653:	push   rsi
  432655:	loopne 0x43262d
  432657:	(bad)  
  432658:	jmp    0xffffffffd642e126
  43265d:	mov    ah,BYTE PTR [rsi-0x1]
  432660:	dec    ebp
  432662:	mov    ah,0xff
  432664:	mov    bh,0x74
  432666:	push   rbx
  432667:	(bad)  
  432668:	jg     0x4326c6
  43266a:	rex.RX inc DWORD PTR [rax]
  43266d:	add    BYTE PTR [rax],al
  43266f:	add    BYTE PTR [rbx-0x80],bh
  432672:	in     al,0xff
  432674:	rex.XB
  432675:	rex.WR (bad) 
  432677:	inc    DWORD PTR [rbx+0x4c]
  43267a:	(bad)  
  43267b:	push   QWORD PTR [rbx]
  43267d:	and    BYTE PTR [rsi+0xff],bl
  432683:	add    BYTE PTR [rax],al
  432685:	add    BYTE PTR [rax],al
  432687:	add    BYTE PTR [rax-0x8f7f],bl
  43268d:	(bad)  
  43268e:	(bad)  
  43268f:	push   rdi
  432691:	in     eax,0xdc
  432693:	(bad)  
  432694:	jmp    0x432664
  432696:	mov    edi,0x7193dcff
  43269b:	(bad)  
  43269c:	std    
  43269d:	loope  0x432671
  43269f:	(bad)  
  4326a0:	std    
  4326a1:	loope  0x432675
  4326a3:	(bad)  
  4326a4:	std    
  4326a5:	(bad)  
  4326a6:	mov    esi,0x4869adff
  4326ab:	(bad)  
  4326ac:	mov    eax,0x8e314d6f
  4326b1:	xchg   ebx,eax
  4326b2:	jmp    0xffffffffdd9c6fb6
  4326b7:	dec    DWORD PTR [rax+0x59]
  4326ba:	(bad)  
  4326bc:	xor    esp,DWORD PTR [rax]
  4326be:	sahf   
  4326bf:	inc    DWORD PTR [rax]
  4326c1:	add    BYTE PTR [rax],al
  4326c3:	add    BYTE PTR [rax],al
  4326c5:	add    BYTE PTR [rax],al
  4326c7:	add    BYTE PTR [rsi-0x8879],bl
  4326cd:	(bad)  
  4326ce:	(bad)  
  4326cf:	(bad)  
  4326d0:	(bad)  
  4326d1:	(bad)  
  4326d2:	(bad)  
  4326d3:	jmp    rsi
  4326d5:	movabs al,ds:0xd5f6ffebf2fdff7e
  4326de:	(bad)  
  4326df:	call   rcx
  4326e1:	mov    ebp,DWORD PTR [rbx-0x1]
  4326e4:	sti    
  4326e5:	out    dx,al
  4326e6:	out    0xff,al
  4326e8:	std    
  4326e9:	fadd   st,st(3)
  4326eb:	(bad)  
  4326ec:	mov    eax,0x9eff4d6f
  4326f1:	movabs ds:0xada1fff8cac3ffee,eax
  4326fa:	hlt    
  4326fb:	push   QWORD PTR [rbx]
  4326fd:	and    BYTE PTR [rsi+0xff],bl
  432703:	add    BYTE PTR [rax],al
  432705:	add    BYTE PTR [rax],al
  432707:	add    BYTE PTR [rsi+rcx*4-0x45330082],ah
  43270e:	lods   eax,DWORD PTR ds:[rsi]
  43270f:	push   QWORD PTR [rdi-0x1e006c5e]
  432715:	lahf   
  432716:	jg     0x432717
  432718:	sti    
  432719:	out    dx,al
  43271a:	out    0xff,al
  43271c:	loope  0x4326b8
  43271e:	js     0x43271f
  432720:	cwde   
  432721:	xor    DWORD PTR [rax-0x1],0xff678bd5
  432728:	in     eax,0xc4
  43272a:	mov    bl,0xff
  43272c:	mov    edi,0x2fff5677
  432731:	adc    al,0x8e
  432733:	xor    DWORD PTR [rbx+0x6f],edi
  432736:	jmp    QWORD PTR gs:[rbx+0x53]
  43273a:	rex.XB jmp FWORD PTR [r15]
  43273d:	adc    al,0x8e
  43273f:	pop    rcx
	...
  432748:	test   eax,0xffff8594
  43274d:	(bad)  
  43274e:	(bad)  
  43274f:	(bad)  
  432750:	sti    
  432751:	lock jmp 0x432753
  432754:	in     eax,dx
  432755:	(bad)  
  432756:	retf   
  432757:	(bad)  
  432758:	jmp    0xffffffffe842a6fe
  43275d:	lahf   
  43275e:	jge    0x43275f
  432760:	stc    
  432761:	jmp    0x432747
  432763:	jmp    rax
  432765:	cdq    
  432766:	js     0x432767
  432768:	mov    esi,0xb8ff5879
  43276d:	outs   dx,DWORD PTR ds:[rsi]
  43276e:	xor    QWORD PTR [r8],r8
  432771:	add    BYTE PTR [rax],al
  432773:	add    cl,al
  432775:	mov    ecx,0x4b59ffb1
  43277a:	cmp    al,0xff
	...
  432788:	mov    al,0x9b
  43278a:	mov    edi,?
  43278c:	(bad)  
  43278d:	(bad)  
  43278e:	(bad)  
  43278f:	(bad)  
  432790:	(bad)  
  432791:	(bad)  
  432792:	(bad)  
  432793:	(bad)  
  432794:	(bad)  
  432795:	(bad)  
  432796:	(bad)  
  432797:	(bad)  
  432798:	(bad)  
  432799:	(bad)  
  43279a:	(bad)  
  43279b:	(bad)  
  43279c:	(bad)  
  43279d:	(bad)  
  43279e:	(bad)  
  43279f:	(bad)  
  4327a0:	(bad)  
  4327a1:	(bad)  
  4327a2:	(bad)  
  4327a3:	push   rbx
  4327a5:	out    dx,eax
  4327a6:	in     al,dx
  4327a7:	jmp    QWORD PTR [rcx+0x7dff8390]
  4327ad:	ins    DWORD PTR es:[rdi],dx
  4327ae:	pop    rdi
  4327af:	leave  
  4327b0:	add    BYTE PTR [rax],al
  4327b2:	add    BYTE PTR [rax],al
  4327b4:	mov    ah,0xa9
  4327b6:	movabs eax,ds:0x1c232aff435363ff
  4327bf:	jns    0x4327c1
  4327c1:	add    BYTE PTR [rax],al
  4327c3:	add    BYTE PTR [rsi+0x5c],ch
  4327c6:	rex.WXB std 
  4327c8:	mov    ch,0xa1
  4327ca:	xchg   edx,eax
  4327cb:	dec    esp
  4327cd:	mov    edx,0xb0c4ffad
  4327d2:	movabs ds:0x92a2b6ff9ba9bdff,al
  4327db:	jmp    FWORD PTR [rsi-0x59007567]
  4327e1:	xchg   ecx,eax
  4327e2:	cmp    edi,0xff78889f
  4327e8:	enter  0xb7bf,0xff
  4327ec:	mov    dh,0xaa
  4327ee:	(bad)  
  4327ef:	jmp    QWORD PTR [rbx+0x53]
  4327f2:	rex.XB std 
  4327f4:	mov    dh,0xb9
  4327f6:	mov    dl,0xf5
  4327f8:	pushf  
  4327f9:	xchg   esp,eax
  4327fa:	mov    edx,esi
  4327fc:	pop    rdx
  4327fd:	push   rbp
  4327fe:	push   rcx
  4327ff:	int3   
  432800:	outs   dx,BYTE PTR ds:[rsi]
  432801:	pop    rsp
  432802:	rex.WXB std 
  432804:	movabs ds:0xffff97a6bbfb949a,eax
  43280d:	(bad)  
  43280e:	(bad)  
  43280f:	(bad)  
  432810:	sti    
  432811:	repnz out dx,al
  432813:	(bad)  
  432814:	stc    
  432815:	jmp    0x4327fc
  432817:	(bad)  
  432818:	clc    
  432819:	in     eax,0xdc
  43281b:	push   rbp
  43281d:	(bad)  
  43281f:	push   rbx
  432821:	xlat   BYTE PTR ds:[rbx]
  432822:	retf   
  432823:	call   rbp
  432825:	mov    ah,0xa4
  432827:	inc    ebp
  432829:	mov    ebx,0xf0f4ffb2
  43282e:	jmp    0x68b5a531
  432833:	out    dx,eax
  432834:	(bad)  
  432835:	in     al,dx
  432836:	in     eax,0xf5
  432838:	ror    ebx,1
  43283a:	ret    0xadf6
  43283d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  43283e:	movabs ds:0xa1acbef271757af6,al
  432847:	sbb    al,bl
  432849:	scas   eax,DWORD PTR es:[rdi]
  43284a:	movabs ds:0xfffffffffcfcfcff,al
  432853:	(bad)  
  432854:	(bad)  
  432855:	(bad)  
  432856:	(bad)  
  432857:	(bad)  
  432858:	(bad)  
  432859:	(bad)  
  43285a:	(bad)  
  43285b:	(bad)  
  43285c:	(bad)  
  43285d:	(bad)  
  43285e:	(bad)  
  43285f:	(bad)  
  432860:	(bad)  
  432861:	(bad)  
  432862:	(bad)  
  432863:	push   rbx
  432865:	out    dx,eax
  432866:	in     al,dx
  432867:	call   rsi
  432869:	(bad)  
  43286a:	enter  0xbcff,0xb4
  43286e:	lods   al,BYTE PTR ds:[rsi]
  43286f:	inc    BYTE PTR [rax]
  432871:	add    BYTE PTR [rax],al
  432873:	add    BYTE PTR [rdi-0x6f476860],ah
  432879:	mov    al,BYTE PTR [rdx+0x62686dbe]
  43287f:	retf   
  432880:	mov    esi,0x1aa1ac
  432885:	add    BYTE PTR [rax],al
  432887:	add    bh,al
  432889:	mov    bl,0xa6
  43288b:	inc    esp
  43288d:	mov    cl,0xa3
  43288f:	inc    ecx
  432891:	scas   al,BYTE PTR es:[rdi]
  432892:	movabs al,ds:0x98a7bbff9cabbeff
  43289b:	(bad)  
  43289c:	mov    eax,0xb4ff95a3
  4328a1:	lahf   
  4328a2:	nop
  4328a3:	jmp    FWORD PTR [rdi-0x54007366]
  4328a9:	xchg   esi,eax
  4328aa:	xchg   edi,edi
	...
  432908:	add    BYTE PTR [rbx+0x0],al
  43290b:	add    BYTE PTR [rax],al
  43290d:	rex.XB add BYTE PTR [r8],al
  432910:	add    BYTE PTR [rbx+0x0],al
  432913:	add    BYTE PTR [rax],al
  432915:	rex.XB add BYTE PTR [r8],al
  432918:	add    BYTE PTR [rbx+0x0],al
  43291b:	add    BYTE PTR [rax],al
  43291d:	rex.XB add BYTE PTR [r8],al
  432920:	add    BYTE PTR [rbx],al
  432922:	add    BYTE PTR [rax],al
  432924:	add    BYTE PTR [rbx],al
  432926:	add    BYTE PTR [rax],al
  432928:	add    BYTE PTR [rbx],al
  43292a:	add    BYTE PTR [rax],al
  43292c:	add    BYTE PTR [rdi],ah
  43292e:	add    BYTE PTR [rax],al
  432930:	add    BYTE PTR [rdx],ah
	...
  43293a:	add    BYTE PTR [rax],al
  43293c:	add    BYTE PTR [rcx],ah
  43293e:	add    BYTE PTR [rax],al
  432940:	add    BYTE PTR [rdi+0x0],bh
  432943:	add    bh,bh
  432945:	inc    DWORD PTR [rax]
  432947:	add    BYTE PTR [rbx],cl
  432949:	add    BYTE PTR [rcx],al
  43294c:	add    BYTE PTR [rax],al
  43294e:	add    bh,bh
  432950:	(bad)  
  432951:	(bad)  
  432952:	inc    DWORD PTR [rcx]
  432954:	add    BYTE PTR [rax],al
  432956:	add    BYTE PTR [rax],al
  432958:	add    BYTE PTR [rax],al
  43295a:	add    BYTE PTR [rdx+rax*1],cl
  43295d:	add    BYTE PTR [rax],al
  43295f:	add    BYTE PTR [rcx+0x53],dl
  432962:	jns    0x4329d7
  432964:	je     0x4329cb
  432966:	ins    DWORD PTR es:[rdi],dx
  432967:	cs rex.R jb 0x4329cc
  43296b:	ja     0x4329d6
  43296d:	outs   dx,BYTE PTR ds:[rsi]
  43296e:	addr32 sub al,0x20
  432971:	push   rsi
  432972:	gs jb  0x4329e8
  432975:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  43297c:	xor    BYTE PTR cs:[rsi],ch
  43297f:	xor    BYTE PTR [rax+riz*1],ch
  432982:	rex.XB jne 0x4329f1
  432985:	je     0x4329fc
  432987:	jb     0x4329ee
  432989:	cmp    eax,0x7475656e
  43298e:	jb     0x4329f1
  432990:	ins    BYTE PTR es:[rdi],dx
  432991:	sub    al,0x20
  432993:	push   rax
  432994:	jne    0x4329f8
  432996:	ins    BYTE PTR es:[rdi],dx
  432997:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  43299e:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  4329a2:	(bad)  
  4329a3:	xor    BYTE PTR [rbx],dh
  4329a5:	xor    ax,0x3766
  4329a9:	xor    WORD PTR [rcx],si
  4329ac:	fs xor eax,0x61336130
  4329b2:	add    eax,0x1
  4329b7:	adc    edx,DWORD PTR [rbx+0x79]
  4329ba:	jae    0x432a30
  4329bc:	gs ins DWORD PTR es:[rdi],dx
  4329be:	cs rex.R jb 0x432a23
  4329c2:	ja     0x432a2d
  4329c4:	outs   dx,BYTE PTR ds:[rsi]
  4329c5:	movsxd rbp,DWORD PTR cs:[r15d+0x6e]
  4329cb:	add    al,BYTE PTR [rax]
  4329cd:	add    BYTE PTR [rax],al
  4329cf:	or     BYTE PTR [rcx+0x63],cl
  4329d2:	outs   dx,DWORD PTR ds:[rsi]
  4329d3:	outs   dx,BYTE PTR ds:[rsi]
  4329d4:	rex.R (bad) 
  4329d6:	je     0x432a39
  4329d8:	or     BYTE PTR [rcx+0x63],cl
  4329db:	outs   dx,DWORD PTR ds:[rsi]
  4329dc:	outs   dx,BYTE PTR ds:[rsi]
  4329dd:	push   rbx
  4329de:	imul   edi,DWORD PTR [rdx+0x65],0x13020407
  4329e5:	push   rbx
  4329e6:	jns    0x432a5b
  4329e8:	je     0x432a4f
  4329ea:	ins    DWORD PTR es:[rdi],dx
  4329eb:	cs rex.R jb 0x432a50
  4329ef:	ja     0x432a5a
  4329f1:	outs   dx,BYTE PTR ds:[rsi]
  4329f2:	addr32 cs push rbx
  4329f5:	imul   edi,DWORD PTR [rdx+0x65],0x2
  4329fc:	add    al,BYTE PTR [rax]
  4329fe:	add    BYTE PTR [rax],al
  432a00:	or     DWORD PTR [rbx],eax
  432a02:	add    BYTE PTR [rax],al
  432a04:	add    BYTE PTR [rip+0xfffffffffffffffc],al        # 0x432a06
  432a0a:	adc    edx,DWORD PTR [rbx+0x79]
  432a0d:	jae    0x432a83
  432a0f:	gs ins DWORD PTR es:[rdi],dx
  432a11:	cs rex.R jb 0x432a76
  432a15:	ja     0x432a80
  432a17:	outs   dx,BYTE PTR ds:[rsi]
  432a18:	addr32 cs push rbx
  432a1b:	imul   edi,DWORD PTR [rdx+0x65],0x2
  432a22:	add    eax,0x74646977
  432a27:	push   0x69656806
  432a2c:	addr32 push 0x8000074
  432a32:	or     BYTE PTR [rdx],al
	...
  432a3c:	add    BYTE PTR [rax],al
  432a3e:	add    BYTE PTR [rdi],cl
  432a40:	add    eax,DWORD PTR [rax]
  432a42:	add    BYTE PTR [rax],al
  432a44:	xchg   esi,eax
  432a45:	(bad)  
  432a46:	add    BYTE PTR [rax],al
  432a48:	add    al,BYTE PTR [rax]
  432a4a:	add    BYTE PTR [rcx],al
  432a4c:	add    BYTE PTR [rsi],al
  432a4e:	add    BYTE PTR [rax],ah
  432a50:	and    BYTE PTR [rax],dl
  432a52:	add    BYTE PTR [rcx],al
  432a54:	add    BYTE PTR [rax+rax*1],al
  432a57:	call   0x66432a5e
  432a5c:	add    BYTE PTR [rax],al
  432a5e:	add    BYTE PTR [rax],dl
  432a60:	adc    BYTE PTR [rax],dl
  432a62:	add    BYTE PTR [rcx],al
  432a64:	add    BYTE PTR [rax+rax*1],al
  432a67:	sub    BYTE PTR [rcx],al
  432a69:	add    BYTE PTR [rax],al
  432a6b:	rex.WRX add r8,QWORD PTR [rax]
  432a6e:	add    BYTE PTR [rax],ah
  432a70:	and    BYTE PTR [rax],al
  432a72:	add    BYTE PTR [rcx],al
  432a74:	add    BYTE PTR [rax],cl
  432a76:	add    BYTE PTR [rax+0x76000008],ch
  432a7c:	add    al,0x0
  432a7e:	add    BYTE PTR [rax],dl
  432a80:	adc    BYTE PTR [rax],al
  432a82:	add    BYTE PTR [rcx],al
  432a84:	add    BYTE PTR [rax],cl
  432a86:	add    BYTE PTR [rax+0x5],ch
  432a89:	add    BYTE PTR [rax],al
  432a8b:	(bad)  
  432a8c:	or     eax,0x20200000
  432a91:	add    BYTE PTR [rax],al
  432a93:	add    DWORD PTR [rax],eax
  432a95:	and    BYTE PTR [rax],al
  432a97:	test   al,0x10
  432a99:	add    BYTE PTR [rax],al
  432a9b:	xchg   BYTE PTR [rdx],dl
  432a9d:	add    BYTE PTR [rax],al
  432a9f:	adc    BYTE PTR [rax],dl
  432aa1:	add    BYTE PTR [rax],al
  432aa3:	add    DWORD PTR [rax],eax
  432aa5:	and    BYTE PTR [rax],al
  432aa7:	push   0x2e000004
  432aac:	and    eax,DWORD PTR [rax]
  432aae:	add    BYTE PTR [rax],ch
  432ab0:	add    BYTE PTR [rax],al
  432ab2:	add    BYTE PTR [rax],ah
  432ab4:	add    BYTE PTR [rax],al
  432ab6:	add    BYTE PTR [rax+0x0],al
  432ab9:	add    BYTE PTR [rax],al
  432abb:	add    DWORD PTR [rax],eax
  432abd:	add    al,0x0
  432abf:	add    BYTE PTR [rax],al
  432ac1:	add    BYTE PTR [rax],al
  432ac3:	add    BYTE PTR [rdx],al
	...
  432add:	add    BYTE PTR [rax],0x0
  432ae0:	add    BYTE PTR [rax],0x0
  432ae3:	add    BYTE PTR [rax+0x800080],al
  432ae9:	add    BYTE PTR [rax],al
  432aeb:	add    BYTE PTR [rax],0x80
  432aee:	add    BYTE PTR [rax-0x7fffff80],al
  432af4:	add    BYTE PTR [rax-0x3f3f4000],0x0
  432afb:	add    BYTE PTR [rax],al
  432afd:	inc    DWORD PTR [rax]
  432aff:	add    bh,bh
  432b01:	add    BYTE PTR [rax],al
  432b03:	add    bh,bh
  432b05:	inc    DWORD PTR [rax]
  432b07:	inc    DWORD PTR [rax]
  432b09:	add    BYTE PTR [rax],al
  432b0b:	inc    DWORD PTR [rax]
  432b0d:	inc    DWORD PTR [rax]
  432b0f:	(bad)  
  432b10:	inc    DWORD PTR [rax]
  432b12:	add    bh,bh
  432b14:	(bad)  
  432b15:	inc    DWORD PTR [rax]
  432b17:	add    BYTE PTR [rax],al
  432b19:	add    BYTE PTR [rax],al
  432b1b:	add    BYTE PTR [rax],al
  432b1d:	add    BYTE PTR [rsi+0x70],dh
  432b20:	add    BYTE PTR [rax],al
  432b22:	add    DWORD PTR [rip+0x10],edx        # 0x432b38
  432b28:	add    BYTE PTR [rax],al
  432b2a:	add    BYTE PTR [rax],al
  432b2c:	add    BYTE PTR [rdi],al
  432b2e:	mov    BYTE PTR [rsi+0x0],dh
  432b31:	add    BYTE PTR [rdi+0x1113],dl
  432b37:	add    BYTE PTR [rax],al
  432b39:	ja     0x432bb2
  432b3b:	ja     0x432bb4
  432b3d:	ja     0x432b37
  432b3f:	test   DWORD PTR [rdi+0x77],esi
  432b42:	pop    rcx
  432b43:	cdq    
  432b44:	push   rcx
  432b45:	add    BYTE PTR [rax],al
  432b47:	add    BYTE PTR [rax],al
  432b49:	js     0x432ad3
  432b4b:	mov    BYTE PTR [rax-0x77790779],cl
  432b51:	mov    BYTE PTR [rdi+0x3139],dl
  432b57:	add    BYTE PTR [rax],al
  432b59:	js     0x432b53
  432b5b:	mov    BYTE PTR [rax-0x778b0778],cl
  432b61:	mov    BYTE PTR [rcx+0x79],bh
  432b64:	push   rcx
  432b65:	add    BYTE PTR [rax],al
  432b67:	add    BYTE PTR [rax],al
  432b69:	js     0x432afa
  432b6b:	(bad)
  432b6f:	xchg   BYTE PTR [rax+0x71995888],cl
  432b75:	add    BYTE PTR [rax],al
  432b77:	add    BYTE PTR [rax],al
  432b79:	jg     0x432b03
  432b7b:	mov    BYTE PTR [rax-0x777b0778],cl
  432b81:	mov    BYTE PTR [rdi+0x9197],dl
  432b87:	add    BYTE PTR [rax],al
  432b89:	js     0x432b83
  432b8b:	clc    
  432b8c:	(bad)  
  432b90:	mov    BYTE PTR [rax+0x979778],cl
  432b96:	add    BYTE PTR [rax],al
  432b98:	add    BYTE PTR [rax-0x8],bh
  432b9b:	mov    BYTE PTR [rax-0x77790778],cl
  432ba1:	mov    BYTE PTR [rax+0x9397],bl
  432ba7:	add    BYTE PTR [rax],al
  432ba9:	jg     0x432c12
  432bab:	clc    
  432bac:	clc    
  432bad:	mov    al,bh
  432baf:	ja     0x432b39
  432bb1:	mov    BYTE PTR [rax-0x68],bh
  432bb4:	xchg   ebp,eax
  432bb5:	add    BYTE PTR [rax],al
  432bb7:	add    BYTE PTR [rax],al
  432bb9:	js     0x432c32
  432bbb:	js     0x432bb5
  432bbd:	mov    al,bh
  432bbf:	xchg   BYTE PTR [rax-0x7e86a778],cl
  432bc5:	add    BYTE PTR [rax],al
  432bc7:	add    BYTE PTR [rax],al
  432bc9:	jg     0x432c43
  432bcb:	ja     0x432b55
  432bcd:	js     0x432bc7
  432bcf:	xchg   eax,ecx
  432bd1:	mov    BYTE PTR [rax+0x78],bh
  432bd4:	xchg   edi,eax
  432bd5:	add    BYTE PTR [rax],al
  432bd7:	add    BYTE PTR [rax],al
  432bd9:	js     0x432c52
  432bdb:	mov    al,BYTE PTR [rsi+0x7688f888]
  432be1:	mov    BYTE PTR [rax-0x68],bh
  432be4:	xchg   edi,eax
  432be5:	add    BYTE PTR [rax],al
  432be7:	ja     0x432c60
  432be9:	addr32 test al,0xaf
  432bec:	ja     0x432bed
  432bee:	(bad)  
  432bef:	inc    DWORD PTR [rdi-0x68778788]
  432bf5:	add    BYTE PTR [rax],al
  432bf7:	sub    BYTE PTR [rax-0x8857578],ch
  432bfd:	js     0x432c66
  432bff:	jg     0x432bf8
  432c01:	push   0x7978d8
  432c06:	add    BYTE PTR [rdi],dh
  432c08:	jp     0x432bc4
  432c0a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  432c0b:	movabs ds:0x888858f8888f67af,eax
  432c14:	xchg   edi,eax
  432c15:	add    BYTE PTR [rax],al
  432c17:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  432c18:	test   al,0xa8
  432c1a:	stos   DWORD PTR es:[rdi],eax
  432c1b:	jp     0x432c97
  432c1d:	repz clc 
  432c1f:	mov    bh,dh
  432c21:	push   0x878f88
  432c26:	add    BYTE PTR [rax],bh
  432c28:	movabs ds:0xf87f6f677b7a8a7a,eax
  432c31:	mov    BYTE PTR [rdi+0x1787],al
  432c37:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  432c38:	mov    cl,BYTE PTR [rdx+0x7f8a8aba]
  432c3e:	js     0x432c3f
  432c40:	xchg   DWORD PTR [rax+0x708787],ecx
  432c46:	add    BYTE PTR [rdx],bh
  432c48:	cmp    dh,BYTE PTR [rbx]
  432c4a:	addr32 test al,0x37
  432c4d:	xchg   DWORD PTR [rax-0x79],edi
  432c50:	js     0x432bda
  432c52:	xchg   edi,esi
  432c54:	add    BYTE PTR [rax],al
  432c57:	add    BYTE PTR [rax],al
  432c59:	jg     0x432c03
  432c5b:	mov    bh,BYTE PTR [rdi-0x71]
  432c5e:	clc    
  432c5f:	clc    
  432c60:	mov    al,bh
  432c62:	xchg   edi,esi
  432c64:	jo     0x432c66
  432c66:	add    BYTE PTR [rax],al
  432c68:	add    BYTE PTR [rdi+0x38],bh
  432c6b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  432c6c:	(bad)  
  432c6d:	clc    
  432c6e:	clc    
  432c6f:	clc    
  432c70:	jbe    0x432bfa
  432c72:	mov    BYTE PTR [rdi+0x740070],al
  432c78:	add    BYTE PTR [rdi+0x2a],bh
  432c7b:	jg     0x432c75
  432c7d:	dec    DWORD PTR [rdi+0x78878888]
  432c83:	mov    BYTE PTR [rbp+0x61],ah
  432c86:	movsxd eax,DWORD PTR [rax]
  432c88:	add    BYTE PTR [rdi+0x37],bh
  432c8b:	(bad)  
  432c8c:	dec    DWORD PTR [rdi-0x77070808]
  432c92:	mov    BYTE PTR [rax+0x777877],cl
  432c98:	add    BYTE PTR [rdi-0x1],bh
  432c9b:	clc    
  432c9c:	(bad)  
  432c9d:	(bad)  
  432c9e:	dec    DWORD PTR [rax-0x7707701]
  432ca4:	mov    BYTE PTR [rdi+0x77000070],al
  432caa:	ja     0x432d23
  432cac:	ja     0x432d24
  432cae:	ja     0x432d27
  432cb0:	dec    DWORD PTR [rax+0x778fff8f]
  432cb6:	add    BYTE PTR [rax],al
  432cb8:	(bad)  
  432cb9:	jl     0x432d32
  432cbb:	ja     0x432d35
  432cbd:	js     0x432c47
  432cbf:	mov    BYTE PTR [rdi-0x78],dh
  432cc2:	xchg   DWORD PTR [rdi+0x7077],eax
  432cc8:	js     0x432d42
  432cca:	ja     0x432d43
  432ccc:	(bad)  
  432ccd:	jl     0x432d4b
  432ccf:	ja     0x432d4d
  432cd1:	ja     0x432d4a
  432cd3:	ja     0x432c5c
  432cd5:	add    BYTE PTR [rax],al
  432cd7:	(bad)  
  432cd8:	xchg   DWORD PTR [rdi],eax
  432cda:	mov    BYTE PTR [rax-0x77777778],cl
  432ce0:	mov    BYTE PTR [rax+0x7078c088],cl
  432ce6:	add    BYTE PTR [rdi+0x70],dh
  432ce9:	(bad)  
  432cea:	mov    BYTE PTR [rax-0x77707078],cl
  432cf0:	mov    BYTE PTR [rax+0x77078088],cl
  432cf6:	add    BYTE PTR [rax],al
  432cf8:	add    BYTE PTR [rdi],al
  432cfa:	(bad)  
  432cfb:	(bad)  
  432cfc:	dec    DWORD PTR [rdi-0x7007071]
  432d02:	push   QWORD PTR [rax+0x0]
  432d05:	add    BYTE PTR [rax],al
  432d07:	add    BYTE PTR [rax],al
  432d09:	(bad)  
  432d0a:	ja     0x432d83
  432d0c:	ja     0x432d85
  432d0e:	ja     0x432d87
  432d10:	jbe    0x432d89
  432d12:	jbe    0x432d84
  432d14:	add    BYTE PTR [rax],al
  432d16:	add    bh,bh
  432d18:	cld    
  432d19:	jle    0x432d3a
  432d1b:	(bad)  
  432d1c:	clc    
  432d1d:	cmp    al,0xf
  432d1f:	lock add BYTE PTR [rax],al
  432d22:	(bad)  
  432d24:	add    BYTE PTR [rax],al
  432d26:	(bad)  
  432d28:	add    BYTE PTR [rax],al
  432d2a:	(bad)  
  432d2c:	add    BYTE PTR [rax],al
  432d2e:	(bad)  
  432d30:	add    BYTE PTR [rax],al
  432d32:	(bad)  
  432d34:	add    BYTE PTR [rax],al
  432d36:	(bad)  
  432d38:	add    BYTE PTR [rax],al
  432d3a:	(bad)  
  432d3c:	add    BYTE PTR [rax],al
  432d3e:	(bad)  
  432d40:	add    BYTE PTR [rax],al
  432d42:	(bad)  
  432d44:	add    BYTE PTR [rax],al
  432d46:	(bad)  
  432d48:	add    BYTE PTR [rax],al
  432d4a:	sldt   WORD PTR [rax]
  432d4d:	add    BYTE PTR [rdi],cl
  432d4f:	add    BYTE PTR [rax],al
  432d51:	add    BYTE PTR [rdi],cl
  432d53:	add    BYTE PTR [rax],al
  432d55:	add    BYTE PTR [rdi],cl
  432d57:	add    BYTE PTR [rax],al
  432d59:	add    BYTE PTR [rdi],cl
  432d5b:	add    BYTE PTR [rax],al
  432d5d:	add    BYTE PTR [rdi],cl
  432d5f:	add    BYTE PTR [rax],al
  432d61:	add    BYTE PTR [rdi],bl
  432d63:	add    BYTE PTR [rax],al
  432d65:	add    BYTE PTR [rdi],bl
  432d67:	lock add BYTE PTR [rax],al
  432d6a:	(bad)  
  432d6b:	lock add BYTE PTR [rax],al
  432d6e:	sbb    al,0xf0
  432d70:	add    BYTE PTR [rax],al
  432d72:	add    al,dh
  432d74:	add    BYTE PTR [rax],al
  432d76:	add    al,dh
  432d78:	add    BYTE PTR [rax],al
  432d7a:	add    eax,esi
  432d7c:	add    BYTE PTR [rax],al
  432d7e:	add    esp,eax
  432d80:	add    BYTE PTR [rax],al
  432d82:	(bad)  
  432d83:	rol    BYTE PTR [rax],0x0
  432d86:	js     0x188a2d8c
  432d8c:	add    BYTE PTR [rax],al
  432d8e:	movsxd edi,eax
  432d90:	add    BYTE PTR [rax],al
  432d92:	jg     0x432d8c
  432d94:	add    BYTE PTR [rax],al
  432d96:	jg     0x432dc0
  432d98:	add    BYTE PTR [rax],al
  432d9a:	add    BYTE PTR [rax],dl
  432d9c:	add    BYTE PTR [rax],al
  432d9e:	add    BYTE PTR [rax],ah
  432da0:	add    BYTE PTR [rax],al
  432da2:	add    BYTE PTR [rcx],al
  432da4:	add    BYTE PTR [rax+rax*1],al
  432da7:	add    BYTE PTR [rax],al
  432da9:	add    BYTE PTR [rax],al
  432dab:	add    BYTE PTR [rax],0x0
	...
  432dc2:	add    BYTE PTR [rax],al
  432dc4:	add    BYTE PTR [rax+0x800000],al
  432dca:	add    BYTE PTR [rax],al
  432dcc:	add    BYTE PTR [rax+0x8000],0x0
  432dd3:	add    BYTE PTR [rax],0x80
  432dd6:	add    BYTE PTR [rax-0x7fffff80],al
  432ddc:	add    BYTE PTR [rax-0x3f3f4000],0x0
  432de3:	add    BYTE PTR [rax],al
  432de5:	inc    DWORD PTR [rax]
  432de7:	add    bh,bh
  432de9:	add    BYTE PTR [rax],al
  432deb:	add    bh,bh
  432ded:	inc    DWORD PTR [rax]
  432def:	inc    DWORD PTR [rax]
  432df1:	add    BYTE PTR [rax],al
  432df3:	inc    DWORD PTR [rax]
  432df5:	inc    DWORD PTR [rax]
  432df7:	(bad)  
  432df8:	inc    DWORD PTR [rax]
  432dfa:	add    bh,bh
  432dfc:	(bad)  
  432dfd:	inc    DWORD PTR [rax]
  432dff:	add    BYTE PTR [rdi+0x77],dh
  432e02:	ja     0x432e6b
  432e04:	(bad)  
  432e05:	adc    eax,0x88780000
  432e0a:	mov    al,cl
  432e0c:	push   0x77000053
  432e11:	dec    DWORD PTR [rdi+0x797878]
  432e17:	add    BYTE PTR [rdx+0x78],bh
  432e1a:	jmp    FWORD PTR [rax-0x31]
  432e1d:	xchg   ebp,eax
  432e1e:	add    BYTE PTR [rdi+0x2f],dh
  432e21:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  432e22:	clc    
  432e23:	iret   
  432e24:	push   0xffffffff8aa80079
  432e29:	mov    dh,BYTE PTR [rsi-0x1]
  432e2c:	xchg   DWORD PTR [rax-0x5058c600],ecx
  432e32:	cmp    bh,al
  432e34:	mov    WORD PTR [rdi+0x0],?
  432e37:	jp     0x432dc3
  432e39:	(bad)  
  432e3a:	mov    al,cl
  432e3c:	push   0x383a0085
  432e41:	test   al,0xff
  432e43:	(bad)  
  432e44:	js     0x432ebc
  432e46:	(bad)  
  432e47:	add    BYTE PTR [rbx+0x778f8f8f],ah
  432e4d:	mov    BYTE PTR [rax+0x0],bh
  432e50:	cmp    al,bh
  432e52:	clc    
  432e53:	clc    
  432e54:	js     0x432ecd
  432e56:	add    BYTE PTR [rax],0x7f
  432e59:	(bad)  
  432e5a:	(bad)  
  432e5b:	(bad)  
  432e5c:	push   rdi
  432e5e:	add    BYTE PTR [rax],al
  432e60:	ja     0x432ed9
  432e62:	ja     0x432edb
  432e64:	ja     0x432edd
  432e66:	add    BYTE PTR [rdi],al
  432e68:	(bad)  
  432e69:	mov    BYTE PTR [rax+0x70c08888],cl
  432e6f:	jo     0x432e78
  432e71:	mov    BYTE PTR [rax+0x7708888],cl
  432e77:	add    BYTE PTR [rdi],al
  432e79:	jl     0x432ef2
  432e7b:	(bad)  
  432e7c:	jl     0x432dfe
  432e7e:	add    al,al
  432e80:	add    eax,DWORD PTR [rax]
  432e82:	add    al,al
  432e84:	add    eax,DWORD PTR [rax]
  432e86:	add    al,al
  432e88:	add    eax,DWORD PTR [rax]
  432e8a:	add    al,al
  432e8c:	add    eax,DWORD PTR [rax]
  432e8e:	add    BYTE PTR [rax],al
  432e90:	add    eax,DWORD PTR [rax]
  432e92:	add    BYTE PTR [rax],al
  432e94:	add    eax,DWORD PTR [rax]
  432e96:	add    BYTE PTR [rax],al
  432e98:	add    eax,DWORD PTR [rax]
  432e9a:	add    BYTE PTR [rax],al
  432e9c:	add    eax,DWORD PTR [rax]
  432e9e:	add    BYTE PTR [rax],al
  432ea0:	add    al,BYTE PTR [rax]
  432ea2:	add    al,al
  432ea4:	add    BYTE PTR [rax],al
  432ea6:	add    al,al
  432ea8:	add    DWORD PTR [rax],eax
  432eaa:	add    al,al
  432eac:	add    eax,DWORD PTR [rax]
  432eae:	add    al,al
  432eb0:	add    eax,DWORD PTR [rax]
  432eb2:	add    BYTE PTR [rax+0x60000005],ah
  432eb8:	(bad)  
  432eb9:	add    BYTE PTR [rax],al
  432ebb:	loopne 0x432ec4
  432ebd:	add    BYTE PTR [rax],al
  432ebf:	sub    BYTE PTR [rax],al
  432ec1:	add    BYTE PTR [rax],al
  432ec3:	and    BYTE PTR [rax],al
  432ec5:	add    BYTE PTR [rax],al
  432ec7:	add    BYTE PTR [rax],al
  432eca:	add    BYTE PTR [rcx],al
  432ecc:	add    BYTE PTR [rax],cl
  432ece:	add    BYTE PTR [rax],al
  432ed0:	add    BYTE PTR [rax],al
  432ed2:	add    BYTE PTR [rax],al
  432ed4:	add    al,0x0
	...
  432ede:	add    BYTE PTR [rax],al
  432ee0:	add    DWORD PTR [rax],eax
  432ee2:	add    BYTE PTR [rax],al
  432ee4:	add    DWORD PTR [rax],eax
  432ee6:	add    BYTE PTR [rax],al
  432ee8:	add    BYTE PTR [rax],al
  432eea:	add    BYTE PTR [rdi+rdi*1+0x37],cl
  432eee:	add    BYTE PTR [rbp+0x41],cl
  432ef1:	cmp    DWORD PTR [rax],eax
  432ef3:	pop    rax
  432ef4:	rex.WB (bad) 
  432ef6:	add    BYTE PTR [rbx+0x48],ah
  432ef9:	xor    eax,DWORD PTR [rax]
  432efb:	fs rex.WB xor al,0x0
  432eff:	rex.WR cmp BYTE PTR [eax],r8b
  432f03:	push   0x6a00384c
  432f08:	push   rax
  432f09:	cmp    al,0x0
  432f0b:	sbb    al,0x10
  432f0d:	pop    rdx
  432f0e:	add    BYTE PTR [rsi],bl
  432f10:	adc    ebx,DWORD PTR [rax+rax*1+0x22]
  432f14:	(bad)  
  432f15:	(bad)  
  432f16:	add    BYTE PTR [rsi],ah
  432f18:	sbb    esp,DWORD PTR [rax+rax*1+0x27]
  432f1c:	sbb    al,0x65
  432f1e:	add    BYTE PTR [rcx],ch
  432f20:	(bad)  
  432f21:	push   0x6a212b00
  432f26:	add    BYTE PTR [rbx+riz*1],ch
  432f29:	imul   eax,DWORD PTR [rax],0x2f
  432f2c:	and    eax,0x2932006d
  432f31:	jno    0x432f33
  432f33:	cmp    BYTE PTR [rcx],dh
  432f35:	js     0x432f37
  432f37:	(bad)  
  432f38:	cmp    BYTE PTR [rdi+0x0],bh
  432f3b:	push   rsp
  432f3c:	rex.RXB
  432f3d:	add    BYTE PTR [rbx+0x4d],bl
  432f41:	add    BYTE PTR [rdi+rcx*2+0x48],r11b
  432f46:	add    BYTE PTR [rsi+0x54],ch
  432f49:	add    BYTE PTR [rcx+0x53],spl
  432f4d:	rex.WXB add BYTE PTR [r10+0x58],sil
  432f51:	add    BYTE PTR [rdx+rbx*2+0x46],r14b
  432f56:	add    BYTE PTR [rsi+0x5c],dh
  432f59:	rex.WB add BYTE PTR [r15+0x5c],spl
  432f5d:	push   rbp
  432f5e:	add    BYTE PTR [rax+0x60],bh
  432f61:	rex.WR add BYTE PTR [rdi+0x64],r15b
  432f65:	push   rdx
  432f66:	add    BYTE PTR [rbp+0x69],bh
  432f69:	pop    rdi
  432f6a:	add    BYTE PTR [rbp+0x6a],dh
  432f6d:	data16 add BYTE PTR [rbx+0x6a],bh
  432f71:	(bad)  
  432f72:	add    BYTE PTR [rbx-0x7bffa695],al
  432f78:	jno    0x432fdf
  432f7a:	add    BYTE PTR [rdx-0x78ff9d8d],cl
  432f80:	je     0x432feb
  432f82:	add    BYTE PTR [rax-0x69ff9887],dl
  432f88:	jle    0x432ff7
  432f8a:	add    BYTE PTR [rbx-0x6fff8b85],cl
  432f90:	jge    0x433003
  432f92:	add    BYTE PTR [rdi-0x5cff8585],bl
  432f98:	js     0x433012
  432f9a:	add    BYTE PTR [rbp-0x5fff8485],ah
  432fa0:	jl     0x43301e
  432fa2:	add    BYTE PTR [rax+0x2a007f7f],ch
  432fa8:	cdq    
  432fa9:	add    BYTE PTR [r14],r10b
  432fac:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  432fad:	add    BYTE PTR [rbx],sil
  432fb0:	movabs ds:0x995d0053b329004c,eax
  432fb9:	pop    rbp
  432fba:	add    BYTE PTR [rax-0x56],bl
  432fbd:	add    BYTE PTR fs:[rsi-0x53],bl
  432fc1:	imul   eax,DWORD PTR [rax],0x62
  432fc4:	mov    cl,0x6f
  432fc6:	add    BYTE PTR [rbx-0x4e],ch
  432fc9:	jne    0x432fcb
  432fcb:	outs   dx,BYTE PTR ds:[rsi]
  432fcc:	mov    bl,0x78
  432fce:	add    BYTE PTR [rax-0x4c],dh
  432fd1:	jnp    0x432fd3
  432fd3:	sub    ebp,eax
  432fd5:	add    BYTE PTR [r10],bpl
  432fd8:	enter  0x43,0x31
  432fdc:	(bad)  
  432fdd:	rex.WB add BYTE PTR [rip+0x37004ed4],sil        # 0x37437eb8
  432fe4:	(bad)  
  432fe5:	push   rax
  432fe6:	add    BYTE PTR [rbx],bh
  432fe8:	fist   DWORD PTR [rsi+0x0]
  432feb:	ds loopne 0x433048
  432fee:	add    BYTE PTR [rsi+rbx*8+0x5f],al
  432ff2:	add    BYTE PTR [rdx-0x1e],al
  432ff5:	pop    rbp
  432ff6:	add    BYTE PTR [rbx+rbx*8+0x63],cl
  432ffa:	add    BYTE PTR [rax-0x23],bl
  432ffd:	outs   dx,BYTE PTR ds:[rsi]
  432ffe:	add    BYTE PTR [rbp-0x22],ah
  433001:	jp     0x433003
  433003:	imul   ebx,ebx,0x7c
  433006:	add    BYTE PTR [rbp-0x1a],al
  433009:	(bad)  
  43300a:	add    BYTE PTR [rbp-0x18],al
  43300d:	movsxd eax,DWORD PTR [rax]
  43300f:	rex.WB call 0xffffffffe68f307b
  433015:	push   0x6ee15400
  43301a:	add    BYTE PTR [rdx-0x14],dl
  43301d:	ins    DWORD PTR es:[rdi],dx
  43301e:	add    BYTE PTR [rcx-0x1d],ch
  433021:	jle    0x433023
  433023:	fs in  eax,dx
  433025:	jle    0x433027
  433027:	pushf  
  433028:	sub    DWORD PTR [rdi+0x0],0x7b818c
  43302f:	xchg   edx,eax
  433030:	test   BYTE PTR [rsi+0x0],bh
  433033:	lahf   
  433034:	mov    BYTE PTR [rax+rax*1-0x5f],bh
  433038:	xchg   DWORD PTR [rbp+0x0],esi
  43303b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  43303c:	mov    edi,DWORD PTR [rbx+0x0]
  43303f:	movabs al,ds:0x16007c8da7007c8b
  433048:	sbb    ebp,DWORD PTR [rdx-0x55e3e900]
  43304e:	add    BYTE PTR [rax],bl
  433050:	sbb    eax,0x1f1900ab
  433055:	lods   al,BYTE PTR ds:[rsi]
  433056:	add    BYTE PTR [rdx],bl
  433058:	and    BYTE PTR [rbp-0x4fdae000],ch
  43305e:	add    BYTE PTR [rsi],ah
  433060:	sub    esi,DWORD PTR [rax+rax*1+0xb8322c]
  433067:	xor    al,0x39
  433069:	mov    ebp,0x86404600
  43306e:	add    BYTE PTR [rbp+0x48],cl
  433071:	mov    es,WORD PTR [rax]
  433073:	push   rbp
  433074:	push   rcx
  433075:	xchg   esi,eax
  433076:	add    BYTE PTR [rdx+rbx*2-0x62],bl
  43307a:	add    BYTE PTR [rbp+0x7c],bh
  43307d:	mov    esp,0xc6191400
  433082:	add    BYTE PTR [rdi],dl
  433084:	sbb    eax,0x201a00c7
  433089:	enter  0x1e00,0x24
  43308d:	retf   0x2100
  433090:	(bad)  
  433091:	retf   0x2600
  433094:	sub    al,0xcb
  433096:	add    BYTE PTR [rdx],ch
  433098:	xor    ch,cl
  43309a:	add    BYTE PTR [rdx+rsi*1],ch
  43309d:	int    0x0
  43309f:	cmp    bh,BYTE PTR [rdi]
  4330a1:	rol    DWORD PTR [rax],0x30
  4330a4:	ss iret 
  4330a6:	add    BYTE PTR [rbx],dh
  4330a8:	cmp    bh,cl
  4330aa:	add    BYTE PTR [rbx],bh
  4330ac:	rol    DWORD PTR [r8],1
  4330af:	rex.B
  4330b0:	(bad)
  4330b4:	rex.WRX retf 0x5000
  4330b8:	push   rbp
  4330b9:	(bad)  
  4330ba:	add    BYTE PTR [rcx+0x47],al
  4330bd:	rol    DWORD PTR [rax],cl
  4330bf:	rex.RX
  4330c0:	rex.WXB (bad) 
  4330c2:	add    BYTE PTR [rax+0x4e],cl
  4330c5:	(bad)  
  4330c6:	add    BYTE PTR [rbx+0x50],cl
  4330c9:	(bad)  
  4330ca:	add    BYTE PTR [rcx+rdx*2-0x2a],cl
  4330ce:	add    BYTE PTR [rax+0x55],dl
  4330d1:	xlat   BYTE PTR ds:[rbx]
  4330d2:	add    BYTE PTR [rsi+0x5b],dl
  4330d5:	rol    DWORD PTR [rax],cl
  4330d7:	push   rdx
  4330d8:	push   rdi
  4330d9:	fadd   DWORD PTR [rax]
  4330db:	push   rsi
  4330dc:	pop    rsp
  4330dd:	fiadd  DWORD PTR [rax]
  4330df:	pop    rdx
  4330e0:	pop    rsi
  4330e1:	fld    DWORD PTR [rax]
  4330e3:	pop    rbx
  4330e4:	(bad)  
  4330e5:	xlat   BYTE PTR ds:[rbx]
  4330e6:	add    BYTE PTR [rsi+0x63],bl
  4330e9:	fild   DWORD PTR [rax]
  4330eb:	(bad)  
  4330ec:	data16 fild DWORD PTR [rax]
  4330ef:	fs push 0xffffffffffffffdc
  4330f2:	add    BYTE PTR [rcx+0x6f],ch
  4330f5:	fiadd  WORD PTR [rax]
  4330f7:	outs   dx,DWORD PTR ds:[rsi]
  4330f8:	je     0x4330da
  4330fa:	add    BYTE PTR [rbp+0x79],dh
  4330fd:	loop   0x4330ff
  4330ff:	je     0x4330df
  433101:	xchg   BYTE PTR [rax],al
  433103:	jp     0x4330e2
  433105:	mov    al,BYTE PTR [rax]
  433107:	jae    0x4330ee
  433109:	xchg   BYTE PTR [rax],al
  43310b:	jg     0x4330ef
  43310d:	pop    QWORD PTR [rax]
  43310f:	jns    0x4330fd
  433111:	lea    eax,[rax]
  433113:	jnp    0x433096
  433115:	in     al,0x0
  433117:	xchg   edi,eax
  433118:	xchg   BYTE PTR [rdx-0x7a756c00],al
  43311e:	add    BYTE PTR [rsi-0x69ff7f75],bl
  433124:	mov    WORD PTR [rcx-0x756e6500],cs
  43312a:	add    BYTE PTR [rsi-0x63ff6e6b],bl
  433130:	cwde   
  433131:	xchg   esi,eax
  433132:	add    BYTE PTR [rbx-0x5dff7a7b],ch
  433138:	mov    es,WORD PTR [rbx-0x75755200]
  43313e:	add    BYTE PTR [rdx-0x59ff7a6d],ch
  433144:	xchg   ebx,eax
  433145:	mov    DWORD PTR [rax],eax
  433147:	mov    dl,0x9a
  433149:	mov    WORD PTR [rax],es
  43314b:	movabs ds:0xa400929bac009198,eax
  433154:	popf   
  433155:	cdq    
  433156:	add    BYTE PTR [rbx+rdx*4-0x624fff6d],dh
  43315d:	xchg   ebp,eax
  43315e:	add    BYTE PTR [rdx-0x53ff6263],bh
  433164:	movabs al,ds:0xa3bc0094a0b40098
  43316d:	xchg   ebp,eax
  43316e:	add    BYTE PTR [rbx-0x43ff695c],bh
  433174:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  433175:	xchg   ebp,eax
  433176:	add    BYTE PTR [rdi-0x53ff6559],bh
  43317c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  43317d:	movabs eax,ds:0xa9acbb00a2a5bc00
  433186:	add    BYTE PTR [rdi-0x3dff4e4a],bh
  43318c:	lods   al,BYTE PTR ds:[rsi]
  43318d:	movabs al,ds:0xa6b1c600aaacc200
  433196:	add    ch,al
  433198:	mov    ch,0xae
  43319a:	add    dl,cl
  43319c:	mov    dh,0xab
  43319e:	add    bl,al
  4331a0:	mov    bl,0xb0
  4331a2:	add    ah,cl
  4331a4:	mov    ah,0xb3
  4331a6:	add    cl,cl
  4331a8:	mov    dh,0xb5
  4331aa:	add    ah,cl
  4331ac:	mov    ah,0xb4
  4331ae:	add    dl,al
  4331b0:	mov    ecx,0xb8ca00b4
  4331b5:	mov    dh,0x0
  4331b7:	(bad)  
  4331b8:	mov    edi,0xbbcd00b9
  4331bd:	mov    edx,0xb4bdd000
  4331c2:	add    al,dl
  4331c4:	mov    esi,0xe98600bc
  4331c9:	xchg   esi,eax
  4331ca:	add    BYTE PTR [rdx-0x73ff6413],cl
  4331d0:	lock sahf 
  4331d2:	add    BYTE PTR [rsi-0x6fff5e0e],cl
  4331d8:	lock movabs eax,ds:0xb8c1d300bac1ce00
  4331e2:	add    cl,dl
  4331e4:	sar    DWORD PTR [rbp-0x423b3000],0x0
  4331eb:	fmul   st,st(0)
  4331ed:	mov    edi,0xe6868100
  4331f2:	add    BYTE PTR [rbp-0x79ff1976],al
  4331f8:	mov    ebp,eax
  4331fa:	add    BYTE PTR [rcx+rdx*4-0x6c6fff17],cl
  433201:	out    0x0,eax
  433203:	nop
  433204:	xchg   ebp,eax
  433205:	(bad)  
  433206:	add    BYTE PTR [rsi-0x65ff1365],dl
  43320c:	popf   
  43320d:	jmp    0x43320f
  43320f:	movabs ds:0xb400efaeac00eda6,al
  433218:	mov    bh,0xf1
  43321a:	add    BYTE PTR [rdx-0x30ff0c43],bh
  433220:	mov    bl,0x0
  433223:	rol    dl,cl
  433225:	rol    DWORD PTR [rax],0xd3
  433228:	(bad)
  43322c:	(bad)
  433230:	(bad)
  433233:	(bad)  
  433234:	retf   0xc3
  433237:	xlat   BYTE PTR ds:[rbx]
  433238:	enter  0xc6,0xda
  43323c:	leave  
  43323d:	ret    
  43323e:	add    al,bl
  433240:	enter  0xc6,0xdb
  433244:	int    0xc6
  433246:	add    ch,bl
  433248:	iret   
  433249:	mov    DWORD PTR [rax],0xcec9d7
  43324f:	fxch   st(2)
  433251:	enter  0xda00,0xcc
  433255:	retf   0xdc00
  433258:	int    0xcb
  43325a:	add    bl,bl
  43325c:	int    0xcc
  43325e:	add    ch,bl
  433260:	int    0xcc
  433262:	add    dh,bl
  433264:	ror    edx,1
  433266:	add    dl,bl
  433268:	ror    ebp,1
  43326a:	add    dh,bl
  43326c:	ror    dh,1
  43326e:	add    bh,cl
  433270:	(bad)  
  433271:	rol    DWORD PTR [rax],cl
  433273:	fst    st(3)
  433275:	rol    BYTE PTR [rax],1
  433277:	loopne 0x43324d
  433279:	int    0x0
  43327b:	loopne 0x43324f
  43327d:	rol    BYTE PTR [rax],1
  43327f:	loopne 0x433255
  433281:	rol    BYTE PTR [rax],cl
  433283:	loop   0x43325b
  433285:	(bad)  
  433286:	add    ah,ah
  433288:	xlat   BYTE PTR ds:[rbx]
  433289:	(bad)  
  43328a:	add    ch,ah
  43328c:	(bad)  
  43328e:	add    ah,ah
  433290:	fcmovnu st,st(1)
  433292:	add    cl,ch
  433294:	(bad)  
  433296:	add    bl,ch
  433298:	loopne 0x433278
  43329a:	add    dl,bl
  43329c:	(bad)  
  43329e:	add    ah,ch
  4332a0:	loop   0x433282
  4332a2:	add    bl,ch
  4332a4:	in     al,0xe0
  4332a6:	add    dh,ch
  4332a8:	in     al,0xe2
  4332aa:	add    dh,ch
  4332ac:	call   0xffffffffe8333396
  4332b1:	in     eax,0x0
  4332b3:	bnd jmp 0xffffffffee3733a0
  4332b9:	jmp    0x4332bb
  4332bb:	in     al,0xf7
  4332bd:	out    0x0,eax
  4332bf:	in     eax,0xf7
  4332c1:	call   0xffffffffef3428c6
  4332c6:	add    al,bh
  4332c8:	icebp  
  4332c9:	out    dx,eax
  4332ca:	add    dl,ah
  4332cc:	jrcxz  0x4332c8
  4332ce:	add    ah,ch
  4332d0:	in     al,dx
  4332d1:	sti    
  4332d2:	add    cl,bh
  4332d4:	repnz lock add bl,bh
  4332d8:	stc    
  4332d9:	stc    
  4332da:	add    ch,bh
  4332dc:	cld    
  4332dd:	sti    
  4332de:	add    dh,bh
  4332e0:	(bad)  
  4332e1:	inc    BYTE PTR [rax]
  4332e3:	(bad)  
  4332e4:	(bad)  
  4332e5:	inc    DWORD PTR [rax]
	...
  4332f3:	add    BYTE PTR [rax],al
  4332f5:	(bad)  
  4332f6:	sbb    al,0x1a
  4332f8:	add    BYTE PTR [rax],al
  4332fa:	add    BYTE PTR [rax],al
  4332fc:	add    BYTE PTR [rax],al
  4332fe:	adc    DWORD PTR [rcx],edx
  433300:	or     eax,0xd
	...
  433311:	add    BYTE PTR [rax],al
  433313:	add    BYTE PTR [rax-0x10],dl
  433316:	mov    esi,0x5a3
  43331b:	add    BYTE PTR [rax],al
  43331d:	push   0x5a
  43331f:	pop    rcx
  433320:	pop    rcx
  433321:	pop    rcx
  433322:	or     DWORD PTR [rax],eax
  433324:	add    BYTE PTR [rax],al
  433326:	add    BYTE PTR [rax],al
  433328:	add    BYTE PTR [rax],al
  43332a:	add    BYTE PTR [rsp+rbp*1],ch
  43332d:	sub    al,0x2c
  43332f:	sub    al,0x2c
  433331:	sub    al,0x2c
  433333:	sub    al,0x54
  433335:	(bad)  
  433336:	mov    esi,0x2c2c06a3
  43333b:	sub    al,0x2c
  43333d:	imul   edi,DWORD PTR [rcx+0x67],0x67
  433341:	pop    rdx
  433342:	or     DWORD PTR [rax],eax
  433344:	add    BYTE PTR [rax],al
  433346:	add    BYTE PTR [rax],al
  433348:	add    BYTE PTR [rax],al
  43334a:	add    BYTE PTR [rcx+riz*8],ch
  43334d:	(bad)  
  43334f:	(bad)  
  433350:	(bad)  
  433351:	(bad)  
  433352:	(bad)  
  433353:	mov    ch,0x57
  433355:	(bad)  
  433356:	mov    esi,0xb0b008a3
  43335b:	mov    al,0xb0
  43335d:	ins    DWORD PTR es:[rdi],dx
  43335e:	jl     0x4333c9
  433360:	push   0x95d
  433365:	add    BYTE PTR [rax],al
  433367:	add    BYTE PTR [rax],al
  433369:	add    BYTE PTR [rax],al
  43336b:	sub    al,0xe5
  43336d:	(bad)  
  43336f:	(bad)  
  433371:	(bad)  
  433372:	mov    bh,0xd4
  433374:	xchg   esi,eax
  433375:	(bad)  
  433376:	mov    esi,0xb0b318a3
  43337b:	mov    al,0xb0
  43337d:	jo     0x4333fd
  43337f:	imul   ebp,DWORD PTR [rdx+0x5e],0x9
	...
  43338b:	sub    al,0xe5
  43338d:	in     eax,0xdc
  43338f:	(bad)  
  433391:	(bad)  
  433392:	(bad)  
  433393:	(bad)  
  433394:	cwde   
  433395:	(bad)  
  433396:	mov    esi,0xb0b51aa3
  43339b:	mov    al,0xb0
  43339d:	jno    0x433320
  43339f:	outs   dx,DWORD PTR ds:[rsi]
  4333a0:	ins    DWORD PTR es:[rdi],dx
  4333a1:	pop    rdi
  4333a2:	or     DWORD PTR [rax],eax
  4333a4:	add    BYTE PTR [rax],al
  4333a6:	add    BYTE PTR [rax],al
  4333a8:	add    BYTE PTR [rax],al
  4333aa:	add    BYTE PTR [rax+rbp*8],ch
  4333ad:	in     eax,0xe6
  4333af:	(bad)  
  4333b1:	(bad)  
  4333b3:	mov    bh,0xa1
  4333b5:	(bad)  
  4333b6:	mov    esi,0xb3b51ea3
  4333bb:	mov    al,0xb0
  4333bd:	jne    0x433342
  4333bf:	jno    0x433431
  4333c1:	(bad)  
  4333c2:	or     eax,0x0
  4333c7:	add    BYTE PTR [rax],al
  4333c9:	add    BYTE PTR [rax],al
  4333cb:	sub    al,0xe9
  4333cd:	call   0xffffffffdd201ab7
  4333d2:	(bad)  
  4333d3:	fsubr  QWORD PTR [rcx+0x1fa3beff]
  4333d9:	mov    ch,0xb5
  4333db:	mov    bl,0xb3
  4333dd:	ja     0x433364
  4333df:	jbe    0x433452
  4333e1:	outs   dx,BYTE PTR ds:[rsi]
  4333e2:	or     eax,0x0
  4333e7:	add    BYTE PTR [rax],al
  4333e9:	add    BYTE PTR [rax],al
  4333eb:	sub    al,0xe9
  4333ed:	jmp    0xffffffffdd2a19da
  4333f2:	(bad)  
  4333f4:	lods   eax,DWORD PTR ds:[rsi]
  4333f5:	(bad)  
  4333f6:	mov    esi,0xb5b523a3
  4333fb:	mov    ch,0xb5
  4333fd:	jns    0x43338a
  4333ff:	jl     0x43347a
  433401:	jb     0x433414
	...
  43340b:	sub    al,0xeb
  43340d:	xor    al,0x39
  43340f:	in     eax,0xe6
  433411:	loope  0x4333f4
  433413:	fdiv   QWORD PTR [rbx+0x25a3beff]
  433419:	mov    bh,0xb7
  43341b:	mov    ch,0xb3
  43341d:	jle    0x4333e2
  43341f:	cmp    BYTE PTR [rbx+rsi*2+0x12],0x0
  433424:	add    BYTE PTR [rax],al
  433426:	add    BYTE PTR [rax],al
  433428:	add    BYTE PTR [rax],al
  43342a:	add    BYTE PTR [rsp+rbp*8],ch
  43342d:	xor    al,0x34
  43342f:	cmp    ebp,esp
  433431:	in     eax,0xe1
  433433:	mov    bh,0xc1
  433435:	call   rbp
  433437:	movabs ds:0x83c681b5b5b7ac27,eax
  433440:	(bad)  
  433441:	je     0x433456
	...
  43344b:	sub    al,0xf0
  43344d:	xor    al,0xf6
  43344f:	xor    al,0x3a
  433451:	call   0x45d2a
  433456:	in     al,0xab
  433458:	sub    BYTE PTR [rdi],bl
  43345a:	lods   al,BYTE PTR ds:[rsi]
  43345b:	mov    bh,0xb5
  43345d:	(bad)  
  43345e:	leave  
  43345f:	test   DWORD PTR [rbx+rdi*2+0x14],eax
  433466:	add    BYTE PTR [rax],al
  433468:	add    BYTE PTR [rax],al
  43346a:	add    BYTE PTR [rax+rsi*8],ch
  43346d:	xor    al,0x87
  43346f:	div    BYTE PTR [rcx+rdi*1]
  433472:	sub    BYTE PTR [rbp-0x1913002b],ch
  433478:	rcl    DWORD PTR [rdi+0x4],cl
  43347b:	stos   BYTE PTR es:[rdi],al
  43347c:	mov    esi,0x8bc2ca84
  433481:	jg     0x4334e4
  433483:	add    BYTE PTR [rax],al
  433485:	add    BYTE PTR [rax],al
  433487:	xor    al,0x34
  433489:	xor    al,0x34
  43348b:	xor    al,0x34
  43348d:	xor    al,0x89
  43348f:	cmp    al,0xf6
  433491:	xor    al,0x3a
  433493:	icebp  
  433494:	(bad)  
  433495:	(bad)  
  433496:	(bad)  
  433497:	push   rcx
  433499:	rcl    BYTE PTR [rbx-0x6c],0xcf
  43349d:	test   ebx,ecx
  43349f:	(bad)
  4334a2:	(bad)  
  4334a3:	add    BYTE PTR [rax],al
  4334a5:	add    BYTE PTR [rax],al
  4334a7:	xor    DWORD PTR [rcx-0x46454546],edi
  4334ad:	mov    eax,0xf63c3d44
  4334b2:	xor    al,0x38
  4334b4:	mov    esi,0xffa02525
  4334b9:	icebp  
  4334ba:	xchg   esi,eax
  4334bb:	(bad)  
  4334bc:	(bad)  
  4334bd:	mov    ecx,esp
  4334bf:	enter  0x82c7,0x63
  4334c3:	add    BYTE PTR [rax],al
  4334c5:	add    BYTE PTR [rax],al
  4334c7:	xor    DWORD PTR [rsi+0x48],ecx
  4334ca:	rex.WB
  4334cb:	rex.WX
  4334cc:	rex.W
  4334cd:	rex.XB
  4334ce:	rex (bad) 
  4334d0:	cmp    eax,0x3834f53b
  4334d5:	(bad)  
  4334d6:	in     eax,0xbe
  4334d8:	out    0xff,al
  4334da:	movabs al,ds:0x6482cccdcdc3d408
  4334e3:	add    BYTE PTR [rax],al
  4334e5:	add    BYTE PTR [rax],al
  4334e7:	xor    DWORD PTR [rsi+0x43],eax
  4334ea:	rex.W
  4334eb:	rex.WX
  4334ec:	rex.WB
  4334ed:	rex.W
  4334ee:	rex.XB
  4334ef:	rex
  4334f0:	ds cmp eax,0xe534f63b
  4334f6:	call   0xffffffffa142f5e1
  4334fb:	sbb    al,0xd4
  4334fd:	ret    
  4334fe:	cli    
  4334ff:	stc    
  433500:	in     eax,dx
  433501:	int3   
  433502:	add    BYTE PTR fs:[rax],al
  433505:	add    BYTE PTR [rax],al
  433507:	xor    DWORD PTR [rsi+0x49484842],eax
  43350d:	rex.WB
  43350e:	rex.XB
  43350f:	rex.XB
  433510:	rex
  433511:	rex.RXB xor r14d,DWORD PTR ds:[rip+0xffffffffff28e51c]        # 0xffffffffff6c1a35
  433519:	jmp    QWORD PTR [rax+0x29cad59a]
  43351f:	lahf   
  433520:	push   rcx
  433521:	add    DWORD PTR [rbp+0x0],esp
  433524:	add    BYTE PTR [rax],al
  433526:	add    BYTE PTR [rcx],dh
  433528:	xchg   DWORD PTR [rbp+0x4c],eax
  43352b:	rex.WXB
  43352c:	rex.WX
  43352d:	rex.WB
  43352e:	rex.WB
  43352f:	rex.XB
  433530:	mov    BYTE PTR [r11],sil
  433533:	call   FWORD PTR ss:[rcx+rbp*8]
  433537:	(bad)  
  433538:	jmp    FWORD PTR [rsi+rdx*4+0x26e2dcac]
  43353f:	loopne 0x4334d0
  433541:	add    DWORD PTR [rax],eax
  433543:	add    BYTE PTR [rax],al
  433545:	add    BYTE PTR [rax],al
  433547:	xor    dh,BYTE PTR [rcx]
  433549:	xor    DWORD PTR [rcx],esi
  43354b:	xor    DWORD PTR [rcx],esi
  43354d:	xor    DWORD PTR [rbp+0x4a],ecx
  433550:	mov    dh,BYTE PTR [rbx]
  433552:	(bad)  
  433553:	stos   DWORD PTR es:[rdi],eax
  433554:	cwde   
  433555:	push   rdi
  433556:	jmp    0xffffffffc09ace07
  43355b:	loope  0x433539
  43355d:	fimul  DWORD PTR [rbp+0x290e7]
	...
  43356b:	sub    al,0xf8
  43356d:	xor    DWORD PTR [rdi-0x45],ecx
  433570:	xor    edi,DWORD PTR [rax]
  433572:	icebp  
  433573:	lock lock lock jmp 0x433561
  433578:	jmp    0xffffffffe7291b62
  43357d:	fmul   QWORD PTR [rsi+0x1591ea]
	...
  43358b:	sub    al,0xfb
  43358d:	xor    DWORD PTR [rbx+rsi*1-0xd0c0bc7],edi
  433594:	lock lock jmp 0x433583
  433598:	shl    BYTE PTR [rsi],0x22
  43359b:	mov    ch,0xe1
  43359d:	lods   al,BYTE PTR ds:[rsi]
  43359e:	xchg   edi,eax
  43359f:	iret   
  4335a0:	lahf   
  4335a1:	sbb    DWORD PTR [rax],eax
  4335a3:	add    BYTE PTR [rax],al
  4335a5:	add    al,BYTE PTR [rbx]
  4335a7:	add    BYTE PTR [rax],al
  4335a9:	add    BYTE PTR [rax],al
  4335ab:	sub    al,0xfb
  4335ad:	xor    DWORD PTR [rbx],esi
  4335af:	cmp    dh,bh
  4335b1:	hlt    
  4335b2:	hlt    
  4335b3:	repz lock lock lock in al,dx
  4335b8:	(bad)  
  4335b9:	loope  0x43356f
  4335bb:	xchg   esp,eax
  4335bc:	sub    bl,BYTE PTR [rcx+0x22a7e09d]
  4335c2:	(bad)  
  4335c3:	(bad)  
  4335c4:	(bad)  
  4335c5:	(bad)  
  4335c6:	(bad)  
  4335c7:	add    BYTE PTR [rax],al
  4335c9:	add    BYTE PTR [rax],al
  4335cb:	sub    al,0xfb
  4335cd:	xor    BYTE PTR [rdx],bh
  4335cf:	sti    
  4335d0:	div    esp
  4335d2:	hlt    
  4335d3:	hlt    
  4335d4:	hlt    
  4335d5:	lock lock lock (bad) 
  4335d9:	(bad)  
  4335da:	jmp    0xffffffffe8f01a9f
  4335df:	fdiv   DWORD PTR [rsi-0x57dbd56c]
  4335e5:	sbb    eax,0x91
  4335ea:	add    BYTE PTR [rdi+rsi*8],ch
  4335ed:	idiv   ebx
  4335ef:	idiv   ebx
  4335f1:	sti    
  4335f2:	sti    
  4335f3:	div    edi
  4335f5:	sti    
  4335f6:	sti    
  4335f7:	neg    DWORD PTR [rdx-0x3f160e01]
  4335fd:	in     al,0xff
  4335ff:	mul    ecx
  433601:	lods   eax,DWORD PTR ds:[rsi]
  433602:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  433603:	call   0x435732
  433608:	add    BYTE PTR [rax],al
  43360a:	add    BYTE PTR [rsp+rbp*1],ch
  43360d:	sub    al,0x2c
  43360f:	sub    al,0x2c
  433611:	sub    al,0x2c
  433613:	sub    al,0x2c
  433615:	sub    al,0x2c
  433617:	sub    al,0x8e
  433619:	(bad)  
  43361a:	jmp    QWORD PTR [rbp-0x3274e]
  433620:	hlt    
  433621:	icebp  
  433622:	icebp  
  433623:	lea    edx,[rdx+0x0]
  433626:	add    BYTE PTR [rax],al
  433628:	add    BYTE PTR [rax],al
  43362a:	sub    al,0x2c
  43362c:	sub    al,0x2c
  43362e:	sub    al,0x2f
  433630:	(bad)  
  433631:	xchg   ebp,eax
  433632:	pushf  
  433633:	pushf  
  433634:	sahf   
  433635:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  433636:	stos   BYTE PTR es:[rdi],al
  433637:	stos   BYTE PTR es:[rdi],al
  433638:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  433639:	(bad)  
  43363a:	popf   
  43363b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  43363c:	lods   al,BYTE PTR ds:[rsi]
  43363d:	out    0x9b,al
  43363f:	cdq    
  433640:	xchg   ecx,eax
  433641:	xchg   ecx,eax
  433642:	(bad)  
  433643:	lea    eax,[rax]
  433645:	add    BYTE PTR [rax],al
  433647:	add    BYTE PTR [rax],al
  433649:	sub    al,0xb0
  43364b:	sub    al,0x2c
  43364d:	sub    al,0x2c
  43364f:	sub    al,0x2c
  433651:	sub    al,0x2c
  433653:	sub    al,0x2c
  433655:	sub    al,0x2c
  433657:	sub    al,0x2c
  433659:	sub    al,0x2c
  43365b:	sub    al,0x2c
  43365d:	sub    ebp,DWORD PTR [rbx]
  43365f:	cs cmps DWORD PTR cs:[rsi],DWORD PTR es:[rdi]
  433662:	add    BYTE PTR cs:[rax],al
  433665:	add    BYTE PTR [rax],al
  433667:	add    BYTE PTR [rax+rsi*4],ch
  43366a:	sub    al,0x0
  43366c:	sub    al,0xb0
  43366e:	mov    al,0xb1
  433670:	mov    al,0xb0
  433672:	mov    cl,0xb0
  433674:	mov    al,0xb0
  433676:	mov    al,0xb0
  433678:	mov    al,0xb1
  43367a:	mov    al,0xb0
  43367c:	mov    al,0xb0
  43367e:	mov    cl,0x2c
  433680:	add    BYTE PTR [rbx+rsi*4],ch
  433683:	sub    al,0x0
  433685:	add    BYTE PTR [rax],al
  433687:	sub    al,0x2c
  433689:	sub    al,0x0
  43368b:	add    BYTE PTR [rsi+rbx*8],ch
  43368e:	(bad)  
  433690:	(bad)  
  433692:	(bad)  
  433694:	(bad)  
  433696:	(bad)  
  433698:	(bad)  
  43369a:	(bad)  
  43369c:	(bad)  
  43369e:	fisubr WORD PTR [rax+rax*1]
  4336a1:	add    BYTE PTR [rsp+rbp*1],ch
  4336a4:	sub    al,0x0
  4336a6:	add    BYTE PTR [rax],al
  4336a8:	add    BYTE PTR [rax],al
  4336aa:	add    BYTE PTR [rax],al
  4336ac:	sub    al,0xf0
  4336ae:	in     al,dx
  4336af:	lock lock lock lock lock in al,dx
  4336b5:	lock lock out dx,al
  4336b8:	bnd jmp 0x4336ad
  4336bb:	out    dx,al
  4336bc:	lock out dx,al
  4336be:	repnz sub al,0x0
	...
  4336c9:	add    BYTE PTR [rax],al
  4336cb:	add    BYTE PTR [rsp+rbp*1],ch
  4336ce:	sub    al,0x2c
  4336d0:	sub    al,0x2c
  4336d2:	sub    al,0x2c
  4336d4:	sub    al,0x2c
  4336d6:	sub    al,0x2c
  4336d8:	sub    al,0x2c
  4336da:	sub    al,0x2c
  4336dc:	sub    al,0x2c
  4336de:	sub    al,0x2c
  4336e0:	add    BYTE PTR [rax],al
  4336e2:	add    BYTE PTR [rax],al
  4336e4:	add    BYTE PTR [rax],al
  4336e6:	add    bh,bh
  4336e8:	cld    
  4336e9:	jle    0x43370a
  4336eb:	(bad)  
  4336ec:	clc    
  4336ed:	cmp    al,0xf
  4336ef:	lock add BYTE PTR [rax],al
  4336f2:	(bad)  
  4336f4:	add    BYTE PTR [rax],al
  4336f6:	(bad)  
  4336f8:	add    BYTE PTR [rax],al
  4336fa:	(bad)  
  4336fc:	add    BYTE PTR [rax],al
  4336fe:	(bad)  
  433700:	add    BYTE PTR [rax],al
  433702:	(bad)  
  433704:	add    BYTE PTR [rax],al
  433706:	(bad)  
  433708:	add    BYTE PTR [rax],al
  43370a:	(bad)  
  43370c:	add    BYTE PTR [rax],al
  43370e:	(bad)  
  433710:	add    BYTE PTR [rax],al
  433712:	(bad)  
  433714:	add    BYTE PTR [rax],al
  433716:	(bad)  
  433718:	add    BYTE PTR [rax],al
  43371a:	sldt   WORD PTR [rax]
  43371d:	add    BYTE PTR [rdi],cl
  43371f:	add    BYTE PTR [rax],al
  433721:	add    BYTE PTR [rdi],cl
  433723:	add    BYTE PTR [rax],al
  433725:	add    BYTE PTR [rdi],cl
  433727:	add    BYTE PTR [rax],al
  433729:	add    BYTE PTR [rdi],cl
  43372b:	add    BYTE PTR [rax],al
  43372d:	add    BYTE PTR [rdi],cl
  43372f:	add    BYTE PTR [rax],al
  433731:	add    BYTE PTR [rdi],bl
  433733:	add    BYTE PTR [rax],al
  433735:	add    BYTE PTR [rdi],bl
  433737:	lock add BYTE PTR [rax],al
  43373a:	(bad)  
  43373b:	lock add BYTE PTR [rax],al
  43373e:	sbb    al,0xf0
  433740:	add    BYTE PTR [rax],al
  433742:	add    al,dh
  433744:	add    BYTE PTR [rax],al
  433746:	add    al,dh
  433748:	add    BYTE PTR [rax],al
  43374a:	add    eax,esi
  43374c:	add    BYTE PTR [rax],al
  43374e:	add    esp,eax
  433750:	add    BYTE PTR [rax],al
  433752:	(bad)  
  433753:	rol    BYTE PTR [rax],0x0
  433756:	js     0x188a375c
  43375c:	add    BYTE PTR [rax],al
  43375e:	movsxd edi,eax
  433760:	add    BYTE PTR [rax],al
  433762:	jg     0x43375c
  433764:	add    BYTE PTR [rax],al
  433766:	jg     0x433790
  433768:	add    BYTE PTR [rax],al
  43376a:	add    BYTE PTR [rax],dl
  43376c:	add    BYTE PTR [rax],al
  43376e:	add    BYTE PTR [rax],ah
  433770:	add    BYTE PTR [rax],al
  433772:	add    BYTE PTR [rcx],al
  433774:	add    BYTE PTR [rax],cl
  433776:	add    BYTE PTR [rax],al
  433778:	add    BYTE PTR [rax],al
  43377a:	add    BYTE PTR [rax],al
  43377c:	add    DWORD PTR [rax],eax
	...
  433786:	add    BYTE PTR [rax],al
  433788:	add    DWORD PTR [rax],eax
  43378a:	add    BYTE PTR [rax],al
  43378c:	add    DWORD PTR [rax],eax
  43378e:	add    BYTE PTR [rax],al
  433790:	add    BYTE PTR [rax],al
  433792:	add    BYTE PTR [rax+rbx*2+0x4c],ah
  433796:	add    BYTE PTR [rbp+0x4d],ah
  433799:	pop    rax
  43379a:	add    BYTE PTR [rbp+0x5b],ch
  43379d:	jp     0x43379f
  43379f:	jnp    0x433814
  4337a1:	ins    BYTE PTR es:[rdi],dx
  4337a2:	add    BYTE PTR [rdi-0x44ffc49b],ch
  4337a8:	outs   dx,BYTE PTR ds:[rsi]
  4337a9:	rex.WB add BYTE PTR [r11+0x14007878],spl
  4337b0:	scas   eax,DWORD PTR es:[rdi]
  4337b1:	add    BYTE PTR ss:[rax],bl
  4337b4:	mov    edx,0xbc1e003c
  4337b9:	add    BYTE PTR [r11],sil
  4337bc:	lods   eax,DWORD PTR ds:[rsi]
  4337bd:	rex.WX add BYTE PTR [rax],spl
  4337c0:	mov    edi,0xbb2f0043
  4337c5:	rex.WRXB add BYTE PTR [r13-0x67],r11b
  4337c9:	pop    rbp
  4337ca:	add    BYTE PTR [rdx],ch
  4337cc:	mov    DWORD PTR [rdx+0x0],0x43c92b
  4337d3:	xor    al,0xd3
  4337d5:	rex.WRX add BYTE PTR [rdx],r15b
  4337d8:	fist   DWORD PTR [rsi+0x0]
  4337db:	cmp    eax,0x420058dd
  4337e0:	in     al,0x5e
  4337e2:	add    BYTE PTR [rbp-0x24],ah
  4337e5:	js     0x4337e7
  4337e7:	rex.R call 0xffffffff86d6384d
  4337ed:	js     0x4337ef
  4337ef:	(bad)  
  4337f0:	xchg   ebx,eax
  4337f1:	jbe    0x4337f3
  4337f3:	in     eax,dx
  4337f4:	movabs ds:0x1932008f142f007c,al
  4337fd:	test   BYTE PTR [rax],al
  4337ff:	cmp    ebx,DWORD PTR [rdi]
  433801:	(bad)  
  433802:	add    BYTE PTR [rdx],dh
  433804:	and    BYTE PTR [rsi-0x5ee1d000],bl
  43380a:	add    BYTE PTR [rdi],dh
  43380c:	sub    eax,0x333c00ae
  433811:	mov    bl,0x0
  433813:	(bad)  
  433814:	cmp    eax,eax
  433816:	add    BYTE PTR [rsi+0x48],al
  433819:	enter  0x6400,0x6a
  43381d:	fld    QWORD PTR [rax]
  43381f:	rex.R push rdi
  433821:	in     al,0x0
  433823:	outs   dx,BYTE PTR ds:[rsi]
  433824:	call   0xffffffffe3bc38ad
  433829:	mov    al,BYTE PTR [rax]
  43382b:	jg     0x433815
  43382d:	nop
  43382e:	add    BYTE PTR [rdi-0x62ff6576],cl
  433834:	xchg   esp,eax
  433835:	movabs al,ds:0xb6bfbf00b0b6bd00
  43383e:	add    ah,al
  433840:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  433841:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  433842:	add    bh,bl
  433844:	mov    ch,0xa3
  433846:	add    cl,cl
  433848:	mov    dh,0xb5
  43384a:	add    dh,al
  43384c:	mov    esi,0xbacc00b9
  433851:	mov    ecx,0xb0bede00
  433856:	add    al,dl
  433858:	mov    edi,0xd69500be
  43385d:	movabs eax,ds:0xa4d99700a2d89600
  433866:	add    BYTE PTR [rax-0x6dff5a26],bl
  43386c:	test   eax,0xc4c900ff
  433871:	rol    BYTE PTR [rax],0xd4
  433874:	(bad)
  433878:	(bad)  
  433879:	(bad)  
  43387a:	add    dl,ch
  43387c:	(bad)  
  43387d:	ret    
  43387e:	add    ch,dh
  433880:	fxch   st(1)
  433882:	add    cl,bh
  433884:	fcmove st,st(2)
  433886:	add    al,ah
  433888:	rcl    cl,cl
  43388a:	add    ah,ah
  43388c:	fcom   st(5)
  43388e:	add    dl,ch
  433890:	fstp   st(2)
  433892:	add    ch,al
  433894:	cld    
  433895:	int    0x0
  433897:	jmp    0x43387a
  433899:	fild   WORD PTR [rax]
  43389b:	in     eax,dx
  43389c:	jrcxz  0x43387f
  43389e:	add    al,dh
  4338a0:	out    0xe5,eax
  4338a2:	add    bl,dh
  4338a4:	(bad)  
  4338a5:	call   0xffffffffed312aaa
  4338aa:	add    bh,dh
  4338ac:	hlt    
  4338ad:	repz add dl,bh
  4338b0:	div    dh
  4338b2:	add    bl,bh
  4338b4:	stc    
  4338b5:	clc    
	...
  433b8a:	add    bh,bh
  433b8c:	(bad)  
  433b8d:	inc    DWORD PTR [rax]
  433b8f:	add    BYTE PTR [rax],al
  433b91:	(bad)  
  433b92:	(bad)  
  433b93:	(bad)  
  433b94:	(bad)  
  433b95:	(bad)  
  433b96:	(bad)  
  433b97:	add    eax,0x1b070506
  433b9c:	sbb    al,0x0
  433b9e:	add    BYTE PTR [rax],al
  433ba0:	add    BYTE PTR [rdi],al
  433ba2:	cmp    DWORD PTR ds:[rcx],edi
  433ba5:	cmp    DWORD PTR [rcx],edi
  433ba7:	add    eax,0x1e2e0519
  433bac:	sbb    al,BYTE PTR [rax]
  433bae:	add    BYTE PTR [rax],al
  433bb0:	add    BYTE PTR [rsi],cl
  433bb2:	(bad)  
  433bb3:	rex.RX
  433bb4:	rex.XB
  433bb5:	rex.XB
  433bb6:	rex.RX add eax,0x2030053d
  433bbc:	sbb    eax,0x0
  433bc1:	(bad)  
  433bc2:	or     al,0xe
  433bc4:	rex.RX
  433bc5:	rex.XB
  433bc6:	rex.XB add eax,0x2232053d
  433bcc:	(bad)  
  433bcd:	add    BYTE PTR [rax],al
  433bcf:	(bad)  
  433bd0:	(bad)  
  433bd1:	(bad)  
  433bd2:	rex.B or al,0xe
  433bd5:	rex.RX
  433bd6:	rex add eax,0x2439053d
  433bdc:	and    DWORD PTR [rax],eax
  433bde:	add    BYTE PTR [rip+0x41102627],cl        # 0x4153620b
  433be4:	or     al,0xe
  433be6:	add    eax,0x53d3d3d
  433beb:	(bad)  
  433bec:	and    eax,DWORD PTR [rax]
  433bee:	add    BYTE PTR [rip+0xf111314],cl        # 0xf544f08
  433bf4:	or     DWORD PTR [r12+rdi*1],edx
  433bf8:	sub    eax,0x328053d
  433bfd:	add    BYTE PTR [rax],al
  433bff:	or     eax,0x15121416
  433c04:	or     BYTE PTR [rbx],dh
  433c06:	xor    DWORD PTR [rip+0x2918053b],eax        # 0x295b4147
  433c0c:	add    al,BYTE PTR [rax]
  433c0e:	add    BYTE PTR [rbx],cl
  433c10:	or     cl,BYTE PTR [rdx]
  433c12:	and    eax,0x43473408
  433c17:	rex.XB
  433c18:	rex.XB add al,0x3f
  433c1b:	add    al,0x1
  433c1d:	add    BYTE PTR [rdi],dl
  433c1f:	add    BYTE PTR [rax],al
  433c21:	or     cl,BYTE PTR [rax]
  433c23:	xor    al,0x48
  433c25:	rex.XB
  433c26:	rex.XB
  433c27:	rex.XB
  433c28:	rex.XB add al,0x4
  433c2b:	sub    ebp,DWORD PTR [rdx]
  433c2d:	add    al,0x2f
  433c2f:	add    BYTE PTR [rax],al
  433c31:	or     DWORD PTR [rsi],esi
  433c33:	rex.WB
  433c34:	rex.XB
  433c35:	rex.XB
  433c36:	rex.R
  433c37:	rex.RX
  433c38:	rex.R add al,0x42
  433c3b:	add    al,0x4
  433c3d:	cmp    BYTE PTR [rax],al
  433c3f:	add    BYTE PTR [rax],al
  433c41:	(bad)  
  433c42:	rex.WB
  433c43:	rex.WB
  433c44:	rex.WB
  433c45:	rex.WB
  433c46:	rex.WB
  433c47:	rex.WB
  433c48:	rex.WB
  433c49:	rex.WB
  433c4a:	rex.WB
  433c4b:	rex.WB (bad) 
  433c4d:	add    BYTE PTR [rax],al
  433c4f:	add    BYTE PTR [rax],al
  433c51:	(bad)  
  433c52:	(bad)  
  433c53:	(bad)  
  433c54:	(bad)  
  433c55:	(bad)  
  433c56:	(bad)  
  433c57:	(bad)  
  433c58:	(bad)  
  433c59:	(bad)  
  433c5a:	(bad)  
  433c5b:	(bad)  
  433c5c:	(bad)  
  433c5d:	add    BYTE PTR [rax],al
  433c5f:	add    BYTE PTR [rdi],al
  433c61:	add    BYTE PTR [rdi],al
  433c63:	sub    al,0x2c
  433c65:	sub    al,0x2c
  433c67:	sub    al,0x2c
  433c69:	sub    al,0x2c
  433c6b:	(bad)  
  433c6c:	add    BYTE PTR [rdi],al
  433c6e:	add    BYTE PTR [rdi],al
  433c70:	add    BYTE PTR [rax],al
  433c72:	(bad)  
  433c73:	cmp    bh,BYTE PTR [rdx]
  433c75:	cmp    bh,BYTE PTR [rdx]
  433c77:	cmp    bh,BYTE PTR [rdx]
  433c79:	cmp    bh,BYTE PTR [rdx]
  433c7b:	(bad)  
  433c7c:	add    BYTE PTR [rax],al
  433c7e:	(bad)  
  433c7f:	add    BYTE PTR [rax],al
  433c81:	add    BYTE PTR [rdi],al
  433c83:	(bad)  
  433c84:	(bad)  
  433c85:	(bad)  
  433c86:	(bad)  
  433c87:	(bad)  
  433c88:	(bad)  
  433c89:	(bad)  
  433c8a:	(bad)  
  433c8b:	(bad)  
  433c8c:	add    BYTE PTR [rax],al
  433c8e:	add    al,al
  433c90:	add    eax,DWORD PTR [rax]
  433c92:	add    al,al
  433c94:	add    eax,DWORD PTR [rax]
  433c96:	add    al,al
  433c98:	add    eax,DWORD PTR [rax]
  433c9a:	add    al,al
  433c9c:	add    eax,DWORD PTR [rax]
  433c9e:	add    BYTE PTR [rax],al
  433ca0:	add    eax,DWORD PTR [rax]
  433ca2:	add    BYTE PTR [rax],al
  433ca4:	add    eax,DWORD PTR [rax]
  433ca6:	add    BYTE PTR [rax],al
  433ca8:	add    eax,DWORD PTR [rax]
  433caa:	add    BYTE PTR [rax],al
  433cac:	add    eax,DWORD PTR [rax]
  433cae:	add    BYTE PTR [rax],al
  433cb0:	add    al,BYTE PTR [rax]
  433cb2:	add    al,al
  433cb4:	add    BYTE PTR [rax],al
  433cb6:	add    al,al
  433cb8:	add    DWORD PTR [rax],eax
  433cba:	add    al,al
  433cbc:	add    eax,DWORD PTR [rax]
  433cbe:	add    al,al
  433cc0:	add    eax,DWORD PTR [rax]
  433cc2:	add    BYTE PTR [rax+0x60000005],ah
  433cc8:	(bad)  
  433cc9:	add    BYTE PTR [rax],al
  433ccb:	loopne 0x433cd4
  433ccd:	add    BYTE PTR [rax],al
  433ccf:	sub    BYTE PTR [rax],al
  433cd1:	add    BYTE PTR [rax],al
  433cd3:	and    BYTE PTR [rax],al
  433cd5:	add    BYTE PTR [rax],al
  433cd7:	add    BYTE PTR [rax],al
  433cda:	add    BYTE PTR [rcx],al
  433cdc:	add    BYTE PTR [rax],ah
  433cde:	add    BYTE PTR [rax],al
  433ce0:	add    BYTE PTR [rax],al
  433ce2:	add    BYTE PTR [rax+0x10],al
	...
  433d28:	add    BYTE PTR [rax],al
  433d2a:	add    BYTE PTR [rcx+0x79387888],ah
  433d30:	(bad)  
  433d31:	rex.WRB push QWORD PTR [r14+0x5c]
  433d35:	rex.W push QWORD PTR [rdx+0x58]
  433d39:	rex.R jmp QWORD PTR [rcx+0x387888]
	...
  433d4c:	add    BYTE PTR [rax],al
  433d4e:	add    BYTE PTR [rcx],bl
  433d50:	(bad)  
  433d51:	lods   al,BYTE PTR ds:[rsi]
  433d52:	rex.RX (bad) 
  433d54:	and    eax,0x212bff6d
  433d59:	push   0xffffffffffffffff
  433d5b:	sub    DWORD PTR [rsi],ebx
  433d5d:	push   0x641b26ff
  433d62:	call   FWORD PTR [rax+rdx*1]
  433d65:	pop    rdx
  433d66:	rex.RX add BYTE PTR [rax],r8b
	...
  433da9:	add    BYTE PTR [rax],al
  433dab:	pushf  
  433dac:	sub    DWORD PTR [rdi-0x1],0xffe2e5ed
  433db3:	rol    edx,cl
  433db5:	mov    eax,0x95a4bcff
  433dba:	jmp    QWORD PTR [rcx+rcx*2+0x34]
  433dbe:	inc    DWORD PTR [rax]
	...
  433dcc:	add    BYTE PTR [rax],al
  433dce:	add    BYTE PTR [rcx],ah
  433dd0:	(bad)  
  433dd1:	retf   0x19ff
  433dd4:	(bad)  
  433dd5:	lods   al,BYTE PTR ds:[rsi]
  433dd6:	call   FWORD PTR [rax]
  433dd8:	sbb    eax,0x1c17ffab
  433ddd:	stos   BYTE PTR es:[rdi],al
  433dde:	call   QWORD PTR [rsi]
  433de0:	sbb    ebp,DWORD PTR [rdx+0x5a101cff]
  433de6:	inc    DWORD PTR [rax]
	...
  433e04:	add    BYTE PTR [rax],al
  433e06:	add    BYTE PTR [rbx-0x5c008788],ah
  433e0c:	js     0x433e86
  433e0e:	jmp    QWORD PTR [rbx-0x5c008788]
  433e14:	js     0x433e8e
  433e16:	jmp    QWORD PTR [rbx-0x5c008788]
  433e1c:	js     0x433e96
  433e1e:	jmp    QWORD PTR [rbx-0x5c008788]
  433e24:	js     0x433e9e
  433e26:	jmp    QWORD PTR [rbx-0x5e008788]
  433e2c:	xchg   DWORD PTR [rbp-0x1],esi
  433e2f:	(bad)  
  433e30:	(bad)  
  433e31:	(bad)  
  433e32:	call   rbx
  433e34:	sar    DWORD PTR [rcx-0x6a5b4301],0xff
  433e3b:	addr32 rex.WR cmp dil,r15b
  433e3f:	movabs ds:0xa3ff7878a3ff7878,eax
  433e48:	js     0x433ec2
  433e4a:	jmp    QWORD PTR [rbx+0x27ff7878]
  433e50:	sub    al,0xcb
  433e52:	dec    DWORD PTR [rcx+rdx*2-0x2a]
  433e56:	call   QWORD PTR [rdi]
  433e58:	sbb    eax,0x1914ffc7
  433e5d:	(bad)  
  433e5e:	call   FWORD PTR [rdx]
  433e60:	and    BYTE PTR [rbp+0x5a101cff],ch
  433e66:	inc    DWORD PTR [rax]
	...
  433e84:	add    BYTE PTR [rax],al
  433e86:	add    BYTE PTR [rbx-0x21008788],ah
  433e8c:	ror    dh,1
  433e8e:	(bad)  
  433e8f:	fmul   st(5),st
  433e91:	retf   
  433e92:	(bad)  
  433e93:	fcmove st,st(2)
  433e95:	leave  
  433e96:	call   rdi
  433e98:	enter  0xffc7,0xd6
  433e9c:	mov    ch,0xff
  433e9f:	(bad)  
  433ea0:	(bad)  
  433ea4:	ret    0xffc1
  433ea7:	rol    eax,1
  433ea9:	mov    esi,0x7c8da7ff
  433eae:	(bad)  
  433eaf:	(bad)  
  433eb0:	(bad)  
  433eb1:	(bad)  
  433eb2:	call   rbx
  433eb4:	sar    DWORD PTR [rax-0x695c4301],0xff
  433ebb:	push   0x50
  433ebd:	cmp    al,0xff
  433ebf:	leave  
  433ec0:	mov    dh,0xb5
  433ec2:	dec    ecx
  433ec4:	mov    dh,0xb5
  433ec6:	dec    ecx
  433ec8:	mov    dh,0xb5
  433eca:	dec    ecx
  433ecc:	mov    dh,0xb5
  433ece:	jmp    FWORD PTR [rdx+rsi*1]
  433ed1:	int    0xff
  433ed3:	push   rbx
  433ed4:	push   rdi
  433ed5:	fdivr  st,st(7)
  433ed7:	(bad)  
  433ed8:	and    al,0xca
  433eda:	call   FWORD PTR [rdx]
  433edc:	and    al,cl
  433ede:	jmp    QWORD PTR [rax]
  433ee0:	and    eax,0x101cffb0
  433ee5:	pop    rdx
  433ee6:	inc    DWORD PTR [rax]
	...
  433f04:	add    BYTE PTR [rax],al
  433f06:	add    BYTE PTR [rbx-0x1f008788],ah
  433f0c:	rcl    al,cl
  433f0e:	(bad)  
  433f0f:	fmulp  st(7),st
  433f11:	(bad)  
  433f12:	(bad)  
  433f13:	fmul   st(5),st
  433f15:	retf   
  433f16:	(bad)  
  433f17:	fxch   st(3)
  433f19:	leave  
  433f1a:	(bad)  
  433f1b:	fmul   st,st(0)
  433f1d:	(bad)  
  433f1e:	call   rsi
  433f20:	mov    ch,0xff
  433f23:	(bad)  
  433f24:	(bad)  
  433f28:	ret    0xffc1
  433f2b:	scas   al,BYTE PTR es:[rdi]
  433f2c:	xchg   esp,eax
  433f2d:	test   bh,bh
  433f2f:	(bad)  
  433f30:	(bad)  
  433f31:	(bad)  
  433f32:	call   rbx
  433f34:	sar    DWORD PTR [rax-0x6a5c4301],0xff
  433f3b:	outs   dx,DWORD PTR ds:[rsi]
  433f3c:	push   rsp
  433f3d:	dec    r10d
  433f40:	mov    eax,0xb6c9ffb6
  433f45:	mov    ch,0xff
  433f47:	leave  
  433f48:	mov    dh,0xb5
  433f4a:	dec    ecx
  433f4c:	mov    dh,0xb5
  433f4e:	push   QWORD PTR [rbx]
  433f50:	cmp    bh,cl
  433f52:	call   FWORD PTR [rdx+0x5e]
  433f55:	fcos   
  433f57:	es sub eax,0x2721ffcb
  433f5d:	retf   0x26ff
  433f60:	sub    esi,DWORD PTR [rdi+rdi*8-0xa5efe4]
	...
  433f87:	movabs ds:0xe0ffd3d5e1ff7878,eax
  433f90:	rcl    eax,1
  433f92:	(bad)  
  433f93:	(bad)  
  433f95:	(bad)  
  433f96:	(bad)  
  433f97:	fcmovne st,st(5)
  433f99:	int3   
  433f9a:	(bad)  
  433f9b:	fxch   st(3)
  433f9d:	leave  
  433f9e:	(bad)  
  433f9f:	fmul   st,st(0)
  433fa1:	(bad)  
  433fa2:	call   rbp
  433fa4:	(bad)
  433fa7:	rol    esp,cl
  433fa9:	ret    0xb5ff
  433fac:	fwait
  433fad:	mov    edi,?
  433faf:	(bad)  
  433fb0:	(bad)  
  433fb1:	(bad)  
  433fb2:	call   rbx
  433fb4:	ret    0xffb8
  433fb7:	mov    esp,0x74ff96a3
  433fbc:	pop    rdx
  433fbd:	rex.RX dec ebx
  433fc0:	mov    eax,0xb7caffb7
  433fc5:	mov    dh,0xff
  433fc7:	leave  
  433fc8:	mov    dh,0xb5
  433fca:	dec    ecx
  433fcc:	mov    dh,0xb5
  433fce:	(bad)  
  433fcf:	cmp    al,BYTE PTR [rax-0x2f]
  433fd2:	jmp    QWORD PTR [rdx+0x66]
  433fd5:	fdiv   st(7),st
  433fd7:	xor    BYTE PTR [rsi],dh
  433fd9:	iret   
  433fda:	jmp    FWORD PTR [rdx]
  433fdc:	xor    ch,cl
  433fde:	jmp    FWORD PTR [rdx+rsi*1]
  433fe1:	mov    eax,0x5c131eff
  433fe6:	inc    DWORD PTR [rax]
	...
  434004:	add    BYTE PTR [rax],al
  434006:	add    BYTE PTR [rbx-0x1c008788],ah
  43400c:	xlat   BYTE PTR ds:[rbx]
  43400d:	(bad)  
  43400e:	jmp    rcx
  434010:	(bad)  
  434011:	sar    edi,cl
  434013:	(bad)  
  434015:	sar    bh,1
  434017:	(bad)  
  434019:	(bad)  
  43401a:	(bad)  
  43401b:	fmul   st(5),st
  43401d:	retf   
  43401e:	(bad)  
  43401f:	fxch   st(2)
  434021:	enter  0xd7ff,0xc8
  434025:	(bad)  
  434026:	call   rsi
  434028:	(bad)
  43402b:	mov    esp,0xffff97a3
  434030:	(bad)  
  434031:	(bad)  
  434032:	call   rbx
  434034:	ret    0xffb8
  434037:	mov    esp,0x78ff96a3
  43403c:	(bad)  
  43403d:	rex.WR dec rsp
  434040:	mov    edx,0xb9cbffb9
  434045:	mov    bh,0xff
  434047:	retf   0xb6b7
  43404a:	dec    ecx
  43404c:	mov    dh,0xb5
  43404e:	inc    DWORD PTR [rcx+0x47]
  434051:	sar    edi,cl
  434053:	push   0x6f
  434055:	fdivp  st(7),st
  434057:	cmp    al,BYTE PTR [rax-0x2f]
  43405a:	push   QWORD PTR [rcx+rdi*1]
  43405d:	iret   
  43405e:	push   QWORD PTR [rcx+rdi*1]
  434061:	mov    ebp,0x601722ff
  434066:	inc    DWORD PTR [rax]
	...
  434084:	add    BYTE PTR [rax],al
  434086:	add    BYTE PTR [rbx-0x1a008788],ah
  43408c:	(bad)  
  43408e:	jmp    rbx
  434090:	xlat   BYTE PTR ds:[rbx]
  434091:	(bad)  
  434092:	jmp    rcx
  434094:	(bad)  
  434095:	sar    bh,cl
  434097:	(bad)  
  434099:	sar    bh,1
  43409b:	(bad)  
  43409d:	int    0xff
  43409f:	fcmovne st,st(4)
  4340a1:	retf   
  4340a2:	(bad)  
  4340a3:	fxch   st(3)
  4340a5:	leave  
  4340a6:	(bad)  
  4340a7:	fmul   st,st(0)
  4340a9:	(bad)  
  4340aa:	inc    edx
  4340ac:	lods   al,BYTE PTR ds:[rsi]
  4340ad:	movabs al,ds:0xb9c1d3ffffffffff
  4340b6:	(bad)  
  4340b7:	mov    ebx,0x7fff96a4
  4340bc:	gs push rdx
  4340be:	dec    ebp
  4340c0:	mov    esp,0xbaccffba
  4340c5:	mov    ecx,0xb7b8cbff
  4340ca:	dec    edx
  4340cc:	mov    eax,0x4e48ffb6
  4340d1:	(bad)  
  4340d2:	push   QWORD PTR [rax+rdi*2-0x1f]
  4340d6:	inc    DWORD PTR [rsi+0x4b]
  4340d9:	(bad)  
  4340da:	(bad)  
  4340db:	(bad)  
  4340dc:	rex.RB sar r15d,cl
  4340df:	cmp    bh,BYTE PTR [rdi]
  4340e1:	sar    edi,0x27
  4340e4:	sbb    al,0x65
  4340e6:	inc    DWORD PTR [rax]
	...
  434104:	add    BYTE PTR [rax],al
  434106:	add    BYTE PTR [rbx-0x18008788],ah
  43410c:	fcmovnu st,st(1)
  43410e:	jmp    rbp
  434110:	fcom   st(7)
  434112:	jmp    rbx
  434114:	xlat   BYTE PTR ds:[rbx]
  434115:	(bad)  
  434116:	jmp    rcx
  434118:	rcl    edx,cl
  43411a:	(bad)  
  43411b:	(bad)  
  43411d:	sar    bh,1
  43411f:	(bad)  
  434121:	int    0xff
  434123:	fcmovne st,st(4)
  434125:	retf   
  434126:	(bad)  
  434127:	fxch   st(2)
  434129:	leave  
  43412a:	dec    ecx
  43412c:	mov    ah,0xa9
  43412e:	(bad)  
  43412f:	(bad)  
  434130:	(bad)  
  434131:	(bad)  
  434132:	call   rbx
  434134:	sar    DWORD PTR [rax-0x6a5c4301],0xff
  43413b:	sub    DWORD PTR [rbx+0x59],0xffffffff
  43413f:	iret   
  434140:	mov    ebp,0xbbceffbb
  434145:	mov    ebx,0xb9b9ccff
  43414a:	dec    ebx
  43414c:	mov    ecx,0x5550ffb8
  434151:	xlat   BYTE PTR ds:[rbx]
  434152:	(bad)  
  434153:	jl     0x4340d5
  434155:	jrcxz  0x434156
  434157:	push   rcx
  434158:	push   rdi
  434159:	fdivr  st,st(7)
  43415b:	rex.WXB push r8
  43415d:	(bad)  
  43415e:	inc    DWORD PTR [rcx+0x47]
  434161:	vcvttsd2si esp,QWORD PTR [rbx]
  434165:	imul   edi,edi,0x0
	...
  434184:	add    BYTE PTR [rax],al
  434186:	add    BYTE PTR [rbx-0x16008788],ah
  43418c:	(bad)  
  43418e:	call   FWORD PTR [rbp-0x67]
  434191:	pop    rbp
  434192:	jmp    FWORD PTR [rdi-0x4e]
  434195:	jns    0x434196
  434197:	loope  0x43416d
  434199:	sar    bh,cl
  43419b:	(bad)  
  43419d:	sar    bh,1
  43419f:	(bad)  
  4341a1:	iret   
  4341a2:	(bad)  
  4341a3:	(bad)  
  4341a5:	(bad)  
  4341a6:	(bad)  
  4341a7:	fcmovne st,st(4)
  4341a9:	retf   
  4341aa:	call   rax
  4341ac:	mov    ebp,0xffffffb4
  4341b1:	(bad)  
  4341b2:	call   rbx
  4341b4:	sar    DWORD PTR [rcx-0x695c4301],0xff
  4341bb:	mov    dh,BYTE PTR [rcx+0x60]
  4341be:	call   rax
  4341c0:	mov    edi,0xbdcfffbd
  4341c5:	mov    esp,0xbbbbceff
  4341ca:	dec    esp
  4341cc:	mov    edx,0x5c57ffb8
  4341d1:	(bad)  
  4341d3:	xchg   BYTE PTR [rdx+0x635effe6],cl
  4341d9:	(bad)  
  4341db:	push   rsi
  4341dc:	pop    rsp
  4341dd:	(bad)  
  4341df:	rex.WB
  4341e0:	rex.WRX retf 0x32ff
  4341e4:	sub    DWORD PTR [rcx-0x1],esi
	...
  434207:	movabs ds:0x5dffdee0ebff7878,eax
  434210:	cdq    
  434211:	pop    rbp
  434212:	call   FWORD PTR [rbp-0x67]
  434215:	pop    rbp
  434216:	jmp    FWORD PTR [rdi-0x4e]
  434219:	jns    0x43421a
  43421b:	loope  0x4341f2
  43421d:	sar    edi,cl
  43421f:	loope  0x4341f4
  434221:	sar    bh,cl
  434223:	(bad)  
  434225:	iret   
  434226:	call   rax
  434228:	mov    edi,0xc8d8ffba
  43422d:	mov    edi,0xffffffff
  434232:	(bad)  
  434233:	fcmove st,st(2)
  434235:	ret    
  434236:	(bad)  
  434237:	mov    esp,0x90ff95a3
  43423c:	jns    0x4342a5
  43423e:	inc    esi
  434240:	mov    ah,0xb0
  434242:	call   rax
  434244:	mov    esi,0xbdcfffbd
  434249:	mov    esp,0xbabbcdff
  43424e:	call   FWORD PTR [rdi+0x64]
  434251:	fdiv   st(7),st
  434253:	nop
  434254:	xchg   ebx,eax
  434255:	out    0xff,eax
  434257:	imul   ebp,DWORD PTR [rdi-0x21],0xdd6863ff
  43425e:	call   QWORD PTR [rax+0x55]
  434261:	(bad)  
  434262:	(bad)  
  434263:	cmp    BYTE PTR [rcx],dh
  434265:	js     0x434266
	...
  434287:	movabs ds:0x5dffe0e2ecff7878,eax
  434290:	cdq    
  434291:	pop    rbp
  434292:	jmp    rbp
  434294:	imul   eax
  434296:	call   FWORD PTR [rbp-0x67]
  434299:	pop    rbp
  43429a:	push   QWORD PTR [rax-0x4d]
  43429d:	jp     0x43429e
  43429f:	loop   0x434277
  4342a1:	(bad)  
  4342a2:	call   rdx
  4342a4:	ret    
  4342a5:	mov    esi,0x6e7f97ff
  4342aa:	(bad)  
  4342ab:	fmul   st,st(0)
  4342ad:	mov    edi,0xffffffff
  4342b2:	jmp    rax
  4342b4:	ror    ah,cl
  4342b6:	inc    esi
  4342b8:	mov    cl,0xa6
  4342ba:	call   QWORD PTR [rdi+0x7fff6e7f]
  4342c0:	fs push rdx
  4342c2:	inc    esi
  4342c4:	mov    ah,0xaf
  4342c6:	call   rax
  4342c8:	mov    edi,0xbdceffbe
  4342cd:	mov    ebx,0xde6c66ff
  4342d2:	call   FWORD PTR [rdx+0x76ffeb9d]
  4342d8:	jp     0x4342bd
  4342da:	jmp    FWORD PTR [rdi+0x74]
  4342dd:	loopne 0x4342de
  4342df:	push   rsi
  4342e0:	pop    rbx
  4342e1:	sar    edi,cl
  4342e3:	(bad)  
  4342e4:	cmp    BYTE PTR [rdi-0x1],bh
	...
  434307:	movabs ds:0x5dffe3e4edff7878,eax
  434310:	cdq    
  434311:	pop    rbp
  434312:	(bad)  
  434313:	jl     0x4342f3
  434315:	mov    edi,?
  434317:	in     al,0xf7
  434319:	out    0xff,eax
  43431b:	pop    rbp
  43431c:	cdq    
  43431d:	pop    rbp
  43431e:	push   QWORD PTR [rax-0x4d]
  434321:	jp     0x434322
  434323:	xchg   edi,eax
  434324:	jg     0x434394
  434326:	dec    esp
  434328:	mov    bh,0xad
  43432a:	(bad)  
  43432b:	fcmove st,st(1)
  43432d:	ret    
  43432e:	(bad)  
  43432f:	(bad)  
  434330:	(bad)  
  434331:	(bad)  
  434332:	(bad)  
  434333:	jmp    0x434317
  434335:	(bad)  
  434337:	(bad)  
  434339:	sar    bh,1
  43433b:	(bad)  
  43433c:	retf   0xffc3
  43433f:	movabs al,ds:0xc1ff334863ff7c8b
  434348:	scas   al,BYTE PTR es:[rdi]
  434349:	test   al,0xff
  43434b:	sar    BYTE PTR [rdi+0x746fffbd],1
  434351:	loope  0x434352
  434353:	movabs ds:0x7affe68681ffeda6,al
  43435c:	and    ah,0xff
  43435f:	pop    rbx
  434360:	(bad)  
  434361:	xlat   BYTE PTR ds:[rbx]
  434362:	inc    DWORD PTR [rsi+0x40]
  434365:	xchg   bh,bh
	...
  434377:	pop    rbp
  434378:	cdq    
  434379:	pop    rbp
  43437a:	call   FWORD PTR [rbp-0x67]
  43437d:	pop    rbp
  43437e:	call   FWORD PTR [rbp-0x67]
  434381:	pop    rbp
  434382:	call   FWORD PTR [rbp-0x67]
  434385:	pop    rbp
  434386:	call   FWORD PTR [rbp-0x67]
  434389:	pop    rbp
  43438a:	call   FWORD PTR [rbp-0x67]
  43438d:	pop    rbp
  43438e:	call   FWORD PTR [rbp-0x67]
  434391:	pop    rbp
  434392:	(bad)  
  434393:	jg     0x434377
  434395:	(bad)  
  434396:	jmp    FWORD PTR [rbx]
  434398:	enter  0xff44,0xe4
  43439c:	mul    edi
  43439e:	call   FWORD PTR [rbp-0x67]
  4343a1:	pop    rbp
  4343a2:	push   QWORD PTR [rax-0x4d]
  4343a5:	jp     0x4343a6
  4343a7:	out    dx,eax
  4343a8:	jmp    0x434392
  4343ad:	(bad)  
  4343ae:	(bad)  
  4343af:	(bad)  
  4343b0:	(bad)  
  4343b1:	(bad)  
  4343b2:	(bad)  
  4343b3:	(bad)  
  4343b4:	(bad)  
  4343b5:	(bad)  
  4343b6:	(bad)  
  4343b7:	(bad)  
  4343b8:	(bad)  
  4343b9:	(bad)  
  4343ba:	(bad)  
  4343bb:	out    dx,eax
  4343bc:	jmp    0xffffffffc71643a6
  4343c1:	mov    esi,0x7a889fff
  4343c6:	jmp    QWORD PTR [rcx-0x2e007c72]
  4343cc:	sar    BYTE PTR [rdi-0x1c848901],0xff
  4343d3:	lods   al,BYTE PTR ds:[rsi]
  4343d4:	scas   al,BYTE PTR es:[rdi]
  4343d5:	out    dx,eax
  4343d6:	dec    DWORD PTR [rcx+rdx*4-0x74790017]
  4343dd:	call   0xffffffffdaa9a4e1
  4343e2:	dec    DWORD PTR [rbp+0x48]
  4343e5:	mov    ?,edi
	...
  4343f7:	(bad)  
  4343f8:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  4343f9:	rex dec DWORD PTR [rbx-0x72006314]
  434400:	icebp  
  434401:	lahf   
  434402:	dec    DWORD PTR [rbp-0x7400600f]
  434408:	lock popf 
  43440a:	dec    DWORD PTR [rcx-0x79006512]
  434410:	jmp    0xffffffffdb9043ab
  434415:	movsxd edi,edi
  434417:	xor    cl,bh
  434419:	rex.WB jmp FWORD PTR [r10]
  43441c:	enter  0xff43,0xe4
  434420:	mul    edi
  434422:	call   FWORD PTR [rbp-0x67]
  434425:	pop    rbp
  434426:	jmp    FWORD PTR [rbp-0x4e]
  434429:	jbe    0x43442a
  43442b:	rol    ecx,cl
  43442d:	mov    eax,0x627389ff
  434432:	dec    DWORD PTR [rdi+rsi*2-0x5e4d009a]
  434439:	xchg   ebp,eax
  43443a:	(bad)  
  43443b:	cld    
  43443c:	cld    
  43443d:	cld    
  43443e:	(bad)  
  43443f:	out    dx,eax
  434440:	jmp    0xffffffff93ed442a
  434445:	xchg   bh,bh
  434447:	push   0xffffffffd3ff384c
  43444c:	ret    0xffc1
  43444f:	jge    0x4343d4
  434451:	in     eax,0xff
  434453:	mov    ah,0xb7
  434455:	bnd call QWORD PTR [rsi-0x6f001365]
  43445c:	xchg   ebp,eax
  43445d:	(bad)  
  43445e:	jmp    QWORD PTR [rbp+0x6b]
  434461:	fdiv   st(7),st
  434463:	push   rbp
  434464:	push   rcx
  434465:	xchg   esi,eax
  434466:	inc    DWORD PTR [rax]
	...
  434474:	add    BYTE PTR [rax],al
  434476:	add    BYTE PTR [rsi],dl
  434478:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  434479:	rex jmp FWORD PTR [rcx-0x1d]
  43447d:	jle    0x43447e
  43447f:	rex.RB out 0x62,eax
  434482:	inc    DWORD PTR [rdi-0x17]
  434485:	inc    DWORD PTR fs:[rdi-0x17]
  434489:	inc    DWORD PTR fs:[rbp-0x19]
  43448d:	(bad)  
  43448e:	inc    DWORD PTR [rcx-0x1e]
  434491:	pop    rsp
  434492:	(bad)  
  434493:	cmp    al,0xdd
  434495:	push   rdi
  434496:	push   QWORD PTR [rdi]
  434498:	(bad)  
  434499:	push   rax
  43449a:	push   QWORD PTR [rcx]
  43449c:	iret   
  43449d:	rex.WX jmp FWORD PTR [rdx]
  4344a0:	mov    BYTE PTR [rdx-0x1],0xe4
  4344a4:	mul    edi
  4344a6:	call   FWORD PTR [rbp-0x67]
  4344a9:	pop    rbp
  4344aa:	jmp    FWORD PTR [rbx-0x4d]
  4344ad:	jne    0x4344ae
  4344af:	(bad)  
  4344b0:	(bad)  
  4344b1:	sar    bh,0xe0
  4344b4:	rcl    ecx,cl
  4344b6:	call   rcx
  4344b8:	sar    BYTE PTR [rdi+rdi*8-0x2c2820],0xff
  4344c0:	(bad)  
  4344c1:	(bad)  
  4344c2:	push   QWORD PTR [rbp+0x6eff94a0]
  4344c8:	push   rsp
  4344c9:	rex call rbp
  4344cc:	(bad)
  4344cf:	test   DWORD PTR [rdx-0x40430019],ecx
  4344d5:	hlt    
  4344d6:	(bad)  
  4344d7:	mov    ecx,0xb4fff2bb
  4344dc:	mov    bh,0xf1
  4344de:	jmp    QWORD PTR [rbp+0x6b]
  4344e1:	fdiv   st(7),st
  4344e3:	pop    rsp
  4344e4:	pop    rdx
  4344e5:	sahf   
  4344e6:	inc    DWORD PTR [rax]
	...
  4344f4:	add    BYTE PTR [rax],al
  4344f6:	add    BYTE PTR [rsi],dl
  4344f8:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  4344f9:	rex jmp QWORD PTR [rbp-0x22]
  4344fd:	jp     0x4344fe
  4344ff:	rex.XB loop 0x434561
  434502:	inc    DWORD PTR [rsi-0x1a]
  434505:	movsxd edi,edi
  434507:	rex.RXB jmp 0xffffffffe88a4471
  43450d:	movsxd edi,edi
  43450f:	rex.R out 0x61,al
  434512:	inc    DWORD PTR [rcx-0x1e]
  434515:	pop    rsp
  434516:	(bad)  
  434517:	cmp    al,0xdb
  434519:	push   rdi
  43451a:	push   QWORD PTR [rsi]
  43451c:	(bad)  
  43451d:	rex.WRXB push QWORD PTR [r8]
  434520:	(bad)  
  434521:	rex.WB jmp FWORD PTR [r9]
  434524:	vcvtpd2dq xmm14,ymm15
  434529:	call   0x5ddca32d
  43452e:	jmp    rsp
  434530:	xlat   BYTE PTR ds:[rbx]
  434531:	(bad)  
  434532:	jmp    rdx
  434534:	(bad)  
  434535:	(bad)  
  434536:	(bad)  
  434537:	(bad)  
  434539:	sar    edi,1
  43453b:	(bad)  
  43453c:	sar    DWORD PTR [rax-0x1],0xff
  434543:	mov    ch,0xa0
  434545:	xchg   esp,eax
  434546:	push   QWORD PTR [rdi+0x5d]
  434549:	rex.WX call rsi
  43454c:	mov    ch,0xff
  43454f:	test   DWORD PTR [rdx-0x13130019],ecx
  434555:	sti    
  434556:	jmp    rdx
  434558:	jrcxz  0x434554
  43455a:	(bad)  
  43455b:	fcmovu st,st(3)
  43455d:	clc    
  43455e:	push   QWORD PTR [rdi+rsi*4+0x5a5cfff1]
  434565:	sahf   
  434566:	inc    DWORD PTR [rax]
	...
  434574:	add    BYTE PTR [rax],al
  434576:	add    BYTE PTR [rsi],dl
  434578:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  434579:	rex push QWORD PTR [rsi+rbx*8-0x7a]
  43457e:	inc    DWORD PTR [rsi+rbx*8+0x5f]
  434582:	inc    DWORD PTR [rdx+riz*8+0x5f]
  434586:	inc    DWORD PTR [rbp-0x18]
  434589:	(bad)  
  43458a:	inc    DWORD PTR [rsi-0x17]
  43458d:	movsxd edi,edi
  43458f:	rex.RX call 0xffffffffe68844f8
  434595:	pop    rdi
  434596:	inc    DWORD PTR [rax-0x1f]
  434599:	pop    rsp
  43459a:	(bad)  
  43459b:	cmp    ebx,ebx
  43459d:	push   rsi
  43459e:	push   QWORD PTR [rip+0x6bff4ed4]        # 0x6c429478
  4345a4:	fstp   TBYTE PTR [rdi+rdi*8+0x29]
  4345a8:	mov    bl,0x53
  4345aa:	call   FWORD PTR [rax-0x56]
  4345ad:	push   QWORD PTR fs:[rbp+0x5b]
  4345b1:	rex.RXB jmp r11
  4345b4:	xlat   BYTE PTR ds:[rbx]
  4345b5:	(bad)  
  4345b6:	call   QWORD PTR [rbx-0x9484]
  4345bc:	(bad)  
  4345bd:	(bad)  
  4345be:	(bad)  
  4345bf:	(bad)  
  4345c0:	(bad)  
  4345c1:	(bad)  
  4345c2:	push   QWORD PTR [rbp-0x51006b60]
  4345c8:	pushf  
  4345c9:	xchg   ecx,eax
  4345ca:	(bad)  
  4345cb:	fmul   st,st(1)
  4345cd:	(bad)  
  4345ce:	jmp    QWORD PTR [rbx-0x7300115a]
  4345d4:	jnp    0x43464d
  4345d6:	jmp    FWORD PTR [rcx-0x73006963]
  4345dc:	cmp    DWORD PTR [rbx-0x1],0xff373f4c
  4345e3:	jge    0x434661
  4345e5:	mov    esp,0xff
	...
  4345f6:	add    BYTE PTR [rsi],dl
  4345f8:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  4345f9:	rex (bad) 
  4345fb:	js     0x4345d9
  4345fd:	mov    edi,edi
  4345ff:	pop    rax
  434600:	(bad)  [rsi-0x1]
  434603:	push   rsp
  434604:	loope  0x434674
  434606:	dec    DWORD PTR [rsi+riz*8+0x68]
  43460a:	dec    DWORD PTR [rcx-0x18]
  43460d:	inc    WORD PTR [rsi-0x17]
  434611:	inc    DWORD PTR fs:[rbx-0x18]
  434615:	(bad)  
  434616:	inc    DWORD PTR [rcx-0x1b]
  434619:	pop    rsi
  43461a:	(bad)  
  43461b:	ds loopne 0x434678
  43461e:	push   QWORD PTR [rbx-0x1b]
  434621:	xchg   bh,bh
  434623:	sub    DWORD PTR [rbx-0x52a100ad],esi
  434629:	imul   edi,edi,0xffffffff
  43462c:	(bad)  
  43462d:	(bad)  
  43462e:	push   QWORD PTR [rbp+0x5b]
  434631:	rex.RXB jmp r13
  434634:	fcmovu st,st(0)
  434636:	(bad)  
  434637:	(bad)  
  434638:	(bad)  
  434639:	(bad)  
  43463a:	(bad)  
  43463b:	(bad)  
  43463c:	(bad)  
  43463d:	(bad)  
  43463e:	inc    esp
  434640:	mov    bh,0xad
  434642:	jmp    FWORD PTR [rcx-0x3900796c]
  434648:	mov    ah,0xae
  43464a:	(bad)  
  43464b:	fcmove st,st(3)
  43464d:	leave  
  43464e:	dec    edi
  434650:	(bad)  
  434651:	sar    edi,cl
  434653:	xchg   DWORD PTR [rcx+rbp*2-0x1],esi
  434657:	fcom   st(4)
  434659:	sar    edi,1
  43465b:	xchg   esi,eax
  43465c:	mov    WORD PTR [rdi+0x373f4cff],es
  434662:	(bad)  
  434663:	mov    ecx,0x59f2bb
	...
  434674:	add    BYTE PTR [rax],al
  434676:	add    BYTE PTR [rcx],ah
  434678:	fwait
  434679:	cmp    al,0xea
  43467b:	(bad)  
  43467c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  43467d:	rex call QWORD PTR [rsi]
  434680:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  434681:	rex call QWORD PTR [rsi]
  434684:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  434685:	rex call QWORD PTR [rsi]
  434688:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  434689:	rex call QWORD PTR [rsi]
  43468c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  43468d:	rex call QWORD PTR [rsi]
  434690:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  434691:	rex call QWORD PTR [rdx-0x14]
  434695:	ins    DWORD PTR es:[rdi],dx
  434696:	dec    DWORD PTR [rcx-0x17]
  434699:	addr32 (bad) 
  43469b:	jns    0x434689
  43469d:	(bad)  
  43469e:	jmp    FWORD PTR [rcx]
  4346a0:	mov    bl,0x53
  4346a2:	jmp    QWORD PTR [rdx-0x4f]
  4346a5:	outs   dx,DWORD PTR ds:[rsi]
  4346a6:	inc    esi
  4346a8:	mov    dl,0xa7
  4346aa:	push   QWORD PTR [rcx-0x5b007266]
  4346b0:	mov    edi,DWORD PTR [rbx-0x1]
  4346b3:	out    0xdc,eax
  4346b5:	(bad)  
  4346b7:	(bad)  
  4346b8:	mov    dl,0xa7
  4346ba:	push   QWORD PTR [rcx-0x5b007266]
  4346c0:	mov    edi,DWORD PTR [rbx-0x1]
  4346c3:	rol    dl,cl
  4346c5:	mov    ebp,0xced0deff
  4346ca:	(bad)  
  4346cb:	fmul   st(5),st
  4346cd:	int3   
  4346ce:	call   rdi
  4346d0:	leave  
  4346d1:	(bad)  
  4346d2:	call   QWORD PTR [rdi-0x23007d7a]
  4346d8:	xlat   BYTE PTR ds:[rbx]
  4346d9:	(bad)  
  4346da:	call   FWORD PTR [rbx+0x4cff8a91]
  4346e0:	rex cmp edi,edi
  4346e3:	mov    ecx,0x1af2bb
	...
  434704:	add    BYTE PTR [rax],al
  434706:	add    BYTE PTR [rbx-0x6008788],ah
  43470c:	icebp  
  43470d:	out    dx,eax
  43470e:	call   QWORD PTR [rsi]
  434710:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  434711:	rex jmp QWORD PTR [rbp+rbp*8+0x7e]
  434716:	dec    DWORD PTR [rsi+0x29ffa1f2]
  43471c:	mov    bl,0x53
  43471e:	jmp    FWORD PTR [rcx-0x4d]
  434721:	je     0x434722
  434723:	lock out 0xe6,eax
  434726:	(bad)  
  434727:	out    dx,eax
  434728:	in     eax,0xe3
  43472a:	(bad)  
  43472b:	in     eax,dx
  43472c:	jrcxz  0x43470f
  43472e:	(bad)  
  43472f:	jmp    0x434711
  434731:	(bad)  
  434733:	(bad)  
  434734:	(bad)  
  434736:	jmp    rdi
  434738:	fcmovnu st,st(3)
  43473a:	jmp    rsi
  43473c:	(bad)  
  43473e:	jmp    rbx
  434740:	xlat   BYTE PTR ds:[rbx]
  434741:	(bad)  
  434742:	jmp    rcx
  434744:	(bad)  
  434745:	sar    edi,cl
  434747:	loopne 0x43471b
  434749:	sar    bh,1
  43474b:	(bad)  
  43474d:	(bad)  
  43474e:	(bad)  
  43474f:	fcmovne st,st(5)
  434751:	retf   
  434752:	call   FWORD PTR [rsi-0x1e007f75]
  434758:	fcmovnu st,st(2)
  43475a:	jmp    QWORD PTR [rbx+0x54ff9098]
  434760:	rex.RXB
  434761:	rex inc DWORD PTR [rax]
	...
  434770:	add    BYTE PTR [rax],al
  434772:	add    BYTE PTR [rdi+0x42],cl
  434775:	cmp    DWORD PTR [rsi+0x0],eax
	...
  434784:	add    BYTE PTR [rax],al
  434786:	add    BYTE PTR [rbx-0x6008788],ah
  43478c:	bnd lock call QWORD PTR [rsi]
  434790:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  434791:	rex call QWORD PTR [rax+0x29ffa1f0]
  434798:	mov    bl,0x53
  43479a:	jmp    FWORD PTR [rbp-0x4b]
  43479d:	js     0x43479e
  43479f:	cmc    
  4347a0:	in     al,dx
  4347a1:	(bad)  
  4347a2:	push   rdx
  4347a4:	jmp    0xffffffffe8354790
  4347a9:	in     eax,0xff
  4347ab:	out    dx,eax
  4347ac:	in     eax,0xe3
  4347ae:	(bad)  
  4347af:	in     eax,dx
  4347b0:	loop   0x434793
  4347b2:	(bad)  
  4347b3:	jmp    0x434795
  4347b5:	fdivp  st(7),st
  4347b7:	jmp    0xffffffffd043259a
  4347bc:	ret    0xffbd
  4347bf:	test   BYTE PTR [rcx+0x65],dh
  4347c2:	(bad)  
  4347c3:	jge    0x43482e
  4347c5:	pop    rdi
  4347c6:	dec    esp
  4347c8:	mov    esp,0xd2dfffb7
  4347cd:	sar    edi,1
  4347cf:	ret    0xb1b5
  4347d2:	jmp    QWORD PTR [rsi-0x3000766d]
  4347d8:	mov    bl,0xff
  4347db:	lods   al,BYTE PTR ds:[rsi]
  4347dc:	movabs al,ds:0x424fff4b5361ff98
  4347e5:	cmp    DWORD PTR [rcx],esi
  4347e7:	add    BYTE PTR [rax],al
  4347e9:	add    BYTE PTR [rax],al
  4347eb:	rex.WRXB
  4347ec:	rex.X cmp DWORD PTR [rsi+0x4f],eax
  4347f0:	rex.X cmp edi,edi
  4347f3:	pop    rax
  4347f4:	rex.WB (bad) 
  4347f6:	inc    DWORD PTR [rax]
	...
  434804:	add    BYTE PTR [rax],al
  434806:	add    BYTE PTR [rbx-0x6008788],ah
  43480c:	bnd lock call QWORD PTR [rsi]
  434810:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  434811:	rex jmp FWORD PTR [rcx]
  434814:	mov    bl,0x53
  434816:	push   QWORD PTR [rax-0x4a]
  434819:	jl     0x43481a
  43481b:	imul   bh
  43481d:	in     eax,dx
  43481e:	push   rbp
  434820:	out    dx,al
  434821:	in     al,dx
  434822:	push   rsp
  434824:	in     al,dx
  434825:	jmp    0x434826
  434827:	bnd jmp 0xffffffffe8344814
  43482d:	in     eax,0xff
  43482f:	out    dx,al
  434830:	in     eax,0xe3
  434832:	(bad)  
  434833:	in     al,dx
  434834:	jrcxz  0x434817
  434836:	(bad)  
  434837:	jmp    0x434819
  434839:	fdivp  st(7),st
  43483b:	lods   al,BYTE PTR ds:[rsi]
  43483c:	(bad)  
  43483d:	xchg   ecx,eax
  43483e:	(bad)  
  43483f:	fcmovbe st,st(1)
  434841:	int    0xff
  434843:	(bad)  
  434844:	mov    edi,0x8ea3ffb9
  434849:	test   bh,bh
  43484b:	nop
  43484c:	jge    0x4348bf
  43484e:	jmp    QWORD PTR [rdi-0x4e006f68]
  434854:	lahf   
  434855:	xchg   esp,eax
  434856:	(bad)  
  434857:	fmul   st,st(7)
  434859:	leave  
  43485a:	(bad)  
  43485b:	mov    esp,0x7bffa9af
  434860:	push   0x61
  434862:	call   FWORD PTR [rbx+0x4d]
  434865:	rex.R call FWORD PTR [rbx+0x4d]
  434869:	rex.R call FWORD PTR [rbx+0x4d]
  43486d:	rex.R call FWORD PTR [rbx+0x4d]
  434871:	rex.R call FWORD PTR [rdi+rcx*2+0x48]
  434876:	inc    DWORD PTR [rax]
	...
  434884:	add    BYTE PTR [rax],al
  434886:	add    BYTE PTR [rbx-0x6008788],ah
  43488c:	repnz lock jmp FWORD PTR [rdx]
  434890:	cdq    
  434891:	rex.RB push QWORD PTR [r10-0x4a]
  434895:	jge    0x434896
  434897:	clc    
  434898:	repnz out dx,eax
  43489a:	push   rdi
  43489c:	lock out dx,eax
  43489e:	push   rdi
  4348a0:	out    dx,eax
  4348a1:	out    dx,al
  4348a2:	push   rsi
  4348a4:	out    dx,al
  4348a5:	in     al,dx
  4348a6:	push   rbx
  4348a8:	jmp    0x434893
  4348aa:	push   rdx
  4348ac:	jmp    0xffffffffe8344898
  4348b1:	in     eax,0xff
  4348b3:	out    dx,al
  4348b4:	in     eax,0xe3
  4348b6:	(bad)  
  4348b7:	in     eax,dx
  4348b8:	loop   0x43489b
  4348ba:	jmp    FWORD PTR [rdx+rbx*4-0x6f]
  4348c1:	(bad)  
  4348c2:	jmp    rbp
  4348c4:	(bad)  
  4348c6:	call   rax
  4348c8:	(bad)  
  4348c9:	mov    ebp,0xced5e1ff
  4348ce:	inc    edi
  4348d0:	mov    bh,0xae
  4348d2:	jmp    rsi
  4348d4:	(bad)  
  4348d6:	(bad)  
  4348d7:	fcmovne st,st(5)
  4348d9:	(bad)  
  4348da:	call   rax
  4348dc:	mov    esi,0x8ea3ffb5
  4348e1:	test   bh,bh
  4348e3:	nop
  4348e4:	jge    0x434957
  4348e6:	inc    DWORD PTR [rcx+rsi*2-0x4940009b]
  4348ed:	mov    cl,0xff
  4348ef:	addr32 pop rsp
  4348f1:	push   rbp
  4348f2:	call   FWORD PTR [rbp+0x56]
  4348f5:	push   rbx
  4348f6:	fwait
	...
  434907:	movabs ds:0xf6ffeff1f6ff7878,eax
  434910:	icebp  
  434911:	out    dx,eax
  434912:	push   rsi
  434914:	icebp  
  434915:	out    dx,eax
  434916:	push   rsi
  434918:	icebp  
  434919:	out    dx,eax
  43491a:	push   rsi
  43491c:	icebp  
  43491d:	out    dx,eax
  43491e:	push   rsi
  434920:	icebp  
  434921:	out    dx,eax
  434922:	push   rsi
  434924:	icebp  
  434925:	out    dx,eax
  434926:	push   rsi
  434928:	icebp  
  434929:	out    dx,eax
  43492a:	push   rsi
  43492c:	icebp  
  43492d:	out    dx,eax
  43492e:	push   rsi
  434930:	icebp  
  434931:	out    dx,eax
  434932:	push   rsi
  434934:	icebp  
  434935:	out    dx,eax
  434936:	push   rsi
  434938:	icebp  
  434939:	out    dx,eax
  43493a:	jmp    FWORD PTR [rsi-0x6b63]
  434940:	(bad)  
  434941:	(bad)  
  434942:	(bad)  
  434943:	in     eax,dx
  434944:	call   0xffffffffdd26492f
  434949:	fcos   
  43494b:	rol    ah,1
  43494d:	mov    ebp,0xced5e1ff
  434952:	(bad)  
  434953:	std    
  434954:	cld    
  434955:	sti    
  434956:	push   rbp
  434958:	lock out dx,al
  43495a:	(bad)  
  43495b:	(bad)  
  43495d:	retf   0xcbff
  434960:	mov    bh,0xad
  434962:	(bad)  
  434963:	mov    edi,0xe3ff9aa7
  434968:	fcmovnbe st,st(7)
  43496a:	dec    DWORD PTR [rbx+0x75ff727b]
  434970:	push   0x66
  434972:	jmp    FWORD PTR [rsi+0x66]
  434975:	(bad)  
  434976:	and    BYTE PTR [rax],al
	...
  434980:	add    BYTE PTR [rax],al
  434982:	add    cl,cl
  434984:	mov    dh,0xb5
  434986:	jae    0x43492b
  434988:	js     0x434a02
  43498a:	jmp    QWORD PTR [rbx-0x5c008788]
  434990:	js     0x434a0a
  434992:	jmp    QWORD PTR [rbx-0x5c008788]
  434998:	js     0x434a12
  43499a:	jmp    QWORD PTR [rbx-0x5c008788]
  4349a0:	js     0x434a1a
  4349a2:	jmp    QWORD PTR [rbx-0x5c008788]
  4349a8:	js     0x434a22
  4349aa:	jmp    QWORD PTR [rbx-0x5c008788]
  4349b0:	js     0x434a2a
  4349b2:	jmp    QWORD PTR [rbx-0x5c008788]
  4349b8:	js     0x434a32
  4349ba:	call   FWORD PTR [rdi-0x8078]
  4349c0:	(bad)  
  4349c1:	(bad)  
  4349c2:	(bad)  
  4349c3:	(bad)  
  4349c4:	(bad)  
  4349c5:	(bad)  
  4349c6:	jmp    FWORD PTR [rsp+riz*4-0x463d005f]
  4349cd:	mov    ah,0xff
  4349cf:	(bad)  
  4349d1:	(bad)  
  4349d2:	(bad)  
  4349d3:	sti    
  4349d4:	stc    
  4349d5:	stc    
  4349d6:	(bad)  
  4349d7:	std    
  4349d8:	std    
  4349d9:	cld    
  4349da:	push   rbx
  4349dc:	out    dx,eax
  4349dd:	in     al,dx
  4349de:	push   rcx
  4349e0:	in     al,dx
  4349e1:	jmp    0xffffffffe12835e5
  4349e6:	call   QWORD PTR [rsi-0x6d007c76]
  4349ec:	test   BYTE PTR [rsi-0x1],bh
  4349ef:	jle    0x434a66
  4349f1:	jno    0x434a13
	...
  4349ff:	leave  
  434a00:	mov    dh,0xb5
  434a02:	jae    0x4349a7
  434a04:	js     0x434a7e
  434a06:	jmp    QWORD PTR [rbx-0x5c008788]
  434a0c:	js     0x434a86
  434a0e:	jmp    QWORD PTR [rbx-0x5a008788]
  434a14:	jnp    0x434a91
  434a16:	jmp    FWORD PTR [rax-0x54008081]
  434a1c:	test   DWORD PTR [rbp-0x75755101],eax
  434a22:	push   QWORD PTR [rdx-0x49006f70]
  434a28:	xchg   edi,eax
  434a29:	xchg   edi,eax
  434a2a:	(bad)  
  434a2b:	mov    edx,0xbeff9d9d
  434a30:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  434a31:	movabs ds:0xaeaec4ffa9aac1ff,eax
  434a3a:	(bad)  
  434a3b:	mov    edx,0xb0ffa2a6
  434a40:	popf   
  434a41:	xchg   esi,eax
  434a42:	push   QWORD PTR [rax-0x46006963]
  434a48:	stos   BYTE PTR es:[rdi],al
  434a49:	test   al,0xff
  434a4b:	ret    
  434a4c:	mov    dl,0xb0
  434a4e:	(bad)  
  434a4f:	fst    st(4)
  434a51:	sar    bh,1
  434a53:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  434a54:	sahf   
  434a55:	(bad)  
  434a56:	jmp    QWORD PTR [rsp+rbx*4-0x675e0068]
  434a5d:	xchg   esp,eax
  434a5e:	call   FWORD PTR [rsi-0x69006e6b]
  434a64:	mov    WORD PTR [rcx+0x7d8189ff],cs
  434a6a:	jmp    0x4349f1
  434a6c:	jge    0x434ae7
  434a6e:	adc    BYTE PTR [rax],al
	...
  434a78:	add    BYTE PTR [rax],al
  434a7a:	add    cl,cl
  434a7c:	mov    dh,0xb5
  434a7e:	jae    0x434a23
  434a80:	js     0x434afa
  434a82:	dec    ecx
  434a84:	mov    dh,0xb5
  434a86:	jmp    QWORD PTR [rbx-0x5c008788]
  434a8c:	js     0x434b06
  434a8e:	jmp    QWORD PTR [rbx-0x5c008788]
  434a94:	js     0x434b0e
  434a96:	jmp    QWORD PTR [rbx-0x5c008788]
  434a9c:	js     0x434b16
  434a9e:	jmp    QWORD PTR [rbx-0x5c008788]
  434aa4:	js     0x434b1e
  434aa6:	jmp    QWORD PTR [rbx-0x5c008788]
  434aac:	js     0x434b26
  434aae:	jmp    QWORD PTR [rbx-0x5c008788]
  434ab4:	js     0x434b2e
  434ab6:	jmp    QWORD PTR [rbx-0x5c008788]
  434abc:	js     0x434b36
  434abe:	jmp    QWORD PTR [rbx-0x5c008788]
  434ac4:	js     0x434b3e
  434ac6:	jmp    QWORD PTR [rbx-0x5c008788]
  434acc:	js     0x434b46
  434ace:	jmp    QWORD PTR [rbx-0x5f008687]
  434ad4:	jge    0x434b52
  434ad6:	jmp    QWORD PTR [rax-0x5f008384]
  434adc:	jl     0x434b5a
  434ade:	(bad)  
  434adf:	mov    esi,0x9fffacad
  434ae4:	jnp    0x434b60
  434ae6:	inc    esp
  434ae8:	mov    dl,0xb1
  434aea:	js     0x434aec
	...
  434af4:	add    BYTE PTR [rax],al
  434af6:	add    cl,cl
  434af8:	mov    dh,0xb5
  434afa:	jae    0x434a9f
  434afc:	js     0x434b76
  434afe:	dec    ecx
  434b00:	mov    dh,0xb5
  434b02:	jmp    QWORD PTR [rbx-0x36008788]
  434b08:	mov    dh,0xb5
  434b0a:	jae    0x434aaf
  434b0c:	js     0x434b86
  434b0e:	dec    ebp
  434b10:	mov    ch,0xb3
  434b12:	dec    ebp
  434b14:	mov    ah,0xb3
  434b16:	dec    ebp
  434b18:	mov    ah,0xb4
  434b1a:	dec    esp
  434b1c:	mov    ah,0xb4
  434b1e:	dec    ebp
  434b20:	mov    ah,0xb4
  434b22:	dec    ebp
  434b24:	mov    ch,0xb4
  434b26:	dec    esp
  434b28:	mov    ch,0xb3
  434b2a:	dec    esp
  434b2c:	mov    ah,0xb4
  434b2e:	dec    esp
  434b30:	mov    ah,0xb3
  434b32:	dec    esp
  434b34:	mov    ch,0xb4
  434b36:	dec    ebp
  434b38:	mov    ch,0xb3
  434b3a:	dec    esp
  434b3c:	mov    ch,0xb4
  434b3e:	dec    ebp
  434b40:	mov    ah,0xb4
  434b42:	dec    ebp
  434b44:	mov    ch,0xb4
  434b46:	dec    ebp
  434b48:	mov    ah,0xb4
  434b4a:	dec    esp
  434b4c:	mov    ah,0xb3
  434b4e:	dec    ebp
  434b50:	mov    ah,0xb3
  434b52:	dec    ebp
  434b54:	mov    ch,0xb4
  434b56:	jmp    QWORD PTR [rbx-0x36008788]
  434b5c:	mov    dh,0xb5
  434b5e:	jae    0x434b03
  434b60:	js     0x434bda
  434b62:	dec    ecx
  434b64:	mov    dh,0xb5
  434b66:	jmp    QWORD PTR [rbx-0x36008788]
  434b6c:	mov    dh,0xb5
  434b6e:	jae    0x434b70
  434b70:	add    BYTE PTR [rax],al
  434b72:	add    BYTE PTR [rax],al
  434b74:	add    BYTE PTR [rax],al
  434b76:	add    BYTE PTR [rbx-0x5c008788],ah
  434b7c:	js     0x434bf6
  434b7e:	jmp    QWORD PTR [rbx-0x36008788]
  434b84:	mov    dh,0xb5
  434b86:	jae    0x434b88
  434b88:	add    BYTE PTR [rax],al
  434b8a:	add    BYTE PTR [rbx-0x21008788],ah
  434b90:	int    0xcc
  434b92:	(bad)  
  434b93:	(bad)  
  434b95:	int3   
  434b96:	(bad)  
  434b97:	(bad)  
  434b99:	int3   
  434b9a:	(bad)  
  434b9b:	(bad)  
  434b9d:	retf   
  434b9e:	(bad)  
  434b9f:	(bad)  
  434ba1:	int3   
  434ba2:	(bad)  
  434ba3:	(bad)  
  434ba5:	retf   
  434ba6:	(bad)  
  434ba7:	fmulp  st(5),st
  434ba9:	int3   
  434baa:	(bad)  
  434bab:	(bad)  
  434bad:	int3   
  434bae:	(bad)  
  434baf:	(bad)  
  434bb1:	int3   
  434bb2:	(bad)  
  434bb3:	fmulp  st(5),st
  434bb5:	int3   
  434bb6:	(bad)  
  434bb7:	(bad)  
  434bb9:	int3   
  434bba:	(bad)  
  434bbb:	(bad)  
  434bbd:	int3   
  434bbe:	(bad)  
  434bbf:	fmulp  st(5),st
  434bc1:	int3   
  434bc2:	(bad)  
  434bc3:	fmulp  st(5),st
  434bc5:	int3   
  434bc6:	(bad)  
  434bc7:	(bad)  
  434bc9:	retf   
  434bca:	(bad)  
  434bcb:	(bad)  
  434bcd:	int3   
  434bce:	(bad)  
  434bcf:	fmulp  st(5),st
  434bd1:	retf   
  434bd2:	(bad)  
  434bd3:	fmulp  st(5),st
  434bd5:	int3   
  434bd6:	jmp    QWORD PTR [rbx+0xff7878]
  434bdc:	add    BYTE PTR [rax],al
  434bde:	add    cl,cl
  434be0:	mov    dh,0xb5
  434be2:	jae    0x434b87
  434be4:	js     0x434c5e
  434be6:	jmp    QWORD PTR [rbx-0x5c008788]
  434bec:	js     0x434c66
  434bee:	inc    DWORD PTR [rax]
	...
  434c08:	add    BYTE PTR [rax],al
  434c0a:	add    BYTE PTR [rbx-0x13008788],ah
  434c10:	jrcxz  0x434bf3
  434c12:	(bad)  
  434c13:	in     al,dx
  434c14:	loop   0x434bf6
  434c16:	(bad)  
  434c17:	in     al,dx
  434c18:	loop   0x434bfb
  434c1a:	(bad)  
  434c1b:	in     al,dx
  434c1c:	jrcxz  0x434bff
  434c1e:	(bad)  
  434c1f:	in     al,dx
  434c20:	loop   0x434c02
  434c22:	(bad)  
  434c23:	in     al,dx
  434c24:	loop   0x434c07
  434c26:	(bad)  
  434c27:	in     al,dx
  434c28:	loop   0x434c0b
  434c2a:	(bad)  
  434c2b:	in     al,dx
  434c2c:	jrcxz  0x434c0f
  434c2e:	(bad)  
  434c2f:	in     al,dx
  434c30:	jrcxz  0x434c13
  434c32:	(bad)  
  434c33:	in     al,dx
  434c34:	loop   0x434c17
  434c36:	(bad)  
  434c37:	in     al,dx
  434c38:	loop   0x434c1b
  434c3a:	(bad)  
  434c3b:	in     al,dx
  434c3c:	loop   0x434c1f
  434c3e:	(bad)  
  434c3f:	in     al,dx
  434c40:	loop   0x434c23
  434c42:	(bad)  
  434c43:	in     al,dx
  434c44:	loop   0x434c26
  434c46:	(bad)  
  434c47:	in     al,dx
  434c48:	loop   0x434c2b
  434c4a:	(bad)  
  434c4b:	in     al,dx
  434c4c:	loop   0x434c2f
  434c4e:	(bad)  
  434c4f:	in     al,dx
  434c50:	loop   0x434c32
  434c52:	(bad)  
  434c53:	in     al,dx
  434c54:	jrcxz  0x434c36
  434c56:	jmp    QWORD PTR [rbx+0xff7878]
	...
  434c88:	add    BYTE PTR [rax],al
  434c8a:	add    BYTE PTR [rbx-0x5c008788],ah
  434c90:	js     0x434d0a
  434c92:	jmp    QWORD PTR [rbx-0x5c008788]
  434c98:	js     0x434d12
  434c9a:	jmp    QWORD PTR [rbx-0x5c008788]
  434ca0:	js     0x434d1a
  434ca2:	jmp    QWORD PTR [rbx-0x5c008788]
  434ca8:	js     0x434d22
  434caa:	jmp    QWORD PTR [rbx-0x5c008788]
  434cb0:	js     0x434d2a
  434cb2:	jmp    QWORD PTR [rbx-0x5c008788]
  434cb8:	js     0x434d32
  434cba:	jmp    QWORD PTR [rbx-0x5c008788]
  434cc0:	js     0x434d3a
  434cc2:	jmp    QWORD PTR [rbx-0x5c008788]
  434cc8:	js     0x434d42
  434cca:	jmp    QWORD PTR [rbx-0x5c008788]
  434cd0:	js     0x434d4a
  434cd2:	jmp    QWORD PTR [rbx-0x5c008788]
  434cd8:	js     0x434d52
  434cda:	inc    DWORD PTR [rax]
	...
  434cf4:	add    BYTE PTR [rax],al
  434cf6:	add    bh,bh
  434cf8:	clc    
  434cf9:	cmp    al,0xf
  434cfb:	(bad)  
  434cfc:	clc    
  434cfd:	cmp    al,0xf
  434cff:	lock add BYTE PTR [rax],al
  434d02:	(bad)  
  434d04:	add    BYTE PTR [rax],al
  434d06:	(bad)  
  434d08:	add    BYTE PTR [rax],al
  434d0a:	(bad)  
  434d0c:	add    BYTE PTR [rax],al
  434d0e:	(bad)  
  434d10:	add    BYTE PTR [rax],al
  434d12:	(bad)  
  434d14:	add    BYTE PTR [rax],al
  434d16:	(bad)  
  434d18:	add    BYTE PTR [rax],al
  434d1a:	(bad)  
  434d1c:	add    BYTE PTR [rax],al
  434d1e:	(bad)  
  434d20:	add    BYTE PTR [rax],al
  434d22:	(bad)  
  434d24:	add    BYTE PTR [rax],al
  434d26:	(bad)  
  434d28:	add    BYTE PTR [rax],al
  434d2a:	sldt   WORD PTR [rax]
  434d2d:	add    BYTE PTR [rdi],cl
  434d2f:	add    BYTE PTR [rax],al
  434d31:	add    BYTE PTR [rdi],cl
  434d33:	add    BYTE PTR [rax],al
  434d35:	add    BYTE PTR [rdi],cl
  434d37:	add    BYTE PTR [rax],al
  434d39:	add    BYTE PTR [rdi],cl
  434d3b:	add    BYTE PTR [rax],al
  434d3d:	add    BYTE PTR [rdi],cl
  434d3f:	add    BYTE PTR [rax],al
  434d41:	add    BYTE PTR [rdi],cl
  434d43:	add    BYTE PTR [rax],al
  434d45:	add    BYTE PTR [rdi],cl
  434d47:	lock add BYTE PTR [rax],al
  434d4a:	(bad)  
  434d4b:	lock add BYTE PTR [rax],al
  434d4e:	or     al,dh
  434d50:	add    BYTE PTR [rax],al
  434d52:	add    al,dh
  434d54:	add    BYTE PTR [rax],al
  434d56:	add    al,dh
  434d58:	add    BYTE PTR [rax],al
  434d5a:	add    al,ah
  434d5c:	add    BYTE PTR [rax],al
  434d5e:	add    eax,eax
  434d60:	add    BYTE PTR [rax],al
  434d62:	add    eax,DWORD PTR [rax+0x70000]
  434d68:	add    BYTE PTR [rax],al
  434d6a:	add    ecx,DWORD PTR [rax]
  434d6c:	add    BYTE PTR [rax],al
  434d6e:	rex.XB clc 
  434d70:	add    BYTE PTR [rax],al
  434d72:	jg     0x434d6c
  434d74:	add    BYTE PTR [rax],al
  434d76:	jg     0x434da0
  434d78:	add    BYTE PTR [rax],al
  434d7a:	add    BYTE PTR [rax],dl
  434d7c:	add    BYTE PTR [rax],al
  434d7e:	add    BYTE PTR [rax],ah
  434d80:	add    BYTE PTR [rax],al
  434d82:	add    BYTE PTR [rcx],al
  434d84:	add    BYTE PTR [rax],ah
  434d86:	add    BYTE PTR [rax],al
  434d88:	add    BYTE PTR [rax],al
  434d8a:	add    BYTE PTR [rax+0x4],al
	...
  434da5:	add    BYTE PTR [rax],al
  434da7:	movabs ds:0xa3ff7878a3ff7878,eax
  434db0:	js     0x434e2a
  434db2:	jmp    QWORD PTR [rbx-0x5c008788]
  434db8:	js     0x434e32
  434dba:	jmp    QWORD PTR [rbx-0x50008788]
  434dc0:	gs cmp edi,edi
  434dc3:	mov    ebx,0xafff496e
  434dc8:	gs cmp edi,edi
  434dcb:	movabs ds:0x3bff841932ff7878,eax
  434dd4:	(bad)  
  434dd5:	(bad)  
  434dd6:	inc    DWORD PTR [rax]
	...
  434de4:	add    BYTE PTR [rax],al
  434de6:	add    BYTE PTR [rbx-0x1f008788],ah
  434dec:	rcl    cl,cl
  434dee:	call   rsp
  434df0:	(bad)  
  434df4:	(bad)  
  434df8:	(bad)  
  434dfc:	(bad)  
  434e00:	gs cmp edi,edi
  434e03:	in     eax,dx
  434e04:	movabs ds:0xb6c9ff3b65afff7c,al
  434e0d:	mov    ch,0xff
  434e0f:	xor    BYTE PTR [rsi],bl
  434e11:	movabs eax,ds:0xff8f142fff
	...
  434e26:	add    BYTE PTR [rbp-0x67],bl
  434e29:	pop    rbp
  434e2a:	call   FWORD PTR [rbp-0x67]
  434e2d:	pop    rbp
  434e2e:	push   rdx
  434e30:	in     eax,dx
  434e31:	in     al,dx
  434e32:	(bad)  
  434e33:	in     eax,dx
  434e34:	jrcxz  0x434e17
  434e36:	(bad)  
  434e37:	in     eax,dx
  434e38:	jrcxz  0x434e1b
  434e3a:	push   rdx
  434e3c:	in     eax,dx
  434e3d:	in     al,dx
  434e3e:	jmp    FWORD PTR [rdi-0x600c49b]
  434e44:	fcmove st,st(2)
  434e46:	jmp    FWORD PTR [rdi-0x3300c49b]
  434e4c:	mov    edx,0x333cffb9
  434e51:	mov    bl,0xff
  434e53:	xor    ah,BYTE PTR [rax]
  434e55:	sahf   
  434e56:	inc    DWORD PTR [rax]
	...
  434e64:	add    BYTE PTR [rax],al
  434e66:	add    BYTE PTR [rbp-0x67],bl
  434e69:	pop    rbp
  434e6a:	jmp    QWORD PTR [rax]
  434e6c:	mov    edi,0x995dff43
  434e71:	pop    rbp
  434e72:	push   rdx
  434e74:	in     eax,dx
  434e75:	in     al,dx
  434e76:	(bad)  
  434e77:	in     eax,dx
  434e78:	jrcxz  0x434e5b
  434e7a:	(bad)  
  434e7b:	in     eax,dx
  434e7c:	jrcxz  0x434e5f
  434e7e:	jmp    FWORD PTR [rdi-0x600c49b]
  434e84:	fcmove st,st(2)
  434e86:	jmp    FWORD PTR [rdi-0x2f00c49b]
  434e8c:	mov    edi,0x4846ffbe
  434e91:	enter  0x37ff,0x2d
  434e95:	scas   al,BYTE PTR es:[rdi]
  434e96:	inc    DWORD PTR [rax]
  434e98:	add    BYTE PTR [rax],al
  434e9a:	add    BYTE PTR [rax],al
  434e9c:	add    BYTE PTR [rax],al
  434e9e:	add    BYTE PTR [rbp-0x67],bl
  434ea1:	pop    rbp
  434ea2:	call   FWORD PTR [rbp-0x67]
  434ea5:	pop    rbp
  434ea6:	call   FWORD PTR [rbp-0x67]
  434ea9:	pop    rbp
  434eaa:	inc    edi
  434eac:	cld    
  434ead:	(bad)  
  434eae:	jmp    QWORD PTR [rax]
  434eb0:	mov    edi,0x995dff43
  434eb5:	pop    rbp
  434eb6:	push   rdx
  434eb8:	out    dx,al
  434eb9:	in     eax,dx
  434eba:	(bad)  
  434ebb:	(bad)  
  434ebc:	fstp   st(2)
  434ebe:	jmp    FWORD PTR [rdi-0x600c49b]
  434ec4:	fcmove st,st(2)
  434ec6:	jmp    FWORD PTR [rdi-0x2b00c49b]
  434ecc:	(bad)  
  434ed0:	push   rdi
  434ed1:	in     al,0xff
  434ed3:	(bad)  
  434ed4:	cmp    eax,eax
  434ed6:	inc    DWORD PTR [rax]
  434ed8:	add    BYTE PTR [rax],al
  434eda:	add    BYTE PTR [rax],al
  434edc:	add    BYTE PTR [rax],al
  434ede:	add    BYTE PTR [rdi],ch
  434ee0:	mov    ebx,0xe87fff4f
  434ee5:	nop
  434ee6:	(bad)  
  434ee7:	jns    0x434ecc
  434ee9:	mov    bh,bh
  434eeb:	sub    ecx,ecx
  434eed:	rex.XB inc r14d
  434ef0:	cld    
  434ef1:	(bad)  
  434ef2:	jmp    QWORD PTR [rax]
  434ef4:	mov    edi,0x995dff43
  434ef9:	pop    rbp
  434efa:	jmp    FWORD PTR [rdi-0x600c49b]
  434f00:	fcmove st,st(2)
  434f02:	(bad)  
  434f03:	stc    
  434f04:	fcmove st,st(2)
  434f06:	(bad)  
  434f07:	stc    
  434f08:	fcmove st,st(2)
  434f0a:	jmp    FWORD PTR [rdi-0x6d00c49b]
  434f10:	test   eax,0x6a64ffff
  434f15:	(bad)  
	...
  434f1f:	(bad)  
  434f20:	mov    ebx,0xe543ff4f
  434f25:	pop    rdi
  434f26:	(bad)  
  434f27:	cmp    eax,0x34ff58dd
  434f2c:	ror    DWORD PTR [rsi-0x1],cl
  434f2f:	sub    al,bh
  434f31:	rex.X inc esp
  434f34:	std    
  434f35:	int    0xff
  434f37:	sbb    BYTE PTR [rbx-0x1abc00c4],bh
  434f3d:	pop    rdi
  434f3e:	push   rbp
  434f40:	fxch   st(1)
  434f42:	(bad)  
  434f43:	fbstp  TBYTE PTR [rbp-0x2506005d]
  434f49:	retf   0xafff
  434f4c:	gs cmp edi,edi
  434f4f:	(bad)
  434f53:	ins    DWORD PTR es:[rdi],dx
  434f54:	pop    rbx
  434f55:	jp     0x434f56
	...
  434f5f:	(bad)  
  434f60:	mov    ebx,0xe844ff4f
  434f65:	(bad)  
  434f66:	inc    DWORD PTR [rax-0x1c]
  434f69:	pop    rsp
  434f6a:	(bad)  
  434f6b:	cmp    bl,bl
  434f6d:	push   rsi
  434f6e:	jmp    QWORD PTR [rbp-0x24]
  434f71:	js     0x434f72
  434f73:	adc    al,0xaf
  434f75:	call   QWORD PTR ss:[rbp-0x21005e2a]
  434f7c:	mov    esi,0x65afffb0
  434f81:	cmp    edi,edi
  434f83:	(bad)  
  434f84:	(bad)  
  434f85:	ret    
  434f86:	jmp    FWORD PTR [rdi-0x3800c49b]
  434f8c:	xchg   ebx,eax
  434f8d:	jbe    0x434f8e
  434f8f:	popf   
  434f90:	xchg   esp,eax
  434f91:	movabs al,ds:0xff584d65ff
  434f9a:	add    BYTE PTR [rax],al
  434f9c:	add    BYTE PTR [rax],al
  434f9e:	add    BYTE PTR [rdx],ah
  434fa0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  434fa1:	cmp    ebp,ebx
  434fa3:	(bad)  
  434fa4:	mov    esp,0xbc1eff41
  434fa9:	jmp    FWORD PTR [r14-0x18]
  434fad:	test   bh,bh
  434faf:	adc    al,0xaf
  434fb1:	call   QWORD PTR ss:[rsi-0x8005d28]
  434fb8:	hlt    
  434fb9:	repz (bad) 
  434fbb:	in     eax,dx
  434fbc:	jrcxz  0x434f9f
  434fbe:	(bad)  
  434fbf:	in     eax,dx
  434fc0:	jrcxz  0x434fa3
  434fc2:	(bad)  
  434fc3:	in     eax,dx
  434fc4:	jrcxz  0x434fa7
  434fc6:	(bad)  
  434fc7:	jnp    0x43503c
  434fc9:	ins    BYTE PTR es:[rdi],dx
  434fca:	jmp    rsp
  434fcc:	fcom   st(5)
  434fce:	(bad)  
  434fcf:	jnp    0x435044
  434fd1:	ins    BYTE PTR es:[rdi],dx
  434fd2:	jmp    QWORD PTR [rax+rbx*2+0x4c]
  434fd6:	inc    DWORD PTR [rax]
  434fd8:	add    BYTE PTR [rax],al
  434fda:	add    BYTE PTR [rsi+0x6e],bh
  434fdd:	pop    rbp
  434fde:	(bad)  
	...
  434fe7:	(bad)  
  434fe8:	mov    esp,0xaf14ff41
  434fed:	call   QWORD PTR ss:[rdi-0x5005b27]
  434ff4:	div    dh
  434ff6:	(bad)  
  434ff7:	in     eax,dx
  434ff8:	jrcxz  0x434fdb
  434ffa:	(bad)  
  434ffb:	in     eax,dx
  434ffc:	jrcxz  0x434fdf
  434ffe:	(bad)  
  434fff:	in     eax,dx
  435000:	jrcxz  0x434fe3
  435002:	(bad)  
  435003:	in     eax,dx
  435004:	jrcxz  0x434fe7
  435006:	(bad)  
  435007:	jnp    0x43507c
  435009:	ins    BYTE PTR es:[rdi],dx
  43500a:	(bad)  
  43500b:	jnp    0x435080
  43500d:	ins    BYTE PTR es:[rdi],dx
  43500e:	(bad)  
  43500f:	mov    edi,0xbdffb6bf
  435014:	mov    dh,0xb0
  435016:	(bad)  
  435017:	jnp    0x43508c
  435019:	ins    BYTE PTR es:[rdi],dx
  43501a:	jmp    QWORD PTR [rbx+0x9d8e96]
  435020:	add    BYTE PTR [rax],al
  435022:	add    BYTE PTR [rax],al
  435024:	add    BYTE PTR [rax],al
  435026:	add    BYTE PTR [rcx],bl
  435028:	mov    ecx,0xda98ff3c
  43502d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  43502e:	(bad)  
  43502f:	sti    
  435030:	stc    
  435031:	clc    
  435032:	(bad)  
  435033:	in     eax,dx
  435034:	jrcxz  0x435017
  435036:	(bad)  
  435037:	in     eax,dx
  435038:	jrcxz  0x43501b
  43503a:	push   rax
  43503c:	out    0xe5,eax
  43503e:	push   rbx
  435040:	(bad)  
  435041:	call   0xffffffffe62b4145
  435046:	(bad)  
  435047:	jnp    0x4350bc
  435049:	ins    BYTE PTR es:[rdi],dx
  43504a:	(bad)  
  43504b:	jmp    0x43502e
  43504d:	(bad)  
  43504f:	jnp    0x4350c4
  435051:	ins    BYTE PTR es:[rdi],dx
  435052:	(bad)  
  435053:	jnp    0x4350c8
  435055:	ins    BYTE PTR es:[rdi],dx
  435056:	call   FWORD PTR [rax-0x3e7b7972]
  43505c:	scas   al,BYTE PTR es:[rdi]
  43505d:	movabs ds:0x3,eax
  435066:	add    BYTE PTR [rbx-0x8788],ah
  43506c:	(bad)  
  43506d:	(bad)  
  43506e:	(bad)  
  43506f:	(bad)  
  435070:	(bad)  
  435071:	(bad)  
  435072:	(bad)  
  435073:	(bad)  
  435074:	(bad)  
  435075:	(bad)  
  435076:	(bad)  
  435077:	(bad)  
  435078:	(bad)  
  435079:	(bad)  
  43507a:	(bad)  
  43507b:	(bad)  
  43507c:	(bad)  
  43507d:	(bad)  
  43507e:	(bad)  
  43507f:	(bad)  
  435080:	(bad)  
  435081:	(bad)  
  435082:	(bad)  
  435083:	(bad)  
  435084:	(bad)  
  435085:	(bad)  
  435086:	(bad)  
  435087:	(bad)  
  435088:	(bad)  
  435089:	(bad)  
  43508a:	(bad)  
  43508b:	(bad)  
  43508c:	(bad)  
  43508d:	(bad)  
  43508e:	(bad)  
  43508f:	(bad)  
  435090:	(bad)  
  435091:	(bad)  
  435092:	jmp    QWORD PTR [rbx+0xff7878]
	...
  4350a0:	add    BYTE PTR [rax],al
  4350a2:	add    BYTE PTR [rsi+riz*2+0x78a34266],dl
  4350a9:	js     0x4350aa
  4350ab:	movabs ds:0xa3ff7878a3ff7878,eax
  4350b4:	js     0x43512e
  4350b6:	jmp    QWORD PTR [rbx-0x5c008788]
  4350bc:	js     0x435136
  4350be:	jmp    QWORD PTR [rbx-0x5c008788]
  4350c4:	js     0x43513e
  4350c6:	jmp    QWORD PTR [rbx-0x5c008788]
  4350cc:	js     0x435146
  4350ce:	jmp    QWORD PTR [rbx-0x5c008788]
  4350d4:	js     0x43514e
  4350d6:	call   QWORD PTR [rsi+riz*2+0x4266]
  4350dd:	add    BYTE PTR [rax],al
  4350df:	add    BYTE PTR [rax],al
  4350e1:	add    BYTE PTR [rax],al
  4350e3:	movabs ds:0xa342666694ff7878,eax
  4350ec:	js     0x435166
  4350ee:	inc    esp
  4350f0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4350f1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4350f2:	inc    esp
  4350f4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4350f5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4350f6:	inc    esp
  4350f8:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4350f9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4350fa:	inc    esp
  4350fc:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4350fd:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4350fe:	inc    esp
  435100:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  435101:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  435102:	inc    esp
  435104:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  435105:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  435106:	inc    esp
  435108:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  435109:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  43510a:	inc    esp
  43510c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  43510d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  43510e:	jmp    QWORD PTR [rbx-0x6b008788]
  435114:	data16 rex.X movabs ds:0xa300000000ff7878,ax
  435120:	js     0x43519a
  435122:	inc    DWORD PTR [rax]
  435124:	add    BYTE PTR [rax],al
  435126:	add    BYTE PTR [rax],al
  435128:	add    BYTE PTR [rax],al
  43512a:	add    BYTE PTR [rbx-0x1e008788],ah
  435130:	(bad)  
  435131:	(bad)  
  435132:	jmp    rcx
  435134:	(bad)  
  435135:	(bad)  
  435136:	jmp    rcx
  435138:	(bad)  
  435139:	(bad)  
  43513a:	jmp    rcx
  43513c:	(bad)  
  43513d:	(bad)  
  43513e:	jmp    rcx
  435140:	(bad)  
  435141:	(bad)  
  435142:	jmp    rcx
  435144:	(bad)  
  435145:	(bad)  
  435146:	jmp    rcx
  435148:	(bad)  
  435149:	(bad)  
  43514a:	jmp    rcx
  43514c:	(bad)  
  43514d:	(bad)  
  43514e:	jmp    QWORD PTR [rbx+0xff7878]
  435154:	add    BYTE PTR [rax],al
  435156:	add    BYTE PTR [rax],al
  435158:	add    BYTE PTR [rax],al
  43515a:	add    BYTE PTR [rbx+0xff7878],ah
	...
  435168:	add    BYTE PTR [rax],al
  43516a:	add    BYTE PTR [rbx-0x5c008788],ah
  435170:	js     0x4351ea
  435172:	jmp    QWORD PTR [rbx-0x5c008788]
  435178:	js     0x4351f2
  43517a:	jmp    QWORD PTR [rbx-0x5c008788]
  435180:	js     0x4351fa
  435182:	jmp    QWORD PTR [rbx-0x5c008788]
  435188:	js     0x435202
  43518a:	jmp    QWORD PTR [rbx-0x5c008788]
  435190:	js     0x43520a
  435192:	inc    DWORD PTR [rax]
	...
  43519c:	add    BYTE PTR [rax],al
  43519e:	add    al,al
  4351a0:	add    eax,DWORD PTR [rax]
  4351a2:	add    al,al
  4351a4:	add    eax,DWORD PTR [rax]
  4351a6:	add    al,al
  4351a8:	add    eax,DWORD PTR [rax]
  4351aa:	add    al,al
  4351ac:	add    eax,DWORD PTR [rax]
  4351ae:	add    BYTE PTR [rax],al
  4351b0:	add    eax,DWORD PTR [rax]
  4351b2:	add    BYTE PTR [rax],al
  4351b4:	add    eax,DWORD PTR [rax]
  4351b6:	add    BYTE PTR [rax],al
  4351b8:	add    eax,DWORD PTR [rax]
  4351ba:	add    BYTE PTR [rax],al
  4351bc:	add    eax,DWORD PTR [rax]
  4351be:	add    BYTE PTR [rax],al
  4351c0:	add    al,BYTE PTR [rax]
  4351c2:	add    al,al
  4351c4:	add    BYTE PTR [rax],al
  4351c6:	add    al,al
  4351c8:	add    BYTE PTR [rax],al
  4351ca:	add    al,al
  4351cc:	add    eax,DWORD PTR [rax]
  4351ce:	add    BYTE PTR [rax-0x7fffffff],al
  4351d4:	add    DWORD PTR [rax],eax
  4351d6:	add    BYTE PTR [rax+0x6],ah
  4351d9:	add    BYTE PTR [rax],al
  4351db:	loopne 0x4351e4
  4351dd:	add    BYTE PTR [rax],al
  4351df:	or     eax,DWORD PTR [rax+0x0]
  4351e2:	add    DWORD PTR [rax],eax
  4351e4:	add    BYTE PTR [rax],al
  4351e6:	(bad)  
  4351e7:	(bad)  
  4351e8:	(bad)  
  4351e9:	inc    DWORD PTR [rcx]
  4351eb:	add    BYTE PTR [rax],al
  4351ed:	add    BYTE PTR [rax],al
  4351ef:	add    BYTE PTR [rax],al
  4351f1:	add    BYTE PTR [rdx+rax*1],cl
  4351f4:	add    BYTE PTR [rax],al
  4351f6:	add    BYTE PTR [rcx+0x53],dl
  4351f9:	jns    0x43526e
  4351fb:	je     0x435262
  4351fd:	ins    DWORD PTR es:[rdi],dx
  4351fe:	cs rex.R jb 0x435263
  435202:	ja     0x43526d
  435204:	outs   dx,BYTE PTR ds:[rsi]
  435205:	addr32 sub al,0x20
  435208:	push   rsi
  435209:	gs jb  0x43527f
  43520c:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  435213:	xor    BYTE PTR cs:[rsi],ch
  435216:	xor    BYTE PTR [rax+riz*1],ch
  435219:	rex.XB jne 0x435288
  43521c:	je     0x435293
  43521e:	jb     0x435285
  435220:	cmp    eax,0x7475656e
  435225:	jb     0x435288
  435227:	ins    BYTE PTR es:[rdi],dx
  435228:	sub    al,0x20
  43522a:	push   rax
  43522b:	jne    0x43528f
  43522d:	ins    BYTE PTR es:[rdi],dx
  43522e:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  435235:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  435239:	(bad)  
  43523a:	xor    BYTE PTR [rbx],dh
  43523c:	xor    ax,0x3766
  435240:	xor    WORD PTR [rcx],si
  435243:	fs xor eax,0x61336130
  435249:	add    eax,0x1
  43524e:	adc    edx,DWORD PTR [rbx+0x79]
  435251:	jae    0x4352c7
  435253:	gs ins DWORD PTR es:[rdi],dx
  435255:	cs rex.R jb 0x4352ba
  435259:	ja     0x4352c4
  43525b:	outs   dx,BYTE PTR ds:[rsi]
  43525c:	movsxd rbp,DWORD PTR cs:[r15d+0x6e]
  435262:	add    al,BYTE PTR [rax]
  435264:	add    BYTE PTR [rax],al
  435266:	or     BYTE PTR [rcx+0x63],cl
  435269:	outs   dx,DWORD PTR ds:[rsi]
  43526a:	outs   dx,BYTE PTR ds:[rsi]
  43526b:	rex.R (bad) 
  43526d:	je     0x4352d0
  43526f:	or     BYTE PTR [rcx+0x63],cl
  435272:	outs   dx,DWORD PTR ds:[rsi]
  435273:	outs   dx,BYTE PTR ds:[rsi]
  435274:	push   rbx
  435275:	imul   edi,DWORD PTR [rdx+0x65],0x13020407
  43527c:	push   rbx
  43527d:	jns    0x4352f2
  43527f:	je     0x4352e6
  435281:	ins    DWORD PTR es:[rdi],dx
  435282:	cs rex.R jb 0x4352e7
  435286:	ja     0x4352f1
  435288:	outs   dx,BYTE PTR ds:[rsi]
  435289:	addr32 cs push rbx
  43528c:	imul   edi,DWORD PTR [rdx+0x65],0x2
  435293:	add    al,BYTE PTR [rax]
  435295:	add    BYTE PTR [rax],al
  435297:	or     DWORD PTR [rbx],eax
  435299:	add    BYTE PTR [rax],al
  43529b:	add    BYTE PTR [rip+0xfffffffffffffffc],al        # 0x43529d
  4352a1:	adc    edx,DWORD PTR [rbx+0x79]
  4352a4:	jae    0x43531a
  4352a6:	gs ins DWORD PTR es:[rdi],dx
  4352a8:	cs rex.R jb 0x43530d
  4352ac:	ja     0x435317
  4352ae:	outs   dx,BYTE PTR ds:[rsi]
  4352af:	addr32 cs push rbx
  4352b2:	imul   edi,DWORD PTR [rdx+0x65],0x2
  4352b9:	add    eax,0x74646977
  4352be:	push   0x69656806
  4352c3:	addr32 push 0x8000074
  4352c9:	or     BYTE PTR [rdx],al
	...
  4352d3:	add    BYTE PTR [rax],al
  4352d5:	add    BYTE PTR [rdi],cl
  4352d7:	add    eax,DWORD PTR [rax]
  4352d9:	add    BYTE PTR [rax],al
  4352db:	test   BYTE PTR [rcx],0x0
  4352de:	add    BYTE PTR [rdx],al
  4352e0:	add    BYTE PTR [rax],al
  4352e2:	add    DWORD PTR [rax],eax
  4352e4:	add    al,BYTE PTR [rax]
  4352e6:	adc    BYTE PTR [rax],dl
  4352e8:	add    BYTE PTR [rax],al
  4352ea:	add    DWORD PTR [rax],eax
  4352ec:	or     BYTE PTR [rax],al
  4352ee:	push   0x26000005
  4352f3:	add    BYTE PTR [rax],al
  4352f5:	add    BYTE PTR [rax],dl
  4352f7:	adc    BYTE PTR [rax],al
  4352f9:	add    BYTE PTR [rcx],al
  4352fb:	add    BYTE PTR [rax],ah
  4352fd:	add    BYTE PTR [rax+0x4],ch
  435300:	add    BYTE PTR [rax],al
  435302:	mov    es,WORD PTR [rip+0x280000]        # 0x6b5308
  435308:	add    BYTE PTR [rax],al
  43530a:	adc    BYTE PTR [rax],al
  43530c:	add    BYTE PTR [rax],al
  43530e:	and    BYTE PTR [rax],al
  435310:	add    BYTE PTR [rax],al
  435312:	add    DWORD PTR [rax],eax
  435314:	or     BYTE PTR [rax],al
	...
  435332:	(bad)  
  435333:	cli    
  435334:	stc    
  435335:	add    ch,bh
  435337:	repz lock add ah,bh
  43533b:	lock in al,dx
  43533d:	add    ah,bh
  43533f:	hlt    
  435340:	icebp  
  435341:	add    ch,bh
  435343:	div    ebp
  435345:	add    dh,bh
  435347:	sti    
  435348:	cli    
  435349:	add    ch,bh
  43534b:	cli    
  43534c:	stc    
  43534d:	add    bl,bh
  43534f:	icebp  
  435350:	in     eax,dx
  435351:	add    dh,bh
  435353:	stc    
  435354:	test   DWORD PTR [rax],0xf6f8fd
  43535a:	in     eax,dx
  43535b:	(bad)  
  43535c:	mov    dh,0x0
  43535e:	repz (bad) 
  435360:	leave  
  435361:	add    bh,ch
  435363:	rol    esi,cl
  435365:	add    ah,dh
  435367:	fmul   st,st(4)
  435369:	add    ch,dh
  43536b:	fst    st(2)
  43536d:	add    al,bh
  43536f:	loop   0x435349
  435371:	add    al,bh
  435373:	in     al,0xdb
  435375:	add    bh,dh
  435377:	in     eax,0xdd
  435379:	add    cl,bh
  43537b:	call   0xffffffffec3d5460
  435380:	in     al,0x0
  435382:	clc    
  435383:	jmp    0xffffffffee3d546a
  435388:	out    0x0,eax
  43538a:	cld    
  43538b:	cmc    
  43538c:	repnz add bl,bl
  43538f:	lods   al,BYTE PTR ds:[rsi]
  435390:	xchg   ebp,eax
  435391:	add    bh,dl
  435393:	lods   al,BYTE PTR ds:[rsi]
  435394:	xchg   esi,eax
  435395:	add    bh,dl
  435397:	lods   eax,DWORD PTR ds:[rsi]
  435398:	cdq    
  435399:	add    al,bl
  43539b:	mov    al,0x9d
  43539d:	add    dl,ch
  43539f:	shr    BYTE PTR [rax+rax*1+0xa2b4da],0xeb
  4353a7:	ret    
  4353a8:	mov    al,0x0
  4353aa:	fdivr  QWORD PTR [rax-0x4021ff59]
  4353b0:	scas   eax,DWORD PTR es:[rdi]
  4353b1:	add    dh,ch
  4353b3:	int    0xbc
  4353b5:	add    dl,dh
  4353b7:	rol    ecx,1
  4353b9:	add    al,dh
  4353bb:	rol    bl,cl
  4353bd:	add    dl,dh
  4353bf:	(bad)  
  4353c0:	mov    DWORD PTR [rax],0xccd9f4
  4353c6:	hlt    
  4353c7:	(bad)  
  4353c9:	add    ah,dh
  4353cb:	fst    st(1)
  4353cd:	add    dh,dh
  4353cf:	loope  0x4353a8
  4353d1:	add    al,bh
  4353d3:	in     eax,0xdc
  4353d5:	add    cl,bh
  4353d7:	in     eax,dx
  4353d8:	out    0x0,eax
  4353da:	sti    
  4353db:	icebp  
  4353dc:	in     al,dx
  4353dd:	add    dh,bh
  4353df:	clc    
  4353e0:	cmc    
  4353e1:	add    bh,bh
  4353e3:	std    
  4353e4:	cld    
  4353e5:	add    dh,bh
  4353e7:	cld    
  4353e8:	sti    
  4353e9:	add    bh,bl
  4353eb:	mov    ebp,0xe2f700ab
  4353f0:	xlat   BYTE PTR ds:[rbx]
  4353f1:	add    al,bh
  4353f3:	out    0xdc,al
  4353f5:	add    cl,bh
  4353f7:	(bad)  
  4353f8:	loop   0x4353fa
  4353fa:	sti    
  4353fb:	out    dx,al
  4353fc:	out    0x0,eax
  4353fe:	cld    
  4353ff:	cmc    
  435400:	icebp  
  435401:	add    BYTE PTR [rdi-0x42ff7467],ch
  435407:	test   al,0x9b
  435409:	add    bl,bh
  43540b:	(bad)  
  43540c:	loopne 0x43540e
  43540e:	cli    
  43540f:	out    dx,al
  435410:	out    0x0,eax
  435412:	stc    
  435413:	out    dx,al
  435414:	out    0x0,eax
  435416:	std    
  435417:	clc    
  435418:	cmc    
  435419:	add    BYTE PTR [rbp-0x60ff897a],bl
  43541f:	mov    BYTE PTR [rax+0x0],bh
  435422:	movabs eax,ds:0xbd007d8ca3007b8a
  43542b:	test   al,0x9a
  43542d:	add    BYTE PTR [rbx-0x49ff675a],bh
  435433:	movabs ds:0xa7bb009ba9bd0094,al
  43543c:	cdq    
  43543d:	add    al,al
  43543f:	lods   al,BYTE PTR ds:[rsi]
  435440:	sahf   
  435441:	add    dl,al
  435443:	scas   al,BYTE PTR es:[rdi]
  435444:	movabs al,ds:0xa0adc100a1aec200
  43544d:	add    dh,al
  43544f:	mov    bl,0xa6
  435451:	add    bh,ah
  435453:	(bad)  
  435455:	add    dh,bh
  435457:	sti    
  435458:	stc    
  435459:	add    BYTE PTR [rbx+0x49],ah
  43545c:	xor    eax,0x3d516c00
  435461:	add    BYTE PTR [rcx+0x57],dh
  435464:	add    BYTE PTR [rsi+0x5c],r14b
  435468:	rex.WB add BYTE PTR [r10+0x61],dil
  43546c:	rex.WRX add BYTE PTR [rbx+r13*2+0x67800058],r8b
  435474:	push   rbp
  435475:	add    BYTE PTR [rsi-0x74ffa593],al
  43547b:	jae    0x4354de
  43547d:	add    BYTE PTR [rdx-0x6eff9f8e],cl
  435483:	jns    0x4354ed
  435485:	add    BYTE PTR [rdx-0x6eff9585],dl
  43548b:	jp     0x4354f6
  43548d:	add    BYTE PTR [rax-0x68ff8f7f],bl
  435493:	sub    BYTE PTR [rdi+0x0],0x9a
  435497:	test   BYTE PTR [rbx+0x0],dh
  43549a:	movabs al,ds:0xa2007b8ca200798a
  4354a3:	mov    WORD PTR [rax+rax*1-0x5d],?
  4354a7:	lea    edi,[rbp+0x0]
  4354aa:	stos   BYTE PTR es:[rdi],al
  4354ab:	xchg   esp,eax
  4354ac:	test   BYTE PTR [rax],al
  4354ae:	test   eax,0xa6008393
  4354b3:	xchg   ecx,eax
  4354b4:	add    DWORD PTR [rax],0x8393a8
  4354ba:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4354bb:	xchg   edx,eax
  4354bc:	add    DWORD PTR [rax],0xffffffb0
  4354bf:	fwait
  4354c0:	mov    eax,DWORD PTR [rax]
  4354c2:	mov    cl,0x9c
  4354c4:	lea    eax,[rax]
  4354c6:	scas   al,BYTE PTR es:[rdi]
  4354c7:	cdq    
  4354c8:	mov    al,BYTE PTR [rax]
  4354ca:	mov    ah,0x9f
  4354cc:	nop
  4354cd:	add    BYTE PTR [rbx-0x47ff6f61],dh
  4354d3:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  4354d4:	xchg   ebp,eax
  4354d5:	add    ch,al
  4354d7:	mov    dl,0xa4
  4354d9:	add    ah,bh
  4354db:	clc    
  4354dc:	cmc    
  4354dd:	add    BYTE PTR [rcx-0x4cff8e7d],bl
  4354e3:	lahf   
  4354e4:	pop    QWORD PTR [rax]
  4354e6:	mov    eax,0xb60094a4
  4354eb:	movabs ds:0xb7c90091a1b50092,al
  4354f4:	test   eax,0xfcfdfe00
  4354f9:	add    bh,bh
  4354fb:	(bad)  
  4354fc:	inc    DWORD PTR [rax]
  4354fe:	(bad)  
  4354ff:	(bad)  
  435500:	inc    DWORD PTR [rax]
	...
  43572e:	add    BYTE PTR [rax],al
  435730:	rex.WRB
  435731:	rex.WXB
  435732:	rex.WXB
  435733:	rex.WXB
  435734:	rex.WXB
  435735:	rex.WXB
  435736:	rex.WXB
  435737:	rex.WXB
  435738:	rex.WXB
  435739:	rex.WXB
  43573a:	rex.WXB
  43573b:	rex.WXB add BYTE PTR [r8],al
  43573e:	add    BYTE PTR [rax],al
  435740:	rex.WRX or rax,0x1d1f2f20
  435746:	sbb    ebx,DWORD PTR [rdx]
  435748:	sbb    DWORD PTR [rcx],ebx
  43574a:	sbb    BYTE PTR [rbx+0x0],cl
  43574d:	add    BYTE PTR [rax],al
  43574f:	add    BYTE PTR [rdi+0x10],cl
  435752:	cmp    BYTE PTR [rdx],dh
  435754:	adc    ch,BYTE PTR [rax]
  435756:	(bad)  
  435757:	and    eax,0x4b1c2224
  43575c:	add    BYTE PTR [rax],al
  43575e:	add    BYTE PTR [rax],al
  435760:	push   rcx
  435761:	adc    DWORD PTR [rsi+0x65],ebp
  435764:	pop    rdi
  435765:	pop    rsp
  435766:	pop    rdx
  435767:	push   rsi
  435768:	push   rbx
  435769:	push   rax
  43576a:	sbb    al,0x4b
  43576c:	add    BYTE PTR [rax],al
  43576e:	add    BYTE PTR [rax],al
  435770:	push   rdx
  435771:	adc    eax,DWORD PTR [rbx+rbp*1]
  435774:	cmp    DWORD PTR [rip+0xe0f2831],edx        # 0xe527fab
  43577a:	(bad)  
  43577b:	rex.WXB add BYTE PTR [r8],al
  43577e:	add    BYTE PTR [rax],al
  435780:	push   rbx
  435781:	adc    al,0x42
  435783:	rex.B
  435784:	fs (bad) 
  435786:	cmp    eax,0xb54576c
  43578b:	rex.WXB add BYTE PTR [r8],al
  43578e:	add    BYTE PTR [rax],al
  435790:	push   rbp
  435791:	xor    eax,DWORD PTR [rdi]
  435793:	imul   esi,DWORD PTR [rbx+rbp*1],0x16
  435797:	adc    eax,0x4b212829
  43579c:	add    BYTE PTR [rax],al
  43579e:	add    BYTE PTR [rax],al
  4357a0:	pop    rcx
  4357a1:	add    eax,DWORD PTR [rsi+0x3f]
  4357a4:	outs   dx,DWORD PTR ds:[rsi]
  4357a5:	xor    eax,0x55585b63
  4357aa:	and    ecx,DWORD PTR [rbx+0x0]
  4357ad:	add    BYTE PTR [rax],al
  4357af:	add    BYTE PTR [rbx],bh
  4357b1:	add    dh,BYTE PTR [rbx+0x2d]
  4357b4:	(bad)  
  4357b5:	or     dh,BYTE PTR [rax+rcx*1]
  4357b8:	sub    dl,BYTE PTR [rip+0x4b0c]        # 0x43a2ca
  4357be:	add    BYTE PTR [rax],al
  4357c0:	ds (bad) 
  4357c2:	rex.W
  4357c3:	rex.RXB
  4357c4:	rex.XB jo 0x43582d
  4357c7:	(bad)  
  4357c8:	cmp    al,0x59
  4357ca:	rex.WXB add BYTE PTR es:[r8],al
  4357ce:	add    BYTE PTR [rax],al
  4357d0:	(bad)  
  4357d1:	sub    al,0x73
  4357d3:	jae    0x435848
  4357d5:	jb     0x435821
  4357d7:	cmp    al,BYTE PTR [rax+rcx*1]
  4357da:	xor    BYTE PTR [rbx+0x0],cl
  4357dd:	add    BYTE PTR [rax],al
  4357df:	add    BYTE PTR [rsi+0x9],ah
  4357e2:	jno    0x43584e
  4357e4:	rex.R
  4357e5:	rex
  4357e6:	add    DWORD PTR [eip+0x4b3704],eax        # 0x8e8ef1
  4357ed:	add    BYTE PTR [rax],al
  4357ef:	add    BYTE PTR [rbp+0x4a],ch
  4357f2:	jae    0x435867
  4357f4:	jae    0x435869
  4357f6:	jae    0x43586a
  4357f8:	pop    rbp
  4357f9:	rex.WR
  4357fa:	rex.WR
  4357fb:	rex.WXB add BYTE PTR [r8],al
  4357fe:	add    BYTE PTR [rax],al
  435800:	imul   ebp,DWORD PTR [rsi],0x73737373
  435806:	jae    0x43587b
  435808:	pop    rbp
  435809:	rex.WB pop r14
  43580b:	add    BYTE PTR [rax],al
  43580d:	add    BYTE PTR [rax],al
  43580f:	add    BYTE PTR [rsi],dh
  435811:	jae    0x435886
  435813:	jae    0x435888
  435815:	jae    0x43588a
  435817:	jae    0x435876
  435819:	pop    rsi
  43581a:	add    BYTE PTR [rax],al
  43581c:	add    BYTE PTR [rax],al
  43581e:	add    BYTE PTR [rax],al
  435820:	rex.RB
  435821:	imul   ebp,DWORD PTR ss:[rax+0x66],0x593b5e62
  435829:	add    BYTE PTR [rax],al
  43582b:	add    BYTE PTR [rax],al
  43582d:	add    al,al
  43582f:	add    eax,DWORD PTR [rax]
  435831:	add    al,al
  435833:	add    eax,DWORD PTR [rax]
  435835:	add    al,al
  435837:	add    eax,DWORD PTR [rax]
  435839:	add    al,al
  43583b:	add    eax,DWORD PTR [rax]
  43583d:	add    al,al
  43583f:	add    eax,DWORD PTR [rax]
  435841:	add    al,al
  435843:	add    eax,DWORD PTR [rax]
  435845:	add    al,al
  435847:	add    eax,DWORD PTR [rax]
  435849:	add    al,al
  43584b:	add    eax,DWORD PTR [rax]
  43584d:	add    al,al
  43584f:	add    eax,DWORD PTR [rax]
  435851:	add    al,al
  435853:	add    eax,DWORD PTR [rax]
  435855:	add    al,al
  435857:	add    eax,DWORD PTR [rax]
  435859:	add    al,al
  43585b:	add    eax,DWORD PTR [rax]
  43585d:	add    al,al
  43585f:	add    eax,DWORD PTR [rax]
  435861:	add    al,al
  435863:	(bad)  
  435864:	add    BYTE PTR [rax],al
  435866:	ror    BYTE PTR [rdi],0x0
  435869:	add    al,al
  43586b:	(bad)  
  43586c:	add    BYTE PTR [rax],al
  43586e:	sub    BYTE PTR [rax],al
  435870:	add    BYTE PTR [rax],al
  435872:	adc    BYTE PTR [rax],al
  435874:	add    BYTE PTR [rax],al
  435876:	and    BYTE PTR [rax],al
  435878:	add    BYTE PTR [rax],al
  43587a:	add    DWORD PTR [rax],eax
  43587c:	and    BYTE PTR [rax],al
	...
  43589e:	jno    0x4358f7
  4358a0:	rex.R jmp QWORD PTR [rbx+0x49]
  4358a4:	xor    eax,0x354963ff
  4358a9:	jmp    QWORD PTR [rbx+0x49]
  4358ac:	xor    eax,0x354963ff
  4358b1:	jmp    QWORD PTR [rbx+0x49]
  4358b4:	xor    eax,0x354963ff
  4358b9:	jmp    QWORD PTR [rbx+0x49]
  4358bc:	xor    eax,0x354963ff
  4358c1:	jmp    QWORD PTR [rbx+0x49]
  4358c4:	xor    eax,0x354963ff
  4358c9:	jmp    QWORD PTR [rbx+0x49]
  4358cc:	xor    eax,0xff
	...
  4358dd:	add    BYTE PTR [rsi+0x5c],dh
  4358e0:	rex.WB (bad) 
  4358e2:	out    dx,eax
  4358e3:	rol    esi,cl
  4358e5:	(bad)  
  4358e6:	fidivr WORD PTR [rdi-0x42200051]
  4358ec:	stos   DWORD PTR es:[rdi],eax
  4358ed:	(bad)  
  4358ee:	fdivr  QWORD PTR [rax-0x4b250059]
  4358f4:	movabs ds:0x99add7ff9db0d8ff,al
  4358fd:	call   rdi
  4358ff:	lods   al,BYTE PTR ds:[rsi]
  435900:	xchg   esi,eax
  435901:	call   rdi
  435903:	lods   al,BYTE PTR ds:[rsi]
  435904:	xchg   esi,eax
  435905:	(bad)  
  435906:	fld    TBYTE PTR [rbp+rdx*4+0x354963ff]
  43590d:	inc    DWORD PTR [rax]
	...
  43591b:	add    BYTE PTR [rax],al
  43591d:	add    BYTE PTR [rdx+0x61],bh
  435920:	rex.WRX (bad) 
  435922:	clc    
  435923:	loop   0x4358fd
  435925:	(bad)  
  435926:	cli    
  435927:	out    dx,al
  435928:	out    0xff,eax
  43592a:	stc    
  43592b:	(bad)  
  43592c:	loop   0x43592d
  43592e:	mul    ebp
  435930:	(bad)  
  435932:	mul    cl
  435934:	xlat   BYTE PTR ds:[rbx]
  435935:	push   rsp
  435937:	fst    st(1)
  435939:	push   rsp
  43593b:	fxch   st(4)
  43593d:	push   rdx
  43593f:	(bad)  
  435940:	(bad)  
  435941:	push   rdx
  435943:	rol    ecx,1
  435945:	(bad)  
  435946:	(bad)  
  435947:	shr    BYTE PTR [rdi+rdi*8-0xcab69d],0x0
	...
  43595b:	add    BYTE PTR [rax],al
  43595d:	add    BYTE PTR [rax-0x700aa99],al
  435963:	in     al,0xdb
  435965:	(bad)  
  435966:	mov    eax,0xb1ff94a4
  43596b:	pushf  
  43596c:	(bad)  
  43596d:	jmp    FWORD PTR [rdx-0x5d007b6c]
  435973:	mov    WORD PTR [rbx-0x1],?
  435976:	(bad)  
  435977:	test   BYTE PTR [rbx-0x1],dh
  43597a:	xchg   edx,eax
  43597b:	jnp    0x4359e7
  43597d:	dec    DWORD PTR [rbx-0x7b009e8d]
  435983:	imul   ebx,DWORD PTR [rax-0x1],0xffffffea
  435987:	shr    BYTE PTR [rdi+rdi*8-0xcab69d],0x0
	...
  43599b:	add    BYTE PTR [rax],al
  43599d:	add    BYTE PTR [rsi-0x600a593],al
  4359a3:	call   0xfffffffff5405988
  4359a8:	icebp  
  4359a9:	(bad)  
  4359aa:	sti    
  4359ab:	icebp  
  4359ac:	in     al,dx
  4359ad:	(bad)  
  4359ae:	stc    
  4359af:	out    dx,al
  4359b0:	out    0xff,eax
  4359b2:	clc    
  4359b3:	jmp    0xffffffffe73c599a
  4359b8:	fdiv   st(7),st
  4359ba:	mul    cl
  4359bc:	xlat   BYTE PTR ds:[rbx]
  4359bd:	push   rbp
  4359bf:	fst    st(2)
  4359c1:	push   rsp
  4359c3:	fmul   st,st(4)
  4359c5:	(bad)  
  4359c6:	jmp    0x43598b
  4359c8:	mov    al,0xff
  4359ca:	movsxd ecx,DWORD PTR [rcx+0x35]
  4359cd:	inc    DWORD PTR [rax]
	...
  4359db:	add    BYTE PTR [rax],al
  4359dd:	add    BYTE PTR [rbx-0x5009e8d],cl
  4359e3:	jmp    0x4359c9
  4359e5:	(bad)  
  4359e6:	mov    ebp,0xb6ff9ba9
  4359eb:	movabs ds:0x93a9ff8b9bb0ff94,al
  4359f4:	cmp    edi,0xffffffa1
  4359f7:	mov    bh,BYTE PTR [rbx-0x1]
  4359fa:	cdq    
  4359fb:	xor    DWORD PTR [rcx-0x1],0xffffff91
  4359ff:	jp     0x435a6a
  435a01:	dec    DWORD PTR [rdx-0x12009f8e]
  435a07:	(bad)  
  435a08:	mov    dh,0xff
  435a0a:	movsxd ecx,DWORD PTR [rcx+0x35]
  435a0d:	inc    DWORD PTR [rax]
	...
  435a1b:	add    BYTE PTR [rax],al
  435a1d:	add    BYTE PTR [rcx-0x4009787],dl
  435a23:	out    dx,al
  435a24:	out    0xff,eax
  435a26:	std    
  435a27:	cli    
  435a28:	stc    
  435a29:	(bad)  
  435a2a:	cld    
  435a2b:	clc    
  435a2c:	cmc    
  435a2d:	(bad)  
  435a2e:	cld    
  435a2f:	cmc    
  435a30:	icebp  
  435a31:	(bad)  
  435a32:	sti    
  435a33:	icebp  
  435a34:	in     al,dx
  435a35:	(bad)  
  435a36:	cli    
  435a37:	in     eax,dx
  435a38:	out    0xff,eax
  435a3a:	clc    
  435a3b:	jmp    0xffffffffe63c5a22
  435a40:	fdiv   st(7),st
  435a42:	mul    cl
  435a44:	xlat   BYTE PTR ds:[rbx]
  435a45:	(bad)  
  435a46:	out    dx,al
  435a47:	int    0xbc
  435a49:	jmp    QWORD PTR [rbx+0x49]
  435a4c:	xor    eax,0xff
	...
  435a5d:	add    BYTE PTR [rdi-0x3009080],dl
  435a63:	lock in al,dx
  435a65:	inc    edx
  435a67:	scas   al,BYTE PTR es:[rdi]
  435a68:	movabs eax,ds:0x92a2b6ff9aa8bdff
  435a71:	jmp    FWORD PTR [rdi-0x58007467]
  435a77:	xchg   edx,eax
  435a78:	cmp    edi,0xffffffa0
  435a7b:	mov    bh,BYTE PTR [rcx-0x1]
  435a7e:	cwde   
  435a7f:	xor    DWORD PTR [rax-0x1],0xff687991
  435a86:	lock rol bl,cl
  435a89:	jmp    QWORD PTR [rbx+0x49]
  435a8c:	xor    eax,0xff
	...
  435a9d:	add    BYTE PTR [rbp-0x200897a],bl
  435aa3:	repz lock (bad) 
  435aa6:	(bad)  
  435aa7:	(bad)  
  435aa8:	(bad)  
  435aa9:	(bad)  
  435aaa:	(bad)  
  435aab:	std    
  435aac:	cld    
  435aad:	(bad)  
  435aae:	(bad)  
  435aaf:	sti    
  435ab0:	cli    
  435ab1:	(bad)  
  435ab2:	std    
  435ab3:	clc    
  435ab4:	idiv   bh
  435ab6:	cld    
  435ab7:	cmc    
  435ab8:	icebp  
  435ab9:	(bad)  
  435aba:	sti    
  435abb:	icebp  
  435abc:	in     eax,dx
  435abd:	(bad)  
  435abe:	stc    
  435abf:	in     eax,dx
  435ac0:	out    0xff,eax
  435ac2:	clc    
  435ac3:	jmp    0xffffffffd7375aaa
  435ac8:	leave  
  435ac9:	jmp    QWORD PTR [rbx+0x49]
  435acc:	xor    eax,0xff
	...
  435add:	add    BYTE PTR [rbx-0x3008274],ah
  435ae3:	cmc    
  435ae4:	repnz inc esi
  435ae7:	mov    bl,0xa6
  435ae9:	inc    ecx
  435aeb:	lods   eax,DWORD PTR ds:[rsi]
  435aec:	movabs al,ds:0x91a1b5ff99a7bbff
  435af5:	jmp    FWORD PTR [rsi-0x59007567]
  435afb:	xchg   ecx,eax
  435afc:	cmp    edi,0xff78889f
  435b02:	xchg   edi,eax
  435b03:	sub    BYTE PTR [rdi-0x1],0xf4
  435b07:	(bad)  
  435b09:	jmp    QWORD PTR [rbx+0x49]
  435b0c:	xor    eax,0xff
	...
  435b1d:	add    BYTE PTR [rax-0x1007c6d],ch
  435b23:	clc    
  435b24:	cmc    
  435b25:	(bad)  
  435b26:	(bad)  
  435b27:	(bad)  
  435b28:	(bad)  
  435b29:	(bad)  
  435b2a:	(bad)  
  435b2b:	(bad)  
  435b2c:	(bad)  
  435b2d:	(bad)  
  435b2e:	(bad)  
  435b2f:	(bad)  
  435b30:	(bad)  
  435b31:	(bad)  
  435b32:	(bad)  
  435b33:	std    
  435b34:	cld    
  435b35:	(bad)  
  435b36:	(bad)  
  435b37:	sti    
  435b38:	stc    
  435b39:	(bad)  
  435b3a:	std    
  435b3b:	clc    
  435b3c:	cmc    
  435b3d:	(bad)  
  435b3e:	cld    
  435b3f:	hlt    
  435b40:	icebp  
  435b41:	(bad)  
  435b42:	sti    
  435b43:	icebp  
  435b44:	in     eax,dx
  435b45:	push   rdi
  435b47:	loop   0x435b20
  435b49:	jmp    QWORD PTR [rbx+0x49]
  435b4c:	xor    eax,0xff
	...
  435b5d:	add    BYTE PTR [rsi-0x1007567],ch
  435b63:	stc    
  435b64:	idiv   edi
  435b66:	leave  
  435b67:	mov    bh,0xa9
  435b69:	inc    ebp
  435b6b:	mov    dl,0xa4
  435b6d:	inc    eax
  435b6f:	lods   al,BYTE PTR ds:[rsi]
  435b70:	sahf   
  435b71:	(bad)  
  435b72:	mov    ebx,0xb4ff98a6
  435b77:	lahf   
  435b78:	nop
  435b79:	(bad)  
  435b7a:	(bad)  
  435b7b:	cli    
  435b7c:	stc    
  435b7d:	(bad)  
  435b7e:	std    
  435b7f:	div    ebp
  435b81:	(bad)  
  435b82:	cld    
  435b83:	hlt    
  435b84:	icebp  
  435b85:	(bad)  
  435b86:	sti    
  435b87:	(bad)  
  435b88:	loopne 0x435b89
  435b8a:	movsxd ecx,DWORD PTR [rcx+0x35]
  435b8d:	inc    DWORD PTR [rax]
	...
  435b9b:	add    BYTE PTR [rax],al
  435b9d:	add    BYTE PTR [rbx-0x1007061],dh
  435ba3:	sti    
  435ba4:	stc    
  435ba5:	(bad)  
  435ba6:	(bad)  
  435ba7:	(bad)  
  435ba8:	(bad)  
  435ba9:	(bad)  
  435baa:	(bad)  
  435bab:	(bad)  
  435bac:	(bad)  
  435bad:	(bad)  
  435bae:	(bad)  
  435baf:	(bad)  
  435bb0:	(bad)  
  435bb1:	(bad)  
  435bb2:	(bad)  
  435bb3:	(bad)  
  435bb4:	(bad)  
  435bb5:	(bad)  
  435bb6:	(bad)  
  435bb7:	(bad)  
  435bb8:	(bad)  
  435bb9:	(bad)  
  435bba:	(bad)  
  435bbb:	std    
  435bbc:	cld    
  435bbd:	jmp    QWORD PTR [rdx+0x6cff7c8c]
  435bc3:	push   rcx
  435bc4:	cmp    eax,0x3d516cff
  435bc9:	jmp    QWORD PTR [rbx+0x49]
  435bcc:	xor    eax,0xff
	...
  435bdd:	add    BYTE PTR [rax-0x1006a5c],bh
  435be3:	cld    
  435be4:	sti    
  435be5:	(bad)  
  435be6:	(bad)  
  435be7:	(bad)  
  435be8:	(bad)  
  435be9:	(bad)  
  435bea:	(bad)  
  435beb:	(bad)  
  435bec:	(bad)  
  435bed:	(bad)  
  435bee:	(bad)  
  435bef:	(bad)  
  435bf0:	(bad)  
  435bf1:	(bad)  
  435bf2:	(bad)  
  435bf3:	(bad)  
  435bf4:	(bad)  
  435bf5:	(bad)  
  435bf6:	(bad)  
  435bf7:	(bad)  
  435bf8:	(bad)  
  435bf9:	(bad)  
  435bfa:	(bad)  
  435bfb:	(bad)  
  435bfc:	(bad)  
  435bfd:	jmp    QWORD PTR [rdx-0x18008374]
  435c03:	(bad)  
  435c05:	jmp    QWORD PTR [rbx+0xff7d8d]
	...
  435c1b:	add    BYTE PTR [rax],al
  435c1d:	add    BYTE PTR [rbp-0x6458],bh
  435c23:	(bad)  
  435c24:	(bad)  
  435c25:	(bad)  
  435c26:	(bad)  
  435c27:	(bad)  
  435c28:	(bad)  
  435c29:	(bad)  
  435c2a:	(bad)  
  435c2b:	(bad)  
  435c2c:	(bad)  
  435c2d:	(bad)  
  435c2e:	(bad)  
  435c2f:	(bad)  
  435c30:	(bad)  
  435c31:	(bad)  
  435c32:	(bad)  
  435c33:	(bad)  
  435c34:	(bad)  
  435c35:	(bad)  
  435c36:	(bad)  
  435c37:	(bad)  
  435c38:	(bad)  
  435c39:	(bad)  
  435c3a:	(bad)  
  435c3b:	(bad)  
  435c3c:	(bad)  
  435c3d:	jmp    QWORD PTR [rdx-0x5c008374]
  435c43:	lea    edi,[rbp-0x1]
	...
  435c5e:	ret    0xa0ae
  435c61:	(bad)  
  435c62:	mov    ebp,0xb8ff9ba8
  435c67:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  435c68:	xchg   ebp,eax
  435c69:	push   QWORD PTR [rbx-0x51006f61]
  435c6f:	cdq    
  435c70:	mov    bh,bh
  435c72:	test   al,0x93
  435c74:	cmp    edi,0xffffffa3
  435c77:	lea    edi,[rbp-0x1]
  435c7a:	popf   
  435c7b:	xchg   BYTE PTR [rsi-0x1],dh
  435c7e:	xchg   edi,eax
  435c7f:	sub    BYTE PTR [rdi-0x1],0x0
	...
  435c93:	add    BYTE PTR [rax],al
  435c95:	add    al,al
  435c97:	add    ecx,DWORD PTR [rbp+0x4b]
  435c9a:	rol    BYTE PTR [rbx],0x4b
  435c9d:	rex.WXB rol BYTE PTR [r11],0x4b
  435ca1:	rex.WXB rol BYTE PTR [r11],0x0
  435ca5:	add    al,al
  435ca7:	add    ecx,DWORD PTR [rsi+0xd]
  435caa:	rol    BYTE PTR [rbx],0x1f
  435cad:	sbb    eax,0x191903c0
  435cb2:	rol    BYTE PTR [rbx],0x0
  435cb5:	add    al,al
  435cb7:	add    ecx,DWORD PTR [rdi+0x10]
  435cba:	rol    BYTE PTR [rbx],0x12
  435cbd:	sub    al,al
  435cbf:	add    esp,DWORD PTR [rdx+riz*1]
  435cc2:	rol    BYTE PTR [rbx],0x0
  435cc5:	add    al,al
  435cc7:	add    edx,DWORD PTR [rcx+0x11]
  435cca:	rol    BYTE PTR [rdi],0x5f
  435ccd:	pop    rsp
  435cce:	ror    BYTE PTR [rdi],0x53
  435cd1:	push   rax
  435cd2:	rcr    BYTE PTR [rdi],0x0
  435cd5:	add    BYTE PTR [rbx],cl
  435cd7:	add    BYTE PTR [rcx],al
  435cda:	add    BYTE PTR [rax],al
  435cdc:	add    bh,bh
  435cde:	(bad)  
  435cdf:	(bad)  
  435ce0:	inc    DWORD PTR [rcx]
  435ce2:	add    BYTE PTR [rax],al
  435ce4:	add    BYTE PTR [rax],al
  435ce6:	add    BYTE PTR [rax],al
  435ce8:	add    BYTE PTR [rdx+rax*1],cl
  435ceb:	add    BYTE PTR [rax],al
  435ced:	add    BYTE PTR [rcx+0x53],dl
  435cf0:	jns    0x435d65
  435cf2:	je     0x435d59
  435cf4:	ins    DWORD PTR es:[rdi],dx
  435cf5:	cs rex.R jb 0x435d5a
  435cf9:	ja     0x435d64
  435cfb:	outs   dx,BYTE PTR ds:[rsi]
  435cfc:	addr32 sub al,0x20
  435cff:	push   rsi
  435d00:	gs jb  0x435d76
  435d03:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  435d0a:	xor    BYTE PTR cs:[rsi],ch
  435d0d:	xor    BYTE PTR [rax+riz*1],ch
  435d10:	rex.XB jne 0x435d7f
  435d13:	je     0x435d8a
  435d15:	jb     0x435d7c
  435d17:	cmp    eax,0x7475656e
  435d1c:	jb     0x435d7f
  435d1e:	ins    BYTE PTR es:[rdi],dx
  435d1f:	sub    al,0x20
  435d21:	push   rax
  435d22:	jne    0x435d86
  435d24:	ins    BYTE PTR es:[rdi],dx
  435d25:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  435d2c:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  435d30:	(bad)  
  435d31:	xor    BYTE PTR [rbx],dh
  435d33:	xor    ax,0x3766
  435d37:	xor    WORD PTR [rcx],si
  435d3a:	fs xor eax,0x61336130
  435d40:	add    eax,0x1
  435d45:	adc    edx,DWORD PTR [rbx+0x79]
  435d48:	jae    0x435dbe
  435d4a:	gs ins DWORD PTR es:[rdi],dx
  435d4c:	cs rex.R jb 0x435db1
  435d50:	ja     0x435dbb
  435d52:	outs   dx,BYTE PTR ds:[rsi]
  435d53:	movsxd rbp,DWORD PTR cs:[r15d+0x6e]
  435d59:	add    al,BYTE PTR [rax]
  435d5b:	add    BYTE PTR [rax],al
  435d5d:	or     BYTE PTR [rcx+0x63],cl
  435d60:	outs   dx,DWORD PTR ds:[rsi]
  435d61:	outs   dx,BYTE PTR ds:[rsi]
  435d62:	rex.R (bad) 
  435d64:	je     0x435dc7
  435d66:	or     BYTE PTR [rcx+0x63],cl
  435d69:	outs   dx,DWORD PTR ds:[rsi]
  435d6a:	outs   dx,BYTE PTR ds:[rsi]
  435d6b:	push   rbx
  435d6c:	imul   edi,DWORD PTR [rdx+0x65],0x13020407
  435d73:	push   rbx
  435d74:	jns    0x435de9
  435d76:	je     0x435ddd
  435d78:	ins    DWORD PTR es:[rdi],dx
  435d79:	cs rex.R jb 0x435dde
  435d7d:	ja     0x435de8
  435d7f:	outs   dx,BYTE PTR ds:[rsi]
  435d80:	addr32 cs push rbx
  435d83:	imul   edi,DWORD PTR [rdx+0x65],0x2
  435d8a:	add    al,BYTE PTR [rax]
  435d8c:	add    BYTE PTR [rax],al
  435d8e:	or     DWORD PTR [rbx],eax
  435d90:	add    BYTE PTR [rax],al
  435d92:	add    BYTE PTR [rip+0xfffffffffffffffc],al        # 0x435d94
  435d98:	adc    edx,DWORD PTR [rbx+0x79]
  435d9b:	jae    0x435e11
  435d9d:	gs ins DWORD PTR es:[rdi],dx
  435d9f:	cs rex.R jb 0x435e04
  435da3:	ja     0x435e0e
  435da5:	outs   dx,BYTE PTR ds:[rsi]
  435da6:	addr32 cs push rbx
  435da9:	imul   edi,DWORD PTR [rdx+0x65],0x2
  435db0:	add    eax,0x74646977
  435db5:	push   0x69656806
  435dba:	addr32 push 0x8000074
  435dc0:	or     BYTE PTR [rdx],al
	...
  435dca:	add    BYTE PTR [rax],al
  435dcc:	add    BYTE PTR [rdi],cl
  435dce:	add    eax,DWORD PTR [rax]
  435dd0:	add    BYTE PTR [rax],al
  435dd2:	xchg   esi,eax
  435dd3:	(bad)  
  435dd4:	add    BYTE PTR [rax],al
  435dd6:	add    al,BYTE PTR [rax]
  435dd8:	add    BYTE PTR [rcx],al
  435dda:	add    BYTE PTR [rsi],al
  435ddc:	add    BYTE PTR [rax],ah
  435dde:	and    BYTE PTR [rax],dl
  435de0:	add    BYTE PTR [rcx],al
  435de2:	add    BYTE PTR [rax+rax*1],al
  435de5:	call   0x66435dec
  435dea:	add    BYTE PTR [rax],al
  435dec:	add    BYTE PTR [rax],dl
  435dee:	adc    BYTE PTR [rax],dl
  435df0:	add    BYTE PTR [rcx],al
  435df2:	add    BYTE PTR [rax+rax*1],al
  435df5:	sub    BYTE PTR [rcx],al
  435df7:	add    BYTE PTR [rax],al
  435df9:	rex.WRX add r8,QWORD PTR [rax]
  435dfc:	add    BYTE PTR [rax],ah
  435dfe:	and    BYTE PTR [rax],al
  435e00:	add    BYTE PTR [rcx],al
  435e02:	add    BYTE PTR [rax],cl
  435e04:	add    BYTE PTR [rax+0x76000008],ch
  435e0a:	add    al,0x0
  435e0c:	add    BYTE PTR [rax],dl
  435e0e:	adc    BYTE PTR [rax],al
  435e10:	add    BYTE PTR [rcx],al
  435e12:	add    BYTE PTR [rax],cl
  435e14:	add    BYTE PTR [rax+0x5],ch
  435e17:	add    BYTE PTR [rax],al
  435e19:	(bad)  
  435e1a:	or     eax,0x20200000
  435e1f:	add    BYTE PTR [rax],al
  435e21:	add    DWORD PTR [rax],eax
  435e23:	and    BYTE PTR [rax],al
  435e25:	test   al,0x10
  435e27:	add    BYTE PTR [rax],al
  435e29:	xchg   BYTE PTR [rdx],dl
  435e2b:	add    BYTE PTR [rax],al
  435e2d:	adc    BYTE PTR [rax],dl
  435e2f:	add    BYTE PTR [rax],al
  435e31:	add    DWORD PTR [rax],eax
  435e33:	and    BYTE PTR [rax],al
  435e35:	push   0x2e000004
  435e3a:	and    eax,DWORD PTR [rax]
  435e3c:	add    BYTE PTR [rax],ch
  435e3e:	add    BYTE PTR [rax],al
  435e40:	add    BYTE PTR [rax],ah
  435e42:	add    BYTE PTR [rax],al
  435e44:	add    BYTE PTR [rax+0x0],al
  435e47:	add    BYTE PTR [rax],al
  435e49:	add    DWORD PTR [rax],eax
  435e4b:	add    al,0x0
  435e4d:	add    BYTE PTR [rax],al
  435e4f:	add    BYTE PTR [rax],al
  435e51:	add    BYTE PTR [rdx],al
	...
  435e6b:	add    BYTE PTR [rax],0x0
  435e6e:	add    BYTE PTR [rax],0x0
  435e71:	add    BYTE PTR [rax+0x800080],al
  435e77:	add    BYTE PTR [rax],al
  435e79:	add    BYTE PTR [rax],0x80
  435e7c:	add    BYTE PTR [rax-0x7fffff80],al
  435e82:	add    BYTE PTR [rax-0x3f3f4000],0x0
  435e89:	add    BYTE PTR [rax],al
  435e8b:	inc    DWORD PTR [rax]
  435e8d:	add    bh,bh
  435e8f:	add    BYTE PTR [rax],al
  435e91:	add    bh,bh
  435e93:	inc    DWORD PTR [rax]
  435e95:	inc    DWORD PTR [rax]
  435e97:	add    BYTE PTR [rax],al
  435e99:	inc    DWORD PTR [rax]
  435e9b:	inc    DWORD PTR [rax]
  435e9d:	(bad)  
  435e9e:	inc    DWORD PTR [rax]
  435ea0:	add    bh,bh
  435ea2:	(bad)  
  435ea3:	inc    DWORD PTR [rax]
	...
  435eb9:	add    BYTE PTR [rax],al
  435ebb:	add    BYTE PTR [rdx],al
  435ebd:	jb     0x435ee6
  435ebf:	and    esp,DWORD PTR [rdx+0x36]
  435ec2:	and    esp,DWORD PTR ss:[rax+0x0]
  435ec6:	add    BYTE PTR [rax],al
  435ec8:	add    BYTE PTR [rax],al
  435eca:	add    BYTE PTR [rax],al
  435ecc:	add    dh,BYTE PTR [rdi+0x37]
  435ecf:	ss ss (bad) 
  435ed2:	and    esp,DWORD PTR [rdx+0x30]
  435ed5:	add    BYTE PTR [rax],al
  435ed7:	add    BYTE PTR [rax],al
  435ed9:	add    BYTE PTR [rax],al
  435edb:	add    BYTE PTR [rdi],al
  435edd:	xchg   DWORD PTR [rdx+0x67],esi
  435ee0:	jae    0x435f14
  435ee2:	jb     0x435f57
  435ee4:	(bad)  
  435ee5:	add    BYTE PTR [rax],al
  435ee7:	or     BYTE PTR [rdi+0x70],dh
  435eea:	add    BYTE PTR [rax],al
  435eec:	add    al,BYTE PTR [rdi+0x633782a7]
  435ef2:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  435ef3:	xor    BYTE PTR es:[rax],al
  435ef6:	add    BYTE PTR [rax-0x8],bh
  435ef9:	mov    BYTE PTR [rax+0x0],dh
  435efc:	add    bh,al
  435efe:	(bad)  
  435eff:	mov    BYTE PTR [rdi],ah
  435f01:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  435f02:	jae    0x435f3e
  435f04:	(bad)  
  435f05:	add    BYTE PTR [rdi],al
  435f07:	ja     0x435f81
  435f09:	clc    
  435f0a:	ja     0x435f0c
  435f0c:	(bad)  
  435f0d:	mov    bh,bh
  435f0f:	clc    
  435f10:	xchg   DWORD PTR [rax],ecx
  435f12:	xchg   BYTE PTR [rdi],dh
  435f14:	and    BYTE PTR [rax],al
  435f16:	add    BYTE PTR [rax],al
  435f18:	(bad)  
  435f19:	clc    
  435f1a:	ja     0x435f1c
  435f1c:	(bad)  
  435f1d:	xchg   DWORD PTR [rdi-0x7d077701],edi
  435f23:	jp     0x435f55
  435f25:	add    BYTE PTR [rax],al
  435f27:	add    BYTE PTR [rdi],al
  435f29:	clc    
  435f2a:	jbe    0x435f2c
  435f2c:	add    ecx,DWORD PTR [rax-0x86]
  435f32:	xor    DWORD PTR [rdx+0x60],0x0
  435f36:	(bad)  
  435f37:	ja     0x435fb1
  435f39:	mov    BYTE PTR [rsi-0x7877f900],al
  435f3f:	jg     0x435f40
  435f41:	inc    DWORD PTR [rdi+0x3036]
  435f47:	(bad)
  435f4b:	add    BYTE PTR [rdi],al
  435f4d:	xchg   DWORD PTR [rdx+0x7f],edi
  435f50:	(bad)  
  435f51:	clc    
  435f52:	idiv   DWORD PTR [rdx+0x70]
  435f55:	add    BYTE PTR [rax],al
  435f57:	xchg   edi,edi
  435f59:	mov    BYTE PTR [rax-0x7877f890],cl
  435f5f:	(bad)  
  435f60:	(bad)  
  435f61:	inc    DWORD PTR [rdi+0x20a7]
  435f67:	add    BYTE PTR [rdi+0x78],dh
  435f6a:	mov    BYTE PTR [rdi+0x7],dh
  435f6d:	xchg   DWORD PTR [rdx-0x8000001],ecx
  435f73:	jae    0x435fe5
  435f75:	add    BYTE PTR [rax],al
  435f77:	add    BYTE PTR [rax],al
  435f79:	or     BYTE PTR [rax-0x79],ch
  435f7c:	jbe    0x435f06
  435f7e:	js     0x435f08
  435f80:	js     0x435f09
  435f82:	mov    BYTE PTR [rdi+0x20],ah
  435f88:	add    BYTE PTR [rax],al
  435f8a:	xchg   DWORD PTR [rax-0x77777779],ecx
  435f90:	mov    BYTE PTR [rax+0x608788],cl
  435f96:	add    BYTE PTR [rax],al
  435f98:	add    BYTE PTR [rax],al
  435f9a:	or     BYTE PTR [rax-0x19],bh
  435f9d:	addr32 jp 0x43601a
  435fa0:	ja     0x435f49
  435fa2:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  435fa3:	movabs ds:0x87000000060000a0,eax
  435fac:	mov    BYTE PTR [rdi+0x0],dh
	...
  435fb7:	rex.RXB
  435fb8:	add    BYTE PTR [rax],al
  435fbb:	or     BYTE PTR [rax+0x77],bh
  435fbe:	(bad)  
  435fbf:	add    BYTE PTR [rax],al
  435fc1:	add    BYTE PTR [rax],al
  435fc3:	add    BYTE PTR [rax],al
  435fc5:	add    BYTE PTR [rsi],al
  435fc7:	jl     0x43603f
  435fc9:	add    BYTE PTR [rax],al
  435fcb:	add    BYTE PTR [rsi+0x77f7],al
  435fd1:	add    BYTE PTR [rax],al
  435fd3:	add    BYTE PTR [rax],al
  435fd5:	add    al,cl
  435fd7:	out    0xc7,eax
  435fd9:	rol    BYTE PTR [rax],0x0
  435fdc:	or     BYTE PTR [rdi+0x77],cl
  435fdf:	addr32 addr32 js 0x435fe3
  435fe3:	add    BYTE PTR [rax],al
  435fe5:	or     ah,ch
  435fe7:	mov    WORD PTR [rsi+0x46],cs
  435fed:	xchg   bh,dh
  435fef:	xchg   DWORD PTR [rdi+0x76],esi
  435ff2:	jo     0x435ff4
  435ff4:	add    BYTE PTR [rax],al
  435ff6:	(bad)  
  435ff7:	mov    ?,WORD PTR [rax+rax*1+0x0]
  435ffb:	add    BYTE PTR [rax],al
  435ffd:	(bad)  
  435ffe:	js     0x435f87
  436000:	js     0x435f89
  436002:	ja     0x436004
  436004:	add    BYTE PTR [rax],al
  436006:	or     al,cl
  436008:	xchg   BYTE PTR [rax],al
  43600a:	add    BYTE PTR [rax],al
  43600c:	add    BYTE PTR [rax],al
  43600e:	js     0x435f97
  436010:	mov    BYTE PTR [rsi+0x47],0x0
  436014:	add    BYTE PTR [rax],al
  436016:	add    al,ch
  436018:	jl     0x43601a
  43601a:	add    BYTE PTR [rax],al
  43601c:	add    BYTE PTR [rax],al
  43601e:	js     0x435fa8
  436020:	jo     0x436022
  436022:	add    BYTE PTR [rax],al
  436024:	add    BYTE PTR [rax],al
  436026:	add    BYTE PTR [rax+0x708e],cl
  43602c:	add    BYTE PTR [rax],al
  43602e:	(bad)  
  43602f:	mov    ss,WORD PTR [rax+0x0]
  436032:	add    BYTE PTR [rax],al
  436034:	add    BYTE PTR [rax],al
  436036:	add    BYTE PTR [rax+rcx*4],cl
  436039:	mov    WORD PTR [rax],es
  43603b:	add    BYTE PTR [rax],al
  43603d:	jbe    0x4360b7
  43603f:	mov    BYTE PTR [rax+0x0],dh
  436042:	add    BYTE PTR [rax],al
  436044:	add    BYTE PTR [rax],al
  436046:	add    BYTE PTR [rdi],cl
  436048:	mov    BYTE PTR [rsi+0x677c7e7c],cl
  43604e:	xchg   BYTE PTR [rax+0x587684],cl
  436054:	add    BYTE PTR [rax],al
  436056:	add    BYTE PTR [rax],al
  436058:	mov    cs,WORD PTR [rax+0x778888]
  43605e:	or     BYTE PTR [rax-0x78],bh
  436061:	xchg   BYTE PTR [rax+0x0],dh
  436064:	add    BYTE PTR [rax],al
  436066:	add    BYTE PTR [rax],al
  436068:	add    BYTE PTR [rsp+rbp*8+0x6c],cl
  43606f:	mov    BYTE PTR [rdi+0x78],ah
	...
  4360a2:	add    BYTE PTR [rax],al
  4360a4:	add    bh,bh
  4360a6:	(bad)  
  4360a7:	(bad)  
  4360a8:	(bad)  
  4360a9:	(bad)  
  4360aa:	inc    BYTE PTR [rax]
  4360ac:	add    edi,edi
  4360ae:	inc    BYTE PTR [rax]
  4360b0:	add    edi,edi
  4360b2:	inc    BYTE PTR [rax]
  4360b4:	add    eax,edi
  4360b6:	jle    0x4360b8
  4360b8:	add    eax,esi
  4360ba:	(bad)  
  4360bb:	add    BYTE PTR [rcx],al
  4360bd:	loopne 0x4360cd
  4360bf:	add    BYTE PTR [rcx],al
  4360c1:	dec    BYTE PTR [rsi]
  4360c3:	add    BYTE PTR [rcx],al
  4360c5:	dec    BYTE PTR [rsi]
  4360c7:	add    BYTE PTR [rcx],al
  4360c9:	loopne 0x4360d9
  4360cb:	add    BYTE PTR [rcx],al
  4360cd:	lock (bad) 
  4360cf:	add    BYTE PTR [rcx],al
  4360d1:	lock (bad) 
  4360d3:	add    BYTE PTR [rcx],al
  4360d5:	cld    
  4360d6:	add    al,BYTE PTR [rax]
  4360d8:	add    edi,edi
  4360da:	add    BYTE PTR [rax],0x1
  4360dd:	inc    eax
  4360df:	add    BYTE PTR [rcx],al
  4360e1:	jmp    rax
  4360e3:	add    BYTE PTR [rcx],al
  4360e5:	sti    
  4360e6:	lock (bad) 
  4360e8:	push   rcx
  4360ea:	clc    
  4360eb:	(bad)  
  4360ec:	jmp    rax
  4360ee:	cld    
  4360ef:	ud0    eax,eax
  4360f2:	jle    0x4360f4
  4360f4:	(bad)  
  4360f5:	cmp    BYTE PTR [rdi],0x0
  4360f8:	(bad)  
  4360f9:	loopne 0x4360fa
  4360fb:	or     BYTE PTR [rdi],0xe0
  4360fe:	inc    eax
  436100:	(bad)  
  436102:	inc    ecx
  436104:	push   rax
  436106:	jg     0x4360c9
  436108:	(bad)  
  436109:	clc    
  43610a:	(bad)  
  43610b:	add    edi,edi
  43610d:	clc    
  43610e:	add    BYTE PTR [rax],al
  436110:	paddb  mm0,QWORD PTR [rax]
  436113:	loopne 0x436134
  436115:	inc    DWORD PTR [rbx]
  436117:	lock (bad) 
  436119:	(bad)  
  43611a:	(bad)  
  43611b:	(bad)  
  43611c:	(bad)  
  43611d:	(bad)  
  43611e:	(bad)  
  43611f:	(bad)  
  436120:	(bad)  
  436121:	(bad)  
  436122:	(bad)  
  436123:	(bad)  
  436124:	jmp    FWORD PTR [rax]
  436126:	add    BYTE PTR [rax],al
  436128:	add    BYTE PTR [rax],dl
  43612a:	add    BYTE PTR [rax],al
  43612c:	add    BYTE PTR [rax],ah
  43612e:	add    BYTE PTR [rax],al
  436130:	add    BYTE PTR [rcx],al
  436132:	add    BYTE PTR [rax+rax*1],al
  436135:	add    BYTE PTR [rax],al
  436137:	add    BYTE PTR [rax],al
  436139:	add    BYTE PTR [rax],0x0
	...
  436150:	add    BYTE PTR [rax],al
  436152:	add    BYTE PTR [rax+0x800000],al
  436158:	add    BYTE PTR [rax],al
  43615a:	add    BYTE PTR [rax+0x8000],0x0
  436161:	add    BYTE PTR [rax],0x80
  436164:	add    BYTE PTR [rax-0x7fffff80],al
  43616a:	add    BYTE PTR [rax-0x3f3f4000],0x0
  436171:	add    BYTE PTR [rax],al
  436173:	inc    DWORD PTR [rax]
  436175:	add    bh,bh
  436177:	add    BYTE PTR [rax],al
  436179:	add    bh,bh
  43617b:	inc    DWORD PTR [rax]
  43617d:	inc    DWORD PTR [rax]
  43617f:	add    BYTE PTR [rax],al
  436181:	inc    DWORD PTR [rax]
  436183:	inc    DWORD PTR [rax]
  436185:	(bad)  
  436186:	inc    DWORD PTR [rax]
  436188:	add    bh,bh
  43618a:	(bad)  
  43618b:	inc    DWORD PTR [rax]
  43618d:	add    BYTE PTR [rax],al
  43618f:	add    BYTE PTR [rax],al
  436191:	(bad)  
  436192:	and    ah,BYTE PTR [rdx]
  436194:	and    al,BYTE PTR [rax]
  436196:	add    BYTE PTR [rax],al
  436198:	add    BYTE PTR [rbx+0x73],dh
  43619b:	movsxd esp,DWORD PTR [rbx]
  43619d:	add    BYTE PTR [rax],al
  43619f:	ja     0x4361a1
  4361a1:	js     0x436129
  4361a3:	(bad)  
  4361a4:	and    al,BYTE PTR [rax]
  4361a6:	add    BYTE PTR [rdi],al
  4361a8:	jo     0x436131
  4361aa:	scas   eax,DWORD PTR es:[rdi]
  4361ab:	(bad)  
  4361ac:	jb     0x4361ae
  4361ae:	add    BYTE PTR [rdi],0x60
  4361b1:	js     0x43622a
  4361b3:	push   QWORD PTR [rbx+0x0]
  4361b6:	js     0x43613f
  4361b8:	jo     0x436144
  4361ba:	(bad)  
  4361bb:	inc    DWORD PTR [rdx-0x988f900]
  4361c1:	js     0x43614b
  4361c3:	mov    BYTE PTR [rdx-0x71000000],cl
  4361c9:	jae    0x4361fd
  4361cb:	xor    dh,BYTE PTR [rdi]
  4361cd:	add    BYTE PTR [rax],al
  4361cf:	add    BYTE PTR [rdi],al
  4361d1:	test   BYTE PTR [rax],0x0
  4361d4:	add    BYTE PTR [rax],al
  4361d6:	(bad)  
  4361d7:	rol    BYTE PTR [rax],0x8f
  4361da:	ja     0x43624c
  4361dc:	add    BYTE PTR [rax],al
  4361de:	rex.RXB js 0x4361e1
  4361e1:	(bad)  
  4361e2:	xchg   DWORD PTR [rax+0x0],edi
  4361e5:	(bad)  
  4361e6:	ins    BYTE PTR es:[rdi],dx
  4361e7:	in     al,dx
  4361e8:	add    BYTE PTR [rdi],0x80
  4361eb:	(bad)  
  4361ec:	add    BYTE PTR [rax],al
  4361ee:	(bad)  
  4361ef:	jo     0x4361f1
  4361f1:	or     BYTE PTR [rax+0x7000000],al
  4361f7:	rol    BYTE PTR [rax],0x0
  4361fa:	xchg   DWORD PTR [rax],eax
  4361fc:	add    BYTE PTR [rax],al
  4361fe:	add    BYTE PTR [rax+0x700000],cl
  436204:	add    BYTE PTR [rax],al
  436206:	add    BYTE PTR [rsi],cl
  436208:	ja     0x436282
  43620a:	add    BYTE PTR [rax],al
  43620c:	add    bh,bh
  43620e:	add    BYTE PTR [rax],al
  436210:	add    bh,bh
  436212:	add    BYTE PTR [rax],al
  436214:	add    bl,dh
  436216:	add    BYTE PTR [rax],al
  436218:	add    cl,bh
  43621a:	add    BYTE PTR [rax],al
  43621c:	add    cl,bl
  43621e:	add    BYTE PTR [rax],al
  436220:	add    cl,al
  436222:	add    BYTE PTR [rax],al
  436224:	add    al,ah
  436226:	add    BYTE PTR [rax],al
  436228:	add    ah,bh
  43622a:	add    BYTE PTR [rax],al
  43622c:	add    dh,bh
  43622e:	(bad)  
  43622f:	add    BYTE PTR [rax],al
  436231:	out    0x7,eax
  436233:	add    BYTE PTR [rax],al
  436235:	ret    
  436236:	add    DWORD PTR [rax],0x0
  436239:	sbb    DWORD PTR [rbx-0x60190000],0xcfe70000
  436243:	add    BYTE PTR [rax],al
  436245:	repz fild WORD PTR [rax]
  436248:	add    al,bh
  43624a:	(bad)  
  43624b:	add    BYTE PTR [rax],al
  43624d:	sub    BYTE PTR [rax],al
  43624f:	add    BYTE PTR [rax],al
  436251:	and    BYTE PTR [rax],al
  436253:	add    BYTE PTR [rax],al
  436255:	add    BYTE PTR [rax],al
  436258:	add    BYTE PTR [rcx],al
  43625a:	add    BYTE PTR [rax],cl
  43625c:	add    BYTE PTR [rax],al
  43625e:	add    BYTE PTR [rax],al
  436260:	add    BYTE PTR [rax],al
  436262:	add    al,0x0
	...
  43626c:	add    BYTE PTR [rax],al
  43626e:	add    DWORD PTR [rax],eax
  436270:	add    BYTE PTR [rax],al
  436272:	add    DWORD PTR [rax],eax
  436274:	add    BYTE PTR [rax],al
  436276:	add    BYTE PTR [rax],al
  436278:	add    BYTE PTR [rbx],dh
  43627a:	xor    esi,DWORD PTR [rbx]
  43627c:	add    BYTE PTR [rbx],dh
  43627e:	xor    ax,WORD PTR [rax]
  436281:	movsxd ecx,DWORD PTR [rax+0x33]
  436284:	add    BYTE PTR [rbx],dh
  436286:	data16 data16 add BYTE PTR [rbp+0x55],ch
  43628b:	rex.X add BYTE PTR [rax+0x55],sil
  43628f:	add    BYTE PTR [r9+rbx*2+0x45],sil
  436294:	add    BYTE PTR [rsi+0x5d],dh
  436297:	rex.WB add BYTE PTR [r11+0x61],dil
  43629b:	rex.WRB add BYTE PTR [r13+0x63],r15b
  43629f:	rex.WRX add BYTE PTR [rsi+0x66],r12b
  4362a3:	data16 add BYTE PTR [rsi-0x6cffdfbf],al
  4362aa:	rex.RXB and r8b,BYTE PTR [r8]
  4362ad:	xchg   ebp,eax
  4362ae:	rex.WXB sub BYTE PTR [r8],al
  4362b1:	(bad)  
  4362b2:	push   rdi
  4362b3:	cmp    al,0x0
  4362b5:	xchg   edx,eax
  4362b6:	push   rsp
  4362b7:	add    BYTE PTR ss:[rsi-0x45ffdab0],ah
  4362be:	pop    rcx
  4362bf:	sub    DWORD PTR [rax],eax
  4362c1:	scas   al,BYTE PTR es:[rdi]
  4362c2:	pop    rbp
  4362c3:	(bad)  
  4362c4:	add    BYTE PTR [rcx-0x31ffc49c],bh
  4362ca:	fs cs add cl,al
  4362ce:	(bad)  
  4362d0:	add    bl,al
  4362d2:	push   0x3f
  4362d4:	add    cl,dl
  4362d6:	xor    DWORD PTR [eax],eax
  4362d9:	fisubr WORD PTR [rdi+0x36]
  4362dc:	add    BYTE PTR [rbp-0x7effb59b],bl
  4362e2:	addr32 push rbp
  4362e4:	add    BYTE PTR [rbx-0x7cffa694],al
  4362ea:	ins    DWORD PTR es:[rdi],dx
  4362eb:	pop    rsp
  4362ec:	add    BYTE PTR [rdi-0x76ffa291],al
  4362f2:	jo     0x436352
  4362f4:	add    BYTE PTR [rsp+rbp*2+0x718b0051],ah
  4362fb:	(bad)  
  4362fc:	add    BYTE PTR [rsi-0x73ff9c8d],cl
  436302:	je     0x436367
  436304:	add    BYTE PTR [rbp-0x6fff9a8a],cl
  43630a:	jne    0x436370
  43630c:	add    BYTE PTR [rcx-0x6bff9887],dl
  436312:	jns    0x436379
  436314:	add    BYTE PTR [rcx-0x6dff9787],dl
  43631a:	jge    0x436387
  43631c:	add    BYTE PTR [rdx-0x6aff9383],dl
  436322:	jg     0x436392
  436324:	add    BYTE PTR [rax-0x66ff9483],bl
  43632a:	jle    0x436399
  43632c:	add    cl,al
  43632e:	ins    DWORD PTR es:[rdi],dx
  43632f:	rex.XB add r15b,al
  436332:	ins    DWORD PTR es:[rdi],dx
  436333:	add    sil,cl
  436336:	jno    0x43637b
  436338:	add    cl,dl
  43633a:	jae    0x436380
  43633c:	add    dl,dl
  43633e:	jne    0x436384
  436340:	add    ch,bl
  436342:	jp     0x43638e
  436344:	add    al,cl
  436346:	jns    0x43639a
  436348:	add    bh,ah
  43634a:	jp     0x43638f
  43634c:	add    al,ch
  43634e:	jp     0x436392
  436350:	add    al,ah
  436352:	jge    0x43639f
  436354:	add    dl,ch
  436356:	jg     0x4363a1
  436358:	add    BYTE PTR [rbx],dh
  43635a:	cdq    
  43635b:	xor    eax,DWORD PTR [rax]
  43635d:	xor    ebx,DWORD PTR [rcx-0x7487ff9a]
  436363:	data16 add BYTE PTR [rsi-0x67],ah
  436367:	data16 add BYTE PTR [rax+rdx*4+0x6b],bh
  43636c:	add    BYTE PTR [rsi-0x34],ah
  43636f:	data16 add BYTE PTR [rsi-0x69ff9080],dl
  436376:	(bad)  
  436377:	jb     0x436379
  436379:	xchg   esi,eax
  43637a:	xor    DWORD PTR [rbp+0x0],0xffffff97
  43637e:	test   BYTE PTR [rax+rax*1-0x67],dh
  436382:	(bad)  
  436383:	jno    0x436385
  436385:	lahf   
  436386:	test   BYTE PTR [rbx+0x0],dh
  436389:	pushf  
  43638a:	test   DWORD PTR [rbp+0x0],esi
  43638d:	lahf   
  43638e:	mov    DWORD PTR [rcx+0x0],edi
  436391:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  436392:	mov    edi,DWORD PTR [rcx+0x0]
  436395:	movabs ds:0xa9007d8da5007e8d,al
  43639e:	(bad)  
  43639f:	jle    0x4363a1
  4363a1:	fimul  WORD PTR [rcx-0x7d18ffa4]
  4363a7:	rex.WRXB add r9b,r12b
  4363aa:	adc    DWORD PTR [rcx+0x0],0x5184eb
  4363b1:	(bad)  
  4363b2:	xchg   DWORD PTR [rsi+0x0],edx
  4363b5:	(bad)  
  4363b6:	mov    BYTE PTR [rsi+0x0],dl
  4363b9:	lock mov BYTE PTR [rax+rax*1-0xc],dl
  4363be:	mov    dl,BYTE PTR [rsi+0x0]
  4363c1:	sti    
  4363c2:	xchg   ecx,eax
  4363c3:	pop    rbx
  4363c4:	add    ch,bh
  4363c6:	xchg   edx,eax
  4363c7:	pop    rbp
  4363c8:	add    bl,dl
  4363ca:	cwde   
  4363cb:	jns    0x4363cd
  4363cd:	(bad)  
  4363ce:	xchg   esi,eax
  4363cf:	imul   eax,DWORD PTR [rax],0xfffffff0
  4363d2:	xchg   esp,eax
  4363d3:	gs add bh,bh
  4363d6:	xchg   esi,eax
  4363d7:	(bad)  
  4363d8:	add    bh,bh
  4363da:	cwde   
  4363db:	movsxd eax,DWORD PTR [rax]
  4363dd:	call   FWORD PTR [rsi-0x6111ff96]
  4363e3:	jbe    0x4363e5
  4363e5:	jmp    QWORD PTR [rax-0x5c08ff93]
  4363eb:	jbe    0x4363ed
  4363ed:	jmp    QWORD PTR [rsi-0x5808ff8b]
  4363f3:	jge    0x4363f5
  4363f5:	data16 int3 
  4363f7:	cdq    
  4363f8:	add    BYTE PTR [rcx-0x5dff7e72],ah
  4363fe:	nop
  4363ff:	(bad)  
  436400:	add    BYTE PTR [rsi-0x5aff7e6f],ah
  436406:	xchg   ebx,eax
  436407:	test   DWORD PTR [rax],eax
  436409:	stos   BYTE PTR es:[rdi],al
  43640a:	xchg   ecx,eax
  43640b:	add    DWORD PTR [rax],0x8192ad
  436411:	test   eax,0xad008494
  436416:	xchg   ebp,eax
  436417:	xchg   BYTE PTR [rax],al
  436419:	test   eax,0xad008a97
  43641e:	xchg   edi,eax
  43641f:	mov    DWORD PTR [rax],eax
  436421:	lods   eax,DWORD PTR ds:[rsi]
  436422:	cdq    
  436423:	mov    eax,DWORD PTR [rax]
  436425:	lods   eax,DWORD PTR ds:[rsi]
  436426:	fwait
  436427:	mov    es,WORD PTR [rax]
  436429:	scas   eax,DWORD PTR es:[rdi]
  43642a:	pushf  
  43642b:	pop    QWORD PTR [rax]
  43642d:	mov    al,0x97
  43642f:	mov    BYTE PTR [rax],al
  436431:	mov    dl,0x99
  436433:	mov    DWORD PTR [rax],eax
  436435:	mov    ah,0x9a
  436437:	mov    al,BYTE PTR [rax]
  436439:	mov    ch,0x9b
  43643b:	lea    eax,[rax]
  43643d:	mov    ch,0x9c
  43643f:	lea    eax,[rax]
  436441:	mov    ecx,0xae008e9e
  436446:	sahf   
  436447:	xchg   ecx,eax
  436448:	add    BYTE PTR [rax-0x47ff6c61],dh
  43644e:	sahf   
  43644f:	nop
  436450:	add    BYTE PTR [rbx+riz*4-0x5f45ff69],dh
  436457:	xchg   ecx,eax
  436458:	add    BYTE PTR [rbp-0x44ff6f60],bh
  43645e:	movabs ds:0xa6b80096a3bc0094,al
  436467:	(bad)  
  436468:	add    BYTE PTR [rsi-0x47ff675a],bh
  43646e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  43646f:	pushf  
  436470:	add    BYTE PTR [rdi-0x42ff6158],dh
  436476:	test   al,0x9c
  436478:	add    BYTE PTR [rdi-0x43ff624b],ch
  43647e:	stos   DWORD PTR es:[rdi],eax
  43647f:	movabs al,ds:0x9eaac100a2adbe00
  436488:	add    dh,ch
  43648a:	stos   BYTE PTR es:[rdi],al
  43648b:	xchg   DWORD PTR [rax],eax
  43648d:	in     eax,dx
  43648e:	stos   BYTE PTR es:[rdi],al
  43648f:	mov    al,BYTE PTR [rax]
  436491:	imul   DWORD PTR [rbx-0x540bff7d]
  436497:	test   DWORD PTR [rax],eax
  436499:	jmp    FWORD PTR [rbp-0x4b06ff80]
  43649f:	pop    QWORD PTR [rax]
  4364a1:	out    dx,eax
  4364a2:	mov    edx,0xb7fa009f
  4364a7:	xchg   esp,eax
  4364a8:	add    bh,bh
  4364aa:	mov    eax,0xb9ff0093
  4364af:	xchg   esp,eax
  4364b0:	add    bh,bh
  4364b2:	mov    ebp,0xadc3009a
  4364b7:	movabs al,ds:0xa5b1c700a5b0c000
  4364c0:	add    dl,al
  4364c2:	mov    bl,0xa9
  4364c4:	add    cl,al
  4364c6:	mov    ah,0xab
  4364c8:	add    al,cl
  4364ca:	mov    bl,0xa8
  4364cc:	add    cl,cl
  4364ce:	mov    ch,0xab
  4364d0:	add    dh,al
  4364d2:	mov    ecx,0xb8d300af
  4364d7:	test   eax,0xabbad500
  4364dc:	add    bh,dl
  4364de:	mov    esp,0xbccf00ae
  4364e3:	mov    bl,0x0
  4364e5:	cdq    
  4364e6:	int3   
  4364e7:	cdq    
  4364e8:	add    bh,bh
  4364ea:	rcr    DWORD PTR [rdi-0x483e2e00],0x0
  4364f1:	rol    dl,cl
  4364f3:	mov    ecx,0xbdc6d500
  4364f8:	add    bh,bh
  4364fa:	shl    DWORD PTR [rcx-0x4a3c2000],0x0
  436501:	rol    al,0xc0
  436504:	add    ah,cl
  436506:	int3   
  436507:	int3   
  436508:	add    dh,dl
  43650a:	mov    eax,0xc0c8d500
  436510:	add    cl,bl
  436512:	retf   0xc3
  436515:	fcmovne st,st(6)
  436517:	mov    BYTE PTR [rax],0xc0
  43651a:	fadd   st(0),st
  43651c:	add    bh,dl
  43651e:	xlat   BYTE PTR ds:[rbx]
  43651f:	xlat   BYTE PTR ds:[rbx]
  436520:	add    ch,bl
  436522:	fstp   st(5)
  436524:	add    dl,ah
  436526:	(bad)  
  436527:	(bad)  
  436528:	add    ah,ah
  43652a:	(bad)  
  43652b:	(bad)  
  43652c:	add    cl,dh
  43652e:	rol    ecx,1
  436530:	add    bl,dh
  436532:	(bad)  
  436533:	enter  0xf400,0xda
  436537:	(bad)  
  436538:	add    ch,dh
  43653a:	(bad)  
  43653c:	add    dh,dh
  43653e:	loopne 0x436516
  436540:	add    dh,dh
  436542:	loop   0x43651d
  436544:	add    bh,dh
  436546:	in     al,0xdb
  436548:	add    bh,dh
  43654a:	in     eax,0xdc
  43654c:	add    bl,ah
  43654e:	jrcxz  0x436533
  436550:	add    cl,bh
  436552:	jmp    0x436537
  436554:	add    bl,bh
  436556:	lock jmp 0x436559
  436559:	sti    
  43655a:	repz out dx,al
  43655c:	add    cl,dh
  43655e:	icebp  
  43655f:	icebp  
  436560:	add    ah,bh
  436562:	repz lock add ah,bh
  436566:	div    dl
  436568:	add    ah,bh
  43656a:	clc    
  43656b:	test   BYTE PTR [rax],0xf0
  43656e:	sti    
  43656f:	inc    DWORD PTR [rax]
  436571:	std    
  436572:	cli    
  436573:	clc    
	...
  436670:	add    bh,bh
  436672:	(bad)  
  436673:	inc    DWORD PTR [rax]
	...
  4366a1:	add    BYTE PTR [rax],al
  4366a3:	add    BYTE PTR [rcx],bh
  4366a5:	add    al,BYTE PTR [rdx]
  4366a7:	add    al,BYTE PTR [rdx]
  4366a9:	add    al,BYTE PTR [rdx]
  4366ab:	add    al,BYTE PTR [rdx]
  4366ad:	add    al,BYTE PTR [rdx]
  4366af:	add    al,BYTE PTR [rdx]
  4366b1:	add    al,BYTE PTR [rdx]
  4366b3:	add    al,BYTE PTR [rax]
	...
  4366c1:	add    BYTE PTR [rax],al
  4366c3:	add    BYTE PTR [rcx],bh
  4366c5:	cmp    al,0x3c
  4366c7:	cmp    bh,BYTE PTR [rdx]
  4366c9:	cmp    bh,BYTE PTR [rcx]
  4366cb:	cmp    DWORD PTR [rcx],edi
  4366cd:	cmp    DWORD PTR [rcx],edi
  4366cf:	cmp    DWORD PTR [rcx],edi
  4366d1:	cmp    DWORD PTR [rcx],edi
  4366d3:	add    al,BYTE PTR [rax]
	...
  4366e1:	add    BYTE PTR [rax],al
  4366e3:	add    BYTE PTR [rcx],bh
  4366e5:	test   eax,0x23a3c3e
  4366ea:	cmp    al,0x3c
  4366ec:	cmp    bh,BYTE PTR [rdx]
  4366ee:	cmp    DWORD PTR [rdx],edi
  4366f0:	cmp    DWORD PTR [rdx],edi
  4366f2:	cmp    DWORD PTR [rdx],eax
  4366f4:	add    BYTE PTR [rax],al
  4366f6:	add    BYTE PTR [rax],al
  4366f8:	add    BYTE PTR [rax],al
  4366fa:	xchg   esp,eax
  4366fb:	(bad)  
  4366fc:	sbb    al,0x42
  4366fe:	add    BYTE PTR [rax],al
  436700:	add    BYTE PTR [rax],al
  436702:	add    BYTE PTR [rax],al
  436704:	cmp    DWORD PTR [rcx-0x5cfdc3a0],ebp
  43670a:	add    bh,BYTE PTR [rdx]
  43670c:	cmp    al,0x39
  43670e:	cmp    bh,BYTE PTR [rcx]
  436710:	cmp    bh,BYTE PTR [rcx]
  436712:	cmp    DWORD PTR [rdx],eax
  436714:	add    BYTE PTR [rax],al
  436716:	add    BYTE PTR [rax],al
  436718:	add    BYTE PTR [rbx-0x54],al
  43671b:	mov    bh,0xb5
  43671d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  43671e:	sbb    DWORD PTR [rax+rax*1],0x0
  436722:	add    BYTE PTR [rax],al
  436724:	cmp    DWORD PTR [rcx-0x5c54fda0],ebp
  43672a:	movabs ds:0x393a3a020b3a3c02,eax
  436733:	add    al,BYTE PTR [rax]
  436735:	add    BYTE PTR [rax],al
  436737:	add    BYTE PTR [rbx],ch
  436739:	rex.XB sub esp,DWORD PTR [r11]
  43673c:	ins    DWORD PTR es:[rdi],dx
  43673d:	mov    edi,0x4143a8
  436742:	add    BYTE PTR [rax],al
  436744:	cmp    al,0xa9
  436746:	pushf  
  436747:	mov    edi,0xa3a4babf
  43674c:	add    al,BYTE PTR [rcx]
  43674e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  43674f:	movabs ds:0x2393a39,eax
  436758:	add    BYTE PTR [rax],al
  43675a:	add    BYTE PTR [rax],al
  43675c:	and    edi,DWORD PTR [rax+0x2369a7]
  436762:	add    BYTE PTR [rax],al
  436764:	cmp    al,0xa9
  436766:	pushf  
  436767:	(bad)  
  436768:	mov    edi,0xa3abbfbf
  43676d:	stos   BYTE PTR es:[rdi],al
  43676e:	stos   BYTE PTR es:[rdi],al
  43676f:	movabs ds:0x2393a39,eax
  436778:	add    BYTE PTR [rax],al
  43677a:	add    BYTE PTR [rax],al
  43677c:	sub    esi,DWORD PTR [rbp+0x863a0]
  436782:	add    BYTE PTR [rax],al
  436784:	cmp    ch,BYTE PTR [rcx-0x40c19f64]
  43678a:	mov    edi,0xbabababf
  43678f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  436790:	cmp    bh,BYTE PTR [rcx+rdi*1]
  436793:	add    al,BYTE PTR [rax]
  436795:	add    BYTE PTR [rax],al
  436797:	add    BYTE PTR [rsi+0x43],al
  43679a:	rex.XB (bad) 
  43679c:	ins    DWORD PTR es:[rdi],dx
  43679d:	scas   eax,DWORD PTR es:[rdi]
  43679e:	movabs al,ds:0x9ca93c0000001b68
  4367a7:	pushf  
  4367a8:	(bad)  
  4367a9:	cmp    al,0xbf
  4367ab:	mov    edx,0xa4babfbf
  4367b0:	cmp    al,0x3a
  4367b2:	cmp    DWORD PTR [rdx],eax
  4367b4:	add    BYTE PTR [rax],al
  4367b6:	add    BYTE PTR [rax],al
  4367b8:	add    BYTE PTR [rax-0x45],ch
  4367bb:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4367bc:	movabs al,ds:0x3c0000002b479ba0
  4367c5:	test   eax,0x43c9c9c
  4367ca:	mov    edi,0xbabebfba
  4367cf:	stos   BYTE PTR es:[rdi],al
  4367d0:	cmp    al,0x3c
  4367d2:	cmp    al,BYTE PTR [rdx]
  4367d4:	add    BYTE PTR [rax],al
  4367d6:	add    BYTE PTR [rax],al
  4367d8:	add    BYTE PTR [rax+rbp*2-0x53474443],dl
  4367df:	xchg   ebp,eax
  4367e0:	jge    0x43680d
  4367e2:	add    BYTE PTR [rax],al
  4367e4:	cmp    al,0xa9
  4367e6:	pushf  
  4367e7:	pushf  
  4367e8:	(bad)  
  4367e9:	mov    edi,0xbfbfbfbf
  4367ee:	mov    edi,0x3a3e3cb6
  4367f3:	add    al,BYTE PTR [rax]
  4367f5:	add    BYTE PTR [rax],al
  4367f7:	add    BYTE PTR [rax],al
  4367f9:	add    BYTE PTR [rax],al
  4367fb:	je     0x43683f
  4367fd:	rex.RXB movsxd r14d,DWORD PTR [r10+0x237184]
  436804:	cmp    al,0xa9
  436806:	pushf  
  436807:	pushf  
  436808:	(bad)  
  436809:	mov    edi,0xbfbfbfbf
  43680e:	mov    edi,0x3a3c3ebf
  436813:	add    al,BYTE PTR [rax]
	...
  43681d:	add    BYTE PTR [rdi+rax*2+0x28717bb2],dl
  436824:	cmp    eax,0x9c9c9ca9
  436829:	pushf  
  43682a:	pushf  
  43682b:	pushf  
  43682c:	pushf  
  43682d:	pushf  
  43682e:	pushf  
  43682f:	pushf  
  436830:	pushf  
  436831:	ds cmp al,0x2
	...
  43683c:	add    BYTE PTR [rax],al
  43683e:	add    BYTE PTR [rbx+0x7176b243],al
  436844:	sub    DWORD PTR es:[rcx-0x56565657],0xa9a9a9a9
  43684f:	test   eax,0x23ea9a9
	...
  436860:	jle    0x4368a5
  436862:	mov    dl,0x73
  436864:	push   0x3c3c3b23
  436869:	cmp    al,0x3c
  43686b:	cmp    al,0x3c
  43686d:	cmp    DWORD PTR [rcx+rdi*1],edi
  436870:	cmp    al,0x39
  436872:	cmp    DWORD PTR [rcx],edi
  436874:	add    BYTE PTR [rax],al
  436876:	add    BYTE PTR [rax],al
  436878:	add    BYTE PTR [rax],al
  43687a:	or     al,0x0
  43687c:	add    BYTE PTR [rax],al
  43687e:	add    BYTE PTR [rax],al
  436880:	add    BYTE PTR [rdi+0x2d],dh
  436883:	mov    dl,0x70
  436885:	rex.RXB and DWORD PTR [r8],r8d
	...
  436898:	add    BYTE PTR [rip+0xc13],cl        # 0x4374b1
  43689e:	add    BYTE PTR [rax],al
  4368a0:	add    BYTE PTR [rax],al
  4368a2:	jne    0x4368ca
  4368a4:	mov    dl,0x4a
  4368a6:	sub    eax,0xa
	...
  4368b7:	add    BYTE PTR [rdx],dl
  4368b9:	xor    BYTE PTR [rdi],dl
  4368bb:	adc    al,0xc
  4368bd:	add    BYTE PTR [rax],al
  4368bf:	add    BYTE PTR [rax],al
  4368c1:	add    BYTE PTR [rax],al
  4368c3:	ins    DWORD PTR es:[rdi],dx
  4368c4:	and    DWORD PTR [rbp+0x7262d],esi
	...
  4368d6:	add    BYTE PTR [rcx],bl
  4368d8:	push   rcx
  4368d9:	xor    r14,QWORD PTR [rcx]
  4368dc:	(bad)  
  4368dd:	or     al,0x0
  4368df:	add    BYTE PTR [rax],al
  4368e1:	add    BYTE PTR [rax],al
  4368e3:	add    BYTE PTR [rcx+0x1b],ch
  4368e6:	mov    dl,0x68
  4368e8:	rex.WX (bad) 
  4368ea:	or     BYTE PTR [rip+0x7f2b05],al        # 0xc293f5
  4368f0:	add    BYTE PTR [rax],al
  4368f2:	add    BYTE PTR [rax],al
  4368f4:	add    BYTE PTR [rax],al
  4368f6:	push   rax
  4368f7:	xor    eax,0x4e515358
  4368fc:	(bad)  
  4368fd:	or     al,0xc
  4368ff:	add    BYTE PTR [rax],al
  436901:	add    BYTE PTR [rax],al
  436903:	add    BYTE PTR [rax],al
  436905:	movsxd ecx,DWORD PTR [rdx]
  436907:	mov    ch,0x68
  436909:	jle    0x436986
  43690b:	ins    DWORD PTR es:[rdi],dx
  43690c:	rex.RXB
  43690d:	rex.XB or BYTE PTR [r10+0x0],al
  436911:	add    BYTE PTR [rax],al
  436913:	add    BYTE PTR [rax],al
  436915:	add    BYTE PTR [rax],al
  436917:	add    BYTE PTR [rsi],dh
  436919:	pop    rdx
  43691a:	pop    rcx
  43691b:	push   rbx
  43691c:	adc    DWORD PTR [rax],eax
	...
  436926:	movsxd esp,DWORD PTR [rbx]
  436928:	scas   al,BYTE PTR es:[rdi]
  436929:	jno    0x43699b
  43692b:	rex.XB xchg r13d,eax
  43692d:	jge    0x4369a0
  43692f:	(bad)  
  436930:	je     0x436932
  436932:	add    BYTE PTR [rax],al
  436934:	add    BYTE PTR [rax],al
  436936:	add    BYTE PTR [rax],al
  436938:	pop    rbx
  436939:	cmp    BYTE PTR [rsi+0x5c],bl
  43693c:	adc    al,BYTE PTR [rax]
	...
  436946:	add    BYTE PTR [rbx],ch
  436948:	scas   eax,DWORD PTR es:[rdi]
  436949:	jnp    0x4369bc
  43694b:	and    eax,0x3030303
  436950:	(bad)  
	...
  436959:	push   rdi
  43695a:	mov    cs,WORD PTR [rcx+0x18]
  436960:	add    BYTE PTR [rax],al
  436962:	add    BYTE PTR [rax],al
  436964:	add    BYTE PTR [rax],al
  436966:	add    BYTE PTR [rbx],ch
  436968:	scas   eax,DWORD PTR es:[rdi]
  436969:	test   BYTE PTR [rbx+0x1e],bh
	...
  436978:	add    BYTE PTR [rsi+0x155d8e8a],al
	...
  436986:	add    BYTE PTR [rdi],ch
  436988:	and    BYTE PTR [rbx-0x7c],bh
  43698b:	and    eax,DWORD PTR [rax]
	...
  436999:	add    BYTE PTR [rsi-0x5f],dl
  43699c:	(bad)  
  43699d:	pop    rdi
  43699e:	adc    eax,0x0
  4369a3:	add    BYTE PTR [rax],al
  4369a5:	rex.WRB (bad) 
  4369a7:	cpuid  
  4369a9:	sahf   
  4369aa:	xchg   esi,eax
  4369ab:	sub    eax,DWORD PTR [rax]
	...
  4369b9:	add    BYTE PTR [rbx-0x785e5e74],cl
  4369bf:	adc    eax,0x31311612
  4369c4:	rex.WXB or al,0x1a
  4369c7:	jle    0x436a0c
  4369c9:	mov    ch,0x9e
  4369cb:	imul   eax,DWORD PTR [rbx],0x74030303
	...
  4369d9:	add    BYTE PTR [rax],al
  4369db:	xchg   BYTE PTR [rdi-0x5e5e5e5f],al
  4369e1:	(bad)  
  4369e2:	mov    ss,WORD PTR [rbp+0x10]
  4369e5:	add    BYTE PTR [rax],al
  4369e7:	add    BYTE PTR [rbp+0x43],bh
  4369ea:	mov    ch,0x9a
  4369ec:	cdq    
  4369ed:	cdq    
  4369ee:	(bad)  
  4369ef:	rex.X add BYTE PTR [rax],al
	...
  4369fa:	add    BYTE PTR [rax],al
  4369fc:	add    BYTE PTR [rsi+0x1519364e],al
  436a02:	xor    al,0x0
  436a04:	add    BYTE PTR [rax],al
  436a06:	add    BYTE PTR [rax],al
  436a08:	add    BYTE PTR [rdi+0x42264263],dl
  436a0e:	jg     0x436a10
	...
  436a74:	add    bh,bh
  436a76:	(bad)  
  436a77:	(bad)  
  436a78:	(bad)  
  436a79:	(bad)  
  436a7a:	inc    BYTE PTR [rax]
  436a7c:	add    edi,edi
  436a7e:	inc    BYTE PTR [rax]
  436a80:	add    edi,edi
  436a82:	inc    BYTE PTR [rax]
  436a84:	add    eax,edi
  436a86:	jle    0x436a88
  436a88:	add    eax,esi
  436a8a:	(bad)  
  436a8b:	add    BYTE PTR [rcx],al
  436a8d:	loopne 0x436a9d
  436a8f:	add    BYTE PTR [rcx],al
  436a91:	dec    BYTE PTR [rsi]
  436a93:	add    BYTE PTR [rcx],al
  436a95:	dec    BYTE PTR [rsi]
  436a97:	add    BYTE PTR [rcx],al
  436a99:	loopne 0x436aa9
  436a9b:	add    BYTE PTR [rcx],al
  436a9d:	lock (bad) 
  436a9f:	add    BYTE PTR [rcx],al
  436aa1:	lock (bad) 
  436aa3:	add    BYTE PTR [rcx],al
  436aa5:	cld    
  436aa6:	add    al,BYTE PTR [rax]
  436aa8:	add    edi,edi
  436aaa:	add    BYTE PTR [rax],0x1
  436aad:	inc    eax
  436aaf:	add    BYTE PTR [rcx],al
  436ab1:	jmp    rax
  436ab3:	add    BYTE PTR [rcx],al
  436ab5:	sti    
  436ab6:	lock (bad) 
  436ab8:	push   rcx
  436aba:	clc    
  436abb:	(bad)  
  436abc:	jmp    rax
  436abe:	cld    
  436abf:	ud0    eax,eax
  436ac2:	jle    0x436ac4
  436ac4:	(bad)  
  436ac5:	cmp    BYTE PTR [rdi],0x0
  436ac8:	(bad)  
  436ac9:	loopne 0x436aca
  436acb:	or     BYTE PTR [rdi],0xe0
  436ace:	inc    eax
  436ad0:	(bad)  
  436ad2:	inc    ecx
  436ad4:	push   rax
  436ad6:	jg     0x436a99
  436ad8:	(bad)  
  436ad9:	clc    
  436ada:	(bad)  
  436adb:	add    edi,edi
  436add:	clc    
  436ade:	add    BYTE PTR [rax],al
  436ae0:	paddb  mm0,QWORD PTR [rax]
  436ae3:	loopne 0x436b04
  436ae5:	inc    DWORD PTR [rbx]
  436ae7:	lock (bad) 
  436ae9:	(bad)  
  436aea:	(bad)  
  436aeb:	(bad)  
  436aec:	(bad)  
  436aed:	(bad)  
  436aee:	(bad)  
  436aef:	(bad)  
  436af0:	(bad)  
  436af1:	(bad)  
  436af2:	(bad)  
  436af3:	(bad)  
  436af4:	jmp    FWORD PTR [rax]
  436af6:	add    BYTE PTR [rax],al
  436af8:	add    BYTE PTR [rax],dl
  436afa:	add    BYTE PTR [rax],al
  436afc:	add    BYTE PTR [rax],ah
  436afe:	add    BYTE PTR [rax],al
  436b00:	add    BYTE PTR [rcx],al
  436b02:	add    BYTE PTR [rax],cl
  436b04:	add    BYTE PTR [rax],al
  436b06:	add    BYTE PTR [rax],al
  436b08:	add    BYTE PTR [rax],al
  436b0a:	add    DWORD PTR [rax],eax
	...
  436b14:	add    BYTE PTR [rax],al
  436b16:	add    DWORD PTR [rax],eax
  436b18:	add    BYTE PTR [rax],al
  436b1a:	add    DWORD PTR [rax],eax
  436b1c:	add    BYTE PTR [rax],al
  436b1e:	add    BYTE PTR [rax],al
  436b20:	add    BYTE PTR [rip+0x1a000f6b],cl        # 0x1a437a91
  436b26:	ja     0x436b45
  436b28:	add    BYTE PTR [rip+0x1b001f76],bl        # 0x1b438aa4
  436b2e:	jns    0x436b4c
  436b30:	add    BYTE PTR [rdx],dl
  436b32:	jb     0x436b66
  436b34:	add    BYTE PTR [rsi],ch
  436b36:	imul   esi,DWORD PTR [rdi],0x39762c00
  436b3c:	add    BYTE PTR [rsi],dh
  436b3e:	jnp    0x436b88
  436b40:	add    BYTE PTR [rdx],bh
  436b42:	gs pop rdx
  436b44:	add    BYTE PTR [rip+0x32006a6b],ch        # 0x3243d5b5
  436b4a:	outs   dx,DWORD PTR ds:[rsi]
  436b4b:	data16 add BYTE PTR [rax],ch
  436b4e:	jbe    0x436bb9
  436b50:	add    BYTE PTR [rdi],ch
  436b52:	jbe    0x436bbc
  436b54:	add    BYTE PTR [rcx],bh
  436b56:	ja     0x436bbe
  436b58:	add    BYTE PTR [rbp+0x59],dh
  436b5b:	add    BYTE PTR [rdi+0x5f],r14b
  436b5f:	rex.WRX add BYTE PTR [rdx+0x64],r15b
  436b63:	push   rbx
  436b64:	add    BYTE PTR [rbx+0x6b],bh
  436b67:	(bad)  
  436b68:	add    BYTE PTR [rbp+rdi*2+0x6b],ah
  436b6c:	add    BYTE PTR [rbp-0x6dffdebc],cl
  436b72:	rex.RXB and r8d,DWORD PTR [r8]
  436b75:	movabs ds:0xb5002f5db9002d54,al
  436b7e:	(bad)  
  436b7f:	add    BYTE PTR ss:[rdx-0x7bffc49a],bh
  436b86:	imul   edx,DWORD PTR [rdi+0x0],0x5e6c83
  436b8d:	mov    BYTE PTR [rdi+0x5d],ch
  436b90:	add    BYTE PTR [rbx-0x77ff9b8d],cl
  436b96:	js     0x436c03
  436b98:	add    BYTE PTR [rcx-0x69ff9786],dl
  436b9e:	jle    0x436c0c
  436ba0:	add    BYTE PTR [rax-0x2fff9282],bl
  436ba6:	jbe    0x436bef
  436ba8:	add    ah,dl
  436baa:	jl     0x436bf9
  436bac:	add    dh,al
  436bae:	jl     0x436c06
  436bb0:	add    bh,dl
  436bb2:	jg     0x436c04
  436bb4:	add    BYTE PTR [rdx],cl
  436bb6:	sbb    DWORD PTR [rcx],0x0
  436bb9:	(bad)  
  436bba:	lea    ebx,[rax+rax*1]
  436bbd:	add    eax,0x5002088
  436bc2:	lea    esp,[rax+rax*1]
  436bc5:	adc    eax,DWORD PTR [rbp-0x6df7ffd2]
  436bcb:	sub    eax,DWORD PTR [rax]
  436bcd:	(bad)  
  436bce:	mov    ?,WORD PTR [rax+rax*1]
  436bd1:	sbb    eax,0x39003d94
  436bd6:	lea    esi,[rsi]
  436bd8:	add    BYTE PTR [rax],bh
  436bda:	add    DWORD PTR [rdx+0x0],0x4d932f
  436be1:	push   rbp
  436be2:	pushf  
  436be3:	pop    rdi
  436be4:	add    BYTE PTR [rsi-0x4d],dl
  436be7:	push   rsp
  436be8:	add    BYTE PTR [rsi-0x5d],cl
  436beb:	push   0x0
  436bed:	pop    rdx
  436bee:	test   al,0x6f
  436bf0:	add    BYTE PTR [rbx-0x4d],dl
  436bf3:	imul   eax,DWORD PTR [rax],0x77
  436bf6:	mov    edi,0xc568007b
  436bfb:	ins    BYTE PTR es:[rdi],dx
  436bfc:	add    BYTE PTR [rdx-0x67ff8f7f],bl
  436c02:	xchg   DWORD PTR [rbx+0x0],edi
  436c05:	movabs al,ds:0xdc0076a581007d8d
  436c0e:	xchg   DWORD PTR [rbx+0x0],ebx
  436c11:	out    0x8b,eax
  436c13:	pop    rdi
  436c14:	add    ch,cl
  436c16:	xchg   BYTE PTR [rax+rax*1-0x31],ah
  436c1a:	mov    ebp,DWORD PTR [rdx+0x0]
  436c1d:	fimul  DWORD PTR [rax-0x6802ff9f]
  436c23:	(bad)  
  436c24:	add    bh,ah
  436c26:	(bad)  
  436c27:	jno    0x436c29
  436c29:	in     al,dx
  436c2a:	movabs ds:0xb67d0081a978007a,al
  436c33:	mov    BYTE PTR [rax],al
  436c35:	(bad)  
  436c36:	mov    eax,DWORD PTR [rax-0x7c706200]
  436c3c:	add    BYTE PTR [rbp-0x55ff7a6d],ah
  436c42:	cwde   
  436c43:	mov    WORD PTR [rax],es
  436c45:	test   BYTE PTR [rbx-0x4376ff71],bh
  436c4b:	mov    es,WORD PTR [rax]
  436c4d:	mov    bh,0xa1
  436c4f:	nop
  436c50:	add    BYTE PTR [rdi-0x42ff695b],dh
  436c56:	test   al,0x98
  436c58:	add    dh,bl
  436c5a:	lahf   
  436c5b:	add    BYTE PTR [rax],0xc1
  436c5e:	lods   eax,DWORD PTR ds:[rsi]
  436c5f:	lahf   
  436c60:	add    dl,al
  436c62:	scas   eax,DWORD PTR es:[rdi]
  436c63:	movabs al,ds:0xa9b6c900a5b2c400
  436c6c:	add    bh,bl
  436c6e:	mov    ecx,0xcf8e00a7
  436c73:	mov    al,BYTE PTR [rax]
  436c75:	(bad)  
  436c76:	(bad)  
  436c77:	pop    QWORD PTR [rax]
  436c79:	xchg   edx,eax
  436c7a:	xlat   BYTE PTR ds:[rbx]
  436c7b:	xchg   ebx,eax
  436c7c:	add    BYTE PTR [rsp+riz*8-0x306cff65],ah
  436c83:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  436c84:	add    BYTE PTR [rax-0x56ff4a22],bl
  436c8a:	fisub  WORD PTR [rax+rax*1+0xa4dfac]
  436c91:	mov    fs,ecx
  436c93:	movabs ds:0xa6e1af00a3e0ac00,eax
  436c9c:	add    BYTE PTR [rdi-0x10ff5620],ch
  436ca2:	call   0xffffffffe9366d91
  436ca7:	out    dx,eax
  436ca8:	add    bh,bh
  436caa:	(bad)  
  436cab:	inc    BYTE PTR [rax]
	...
  436f19:	(bad)  
  436f1a:	(bad)  
  436f1b:	inc    DWORD PTR [rax]
	...
  436f25:	cs (bad) 
  436f27:	add    eax,0x4030303
  436f2c:	add    DWORD PTR [rax],eax
  436f2e:	add    BYTE PTR [rax],al
  436f30:	add    BYTE PTR [rax],al
  436f32:	add    BYTE PTR [rax],al
  436f34:	add    BYTE PTR [rdi],dh
  436f36:	xor    eax,0x292d2f08
  436f3b:	sub    esp,DWORD PTR [rdi]
  436f3d:	add    BYTE PTR [rax],al
  436f3f:	add    BYTE PTR [rax],al
  436f41:	(bad)  
  436f42:	adc    al,BYTE PTR [rax]
  436f44:	add    BYTE PTR [rsi],dh
  436f46:	pop    rcx
  436f47:	(bad)  
  436f48:	(bad)  
  436f49:	(bad)  
  436f4a:	adc    esi,DWORD PTR [rax]
  436f4c:	sub    DWORD PTR [rax],eax
  436f4e:	add    BYTE PTR [rax],al
  436f50:	add    BYTE PTR [rax],al
  436f52:	rex.RX sbb eax,0x335d4500
  436f58:	inc    DWORD PTR [rsi]
  436f5a:	(bad)  
  436f5b:	xor    al,0x26
  436f5d:	add    BYTE PTR [rax],al
  436f5f:	rex.WR add BYTE PTR [rax],r8b
  436f62:	rex.W adc BYTE PTR [rax],al
  436f65:	rex.WX push rdi
  436f67:	xor    esi,DWORD PTR [rbx]
  436f69:	(bad)  
  436f6a:	inc    DWORD PTR [rdx+rbp*1+0x0]
  436f6e:	add    BYTE PTR [rdx+rdx*2+0x50],cl
  436f72:	adc    QWORD PTR [r8],rax
  436f75:	rex.WXB push r14
  436f77:	pop    rdx
  436f78:	(bad)  
  436f79:	(bad)  
  436f7a:	call   QWORD PTR [rbp+0x2c]
  436f7d:	add    BYTE PTR [rax],al
  436f7f:	add    BYTE PTR [rcx],bh
  436f81:	(bad)  
  436f82:	sbb    edi,edi
  436f84:	(bad)  
  436f86:	pop    rdi
  436f87:	pop    rbx
  436f88:	(bad)  
  436f89:	pop    rbx
  436f8a:	pop    rdi
  436f8b:	pop    rax
  436f8c:	xor    al,BYTE PTR [rax]
  436f8e:	add    BYTE PTR [rax],al
  436f90:	add    BYTE PTR [rax],al
  436f92:	add    BYTE PTR [rdi+rdi*8+0xf],cl
  436f96:	or     DWORD PTR [rbx],ecx
  436f98:	(bad)  
  436f99:	or     eax,0x310a0c
  436f9e:	add    BYTE PTR [rax],al
  436fa0:	add    BYTE PTR [rax],al
  436fa2:	add    BYTE PTR [rax],al
  436fa4:	rex.WR dec QWORD PTR [rdi]
	...
  436faf:	add    BYTE PTR [rip+0x18],dl        # 0x436fcd
  436fb5:	rex.WR call FWORD PTR [rdx+rbx*1]
  436fb9:	cmp    BYTE PTR [rax],al
  436fbb:	add    BYTE PTR [rax],al
  436fbd:	add    BYTE PTR [rax],al
  436fbf:	adc    eax,0x3c2516
  436fc4:	add    BYTE PTR [rax],al
  436fc6:	(bad)  
  436fc7:	push   rdx
  436fc8:	rex.WR
  436fc9:	rex.RXB cmp r8b,BYTE PTR [r8]
  436fcc:	add    BYTE PTR [rax],al
  436fce:	adc    eax,0x23411915
  436fd3:	rex.X add BYTE PTR [rax],al
  436fd6:	and    DWORD PTR [rax+0x0],edx
  436fd9:	add    BYTE PTR [rax+0x0],cl
  436fdc:	add    BYTE PTR [rax],al
  436fde:	add    BYTE PTR [rax],al
  436fe0:	(bad)  
  436fe1:	and    al,BYTE PTR [rax]
  436fe3:	add    BYTE PTR [rax],al
  436fe5:	add    BYTE PTR [rsi+0x53],cl
	...
  436ff0:	and    al,0x22
  436ff2:	add    BYTE PTR [rax],al
  436ff4:	add    BYTE PTR [rax],al
  436ff6:	add    BYTE PTR [rsp+rcx*2+0x0],cl
  436ffa:	add    BYTE PTR [rax],al
  436ffc:	add    BYTE PTR [rax],al
  436ffe:	add    BYTE PTR [rax],al
  437000:	add    BYTE PTR [rbx+0x4f],al
  437003:	add    BYTE PTR [rax],al
  437005:	add    BYTE PTR [rax],al
  437007:	(bad)  
	...
  437010:	add    BYTE PTR [rax],al
  437012:	cmp    eax,0x543e4040
  437017:	add    BYTE PTR [rax],al
  437019:	add    BYTE PTR [rax],al
  43701b:	add    BYTE PTR [rax],al
  43701d:	inc    DWORD PTR [rax]
  43701f:	add    BYTE PTR [rax],al
  437021:	inc    DWORD PTR [rax]
  437023:	add    BYTE PTR [rax],al
  437025:	repz add BYTE PTR [rax],al
  437028:	add    cl,bh
  43702a:	add    BYTE PTR [rax],al
  43702c:	add    cl,bl
  43702e:	add    BYTE PTR [rax],al
  437030:	add    cl,al
  437032:	add    BYTE PTR [rax],al
  437034:	add    al,ah
  437036:	add    BYTE PTR [rax],al
  437038:	add    ah,bh
  43703a:	add    BYTE PTR [rax],al
  43703c:	add    dh,bh
  43703e:	(bad)  
  43703f:	add    BYTE PTR [rax],al
  437041:	out    0x7,eax
  437043:	add    BYTE PTR [rax],al
  437045:	ret    
  437046:	add    DWORD PTR [rax],0x0
  437049:	sbb    DWORD PTR [rbx-0x60190000],0xcfe70000
  437053:	add    BYTE PTR [rax],al
  437055:	repz fild WORD PTR [rax]
  437058:	add    al,bh
  43705a:	(bad)  
  43705b:	add    BYTE PTR [rax],al
  43705d:	sub    BYTE PTR [rax],al
  43705f:	add    BYTE PTR [rax],al
  437061:	and    BYTE PTR [rax],al
  437063:	add    BYTE PTR [rax],al
  437065:	add    BYTE PTR [rax],al
  437068:	add    BYTE PTR [rcx],al
  43706a:	add    BYTE PTR [rax],ah
  43706c:	add    BYTE PTR [rax],al
  43706e:	add    BYTE PTR [rax],al
  437070:	add    BYTE PTR [rax+0x10],al
	...
  43713e:	add    BYTE PTR [rax],al
  437140:	add    BYTE PTR [rbx],dh
  437142:	cdq    
  437143:	xor    edi,edi
  437145:	xor    esp,DWORD PTR [rsi+0x33]
  437148:	push   QWORD PTR [rbx]
  43714a:	xor    di,di
  43714d:	xor    esp,DWORD PTR [rsi+0x33]
  437150:	push   QWORD PTR [rbx]
  437152:	xor    di,di
  437155:	xor    esp,DWORD PTR [rsi+0x33]
  437158:	push   QWORD PTR [rbx]
  43715a:	xor    di,di
  43715d:	xor    esp,DWORD PTR [rsi+0x33]
  437160:	push   QWORD PTR [rbx]
  437162:	xor    di,di
  437165:	xor    esp,DWORD PTR [rsi+0x33]
  437168:	push   QWORD PTR [rbx]
  43716a:	xor    di,di
  43716d:	xor    esp,DWORD PTR [rsi+0x33]
  437170:	push   QWORD PTR [rbx]
  437172:	xor    di,di
  437175:	xor    esp,DWORD PTR [rsi+0x33]
  437178:	push   QWORD PTR [rbx]
  43717a:	xor    di,di
  43717d:	xor    esp,DWORD PTR [rsi+0x33]
  437180:	inc    DWORD PTR [rax]
	...
  4371be:	add    BYTE PTR [rax],al
  4371c0:	add    BYTE PTR [rbx],dh
  4371c2:	cdq    
  4371c3:	xor    edi,edi
  4371c5:	cwd    
  4371c7:	jmp    WORD PTR [rsi-0x67]
  4371cb:	push   WORD PTR [rbx]
  4371ce:	cdq    
  4371cf:	push   WORD PTR [rbx]
  4371d2:	cdq    
  4371d3:	push   WORD PTR [rbx]
  4371d6:	cdq    
  4371d7:	push   WORD PTR [rbx]
  4371da:	cdq    
  4371db:	xor    edi,edi
  4371dd:	xor    ebx,DWORD PTR [rcx-0x66cc00cd]
  4371e3:	xor    edi,edi
  4371e5:	xor    ebx,DWORD PTR [rcx-0x66cc00cd]
  4371eb:	xor    edi,edi
  4371ed:	xor    ebx,DWORD PTR [rcx-0x66cc00cd]
  4371f3:	xor    edi,edi
  4371f5:	xor    ebx,DWORD PTR [rcx-0x66cc00cd]
  4371fb:	xor    edi,edi
  4371fd:	xor    esp,DWORD PTR [rsi+0x33]
  437200:	inc    DWORD PTR [rax]
	...
  43723e:	add    BYTE PTR [rax],al
  437240:	add    BYTE PTR [rbx],dh
  437242:	cdq    
  437243:	xor    edi,edi
  437245:	rcr    ah,0xc0
  437248:	jmp    QWORD PTR [rsi-0x34]
  43724b:	jmp    WORD PTR [rsi-0x67]
  43724f:	push   WORD PTR [rbx]
  437252:	cdq    
  437253:	push   WORD PTR [rbx]
  437256:	xor    di,di
  437259:	cwd    
  43725b:	jmp    WORD PTR [rsi-0x67]
  43725f:	push   WORD PTR [rbx]
  437262:	cdq    
  437263:	push   WORD PTR [rbx]
  437266:	cdq    
  437267:	push   WORD PTR [rbx]
  43726a:	cdq    
  43726b:	xor    edi,edi
  43726d:	xor    ebx,DWORD PTR [rcx-0x66cc009a]
  437273:	xor    edi,edi
  437275:	xor    ebx,DWORD PTR [rcx-0x66cc009a]
  43727b:	xor    edi,edi
  43727d:	xor    esp,DWORD PTR [rsi+0x33]
  437280:	inc    DWORD PTR [rax]
	...
  437292:	add    BYTE PTR [rax],al
  437294:	add    BYTE PTR [rsp+rdi*2+0x768e206b],dl
  43729b:	mov    al,BYTE PTR fs:[rdi-0x7f39a292]
  4372a2:	push   0x617af855
  4372a7:	rex.WRB (bad) 
  4372a9:	je     0x437305
  4372ab:	rex.RXB jnp 0x43731c
  4372ae:	push   rsp
  4372af:	and    BYTE PTR [r8],al
	...
  4372be:	add    BYTE PTR [rax],al
  4372c0:	add    BYTE PTR [rbx],dh
  4372c2:	cdq    
  4372c3:	xor    edi,edi
  4372c5:	rcr    ah,0xc0
  4372c8:	jmp    QWORD PTR [rsi-0x34]
  4372cb:	cdq    
  4372cc:	jmp    QWORD PTR [rsi-0x67]
  4372cf:	push   WORD PTR [rbx]
  4372d2:	xor    di,di
  4372d5:	rol    al,0xc0
  4372d8:	push   QWORD PTR [rbx]
  4372da:	xor    di,di
  4372dd:	xor    ebx,DWORD PTR [rcx-0x6699009a]
  4372e3:	push   WORD PTR [rbx]
  4372e6:	cdq    
  4372e7:	xor    edi,edi
  4372e9:	xor    ebx,DWORD PTR [rcx-0x66cc009a]
  4372ef:	xor    edi,edi
  4372f1:	xor    ebx,DWORD PTR [rcx-0x66cc009a]
  4372f7:	xor    edi,edi
  4372f9:	xor    ebx,DWORD PTR [rcx+0x6633ff33]
  4372ff:	xor    edi,edi
	...
  437311:	movabs ds:0xe2fb6f8098207e8e,eax
  43731a:	(bad)  
  43731b:	(bad)  
  43731c:	(bad)  
  43731d:	stc    
  43731e:	jmp    0x437303
  437320:	push   rdi
  437322:	out    0xdd,al
  437324:	call   rbp
  437326:	enter  0xffc0,0xbe
  43732a:	lods   eax,DWORD PTR ds:[rsi]
  43732b:	movabs ds:0x3f536ddf455972ff,al
  437334:	cmp    al,0x0
	...
  43733e:	add    BYTE PTR [rax],al
  437340:	add    BYTE PTR [rbx],dh
  437342:	cdq    
  437343:	xor    edi,edi
  437345:	rcr    ah,0xc0
  437348:	jmp    QWORD PTR [rsi-0x34]
  43734b:	cdq    
  43734c:	push   QWORD PTR [rbx]
  43734e:	xor    di,di
  437351:	fstp   st(5)
  437353:	(bad)  
  437355:	rol    al,0xc0
  437358:	inc    eax
  43735a:	rol    al,0xff
  43735d:	xor    esp,DWORD PTR [rsi+0x33]
  437360:	jmp    QWORD PTR [rsi-0x67]
  437363:	push   WORD PTR [rbx]
  437366:	cdq    
  437367:	jmp    WORD PTR [rsi+0x66]
  43736b:	push   WORD PTR [rbx]
  43736e:	xor    di,di
  437371:	xor    ebx,DWORD PTR [rcx-0x66cc009a]
  437377:	push   WORD PTR [rbx]
  43737a:	cdq    
  43737b:	xor    edi,edi
  43737d:	xor    esp,DWORD PTR [rsi+0x33]
  437380:	inc    DWORD PTR [rax]
	...
  43738e:	add    BYTE PTR [rax],al
  437390:	add    BYTE PTR [rsi-0x63009181],dl
  437396:	xchg   BYTE PTR [rbp-0x1],dh
  437399:	xchg   ecx,eax
  43739a:	jns    0x437403
  43739c:	dec    DWORD PTR [rsi-0x50009a8a]
  4373a2:	pushf  
  4373a3:	(bad)  
  4373a4:	(bad)  
  4373a5:	std    
  4373a6:	cli    
  4373a7:	clc    
  4373a8:	(bad)  
  4373a9:	fcmovne st,st(7)
  4373ab:	(bad)  
  4373ac:	call   FWORD PTR [rbp+rax*4+0x5771ff75]
  4373b3:	rex.XB mov r11d,0x0
	...
  4373c1:	cwd    
  4373c3:	inc    ax
  4373c6:	fadd   st(0),st
  4373c8:	call   FWORD PTR [rcx-0x6634]
  4373ce:	(bad)  
  4373cf:	(bad)  
  4373d0:	(bad)  
  4373d1:	(bad)  
  4373d2:	(bad)  
  4373d3:	(bad)  
  4373d4:	push   rcx
  4373d6:	icebp  
  4373d7:	icebp  
  4373d8:	dec    esp
  4373da:	int3   
  4373db:	int3   
  4373dc:	inc    eax
  4373de:	rol    al,0xff
  4373e1:	xor    esp,DWORD PTR [rsi+0x33]
  4373e4:	push   QWORD PTR [rbx]
  4373e6:	xor    esi,DWORD PTR [rbx]
  4373e8:	dec    esp
  4373ea:	int3   
  4373eb:	int3   
  4373ec:	inc    eax
  4373ee:	rol    al,0xff
  4373f1:	xor    ebx,DWORD PTR [rcx-0x66cc00cd]
  4373f7:	push   WORD PTR [rbx]
  4373fa:	cdq    
  4373fb:	xor    edi,edi
  4373fd:	xor    esp,DWORD PTR [rsi+0x33]
  437400:	inc    DWORD PTR [rax]
	...
  43741e:	add    BYTE PTR [rax],al
  437420:	add    BYTE PTR [rsi-0x4009a89],cl
  437426:	lock jmp 0x437428
  437429:	fxch   st(2)
  43742b:	ret    
  43742c:	jmp    FWORD PTR [rcx-0x79007a6c]
  437432:	outs   dx,BYTE PTR ds:[rsi]
  437433:	pop    rsp
  437434:	repnz add BYTE PTR [rax],al
	...
  43743f:	add    BYTE PTR [rax],al
  437441:	cwd    
  437443:	inc    ax
  437446:	fadd   st(0),st
  437448:	call   FWORD PTR [rcx+0x66ff99cc]
  43744e:	int3   
  43744f:	cdq    
  437450:	(bad)  
  437451:	(bad)  
  437452:	(bad)  
  437453:	(bad)  
  437454:	(bad)  
  437455:	(bad)  
  437456:	(bad)  
  437457:	(bad)  
  437458:	(bad)  
  437459:	(bad)  
  43745a:	(bad)  
  43745b:	(bad)  
  43745c:	call   rdi
  43745e:	xlat   BYTE PTR ds:[rbx]
  43745f:	xlat   BYTE PTR ds:[rbx]
  437460:	inc    eax
  437462:	rol    al,0xff
  437465:	xlat   BYTE PTR ds:[rbx]
  437466:	xlat   BYTE PTR ds:[rbx]
  437467:	xlat   BYTE PTR ds:[rbx]
  437468:	call   rdi
  43746a:	xlat   BYTE PTR ds:[rbx]
  43746b:	xlat   BYTE PTR ds:[rbx]
  43746c:	inc    eax
  43746e:	rol    al,0xff
  437471:	xor    ebx,DWORD PTR [rcx-0x66cc00cd]
  437477:	push   WORD PTR [rbx]
  43747a:	cdq    
  43747b:	xor    edi,edi
  43747d:	xor    esp,DWORD PTR [rsi+0x33]
  437480:	inc    DWORD PTR [rax]
	...
  43749e:	add    BYTE PTR [rax],al
  4374a0:	add    BYTE PTR [rcx-0x8009786],dl
  4374a6:	in     eax,0xdc
  4374a8:	call   rbp
  4374aa:	(bad)  
  4374ab:	mov    ebp,0x8191a7ff
  4374b0:	push   QWORD PTR [rbp+0x5c]
  4374b3:	inc    QWORD PTR [rax]
	...
  4374be:	add    BYTE PTR [rax],al
  4374c0:	add    BYTE PTR [rbx],dh
  4374c2:	cdq    
  4374c3:	inc    ax
  4374c6:	fadd   st(0),st
  4374c8:	call   FWORD PTR [rcx+0x66ff99cc]
  4374ce:	int3   
  4374cf:	cdq    
  4374d0:	jmp    QWORD PTR [rsi-0x34]
  4374d3:	data16 (bad) 
  4374d5:	(bad)  
  4374d6:	(bad)  
  4374d7:	(bad)  
  4374d8:	(bad)  
  4374d9:	(bad)  
  4374da:	(bad)  
  4374db:	(bad)  
  4374dc:	(bad)  
  4374dd:	(bad)  
  4374de:	(bad)  
  4374df:	(bad)  
  4374e0:	push   rcx
  4374e2:	icebp  
  4374e3:	icebp  
  4374e4:	push   rcx
  4374e6:	icebp  
  4374e7:	icebp  
  4374e8:	push   rcx
  4374ea:	icebp  
  4374eb:	icebp  
  4374ec:	dec    esp
  4374ee:	int3   
  4374ef:	int3   
  4374f0:	push   QWORD PTR [rbx]
  4374f2:	cdq    
  4374f3:	jmp    WORD PTR [rsi-0x67]
  4374f7:	push   WORD PTR [rbx]
  4374fa:	cdq    
  4374fb:	xor    edi,edi
  4374fd:	xor    esp,DWORD PTR [rsi+0x33]
  437500:	inc    DWORD PTR [rax]
	...
  43750e:	add    BYTE PTR [rax],al
  437510:	add    BYTE PTR [rdi-0x62008677],bl
  437516:	xchg   BYTE PTR [rbp-0x1],dh
  437519:	cdq    
  43751a:	xor    DWORD PTR [rdx-0x1],0xffffff97
  43751e:	sub    BYTE PTR [rdi-0x1],0xad
  437522:	cdq    
  437523:	mov    edi,edi
  437525:	hlt    
  437526:	fcmovne st,st(6)
  437528:	call   rdx
  43752a:	shl    DWORD PTR [rdi-0x796a5201],0xff
  437531:	jl     0x437596
  437533:	push   rcx
  437534:	test   DWORD PTR [rax],0x0
  43753a:	add    BYTE PTR [rax],al
  43753c:	add    BYTE PTR [rax],al
  43753e:	add    BYTE PTR [rax],al
  437540:	add    BYTE PTR [rsi-0x67],ah
  437543:	inc    ax
  437546:	fadd   st(0),st
  437548:	call   FWORD PTR [rcx-0x66006634]
  43754e:	int3   
  43754f:	cdq    
  437550:	jmp    QWORD PTR [rsi-0x34]
  437553:	cdq    
  437554:	jmp    QWORD PTR [rsi-0x67]
  437557:	data16 (bad) 
  437559:	(bad)  
  43755a:	(bad)  
  43755b:	(bad)  
  43755c:	push   rcx
  43755e:	icebp  
  43755f:	icebp  
  437560:	(bad)  
  437561:	(bad)  
  437562:	(bad)  
  437563:	(bad)  
  437564:	(bad)  
  437565:	(bad)  
  437566:	(bad)  
  437567:	(bad)  
  437568:	push   rcx
  43756a:	icebp  
  43756b:	icebp  
  43756c:	dec    esp
  43756e:	int3   
  43756f:	int3   
  437570:	jmp    QWORD PTR [rsi-0x67]
  437573:	push   WORD PTR [rbx]
  437576:	cdq    
  437577:	push   WORD PTR [rbx]
  43757a:	cdq    
  43757b:	xor    edi,edi
  43757d:	xor    esp,DWORD PTR [rsi+0x33]
  437580:	inc    DWORD PTR [rax]
	...
  43758e:	add    BYTE PTR [rax],al
  437590:	add    BYTE PTR [rdi-0x56848b7d],dl
  437596:	xchg   esp,eax
  437597:	test   bh,bh
  437599:	cld    
  43759a:	repz lock (bad) 
  43759d:	fcmovne st,st(5)
  43759f:	(bad)  
  4375a2:	mov    eax,0xb9c2d2ff
  4375a8:	dec    edi
  4375aa:	mov    esp,0x8ea7ffb3
  4375af:	jge    0x4375b0
  4375b1:	xchg   ebx,eax
  4375b2:	jnp    0x43761e
  4375b4:	call   QWORD PTR [rcx+0x646878]
  4375ba:	add    BYTE PTR [rax],al
  4375bc:	add    BYTE PTR [rax],al
  4375be:	add    BYTE PTR [rax],al
  4375c0:	add    BYTE PTR [rsi-0x67],ah
  4375c3:	inc    ax
  4375c6:	fadd   st(0),st
  4375c8:	call   FWORD PTR [rcx-0x66006634]
  4375ce:	int3   
  4375cf:	cdq    
  4375d0:	jmp    QWORD PTR [rsi-0x67]
  4375d3:	push   WORD PTR [rbx]
  4375d6:	data16 data16 (bad) 
  4375d9:	(bad)  
  4375da:	(bad)  
  4375db:	(bad)  
  4375dc:	push   rcx
  4375de:	icebp  
  4375df:	icebp  
  4375e0:	(bad)  
  4375e1:	(bad)  
  4375e2:	(bad)  
  4375e3:	(bad)  
  4375e4:	push   rax
  4375e6:	sti    
  4375e7:	(bad)  
  4375e8:	push   rcx
  4375ea:	icebp  
  4375eb:	icebp  
  4375ec:	call   rdi
  4375ee:	xlat   BYTE PTR ds:[rbx]
  4375ef:	xlat   BYTE PTR ds:[rbx]
  4375f0:	jmp    QWORD PTR [rsi-0x67]
  4375f3:	jmp    WORD PTR [rsi-0x67]
  4375f7:	push   WORD PTR [rbx]
  4375fa:	cdq    
  4375fb:	push   WORD PTR [rbx]
  4375fe:	xor    di,di
	...
  437611:	movabs ds:0xa9a57b8ba2207e8e,eax
  43761a:	xchg   esp,eax
  43761b:	test   bh,bh
  43761d:	cld    
  43761e:	clc    
  43761f:	idiv   bh
  437621:	cld    
  437622:	div    dl
  437624:	(bad)  
  437625:	sti    
  437626:	repz out dx,al
  437628:	jmp    rsp
  43762a:	(bad)  
  43762b:	(bad)  
  43762c:	dec    eax
  43762e:	mov    bl,0xa8
  437630:	(bad)  
  437631:	mov    edi,0x92ff99a7
  437636:	jge    0x4376a4
  437638:	(bad)  
  437639:	movabs al,ds:0x6600000000647788
  437642:	cdq    
  437643:	inc    ax
  437646:	fadd   st(0),st
  437648:	call   FWORD PTR [rcx-0x66006634]
  43764e:	int3   
  43764f:	cdq    
  437650:	jmp    QWORD PTR [rsi-0x34]
  437653:	cdq    
  437654:	(bad)  
  437655:	(bad)  
  437656:	(bad)  
  437657:	(bad)  
  437658:	(bad)  
  437659:	(bad)  
  43765a:	(bad)  
  43765b:	(bad)  
  43765c:	(bad)  
  43765d:	(bad)  
  43765e:	(bad)  
  43765f:	(bad)  
  437660:	(bad)  
  437661:	(bad)  
  437662:	(bad)  
  437663:	(bad)  
  437664:	(bad)  
  437665:	(bad)  
  437666:	(bad)  
  437667:	(bad)  
  437668:	(bad)  
  437669:	(bad)  
  43766a:	(bad)  
  43766b:	(bad)  
  43766c:	jmp    rbx
  43766e:	jrcxz  0x437653
  437670:	jmp    QWORD PTR [rsi-0x67]
  437673:	jmp    WORD PTR [rsi-0x34]
  437677:	push   WORD PTR [rbx]
  43767a:	cdq    
  43767b:	push   WORD PTR [rbx]
  43767e:	xor    di,di
	...
  437695:	lahf   
  437696:	mov    BYTE PTR [rax+0x20],bh
  437699:	pushf  
  43769a:	test   DWORD PTR [rbp+0x7b],esi
  43769d:	cdq    
  43769e:	xor    DWORD PTR [rdx-0x3a],0xffffff97
  4376a2:	sub    BYTE PTR [rdi-0x8],0x95
  4376a6:	jge    0x437714
  4376a8:	fild   QWORD PTR [rdx-0xa007a6c]
  4376ae:	(bad)  
  4376b0:	inc    edx
  4376b2:	stos   BYTE PTR es:[rdi],al
  4376b3:	sahf   
  4376b4:	push   QWORD PTR [rsi-0x72007164]
  4376ba:	jbe    0x437722
  4376bc:	std    
  4376bd:	pushf  
  4376be:	xor    DWORD PTR [rdx+0x66],0x66
  4376c2:	cdq    
  4376c3:	inc    ax
  4376c6:	fadd   st(0),st
  4376c8:	call   FWORD PTR [rcx-0x66006634]
  4376ce:	int3   
  4376cf:	cdq    
  4376d0:	jmp    QWORD PTR [rsi-0x34]
  4376d3:	cdq    
  4376d4:	(bad)  
  4376d5:	(bad)  
  4376d6:	(bad)  
  4376d7:	(bad)  
  4376d8:	(bad)  
  4376d9:	(bad)  
  4376da:	(bad)  
  4376db:	(bad)  
  4376dc:	(bad)  
  4376dd:	(bad)  
  4376de:	(bad)  
  4376df:	(bad)  
  4376e0:	(bad)  
  4376e1:	(bad)  
  4376e2:	(bad)  
  4376e3:	(bad)  
  4376e4:	(bad)  
  4376e5:	(bad)  
  4376e6:	(bad)  
  4376e7:	(bad)  
  4376e8:	(bad)  
  4376e9:	(bad)  
  4376ea:	(bad)  
  4376eb:	(bad)  
  4376ec:	(bad)  
  4376ed:	(bad)  
  4376ee:	(bad)  
  4376ef:	(bad)  
  4376f0:	jmp    QWORD PTR [rsi-0x34]
  4376f3:	jmp    WORD PTR [rsi-0x67]
  4376f7:	push   WORD PTR [rbx]
  4376fa:	cdq    
  4376fb:	push   WORD PTR [rbx]
  4376fe:	xor    di,di
	...
  437729:	movabs ds:0xf5ff7e8da4ae7c8c,eax
  437732:	(bad)  
  437734:	(bad)  
  437735:	mov    ebx,0xb1ff95a3
  43773a:	cwde   
  43773b:	mov    edi,edi
  43773d:	xchg   ecx,eax
  43773e:	ja     0x4377a8
  437740:	std    
  437741:	jl     0x4376d3
  437743:	imul   edi,edi,0xffffffc0
  437746:	fadd   st(0),st
  437748:	call   FWORD PTR [rcx-0x66006634]
  43774e:	int3   
  43774f:	cdq    
  437750:	call   FWORD PTR [rcx-0x66006634]
  437756:	int3   
  437757:	cdq    
  437758:	call   FWORD PTR [rcx-0x66006634]
  43775e:	int3   
  43775f:	cdq    
  437760:	call   FWORD PTR [rcx-0x66006634]
  437766:	int3   
  437767:	cdq    
  437768:	call   FWORD PTR [rcx-0x66006634]
  43776e:	int3   
  43776f:	cdq    
  437770:	call   FWORD PTR [rcx+0x66ff99cc]
  437776:	int3   
  437777:	jmp    WORD PTR [rsi-0x67]
  43777b:	push   WORD PTR [rbx]
  43777e:	xor    di,di
	...
  4377ad:	popf   
  4377ae:	test   DWORD PTR [rbp-0x52],esi
  4377b1:	sahf   
  4377b2:	xchg   BYTE PTR [rbp-0x1],dh
  4377b5:	mul    al
  4377b7:	(bad)  
  4377b8:	(bad)  
  4377b9:	mov    edx,0xb3ff91a0
  4377be:	cdq    
  4377bf:	mov    bh,bh
  4377c1:	xchg   ebx,eax
  4377c2:	jp     0x43782d
  4377c4:	jmp    FWORD PTR [rdi-0x3f00624b]
  4377ca:	fadd   st(0),st
  4377cc:	inc    eax
  4377ce:	fadd   st(0),st
  4377d0:	inc    eax
  4377d2:	fadd   st(0),st
  4377d4:	inc    eax
  4377d6:	fadd   st(0),st
  4377d8:	inc    eax
  4377da:	fadd   st(0),st
  4377dc:	inc    eax
  4377de:	fadd   st(0),st
  4377e0:	inc    eax
  4377e2:	fadd   st(0),st
  4377e4:	inc    eax
  4377e6:	fadd   st(0),st
  4377e8:	inc    eax
  4377ea:	fadd   st(0),st
  4377ec:	inc    eax
  4377ee:	fadd   st(0),st
  4377f0:	inc    eax
  4377f2:	fadd   st(0),st
  4377f4:	inc    eax
  4377f6:	fadd   st(0),st
  4377f8:	jmp    QWORD PTR [rsi-0x34]
  4377fb:	push   WORD PTR [rbx]
  4377fe:	xor    di,di
	...
  437831:	xchg   edi,eax
  437832:	jg     0x4378a2
  437834:	scas   al,BYTE PTR es:[rdi]
  437835:	fwait
  437836:	(bad)  
  437837:	jo     0x437838
  437839:	mul    cl
  43783b:	(bad)  
  43783c:	(bad)  
  43783d:	mov    ecx,0xadff8e9e
  437842:	xchg   edx,eax
  437843:	cmp    edi,0xff63738e
  437849:	js     0x4377d6
  43784b:	jmp    WORD PTR [rsi-0x67]
  43784f:	jmp    WORD PTR [rsi-0x67]
  437853:	jmp    WORD PTR [rsi-0x67]
  437857:	jmp    WORD PTR [rsi-0x67]
  43785b:	jmp    WORD PTR [rsi-0x67]
  43785f:	jmp    WORD PTR [rsi-0x67]
  437863:	push   WORD PTR [rbx]
  437866:	cdq    
  437867:	xor    edi,edi
  437869:	cwd    
  43786b:	push   WORD PTR [rbx]
  43786e:	cdq    
  43786f:	xor    edi,edi
  437871:	cwd    
  437873:	push   WORD PTR [rbx]
  437876:	cdq    
  437877:	xor    edi,edi
  437879:	xor    ebx,DWORD PTR [rcx-0x66cc00cd]
  43787f:	xor    edi,edi
	...
  437899:	xchg   BYTE PTR [rcx+0x20],al
  43789c:	inc    DWORD PTR [rax]
	...
  4378b2:	add    BYTE PTR [rax],al
  4378b4:	add    BYTE PTR [rdx-0x66519887],dl
  4378ba:	jg     0x43792b
  4378bc:	push   rsi
  4378be:	loope  0x437898
  4378c0:	push   QWORD PTR [rbp-0x58007566]
  4378c6:	mov    edi,DWORD PTR [rcx-0x1]
  4378c9:	mov    esi,DWORD PTR [rax+0x5f]
  4378cc:	std    
  4378cd:	mov    DWORD PTR [rsi+0x5b],ebp
  4378d0:	data16 add BYTE PTR [rax],al
	...
  437913:	add    BYTE PTR [rax],al
  437915:	xchg   ebx,eax
  437916:	rex.RXB and r15b,r15b
  437919:	scas   al,BYTE PTR es:[rdi]
  43791a:	pop    rbp
  43791b:	(bad)  
  43791c:	inc    DWORD PTR [rsi+0xff2041]
	...
  437936:	add    BYTE PTR [rax],al
  437938:	add    BYTE PTR [rbp-0x6c509d8c],cl
  43793e:	jp     0x4379a8
  437940:	push   rsi
  437942:	loop   0x43791c
  437944:	jmp    FWORD PTR [rbx-0x65008071]
  43794a:	jle    0x4379b8
  43794c:	(bad)  
  43794d:	jp     0x4379af
  43794f:	rex.WR std 
  437951:	jg     0x4379b8
  437953:	push   rcx
  437954:	add    BYTE PTR fs:[rax],al
	...
  43798f:	add    BYTE PTR [rax],al
  437991:	mov    ebx,0xceff2959
  437996:	jno    0x4379db
  437998:	inc    ebx
  43799a:	push   0x3f
  43799c:	(bad)  
  43799d:	mov    ecx,0x86ff3b64
  4379a2:	and    r15b,dil
	...
  4379bd:	xchg   DWORD PTR [rbp+0x5a],ebp
  4379c0:	scas   al,BYTE PTR es:[rdi]
  4379c1:	mov    DWORD PTR [rax+0x5e],esi
  4379c4:	push   rsi
  4379c6:	loop   0x4379a1
  4379c8:	call   FWORD PTR [rax-0x6b009483]
  4379ce:	jns    0x437a35
  4379d0:	push   QWORD PTR [rbx+0x58]
  4379d3:	rex.R std 
  4379d5:	jnp    0x437a37
  4379d7:	rex.WRB
  4379d8:	add    BYTE PTR fs:[rax],al
	...
  437a0b:	add    BYTE PTR [rax],al
  437a0d:	fild   QWORD PTR [rdi+0x36]
  437a10:	push   rax
  437a12:	mov    BYTE PTR [rdi+rdi*8-0x19],dl
  437a16:	(bad)  
  437a17:	rex.WRXB (bad) 
  437a19:	fnstsw WORD PTR [rdx+0x4a]
  437a1c:	call   rdx
  437a1e:	jae    0x437a65
  437a20:	inc    edi
  437a22:	ins    DWORD PTR es:[rdi],dx
  437a23:	rex inc DWORD PTR [rsi+0xff2041]
	...
  437a3e:	add    BYTE PTR [rax],al
  437a40:	add    BYTE PTR [rcx-0x7d51ab99],al
  437a46:	addr32 push rsp
  437a48:	push   rsi
  437a4a:	jrcxz  0x437a26
  437a4c:	jmp    FWORD PTR [rdx-0x55007e6f]
  437a52:	xchg   ecx,eax
  437a53:	cmp    edi,0xfe415570
  437a59:	outs   dx,BYTE PTR ds:[rsi]
  437a5a:	push   rbx
  437a5b:	(bad)  
  437a5c:	out    dx,al
  437a5d:	ins    DWORD PTR es:[rdi],dx
  437a5e:	push   rbp
  437a5f:	rex.X (bad) 
  437a61:	ins    DWORD PTR es:[rdi],dx
  437a62:	push   rbp
  437a63:	rex.X (bad) 
  437a65:	jns    0x437ac5
  437a67:	rex.WX sar BYTE PTR [rbx+0x60],cl
  437a6b:	rex.WR mov r15b,BYTE PTR [rcx+riz*2+0x4d]
  437a70:	add    al,BYTE PTR [rax]
	...
  437a86:	add    BYTE PTR [rax],al
  437a88:	add    dl,ch
  437a8a:	mov    BYTE PTR [rsi-0x1],dl
  437a8d:	out    0x7a,eax
  437a8f:	rex.XB (bad) 
  437a91:	call   QWORD PTR [rsi-0x6e04009f]
  437a97:	pop    rbx
  437a98:	push   rsp
  437a9a:	mov    dl,BYTE PTR [rsi-0x1]
  437a9d:	jmp    0x437a23
  437a9f:	push   rcx
  437aa0:	jmp    rax
  437aa2:	jge    0x437aef
  437aa4:	inc    DWORD PTR [rsi-0x7900dfbf]
  437aaa:	and    r15b,dil
	...
  437ac5:	jl     0x437b28
  437ac7:	rex.WRB scas al,BYTE PTR es:[rdi]
  437ac9:	jge    0x437b2e
  437acb:	rex.WRX push rdi
  437ace:	jrcxz  0x437aab
  437ad0:	jmp    FWORD PTR [rdx-0x3f007e6f]
  437ad6:	test   eax,0x9eb8ff9d
  437adb:	nop
  437adc:	push   QWORD PTR [rax-0x57007769]
  437ae2:	(bad)  
  437ae3:	jle    0x437ae4
  437ae5:	lahf   
  437ae6:	test   BYTE PTR [rbx-0x1],dh
  437ae9:	jne    0x437b45
  437aeb:	rex.RX push QWORD PTR [rcx+r11*2+0x44]
  437af0:	sar    BYTE PTR [rcx+riz*2+0x4d],0x2
	...
  437b11:	call   0x42bd91
  437b16:	sahf   
  437b17:	push   0xffffffffffffffff
  437b19:	call   FWORD PTR [rax-0x6d02009d]
  437b1f:	pop    rbp
  437b20:	jmp    QWORD PTR [rsi+0xff2550]
	...
  437b46:	add    BYTE PTR [rax],al
  437b48:	add    BYTE PTR [rax+0x5d],bh
  437b4b:	rex.WB scas al,BYTE PTR es:[rdi]
  437b4d:	mov    WORD PTR [rbx+riz*2-0x1],?
  437b51:	icebp  
  437b52:	rol    ecx,1
  437b54:	push   QWORD PTR [rsp+rbx*4-0x654b0073]
  437b5b:	mov    edi,edi
  437b5d:	lahf   
  437b5e:	xchg   DWORD PTR [rsi-0x1],esi
  437b61:	(bad)  
  437b62:	mov    cl,0xa5
  437b64:	(bad)  
  437b65:	mov    esi,0xb5ff98a6
  437b6a:	fwait
  437b6b:	(bad)  
  437b6c:	push   QWORD PTR [rbp+0x5a]
  437b6f:	rex.RX push QWORD PTR [rdi+0x5c]
  437b73:	rex.RXB xchg r15d,eax
	...
  437b91:	(bad)  
  437b92:	mov    BYTE PTR [rsi-0x32],dl
  437b95:	(bad)  
  437b96:	jg     0x437be1
  437b98:	(bad)  
  437b99:	jmp    QWORD PTR [rsi-0x5f00008b]
  437b9f:	ins    DWORD PTR es:[rdi],dx
  437ba0:	(bad)  
  437ba1:	mov    edx,0xff2959
	...
  437bca:	add    BYTE PTR [rax],al
  437bcc:	add    BYTE PTR [rax-0xc099787],dl
  437bd2:	(bad)  
  437bd3:	enter  0xbcff,0xa3
  437bd7:	xchg   esi,eax
  437bd8:	push   QWORD PTR [rbx-0x6f007466]
  437bde:	jne    0x437c44
  437be0:	jmp    QWORD PTR [rbx+0x48]
  437be3:	xor    edi,edi
  437be5:	movsxd ecx,DWORD PTR [rax+0x33]
  437be8:	jmp    QWORD PTR [rbx+0x48]
  437beb:	xor    edi,edi
  437bed:	movsxd ecx,DWORD PTR [rax+0x33]
  437bf0:	jmp    FWORD PTR [rbx+0x50]
  437bf3:	cmp    esi,esi
	...
  437c11:	(bad)  
  437c12:	xchg   ebp,eax
  437c13:	imul   esi,DWORD PTR [rax-0x10],0xffffff94
  437c17:	gs (bad) 
  437c19:	push   QWORD PTR [rdx-0x52001a78]
  437c1f:	cmp    bh,0xd1
  437c22:	addr32 xor edi,edi
  437c25:	mov    edx,0x70285a
	...
  437c4a:	add    BYTE PTR [rax],al
  437c4c:	add    BYTE PTR [rbp-0xb029282],dl
  437c52:	fcmove st,st(6)
  437c54:	inc    ebx
  437c56:	lods   eax,DWORD PTR ds:[rsi]
  437c57:	movabs al,ds:0x5d6f87ff94a2bbff
  437c60:	inc    DWORD PTR [rax]
	...
  437c8e:	add    BYTE PTR [rax],al
  437c90:	add    dl,ch
  437c92:	movabs ds:0xaef9cb6b95ea407e,al
  437c9b:	xchg   esp,ebp
  437c9d:	(bad)  
  437c9e:	mov    eax,0xa3f7ff93
  437ca3:	jbe    0x437ca4
  437ca5:	iret   
  437ca6:	gs cs (bad) 
  437ca9:	mov    ebx,0x702959
	...
  437cc6:	add    BYTE PTR [rax],al
  437cc8:	add    BYTE PTR [rbx-0x3eced6a6],bh
  437cce:	ins    DWORD PTR es:[rdi],dx
  437ccf:	jmp    QWORD PTR [r12+r13*2-0x5f4200af]
  437cd7:	nop
  437cd8:	inc    edx
  437cda:	stos   DWORD PTR es:[rdi],eax
  437cdb:	lahf   
  437cdc:	dec    DWORD PTR [rbp+0xff6375]
	...
  437d12:	add    BYTE PTR [rax],al
  437d14:	add    dl,ch
  437d16:	movabs ds:0xc1ffff6b96ea707e,al
  437d1f:	movabs eax,ds:0x7da7f7ff9bbeffff
  437d28:	dec    edi
  437d2a:	fs (bad) 
  437d2c:	(bad)  
  437d2d:	mov    edx,0x70285a
	...
  437d3a:	add    BYTE PTR [rax],al
  437d3c:	add    BYTE PTR [rbx-0x44e5d6a6],bh
  437d42:	pop    rdx
  437d43:	sub    DWORD PTR [rsi-0x20],eax
  437d46:	jns    0x437d8e
  437d48:	out    dx,eax
  437d49:	xchg   esp,eax
  437d4a:	rex.WB and rax,0x36528cfb
  437d50:	mul    eax
  437d52:	ret    
  437d53:	mov    ch,0xff
  437d55:	rol    ebx,cl
  437d57:	mov    edx,0xabb5c9ff
  437d5c:	call   QWORD PTR [rdx+0xfd6a7c]
	...
  437d92:	add    BYTE PTR [rax],al
  437d94:	add    dl,ch
  437d96:	stos   BYTE PTR es:[rdi],al
  437d97:	mov    eax,DWORD PTR [rax-0x16]
  437d9a:	movabs ds:0xc2ffff94b7fabc7e,al
  437da3:	movabs ds:0x83abf7ffa2c2ffff,al
  437dac:	dec    edi
  437dae:	gs cs (bad) 
  437db1:	mov    ebx,0xc1ff295a
  437db6:	(bad)  {z}
  437dbb:	rex.R call rdx
  437dbe:	jne    0x437e04
  437dc0:	(bad)  
  437dc1:	fstp   TBYTE PTR [rdx+rcx*2-0x1b]
  437dc5:	xchg   BYTE PTR [rcx+0x20],al
  437dc8:	inc    DWORD PTR [rsi-0x6431dfbf]
  437dce:	jp     0x437e37
  437dd0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  437dd1:	pushf  
  437dd2:	test   DWORD PTR [rbp-0x1],esi
  437dd5:	mul    esp
  437dd7:	(bad)  
  437dd9:	rol    cl,cl
  437ddb:	mov    eax,0x8997adff
  437de0:	jmp    QWORD PTR [rbx+0x48]
  437de3:	xor    edi,edi
  437de5:	movsxd ecx,DWORD PTR [rax+0x33]
  437de8:	jmp    QWORD PTR [rbx+0x48]
  437deb:	xor    edi,edi
  437ded:	movsxd ecx,DWORD PTR [rax+0x33]
  437df0:	push   QWORD PTR [rdi+0x5c]
  437df3:	rex.RXB xchg r15d,eax
	...
  437e19:	(bad)  
  437e1a:	stos   BYTE PTR es:[rdi],al
  437e1b:	mov    eax,DWORD PTR [rax-0x16]
  437e1e:	movabs eax,ds:0xc2ffff85abf4e57e
  437e27:	movabs ds:0xa2c2ffffa2c2ffff,al
  437e30:	(bad)  
  437e31:	inc    ecx
  437e33:	lahf   
  437e34:	(bad)  
  437e35:	(bad)  
  437e36:	mov    ebp,0xb9ffff9a
  437e3b:	xchg   ebx,eax
  437e3c:	dec    eax
  437e3e:	jge    0x437e96
  437e40:	retf   0x4186
  437e43:	and    ch,ah
  437e45:	xchg   BYTE PTR [rcx+0x20],al
  437e48:	xchg   BYTE PTR gs:[rcx+0x20],al
  437e4c:	sub    DWORD PTR [rsi-0x5efd7f70],esp
  437e52:	mov    bh,BYTE PTR [rdx-0x40]
  437e55:	pushf  
  437e56:	test   DWORD PTR [rdi+rdi*8-0x9],esi
  437e5a:	in     eax,0xdc
  437e5c:	call   rdi
  437e5e:	mov    esp,0xbad5ffae
  437e63:	stos   DWORD PTR es:[rdi],eax
  437e64:	call   rbx
  437e66:	mov    eax,0x5a75ffa9
  437e6b:	rex.RX push QWORD PTR [rcx+r11*2+0x44]
  437e70:	sar    BYTE PTR [rcx+riz*2+0x4d],0x2
	...
  437e9d:	(bad)  
  437e9e:	stos   BYTE PTR es:[rdi],al
  437e9f:	mov    ebx,DWORD PTR [rax]
  437ea1:	(bad)  
  437ea2:	movabs ds:0x87eace6b96ea787e,al
  437eab:	push   rsi
  437eac:	(bad)  
  437ead:	call   0xffffffffdf42c22c
  437eb2:	outs   dx,DWORD PTR ds:[rsi]
  437eb3:	ss dec esi
  437eb6:	fs (bad) 
  437eb8:	(bad)  
  437eb9:	mov    ebx,0xa5ce295a
  437ebe:	rex.WRXB and rax,0x23479377
  437ec4:	sbb    BYTE PTR [rax],al
	...
  437ece:	add    BYTE PTR [rax],al
  437ed0:	add    BYTE PTR [rbp-0x5ffd8071],ah
  437ed6:	mov    bh,BYTE PTR [rcx-0x69]
  437ed9:	fwait
  437eda:	test   BYTE PTR [rbx-0x1d],dh
  437edd:	xchg   esi,eax
  437ede:	jg     0x437f4e
  437ee0:	std    
  437ee1:	xchg   ecx,eax
  437ee2:	jns    0x437f4c
  437ee4:	std    
  437ee5:	mov    esi,DWORD PTR [rdx+riz*2-0x1d]
  437ee9:	xchg   BYTE PTR [rsi+0x5c],ch
  437eec:	xchg   edi,eax
  437eed:	sub    DWORD PTR [rax+0x55],0x2
	...
  438084:	add    bh,bh
  438086:	(bad)  
  438087:	(bad)  
  438088:	(bad)  
  438089:	(bad)  
  43808a:	inc    BYTE PTR [rax]
  43808c:	add    edi,edi
  43808e:	inc    BYTE PTR [rax]
  438090:	add    edi,edi
  438092:	inc    BYTE PTR [rax]
  438094:	add    eax,esi
  438096:	(bad)  
  438097:	add    BYTE PTR [rcx],al
  438099:	loopne 0x4380a9
  43809b:	add    BYTE PTR [rcx],al
  43809d:	loopne 0x4380ad
  43809f:	add    BYTE PTR [rcx],al
  4380a1:	dec    BYTE PTR [rsi]
  4380a3:	add    BYTE PTR [rcx],al
  4380a5:	dec    BYTE PTR [rsi]
  4380a7:	add    BYTE PTR [rcx],al
  4380a9:	loopne 0x4380b9
  4380ab:	add    BYTE PTR [rcx],al
  4380ad:	loopne 0x4380b5
  4380af:	add    BYTE PTR [rcx],al
  4380b1:	loopne 0x4380b5
  4380b3:	add    BYTE PTR [rcx],al
  4380b5:	lock add BYTE PTR [rax],al
  4380b8:	add    edi,edi
  4380ba:	add    BYTE PTR [rax],0x1
  4380bd:	inc    eax
  4380bf:	add    BYTE PTR [rcx],al
  4380c1:	jmp    rax
  4380c3:	add    BYTE PTR [rcx],al
  4380c5:	sti    
  4380c6:	lock (bad) 
  4380c8:	push   rcx
  4380ca:	clc    
  4380cb:	ud0    esp,eax
  4380ce:	cld    
  4380cf:	(bad)  
  4380d0:	inc    eax
  4380d2:	jle    0x4380d4
  4380d4:	(bad)  
  4380d5:	cmp    BYTE PTR [rdi],0x0
  4380d8:	pavgb  mm7,mm7
  4380db:	or     BYTE PTR [rdi],0xe0
  4380de:	inc    eax
  4380e0:	pavgb  mm7,QWORD PTR [rdi-0x3f]
  4380e4:	jmp    rax
  4380e6:	(bad)  
  4380e7:	cmp    edi,0xff011cf0
  4380ed:	lock add BYTE PTR [rax],al
  4380f0:	psubb  mm0,QWORD PTR [rax]
  4380f3:	add    BYTE PTR [rdi],cl
  4380f5:	cld    
  4380f6:	add    al,ah
  4380f8:	(bad)  
  4380f9:	(bad)  
  4380fa:	(bad)  
  4380fb:	(bad)  
  4380fc:	(bad)  
  4380fd:	(bad)  
  4380fe:	(bad)  
  4380ff:	(bad)  
  438100:	(bad)  
  438101:	(bad)  
  438102:	(bad)  
  438103:	(bad)  
  438104:	jmp    FWORD PTR [rax]
  438106:	add    BYTE PTR [rax],al
  438108:	add    BYTE PTR [rax],dl
  43810a:	add    BYTE PTR [rax],al
  43810c:	add    BYTE PTR [rax],ah
  43810e:	add    BYTE PTR [rax],al
  438110:	add    BYTE PTR [rcx],al
  438112:	add    BYTE PTR [rax],ah
  438114:	add    BYTE PTR [rax],al
  438116:	add    BYTE PTR [rax],al
  438118:	add    BYTE PTR [rax+0x4],al
	...
  43814b:	add    BYTE PTR [rax],al
  43814d:	and    al,0x81
  43814f:	and    esi,esp
  438151:	and    al,0x71
  438153:	xor    ebp,esi
  438155:	add    al,0x6a
  438157:	lock movd mm2,DWORD PTR es:[rdx]
  43815c:	lock or eax,0xbf0126f
  438162:	outs   dx,DWORD PTR ds:[rsi]
  438163:	(bad)  
  438164:	lock or eax,0xdf00e71
  43816a:	imul   ecx,DWORD PTR [rdi],0xffffffff
	...
  43818d:	(bad)
  438192:	mov    bl,0x6b
  438194:	push   QWORD PTR [rsi]
  438196:	jnp    0x4381e0
  438198:	(bad)  
  438199:	cmp    BYTE PTR [rcx-0x6be200be],al
  43819f:	cmp    eax,0x248d05ff
  4381a4:	dec    DWORD PTR [rax]
  4381a6:	xchg   edx,eax
  4381a7:	sub    edi,edi
  4381a9:	(bad)  
  4381aa:	lea    ebx,[rdi+rdi*8]
	...
  4381bd:	mov    BYTE PTR [rax+0x6b],bh
  4381c0:	(bad)  
  4381c1:	jnp    0x43822e
  4381c3:	(bad)  
  4381c4:	call   FWORD PTR [rdi+0x6c7787]
  4381ca:	add    BYTE PTR [rax],al
  4381cc:	add    BYTE PTR [rdx-0x43],dh
  4381cf:	jbe    0x4381c6
  4381d1:	xchg   ebx,eax
  4381d2:	iret   
  4381d3:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  4381d4:	(bad)  
  4381d5:	out    dx,eax
  4381d6:	call   0x697281c5
  4381db:	(bad)  
  4381dc:	jmp    FWORD PTR [rsi]
  4381de:	imul   esi,DWORD PTR [rdi],0x6b7d64ff
  4381e4:	jmp    FWORD PTR [rdi]
  4381e6:	xchg   ebx,eax
  4381e7:	rex.WRB inc QWORD PTR [rip+0xff2088]        # 0x142a276
	...
  4381fa:	add    BYTE PTR [rax],al
  4381fc:	add    bh,bh
  4381fe:	(bad)  
  4381ff:	jmp    QWORD PTR [rip+0xfffffffffd7f8b9a]        # 0xfffffffffdc30d9f
  438205:	mov    esi,DWORD PTR [rbx+0x64]
  438208:	inc    DWORD PTR [rax]
  43820a:	add    BYTE PTR [rax],al
  43820c:	add    BYTE PTR [rbp-0x4a],bh
  43820f:	mov    bh,bh
  438211:	mov    fs,ecx
  438213:	movabs ds:0xffffffff6aa34eff,eax
  43821c:	jmp    FWORD PTR [rsi]
  43821e:	imul   esi,DWORD PTR [rdi],0xefe8f3ff
  438224:	call   FWORD PTR [rdx-0x58]
  438227:	outs   dx,DWORD PTR ds:[rsi]
  438228:	dec    DWORD PTR [rdx]
  43822a:	sbb    DWORD PTR [rcx],0xffffffff
	...
  438235:	mov    bh,0xa1
  438237:	nop
  438238:	(bad)  
  438239:	cld    
  43823a:	cli    
  43823b:	stc    
  43823c:	rex.R shr BYTE PTR [rbp+rbx*4-0x786c5bcb],0xff
  438245:	ja     0x4382a6
  438247:	rex.WRX inc QWORD PTR [rax]
  43824a:	add    BYTE PTR [rax],al
  43824c:	add    BYTE PTR [rbx+rdi*4-0x286d0071],al
  438253:	xchg   ebx,eax
  438254:	dec    DWORD PTR [rsi-0x5d]
  438257:	push   0xffffffffffffffff
  438259:	rex.WRX movabs ds:0xffffffffffffff6a,rax
  438263:	(bad)  
  438264:	(bad)  
  438265:	js     0x438210
  438267:	cmp    edi,0xff2e8513
	...
  438275:	mov    bh,0xa1
  438277:	nop
  438278:	inc    esp
  43827a:	mov    dl,0xa5
  43827c:	inc    cl
  43827e:	lods   eax,DWORD PTR ds:[rsi]
  43827f:	lahf   
  438280:	jmp    FWORD PTR [rdx+0x7aff8c98]
  438286:	fs push rbx
  438288:	push   QWORD PTR [rbp+0x59]
  43828b:	xor    r9d,DWORD PTR [rcx-0x72007144]
  438292:	(bad)  
  438293:	(bad)  
  438294:	call   FWORD PTR [rax-0x4a22]
  43829a:	(bad)  
  43829b:	(bad)  
  43829c:	(bad)  
  43829d:	(bad)  
  43829e:	(bad)  
  43829f:	(bad)  
  4382a0:	(bad)  
  4382a1:	(bad)  
  4382a2:	(bad)  
  4382a3:	(bad)  
  4382a4:	dec    DWORD PTR [rsi+0x1fff8acf]
  4382aa:	mov    ?,WORD PTR [rdi+rdi*8]
	...
  4382b5:	mov    al,0x9b
  4382b7:	mov    dl,BYTE PTR [rbp-0x68]
  4382ba:	xchg   DWORD PTR [rbx-0x1],edi
  4382bd:	xchg   ecx,eax
  4382be:	jp     0x438328
  4382c0:	inc    DWORD PTR [rbx-0xa194]
  4382c6:	(bad)  
  4382c7:	std    
  4382c8:	push   QWORD PTR [rbp+0x59]
  4382cb:	rex.R inc DWORD PTR [rcx-0x5000895b]
  4382d2:	loope  0x43827a
  4382d4:	jmp    FWORD PTR [rcx-0x50005b22]
  4382da:	loopne 0x438285
  4382dc:	jmp    FWORD PTR [rdi+rbx*8-0x1f53005c]
  4382e3:	movabs ds:0x54b356ff9be4a4ff,eax
  4382ec:	inc    DWORD PTR [rax]
	...
  438302:	add    BYTE PTR [rax],al
  438304:	add    BYTE PTR [rdi-0x6f5f],dh
  43830a:	(bad)  
  43830b:	std    
  43830c:	push   QWORD PTR [rbp+0x59]
  43830f:	rex.R (bad) 
  438311:	cmp    ah,BYTE PTR [rbp+0x5a]
  438314:	push   QWORD PTR [rdx]
  438316:	outs   dx,DWORD PTR ds:[rsi]
  438317:	data16 (bad) 
  438319:	cmp    DWORD PTR [rdi+0x66],esi
  43831c:	jmp    FWORD PTR [rdi]
  43831e:	jbe    0x438388
  438320:	jmp    FWORD PTR [rax]
  438322:	jbe    0x43838d
  438324:	jmp    FWORD PTR [rip+0x19ff6a6b]        # 0x1a42ed95
  43832a:	jp     0x438352
  43832c:	mov    esp,0x0
	...
  438349:	mov    bh,0xa1
  43834b:	nop
  43834c:	(bad)  
  43834d:	(bad)  
  43834e:	(bad)  
  43834f:	std    
  438350:	push   QWORD PTR [rbp+0x59]
  438353:	rex.R push QWORD PTR [rbp+0x59]
  438357:	xor    r8d,DWORD PTR [rax]
	...
  438372:	add    BYTE PTR [rax],al
  438374:	add    BYTE PTR [rsp+rax*2+0x468f3c21],cl
  43837b:	and    edi,edi
  43837d:	mov    ch,0x61
  43837f:	ss (bad) 
  438381:	fadd   QWORD PTR [rdi+0x185b]
  438387:	add    BYTE PTR [rax],al
  438389:	add    BYTE PTR [rax],al
  43838b:	add    BYTE PTR [rax],al
  43838d:	mov    bh,0xa1
  43838f:	nop
  438390:	(bad)  
  438391:	(bad)  
  438392:	(bad)  
  438393:	std    
  438394:	dec    DWORD PTR [rax-0x7b00a291]
  43839a:	imul   edx,DWORD PTR [rdi-0x1],0xff70819a
  4383a1:	movabs ds:0x6c7a8b,eax
  4383aa:	add    BYTE PTR [rax],al
  4383ac:	add    BYTE PTR [rax],al
  4383ae:	add    BYTE PTR [rax],al
  4383b0:	add    BYTE PTR [rsp+rax*2+0x448c3c21],cl
  4383b7:	and    edi,edi
  4383b9:	movabs ds:0xdcff507fd7ff2d54,al
  4383c2:	xchg   DWORD PTR [rbx-0x1],ebx
  4383c5:	out    0x9a,eax
  4383c7:	jno    0x43840e
	...
  4383d1:	xchg   esi,eax
  4383d2:	jle    0x438440
  4383d4:	inc    edx
  4383d6:	scas   eax,DWORD PTR es:[rdi]
  4383d7:	movabs al,ds:0x838f9eff96a5b7ff
  4383e0:	std    
  4383e1:	movabs al,ds:0xff7d8d
  4383ea:	add    BYTE PTR [rax],al
  4383ec:	add    BYTE PTR [rax],al
  4383ee:	add    BYTE PTR [rax],al
  4383f0:	add    BYTE PTR [rsp+rax*2+0x4792ff21],cl
  4383f7:	and    edi,edi
  4383f9:	mov    edx,0xfdff3b66
  4383fe:	xchg   edi,eax
  4383ff:	(bad)  
  438400:	call   rsp
  438402:	jl     0x438451
  438404:	jmp    rdi
  438406:	(bad)  
  438407:	jno    0x438408
	...
  438411:	cwde   
  438412:	jle    0x438481
  438414:	inc    ecx
  438416:	lods   eax,DWORD PTR ds:[rsi]
  438417:	lahf   
  438418:	inc    eax
  43841a:	lods   al,BYTE PTR ds:[rsi]
  43841b:	popf   
  43841c:	xor    eax,0x25fefefe
  438421:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  438422:	xchg   ebx,eax
  438423:	test   bh,bh
	...
  438435:	mov    WORD PTR [rcx+riz*1+0x1e],es
  438439:	mov    ecx,0xd0ff2f5d
  43843e:	jbe    0x438487
  438440:	call   FWORD PTR [rsi+0x20274f]
	...
  43844e:	add    BYTE PTR [rax],al
  438450:	add    BYTE PTR [rbp-0x36006758],bh
  438456:	mov    dh,0xa9
  438458:	(bad)  
  438459:	cld    
  43845a:	cli    
  43845b:	stc    
  43845c:	add    BYTE PTR [rax],r8b
	...
  438473:	add    BYTE PTR [rax],al
  438475:	mov    WORD PTR [rcx+riz*1+0x1e],es
  438479:	mov    ecx,0xd0ce2f5d
  43847e:	jbe    0x4384c7
  438480:	jmp    QWORD PTR [rbp-0x29bcd2ab]
  438486:	(bad)
  43848a:	add    BYTE PTR [rax],al
  43848c:	add    BYTE PTR [rax],al
  43848e:	add    BYTE PTR [rax],al
  438490:	add    BYTE PTR [rdi-0x48aa6f5f],dh
  438496:	movabs eax,ds:0xff90a1b7ff90
	...
  4384b7:	add    BYTE PTR [rax],al
  4384b9:	mov    ebx,0xec613f69
  4384be:	movabs ds:0x58c7820643bfff7a,al
  4384c7:	and    BYTE PTR [rbx-0x68],cl
  4384ca:	rex.WRB sub BYTE PTR [r15],r11b
  4384cd:	add    BYTE PTR [rax],al
  4384cf:	add    BYTE PTR [rax],al
  4384d1:	cwde   
  4384d2:	rex.WRB sub BYTE PTR [r10],r12b
  4384d5:	iret   
  4384d6:	mov    ebp,DWORD PTR [rdx-0x1]
	...
  4384fd:	loope  0x438487
  4384ff:	pop    rsp
  438500:	ins    DWORD PTR es:[rdi],dx
  438501:	out    0x8b,eax
  438503:	pop    rdi
  438504:	(bad)  
  438505:	fimul  DWORD PTR [rax-0x7725009f]
  43850b:	(bad)  
  43850c:	dec    ebp
  43850e:	xchg   BYTE PTR [rdi+rdi*8-0x2b],ah
  438512:	movabs ds:0x25385ba1bf8a,al
	...
  43852b:	add    BYTE PTR [rax],al
  43852d:	inc    DWORD PTR [rax]
  43852f:	add    BYTE PTR [rax],al
  438531:	inc    DWORD PTR [rax]
  438533:	add    BYTE PTR [rax],al
  438535:	icebp  
  438536:	add    BYTE PTR [rax],al
  438538:	add    cl,dh
  43853a:	add    BYTE PTR [rax],al
  43853c:	add    cl,al
  43853e:	add    BYTE PTR [rax],al
  438540:	add    al,al
  438542:	add    BYTE PTR [rax],al
  438544:	add    al,al
  438546:	add    BYTE PTR [rax],al
  438548:	add    ah,bh
  43854a:	add    BYTE PTR [rax],al
  43854c:	add    dh,bh
  43854e:	(bad)  
  43854f:	add    BYTE PTR [rax],al
  438551:	ret    
  438552:	add    eax,DWORD PTR [rax]
  438554:	add    BYTE PTR [rcx-0x7effff7d],al
  43855a:	add    DWORD PTR [rax],0x0
  43855d:	ret    
  43855e:	pop    QWORD PTR [rax]
  438560:	add    cl,al
  438562:	pop    QWORD PTR [rax]
  438564:	add    al,ah
  438566:	lahf   
  438567:	add    BYTE PTR [rax],al
  438569:	lock (bad) 
  43856b:	add    BYTE PTR [rax],al
  43856d:	or     eax,DWORD PTR [rax+0x0]
  438570:	add    DWORD PTR [rax],eax
  438572:	add    BYTE PTR [rax],al
  438574:	(bad)  
  438575:	(bad)  
  438576:	(bad)  
  438577:	inc    DWORD PTR [rcx]
  438579:	add    BYTE PTR [rax],al
  43857b:	add    BYTE PTR [rax],al
  43857d:	add    BYTE PTR [rax],al
  43857f:	add    BYTE PTR [rdx+rax*1],cl
  438582:	add    BYTE PTR [rax],al
  438584:	add    BYTE PTR [rcx+0x53],dl
  438587:	jns    0x4385fc
  438589:	je     0x4385f0
  43858b:	ins    DWORD PTR es:[rdi],dx
  43858c:	cs rex.R jb 0x4385f1
  438590:	ja     0x4385fb
  438592:	outs   dx,BYTE PTR ds:[rsi]
  438593:	addr32 sub al,0x20
  438596:	push   rsi
  438597:	gs jb  0x43860d
  43859a:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  4385a1:	xor    BYTE PTR cs:[rsi],ch
  4385a4:	xor    BYTE PTR [rax+riz*1],ch
  4385a7:	rex.XB jne 0x438616
  4385aa:	je     0x438621
  4385ac:	jb     0x438613
  4385ae:	cmp    eax,0x7475656e
  4385b3:	jb     0x438616
  4385b5:	ins    BYTE PTR es:[rdi],dx
  4385b6:	sub    al,0x20
  4385b8:	push   rax
  4385b9:	jne    0x43861d
  4385bb:	ins    BYTE PTR es:[rdi],dx
  4385bc:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  4385c3:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  4385c7:	(bad)  
  4385c8:	xor    BYTE PTR [rbx],dh
  4385ca:	xor    ax,0x3766
  4385ce:	xor    WORD PTR [rcx],si
  4385d1:	fs xor eax,0x61336130
  4385d7:	add    eax,0x1
  4385dc:	adc    edx,DWORD PTR [rbx+0x79]
  4385df:	jae    0x438655
  4385e1:	gs ins DWORD PTR es:[rdi],dx
  4385e3:	cs rex.R jb 0x438648
  4385e7:	ja     0x438652
  4385e9:	outs   dx,BYTE PTR ds:[rsi]
  4385ea:	movsxd rbp,DWORD PTR cs:[r15d+0x6e]
  4385f0:	add    al,BYTE PTR [rax]
  4385f2:	add    BYTE PTR [rax],al
  4385f4:	or     BYTE PTR [rcx+0x63],cl
  4385f7:	outs   dx,DWORD PTR ds:[rsi]
  4385f8:	outs   dx,BYTE PTR ds:[rsi]
  4385f9:	rex.R (bad) 
  4385fb:	je     0x43865e
  4385fd:	or     BYTE PTR [rcx+0x63],cl
  438600:	outs   dx,DWORD PTR ds:[rsi]
  438601:	outs   dx,BYTE PTR ds:[rsi]
  438602:	push   rbx
  438603:	imul   edi,DWORD PTR [rdx+0x65],0x13020407
  43860a:	push   rbx
  43860b:	jns    0x438680
  43860d:	je     0x438674
  43860f:	ins    DWORD PTR es:[rdi],dx
  438610:	cs rex.R jb 0x438675
  438614:	ja     0x43867f
  438616:	outs   dx,BYTE PTR ds:[rsi]
  438617:	addr32 cs push rbx
  43861a:	imul   edi,DWORD PTR [rdx+0x65],0x2
  438621:	add    al,BYTE PTR [rax]
  438623:	add    BYTE PTR [rax],al
  438625:	or     DWORD PTR [rbx],eax
  438627:	add    BYTE PTR [rax],al
  438629:	add    BYTE PTR [rip+0xfffffffffffffffc],al        # 0x43862b
  43862f:	adc    edx,DWORD PTR [rbx+0x79]
  438632:	jae    0x4386a8
  438634:	gs ins DWORD PTR es:[rdi],dx
  438636:	cs rex.R jb 0x43869b
  43863a:	ja     0x4386a5
  43863c:	outs   dx,BYTE PTR ds:[rsi]
  43863d:	addr32 cs push rbx
  438640:	imul   edi,DWORD PTR [rdx+0x65],0x2
  438647:	add    eax,0x74646977
  43864c:	push   0x69656806
  438651:	addr32 push 0x8000074
  438657:	or     BYTE PTR [rdx],al
	...
  438661:	add    BYTE PTR [rax],al
  438663:	add    BYTE PTR [rdi],cl
  438665:	add    eax,DWORD PTR [rax]
  438667:	add    BYTE PTR [rax],al
  438669:	xchg   esi,eax
  43866a:	(bad)  
  43866b:	add    BYTE PTR [rax],al
  43866d:	add    al,BYTE PTR [rax]
  43866f:	add    BYTE PTR [rcx],al
  438671:	add    BYTE PTR [rsi],al
  438673:	add    BYTE PTR [rax],ah
  438675:	and    BYTE PTR [rax],dl
  438677:	add    BYTE PTR [rcx],al
  438679:	add    BYTE PTR [rax+rax*1],al
  43867c:	call   0x66438683
  438681:	add    BYTE PTR [rax],al
  438683:	add    BYTE PTR [rax],dl
  438685:	adc    BYTE PTR [rax],dl
  438687:	add    BYTE PTR [rcx],al
  438689:	add    BYTE PTR [rax+rax*1],al
  43868c:	sub    BYTE PTR [rcx],al
  43868e:	add    BYTE PTR [rax],al
  438690:	rex.WRX add r8,QWORD PTR [rax]
  438693:	add    BYTE PTR [rax],ah
  438695:	and    BYTE PTR [rax],al
  438697:	add    BYTE PTR [rcx],al
  438699:	add    BYTE PTR [rax],cl
  43869b:	add    BYTE PTR [rax+0x76000008],ch
  4386a1:	add    al,0x0
  4386a3:	add    BYTE PTR [rax],dl
  4386a5:	adc    BYTE PTR [rax],al
  4386a7:	add    BYTE PTR [rcx],al
  4386a9:	add    BYTE PTR [rax],cl
  4386ab:	add    BYTE PTR [rax+0x5],ch
  4386ae:	add    BYTE PTR [rax],al
  4386b0:	(bad)  
  4386b1:	or     eax,0x20200000
  4386b6:	add    BYTE PTR [rax],al
  4386b8:	add    DWORD PTR [rax],eax
  4386ba:	and    BYTE PTR [rax],al
  4386bc:	test   al,0x10
  4386be:	add    BYTE PTR [rax],al
  4386c0:	xchg   BYTE PTR [rdx],dl
  4386c2:	add    BYTE PTR [rax],al
  4386c4:	adc    BYTE PTR [rax],dl
  4386c6:	add    BYTE PTR [rax],al
  4386c8:	add    DWORD PTR [rax],eax
  4386ca:	and    BYTE PTR [rax],al
  4386cc:	push   0x2e000004
  4386d1:	and    eax,DWORD PTR [rax]
  4386d3:	add    BYTE PTR [rax],ch
  4386d5:	add    BYTE PTR [rax],al
  4386d7:	add    BYTE PTR [rax],ah
  4386d9:	add    BYTE PTR [rax],al
  4386db:	add    BYTE PTR [rax+0x0],al
  4386de:	add    BYTE PTR [rax],al
  4386e0:	add    DWORD PTR [rax],eax
  4386e2:	add    al,0x0
  4386e4:	add    BYTE PTR [rax],al
  4386e6:	add    BYTE PTR [rax],al
  4386e8:	add    BYTE PTR [rdx],al
	...
  438702:	add    BYTE PTR [rax],0x0
  438705:	add    BYTE PTR [rax],0x0
  438708:	add    BYTE PTR [rax+0x800080],al
  43870e:	add    BYTE PTR [rax],al
  438710:	add    BYTE PTR [rax],0x80
  438713:	add    BYTE PTR [rax-0x7fffff80],al
  438719:	add    BYTE PTR [rax-0x3f3f4000],0x0
  438720:	add    BYTE PTR [rax],al
  438722:	inc    DWORD PTR [rax]
  438724:	add    bh,bh
  438726:	add    BYTE PTR [rax],al
  438728:	add    bh,bh
  43872a:	inc    DWORD PTR [rax]
  43872c:	inc    DWORD PTR [rax]
  43872e:	add    BYTE PTR [rax],al
  438730:	inc    DWORD PTR [rax]
  438732:	inc    DWORD PTR [rax]
  438734:	(bad)  
  438735:	inc    DWORD PTR [rax]
  438737:	add    bh,bh
  438739:	(bad)  
  43873a:	inc    DWORD PTR [rax]
	...
  438760:	add    BYTE PTR [rsi+0x70],dh
  438763:	add    BYTE PTR [rax],al
  438765:	add    DWORD PTR [rip+0x10],edx        # 0x43877b
  43876b:	add    BYTE PTR [rax],al
  43876d:	add    BYTE PTR [rax],al
  43876f:	add    BYTE PTR [rdi],al
  438771:	mov    BYTE PTR [rsi+0x0],dh
  438774:	add    BYTE PTR [rdi+0x1113],dl
  43877a:	add    BYTE PTR [rax],al
  43877c:	add    BYTE PTR [rax],al
  43877e:	add    BYTE PTR [rax],al
  438780:	(bad)  
  438781:	clc    
  438782:	test   DWORD PTR [rax],eax
  438784:	add    BYTE PTR [rcx],bl
  438786:	cdq    
  438787:	push   rcx
	...
  438790:	(bad)  
  438791:	clc    
  438792:	xchg   BYTE PTR [rax],al
  438794:	add    BYTE PTR [rdi-0x6d],dh
  438797:	xchg   edx,eax
	...
  4387a0:	or     al,bh
  4387a2:	jbe    0x4387a4
  4387a4:	add    BYTE PTR [rdi+0x9595],dl
  4387aa:	add    BYTE PTR [rax],al
  4387ac:	add    BYTE PTR [rax],al
  4387ae:	add    BYTE PTR [rax],al
  4387b0:	(bad)  
  4387b1:	clc    
  4387b2:	test   DWORD PTR [rax],eax
  4387b4:	add    BYTE PTR [rax+0x7193],bl
  4387ba:	add    BYTE PTR [rax],al
  4387bc:	add    BYTE PTR [rax],al
  4387be:	add    BYTE PTR [rax],al
  4387c0:	or     al,bh
  4387c2:	xchg   BYTE PTR [rax],al
  4387c4:	add    BYTE PTR [rcx+0x79],bh
  4387c7:	xchg   ecx,eax
	...
  4387d0:	or     al,bh
  4387d2:	jbe    0x4387d4
  4387d4:	add    BYTE PTR [rax+0x7197],bl
  4387da:	add    BYTE PTR [rax],al
  4387dc:	add    BYTE PTR [rax],al
  4387de:	add    BYTE PTR [rax],al
  4387e0:	or     al,bh
  4387e2:	xchg   DWORD PTR [rax],eax
  4387e4:	add    BYTE PTR [rax-0x69],bh
  4387e7:	xchg   edi,eax
	...
  4387f0:	or     al,bh
  4387f2:	jbe    0x4387f4
  4387f4:	add    BYTE PTR [rax+0x7179],bl
  4387fa:	add    BYTE PTR [rax],al
  4387fc:	add    BYTE PTR [rax],al
  4387fe:	add    BYTE PTR [rax],al
  438800:	or     al,bh
  438802:	xchg   DWORD PTR [rax],eax
  438804:	add    BYTE PTR [rax+0x9798],cl
  43880a:	add    BYTE PTR [rax],al
  43880c:	add    BYTE PTR [rax],al
  43880e:	add    BYTE PTR [rax],al
  438810:	js     0x43880a
  438812:	xchg   BYTE PTR [rax+0x0],dh
  438815:	cwde   
  438816:	xchg   DWORD PTR [rdi+0x0],edx
  43881c:	add    BYTE PTR [rax],al
  43881e:	add    BYTE PTR [rdi],al
  438820:	mov    al,bh
  438822:	mov    BYTE PTR [rsi+0x0],dh
  438825:	mov    BYTE PTR [rax+0x71],bl
  43882b:	add    BYTE PTR [rax],al
  43882d:	add    BYTE PTR [rax],al
  43882f:	mov    BYTE PTR [rdi-0x7f780001],cl
  438835:	cwde   
  438836:	mov    BYTE PTR [rdi+0x0],dl
  43883c:	add    BYTE PTR [rax],al
  43883e:	add    BYTE PTR [rax-0x8808808],cl
  438844:	mov    BYTE PTR [rdi+0x79],al
  43884b:	add    BYTE PTR [rax],al
  43884d:	add    BYTE PTR [rax],al
  43884f:	pop    QWORD PTR [rsi+0x70f80800]
  438855:	mov    BYTE PTR [rax+0x97],cl
  43885b:	add    BYTE PTR [rax],al
  43885d:	add    BYTE PTR [rax],al
  43885f:	pop    QWORD PTR [rdi+0x60f70800]
  438865:	js     0x4387f6
  438867:	xchg   DWORD PTR [rax],eax
  438869:	add    BYTE PTR [rax],al
  43886b:	add    BYTE PTR [rax],al
  43886d:	add    BYTE PTR [rax],al
  43886f:	(bad)  
  438870:	div    DWORD PTR [rax+0x7f]
  438873:	clc    
  438874:	add    BYTE PTR [rdi+0x3787],0x0
  43887b:	add    BYTE PTR [rax],al
  43887d:	add    BYTE PTR [rax],al
  43887f:	or     bh,bh
  438881:	(bad)  
  438882:	inc    DWORD PTR [rdi+0x50870700]
	...
  438890:	xchg   DWORD PTR [rax-0x79],esi
  438893:	jo     0x438895
  438895:	(bad)  
  438896:	mul    DWORD PTR [rax+0x0]
	...
  4388a5:	(bad)  
  4388a6:	not    DWORD PTR [rax+0x0]
	...
  4388b1:	add    BYTE PTR [rax],al
  4388b3:	ja     0x4388b5
  4388b5:	(bad)  
  4388b6:	mov    BYTE PTR [rax+0x0],ah
  4388b9:	je     0x4388bb
  4388bb:	add    BYTE PTR [rax],al
  4388bd:	add    BYTE PTR [rax],al
  4388bf:	add    BYTE PTR [rax],al
  4388c1:	add    BYTE PTR [rax],cl
  4388c3:	mov    BYTE PTR [rdi-0x78],dh
  4388c6:	mov    BYTE PTR [rbp+0x61],dh
  4388c9:	movsxd eax,DWORD PTR [rax]
  4388cb:	add    BYTE PTR [rax],al
  4388cd:	add    BYTE PTR [rax],al
  4388cf:	add    BYTE PTR [rax],al
  4388d1:	add    BYTE PTR [rax],cl
  4388d3:	clc    
  4388d4:	mov    BYTE PTR [rax+0x77787788],cl
	...
  4388e2:	(bad)  
  4388e3:	dec    DWORD PTR [rax-0x78770771]
  4388e9:	(bad)  
	...
  4388f2:	or     bh,bh
  4388f4:	mov    BYTE PTR [rdi+0x7788ff],cl
	...
  438902:	add    BYTE PTR [rax-0x78887800],cl
  438908:	jo     0x43890a
	...
  43893a:	add    BYTE PTR [rax],al
  43893c:	(bad)  
  43893d:	(bad)  
  43893e:	(bad)  
  43893f:	(bad)  
  438940:	(bad)  
  438941:	(bad)  
  438942:	(bad)  
  438943:	(bad)  
  438944:	inc    edi
  438946:	loope  0x438947
  438948:	inc    DWORD PTR [rbx-0x7c000040]
  43894e:	sar    bh,0xff
  438951:	add    eax,0xffffffff
  438954:	inc    DWORD PTR [rbx-0x7c000040]
  43895a:	sar    bh,0xff
  43895d:	add    eax,0xffffffff
  438960:	inc    DWORD PTR [rbx-0x7c000040]
  438966:	sar    bh,0xff
  438969:	add    eax,0xffffffff
  43896c:	inc    DWORD PTR [rbx+0x1ffffc0]
  438972:	sar    bh,0xfe
  438975:	add    al,al
  438977:	(bad)  
  438978:	cld    
  438979:	add    BYTE PTR [rax-0x1],al
  43897c:	cld    
  43897d:	add    BYTE PTR [rax-0x1],al
  438980:	cld    
  438981:	cmp    BYTE PTR [rax-0x1],al
  438984:	cld    
  438985:	cmp    BYTE PTR [rax-0x1],al
  438988:	cld    
  438989:	adc    BYTE PTR [rax-0x1],al
  43898c:	(bad)  
  43898d:	adc    cl,ah
  43898f:	(bad)  
  438990:	call   QWORD PTR [rcx]
  438992:	loope  0x438993
  438994:	(bad)  
  438995:	jmp    rcx
  438997:	(bad)  
  438998:	(bad)  
  438999:	cld    
  43899a:	loope  0x43896b
  43899c:	(bad)  
  43899d:	clc    
  43899e:	add    BYTE PTR [rdi],cl
  4389a0:	(bad)  
  4389a1:	clc    
  4389a2:	add    BYTE PTR [rdi],cl
  4389a4:	(bad)  
  4389a5:	clc    
  4389a6:	add    BYTE PTR [rdi],bl
  4389a8:	(bad)  
  4389a9:	clc    
  4389aa:	add    BYTE PTR [rdi],bh
  4389ac:	(bad)  
  4389ad:	cld    
  4389ae:	sar    BYTE PTR [rdi-0x1],0xff
  4389b2:	(bad)  
  4389b3:	(bad)  
  4389b4:	(bad)  
  4389b5:	(bad)  
  4389b6:	(bad)  
  4389b7:	(bad)  
  4389b8:	(bad)  
  4389b9:	(bad)  
  4389ba:	(bad)  
  4389bb:	jmp    FWORD PTR [rax]
  4389bd:	add    BYTE PTR [rax],al
  4389bf:	add    BYTE PTR [rax],dl
  4389c1:	add    BYTE PTR [rax],al
  4389c3:	add    BYTE PTR [rax],ah
  4389c5:	add    BYTE PTR [rax],al
  4389c7:	add    BYTE PTR [rcx],al
  4389c9:	add    BYTE PTR [rax+rax*1],al
  4389cc:	add    BYTE PTR [rax],al
  4389ce:	add    BYTE PTR [rax],al
  4389d0:	add    BYTE PTR [rax],0x0
	...
  4389e7:	add    BYTE PTR [rax],al
  4389e9:	add    BYTE PTR [rax+0x800000],al
  4389ef:	add    BYTE PTR [rax],al
  4389f1:	add    BYTE PTR [rax+0x8000],0x0
  4389f8:	add    BYTE PTR [rax],0x80
  4389fb:	add    BYTE PTR [rax-0x7fffff80],al
  438a01:	add    BYTE PTR [rax-0x3f3f4000],0x0
  438a08:	add    BYTE PTR [rax],al
  438a0a:	inc    DWORD PTR [rax]
  438a0c:	add    bh,bh
  438a0e:	add    BYTE PTR [rax],al
  438a10:	add    bh,bh
  438a12:	inc    DWORD PTR [rax]
  438a14:	inc    DWORD PTR [rax]
  438a16:	add    BYTE PTR [rax],al
  438a18:	inc    DWORD PTR [rax]
  438a1a:	inc    DWORD PTR [rax]
  438a1c:	(bad)  
  438a1d:	inc    DWORD PTR [rax]
  438a1f:	add    bh,bh
  438a21:	(bad)  
  438a22:	inc    DWORD PTR [rax]
	...
  438a2c:	add    BYTE PTR [rax],al
  438a2e:	jbe    0x438aa0
  438a30:	add    BYTE PTR [rcx],dl
  438a32:	add    BYTE PTR [rax],al
  438a34:	add    BYTE PTR [rax],al
  438a36:	js     0x4389f8
  438a38:	or     DWORD PTR [rcx+0x50],edx
  438a3b:	add    BYTE PTR [rax],al
  438a3d:	add    al,cl
  438a3f:	(bad)  
  438a40:	(bad)  
  438a41:	(bad)  
  438a42:	adc    BYTE PTR [rax],al
  438a44:	add    BYTE PTR [rax],al
  438a46:	mov    al,al
  438a48:	or     DWORD PTR [rcx+0x10],edi
  438a4b:	add    BYTE PTR [rax],al
  438a4d:	add    BYTE PTR [rax+0x70],ch
  438a50:	or     BYTE PTR [rdi+0x10],dl
  438a56:	mov    al,ah
  438a58:	or     BYTE PTR [rdi+0x8000090],dl
  438a5e:	mov    BYTE PTR [rdi+0x909708],al
  438a64:	add    BYTE PTR [rax-0x77870772],cl
  438a6a:	push   rax
  438a6b:	add    BYTE PTR [rax],al
  438a6d:	mov    BYTE PTR [rax+0x77c078],al
  438a73:	add    BYTE PTR [rax],al
  438a75:	or     al,ah
  438a77:	mov    WORD PTR [rax],es
  438a79:	test   DWORD PTR [rax],eax
  438a7b:	add    BYTE PTR [rax],al
  438a7d:	add    BYTE PTR [rax],al
  438a7f:	or     BYTE PTR [rax-0x7a],dh
  438a82:	add    BYTE PTR [rax+0x0],dh
  438a85:	add    BYTE PTR [rax],al
  438a87:	or     BYTE PTR [rdi+0x707778],al
  438a8d:	add    BYTE PTR [rax],al
  438a8f:	or     bh,dh
  438a91:	clc    
  438a92:	ja     0x438a94
  438a94:	add    BYTE PTR [rax],al
  438a96:	add    BYTE PTR [rax],cl
  438a98:	add    BYTE PTR [rdi+0x70],0x0
  438a9f:	add    BYTE PTR [rax],al
  438aa1:	add    BYTE PTR [rax],al
  438aa3:	add    bh,bh
  438aa5:	inc    DWORD PTR [rax]
  438aa7:	add    cl,dh
  438aa9:	iret   
  438aaa:	add    BYTE PTR [rax],al
  438aac:	icebp  
  438aad:	xchg   DWORD PTR [rax],eax
  438aaf:	add    cl,dh
  438ab1:	xchg   DWORD PTR [rax],eax
  438ab3:	add    cl,dh
  438ab5:	xchg   DWORD PTR [rax],eax
  438ab7:	add    cl,dh
  438ab9:	xchg   DWORD PTR [rax],eax
  438abb:	add    cl,dh
  438abd:	xchg   DWORD PTR [rax],eax
  438abf:	add    al,ah
  438ac1:	xchg   DWORD PTR [rax],eax
  438ac3:	add    al,al
  438ac5:	(bad)  
  438ac6:	add    BYTE PTR [rax],al
  438ac8:	(bad)  
  438ac9:	rex.WRXB add BYTE PTR [r8],r8b
  438acc:	in     al,0xcf
  438ace:	add    BYTE PTR [rax],al
  438ad0:	dec    BYTE PTR [rbp+0x0]
  438ad3:	add    dh,bh
  438ad5:	add    DWORD PTR [rax],eax
  438ad7:	add    dh,bh
  438ad9:	add    eax,DWORD PTR [rax]
  438adb:	add    dh,bh
  438add:	rex.RXB add BYTE PTR [r8],r8b
  438ae0:	(bad)  
  438ae1:	inc    DWORD PTR [rax]
  438ae3:	add    BYTE PTR [rax],ch
  438ae5:	add    BYTE PTR [rax],al
  438ae7:	add    BYTE PTR [rax],ah
  438ae9:	add    BYTE PTR [rax],al
  438aeb:	add    BYTE PTR [rax+0x0],al
  438aee:	add    BYTE PTR [rax],al
  438af0:	add    DWORD PTR [rax],eax
  438af2:	or     BYTE PTR [rax],al
  438af4:	add    BYTE PTR [rax],al
  438af6:	add    BYTE PTR [rax],al
  438af8:	add    BYTE PTR [rax+rax*1],al
	...
  438b03:	add    BYTE PTR [rax],al
  438b05:	add    DWORD PTR [rax],eax
  438b07:	add    BYTE PTR [rax],al
  438b09:	add    DWORD PTR [rax],eax
  438b0b:	add    BYTE PTR [rax],al
  438b0d:	add    BYTE PTR [rax],al
  438b0f:	add    BYTE PTR [rdi+rdi*1+0x37],cl
  438b13:	add    BYTE PTR [rbp+0x41],cl
  438b16:	cmp    DWORD PTR [rax],eax
  438b18:	pop    rax
  438b19:	rex.WB (bad) 
  438b1b:	add    BYTE PTR [rbx+0x48],ah
  438b1e:	xor    eax,DWORD PTR [rax]
  438b20:	fs rex.WB xor al,0x0
  438b24:	rex.WR cmp BYTE PTR [eax],r8b
  438b28:	push   0x6a00384c
  438b2d:	push   rax
  438b2e:	cmp    al,0x0
  438b30:	sbb    al,0x10
  438b32:	pop    rdx
  438b33:	add    BYTE PTR [rsi],bl
  438b35:	adc    ebx,DWORD PTR [rax+rax*1+0x22]
  438b39:	(bad)  
  438b3a:	(bad)  
  438b3b:	add    BYTE PTR [rsi],ah
  438b3d:	sbb    esp,DWORD PTR [rax+rax*1+0x27]
  438b41:	sbb    al,0x65
  438b43:	add    BYTE PTR [rcx],ch
  438b45:	(bad)  
  438b46:	push   0x6a212b00
  438b4b:	add    BYTE PTR [rbx+riz*1],ch
  438b4e:	imul   eax,DWORD PTR [rax],0x2f
  438b51:	and    eax,0x2932006d
  438b56:	jno    0x438b58
  438b58:	cmp    BYTE PTR [rcx],dh
  438b5a:	js     0x438b5c
  438b5c:	(bad)  
  438b5d:	cmp    BYTE PTR [rdi+0x0],bh
  438b60:	push   rsp
  438b61:	rex.RXB
  438b62:	add    BYTE PTR [rbx+0x4d],bl
  438b66:	add    BYTE PTR [rdi+rcx*2+0x48],r11b
  438b6b:	add    BYTE PTR [rsi+0x54],ch
  438b6e:	add    BYTE PTR [rcx+0x53],spl
  438b72:	rex.WXB add BYTE PTR [r10+0x58],sil
  438b76:	add    BYTE PTR [rdx+rbx*2+0x46],r14b
  438b7b:	add    BYTE PTR [rsi+0x5c],dh
  438b7e:	rex.WB add BYTE PTR [r15+0x5c],spl
  438b82:	push   rbp
  438b83:	add    BYTE PTR [rax+0x60],bh
  438b86:	rex.WR add BYTE PTR [rdi+0x64],r15b
  438b8a:	push   rdx
  438b8b:	add    BYTE PTR [rbp+0x69],bh
  438b8e:	pop    rdi
  438b8f:	add    BYTE PTR [rbp+0x6a],dh
  438b92:	data16 add BYTE PTR [rbx+0x6a],bh
  438b96:	(bad)  
  438b97:	add    BYTE PTR [rbx-0x7bffa695],al
  438b9d:	jno    0x438c04
  438b9f:	add    BYTE PTR [rcx-0x78ff9e8e],cl
  438ba5:	je     0x438c10
  438ba7:	add    BYTE PTR [rbp-0x6fff9788],cl
  438bad:	jns    0x438c16
  438baf:	add    BYTE PTR [rbx-0x68ff9484],dl
  438bb5:	jg     0x438c25
  438bb7:	add    BYTE PTR [rbx-0x73ff8d85],cl
  438bbd:	jnp    0x438c36
  438bbf:	add    BYTE PTR [rax-0x63ff8e83],dl
  438bc5:	sub    DWORD PTR [rdi+0x0],0x7b818c
  438bcc:	xchg   edx,eax
  438bcd:	test   BYTE PTR [rsi+0x0],bh
  438bd0:	lahf   
  438bd1:	mov    BYTE PTR [rdx+0x0],bh
  438bd4:	movabs eax,ds:0xa0007b8ba4007587
  438bdd:	mov    edi,DWORD PTR [rax+rax*1-0x5c]
  438be1:	mov    edi,DWORD PTR [rax+rax*1-0x59]
  438be5:	lea    edi,[rax+rax*1+0x16]
  438be9:	sbb    ebp,DWORD PTR [rdx-0x55e3e900]
  438bef:	add    BYTE PTR [rax],bl
  438bf1:	sbb    eax,0x1f1900ab
  438bf6:	lods   al,BYTE PTR ds:[rsi]
  438bf7:	add    BYTE PTR [rdx],bl
  438bf9:	and    BYTE PTR [rbp-0x4fdae000],ch
  438bff:	add    BYTE PTR [rsi],ah
  438c01:	sub    esi,DWORD PTR [rax+rax*1+0xb8322c]
  438c08:	xor    al,0x39
  438c0a:	mov    ebp,0x86404600
  438c0f:	add    BYTE PTR [rbp+0x48],cl
  438c12:	mov    es,WORD PTR [rax]
  438c14:	push   rbp
  438c15:	push   rcx
  438c16:	xchg   esi,eax
  438c17:	add    BYTE PTR [rdx+rbx*2-0x62],bl
  438c1b:	add    BYTE PTR [rbp+0x7c],bh
  438c1e:	mov    esp,0xc6191400
  438c23:	add    BYTE PTR [rdi],dl
  438c25:	sbb    eax,0x201a00c7
  438c2a:	enter  0x1e00,0x24
  438c2e:	retf   0x2100
  438c31:	(bad)  
  438c32:	retf   0x2600
  438c35:	sub    al,0xcb
  438c37:	add    BYTE PTR [rdx],ch
  438c39:	xor    ch,cl
  438c3b:	add    BYTE PTR [rdx+rsi*1],ch
  438c3e:	int    0x0
  438c40:	cmp    bh,BYTE PTR [rdi]
  438c42:	rol    DWORD PTR [rax],0x30
  438c45:	ss iret 
  438c47:	add    BYTE PTR [rbx],dh
  438c49:	cmp    bh,cl
  438c4b:	add    BYTE PTR [rcx+rdi*1],dh
  438c4e:	iret   
  438c4f:	add    BYTE PTR [rdx],bh
  438c51:	rex rol DWORD PTR [rax],1
  438c54:	(bad)  
  438c55:	rex.RB rol DWORD PTR [r8],cl
  438c58:	rex.B
  438c59:	(bad)
  438c5d:	rex.WRX retf 0x5000
  438c61:	push   rbp
  438c62:	(bad)  
  438c63:	add    BYTE PTR [rcx+0x47],al
  438c66:	rol    DWORD PTR [rax],cl
  438c68:	rex.RX
  438c69:	rex.WXB (bad) 
  438c6b:	add    BYTE PTR [rax+0x4e],cl
  438c6e:	(bad)  
  438c6f:	add    BYTE PTR [rbx+0x50],cl
  438c72:	(bad)  
  438c73:	add    BYTE PTR [rcx+rdx*2-0x2a],cl
  438c77:	add    BYTE PTR [rax+0x55],dl
  438c7a:	xlat   BYTE PTR ds:[rbx]
  438c7b:	add    BYTE PTR [rsi+0x5b],dl
  438c7e:	rol    DWORD PTR [rax],cl
  438c80:	push   rdx
  438c81:	push   rdi
  438c82:	fadd   DWORD PTR [rax]
  438c84:	push   rsi
  438c85:	pop    rsp
  438c86:	fiadd  DWORD PTR [rax]
  438c88:	pop    rdx
  438c89:	pop    rsi
  438c8a:	fld    DWORD PTR [rax]
  438c8c:	pop    rbx
  438c8d:	(bad)  
  438c8e:	xlat   BYTE PTR ds:[rbx]
  438c8f:	add    BYTE PTR [rsi+0x63],bl
  438c92:	fild   DWORD PTR [rax]
  438c94:	pop    rdi
  438c95:	fadd   QWORD PTR fs:[rax]
  438c98:	(bad)  
  438c99:	data16 fiadd DWORD PTR [rax]
  438c9c:	(bad)  
  438c9d:	data16 fadd QWORD PTR [rax]
  438ca0:	movsxd ebp,DWORD PTR [rax-0x23]
  438ca3:	add    BYTE PTR [rbp+0x6b],ah
  438ca6:	fadd   QWORD PTR [rax]
  438ca8:	data16 ins BYTE PTR es:[rdi],dx
  438caa:	fiadd  WORD PTR [rax]
  438cac:	imul   ebp,DWORD PTR [rdi-0x22],0xe0746f00
  438cb3:	add    BYTE PTR [rbp+0x79],dh
  438cb6:	loop   0x438cb8
  438cb8:	jl     0x438c3a
  438cba:	jrcxz  0x438cbc
  438cbc:	jp     0x438c3e
  438cbe:	in     al,0x0
  438cc0:	jge    0x438c45
  438cc2:	in     eax,0x0
  438cc4:	xchg   edi,eax
  438cc5:	xchg   BYTE PTR [rdx-0x7c756a00],al
  438ccb:	add    BYTE PTR [rdx-0x69ff7876],dl
  438cd1:	mov    WORD PTR [rdi-0x7f746200],es
  438cd7:	add    BYTE PTR [rsi-0x64ff7674],dl
  438cdd:	xchg   ecx,eax
  438cde:	mov    al,BYTE PTR [rax]
  438ce0:	sahf   
  438ce1:	xchg   ebp,eax
  438ce2:	xchg   ecx,eax
  438ce3:	add    BYTE PTR [rax+rbx*4-0x715cff6a],bl
  438cea:	test   BYTE PTR [rax],al
  438cec:	test   eax,0xa9008693
  438cf1:	xchg   esp,eax
  438cf2:	xchg   BYTE PTR [rax],al
  438cf4:	scas   al,BYTE PTR es:[rdi]
  438cf5:	xchg   esp,eax
  438cf6:	test   BYTE PTR [rax],al
  438cf8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  438cf9:	xchg   ebx,eax
  438cfa:	mov    DWORD PTR [rax],eax
  438cfc:	mov    cl,0x9a
  438cfe:	lea    eax,[rax]
  438d00:	mov    ch,0x9b
  438d02:	mov    WORD PTR [rax],es
  438d04:	movabs ds:0xa1009098a7009098,eax
  438d0d:	cwde   
  438d0e:	xchg   esp,eax
  438d0f:	add    BYTE PTR [rbp-0x56ff6c62],ch
  438d15:	popf   
  438d16:	xchg   esi,eax
  438d17:	add    BYTE PTR [rdi-0x5bff6961],ch
  438d1d:	popf   
  438d1e:	cdq    
  438d1f:	add    BYTE PTR [rcx-0x53ff6b61],dh
  438d25:	movabs al,ds:0xa3bc0094a0b50098
  438d2e:	xchg   ebp,eax
  438d2f:	add    BYTE PTR [rbx-0x43ff695c],bh
  438d35:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  438d36:	xchg   ebp,eax
  438d37:	add    BYTE PTR [rsi+riz*4-0x5840ff66],dh
  438d3e:	(bad)  
  438d3f:	add    BYTE PTR [rdi-0x53ff6057],dh
  438d45:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  438d46:	movabs eax,ds:0xb1b6bf00a9afbc00
  438d4f:	add    dl,al
  438d51:	lods   al,BYTE PTR ds:[rsi]
  438d52:	movabs al,ds:0xa6b1c600a4aec000
  438d5b:	add    bh,al
  438d5d:	mov    bl,0xa9
  438d5f:	add    ch,al
  438d61:	mov    bh,0xad
  438d63:	add    cl,cl
  438d65:	mov    ah,0xa9
  438d67:	add    cl,cl
  438d69:	mov    bh,0xad
  438d6b:	add    ah,cl
  438d6d:	mov    bh,0xad
  438d6f:	add    bl,cl
  438d71:	mov    eax,0xb9cc00ad
  438d76:	scas   eax,DWORD PTR es:[rdi]
  438d77:	add    dl,al
  438d79:	mov    ecx,0xbbc600b4
  438d7e:	mov    ch,0x0
  438d80:	(bad)  
  438d81:	mov    edi,0xbdd000b9
  438d86:	mov    ah,0x0
  438d88:	(bad)  
  438d89:	sar    DWORD PTR [rax-0x473e2e00],0x0
  438d90:	rol    ah,1
  438d92:	mov    ebp,0xbfc8d800
  438d97:	add    BYTE PTR [rcx-0x7aff197a],al
  438d9d:	mov    ah,dh
  438d9f:	add    BYTE PTR [rsi-0x73ff1775],al
  438da5:	xchg   ecx,eax
  438da6:	jmp    0xffffffffe7d71dab
  438dab:	add    BYTE PTR [rax-0x69ff156b],dl
  438db1:	fwait
  438db2:	in     al,dx
  438db3:	add    BYTE PTR [rdx-0x5dff1463],bl
  438db9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  438dba:	in     eax,dx
  438dbb:	add    BYTE PTR [rsi+rbp*4-0x484bff11],ch
  438dc2:	icebp  
  438dc3:	add    BYTE PTR [rcx-0x43ff0d45],bh
  438dc9:	mov    edi,0xc6cf00f4
  438dce:	ret    
  438dcf:	add    dh,dl
  438dd1:	retf   0xc3
  438dd4:	fcmove st,st(1)
  438dd6:	ret    
  438dd7:	add    cl,bl
  438dd9:	int    0xc6
  438ddb:	add    ch,bl
  438ddd:	iret   
  438dde:	mov    DWORD PTR [rax],0xc9cfd8
  438de4:	(bad)  
  438de6:	retf   0xda00
  438de9:	ror    ebp,1
  438deb:	add    dh,bl
  438ded:	(bad)  
  438dee:	iret   
  438def:	add    al,bl
  438df1:	(bad)  
  438df2:	rol    DWORD PTR [rax],1
  438df4:	(bad)  
  438df6:	rol    BYTE PTR [rax],1
  438df8:	(bad)  
  438dfa:	(bad)  
  438dfb:	add    al,ah
  438dfd:	ror    ah,cl
  438dff:	add    cl,ah
  438e01:	(bad)  
  438e02:	(bad)  
  438e03:	add    al,ah
  438e05:	xlat   BYTE PTR ds:[rbx]
  438e06:	rol    DWORD PTR [rax],cl
  438e08:	jrcxz  0x438de5
  438e0a:	xlat   BYTE PTR ds:[rbx]
  438e0b:	add    dh,ah
  438e0d:	(bad)  
  438e0f:	add    cl,ah
  438e11:	fcmovnu st,st(2)
  438e13:	add    dl,ah
  438e15:	(bad)  
  438e17:	add    ch,ah
  438e19:	(bad)  
  438e1b:	add    bl,ch
  438e1d:	loop   0x438dfe
  438e1f:	add    dl,bl
  438e21:	(bad)  
  438e23:	add    bl,ch
  438e25:	in     al,0xe0
  438e27:	add    ch,ch
  438e29:	in     eax,0xe2
  438e2b:	add    dh,ch
  438e2d:	call   0xffffffffed348f17
  438e32:	jmp    0xffffffffed338137
  438e37:	add    ch,dh
  438e39:	lock out dx,al
  438e3b:	add    dl,ah
  438e3d:	jrcxz  0x438e39
  438e3f:	add    ah,ch
  438e41:	in     al,dx
  438e42:	sti    
  438e43:	add    bl,bh
  438e45:	stc    
  438e46:	stc    
  438e47:	add    ch,bh
  438e49:	cld    
  438e4a:	sti    
  438e4b:	add    dh,bh
  438e4d:	(bad)  
  438e4e:	inc    BYTE PTR [rax]
	...
  438f08:	(bad)  
  438f09:	(bad)  
  438f0a:	inc    DWORD PTR [rax]
	...
  438f54:	add    BYTE PTR [rax],al
  438f56:	(bad)  
  438f57:	sbb    al,0x1a
  438f59:	add    BYTE PTR [rax],al
  438f5b:	add    BYTE PTR [rax],al
  438f5d:	add    BYTE PTR [rax],al
  438f5f:	adc    DWORD PTR [rcx],edx
  438f61:	or     eax,0xd
	...
  438f72:	add    BYTE PTR [rax],al
  438f74:	add    BYTE PTR [rsi],ch
  438f76:	(bad)  
  438f77:	movabs al,ds:0x394900000000058a
  438f80:	cmp    BYTE PTR [rax],bh
  438f82:	cmp    BYTE PTR [rcx],cl
	...
  438f94:	add    BYTE PTR [rdx],dh
  438f96:	jmp    QWORD PTR [rax+0x68a]
  438f9c:	add    BYTE PTR [rax],al
  438f9e:	rex.WX pop rdx
  438fa0:	rex.RX
  438fa1:	rex.RX cmp DWORD PTR [rcx],r9d
	...
  438fb4:	add    BYTE PTR [rsi],dh
  438fb6:	jmp    QWORD PTR [rax+0x88a]
  438fbc:	add    BYTE PTR [rax],al
  438fbe:	rex.WR pop rbp
  438fc0:	rex.W
  438fc1:	rex.RXB cmp al,0x9
	...
  438fd4:	add    BYTE PTR [rdx-0x1],bh
  438fd7:	movabs al,ds:0x5f4f00000000188a
  438fe0:	rex.WX
  438fe1:	rex.WB cmp rax,0x9
	...
  438ff3:	add    BYTE PTR [rax],al
  438ff5:	jge    0x438ff6
  438ff7:	movabs al,ds:0x6451000000001a8a
  439000:	rex.WRX
  439001:	rex.WR
  439002:	or     DWORD PTR ds:[rax],eax
	...
  439015:	mov    bh,bh
  439017:	movabs al,ds:0x6856000000001e8a
  439020:	push   rcx
  439021:	rex.WRXB (bad) 
  439023:	or     eax,0x0
	...
  439034:	add    BYTE PTR [rcx+0x1f8aa0ff],dl
  43903a:	add    BYTE PTR [rax],al
  43903c:	add    BYTE PTR [rax],al
  43903e:	pop    rax
  43903f:	push   0x57
  439041:	push   rcx
  439042:	rex.WRB or rax,0x0
	...
  439054:	add    BYTE PTR [rsi+0x238aa0ff],dl
  43905a:	add    BYTE PTR [rax],al
  43905c:	add    BYTE PTR [rax],al
  43905e:	pop    rbx
  43905f:	imul   ebx,DWORD PTR [rbp+0x5a],0x53
  439063:	adc    DWORD PTR [rax],eax
	...
  439075:	sahf   
  439076:	jmp    QWORD PTR [rax+0x258a]
  43907c:	add    BYTE PTR [rax],al
  43907e:	pop    rbp
  43907f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  439080:	(bad)  
  439081:	pop    rbp
  439082:	push   rsp
  439083:	adc    al,BYTE PTR [rax]
	...
  439095:	movabs ds:0x288ab2ff,al
  43909e:	cmps   DWORD PTR fs:[rsi],DWORD PTR es:[rdi]
  4390a0:	push   0x135565
	...
  4390b1:	add    BYTE PTR [rax],al
  4390b3:	add    BYTE PTR [rdx],ch
  4390b5:	movabs ds:0x1f2a93bcff,al
  4390be:	gs stos BYTE PTR es:[rdi],al
  4390c0:	push   0x69
  4390c2:	pop    rsp
  4390c3:	adc    al,0x0
	...
  4390d1:	add    BYTE PTR [rax],al
  4390d3:	sub    dl,BYTE PTR [rsi-0x453b004e]
  4390d9:	mov    cl,0x36
  4390db:	add    al,0x0
  4390dd:	add    BYTE PTR [rcx-0x55],ch
  4390e0:	movabs ds:0x40606b,eax
	...
  4390f1:	add    BYTE PTR [rbp-0x3669],cl
  4390f7:	(bad)  
  4390f8:	dec    eax
  4390fa:	movabs eax,ds:0x64a5a6ac6a008131
  439103:	add    BYTE PTR [r8],al
	...
  439112:	xchg   ecx,eax
  439113:	(bad)  
  439114:	jmp    QWORD PTR [rax-0x74d8db]
  43911a:	enter  0x67a,0x0
  43911e:	imul   ebp,DWORD PTR [rbp+0x4265a8a9],0x0
	...
  439131:	add    BYTE PTR [rdi+rdi*8+0x1ab8],dl
  439138:	add    BYTE PTR [rdx+0x1887ff],bh
  43913e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  43913f:	scas   eax,DWORD PTR es:[rdi]
  439140:	scas   al,BYTE PTR es:[rdi]
  439141:	lods   eax,DWORD PTR ds:[rsi]
  439142:	rex.XB add BYTE PTR gs:[r8],al
	...
  439152:	(bad)  
  439153:	push   QWORD PTR [rbp+0x1c]
  439159:	movabs eax,ds:0xc5cccda4001c87ff
  439162:	lods   eax,DWORD PTR ds:[rsi]
  439163:	rex.XB add BYTE PTR [r8],al
	...
  439172:	movabs al,ds:0xffff2a001a87ffff
  43917b:	xchg   DWORD PTR [rbx-0x7ed35500],ecx
  439181:	(bad)  
  439182:	add    DWORD PTR [rax+rax*1+0x0],eax
	...
  439192:	add    BYTE PTR [rdi+0x1cffff],dl
  439198:	(bad)  
  439199:	call   QWORD PTR [rcx+rdi*2+0x26000000]
  4391a0:	mov    ecx,0x171
	...
  4391b1:	add    BYTE PTR [rax],al
  4391b3:	add    BYTE PTR [rbx-0x6cffc983],dl
  4391b9:	jl     0x4391f1
  4391bb:	add    BYTE PTR [rax],al
  4391bd:	add    BYTE PTR [rax],al
  4391bf:	outs   dx,BYTE PTR ds:[rsi]
  4391c0:	mov    edx,0x274
	...
  4391dd:	add    BYTE PTR [rax],al
  4391df:	jb     0x4391a2
  4391e1:	jle    0x4391f8
	...
  4391f7:	add    BYTE PTR [rax],al
  4391f9:	add    BYTE PTR [rax+riz*1],ah
  4391fc:	add    BYTE PTR [rax],al
  4391fe:	add    BYTE PTR [rbx-0x50],bh
  439201:	xchg   BYTE PTR [rcx],bl
  439203:	add    BYTE PTR [rax],al
  439205:	add    BYTE PTR [rdx],al
  439207:	add    eax,DWORD PTR [rax]
	...
  439219:	cmp    DWORD PTR [rax+0x7e2d779d],0x228fb585
  439223:	(bad)  
  439224:	(bad)  
  439225:	(bad)  
  439226:	(bad)  
  439227:	(bad)  
	...
  439238:	add    BYTE PTR [rcx-0x425f3e01],al
  43923e:	xchg   edi,eax
  43923f:	shl    DWORD PTR [rdx+0x242d77a0],0x90
  439246:	sbb    eax,0x76
	...
  439257:	add    BYTE PTR [rax],al
  439259:	test   edi,edi
  43925b:	enter  0xa0c1,0xbd
  43925f:	dec    ebx
  439261:	mov    eax,0x2cbf8c96
  439266:	and    DWORD PTR [rax],eax
	...
  439278:	add    BYTE PTR [rcx-0x62710001],al
  43927e:	mov    dl,0xff
  439280:	dec    ecx
  439282:	leave  
  439283:	(bad)  
  439284:	jno    0x4392b6
	...
  43929a:	pushf  
  43929b:	pushf  
  43929c:	add    BYTE PTR [rax],al
  43929e:	mov    edx,0x757e847e
  4392a3:	jno    0x439316
	...
  439309:	add    BYTE PTR [rax],al
  43930b:	add    bh,bh
  43930d:	(bad)  
  43930e:	(bad)  
  43930f:	(bad)  
  439310:	(bad)  
  439311:	(bad)  
  439312:	(bad)  
  439313:	(bad)  
  439314:	inc    edi
  439316:	loope  0x439317
  439318:	inc    DWORD PTR [rbx-0x7c000040]
  43931e:	sar    bh,0xff
  439321:	add    eax,0xffffffff
  439324:	inc    DWORD PTR [rbx-0x7c000040]
  43932a:	sar    bh,0xff
  43932d:	add    eax,0xffffffff
  439330:	inc    DWORD PTR [rbx-0x7c000040]
  439336:	sar    bh,0xff
  439339:	add    eax,0xffffffff
  43933c:	inc    DWORD PTR [rbx+0x1ffffc0]
  439342:	sar    bh,0xfe
  439345:	add    al,al
  439347:	(bad)  
  439348:	cld    
  439349:	add    BYTE PTR [rax-0x1],al
  43934c:	cld    
  43934d:	add    BYTE PTR [rax-0x1],al
  439350:	cld    
  439351:	cmp    BYTE PTR [rax-0x1],al
  439354:	cld    
  439355:	cmp    BYTE PTR [rax-0x1],al
  439358:	cld    
  439359:	adc    BYTE PTR [rax-0x1],al
  43935c:	(bad)  
  43935d:	adc    cl,ah
  43935f:	(bad)  
  439360:	call   QWORD PTR [rcx]
  439362:	loope  0x439363
  439364:	(bad)  
  439365:	jmp    rcx
  439367:	(bad)  
  439368:	(bad)  
  439369:	cld    
  43936a:	loope  0x43933b
  43936c:	(bad)  
  43936d:	clc    
  43936e:	add    BYTE PTR [rdi],cl
  439370:	(bad)  
  439371:	clc    
  439372:	add    BYTE PTR [rdi],cl
  439374:	(bad)  
  439375:	clc    
  439376:	add    BYTE PTR [rdi],bl
  439378:	(bad)  
  439379:	clc    
  43937a:	add    BYTE PTR [rdi],bh
  43937c:	(bad)  
  43937d:	cld    
  43937e:	sar    BYTE PTR [rdi-0x1],0xff
  439382:	(bad)  
  439383:	(bad)  
  439384:	(bad)  
  439385:	(bad)  
  439386:	(bad)  
  439387:	(bad)  
  439388:	(bad)  
  439389:	(bad)  
  43938a:	(bad)  
  43938b:	jmp    FWORD PTR [rax]
  43938d:	add    BYTE PTR [rax],al
  43938f:	add    BYTE PTR [rax],dl
  439391:	add    BYTE PTR [rax],al
  439393:	add    BYTE PTR [rax],ah
  439395:	add    BYTE PTR [rax],al
  439397:	add    BYTE PTR [rcx],al
  439399:	add    BYTE PTR [rax],cl
  43939b:	add    BYTE PTR [rax],al
  43939d:	add    BYTE PTR [rax],al
  43939f:	add    BYTE PTR [rax],al
  4393a1:	add    DWORD PTR [rax],eax
	...
  4393ab:	add    BYTE PTR [rax],al
  4393ad:	add    DWORD PTR [rax],eax
  4393af:	add    BYTE PTR [rax],al
  4393b1:	add    DWORD PTR [rax],eax
  4393b3:	add    BYTE PTR [rax],al
  4393b5:	add    BYTE PTR [rax],al
  4393b7:	add    BYTE PTR [rcx+0x4b],bl
  4393ba:	cmp    al,0x0
  4393bc:	movsxd edx,DWORD PTR [rbx+0x43]
  4393bf:	add    BYTE PTR [rsp+rdx*2+0x44],ah
  4393c3:	add    BYTE PTR [rdi+0x5d],ch
  4393c6:	rex.WR add BYTE PTR [rbx+0x6f],r15b
  4393ca:	add    BYTE PTR gs:[rbx+0x77],bh
  4393ce:	jae    0x4393d0
  4393d0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  4393d1:	pop    rcx
  4393d2:	xor    eax,DWORD PTR [rax]
  4393d4:	stos   BYTE PTR es:[rdi],al
  4393d5:	pop    rbp
  4393d6:	cmp    BYTE PTR [rax],al
  4393d8:	scas   eax,DWORD PTR es:[rdi]
  4393d9:	(bad)  
  4393da:	cmp    al,0x0
  4393dc:	mov    cl,0x60
  4393de:	cmp    DWORD PTR [rax],eax
  4393e0:	lods   eax,DWORD PTR ds:[rsi]
  4393e1:	imul   ecx,DWORD PTR [rax+0x0],0x4368b6
  4393e8:	mov    eax,0xbe004d6f
  4393ed:	jno    0x43943a
  4393ef:	add    BYTE PTR [rbx-0x48ffb390],bh
  4393f5:	je     0x43944a
  4393f7:	add    BYTE PTR [rdi-0x46ffa989],bh
  4393fd:	js     0x439457
  4393ff:	add    BYTE PTR [rsi-0x7bffa787],bh
  439405:	jp     0x439478
  439407:	add    BYTE PTR [rax-0x3bff8784],al
  43940d:	jbe    0x439460
  43940f:	add    dl,cl
  439411:	jge    0x43946b
  439413:	add    bh,cl
  439415:	sbb    DWORD PTR [rdi+0x0],0xffffffd5
  439419:	mov    ah,BYTE PTR [rsi+0x0]
  43941c:	ror    DWORD PTR [rbx-0x6c23ff95],1
  439422:	jno    0x439424
  439424:	loopne 0x4393bf
  439426:	js     0x439428
  439428:	loope  0x4393c9
  43942a:	jg     0x43942c
  43942c:	out    0x9f,eax
  43942e:	jge    0x439430
  439430:	out    0xa0,al
  439432:	jle    0x439434
  439434:	jmp    0x294413da
  439439:	adc    al,BYTE PTR [rax-0x71ecd200]
  43943f:	add    BYTE PTR [rsi],ch
  439441:	adc    al,0x8f
  439443:	add    BYTE PTR [rbx],dh
  439445:	and    BYTE PTR [rsi-0x52d1c800],bl
  43944b:	add    BYTE PTR [rsi],bh
  43944d:	cmp    eax,0x322c00bf
  439452:	(bad)  
  439453:	add    BYTE PTR [rdi],bh
  439455:	rex.RB rol DWORD PTR [r8],cl
  439458:	rex.XB
  439459:	rex.WR (bad) 
  43945b:	add    BYTE PTR [rax+0x59],cl
  43945e:	fld    QWORD PTR [rax]
  439460:	push   rdx
  439461:	pop    rax
  439462:	fadd   DWORD PTR [rax]
  439464:	ins    BYTE PTR es:[edi],dx
  439466:	fild   WORD PTR [rax]
  439468:	jnp    0x4393ea
  43946a:	in     al,0x0
  43946c:	mov    al,BYTE PTR [rsi-0x7467ff7e]
  439472:	add    BYTE PTR [rax],0xa1
  439475:	cdq    
  439476:	pop    QWORD PTR [rax]
  439478:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  439479:	fwait
  43947a:	xchg   ebp,eax
  43947b:	add    BYTE PTR [rsi-0x53ff6556],dh
  439481:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  439482:	movabs eax,ds:0xa1a9b400a5aaaf00
  43948b:	add    BYTE PTR [rsp+rsi*4-0x4540ff54],bh
  439492:	mov    bl,0x0
  439494:	mov    eax,0xff00b5bb
  439499:	mov    bl,0x8b
  43949b:	add    bh,bh
  43949d:	mov    eax,0xbeff0094
  4394a2:	sahf   
  4394a3:	add    cl,al
  4394a5:	mov    ecx,0xc0c900b1
  4394aa:	mov    ecx,0xbec5cd00
  4394af:	add    dh,bh
  4394b1:	(bad)  
  4394b2:	test   eax,0xb3c4e500
  4394b7:	add    bh,bh
  4394b9:	int    0xb4
  4394bb:	add    ch,bh
  4394bd:	(bad)  
  4394be:	mov    esi,0xe9938e00
  4394c3:	add    BYTE PTR [rsi-0x5eff115d],bl
  4394c9:	lods   eax,DWORD PTR ds:[rsi]
  4394ca:	hlt    
  4394cb:	add    al,dl
  4394cd:	leave  
  4394ce:	(bad)  
  4394cf:	add    dl,dl
  4394d1:	int3   
  4394d2:	(bad)  
  4394d3:	add    bl,bl
  4394d5:	(bad)  
  4394d6:	rol    BYTE PTR [rax],1
  4394d8:	not    ch
  4394da:	(bad)  
  4394db:	add    ch,bh
  4394dd:	fadd   st,st(3)
  4394df:	add    ch,bh
  4394e1:	loope  0x4394b5
  4394e3:	add    bl,al
  4394e5:	retf   0xf8
  4394e8:	(bad)  
  4394e9:	in     al,dx
  4394ea:	out    0x0,al
  4394ec:	sti    
  4394ed:	out    dx,al
  4394ee:	out    0x0,al
  4394f0:	hlt    
  4394f1:	lock jmp 0xffffffffec3691f7
	...
  4397af:	add    bh,bh
  4397b1:	(bad)  
  4397b2:	inc    DWORD PTR [rax]
	...
  4397c8:	adc    cl,BYTE PTR [rdx]
  4397ca:	(bad)  
  4397cb:	add    BYTE PTR [rax],al
  4397cd:	add    BYTE PTR [rcx],ah
  4397cf:	and    DWORD PTR [rax],eax
  4397d1:	add    BYTE PTR [rax],al
  4397d3:	add    BYTE PTR [rax],al
  4397d5:	add    BYTE PTR [rax],al
  4397d7:	add    BYTE PTR [rdi],cl
  4397d9:	cmp    DWORD PTR [rax],ecx
  4397db:	add    BYTE PTR [rax],al
  4397dd:	(bad)  
  4397de:	and    esp,DWORD PTR [rbx]
  4397e0:	and    eax,DWORD PTR [rax]
  4397e2:	add    BYTE PTR [rax],al
  4397e4:	add    BYTE PTR [rax],al
  4397e6:	add    BYTE PTR [rax],al
  4397e8:	(bad)  
  4397e9:	cmp    cl,BYTE PTR [rcx]
  4397eb:	add    BYTE PTR [rax],al
  4397ed:	sub    BYTE PTR [rsp],ah
  4397f0:	and    eax,DWORD PTR [rax]
  4397f2:	add    BYTE PTR [rax],al
  4397f4:	add    BYTE PTR [rax],al
  4397f6:	add    BYTE PTR [rax],al
  4397f8:	(bad)  
  4397f9:	cmp    ecx,DWORD PTR [rax+rax*1]
  4397fc:	add    BYTE PTR [rbx],ch
  4397fe:	and    eax,0x2325
  439803:	add    BYTE PTR [rax],al
  439805:	add    BYTE PTR [rax],al
  439807:	add    BYTE PTR [rax],bl
  439809:	(bad)  
  43980a:	sldt   WORD PTR [rax]
  43980d:	sub    al,0x26
  43980f:	and    eax,DWORD PTR es:[rax]
  439812:	add    BYTE PTR [rax],al
  439814:	add    BYTE PTR [rax],al
  439816:	add    BYTE PTR [rax],al
  439818:	sbb    DWORD PTR [rcx+0x10],eax
  43981b:	add    BYTE PTR [rax],al
  43981d:	sub    eax,0x242929
  439822:	add    BYTE PTR [rax],al
  439824:	add    BYTE PTR [rax],al
  439826:	add    BYTE PTR [rbx],bl
  439828:	rex.WXB
  439829:	rex.WXB
  43982a:	rex.X or eax,DWORD PTR [rax]
  43982d:	rex.XB sub bpl,BYTE PTR [r10]
  439830:	and    al,0x0
  439832:	add    BYTE PTR [rax],al
  439834:	add    BYTE PTR [rax],al
  439836:	(bad)  
  439837:	push   rax
  439838:	rex.WB sbb cl,BYTE PTR [r14+0x4a]
  43983c:	or     eax,0x24454c44
  439841:	add    BYTE PTR [rax],al
  439843:	add    BYTE PTR [rax],al
  439845:	add    BYTE PTR [rip+0x19001d4e],bl        # 0x1943b599
  43984b:	adc    BYTE PTR [rax],al
  43984e:	add    eax,0x2
  439853:	add    BYTE PTR [rax],al
  439855:	add    BYTE PTR [rax],al
  439857:	and    BYTE PTR [rip+0x161d00],bl        # 0x59b55d
  43985d:	add    BYTE PTR [rcx+rax*1],bh
	...
  439868:	add    BYTE PTR [rax],al
  43986a:	add    BYTE PTR [rsi+0x2f],al
  43986d:	add    BYTE PTR [rip+0x4000002],dh        # 0x4439875
	...
  43987b:	cmp    eax,0x30380232
  439880:	(bad)  
  439881:	add    al,0x31
	...
  43988b:	cmp    eax,0x474d144f
  439890:	xor    al,0x15
	...
  43989a:	add    BYTE PTR [rax+0x36],cl
  43989d:	add    BYTE PTR [rbx+rsi*1],bh
  4398a0:	add    BYTE PTR cs:[rax],al
	...
  4398b3:	add    bh,bh
  4398b5:	inc    DWORD PTR [rax]
  4398b7:	add    cl,dh
  4398b9:	iret   
  4398ba:	add    BYTE PTR [rax],al
  4398bc:	icebp  
  4398bd:	xchg   DWORD PTR [rax],eax
  4398bf:	add    cl,dh
  4398c1:	xchg   DWORD PTR [rax],eax
  4398c3:	add    cl,dh
  4398c5:	xchg   DWORD PTR [rax],eax
  4398c7:	add    cl,dh
  4398c9:	xchg   DWORD PTR [rax],eax
  4398cb:	add    cl,dh
  4398cd:	xchg   DWORD PTR [rax],eax
  4398cf:	add    al,ah
  4398d1:	xchg   DWORD PTR [rax],eax
  4398d3:	add    al,al
  4398d5:	(bad)  
  4398d6:	add    BYTE PTR [rax],al
  4398d8:	(bad)  
  4398d9:	rex.WRXB add BYTE PTR [r8],r8b
  4398dc:	in     al,0xcf
  4398de:	add    BYTE PTR [rax],al
  4398e0:	dec    BYTE PTR [rbp+0x0]
  4398e3:	add    dh,bh
  4398e5:	add    DWORD PTR [rax],eax
  4398e7:	add    dh,bh
  4398e9:	add    eax,DWORD PTR [rax]
  4398eb:	add    dh,bh
  4398ed:	rex.RXB add BYTE PTR [r8],r8b
  4398f0:	(bad)  
  4398f1:	inc    DWORD PTR [rax]
  4398f3:	add    BYTE PTR [rax],ch
  4398f5:	add    BYTE PTR [rax],al
  4398f7:	add    BYTE PTR [rax],ah
  4398f9:	add    BYTE PTR [rax],al
  4398fb:	add    BYTE PTR [rax+0x0],al
  4398fe:	add    BYTE PTR [rax],al
  439900:	add    DWORD PTR [rax],eax
  439902:	and    BYTE PTR [rax],al
  439904:	add    BYTE PTR [rax],al
  439906:	add    BYTE PTR [rax],al
  439908:	adc    BYTE PTR [rax],0x0
	...
  439a3f:	add    BYTE PTR [rcx+0x79387888],ah
  439a45:	(bad)  
  439a46:	rex.WRB push QWORD PTR [r14+0x5c]
  439a4a:	rex.W push QWORD PTR [rdx+0x58]
  439a4e:	rex.R jmp QWORD PTR [rcx+0x387888]
	...
  439a61:	add    BYTE PTR [rax],al
  439a63:	add    BYTE PTR [rcx],bl
  439a65:	(bad)  
  439a66:	lods   al,BYTE PTR ds:[rsi]
  439a67:	rex.RX (bad) 
  439a69:	and    eax,0x212bff6d
  439a6e:	push   0xffffffffffffffff
  439a70:	sub    DWORD PTR [rsi],ebx
  439a72:	push   0x641b26ff
  439a77:	call   FWORD PTR [rax+rdx*1]
  439a7a:	pop    rdx
  439a7b:	rex.RX add BYTE PTR [rax],r8b
	...
  439abe:	add    BYTE PTR [rax],al
  439ac0:	pushf  
  439ac1:	sub    DWORD PTR [rdi-0x1],0xffe2e5ed
  439ac8:	rol    edx,cl
  439aca:	mov    eax,0x95a4bcff
  439acf:	jmp    QWORD PTR [rcx+rcx*2+0x34]
  439ad3:	inc    DWORD PTR [rax]
	...
  439ae1:	add    BYTE PTR [rax],al
  439ae3:	add    BYTE PTR [rcx],ah
  439ae5:	(bad)  
  439ae6:	retf   0x19ff
  439ae9:	(bad)  
  439aea:	lods   al,BYTE PTR ds:[rsi]
  439aeb:	call   FWORD PTR [rax]
  439aed:	sbb    eax,0x1c17ffab
  439af2:	stos   BYTE PTR es:[rdi],al
  439af3:	call   QWORD PTR [rsi]
  439af5:	sbb    ebp,DWORD PTR [rdx+0x5a101cff]
  439afb:	inc    DWORD PTR [rax]
	...
  439b3d:	add    BYTE PTR [rax],al
  439b3f:	add    BYTE PTR [rcx-0x8a79],ah
  439b45:	(bad)  
  439b46:	(bad)  
  439b47:	call   rbx
  439b49:	sar    DWORD PTR [rcx-0x6a5b4301],0xff
  439b50:	addr32 rex.WR cmp dil,r15b
	...
  439b64:	(bad)  
  439b65:	sub    al,0xcb
  439b67:	dec    DWORD PTR [rcx+rdx*2-0x2a]
  439b6b:	call   QWORD PTR [rdi]
  439b6d:	sbb    eax,0x1914ffc7
  439b72:	(bad)  
  439b73:	call   FWORD PTR [rdx]
  439b75:	and    BYTE PTR [rbp+0x5a101cff],ch
  439b7b:	inc    DWORD PTR [rax]
	...
  439bbd:	add    BYTE PTR [rax],al
  439bbf:	add    BYTE PTR [rdi-0x8373],ah
  439bc5:	(bad)  
  439bc6:	(bad)  
  439bc7:	call   rbx
  439bc9:	sar    DWORD PTR [rax-0x695c4301],0xff
  439bd0:	push   0x50
  439bd2:	cmp    al,0xff
	...
  439be4:	sub    al,0x32
  439be6:	int    0xff
  439be8:	push   rbx
  439be9:	push   rdi
  439bea:	fdivr  st,st(7)
  439bec:	(bad)  
  439bed:	and    al,0xca
  439bef:	call   FWORD PTR [rdx]
  439bf1:	and    al,cl
  439bf3:	jmp    QWORD PTR [rax]
  439bf5:	and    eax,0x101cffb0
  439bfa:	pop    rdx
  439bfb:	inc    DWORD PTR [rax]
	...
  439c3d:	add    BYTE PTR [rax],al
  439c3f:	add    BYTE PTR [rsi-0x7b6c],ch
  439c45:	(bad)  
  439c46:	(bad)  
  439c47:	call   rbx
  439c49:	sar    DWORD PTR [rax-0x6a5c4301],0xff
  439c50:	outs   dx,DWORD PTR ds:[rsi]
  439c51:	push   rsp
  439c52:	inc    DWORD PTR [r8]
	...
  439c61:	add    BYTE PTR [rax],al
  439c63:	add    BYTE PTR [rbx],dh
  439c65:	cmp    bh,cl
  439c67:	call   FWORD PTR [rdx+0x5e]
  439c6a:	fcos   
  439c6c:	es sub eax,0x2721ffcb
  439c72:	retf   0x26ff
  439c75:	sub    esi,DWORD PTR [rdi+rdi*8-0xa5efe4]
	...
  439cc0:	mov    ch,0x9b
  439cc2:	mov    edi,?
  439cc4:	(bad)  
  439cc5:	(bad)  
  439cc6:	(bad)  
  439cc7:	call   rbx
  439cc9:	ret    0xffb8
  439ccc:	mov    esp,0x74ff96a3
  439cd1:	pop    rdx
  439cd2:	rex.RX inc DWORD PTR [rax]
	...
  439ce1:	add    BYTE PTR [rax],al
  439ce3:	add    BYTE PTR [rdx],bh
  439ce5:	rex sar edi,1
  439ce8:	(bad)  
  439ce9:	data16 fdiv st(7),st
  439cec:	xor    BYTE PTR [rsi],dh
  439cee:	iret   
  439cef:	jmp    FWORD PTR [rdx]
  439cf1:	xor    ch,cl
  439cf3:	jmp    FWORD PTR [rdx+rsi*1]
  439cf6:	mov    eax,0x5c131eff
  439cfb:	inc    DWORD PTR [rax]
	...
  439d3d:	add    BYTE PTR [rax],al
  439d3f:	add    BYTE PTR [rbx+riz*4-0x69],bh
  439d46:	(bad)  
  439d47:	call   rbx
  439d49:	ret    0xffb8
  439d4c:	mov    esp,0x78ff96a3
  439d51:	(bad)  
  439d52:	rex.WR inc QWORD PTR [rax]
	...
  439d61:	add    BYTE PTR [rax],al
  439d63:	add    BYTE PTR [rcx+0x47],al
  439d66:	sar    edi,cl
  439d68:	push   0x6f
  439d6a:	fdivp  st(7),st
  439d6c:	cmp    al,BYTE PTR [rax-0x2f]
  439d6f:	push   QWORD PTR [rcx+rdi*1]
  439d72:	iret   
  439d73:	push   QWORD PTR [rcx+rdi*1]
  439d76:	mov    ebp,0x601722ff
  439d7b:	inc    DWORD PTR [rax]
	...
  439dbd:	add    BYTE PTR [rax],al
  439dbf:	add    dl,al
  439dc1:	lods   al,BYTE PTR ds:[rsi]
  439dc2:	movabs al,ds:0xb9c1d3ffffffffff
  439dcb:	(bad)  
  439dcc:	mov    ebx,0x7fff96a4
  439dd1:	gs push rdx
  439dd3:	inc    DWORD PTR [rax]
	...
  439de1:	add    BYTE PTR [rax],al
  439de3:	add    BYTE PTR [rax+0x4e],cl
  439de6:	(bad)  
  439de7:	push   QWORD PTR [rax+rdi*2-0x1f]
  439deb:	inc    DWORD PTR [rsi+0x4b]
  439dee:	(bad)  
  439def:	(bad)  
  439df0:	(bad)  
  439df1:	rex.RB sar r15d,cl
  439df4:	cmp    bh,BYTE PTR [rdi]
  439df6:	sar    edi,0x27
  439df9:	sbb    al,0x65
  439dfb:	inc    DWORD PTR [rax]
	...
  439e3d:	add    BYTE PTR [rax],al
  439e3f:	add    cl,cl
  439e41:	mov    ah,0xa9
  439e43:	(bad)  
  439e44:	(bad)  
  439e45:	(bad)  
  439e46:	(bad)  
  439e47:	call   rbx
  439e49:	sar    DWORD PTR [rax-0x6a5c4301],0xff
  439e50:	sub    DWORD PTR [rbx+0x59],0xffffffff
	...
  439e64:	push   rax
  439e65:	push   rbp
  439e66:	xlat   BYTE PTR ds:[rbx]
  439e67:	(bad)  
  439e68:	jl     0x439dea
  439e6a:	jrcxz  0x439e6b
  439e6c:	push   rcx
  439e6d:	push   rdi
  439e6e:	fdivr  st,st(7)
  439e70:	rex.WXB push r8
  439e72:	(bad)  
  439e73:	inc    DWORD PTR [rcx+0x47]
  439e76:	vcvttsd2si esp,QWORD PTR [rbx]
  439e7a:	imul   edi,edi,0x0
	...
  439ebd:	add    BYTE PTR [rax],al
  439ebf:	add    al,dl
  439ec1:	mov    ebp,0xffffffb4
  439ec6:	(bad)  
  439ec7:	call   rbx
  439ec9:	sar    DWORD PTR [rcx-0x695c4301],0xff
  439ed0:	mov    dh,BYTE PTR [rcx+0x60]
  439ed3:	inc    DWORD PTR [rax]
	...
  439ee1:	add    BYTE PTR [rax],al
  439ee3:	add    BYTE PTR [rdi+0x5c],dl
  439ee6:	(bad)  
  439ee8:	xchg   BYTE PTR [rdx+0x635effe6],cl
  439eee:	(bad)  
  439ef0:	push   rsi
  439ef1:	pop    rsp
  439ef2:	(bad)  
  439ef4:	rex.WB
  439ef5:	rex.WRX retf 0x32ff
  439ef9:	sub    DWORD PTR [rcx-0x1],esi
	...
  439f3c:	movabs eax,ds:0xffffbfc8d8387888
  439f45:	(bad)  
  439f46:	(bad)  
  439f47:	(bad)  
  439f48:	fcmove st,st(2)
  439f4a:	ret    
  439f4b:	(bad)  
  439f4c:	mov    esp,0x90ff95a3
  439f51:	jns    0x439fba
  439f53:	jmp    QWORD PTR [rcx+0x387888]
	...
  439f61:	add    BYTE PTR [rax],al
  439f63:	add    BYTE PTR [rdi+0x64],bl
  439f66:	fdiv   st(7),st
  439f68:	nop
  439f69:	xchg   ebx,eax
  439f6a:	out    0xff,eax
  439f6c:	imul   ebp,DWORD PTR [rdi-0x21],0xdd6863ff
  439f73:	call   QWORD PTR [rax+0x55]
  439f76:	(bad)  
  439f77:	(bad)  
  439f78:	cmp    BYTE PTR [rcx],dh
  439f7a:	js     0x439f7b
	...
  439fb8:	movabs eax,ds:0xd8ff6e7f97387888
  439fc1:	enter  0xffbf,0xff
  439fc5:	(bad)  
  439fc6:	(bad)  
  439fc7:	jmp    rax
  439fc9:	ror    ah,cl
  439fcb:	inc    esi
  439fcd:	mov    cl,0xa6
  439fcf:	call   QWORD PTR [rdi+0x7eff6e7f]
  439fd5:	movsxd edx,DWORD PTR [rcx-0x4]
  439fd8:	movabs eax,ds:0x387888
  439fe1:	add    BYTE PTR [rax],al
  439fe3:	add    BYTE PTR [rsi+0x6c],ah
  439fe6:	fdivp  st(7),st
  439fe8:	(bad)  
  439fe9:	popf   
  439fea:	jmp    0x439feb
  439fec:	jbe    0x43a068
  439fee:	jrcxz  0x439fef
  439ff0:	outs   dx,DWORD PTR ds:[rsi]
  439ff1:	je     0x439fd3
  439ff3:	call   QWORD PTR [rsi+0x5b]
  439ff6:	sar    edi,cl
  439ff8:	(bad)  
  439ff9:	cmp    BYTE PTR [rdi-0x1],bh
	...
  43a034:	movabs eax,ds:0xccff6e7f97387888
  43a03d:	mov    bh,0xad
  43a03f:	(bad)  
  43a040:	fcmove st,st(1)
  43a042:	ret    
  43a043:	(bad)  
  43a044:	(bad)  
  43a045:	(bad)  
  43a046:	(bad)  
  43a047:	(bad)  
  43a048:	jmp    0x43a02c
  43a04a:	(bad)  
  43a04c:	(bad)  
  43a04e:	sar    bh,1
  43a050:	(bad)  
  43a051:	retf   0xffc3
  43a054:	movabs al,ds:0x9cff334863ff7c8b
  43a05d:	(bad)  
  43a05e:	jo     0x43a0ad
  43a060:	add    BYTE PTR [rax],al
  43a062:	add    BYTE PTR [rax],al
  43a064:	outs   dx,DWORD PTR ds:[rsi]
  43a065:	je     0x43a048
  43a067:	jmp    QWORD PTR [rdx-0x7e00125a]
  43a06d:	xchg   dh,ah
  43a06f:	(bad)  
  43a070:	jp     0x439ff2
  43a072:	in     al,0xff
  43a074:	pop    rbx
  43a075:	(bad)  
  43a076:	xlat   BYTE PTR ds:[rbx]
  43a077:	inc    DWORD PTR [rsi+0x40]
  43a07a:	xchg   bh,bh
	...
  43a0b4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  43a0b5:	xchg   ebp,eax
  43a0b6:	mov    esi,ecx
  43a0b8:	enter  0xaeb7,0xff
  43a0bc:	out    dx,eax
  43a0bd:	jmp    0x43a0a7
  43a0c2:	(bad)  
  43a0c3:	(bad)  
  43a0c4:	(bad)  
  43a0c5:	(bad)  
  43a0c6:	(bad)  
  43a0c7:	(bad)  
  43a0c8:	(bad)  
  43a0c9:	(bad)  
  43a0ca:	(bad)  
  43a0cb:	(bad)  
  43a0cc:	(bad)  
  43a0cd:	(bad)  
  43a0ce:	(bad)  
  43a0cf:	(bad)  
  43a0d0:	out    dx,eax
  43a0d1:	jmp    0xffffffffc716a0bb
  43a0d6:	mov    esi,0x7a889fff
  43a0db:	dec    DWORD PTR [rsi+0xb96b7a]
  43a0e1:	add    BYTE PTR [rax],al
  43a0e3:	add    BYTE PTR [rsi+0x7b],dh
  43a0e6:	jrcxz  0x43a0e7
  43a0e8:	lods   al,BYTE PTR ds:[rsi]
  43a0e9:	scas   al,BYTE PTR es:[rdi]
  43a0ea:	out    dx,eax
  43a0eb:	dec    DWORD PTR [rcx+rdx*4-0x74790017]
  43a0f2:	call   0xffffffffdaaa01f6
  43a0f7:	dec    DWORD PTR [rbp+0x48]
  43a0fa:	mov    ?,edi
	...
  43a134:	shr    BYTE PTR [rsi-0x1a12005c],0xe2
  43a13b:	(bad)  
  43a13c:	(bad)  
  43a13d:	(bad)  
  43a13e:	(bad)  
  43a13f:	call   rbx
  43a141:	sar    DWORD PTR [rax+0x627389ff],0xfe
  43a148:	mov    DWORD PTR [rbx+0x62],esi
  43a14b:	cmc    
  43a14c:	lods   eax,DWORD PTR ds:[rsi]
  43a14d:	pushf  
  43a14e:	(bad)  
  43a14f:	in     eax,0xfc
  43a151:	cld    
  43a152:	cld    
  43a153:	(bad)  
  43a154:	out    dx,eax
  43a155:	jmp    0xffffffff93eda13f
  43a15a:	xchg   bh,bh
  43a15c:	push   0xff384c
  43a161:	add    BYTE PTR [rax],al
  43a163:	add    BYTE PTR [rbp-0x7d],bh
  43a166:	in     eax,0xff
  43a168:	mov    ah,0xb7
  43a16a:	bnd call QWORD PTR [rsi-0x6f001365]
  43a171:	xchg   ebp,eax
  43a172:	(bad)  
  43a173:	jmp    QWORD PTR [rbp+0x6b]
  43a176:	fdiv   st(7),st
  43a178:	push   rbp
  43a179:	push   rcx
  43a17a:	xchg   esi,eax
  43a17b:	inc    DWORD PTR [rax]
	...
  43a1b1:	add    BYTE PTR [rax],al
  43a1b3:	add    bh,al
  43a1b5:	mov    bl,0xa9
  43a1b7:	(bad)  
  43a1b8:	(bad)  
  43a1b9:	(bad)  
  43a1ba:	(bad)  
  43a1bb:	(bad)  
  43a1bc:	(bad)  
  43a1be:	iret   
  43a1bf:	push   QWORD PTR [rbp+0x5b]
  43a1c2:	rex.RXB jmp QWORD PTR [r9+0x387888]
  43a1c9:	add    BYTE PTR [rax],al
  43a1cb:	add    BYTE PTR [rcx-0x1fc78778],ah
  43a1d1:	xlat   BYTE PTR ds:[rbx]
  43a1d2:	sar    edi,cl
  43a1d4:	(bad)  
  43a1d5:	(bad)  
  43a1d6:	(bad)  
  43a1d7:	push   QWORD PTR [rbp+0x6eff94a0]
  43a1dd:	push   rsp
  43a1de:	rex inc DWORD PTR [rax]
  43a1e1:	add    BYTE PTR [rax],al
  43a1e3:	add    BYTE PTR [rbp-0x43001876],al
  43a1e9:	mov    edi,0xbbb9fff4
  43a1ee:	repnz push QWORD PTR [rdi+rsi*4+0x6b65fff1]
  43a1f6:	fdiv   st(7),st
  43a1f8:	pop    rsp
  43a1f9:	pop    rdx
  43a1fa:	sahf   
  43a1fb:	inc    DWORD PTR [rax]
	...
  43a231:	add    BYTE PTR [rax],al
  43a233:	add    ah,cl
  43a235:	mov    ecx,0xffffffaf
  43a23a:	(bad)  
  43a23b:	(bad)  
  43a23c:	fmul   st,st(5)
  43a23e:	(bad)  
  43a23f:	push   QWORD PTR [rbp+0x5b]
  43a242:	rex.RXB inc DWORD PTR [r8]
	...
  43a24d:	add    BYTE PTR [rax],al
  43a24f:	add    dh,cl
  43a251:	sar    DWORD PTR [rax-0x1],0xff
  43a258:	mov    ch,0xa0
  43a25a:	xchg   esp,eax
  43a25b:	push   QWORD PTR [rdi+0x5d]
  43a25e:	rex.WX inc QWORD PTR [rax]
  43a261:	add    BYTE PTR [rax],al
  43a263:	add    BYTE PTR [rbp-0x13001876],al
  43a269:	in     al,dx
  43a26a:	sti    
  43a26b:	jmp    rdx
  43a26d:	jrcxz  0x43a269
  43a26f:	(bad)  
  43a270:	fcmovu st,st(3)
  43a272:	clc    
  43a273:	push   QWORD PTR [rdi+rsi*4+0x5a5cfff1]
  43a27a:	sahf   
  43a27b:	inc    DWORD PTR [rax]
	...
  43a2b1:	add    BYTE PTR [rax],al
  43a2b3:	add    ch,al
  43a2b5:	mov    al,0xa5
  43a2b7:	(bad)  
  43a2b8:	(bad)  
  43a2b9:	(bad)  
  43a2ba:	(bad)  
  43a2bb:	(bad)  
  43a2bc:	(bad)  
  43a2bd:	(bad)  
  43a2be:	(bad)  
  43a2bf:	push   QWORD PTR [rbp+0x75ff94a0]
  43a2c5:	pop    rbx
  43a2c6:	rex.RXB inc DWORD PTR [r8]
  43a2c9:	add    BYTE PTR [rax],al
  43a2cb:	add    BYTE PTR [rbx-0x9484],dl
  43a2d1:	(bad)  
  43a2d2:	(bad)  
  43a2d3:	(bad)  
  43a2d4:	(bad)  
  43a2d5:	(bad)  
  43a2d6:	(bad)  
  43a2d7:	push   QWORD PTR [rbp-0x5c006b60]
  43a2dd:	xchg   ecx,eax
  43a2de:	or     esi,0x0
  43a2e1:	add    BYTE PTR [rax],al
  43a2e3:	add    BYTE PTR [rbx-0x7300115a],ah
  43a2e9:	jnp    0x43a362
  43a2eb:	jmp    FWORD PTR [rcx-0x73006963]
  43a2f1:	cmp    DWORD PTR [rbx-0x1],0xff373f4c
  43a2f8:	jge    0x43a376
  43a2fa:	mov    esp,0xff
	...
  43a333:	add    BYTE PTR [rdx-0x34cd6a5e],bh
  43a339:	mov    eax,0xfffffcad
  43a33e:	(bad)  
  43a33f:	(bad)  
  43a340:	(bad)  
  43a341:	(bad)  
  43a342:	(bad)  
  43a343:	push   QWORD PTR [rbp+0x5b]
  43a346:	rex.RXB inc DWORD PTR [r8]
  43a349:	add    BYTE PTR [rax],al
  43a34b:	add    bh,bh
  43a34d:	(bad)  
  43a34e:	(bad)  
  43a34f:	(bad)  
  43a350:	(bad)  
  43a351:	(bad)  
  43a352:	(bad)  
  43a353:	inc    esp
  43a355:	mov    bh,0xad
  43a357:	jmp    FWORD PTR [rcx-0x6400796c]
  43a35d:	(bad)  
  43a35e:	jno    0x43a3b4
  43a360:	add    BYTE PTR [rax],al
  43a362:	add    BYTE PTR [rax],al
  43a364:	mov    ecx,0x8746f2bb
  43a369:	je     0x43a3d4
  43a36b:	(bad)  
  43a36c:	fcom   st(4)
  43a36e:	sar    edi,1
  43a370:	xchg   esi,eax
  43a371:	mov    WORD PTR [rdi+0x373f4cff],es
  43a377:	(bad)  
  43a378:	mov    ecx,0x59f2bb
	...
  43a3b5:	add    BYTE PTR [rax],al
  43a3b7:	add    BYTE PTR [rcx-0x39c78778],ah
  43a3bd:	mov    dl,0xa7
  43a3bf:	push   QWORD PTR [rcx-0x5b007266]
  43a3c5:	mov    edi,DWORD PTR [rbx-0x1]
  43a3c8:	add    BYTE PTR [rax],al
  43a3ca:	add    BYTE PTR [rax],al
  43a3cc:	(bad)  
  43a3cd:	mov    dl,0xa7
  43a3cf:	push   QWORD PTR [rcx-0x5c007266]
  43a3d5:	mov    bh,BYTE PTR [rdx-0x5]
  43a3d8:	movabs eax,ds:0x387888
  43a3e1:	add    BYTE PTR [rax],al
  43a3e3:	add    BYTE PTR [rcx-0x68e50d45],bh
  43a3e9:	xchg   BYTE PTR [rdx-0x2a282301],al
  43a3ef:	call   FWORD PTR [rbx+0x4cff8a91]
  43a3f5:	rex cmp edi,edi
  43a3f8:	mov    ecx,0x1af2bb
	...
  43a465:	add    BYTE PTR [rax],al
  43a467:	add    BYTE PTR [rsi-0x1e007f75],bl
  43a46d:	fcmovnu st,st(2)
  43a46f:	jmp    QWORD PTR [rbx+0x54ff9098]
  43a475:	rex.RXB
  43a476:	rex inc DWORD PTR [rax]
	...
  43a485:	add    BYTE PTR [rax],al
  43a487:	add    BYTE PTR [rdi+0x42],cl
  43a48a:	cmp    DWORD PTR [rsi+0x0],eax
	...
  43a4cd:	add    BYTE PTR [rax],al
  43a4cf:	add    BYTE PTR [rsi-0x7bac7f75],bl
  43a4d5:	jno    0x43a53c
  43a4d7:	(bad)  
  43a4d8:	jge    0x43a543
  43a4da:	pop    rdi
  43a4db:	call   FWORD PTR [rsi+0x53808b]
  43a4e1:	add    BYTE PTR [rax],al
  43a4e3:	add    BYTE PTR [rdi+0x42],cl
  43a4e6:	cmp    DWORD PTR [rcx],esi
  43a4e8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  43a4e9:	xchg   ebx,eax
  43a4ea:	mov    edi,edi
  43a4ec:	iret   
  43a4ed:	mov    bl,0xff
  43a4f0:	lods   al,BYTE PTR ds:[rsi]
  43a4f1:	movabs al,ds:0x424fff4b5361ff98
  43a4fa:	cmp    DWORD PTR [rcx],esi
  43a4fc:	add    BYTE PTR [rax],al
  43a4fe:	add    BYTE PTR [rax],al
  43a500:	rex.WRXB
  43a501:	rex.X cmp DWORD PTR [rsi+0x4f],eax
  43a505:	rex.X cmp edi,edi
  43a508:	pop    rax
  43a509:	rex.WB (bad) 
  43a50b:	inc    DWORD PTR [rax]
	...
  43a54d:	add    BYTE PTR [rax],al
  43a54f:	add    BYTE PTR [rsi-0x252e7f75],bl
  43a555:	ror    ebp,1
  43a557:	inc    esi
  43a559:	mov    edi,0x8ea3ffb9
  43a55e:	test   bh,bh
  43a560:	nop
  43a561:	jge    0x43a5d4
  43a563:	jmp    QWORD PTR [rdi-0x4e006f68]
  43a569:	lahf   
  43a56a:	xchg   esp,eax
  43a56b:	(bad)  
  43a56c:	fmul   st,st(7)
  43a56e:	leave  
  43a56f:	(bad)  
  43a570:	mov    esp,0x7bffa9af
  43a575:	push   0x61
  43a577:	call   FWORD PTR [rbx+0x4d]
  43a57a:	rex.R call FWORD PTR [rbx+0x4d]
  43a57e:	rex.R call FWORD PTR [rbx+0x4d]
  43a582:	rex.R call FWORD PTR [rbx+0x4d]
  43a586:	rex.R call FWORD PTR [rdi+rcx*2+0x48]
  43a58b:	inc    DWORD PTR [rax]
	...
  43a5cd:	add    BYTE PTR [rax],al
  43a5cf:	add    BYTE PTR [rsi-0x2e7f75],bl
  43a5d5:	(bad)  
  43a5d6:	(bad)  
  43a5d7:	jmp    rbp
  43a5d9:	(bad)  
  43a5db:	call   rax
  43a5dd:	(bad)  
  43a5de:	mov    ebp,0xced5e1ff
  43a5e3:	inc    edi
  43a5e5:	mov    bh,0xae
  43a5e7:	jmp    rsi
  43a5e9:	(bad)  
  43a5eb:	(bad)  
  43a5ec:	fcmovne st,st(5)
  43a5ee:	(bad)  
  43a5ef:	call   rax
  43a5f1:	mov    esi,0x8ea3ffb5
  43a5f6:	test   bh,bh
  43a5f8:	nop
  43a5f9:	jge    0x43a66c
  43a5fb:	inc    DWORD PTR [rcx+rsi*2-0x4940009b]
  43a602:	mov    cl,0xff
  43a604:	addr32 pop rsp
  43a606:	push   rbp
  43a607:	call   FWORD PTR [rbp+0x56]
  43a60a:	push   rbx
  43a60b:	fwait
	...
  43a650:	sahf   
  43a651:	mov    eax,DWORD PTR [rax-0x2f]
  43a657:	(bad)  
  43a658:	in     eax,dx
  43a659:	call   0xffffffffdd26a644
  43a65e:	fcos   
  43a660:	rol    ah,1
  43a662:	mov    ebp,0xced5e1ff
  43a667:	(bad)  
  43a668:	std    
  43a669:	cld    
  43a66a:	sti    
  43a66b:	push   rbp
  43a66d:	lock out dx,al
  43a66f:	(bad)  
  43a670:	(bad)  
  43a672:	retf   0xcbff
  43a675:	mov    bh,0xad
  43a677:	(bad)  
  43a678:	mov    edi,0xe3ff9aa7
  43a67d:	fcmovnbe st,st(7)
  43a67f:	dec    DWORD PTR [rbx+0x75ff727b]
  43a685:	push   0x66
  43a687:	jmp    FWORD PTR [rsi+0x66]
  43a68a:	(bad)  
  43a68b:	and    BYTE PTR [rax],al
	...
  43a6cd:	add    BYTE PTR [rax],al
  43a6cf:	add    BYTE PTR [rsi-0x2e7f75],bl
  43a6d5:	(bad)  
  43a6d6:	(bad)  
  43a6d7:	(bad)  
  43a6d8:	(bad)  
  43a6d9:	(bad)  
  43a6da:	(bad)  
  43a6db:	jmp    FWORD PTR [rsp+riz*4-0x463d005f]
  43a6e2:	mov    ah,0xff
  43a6e4:	(bad)  
  43a6e6:	(bad)  
  43a6e7:	(bad)  
  43a6e8:	sti    
  43a6e9:	stc    
  43a6ea:	stc    
  43a6eb:	(bad)  
  43a6ec:	std    
  43a6ed:	std    
  43a6ee:	cld    
  43a6ef:	push   rbx
  43a6f1:	out    dx,eax
  43a6f2:	in     al,dx
  43a6f3:	push   rcx
  43a6f5:	in     al,dx
  43a6f6:	jmp    0xffffffffe12892fa
  43a6fb:	call   QWORD PTR [rsi-0x6d007c76]
  43a701:	test   BYTE PTR [rsi-0x1],bh
  43a704:	jle    0x43a77b
  43a706:	jno    0x43a728
	...
  43a750:	sahf   
  43a751:	mov    eax,DWORD PTR [rax-0x7f7461ad]
  43a757:	xchg   esp,eax
  43a758:	sahf   
  43a759:	mov    eax,DWORD PTR [rax-0x75726b6c]
  43a75f:	rex.WR xchg rbp,rax
  43a761:	mov    cs,WORD PTR [rdx-0x2f2b22e4]
  43a767:	jmp    QWORD PTR [rbp-0x5b006562]
  43a76d:	pushf  
  43a76e:	cwde   
  43a76f:	jmp    QWORD PTR [rcx-0x61006b68]
  43a775:	xchg   ebp,eax
  43a776:	xchg   ecx,eax
  43a777:	call   QWORD PTR [rsi-0x76007674]
  43a77d:	cmp    DWORD PTR [rbp-0x15],0x10797d85
	...
  43a7e4:	xchg   ebp,eax
  43a7e5:	mov    cs,WORD PTR [rbx-0x747069f7]
  43a7eb:	xor    edx,DWORD PTR [rbp-0x6bcc7472]
  43a7f1:	lea    ecx,[rdx-0x78756dcd]
  43a7f7:	xor    ecx,DWORD PTR [rdi-0x74cc7b79]
  43a7fd:	cmp    DWORD PTR [rdi+0x9],0x0
	...
  43a919:	add    BYTE PTR [rax],al
  43a91b:	add    bh,bh
  43a91d:	(bad)  
  43a91e:	(bad)  
  43a91f:	(bad)  
  43a920:	(bad)  
  43a921:	(bad)  
  43a922:	(bad)  
  43a923:	(bad)  
  43a924:	inc    DWORD PTR [rbx-0x7c000040]
  43a92a:	sar    bh,0xff
  43a92d:	add    eax,0xffffffff
  43a930:	inc    DWORD PTR [rbx-0x7c000040]
  43a936:	sar    bh,0xff
  43a939:	add    eax,0xffffffff
  43a93c:	inc    DWORD PTR [rbx-0x7c000040]
  43a942:	sar    bh,0xff
  43a945:	add    eax,0xffffffff
  43a948:	inc    DWORD PTR [rbx+0x1ffffc0]
  43a94e:	sar    bh,0xfe
  43a951:	add    al,al
  43a953:	(bad)  
  43a954:	cld    
  43a955:	add    BYTE PTR [rax-0x1],al
  43a958:	cld    
  43a959:	add    BYTE PTR [rax-0x1],al
  43a95c:	cld    
  43a95d:	add    BYTE PTR [rax-0x1],al
  43a960:	cld    
  43a961:	adc    BYTE PTR [rax-0x1],al
  43a964:	cld    
  43a965:	cmp    BYTE PTR [rax-0x1],al
  43a968:	cld    
  43a969:	adc    BYTE PTR [rax-0x1],al
  43a96c:	cld    
  43a96d:	adc    BYTE PTR [rax-0x1],al
  43a970:	(bad)  
  43a971:	adc    al,al
  43a973:	(bad)  
  43a974:	(bad)  
  43a975:	jmp    rcx
  43a977:	out    dx,eax
  43a978:	(bad)  
  43a979:	clc    
  43a97a:	rex (bad) 
  43a97c:	(bad)  
  43a97d:	clc    
  43a97e:	add    BYTE PTR [rdi],cl
  43a980:	(bad)  
  43a981:	clc    
  43a982:	add    BYTE PTR [rdi],cl
  43a984:	(bad)  
  43a985:	clc    
  43a986:	add    BYTE PTR [rdi],cl
  43a988:	(bad)  
  43a989:	clc    
  43a98a:	add    BYTE PTR [rdi],bl
  43a98c:	(bad)  
  43a98d:	clc    
  43a98e:	add    BYTE PTR [rdi],bh
  43a990:	(bad)  
  43a991:	inc    eax
  43a993:	jg     0x43a994
  43a995:	(bad)  
  43a996:	(bad)  
  43a997:	(bad)  
  43a998:	(bad)  
  43a999:	(bad)  
  43a99a:	(bad)  
  43a99b:	jmp    FWORD PTR [rax]
  43a99d:	add    BYTE PTR [rax],al
  43a99f:	add    BYTE PTR [rax],dl
  43a9a1:	add    BYTE PTR [rax],al
  43a9a3:	add    BYTE PTR [rax],ah
  43a9a5:	add    BYTE PTR [rax],al
  43a9a7:	add    BYTE PTR [rcx],al
  43a9a9:	add    BYTE PTR [rax],ah
  43a9ab:	add    BYTE PTR [rax],al
  43a9ad:	add    BYTE PTR [rax],al
  43a9af:	add    BYTE PTR [rax+0x4],al
	...
  43aa12:	add    BYTE PTR [rax],al
  43aa14:	mov    ch,0x71
  43aa16:	rex.WRXB icebp 
  43aa18:	mov    cl,0x60
  43aa1a:	cmp    edi,edi
  43aa1c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  43aa1d:	pop    rax
  43aa1e:	xor    bh,ch
	...
  43aa28:	(bad)  
  43aa29:	adc    al,0x8e
  43aa2b:	rex.RX sub BYTE PTR [rcx],r10b
  43aa2e:	cmp    ch,0x28
  43aa31:	adc    DWORD PTR [rax-0x71ebd003],eax
  43aa37:	pop    rcx
	...
  43aa54:	mov    ebx,0xffff4c70
  43aa59:	mov    bl,0x8b
  43aa5b:	jmp    FWORD PTR [rdx+0xff385d]
  43aa61:	add    BYTE PTR [rax],al
  43aa63:	add    BYTE PTR [rax],al
  43aa65:	add    BYTE PTR [rax],al
  43aa67:	add    BYTE PTR [rdx+rsi*1],ch
  43aa6a:	(bad)  
  43aa6b:	jmp    FWORD PTR [rip+0x2dfd8f13]        # 0x2e413984
  43aa71:	adc    ecx,DWORD PTR [rdi-0x71ecd103]
  43aa77:	inc    BYTE PTR [rax]
	...
  43aa91:	add    BYTE PTR [rax],al
  43aa93:	add    ah,al
  43aa95:	jbe    0x43aae8
  43aa97:	(bad)  
  43aa98:	(bad)  
  43aa99:	mov    eax,0x62afff94
  43aa9e:	cmp    al,0xff
	...
  43aaa8:	(bad)  
  43aaa9:	rex.RB sar r15d,cl
  43aaac:	xor    esp,DWORD PTR [rax]
  43aaae:	sahf   
  43aaaf:	push   QWORD PTR [rbx]
  43aab1:	and    BYTE PTR [rsi-0x71ecd101],bl
  43aab7:	inc    DWORD PTR [rax]
	...
  43aad1:	add    BYTE PTR [rax],al
  43aad3:	add    dl,cl
  43aad5:	jge    0x43ab2f
  43aad7:	(bad)  
  43aad8:	(bad)  
  43aad9:	mov    esi,0x68b6ff9e
  43aade:	rex.XB inc DWORD PTR [r8]
  43aae1:	add    BYTE PTR [rax],al
  43aae3:	add    BYTE PTR [rax],al
  43aae5:	add    BYTE PTR [rax],al
  43aae7:	add    BYTE PTR [rdx+0x58],dl
  43aaea:	fdivr  st,st(7)
  43aaec:	cmp    BYTE PTR [rsi],ch
  43aaee:	lods   eax,DWORD PTR ds:[rsi]
  43aaef:	(bad)  
  43aaf0:	cmp    BYTE PTR [rsi],ch
  43aaf2:	lods   eax,DWORD PTR ds:[rsi]
  43aaf3:	jmp    FWORD PTR [rsi]
  43aaf5:	adc    ecx,DWORD PTR [rsi+0xff]
	...
  43ab13:	add    bh,cl
  43ab15:	sbb    DWORD PTR [rdi-0x1],0xfffffffe
  43ab19:	(bad)  
  43ab1a:	test   eax,0x4b71beff
  43ab1f:	inc    DWORD PTR [rax]
  43ab21:	add    BYTE PTR [rax],al
  43ab23:	add    BYTE PTR [rax],al
  43ab25:	add    BYTE PTR [rax],al
  43ab27:	add    BYTE PTR [rdi+0x6c],ah
  43ab2a:	(bad)  
  43ab2c:	ds cmp eax,0x3d3effbf
  43ab32:	mov    edi,0x8e132eff
  43ab37:	inc    DWORD PTR [rax]
	...
  43ab4d:	add    BYTE PTR [rax],al
  43ab4f:	add    BYTE PTR [rax-0x2aceb291],bh
  43ab55:	mov    ah,BYTE PTR [rsi-0x1]
  43ab58:	dec    ebp
  43ab5a:	mov    ah,0xff
  43ab5c:	mov    bh,0x74
  43ab5e:	push   rbx
  43ab5f:	(bad)  
  43ab60:	mov    eax,0x314d6f
  43ab65:	add    BYTE PTR [rax],al
  43ab67:	add    BYTE PTR [rbx-0x80],bh
  43ab6a:	in     al,0xff
  43ab6c:	rex.XB
  43ab6d:	rex.WR (bad) 
  43ab6f:	inc    DWORD PTR [rbx+0x4c]
  43ab72:	(bad)  
  43ab73:	push   QWORD PTR [rbx]
  43ab75:	and    BYTE PTR [rsi+0xff],bl
	...
  43ab8b:	add    BYTE PTR [rax-0x23ceb291],bh
  43ab91:	xchg   ebx,eax
  43ab92:	jno    0x43ab93
  43ab94:	std    
  43ab95:	loope  0x43ab69
  43ab97:	(bad)  
  43ab98:	std    
  43ab99:	loope  0x43ab6d
  43ab9b:	(bad)  
  43ab9c:	std    
  43ab9d:	(bad)  
  43ab9e:	mov    esi,0x4869adff
  43aba3:	(bad)  
  43aba4:	mov    eax,0x8e314d6f
  43aba9:	xchg   ebx,eax
  43abaa:	jmp    0xffffffffdd9cf4ae
  43abaf:	dec    DWORD PTR [rax+0x59]
  43abb2:	(bad)  
  43abb4:	xor    esp,DWORD PTR [rax]
  43abb6:	sahf   
  43abb7:	inc    DWORD PTR [rax]
	...
  43abc9:	add    BYTE PTR [rax],al
  43abcb:	add    dh,ah
  43abcd:	movabs al,ds:0xd5f6ffebf2fdff7e
  43abd6:	(bad)  
  43abd7:	call   rcx
  43abd9:	mov    ebp,DWORD PTR [rbx-0x1]
  43abdc:	sti    
  43abdd:	out    dx,al
  43abde:	out    0xff,al
  43abe0:	std    
  43abe1:	fadd   st,st(3)
  43abe3:	(bad)  
  43abe4:	mov    eax,0x9eff4d6f
  43abe9:	movabs ds:0xada1fff8cac3ffee,eax
  43abf2:	hlt    
  43abf3:	push   QWORD PTR [rbx]
  43abf5:	and    BYTE PTR [rsi+0xff],bl
	...
  43ac0b:	add    cl,ah
  43ac0d:	lahf   
  43ac0e:	jg     0x43ac0f
  43ac10:	sti    
  43ac11:	out    dx,al
  43ac12:	out    0xff,al
  43ac14:	loope  0x43abb0
  43ac16:	js     0x43ac17
  43ac18:	add    BYTE PTR [rax],al
  43ac1a:	add    BYTE PTR [rax],al
  43ac1c:	(bad)  
  43ac1d:	mov    esp,DWORD PTR [rdi-0x1]
  43ac20:	in     eax,0xc4
  43ac22:	mov    bl,0xff
  43ac24:	mov    edi,0x2fff5677
  43ac29:	adc    al,0x8e
  43ac2b:	xor    DWORD PTR [rbx+0x6f],edi
  43ac2e:	jmp    QWORD PTR gs:[rbx+0x53]
  43ac32:	rex.XB jmp FWORD PTR [r15]
  43ac35:	adc    al,0x8e
  43ac37:	pop    rcx
	...
  43ac4c:	mov    eax,0xe9314d6f
  43ac51:	movabs eax,ds:0xff7d9fe7ff7f
  43ac5a:	add    BYTE PTR [rax],al
  43ac5c:	loopne 0x43abf7
  43ac5e:	js     0x43ac5f
  43ac60:	mov    esi,0xb8ff5879
  43ac65:	outs   dx,DWORD PTR ds:[rsi]
  43ac66:	xor    QWORD PTR [r8],r8
  43ac69:	add    BYTE PTR [rax],al
  43ac6b:	add    cl,al
  43ac6d:	mov    ecx,0x4b59ffb1
  43ac72:	cmp    al,0xff
	...
  43aca0:	scas   eax,DWORD PTR es:[rdi]
  43aca1:	movabs ds:0xc95f6d7d9399,eax
  43acaa:	add    BYTE PTR [rax],al
  43acac:	mov    ah,0xa9
  43acae:	movabs eax,ds:0x1c232aff435363ff
  43acb7:	jns    0x43acb9
  43acb9:	add    BYTE PTR [rax],al
  43acbb:	add    BYTE PTR [rsi+0x5c],ch
  43acbe:	rex.WXB std 
	...
  43ace0:	leave  
  43ace1:	sar    BYTE PTR [rax-0x65554905],0xff
  43ace8:	movsxd edx,DWORD PTR [rbx+0x43]
  43aceb:	std    
  43acec:	mov    dh,0xb9
  43acee:	mov    dl,0xf5
  43acf0:	pushf  
  43acf1:	xchg   esp,eax
  43acf2:	mov    edx,esi
  43acf4:	pop    rdx
  43acf5:	push   rbp
  43acf6:	push   rcx
  43acf7:	int3   
  43acf8:	outs   dx,BYTE PTR ds:[rsi]
  43acf9:	pop    rsp
  43acfa:	rex.WXB std 
  43acfc:	movabs ds:0xfb949a,eax
	...
  43ad1d:	add    BYTE PTR [rax],al
  43ad1f:	add    cl,cl
  43ad21:	sar    BYTE PTR [rax-0x160f0b17],0xfe
  43ad28:	jl     0x43ad9c
  43ad2a:	push   0xffffffffe5eceaef
  43ad2f:	cmc    
  43ad30:	ror    ebx,1
  43ad32:	ret    0xadf6
  43ad35:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  43ad36:	movabs ds:0xa1acbef271757af6,al
  43ad3f:	sbb    al,BYTE PTR [rax]
	...
  43ad5d:	add    BYTE PTR [rax],al
  43ad5f:	add    cl,bl
  43ad61:	ror    ch,cl
  43ad63:	out    dx,eax
  43ad64:	mov    esp,0xfeacb4
  43ad69:	add    BYTE PTR [rax],al
  43ad6b:	add    BYTE PTR [rdi-0x6f476860],ah
  43ad71:	mov    al,BYTE PTR [rdx+0x62686dbe]
  43ad77:	retf   
  43ad78:	mov    esi,0x1aa1ac
	...
  43adc1:	add    BYTE PTR [rax],al
  43adc3:	add    bh,bh
  43adc5:	inc    DWORD PTR [rax]
  43adc7:	add    cl,dh
  43adc9:	xchg   DWORD PTR [rax],eax
  43adcb:	add    cl,dh
  43adcd:	xchg   DWORD PTR [rax],eax
  43adcf:	add    cl,dh
  43add1:	xchg   DWORD PTR [rax],eax
  43add3:	add    cl,dh
  43add5:	xchg   DWORD PTR [rax],eax
  43add7:	add    cl,dh
  43add9:	xchg   DWORD PTR [rax],eax
  43addb:	add    al,ah
  43addd:	xchg   DWORD PTR [rax],eax
  43addf:	add    al,al
  43ade1:	(bad)  
  43ade2:	add    BYTE PTR [rax],al
  43ade4:	rol    BYTE PTR [rdi],0x0
  43ade7:	add    ah,al
  43ade9:	(bad)  
  43adea:	add    BYTE PTR [rax],al
  43adec:	(bad)  
  43aded:	rex.WRXB add BYTE PTR [r8],r8b
  43adf0:	inc    BYTE PTR [rbp+0x0]
  43adf3:	add    dh,bh
  43adf5:	add    DWORD PTR [rax],eax
  43adf7:	add    dh,bh
  43adf9:	add    DWORD PTR [rax],eax
  43adfb:	add    dh,bh
  43adfd:	rex.XB add BYTE PTR [r8],al
  43ae00:	(bad)  
  43ae01:	inc    DWORD PTR [rax]
  43ae03:	add    BYTE PTR [rbx],cl
  43ae05:	add    BYTE PTR [rcx],al
  43ae08:	add    BYTE PTR [rax],al
  43ae0a:	add    bh,bh
  43ae0c:	(bad)  
  43ae0d:	(bad)  
  43ae0e:	inc    DWORD PTR [rcx]
  43ae10:	add    BYTE PTR [rax],al
  43ae12:	add    BYTE PTR [rax],al
  43ae14:	add    BYTE PTR [rax],al
  43ae16:	add    BYTE PTR [rdx+rax*1],cl
  43ae19:	add    BYTE PTR [rax],al
  43ae1b:	add    BYTE PTR [rcx+0x53],dl
  43ae1e:	jns    0x43ae93
  43ae20:	je     0x43ae87
  43ae22:	ins    DWORD PTR es:[rdi],dx
  43ae23:	cs rex.R jb 0x43ae88
  43ae27:	ja     0x43ae92
  43ae29:	outs   dx,BYTE PTR ds:[rsi]
  43ae2a:	addr32 sub al,0x20
  43ae2d:	push   rsi
  43ae2e:	gs jb  0x43aea4
  43ae31:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  43ae38:	xor    BYTE PTR cs:[rsi],ch
  43ae3b:	xor    BYTE PTR [rax+riz*1],ch
  43ae3e:	rex.XB jne 0x43aead
  43ae41:	je     0x43aeb8
  43ae43:	jb     0x43aeaa
  43ae45:	cmp    eax,0x7475656e
  43ae4a:	jb     0x43aead
  43ae4c:	ins    BYTE PTR es:[rdi],dx
  43ae4d:	sub    al,0x20
  43ae4f:	push   rax
  43ae50:	jne    0x43aeb4
  43ae52:	ins    BYTE PTR es:[rdi],dx
  43ae53:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  43ae5a:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  43ae5e:	(bad)  
  43ae5f:	xor    BYTE PTR [rbx],dh
  43ae61:	xor    ax,0x3766
  43ae65:	xor    WORD PTR [rcx],si
  43ae68:	fs xor eax,0x61336130
  43ae6e:	add    eax,0x1
  43ae73:	adc    edx,DWORD PTR [rbx+0x79]
  43ae76:	jae    0x43aeec
  43ae78:	gs ins DWORD PTR es:[rdi],dx
  43ae7a:	cs rex.R jb 0x43aedf
  43ae7e:	ja     0x43aee9
  43ae80:	outs   dx,BYTE PTR ds:[rsi]
  43ae81:	movsxd rbp,DWORD PTR cs:[r15d+0x6e]
  43ae87:	add    al,BYTE PTR [rax]
  43ae89:	add    BYTE PTR [rax],al
  43ae8b:	or     BYTE PTR [rcx+0x63],cl
  43ae8e:	outs   dx,DWORD PTR ds:[rsi]
  43ae8f:	outs   dx,BYTE PTR ds:[rsi]
  43ae90:	rex.R (bad) 
  43ae92:	je     0x43aef5
  43ae94:	or     BYTE PTR [rcx+0x63],cl
  43ae97:	outs   dx,DWORD PTR ds:[rsi]
  43ae98:	outs   dx,BYTE PTR ds:[rsi]
  43ae99:	push   rbx
  43ae9a:	imul   edi,DWORD PTR [rdx+0x65],0x13020407
  43aea1:	push   rbx
  43aea2:	jns    0x43af17
  43aea4:	je     0x43af0b
  43aea6:	ins    DWORD PTR es:[rdi],dx
  43aea7:	cs rex.R jb 0x43af0c
  43aeab:	ja     0x43af16
  43aead:	outs   dx,BYTE PTR ds:[rsi]
  43aeae:	addr32 cs push rbx
  43aeb1:	imul   edi,DWORD PTR [rdx+0x65],0x2
  43aeb8:	add    al,BYTE PTR [rax]
  43aeba:	add    BYTE PTR [rax],al
  43aebc:	or     DWORD PTR [rbx],eax
  43aebe:	add    BYTE PTR [rax],al
  43aec0:	add    BYTE PTR [rip+0xfffffffffffffffc],al        # 0x43aec2
  43aec6:	adc    edx,DWORD PTR [rbx+0x79]
  43aec9:	jae    0x43af3f
  43aecb:	gs ins DWORD PTR es:[rdi],dx
  43aecd:	cs rex.R jb 0x43af32
  43aed1:	ja     0x43af3c
  43aed3:	outs   dx,BYTE PTR ds:[rsi]
  43aed4:	addr32 cs push rbx
  43aed7:	imul   edi,DWORD PTR [rdx+0x65],0x2
  43aede:	add    eax,0x74646977
  43aee3:	push   0x69656806
  43aee8:	addr32 push 0x8000074
  43aeee:	or     BYTE PTR [rdx],al
	...
  43aef8:	add    BYTE PTR [rax],al
  43aefa:	add    BYTE PTR [rdi],cl
  43aefc:	add    eax,DWORD PTR [rax]
  43aefe:	add    BYTE PTR [rax],al
  43af00:	xchg   esi,eax
  43af01:	(bad)  
  43af02:	add    BYTE PTR [rax],al
  43af04:	add    al,BYTE PTR [rax]
  43af06:	add    BYTE PTR [rcx],al
  43af08:	add    BYTE PTR [rsi],al
  43af0a:	add    BYTE PTR [rax],ah
  43af0c:	and    BYTE PTR [rax],dl
  43af0e:	add    BYTE PTR [rcx],al
  43af10:	add    BYTE PTR [rax+rax*1],al
  43af13:	call   0x6643af1a
  43af18:	add    BYTE PTR [rax],al
  43af1a:	add    BYTE PTR [rax],dl
  43af1c:	adc    BYTE PTR [rax],dl
  43af1e:	add    BYTE PTR [rcx],al
  43af20:	add    BYTE PTR [rax+rax*1],al
  43af23:	sub    BYTE PTR [rcx],al
  43af25:	add    BYTE PTR [rax],al
  43af27:	rex.WRX add r8,QWORD PTR [rax]
  43af2a:	add    BYTE PTR [rax],ah
  43af2c:	and    BYTE PTR [rax],al
  43af2e:	add    BYTE PTR [rcx],al
  43af30:	add    BYTE PTR [rax],cl
  43af32:	add    BYTE PTR [rax+0x76000008],ch
  43af38:	add    al,0x0
  43af3a:	add    BYTE PTR [rax],dl
  43af3c:	adc    BYTE PTR [rax],al
  43af3e:	add    BYTE PTR [rcx],al
  43af40:	add    BYTE PTR [rax],cl
  43af42:	add    BYTE PTR [rax+0x5],ch
  43af45:	add    BYTE PTR [rax],al
  43af47:	(bad)  
  43af48:	or     eax,0x20200000
  43af4d:	add    BYTE PTR [rax],al
  43af4f:	add    DWORD PTR [rax],eax
  43af51:	and    BYTE PTR [rax],al
  43af53:	test   al,0x10
  43af55:	add    BYTE PTR [rax],al
  43af57:	xchg   BYTE PTR [rdx],dl
  43af59:	add    BYTE PTR [rax],al
  43af5b:	adc    BYTE PTR [rax],dl
  43af5d:	add    BYTE PTR [rax],al
  43af5f:	add    DWORD PTR [rax],eax
  43af61:	and    BYTE PTR [rax],al
  43af63:	push   0x2e000004
  43af68:	and    eax,DWORD PTR [rax]
  43af6a:	add    BYTE PTR [rax],ch
  43af6c:	add    BYTE PTR [rax],al
  43af6e:	add    BYTE PTR [rax],ah
  43af70:	add    BYTE PTR [rax],al
  43af72:	add    BYTE PTR [rax+0x0],al
  43af75:	add    BYTE PTR [rax],al
  43af77:	add    DWORD PTR [rax],eax
  43af79:	add    al,0x0
  43af7b:	add    BYTE PTR [rax],al
  43af7d:	add    BYTE PTR [rax],al
  43af7f:	add    BYTE PTR [rdx],al
	...
  43af99:	add    BYTE PTR [rax],0x0
  43af9c:	add    BYTE PTR [rax],0x0
  43af9f:	add    BYTE PTR [rax+0x800080],al
  43afa5:	add    BYTE PTR [rax],al
  43afa7:	add    BYTE PTR [rax],0x80
  43afaa:	add    BYTE PTR [rax-0x7fffff80],al
  43afb0:	add    BYTE PTR [rax-0x3f3f4000],0x0
  43afb7:	add    BYTE PTR [rax],al
  43afb9:	inc    DWORD PTR [rax]
  43afbb:	add    bh,bh
  43afbd:	add    BYTE PTR [rax],al
  43afbf:	add    bh,bh
  43afc1:	inc    DWORD PTR [rax]
  43afc3:	inc    DWORD PTR [rax]
  43afc5:	add    BYTE PTR [rax],al
  43afc7:	inc    DWORD PTR [rax]
  43afc9:	inc    DWORD PTR [rax]
  43afcb:	(bad)  
  43afcc:	inc    DWORD PTR [rax]
  43afce:	add    bh,bh
  43afd0:	(bad)  
  43afd1:	inc    DWORD PTR [rax]
	...
  43afdb:	(bad)  
  43afdc:	and    dh,BYTE PTR [rdx+0x36]
  43afdf:	and    esp,DWORD PTR [rbx+0x62]
  43afe2:	add    BYTE PTR ss:[rax],al
  43afe5:	add    BYTE PTR [rax],al
  43afe7:	add    BYTE PTR [rax],al
  43afe9:	add    BYTE PTR [rax],al
  43afeb:	(bad)  
  43afec:	jae    0x43b061
  43afee:	movsxd esp,DWORD PTR [rdx+0x72]
  43aff1:	and    eax,DWORD PTR ss:[rax]
  43aff4:	add    BYTE PTR [rax],al
  43aff6:	add    BYTE PTR [rax],al
  43aff8:	add    BYTE PTR [rax],al
  43affa:	add    BYTE PTR [rax+0x77],bh
  43affd:	es ja  0x43b033
  43b000:	(bad)  
  43b001:	(bad)  
  43b002:	add    BYTE PTR ss:[rax],al
  43b005:	(bad)  
  43b006:	add    BYTE PTR [rax],al
  43b008:	add    BYTE PTR [rax],al
  43b00a:	add    BYTE PTR [rax],ch
  43b00c:	jp     0x43b086
  43b00e:	and    esi,DWORD PTR [rsi+0x3a]
  43b011:	jb     0x43b076
  43b013:	add    BYTE PTR [rsp+rsi*2],al
  43b016:	add    BYTE PTR [rax],al
  43b018:	add    BYTE PTR [rax],al
  43b01a:	add    BYTE PTR [rdi],ch
  43b01c:	(bad)  
  43b01d:	clc    
  43b01e:	(bad)  
  43b01f:	jp     0x43b098
  43b021:	xor    esp,DWORD PTR [rsi+0x60c76700]
  43b027:	add    BYTE PTR [rax],al
  43b029:	add    BYTE PTR [rax],al
  43b02b:	js     0x43afbc
  43b02d:	dec    DWORD PTR [rax+0x72638870]
  43b033:	or     al,0x8e
  43b035:	jl     0x43b0ad
  43b037:	add    BYTE PTR [rax],al
  43b039:	add    BYTE PTR [rdi],dl
  43b03b:	js     0x43b0b8
  43b03d:	(bad)  
  43b03e:	clc    
  43b03f:	vpperm ymm1,ymm11,YMMWORD PTR [r14+0x40e4c8c8],ymm0
  43b049:	(bad)  
  43b04a:	jae    0x43b084
  43b04c:	mov    bh,BYTE PTR [rdi-0x1]
  43b04f:	(bad)  
  43b050:	clc    
  43b051:	(bad)  
  43b052:	add    BYTE PTR es:[rax-0x19],bh
  43b056:	rol    BYTE PTR [rax],0x73
  43b059:	clc    
  43b05a:	mov    BYTE PTR [rax-0x78],bh
  43b05d:	ja     0x43b05e
  43b05f:	(bad)  
  43b060:	clc    
  43b061:	jae    0x43b0c6
  43b063:	add    BYTE PTR [rax+rcx*4-0x70407840],cl
  43b06a:	cmp    edi,DWORD PTR [rax+0x78]
  43b06d:	movabs ds:0x8e0e00a7778fffff,eax
  43b076:	ja     0x43b0f0
  43b078:	(bad)  
  43b079:	pop    QWORD PTR [rdi-0x707888]
  43b07f:	(bad)  
  43b080:	clc    
  43b081:	jp     0x43b0f5
  43b083:	add    BYTE PTR [rax],cl
  43b085:	mov    bh,al
  43b087:	mov    edi,DWORD PTR [rdi-0x71]
  43b08a:	cmp    BYTE PTR [rsi+0x68],dh
  43b08d:	scas   eax,DWORD PTR es:[rdi]
  43b08e:	(bad)  
  43b08f:	(bad)  
  43b090:	push   QWORD PTR [rdi+0x37]
  43b093:	add    BYTE PTR [rax],al
  43b095:	iret   
  43b096:	mov    es,edi
  43b098:	(bad)  
  43b099:	pop    QWORD PTR [rdi+0x78888867]
  43b09f:	js     0x43b119
  43b0a1:	mov    dh,BYTE PTR [rdx+0x0]
  43b0a4:	add    BYTE PTR [rax+0x76768c88],cl
  43b0aa:	jl     0x43b124
  43b0ac:	mov    BYTE PTR [rax-0x77777778],cl
  43b0b2:	jb     0x43b0b4
  43b0b4:	add    BYTE PTR [rax],cl
  43b0b6:	call   0xffffffffc7cb3943
  43b0bb:	jbe    0x43b0f3
  43b0bd:	(bad)  
  43b0be:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  43b0bf:	jp     0x43b13b
  43b0c1:	jp     0x43b13d
  43b0c3:	add    BYTE PTR [rax],al
  43b0c5:	add    BYTE PTR [rax],cl
  43b0c7:	(bad)  
  43b0c8:	(bad)  
  43b0c9:	enter  0x878b,0x33
  43b0cd:	jae    0x43b142
  43b0cf:	(bad)  
  43b0d0:	xor    esi,DWORD PTR [rcx+0x0]
  43b0d3:	add    BYTE PTR [rax],al
  43b0d5:	add    BYTE PTR [rdi],al
  43b0d7:	mov    BYTE PTR [rdi+0x718b88ff],cl
  43b0dd:	(bad)  
  43b0de:	(bad)  
  43b0df:	xor    edx,DWORD PTR [rbx+0x35]
  43b0e2:	add    BYTE PTR [rax],al
  43b0e4:	add    BYTE PTR [rax],al
  43b0e6:	(bad)  
  43b0e7:	mov    ecx,DWORD PTR [rdi+0x31888bff]
  43b0ed:	and    DWORD PTR [rcx],esi
  43b0ef:	jae    0x43b128
  43b0f1:	xchg   ebx,eax
  43b0f2:	add    BYTE PTR [rax],al
  43b0f4:	add    BYTE PTR [rax],al
  43b0f6:	(bad)  
  43b0f7:	mov    BYTE PTR [rdi+0x378888f8],cl
  43b0fd:	ja     0x43b170
  43b0ff:	adc    esi,DWORD PTR [rdi]
  43b101:	xor    eax,0x0
  43b106:	(bad)  
  43b107:	mov    eax,0x3b373bbf
  43b10c:	pop    rbx
  43b10d:	mov    BYTE PTR [rax],bh
  43b10f:	jno    0x43b122
  43b111:	xor    DWORD PTR [rax],eax
  43b113:	add    BYTE PTR [rax],al
  43b115:	add    BYTE PTR [rdi],al
  43b117:	mov    BYTE PTR [rdi-0x78],dh
  43b11a:	mov    BYTE PTR [rdi-0x777487c9],dh
  43b120:	ja     0x43b156
  43b122:	add    BYTE PTR [rax],al
  43b124:	add    BYTE PTR [rax],al
  43b126:	mov    edi,DWORD PTR [rbx-0x78]
  43b129:	mov    BYTE PTR [rdi+0x787b7b89],dh
  43b12f:	mov    eax,DWORD PTR [rdi+0x3038]
  43b135:	js     0x43b0c6
  43b137:	(bad)  
  43b138:	mov    eax,DWORD PTR [rdi+0x77379793]
  43b13e:	jnp    0x43b1b7
  43b140:	mov    eax,0x800878b
  43b145:	mov    bh,0xb7
  43b147:	jns    0x43b0ca
  43b149:	cmp    DWORD PTR [rdi+0x37],esi
  43b14c:	cwde   
  43b14d:	cwde   
  43b14e:	mov    ch,0x89
  43b150:	xchg   DWORD PTR [rdi+0x77],esi
  43b156:	or     BYTE PTR [rbx+0x73],bh
  43b159:	jae    0x43b18e
  43b15b:	jae    0x43b195
  43b15d:	mov    bh,0x8b
  43b15f:	mov    esi,DWORD PTR [rdi+0x78]
  43b162:	add    BYTE PTR [rax],al
  43b164:	add    BYTE PTR [rax],al
  43b166:	jnp    0x43b0f0
  43b168:	mov    DWORD PTR [rbx-0x76888687],eax
  43b16e:	add    DWORD PTR [rdi+0x80797b],0x0
  43b175:	or     BYTE PTR [rax+0x3783b888],cl
  43b17b:	xor    esi,DWORD PTR [rdi]
  43b17d:	mov    eax,0x88879bb8
  43b182:	mov    bh,0x0
  43b184:	add    BYTE PTR [rax-0x1],bh
  43b187:	mov    BYTE PTR [rax-0x48887475],cl
  43b18d:	ja     0x43b146
  43b18f:	mov    BYTE PTR [rbx+0x8b88],cl
  43b195:	mov    bh,0x88
  43b197:	(bad)
  43b19b:	cwde   
  43b19c:	jns    0x43b156
  43b19e:	mov    BYTE PTR [rax+0x888888],bh
  43b1a4:	add    BYTE PTR [rax],al
  43b1a6:	mov    eax,0x888b88b8
  43b1ab:	mov    eax,0x88888838
  43b1b0:	mov    BYTE PTR [rax+0xb0],bh
  43b1b6:	add    BYTE PTR [rax],cl
  43b1b8:	mov    eax,0x70888f
  43b1bd:	jnp    0x43b147
  43b1bf:	mov    BYTE PTR [rdi+0x0],dh
  43b1c5:	add    BYTE PTR [rax],al
  43b1c7:	add    BYTE PTR [rax],al
  43b1c9:	jnp    0x43b246
  43b1cb:	add    BYTE PTR [rax],al
  43b1cd:	add    BYTE PTR [rbx+0x78],bh
  43b1d0:	add    BYTE PTR [rax],al
  43b1d2:	add    bh,bh
  43b1d4:	inc    DWORD PTR [rax]
  43b1d6:	add    bh,bh
  43b1d8:	inc    DWORD PTR [rax]
  43b1da:	add    bh,bh
  43b1dc:	inc    DWORD PTR [rax]
  43b1de:	add    bh,dh
  43b1e0:	inc    DWORD PTR [rax]
  43b1e2:	add    bl,ah
  43b1e4:	inc    DWORD PTR [rax]
  43b1e6:	add    cl,al
  43b1e8:	inc    DWORD PTR [rax]
  43b1ea:	add    BYTE PTR [rax+0xfc],al
  43b1f0:	jo     0x43b1f2
  43b1f2:	add    cl,al
  43b1f4:	rol    BYTE PTR [rax],0x0
  43b1f7:	rol    DWORD PTR [rax],0x0
  43b1fa:	add    al,ah
  43b1fc:	add    BYTE PTR [rax],al
  43b1fe:	add    al,ah
  43b200:	add    BYTE PTR [rax],al
  43b202:	add    al,dh
  43b204:	add    BYTE PTR [rax],al
  43b206:	add    al,dh
  43b208:	add    BYTE PTR [rax],al
  43b20a:	add    al,bh
  43b20c:	add    BYTE PTR [rax],al
  43b20e:	add    dh,bh
  43b210:	add    BYTE PTR [rax],al
  43b212:	add    edi,esi
  43b214:	add    BYTE PTR [rax],al
  43b216:	add    edi,esi
  43b218:	add    BYTE PTR [rax],al
  43b21a:	add    edi,esi
  43b21c:	add    BYTE PTR [rax],al
  43b21e:	add    edi,esi
  43b220:	add    BYTE PTR [rax],al
  43b222:	add    edi,esi
  43b224:	add    BYTE PTR [rax],al
  43b226:	add    edi,esp
  43b228:	add    BYTE PTR [rax],al
  43b22a:	add    eax,esi
  43b22c:	add    BYTE PTR [rax],al
  43b22e:	add    al,ah
  43b230:	add    BYTE PTR [rax],al
  43b232:	add    dh,bh
  43b234:	add    BYTE PTR [rax],al
  43b236:	add    edi,esp
  43b238:	add    BYTE PTR [rax],al
  43b23a:	add    eax,edi
  43b23c:	add    BYTE PTR [rax],al
  43b23e:	add    al,dh
  43b240:	add    BYTE PTR [rax],al
  43b242:	add    al,dh
  43b244:	add    BYTE PTR [rax],al
  43b246:	add    ah,bh
  43b248:	add    BYTE PTR [rax],al
  43b24a:	add    edi,edi
  43b24c:	xor    BYTE PTR [rax+0xf],0xff
  43b250:	lock cld 
  43b252:	(bad)  
  43b253:	sub    BYTE PTR [rax],al
  43b255:	add    BYTE PTR [rax],al
  43b257:	adc    BYTE PTR [rax],al
  43b259:	add    BYTE PTR [rax],al
  43b25b:	and    BYTE PTR [rax],al
  43b25d:	add    BYTE PTR [rax],al
  43b25f:	add    DWORD PTR [rax],eax
  43b261:	add    al,0x0
  43b263:	add    BYTE PTR [rax],al
  43b265:	add    BYTE PTR [rax],al
  43b267:	add    BYTE PTR [rax],0x0
	...
  43b27e:	add    BYTE PTR [rax],al
  43b280:	add    BYTE PTR [rax+0x800000],al
  43b286:	add    BYTE PTR [rax],al
  43b288:	add    BYTE PTR [rax+0x8000],0x0
  43b28f:	add    BYTE PTR [rax],0x80
  43b292:	add    BYTE PTR [rax-0x7fffff80],al
  43b298:	add    BYTE PTR [rax-0x3f3f4000],0x0
  43b29f:	add    BYTE PTR [rax],al
  43b2a1:	inc    DWORD PTR [rax]
  43b2a3:	add    bh,bh
  43b2a5:	add    BYTE PTR [rax],al
  43b2a7:	add    bh,bh
  43b2a9:	inc    DWORD PTR [rax]
  43b2ab:	inc    DWORD PTR [rax]
  43b2ad:	add    BYTE PTR [rax],al
  43b2af:	inc    DWORD PTR [rax]
  43b2b1:	inc    DWORD PTR [rax]
  43b2b3:	(bad)  
  43b2b4:	inc    DWORD PTR [rax]
  43b2b6:	add    bh,bh
  43b2b8:	(bad)  
  43b2b9:	inc    DWORD PTR [rax]
  43b2bb:	add    BYTE PTR [rdi-0x1],ah
  43b2be:	add    BYTE PTR [rax],al
  43b2c0:	add    BYTE PTR [rax],al
  43b2c2:	add    BYTE PTR [rsp+rbp*2],al
  43b2c5:	mov    bh,dh
  43b2c7:	(bad)  
  43b2c8:	and    esp,DWORD PTR [rdx]
  43b2ca:	add    BYTE PTR [rbp+0x7e],ah
  43b2cd:	enter  0x72f7,0x72
  43b2d1:	xor    BYTE PTR ss:[rax],al
  43b2d4:	(bad)  
  43b2d5:	push   rbx
  43b2d7:	scas   eax,DWORD PTR es:[rdi]
  43b2d8:	(bad)  
  43b2d9:	(bad)  
  43b2da:	and    BYTE PTR [rax],al
  43b2dc:	xchg   al,bh
  43b2de:	xchg   DWORD PTR [rdi+0x20f7f2],eax
  43b2e4:	or     BYTE PTR [rax-0x1],bh
  43b2e7:	idiv   DWORD PTR [rdi-0x9]
  43b2ea:	xor    BYTE PTR [rax],al
  43b2ec:	or     bh,ah
  43b2ee:	ja     0x43b277
  43b2f0:	(bad)  
  43b2f1:	clc    
  43b2f2:	and    BYTE PTR [rax],al
  43b2f4:	ud0    edi,edi
  43b2f7:	clc    
  43b2f8:	mov    BYTE PTR [rax-0x77f8ff60],cl
  43b2fe:	ja     0x43b37a
  43b300:	jp     0x43b37c
  43b302:	jo     0x43b304
  43b304:	or     edi,DWORD PTR [rbx+0x73]
  43b307:	xor    eax,DWORD PTR [rdi+0x78000031]
  43b30d:	jns    0x43b340
  43b30f:	xor    edi,DWORD PTR [rbx]
  43b311:	xchg   DWORD PTR [rax],esi
  43b313:	(bad)  
  43b314:	cmp    DWORD PTR [rbx],esi
  43b316:	adc    DWORD PTR [rax],edi
  43b318:	xchg   edi,eax
  43b319:	xchg   ebx,eax
  43b31a:	ja     0x43b31c
  43b31c:	mov    BYTE PTR [rcx-0x484cc8d0],dh
  43b322:	mov    al,0x8
  43b324:	mov    BYTE PTR [rax-0x74886cc9],cl
  43b32a:	xchg   DWORD PTR [rax],eax
  43b32c:	mov    eax,0xb8088b8b
  43b331:	xchg   DWORD PTR [rax+0x0],esi
  43b334:	add    BYTE PTR [rax+0x708b0070],cl
  43b33a:	add    bl,al
  43b33c:	inc    DWORD PTR [rax]
  43b33e:	add    BYTE PTR [rax+0x1],al
  43b344:	add    DWORD PTR [rax],eax
  43b346:	add    al,al
  43b348:	add    DWORD PTR [rax],eax
  43b34a:	add    al,al
  43b34c:	add    DWORD PTR [rax],eax
  43b34e:	add    al,ah
  43b350:	add    DWORD PTR [rax],eax
  43b352:	add    al,ah
  43b354:	add    DWORD PTR [rax],eax
  43b356:	add    al,ah
  43b358:	add    DWORD PTR [rax],eax
  43b35a:	add    al,ah
  43b35c:	add    DWORD PTR [rax],eax
  43b35e:	add    al,ah
  43b360:	add    eax,DWORD PTR [rax]
  43b362:	add    al,al
  43b364:	add    DWORD PTR [rax],eax
  43b366:	add    BYTE PTR [rax-0x40000000],al
  43b36c:	add    DWORD PTR [rax],eax
  43b36e:	add    BYTE PTR [rax-0x40000000],al
  43b374:	add    DWORD PTR [rax],0xc7f100
  43b37a:	add    BYTE PTR [rax],ch
  43b37c:	add    BYTE PTR [rax],al
  43b37e:	add    BYTE PTR [rax],ah
  43b380:	add    BYTE PTR [rax],al
  43b382:	add    BYTE PTR [rax+0x0],al
  43b385:	add    BYTE PTR [rax],al
  43b387:	add    DWORD PTR [rax],eax
  43b389:	or     BYTE PTR [rax],al
  43b38b:	add    BYTE PTR [rax],al
  43b38d:	add    BYTE PTR [rax],al
  43b38f:	add    BYTE PTR [rax+rax*1],al
	...
  43b39a:	add    BYTE PTR [rax],al
  43b39c:	add    DWORD PTR [rax],eax
  43b39e:	add    BYTE PTR [rax],al
  43b3a0:	add    DWORD PTR [rax],eax
  43b3a2:	add    BYTE PTR [rax],al
  43b3a4:	add    BYTE PTR [rax],al
  43b3a6:	add    BYTE PTR [rbx],dh
  43b3a8:	xor    esi,DWORD PTR [rbx]
  43b3aa:	add    BYTE PTR [rbx],dh
  43b3ac:	xor    ax,WORD PTR [rax]
  43b3af:	add    BYTE PTR [rbx],dh
  43b3b1:	data16 add BYTE PTR [rbx],dh
  43b3b4:	xor    esp,DWORD PTR [rsi+0x0]
  43b3b7:	add    BYTE PTR [rsi+0x66],ah
  43b3ba:	add    BYTE PTR [rbx],dh
  43b3bc:	data16 data16 add BYTE PTR [rsi+0x66],ah
  43b3c1:	data16 add BYTE PTR [rsi-0x6cffdfbf],al
  43b3c8:	rex.RXB and r8b,BYTE PTR [r8]
  43b3cb:	xchg   ebx,eax
  43b3cc:	rex.WX
  43b3cd:	add    BYTE PTR es:[rax-0x77ffd2ae],al
  43b3d4:	rex.WRXB xor r8b,BYTE PTR [r8]
  43b3d7:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  43b3d8:	push   rax
  43b3d9:	and    eax,0x2959ba00
  43b3de:	add    BYTE PTR [rsi-0x46ffc8a3],ch
  43b3e4:	cmp    eax,DWORD PTR fs:[rax]
  43b3e7:	(bad)  
  43b3e8:	fs cs add cl,al
  43b3ec:	(bad)  
  43b3ee:	add    bl,al
  43b3f0:	push   0x3f
  43b3f2:	add    cl,dl
  43b3f4:	xor    DWORD PTR [eax],eax
  43b3f7:	fisubr WORD PTR [rdi+0x36]
  43b3fa:	add    BYTE PTR [rbx-0x69ffbe99],cl
  43b400:	ins    BYTE PTR es:[rdi],dx
  43b401:	rex.WR add BYTE PTR [rax+rsi*2+0x7d8b0052],r14b
  43b409:	addr32 add bh,al
  43b40c:	ins    DWORD PTR es:[rdi],dx
  43b40d:	add    sil,cl
  43b410:	jno    0x43b455
  43b412:	add    bh,al
  43b414:	jp     0x43b464
  43b416:	add    cl,dl
  43b418:	jae    0x43b45e
  43b41a:	add    dl,dl
  43b41c:	jne    0x43b462
  43b41e:	add    ch,bl
  43b420:	jp     0x43b46c
  43b422:	add    al,bl
  43b424:	jnp    0x43b474
  43b426:	add    bh,cl
  43b428:	jg     0x43b481
  43b42a:	add    bh,ah
  43b42c:	jp     0x43b471
  43b42e:	add    al,ch
  43b430:	jp     0x43b474
  43b432:	add    al,ah
  43b434:	jge    0x43b481
  43b436:	add    dl,ch
  43b438:	jg     0x43b483
  43b43a:	add    BYTE PTR [rbx],dh
  43b43c:	cdq    
  43b43d:	xor    eax,DWORD PTR [rax]
  43b43f:	xor    ebx,DWORD PTR [rcx-0x7494ff9a]
  43b445:	pop    rbx
  43b446:	add    BYTE PTR [rsi-0x73],dh
  43b449:	pop    rdx
  43b44a:	add    BYTE PTR [rsi-0x67],ah
  43b44d:	data16 add BYTE PTR [rsi-0x34],ah
  43b451:	data16 add BYTE PTR [rdi-0x41ff816e],bl
  43b458:	lea    ebp,[rdi+0x0]
  43b45b:	out    0x82,eax
  43b45d:	rex.WRXB add r11b,r13b
  43b460:	test   BYTE PTR [rcx+0x0],dl
  43b463:	(bad)  
  43b464:	xchg   DWORD PTR [rsi+0x0],edx
  43b467:	(bad)  
  43b468:	mov    BYTE PTR [rsi+0x0],dl
  43b46b:	lock mov BYTE PTR [rax+rax*1-0xc],dl
  43b470:	mov    dl,BYTE PTR [rsi+0x0]
  43b473:	sti    
  43b474:	xchg   ecx,eax
  43b475:	pop    rbx
  43b476:	add    ch,bh
  43b478:	xchg   edx,eax
  43b479:	pop    rbp
  43b47a:	add    cl,dl
  43b47c:	xchg   edi,eax
  43b47d:	je     0x43b47f
  43b47f:	(bad)  
  43b480:	xchg   esi,eax
  43b481:	imul   eax,DWORD PTR [rax],0xfffffff0
  43b484:	xchg   esp,eax
  43b485:	gs add bh,bh
  43b488:	xchg   esi,eax
  43b489:	(bad)  
  43b48a:	add    bh,bh
  43b48c:	cwde   
  43b48d:	movsxd eax,DWORD PTR [rax]
  43b48f:	call   FWORD PTR [rsi-0x6111ff96]
  43b495:	jbe    0x43b497
  43b497:	jmp    QWORD PTR [rax-0x5c08ff93]
  43b49d:	jbe    0x43b49f
  43b49f:	jmp    QWORD PTR [rsi-0x5808ff8b]
  43b4a5:	jge    0x43b4a7
  43b4a7:	add    BYTE PTR [rsi-0x67],ah
  43b4aa:	add    BYTE PTR [rbx],dh
  43b4ac:	cwd    
  43b4ae:	add    BYTE PTR [rbx+0x76],dh
  43b4b1:	mov    BYTE PTR [rax],al
  43b4b3:	xor    ebx,DWORD PTR [rcx-0x6699ff67]
  43b4b9:	cdq    
  43b4ba:	add    BYTE PTR [rsi-0x34],ah
  43b4bd:	cdq    
  43b4be:	add    BYTE PTR [rbx],dh
  43b4c0:	cdq    
  43b4c1:	int3   
  43b4c2:	add    BYTE PTR [rsi-0x67],ah
  43b4c5:	int3   
  43b4c6:	add    BYTE PTR [rsi-0x34],ah
  43b4c9:	int3   
  43b4ca:	add    BYTE PTR [rdi-0x6aff7b66],ah
  43b4d0:	mov    al,0x81
  43b4d2:	add    BYTE PTR [rdx-0x57ff6053],ah
  43b4d8:	cdq    
  43b4d9:	movabs eax,ds:0x8aaaed00ada99000
  43b4e2:	add    bh,dh
  43b4e4:	stos   DWORD PTR es:[rdi],eax
  43b4e5:	add    DWORD PTR [rax],0xfffffff4
  43b4e8:	stos   DWORD PTR es:[rdi],eax
  43b4e9:	test   DWORD PTR [rax],eax
  43b4eb:	jmp    FWORD PTR [rbp-0x4b06ff80]
  43b4f1:	pop    QWORD PTR [rax]
  43b4f3:	out    dx,eax
  43b4f4:	mov    edx,0xb7fa009f
  43b4f9:	xchg   esp,eax
  43b4fa:	add    bh,bh
  43b4fc:	mov    eax,0xb9ff0093
  43b501:	xchg   esp,eax
  43b502:	add    bh,bh
  43b504:	mov    ebp,0xcc99009a
  43b509:	cdq    
  43b50a:	add    BYTE PTR [rax-0xff563a],bh
  43b510:	rcr    DWORD PTR [rdi-0x5e3e0100],0x0
  43b517:	cdq    
  43b518:	cdq    
  43b519:	int3   
  43b51a:	add    BYTE PTR [rax-0x66ff1541],bl
  43b520:	int3   
  43b521:	int3   
  43b522:	add    BYTE PTR [rcx-0x3fff0034],bl
  43b528:	rol    al,0x0
  43b52b:	int3   
  43b52c:	int3   
  43b52d:	int3   
  43b52e:	add    al,al
  43b530:	fadd   st(0),st
  43b532:	add    bh,dl
  43b534:	xlat   BYTE PTR ds:[rbx]
  43b535:	xlat   BYTE PTR ds:[rbx]
  43b536:	add    bl,dl
  43b538:	(bad)  
  43b53a:	add    ch,bl
  43b53c:	fstp   st(5)
  43b53e:	add    dh,al
  43b540:	(bad)  
  43b541:	out    dx,eax
  43b542:	add    dh,dl
  43b544:	out    0xe7,eax
  43b546:	add    ah,cl
  43b548:	(bad)  
  43b549:	inc    DWORD PTR [rax]
  43b54b:	jrcxz  0x43b530
  43b54d:	jrcxz  0x43b54f
  43b54f:	icebp  
  43b550:	icebp  
  43b551:	icebp  
  43b552:	add    al,dh
  43b554:	sti    
  43b555:	inc    DWORD PTR [rax]
	...
  43b79f:	(bad)  
  43b7a0:	(bad)  
  43b7a1:	inc    DWORD PTR [rax]
	...
  43b7b3:	add    al,BYTE PTR es:[rdx]
  43b7b6:	add    al,BYTE PTR [rdx]
  43b7b8:	add    al,BYTE PTR [rdx]
  43b7ba:	add    al,BYTE PTR [rdx]
  43b7bc:	add    al,BYTE PTR [rdx]
  43b7be:	add    al,BYTE PTR [rdx]
  43b7c0:	add    al,BYTE PTR [rdx]
  43b7c2:	add    al,BYTE PTR [rax]
	...
  43b7d0:	add    BYTE PTR [rax],al
  43b7d2:	add    BYTE PTR [rsi],ah
  43b7d4:	sub    ch,BYTE PTR [rdx]
  43b7d6:	(bad)  
  43b7d7:	(bad)  
  43b7d8:	(bad)  
  43b7d9:	es es es es es es es es add al,BYTE PTR es:[rax]
	...
  43b7f0:	add    BYTE PTR [rax],al
  43b7f2:	add    BYTE PTR [rsi],ah
  43b7f4:	movsxd ebp,DWORD PTR [rbx]
  43b7f6:	sub    ah,BYTE PTR [rdi]
  43b7f8:	add    ch,BYTE PTR [rdx]
  43b7fa:	sub    ah,BYTE PTR [rdi]
  43b7fc:	(bad)  
  43b7fd:	es (bad) 
  43b7ff:	es (bad) 
  43b801:	add    al,BYTE PTR es:[rax]
  43b804:	add    BYTE PTR [rax],al
  43b806:	add    BYTE PTR [rax],cl
	...
  43b810:	add    BYTE PTR [rax],al
  43b812:	add    BYTE PTR [rsi],ah
  43b814:	movsxd eax,DWORD PTR [rsi+0x2a]
  43b817:	add    ah,BYTE PTR [rcx+0x2]
  43b81a:	(bad)  
  43b81b:	sub    ah,BYTE PTR [rsi]
  43b81d:	(bad)  
  43b81e:	es (bad) 
  43b820:	es add al,BYTE PTR es:[rax]
  43b824:	add    BYTE PTR [rax],al
  43b826:	or     DWORD PTR [rdi],ecx
  43b828:	or     BYTE PTR [rax],al
	...
  43b832:	add    BYTE PTR [rsi],ah
  43b834:	movsxd eax,DWORD PTR [rsi+0x2]
  43b837:	data16 (bad) 
  43b839:	(bad)  
  43b83a:	add    ch,BYTE PTR [rdx]
  43b83c:	(bad)  
  43b83d:	(bad)  
  43b83e:	add    ah,BYTE PTR [rdi]
  43b840:	(bad)  
  43b841:	add    al,BYTE PTR es:[rax]
  43b844:	add    BYTE PTR [rsi],cl
  43b846:	sbb    edx,DWORD PTR [rbx]
  43b848:	adc    BYTE PTR [rax],cl
	...
  43b852:	add    BYTE PTR [rdx],ch
  43b854:	movsxd ebx,DWORD PTR [rcx-0x1]
  43b857:	jmp    FWORD PTR [rbx+0x62]
  43b85a:	(bad)  
  43b85b:	add    al,BYTE PTR [rcx]
  43b85d:	(bad)
  43b862:	add    al,BYTE PTR [rax]
  43b864:	adc    eax,0x1d1f2e32
  43b869:	sbb    cl,BYTE PTR [rax]
  43b86b:	add    BYTE PTR [rax],al
  43b86d:	add    BYTE PTR [rax],al
  43b86f:	add    BYTE PTR [rax],al
  43b871:	add    al,0x4
  43b873:	sub    ah,BYTE PTR [rbx+0x59]
  43b876:	rex.RX (bad) 
  43b878:	(bad)  
  43b879:	jmp    QWORD PTR [rcx+riz*2+0x64]
  43b87d:	fs (bad) 
  43b87f:	es (bad) 
  43b881:	add    dh,BYTE PTR es:[rcx]
  43b884:	and    bh,BYTE PTR [rcx]
  43b886:	xor    al,0x32
  43b888:	(bad)  
  43b889:	and    al,0x8
  43b88b:	or     BYTE PTR [rax],al
  43b88d:	add    BYTE PTR [rax],al
  43b88f:	rex.X
  43b890:	rex.X
  43b891:	rex.W
  43b892:	rex.RB (bad) 
  43b894:	movsxd ebx,DWORD PTR [rcx+0x46]
  43b897:	sub    edi,edi
  43b899:	(bad)  
  43b89a:	jmp    FWORD PTR [rbx+0x6b]
  43b89d:	imul   esp,DWORD PTR [rdx+0x27],0x2a
  43b8a1:	add    al,BYTE PTR es:[rax]
  43b8a4:	add    BYTE PTR [rbx],ah
  43b8a6:	cmp    edi,DWORD PTR [rdx]
  43b8a8:	xor    al,0xd
  43b8aa:	add    BYTE PTR [rax],al
  43b8ac:	add    BYTE PTR [rbp+0x42],al
  43b8af:	push   0x2a484568
  43b8b4:	movsxd ebx,DWORD PTR [rcx+0x59]
  43b8b7:	rex.RX sub r15b,dil
  43b8ba:	imul   edi,edi,0xffffffff
  43b8bd:	imul   esp,DWORD PTR [rdx+0x2a],0x27
  43b8c1:	add    al,BYTE PTR es:[rax]
  43b8c4:	add    BYTE PTR ds:0xe3d3f,bh
  43b8cb:	rex.RB
  43b8cc:	rex.RB
  43b8cd:	rex.W push 0x48486868
  43b8d3:	sub    ah,BYTE PTR [rbx+0x59]
  43b8d6:	pop    rcx
  43b8d7:	sub    al,BYTE PTR [rsi]
  43b8d9:	jmp    FWORD PTR [rbx-0x1]
  43b8dc:	ins    BYTE PTR es:[rdi],dx
  43b8dd:	imul   esp,DWORD PTR [rdx+rbp*1+0x2a],0x27
  43b8e2:	add    al,BYTE PTR [rax]
  43b8e4:	add    BYTE PTR [rax],al
  43b8e6:	cmp    BYTE PTR [rdi+0x52],dl
  43b8e9:	adc    al,0x19
  43b8eb:	rex.W pop rdi
  43b8ed:	pop    rdi
  43b8ee:	ins    BYTE PTR es:[rdi],dx
  43b8ef:	push   0x2a485f68
  43b8f4:	movsxd ebx,DWORD PTR [rcx+0x59]
  43b8f7:	rex.RX (bad) 
  43b8f9:	(bad)  
  43b8fa:	(bad)  
  43b8fb:	(bad)  
  43b8fc:	(bad)  
  43b8fd:	jmp    FWORD PTR [rdx+0x2a]
  43b900:	sub    esp,DWORD PTR [rdi]
  43b902:	add    al,BYTE PTR [rax]
  43b904:	add    BYTE PTR [rax],al
  43b906:	rex.WRXB push r11
  43b908:	push   rdi
  43b909:	adc    DWORD PTR ds:[rbp+0x48],ecx
  43b90d:	rex.W ins BYTE PTR es:[rdi],dx
  43b90f:	push   0x295f4868
  43b914:	sbb    al,0x16
  43b916:	rex.WXB
  43b917:	rex.RX (bad) 
  43b919:	(bad)  
  43b91a:	(bad)  
  43b91b:	(bad)  
  43b91c:	(bad)  
  43b91d:	(bad)  
  43b91e:	jmp    FWORD PTR [rbx]
  43b920:	sub    ah,BYTE PTR [rdi]
  43b922:	add    al,BYTE PTR [rax]
  43b924:	add    BYTE PTR [rax],al
  43b926:	add    BYTE PTR [rdi],dh
  43b928:	pop    rsp
  43b929:	pop    rax
  43b92a:	rex adc DWORD PTR [rdx+0x5f],ecx
  43b92e:	ins    BYTE PTR es:[rdi],dx
  43b92f:	push   0xa1f4c65
  43b934:	(bad)  
  43b935:	rex.WXB pop r9
  43b937:	pop    rcx
  43b938:	pop    rcx
  43b939:	pop    rcx
  43b93a:	pop    rcx
  43b93b:	pop    rcx
  43b93c:	pop    rcx
  43b93d:	pop    rcx
  43b93e:	pop    rcx
  43b93f:	pop    rcx
  43b940:	sub    ebp,DWORD PTR [rdx]
  43b942:	add    al,BYTE PTR [rax]
  43b944:	add    BYTE PTR [rax],al
  43b946:	add    BYTE PTR [rbp+rdx*2+0x5c],dl
  43b94a:	pop    rsp
  43b94b:	push   rax
  43b94c:	adc    DWORD PTR [rsi],ecx
  43b94e:	adc    bl,BYTE PTR [rip+0xb08211d]        # 0xb4bda71
  43b954:	pop    rdx
  43b955:	movsxd esp,DWORD PTR [rbx+0x63]
  43b958:	movsxd esp,DWORD PTR [rbx+0x63]
  43b95b:	movsxd esp,DWORD PTR [rbx+0x63]
  43b95e:	movsxd esp,DWORD PTR [rbx+0x63]
  43b961:	sub    eax,DWORD PTR [rdx]
  43b963:	add    BYTE PTR [rax],al
  43b965:	add    BYTE PTR [rax],al
  43b967:	add    BYTE PTR [rdi+0x50],cl
  43b96a:	pop    rsp
  43b96b:	pop    rsp
  43b96c:	pop    rsp
  43b96d:	pop    rsp
  43b96e:	pop    rax
  43b96f:	push   rdi
  43b970:	sub    eax,0x2a28430c
  43b975:	sub    ch,BYTE PTR [rdx]
  43b977:	sub    ch,BYTE PTR [rdx]
  43b979:	sub    ch,BYTE PTR [rdx]
  43b97b:	sub    ah,BYTE PTR [rsi]
  43b97d:	sub    ah,BYTE PTR [rsi]
  43b97f:	sub    ah,BYTE PTR [rsi]
  43b981:	es add BYTE PTR es:[rax],al
  43b985:	add    BYTE PTR [rax],al
  43b987:	add    BYTE PTR [rax],al
  43b989:	add    BYTE PTR [rsi],dh
  43b98b:	(bad)  
  43b98c:	and    edx,DWORD PTR [rip+0x5e2c1811]        # 0x5e6fd1a3
  43b992:	rex.WB pop r15
  43b994:	rex.W (bad) 
  43b996:	add    eax,DWORD PTR [rdx+0x6]
  43b999:	rex.X (bad) 
  43b99b:	rex.X
  43b99c:	rex.X
  43b99d:	rex.X
  43b99e:	rex.X
  43b99f:	rex.X add al,0x0
	...
  43b9aa:	rex.RB (bad) 
  43b9ac:	pop    rdi
  43b9ad:	(bad)  
  43b9ae:	ins    BYTE PTR es:[edi],dx
  43b9b0:	ins    BYTE PTR es:[rdi],dx
  43b9b1:	pop    rdi
  43b9b2:	(bad)  
  43b9b3:	pop    rdi
  43b9b4:	pop    rdi
  43b9b5:	(bad)  
  43b9b6:	add    eax,DWORD PTR [rsi]
  43b9b8:	rex.X (bad) 
  43b9ba:	rex.X
  43b9bb:	rex.X (bad) 
  43b9bd:	rex.X
  43b9be:	rex.X
  43b9bf:	rex.X add al,0x0
	...
  43b9ca:	rex.RB (bad) 
  43b9cc:	pop    rdi
  43b9cd:	(bad)  
  43b9ce:	push   0x5f5f6c6c
  43b9d3:	(bad)  
  43b9d4:	pop    rdi
  43b9d5:	(bad)  
  43b9d6:	add    eax,DWORD PTR [rbx]
  43b9d8:	add    eax,DWORD PTR [rdx+0x42]
  43b9db:	rex.X (bad) 
  43b9dd:	rex.B
  43b9de:	rex.X
  43b9df:	rex.X add al,0x0
	...
  43b9ea:	rex.RB pop r15
  43b9ec:	(bad)  
  43b9ed:	pop    rdi
  43b9ee:	ins    BYTE PTR es:[rdi],dx
  43b9ef:	ins    BYTE PTR es:[rdi],dx
  43b9f0:	push   0x5f5f6060
  43b9f5:	(bad)  
  43b9f6:	rex.RB
  43b9f7:	rex.RB
  43b9f8:	rex.RB (bad) 
  43b9fa:	add    eax,DWORD PTR [rbx]
  43b9fc:	rex.B (bad) 
  43b9fe:	rex.X add eax,0x4
  43ba04:	add    BYTE PTR [rax],al
  43ba06:	add    BYTE PTR [rax],al
  43ba08:	add    BYTE PTR [rax],al
  43ba0a:	rex.RB (bad) 
  43ba0c:	(bad)  
  43ba0d:	pop    rdi
  43ba0e:	push   0x45444848
  43ba13:	rex.X
  43ba14:	rex.RXB
  43ba15:	rex.X
  43ba16:	rex.W pop rdi
  43ba18:	pop    rdi
  43ba19:	rex.RB
  43ba1a:	rex.RB
  43ba1b:	add    r8d,DWORD PTR [r11]
  43ba1e:	add    eax,DWORD PTR [rip+0x4]        # 0x43ba28
  43ba24:	add    BYTE PTR [rax],al
  43ba26:	add    BYTE PTR [rax],al
  43ba28:	add    BYTE PTR [rax],al
  43ba2a:	rex.RB pop r15
  43ba2c:	rex.W
  43ba2d:	rex.W
  43ba2e:	rex.RB pop r15
  43ba30:	addr32 pop rdi
  43ba32:	(bad)  
  43ba33:	rex.W
  43ba34:	rex.W
  43ba35:	rex.X
  43ba36:	rex.R
  43ba37:	rex.W pop rdi
  43ba39:	pop    rdi
  43ba3a:	(bad)  
  43ba3b:	pop    rdi
  43ba3c:	rex.WRX
  43ba3d:	rex.RB
  43ba3e:	add    r8d,DWORD PTR [r8+rax*1]
  43ba42:	add    BYTE PTR [rax],al
  43ba44:	add    BYTE PTR [rax],al
  43ba46:	add    BYTE PTR [rax],al
  43ba48:	add    BYTE PTR [rax+0x48],cl
  43ba4b:	rex.W
  43ba4c:	rex.W
  43ba4d:	addr32 addr32 addr32 rex.WRX
  43ba51:	rex.W
  43ba52:	rex.W
  43ba53:	rex.W
  43ba54:	rex.X
  43ba55:	rex.X
  43ba56:	rex.W
  43ba57:	rex.W
  43ba58:	rex.W
  43ba59:	rex.RB
  43ba5a:	rex.W pop rdi
  43ba5c:	(bad)  
  43ba5d:	pop    rdi
  43ba5e:	rex.W
  43ba5f:	rex.RB
  43ba60:	rex.RB
  43ba61:	add    BYTE PTR [r8],r8b
  43ba64:	add    BYTE PTR [rax],al
  43ba66:	add    BYTE PTR [rax+0x48],cl
  43ba69:	imul   ebp,DWORD PTR [rax+0x67],0x48485f68
  43ba70:	rex.W
  43ba71:	rex.X
  43ba72:	rex.X
  43ba73:	rex.X
  43ba74:	rex.X
  43ba75:	rex.X
  43ba76:	rex.W
  43ba77:	rex.W
  43ba78:	rex.W
  43ba79:	rex.W
  43ba7a:	rex.W
  43ba7b:	rex.W
  43ba7c:	rex.RB
  43ba7d:	rex.W (bad) 
  43ba7f:	pop    rdi
  43ba80:	rex.W
  43ba81:	rex.WRX
  43ba82:	add    BYTE PTR [r8],r8b
  43ba85:	add    BYTE PTR [rax+0x48],cl
  43ba88:	rex.W
  43ba89:	rex.W
  43ba8a:	rex.W
  43ba8b:	rex.W
  43ba8c:	rex.W
  43ba8d:	rex.W
  43ba8e:	rex.X
  43ba8f:	rex.X
  43ba90:	rex.X
  43ba91:	rex.X
  43ba92:	rex.X
  43ba93:	rex.X
  43ba94:	rex.X
  43ba95:	rex.X
  43ba96:	rex.W
  43ba97:	rex.W
  43ba98:	rex.W
  43ba99:	rex.W
  43ba9a:	rex.W
  43ba9b:	rex.W
  43ba9c:	rex.W
  43ba9d:	rex.W
  43ba9e:	rex.RB
  43ba9f:	rex.W
  43baa0:	rex.RB
  43baa1:	rex.RB
  43baa2:	add    BYTE PTR [r8],r8b
  43baa5:	add    BYTE PTR [rax],al
  43baa7:	add    BYTE PTR [rax],al
  43baa9:	add    BYTE PTR [rbp+0x45],bl
  43baac:	rex.W
  43baad:	rex.R
  43baae:	rex.X
  43baaf:	rex.X
  43bab0:	rex.X
  43bab1:	rex.X
  43bab2:	rex.X
  43bab3:	rex.X
  43bab4:	rex.X
  43bab5:	rex.X
  43bab6:	rex.W
  43bab7:	rex.WB
  43bab8:	rex.W
  43bab9:	rex.WB
  43baba:	rex.W
  43babb:	rex.WB
  43babc:	rex.W
  43babd:	rex.RB
  43babe:	rex.W
  43babf:	rex.RB
  43bac0:	rex.W add BYTE PTR [rax],al
  43bac3:	add    BYTE PTR [rax],al
  43bac5:	add    BYTE PTR [rax],al
  43bac7:	add    BYTE PTR [rax],al
  43bac9:	rex.W
  43baca:	rex.WB (bad) 
  43bacc:	pop    rdi
  43bacd:	rex.W
  43bace:	rex.W
  43bacf:	rex.RB
  43bad0:	rex.X
  43bad1:	rex.X
  43bad2:	rex.X
  43bad3:	rex.X
  43bad4:	rex.X
  43bad5:	rex.X
  43bad6:	rex.W
  43bad7:	rex.W
  43bad8:	rex.W
  43bad9:	rex.W
  43bada:	rex.W
  43badb:	rex.W
  43badc:	rex.W
  43badd:	rex.W
  43bade:	rex.WB
  43badf:	rex.W
  43bae0:	rex.W
  43bae1:	rex.W add BYTE PTR [rax],al
  43bae4:	add    BYTE PTR [rax],al
  43bae6:	add    BYTE PTR [rax],al
  43bae8:	rex.W
  43bae9:	addr32 addr32 addr32 (bad) 
  43baed:	pop    rdi
  43baee:	(bad)  
  43baef:	rex.W
  43baf0:	rex.R
  43baf1:	rex.R
  43baf2:	rex.R
  43baf3:	rex.X
  43baf4:	rex.X
  43baf5:	rex.X
  43baf6:	rex.W
  43baf7:	rex.WB
  43baf8:	rex.W
  43baf9:	rex.W
  43bafa:	rex.WB
  43bafb:	rex.W
  43bafc:	rex.W
  43bafd:	rex.WB
  43bafe:	rex.W pop rdi
  43bb00:	pop    rdi
  43bb01:	rex.W
  43bb02:	rex.W add BYTE PTR [rax],al
  43bb05:	add    BYTE PTR [rax],al
  43bb07:	rex.W
  43bb08:	imul   ebp,DWORD PTR [ecx+0x67],0x5f5f6067
  43bb10:	rex.WB
  43bb11:	rex.W
  43bb12:	rex.W
  43bb13:	rex.R
  43bb14:	rex.R
  43bb15:	rex.R
  43bb16:	rex.W
  43bb17:	rex.W
  43bb18:	rex.W
  43bb19:	rex.WB
  43bb1a:	rex.W
  43bb1b:	rex.WB (bad) 
  43bb1d:	pop    rdi
  43bb1e:	pop    rdi
  43bb1f:	(bad)  
  43bb20:	pop    rdi
  43bb21:	(bad)  
  43bb22:	rex.W add BYTE PTR [rax],al
  43bb25:	add    BYTE PTR [rax],al
  43bb27:	rex.W
  43bb28:	rex.W
  43bb29:	addr32 imul ebp,DWORD PTR [eax+0x69],0x5f606067
  43bb32:	rex.WB
  43bb33:	rex.W
  43bb34:	rex.W
  43bb35:	rex.W
  43bb36:	rex.RB
  43bb37:	rex.WB
  43bb38:	rex.W pop rdi
  43bb3a:	pop    rdi
  43bb3b:	pop    rdi
  43bb3c:	pop    rdi
  43bb3d:	(bad)  
  43bb3e:	(bad)  
  43bb3f:	addr32 addr32 rex.W add BYTE PTR [eax],al
  43bb45:	add    BYTE PTR [rax],al
  43bb47:	add    BYTE PTR [rax],al
  43bb49:	rex.W
  43bb4a:	rex.W
  43bb4b:	rex.W
  43bb4c:	addr32 addr32 addr32 addr32 (bad) 
  43bb51:	pop    rdi
  43bb52:	(bad)  
  43bb53:	pop    rdi
  43bb54:	rex.W
  43bb55:	rex.RB
  43bb56:	rex.W
  43bb57:	rex.WRX (bad) 
  43bb59:	pop    rdi
  43bb5a:	(bad)  
  43bb5b:	(bad)  
  43bb5c:	addr32 addr32 addr32 rex.W
  43bb60:	rex.W
  43bb61:	rex.W add BYTE PTR [rax],al
	...
  43bb6c:	rex.W
  43bb6d:	rex.W
  43bb6e:	rex.W
  43bb6f:	addr32 addr32 (bad) 
  43bb72:	pop    rdi
  43bb73:	rex.W add BYTE PTR [rax],al
  43bb76:	add    BYTE PTR [rax+0x48],cl
  43bb79:	addr32 addr32 addr32 addr32 rex.W
  43bb7e:	rex.W add BYTE PTR [rax],al
	...
  43bb8d:	add    BYTE PTR [rax],al
  43bb8f:	rex.W
  43bb90:	rex.W pop rbp
  43bb92:	rex.W add BYTE PTR [rax],al
  43bb95:	add    BYTE PTR [rax],al
  43bb97:	add    BYTE PTR [rax],al
  43bb99:	rex.W
  43bb9a:	rex.W
  43bb9b:	rex.W
  43bb9c:	rex.W add BYTE PTR [rax],al
  43bb9f:	add    BYTE PTR [rax],al
  43bba1:	add    BYTE PTR [rax],al
  43bba3:	(bad)  
  43bba4:	inc    DWORD PTR [rax]
  43bba6:	add    bh,bh
  43bba8:	inc    DWORD PTR [rax]
  43bbaa:	add    bh,bh
  43bbac:	inc    DWORD PTR [rax]
  43bbae:	add    bh,dh
  43bbb0:	inc    DWORD PTR [rax]
  43bbb2:	add    bl,ah
  43bbb4:	inc    DWORD PTR [rax]
  43bbb6:	add    cl,al
  43bbb8:	inc    DWORD PTR [rax]
  43bbba:	add    BYTE PTR [rax+0xfc],al
  43bbc0:	jo     0x43bbc2
  43bbc2:	add    cl,al
  43bbc4:	rol    BYTE PTR [rax],0x0
  43bbc7:	rol    DWORD PTR [rax],0x0
  43bbca:	add    al,ah
  43bbcc:	add    BYTE PTR [rax],al
  43bbce:	add    al,ah
  43bbd0:	add    BYTE PTR [rax],al
  43bbd2:	add    al,dh
  43bbd4:	add    BYTE PTR [rax],al
  43bbd6:	add    al,dh
  43bbd8:	add    BYTE PTR [rax],al
  43bbda:	add    al,bh
  43bbdc:	add    BYTE PTR [rax],al
  43bbde:	add    dh,bh
  43bbe0:	add    BYTE PTR [rax],al
  43bbe2:	add    edi,esi
  43bbe4:	add    BYTE PTR [rax],al
  43bbe6:	add    edi,esi
  43bbe8:	add    BYTE PTR [rax],al
  43bbea:	add    edi,esi
  43bbec:	add    BYTE PTR [rax],al
  43bbee:	add    edi,esi
  43bbf0:	add    BYTE PTR [rax],al
  43bbf2:	add    edi,esi
  43bbf4:	add    BYTE PTR [rax],al
  43bbf6:	add    edi,esp
  43bbf8:	add    BYTE PTR [rax],al
  43bbfa:	add    eax,esi
  43bbfc:	add    BYTE PTR [rax],al
  43bbfe:	add    al,ah
  43bc00:	add    BYTE PTR [rax],al
  43bc02:	add    dh,bh
  43bc04:	add    BYTE PTR [rax],al
  43bc06:	add    edi,esp
  43bc08:	add    BYTE PTR [rax],al
  43bc0a:	add    eax,edi
  43bc0c:	add    BYTE PTR [rax],al
  43bc0e:	add    al,dh
  43bc10:	add    BYTE PTR [rax],al
  43bc12:	add    al,dh
  43bc14:	add    BYTE PTR [rax],al
  43bc16:	add    ah,bh
  43bc18:	add    BYTE PTR [rax],al
  43bc1a:	add    edi,edi
  43bc1c:	xor    BYTE PTR [rax+0xf],0xff
  43bc20:	lock cld 
  43bc22:	(bad)  
  43bc23:	sub    BYTE PTR [rax],al
  43bc25:	add    BYTE PTR [rax],al
  43bc27:	adc    BYTE PTR [rax],al
  43bc29:	add    BYTE PTR [rax],al
  43bc2b:	and    BYTE PTR [rax],al
  43bc2d:	add    BYTE PTR [rax],al
  43bc2f:	add    DWORD PTR [rax],eax
  43bc31:	or     BYTE PTR [rax],al
  43bc33:	add    BYTE PTR [rax],al
  43bc35:	add    BYTE PTR [rax],al
  43bc37:	add    BYTE PTR [rcx],al
	...
  43bc41:	add    BYTE PTR [rax],al
  43bc43:	add    BYTE PTR [rcx],al
  43bc45:	add    BYTE PTR [rax],al
  43bc47:	add    BYTE PTR [rcx],al
  43bc49:	add    BYTE PTR [rax],al
  43bc4b:	add    BYTE PTR [rax],al
  43bc4d:	add    BYTE PTR [rax],al
  43bc4f:	or     al,0x50
  43bc51:	sbb    al,BYTE PTR [rax]
  43bc53:	sbb    ah,BYTE PTR [rbx+0x2a]
  43bc56:	add    BYTE PTR [rdx+rsi*2],al
  43bc59:	and    eax,0x2a7d0c00
  43bc5e:	add    BYTE PTR [rdx],dl
  43bc60:	jg     0x43bc93
  43bc62:	add    BYTE PTR [rcx],ah
  43bc64:	ins    BYTE PTR es:[rdi],dx
  43bc65:	xor    BYTE PTR [rax],al
  43bc67:	(bad)  
  43bc68:	gs cmp al,0x0
  43bc6b:	xor    esp,DWORD PTR [rdx+0x3f]
  43bc6e:	add    BYTE PTR [rax],ch
  43bc70:	je     0x43bca8
  43bc72:	add    BYTE PTR [rdx],ch
  43bc74:	je     0x43bcae
  43bc76:	add    BYTE PTR [rax],al
  43bc78:	sbb    al,0x4b
  43bc7a:	add    BYTE PTR [rax],al
  43bc7c:	and    DWORD PTR [rax+rax*1+0x7],edx
  43bc80:	es push rsp
  43bc82:	add    BYTE PTR [rax],al
  43bc84:	(bad)  
  43bc85:	pop    rdx
  43bc86:	add    BYTE PTR [rax],al
  43bc88:	sub    DWORD PTR [rdx+0x0],ebx
  43bc8b:	add    edi,DWORD PTR [rax+rsi*2]
  43bc8e:	add    BYTE PTR [rip+0x35004076],ch        # 0x3543fd0a
  43bc94:	jbe    0x43bcdb
  43bc96:	add    BYTE PTR [rax],al
  43bc98:	rex.B outs dx,DWORD PTR ds:[rsi]
  43bc9a:	add    BYTE PTR [rbx],al
  43bc9c:	rex.X jne 0x43bc9f
  43bc9f:	lea    eax,[rcx+riz*1+0x0]
  43bca3:	xchg   edx,eax
  43bca4:	rex.RXB and r8d,DWORD PTR [r8]
  43bca7:	movabs ds:0xb5002f5db9002d54,al
  43bcb0:	(bad)  
  43bcb1:	add    BYTE PTR ss:[rdx-0x2fffc49a],bh
  43bcb8:	jbe    0x43bd01
  43bcba:	add    ah,dl
  43bcbc:	jl     0x43bd0b
  43bcbe:	add    dh,al
  43bcc0:	jl     0x43bd18
  43bcc2:	add    bh,dl
  43bcc4:	jg     0x43bd16
  43bcc6:	add    BYTE PTR [rip+0x14002d82],cl        # 0x1443ea4e
  43bccc:	xchg   BYTE PTR [rip+0x35801a00],dh        # 0x35c3d6d2
  43bcd2:	add    BYTE PTR [rdx],bl
  43bcd4:	mov    DWORD PTR [rdi],esi
  43bcd6:	add    BYTE PTR [rip+0x34003f8e],ah        # 0x3443fc6a
  43bcdc:	add    DWORD PTR [rax+0x0],0x38
  43bce0:	mov    WORD PTR [rbp+0x0],es
  43bce3:	(bad)  
  43bce4:	or     DWORD PTR [rax+0x0],0x45
  43bce8:	mov    dl,BYTE PTR [rdi+0x0]
  43bceb:	push   rdx
  43bcec:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  43bced:	push   0x0
  43bcef:	pop    rdx
  43bcf0:	mov    dh,0x6b
  43bcf2:	add    BYTE PTR [rcx-0x4a],bl
  43bcf5:	outs   dx,BYTE PTR ds:[rsi]
  43bcf6:	add    BYTE PTR [rcx+rbp*4+0x68],ah
  43bcfa:	add    BYTE PTR [rcx-0x50],ch
  43bcfd:	jle    0x43bcff
  43bcff:	(bad)  
  43bd00:	sar    BYTE PTR [rax+0x0],0xdc
  43bd04:	xchg   DWORD PTR [rbx+0x0],ebx
  43bd07:	out    0x8b,eax
  43bd09:	pop    rdi
  43bd0a:	add    ch,cl
  43bd0c:	xchg   BYTE PTR [rax+rax*1-0x31],ah
  43bd10:	mov    ebp,DWORD PTR [rdx+0x0]
  43bd13:	fimul  DWORD PTR [rax-0x6802ff9f]
  43bd19:	(bad)  
  43bd1a:	add    bh,ah
  43bd1c:	(bad)  
  43bd1d:	jno    0x43bd1f
  43bd1f:	in     al,dx
  43bd20:	movabs ds:0x57080088520c007a,al
  43bd29:	mov    DWORD PTR [rax],eax
  43bd2b:	or     eax,0xe008a5c
  43bd30:	pop    rsi
  43bd31:	mov    es,WORD PTR [rax]
  43bd33:	sbb    edx,DWORD PTR [rbp-0x7c]
  43bd36:	add    BYTE PTR [rdi],dl
  43bd38:	(bad)  
  43bd39:	pop    QWORD PTR [rax]
  43bd3b:	adc    BYTE PTR [rcx-0x70],ah
  43bd3e:	add    BYTE PTR [rsp+riz*2],dl
  43bd41:	xchg   edi,eax
  43bd42:	add    BYTE PTR [rbx],dl
  43bd44:	imul   ebx,DWORD PTR [rsi-0x7098d100],0x9d722200
  43bd4e:	add    BYTE PTR [rdx],ah
  43bd50:	ja     0x43bcf9
  43bd52:	add    BYTE PTR [rdx],ch
  43bd54:	js     0x43bcfa
  43bd56:	add    BYTE PTR [rdi],dh
  43bd58:	jnp    0x43bd01
  43bd5a:	add    BYTE PTR [rax+0x75],al
  43bd5d:	cdq    
  43bd5e:	add    BYTE PTR [rcx+rax*4],ch
  43bd61:	scas   eax,DWORD PTR es:[rdi]
  43bd62:	add    BYTE PTR [rip+0x2a00b181],ch        # 0x2a446ee9
  43bd68:	xor    DWORD PTR [rbp-0x457bde00],0xb9882d00
  43bd72:	add    BYTE PTR [rip+0x3400bf8d],ch        # 0x34447d05
  43bd78:	mov    bh,BYTE PTR [rcx-0x4372c500]
  43bd7e:	add    BYTE PTR [rbp+rsi*4-0x75],bh
  43bd82:	add    BYTE PTR [rax-0x80],cl
  43bd85:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  43bd86:	add    BYTE PTR [rbp-0x7d],al
  43bd89:	stos   DWORD PTR es:[rdi],eax
  43bd8a:	add    BYTE PTR [rbx-0x78],cl
  43bd8d:	lods   al,BYTE PTR ds:[rsi]
  43bd8e:	add    BYTE PTR [rcx-0x78],al
  43bd91:	mov    cl,0x0
  43bd93:	rex.RXB xchg r13d,eax
  43bd95:	mov    ebp,0xb9934b00
  43bd9a:	add    BYTE PTR [rbp-0x66],dl
  43bd9d:	mov    edi,0xb2986800
  43bda2:	add    BYTE PTR [rdx-0x65],ah
  43bda5:	mov    ebx,0xc18f3400
  43bdaa:	add    BYTE PTR [rbx],dh
  43bdac:	xchg   edx,eax
  43bdad:	(bad)
  43bdb0:	xchg   ebp,eax
  43bdb1:	(bad)  
  43bdb2:	add    BYTE PTR [rbx-0x67],al
  43bdb5:	mov    DWORD PTR [rax],0xc1984b
  43bdbb:	rex.B (bad) 
  43bdbd:	enter  0x5200,0x9a
  43bdc1:	ret    
  43bdc2:	add    BYTE PTR [rdi-0x67],bl
  43bdc5:	rol    DWORD PTR [rax],0x5b
  43bdc8:	pushf  
  43bdc9:	rol    DWORD PTR [rax],0x59
  43bdcc:	lahf   
  43bdcd:	mov    BYTE PTR [rax],0x66
  43bdd0:	lahf   
  43bdd1:	ret    0x5100
  43bdd4:	movabs ds:0xa24b00cda75d00cd,al
  43bddd:	rol    BYTE PTR [rax],cl
  43bddf:	(bad)  
  43bde0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  43bde1:	retf   0x6100
  43bde4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  43bde5:	int    0x0
  43bde7:	outs   dx,DWORD PTR ds:[rsi]
  43bde8:	test   al,0xc8
  43bdea:	add    BYTE PTR [rbx+rbp*4-0x34],ch
  43bdee:	add    BYTE PTR [rax-0x58],bh
  43bdf1:	leave  
  43bdf2:	add    BYTE PTR [rdi-0x53],ch
  43bdf5:	rol    BYTE PTR [rax],1
  43bdf7:	jae    0x43bdad
  43bdf9:	fiadd  DWORD PTR [rax]
  43bdfb:	gs mov bh,0xe1
  43bdfe:	add    BYTE PTR [rdx-0x47],ch
  43be01:	jrcxz  0x43be03
  43be03:	jne    0x43bdc6
  43be05:	call   0xffffffffeb07360a
  43be0a:	add    BYTE PTR [rax-0x73ff7f42],al
  43be10:	mov    ah,0x95
  43be12:	add    dh,bl
  43be14:	lahf   
  43be15:	add    BYTE PTR [rax],0xe0
  43be18:	mov    ecx,0xdd8500a7
  43be1d:	nop
  43be1e:	add    BYTE PTR [rsi-0x64ff5329],bl
  43be24:	in     eax,0xa3
  43be26:	add    BYTE PTR [rcx-0x5fff5819],ah
  43be2c:	jmp    0xffffffffeeedbed8
  43be31:	mov    al,0x0
  43be33:	out    dx,eax
  43be34:	(bad)  
  43be35:	mov    ebp,0xb9ccf200
  43be3a:	add    BYTE PTR [rdi-0x7aff2547],al
  43be40:	mov    edi,0xfabc00e0
  43be45:	rol    DWORD PTR [rax],0x80
  43be48:	ret    
  43be49:	out    0x0,eax
  43be4b:	add    edi,0xca9300ec
  43be51:	(bad)  
  43be52:	add    BYTE PTR [rcx-0x66ff1032],dl
  43be58:	shl    bl,cl
  43be5a:	add    BYTE PTR [rdi-0x45ff0526],bl
  43be60:	fldl2t 
  43be62:	add    BYTE PTR [rax-0x5cff0f2d],ah
  43be68:	fdiv   st,st(3)
  43be6a:	add    BYTE PTR [rbp-0x18ff031b],bh
  43be70:	ror    al,cl
  43be72:	add    cl,bh
  43be74:	in     al,0xd9
  43be76:	add    al,cl
  43be78:	out    dx,eax
  43be79:	inc    DWORD PTR [rax]
  43be7b:	icebp  
  43be7c:	out    0xe2,eax
  43be7e:	add    dl,dh
  43be80:	jmp    0xffffffffef2abf69
  43be85:	icebp  
  43be86:	add    ah,bh
  43be88:	hlt    
  43be89:	lock add cl,dh
  43be8c:	push   rdi
  43be8e:	add    ch,dh
  43be90:	(bad)  
  43be91:	stc    
	...
  43c046:	add    bh,bh
  43c048:	(bad)  
  43c049:	inc    DWORD PTR [rax]
  43c04b:	add    BYTE PTR [rax],al
  43c04d:	(bad)  
  43c04e:	sbb    DWORD PTR [rdi+0xff],ecx
	...
  43c05c:	(bad)  
  43c05d:	(bad)  
  43c05e:	(bad)  
  43c05f:	cs mov bh,bh
  43c062:	sub    BYTE PTR [rip+0x60a0924],ah        # 0x64dc98c
  43c068:	add    al,BYTE PTR [rcx]
  43c06a:	add    BYTE PTR [rsi],dl
  43c06c:	(bad)  
  43c06d:	sbb    dh,BYTE PTR [rbx]
  43c06f:	sbb    al,0x34
  43c071:	jmp    FWORD PTR [rax]
  43c073:	sub    eax,0x20220812
  43c078:	add    eax,0x3
  43c07d:	sbb    BYTE PTR [rbx],bl
  43c07f:	(bad)  
  43c080:	(bad)  
  43c081:	jmp    FWORD PTR [rax]
  43c083:	sub    dl,BYTE PTR [rax+0x27110708]
  43c089:	(bad)  
  43c08a:	add    BYTE PTR [rax],al
  43c08c:	add    BYTE PTR [rip+0x7c8e891b],bl        # 0x7cd249ad
  43c092:	sub    al,0x74
  43c094:	sub    dl,BYTE PTR [rax+0x44d9008]
  43c09a:	add    BYTE PTR [rax],al
  43c09c:	add    BYTE PTR [rax],al
  43c09e:	xor    eax,0xff8d7a72
  43c0a3:	mov    WORD PTR [rcx],?
  43c0a5:	sub    bh,bh
  43c0a7:	push   QWORD PTR [rcx+0x21]
  43c0aa:	add    BYTE PTR [rax],al
  43c0ac:	add    BYTE PTR [rax],al
  43c0ae:	jnp    0x43c0df
  43c0b0:	xor    dh,BYTE PTR [rdx]
  43c0b2:	xor    BYTE PTR [rbx+0x70],dh
  43c0b5:	nop
  43c0b6:	nop
  43c0b7:	xchg   ecx,eax
  43c0b8:	jne    0x43c0dd
  43c0ba:	add    BYTE PTR [rax],al
  43c0bc:	add    BYTE PTR [rax],al
  43c0be:	(bad)  
  43c0bf:	(bad)  
  43c0c0:	(bad)  
  43c0c1:	(bad)  
  43c0c2:	(bad)  
  43c0c3:	(bad)  
  43c0c4:	jle    0x43c13f
  43c0c6:	ja     0x43c13e
  43c0c8:	js     0x43c0f4
  43c0ca:	add    BYTE PTR [rax],al
  43c0cc:	add    BYTE PTR [rax],al
  43c0ce:	movsxd eax,DWORD PTR [rdi+0x2b2b6685]
  43c0d4:	sub    ebp,DWORD PTR [rbx]
  43c0d6:	sub    ebp,DWORD PTR [rbx]
  43c0d8:	sub    esp,DWORD PTR [rsi]
  43c0da:	add    BYTE PTR [rax],al
  43c0dc:	add    BYTE PTR [rax],al
  43c0de:	push   rbx
  43c0df:	push   0x13385b6a
  43c0e4:	rex (bad) 
  43c0e6:	push   rsp
  43c0e7:	(bad)  
  43c0e8:	or     eax,0x0
  43c0ed:	push   rsi
  43c0ee:	push   0x103a4f61
  43c0f3:	(bad)  
  43c0f4:	rex.WB
  43c0f5:	rex.RB push r10
  43c0f7:	data16 (bad) 
  43c0f9:	rex.WRX add BYTE PTR [rax],r8b
  43c0fc:	push   rbp
  43c0fd:	push   rax
  43c0fe:	rex.XB
  43c0ff:	ss or  eax,0x5c380e0b
  43c105:	pop    rcx
  43c106:	rex.WXB
  43c107:	rex.B
  43c108:	rex.X
  43c109:	rex.R
  43c10a:	rex.WRX add BYTE PTR [rax],r8b
  43c10d:	imul   ebp,DWORD PTR [rbx+0x4c],0x3d0f143d
  43c114:	pop    rdx
  43c115:	rex.RX
  43c116:	rex.RX
  43c117:	rex.W
  43c118:	rex.WB push r9
  43c11a:	add    BYTE PTR [rax],al
  43c11c:	imul   ecx,DWORD PTR [rax+0x586c848b],0x57453b3e
  43c126:	fs ins DWORD PTR es:[rdi],dx
  43c128:	cmp    BYTE PTR [rdi+0x60],0x0
  43c12c:	add    BYTE PTR [rcx+0x69],ch
  43c12f:	xchg   BYTE PTR [rbx+0x5d00626f],al
  43c135:	outs   dx,BYTE PTR ds:[rsi]
  43c136:	(bad)  
  43c137:	(bad)  
  43c138:	imul   ebp,DWORD PTR [rcx+0x0],0x0
  43c13f:	imul   ebp,DWORD PTR [rcx+0x69],0x69000000
  43c146:	jl     0x43c1b1
  43c148:	add    BYTE PTR [rax],al
  43c14a:	add    bl,al
  43c14c:	inc    DWORD PTR [rax]
  43c14e:	add    BYTE PTR [rax+0x1],al
  43c154:	add    DWORD PTR [rax],eax
  43c156:	add    al,al
  43c158:	add    DWORD PTR [rax],eax
  43c15a:	add    al,al
  43c15c:	add    DWORD PTR [rax],eax
  43c15e:	add    al,ah
  43c160:	add    DWORD PTR [rax],eax
  43c162:	add    al,ah
  43c164:	add    DWORD PTR [rax],eax
  43c166:	add    al,ah
  43c168:	add    DWORD PTR [rax],eax
  43c16a:	add    al,ah
  43c16c:	add    DWORD PTR [rax],eax
  43c16e:	add    al,ah
  43c170:	add    eax,DWORD PTR [rax]
  43c172:	add    al,al
  43c174:	add    DWORD PTR [rax],eax
  43c176:	add    BYTE PTR [rax-0x40000000],al
  43c17c:	add    DWORD PTR [rax],eax
  43c17e:	add    BYTE PTR [rax-0x40000000],al
  43c184:	add    DWORD PTR [rax],0xc7f100
  43c18a:	add    BYTE PTR [rax],ch
  43c18c:	add    BYTE PTR [rax],al
  43c18e:	add    BYTE PTR [rax],ah
  43c190:	add    BYTE PTR [rax],al
  43c192:	add    BYTE PTR [rax+0x0],al
  43c195:	add    BYTE PTR [rax],al
  43c197:	add    DWORD PTR [rax],eax
  43c199:	and    BYTE PTR [rax],al
  43c19b:	add    BYTE PTR [rax],al
  43c19d:	add    BYTE PTR [rax],al
  43c19f:	adc    BYTE PTR [rax],0x0
	...
  43c1f2:	add    BYTE PTR [rbx],dh
  43c1f4:	cdq    
  43c1f5:	xor    edi,edi
  43c1f7:	xor    esp,DWORD PTR [rsi+0x33]
  43c1fa:	push   QWORD PTR [rbx]
  43c1fc:	xor    di,di
  43c1ff:	xor    esp,DWORD PTR [rsi+0x33]
  43c202:	push   QWORD PTR [rbx]
  43c204:	xor    di,di
  43c207:	xor    esp,DWORD PTR [rsi+0x33]
  43c20a:	push   QWORD PTR [rbx]
  43c20c:	xor    di,di
  43c20f:	xor    esp,DWORD PTR [rsi+0x33]
  43c212:	push   QWORD PTR [rbx]
  43c214:	xor    di,di
  43c217:	xor    esp,DWORD PTR [rsi+0x33]
  43c21a:	push   QWORD PTR [rbx]
  43c21c:	xor    di,di
  43c21f:	xor    esp,DWORD PTR [rsi+0x33]
  43c222:	push   QWORD PTR [rbx]
  43c224:	xor    di,di
  43c227:	xor    esp,DWORD PTR [rsi+0x33]
  43c22a:	push   QWORD PTR [rbx]
  43c22c:	xor    di,di
  43c22f:	xor    esp,DWORD PTR [rsi+0x33]
  43c232:	inc    DWORD PTR [rax]
	...
  43c270:	add    BYTE PTR [rax],al
  43c272:	add    BYTE PTR [rbx],dh
  43c274:	cdq    
  43c275:	xor    edi,edi
  43c277:	cwd    
  43c279:	jmp    WORD PTR [rsi-0x67]
  43c27d:	push   WORD PTR [rbx]
  43c280:	cdq    
  43c281:	push   WORD PTR [rbx]
  43c284:	cdq    
  43c285:	push   WORD PTR [rbx]
  43c288:	cdq    
  43c289:	push   WORD PTR [rbx]
  43c28c:	cdq    
  43c28d:	xor    edi,edi
  43c28f:	xor    ebx,DWORD PTR [rcx-0x66cc00cd]
  43c295:	xor    edi,edi
  43c297:	xor    ebx,DWORD PTR [rcx-0x66cc00cd]
  43c29d:	xor    edi,edi
  43c29f:	xor    ebx,DWORD PTR [rcx-0x66cc00cd]
  43c2a5:	xor    edi,edi
  43c2a7:	xor    ebx,DWORD PTR [rcx-0x66cc00cd]
  43c2ad:	xor    edi,edi
  43c2af:	xor    esp,DWORD PTR [rsi+0x33]
  43c2b2:	inc    DWORD PTR [rax]
	...
  43c2f0:	add    BYTE PTR [rax],al
  43c2f2:	add    BYTE PTR [rbx],dh
  43c2f4:	cdq    
  43c2f5:	xor    edi,edi
  43c2f7:	rcr    ah,0xc0
  43c2fa:	jmp    QWORD PTR [rsi-0x34]
  43c2fd:	jmp    WORD PTR [rsi-0x67]
  43c301:	push   WORD PTR [rbx]
  43c304:	cdq    
  43c305:	push   WORD PTR [rbx]
  43c308:	xor    di,di
  43c30b:	cwd    
  43c30d:	jmp    WORD PTR [rsi-0x67]
  43c311:	push   WORD PTR [rbx]
  43c314:	cdq    
  43c315:	push   WORD PTR [rbx]
  43c318:	cdq    
  43c319:	push   WORD PTR [rbx]
  43c31c:	cdq    
  43c31d:	xor    edi,edi
  43c31f:	xor    ebx,DWORD PTR [rcx-0x66cc009a]
  43c325:	xor    edi,edi
  43c327:	xor    ebx,DWORD PTR [rcx-0x66cc009a]
  43c32d:	xor    edi,edi
  43c32f:	xor    esp,DWORD PTR [rsi+0x33]
  43c332:	inc    DWORD PTR [rax]
	...
  43c340:	add    BYTE PTR [rax],al
  43c342:	add    BYTE PTR [rsi+0xff2041],al
	...
  43c370:	add    BYTE PTR [rax],al
  43c372:	add    BYTE PTR [rbx],dh
  43c374:	cdq    
  43c375:	xor    edi,edi
  43c377:	rcr    ah,0xc0
  43c37a:	jmp    QWORD PTR [rsi-0x34]
  43c37d:	cdq    
  43c37e:	jmp    QWORD PTR [rsi-0x67]
  43c381:	push   WORD PTR [rbx]
  43c384:	xor    di,di
  43c387:	rol    al,0xc0
  43c38a:	push   QWORD PTR [rbx]
  43c38c:	xor    di,di
  43c38f:	xor    ebx,DWORD PTR [rcx-0x6699009a]
  43c395:	push   WORD PTR [rbx]
  43c398:	cdq    
  43c399:	xor    edi,edi
  43c39b:	xor    ebx,DWORD PTR [rcx-0x66cc009a]
  43c3a1:	xor    edi,edi
  43c3a3:	xor    ebx,DWORD PTR [rcx-0x66cc009a]
  43c3a9:	xor    edi,edi
  43c3ab:	xor    ebx,DWORD PTR [rcx+0x6633ff33]
  43c3b1:	xor    edi,edi
	...
  43c3bf:	xchg   ebx,eax
  43c3c0:	rex.RXB and r15b,r15b
  43c3c3:	scas   al,BYTE PTR es:[rdi]
  43c3c4:	pop    rbp
  43c3c5:	(bad)  
  43c3c6:	inc    DWORD PTR [rsi+0xff2041]
	...
  43c3f0:	add    BYTE PTR [rax],al
  43c3f2:	add    BYTE PTR [rbx],dh
  43c3f4:	cdq    
  43c3f5:	xor    edi,edi
  43c3f7:	rcr    ah,0xc0
  43c3fa:	jmp    QWORD PTR [rsi-0x34]
  43c3fd:	cdq    
  43c3fe:	push   QWORD PTR [rbx]
  43c400:	xor    di,di
  43c403:	fstp   st(5)
  43c405:	(bad)  
  43c407:	rol    al,0xc0
  43c40a:	inc    eax
  43c40c:	rol    al,0xff
  43c40f:	xor    esp,DWORD PTR [rsi+0x33]
  43c412:	jmp    QWORD PTR [rsi-0x67]
  43c415:	push   WORD PTR [rbx]
  43c418:	cdq    
  43c419:	jmp    WORD PTR [rsi+0x66]
  43c41d:	push   WORD PTR [rbx]
  43c420:	xor    di,di
  43c423:	xor    ebx,DWORD PTR [rcx-0x66cc009a]
  43c429:	push   WORD PTR [rbx]
  43c42c:	cdq    
  43c42d:	xor    edi,edi
  43c42f:	xor    esp,DWORD PTR [rsi+0x33]
  43c432:	inc    DWORD PTR [rax]
  43c434:	add    BYTE PTR [rax],al
  43c436:	add    BYTE PTR [rax],al
  43c438:	add    BYTE PTR [rax],al
  43c43a:	add    BYTE PTR [rbx-0x3100d6a7],bh
  43c440:	jno    0x43c485
  43c442:	inc    ebx
  43c444:	push   0x3f
  43c446:	(bad)  
  43c447:	mov    ecx,0x86ff3b64
  43c44c:	and    r15b,dil
	...
  43c473:	cwd    
  43c475:	inc    ax
  43c478:	fadd   st(0),st
  43c47a:	call   FWORD PTR [rcx-0x6634]
  43c480:	(bad)  
  43c481:	(bad)  
  43c482:	(bad)  
  43c483:	(bad)  
  43c484:	(bad)  
  43c485:	(bad)  
  43c486:	push   rcx
  43c488:	icebp  
  43c489:	icebp  
  43c48a:	dec    esp
  43c48c:	int3   
  43c48d:	int3   
  43c48e:	inc    eax
  43c490:	rol    al,0xff
  43c493:	xor    esp,DWORD PTR [rsi+0x33]
  43c496:	push   QWORD PTR [rbx]
  43c498:	xor    esi,DWORD PTR [rbx]
  43c49a:	dec    esp
  43c49c:	int3   
  43c49d:	int3   
  43c49e:	inc    eax
  43c4a0:	rol    al,0xff
  43c4a3:	xor    ebx,DWORD PTR [rcx-0x66cc00cd]
  43c4a9:	push   WORD PTR [rbx]
  43c4ac:	cdq    
  43c4ad:	xor    edi,edi
  43c4af:	xor    esp,DWORD PTR [rsi+0x33]
  43c4b2:	inc    DWORD PTR [rax]
  43c4b4:	add    BYTE PTR [rax],al
  43c4b6:	add    bh,bl
  43c4b8:	outs   dx,DWORD PTR ds:[rsi]
  43c4b9:	ss push rax
  43c4bc:	mov    BYTE PTR [rdi+rdi*8-0x19],dl
  43c4c0:	(bad)  
  43c4c1:	rex.WRXB (bad) 
  43c4c3:	fnstsw WORD PTR [rdx+0x4a]
  43c4c6:	call   rdx
  43c4c8:	jae    0x43c50f
  43c4ca:	inc    edi
  43c4cc:	ins    DWORD PTR es:[rdi],dx
  43c4cd:	rex inc DWORD PTR [rsi+0xff2041]
	...
  43c4e8:	add    BYTE PTR [rax],al
  43c4ea:	add    BYTE PTR [rbx],dh
  43c4ec:	xor    esp,DWORD PTR [rsi-0x1]
  43c4ef:	xor    esi,DWORD PTR [rbx]
  43c4f1:	jmp    WORD PTR [rsi-0x67]
  43c4f5:	inc    ax
  43c4f8:	fadd   st(0),st
  43c4fa:	call   FWORD PTR [rcx+0x66ff99cc]
  43c500:	int3   
  43c501:	cdq    
  43c502:	(bad)  
  43c503:	(bad)  
  43c504:	(bad)  
  43c505:	(bad)  
  43c506:	(bad)  
  43c507:	(bad)  
  43c508:	(bad)  
  43c509:	(bad)  
  43c50a:	(bad)  
  43c50b:	(bad)  
  43c50c:	(bad)  
  43c50d:	(bad)  
  43c50e:	call   rdi
  43c510:	xlat   BYTE PTR ds:[rbx]
  43c511:	xlat   BYTE PTR ds:[rbx]
  43c512:	inc    eax
  43c514:	rol    al,0xff
  43c517:	xlat   BYTE PTR ds:[rbx]
  43c518:	xlat   BYTE PTR ds:[rbx]
  43c519:	xlat   BYTE PTR ds:[rbx]
  43c51a:	call   rdi
  43c51c:	xlat   BYTE PTR ds:[rbx]
  43c51d:	xlat   BYTE PTR ds:[rbx]
  43c51e:	inc    eax
  43c520:	rol    al,0xff
  43c523:	xor    ebx,DWORD PTR [rcx-0x66cc00cd]
  43c529:	push   WORD PTR [rbx]
  43c52c:	cdq    
  43c52d:	xor    edi,edi
  43c52f:	xor    esp,DWORD PTR [rsi+0x33]
  43c532:	(bad)  
  43c533:	(bad)  
  43c534:	mov    BYTE PTR [rsi-0x1],dl
  43c537:	out    0x7a,eax
  43c539:	rex.XB (bad) 
  43c53b:	call   QWORD PTR [rsi-0x6e04009f]
  43c541:	pop    rbx
  43c542:	push   rsp
  43c544:	mov    dl,BYTE PTR [rsi-0x1]
  43c547:	jmp    0x43c4cd
  43c549:	push   rcx
  43c54a:	jmp    rax
  43c54c:	jge    0x43c599
  43c54e:	inc    DWORD PTR [rsi-0x7900dfbf]
  43c554:	and    r15b,dil
	...
  43c563:	xor    esp,DWORD PTR [rsi-0x67]
  43c566:	push   QWORD PTR [rbx]
  43c568:	cwd    
  43c56a:	jmp    QWORD PTR [rsi-0x67]
  43c56d:	int3   
  43c56e:	jmp    QWORD PTR [rsi-0x67]
  43c571:	cdq    
  43c572:	push   QWORD PTR [rbx]
  43c574:	cdq    
  43c575:	inc    ax
  43c578:	fadd   st(0),st
  43c57a:	call   FWORD PTR [rcx+0x66ff99cc]
  43c580:	int3   
  43c581:	cdq    
  43c582:	jmp    QWORD PTR [rsi-0x34]
  43c585:	data16 (bad) 
  43c587:	(bad)  
  43c588:	(bad)  
  43c589:	(bad)  
  43c58a:	(bad)  
  43c58b:	(bad)  
  43c58c:	(bad)  
  43c58d:	(bad)  
  43c58e:	(bad)  
  43c58f:	(bad)  
  43c590:	(bad)  
  43c591:	(bad)  
  43c592:	push   rcx
  43c594:	icebp  
  43c595:	icebp  
  43c596:	push   rcx
  43c598:	icebp  
  43c599:	icebp  
  43c59a:	push   rcx
  43c59c:	icebp  
  43c59d:	icebp  
  43c59e:	dec    esp
  43c5a0:	int3   
  43c5a1:	int3   
  43c5a2:	push   QWORD PTR [rbx]
  43c5a4:	cdq    
  43c5a5:	jmp    WORD PTR [rsi-0x67]
  43c5a9:	push   WORD PTR [rbx]
  43c5ac:	cdq    
  43c5ad:	xor    edi,edi
  43c5af:	xor    esp,DWORD PTR [rsi+0x33]
  43c5b2:	inc    DWORD PTR [rax]
  43c5b4:	add    BYTE PTR [rax],al
  43c5b6:	add    BYTE PTR [rax],al
  43c5b8:	add    BYTE PTR [rax],al
  43c5ba:	add    al,ch
  43c5bc:	jnp    0x43c600
  43c5be:	(bad)  
  43c5bf:	call   FWORD PTR [rsi-0x67000096]
  43c5c5:	movsxd edi,edi
  43c5c7:	std    
  43c5c8:	xchg   edx,eax
  43c5c9:	pop    rbp
  43c5ca:	jmp    QWORD PTR [rsi+0xff2550]
	...
  43c5d8:	add    BYTE PTR [rax],al
  43c5da:	add    BYTE PTR [rsi-0x67],ah
  43c5dd:	cdq    
  43c5de:	push   QWORD PTR [rbx]
  43c5e0:	cwd    
  43c5e2:	call   rsi
  43c5e4:	out    0xe7,eax
  43c5e6:	call   rsi
  43c5e8:	out    0xe7,eax
  43c5ea:	jmp    QWORD PTR [rsi-0x67]
  43c5ed:	cdq    
  43c5ee:	jmp    QWORD PTR [rsi-0x67]
  43c5f1:	int3   
  43c5f2:	jmp    QWORD PTR [rsi-0x67]
  43c5f5:	inc    ax
  43c5f8:	fadd   st(0),st
  43c5fa:	call   FWORD PTR [rcx-0x66006634]
  43c600:	int3   
  43c601:	cdq    
  43c602:	jmp    QWORD PTR [rsi-0x34]
  43c605:	cdq    
  43c606:	jmp    QWORD PTR [rsi-0x67]
  43c609:	data16 (bad) 
  43c60b:	(bad)  
  43c60c:	(bad)  
  43c60d:	(bad)  
  43c60e:	push   rcx
  43c610:	icebp  
  43c611:	icebp  
  43c612:	(bad)  
  43c613:	(bad)  
  43c614:	(bad)  
  43c615:	(bad)  
  43c616:	(bad)  
  43c617:	(bad)  
  43c618:	(bad)  
  43c619:	(bad)  
  43c61a:	push   rcx
  43c61c:	icebp  
  43c61d:	icebp  
  43c61e:	dec    esp
  43c620:	int3   
  43c621:	int3   
  43c622:	jmp    QWORD PTR [rsi-0x67]
  43c625:	push   WORD PTR [rbx]
  43c628:	cdq    
  43c629:	push   WORD PTR [rbx]
  43c62c:	cdq    
  43c62d:	xor    edi,edi
  43c62f:	xor    esp,DWORD PTR [rsi+0x33]
  43c632:	inc    DWORD PTR [rax]
  43c634:	add    BYTE PTR [rax],al
  43c636:	add    BYTE PTR [rax],al
  43c638:	add    BYTE PTR [rax],al
  43c63a:	add    dl,ch
  43c63c:	mov    BYTE PTR [rsi-0x32],dl
  43c63f:	(bad)  
  43c640:	jg     0x43c68b
  43c642:	(bad)  
  43c643:	jmp    QWORD PTR [rsi-0x5f00008b]
  43c649:	ins    DWORD PTR es:[rdi],dx
  43c64a:	(bad)  
  43c64b:	mov    edx,0xff2959
  43c650:	add    BYTE PTR [rax],al
  43c652:	add    BYTE PTR [rsi-0x67],ah
  43c655:	cdq    
  43c656:	jmp    QWORD PTR [rsi-0x67]
  43c659:	cdq    
  43c65a:	jmp    QWORD PTR [rsi-0x67]
  43c65d:	int3   
  43c65e:	call   rsi
  43c660:	out    0xe7,eax
  43c662:	call   rsi
  43c664:	out    0xe7,eax
  43c666:	call   rsi
  43c668:	out    0xe7,eax
  43c66a:	jmp    QWORD PTR [rsi-0x67]
  43c66d:	int3   
  43c66e:	jmp    QWORD PTR [rsi-0x67]
  43c671:	int3   
  43c672:	jmp    QWORD PTR [rsi-0x67]
  43c675:	inc    ax
  43c678:	fadd   st(0),st
  43c67a:	call   FWORD PTR [rcx-0x66006634]
  43c680:	int3   
  43c681:	cdq    
  43c682:	jmp    QWORD PTR [rsi-0x67]
  43c685:	push   WORD PTR [rbx]
  43c688:	data16 data16 (bad) 
  43c68b:	(bad)  
  43c68c:	(bad)  
  43c68d:	(bad)  
  43c68e:	push   rcx
  43c690:	icebp  
  43c691:	icebp  
  43c692:	(bad)  
  43c693:	(bad)  
  43c694:	(bad)  
  43c695:	(bad)  
  43c696:	push   rax
  43c698:	sti    
  43c699:	(bad)  
  43c69a:	push   rcx
  43c69c:	icebp  
  43c69d:	icebp  
  43c69e:	call   rdi
  43c6a0:	xlat   BYTE PTR ds:[rbx]
  43c6a1:	xlat   BYTE PTR ds:[rbx]
  43c6a2:	jmp    QWORD PTR [rsi-0x67]
  43c6a5:	jmp    WORD PTR [rsi-0x67]
  43c6a9:	push   WORD PTR [rbx]
  43c6ac:	cdq    
  43c6ad:	push   WORD PTR [rbx]
  43c6b0:	xor    di,di
	...
  43c6bb:	(bad)  
  43c6bc:	xchg   ebp,eax
  43c6bd:	imul   esi,DWORD PTR [rax-0x10],0xffffff94
  43c6c1:	gs (bad) 
  43c6c3:	push   QWORD PTR [rdx-0x52001a78]
  43c6c9:	cmp    bh,0xd1
  43c6cc:	addr32 xor edi,edi
  43c6cf:	mov    edi,DWORD PTR [rbp+0x67]
  43c6d2:	jmp    QWORD PTR [rsi-0x67]
  43c6d5:	int3   
  43c6d6:	call   FWORD PTR [rcx-0x66003334]
  43c6dc:	int3   
  43c6dd:	int3   
  43c6de:	push   rax
  43c6e0:	sti    
  43c6e1:	(bad)  
  43c6e2:	call   rsi
  43c6e4:	out    0xe7,eax
  43c6e6:	call   rsi
  43c6e8:	out    0xe7,eax
  43c6ea:	call   FWORD PTR [rcx+0x66ffcccc]
  43c6f0:	cdq    
  43c6f1:	int3   
  43c6f2:	jmp    QWORD PTR [rsi-0x67]
  43c6f5:	inc    ax
  43c6f8:	fadd   st(0),st
  43c6fa:	call   FWORD PTR [rcx-0x66006634]
  43c700:	int3   
  43c701:	cdq    
  43c702:	jmp    QWORD PTR [rsi-0x34]
  43c705:	cdq    
  43c706:	(bad)  
  43c707:	(bad)  
  43c708:	(bad)  
  43c709:	(bad)  
  43c70a:	(bad)  
  43c70b:	(bad)  
  43c70c:	(bad)  
  43c70d:	(bad)  
  43c70e:	(bad)  
  43c70f:	(bad)  
  43c710:	(bad)  
  43c711:	(bad)  
  43c712:	(bad)  
  43c713:	(bad)  
  43c714:	(bad)  
  43c715:	(bad)  
  43c716:	(bad)  
  43c717:	(bad)  
  43c718:	(bad)  
  43c719:	(bad)  
  43c71a:	(bad)  
  43c71b:	(bad)  
  43c71c:	(bad)  
  43c71d:	(bad)  
  43c71e:	jmp    rbx
  43c720:	jrcxz  0x43c705
  43c722:	jmp    QWORD PTR [rsi-0x67]
  43c725:	jmp    WORD PTR [rsi-0x34]
  43c729:	push   WORD PTR [rbx]
  43c72c:	cdq    
  43c72d:	push   WORD PTR [rbx]
  43c730:	xor    di,di
	...
  43c73b:	(bad)  
  43c73c:	movabs ds:0xaef9cb6b95ea407e,al
  43c745:	xchg   esp,ebp
  43c747:	(bad)  
  43c748:	mov    eax,0xa3f7ff93
  43c74d:	jbe    0x43c74e
  43c74f:	iret   
  43c750:	gs jmp FWORD PTR cs:[rax+0x66ffa199]
  43c758:	cdq    
  43c759:	int3   
  43c75a:	jmp    QWORD PTR [rsi-0x67]
  43c75d:	int3   
  43c75e:	push   rax
  43c760:	sti    
  43c761:	(bad)  
  43c762:	call   rsi
  43c764:	out    0xe7,eax
  43c766:	call   rsi
  43c768:	out    0xe7,eax
  43c76a:	jmp    QWORD PTR [rsi-0x67]
  43c76d:	int3   
  43c76e:	call   FWORD PTR [rcx+0x76ffcccc]
  43c774:	lea    ebx,[rdx-0x1]
  43c777:	(bad)  
  43c778:	jp     0x43c7c8
  43c77a:	dec    DWORD PTR [rbx-0x6a00be99]
  43c780:	mov    al,0x81
  43c782:	jmp    QWORD PTR [rsi-0x34]
  43c785:	cdq    
  43c786:	(bad)  
  43c787:	(bad)  
  43c788:	(bad)  
  43c789:	(bad)  
  43c78a:	(bad)  
  43c78b:	(bad)  
  43c78c:	(bad)  
  43c78d:	(bad)  
  43c78e:	(bad)  
  43c78f:	(bad)  
  43c790:	(bad)  
  43c791:	(bad)  
  43c792:	(bad)  
  43c793:	(bad)  
  43c794:	(bad)  
  43c795:	(bad)  
  43c796:	(bad)  
  43c797:	(bad)  
  43c798:	(bad)  
  43c799:	(bad)  
  43c79a:	(bad)  
  43c79b:	(bad)  
  43c79c:	(bad)  
  43c79d:	(bad)  
  43c79e:	(bad)  
  43c79f:	(bad)  
  43c7a0:	(bad)  
  43c7a1:	(bad)  
  43c7a2:	jmp    QWORD PTR [rsi-0x34]
  43c7a5:	jmp    WORD PTR [rsi-0x67]
  43c7a9:	push   WORD PTR [rbx]
  43c7ac:	cdq    
  43c7ad:	push   WORD PTR [rbx]
  43c7b0:	xor    di,di
	...
  43c7bf:	(bad)  
  43c7c0:	movabs ds:0xc1ffff6b96ea707e,al
  43c7c9:	movabs eax,ds:0x7da7f7ff9bbeffff
  43c7d2:	dec    edi
  43c7d4:	fs (bad) 
  43c7d6:	jmp    QWORD PTR [rdi-0x66007b66]
  43c7dc:	int3   
  43c7dd:	int3   
  43c7de:	push   rax
  43c7e0:	sti    
  43c7e1:	(bad)  
  43c7e2:	call   rsi
  43c7e4:	out    0xe7,eax
  43c7e6:	call   rbx
  43c7e8:	(bad)  
  43c7ea:	jmp    QWORD PTR [rdx-0x27006053]
  43c7f0:	jnp    0x43c840
  43c7f2:	call   QWORD PTR [rbx-0x6900d9b6]
  43c7f8:	ins    BYTE PTR es:[rdi],dx
  43c7f9:	rex.WR call QWORD PTR [rbp-0x66007e50]
  43c800:	int3   
  43c801:	cdq    
  43c802:	call   FWORD PTR [rcx-0x66006634]
  43c808:	int3   
  43c809:	cdq    
  43c80a:	call   FWORD PTR [rcx-0x66006634]
  43c810:	int3   
  43c811:	cdq    
  43c812:	call   FWORD PTR [rcx-0x66006634]
  43c818:	int3   
  43c819:	cdq    
  43c81a:	call   FWORD PTR [rcx-0x66006634]
  43c820:	int3   
  43c821:	cdq    
  43c822:	call   FWORD PTR [rcx+0x66ff99cc]
  43c828:	int3   
  43c829:	jmp    WORD PTR [rsi-0x67]
  43c82d:	push   WORD PTR [rbx]
  43c830:	xor    di,di
	...
  43c83f:	(bad)  
  43c840:	stos   BYTE PTR es:[rdi],al
  43c841:	mov    eax,DWORD PTR [rax-0x16]
  43c844:	movabs ds:0xc2ffff94b7fabc7e,al
  43c84d:	movabs ds:0x83abf7ffa2c2ffff,al
  43c856:	dec    edi
  43c858:	gs cs (bad) 
  43c85b:	mov    ebx,0xc1ff295a
  43c860:	(bad)  {z}
  43c865:	rex.R call rdx
  43c868:	jne    0x43c8ae
  43c86a:	dec    edi
  43c86c:	jg     0x43c8c5
  43c86e:	inc    DWORD PTR [rsi-0x7f00dfbf]
  43c874:	push   rdx
  43c875:	sub    eax,0xa9c6b8ff
  43c87a:	inc    eax
  43c87c:	fadd   st(0),st
  43c87e:	inc    eax
  43c880:	fadd   st(0),st
  43c882:	inc    eax
  43c884:	fadd   st(0),st
  43c886:	inc    eax
  43c888:	fadd   st(0),st
  43c88a:	inc    eax
  43c88c:	fadd   st(0),st
  43c88e:	inc    eax
  43c890:	fadd   st(0),st
  43c892:	inc    eax
  43c894:	fadd   st(0),st
  43c896:	inc    eax
  43c898:	fadd   st(0),st
  43c89a:	inc    eax
  43c89c:	fadd   st(0),st
  43c89e:	inc    eax
  43c8a0:	fadd   st(0),st
  43c8a2:	inc    eax
  43c8a4:	fadd   st(0),st
  43c8a6:	inc    eax
  43c8a8:	fadd   st(0),st
  43c8aa:	jmp    QWORD PTR [rsi-0x34]
  43c8ad:	push   WORD PTR [rbx]
  43c8b0:	xor    di,di
	...
  43c8c3:	(bad)  
  43c8c4:	stos   BYTE PTR es:[rdi],al
  43c8c5:	mov    eax,DWORD PTR [rax-0x16]
  43c8c8:	movabs eax,ds:0xc2ffff85abf4e57e
  43c8d1:	movabs ds:0xa2c2ffffa2c2ffff,al
  43c8da:	(bad)  
  43c8db:	inc    ecx
  43c8dd:	lahf   
  43c8de:	(bad)  
  43c8df:	(bad)  
  43c8e0:	mov    ebp,0xb9ffff9a
  43c8e5:	xchg   ebx,eax
  43c8e6:	(bad)  
  43c8e7:	mov    esi,0x88ff6f8d
  43c8ec:	rex.WRXB xor r15b,r15b
  43c8ef:	jae    0x43c967
  43c8f1:	mov    bh,bh
  43c8f3:	imul   ecx,DWORD PTR [rbx-0x669900a5],0x66
  43c8fa:	jmp    QWORD PTR [rsi-0x67]
  43c8fd:	jmp    WORD PTR [rsi-0x67]
  43c901:	jmp    WORD PTR [rsi-0x67]
  43c905:	jmp    WORD PTR [rsi-0x67]
  43c909:	jmp    WORD PTR [rsi-0x67]
  43c90d:	jmp    WORD PTR [rsi-0x67]
  43c911:	jmp    WORD PTR [rsi-0x67]
  43c915:	push   WORD PTR [rbx]
  43c918:	cdq    
  43c919:	xor    edi,edi
  43c91b:	cwd    
  43c91d:	push   WORD PTR [rbx]
  43c920:	cdq    
  43c921:	xor    edi,edi
  43c923:	cwd    
  43c925:	push   WORD PTR [rbx]
  43c928:	cdq    
  43c929:	xor    edi,edi
  43c92b:	xor    ebx,DWORD PTR [rcx-0x66cc00cd]
  43c931:	xor    edi,edi
	...
  43c947:	(bad)  
  43c948:	stos   BYTE PTR es:[rdi],al
  43c949:	mov    ebx,DWORD PTR [rax]
  43c94b:	(bad)  
  43c94c:	movabs ds:0x87eaff7497d1787e,al
  43c955:	push   rsi
  43c956:	(bad)  
  43c957:	call   0xffffffffdf430cd6
  43c95c:	outs   dx,DWORD PTR ds:[rsi]
  43c95d:	ss dec esi
  43c960:	fs (bad) 
  43c962:	push   QWORD PTR [rax+rsi*2-0x6d6000ae]
  43c969:	jle    0x43c96a
  43c96b:	cwde   
  43c96c:	mov    edi,0xcc66ffea
  43c971:	int3   
  43c972:	call   FWORD PTR [rcx+0x66ffcccc]
  43c978:	cdq    
  43c979:	int3   
  43c97a:	push   QWORD PTR [rbx]
  43c97c:	data16 inc WORD PTR [rax]
  43c980:	xor    esp,DWORD PTR [rsi-0x1]
  43c983:	xor    esp,DWORD PTR [rsi-0x67]
  43c986:	push   QWORD PTR [rbx]
  43c988:	data16 push WORD PTR [rbx]
  43c98c:	cwd    
  43c98e:	push   QWORD PTR [rbx]
  43c990:	data16 push WORD PTR [rbx]
  43c994:	cwd    
  43c996:	push   QWORD PTR [rbx]
  43c998:	cwd    
  43c99a:	push   QWORD PTR [rbx]
  43c99c:	cwd    
  43c99e:	push   QWORD PTR [rbx]
  43c9a0:	cwd    
  43c9a2:	push   QWORD PTR [rbx]
  43c9a4:	cwd    
  43c9a6:	push   QWORD PTR [rbx]
  43c9a8:	xor    esp,DWORD PTR [rsi-0x1]
	...
  43c9cf:	cwd    
  43c9d1:	cdq    
  43c9d2:	call   FWORD PTR [rcx-0x66000034]
  43c9d8:	int3   
  43c9d9:	int3   
  43c9da:	call   FWORD PTR [rcx-0x39000034]
  43c9e0:	(bad)  
  43c9e1:	out    dx,eax
  43c9e2:	push   rax
  43c9e4:	sti    
  43c9e5:	(bad)  
  43c9e6:	push   rax
  43c9e8:	sti    
  43c9e9:	(bad)  
  43c9ea:	call   FWORD PTR [rcx-0x66003334]
  43c9f0:	int3   
  43c9f1:	(bad)  
  43c9f2:	call   FWORD PTR [rcx-0x66003334]
  43c9f8:	int3   
  43c9f9:	int3   
  43c9fa:	push   QWORD PTR [rbx]
  43c9fc:	data16 inc WORD PTR [rax]
  43ca00:	xor    esp,DWORD PTR [rsi-0x1]
  43ca03:	xor    esp,DWORD PTR [rsi+0x66]
  43ca06:	push   QWORD PTR [rbx]
  43ca08:	cwd    
  43ca0a:	push   QWORD PTR [rbx]
  43ca0c:	data16 push WORD PTR [rbx]
  43ca10:	cwd    
  43ca12:	push   QWORD PTR [rbx]
  43ca14:	cwd    
  43ca16:	push   QWORD PTR [rbx]
  43ca18:	data16 push WORD PTR [rbx]
  43ca1c:	cwd    
  43ca1e:	push   QWORD PTR [rbx]
  43ca20:	cwd    
  43ca22:	push   QWORD PTR [rbx]
  43ca24:	cwd    
  43ca26:	push   QWORD PTR [rbx]
  43ca28:	xor    esp,DWORD PTR [rsi-0x1]
	...
  43ca4f:	cwd    
  43ca51:	cdq    
  43ca52:	call   FWORD PTR [rcx-0x66000034]
  43ca58:	int3   
  43ca59:	int3   
  43ca5a:	call   FWORD PTR [rcx-0x29000034]
  43ca60:	out    0xe7,eax
  43ca62:	push   rax
  43ca64:	sti    
  43ca65:	(bad)  
  43ca66:	push   rax
  43ca68:	sti    
  43ca69:	(bad)  
  43ca6a:	call   FWORD PTR [rcx-0x66003334]
  43ca70:	int3   
  43ca71:	int3   
  43ca72:	call   FWORD PTR [rcx-0x66000034]
  43ca78:	int3   
  43ca79:	int3   
  43ca7a:	push   QWORD PTR [rbx]
  43ca7c:	data16 inc WORD PTR [rax]
  43ca80:	xor    esp,DWORD PTR [rsi-0x1]
  43ca83:	add    BYTE PTR [rbx],dh
  43ca85:	inc    WORD PTR [rax]
  43ca88:	xor    esp,DWORD PTR [rsi-0x1]
  43ca8b:	xor    esp,DWORD PTR [rsi-0x67]
  43ca8e:	push   QWORD PTR [rbx]
  43ca90:	cwd    
  43ca92:	push   QWORD PTR [rbx]
  43ca94:	cwd    
  43ca96:	push   QWORD PTR [rbx]
  43ca98:	data16 inc WORD PTR [rax]
  43ca9c:	cwd    
  43ca9e:	push   QWORD PTR [rbx]
  43caa0:	cwd    
  43caa2:	push   QWORD PTR [rbx]
  43caa4:	cwd    
  43caa6:	push   QWORD PTR [rbx]
  43caa8:	xor    esp,DWORD PTR [rsi-0x1]
	...
  43cacf:	cwd    
  43cad1:	cdq    
  43cad2:	call   FWORD PTR [rcx-0x66003334]
  43cad8:	int3   
  43cad9:	(bad)  
  43cada:	call   FWORD PTR [rcx-0xf003334]
  43cae0:	sti    
  43cae1:	(bad)  
  43cae2:	push   rax
  43cae4:	sti    
  43cae5:	(bad)  
  43cae6:	call   rsi
  43cae8:	out    0xe7,eax
  43caea:	call   FWORD PTR [rcx-0x66000034]
  43caf0:	int3   
  43caf1:	(bad)  
  43caf2:	call   FWORD PTR [rcx-0x66003334]
  43caf8:	int3   
  43caf9:	int3   
  43cafa:	push   QWORD PTR [rbx]
  43cafc:	data16 jmp WORD PTR [rsi-0x67]
  43cb01:	cdq    
  43cb02:	jmp    QWORD PTR [rsi-0x67]
  43cb05:	cdq    
  43cb06:	jmp    QWORD PTR [rsi-0x67]
  43cb09:	cdq    
  43cb0a:	push   QWORD PTR [rbx]
  43cb0c:	data16 inc WORD PTR [rax]
  43cb10:	xor    esp,DWORD PTR [rsi-0x1]
  43cb13:	add    BYTE PTR [rbx],dh
  43cb15:	inc    WORD PTR [rax]
  43cb18:	cwd    
  43cb1a:	push   QWORD PTR [rbx]
  43cb1c:	data16 push WORD PTR [rbx]
  43cb20:	cwd    
  43cb22:	inc    DWORD PTR [rax]
  43cb24:	data16 push WORD PTR [rbx]
  43cb28:	xor    esp,DWORD PTR [rsi-0x1]
	...
  43cb4f:	cwd    
  43cb51:	cdq    
  43cb52:	call   FWORD PTR [rcx-0x66000034]
  43cb58:	int3   
  43cb59:	(bad)  
  43cb5a:	call   FWORD PTR [rcx-0x29003334]
  43cb60:	out    0xe7,eax
  43cb62:	jmp    QWORD PTR [rsi-0x67]
  43cb65:	int3   
  43cb66:	jmp    QWORD PTR [rsi-0x67]
  43cb69:	int3   
  43cb6a:	push   QWORD PTR [rbx]
  43cb6c:	cdq    
  43cb6d:	cdq    
  43cb6e:	jmp    QWORD PTR [rsi-0x67]
  43cb71:	cdq    
  43cb72:	push   QWORD PTR [rbx]
  43cb74:	cwd    
  43cb76:	push   QWORD PTR [rbx]
  43cb78:	cdq    
  43cb79:	int3   
  43cb7a:	push   QWORD PTR [rbx]
  43cb7c:	cwd    
  43cb7e:	jmp    QWORD PTR [rsi-0x67]
  43cb81:	int3   
  43cb82:	call   FWORD PTR [rcx-0x66003334]
  43cb88:	int3   
  43cb89:	int3   
  43cb8a:	jmp    QWORD PTR [rsi-0x67]
  43cb8d:	cdq    
  43cb8e:	jmp    QWORD PTR [rsi-0x67]
  43cb91:	cdq    
  43cb92:	jmp    QWORD PTR [rsi-0x67]
  43cb95:	cdq    
  43cb96:	inc    DWORD PTR [rax]
  43cb98:	xor    esp,DWORD PTR [rsi-0x1]
  43cb9b:	add    BYTE PTR [rbx],dh
  43cb9d:	inc    WORD PTR [rax]
  43cba0:	xor    esp,DWORD PTR [rsi-0x1]
  43cba3:	add    BYTE PTR [rsi+0x66],ah
  43cba6:	push   QWORD PTR [rbx]
  43cba8:	xor    esp,DWORD PTR [rsi-0x1]
	...
  43cbcf:	cwd    
  43cbd1:	cdq    
  43cbd2:	call   FWORD PTR [rcx+0x66ffcccc]
  43cbd8:	cdq    
  43cbd9:	int3   
  43cbda:	jmp    QWORD PTR [rsi-0x67]
  43cbdd:	int3   
  43cbde:	jmp    QWORD PTR [rsi-0x67]
  43cbe1:	cdq    
  43cbe2:	call   FWORD PTR [rcx-0x39003334]
  43cbe8:	(bad)  
  43cbe9:	out    dx,eax
  43cbea:	call   FWORD PTR [rcx-0x66003334]
  43cbf0:	int3   
  43cbf1:	(bad)  
  43cbf2:	jmp    QWORD PTR [rsi-0x67]
  43cbf5:	int3   
  43cbf6:	jmp    QWORD PTR [rsi-0x67]
  43cbf9:	int3   
  43cbfa:	push   QWORD PTR [rbx]
  43cbfc:	cwd    
  43cbfe:	push   QWORD PTR [rbx]
  43cc00:	cdq    
  43cc01:	cdq    
  43cc02:	jmp    QWORD PTR [rsi-0x67]
  43cc05:	int3   
  43cc06:	call   FWORD PTR [rcx-0x66003334]
  43cc0c:	int3   
  43cc0d:	int3   
  43cc0e:	call   FWORD PTR [rcx-0x66000034]
  43cc14:	int3   
  43cc15:	int3   
  43cc16:	call   QWORD PTR [rax+0x66ffada9]
  43cc1c:	cdq    
  43cc1d:	cdq    
  43cc1e:	jmp    QWORD PTR [rsi-0x67]
  43cc21:	cdq    
  43cc22:	inc    DWORD PTR [rax]
  43cc24:	xor    esp,DWORD PTR [rsi-0x1]
  43cc27:	xor    esi,DWORD PTR [rbx]
  43cc29:	inc    WORD PTR [rax]
	...
  43cc48:	add    BYTE PTR [rax],al
  43cc4a:	add    BYTE PTR [rsi-0x67],ah
  43cc4d:	int3   
  43cc4e:	jmp    QWORD PTR [rsi-0x67]
  43cc51:	int3   
  43cc52:	jmp    QWORD PTR [rsi-0x67]
  43cc55:	int3   
  43cc56:	jmp    QWORD PTR [rsi-0x67]
  43cc59:	int3   
  43cc5a:	inc    esi
  43cc5c:	(bad)  
  43cc5d:	out    dx,eax
  43cc5e:	inc    esi
  43cc60:	(bad)  
  43cc61:	out    dx,eax
  43cc62:	inc    esi
  43cc64:	(bad)  
  43cc65:	out    dx,eax
  43cc66:	call   QWORD PTR [rax+0x66ffada9]
  43cc6c:	cdq    
  43cc6d:	int3   
  43cc6e:	jmp    QWORD PTR [rsi-0x67]
  43cc71:	int3   
  43cc72:	jmp    QWORD PTR [rsi-0x67]
  43cc75:	int3   
  43cc76:	push   QWORD PTR [rbx]
  43cc78:	cwd    
  43cc7a:	push   QWORD PTR [rbx]
  43cc7c:	cwd    
  43cc7e:	jmp    QWORD PTR [rsi-0x67]
  43cc81:	int3   
  43cc82:	jmp    QWORD PTR [rsi-0x67]
  43cc85:	int3   
  43cc86:	jmp    QWORD PTR [rsi-0x67]
  43cc89:	int3   
  43cc8a:	jmp    QWORD PTR [rsi-0x67]
  43cc8d:	cdq    
  43cc8e:	jmp    QWORD PTR [rsi-0x67]
  43cc91:	int3   
  43cc92:	call   FWORD PTR [rcx-0x66003334]
  43cc98:	int3   
  43cc99:	(bad)  
  43cc9a:	call   FWORD PTR [rcx+0x66ffcccc]
  43cca0:	cdq    
  43cca1:	int3   
  43cca2:	jmp    QWORD PTR [rsi-0x67]
  43cca5:	cdq    
  43cca6:	jmp    QWORD PTR [rsi-0x67]
  43cca9:	cdq    
  43ccaa:	jmp    QWORD PTR [rsi-0x67]
  43ccad:	cdq    
  43ccae:	inc    DWORD PTR [rax]
	...
  43ccc0:	add    BYTE PTR [rax],al
  43ccc2:	add    BYTE PTR [rsi-0x67],ah
  43ccc5:	int3   
  43ccc6:	jmp    QWORD PTR [rsi-0x67]
  43ccc9:	int3   
  43ccca:	dec    esp
  43cccc:	(bad)  
  43cccd:	(bad)  
  43ccce:	call   rsi
  43ccd0:	out    0xe7,eax
  43ccd2:	inc    esi
  43ccd4:	(bad)  
  43ccd5:	out    dx,eax
  43ccd6:	call   rsi
  43ccd8:	out    0xe7,eax
  43ccda:	call   FWORD PTR [rcx+0x66ffcccc]
  43cce0:	cdq    
  43cce1:	int3   
  43cce2:	jmp    QWORD PTR [rsi-0x67]
  43cce5:	int3   
  43cce6:	jmp    QWORD PTR [rsi-0x67]
  43cce9:	int3   
  43ccea:	push   QWORD PTR [rbx]
  43ccec:	cwd    
  43ccee:	push   QWORD PTR [rbx]
  43ccf0:	cwd    
  43ccf2:	push   QWORD PTR [rbx]
  43ccf4:	cwd    
  43ccf6:	push   QWORD PTR [rbx]
  43ccf8:	cwd    
  43ccfa:	push   QWORD PTR [rbx]
  43ccfc:	cwd    
  43ccfe:	jmp    QWORD PTR [rsi-0x67]
  43cd01:	int3   
  43cd02:	jmp    QWORD PTR [rsi-0x67]
  43cd05:	int3   
  43cd06:	jmp    QWORD PTR [rsi-0x67]
  43cd09:	int3   
  43cd0a:	jmp    QWORD PTR [rsi-0x67]
  43cd0d:	int3   
  43cd0e:	jmp    QWORD PTR [rsi-0x67]
  43cd11:	int3   
  43cd12:	jmp    QWORD PTR [rsi-0x67]
  43cd15:	int3   
  43cd16:	jmp    QWORD PTR [rsi-0x67]
  43cd19:	cdq    
  43cd1a:	jmp    QWORD PTR [rsi-0x67]
  43cd1d:	int3   
  43cd1e:	call   FWORD PTR [rcx-0x66000034]
  43cd24:	int3   
  43cd25:	int3   
  43cd26:	jmp    QWORD PTR [rsi-0x67]
  43cd29:	int3   
  43cd2a:	call   QWORD PTR [rax+0x66ffada9]
  43cd30:	cdq    
  43cd31:	cdq    
  43cd32:	inc    DWORD PTR [rax]
	...
  43cd3c:	add    BYTE PTR [rax],al
  43cd3e:	add    BYTE PTR [rsi-0x67],ah
  43cd41:	int3   
  43cd42:	jmp    QWORD PTR [rsi-0x67]
  43cd45:	int3   
  43cd46:	jmp    QWORD PTR [rsi-0x67]
  43cd49:	int3   
  43cd4a:	jmp    QWORD PTR [rsi-0x67]
  43cd4d:	int3   
  43cd4e:	jmp    QWORD PTR [rsi-0x67]
  43cd51:	int3   
  43cd52:	jmp    QWORD PTR [rsi-0x67]
  43cd55:	int3   
  43cd56:	jmp    QWORD PTR [rsi-0x67]
  43cd59:	int3   
  43cd5a:	jmp    QWORD PTR [rsi-0x67]
  43cd5d:	int3   
  43cd5e:	push   QWORD PTR [rbx]
  43cd60:	cwd    
  43cd62:	push   QWORD PTR [rbx]
  43cd64:	cwd    
  43cd66:	push   QWORD PTR [rbx]
  43cd68:	cwd    
  43cd6a:	push   QWORD PTR [rbx]
  43cd6c:	cwd    
  43cd6e:	push   QWORD PTR [rbx]
  43cd70:	cwd    
  43cd72:	push   QWORD PTR [rbx]
  43cd74:	cwd    
  43cd76:	push   QWORD PTR [rbx]
  43cd78:	cwd    
  43cd7a:	push   QWORD PTR [rbx]
  43cd7c:	cwd    
  43cd7e:	jmp    QWORD PTR [rsi-0x67]
  43cd81:	int3   
  43cd82:	jmp    QWORD PTR [rsi-0x67]
  43cd85:	int3   
  43cd86:	jmp    QWORD PTR [rsi-0x67]
  43cd89:	int3   
  43cd8a:	jmp    QWORD PTR [rsi-0x67]
  43cd8d:	int3   
  43cd8e:	jmp    QWORD PTR [rsi-0x67]
  43cd91:	int3   
  43cd92:	jmp    QWORD PTR [rsi-0x67]
  43cd95:	int3   
  43cd96:	jmp    QWORD PTR [rsi-0x67]
  43cd99:	int3   
  43cd9a:	jmp    QWORD PTR [rsi-0x67]
  43cd9d:	int3   
  43cd9e:	jmp    QWORD PTR [rsi-0x67]
  43cda1:	cdq    
  43cda2:	jmp    QWORD PTR [rsi-0x67]
  43cda5:	int3   
  43cda6:	jmp    QWORD PTR [rsi-0x67]
  43cda9:	cdq    
  43cdaa:	jmp    QWORD PTR [rsi-0x67]
  43cdad:	cdq    
  43cdae:	jmp    QWORD PTR [rsi-0x67]
  43cdb1:	cdq    
  43cdb2:	inc    DWORD PTR [rax]
	...
  43cdcc:	add    BYTE PTR [rax],al
  43cdce:	add    BYTE PTR [rcx+0x66ffcc99],bl
  43cdd4:	cdq    
  43cdd5:	cdq    
  43cdd6:	jmp    QWORD PTR [rsi-0x67]
  43cdd9:	int3   
  43cdda:	push   QWORD PTR [rbx]
  43cddc:	cdq    
  43cddd:	cdq    
  43cdde:	push   QWORD PTR [rbx]
  43cde0:	cwd    
  43cde2:	push   QWORD PTR [rbx]
  43cde4:	cwd    
  43cde6:	push   QWORD PTR [rbx]
  43cde8:	cwd    
  43cdea:	push   QWORD PTR [rbx]
  43cdec:	cwd    
  43cdee:	push   QWORD PTR [rbx]
  43cdf0:	cwd    
  43cdf2:	push   QWORD PTR [rbx]
  43cdf4:	cwd    
  43cdf6:	push   QWORD PTR [rbx]
  43cdf8:	cwd    
  43cdfa:	push   QWORD PTR [rbx]
  43cdfc:	cwd    
  43cdfe:	jmp    QWORD PTR [rsi-0x67]
  43ce01:	int3   
  43ce02:	jmp    QWORD PTR [rsi-0x34]
  43ce05:	int3   
  43ce06:	jmp    QWORD PTR [rsi-0x67]
  43ce09:	int3   
  43ce0a:	jmp    QWORD PTR [rsi-0x34]
  43ce0d:	int3   
  43ce0e:	jmp    QWORD PTR [rsi-0x67]
  43ce11:	int3   
  43ce12:	jmp    QWORD PTR [rsi-0x34]
  43ce15:	int3   
  43ce16:	jmp    QWORD PTR [rsi-0x67]
  43ce19:	int3   
  43ce1a:	jmp    QWORD PTR [rsi-0x67]
  43ce1d:	cdq    
  43ce1e:	jmp    QWORD PTR [rsi-0x67]
  43ce21:	int3   
  43ce22:	jmp    QWORD PTR [rsi-0x67]
  43ce25:	cdq    
  43ce26:	jmp    QWORD PTR [rsi-0x67]
  43ce29:	int3   
  43ce2a:	inc    DWORD PTR [rax]
	...
  43ce48:	add    BYTE PTR [rax],al
  43ce4a:	add    BYTE PTR [rsi-0x67],ah
  43ce4d:	int3   
  43ce4e:	jmp    QWORD PTR [rsi-0x34]
  43ce51:	int3   
  43ce52:	call   FWORD PTR [rcx-0x66000034]
  43ce58:	int3   
  43ce59:	int3   
  43ce5a:	jmp    QWORD PTR [rsi-0x67]
  43ce5d:	int3   
  43ce5e:	jmp    QWORD PTR [rsi-0x67]
  43ce61:	int3   
  43ce62:	jmp    QWORD PTR [rsi-0x67]
  43ce65:	cdq    
  43ce66:	push   QWORD PTR [rbx]
  43ce68:	cwd    
  43ce6a:	push   QWORD PTR [rbx]
  43ce6c:	cwd    
  43ce6e:	push   QWORD PTR [rbx]
  43ce70:	cwd    
  43ce72:	push   QWORD PTR [rbx]
  43ce74:	cwd    
  43ce76:	push   QWORD PTR [rbx]
  43ce78:	cwd    
  43ce7a:	push   QWORD PTR [rbx]
  43ce7c:	cwd    
  43ce7e:	jmp    QWORD PTR [rsi-0x67]
  43ce81:	int3   
  43ce82:	jmp    QWORD PTR [rsi-0x67]
  43ce85:	int3   
  43ce86:	jmp    QWORD PTR [rsi-0x67]
  43ce89:	int3   
  43ce8a:	jmp    QWORD PTR [rsi-0x67]
  43ce8d:	int3   
  43ce8e:	jmp    QWORD PTR [rsi-0x67]
  43ce91:	int3   
  43ce92:	jmp    QWORD PTR [rsi-0x67]
  43ce95:	int3   
  43ce96:	jmp    QWORD PTR [rsi-0x67]
  43ce99:	int3   
  43ce9a:	jmp    QWORD PTR [rsi-0x67]
  43ce9d:	int3   
  43ce9e:	jmp    QWORD PTR [rsi-0x34]
  43cea1:	int3   
  43cea2:	jmp    QWORD PTR [rsi-0x67]
  43cea5:	int3   
  43cea6:	jmp    QWORD PTR [rsi-0x67]
  43cea9:	int3   
  43ceaa:	jmp    QWORD PTR [rsi-0x67]
  43cead:	int3   
  43ceae:	inc    DWORD PTR [rax]
	...
  43cec4:	add    BYTE PTR [rax],al
  43cec6:	add    BYTE PTR [rsi-0x67],ah
  43cec9:	int3   
  43ceca:	inc    esi
  43cecc:	(bad)  
  43cecd:	out    dx,eax
  43cece:	inc    esi
  43ced0:	(bad)  
  43ced1:	out    dx,eax
  43ced2:	inc    esi
  43ced4:	(bad)  
  43ced5:	out    dx,eax
  43ced6:	call   FWORD PTR [rcx-0x66000034]
  43cedc:	int3   
  43cedd:	int3   
  43cede:	call   FWORD PTR [rcx+0x66ffffcc]
  43cee4:	cdq    
  43cee5:	int3   
  43cee6:	push   QWORD PTR [rbx]
  43cee8:	cdq    
  43cee9:	cdq    
  43ceea:	push   QWORD PTR [rbx]
  43ceec:	cdq    
  43ceed:	cdq    
  43ceee:	push   QWORD PTR [rbx]
  43cef0:	cdq    
  43cef1:	cdq    
  43cef2:	push   QWORD PTR [rbx]
  43cef4:	cwd    
  43cef6:	push   QWORD PTR [rbx]
  43cef8:	cwd    
  43cefa:	push   QWORD PTR [rbx]
  43cefc:	cwd    
  43cefe:	jmp    QWORD PTR [rsi-0x67]
  43cf01:	int3   
  43cf02:	jmp    QWORD PTR [rsi-0x34]
  43cf05:	int3   
  43cf06:	jmp    QWORD PTR [rsi-0x67]
  43cf09:	int3   
  43cf0a:	jmp    QWORD PTR [rsi-0x67]
  43cf0d:	int3   
  43cf0e:	jmp    QWORD PTR [rsi-0x34]
  43cf11:	int3   
  43cf12:	jmp    QWORD PTR [rsi-0x67]
  43cf15:	int3   
  43cf16:	jmp    QWORD PTR [rsi-0x67]
  43cf19:	int3   
  43cf1a:	jmp    QWORD PTR [rsi-0x34]
  43cf1d:	int3   
  43cf1e:	jmp    QWORD PTR [rsi-0x67]
  43cf21:	int3   
  43cf22:	call   FWORD PTR [rcx-0x66003334]
  43cf28:	int3   
  43cf29:	int3   
  43cf2a:	jmp    QWORD PTR [rsi-0x67]
  43cf2d:	int3   
  43cf2e:	jmp    QWORD PTR [rsi-0x67]
  43cf31:	int3   
  43cf32:	inc    DWORD PTR [rax]
	...
  43cf40:	add    BYTE PTR [rax],al
  43cf42:	add    BYTE PTR [rsi-0x67],ah
  43cf45:	int3   
  43cf46:	inc    esi
  43cf48:	(bad)  
  43cf49:	out    dx,eax
  43cf4a:	dec    esp
  43cf4c:	(bad)  
  43cf4d:	(bad)  
  43cf4e:	dec    esp
  43cf50:	(bad)  
  43cf51:	(bad)  
  43cf52:	inc    esi
  43cf54:	(bad)  
  43cf55:	out    dx,eax
  43cf56:	inc    esi
  43cf58:	(bad)  
  43cf59:	out    dx,eax
  43cf5a:	call   FWORD PTR [rcx-0x66000034]
  43cf60:	int3   
  43cf61:	int3   
  43cf62:	call   FWORD PTR [rcx+0x66ffcccc]
  43cf68:	int3   
  43cf69:	int3   
  43cf6a:	jmp    QWORD PTR [rsi-0x67]
  43cf6d:	int3   
  43cf6e:	jmp    QWORD PTR [rsi-0x67]
  43cf71:	int3   
  43cf72:	push   QWORD PTR [rbx]
  43cf74:	cdq    
  43cf75:	cdq    
  43cf76:	push   QWORD PTR [rbx]
  43cf78:	cdq    
  43cf79:	cdq    
  43cf7a:	push   QWORD PTR [rbx]
  43cf7c:	cdq    
  43cf7d:	cdq    
  43cf7e:	jmp    QWORD PTR [rsi-0x67]
  43cf81:	int3   
  43cf82:	jmp    QWORD PTR [rsi-0x67]
  43cf85:	int3   
  43cf86:	jmp    QWORD PTR [rsi-0x67]
  43cf89:	int3   
  43cf8a:	jmp    QWORD PTR [rsi-0x34]
  43cf8d:	int3   
  43cf8e:	jmp    QWORD PTR [rsi-0x67]
  43cf91:	int3   
  43cf92:	jmp    QWORD PTR [rsi-0x34]
  43cf95:	int3   
  43cf96:	call   FWORD PTR [rcx-0x66000034]
  43cf9c:	int3   
  43cf9d:	int3   
  43cf9e:	call   FWORD PTR [rcx-0x66003334]
  43cfa4:	int3   
  43cfa5:	(bad)  
  43cfa6:	call   FWORD PTR [rcx-0x66003334]
  43cfac:	int3   
  43cfad:	(bad)  
  43cfae:	jmp    QWORD PTR [rsi-0x67]
  43cfb1:	int3   
  43cfb2:	inc    DWORD PTR [rax]
	...
  43cfc0:	add    BYTE PTR [rax],al
  43cfc2:	add    BYTE PTR [rsi-0x67],ah
  43cfc5:	int3   
  43cfc6:	jmp    QWORD PTR [rsi-0x67]
  43cfc9:	int3   
  43cfca:	inc    esi
  43cfcc:	(bad)  
  43cfcd:	out    dx,eax
  43cfce:	inc    esi
  43cfd0:	(bad)  
  43cfd1:	out    dx,eax
  43cfd2:	dec    esp
  43cfd4:	(bad)  
  43cfd5:	(bad)  
  43cfd6:	call   rsi
  43cfd8:	out    0xe7,eax
  43cfda:	dec    esp
  43cfdc:	(bad)  
  43cfdd:	(bad)  
  43cfde:	inc    esi
  43cfe0:	(bad)  
  43cfe1:	out    dx,eax
  43cfe2:	call   FWORD PTR [rcx-0x66000034]
  43cfe8:	int3   
  43cfe9:	(bad)  
  43cfea:	call   FWORD PTR [rcx+0x66ffcccc]
  43cff0:	int3   
  43cff1:	int3   
  43cff2:	jmp    QWORD PTR [rsi-0x67]
  43cff5:	int3   
  43cff6:	jmp    QWORD PTR [rsi-0x67]
  43cff9:	int3   
  43cffa:	jmp    QWORD PTR [rsi-0x67]
  43cffd:	int3   
  43cffe:	jmp    QWORD PTR [rsi-0x67]
  43d001:	cdq    
  43d002:	jmp    QWORD PTR [rsi-0x34]
  43d005:	int3   
  43d006:	jmp    QWORD PTR [rsi-0x67]
  43d009:	int3   
  43d00a:	call   FWORD PTR [rcx-0x66003334]
  43d010:	int3   
  43d011:	int3   
  43d012:	call   FWORD PTR [rcx-0x66003334]
  43d018:	int3   
  43d019:	int3   
  43d01a:	call   FWORD PTR [rcx-0x66000034]
  43d020:	int3   
  43d021:	(bad)  
  43d022:	inc    esi
  43d024:	(bad)  
  43d025:	out    dx,eax
  43d026:	inc    esi
  43d028:	(bad)  
  43d029:	out    dx,eax
  43d02a:	inc    esi
  43d02c:	(bad)  
  43d02d:	out    dx,eax
  43d02e:	jmp    QWORD PTR [rsi-0x67]
  43d031:	int3   
  43d032:	inc    DWORD PTR [rax]
	...
  43d048:	add    BYTE PTR [rax],al
  43d04a:	add    BYTE PTR [rsi-0x67],ah
  43d04d:	int3   
  43d04e:	jmp    QWORD PTR [rsi-0x67]
  43d051:	int3   
  43d052:	jmp    QWORD PTR [rsi-0x67]
  43d055:	int3   
  43d056:	inc    esi
  43d058:	(bad)  
  43d059:	out    dx,eax
  43d05a:	inc    esi
  43d05c:	(bad)  
  43d05d:	out    dx,eax
  43d05e:	inc    esi
  43d060:	(bad)  
  43d061:	out    dx,eax
  43d062:	inc    esi
  43d064:	(bad)  
  43d065:	out    dx,eax
  43d066:	call   FWORD PTR [rcx-0x66000034]
  43d06c:	int3   
  43d06d:	int3   
  43d06e:	call   FWORD PTR [rcx-0x66000034]
  43d074:	int3   
  43d075:	int3   
  43d076:	jmp    QWORD PTR [rsi-0x67]
  43d079:	int3   
  43d07a:	jmp    QWORD PTR [rsi-0x67]
  43d07d:	cdq    
  43d07e:	jmp    QWORD PTR [rsi-0x67]
  43d081:	int3   
  43d082:	call   QWORD PTR [rax-0x66005257]
  43d088:	int3   
  43d089:	(bad)  
  43d08a:	call   FWORD PTR [rcx-0x66003334]
  43d090:	int3   
  43d091:	(bad)  
  43d092:	call   FWORD PTR [rcx-0x39000034]
  43d098:	(bad)  
  43d099:	out    dx,eax
  43d09a:	inc    esi
  43d09c:	(bad)  
  43d09d:	out    dx,eax
  43d09e:	inc    esi
  43d0a0:	(bad)  
  43d0a1:	out    dx,eax
  43d0a2:	jmp    QWORD PTR [rsi-0x67]
  43d0a5:	int3   
  43d0a6:	jmp    QWORD PTR [rsi-0x67]
  43d0a9:	int3   
  43d0aa:	jmp    QWORD PTR [rsi-0x67]
  43d0ad:	int3   
  43d0ae:	inc    DWORD PTR [rax]
	...
  43d0d4:	add    BYTE PTR [rax],al
  43d0d6:	add    BYTE PTR [rsi-0x67],ah
  43d0d9:	int3   
  43d0da:	jmp    QWORD PTR [rsi-0x67]
  43d0dd:	int3   
  43d0de:	jmp    QWORD PTR [rsi-0x67]
  43d0e1:	int3   
  43d0e2:	inc    esi
  43d0e4:	(bad)  
  43d0e5:	out    dx,eax
  43d0e6:	inc    esi
  43d0e8:	(bad)  
  43d0e9:	out    dx,eax
  43d0ea:	call   FWORD PTR [rcx-0x66000034]
  43d0f0:	int3   
  43d0f1:	int3   
  43d0f2:	jmp    QWORD PTR [rsi-0x67]
  43d0f5:	int3   
  43d0f6:	inc    DWORD PTR [rax]
	...
  43d100:	add    BYTE PTR [rax],al
  43d102:	add    BYTE PTR [rsi-0x67],ah
  43d105:	int3   
  43d106:	jmp    QWORD PTR [rsi-0x67]
  43d109:	int3   
  43d10a:	inc    esi
  43d10c:	(bad)  
  43d10d:	out    dx,eax
  43d10e:	inc    esi
  43d110:	(bad)  
  43d111:	out    dx,eax
  43d112:	inc    esi
  43d114:	(bad)  
  43d115:	out    dx,eax
  43d116:	inc    esi
  43d118:	(bad)  
  43d119:	out    dx,eax
  43d11a:	jmp    QWORD PTR [rsi-0x67]
  43d11d:	int3   
  43d11e:	jmp    QWORD PTR [rsi-0x67]
  43d121:	int3   
  43d122:	inc    DWORD PTR [rax]
	...
  43d160:	add    BYTE PTR [rax],al
  43d162:	add    BYTE PTR [rsi-0x67],ah
  43d165:	int3   
  43d166:	jmp    QWORD PTR [rsi-0x67]
  43d169:	int3   
  43d16a:	call   FWORD PTR [rcx+0x66ffcc99]
  43d170:	cdq    
  43d171:	int3   
  43d172:	inc    DWORD PTR [rax]
	...
  43d188:	add    BYTE PTR [rax],al
  43d18a:	add    BYTE PTR [rsi-0x67],ah
  43d18d:	int3   
  43d18e:	jmp    QWORD PTR [rsi-0x67]
  43d191:	int3   
  43d192:	jmp    QWORD PTR [rsi-0x67]
  43d195:	int3   
  43d196:	jmp    QWORD PTR [rsi-0x67]
  43d199:	int3   
  43d19a:	inc    DWORD PTR [rax]
	...
  43d1b0:	add    BYTE PTR [rax],al
  43d1b2:	add    bh,bh
  43d1b4:	inc    DWORD PTR [rax]
  43d1b6:	add    bh,bh
  43d1b8:	inc    DWORD PTR [rax]
  43d1ba:	add    bh,bh
  43d1bc:	inc    DWORD PTR [rax]
  43d1be:	add    bh,dh
  43d1c0:	inc    DWORD PTR [rax]
  43d1c2:	add    bl,ah
  43d1c4:	inc    DWORD PTR [rax]
  43d1c6:	add    cl,al
  43d1c8:	inc    DWORD PTR [rax]
  43d1ca:	add    BYTE PTR [rax+0xfc],al
  43d1d0:	jo     0x43d1d2
  43d1d2:	add    cl,al
  43d1d4:	rol    BYTE PTR [rax],0x0
  43d1d7:	rol    DWORD PTR [rax],0x0
  43d1da:	add    al,al
  43d1dc:	add    BYTE PTR [rax],al
  43d1de:	add    al,al
  43d1e0:	add    BYTE PTR [rax],al
  43d1e2:	add    al,ah
  43d1e4:	add    BYTE PTR [rax],al
  43d1e6:	add    al,ah
  43d1e8:	add    BYTE PTR [rax],al
  43d1ea:	add    al,dh
  43d1ec:	add    BYTE PTR [rax],al
  43d1ee:	add    al,bh
  43d1f0:	add    BYTE PTR [rax],al
  43d1f2:	add    edi,esi
  43d1f4:	add    BYTE PTR [rax],al
  43d1f6:	add    edi,esi
  43d1f8:	add    BYTE PTR [rax],al
  43d1fa:	add    edi,esi
  43d1fc:	add    BYTE PTR [rax],al
  43d1fe:	add    edi,esi
  43d200:	add    BYTE PTR [rax],al
  43d202:	add    edi,esi
  43d204:	add    BYTE PTR [rax],al
  43d206:	add    edi,esp
  43d208:	add    BYTE PTR [rax],al
  43d20a:	add    eax,esi
  43d20c:	add    BYTE PTR [rax],al
  43d20e:	add    al,ah
  43d210:	add    BYTE PTR [rax],al
  43d212:	add    dh,bh
  43d214:	add    BYTE PTR [rax],al
  43d216:	add    edi,esp
  43d218:	add    BYTE PTR [rax],al
  43d21a:	add    eax,edi
  43d21c:	add    BYTE PTR [rax],al
  43d21e:	add    al,dh
  43d220:	add    BYTE PTR [rax],al
  43d222:	add    al,dh
  43d224:	add    BYTE PTR [rax],al
  43d226:	add    ah,bh
  43d228:	add    BYTE PTR [rax],al
  43d22a:	add    edi,edi
  43d22c:	xor    BYTE PTR [rax+0xf],0xff
  43d230:	lock cld 
  43d232:	(bad)  
  43d233:	sub    BYTE PTR [rax],al
  43d235:	add    BYTE PTR [rax],al
  43d237:	adc    BYTE PTR [rax],al
  43d239:	add    BYTE PTR [rax],al
  43d23b:	and    BYTE PTR [rax],al
  43d23d:	add    BYTE PTR [rax],al
  43d23f:	add    DWORD PTR [rax],eax
  43d241:	and    BYTE PTR [rax],al
  43d243:	add    BYTE PTR [rax],al
  43d245:	add    BYTE PTR [rax],al
  43d247:	add    al,0x0
	...
  43d25e:	add    BYTE PTR [rsp+rax*2+0x468f3c21],cl
  43d265:	and    edi,edi
  43d267:	mov    ch,0x61
  43d269:	ss (bad) 
  43d26b:	cld    
  43d26c:	hlt    
  43d26d:	lock (bad) 
  43d26f:	(bad)  
  43d270:	(bad)  
  43d271:	(bad)  
  43d272:	(bad)  
  43d273:	(bad)  
  43d274:	(bad)  
  43d275:	inc    DWORD PTR [rbp+0x0]
	...
  43d298:	add    BYTE PTR [rax],al
  43d29a:	add    BYTE PTR [rsp+rax*2+0x448c3c21],cl
  43d2a1:	and    edi,edi
  43d2a3:	movabs ds:0xdcff507fd7ff2d54,al
  43d2ac:	xchg   DWORD PTR [rbx-0x1],ebx
  43d2af:	stc    
  43d2b0:	in     al,0xd9
  43d2b2:	(bad)  
  43d2b3:	(bad)  
  43d2b4:	(bad)  
  43d2b5:	(bad)  
  43d2b6:	call   QWORD PTR [rdx-0x5c]
  43d2b9:	push   0xffffffffffffffff
  43d2bb:	cmp    BYTE PTR [rbp+rax*2+0x387e2bff],cl
  43d2c2:	hlt    
  43d2c3:	(bad)  
  43d2c4:	outs   dx,BYTE PTR ds:[rsi]
  43d2c5:	sub    eax,0x306e21f4
  43d2ca:	hlt    
  43d2cb:	sbb    BYTE PTR [rsi+0x27],ah
  43d2ce:	hlt    
  43d2cf:	adc    BYTE PTR [rbp+0x21],bl
  43d2d2:	hlt    
  43d2d3:	or     al,0x50
  43d2d5:	sbb    bh,bh
  43d2d7:	add    BYTE PTR [rax],al
  43d2d9:	add    BYTE PTR [rax],al
  43d2db:	mov    WORD PTR [rcx+riz*1-0x1],es
  43d2df:	xchg   edx,eax
  43d2e0:	rex.RXB and r15d,r15d
  43d2e3:	mov    edx,0xfdff3b66
  43d2e8:	xchg   edi,eax
  43d2e9:	(bad)  
  43d2ea:	call   rsp
  43d2ec:	jl     0x43d33b
  43d2ee:	jmp    rdi
  43d2f0:	(bad)  
  43d2f1:	jno    0x43d2f2
  43d2f3:	(bad)  
  43d2f4:	(bad)  
  43d2f5:	(bad)  
  43d2f6:	call   QWORD PTR [rdx-0x5c]
  43d2f9:	push   0xffffffffffffffff
  43d2fb:	(bad)  
  43d2fc:	sar    BYTE PTR [rax-0x1],0x35
  43d300:	jbe    0x43d347
  43d302:	push   QWORD PTR [rbx]
  43d304:	(bad)  
  43d305:	(bad)  
  43d306:	call   FWORD PTR [rdx]
  43d308:	mov    DWORD PTR [rdi],esi
  43d30a:	call   QWORD PTR [rsi+rax*4]
  43d30d:	xor    eax,0x317f12ff
  43d312:	inc    DWORD PTR [rdx+rsi*2]
  43d315:	and    eax,0xff
  43d31a:	add    BYTE PTR [rax],al
  43d31c:	add    BYTE PTR [rax],al
  43d31e:	add    BYTE PTR [rsp+rax*2+0x5db91e21],cl
  43d325:	(bad)  
  43d326:	call   rax
  43d328:	jbe    0x43d371
  43d32a:	push   rbx
  43d32c:	jmp    0x43d315
  43d331:	(bad)  
  43d332:	(bad)  
  43d333:	(bad)  
  43d334:	(bad)  
  43d335:	(bad)  
  43d336:	call   QWORD PTR [rdx-0x5c]
  43d339:	push   0xffffffffffffffff
  43d33b:	pop    rcx
  43d33c:	mov    dh,0x6e
  43d33e:	push   rcx
  43d340:	push   rdi
  43d342:	push   QWORD PTR [rbx]
  43d344:	(bad)  
  43d345:	(bad)  
  43d346:	jmp    FWORD PTR [rdi]
  43d348:	gs cmp al,0xff
  43d34b:	sub    eax,0x45ff4076
  43d350:	mov    dl,BYTE PTR [rdi-0x1]
  43d353:	or     eax,0xff2d82
  43d358:	add    BYTE PTR [rax],al
  43d35a:	add    BYTE PTR [rax],al
  43d35c:	add    BYTE PTR [rax],al
  43d35e:	add    BYTE PTR [rsp+rax*2+0x5db91e21],cl
  43d365:	(bad)  
  43d366:	(bad)  
  43d367:	shl    BYTE PTR [rsi+0x47],1
  43d36a:	jmp    rdi
  43d36c:	ror    al,cl
  43d36e:	jmp    rdi
  43d370:	out    dx,al
  43d371:	icebp  
  43d372:	inc    DWORD PTR [rbx+0x69f5d9b7]
  43d378:	mov    al,0x7e
  43d37a:	inc    DWORD PTR [rbp+0x59ff90dd]
  43d380:	mov    dh,0x6e
  43d382:	push   rcx
  43d384:	push   rdi
  43d386:	push   QWORD PTR [rbx]
  43d388:	(bad)  
  43d389:	(bad)  
  43d38a:	push   rcx
  43d38c:	push   rdi
  43d38e:	(bad)  
  43d38f:	jl     0x43d346
  43d391:	mov    edi,edi
  43d393:	or     al,0x7d
  43d395:	sub    bh,bh
	...
  43d3a3:	mov    ebx,0xec613f69
  43d3a8:	movabs ds:0xceefff809fdeff7a,al
  43d3b1:	mov    ebp,0xe5e9f2ff
  43d3b6:	(bad)  
  43d3b7:	(bad)  
  43d3b8:	(bad)  
  43d3b9:	(bad)  
  43d3ba:	push   rcx
  43d3bc:	out    0xe2,eax
  43d3be:	dec    edi
  43d3c0:	mov    ebp,DWORD PTR [rdx-0x1]
  43d3c3:	pop    rcx
  43d3c4:	mov    dh,0x6e
  43d3c6:	(bad)  
  43d3c7:	(bad)  
  43d3c8:	(bad)  
  43d3c9:	(bad)  
  43d3ca:	(bad)  
  43d3cb:	(bad)  
  43d3cc:	(bad)  
  43d3cd:	(bad)  
  43d3ce:	dec    DWORD PTR [rsp+rsi*4-0x7fe5006b]
  43d3d5:	xor    eax,0xff
	...
  43d3e6:	add    dl,dh
  43d3e8:	int3   
  43d3e9:	mov    ecx,0x5f8be7ff
  43d3ee:	(bad)  
  43d3ef:	fimul  DWORD PTR [rax-0x7725009f]
  43d3f5:	(bad)  
  43d3f6:	dec    ebp
  43d3f8:	xchg   BYTE PTR [rdi+rdi*8-0x20],ah
  43d3fc:	mov    ecx,0xbe80ffa7
  43d401:	cmp    bh,0xf1
  43d404:	push   rdi
  43d406:	push   rcx
  43d408:	push   rdi
  43d40a:	push   rbp
  43d40c:	(bad)  
  43d40d:	stc    
  43d40e:	call   FWORD PTR [rsi+0x25ffacd7]
  43d414:	mov    ?,WORD PTR [rdi]
  43d416:	inc    DWORD PTR [rax]
	...
  43d424:	add    BYTE PTR [rax],al
  43d426:	add    bh,bh
  43d428:	(bad)  
  43d429:	(bad)  
  43d42a:	(bad)  
  43d42b:	(bad)  
  43d42c:	(bad)  
  43d42d:	(bad)  
  43d42e:	(bad)  
  43d42f:	(bad)  
  43d430:	(bad)  
  43d431:	(bad)  
  43d432:	(bad)  
  43d433:	(bad)  
  43d434:	(bad)  
  43d435:	(bad)  
  43d436:	(bad)  
  43d437:	(bad)  
  43d438:	(bad)  
  43d439:	(bad)  
  43d43a:	(bad)  
  43d43b:	(bad)  
  43d43c:	(bad)  
  43d43d:	(bad)  
  43d43e:	(bad)  
  43d43f:	mov    esp,0xaaffc1fa
  43d444:	out    dx,al
  43d445:	mov    al,0xff
  43d447:	movabs eax,ds:0xa0ffa3e59bffa7e7
  43d450:	jmp    0xffffffffb69ed3fc
  43d455:	imul   edi,edi,0x0
	...
  43d464:	add    BYTE PTR [rax],al
  43d466:	add    BYTE PTR [rbp-0x59],bl
  43d469:	int    0xff
  43d46b:	movabs ds:0x61ffe9d9bafff3d8,eax
  43d474:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  43d475:	int    0xff
  43d477:	fs test eax,0xa964ff68
  43d47d:	push   0x68a964ff
  43d482:	jmp    QWORD PTR [rcx+rbp*4+0x68]
  43d486:	jmp    QWORD PTR [rcx+rbp*4+0x68]
  43d48a:	jmp    QWORD PTR [rcx+rbp*4+0x68]
  43d48e:	jmp    QWORD PTR [rcx+rbp*4+0x68]
  43d492:	(bad)  
  43d493:	(bad)  
  43d494:	or     DWORD PTR [rax-0x1],0x0
	...
  43d4a4:	add    BYTE PTR [rax],al
  43d4a6:	add    BYTE PTR [rbx-0x6d],cl
  43d4a9:	mov    ecx,0xccab6cff
  43d4ae:	jmp    FWORD PTR [rdi-0x53]
  43d4b1:	sar    bh,1
  43d4b3:	rex.WXB cdqe 
  43d4b5:	sar    edi,0xd
  43d4b8:	pop    rsp
  43d4b9:	mov    bh,bh
  43d4bb:	add    BYTE PTR [rcx+0x6f],al
  43d4be:	jmp    QWORD PTR [rdx]
  43d4c0:	jb     0x43d45f
  43d4c2:	call   FWORD PTR [rcx-0x61]
  43d4c5:	(bad)  
  43d4c6:	call   QWORD PTR [rbp-0x66]
  43d4c9:	mov    edi,0x8f672fff
  43d4ce:	inc    DWORD PTR [rdi]
  43d4d0:	es push rsp
  43d4d2:	inc    DWORD PTR [rax]
	...
  43d4e0:	add    BYTE PTR [rax],al
  43d4e2:	add    BYTE PTR [rcx-0x65],ah
  43d4e5:	mov    ebx,0xc8a86ffd
  43d4ea:	jmp    QWORD PTR [rsi-0x61]
  43d4ed:	ret    0x45ff
  43d4f0:	sub    DWORD PTR [rbx-0x7baae401],0xffffffff
  43d4f7:	add    edi,DWORD PTR [rax+rsi*2]
  43d4fa:	dec    DWORD PTR [rax]
  43d4fc:	push   rdi
  43d4fd:	mov    edi,edi
  43d4ff:	sub    eax,0x2cffb988
  43d504:	sub    DWORD PTR [rdi-0x426ab801],0xcaa661ff
  43d50e:	call   FWORD PTR [rbx-0x64]
  43d511:	sar    edi,0x47
  43d514:	jg     0x43d4ba
  43d516:	std    
	...
  43d51f:	push   0x3bffb298
  43d524:	jge    0x43d4cb
  43d526:	jmp    0xffffffffffeb5062
  43d52b:	or     al,0x52
  43d52d:	mov    bh,bh
  43d52f:	add    BYTE PTR [rcx],ah
  43d531:	push   rsp
  43d532:	inc    DWORD PTR [rax]
  43d534:	sbb    al,0x4b
  43d536:	inc    DWORD PTR [rax]
  43d538:	(bad)  
  43d539:	pop    rdx
  43d53a:	dec    DWORD PTR [rsi]
  43d53c:	pop    rsi
  43d53d:	mov    ?,edi
  43d53f:	rex.B (bad) 
  43d541:	enter  0x3dff,0x95
  43d545:	(bad)  
  43d546:	push   QWORD PTR [rdx+rcx*4]
  43d549:	mov    ecx,0xa77722ff
  43d54e:	jmp    FWORD PTR [rdx]
  43d550:	js     0x43d4f6
  43d552:	jmp    FWORD PTR [rsi]
  43d554:	imul   edx,DWORD PTR [rax-0x5a7fb717],0xff
  43d55e:	add    BYTE PTR [rax],al
  43d560:	add    BYTE PTR [rax],al
  43d562:	add    BYTE PTR [rax-0x58],bh
  43d565:	leave  
  43d566:	push   QWORD PTR [rbx-0x4c]
  43d569:	(bad)  
  43d56b:	cmp    ecx,DWORD PTR [rbp+0x6414ffbc]
  43d571:	xchg   edi,eax
  43d572:	inc    DWORD PTR [rbx]
  43d574:	rex.X jne 0x43d576
  43d577:	add    BYTE PTR [rcx],ch
  43d579:	pop    rdx
  43d57a:	call   QWORD PTR [rax]
  43d57c:	(bad)  
  43d57d:	nop
  43d57e:	inc    DWORD PTR [rbx-0x67]
  43d581:	(bad)  
  43d582:	jmp    FWORD PTR [rip+0x2affb281]        # 0x2b438809
  43d588:	xor    DWORD PTR [rbp-0x457bdd01],0xbf8d2dff
  43d592:	push   QWORD PTR [rdi]
  43d594:	(bad)  
  43d595:	lods   eax,DWORD PTR ds:[rsi]
  43d596:	repnz add BYTE PTR [rax],al
  43d599:	add    BYTE PTR [rax],al
  43d59b:	add    BYTE PTR [rax],al
  43d59d:	add    BYTE PTR [rax],al
  43d59f:	js     0x43d549
  43d5a1:	leave  
  43d5a2:	(bad)  
  43d5a3:	mov    ebp,0xc8fffce5
  43d5a8:	out    dx,eax
  43d5a9:	(bad)  
  43d5aa:	call   FWORD PTR [rdi+0x65fffada]
  43d5b0:	mov    bh,0xe1
  43d5b2:	push   QWORD PTR [rbx]
  43d5b4:	xchg   edx,eax
  43d5b5:	(bad)  
  43d5b8:	imul   ebx,DWORD PTR [rsi-0x709ee801],0xb0822dff
  43d5c2:	push   QWORD PTR [rdi+rcx*4]
  43d5c5:	sar    edi,0x4b
  43d5c8:	movabs ds:0xc781ffe3b96affd2,al
  43d5d1:	in     al,dx
  43d5d2:	inc    DWORD PTR [rax+0x58ffe7c3]
  43d5d8:	xchg   ebp,eax
  43d5d9:	mov    esi,0xf3
  43d5de:	add    BYTE PTR [rax],al
  43d5e0:	add    BYTE PTR [rax],al
  43d5e2:	add    BYTE PTR [rax-0x58],bh
  43d5e5:	leave  
  43d5e6:	(bad)  
  43d5e7:	js     0x43d591
  43d5e9:	leave  
  43d5ea:	jmp    QWORD PTR [rax-0x66000f2d]
  43d5f0:	shl    bl,cl
  43d5f2:	(bad)  
  43d5f3:	js     0x43d5b8
  43d5f5:	(bad)  
  43d5f6:	(bad)  
  43d5f7:	ds cwde 
  43d5f9:	enter  0xe5,0x0
  43d5fd:	add    BYTE PTR [rax],al
  43d5ff:	rex.X xchg ecx,eax
  43d601:	mov    esi,0xe8c175e9
  43d606:	call   QWORD PTR [rcx-0x6c001032]
  43d60c:	retf   0xffea
  43d60f:	js     0x43d5b9
  43d611:	leave  
  43d612:	(bad)  
  43d613:	js     0x43d5bd
  43d615:	leave  
  43d616:	inc    DWORD PTR [rax]
	...
  43d628:	add    BYTE PTR [rax],al
  43d62a:	add    BYTE PTR [rax-0x58],bh
  43d62d:	leave  
  43d62e:	(bad)  
  43d62f:	js     0x43d5d9
  43d631:	leave  
  43d632:	(bad)  
  43d633:	js     0x43d5dd
  43d635:	leave  
  43d636:	inc    DWORD PTR [rax]
	...
  43d640:	add    BYTE PTR [rax],al
  43d642:	add    BYTE PTR [rax-0x58],bh
  43d645:	leave  
  43d646:	(bad)  
  43d647:	jnp    0x43d603
  43d649:	fsubp  st(2),st
  43d64b:	js     0x43d5f5
  43d64d:	leave  
  43d64e:	inc    DWORD PTR [rax]
	...
  43d658:	add    BYTE PTR [rax],al
  43d65a:	add    BYTE PTR [rcx+0xff],al
  43d660:	add    DWORD PTR [rax],eax
  43d662:	add    BYTE PTR [rax],al
  43d664:	add    DWORD PTR [rax],eax
  43d666:	add    BYTE PTR [rax-0x7fffffff],al
  43d66c:	add    DWORD PTR [rax],eax
  43d66e:	add    al,al
  43d670:	add    DWORD PTR [rax],eax
  43d672:	add    al,ah
  43d674:	add    DWORD PTR [rax],eax
  43d676:	add    al,ah
  43d678:	add    DWORD PTR [rax],eax
  43d67a:	add    al,ah
  43d67c:	add    DWORD PTR [rax],eax
  43d67e:	add    al,ah
  43d680:	add    eax,DWORD PTR [rax]
  43d682:	add    al,al
  43d684:	add    DWORD PTR [rax],eax
  43d686:	add    BYTE PTR [rax-0x40000000],al
  43d68c:	add    DWORD PTR [rax],eax
  43d68e:	add    BYTE PTR [rax-0x40000000],al
  43d694:	add    DWORD PTR [rax],0xc7f100
  43d69a:	add    BYTE PTR [rbx],cl
  43d69c:	add    BYTE PTR [rcx],al
  43d69f:	add    BYTE PTR [rax],al
  43d6a1:	add    bh,bh
  43d6a3:	(bad)  
  43d6a4:	(bad)  
  43d6a5:	inc    DWORD PTR [rcx]
  43d6a7:	add    BYTE PTR [rax],al
  43d6a9:	add    BYTE PTR [rax],al
  43d6ab:	add    BYTE PTR [rax],al
  43d6ad:	add    BYTE PTR [rdx+rax*1],cl
  43d6b0:	add    BYTE PTR [rax],al
  43d6b2:	add    BYTE PTR [rcx+0x53],dl
  43d6b5:	jns    0x43d72a
  43d6b7:	je     0x43d71e
  43d6b9:	ins    DWORD PTR es:[rdi],dx
  43d6ba:	cs rex.R jb 0x43d71f
  43d6be:	ja     0x43d729
  43d6c0:	outs   dx,BYTE PTR ds:[rsi]
  43d6c1:	addr32 sub al,0x20
  43d6c4:	push   rsi
  43d6c5:	gs jb  0x43d73b
  43d6c8:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  43d6cf:	xor    BYTE PTR cs:[rsi],ch
  43d6d2:	xor    BYTE PTR [rax+riz*1],ch
  43d6d5:	rex.XB jne 0x43d744
  43d6d8:	je     0x43d74f
  43d6da:	jb     0x43d741
  43d6dc:	cmp    eax,0x7475656e
  43d6e1:	jb     0x43d744
  43d6e3:	ins    BYTE PTR es:[rdi],dx
  43d6e4:	sub    al,0x20
  43d6e6:	push   rax
  43d6e7:	jne    0x43d74b
  43d6e9:	ins    BYTE PTR es:[rdi],dx
  43d6ea:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  43d6f1:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  43d6f5:	(bad)  
  43d6f6:	xor    BYTE PTR [rbx],dh
  43d6f8:	xor    ax,0x3766
  43d6fc:	xor    WORD PTR [rcx],si
  43d6ff:	fs xor eax,0x61336130
  43d705:	add    eax,0x1
  43d70a:	adc    edx,DWORD PTR [rbx+0x79]
  43d70d:	jae    0x43d783
  43d70f:	gs ins DWORD PTR es:[rdi],dx
  43d711:	cs rex.R jb 0x43d776
  43d715:	ja     0x43d780
  43d717:	outs   dx,BYTE PTR ds:[rsi]
  43d718:	movsxd rbp,DWORD PTR cs:[r15d+0x6e]
  43d71e:	add    al,BYTE PTR [rax]
  43d720:	add    BYTE PTR [rax],al
  43d722:	or     BYTE PTR [rcx+0x63],cl
  43d725:	outs   dx,DWORD PTR ds:[rsi]
  43d726:	outs   dx,BYTE PTR ds:[rsi]
  43d727:	rex.R (bad) 
  43d729:	je     0x43d78c
  43d72b:	or     BYTE PTR [rcx+0x63],cl
  43d72e:	outs   dx,DWORD PTR ds:[rsi]
  43d72f:	outs   dx,BYTE PTR ds:[rsi]
  43d730:	push   rbx
  43d731:	imul   edi,DWORD PTR [rdx+0x65],0x13020407
  43d738:	push   rbx
  43d739:	jns    0x43d7ae
  43d73b:	je     0x43d7a2
  43d73d:	ins    DWORD PTR es:[rdi],dx
  43d73e:	cs rex.R jb 0x43d7a3
  43d742:	ja     0x43d7ad
  43d744:	outs   dx,BYTE PTR ds:[rsi]
  43d745:	addr32 cs push rbx
  43d748:	imul   edi,DWORD PTR [rdx+0x65],0x2
  43d74f:	add    al,BYTE PTR [rax]
  43d751:	add    BYTE PTR [rax],al
  43d753:	or     DWORD PTR [rbx],eax
  43d755:	add    BYTE PTR [rax],al
  43d757:	add    BYTE PTR [rip+0xfffffffffffffffc],al        # 0x43d759
  43d75d:	adc    edx,DWORD PTR [rbx+0x79]
  43d760:	jae    0x43d7d6
  43d762:	gs ins DWORD PTR es:[rdi],dx
  43d764:	cs rex.R jb 0x43d7c9
  43d768:	ja     0x43d7d3
  43d76a:	outs   dx,BYTE PTR ds:[rsi]
  43d76b:	addr32 cs push rbx
  43d76e:	imul   edi,DWORD PTR [rdx+0x65],0x2
  43d775:	add    eax,0x74646977
  43d77a:	push   0x69656806
  43d77f:	addr32 push 0x8000074
  43d785:	or     BYTE PTR [rdx],al
	...
  43d78f:	add    BYTE PTR [rax],al
  43d791:	add    BYTE PTR [rdi],cl
  43d793:	add    eax,DWORD PTR [rax]
  43d795:	add    BYTE PTR [rax],al
  43d797:	xchg   esi,eax
  43d798:	(bad)  
  43d799:	add    BYTE PTR [rax],al
  43d79b:	add    al,BYTE PTR [rax]
  43d79d:	add    BYTE PTR [rcx],al
  43d79f:	add    BYTE PTR [rsi],al
  43d7a1:	add    BYTE PTR [rax],ah
  43d7a3:	and    BYTE PTR [rax],dl
  43d7a5:	add    BYTE PTR [rcx],al
  43d7a7:	add    BYTE PTR [rax+rax*1],al
  43d7aa:	call   0x6643d7b1
  43d7af:	add    BYTE PTR [rax],al
  43d7b1:	add    BYTE PTR [rax],dl
  43d7b3:	adc    BYTE PTR [rax],dl
  43d7b5:	add    BYTE PTR [rcx],al
  43d7b7:	add    BYTE PTR [rax+rax*1],al
  43d7ba:	sub    BYTE PTR [rcx],al
  43d7bc:	add    BYTE PTR [rax],al
  43d7be:	rex.WRX add r8,QWORD PTR [rax]
  43d7c1:	add    BYTE PTR [rax],ah
  43d7c3:	and    BYTE PTR [rax],al
  43d7c5:	add    BYTE PTR [rcx],al
  43d7c7:	add    BYTE PTR [rax],cl
  43d7c9:	add    BYTE PTR [rax+0x76000008],ch
  43d7cf:	add    al,0x0
  43d7d1:	add    BYTE PTR [rax],dl
  43d7d3:	adc    BYTE PTR [rax],al
  43d7d5:	add    BYTE PTR [rcx],al
  43d7d7:	add    BYTE PTR [rax],cl
  43d7d9:	add    BYTE PTR [rax+0x5],ch
  43d7dc:	add    BYTE PTR [rax],al
  43d7de:	(bad)  
  43d7df:	or     eax,0x20200000
  43d7e4:	add    BYTE PTR [rax],al
  43d7e6:	add    DWORD PTR [rax],eax
  43d7e8:	and    BYTE PTR [rax],al
  43d7ea:	test   al,0x10
  43d7ec:	add    BYTE PTR [rax],al
  43d7ee:	xchg   BYTE PTR [rdx],dl
  43d7f0:	add    BYTE PTR [rax],al
  43d7f2:	adc    BYTE PTR [rax],dl
  43d7f4:	add    BYTE PTR [rax],al
  43d7f6:	add    DWORD PTR [rax],eax
  43d7f8:	and    BYTE PTR [rax],al
  43d7fa:	push   0x2e000004
  43d7ff:	and    eax,DWORD PTR [rax]
  43d801:	add    BYTE PTR [rax],ch
  43d803:	add    BYTE PTR [rax],al
  43d805:	add    BYTE PTR [rax],ah
  43d807:	add    BYTE PTR [rax],al
  43d809:	add    BYTE PTR [rax+0x0],al
  43d80c:	add    BYTE PTR [rax],al
  43d80e:	add    DWORD PTR [rax],eax
  43d810:	add    al,0x0
  43d812:	add    BYTE PTR [rax],al
  43d814:	add    BYTE PTR [rax],al
  43d816:	add    BYTE PTR [rdx],al
	...
  43d830:	add    BYTE PTR [rax],0x0
  43d833:	add    BYTE PTR [rax],0x0
  43d836:	add    BYTE PTR [rax+0x800080],al
  43d83c:	add    BYTE PTR [rax],al
  43d83e:	add    BYTE PTR [rax],0x80
  43d841:	add    BYTE PTR [rax-0x7fffff80],al
  43d847:	add    BYTE PTR [rax-0x3f3f4000],0x0
  43d84e:	add    BYTE PTR [rax],al
  43d850:	inc    DWORD PTR [rax]
  43d852:	add    bh,bh
  43d854:	add    BYTE PTR [rax],al
  43d856:	add    bh,bh
  43d858:	inc    DWORD PTR [rax]
  43d85a:	inc    DWORD PTR [rax]
  43d85c:	add    BYTE PTR [rax],al
  43d85e:	inc    DWORD PTR [rax]
  43d860:	inc    DWORD PTR [rax]
  43d862:	(bad)  
  43d863:	inc    DWORD PTR [rax]
  43d865:	add    bh,bh
  43d867:	(bad)  
  43d868:	inc    DWORD PTR [rax]
	...
  43d87a:	add    BYTE PTR [rax],al
  43d87c:	(bad)  
  43d87d:	ja     0x43d8f6
  43d87f:	ja     0x43d8f8
  43d881:	ja     0x43d8fa
  43d883:	ja     0x43d8fc
  43d885:	ja     0x43d8fe
  43d887:	jo     0x43d889
  43d889:	add    BYTE PTR [rax],al
  43d88b:	add    BYTE PTR [rdi],al
  43d88d:	mov    BYTE PTR [rax-0x77777778],cl
  43d893:	mov    BYTE PTR [rax+0x708f88],cl
  43d899:	add    BYTE PTR [rax],al
  43d89b:	add    BYTE PTR [rdi],al
  43d89d:	mov    BYTE PTR [rax-0x77777778],cl
  43d8a3:	mov    BYTE PTR [rax+0x708888],cl
  43d8a9:	add    BYTE PTR [rax],al
  43d8ab:	add    BYTE PTR [rdi],al
  43d8ad:	(bad)  
  43d8ae:	(bad)
  43d8b2:	mov    BYTE PTR [rax+0x708f8888],cl
  43d8b8:	add    BYTE PTR [rax],al
  43d8ba:	add    BYTE PTR [rax],al
  43d8bc:	(bad)  
  43d8bd:	mov    BYTE PTR [rax-0x77777778],cl
  43d8c3:	mov    BYTE PTR [rax+0x708888],cl
  43d8c9:	add    BYTE PTR [rax],al
  43d8cb:	add    BYTE PTR [rdi],al
  43d8cd:	clc    
  43d8ce:	clc    
  43d8cf:	clc    
  43d8d0:	mov    BYTE PTR [rax-0x78777778],cl
  43d8d6:	mov    BYTE PTR [rax+0x0],dh
  43d8d9:	add    BYTE PTR [rax],al
  43d8db:	add    BYTE PTR [rdi],al
  43d8dd:	vpmacssdqh ymm1,ymm14,ymm8,YMMWORD PTR [r8-0x77777778]
  43d8e7:	jo     0x43d8e9
  43d8e9:	add    BYTE PTR [rax],al
  43d8eb:	add    BYTE PTR [rdi],al
  43d8ed:	mov    BYTE PTR [rdi-0x8],dh
  43d8f0:	mov    BYTE PTR [rax-0x77777778],cl
  43d8f6:	mov    BYTE PTR [rax+0x0],dh
  43d8f9:	add    BYTE PTR [rax],al
  43d8fb:	add    BYTE PTR [rdi],al
  43d8fd:	jmp    QWORD PTR [rdi+0x78]
  43d900:	clc    
  43d901:	clc    
  43d902:	mov    BYTE PTR [rax+0x708f8888],cl
  43d908:	add    BYTE PTR [rax],al
  43d90a:	add    BYTE PTR [rax],al
  43d90c:	(bad)  
  43d90d:	(bad)  
  43d90e:	js     0x43d987
  43d910:	mov    BYTE PTR [rdi-0x77777771],cl
  43d916:	mov    BYTE PTR [rax+0x0],dh
  43d919:	add    BYTE PTR [rax],al
  43d91b:	add    BYTE PTR [rdi],al
  43d91d:	clc    
  43d91e:	ja     0x43d8aa
  43d920:	(bad)
  43d924:	mov    BYTE PTR [rax+0x708f],cl
  43d92a:	(bad)  
  43d92b:	ja     0x43d9a3
  43d92d:	jbe    0x43d967
  43d92f:	scas   eax,DWORD PTR es:[rdi]
  43d930:	jbe    0x43d92a
  43d932:	clc    
  43d933:	mov    BYTE PTR [rax+0x708f88],cl
  43d939:	add    BYTE PTR [rdx],al
  43d93b:	mov    cl,BYTE PTR [rax-0x8858578]
  43d941:	js     0x43d8d2
  43d943:	vpmacssdqh xmm6,xmm14,xmm0,XMMWORD PTR [r8+0x0]
  43d94a:	add    edi,DWORD PTR [rdx-0x76]
  43d94d:	stos   BYTE PTR es:[rdi],al
  43d94e:	mov    edx,0xf8673f7a
  43d953:	mov    BYTE PTR [rdi+0x708f88],cl
  43d959:	add    BYTE PTR [rdx],cl
  43d95b:	mov    dh,BYTE PTR [rdi-0x55585749]
  43d961:	repz clc 
  43d963:	clc    
  43d964:	clc    
  43d965:	mov    BYTE PTR [rdi+0x3000070],cl
  43d96b:	mov    bh,BYTE PTR [rdx-0x58]
  43d96e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  43d96f:	test   al,0xa8
  43d971:	ss clc 
  43d973:	vpmacssdqh xmm6,xmm0,xmm0,XMMWORD PTR [r8+0x0]
  43d97a:	or     dh,BYTE PTR [rdi-0x58]
  43d97d:	test   al,0xa8
  43d97f:	stos   DWORD PTR es:[rdi],eax
  43d980:	jp     0x43da01
  43d982:	(bad)  
  43d986:	(bad)  
  43d987:	jo     0x43d989
  43d989:	add    BYTE PTR [rdi],al
  43d98b:	movabs ds:0xf8f8f8a7a8a7333a,eax
  43d994:	clc    
  43d995:	clc    
  43d996:	push   QWORD PTR [rax+0x0]
  43d999:	add    BYTE PTR [rax],al
  43d99b:	add    BYTE PTR [rax],cl
  43d99d:	(bad)  
  43d99e:	cmp    BYTE PTR [rdx-0x7700081],cl
  43d9a4:	(bad)
  43d9a8:	add    BYTE PTR [rax],al
  43d9aa:	add    BYTE PTR [rax],al
  43d9ac:	(bad)  
  43d9ad:	jmp    FWORD PTR [rax]
  43d9af:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  43d9b0:	dec    DWORD PTR [rdi-0x7070708]
  43d9b6:	clc    
  43d9b7:	jo     0x43d9b9
  43d9b9:	add    BYTE PTR [rax],al
  43d9bb:	add    BYTE PTR [rdi],al
  43d9bd:	clc    
  43d9be:	movabs ds:0x8f8f8f8f8ffff87f,eax
  43d9c7:	jo     0x43d9c9
  43d9c9:	add    BYTE PTR [rax],al
  43d9cb:	add    BYTE PTR [rdi],al
  43d9cd:	push   QWORD PTR [rdi]
  43d9cf:	(bad)  
  43d9d0:	(bad)  
  43d9d1:	clc    
  43d9d2:	(bad)  
  43d9d3:	clc    
  43d9d4:	clc    
  43d9d5:	clc    
  43d9d6:	clc    
  43d9d7:	jo     0x43d9d9
  43d9d9:	add    BYTE PTR [rax],al
  43d9db:	add    BYTE PTR [rdi],al
  43d9dd:	(bad)  
  43d9de:	(bad)  
  43d9df:	clc    
  43d9e0:	clc    
  43d9e1:	(bad)  
  43d9e2:	clc    
  43d9e3:	(bad)  
  43d9e4:	(bad)  
  43d9e5:	(bad)  
  43d9e6:	push   QWORD PTR [rax+0x0]
  43d9e9:	add    BYTE PTR [rax],al
  43d9eb:	add    BYTE PTR [rdi],al
  43d9ed:	jbe    0x43da66
  43d9ef:	ja     0x43da68
  43d9f1:	ja     0x43da6a
  43d9f3:	ja     0x43da5c
  43d9f5:	jbe    0x43da6e
  43d9f7:	jo     0x43d9f9
  43d9f9:	add    BYTE PTR [rax],al
  43d9fb:	add    BYTE PTR [rdi+0x77],dh
  43d9fe:	jl     0x43d987
  43da00:	xchg   DWORD PTR [rax-0x77777778],ecx
  43da06:	mov    BYTE PTR [rdi+0x0],dh
  43da09:	add    BYTE PTR [rax],al
  43da0b:	(bad)  
  43da0c:	xchg   eax,ecx
  43da0e:	ja     0x43da8c
  43da10:	ja     0x43d9d9
  43da12:	(bad)  
  43da13:	jl     0x43da8c
  43da15:	jl     0x43da8e
  43da17:	enter  0x70,0x0
  43da1b:	js     0x43da8d
  43da1d:	js     0x43d9a7
  43da1f:	mov    BYTE PTR [rax-0x77777778],cl
  43da25:	mov    BYTE PTR [rdi+0x7008708],al
  43da2b:	ja     0x43da2d
  43da2d:	js     0x43d9b7
  43da2f:	mov    al,bh
  43da31:	(bad)
  43da35:	mov    BYTE PTR [rax+0x707700],cl
  43da3b:	add    BYTE PTR [rax],al
  43da3d:	jg     0x43d9ce
  43da3f:	clc    
  43da40:	dec    DWORD PTR [rdi-0x70771]
  43da46:	xchg   DWORD PTR [rax],eax
  43da48:	add    BYTE PTR [rax],al
  43da4a:	add    BYTE PTR [rax],al
  43da4c:	add    BYTE PTR [rdi+0x77],dh
  43da4f:	ja     0x43dac8
  43da51:	ja     0x43daca
  43da53:	ja     0x43dacc
  43da55:	ja     0x43dace
	...
  43da67:	add    BYTE PTR [rax],al
  43da69:	add    bh,bh
  43da6b:	(bad)  
  43da6c:	(bad)  
  43da6d:	(bad)  
  43da6e:	clc    
  43da6f:	add    BYTE PTR [rax],al
  43da71:	(bad)  
  43da72:	clc    
  43da73:	add    BYTE PTR [rax],al
  43da75:	(bad)  
  43da76:	clc    
  43da77:	add    BYTE PTR [rax],al
  43da79:	(bad)  
  43da7a:	clc    
  43da7b:	add    BYTE PTR [rax],al
  43da7d:	(bad)  
  43da7e:	clc    
  43da7f:	add    BYTE PTR [rax],al
  43da81:	(bad)  
  43da82:	clc    
  43da83:	add    BYTE PTR [rax],al
  43da85:	(bad)  
  43da86:	clc    
  43da87:	add    BYTE PTR [rax],al
  43da89:	(bad)  
  43da8a:	clc    
  43da8b:	add    BYTE PTR [rax],al
  43da8d:	(bad)  
  43da8e:	clc    
  43da8f:	add    BYTE PTR [rax],al
  43da91:	(bad)  
  43da92:	clc    
  43da93:	add    BYTE PTR [rax],al
  43da95:	(bad)  
  43da96:	clc    
  43da97:	add    BYTE PTR [rax],al
  43da99:	(bad)  
  43da9a:	add    BYTE PTR [rax],0x0
  43da9d:	(bad)  
  43da9e:	add    BYTE PTR [rax],0x0
  43daa1:	(bad)  
  43daa2:	add    BYTE PTR [rax],0x0
  43daa5:	(bad)  
  43daa6:	add    BYTE PTR [rax],0x0
  43daa9:	(bad)  
  43daaa:	add    BYTE PTR [rax],0x0
  43daad:	(bad)  
  43daae:	add    BYTE PTR [rax],0x0
  43dab1:	(bad)  
  43dab2:	add    BYTE PTR [rax],0x0
  43dab5:	(bad)  
  43dab6:	clc    
  43dab7:	add    BYTE PTR [rax],al
  43dab9:	(bad)  
  43daba:	clc    
  43dabb:	add    BYTE PTR [rax],al
  43dabd:	(bad)  
  43dabe:	clc    
  43dabf:	add    BYTE PTR [rax],al
  43dac1:	(bad)  
  43dac2:	clc    
  43dac3:	add    BYTE PTR [rax],al
  43dac5:	(bad)  
  43dac6:	clc    
  43dac7:	add    BYTE PTR [rax],al
  43dac9:	(bad)  
  43daca:	clc    
  43dacb:	add    BYTE PTR [rax],al
  43dacd:	(bad)  
  43dace:	lock add BYTE PTR [rax],al
  43dad1:	pavgb  mm0,QWORD PTR [rax]
  43dad4:	add    BYTE PTR [rdi],al
  43dad6:	(bad)  
  43dad7:	add    BYTE PTR [rax],al
  43dad9:	and    ecx,DWORD PTR [rax+rax*1+0xfc3100]
  43dae0:	add    BYTE PTR [rdi],bh
  43dae2:	cld    
  43dae3:	add    BYTE PTR [rax],al
  43dae5:	(bad)  
  43dae6:	(bad)  
  43dae7:	(bad)  
  43dae8:	(bad)  
  43dae9:	jmp    FWORD PTR [rax]
  43daeb:	add    BYTE PTR [rax],al
  43daed:	add    BYTE PTR [rax],dl
  43daef:	add    BYTE PTR [rax],al
  43daf1:	add    BYTE PTR [rax],ah
  43daf3:	add    BYTE PTR [rax],al
  43daf5:	add    BYTE PTR [rcx],al
  43daf7:	add    BYTE PTR [rax+rax*1],al
  43dafa:	add    BYTE PTR [rax],al
  43dafc:	add    BYTE PTR [rax],al
  43dafe:	add    BYTE PTR [rax],0x0
	...
  43db15:	add    BYTE PTR [rax],al
  43db17:	add    BYTE PTR [rax+0x800000],al
  43db1d:	add    BYTE PTR [rax],al
  43db1f:	add    BYTE PTR [rax+0x8000],0x0
  43db26:	add    BYTE PTR [rax],0x80
  43db29:	add    BYTE PTR [rax-0x7fffff80],al
  43db2f:	add    BYTE PTR [rax-0x3f3f4000],0x0
  43db36:	add    BYTE PTR [rax],al
  43db38:	inc    DWORD PTR [rax]
  43db3a:	add    bh,bh
  43db3c:	add    BYTE PTR [rax],al
  43db3e:	add    bh,bh
  43db40:	inc    DWORD PTR [rax]
  43db42:	inc    DWORD PTR [rax]
  43db44:	add    BYTE PTR [rax],al
  43db46:	inc    DWORD PTR [rax]
  43db48:	inc    DWORD PTR [rax]
  43db4a:	(bad)  
  43db4b:	inc    DWORD PTR [rax]
  43db4d:	add    bh,bh
  43db4f:	(bad)  
  43db50:	inc    DWORD PTR [rax]
  43db52:	add    BYTE PTR [rdi+0x77],dh
  43db55:	ja     0x43dbce
  43db57:	ja     0x43dbd0
  43db59:	add    BYTE PTR [rax],al
  43db5b:	js     0x43daec
  43db5d:	clc    
  43db5e:	mov    BYTE PTR [rax+0x7f0000f7],cl
  43db64:	xchg   DWORD PTR [rdi-0x78],ebp
  43db67:	mov    BYTE PTR [rdi-0x8710000],al
  43db6d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  43db6e:	clc    
  43db6f:	mov    bh,dh
  43db71:	add    BYTE PTR [rdi+0x67],dh
  43db74:	movsxd ecx,DWORD PTR [rdx+0xf7887f]
  43db7a:	test   al,0x7b
  43db7c:	xchg   DWORD PTR [rdi+0xf7f827],ebp
  43db82:	cmp    BYTE PTR [rdx+0x78fa7a7a],ch
  43db88:	test   DWORD PTR [rax],0xb78a8aa8
  43db8e:	test   al,0xf8
  43db90:	test   DWORD PTR [rax],0x8a3a3a3a
  43db96:	(bad)
  43db9a:	add    BYTE PTR [rdi-0x7570d],cl
  43dba0:	test   DWORD PTR [rax],0x8ffa7f00
  43dba6:	(bad)
  43dbaa:	add    BYTE PTR [rdi-0x1],bh
  43dbad:	(bad)  
  43dbae:	(bad)  
  43dbaf:	push   rdi
  43dbb1:	add    BYTE PTR [rax],al
  43dbb3:	ja     0x43dc2c
  43dbb5:	ja     0x43dc2e
  43dbb7:	ja     0x43dc30
  43dbb9:	add    BYTE PTR [rdi],al
  43dbbb:	(bad)  
  43dbbc:	mov    BYTE PTR [rax+0x70c08888],cl
  43dbc2:	jo     0x43dbcb
  43dbc4:	mov    BYTE PTR [rax+0x7708888],cl
  43dbca:	add    BYTE PTR [rdi],al
  43dbcc:	(bad)  
  43dbcd:	jl     0x43dc4b
  43dbcf:	ja     0x43dc41
  43dbd1:	add    al,al
  43dbd3:	add    eax,DWORD PTR [rax]
  43dbd5:	add    al,al
  43dbd7:	add    eax,DWORD PTR [rax]
  43dbd9:	add    al,al
  43dbdb:	add    eax,DWORD PTR [rax]
  43dbdd:	add    al,al
  43dbdf:	add    eax,DWORD PTR [rax]
  43dbe1:	add    BYTE PTR [rax],al
  43dbe3:	add    eax,DWORD PTR [rax]
  43dbe5:	add    BYTE PTR [rax],al
  43dbe7:	add    eax,DWORD PTR [rax]
  43dbe9:	add    BYTE PTR [rax],al
  43dbeb:	add    eax,DWORD PTR [rax]
  43dbed:	add    BYTE PTR [rax],al
  43dbef:	add    eax,DWORD PTR [rax]
  43dbf1:	add    BYTE PTR [rax],al
  43dbf3:	add    eax,DWORD PTR [rax]
  43dbf5:	add    al,al
  43dbf7:	add    eax,DWORD PTR [rax]
  43dbf9:	add    al,al
  43dbfb:	add    eax,DWORD PTR [rax]
  43dbfd:	add    al,al
  43dbff:	add    eax,DWORD PTR [rax]
  43dc01:	add    al,al
  43dc03:	add    eax,DWORD PTR [rax]
  43dc05:	add    BYTE PTR [rax+0x60000005],ah
  43dc0b:	(bad)  
  43dc0c:	add    BYTE PTR [rax],al
  43dc0e:	loopne 0x43dc17
  43dc10:	add    BYTE PTR [rax],al
  43dc12:	sub    BYTE PTR [rax],al
  43dc14:	add    BYTE PTR [rax],al
  43dc16:	and    BYTE PTR [rax],al
  43dc18:	add    BYTE PTR [rax],al
  43dc1a:	add    BYTE PTR [rax],al
  43dc1d:	add    BYTE PTR [rcx],al
  43dc1f:	add    BYTE PTR [rax],cl
  43dc21:	add    BYTE PTR [rax],al
  43dc23:	add    BYTE PTR [rax],al
  43dc25:	add    BYTE PTR [rax],al
  43dc27:	add    al,0x0
	...
  43dc31:	add    BYTE PTR [rax],al
  43dc33:	add    DWORD PTR [rax],eax
  43dc35:	add    BYTE PTR [rax],al
  43dc37:	add    DWORD PTR [rax],eax
  43dc39:	add    BYTE PTR [rax],al
  43dc3b:	add    BYTE PTR [rax],al
  43dc3d:	add    BYTE PTR [rbx-0x5aff8788],ah
  43dc43:	jnp    0x43dcc0
  43dc45:	add    BYTE PTR [rax+0x2a007f7f],ch
  43dc4b:	cdq    
  43dc4c:	add    BYTE PTR [r14],r10b
  43dc4f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  43dc50:	add    BYTE PTR [rcx],bpl
  43dc53:	mov    bl,0x53
  43dc55:	add    BYTE PTR [rbp-0x67],bl
  43dc58:	pop    rbp
  43dc59:	add    BYTE PTR [rax-0x56],bl
  43dc5c:	add    BYTE PTR fs:[rsi-0x53],bl
  43dc60:	imul   eax,DWORD PTR [rax],0x62
  43dc63:	mov    cl,0x6f
  43dc65:	add    BYTE PTR [rax-0x49],ah
  43dc68:	jae    0x43dc6a
  43dc6a:	push   0xffffffffffffffb3
  43dc6c:	je     0x43dc6e
  43dc6e:	ins    DWORD PTR es:[rdi],dx
  43dc6f:	mov    dl,0x76
  43dc71:	add    BYTE PTR [rdi-0x4e],ch
  43dc74:	jns    0x43dc76
  43dc76:	ins    DWORD PTR es:[rdi],dx
  43dc77:	mov    ch,0x78
  43dc79:	add    BYTE PTR [rax-0x4d],dh
  43dc7c:	jp     0x43dc7e
  43dc7e:	jno    0x43dc36
  43dc80:	jl     0x43dc82
  43dc82:	sub    ebp,eax
  43dc84:	add    BYTE PTR [r10],bpl
  43dc87:	enter  0x43,0x2b
  43dc8b:	enter  0x44,0x31
  43dc8f:	(bad)  
  43dc90:	rex.WB add BYTE PTR [rip+0x37004ed4],sil        # 0x37442b6b
  43dc97:	(bad)  
  43dc98:	push   rax
  43dc99:	add    BYTE PTR [rbx],bh
  43dc9b:	fist   DWORD PTR [rsi+0x0]
  43dc9e:	cmp    al,0xdb
  43dca0:	push   rdi
  43dca1:	add    BYTE PTR [rbx*8-0x23c1ffa9],bh
  43dca8:	pop    rdx
  43dca9:	add    BYTE PTR [rsi],bh
  43dcab:	loopne 0x43dd07
  43dcad:	add    BYTE PTR [rsi+rbx*8+0x5f],al
  43dcb1:	add    BYTE PTR [rcx-0x1f],al
  43dcb4:	pop    rsp
  43dcb5:	add    BYTE PTR [rdx+riz*8+0x5f],al
  43dcb9:	add    BYTE PTR [rcx-0x1b],al
  43dcbc:	pop    rsi
  43dcbd:	add    BYTE PTR [rsi+riz*8+0x5f],al
  43dcc1:	add    BYTE PTR [rcx-0x27],cl
  43dcc4:	(bad)  
  43dcc5:	add    BYTE PTR [rbx+rbx*8+0x63],cl
  43dcc9:	add    BYTE PTR [rax-0x28],bl
  43dccc:	outs   dx,BYTE PTR ds:[rsi]
  43dccd:	add    BYTE PTR [rax-0x23],bl
  43dcd0:	outs   dx,BYTE PTR ds:[rsi]
  43dcd1:	add    BYTE PTR [rbp-0x22],ah
  43dcd4:	jp     0x43dcd6
  43dcd6:	imul   ebx,ebx,0x7c
  43dcd9:	add    BYTE PTR [rbx-0x1f],al
  43dcdc:	(bad)  
  43dcdd:	add    BYTE PTR [rbp-0x1a],al
  43dce0:	(bad)  
  43dce1:	add    BYTE PTR [rbx-0x18],al
  43dce4:	(bad)  
  43dce5:	add    BYTE PTR [rbp-0x18],al
  43dce8:	(bad)  
  43dce9:	add    BYTE PTR [rsi-0x17],al
  43dcec:	add    BYTE PTR fs:[rcx-0x18],cl
  43dcf0:	data16 add BYTE PTR [rsi+riz*8+0x68],cl
  43dcf5:	add    BYTE PTR [rcx+riz*8+0x6e],dl
  43dcf9:	add    BYTE PTR [rdx-0x14],dl
  43dcfc:	ins    DWORD PTR es:[rdi],dx
  43dcfd:	add    BYTE PTR [rcx-0x1d],ch
  43dd00:	jle    0x43dd02
  43dd02:	fs in  eax,dx
  43dd04:	jle    0x43dd06
  43dd06:	je     0x43dce6
  43dd08:	xchg   BYTE PTR [rax],al
  43dd0a:	js     0x43dce8
  43dd0c:	mov    DWORD PTR [rax],eax
  43dd0e:	jl     0x43dcee
  43dd10:	mov    WORD PTR [rax],es
  43dd12:	jae    0x43dcf9
  43dd14:	xchg   BYTE PTR [rax],al
  43dd16:	jg     0x43dcfa
  43dd18:	pop    QWORD PTR [rax]
  43dd1a:	jns    0x43dd08
  43dd1c:	lea    eax,[rax]
  43dd1e:	stos   DWORD PTR es:[rdi],eax
  43dd1f:	test   DWORD PTR [rbp-0x75755200],eax
  43dd25:	add    BYTE PTR [rdx-0x49ff6f70],dh
  43dd2b:	xchg   edi,eax
  43dd2c:	xchg   edi,eax
  43dd2d:	add    BYTE PTR [rdx-0x41ff6263],bh
  43dd33:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  43dd34:	movabs ds:0xaeaec400a9aac100,eax
  43dd3d:	add    bh,al
  43dd3f:	mov    bl,0xb2
  43dd41:	add    ah,cl
  43dd43:	mov    ah,0xb3
  43dd45:	add    cl,cl
  43dd47:	mov    dh,0xb5
  43dd49:	add    ah,cl
  43dd4b:	mov    ah,0xb4
  43dd4d:	add    dl,cl
  43dd4f:	mov    eax,0xb9cb00b6
  43dd54:	mov    eax,0xb9bacc00
  43dd59:	add    dh,cl
  43dd5b:	mov    esp,0xbdce00ba
  43dd60:	mov    esp,0xbdbed000
  43dd65:	add    BYTE PTR [rsi-0x76ff6917],al
  43dd6b:	out    dx,al
  43dd6c:	(bad)  
  43dd6d:	add    BYTE PTR [rbx-0x74ff6314],cl
  43dd73:	lock popf 
  43dd75:	add    BYTE PTR [rax+rsi*8-0xd71ff62],cl
  43dd7c:	movabs eax,ds:0xbec0d100a1f09000
  43dd85:	add    dl,dl
  43dd87:	ret    0xc0
  43dd8a:	rol    esp,cl
  43dd8c:	ret    0xd400
  43dd8f:	(bad)
  43dd93:	mov    ch,0x0
  43dd96:	fadd   st,st(7)
  43dd98:	mov    BYTE PTR [rax],0xd7
  43dd9b:	enter  0xc6,0xd8
  43dd9f:	enter  0xc7,0xd7
  43dda3:	leave  
  43dda4:	enter  0xd900,0xca
  43dda8:	enter  0xda00,0xcc
  43ddac:	retf   0xdd00
  43ddaf:	int    0xcb
  43ddb1:	add    bl,bl
  43ddb3:	int    0xcc
  43ddb5:	add    ah,bl
  43ddb7:	int    0xcc
  43ddb9:	add    dh,bl
  43ddbb:	ror    dh,1
  43ddbd:	add    ah,bl
  43ddbf:	(bad)  
  43ddc0:	iret   
  43ddc1:	add    dh,bl
  43ddc3:	rcl    eax,1
  43ddc5:	add    al,ah
  43ddc7:	rcl    cl,cl
  43ddc9:	add    cl,ah
  43ddcb:	(bad)  
  43ddcc:	rol    BYTE PTR [rax],cl
  43ddce:	loop   0x43dda5
  43ddd0:	(bad)  
  43ddd1:	add    ah,ah
  43ddd3:	(bad)  
  43ddd4:	(bad)  
  43ddd5:	add    bl,ah
  43ddd7:	fcom   st(6)
  43ddd9:	add    ah,ah
  43dddb:	fcom   st(6)
  43dddd:	add    ch,ah
  43dddf:	fcmovu st,st(0)
  43dde1:	add    bh,ah
  43dde3:	(bad)  
  43dde5:	add    al,ch
  43dde7:	(bad)  
  43dde9:	add    cl,ch
  43ddeb:	(bad)  
  43dded:	add    bl,ch
  43ddef:	loopne 0x43ddcf
  43ddf1:	add    ah,ch
  43ddf3:	loope  0x43ddd4
  43ddf5:	add    bl,ch
  43ddf7:	loope  0x43ddd9
  43ddf9:	add    ah,ch
  43ddfb:	loop   0x43dddd
  43ddfd:	add    dh,ch
  43ddff:	in     al,0xe3
  43de01:	add    dh,ch
  43de03:	in     eax,0xe4
  43de05:	add    al,dh
  43de07:	out    0xe5,eax
  43de09:	add    cl,dh
  43de0b:	call   0xffffffffeb36def6
  43de10:	call   0xffffffffea2fd215
  43de15:	add    bl,dh
  43de17:	in     al,dx
  43de18:	jmp    0xffffffffeb30d21d
  43de1d:	add    dh,dh
  43de1f:	out    dx,al
  43de20:	in     al,dx
  43de21:	add    ah,ah
  43de23:	mul    edi
  43de25:	add    ch,ah
  43de27:	imul   eax
  43de29:	add    dh,dh
  43de2b:	lock out dx,eax
  43de2d:	add    al,bh
  43de2f:	icebp  
  43de30:	out    dx,eax
  43de31:	add    cl,bh
  43de33:	icebp  
  43de34:	lock add BYTE PTR [rax],al
	...
  43e033:	add    BYTE PTR [rax],al
  43e035:	add    bh,bh
  43e037:	(bad)  
  43e038:	inc    DWORD PTR [rax]
	...
  43e05e:	add    BYTE PTR [rcx],al
  43e060:	add    DWORD PTR [rcx],eax
  43e062:	add    DWORD PTR [rcx],eax
  43e064:	add    DWORD PTR [rcx],eax
  43e066:	add    DWORD PTR [rcx],eax
  43e068:	add    DWORD PTR [rcx],eax
  43e06a:	add    DWORD PTR [rcx],eax
  43e06c:	add    DWORD PTR [rcx],eax
  43e06e:	add    DWORD PTR [rcx],eax
  43e070:	add    DWORD PTR [rcx],eax
  43e072:	add    DWORD PTR [rcx],eax
  43e074:	add    DWORD PTR [rax],eax
	...
  43e07e:	add    BYTE PTR [rcx],al
  43e080:	pop    rbx
  43e081:	pop    rcx
  43e082:	push   rsi
  43e083:	push   rsi
  43e084:	push   rsi
  43e085:	rex.WX
  43e086:	rex.WX
  43e087:	rex.WB
  43e088:	rex.WB
  43e089:	rex.WB
  43e08a:	rex.RX
  43e08b:	rex.RX
  43e08c:	rex.RB
  43e08d:	rex.RB
  43e08e:	rex.RB
  43e08f:	rex.RB
  43e090:	rex.RB
  43e091:	rex.RB
  43e092:	rex.RB jl 0x43e096
	...
  43e09d:	add    BYTE PTR [rax],al
  43e09f:	add    DWORD PTR [rbx+0x5b],ebx
  43e0a2:	pop    rbx
  43e0a3:	pop    rcx
  43e0a4:	push   rsi
  43e0a5:	push   rsi
  43e0a6:	push   rsi
  43e0a7:	push   rdx
  43e0a8:	push   rdx
  43e0a9:	rex.WB
  43e0aa:	rex.WB
  43e0ab:	rex.WB
  43e0ac:	rex.WB
  43e0ad:	rex.RB
  43e0ae:	rex.RB
  43e0af:	rex.RB
  43e0b0:	rex.RB
  43e0b1:	rex.RB
  43e0b2:	rex.RB jl 0x43e0b6
	...
  43e0bd:	add    BYTE PTR [rax],al
  43e0bf:	add    DWORD PTR [rbp+0x65],esp
  43e0c2:	pop    rbx
  43e0c3:	pop    rbx
  43e0c4:	pop    rbx
  43e0c5:	push   rsi
  43e0c6:	push   rsi
  43e0c7:	push   rsi
  43e0c8:	push   rsi
  43e0c9:	rex.WX
  43e0ca:	rex.WX
  43e0cb:	rex.WB
  43e0cc:	rex.WB
  43e0cd:	rex.WB
  43e0ce:	rex.RB
  43e0cf:	rex.RB
  43e0d0:	rex.RB
  43e0d1:	rex.RB
  43e0d2:	rex.RB jl 0x43e0d6
	...
  43e0dd:	add    BYTE PTR [rax],al
  43e0df:	add    DWORD PTR [rbp+0x60],esp
  43e0e2:	gs pop rbx
  43e0e4:	pop    rbx
  43e0e5:	pop    rbx
  43e0e6:	pop    rbx
  43e0e7:	push   rsi
  43e0e8:	push   rsi
  43e0e9:	push   rdx
  43e0ea:	push   rdx
  43e0eb:	rex.WX
  43e0ec:	rex.WB
  43e0ed:	rex.WB
  43e0ee:	rex.WB
  43e0ef:	rex.RX
  43e0f0:	rex.RB
  43e0f1:	rex.RB
  43e0f2:	rex.RB jl 0x43e0f6
	...
  43e0fd:	add    BYTE PTR [rax],al
  43e0ff:	add    DWORD PTR [rbp+0x65],esp
  43e102:	movsxd esp,DWORD PTR [rbp+0x5b]
  43e105:	pop    rbx
  43e106:	pop    rbx
  43e107:	push   rsi
  43e108:	push   rsi
  43e109:	push   rsi
  43e10a:	push   rsi
  43e10b:	push   rdx
  43e10c:	rex.WX
  43e10d:	rex.WX
  43e10e:	rex.WB
  43e10f:	rex.WB
  43e110:	rex.RX
  43e111:	rex.RX
  43e112:	rex.RB jl 0x43e116
	...
  43e11d:	add    BYTE PTR [rax],al
  43e11f:	add    DWORD PTR [rcx+0x69],ebp
  43e122:	gs gs movsxd ebx,DWORD PTR gs:[rbx+0x5b]
  43e128:	pop    rbx
  43e129:	push   rsi
  43e12a:	push   rsi
  43e12b:	push   rsi
  43e12c:	push   rdx
  43e12d:	rex.WX
  43e12e:	rex.WX
  43e12f:	rex.WB
  43e130:	rex.WB
  43e131:	rex.RX
  43e132:	rex.RX jl 0x43e136
	...
  43e13d:	add    BYTE PTR [rax],al
  43e13f:	add    DWORD PTR [rdx+0x69],ebp
  43e142:	(bad)  
  43e143:	or     eax,0x5b626365
  43e148:	pop    rbx
  43e149:	pop    rbx
  43e14a:	push   rdi
  43e14b:	push   rsi
  43e14c:	push   rsi
  43e14d:	push   rsi
  43e14e:	rex.WX
  43e14f:	rex.WX
  43e150:	rex.WB
  43e151:	rex.WB
  43e152:	rex.WB jl 0x43e156
	...
  43e15d:	add    BYTE PTR [rax],al
  43e15f:	add    DWORD PTR [rsp+rbp*2+0x7],ebp
  43e163:	(bad)  
  43e164:	or     eax,0x62636565
  43e169:	pop    rbx
  43e16a:	pop    rbx
  43e16b:	pop    rdx
  43e16c:	push   rsi
  43e16d:	push   rsi
  43e16e:	push   rdx
  43e16f:	push   rsi
  43e170:	rex.WB
  43e171:	rex.WB
  43e172:	rex.WB jl 0x43e176
	...
  43e17d:	add    BYTE PTR [rax],al
  43e17f:	add    DWORD PTR [rsi+0x6c],ebp
  43e182:	(bad)  
  43e183:	jp     0x43e18c
  43e185:	adc    BYTE PTR [rbp+0x65],ah
  43e188:	pop    rbx
  43e189:	gs pop rbx
  43e18b:	pop    rbx
  43e18c:	push   rdi
  43e18d:	push   rsi
  43e18e:	push   rsi
  43e18f:	push   rsi
  43e190:	rex.WX
  43e191:	rex.WX
  43e192:	rex.WX jl 0x43e196
	...
  43e19d:	add    BYTE PTR [rax],al
  43e19f:	add    DWORD PTR [rax+0x70],esi
  43e1a2:	(bad)  
  43e1a3:	xor    eax,0x650e077a
  43e1a8:	movsxd esp,DWORD PTR gs:[rdx+0x5b]
  43e1ac:	pop    rbx
  43e1ad:	pop    rbx
  43e1ae:	push   rsi
  43e1af:	push   rsi
  43e1b0:	push   rsi
  43e1b1:	push   rsi
  43e1b2:	rex.WB jl 0x43e1b6
  43e1b5:	add    BYTE PTR [rax],al
  43e1b7:	add    BYTE PTR [rax],al
  43e1b9:	add    BYTE PTR [rax],al
  43e1bb:	(bad)  
  43e1bc:	(bad)  
  43e1bd:	(bad)  
  43e1be:	(bad)  
  43e1bf:	(bad)  
  43e1c0:	(bad)  
  43e1c1:	(bad)  
  43e1c2:	(bad)  
  43e1c3:	(bad)  
  43e1c4:	adc    al,0x7a
  43e1c6:	(bad)  
  43e1c7:	(bad)  
  43e1c8:	gs movsxd esp,DWORD PTR gs:[rbx+0x5b]
  43e1cd:	pop    rbx
  43e1ce:	pop    rbx
  43e1cf:	push   rdi
  43e1d0:	push   rsi
  43e1d1:	push   rsi
  43e1d2:	push   rdx
  43e1d3:	jl     0x43e1d6
  43e1d5:	add    BYTE PTR [rax],al
  43e1d7:	add    BYTE PTR [rax],al
  43e1d9:	add    BYTE PTR [rax],al
  43e1db:	add    eax,0x4f4f4f4d
  43e1e0:	rex.WRXB
  43e1e1:	rex.WRB
  43e1e2:	rex.WXB and rdx,QWORD PTR [rip+0xd077a14]        # 0xd4b5bfd
  43e1e9:	gs movsxd esp,DWORD PTR gs:[rbp+0x5b]
  43e1ee:	pop    rbx
  43e1ef:	pop    rbx
  43e1f0:	pop    rdx
  43e1f1:	push   rsi
  43e1f2:	push   rsi
  43e1f3:	jl     0x43e1f6
  43e1f5:	add    BYTE PTR [rax],al
  43e1f7:	add    BYTE PTR [rax],al
  43e1f9:	add    BYTE PTR [rax],al
  43e1fb:	add    eax,0x2c282831
  43e200:	sub    al,0x2a
  43e202:	(bad)  
  43e203:	sbb    dl,BYTE PTR [rdi]
  43e205:	adc    eax,0xd077a12
  43e20a:	gs gs gs movsxd ebx,DWORD PTR gs:[rbx+0x5b]
  43e211:	pop    rbx
  43e212:	push   rsi
  43e213:	jl     0x43e216
  43e215:	add    BYTE PTR [rax],al
  43e217:	add    BYTE PTR [rax],al
  43e219:	add    BYTE PTR [rax],al
  43e21b:	add    eax,0x2a281b26
  43e220:	sub    al,0x2c
  43e222:	sub    BYTE PTR [rsi],bl
  43e224:	sbb    dl,BYTE PTR [rsi]
  43e226:	adc    eax,0x63077b12
  43e22b:	imul   esp,DWORD PTR [rbp+0x65],0x5b5b6362
  43e232:	pop    rbx
  43e233:	jl     0x43e236
  43e235:	add    BYTE PTR [rax],al
  43e237:	add    BYTE PTR [rax],al
  43e239:	add    BYTE PTR [rax],al
  43e23b:	add    eax,0x281d2333
  43e240:	sub    al,0x2c
  43e242:	sub    al,0x21
  43e244:	(bad)  
  43e245:	sbb    dl,BYTE PTR [rsi]
  43e247:	(bad)  
  43e248:	(bad)  
  43e249:	or     BYTE PTR [rdx+0x69],ch
  43e24c:	imul   esp,DWORD PTR [rbp+0x65],0x5b636363
  43e253:	jl     0x43e256
  43e255:	add    BYTE PTR [rax],al
  43e257:	add    BYTE PTR [rax],al
  43e259:	add    BYTE PTR [rax],al
  43e25b:	add    eax,0x2f252434
  43e260:	cs sub al,0x2c
  43e263:	sub    bl,BYTE PTR [rsi]
  43e265:	sbb    al,0x36
  43e267:	(bad)  
  43e268:	or     DWORD PTR [rsi+0x6c],ebp
  43e26b:	ins    BYTE PTR es:[rdi],dx
  43e26c:	push   0x69
  43e26e:	gs movsxd esp,DWORD PTR gs:[rbx+0x62]
  43e273:	jl     0x43e276
  43e275:	add    BYTE PTR [rax],al
  43e277:	add    BYTE PTR [rax],al
  43e279:	add    BYTE PTR [rax],al
  43e27b:	or     eax,DWORD PTR [rip+0x5050505]        # 0x548e786
  43e281:	add    eax,0x382d3005
  43e286:	(bad)  
  43e287:	or     dh,BYTE PTR [rax+0x70]
  43e28a:	outs   dx,BYTE PTR ds:[rsi]
  43e28b:	ins    BYTE PTR es:[rdi],dx
  43e28c:	ins    BYTE PTR es:[rdi],dx
  43e28d:	push   0x69
  43e28f:	gs movsxd esp,DWORD PTR gs:[rdx+0x7c]
  43e294:	add    DWORD PTR [rax],eax
	...
  43e29e:	add    BYTE PTR [rcx],al
  43e2a0:	jle    0x43e31f
  43e2a2:	add    eax,0xd065032
  43e2a7:	je     0x43e31d
  43e2a9:	jae    0x43e31b
  43e2ab:	jo     0x43e319
  43e2ad:	ins    BYTE PTR es:[rdi],dx
  43e2ae:	ins    BYTE PTR es:[rdi],dx
  43e2af:	imul   ebp,DWORD PTR [rcx+0x65],0x17c65
	...
  43e2be:	add    BYTE PTR [rcx],al
  43e2c0:	jle    0x43e340
  43e2c2:	add    eax,0x7c100651
  43e2c7:	je     0x43e33d
  43e2c9:	jae    0x43e33b
  43e2cb:	jo     0x43e33d
  43e2cd:	jo     0x43e33b
  43e2cf:	ins    BYTE PTR es:[rdi],dx
  43e2d0:	push   0x69
  43e2d2:	gs jl  0x43e2d6
	...
  43e2dd:	add    BYTE PTR [rax],al
  43e2df:	add    DWORD PTR [rsi+0x7e],edi
  43e2e2:	add    eax,0x7c7c1006
  43e2e7:	jl     0x43e35d
  43e2e9:	jl     0x43e35e
  43e2eb:	jae    0x43e35d
  43e2ed:	jo     0x43e35f
  43e2ef:	ins    BYTE PTR es:[rdi],dx
  43e2f0:	ins    BYTE PTR es:[rdi],dx
  43e2f1:	push   0x6a
  43e2f3:	jl     0x43e2f6
	...
  43e2fd:	add    BYTE PTR [rax],al
  43e2ff:	add    DWORD PTR [rsi+0x7e],edi
  43e302:	add    al,0xe
  43e304:	jle    0x43e382
  43e306:	jl     0x43e384
  43e308:	je     0x43e37e
  43e30a:	jl     0x43e380
  43e30c:	jl     0x43e37e
  43e30e:	jo     0x43e380
  43e310:	ins    BYTE PTR es:[rdi],dx
  43e311:	ins    BYTE PTR es:[rdi],dx
  43e312:	push   0x7c
  43e314:	add    DWORD PTR [rax],eax
	...
  43e31e:	add    BYTE PTR [rcx],al
  43e320:	jl     0x43e39e
  43e322:	jl     0x43e3a0
  43e324:	jl     0x43e3a2
  43e326:	jl     0x43e3a4
  43e328:	jge    0x43e3a6
  43e32a:	jl     0x43e3a8
  43e32c:	jl     0x43e3aa
  43e32e:	jl     0x43e3ac
  43e330:	jl     0x43e3ae
  43e332:	jl     0x43e3b0
  43e334:	add    DWORD PTR [rax],eax
	...
  43e33e:	add    BYTE PTR [rcx],al
  43e340:	add    DWORD PTR [rcx],eax
  43e342:	add    DWORD PTR [rcx],eax
  43e344:	add    DWORD PTR [rcx],eax
  43e346:	add    DWORD PTR [rcx],eax
  43e348:	add    DWORD PTR [rcx],eax
  43e34a:	add    DWORD PTR [rcx],eax
  43e34c:	add    DWORD PTR [rcx],eax
  43e34e:	add    DWORD PTR [rcx],eax
  43e350:	add    DWORD PTR [rcx],eax
  43e352:	add    DWORD PTR [rcx],eax
  43e354:	add    DWORD PTR [rax],eax
	...
  43e35e:	add    DWORD PTR [rcx],eax
  43e360:	add    DWORD PTR [rcx],eax
  43e362:	add    DWORD PTR [rbx],eax
  43e364:	cmp    DWORD PTR [rdx],edi
  43e366:	cmp    edi,DWORD PTR [rdi*1+0x41403f3e]
  43e36d:	rex.RB
  43e36e:	rex.RB
  43e36f:	rex.RB
  43e370:	rex.RB
  43e371:	rex.RB
  43e372:	rex.RB
  43e373:	add    DWORD PTR [r9],r8d
  43e376:	add    BYTE PTR [rax],al
  43e378:	add    BYTE PTR [rax],al
  43e37a:	add    BYTE PTR [rax],al
  43e37c:	add    BYTE PTR [rcx],al
  43e37e:	add    DWORD PTR [r9],r8d
  43e381:	add    DWORD PTR [rcx],eax
  43e383:	add    DWORD PTR [rcx],eax
  43e385:	add    DWORD PTR [rcx],eax
  43e387:	add    DWORD PTR [rcx],eax
  43e389:	add    DWORD PTR [rcx],eax
  43e38b:	add    DWORD PTR [rcx],eax
  43e38d:	add    DWORD PTR [rcx],eax
  43e38f:	add    DWORD PTR [rcx],eax
  43e391:	add    DWORD PTR [rcx],eax
  43e393:	add    DWORD PTR [rcx],eax
  43e395:	add    DWORD PTR [r8],r8d
  43e398:	add    BYTE PTR [rax],al
  43e39a:	add    BYTE PTR [rax],al
  43e39c:	add    DWORD PTR [rbp+0x1],eax
  43e39f:	add    BYTE PTR [rcx],al
  43e3a1:	rex.RB
  43e3a2:	rex.RB
  43e3a3:	rex.RB
  43e3a4:	rex.RB
  43e3a5:	rex.RB
  43e3a6:	rex.RB
  43e3a7:	rex.RB
  43e3a8:	rex.X
  43e3a9:	rex.RB
  43e3aa:	rex.RB
  43e3ab:	rex.X
  43e3ac:	rex.RB
  43e3ad:	rex.RB
  43e3ae:	rex.RB
  43e3af:	rex.X
  43e3b0:	rex.X
  43e3b1:	rex.RB
  43e3b2:	add    DWORD PTR [r8],r8d
  43e3b5:	add    DWORD PTR [rbp+0x1],eax
  43e3b8:	add    BYTE PTR [rax],al
  43e3ba:	add    BYTE PTR [rcx],al
  43e3bc:	add    DWORD PTR [rcx],eax
  43e3be:	add    BYTE PTR [rax],al
  43e3c0:	add    DWORD PTR [rbp+0x5d],ebx
  43e3c3:	pop    rbp
  43e3c4:	pop    rbp
  43e3c5:	pop    rbp
  43e3c6:	pop    rbp
  43e3c7:	pop    rbp
  43e3c8:	pop    rbp
  43e3c9:	pop    rbp
  43e3ca:	pop    rbp
  43e3cb:	pop    rbp
  43e3cc:	pop    rbp
  43e3cd:	pop    rbp
  43e3ce:	pop    rbp
  43e3cf:	pop    rbp
  43e3d0:	pop    rbp
  43e3d1:	push   rdi
  43e3d2:	pop    rbp
  43e3d3:	add    DWORD PTR [rax],eax
  43e3d5:	add    BYTE PTR [rcx],al
  43e3d7:	add    DWORD PTR [rcx],eax
  43e3d9:	add    BYTE PTR [rax],al
  43e3db:	add    BYTE PTR [rax],al
  43e3dd:	add    BYTE PTR [rax],al
  43e3df:	add    BYTE PTR [rcx],al
  43e3e1:	jo     0x43e453
  43e3e3:	jo     0x43e455
  43e3e5:	outs   dx,BYTE PTR ds:[rsi]
  43e3e6:	outs   dx,BYTE PTR ds:[rsi]
  43e3e7:	outs   dx,BYTE PTR ds:[rsi]
  43e3e8:	outs   dx,BYTE PTR ds:[rsi]
  43e3e9:	outs   dx,BYTE PTR ds:[rsi]
  43e3ea:	jae    0x43e458
  43e3ec:	outs   dx,BYTE PTR ds:[rsi]
  43e3ed:	outs   dx,BYTE PTR ds:[rsi]
  43e3ee:	outs   dx,BYTE PTR ds:[rsi]
  43e3ef:	outs   dx,BYTE PTR ds:[rsi]
  43e3f0:	outs   dx,BYTE PTR ds:[rsi]
  43e3f1:	outs   dx,BYTE PTR ds:[rsi]
  43e3f2:	outs   dx,BYTE PTR ds:[rsi]
  43e3f3:	add    DWORD PTR [rax],eax
	...
  43e3fd:	add    BYTE PTR [rax],al
  43e3ff:	add    BYTE PTR [rcx],al
  43e401:	add    DWORD PTR [rcx],eax
  43e403:	add    DWORD PTR [rcx],eax
  43e405:	add    DWORD PTR [rcx],eax
  43e407:	add    DWORD PTR [rcx],eax
  43e409:	add    DWORD PTR [rcx],eax
  43e40b:	add    DWORD PTR [rcx],eax
  43e40d:	add    DWORD PTR [rcx],eax
  43e40f:	add    DWORD PTR [rcx],eax
  43e411:	add    DWORD PTR [rcx],eax
  43e413:	add    DWORD PTR [rax],eax
	...
  43e439:	add    bh,bh
  43e43b:	(bad)  
  43e43c:	(bad)  
  43e43d:	(bad)  
  43e43e:	clc    
  43e43f:	add    BYTE PTR [rax],al
  43e441:	(bad)  
  43e442:	clc    
  43e443:	add    BYTE PTR [rax],al
  43e445:	(bad)  
  43e446:	clc    
  43e447:	add    BYTE PTR [rax],al
  43e449:	(bad)  
  43e44a:	clc    
  43e44b:	add    BYTE PTR [rax],al
  43e44d:	(bad)  
  43e44e:	clc    
  43e44f:	add    BYTE PTR [rax],al
  43e451:	(bad)  
  43e452:	clc    
  43e453:	add    BYTE PTR [rax],al
  43e455:	(bad)  
  43e456:	clc    
  43e457:	add    BYTE PTR [rax],al
  43e459:	(bad)  
  43e45a:	clc    
  43e45b:	add    BYTE PTR [rax],al
  43e45d:	(bad)  
  43e45e:	clc    
  43e45f:	add    BYTE PTR [rax],al
  43e461:	(bad)  
  43e462:	clc    
  43e463:	add    BYTE PTR [rax],al
  43e465:	(bad)  
  43e466:	clc    
  43e467:	add    BYTE PTR [rax],al
  43e469:	(bad)  
  43e46a:	add    BYTE PTR [rax],0x0
  43e46d:	(bad)  
  43e46e:	add    BYTE PTR [rax],0x0
  43e471:	(bad)  
  43e472:	add    BYTE PTR [rax],0x0
  43e475:	(bad)  
  43e476:	add    BYTE PTR [rax],0x0
  43e479:	(bad)  
  43e47a:	add    BYTE PTR [rax],0x0
  43e47d:	(bad)  
  43e47e:	add    BYTE PTR [rax],0x0
  43e481:	(bad)  
  43e482:	add    BYTE PTR [rax],0x0
  43e485:	(bad)  
  43e486:	clc    
  43e487:	add    BYTE PTR [rax],al
  43e489:	(bad)  
  43e48a:	clc    
  43e48b:	add    BYTE PTR [rax],al
  43e48d:	(bad)  
  43e48e:	clc    
  43e48f:	add    BYTE PTR [rax],al
  43e491:	(bad)  
  43e492:	clc    
  43e493:	add    BYTE PTR [rax],al
  43e495:	(bad)  
  43e496:	clc    
  43e497:	add    BYTE PTR [rax],al
  43e499:	(bad)  
  43e49a:	clc    
  43e49b:	add    BYTE PTR [rax],al
  43e49d:	(bad)  
  43e49e:	lock add BYTE PTR [rax],al
  43e4a1:	pavgb  mm0,QWORD PTR [rax]
  43e4a4:	add    BYTE PTR [rdi],al
  43e4a6:	(bad)  
  43e4a7:	add    BYTE PTR [rax],al
  43e4a9:	and    ecx,DWORD PTR [rax+rax*1+0xfc3100]
  43e4b0:	add    BYTE PTR [rdi],bh
  43e4b2:	cld    
  43e4b3:	add    BYTE PTR [rax],al
  43e4b5:	(bad)  
  43e4b6:	(bad)  
  43e4b7:	(bad)  
  43e4b8:	(bad)  
  43e4b9:	jmp    FWORD PTR [rax]
  43e4bb:	add    BYTE PTR [rax],al
  43e4bd:	add    BYTE PTR [rax],dl
  43e4bf:	add    BYTE PTR [rax],al
  43e4c1:	add    BYTE PTR [rax],ah
  43e4c3:	add    BYTE PTR [rax],al
  43e4c5:	add    BYTE PTR [rcx],al
  43e4c7:	add    BYTE PTR [rax],cl
  43e4c9:	add    BYTE PTR [rax],al
  43e4cb:	add    BYTE PTR [rax],al
  43e4cd:	add    BYTE PTR [rax],al
  43e4cf:	add    DWORD PTR [rax],eax
	...
  43e4d9:	add    BYTE PTR [rax],al
  43e4db:	add    DWORD PTR [rax],eax
  43e4dd:	add    BYTE PTR [rax],al
  43e4df:	add    DWORD PTR [rax],eax
  43e4e1:	add    BYTE PTR [rax],al
  43e4e3:	add    BYTE PTR [rax],al
  43e4e5:	add    BYTE PTR [rbx+0x14007878],ah
  43e4eb:	scas   eax,DWORD PTR es:[rdi]
  43e4ec:	add    BYTE PTR ss:[rax],bl
  43e4ef:	mov    edx,0xbc1e003c
  43e4f4:	add    BYTE PTR [r11],sil
  43e4f7:	lods   eax,DWORD PTR ds:[rsi]
  43e4f8:	rex.WX add BYTE PTR [rax],spl
  43e4fb:	mov    edi,0xbb2f0043
  43e500:	rex.WRXB add BYTE PTR [r13-0x67],r11b
  43e504:	pop    rbp
  43e505:	add    BYTE PTR [rdx],ch
  43e507:	mov    DWORD PTR [rdx+0x0],0x43c92b
  43e50e:	xor    al,0xd3
  43e510:	rex.WRX add BYTE PTR [rdx],r15b
  43e513:	fist   DWORD PTR [rsi+0x0]
  43e516:	cmp    eax,0x420058dd
  43e51b:	in     al,0x5e
  43e51d:	add    BYTE PTR [rbp-0x24],ah
  43e520:	js     0x43e522
  43e522:	rex.RB call 0xffffffffea9ce58a
  43e528:	jae    0x43e52a
  43e52a:	pop    rdx
  43e52b:	jmp    0xffffffffe8b1e5a4
  43e530:	test   BYTE PTR [rax],al
  43e532:	jns    0x43e517
  43e534:	mov    al,BYTE PTR [rax]
  43e536:	jg     0x43e520
  43e538:	nop
  43e539:	add    ah,al
  43e53b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  43e53c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  43e53d:	add    cl,cl
  43e53f:	mov    dh,0xb5
  43e541:	add    ah,cl
  43e543:	mov    ecx,0xbcce00b8
  43e548:	mov    ebx,0xbdbed000
  43e54d:	add    BYTE PTR [rbx-0x7bff6b15],al
  43e553:	jmp    0x43e4ec
  43e555:	add    BYTE PTR [rbp-0x79ff6813],al
  43e55b:	(bad)  
  43e55c:	cwde   
  43e55d:	add    BYTE PTR [rsi-0x6aff6511],al
  43e563:	(bad)  
  43e564:	movabs eax,ds:0xa4d99700a2d89600
  43e56d:	add    BYTE PTR [rax-0x2dff5a26],bl
  43e573:	sar    BYTE PTR [rdi-0x3f3d2e00],0x0
  43e57a:	(bad)  
  43e57b:	ret    0xc1
  43e57e:	(bad)  
  43e57f:	(bad)
  43e583:	(bad)
  43e586:	xlat   BYTE PTR ds:[rbx]
  43e587:	enter  0xc6,0xd8
  43e58b:	leave  
  43e58c:	mov    DWORD PTR [rax],0xcdcddb
  43e592:	(bad)  
  43e594:	(bad)  
  43e595:	add    bh,bl
  43e597:	rcl    ecx,cl
  43e599:	add    cl,ah
  43e59b:	(bad)  
  43e59c:	(bad)  
  43e59d:	add    al,ah
  43e59f:	rcl    cl,cl
  43e5a1:	add    cl,ah
  43e5a3:	(bad)  
  43e5a4:	rol    BYTE PTR [rax],cl
  43e5a6:	jrcxz  0x43e57f
  43e5a8:	(bad)  
  43e5a9:	add    ah,ah
  43e5ab:	fcom   st(5)
  43e5ad:	add    dh,ah
  43e5af:	fcmovnu st,st(2)
  43e5b1:	add    bh,ah
  43e5b3:	fstp   st(2)
  43e5b5:	add    ch,al
  43e5b7:	cld    
  43e5b8:	int    0x0
  43e5ba:	(bad)  
  43e5bb:	loopne 0x43e59b
  43e5bd:	add    ch,ch
  43e5bf:	jrcxz  0x43e5a2
  43e5c1:	add    dh,ch
  43e5c3:	in     al,0xe2
  43e5c5:	add    al,dh
  43e5c7:	out    0xe5,eax
  43e5c9:	add    bl,dh
  43e5cb:	(bad)  
  43e5cc:	call   0xffffffffed31d7d1
  43e5d1:	add    dh,dh
  43e5d3:	lock out dx,al
  43e5d5:	add    dh,dh
  43e5d7:	repnz icebp 
  43e5d9:	add    bh,dh
  43e5db:	hlt    
  43e5dc:	repz add cl,bh
  43e5df:	repnz lock add dl,bh
  43e5e3:	div    dh
  43e5e5:	add    bl,bh
  43e5e7:	stc    
  43e5e8:	clc    
	...
  43e8dd:	add    bh,bh
  43e8df:	(bad)  
  43e8e0:	inc    DWORD PTR [rax]
  43e8e2:	add    BYTE PTR [rax],al
  43e8e4:	add    DWORD PTR [rcx],eax
  43e8e6:	add    DWORD PTR [rcx],eax
  43e8e8:	add    DWORD PTR [rcx],eax
  43e8ea:	add    DWORD PTR [rcx],eax
  43e8ec:	add    DWORD PTR [rcx],eax
  43e8ee:	add    DWORD PTR [rcx],eax
  43e8f0:	add    BYTE PTR [rax],al
  43e8f2:	add    BYTE PTR [rax],al
  43e8f4:	add    DWORD PTR [rdi],ebp
  43e8f6:	sub    al,0x3b
  43e8f8:	cmp    esp,DWORD PTR [rdi]
  43e8fa:	and    al,0x19
  43e8fc:	sbb    DWORD PTR [rdi],edx
  43e8fe:	cmp    al,0x1
  43e900:	add    BYTE PTR [rax],al
  43e902:	add    BYTE PTR [rax],al
  43e904:	add    DWORD PTR [rdi],ebp
  43e906:	(bad)  
  43e907:	or     BYTE PTR [rax],cl
  43e909:	cmp    esp,DWORD PTR [rdi]
  43e90b:	(bad)  
  43e90c:	sbb    DWORD PTR [rcx],ebx
  43e90e:	cmp    al,0x1
  43e910:	add    BYTE PTR [rax],al
  43e912:	add    BYTE PTR [rax],al
  43e914:	(bad)  
  43e915:	rex cmp eax,0x3b080608
  43e91b:	(bad)  
  43e91c:	(bad)  
  43e91d:	sbb    DWORD PTR [rip+0x8000001],edi        # 0x843e924
  43e923:	or     BYTE PTR [rax],cl
  43e925:	or     BYTE PTR [rax],cl
  43e927:	or     BYTE PTR [rip+0x273b0806],dh        # 0x277ef133
  43e92d:	(bad)  
  43e92e:	cmp    eax,0x7000001
  43e933:	sbb    eax,0x15151d1d
  43e938:	or     DWORD PTR [rip+0x2a3d0806],esi        # 0x2a80f144
  43e93e:	cmp    al,0x1
  43e940:	add    BYTE PTR [rax],al
  43e942:	(bad)  
  43e943:	(bad)  
  43e944:	adc    BYTE PTR [rax],dl
  43e946:	(bad)  
  43e947:	or     al,0xb
  43e949:	or     DWORD PTR [rip+0x3c2c0e03],esi        # 0x3c6ff752
  43e94f:	add    DWORD PTR [rax],eax
  43e951:	add    BYTE PTR [rdi],al
  43e953:	(bad)  
  43e954:	adc    dl,BYTE PTR [rcx]
  43e956:	adc    BYTE PTR [rsi],cl
  43e958:	or     al,0xf
  43e95a:	add    ah,BYTE PTR [rax]
  43e95c:	cmp    eax,0x13c2d
  43e961:	add    BYTE PTR [rip+0x3040404],al        # 0x347ed6b
  43e967:	(bad)  
  43e968:	adc    eax,DWORD PTR [rdx]
  43e96a:	and    DWORD PTR [rip+0x13c3233],edi        # 0x1801ba3
  43e970:	add    BYTE PTR [rax],al
  43e972:	add    BYTE PTR [rax],al
  43e974:	(bad)  
  43e975:	cmp    al,0x4
  43e978:	add    ah,BYTE PTR [rcx]
  43e97a:	cmp    BYTE PTR [rsi],sil
  43e97d:	xor    edi,DWORD PTR [rcx+rax*1]
  43e980:	add    BYTE PTR [rax],al
  43e982:	add    BYTE PTR [rax],al
  43e984:	add    DWORD PTR [rdi],edi
  43e986:	(bad)  
  43e987:	add    esp,DWORD PTR [rbx]
  43e989:	cmp    edi,DWORD PTR [r9]
  43e98c:	cmp    BYTE PTR [rsi],dh
  43e98e:	cmp    al,0x1
  43e990:	add    BYTE PTR [rax],al
  43e992:	add    BYTE PTR [rax],al
  43e994:	add    DWORD PTR [rcx+0x41],eax
  43e997:	rex.B
  43e998:	rex.B
  43e999:	rex.B
  43e99a:	rex.B
  43e99b:	rex.B
  43e99c:	rex.B
  43e99d:	rex.B
  43e99e:	add    DWORD PTR [r8],eax
  43e9a1:	add    BYTE PTR [rax],al
  43e9a3:	add    BYTE PTR [rcx],al
  43e9a5:	add    DWORD PTR [rcx],eax
  43e9a7:	add    DWORD PTR [rcx],eax
  43e9a9:	add    DWORD PTR [rcx],eax
  43e9ab:	add    DWORD PTR [rcx],eax
  43e9ad:	add    DWORD PTR [rcx],eax
  43e9af:	add    DWORD PTR [rax],eax
  43e9b1:	add    BYTE PTR [rax],al
  43e9b3:	add    DWORD PTR [rax],eax
  43e9b5:	add    DWORD PTR [rsi],edx
  43e9b7:	(bad)  
  43e9b8:	(bad)  
  43e9b9:	(bad)  
  43e9ba:	(bad)  
  43e9bb:	(bad)  
  43e9bc:	(bad)  
  43e9bd:	(bad)  
  43e9be:	add    DWORD PTR [rax],eax
  43e9c0:	add    DWORD PTR [rax],eax
  43e9c2:	add    DWORD PTR [rax],eax
  43e9c4:	add    BYTE PTR [rcx],al
  43e9c6:	cs cs cs cs cs cs cs add DWORD PTR cs:[rax],eax
  43e9d0:	add    BYTE PTR [rcx],al
  43e9d2:	add    BYTE PTR [rax],al
  43e9d4:	add    BYTE PTR [rcx],al
  43e9d6:	add    DWORD PTR [rcx],eax
  43e9d8:	add    DWORD PTR [rcx],eax
  43e9da:	add    DWORD PTR [rcx],eax
  43e9dc:	add    DWORD PTR [rcx],eax
  43e9de:	add    DWORD PTR [rax],eax
  43e9e0:	add    BYTE PTR [rax],al
  43e9e2:	rol    BYTE PTR [rbx],0x0
  43e9e5:	add    al,al
  43e9e7:	add    eax,DWORD PTR [rax]
  43e9e9:	add    al,al
  43e9eb:	add    eax,DWORD PTR [rax]
  43e9ed:	add    al,al
  43e9ef:	add    eax,DWORD PTR [rax]
  43e9f1:	add    BYTE PTR [rax],al
  43e9f3:	add    eax,DWORD PTR [rax]
  43e9f5:	add    BYTE PTR [rax],al
  43e9f7:	add    eax,DWORD PTR [rax]
  43e9f9:	add    BYTE PTR [rax],al
  43e9fb:	add    eax,DWORD PTR [rax]
  43e9fd:	add    BYTE PTR [rax],al
  43e9ff:	add    eax,DWORD PTR [rax]
  43ea01:	add    BYTE PTR [rax],al
  43ea03:	add    eax,DWORD PTR [rax]
  43ea05:	add    al,al
  43ea07:	add    eax,DWORD PTR [rax]
  43ea09:	add    al,al
  43ea0b:	add    eax,DWORD PTR [rax]
  43ea0d:	add    al,al
  43ea0f:	add    eax,DWORD PTR [rax]
  43ea11:	add    al,al
  43ea13:	add    eax,DWORD PTR [rax]
  43ea15:	add    BYTE PTR [rax+0x60000005],ah
  43ea1b:	(bad)  
  43ea1c:	add    BYTE PTR [rax],al
  43ea1e:	loopne 0x43ea27
  43ea20:	add    BYTE PTR [rax],al
  43ea22:	sub    BYTE PTR [rax],al
  43ea24:	add    BYTE PTR [rax],al
  43ea26:	and    BYTE PTR [rax],al
  43ea28:	add    BYTE PTR [rax],al
  43ea2a:	add    BYTE PTR [rax],al
  43ea2d:	add    BYTE PTR [rcx],al
  43ea2f:	add    BYTE PTR [rax],ah
  43ea31:	add    BYTE PTR [rax],al
  43ea33:	add    BYTE PTR [rax],al
  43ea35:	add    BYTE PTR [rax+0x10],al
	...
  43eadb:	add    BYTE PTR [rax],al
  43eadd:	add    BYTE PTR [rbx-0x5c008788],ah
  43eae3:	js     0x43eb5d
  43eae5:	jmp    QWORD PTR [rbx-0x5c008788]
  43eaeb:	js     0x43eb65
  43eaed:	jmp    QWORD PTR [rbx-0x5c008788]
  43eaf3:	js     0x43eb6d
  43eaf5:	jmp    QWORD PTR [rbx-0x5c008788]
  43eafb:	js     0x43eb75
  43eafd:	jmp    QWORD PTR [rbx-0x5c008788]
  43eb03:	js     0x43eb7d
  43eb05:	jmp    QWORD PTR [rbx-0x5c008788]
  43eb0b:	js     0x43eb85
  43eb0d:	jmp    QWORD PTR [rbx-0x5c008788]
  43eb13:	js     0x43eb8d
  43eb15:	jmp    QWORD PTR [rbx-0x5c008788]
  43eb1b:	js     0x43eb95
  43eb1d:	jmp    QWORD PTR [rbx-0x5c008788]
  43eb23:	js     0x43eb9d
  43eb25:	jmp    QWORD PTR [rbx-0x5c008788]
  43eb2b:	js     0x43eba5
  43eb2d:	jmp    QWORD PTR [rbx-0x5c008788]
  43eb33:	js     0x43ebad
  43eb35:	inc    DWORD PTR [rax]
	...
  43eb5b:	add    BYTE PTR [rax],al
  43eb5d:	add    BYTE PTR [rbx-0x26008788],ah
  43eb63:	retf   0xffc8
  43eb66:	xlat   BYTE PTR ds:[rbx]
  43eb67:	enter  0xffc7,0xd6
  43eb6b:	mov    ch,0xff
  43eb6e:	(bad)  
  43eb6f:	(bad)  
  43eb73:	ret    0xffc1
  43eb76:	rol    al,cl
  43eb78:	mov    edi,0xbebfd1ff
  43eb7d:	dec    edi
  43eb7f:	mov    esi,0xbcceffbc
  43eb84:	mov    ebx,0xb9bbcdff
  43eb89:	dec    ebx
  43eb8b:	mov    edx,0xb8cbffb8
  43eb90:	mov    bh,0xff
  43eb92:	retf   0xb6b7
  43eb95:	dec    edx
  43eb97:	mov    dh,0xb6
  43eb99:	dec    ecx
  43eb9b:	mov    dh,0xb5
  43eb9d:	dec    ecx
  43eb9f:	mov    dh,0xb5
  43eba1:	dec    ecx
  43eba3:	mov    dh,0xb5
  43eba5:	dec    ecx
  43eba7:	mov    dh,0xb5
  43eba9:	dec    ecx
  43ebab:	mov    dh,0xb5
  43ebad:	push   rsi
  43ebaf:	icebp  
  43ebb0:	out    dx,eax
  43ebb1:	jmp    QWORD PTR [rbx+0xff7878]
	...
  43ebdb:	add    BYTE PTR [rax],al
  43ebdd:	add    BYTE PTR [rbx-0x22008788],ah
  43ebe3:	iret   
  43ebe4:	int    0xff
  43ebe6:	fmul   st(5),st
  43ebe8:	int3   
  43ebe9:	(bad)  
  43ebea:	fcmove st,st(2)
  43ebec:	leave  
  43ebed:	(bad)  
  43ebee:	fmul   st,st(1)
  43ebf0:	(bad)  
  43ebf1:	call   rsi
  43ebf3:	mov    esi,0xc4c5d5ff
  43ebf9:	call   rbx
  43ebfb:	(bad)  
  43ebff:	ret    0xffc0
  43ec02:	rol    eax,1
  43ec04:	mov    edi,0xbdbfcfff
  43ec09:	dec    edi
  43ec0b:	mov    ebp,0xbbceffbb
  43ec10:	mov    edx,0xb9bbccff
  43ec15:	dec    ebx
  43ec17:	mov    ecx,0xb8caffb8
  43ec1c:	mov    bh,0xff
  43ec1e:	leave  
  43ec1f:	mov    bh,0xb6
  43ec21:	dec    ecx
  43ec23:	mov    dh,0xb5
  43ec25:	dec    ecx
  43ec27:	mov    dh,0xb5
  43ec29:	dec    ecx
  43ec2b:	mov    dh,0xb5
  43ec2d:	push   rsi
  43ec2f:	icebp  
  43ec30:	out    dx,eax
  43ec31:	jmp    QWORD PTR [rbx+0xff7878]
	...
  43ec5b:	add    BYTE PTR [rax],al
  43ec5d:	add    BYTE PTR [rbx-0x20008788],ah
  43ec63:	rcl    al,cl
  43ec65:	(bad)  
  43ec66:	(bad)  
  43ec68:	(bad)  
  43ec69:	(bad)  
  43ec6a:	fmul   st(5),st
  43ec6c:	int3   
  43ec6d:	(bad)  
  43ec6e:	fcmove st,st(3)
  43ec70:	retf   0xd9ff
  43ec73:	leave  
  43ec74:	enter  0xd7ff,0xc7
  43ec78:	(bad)  
  43ec79:	call   rsi
  43ec7b:	mov    ch,0xff
  43ec7e:	(bad)  
  43ec7f:	(bad)  
  43ec83:	ret    0xffc1
  43ec86:	rol    cl,cl
  43ec88:	sar    bh,0xd0
  43ec8b:	mov    edi,0xbdcfffbe
  43ec90:	mov    esp,0xbbbcceff
  43ec95:	dec    ebp
  43ec97:	mov    ebx,0xbaccffb9
  43ec9c:	mov    eax,0xb7b8cbff
  43eca1:	dec    edx
  43eca3:	mov    bh,0xb6
  43eca5:	dec    ecx
  43eca7:	mov    dh,0xb5
  43eca9:	dec    ecx
  43ecab:	mov    dh,0xb5
  43ecad:	push   rsi
  43ecaf:	icebp  
  43ecb0:	out    dx,eax
  43ecb1:	jmp    QWORD PTR [rbx+0xff7878]
	...
  43ecdb:	add    BYTE PTR [rax],al
  43ecdd:	add    BYTE PTR [rbx-0x1e008788],ah
  43ece3:	(bad)  
  43ece4:	sar    bh,cl
  43ece6:	loopne 0x43ecba
  43ece8:	sar    bh,1
  43ecea:	(bad)  
  43ecec:	(bad)  
  43eced:	(bad)  
  43ecee:	fmul   st(6),st
  43ecf0:	int3   
  43ecf1:	(bad)  
  43ecf2:	fcmovne st,st(4)
  43ecf4:	retf   0xd9ff
  43ecf7:	retf   0xffc8
  43ecfa:	fmul   st,st(0)
  43ecfc:	(bad)  
  43ecfd:	call   rsi
  43ecff:	mov    ch,0xff
  43ed02:	(bad)  
  43ed03:	(bad)
  43ed06:	rol    ebx,cl
  43ed08:	sar    edi,0xd2
  43ed0b:	sar    DWORD PTR [rdi-0x41402e01],0xff
  43ed12:	iret   
  43ed13:	mov    esi,0xbcceffbc
  43ed18:	mov    ebx,0xbabbcdff
  43ed1d:	dec    esp
  43ed1f:	mov    edx,0xb8cbffb9
  43ed24:	mov    bh,0xff
  43ed26:	retf   0xb6b8
  43ed29:	dec    edx
  43ed2b:	mov    dh,0xb6
  43ed2d:	push   rsi
  43ed2f:	icebp  
  43ed30:	out    dx,eax
  43ed31:	jmp    QWORD PTR [rbx+0xff7878]
	...
  43ed5b:	add    BYTE PTR [rax],al
  43ed5d:	add    BYTE PTR [rbx-0x1b008788],ah
  43ed63:	(bad)  
  43ed64:	(bad)  
  43ed65:	jmp    rcx
  43ed67:	(bad)  
  43ed68:	(bad)  
  43ed69:	(bad)  
  43ed6a:	(bad)  
  43ed6c:	sar    edi,1
  43ed6e:	(bad)  
  43ed70:	iret   
  43ed71:	(bad)  
  43ed72:	fmul   st(7),st
  43ed74:	int    0xff
  43ed76:	fcmovne st,st(5)
  43ed78:	retf   
  43ed79:	(bad)  
  43ed7a:	fxch   st(3)
  43ed7c:	leave  
  43ed7d:	(bad)  
  43ed7e:	fmul   st,st(0)
  43ed80:	(bad)  
  43ed81:	call   rsi
  43ed83:	mov    ch,0xff
  43ed86:	(bad)  
  43ed87:	(bad)
  43ed8a:	rol    esp,cl
  43ed8c:	ret    0xd2ff
  43ed8f:	rol    ecx,0xff
  43ed92:	rol    eax,1
  43ed94:	mov    edi,0xbdbfd0ff
  43ed99:	dec    esi
  43ed9b:	mov    ebp,0xbcceffbc
  43eda0:	mov    edx,0xb9baccff
  43eda5:	dec    esp
  43eda7:	mov    ecx,0xb7cbffb8
  43edac:	mov    dh,0xff
  43edae:	div    cl
  43edb0:	out    dx,eax
  43edb1:	jmp    QWORD PTR [rbx+0xff7878]
	...
  43eddb:	add    BYTE PTR [rax],al
  43eddd:	add    BYTE PTR [rbx-0x1a008788],ah
  43ede3:	(bad)  
  43ede5:	jmp    rbx
  43ede7:	fcom   st(6)
  43ede9:	jmp    rdx
  43edeb:	(bad)  
  43edec:	(bad)  
  43eded:	jmp    rcx
  43edef:	rcl    edx,cl
  43edf1:	(bad)  
  43edf2:	(bad)  
  43edf4:	iret   
  43edf5:	(bad)  
  43edf6:	(bad)  
  43edf8:	(bad)  
  43edf9:	(bad)  
  43edfa:	fcmovne st,st(6)
  43edfc:	int3   
  43edfd:	(bad)  
  43edfe:	fcmove st,st(3)
  43ee00:	leave  
  43ee01:	(bad)  
  43ee02:	fxch   st(1)
  43ee04:	(bad)  
  43ee05:	call   rdi
  43ee07:	mov    esi,0xc4c5d6ff
  43ee0d:	call   rsp
  43ee0f:	(bad)  
  43ee13:	ret    0xffc0
  43ee16:	rol    eax,1
  43ee18:	mov    edi,0xbdbed0ff
  43ee1d:	dec    esi
  43ee1f:	mov    ebp,0xbccdffbc
  43ee24:	mov    edx,0xb9baccff
  43ee29:	dec    ebx
  43ee2b:	mov    ecx,0xf1f6ffb9
  43ee30:	out    dx,eax
  43ee31:	jmp    QWORD PTR [rbx+0xff7878]
	...
  43ee5b:	add    BYTE PTR [rax],al
  43ee5d:	add    BYTE PTR [rbx-0x18008788],ah
  43ee63:	(bad)  
  43ee65:	jmp    rsi
  43ee67:	fcmovu st,st(0)
  43ee69:	call   FWORD PTR [rbp-0x67]
  43ee6c:	pop    rbp
  43ee6d:	jmp    FWORD PTR [rdi-0x4e]
  43ee70:	jns    0x43ee71
  43ee72:	loope  0x43ee48
  43ee74:	sar    bh,cl
  43ee76:	(bad)  
  43ee78:	sar    bh,1
  43ee7a:	fmulp  st(7),st
  43ee7c:	(bad)  
  43ee7d:	(bad)  
  43ee7e:	fmul   st(6),st
  43ee80:	int    0xff
  43ee82:	fcmovne st,st(3)
  43ee84:	retf   
  43ee85:	(bad)  
  43ee86:	fxch   st(2)
  43ee88:	leave  
  43ee89:	(bad)  
  43ee8a:	fadd   st,st(7)
  43ee8c:	(bad)  
  43ee8d:	call   rsi
  43ee8f:	mov    ch,0xff
  43ee92:	(bad)  
  43ee93:	(bad)  
  43ee97:	ret    0xffc1
  43ee9a:	rol    cl,cl
  43ee9c:	mov    edi,0xbebfd0ff
  43eea1:	dec    edi
  43eea3:	mov    ebp,0xbcceffbc
  43eea8:	mov    ebx,0xb9bbcdff
  43eead:	push   rsi
  43eeaf:	icebp  
  43eeb0:	out    dx,eax
  43eeb1:	jmp    QWORD PTR [rbx+0xff7878]
	...
  43eedb:	add    BYTE PTR [rax],al
  43eedd:	add    BYTE PTR [rbx-0x16008788],ah
  43eee3:	(bad)  
  43eee5:	(bad)  
  43eee6:	call   0x5e43c9c8
  43eeeb:	cdq    
  43eeec:	pop    rbp
  43eeed:	call   FWORD PTR [rbp-0x67]
  43eef0:	pop    rbp
  43eef1:	jmp    FWORD PTR [rdi-0x4e]
  43eef4:	jns    0x43eef5
  43eef6:	loope  0x43eecd
  43eef8:	sar    edi,cl
  43eefa:	loopne 0x43eecf
  43eefc:	sar    edi,1
  43eefe:	(bad)  
  43ef00:	iret   
  43ef01:	(bad)  
  43ef02:	fmul   st(6),st
  43ef04:	int    0xff
  43ef06:	fcmovne st,st(4)
  43ef08:	retf   
  43ef09:	(bad)  
  43ef0a:	fxch   st(2)
  43ef0c:	leave  
  43ef0d:	call   rdi
  43ef0f:	leave  
  43ef10:	enter  0xd7ff,0xc6
  43ef14:	(bad)  
  43ef17:	(bad)  
  43ef18:	(bad)  
  43ef19:	call   rbx
  43ef1b:	ret    
  43ef1c:	sar    edi,0xd2
  43ef1f:	rol    eax,0xff
  43ef22:	sar    DWORD PTR [rdi-0x41300041],1
  43ef28:	mov    ebp,0xbbbdceff
  43ef2d:	push   rsi
  43ef2f:	icebp  
  43ef30:	out    dx,eax
  43ef31:	jmp    QWORD PTR [rbx+0xff7878]
	...
  43ef5b:	add    BYTE PTR [rax],al
  43ef5d:	add    BYTE PTR [rbx-0x14008788],ah
  43ef63:	loope  0x43ef44
  43ef65:	(bad)  
  43ef66:	(bad)  
  43ef67:	(bad)  
  43ef69:	call   FWORD PTR [rbp-0x67]
  43ef6c:	pop    rbp
  43ef6d:	jmp    rbp
  43ef6f:	imul   eax
  43ef71:	call   FWORD PTR [rbp-0x67]
  43ef74:	pop    rbp
  43ef75:	push   QWORD PTR [rax-0x4d]
  43ef78:	jp     0x43ef79
  43ef7a:	loop   0x43ef51
  43ef7c:	sar    edi,cl
  43ef7e:	loopne 0x43ef53
  43ef80:	sar    edi,1
  43ef82:	(bad)  
  43ef84:	iret   
  43ef85:	(bad)  
  43ef86:	(bad)  
  43ef88:	int    0xff
  43ef8a:	fcmovne st,st(5)
  43ef8c:	int3   
  43ef8d:	(bad)  
  43ef8e:	fcmove st,st(3)
  43ef90:	leave  
  43ef91:	(bad)  
  43ef92:	fmul   st,st(1)
  43ef94:	enter  0xd6ff,0xc7
  43ef98:	(bad)  
  43ef99:	call   rsi
  43ef9b:	(bad)
  43ef9e:	rol    ebx,cl
  43efa0:	ret    
  43efa1:	call   rdx
  43efa3:	ret    0xffc1
  43efa6:	rol    eax,1
  43efa8:	mov    esi,0xbebfd0ff
  43efad:	push   rsi
  43efaf:	icebp  
  43efb0:	out    dx,eax
  43efb1:	jmp    QWORD PTR [rbx+0xff7878]
	...
  43efdb:	add    BYTE PTR [rax],al
  43efdd:	add    BYTE PTR [rbx-0x12008788],ah
  43efe3:	jrcxz  0x43efc6
  43efe5:	(bad)  
  43efe6:	jmp    0x43efc9
  43efe8:	loopne 0x43efe9
  43efea:	pop    rbp
  43efeb:	cdq    
  43efec:	pop    rbp
  43efed:	(bad)  
  43efee:	jl     0x43efce
  43eff0:	mov    edi,?
  43eff2:	in     al,0xf7
  43eff4:	out    0xff,eax
  43eff6:	pop    rbp
  43eff7:	cdq    
  43eff8:	pop    rbp
  43eff9:	push   QWORD PTR [rax-0x4d]
  43effc:	jp     0x43effd
  43effe:	loop   0x43efd5
  43f000:	(bad)  
  43f001:	jmp    rax
  43f003:	(bad)  
  43f004:	sar    bh,cl
  43f006:	(bad)  
  43f008:	sar    bh,1
  43f00a:	(bad)  
  43f00c:	(bad)  
  43f00d:	(bad)  
  43f00e:	fmul   st(5),st
  43f010:	int3   
  43f011:	(bad)  
  43f012:	fcmove st,st(4)
  43f014:	retf   0xd8ff
  43f017:	retf   0xffc8
  43f01a:	xlat   BYTE PTR ds:[rbx]
  43f01b:	enter  0xffc6,0xd6
  43f01f:	mov    ch,0xff
  43f022:	(bad)  
  43f023:	(bad)  
  43f027:	ret    0xffc1
  43f02a:	rol    ecx,1
  43f02c:	mov    edi,0xeff1f6ff
  43f031:	jmp    QWORD PTR [rbx+0xff7878]
	...
  43f04b:	add    BYTE PTR [rax],al
  43f04d:	add    BYTE PTR [rbp-0x67],bl
  43f050:	pop    rbp
  43f051:	call   FWORD PTR [rbp-0x67]
  43f054:	pop    rbp
  43f055:	call   FWORD PTR [rbp-0x67]
  43f058:	pop    rbp
  43f059:	call   FWORD PTR [rbp-0x67]
  43f05c:	pop    rbp
  43f05d:	call   FWORD PTR [rbp-0x67]
  43f060:	pop    rbp
  43f061:	call   FWORD PTR [rbp-0x67]
  43f064:	pop    rbp
  43f065:	call   FWORD PTR [rbp-0x67]
  43f068:	pop    rbp
  43f069:	call   FWORD PTR [rbp-0x67]
  43f06c:	pop    rbp
  43f06d:	(bad)  
  43f06e:	jg     0x43f052
  43f070:	(bad)  
  43f071:	jmp    FWORD PTR [rbx]
  43f073:	enter  0xff44,0xe4
  43f077:	mul    edi
  43f079:	call   FWORD PTR [rbp-0x67]
  43f07c:	pop    rbp
  43f07d:	push   QWORD PTR [rax-0x4d]
  43f080:	jp     0x43f081
  43f082:	loop   0x43f05a
  43f084:	(bad)  
  43f085:	jmp    rcx
  43f087:	(bad)  
  43f088:	sar    bh,cl
  43f08a:	(bad)  
  43f08c:	sar    bh,1
  43f08e:	(bad)  
  43f090:	(bad)  
  43f091:	(bad)  
  43f092:	(bad)  
  43f094:	int    0xff
  43f096:	fcmove st,st(4)
  43f098:	retf   
  43f099:	(bad)  
  43f09a:	fxch   st(2)
  43f09c:	leave  
  43f09d:	(bad)  
  43f09e:	fmul   st,st(0)
  43f0a0:	(bad)  
  43f0a1:	call   rsi
  43f0a3:	mov    ebp,0xc3c4d4ff
  43f0a9:	call   rbx
  43f0ab:	ret    
  43f0ac:	sar    edi,0xf6
  43f0af:	icebp  
  43f0b0:	out    dx,eax
  43f0b1:	jmp    QWORD PTR [rbx+0xff7878]
	...
  43f0cb:	add    BYTE PTR [rax],al
  43f0cd:	add    BYTE PTR [rsi],dl
  43f0cf:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  43f0d0:	rex dec DWORD PTR [rbx-0x73006314]
  43f0d7:	lock sahf 
  43f0d9:	dec    DWORD PTR [rbp-0x7200600f]
  43f0df:	icebp  
  43f0e0:	lahf   
  43f0e1:	dec    DWORD PTR [rbx-0x76006210]
  43f0e7:	out    dx,al
  43f0e8:	(bad)  
  43f0e9:	inc    DWORD PTR [rsi+0x4cff96e9]
  43f0ef:	(bad)  [rbx-0x1]
  43f0f2:	xor    cl,bh
  43f0f4:	rex.WB jmp FWORD PTR [r10]
  43f0f7:	enter  0xff43,0xe4
  43f0fb:	mul    edi
  43f0fd:	call   FWORD PTR [rbp-0x67]
  43f100:	pop    rbp
  43f101:	jmp    FWORD PTR [rbp-0x4e]
  43f104:	jbe    0x43f105
  43f106:	jrcxz  0x43f0de
  43f108:	(bad)  
  43f109:	jmp    rdx
  43f10b:	(bad)  
  43f10c:	sar    edi,cl
  43f10e:	(bad)  
  43f110:	sar    edi,1
  43f112:	(bad)  
  43f114:	iret   
  43f115:	(bad)  
  43f116:	(bad)  
  43f118:	int    0xff
  43f11a:	fcmovne st,st(4)
  43f11c:	retf   
  43f11d:	(bad)  
  43f11e:	fcmove st,st(2)
  43f120:	leave  
  43f121:	(bad)  
  43f122:	fmul   st,st(0)
  43f124:	enter  0xd6ff,0xc7
  43f128:	(bad)  
  43f12b:	(bad)
  43f12e:	div    cl
  43f130:	out    dx,eax
  43f131:	jmp    QWORD PTR [rbx+0xff7878]
	...
  43f14b:	add    BYTE PTR [rax],al
  43f14d:	add    BYTE PTR [rsi],dl
  43f14f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  43f150:	rex jmp FWORD PTR [rcx-0x1d]
  43f154:	jle    0x43f155
  43f156:	rex.XB loope 0x43f1b9
  43f159:	inc    DWORD PTR [rbp-0x19]
  43f15c:	(bad)  
  43f15d:	inc    DWORD PTR [rdi-0x17]
  43f160:	inc    DWORD PTR fs:[rdi-0x17]
  43f164:	inc    DWORD PTR fs:[rbp-0x19]
  43f168:	(bad)  
  43f169:	inc    DWORD PTR [rcx-0x1e]
  43f16c:	pop    rsp
  43f16d:	(bad)  
  43f16e:	cmp    al,0xdd
  43f170:	push   rdi
  43f171:	push   QWORD PTR [rdi]
  43f173:	(bad)  
  43f174:	push   rax
  43f175:	push   QWORD PTR [rcx]
  43f177:	iret   
  43f178:	rex.WX jmp FWORD PTR [rdx]
  43f17b:	mov    BYTE PTR [rdx-0x1],0xe4
  43f17f:	mul    edi
  43f181:	call   FWORD PTR [rbp-0x67]
  43f184:	pop    rbp
  43f185:	jmp    FWORD PTR [rbx-0x4d]
  43f188:	jne    0x43f189
  43f18a:	in     al,0xd7
  43f18c:	(bad)  
  43f18d:	jmp    rdx
  43f18f:	(bad)  
  43f190:	(bad)  
  43f191:	jmp    rcx
  43f193:	(bad)  
  43f194:	sar    edi,1
  43f196:	(bad)  
  43f198:	iret   
  43f199:	(bad)  
  43f19a:	(bad)  
  43f19c:	(bad)  
  43f19d:	(bad)  
  43f19e:	fcmovne st,st(5)
  43f1a0:	int3   
  43f1a1:	(bad)  
  43f1a2:	fcmove st,st(3)
  43f1a4:	retf   0xd8ff
  43f1a7:	leave  
  43f1a8:	enter  0xd7ff,0xc7
  43f1ac:	(bad)  
  43f1ad:	push   rsi
  43f1af:	icebp  
  43f1b0:	out    dx,eax
  43f1b1:	jmp    QWORD PTR [rbx+0xff7878]
	...
  43f1cb:	add    BYTE PTR [rax],al
  43f1cd:	add    BYTE PTR [rsi],dl
  43f1cf:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  43f1d0:	rex jmp QWORD PTR [rbp-0x22]
  43f1d4:	jp     0x43f1d5
  43f1d6:	fcomp  QWORD PTR ds:[rdx-0x1]
  43f1da:	rex.XB loop 0x43f23c
  43f1dd:	inc    DWORD PTR [rsi-0x1a]
  43f1e0:	movsxd edi,edi
  43f1e2:	rex.RXB jmp 0xffffffffe88af14c
  43f1e8:	movsxd edi,edi
  43f1ea:	rex.R out 0x61,al
  43f1ed:	inc    DWORD PTR [rcx-0x1e]
  43f1f0:	pop    rsp
  43f1f1:	(bad)  
  43f1f2:	cmp    al,0xdb
  43f1f4:	push   rdi
  43f1f5:	push   QWORD PTR [rsi]
  43f1f7:	(bad)  
  43f1f8:	rex.WRXB push QWORD PTR [r8]
  43f1fb:	(bad)  
  43f1fc:	rex.WB jmp FWORD PTR [r9]
  43f1ff:	vcvtpd2dq xmm14,ymm15
  43f204:	call   0x5ddd5008
  43f209:	(bad)  
  43f20a:	(bad)  
  43f20c:	iret   
  43f20d:	jmp    rsp
  43f20f:	fcom   st(6)
  43f211:	jmp    rbx
  43f213:	(bad)  
  43f214:	(bad)  
  43f215:	jmp    rcx
  43f217:	(bad)  
  43f218:	sar    bh,cl
  43f21a:	(bad)  
  43f21c:	sar    bh,1
  43f21e:	(bad)  
  43f220:	iret   
  43f221:	(bad)  
  43f222:	fmul   st(6),st
  43f224:	int3   
  43f225:	(bad)  
  43f226:	fcmove st,st(4)
  43f228:	retf   0xd9ff
  43f22b:	retf   0xffc8
  43f22e:	div    cl
  43f230:	out    dx,eax
  43f231:	jmp    QWORD PTR [rbx+0xff7878]
	...
  43f24b:	add    BYTE PTR [rax],al
  43f24d:	add    BYTE PTR [rsi],dl
  43f24f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  43f250:	rex push QWORD PTR [rsi+rbx*8-0x7a]
  43f255:	dec    DWORD PTR [rcx-0x27]
  43f258:	(bad)  
  43f259:	inc    DWORD PTR [rsi+rbx*8+0x5f]
  43f25d:	inc    DWORD PTR [rdx+riz*8+0x5f]
  43f261:	inc    DWORD PTR [rbp-0x18]
  43f264:	(bad)  
  43f265:	inc    DWORD PTR [rsi-0x17]
  43f268:	movsxd edi,edi
  43f26a:	rex.RX call 0xffffffffe688f1d3
  43f270:	pop    rdi
  43f271:	inc    DWORD PTR [rax-0x1f]
  43f274:	pop    rsp
  43f275:	(bad)  
  43f276:	cmp    ebx,ebx
  43f278:	push   rsi
  43f279:	push   QWORD PTR [rip+0x6bff4ed4]        # 0x6c434153
  43f27f:	fstp   TBYTE PTR [rdi+rdi*8+0x29]
  43f283:	mov    bl,0x53
  43f285:	call   FWORD PTR [rax-0x56]
  43f288:	fs jmp rdi
  43f28b:	(bad)  
  43f28d:	jmp    rsi
  43f28f:	fcmovu st,st(0)
  43f291:	jmp    rsp
  43f293:	fcom   st(7)
  43f295:	jmp    rbx
  43f297:	(bad)  
  43f298:	(bad)  
  43f299:	jmp    rdx
  43f29b:	(bad)  
  43f29c:	sar    edi,cl
  43f29e:	(bad)  
  43f2a0:	sar    edi,1
  43f2a2:	(bad)  
  43f2a4:	iret   
  43f2a5:	(bad)  
  43f2a6:	fmul   st(7),st
  43f2a8:	int    0xff
  43f2aa:	fcmovne st,st(5)
  43f2ac:	retf   
  43f2ad:	push   rsi
  43f2af:	icebp  
  43f2b0:	out    dx,eax
  43f2b1:	jmp    QWORD PTR [rbx+0xff7878]
	...
  43f2cb:	add    BYTE PTR [rax],al
  43f2cd:	add    BYTE PTR [rsi],dl
  43f2cf:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  43f2d0:	rex (bad) 
  43f2d2:	js     0x43f2b0
  43f2d4:	mov    edi,edi
  43f2d6:	pop    rax
  43f2d7:	fsubr  DWORD PTR [rsi-0x1]
  43f2da:	pop    rax
  43f2db:	(bad)  [rsi-0x1]
  43f2de:	push   rsp
  43f2df:	loope  0x43f34f
  43f2e1:	dec    DWORD PTR [rsi+riz*8+0x68]
  43f2e5:	dec    DWORD PTR [rcx-0x18]
  43f2e8:	inc    WORD PTR [rsi-0x17]
  43f2ec:	inc    DWORD PTR fs:[rbx-0x18]
  43f2f0:	(bad)  
  43f2f1:	inc    DWORD PTR [rcx-0x1b]
  43f2f4:	pop    rsi
  43f2f5:	(bad)  
  43f2f6:	ds loopne 0x43f353
  43f2f9:	push   QWORD PTR [rbx-0x1b]
  43f2fc:	xchg   bh,bh
  43f2fe:	sub    DWORD PTR [rbx-0x52a100ad],esi
  43f304:	imul   edi,edi,0xffffffeb
  43f307:	loope  0x43f2e8
  43f309:	(bad)  
  43f30a:	(bad)  
  43f30b:	(bad)  
  43f30d:	(bad)  
  43f30e:	call   0xffffffffe843cef0
  43f313:	fcmovnu st,st(2)
  43f315:	jmp    rbp
  43f317:	(bad)  
  43f319:	jmp    rbx
  43f31b:	xlat   BYTE PTR ds:[rbx]
  43f31c:	(bad)  
  43f31d:	jmp    rdx
  43f31f:	(bad)  
  43f320:	(bad)  
  43f321:	jmp    rax
  43f323:	rcl    ecx,cl
  43f325:	(bad)  
  43f326:	(bad)  
  43f328:	sar    bh,1
  43f32a:	fmul   st(7),st
  43f32c:	int    0xff
  43f32e:	div    cl
  43f330:	out    dx,eax
  43f331:	jmp    QWORD PTR [rbx+0xff7878]
	...
  43f34b:	add    BYTE PTR [rax],al
  43f34d:	add    BYTE PTR [rcx],ah
  43f34f:	fwait
  43f350:	cmp    al,0xb6
  43f352:	(bad)  
  43f353:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  43f354:	rex call QWORD PTR [rsi]
  43f357:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  43f358:	rex call QWORD PTR [rsi]
  43f35b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  43f35c:	rex call QWORD PTR [rsi]
  43f35f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  43f360:	rex call QWORD PTR [rsi]
  43f363:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  43f364:	rex call QWORD PTR [rsi]
  43f367:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  43f368:	rex call QWORD PTR [rsi]
  43f36b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  43f36c:	rex call QWORD PTR [rdx-0x14]
  43f370:	ins    DWORD PTR es:[rdi],dx
  43f371:	dec    DWORD PTR [rcx-0x17]
  43f374:	addr32 (bad) 
  43f376:	jns    0x43f364
  43f378:	(bad)  
  43f379:	jmp    FWORD PTR [rcx]
  43f37b:	mov    bl,0x53
  43f37d:	jmp    QWORD PTR [rdx-0x4f]
  43f380:	outs   dx,DWORD PTR ds:[rsi]
  43f381:	(bad)  
  43f382:	out    dx,eax
  43f383:	in     eax,0xe3
  43f385:	(bad)  
  43f386:	in     eax,dx
  43f387:	jrcxz  0x43f36b
  43f389:	(bad)  
  43f38a:	in     al,dx
  43f38b:	loope  0x43f36c
  43f38d:	(bad)  
  43f38e:	(bad)  
  43f38f:	(bad)  
  43f391:	(bad)  
  43f392:	jmp    0xffffffffe843d074
  43f397:	(bad)  
  43f399:	jmp    rsi
  43f39b:	fcmovbe st,st(7)
  43f39d:	jmp    rsp
  43f39f:	xlat   BYTE PTR ds:[rbx]
  43f3a0:	(bad)  
  43f3a1:	jmp    rdx
  43f3a3:	(bad)  
  43f3a4:	(bad)  
  43f3a5:	jmp    rax
  43f3a7:	rcl    edx,cl
  43f3a9:	(bad)  
  43f3aa:	(bad)  
  43f3ac:	sar    bh,1
  43f3ae:	div    cl
  43f3b0:	out    dx,eax
  43f3b1:	jmp    QWORD PTR [rbx+0xff7878]
	...
  43f3db:	add    BYTE PTR [rax],al
  43f3dd:	add    BYTE PTR [rbx-0x6008788],ah
  43f3e3:	icebp  
  43f3e4:	lock (bad) 
  43f3e6:	clc    
  43f3e7:	lock out dx,eax
  43f3e9:	call   QWORD PTR [rsi]
  43f3eb:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  43f3ec:	rex jmp QWORD PTR [rbp+rbp*8+0x7e]
  43f3f1:	dec    DWORD PTR [rsi+0x29ffa1f2]
  43f3f7:	mov    bl,0x53
  43f3f9:	jmp    FWORD PTR [rcx-0x4d]
  43f3fc:	je     0x43f3fd
  43f3fe:	bnd call 0xffffffffe834f3eb
  43f404:	in     eax,0xff
  43f406:	out    dx,eax
  43f407:	in     eax,0xe3
  43f409:	(bad)  
  43f40a:	in     eax,dx
  43f40b:	jrcxz  0x43f3ef
  43f40d:	(bad)  
  43f40e:	in     al,dx
  43f40f:	loope  0x43f3f1
  43f411:	(bad)  
  43f412:	(bad)  
  43f413:	(bad)  
  43f415:	(bad)  
  43f416:	jmp    0xffffffffe943d0f9
  43f41b:	(bad)  
  43f41d:	jmp    rsi
  43f41f:	fcmovu st,st(0)
  43f421:	jmp    rsp
  43f423:	fcom   st(6)
  43f425:	jmp    rdx
  43f427:	(bad)  
  43f428:	(bad)  
  43f429:	jmp    rcx
  43f42b:	(bad)  
  43f42c:	sar    bh,cl
  43f42e:	div    cl
  43f430:	out    dx,eax
  43f431:	jmp    QWORD PTR [rbx+0xff7878]
	...
  43f45b:	add    BYTE PTR [rax],al
  43f45d:	add    BYTE PTR [rbx-0x6008788],ah
  43f463:	repnz lock (bad) 
  43f466:	stc    
  43f467:	bnd lock call QWORD PTR [rsi]
  43f46b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  43f46c:	rex call QWORD PTR [rax+0x29ffa1f0]
  43f473:	mov    bl,0x53
  43f475:	jmp    FWORD PTR [rbp-0x4b]
  43f478:	js     0x43f479
  43f47a:	cmc    
  43f47b:	in     al,dx
  43f47c:	(bad)  
  43f47d:	push   rbx
  43f47f:	(bad)  
  43f480:	jmp    0xffffffffe82de784
  43f485:	push   rcx
  43f487:	out    0xe6,eax
  43f489:	(bad)  
  43f48a:	out    dx,eax
  43f48b:	in     eax,0xe4
  43f48d:	(bad)  
  43f48e:	out    dx,al
  43f48f:	in     al,0xe3
  43f491:	(bad)  
  43f492:	in     eax,dx
  43f493:	loop   0x43f475
  43f495:	(bad)  
  43f496:	jmp    0x43f478
  43f498:	(bad)  
  43f49a:	(bad)  
  43f49b:	(bad)  
  43f49d:	(bad)  
  43f49e:	call   0xffffffffe743d07f
  43f4a3:	fcmovnu st,st(1)
  43f4a5:	jmp    rbp
  43f4a7:	(bad)  
  43f4a9:	jmp    rbx
  43f4ab:	(bad)  
  43f4ac:	(bad)  
  43f4ad:	push   rsi
  43f4af:	icebp  
  43f4b0:	out    dx,eax
  43f4b1:	jmp    QWORD PTR [rbx+0xff7878]
	...
  43f4db:	add    BYTE PTR [rax],al
  43f4dd:	add    BYTE PTR [rbx-0x6008788],ah
  43f4e3:	repnz lock (bad) 
  43f4e6:	stc    
  43f4e7:	bnd lock call QWORD PTR [rsi]
  43f4eb:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  43f4ec:	rex jmp FWORD PTR [rcx]
  43f4ef:	mov    bl,0x53
  43f4f1:	push   QWORD PTR [rax-0x4a]
  43f4f4:	jl     0x43f4f5
  43f4f6:	imul   bh
  43f4f8:	in     eax,dx
  43f4f9:	push   rbp
  43f4fb:	out    dx,al
  43f4fc:	in     al,dx
  43f4fd:	push   rsp
  43f4ff:	in     al,dx
  43f500:	jmp    0x43f501
  43f502:	hlt    
  43f503:	jmp    0x43f4ee
  43f505:	push   rdx
  43f507:	jmp    0xffffffffe935f4f3
  43f50c:	out    0xff,al
  43f50e:	out    dx,eax
  43f50f:	out    0xe4,al
  43f511:	(bad)  
  43f512:	out    dx,al
  43f513:	in     eax,0xe3
  43f515:	(bad)  
  43f516:	in     eax,dx
  43f517:	jrcxz  0x43f4fa
  43f519:	(bad)  
  43f51a:	in     al,dx
  43f51b:	loope  0x43f4fd
  43f51d:	(bad)  
  43f51e:	(bad)  
  43f51f:	(bad)  
  43f521:	(bad)  
  43f522:	call   0xffffffffe843d104
  43f527:	fcmovnu st,st(2)
  43f529:	jmp    rbp
  43f52b:	(bad)  
  43f52d:	push   rsi
  43f52f:	icebp  
  43f530:	out    dx,eax
  43f531:	jmp    QWORD PTR [rbx+0xff7878]
	...
  43f55b:	add    BYTE PTR [rax],al
  43f55d:	add    BYTE PTR [rbx-0x6008788],ah
  43f563:	repnz lock (bad) 
  43f566:	stc    
  43f567:	repnz lock jmp FWORD PTR [rdx]
  43f56b:	cdq    
  43f56c:	rex.RB push QWORD PTR [r10-0x4a]
  43f570:	jge    0x43f571
  43f572:	clc    
  43f573:	repnz out dx,eax
  43f575:	push   rdi
  43f577:	lock out dx,eax
  43f579:	push   rdi
  43f57b:	out    dx,eax
  43f57c:	out    dx,al
  43f57d:	push   rsi
  43f57f:	out    dx,al
  43f580:	in     al,dx
  43f581:	push   rbp
  43f583:	in     al,dx
  43f584:	jmp    0x43f585
  43f586:	repz in al,dx
  43f588:	jmp    0xffffffffe92ee98c
  43f58d:	push   rcx
  43f58f:	jmp    0xffffffffe834f57a
  43f594:	in     eax,0xff
  43f596:	out    dx,al
  43f597:	in     eax,0xe4
  43f599:	(bad)  
  43f59a:	out    dx,al
  43f59b:	jrcxz  0x43f57e
  43f59d:	(bad)  
  43f59e:	in     al,dx
  43f59f:	loope  0x43f581
  43f5a1:	(bad)  
  43f5a2:	jmp    0x43f584
  43f5a4:	fdivp  st(7),st
  43f5a6:	jmp    0xffffffffe843d288
  43f5ab:	(bad)  
  43f5ad:	push   rsi
  43f5af:	icebp  
  43f5b0:	out    dx,eax
  43f5b1:	jmp    QWORD PTR [rbx+0xff7878]
	...
  43f5db:	add    BYTE PTR [rax],al
  43f5dd:	add    BYTE PTR [rbx-0x9008788],ah
  43f5e3:	icebp  
  43f5e4:	out    dx,eax
  43f5e5:	push   rsi
  43f5e7:	icebp  
  43f5e8:	out    dx,eax
  43f5e9:	push   rsi
  43f5eb:	icebp  
  43f5ec:	out    dx,eax
  43f5ed:	push   rsi
  43f5ef:	icebp  
  43f5f0:	out    dx,eax
  43f5f1:	push   rsi
  43f5f3:	icebp  
  43f5f4:	out    dx,eax
  43f5f5:	push   rsi
  43f5f7:	icebp  
  43f5f8:	out    dx,eax
  43f5f9:	push   rsi
  43f5fb:	icebp  
  43f5fc:	out    dx,eax
  43f5fd:	push   rsi
  43f5ff:	icebp  
  43f600:	out    dx,eax
  43f601:	push   rsi
  43f603:	icebp  
  43f604:	out    dx,eax
  43f605:	push   rsi
  43f607:	icebp  
  43f608:	out    dx,eax
  43f609:	push   rsi
  43f60b:	icebp  
  43f60c:	out    dx,eax
  43f60d:	push   rsi
  43f60f:	icebp  
  43f610:	out    dx,eax
  43f611:	push   rsi
  43f613:	icebp  
  43f614:	out    dx,eax
  43f615:	push   rsi
  43f617:	icebp  
  43f618:	out    dx,eax
  43f619:	push   rsi
  43f61b:	icebp  
  43f61c:	out    dx,eax
  43f61d:	push   rsi
  43f61f:	icebp  
  43f620:	out    dx,eax
  43f621:	push   rsi
  43f623:	icebp  
  43f624:	out    dx,eax
  43f625:	push   rsi
  43f627:	icebp  
  43f628:	out    dx,eax
  43f629:	push   rsi
  43f62b:	icebp  
  43f62c:	out    dx,eax
  43f62d:	push   rsi
  43f62f:	icebp  
  43f630:	out    dx,eax
  43f631:	jmp    QWORD PTR [rbx+0xff7878]
	...
  43f657:	add    BYTE PTR [rax],al
  43f659:	add    cl,cl
  43f65b:	mov    dh,0xb5
  43f65d:	jae    0x43f602
  43f65f:	js     0x43f6d9
  43f661:	jmp    QWORD PTR [rbx-0x5c008788]
  43f667:	js     0x43f6e1
  43f669:	jmp    QWORD PTR [rbx-0x5c008788]
  43f66f:	js     0x43f6e9
  43f671:	jmp    QWORD PTR [rbx-0x5c008788]
  43f677:	js     0x43f6f1
  43f679:	jmp    QWORD PTR [rbx-0x5c008788]
  43f67f:	js     0x43f6f9
  43f681:	jmp    QWORD PTR [rbx-0x5c008788]
  43f687:	js     0x43f701
  43f689:	jmp    QWORD PTR [rbx-0x5c008788]
  43f68f:	js     0x43f709
  43f691:	jmp    QWORD PTR [rbx-0x5c008788]
  43f697:	js     0x43f711
  43f699:	jmp    QWORD PTR [rbx-0x5c008788]
  43f69f:	js     0x43f719
  43f6a1:	jmp    QWORD PTR [rbx-0x5c008788]
  43f6a7:	js     0x43f721
  43f6a9:	jmp    QWORD PTR [rbx-0x5c008788]
  43f6af:	js     0x43f729
  43f6b1:	jmp    QWORD PTR [rbx-0x36008788]
  43f6b7:	mov    dh,0xb5
  43f6b9:	jae    0x43f6bb
	...
  43f6d3:	add    BYTE PTR [rax],al
  43f6d5:	add    cl,cl
  43f6d7:	mov    dh,0xb5
  43f6d9:	jae    0x43f67e
  43f6db:	js     0x43f755
  43f6dd:	jmp    QWORD PTR [rbx-0x5c008788]
  43f6e3:	js     0x43f75d
  43f6e5:	jmp    QWORD PTR [rbx-0x5a008788]
  43f6eb:	jnp    0x43f768
  43f6ed:	jmp    FWORD PTR [rax-0x54008081]
  43f6f3:	test   DWORD PTR [rbp-0x75755101],eax
  43f6f9:	push   QWORD PTR [rdx-0x49006f70]
  43f6ff:	xchg   edi,eax
  43f700:	xchg   edi,eax
  43f701:	(bad)  
  43f702:	mov    edx,0xbeff9d9d
  43f707:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  43f708:	movabs ds:0xaeaec4ffa9aac1ff,eax
  43f711:	inc    edi
  43f713:	mov    bl,0xb2
  43f715:	dec    ecx
  43f717:	mov    dh,0xb5
  43f719:	dec    ecx
  43f71b:	mov    dh,0xb5
  43f71d:	dec    ecx
  43f71f:	mov    dh,0xb5
  43f721:	dec    ecx
  43f723:	mov    dh,0xb5
  43f725:	dec    ecx
  43f727:	mov    dh,0xb5
  43f729:	dec    ecx
  43f72b:	mov    dh,0xb5
  43f72d:	dec    ecx
  43f72f:	mov    dh,0xb5
  43f731:	jmp    QWORD PTR [rbx-0x5c008788]
  43f737:	js     0x43f7b1
  43f739:	dec    ecx
  43f73b:	mov    dh,0xb5
  43f73d:	jae    0x43f73f
	...
  43f74f:	add    BYTE PTR [rax],al
  43f751:	add    cl,cl
  43f753:	mov    dh,0xb5
  43f755:	jae    0x43f6fa
  43f757:	js     0x43f7d1
  43f759:	dec    ecx
  43f75b:	mov    dh,0xb5
  43f75d:	jmp    QWORD PTR [rbx-0x5c008788]
  43f763:	js     0x43f7dd
  43f765:	jmp    QWORD PTR [rbx-0x5c008788]
  43f76b:	js     0x43f7e5
  43f76d:	jmp    QWORD PTR [rbx-0x5c008788]
  43f773:	js     0x43f7ed
  43f775:	jmp    QWORD PTR [rbx-0x5c008788]
  43f77b:	js     0x43f7f5
  43f77d:	jmp    QWORD PTR [rbx-0x5c008788]
  43f783:	js     0x43f7fd
  43f785:	jmp    QWORD PTR [rbx-0x5c008788]
  43f78b:	js     0x43f805
  43f78d:	jmp    QWORD PTR [rbx-0x5c008788]
  43f793:	js     0x43f80d
  43f795:	jmp    QWORD PTR [rbx-0x5c008788]
  43f79b:	js     0x43f815
  43f79d:	jmp    QWORD PTR [rbx-0x5c008788]
  43f7a3:	js     0x43f81d
  43f7a5:	jmp    QWORD PTR [rbx-0x5c008788]
  43f7ab:	js     0x43f825
  43f7ad:	jmp    QWORD PTR [rbx-0x5c008788]
  43f7b3:	js     0x43f82d
  43f7b5:	dec    ecx
  43f7b7:	mov    dh,0xb5
  43f7b9:	jmp    QWORD PTR [rbx-0x36008788]
  43f7bf:	mov    dh,0xb5
  43f7c1:	jae    0x43f7c3
	...
  43f7cb:	add    BYTE PTR [rax],al
  43f7cd:	add    cl,cl
  43f7cf:	mov    dh,0xb5
  43f7d1:	jae    0x43f776
  43f7d3:	js     0x43f84d
  43f7d5:	dec    ecx
  43f7d7:	mov    dh,0xb5
  43f7d9:	jmp    QWORD PTR [rbx-0x36008788]
  43f7df:	mov    dh,0xb5
  43f7e1:	jae    0x43f786
  43f7e3:	js     0x43f85d
  43f7e5:	dec    ebp
  43f7e7:	mov    ch,0xb3
  43f7e9:	dec    ebp
  43f7eb:	mov    ah,0xb3
  43f7ed:	dec    ebp
  43f7ef:	mov    ah,0xb4
  43f7f1:	dec    esp
  43f7f3:	mov    ah,0xb4
  43f7f5:	dec    ebp
  43f7f7:	mov    ah,0xb4
  43f7f9:	dec    ebp
  43f7fb:	mov    ch,0xb4
  43f7fd:	dec    esp
  43f7ff:	mov    ch,0xb3
  43f801:	dec    esp
  43f803:	mov    ah,0xb4
  43f805:	dec    esp
  43f807:	mov    ah,0xb3
  43f809:	dec    esp
  43f80b:	mov    ch,0xb4
  43f80d:	dec    ebp
  43f80f:	mov    ch,0xb3
  43f811:	dec    esp
  43f813:	mov    ch,0xb4
  43f815:	dec    ebp
  43f817:	mov    ah,0xb4
  43f819:	dec    ebp
  43f81b:	mov    ch,0xb4
  43f81d:	dec    ebp
  43f81f:	mov    ah,0xb4
  43f821:	dec    esp
  43f823:	mov    ah,0xb3
  43f825:	dec    ebp
  43f827:	mov    ah,0xb3
  43f829:	dec    ebp
  43f82b:	mov    ch,0xb4
  43f82d:	jmp    QWORD PTR [rbx-0x36008788]
  43f833:	mov    dh,0xb5
  43f835:	jae    0x43f7da
  43f837:	js     0x43f8b1
  43f839:	dec    ecx
  43f83b:	mov    dh,0xb5
  43f83d:	jmp    QWORD PTR [rbx-0x36008788]
  43f843:	mov    dh,0xb5
  43f845:	jae    0x43f847
  43f847:	add    BYTE PTR [rax],al
  43f849:	add    BYTE PTR [rax],al
  43f84b:	add    BYTE PTR [rax],al
  43f84d:	add    BYTE PTR [rbx-0x5c008788],ah
  43f853:	js     0x43f8cd
  43f855:	jmp    QWORD PTR [rbx-0x36008788]
  43f85b:	mov    dh,0xb5
  43f85d:	jae    0x43f85f
  43f85f:	add    BYTE PTR [rax],al
  43f861:	add    BYTE PTR [rbx-0x21008788],ah
  43f867:	int    0xcc
  43f869:	(bad)  
  43f86a:	(bad)  
  43f86c:	int3   
  43f86d:	(bad)  
  43f86e:	(bad)  
  43f870:	int3   
  43f871:	(bad)  
  43f872:	(bad)  
  43f874:	retf   
  43f875:	(bad)  
  43f876:	(bad)  
  43f878:	int3   
  43f879:	(bad)  
  43f87a:	(bad)  
  43f87c:	retf   
  43f87d:	(bad)  
  43f87e:	fmulp  st(5),st
  43f880:	int3   
  43f881:	(bad)  
  43f882:	(bad)  
  43f884:	int3   
  43f885:	(bad)  
  43f886:	(bad)  
  43f888:	int3   
  43f889:	(bad)  
  43f88a:	fmulp  st(5),st
  43f88c:	int3   
  43f88d:	(bad)  
  43f88e:	(bad)  
  43f890:	int3   
  43f891:	(bad)  
  43f892:	(bad)  
  43f894:	int3   
  43f895:	(bad)  
  43f896:	fmulp  st(5),st
  43f898:	int3   
  43f899:	(bad)  
  43f89a:	fmulp  st(5),st
  43f89c:	int3   
  43f89d:	(bad)  
  43f89e:	(bad)  
  43f8a0:	retf   
  43f8a1:	(bad)  
  43f8a2:	(bad)  
  43f8a4:	int3   
  43f8a5:	(bad)  
  43f8a6:	fmulp  st(5),st
  43f8a8:	retf   
  43f8a9:	(bad)  
  43f8aa:	fmulp  st(5),st
  43f8ac:	int3   
  43f8ad:	jmp    QWORD PTR [rbx+0xff7878]
  43f8b3:	add    BYTE PTR [rax],al
  43f8b5:	add    cl,cl
  43f8b7:	mov    dh,0xb5
  43f8b9:	jae    0x43f85e
  43f8bb:	js     0x43f935
  43f8bd:	jmp    QWORD PTR [rbx-0x5c008788]
  43f8c3:	js     0x43f93d
  43f8c5:	inc    DWORD PTR [rax]
	...
  43f8df:	add    BYTE PTR [rax],al
  43f8e1:	add    BYTE PTR [rbx-0x13008788],ah
  43f8e7:	jrcxz  0x43f8ca
  43f8e9:	(bad)  
  43f8ea:	in     al,dx
  43f8eb:	loop   0x43f8cd
  43f8ed:	(bad)  
  43f8ee:	in     al,dx
  43f8ef:	loop   0x43f8d2
  43f8f1:	(bad)  
  43f8f2:	in     al,dx
  43f8f3:	jrcxz  0x43f8d6
  43f8f5:	(bad)  
  43f8f6:	in     al,dx
  43f8f7:	loop   0x43f8d9
  43f8f9:	(bad)  
  43f8fa:	in     al,dx
  43f8fb:	loop   0x43f8de
  43f8fd:	(bad)  
  43f8fe:	in     al,dx
  43f8ff:	loop   0x43f8e2
  43f901:	(bad)  
  43f902:	in     al,dx
  43f903:	jrcxz  0x43f8e6
  43f905:	(bad)  
  43f906:	in     al,dx
  43f907:	jrcxz  0x43f8ea
  43f909:	(bad)  
  43f90a:	in     al,dx
  43f90b:	loop   0x43f8ee
  43f90d:	(bad)  
  43f90e:	in     al,dx
  43f90f:	loop   0x43f8f2
  43f911:	(bad)  
  43f912:	in     al,dx
  43f913:	loop   0x43f8f6
  43f915:	(bad)  
  43f916:	in     al,dx
  43f917:	loop   0x43f8fa
  43f919:	(bad)  
  43f91a:	in     al,dx
  43f91b:	loop   0x43f8fd
  43f91d:	(bad)  
  43f91e:	in     al,dx
  43f91f:	loop   0x43f902
  43f921:	(bad)  
  43f922:	in     al,dx
  43f923:	loop   0x43f906
  43f925:	(bad)  
  43f926:	in     al,dx
  43f927:	loop   0x43f909
  43f929:	(bad)  
  43f92a:	in     al,dx
  43f92b:	jrcxz  0x43f90d
  43f92d:	jmp    QWORD PTR [rbx+0xff7878]
	...
  43f95f:	add    BYTE PTR [rax],al
  43f961:	add    BYTE PTR [rbx-0x5c008788],ah
  43f967:	js     0x43f9e1
  43f969:	jmp    QWORD PTR [rbx-0x5c008788]
  43f96f:	js     0x43f9e9
  43f971:	jmp    QWORD PTR [rbx-0x5c008788]
  43f977:	js     0x43f9f1
  43f979:	jmp    QWORD PTR [rbx-0x5c008788]
  43f97f:	js     0x43f9f9
  43f981:	jmp    QWORD PTR [rbx-0x5c008788]
  43f987:	js     0x43fa01
  43f989:	jmp    QWORD PTR [rbx-0x5c008788]
  43f98f:	js     0x43fa09
  43f991:	jmp    QWORD PTR [rbx-0x5c008788]
  43f997:	js     0x43fa11
  43f999:	jmp    QWORD PTR [rbx-0x5c008788]
  43f99f:	js     0x43fa19
  43f9a1:	jmp    QWORD PTR [rbx-0x5c008788]
  43f9a7:	js     0x43fa21
  43f9a9:	jmp    QWORD PTR [rbx-0x5c008788]
  43f9af:	js     0x43fa29
  43f9b1:	inc    DWORD PTR [rax]
	...
  43fa47:	add    BYTE PTR [rax],al
  43fa49:	add    bh,bh
  43fa4b:	(bad)  
  43fa4c:	(bad)  
  43fa4d:	(bad)  
  43fa4e:	clc    
  43fa4f:	add    BYTE PTR [rax],al
  43fa51:	(bad)  
  43fa52:	clc    
  43fa53:	add    BYTE PTR [rax],al
  43fa55:	(bad)  
  43fa56:	clc    
  43fa57:	add    BYTE PTR [rax],al
  43fa59:	(bad)  
  43fa5a:	clc    
  43fa5b:	add    BYTE PTR [rax],al
  43fa5d:	(bad)  
  43fa5e:	clc    
  43fa5f:	add    BYTE PTR [rax],al
  43fa61:	(bad)  
  43fa62:	clc    
  43fa63:	add    BYTE PTR [rax],al
  43fa65:	(bad)  
  43fa66:	clc    
  43fa67:	add    BYTE PTR [rax],al
  43fa69:	(bad)  
  43fa6a:	clc    
  43fa6b:	add    BYTE PTR [rax],al
  43fa6d:	(bad)  
  43fa6e:	clc    
  43fa6f:	add    BYTE PTR [rax],al
  43fa71:	(bad)  
  43fa72:	clc    
  43fa73:	add    BYTE PTR [rax],al
  43fa75:	(bad)  
  43fa76:	clc    
  43fa77:	add    BYTE PTR [rax],al
  43fa79:	(bad)  
  43fa7a:	add    BYTE PTR [rax],0x0
  43fa7d:	(bad)  
  43fa7e:	add    BYTE PTR [rax],0x0
  43fa81:	(bad)  
  43fa82:	add    BYTE PTR [rax],0x0
  43fa85:	(bad)  
  43fa86:	add    BYTE PTR [rax],0x0
  43fa89:	(bad)  
  43fa8a:	add    BYTE PTR [rax],0x0
  43fa8d:	(bad)  
  43fa8e:	add    BYTE PTR [rax],0x0
  43fa91:	(bad)  
  43fa92:	add    BYTE PTR [rax],0x0
  43fa95:	(bad)  
  43fa96:	clc    
  43fa97:	add    BYTE PTR [rax],al
  43fa99:	(bad)  
  43fa9a:	clc    
  43fa9b:	add    BYTE PTR [rax],al
  43fa9d:	(bad)  
  43fa9e:	clc    
  43fa9f:	add    BYTE PTR [rax],al
  43faa1:	(bad)  
  43faa2:	clc    
  43faa3:	add    BYTE PTR [rax],al
  43faa5:	(bad)  
  43faa6:	clc    
  43faa7:	add    BYTE PTR [rax],al
  43faa9:	(bad)  
  43faaa:	lock add BYTE PTR [rax],al
  43faad:	pavgb  mm0,QWORD PTR [rax]
  43fab0:	add    BYTE PTR [rdi],al
  43fab2:	rol    BYTE PTR [rax],0x0
  43fab5:	add    eax,DWORD PTR [rax-0x7bff0000]
  43fabb:	add    BYTE PTR [rax],al
  43fabd:	and    esp,edi
  43fabf:	add    BYTE PTR [rax],al
  43fac1:	(bad)  
  43fac2:	cld    
  43fac3:	add    BYTE PTR [rax],al
  43fac5:	(bad)  
  43fac6:	(bad)  
  43fac7:	(bad)  
  43fac8:	(bad)  
  43fac9:	jmp    FWORD PTR [rax]
  43facb:	add    BYTE PTR [rax],al
  43facd:	add    BYTE PTR [rax],dl
  43facf:	add    BYTE PTR [rax],al
  43fad1:	add    BYTE PTR [rax],ah
  43fad3:	add    BYTE PTR [rax],al
  43fad5:	add    BYTE PTR [rcx],al
  43fad7:	add    BYTE PTR [rax],ah
  43fad9:	add    BYTE PTR [rax],al
  43fadb:	add    BYTE PTR [rax],al
  43fadd:	add    BYTE PTR [rax+0x4],al
	...
  43faf8:	add    BYTE PTR [rax],al
  43fafa:	movabs ds:0xa3ff7878a3ff7878,eax
  43fb03:	js     0x43fb7d
  43fb05:	jmp    QWORD PTR [rbx-0x5c008788]
  43fb0b:	js     0x43fb85
  43fb0d:	jmp    QWORD PTR [rbx-0x5c008788]
  43fb13:	js     0x43fb8d
  43fb15:	jmp    QWORD PTR [rbx-0x5c008788]
  43fb1b:	js     0x43fb95
  43fb1d:	jmp    QWORD PTR [rbx-0x5c008788]
  43fb23:	js     0x43fb9d
  43fb25:	jmp    QWORD PTR [rbx+0xff7878]
	...
  43fb37:	add    BYTE PTR [rax],al
  43fb39:	add    BYTE PTR [rbx-0x1f008788],ah
  43fb3f:	rcl    cl,cl
  43fb41:	(bad)  
  43fb42:	(bad)  
  43fb44:	(bad)  
  43fb45:	push   rdx
  43fb47:	out    dx,al
  43fb48:	in     eax,dx
  43fb49:	push   rcx
  43fb4b:	in     al,dx
  43fb4c:	in     al,dx
  43fb4d:	call   rsp
  43fb4f:	(bad)  
  43fb53:	sar    BYTE PTR [rdi-0x44433101],0xff
  43fb5a:	int3   
  43fb5b:	mov    ecx,0xb6c9ffb8
  43fb60:	mov    ch,0xff
  43fb62:	div    cl
  43fb64:	out    dx,eax
  43fb65:	jmp    QWORD PTR [rbx+0xff7878]
	...
  43fb77:	add    BYTE PTR [rax],al
  43fb79:	add    BYTE PTR [rbx-0x1c008788],ah
  43fb7f:	xlat   BYTE PTR ds:[rbx]
  43fb80:	(bad)  
  43fb81:	jmp    rcx
  43fb83:	(bad)  
  43fb84:	sar    bh,cl
  43fb86:	pop    rbp
  43fb87:	cdq    
  43fb88:	pop    rbp
  43fb89:	call   FWORD PTR [rbp-0x67]
  43fb8c:	pop    rbp
  43fb8d:	push   rdx
  43fb8f:	in     eax,dx
  43fb90:	in     al,dx
  43fb91:	call   rbp
  43fb93:	(bad)
  43fb96:	rol    dl,cl
  43fb98:	sar    bh,0xd0
  43fb9b:	mov    esi,0xbaccffbd
  43fba0:	mov    ecx,0xeff1f6ff
  43fba5:	jmp    QWORD PTR [rbx+0xff7878]
	...
  43fbb7:	add    BYTE PTR [rax],al
  43fbb9:	add    ah,al
  43fbbb:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  43fbbc:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  43fbbd:	push   rdi
  43fbbf:	repz repz push rsi
  43fbc3:	repnz icebp 
  43fbc5:	call   FWORD PTR [rbp-0x67]
  43fbc8:	pop    rbp
  43fbc9:	jmp    QWORD PTR [rax]
  43fbcb:	mov    edi,0x995dff43
  43fbd0:	pop    rbp
  43fbd1:	push   rdx
  43fbd3:	in     eax,dx
  43fbd4:	in     al,dx
  43fbd5:	call   rsi
  43fbd7:	mov    ch,0xff
  43fbda:	(bad)  
  43fbdb:	ret    0xffc1
  43fbde:	sar    BYTE PTR [rdi-0xe090042],1
  43fbe4:	out    dx,eax
  43fbe5:	jmp    QWORD PTR [rbx+0xff7878]
  43fbeb:	add    BYTE PTR [rax],al
  43fbed:	add    BYTE PTR [rax],al
  43fbef:	add    BYTE PTR [rax],al
  43fbf1:	add    BYTE PTR [rbp-0x67],bl
  43fbf4:	pop    rbp
  43fbf5:	call   FWORD PTR [rbp-0x67]
  43fbf8:	pop    rbp
  43fbf9:	call   FWORD PTR [rbp-0x67]
  43fbfc:	pop    rbp
  43fbfd:	call   FWORD PTR [rbp-0x67]
  43fc00:	pop    rbp
  43fc01:	call   FWORD PTR [rbp-0x67]
  43fc04:	pop    rbp
  43fc05:	call   FWORD PTR [rbp-0x67]
  43fc08:	pop    rbp
  43fc09:	inc    edi
  43fc0b:	cld    
  43fc0c:	(bad)  
  43fc0d:	jmp    QWORD PTR [rax]
  43fc0f:	mov    edi,0x995dff43
  43fc14:	pop    rbp
  43fc15:	push   rdx
  43fc17:	out    dx,al
  43fc18:	in     eax,dx
  43fc19:	call   rdi
  43fc1b:	enter  0xffc6,0xd4
  43fc1f:	(bad)  
  43fc23:	icebp  
  43fc24:	out    dx,eax
  43fc25:	jmp    QWORD PTR [rbx+0xff7878]
  43fc2b:	add    BYTE PTR [rax],al
  43fc2d:	add    BYTE PTR [rax],al
  43fc2f:	add    BYTE PTR [rax],al
  43fc31:	add    BYTE PTR [rdi],ch
  43fc33:	mov    ebx,0xed85ff4f
  43fc38:	xchg   edi,eax
  43fc39:	inc    BYTE PTR [rbx+rbp*8-0x147c0069]
  43fc40:	xchg   esp,eax
  43fc41:	(bad)  
  43fc42:	jg     0x43fc2c
  43fc44:	nop
  43fc45:	(bad)  
  43fc46:	jns    0x43fc2b
  43fc48:	mov    bh,bh
  43fc4a:	sub    ecx,ecx
  43fc4c:	rex.XB inc r14d
  43fc4f:	cld    
  43fc50:	(bad)  
  43fc51:	jmp    QWORD PTR [rax]
  43fc53:	mov    edi,0x995dff43
  43fc58:	pop    rbp
  43fc59:	push   rbx
  43fc5b:	out    dx,al
  43fc5c:	in     eax,dx
  43fc5d:	(bad)  
  43fc5e:	fmul   st,st(1)
  43fc60:	(bad)  
  43fc61:	push   rsi
  43fc63:	icebp  
  43fc64:	out    dx,eax
  43fc65:	jmp    QWORD PTR [rbx+0xff7878]
  43fc6b:	add    BYTE PTR [rax],al
  43fc6d:	add    BYTE PTR [rax],al
  43fc6f:	add    BYTE PTR [rax],al
  43fc71:	add    BYTE PTR [rdi],ch
  43fc73:	mov    ebx,0xef86ff4f
  43fc78:	(bad)  
  43fc79:	inc    DWORD PTR [rsi-0x17]
  43fc7c:	movsxd edi,edi
  43fc7e:	rex.RXB jmp 0xffffffffe587fbe7
  43fc84:	pop    rdi
  43fc85:	(bad)  
  43fc86:	cmp    eax,0x34ff58dd
  43fc8b:	ror    DWORD PTR [rsi-0x1],cl
  43fc8e:	sub    al,bh
  43fc90:	rex.X inc esp
  43fc93:	std    
  43fc94:	int    0xff
  43fc96:	sbb    BYTE PTR [rbx-0x1abc00c4],bh
  43fc9c:	pop    rdi
  43fc9d:	(bad)  
  43fc9e:	fcmovne st,st(5)
  43fca0:	int    0xff
  43fca2:	div    cl
  43fca4:	out    dx,eax
  43fca5:	jmp    QWORD PTR [rbx+0xff7878]
  43fcab:	add    BYTE PTR [rax],al
  43fcad:	add    BYTE PTR [rax],al
  43fcaf:	add    BYTE PTR [rax],al
  43fcb1:	add    BYTE PTR [rdi],ch
  43fcb3:	mov    ebx,0xea86ff4f
  43fcb8:	cwde   
  43fcb9:	call   FWORD PTR [rdx-0x17]
  43fcbc:	je     0x43fcbd
  43fcbe:	pop    rcx
  43fcbf:	(bad)  
  43fcc0:	jae    0x43fcc1
  43fcc2:	rex.R call 0xffffffffe484fc28
  43fcc8:	pop    rsp
  43fcc9:	(bad)  
  43fcca:	cmp    bl,bl
  43fccc:	push   rsi
  43fccd:	jmp    QWORD PTR [rbp-0x24]
  43fcd0:	js     0x43fcd1
  43fcd2:	adc    al,0xaf
  43fcd4:	call   QWORD PTR ss:[rbp-0xa005e2a]
  43fcdb:	icebp  
  43fcdc:	lock (bad) 
  43fcde:	(bad)  
  43fce0:	sar    edi,1
  43fce2:	div    cl
  43fce4:	out    dx,eax
  43fce5:	jmp    QWORD PTR [rbx+0xff7878]
  43fceb:	add    BYTE PTR [rax],al
  43fced:	add    BYTE PTR [rax],al
  43fcef:	add    BYTE PTR [rax],al
  43fcf1:	add    BYTE PTR [rdx],ah
  43fcf3:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  43fcf4:	cmp    ebp,ebx
  43fcf6:	(bad)  
  43fcf7:	mov    esp,0xbc1eff41
  43fcfc:	call   FWORD PTR [r14]
  43fcff:	mov    esp,0xbc1eff41
  43fd04:	call   FWORD PTR [r14]
  43fd07:	mov    esp,0xe86eff41
  43fd0c:	test   bh,bh
  43fd0e:	adc    al,0xaf
  43fd10:	call   QWORD PTR ss:[rsi-0x8005d28]
  43fd17:	hlt    
  43fd18:	repz jmp rsi
  43fd1b:	fcmovnu st,st(2)
  43fd1d:	jmp    rsp
  43fd1f:	fcom   st(5)
  43fd21:	push   rsi
  43fd23:	icebp  
  43fd24:	out    dx,eax
  43fd25:	jmp    QWORD PTR [rbx+0xff7878]
	...
  43fd37:	add    BYTE PTR [rax],al
  43fd39:	add    ah,al
  43fd3b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  43fd3c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  43fd3d:	(bad)  
  43fd3e:	stc    
  43fd3f:	repnz lock push rdi
  43fd43:	lock out dx,al
  43fd45:	call   FWORD PTR [rsi]
  43fd47:	mov    esp,0xaf14ff41
  43fd4c:	call   QWORD PTR ss:[rdi-0x5005b27]
  43fd53:	div    dh
  43fd55:	(bad)  
  43fd56:	in     eax,dx
  43fd57:	jrcxz  0x43fd3a
  43fd59:	(bad)  
  43fd5a:	(bad)  
  43fd5b:	loopne 0x43fd3a
  43fd5d:	jmp    rdi
  43fd5f:	fstp   st(2)
  43fd61:	push   rsi
  43fd63:	icebp  
  43fd64:	out    dx,eax
  43fd65:	jmp    QWORD PTR [rbx+0xff7878]
	...
  43fd77:	add    BYTE PTR [rax],al
  43fd79:	add    BYTE PTR [rbx-0x6008788],ah
  43fd7f:	repnz lock (bad) 
  43fd82:	stc    
  43fd83:	repnz lock call FWORD PTR [rcx]
  43fd87:	mov    ecx,0xda98ff3c
  43fd8c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  43fd8d:	(bad)  
  43fd8e:	sti    
  43fd8f:	stc    
  43fd90:	clc    
  43fd91:	push   rbx
  43fd93:	(bad)  
  43fd94:	call   0xffffffffe62bee98
  43fd99:	(bad)  
  43fd9a:	out    dx,al
  43fd9b:	in     al,0xe2
  43fd9d:	(bad)  
  43fd9e:	jmp    0x43fd81
  43fda0:	(bad)  
  43fda2:	div    cl
  43fda4:	out    dx,eax
  43fda5:	jmp    QWORD PTR [rbx+0xff7878]
	...
  43fdb7:	add    BYTE PTR [rax],al
  43fdb9:	add    BYTE PTR [rbx-0x8788],ah
  43fdbf:	(bad)  
  43fdc0:	(bad)  
  43fdc1:	(bad)  
  43fdc2:	(bad)  
  43fdc3:	(bad)  
  43fdc4:	(bad)  
  43fdc5:	(bad)  
  43fdc6:	(bad)  
  43fdc7:	(bad)  
  43fdc8:	(bad)  
  43fdc9:	(bad)  
  43fdca:	(bad)  
  43fdcb:	(bad)  
  43fdcc:	(bad)  
  43fdcd:	(bad)  
  43fdce:	(bad)  
  43fdcf:	(bad)  
  43fdd0:	(bad)  
  43fdd1:	(bad)  
  43fdd2:	(bad)  
  43fdd3:	(bad)  
  43fdd4:	(bad)  
  43fdd5:	(bad)  
  43fdd6:	(bad)  
  43fdd7:	(bad)  
  43fdd8:	(bad)  
  43fdd9:	(bad)  
  43fdda:	(bad)  
  43fddb:	(bad)  
  43fddc:	(bad)  
  43fddd:	(bad)  
  43fdde:	(bad)  
  43fddf:	(bad)  
  43fde0:	(bad)  
  43fde1:	(bad)  
  43fde2:	(bad)  
  43fde3:	(bad)  
  43fde4:	(bad)  
  43fde5:	jmp    QWORD PTR [rbx+0xff7878]
	...
  43fdf3:	add    BYTE PTR [rax],al
  43fdf5:	add    BYTE PTR [rsi+riz*2+0x78a34266],dl
  43fdfc:	js     0x43fdfd
  43fdfe:	movabs ds:0xa3ff7878a3ff7878,eax
  43fe07:	js     0x43fe81
  43fe09:	jmp    QWORD PTR [rbx-0x5c008788]
  43fe0f:	js     0x43fe89
  43fe11:	jmp    QWORD PTR [rbx-0x5c008788]
  43fe17:	js     0x43fe91
  43fe19:	jmp    QWORD PTR [rbx-0x5c008788]
  43fe1f:	js     0x43fe99
  43fe21:	jmp    QWORD PTR [rbx-0x5c008788]
  43fe27:	js     0x43fea1
  43fe29:	call   QWORD PTR [rsi+riz*2+0x4266]
  43fe30:	add    BYTE PTR [rax],al
  43fe32:	add    BYTE PTR [rax],al
  43fe34:	add    BYTE PTR [rax],al
  43fe36:	movabs ds:0xa342666694ff7878,eax
  43fe3f:	js     0x43feb9
  43fe41:	inc    esp
  43fe43:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  43fe44:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  43fe45:	inc    esp
  43fe47:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  43fe48:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  43fe49:	inc    esp
  43fe4b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  43fe4c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  43fe4d:	inc    esp
  43fe4f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  43fe50:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  43fe51:	inc    esp
  43fe53:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  43fe54:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  43fe55:	inc    esp
  43fe57:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  43fe58:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  43fe59:	inc    esp
  43fe5b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  43fe5c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  43fe5d:	inc    esp
  43fe5f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  43fe60:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  43fe61:	jmp    QWORD PTR [rbx-0x6b008788]
  43fe67:	data16 rex.X movabs ds:0xa300000000ff7878,ax
  43fe73:	js     0x43feed
  43fe75:	inc    DWORD PTR [rax]
  43fe77:	add    BYTE PTR [rax],al
  43fe79:	add    BYTE PTR [rax],al
  43fe7b:	add    BYTE PTR [rax],al
  43fe7d:	add    BYTE PTR [rbx-0x1e008788],ah
  43fe83:	(bad)  
  43fe84:	(bad)  
  43fe85:	jmp    rcx
  43fe87:	(bad)  
  43fe88:	(bad)  
  43fe89:	jmp    rcx
  43fe8b:	(bad)  
  43fe8c:	(bad)  
  43fe8d:	jmp    rcx
  43fe8f:	(bad)  
  43fe90:	(bad)  
  43fe91:	jmp    rcx
  43fe93:	(bad)  
  43fe94:	(bad)  
  43fe95:	jmp    rcx
  43fe97:	(bad)  
  43fe98:	(bad)  
  43fe99:	jmp    rcx
  43fe9b:	(bad)  
  43fe9c:	(bad)  
  43fe9d:	jmp    rcx
  43fe9f:	(bad)  
  43fea0:	(bad)  
  43fea1:	jmp    QWORD PTR [rbx+0xff7878]
  43fea7:	add    BYTE PTR [rax],al
  43fea9:	add    BYTE PTR [rax],al
  43feab:	add    BYTE PTR [rax],al
  43fead:	add    BYTE PTR [rbx+0xff7878],ah
	...
  43febb:	add    BYTE PTR [rax],al
  43febd:	add    BYTE PTR [rbx-0x5c008788],ah
  43fec3:	js     0x43ff3d
  43fec5:	jmp    QWORD PTR [rbx-0x5c008788]
  43fecb:	js     0x43ff45
  43fecd:	jmp    QWORD PTR [rbx-0x5c008788]
  43fed3:	js     0x43ff4d
  43fed5:	jmp    QWORD PTR [rbx-0x5c008788]
  43fedb:	js     0x43ff55
  43fedd:	jmp    QWORD PTR [rbx-0x5c008788]
  43fee3:	js     0x43ff5d
  43fee5:	inc    DWORD PTR [rax]
	...
  43feef:	add    BYTE PTR [rax],al
  43fef1:	add    al,al
  43fef3:	add    eax,DWORD PTR [rax]
  43fef5:	add    al,al
  43fef7:	add    eax,DWORD PTR [rax]
  43fef9:	add    al,al
  43fefb:	add    eax,DWORD PTR [rax]
  43fefd:	add    al,al
  43feff:	add    eax,DWORD PTR [rax]
  43ff01:	add    BYTE PTR [rax],al
  43ff03:	add    eax,DWORD PTR [rax]
  43ff05:	add    BYTE PTR [rax],al
  43ff07:	add    eax,DWORD PTR [rax]
  43ff09:	add    BYTE PTR [rax],al
  43ff0b:	add    eax,DWORD PTR [rax]
  43ff0d:	add    BYTE PTR [rax],al
  43ff0f:	add    eax,DWORD PTR [rax]
  43ff11:	add    BYTE PTR [rax],al
  43ff13:	add    eax,DWORD PTR [rax]
  43ff15:	add    al,al
  43ff17:	add    eax,DWORD PTR [rax]
  43ff19:	add    al,al
  43ff1b:	add    eax,DWORD PTR [rax]
  43ff1d:	add    al,al
  43ff1f:	add    eax,DWORD PTR [rax]
  43ff21:	add    BYTE PTR [rax-0x7fffffff],al
  43ff27:	add    DWORD PTR [rax],eax
  43ff29:	add    BYTE PTR [rax+0x6],ah
  43ff2c:	add    BYTE PTR [rax],al
  43ff2e:	loopne 0x43ff37
  43ff30:	add    BYTE PTR [rax],al
  43ff32:	or     eax,DWORD PTR [rax+0x0]
  43ff35:	add    DWORD PTR [rax],eax
  43ff37:	add    BYTE PTR [rax],al
  43ff39:	(bad)  
  43ff3a:	(bad)  
  43ff3b:	(bad)  
  43ff3c:	inc    DWORD PTR [rcx]
  43ff3e:	add    BYTE PTR [rax],al
  43ff40:	add    BYTE PTR [rax],al
  43ff42:	add    BYTE PTR [rax],al
  43ff44:	add    BYTE PTR [rdx+rax*1],cl
  43ff47:	add    BYTE PTR [rax],al
  43ff49:	add    BYTE PTR [rcx+0x53],dl
  43ff4c:	jns    0x43ffc1
  43ff4e:	je     0x43ffb5
  43ff50:	ins    DWORD PTR es:[rdi],dx
  43ff51:	cs rex.R jb 0x43ffb6
  43ff55:	ja     0x43ffc0
  43ff57:	outs   dx,BYTE PTR ds:[rsi]
  43ff58:	addr32 sub al,0x20
  43ff5b:	push   rsi
  43ff5c:	gs jb  0x43ffd2
  43ff5f:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  43ff66:	xor    BYTE PTR cs:[rsi],ch
  43ff69:	xor    BYTE PTR [rax+riz*1],ch
  43ff6c:	rex.XB jne 0x43ffdb
  43ff6f:	je     0x43ffe6
  43ff71:	jb     0x43ffd8
  43ff73:	cmp    eax,0x7475656e
  43ff78:	jb     0x43ffdb
  43ff7a:	ins    BYTE PTR es:[rdi],dx
  43ff7b:	sub    al,0x20
  43ff7d:	push   rax
  43ff7e:	jne    0x43ffe2
  43ff80:	ins    BYTE PTR es:[rdi],dx
  43ff81:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  43ff88:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  43ff8c:	(bad)  
  43ff8d:	xor    BYTE PTR [rbx],dh
  43ff8f:	xor    ax,0x3766
  43ff93:	xor    WORD PTR [rcx],si
  43ff96:	fs xor eax,0x61336130
  43ff9c:	add    eax,0x1
  43ffa1:	adc    edx,DWORD PTR [rbx+0x79]
  43ffa4:	jae    0x44001a
  43ffa6:	gs ins DWORD PTR es:[rdi],dx
  43ffa8:	cs rex.R jb 0x44000d
  43ffac:	ja     0x440017
  43ffae:	outs   dx,BYTE PTR ds:[rsi]
  43ffaf:	movsxd rbp,DWORD PTR cs:[r15d+0x6e]
  43ffb5:	add    al,BYTE PTR [rax]
  43ffb7:	add    BYTE PTR [rax],al
  43ffb9:	or     BYTE PTR [rcx+0x63],cl
  43ffbc:	outs   dx,DWORD PTR ds:[rsi]
  43ffbd:	outs   dx,BYTE PTR ds:[rsi]
  43ffbe:	rex.R (bad) 
  43ffc0:	je     0x440023
  43ffc2:	or     BYTE PTR [rcx+0x63],cl
  43ffc5:	outs   dx,DWORD PTR ds:[rsi]
  43ffc6:	outs   dx,BYTE PTR ds:[rsi]
  43ffc7:	push   rbx
  43ffc8:	imul   edi,DWORD PTR [rdx+0x65],0x13020407
  43ffcf:	push   rbx
  43ffd0:	jns    0x440045
  43ffd2:	je     0x440039
  43ffd4:	ins    DWORD PTR es:[rdi],dx
  43ffd5:	cs rex.R jb 0x44003a
  43ffd9:	ja     0x440044
  43ffdb:	outs   dx,BYTE PTR ds:[rsi]
  43ffdc:	addr32 cs push rbx
  43ffdf:	imul   edi,DWORD PTR [rdx+0x65],0x2
  43ffe6:	add    al,BYTE PTR [rax]
  43ffe8:	add    BYTE PTR [rax],al
  43ffea:	or     DWORD PTR [rbx],eax
  43ffec:	add    BYTE PTR [rax],al
  43ffee:	add    BYTE PTR [rip+0xfffffffffffffffc],al        # 0x43fff0
  43fff4:	adc    edx,DWORD PTR [rbx+0x79]
  43fff7:	jae    0x44006d
  43fff9:	gs ins DWORD PTR es:[rdi],dx
  43fffb:	cs rex.R jb 0x440060
  43ffff:	ja     0x44006a
  440001:	outs   dx,BYTE PTR ds:[rsi]
  440002:	addr32 cs push rbx
  440005:	imul   edi,DWORD PTR [rdx+0x65],0x2
  44000c:	add    eax,0x74646977
  440011:	push   0x69656806
  440016:	addr32 push 0x8000074
  44001c:	or     BYTE PTR [rdx],al
	...
  440026:	add    BYTE PTR [rax],al
  440028:	add    BYTE PTR [rdi],cl
  44002a:	add    eax,DWORD PTR [rax]
  44002c:	add    BYTE PTR [rax],al
  44002e:	sahf   
  44002f:	and    al,0x0
  440031:	add    BYTE PTR [rdx],al
  440033:	add    BYTE PTR [rax],al
  440035:	add    DWORD PTR [rax],eax
  440037:	add    eax,0x10101000
  44003c:	add    BYTE PTR [rcx],al
  44003e:	add    BYTE PTR [rax+rax*1],al
  440041:	sub    BYTE PTR [rcx],al
  440043:	add    BYTE PTR [rax],al
  440045:	push   rsi
  440046:	add    BYTE PTR [rax],al
  440048:	add    BYTE PTR [rax],ah
  44004a:	and    BYTE PTR [rax],al
  44004c:	add    BYTE PTR [rcx],al
  44004e:	add    BYTE PTR [rax],cl
  440050:	add    BYTE PTR [rax+0x7e000008],ch
  440056:	add    DWORD PTR [rax],eax
  440058:	add    BYTE PTR [rax],dl
  44005a:	adc    BYTE PTR [rax],al
  44005c:	add    BYTE PTR [rcx],al
  44005e:	add    BYTE PTR [rax],cl
  440060:	add    BYTE PTR [rax+0x5],ch
  440063:	add    BYTE PTR [rax],al
  440065:	or     al,BYTE PTR es:[rax]
  440068:	add    BYTE PTR [rax],ah
  44006a:	and    BYTE PTR [rax],al
  44006c:	add    BYTE PTR [rcx],al
  44006e:	add    BYTE PTR [rax],ah
  440070:	add    BYTE PTR [rax-0x71fffff0],ch
  440076:	sldt   WORD PTR [rax]
  440079:	adc    BYTE PTR [rax],dl
  44007b:	add    BYTE PTR [rax],al
  44007d:	add    DWORD PTR [rax],eax
  44007f:	and    BYTE PTR [rax],al
  440081:	push   0x36000004
  440086:	and    BYTE PTR [rax],al
  440088:	add    BYTE PTR [rax],ch
  44008a:	add    BYTE PTR [rax],al
  44008c:	add    BYTE PTR [rax],dl
  44008e:	add    BYTE PTR [rax],al
  440090:	add    BYTE PTR [rax],ah
  440092:	add    BYTE PTR [rax],al
  440094:	add    BYTE PTR [rcx],al
  440096:	add    BYTE PTR [rax+rax*1],al
  440099:	add    BYTE PTR [rax],al
  44009b:	add    BYTE PTR [rax],al
  44009d:	add    BYTE PTR [rax],0x0
	...
  4400b4:	add    BYTE PTR [rax],al
  4400b6:	add    BYTE PTR [rax+0x800000],al
  4400bc:	add    BYTE PTR [rax],al
  4400be:	add    BYTE PTR [rax+0x8000],0x0
  4400c5:	add    BYTE PTR [rax],0x80
  4400c8:	add    BYTE PTR [rax-0x7fffff80],al
  4400ce:	add    BYTE PTR [rax-0x3f3f4000],0x0
  4400d5:	add    BYTE PTR [rax],al
  4400d7:	inc    DWORD PTR [rax]
  4400d9:	add    bh,bh
  4400db:	add    BYTE PTR [rax],al
  4400dd:	add    bh,bh
  4400df:	inc    DWORD PTR [rax]
  4400e1:	inc    DWORD PTR [rax]
  4400e3:	add    BYTE PTR [rax],al
  4400e5:	inc    DWORD PTR [rax]
  4400e7:	inc    DWORD PTR [rax]
  4400e9:	(bad)  
  4400ea:	inc    DWORD PTR [rax]
  4400ec:	add    bh,bh
  4400ee:	(bad)  
  4400ef:	inc    DWORD PTR [rax]
  4400f1:	add    BYTE PTR [rax],al
  4400f3:	ja     0x44016c
  4400f5:	ja     0x4400f7
  4400f7:	add    BYTE PTR [rax],al
  4400f9:	add    BYTE PTR [rax],cl
  4400fb:	xchg   DWORD PTR [rdi+0x77],esi
  4400fe:	jo     0x440100
  440100:	add    BYTE PTR [rax],al
  440102:	or     al,bh
  440104:	mov    BYTE PTR [rdx+0x70],cl
  44010a:	or     al,bh
  44010c:	mov    BYTE PTR [rax+0x70],cl
  440112:	or     al,bh
  440114:	mov    BYTE PTR [rax+0x70],cl
  44011a:	or     al,bh
  44011c:	mov    BYTE PTR [rax+0x70],cl
  440122:	or     bh,bh
  440124:	(bad)  
  440125:	push   QWORD PTR [rax+0x0]
  440128:	add    BYTE PTR [rax],al
  44012a:	or     bh,dh
  44012c:	ja     0x4401a5
  44012e:	jo     0x440130
  440130:	add    BYTE PTR [rax],al
  440132:	or     al,bh
  440134:	mov    BYTE PTR [rax+0x2070],cl
  44013a:	or     bh,bh
  44013c:	(bad)  
  44013d:	push   QWORD PTR [rax+0x22]
  440140:	add    BYTE PTR [rax],al
  440142:	or     BYTE PTR [rdi+0x2a227277],al
  440148:	and    BYTE PTR [rax],al
  44014a:	or     al,bh
  44014c:	mov    BYTE PTR [rdx+0xa2aaaa],al
  440152:	or     al,bh
  440154:	mov    BYTE PTR [rdx+0x202a22],al
  44015a:	or     bh,bh
  44015c:	(bad)  
  44015d:	push   QWORD PTR [rax+0x22]
  440160:	add    BYTE PTR [rax],al
  440162:	or     BYTE PTR [rax+0x20008888],cl
	...
  440170:	add    al,dh
  440172:	(bad)  
  440173:	add    BYTE PTR [rax],al
  440175:	loopne 0x440196
  440177:	add    BYTE PTR [rax],al
  440179:	loopne 0x44019a
  44017b:	add    BYTE PTR [rax],al
  44017d:	loopne 0x44019e
  44017f:	add    BYTE PTR [rax],al
  440181:	loopne 0x4401a2
  440183:	add    BYTE PTR [rax],al
  440185:	loopne 0x4401a6
  440187:	add    BYTE PTR [rax],al
  440189:	loopne 0x4401aa
  44018b:	add    BYTE PTR [rax],al
  44018d:	loopne 0x4401ae
  44018f:	add    BYTE PTR [rax],al
  440191:	loopne 0x4401aa
  440193:	add    BYTE PTR [rax],al
  440195:	loopne 0x4401aa
  440197:	add    BYTE PTR [rax],al
  440199:	loopne 0x44019c
  44019b:	add    BYTE PTR [rax],al
  44019d:	loopne 0x44019f
  44019f:	add    BYTE PTR [rax],al
  4401a1:	loopne 0x4401a4
  4401a3:	add    BYTE PTR [rax],al
  4401a5:	loopne 0x4401ba
  4401a7:	add    BYTE PTR [rax],al
  4401a9:	loopne 0x4401e2
  4401ab:	add    BYTE PTR [rax],al
  4401ad:	(bad)  
  4401ae:	inc    DWORD PTR [rax]
  4401b0:	add    BYTE PTR [rax],ch
  4401b2:	add    BYTE PTR [rax],al
  4401b4:	add    BYTE PTR [rax],ah
  4401b6:	add    BYTE PTR [rax],al
  4401b8:	add    BYTE PTR [rax+0x0],al
  4401bb:	add    BYTE PTR [rax],al
  4401bd:	add    DWORD PTR [rax],eax
  4401bf:	or     BYTE PTR [rax],al
  4401c1:	add    BYTE PTR [rax],al
  4401c3:	add    BYTE PTR [rax],al
  4401c5:	add    BYTE PTR [rax+rax*1],al
	...
  4401d0:	add    BYTE PTR [rax],al
  4401d2:	add    DWORD PTR [rax],eax
  4401d4:	add    BYTE PTR [rax],al
  4401d6:	add    DWORD PTR [rax],eax
  4401d8:	add    BYTE PTR [rax],al
  4401da:	add    BYTE PTR [rax],al
  4401dc:	add    BYTE PTR [rax],bl
  4401de:	jo     0x4401fd
  4401e0:	add    BYTE PTR [rdx],bl
  4401e2:	jge    0x440203
  4401e4:	add    BYTE PTR [rdx],bl
  4401e6:	jb     0x440208
  4401e8:	add    BYTE PTR [rsi],bl
  4401ea:	jle    0x44020d
  4401ec:	add    BYTE PTR [rdx],ah
  4401ee:	jnp    0x440217
  4401f0:	add    BYTE PTR [rdx+0x66],bh
  4401f3:	push   rsi
  4401f4:	add    BYTE PTR [rbx+0x68],dh
  4401f7:	pop    rdi
  4401f8:	add    BYTE PTR [rbp+0x69],bh
  4401fb:	pop    rcx
  4401fc:	add    BYTE PTR [rcx-0x7cffa193],al
  440202:	outs   dx,DWORD PTR ds:[rsi]
  440203:	(bad)  
  440204:	add    BYTE PTR [rbx-0x7aff9d90],al
  44020a:	jb     0x44026f
  44020c:	add    BYTE PTR [rbp-0x7fff9a8d],al
  440212:	jbe    0x440282
  440214:	add    BYTE PTR [rax+rdi*2+0x7985006f],al
  44021b:	jo     0x44021d
  44021d:	test   BYTE PTR [rbx+rsi*2+0x0],bh
  440221:	xchg   DWORD PTR [rsp+rsi*2+0x0],edi
  440225:	mov    DWORD PTR [rsi+0x76],edi
  440228:	add    BYTE PTR [rdx+0x1f00787f],cl
  44022e:	and    BYTE PTR [rax+rax*1],0x1f
  440232:	mov    DWORD PTR [rax+rax*1],esp
  440235:	and    eax,DWORD PTR [rax-0x51d6ffd6]
  44023b:	xor    BYTE PTR [rax],al
  44023d:	xor    al,0xae
  44023f:	(bad)  
  440240:	add    BYTE PTR [rcx],dh
  440242:	mov    cl,0x39
  440244:	add    BYTE PTR [rax-0x44],al
  440247:	adc    al,BYTE PTR [rax]
  440249:	sbb    al,0xe4
  44024b:	add    BYTE PTR [rax],al
  44024d:	jge    0x440201
  44024f:	push   rcx
  440250:	add    BYTE PTR [rsi-0x3f],al
  440253:	rex.WRXB add BYTE PTR [r13-0x3b],r8b
  440257:	push   rax
  440258:	add    BYTE PTR [rdx-0x27],cl
  44025b:	push   rdx
  44025c:	add    BYTE PTR [rbx-0x36],dh
  44025f:	add    BYTE PTR [r8-0x3f],r11b
  440263:	(bad)  
  440264:	add    BYTE PTR [rax-0x35],bl
  440267:	(bad)  
  440268:	add    BYTE PTR [rsi-0x37],bl
  44026b:	data16 add BYTE PTR [rdi-0x3a],bl
  44026f:	imul   eax,DWORD PTR [rax],0x68cb61
  440275:	pop    rcx
  440276:	loope  0x4402db
  440278:	add    BYTE PTR [rbp-0x1f],dh
  44027b:	jg     0x44027d
  44027d:	mov    al,BYTE PTR [rcx-0x7e73ff88]
  440283:	jns    0x440285
  440285:	lea    eax,[rbx+rdi*2+0x7d858e00]
  44028c:	add    BYTE PTR [rax-0x62ff8079],dl
  440292:	mov    BYTE PTR [rbx+0x0],bh
  440295:	stos   BYTE PTR es:[rdi],al
  440296:	sar    BYTE PTR [rdi+0x0],cl
  440299:	xchg   edi,eax
  44029a:	in     eax,0x78
  44029c:	add    BYTE PTR [rdx+riz*8-0x80],dh
  4402a0:	add    BYTE PTR [rdi-0x6eff7d77],cl
  4402a6:	mov    DWORD PTR [rcx-0x7c756c00],eax
  4402ac:	add    BYTE PTR [rbx-0x6aff7b76],dl
  4402b2:	mov    WORD PTR [rsi-0x7e716300],es
  4402b8:	add    BYTE PTR [rdi-0x66ff7771],dl
  4402be:	nop
  4402bf:	mov    al,BYTE PTR [rax]
  4402c1:	cdq    
  4402c2:	xchg   ebx,eax
  4402c3:	mov    es,WORD PTR [rax]
  4402c5:	popf   
  4402c6:	xchg   esi,eax
  4402c7:	nop
  4402c8:	add    BYTE PTR [rdi-0x5dff6b68],bl
  4402ce:	xchg   edx,eax
  4402cf:	xchg   DWORD PTR [rax],eax
  4402d1:	scas   eax,DWORD PTR es:[rdi]
  4402d2:	xchg   edx,eax
  4402d3:	(bad)  
  4402d4:	add    BYTE PTR [rsi-0x52ff7268],ah
  4402da:	(bad)  
  4402db:	lea    eax,[rax]
  4402dd:	mov    dl,0x97
  4402df:	xchg   DWORD PTR [rax],eax
  4402e1:	mov    dl,0x98
  4402e3:	mov    BYTE PTR [rax],al
  4402e5:	mov    ah,0x9a
  4402e7:	mov    al,BYTE PTR [rax]
  4402e9:	mov    ch,0x9b
  4402eb:	mov    WORD PTR [rax],es
  4402ed:	mov    dh,0x9c
  4402ef:	lea    eax,[rax]
  4402f1:	movabs eax,ds:0xac00979ca200959a
  4402fa:	pushf  
  4402fb:	nop
  4402fc:	add    BYTE PTR [rdi+rbx*4-0x5f59ff65],ah
  440303:	fwait
  440304:	add    BYTE PTR [rsi-0x50ff635f],ah
  44030a:	movabs ds:0xa5a9009fa3a8009a,eax
  440313:	lahf   
  440314:	add    BYTE PTR [rdi-0x49ff695c],bh
  44031a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  44031b:	cdq    
  44031c:	add    BYTE PTR [rax-0x41ff6258],bh
  440322:	test   eax,0xa6aa009c
  440327:	movabs eax,ds:0xa6aeb600a5a8ad00
  440330:	add    BYTE PTR [rbx-0x42ff5e54],bh
  440336:	lods   al,BYTE PTR ds:[rsi]
  440337:	movabs eax,ds:0xa8afb800a5afbd00
  440340:	add    BYTE PTR [rdi-0x46ff584f],bh
  440346:	mov    cl,0xaa
  440348:	add    BYTE PTR [rdx-0x43ff534d],bh
  44034e:	mov    bl,0xac
  440350:	add    BYTE PTR [rbp+rsi*4-0x4740ff52],bh
  440357:	mov    cl,0x0
  440359:	ret    
  44035a:	movabs eax,ds:0xb3c00095a5c70090
  440363:	test   eax,0xb2b8c000
  440368:	add    dh,al
  44036a:	mov    ecx,0xbac000b1
  44036f:	mov    ah,0x0
  440371:	sar    DWORD PTR [rbp+rsi*4-0x49423c00],0x0
  440379:	retf   0xb0ba
  44037c:	add    BYTE PTR [rax-0x76ff6e22],cl
  440382:	loope  0x440314
  440384:	add    dl,dl
  440386:	fld    TBYTE PTR [rax+rax*1+0xbbc1c6]
  44038d:	retf   
  44038e:	ret    0xbc
  440391:	leave  
  440392:	(bad)  
  440393:	mov    esi,0xbec5cf00
  440398:	add    bl,dl
  44039a:	ret    0xb9
  44039d:	fcmovnb st,st(3)
  44039f:	mov    eax,0xb6d7df00
  4403a4:	add    bl,ah
  4403a6:	(bad)
  4403a9:	in     eax,0xc9
  4403ab:	mov    edx,0xbdcbe600
  4403b0:	add    dh,ah
  4403b2:	int3   
  4403b3:	mov    edi,0xc3c8ce00
  4403b8:	add    cl,dl
  4403ba:	enter  0xc2,0xd0
  4403be:	retf   
  4403bf:	mov    BYTE PTR [rax],0xd5
  4403c2:	retf   
  4403c3:	(bad)  
  4403c4:	add    ch,dl
  4403c6:	int3   
  4403c7:	mov    BYTE PTR [rax],0xd8
  4403ca:	iret   
  4403cb:	retf   0xd900
  4403ce:	ror    ebp,1
  4403d0:	add    dl,bl
  4403d2:	(bad)  
  4403d3:	rol    BYTE PTR [rax],1
  4403d5:	(bad)  
  4403d7:	rol    BYTE PTR [rax],cl
  4403d9:	fcompp 
  4403db:	(bad)  
  4403dc:	add    dh,ah
  4403de:	int    0xc1
  4403e0:	add    al,ch
  4403e2:	iret   
  4403e3:	ret    
  4403e4:	add    dh,ah
  4403e6:	fcmovnb st,st(0)
  4403e8:	add    bl,ch
  4403ea:	(bad)  
  4403eb:	enter  0xea00,0xd7
  4403ef:	(bad)  
  4403f0:	add    al,dh
  4403f2:	rol    ch,cl
  4403f4:	add    al,dh
  4403f6:	(bad)  
  4403f7:	mov    BYTE PTR [rax],0xf1
  4403fa:	(bad)  
  4403fb:	enter  0xf300,0xd8
  4403ff:	retf   
  440400:	add    ah,dh
  440402:	fxch   st(5)
  440404:	add    cl,ah
  440406:	fcmovbe st,st(6)
  440408:	add    ah,ah
  44040a:	fcmovbe st,st(4)
  44040c:	add    ch,ah
  44040e:	fst    st(6)
  440410:	add    dl,ch
  440412:	(bad)  
  440414:	add    al,ah
  440416:	fcmovnu st,st(0)
  440418:	add    cl,ah
  44041a:	fstp   st(1)
  44041c:	add    ch,ah
  44041e:	fcompp 
  440420:	add    bl,ah
  440422:	(bad)  
  440424:	add    ah,ah
  440426:	(bad)  
  440428:	add    ah,dh
  44042a:	fcmovnbe st,st(0)
  44042c:	add    ah,dh
  44042e:	(bad)  
  440430:	add    ch,dh
  440432:	(bad)  
  440434:	add    bl,ah
  440436:	loopne 0x440414
  440438:	add    ch,ah
  44043a:	loope  0x440419
  44043c:	add    al,ch
  44043e:	loope  0x44041d
  440440:	add    ch,dh
  440442:	loopne 0x44041a
  440444:	add    dh,dh
  440446:	loop   0x440421
  440448:	add    bh,dh
  44044a:	in     al,0xdb
  44044c:	add    al,dh
  44044e:	in     al,0xde
  440450:	add    bh,dh
  440452:	in     al,0xdc
  440454:	add    al,bh
  440456:	out    0xde,al
  440458:	add    bh,ah
  44045a:	jrcxz  0x44043c
  44045c:	add    al,ch
  44045e:	in     eax,0xe2
  440460:	add    dl,ch
  440462:	out    0xe4,eax
  440464:	add    bl,ch
  440466:	jmp    0xffffffffe9300551
  44046b:	out    0x0,al
  44046d:	in     al,dx
  44046e:	(bad)  
  44046f:	call   0xffffffffeb30f274
  440474:	add    bh,ch
  440476:	in     eax,dx
  440477:	in     al,dx
  440478:	add    al,bh
  44047a:	out    0xe0,eax
  44047c:	add    dh,dh
  44047e:	jmp    0xffffffffeb360566
  440483:	in     eax,0x0
  440485:	clc    
  440486:	jmp    0xffffffffec3d056d
  44048b:	in     al,0x0
  44048d:	stc    
  44048e:	in     al,dx
  44048f:	out    0x0,al
  440491:	repz in al,dx
  440493:	call   0xffffffffeb31f898
  440498:	add    ch,dh
  44049a:	out    dx,al
  44049b:	in     al,dx
  44049c:	add    dl,bh
  44049e:	out    dx,al
  44049f:	jmp    0xffffffffef34faa4
  4404a4:	add    bl,bh
  4404a6:	lock jmp 0x4404a9
  4404a9:	sti    
  4404aa:	icebp  
  4404ab:	in     eax,dx
  4404ac:	add    ah,bh
  4404ae:	repnz out dx,al
  4404b0:	add    ah,bh
  4404b2:	hlt    
  4404b3:	out    dx,eax
  4404b4:	add    bl,bh
  4404b6:	repz lock add ah,bh
  4404ba:	repz lock add dl,bh
  4404be:	hlt    
  4404bf:	icebp  
  4404c0:	add    ah,bh
  4404c2:	hlt    
  4404c3:	icebp  
  4404c4:	add    cl,bh
  4404c6:	div    ebp
  4404c8:	add    ah,bh
  4404ca:	div    esp
  4404cc:	add    cl,bh
  4404ce:	clc    
  4404cf:	test   DWORD PTR [rax],0xf6f8fc
  4404d5:	cli    
  4404d6:	stc    
  4404d7:	stc    
  4404d8:	add    ch,bh
  4404da:	cli    
  4404db:	clc    
  4404dc:	add    dh,bh
  4404de:	cld    
  4404df:	cli    
  4404e0:	add    dh,bh
  4404e2:	std    
  4404e3:	cld    
	...
  4405fc:	add    BYTE PTR [rax],al
  4405fe:	add    BYTE PTR [rbx],dl
  440600:	or     eax,0x9090d0d
  440605:	or     DWORD PTR [rax],ecx
  440607:	or     BYTE PTR [rax],cl
  440609:	(bad)  
  44060a:	(bad)  
  44060b:	(bad)  
  44060c:	(bad)  
  44060d:	sldt   WORD PTR [rax]
	...
  44061c:	add    BYTE PTR [rax],al
  44061e:	add    BYTE PTR [rbx],dl
  440620:	jg     0x440693
  440622:	(bad)  
  440623:	(bad)  
  440624:	(bad)  
  440625:	(bad)  
  440626:	(bad)  
  440627:	(bad)  
  440628:	(bad)  
  440629:	(bad)  
  44062a:	(bad)  
  44062b:	(bad)  
  44062c:	sldt   WORD PTR ds:[rax]
	...
  44063c:	add    BYTE PTR [rax],al
  44063e:	add    BYTE PTR [rdx],ch
  440640:	mov    ebx,DWORD PTR [rdx-0x79777778]
  440646:	xchg   BYTE PTR [rsi+0x73868686],al
  44064c:	adc    BYTE PTR ds:[rax],al
	...
  44065f:	sub    cl,BYTE PTR [rbx-0x75767565]
  440665:	mov    cl,BYTE PTR [rdx+0x1d1b2f89]
  44066b:	jae    0x4406af
  44066d:	adc    BYTE PTR [rax],al
	...
  44067f:	sub    dl,BYTE PTR [rax-0x75757565]
  440685:	mov    cl,BYTE PTR [rdx+0x211c308a]
  44068b:	je     0x4406cf
  44068d:	adc    BYTE PTR [rax],al
	...
  44069f:	sub    dl,BYTE PTR [rdi-0x75696965]
  4406a5:	xchg   esi,eax
  4406a6:	mov    cl,BYTE PTR [rdx+0x74726b83]
  4406ac:	rex.X adc eax,DWORD PTR [rax]
	...
  4406bf:	xor    edx,DWORD PTR [rax-0x69696958]
  4406c5:	mov    dl,BYTE PTR [rsi-0x75757576]
  4406cb:	je     0x44070f
  4406cd:	adc    eax,DWORD PTR [rax]
	...
  4406df:	xor    edx,DWORD PTR [rax-0x65696961]
  4406e5:	xchg   esi,eax
  4406e6:	mov    dl,BYTE PTR [rsi-0x7e756976]
  4406ec:	rex.X adc eax,DWORD PTR [rax]
	...
  4406ff:	xor    edx,DWORD PTR [rax-0x65656555]
  440705:	(bad)  
  440706:	(bad)  
  440707:	xchg   esi,eax
  440708:	xchg   esi,eax
  440709:	mov    dl,BYTE PTR [rsi+0x2a4274]
	...
  44071f:	xor    esp,DWORD PTR [rax-0x64656055]
  440725:	fwait
  440726:	fwait
  440727:	xchg   esi,eax
  440728:	xchg   esi,eax
  440729:	xchg   esi,eax
  44072a:	xchg   esi,eax
  44072b:	(bad)  
  44072c:	rex.X sub al,BYTE PTR [rax]
	...
  44073f:	cmp    BYTE PTR [rax-0x64606055],dl
  440745:	fwait
  440746:	fwait
  440747:	xchg   esi,eax
  440748:	xchg   esi,eax
  440749:	xchg   esi,eax
  44074a:	xchg   esi,eax
  44074b:	(bad)  
  44074c:	sub    r8b,BYTE PTR [r8]
	...
  44075f:	cmp    BYTE PTR [rax-0x60646055],ah
  440765:	fwait
  440766:	fwait
  440767:	fwait
  440768:	fwait
  440769:	(bad)  
  44076a:	xchg   esi,eax
  44076b:	(bad)  
  44076c:	rex.X sub al,BYTE PTR [rax]
	...
  44077f:	cmp    DWORD PTR [rdi-0x6460604d],edx
  440785:	lahf   
  440786:	lahf   
  440787:	fwait
  440788:	fwait
  440789:	fwait
  44078a:	fwait
  44078b:	(bad)  
  44078c:	xor    r8d,DWORD PTR [r8]
	...
  44079f:	adc    BYTE PTR [rax-0x5454544d],ah
  4407a5:	stos   DWORD PTR es:[rdi],eax
  4407a6:	lahf   
  4407a7:	lahf   
  4407a8:	lahf   
  4407a9:	fwait
  4407aa:	lahf   
  4407ab:	xchg   BYTE PTR [rcx+0x7],ah
	...
  4407be:	add    BYTE PTR [rbx],bh
  4407c0:	movabs al,ds:0xb3b3b3b3b7b7b7be
  4407c9:	mov    bl,0xab
  4407cb:	stos   BYTE PTR es:[rdi],al
  4407cc:	jo     0x440800
	...
  4407de:	add    BYTE PTR [rbx],bh
  4407e0:	xchg   edi,eax
  4407e1:	mov    dl,0xb0
  4407e3:	mov    dl,0xb2
  4407e5:	mov    dl,0xb2
  4407e7:	stos   BYTE PTR es:[rdi],al
  4407e8:	stos   BYTE PTR es:[rdi],al
  4407e9:	stos   BYTE PTR es:[rdi],al
  4407ea:	mov    al,0xaa
  4407ec:	jp     0x440821
	...
  4407fe:	add    BYTE PTR [rsi+0x77],al
  440801:	jge    0x44087d
  440803:	jp     0x44087f
  440805:	ins    DWORD PTR es:[rdi],dx
  440806:	fs (bad) 
  440808:	pop    rdx
  440809:	push   rsi
  44080a:	push   rcx
  44080b:	push   rax
  44080c:	xor    rax,QWORD PTR [rax]
	...
  44081f:	rex.RX jp 0x4408a1
  440822:	jl     0x44089e
  440824:	jp     0x440893
  440826:	fs pop rdx
  440828:	push   rsi
  440829:	push   rcx
  44082a:	push   rax
  44082b:	rex
  44082c:	cmp    BYTE PTR cs:[rax],al
	...
  44083f:	rex.RX movabs al,ds:0xababb3b3b3b3b7b7
  440849:	stos   DWORD PTR es:[rdi],eax
  44084a:	stos   DWORD PTR es:[rdi],eax
  44084b:	test   DWORD PTR [rcx+0x38],edx
	...
  44085e:	add    BYTE PTR [rdx],dh
  440860:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  440861:	mov    esi,0xb7b7b7b7
  440866:	mov    bl,0xb3
  440868:	mov    bl,0xab
  44086a:	stos   DWORD PTR es:[rdi],eax
  44086b:	mov    ss,WORD PTR [rdi+0xf]
	...
  44087e:	add    BYTE PTR [rbx-0x5d],cl
  440881:	sar    BYTE PTR [rsi-0x41414140],0xb3
  440888:	mov    bh,0xb7
  44088a:	mov    bl,0x9d
  44088c:	push   0x3000039
	...
  44089d:	add    BYTE PTR [rax],al
  44089f:	rex.WXB xchg r8,rax
  4408a1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4408a2:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4408a3:	movabs ds:0x7f7f8f8f9097a3a0,eax
  4408ac:	ins    DWORD PTR es:[rdi],dx
  4408ad:	cmp    eax,DWORD PTR [rax]
  4408af:	add    BYTE PTR [rdx],al
  4408b1:	add    al,0x0
	...
  4408bf:	rex.WRB ins BYTE PTR es:[rdi],dx
  4408c1:	ins    DWORD PTR es:[rdi],dx
  4408c2:	ins    BYTE PTR es:[rdi],dx
  4408c3:	fs fs pop rsp
  4408c6:	rex.WRB
  4408c7:	rex cmp eax,0x5050537
  4408cd:	add    eax,0x19160401
  4408d2:	adc    eax,0x0
	...
  4408df:	rex.WRB xchg r8,rax
  4408e1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4408e2:	movabs ds:0x58b8b9099a0a2a6,eax
  4408eb:	sbb    DWORD PTR [rcx],ebx
  4408ed:	sbb    DWORD PTR [rcx],ebx
  4408ef:	sbb    DWORD PTR [rcx],ebx
  4408f1:	and    BYTE PTR [rsi],bl
  4408f3:	(bad)  
	...
  4408fc:	add    BYTE PTR [rax],al
  4408fe:	add    BYTE PTR [rbx-0x5a],dl
  440901:	rol    al,0xc0
  440904:	rol    al,0xb7
  440907:	mov    bh,0xb3
  440909:	mov    bl,0x5
  44090b:	and    eax,0x25252525
  440910:	and    eax,0x226a2827
	...
  44091d:	add    BYTE PTR [rax],al
  44091f:	cmp    DWORD PTR [rsi-0x3f3f3f40],esp
  440925:	sar    BYTE PTR [rsi+0x5b3b3b7],0x69
  44092c:	imul   ebp,DWORD PTR [rcx+0x69],0x6a316969
  440933:	add    BYTE PTR es:[rax],al
	...
  44093e:	add    BYTE PTR [rsi+riz*4-0x40],dl
  440942:	rol    al,0xc0
  440945:	sar    BYTE PTR [rsi+0x5b3b7b7],0x23
  44094c:	and    esp,DWORD PTR [rbx]
  44094e:	(bad)  
  44094f:	and    ebx,DWORD PTR [rax]
  440951:	imul   esp,DWORD PTR [rbx],0x0
	...
  44095f:	push   rsp
  440960:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  440961:	rol    al,0xc0
  440964:	rol    al,0xc0
  440967:	rol    al,0xbe
  44096a:	mov    esi,0x4990b7
  44096f:	add    BYTE PTR [rdx],bl
  440971:	add    BYTE PTR es:[rax],al
	...
  44097c:	add    BYTE PTR [rax],al
  44097e:	add    BYTE PTR [rsi+riz*2+0x66],dl
  440982:	data16 gs gs pop sp
  440987:	pop    rsp
  440988:	pop    rbx
  440989:	pop    rbx
  44098a:	pop    rcx
  44098b:	pop    rbx
  44098c:	push   rbp
  44098d:	rex.WXB add BYTE PTR [r8],al
  440990:	and    eax,DWORD PTR [rax]
	...
  4409d6:	add    BYTE PTR [rax],al
  4409d8:	add    bh,bh
  4409da:	(bad)  
  4409db:	(bad)  
  4409dc:	(bad)  
  4409dd:	cld    
  4409de:	add    BYTE PTR [rdi],al
  4409e0:	(bad)  
  4409e1:	cld    
  4409e2:	add    BYTE PTR [rdi],al
  4409e4:	(bad)  
  4409e5:	cld    
  4409e6:	add    BYTE PTR [rdi],al
  4409e8:	(bad)  
  4409e9:	cld    
  4409ea:	add    BYTE PTR [rdi],al
  4409ec:	(bad)  
  4409ed:	cld    
  4409ee:	add    BYTE PTR [rdi],al
  4409f0:	(bad)  
  4409f1:	cld    
  4409f2:	add    BYTE PTR [rdi],al
  4409f4:	(bad)  
  4409f5:	cld    
  4409f6:	add    BYTE PTR [rdi],al
  4409f8:	(bad)  
  4409f9:	cld    
  4409fa:	add    BYTE PTR [rdi],al
  4409fc:	(bad)  
  4409fd:	cld    
  4409fe:	add    BYTE PTR [rdi],al
  440a00:	(bad)  
  440a01:	cld    
  440a02:	add    BYTE PTR [rdi],al
  440a04:	(bad)  
  440a05:	cld    
  440a06:	add    BYTE PTR [rdi],al
  440a08:	(bad)  
  440a09:	cld    
  440a0a:	add    BYTE PTR [rdi],al
  440a0c:	(bad)  
  440a0d:	cld    
  440a0e:	add    BYTE PTR [rdi],al
  440a10:	(bad)  
  440a11:	cld    
  440a12:	add    BYTE PTR [rdi],al
  440a14:	(bad)  
  440a15:	cld    
  440a16:	add    BYTE PTR [rdi],al
  440a18:	(bad)  
  440a19:	cld    
  440a1a:	add    BYTE PTR [rdi],al
  440a1c:	(bad)  
  440a1d:	cld    
  440a1e:	add    BYTE PTR [rdi],al
  440a20:	(bad)  
  440a21:	cld    
  440a22:	add    BYTE PTR [rdi],al
  440a24:	(bad)  
  440a25:	cld    
  440a26:	add    BYTE PTR [rdi],al
  440a28:	(bad)  
  440a29:	cld    
  440a2a:	add    BYTE PTR [rdi],al
  440a2c:	(bad)  
  440a2d:	cld    
  440a2e:	add    BYTE PTR [rsi],al
  440a30:	(bad)  
  440a31:	cld    
  440a32:	add    BYTE PTR [rsi],al
  440a34:	jg     0x440a32
  440a36:	add    BYTE PTR [rax],al
  440a38:	(bad)  
  440a39:	cld    
  440a3a:	add    BYTE PTR [rax],al
  440a3c:	(bad)  
  440a3d:	cld    
  440a3e:	add    BYTE PTR [rax],al
  440a40:	paddb  mm0,QWORD PTR [rax]
  440a43:	add    BYTE PTR [rdi],bl
  440a45:	cld    
  440a46:	add    BYTE PTR [rax],al
  440a48:	(bad)  
  440a49:	cld    
  440a4a:	add    BYTE PTR [rsi],al
  440a4c:	jg     0x440a4a
  440a4e:	add    BYTE PTR [rsi],al
  440a50:	(bad)  
  440a51:	(bad)  
  440a52:	(bad)  
  440a53:	(bad)  
  440a54:	(bad)  
  440a55:	(bad)  
  440a56:	(bad)  
  440a57:	(bad)  
  440a58:	jmp    FWORD PTR [rax]
  440a5a:	add    BYTE PTR [rax],al
  440a5c:	add    BYTE PTR [rax],dl
  440a5e:	add    BYTE PTR [rax],al
  440a60:	add    BYTE PTR [rax],ah
  440a62:	add    BYTE PTR [rax],al
  440a64:	add    BYTE PTR [rcx],al
  440a66:	add    BYTE PTR [rax],cl
  440a68:	add    BYTE PTR [rax],al
  440a6a:	add    BYTE PTR [rax],al
  440a6c:	add    BYTE PTR [rax],al
  440a6e:	add    DWORD PTR [rax],eax
	...
  440a78:	add    BYTE PTR [rax],al
  440a7a:	add    DWORD PTR [rax],eax
  440a7c:	add    BYTE PTR [rax],al
  440a7e:	add    DWORD PTR [rax],eax
  440a80:	add    BYTE PTR [rdx],ah
  440a82:	(bad)  
  440a83:	sub    BYTE PTR [rax],al
  440a85:	sub    ebx,DWORD PTR [rcx+0x35]
  440a88:	add    BYTE PTR [rax],bh
  440a8a:	rex.WR cmp r8b,BYTE PTR [rax]
  440a8d:	imul   edx,DWORD PTR [rdx+0x40],0x0
  440a91:	jo     0x440aed
  440a93:	rex.W add BYTE PTR [rsi+0x5d],sil
  440a97:	rex.WB add BYTE PTR [r8+0x6a],al
  440a9b:	rex.WB add BYTE PTR [r11+0x5c],sil
  440a9f:	rex.WXB add BYTE PTR [r11+0x62],dil
  440aa3:	rex.WRXB add BYTE PTR [r10+0x64],r15b
  440aa7:	push   rbx
  440aa8:	add    BYTE PTR [rcx-0x79ffa998],al
  440aae:	outs   dx,BYTE PTR ds:[rsi]
  440aaf:	pop    rbx
  440ab0:	add    BYTE PTR [rcx-0x3b],dh
  440ab3:	pop    rbp
  440ab4:	add    BYTE PTR [rbx-0x7f],dl
  440ab7:	(bad)  
  440ab8:	add    BYTE PTR [rax-0x73ff9d8f],cl
  440abe:	je     0x440b22
  440ac0:	add    BYTE PTR [rcx+0x50006779],dl
  440ac6:	test   eax,0x865b0067
  440acb:	push   0x697a9100
  440ad0:	add    BYTE PTR [rsp+rdi*2+0x7f96006e],dl
  440ad7:	outs   dx,BYTE PTR ds:[rsi]
  440ad8:	add    BYTE PTR [rdi-0x47],dl
  440adb:	jo     0x440add
  440add:	xchg   esp,eax
  440ade:	xor    BYTE PTR [rbx+0x0],0x9b
  440ae2:	test   BYTE PTR [rbx+0x0],dh
  440ae5:	addr32 xchg ebp,eax
  440ae7:	jne    0x440ae9
  440ae9:	movabs al,ds:0x9f007a966d007989
  440af2:	mov    BYTE PTR [rsi+0x0],bh
  440af5:	movabs al,ds:0xa7007f8c9e007f89
  440afe:	xchg   ecx,eax
  440aff:	add    DWORD PTR [rax],0x81c966
  440b05:	je     0x440aa7
  440b07:	(bad)  
  440b08:	add    BYTE PTR [rbx-0x5bff7c72],ah
  440b0e:	pop    QWORD PTR [rbp-0x776d5a00]
  440b14:	add    BYTE PTR [rdi+0x7c008994],ah
  440b1a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  440b1b:	mov    al,BYTE PTR [rax]
  440b1d:	test   eax,0x71008b97
  440b22:	ror    DWORD PTR [rbp-0x70655500],cl
  440b28:	add    BYTE PTR [rbp+0x7400919b],ch
  440b2e:	rcl    DWORD PTR [rcx-0x6d5f4b00],cl
  440b34:	add    BYTE PTR [rdi-0x37ff6c5e],dh
  440b3a:	lods   al,BYTE PTR ds:[rsi]
  440b3b:	xchg   ebp,eax
  440b3c:	add    BYTE PTR [rax-0x4eff6961],dh
  440b42:	movabs al,ds:0xadcf0098b1cc0097
  440b4b:	fwait
  440b4c:	add    BYTE PTR [rbp-0x2fff635b],dh
  440b52:	lods   eax,DWORD PTR ds:[rsi]
  440b53:	pushf  
  440b54:	add    bh,cl
  440b56:	scas   al,BYTE PTR es:[rdi]
  440b57:	popf   
  440b58:	add    BYTE PTR [rcx-0x3dff6156],bh
  440b5e:	scas   al,BYTE PTR es:[rdi]
  440b5f:	movabs eax,ds:0xa4adbc00a3acba00
  440b68:	add    BYTE PTR [rax-0x40ff5a54],bh
  440b6e:	mov    cl,0xa5
  440b70:	add    BYTE PTR [rax-0x46ff5954],bh
  440b76:	lods   eax,DWORD PTR ds:[rsi]
  440b77:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  440b78:	add    dl,bl
  440b7a:	mov    ecx,0xbad900a7
  440b7f:	stos   BYTE PTR es:[rdi],al
  440b80:	add    BYTE PTR [rbx-0x3fff544f],bh
  440b86:	mov    ah,0xac
  440b88:	add    cl,al
  440b8a:	mov    ah,0xac
  440b8c:	add    dh,al
  440b8e:	mov    bh,0xac
  440b90:	add    BYTE PTR [rsi-0x32ff5213],cl
  440b96:	mov    ecx,0xbccc00ae
  440b9b:	mov    al,0x0
  440b9d:	(bad)
  440ba0:	add    cl,al
  440ba2:	mov    ecx,0xbac600b3
  440ba7:	mov    bl,0x0
  440ba9:	rol    edx,cl
  440bab:	mov    bh,0x0
  440bad:	retf   0xbac1
  440bb0:	add    ch,dl
  440bb2:	(bad)  
  440bb3:	mov    edx,0xbbbfc600
  440bb8:	add    ch,cl
  440bba:	(bad)  
  440bbb:	mov    esi,0xbfcce500
  440bc0:	add    al,ch
  440bc2:	int3   
  440bc3:	rol    BYTE PTR [rax],0xce
  440bc6:	enter  0xc1,0xe8
  440bca:	int    0xc1
  440bcc:	add    BYTE PTR [rax-0x2fff3e01],ah
  440bd2:	mov    ebx,0xc5caf500
  440bd8:	add    cl,dl
  440bda:	retf   0xc6
  440bdd:	ror    dl,cl
  440bdf:	mov    BYTE PTR [rax],0xdd
  440be2:	rol    bh,1
  440be4:	add    al,ch
  440be6:	rol    edi,cl
  440be8:	add    dh,dh
  440bea:	xlat   BYTE PTR ds:[rbx]
  440beb:	leave  
  440bec:	add    dl,dh
  440bee:	fmul   st,st(2)
  440bf0:	add    ah,dl
  440bf2:	(bad)  
  440bf3:	retf   
  440bf4:	add    dh,dh
  440bf6:	fxch   st(3)
  440bf8:	add    bl,dh
  440bfa:	fmul   st,st(4)
  440bfc:	add    ah,dh
  440bfe:	fxch   st(4)
  440c00:	add    bh,dh
  440c02:	fcmove st,st(5)
  440c04:	add    bl,dh
  440c06:	fcmove st,st(6)
  440c08:	add    bh,dl
  440c0a:	ror    bh,cl
  440c0c:	add    bh,bh
  440c0e:	fmul   st,st(7)
  440c10:	add    dh,dl
  440c12:	rcl    eax,cl
  440c14:	add    dl,ah
  440c16:	fcom   st(0)
  440c18:	add    bl,ch
  440c1a:	fnop   
  440c1c:	add    ah,dh
  440c1e:	(bad)  
  440c20:	add    ah,dh
  440c22:	(bad)  
  440c24:	add    bl,bl
  440c26:	xlat   BYTE PTR ds:[rbx]
  440c27:	rol    BYTE PTR [rax],cl
  440c29:	(bad)  
  440c2a:	(bad)  
  440c2c:	add    ah,dh
  440c2e:	(bad)  
  440c30:	add    ch,dh
  440c32:	fst    st(2)
  440c34:	add    bh,dh
  440c36:	fst    st(2)
  440c38:	add    ch,dh
  440c3a:	(bad)  
  440c3c:	add    al,bh
  440c3e:	loopne 0x440c14
  440c40:	add    ch,dh
  440c42:	(bad)  
  440c44:	add    dh,dh
  440c46:	loopne 0x440c1d
  440c48:	add    al,bh
  440c4a:	loop   0x440c23
  440c4c:	add    ch,ch
  440c4e:	loopne 0x440c2a
  440c50:	add    ch,ch
  440c52:	loop   0x440c30
  440c54:	add    al,bh
  440c56:	out    0xde,al
  440c58:	add    bl,ch
  440c5a:	in     eax,0xe0
  440c5c:	add    dh,ch
  440c5e:	call   0xffffffffeb330d47
  440c63:	out    0x0,eax
  440c65:	imul   ah
  440c67:	out    0x0,eax
  440c69:	cld    
  440c6a:	out    dx,al
  440c6b:	out    0x0,eax
  440c6d:	stc    
  440c6e:	out    dx,eax
  440c6f:	out    0x0,eax
  440c71:	icebp  
  440c72:	in     eax,dx
  440c73:	jmp    0x440c75
  440c75:	(bad)  
  440c76:	repnz in eax,dx
  440c78:	add    bl,dh
  440c7a:	lock out dx,al
  440c7c:	add    dh,dh
  440c7e:	repz lock add bh,dh
  440c82:	hlt    
  440c83:	icebp  
  440c84:	add    ah,bh
  440c86:	div    dl
  440c88:	add    bh,bh
  440c8a:	div    ebx
  440c8c:	add    bh,dh
  440c8e:	cmc    
  440c8f:	hlt    
  440c90:	add    bh,bh
  440c92:	clc    
  440c93:	hlt    
  440c94:	add    bh,bh
  440c96:	cli    
  440c97:	cmc    
  440c98:	add    ah,bh
  440c9a:	sti    
  440c9b:	cli    
  440c9c:	add    BYTE PTR [rax],al
  440c9e:	add    BYTE PTR [rax],al
  440ca0:	add    bh,bh
  440ca2:	(bad)  
  440ca3:	inc    DWORD PTR [rax]
	...
  440e81:	xchg   DWORD PTR [rdi+0xe178787],eax
  440e87:	or     DWORD PTR [rdi+rax*1],eax
  440e8a:	add    eax,DWORD PTR [rdi-0x78787879]
  440e90:	xchg   DWORD PTR [rdi+0x511c8787],eax
  440e96:	xor    dh,BYTE PTR [rip+0x5312e34]        # 0x5753cd0
  440e9c:	xchg   DWORD PTR [rdi-0x78787879],eax
  440ea2:	xchg   DWORD PTR [rdi+0x5d5a8822],eax
  440ea8:	movsxd ebp,DWORD PTR [rdx+0xc]
  440eab:	or     BYTE PTR [rdi-0x78787879],al
  440eb1:	xchg   DWORD PTR [rdi+0x5e882487],eax
  440eb7:	pop    rdi
  440eb8:	pop    rbx
  440eb9:	push   0x55
  440ebb:	or     al,BYTE PTR [rdi-0x78787879]
  440ec1:	xchg   DWORD PTR [rdi+0x68882787],eax
  440ec7:	ins    BYTE PTR es:[rdi],dx
  440ec8:	ins    DWORD PTR es:[edi],dx
  440eca:	push   rax
  440ecb:	or     eax,DWORD PTR [rdi-0x78787879]
  440ed1:	xchg   DWORD PTR [rdi+0x70882a87],eax
  440ed7:	jno    0x440f47
  440ed9:	outs   dx,DWORD PTR ds:[rsi]
  440eda:	push   rdx
  440edb:	ja     0xffffffff87cb9668
  440ee1:	xchg   DWORD PTR [rdi-0x7d77cf79],eax
  440ee7:	test   BYTE PTR [rbp+rax*4-0x7878ef86],al
  440eee:	xchg   DWORD PTR [rdi-0x78787879],eax
  440ef4:	xor    esi,DWORD PTR [rsi+0x45]
  440ef7:	(bad)  
  440ef8:	sub    eax,0x8715131f
  440efd:	xchg   DWORD PTR [rdi-0x78787879],eax
  440f03:	xchg   DWORD PTR [rax],edi
  440f05:	js     0x440f7a
  440f07:	pop    cx
  440f09:	rex.WRXB (bad) 
  440f0b:	sbb    BYTE PTR [rdi-0x787878fa],al
  440f11:	xchg   DWORD PTR [rdi-0x7777be79],eax
  440f17:	mov    BYTE PTR [rax-0x78e57778],cl
  440f1d:	add    DWORD PTR [rax],eax
  440f1f:	xchg   DWORD PTR [rdi+0x47878787],eax
  440f25:	pop    rax
  440f26:	rex.RX
  440f27:	rex.XB cmp esi,DWORD PTR [r14]
  440f2a:	sbb    DWORD PTR [rdx],eax
  440f2c:	add    al,BYTE PTR [rcx]
  440f2e:	adc    DWORD PTR [rax],eax
  440f30:	xchg   DWORD PTR [rdi+0x7f4b8787],eax
  440f36:	jae    0x440f9e
  440f38:	pop    rcx
  440f39:	rex.WRXB and QWORD PTR [r11+0x44],r10
  440f3d:	sub    BYTE PTR [rax],ah
  440f3f:	(bad)  
  440f40:	add    DWORD PTR [rdi-0x77ab7879],eax
  440f46:	cmp    DWORD PTR [rbx+0x75],0x19192672
  440f4d:	or     eax,0x8787012b
  440f52:	xchg   DWORD PTR [rdi-0x777777aa],eax
  440f58:	mov    BYTE PTR [rax+0x12872c83],cl
  440f5e:	add    DWORD PTR [rdi-0x78787879],eax
  440f64:	pop    rsp
  440f65:	rex.WRB
  440f66:	rex.W
  440f67:	cmp    al,0x3d
  440f6a:	cmp    al,BYTE PTR [rdi-0x7878e479]
  440f70:	xchg   DWORD PTR [rdi-0x78787879],eax
  440f76:	xchg   DWORD PTR [rdi-0x78787879],eax
  440f7c:	xchg   DWORD PTR [rdi-0xf787879],eax
  440f82:	(bad)  
  440f83:	add    BYTE PTR [rax],al
  440f85:	loopne 0x440fa6
  440f87:	add    BYTE PTR [rax],al
  440f89:	loopne 0x440faa
  440f8b:	add    BYTE PTR [rax],al
  440f8d:	loopne 0x440fae
  440f8f:	add    BYTE PTR [rax],al
  440f91:	loopne 0x440fb2
  440f93:	add    BYTE PTR [rax],al
  440f95:	loopne 0x440fb6
  440f97:	add    BYTE PTR [rax],al
  440f99:	loopne 0x440fba
  440f9b:	add    BYTE PTR [rax],al
  440f9d:	loopne 0x440fbe
  440f9f:	add    BYTE PTR [rax],al
  440fa1:	loopne 0x440fba
  440fa3:	add    BYTE PTR [rax],al
  440fa5:	loopne 0x440fba
  440fa7:	add    BYTE PTR [rax],al
  440fa9:	loopne 0x440fac
  440fab:	add    BYTE PTR [rax],al
  440fad:	loopne 0x440faf
  440faf:	add    BYTE PTR [rax],al
  440fb1:	loopne 0x440fb4
  440fb3:	add    BYTE PTR [rax],al
  440fb5:	loopne 0x440fca
  440fb7:	add    BYTE PTR [rax],al
  440fb9:	loopne 0x440ff2
  440fbb:	add    BYTE PTR [rax],al
  440fbd:	(bad)  
  440fbe:	inc    DWORD PTR [rax]
  440fc0:	add    BYTE PTR [rax],ch
  440fc2:	add    BYTE PTR [rax],al
  440fc4:	add    BYTE PTR [rax],ah
  440fc6:	add    BYTE PTR [rax],al
  440fc8:	add    BYTE PTR [rax+0x0],al
  440fcb:	add    BYTE PTR [rax],al
  440fcd:	add    DWORD PTR [rax],eax
  440fcf:	and    BYTE PTR [rax],al
  440fd1:	add    BYTE PTR [rax],al
  440fd3:	add    BYTE PTR [rax],al
  440fd5:	adc    BYTE PTR [rax],0x0
	...
  441080:	add    BYTE PTR [rcx+0x5a],ch
  441083:	rex.WRXB mov QWORD PTR [r13-0x7a009a8d],0xffffffff83ff6372
  44108e:	jo     0x4410f2
  441090:	inc    DWORD PTR [rbx-0x7d009e91]
  441096:	outs   dx,BYTE PTR ds:[rsi]
  441097:	pop    rdi
  441098:	inc    DWORD PTR [rcx+0x7fff5e6d]
  44109e:	imul   ebx,DWORD PTR [rbx-0x1],0x7d
  4410a2:	imul   ebx,DWORD PTR [rcx-0x1],0xff58687c
  4410a9:	jnp    0x441112
  4410ab:	push   rdi
  4410ac:	(bad)  
  4410ad:	jnp    0x441115
  4410af:	push   rsi
  4410b0:	(bad)  
  4410b1:	jp     0x441119
  4410b3:	push   rsi
  4410b4:	(bad)  
  4410b5:	jp     0x44111c
  4410b7:	push   rbp
  4410b8:	call   FWORD PTR [rbx+0x4b]
  4410bb:	(bad)  
  4410bc:	mov    edi,0x0
	...
  441101:	push   0x5c
  441103:	push   rcx
  441104:	(bad)  
  441105:	fst    st(6)
  441107:	sar    bh,cl
  441109:	fcmovnb st,st(3)
  44110b:	mov    eax,0x95a5c7ff
  441110:	inc    ebx
  441112:	movabs eax,ds:0xa1c3ff90a1c3ff90
  44111b:	nop
  44111c:	inc    ebx
  44111e:	movabs eax,ds:0xa1c3ff90a1c3ff90
  441127:	nop
  441128:	inc    ebx
  44112a:	movabs eax,ds:0xa2c3ff90a1c3ff90
  441133:	xchg   ecx,eax
  441134:	jmp    FWORD PTR [rdi+0x5cff8292]
  44113a:	rex.WR
  44113b:	mov    r15d,0x0
	...
  441181:	ins    BYTE PTR es:[rdi],dx
  441182:	pop    rsi
  441183:	push   rbx
  441184:	(bad)  
  441185:	loope  0x441161
  441187:	(bad)  
  441188:	push   rbp
  44118a:	loopne 0x441163
  44118c:	push   rcx
  44118e:	(bad)  
  44118f:	enter  0xf1ff,0xd4
  441193:	enter  0xf1ff,0xd4
  441197:	(bad)  
  441198:	push   rcx
  44119a:	(bad)  
  44119b:	(bad)  
  44119c:	push   rax
  44119e:	(bad)  
  44119f:	(bad)  
  4411a0:	push   rax
  4411a2:	rol    esi,cl
  4411a4:	push   rax
  4411a6:	rol    ch,cl
  4411a8:	push   rax
  4411aa:	rol    ch,cl
  4411ac:	push   rax
  4411ae:	rol    ah,cl
  4411b0:	jmp    rbx
  4411b2:	(bad)
  4411b5:	mov    dl,0x97
  4411b7:	xchg   edi,edi
  4411b9:	pop    rsp
  4411ba:	rex.WRB
  4411bb:	mov    r15d,0x0
	...
  441201:	outs   dx,BYTE PTR ds:[rsi]
  441202:	pop    rdi
  441203:	push   rbp
  441204:	(bad)  
  441205:	loope  0x4411e2
  441207:	(bad)  
  441208:	push   rsi
  44120a:	jrcxz  0x4411e6
  44120c:	push   rsp
  44120e:	fxch   st(5)
  441210:	push   rsp
  441212:	fxch   st(5)
  441214:	push   rsp
  441216:	fxch   st(4)
  441218:	push   rsp
  44121a:	fxch   st(4)
  44121c:	push   rbx
  44121e:	fmul   st,st(3)
  441220:	push   rbx
  441222:	xlat   BYTE PTR ds:[rbx]
  441223:	retf   0xaaff
  441226:	sar    BYTE PTR [rdi-0x1],cl
  441229:	rex mov esp,0xb27dff12
  44122f:	push   rcx
  441230:	jmp    rbp
  441232:	enter  0xffb9,0xb2
  441236:	cwde   
  441237:	mov    bh,bh
  441239:	pop    rbp
  44123a:	rex.WRX
  44123b:	rex.X mov edi,0x0
	...
  441281:	outs   dx,BYTE PTR ds:[rsi]
  441282:	(bad)  
  441283:	push   rdi
  441284:	(bad)  
  441285:	loope  0x441263
  441287:	fdivr  st,st(7)
  441289:	mul    esp
  44128b:	(bad)  
  44128d:	hlt    
  44128e:	fcmove st,st(6)
  441290:	push   rsp
  441292:	fcmove st,st(6)
  441294:	push   rsp
  441296:	fcmove st,st(6)
  441298:	push   rsp
  44129a:	fxch   st(6)
  44129c:	push   rsp
  44129e:	fxch   st(4)
  4412a0:	push   rbx
  4412a2:	fmul   st,st(3)
  4412a4:	call   QWORD PTR [rdi+0x1cff78e5]
  4412aa:	in     al,0x0
  4412ac:	push   QWORD PTR [rbx-0x36]
  4412af:	rex.RB jmp r13
  4412b2:	leave  
  4412b3:	mov    ebx,0x8998b3ff
  4412b8:	call   FWORD PTR [rdi+0x50]
  4412bb:	rex.R mov edi,0x0
	...
  441301:	jo     0x441367
  441303:	pop    rdx
  441304:	(bad)  
  441305:	loop   0x4412e4
  441307:	fcos   
  441309:	mul    esp
  44130b:	(bad)  
  44130d:	hlt    
  44130e:	fcmovnbe st,st(0)
  441310:	push   rsp
  441312:	(bad)  
  441314:	push   rsp
  441316:	(bad)  
  441318:	push   rsp
  44131a:	(bad)  
  44131c:	push   rsp
  44131e:	fcmove st,st(7)
  441320:	push   rsp
  441322:	fcmove st,st(6)
  441324:	jmp    rsi
  441326:	fcmovnb st,st(0)
  441328:	call   rdx
  44132a:	fld    TBYTE PTR [rdi+rdi*8-0x492821]
  441331:	in     eax,0xca
  441333:	mov    ebx,0x8999b3ff
  441338:	jmp    QWORD PTR [rax+0x51]
  44133b:	rex.RX mov edi,0x0
	...
  441381:	jb     0x4413e9
  441383:	pop    rsp
  441384:	(bad)  
  441385:	jrcxz  0x441364
  441387:	fcos   
  441389:	clc    
  44138a:	out    0xde,al
  44138c:	push   rbp
  44138e:	fst    st(2)
  441390:	push   rbp
  441392:	fst    st(2)
  441394:	push   rbp
  441396:	fst    st(2)
  441398:	push   rbp
  44139a:	fst    st(1)
  44139c:	push   rsp
  44139e:	(bad)  
  4413a0:	push   rsp
  4413a2:	fcmove st,st(7)
  4413a4:	push   rsp
  4413a6:	fcmove st,st(6)
  4413a8:	push   rsp
  4413aa:	fcmove st,st(5)
  4413ac:	push   rsp
  4413ae:	fxch   st(5)
  4413b0:	jmp    rsi
  4413b2:	retf   
  4413b3:	mov    ebp,0x8a9ab4ff
  4413b8:	jmp    QWORD PTR [rax+0x52]
  4413bb:	rex.RXB mov r15d,0x0
	...
  441401:	je     0x44146b
  441403:	pop    rsi
  441404:	(bad)  
  441405:	jrcxz  0x4413e5
  441407:	(bad)  
  441409:	clc    
  44140a:	out    0xdf,al
  44140c:	push   rbp
  44140e:	(bad)  
  441410:	push   rbp
  441412:	(bad)  
  441414:	push   rbp
  441416:	(bad)  
  441418:	push   rbp
  44141a:	(bad)  
  44141c:	push   rbp
  44141e:	(bad)  
  441420:	push   rbp
  441422:	(bad)  
  441424:	push   rbp
  441426:	(bad)  
  441428:	push   rbp
  44142a:	fcmovne st,st(7)
  44142c:	push   rbp
  44142e:	fcmove st,st(7)
  441430:	jmp    rsi
  441432:	retf   
  441433:	mov    esi,0x8a9ab4ff
  441438:	jmp    QWORD PTR [rcx+0x53]
  44143b:	movabs r15,0x0
	...
  441481:	jbe    0x4414ed
  441483:	(bad)  
  441484:	(bad)  
  441485:	in     al,0xdf
  441487:	(bad)  
  441489:	clc    
  44148a:	call   0xffffffffe13b146f
  44148f:	xlat   BYTE PTR ds:[rbx]
  441490:	push   rsi
  441492:	loopne 0x44146b
  441494:	push   rsi
  441496:	loopne 0x44146e
  441498:	push   rsi
  44149a:	loopne 0x441472
  44149c:	push   rsi
  44149e:	(bad)  
  4414a0:	push   rbp
  4414a2:	(bad)  
  4414a4:	push   rbp
  4414a6:	fst    st(2)
  4414a8:	push   rbp
  4414aa:	(bad)  
  4414ac:	push   rbp
  4414ae:	(bad)  
  4414b0:	jmp    rsi
  4414b2:	int3   
  4414b3:	mov    edi,0x8b9bb5ff
  4414b8:	jmp    QWORD PTR [rbx+0x55]
  4414bb:	rex.WXB movabs r15,0x0
	...
  441501:	ja     0x44156f
  441503:	movsxd eax,edi
  441505:	in     al,0xdf
  441507:	fdiv   st(7),st
  441509:	clc    
  44150a:	jmp    0xffffffffe33c14f1
  44150f:	fcos   
  441511:	mul    dl
  441513:	fdivr  st,st(7)
  441515:	mul    cl
  441517:	fdivr  st,st(7)
  441519:	mul    cl
  44151b:	fdivr  st,st(7)
  44151d:	mul    al
  44151f:	(bad)  
  441520:	push   rbp
  441522:	(bad)  
  441524:	push   rbp
  441526:	(bad)  
  441528:	push   rbp
  44152a:	fst    st(3)
  44152c:	push   rbp
  44152e:	fst    st(2)
  441530:	jmp    rsi
  441532:	int    0xc0
  441534:	push   QWORD PTR [rbp+0x64ff8c9b]
  44153a:	push   rdi
  44153b:	rex.WR movabs rdi,0x0
	...
  441581:	jns    0x4415f1
  441583:	data16 (bad) 
  441585:	in     eax,0xe0
  441587:	(bad)  
  441589:	stc    
  44158a:	jmp    0x441570
  44158c:	push   rdi
  44158e:	in     al,0xdb
  441590:	push   rdi
  441592:	jrcxz  0x44156f
  441594:	push   rdi
  441596:	jrcxz  0x441572
  441598:	push   rdi
  44159a:	jrcxz  0x441575
  44159c:	push   rsi
  44159e:	loope  0x441578
  4415a0:	push   rsi
  4415a2:	loopne 0x44157a
  4415a4:	push   rsi
  4415a6:	(bad)  
  4415a8:	push   rbp
  4415aa:	(bad)  
  4415ac:	push   rbp
  4415ae:	(bad)  
  4415b0:	jmp    rdi
  4415b2:	(bad)  
  4415b3:	sar    edi,0xb6
  4415b6:	pushf  
  4415b7:	mov    edi,?
  4415b9:	pop    ax
  4415bb:	rex.WRX movabs rdi,0x0
	...
  441601:	jnp    0x441673
  441603:	push   0xffffffffdee1e5c7
  441608:	(bad)  
  441609:	stc    
  44160a:	in     al,dx
  44160b:	out    0xff,al
  44160d:	mul    ebp
  44160f:	(bad)  
  441611:	mul    ebp
  441613:	(bad)  
  441615:	mul    ebp
  441617:	fdiv   st(7),st
  441619:	mul    esp
  44161b:	(bad)  
  44161d:	mul    ebx
  44161f:	(bad)  
  441621:	mul    edx
  441623:	fdivr  st,st(7)
  441625:	mul    cl
  441627:	xlat   BYTE PTR ds:[rbx]
  441628:	push   rsi
  44162a:	loopne 0x441602
  44162c:	push   rsi
  44162e:	(bad)  
  441630:	jmp    rdi
  441632:	(bad)  
  441633:	ret    0xb6ff
  441636:	pushf  
  441637:	(bad)  
  441638:	jmp    QWORD PTR [rdi+0x5a]
  44163b:	push   rax
  44163c:	mov    edi,0x0
	...
  441681:	jge    0x4416f5
  441683:	push   0xffffffffffffffc7
  441685:	out    0xe2,al
  441687:	fdivp  st(7),st
  441689:	stc    
  44168a:	in     eax,dx
  44168b:	call   0xffffffffe02b0f8f
  441690:	(bad)  
  441691:	clc    
  441692:	out    0xdf,eax
  441694:	push   rdi
  441696:	out    0xde,al
  441698:	(bad)  
  441699:	clc    
  44169a:	out    0xde,al
  44169c:	push   rdi
  44169e:	in     al,0xdc
  4416a0:	push   rdi
  4416a2:	jrcxz  0x44167e
  4416a4:	push   rdi
  4416a6:	loop   0x441680
  4416a8:	push   rsi
  4416aa:	loope  0x441683
  4416ac:	push   rsi
  4416ae:	loopne 0x441686
  4416b0:	(bad)  
  4416b1:	call   0xffffffffb843da85
  4416b6:	popf   
  4416b7:	mov    ?,edi
  4416b9:	imul   ebx,DWORD PTR [rdx+rdx*2-0x41],0x0
	...
  441701:	jle    0x441778
  441703:	ins    BYTE PTR es:[rdi],dx
  441704:	repnz out 0xe3,eax
  441707:	loopne 0x441708
  441709:	cli    
  44170a:	out    dx,eax
  44170b:	(bad)  
  44170c:	(bad)  
  44170d:	stc    
  44170e:	(bad)  
  44170f:	jrcxz  0x441710
  441711:	clc    
  441712:	(bad)  
  441713:	jrcxz  0x441714
  441715:	clc    
  441716:	jmp    0xffffffffea3d16fe
  44171b:	loop   0x44171c
  44171d:	clc    
  44171e:	out    0xe0,eax
  441720:	(bad)  
  441721:	clc    
  441722:	out    0xdd,al
  441724:	push   rdi
  441726:	in     eax,0xdc
  441728:	push   rdi
  44172a:	in     al,0xdb
  44172c:	push   rdi
  44172e:	jrcxz  0x44170a
  441730:	(bad)  
  441731:	jmp    0x441707
  441733:	enter  0xbfff,0xa4
  441737:	xchg   esi,eax
  441738:	jmp    FWORD PTR [rdx+0x5e]
  44173b:	push   rsp
  44173c:	out    dx,al
	...
  441781:	cmp    DWORD PTR [rcx+0x71],0xe2e5e8c7
  441788:	(bad)  
  441789:	cld    
  44178a:	div    bl
  44178c:	(bad)  
  44178d:	sti    
  44178e:	repz lock (bad) 
  441791:	sti    
  441792:	repz out dx,eax
  441794:	(bad)  
  441795:	sti    
  441796:	repz out dx,eax
  441798:	(bad)  
  441799:	sti    
  44179a:	repz out dx,eax
  44179c:	(bad)  
  44179d:	sti    
  44179e:	repnz out dx,al
  4417a0:	(bad)  
  4417a1:	sti    
  4417a2:	icebp  
  4417a3:	in     al,dx
  4417a4:	(bad)  
  4417a5:	sti    
  4417a6:	lock in al,dx
  4417a8:	(bad)  
  4417a9:	sti    
  4417aa:	out    dx,eax
  4417ab:	jmp    0x4417ac
  4417ad:	cli    
  4417ae:	out    dx,eax
  4417af:	(bad)  
  4417b0:	push   rsi
  4417b2:	jmp    0xffffffffc318179a
  4417b7:	mov    ecx,0x58626dff
  4417bc:	mov    edi,0x0
	...
  441801:	test   BYTE PTR [rbx+0x74],bh
  441804:	(bad)  
  441805:	jrcxz  0x4417e6
  441807:	fdiv   st(7),st
  441809:	div    al
  44180b:	out    dx,al
  44180c:	push   rbp
  44180e:	out    dx,eax
  44180f:	in     al,dx
  441810:	push   rbp
  441812:	out    dx,eax
  441813:	in     al,dx
  441814:	push   rbp
  441816:	out    dx,al
  441817:	in     al,dx
  441818:	push   rbp
  44181a:	out    dx,al
  44181b:	jmp    0x44181c
  44181d:	hlt    
  44181e:	in     eax,dx
  44181f:	jmp    0xffffffffe9310c23
  441824:	push   rbx
  441826:	jmp    0x44180f
  441828:	push   rbx
  44182a:	(bad)  
  44182b:	out    0xff,al
  44182d:	repnz (bad) 
  44182f:	in     eax,0xff
  441831:	bnd jmp 0xffffffffcc1c181b
  441837:	(bad)  
  441838:	push   QWORD PTR [rax+0x64]
  44183b:	pop    rbx
  44183c:	mov    edi,0x0
	...
  441881:	test   DWORD PTR [rsi+rsi*2-0x39],edi
  441885:	(bad)  
  441886:	enter  0xffc3,0xd8
  44188a:	ror    ah,1
  44188c:	call   rsi
  44188e:	int    0xc7
  441890:	call   rsp
  441892:	retf   
  441893:	(bad)  
  441896:	enter  0xffc2,0xcf
  44189a:	(bad)
  44189d:	(bad)  
  44189e:	mov    edx,0xb3c0ffb2
  4418a3:	test   eax,0xa5afbdff
  4418a8:	(bad)  
  4418a9:	mov    ebx,0xb8ffa1ac
  4418ae:	test   eax,0xa5b6ff9d
  4418b3:	(bad)  
  4418b4:	jmp    FWORD PTR [rsp+rbx*4+0x6671ff90]
  4418bb:	pop    rbp
  4418bc:	mov    edi,0x0
	...
  441901:	xchg   DWORD PTR [rsi+0x78],edi
  441904:	(bad)  
  441905:	ror    bl,1
  441907:	(bad)  
  441908:	(bad)  
  441909:	fcmovbe st,st(3)
  44190b:	(bad)  
  44190c:	(bad)  
  44190d:	fmul   st,st(7)
  44190f:	retf   0xd5ff
  441912:	int3   
  441913:	(bad)  
  441914:	call   rdx
  441916:	leave  
  441917:	ret    0xcfff
  44191a:	(bad)
  44191d:	(bad)  
  44191e:	mov    ecx,0xb1bfffb0
  441923:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  441924:	(bad)  
  441925:	mov    esp,0xb9ffa2ac
  44192a:	test   al,0x9d
  44192c:	push   QWORD PTR [rsi-0x5200665b]
  441932:	(bad)  
  441933:	(bad)  
  441934:	call   FWORD PTR [rbp+0x73ff7b88]
  44193a:	push   0xbf5f
	...
  44197f:	add    BYTE PTR [rax],al
  441981:	mov    BYTE PTR [rcx-0x18143886],al
  441987:	in     eax,0xff
  441989:	cld    
  44198a:	cmc    
  44198b:	repnz (bad) 
  44198d:	sti    
  44198e:	icebp  
  44198f:	out    dx,al
  441990:	(bad)  
  441991:	sti    
  441992:	icebp  
  441993:	out    dx,al
  441994:	(bad)  
  441995:	sti    
  441996:	icebp  
  441997:	in     eax,dx
  441998:	(bad)  
  441999:	sti    
  44199a:	icebp  
  44199b:	in     al,dx
  44199c:	(bad)  
  44199d:	cli    
  44199e:	out    dx,al
  44199f:	jmp    0xffffffffe73114a3
  4419a4:	(bad)  
  4419a5:	stc    
  4419a6:	jmp    0x44198d
  4419a8:	(bad)  
  4419a9:	stc    
  4419aa:	(bad)  
  4419ab:	jrcxz  0x4419ac
  4419ad:	clc    
  4419ae:	jmp    0xffffffffd82f1995
  4419b3:	(bad)  
  4419b4:	(bad)  
  4419b5:	mov    esi,0x75ff9ca9
  4419ba:	push   0x61
  4419bc:	mov    edi,0x0
	...
  441a01:	mov    al,BYTE PTR [rbx-0x16130d84]
  441a07:	out    0xff,eax
  441a09:	std    
  441a0a:	div    ebp
  441a0c:	(bad)  
  441a0d:	cld    
  441a0e:	cmc    
  441a0f:	icebp  
  441a10:	(bad)  
  441a11:	cld    
  441a12:	hlt    
  441a13:	icebp  
  441a14:	(bad)  
  441a15:	cld    
  441a16:	hlt    
  441a17:	icebp  
  441a18:	(bad)  
  441a19:	cld    
  441a1a:	repz out dx,eax
  441a1c:	(bad)  
  441a1d:	sti    
  441a1e:	icebp  
  441a1f:	in     al,dx
  441a20:	(bad)  
  441a21:	cli    
  441a22:	out    dx,eax
  441a23:	jmp    0xffffffffe9321527
  441a28:	(bad)  
  441a29:	stc    
  441a2a:	in     al,dx
  441a2b:	out    0xff,al
  441a2d:	stc    
  441a2e:	jmp    0x441a14
  441a30:	(bad)  
  441a31:	(bad)  
  441a32:	(bad)  
  441a34:	(bad)  
  441a35:	mov    edi,0x77ffa0ac
  441a3a:	ins    DWORD PTR es:[rdi],dx
  441a3b:	fs out dx,al
	...
  441a81:	lea    eax,[rsi-0x16133880]
  441a87:	out    0xff,eax
  441a89:	(bad)  
  441a8a:	cli    
  441a8b:	clc    
  441a8c:	(bad)  
  441a8d:	std    
  441a8e:	clc    
  441a8f:	idiv   bh
  441a91:	cld    
  441a92:	clc    
  441a93:	idiv   bh
  441a95:	cld    
  441a96:	clc    
  441a97:	idiv   bh
  441a99:	cld    
  441a9a:	clc    
  441a9b:	cmc    
  441a9c:	(bad)  
  441a9d:	cld    
  441a9e:	div    dl
  441aa0:	(bad)  
  441aa1:	sti    
  441aa2:	hlt    
  441aa3:	lock (bad) 
  441aa5:	sti    
  441aa6:	repz lock (bad) 
  441aa9:	sti    
  441aaa:	repnz out dx,al
  441aac:	(bad)  
  441aad:	sti    
  441aae:	icebp  
  441aaf:	in     eax,dx
  441ab0:	push   rax
  441ab2:	in     al,0xde
  441ab4:	dec    edx
  441ab6:	mov    edx,0x707affb0
  441abb:	push   0xbf
  441ac0:	add    BYTE PTR [rax],al
  441ac2:	add    BYTE PTR [rax],al
  441ac4:	add    BYTE PTR [rdx],bl
  441ac6:	jb     0x441ae8
  441ac8:	inc    DWORD PTR [rax]
	...
  441afe:	add    BYTE PTR [rax],al
  441b00:	add    BYTE PTR [rdi-0x1f387d78],cl
  441b06:	(bad)  
  441b08:	(bad)  
  441b09:	in     eax,dx
  441b0a:	jmp    0x441af5
  441b0c:	(bad)  
  441b0d:	in     al,dx
  441b0e:	(bad)  
  441b0f:	call   0xffffffffe72e0713
  441b14:	(bad)  
  441b15:	jmp    0xffffffffe9440101
  441b1a:	in     eax,0xe3
  441b1c:	jmp    rbx
  441b1e:	loopne 0x441afc
  441b20:	jmp    rax
  441b22:	fcmovnu st,st(0)
  441b24:	(bad)  
  441b25:	(bad)  
  441b27:	(bad)  
  441b28:	(bad)  
  441b29:	fstp   st(0)
  441b2b:	(bad)  
  441b2c:	(bad)  
  441b2d:	(bad)  
  441b2f:	sar    bh,cl
  441b31:	fcmovbe st,st(5)
  441b33:	sar    bh,1
  441b35:	retf   
  441b36:	ret    0xffbc
  441b39:	jl     0x441bad
  441b3b:	imul   edi,DWORD PTR [rdi+0x0],0x0
  441b42:	add    BYTE PTR [rax],al
  441b44:	add    BYTE PTR [rdx],bl
  441b46:	jge    0x441b67
  441b48:	call   FWORD PTR [rdi]
  441b4a:	jle    0x441b6d
  441b4c:	inc    DWORD PTR [rax]
	...
  441b7e:	add    BYTE PTR [rax],al
  441b80:	add    BYTE PTR [rax-0x39387b76],dl
  441b86:	sar    DWORD PTR [rbx-0x413b3601],0xff
  441b8d:	mov    ecx,0xbdc4ffbb
  441b93:	mov    dh,0xff
  441b95:	sar    BYTE PTR [rax-0x4c43004e],0xac
  441b9c:	jmp    FWORD PTR [rdi-0x5900655d]
  441ba2:	cwde   
  441ba3:	(bad)  
  441ba4:	jmp    QWORD PTR [rdx-0x6200786e]
  441baa:	mov    es,WORD PTR [rcx+0x277b22ff]
  441bb0:	jmp    QWORD PTR [rdx]
  441bb2:	jnp    0x441bdb
  441bb4:	jmp    QWORD PTR [rdx]
  441bb6:	jnp    0x441bdf
  441bb8:	jmp    QWORD PTR [rdx]
  441bba:	jnp    0x441be3
  441bbc:	call   FWORD PTR [rax]
  441bbe:	jo     0x441bdd
  441bc0:	call   FWORD PTR [rip+0x1fff217e]        # 0x20433d44
  441bc6:	mov    DWORD PTR [rdi+rdi*8],esp
  441bc9:	xor    al,0xae
  441bcb:	(bad)  
  441bcc:	call   FWORD PTR [rdi]
  441bce:	and    BYTE PTR [rdi+rdi*8],0x0
	...
  441bfe:	add    BYTE PTR [rax],al
  441c00:	add    BYTE PTR [rcx-0x1f387a74],dl
  441c06:	(bad)  
  441c08:	(bad)  
  441c09:	in     eax,dx
  441c0a:	jmp    0xffffffffea311bf6
  441c0f:	out    0xff,al
  441c11:	in     al,dx
  441c12:	call   0xffffffffe8301bfc
  441c17:	in     al,0xff
  441c19:	(bad)  
  441c1a:	in     eax,0xe2
  441c1c:	(bad)  
  441c1d:	call   0xffffffffe743fa03
  441c22:	fcompp 
  441c24:	jmp    rbp
  441c26:	fst    st(6)
  441c28:	jmp    rsp
  441c2a:	fcmovbe st,st(4)
  441c2c:	jmp    QWORD PTR [rdx]
  441c2e:	jnp    0x441c57
  441c30:	push   QWORD PTR [rsi+rbp*4]
  441c33:	(bad)  
  441c34:	push   QWORD PTR [rsi+rbp*4]
  441c37:	(bad)  
  441c38:	push   QWORD PTR [rsi+rbp*4]
  441c3b:	(bad)  
  441c3c:	push   QWORD PTR [rsi+rbp*4]
  441c3f:	(bad)  
  441c40:	push   QWORD PTR [rsi+rbp*4]
  441c43:	(bad)  
  441c44:	push   QWORD PTR [rsi+rbp*4]
  441c47:	(bad)  
  441c48:	dec    DWORD PTR [rdx-0x27]
  441c4b:	push   rdx
  441c4c:	inc    DWORD PTR [rsi-0x3f]
  441c4f:	rex.WRXB jmp QWORD PTR [r11]
  441c52:	sub    BYTE PTR [rdx],0xff
	...
  441c81:	xchg   ebx,eax
  441c82:	lea    eax,[rdi-0x15131139]
  441c88:	(bad)  
  441c89:	(bad)  
  441c8a:	cld    
  441c8b:	sti    
  441c8c:	(bad)  
  441c8d:	std    
  441c8e:	sti    
  441c8f:	stc    
  441c90:	(bad)  
  441c91:	std    
  441c92:	cli    
  441c93:	stc    
  441c94:	(bad)  
  441c95:	std    
  441c96:	cli    
  441c97:	clc    
  441c98:	(bad)  
  441c99:	std    
  441c9a:	stc    
  441c9b:	idiv   edi
  441c9d:	cld    
  441c9e:	cmc    
  441c9f:	repnz (bad) 
  441ca1:	sti    
  441ca2:	repz out dx,eax
  441ca4:	(bad)  
  441ca5:	sti    
  441ca6:	repnz in eax,dx
  441ca8:	(bad)  
  441ca9:	sti    
  441caa:	lock jmp 0x441cac
  441cad:	and    bh,BYTE PTR [rbx+0x27]
  441cb0:	call   FWORD PTR [rdi-0x3a]
  441cb3:	imul   edi,edi,0xff69c65f
  441cb9:	pop    rdi
  441cba:	(bad)  
  441cbb:	imul   edi,edi,0xff69c65f
  441cc1:	pop    rdi
  441cc2:	(bad)  
  441cc3:	imul   edi,edi,0xff69c65f
  441cc9:	pop    rcx
  441cca:	loope  0x441d2f
  441ccc:	push   QWORD PTR [rbp-0x1f]
  441ccf:	jg     0x441cd0
  441cd1:	mov    ecx,esp
  441cd3:	nop
  441cd4:	call   FWORD PTR [rax-0x3f]
  441cd7:	(bad)  
  441cd8:	inc    DWORD PTR [rax]
	...
  441cfe:	add    BYTE PTR [rax],al
  441d00:	add    BYTE PTR [rbx-0x100d7672],dl
  441d06:	in     eax,dx
  441d07:	jmp    0x441d08
  441d09:	(bad)  
  441d0a:	std    
  441d0b:	cld    
  441d0c:	(bad)  
  441d0d:	(bad)  
  441d0e:	std    
  441d0f:	cld    
  441d10:	(bad)  
  441d11:	(bad)  
  441d12:	cld    
  441d13:	cli    
  441d14:	(bad)  
  441d15:	(bad)  
  441d16:	sti    
  441d17:	stc    
  441d18:	(bad)  
  441d19:	(bad)  
  441d1a:	stc    
  441d1b:	clc    
  441d1c:	(bad)  
  441d1d:	cld    
  441d1e:	div    esp
  441d20:	(bad)  
  441d21:	cld    
  441d22:	repz lock (bad) 
  441d25:	cld    
  441d26:	repnz out dx,al
  441d28:	(bad)  
  441d29:	sti    
  441d2a:	icebp  
  441d2b:	in     al,dx
  441d2c:	jmp    QWORD PTR [rdx]
  441d2e:	jnp    0x441d57
  441d30:	dec    DWORD PTR [rax-0x77006e22]
  441d36:	ficom  WORD PTR [rcx-0x6e217701]
  441d3c:	dec    DWORD PTR [rax-0x77006e22]
  441d42:	ficom  WORD PTR [rcx-0x6e217701]
  441d48:	push   QWORD PTR [rdx+riz*8-0x80]
  441d4c:	dec    DWORD PTR [rcx+0x61ff90e1]
  441d52:	retf   
  441d53:	push   0xff
	...
  441d80:	add    BYTE PTR [rsi-0x10387470],dl
  441d86:	in     eax,dx
  441d87:	in     al,dx
  441d88:	(bad)  
  441d89:	(bad)  
  441d8a:	(bad)  
  441d8b:	std    
  441d8c:	(bad)  
  441d8d:	(bad)  
  441d8e:	std    
  441d8f:	std    
  441d90:	(bad)  
  441d91:	(bad)  
  441d92:	std    
  441d93:	cld    
  441d94:	(bad)  
  441d95:	(bad)  
  441d96:	cld    
  441d97:	sti    
  441d98:	(bad)  
  441d99:	(bad)  
  441d9a:	sti    
  441d9b:	stc    
  441d9c:	(bad)  
  441d9d:	std    
  441d9e:	div    ebp
  441da0:	(bad)  
  441da1:	cld    
  441da2:	hlt    
  441da3:	icebp  
  441da4:	(bad)  
  441da5:	cld    
  441da6:	hlt    
  441da7:	out    dx,eax
  441da8:	(bad)  
  441da9:	sti    
  441daa:	repnz in eax,dx
  441dac:	jmp    QWORD PTR [rdx]
  441dae:	jnp    0x441dd7
  441db0:	call   FWORD PTR [rax-0x35]
  441db3:	(bad)  
  441db4:	call   FWORD PTR [rax-0x35]
  441db7:	(bad)  
  441db8:	call   FWORD PTR [rax-0x35]
  441dbb:	(bad)  
  441dbc:	inc    DWORD PTR [rbp-0x3b]
  441dbf:	push   rax
  441dc0:	call   FWORD PTR [rax-0x35]
  441dc3:	(bad)  
  441dc4:	jmp    FWORD PTR [rcx]
  441dc6:	scas   al,BYTE PTR es:[rdi]
  441dc7:	xor    bh,bh
  441dc9:	mov    dh,bl
  441dcb:	xchg   ecx,eax
  441dcc:	call   FWORD PTR [rdi-0x37]
  441dcf:	inc    DWORD PTR [eax]
	...
  441dfe:	add    BYTE PTR [rax],al
  441e00:	add    BYTE PTR [rsi-0x1338726f],dl
  441e06:	(bad)  
  441e07:	jmp    0xfffffffffb3f1a0b
  441e0c:	(bad)  
  441e0d:	sti    
  441e0e:	cli    
  441e0f:	cli    
  441e10:	(bad)  
  441e11:	sti    
  441e12:	cli    
  441e13:	stc    
  441e14:	(bad)  
  441e15:	sti    
  441e16:	stc    
  441e17:	stc    
  441e18:	(bad)  
  441e19:	sti    
  441e1a:	stc    
  441e1b:	stc    
  441e1c:	(bad)  
  441e1d:	cli    
  441e1e:	stc    
  441e1f:	clc    
  441e20:	(bad)  
  441e21:	stc    
  441e22:	clc    
  441e23:	idiv   edi
  441e25:	stc    
  441e26:	div    esi
  441e28:	(bad)  
  441e29:	stc    
  441e2a:	div    esi
  441e2c:	(bad)  
  441e2d:	stc    
  441e2e:	div    ebp
  441e30:	(bad)  
  441e31:	stc    
  441e32:	cmc    
  441e33:	repz jmp rbp
  441e36:	fstp   st(1)
  441e38:	inc    DWORD PTR [rsi+0xbf7a80]
  441e3e:	add    BYTE PTR [rax],al
  441e40:	add    BYTE PTR [rax],al
  441e42:	add    BYTE PTR [rax],al
  441e44:	add    BYTE PTR [rcx],dh
  441e46:	mov    cl,0x39
  441e48:	call   FWORD PTR [rdi-0x37]
  441e4b:	inc    DWORD PTR [eax]
	...
  441e7e:	add    BYTE PTR [rax],al
  441e80:	add    BYTE PTR [rdi-0x3e38716e],dl
  441e86:	mov    esp,0xbbc1ffb5
  441e8b:	mov    ch,0xff
  441e8d:	sar    BYTE PTR [rdx-0x463f004c],0xb3
  441e94:	(bad)  
  441e95:	mov    edi,0xbfffb2b8
  441e9a:	mov    eax,0xb5bcffb1
  441e9f:	scas   al,BYTE PTR es:[rdi]
  441ea0:	(bad)  
  441ea1:	mov    edx,0xb9ffacb3
  441ea6:	mov    dl,0xab
  441ea8:	(bad)  
  441ea9:	mov    ecx,0xb8ffa9b1
  441eae:	scas   eax,DWORD PTR es:[rdi]
  441eaf:	test   al,0xff
  441eb1:	mov    bh,0xaf
  441eb3:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  441eb4:	push   QWORD PTR [rsi-0x77005952]
  441eba:	cmp    DWORD PTR [rbx-0x41],0x0
  441ec1:	add    BYTE PTR [rax],al
  441ec3:	add    BYTE PTR [rax],al
  441ec5:	pop    rsi
  441ec6:	retf   
  441ec7:	inc    WORD PTR [rax]
	...
  441fe6:	add    BYTE PTR [rax],al
  441fe8:	add    bh,bh
  441fea:	(bad)  
  441feb:	(bad)  
  441fec:	(bad)  
  441fed:	cld    
  441fee:	add    BYTE PTR [rdi],al
  441ff0:	(bad)  
  441ff1:	cld    
  441ff2:	add    BYTE PTR [rdi],al
  441ff4:	(bad)  
  441ff5:	cld    
  441ff6:	add    BYTE PTR [rdi],al
  441ff8:	(bad)  
  441ff9:	cld    
  441ffa:	add    BYTE PTR [rdi],al
  441ffc:	(bad)  
  441ffd:	cld    
  441ffe:	add    BYTE PTR [rdi],al
  442000:	(bad)  
  442001:	cld    
  442002:	add    BYTE PTR [rdi],al
  442004:	(bad)  
  442005:	cld    
  442006:	add    BYTE PTR [rdi],al
  442008:	(bad)  
  442009:	cld    
  44200a:	add    BYTE PTR [rdi],al
  44200c:	(bad)  
  44200d:	cld    
  44200e:	add    BYTE PTR [rdi],al
  442010:	(bad)  
  442011:	cld    
  442012:	add    BYTE PTR [rdi],al
  442014:	(bad)  
  442015:	cld    
  442016:	add    BYTE PTR [rdi],al
  442018:	(bad)  
  442019:	cld    
  44201a:	add    BYTE PTR [rdi],al
  44201c:	(bad)  
  44201d:	cld    
  44201e:	add    BYTE PTR [rdi],al
  442020:	(bad)  
  442021:	cld    
  442022:	add    BYTE PTR [rdi],al
  442024:	(bad)  
  442025:	cld    
  442026:	add    BYTE PTR [rdi],al
  442028:	(bad)  
  442029:	cld    
  44202a:	add    BYTE PTR [rdi],al
  44202c:	(bad)  
  44202d:	cld    
  44202e:	add    BYTE PTR [rdi],al
  442030:	(bad)  
  442031:	cld    
  442032:	add    BYTE PTR [rdi],al
  442034:	(bad)  
  442035:	cld    
  442036:	add    BYTE PTR [rdi],al
  442038:	(bad)  
  442039:	cld    
  44203a:	add    BYTE PTR [rdi],al
  44203c:	(bad)  
  44203d:	cld    
  44203e:	add    BYTE PTR [rsi],al
  442040:	(bad)  
  442041:	cld    
  442042:	add    BYTE PTR [rsi],al
  442044:	jg     0x442042
  442046:	add    BYTE PTR [rax],al
  442048:	(bad)  
  442049:	cld    
  44204a:	add    BYTE PTR [rax],al
  44204c:	(bad)  
  44204d:	cld    
  44204e:	add    BYTE PTR [rax],al
  442050:	paddb  mm0,QWORD PTR [rax]
  442053:	add    BYTE PTR [rdi],bl
  442055:	cld    
  442056:	add    BYTE PTR [rax],al
  442058:	(bad)  
  442059:	cld    
  44205a:	add    BYTE PTR [rsi],al
  44205c:	jg     0x44205a
  44205e:	add    BYTE PTR [rsi],al
  442060:	(bad)  
  442061:	(bad)  
  442062:	(bad)  
  442063:	(bad)  
  442064:	(bad)  
  442065:	(bad)  
  442066:	(bad)  
  442067:	(bad)  
  442068:	jmp    FWORD PTR [rax]
  44206a:	add    BYTE PTR [rax],al
  44206c:	add    BYTE PTR [rax],dl
  44206e:	add    BYTE PTR [rax],al
  442070:	add    BYTE PTR [rax],ah
  442072:	add    BYTE PTR [rax],al
  442074:	add    BYTE PTR [rcx],al
  442076:	add    BYTE PTR [rax],ah
  442078:	add    BYTE PTR [rax],al
  44207a:	add    BYTE PTR [rax],al
  44207c:	add    BYTE PTR [rax+0x4],al
	...
  44209b:	add    BYTE PTR [rax],al
  44209d:	pushf  
  44209e:	xchg   BYTE PTR [rcx-0x56],bh
  4420a1:	xchg   esp,eax
  4420a2:	xor    BYTE PTR [rbx-0x1],0x88
  4420a6:	jno    0x44210a
  4420a8:	(bad)  
  4420a9:	jp     0x44210f
  4420ab:	push   rbx
  4420ac:	push   QWORD PTR [rax+0x5a]
  4420af:	rex.W push QWORD PTR [rbx+0x5c]
  4420b3:	rex.WXB jmp FWORD PTR [r11+0x52]
  4420b7:	rex (bad) 
  4420b9:	js     0x44211d
  4420bb:	push   rsp
  4420bc:	retf   0x0
	...
  4420db:	add    BYTE PTR [rax],al
  4420dd:	lahf   
  4420de:	mov    BYTE PTR [rsi-0x1],bh
  4420e1:	(bad)  
  4420e2:	enter  0xffc1,0xcf
  4420e6:	lods   eax,DWORD PTR ds:[rsi]
  4420e7:	fwait
  4420e8:	dec    edi
  4420ea:	scas   al,BYTE PTR es:[rdi]
  4420eb:	popf   
  4420ec:	call   rax
  4420ee:	lods   eax,DWORD PTR ds:[rsi]
  4420ef:	pushf  
  4420f0:	dec    eax
  4420f2:	lods   al,BYTE PTR ds:[rsi]
  4420f3:	xchg   ebp,eax
  4420f4:	dec    esp
  4420f6:	mov    cl,0x98
  4420f8:	push   QWORD PTR [rsi+0x5d]
  4420fb:	inc    QWORD PTR [r8]
	...
  44211a:	add    BYTE PTR [rax],al
  44211c:	add    BYTE PTR [rbx-0x7c72],ah
  442122:	(bad)  
  442123:	(bad)  
  442124:	push   rsi
  442126:	xlat   BYTE PTR ds:[rbx]
  442127:	leave  
  442128:	push   rsi
  44212a:	fxch   st(3)
  44212c:	(bad)  
  44212d:	(bad)  
  44212e:	fmul   st,st(7)
  442130:	(bad)  
  442131:	(bad)  
  442132:	(bad)  
  442134:	push   QWORD PTR [rcx-0x3b]
  442137:	pop    rbp
  442138:	(bad)  
  442139:	jnp    0x44219d
  44213b:	rex.WRXB inc QWORD PTR [r8]
	...
  44215a:	add    BYTE PTR [rax],al
  44215c:	add    BYTE PTR [rsi-0x776e],ah
  442162:	(bad)  
  442163:	(bad)  
  442164:	push   rbx
  442166:	fmul   st,st(4)
  442168:	push   rsp
  44216a:	fxch   st(4)
  44216c:	push   rdx
  44216e:	fmul   st,st(2)
  442170:	(bad)  
  442171:	(bad)  
  442172:	(bad)  
  442174:	push   rbp
  442176:	retf   0xffc5
  442179:	sub    DWORD PTR [rax+0x56],0xff
	...
  44219c:	add    BYTE PTR [rcx-0x7469],ch
  4421a2:	(bad)  
  4421a3:	(bad)  
  4421a4:	push   rsp
  4421a6:	(bad)  
  4421a8:	push   rbp
  4421aa:	fst    st(2)
  4421ac:	push   rsp
  4421ae:	(bad)  
  4421b0:	push   rdi
  4421b2:	fst    st(2)
  4421b4:	(bad)  
  4421b5:	call   0xffffffff8743e286
  4421ba:	outs   dx,BYTE PTR ds:[rsi]
  4421bb:	pop    rbx
  4421bc:	inc    DWORD PTR [rax]
	...
  4421da:	add    BYTE PTR [rax],al
  4421dc:	add    BYTE PTR [rbp-0x6e65],ch
  4421e2:	(bad)  
  4421e3:	(bad)  
  4421e4:	push   rbp
  4421e6:	(bad)  
  4421e8:	push   rsi
  4421ea:	loopne 0x4421c1
  4421ec:	push   rbp
  4421ee:	(bad)  
  4421f0:	(bad)  
  4421f1:	clc    
  4421f2:	loopne 0x4421c8
  4421f4:	(bad)  
  4421f5:	call   0xffffffff8d43e3c7
  4421fa:	je     0x44225e
  4421fc:	inc    DWORD PTR [rax]
	...
  44221a:	add    BYTE PTR [rax],al
  44221c:	add    BYTE PTR [rcx-0x6860],dh
  442222:	(bad)  
  442223:	(bad)  
  442224:	(bad)  
  442225:	push   rdi
  442227:	repz (bad) 
  442229:	(bad)  
  44222a:	clc    
  44222b:	hlt    
  44222c:	(bad)  
  44222d:	(bad)  
  44222e:	clc    
  44222f:	hlt    
  442230:	(bad)  
  442231:	(bad)  
  442232:	cli    
  442233:	cmc    
  442234:	(bad)  
  442235:	cld    
  442236:	out    dx,al
  442237:	out    0xff,eax
  442239:	xchg   ecx,eax
  44223a:	jns    0x4422a3
  44223c:	inc    DWORD PTR [rax]
	...
  44225a:	add    BYTE PTR [rax],al
  44225c:	add    BYTE PTR [rbp-0x1400635b],dh
  442262:	in     eax,0xe0
  442264:	dec    ebp
  442266:	mov    ecx,0xaec2ffae
  44226b:	movabs eax,ds:0x8191a7ff93a2b7ff
  442274:	call   QWORD PTR [rcx-0x69009686]
  44227a:	jg     0x4422ea
  44227c:	inc    DWORD PTR [rax]
	...
  44229a:	add    BYTE PTR [rax],al
  44229c:	add    BYTE PTR [rdx-0x10005c54],bh
  4422a2:	(bad)  
  4422a3:	out    0xff,eax
  4422a5:	in     eax,dx
  4422a6:	loopne 0x442282
  4422a8:	(bad)  
  4422a9:	jmp    0x442284
  4422ab:	sar    bh,1
  4422ad:	call   0xffffffffe643ea85
  4422b2:	int3   
  4422b3:	mov    edi,0xaabad9ff
  4422b8:	call   FWORD PTR [rbx+0xff7384]
  4422be:	add    BYTE PTR [rax],al
  4422c0:	add    BYTE PTR [rax+0x6a],al
  4422c3:	rex.WB jmp QWORD PTR [rip+0x592630]        # 0x9d48fa
	...
  4422da:	add    BYTE PTR [rax],al
  4422dc:	add    al,al
  4422de:	mov    ah,0xac
  4422e0:	(bad)  
  4422e1:	(bad)  
  4422e2:	(bad)  
  4422e3:	(bad)  
  4422e4:	(bad)  
  4422e5:	(bad)  
  4422e6:	(bad)  
  4422e7:	(bad)  
  4422e8:	(bad)  
  4422e9:	(bad)  
  4422ea:	(bad)  
  4422eb:	(bad)  
  4422ec:	(bad)  
  4422ed:	(bad)  
  4422ee:	(bad)  
  4422ef:	(bad)  
  4422f0:	(bad)  
  4422f1:	(bad)  
  4422f2:	(bad)  
  4422f3:	(bad)  
  4422f4:	(bad)  
  4422f5:	(bad)  
  4422f6:	(bad)  
  4422f7:	(bad)  
  4422f8:	jmp    QWORD PTR [rax+0xff7989]
  4422fe:	add    BYTE PTR [rax],al
  442300:	add    BYTE PTR [rbx],ch
  442302:	pop    rcx
  442303:	xor    eax,0x283f22ff
  442308:	(bad)  
  442309:	jle    0x442384
  44230b:	ins    BYTE PTR es:[rdi],dx
  44230c:	(bad)  
	...
  44231d:	(bad)
  442320:	(bad)  
  442321:	fst    st(0)
  442323:	(bad)  
  442324:	dec    esp
  442326:	mov    esp,0xb7c6ffb0
  44232b:	lods   al,BYTE PTR ds:[rsi]
  44232c:	(bad)  
  44232d:	mov    edi,0xb9ffa5b1
  442332:	stos   BYTE PTR es:[rdi],al
  442333:	sahf   
  442334:	jmp    QWORD PTR [rdi-0x6b]
  442337:	jne    0x442338
  442339:	cmp    BYTE PTR [rdx+rdi*1-0x1],cl
  44233d:	cmp    BYTE PTR [rdx+rdi*1-0x1],cl
  442341:	sub    ebx,DWORD PTR [rcx+0x35]
  442344:	call   QWORD PTR [rax-0x57]
  442347:	jmp    QWORD PTR [edx]
  44234a:	(bad)  
  44234b:	sub    bh,bh
  44234d:	sub    edi,DWORD PTR [rdx]
  44234f:	sub    al,0x57
	...
  44235d:	retf   0xbac1
  442360:	push   rsi
  442362:	repz lock (bad) 
  442365:	in     eax,dx
  442366:	loopne 0x442342
  442368:	(bad)  
  442369:	jmp    0x442344
  44236b:	sar    bh,1
  44236d:	call   0xffffffffe643eb45
  442372:	int3   
  442373:	mov    edi,0x82a074ff
  442378:	jmp    QWORD PTR [rax-0x71003e01]
  44237e:	in     eax,dx
  44237f:	lods   eax,DWORD PTR ds:[rsi]
  442380:	push   QWORD PTR [rcx-0x2d]
  442383:	(bad)  
  442384:	jmp    QWORD PTR [rsi-0x37]
  442387:	cmp    edi,0xff70b957
  44238d:	sub    ebx,DWORD PTR [rcx+0x35]
  442390:	inc    DWORD PTR [rax]
	...
  44239a:	add    BYTE PTR [rax],al
  44239c:	add    al,dl
  44239e:	mov    ebx,0xffffffff
  4423a4:	(bad)  
  4423a5:	cld    
  4423a6:	div    dl
  4423a8:	(bad)  
  4423a9:	stc    
  4423aa:	out    dx,eax
  4423ab:	out    0xff,eax
  4423ad:	clc    
  4423ae:	out    0xde,al
  4423b0:	(bad)  
  4423b1:	clc    
  4423b2:	loop   0x44238b
  4423b4:	(bad)  
  4423b5:	jl     0x44235e
  4423b7:	mov    bh,bh
  4423b9:	addr32 xchg ebp,eax
  4423bb:	jne    0x4423bc
  4423bd:	addr32 xchg ebp,eax
  4423bf:	jne    0x4423c0
  4423c1:	push   rbx
  4423c2:	and    DWORD PTR [rax-0x1],0xff91d374
  4423c9:	sub    ebx,DWORD PTR [rcx+0x35]
  4423cc:	jmp    FWORD PTR [rbp-0x75]
  4423cf:	je     0x44243e
	...
  4423dd:	ror    edx,1
  4423df:	(bad)  
  4423e0:	(bad)  
  4423e1:	(bad)  
  4423e2:	(bad)  
  4423e3:	(bad)  
  4423e4:	(bad)  
  4423e5:	(bad)  
  4423e6:	(bad)  
  4423e7:	(bad)  
  4423e8:	(bad)  
  4423e9:	(bad)  
  4423ea:	(bad)  
  4423eb:	(bad)  
  4423ec:	(bad)  
  4423ed:	(bad)  
  4423ee:	(bad)  
  4423ef:	(bad)  
  4423f0:	(bad)  
  4423f1:	(bad)  
  4423f2:	(bad)  
  4423f3:	(bad)  
  4423f4:	push   rdi
  4423f6:	cmc    
  4423f7:	hlt    
  4423f8:	push   QWORD PTR [rbp+0xff92a0]
  4423fe:	add    BYTE PTR [rax],al
  442400:	add    BYTE PTR [rbx-0x7a],bl
  442403:	push   0x35592bff
  442408:	jmp    FWORD PTR [rbp-0x75]
  44240b:	jae    0x44247a
	...
  44241d:	retf   0xc3c6
  442420:	inc    esi
  442422:	mov    edi,0xb9c1ffbb
  442427:	mov    bl,0xff
  442429:	mov    ebx,0xb8ffabb1
  44242e:	lods   al,BYTE PTR ds:[rsi]
  44242f:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  442430:	(bad)  
  442431:	mov    ecx,0xb8ffa7ad
  442436:	lods   al,BYTE PTR ds:[rsi]
  442437:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  442438:	push   QWORD PTR [rsi+0xb39ea7]
  44243e:	add    BYTE PTR [rax],al
  442440:	add    BYTE PTR [rbp-0x6a],ch
  442443:	jp     0x442444
  442445:	ins    DWORD PTR es:[rdi],dx
  442446:	mov    ?,WORD PTR [rsi+0x6d]
	...
  442491:	loopne 0x4424b2
  442493:	add    BYTE PTR [rax],al
  442495:	loopne 0x4424b6
  442497:	add    BYTE PTR [rax],al
  442499:	loopne 0x4424ba
  44249b:	add    BYTE PTR [rax],al
  44249d:	loopne 0x4424be
  44249f:	add    BYTE PTR [rax],al
  4424a1:	loopne 0x4424c2
  4424a3:	add    BYTE PTR [rax],al
  4424a5:	loopne 0x4424c6
  4424a7:	add    BYTE PTR [rax],al
  4424a9:	loopne 0x4424ca
  4424ab:	add    BYTE PTR [rax],al
  4424ad:	loopne 0x4424ce
  4424af:	add    BYTE PTR [rax],al
  4424b1:	loopne 0x4424c6
  4424b3:	add    BYTE PTR [rax],al
  4424b5:	loopne 0x4424c8
  4424b7:	add    BYTE PTR [rax],al
  4424b9:	loopne 0x4424bb
  4424bb:	add    BYTE PTR [rax],al
  4424bd:	loopne 0x4424bf
  4424bf:	add    BYTE PTR [rax],al
  4424c1:	loopne 0x4424c3
  4424c3:	add    BYTE PTR [rax],al
  4424c5:	loopne 0x4424d8
  4424c7:	add    BYTE PTR [rax],al
  4424c9:	loopne 0x4424de
  4424cb:	add    BYTE PTR [rax],al
  4424cd:	(bad)  
  4424ce:	inc    DWORD PTR [rax]
  4424d0:	add    BYTE PTR [rbx],cl
  4424d2:	add    BYTE PTR [rcx],al
  4424d5:	add    BYTE PTR [rax],al
  4424d7:	add    bh,bh
  4424d9:	(bad)  
  4424da:	(bad)  
  4424db:	inc    DWORD PTR [rcx]
  4424dd:	add    BYTE PTR [rax],al
  4424df:	add    BYTE PTR [rax],al
  4424e1:	add    BYTE PTR [rax],al
  4424e3:	add    BYTE PTR [rdx+rax*1],cl
  4424e6:	add    BYTE PTR [rax],al
  4424e8:	add    BYTE PTR [rcx+0x53],dl
  4424eb:	jns    0x442560
  4424ed:	je     0x442554
  4424ef:	ins    DWORD PTR es:[rdi],dx
  4424f0:	cs rex.R jb 0x442555
  4424f4:	ja     0x44255f
  4424f6:	outs   dx,BYTE PTR ds:[rsi]
  4424f7:	addr32 sub al,0x20
  4424fa:	push   rsi
  4424fb:	gs jb  0x442571
  4424fe:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  442505:	xor    BYTE PTR cs:[rsi],ch
  442508:	xor    BYTE PTR [rax+riz*1],ch
  44250b:	rex.XB jne 0x44257a
  44250e:	je     0x442585
  442510:	jb     0x442577
  442512:	cmp    eax,0x7475656e
  442517:	jb     0x44257a
  442519:	ins    BYTE PTR es:[rdi],dx
  44251a:	sub    al,0x20
  44251c:	push   rax
  44251d:	jne    0x442581
  44251f:	ins    BYTE PTR es:[rdi],dx
  442520:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  442527:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  44252b:	(bad)  
  44252c:	xor    BYTE PTR [rbx],dh
  44252e:	xor    ax,0x3766
  442532:	xor    WORD PTR [rcx],si
  442535:	fs xor eax,0x61336130
  44253b:	add    eax,0x1
  442540:	adc    edx,DWORD PTR [rbx+0x79]
  442543:	jae    0x4425b9
  442545:	gs ins DWORD PTR es:[rdi],dx
  442547:	cs rex.R jb 0x4425ac
  44254b:	ja     0x4425b6
  44254d:	outs   dx,BYTE PTR ds:[rsi]
  44254e:	movsxd rbp,DWORD PTR cs:[r15d+0x6e]
  442554:	add    al,BYTE PTR [rax]
  442556:	add    BYTE PTR [rax],al
  442558:	or     BYTE PTR [rcx+0x63],cl
  44255b:	outs   dx,DWORD PTR ds:[rsi]
  44255c:	outs   dx,BYTE PTR ds:[rsi]
  44255d:	rex.R (bad) 
  44255f:	je     0x4425c2
  442561:	or     BYTE PTR [rcx+0x63],cl
  442564:	outs   dx,DWORD PTR ds:[rsi]
  442565:	outs   dx,BYTE PTR ds:[rsi]
  442566:	push   rbx
  442567:	imul   edi,DWORD PTR [rdx+0x65],0x13020407
  44256e:	push   rbx
  44256f:	jns    0x4425e4
  442571:	je     0x4425d8
  442573:	ins    DWORD PTR es:[rdi],dx
  442574:	cs rex.R jb 0x4425d9
  442578:	ja     0x4425e3
  44257a:	outs   dx,BYTE PTR ds:[rsi]
  44257b:	addr32 cs push rbx
  44257e:	imul   edi,DWORD PTR [rdx+0x65],0x2
  442585:	add    al,BYTE PTR [rax]
  442587:	add    BYTE PTR [rax],al
  442589:	or     DWORD PTR [rbx],eax
  44258b:	add    BYTE PTR [rax],al
  44258d:	add    BYTE PTR [rip+0xfffffffffffffffc],al        # 0x44258f
  442593:	adc    edx,DWORD PTR [rbx+0x79]
  442596:	jae    0x44260c
  442598:	gs ins DWORD PTR es:[rdi],dx
  44259a:	cs rex.R jb 0x4425ff
  44259e:	ja     0x442609
  4425a0:	outs   dx,BYTE PTR ds:[rsi]
  4425a1:	addr32 cs push rbx
  4425a4:	imul   edi,DWORD PTR [rdx+0x65],0x2
  4425ab:	add    eax,0x74646977
  4425b0:	push   0x69656806
  4425b5:	addr32 push 0x8000074
  4425bb:	or     BYTE PTR [rdx],al
	...
  4425c5:	add    BYTE PTR [rax],al
  4425c7:	add    BYTE PTR [rdi],cl
  4425c9:	add    eax,DWORD PTR [rax]
  4425cb:	add    BYTE PTR [rax],al
  4425cd:	xchg   esi,eax
  4425ce:	(bad)  
  4425cf:	add    BYTE PTR [rax],al
  4425d1:	add    al,BYTE PTR [rax]
  4425d3:	add    BYTE PTR [rcx],al
  4425d5:	add    BYTE PTR [rsi],al
  4425d7:	add    BYTE PTR [rax],ah
  4425d9:	and    BYTE PTR [rax],dl
  4425db:	add    BYTE PTR [rcx],al
  4425dd:	add    BYTE PTR [rax+rax*1],al
  4425e0:	call   0x664425e7
  4425e5:	add    BYTE PTR [rax],al
  4425e7:	add    BYTE PTR [rax],dl
  4425e9:	adc    BYTE PTR [rax],dl
  4425eb:	add    BYTE PTR [rcx],al
  4425ed:	add    BYTE PTR [rax+rax*1],al
  4425f0:	sub    BYTE PTR [rcx],al
  4425f2:	add    BYTE PTR [rax],al
  4425f4:	rex.WRX add r8,QWORD PTR [rax]
  4425f7:	add    BYTE PTR [rax],ah
  4425f9:	and    BYTE PTR [rax],al
  4425fb:	add    BYTE PTR [rcx],al
  4425fd:	add    BYTE PTR [rax],cl
  4425ff:	add    BYTE PTR [rax+0x76000008],ch
  442605:	add    al,0x0
  442607:	add    BYTE PTR [rax],dl
  442609:	adc    BYTE PTR [rax],al
  44260b:	add    BYTE PTR [rcx],al
  44260d:	add    BYTE PTR [rax],cl
  44260f:	add    BYTE PTR [rax+0x5],ch
  442612:	add    BYTE PTR [rax],al
  442614:	(bad)  
  442615:	or     eax,0x20200000
  44261a:	add    BYTE PTR [rax],al
  44261c:	add    DWORD PTR [rax],eax
  44261e:	and    BYTE PTR [rax],al
  442620:	test   al,0x10
  442622:	add    BYTE PTR [rax],al
  442624:	xchg   BYTE PTR [rdx],dl
  442626:	add    BYTE PTR [rax],al
  442628:	adc    BYTE PTR [rax],dl
  44262a:	add    BYTE PTR [rax],al
  44262c:	add    DWORD PTR [rax],eax
  44262e:	and    BYTE PTR [rax],al
  442630:	push   0x2e000004
  442635:	and    eax,DWORD PTR [rax]
  442637:	add    BYTE PTR [rax],ch
  442639:	add    BYTE PTR [rax],al
  44263b:	add    BYTE PTR [rax],ah
  44263d:	add    BYTE PTR [rax],al
  44263f:	add    BYTE PTR [rax+0x0],al
  442642:	add    BYTE PTR [rax],al
  442644:	add    DWORD PTR [rax],eax
  442646:	add    al,0x0
  442648:	add    BYTE PTR [rax],al
  44264a:	add    BYTE PTR [rax],al
  44264c:	add    BYTE PTR [rdx],al
	...
  442666:	add    BYTE PTR [rax],0x0
  442669:	add    BYTE PTR [rax],0x0
  44266c:	add    BYTE PTR [rax+0x800080],al
  442672:	add    BYTE PTR [rax],al
  442674:	add    BYTE PTR [rax],0x80
  442677:	add    BYTE PTR [rax-0x7fffff80],al
  44267d:	add    BYTE PTR [rax-0x3f3f4000],0x0
  442684:	add    BYTE PTR [rax],al
  442686:	inc    DWORD PTR [rax]
  442688:	add    bh,bh
  44268a:	add    BYTE PTR [rax],al
  44268c:	add    bh,bh
  44268e:	inc    DWORD PTR [rax]
  442690:	inc    DWORD PTR [rax]
  442692:	add    BYTE PTR [rax],al
  442694:	inc    DWORD PTR [rax]
  442696:	inc    DWORD PTR [rax]
  442698:	(bad)  
  442699:	inc    DWORD PTR [rax]
  44269b:	add    bh,bh
  44269d:	(bad)  
  44269e:	inc    DWORD PTR [rax]
	...
  4426a8:	add    BYTE PTR [rax],al
  4426aa:	add    BYTE PTR [rsp+rsi*2+0x0],dh
  4426ae:	add    BYTE PTR [rax],al
  4426b0:	add    BYTE PTR [rax],al
  4426b2:	ja     0x44272b
  4426b4:	ja     0x44272d
  4426b6:	ja     0x44272f
  4426b8:	ja     0x44272e
  4426ba:	ja     0x442703
  4426bc:	je     0x4426c6
  4426be:	rex.RXB add BYTE PTR [r8],r8b
  4426c1:	add    BYTE PTR [rax-0x78],bh
  4426c4:	mov    BYTE PTR [rax-0x38777778],cl
  4426ca:	je     0x442722
  4426cc:	jne    0x442714
  4426ce:	push   rsi
  4426cf:	jo     0x4426d1
  4426d1:	add    BYTE PTR [rax-0x78],bh
  4426d4:	mov    BYTE PTR [rax+0x78878888],cl
  4426da:	xchg   DWORD PTR [rdi-0x38],esi
  4426dd:	addr32 jl 0x442730
  4426e0:	add    BYTE PTR [rax],al
  4426e2:	js     0x4426dc
  4426e4:	clc    
  4426e5:	mov    BYTE PTR [rax+0x78c78888],cl
  4426eb:	enter  0x8c8c,0x77
  4426ef:	add    BYTE PTR [rax],0x0
  4426f2:	js     0x44267c
  4426f4:	mov    BYTE PTR [rax-0x78777778],cl
  4426fa:	xchg   DWORD PTR [rdi+rsi*2+0xc477],ecx
  442701:	add    BYTE PTR [rdi-0x71],bh
  442704:	(bad)
  442708:	jl     0x442786
  44270a:	mov    WORD PTR [rax-0x79],?
  44270d:	enter  0x6575,0x0
  442711:	add    BYTE PTR [rax-0x8],bh
  442714:	mov    al,bh
  442716:	clc    
  442717:	mov    BYTE PTR [rax-0x78],bh
  44271a:	xchg   DWORD PTR [rax+0x768c7c88],ecx
  442720:	add    BYTE PTR [rax],al
  442722:	js     0x4426ab
  442724:	jg     0x4426ae
  442726:	mov    BYTE PTR [rax-0x77737789],cl
  44272c:	xchg   eax,ecx
  44272e:	js     0x4426f7
  442730:	add    BYTE PTR [rax],al
  442732:	jg     0x44272a
  442734:	ja     0x4426c5
  442736:	vpmacssdql ymm1,ymm15,ymm7,YMMWORD PTR [r8-0x38787838]
  442740:	add    BYTE PTR [rax],al
  442742:	js     0x44273b
  442744:	xchg   DWORD PTR [rax-0x78],edi
  442747:	clc    
  442748:	mov    BYTE PTR [rax+rcx*4+0x74887c84],cl
  44274f:	add    BYTE PTR [rax],al
  442751:	add    BYTE PTR [rdi-0x79],bh
  442754:	js     0x4426fe
  442756:	clc    
  442757:	mov    BYTE PTR [rax-0x77777731],cl
  44275d:	mov    WORD PTR [rdi+0x67777740],es
  442763:	movsxd ecx,DWORD PTR [rdx-0x70709009]
  442769:	mov    BYTE PTR [rax+rcx*4+0x708c788c],cl
  442770:	sub    BYTE PTR [rax-0x50587878],ch
  442776:	ja     0x442707
  442778:	mov    BYTE PTR [rax+0x8878878],cl
  44277e:	mov    DWORD PTR [rax],0xabaaa837
  442784:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  442785:	movabs ds:0xc8778888f878f6,eax
  44278e:	add    BYTE PTR [rax],al
  442790:	test   al,0xab
  442792:	jnp    0x44280e
  442794:	mov    bh,BYTE PTR [rdx-0x51]
  442797:	js     0x442791
  442799:	mov    al,bh
  44279b:	mov    bh,dh
  44279d:	add    BYTE PTR [rax],al
  44279f:	add    BYTE PTR [rdi],dh
  4427a1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4427a2:	stos   BYTE PTR es:[rdi],al
  4427a3:	mov    bh,BYTE PTR [rdx-0x76]
  4427a6:	sub    DWORD PTR [rdi-0x7777071],0xfffffff7
  4427ad:	add    BYTE PTR [rax],al
  4427af:	add    BYTE PTR [rax-0x75757589],ch
  4427b5:	mov    bh,0xa7
  4427b7:	clc    
  4427b8:	clc    
  4427b9:	mov    al,bh
  4427bb:	mov    bh,dh
  4427bd:	add    BYTE PTR [rax],al
  4427bf:	add    BYTE PTR [rdx-0x5d],bh
  4427c2:	movabs ds:0x8ff8f8f87f7aa8a3,eax
  4427cb:	(bad)  
  4427cc:	test   DWORD PTR [rax],0x0
  4427d2:	jg     0x4427c7
  4427d4:	xchg   DWORD PTR [rax-0x70700008],ebp
  4427da:	mov    BYTE PTR [rax+0xf7],cl
  4427e0:	add    BYTE PTR [rax],al
  4427e2:	jg     0x4427d6
  4427e4:	mov    bh,BYTE PTR [rdi-0x1]
  4427e7:	(bad)  
  4427e8:	clc    
  4427e9:	clc    
  4427ea:	dec    DWORD PTR [rdi+0x87]
  4427f0:	add    BYTE PTR [rax],al
  4427f2:	jg     0x4427e6
  4427f4:	cmp    al,bh
  4427f6:	clc    
  4427f7:	clc    
  4427f8:	clc    
  4427f9:	clc    
  4427fa:	clc    
  4427fb:	(bad)  
  4427fc:	test   DWORD PTR [rax],0x0
  442802:	jg     0x4427f6
  442804:	mov    bh,bh
  442806:	(bad)  
  442807:	(bad)  
  442808:	clc    
  442809:	clc    
  44280a:	clc    
  44280b:	clc    
  44280c:	test   DWORD PTR [rax],0x0
  442812:	jg     0x442813
  442814:	(bad)  
  442815:	clc    
  442816:	clc    
  442817:	clc    
  442818:	(bad)  
  442819:	(bad)  
  44281a:	(bad)  
  44281b:	inc    DWORD PTR [rdi+0x0]
  442821:	add    BYTE PTR [rdi+0x77],dh
  442824:	ja     0x44289d
  442826:	ja     0x44289f
  442828:	ja     0x4428a0
  44282a:	ja     0x442893
  44282c:	ja     0x44282e
  44282e:	add    BYTE PTR [rax],al
  442830:	add    BYTE PTR [rdi],al
  442832:	jl     0x4428ab
  442834:	ja     0x4428ae
  442836:	mov    BYTE PTR [rax-0x77777778],cl
  44283c:	xchg   DWORD PTR [rax+0x0],esi
  44283f:	add    BYTE PTR [rax],al
  442841:	js     0x4428bb
  442843:	jl     0x4427d1
  442845:	mov    WORD PTR [rsp+rdi*2+0x77],?
  442849:	(bad)  
  44284a:	jl     0x4428c3
  44284c:	jl     0x4427d5
  44284e:	add    BYTE PTR [rax],al
  442850:	(bad)  
  442851:	xchg   DWORD PTR [rdi],eax
  442853:	mov    BYTE PTR [rax-0x77777778],cl
  442859:	mov    BYTE PTR [rax+0x70887088],cl
  44285f:	add    BYTE PTR [rdi+0x70],dh
  442862:	(bad)  
  442863:	mov    BYTE PTR [rdi-0x77700778],cl
  442869:	mov    BYTE PTR [rdi+0x77077088],cl
  44286f:	add    BYTE PTR [rax],al
  442871:	add    BYTE PTR [rdi],al
  442873:	dec    DWORD PTR [rdi-0x70707071]
  442879:	dec    DWORD PTR [rdi+0x708f]
  44287f:	add    BYTE PTR [rax],al
  442881:	add    BYTE PTR [rdi],al
  442883:	ja     0x4428fc
  442885:	ja     0x4428fe
  442887:	ja     0x442900
  442889:	ja     0x442902
  44288b:	ja     0x4428fd
	...
  44289d:	add    BYTE PTR [rax],al
  44289f:	add    bh,bh
  4428a1:	(bad)  
  4428a2:	cld    
  4428a3:	(bad)  
  4428a4:	lock add BYTE PTR [rax],al
  4428a7:	and    esi,eax
  4428a9:	add    BYTE PTR [rax],al
  4428ab:	add    eax,esi
  4428ad:	add    BYTE PTR [rax],al
  4428af:	add    eax,esi
  4428b1:	add    BYTE PTR [rax],al
  4428b3:	add    eax,esi
  4428b5:	add    BYTE PTR [rax],al
  4428b7:	add    esi,eax
  4428b9:	add    BYTE PTR [rax],al
  4428bb:	add    al,dh
  4428bd:	add    BYTE PTR [rax],al
  4428bf:	add    al,dh
  4428c1:	add    BYTE PTR [rax],al
  4428c3:	add    al,dh
  4428c5:	add    BYTE PTR [rax],al
  4428c7:	add    al,dh
  4428c9:	add    BYTE PTR [rax],al
  4428cb:	add    esi,eax
  4428cd:	add    BYTE PTR [rax],al
  4428cf:	add    DWORD PTR [rax],eax
  4428d1:	add    BYTE PTR [rax],al
  4428d3:	add    DWORD PTR [rax],eax
  4428d5:	add    BYTE PTR [rax],al
  4428d7:	and    eax,DWORD PTR [rax]
  4428d9:	add    BYTE PTR [rax],al
  4428db:	(bad)  
  4428dc:	add    BYTE PTR [rax],al
  4428de:	add    BYTE PTR [rdi],bh
  4428e0:	add    BYTE PTR [rax],al
  4428e2:	add    BYTE PTR [rdi],bh
  4428e4:	add    BYTE PTR [rax],al
  4428e6:	add    BYTE PTR [rdi],bh
  4428e8:	add    BYTE PTR [rax],al
  4428ea:	add    BYTE PTR [rdi],bh
  4428ec:	lock add BYTE PTR [rax],al
  4428ef:	(bad)  
  4428f0:	lock add BYTE PTR [rax],al
  4428f3:	(bad)  
  4428f4:	lock add BYTE PTR [rax],al
  4428f7:	(bad)  
  4428f8:	lock add BYTE PTR [rax],al
  4428fb:	(bad)  
  4428fc:	lock add BYTE PTR [rax],al
  4428ff:	(bad)  
  442900:	lock add BYTE PTR [rax],al
  442903:	(bad)  
  442904:	loopne 0x442906
  442906:	add    BYTE PTR [rdi],bl
  442908:	rol    BYTE PTR [rax],0x0
  44290b:	js     0x188b2911
  442911:	add    BYTE PTR [rax],al
  442913:	movsxd edi,eax
  442915:	add    BYTE PTR [rax],al
  442917:	jg     0x442911
  442919:	add    BYTE PTR [rax],al
  44291b:	jg     0x44291c
  44291d:	(bad)  
  44291e:	(bad)  
  44291f:	jmp    FWORD PTR [rax]
  442921:	add    BYTE PTR [rax],al
  442923:	add    BYTE PTR [rax],dl
  442925:	add    BYTE PTR [rax],al
  442927:	add    BYTE PTR [rax],ah
  442929:	add    BYTE PTR [rax],al
  44292b:	add    BYTE PTR [rcx],al
  44292d:	add    BYTE PTR [rax+rax*1],al
  442930:	add    BYTE PTR [rax],al
  442932:	add    BYTE PTR [rax],al
  442934:	add    BYTE PTR [rax],0x0
	...
  44294b:	add    BYTE PTR [rax],al
  44294d:	add    BYTE PTR [rax+0x800000],al
  442953:	add    BYTE PTR [rax],al
  442955:	add    BYTE PTR [rax+0x8000],0x0
  44295c:	add    BYTE PTR [rax],0x80
  44295f:	add    BYTE PTR [rax-0x7fffff80],al
  442965:	add    BYTE PTR [rax-0x3f3f4000],0x0
  44296c:	add    BYTE PTR [rax],al
  44296e:	inc    DWORD PTR [rax]
  442970:	add    bh,bh
  442972:	add    BYTE PTR [rax],al
  442974:	add    bh,bh
  442976:	inc    DWORD PTR [rax]
  442978:	inc    DWORD PTR [rax]
  44297a:	add    BYTE PTR [rax],al
  44297c:	inc    DWORD PTR [rax]
  44297e:	inc    DWORD PTR [rax]
  442980:	(bad)  
  442981:	inc    DWORD PTR [rax]
  442983:	add    bh,bh
  442985:	(bad)  
  442986:	inc    DWORD PTR [rax]
  442988:	add    BYTE PTR [rdi+0x77],dh
  44298b:	ja     0x442a04
  44298d:	xchg   DWORD PTR [rdi-0x70880000],eax
  442993:	clc    
  442994:	mov    BYTE PTR [rsp+rsi*2-0x78810000],cl
  44299b:	outs   dx,DWORD PTR ds:[rsi]
  44299c:	mov    WORD PTR [rdi+0x77],?
  44299f:	mov    DWORD PTR [rax],0xf8a7f78f
  4429a5:	mov    edi,?
  4429a7:	jo     0x442a20
  4429a9:	movsxd ecx,DWORD PTR [edx+0x777cc777]
  4429b0:	test   al,0x7b
  4429b2:	xchg   DWORD PTR [rdi+0x77f727],ebp
  4429b8:	cmp    BYTE PTR [rdx+0x76fa7a7a],ch
  4429be:	cld    
  4429bf:	add    BYTE PTR [rax-0x57487576],ch
  4429c5:	clc    
  4429c6:	clc    
  4429c7:	add    BYTE PTR [rdx],bh
  4429c9:	cmp    bh,BYTE PTR [rdx]
  4429cb:	mov    cl,BYTE PTR [rdi+0xf78f]
  4429d1:	(bad)  
  4429d2:	repz test al,0xf8
  4429d5:	clc    
  4429d6:	test   DWORD PTR [rax],0x8ffa7f00
  4429dc:	(bad)  
  4429dd:	(bad)  
  4429de:	test   DWORD PTR [rax],0xffff7f00
  4429e4:	(bad)  
  4429e5:	push   rdi
  4429e7:	add    BYTE PTR [rax],al
  4429e9:	ja     0x442a62
  4429eb:	ja     0x442a64
  4429ed:	ja     0x442a66
  4429ef:	add    BYTE PTR [rdi],al
  4429f1:	(bad)  
  4429f2:	mov    BYTE PTR [rax+0x70c08888],cl
  4429f8:	jo     0x442a01
  4429fa:	mov    BYTE PTR [rax+0x7708888],cl
  442a00:	add    BYTE PTR [rdi],al
  442a02:	(bad)  
  442a03:	jl     0x442a81
  442a05:	ja     0x442a77
  442a07:	add    al,al
  442a09:	add    eax,DWORD PTR [rax]
  442a0b:	add    al,al
  442a0d:	add    eax,DWORD PTR [rax]
  442a0f:	add    al,al
  442a11:	add    BYTE PTR [rax],al
  442a13:	add    al,al
  442a15:	add    DWORD PTR [rax],eax
  442a17:	add    BYTE PTR [rax],al
  442a19:	add    BYTE PTR [rax],al
  442a1b:	add    BYTE PTR [rax],al
  442a1d:	add    eax,DWORD PTR [rax]
  442a1f:	add    BYTE PTR [rax],al
  442a21:	add    eax,DWORD PTR [rax]
  442a23:	add    BYTE PTR [rax],al
  442a25:	add    eax,DWORD PTR [rax]
  442a27:	add    BYTE PTR [rax],al
  442a29:	add    eax,DWORD PTR [rax]
  442a2b:	add    al,al
  442a2d:	add    eax,DWORD PTR [rax]
  442a2f:	add    al,al
  442a31:	add    eax,DWORD PTR [rax]
  442a33:	add    al,al
  442a35:	add    eax,DWORD PTR [rax]
  442a37:	add    al,al
  442a39:	add    eax,DWORD PTR [rax]
  442a3b:	add    BYTE PTR [rax+0x60000005],ah
  442a41:	(bad)  
  442a42:	add    BYTE PTR [rax],al
  442a44:	loopne 0x442a4d
  442a46:	add    BYTE PTR [rax],al
  442a48:	sub    BYTE PTR [rax],al
  442a4a:	add    BYTE PTR [rax],al
  442a4c:	and    BYTE PTR [rax],al
  442a4e:	add    BYTE PTR [rax],al
  442a50:	add    BYTE PTR [rax],al
  442a53:	add    BYTE PTR [rcx],al
  442a55:	add    BYTE PTR [rax],cl
  442a57:	add    BYTE PTR [rax],al
  442a59:	add    BYTE PTR [rax],al
  442a5b:	add    BYTE PTR [rax],al
  442a5d:	add    al,0x0
	...
  442a67:	add    BYTE PTR [rax],al
  442a69:	add    DWORD PTR [rax],eax
  442a6b:	add    BYTE PTR [rax],al
  442a6d:	add    DWORD PTR [rax],eax
  442a6f:	add    BYTE PTR [rax],al
  442a71:	add    BYTE PTR [rax],al
  442a73:	add    BYTE PTR [rsi+0x26],cl
  442a76:	add    BYTE PTR es:[rax+0x2d],dl
  442a7a:	add    BYTE PTR cs:[rsi+0x2a],bl
  442a7e:	sub    eax,DWORD PTR [rax]
  442a80:	(bad)  
  442a81:	sub    eax,0x2d68002e
  442a86:	add    BYTE PTR cs:[rbp+0x32],ah
  442a8a:	xor    eax,DWORD PTR [rax]
  442a8c:	imul   esi,DWORD PTR [rcx],0x366e0032
  442a92:	(bad)  
  442a93:	add    BYTE PTR [rdi+0x3a],ch
  442a96:	cmp    eax,DWORD PTR [rax]
  442a98:	jno    0x442ad1
  442a9a:	(bad)  
  442a9b:	add    BYTE PTR [rdx+0x38],dh
  442a9e:	cmp    BYTE PTR [rax],al
  442aa0:	jne    0x442ada
  442aa2:	cmp    DWORD PTR [rax],eax
  442aa4:	jbe    0x442ae1
  442aa6:	cmp    al,0x0
  442aa8:	jge    0x442ae7
  442aaa:	cmp    eax,0x3b3b8d00
  442aaf:	add    BYTE PTR [rax-0x77ffbec0],al
  442ab5:	rex.RXB
  442ab6:	rex.W add BYTE PTR [rbx-0x71ffb6b8],cl
  442abd:	rex.WXB
  442abe:	rex.WXB add BYTE PTR [r11-0x6fffb3b5],cl
  442ac5:	rex.RB
  442ac6:	add    BYTE PTR [r8-0x76ffb6b7],r10b
  442acd:	push   rbx
  442ace:	push   rbx
  442acf:	add    BYTE PTR [rdx-0x61ffadae],dl
  442ad5:	push   rcx
  442ad6:	push   rdx
  442ad7:	add    BYTE PTR [rdx-0x65ffabad],bl
  442add:	push   rdi
  442ade:	pop    rax
  442adf:	add    BYTE PTR [rdx-0x44ffa6a8],bl
  442ae5:	rex.WRX
  442ae6:	rex.WRX add BYTE PTR [rbx-0x5affacad],r12b
  442aed:	push   rbx
  442aee:	push   rbx
  442aef:	add    BYTE PTR [rax-0x5fffaeaf],ch
  442af5:	push   rdi
  442af6:	pop    rdx
  442af7:	add    BYTE PTR [rbx-0x5fffa5a6],ah
  442afd:	pop    rsp
  442afe:	pop    rbp
  442aff:	add    BYTE PTR [rbp-0x53ffa1a2],ah
  442b05:	pop    rcx
  442b06:	pop    rdx
  442b07:	add    BYTE PTR [rax+rbx*2+0x5ab70057],dh
  442b0e:	pop    rbx
  442b0f:	add    BYTE PTR [rsp+rbx*2+0x5aba005d],dh
  442b16:	pop    rcx
  442b17:	add    BYTE PTR [rsi-0x44ffa4a4],bh
  442b1d:	pop    rdi
  442b1e:	(bad)  
  442b1f:	add    BYTE PTR [rdx-0x73ff9a9b],bl
  442b25:	jno    0x442b98
  442b27:	add    BYTE PTR [rdi-0x5dff8e90],dl
  442b2d:	(bad)  
  442b2e:	(bad)  
  442b2f:	add    BYTE PTR [rax+riz*2+0x68a10061],ah
  442b36:	imul   eax,DWORD PTR [rax],0x6869a9
  442b3c:	mov    ecx,0xb3006766
  442b41:	push   0x6c
  442b43:	add    BYTE PTR [rcx-0x54ff9798],bh
  442b49:	jbe    0x442bc1
  442b4b:	add    BYTE PTR [rbx-0x5aff8788],ah
  442b51:	jnp    0x442bce
  442b53:	add    BYTE PTR [rax-0x51ff8081],ch
  442b59:	jl     0x442bd7
  442b5b:	add    BYTE PTR [rsi-0x47ff8d8f],bh
  442b61:	jae    0x442bd7
  442b63:	add    BYTE PTR [rbp+rsi*2+0x7eb80075],bh
  442b6a:	jle    0x442b6c
  442b6c:	rcr    DWORD PTR [rbp+0x5c],0x0
  442b70:	ret    
  442b71:	(bad)  
  442b72:	(bad)  
  442b73:	add    ah,al
  442b75:	(bad)  
  442b76:	(bad)  
  442b77:	add    bh,al
  442b79:	addr32 data16 add al,cl
  442b7d:	addr32 data16 add ch,al
  442b81:	imul   ebp,DWORD PTR [rdx+0x0],0x6d6ecc
  442b88:	shl    BYTE PTR [rbx+0x74],0x0
  442b8c:	ret    0x7574
  442b8f:	add    ch,al
  442b91:	jne    0x442c07
  442b93:	add    cl,al
  442b95:	js     0x442c10
  442b97:	add    cl,cl
  442b99:	jp     0x442c15
  442b9b:	add    dh,cl
  442b9d:	js     0x442c17
  442b9f:	add    ch,cl
  442ba1:	jnp    0x442c1f
  442ba3:	add    bl,cl
  442ba5:	jl     0x442c23
  442ba7:	add    cl,dl
  442ba9:	jne    0x442c20
  442bab:	add    dh,dl
  442bad:	jge    0x442c2c
  442baf:	add    BYTE PTR [rdx],ch
  442bb1:	cdq    
  442bb2:	add    BYTE PTR [r14],r10b
  442bb5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  442bb6:	add    BYTE PTR [rcx],bpl
  442bb9:	mov    bl,0x53
  442bbb:	add    BYTE PTR [rbp-0x67],bl
  442bbe:	pop    rbp
  442bbf:	add    BYTE PTR [rax-0x56],bl
  442bc2:	add    BYTE PTR fs:[rsi-0x53],bl
  442bc6:	imul   eax,DWORD PTR [rax],0x62
  442bc9:	mov    cl,0x6f
  442bcb:	add    BYTE PTR [rax-0x49],ah
  442bce:	jae    0x442bd0
  442bd0:	push   0xffffffffffffffb3
  442bd2:	je     0x442bd4
  442bd4:	ins    DWORD PTR es:[rdi],dx
  442bd5:	mov    dl,0x76
  442bd7:	add    BYTE PTR [rdi-0x4e],ch
  442bda:	jns    0x442bdc
  442bdc:	ins    DWORD PTR es:[rdi],dx
  442bdd:	mov    ch,0x78
  442bdf:	add    BYTE PTR [rax-0x4d],dh
  442be2:	jp     0x442be4
  442be4:	jno    0x442b9c
  442be6:	jl     0x442be8
  442be8:	sub    ebp,eax
  442bea:	add    BYTE PTR [r10],bpl
  442bed:	enter  0x43,0x2b
  442bf1:	enter  0x44,0x31
  442bf5:	(bad)  
  442bf6:	rex.WB add BYTE PTR [rip+0x37004ed4],sil        # 0x37447ad1
  442bfd:	(bad)  
  442bfe:	push   rax
  442bff:	add    BYTE PTR [rbx],bh
  442c01:	fist   DWORD PTR [rsi+0x0]
  442c04:	cmp    al,0xdb
  442c06:	push   rdi
  442c07:	add    BYTE PTR [rbx*8-0x23c1ffa9],bh
  442c0e:	pop    rdx
  442c0f:	add    BYTE PTR [rsi],bh
  442c11:	loopne 0x442c6d
  442c13:	add    BYTE PTR [rsi+rbx*8+0x5f],al
  442c17:	add    BYTE PTR [rcx-0x1f],al
  442c1a:	pop    rsp
  442c1b:	add    BYTE PTR [rdx+riz*8+0x5f],al
  442c1f:	add    BYTE PTR [rcx-0x1b],al
  442c22:	pop    rsi
  442c23:	add    BYTE PTR [rsi+riz*8+0x5f],al
  442c27:	add    BYTE PTR [rcx-0x27],cl
  442c2a:	(bad)  
  442c2b:	add    BYTE PTR [rbx+rbx*8+0x63],cl
  442c2f:	add    BYTE PTR [rax-0x28],bl
  442c32:	outs   dx,BYTE PTR ds:[rsi]
  442c33:	add    BYTE PTR [rax-0x23],bl
  442c36:	outs   dx,BYTE PTR ds:[rsi]
  442c37:	add    BYTE PTR [rbp-0x22],ah
  442c3a:	jp     0x442c3c
  442c3c:	imul   ebx,ebx,0x7c
  442c3f:	add    BYTE PTR [rbx-0x1f],al
  442c42:	(bad)  
  442c43:	add    BYTE PTR [rbp-0x1a],al
  442c46:	(bad)  
  442c47:	add    BYTE PTR [rbx-0x18],al
  442c4a:	(bad)  
  442c4b:	add    BYTE PTR [rbp-0x18],al
  442c4e:	(bad)  
  442c4f:	add    BYTE PTR [rsi-0x17],al
  442c52:	add    BYTE PTR fs:[rcx-0x18],cl
  442c56:	data16 add BYTE PTR [rsi+riz*8+0x68],cl
  442c5b:	add    BYTE PTR [rcx+riz*8+0x6e],dl
  442c5f:	add    BYTE PTR [rdx-0x14],dl
  442c62:	ins    DWORD PTR es:[rdi],dx
  442c63:	add    BYTE PTR [rcx-0x1d],ch
  442c66:	jle    0x442c68
  442c68:	fs in  eax,dx
  442c6a:	jle    0x442c6c
  442c6c:	je     0x442c4c
  442c6e:	xchg   BYTE PTR [rax],al
  442c70:	js     0x442c4e
  442c72:	mov    DWORD PTR [rax],eax
  442c74:	jl     0x442c54
  442c76:	mov    WORD PTR [rax],es
  442c78:	jae    0x442c5f
  442c7a:	xchg   BYTE PTR [rax],al
  442c7c:	jg     0x442c60
  442c7e:	pop    QWORD PTR [rax]
  442c80:	jns    0x442c6e
  442c82:	lea    eax,[rax]
  442c84:	stos   DWORD PTR es:[rdi],eax
  442c85:	test   DWORD PTR [rbp-0x74755700],eax
  442c8b:	add    BYTE PTR [rsi-0x43ff7576],ch
  442c91:	(bad)  
  442c92:	add    DWORD PTR [rax],0xffffffbd
  442c95:	test   BYTE PTR [rax+rax*1+0x9090b2],al
  442c9c:	mov    dh,0x97
  442c9e:	xchg   edi,eax
  442c9f:	add    BYTE PTR [rdi-0x45ff6263],dh
  442ca5:	popf   
  442ca6:	popf   
  442ca7:	add    BYTE PTR [rsi-0x3bff5c5c],bh
  442cad:	add    BYTE PTR [rcx-0x7d7c3600],0x0
  442cb4:	int    0x81
  442cb6:	(bad)  
  442cb7:	add    ah,cl
  442cb9:	add    DWORD PTR [rsi-0x77783f00],0x0
  442cc0:	(bad)  
  442cc1:	mov    BYTE PTR [rcx-0x78792f00],cl
  442cc7:	add    bl,bl
  442cc9:	test   DWORD PTR [rax+rax*1+0x8585dd],eax
  442cd0:	xlat   BYTE PTR ds:[rbx]
  442cd1:	mov    cs,WORD PTR [rdi-0x74752700]
  442cd7:	add    dh,bl
  442cd9:	(bad)  
  442cda:	nop
  442cdb:	add    dh,al
  442cdd:	xchg   ebx,eax
  442cde:	xchg   esp,eax
  442cdf:	add    al,al
  442ce1:	xchg   ebp,eax
  442ce2:	xchg   ebp,eax
  442ce3:	add    bl,cl
  442ce5:	nop
  442ce6:	xchg   ecx,eax
  442ce7:	add    bl,al
  442ce9:	cdq    
  442cea:	cdq    
  442ceb:	add    dl,cl
  442ced:	cwde   
  442cee:	cwde   
  442cef:	add    ch,cl
  442cf1:	sahf   
  442cf2:	popf   
  442cf3:	add    bh,dl
  442cf5:	nop
  442cf6:	xchg   ecx,eax
  442cf7:	add    bl,bl
  442cf9:	xchg   edx,eax
  442cfa:	xchg   ebx,eax
  442cfb:	add    al,ah
  442cfd:	mov    WORD PTR [rax+rax*1+0x9292e4],cs
  442d04:	in     eax,0x93
  442d06:	xchg   esp,eax
  442d07:	add    al,ah
  442d09:	xchg   ebp,eax
  442d0a:	xchg   esi,eax
  442d0b:	add    ch,ah
  442d0d:	xchg   edi,eax
  442d0e:	cwde   
  442d0f:	add    al,ch
  442d11:	cdq    
  442d12:	cdq    
  442d13:	add    cl,al
  442d15:	stos   BYTE PTR es:[rdi],al
  442d16:	test   eax,0xaeaec400
  442d1b:	add    cl,dl
  442d1d:	movabs eax,ds:0xb0dc00a5a5d500a1
  442d26:	scas   eax,DWORD PTR es:[rdi]
  442d27:	add    bh,al
  442d29:	mov    bl,0xb2
  442d2b:	add    ah,cl
  442d2d:	mov    ah,0xb3
  442d2f:	add    cl,cl
  442d31:	mov    dh,0xb5
  442d33:	add    ah,cl
  442d35:	mov    ah,0xb4
  442d37:	add    bl,cl
  442d39:	mov    eax,0xb9cb00b7
  442d3e:	mov    eax,0xb9bbcd00
  442d43:	add    dh,cl
  442d45:	mov    esp,0xbecf00bb
  442d4a:	mov    esp,0xbebfd000
  442d4f:	add    cl,bl
  442d51:	mov    edi,0xa0e800be
  442d56:	movabs al,ds:0xabaaf400a3a2ee00
  442d5f:	add    al,bh
  442d61:	mov    cl,0xb2
  442d63:	add    dl,bh
  442d65:	mov    ch,0xb6
  442d67:	add    ah,bh
  442d69:	mov    dh,0xb7
  442d6b:	add    ah,bh
  442d6d:	mov    dh,0xb8
  442d6f:	add    ch,bh
  442d71:	mov    ecx,0xbbff00ba
  442d76:	mov    esp,0x96e98600
  442d7b:	add    BYTE PTR [rcx-0x74ff6512],cl
  442d81:	in     al,dx
  442d82:	pushf  
  442d83:	add    BYTE PTR [rbx-0x73ff6210],cl
  442d89:	lock sahf 
  442d8b:	add    BYTE PTR [rsi-0x6fff5e0e],cl
  442d91:	lock movabs eax,ds:0xc0c2d200bfc0d100
  442d9b:	add    bl,dl
  442d9d:	(bad)
  442da1:	(bad)
  442da5:	mov    ch,0x0
  442da8:	fadd   st,st(7)
  442daa:	mov    BYTE PTR [rax],0xdf
  442dad:	mov    ah,0x0
  442db0:	xlat   BYTE PTR ds:[rbx]
  442db1:	enter  0xc7,0xd8
  442db5:	enter  0xc7,0xd9
  442db9:	retf   0xc8
  442dbc:	fcmove st,st(4)
  442dbe:	retf   0xdd00
  442dc1:	int    0xcb
  442dc3:	add    bl,bl
  442dc5:	int    0xcc
  442dc7:	add    ah,bl
  442dc9:	int    0xcc
  442dcb:	add    dh,bl
  442dcd:	ror    dh,1
  442dcf:	add    ah,bl
  442dd1:	(bad)  
  442dd2:	iret   
  442dd3:	add    dh,bl
  442dd5:	rcl    eax,1
  442dd7:	add    dh,ah
  442dd9:	ret    0xc1
  442ddc:	loop   0x442da5
  442dde:	mov    DWORD PTR [rax],0xc1c0fd
  442de4:	loopne 0x442db8
  442de6:	rol    DWORD PTR [rax],1
  442de8:	loope  0x442dbe
  442dea:	rol    BYTE PTR [rax],cl
  442dec:	loop   0x442dc3
  442dee:	(bad)  
  442def:	add    ah,ah
  442df1:	(bad)  
  442df2:	(bad)  
  442df3:	add    bl,ah
  442df5:	fcom   st(6)
  442df7:	add    ah,ah
  442df9:	fcom   st(6)
  442dfb:	add    ch,ah
  442dfd:	fcmovu st,st(0)
  442dff:	add    bh,ah
  442e01:	(bad)  
  442e03:	add    al,ch
  442e05:	(bad)  
  442e07:	add    cl,ch
  442e09:	(bad)  
  442e0b:	add    bl,ch
  442e0d:	loopne 0x442ded
  442e0f:	add    ah,ch
  442e11:	loope  0x442df2
  442e13:	add    bl,ch
  442e15:	loope  0x442df7
  442e17:	add    ah,ch
  442e19:	loop   0x442dfb
  442e1b:	add    dh,ch
  442e1d:	in     al,0xe3
  442e1f:	add    dh,ch
  442e21:	in     eax,0xe4
  442e23:	add    al,dh
  442e25:	out    0xe5,eax
  442e27:	add    cl,dh
  442e29:	call   0xffffffffeb372f14
  442e2e:	call   0xffffffffea302233
  442e33:	add    bl,dh
  442e35:	in     al,dx
  442e36:	jmp    0xffffffffeb31223b
  442e3b:	add    dh,dh
  442e3d:	out    dx,al
  442e3e:	in     al,dx
  442e3f:	add    ah,ah
  442e41:	mul    edi
  442e43:	add    ch,ah
  442e45:	imul   eax
  442e47:	add    dh,dh
  442e49:	lock out dx,eax
  442e4b:	add    al,bh
  442e4d:	icebp  
  442e4e:	out    dx,eax
  442e4f:	add    cl,bh
  442e51:	icebp  
  442e52:	lock add BYTE PTR [rax],al
	...
  442e69:	add    BYTE PTR [rax],al
  442e6b:	add    bh,bh
  442e6d:	(bad)  
  442e6e:	inc    DWORD PTR [rax]
	...
  442e84:	add    BYTE PTR [rax],al
  442e86:	sub    eax,0x40b0b
	...
  442e93:	add    BYTE PTR [rdi],dh
  442e95:	(bad)  
  442e96:	(bad)  
  442e97:	(bad)  
  442e98:	(bad)  
  442e99:	(bad)  
  442e9a:	(bad)  
  442e9b:	(bad)  
  442e9c:	(bad)  
  442e9d:	(bad)  
  442e9e:	(bad)  
  442e9f:	(bad)  
  442ea0:	(bad)  
  442ea1:	(bad)  
  442ea2:	(bad)  
  442ea3:	or     DWORD PTR [rdx],ecx
  442ea5:	(bad)  
  442ea6:	add    dl,BYTE PTR [rbx]
  442ea8:	add    al,0x0
  442eab:	nop
  442eac:	add    eax,0x3a
  442eb1:	add    BYTE PTR [rax],al
  442eb3:	add    BYTE PTR [rdi],dh
  442eb5:	rcl    al,cl
  442eb7:	int    0xcd
  442eb9:	int    0xb7
  442ebb:	mov    bh,0xb6
  442ebd:	mov    dh,0xb6
  442ebf:	mov    dl,0xb2
  442ec1:	pushf  
  442ec2:	adc    ecx,DWORD PTR [rcx+0x4a]
  442ec5:	add    eax,DWORD PTR [rdi]
  442ec7:	xor    eax,DWORD PTR [rbx+0x15]
  442eca:	add    DWORD PTR [rbx],ecx
  442ecc:	and    BYTE PTR [rbx],cl
  442ece:	sub    al,0x0
  442ed0:	add    BYTE PTR [rax],al
  442ed2:	add    BYTE PTR [rax],al
  442ed4:	(bad)  
  442ed5:	rcl    dl,cl
  442ed7:	rcl    cl,cl
  442ed9:	int    0xcd
  442edb:	int    0xc9
  442edd:	mov    bh,0xb6
  442edf:	mov    dh,0xb6
  442ee1:	mov    BYTE PTR [rsp+riz*4],ah
  442ee4:	movabs ds:0x3f261f43454e494a,eax
  442eed:	sub    DWORD PTR [rdx],ecx
  442eef:	add    BYTE PTR [rax],al
  442ef1:	add    BYTE PTR [rax],al
  442ef3:	add    BYTE PTR [rdi],dh
  442ef5:	(bad)  
  442ef7:	rcl    dl,cl
  442ef9:	ror    ch,cl
  442efb:	int    0xcd
  442efd:	int    0xb7
  442eff:	mov    bh,0xb6
  442f01:	pushf  
  442f02:	(bad)  
  442f03:	cmp    eax,0x4f97a3a4
  442f08:	rex.WRX
  442f09:	rex.RB
  442f0a:	rex.XB
  442f0b:	rex sub DWORD PTR [rbx],ecx
  442f0e:	sahf   
  442f0f:	add    BYTE PTR [rax],al
  442f11:	add    BYTE PTR [rax],al
  442f13:	add    BYTE PTR [rdi],dh
  442f15:	(bad)  
  442f17:	(bad)  
  442f19:	rcl    dl,cl
  442f1b:	ror    ch,cl
  442f1d:	int    0xc9
  442f1f:	leave  
  442f20:	mov    bh,0xb7
  442f22:	mov    bh,0x34
  442f24:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  442f25:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  442f26:	rex.WB xor BYTE PTR [rsi*1+0x61f4345],spl
  442f2e:	add    BYTE PTR [rax],al
  442f30:	add    BYTE PTR [rax],al
  442f32:	add    BYTE PTR [rax],al
  442f34:	(bad)  
  442f35:	(bad)  
  442f37:	fstp   st(7)
  442f39:	rcl    dl,cl
  442f3b:	ror    ch,cl
  442f3d:	int    0xcd
  442f3f:	int    0x86
  442f41:	sub    DWORD PTR [rip+0x1749ba28],esp        # 0x178de96f
  442f47:	lahf   
  442f48:	lods   al,BYTE PTR ds:[rsi]
  442f49:	xchg   ebx,eax
  442f4a:	xor    eax,DWORD PTR [rbp+0x43]
  442f4d:	ud2    
  442f4f:	(bad)  
  442f50:	add    BYTE PTR [rax],al
  442f52:	add    BYTE PTR [rax],al
  442f54:	(bad)  
  442f55:	jrcxz  0x442f3a
  442f57:	(bad)  
  442f59:	(bad)  
  442f5b:	rcl    dl,cl
  442f5d:	ror    ch,cl
  442f5f:	int    0x2e
  442f61:	xchg   edi,eax
  442f62:	mov    edi,0xac0ebbbc
  442f67:	mov    dl,0xf6
  442f69:	sbb    ecx,DWORD PTR ds:[rsi+0x45]
  442f6d:	rex
  442f6e:	adc    BYTE PTR [rax],al
  442f71:	add    BYTE PTR [rax],al
  442f73:	add    BYTE PTR [rdi],dh
  442f75:	in     al,0xe3
  442f77:	push   rbx
  442f78:	pop    rcx
  442f79:	(bad)  
  442f7b:	(bad)  
  442f7d:	rcl    dl,cl
  442f7f:	(bad)  
  442f80:	cs xchg edi,eax
  442f82:	fdivr  QWORD PTR [rsp+rdi*4-0xc4953ea]
  442f89:	mov    BYTE PTR [rbx],bl
  442f8b:	rex.WRXB
  442f8c:	rex.WRX
  442f8d:	sbb    DWORD PTR [r8],r10d
  442f90:	add    BYTE PTR [rax],al
  442f92:	add    BYTE PTR [rax],al
  442f94:	(bad)  
  442f95:	out    0xe6,al
  442f97:	push   rbx
  442f98:	push   rbx
  442f99:	pop    rcx
  442f9a:	(bad)  
  442f9c:	fstp   st(1)
  442f9e:	rcl    dl,cl
  442fa0:	mov    WORD PTR [rdi-0x5d405b67],ss
  442fa6:	xor    DWORD PTR [rdi-0x68b6c953],ebx
  442fac:	rex.WXB and al,0x19
  442faf:	(bad)  
  442fb0:	add    BYTE PTR [rax],al
  442fb2:	add    BYTE PTR [rax],al
  442fb4:	(bad)  
  442fb5:	call   0x543883a0
  442fba:	pop    rsp
  442fbb:	(bad)  
  442fbd:	rcr    bh,cl
  442fbf:	rcl    dl,cl
  442fc1:	sar    BYTE PTR [rax-0x673f43cd],cl
  442fc7:	adc    edx,DWORD PTR [rcx]
  442fc9:	xchg   ebp,eax
  442fca:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  442fcb:	cdq    
  442fcc:	add    rax,QWORD PTR [r8]
  442fcf:	add    BYTE PTR [rax],al
  442fd1:	add    BYTE PTR [rax],al
  442fd3:	add    BYTE PTR [rdi],dh
  442fd5:	(bad)  
  442fd6:	(bad)  
  442fd7:	push   rbx
  442fd8:	xor    esp,0xdfdf5a53
  442fde:	fstp   st(1)
  442fe0:	rcr    bl,cl
  442fe2:	sbb    eax,0xbfc0c0bc
  442fe7:	mov    esp,0xa5a8babb
  442fec:	movabs ds:0x535353535300073d,eax
  442ff5:	push   rbx
  442ff6:	push   rbx
  442ff7:	push   rbx
  442ff8:	and    DWORD PTR [rax-0xc],0x53
  442ffc:	pop    rdx
  442ffd:	(bad)  
  442fff:	fstp   st(5)
  443001:	(bad)  [rsp+rdi*4-0x43b6b540]
  443008:	mov    esp,0xa43d3149
  44300d:	sbb    QWORD PTR [r8],rax
  443010:	push   rcx
  443011:	(bad)  
  443012:	mov    dh,0xc6
  443015:	mov    ah,0xc2
  443018:	outs   dx,DWORD PTR ds:[rsi]
  443019:	(bad)  
  44301a:	(bad)  
  44301b:	hlt    
  44301c:	push   rbx
  44301d:	pop    rcx
  44301e:	(bad)  
  443020:	fst    st(7)
  443022:	fstp   TBYTE PTR [rdx-0x3f6f315e]
  443028:	mov    edi,0x329d0021
  44302d:	and    al,0x0
  44302f:	add    BYTE PTR [rcx+0x7d],dl
  443032:	je     0x4430a8
  443034:	js     0x4430ae
  443036:	jbe    0x4430a2
  443038:	movsxd sp,DWORD PTR [rcx+0x5e]
  44303c:	hlt    
  44303d:	push   rbx
  44303e:	pop    rcx
  44303f:	(bad)  
  443041:	(bad)  
  443043:	xlat   BYTE PTR ds:[rbx]
  443044:	rcl    dl,cl
  443046:	cwde   
  443047:	movabs eax,ds:0x4a90
  443050:	push   rcx
  443051:	jb     0x4430ba
  443053:	je     0x4430cb
  443055:	js     0x4430cf
  443057:	je     0x4430c3
  443059:	(bad)
  44305f:	fucom  st(3)
  443061:	(bad)  
  443063:	(bad)  
  443065:	rcl    dl,cl
  443067:	sar    al,cl
  443069:	(bad)  
  44306a:	add    BYTE PTR [rax],al
  44306c:	add    BYTE PTR [rax],al
  44306e:	add    BYTE PTR [rax],al
  443070:	push   rcx
  443071:	jg     0x4430e2
  443073:	imul   esi,DWORD PTR [rax+rdi*2+0x78],0x666a6d78
  44307b:	(bad)  
  44307d:	push   rdx
  44307e:	push   rsp
  44307f:	in     al,0xe3
  443081:	jrcxz  0x443062
  443083:	(bad)  
  443085:	(bad)  
  443087:	sar    al,cl
  443089:	(bad)  
  44308a:	add    BYTE PTR [rax],al
  44308c:	add    BYTE PTR [rax],al
  44308e:	add    BYTE PTR [rax],al
  443090:	push   rcx
  443091:	xor    BYTE PTR [rax+0x71],0x7b
  443095:	jp     0x44310f
  443097:	js     0x44310f
  443099:	push   0x68
  44309b:	(bad)  
  44309c:	push   rdx
  44309d:	push   rbp
  44309e:	call   0xffffffffe5291789
  4430a3:	(bad)  
  4430a5:	(bad)  
  4430a7:	xlat   BYTE PTR ds:[rbx]
  4430a8:	div    BYTE PTR [rdi]
  4430aa:	add    BYTE PTR [rax],al
  4430ac:	add    BYTE PTR [rax],al
  4430ae:	add    BYTE PTR [rax],al
  4430b0:	push   rdi
  4430b1:	push   rcx
  4430b2:	push   rcx
  4430b3:	push   rcx
  4430b4:	push   rcx
  4430b5:	push   rcx
  4430b6:	push   rcx
  4430b7:	push   rcx
  4430b8:	jl     0x443133
  4430ba:	test   BYTE PTR [rdx+0x56],dl
  4430bd:	(bad)  
  4430be:	(bad)  
  4430bf:	(bad)  
  4430c0:	out    0xe6,al
  4430c2:	in     al,0xe3
  4430c4:	(bad)  
  4430c6:	fstp   st(5)
  4430c8:	div    BYTE PTR [rdi]
	...
  4430d2:	add    BYTE PTR [rax],al
  4430d4:	(bad)  
  4430d5:	clc    
  4430d6:	not    DWORD PTR [rcx+0x7e]
  4430d9:	(bad)  
  4430da:	push   rdx
  4430db:	pop    rcx
  4430dc:	out    dx,al
  4430dd:	out    dx,al
  4430de:	in     eax,dx
  4430df:	(bad)  
  4430e0:	(bad)  
  4430e1:	out    0xe6,al
  4430e3:	out    0xe3,al
  4430e5:	jrcxz  0x4430c6
  4430e7:	fcomip st,st(6)
  4430e9:	(bad)  
	...
  4430f2:	add    BYTE PTR [rax],al
  4430f4:	(bad)  
  4430f5:	clc    
  4430f6:	clc    
  4430f7:	push   rcx
  4430f8:	enter  0x5c52,0xf3
  4430fc:	out    dx,al
  4430fd:	out    dx,al
  4430fe:	out    dx,al
  4430ff:	(bad)  
  443100:	(bad)  
  443101:	(bad)  
  443102:	jmp    0xffffffffe42917ed
  443107:	fcomip st,st(6)
  443109:	(bad)  
	...
  443112:	add    BYTE PTR [rax],al
  443114:	(bad)  
  443115:	clc    
  443116:	clc    
  443117:	push   rcx
  443118:	push   rdx
  443119:	pop    rsp
  44311a:	div    bl
  44311c:	repz repz out dx,al
  44311f:	repz (bad) 
  443121:	in     eax,dx
  443122:	(bad)  
  443123:	(bad)  
  443124:	out    0xe6,al
  443126:	in     al,0xe4
  443128:	div    BYTE PTR [rdi]
	...
  443132:	add    BYTE PTR [rax],al
  443134:	(bad)  
  443135:	clc    
  443136:	clc    
  443137:	push   rax
  443138:	pop    rdx
  443139:	clc    
  44313a:	div    dh
  44313c:	repz repz out dx,al
  44313f:	repz out dx,al
  443141:	in     eax,dx
  443142:	(bad)  
  443143:	(bad)  
  443144:	(bad)  
  443145:	out    0xe6,al
  443147:	in     al,0xf6
  443149:	(bad)  
	...
  443152:	add    BYTE PTR [rax],al
  443154:	(bad)  
  443155:	div    dh
  443157:	div    dh
  443159:	div    dh
  44315b:	div    dh
  44315d:	div    dh
  44315f:	div    dh
  443161:	idiv   al
  443163:	div    dh
  443165:	div    dh
  443167:	div    dh
  443169:	(bad)  
	...
  443172:	add    BYTE PTR [rax],al
  443174:	(bad)  
  443175:	(bad)  
  443176:	(bad)  
  443177:	(bad)  
  443178:	(bad)  
  443179:	(bad)  
  44317a:	(bad)  
  44317b:	(bad)  
  44317c:	(bad)  
  44317d:	(bad)  
  44317e:	(bad)  
  44317f:	(bad)  
  443180:	(bad)  
  443181:	(bad)  
  443182:	(bad)  
  443183:	(bad)  
  443184:	(bad)  
  443185:	(bad)  
  443186:	(bad)  
  443187:	(bad)  
  443188:	(bad)  
  443189:	(bad)  
	...
  443192:	add    BYTE PTR [rdi],dh
  443194:	(bad)  
  443195:	(bad)  
  443196:	(bad)  
  443197:	(bad)  
  443198:	cmp    DWORD PTR [rbp-0x72747579],eax
  44319e:	mov    gs,WORD PTR [rcx-0x4d4d4d57]
  4431a4:	mov    dl,0xb2
  4431a6:	mov    dl,0xb2
  4431a8:	mov    dl,0x37
  4431aa:	(bad)  
  4431ab:	add    BYTE PTR [rax],al
  4431ad:	add    BYTE PTR [rax],al
  4431af:	add    BYTE PTR [rax],al
  4431b1:	add    BYTE PTR [rdi],dh
  4431b3:	mov    dl,0x37
  4431b5:	(bad)  
  4431b6:	(bad)  
  4431b7:	(bad)  
  4431b8:	(bad)  
  4431b9:	(bad)  
  4431ba:	(bad)  
  4431bb:	(bad)  
  4431bc:	(bad)  
  4431bd:	(bad)  
  4431be:	(bad)  
  4431bf:	(bad)  
  4431c0:	(bad)  
  4431c1:	(bad)  
  4431c2:	(bad)  
  4431c3:	(bad)  
  4431c4:	(bad)  
  4431c5:	(bad)  
  4431c6:	(bad)  
  4431c7:	(bad)  
  4431c8:	(bad)  
  4431c9:	(bad)  
  4431ca:	mov    dl,0x37
  4431cc:	add    BYTE PTR [rax],al
  4431ce:	add    BYTE PTR [rax],al
  4431d0:	add    BYTE PTR [rdi],dh
  4431d2:	mov    dl,0x37
  4431d4:	add    BYTE PTR [rdi],dh
  4431d6:	mov    dl,0xb2
  4431d8:	mov    dl,0xb2
  4431da:	mov    dl,0xb2
  4431dc:	mov    dl,0xb2
  4431de:	mov    dl,0xb2
  4431e0:	mov    dl,0xb2
  4431e2:	mov    dl,0xb2
  4431e4:	scas   al,BYTE PTR es:[rdi]
  4431e5:	mov    dl,0xae
  4431e7:	mov    dl,0x37
  4431e9:	add    BYTE PTR [rdi],dh
  4431eb:	mov    dl,0x37
  4431ed:	add    BYTE PTR [rax],al
  4431ef:	add    BYTE PTR [rdi],dh
  4431f1:	(bad)  
  4431f2:	(bad)  
  4431f3:	add    BYTE PTR [rax],al
  4431f5:	(bad)  
  4431f6:	(bad)  
  4431f7:	(bad)  
  4431f8:	rcl    ah,cl
  4431fa:	(bad)  
  4431fb:	fcmovnbe st,st(2)
  4431fd:	(bad)  
  4431fe:	rcl    ah,cl
  443200:	(bad)  
  443201:	rcl    ah,cl
  443203:	(bad)  
  443204:	(bad)  
  443205:	fcmovnbe st,st(2)
  443207:	(bad)  
  443208:	(bad)  
  443209:	add    BYTE PTR [rax],al
  44320b:	(bad)  
  44320c:	(bad)  
  44320d:	(bad)  
  44320e:	add    BYTE PTR [rax],al
  443210:	add    BYTE PTR [rax],al
  443212:	add    BYTE PTR [rax],al
  443214:	add    BYTE PTR [rdi],dh
  443216:	(bad)  
  443217:	call   0xffffffffeb2d1909
  44321c:	in     eax,dx
  44321d:	out    0xed,al
  44321f:	out    0xed,al
  443221:	out    0xed,al
  443223:	out    0xe9,al
  443225:	(bad)  
  443226:	(bad)  
  443227:	call   0x443263
	...
  443234:	add    BYTE PTR [rdi],dh
  443236:	(bad)  
  443237:	(bad)  
  443238:	(bad)  
  443239:	(bad)  
  44323a:	(bad)  
  44323b:	(bad)  
  44323c:	(bad)  
  44323d:	(bad)  
  44323e:	(bad)  
  44323f:	(bad)  
  443240:	(bad)  
  443241:	(bad)  
  443242:	(bad)  
  443243:	(bad)  
  443244:	(bad)  
  443245:	(bad)  
  443246:	(bad)  
  443247:	(bad)  
  443248:	(bad)  
	...
  44326d:	add    BYTE PTR [rax],al
  44326f:	add    bh,bh
  443271:	(bad)  
  443272:	cld    
  443273:	(bad)  
  443274:	lock add BYTE PTR [rax],al
  443277:	and    esi,eax
  443279:	add    BYTE PTR [rax],al
  44327b:	add    eax,esi
  44327d:	add    BYTE PTR [rax],al
  44327f:	add    eax,esi
  443281:	add    BYTE PTR [rax],al
  443283:	add    eax,esi
  443285:	add    BYTE PTR [rax],al
  443287:	add    esi,eax
  443289:	add    BYTE PTR [rax],al
  44328b:	add    al,dh
  44328d:	add    BYTE PTR [rax],al
  44328f:	add    al,dh
  443291:	add    BYTE PTR [rax],al
  443293:	add    al,dh
  443295:	add    BYTE PTR [rax],al
  443297:	add    al,dh
  443299:	add    BYTE PTR [rax],al
  44329b:	add    esi,eax
  44329d:	add    BYTE PTR [rax],al
  44329f:	add    DWORD PTR [rax],eax
  4432a1:	add    BYTE PTR [rax],al
  4432a3:	add    DWORD PTR [rax],eax
  4432a5:	add    BYTE PTR [rax],al
  4432a7:	and    eax,DWORD PTR [rax]
  4432a9:	add    BYTE PTR [rax],al
  4432ab:	(bad)  
  4432ac:	add    BYTE PTR [rax],al
  4432ae:	add    BYTE PTR [rdi],bh
  4432b0:	add    BYTE PTR [rax],al
  4432b2:	add    BYTE PTR [rdi],bh
  4432b4:	add    BYTE PTR [rax],al
  4432b6:	add    BYTE PTR [rdi],bh
  4432b8:	add    BYTE PTR [rax],al
  4432ba:	add    BYTE PTR [rdi],bh
  4432bc:	lock add BYTE PTR [rax],al
  4432bf:	(bad)  
  4432c0:	lock add BYTE PTR [rax],al
  4432c3:	(bad)  
  4432c4:	lock add BYTE PTR [rax],al
  4432c7:	(bad)  
  4432c8:	lock add BYTE PTR [rax],al
  4432cb:	(bad)  
  4432cc:	lock add BYTE PTR [rax],al
  4432cf:	(bad)  
  4432d0:	lock add BYTE PTR [rax],al
  4432d3:	(bad)  
  4432d4:	loopne 0x4432d6
  4432d6:	add    BYTE PTR [rdi],bl
  4432d8:	rol    BYTE PTR [rax],0x0
  4432db:	js     0x188b32e1
  4432e1:	add    BYTE PTR [rax],al
  4432e3:	movsxd edi,eax
  4432e5:	add    BYTE PTR [rax],al
  4432e7:	jg     0x4432e1
  4432e9:	add    BYTE PTR [rax],al
  4432eb:	jg     0x4432ec
  4432ed:	(bad)  
  4432ee:	(bad)  
  4432ef:	jmp    FWORD PTR [rax]
  4432f1:	add    BYTE PTR [rax],al
  4432f3:	add    BYTE PTR [rax],dl
  4432f5:	add    BYTE PTR [rax],al
  4432f7:	add    BYTE PTR [rax],ah
  4432f9:	add    BYTE PTR [rax],al
  4432fb:	add    BYTE PTR [rcx],al
  4432fd:	add    BYTE PTR [rax],cl
  4432ff:	add    BYTE PTR [rax],al
  443301:	add    BYTE PTR [rax],al
  443303:	add    BYTE PTR [rax],al
  443305:	add    DWORD PTR [rax],eax
	...
  44330f:	add    BYTE PTR [rax],al
  443311:	add    DWORD PTR [rax],eax
  443313:	add    BYTE PTR [rax],al
  443315:	add    DWORD PTR [rax],eax
  443317:	add    BYTE PTR [rax],al
  443319:	add    BYTE PTR [rax],al
  44331b:	add    BYTE PTR [rsi-0x71ffb1af],bl
  443321:	push   rbx
  443322:	push   rbx
  443323:	add    BYTE PTR [rcx-0x6bffa9a6],bl
  443329:	pop    rbx
  44332a:	pop    rsp
  44332b:	add    BYTE PTR [rdx-0x5effa9aa],ah
  443331:	pop    rsi
  443332:	pop    rsi
  443333:	add    BYTE PTR [rdi-0x4fffa2a3],ch
  443339:	push   rdi
  44333a:	push   rsi
  44333b:	add    BYTE PTR [rdi-0x61ff9fa1],bh
  443341:	movsxd esp,DWORD PTR [rbx+0x0]
  443344:	popf   
  443345:	push   0x69ab0066
  44334a:	imul   eax,DWORD PTR [rax],0xffffffb0
  44334d:	movsxd eax,DWORD PTR gs:[rax]
  443350:	mov    esi,0xb4006565
  443355:	imul   ebp,DWORD PTR [rbx+0x0],0xffffffbb
  443359:	outs   dx,BYTE PTR ds:[rsi]
  44335a:	outs   dx,BYTE PTR ds:[rsi]
  44335b:	add    BYTE PTR [rbx-0x45ff8788],ah
  443361:	jg     0x4433df
  443363:	add    ah,cl
  443365:	jo     0x4433d6
  443367:	add    BYTE PTR [rdi+rbp*4],dl
  44336a:	add    BYTE PTR ss:[rax],bl
  44336d:	mov    edx,0xbc1e003c
  443372:	add    BYTE PTR [r11],sil
  443375:	lods   eax,DWORD PTR ds:[rsi]
  443376:	rex.WX add BYTE PTR [rax],spl
  443379:	mov    edi,0xbb2f0043
  44337e:	rex.WRXB add BYTE PTR [r13-0x67],r11b
  443382:	pop    rbp
  443383:	add    BYTE PTR [rdi-0x66],ch
  443386:	data16 add BYTE PTR [rdx],ch
  443389:	mov    DWORD PTR [rdx+0x0],0x43c92b
  443390:	xor    al,0xd3
  443392:	rex.WRX add BYTE PTR [rdx],r15b
  443395:	fist   DWORD PTR [rsi+0x0]
  443398:	cmp    eax,0x410058dd
  44339d:	in     al,0x5d
  44339f:	add    BYTE PTR [rsp+rbx*8+0x66],dl
  4433a3:	add    BYTE PTR [rbp-0x24],ah
  4433a6:	js     0x4433a8
  4433a8:	rex.RB call 0xffffffffea9d3410
  4433ae:	jae    0x4433b0
  4433b0:	pop    rdx
  4433b1:	jmp    0xffffffffe8b2342a
  4433b6:	test   BYTE PTR [rax],al
  4433b8:	jns    0x44339d
  4433ba:	mov    al,BYTE PTR [rax]
  4433bc:	jg     0x4433a6
  4433be:	nop
  4433bf:	add    ch,bl
  4433c1:	mov    eax,DWORD PTR [rdi-0x6e6d1e00]
  4433c7:	add    ah,al
  4433c9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4433ca:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4433cb:	add    ah,al
  4433cd:	lods   al,BYTE PTR ds:[rsi]
  4433ce:	stos   DWORD PTR es:[rdi],eax
  4433cf:	add    BYTE PTR [rbx-0x7bff6b15],al
  4433d5:	jmp    0x44336e
  4433d7:	add    BYTE PTR [rbp-0x79ff6813],al
  4433dd:	(bad)  
  4433de:	cwde   
  4433df:	add    BYTE PTR [rsi-0x6aff6511],al
  4433e5:	(bad)  
  4433e6:	movabs eax,ds:0xa4d99700a2d89600
  4433ef:	add    BYTE PTR [rax-0x2dff5a26],bl
  4433f5:	sar    BYTE PTR [rdi-0x3d3b2c00],0x0
  4433fc:	(bad)  
  4433fd:	(bad)
  443400:	fadd   st,st(2)
  443402:	rol    DWORD PTR [rax],0xdd
  443405:	iret   
  443406:	(bad)  
  443407:	add    dh,bl
  443409:	rcl    cl,cl
  44340b:	add    cl,ah
  44340d:	(bad)  
  44340e:	(bad)  
  44340f:	add    ah,ch
  443411:	int3   
  443412:	int3   
  443413:	add    al,ah
  443415:	rcl    cl,cl
  443417:	add    cl,ah
  443419:	(bad)  
  44341a:	rol    BYTE PTR [rax],cl
  44341c:	jrcxz  0x4433f5
  44341e:	(bad)  
  44341f:	add    ah,ah
  443421:	fcom   st(5)
  443423:	add    dh,ah
  443425:	fcmovnu st,st(2)
  443427:	add    bh,ah
  443429:	fstp   st(2)
  44342b:	add    ch,al
  44342d:	cld    
  44342e:	int    0x0
  443430:	(bad)  
  443431:	loopne 0x443411
  443433:	add    ch,ch
  443435:	jrcxz  0x443418
  443437:	add    dh,ch
  443439:	in     al,0xe2
  44343b:	add    al,dh
  44343d:	out    0xe5,eax
  44343f:	add    ah,dh
  443441:	out    0xe5,eax
  443443:	add    bl,dh
  443445:	(bad)  
  443446:	call   0xffffffffed32254b
  44344b:	add    dh,dh
  44344d:	lock out dx,al
  44344f:	add    dh,dh
  443451:	repnz icebp 
  443453:	add    bh,dh
  443455:	hlt    
  443456:	repz add cl,bh
  443459:	repnz lock add dl,bh
  44345d:	div    dh
  44345f:	add    bl,bh
  443461:	stc    
  443462:	clc    
	...
  443713:	add    bh,bh
  443715:	(bad)  
  443716:	inc    DWORD PTR [rax]
  443718:	add    BYTE PTR [rax],al
  44371a:	adc    DWORD PTR [rcx],edx
  44371c:	adc    DWORD PTR [rcx],edx
  44371e:	adc    DWORD PTR [rcx],edx
  443720:	adc    DWORD PTR [rcx],edx
  443722:	sub    eax,0x32d02
  443727:	add    BYTE PTR [rax],al
  443729:	add    BYTE PTR [rcx],dl
  44372b:	(bad)  
  44372c:	cmp    ecx,DWORD PTR [rsp+rcx*2+0x38]
  443730:	(bad)  
  443731:	sub    eax,0x501072d
  443736:	add    BYTE PTR [rax],al
  443738:	add    BYTE PTR [rax],al
  44373a:	adc    DWORD PTR [rdi],edi
  44373c:	(bad)  
  44373d:	sbb    bl,BYTE PTR [rdx]
  44373f:	rex.WR cmp BYTE PTR [rdi],r9b
  443742:	adc    BYTE PTR [rip+0x6081312],cl        # 0x64c4a5a
  443748:	add    BYTE PTR [rax],al
  44374a:	sub    eax,0x181a4f4f
  44374f:	sbb    cl,BYTE PTR [rdx+rdi*1+0x2b]
  443753:	add    al,0x3c
  443755:	or     al,0x9
  443757:	add    BYTE PTR [rdx],bl
  443759:	sbb    bl,BYTE PTR [rdx]
  44375b:	sbb    bl,BYTE PTR [rdx]
  44375d:	sbb    al,BYTE PTR [rbp+0x18]
  443760:	sbb    al,BYTE PTR [rip+0x50b0505]        # 0x54f3c6b
  443766:	(bad)  
  443767:	or     bl,BYTE PTR [rcx]
  443769:	xor    BYTE PTR [rax],dh
  44376b:	xor    BYTE PTR [rcx],ch
  44376d:	sub    DWORD PTR [rax*2+0x53e1b18],ebx
  443774:	sub    al,BYTE PTR [rip+0x32190000]        # 0x325d377a
  44377a:	and    al,0x24
  44377c:	and    DWORD PTR [rdi],ebx
  44377e:	(bad)  
  44377f:	sbb    al,0x45
  443781:	adc    eax,0x54a0522
  443786:	add    BYTE PTR [rax],al
  443788:	sbb    DWORD PTR [rdx],esi
  44378a:	es and eax,0x231f2124
  443790:	adc    al,0x33
  443792:	rex.WRXB cmp al,0x4d
  443795:	sub    eax,0x16170000
  44379a:	(bad)  
  44379b:	(bad)  
  44379c:	(bad)  
  44379d:	(bad)  
  44379e:	(bad)  
  44379f:	adc    al,0x34
  4437a1:	rex.WRXB
  4437a2:	rex.XB
  4437a3:	rex.X
  4437a4:	adc    QWORD PTR [r8],r8
  4437a7:	add    BYTE PTR [rax],al
  4437a9:	add    BYTE PTR [rdi+rcx*2],ch
  4437ac:	rex.WRB (bad) 
  4437ae:	adc    al,0x34
  4437b0:	rex.WRXB
  4437b1:	rex.W
  4437b2:	rex.RX
  4437b3:	rex.XB
  4437b4:	adc    QWORD PTR [r8],r8
  4437b7:	add    BYTE PTR [rax],al
  4437b9:	add    BYTE PTR [rcx],dl
  4437bb:	push   rax
  4437bc:	rex.WRXB adc rax,0x4a4c5236
  4437c2:	rex.W
  4437c3:	rex.RX
  4437c4:	adc    QWORD PTR [r8],r8
  4437c7:	add    BYTE PTR [rax],al
  4437c9:	add    BYTE PTR [rcx],dl
  4437cb:	push   rdx
  4437cc:	push   rdx
  4437cd:	push   rdx
  4437ce:	push   rdx
  4437cf:	push   rdx
  4437d0:	push   rdx
  4437d1:	push   rdx
  4437d2:	push   rdx
  4437d3:	push   rdx
  4437d4:	push   rdx
  4437d5:	adc    DWORD PTR [rax],eax
  4437d7:	add    BYTE PTR [rax],al
  4437d9:	add    BYTE PTR [rcx],dl
  4437db:	adc    DWORD PTR [rcx],edx
  4437dd:	adc    DWORD PTR [rcx],edx
  4437df:	adc    DWORD PTR [rcx],edx
  4437e1:	adc    DWORD PTR [rcx],edx
  4437e3:	adc    DWORD PTR [rcx],edx
  4437e5:	adc    DWORD PTR [rax],eax
  4437e7:	add    BYTE PTR [rax],al
  4437e9:	adc    DWORD PTR [rax],eax
  4437eb:	adc    DWORD PTR [rip+0x2d2d2d2d],ebp        # 0x2d71651e
  4437f1:	sub    eax,0x112d2d
  4437f6:	adc    DWORD PTR [rax],eax
  4437f8:	adc    DWORD PTR [rax],eax
  4437fa:	add    BYTE PTR [rcx],dl
  4437fc:	cmp    eax,0x3d3d3d3d
  443801:	cmp    eax,0x113d3d
  443806:	add    BYTE PTR [rcx],dl
  443808:	add    BYTE PTR [rax],al
  44380a:	add    BYTE PTR [rcx],dl
  44380c:	adc    DWORD PTR [rcx],edx
  44380e:	adc    DWORD PTR [rcx],edx
  443810:	adc    DWORD PTR [rcx],edx
  443812:	adc    DWORD PTR [rcx],edx
  443814:	adc    DWORD PTR [rax],eax
  443816:	add    BYTE PTR [rax],al
  443818:	rol    BYTE PTR [rbx],0x0
  44381b:	add    al,al
  44381d:	add    eax,DWORD PTR [rax]
  44381f:	add    al,al
  443821:	add    BYTE PTR [rax],al
  443823:	add    al,al
  443825:	add    DWORD PTR [rax],eax
  443827:	add    BYTE PTR [rax],al
  443829:	add    BYTE PTR [rax],al
  44382b:	add    BYTE PTR [rax],al
  44382d:	add    eax,DWORD PTR [rax]
  44382f:	add    BYTE PTR [rax],al
  443831:	add    eax,DWORD PTR [rax]
  443833:	add    BYTE PTR [rax],al
  443835:	add    eax,DWORD PTR [rax]
  443837:	add    BYTE PTR [rax],al
  443839:	add    eax,DWORD PTR [rax]
  44383b:	add    al,al
  44383d:	add    eax,DWORD PTR [rax]
  44383f:	add    al,al
  443841:	add    eax,DWORD PTR [rax]
  443843:	add    al,al
  443845:	add    eax,DWORD PTR [rax]
  443847:	add    al,al
  443849:	add    eax,DWORD PTR [rax]
  44384b:	add    BYTE PTR [rax+0x60000005],ah
  443851:	(bad)  
  443852:	add    BYTE PTR [rax],al
  443854:	loopne 0x44385d
  443856:	add    BYTE PTR [rax],al
  443858:	sub    BYTE PTR [rax],al
  44385a:	add    BYTE PTR [rax],al
  44385c:	and    BYTE PTR [rax],al
  44385e:	add    BYTE PTR [rax],al
  443860:	add    BYTE PTR [rax],al
  443863:	add    BYTE PTR [rcx],al
  443865:	add    BYTE PTR [rax],ah
  443867:	add    BYTE PTR [rax],al
  443869:	add    BYTE PTR [rax],al
  44386b:	add    BYTE PTR [rax+0x10],al
	...
  4438d5:	add    BYTE PTR [rax],al
  4438d7:	add    BYTE PTR [rsi+0x37],bl
  4438da:	(bad)  
  4438db:	mov    ch,0x73
  4438dd:	cmp    BYTE PTR [rax],bh
  4438df:	push   QWORD PTR [rsi+0x3b]
  4438e2:	cmp    al,0xff
  4438e4:	(bad)  
  4438e5:	cs (bad) 
  4438e7:	inc    DWORD PTR [rax]
	...
  44390d:	add    BYTE PTR [rax],al
  44390f:	add    BYTE PTR [rbx-0x5c008788],ah
  443915:	js     0x44398f
  443917:	jmp    QWORD PTR [rbx-0x5c008788]
  44391d:	js     0x443997
  44391f:	jmp    QWORD PTR [rbx-0x5c008788]
  443925:	js     0x44399f
  443927:	jmp    QWORD PTR [rbx-0x5c008788]
  44392d:	js     0x4439a7
  44392f:	jmp    QWORD PTR [rbx-0x5c008788]
  443935:	js     0x4439af
  443937:	jmp    QWORD PTR [rbx-0x5c008788]
  44393d:	js     0x4439b7
  44393f:	jmp    QWORD PTR [rbx-0x5c008788]
  443945:	js     0x4439bf
  443947:	jmp    QWORD PTR [rbx+0x6fff7878]
  44394d:	cmp    bh,BYTE PTR [rbx]
  44394f:	push   QWORD PTR [rcx+0x37]
  443952:	(bad)  
  443953:	jmp    QWORD PTR [rbx+0x50ff7878]
  443959:	sub    eax,0x4b8eff2e
  44395e:	rex.WXB inc r12
  443961:	(bad)  
  443962:	(bad)  
  443963:	jmp    QWORD PTR [rax+0x2d]
  443966:	sub    eax,0xff
  44396b:	add    BYTE PTR [rcx+0x68be5859],bh
  443971:	sub    eax,0x428afe2e
  443976:	rex.X mov al,0x0
	...
  44398d:	add    BYTE PTR [rax],al
  44398f:	add    BYTE PTR [rbx-0x26008788],ah
  443995:	retf   0xffc8
  443998:	xlat   BYTE PTR ds:[rbx]
  443999:	enter  0xffc7,0xd6
  44399d:	mov    ch,0xff
  4439a0:	(bad)  
  4439a1:	(bad)  
  4439a5:	ret    0xffc1
  4439a8:	rol    al,cl
  4439aa:	mov    edi,0xbebfd1ff
  4439af:	dec    edi
  4439b1:	mov    esi,0xbcceffbc
  4439b6:	mov    ebx,0xb9bbcdff
  4439bb:	dec    ebx
  4439bd:	mov    edx,0xb8cbffb8
  4439c2:	mov    bh,0xff
  4439c4:	rcl    BYTE PTR [rbp+0x4b8bff95],0x4c
  4439cb:	inc    ecx
  4439cd:	jbe    0x443a46
  4439cf:	dec    ecx
  4439d1:	jnp    0x443a4e
  4439d3:	call   FWORD PTR [rdi+0x2b]
  4439d6:	sub    edi,edi
  4439d8:	imul   esi,DWORD PTR [rax],0x66bbff31
  4439de:	addr32 dec eax
  4439e1:	call   WORD PTR [eax+0x49ff4545]
  4439e9:	(bad)  
  4439ea:	and    bh,dh
  4439ec:	jae    0x443a26
  4439ee:	cmp    edi,edi
  4439f0:	test   al,0x51
  4439f2:	push   rcx
  4439f3:	push   QWORD PTR [rsi+0x38]
  4439f6:	cmp    edi,edi
  4439f8:	cmp    BYTE PTR [rsp+rdi*1],0xc9
	...
  443a10:	movabs ds:0xdcffcdcfddff7878,eax
  443a19:	int    0xcc
  443a1b:	(bad)  
  443a1c:	fcmove st,st(2)
  443a1e:	leave  
  443a1f:	(bad)  
  443a20:	fmul   st,st(1)
  443a22:	(bad)  
  443a23:	call   rsi
  443a25:	mov    esi,0xc4c5d5ff
  443a2b:	call   rbx
  443a2d:	(bad)  
  443a31:	ret    0xffc0
  443a34:	rol    eax,1
  443a36:	mov    edi,0xbdbfcfff
  443a3b:	dec    edi
  443a3d:	mov    ebp,0xbbceffbb
  443a42:	mov    edx,0x8484bdff
  443a47:	jmp    QWORD PTR [rsi-0x1b00a1a2]
  443a4d:	xchg   ebx,eax
  443a4e:	xchg   ebx,eax
  443a4f:	jmp    rax
  443a51:	mov    WORD PTR [rdi+rdi*8-0x838335],cs
  443a58:	vpcmpeqb ymm15,ymm1,ymm7
  443a5c:	shl    DWORD PTR [rbp+0x75],1
  443a5f:	dec    esp
  443a61:	outs   dx,BYTE PTR ds:[rsi]
  443a62:	outs   dx,BYTE PTR ds:[rsi]
  443a63:	dec    eax
  443a65:	addr32 jmp QWORD PTR [ebx-0x4b00acad]
  443a6d:	pop    rax
  443a6e:	push   rdi
  443a6f:	inc    ecx
  443a71:	pop    rbp
  443a72:	pop    rsp
  443a73:	(bad)  
  443a74:	mov    edx,0x6fff595a
  443a79:	ss (bad) 
  443a7b:	inc    DWORD PTR [rax]
	...
  443a8d:	add    BYTE PTR [rax],al
  443a8f:	add    BYTE PTR [rbx-0x20008788],ah
  443a95:	rcl    al,cl
  443a97:	(bad)  
  443a98:	(bad)  
  443a9a:	(bad)  
  443a9b:	(bad)  
  443a9c:	fmul   st(5),st
  443a9e:	int3   
  443a9f:	(bad)  
  443aa0:	fcmove st,st(3)
  443aa2:	retf   0xd9ff
  443aa5:	leave  
  443aa6:	enter  0xd7ff,0xc7
  443aaa:	(bad)  
  443aab:	call   rsi
  443aad:	mov    ch,0xff
  443ab0:	(bad)  
  443ab1:	(bad)  
  443ab5:	ret    0xffc1
  443ab8:	rol    cl,cl
  443aba:	sar    bh,0xd0
  443abd:	mov    edi,0xbdcfffbe
  443ac2:	mov    esp,0x9493c6ff
  443ac7:	inc    esp
  443ac9:	add    BYTE PTR [rcx+0x7575bcff],0xff
  443ad0:	in     eax,0x93
  443ad2:	xchg   ebx,eax
  443ad3:	jmp    rax
  443ad5:	mov    WORD PTR [rdi+rdi*8-0x7a7a24],cs
  443adc:	(bad)  
  443add:	jge    0x443b5c
  443adf:	call   rcx
  443ae1:	jbe    0x443b58
  443ae3:	dec    esp
  443ae5:	outs   dx,BYTE PTR ds:[rsi]
  443ae6:	ins    DWORD PTR es:[rdi],dx
  443ae7:	dec    eax
  443ae9:	addr32 inc bx
  443aed:	(bad)  
  443aee:	(bad)  
  443aef:	(bad)  
  443af0:	mov    esi,0x74ff5b5c
  443af5:	cmp    BYTE PTR [rcx],bh
  443af7:	call   QWORD PTR [rcx+0x8a4343]
	...
  443b0d:	add    BYTE PTR [rax],al
  443b0f:	add    BYTE PTR [rbx-0x1e008788],ah
  443b15:	(bad)  
  443b16:	sar    bh,cl
  443b18:	loopne 0x443aec
  443b1a:	sar    bh,1
  443b1c:	(bad)  
  443b1e:	(bad)  
  443b1f:	(bad)  
  443b20:	fmul   st(6),st
  443b22:	int3   
  443b23:	(bad)  
  443b24:	fcmovne st,st(4)
  443b26:	retf   0xd9ff
  443b29:	retf   0xffc8
  443b2c:	fmul   st,st(0)
  443b2e:	(bad)  
  443b2f:	call   rsi
  443b31:	mov    ch,0xff
  443b34:	(bad)  
  443b35:	(bad)
  443b38:	rol    ebx,cl
  443b3a:	sar    edi,0xd2
  443b3d:	sar    DWORD PTR [rdi-0x41402e01],0xff
  443b44:	iret   
  443b45:	mov    esi,0xbcceffbc
  443b4a:	mov    ebx,0x6c6ab3ff
  443b4f:	jmp    rbp
  443b51:	xchg   edi,eax
  443b52:	cwde   
  443b53:	jmp    rbp
  443b55:	xchg   ebx,eax
  443b56:	xchg   ebx,eax
  443b57:	inc    edx
  443b59:	je     0x443bd0
  443b5b:	jmp    QWORD PTR [rax+riz*2+0x5ca0ff61]
  443b62:	pop    rbp
  443b63:	(bad)  
  443b64:	mov    ecx,0xccff6868
  443b69:	outs   dx,BYTE PTR ds:[rsi]
  443b6a:	ins    DWORD PTR es:[rdi],dx
  443b6b:	inc    edi
  443b6d:	jmp    WORD PTR [ebp+0x63ff5353]
  443b75:	(bad)  
  443b76:	xor    bl,bh
	...
  443b90:	movabs ds:0xe1ffd5d6e4ff7878,eax
  443b99:	(bad)  
  443b9a:	(bad)  
  443b9b:	(bad)  
  443b9c:	(bad)  
  443b9e:	sar    edi,1
  443ba0:	(bad)  
  443ba2:	iret   
  443ba3:	(bad)  
  443ba4:	fmul   st(7),st
  443ba6:	int    0xff
  443ba8:	fcmovne st,st(5)
  443baa:	retf   
  443bab:	(bad)  
  443bac:	fxch   st(3)
  443bae:	leave  
  443baf:	(bad)  
  443bb0:	fmul   st,st(0)
  443bb2:	(bad)  
  443bb3:	call   rsi
  443bb5:	mov    ch,0xff
  443bb8:	(bad)  
  443bb9:	(bad)
  443bbc:	rol    esp,cl
  443bbe:	ret    0xa9ff
  443bc1:	mov    cl,BYTE PTR [rbx+0x5b5ab7ff]
  443bc7:	jmp    FWORD PTR [rcx+rbx*2+0x5cb4ff5a]
  443bce:	pop    rbp
  443bcf:	(bad)  
  443bd0:	out    dx,eax
  443bd1:	movabs ds:0x5389ff7978c1ffa3,al
  443bda:	push   rbx
  443bdb:	dec    edx
  443bdd:	cwde   
  443bde:	cwde   
  443bdf:	call   rbp
  443be1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  443be2:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  443be3:	inc    ecx
  443be5:	xchg   DWORD PTR [rax+0x6767b8ff],ecx
  443beb:	dec    esp
  443bed:	outs   dx,BYTE PTR ds:[rsi]
  443bee:	ins    DWORD PTR es:[rdi],dx
  443bef:	dec    eax
  443bf1:	dec    WORD PTR [ebp+0x70ff3b3b]
  443bf9:	cmp    BYTE PTR [rcx],bh
  443bfb:	jmp    FWORD PTR [rsi+0x36]
  443bfe:	(bad)  
  443bff:	inc    DWORD PTR [rax]
	...
  443c0d:	add    BYTE PTR [rax],al
  443c0f:	add    BYTE PTR [rbx-0x1a008788],ah
  443c15:	(bad)  
  443c17:	jmp    rbx
  443c19:	fcom   st(6)
  443c1b:	jmp    rdx
  443c1d:	(bad)  
  443c1e:	(bad)  
  443c1f:	jmp    rcx
  443c21:	rcl    edx,cl
  443c23:	(bad)  
  443c24:	(bad)  
  443c26:	iret   
  443c27:	(bad)  
  443c28:	(bad)  
  443c2a:	(bad)  
  443c2b:	(bad)  
  443c2c:	fcmovne st,st(6)
  443c2e:	int3   
  443c2f:	(bad)  
  443c30:	fcmove st,st(3)
  443c32:	leave  
  443c33:	(bad)  
  443c34:	fxch   st(1)
  443c36:	(bad)  
  443c37:	call   rdi
  443c39:	mov    esi,0xc4c5d6ff
  443c3f:	call   QWORD PTR [rdi-0x22008e90]
  443c45:	test   DWORD PTR [rsi-0x47490301],eax
  443c4b:	(bad)  
  443c4c:	stc    
  443c4d:	mov    cl,0xb2
  443c4f:	push   rsp
  443c51:	stos   BYTE PTR es:[rdi],al
  443c52:	stos   DWORD PTR es:[rdi],eax
  443c53:	(bad)  
  443c54:	jge    0x443c93
  443c56:	cmp    eax,0xa1a1d1ff
  443c5b:	dec    ebx
  443c5d:	mov    ecx,0xf1f6ffb9
  443c62:	out    dx,eax
  443c63:	(bad)  
  443c64:	mov    eax,0x9bff7e7e
  443c69:	push   rdi
  443c6a:	pop    rax
  443c6b:	call   rcx
  443c6d:	jne    0x443ce4
  443c6f:	dec    esp
  443c71:	outs   dx,BYTE PTR ds:[rsi]
  443c72:	ins    DWORD PTR es:[rdi],dx
  443c73:	inc    edi
  443c75:	addr32 inc sp
  443c79:	(bad)  
  443c7a:	(bad)  
  443c7b:	(bad)  
  443c7c:	jge    0x443cbb
  443c7e:	inc    DWORD PTR ds:[rax]
	...
  443c8d:	add    BYTE PTR [rax],al
  443c8f:	add    BYTE PTR [rbx-0x18008788],ah
  443c95:	(bad)  
  443c97:	jmp    rsi
  443c99:	fcmovu st,st(0)
  443c9b:	call   FWORD PTR [rbp-0x67]
  443c9e:	pop    rbp
  443c9f:	jmp    FWORD PTR [rdi-0x4e]
  443ca2:	jns    0x443ca3
  443ca4:	loope  0x443c7a
  443ca6:	sar    bh,cl
  443ca8:	(bad)  
  443caa:	sar    bh,1
  443cac:	fmulp  st(7),st
  443cae:	(bad)  
  443caf:	(bad)  
  443cb0:	fmul   st(6),st
  443cb2:	int    0xff
  443cb4:	fcmovne st,st(3)
  443cb6:	retf   
  443cb7:	(bad)  
  443cb8:	fxch   st(2)
  443cba:	leave  
  443cbb:	(bad)  
  443cbc:	fadd   st,st(7)
  443cbe:	(bad)  
  443cbf:	call   QWORD PTR [rdi-0x21008e8f]
  443cc5:	xchg   BYTE PTR [rsi-0x3e3f0201],al
  443ccb:	(bad)  
  443ccc:	sti    
  443ccd:	mov    ch,0xb6
  443ccf:	(bad)  
  443cd0:	clc    
  443cd1:	mov    cl,0xb2
  443cd3:	call   QWORD PTR [rax-0x2a00b6b7]
  443cd9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  443cda:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  443cdb:	dec    ebp
  443cdd:	mov    ebx,0xf1f6ffb9
  443ce2:	out    dx,eax
  443ce3:	(bad)  
  443ce4:	mov    esp,0x99ff8382
  443ce9:	push   rdi
  443cea:	pop    rax
  443ceb:	call   rsi
  443ced:	jle    0x443d6c
  443cef:	call   rcx
  443cf1:	jbe    0x443d68
  443cf3:	inc    ebp
  443cf5:	imul   ebp,DWORD PTR [rdx-0x1],0xff52519e
  443cfc:	add    BYTE PTR [rax+0x41],0xff
	...
  443d10:	movabs ds:0xe8ffdcdee9ff7878,eax
  443d19:	fstp   st(2)
  443d1b:	call   FWORD PTR [rbp-0x67]
  443d1e:	pop    rbp
  443d1f:	call   FWORD PTR [rbp-0x67]
  443d22:	pop    rbp
  443d23:	jmp    FWORD PTR [rdi-0x4e]
  443d26:	jns    0x443d27
  443d28:	loope  0x443cff
  443d2a:	sar    edi,cl
  443d2c:	loopne 0x443d01
  443d2e:	sar    edi,1
  443d30:	(bad)  
  443d32:	iret   
  443d33:	(bad)  
  443d34:	fmul   st(6),st
  443d36:	int    0xff
  443d38:	fcmovne st,st(4)
  443d3a:	retf   
  443d3b:	(bad)  
  443d3c:	fxch   st(2)
  443d3e:	leave  
  443d3f:	push   QWORD PTR [rdi-0x20006263]
  443d45:	test   BYTE PTR [rbp-0x74752601],al
  443d4b:	jmp    rax
  443d4d:	xchg   ebp,eax
  443d4e:	xchg   esi,eax
  443d4f:	(bad)  
  443d50:	cli    
  443d51:	mov    ah,0xb6
  443d53:	(bad)  
  443d54:	fist   DWORD PTR [rdx+0x68a1ff93]
  443d5a:	imul   edi,edi,0xff9d9ecd
  443d60:	fdiv   QWORD PTR [rax+0x76abffaf]
  443d66:	jbe    0x443d67
  443d68:	shl    BYTE PTR [rbx+0x74],0xff
  443d6c:	fild   DWORD PTR [rbp+0x78ceff84]
  443d72:	js     0x443d73
  443d74:	movabs ds:0x8df1504f95fe5a5a,eax
  443d7d:	rex.WB
  443d7e:	rex.WB
  443d7f:	repnz add BYTE PTR [rax],al
	...
  443d8e:	add    BYTE PTR [rax],al
  443d90:	movabs ds:0xeaffdfe1ebff7878,eax
  443d99:	(bad)  
  443d9b:	call   FWORD PTR [rbp-0x67]
  443d9e:	pop    rbp
  443d9f:	jmp    rbp
  443da1:	imul   eax
  443da3:	call   FWORD PTR [rbp-0x67]
  443da6:	pop    rbp
  443da7:	push   QWORD PTR [rax-0x4d]
  443daa:	jp     0x443dab
  443dac:	loop   0x443d83
  443dae:	sar    edi,cl
  443db0:	loopne 0x443d85
  443db2:	sar    edi,1
  443db4:	(bad)  
  443db6:	iret   
  443db7:	(bad)  
  443db8:	(bad)  
  443dba:	int    0xff
  443dbc:	fcmovne st,st(5)
  443dbe:	int3   
  443dbf:	(bad)  
  443dc0:	fcmove st,st(3)
  443dc2:	leave  
  443dc3:	(bad)  
  443dc4:	fmul   st,st(1)
  443dc6:	enter  0xd9ff,0xbf
  443dca:	mov    esi,0x605fbbff
  443dcf:	(bad)  
  443dd0:	sti    
  443dd1:	mov    dh,0xb7
  443dd3:	(bad)  
  443dd4:	std    
  443dd5:	mov    bh,0xb8
  443dd7:	call   rdi
  443dd9:	mov    cs,WORD PTR [rdi+0x49488bff]
  443ddf:	dec    DWORD PTR [rax-0x2e00b7b9]
  443de5:	xchg   BYTE PTR [rdi-0x6c6c1b01],al
  443deb:	jmp    rax
  443ded:	mov    WORD PTR [rdi+rdi*8-0x8a8a3d],cs
  443df4:	pop    rsi
  443df5:	sub    ch,BYTE PTR [rbx]
  443df7:	inc    BYTE PTR [rax]
	...
  443e0d:	add    BYTE PTR [rax],al
  443e0f:	add    BYTE PTR [rbx-0x12008788],ah
  443e15:	jrcxz  0x443df8
  443e17:	(bad)  
  443e18:	jmp    0x443dfb
  443e1a:	loopne 0x443e1b
  443e1c:	pop    rbp
  443e1d:	cdq    
  443e1e:	pop    rbp
  443e1f:	(bad)  
  443e20:	jl     0x443e00
  443e22:	mov    edi,?
  443e24:	in     al,0xf7
  443e26:	out    0xff,eax
  443e28:	pop    rbp
  443e29:	cdq    
  443e2a:	pop    rbp
  443e2b:	push   QWORD PTR [rax-0x4d]
  443e2e:	jp     0x443e2f
  443e30:	loop   0x443e07
  443e32:	(bad)  
  443e33:	jmp    rax
  443e35:	(bad)  
  443e36:	sar    bh,cl
  443e38:	(bad)  
  443e3a:	sar    bh,1
  443e3c:	(bad)  
  443e3e:	(bad)  
  443e3f:	(bad)  
  443e40:	fmul   st(5),st
  443e42:	int3   
  443e43:	(bad)  
  443e44:	ffreep st(6)
  443e46:	(bad)  
  443e47:	(bad)  
  443e48:	mov    ebx,0xf8ff4e4e
  443e4d:	mov    dl,0xb3
  443e4f:	(bad)  
  443e50:	(bad)  
  443e51:	mov    ebx,0xb9fdffbc
  443e56:	mov    edx,0xb8b7fcff
  443e5b:	(bad)  
  443e5c:	stc    
  443e5d:	mov    cl,0xb2
  443e5f:	push   rsp
  443e61:	stos   BYTE PTR es:[rdi],al
  443e62:	stos   DWORD PTR es:[rdi],eax
  443e63:	(bad)  
  443e64:	out    dx,al
  443e65:	movabs ds:0x93e5ff9999e8ffa3,eax
  443e6e:	xchg   esp,eax
  443e6f:	jmp    rax
  443e71:	mov    WORD PTR [rdi+rdi*8-0x8d8e42],cs
  443e78:	imul   esi,DWORD PTR [rax],0xfc31
  443e7e:	add    BYTE PTR [rax],al
  443e80:	pop    rbp
  443e81:	cdq    
  443e82:	pop    rbp
  443e83:	call   FWORD PTR [rbp-0x67]
  443e86:	pop    rbp
  443e87:	call   FWORD PTR [rbp-0x67]
  443e8a:	pop    rbp
  443e8b:	call   FWORD PTR [rbp-0x67]
  443e8e:	pop    rbp
  443e8f:	call   FWORD PTR [rbp-0x67]
  443e92:	pop    rbp
  443e93:	call   FWORD PTR [rbp-0x67]
  443e96:	pop    rbp
  443e97:	call   FWORD PTR [rbp-0x67]
  443e9a:	pop    rbp
  443e9b:	call   FWORD PTR [rbp-0x67]
  443e9e:	pop    rbp
  443e9f:	(bad)  
  443ea0:	jg     0x443e84
  443ea2:	(bad)  
  443ea3:	jmp    FWORD PTR [rbx]
  443ea5:	enter  0xff44,0xe4
  443ea9:	mul    edi
  443eab:	call   FWORD PTR [rbp-0x67]
  443eae:	pop    rbp
  443eaf:	push   QWORD PTR [rax-0x4d]
  443eb2:	jp     0x443eb3
  443eb4:	loop   0x443e8c
  443eb6:	(bad)  
  443eb7:	jmp    rcx
  443eb9:	(bad)  
  443eba:	sar    bh,cl
  443ebc:	(bad)  
  443ebe:	sar    bh,1
  443ec0:	(bad)  
  443ec2:	(bad)  
  443ec3:	jmp    rdx
  443ec5:	mov    edi,0x9192e4ff
  443ecb:	(bad)  
  443ecc:	cli    
  443ecd:	mov    ch,0xb6
  443ecf:	(bad)  
  443ed0:	(bad)  
  443ed1:	mov    ecx,0x79caffba
  443ed6:	jns    0x443ed7
  443ed8:	ret    
  443ed9:	je     0x443f50
  443edb:	(bad)  
  443edc:	cld    
  443edd:	mov    dh,0xb8
  443edf:	(bad)  
  443ee0:	stc    
  443ee1:	mov    cl,0xb2
  443ee3:	inc    eax
  443ee5:	jp     0x443f62
  443ee7:	jmp    QWORD PTR [rdx-0x47009d9f]
  443eed:	jae    0x443f63
  443eef:	jmp    rbp
  443ef1:	xchg   ebx,eax
  443ef2:	xchg   ebx,eax
  443ef3:	inc    ebx
  443ef5:	js     0x443f6f
  443ef7:	call   FWORD PTR [rcx+0xfc5251]
  443efd:	add    BYTE PTR [rax],al
  443eff:	add    BYTE PTR [rsi],dl
  443f01:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  443f02:	rex dec DWORD PTR [rbx-0x73006314]
  443f09:	lock sahf 
  443f0b:	dec    DWORD PTR [rbp-0x7200600f]
  443f11:	icebp  
  443f12:	lahf   
  443f13:	dec    DWORD PTR [rbx-0x76006210]
  443f19:	out    dx,al
  443f1a:	(bad)  
  443f1b:	inc    DWORD PTR [rsi+0x4cff96e9]
  443f21:	(bad)  [rbx-0x1]
  443f24:	xor    cl,bh
  443f26:	rex.WB jmp FWORD PTR [r10]
  443f29:	enter  0xff43,0xe4
  443f2d:	mul    edi
  443f2f:	call   FWORD PTR [rbp-0x67]
  443f32:	pop    rbp
  443f33:	jmp    FWORD PTR [rbp-0x4e]
  443f36:	jbe    0x443f37
  443f38:	jrcxz  0x443f10
  443f3a:	(bad)  
  443f3b:	jmp    rdx
  443f3d:	(bad)  
  443f3e:	sar    edi,cl
  443f40:	(bad)  
  443f42:	sar    edi,1
  443f44:	(bad)  
  443f46:	iret   
  443f47:	jmp    rsi
  443f49:	ret    0xffc1
  443f4c:	call   0xffffffffdf43dff1
  443f51:	(bad)  
  443f52:	nop
  443f53:	(bad)  
  443f54:	fmul   st,st(0)
  443f56:	enter  0xccff,0x83
  443f5a:	xchg   bh,bh
  443f5c:	(bad)  
  443f5d:	mov    ebx,0xb6fcffbc
  443f62:	mov    bh,0xff
  443f64:	movabs al,ds:0xc300000000ff5a57
  443f6d:	jle    0x443fee
  443f6f:	fisubr DWORD PTR [rcx-0x5b009797]
  443f75:	pop    rsi
  443f76:	pop    rdi
  443f77:	inc    dl
  443f79:	ja     0x443ff2
  443f7b:	add    BYTE PTR cs:[rax],al
  443f7e:	add    BYTE PTR [rax],al
  443f80:	(bad)  
  443f81:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  443f82:	rex jmp FWORD PTR [rcx-0x1d]
  443f86:	jle    0x443f87
  443f88:	rex.XB loope 0x443feb
  443f8b:	inc    DWORD PTR [rbp-0x19]
  443f8e:	(bad)  
  443f8f:	inc    DWORD PTR [rdi-0x17]
  443f92:	inc    DWORD PTR fs:[rdi-0x17]
  443f96:	inc    DWORD PTR fs:[rbp-0x19]
  443f9a:	(bad)  
  443f9b:	inc    DWORD PTR [rcx-0x1e]
  443f9e:	pop    rsp
  443f9f:	(bad)  
  443fa0:	cmp    al,0xdd
  443fa2:	push   rdi
  443fa3:	push   QWORD PTR [rdi]
  443fa5:	(bad)  
  443fa6:	push   rax
  443fa7:	push   QWORD PTR [rcx]
  443fa9:	iret   
  443faa:	rex.WX jmp FWORD PTR [rdx]
  443fad:	mov    BYTE PTR [rdx-0x1],0xe4
  443fb1:	mul    edi
  443fb3:	call   FWORD PTR [rbp-0x67]
  443fb6:	pop    rbp
  443fb7:	jmp    FWORD PTR [rbx-0x4d]
  443fba:	jne    0x443fbb
  443fbc:	in     al,0xd7
  443fbe:	(bad)  
  443fbf:	jmp    rdx
  443fc1:	(bad)  
  443fc2:	(bad)  
  443fc3:	jmp    rcx
  443fc5:	(bad)  
  443fc6:	sar    edi,1
  443fc8:	(bad)  
  443fca:	iret   
  443fcb:	(bad)  
  443fcc:	(bad)  
  443fce:	(bad)  
  443fcf:	(bad)  
  443fd0:	fcmovne st,st(5)
  443fd2:	int3   
  443fd3:	(bad)  
  443fd4:	fcmove st,st(3)
  443fd6:	retf   0xceff
  443fd9:	mov    BYTE PTR [rcx-0x6e6f2801],cl
  443fdf:	dec    ebp
  443fe1:	add    DWORD PTR [rdx+0x7c7bcdff],0xff
	...
  443fff:	add    BYTE PTR [rsi],dl
  444001:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  444002:	rex jmp QWORD PTR [rbp-0x22]
  444006:	jp     0x444007
  444008:	fcomp  QWORD PTR ds:[rdx-0x1]
  44400c:	rex.XB loop 0x44406e
  44400f:	inc    DWORD PTR [rsi-0x1a]
  444012:	movsxd edi,edi
  444014:	rex.RXB jmp 0xffffffffe88b3f7e
  44401a:	movsxd edi,edi
  44401c:	rex.R out 0x61,al
  44401f:	inc    DWORD PTR [rcx-0x1e]
  444022:	pop    rsp
  444023:	(bad)  
  444024:	cmp    al,0xdb
  444026:	push   rdi
  444027:	push   QWORD PTR [rsi]
  444029:	(bad)  
  44402a:	rex.WRXB push QWORD PTR [r8]
  44402d:	(bad)  
  44402e:	rex.WB jmp FWORD PTR [r9]
  444031:	vcvtpd2dq xmm14,ymm15
  444036:	call   0x5ddd9e3a
  44403b:	(bad)  
  44403c:	(bad)  
  44403e:	iret   
  44403f:	jmp    rsp
  444041:	fcom   st(6)
  444043:	jmp    rbx
  444045:	(bad)  
  444046:	(bad)  
  444047:	jmp    rcx
  444049:	(bad)  
  44404a:	sar    bh,cl
  44404c:	(bad)  
  44404e:	sar    bh,1
  444050:	(bad)  
  444052:	iret   
  444053:	(bad)  
  444054:	fmul   st(6),st
  444056:	int3   
  444057:	(bad)  
  444058:	fcmove st,st(4)
  44405a:	retf   0xd9ff
  44405d:	retf   0xffc8
  444060:	div    cl
  444062:	out    dx,eax
  444063:	jmp    QWORD PTR [rbx+0xff7878]
	...
  44407d:	add    BYTE PTR [rax],al
  44407f:	add    BYTE PTR [rsi],dl
  444081:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  444082:	rex push QWORD PTR [rsi+rbx*8-0x7a]
  444087:	dec    DWORD PTR [rcx-0x27]
  44408a:	(bad)  
  44408b:	inc    DWORD PTR [rsi+rbx*8+0x5f]
  44408f:	inc    DWORD PTR [rdx+riz*8+0x5f]
  444093:	inc    DWORD PTR [rbp-0x18]
  444096:	(bad)  
  444097:	inc    DWORD PTR [rsi-0x17]
  44409a:	movsxd edi,edi
  44409c:	rex.RX call 0xffffffffe6894005
  4440a2:	pop    rdi
  4440a3:	inc    DWORD PTR [rax-0x1f]
  4440a6:	pop    rsp
  4440a7:	(bad)  
  4440a8:	cmp    ebx,ebx
  4440aa:	push   rsi
  4440ab:	push   QWORD PTR [rip+0x6bff4ed4]        # 0x6c438f85
  4440b1:	fstp   TBYTE PTR [rdi+rdi*8+0x29]
  4440b5:	mov    bl,0x53
  4440b7:	call   FWORD PTR [rax-0x56]
  4440ba:	fs jmp rdi
  4440bd:	(bad)  
  4440bf:	jmp    rsi
  4440c1:	fcmovu st,st(0)
  4440c3:	jmp    rsp
  4440c5:	fcom   st(7)
  4440c7:	jmp    rbx
  4440c9:	(bad)  
  4440ca:	(bad)  
  4440cb:	jmp    rdx
  4440cd:	(bad)  
  4440ce:	sar    edi,cl
  4440d0:	(bad)  
  4440d2:	sar    edi,1
  4440d4:	(bad)  
  4440d6:	iret   
  4440d7:	(bad)  
  4440d8:	fmul   st(7),st
  4440da:	int    0xff
  4440dc:	fcmovne st,st(5)
  4440de:	retf   
  4440df:	push   rsi
  4440e1:	icebp  
  4440e2:	out    dx,eax
  4440e3:	jmp    QWORD PTR [rbx+0xff7878]
	...
  4440fd:	add    BYTE PTR [rax],al
  4440ff:	add    BYTE PTR [rsi],dl
  444101:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  444102:	rex (bad) 
  444104:	js     0x4440e2
  444106:	mov    edi,edi
  444108:	pop    rax
  444109:	fsubr  DWORD PTR [rsi-0x1]
  44410c:	pop    rax
  44410d:	(bad)  [rsi-0x1]
  444110:	push   rsp
  444111:	loope  0x444181
  444113:	dec    DWORD PTR [rsi+riz*8+0x68]
  444117:	dec    DWORD PTR [rcx-0x18]
  44411a:	inc    WORD PTR [rsi-0x17]
  44411e:	inc    DWORD PTR fs:[rbx-0x18]
  444122:	(bad)  
  444123:	inc    DWORD PTR [rcx-0x1b]
  444126:	pop    rsi
  444127:	(bad)  
  444128:	ds loopne 0x444185
  44412b:	push   QWORD PTR [rbx-0x1b]
  44412e:	xchg   bh,bh
  444130:	sub    DWORD PTR [rbx-0x52a100ad],esi
  444136:	imul   edi,edi,0xffffffeb
  444139:	loope  0x44411a
  44413b:	(bad)  
  44413c:	(bad)  
  44413d:	(bad)  
  44413f:	(bad)  
  444140:	call   0xffffffffe8441d22
  444145:	fcmovnu st,st(2)
  444147:	jmp    rbp
  444149:	(bad)  
  44414b:	jmp    rbx
  44414d:	xlat   BYTE PTR ds:[rbx]
  44414e:	(bad)  
  44414f:	jmp    rdx
  444151:	(bad)  
  444152:	(bad)  
  444153:	jmp    rax
  444155:	rcl    ecx,cl
  444157:	(bad)  
  444158:	(bad)  
  44415a:	sar    bh,1
  44415c:	fmul   st(7),st
  44415e:	int    0xff
  444160:	div    cl
  444162:	out    dx,eax
  444163:	jmp    QWORD PTR [rbx+0xff7878]
	...
  44417d:	add    BYTE PTR [rax],al
  44417f:	add    BYTE PTR [rcx],ah
  444181:	fwait
  444182:	cmp    al,0xb6
  444184:	(bad)  
  444185:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  444186:	rex call QWORD PTR [rsi]
  444189:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  44418a:	rex call QWORD PTR [rsi]
  44418d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  44418e:	rex call QWORD PTR [rsi]
  444191:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  444192:	rex call QWORD PTR [rsi]
  444195:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  444196:	rex call QWORD PTR [rsi]
  444199:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  44419a:	rex call QWORD PTR [rsi]
  44419d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  44419e:	rex call QWORD PTR [rdx-0x14]
  4441a2:	ins    DWORD PTR es:[rdi],dx
  4441a3:	dec    DWORD PTR [rcx-0x17]
  4441a6:	addr32 (bad) 
  4441a8:	jns    0x444196
  4441aa:	(bad)  
  4441ab:	jmp    FWORD PTR [rcx]
  4441ad:	mov    bl,0x53
  4441af:	jmp    QWORD PTR [rdx-0x4f]
  4441b2:	outs   dx,DWORD PTR ds:[rsi]
  4441b3:	(bad)  
  4441b4:	out    dx,eax
  4441b5:	in     eax,0xe3
  4441b7:	(bad)  
  4441b8:	in     eax,dx
  4441b9:	jrcxz  0x44419d
  4441bb:	(bad)  
  4441bc:	in     al,dx
  4441bd:	loope  0x44419e
  4441bf:	(bad)  
  4441c0:	(bad)  
  4441c1:	(bad)  
  4441c3:	(bad)  
  4441c4:	jmp    0xffffffffe8441ea6
  4441c9:	(bad)  
  4441cb:	jmp    rsi
  4441cd:	fcmovbe st,st(7)
  4441cf:	jmp    rsp
  4441d1:	xlat   BYTE PTR ds:[rbx]
  4441d2:	(bad)  
  4441d3:	jmp    rdx
  4441d5:	(bad)  
  4441d6:	(bad)  
  4441d7:	jmp    rax
  4441d9:	rcl    edx,cl
  4441db:	(bad)  
  4441dc:	(bad)  
  4441de:	sar    bh,1
  4441e0:	div    cl
  4441e2:	out    dx,eax
  4441e3:	jmp    QWORD PTR [rbx+0xff7878]
	...
  44420d:	add    BYTE PTR [rax],al
  44420f:	add    BYTE PTR [rbx-0x6008788],ah
  444215:	icebp  
  444216:	lock (bad) 
  444218:	clc    
  444219:	lock out dx,eax
  44421b:	call   QWORD PTR [rsi]
  44421d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  44421e:	rex jmp QWORD PTR [rbp+rbp*8+0x7e]
  444223:	dec    DWORD PTR [rsi+0x29ffa1f2]
  444229:	mov    bl,0x53
  44422b:	jmp    FWORD PTR [rcx-0x4d]
  44422e:	je     0x44422f
  444230:	bnd call 0xffffffffe835421d
  444236:	in     eax,0xff
  444238:	out    dx,eax
  444239:	in     eax,0xe3
  44423b:	(bad)  
  44423c:	in     eax,dx
  44423d:	jrcxz  0x444221
  44423f:	(bad)  
  444240:	in     al,dx
  444241:	loope  0x444223
  444243:	(bad)  
  444244:	(bad)  
  444245:	(bad)  
  444247:	(bad)  
  444248:	jmp    0xffffffffe9441f2b
  44424d:	(bad)  
  44424f:	jmp    rsi
  444251:	fcmovu st,st(0)
  444253:	jmp    rsp
  444255:	fcom   st(6)
  444257:	jmp    rdx
  444259:	(bad)  
  44425a:	(bad)  
  44425b:	jmp    rcx
  44425d:	(bad)  
  44425e:	sar    bh,cl
  444260:	div    cl
  444262:	out    dx,eax
  444263:	jmp    QWORD PTR [rbx+0xff7878]
	...
  44428d:	add    BYTE PTR [rax],al
  44428f:	add    BYTE PTR [rbx-0x6008788],ah
  444295:	repnz lock (bad) 
  444298:	stc    
  444299:	bnd lock call QWORD PTR [rsi]
  44429d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  44429e:	rex call QWORD PTR [rax+0x29ffa1f0]
  4442a5:	mov    bl,0x53
  4442a7:	jmp    FWORD PTR [rbp-0x4b]
  4442aa:	js     0x4442ab
  4442ac:	cmc    
  4442ad:	in     al,dx
  4442ae:	(bad)  
  4442af:	push   rbx
  4442b1:	(bad)  
  4442b2:	jmp    0xffffffffe82e35b6
  4442b7:	push   rcx
  4442b9:	out    0xe6,eax
  4442bb:	(bad)  
  4442bc:	out    dx,eax
  4442bd:	in     eax,0xe4
  4442bf:	(bad)  
  4442c0:	out    dx,al
  4442c1:	in     al,0xe3
  4442c3:	(bad)  
  4442c4:	in     eax,dx
  4442c5:	loop   0x4442a7
  4442c7:	(bad)  
  4442c8:	jmp    0x4442aa
  4442ca:	(bad)  
  4442cc:	(bad)  
  4442cd:	(bad)  
  4442cf:	(bad)  
  4442d0:	call   0xffffffffe7441eb1
  4442d5:	fcmovnu st,st(1)
  4442d7:	jmp    rbp
  4442d9:	(bad)  
  4442db:	jmp    rbx
  4442dd:	(bad)  
  4442de:	(bad)  
  4442df:	push   rsi
  4442e1:	icebp  
  4442e2:	out    dx,eax
  4442e3:	jmp    QWORD PTR [rbx+0xff7878]
	...
  44430d:	add    BYTE PTR [rax],al
  44430f:	add    BYTE PTR [rbx-0x6008788],ah
  444315:	repnz lock (bad) 
  444318:	stc    
  444319:	bnd lock call QWORD PTR [rsi]
  44431d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  44431e:	rex jmp FWORD PTR [rcx]
  444321:	mov    bl,0x53
  444323:	push   QWORD PTR [rax-0x4a]
  444326:	jl     0x444327
  444328:	imul   bh
  44432a:	in     eax,dx
  44432b:	push   rbp
  44432d:	out    dx,al
  44432e:	in     al,dx
  44432f:	push   rsp
  444331:	in     al,dx
  444332:	jmp    0x444333
  444334:	hlt    
  444335:	jmp    0x444320
  444337:	push   rdx
  444339:	jmp    0xffffffffe9364325
  44433e:	out    0xff,al
  444340:	out    dx,eax
  444341:	out    0xe4,al
  444343:	(bad)  
  444344:	out    dx,al
  444345:	in     eax,0xe3
  444347:	(bad)  
  444348:	in     eax,dx
  444349:	jrcxz  0x44432c
  44434b:	(bad)  
  44434c:	in     al,dx
  44434d:	loope  0x44432f
  44434f:	(bad)  
  444350:	(bad)  
  444351:	(bad)  
  444353:	(bad)  
  444354:	call   0xffffffffe8441f36
  444359:	fcmovnu st,st(2)
  44435b:	jmp    rbp
  44435d:	(bad)  
  44435f:	push   rsi
  444361:	icebp  
  444362:	out    dx,eax
  444363:	jmp    QWORD PTR [rbx+0xff7878]
	...
  44438d:	add    BYTE PTR [rax],al
  44438f:	add    BYTE PTR [rbx-0x6008788],ah
  444395:	repnz lock (bad) 
  444398:	stc    
  444399:	repnz lock jmp FWORD PTR [rdx]
  44439d:	cdq    
  44439e:	rex.RB push QWORD PTR [r10-0x4a]
  4443a2:	jge    0x4443a3
  4443a4:	clc    
  4443a5:	repnz out dx,eax
  4443a7:	push   rdi
  4443a9:	lock out dx,eax
  4443ab:	push   rdi
  4443ad:	out    dx,eax
  4443ae:	out    dx,al
  4443af:	push   rsi
  4443b1:	out    dx,al
  4443b2:	in     al,dx
  4443b3:	push   rbp
  4443b5:	in     al,dx
  4443b6:	jmp    0x4443b7
  4443b8:	repz in al,dx
  4443ba:	jmp    0xffffffffe92f37be
  4443bf:	push   rcx
  4443c1:	jmp    0xffffffffe83543ac
  4443c6:	in     eax,0xff
  4443c8:	out    dx,al
  4443c9:	in     eax,0xe4
  4443cb:	(bad)  
  4443cc:	out    dx,al
  4443cd:	jrcxz  0x4443b0
  4443cf:	(bad)  
  4443d0:	in     al,dx
  4443d1:	loope  0x4443b3
  4443d3:	(bad)  
  4443d4:	jmp    0x4443b6
  4443d6:	fdivp  st(7),st
  4443d8:	jmp    0xffffffffe84420ba
  4443dd:	(bad)  
  4443df:	push   rsi
  4443e1:	icebp  
  4443e2:	out    dx,eax
  4443e3:	jmp    QWORD PTR [rbx+0xff7878]
	...
  44440d:	add    BYTE PTR [rax],al
  44440f:	add    BYTE PTR [rbx-0x9008788],ah
  444415:	icebp  
  444416:	out    dx,eax
  444417:	push   rsi
  444419:	icebp  
  44441a:	out    dx,eax
  44441b:	push   rsi
  44441d:	icebp  
  44441e:	out    dx,eax
  44441f:	push   rsi
  444421:	icebp  
  444422:	out    dx,eax
  444423:	push   rsi
  444425:	icebp  
  444426:	out    dx,eax
  444427:	push   rsi
  444429:	icebp  
  44442a:	out    dx,eax
  44442b:	push   rsi
  44442d:	icebp  
  44442e:	out    dx,eax
  44442f:	push   rsi
  444431:	icebp  
  444432:	out    dx,eax
  444433:	push   rsi
  444435:	icebp  
  444436:	out    dx,eax
  444437:	push   rsi
  444439:	icebp  
  44443a:	out    dx,eax
  44443b:	push   rsi
  44443d:	icebp  
  44443e:	out    dx,eax
  44443f:	push   rsi
  444441:	icebp  
  444442:	out    dx,eax
  444443:	push   rsi
  444445:	icebp  
  444446:	out    dx,eax
  444447:	push   rsi
  444449:	icebp  
  44444a:	out    dx,eax
  44444b:	push   rsi
  44444d:	icebp  
  44444e:	out    dx,eax
  44444f:	push   rsi
  444451:	icebp  
  444452:	out    dx,eax
  444453:	push   rsi
  444455:	icebp  
  444456:	out    dx,eax
  444457:	push   rsi
  444459:	icebp  
  44445a:	out    dx,eax
  44445b:	push   rsi
  44445d:	icebp  
  44445e:	out    dx,eax
  44445f:	push   rsi
  444461:	icebp  
  444462:	out    dx,eax
  444463:	jmp    QWORD PTR [rbx+0xff7878]
	...
  444489:	add    BYTE PTR [rax],al
  44448b:	add    cl,cl
  44448d:	mov    dh,0xb5
  44448f:	jae    0x444434
  444491:	js     0x44450b
  444493:	jmp    QWORD PTR [rbx-0x5c008788]
  444499:	js     0x444513
  44449b:	jmp    QWORD PTR [rbx-0x5c008788]
  4444a1:	js     0x44451b
  4444a3:	jmp    QWORD PTR [rbx-0x5c008788]
  4444a9:	js     0x444523
  4444ab:	jmp    QWORD PTR [rbx-0x5c008788]
  4444b1:	js     0x44452b
  4444b3:	jmp    QWORD PTR [rbx-0x5c008788]
  4444b9:	js     0x444533
  4444bb:	jmp    QWORD PTR [rbx-0x5c008788]
  4444c1:	js     0x44453b
  4444c3:	jmp    QWORD PTR [rbx-0x5c008788]
  4444c9:	js     0x444543
  4444cb:	jmp    QWORD PTR [rbx-0x5c008788]
  4444d1:	js     0x44454b
  4444d3:	jmp    QWORD PTR [rbx-0x5c008788]
  4444d9:	js     0x444553
  4444db:	jmp    QWORD PTR [rbx-0x5c008788]
  4444e1:	js     0x44455b
  4444e3:	jmp    QWORD PTR [rbx-0x36008788]
  4444e9:	mov    dh,0xb5
  4444eb:	jae    0x4444ed
	...
  444505:	add    BYTE PTR [rax],al
  444507:	add    cl,cl
  444509:	mov    dh,0xb5
  44450b:	jae    0x4444b0
  44450d:	js     0x444587
  44450f:	jmp    QWORD PTR [rbx-0x5c008788]
  444515:	js     0x44458f
  444517:	jmp    QWORD PTR [rbx-0x5a008788]
  44451d:	jnp    0x44459a
  44451f:	jmp    FWORD PTR [rax-0x54008081]
  444525:	test   DWORD PTR [rbp-0x75755101],eax
  44452b:	push   QWORD PTR [rdx-0x49006f70]
  444531:	xchg   edi,eax
  444532:	xchg   edi,eax
  444533:	(bad)  
  444534:	mov    edx,0xbeff9d9d
  444539:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  44453a:	movabs ds:0xaeaec4ffa9aac1ff,eax
  444543:	inc    edi
  444545:	mov    bl,0xb2
  444547:	dec    ecx
  444549:	mov    dh,0xb5
  44454b:	dec    ecx
  44454d:	mov    dh,0xb5
  44454f:	dec    ecx
  444551:	mov    dh,0xb5
  444553:	dec    ecx
  444555:	mov    dh,0xb5
  444557:	dec    ecx
  444559:	mov    dh,0xb5
  44455b:	dec    ecx
  44455d:	mov    dh,0xb5
  44455f:	dec    ecx
  444561:	mov    dh,0xb5
  444563:	jmp    QWORD PTR [rbx-0x5c008788]
  444569:	js     0x4445e3
  44456b:	dec    ecx
  44456d:	mov    dh,0xb5
  44456f:	jae    0x444571
	...
  444581:	add    BYTE PTR [rax],al
  444583:	add    cl,cl
  444585:	mov    dh,0xb5
  444587:	jae    0x44452c
  444589:	js     0x444603
  44458b:	dec    ecx
  44458d:	mov    dh,0xb5
  44458f:	jmp    QWORD PTR [rbx-0x5c008788]
  444595:	js     0x44460f
  444597:	jmp    QWORD PTR [rbx-0x5c008788]
  44459d:	js     0x444617
  44459f:	jmp    QWORD PTR [rbx-0x5c008788]
  4445a5:	js     0x44461f
  4445a7:	jmp    QWORD PTR [rbx-0x5c008788]
  4445ad:	js     0x444627
  4445af:	jmp    QWORD PTR [rbx-0x5c008788]
  4445b5:	js     0x44462f
  4445b7:	jmp    QWORD PTR [rbx-0x5c008788]
  4445bd:	js     0x444637
  4445bf:	jmp    QWORD PTR [rbx-0x5c008788]
  4445c5:	js     0x44463f
  4445c7:	jmp    QWORD PTR [rbx-0x5c008788]
  4445cd:	js     0x444647
  4445cf:	jmp    QWORD PTR [rbx-0x5c008788]
  4445d5:	js     0x44464f
  4445d7:	jmp    QWORD PTR [rbx-0x5c008788]
  4445dd:	js     0x444657
  4445df:	jmp    QWORD PTR [rbx-0x5c008788]
  4445e5:	js     0x44465f
  4445e7:	dec    ecx
  4445e9:	mov    dh,0xb5
  4445eb:	jmp    QWORD PTR [rbx-0x36008788]
  4445f1:	mov    dh,0xb5
  4445f3:	jae    0x4445f5
	...
  4445fd:	add    BYTE PTR [rax],al
  4445ff:	add    cl,cl
  444601:	mov    dh,0xb5
  444603:	jae    0x4445a8
  444605:	js     0x44467f
  444607:	dec    ecx
  444609:	mov    dh,0xb5
  44460b:	jmp    QWORD PTR [rbx-0x36008788]
  444611:	mov    dh,0xb5
  444613:	jae    0x4445b8
  444615:	js     0x44468f
  444617:	dec    ebp
  444619:	mov    ch,0xb3
  44461b:	dec    ebp
  44461d:	mov    ah,0xb3
  44461f:	dec    ebp
  444621:	mov    ah,0xb4
  444623:	dec    esp
  444625:	mov    ah,0xb4
  444627:	dec    ebp
  444629:	mov    ah,0xb4
  44462b:	dec    ebp
  44462d:	mov    ch,0xb4
  44462f:	dec    esp
  444631:	mov    ch,0xb3
  444633:	dec    esp
  444635:	mov    ah,0xb4
  444637:	dec    esp
  444639:	mov    ah,0xb3
  44463b:	dec    esp
  44463d:	mov    ch,0xb4
  44463f:	dec    ebp
  444641:	mov    ch,0xb3
  444643:	dec    esp
  444645:	mov    ch,0xb4
  444647:	dec    ebp
  444649:	mov    ah,0xb4
  44464b:	dec    ebp
  44464d:	mov    ch,0xb4
  44464f:	dec    ebp
  444651:	mov    ah,0xb4
  444653:	dec    esp
  444655:	mov    ah,0xb3
  444657:	dec    ebp
  444659:	mov    ah,0xb3
  44465b:	dec    ebp
  44465d:	mov    ch,0xb4
  44465f:	jmp    QWORD PTR [rbx-0x36008788]
  444665:	mov    dh,0xb5
  444667:	jae    0x44460c
  444669:	js     0x4446e3
  44466b:	dec    ecx
  44466d:	mov    dh,0xb5
  44466f:	jmp    QWORD PTR [rbx-0x36008788]
  444675:	mov    dh,0xb5
  444677:	jae    0x444679
  444679:	add    BYTE PTR [rax],al
  44467b:	add    BYTE PTR [rax],al
  44467d:	add    BYTE PTR [rax],al
  44467f:	add    BYTE PTR [rbx-0x5c008788],ah
  444685:	js     0x4446ff
  444687:	jmp    QWORD PTR [rbx-0x36008788]
  44468d:	mov    dh,0xb5
  44468f:	jae    0x444691
  444691:	add    BYTE PTR [rax],al
  444693:	add    BYTE PTR [rbx-0x21008788],ah
  444699:	int    0xcc
  44469b:	(bad)  
  44469c:	(bad)  
  44469e:	int3   
  44469f:	(bad)  
  4446a0:	(bad)  
  4446a2:	int3   
  4446a3:	(bad)  
  4446a4:	(bad)  
  4446a6:	retf   
  4446a7:	(bad)  
  4446a8:	(bad)  
  4446aa:	int3   
  4446ab:	(bad)  
  4446ac:	(bad)  
  4446ae:	retf   
  4446af:	(bad)  
  4446b0:	fmulp  st(5),st
  4446b2:	int3   
  4446b3:	(bad)  
  4446b4:	(bad)  
  4446b6:	int3   
  4446b7:	(bad)  
  4446b8:	(bad)  
  4446ba:	int3   
  4446bb:	(bad)  
  4446bc:	fmulp  st(5),st
  4446be:	int3   
  4446bf:	(bad)  
  4446c0:	(bad)  
  4446c2:	int3   
  4446c3:	(bad)  
  4446c4:	(bad)  
  4446c6:	int3   
  4446c7:	(bad)  
  4446c8:	fmulp  st(5),st
  4446ca:	int3   
  4446cb:	(bad)  
  4446cc:	fmulp  st(5),st
  4446ce:	int3   
  4446cf:	(bad)  
  4446d0:	(bad)  
  4446d2:	retf   
  4446d3:	(bad)  
  4446d4:	(bad)  
  4446d6:	int3   
  4446d7:	(bad)  
  4446d8:	fmulp  st(5),st
  4446da:	retf   
  4446db:	(bad)  
  4446dc:	fmulp  st(5),st
  4446de:	int3   
  4446df:	jmp    QWORD PTR [rbx+0xff7878]
  4446e5:	add    BYTE PTR [rax],al
  4446e7:	add    cl,cl
  4446e9:	mov    dh,0xb5
  4446eb:	jae    0x444690
  4446ed:	js     0x444767
  4446ef:	jmp    QWORD PTR [rbx-0x5c008788]
  4446f5:	js     0x44476f
  4446f7:	inc    DWORD PTR [rax]
	...
  444711:	add    BYTE PTR [rax],al
  444713:	add    BYTE PTR [rbx-0x13008788],ah
  444719:	jrcxz  0x4446fc
  44471b:	(bad)  
  44471c:	in     al,dx
  44471d:	loop   0x4446ff
  44471f:	(bad)  
  444720:	in     al,dx
  444721:	loop   0x444704
  444723:	(bad)  
  444724:	in     al,dx
  444725:	jrcxz  0x444708
  444727:	(bad)  
  444728:	in     al,dx
  444729:	loop   0x44470b
  44472b:	(bad)  
  44472c:	in     al,dx
  44472d:	loop   0x444710
  44472f:	(bad)  
  444730:	in     al,dx
  444731:	loop   0x444714
  444733:	(bad)  
  444734:	in     al,dx
  444735:	jrcxz  0x444718
  444737:	(bad)  
  444738:	in     al,dx
  444739:	jrcxz  0x44471c
  44473b:	(bad)  
  44473c:	in     al,dx
  44473d:	loop   0x444720
  44473f:	(bad)  
  444740:	in     al,dx
  444741:	loop   0x444724
  444743:	(bad)  
  444744:	in     al,dx
  444745:	loop   0x444728
  444747:	(bad)  
  444748:	in     al,dx
  444749:	loop   0x44472c
  44474b:	(bad)  
  44474c:	in     al,dx
  44474d:	loop   0x44472f
  44474f:	(bad)  
  444750:	in     al,dx
  444751:	loop   0x444734
  444753:	(bad)  
  444754:	in     al,dx
  444755:	loop   0x444738
  444757:	(bad)  
  444758:	in     al,dx
  444759:	loop   0x44473b
  44475b:	(bad)  
  44475c:	in     al,dx
  44475d:	jrcxz  0x44473f
  44475f:	jmp    QWORD PTR [rbx+0xff7878]
	...
  444791:	add    BYTE PTR [rax],al
  444793:	add    BYTE PTR [rbx-0x5c008788],ah
  444799:	js     0x444813
  44479b:	jmp    QWORD PTR [rbx-0x5c008788]
  4447a1:	js     0x44481b
  4447a3:	jmp    QWORD PTR [rbx-0x5c008788]
  4447a9:	js     0x444823
  4447ab:	jmp    QWORD PTR [rbx-0x5c008788]
  4447b1:	js     0x44482b
  4447b3:	jmp    QWORD PTR [rbx-0x5c008788]
  4447b9:	js     0x444833
  4447bb:	jmp    QWORD PTR [rbx-0x5c008788]
  4447c1:	js     0x44483b
  4447c3:	jmp    QWORD PTR [rbx-0x5c008788]
  4447c9:	js     0x444843
  4447cb:	jmp    QWORD PTR [rbx-0x5c008788]
  4447d1:	js     0x44484b
  4447d3:	jmp    QWORD PTR [rbx-0x5c008788]
  4447d9:	js     0x444853
  4447db:	jmp    QWORD PTR [rbx-0x5c008788]
  4447e1:	js     0x44485b
  4447e3:	inc    DWORD PTR [rax]
	...
  44487d:	add    BYTE PTR [rax],al
  44487f:	add    bh,bh
  444881:	(bad)  
  444882:	cld    
  444883:	(bad)  
  444884:	lock add BYTE PTR [rax],al
  444887:	and    esi,eax
  444889:	add    BYTE PTR [rax],al
  44488b:	add    eax,esi
  44488d:	add    BYTE PTR [rax],al
  44488f:	add    eax,esi
  444891:	add    BYTE PTR [rax],al
  444893:	add    eax,esi
  444895:	add    BYTE PTR [rax],al
  444897:	add    esi,eax
  444899:	add    BYTE PTR [rax],al
  44489b:	add    al,dh
  44489d:	add    BYTE PTR [rax],al
  44489f:	add    al,dh
  4448a1:	add    BYTE PTR [rax],al
  4448a3:	add    al,dh
  4448a5:	add    BYTE PTR [rax],al
  4448a7:	add    al,dh
  4448a9:	add    BYTE PTR [rax],al
  4448ab:	add    esi,eax
  4448ad:	add    BYTE PTR [rax],al
  4448af:	add    DWORD PTR [rax],eax
  4448b1:	add    BYTE PTR [rax],al
  4448b3:	add    DWORD PTR [rax],eax
  4448b5:	add    BYTE PTR [rax],al
  4448b7:	and    DWORD PTR [rax],eax
  4448b9:	add    BYTE PTR [rax],al
  4448bb:	(bad)  
  4448bc:	add    BYTE PTR [rax],al
  4448be:	add    BYTE PTR [rdi],bh
  4448c0:	add    BYTE PTR [rax],al
  4448c2:	add    BYTE PTR [rdi],bh
  4448c4:	add    BYTE PTR [rax],al
  4448c6:	add    BYTE PTR [rdi],bh
  4448c8:	add    BYTE PTR [rax],al
  4448ca:	add    BYTE PTR [rdi],bh
  4448cc:	lock add BYTE PTR [rax],al
  4448cf:	(bad)  
  4448d0:	lock add BYTE PTR [rax],al
  4448d3:	(bad)  
  4448d4:	lock add BYTE PTR [rax],al
  4448d7:	(bad)  
  4448d8:	lock add BYTE PTR [rax],al
  4448db:	(bad)  
  4448dc:	lock add BYTE PTR [rax],al
  4448df:	(bad)  
  4448e0:	loopne 0x4448e2
  4448e2:	add    BYTE PTR [rdi],bl
  4448e4:	rol    BYTE PTR [rax],0x0
  4448e7:	jo     0x4b48ed
  4448ed:	add    BYTE PTR [rax],al
  4448ef:	add    ecx,DWORD PTR [rax]
  4448f1:	add    BYTE PTR [rax],al
  4448f3:	rex.XB clc 
  4448f5:	add    BYTE PTR [rax],al
  4448f7:	jg     0x4448f1
  4448f9:	add    BYTE PTR [rax],al
  4448fb:	jg     0x4448fc
  4448fd:	(bad)  
  4448fe:	(bad)  
  4448ff:	jmp    FWORD PTR [rax]
  444901:	add    BYTE PTR [rax],al
  444903:	add    BYTE PTR [rax],dl
  444905:	add    BYTE PTR [rax],al
  444907:	add    BYTE PTR [rax],ah
  444909:	add    BYTE PTR [rax],al
  44490b:	add    BYTE PTR [rcx],al
  44490d:	add    BYTE PTR [rax],ah
  44490f:	add    BYTE PTR [rax],al
  444911:	add    BYTE PTR [rax],al
  444913:	add    BYTE PTR [rax+0x4],al
	...
  44492e:	add    BYTE PTR [rax],al
  444930:	movabs ds:0xa3ff7878a3ff7878,eax
  444939:	js     0x4449b3
  44493b:	jmp    QWORD PTR [rbx-0x5c008788]
  444941:	js     0x4449bb
  444943:	jmp    QWORD PTR [rbx-0x5c008788]
  444949:	js     0x4449c3
  44494b:	jmp    QWORD PTR [rbx-0x3b008788]
  444951:	lods   al,BYTE PTR ds:[rsi]
  444952:	stos   DWORD PTR es:[rdi],eax
  444953:	dec    DWORD PTR [rsi-0x3b00acad]
  444959:	lods   al,BYTE PTR ds:[rsi]
  44495a:	stos   DWORD PTR es:[rdi],eax
  44495b:	call   FWORD PTR [rcx-0x7000a9a6]
  444961:	rex.WRX
  444962:	rex.WRXB (bad) 
	...
  444970:	movabs ds:0xddffd1d2e0ff7878,eax
  444979:	iret   
  44497a:	(bad)  
  44497b:	push   rdx
  44497d:	out    dx,al
  44497e:	in     eax,dx
  44497f:	push   rcx
  444981:	in     al,dx
  444982:	in     al,dx
  444983:	call   rsp
  444985:	(bad)  
  444989:	sar    BYTE PTR [rdi-0x54533b01],0xff
  444990:	(bad)  
  444991:	lods   al,BYTE PTR ds:[rsi]
  444992:	stos   DWORD PTR es:[rdi],eax
  444993:	jmp    FWORD PTR [rdi-0x6100a2a3]
  444999:	push   rcx
  44499a:	rex.WRX jmp QWORD PTR [rdx-0x7500a9aa]
  4449a1:	rex.RB
  4449a2:	imul   ebp,DWORD PTR [r13+0x35],0x3035
  4449aa:	add    BYTE PTR [rax],al
  4449ac:	add    BYTE PTR [rax],al
  4449ae:	add    BYTE PTR [rax],al
  4449b0:	movabs ds:0xe1ffd6d7e3ff7878,eax
  4449b9:	(bad)  
  4449ba:	sar    bh,cl
  4449bc:	pop    rbp
  4449bd:	cdq    
  4449be:	pop    rbp
  4449bf:	call   FWORD PTR [rbp-0x67]
  4449c2:	pop    rbp
  4449c3:	push   rdx
  4449c5:	in     eax,dx
  4449c6:	in     al,dx
  4449c7:	call   rbp
  4449c9:	(bad)
  4449cc:	mov    ah,0x6b
  4449ce:	imul   edi,edi,0xffffffbb
  4449d1:	outs   dx,BYTE PTR ds:[rsi]
  4449d2:	outs   dx,BYTE PTR ds:[rsi]
  4449d3:	push   QWORD PTR [rax-0x45009c9b]
  4449d9:	jg     0x444a57
  4449db:	dec    esp
  4449dd:	jo     0x444a4e
  4449df:	push   QWORD PTR [rax-0x6a02aaaa]
  4449e5:	rex.W
  4449e6:	rex.W loopne 0x4449e9
  4449e9:	add    BYTE PTR [rax],al
  4449eb:	add    BYTE PTR [rax],al
  4449ed:	add    BYTE PTR [rax],al
  4449ef:	add    ah,al
  4449f1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4449f2:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4449f3:	push   rdi
  4449f5:	repz repz push rsi
  4449f9:	repnz icebp 
  4449fb:	call   FWORD PTR [rbp-0x67]
  4449fe:	pop    rbp
  4449ff:	jmp    QWORD PTR [rax]
  444a01:	mov    edi,0x995dff43
  444a06:	pop    rbp
  444a07:	push   rdx
  444a09:	in     eax,dx
  444a0a:	in     al,dx
  444a0b:	(bad)  
  444a0c:	fadd   st,st(2)
  444a0e:	sar    edi,0xe2
  444a11:	xchg   edx,eax
  444a12:	xchg   ecx,eax
  444a13:	call   QWORD PTR [rbx+rbx*2-0x2d2100a4]
  444a1a:	sar    edi,1
  444a1c:	stos   DWORD PTR es:[rdi],eax
  444a1d:	imul   ebp,DWORD PTR [rbx-0x1],0xff605fbf
  444a24:	mov    dl,0x46
  444a26:	rex sub ebx,DWORD PTR [rbp-0x67]
  444a2a:	pop    rbp
  444a2b:	call   FWORD PTR [rbp-0x67]
  444a2e:	pop    rbp
  444a2f:	call   FWORD PTR [rbp-0x67]
  444a32:	pop    rbp
  444a33:	call   FWORD PTR [rbp-0x67]
  444a36:	pop    rbp
  444a37:	call   FWORD PTR [rbp-0x67]
  444a3a:	pop    rbp
  444a3b:	call   FWORD PTR [rbp-0x67]
  444a3e:	pop    rbp
  444a3f:	inc    edi
  444a41:	cld    
  444a42:	(bad)  
  444a43:	jmp    QWORD PTR [rax]
  444a45:	mov    edi,0x995dff43
  444a4a:	pop    rbp
  444a4b:	jmp    QWORD PTR [rdx-0x5d00a9aa]
  444a51:	push   rsi
  444a52:	push   rsi
  444a53:	jmp    QWORD PTR [rdx-0x6200a9aa]
  444a59:	push   0x56a2ff66
  444a5e:	push   rsi
  444a5f:	(bad)  
  444a60:	mov    esi,0x8eff6565
  444a65:	rex.WB
  444a66:	rex.WB fisubr DWORD PTR [r15]
  444a69:	mov    ebx,0xed85ff4f
  444a6e:	xchg   edi,eax
  444a6f:	inc    BYTE PTR [rbx+rbp*8-0x147c0069]
  444a76:	xchg   esp,eax
  444a77:	(bad)  
  444a78:	jg     0x444a62
  444a7a:	nop
  444a7b:	(bad)  
  444a7c:	jns    0x444a61
  444a7e:	mov    bh,bh
  444a80:	sub    ecx,ecx
  444a82:	rex.XB inc r14d
  444a85:	cld    
  444a86:	(bad)  
  444a87:	jmp    QWORD PTR [rax]
  444a89:	mov    edi,0x9a6fff43
  444a8e:	data16 (bad) 
  444a90:	in     al,dx
  444a91:	int3   
  444a92:	int3   
  444a93:	jmp    QWORD PTR [rdx-0x2200a9aa]
  444a99:	mov    eax,DWORD PTR [rdi+0x5656a2ff]
  444a9f:	(bad)  
  444aa0:	mov    esi,0xc07c7170
  444aa5:	jne    0x444b1d
  444aa7:	ds (bad) 
  444aa9:	mov    ebx,0xef86ff4f
  444aae:	(bad)  
  444aaf:	inc    DWORD PTR [rsi-0x17]
  444ab2:	movsxd edi,edi
  444ab4:	rex.RXB jmp 0xffffffffe5884a1d
  444aba:	pop    rdi
  444abb:	(bad)  
  444abc:	cmp    eax,0x34ff58dd
  444ac1:	ror    DWORD PTR [rsi-0x1],cl
  444ac4:	sub    al,bh
  444ac6:	rex.X inc esp
  444ac9:	std    
  444aca:	int    0xff
  444acc:	sbb    BYTE PTR [rbx-0x23ab00c4],bh
  444ad2:	jmp    WORD PTR [rdx-0xb00a9aa]
  444ad9:	out    0xe5,eax
  444adb:	jmp    QWORD PTR [rdx-0x4300a9aa]
  444ae1:	jno    0x444b55
  444ae3:	xor    BYTE PTR [rax],al
  444ae5:	add    BYTE PTR [rax],al
  444ae7:	add    BYTE PTR [rdi],ch
  444ae9:	mov    ebx,0xea86ff4f
  444aee:	cwde   
  444aef:	call   FWORD PTR [rdx-0x17]
  444af2:	je     0x444af3
  444af4:	pop    rcx
  444af5:	(bad)  
  444af6:	jae    0x444af7
  444af8:	rex.R call 0xffffffffe4854a5e
  444afe:	pop    rsp
  444aff:	(bad)  
  444b00:	cmp    bl,bl
  444b02:	push   rsi
  444b03:	jmp    QWORD PTR [rbp-0x24]
  444b06:	js     0x444b07
  444b08:	adc    al,0xaf
  444b0a:	call   QWORD PTR ss:[rbp-0xa005e2a]
  444b11:	icebp  
  444b12:	lock (bad) 
  444b14:	(bad)  
  444b16:	sar    edi,1
  444b18:	div    cl
  444b1a:	out    dx,eax
  444b1b:	inc    esp
  444b1d:	lods   al,BYTE PTR ds:[rsi]
  444b1e:	stos   DWORD PTR es:[rdi],eax
  444b1f:	inc    DWORD PTR [rax]
  444b21:	add    BYTE PTR [rax],al
  444b23:	add    BYTE PTR [rax],al
  444b25:	add    BYTE PTR [rax],al
  444b27:	add    BYTE PTR [rdx],ah
  444b29:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  444b2a:	cmp    ebp,ebx
  444b2c:	(bad)  
  444b2d:	mov    esp,0xbc1eff41
  444b32:	call   FWORD PTR [r14]
  444b35:	mov    esp,0xbc1eff41
  444b3a:	call   FWORD PTR [r14]
  444b3d:	mov    esp,0xe86eff41
  444b42:	test   bh,bh
  444b44:	adc    al,0xaf
  444b46:	call   QWORD PTR ss:[rsi-0x8005d28]
  444b4d:	hlt    
  444b4e:	repz jmp rsi
  444b51:	fcmovnu st,st(2)
  444b53:	jmp    rsp
  444b55:	fcom   st(5)
  444b57:	push   rsi
  444b59:	icebp  
  444b5a:	out    dx,eax
  444b5b:	jmp    QWORD PTR [rbx+0xff7878]
	...
  444b6d:	add    BYTE PTR [rax],al
  444b6f:	add    ah,al
  444b71:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  444b72:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  444b73:	(bad)  
  444b74:	stc    
  444b75:	repnz lock push rdi
  444b79:	lock out dx,al
  444b7b:	call   FWORD PTR [rsi]
  444b7d:	mov    esp,0xaf14ff41
  444b82:	call   QWORD PTR ss:[rdi-0x5005b27]
  444b89:	div    dh
  444b8b:	(bad)  
  444b8c:	in     eax,dx
  444b8d:	jrcxz  0x444b70
  444b8f:	(bad)  
  444b90:	(bad)  
  444b91:	loopne 0x444b70
  444b93:	jmp    rdi
  444b95:	fstp   st(2)
  444b97:	push   rsi
  444b99:	icebp  
  444b9a:	out    dx,eax
  444b9b:	jmp    QWORD PTR [rbx+0xff7878]
	...
  444bad:	add    BYTE PTR [rax],al
  444baf:	add    BYTE PTR [rbx-0x6008788],ah
  444bb5:	repnz lock (bad) 
  444bb8:	stc    
  444bb9:	repnz lock call FWORD PTR [rcx]
  444bbd:	mov    ecx,0xda98ff3c
  444bc2:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  444bc3:	(bad)  
  444bc4:	sti    
  444bc5:	stc    
  444bc6:	clc    
  444bc7:	push   rbx
  444bc9:	(bad)  
  444bca:	call   0xffffffffe62c3cce
  444bcf:	(bad)  
  444bd0:	out    dx,al
  444bd1:	in     al,0xe2
  444bd3:	(bad)  
  444bd4:	jmp    0x444bb7
  444bd6:	(bad)  
  444bd8:	div    cl
  444bda:	out    dx,eax
  444bdb:	jmp    QWORD PTR [rbx+0xff7878]
	...
  444bed:	add    BYTE PTR [rax],al
  444bef:	add    BYTE PTR [rbx-0x8788],ah
  444bf5:	(bad)  
  444bf6:	(bad)  
  444bf7:	(bad)  
  444bf8:	(bad)  
  444bf9:	(bad)  
  444bfa:	(bad)  
  444bfb:	(bad)  
  444bfc:	(bad)  
  444bfd:	(bad)  
  444bfe:	(bad)  
  444bff:	(bad)  
  444c00:	(bad)  
  444c01:	(bad)  
  444c02:	(bad)  
  444c03:	(bad)  
  444c04:	(bad)  
  444c05:	(bad)  
  444c06:	(bad)  
  444c07:	(bad)  
  444c08:	(bad)  
  444c09:	(bad)  
  444c0a:	(bad)  
  444c0b:	(bad)  
  444c0c:	(bad)  
  444c0d:	(bad)  
  444c0e:	(bad)  
  444c0f:	(bad)  
  444c10:	(bad)  
  444c11:	(bad)  
  444c12:	(bad)  
  444c13:	(bad)  
  444c14:	(bad)  
  444c15:	(bad)  
  444c16:	(bad)  
  444c17:	(bad)  
  444c18:	(bad)  
  444c19:	(bad)  
  444c1a:	(bad)  
  444c1b:	jmp    QWORD PTR [rbx+0xff7878]
	...
  444c29:	add    BYTE PTR [rax],al
  444c2b:	add    BYTE PTR [rsi+riz*2+0x78a34266],dl
  444c32:	js     0x444c33
  444c34:	movabs ds:0xa3ff7878a3ff7878,eax
  444c3d:	js     0x444cb7
  444c3f:	jmp    QWORD PTR [rbx-0x5c008788]
  444c45:	js     0x444cbf
  444c47:	jmp    QWORD PTR [rbx-0x5c008788]
  444c4d:	js     0x444cc7
  444c4f:	jmp    QWORD PTR [rbx-0x5c008788]
  444c55:	js     0x444ccf
  444c57:	jmp    QWORD PTR [rbx-0x5c008788]
  444c5d:	js     0x444cd7
  444c5f:	call   QWORD PTR [rsi+riz*2+0x4266]
  444c66:	add    BYTE PTR [rax],al
  444c68:	add    BYTE PTR [rax],al
  444c6a:	add    BYTE PTR [rax],al
  444c6c:	movabs ds:0xa342666694ff7878,eax
  444c75:	js     0x444cef
  444c77:	inc    esp
  444c79:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  444c7a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  444c7b:	inc    esp
  444c7d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  444c7e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  444c7f:	inc    esp
  444c81:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  444c82:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  444c83:	inc    esp
  444c85:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  444c86:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  444c87:	inc    esp
  444c89:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  444c8a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  444c8b:	inc    esp
  444c8d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  444c8e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  444c8f:	inc    esp
  444c91:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  444c92:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  444c93:	inc    esp
  444c95:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  444c96:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  444c97:	jmp    QWORD PTR [rbx-0x6b008788]
  444c9d:	data16 rex.X movabs ds:0xa300000000ff7878,ax
  444ca9:	js     0x444d23
  444cab:	inc    DWORD PTR [rax]
  444cad:	add    BYTE PTR [rax],al
  444caf:	add    BYTE PTR [rax],al
  444cb1:	add    BYTE PTR [rax],al
  444cb3:	add    BYTE PTR [rbx-0x1e008788],ah
  444cb9:	(bad)  
  444cba:	(bad)  
  444cbb:	jmp    rcx
  444cbd:	(bad)  
  444cbe:	(bad)  
  444cbf:	jmp    rcx
  444cc1:	(bad)  
  444cc2:	(bad)  
  444cc3:	jmp    rcx
  444cc5:	(bad)  
  444cc6:	(bad)  
  444cc7:	jmp    rcx
  444cc9:	(bad)  
  444cca:	(bad)  
  444ccb:	jmp    rcx
  444ccd:	(bad)  
  444cce:	(bad)  
  444ccf:	jmp    rcx
  444cd1:	(bad)  
  444cd2:	(bad)  
  444cd3:	jmp    rcx
  444cd5:	(bad)  
  444cd6:	(bad)  
  444cd7:	jmp    QWORD PTR [rbx+0xff7878]
  444cdd:	add    BYTE PTR [rax],al
  444cdf:	add    BYTE PTR [rax],al
  444ce1:	add    BYTE PTR [rax],al
  444ce3:	add    BYTE PTR [rbx+0xff7878],ah
	...
  444cf1:	add    BYTE PTR [rax],al
  444cf3:	add    BYTE PTR [rbx-0x5c008788],ah
  444cf9:	js     0x444d73
  444cfb:	jmp    QWORD PTR [rbx-0x5c008788]
  444d01:	js     0x444d7b
  444d03:	jmp    QWORD PTR [rbx-0x5c008788]
  444d09:	js     0x444d83
  444d0b:	jmp    QWORD PTR [rbx-0x5c008788]
  444d11:	js     0x444d8b
  444d13:	jmp    QWORD PTR [rbx-0x5c008788]
  444d19:	js     0x444d93
  444d1b:	inc    DWORD PTR [rax]
	...
  444d25:	add    BYTE PTR [rax],al
  444d27:	add    al,al
  444d29:	add    DWORD PTR [rax],eax
  444d2b:	add    al,al
  444d2d:	add    BYTE PTR [rax],al
  444d2f:	add    al,al
  444d31:	add    BYTE PTR [rax],al
  444d33:	add    al,al
	...
  444d41:	add    DWORD PTR [rax],eax
  444d43:	add    BYTE PTR [rax],al
  444d45:	add    eax,DWORD PTR [rax]
  444d47:	add    BYTE PTR [rax],al
  444d49:	add    eax,DWORD PTR [rax]
  444d4b:	add    al,al
  444d4d:	add    eax,DWORD PTR [rax]
  444d4f:	add    al,al
  444d51:	add    eax,DWORD PTR [rax]
  444d53:	add    al,al
  444d55:	add    eax,DWORD PTR [rax]
  444d57:	add    BYTE PTR [rax-0x7fffffff],al
  444d5d:	add    DWORD PTR [rax],eax
  444d5f:	add    BYTE PTR [rax+0x6],ah
  444d62:	add    BYTE PTR [rax],al
  444d64:	loopne 0x444d6d
  444d66:	add    BYTE PTR [rax],al
  444d68:	or     eax,DWORD PTR [rax+0x0]
  444d6b:	add    DWORD PTR [rax],eax
  444d6d:	add    BYTE PTR [rax],al
  444d6f:	(bad)  
  444d70:	(bad)  
  444d71:	(bad)  
  444d72:	inc    DWORD PTR [rcx]
  444d74:	add    BYTE PTR [rax],al
  444d76:	add    BYTE PTR [rax],al
  444d78:	add    BYTE PTR [rax],al
  444d7a:	add    BYTE PTR [rdx+rax*1],cl
  444d7d:	add    BYTE PTR [rax],al
  444d7f:	add    BYTE PTR [rcx+0x53],dl
  444d82:	jns    0x444df7
  444d84:	je     0x444deb
  444d86:	ins    DWORD PTR es:[rdi],dx
  444d87:	cs rex.R jb 0x444dec
  444d8b:	ja     0x444df6
  444d8d:	outs   dx,BYTE PTR ds:[rsi]
  444d8e:	addr32 sub al,0x20
  444d91:	push   rsi
  444d92:	gs jb  0x444e08
  444d95:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  444d9c:	xor    BYTE PTR cs:[rsi],ch
  444d9f:	xor    BYTE PTR [rax+riz*1],ch
  444da2:	rex.XB jne 0x444e11
  444da5:	je     0x444e1c
  444da7:	jb     0x444e0e
  444da9:	cmp    eax,0x7475656e
  444dae:	jb     0x444e11
  444db0:	ins    BYTE PTR es:[rdi],dx
  444db1:	sub    al,0x20
  444db3:	push   rax
  444db4:	jne    0x444e18
  444db6:	ins    BYTE PTR es:[rdi],dx
  444db7:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  444dbe:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  444dc2:	(bad)  
  444dc3:	xor    BYTE PTR [rbx],dh
  444dc5:	xor    ax,0x3766
  444dc9:	xor    WORD PTR [rcx],si
  444dcc:	fs xor eax,0x61336130
  444dd2:	add    eax,0x1
  444dd7:	adc    edx,DWORD PTR [rbx+0x79]
  444dda:	jae    0x444e50
  444ddc:	gs ins DWORD PTR es:[rdi],dx
  444dde:	cs rex.R jb 0x444e43
  444de2:	ja     0x444e4d
  444de4:	outs   dx,BYTE PTR ds:[rsi]
  444de5:	movsxd rbp,DWORD PTR cs:[r15d+0x6e]
  444deb:	add    al,BYTE PTR [rax]
  444ded:	add    BYTE PTR [rax],al
  444def:	or     BYTE PTR [rcx+0x63],cl
  444df2:	outs   dx,DWORD PTR ds:[rsi]
  444df3:	outs   dx,BYTE PTR ds:[rsi]
  444df4:	rex.R (bad) 
  444df6:	je     0x444e59
  444df8:	or     BYTE PTR [rcx+0x63],cl
  444dfb:	outs   dx,DWORD PTR ds:[rsi]
  444dfc:	outs   dx,BYTE PTR ds:[rsi]
  444dfd:	push   rbx
  444dfe:	imul   edi,DWORD PTR [rdx+0x65],0x13020407
  444e05:	push   rbx
  444e06:	jns    0x444e7b
  444e08:	je     0x444e6f
  444e0a:	ins    DWORD PTR es:[rdi],dx
  444e0b:	cs rex.R jb 0x444e70
  444e0f:	ja     0x444e7a
  444e11:	outs   dx,BYTE PTR ds:[rsi]
  444e12:	addr32 cs push rbx
  444e15:	imul   edi,DWORD PTR [rdx+0x65],0x2
  444e1c:	add    al,BYTE PTR [rax]
  444e1e:	add    BYTE PTR [rax],al
  444e20:	or     DWORD PTR [rbx],eax
  444e22:	add    BYTE PTR [rax],al
  444e24:	add    BYTE PTR [rip+0xfffffffffffffffc],al        # 0x444e26
  444e2a:	adc    edx,DWORD PTR [rbx+0x79]
  444e2d:	jae    0x444ea3
  444e2f:	gs ins DWORD PTR es:[rdi],dx
  444e31:	cs rex.R jb 0x444e96
  444e35:	ja     0x444ea0
  444e37:	outs   dx,BYTE PTR ds:[rsi]
  444e38:	addr32 cs push rbx
  444e3b:	imul   edi,DWORD PTR [rdx+0x65],0x2
  444e42:	add    eax,0x74646977
  444e47:	push   0x69656806
  444e4c:	addr32 push 0x8000074
  444e52:	or     BYTE PTR [rdx],al
	...
  444e5c:	add    BYTE PTR [rax],al
  444e5e:	add    BYTE PTR [rdi],cl
  444e60:	add    eax,DWORD PTR [rax]
  444e62:	add    BYTE PTR [rax],al
  444e64:	xchg   esi,eax
  444e65:	(bad)  
  444e66:	add    BYTE PTR [rax],al
  444e68:	add    al,BYTE PTR [rax]
  444e6a:	add    BYTE PTR [rcx],al
  444e6c:	add    BYTE PTR [rsi],al
  444e6e:	add    BYTE PTR [rax],ah
  444e70:	and    BYTE PTR [rax],dl
  444e72:	add    BYTE PTR [rcx],al
  444e74:	add    BYTE PTR [rax+rax*1],al
  444e77:	call   0x66444e7e
  444e7c:	add    BYTE PTR [rax],al
  444e7e:	add    BYTE PTR [rax],dl
  444e80:	adc    BYTE PTR [rax],dl
  444e82:	add    BYTE PTR [rcx],al
  444e84:	add    BYTE PTR [rax+rax*1],al
  444e87:	sub    BYTE PTR [rcx],al
  444e89:	add    BYTE PTR [rax],al
  444e8b:	rex.WRX add r8,QWORD PTR [rax]
  444e8e:	add    BYTE PTR [rax],ah
  444e90:	and    BYTE PTR [rax],al
  444e92:	add    BYTE PTR [rcx],al
  444e94:	add    BYTE PTR [rax],cl
  444e96:	add    BYTE PTR [rax+0x76000008],ch
  444e9c:	add    al,0x0
  444e9e:	add    BYTE PTR [rax],dl
  444ea0:	adc    BYTE PTR [rax],al
  444ea2:	add    BYTE PTR [rcx],al
  444ea4:	add    BYTE PTR [rax],cl
  444ea6:	add    BYTE PTR [rax+0x5],ch
  444ea9:	add    BYTE PTR [rax],al
  444eab:	(bad)  
  444eac:	or     eax,0x20200000
  444eb1:	add    BYTE PTR [rax],al
  444eb3:	add    DWORD PTR [rax],eax
  444eb5:	and    BYTE PTR [rax],al
  444eb7:	test   al,0x10
  444eb9:	add    BYTE PTR [rax],al
  444ebb:	xchg   BYTE PTR [rdx],dl
  444ebd:	add    BYTE PTR [rax],al
  444ebf:	adc    BYTE PTR [rax],dl
  444ec1:	add    BYTE PTR [rax],al
  444ec3:	add    DWORD PTR [rax],eax
  444ec5:	and    BYTE PTR [rax],al
  444ec7:	push   0x2e000004
  444ecc:	and    eax,DWORD PTR [rax]
  444ece:	add    BYTE PTR [rax],ch
  444ed0:	add    BYTE PTR [rax],al
  444ed2:	add    BYTE PTR [rax],ah
  444ed4:	add    BYTE PTR [rax],al
  444ed6:	add    BYTE PTR [rax+0x0],al
  444ed9:	add    BYTE PTR [rax],al
  444edb:	add    DWORD PTR [rax],eax
  444edd:	add    al,0x0
  444edf:	add    BYTE PTR [rax],al
  444ee1:	add    BYTE PTR [rax],al
  444ee3:	add    BYTE PTR [rdx],al
	...
  444efd:	add    BYTE PTR [rax],0x0
  444f00:	add    BYTE PTR [rax],0x0
  444f03:	add    BYTE PTR [rax+0x800080],al
  444f09:	add    BYTE PTR [rax],al
  444f0b:	add    BYTE PTR [rax],0x80
  444f0e:	add    BYTE PTR [rax-0x7fffff80],al
  444f14:	add    BYTE PTR [rax-0x3f3f4000],0x0
  444f1b:	add    BYTE PTR [rax],al
  444f1d:	inc    DWORD PTR [rax]
  444f1f:	add    bh,bh
  444f21:	add    BYTE PTR [rax],al
  444f23:	add    bh,bh
  444f25:	inc    DWORD PTR [rax]
  444f27:	inc    DWORD PTR [rax]
  444f29:	add    BYTE PTR [rax],al
  444f2b:	inc    DWORD PTR [rax]
  444f2d:	inc    DWORD PTR [rax]
  444f2f:	(bad)  
  444f30:	inc    DWORD PTR [rax]
  444f32:	add    bh,bh
  444f34:	(bad)  
  444f35:	inc    DWORD PTR [rax]
	...
  444f47:	add    BYTE PTR [rax],al
  444f49:	(bad)  
  444f4a:	ja     0x444fc3
  444f4c:	ja     0x444fc5
  444f4e:	ja     0x444fc7
  444f50:	ja     0x444fc9
  444f52:	ja     0x444fcb
  444f54:	jo     0x444f56
  444f56:	add    BYTE PTR [rax],al
  444f58:	add    BYTE PTR [rdi],al
  444f5a:	mov    BYTE PTR [rax-0x77777778],cl
  444f60:	mov    BYTE PTR [rax+0x708f88],cl
  444f66:	add    BYTE PTR [rax],al
  444f68:	add    BYTE PTR [rdi],al
  444f6a:	mov    BYTE PTR [rax-0x77777778],cl
  444f70:	mov    BYTE PTR [rax+0x708888],cl
  444f76:	add    BYTE PTR [rax],al
  444f78:	add    BYTE PTR [rdi],al
  444f7a:	(bad)  
  444f7b:	(bad)
  444f7f:	mov    BYTE PTR [rax+0x708f8888],cl
  444f85:	add    BYTE PTR [rax],al
  444f87:	add    BYTE PTR [rax],al
  444f89:	(bad)  
  444f8a:	mov    BYTE PTR [rax-0x77777778],cl
  444f90:	mov    BYTE PTR [rax+0x708888],cl
  444f96:	add    BYTE PTR [rax],al
  444f98:	add    BYTE PTR [rdi],al
  444f9a:	clc    
  444f9b:	clc    
  444f9c:	clc    
  444f9d:	mov    BYTE PTR [rax-0x78777778],cl
  444fa3:	mov    BYTE PTR [rax+0x0],dh
  444fa6:	add    BYTE PTR [rax],al
  444fa8:	add    BYTE PTR [rdi],al
  444faa:	vpmacssdqh ymm1,ymm14,ymm8,YMMWORD PTR [r8-0x77777778]
  444fb4:	jo     0x444fb6
  444fb6:	add    BYTE PTR [rax],al
  444fb8:	add    BYTE PTR [rdi],al
  444fba:	mov    BYTE PTR [rdi-0x8],dh
  444fbd:	mov    BYTE PTR [rax-0x77777778],cl
  444fc3:	mov    BYTE PTR [rax+0x0],dh
  444fc6:	add    BYTE PTR [rax],al
  444fc8:	add    BYTE PTR [rdi],al
  444fca:	jmp    QWORD PTR [rdi+0x78]
  444fcd:	clc    
  444fce:	clc    
  444fcf:	mov    BYTE PTR [rax+0x708f8888],cl
  444fd5:	add    BYTE PTR [rax],al
  444fd7:	add    BYTE PTR [rax],al
  444fd9:	(bad)  
  444fda:	(bad)  
  444fdb:	js     0x445054
  444fdd:	mov    BYTE PTR [rdi-0x77777771],cl
  444fe3:	mov    BYTE PTR [rax+0x0],dh
  444fe6:	add    BYTE PTR [rax],al
  444fe8:	add    BYTE PTR [rdi],al
  444fea:	clc    
  444feb:	ja     0x444f77
  444fed:	(bad)
  444ff1:	mov    BYTE PTR [rax+0x708f],cl
  444ff7:	(bad)  
  444ff8:	ja     0x445070
  444ffa:	jbe    0x445034
  444ffc:	scas   eax,DWORD PTR es:[rdi]
  444ffd:	jbe    0x444ff7
  444fff:	clc    
  445000:	mov    BYTE PTR [rax+0x708f88],cl
  445006:	add    BYTE PTR [rdx],al
  445008:	mov    cl,BYTE PTR [rax-0x8858578]
  44500e:	js     0x444f9f
  445010:	vpmacssdqh xmm6,xmm14,xmm0,XMMWORD PTR [r8+0x0]
  445017:	add    edi,DWORD PTR [rdx-0x76]
  44501a:	stos   BYTE PTR es:[rdi],al
  44501b:	mov    edx,0xf8673f7a
  445020:	mov    BYTE PTR [rdi+0x708f88],cl
  445026:	add    BYTE PTR [rdx],cl
  445028:	mov    dh,BYTE PTR [rdi-0x55585749]
  44502e:	repz clc 
  445030:	clc    
  445031:	clc    
  445032:	mov    BYTE PTR [rdi+0x3000070],cl
  445038:	mov    bh,BYTE PTR [rdx-0x58]
  44503b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  44503c:	test   al,0xa8
  44503e:	ss clc 
  445040:	vpmacssdqh xmm6,xmm0,xmm0,XMMWORD PTR [r8+0x0]
  445047:	or     dh,BYTE PTR [rdi-0x58]
  44504a:	test   al,0xa8
  44504c:	stos   DWORD PTR es:[rdi],eax
  44504d:	jp     0x4450ce
  44504f:	(bad)  
  445053:	(bad)  
  445054:	jo     0x445056
  445056:	add    BYTE PTR [rdi],al
  445058:	movabs ds:0xf8f8f8a7a8a7333a,eax
  445061:	clc    
  445062:	clc    
  445063:	push   QWORD PTR [rax+0x0]
  445066:	add    BYTE PTR [rax],al
  445068:	add    BYTE PTR [rax],cl
  44506a:	(bad)  
  44506b:	cmp    BYTE PTR [rdx-0x7700081],cl
  445071:	(bad)
  445075:	add    BYTE PTR [rax],al
  445077:	add    BYTE PTR [rax],al
  445079:	(bad)  
  44507a:	jmp    FWORD PTR [rax]
  44507c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  44507d:	dec    DWORD PTR [rdi-0x7070708]
  445083:	clc    
  445084:	jo     0x445086
  445086:	add    BYTE PTR [rax],al
  445088:	add    BYTE PTR [rdi],al
  44508a:	clc    
  44508b:	movabs ds:0x8f8f8f8f8ffff87f,eax
  445094:	jo     0x445096
  445096:	add    BYTE PTR [rax],al
  445098:	add    BYTE PTR [rdi],al
  44509a:	push   QWORD PTR [rdi]
  44509c:	(bad)  
  44509d:	(bad)  
  44509e:	clc    
  44509f:	(bad)  
  4450a0:	clc    
  4450a1:	clc    
  4450a2:	clc    
  4450a3:	clc    
  4450a4:	jo     0x4450a6
  4450a6:	add    BYTE PTR [rax],al
  4450a8:	add    BYTE PTR [rdi],al
  4450aa:	(bad)  
  4450ab:	(bad)  
  4450ac:	clc    
  4450ad:	clc    
  4450ae:	(bad)  
  4450af:	clc    
  4450b0:	(bad)  
  4450b1:	(bad)  
  4450b2:	(bad)  
  4450b3:	push   QWORD PTR [rax+0x0]
  4450b6:	add    BYTE PTR [rax],al
  4450b8:	add    BYTE PTR [rdi],al
  4450ba:	jbe    0x445133
  4450bc:	ja     0x445135
  4450be:	ja     0x445137
  4450c0:	ja     0x445129
  4450c2:	jbe    0x44513b
  4450c4:	jo     0x4450c6
  4450c6:	add    BYTE PTR [rax],al
  4450c8:	add    BYTE PTR [rdi+0x77],dh
  4450cb:	jl     0x445054
  4450cd:	xchg   DWORD PTR [rax-0x77777778],ecx
  4450d3:	mov    BYTE PTR [rdi+0x0],dh
  4450d6:	add    BYTE PTR [rax],al
  4450d8:	(bad)  
  4450d9:	xchg   eax,ecx
  4450db:	ja     0x445159
  4450dd:	ja     0x4450a6
  4450df:	(bad)  
  4450e0:	jl     0x445159
  4450e2:	jl     0x44515b
  4450e4:	enter  0x70,0x0
  4450e8:	js     0x44515a
  4450ea:	js     0x445074
  4450ec:	mov    BYTE PTR [rax-0x77777778],cl
  4450f2:	mov    BYTE PTR [rdi+0x7008708],al
  4450f8:	ja     0x4450fa
  4450fa:	js     0x445084
  4450fc:	mov    al,bh
  4450fe:	(bad)
  445102:	mov    BYTE PTR [rax+0x707700],cl
  445108:	add    BYTE PTR [rax],al
  44510a:	jg     0x44509b
  44510c:	clc    
  44510d:	dec    DWORD PTR [rdi-0x70771]
  445113:	xchg   DWORD PTR [rax],eax
  445115:	add    BYTE PTR [rax],al
  445117:	add    BYTE PTR [rax],al
  445119:	add    BYTE PTR [rdi+0x77],dh
  44511c:	ja     0x445195
  44511e:	ja     0x445197
  445120:	ja     0x445199
  445122:	ja     0x44519b
	...
  445134:	add    BYTE PTR [rax],al
  445136:	add    bh,bh
  445138:	(bad)  
  445139:	(bad)  
  44513a:	(bad)  
  44513b:	clc    
  44513c:	add    BYTE PTR [rax],al
  44513e:	(bad)  
  44513f:	clc    
  445140:	add    BYTE PTR [rax],al
  445142:	(bad)  
  445143:	clc    
  445144:	add    BYTE PTR [rax],al
  445146:	(bad)  
  445147:	clc    
  445148:	add    BYTE PTR [rax],al
  44514a:	(bad)  
  44514b:	clc    
  44514c:	add    BYTE PTR [rax],al
  44514e:	(bad)  
  44514f:	clc    
  445150:	add    BYTE PTR [rax],al
  445152:	(bad)  
  445153:	clc    
  445154:	add    BYTE PTR [rax],al
  445156:	(bad)  
  445157:	clc    
  445158:	add    BYTE PTR [rax],al
  44515a:	(bad)  
  44515b:	clc    
  44515c:	add    BYTE PTR [rax],al
  44515e:	(bad)  
  44515f:	clc    
  445160:	add    BYTE PTR [rax],al
  445162:	(bad)  
  445163:	clc    
  445164:	add    BYTE PTR [rax],al
  445166:	(bad)  
  445167:	add    BYTE PTR [rax],0x0
  44516a:	(bad)  
  44516b:	add    BYTE PTR [rax],0x0
  44516e:	(bad)  
  44516f:	add    BYTE PTR [rax],0x0
  445172:	(bad)  
  445173:	add    BYTE PTR [rax],0x0
  445176:	(bad)  
  445177:	add    BYTE PTR [rax],0x0
  44517a:	(bad)  
  44517b:	add    BYTE PTR [rax],0x0
  44517e:	(bad)  
  44517f:	add    BYTE PTR [rax],0x0
  445182:	(bad)  
  445183:	clc    
  445184:	add    BYTE PTR [rax],al
  445186:	(bad)  
  445187:	clc    
  445188:	add    BYTE PTR [rax],al
  44518a:	(bad)  
  44518b:	clc    
  44518c:	add    BYTE PTR [rax],al
  44518e:	(bad)  
  44518f:	clc    
  445190:	add    BYTE PTR [rax],al
  445192:	(bad)  
  445193:	clc    
  445194:	add    BYTE PTR [rax],al
  445196:	(bad)  
  445197:	clc    
  445198:	add    BYTE PTR [rax],al
  44519a:	(bad)  
  44519b:	lock add BYTE PTR [rax],al
  44519e:	pavgb  mm0,QWORD PTR [rax]
  4451a1:	add    BYTE PTR [rdi],al
  4451a3:	(bad)  
  4451a4:	add    BYTE PTR [rax],al
  4451a6:	and    ecx,DWORD PTR [rax+rax*1+0xfc3100]
  4451ad:	add    BYTE PTR [rdi],bh
  4451af:	cld    
  4451b0:	add    BYTE PTR [rax],al
  4451b2:	(bad)  
  4451b3:	(bad)  
  4451b4:	(bad)  
  4451b5:	(bad)  
  4451b6:	jmp    FWORD PTR [rax]
  4451b8:	add    BYTE PTR [rax],al
  4451ba:	add    BYTE PTR [rax],dl
  4451bc:	add    BYTE PTR [rax],al
  4451be:	add    BYTE PTR [rax],ah
  4451c0:	add    BYTE PTR [rax],al
  4451c2:	add    BYTE PTR [rcx],al
  4451c4:	add    BYTE PTR [rax+rax*1],al
  4451c7:	add    BYTE PTR [rax],al
  4451c9:	add    BYTE PTR [rax],al
  4451cb:	add    BYTE PTR [rax],0x0
	...
  4451e2:	add    BYTE PTR [rax],al
  4451e4:	add    BYTE PTR [rax+0x800000],al
  4451ea:	add    BYTE PTR [rax],al
  4451ec:	add    BYTE PTR [rax+0x8000],0x0
  4451f3:	add    BYTE PTR [rax],0x80
  4451f6:	add    BYTE PTR [rax-0x7fffff80],al
  4451fc:	add    BYTE PTR [rax-0x3f3f4000],0x0
  445203:	add    BYTE PTR [rax],al
  445205:	inc    DWORD PTR [rax]
  445207:	add    bh,bh
  445209:	add    BYTE PTR [rax],al
  44520b:	add    bh,bh
  44520d:	inc    DWORD PTR [rax]
  44520f:	inc    DWORD PTR [rax]
  445211:	add    BYTE PTR [rax],al
  445213:	inc    DWORD PTR [rax]
  445215:	inc    DWORD PTR [rax]
  445217:	(bad)  
  445218:	inc    DWORD PTR [rax]
  44521a:	add    bh,bh
  44521c:	(bad)  
  44521d:	inc    DWORD PTR [rax]
  44521f:	add    BYTE PTR [rdi+0x77],dh
  445222:	ja     0x44529b
  445224:	ja     0x44529d
  445226:	add    BYTE PTR [rax],al
  445228:	js     0x4451b9
  44522a:	clc    
  44522b:	mov    BYTE PTR [rax+0x7f0000f7],cl
  445231:	xchg   DWORD PTR [rdi-0x78],ebp
  445234:	mov    BYTE PTR [rdi-0x8710000],al
  44523a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  44523b:	clc    
  44523c:	mov    bh,dh
  44523e:	add    BYTE PTR [rdi+0x67],dh
  445241:	movsxd ecx,DWORD PTR [rdx+0xf7887f]
  445247:	test   al,0x7b
  445249:	xchg   DWORD PTR [rdi+0xf7f827],ebp
  44524f:	cmp    BYTE PTR [rdx+0x78fa7a7a],ch
  445255:	test   DWORD PTR [rax],0xb78a8aa8
  44525b:	test   al,0xf8
  44525d:	test   DWORD PTR [rax],0x8a3a3a3a
  445263:	(bad)
  445267:	add    BYTE PTR [rdi-0x7570d],cl
  44526d:	test   DWORD PTR [rax],0x8ffa7f00
  445273:	(bad)
  445277:	add    BYTE PTR [rdi-0x1],bh
  44527a:	(bad)  
  44527b:	(bad)  
  44527c:	push   rdi
  44527e:	add    BYTE PTR [rax],al
  445280:	ja     0x4452f9
  445282:	ja     0x4452fb
  445284:	ja     0x4452fd
  445286:	add    BYTE PTR [rdi],al
  445288:	(bad)  
  445289:	mov    BYTE PTR [rax+0x70c08888],cl
  44528f:	jo     0x445298
  445291:	mov    BYTE PTR [rax+0x7708888],cl
  445297:	add    BYTE PTR [rdi],al
  445299:	(bad)  
  44529a:	jl     0x445318
  44529c:	ja     0x44530e
  44529e:	add    al,al
  4452a0:	add    eax,DWORD PTR [rax]
  4452a2:	add    al,al
  4452a4:	add    eax,DWORD PTR [rax]
  4452a6:	add    al,al
  4452a8:	add    eax,DWORD PTR [rax]
  4452aa:	add    al,al
  4452ac:	add    eax,DWORD PTR [rax]
  4452ae:	add    BYTE PTR [rax],al
  4452b0:	add    eax,DWORD PTR [rax]
  4452b2:	add    BYTE PTR [rax],al
  4452b4:	add    eax,DWORD PTR [rax]
  4452b6:	add    BYTE PTR [rax],al
  4452b8:	add    eax,DWORD PTR [rax]
  4452ba:	add    BYTE PTR [rax],al
  4452bc:	add    eax,DWORD PTR [rax]
  4452be:	add    BYTE PTR [rax],al
  4452c0:	add    eax,DWORD PTR [rax]
  4452c2:	add    al,al
  4452c4:	add    eax,DWORD PTR [rax]
  4452c6:	add    al,al
  4452c8:	add    eax,DWORD PTR [rax]
  4452ca:	add    al,al
  4452cc:	add    eax,DWORD PTR [rax]
  4452ce:	add    al,al
  4452d0:	add    eax,DWORD PTR [rax]
  4452d2:	add    BYTE PTR [rax+0x60000005],ah
  4452d8:	(bad)  
  4452d9:	add    BYTE PTR [rax],al
  4452db:	loopne 0x4452e4
  4452dd:	add    BYTE PTR [rax],al
  4452df:	sub    BYTE PTR [rax],al
  4452e1:	add    BYTE PTR [rax],al
  4452e3:	and    BYTE PTR [rax],al
  4452e5:	add    BYTE PTR [rax],al
  4452e7:	add    BYTE PTR [rax],al
  4452ea:	add    BYTE PTR [rcx],al
  4452ec:	add    BYTE PTR [rax],cl
  4452ee:	add    BYTE PTR [rax],al
  4452f0:	add    BYTE PTR [rax],al
  4452f2:	add    BYTE PTR [rax],al
  4452f4:	add    al,0x0
	...
  4452fe:	add    BYTE PTR [rax],al
  445300:	add    DWORD PTR [rax],eax
  445302:	add    BYTE PTR [rax],al
  445304:	add    DWORD PTR [rax],eax
  445306:	add    BYTE PTR [rax],al
  445308:	add    BYTE PTR [rax],al
  44530a:	add    BYTE PTR [rbx-0x5aff8788],ah
  445310:	jnp    0x44538d
  445312:	add    BYTE PTR [rax+0x2a007f7f],ch
  445318:	cdq    
  445319:	add    BYTE PTR [r14],r10b
  44531c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  44531d:	add    BYTE PTR [rcx],bpl
  445320:	mov    bl,0x53
  445322:	add    BYTE PTR [rbp-0x67],bl
  445325:	pop    rbp
  445326:	add    BYTE PTR [rax-0x56],bl
  445329:	add    BYTE PTR fs:[rsi-0x53],bl
  44532d:	imul   eax,DWORD PTR [rax],0x62
  445330:	mov    cl,0x6f
  445332:	add    BYTE PTR [rax-0x49],ah
  445335:	jae    0x445337
  445337:	push   0xffffffffffffffb3
  445339:	je     0x44533b
  44533b:	ins    DWORD PTR es:[rdi],dx
  44533c:	mov    dl,0x76
  44533e:	add    BYTE PTR [rdi-0x4e],ch
  445341:	jns    0x445343
  445343:	ins    DWORD PTR es:[rdi],dx
  445344:	mov    ch,0x78
  445346:	add    BYTE PTR [rax-0x4d],dh
  445349:	jp     0x44534b
  44534b:	jno    0x445303
  44534d:	jl     0x44534f
  44534f:	sub    ebp,eax
  445351:	add    BYTE PTR [r10],bpl
  445354:	enter  0x43,0x2b
  445358:	enter  0x44,0x31
  44535c:	(bad)  
  44535d:	rex.WB add BYTE PTR [rip+0x37004ed4],sil        # 0x3744a238
  445364:	(bad)  
  445365:	push   rax
  445366:	add    BYTE PTR [rbx],bh
  445368:	fist   DWORD PTR [rsi+0x0]
  44536b:	cmp    al,0xdb
  44536d:	push   rdi
  44536e:	add    BYTE PTR [rbx*8-0x23c1ffa9],bh
  445375:	pop    rdx
  445376:	add    BYTE PTR [rsi],bh
  445378:	loopne 0x4453d4
  44537a:	add    BYTE PTR [rsi+rbx*8+0x5f],al
  44537e:	add    BYTE PTR [rcx-0x1f],al
  445381:	pop    rsp
  445382:	add    BYTE PTR [rdx+riz*8+0x5f],al
  445386:	add    BYTE PTR [rcx-0x1b],al
  445389:	pop    rsi
  44538a:	add    BYTE PTR [rsi+riz*8+0x5f],al
  44538e:	add    BYTE PTR [rcx-0x27],cl
  445391:	(bad)  
  445392:	add    BYTE PTR [rbx+rbx*8+0x63],cl
  445396:	add    BYTE PTR [rax-0x28],bl
  445399:	outs   dx,BYTE PTR ds:[rsi]
  44539a:	add    BYTE PTR [rax-0x23],bl
  44539d:	outs   dx,BYTE PTR ds:[rsi]
  44539e:	add    BYTE PTR [rbp-0x22],ah
  4453a1:	jp     0x4453a3
  4453a3:	imul   ebx,ebx,0x7c
  4453a6:	add    BYTE PTR [rbx-0x1f],al
  4453a9:	(bad)  
  4453aa:	add    BYTE PTR [rbp-0x1a],al
  4453ad:	(bad)  
  4453ae:	add    BYTE PTR [rbx-0x18],al
  4453b1:	(bad)  
  4453b2:	add    BYTE PTR [rbp-0x18],al
  4453b5:	(bad)  
  4453b6:	add    BYTE PTR [rsi-0x17],al
  4453b9:	add    BYTE PTR fs:[rcx-0x18],cl
  4453bd:	data16 add BYTE PTR [rsi+riz*8+0x68],cl
  4453c2:	add    BYTE PTR [rcx+riz*8+0x6e],dl
  4453c6:	add    BYTE PTR [rdx-0x14],dl
  4453c9:	ins    DWORD PTR es:[rdi],dx
  4453ca:	add    BYTE PTR [rcx-0x1d],ch
  4453cd:	jle    0x4453cf
  4453cf:	fs in  eax,dx
  4453d1:	jle    0x4453d3
  4453d3:	je     0x4453b3
  4453d5:	xchg   BYTE PTR [rax],al
  4453d7:	js     0x4453b5
  4453d9:	mov    DWORD PTR [rax],eax
  4453db:	jl     0x4453bb
  4453dd:	mov    WORD PTR [rax],es
  4453df:	jae    0x4453c6
  4453e1:	xchg   BYTE PTR [rax],al
  4453e3:	jg     0x4453c7
  4453e5:	pop    QWORD PTR [rax]
  4453e7:	jns    0x4453d5
  4453e9:	lea    eax,[rax]
  4453eb:	stos   DWORD PTR es:[rdi],eax
  4453ec:	test   DWORD PTR [rbp-0x75755200],eax
  4453f2:	add    BYTE PTR [rdx-0x49ff6f70],dh
  4453f8:	xchg   edi,eax
  4453f9:	xchg   edi,eax
  4453fa:	add    BYTE PTR [rdx-0x41ff6263],bh
  445400:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  445401:	movabs ds:0xaeaec400a9aac100,eax
  44540a:	add    bh,al
  44540c:	mov    bl,0xb2
  44540e:	add    ah,cl
  445410:	mov    ah,0xb3
  445412:	add    cl,cl
  445414:	mov    dh,0xb5
  445416:	add    ah,cl
  445418:	mov    ah,0xb4
  44541a:	add    dl,cl
  44541c:	mov    eax,0xb9cb00b6
  445421:	mov    eax,0xb9bacc00
  445426:	add    dh,cl
  445428:	mov    esp,0xbdce00ba
  44542d:	mov    esp,0xbdbed000
  445432:	add    BYTE PTR [rsi-0x76ff6917],al
  445438:	out    dx,al
  445439:	(bad)  
  44543a:	add    BYTE PTR [rbx-0x74ff6314],cl
  445440:	lock popf 
  445442:	add    BYTE PTR [rax+rsi*8-0xd71ff62],cl
  445449:	movabs eax,ds:0xbec0d100a1f09000
  445452:	add    dl,dl
  445454:	ret    0xc0
  445457:	rol    esp,cl
  445459:	ret    0xd400
  44545c:	(bad)
  445460:	mov    ch,0x0
  445463:	fadd   st,st(7)
  445465:	mov    BYTE PTR [rax],0xd7
  445468:	enter  0xc6,0xd8
  44546c:	enter  0xc7,0xd7
  445470:	leave  
  445471:	enter  0xd900,0xca
  445475:	enter  0xda00,0xcc
  445479:	retf   0xdd00
  44547c:	int    0xcb
  44547e:	add    bl,bl
  445480:	int    0xcc
  445482:	add    ah,bl
  445484:	int    0xcc
  445486:	add    dh,bl
  445488:	ror    dh,1
  44548a:	add    ah,bl
  44548c:	(bad)  
  44548d:	iret   
  44548e:	add    dh,bl
  445490:	rcl    eax,1
  445492:	add    al,ah
  445494:	rcl    cl,cl
  445496:	add    cl,ah
  445498:	(bad)  
  445499:	rol    BYTE PTR [rax],cl
  44549b:	loop   0x445472
  44549d:	(bad)  
  44549e:	add    ah,ah
  4454a0:	(bad)  
  4454a1:	(bad)  
  4454a2:	add    bl,ah
  4454a4:	fcom   st(6)
  4454a6:	add    ah,ah
  4454a8:	fcom   st(6)
  4454aa:	add    ch,ah
  4454ac:	fcmovu st,st(0)
  4454ae:	add    bh,ah
  4454b0:	(bad)  
  4454b2:	add    al,ch
  4454b4:	(bad)  
  4454b6:	add    cl,ch
  4454b8:	(bad)  
  4454ba:	add    bl,ch
  4454bc:	loopne 0x44549c
  4454be:	add    ah,ch
  4454c0:	loope  0x4454a1
  4454c2:	add    bl,ch
  4454c4:	loope  0x4454a6
  4454c6:	add    ah,ch
  4454c8:	loop   0x4454aa
  4454ca:	add    dh,ch
  4454cc:	in     al,0xe3
  4454ce:	add    dh,ch
  4454d0:	in     eax,0xe4
  4454d2:	add    al,dh
  4454d4:	out    0xe5,eax
  4454d6:	add    cl,dh
  4454d8:	call   0xffffffffeb3755c3
  4454dd:	call   0xffffffffea3048e2
  4454e2:	add    bl,dh
  4454e4:	in     al,dx
  4454e5:	jmp    0xffffffffeb3148ea
  4454ea:	add    dh,dh
  4454ec:	out    dx,al
  4454ed:	in     al,dx
  4454ee:	add    ah,ah
  4454f0:	mul    edi
  4454f2:	add    ch,ah
  4454f4:	imul   eax
  4454f6:	add    dh,dh
  4454f8:	lock out dx,eax
  4454fa:	add    al,bh
  4454fc:	icebp  
  4454fd:	out    dx,eax
  4454fe:	add    cl,bh
  445500:	icebp  
  445501:	lock add BYTE PTR [rax],al
	...
  445700:	add    BYTE PTR [rax],al
  445702:	add    bh,bh
  445704:	(bad)  
  445705:	inc    DWORD PTR [rax]
	...
  44572b:	add    BYTE PTR [rcx],al
  44572d:	add    DWORD PTR [rcx],eax
  44572f:	add    DWORD PTR [rcx],eax
  445731:	add    DWORD PTR [rcx],eax
  445733:	add    DWORD PTR [rcx],eax
  445735:	add    DWORD PTR [rcx],eax
  445737:	add    DWORD PTR [rcx],eax
  445739:	add    DWORD PTR [rcx],eax
  44573b:	add    DWORD PTR [rcx],eax
  44573d:	add    DWORD PTR [rcx],eax
  44573f:	add    DWORD PTR [rcx],eax
  445741:	add    DWORD PTR [rax],eax
	...
  44574b:	add    BYTE PTR [rcx],al
  44574d:	pop    rbx
  44574e:	pop    rcx
  44574f:	push   rsi
  445750:	push   rsi
  445751:	push   rsi
  445752:	rex.WX
  445753:	rex.WX
  445754:	rex.WB
  445755:	rex.WB
  445756:	rex.WB
  445757:	rex.RX
  445758:	rex.RX
  445759:	rex.RB
  44575a:	rex.RB
  44575b:	rex.RB
  44575c:	rex.RB
  44575d:	rex.RB
  44575e:	rex.RB
  44575f:	rex.RB jl 0x445763
	...
  44576a:	add    BYTE PTR [rax],al
  44576c:	add    DWORD PTR [rbx+0x5b],ebx
  44576f:	pop    rbx
  445770:	pop    rcx
  445771:	push   rsi
  445772:	push   rsi
  445773:	push   rsi
  445774:	push   rdx
  445775:	push   rdx
  445776:	rex.WB
  445777:	rex.WB
  445778:	rex.WB
  445779:	rex.WB
  44577a:	rex.RB
  44577b:	rex.RB
  44577c:	rex.RB
  44577d:	rex.RB
  44577e:	rex.RB
  44577f:	rex.RB jl 0x445783
	...
  44578a:	add    BYTE PTR [rax],al
  44578c:	add    DWORD PTR [rbp+0x65],esp
  44578f:	pop    rbx
  445790:	pop    rbx
  445791:	pop    rbx
  445792:	push   rsi
  445793:	push   rsi
  445794:	push   rsi
  445795:	push   rsi
  445796:	rex.WX
  445797:	rex.WX
  445798:	rex.WB
  445799:	rex.WB
  44579a:	rex.WB
  44579b:	rex.RB
  44579c:	rex.RB
  44579d:	rex.RB
  44579e:	rex.RB
  44579f:	rex.RB jl 0x4457a3
	...
  4457aa:	add    BYTE PTR [rax],al
  4457ac:	add    DWORD PTR [rbp+0x60],esp
  4457af:	gs pop rbx
  4457b1:	pop    rbx
  4457b2:	pop    rbx
  4457b3:	pop    rbx
  4457b4:	push   rsi
  4457b5:	push   rsi
  4457b6:	push   rdx
  4457b7:	push   rdx
  4457b8:	rex.WX
  4457b9:	rex.WB
  4457ba:	rex.WB
  4457bb:	rex.WB
  4457bc:	rex.RX
  4457bd:	rex.RB
  4457be:	rex.RB
  4457bf:	rex.RB jl 0x4457c3
	...
  4457ca:	add    BYTE PTR [rax],al
  4457cc:	add    DWORD PTR [rbp+0x65],esp
  4457cf:	movsxd esp,DWORD PTR [rbp+0x5b]
  4457d2:	pop    rbx
  4457d3:	pop    rbx
  4457d4:	push   rsi
  4457d5:	push   rsi
  4457d6:	push   rsi
  4457d7:	push   rsi
  4457d8:	push   rdx
  4457d9:	rex.WX
  4457da:	rex.WX
  4457db:	rex.WB
  4457dc:	rex.WB
  4457dd:	rex.RX
  4457de:	rex.RX
  4457df:	rex.RB jl 0x4457e3
	...
  4457ea:	add    BYTE PTR [rax],al
  4457ec:	add    DWORD PTR [rcx+0x69],ebp
  4457ef:	gs gs movsxd ebx,DWORD PTR gs:[rbx+0x5b]
  4457f5:	pop    rbx
  4457f6:	push   rsi
  4457f7:	push   rsi
  4457f8:	push   rsi
  4457f9:	push   rdx
  4457fa:	rex.WX
  4457fb:	rex.WX
  4457fc:	rex.WB
  4457fd:	rex.WB
  4457fe:	rex.RX
  4457ff:	rex.RX jl 0x445803
	...
  44580a:	add    BYTE PTR [rax],al
  44580c:	add    DWORD PTR [rdx+0x69],ebp
  44580f:	(bad)  
  445810:	or     eax,0x5b626365
  445815:	pop    rbx
  445816:	pop    rbx
  445817:	push   rdi
  445818:	push   rsi
  445819:	push   rsi
  44581a:	push   rsi
  44581b:	rex.WX
  44581c:	rex.WX
  44581d:	rex.WB
  44581e:	rex.WB
  44581f:	rex.WB jl 0x445823
	...
  44582a:	add    BYTE PTR [rax],al
  44582c:	add    DWORD PTR [rsp+rbp*2+0x7],ebp
  445830:	(bad)  
  445831:	or     eax,0x62636565
  445836:	pop    rbx
  445837:	pop    rbx
  445838:	pop    rdx
  445839:	push   rsi
  44583a:	push   rsi
  44583b:	push   rdx
  44583c:	push   rsi
  44583d:	rex.WB
  44583e:	rex.WB
  44583f:	rex.WB jl 0x445843
	...
  44584a:	add    BYTE PTR [rax],al
  44584c:	add    DWORD PTR [rsi+0x6c],ebp
  44584f:	(bad)  
  445850:	jp     0x445859
  445852:	adc    BYTE PTR [rbp+0x65],ah
  445855:	pop    rbx
  445856:	gs pop rbx
  445858:	pop    rbx
  445859:	push   rdi
  44585a:	push   rsi
  44585b:	push   rsi
  44585c:	push   rsi
  44585d:	rex.WX
  44585e:	rex.WX
  44585f:	rex.WX jl 0x445863
	...
  44586a:	add    BYTE PTR [rax],al
  44586c:	add    DWORD PTR [rax+0x70],esi
  44586f:	(bad)  
  445870:	xor    eax,0x650e077a
  445875:	movsxd esp,DWORD PTR gs:[rdx+0x5b]
  445879:	pop    rbx
  44587a:	pop    rbx
  44587b:	push   rsi
  44587c:	push   rsi
  44587d:	push   rsi
  44587e:	push   rsi
  44587f:	rex.WB jl 0x445883
  445882:	add    BYTE PTR [rax],al
  445884:	add    BYTE PTR [rax],al
  445886:	add    BYTE PTR [rax],al
  445888:	(bad)  
  445889:	(bad)  
  44588a:	(bad)  
  44588b:	(bad)  
  44588c:	(bad)  
  44588d:	(bad)  
  44588e:	(bad)  
  44588f:	(bad)  
  445890:	(bad)  
  445891:	adc    al,0x7a
  445893:	(bad)  
  445894:	(bad)  
  445895:	gs movsxd esp,DWORD PTR gs:[rbx+0x5b]
  44589a:	pop    rbx
  44589b:	pop    rbx
  44589c:	push   rdi
  44589d:	push   rsi
  44589e:	push   rsi
  44589f:	push   rdx
  4458a0:	jl     0x4458a3
  4458a2:	add    BYTE PTR [rax],al
  4458a4:	add    BYTE PTR [rax],al
  4458a6:	add    BYTE PTR [rax],al
  4458a8:	add    eax,0x4f4f4f4d
  4458ad:	rex.WRXB
  4458ae:	rex.WRB
  4458af:	rex.WXB and rdx,QWORD PTR [rip+0xd077a14]        # 0xd4bd2ca
  4458b6:	gs movsxd esp,DWORD PTR gs:[rbp+0x5b]
  4458bb:	pop    rbx
  4458bc:	pop    rbx
  4458bd:	pop    rdx
  4458be:	push   rsi
  4458bf:	push   rsi
  4458c0:	jl     0x4458c3
  4458c2:	add    BYTE PTR [rax],al
  4458c4:	add    BYTE PTR [rax],al
  4458c6:	add    BYTE PTR [rax],al
  4458c8:	add    eax,0x2c282831
  4458cd:	sub    al,0x2a
  4458cf:	(bad)  
  4458d0:	sbb    dl,BYTE PTR [rdi]
  4458d2:	adc    eax,0xd077a12
  4458d7:	gs gs gs movsxd ebx,DWORD PTR gs:[rbx+0x5b]
  4458de:	pop    rbx
  4458df:	push   rsi
  4458e0:	jl     0x4458e3
  4458e2:	add    BYTE PTR [rax],al
  4458e4:	add    BYTE PTR [rax],al
  4458e6:	add    BYTE PTR [rax],al
  4458e8:	add    eax,0x2a281b26
  4458ed:	sub    al,0x2c
  4458ef:	sub    BYTE PTR [rsi],bl
  4458f1:	sbb    dl,BYTE PTR [rsi]
  4458f3:	adc    eax,0x63077b12
  4458f8:	imul   esp,DWORD PTR [rbp+0x65],0x5b5b6362
  4458ff:	pop    rbx
  445900:	jl     0x445903
  445902:	add    BYTE PTR [rax],al
  445904:	add    BYTE PTR [rax],al
  445906:	add    BYTE PTR [rax],al
  445908:	add    eax,0x281d2333
  44590d:	sub    al,0x2c
  44590f:	sub    al,0x21
  445911:	(bad)  
  445912:	sbb    dl,BYTE PTR [rsi]
  445914:	(bad)  
  445915:	(bad)  
  445916:	or     BYTE PTR [rdx+0x69],ch
  445919:	imul   esp,DWORD PTR [rbp+0x65],0x5b636363
  445920:	jl     0x445923
  445922:	add    BYTE PTR [rax],al
  445924:	add    BYTE PTR [rax],al
  445926:	add    BYTE PTR [rax],al
  445928:	add    eax,0x2f252434
  44592d:	cs sub al,0x2c
  445930:	sub    bl,BYTE PTR [rsi]
  445932:	sbb    al,0x36
  445934:	(bad)  
  445935:	or     DWORD PTR [rsi+0x6c],ebp
  445938:	ins    BYTE PTR es:[rdi],dx
  445939:	push   0x69
  44593b:	gs movsxd esp,DWORD PTR gs:[rbx+0x62]
  445940:	jl     0x445943
  445942:	add    BYTE PTR [rax],al
  445944:	add    BYTE PTR [rax],al
  445946:	add    BYTE PTR [rax],al
  445948:	or     eax,DWORD PTR [rip+0x5050505]        # 0x5495e53
  44594e:	add    eax,0x382d3005
  445953:	(bad)  
  445954:	or     dh,BYTE PTR [rax+0x70]
  445957:	outs   dx,BYTE PTR ds:[rsi]
  445958:	ins    BYTE PTR es:[rdi],dx
  445959:	ins    BYTE PTR es:[rdi],dx
  44595a:	push   0x69
  44595c:	gs movsxd esp,DWORD PTR gs:[rdx+0x7c]
  445961:	add    DWORD PTR [rax],eax
	...
  44596b:	add    BYTE PTR [rcx],al
  44596d:	jle    0x4459ec
  44596f:	add    eax,0xd065032
  445974:	je     0x4459ea
  445976:	jae    0x4459e8
  445978:	jo     0x4459e6
  44597a:	ins    BYTE PTR es:[rdi],dx
  44597b:	ins    BYTE PTR es:[rdi],dx
  44597c:	imul   ebp,DWORD PTR [rcx+0x65],0x17c65
	...
  44598b:	add    BYTE PTR [rcx],al
  44598d:	jle    0x445a0d
  44598f:	add    eax,0x7c100651
  445994:	je     0x445a0a
  445996:	jae    0x445a08
  445998:	jo     0x445a0a
  44599a:	jo     0x445a08
  44599c:	ins    BYTE PTR es:[rdi],dx
  44599d:	push   0x69
  44599f:	gs jl  0x4459a3
	...
  4459aa:	add    BYTE PTR [rax],al
  4459ac:	add    DWORD PTR [rsi+0x7e],edi
  4459af:	add    eax,0x7c7c1006
  4459b4:	jl     0x445a2a
  4459b6:	jl     0x445a2b
  4459b8:	jae    0x445a2a
  4459ba:	jo     0x445a2c
  4459bc:	ins    BYTE PTR es:[rdi],dx
  4459bd:	ins    BYTE PTR es:[rdi],dx
  4459be:	push   0x6a
  4459c0:	jl     0x4459c3
	...
  4459ca:	add    BYTE PTR [rax],al
  4459cc:	add    DWORD PTR [rsi+0x7e],edi
  4459cf:	add    al,0xe
  4459d1:	jle    0x445a4f
  4459d3:	jl     0x445a51
  4459d5:	je     0x445a4b
  4459d7:	jl     0x445a4d
  4459d9:	jl     0x445a4b
  4459db:	jo     0x445a4d
  4459dd:	ins    BYTE PTR es:[rdi],dx
  4459de:	ins    BYTE PTR es:[rdi],dx
  4459df:	push   0x7c
  4459e1:	add    DWORD PTR [rax],eax
	...
  4459eb:	add    BYTE PTR [rcx],al
  4459ed:	jl     0x445a6b
  4459ef:	jl     0x445a6d
  4459f1:	jl     0x445a6f
  4459f3:	jl     0x445a71
  4459f5:	jge    0x445a73
  4459f7:	jl     0x445a75
  4459f9:	jl     0x445a77
  4459fb:	jl     0x445a79
  4459fd:	jl     0x445a7b
  4459ff:	jl     0x445a7d
  445a01:	add    DWORD PTR [rax],eax
	...
  445a0b:	add    BYTE PTR [rcx],al
  445a0d:	add    DWORD PTR [rcx],eax
  445a0f:	add    DWORD PTR [rcx],eax
  445a11:	add    DWORD PTR [rcx],eax
  445a13:	add    DWORD PTR [rcx],eax
  445a15:	add    DWORD PTR [rcx],eax
  445a17:	add    DWORD PTR [rcx],eax
  445a19:	add    DWORD PTR [rcx],eax
  445a1b:	add    DWORD PTR [rcx],eax
  445a1d:	add    DWORD PTR [rcx],eax
  445a1f:	add    DWORD PTR [rcx],eax
  445a21:	add    DWORD PTR [rax],eax
	...
  445a2b:	add    DWORD PTR [rcx],eax
  445a2d:	add    DWORD PTR [rcx],eax
  445a2f:	add    DWORD PTR [rbx],eax
  445a31:	cmp    DWORD PTR [rdx],edi
  445a33:	cmp    edi,DWORD PTR [rdi*1+0x41403f3e]
  445a3a:	rex.RB
  445a3b:	rex.RB
  445a3c:	rex.RB
  445a3d:	rex.RB
  445a3e:	rex.RB
  445a3f:	rex.RB
  445a40:	add    DWORD PTR [r9],r8d
  445a43:	add    BYTE PTR [rax],al
  445a45:	add    BYTE PTR [rax],al
  445a47:	add    BYTE PTR [rax],al
  445a49:	add    BYTE PTR [rcx],al
  445a4b:	add    DWORD PTR [r9],r8d
  445a4e:	add    DWORD PTR [rcx],eax
  445a50:	add    DWORD PTR [rcx],eax
  445a52:	add    DWORD PTR [rcx],eax
  445a54:	add    DWORD PTR [rcx],eax
  445a56:	add    DWORD PTR [rcx],eax
  445a58:	add    DWORD PTR [rcx],eax
  445a5a:	add    DWORD PTR [rcx],eax
  445a5c:	add    DWORD PTR [rcx],eax
  445a5e:	add    DWORD PTR [rcx],eax
  445a60:	add    DWORD PTR [rcx],eax
  445a62:	add    DWORD PTR [r8],r8d
  445a65:	add    BYTE PTR [rax],al
  445a67:	add    BYTE PTR [rax],al
  445a69:	add    DWORD PTR [rbp+0x1],eax
  445a6c:	add    BYTE PTR [rcx],al
  445a6e:	rex.RB
  445a6f:	rex.RB
  445a70:	rex.RB
  445a71:	rex.RB
  445a72:	rex.RB
  445a73:	rex.RB
  445a74:	rex.RB
  445a75:	rex.X
  445a76:	rex.RB
  445a77:	rex.RB
  445a78:	rex.X
  445a79:	rex.RB
  445a7a:	rex.RB
  445a7b:	rex.RB
  445a7c:	rex.X
  445a7d:	rex.X
  445a7e:	rex.RB
  445a7f:	add    DWORD PTR [r8],r8d
  445a82:	add    DWORD PTR [rbp+0x1],eax
  445a85:	add    BYTE PTR [rax],al
  445a87:	add    BYTE PTR [rcx],al
  445a89:	add    DWORD PTR [rcx],eax
  445a8b:	add    BYTE PTR [rax],al
  445a8d:	add    DWORD PTR [rbp+0x5d],ebx
  445a90:	pop    rbp
  445a91:	pop    rbp
  445a92:	pop    rbp
  445a93:	pop    rbp
  445a94:	pop    rbp
  445a95:	pop    rbp
  445a96:	pop    rbp
  445a97:	pop    rbp
  445a98:	pop    rbp
  445a99:	pop    rbp
  445a9a:	pop    rbp
  445a9b:	pop    rbp
  445a9c:	pop    rbp
  445a9d:	pop    rbp
  445a9e:	push   rdi
  445a9f:	pop    rbp
  445aa0:	add    DWORD PTR [rax],eax
  445aa2:	add    BYTE PTR [rcx],al
  445aa4:	add    DWORD PTR [rcx],eax
  445aa6:	add    BYTE PTR [rax],al
  445aa8:	add    BYTE PTR [rax],al
  445aaa:	add    BYTE PTR [rax],al
  445aac:	add    BYTE PTR [rcx],al
  445aae:	jo     0x445b20
  445ab0:	jo     0x445b22
  445ab2:	outs   dx,BYTE PTR ds:[rsi]
  445ab3:	outs   dx,BYTE PTR ds:[rsi]
  445ab4:	outs   dx,BYTE PTR ds:[rsi]
  445ab5:	outs   dx,BYTE PTR ds:[rsi]
  445ab6:	outs   dx,BYTE PTR ds:[rsi]
  445ab7:	jae    0x445b25
  445ab9:	outs   dx,BYTE PTR ds:[rsi]
  445aba:	outs   dx,BYTE PTR ds:[rsi]
  445abb:	outs   dx,BYTE PTR ds:[rsi]
  445abc:	outs   dx,BYTE PTR ds:[rsi]
  445abd:	outs   dx,BYTE PTR ds:[rsi]
  445abe:	outs   dx,BYTE PTR ds:[rsi]
  445abf:	outs   dx,BYTE PTR ds:[rsi]
  445ac0:	add    DWORD PTR [rax],eax
	...
  445aca:	add    BYTE PTR [rax],al
  445acc:	add    BYTE PTR [rcx],al
  445ace:	add    DWORD PTR [rcx],eax
  445ad0:	add    DWORD PTR [rcx],eax
  445ad2:	add    DWORD PTR [rcx],eax
  445ad4:	add    DWORD PTR [rcx],eax
  445ad6:	add    DWORD PTR [rcx],eax
  445ad8:	add    DWORD PTR [rcx],eax
  445ada:	add    DWORD PTR [rcx],eax
  445adc:	add    DWORD PTR [rcx],eax
  445ade:	add    DWORD PTR [rcx],eax
  445ae0:	add    DWORD PTR [rax],eax
	...
  445b06:	add    bh,bh
  445b08:	(bad)  
  445b09:	(bad)  
  445b0a:	(bad)  
  445b0b:	clc    
  445b0c:	add    BYTE PTR [rax],al
  445b0e:	(bad)  
  445b0f:	clc    
  445b10:	add    BYTE PTR [rax],al
  445b12:	(bad)  
  445b13:	clc    
  445b14:	add    BYTE PTR [rax],al
  445b16:	(bad)  
  445b17:	clc    
  445b18:	add    BYTE PTR [rax],al
  445b1a:	(bad)  
  445b1b:	clc    
  445b1c:	add    BYTE PTR [rax],al
  445b1e:	(bad)  
  445b1f:	clc    
  445b20:	add    BYTE PTR [rax],al
  445b22:	(bad)  
  445b23:	clc    
  445b24:	add    BYTE PTR [rax],al
  445b26:	(bad)  
  445b27:	clc    
  445b28:	add    BYTE PTR [rax],al
  445b2a:	(bad)  
  445b2b:	clc    
  445b2c:	add    BYTE PTR [rax],al
  445b2e:	(bad)  
  445b2f:	clc    
  445b30:	add    BYTE PTR [rax],al
  445b32:	(bad)  
  445b33:	clc    
  445b34:	add    BYTE PTR [rax],al
  445b36:	(bad)  
  445b37:	add    BYTE PTR [rax],0x0
  445b3a:	(bad)  
  445b3b:	add    BYTE PTR [rax],0x0
  445b3e:	(bad)  
  445b3f:	add    BYTE PTR [rax],0x0
  445b42:	(bad)  
  445b43:	add    BYTE PTR [rax],0x0
  445b46:	(bad)  
  445b47:	add    BYTE PTR [rax],0x0
  445b4a:	(bad)  
  445b4b:	add    BYTE PTR [rax],0x0
  445b4e:	(bad)  
  445b4f:	add    BYTE PTR [rax],0x0
  445b52:	(bad)  
  445b53:	clc    
  445b54:	add    BYTE PTR [rax],al
  445b56:	(bad)  
  445b57:	clc    
  445b58:	add    BYTE PTR [rax],al
  445b5a:	(bad)  
  445b5b:	clc    
  445b5c:	add    BYTE PTR [rax],al
  445b5e:	(bad)  
  445b5f:	clc    
  445b60:	add    BYTE PTR [rax],al
  445b62:	(bad)  
  445b63:	clc    
  445b64:	add    BYTE PTR [rax],al
  445b66:	(bad)  
  445b67:	clc    
  445b68:	add    BYTE PTR [rax],al
  445b6a:	(bad)  
  445b6b:	lock add BYTE PTR [rax],al
  445b6e:	pavgb  mm0,QWORD PTR [rax]
  445b71:	add    BYTE PTR [rdi],al
  445b73:	(bad)  
  445b74:	add    BYTE PTR [rax],al
  445b76:	and    ecx,DWORD PTR [rax+rax*1+0xfc3100]
  445b7d:	add    BYTE PTR [rdi],bh
  445b7f:	cld    
  445b80:	add    BYTE PTR [rax],al
  445b82:	(bad)  
  445b83:	(bad)  
  445b84:	(bad)  
  445b85:	(bad)  
  445b86:	jmp    FWORD PTR [rax]
  445b88:	add    BYTE PTR [rax],al
  445b8a:	add    BYTE PTR [rax],dl
  445b8c:	add    BYTE PTR [rax],al
  445b8e:	add    BYTE PTR [rax],ah
  445b90:	add    BYTE PTR [rax],al
  445b92:	add    BYTE PTR [rcx],al
  445b94:	add    BYTE PTR [rax],cl
  445b96:	add    BYTE PTR [rax],al
  445b98:	add    BYTE PTR [rax],al
  445b9a:	add    BYTE PTR [rax],al
  445b9c:	add    DWORD PTR [rax],eax
	...
  445ba6:	add    BYTE PTR [rax],al
  445ba8:	add    DWORD PTR [rax],eax
  445baa:	add    BYTE PTR [rax],al
  445bac:	add    DWORD PTR [rax],eax
  445bae:	add    BYTE PTR [rax],al
  445bb0:	add    BYTE PTR [rax],al
  445bb2:	add    BYTE PTR [rbx+0x14007878],ah
  445bb8:	scas   eax,DWORD PTR es:[rdi]
  445bb9:	add    BYTE PTR ss:[rax],bl
  445bbc:	mov    edx,0xbc1e003c
  445bc1:	add    BYTE PTR [r11],sil
  445bc4:	lods   eax,DWORD PTR ds:[rsi]
  445bc5:	rex.WX add BYTE PTR [rax],spl
  445bc8:	mov    edi,0xbb2f0043
  445bcd:	rex.WRXB add BYTE PTR [r13-0x67],r11b
  445bd1:	pop    rbp
  445bd2:	add    BYTE PTR [rdx],ch
  445bd4:	mov    DWORD PTR [rdx+0x0],0x43c92b
  445bdb:	xor    al,0xd3
  445bdd:	rex.WRX add BYTE PTR [rdx],r15b
  445be0:	fist   DWORD PTR [rsi+0x0]
  445be3:	cmp    eax,0x420058dd
  445be8:	in     al,0x5e
  445bea:	add    BYTE PTR [rbp-0x24],ah
  445bed:	js     0x445bef
  445bef:	rex.RB call 0xffffffffea9d5c57
  445bf5:	jae    0x445bf7
  445bf7:	pop    rdx
  445bf8:	jmp    0xffffffffe8b25c71
  445bfd:	test   BYTE PTR [rax],al
  445bff:	jns    0x445be4
  445c01:	mov    al,BYTE PTR [rax]
  445c03:	jg     0x445bed
  445c05:	nop
  445c06:	add    ah,al
  445c08:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  445c09:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  445c0a:	add    cl,cl
  445c0c:	mov    dh,0xb5
  445c0e:	add    ah,cl
  445c10:	mov    ecx,0xbcce00b8
  445c15:	mov    ebx,0xbdbed000
  445c1a:	add    BYTE PTR [rbx-0x7bff6b15],al
  445c20:	jmp    0x445bb9
  445c22:	add    BYTE PTR [rbp-0x79ff6813],al
  445c28:	(bad)  
  445c29:	cwde   
  445c2a:	add    BYTE PTR [rsi-0x6aff6511],al
  445c30:	(bad)  
  445c31:	movabs eax,ds:0xa4d99700a2d89600
  445c3a:	add    BYTE PTR [rax-0x2dff5a26],bl
  445c40:	sar    BYTE PTR [rdi-0x3f3d2e00],0x0
  445c47:	(bad)  
  445c48:	ret    0xc1
  445c4b:	(bad)  
  445c4c:	(bad)
  445c50:	(bad)
  445c53:	xlat   BYTE PTR ds:[rbx]
  445c54:	enter  0xc6,0xd8
  445c58:	leave  
  445c59:	mov    DWORD PTR [rax],0xcdcddb
  445c5f:	(bad)  
  445c61:	(bad)  
  445c62:	add    bh,bl
  445c64:	rcl    ecx,cl
  445c66:	add    cl,ah
  445c68:	(bad)  
  445c69:	(bad)  
  445c6a:	add    al,ah
  445c6c:	rcl    cl,cl
  445c6e:	add    cl,ah
  445c70:	(bad)  
  445c71:	rol    BYTE PTR [rax],cl
  445c73:	jrcxz  0x445c4c
  445c75:	(bad)  
  445c76:	add    ah,ah
  445c78:	fcom   st(5)
  445c7a:	add    dh,ah
  445c7c:	fcmovnu st,st(2)
  445c7e:	add    bh,ah
  445c80:	fstp   st(2)
  445c82:	add    ch,al
  445c84:	cld    
  445c85:	int    0x0
  445c87:	(bad)  
  445c88:	loopne 0x445c68
  445c8a:	add    ch,ch
  445c8c:	jrcxz  0x445c6f
  445c8e:	add    dh,ch
  445c90:	in     al,0xe2
  445c92:	add    al,dh
  445c94:	out    0xe5,eax
  445c96:	add    bl,dh
  445c98:	(bad)  
  445c99:	call   0xffffffffed324e9e
  445c9e:	add    dh,dh
  445ca0:	lock out dx,al
  445ca2:	add    dh,dh
  445ca4:	repnz icebp 
  445ca6:	add    bh,dh
  445ca8:	hlt    
  445ca9:	repz add cl,bh
  445cac:	repnz lock add dl,bh
  445cb0:	div    dh
  445cb2:	add    bl,bh
  445cb4:	stc    
  445cb5:	clc    
	...
  445faa:	add    bh,bh
  445fac:	(bad)  
  445fad:	inc    DWORD PTR [rax]
  445faf:	add    BYTE PTR [rax],al
  445fb1:	add    DWORD PTR [rcx],eax
  445fb3:	add    DWORD PTR [rcx],eax
  445fb5:	add    DWORD PTR [rcx],eax
  445fb7:	add    DWORD PTR [rcx],eax
  445fb9:	add    DWORD PTR [rcx],eax
  445fbb:	add    DWORD PTR [rcx],eax
  445fbd:	add    BYTE PTR [rax],al
  445fbf:	add    BYTE PTR [rax],al
  445fc1:	add    DWORD PTR [rdi],ebp
  445fc3:	sub    al,0x3b
  445fc5:	cmp    esp,DWORD PTR [rdi]
  445fc7:	and    al,0x19
  445fc9:	sbb    DWORD PTR [rdi],edx
  445fcb:	cmp    al,0x1
  445fcd:	add    BYTE PTR [rax],al
  445fcf:	add    BYTE PTR [rax],al
  445fd1:	add    DWORD PTR [rdi],ebp
  445fd3:	(bad)  
  445fd4:	or     BYTE PTR [rax],cl
  445fd6:	cmp    esp,DWORD PTR [rdi]
  445fd8:	(bad)  
  445fd9:	sbb    DWORD PTR [rcx],ebx
  445fdb:	cmp    al,0x1
  445fdd:	add    BYTE PTR [rax],al
  445fdf:	add    BYTE PTR [rax],al
  445fe1:	(bad)  
  445fe2:	rex cmp eax,0x3b080608
  445fe8:	(bad)  
  445fe9:	(bad)  
  445fea:	sbb    DWORD PTR [rip+0x8000001],edi        # 0x8445ff1
  445ff0:	or     BYTE PTR [rax],cl
  445ff2:	or     BYTE PTR [rax],cl
  445ff4:	or     BYTE PTR [rip+0x273b0806],dh        # 0x277f6800
  445ffa:	(bad)  
  445ffb:	cmp    eax,0x7000001
  446000:	sbb    eax,0x15151d1d
  446005:	or     DWORD PTR [rip+0x2a3d0806],esi        # 0x2a816811
  44600b:	cmp    al,0x1
  44600d:	add    BYTE PTR [rax],al
  44600f:	(bad)  
  446010:	(bad)  
  446011:	adc    BYTE PTR [rax],dl
  446013:	(bad)  
  446014:	or     al,0xb
  446016:	or     DWORD PTR [rip+0x3c2c0e03],esi        # 0x3c706e1f
  44601c:	add    DWORD PTR [rax],eax
  44601e:	add    BYTE PTR [rdi],al
  446020:	(bad)  
  446021:	adc    dl,BYTE PTR [rcx]
  446023:	adc    BYTE PTR [rsi],cl
  446025:	or     al,0xf
  446027:	add    ah,BYTE PTR [rax]
  446029:	cmp    eax,0x13c2d
  44602e:	add    BYTE PTR [rip+0x3040404],al        # 0x3486438
  446034:	(bad)  
  446035:	adc    eax,DWORD PTR [rdx]
  446037:	and    DWORD PTR [rip+0x13c3233],edi        # 0x1809270
  44603d:	add    BYTE PTR [rax],al
  44603f:	add    BYTE PTR [rax],al
  446041:	(bad)  
  446042:	cmp    al,0x4
  446045:	add    ah,BYTE PTR [rcx]
  446047:	cmp    BYTE PTR [rsi],sil
  44604a:	xor    edi,DWORD PTR [rcx+rax*1]
  44604d:	add    BYTE PTR [rax],al
  44604f:	add    BYTE PTR [rax],al
  446051:	add    DWORD PTR [rdi],edi
  446053:	(bad)  
  446054:	add    esp,DWORD PTR [rbx]
  446056:	cmp    edi,DWORD PTR [r9]
  446059:	cmp    BYTE PTR [rsi],dh
  44605b:	cmp    al,0x1
  44605d:	add    BYTE PTR [rax],al
  44605f:	add    BYTE PTR [rax],al
  446061:	add    DWORD PTR [rcx+0x41],eax
  446064:	rex.B
  446065:	rex.B
  446066:	rex.B
  446067:	rex.B
  446068:	rex.B
  446069:	rex.B
  44606a:	rex.B
  44606b:	add    DWORD PTR [r8],eax
  44606e:	add    BYTE PTR [rax],al
  446070:	add    BYTE PTR [rcx],al
  446072:	add    DWORD PTR [rcx],eax
  446074:	add    DWORD PTR [rcx],eax
  446076:	add    DWORD PTR [rcx],eax
  446078:	add    DWORD PTR [rcx],eax
  44607a:	add    DWORD PTR [rcx],eax
  44607c:	add    DWORD PTR [rax],eax
  44607e:	add    BYTE PTR [rax],al
  446080:	add    DWORD PTR [rax],eax
  446082:	add    DWORD PTR [rsi],edx
  446084:	(bad)  
  446085:	(bad)  
  446086:	(bad)  
  446087:	(bad)  
  446088:	(bad)  
  446089:	(bad)  
  44608a:	(bad)  
  44608b:	add    DWORD PTR [rax],eax
  44608d:	add    DWORD PTR [rax],eax
  44608f:	add    DWORD PTR [rax],eax
  446091:	add    BYTE PTR [rcx],al
  446093:	cs cs cs cs cs cs cs add DWORD PTR cs:[rax],eax
  44609d:	add    BYTE PTR [rcx],al
  44609f:	add    BYTE PTR [rax],al
  4460a1:	add    BYTE PTR [rcx],al
  4460a3:	add    DWORD PTR [rcx],eax
  4460a5:	add    DWORD PTR [rcx],eax
  4460a7:	add    DWORD PTR [rcx],eax
  4460a9:	add    DWORD PTR [rcx],eax
  4460ab:	add    DWORD PTR [rax],eax
  4460ad:	add    BYTE PTR [rax],al
  4460af:	rol    BYTE PTR [rbx],0x0
  4460b2:	add    al,al
  4460b4:	add    eax,DWORD PTR [rax]
  4460b6:	add    al,al
  4460b8:	add    eax,DWORD PTR [rax]
  4460ba:	add    al,al
  4460bc:	add    eax,DWORD PTR [rax]
  4460be:	add    BYTE PTR [rax],al
  4460c0:	add    eax,DWORD PTR [rax]
  4460c2:	add    BYTE PTR [rax],al
  4460c4:	add    eax,DWORD PTR [rax]
  4460c6:	add    BYTE PTR [rax],al
  4460c8:	add    eax,DWORD PTR [rax]
  4460ca:	add    BYTE PTR [rax],al
  4460cc:	add    eax,DWORD PTR [rax]
  4460ce:	add    BYTE PTR [rax],al
  4460d0:	add    eax,DWORD PTR [rax]
  4460d2:	add    al,al
  4460d4:	add    eax,DWORD PTR [rax]
  4460d6:	add    al,al
  4460d8:	add    eax,DWORD PTR [rax]
  4460da:	add    al,al
  4460dc:	add    eax,DWORD PTR [rax]
  4460de:	add    al,al
  4460e0:	add    eax,DWORD PTR [rax]
  4460e2:	add    BYTE PTR [rax+0x60000005],ah
  4460e8:	(bad)  
  4460e9:	add    BYTE PTR [rax],al
  4460eb:	loopne 0x4460f4
  4460ed:	add    BYTE PTR [rax],al
  4460ef:	sub    BYTE PTR [rax],al
  4460f1:	add    BYTE PTR [rax],al
  4460f3:	and    BYTE PTR [rax],al
  4460f5:	add    BYTE PTR [rax],al
  4460f7:	add    BYTE PTR [rax],al
  4460fa:	add    BYTE PTR [rcx],al
  4460fc:	add    BYTE PTR [rax],ah
  4460fe:	add    BYTE PTR [rax],al
  446100:	add    BYTE PTR [rax],al
  446102:	add    BYTE PTR [rax+0x10],al
	...
  4461a8:	add    BYTE PTR [rax],al
  4461aa:	add    BYTE PTR [rbx-0x5c008788],ah
  4461b0:	js     0x44622a
  4461b2:	jmp    QWORD PTR [rbx-0x5c008788]
  4461b8:	js     0x446232
  4461ba:	jmp    QWORD PTR [rbx-0x5c008788]
  4461c0:	js     0x44623a
  4461c2:	jmp    QWORD PTR [rbx-0x5c008788]
  4461c8:	js     0x446242
  4461ca:	jmp    QWORD PTR [rbx-0x5c008788]
  4461d0:	js     0x44624a
  4461d2:	jmp    QWORD PTR [rbx-0x5c008788]
  4461d8:	js     0x446252
  4461da:	jmp    QWORD PTR [rbx-0x5c008788]
  4461e0:	js     0x44625a
  4461e2:	jmp    QWORD PTR [rbx-0x5c008788]
  4461e8:	js     0x446262
  4461ea:	jmp    QWORD PTR [rbx-0x5c008788]
  4461f0:	js     0x44626a
  4461f2:	jmp    QWORD PTR [rbx-0x5c008788]
  4461f8:	js     0x446272
  4461fa:	jmp    QWORD PTR [rbx-0x5c008788]
  446200:	js     0x44627a
  446202:	inc    DWORD PTR [rax]
	...
  446228:	add    BYTE PTR [rax],al
  44622a:	add    BYTE PTR [rbx-0x26008788],ah
  446230:	retf   0xffc8
  446233:	xlat   BYTE PTR ds:[rbx]
  446234:	enter  0xffc7,0xd6
  446238:	mov    ch,0xff
  44623b:	(bad)  
  44623c:	(bad)  
  446240:	ret    0xffc1
  446243:	rol    al,cl
  446245:	mov    edi,0xbebfd1ff
  44624a:	dec    edi
  44624c:	mov    esi,0xbcceffbc
  446251:	mov    ebx,0xb9bbcdff
  446256:	dec    ebx
  446258:	mov    edx,0xb8cbffb8
  44625d:	mov    bh,0xff
  44625f:	retf   0xb6b7
  446262:	dec    edx
  446264:	mov    dh,0xb6
  446266:	dec    ecx
  446268:	mov    dh,0xb5
  44626a:	dec    ecx
  44626c:	mov    dh,0xb5
  44626e:	dec    ecx
  446270:	mov    dh,0xb5
  446272:	dec    ecx
  446274:	mov    dh,0xb5
  446276:	dec    ecx
  446278:	mov    dh,0xb5
  44627a:	push   rsi
  44627c:	icebp  
  44627d:	out    dx,eax
  44627e:	jmp    QWORD PTR [rbx+0xff7878]
	...
  4462a8:	add    BYTE PTR [rax],al
  4462aa:	add    BYTE PTR [rbx-0x22008788],ah
  4462b0:	iret   
  4462b1:	int    0xff
  4462b3:	fmul   st(5),st
  4462b5:	int3   
  4462b6:	(bad)  
  4462b7:	fcmove st,st(2)
  4462b9:	leave  
  4462ba:	(bad)  
  4462bb:	fmul   st,st(1)
  4462bd:	(bad)  
  4462be:	call   rsi
  4462c0:	mov    esi,0xc4c5d5ff
  4462c6:	call   rbx
  4462c8:	(bad)  
  4462cc:	ret    0xffc0
  4462cf:	rol    eax,1
  4462d1:	mov    edi,0xbdbfcfff
  4462d6:	dec    edi
  4462d8:	mov    ebp,0xbbceffbb
  4462dd:	mov    edx,0xb9bbccff
  4462e2:	dec    ebx
  4462e4:	mov    ecx,0xb8caffb8
  4462e9:	mov    bh,0xff
  4462eb:	leave  
  4462ec:	mov    bh,0xb6
  4462ee:	dec    ecx
  4462f0:	mov    dh,0xb5
  4462f2:	dec    ecx
  4462f4:	mov    dh,0xb5
  4462f6:	dec    ecx
  4462f8:	mov    dh,0xb5
  4462fa:	push   rsi
  4462fc:	icebp  
  4462fd:	out    dx,eax
  4462fe:	jmp    QWORD PTR [rbx+0xff7878]
	...
  446328:	add    BYTE PTR [rax],al
  44632a:	add    BYTE PTR [rbx-0x20008788],ah
  446330:	rcl    al,cl
  446332:	(bad)  
  446333:	(bad)  
  446335:	(bad)  
  446336:	(bad)  
  446337:	fmul   st(5),st
  446339:	int3   
  44633a:	(bad)  
  44633b:	fcmove st,st(3)
  44633d:	retf   0xd9ff
  446340:	leave  
  446341:	enter  0xd7ff,0xc7
  446345:	(bad)  
  446346:	call   rsi
  446348:	mov    ch,0xff
  44634b:	(bad)  
  44634c:	(bad)  
  446350:	ret    0xffc1
  446353:	rol    cl,cl
  446355:	sar    bh,0xd0
  446358:	mov    edi,0xbdcfffbe
  44635d:	mov    esp,0xbbbcceff
  446362:	dec    ebp
  446364:	mov    ebx,0xbaccffb9
  446369:	mov    eax,0xb7b8cbff
  44636e:	dec    edx
  446370:	mov    bh,0xb6
  446372:	dec    ecx
  446374:	mov    dh,0xb5
  446376:	dec    ecx
  446378:	mov    dh,0xb5
  44637a:	push   rsi
  44637c:	icebp  
  44637d:	out    dx,eax
  44637e:	jmp    QWORD PTR [rbx+0xff7878]
	...
  4463a8:	add    BYTE PTR [rax],al
  4463aa:	add    BYTE PTR [rbx-0x1e008788],ah
  4463b0:	(bad)  
  4463b1:	sar    bh,cl
  4463b3:	loopne 0x446387
  4463b5:	sar    bh,1
  4463b7:	(bad)  
  4463b9:	(bad)  
  4463ba:	(bad)  
  4463bb:	fmul   st(6),st
  4463bd:	int3   
  4463be:	(bad)  
  4463bf:	fcmovne st,st(4)
  4463c1:	retf   0xd9ff
  4463c4:	retf   0xffc8
  4463c7:	fmul   st,st(0)
  4463c9:	(bad)  
  4463ca:	call   rsi
  4463cc:	mov    ch,0xff
  4463cf:	(bad)  
  4463d0:	(bad)
  4463d3:	rol    ebx,cl
  4463d5:	sar    edi,0xd2
  4463d8:	sar    DWORD PTR [rdi-0x41402e01],0xff
  4463df:	iret   
  4463e0:	mov    esi,0xbcceffbc
  4463e5:	mov    ebx,0xbabbcdff
  4463ea:	dec    esp
  4463ec:	mov    edx,0xb8cbffb9
  4463f1:	mov    bh,0xff
  4463f3:	retf   0xb6b8
  4463f6:	dec    edx
  4463f8:	mov    dh,0xb6
  4463fa:	push   rsi
  4463fc:	icebp  
  4463fd:	out    dx,eax
  4463fe:	jmp    QWORD PTR [rbx+0xff7878]
	...
  446428:	add    BYTE PTR [rax],al
  44642a:	add    BYTE PTR [rbx-0x1b008788],ah
  446430:	(bad)  
  446431:	(bad)  
  446432:	jmp    rcx
  446434:	(bad)  
  446435:	(bad)  
  446436:	(bad)  
  446437:	(bad)  
  446439:	sar    edi,1
  44643b:	(bad)  
  44643d:	iret   
  44643e:	(bad)  
  44643f:	fmul   st(7),st
  446441:	int    0xff
  446443:	fcmovne st,st(5)
  446445:	retf   
  446446:	(bad)  
  446447:	fxch   st(3)
  446449:	leave  
  44644a:	(bad)  
  44644b:	fmul   st,st(0)
  44644d:	(bad)  
  44644e:	call   rsi
  446450:	mov    ch,0xff
  446453:	(bad)  
  446454:	(bad)
  446457:	rol    esp,cl
  446459:	ret    0xd2ff
  44645c:	rol    ecx,0xff
  44645f:	rol    eax,1
  446461:	mov    edi,0xbdbfd0ff
  446466:	dec    esi
  446468:	mov    ebp,0xbcceffbc
  44646d:	mov    edx,0xb9baccff
  446472:	dec    esp
  446474:	mov    ecx,0xb7cbffb8
  446479:	mov    dh,0xff
  44647b:	div    cl
  44647d:	out    dx,eax
  44647e:	jmp    QWORD PTR [rbx+0xff7878]
	...
  4464a8:	add    BYTE PTR [rax],al
  4464aa:	add    BYTE PTR [rbx-0x1a008788],ah
  4464b0:	(bad)  
  4464b2:	jmp    rbx
  4464b4:	fcom   st(6)
  4464b6:	jmp    rdx
  4464b8:	(bad)  
  4464b9:	(bad)  
  4464ba:	jmp    rcx
  4464bc:	rcl    edx,cl
  4464be:	(bad)  
  4464bf:	(bad)  
  4464c1:	iret   
  4464c2:	(bad)  
  4464c3:	(bad)  
  4464c5:	(bad)  
  4464c6:	(bad)  
  4464c7:	fcmovne st,st(6)
  4464c9:	int3   
  4464ca:	(bad)  
  4464cb:	fcmove st,st(3)
  4464cd:	leave  
  4464ce:	(bad)  
  4464cf:	fxch   st(1)
  4464d1:	(bad)  
  4464d2:	call   rdi
  4464d4:	mov    esi,0xc4c5d6ff
  4464da:	call   rsp
  4464dc:	(bad)  
  4464e0:	ret    0xffc0
  4464e3:	rol    eax,1
  4464e5:	mov    edi,0xbdbed0ff
  4464ea:	dec    esi
  4464ec:	mov    ebp,0xbccdffbc
  4464f1:	mov    edx,0xb9baccff
  4464f6:	dec    ebx
  4464f8:	mov    ecx,0xf1f6ffb9
  4464fd:	out    dx,eax
  4464fe:	jmp    QWORD PTR [rbx+0xff7878]
	...
  446528:	add    BYTE PTR [rax],al
  44652a:	add    BYTE PTR [rbx-0x18008788],ah
  446530:	(bad)  
  446532:	jmp    rsi
  446534:	fcmovu st,st(0)
  446536:	call   FWORD PTR [rbp-0x67]
  446539:	pop    rbp
  44653a:	jmp    FWORD PTR [rdi-0x4e]
  44653d:	jns    0x44653e
  44653f:	loope  0x446515
  446541:	sar    bh,cl
  446543:	(bad)  
  446545:	sar    bh,1
  446547:	fmulp  st(7),st
  446549:	(bad)  
  44654a:	(bad)  
  44654b:	fmul   st(6),st
  44654d:	int    0xff
  44654f:	fcmovne st,st(3)
  446551:	retf   
  446552:	(bad)  
  446553:	fxch   st(2)
  446555:	leave  
  446556:	(bad)  
  446557:	fadd   st,st(7)
  446559:	(bad)  
  44655a:	call   rsi
  44655c:	mov    ch,0xff
  44655f:	(bad)  
  446560:	(bad)  
  446564:	ret    0xffc1
  446567:	rol    cl,cl
  446569:	mov    edi,0xbebfd0ff
  44656e:	dec    edi
  446570:	mov    ebp,0xbcceffbc
  446575:	mov    ebx,0xb9bbcdff
  44657a:	push   rsi
  44657c:	icebp  
  44657d:	out    dx,eax
  44657e:	jmp    QWORD PTR [rbx+0xff7878]
	...
  4465a8:	add    BYTE PTR [rax],al
  4465aa:	add    BYTE PTR [rbx-0x16008788],ah
  4465b0:	(bad)  
  4465b2:	(bad)  
  4465b3:	call   0x5e444095
  4465b8:	cdq    
  4465b9:	pop    rbp
  4465ba:	call   FWORD PTR [rbp-0x67]
  4465bd:	pop    rbp
  4465be:	jmp    FWORD PTR [rdi-0x4e]
  4465c1:	jns    0x4465c2
  4465c3:	loope  0x44659a
  4465c5:	sar    edi,cl
  4465c7:	loopne 0x44659c
  4465c9:	sar    edi,1
  4465cb:	(bad)  
  4465cd:	iret   
  4465ce:	(bad)  
  4465cf:	fmul   st(6),st
  4465d1:	int    0xff
  4465d3:	fcmovne st,st(4)
  4465d5:	retf   
  4465d6:	(bad)  
  4465d7:	fxch   st(2)
  4465d9:	leave  
  4465da:	call   rdi
  4465dc:	leave  
  4465dd:	enter  0xd7ff,0xc6
  4465e1:	(bad)  
  4465e4:	(bad)  
  4465e5:	(bad)  
  4465e6:	call   rbx
  4465e8:	ret    
  4465e9:	sar    edi,0xd2
  4465ec:	rol    eax,0xff
  4465ef:	sar    DWORD PTR [rdi-0x41300041],1
  4465f5:	mov    ebp,0xbbbdceff
  4465fa:	push   rsi
  4465fc:	icebp  
  4465fd:	out    dx,eax
  4465fe:	jmp    QWORD PTR [rbx+0xff7878]
	...
  446628:	add    BYTE PTR [rax],al
  44662a:	add    BYTE PTR [rbx-0x14008788],ah
  446630:	loope  0x446611
  446632:	(bad)  
  446633:	(bad)  
  446634:	(bad)  
  446636:	call   FWORD PTR [rbp-0x67]
  446639:	pop    rbp
  44663a:	jmp    rbp
  44663c:	imul   eax
  44663e:	call   FWORD PTR [rbp-0x67]
  446641:	pop    rbp
  446642:	push   QWORD PTR [rax-0x4d]
  446645:	jp     0x446646
  446647:	loop   0x44661e
  446649:	sar    edi,cl
  44664b:	loopne 0x446620
  44664d:	sar    edi,1
  44664f:	(bad)  
  446651:	iret   
  446652:	(bad)  
  446653:	(bad)  
  446655:	int    0xff
  446657:	fcmovne st,st(5)
  446659:	int3   
  44665a:	(bad)  
  44665b:	fcmove st,st(3)
  44665d:	leave  
  44665e:	(bad)  
  44665f:	fmul   st,st(1)
  446661:	enter  0xd6ff,0xc7
  446665:	(bad)  
  446666:	call   rsi
  446668:	(bad)
  44666b:	rol    ebx,cl
  44666d:	ret    
  44666e:	call   rdx
  446670:	ret    0xffc1
  446673:	rol    eax,1
  446675:	mov    esi,0xbebfd0ff
  44667a:	push   rsi
  44667c:	icebp  
  44667d:	out    dx,eax
  44667e:	jmp    QWORD PTR [rbx+0xff7878]
	...
  4466a8:	add    BYTE PTR [rax],al
  4466aa:	add    BYTE PTR [rbx-0x12008788],ah
  4466b0:	jrcxz  0x446693
  4466b2:	(bad)  
  4466b3:	jmp    0x446696
  4466b5:	loopne 0x4466b6
  4466b7:	pop    rbp
  4466b8:	cdq    
  4466b9:	pop    rbp
  4466ba:	(bad)  
  4466bb:	jl     0x44669b
  4466bd:	mov    edi,?
  4466bf:	in     al,0xf7
  4466c1:	out    0xff,eax
  4466c3:	pop    rbp
  4466c4:	cdq    
  4466c5:	pop    rbp
  4466c6:	push   QWORD PTR [rax-0x4d]
  4466c9:	jp     0x4466ca
  4466cb:	loop   0x4466a2
  4466cd:	(bad)  
  4466ce:	jmp    rax
  4466d0:	(bad)  
  4466d1:	sar    bh,cl
  4466d3:	(bad)  
  4466d5:	sar    bh,1
  4466d7:	(bad)  
  4466d9:	(bad)  
  4466da:	(bad)  
  4466db:	fmul   st(5),st
  4466dd:	int3   
  4466de:	(bad)  
  4466df:	fcmove st,st(4)
  4466e1:	retf   0xd8ff
  4466e4:	retf   0xffc8
  4466e7:	xlat   BYTE PTR ds:[rbx]
  4466e8:	enter  0xffc6,0xd6
  4466ec:	mov    ch,0xff
  4466ef:	(bad)  
  4466f0:	(bad)  
  4466f4:	ret    0xffc1
  4466f7:	rol    ecx,1
  4466f9:	mov    edi,0xeff1f6ff
  4466fe:	jmp    QWORD PTR [rbx+0xff7878]
	...
  446718:	add    BYTE PTR [rax],al
  44671a:	add    BYTE PTR [rbp-0x67],bl
  44671d:	pop    rbp
  44671e:	call   FWORD PTR [rbp-0x67]
  446721:	pop    rbp
  446722:	call   FWORD PTR [rbp-0x67]
  446725:	pop    rbp
  446726:	call   FWORD PTR [rbp-0x67]
  446729:	pop    rbp
  44672a:	call   FWORD PTR [rbp-0x67]
  44672d:	pop    rbp
  44672e:	call   FWORD PTR [rbp-0x67]
  446731:	pop    rbp
  446732:	call   FWORD PTR [rbp-0x67]
  446735:	pop    rbp
  446736:	call   FWORD PTR [rbp-0x67]
  446739:	pop    rbp
  44673a:	(bad)  
  44673b:	jg     0x44671f
  44673d:	(bad)  
  44673e:	jmp    FWORD PTR [rbx]
  446740:	enter  0xff44,0xe4
  446744:	mul    edi
  446746:	call   FWORD PTR [rbp-0x67]
  446749:	pop    rbp
  44674a:	push   QWORD PTR [rax-0x4d]
  44674d:	jp     0x44674e
  44674f:	loop   0x446727
  446751:	(bad)  
  446752:	jmp    rcx
  446754:	(bad)  
  446755:	sar    bh,cl
  446757:	(bad)  
  446759:	sar    bh,1
  44675b:	(bad)  
  44675d:	(bad)  
  44675e:	(bad)  
  44675f:	(bad)  
  446761:	int    0xff
  446763:	fcmove st,st(4)
  446765:	retf   
  446766:	(bad)  
  446767:	fxch   st(2)
  446769:	leave  
  44676a:	(bad)  
  44676b:	fmul   st,st(0)
  44676d:	(bad)  
  44676e:	call   rsi
  446770:	mov    ebp,0xc3c4d4ff
  446776:	call   rbx
  446778:	ret    
  446779:	sar    edi,0xf6
  44677c:	icebp  
  44677d:	out    dx,eax
  44677e:	jmp    QWORD PTR [rbx+0xff7878]
	...
  446798:	add    BYTE PTR [rax],al
  44679a:	add    BYTE PTR [rsi],dl
  44679c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  44679d:	rex dec DWORD PTR [rbx-0x73006314]
  4467a4:	lock sahf 
  4467a6:	dec    DWORD PTR [rbp-0x7200600f]
  4467ac:	icebp  
  4467ad:	lahf   
  4467ae:	dec    DWORD PTR [rbx-0x76006210]
  4467b4:	out    dx,al
  4467b5:	(bad)  
  4467b6:	inc    DWORD PTR [rsi+0x4cff96e9]
  4467bc:	(bad)  [rbx-0x1]
  4467bf:	xor    cl,bh
  4467c1:	rex.WB jmp FWORD PTR [r10]
  4467c4:	enter  0xff43,0xe4
  4467c8:	mul    edi
  4467ca:	call   FWORD PTR [rbp-0x67]
  4467cd:	pop    rbp
  4467ce:	jmp    FWORD PTR [rbp-0x4e]
  4467d1:	jbe    0x4467d2
  4467d3:	jrcxz  0x4467ab
  4467d5:	(bad)  
  4467d6:	jmp    rdx
  4467d8:	(bad)  
  4467d9:	sar    edi,cl
  4467db:	(bad)  
  4467dd:	sar    edi,1
  4467df:	(bad)  
  4467e1:	iret   
  4467e2:	(bad)  
  4467e3:	(bad)  
  4467e5:	int    0xff
  4467e7:	fcmovne st,st(4)
  4467e9:	retf   
  4467ea:	(bad)  
  4467eb:	fcmove st,st(2)
  4467ed:	leave  
  4467ee:	(bad)  
  4467ef:	fmul   st,st(0)
  4467f1:	enter  0xd6ff,0xc7
  4467f5:	(bad)  
  4467f8:	(bad)
  4467fb:	div    cl
  4467fd:	out    dx,eax
  4467fe:	jmp    QWORD PTR [rbx+0xff7878]
	...
  446818:	add    BYTE PTR [rax],al
  44681a:	add    BYTE PTR [rsi],dl
  44681c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  44681d:	rex jmp FWORD PTR [rcx-0x1d]
  446821:	jle    0x446822
  446823:	rex.XB loope 0x446886
  446826:	inc    DWORD PTR [rbp-0x19]
  446829:	(bad)  
  44682a:	inc    DWORD PTR [rdi-0x17]
  44682d:	inc    DWORD PTR fs:[rdi-0x17]
  446831:	inc    DWORD PTR fs:[rbp-0x19]
  446835:	(bad)  
  446836:	inc    DWORD PTR [rcx-0x1e]
  446839:	pop    rsp
  44683a:	(bad)  
  44683b:	cmp    al,0xdd
  44683d:	push   rdi
  44683e:	push   QWORD PTR [rdi]
  446840:	(bad)  
  446841:	push   rax
  446842:	push   QWORD PTR [rcx]
  446844:	iret   
  446845:	rex.WX jmp FWORD PTR [rdx]
  446848:	mov    BYTE PTR [rdx-0x1],0xe4
  44684c:	mul    edi
  44684e:	call   FWORD PTR [rbp-0x67]
  446851:	pop    rbp
  446852:	jmp    FWORD PTR [rbx-0x4d]
  446855:	jne    0x446856
  446857:	in     al,0xd7
  446859:	(bad)  
  44685a:	jmp    rdx
  44685c:	(bad)  
  44685d:	(bad)  
  44685e:	jmp    rcx
  446860:	(bad)  
  446861:	sar    edi,1
  446863:	(bad)  
  446865:	iret   
  446866:	(bad)  
  446867:	(bad)  
  446869:	(bad)  
  44686a:	(bad)  
  44686b:	fcmovne st,st(5)
  44686d:	int3   
  44686e:	(bad)  
  44686f:	fcmove st,st(3)
  446871:	retf   0xd8ff
  446874:	leave  
  446875:	enter  0xd7ff,0xc7
  446879:	(bad)  
  44687a:	push   rsi
  44687c:	icebp  
  44687d:	out    dx,eax
  44687e:	jmp    QWORD PTR [rbx+0xff7878]
	...
  446898:	add    BYTE PTR [rax],al
  44689a:	add    BYTE PTR [rsi],dl
  44689c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  44689d:	rex jmp QWORD PTR [rbp-0x22]
  4468a1:	jp     0x4468a2
  4468a3:	fcomp  QWORD PTR ds:[rdx-0x1]
  4468a7:	rex.XB loop 0x446909
  4468aa:	inc    DWORD PTR [rsi-0x1a]
  4468ad:	movsxd edi,edi
  4468af:	rex.RXB jmp 0xffffffffe88b6819
  4468b5:	movsxd edi,edi
  4468b7:	rex.R out 0x61,al
  4468ba:	inc    DWORD PTR [rcx-0x1e]
  4468bd:	pop    rsp
  4468be:	(bad)  
  4468bf:	cmp    al,0xdb
  4468c1:	push   rdi
  4468c2:	push   QWORD PTR [rsi]
  4468c4:	(bad)  
  4468c5:	rex.WRXB push QWORD PTR [r8]
  4468c8:	(bad)  
  4468c9:	rex.WB jmp FWORD PTR [r9]
  4468cc:	vcvtpd2dq xmm14,ymm15
  4468d1:	call   0x5dddc6d5
  4468d6:	(bad)  
  4468d7:	(bad)  
  4468d9:	iret   
  4468da:	jmp    rsp
  4468dc:	fcom   st(6)
  4468de:	jmp    rbx
  4468e0:	(bad)  
  4468e1:	(bad)  
  4468e2:	jmp    rcx
  4468e4:	(bad)  
  4468e5:	sar    bh,cl
  4468e7:	(bad)  
  4468e9:	sar    bh,1
  4468eb:	(bad)  
  4468ed:	iret   
  4468ee:	(bad)  
  4468ef:	fmul   st(6),st
  4468f1:	int3   
  4468f2:	(bad)  
  4468f3:	fcmove st,st(4)
  4468f5:	retf   0xd9ff
  4468f8:	retf   0xffc8
  4468fb:	div    cl
  4468fd:	out    dx,eax
  4468fe:	jmp    QWORD PTR [rbx+0xff7878]
	...
  446918:	add    BYTE PTR [rax],al
  44691a:	add    BYTE PTR [rsi],dl
  44691c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  44691d:	rex push QWORD PTR [rsi+rbx*8-0x7a]
  446922:	dec    DWORD PTR [rcx-0x27]
  446925:	(bad)  
  446926:	inc    DWORD PTR [rsi+rbx*8+0x5f]
  44692a:	inc    DWORD PTR [rdx+riz*8+0x5f]
  44692e:	inc    DWORD PTR [rbp-0x18]
  446931:	(bad)  
  446932:	inc    DWORD PTR [rsi-0x17]
  446935:	movsxd edi,edi
  446937:	rex.RX call 0xffffffffe68968a0
  44693d:	pop    rdi
  44693e:	inc    DWORD PTR [rax-0x1f]
  446941:	pop    rsp
  446942:	(bad)  
  446943:	cmp    ebx,ebx
  446945:	push   rsi
  446946:	push   QWORD PTR [rip+0x6bff4ed4]        # 0x6c43b820
  44694c:	fstp   TBYTE PTR [rdi+rdi*8+0x29]
  446950:	mov    bl,0x53
  446952:	call   FWORD PTR [rax-0x56]
  446955:	fs jmp rdi
  446958:	(bad)  
  44695a:	jmp    rsi
  44695c:	fcmovu st,st(0)
  44695e:	jmp    rsp
  446960:	fcom   st(7)
  446962:	jmp    rbx
  446964:	(bad)  
  446965:	(bad)  
  446966:	jmp    rdx
  446968:	(bad)  
  446969:	sar    edi,cl
  44696b:	(bad)  
  44696d:	sar    edi,1
  44696f:	(bad)  
  446971:	iret   
  446972:	(bad)  
  446973:	fmul   st(7),st
  446975:	int    0xff
  446977:	fcmovne st,st(5)
  446979:	retf   
  44697a:	push   rsi
  44697c:	icebp  
  44697d:	out    dx,eax
  44697e:	jmp    QWORD PTR [rbx+0xff7878]
	...
  446998:	add    BYTE PTR [rax],al
  44699a:	add    BYTE PTR [rsi],dl
  44699c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  44699d:	rex (bad) 
  44699f:	js     0x44697d
  4469a1:	mov    edi,edi
  4469a3:	pop    rax
  4469a4:	fsubr  DWORD PTR [rsi-0x1]
  4469a7:	pop    rax
  4469a8:	(bad)  [rsi-0x1]
  4469ab:	push   rsp
  4469ac:	loope  0x446a1c
  4469ae:	dec    DWORD PTR [rsi+riz*8+0x68]
  4469b2:	dec    DWORD PTR [rcx-0x18]
  4469b5:	inc    WORD PTR [rsi-0x17]
  4469b9:	inc    DWORD PTR fs:[rbx-0x18]
  4469bd:	(bad)  
  4469be:	inc    DWORD PTR [rcx-0x1b]
  4469c1:	pop    rsi
  4469c2:	(bad)  
  4469c3:	ds loopne 0x446a20
  4469c6:	push   QWORD PTR [rbx-0x1b]
  4469c9:	xchg   bh,bh
  4469cb:	sub    DWORD PTR [rbx-0x52a100ad],esi
  4469d1:	imul   edi,edi,0xffffffeb
  4469d4:	loope  0x4469b5
  4469d6:	(bad)  
  4469d7:	(bad)  
  4469d8:	(bad)  
  4469da:	(bad)  
  4469db:	call   0xffffffffe84445bd
  4469e0:	fcmovnu st,st(2)
  4469e2:	jmp    rbp
  4469e4:	(bad)  
  4469e6:	jmp    rbx
  4469e8:	xlat   BYTE PTR ds:[rbx]
  4469e9:	(bad)  
  4469ea:	jmp    rdx
  4469ec:	(bad)  
  4469ed:	(bad)  
  4469ee:	jmp    rax
  4469f0:	rcl    ecx,cl
  4469f2:	(bad)  
  4469f3:	(bad)  
  4469f5:	sar    bh,1
  4469f7:	fmul   st(7),st
  4469f9:	int    0xff
  4469fb:	div    cl
  4469fd:	out    dx,eax
  4469fe:	jmp    QWORD PTR [rbx+0xff7878]
	...
  446a18:	add    BYTE PTR [rax],al
  446a1a:	add    BYTE PTR [rcx],ah
  446a1c:	fwait
  446a1d:	cmp    al,0xb6
  446a1f:	(bad)  
  446a20:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  446a21:	rex call QWORD PTR [rsi]
  446a24:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  446a25:	rex call QWORD PTR [rsi]
  446a28:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  446a29:	rex call QWORD PTR [rsi]
  446a2c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  446a2d:	rex call QWORD PTR [rsi]
  446a30:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  446a31:	rex call QWORD PTR [rsi]
  446a34:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  446a35:	rex call QWORD PTR [rsi]
  446a38:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  446a39:	rex call QWORD PTR [rdx-0x14]
  446a3d:	ins    DWORD PTR es:[rdi],dx
  446a3e:	dec    DWORD PTR [rcx-0x17]
  446a41:	addr32 (bad) 
  446a43:	jns    0x446a31
  446a45:	(bad)  
  446a46:	jmp    FWORD PTR [rcx]
  446a48:	mov    bl,0x53
  446a4a:	jmp    QWORD PTR [rdx-0x4f]
  446a4d:	outs   dx,DWORD PTR ds:[rsi]
  446a4e:	(bad)  
  446a4f:	out    dx,eax
  446a50:	in     eax,0xe3
  446a52:	(bad)  
  446a53:	in     eax,dx
  446a54:	jrcxz  0x446a38
  446a56:	(bad)  
  446a57:	in     al,dx
  446a58:	loope  0x446a39
  446a5a:	(bad)  
  446a5b:	(bad)  
  446a5c:	(bad)  
  446a5e:	(bad)  
  446a5f:	jmp    0xffffffffe8444741
  446a64:	(bad)  
  446a66:	jmp    rsi
  446a68:	fcmovbe st,st(7)
  446a6a:	jmp    rsp
  446a6c:	xlat   BYTE PTR ds:[rbx]
  446a6d:	(bad)  
  446a6e:	jmp    rdx
  446a70:	(bad)  
  446a71:	(bad)  
  446a72:	jmp    rax
  446a74:	rcl    edx,cl
  446a76:	(bad)  
  446a77:	(bad)  
  446a79:	sar    bh,1
  446a7b:	div    cl
  446a7d:	out    dx,eax
  446a7e:	jmp    QWORD PTR [rbx+0xff7878]
	...
  446aa8:	add    BYTE PTR [rax],al
  446aaa:	add    BYTE PTR [rbx-0x6008788],ah
  446ab0:	icebp  
  446ab1:	lock (bad) 
  446ab3:	clc    
  446ab4:	lock out dx,eax
  446ab6:	call   QWORD PTR [rsi]
  446ab8:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  446ab9:	rex jmp QWORD PTR [rbp+rbp*8+0x7e]
  446abe:	dec    DWORD PTR [rsi+0x29ffa1f2]
  446ac4:	mov    bl,0x53
  446ac6:	jmp    FWORD PTR [rcx-0x4d]
  446ac9:	je     0x446aca
  446acb:	bnd call 0xffffffffe8356ab8
  446ad1:	in     eax,0xff
  446ad3:	out    dx,eax
  446ad4:	in     eax,0xe3
  446ad6:	(bad)  
  446ad7:	in     eax,dx
  446ad8:	jrcxz  0x446abc
  446ada:	(bad)  
  446adb:	in     al,dx
  446adc:	loope  0x446abe
  446ade:	(bad)  
  446adf:	(bad)  
  446ae0:	(bad)  
  446ae2:	(bad)  
  446ae3:	jmp    0xffffffffe94447c6
  446ae8:	(bad)  
  446aea:	jmp    rsi
  446aec:	fcmovu st,st(0)
  446aee:	jmp    rsp
  446af0:	fcom   st(6)
  446af2:	jmp    rdx
  446af4:	(bad)  
  446af5:	(bad)  
  446af6:	jmp    rcx
  446af8:	(bad)  
  446af9:	sar    bh,cl
  446afb:	div    cl
  446afd:	out    dx,eax
  446afe:	jmp    QWORD PTR [rbx+0xff7878]
	...
  446b28:	add    BYTE PTR [rax],al
  446b2a:	add    BYTE PTR [rbx-0x6008788],ah
  446b30:	repnz lock (bad) 
  446b33:	stc    
  446b34:	bnd lock call QWORD PTR [rsi]
  446b38:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  446b39:	rex call QWORD PTR [rax+0x29ffa1f0]
  446b40:	mov    bl,0x53
  446b42:	jmp    FWORD PTR [rbp-0x4b]
  446b45:	js     0x446b46
  446b47:	cmc    
  446b48:	in     al,dx
  446b49:	(bad)  
  446b4a:	push   rbx
  446b4c:	(bad)  
  446b4d:	jmp    0xffffffffe82e5e51
  446b52:	push   rcx
  446b54:	out    0xe6,eax
  446b56:	(bad)  
  446b57:	out    dx,eax
  446b58:	in     eax,0xe4
  446b5a:	(bad)  
  446b5b:	out    dx,al
  446b5c:	in     al,0xe3
  446b5e:	(bad)  
  446b5f:	in     eax,dx
  446b60:	loop   0x446b42
  446b62:	(bad)  
  446b63:	jmp    0x446b45
  446b65:	(bad)  
  446b67:	(bad)  
  446b68:	(bad)  
  446b6a:	(bad)  
  446b6b:	call   0xffffffffe744474c
  446b70:	fcmovnu st,st(1)
  446b72:	jmp    rbp
  446b74:	(bad)  
  446b76:	jmp    rbx
  446b78:	(bad)  
  446b79:	(bad)  
  446b7a:	push   rsi
  446b7c:	icebp  
  446b7d:	out    dx,eax
  446b7e:	jmp    QWORD PTR [rbx+0xff7878]
	...
  446ba8:	add    BYTE PTR [rax],al
  446baa:	add    BYTE PTR [rbx-0x6008788],ah
  446bb0:	repnz lock (bad) 
  446bb3:	stc    
  446bb4:	bnd lock call QWORD PTR [rsi]
  446bb8:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  446bb9:	rex jmp FWORD PTR [rcx]
  446bbc:	mov    bl,0x53
  446bbe:	push   QWORD PTR [rax-0x4a]
  446bc1:	jl     0x446bc2
  446bc3:	imul   bh
  446bc5:	in     eax,dx
  446bc6:	push   rbp
  446bc8:	out    dx,al
  446bc9:	in     al,dx
  446bca:	push   rsp
  446bcc:	in     al,dx
  446bcd:	jmp    0x446bce
  446bcf:	hlt    
  446bd0:	jmp    0x446bbb
  446bd2:	push   rdx
  446bd4:	jmp    0xffffffffe9366bc0
  446bd9:	out    0xff,al
  446bdb:	out    dx,eax
  446bdc:	out    0xe4,al
  446bde:	(bad)  
  446bdf:	out    dx,al
  446be0:	in     eax,0xe3
  446be2:	(bad)  
  446be3:	in     eax,dx
  446be4:	jrcxz  0x446bc7
  446be6:	(bad)  
  446be7:	in     al,dx
  446be8:	loope  0x446bca
  446bea:	(bad)  
  446beb:	(bad)  
  446bec:	(bad)  
  446bee:	(bad)  
  446bef:	call   0xffffffffe84447d1
  446bf4:	fcmovnu st,st(2)
  446bf6:	jmp    rbp
  446bf8:	(bad)  
  446bfa:	push   rsi
  446bfc:	icebp  
  446bfd:	out    dx,eax
  446bfe:	jmp    QWORD PTR [rbx+0xff7878]
	...
  446c28:	add    BYTE PTR [rax],al
  446c2a:	add    BYTE PTR [rbx-0x6008788],ah
  446c30:	repnz lock (bad) 
  446c33:	stc    
  446c34:	repnz lock jmp FWORD PTR [rdx]
  446c38:	cdq    
  446c39:	rex.RB push QWORD PTR [r10-0x4a]
  446c3d:	jge    0x446c3e
  446c3f:	clc    
  446c40:	repnz out dx,eax
  446c42:	push   rdi
  446c44:	lock out dx,eax
  446c46:	push   rdi
  446c48:	out    dx,eax
  446c49:	out    dx,al
  446c4a:	push   rsi
  446c4c:	out    dx,al
  446c4d:	in     al,dx
  446c4e:	push   rbp
  446c50:	in     al,dx
  446c51:	jmp    0x446c52
  446c53:	repz in al,dx
  446c55:	jmp    0xffffffffe92f6059
  446c5a:	push   rcx
  446c5c:	jmp    0xffffffffe8356c47
  446c61:	in     eax,0xff
  446c63:	out    dx,al
  446c64:	in     eax,0xe4
  446c66:	(bad)  
  446c67:	out    dx,al
  446c68:	jrcxz  0x446c4b
  446c6a:	(bad)  
  446c6b:	in     al,dx
  446c6c:	loope  0x446c4e
  446c6e:	(bad)  
  446c6f:	jmp    0x446c51
  446c71:	fdivp  st(7),st
  446c73:	jmp    0xffffffffe8444955
  446c78:	(bad)  
  446c7a:	push   rsi
  446c7c:	icebp  
  446c7d:	out    dx,eax
  446c7e:	jmp    QWORD PTR [rbx+0xff7878]
	...
  446ca8:	add    BYTE PTR [rax],al
  446caa:	add    BYTE PTR [rbx-0x9008788],ah
  446cb0:	icebp  
  446cb1:	out    dx,eax
  446cb2:	push   rsi
  446cb4:	icebp  
  446cb5:	out    dx,eax
  446cb6:	push   rsi
  446cb8:	icebp  
  446cb9:	out    dx,eax
  446cba:	push   rsi
  446cbc:	icebp  
  446cbd:	out    dx,eax
  446cbe:	push   rsi
  446cc0:	icebp  
  446cc1:	out    dx,eax
  446cc2:	push   rsi
  446cc4:	icebp  
  446cc5:	out    dx,eax
  446cc6:	push   rsi
  446cc8:	icebp  
  446cc9:	out    dx,eax
  446cca:	push   rsi
  446ccc:	icebp  
  446ccd:	out    dx,eax
  446cce:	push   rsi
  446cd0:	icebp  
  446cd1:	out    dx,eax
  446cd2:	push   rsi
  446cd4:	icebp  
  446cd5:	out    dx,eax
  446cd6:	push   rsi
  446cd8:	icebp  
  446cd9:	out    dx,eax
  446cda:	push   rsi
  446cdc:	icebp  
  446cdd:	out    dx,eax
  446cde:	push   rsi
  446ce0:	icebp  
  446ce1:	out    dx,eax
  446ce2:	push   rsi
  446ce4:	icebp  
  446ce5:	out    dx,eax
  446ce6:	push   rsi
  446ce8:	icebp  
  446ce9:	out    dx,eax
  446cea:	push   rsi
  446cec:	icebp  
  446ced:	out    dx,eax
  446cee:	push   rsi
  446cf0:	icebp  
  446cf1:	out    dx,eax
  446cf2:	push   rsi
  446cf4:	icebp  
  446cf5:	out    dx,eax
  446cf6:	push   rsi
  446cf8:	icebp  
  446cf9:	out    dx,eax
  446cfa:	push   rsi
  446cfc:	icebp  
  446cfd:	out    dx,eax
  446cfe:	jmp    QWORD PTR [rbx+0xff7878]
	...
  446d24:	add    BYTE PTR [rax],al
  446d26:	add    cl,cl
  446d28:	mov    dh,0xb5
  446d2a:	jae    0x446ccf
  446d2c:	js     0x446da6
  446d2e:	jmp    QWORD PTR [rbx-0x5c008788]
  446d34:	js     0x446dae
  446d36:	jmp    QWORD PTR [rbx-0x5c008788]
  446d3c:	js     0x446db6
  446d3e:	jmp    QWORD PTR [rbx-0x5c008788]
  446d44:	js     0x446dbe
  446d46:	jmp    QWORD PTR [rbx-0x5c008788]
  446d4c:	js     0x446dc6
  446d4e:	jmp    QWORD PTR [rbx-0x5c008788]
  446d54:	js     0x446dce
  446d56:	jmp    QWORD PTR [rbx-0x5c008788]
  446d5c:	js     0x446dd6
  446d5e:	jmp    QWORD PTR [rbx-0x5c008788]
  446d64:	js     0x446dde
  446d66:	jmp    QWORD PTR [rbx-0x5c008788]
  446d6c:	js     0x446de6
  446d6e:	jmp    QWORD PTR [rbx-0x5c008788]
  446d74:	js     0x446dee
  446d76:	jmp    QWORD PTR [rbx-0x5c008788]
  446d7c:	js     0x446df6
  446d7e:	jmp    QWORD PTR [rbx-0x36008788]
  446d84:	mov    dh,0xb5
  446d86:	jae    0x446d88
	...
  446da0:	add    BYTE PTR [rax],al
  446da2:	add    cl,cl
  446da4:	mov    dh,0xb5
  446da6:	jae    0x446d4b
  446da8:	js     0x446e22
  446daa:	jmp    QWORD PTR [rbx-0x5c008788]
  446db0:	js     0x446e2a
  446db2:	jmp    QWORD PTR [rbx-0x5a008788]
  446db8:	jnp    0x446e35
  446dba:	jmp    FWORD PTR [rax-0x54008081]
  446dc0:	test   DWORD PTR [rbp-0x75755101],eax
  446dc6:	push   QWORD PTR [rdx-0x49006f70]
  446dcc:	xchg   edi,eax
  446dcd:	xchg   edi,eax
  446dce:	(bad)  
  446dcf:	mov    edx,0xbeff9d9d
  446dd4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  446dd5:	movabs ds:0xaeaec4ffa9aac1ff,eax
  446dde:	inc    edi
  446de0:	mov    bl,0xb2
  446de2:	dec    ecx
  446de4:	mov    dh,0xb5
  446de6:	dec    ecx
  446de8:	mov    dh,0xb5
  446dea:	dec    ecx
  446dec:	mov    dh,0xb5
  446dee:	dec    ecx
  446df0:	mov    dh,0xb5
  446df2:	dec    ecx
  446df4:	mov    dh,0xb5
  446df6:	dec    ecx
  446df8:	mov    dh,0xb5
  446dfa:	dec    ecx
  446dfc:	mov    dh,0xb5
  446dfe:	jmp    QWORD PTR [rbx-0x5c008788]
  446e04:	js     0x446e7e
  446e06:	dec    ecx
  446e08:	mov    dh,0xb5
  446e0a:	jae    0x446e0c
	...
  446e1c:	add    BYTE PTR [rax],al
  446e1e:	add    cl,cl
  446e20:	mov    dh,0xb5
  446e22:	jae    0x446dc7
  446e24:	js     0x446e9e
  446e26:	dec    ecx
  446e28:	mov    dh,0xb5
  446e2a:	jmp    QWORD PTR [rbx-0x5c008788]
  446e30:	js     0x446eaa
  446e32:	jmp    QWORD PTR [rbx-0x5c008788]
  446e38:	js     0x446eb2
  446e3a:	jmp    QWORD PTR [rbx-0x5c008788]
  446e40:	js     0x446eba
  446e42:	jmp    QWORD PTR [rbx-0x5c008788]
  446e48:	js     0x446ec2
  446e4a:	jmp    QWORD PTR [rbx-0x5c008788]
  446e50:	js     0x446eca
  446e52:	jmp    QWORD PTR [rbx-0x5c008788]
  446e58:	js     0x446ed2
  446e5a:	jmp    QWORD PTR [rbx-0x5c008788]
  446e60:	js     0x446eda
  446e62:	jmp    QWORD PTR [rbx-0x5c008788]
  446e68:	js     0x446ee2
  446e6a:	jmp    QWORD PTR [rbx-0x5c008788]
  446e70:	js     0x446eea
  446e72:	jmp    QWORD PTR [rbx-0x5c008788]
  446e78:	js     0x446ef2
  446e7a:	jmp    QWORD PTR [rbx-0x5c008788]
  446e80:	js     0x446efa
  446e82:	dec    ecx
  446e84:	mov    dh,0xb5
  446e86:	jmp    QWORD PTR [rbx-0x36008788]
  446e8c:	mov    dh,0xb5
  446e8e:	jae    0x446e90
	...
  446e98:	add    BYTE PTR [rax],al
  446e9a:	add    cl,cl
  446e9c:	mov    dh,0xb5
  446e9e:	jae    0x446e43
  446ea0:	js     0x446f1a
  446ea2:	dec    ecx
  446ea4:	mov    dh,0xb5
  446ea6:	jmp    QWORD PTR [rbx-0x36008788]
  446eac:	mov    dh,0xb5
  446eae:	jae    0x446e53
  446eb0:	js     0x446f2a
  446eb2:	dec    ebp
  446eb4:	mov    ch,0xb3
  446eb6:	dec    ebp
  446eb8:	mov    ah,0xb3
  446eba:	dec    ebp
  446ebc:	mov    ah,0xb4
  446ebe:	dec    esp
  446ec0:	mov    ah,0xb4
  446ec2:	dec    ebp
  446ec4:	mov    ah,0xb4
  446ec6:	dec    ebp
  446ec8:	mov    ch,0xb4
  446eca:	dec    esp
  446ecc:	mov    ch,0xb3
  446ece:	dec    esp
  446ed0:	mov    ah,0xb4
  446ed2:	dec    esp
  446ed4:	mov    ah,0xb3
  446ed6:	dec    esp
  446ed8:	mov    ch,0xb4
  446eda:	dec    ebp
  446edc:	mov    ch,0xb3
  446ede:	dec    esp
  446ee0:	mov    ch,0xb4
  446ee2:	dec    ebp
  446ee4:	mov    ah,0xb4
  446ee6:	dec    ebp
  446ee8:	mov    ch,0xb4
  446eea:	dec    ebp
  446eec:	mov    ah,0xb4
  446eee:	dec    esp
  446ef0:	mov    ah,0xb3
  446ef2:	dec    ebp
  446ef4:	mov    ah,0xb3
  446ef6:	dec    ebp
  446ef8:	mov    ch,0xb4
  446efa:	jmp    QWORD PTR [rbx-0x36008788]
  446f00:	mov    dh,0xb5
  446f02:	jae    0x446ea7
  446f04:	js     0x446f7e
  446f06:	dec    ecx
  446f08:	mov    dh,0xb5
  446f0a:	jmp    QWORD PTR [rbx-0x36008788]
  446f10:	mov    dh,0xb5
  446f12:	jae    0x446f14
  446f14:	add    BYTE PTR [rax],al
  446f16:	add    BYTE PTR [rax],al
  446f18:	add    BYTE PTR [rax],al
  446f1a:	add    BYTE PTR [rbx-0x5c008788],ah
  446f20:	js     0x446f9a
  446f22:	jmp    QWORD PTR [rbx-0x36008788]
  446f28:	mov    dh,0xb5
  446f2a:	jae    0x446f2c
  446f2c:	add    BYTE PTR [rax],al
  446f2e:	add    BYTE PTR [rbx-0x21008788],ah
  446f34:	int    0xcc
  446f36:	(bad)  
  446f37:	(bad)  
  446f39:	int3   
  446f3a:	(bad)  
  446f3b:	(bad)  
  446f3d:	int3   
  446f3e:	(bad)  
  446f3f:	(bad)  
  446f41:	retf   
  446f42:	(bad)  
  446f43:	(bad)  
  446f45:	int3   
  446f46:	(bad)  
  446f47:	(bad)  
  446f49:	retf   
  446f4a:	(bad)  
  446f4b:	fmulp  st(5),st
  446f4d:	int3   
  446f4e:	(bad)  
  446f4f:	(bad)  
  446f51:	int3   
  446f52:	(bad)  
  446f53:	(bad)  
  446f55:	int3   
  446f56:	(bad)  
  446f57:	fmulp  st(5),st
  446f59:	int3   
  446f5a:	(bad)  
  446f5b:	(bad)  
  446f5d:	int3   
  446f5e:	(bad)  
  446f5f:	(bad)  
  446f61:	int3   
  446f62:	(bad)  
  446f63:	fmulp  st(5),st
  446f65:	int3   
  446f66:	(bad)  
  446f67:	fmulp  st(5),st
  446f69:	int3   
  446f6a:	(bad)  
  446f6b:	(bad)  
  446f6d:	retf   
  446f6e:	(bad)  
  446f6f:	(bad)  
  446f71:	int3   
  446f72:	(bad)  
  446f73:	fmulp  st(5),st
  446f75:	retf   
  446f76:	(bad)  
  446f77:	fmulp  st(5),st
  446f79:	int3   
  446f7a:	jmp    QWORD PTR [rbx+0xff7878]
  446f80:	add    BYTE PTR [rax],al
  446f82:	add    cl,cl
  446f84:	mov    dh,0xb5
  446f86:	jae    0x446f2b
  446f88:	js     0x447002
  446f8a:	jmp    QWORD PTR [rbx-0x5c008788]
  446f90:	js     0x44700a
  446f92:	inc    DWORD PTR [rax]
	...
  446fac:	add    BYTE PTR [rax],al
  446fae:	add    BYTE PTR [rbx-0x13008788],ah
  446fb4:	jrcxz  0x446f97
  446fb6:	(bad)  
  446fb7:	in     al,dx
  446fb8:	loop   0x446f9a
  446fba:	(bad)  
  446fbb:	in     al,dx
  446fbc:	loop   0x446f9f
  446fbe:	(bad)  
  446fbf:	in     al,dx
  446fc0:	jrcxz  0x446fa3
  446fc2:	(bad)  
  446fc3:	in     al,dx
  446fc4:	loop   0x446fa6
  446fc6:	(bad)  
  446fc7:	in     al,dx
  446fc8:	loop   0x446fab
  446fca:	(bad)  
  446fcb:	in     al,dx
  446fcc:	loop   0x446faf
  446fce:	(bad)  
  446fcf:	in     al,dx
  446fd0:	jrcxz  0x446fb3
  446fd2:	(bad)  
  446fd3:	in     al,dx
  446fd4:	jrcxz  0x446fb7
  446fd6:	(bad)  
  446fd7:	in     al,dx
  446fd8:	loop   0x446fbb
  446fda:	(bad)  
  446fdb:	in     al,dx
  446fdc:	loop   0x446fbf
  446fde:	(bad)  
  446fdf:	in     al,dx
  446fe0:	loop   0x446fc3
  446fe2:	(bad)  
  446fe3:	in     al,dx
  446fe4:	loop   0x446fc7
  446fe6:	(bad)  
  446fe7:	in     al,dx
  446fe8:	loop   0x446fca
  446fea:	(bad)  
  446feb:	in     al,dx
  446fec:	loop   0x446fcf
  446fee:	(bad)  
  446fef:	in     al,dx
  446ff0:	loop   0x446fd3
  446ff2:	(bad)  
  446ff3:	in     al,dx
  446ff4:	loop   0x446fd6
  446ff6:	(bad)  
  446ff7:	in     al,dx
  446ff8:	jrcxz  0x446fda
  446ffa:	jmp    QWORD PTR [rbx+0xff7878]
	...
  44702c:	add    BYTE PTR [rax],al
  44702e:	add    BYTE PTR [rbx-0x5c008788],ah
  447034:	js     0x4470ae
  447036:	jmp    QWORD PTR [rbx-0x5c008788]
  44703c:	js     0x4470b6
  44703e:	jmp    QWORD PTR [rbx-0x5c008788]
  447044:	js     0x4470be
  447046:	jmp    QWORD PTR [rbx-0x5c008788]
  44704c:	js     0x4470c6
  44704e:	jmp    QWORD PTR [rbx-0x5c008788]
  447054:	js     0x4470ce
  447056:	jmp    QWORD PTR [rbx-0x5c008788]
  44705c:	js     0x4470d6
  44705e:	jmp    QWORD PTR [rbx-0x5c008788]
  447064:	js     0x4470de
  447066:	jmp    QWORD PTR [rbx-0x5c008788]
  44706c:	js     0x4470e6
  44706e:	jmp    QWORD PTR [rbx-0x5c008788]
  447074:	js     0x4470ee
  447076:	jmp    QWORD PTR [rbx-0x5c008788]
  44707c:	js     0x4470f6
  44707e:	inc    DWORD PTR [rax]
	...
  447114:	add    BYTE PTR [rax],al
  447116:	add    bh,bh
  447118:	(bad)  
  447119:	(bad)  
  44711a:	(bad)  
  44711b:	clc    
  44711c:	add    BYTE PTR [rax],al
  44711e:	(bad)  
  44711f:	clc    
  447120:	add    BYTE PTR [rax],al
  447122:	(bad)  
  447123:	clc    
  447124:	add    BYTE PTR [rax],al
  447126:	(bad)  
  447127:	clc    
  447128:	add    BYTE PTR [rax],al
  44712a:	(bad)  
  44712b:	clc    
  44712c:	add    BYTE PTR [rax],al
  44712e:	(bad)  
  44712f:	clc    
  447130:	add    BYTE PTR [rax],al
  447132:	(bad)  
  447133:	clc    
  447134:	add    BYTE PTR [rax],al
  447136:	(bad)  
  447137:	clc    
  447138:	add    BYTE PTR [rax],al
  44713a:	(bad)  
  44713b:	clc    
  44713c:	add    BYTE PTR [rax],al
  44713e:	(bad)  
  44713f:	clc    
  447140:	add    BYTE PTR [rax],al
  447142:	(bad)  
  447143:	clc    
  447144:	add    BYTE PTR [rax],al
  447146:	(bad)  
  447147:	add    BYTE PTR [rax],0x0
  44714a:	(bad)  
  44714b:	add    BYTE PTR [rax],0x0
  44714e:	(bad)  
  44714f:	add    BYTE PTR [rax],0x0
  447152:	(bad)  
  447153:	add    BYTE PTR [rax],0x0
  447156:	(bad)  
  447157:	add    BYTE PTR [rax],0x0
  44715a:	(bad)  
  44715b:	add    BYTE PTR [rax],0x0
  44715e:	(bad)  
  44715f:	add    BYTE PTR [rax],0x0
  447162:	(bad)  
  447163:	clc    
  447164:	add    BYTE PTR [rax],al
  447166:	(bad)  
  447167:	clc    
  447168:	add    BYTE PTR [rax],al
  44716a:	(bad)  
  44716b:	clc    
  44716c:	add    BYTE PTR [rax],al
  44716e:	(bad)  
  44716f:	clc    
  447170:	add    BYTE PTR [rax],al
  447172:	(bad)  
  447173:	clc    
  447174:	add    BYTE PTR [rax],al
  447176:	(bad)  
  447177:	lock add BYTE PTR [rax],al
  44717a:	pavgb  mm0,QWORD PTR [rax]
  44717d:	add    BYTE PTR [rdi],al
  44717f:	rol    BYTE PTR [rax],0x0
  447182:	add    eax,DWORD PTR [rax-0x7bff0000]
  447188:	add    BYTE PTR [rax],al
  44718a:	and    esp,edi
  44718c:	add    BYTE PTR [rax],al
  44718e:	(bad)  
  44718f:	cld    
  447190:	add    BYTE PTR [rax],al
  447192:	(bad)  
  447193:	(bad)  
  447194:	(bad)  
  447195:	(bad)  
  447196:	jmp    FWORD PTR [rax]
  447198:	add    BYTE PTR [rax],al
  44719a:	add    BYTE PTR [rax],dl
  44719c:	add    BYTE PTR [rax],al
  44719e:	add    BYTE PTR [rax],ah
  4471a0:	add    BYTE PTR [rax],al
  4471a2:	add    BYTE PTR [rcx],al
  4471a4:	add    BYTE PTR [rax],ah
  4471a6:	add    BYTE PTR [rax],al
  4471a8:	add    BYTE PTR [rax],al
  4471aa:	add    BYTE PTR [rax+0x4],al
	...
  4471c5:	add    BYTE PTR [rax],al
  4471c7:	movabs ds:0xa3ff7878a3ff7878,eax
  4471d0:	js     0x44724a
  4471d2:	jmp    QWORD PTR [rbx-0x5c008788]
  4471d8:	js     0x447252
  4471da:	jmp    QWORD PTR [rbx-0x5c008788]
  4471e0:	js     0x44725a
  4471e2:	jmp    QWORD PTR [rbx-0x5c008788]
  4471e8:	js     0x447262
  4471ea:	jmp    QWORD PTR [rbx-0x5c008788]
  4471f0:	js     0x44726a
  4471f2:	jmp    QWORD PTR [rbx+0xff7878]
	...
  447204:	add    BYTE PTR [rax],al
  447206:	add    BYTE PTR [rbx-0x1f008788],ah
  44720c:	rcl    cl,cl
  44720e:	(bad)  
  44720f:	(bad)  
  447211:	(bad)  
  447212:	push   rdx
  447214:	out    dx,al
  447215:	in     eax,dx
  447216:	push   rcx
  447218:	in     al,dx
  447219:	in     al,dx
  44721a:	call   rsp
  44721c:	(bad)  
  447220:	sar    BYTE PTR [rdi-0x44433101],0xff
  447227:	int3   
  447228:	mov    ecx,0xb6c9ffb8
  44722d:	mov    ch,0xff
  44722f:	div    cl
  447231:	out    dx,eax
  447232:	jmp    QWORD PTR [rbx+0xff7878]
	...
  447244:	add    BYTE PTR [rax],al
  447246:	add    BYTE PTR [rbx-0x1c008788],ah
  44724c:	xlat   BYTE PTR ds:[rbx]
  44724d:	(bad)  
  44724e:	jmp    rcx
  447250:	(bad)  
  447251:	sar    bh,cl
  447253:	pop    rbp
  447254:	cdq    
  447255:	pop    rbp
  447256:	call   FWORD PTR [rbp-0x67]
  447259:	pop    rbp
  44725a:	push   rdx
  44725c:	in     eax,dx
  44725d:	in     al,dx
  44725e:	call   rbp
  447260:	(bad)
  447263:	rol    dl,cl
  447265:	sar    bh,0xd0
  447268:	mov    esi,0xbaccffbd
  44726d:	mov    ecx,0xeff1f6ff
  447272:	jmp    QWORD PTR [rbx+0xff7878]
	...
  447284:	add    BYTE PTR [rax],al
  447286:	add    ah,al
  447288:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  447289:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  44728a:	push   rdi
  44728c:	repz repz push rsi
  447290:	repnz icebp 
  447292:	call   FWORD PTR [rbp-0x67]
  447295:	pop    rbp
  447296:	jmp    QWORD PTR [rax]
  447298:	mov    edi,0x995dff43
  44729d:	pop    rbp
  44729e:	push   rdx
  4472a0:	in     eax,dx
  4472a1:	in     al,dx
  4472a2:	call   rsi
  4472a4:	mov    ch,0xff
  4472a7:	(bad)  
  4472a8:	ret    0xffc1
  4472ab:	sar    BYTE PTR [rdi-0xe090042],1
  4472b1:	out    dx,eax
  4472b2:	jmp    QWORD PTR [rbx+0xff7878]
  4472b8:	add    BYTE PTR [rax],al
  4472ba:	add    BYTE PTR [rax],al
  4472bc:	add    BYTE PTR [rax],al
  4472be:	add    BYTE PTR [rbp-0x67],bl
  4472c1:	pop    rbp
  4472c2:	call   FWORD PTR [rbp-0x67]
  4472c5:	pop    rbp
  4472c6:	call   FWORD PTR [rbp-0x67]
  4472c9:	pop    rbp
  4472ca:	call   FWORD PTR [rbp-0x67]
  4472cd:	pop    rbp
  4472ce:	call   FWORD PTR [rbp-0x67]
  4472d1:	pop    rbp
  4472d2:	call   FWORD PTR [rbp-0x67]
  4472d5:	pop    rbp
  4472d6:	inc    edi
  4472d8:	cld    
  4472d9:	(bad)  
  4472da:	jmp    QWORD PTR [rax]
  4472dc:	mov    edi,0x995dff43
  4472e1:	pop    rbp
  4472e2:	push   rdx
  4472e4:	out    dx,al
  4472e5:	in     eax,dx
  4472e6:	call   rdi
  4472e8:	enter  0xffc6,0xd4
  4472ec:	(bad)  
  4472f0:	icebp  
  4472f1:	out    dx,eax
  4472f2:	jmp    QWORD PTR [rbx+0xff7878]
  4472f8:	add    BYTE PTR [rax],al
  4472fa:	add    BYTE PTR [rax],al
  4472fc:	add    BYTE PTR [rax],al
  4472fe:	add    BYTE PTR [rdi],ch
  447300:	mov    ebx,0xed85ff4f
  447305:	xchg   edi,eax
  447306:	inc    BYTE PTR [rbx+rbp*8-0x147c0069]
  44730d:	xchg   esp,eax
  44730e:	(bad)  
  44730f:	jg     0x4472f9
  447311:	nop
  447312:	(bad)  
  447313:	jns    0x4472f8
  447315:	mov    bh,bh
  447317:	sub    ecx,ecx
  447319:	rex.XB inc r14d
  44731c:	cld    
  44731d:	(bad)  
  44731e:	jmp    QWORD PTR [rax]
  447320:	mov    edi,0x995dff43
  447325:	pop    rbp
  447326:	push   rbx
  447328:	out    dx,al
  447329:	in     eax,dx
  44732a:	(bad)  
  44732b:	fmul   st,st(1)
  44732d:	(bad)  
  44732e:	push   rsi
  447330:	icebp  
  447331:	out    dx,eax
  447332:	jmp    QWORD PTR [rbx+0xff7878]
  447338:	add    BYTE PTR [rax],al
  44733a:	add    BYTE PTR [rax],al
  44733c:	add    BYTE PTR [rax],al
  44733e:	add    BYTE PTR [rdi],ch
  447340:	mov    ebx,0xef86ff4f
  447345:	(bad)  
  447346:	inc    DWORD PTR [rsi-0x17]
  447349:	movsxd edi,edi
  44734b:	rex.RXB jmp 0xffffffffe58872b4
  447351:	pop    rdi
  447352:	(bad)  
  447353:	cmp    eax,0x34ff58dd
  447358:	ror    DWORD PTR [rsi-0x1],cl
  44735b:	sub    al,bh
  44735d:	rex.X inc esp
  447360:	std    
  447361:	int    0xff
  447363:	sbb    BYTE PTR [rbx-0x1abc00c4],bh
  447369:	pop    rdi
  44736a:	(bad)  
  44736b:	fcmovne st,st(5)
  44736d:	int    0xff
  44736f:	div    cl
  447371:	out    dx,eax
  447372:	jmp    QWORD PTR [rbx+0xff7878]
  447378:	add    BYTE PTR [rax],al
  44737a:	add    BYTE PTR [rax],al
  44737c:	add    BYTE PTR [rax],al
  44737e:	add    BYTE PTR [rdi],ch
  447380:	mov    ebx,0xea86ff4f
  447385:	cwde   
  447386:	call   FWORD PTR [rdx-0x17]
  447389:	je     0x44738a
  44738b:	pop    rcx
  44738c:	(bad)  
  44738d:	jae    0x44738e
  44738f:	rex.R call 0xffffffffe48572f5
  447395:	pop    rsp
  447396:	(bad)  
  447397:	cmp    bl,bl
  447399:	push   rsi
  44739a:	jmp    QWORD PTR [rbp-0x24]
  44739d:	js     0x44739e
  44739f:	adc    al,0xaf
  4473a1:	call   QWORD PTR ss:[rbp-0xa005e2a]
  4473a8:	icebp  
  4473a9:	lock (bad) 
  4473ab:	(bad)  
  4473ad:	sar    edi,1
  4473af:	div    cl
  4473b1:	out    dx,eax
  4473b2:	jmp    QWORD PTR [rbx+0xff7878]
  4473b8:	add    BYTE PTR [rax],al
  4473ba:	add    BYTE PTR [rax],al
  4473bc:	add    BYTE PTR [rax],al
  4473be:	add    BYTE PTR [rdx],ah
  4473c0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4473c1:	cmp    ebp,ebx
  4473c3:	(bad)  
  4473c4:	mov    esp,0xbc1eff41
  4473c9:	call   FWORD PTR [r14]
  4473cc:	mov    esp,0xbc1eff41
  4473d1:	call   FWORD PTR [r14]
  4473d4:	mov    esp,0xe86eff41
  4473d9:	test   bh,bh
  4473db:	adc    al,0xaf
  4473dd:	call   QWORD PTR ss:[rsi-0x8005d28]
  4473e4:	hlt    
  4473e5:	repz jmp rsi
  4473e8:	fcmovnu st,st(2)
  4473ea:	jmp    rsp
  4473ec:	fcom   st(5)
  4473ee:	push   rsi
  4473f0:	icebp  
  4473f1:	out    dx,eax
  4473f2:	jmp    QWORD PTR [rbx+0xff7878]
	...
  447404:	add    BYTE PTR [rax],al
  447406:	add    ah,al
  447408:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  447409:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  44740a:	(bad)  
  44740b:	stc    
  44740c:	repnz lock push rdi
  447410:	lock out dx,al
  447412:	call   FWORD PTR [rsi]
  447414:	mov    esp,0xaf14ff41
  447419:	call   QWORD PTR ss:[rdi-0x5005b27]
  447420:	div    dh
  447422:	(bad)  
  447423:	in     eax,dx
  447424:	jrcxz  0x447407
  447426:	(bad)  
  447427:	(bad)  
  447428:	loopne 0x447407
  44742a:	jmp    rdi
  44742c:	fstp   st(2)
  44742e:	push   rsi
  447430:	icebp  
  447431:	out    dx,eax
  447432:	jmp    QWORD PTR [rbx+0xff7878]
	...
  447444:	add    BYTE PTR [rax],al
  447446:	add    BYTE PTR [rbx-0x6008788],ah
  44744c:	repnz lock (bad) 
  44744f:	stc    
  447450:	repnz lock call FWORD PTR [rcx]
  447454:	mov    ecx,0xda98ff3c
  447459:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  44745a:	(bad)  
  44745b:	sti    
  44745c:	stc    
  44745d:	clc    
  44745e:	push   rbx
  447460:	(bad)  
  447461:	call   0xffffffffe62c6565
  447466:	(bad)  
  447467:	out    dx,al
  447468:	in     al,0xe2
  44746a:	(bad)  
  44746b:	jmp    0x44744e
  44746d:	(bad)  
  44746f:	div    cl
  447471:	out    dx,eax
  447472:	jmp    QWORD PTR [rbx+0xff7878]
	...
  447484:	add    BYTE PTR [rax],al
  447486:	add    BYTE PTR [rbx-0x8788],ah
  44748c:	(bad)  
  44748d:	(bad)  
  44748e:	(bad)  
  44748f:	(bad)  
  447490:	(bad)  
  447491:	(bad)  
  447492:	(bad)  
  447493:	(bad)  
  447494:	(bad)  
  447495:	(bad)  
  447496:	(bad)  
  447497:	(bad)  
  447498:	(bad)  
  447499:	(bad)  
  44749a:	(bad)  
  44749b:	(bad)  
  44749c:	(bad)  
  44749d:	(bad)  
  44749e:	(bad)  
  44749f:	(bad)  
  4474a0:	(bad)  
  4474a1:	(bad)  
  4474a2:	(bad)  
  4474a3:	(bad)  
  4474a4:	(bad)  
  4474a5:	(bad)  
  4474a6:	(bad)  
  4474a7:	(bad)  
  4474a8:	(bad)  
  4474a9:	(bad)  
  4474aa:	(bad)  
  4474ab:	(bad)  
  4474ac:	(bad)  
  4474ad:	(bad)  
  4474ae:	(bad)  
  4474af:	(bad)  
  4474b0:	(bad)  
  4474b1:	(bad)  
  4474b2:	jmp    QWORD PTR [rbx+0xff7878]
	...
  4474c0:	add    BYTE PTR [rax],al
  4474c2:	add    BYTE PTR [rsi+riz*2+0x78a34266],dl
  4474c9:	js     0x4474ca
  4474cb:	movabs ds:0xa3ff7878a3ff7878,eax
  4474d4:	js     0x44754e
  4474d6:	jmp    QWORD PTR [rbx-0x5c008788]
  4474dc:	js     0x447556
  4474de:	jmp    QWORD PTR [rbx-0x5c008788]
  4474e4:	js     0x44755e
  4474e6:	jmp    QWORD PTR [rbx-0x5c008788]
  4474ec:	js     0x447566
  4474ee:	jmp    QWORD PTR [rbx-0x5c008788]
  4474f4:	js     0x44756e
  4474f6:	call   QWORD PTR [rsi+riz*2+0x4266]
  4474fd:	add    BYTE PTR [rax],al
  4474ff:	add    BYTE PTR [rax],al
  447501:	add    BYTE PTR [rax],al
  447503:	movabs ds:0xa342666694ff7878,eax
  44750c:	js     0x447586
  44750e:	inc    esp
  447510:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  447511:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  447512:	inc    esp
  447514:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  447515:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  447516:	inc    esp
  447518:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  447519:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  44751a:	inc    esp
  44751c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  44751d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  44751e:	inc    esp
  447520:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  447521:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  447522:	inc    esp
  447524:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  447525:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  447526:	inc    esp
  447528:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  447529:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  44752a:	inc    esp
  44752c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  44752d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  44752e:	jmp    QWORD PTR [rbx-0x6b008788]
  447534:	data16 rex.X movabs ds:0xa300000000ff7878,ax
  447540:	js     0x4475ba
  447542:	inc    DWORD PTR [rax]
  447544:	add    BYTE PTR [rax],al
  447546:	add    BYTE PTR [rax],al
  447548:	add    BYTE PTR [rax],al
  44754a:	add    BYTE PTR [rbx-0x1e008788],ah
  447550:	(bad)  
  447551:	(bad)  
  447552:	jmp    rcx
  447554:	(bad)  
  447555:	(bad)  
  447556:	jmp    rcx
  447558:	(bad)  
  447559:	(bad)  
  44755a:	jmp    rcx
  44755c:	(bad)  
  44755d:	(bad)  
  44755e:	jmp    rcx
  447560:	(bad)  
  447561:	(bad)  
  447562:	jmp    rcx
  447564:	(bad)  
  447565:	(bad)  
  447566:	jmp    rcx
  447568:	(bad)  
  447569:	(bad)  
  44756a:	jmp    rcx
  44756c:	(bad)  
  44756d:	(bad)  
  44756e:	jmp    QWORD PTR [rbx+0xff7878]
  447574:	add    BYTE PTR [rax],al
  447576:	add    BYTE PTR [rax],al
  447578:	add    BYTE PTR [rax],al
  44757a:	add    BYTE PTR [rbx+0xff7878],ah
	...
  447588:	add    BYTE PTR [rax],al
  44758a:	add    BYTE PTR [rbx-0x5c008788],ah
  447590:	js     0x44760a
  447592:	jmp    QWORD PTR [rbx-0x5c008788]
  447598:	js     0x447612
  44759a:	jmp    QWORD PTR [rbx-0x5c008788]
  4475a0:	js     0x44761a
  4475a2:	jmp    QWORD PTR [rbx-0x5c008788]
  4475a8:	js     0x447622
  4475aa:	jmp    QWORD PTR [rbx-0x5c008788]
  4475b0:	js     0x44762a
  4475b2:	inc    DWORD PTR [rax]
	...
  4475bc:	add    BYTE PTR [rax],al
  4475be:	add    al,al
  4475c0:	add    eax,DWORD PTR [rax]
  4475c2:	add    al,al
  4475c4:	add    eax,DWORD PTR [rax]
  4475c6:	add    al,al
  4475c8:	add    eax,DWORD PTR [rax]
  4475ca:	add    al,al
  4475cc:	add    eax,DWORD PTR [rax]
  4475ce:	add    BYTE PTR [rax],al
  4475d0:	add    eax,DWORD PTR [rax]
  4475d2:	add    BYTE PTR [rax],al
  4475d4:	add    eax,DWORD PTR [rax]
  4475d6:	add    BYTE PTR [rax],al
  4475d8:	add    eax,DWORD PTR [rax]
  4475da:	add    BYTE PTR [rax],al
  4475dc:	add    eax,DWORD PTR [rax]
  4475de:	add    BYTE PTR [rax],al
  4475e0:	add    eax,DWORD PTR [rax]
  4475e2:	add    al,al
  4475e4:	add    eax,DWORD PTR [rax]
  4475e6:	add    al,al
  4475e8:	add    eax,DWORD PTR [rax]
  4475ea:	add    al,al
  4475ec:	add    eax,DWORD PTR [rax]
  4475ee:	add    BYTE PTR [rax-0x7fffffff],al
  4475f4:	add    DWORD PTR [rax],eax
  4475f6:	add    BYTE PTR [rax+0x6],ah
  4475f9:	add    BYTE PTR [rax],al
  4475fb:	loopne 0x447604
  4475fd:	add    BYTE PTR [rax],al
  4475ff:	or     eax,DWORD PTR [rcx+0x0]
  447602:	add    DWORD PTR [rax],eax
  447604:	add    BYTE PTR [rax],al
  447606:	(bad)  
  447607:	(bad)  
  447608:	(bad)  
  447609:	inc    DWORD PTR [rcx]
  44760b:	add    BYTE PTR [rax],al
  44760d:	add    BYTE PTR [rax],al
  44760f:	add    BYTE PTR [rax],al
  447611:	add    BYTE PTR [rdx+rax*1],cl
  447614:	add    BYTE PTR [rax],al
  447616:	add    BYTE PTR [rcx+0x53],dl
  447619:	jns    0x44768e
  44761b:	je     0x447682
  44761d:	ins    DWORD PTR es:[rdi],dx
  44761e:	cs rex.R jb 0x447683
  447622:	ja     0x44768d
  447624:	outs   dx,BYTE PTR ds:[rsi]
  447625:	addr32 sub al,0x20
  447628:	push   rsi
  447629:	gs jb  0x44769f
  44762c:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  447633:	xor    BYTE PTR cs:[rsi],ch
  447636:	xor    BYTE PTR [rax+riz*1],ch
  447639:	rex.XB jne 0x4476a8
  44763c:	je     0x4476b3
  44763e:	jb     0x4476a5
  447640:	cmp    eax,0x7475656e
  447645:	jb     0x4476a8
  447647:	ins    BYTE PTR es:[rdi],dx
  447648:	sub    al,0x20
  44764a:	push   rax
  44764b:	jne    0x4476af
  44764d:	ins    BYTE PTR es:[rdi],dx
  44764e:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  447655:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  447659:	(bad)  
  44765a:	xor    BYTE PTR [rbx],dh
  44765c:	xor    ax,0x3766
  447660:	xor    WORD PTR [rcx],si
  447663:	fs xor eax,0x61336130
  447669:	add    eax,0x1
  44766e:	adc    eax,0x74737953
  447673:	gs ins DWORD PTR es:[rdi],dx
  447675:	cs rex.R jb 0x4476da
  447679:	ja     0x4476e4
  44767b:	outs   dx,BYTE PTR ds:[rsi]
  44767c:	imul   esi,DWORD PTR cs:[ebp+r13d*2+0x61],0x170
  447687:	add    BYTE PTR [rsp+rax*2],al
  44768a:	(bad)  
  44768b:	je     0x4476ee
  44768d:	(bad)  
  44768e:	add    al,BYTE PTR [rdx]
  447690:	add    BYTE PTR [rax],al
  447692:	add    BYTE PTR [rcx],cl
  447694:	add    eax,DWORD PTR [rax]
  447696:	add    BYTE PTR [rax],al
  447698:	lsl    eax,WORD PTR [rax]
  44769b:	add    BYTE PTR [rax],al
  44769d:	add    eax,0x20000a0
  4476a2:	mov    DWORD PTR [rax+0x4e],edx
  4476a5:	rex.RXB or eax,0xa1a0a
  4476ab:	add    BYTE PTR [rax],al
  4476ad:	or     eax,0x52444849
  4476b2:	add    BYTE PTR [rax],al
  4476b4:	add    dh,ch
  4476b6:	add    BYTE PTR [rax],al
  4476b8:	add    DWORD PTR [rip+0x608],edi        # 0x447cc6
  4476be:	add    BYTE PTR [rbx+rsi*1],cl
  4476c1:	pop    rsi
  4476c2:	(bad)  
  4476c3:	add    BYTE PTR [rax],al
  4476c5:	add    BYTE PTR [rcx],al
  4476c7:	jae    0x44771b
  4476c9:	rex.RXB
  4476ca:	rex.X add BYTE PTR [rsi+0xe91cce],bpl
  4476d1:	add    BYTE PTR [rax],al
  4476d3:	add    al,0x67
  4476d5:	rex.B
  4476d6:	rex.WRB
  4476d7:	add    BYTE PTR [r8],al
  4476da:	mov    cl,0x8f
  4476dc:	or     edi,esp
  4476de:	(bad)  
  4476df:	add    eax,0x20000000
  4476e4:	movsxd ecx,DWORD PTR [rax+0x52]
  4476e7:	rex.WRB add BYTE PTR [r8],r8b
  4476ea:	jp     0x447712
  4476ec:	add    BYTE PTR [rax],al
  4476ee:	add    BYTE PTR [rax+rax*1+0xfa00],0x0
  4476f6:	sub    al,0x0
  4476f9:	add    BYTE PTR [rbp+0x30],dh
  4476fc:	add    BYTE PTR [rax],al
  4476fe:	(bad)  
  4476ff:	(bad)  
  447700:	add    BYTE PTR [rax],al
  447702:	cmp    bl,BYTE PTR [rax+0x70170000]
  447708:	pushf  
  447709:	mov    edx,0x3c51
  44770e:	add    BYTE PTR [rcx],cl
  447710:	jo     0x44775a
  447712:	pop    rcx
  447713:	jae    0x447715
  447715:	add    BYTE PTR [rsi],cl
  447717:	(bad)  
  447718:	add    BYTE PTR [rax],al
  44771a:	(bad)  
  44771b:	(bad)
  44771f:	(bad)  
  447720:	sbb    eax,DWORD PTR [rax]
  447722:	add    BYTE PTR [rdi+0x4144496e],bl
  447728:	push   rsp
  447729:	js     0x447789
  44772b:	in     eax,dx
  44772c:	fld    QWORD PTR [rdi]
  44772e:	je     0x447755
  447730:	pop    rcx
  447731:	jne    0x447768
  447733:	jle    0x4476b8
  447735:	leave  
  447736:	(bad)  
  447737:	(bad)  
  447738:	in     al,0x4c
  44773a:	(bad)  
  44773b:	jno    0x447705
  44773d:	cmp    eax,0x349a8ce4
  447742:	rex.XB push r14
  447744:	xchg   ebx,eax
  447745:	xor    ebx,DWORD PTR [rdx]
  447747:	jb     0x44777b
  447749:	push   0xffffffffc93519c8
  44774e:	fs (bad) 
  447750:	sbb    BYTE PTR [rax+rsi*1+0x6],cl
  447754:	or     eax,0xb04c06d8
  447759:	(bad)  
  44775a:	mov    al,0x9
  44775c:	es push 0xffffffff90f63930
  447762:	xor    DWORD PTR [rcx+0x3],ecx
  447765:	(bad)  
  447766:	fadd   st,st(4)
  447768:	(bad)  
  447769:	jg     0x447771
  44776b:	mov    WORD PTR [rbp-0x34],gs
  44776e:	neg    edi
  447770:	mov    edi,0x5ff8f759
  447775:	scas   al,BYTE PTR es:[rdi]
  447776:	out    dx,eax
  447777:	cmp    eax,0xd0cc0349
  44777c:	fnstsw WORD PTR [rdx-0x10a1294b]
  447782:	test   eax,0x7badd55e
  447787:	iret   
  447788:	cmp    DWORD PTR [rbx-0x61],edi
  44778b:	jae    0x4477fc
  44778d:	(bad)  
  44778e:	jnp    0x4477ca
  447790:	int    0xff
  447792:	std    
  447793:	mov    edi,0xbfacf7ff
  447798:	idiv   DWORD PTR [rbx-0x41]
  44779b:	not    ebx
  44779d:	movabs al,ds:0x58b0702dd02dd6f
  4477a6:	rex.X fmul st(3),st
  4477a9:	(bad)  
  4477aa:	mov    edi,0xd06dd1d7
  4477af:	movsxd esp,eax
  4477b1:	loopne 0x44773c
  4477b3:	add    DWORD PTR [rbp+rdi*4-0x3e2788bd],eax
  4477ba:	jrcxz  0x44776c
  4477bc:	out    dx,al
  4477bd:	stos   DWORD PTR es:[rdi],eax
  4477be:	out    dx,al
  4477bf:	sub    esi,DWORD PTR [rcx]
  4477c1:	cmp    BYTE PTR [rax-0x2f3e1331],0x83
  4477c8:	movabs eax,ds:0xf6fb880315c1c0c7
  4477d1:	out    dx,al
  4477d2:	mov    ah,0x83
  4477d4:	retf   
  4477d5:	imul   ebx,ebp,0x885fdd5f
  4477db:	sti    
  4477dc:	stc    
  4477dd:	loopne 0x4477d3
  4477df:	cmp    eax,0xf4307a18
  4477e4:	sbb    BYTE PTR [rax],bh
  4477e6:	js     0x44784a
  4477e8:	add    BYTE PTR [rcx-0x41],dh
  4477eb:	sbb    eax,0x3b4ee8ec
  4477f0:	js     0x44778e
  4477f2:	(bad)  
  4477f3:	jge    0x4477ca
  4477f5:	jge    0x44777c
  4477f7:	mov    eax,0xd66e0d5f
  4477fc:	and    DWORD PTR [rcx-0x7e70bcf9],0xffffff83
  447803:	(bad)  
  447804:	(bad)  
  447805:	adc    bh,dh
  447807:	cmp    eax,0xd3ba93c1
  44780c:	(bad)  
  44780d:	(bad)  
  44780e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  44780f:	jne    0x447870
  447811:	jne    0x447872
  447813:	and    esi,ebp
  447815:	(bad)  
  447816:	add    eax,0xd0c1ea6f
  44781b:	and    DWORD PTR [rcx+0x13c1c0c7],0x3
  447822:	mov    BYTE PTR [rbx-0x61],bh
  447825:	loopne 0x4477fa
  447827:	shr    DWORD PTR [rcx-0x45],0xe3
  44782b:	(bad)  
  44782c:	(bad)  
  44782d:	(bad)  
  44782e:	jne    0x44788f
  447830:	ins    DWORD PTR es:[rdi],dx
  447831:	ins    DWORD PTR es:[rdi],dx
  447832:	pop    rdi
  447833:	and    esi,ebp
  447835:	rex.WRB (bad) 
  447837:	out    dx,eax
  447838:	add    al,0x17
  44783a:	out    dx,al
  44783b:	shl    DWORD PTR [rax-0x45e7c4b],0xff
  447842:	loopne 0x447835
  447844:	(bad)  
  447845:	loop   0x4477e5
  447847:	xor    eax,0x702346f8
  44784c:	jg     0x447842
  44784e:	mov    cl,0x3f
  447850:	(bad)  
  447851:	fldenv [rbx-0x20]
  447854:	and    BYTE PTR [rax+0x5b3a4e01],cl
  44785a:	lock xchg ecx,eax
  44785c:	loopne 0x44780f
  44785e:	pop    rbp
  44785f:	jno    0x447870
  447861:	(bad)  
  447862:	(bad)
  447865:	fcmovu st,st(2)
  447867:	mov    esi,0x7b3dc42
  44786c:	iret   
  44786d:	in     eax,dx
  44786e:	or     edx,DWORD PTR [rbx+rbx*2+0x3b]
  447872:	adc    BYTE PTR [rdx-0x1a3e3f0],bh
  447878:	scas   eax,DWORD PTR es:[rdi]
  447879:	mov    dl,0xe8
  44787b:	rex.WRX jno 0x44785a
  44787e:	out    0x82,eax
  447880:	fucomip st,st(7)
  447882:	(bad)  
  447883:	cmp    al,0xb8
  447885:	sbb    al,0xd8
  447887:	std    
  447888:	mov    ch,0x35
  44788a:	std    
  44788b:	push   rbp
  44788c:	(bad)  
  44788d:	mov    ebp,0x13c0024c
  447892:	push   rsp
  447893:	fstp   TBYTE PTR [rbx+0x20]
  447896:	ins    BYTE PTR es:[rdi],dx
  447897:	int    0x40
  447899:	call   0xfffffffffcfcb81c
  44789e:	pop    rsi
  44789f:	(bad)  
  4478a0:	cmp    eax,0x95f71c53
  4478a5:	loopne 0x44783d
  4478a7:	fld    QWORD PTR [rcx-0x44fc68f9]
  4478ad:	mov    edi,0x86bfa6b6
  4478b2:	sub    ecx,DWORD PTR [rax+0x2c1048ef]
  4478b8:	test   BYTE PTR [rax-0x28],0x9a
  4478bc:	adc    eax,0xf9707efd
  4478c2:	jge    0x44790c
  4478c4:	fsub   QWORD PTR [rdi+0x2bfd79c5]
  4478ca:	jle    0x4478d3
  4478cc:	shr    DWORD PTR [rbp-0x7c4db180],0x8b
  4478d3:	cmps   DWORD PTR fs:[rsi],DWORD PTR es:[rdi]
  4478d5:	test   BYTE PTR [rdi+0x2655c486],bh
  4478db:	jg     0x447906
  4478dd:	cmp    bl,ah
  4478df:	sub    DWORD PTR [rcx-0x5f],esi
  4478e2:	fisub  WORD PTR [rsi+0xf]
  4478e5:	mov    dh,0x1e
  4478e7:	add    edi,DWORD PTR [rdi+0x121818bd]
  4478ed:	xlat   BYTE PTR ds:[rbx]
  4478ee:	ret    0x9d4
  4478f1:	add    DWORD PTR [rbp-0x41ec8156],0xc0c7a0db
  4478fb:	add    DWORD PTR [rbx+rax*1],ebx
  4478fe:	rex.XB out 0xb8,eax
  447901:	adc    eax,0xd7707c74
  447906:	rex.WRX fsubr QWORD PTR [rsi]
  447909:	pop    rsp
  44790a:	cmp    eax,0x18ec0e06
  44790f:	sbb    BYTE PTR [rbx+0x61c45fea],ch
  447915:	rex.WXB (bad) [r9+0x7]
  447919:	mov    dh,0xd3
  44791b:	mov    edx,0xc67fba7f
  447920:	(bad)  
  447921:	pop    rbp
  447922:	rex.W push rax
  447924:	lods   al,BYTE PTR ds:[rsi]
  447925:	test   al,0xe8
  447928:	adc    ecx,0x8ec0e063
  44792e:	xor    DWORD PTR [rcx],0x8713af71
  447934:	stc    
  447935:	ret    0xb6c1
  447938:	out    dx,al
  447939:	mov    eax,0xdd71db03
  44793e:	(bad)  
  44793f:	pop    rbx
  447940:	fstp   TBYTE PTR [rdi]
  447942:	movsxd esp,edx
  447944:	and    ch,BYTE PTR [rdx+riz*8]
  447947:	pop    rsi
  447948:	stos   DWORD PTR es:[rdi],eax
  447949:	(bad)  
  44794a:	(bad)  
  44794b:	(bad)  
  44794c:	(bad)  
  44794d:	mov    esi,gs
  44794f:	inc    DWORD PTR [rbx]
  447951:	(bad)  
  447953:	xchg   ebx,eax
  447954:	push   rsi
  447955:	(bad)  
  447956:	xchg   ebp,eax
  447957:	retf   0xeb0f
  44795a:	mov    ?,WORD PTR [rbx]
  44795c:	mov    al,0x1d
  44795e:	xlat   BYTE PTR ds:[rbx]
  44795f:	std    
  447960:	mov    bl,0xb5
  447962:	std    
  447963:	xor    ecx,DWORD PTR [rcx+0x50482fb8]
  447969:	cld    
  44796a:	jns    0x44797b
  44796c:	mov    WORD PTR [rbp-0x22e7e3],gs
  447972:	(bad)  
  447973:	mov    dh,0xff
  447975:	(bad)  
  447976:	adc    edi,esi
  447978:	div    BYTE PTR [rcx-0x26]
  44797b:	addr32 adc ebx,0x75
  44797f:	out    0x1d,eax
  447981:	fmul   st,st(6)
  447983:	jmp    0x447983
  447985:	fnstcw WORD PTR [rdx-0x23bb6602]
  44798b:	rex.WXB and al,0x20
  44798e:	cmp    al,0x88
  447990:	jno    0x447983
  447992:	(bad)  
  447993:	sbb    BYTE PTR [rbx+0x37],bl
  447996:	xor    BYTE PTR [rdx-0x2093f011],bh
  44799c:	and    ebp,esi
  44799e:	cwde   
  44799f:	movabs al,ds:0x3b033ffb7190c41e
  4479a8:	sbb    BYTE PTR [rdi+0x3ac4e99c],0xb0
  4479af:	mov    DWORD PTR [rbp+0x4a],esi
  4479b2:	sti    
  4479b3:	(bad)  
  4479b4:	jno    0x4479e5
  4479b6:	(bad)  
  4479b7:	pushf  
  4479b8:	imul   esi,DWORD PTR [rcx+riz*1+0xf],0x62
  4479bd:	cmp    al,0xff
  4479bf:	xchg   esp,eax
  4479c0:	mov    esi,0x6b7f6f78
  4479c5:	(bad)  
  4479c6:	pop    rdi
  4479c7:	idiv   edi
  4479c9:	scas   eax,DWORD PTR es:[rdi]
  4479ca:	out    dx,eax
  4479cb:	jg     0x447991
  4479cd:	xchg   ebp,eax
  4479ce:	(bad)  
  4479cf:	scas   eax,DWORD PTR es:[rdi]
  4479d0:	adc    BYTE PTR [rcx+rdi*2-0x197837a0],bl
  4479d7:	mov    ebp,0xbcfee5d5
  4479dc:	push   0xffffffffffffffb7
  4479de:	pop    QWORD PTR [r9-0x35f9cffd]
  4479e5:	sub    DWORD PTR [rax+0x7b],ecx
  4479e8:	pop    rax
  4479e9:	push   rax
  4479ea:	mov    edi,0xbcb57cad
  4479ef:	jmp    QWORD PTR [rsi+0x70]
  4479f2:	(bad)  
  4479f3:	rex.WRX fisubr WORD PTR [rsi]
  4479f6:	pop    rsi
  4479f7:	cmp    eax,0x18bc0e06
  4479fc:	sbb    BYTE PTR [rdx-0x5f1dc617],ch
  447a02:	in     eax,dx
  447a03:	int    0x49
  447a05:	jg     0x447997
  447a07:	xlat   BYTE PTR ds:[rbx]
  447a08:	jg     0x447a12
  447a0a:	mov    bx,0xed3
  447a0e:	cmp    al,0xa7
  447a10:	jne    0x4479b1
  447a12:	je     0x4479b3
  447a14:	mov    ebx,cs
  447a16:	movabs al,ds:0x9de302ddce2827f3
  447a1f:	jns    0x447a9e
  447a21:	jl     0x447a32
  447a23:	xchg   edx,eax
  447a24:	(bad)  
  447a25:	and    al,0x3d
  447a27:	(bad)  
  447a28:	(bad)  
  447a29:	mov    esp,0x7f349818
  447a2e:	icebp  
  447a2f:	(bad)  
  447a30:	or     eax,0x8ff5c3dc
  447a35:	ror    BYTE PTR [rsi-0xfc4b113],0x9c
  447a3c:	(bad)  
  447a3d:	jge    0x447a11
  447a3f:	jge    0x447a73
  447a41:	mov    DWORD PTR [rax-0x4cc354ea],edi
  447a47:	jl     0x447aad
  447a49:	lock in eax,0xd1
  447a4c:	movabs ds:0x3a2a170038a85f55,al
  447a55:	xchg   ecx,eax
  447a56:	mov    bh,0x1e
  447a58:	xchg   ecx,eax
  447a59:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  447a5a:	adc    DWORD PTR [rcx],edx
  447a5c:	jns    0x447a5b
  447a5e:	adc    al,dh
  447a60:	mov    bh,0x82
  447a62:	ret    
  447a63:	jnp    0x447ac5
  447a65:	ins    BYTE PTR es:[rdi],dx
  447a66:	mov    ebp,0x3f3ee8c0
  447a6b:	mov    al,0x7d
  447a6d:	mov    esi,0x433d065e
  447a72:	pushf  
  447a73:	test   ecx,0x89dd41e0
  447a79:	(bad)  
  447a7a:	mov    dh,0x13
  447a7c:	mov    ebx,0x7f9eb67f
  447a81:	sub    bh,BYTE PTR ss:[rbp-0x9]
  447a85:	sub    BYTE PTR es:[rsi-0x21],bl
  447a89:	add    esp,DWORD PTR [rbx-0x15]
  447a8c:	add    eax,0x81f9f746
  447a91:	in     eax,dx
  447a92:	repz cmc 
  447a94:	mov    bl,ch
  447a96:	not    al
  447a98:	mov    ebp,0xd543bf03
  447a9d:	mov    edi,0xb6e7d070
  447aa2:	sbb    ecx,DWORD PTR [rcx+0x54fcff7c]
  447aa8:	mov    WORD PTR [rcx+0x1e538b69],ss
  447aae:	(bad)  
  447aaf:	jo     0x447b0c
  447ab1:	call   0xffffffffd673fc32
  447ab6:	sti    
  447ab7:	mov    ebx,0xa0dba63b
  447abc:	mov    eax,0x63031201
  447ac2:	rex.RXB clc 
  447ac4:	pop    rdi
  447ac5:	mov    ecx,0x7baa9a9e
  447aca:	mov    ecx,0x8ffbc9a7
  447acf:	(bad)  
  447ad0:	rex.RXB jne 0x447ab5
  447ad3:	jbe    0x447ab6
  447ad5:	(bad)  
  447ad6:	xor    DWORD PTR [rax-0x20],esi
  447ad9:	(bad)  
  447ada:	rcl    BYTE PTR [rax-0x4741e148],0x5e
  447ae1:	loopne 0x447ac2
  447ae3:	outs   dx,BYTE PTR ds:[rsi]
  447ae4:	(bad)  
  447ae5:	idiv   edi
  447ae7:	jno    0x447ae7
  447ae9:	jle    0x447b60
  447aeb:	ja     0x447ac7
  447aed:	and    ebx,0xee8beeb4
  447af3:	mov    esp,DWORD PTR [rdx]
  447af5:	test   al,0x5b
  447af7:	(bad)  
  447af8:	mov    ebx,0xc5ff4982
  447afd:	rcl    BYTE PTR [rdi],0xeb
  447b00:	(bad)  
  447b01:	sbb    eax,0xbdcc73d4
  447b06:	pop    rsp
  447b07:	cmp    al,BYTE PTR [rax-0x36]
  447b0a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  447b0b:	rex.WRX loopne 0x447abb
  447b0e:	rex.WXB (bad) 
  447b10:	and    al,0xbc
  447b12:	jp     0x447b84
  447b14:	movabs ds:0xb8385f2a49e98875,eax
  447b1d:	sete   BYTE PTR fs:[rbp-0x822d7e5]
  447b25:	(bad)  
  447b26:	xchg   esi,eax
  447b27:	out    dx,eax
  447b28:	adc    edi,esi
  447b2a:	stos   BYTE PTR es:[rdi],al
  447b2b:	fwait
  447b2c:	jo     0x447af8
  447b2e:	(bad)  
  447b2f:	jb     0x447afd
  447b31:	cmp    eax,0xcf5c7136
  447b36:	(bad)  
  447b37:	cmp    eax,0x3818f71b
  447b3c:	adc    eax,0x46b36062
  447b41:	ss iret 
  447b43:	jge    0x447b9a
  447b45:	(bad)  
  447b46:	out    dx,al
  447b47:	and    DWORD PTR [rbp+0x5b1fddba],0xbb881fd7
  447b51:	cdq    
  447b52:	rex.RXB sbb r9b,r13b
  447b55:	jae    0x447b96
  447b57:	shl    edi,cl
  447b59:	mov    ecx,0xba50375b
  447b5e:	rex.W sbb al,0x58
  447b61:	mov    esi,0x6a7dc47
  447b66:	out    dx,al
  447b67:	xlat   BYTE PTR ds:[rbx]
  447b68:	scas   al,BYTE PTR es:[rdi]
  447b69:	xchg   edi,eax
  447b6a:	jge    0x447b9b
  447b6c:	shl    bh,cl
  447b6e:	mov    ecx,0x3ae39607
  447b73:	xchg   ecx,eax
  447b74:	mov    dh,0xb6
  447b76:	(bad)  
  447b77:	nop
  447b78:	cmc    
  447b79:	mov    ecx,eax
  447b7b:	rex.WRB (bad) 
  447b7d:	icebp  
  447b7e:	ins    DWORD PTR es:[rdi],dx
  447b7f:	movabs al,ds:0x53dcf3edcfdd9121
  447b88:	(bad)  
  447b89:	out    dx,al
  447b8a:	ror    BYTE PTR [rcx],cl
  447b8c:	mov    ecx,0x59b909b5
  447b91:	jmp    QWORD PTR [rbx]
  447b93:	out    0x5f,eax
  447b95:	(bad)  
  447b96:	xor    eax,DWORD PTR [rcx+0x5bed6c7f]
  447b9c:	shl    DWORD PTR [r10],cl
  447b9f:	scas   eax,DWORD PTR es:[rdi]
  447ba0:	out    0x96,eax
  447ba2:	xchg   edi,eax
  447ba3:	(bad)  
  447ba4:	(bad)  [rax+0x3f]
  447ba7:	scas   al,BYTE PTR es:[rdi]
  447ba8:	(bad)  
  447ba9:	(bad)  
  447baa:	pop    QWORD PTR [rcx-0x6ff9d1ad]
  447bb0:	(bad)  
  447bb1:	rex.WRXB (bad) 
  447bb3:	clc    
  447bb4:	test   eax,0x6e7bb71a
  447bb9:	mov    al,0x8e
  447bbb:	mov    cl,0x6f
  447bbd:	popf   
  447bbe:	iret   
  447bbf:	cli    
  447bc0:	jae    0x447b8d
  447bc2:	cmp    eax,0x41766eeb
  447bc7:	mov    bl,0x1f
  447bc9:	ja     0x447bd5
  447bcb:	(bad)  
  447bcc:	or     ah,bl
  447bce:	cli    
  447bcf:	or     eax,0xc234dbe5
  447bd4:	pop    rsi
  447bd5:	and    ebp,DWORD PTR [rdi-0x21bd6069]
  447bdb:	or     esp,DWORD PTR [rdi+rdi*4-0x19]
  447bdf:	xchg   esi,eax
  447be0:	sti    
  447be1:	jg     0x447b8f
  447be3:	(bad)  
  447be4:	add    eax,0xd4b3d21d
  447be9:	sub    DWORD PTR [rdi-0x24daf15b],edx
  447bef:	and    ch,dh
  447bf1:	lahf   
  447bf2:	add    al,0x2f
  447bf4:	imul   eax,DWORD PTR [rbx+0x61bd9732],0xffffffe0
  447bfb:	icebp  
  447bfc:	(bad)  
  447bfd:	rex.WB mov dil,r9b
  447c00:	shr    esp,0x7f
  447c03:	shl    BYTE PTR [rcx-0x69c17f9c],0x4e
  447c0a:	xchg   esp,eax
  447c0b:	xor    DWORD PTR [rcx],0x6
  447c0e:	nop
  447c0f:	rcr    esp,cl
  447c11:	jbe    0x447c0b
  447c13:	mov    edi,0xbf94ce82
  447c18:	outs   dx,DWORD PTR ds:[rsi]
  447c19:	sbb    al,0x9c
  447c1b:	gs ret 0xfe80
  447c1f:	sub    bl,bh
  447c21:	cli    
  447c22:	div    DWORD PTR [rbx+0x7b]
  447c25:	(bad)  
  447c26:	in     eax,dx
  447c27:	gs lock out dx,eax
  447c2a:	cmp    BYTE PTR [rsi],al
  447c2c:	cmp    BYTE PTR [rax+0x5b],ah
  447c2f:	fwait
  447c30:	out    0xe,eax
  447c32:	out    dx,eax
  447c33:	out    0xfa,eax
  447c35:	cmp    eax,0xe306ebe5
  447c3a:	out    0x93,eax
  447c3c:	lods   eax,DWORD PTR ds:[rsi]
  447c3d:	ds jg  0x447c71
  447c40:	cwde   
  447c41:	hlt    
  447c42:	rex.WR jae 0x447cbc
  447c45:	out    0xef,al
  447c47:	fcomp  DWORD PTR [rcx-0x17199cf9]
  447c4d:	jge    0x447c4d
  447c4f:	cmc    
  447c50:	sub    bl,BYTE PTR [rsi+0xc4adb22]
  447c56:	cmp    dh,bh
  447c58:	sub    esi,edx
  447c5a:	in     eax,dx
  447c5b:	fnstenv [rdi-0x5b]
  447c5e:	xchg   ecx,eax
  447c5f:	(bad)  
  447c60:	xchg   ecx,eax
  447c61:	cld    
  447c62:	imul   eax,ecx,0x55
  447c65:	mov    edx,0x833d7fc1
  447c6a:	ja     0x447c27
  447c6c:	jne    0x447c29
  447c6e:	std    
  447c6f:	ss (bad) 
  447c71:	movabs al,ds:0xd09def634c0fb88
  447c7a:	cli    
  447c7b:	mov    edi,0xed1d1742
  447c80:	jg     0x447cd9
  447c82:	(bad)  
  447c83:	jle    0x447c69
  447c85:	outs   dx,DWORD PTR ds:[rsi]
  447c86:	jrcxz  0x447c6a
  447c88:	mov    ebp,0x3dc41e8d
  447c8d:	(bad)  
  447c8e:	jle    0x447c4d
  447c90:	sbb    BYTE PTR [rax],ch
  447c92:	loop   0x447c8e
  447c94:	xlat   BYTE PTR ds:[rbx]
  447c95:	(bad)  
  447c96:	pop    rdi
  447c97:	ucomiss xmm7,DWORD PTR [rax]
  447c9a:	rcl    DWORD PTR [rax+0x74e56e57],0x1d
  447ca1:	sub    esi,DWORD PTR [rbx]
  447ca3:	mov    edi,0xd7fc1ba3
  447ca8:	xor    edi,DWORD PTR [rax-0x49]
  447cab:	pop    rbx
  447cac:	mov    bh,0xdb
  447cae:	outs   dx,DWORD PTR ds:[rsi]
  447caf:	and    eax,DWORD PTR [rsi]
  447cb1:	xchg   bl,dh
  447cb3:	ror    BYTE PTR [rdi],cl
  447cb5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  447cb6:	ror    DWORD PTR [rcx-0x21],0x0
  447cba:	xor    bl,BYTE PTR [rdi-0x540a1bb]
  447cc0:	call   0xffffffffdcd1343d
  447cc5:	sti    
  447cc6:	cmp    eax,0x3a36fdb
  447ccb:	mov    ebp,0x3dc81e8d
  447cd0:	(bad)  
  447cd1:	rex.WRX jle 0x447ce0
  447cd4:	or     al,0x89
  447cd6:	sti    
  447cd7:	hlt    
  447cd8:	sbb    BYTE PTR [rax-0x26],dh
  447cdb:	mov    dh,cl
  447cdd:	rex.WR
  447cde:	ds mov ebx,0x55b0336c
  447ce4:	or     edx,DWORD PTR [esi+ebp*2+0x1b]
  447ce9:	cmc    
  447cea:	add    eax,0x1e836ea9
  447cef:	add    edi,DWORD PTR [rdi+0x1a181883]
  447cf5:	pop    rbp
  447cf6:	es std 
  447cf8:	rex.WX loopne 0x447d72
  447cfb:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  447cfc:	es cmp ebx,eax
  447cff:	mov    ebp,0xf0365f5d
  447d04:	sbb    DWORD PTR [rdx-0x48ec5cc1],eax
  447d0a:	or     edx,DWORD PTR [rdi-0x71]
  447d0d:	sbb    edi,0x90c0c4d
  447d13:	stos   BYTE PTR es:[rdi],al
  447d14:	adc    al,0xf6
  447d16:	movabs ds:0xd29542d454d33e5b,rax
  447d20:	stc    
  447d21:	test   al,0xc0
  447d23:	ret    
  447d24:	sbb    BYTE PTR [rbp+0x6d],bl
  447d27:	mov    ebx,0xfc0c7a0d
  447d2c:	(bad)  
  447d2d:	(bad)  
  447d2e:	(bad)  
  447d2f:	ins    BYTE PTR es:[rdi],dx
  447d30:	hlt    
  447d31:	xchg   edi,eax
  447d32:	xchg   DWORD PTR [rbx+rdi*2+0x27a421d7],ecx
  447d39:	stos   DWORD PTR es:[rdi],eax
  447d3a:	fs pop rsi
  447d3c:	stos   DWORD PTR es:[rdi],eax
  447d3d:	int    0x6e
  447d3f:	or     ecx,DWORD PTR [rbp+0x5a]
  447d42:	int3   
  447d43:	(bad)  
  447d44:	mov    ?,esp
  447d46:	sbb    eax,0xe88bb238
  447d4b:	(bad)  
  447d4c:	rex.WX and cl,BYTE PTR [rax+0x36]
  447d50:	sub    al,0x8d
  447d52:	outs   dx,DWORD PTR ds:[rsi]
  447d53:	xchg   ecx,eax
  447d54:	mov    edi,0x7adc30fd
  447d59:	fist   WORD PTR [rdx]
  447d5b:	repnz jrcxz 0x447d46
  447d5e:	mov    esi,0xe089fbbf
  447d63:	(bad)  
  447d64:	cmp    eax,0xc056b660
  447d69:	je     0x447dea
  447d6b:	(bad)  
  447d6c:	sbb    dh,bh
  447d6e:	rex.RX pop rsp
  447d70:	iret   
  447d71:	(bad)  
  447d72:	xlat   BYTE PTR ds:[rbx]
  447d73:	adc    edx,DWORD PTR [rdx-0x42]
  447d76:	xchg   ebx,eax
  447d77:	jmp    0x447db8
  447d79:	hlt    
  447d7a:	pop    rcx
  447d7b:	rex.RB pop r14
  447d7d:	(bad)  
  447d7e:	jae    0x447dba
  447d80:	(bad)  
  447d81:	mov    ch,0xc1
  447d83:	lahf   
  447d84:	jbe    0x447dcd
  447d86:	(bad)  
  447d87:	sbb    BYTE PTR [rsi+0x5ad87eec],cl
  447d8d:	jle    0x447dcf
  447d8f:	(bad)  
  447d90:	and    eax,DWORD PTR [rdx-0x38fc23]
  447d96:	push   rbp
  447d97:	fidivr WORD PTR [rdi]
  447d99:	jns    0x447dae
  447d9b:	and    DWORD PTR [rax],0xe82e7f3b
  447da1:	call   FWORD PTR [rsi+0x7dc697a4]
  447da7:	jp     0x447e1d
  447da9:	sub    al,bh
  447dab:	rex sbb esp,edi
  447dae:	scas   al,BYTE PTR es:[rdi]
  447daf:	and    DWORD PTR [rax-0x20809aab],esp
  447db5:	cmp    eax,0x104dfbf8
  447dba:	xlat   BYTE PTR ds:[rbx]
  447dbb:	rex.XB sbb edi,r14d
  447dbe:	or     eax,0x713715e7
  447dc3:	ins    BYTE PTR es:[rdi],dx
  447dc4:	ja     0x447db2
  447dc6:	test   eax,0x93eed8ec
  447dcb:	rex.XB cmp eax,DWORD PTR [r11]
  447dce:	(bad)  
  447dcf:	movabs eax,ds:0xae74d8b037df28ac
  447dd8:	rol    dl,0xd3
  447ddb:	jp     0x447d9c
  447ddd:	movabs ds:0x3dbd829fee7ca97c,eax
  447de6:	call   0x52babd7a
  447deb:	jbe    0x447e4e
  447ded:	ds xchg ebp,eax
  447def:	movsxd esp,DWORD PTR [rax+0x68]
  447df2:	jo     0x447dd3
  447df4:	or     dl,dh
  447df6:	(bad)  
  447df8:	sub    al,0x4c
  447dfa:	jns    0x447da0
  447dfc:	icebp  
  447dfd:	(bad)  
  447dfe:	adc    edx,DWORD PTR [rbx+rbx*2+0x59]
  447e02:	in     al,dx
  447e03:	jg     0x447e10
  447e05:	pop    rbp
  447e06:	test   al,0x7d
  447e08:	div    al
  447e0a:	mov    esp,0xf7576dfe
  447e0f:	rex.XB pop r11
  447e11:	fnstsw WORD PTR [rbx-0xc3f081]
  447e17:	mov    ss,WORD PTR [rbp+0x77352652]
  447e1d:	cmc    
  447e1e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  447e1f:	xor    DWORD PTR [rcx],0x21
  447e22:	std    
  447e23:	mov    esp,0x45bc7b8d
  447e28:	pop    rdx
  447e29:	out    0x5e,eax
  447e2b:	and    eax,edi
  447e2d:	push   0xffffffffffffffcb
  447e2f:	mov    esi,0x654f755d
  447e34:	(bad)  
  447e35:	in     eax,dx
  447e36:	test   BYTE PTR [rdx],bh
  447e38:	lock or BYTE PTR [rbp+0x6a],dh
  447e3c:	stc    
  447e3d:	fs adc bl,cl
  447e40:	(bad)  
  447e41:	outs   dx,DWORD PTR ds:[rsi]
  447e42:	(bad)  
  447e43:	std    
  447e44:	jl     0x447ea4
  447e46:	std    
  447e47:	pop    rsp
  447e48:	lea    esp,[rbx-0x6c]
  447e4b:	iret   
  447e4c:	jle    0x447ea9
  447e4e:	jns    0x447e4c
  447e50:	retf   
  447e51:	sbb    BYTE PTR [rdx-0x9a4204d],dh
  447e57:	gs cld 
  447e59:	rex.WRX fsubr QWORD PTR [rsi-0x7d]
  447e5d:	(bad)  
  447e5e:	add    esp,DWORD PTR [rdi+0x334c0c52]
  447e64:	mov    ah,0x5f
  447e66:	sar    al,0x41
  447e69:	jo     0x447e46
  447e6b:	loopne 0x447e29
  447e6d:	sar    DWORD PTR [rip+0x1d27791b],0xff        # 0x1d6bf78f
  447e74:	sar    BYTE PTR [rsi+rsi*8-0x6e],cl
  447e78:	rex.WRX fsubr QWORD PTR [rsi]
  447e7b:	pop    rsp
  447e7c:	cmp    eax,0x18bd4e06
  447e81:	pop    rax
  447e82:	rex.WRXB and r13,r15
  447e85:	fist   DWORD PTR [rcx]
  447e87:	stos   DWORD PTR es:[rdi],eax
  447e88:	retf   
  447e89:	push   rsi
  447e8a:	pushf  
  447e8b:	sub    eax,0x563b4d44
  447e90:	mov    dh,0xdd
  447e92:	call   0xffffffffc4f30c38
  447e97:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  447e98:	xchg   edx,eax
  447e99:	adc    dh,BYTE PTR [rdi-0xe]
  447e9c:	pushf  
  447e9d:	jp     0x447e83
  447e9f:	stc    
  447ea0:	pop    rbp
  447ea1:	fidivr DWORD PTR [rdx+0x3d]
  447ea4:	fnstsw WORD PTR [r11*1-0x2e4fba05]
  447eac:	jg     0x447ee7
  447eae:	mov    al,0xa8
  447eb0:	gs sahf 
  447eb2:	jmp    0x447ee5
  447eb4:	enter  0xd04e,0x6e
  447eb8:	sbb    DWORD PTR [rsi],0x3
  447ebb:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  447ebc:	rex.X or al,0x4c
  447ebf:	xor    esi,DWORD PTR [rdx-0x6f028f81]
  447ec5:	shl    BYTE PTR [rbx-0x73],0x9b
  447ec9:	jns    0x447ee3
  447ecb:	ret    
  447ecc:	ins    DWORD PTR es:[rdi],dx
  447ecd:	movabs eax,ds:0x7031eae176e27447
  447ed6:	(bad)  
  447ed7:	(bad)  
  447ed8:	shl    BYTE PTR [rdx+riz*8],0x1e
  447edc:	sbb    ebx,esp
  447ede:	(bad)  
  447edf:	cmp    BYTE PTR cs:[rbp+0x7b],bh
  447ee3:	cmc    
  447ee4:	or     edx,DWORD PTR [rax-0x48ac9ae5]
  447eea:	mov    ds,esi
  447eec:	fstp   DWORD PTR [rbp-0x52c7158a]
  447ef2:	fstp   TBYTE PTR [rcx+0x5c4c79db]
  447ef8:	jmp    FWORD PTR [rbp-0x2beb620]
  447efe:	mov    ah,BYTE PTR [rbx+0x3e3b851f]
  447f04:	out    0x8b,al
  447f07:	lods   eax,DWORD PTR ds:[rsi]
  447f08:	adc    esi,DWORD PTR [rax]
  447f0a:	xchg   ebp,esp
  447f0c:	xor    edi,DWORD PTR [rdi+0x1e9e718a]
  447f12:	push   rsp
  447f13:	cmp    eax,0x9c0c7aa8
  447f18:	repnz xor DWORD PTR [rax],esi
  447f1b:	and    al,0xae
  447f1d:	outs   dx,DWORD PTR ds:[rsi]
  447f1e:	cli    
  447f1f:	cmp    al,0x33
  447f21:	test   al,0x9f
  447f23:	test   al,0xf1
  447f25:	cdq    
  447f26:	fstp   TBYTE PTR [rip+0x402c0f1f]        # 0x40708e4b
  447f2c:	jns    0x447f1e
  447f2e:	ret    0xa16d
  447f31:	rex.WB pop r9
  447f33:	mov    edx,0x559829fe
  447f38:	call   0x372e467b
  447f3d:	call   0xffffffffc74eef73
  447f42:	add    BYTE PTR [rbx],al
  447f44:	sti    
  447f45:	rex.RX shr BYTE PTR [rbp-0x6cfa187e],1
  447f4c:	jle    0x447f52
  447f4e:	(bad)  [rdi]
  447f50:	pop    rbp
  447f51:	mov    esp,0x5dce4022
  447f56:	sub    DWORD PTR [rsp+rdi*1+0x76],0xffffffce
  447f5b:	jae    0x447f50
  447f5d:	fstp   DWORD PTR [rdi-0x1e891d8b]
  447f63:	(bad)  
  447f64:	xor    DWORD PTR [rax-0x36],esi
  447f67:	mov    DWORD PTR [rax],0x1036f9f2
  447f6d:	jb     0x447fbd
  447f6f:	and    ch,BYTE PTR [rbp+0x1ecb95cf]
  447f75:	(bad)  
  447f76:	lock pop rbx
  447f78:	push   rbx
  447f79:	xor    ch,dh
  447f7b:	xor    eax,0xc4c7891b
  447f80:	popf   
  447f81:	int    0x7e
  447f83:	gs cmc 
  447f85:	xor    BYTE PTR [rbx+0x77],ah
  447f88:	in     eax,0x3d
  447f8a:	test   DWORD PTR [rbp-0x6b1b6c49],edx
  447f90:	(bad)  
  447f91:	leave  
  447f92:	sub    DWORD PTR [rax+0x63],0x3059fac4
  447f99:	in     eax,dx
  447f9a:	ja     0x447f42
  447f9c:	stos   BYTE PTR es:[rdi],al
  447f9d:	pop    rsp
  447f9e:	idiv   BYTE PTR [rdi-0xde1228f]
  447fa4:	test   ebp,0xf8ff4983
  447faa:	jmp    0x447f78
  447fac:	fcos   
  447fae:	test   DWORD PTR [rsi-0x14],eax
  447fb1:	rex.WRX fmul DWORD PTR [rsi-0x28]
  447fb5:	(bad)  
  447fb6:	add    esp,DWORD PTR [rdi-0x11cff3a0]
  447fbc:	ja     0x447f41
  447fbe:	(bad)  
  447fbf:	outs   dx,DWORD PTR ds:[rsi]
  447fc0:	movabs al,ds:0xf957d832c3bee62a
  447fc9:	es std 
  447fcb:	ins    BYTE PTR es:[rdi],dx
  447fcc:	int    0xeb
  447fce:	mov    dl,0xff
  447fd0:	imul   eax,DWORD PTR [rdi],0x3ef542a2
  447fd6:	ins    DWORD PTR es:[rdi],dx
  447fd7:	int    0xcc
  447fd9:	je     0x447f83
  447fdb:	cli    
  447fdc:	sbb    eax,0xfc145f71
  447fe1:	rex.WXB loopne 0x448063
  447fe4:	add    eax,0xabc9534d
  447fe9:	mov    dh,0x72
  447feb:	fst    DWORD PTR [rdi]
  447fed:	or     eax,0x3017e31c
  447ff2:	(bad)  
  447ff3:	lahf   
  447ff4:	nop
  447ff5:	test   eax,0x9b7d94ef
  447ffa:	stc    
  447ffb:	outs   dx,DWORD PTR cs:[rsi]
  447ffd:	push   rdi
  447ffe:	jrcxz  0x448053
  448000:	push   rax
  448001:	lea    ecx,[rdi]
  448003:	(bad)  
  448004:	(bad)  
  448005:	in     eax,dx
  448006:	jrcxz  0x448002
  448008:	(bad)  
  448009:	stc    
  44800a:	mov    DWORD PTR [rax-0x4d],eax
  44800d:	lea    edx,[rdx+rsi*1-0x4a044b1b]
  448014:	mov    ch,0xba
  448016:	in     al,dx
  448017:	rex.XB
  448018:	rex.XB
  448019:	cmp    r14b,BYTE PTR [r11+0x5e]
  44801d:	cdq    
  44801e:	ja     0x448018
  448020:	or     ebx,DWORD PTR [rax]
  448022:	outs   dx,BYTE PTR ds:[rsi]
  448023:	(bad)  
  448024:	stc    
  448025:	mov    DWORD PTR [rdi+0x5f],edx
  448028:	mov    dl,0xef
  44802a:	in     al,0xec
  44802c:	ss call 0xffffffffc54ef063
  448032:	add    bl,al
  448034:	jp     0x448006
  448036:	ret    0x317f
  448039:	mov    eax,0xc0e8f073
  44803e:	xchg   edi,eax
  44803f:	or     ah,BYTE PTR [rsi]
  448041:	sbb    DWORD PTR [rcx+rdi*4-0x4],ebx
  448045:	(bad)  
  448046:	shl    DWORD PTR [rdi-0x62],1
  448049:	(bad)  
  44804a:	mov    esi,0xdfdf68f4
  44804f:	in     al,0x6f
  448051:	rex.WRXB pop r13
  448053:	jne    0x447ffc
  448055:	jne    0x448072
  448057:	hlt    
  448058:	sbb    BYTE PTR [rax],bh
  44805a:	test   DWORD PTR [rdx-0x60],esp
  44805d:	or     al,0x2b
  44805f:	(bad)  
  448061:	xchg   esi,eax
  448062:	(bad)  
  448063:	fisttp WORD PTR [rbp+0x7e]
  448066:	ins    BYTE PTR es:[rdi],dx
  448067:	xor    BYTE PTR [rcx+0x65],ch
  44806a:	fsubr  st,st(2)
  44806c:	mov    dl,0xc5
  44806e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  44806f:	sub    dl,BYTE PTR [rdi-0x2a0a315]
  448075:	sbb    ecx,esi
  448077:	ja     0x448098
  448079:	(bad)  
  44807a:	mov    edi,0x9dd9023d
  44807f:	(bad)  
  448080:	ins    DWORD PTR es:[rdi],dx
  448081:	shl    BYTE PTR [rbx-0x20],1
  448084:	adc    al,0x8a
  448086:	xor    DWORD PTR [rdx],0xf22f7fac
  44808c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  44808d:	rex stc 
  44808f:	jnp    0x448014
  448091:	shr    BYTE PTR [rdi],0x61
  448094:	mov    WORD PTR [rbp-0x2614a192],cs
  44809a:	in     eax,0x5a
  44809c:	pop    rbp
  44809d:	(bad)  
  44809e:	jle    0x44808e
  4480a0:	test   eax,0x8e7699aa
  4480a5:	lahf   
  4480a6:	mov    esp,0xbb9f2e51
  4480ab:	xchg   ebx,eax
  4480ac:	mov    bh,0x8b
  4480ae:	push   rdi
  4480af:	pop    QWORD PTR [rcx-0x79f9d9ad]
  4480b5:	in     al,0xf3
  4480b7:	outs   dx,DWORD PTR ds:[rsi]
  4480b8:	ss out dx,eax
  4480ba:	(bad)  
  4480bb:	or     al,0xad
  4480bd:	ins    BYTE PTR es:[rdi],dx
  4480be:	imul   bl
  4480c0:	(bad)  
  4480c1:	movsxd esi,edx
  4480c3:	out    dx,al
  4480c4:	leave  
  4480c5:	mov    esi,0x36a429e5
  4480ca:	scas   eax,DWORD PTR es:[rdi]
  4480cb:	lods   eax,DWORD PTR ds:[rsi]
  4480cc:	rex.WR in eax,dx
  4480ce:	mov    edi,0xeaa8581c
  4480d3:	mov    bl,bl
  4480d5:	ins    DWORD PTR es:[rdi],dx
  4480d6:	shl    BYTE PTR [rbx-0x20],1
  4480d9:	adc    al,0x88
  4480db:	and    DWORD PTR [rcx+0x5c58fd51],0xec8d5cfd
  4480e5:	(bad)  
  4480e6:	out    0x6b,eax
  4480e8:	(bad)  
  4480e9:	mov    edi,0x6aa7e8e0
  4480ee:	fs data16 rex.WRXB pop r11
  4480f2:	lea    ebx,[rip+0xffffffffffd75b22]        # 0x1bdc1a
  4480f8:	sar    BYTE PTR [rbp+0x4a],cl
  4480fb:	fidivr WORD PTR [rbx-0x29622bcb]
  448101:	ins    DWORD PTR es:[rdi],dx
  448102:	shl    BYTE PTR [rbx-0x20],1
  448105:	adc    al,0x88
  448107:	and    DWORD PTR [rcx-0x295082af],0xdd7eb61c
  448111:	sar    DWORD PTR [rdi+0x7063f4d1],1
  448117:	ret    
  448118:	out    dx,eax
  448119:	jrcxz  0x448195
  44811b:	in     al,dx
  44811c:	shr    ebp,1
  44811e:	sahf   
  44811f:	fst    QWORD PTR [rbx+0x48]
  448122:	jmp    0xffffffffda232543
  448127:	ficomp DWORD PTR [rdx+0x775634f6]
  44812d:	out    0x29,al
  44812f:	loopne 0x4480fd
  448131:	cs xchg esp,eax
  448133:	pop    rbx
  448134:	(bad)  
  448135:	push   rcx
  448136:	mov    WORD PTR [rcx],cs
  448138:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  448139:	or     al,0x7e
  44813b:	(bad)  
  44813c:	and    BYTE PTR [rax],al
  44813e:	fdiv   QWORD PTR cs:[rdx]
  448141:	scas   eax,DWORD PTR es:[rdi]
  448142:	ins    BYTE PTR es:[rdi],dx
  448143:	pop    rdx
  448144:	(bad)  
  448145:	cli    
  448146:	retf   0xb4df
  448149:	jg     0x448112
  44814b:	jmp    0x3411ac68
  448150:	cmp    ecx,0x307b4df0
  448156:	ins    DWORD PTR es:[rdi],dx
  448157:	popf   
  448158:	(bad)  
  448159:	(bad)  
  44815a:	mov    esi,0x3d7cf53e
  44815f:	es scas al,BYTE PTR es:[rdi]
  448161:	(bad)  
  448162:	jns    0x4480ef
  448164:	jo     0x448129
  448166:	jnp    0x44811b
  448168:	mov    dl,0xe7
  44816a:	pop    rbp
  44816b:	(bad)  
  44816c:	rex.WRX jno 0x44816a
  44816f:	(bad)  
  448170:	mov    edi,0xe7ef5929
  448175:	ins    BYTE PTR es:[rdi],dx
  448176:	jl     0x4481a5
  448178:	lock rex.WRXB add r15b,BYTE PTR [r15]
  44817c:	jg     0x448151
  44817e:	mov    bl,0x6b
  448180:	mov    bh,0x41
  448182:	pop    QWORD PTR [rcx-0x73f38d21]
  448188:	or     eax,0xc6beb08a
  44818d:	(bad)  
  44818e:	(bad)  
  44818f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  448190:	(bad)  
  448191:	jle    0x4481cf
  448193:	(bad)  
  448194:	(bad)  
  448195:	js     0x4481a2
  448197:	pop    rcx
  448198:	ja     0x448175
  44819a:	adc    BYTE PTR [rsi+rdi*4+0x702fb7e2],0x9f
  4481a2:	mov    eax,0xa0dbae3b
  4481a7:	mov    eax,0x2606316f
  4481ad:	sbb    ebx,edx
  4481af:	(bad)  
  4481b0:	jmp    0xffffffffedd4a94c
  4481b5:	jbe    0x448190
  4481b7:	push   rdi
  4481b8:	call   QWORD PTR [rbp-0x10cf002]
  4481be:	scas   eax,DWORD PTR es:[rdi]
  4481bf:	(bad)  
  4481c0:	and    BYTE PTR [rbx+rdi*8-0x28331943],ah
  4481c7:	(bad)  
  4481c8:	(bad)  
  4481c9:	in     eax,dx
  4481ca:	ret    0x63d5
  4481cd:	loopne 0x448186
  4481cf:	sbb    eax,DWORD PTR [rbx]
  4481d1:	mov    BYTE PTR [rbx-0x49],bl
  4481d4:	or     BYTE PTR [rdx+0x22c9eec4],0xdc
  4481db:	clc    
  4481dc:	lods   al,BYTE PTR ds:[rsi]
  4481de:	repnz push rdi
  4481e0:	leave  
  4481e1:	in     al,dx
  4481e2:	stos   DWORD PTR es:[rdi],eax
  4481e3:	jge    0x448263
  4481e5:	pop    rdi
  4481e6:	pop    rcx
  4481e7:	mov    ecx,0x3cbbbf5c
  4481ec:	rex.WRB
  4481ed:	rex.WRB lods rax,QWORD PTR ds:[rsi]
  4481ef:	sub    al,0xff
  4481f1:	push   rcx
  4481f2:	ja     0x4481ce
  4481f4:	outs   dx,DWORD PTR ds:[rsi]
  4481f5:	xlat   BYTE PTR ds:[rbx]
  4481f6:	imul   ebx,ebp,0x89edd9e
  4481fc:	out    0xfb,eax
  4481fe:	mov    eax,0xc3051fd7
  448203:	mov    cl,0xf9
  448205:	fucomi st,st(5)
  448207:	movabs al,ds:0x5bff6d8ef6912131
  448210:	repz cli 
  448212:	movabs al,ds:0xe7a3567e2be44129
  44821b:	(bad)  
  44821c:	pop    QWORD PTR [rsi]
  44821e:	cmc    
  44821f:	outs   dx,DWORD PTR ds:[rsi]
  448220:	cmp    al,0x7b
  448222:	mov    ecx,0x972c5bf4
  448227:	cmp    al,BYTE PTR [rcx+0x11812eb7]
  44822d:	leave  
  44822e:	imul   DWORD PTR [rbx-0x21]
  448231:	adc    al,0xc
  448233:	jg     0x448288
  448235:	retf   0x2d7f
  448238:	js     0x448239
  44823a:	xchg   esp,eax
  44823b:	shl    al,0xa0
  44823e:	add    eax,0xe3487ba2
  448243:	fst    QWORD PTR [rbx]
  448245:	mov    ?,ecx
  448247:	fstp   st(6)
  448249:	retf   
  44824a:	(bad)  
  44824b:	xor    dh,BYTE PTR [rbp+rdx*8-0xc750098]
  448252:	lock (bad) 
  448254:	fs pop rbx
  448256:	(bad)  
  448257:	enter  0xefba,0x7f
  44825b:	sti    
  44825c:	mov    esi,0x2be80caf
  448261:	jge    0x448261
  448263:	push   rcx
  448264:	mov    ch,0xfb
  448266:	mov    al,0xf6
  448268:	mov    ecx,0x8b5feaff
  44826d:	and    r11,QWORD PTR [rdi+rax*1-0x712991cd]
  448275:	sbb    esi,edi
  448277:	push   rdi
  448278:	(bad)  
  448279:	sub    ecx,ebp
  44827b:	(bad)  
  44827c:	sub    esi,esi
  44827e:	lock pop rcx
  448280:	addr32 in eax,dx
  448282:	cs jbe 0x44826c
  448285:	std    
  448286:	neg    BYTE PTR [rbp+0x75ba6dd7]
  44828c:	ins    DWORD PTR es:[rdi],dx
  44828d:	cmp    ch,BYTE PTR [rbx*2+0x3bbf5065]
  448294:	push   rbp
  448295:	sti    
  448296:	mov    esp,0x38275a5f
  44829b:	jl     0x448286
  44829d:	rex sbb DWORD PTR [rdi+rdi*8+0x66],ebx
  4482a2:	sar    DWORD PTR [rdi+rdx*8+0x2fd731ef],cl
  4482a9:	rex.R push rsi
  4482ab:	cmp    esi,DWORD PTR [rbx-0x27]
  4482ae:	out    0x11,eax
  4482b0:	enter  0x265e,0x77
  4482b4:	sbb    esi,esp
  4482b6:	sbb    al,bh
  4482b8:	sub    eax,0x90d8c0c5
  4482bd:	mov    esi,0x3ddbe7d6
  4482c2:	imul   BYTE PTR [rbx]
  4482c4:	ja     0x448255
  4482c6:	(bad)  
  4482c7:	fs loope 0x448313
  4482ca:	rex.RX neg DWORD PTR [rbx+0x55]
  4482ce:	(bad)  
  4482cf:	or     esp,edi
  4482d1:	(bad)  
  4482d2:	(bad)  
  4482d3:	(bad)  
  4482d5:	sbb    eax,0x39c8737f
  4482da:	sahf   
  4482db:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  4482dc:	repnz fwait
  4482de:	push   rbp
  4482df:	sbb    edi,ebp
  4482e1:	ss jae 0x44835b
  4482e4:	(bad)  
  4482e5:	outs   dx,DWORD PTR ds:[rsi]
  4482e6:	leave  
  4482e7:	test   eax,0xfd0f245d
  4482ec:	and    al,0x81
  4482ee:	sub    al,0x16
  4482f0:	xchg   edx,eax
  4482f1:	mov    dh,BYTE PTR [rsi+rbx*1]
  4482f4:	imul   edi,DWORD PTR [rsi+rcx*2+0x50],0x5def7dff
  4482fc:	jns    0x4482ed
  4482fe:	jg     0x448307
  448300:	and    r10,QWORD PTR [r13-0x344c276e]
  448307:	dec    BYTE PTR [rbx+0xed338c1]
  44830d:	iret   
  44830e:	mov    cl,0xba
  448310:	cld    
  448311:	test   BYTE PTR [rsi],bl
  448313:	push   rax
  448314:	xchg   DWORD PTR [rsi+0x40],edi
  448317:	jne    0x448338
  448319:	lahf   
  44831a:	cmp    bh,BYTE PTR [rsi]
  44831c:	rex.RX scas al,BYTE PTR es:[rdi]
  44831e:	mov    ebx,0x432d8c8f
  448323:	jp     0x44830f
  448325:	leave  
  448326:	fdiv   QWORD PTR [rbp+0x77]
  448329:	mov    al,0xde
  44832b:	(bad)  
  44832c:	scas   al,BYTE PTR es:[rdi]
  44832d:	test   BYTE PTR [rbx-0x7b41e9],0xc2
  448334:	or     eax,0x9b37e61c
  448339:	(bad)  
  44833a:	rcr    BYTE PTR [rbp-0x4ac71586],1
  448340:	(bad)  
  448342:	shl    BYTE PTR [rdi-0x22011dcd],1
  448348:	add    al,0x47
  44834a:	out    dx,eax
  44834b:	enter  0x17be,0x7
  44834f:	sahf   
  448350:	push   rbp
  448351:	test   BYTE PTR [rbx],0x8f
  448354:	xchg   ebx,eax
  448355:	retf   0xeddc
  448358:	fnstcw WORD PTR [rdi-0x61]
  44835b:	rcl    BYTE PTR [rbx+0x56],0xdf
  44835f:	or     esi,eax
  448361:	fbld   TBYTE PTR [rdx+rbx*1]
  448364:	pop    sp
  448366:	pop    rdi
  448367:	(bad)  
  448368:	clc    
  448369:	(bad)  
  44836a:	loopne 0x44838b
  44836c:	not    DWORD PTR [edx-0x385f2448]
  448373:	shr    BYTE PTR [rdi+0x18],0x3
  448377:	or     al,0x88
  448379:	cwde   
  44837a:	xlat   BYTE PTR ds:[rbx]
  44837b:	sahf   
  44837c:	sub    bl,dil
  44837f:	jl     0x448322
  448381:	loopne 0x448388
  448383:	shl    DWORD PTR [rbx+0x2fd79f46],0x65
  44838a:	(bad)  
  44838b:	rex.XB sbb dil,BYTE PTR [r14-0x51eb5bcf]
  448392:	push   rbp
  448393:	jmp    0x43be11e1
  448398:	ds jg  0x4483ef
  44839b:	(bad)  
  44839c:	outs   dx,BYTE PTR ds:[rsi]
  44839d:	(bad)  
  44839e:	scas   al,BYTE PTR es:[rdi]
  44839f:	(bad)  
  4483a0:	add    edi,DWORD PTR [rdi-0x27dff387]
  4483a6:	rex.X
  4483a7:	lock out 0x53,eax
  4483aa:	mov    ecx,gs
  4483ac:	(bad)  
  4483ad:	sbb    al,0xf8
  4483af:	popf   
  4483b0:	sub    DWORD PTR [rbx],ecx
  4483b2:	push   rax
  4483b3:	cmc    
  4483b4:	adc    eax,0xb3533f3d
  4483b9:	sbb    ah,dl
  4483bb:	ja     0x44842c
  4483bd:	mov    ch,0xf1
  4483bf:	cwde   
  4483c0:	shr    BYTE PTR [rbp+0x1f],0x19
  4483c4:	jne    0x448398
  4483c6:	add    dl,BYTE PTR [rbp+0x7eb17c63]
  4483cc:	fidivr DWORD PTR [rbp-0x403f511f]
  4483d2:	movabs eax,ds:0x983864e6fc327702
  4483db:	ins    BYTE PTR es:[rdi],dx
  4483dc:	mov    BYTE PTR [rax],dh
  4483de:	out    dx,al
  4483df:	mov    ebp,0x3cab67ba
  4483e4:	sahf   
  4483e5:	and    BYTE PTR [rdi-0x50],r11b
  4483e9:	jmp    FWORD PTR [rdi+0x78d64fc0]
  4483ef:	mov    eax,0x3d41e9e2
  4483f4:	mov    bl,0x5c
  4483f6:	(bad)  
  4483f7:	cmp    esi,DWORD PTR [rdi+0x5f]
  4483fa:	movabs al,ds:0x6dc72157ed1ab6b4
  448403:	mov    ecx,0x5ee5d58e
  448408:	cs ja  0x44839d
  44840b:	jbe    0x4483ae
  44840d:	dec    BYTE PTR [rip+0xffffffffa80ca063]        # 0xffffffffa8512476
  448413:	sbb    al,0xf6
  448415:	sub    ecx,DWORD PTR [rsi-0x3815f32d]
  44841b:	shr    BYTE PTR [rip+0xffffffffc202f92e],1        # 0xffffffffc2477d4f
  448421:	jne    0x4483c9
  448423:	sbb    al,0xf7
  448425:	mov    dh,0xec
  448427:	neg    esp
  448429:	mov    bl,0x8c
  44842b:	jmp    0x4483ec
  44842d:	test   DWORD PTR [rbp+0x6a],0x5bb2eacb
  448434:	rex.WRX fnsave [rcx-0x23]
  448438:	(bad)  
  448439:	cmp    eax,0x18837e06
  44843e:	(bad)  
  44843f:	cmp    al,0x3f
  448441:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  448442:	(bad)  
  448443:	(bad)  
  448444:	pop    rcx
  448445:	(bad)  
  448446:	adc    eax,0x7aa39b4c
  44844b:	rex.RX fnstcw WORD PTR [rdi-0x59]
  44844f:	mov    bh,0x18
  448451:	xor    eax,0x1b6ee0cd
  448456:	(bad)  
  448457:	dec    eax
  448459:	mov    ebp,0xe3becb48
  44845e:	movsxd ebp,DWORD PTR [rbp+0x13afbf52]
  448464:	mov    bh,0xb
  448466:	push   rdi
  448467:	pop    QWORD PTR [rcx+0x10062cdf]
  44846d:	retf   
  44846e:	ret    0x8dd2
  448471:	(bad)  
  448472:	xchg   edi,eax
  448473:	(bad)  
  448474:	xchg   ebx,eax
  448475:	mov    esi,0xaedee058
  44847a:	scas   eax,DWORD PTR es:[rdi]
  44847b:	icebp  
  44847c:	jge    0x4484b8
  44847e:	(bad)
  448482:	xchg   edi,eax
  448483:	in     al,dx
  448484:	xchg   esp,eax
  448486:	je     0x4484a3
  448488:	imul   ebx,DWORD PTR [rdi+0x50],0x49dbb0a5
  44848f:	xor    esp,DWORD PTR [rbx]
  448491:	(bad)  
  448492:	cmp    esi,eax
  448494:	mov    bl,0xcb
  448496:	xchg   ebx,eax
  448497:	(bad)  
  448498:	not    DWORD PTR [rax+0x57]
  44849b:	loopne 0x44847c
  44849d:	rex cmp DWORD PTR [rbx],0x22337e11
  4484a4:	sbb    al,0x6c
  4484a6:	test   BYTE PTR [rbx+0x16],0xbf
  4484aa:	push   0xffffffffbcc81ab1
  4484af:	xor    ah,dh
  4484b1:	cwde   
  4484b2:	cwde   
  4484b3:	idiv   BYTE PTR [rdi]
  4484b5:	ds rex (bad) 
  4484b8:	jg     0x4484c5
  4484ba:	sub    al,0x44
  4484bc:	and    r11,r9
  4484bf:	retf   
  4484c0:	repnz pop rcx
  4484c2:	std    
  4484c3:	hlt    
  4484c4:	lea    edi,[rcx-0x52]
  4484c7:	jae    0x44848f
  4484c9:	mov    edi,0x4b116cd1
  4484ce:	leave  
  4484cf:	fisttp QWORD PTR [rcx+0x63d06dda]
  4484d5:	loopne 0x4484ae
  4484d7:	mov    WORD PTR [rcx-0x49063ce],es
  4484dd:	mov    eax,0x307c7b9f
  4484e2:	cld    
  4484e3:	pop    rcx
  4484e4:	push   rsi
  4484e5:	iret   
  4484e6:	(bad)  
  4484e7:	retf   
  4484e8:	(bad)  
  4484e9:	mov    ch,0x52
  4484eb:	in     al,dx
  4484ec:	sub    eax,DWORD PTR [rax+0x331d18ef]
  4484f2:	xor    al,0xbe
  4484f4:	(bad)  
  4484f5:	sub    edi,eax
  4484f7:	add    eax,0xa7bf228d
  4484fc:	mov    dl,0x7c
  4484fe:	sti    
  4484ff:	push   0xffffffff8b3eb5f8
  448504:	pop    rsp
  448505:	(bad)  
  448506:	jne    0x4484ea
  448508:	jbe    0x4484eb
  44850a:	(bad)  
  44850b:	xor    eax,esi
  44850d:	jmp    0x4484d6
  44850f:	rcl    BYTE PTR [rax-0x3d1e818c],0xea
  448516:	icebp  
  448517:	pop    rbx
  448518:	(bad)  
  448519:	rex.B
  44851a:	addr32 repz (bad) 
  44851d:	rex.RXB loope 0x4484a6
  448520:	stos   DWORD PTR es:[rdi],eax
  448521:	int    0x73
  448523:	stc    
  448524:	fstp   TBYTE PTR [rdi-0x47d5c6e8]
  44852a:	mov    BYTE PTR [rbx+rax*8],0x23
  44852e:	test   al,0x27
  448530:	test   eax,0x337d3f86
  448535:	xchg   ebx,eax
  448536:	mov    edi,0x27b85f87
  44853b:	add    bl,BYTE PTR [rdi+0x6bd4fc0d]
  448541:	push   rdi
  448542:	fsubr  QWORD PTR [rsi-0x7d]
  448545:	(bad)  
  448546:	add    edi,DWORD PTR [rdi-0x7273f3ba]
  44854c:	mov    dh,0xd0
  44854e:	enter  0xd32b,0x2a
  448552:	imul   eax,edi,0x479ec82b
  448558:	test   BYTE PTR [rbp-0x783204e0],0xb7
  44855f:	rex.WRXB and BYTE PTR [r15-0x1cd9e81],r11b
  448566:	(bad)  
  448567:	rex.XB mov r14d,0x71fc3f54
  44856d:	cmp    DWORD PTR [rip+0xffffffffdd4adbb5],esp        # 0xffffffffdd8f6128
  448573:	imul   ebx,ebp,0x7e063d06
  448579:	lea    ebx,[rax]
  44857b:	cwde   
  44857c:	fs mov ah,0x57
  44857f:	test   DWORD PTR [rax-0x1],edx
  448582:	sbb    bh,al
  448584:	mov    cl,0xb7
  448586:	rex.WB lahf 
  448588:	(bad)  
  448589:	xor    ebx,edi
  44858b:	std    
  44858c:	jp     0x448531
  44858e:	jnp    0x44854a
  448590:	jle    0x448609
  448592:	jns    0x448590
  448594:	rex.WRXB mov r9b,0x3d
  448597:	cwde   
  448598:	(bad)  
  448599:	add    edx,ecx
  44859b:	movsxd ecx,DWORD PTR [rsi-0x47c20c3d]
  4485a1:	push   rcx
  4485a2:	pop    rdi
  4485a3:	push   0xffffffffa1e618b0
  4485a8:	mov    ?,esi
  4485aa:	retf   
  4485ab:	sbb    BYTE PTR [rdi-0x1f452c7a],bh
  4485b1:	jne    0x448574
  4485b3:	(bad)  
  4485b4:	adc    edx,ebx
  4485b6:	(bad)  
  4485b7:	rcl    bl,cl
  4485b9:	add    bl,bl
  4485bb:	xchg   ecx,eax
  4485bc:	push   rbx
  4485bd:	add    al,ah
  4485bf:	push   rdi
  4485c0:	clc    
  4485c1:	test   BYTE PTR [rip+0x61d58133],0x65        # 0x621a06fb
  4485c8:	mov    bl,0x95
  4485ca:	out    0x61,eax
  4485cc:	pop    rbx
  4485cd:	push   rsi
  4485ce:	lahf   
  4485cf:	out    dx,eax
  4485d0:	(bad)  
  4485d1:	fisub  DWORD PTR [rdi-0x150a1b93]
  4485d7:	xchg   edi,eax
  4485d8:	(bad)  
  4485d9:	fnstsw WORD PTR [rsi-0x66]
  4485dc:	push   rsp
  4485dd:	outs   dx,BYTE PTR ds:[rsi]
  4485de:	ja     0x4485e5
  4485e0:	out    dx,al
  4485e1:	fs out dx,al
  4485e3:	xor    DWORD PTR [rax+0xd8c0c41],esi
  4485e9:	je     0x4485ea
  4485eb:	nop
  4485ec:	sbb    r11,rbp
  4485ef:	fild   DWORD PTR [rcx-0x21]
  4485f2:	(bad)  
  4485f4:	std    
  4485f5:	lahf   
  4485f6:	(bad)  [rbx-0xe]
  4485f9:	fld    DWORD PTR [rdx+0x23]
  4485fc:	out    0xae,al
  4485fe:	mov    esp,0x3c72347a
  448603:	pop    rdi
  448604:	jle    0x4485d5
  448606:	add    al,0xe2
  448608:	sti    
  448609:	sub    DWORD PTR [rbx+0x1e9e37fa],ebx
  44860f:	cli    
  448610:	sbb    BYTE PTR [rsi+0x71],bh
  448613:	mov    edi,0xb613ab3b
  448618:	mov    eax,0x68606326
  44861e:	sub    BYTE PTR [rsp+rdi*2],al
  448621:	jnp    0x448693
  448623:	cmc    
  448624:	sar    ch,0xd6
  448627:	(bad)  
  448628:	(bad)  
  448629:	sahf   
  44862a:	sub    eax,0xb1bdd5f6
  44862f:	rex.B lods eax,DWORD PTR ds:[rsi]
  448631:	(bad)  
  448632:	jg     0x4485dc
  448634:	gs rex.WRXB lahf 
  448637:	pop    rcx
  448638:	fdiv   st,st(2)
  44863a:	pop    rdi
  44863b:	jmp    0x448628
  44863d:	cmp    BYTE PTR [rip+0xffffffffe93a8cb1],ah        # 0xffffffffe97f12f4
  448643:	sbb    eax,DWORD PTR [rbx-0x26]
  448646:	rex.RX (bad) 
  448648:	(bad)  
  448649:	sti    
  44864a:	icebp  
  44864b:	cmc    
  44864c:	(bad)  
  44864d:	mov    ebx,0xd6749bcb
  448652:	add    al,0x3f
  448654:	hlt    
  448655:	rex fbld TBYTE PTR [rdx+0xb78e3b6]
  44865c:	rex.WRX
  44865d:	rex.WX fdiv DWORD PTR [rdi]
  448660:	(bad)  
  448661:	ret    
  448662:	jg     0x4486ac
  448664:	in     eax,dx
  448665:	cmp    esi,DWORD PTR [rsi+0x6f7cf87e]
  44866b:	cmp    esp,DWORD PTR [rsi+0x18]
  44866e:	and    al,0x4a
  448670:	movsxd ebx,DWORD PTR [rdi-0x4d62207]
  448676:	xchg   ecx,eax
  448677:	out    dx,eax
  448678:	sahf   
  448679:	and    DWORD PTR [rdi-0x6b],0xe6e7b8eb
  448680:	cmp    eax,0x6dae0a4c
  448685:	lods   eax,DWORD PTR ds:[rsi]
  448686:	rex.WRB (bad) 
  448688:	imul   esi,DWORD PTR [rbx],0x1ef5f1fe
  44868e:	mov    WORD PTR [rbx+0x34],ds
  448691:	sbb    BYTE PTR [rbx-0x118192d0],bh
  448697:	mov    fs,WORD PTR [rdi+rcx*2]
  44869a:	outs   dx,BYTE PTR ds:[rsi]
  44869b:	jo     0x44865c
  44869d:	jbe    0x448657
  44869f:	shl    ah,1
  4486a1:	jbe    0x448630
  4486a3:	(bad)  
  4486a4:	sar    ebx,1
  4486a6:	sub    DWORD PTR [rbx-0x30ce30b7],ebx
  4486ac:	call   FWORD PTR [ebx+0x6ab6c607]
  4486b3:	in     al,dx
  4486b4:	rex.WXB stc 
  4486b6:	cmc    
  4486b7:	sub    eax,0xbacbe722
  4486bc:	ret    
  4486bd:	pop    rdi
  4486be:	fsubr  DWORD PTR [rax]
  4486c0:	push   rdx
  4486c1:	and    bh,BYTE PTR [rsi-0x5f9d1147]
  4486c7:	xor    al,0xef
  4486c9:	fs in  eax,dx
  4486cb:	ss call 0x6276f702
  4486d1:	xor    BYTE PTR [rcx+0x79f8157e],0xd6
  4486d8:	rex.WB
  4486d9:	lods   eax,DWORD PTR gs:[rsi]
  4486db:	out    dx,eax
  4486dc:	sar    dl,1
  4486de:	cmc    
  4486df:	or     bl,BYTE PTR [rdi+0xc]
  4486e2:	sbb    bh,bh
  4486e4:	xchg   BYTE PTR [rdx+0xc9fb1fb],dh
  4486ea:	xchg   BYTE PTR [rdi+0x28],bl
  4486ed:	lock adc ebp,DWORD PTR [rdi-0x4e945caa]
  4486f4:	retf   0x5893
  4486f7:	retf   0x69e8
  4486fa:	rex.WRX icebp 
  4486fc:	popf   
  4486fd:	pop    rdi
  4486fe:	div    DWORD PTR [rdi+riz*4+0x7d]
  448702:	adc    eax,0x64f33bb0
  448707:	cmp    BYTE PTR [rbx+0x49d6e00b],dh
  44870d:	add    BYTE PTR [rax+0x5cc0ddf1],cl
  448713:	jae    0x448727
  448715:	rex.WB cld 
  448717:	push   0x63
  448719:	sub    eax,0x8c45f932
  44871e:	sub    cl,BYTE PTR [rbp+0x62f758eb]
  448724:	(bad)  
  448725:	or     ecx,DWORD PTR [rsi+riz*8-0x52]
  448729:	mov    bl,0xad
  44872b:	cmp    eax,0xef5a16df
  448730:	pop    rdi
  448731:	xchg   ebp,eax
  448732:	sub    BYTE PTR [rcx+0x7ae795cd],dh
  448738:	shr    BYTE PTR [rbp-0x63],1
  44873b:	movabs al,ds:0xcb808d7dcdfebeeb
  448744:	sar    edi,0x9
  448747:	sahf   
  448748:	cmp    eax,0x88f5a0c5
  44874d:	movabs ds:0x22db7df026bd0e6f,eax
  448756:	out    dx,al
  448757:	idiv   BYTE PTR [rdi+rdx*4-0x78a6328b]
  44875e:	(bad)  
  44875f:	(bad)  
  448760:	outs   dx,DWORD PTR ds:[rsi]
  448761:	cmc    
  448762:	or     al,0xb4
  448764:	mov    dl,0xd9
  448766:	xchg   edi,eax
  448767:	adc    edi,DWORD PTR [rsi+rsi*8]
  44876a:	cmp    BYTE PTR [rip+0x32e4ca7b],ch        # 0x332951eb
  448770:	jnp    0x448741
  448772:	scas   al,BYTE PTR es:[rdi]
  448773:	fld    QWORD PTR [rsi]
  448775:	cmp    eax,0x3193606
  44877a:	or     al,0xe5
  44877c:	not    DWORD PTR [rcx+0x7364ed3d]
  448782:	cmp    ebp,DWORD PTR [rax+0x6c]
  448785:	cmp    al,0xb7
  448787:	jp     0x448719
  448789:	xlat   BYTE PTR ds:[rbx]
  44878a:	jle    0x4487f1
  44878c:	mov    cl,0xa7
  44878e:	movabs ds:0xf1db1df38eafcd7c,al
  448797:	mov    bh,0x8a
  448799:	cmp    al,0x58
  44879b:	and    DWORD PTR [rbx],edi
  44879d:	and    ebp,DWORD PTR [rsi-0x1474c125]
  4487a3:	adc    bl,dh
  4487a5:	rex.WX stc 
  4487a7:	int3   
  4487a8:	add    ebx,DWORD PTR [rbx]
  4487aa:	xchg   ebx,eax
  4487ab:	push   rsi
  4487ac:	scas   eax,DWORD PTR es:[rdi]
  4487ad:	mov    ebx,0xc8e93723
  4487b2:	cs jl  0x448810
  4487b5:	rex.WXB clc 
  4487b7:	mov    ebx,DWORD PTR [rax]
  4487b9:	mov    al,bh
  4487bb:	xchg   ebp,eax
  4487bc:	ror    BYTE PTR [rdi+0x1466ddbe],0x4
  4487c3:	rex.W push 0xffffffffecd95905
  4487c9:	clc    
  4487ca:	fld    DWORD PTR [rsi-0x3a]
  4487cd:	mov    edx,0xd5bf638d
  4487d2:	loope  0x4487c5
  4487d4:	scas   eax,DWORD PTR es:[rdi]
  4487d5:	pop    rsi
  4487d6:	pop    rax
  4487d7:	call   0x33a09db6
  4487dc:	lock cld 
  4487de:	repnz clc 
  4487e0:	pop    rbx
  4487e1:	rex.X out 0xc1,al
  4487e4:	mov    esi,0x5b556802
  4487e9:	(bad)  
  4487ea:	sbb    eax,0x49d1b03f
  4487ef:	fisttp DWORD PTR [rcx-0x25]
  4487f2:	movsxd esp,DWORD PTR [rax+0x4a]
  4487f5:	or     al,0xc
  4487f7:	or     eax,0x6fd97563
  4487fc:	rex.WRXB jns 0x448815
  4487ff:	stc    
  448800:	push   0x23
  448802:	repnz cli 
  448804:	pop    rdi
  448805:	mov    eax,0xf1d5176e
  44880a:	push   rsi
  44880b:	pop    QWORD PTR [rdi-0x641903c1]
  448811:	rex.RB xchg r11d,eax
  448813:	sahf   
  448814:	mov    ah,0xf2
  448816:	fisttp WORD PTR [rip+0x1317d710]        # 0x135c5f2c
  44881c:	jl     0x448849
  44881e:	push   0x7eecaab8
  448823:	mov    cl,0xdb
  448825:	push   rax
  448826:	idiv   cl
  448828:	pop    rdi
  448829:	rex.RB jmp 0x448829
  44882c:	or     al,0x6c
  44882e:	ja     0x448890
  448830:	(bad)  
  448831:	jno    0x4487c2
  448833:	add    DWORD PTR [rcx+0xc],0x8be18d0c
  44883a:	add    BYTE PTR [rsi+0x7e],bh
  44883d:	(bad)  
  44883e:	sub    dh,BYTE PTR [rdx-0x1e55f21]
  448844:	sbb    BYTE PTR [rsp+rbp*4+0x6b2aab28],bl
  44884b:	jmp    0x448869
  44884d:	(bad)  
  44884e:	cmc    
  44884f:	add    esi,DWORD PTR [rax-0x2]
  448852:	imul   bl
  448854:	(bad)  
  448855:	push   rsi
  448856:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  448857:	(bad)  
  448858:	sbb    DWORD PTR [rdi],edx
  44885a:	cmp    DWORD PTR [rip+0xffffffffe0c5fd6c],ebp        # 0xffffffffe10a85cc
  448860:	jae    0x4488c1
  448862:	and    ebx,DWORD PTR [rsi+rdi*1]
  448865:	xchg   ebp,eax
  448866:	gs (bad) 
  448868:	ins    BYTE PTR es:[rdi],dx
  448869:	fdivr  QWORD PTR cs:[rdi-0x71]
  44886d:	stos   BYTE PTR es:[rdi],al
  44886e:	adc    esi,DWORD PTR [rbx+rdx*1+0x30311374]
  448875:	rcr    BYTE PTR ss:[rsi-0x60523870],cl
  44887c:	fld    QWORD PTR [rcx-0x6487890e]
  448882:	out    0x1,al
  448884:	stc    
  448885:	fnclex 
  448887:	push   rsp
  448888:	popf   
  448889:	movabs ds:0xcb2654e6577f7654,eax
  448892:	(bad)  
  448893:	ret    
  448894:	test   DWORD PTR [rbx-0x19b5249f],ebp
  44889a:	adc    eax,DWORD PTR [rdx]
  44889c:	and    al,0xbe
  44889e:	xor    r9b,bpl
  4488a1:	sub    edi,DWORD PTR [rbp+0x2f]
  4488a4:	int    0xfe
  4488a6:	inc    BYTE PTR [rip+0x6d384dfb]        # 0x6d7cd6a7
  4488ac:	mov    al,BYTE PTR [rax-0xa]
  4488af:	sbb    bh,0x42
  4488b2:	mov    dh,0x1b
  4488b4:	cmp    ebx,ebx
  4488b6:	add    dl,BYTE PTR [rcx]
  4488b8:	add    bl,BYTE PTR [rdx+0x54]
  4488bb:	mov    dl,0x60
  4488bd:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  4488be:	cmp    al,0xae
  4488c0:	jnp    0x448874
  4488c2:	rex.W in al,dx
  4488c4:	outs   dx,BYTE PTR ds:[esi]
  4488c6:	xchg   BYTE PTR [rcx-0x2f],bl
  4488c9:	fdiv   st(0),st
  4488cb:	stc    
  4488cc:	sbb    edi,0xf03a3e57
  4488d2:	lods   eax,DWORD PTR ds:[rsi]
  4488d3:	movabs eax,ds:0xfda686b733e40169
  4488dc:	jo     0x448958
  4488de:	cmp    eax,0x31bfd946
  4488e3:	mov    ah,0x85
  4488e5:	add    dh,BYTE PTR [rax-0x48502f75]
  4488eb:	test   al,0x86
  4488ed:	fs jrcxz 0x44888f
  4488f0:	stos   BYTE PTR es:[rdi],al
  4488f1:	icebp  
  4488f2:	xor    esi,DWORD PTR [rip+0x57d95df5]        # 0x581de6ed
  4488f8:	in     al,0xfd
  4488fa:	lock lods eax,DWORD PTR ds:[rsi]
  4488fd:	repnz pop rax
  4488ff:	fnstcw WORD PTR [rbx]
  448901:	and    al,0xa7
  448903:	xchg   ebp,eax
  448904:	out    0xc5,al
  448906:	ror    BYTE PTR [rdi],0xc4
  448909:	leave  
  44890a:	rcl    bl,cl
  44890c:	push   rsi
  44890d:	xchg   edi,esp
  44890f:	repz fnstenv [rdi]
  448912:	(bad)  
  448913:	jno    0x4488a9
  448915:	lods   al,BYTE PTR ds:[rsi]
  448916:	in     eax,dx
  448917:	sahf   
  448918:	cs add dh,bh
  44891b:	in     al,dx
  44891c:	shr    DWORD PTR [rbp-0x30],1
  44891f:	movsxd esp,DWORD PTR [rax-0x63]
  448922:	sbb    BYTE PTR [rax-0x64],ah
  448925:	icebp  
  448926:	(bad)  
  448927:	std    
  448928:	(bad)  
  44892a:	or     BYTE PTR [rax-0x6a1e3578],cl
  448930:	movabs al,ds:0x6d5ff386cfaa9a9e
  448939:	sub    BYTE PTR [rdi-0x6b],bh
  44893c:	rcr    dl,cl
  44893e:	sbb    ch,BYTE PTR [rsi]
  448940:	pop    rdx
  448941:	xchg   ebp,eax
  448942:	icebp  
  448943:	addr32 mov bl,0xdf
  448946:	adc    edx,DWORD PTR [rbp+0x16]
  448949:	test   eax,0xcd39423c
  44894e:	sub    esi,edi
  448950:	sbb    eax,DWORD PTR [rdx-0x588ad991]
  448956:	jne    0x448973
  448958:	hlt    
  448959:	sbb    al,bl
  44895b:	cmp    BYTE PTR [rax-0x386d082],0x6b
  448962:	adc    al,0x8f
  448964:	enter  0x17be,0x35
  448968:	add    ah,BYTE PTR [rcx]
  44896a:	stos   DWORD PTR es:[rdi],eax
  44896b:	movsxd ebp,DWORD PTR [rdx-0x2b]
  44896e:	sbb    BYTE PTR [rcx-0x46fd9702],bh
  448974:	out    0xda,al
  448976:	(bad)  
  448977:	ja     0x44895e
  448979:	(bad)  
  44897a:	(bad)  
  44897b:	push   rsi
  44897c:	sbb    esi,edi
  44897e:	pop    rdx
  44897f:	jns    0x448970
  448981:	push   rdi
  448982:	and    bh,ch
  448984:	jge    0x44894d
  448986:	shl    BYTE PTR [rdx],0x94
  448989:	test   DWORD PTR [rax-0x5f0e71b7],esi
  44898f:	xchg   bh,cl
  448991:	xlat   BYTE PTR ds:[rbx]
  448992:	sti    
  448993:	push   rdi
  448994:	frstor es:[rcx+0x3e5bd49d]
  44899b:	(bad)  
  44899c:	sbb    al,al
  44899e:	sbb    al,0xd5
  4489a0:	out    dx,eax
  4489a1:	rex.WR stc 
  4489a3:	xor    eax,0xf988328b
  4489a8:	in     al,dx
  4489a9:	push   0x50
  4489ab:	sub    edi,DWORD PTR [rdi-0x29032a2]
  4489b1:	repz scas eax,DWORD PTR es:[rdi]
  4489b3:	cdq    
  4489b4:	sar    BYTE PTR [rax+rbx*8],0xad
  4489b8:	sahf   
  4489b9:	mov    cl,0x1
  4489bb:	out    0xb3,eax
  4489bd:	out    dx,eax
  4489be:	jnp    0x448941
  4489c0:	(bad)
  4489c3:	pop    rcx
  4489c4:	lods   al,BYTE PTR ds:[rsi]
  4489c5:	jb     0x448962
  4489c7:	test   eax,0xe55da888
  4489cc:	hlt    
  4489cd:	lods   eax,DWORD PTR ds:[rsi]
  4489ce:	add    ebx,DWORD PTR [rdi-0x11]
  4489d1:	fwait
  4489d2:	in     al,0x80
  4489d4:	movsxd esi,DWORD PTR [rbx+0x3e532eff]
  4489da:	fcomi  st,st(2)
  4489dc:	(bad)  
  4489dd:	jmp    0x448a55
  4489df:	jmp    0x405d22b9
  4489e4:	add    al,0xf7
  4489e6:	rex.WRXB (bad) [r11+0x3d]
  4489ea:	cs nop
  4489ec:	adc    DWORD PTR [rbx-0x55a0ae4],ecx
  4489f2:	cli    
  4489f3:	fild   DWORD PTR [rbx+0x7ad7ee16]
  4489f9:	mov    al,0xc2
  4489fb:	cmp    al,0xf8
  4489fd:	sub    DWORD PTR [rbx],edx
  4489ff:	(bad)  
  448a00:	enter  0x92c2,0x7b
  448a04:	shl    DWORD PTR [rdx],0xb4
  448a07:	scas   eax,DWORD PTR es:[rdi]
  448a08:	clc    
  448a09:	cmp    eax,0x90ebdab
  448a0e:	addr32 and eax,0xdf5e7c1a
  448a14:	and    al,0x1a
  448a16:	jle    0x448a06
  448a18:	sahf   
  448a19:	icebp  
  448a1a:	rex.WX (bad) 
  448a1d:	(bad)  
  448a1e:	movabs al,ds:0x9878c200c7a6063d
  448a27:	loop   0x448a4e
  448a29:	sbb    DWORD PTR [rdi+0x62],0xf31d4df4
  448a30:	push   rbp
  448a31:	sti    
  448a32:	jge    0x448a0d
  448a34:	fst    QWORD PTR [rbx]
  448a36:	push   rbx
  448a37:	ret    
  448a38:	pop    rbx
  448a39:	(bad)  
  448a3a:	cmc    
  448a3b:	and    esi,DWORD PTR [rdx+0x16]
  448a3e:	movabs al,ds:0x764f9163e8f87d10
  448a47:	xchg   ebp,eax
  448a48:	xchg   ecx,eax
  448a49:	std    
  448a4a:	xchg   esp,eax
  448a4b:	jmp    0x4489f1
  448a4d:	adc    eax,0xfb30cf64
  448a52:	mov    ebp,0x4cb82529
  448a57:	ds jle 0x448a3c
  448a5a:	rex.WX
  448a5b:	es idiv ah
  448a5e:	repz mov gs,esi
  448a61:	mov    eax,0x31ede4e
  448a66:	xchg   ebx,eax
  448a67:	movsxd eax,DWORD PTR [rax]
  448a69:	(bad)  
  448a6b:	out    dx,al
  448a6c:	icebp  
  448a6d:	retf   
  448a6e:	(bad)  
  448a6f:	push   rdi
  448a70:	(bad)  
  448a71:	jl     0x448a26
  448a73:	addr32 pop rdi
  448a75:	movabs al,ds:0x6b77bc37ec99f624
  448a7e:	lahf   
  448a7f:	(bad)
  448a82:	jp     0x448a42
  448a84:	(bad)  
  448a85:	lock ret 
  448a87:	jno    0x448a1c
  448a89:	retf   0xf57
  448a8c:	pop    rbx
  448a8d:	sub    BYTE PTR [rcx-0x41496a59],cl
  448a93:	(bad)  
  448a94:	jmp    0x448a77
  448a96:	or     eax,0x449dd5df
  448a9b:	push   rax
  448a9c:	or     edx,DWORD PTR [rdi+rcx*4-0x15]
  448aa0:	rex.WRX jmp 0x448a67
  448aa3:	in     eax,dx
  448aa4:	xor    DWORD PTR [rax],esi
  448aa6:	popf   
  448aa7:	mov    eax,0x2649e5c8
  448aac:	jae    0x448af9
  448aae:	out    dx,eax
  448aaf:	int    0x3f
  448ab1:	std    
  448ab2:	test   al,0x79
  448ab4:	std    
  448ab5:	(bad)  
  448ab6:	mov    dl,0xef
  448ab8:	(bad)  
  448ab9:	jp     0x448a83
  448abb:	(bad)  
  448abc:	rex.W
  448abd:	rex.X mov edx,DWORD PTR [rbx+0x7e]
  448ac1:	fld    QWORD PTR [rdx]
  448ac3:	loope  0x448a8c
  448ac5:	jae    0x448b1c
  448ac7:	pop    rdi
  448ac8:	cmp    BYTE PTR [rax+0x4c],bh
  448acb:	loopne 0x448b18
  448acd:	hlt    
  448ace:	setle  BYTE PTR [rdx-0x8]
  448ad2:	pop    rbx
  448ad3:	fs mov edi,0x5a6d6615
  448ad9:	test   al,0xaa
  448adb:	fbld   TBYTE PTR [rcx-0x2fa79456]
  448ae1:	xchg   edx,eax
  448ae2:	rol    edi,1
  448ae4:	fnstcw WORD PTR [rax-0x3d048e31]
  448aea:	push   rsp
  448aeb:	pop    QWORD PTR [rcx+0x432dc736]
  448af1:	mov    esp,0x61914432
  448af6:	std    
  448af7:	lea    edi,[rdi+rbp*8+0xb]
  448afb:	jl     0x448b2e
  448afd:	shr    BYTE PTR [rdx-0xe],0xf0
  448b01:	cmp    DWORD PTR [rbp-0x61],esp
  448b04:	fstp   TBYTE PTR [rdi+0x70357c14]
  448b0a:	sbb    ebp,DWORD PTR [rax+0x505f0da]
  448b10:	cvtps2pd xmm4,QWORD PTR [rax]
  448b13:	fdivr  QWORD PTR [rbp+0x640e7f83]
  448b19:	repnz mov cl,0xb1
  448b1c:	fnstsw WORD PTR [rbx]
  448b1e:	rex.RX int3 
  448b20:	cli    
  448b21:	int3   
  448b22:	in     eax,dx
  448b23:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  448b24:	loope  0x448ad5
  448b26:	outs   dx,DWORD PTR ds:[rsi]
  448b27:	cwde   
  448b28:	sub    ebx,DWORD PTR [rbx+0x1b17d727]
  448b2e:	mov    edx,0x7b613ab3
  448b33:	or     al,0xc
  448b35:	(bad)  
  448b36:	xor    BYTE PTR [rcx],0xea
  448b39:	(bad)  
  448b3a:	lea    ebx,[rdi-0x51]
  448b3d:	xor    BYTE PTR [rdi-0x1a9fea53],ah
  448b43:	lock pop rdi
  448b45:	sar    BYTE PTR ss:[rcx+0xe],cl
  448b49:	fldcw  WORD PTR [rdi+0x21]
  448b4c:	jge    0xffffffffdf675e79
  448b52:	pop    rdx
  448b53:	movabs al,ds:0x3bff506d7e1736dc
  448b5c:	ja     0x448b84
  448b5e:	out    dx,eax
  448b5f:	cmp    eax,0x6b116150
  448b64:	push   rdx
  448b65:	cmp    DWORD PTR [rsp+rsi*2-0xa],edi
  448b69:	jnp    0x448b37
  448b6b:	push   rcx
  448b6c:	fwait
  448b6d:	mov    BYTE PTR [rsi-0x71e03c44],cl
  448b73:	repz mov ecx,0xc3ba4007
  448b79:	mov    edx,0x8c0c7a0d
  448b7e:	(bad)  
  448b7f:	add    BYTE PTR [rcx+0x7c],0xbf
  448b83:	mov    dh,0x1e
  448b85:	xor    esi,DWORD PTR [rbx+rbp*8+0x66]
  448b89:	cmp    BYTE PTR [rdi+0x35],ch
  448b8c:	xlat   BYTE PTR ds:[rbx]
  448b8d:	hlt    
  448b8e:	add    eax,0x9583c3fb
  448b93:	rex.RX shl BYTE PTR [rcx-0x1e5bc2ef],1
  448b9a:	stos   DWORD PTR es:[rdi],eax
  448b9b:	cmp    BYTE PTR [rsi-0x75],0xd9
  448b9f:	ins    DWORD PTR es:[rdi],dx
  448ba0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  448ba1:	icebp  
  448ba2:	iret   
  448ba3:	(bad)  
  448ba4:	push   0x77b77ecf
  448ba9:	(bad)  
  448baa:	or     ebx,DWORD PTR [rcx-0x36]
  448bad:	jrcxz  0x448b3e
  448baf:	add    eax,0x115a4f5
  448bb4:	mov    ecx,0x9e1ae0d0
  448bb9:	imul   edx,DWORD PTR [rsi-0x4e],0xfffffffb
  448bbd:	sub    eax,0x6eb8eeab
  448bc2:	sbb    DWORD PTR [rsi],0x3
  448bc5:	movabs ds:0xae51862e45b4ab8c,eax
  448bce:	mov    edx,0x521953e5
  448bd3:	imul   rsp,QWORD PTR [r9],0xffffffffffffffc9
  448bd7:	scas   eax,DWORD PTR es:[rdi]
  448bd8:	(bad)  
  448bd9:	jp     0x448baf
  448bdb:	rcl    ebx,1
  448bdd:	rex.WRXB movsxd r8,DWORD PTR [r11]
  448be0:	cli    
  448be1:	(bad)  [rax-0x67c3f701]
  448be7:	xor    DWORD PTR [rsi-0x32],edi
  448bea:	sbb    BYTE PTR [rcx],dl
  448bec:	xchg   ebp,eax
  448bed:	fdiv   QWORD PTR [rdx+0x19b19fb0]
  448bf3:	call   QWORD PTR [rbx+rbp*4]
  448bf6:	mov    WORD PTR [rbx],gs
  448bf8:	mov    bl,0x56
  448bfa:	fwait
  448bfb:	mov    dl,0xb8
  448bfd:	out    0x9e,eax
  448bff:	jmp    0x448c70
  448c01:	mov    bh,0x96
  448c03:	xchg   esp,eax
  448c04:	(bad)  
  448c06:	imul   ebx,ebp,0x46063d06
  448c0c:	(bad)  
  448c0d:	gs nop
  448c0f:	xlat   BYTE PTR ds:[rbx]
  448c10:	(bad)  
  448c11:	mov    dl,0xa3
  448c13:	imul   DWORD PTR [rsi-0x7]
  448c16:	cld    
  448c17:	jmp    0x6d0cb89c
  448c1c:	adc    DWORD PTR [rdx-0x1a],ecx
  448c1f:	xor    eax,0xcf931dd7
  448c24:	rex.X xchg ebx,eax
  448c26:	fild   QWORD PTR [rbp+0x12d6569a]
  448c2c:	(bad)  
  448c2d:	pop    rdi
  448c2e:	xchg   edx,eax
  448c2f:	ja     0x448c1c
  448c31:	addr32 rex.WR jl 0x448bce
  448c35:	fsubr  QWORD PTR [rdi+0x37]
  448c38:	movhps QWORD PTR [rcx-0x28d5199c],xmm4
  448c3f:	std    
  448c40:	mov    al,BYTE PTR [rsi-0x4b114e3b]
  448c46:	outs   dx,BYTE PTR ds:[rsi]
  448c47:	sbb    DWORD PTR [rsi],0x3
  448c4a:	and    esp,edx
  448c4c:	mov    edx,0xef8c8b8f
  448c51:	or     BYTE PTR [rdx+0x15],ch
  448c54:	fcomp  DWORD PTR [rsi+rsi*4-0x67cd1812]
  448c5b:	int3   
  448c5c:	stc    
  448c5d:	out    dx,al
  448c5e:	ror    BYTE PTR [rdi-0x34],0xc
  448c62:	lahf   
  448c63:	push   0xfffffffffffffff2
  448c65:	std    
  448c66:	fsub   QWORD PTR [rbx-0x7e]
  448c69:	stc    
  448c6a:	loopne 0x448c0b
  448c6c:	(bad)  
  448c6d:	loope  0x448cb1
  448c6f:	push   rbp
  448c70:	sbb    edx,ebx
  448c72:	xchg   edi,eax
  448c73:	adc    BYTE PTR [rax+0x6fd83cd3],dl
  448c79:	push   rcx
  448c7a:	pop    rbp
  448c7b:	addr32 rex.R
  448c7d:	rex.R fistp WORD PTR [rax]
  448c80:	mov    edx,0x329f68e5
  448c85:	fiadd  DWORD PTR [rdx]
  448c87:	sbb    BYTE PTR [rax+0x62],bh
  448c8a:	imul   ebx,edx,0x37
  448c8d:	mov    bh,BYTE PTR [rdx-0x485ec4cd]
  448c93:	fs or  al,0x18
  448c96:	mov    ah,0x8c
  448c98:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  448c99:	cmp    al,0x3d
  448c9b:	addr32 mov al,ds:0xf81dddac
  448ca1:	(bad)  
  448ca2:	sahf   
  448ca3:	(bad)  
  448ca4:	(bad)  
  448ca5:	movsx  edi,WORD PTR [rcx]
  448ca8:	in     al,0xff
  448caa:	add    al,0xc9
  448cac:	lods   al,BYTE PTR ds:[rsi]
  448cad:	pop    rdi
  448cae:	(bad)  
  448caf:	fs rex.W (bad) 
  448cb2:	(bad)  
  448cb3:	out    dx,al
  448cb4:	or     eax,0x6769622c
  448cb9:	xor    eax,edi
  448cbb:	mul    DWORD PTR [rax+0x48]
  448cbe:	clc    
  448cbf:	xor    ch,BYTE PTR [rdx+0x62b5c17b]
  448cc5:	in     eax,dx
  448cc6:	xlat   BYTE PTR ds:[rbx]
  448cc7:	xchg   BYTE PTR cs:[rdi+0xd],bl
  448ccb:	je     0x448c8a
  448ccd:	icebp  
  448cce:	xchg   edi,eax
  448ccf:	lock pop rbp
  448cd1:	mov    bh,0xe6
  448cd3:	mov    esi,0xfc3ba3be
  448cd8:	xchg   dl,dl
  448cda:	xchg   esi,eax
  448cdb:	je     0x448cb1
  448cdd:	rex.W fdivr DWORD PTR [rdx+0x60b8b60d]
  448ce4:	push   rbp
  448ce5:	imul   ebp,esp,0x2def29c9
  448ceb:	ss sbb eax,0xb0235c17
  448cf1:	loopne 0x448d67
  448cf3:	fist   WORD PTR [rcx-0x40]
  448cf6:	js     0x448d2c
  448cf8:	repnz (bad) 
  448cfa:	add    ecx,edi
  448cfc:	xor    eax,0xfc2807b
  448d01:	(bad)
  448d04:	cmp    BYTE PTR [rdx+0x76],bh
  448d07:	fst    DWORD PTR [rbx]
  448d09:	rex.WRXB push r14
  448d0b:	xchg   esi,eax
  448d0c:	(bad)  
  448d0d:	pop    rdi
  448d0e:	test   al,0x77
  448d10:	(bad)  
  448d11:	fcom   DWORD PTR [rdi+0x3d81cc0f]
  448d17:	xchg   ecx,eax
  448d18:	xor    eax,0x5592ac5c
  448d1d:	push   rdi
  448d1e:	xor    ecx,0xffffff97
  448d21:	jmp    0x448d50
  448d23:	push   rsi
  448d24:	sub    ebx,edx
  448d26:	int    0xb7
  448d28:	cmp    eax,0x5dbc3589
  448d2d:	(bad)  
  448d2e:	add    esi,DWORD PTR [rdi-0x75]
  448d31:	(bad)  
  448d32:	out    dx,al
  448d33:	push   rsi
  448d34:	(bad)  
  448d35:	mov    dl,0x22
  448d37:	xor    BYTE PTR [rdx-0x9],0x88
  448d3b:	data16 or al,0x4f
  448d3e:	rex.WRB movabs r9,0x8b170e13297e6a87
  448d48:	sbb    al,0x2f
  448d4a:	rex.XB (bad) 
  448d4c:	sub    al,dh
  448d4e:	add    ebp,DWORD PTR [rdi-0x1a]
  448d51:	ret    
  448d52:	rex.XB adc bpl,r13b
  448d55:	leave  
  448d56:	fistp  QWORD PTR [rsi+0x609cf455]
  448d5c:	cld    
  448d5d:	and    eax,0x2ae3f304
  448d62:	mov    DWORD PTR [rbp+0x53],esp
  448d65:	(bad)  
  448d66:	rex.RXB pop r10
  448d68:	out    0x3f,eax
  448d6a:	xor    bl,BYTE PTR [rax-0x66]
  448d6d:	loopne 0x448d7b
  448d6f:	fs rex.RB jbe 0x448d5a
  448d73:	cmp    bh,BYTE PTR [rsi-0x5f2449ed]
  448d79:	mov    DWORD PTR [rax+0x62],0xd3101180
  448d80:	cmp    eax,0xfadc7354
  448d85:	test   eax,0x4f50f31a
  448d8a:	ss pop rcx
  448d8c:	ins    DWORD PTR es:[rdi],dx
  448d8d:	sahf   
  448d8e:	hlt    
  448d8f:	add    dh,BYTE PTR gs:[rbx-0x2a]
  448d93:	jg     0x448d9d
  448d95:	(bad)  
  448d96:	call   FWORD PTR [rsi-0x3c]
  448d99:	pop    rsp
  448d9a:	clc    
  448d9b:	fsub   DWORD PTR [rax+0x57]
  448d9e:	and    ebp,DWORD PTR [rdi+0x36865aec]
  448da4:	mov    edi,0xce1d9f35
  448da9:	jge    0x448d96
  448dab:	(bad)  
  448dac:	in     al,0x10
  448dae:	fnstcw WORD PTR [rip+0x3ecf49df]        # 0x3f13d793
  448db4:	and    ebp,DWORD PTR [rsi]
  448db6:	ror    BYTE PTR [rsi],cl
  448db8:	iret   
  448db9:	in     eax,dx
  448dba:	(bad)  
  448dbb:	jmp    0x448dc1
  448dbd:	(bad)  
  448dbf:	xor    DWORD PTR [rax-0x10],esp
  448dc2:	mov    BYTE PTR [rsi+0x4e],ah
  448dc5:	imul   esp,DWORD PTR [rcx-0x57],0xcbf6abe6
  448dcc:	rcr    BYTE PTR [rsi],0xc8
  448dcf:	sub    bl,sil
  448dd2:	(bad)  [rdx]
  448dd4:	xchg   esp,eax
  448dd5:	xchg   ebp,eax
  448dd6:	loope  0x448e2f
  448dd8:	add    eax,0x3b1e083f
  448ddd:	and    DWORD PTR [rbx],ecx
  448ddf:	retf   0xbeba
  448de2:	pop    rcx
  448de3:	fs scas al,BYTE PTR es:[rdi]
  448de5:	jmp    0x448e42
  448de7:	rex.R
  448de8:	rex.XB add ebp,DWORD PTR [r15+0x578f6fe4]
  448def:	(bad)  
  448df0:	ds (bad) 
  448df2:	ss pop rsi
  448df4:	lods   eax,DWORD PTR ds:[rsi]
  448df5:	std    
  448df6:	mov    ebp,0x4f47af37
  448dfb:	push   0xffffffffed88b1cf
  448e00:	mov    ecx,DWORD PTR [rcx]
  448e02:	ret    
  448e03:	jle    0x448e71
  448e05:	imul   eax,edi,0xb753b14d
  448e0b:	leave  
  448e0c:	(bad)  
  448e0d:	adc    DWORD PTR [rsi+rcx*4],esi
  448e10:	test   BYTE PTR [rbx+0x6014be14],0x65
  448e17:	fldpi  
  448e19:	push   rbp
  448e1a:	(bad)  
  448e1b:	rex.B loope 0x448dd7
  448e1e:	in     eax,0xff
  448e20:	adc    edi,DWORD PTR [rax+0xf58eb97]
  448e26:	rex.RB mov r12d,0x5f02c
  448e2c:	lahf   
  448e2d:	fld    st(6)
  448e2f:	fistp  WORD PTR [rbp+0x52b1ecf5]
  448e35:	pop    rbx
  448e36:	mov    dh,0xbd
  448e38:	rex.WRXB jo 0x448e0a
  448e3b:	push   rcx
  448e3c:	jnp    0x448dec
  448e3e:	xor    DWORD PTR [rax+rsi*4],ecx
  448e41:	fwait
  448e42:	out    0x6f,al
  448e44:	pop    rdi
  448e45:	icebp  
  448e46:	mov    ebx,0x8f932064
  448e4b:	outs   dx,DWORD PTR ds:[rsi]
  448e4c:	(bad)  
  448e4d:	(bad)  
  448e4e:	mov    cl,0x7e
  448e50:	pop    rbp
  448e51:	ret    
  448e52:	xor    edx,edx
  448e54:	cmp    eax,0xb60dbb38
  448e59:	jl     0x448e67
  448e5b:	xchg   esp,eax
  448e5c:	add    DWORD PTR [rbx+riz*8-0x19],edi
  448e60:	in     eax,0x81
  448e62:	in     al,dx
  448e63:	shr    DWORD PTR [ecx+0x78],0x5f
  448e68:	cmc    
  448e69:	test   al,0x46
  448e6b:	push   rax
  448e6c:	imul   DWORD PTR [rbx-0x3]
  448e6f:	or     al,0xab
  448e71:	xchg   DWORD PTR [rdx],esp
  448e73:	push   0xffffffffffffffe5
  448e75:	fcom   DWORD PTR [rdi]
  448e77:	lock jg 0x448e98
  448e7a:	int3   
  448e7b:	mov    cs,WORD PTR [rax]
  448e7d:	gs and eax,0xf2c09eb8
  448e83:	(bad)  
  448e84:	rex.RX jge 0x448e35
  448e87:	in     al,dx
  448e88:	push   rbp
  448e89:	xchg   edx,eax
  448e8a:	pextrw eax,mm1,0x3c
  448e8e:	xlat   BYTE PTR ds:[rbx]
  448e8f:	fcom   QWORD PTR [rdi-0x2a]
  448e92:	mov    bh,0xb0
  448e94:	mov    ch,0x7b
  448e96:	or     bh,BYTE PTR [rcx]
  448e98:	fld    QWORD PTR [rdi]
  448e9a:	xchg   esi,eax
  448e9b:	std    
  448e9c:	(bad)  
  448e9d:	jge    0x448e26
  448e9f:	ja     0x448e6c
  448ea1:	cmp    esi,DWORD PTR [rdx+0x12d6da0b]
  448ea7:	je     0x448eaa
  448ea9:	pop    rdi
  448eaa:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  448eab:	jmp    0x448f0f
  448ead:	fidivr WORD PTR [rbx-0x1c8f7d13]
  448eb3:	sti    
  448eb4:	mov    cl,0x32
  448eb6:	lods   al,BYTE PTR ds:[rsi]
  448eb7:	(bad)  
  448eb8:	or     al,0xc8
  448eba:	mov    dh,0xe6
  448ebc:	mov    esp,0x7f757735
  448ec1:	(bad)  
  448ec2:	movsxd ecx,DWORD PTR [rcx+0x57d6f1ee]
  448ec8:	add    DWORD PTR [rbp+0x3292d6e9],esi
  448ece:	fistp  DWORD PTR [rbp+rdx*1-0x2bee612f]
  448ed5:	sub    eax,0x1e03f1a0
  448eda:	jne    0x448e98
  448edc:	jle    0x448f06
  448ede:	iret   
  448edf:	mov    ecx,eax
  448ee1:	xor    al,0x22
  448ee3:	and    bh,ch
  448ee5:	lock retf 
  448ee7:	(bad)  
  448ee8:	popf   
  448ee9:	mov    al,0x3d
  448eeb:	sti    
  448eec:	outs   dx,BYTE PTR ds:[rsi]
  448eed:	leave  
  448eee:	sbb    BYTE PTR [rax],dh
  448ef0:	call   0xffffffffb5b32f8a
  448ef5:	mov    eax,0x425be405
  448efa:	push   rsi
  448efb:	mov    WORD PTR [rdi-0x74],?
  448efe:	or     BYTE PTR [rsp+rdi*8-0x548fdec3],ah
  448f05:	push   0x544f2c68
  448f0a:	and    DWORD PTR [rdx+rsi*2-0x17f54146],edi
  448f11:	jae    0x448f06
  448f13:	(bad)  
  448f14:	cli    
  448f15:	sub    eax,0xc8568b2b
  448f1a:	jmp    0x448ed5
  448f1c:	movsxd ebx,ecx
  448f1e:	fdivr  QWORD PTR [rbp+0x1dd121e3]
  448f24:	outs   dx,DWORD PTR ds:[rsi]
  448f25:	or     esp,0xe3fdd79c
  448f2b:	icebp  
  448f2c:	xlat   BYTE PTR ds:[rbx]
  448f2d:	or     ch,bl
  448f2f:	sbb    dh,dl
  448f31:	push   rax
  448f32:	(bad)  
  448f33:	fadd   QWORD PTR [rsi]
  448f35:	(bad)  
  448f36:	ficom  WORD PTR [rdx-0x17b8a3b2]
  448f3c:	mov    edx,0x61510e3d
  448f41:	jrcxz  0x448f9b
  448f43:	mov    ecx,DWORD PTR [rbp-0x38]
  448f46:	out    0xbd,eax
  448f48:	push   rdx
  448f49:	jbe    0x448f9a
  448f4b:	loopne 0x448f0b
  448f4d:	test   eax,0xaf1cb9d2
  448f52:	rex.WR fstp QWORD PTR [rbx]
  448f55:	cwde   
  448f56:	out    dx,eax
  448f57:	cli    
  448f58:	and    DWORD PTR [rcx-0x47dfbf9f],edi
  448f5e:	outs   dx,DWORD PTR ds:[rsi]
  448f5f:	adc    DWORD PTR [rcx],ebp
  448f61:	jno    0x448f74
  448f63:	mov    esi,0xb63d9a56
  448f68:	call   0x17df03cc
  448f6d:	cmp    edi,DWORD PTR [rsi+0x67]
  448f70:	push   rax
  448f71:	pop    rdi
  448f72:	mov    ds,WORD PTR [rdi+0x428f7bcf]
  448f78:	mov    es,WORD PTR [rbx]
  448f7a:	retf   
  448f7b:	(bad)  
  448f7c:	xchg   esp,eax
  448f7d:	mov    BYTE PTR [rax-0x23],al
  448f80:	push   rdi
  448f81:	idiv   BYTE PTR [rcx+0x2d09eeec]
  448f87:	and    eax,0x9013d235
  448f8c:	icebp  
  448f8d:	jge    0x448f71
  448f8f:	(bad)  
  448f90:	movabs al,ds:0xebee91884e806887
  448f99:	jbe    0x448fd6
  448f9b:	or     BYTE PTR [rcx],ch
  448f9d:	jge    0x448fc8
  448f9f:	mov    esi,0x3478cd6e
  448fa4:	shr    DWORD PTR [rbp-0x60],1
  448fa7:	dec    DWORD PTR [rsi]
  448fa9:	out    0x9a,al
  448fab:	loope  0x448fe9
  448fad:	imul   ebp,esp,0xffffff9b
  448fb0:	rex.X xor sil,dl
  448fb3:	(bad)  
  448fb4:	(bad)  
  448fb5:	cld    
  448fb6:	int3   
  448fb7:	mov    cl,0x79
  448fb9:	lods   al,BYTE PTR ds:[rsi]
  448fba:	test   DWORD PTR [rax],ebp
  448fbc:	gs mov al,0x72
  448fbf:	mov    edx,0x79756b8c
  448fc4:	clc    
  448fc5:	(bad)  
  448fc6:	xchg   ebx,eax
  448fc7:	push   rdx
  448fc8:	sbb    BYTE PTR [rcx+0x7d],ch
  448fcb:	(bad)  
  448fcc:	mov    bh,0x81
  448fce:	imul   ecx,DWORD PTR [rdi-0x6e491ee3],0x5b
  448fd5:	rex.WRB or BYTE PTR [r15-0x49f228d1],r13b
  448fdc:	or     eax,0xdd92b38e
  448fe1:	lahf   
  448fe2:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  448fe3:	(bad)  
  448fe4:	rex.R fst st(2)
  448fe7:	add    al,0x36
  448fe9:	clc    
  448fea:	mov    bh,0x6
  448fec:	sahf   
  448fed:	mov    dl,dh
  448fef:	pop    rax
  448ff0:	movabs ds:0x6f9f2dcd993ed472,al
  448ff9:	(bad)  
  448ffa:	out    0xb1,al
  448ffc:	mov    ch,ch
  448ffe:	fild   DWORD PTR [rcx-0x42]
  449001:	mov    ebp,0xbff76563
  449006:	(bad)  
  449007:	loope  0x448fa0
  449009:	fsub   QWORD PTR [rbp+0x57]
  44900c:	pop    rdi
  44900d:	rex.R test al,0x1f
  449010:	xchg   edx,eax
  449011:	stos   DWORD PTR es:[rdi],eax
  449012:	fild   DWORD PTR [rax-0x4e]
  449015:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  449016:	jns    0x449081
  449018:	cmp    eax,0x7beda55d
  44901d:	mov    ah,0x73
  44901f:	sub    eax,0x63587974
  449024:	xchg   edx,eax
  449025:	add    ebx,DWORD PTR [rbx+rbx*2+0x69]
  449029:	ins    DWORD PTR es:[rdi],dx
  44902a:	mov    cl,0x4c
  44902c:	cdq    
  44902d:	cmp    eax,0xb40ac63c
  449032:	out    0x97,eax
  449034:	jmp    0x448fc1
  449036:	or     BYTE PTR [rbx-0x26],bl
  449039:	adc    DWORD PTR [rbx-0x14],0x88726dd7
  449040:	or     ebx,DWORD PTR [rbx]
  449042:	(bad)  
  449043:	fwait
  449044:	push   rdi
  449045:	cs (bad) 
  449047:	mov    esi,0xddbc37ba
  44904c:	loop   0x449004
  44904e:	mov    WORD PTR [rdi+0xb17c1e],es
  449054:	sar    DWORD PTR [rsi+riz*8],0xe8
  449058:	js     0x44903e
  44905a:	mov    ah,0xef
  44905c:	clc    
  44905d:	loopne 0x44904f
  44905f:	rex.B loopne 0x449082
  449062:	and    al,0x82
  449064:	cmp    eax,esi
  449066:	xlat   BYTE PTR ds:[rbx]
  449067:	cmc    
  449068:	jl     0x4490e3
  44906a:	sar    DWORD PTR [rbx+0x4],0x1d
  44906e:	xchg   esi,eax
  44906f:	(bad)
  449072:	mov    bh,0xa0
  449074:	mov    ch,al
  449076:	mov    cl,0x1
  449078:	and    cl,BYTE PTR [rsi-0x291d32fd]
  44907e:	xlat   BYTE PTR ds:[rbx]
  44907f:	rex.RXB in eax,dx
  449081:	jg     0x5fa6ae78
  449087:	adc    ebp,esp
  449089:	add    edx,ebx
  44908b:	ins    DWORD PTR es:[rdi],dx
  44908c:	mov    al,0x25
  44908e:	movsxd esp,DWORD PTR [rax-0x6ae352fa]
  449094:	jno    0x449073
  449096:	(bad)  
  449097:	xor    DWORD PTR [rdi-0x53],edx
  44909a:	std    
  44909b:	(bad)  
  44909c:	xchg   ebx,eax
  44909d:	(bad)  
  44909e:	(bad)  
  44909f:	clts   
  4490a1:	ret    
  4490a2:	pop    rbx
  4490a3:	cmp    BYTE PTR [rsi+0x7884c0b1],cl
  4490a9:	out    0xa5,al
  4490ab:	xchg   ebp,eax
  4490ac:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  4490ad:	cmp    eax,0x6a3e6922
  4490b2:	xor    ecx,ecx
  4490b4:	lods   eax,DWORD PTR ds:[rsi]
  4490b5:	popf   
  4490b6:	mov    edx,0x8600446d
  4490bb:	iret   
  4490bc:	and    cl,bl
  4490be:	xchg   esi,eax
  4490bf:	retf   0x3def
  4490c2:	rex.B sub eax,0x701d0d60
  4490c8:	(bad)  
  4490c9:	in     al,dx
  4490ca:	mov    bh,0x52
  4490cc:	cmp    eax,0xacab37ed
  4490d1:	rex xlat BYTE PTR ds:[rbx]
  4490d3:	outs   dx,DWORD PTR ds:[rsi]
  4490d4:	push   rsi
  4490d5:	ins    DWORD PTR es:[rdi],dx
  4490d6:	rex.WB (bad) 
  4490d8:	jne    0x4490ab
  4490da:	fcmovu st,st(2)
  4490dc:	movabs ds:0xb2af32ea8bebe82d,al
  4490e5:	(bad)  
  4490e6:	(bad)  
  4490e7:	add    eax,0x74bd3caa
  4490ec:	fdivp  st(3),st
  4490ee:	outs   dx,BYTE PTR ds:[rsi]
  4490ef:	scas   al,BYTE PTR es:[rdi]
  4490f0:	sub    r15d,r14d
  4490f3:	jno    0x449080
  4490f5:	and    al,0xe6
  4490f7:	sahf   
  4490f8:	(bad)  
  4490f9:	nop
  4490fa:	xchg   esp,eax
  4490fb:	(bad)  
  4490fc:	outs   dx,BYTE PTR ds:[rsi]
  4490fd:	(bad)  
  4490ff:	repz int3 
  449101:	add    al,0xc0
  449103:	jge    0x449165
  449105:	(bad)  
  449106:	jns    0x44915e
  449108:	mov    ecx,0x5bcda756
  44910d:	jmp    FWORD PTR [rsp+rdx*1+0x6c]
  449111:	push   rsi
  449112:	movabs al,ds:0x9e72c05a835757cd
  44911b:	push   rbp
  44911c:	imul   ecx,DWORD PTR [rdi-0x4050d5c8],0x10
  449123:	rex.WR (bad) 
  449125:	(bad)  
  449126:	mov    ebx,0x8c2d2fbe
  44912b:	push   rdi
  44912c:	mov    eax,0x67b893b
  449131:	ficom  WORD PTR [rdx]
  449133:	xor    DWORD PTR [rax-0x70],esp
  449136:	(bad)  
  449137:	or     dl,ch
  449139:	mov    cl,0x43
  44913b:	pop    rcx
  44913c:	cmc    
  44913d:	test   BYTE PTR [rax-0x2749f462],ah
  449143:	mov    ah,0x14
  449145:	js     0x449121
  449147:	jmp    0xf70146b
  44914c:	enter  0xee67,0x6b
  449150:	ror    edx,0x7d
  449153:	push   rbp
  449154:	pop    rdi
  449155:	add    ch,BYTE PTR [rax-0x1b354485]
  44915b:	(bad)  [rbx+riz*8-0x91a269c]
  449162:	cdq    
  449163:	or     al,0x3c
  449165:	(bad)  
  449166:	cs cs jb 0x4491e8
  44916a:	ss test al,0xac
  44916d:	jmp    0x4491cd
  44916f:	scas   eax,DWORD PTR es:[rdi]
  449170:	xchg   DWORD PTR [rcx-0x16],eax
  449173:	and    DWORD PTR [rbx],ecx
  449175:	fs jg  0x44914e
  449178:	movabs al,ds:0xbe570d7c2c53a1ed
  449181:	mov    bh,0x84
  449183:	ret    
  449184:	(bad)  
  449185:	imul   bh
  449187:	jrcxz  0x449166
  449189:	ret    0xc522
  44918c:	stc    
  44918d:	ja     0x449197
  44918f:	fs rex.WRXB
  449191:	gs mov cl,0xbf
  449194:	gs int 0x1f
  449197:	(bad)  
  449198:	(bad)  
  449199:	(bad)  
  44919a:	(bad)  
  44919b:	xor    BYTE PTR [rax+0x45],bh
  44919e:	loopne 0x449187
  4491a0:	imul   edi,DWORD PTR [rdx+rsi*2],0x590c21e8
  4491a7:	mov    eax,0xb26ac682
  4491ac:	in     al,dx
  4491ad:	sub    BYTE PTR [rbx-0x35],ch
  4491b0:	int3   
  4491b1:	imul   bh
  4491b3:	or     BYTE PTR [rsi-0x7e],dl
  4491b6:	mov    edx,0xbce3742d
  4491bb:	(bad)  
  4491bc:	not    ebp
  4491be:	rex.RX
  4491bf:	gs jrcxz 0x449223
  4491c2:	rcr    BYTE PTR [rcx-0x33],1
  4491c5:	(bad)  
  4491c6:	jb     0x4491a8
  4491c8:	mov    esi,0xb63f87ae
  4491cd:	pminub mm2,QWORD PTR [rdi+0x6e015551]
  4491d4:	jmp    FWORD PTR [rax]
  4491d6:	mov    edi,0xcb6de787
  4491db:	fist   WORD PTR [rsi]
  4491dd:	test   eax,0x83d9623c
  4491e2:	mov    eax,0xc54b60db
  4491e7:	add    cl,0x22
  4491ea:	out    0x62,al
  4491ec:	xor    ah,bh
  4491ee:	(bad)  
  4491ef:	shr    DWORD PTR [rsi-0xcb41204],0x32
  4491f6:	sub    eax,0x8c9321d2
  4491fb:	cli    
  4491fc:	(bad)
  4491ff:	lea    ebx,[rsi+rcx*8-0x405d920b]
  449206:	or     ah,BYTE PTR [rsi-0x26]
  449209:	stc    
  44920a:	mov    dl,0xa3
  44920c:	std    
  44920d:	mov    dl,0xe6
  44920f:	ret    0x5080
  449212:	(bad)  
  449213:	stos   BYTE PTR es:[rdi],al
  449214:	in     al,dx
  449215:	mov    bl,0x32
  449217:	jge    0x4491fd
  449219:	add    al,0xa2
  44921b:	mov    ecx,0x1f44abbf
  449220:	(bad)  
  449221:	js     0x4491c4
  449223:	lods   eax,DWORD PTR ds:[rsi]
  449224:	xlat   BYTE PTR ds:[rbx]
  449225:	(bad)  
  449226:	xor    bh,BYTE PTR [rax+0x3c895992]
  44922c:	je     0x4491be
  44922e:	fist   DWORD PTR [rsi-0x1d]
  449231:	sti    
  449232:	retf   0xca5b
  449235:	adc    DWORD PTR [rbx],0xbfc7d96c
  44923b:	add    eax,0xeb938c44
  449240:	mov    eax,DWORD PTR [rbx]
  449242:	(bad)  
  449243:	out    0xfd,al
  449245:	lock sti 
  449247:	mov    ch,0xf
  449249:	retf   0xe6df
  44924c:	mov    dh,0xee
  44924e:	cdq    
  44924f:	(bad)  
  449250:	cmp    edi,0xffffffb2
  449253:	xor    edx,esp
  449255:	(bad)  
  449256:	mov    ebx,0x7bb06ad6
  44925b:	mov    bl,0x4b
  44925d:	sub    eax,0xcec99480
  449262:	shr    DWORD PTR [rsi+0x2b787b72],cl
  449268:	(bad)  
  449269:	jle    0x4492d0
  44926b:	mov    ecx,0xb3e1e115
  449270:	ror    BYTE PTR [rsi-0x58130d4b],1
  449276:	outs   dx,DWORD PTR ds:[rsi]
  449277:	xchg   BYTE PTR [rbx-0x23],dh
  44927a:	or     al,BYTE PTR [rax+0x19]
  44927d:	fld    st(2)
  44927f:	cdq    
  449280:	(bad)  
  449281:	in     al,dx
  449282:	icebp  
  449283:	jl     0x4492dc
  449285:	xchg   esi,eax
  449286:	imul   BYTE PTR [rax-0x1b]
  449289:	mov    ah,0x2f
  44928b:	es hlt 
  44928d:	and    dh,bl
  44928f:	add    al,BYTE PTR [rcx-0x44]
  449292:	adc    eax,0x7b604bc5
  449297:	sahf   
  449298:	fcom   st(7)
  44929a:	out    0x10,al
  44929c:	(bad)  
  44929d:	sbb    eax,DWORD PTR [rcx+0x3dfb6155]
  4492a3:	fs loope 0x4492cf
  4492a6:	and    eax,0x60667659
  4492ab:	sbb    al,0xe5
  4492ad:	mov    cl,0xb9
  4492af:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  4492b0:	cmp    DWORD PTR [rbx+0x758e36db],ebp
  4492b6:	mov    ebx,0x107cb7c8
  4492bb:	adc    ch,BYTE PTR [rcx+0x6d46ed91]
  4492c1:	jg     0x449254
  4492c3:	(bad)  
  4492c4:	ins    DWORD PTR es:[rdi],dx
  4492c5:	and    BYTE PTR [rcx-0x32ac7d2b],bl
  4492cb:	cmp    DWORD PTR [rbp+0x66],0x6bdb2bde
  4492d2:	xlat   BYTE PTR ds:[rbx]
  4492d3:	rex.WX icebp 
  4492d5:	cwde   
  4492d6:	test   dh,cl
  4492d8:	jae    0x449269
  4492da:	fdivr  DWORD PTR [rcx+rbx*1-0x4f]
  4492de:	(bad)  
  4492df:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  4492e0:	mov    cl,0xeb
  4492e2:	(bad)  [rdx-0x30]
  4492e5:	mov    edi,0xd64ed64e
  4492ea:	rex.XB
  4492eb:	ds (bad) 
  4492ed:	or     al,0xd0
  4492ef:	jrcxz  0x44927f
  4492f1:	or     BYTE PTR [rdi-0x72],ah
  4492f4:	imul   edi,DWORD PTR [rsi],0x69
  4492f7:	mov    cl,0x68
  4492f9:	es jo  0x449327
  4492fc:	(bad)  
  4492fd:	(bad)  
  4492fe:	pop    rcx
  4492ff:	cwde   
  449300:	rex.RXB mov r10d,0x3c0f5335
  449306:	and    BYTE PTR [rbx],ch
  449308:	loop   0x449348
  44930a:	xor    BYTE PTR [rax+0xe],bl
  44930d:	sub    al,0x24
  44930f:	and    DWORD PTR [rbx],edx
  449311:	add    ch,BYTE PTR [rcx]
  449313:	popf   
  449314:	mov    ch,0x23
  449316:	fstp   TBYTE PTR [rdx-0x52011c5b]
  44931c:	mov    ecx,0x63d2196d
  449321:	mov    ebp,DWORD PTR [rsi+0x19]
  449324:	adc    DWORD PTR [rbx],eax
  449326:	sti    
  449327:	pushf  
  449328:	(bad)  
  449329:	rex.WXB sub rdx,QWORD PTR [r9+0xf9fc195]
  449330:	es xchg ebp,eax
  449332:	mov    esi,0xb7ecb77
  449337:	(bad)  
  449338:	(bad)  
  449339:	xor    edi,eax
  44933b:	(bad)  
  44933c:	dec    BYTE PTR [rbp+rcx*1+0x43ed7091]
  449343:	ficomp WORD PTR [rcx+0x7d]
  449346:	mov    ebp,ds
  449348:	(bad)  
  449349:	adc    eax,0x217d8203
  44934e:	cmp    BYTE PTR [rdx+0x254e40ed],bh
  449354:	repz fild DWORD PTR [rdx]
  449357:	sbb    DWORD PTR [rax+0x29],esi
  44935a:	push   rax
  44935b:	(bad)  
  44935c:	and    ebp,DWORD PTR [rsi+0x72b5b6fb]
  449362:	ins    BYTE PTR es:[rdi],dx
  449363:	shr    ecx,0xc9
  449366:	adc    edx,0xda4e53da
  44936c:	icebp  
  44936d:	mov    ebp,0xef279adc
  449372:	enter  0x47b,0x95
  449376:	mov    ch,0x5f
  449378:	sbb    DWORD PTR [rbx+rcx*2],ecx
  44937b:	jrcxz  0x4493ea
  44937d:	stc    
  44937e:	pop    rbx
  44937f:	(bad)  
  449380:	jne    0x44934f
  449382:	xchg   DWORD PTR [rip+0x368760f5],eax        # 0x36cbf47d
  449388:	cmp    al,0x36
  44938a:	sub    ebx,ebp
  44938c:	mov    ss,WORD PTR [rdi-0x61]
  44938f:	sub    eax,0x7bbeb94c
  449394:	(bad)  
  449395:	mov    esi,0x7b5877fe
  44939a:	jne    0x44932a
  44939c:	mov    edi,0xbf3faff5
  4493a1:	fadd   st(5),st
  4493a3:	imul   ecx,ebx,0xffffff88
  4493a6:	mov    bh,0x81
  4493a8:	retf   0xc88a
  4493ab:	jne    0x4493a8
  4493ad:	rex.RX
  4493ae:	rex sbb esp,edx
  4493b1:	jae    0x449377
  4493b3:	mov    esi,0xca6167ae
  4493b8:	sub    eax,0xbf5cf71b
  4493bd:	(bad)  
  4493be:	cwde   
  4493bf:	imul   ecx,edx,0xffffffaa
  4493c2:	(bad)  
  4493c3:	pop    rbx
  4493c4:	or     al,0x10
  4493c6:	fadd   DWORD PTR [rbx-0x1263a9ec]
  4493cc:	mov    bl,0xd0
  4493ce:	push   rbp
  4493cf:	or     ecx,DWORD PTR [rsi+rbp*2+0x2d]
  4493d3:	pop    rcx
  4493d4:	fdiv   QWORD PTR [rdx+0x7ae56d62]
  4493da:	push   0x337e6d54
  4493df:	nop
  4493e0:	rex.RB jmp 0x449401
  4493e3:	mov    al,0xcf
  4493e5:	gs push rdx
  4493e7:	fbstp  TBYTE PTR [rdx]
  4493e9:	(bad)  
  4493ea:	pcmpeqd mm1,QWORD PTR [rsi-0x3ff55632]
  4493f1:	jno    0x449411
  4493f3:	mov    ebp,0xfc3f07ac
  4493f8:	in     eax,dx
  4493f9:	rex.WB lods al,BYTE PTR ds:[rsi]
  4493fb:	(bad)  
  4493fc:	ret    
  4493fd:	xchg   esi,eax
  4493fe:	jno    0x4493de
  449400:	enter  0x7d3e,0xdc
  449404:	pop    rbx
  449405:	movabs rax,0x4fafd7d29322db38
  44940f:	(bad)  
  449410:	add    ecx,DWORD PTR [rip+0x29cf51ca]        # 0x2a13e5e0
  449416:	(bad)  
  449417:	fld    QWORD PTR [rax+0x62f17e58]
  44941d:	pop    rdi
  44941e:	and    ecx,DWORD PTR [rax+0x5c083d5b]
  449424:	rex.R jbe 0x449442
  449427:	mov    ebx,0x8ea31618
  44942d:	or     DWORD PTR [rsp+rax*8-0x6a30c926],edx
  449434:	xchg   r13d,eax
  449436:	(bad)  
  449437:	enter  0xc156,0x65
  44943b:	pop    rsi
  44943c:	lods   eax,DWORD PTR ds:[rsi]
  44943d:	add    al,0x97
  44943f:	xchg   ebp,eax
  449440:	mov    DWORD PTR [rcx],0x73cb1167
  449446:	retf   0x937
  449449:	mov    dh,0xf
  44944b:	ds ja  0x44944c
  44944e:	jnp    0x4493d2
  449450:	(bad)  
  449451:	jrcxz  0x4493ed
  449453:	xchg   edi,eax
  449454:	xlat   BYTE PTR ds:[rbx]
  449455:	jnp    0x44943c
  449457:	sti    
  449458:	push   0xffffffffffffffa0
  44945a:	fstp   QWORD PTR [rsi]
  44945c:	rcr    ch,0x6
  44945f:	xchg   DWORD PTR [rsp+rcx*1+0x18],edi
  449463:	and    BYTE PTR [rdx-0x11eea0d6],dh
  449469:	lea    rcx,[r8+r9*1]
  44946d:	movsxd ebp,esi
  44946f:	mov    DWORD PTR [rbp+rsi*8+0x1f639564],edi
  449476:	adc    esp,DWORD PTR [rax]
  449478:	stos   DWORD PTR es:[rdi],eax
  449479:	mov    ecx,0xd3d7f2af
  44947e:	push   rsi
  44947f:	push   rsi
  449480:	mov    bh,BYTE PTR [rbp+0x66]
  449483:	cmc    
  449484:	pop    rcx
  449485:	test   eax,0xee781f3b
  44948a:	mov    ecx,0xca21678c
  44948f:	(bad)  
  449490:	je     0x449427
  449492:	ror    DWORD PTR [rdx+0x5b],1
  449495:	mov    bh,0x86
  449497:	sahf   
  449498:	(bad)  
  449499:	clc    
  44949a:	cli    
  44949b:	movabs al,ds:0x87812b0a26868673
  4494a4:	xor    DWORD PTR [rsi+0x7],esi
  4494a7:	rex.XB ret 0xbebb
  4494ab:	adc    bh,BYTE PTR [rsi-0xaebd872]
  4494b1:	mov    ecx,0x7de940ea
  4494b6:	enter  0xad3b,0x8f
  4494ba:	mov    cl,0xfb
  4494bc:	mov    eax,0x56195e4a
  4494c1:	xchg   esi,eax
  4494c2:	mov    ah,0x52
  4494c4:	sub    al,0xcb
  4494c6:	pop    rdx
  4494c7:	push   rax
  4494c8:	mov    dl,0x68
  4494ca:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  4494cb:	mov    esi,?
  4494cd:	pop    rdx
  4494ce:	push   rax
  4494cf:	mov    edi,0x824813a
  4494d4:	mov    edx,0x6a695418
  4494d9:	xor    DWORD PTR [rcx-0x74d6dc92],ebp
  4494df:	out    0x83,eax
  4494e1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  4494e2:	(bad)  
  4494e3:	clc    
  4494e4:	movabs al,ds:0xf0345c197e390786
  4494ed:	xchg   esp,eax
  4494ee:	(bad)  
  4494ef:	jb     0x4494d1
  4494f1:	leave  
  4494f2:	sub    esi,DWORD PTR [rbx-0x27]
  4494f5:	adc    eax,DWORD PTR [rbx]
  4494f7:	add    dh,BYTE PTR [rax]
  4494f9:	and    al,0x1c
  4494fb:	xor    ah,BYTE PTR [rbx]
  4494fd:	mov    dh,0xac
  4494ff:	ds (bad) 
  449501:	(bad)  
  449502:	sbb    al,0x59
  449504:	pop    rcx
  449505:	in     eax,dx
  449506:	push   rcx
  449507:	(bad)  
  449508:	cdq    
  449509:	jbe    0x4494c7
  44950b:	adc    eax,0x3126d67
  449510:	xlat   BYTE PTR ds:[rbx]
  449511:	repz pop rcx
  449513:	mov    edi,0xebc5d435
  449518:	nop
  449519:	(bad)  
  44951a:	outs   dx,DWORD PTR ds:[rsi]
  44951b:	add    esi,esp
  44951d:	push   rbx
  44951e:	xor    al,0xb2
  449520:	xchg   ebp,eax
  449521:	scas   eax,DWORD PTR es:[rdi]
  449522:	hlt    
  449523:	pop    rcx
  449524:	fnstenv [rip+0xffffffff8430f4ef]        # 0xffffffff84758a19
  44952a:	jge    0x44955e
  44952c:	pushf  
  44952d:	push   rbp
  44952e:	pop    rbx
  44952f:	packsswb mm3,mm4
  449532:	scas   al,BYTE PTR es:[rdi]
  449533:	xchg   ecx,eax
  449534:	(bad)
  449537:	(bad)  
  449538:	xor    DWORD PTR [rdi+0x3c80667d],esi
  44953e:	rex.WX in eax,dx
  449540:	sbb    eax,0x7f3bf201
  449545:	rex.WRXB and BYTE PTR [r11],r13b
  449548:	prefetchw BYTE PTR [rax+0x392f6ef0]
  44954f:	xlat   BYTE PTR ds:[rbx]
  449550:	ins    DWORD PTR es:[rdi],dx
  449551:	and    DWORD PTR [rbx+rsi*8-0x7],esp
  449555:	lahf   
  449556:	(bad)  
  449557:	mov    ch,0xf0
  449559:	push   rsp
  44955a:	(bad)  
  44955b:	pop    rbx
  44955c:	add    al,0x3b
  44955e:	ss jo  0x44955c
  449561:	(bad)  
  449562:	and    DWORD PTR [rip+0x299f5ceb],edi        # 0x29e3f253
  449568:	movabs ds:0x7dc1ccae165a0b87,eax
  449571:	scas   al,BYTE PTR es:[rdi]
  449572:	push   0x50
  449574:	rcr    BYTE PTR [rdi],cl
  449576:	repnz mov gs,ebx
  449579:	movsxd ebx,esp
  44957b:	fidivr DWORD PTR [rsi]
  44957d:	(bad)  
  44957e:	loopne 0x44956e
  449580:	mov    edi,0x54f2545a
  449585:	push   rbx
  449586:	cmp    eax,0xbcb2fc23
  44958b:	ja     0x4495f8
  44958d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  44958e:	retf   0xe55b
  449591:	bnd jb 0x4a2f9552
  449598:	sub    BYTE PTR [rbx-0x56dc0938],ch
  44959e:	(bad)  
  44959f:	and    esi,esi
  4495a1:	mov    dh,0x60
  4495a3:	xor    bl,bh
  4495a5:	(bad)  
  4495a6:	sahf   
  4495a7:	add    eax,0x8051b9ae
  4495ac:	leave  
  4495ad:	out    0x1f,al
  4495af:	(bad)  
  4495b0:	cs xor ebx,eax
  4495b3:	out    dx,eax
  4495b4:	(bad)  
  4495b5:	sub    al,0x92
  4495b7:	sub    al,BYTE PTR [rcx-0x25aaf479]
  4495bd:	ja     0x44963e
  4495bf:	pop    rax
  4495c0:	(bad)  
  4495c1:	gs out 0xc3,al
  4495c4:	fstp   TBYTE PTR [rbx+0x64]
  4495c7:	outs   dx,DWORD PTR ss:[rsi]
  4495c9:	scas   al,BYTE PTR es:[rdi]
  4495ca:	mov    esi,0x96a2dcfa
  4495cf:	in     al,dx
  4495d0:	cmp    al,0x1b
  4495d2:	js     0x449566
  4495d4:	stos   DWORD PTR es:[rdi],eax
  4495d5:	adc    esi,DWORD PTR [rdi-0x716f1f25]
  4495db:	add    DWORD PTR [rbx-0x74d3f54d],eax
  4495e1:	and    cl,BYTE PTR [rdi-0x4c13cf79]
  4495e7:	(bad)  
  4495e8:	jnp    0x449666
  4495ea:	(bad)  
  4495eb:	(bad)  
  4495ec:	pop    rdx
  4495ed:	test   DWORD PTR [rbp+riz*2-0x29],0x729e048f
  4495f5:	stos   BYTE PTR es:[rdi],al
  4495f6:	adc    bh,BYTE PTR [rbx+0x67]
  4495f9:	fisubr WORD PTR [rbx]
  4495fb:	or     DWORD PTR [rdi-0x8e083f2],0xffffffbe
  449602:	in     eax,dx
  449603:	xor    ecx,DWORD PTR [rbx-0x12d691ba]
  449609:	or     ebp,edx
  44960b:	and    DWORD PTR [rip+0x12eb2af],ecx        # 0x17348c0
  449611:	sbb    BYTE PTR [rsi+0x59],bh
  449614:	pop    r11
  449616:	rex.WRXB bswap r12
  449619:	jnp    0x4495e8
  44961b:	(bad)  
  44961c:	jmp    0x4495b4
  44961e:	xchg   ebx,eax
  44961f:	xchg   edx,eax
  449620:	xlat   BYTE PTR ds:[rbx]
  449621:	or     dh,bl
  449623:	and    eax,0xa6049b5b
  449628:	sahf   
  449629:	(bad)  
  44962a:	ror    dh,cl
  44962c:	jl     0x449609
  44962e:	pop    rdi
  44962f:	(bad)  
  449630:	fcmovbe st,st(6)
  449632:	(bad)  
  449633:	mov    ch,0x10
  449635:	outs   dx,BYTE PTR ss:[rsi]
  449637:	call   QWORD PTR [rax+0xec8e276]
  44963d:	jge    0x4495eb
  44963f:	pop    rbx
  449640:	mov    spl,0x38
  449643:	fstp   DWORD PTR [rdx*8+0x4573503d]
  44964a:	sub    ecx,ebx
  44964c:	rex.WXB lea rsp,[r8]
  44964f:	jg     0x4495e5
  449651:	xlat   BYTE PTR ds:[rbx]
  449652:	rex.WRXB add rax,0x538eb9e6
  449658:	(bad)  
  449659:	sti    
  44965a:	ins    BYTE PTR es:[rdi],dx
  44965b:	cmp    DWORD PTR [rax+0x52],eax
  44965e:	add    al,0xf3
  449660:	mov    bh,0x4c
  449662:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  449663:	or     eax,0x5dc8430b
  449668:	rex.WRXB pop r14
  44966a:	and    ecx,ebx
  44966c:	mov    bh,0xda
  44966e:	icebp  
  44966f:	(bad)  
  449670:	ja     0x4496c1
  449672:	xlat   BYTE PTR ds:[rbx]
  449673:	icebp  
  449674:	out    0xc6,al
  449676:	out    dx,al
  449677:	jrcxz  0x449687
  449679:	lahf   
  44967a:	xor    BYTE PTR [rdx+0x6d],0xa2
  44967e:	jno    0x449603
  449680:	shl    BYTE PTR [rdi-0x1907d582],0xf2
  449687:	fidivr WORD PTR [rcx+rbx*8-0x74885121]
  44968e:	jbe    0x4496cd
  449690:	(bad)  
  449691:	jnp    0x44962d
  449693:	rex.WX cqo 
  449695:	cmp    al,0xc
  449697:	push   rsp
  449698:	jge    0x4496ce
  44969a:	(bad)  
  44969b:	scas   al,BYTE PTR es:[rdi]
  44969c:	mul    DWORD PTR ds:[rax]
  44969f:	fiadd  WORD PTR [rdx]
  4496a1:	rex.B cmp al,0x8a
  4496a4:	sub    DWORD PTR [rip+0xfffffffff48373e1],0x23799404        # 0xfffffffff4c80a8f
  4496ae:	repnz pop rdx
  4496b0:	jl     0x449724
  4496b2:	mov    eax,esi
  4496b4:	and    dl,BYTE PTR [rbp-0x55fa5747]
  4496ba:	(bad)  
  4496bb:	rex.RX (bad) 
  4496bd:	repz pop rdi
  4496bf:	stos   DWORD PTR es:[rdi],eax
  4496c0:	mov    eax,0xf22821f6
  4496c5:	jp     0x4496d7
  4496c7:	rex.X mov sil,0xd4
  4496ca:	mov    ds,WORD PTR [rbx+0x42]
  4496cd:	enter  0x1b2e,0x5a
  4496d1:	sbb    DWORD PTR [rsi-0x7003b6b1],esi
  4496d7:	adc    DWORD PTR [rdx+0x3cec295a],0xe06b7ae4
  4496e1:	ds jno 0x449749
  4496e4:	push   rdi
  4496e5:	(bad)  
  4496e6:	xor    bl,BYTE PTR ds:[rax-0x6e9833f1]
  4496ed:	fdivr  QWORD PTR [rsi+0x42d2847a]
  4496f3:	xchg   esi,eax
  4496f4:	mov    edi,0xef71eedd
  4496f9:	fdivr  DWORD PTR [rbx-0x5b]
  4496fc:	jge    0x44972b
  4496fe:	mov    cl,BYTE PTR [rip+0x7694a59d]        # 0x76d93ca1
  449704:	fld    TBYTE PTR [rax-0x8]
  449707:	pushf  
  449708:	hlt    
  449709:	xchg   esi,eax
  44970a:	jo     0x449772
  44970c:	mov    bl,0x4b
  44970e:	(bad)  
  44970f:	jmp    0x449727
  449711:	adc    BYTE PTR [rbx],ch
  449713:	rex.WRX jbe 0x4496c5
  449716:	(bad)  
  449717:	cmp    eax,0xcc7fb758
  44971c:	push   rbp
  44971d:	sub    eax,0xac1ef91a
  449722:	xor    bl,BYTE PTR [rcx]
  449724:	rex.WB lods rax,QWORD PTR ds:[rsi]
  449726:	add    ah,BYTE PTR [rbx]
  449728:	(bad)  
  449729:	mov    eax,gs
  44972b:	mov    bl,0x6b
  44972d:	(bad)  
  44972e:	retf   0xe75a
  449731:	js     0x449747
  449733:	adc    ecx,ecx
  449735:	out    dx,al
  449736:	(bad)  
  449737:	(bad)  
  449738:	out    0xd1,al
  44973a:	jns    0x449799
  44973c:	or     DWORD PTR [rax+0x15900541],ecx
  449742:	movsxd ecx,DWORD PTR [rdi]
  449744:	pop    rbx
  449745:	js     0x449709
  449747:	stos   BYTE PTR es:[rdi],al
  449748:	push   rsi
  449749:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  44974a:	gs int3 
  44974c:	out    dx,eax
  44974d:	add    al,0xe6
  44974f:	mov    al,0xb5
  449751:	movs   QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  449753:	and    al,0x37
  449755:	(bad)  
  449756:	cmc    
  449757:	hlt    
  449758:	xchg   esi,eax
  449759:	imul   dl
  44975b:	jmp    0xffffffff8139db89
  449760:	rex.W mov bpl,0xa7
  449763:	mov    WORD PTR [rdi],?
  449765:	cmp    al,0xf0
  449767:	add    BYTE PTR [rsi-0x3c062a82],al
  44976d:	and    BYTE PTR [rip+0xffffffff9c1a4f10],0xd3        # 0xffffffff9c5ee684
  449774:	cmp    DWORD PTR [rcx+0xb],0x4
  449778:	repz push rsi
  44977a:	repnz mov bh,0x80
  44977d:	push   rsi
  44977e:	loop   0x44974a
  449780:	mov    WORD PTR [rdx],?
  449782:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  449783:	adc    eax,0xcdedde
  449788:	cmc    
  449789:	fdiv   QWORD PTR [rdx-0x3c6ae1b9]
  44978f:	mov    BYTE PTR [rsp+rdi*4-0xa9bac36],cl
  449796:	cmp    eax,0x4d96045c
  44979b:	mov    ebp,0x6e1bc3d6
  4497a0:	jrcxz  0x44981e
  4497a2:	jns    0x449794
  4497a4:	mov    bh,0x6b
  4497a6:	and    BYTE PTR [rbp-0x60f3cfd1],ch
  4497ac:	jbe    0x449828
  4497ae:	rex (bad) 
  4497b0:	xchg   esi,eax
  4497b1:	sbb    DWORD PTR [rdi],edx
  4497b3:	(bad)  
  4497b4:	(bad)  
  4497b5:	rex.RXB in al,dx
  4497b7:	(bad)
  4497ba:	mov    ecx,0xfe712133
  4497bf:	repnz test al,0x3d
  4497c2:	(bad)  
  4497c3:	xchg   ebp,eax
  4497c4:	pop    rcx
  4497c5:	gs neg ebp
  4497c8:	xor    ebx,0xffffff8b
  4497cb:	movabs al,ds:0x4ee699f0c17de184
  4497d4:	fimul  WORD PTR [rsi-0x22]
  4497d7:	rex.XB
  4497d8:	es (bad) 
  4497da:	or     al,0xe4
  4497dc:	lea    di,[rdi+riz*8-0x31]
  4497e1:	stos   DWORD PTR es:[rdi],eax
  4497e2:	fstp   TBYTE PTR [rdi]
  4497e4:	add    bl,BYTE PTR [rsi-0x20]
  4497e7:	mov    ebx,0xe0b9f2ad
  4497ec:	jne    0x44977b
  4497ee:	sbb    dh,dh
  4497f0:	pop    rcx
  4497f1:	jo     0x4497cd
  4497f3:	sbb    ebp,DWORD PTR [rax]
  4497f5:	test   eax,0x7ee8823d
  4497fa:	scas   eax,DWORD PTR es:[rdi]
  4497fb:	stc    
  4497fc:	sub    eax,0xa79c2192
  449801:	cdq    
  449802:	fcomp  QWORD PTR [rsi]
  449804:	xchg   edx,eax
  449805:	mov    cl,0xbf
  449807:	sbb    ch,BYTE PTR [rax]
  449809:	test   DWORD PTR [rbp-0x38],esp
  44980c:	addr32 add eax,0x98b702fb
  449812:	retf   0xc478
  449815:	shr    dl,0xb5
  449818:	bnd jp 0x4497d9
  44981b:	in     eax,dx
  44981c:	ja     0x44980c
  44981e:	jb     0x449860
  449820:	rex.W pop rsp
  449822:	ret    
  449823:	ins    DWORD PTR es:[rdi],dx
  449824:	(bad)  
  449825:	sbb    DWORD PTR [rax+0xd0efdee],edi
  44982b:	outs   dx,DWORD PTR ds:[rsi]
  44982c:	add    DWORD PTR [rdx-0x4b],ecx
  44982f:	loopne 0x4497e2
  449831:	rex.WX out 0x8d,eax
  449834:	popf   
  449835:	loop   0x4497f8
  449837:	nop
  449838:	pop    rdx
  449839:	sub    al,0x3b
  44983b:	fs sbb al,0x36
  44983e:	(bad)  
  44983f:	pushf  
  449840:	jge    0x4498ae
  449842:	pop    rbx
  449843:	push   rax
  449844:	nop
  449845:	cmp    BYTE PTR [rbp-0x3a],bl
  449848:	push   rsp
  449849:	(bad)  
  44984a:	and    cl,BYTE PTR [rcx+0x24482c5b]
  449850:	fisttp DWORD PTR [rdx]
  449852:	jp     0x4498c7
  449854:	fisttp WORD PTR [rdi-0x389735fb]
  44985a:	(bad)  
  44985b:	imul   ecx,edx,0xffffff9e
  44985e:	mov    BYTE PTR [rax],ch
  449860:	jnp    0x449884
  449862:	mov    edx,0xc1ab2845
  449867:	out    dx,al
  449868:	fstp   TBYTE PTR [rdx-0x1ac714c1]
  44986e:	jmp    0x4498ba
  449870:	loopne 0x449870
  449872:	cs (bad) 
  449874:	mov    al,0xc0
  449876:	fs rex.WRX ins BYTE PTR es:[rdi],dx
  449879:	pop    rsi
  44987a:	sti    
  44987b:	fadd   DWORD PTR [rcx-0x10]
  44987e:	and    DWORD PTR [rsi-0x513b52f4],ebx
  449884:	sti    
  449885:	scas   eax,DWORD PTR es:[rdi]
  449886:	push   rsi
  449887:	mov    ecx,0xd71da79d
  44988c:	test   al,0xc5
  44988e:	sub    cl,BYTE PTR [rbx]
  449890:	rex.WRX (bad) 
  449892:	sub    DWORD PTR [rax+rax*2+0x19de5735],0x1c
  44989a:	shr    DWORD PTR [rsi+0x73600c31],cl
  4498a0:	jrcxz  0x44987b
  4498a2:	adc    al,0xd4
  4498a5:	ret    
  4498a6:	sbb    edi,DWORD PTR [rip+0xffffffff8060b7c0]        # 0xffffffff80a5506c
  4498ac:	psrad  mm4,mm5
  4498af:	nop
  4498b0:	repnz mov edi,0xca98c8c1
  4498b6:	fiadd  WORD PTR [rbp-0x686b0f00]
  4498bc:	mov    ebx,0x2d5bf702
  4498c1:	push   rdx
  4498c2:	cdq    
  4498c3:	sub    ebx,DWORD PTR [rdx-0x3543359d]
  4498c9:	in     al,0xeb
  4498cb:	add    eax,0xedf027b
  4498d0:	xor    cl,BYTE PTR [rdi]
  4498d2:	rex.RB pop r14
  4498d4:	out    0xc8,eax
  4498d6:	mov    edx,0x7fdc096f
  4498db:	(bad)  
  4498dc:	cs (bad) 
  4498de:	pop    rcx
  4498df:	stc    
  4498e0:	jne    0x4498b1
  4498e2:	(bad)  
  4498e3:	pop    rsp
  4498e4:	fld    DWORD PTR [rbx-0x12611ec]
  4498ea:	(bad)  
  4498eb:	loopne 0x449905
  4498ed:	(bad)  
  4498ee:	adc    DWORD PTR [rcx+0x6accb022],eax
  4498f4:	lahf   
  4498f5:	adc    bl,BYTE PTR [rax]
  4498f7:	loope  0x4498b6
  4498f9:	push   rdi
  4498fa:	(bad)  
  4498fb:	iret   
  4498fc:	add    eax,0xfca566ca
  449901:	xor    BYTE PTR [rbx+0x7253045a],bh
  449907:	fwait
  449908:	sbb    ebx,DWORD PTR [rbx+0x3c]
  44990b:	jae    0x449949
  44990d:	movabs ds:0x872403dbf55ed8ca,al
  449916:	xchg   esp,eax
  449917:	sar    edx,cl
  449919:	js     0x4498d5
  44991b:	(bad)  
  44991c:	add    eax,0xb0793234
  449921:	(bad)  
  449922:	jns    0x4498d0
  449924:	and    al,0x2f
  449926:	add    eax,0x9e688888
  44992b:	movabs al,ds:0x888a8caa5ee0437a
  449934:	out    0x8,eax
  449936:	fcom   QWORD PTR [rsi-0x212df18f]
  44993c:	xor    edx,DWORD PTR [rax-0x3538ee8f]
  449942:	mov    al,0x5b
  449944:	cmp    eax,0xf3a308f5
  449949:	(bad)  
  44994a:	(bad)  
  44994b:	xlat   BYTE PTR ds:[rbx]
  44994c:	add    al,0xf5
  44994e:	rex.WR mov cl,0x45
  449951:	sub    eax,0xc1c4558b
  449956:	cmc    
  449957:	int    0x55
  449959:	cmp    eax,0xbe1e1b0
  44995e:	(bad)  
  44995f:	rex.RB jae 0x4498f3
  449962:	shr    BYTE PTR [rbp+0x55ad2422],0x67
  449969:	in     al,0x43
  44996b:	(bad)  
  44996c:	(bad)
  44996f:	loopne 0x44999b
  449971:	xor    bl,BYTE PTR [rdx+0x69]
  449974:	jbe    0x4499f5
  449976:	jns    0x44992e
  449978:	mov    ch,0x77
  44997a:	(bad)  
  44997b:	mov    esp,0x4e7dd92a
  449980:	pop    rax
  449981:	(bad)  
  449982:	mov    dl,0xbd
  449984:	out    dx,eax
  449985:	in     al,0xed
  449987:	add    dh,BYTE PTR [rsi-0x38]
  44998a:	(bad)  
  44998b:	add    BYTE PTR [rcx+0x53cab6c8],0xa5
  449992:	icebp  
  449993:	in     eax,0x2
  449995:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  449996:	lods   al,BYTE PTR ds:[rsi]
  449997:	int3   
  449998:	mov    DWORD PTR [rax+0x84e0fb7],esp
  44999e:	fs gs (bad) 
  4499a1:	sub    bh,BYTE PTR [rcx+0x7d]
  4499a4:	mov    si,0x216b
  4499a8:	imul   ebp,DWORD PTR [rsi],0x5e100858
  4499ae:	cmp    ecx,DWORD PTR [rsi-0x4a045d4f]
  4499b4:	jbe    0x4499b4
  4499b6:	repz mov dh,BYTE PTR gs:[rdi+rbx*2+0xa41ea0f]
  4499bf:	fs mov ah,0xcf
  4499c2:	mov    dh,BYTE PTR [rax-0x6f8c515]
  4499c8:	or     DWORD PTR [rcx-0x54934987],eax
  4499ce:	(bad)  
  4499cf:	xchg   esi,eax
  4499d0:	xchg   QWORD PTR [r11+0x64c416d3],rbp
  4499d7:	(bad)  
  4499d8:	push   rbp
  4499d9:	shl    al,0x36
  4499dc:	xchg   edx,eax
  4499dd:	rep outs dx,DWORD PTR ds:[rsi]
  4499df:	sbb    DWORD PTR [rax],esp
  4499e1:	mov    edx,0xedb25a5b
  4499e6:	rol    BYTE PTR [rcx-0x7c],1
  4499e9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4499ea:	scas   al,BYTE PTR es:[rdi]
  4499eb:	jae    0x4499b5
  4499ed:	cmp    BYTE PTR [rsi+0x34],ch
  4499f0:	(bad)  
  4499f1:	ds scas al,BYTE PTR es:[rdi]
  4499f3:	sub    eax,0x6e1c4a26
  4499f8:	ds test eax,0x11b23dcc
  4499fe:	rex.RXB and r10d,DWORD PTR gs:[r10]
  449a02:	(bad)  
  449a04:	mov    ch,BYTE PTR [rax+rdi*8]
  449a07:	mov    DWORD PTR [rax-0x56c662ce],esp
  449a0d:	jns    0x4499bd
  449a0f:	int3   
  449a10:	xchg   BYTE PTR [rax+0x48],dh
  449a13:	(bad)  
  449a14:	push   rbp
  449a15:	pop    rcx
  449a16:	(bad)  
  449a17:	push   rsp
  449a18:	rex.RX imul r10d,ebx,0x43
  449a1c:	(bad)  
  449a1d:	or     BYTE PTR [rsi-0x22],ch
  449a20:	push   0xfffffffffffffff1
  449a22:	or     DWORD PTR [rcx-0x33],edx
  449a25:	xchg   ebp,eax
  449a26:	adc    ebx,edx
  449a28:	out    0x57,eax
  449a2a:	or     esp,ecx
  449a2c:	fwait
  449a2d:	cmp    eax,0xab445cd7
  449a32:	out    0x9d,eax
  449a34:	sub    eax,0x91c3293a
  449a39:	neg    DWORD PTR [rax-0x7189b9c0]
  449a3f:	xor    bh,BYTE PTR [rbp+0x77]
  449a42:	mov    al,0x14
  449a44:	mov    eax,0x560e350d
  449a49:	mov    edx,DWORD PTR [rbx+rax*8+0x67]
  449a4d:	cwde   
  449a4e:	jmp    0x449ac3
  449a50:	(bad)
  449a54:	jmp    0x449a17
  449a56:	(bad)  [rbp+0x70]
  449a59:	enter  0x80c4,0x81
  449a5d:	and    BYTE PTR [rbx-0x17341674],dl
  449a63:	(bad)  
  449a64:	addr32 xchg esp,eax
  449a66:	jno    0x449a15
  449a68:	add    al,0xbb
  449a6a:	pop    rdi
  449a6b:	jmp    0x449a5e
  449a6d:	rex.B jae 0x449acb
  449a70:	rex.R hlt 
  449a72:	pushf  
  449a73:	mov    cl,0xac
  449a75:	push   0xffffffffb644a8ee
  449a7a:	push   0x2b
  449a7c:	rcr    DWORD PTR [rcx+0x3c],cl
  449a7f:	mov    dl,0x88
  449a81:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  449a82:	rex.WR
  449a83:	ss lahf 
  449a85:	push   rbp
  449a86:	(bad)  
  449a87:	imul   edx,edi,0xffffffe7
  449a8a:	outs   dx,BYTE PTR ds:[rsi]
  449a8b:	and    DWORD PTR [rcx],ebp
  449a8d:	mov    cl,0x3d
  449a8f:	adc    ebp,esp
  449a91:	add    DWORD PTR [rdi+rcx*2-0x182524f9],ecx
  449a98:	fidiv  DWORD PTR [rdx+0x4d]
  449a9b:	mov    ecx,DWORD PTR [rsi-0x6]
  449a9e:	loopne 0x449a5c
  449aa0:	pop    rdx
  449aa1:	add    al,0xd3
  449aa3:	out    dx,al
  449aa4:	push   rcx
  449aa5:	shr    DWORD PTR [rax+riz*2+0xe],0x5c
  449aaa:	(bad)  
  449aab:	lahf   
  449aac:	leave  
  449aad:	sti    
  449aae:	test   eax,esp
  449ab0:	fadd   st,st(0)
  449ab2:	stos   BYTE PTR es:[rdi],al
  449ab3:	je     0x449aa2
  449ab5:	push   rdi
  449ab6:	sbb    eax,0x7a238b98
  449abb:	int    0x75
  449abd:	jmp    0x449a72
  449abf:	pop    rdx
  449ac0:	sub    BYTE PTR [rbx+0x43f8e0d4],bh
  449ac6:	mov    BYTE PTR [rcx+0x535b4c7d],0x90
  449acd:	add    eax,0x1088acb0
  449ad2:	rex.WX
  449ad3:	gs fs icebp 
  449ad6:	add    eax,0x9cd65902
  449adb:	adc    ah,BYTE PTR [rcx-0x3d0703d4]
  449ae1:	and    BYTE PTR [rdi-0xe31236c],0xa4
  449ae8:	xchg   esp,eax
  449ae9:	jrcxz  0x449a80
  449aeb:	mov    dl,0xc8
  449aed:	(bad)  
  449aee:	sbb    al,0xef
  449af0:	in     eax,dx
  449af1:	and    eax,DWORD PTR [rax]
  449af3:	jg     0x449b14
  449af5:	pushf  
  449af6:	mov    bl,0x5
  449af8:	(bad)  
  449af9:	mov    ebx,0x40a1faf3
  449afe:	jbe    0x449b76
  449b00:	sub    eax,0xb64f37e4
  449b05:	jp     0x449ab4
  449b07:	fadd   QWORD PTR [rbp-0x36]
  449b0a:	and    eax,DWORD PTR [rdx]
  449b0c:	cdq    
  449b0d:	xlat   BYTE PTR ds:[rbx]
  449b0e:	(bad)  
  449b0f:	xchg   esi,eax
  449b10:	pop    rbx
  449b11:	rex.WR cmc 
  449b13:	sub    al,0xf4
  449b15:	jl     0x449af5
  449b17:	and    esi,DWORD PTR [rax-0x115a799d]
  449b1d:	jns    0x449b12
  449b1f:	idiv   DWORD PTR [rbx-0x7d]
  449b22:	test   esi,edx
  449b24:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  449b25:	rex.WR lods al,BYTE PTR ds:[rsi]
  449b27:	xrstor [rcx]
  449b2a:	imul   edx,DWORD PTR [rbx],0xffffff84
  449b2d:	xor    DWORD PTR [rcx],esi
  449b2f:	mov    ch,0x65
  449b31:	sub    DWORD PTR [rbx+rdx*1-0x6f1f244a],0xf0830188
  449b3c:	push   rax
  449b3d:	test   DWORD PTR [rdi],esp
  449b3f:	cwde   
  449b40:	fs rex.WRB in eax,0xb0
  449b44:	mov    ecx,0xfb27c5ab
  449b49:	int    0x2b
  449b4b:	adc    DWORD PTR [rbp+rsi*1+0x58],ebp
  449b4f:	or     DWORD PTR [rbx+rbx*8-0x3b],esp
  449b53:	jbe    0x449b11
  449b55:	lods   al,BYTE PTR ds:[rsi]
  449b56:	sub    al,0xdb
  449b58:	fisub  WORD PTR [rdi]
  449b5a:	mov    al,0x1a
  449b5c:	lea    esi,[rax]
  449b5e:	push   rsi
  449b5f:	jl     0x449af2
  449b61:	(bad)  
  449b62:	cmp    DWORD PTR [rbp+0x4aff04a7],ebx
  449b68:	(bad)  
  449b69:	icebp  
  449b6a:	retf   0x7cb5
  449b6d:	std    
  449b6e:	(bad)  
  449b6f:	push   0xffffffffffffffb5
  449b71:	or     al,0x8e
  449b73:	test   al,0x87
  449b75:	mov    bh,0x73
  449b77:	fisttp QWORD PTR [rdi]
  449b79:	xchg   esi,eax
  449b7a:	movabs eax,ds:0x1ccf4d7d6d654765
  449b83:	push   rdi
  449b84:	sti    
  449b85:	rex.WXB in eax,dx
  449b87:	fisub  DWORD PTR [rbp+0x74]
  449b8a:	(bad)  
  449b8b:	sar    BYTE PTR [rsi+0x2e75900],0x19
  449b92:	frstor [rdi+0x16]
  449b95:	fcmovu st,st(4)
  449b97:	xchg   DWORD PTR [rsi+0x278ebaf2],ebp
  449b9d:	adc    al,0x6e
  449b9f:	or     eax,0x487ea955
  449ba4:	cmp    BYTE PTR [rdi+0x658fb98d],ch
  449baa:	or     ecx,DWORD PTR [rdx+0x345ba711]
  449bb0:	push   rdx
  449bb1:	(bad)  
  449bb2:	mov    edi,0x2069b83e
  449bb7:	add    ebx,DWORD PTR [rbx-0x6c]
  449bba:	ficomp DWORD PTR [rcx]
  449bbc:	cwde   
  449bbd:	retf   
  449bbe:	(bad)  
  449bbf:	(bad)  
  449bc0:	(bad)  
  449bc1:	(bad)  
  449bc2:	and    bl,BYTE PTR [rdx+rsi*4-0x54e9c629]
  449bc9:	xchg   esp,eax
  449bca:	mov    eax,0x2192aa9e
  449bcf:	gs rex.RX (bad) 
  449bd2:	xchg   ebx,eax
  449bd3:	xor    DWORD PTR [rbp-0x12],edi
  449bd6:	(bad)  
  449bd7:	scas   eax,DWORD PTR es:[rdi]
  449bd8:	jns    0x449b87
  449bda:	jae    0x449bed
  449bdc:	stc    
  449bdd:	push   rbx
  449bde:	shr    esi,0xf6
  449be1:	fldcw  WORD PTR [rsi-0x6fc64144]
  449be7:	popf   
  449be8:	sbb    eax,0xbacbd32b
  449bed:	out    0xd8,al
  449bef:	cli    
  449bf0:	(bad)  
  449bf1:	mov    gs,WORD PTR [rbx-0x7f]
  449bf4:	retf   
  449bf5:	addr32 enter 0xf48f,0x7f
  449bfa:	sbb    cl,ah
  449bfc:	mov    ch,0x7d
  449bfe:	adc    eax,0xb9ed08a8
  449c03:	(bad)  
  449c04:	cmp    eax,DWORD PTR [rbx+rax*8]
  449c07:	bnd js 0x449c79
  449c0a:	(bad)  
  449c0b:	es sub al,cl
  449c0e:	cmp    cl,BYTE PTR [rdx+rbp*8]
  449c11:	test   esp,edi
  449c13:	pop    rbp
  449c14:	neg    DWORD PTR [rcx-0x3e904f85]
  449c1a:	(bad)  
  449c1b:	(bad)  
  449c1c:	(bad)
  449c1f:	sbb    eax,0xf5f3a03
  449c24:	cmp    ebx,esp
  449c26:	xor    bh,ch
  449c28:	int    0x31
  449c2a:	cmp    eax,0x60977190
  449c2f:	ds jo  0x449c9d
  449c32:	(bad)  
  449c33:	rex.WB lods rax,QWORD PTR ds:[rsi]
  449c35:	in     al,0x22
  449c37:	test   BYTE PTR [rcx],bh
  449c39:	lods   al,BYTE PTR ds:[rsi]
  449c3a:	jnp    0x449bdf
  449c3c:	retf   0xa555
  449c3f:	mov    bl,0x85
  449c41:	stos   BYTE PTR es:[rdi],al
  449c42:	pop    rbx
  449c43:	add    eax,0x4d659456
  449c48:	rex.WRXB
  449c49:	rex.WR adc rax,0xffffffffcad49579
  449c4f:	data16 add al,0xb5
  449c52:	enter  0x7165,0xea
  449c56:	(bad)  
  449c57:	int    0x78
  449c59:	test   ebx,0xf63d5ab
  449c5f:	pop    rsi
  449c60:	call   0xffffffffee1acee8
  449c65:	and    bh,dl
  449c67:	rex.RX
  449c68:	rex.W test BYTE PTR [rdi-0x72],sil
  449c6c:	iret   
  449c6d:	data16 add al,BYTE PTR [rdx+0x20]
  449c71:	mov    edx,edi
  449c73:	sub    eax,0xb56fdaa5
  449c78:	mov    edx,0x2396fdee
  449c7d:	jbe    0x449ce5
  449c7f:	fbstp  TBYTE PTR [rcx]
  449c81:	ror    DWORD PTR [rsi-0x1f134160],0x33
  449c88:	repz (bad) 
  449c8a:	pop    rcx
  449c8b:	push   rdi
  449c8c:	jnp    0x449c95
  449c8e:	mov    ch,0xd3
  449c90:	jp     0x449c91
  449c92:	mov    ebx,0xb7f004ff
  449c97:	add    esp,ebp
  449c99:	test   eax,0x2a88a1fb
  449c9e:	sub    ebx,DWORD PTR [rcx+0x59122b3]
  449ca4:	and    eax,0x692cb125
  449ca9:	jle    0x449c35
  449cab:	sar    BYTE PTR [rsi],0x97
  449cae:	mov    DWORD PTR [rbp-0x774b34f4],ebp
  449cb4:	sub    eax,0x2d6b2a6b
  449cb9:	add    BYTE PTR [rbp-0x6925084c],ch
  449cbf:	adc    DWORD PTR [rdi+0x28142e0b],ecx
  449cc5:	outs   dx,DWORD PTR ds:[rsi]
  449cc6:	mov    edi,0x503f5c15
  449ccb:	jb     0x449d38
  449ccd:	out    0xe8,eax
  449ccf:	add    cl,dl
  449cd1:	cmp    eax,0xd659557d
  449cd6:	xlat   BYTE PTR ds:[rbx]
  449cd8:	(bad)  
  449cd9:	lahf   
  449cda:	rex.RX
  449cdb:	ss in  eax,dx
  449cdd:	mov    eax,0x6ba16baf
  449ce2:	rex.WRXB sti 
  449ce4:	pop    rbx
  449ce5:	rex.WB out dx,al
  449ce7:	(bad)  
  449ce8:	mov    eax,DWORD PTR [rcx-0x482c4c3b]
  449cee:	std    
  449cef:	rex.RB
  449cf0:	rex.W fnstcw WORD PTR [rdi-0x52]
  449cf4:	mov    ch,0xab
  449cf6:	cld    
  449cf7:	scas   al,BYTE PTR es:[rdi]
  449cf8:	std    
  449cf9:	(bad)  
  449cfa:	mov    al,0x26
  449cfc:	int    0x81
  449cfe:	cmp    edx,DWORD PTR [rcx+0x541d98bb]
  449d04:	xor    DWORD PTR [rax-0x1c037d4d],esp
  449d0a:	sub    esp,0x20b36e8
  449d10:	retf   
  449d11:	mov    eax,0xdf34511e
  449d16:	xchg   ebp,eax
  449d17:	imul   edx,DWORD PTR [rcx],0x42d1bcd7
  449d1d:	xchg   ebx,eax
  449d1e:	jnp    0x449cd9
  449d20:	xchg   DWORD PTR [rip+0xffffffffac4e6c48],eax        # 0xffffffffac93096e
  449d26:	(bad)  
  449d27:	rex.RB movabs ds:0x3e1b5b1be4799c22,al
  449d31:	dec    DWORD PTR [rax+rdx*2+0x25]
  449d35:	(bad)  
  449d36:	push   rcx
  449d37:	jns    0x449d38
  449d39:	mov    ecx,0x7b9562c0
  449d3e:	ror    DWORD PTR [rbx],0x81
  449d41:	in     al,dx
  449d42:	jmp    0x449cfe
  449d44:	xor    dh,BYTE PTR [rdi+0x527d3185]
  449d4a:	xor    ch,BYTE PTR [rbx]
  449d4c:	mov    cl,0xad
  449d4e:	cmp    dl,BYTE PTR [rdi-0x1691c2bf]
  449d54:	(bad)  
  449d55:	lock and eax,0xc4f02202
  449d5b:	neg    BYTE PTR [rcx+0x3eecb8b9]
  449d61:	xor    al,0xbc
  449d63:	pop    rbx
  449d64:	rex.WR out dx,al
  449d66:	jmp    0x449d92
  449d68:	xchg   edi,eax
  449d69:	mov    bh,0xf
  449d6b:	and    esp,DWORD PTR ds:[rax]
  449d6e:	push   rsi
  449d6f:	retf   0x682d
  449d72:	sbb    eax,0xfdea8e54
  449d77:	in     eax,dx
  449d78:	(bad)  
  449d79:	sbb    al,dh
  449d7b:	and    al,0x95
  449d7e:	cmp    eax,0x8a089695
  449d83:	xchg   esp,eax
  449d84:	retf   
  449d85:	adc    DWORD PTR [rbp+0x5c],0xd812b3a5
  449d8c:	ret    0x128f
  449d8f:	sbb    cl,BYTE PTR [rcx-0x2c227e34]
  449d95:	pop    rbp
  449d96:	or     BYTE PTR [rsp+rcx*1],ch
  449d99:	pop    rcx
  449d9a:	(bad)  
  449d9b:	xchg   edx,eax
  449d9c:	sbb    eax,0xeed662d
  449da1:	fs push 0xffffffffbc9ecd2b
  449da7:	rcl    BYTE PTR [rsi-0x2a369a4a],cl
  449dad:	rex or esp,ebp
  449db0:	jp     0x449d7c
  449db2:	movsxd ebp,DWORD PTR [rbx]
  449db4:	(bad)  
  449db5:	outs   dx,BYTE PTR ds:[rsi]
  449db6:	call   QWORD PTR [rax]
  449db8:	add    al,0xb
  449dba:	(bad)  
  449dbb:	out    0xa4,al
  449dbd:	rex.R ret 0x1e67
  449dc1:	ficom  DWORD PTR [rax+0x24031725]
  449dc7:	fcmovnu st,st(1)
  449dc9:	(bad)  
  449dca:	jae    0x449d7a
  449dcc:	mov    ecx,0x3cda7db6
  449dd1:	mov    esp,0xc81157ed
  449dd6:	(bad)  
  449dd7:	rex.WX cmc 
  449dd9:	and    DWORD PTR [rcx],ebx
  449ddb:	sub    eax,0xcfb72980
  449de0:	(bad)  
  449de1:	enter  0xf5d8,0x99
  449de5:	push   rbp
  449de6:	(bad)  
  449de7:	pop    rdx
  449de8:	mov    ecx,0x2ede4ee
  449ded:	jbe    0x449e3f
  449def:	mov    BYTE PTR [rax-0x37e4e0b2],0x64
  449df6:	out    0x7f,al
  449df8:	mov    bl,0x1
  449dfa:	add    bh,BYTE PTR [rsi+0x5459021]
  449e00:	mov    esi,0xd6b56bcc
  449e05:	and    dl,BYTE PTR [rcx]
  449e07:	add    ah,BYTE PTR [rbx]
  449e09:	jmp    0x449dc6
  449e0b:	add    ah,BYTE PTR [rbp-0x4f065354]
  449e11:	(bad)  
  449e12:	and    eax,esi
  449e14:	xor    BYTE PTR [rsi],al
  449e16:	and    bh,BYTE PTR [rsi]
  449e18:	lock rol BYTE PTR ds:[rbp-0x47dada7b],1
  449e20:	jbe    0x449db3
  449e22:	sar    ah,cl
  449e24:	(bad)  
  449e25:	leave  
  449e26:	pop    rbp
  449e27:	push   rbx
  449e28:	leave  
  449e29:	mov    edx,0x7ce92014
  449e2e:	and    BYTE PTR [rbx-0x27ee66d6],bl
  449e34:	ret    
  449e35:	(bad)  
  449e36:	xor    ah,dl
  449e38:	rex.WR movabs al,ds:0x6581975a56af360c
  449e42:	jae    0x449e9d
  449e44:	jbe    0x449eae
  449e46:	jo     0x449e3f
  449e48:	xchg   ebp,eax
  449e49:	int    0x93
  449e4b:	mov    bh,0xf
  449e4d:	mul    BYTE PTR [rbx]
  449e4f:	xor    al,0x41
  449e51:	jb     0x449def
  449e53:	mov    r8,rax
  449e56:	fmulp  st(3),st
  449e58:	fcomp  st(2)
  449e5a:	sbb    BYTE PTR [rsi-0xc5af830],dl
  449e60:	rex.RX
  449e61:	ss call 0x228776ca
  449e67:	push   rsp
  449e68:	(bad)  
  449e69:	rex.RX (bad) 
  449e6b:	outs   dx,DWORD PTR ds:[rsi]
  449e6c:	(bad)  
  449e6d:	xor    dl,BYTE PTR [rdi+0x1a9e1752]
  449e73:	and    BYTE PTR [rcx],ah
  449e75:	shl    BYTE PTR [rcx],cl
  449e77:	out    0x35,eax
  449e79:	add    ah,BYTE PTR [rip+0xffffffffdd7f67ae]        # 0xffffffffddc4062d
  449e7f:	xlat   BYTE PTR ds:[rbx]
  449e80:	pop    rbp
  449e81:	or     ch,BYTE PTR [rdx+rsi*1+0x5892ab23]
  449e88:	rex.RX jbe 0x449e86
  449e8b:	cmp    BYTE PTR ss:[edx],bh
  449e8f:	rex ins BYTE PTR es:[rdi],dx
  449e91:	mov    bh,0x75
  449e93:	xchg   esp,eax
  449e94:	loopne 0x449e48
  449e96:	lahf   
  449e97:	jns    0x449ec1
  449e99:	ret    0x6b6b
  449e9c:	es push rax
  449e9e:	(bad)  
  449e9f:	(bad)  
  449ea0:	(bad)  
  449ea1:	mov    dl,0xbb
  449ea3:	(bad)
  449ea6:	fdivr  QWORD PTR [rcx+rbx*8+0x5c]
  449eaa:	xchg   edi,eax
  449eab:	or     al,ch
  449ead:	fstp   TBYTE PTR [rcx+0x2]
  449eb0:	mov    bh,0x93
  449eb2:	repnz and bl,BYTE PTR fs:[rip+0x5060f8e1]        # 0x50a5979b
  449eba:	(bad)  
  449ebc:	(bad)  
  449ebd:	jno    0x449e43
  449ebf:	shr    edx,0xf4
  449ec2:	xor    BYTE PTR [rbx+0x737d1012],bh
  449ec8:	or     al,0x91
  449eca:	test   eax,0xc2eab0b9
  449ecf:	(bad)  
  449ed0:	jns    0x449ee1
  449ed2:	imul   BYTE PTR [rsi-0x7d]
  449ed5:	xor    DWORD PTR [rdx],0x6
  449ed8:	je     0x449f34
  449eda:	xchg   ch,dh
  449edc:	jp     0x449e81
  449ede:	loopne 0x449eff
  449ee0:	add    ah,BYTE PTR [rbp+0x720a3230]
  449ee6:	repz rex.WRX (bad) 
  449ee9:	xor    esp,DWORD PTR [rdx]
  449eeb:	scas   eax,DWORD PTR es:[rdi]
  449eec:	cmp    ebp,esp
  449eee:	push   rcx
  449eef:	add    DWORD PTR [rip+0x8c9ab23],0x704674a9        # 0x90e4a1c
  449ef9:	or     edx,DWORD PTR [rbx-0x78]
  449efc:	push   rax
  449efd:	div    DWORD PTR [rbp+rbp*4+0x1e]
  449f01:	fwait
  449f02:	(bad)  
  449f03:	and    ebx,DWORD PTR [rcx-0x7e8e1207]
  449f09:	jb     0x449ee5
  449f0b:	stos   BYTE PTR es:[rdi],al
  449f0c:	lock (bad) 
  449f0e:	(bad)  
  449f0f:	jnp    0x449f16
  449f11:	mov    dl,0x2d
  449f13:	mov    dl,0x2b
  449f15:	(bad)  
  449f16:	cmc    
  449f17:	sbb    ebp,DWORD PTR [r14-0x12cdc517]
  449f1e:	(bad)  
  449f1f:	rex mov edi,0x814bf410
  449f25:	fild   DWORD PTR [rsi+riz*8-0x3d]
  449f29:	(bad)
  449f2d:	(bad)  [rbx]
  449f2f:	in     eax,dx
  449f30:	sbb    bh,al
  449f32:	test   eax,0x6a604a10
  449f37:	cmc    
  449f38:	fldenv [rdx-0x65]
  449f3b:	rex.RXB and DWORD PTR [r13+0x57],r12d
  449f3f:	pop    rcx
  449f40:	(bad)  
  449f42:	mov    ?,ebp
  449f44:	rex.WR mov sil,0x39
  449f47:	lock clc 
  449f49:	sub    DWORD PTR [rbx+0x389d283],ebp
  449f4f:	sbb    esi,esp
  449f51:	(bad)  
  449f52:	outs   dx,DWORD PTR ds:[rsi]
  449f53:	adc    DWORD PTR [rcx],esp
  449f55:	loop   0x449fbf
  449f57:	mul    DWORD PTR [rbx+0x65]
  449f5a:	rex.WRX and rax,0x1ebcca4
  449f60:	(bad)  
  449f61:	rex.R jns 0x449fa9
  449f64:	and    bl,al
  449f66:	pop    rdx
  449f67:	call   0x5508f7ad
  449f6c:	and    esp,DWORD PTR cs:[rbx-0xfd6892e]
  449f73:	fs xchg esp,eax
  449f75:	xchg   edx,eax
  449f76:	adc    al,0x61
  449f78:	xchg   ebp,eax
  449f79:	mov    edi,0x7282a9ee
  449f7e:	xlat   BYTE PTR ds:[rbx]
  449f7f:	fdiv   QWORD PTR [rbp+0x36]
  449f82:	js     0x449fcb
  449f84:	mov    ebx,0x8af25bc6
  449f89:	jo     0x449f3d
  449f8b:	mov    ecx,0x20312a79
  449f90:	adc    BYTE PTR [rsi-0x6b],bl
  449f93:	ror    BYTE PTR [rdx+0x65],1
  449f96:	stos   DWORD PTR es:[rdi],eax
  449f97:	(bad)  
  449f98:	enter  0x4fab,0xe6
  449f9c:	shl    DWORD PTR [rbp+0x3b],0xc7
  449fa0:	rex.WX hlt 
  449fa2:	push   0x20
  449fa4:	jae    0x44a021
  449fa6:	scas   eax,DWORD PTR es:[rdi]
  449fa7:	(bad)  
  449fa9:	or     esp,DWORD PTR gs:[rbp+rdx*2+0x46]
  449fae:	sub    ecx,ebp
  449fb0:	fucomp st(7)
  449fb2:	rex.RB hlt 
  449fb4:	jmp    0x449fbb
  449fb6:	push   rbp
  449fb7:	or     ch,bl
  449fb9:	(bad)  
  449fba:	adc    DWORD PTR [rcx-0x32],esi
  449fbd:	rex.WR loopne 0x44a016
  449fc0:	xchg   esi,eax
  449fc1:	test   edx,0x83d5627e
  449fc7:	mov    ebp,0x8ba0e0db
  449fcc:	add    DWORD PTR [rip+0x490b3046],ebx        # 0x494fd018
  449fd2:	mov    cl,ah
  449fd4:	jle    0x449fff
  449fd6:	ret    0x872a
  449fd9:	lods   eax,DWORD PTR ds:[rsi]
  449fda:	and    ecx,DWORD PTR ss:[rdi+0x7b3955d2]
  449fe1:	sti    
  449fe2:	add    cl,dh
  449fe4:	outs   dx,BYTE PTR ds:[rsi]
  449fe5:	adc    ch,BYTE PTR [rax*1-0x7a537e75]
  449fec:	cwde   
  449fed:	out    0xc2,al
  449fef:	imul   BYTE PTR [rbx]
  449ff1:	jg     0x44a058
  449ff3:	mov    ecx,DWORD PTR ds:[rax-0x36]
  449ff7:	pop    rbx
  449ff8:	mov    bh,0x94
  449ffa:	scas   al,BYTE PTR es:[rdi]
  449ffb:	adc    eax,0x49c8cec8
  44a000:	and    BYTE PTR [rax+0x2f1f43c8],dl
  44a006:	outs   dx,BYTE PTR ds:[rsi]
  44a007:	ins    DWORD PTR es:[rdi],dx
  44a008:	pop    rdx
  44a009:	add    BYTE PTR [rbx+0x34],al
  44a00c:	gs mov dl,0x85
  44a00f:	and    ebx,ecx
  44a011:	adc    BYTE PTR [rcx-0x21],ah
  44a014:	ror    DWORD PTR [rsi-0x65dd5cd7],cl
  44a01a:	ins    BYTE PTR es:[rdi],dx
  44a01b:	jge    0x449fa3
  44a01d:	sar    BYTE PTR [rsi],0x25
  44a020:	xor    DWORD PTR [rcx-0x24809067],edx
  44a026:	ja     0x44a01b
  44a028:	jbe    0x44a007
  44a02a:	ins    DWORD PTR es:[rdi],dx
  44a02b:	jns    0x44a082
  44a02d:	fcmovu st,st(3)
  44a02f:	xchg   DWORD PTR [rax-0x24eff051],ebp
  44a035:	fucomip st,st(6)
  44a037:	(bad)  
  44a038:	imul   edi,edi,0xfffffff0
  44a03b:	rol    BYTE PTR [rbx+0x22],0x7
  44a03f:	popf   
  44a040:	sar    DWORD PTR [rdx-0x61],cl
  44a043:	mov    ebx,0xb644aacf
  44a048:	jo     0x449fed
  44a04a:	mov    esp,0x18be0e5d
  44a04f:	jl     0x44a087
  44a051:	adc    al,0xe5
  44a054:	sub    al,0x32
  44a056:	retf   0xb26c
  44a059:	mov    cl,0x87
  44a05b:	fdiv   QWORD PTR cs:[rdx+0x43ccd591]
  44a062:	int    0x75
  44a064:	adc    DWORD PTR [rdi-0x5a],edx
  44a067:	push   rbx
  44a068:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  44a069:	pop    rdx
  44a06a:	mov    DWORD PTR [rsi+0x50],eax
  44a06d:	jae    0x44a0c5
  44a06f:	jae    0x44a0bc
  44a071:	mov    ecx,DWORD PTR [rbp-0x12]
  44a074:	fwait
  44a075:	and    dh,BYTE PTR [rcx-0x43193f05]
  44a07b:	outs   dx,BYTE PTR ds:[rsi]
  44a07c:	repz sub BYTE PTR [rcx+0x3d],bh
  44a080:	cmp    cl,ah
  44a082:	ss mov ?,esi
  44a085:	out    0x83,al
  44a087:	retf   
  44a088:	(bad)  
  44a089:	retf   0xa5e4
  44a08c:	rex test eax,0xa2fa708b
  44a092:	pop    rsp
  44a093:	ja     0x44a0f0
  44a095:	addr32 xor eax,edi
  44a098:	fs adc al,0x8a
  44a09c:	ins    BYTE PTR es:[rdi],dx
  44a09d:	rex.R shl BYTE PTR [rbp-0x360948a3],0xd6
  44a0a5:	outs   dx,BYTE PTR ds:[rsi]
  44a0a6:	push   rdi
  44a0a7:	adc    DWORD PTR [rdi],eax
  44a0a9:	(bad)  
  44a0aa:	(bad)  
  44a0ab:	std    
  44a0ac:	rex.RXB (bad) 
  44a0ae:	add    al,0xa5
  44a0b0:	mov    gs,WORD PTR [rcx-0x71ce4f87]
  44a0b6:	push   rdi
  44a0b7:	movabs ds:0xa031f01d98bb913b,eax
  44a0c0:	or     DWORD PTR [rax-0x4a],0xffffffa7
  44a0c4:	add    eax,0x583dbfba
  44a0c9:	and    DWORD PTR [rbx-0x1f4fdf02],edx
  44a0cf:	movsxd ebx,edi
  44a0d1:	xchg   ebp,eax
  44a0d2:	add    dh,bl
  44a0d4:	pop    rdx
  44a0d5:	mov    bh,0x7a
  44a0d7:	int3   
  44a0d8:	rex.WRXB sub rax,0xffffffffca92c95a
  44a0de:	fs (bad) 
  44a0e0:	jns    0x44a15d
  44a0e2:	movabs al,ds:0x50657ff7504a7e44
  44a0eb:	add    al,0x55
  44a0ed:	(bad)  
  44a0ee:	sub    dh,BYTE PTR [rcx-0x53]
  44a0f1:	in     al,0x5a
  44a0f3:	gs ss iret 
  44a0f6:	xchg   esp,eax
  44a0f7:	jns    0x44a08e
  44a0f9:	mov    ah,0x2
  44a0fc:	test   eax,0xdb9575cc
  44a101:	or     BYTE PTR [rbp+0x72aa9e4c],al
  44a107:	pop    rbp
  44a108:	(bad)  
  44a109:	push   rbx
  44a10a:	mov    gs,WORD PTR [rbx-0x39]
  44a10d:	rex.X adc edx,edx
  44a110:	(bad)  
  44a111:	(bad)  
  44a112:	mov    eax,0xd973eb8f
  44a117:	push   rdi
  44a118:	pop    rbx
  44a119:	add    al,0x82
  44a11b:	adc    BYTE PTR [rdi+rbx*2-0x6f],dl
  44a11f:	xlat   BYTE PTR ds:[rbx]
  44a120:	jnp    0x44a0c7
  44a122:	add    DWORD PTR ds:[rax],esp
  44a125:	add    al,0xe6
  44a127:	int    0x35
  44a129:	not    DWORD PTR [rbp+0x5e]
  44a12c:	inc    DWORD PTR [rcx-0x20]
  44a12f:	xchg   ecx,eax
  44a130:	rex.WRB std 
  44a132:	(bad)  
  44a133:	loopne 0x44a152
  44a135:	(bad)  
  44a136:	sti    
  44a137:	fdivr  DWORD PTR [rbp+0x34]
  44a13a:	mov    WORD PTR [rcx],es
  44a13c:	add    DWORD PTR [rbx-0x26a635fc],ecx
  44a142:	(bad)  
  44a143:	sbb    al,0x56
  44a145:	cdq    
  44a146:	imul   edi,edi,0x60c3f062
  44a14c:	and    eax,0x25e55c40
  44a151:	loop   0x44a1a7
  44a153:	ss jne 0x44a112
  44a156:	(bad)  [rax]
  44a158:	(bad)  
  44a159:	or     ebx,DWORD PTR [rsi+0x1e]
  44a15c:	cwde   
  44a15d:	mov    bh,0xd6
  44a15f:	ins    DWORD PTR es:[rdi],dx
  44a160:	sbb    eax,0x604a4e0b
  44a165:	or     ecx,DWORD PTR [rsi+0x32]
  44a168:	mov    dh,0x8c
  44a16a:	call   0x72efc687
  44a16f:	fdiv   QWORD PTR [rcx-0x4e]
  44a172:	mov    al,0xcf
  44a174:	gs (bad) 
  44a176:	stc    
  44a177:	jbe    0x44a1b6
  44a179:	sbb    DWORD PTR [rsi+riz*1+0x78],esi
  44a17d:	addr32 mov al,ds:0xa650fd0d
  44a183:	jg     0x44a12b
  44a185:	popf   
  44a186:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  44a187:	bswap  eax
  44a189:	outs   dx,BYTE PTR ds:[rsi]
  44a18a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  44a18b:	fldcw  WORD PTR [rdx]
  44a18d:	mov    cl,0xcf
  44a18f:	adc    esi,edx
  44a191:	cmp    al,0x76
  44a193:	ja     0x44a1e5
  44a195:	sub    ecx,ebp
  44a197:	add    al,0xc4
  44a199:	or     dh,BYTE PTR [rbx+0x4eba7c5]
  44a19f:	mov    BYTE PTR [rdx+0x55b0b76c],ch
  44a1a5:	and    al,0xb5
  44a1a7:	pop    rax
  44a1a8:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  44a1a9:	jl     0x44a221
  44a1ab:	scas   eax,DWORD PTR es:[rdi]
  44a1ac:	fnstenv [rip+0xdbb793a]        # 0xe001aec
  44a1b2:	(bad)  
  44a1b3:	(bad)  
  44a1b4:	sbb    BYTE PTR [rax],ch
  44a1b6:	(bad)  
  44a1b7:	and    ah,BYTE PTR [rax-0x67ef4954]
  44a1bd:	fcmovne st,st(2)
  44a1bf:	sahf   
  44a1c0:	(bad)  
  44a1c1:	jp     0x44a1f4
  44a1c3:	push   rax
  44a1c4:	and    ecx,DWORD PTR ss:[rdx]
  44a1c7:	loop   0x44a1ea
  44a1c9:	xor    edx,0x320c03d9
  44a1cf:	test   eax,0x12192585
  44a1d4:	cdq    
  44a1d5:	gs xor al,0xf7
  44a1d8:	ins    BYTE PTR es:[rdi],dx
  44a1d9:	out    0xda,eax
  44a1db:	addr32 mov dl,0xb3
  44a1de:	ss xchg ebp,eax
  44a1e0:	ret    0x473e
  44a1e3:	retf   0x363
  44a1e6:	(bad)  
  44a1e8:	addr32 out 0xc5,al
  44a1eb:	jne    0x44a1f8
  44a1ed:	leave  
  44a1ee:	addr32 out 0xa7,al
  44a1f1:	rex.WXB ins DWORD PTR es:[rdi],dx
  44a1f3:	(bad)  
  44a1f4:	icebp  
  44a1f5:	clc    
  44a1f6:	rex.W (bad) 
  44a1f8:	(bad)  
  44a1f9:	pop    rdx
  44a1fa:	(bad)  
  44a1fb:	lods   eax,DWORD PTR ds:[rsi]
  44a1fc:	or     al,0xcb
  44a1fe:	(bad)  
  44a1ff:	gs pop rax
  44a201:	sbb    ecx,edi
  44a203:	rex.WRB
  44a204:	mov    DWORD PTR [r14+rsi*8+0x6e1e6b1c],ecx
  44a20c:	(bad)  
  44a20d:	or     esi,DWORD PTR [rdx]
  44a20f:	test   eax,0x201a6c8c
  44a214:	repz jp 0x44a1d6
  44a217:	sbb    al,0xb8
  44a219:	(bad)
  44a21c:	and    BYTE PTR [rsi-0x5f08a30d],dh
  44a222:	jno    0x44a27e
  44a224:	out    dx,eax
  44a225:	imul   esi,edi,0xffffff95
  44a228:	(bad)  
  44a229:	mov    ch,0x30
  44a22b:	gs jle 0x44a298
  44a22e:	(bad)  
  44a22f:	sbb    BYTE PTR [rcx-0x3fd4bb9c],ch
  44a235:	out    0xb5,al
  44a237:	retf   0x57e2
  44a23a:	(bad)  
  44a23b:	mov    dl,0xa9
  44a23d:	jb     0x44a216
  44a23f:	(bad)  
  44a240:	(bad)  
  44a241:	lahf   
  44a242:	add    al,0xb2
  44a244:	sahf   
  44a245:	in     al,dx
  44a246:	mov    ebp,DWORD PTR [rax]
  44a248:	xor    bl,BYTE PTR [rsi-0x74e31994]
  44a24e:	rex.RXB mov r10b,0xea
  44a251:	rex.X and BYTE PTR [rbx],al
  44a254:	(bad)  
  44a255:	mov    bh,0xf7
  44a257:	fidiv  DWORD PTR [rcx-0x74]
  44a25a:	jae    0x44a23b
  44a25c:	sbb    bl,BYTE PTR [rax-0x33]
  44a25f:	xchg   ebp,eax
  44a260:	mov    cl,0x9
  44a262:	adc    BYTE PTR [rdx],0x19
  44a265:	or     ebp,0x32830999
  44a26b:	pop    rbp
  44a26c:	(bad)  
  44a26d:	push   rsp
  44a26e:	push   rdx
  44a26f:	adc    eax,DWORD PTR [rdx]
  44a271:	sbb    DWORD PTR [rcx+0x76],ebx
  44a274:	push   rsi
  44a275:	xor    ch,bl
  44a277:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  44a278:	sub    edi,DWORD PTR ds:[rcx-0x69]
  44a27c:	fstp   TBYTE PTR [rsi+0x59]
  44a27f:	fsubr  DWORD PTR [rip+0xffffffff8736642a]        # 0xffffffff877b06af
  44a285:	mov    esi,0xc0da705b
  44a28a:	xor    eax,0x256b5e6b
  44a28f:	pop    rbx
  44a290:	gs (bad) 
  44a292:	and    DWORD PTR [rsi+0x5],ecx
  44a295:	xor    BYTE PTR [rcx+rbp*1],ah
  44a298:	rex.X pop rbx
  44a29a:	movabs eax,ds:0xecc5dc89dfda39de
  44a2a3:	or     BYTE PTR [rbp-0xbece2ff],0x88
  44a2aa:	movsxd edx,DWORD PTR [rbp-0x5f6ae6e9]
  44a2b0:	mov    bl,0x81
  44a2b2:	int3   
  44a2b3:	imul   esi,DWORD PTR [rip+0x7b81f3f8],0xffffffbb        # 0x7bc696b2
  44a2ba:	push   rsi
  44a2bb:	fwait
  44a2bc:	gs pop rbx
  44a2be:	pop    rcx
  44a2bf:	adc    al,0x69
  44a2c1:	int3   
  44a2c2:	(bad)  
  44a2c3:	gs push rbx
  44a2c5:	out    0x22,eax
  44a2c7:	mov    dl,0xc5
  44a2c9:	and    bl,dh
  44a2cb:	(bad)  
  44a2cc:	cdq    
  44a2cd:	jb     0x44a2f0
  44a2cf:	mov    al,0x28
  44a2d1:	in     eax,0xd5
  44a2d3:	(bad)  
  44a2d4:	xchg   esi,eax
  44a2d5:	adc    dl,BYTE PTR [rbp+0x59]
  44a2d8:	mov    WORD PTR [rdx+rsi*4-0x59],cs
  44a2dc:	ins    BYTE PTR es:[rdi],dx
  44a2dd:	mov    DWORD PTR [rax+0x11ed61ca],edx
  44a2e3:	add    BYTE PTR [rcx+0x13],bl
  44a2e6:	jns    0x44a295
  44a2e8:	(bad)  
  44a2e9:	jnp    0x44a33b
  44a2eb:	rex.XB jnp 0x44a2d4
  44a2ee:	rcl    BYTE PTR [rsi],1
  44a2f0:	mov    ch,0x5e
  44a2f2:	adc    al,0xc8
  44a2f4:	enter  0xbb56,0x9
  44a2f8:	cmp    BYTE PTR [rsi+0x5b],0x54
  44a2fc:	xchg   edx,eax
  44a2fd:	in     eax,dx
  44a2fe:	jmp    0x44a36f
  44a300:	lahf   
  44a301:	and    ebp,DWORD PTR [rdx+0x205ced39]
  44a307:	fwait
  44a308:	adc    cl,BYTE PTR [rdx]
  44a30a:	fs jbe 0x44a2c9
  44a30d:	mov    dh,0xb6
  44a30f:	(bad)  
  44a310:	sub    al,BYTE PTR [rdi]
  44a312:	scas   eax,DWORD PTR es:[rdi]
  44a313:	rex.XB cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  44a315:	cmp    dh,bl
  44a317:	clc    
  44a318:	(bad)  
  44a319:	pop    rax
  44a31a:	rex.RXB cmc 
  44a31c:	mov    esi,0x630cdf75
  44a321:	(bad)  
  44a322:	sbb    BYTE PTR [rax-0x7f8b83f8],ch
  44a328:	shl    BYTE PTR [rdi],0x68
  44a32b:	(bad)  
  44a32c:	pop    rcx
  44a32d:	sub    al,0x92
  44a32f:	test   DWORD PTR [rbp+0x52],esp
  44a332:	repz pop rbp
  44a334:	or     ecx,DWORD PTR [rsi+riz*8-0x7a]
  44a338:	enter  0xb081,0xee
  44a33c:	xlat   BYTE PTR ds:[rbx]
  44a33d:	pop    rdx
  44a33e:	mov    WORD PTR [rdx+0x6a],ss
  44a341:	fwait
  44a342:	addr32 pop rdx
  44a344:	rex.WR
  44a345:	rex.X
  44a346:	in     ax,0xb5
  44a349:	int3   
  44a34a:	xchg   eax,edx
  44a34c:	(bad)  
  44a34d:	rol    BYTE PTR [rax+0x4e],0xed
  44a351:	and    BYTE PTR [rax-0x744774f4],dh
  44a357:	or     DWORD PTR [rbx+rdi*4-0x255b37f0],0x1f35e8b1
  44a362:	cwde   
  44a363:	jae    0x44a364
  44a365:	rex.WRB movabs al,ds:0xdccabb94f68c7614
  44a36f:	scas   eax,DWORD PTR es:[rdi]
  44a370:	(bad)  
  44a371:	rex.RXB (bad) 
  44a373:	cli    
  44a374:	rex.WRX or al,0xf4
  44a377:	pop    rcx
  44a378:	imul   ebp,edi,0x25c13def
  44a37e:	add    dh,BYTE PTR [rbx-0xe]
  44a381:	(bad)  
  44a382:	mov    ebx,0x38d6ef9b
  44a387:	mov    bh,0xe7
  44a389:	mov    ebp,0xf9f70d7e
  44a38e:	in     al,dx
  44a38f:	je     0x44a312
  44a391:	mov    cl,0x39
  44a393:	scas   eax,DWORD PTR es:[rdi]
  44a394:	xchg   ebx,eax
  44a395:	mov    bh,0xdb
  44a397:	loopne 0x44a319
  44a399:	pop    QWORD PTR [rcx]
  44a39b:	sbb    eax,0x51e74b74
  44a3a0:	lea    ebx,[rax]
  44a3a2:	out    0xb5,al
  44a3a4:	(bad)  
  44a3a5:	or     al,0xcc
  44a3a7:	rex.WB fnsave [r14-0x7ca5154f]
  44a3ae:	jo     0x44a39b
  44a3b0:	out    0xc4,al
  44a3b2:	(bad)  
  44a3b3:	xor    eax,0x41e049b8
  44a3b8:	or     DWORD PTR [rbx-0x7196f7b4],ecx
  44a3be:	mov    bh,BYTE PTR [rsi+rdx*2]
  44a3c1:	jae    0x44a358
  44a3c3:	movabs ds:0x23577825605c7808,al
  44a3cc:	retf   
  44a3cd:	rex.X pop rsi
  44a3cf:	(bad)
  44a3d3:	sbb    esp,esi
  44a3d5:	int    0x1
  44a3d7:	xchg   edx,eax
  44a3d8:	cmp    ebx,edi
  44a3da:	or     dh,BYTE PTR [rbx-0x2ee407c2]
  44a3e0:	sbb    eax,0xe32af323
  44a3e5:	fnstsw WORD PTR [rbx]
  44a3e7:	scas   al,BYTE PTR es:[rdi]
  44a3e8:	push   rdx
  44a3e9:	pop    rbp
  44a3ea:	pop    rdi
  44a3eb:	pop    rsp
  44a3ec:	sti    
  44a3ed:	jae    0x44a3dc
  44a3ef:	fisubr DWORD PTR [rsi+0x13]
  44a3f2:	mov    ecx,0x244eac9e
  44a3f7:	(bad)  
  44a3f8:	(bad)  
  44a3f9:	scas   al,BYTE PTR es:[rdi]
  44a3fa:	jmp    0x55027b37
  44a3ff:	lock (bad) 
  44a401:	add    cl,ch
  44a403:	in     eax,dx
  44a404:	push   rbx
  44a405:	rex.X pop rbx
  44a407:	shl    BYTE PTR [rdx+0x187aa520],0x3a
  44a40e:	enter  0x9a02,0x2a
  44a412:	jrcxz  0x44a394
  44a414:	ja     0x44a470
  44a416:	out    dx,eax
  44a417:	movsxd esi,edi
  44a419:	xchg   ecx,eax
  44a41a:	and    ch,bh
  44a41c:	rex.X and eax,edx
  44a41f:	(bad)  
  44a420:	repz push 0x41
  44a423:	(bad)  
  44a424:	sub    DWORD PTR [rax+rcx*8+0x2e020222],0x330f506
  44a42f:	xchg   edx,eax
  44a430:	sub    BYTE PTR [rbp+0x11de084f],bl
  44a436:	enter  0xeea4,0x99
  44a43a:	(bad)  
  44a43b:	mov    bl,0xca
  44a43d:	mov    WORD PTR [rsi+0x11],gs
  44a440:	and    DWORD PTR [rcx-0x7e0209ee],esi
  44a446:	push   rdx
  44a447:	sbb    ecx,DWORD PTR [rcx+0x1c]
  44a44a:	addr32 mov edi,0x55d659f2
  44a450:	fisubr WORD PTR [rdx]
  44a452:	rex.WRB fist WORD PTR [r8]
  44a455:	and    BYTE PTR [rcx+0x5ebc89ac],ch
  44a45b:	(bad)  
  44a45d:	rex.RB
  44a45e:	ss gs cmc 
  44a461:	xchg   ebp,eax
  44a462:	adc    DWORD PTR [rbp+0x535bb7f6],0xffffffb5
  44a469:	shr    ah,cl
  44a46b:	pop    rsi
  44a46c:	mov    cl,0xb9
  44a46e:	repnz test ebx,ebx
  44a471:	xor    DWORD PTR [rcx+rax*2],eax
  44a474:	mov    ecx,0x7760857d
  44a479:	or     al,0xc6
  44a47c:	data16 sbb al,0xd7
  44a47f:	bswap  esp
  44a481:	jg     0x44a414
  44a483:	(bad)  
  44a484:	ds sub ecx,esp
  44a487:	mov    ?,WORD PTR [rdi]
  44a489:	addr32 (bad) 
  44a48b:	xchg   edx,eax
  44a48c:	je     0x44a4b4
  44a48e:	jg     0x44a42b
  44a490:	iret   
  44a491:	(bad)
  44a495:	fadd   st(5),st
  44a497:	in     al,dx
  44a498:	or     BYTE PTR [rbx+0x40421d01],0xf3
  44a49f:	rex.WRB in eax,0x6e
  44a4a2:	gs ss add al,0x55
  44a4a6:	jbe    0x44a4d2
  44a4a8:	jg     0x44a43b
  44a4aa:	or     BYTE PTR [rcx+0x3c],ch
  44a4ad:	(bad)  
  44a4ae:	test   BYTE PTR [rax-0x375e9fb8],bl
  44a4b4:	ds in  al,0x7b
  44a4b7:	rex.WRXB mov r8b,0x10
  44a4ba:	pop    rax
  44a4bb:	gs ss rex.RXB
  44a4be:	rex.RB sbb al,0x59
  44a4c1:	ins    DWORD PTR es:[rdi],dx
  44a4c2:	cmp    BYTE PTR cs:[rsi],dh
  44a4c5:	js     0x44a536
  44a4c7:	movabs al,ds:0xfb50403e61c5963c
  44a4d0:	(bad)  
  44a4d2:	xor    eax,0xfb6445e7
  44a4d7:	xchg   esp,eax
  44a4d8:	fild   WORD PTR [rbx+rax*2-0x5adf490a]
  44a4df:	rex.WRB
  44a4e0:	repz out dx,al
  44a4e2:	sysret 
  44a4e4:	(bad)  
  44a4e5:	lods   al,BYTE PTR ds:[rsi]
  44a4e6:	fdiv   QWORD PTR [rbx-0x2902d28b]
  44a4ec:	(bad)  
  44a4ed:	sbb    DWORD PTR [rdx+0x26],esi
  44a4f0:	rex jb 0x44a498
  44a4f3:	mov    cl,0x32
  44a4f5:	fcomp  DWORD PTR [rsi+rdx*2+0x9]
  44a4f9:	(bad)  
  44a4fa:	(bad)  
  44a4fb:	sub    cl,BYTE PTR [rax]
  44a4fd:	movabs ds:0xbb87b80729da3c62,al
  44a506:	adc    ch,BYTE PTR [rax]
  44a508:	leave  
  44a509:	in     eax,dx
  44a50a:	fcmovnu st,st(6)
  44a50c:	fidiv  DWORD PTR [rcx]
  44a50e:	outs   dx,DWORD PTR ds:[rsi]
  44a50f:	jbe    0x44a49e
  44a511:	add    ecx,esi
  44a513:	push   rcx
  44a514:	mov    ebp,0xc327dd4f
  44a519:	sbb    BYTE PTR [rax],dl
  44a51b:	movabs al,ds:0x5795aceac7900d1f
  44a524:	(bad)  
  44a525:	push   rcx
  44a526:	movabs ds:0x917994446c08322,al
  44a52f:	fisttp QWORD PTR [rdi+0x45]
  44a532:	je     0x44a51b
  44a534:	js     0x44a4eb
  44a536:	adc    ch,BYTE PTR [rip+0xffffffffb990222b]        # 0xffffffffb9d4c767
  44a53c:	mov    cl,0xb2
  44a53e:	push   rdi
  44a53f:	ss rex.R sbb al,0xa4
  44a543:	xor    eax,DWORD PTR [rdi+0x46]
  44a546:	js     0x44a4d3
  44a548:	pop    rbx
  44a549:	rex.WX pop rsi
  44a54b:	jae    0x44a5a0
  44a54d:	in     al,0x95
  44a54f:	pop    rbp
  44a550:	int    0x4f
  44a552:	gs pop rdi
  44a554:	cdq    
  44a555:	push   rbx
  44a556:	pop    rcx
  44a557:	mov    ?,esp
  44a559:	(bad)  
  44a55a:	mov    esp,0xfcf5d790
  44a55f:	sub    eax,0x5aff9b53
  44a564:	test   eax,0x12fe8ed6
  44a569:	or     eax,0x4659599f
  44a56e:	pop    rsi
  44a56f:	pop    rcx
  44a570:	fcomp  st(4)
  44a572:	xlat   BYTE PTR ds:[rbx]
  44a573:	mov    ecx,0x81f3dee6
  44a578:	sub    al,0x5b
  44a57a:	stos   DWORD PTR es:[rdi],eax
  44a57b:	(bad)  
  44a57c:	out    0xcc,eax
  44a57e:	jnp    0x44a537
  44a580:	lods   eax,DWORD PTR ds:[rsi]
  44a581:	sub    al,0x54
  44a583:	int    0xb4
  44a585:	ss mov ah,0x63
  44a588:	sbb    ah,BYTE PTR [rax+0x7ce2b01a]
  44a58e:	clc    
  44a58f:	(bad)  
  44a590:	mov    edi,0xdd67a16a
  44a595:	cs pop rsi
  44a597:	(bad)  
  44a598:	mov    ah,0x78
  44a59a:	jmp    0x44a578
  44a59c:	xchg   edi,eax
  44a59d:	(bad)  
  44a59e:	rex.WRXB add rax,0xffffffffef041dcf
  44a5a4:	mov    ?,WORD PTR [rdi+rax*2-0x58813ea0]
  44a5ab:	rol    dl,0x95
  44a5ae:	movabs al,ds:0xcab16f1d4913cf77
  44a5b7:	pop    rsp
  44a5b8:	jae    0x44a611
  44a5ba:	cmp    ecx,DWORD PTR [rdi-0x3a]
  44a5bd:	rex.XB and al,r12b
  44a5c0:	rex.XB adc al,0xa4
  44a5c3:	rex.X add spl,BYTE PTR [rbp+0xb1ff7af]
  44a5ca:	int3   
  44a5cb:	jns    0x44a59a
  44a5cd:	push   rcx
  44a5ce:	jge    0x44a55e
  44a5d0:	mov    esp,0x9ad32e48
  44a5d5:	out    dx,eax
  44a5d6:	push   0xffffffffffffffd7
  44a5d8:	add    esp,DWORD PTR [rax]
  44a5da:	xor    bh,BYTE PTR [rdi]
  44a5dc:	jb     0x44a619
  44a5de:	mov    DWORD PTR [rdx-0x226fceeb],0x51929edd
  44a5e8:	addr32 add ah,ah
  44a5eb:	popf   
  44a5ec:	or     eax,0x217b1cc
  44a5f1:	in     eax,0xb6
  44a5f3:	fist   DWORD PTR [rdx+0x5e]
  44a5f6:	adc    edx,ebx
  44a5f8:	jno    0x44a5d4
  44a5fa:	push   rdi
  44a5fb:	out    dx,al
  44a5fc:	sbb    esp,DWORD PTR [rbx]
  44a5fe:	rex.X sbb ebx,DWORD PTR [rdi-0x23]
  44a602:	rex.WRX sub r12b,BYTE PTR [rdi-0x4464b068]
  44a609:	sub    ebx,DWORD PTR [rdi-0x8bde095]
  44a60f:	lods   al,BYTE PTR ds:[rsi]
  44a610:	fisttp DWORD PTR [rcx-0x8ec3f85]
  44a616:	lahf   
  44a617:	adc    ebp,DWORD PTR [rax+0x20fc19ff]
  44a61d:	jo     0x44a68e
  44a61f:	cmc    
  44a620:	lods   al,BYTE PTR ds:[rsi]
  44a621:	and    DWORD PTR [rax],0x46
  44a624:	add    ah,ah
  44a626:	push   rdx
  44a627:	adc    bh,BYTE PTR [rbx+0x45]
  44a62a:	sbb    al,BYTE PTR [rbx]
  44a62c:	push   rdx
  44a62d:	(bad)  
  44a62e:	(bad)  
  44a62f:	(bad)  
  44a630:	(bad)  
  44a631:	push   rbx
  44a632:	add    al,0x32
  44a635:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  44a636:	rcl    ah,cl
  44a638:	(bad)  
  44a639:	xchg   ebp,eax
  44a63a:	xchg   edx,eax
  44a63b:	(bad)  
  44a63c:	addr32 out dx,al
  44a63e:	cdq    
  44a63f:	and    ch,BYTE PTR [rcx-0x64cdbba5]
  44a645:	fstp   TBYTE PTR [rdx]
  44a647:	xor    dh,ch
  44a649:	jb     0x44a5cb
  44a64b:	out    0xbc,al
  44a64e:	or     BYTE PTR [rsi+0x4c7648e8],al
  44a654:	lock (bad) 
  44a656:	shr    BYTE PTR [rbp-0x5f],0x7a
  44a65a:	sub    cl,BYTE PTR [rbx-0x3dc1dff0]
  44a660:	pop    rbx
  44a661:	clc    
  44a662:	rex.X push 0xffffffffc8ab7664
  44a668:	cmp    eax,0x265ed965
  44a66d:	xlat   BYTE PTR ds:[rbx]
  44a66e:	mov    ?,esi
  44a670:	int3   
  44a671:	mov    bl,0x95
  44a673:	mov    ebx,0x4714a2fa
  44a678:	rex.WX sbb QWORD PTR [rdi-0x61],rdx
  44a67c:	gs push rcx
  44a67e:	gs mov ebx,0x8a72ab05
  44a684:	jrcxz  0x44a633
  44a686:	es pop rbx
  44a688:	push   rbp
  44a689:	(bad)  
  44a68a:	cmp    cl,BYTE PTR [rdx+0x9]
  44a68d:	mov    edi,0x80efb473
  44a692:	jbe    0x44a6f8
  44a694:	out    dx,eax
  44a695:	jmp    0x44a66d
  44a697:	sub    ah,BYTE PTR [rbp-0x449a5fd5]
  44a69d:	jg     0x44a6aa
  44a69f:	adc    al,bl
  44a6a1:	loop   0x44a636
  44a6a3:	shl    BYTE PTR [rip+0x240c44ef],0x45        # 0x2450eb99
  44a6aa:	data16 add al,0x72
  44a6ad:	pushf  
  44a6ae:	or     al,0x29
  44a6b0:	and    edi,DWORD PTR [rbx]
  44a6b2:	push   rdi
  44a6b3:	rex.RX xchg ebx,eax
  44a6b5:	jge    0x44a648
  44a6b7:	(bad)  
  44a6b9:	push   rbp
  44a6ba:	jg     0x44a6da
  44a6bc:	enter  0x48d0,0x82
  44a6c0:	push   rax
  44a6c1:	rex.W out 0xd6,al
  44a6c4:	xchg   edx,eax
  44a6c5:	int3   
  44a6c6:	mov    BYTE PTR [rsi+rbp*2+0x22af992b],bl
  44a6cd:	stos   DWORD PTR es:[rdi],eax
  44a6ce:	test   DWORD PTR [rdx],ebp
  44a6d0:	mov    bh,0x65
  44a6d2:	pop    rsp
  44a6d3:	(bad)  
  44a6d4:	leave  
  44a6d5:	xchg   esp,eax
  44a6d6:	int    0x6e
  44a6d8:	adc    ebp,DWORD PTR [rip+0x748a0805]        # 0x74ceaee3
  44a6de:	rex.WX outs dx,BYTE PTR ds:[rsi]
  44a6e0:	out    0x29,eax
  44a6e2:	jnp    0x44a6c3
  44a6e4:	(bad)  
  44a6e5:	pop    rax
  44a6e6:	stc    
  44a6e7:	push   rbp
  44a6e8:	or     DWORD PTR [rax],edx
  44a6ea:	(bad)  
  44a6eb:	packssdw mm7,QWORD PTR [rax-0x342cd4d9]
  44a6f2:	loopne 0x44a6be
  44a6f4:	jo     0x44a6cd
  44a6f6:	push   rbx
  44a6f7:	xor    ch,BYTE PTR [rbx+0x119a2c10]
  44a6fd:	or     eax,0x9ce917e7
  44a702:	(bad)  
  44a703:	jae    0x44a700
  44a705:	fstp   TBYTE PTR [rcx-0x26]
  44a708:	fwait
  44a709:	pcmpgtb mm7,mm1
  44a70c:	and    DWORD PTR [rcx],esi
  44a70e:	gs pop rbp
  44a710:	rol    DWORD PTR [rbp-0x7c9129b2],cl
  44a716:	add    esi,DWORD PTR [rdx]
  44a718:	(bad)  
  44a719:	xchg   BYTE PTR [rbp-0x105ae7be],bl
  44a71f:	or     ecx,eax
  44a721:	xlat   BYTE PTR ds:[rbx]
  44a722:	fucomi st,st(3)
  44a724:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  44a725:	rep stos BYTE PTR es:[rdi],al
  44a727:	rex.WR jge 0x44a790
  44a72a:	and    ecx,DWORD PTR [rbx+0x5bf05952]
  44a730:	movabs al,ds:0xca816348410b2042
  44a739:	sub    dh,BYTE PTR [rdx+0x2e05aab9]
  44a73f:	mul    DWORD PTR [rax+0x65]
  44a742:	rex.WXB pop r9
  44a744:	xlat   BYTE PTR ds:[rbx]
  44a745:	cmp    al,0x15
  44a747:	rex.WB scas rax,QWORD PTR es:[rdi]
  44a749:	adc    ch,BYTE PTR [rax]
  44a74b:	pop    rcx
  44a74c:	(bad)  
  44a74d:	sub    DWORD PTR [rdi+0x3c8ac805],0xffffffca
  44a754:	movsxd eax,edi
  44a756:	and    dh,BYTE PTR [rax+0x119a56f7]
  44a75c:	shl    dl,cl
  44a75e:	xchg   esp,eax
  44a75f:	xchg   edx,eax
  44a760:	(bad)  
  44a761:	loop   0x44a6fb
  44a763:	movsxd esi,edi
  44a765:	(bad)  
  44a766:	jg     0x44a781
  44a768:	(bad)  
  44a769:	add    dl,BYTE PTR [rdx+0x2cdf839]
  44a76f:	in     al,0x44
  44a771:	pop    rdx
  44a772:	or     ebp,DWORD PTR [rax+rcx*4-0x78]
  44a776:	mov    eax,0xe6c6cfe6
  44a77b:	pop    rax
  44a77c:	sbb    DWORD PTR [rbp+0x19],edx
  44a77f:	pop    rbp
  44a780:	movsxd edi,DWORD PTR [rbp+0x46]
  44a783:	imul   ecx,DWORD PTR [rdi-0x65],0x16
  44a787:	test   eax,0xecf35b64
  44a78c:	icebp  
  44a78d:	cmp    eax,0x7c3dc45c
  44a792:	jo     0x44a772
  44a794:	add    ecx,ebp
  44a796:	rcr    dh,0xbf
  44a799:	lods   eax,DWORD PTR ds:[rsi]
  44a79a:	sub    DWORD PTR [rsi+0x737b7182],ebp
  44a7a0:	(bad)  
  44a7a1:	fstp   DWORD PTR [rdx+0x0]
  44a7a4:	retf   
  44a7a5:	movabs al,ds:0xb282caf040b9d0ca
  44a7ae:	(bad)  
  44a7af:	push   rdx
  44a7b0:	cdq    
  44a7b1:	ja     0x44a74d
  44a7b3:	sub    esp,DWORD PTR [rdx]
  44a7b5:	test   al,0xcc
  44a7b7:	test   DWORD PTR [rbx+rcx*2-0x66fd143f],ebp
  44a7be:	je     0x44a7f9
  44a7c0:	mov    eax,0x8e508044
  44a7c5:	sbb    DWORD PTR [rdx-0x78],0xe04f7ef2
  44a7cc:	(bad)  
  44a7cd:	xchg   edx,eax
  44a7ce:	mov    dl,0x9b
  44a7d0:	sub    BYTE PTR [rax],ah
  44a7d2:	sub    edx,esp
  44a7d4:	retf   
  44a7d5:	(bad)  
  44a7d6:	rex.RB pop r12
  44a7d8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  44a7d9:	and    ecx,DWORD PTR [rsi+rbp*4]
  44a7dc:	jmp    0x44a838
  44a7de:	rex.WX
  44a7df:	xlat   BYTE PTR fs:[rbx]
  44a7e1:	push   rdi
  44a7e2:	rex.X (bad) [rdi+0x5e]
  44a7e6:	sub    cl,BYTE PTR [rbx+0x56b9cf6b]
  44a7ec:	movabs al,ds:0x733ed5db4c5af065
  44a7f5:	sub    ecx,eax
  44a7f7:	clc    
  44a7f8:	xchg   esp,eax
  44a7f9:	rol    edi,1
  44a7fb:	(bad)  
  44a7fc:	ins    BYTE PTR es:[edi],dx
  44a7fe:	jg     0x44a79f
  44a800:	and    DWORD PTR [rdi-0x436ff3e1],ebp
  44a806:	enter  0xcb78,0x76
  44a80a:	rex.WRB lahf 
  44a80c:	(bad)  
  44a80d:	idiv   DWORD PTR ds:[rsi-0x39]
  44a811:	mov    bh,0x8c
  44a813:	cmp    bh,BYTE PTR [rcx+0x7b]
  44a816:	(bad)  
  44a817:	and    BYTE PTR ds:[rdx+0x40],ah
  44a81b:	(bad)  
  44a81c:	push   rsi
  44a81d:	pop    rdx
  44a81e:	ror    dl,1
  44a820:	mov    dh,ch
  44a822:	cmp    DWORD PTR [rsi-0x6fc1c7d5],0xffffff99
  44a829:	jl     0x44a899
  44a82b:	(bad)  
  44a82c:	loop   0x44a7c6
  44a82e:	out    0x5a,eax
  44a830:	cld    
  44a831:	xor    DWORD PTR [rdi+0x34],eax
  44a834:	(bad)  
  44a835:	adc    al,0xec
  44a837:	out    0xb6,al
  44a839:	outs   dx,DWORD PTR ds:[rsi]
  44a83a:	or     edx,DWORD PTR [rdi+rdx*8+0x17be0a3f]
  44a841:	pop    rax
  44a842:	push   0xffffffffd5a579aa
  44a847:	fld    QWORD PTR [rbp+0x79bdc640]
  44a84d:	(bad)  
  44a84e:	xor    eax,0x2c81d5f8
  44a853:	outs   dx,BYTE PTR ds:[rsi]
  44a854:	and    eax,0x129582db
  44a859:	pop    rax
  44a85a:	cmp    ecx,DWORD PTR [rdx+0x65]
  44a85d:	jae    0x44a8ad
  44a85f:	add    al,0x46
  44a861:	(bad)  
  44a862:	addr32 (bad) 
  44a864:	outs   dx,DWORD PTR ds:[rsi]
  44a865:	or     DWORD PTR [rbx+rdi*2-0x5b],esp
  44a869:	cmp    edx,DWORD PTR [rdx]
  44a86b:	retf   
  44a86c:	(bad)  
  44a86d:	(bad)  
  44a86e:	sahf   
  44a86f:	sete   ah
  44a872:	mov    dl,0xed
  44a874:	fld    QWORD PTR [rdi]
  44a876:	out    0x29,eax
  44a878:	jrcxz  0x44a8a9
  44a87a:	adc    ch,ah
  44a87c:	outs   dx,BYTE PTR ds:[rsi]
  44a87d:	xlat   BYTE PTR ds:[rbx]
  44a87e:	xor    edi,edx
  44a880:	xor    eax,0x1a240406
  44a885:	fidivr WORD PTR [rbx+0x8684555]
  44a88b:	rex cmp ecx,esp
  44a88e:	xor    al,0x79
  44a890:	mov    edi,0x70efe814
  44a895:	movabs eax,ds:0x38407d6cc32283ca
  44a89e:	ins    DWORD PTR es:[rdi],dx
  44a89f:	shr    bh,1
  44a8a1:	ficomp WORD PTR [rdi-0x6adbd5d3]
  44a8a7:	xchg   ecx,eax
  44a8a8:	nop
  44a8a9:	ret    0x91e2
  44a8ac:	push   rbp
  44a8ad:	fs (bad) 
  44a8af:	xchg   edx,eax
  44a8b0:	or     eax,0x3f387791
  44a8b5:	mov    esp,0x2846fe68
  44a8ba:	lahf   
  44a8bb:	retf   
  44a8bc:	mov    esp,0x90041b97
  44a8c1:	iret   
  44a8c2:	adc    cl,ch
  44a8c4:	popf   
  44a8c5:	sar    DWORD PTR [rdi+0x7],0xfb
  44a8c9:	add    ah,BYTE PTR [rbp-0xe]
  44a8cc:	cmp    r8,QWORD PTR [rsi+0x19]
  44a8d0:	mov    dl,BYTE PTR [rax+0x50211fb2]
  44a8d6:	ret    0x805a
  44a8d9:	cli    
  44a8da:	sti    
  44a8db:	rcr    ah,0x18
  44a8de:	or     QWORD PTR [r9+0x2c8958b2],rax
  44a8e5:	jmp    0x44a911
  44a8e7:	leave  
  44a8e8:	xchg   ecx,eax
  44a8e9:	push   rsp
  44a8ea:	jmp    0xffffffffb8a09c1c
  44a8ef:	jp     0x44a962
  44a8f1:	xor    BYTE PTR [rsp+rax*2+0x45],0x6
  44a8f6:	jbe    0x44a884
  44a8f8:	stc    
  44a8f9:	scas   eax,DWORD PTR es:[rdi]
  44a8fa:	mov    dl,0xd7
  44a8fc:	cmc    
  44a8fd:	lods   al,BYTE PTR ds:[rsi]
  44a8fe:	rex sub esp,ecx
  44a901:	gs rex.WRX and al,0x26
  44a905:	ss imul rdx,rcx,0x6988f9cc
  44a90d:	or     al,0x16
  44a90f:	shr    BYTE PTR [rax+rdi*2],1
  44a912:	jns    0x44a97c
  44a914:	movabs ds:0x1415ce9cb73edf82,eax
  44a91d:	jns    0x44a8ec
  44a91f:	int    0xfb
  44a921:	pop    rsp
  44a922:	ja     0x44a8af
  44a924:	xchg   edx,eax
  44a925:	movsxd edx,DWORD PTR [rax]
  44a927:	sbb    eax,DWORD PTR [rdi]
  44a929:	pushf  
  44a92a:	rex (bad) 
  44a92c:	nop
  44a92d:	mov    WORD PTR [rcx],gs
  44a92f:	jmp    0x44a8ee
  44a931:	(bad)  
  44a932:	pop    rax
  44a933:	or     esp,DWORD PTR [rsi+rcx*8-0x61]
  44a937:	mov    bh,0x57
  44a939:	jae    0x44a998
  44a93b:	fldcw  WORD PTR [rbx-0x28]
  44a93e:	jno    0x44a984
  44a940:	push   rax
  44a941:	(bad)  
  44a943:	or     eax,0x6c1eb194
  44a948:	test   al,0x32
  44a94a:	(bad)  
  44a94b:	jno    0x44a9bb
  44a94d:	add    DWORD PTR [rbp+0x37],edi
  44a950:	clc    
  44a951:	jno    0x44a9b3
  44a953:	(bad)  
  44a954:	mov    WORD PTR [rax+0x48],gs
  44a957:	jnp    0x44a9d1
  44a959:	cmp    BYTE PTR [rax],0xde
  44a95c:	retf   
  44a95d:	lods   al,BYTE PTR ds:[rsi]
  44a95e:	(bad)  
  44a95f:	(bad)  
  44a960:	mov    dh,0x5
  44a962:	retf   0x735d
  44a965:	pop    rsi
  44a966:	gs mov al,0x63
  44a969:	stos   BYTE PTR es:[rdi],al
  44a96a:	xchg   esp,eax
  44a96b:	rex.RX
  44a96c:	cqo    
  44a96e:	pop    rdx
  44a96f:	es rex.RX
  44a971:	rex in eax,0xbb
  44a974:	repnz pop rsp
  44a976:	(bad)  
  44a977:	xchg   DWORD PTR ss:[rsi-0x46],edx
  44a97b:	pop    rbx
  44a97c:	popf   
  44a97d:	(bad)  
  44a97e:	(bad)  
  44a97f:	ret    0x5582
  44a982:	ins    BYTE PTR es:[rdi],dx
  44a983:	cdq    
  44a984:	push   rsp
  44a985:	sub    DWORD PTR [rsi-0x2be580d1],ebp
  44a98b:	std    
  44a98c:	pop    rsp
  44a98d:	test   ah,dl
  44a98f:	xchg   BYTE PTR [rip+0xffffffffef74c431],al        # 0xffffffffefb96dc6
  44a995:	xlat   BYTE PTR ds:[rbx]
  44a996:	ins    DWORD PTR es:[rdi],dx
  44a997:	and    eax,0x6f8d7da5
  44a99c:	xor    edi,ebp
  44a99e:	xchg   ebp,eax
  44a99f:	loope  0x44a9b7
  44a9a1:	mov    bh,0x8c
  44a9a3:	sar    DWORD PTR [rsi-0x5e],cl
  44a9a6:	and    sp,bp
  44a9a9:	xor    BYTE PTR [rbx+0x5e],0xef
  44a9ad:	rcl    esi,cl
  44a9af:	cmc    
  44a9b0:	rex.WB add rax,0x19de20a3
  44a9b6:	cwde   
  44a9b7:	fwait
  44a9b8:	or     bh,BYTE PTR [rdx-0x5b]
  44a9bb:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  44a9bc:	rex.WR push 0xffffffffeb2059fb
  44a9c2:	leave  
  44a9c3:	nop
  44a9c4:	rex.W xchg BYTE PTR [rax+rcx*1-0x19],bl
  44a9c9:	pop    rsp
  44a9ca:	xor    esp,DWORD PTR gs:[rdx-0x37]
  44a9ce:	test   BYTE PTR [rdx],dh
  44a9d0:	cdq    
  44a9d1:	(bad)
  44a9d4:	int    0xf9
  44a9d6:	lahf   
  44a9d7:	or     DWORD PTR [rsi],edi
  44a9d9:	adc    al,0x28
  44a9db:	(bad)  
  44a9dc:	gs (bad) 
  44a9de:	fs stos DWORD PTR es:[rdi],eax
  44a9e0:	test   DWORD PTR [rcx],esp
  44a9e2:	test   BYTE PTR [rbp+rsi*4+0x395f1ead],dl
  44a9e9:	mov    al,0xa
  44a9eb:	in     eax,dx
  44a9ec:	sbb    bl,BYTE PTR [rdi+0x6a]
  44a9ef:	ins    DWORD PTR es:[rdi],dx
  44a9f0:	leave  
  44a9f1:	sahf   
  44a9f2:	(bad)  
  44a9f3:	ret    0x6864
  44a9f6:	(bad)  
  44a9f7:	and    BYTE PTR [rax],ch
  44a9f9:	movabs eax,ds:0x6c7618b02aa538b0
  44aa02:	and    BYTE PTR [rbx+0x7d6795a],ch
  44aa08:	pop    rcx
  44aa09:	pop    rdx
  44aa0a:	mov    dh,0x56
  44aa0c:	ficomp DWORD PTR [rdx-0xa452101]
  44aa12:	test   DWORD PTR [rax],ebp
  44aa14:	pop    rbp
  44aa15:	(bad)  
  44aa16:	rcr    BYTE PTR [rdi+0x6d],1
  44aa19:	mov    esp,0x37f7bdb2
  44aa1e:	add    ecx,edx
  44aa20:	xlat   BYTE PTR ds:[rbx]
  44aa21:	mov    bl,0xb4
  44aa23:	jge    0x44aa00
  44aa25:	repz push 0x7e
  44aa28:	ins    DWORD PTR es:[rdi],dx
  44aa29:	mov    esi,0x518ee88f
  44aa2e:	pop    rdx
  44aa2f:	mov    ebx,0xb76e2766
  44aa34:	rol    DWORD PTR [rcx],0x13
  44aa37:	add    edi,DWORD PTR [rdx]
  44aa39:	(bad)
  44aa3e:	ja     0x44aa0a
  44aa40:	adc    eax,DWORD PTR [rbp-0x1a]
  44aa43:	mov    ebx,0x55b818ff
  44aa48:	hlt    
  44aa49:	std    
  44aa4a:	rcr    BYTE PTR [rsi+rsi*2],0x5f
  44aa4e:	(bad)  
  44aa4f:	jle    0x44a9db
  44aa51:	add    dh,ah
  44aa53:	cwde   
  44aa54:	xor    bl,BYTE PTR [rsi+0x33665932]
  44aa5a:	(bad)  
  44aa5b:	push   rbp
  44aa5c:	out    dx,al
  44aa5d:	(bad)  
  44aa5e:	iret   
  44aa5f:	retf   0x9f8e
  44aa62:	or     al,0x64
  44aa64:	loopne 0x44aa71
  44aa66:	(bad)  
  44aa67:	(bad)  
  44aa68:	mov    esi,esi
  44aa6a:	add    al,0xc8
  44aa6c:	pop    rbx
  44aa6d:	mov    ecx,DWORD PTR [rcx-0x1a]
  44aa70:	mov    dh,0xcb
  44aa72:	or     DWORD PTR [rdx+rbp*8+0x38b5e47c],0x5e604c76
  44aa7d:	lea    ecx,[rax-0x28825a38]
  44aa83:	xchg   ecx,eax
  44aa84:	std    
  44aa85:	adc    BYTE PTR [rsi-0x27],dl
  44aa88:	jnp    0x44aae6
  44aa8a:	lock xchg ecx,eax
  44aa8c:	(bad)  
  44aa8d:	(bad)  
  44aa8e:	repnz and dh,BYTE PTR [rdi]
  44aa91:	rex.B jo 0x44aaff
  44aa94:	rex.RXB sbb DWORD PTR [r15-0x1f],r13d
  44aa98:	retf   
  44aa99:	add    dl,bl
  44aa9b:	stc    
  44aa9c:	add    bh,BYTE PTR [rbp-0x63]
  44aa9f:	or     eax,0xaa7f4f5c
  44aaa4:	mov    dh,BYTE PTR [rax-0x68e9135e]
  44aaaa:	mov    edi,0x681b0e09
  44aaaf:	rex.RXB
  44aab0:	rex.RB or r12d,0x67d9836e
  44aab7:	rex.WR ret 
  44aab9:	(bad)
  44aabc:	mov    BYTE PTR [rcx+0x3fbd7fad],0x5b
  44aac3:	rex.WR push rsp
  44aac5:	cmp    ah,bl
  44aac7:	mov    ebp,0x6557f757
  44aacc:	rex.RX imul DWORD PTR [rdi]
  44aacf:	rex.WRXB cmp r9,QWORD PTR [r8]
  44aad2:	(bad)  
  44aad3:	mov    edx,DWORD PTR [rbp+0x56]
  44aad6:	mov    edx,DWORD PTR [rbp+0x1b2c48bc]
  44aadc:	push   rdi
  44aadd:	mov    ecx,0x96e6848a
  44aae2:	outs   dx,BYTE PTR ds:[rsi]
  44aae3:	mul    DWORD PTR [rax]
  44aae5:	movabs ds:0xf5b20e43c0aaf66c,eax
  44aaee:	mov    esi,0x6f829fe0
  44aaf3:	(bad)  
  44aaf4:	(bad)  
  44aaf5:	xchg   ebp,eax
  44aaf6:	stos   BYTE PTR es:[rdi],al
  44aaf7:	pop    rbp
  44aaf8:	sbb    DWORD PTR [rbx+0x59],ebx
  44aafb:	sub    ebx,DWORD PTR [rbx+0x2a]
  44aafe:	mov    bl,0x65
  44ab00:	pop    rsp
  44ab01:	sbb    DWORD PTR [rsi-0x6a],edx
  44ab04:	xchg   esp,eax
  44ab05:	rex.WB xlat BYTE PTR ds:[rbx]
  44ab07:	add    al,BYTE PTR [rdi+rdi*1+0x2afa502a]
  44ab0e:	ins    DWORD PTR es:[rdi],dx
  44ab0f:	adc    DWORD PTR [rdi],eax
  44ab11:	sub    DWORD PTR [rip+0xffffffff9ed57944],ebp        # 0xffffffff9f1a245b
  44ab17:	xchg   edx,eax
  44ab18:	fyl2x  
  44ab1a:	(bad)  
  44ab1b:	mov    eax,0xfa520608
  44ab20:	rex.WR (bad) 
  44ab22:	fstp   QWORD PTR [rsi-0x2e]
  44ab25:	ja     0x44ab4b
  44ab27:	(bad)  
  44ab28:	ja     0x44ab4a
  44ab2a:	imul   ecx,edx,0xffffffbc
  44ab2d:	mov    dl,0xb7
  44ab2f:	test   DWORD PTR [rbx],esi
  44ab31:	mov    bh,0x88
  44ab33:	nop
  44ab34:	(bad)  
  44ab36:	ja     0x44ab3e
  44ab38:	out    0xd2,al
  44ab3a:	out    0xe1,al
  44ab3c:	cli    
  44ab3d:	sub    bl,bl
  44ab3f:	mov    dl,0xc5
  44ab41:	cdq    
  44ab42:	add    edx,DWORD PTR [rbp-0xfa48df8]
  44ab48:	sbb    cl,BYTE PTR [rsi-0x749aec5f]
  44ab4e:	adc    DWORD PTR [rbp-0x1cfe353b],esp
  44ab54:	imul   edx
  44ab56:	mov    cl,bh
  44ab58:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  44ab59:	mov    ecx,0x2b06dfe1
  44ab5e:	or     DWORD PTR [rax+rdi*4+0x46f675a3],0x403e3d79
  44ab69:	rex.RX and al,0x12
  44ab6c:	(bad)  
  44ab6e:	or     dl,BYTE PTR [rax]
  44ab70:	xlat   BYTE PTR ds:[rbx]
  44ab71:	rex.X xchg ebp,eax
  44ab73:	mov    QWORD PTR [rsi+riz*8+0x88d33b9],r9
  44ab7b:	(bad)  
  44ab7c:	jge    0x44ab94
  44ab7e:	xor    DWORD PTR [rdi-0x540437fa],0x0
  44ab85:	icebp  
  44ab86:	xchg   ebp,eax
  44ab87:	lods   al,BYTE PTR ds:[rsi]
  44ab88:	push   rbp
  44ab89:	xchg   esi,eax
  44ab8a:	retf   0xeef2
  44ab8d:	mov    ebp,0x78caab9a
  44ab92:	fild   DWORD PTR [rbx-0x6c19f84d]
  44ab98:	xor    ch,dl
  44ab9a:	lsl    eax,WORD PTR [rdx+0x22c0b170]
  44aba1:	xchg   ecx,eax
  44aba2:	int3   
  44aba3:	pop    rbx
  44aba4:	gs xor esp,edx
  44aba7:	and    esi,DWORD PTR [rbx]
  44aba9:	adc    DWORD PTR [rcx],esp
  44abab:	(bad)  
  44abac:	(bad)  
  44abad:	or     al,0xde
  44abaf:	adc    DWORD PTR [rax+0x66cabef],edi
  44abb5:	(bad)  
  44abb6:	(bad)  
  44abb7:	(bad)  
  44abb8:	adc    edx,DWORD PTR [rbx+rcx*4]
  44abbb:	push   rbp
  44abbc:	enter  0x908d,0xc6
  44abc0:	lods   al,BYTE PTR ds:[rsi]
  44abc1:	pushf  
  44abc2:	push   rsi
  44abc3:	mov    edx,0x2dbfa623
  44abc8:	ret    0x699
  44abcb:	pop    rax
  44abcc:	sub    eax,0x10feb7f7
  44abd1:	and    al,0xef
  44abd3:	gs ins BYTE PTR es:[rdi],dx
  44abd5:	scas   eax,DWORD PTR es:[rdi]
  44abd6:	(bad)  
  44abd7:	mov    ebp,0x7180f7f4
  44abdc:	pop    rsi
  44abdd:	out    dx,eax
  44abde:	retf   
  44abdf:	(bad)  
  44abe0:	cmc    
  44abe1:	test   DWORD PTR [rax],esp
  44abe3:	sub    al,0x22
  44abe5:	push   rbp
  44abe6:	and    spl,BYTE PTR [rbp+0x1695de55]
  44abed:	hlt    
  44abee:	(bad)  
  44abef:	xchg   esp,eax
  44abf0:	xchg   esp,eax
  44abf1:	lahf   
  44abf2:	mov    dl,0xae
  44abf4:	rex.RB and al,0xa4
  44abf7:	scas   al,BYTE PTR es:[rdi]
  44abf8:	movsxd esp,DWORD PTR [rbp+0x33]
  44abfb:	test   BYTE PTR [rdx-0x16],dl
  44abfe:	mov    edx,0x2fd823c5
  44ac03:	xor    al,0xa
  44ac05:	sub    BYTE PTR [rax+rdx*4+0x19],ah
  44ac09:	xchg   ebp,eax
  44ac0a:	(bad)  [rdi]
  44ac0c:	(bad)  
  44ac0d:	lahf   
  44ac0e:	or     eax,0xfc21442c
  44ac13:	scas   al,BYTE PTR es:[rdi]
  44ac14:	shr    BYTE PTR [rdx],0xf3
  44ac17:	xchg   ecx,eax
  44ac18:	add    DWORD PTR [rdx],esi
  44ac1a:	(bad)  
  44ac1b:	and    dl,BYTE PTR [rsi+0x5dba3c5]
  44ac21:	pop    rdi
  44ac22:	or     eax,0x56f28608
  44ac27:	mov    dh,0x75
  44ac29:	pushf  
  44ac2a:	xor    dh,BYTE PTR [rsi+0x5af22f32]
  44ac30:	pop    rsp
  44ac31:	mov    bl,0xe8
  44ac33:	test   BYTE PTR [rax+0x58b281ab],bh
  44ac39:	(bad)  
  44ac3a:	mov    DWORD PTR [rcx+rbp*2+0x2b0335c0],ecx
  44ac41:	enter  0xb0c6,0x1c
  44ac45:	int3   
  44ac46:	(bad)  
  44ac47:	rex.RB push r14
  44ac49:	in     eax,0xb8
  44ac4b:	adc    bh,BYTE PTR [rcx+0x5b]
  44ac4e:	movabs al,ds:0x65298581a2fa592d
  44ac57:	mov    ecx,0xf9209f12
  44ac5c:	fcomp  QWORD PTR [rax+0x65]
  44ac5f:	pop    rbp
  44ac60:	and    dl,al
  44ac62:	leave  
  44ac63:	fld    TBYTE PTR [rbp-0x10]
  44ac66:	cmp    ecx,DWORD PTR [rbp-0x5268e8ff]
  44ac6c:	fs pop rdx
  44ac6e:	shr    DWORD PTR [rdi+0x15],0x56
  44ac72:	es mov ch,0xd0
  44ac75:	repz mov al,al
  44ac78:	mov    dh,BYTE PTR [rax]
  44ac7a:	ret    0x171e
  44ac7d:	pop    rax
  44ac7e:	(bad)  
  44ac7f:	push   rsi
  44ac80:	idiv   dh
  44ac82:	rex.XB xor BYTE PTR [r15],sil
  44ac85:	and    DWORD PTR [rax+0x11],edi
  44ac88:	(bad)  
  44ac89:	cld    
  44ac8a:	jo     0x44acc5
  44ac8c:	mov    al,0x58
  44ac8e:	and    eax,0x8f02d6eb
  44ac93:	repnz push rsp
  44ac95:	(bad)  [rdx+0x5c8b8888]
  44ac9b:	xor    bl,BYTE PTR [rsi]
  44ac9d:	rex.X pop rbx
  44ac9f:	clc    
  44aca0:	push   rcx
  44aca1:	fidivr DWORD PTR [rdx+0x438b57a6]
  44aca7:	xor    ah,bh
  44aca9:	popf   
  44acaa:	cmp    DWORD PTR [rbx+0x4],0x16
  44acae:	mov    dh,0xdc
  44acb0:	sahf   
  44acb1:	xchg   edx,eax
  44acb2:	xor    ebp,ecx
  44acb4:	rex.RXB
  44acb5:	gs rex.WRB and rax,0x722f79b1
  44acbc:	and    esi,DWORD PTR [rcx-0x6fe724ce]
  44acc2:	push   rdi
  44acc3:	fldcw  WORD PTR [rdi+0xe]
  44acc6:	jle    0x44ad1c
  44acc8:	jo     0x44ad3e
  44acca:	sbb    al,0x1c
  44accd:	addr32 (bad) 
  44accf:	sub    al,0x3
  44acd1:	pop    rbx
  44acd2:	mov    edx,ds
  44acd4:	sbb    DWORD PTR [rax],esp
  44acd6:	(bad)  
  44acd7:	rex.X retf 
  44acd9:	mov    ah,0xec
  44acdb:	(bad)  
  44acdc:	xor    esp,ecx
  44acde:	cmc    
  44acdf:	sub    al,0xb8
  44ace1:	int    0x4
  44ace3:	rex.WX js 0x44acf1
  44ace6:	push   0x3809533e
  44aceb:	pop    rsi
  44acec:	sbb    DWORD PTR [rsi-0x58ac40a1],ebp
  44acf2:	cmc    
  44acf3:	jmp    0x44ad6c
  44acf5:	sti    
  44acf6:	or     eax,DWORD PTR [rax-0x1b]
  44acf9:	scas   al,BYTE PTR es:[rdi]
  44acfa:	rcl    BYTE PTR [rdx-0x4a],cl
  44acfd:	xchg   esp,eax
  44acfe:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  44acff:	fs (bad) 
  44ad01:	and    eax,0x691732a8
  44ad06:	nop
  44ad07:	test   BYTE PTR [rbx],0x81
  44ad0a:	xchg   edx,eax
  44ad0b:	mov    bh,0xb6
  44ad0d:	(bad)  
  44ad0e:	in     al,0xcd
  44ad10:	(bad)  
  44ad11:	jo     0x44ac9a
  44ad13:	(bad)  
  44ad14:	ss push rax
  44ad16:	push   0xffffffffffffffd7
  44ad18:	rex.XB (bad) 
  44ad1a:	add    bl,ah
  44ad1c:	jl     0x44ad2f
  44ad1e:	icebp  
  44ad1f:	adc    eax,ebx
  44ad21:	add    dl,BYTE PTR [rbx-0x373e9854]
  44ad27:	mov    esp,0xdfda5b54
  44ad2c:	ror    esi,1
  44ad2e:	push   rbp
  44ad2f:	movabs ds:0xaf798173ab95892b,al
  44ad38:	mov    ecx,gs
  44ad3a:	sbb    bh,dl
  44ad3c:	jmp    FWORD PTR [rax-0x10]
  44ad3f:	ffree  st(0)
  44ad41:	or     dh,BYTE PTR [rbp-0x7e1e0f47]
  44ad47:	(bad)  
  44ad48:	mov    edx,0xb13a23e
  44ad4d:	and    al,0x45
  44ad4f:	mov    edx,0x4098e0a5
  44ad54:	(bad)  
  44ad55:	es or  al,0xee
  44ad58:	cmc    
  44ad59:	(bad)  
  44ad5a:	(bad)  
  44ad5b:	stos   BYTE PTR es:[rdi],al
  44ad5c:	add    cl,BYTE PTR [rdi]
  44ad5e:	xchg   al,cl
  44ad60:	(bad)  
  44ad61:	out    0xd,eax
  44ad63:	mov    WORD PTR [rbp-0x67],cs
  44ad66:	mov    WORD PTR [rsi+rbp*4-0x5e938053],fs
  44ad6d:	or     dh,BYTE PTR [rax]
  44ad6f:	(bad)  
  44ad70:	push   rsi
  44ad71:	(bad)  
  44ad72:	sti    
  44ad73:	mov    ebx,0x9fbda956
  44ad78:	or     DWORD PTR [rax],ecx
  44ad7a:	adc    DWORD PTR [rcx+0x4eab45a9],esp
  44ad80:	loopne 0x44adb0
  44ad82:	(bad)  
  44ad83:	mov    edi,0xd1701893
  44ad88:	xchg   ebp,eax
  44ad89:	mov    sil,0x5a
  44ad8c:	or     al,0x94
  44ad8e:	lods   eax,DWORD PTR ds:[rsi]
  44ad8f:	ret    
  44ad90:	mov    gs,WORD PTR [rax]
  44ad92:	or     ecx,ebp
  44ad94:	rex.RB sub eax,0xf6608ce
  44ad9a:	movabs r8,0xcffbf94d81eff3cd
  44ada4:	shl    edi,0x3
  44ada7:	mov    edi,DWORD PTR [rdi]
  44ada9:	(bad)  
  44adaa:	mov    edx,0x11990396
  44adaf:	movabs eax,ds:0x46895a9445065010
  44adb8:	pop    rsp
  44adb9:	fstp   DWORD PTR [rbx-0x7a]
  44adbc:	(bad)  
  44adbd:	add    ch,BYTE PTR [rax]
  44adbf:	rex.WRXB
  44adc0:	xor    ah,BYTE PTR gs:[rsi+rsi*1]
  44adc4:	out    0xb5,eax
  44adc6:	rex.W xchg BYTE PTR [rax+0x17],bl
  44adca:	(bad)  
  44adcb:	outs   dx,BYTE PTR ds:[rsi]
  44adcc:	sbb    al,0x28
  44adce:	movsxd edi,DWORD PTR [rdi]
  44add0:	fisubr WORD PTR [rsi-0x3daa4359]
  44add6:	(bad)  
  44add7:	jnp    0x44ad73
  44add9:	xor    edi,DWORD PTR [rbx+0x2f032465]
  44addf:	add    al,0xc4
  44ade1:	rex.X leave 
  44ade3:	out    dx,al
  44ade4:	(bad)  
  44ade5:	lods   al,BYTE PTR ds:[rsi]
  44ade6:	adc    bl,BYTE PTR [rbx+0x3f]
  44ade9:	sub    eax,DWORD PTR [rbx+0x2f]
  44adec:	in     eax,0x3d
  44adee:	push   rcx
  44adef:	xor    ah,BYTE PTR [rdi-0x2a]
  44adf2:	shl    DWORD PTR es:[rdx],0x5f
  44adf6:	lahf   
  44adf7:	or     esp,DWORD PTR [rdx+rdx*2-0x1e]
  44adfb:	movabs ds:0x475d9b2b1e507d4d,eax
  44ae04:	div    BYTE PTR [rdi-0x9a71ac0]
  44ae0a:	mov    eax,0xffa4a067
  44ae0f:	popf   
  44ae10:	cmp    BYTE PTR [rdi+rbx*2+0xc5ddbb7],ch
  44ae17:	or     BYTE PTR [rsi],bh
  44ae19:	sar    DWORD PTR [rax-0x7d],0x40
  44ae1d:	mov    ecx,0x7a081ab9
  44ae22:	cdq    
  44ae23:	ja     0x44ae71
  44ae25:	loop   0x44ae31
  44ae27:	push   rsp
  44ae28:	sbb    DWORD PTR [rdi-0x17],ecx
  44ae2b:	cli    
  44ae2c:	(bad)  
  44ae2d:	sar    BYTE PTR [rbp-0x29],0xa5
  44ae31:	add    BYTE PTR [rcx],dh
  44ae33:	xchg   ebp,eax
  44ae34:	ret    0x8548
  44ae37:	rex.W mov dl,0xa6
  44ae3a:	cmp    DWORD PTR [rbx-0x6e8ee44e],ebp
  44ae40:	in     al,0xfd
  44ae42:	add    DWORD PTR [rdx+0x1ff04bff],eax
  44ae48:	or     eax,0x510f69f6
  44ae4d:	stos   BYTE PTR es:[rdi],al
  44ae4e:	std    
  44ae4f:	in     eax,dx
  44ae50:	jns    0x44ae81
  44ae52:	xchg   ebx,eax
  44ae53:	fwait
  44ae54:	xchg   ebx,eax
  44ae55:	(bad)  
  44ae56:	(bad)  
  44ae57:	or     BYTE PTR [rdi+rbx*4-0x37],dl
  44ae5b:	mov    BYTE PTR [rdi],bh
  44ae5d:	(bad)  
  44ae5e:	rex.WRX or BYTE PTR [rsi+0x1f],r11b
  44ae62:	adc    BYTE PTR [rsi-0x1005f8a5],al
  44ae68:	(bad)  
  44ae69:	mov    ah,0xf7
  44ae6b:	mov    ebx,0x93e9c703
  44ae70:	rcr    dh,cl
  44ae72:	rex.RX ins BYTE PTR es:[rdi],dx
  44ae74:	xchg   esp,eax
  44ae75:	cld    
  44ae76:	retf   0x8b6b
  44ae79:	rex.WR out 0xab,al
  44ae7c:	sub    cl,BYTE PTR [rdi+rbp*8]
  44ae7f:	int    0xa7
  44ae81:	adc    edi,ebx
  44ae83:	cld    
  44ae84:	pop    rcx
  44ae85:	ss sahf 
  44ae87:	imul   ebp,DWORD PTR [rbp+0x29],0xffffff8f
  44ae8b:	int    0xd7
  44ae8d:	gs jb  0x44ae29
  44ae90:	pop    rsi
  44ae91:	(bad)  
  44ae92:	sbb    al,0x2b
  44ae94:	jmp    0x44ae54
  44ae96:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  44ae97:	mov    ch,0xd1
  44ae99:	leave  
  44ae9a:	fild   DWORD PTR [rip+0x31277ec]        # 0x357268c
  44aea0:	jrcxz  0x44ae2d
  44aea2:	outs   dx,BYTE PTR ds:[rsi]
  44aea3:	rex.WXB
  44aea4:	rex pop rdx
  44aea6:	cmp    DWORD PTR [rbp-0x37376b67],edx
  44aeac:	pop    rax
  44aead:	mov    bh,0x56
  44aeaf:	xchg   bh,al
  44aeb1:	retf   0x16bc
  44aeb4:	stos   BYTE PTR es:[rdi],al
  44aeb5:	adc    bl,al
  44aeb7:	mov    cl,0xce
  44aeb9:	mov    bl,0xfa
  44aebb:	cld    
  44aebc:	lods   al,BYTE PTR ds:[rsi]
  44aebd:	rex (bad) 
  44aebf:	xchg   ebp,eax
  44aec0:	jno    0x44ae53
  44aec2:	push   0x73bc05a6
  44aec7:	xchg   ecx,eax
  44aec8:	push   rbx
  44aec9:	out    0x36,al
  44aecb:	ja     0x44ae89
  44aecd:	rex.WXB and r11b,sil
  44aed0:	(bad)  
  44aed2:	rex.WRXB loopne 0x44aeb3
  44aed5:	lods   eax,DWORD PTR ds:[rsi]
  44aed6:	xor    bl,dl
  44aed8:	(bad)  
  44aed9:	adc    BYTE PTR [rdx+0x47cc0aec],ah
  44aedf:	xchg   ebp,eax
  44aee0:	mov    dh,0xb2
  44aee2:	movabs eax,ds:0xdfd1225b2cce6a4c
  44aeeb:	(bad)  
  44aeec:	pop    rdi
  44aeed:	(bad)  
  44aeee:	lods   al,BYTE PTR ds:[rsi]
  44aeef:	sub    BYTE PTR [rbx+0x18b072d6],bh
  44aef5:	cwde   
  44aef6:	(bad)  
  44aef7:	sub    ebx,DWORD PTR [rbx-0x4bb8396b]
  44aefd:	jae    0x44af2b
  44aeff:	test   ch,bh
  44af01:	addr32 mov ebx,0xc2dcf396
  44af07:	cli    
  44af08:	jrcxz  0x44af0a
  44af0a:	xor    DWORD PTR [rcx],edx
  44af0c:	fdivr  QWORD PTR [rax-0x49]
  44af0f:	mov    bh,0xf3
  44af11:	xchg   esp,eax
  44af12:	int3   
  44af13:	enter  0xbf6b,0x4a
  44af17:	add    esi,DWORD PTR [rcx+0x77]
  44af1a:	add    al,0xc6
  44af1c:	in     eax,0xef
  44af1e:	mov    dl,0x81
  44af20:	(bad)  
  44af21:	rex
  44af22:	rex.RB icebp 
  44af24:	cmp    esi,DWORD PTR [rcx+0x5a]
  44af27:	mov    edi,0xc0bbb76e
  44af2c:	push   rbx
  44af2d:	(bad)  
  44af2e:	rex.WRX or r8b,BYTE PTR [rax-0x5b]
  44af32:	sub    dl,BYTE PTR [rdx+0x19921458]
  44af38:	int    0x11
  44af3a:	(bad)  
  44af3b:	add    dh,BYTE PTR [rbx+0x55]
  44af3e:	(bad)  
  44af3f:	and    ebx,DWORD PTR [rax+0x5f732a85]
  44af45:	sbb    DWORD PTR [rbp+0x6d],0x3622eb98
  44af4c:	adc    bh,BYTE PTR [rdx-0x772775a1]
  44af52:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  44af53:	in     al,dx
  44af54:	sbb    eax,0xad12e75e
  44af59:	fnstsw WORD PTR [rdi-0x34]
  44af5c:	sub    ebp,DWORD PTR [rsp+rax*1-0x3f2a09b6]
  44af63:	movabs ds:0xa1e699e6c8953698,al
  44af6c:	push   rsi
  44af6d:	scas   al,BYTE PTR es:[rdi]
  44af6e:	gs push rcx
  44af70:	or     ebp,DWORD PTR [rax+0x7f]
  44af73:	sbb    eax,ecx
  44af75:	clc    
  44af76:	or     BYTE PTR [rdi-0x51f7da8c],ch
  44af7c:	imul   ecx,DWORD PTR [rsi-0x15],0x13a22e7e
  44af83:	sbb    al,0x58
  44af85:	or     BYTE PTR [rsi+rax*4],ch
  44af88:	std    
  44af89:	sub    BYTE PTR [rax-0x21afcb03],dh
  44af8f:	adc    ebx,DWORD PTR [rax]
  44af91:	jge    0x44b005
  44af93:	fcmovne st,st(0)
  44af95:	pushf  
  44af96:	fsubr  st(2),st
  44af98:	(bad)  
  44af99:	rex.WRB add r10b,BYTE PTR [rip+0x5a82d5c0]        # 0x5ac78560
  44afa0:	cmp    eax,0x2e2cb6d7
  44afa5:	sub    edx,DWORD PTR [rdi-0x1]
  44afa8:	jmp    QWORD PTR [rax]
  44afaa:	out    dx,eax
  44afab:	fldenv [rbp-0x44]
  44afae:	(bad)  
  44afaf:	fimul  WORD PTR [rcx+0x54ecc5dc]
  44afb5:	mov    DWORD PTR [rcx],eax
  44afb7:	(bad)  
  44afb8:	xchg   ecx,eax
  44afb9:	xor    eax,0xca083daf
  44afbe:	rex.WB (bad) 
  44afc0:	jbe    0x44af8d
  44afc2:	rex.W (bad) 
  44afc4:	fwait
  44afc5:	out    dx,eax
  44afc6:	and    DWORD PTR [rdi-0x43e0c8b4],ecx
  44afcc:	movabs eax,ds:0x1cd73e3008788f9d
  44afd5:	(bad)  
  44afd6:	sbb    DWORD PTR [rsi+0x609b2016],ebx
  44afdc:	mov    edi,0xe93e606f
  44afe1:	pop    rax
  44afe2:	cmp    edi,0x6be940ae
  44afe8:	xor    DWORD PTR [rcx+0x36],ecx
  44afeb:	jbe    0x44b028
  44afed:	rex.WX pop rbx
  44afef:	enter  0x808a,0x73
  44aff3:	sub    esp,0xe6e0d57b
  44aff9:	add    DWORD PTR [rdx],esi
  44affb:	mov    edx,0xef82fbfe
  44b000:	add    eax,0x6bcc0cbf
  44b005:	mov    ch,0x65
  44b007:	(bad)  
  44b008:	int3   
  44b009:	mov    esp,0xb957dcd4
  44b00e:	rex.WRB xor r14b,r12b
  44b011:	(bad)  [rip+0xffffffffe459942d]        # 0xffffffffe49e4444
  44b017:	mov    dl,0x21
  44b019:	(bad)  
  44b01a:	shl    DWORD PTR [rcx],0x2d
  44b01d:	fcomp  DWORD PTR [rbx]
  44b01f:	sub    al,0x4
  44b021:	or     BYTE PTR [rdx-0x7b],ch
  44b024:	(bad)  
  44b026:	(bad)  
  44b027:	(bad)  
  44b028:	out    0x36,al
  44b02b:	xlat   BYTE PTR ds:[rbx]
  44b02c:	(bad)  
  44b02d:	rex.WRXB sub r12,r14
  44b030:	iret   
  44b031:	ins    BYTE PTR es:[rdi],dx
  44b032:	lahf   
  44b033:	(bad)  
  44b034:	sbb    ch,dh
  44b036:	gs mov cl,0x7d
  44b039:	jle    0x44afe5
  44b03b:	cmp    BYTE PTR [rbx-0x259854a1],ch
  44b041:	mov    al,BYTE PTR [rcx]
  44b043:	add    DWORD PTR [rdi+0x43],esp
  44b046:	add    BYTE PTR [rsp+rdx*4+0x764c1121],al
  44b04d:	rex.XB (bad) 
  44b04f:	test   BYTE PTR [rax+0xa],bl
  44b052:	fs iret 
  44b054:	(bad)  
  44b055:	(bad)  
  44b056:	mov    dl,0x9f
  44b058:	(bad)
  44b05b:	(bad)  
  44b05c:	lock mov edi,0xb03cfc1d
  44b062:	rex.W cmc 
  44b064:	ret    
  44b065:	rex pop rcx
  44b067:	stos   DWORD PTR es:[rdi],eax
  44b068:	mov    ah,0xb4
  44b06a:	enter  0x7ca3,0x36
  44b06e:	jg     0x44b01e
  44b070:	movabs al,ds:0x6a239b08acf91ef6
  44b079:	(bad)  
  44b07a:	push   rcx
  44b07b:	int3   
  44b07c:	rex.WRB fst QWORD PTR [r14]
  44b07f:	rex.X dec BYTE PTR [rdi]
  44b082:	(bad)  
  44b083:	(bad)  
  44b084:	outs   dx,DWORD PTR ds:[rsi]
  44b085:	out    0x9c,eax
  44b087:	sub    eax,0x78e808af
  44b08c:	(bad)  
  44b08d:	(bad)  
  44b08e:	cmp    dl,BYTE PTR [rax+0x42]
  44b091:	imul   esi,DWORD PTR [rdi-0x21bf4326],0x2b
  44b098:	xchg   ebp,eax
  44b099:	int    0x99
  44b09b:	sar    DWORD PTR gs:[rdi-0xc959bf5],1
  44b0a2:	push   rdi
  44b0a3:	(bad)  
  44b0a4:	rex.B ins BYTE PTR es:[rdi],dx
  44b0a6:	xchg   esp,eax
  44b0a7:	ret    0x76ca
  44b0aa:	ins    DWORD PTR es:[rdi],dx
  44b0ab:	adc    DWORD PTR [rsi],eax
  44b0ad:	loop   0x44b0a2
  44b0af:	mov    esi,DWORD PTR [rsi-0x4]
  44b0b2:	div    ebx
  44b0b4:	jp     0x44b118
  44b0b6:	(bad)  
  44b0b7:	loope  0x44b0a4
  44b0b9:	xor    eax,0xcaa2fad
  44b0be:	xlat   BYTE PTR ds:[rbx]
  44b0bf:	rex pop rdx
  44b0c1:	and    eax,0xd7b87eb3
  44b0c6:	mov    ebp,DWORD PTR [rax+0x36ba802a]
  44b0cc:	xchg   ecx,eax
  44b0cd:	js     0x44b130
  44b0cf:	push   rax
  44b0d0:	adc    eax,0xcf6f2748
  44b0d5:	mov    dh,0xa7
  44b0d7:	pop    rdx
  44b0d8:	or     al,0xb8
  44b0da:	nop
  44b0db:	xchg   ebp,eax
  44b0dc:	push   rdi
  44b0dd:	pop    rcx
  44b0de:	retf   
  44b0df:	data16 loope 0x44b129
  44b0e2:	movabs r9,0xf2f83e652cae201a
  44b0ec:	rex test eax,0x5cd8e56c
  44b0f2:	(bad)  
  44b0f3:	jnp    0x44b139
  44b0f5:	div    edi
  44b0f7:	jno    0x44b07a
  44b0f9:	add    eax,0xc088daa7
  44b0fe:	(bad)  
  44b0ff:	add    esp,DWORD PTR [rax+rdi*2+0x67]
  44b103:	mov    al,0x12
  44b105:	adc    BYTE PTR [rbx+riz*2-0x16cda4a6],al
  44b10c:	(bad)  
  44b10d:	add    eax,0x58fd7ca
  44b112:	(bad)  
  44b113:	lods   al,BYTE PTR ds:[rsi]
  44b114:	rcr    BYTE PTR [rdi+rdx*1-0x24],0xe7
  44b119:	mov    ebp,0x8236307a
  44b11e:	lods   al,BYTE PTR ds:[rsi]
  44b11f:	addr32 jno 0x44b0eb
  44b122:	stos   BYTE PTR es:[rdi],al
  44b123:	(bad)  
  44b124:	(bad)  
  44b125:	pushf  
  44b126:	xlat   BYTE PTR ds:[rbx]
  44b127:	jno    0x44b0f1
  44b129:	imul   eax,DWORD PTR [rcx],0xc0883f4a
  44b12f:	mov    bl,0x3
  44b131:	stos   DWORD PTR es:[rdi],eax
  44b132:	(bad)  
  44b133:	test   BYTE PTR [rdi],al
  44b135:	fst    DWORD PTR [rcx+rdi*4-0x2b3f5dea]
  44b13c:	rex xchg esi,eax
  44b13e:	dec    DWORD PTR [rsi-0x80]
  44b141:	mov    ah,0xff
  44b143:	sbb    ch,al
  44b145:	(bad)  
  44b146:	loope  0x44b198
  44b148:	jp     0x44b1c9
  44b14a:	xor    BYTE PTR [rax-0x2286ff5],bl
  44b150:	pop    rdi
  44b151:	push   rbx
  44b152:	add    dl,bh
  44b154:	cmp    BYTE PTR [rbx+0x20],dh
  44b157:	jmp    0x44b1b3
  44b159:	xchg   ecx,eax
  44b15a:	scas   al,BYTE PTR es:[rdi]
  44b15b:	mov    esi,0xd3861ca9
  44b160:	test   BYTE PTR [rbx-0x33],dl
  44b163:	jno    0x44b0e8
  44b165:	ds hlt 
  44b167:	imul   ebp,DWORD PTR [rsi+0x41],0xffffffc1
  44b16b:	loopne 0x44b1e1
  44b16d:	mul    DWORD PTR [rip+0x54192b65]        # 0x545ddcd8
  44b173:	rex retf 
  44b175:	test   al,0xef
  44b177:	or     eax,0xaecad310
  44b17c:	stc    
  44b17d:	sahf   
  44b17e:	pop    rbx
  44b17f:	and    ebx,edx
  44b181:	add    al,ah
  44b183:	lods   eax,DWORD PTR ds:[rsi]
  44b184:	adc    bl,BYTE PTR [rcx+0x7]
  44b187:	jno    0x44b119
  44b189:	(bad)  
  44b18a:	sbb    DWORD PTR [rsi],edi
  44b18c:	sbb    DWORD PTR [rsp+rsi*1+0x40],edi
  44b190:	rex.WR in al,0x77
  44b193:	(bad)  
  44b194:	(bad)  
  44b195:	shr    DWORD PTR [rdx+rbp*8],1
  44b198:	enter  0x4a86,0xe0
  44b19c:	(bad)  
  44b19d:	ss and dl,ah
  44b1a0:	pushf  
  44b1a1:	(bad)  
  44b1a2:	cld    
  44b1a3:	mov    dh,0xee
  44b1a5:	adc    eax,0x7f7bcfef
  44b1aa:	sub    ebp,DWORD PTR [rbp+0x1042d091]
  44b1b0:	adc    bl,ch
  44b1b2:	xor    BYTE PTR [rax+0x5ae96539],dl
  44b1b8:	mov    ch,0x5e
  44b1ba:	ins    BYTE PTR es:[rdi],dx
  44b1bb:	in     eax,dx
  44b1bc:	pop    rdx
  44b1bd:	cwde   
  44b1be:	and    dl,BYTE PTR [rsi]
  44b1c0:	(bad)  
  44b1c1:	int    0xac
  44b1c3:	fs mov ebx,0xc0f974c5
  44b1c9:	sub    dh,BYTE PTR [rdi+0x76fcad6c]
  44b1cf:	ins    DWORD PTR es:[rdi],dx
  44b1d0:	jae    0x44b234
  44b1d2:	in     eax,dx
  44b1d3:	leave  
  44b1d4:	mov    al,0x44
  44b1d6:	rex.RX mov sil,0x26
  44b1d9:	pop    rsi
  44b1da:	imul   eax,DWORD PTR [rcx],0x2
  44b1dd:	pop    rbx
  44b1de:	xor    al,0xf3
  44b1e0:	(bad)  
  44b1e1:	jmp    0xffffffff9575c5db
  44b1e6:	iret   
  44b1e7:	push   rbp
  44b1e8:	xor    dl,BYTE PTR [rbx]
  44b1ea:	and    BYTE PTR [rbx+0x7],dl
  44b1ed:	jg     0x44b1ba
  44b1ef:	mov    edx,0x54d1bcc8
  44b1f4:	movabs ds:0x29c8c5ab920b6b93,eax
  44b1fd:	loop   0x44b27a
  44b1ff:	lea    edi,[rdx+0x8cb21bd]
  44b205:	(bad)  
  44b206:	sub    esi,DWORD PTR [rbp+0x28be6a88]
  44b20c:	loopne 0x44b213
  44b20e:	scas   eax,DWORD PTR es:[rdi]
  44b20f:	xchg   ebp,eax
  44b210:	pop    rax
  44b211:	repz rex.WB
  44b213:	fs mov al,0xca
  44b216:	imul   edx,ecx,0x6a
  44b219:	push   rdx
  44b21a:	lods   al,BYTE PTR ds:[esi]
  44b21c:	enter  0x257e,0x40
  44b220:	mov    esi,0x56fe050f
  44b225:	jbe    0x44b239
  44b227:	add    dh,BYTE PTR [rbx+0x61]
  44b22a:	and    al,0x44
  44b22c:	pushf  
  44b22d:	retf   
  44b22e:	lods   al,BYTE PTR ds:[rsi]
  44b22f:	xor    esp,DWORD PTR [rax]
  44b231:	pop    rcx
  44b232:	(bad)  
  44b233:	xchg   ebx,eax
  44b234:	rex.WRXB
  44b235:	rex.WX outs dx,DWORD PTR ds:[rsi]
  44b237:	and    eax,0x8fa805b8
  44b23c:	add    al,0x6e
  44b23e:	in     eax,0xc8
  44b240:	hlt    
  44b241:	ficom  DWORD PTR [rdx+0x2834f7ad]
  44b247:	xchg   ebx,eax
  44b248:	pop    rdi
  44b249:	(bad)  
  44b24b:	rex.RXB sub al,0x2c
  44b24e:	xchg   esi,eax
  44b24f:	std    
  44b250:	sub    al,0xb0
  44b252:	adc    DWORD PTR [rip+0xffffffffabeae373],ecx        # 0xffffffffac2f95cb
  44b258:	mov    ecx,0xb70275ef
  44b25d:	stos   BYTE PTR es:[rdi],al
  44b25e:	mov    ebx,es
  44b260:	pop    rsp
  44b261:	jp     0x44b284
  44b263:	fcomp  DWORD PTR [rdi]
  44b265:	sub    bl,dh
  44b267:	jg     0x44b239
  44b269:	pop    rsi
  44b26a:	fist   WORD PTR [rcx-0x1404a6a9]
  44b270:	xor    DWORD PTR [rcx-0x7dafca81],0xd6d2c05b
  44b27a:	sbb    eax,0x2228e303
  44b27f:	pop    rbx
  44b280:	loopne 0x44b2fc
  44b282:	jle    0x44b264
  44b284:	push   rsi
  44b285:	shr    DWORD PTR [rcx],1
  44b287:	loop   0x44b22d
  44b289:	fisubr WORD PTR [rsi-0x49]
  44b28c:	jmp    0x44b2c6
  44b28e:	(bad)  
  44b28f:	sub    dl,al
  44b291:	nop
  44b292:	int3   
  44b293:	and    dl,BYTE PTR [rbp+0x394c9f39]
  44b299:	xor    edi,DWORD PTR [rax]
  44b29b:	sar    BYTE PTR [rbp+rdx*2+0x29],1
  44b29f:	sub    bh,BYTE PTR [rax]
  44b2a1:	add    eax,0xcca06af0
  44b2a6:	xchg   ebp,eax
  44b2a7:	mov    ecx,0xa9d64d10
  44b2ac:	jbe    0x44b27a
  44b2ae:	and    eax,0xef329c95
  44b2b3:	rex.WX and BYTE PTR [rbx],bl
  44b2b6:	xchg   edi,eax
  44b2b7:	cmp    BYTE PTR [rax],ch
  44b2b9:	xor    DWORD PTR [rdi+0x2b439812],ebx
  44b2bf:	movsxd ecx,DWORD PTR [rcx]
  44b2c1:	shl    DWORD PTR [rax-0x31c95224],0x9f
  44b2c8:	std    
  44b2c9:	mov    dl,0x2d
  44b2cb:	and    dl,BYTE PTR [rcx]
  44b2cd:	add    dh,bl
  44b2cf:	(bad)  
  44b2d0:	(bad)  
  44b2d2:	adc    al,cl
  44b2d4:	mov    esi,0x151c18b
  44b2d9:	loop   0x44b2fc
  44b2db:	movabs ds:0x292ddf591c2dd692,eax
  44b2e4:	mov    bh,0x9a
  44b2e6:	int3   
  44b2e7:	rcl    DWORD PTR [rbp-0x25403701],1
  44b2ed:	(bad)  
  44b2ee:	jle    0x44b342
  44b2f0:	pop    rsi
  44b2f1:	xchg   ebp,eax
  44b2f2:	fimul  DWORD PTR [rsi+0x5e2db991]
  44b2f8:	cmp    esi,edx
  44b2fa:	xor    al,0x40
  44b2fc:	vmovhpd xmm7,xmm9,xmm4
  44b300:	jne    0x44b2a2
  44b302:	je     0x44b332
  44b304:	adc    bl,BYTE PTR [rbx+0x4d]
  44b307:	(bad)  
  44b308:	sbb    eax,0xd8991e30
  44b30d:	cld    
  44b30e:	cwde   
  44b30f:	sbb    BYTE PTR [rcx+0x3ec55adb],bl
  44b315:	push   rbx
  44b316:	movabs al,ds:0xdbb713bd8cdc16df
  44b31f:	loopne 0x44b375
  44b321:	mov    DWORD PTR [rcx],eax
  44b323:	(bad)  
  44b324:	mov    cl,0xf8
  44b326:	loop   0x44b2fd
  44b328:	pop    rsp
  44b329:	rex.WRX (bad) 
  44b32b:	xor    eax,0x4e4655cf
  44b330:	sub    cl,BYTE PTR [rdi-0x35026531]
  44b336:	rex.X mov esi,DWORD PTR [rsi]
  44b339:	out    0xb9,al
  44b33b:	mov    DWORD PTR [rip+0x46a4a848],0x48500b24        # 0x46e95b8d
  44b345:	gs shr edx,1
  44b348:	(bad)  
  44b349:	sbb    DWORD PTR [rbx+0x2e],0x83867616
  44b350:	xchg   ecx,eax
  44b351:	cdq    
  44b352:	fs pop rbp
  44b354:	test   BYTE PTR [rcx+rax*2+0x3977fcd],dl
  44b35b:	repz push rsi
  44b35d:	test   BYTE PTR [rdx+0x4df19009],bl
  44b363:	add    DWORD PTR [rdx],eax
  44b365:	adc    DWORD PTR [rsp],edx
  44b368:	rol    DWORD PTR [rsi-0x1eebee0a],1
  44b36e:	int3   
  44b36f:	pop    rbp
  44b370:	mov    DWORD PTR [rcx],ecx
  44b372:	rex.X and spl,BYTE PTR [rcx]
  44b375:	adc    DWORD PTR [rcx],ebx
  44b377:	pop    rsi
  44b378:	out    0xc8,eax
  44b37a:	cld    
  44b37b:	lods   eax,DWORD PTR ds:[rsi]
  44b37c:	hlt    
  44b37d:	mov    ch,0x10
  44b37f:	rex.RB
  44b380:	rex.WR
  44b381:	fs data16 std 
  44b384:	jns    0x44b3e1
  44b386:	sbb    al,0x8b
  44b389:	cmp    ecx,0xb2a07cee
  44b38f:	nop
  44b390:	jne    0x44b3a3
  44b392:	(bad)  
  44b393:	cmp    al,0xd9
  44b395:	stos   BYTE PTR es:[rdi],al
  44b396:	mov    bl,0xf7
  44b398:	rex.W lods al,BYTE PTR ds:[rsi]
  44b39a:	xor    al,0x5e
  44b39c:	or     eax,ebx
  44b39e:	out    0x13,al
  44b3a0:	add    DWORD PTR [rdx],eax
  44b3a2:	retf   
  44b3a3:	in     al,dx
  44b3a4:	(bad)  
  44b3a5:	out    dx,al
  44b3a6:	and    DWORD PTR [rip+0xffffffffa95b3365],edx        # 0xffffffffa99fe711
  44b3ac:	add    ch,BYTE PTR [rdx-0x63aac17c]
  44b3b2:	xchg   edi,eax
  44b3b3:	jmp    0x44b3aa
  44b3b5:	jmp    0x44b423
  44b3b7:	sub    eax,0x49fe981b
  44b3bc:	sbb    al,0x77
  44b3be:	loop   0x44b438
  44b3c0:	pop    rcx
  44b3c1:	(bad)
  44b3c4:	push   rdi
  44b3c5:	or     BYTE PTR [rdx+rsi*4+0x79af20f],0x6e
  44b3cd:	adc    al,0x18
  44b3cf:	mov    dl,0xe3
  44b3d1:	pop    rsp
  44b3d2:	(bad)  
  44b3d3:	(bad)  
  44b3d4:	pop    rcx
  44b3d5:	sub    DWORD PTR [rbx+0x59f5684],ecx
  44b3db:	mov    ch,0xec
  44b3dd:	sub    eax,0xf5d665f0
  44b3e2:	ficom  DWORD PTR [rcx]
  44b3e4:	hlt    
  44b3e5:	out    0xa2,al
  44b3e7:	test   DWORD PTR [rsi],0x98a2d110
  44b3ed:	(bad)  
  44b3ee:	mov    al,0xcc
  44b3f0:	(bad)  
  44b3f1:	mov    edi,0xd2142014
  44b3f6:	and    dl,bh
  44b3f8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  44b3f9:	jbe    0x44b3c7
  44b3fb:	(bad)  
  44b3fc:	outs   dx,BYTE PTR gs:[rsi]
  44b3fe:	(bad)
  44b403:	std    
  44b404:	xchg   esp,eax
  44b405:	mov    al,0x87
  44b407:	(bad)  
  44b408:	mov    dl,0xa8
  44b40a:	repz xchg ebp,eax
  44b40c:	loopne 0x44b3c0
  44b40e:	mov    esi,0x31557b3e
  44b413:	and    BYTE PTR [rsi-0x4c1ad47b],ch
  44b419:	repnz push rdi
  44b41b:	jns    0x44b3c9
  44b41d:	xor    al,0x56
  44b41f:	sahf   
  44b420:	adc    ecx,DWORD PTR [rip+0xfffffffff5283765]        # 0xfffffffff56ceb8b
  44b426:	or     DWORD PTR [rbp+rdi*8+0x1d4c0f8f],edx
  44b42d:	sbb    al,0xa7
  44b42f:	and    bh,BYTE PTR [rax]
  44b431:	ss mov al,0xda
  44b434:	scas   al,BYTE PTR es:[rdi]
  44b435:	ins    BYTE PTR es:[rdi],dx
  44b436:	div    DWORD PTR [rax-0x39]
  44b439:	rex.RX
  44b43a:	ss jmp 0x44b3dc
  44b43d:	ja     0x44b45a
  44b43f:	ins    DWORD PTR es:[rdi],dx
  44b440:	ss (bad) 
  44b442:	and    al,0x55
  44b444:	ja     0x44b488
  44b446:	rex.WR pop rbx
  44b448:	sub    eax,0xad44ab12
  44b44d:	jrcxz  0x44b48b
  44b44f:	pop    rdi
  44b450:	add    eax,DWORD PTR [rdx-0x474fda89]
  44b456:	cmps   DWORD PTR fs:[rsi],DWORD PTR es:[rdi]
  44b458:	mov    QWORD PTR [rax-0x78],r14
  44b45c:	xor    DWORD PTR [ecx-0x67],ecx
  44b460:	push   0x41
  44b462:	rex.W (bad) 
  44b464:	fcmovnu st,st(5)
  44b466:	(bad)  
  44b467:	rol    edx,cl
  44b469:	nop
  44b46a:	cmp    bh,0xc3
  44b46d:	shl    BYTE PTR [rdx+0x5e1f0790],0xda
  44b474:	(bad)  
  44b475:	rex.RXB xor al,0xc4
  44b478:	scas   eax,DWORD PTR es:[rdi]
  44b479:	in     eax,dx
  44b47a:	mov    edi,0xef7046f3
  44b47f:	ins    DWORD PTR es:[rdi],dx
  44b480:	nop
  44b481:	gs xchg edi,eax
  44b483:	(bad)  
  44b485:	out    0xbd,al
  44b487:	(bad)  
  44b488:	repz (bad) 
  44b48a:	shr    dl,cl
  44b48c:	pushf  
  44b48d:	sub    r10,QWORD PTR [rbx+0x7e]
  44b491:	mov    bh,0xf5
  44b493:	movabs eax,ds:0xbdd396e71d3991da
  44b49c:	add    dl,BYTE PTR [rip+0x447b4c82]        # 0x44c00124
  44b4a2:	or     BYTE PTR [rax-0x4d372092],0x4
  44b4a9:	ror    dl,0xb5
  44b4ac:	rex.RB (bad) 
  44b4ae:	gs mov al,0x6b
  44b4b1:	cwde   
  44b4b2:	sub    edi,DWORD PTR [rbx]
  44b4b4:	(bad)  
  44b4b5:	sbb    DWORD PTR [rdi],edx
  44b4b7:	(bad)  
  44b4b8:	movabs eax,ds:0xa5e0b0553252dce1
  44b4c1:	adc    al,0x76
  44b4c3:	in     eax,dx
  44b4c4:	xlat   BYTE PTR ds:[rbx]
  44b4c5:	mov    dh,0x7e
  44b4c7:	call   0xffffffffedc69e83
  44b4cc:	(bad)  
  44b4cd:	rex jmp 0x35c0ba40
  44b4d3:	xor    BYTE PTR [rbp-0x4e2894a8],ah
  44b4d9:	nop
  44b4da:	rex.RXB add BYTE PTR [r9],r10b
  44b4dd:	lahf   
  44b4de:	mov    cl,ch
  44b4e0:	xchg   DWORD PTR [rdx-0x15f14c9f],ebp
  44b4e6:	(bad)  
  44b4e7:	jne    0x44b544
  44b4e9:	mov    DWORD PTR [rcx],eax
  44b4eb:	rex.WB ins BYTE PTR es:[rdi],dx
  44b4ed:	rex.RXB loopne 0x44b546
  44b4f0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  44b4f1:	rex.WX push rdx
  44b4f3:	xor    dh,BYTE PTR [rsi+rbx*2-0x6fed687c]
  44b4fa:	idiv   ebx
  44b4fc:	and    DWORD PTR [rbx+0x1c],0x2c
  44b500:	xor    BYTE PTR [rip+0xffffffffb21058fe],ch        # 0xffffffffb2550e04
  44b506:	mov    edx,0xcdc3688a
  44b50b:	sub    eax,0x4846641a
  44b510:	sbb    DWORD PTR [rax],edx
  44b512:	rcr    ebp,0xb2
  44b515:	test   eax,0x6dd5d957
  44b51a:	(bad)  
  44b51b:	ror    DWORD PTR [rbx-0x374019d4],0x29
  44b522:	sar    DWORD PTR [rdx],cl
  44b524:	scas   al,BYTE PTR es:[rdi]
  44b525:	mov    dh,0xff
  44b527:	int3   
  44b528:	sbb    ebx,ecx
  44b52a:	sbb    al,0x21
  44b52c:	push   rdi
  44b52d:	add    ch,BYTE PTR [rbx+0x640d0fb1]
  44b533:	cmp    ah,ah
  44b535:	(bad)  
  44b536:	and    BYTE PTR [rdx-0x4b1ba844],dh
  44b53c:	(bad)  
  44b53d:	or     BYTE PTR [rsp+rcx*1-0x144664a9],al
  44b544:	or     DWORD PTR [rcx-0x516a80e],eax
  44b54a:	(bad)  
  44b54b:	add    edx,eax
  44b54d:	sub    DWORD PTR [rbp+0x2d3d5c2d],ebx
  44b553:	jo     0x44b542
  44b555:	xchg   edi,eax
  44b556:	mov    ah,0xcf
  44b558:	lods   al,BYTE PTR ds:[rsi]
  44b559:	nop
  44b55a:	cmp    edi,edi
  44b55c:	clc    
  44b55d:	add    BYTE PTR [rcx+0x6d],bh
  44b560:	xor    ah,BYTE PTR [rdi]
  44b562:	movabs eax,ds:0x20df58adf6be250
  44b56b:	rol    DWORD PTR [rax],cl
  44b56d:	jge    0x44b591
  44b56f:	pop    rsp
  44b570:	(bad)  
  44b571:	fst    DWORD PTR [rbp+rax*8-0x359f3078]
  44b578:	jg     0x44b577
  44b57a:	mov    bh,0x19
  44b57c:	add    eax,DWORD PTR [rdx]
  44b57e:	sti    
  44b57f:	fdiv   QWORD PTR [rcx+0x7f]
  44b582:	adc    ebp,DWORD PTR [rax]
  44b584:	mov    edi,0x18e3a229
  44b589:	sbb    cl,BYTE PTR [rax]
  44b58b:	add    BYTE PTR [rcx+0x393bfd91],al
  44b591:	mov    ebx,0x80c5260d
  44b596:	(bad)
  44b599:	rex.RXB fmul QWORD PTR [r9+0x62]
  44b59d:	sub    cl,BYTE PTR [rsi+0x31]
  44b5a0:	ins    DWORD PTR es:[rdi],dx
  44b5a1:	pop    rdx
  44b5a2:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  44b5a3:	mov    edx,0x23252c93
  44b5a8:	(bad)  
  44b5a9:	lods   al,BYTE PTR ds:[rsi]
  44b5aa:	or     cl,bh
  44b5ac:	xor    edi,edx
  44b5ae:	(bad)  
  44b5af:	push   rax
  44b5b0:	fnsave [rdx+0x51]
  44b5b3:	out    dx,al
  44b5b4:	and    DWORD PTR [rsp+rbp*1+0x4cabf826],ecx
  44b5bb:	fcomp  QWORD PTR [rdi+0x6a0c9ff7]
  44b5c1:	gs (bad) 
  44b5c3:	mov    cl,0x6a
  44b5c5:	outs   dx,BYTE PTR ds:[rsi]
  44b5c6:	mov    bh,0x51
  44b5c8:	xor    BYTE PTR [rdx+0x3c],bl
  44b5cb:	jb     0x44b57b
  44b5cd:	ss int3 
  44b5cf:	sbb    DWORD PTR [rbp-0x2c],esp
  44b5d2:	test   eax,esp
  44b5d4:	cwde   
  44b5d5:	loopne 0x44b5cc
  44b5d7:	add    DWORD PTR [rbp+0x1e],0xaed2529d
  44b5de:	(bad)  
  44b5df:	(bad)  
  44b5e0:	cmp    al,0x7b
  44b5e2:	sbb    ecx,DWORD PTR [rcx+rsi*2]
  44b5e5:	and    DWORD PTR [rdx],esp
  44b5e7:	(bad)  
  44b5e8:	mov    eax,0xc5e6b794
  44b5ed:	add    r14b,BYTE PTR [rcx-0x6f]
  44b5f1:	fiadd  WORD PTR [rbx+0x12]
  44b5f4:	(bad)  
  44b5f5:	or     ecx,esi
  44b5f7:	sbb    BYTE PTR [rbx+rdi*8-0x6372519a],cl
  44b5fe:	rex.XB xor DWORD PTR [r9+0x8],esp
  44b602:	sbb    DWORD PTR [rsi+0x17b750f8],ebx
  44b608:	(bad)  
  44b609:	rex.WX jge 0x44b63c
  44b60c:	(bad)  
  44b60d:	lods   eax,DWORD PTR ds:[rsi]
  44b60e:	lods   al,BYTE PTR ds:[rsi]
  44b60f:	(bad)  
  44b610:	or     esp,DWORD PTR [rbx]
  44b612:	and    al,0x92
  44b614:	mov    edx,0xc15ff47d
  44b619:	inc    al
  44b61b:	cld    
  44b61c:	fstp   TBYTE PTR [rax-0x63ad7d78]
  44b622:	or     BYTE PTR [rdx],bh
  44b624:	out    0x53,eax
  44b626:	add    DWORD PTR [rcx+0x60],esp
  44b629:	fisttp DWORD PTR [rdi+0x7]
  44b62c:	scas   al,BYTE PTR es:[rdi]
  44b62d:	movsxd edi,DWORD PTR [rsp+rbp*8+0x3c60857b]
  44b634:	out    dx,eax
  44b635:	(bad)  
  44b637:	mov    ?,ebp
  44b639:	repz rex.XB xchg r12d,esi
  44b63d:	xor    esi,ecx
  44b63f:	jmp    QWORD PTR [rcx+0x1]
  44b642:	sahf   
  44b643:	cdq    
  44b644:	movabs ds:0xbb2c9ea9a1953b8a,al
  44b64d:	fsub   st,st(2)
  44b64f:	rex.R (bad) 
  44b651:	cmp    eax,0xa326b02a
  44b656:	push   rdx
  44b657:	adc    al,0x43
  44b659:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  44b65a:	imul   esp,DWORD PTR [rdx-0x1],0x55
  44b65e:	jmp    0x44b665
  44b660:	test   BYTE PTR [rax+0x7b2a1e53],ah
  44b666:	xor    eax,0x8c13fcac
  44b66b:	out    dx,eax
  44b66c:	or     bh,BYTE PTR [rsi]
  44b66e:	sbb    al,0x48
  44b670:	(bad)  [rsi]
  44b672:	(bad)  
  44b673:	sub    al,0xeb
  44b675:	gs xchg esp,eax
  44b677:	popf   
  44b678:	stc    
  44b679:	pop    rsp
  44b67a:	or     DWORD PTR [rcx],ebp
  44b67c:	mov    ebx,DWORD PTR [rcx+0x62adba17]
  44b682:	and    eax,0x5b9502da
  44b687:	sub    edi,DWORD PTR [rdx]
  44b689:	rex.WRXB
  44b68a:	rex.WRB je 0x44b61d
  44b68d:	fidivr DWORD PTR [rdx+rbp*1]
  44b690:	mov    eax,0x60917069
  44b695:	mov    eax,0x8b1ce640
  44b69a:	data16 stos BYTE PTR es:[rdi],al
  44b69c:	add    ch,BYTE PTR [rbp+0x3d]
  44b69f:	and    eax,0x30247fd0
  44b6a4:	iret   
  44b6a5:	rex.RB
  44b6a6:	fs out 0x22,eax
  44b6a9:	xor    al,BYTE PTR [rcx+0x739b2e50]
  44b6af:	sub    dh,bl
  44b6b1:	(bad)  
  44b6b2:	(bad)  
  44b6b3:	scas   al,BYTE PTR es:[rdi]
  44b6b4:	jmp    0xb4baa31
  44b6b9:	push   rbp
  44b6ba:	rex.R shl BYTE PTR [rax+riz*2+0x4f],0xb0
  44b6c0:	cmp    eax,0x698c1e20
  44b6c5:	sbb    ah,BYTE PTR [rax]
  44b6c7:	rcl    DWORD PTR [rbx+0x36],cl
  44b6ca:	lahf   
  44b6cb:	mov    ebx,0x4a58c43d
  44b6d0:	(bad)  
  44b6d1:	and    al,0x54
  44b6d3:	push   rbp
  44b6d4:	cmp    BYTE PTR [rsi],0x54
  44b6d7:	jne    0x44b67b
  44b6d9:	sub    eax,0x540b5c63
  44b6de:	add    ch,ah
  44b6e0:	div    BYTE PTR [rbp+0x6645d640]
  44b6e6:	mul    BYTE PTR [rdx]
  44b6e8:	add    al,0xaa
  44b6ea:	adc    al,0x55
  44b6ec:	ret    0x307
  44b6ef:	movsxd edi,DWORD PTR [rbp+0x61c1604b]
  44b6f5:	xchg   edx,eax
  44b6f6:	shl    BYTE PTR [rdx+rsi*4+0x1e],1
  44b6fa:	sbb    ah,BYTE PTR [rbp+rdx*4-0x44]
  44b6fe:	scas   al,BYTE PTR es:[rdi]
  44b6ff:	adc    eax,0x8dc24f88
  44b704:	pushf  
  44b705:	loop   0x44b764
  44b707:	rex.RB test al,0xe2
  44b70a:	adc    edx,DWORD PTR [rdi-0x35]
  44b70d:	cmp    DWORD PTR [rax+0x43],0x58b07c4c
  44b714:	cli    
  44b715:	(bad)  
  44b716:	cmp    DWORD PTR [rax-0x423180ee],0x2aea606c
  44b720:	ds ja  0x44b6d1
  44b723:	(bad)  
  44b724:	sbb    al,0x33
  44b726:	sub    eax,0x12a804e0
  44b72b:	push   rcx
  44b72c:	mov    dh,0x72
  44b72e:	mov    esp,0xe0f577ec
  44b733:	rol    DWORD PTR [rcx],0x2
  44b736:	lods   al,BYTE PTR ds:[rsi]
  44b737:	(bad)  
  44b738:	rex.WX
  44b739:	or     rdi,QWORD PTR [r8]
  44b73c:	cmp    ah,dl
  44b73e:	jbe    0x44b6cb
  44b740:	(bad)  
  44b741:	(bad)  
  44b742:	(bad)  [rsi-0x52]
  44b745:	ss int3 
  44b747:	adc    DWORD PTR [rcx],ebp
  44b749:	mov    ebp,0x9f239f47
  44b74f:	imul   r10,QWORD PTR [rcx-0x37],0xffffffffa50396c0
  44b757:	imul   ebx
  44b759:	add    al,ah
  44b75b:	rex.X jo 0x44b788
  44b75e:	mov    ch,0x2d
  44b760:	and    BYTE PTR [rdx],ah
  44b762:	mov    BYTE PTR [rcx],ah
  44b764:	repz adc DWORD PTR [rdi+0x4e406349],edx
  44b76b:	or     ebx,DWORD PTR [rsi+0x73]
  44b76e:	rcl    ecx,0x81
  44b771:	or     al,BYTE PTR [rdx]
  44b773:	xchg   ecx,eax
  44b774:	mov    ebp,0x315c7a57
  44b779:	mov    al,0x98
  44b77b:	rex.R xchg esp,eax
  44b77d:	xchg   esp,eax
  44b77e:	lock mov DWORD PTR [rsi],0x339f3ee3
  44b785:	sti    
  44b786:	xchg   esp,eax
  44b787:	xor    BYTE PTR [rsi+0x561ca007],ah
  44b78d:	(bad)  
  44b78e:	sub    edi,DWORD PTR [rdi+0x65]
  44b791:	jp     0x44b78a
  44b793:	js     0x44b7fa
  44b795:	imul   esp,DWORD PTR [rbx+0x57],0xffffff82
  44b799:	sbb    ebx,DWORD PTR [rdi-0x6a56fb56]
  44b79f:	cmp    dh,BYTE PTR [rdx]
  44b7a1:	sti    
  44b7a2:	push   0x60
  44b7a4:	lods   al,BYTE PTR cs:[rsi]
  44b7a6:	pop    rsp
  44b7a7:	xchg   edi,eax
  44b7a8:	lods   eax,DWORD PTR ds:[rsi]
  44b7a9:	rex.WRB (bad) 
  44b7ab:	fs out 0x2a,eax
  44b7ae:	mov    ecx,0xb2a4f6f3
  44b7b3:	popf   
  44b7b4:	repz out dx,al
  44b7b6:	sbb    ebx,DWORD PTR [rax-0x3098e499]
  44b7bc:	enter  0x2707,0x69
  44b7c0:	imul   ecx,DWORD PTR [rsi-0x33b7c296],0xffffffe1
  44b7c7:	add    al,0x32
  44b7c9:	sub    bh,BYTE PTR [rbx+0x6b]
  44b7cc:	sub    ch,BYTE PTR [rcx-0x1f]
  44b7cf:	adc    eax,0xb0a51e24
  44b7d4:	cmc    
  44b7d5:	and    DWORD PTR [rbp-0xe],esp
  44b7d8:	or     eax,0x81104903
  44b7dd:	and    eax,0xe8f57138
  44b7e2:	add    cl,ch
  44b7e4:	vpsadbw xmm3,xmm11,XMMWORD PTR [rdi+rcx*4]
  44b7e9:	or     edx,DWORD PTR [rdi+0x15]
  44b7ec:	hlt    
  44b7ed:	sbb    dl,BYTE PTR [rax-0x73e8306a]
  44b7f3:	rex.WB and BYTE PTR [r11],cl
  44b7f6:	jge    0x44b81f
  44b7f8:	xor    bh,cl
  44b7fa:	xchg   ebp,eax
  44b7fb:	xchg   r8d,eax
  44b7fd:	imul   edi,DWORD PTR [rsp+rcx*8-0x47],0xffffffb3
  44b802:	rdtsc  
  44b804:	cmp    eax,DWORD PTR gs:[rbx+rdx*2+0x32]
  44b809:	pop    rdx
  44b80a:	test   al,0xf1
  44b80c:	fiadd  WORD PTR [rbp-0x7ea3178b]
  44b812:	push   rbp
  44b813:	(bad)  
  44b814:	sub    al,BYTE PTR [rdx-0x2bf4e044]
  44b81a:	imul   bl
  44b81c:	or     edi,eax
  44b81e:	cdq    
  44b81f:	repz mov ecx,0x33cecec
  44b825:	and    eax,0xebeb2012
  44b82a:	mov    ecx,esp
  44b82c:	imul   edi,DWORD PTR [rbx],0x26
  44b82f:	nop
  44b830:	mov    ch,0xf4
  44b832:	pop    rdi
  44b833:	xchg   esi,eax
  44b834:	xchg   esi,eax
  44b835:	leave  
  44b836:	sar    DWORD PTR [rcx-0x63f3f729],0x98
  44b83d:	and    BYTE PTR [rsi],al
  44b83f:	xor    eax,0x10194c63
  44b844:	icebp  
  44b845:	hlt    
  44b846:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  44b847:	ss jrcxz 0x44b7de
  44b84a:	imul   esp,DWORD PTR [rdi+0x3],0xced5da86
  44b851:	xor    eax,0x4863e406
  44b856:	add    al,0x46
  44b858:	movs   QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  44b85a:	mov    al,0xf2
  44b85c:	fidivr DWORD PTR [rcx]
  44b85e:	rex.W outs dx,DWORD PTR ds:[rsi]
  44b860:	(bad)  
  44b861:	fiadd  DWORD PTR [rsi+0x4]
  44b864:	fs push rsi
  44b866:	xlat   BYTE PTR ds:[rbx]
  44b867:	nop
  44b868:	push   rcx
  44b869:	fldenv [rbp+0x6f]
  44b86c:	or     ah,0xb
  44b86f:	add    ecx,esi
  44b871:	movabs al,ds:0x9f3229a802d60a6
  44b87a:	lods   eax,DWORD PTR ds:[rsi]
  44b87b:	ins    DWORD PTR es:[rdi],dx
  44b87c:	std    
  44b87d:	push   rcx
  44b87e:	jp     0x44b84b
  44b880:	(bad)  
  44b881:	enter  0x232c,0x5f
  44b885:	xor    esi,DWORD PTR [rax-0xfcc2980]
  44b88b:	and    DWORD PTR [rbp-0x7d],0x2a27c6b3
  44b892:	int    0x2b
  44b894:	(bad)  
  44b895:	(bad)  
  44b896:	icebp  
  44b897:	mov    bl,0xb8
  44b899:	push   rdi
  44b89a:	adc    QWORD PTR [r15+0x44],r14
  44b89e:	jrcxz  0x44b913
  44b8a0:	fs stos DWORD PTR es:[rdi],eax
  44b8a2:	sub    DWORD PTR [rcx+0x28a9aa98],esp
  44b8a8:	dec    edx
  44b8aa:	sahf   
  44b8ab:	sub    al,BYTE PTR [rdx+0x31]
  44b8ae:	stos   BYTE PTR es:[rdi],al
  44b8af:	push   rdx
  44b8b0:	xchg   esp,eax
  44b8b1:	nop
  44b8b2:	(bad)  
  44b8b3:	mov    ch,0xe4
  44b8b5:	mov    dh,0x12
  44b8b7:	test   al,0x30
  44b8b9:	(bad)
  44b8bc:	and    al,0x1c
  44b8be:	nop
  44b8bf:	sbb    BYTE PTR [rdi],bl
  44b8c1:	adc    DWORD PTR [rsp+rsi*2+0x64d1083b],ebx
  44b8c8:	or     al,BYTE PTR [rcx-0x10fb3fd7]
  44b8ce:	(bad)  
  44b8cf:	loopne 0x44b8e0
  44b8d1:	add    bl,BYTE PTR [rdi+0x4c103edf]
  44b8d7:	or     BYTE PTR [rdi-0x535721b4],ah
  44b8dd:	xchg   ebx,eax
  44b8de:	in     eax,dx
  44b8df:	int3   
  44b8e0:	adc    DWORD PTR [rbp-0x190cc557],0x14bf1d40
  44b8ea:	or     al,cl
  44b8ec:	lahf   
  44b8ed:	(bad)  
  44b8ee:	(bad)  
  44b8ef:	cwde   
  44b8f0:	mov    ah,0x75
  44b8f2:	mov    DWORD PTR [rsi],eax
  44b8f4:	(bad)  
  44b8f5:	and    edi,DWORD PTR [rax+0x3c1f386c]
  44b8fb:	cmp    al,0x30
  44b8fd:	out    0x7e,eax
  44b8ff:	jbe    0x44b961
  44b901:	rcl    BYTE PTR [rsi],1
  44b903:	jle    0x44b8e3
  44b905:	(bad)  
  44b906:	push   rax
  44b907:	and    al,BYTE PTR [rcx+0x53fa288e]
  44b90d:	fwait
  44b90e:	(bad)  
  44b90f:	stc    
  44b910:	or     al,0x69
  44b912:	mov    esp,0xde503bbe
  44b917:	retf   0xc87c
  44b91a:	mov    esi,0x6abf981c
  44b91f:	iret   
  44b920:	add    dl,dh
  44b922:	adc    ebx,DWORD PTR [rbx-0x5]
  44b925:	xor    ah,BYTE PTR [rdi-0x28ddd307]
  44b92b:	es xchg ebx,eax
  44b92d:	retf   
  44b92e:	mov    cl,dl
  44b930:	(bad)  
  44b931:	gs sub eax,0xcc0a5861
  44b937:	(bad)  
  44b938:	int    0x73
  44b93a:	fidivr WORD PTR gs:[rdi-0x252c21f3]
  44b941:	xchg   ebp,eax
  44b942:	cmp    eax,0xea71aa29
  44b947:	xchg   DWORD PTR [rbp+0x9],ecx
  44b94a:	sub    eax,0xa0397f0b
  44b94f:	mov    ah,0x4a
  44b951:	fs in  al,0x37
  44b954:	(bad)  
  44b955:	test   BYTE PTR [rsi+0x69],bl
  44b958:	ins    DWORD PTR es:[rdi],dx
  44b959:	and    BYTE PTR [rdi+0x19e2c9b2],ch
  44b95f:	xchg   DWORD PTR [rbx-0x70cc9600],ebp
  44b965:	es rex.R or BYTE PTR cs:[rax],0xd6
  44b96b:	(bad)  
  44b96c:	sar    BYTE PTR [rip+0xffffffffc16afef3],0x79        # 0xffffffffc1afb866
  44b973:	adc    ebx,0x5
  44b976:	popf   
  44b977:	shl    BYTE PTR [rdi+0x40540dbc],1
  44b97d:	fild   DWORD PTR [rbx-0x5c9d3f27]
  44b983:	xchg   edx,eax
  44b984:	mul    DWORD PTR [rcx-0x7f]
  44b987:	and    al,0x22
  44b989:	(bad)  
  44b98a:	(bad)  
  44b98b:	pushf  
  44b98c:	test   eax,0xe5135f12
  44b991:	out    0xb4,eax
  44b993:	iret   
  44b994:	nop
  44b995:	pop    rcx
  44b996:	add    eax,0x4fe71d69
  44b99b:	(bad)  
  44b99c:	(bad)  
  44b99d:	rex cld 
  44b99f:	mov    BYTE PTR [rcx],ch
  44b9a1:	(bad)  
  44b9a2:	mov    BYTE PTR [rcx-0x4f],dl
  44b9a5:	sub    al,0x56
  44b9a7:	adc    BYTE PTR [rsi],dl
  44b9a9:	loope  0x44b93c
  44b9ab:	pop    rax
  44b9ac:	(bad)  
  44b9ad:	(bad)  
  44b9ae:	mov    ?,eax
  44b9b0:	je     0x44b9ff
  44b9b2:	(bad)  
  44b9b3:	ss sbb eax,0x51205bbc
  44b9b9:	fcom   QWORD PTR [rbx+0x5c11cfd3]
  44b9bf:	(bad)  
  44b9c0:	shl    BYTE PTR [rbp+rcx*1-0x37],0x86
  44b9c5:	add    cl,BYTE PTR [rbp+0x70]
  44b9c8:	or     dh,BYTE PTR [rdx-0x1b]
  44b9cb:	fwait
  44b9cc:	(bad)  
  44b9cd:	sub    DWORD PTR [rcx-0x38fa3fa3],ebx
  44b9d3:	shl    DWORD PTR [rdx+0x60],0x4a
  44b9d7:	push   0xffffffffe76ca6e5
  44b9dc:	loop   0x44b9ac
  44b9de:	xchg   ebx,eax
  44b9df:	in     eax,0x96
  44b9e1:	pop    rdx
  44b9e2:	jnp    0x44b9b2
  44b9e4:	xchg   edi,eax
  44b9e5:	mov    ecx,0xb1851b87
  44b9ea:	cwde   
  44b9eb:	or     DWORD PTR [rdx+rcx*2+0x4ae36549],0x20
  44b9f3:	xchg   rdi,rax
  44b9f5:	add    eax,DWORD PTR [rbx]
  44b9f7:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  44b9f8:	pop    rsp
  44b9f9:	retf   0x8209
  44b9fc:	jb     0x44b9a5
  44b9fe:	rex
  44b9ff:	ss push rsp
  44ba01:	stos   BYTE PTR es:[rdi],al
  44ba02:	sub    esi,DWORD PTR [rdi+0x19]
  44ba05:	(bad)  
  44ba06:	xchg   BYTE PTR [rax],ch
  44ba08:	fisubr DWORD PTR [rdx-0xa2fd994]
  44ba0e:	repz lsl edx,bp
  44ba12:	test   BYTE PTR [rcx-0x35],al
  44ba15:	loopne 0x44b9ea
  44ba17:	(bad)  
  44ba18:	pushf  
  44ba19:	sbb    BYTE PTR [rcx],ah
  44ba1b:	xchg   ebp,eax
  44ba1c:	jbe    0x44ba8a
  44ba1e:	add    al,0xc6
  44ba20:	jns    0x44b9d0
  44ba22:	jrcxz  0x44b9be
  44ba24:	xchg   esp,eax
  44ba25:	jno    0x44ba50
  44ba27:	clc    
  44ba28:	rex.RX
  44ba29:	lock lods eax,DWORD PTR ds:[rsi]
  44ba2b:	rex mov ecx,0x1416ec8e
  44ba31:	(bad)  
  44ba32:	add    edi,ebp
  44ba34:	xor    al,0x5e
  44ba36:	ret    0x2c40
  44ba39:	or     BYTE PTR [rax+0x1c11408d],cl
  44ba3f:	rex.X
  44ba40:	rex.B jl 0x44ba5f
  44ba43:	(bad)  
  44ba44:	retf   
  44ba45:	sub    dl,bl
  44ba47:	sub    DWORD PTR [rcx],esi
  44ba49:	push   rdx
  44ba4a:	adc    dl,BYTE PTR [rdi+rdx*8]
  44ba4d:	mov    BYTE PTR ss:[rbp+0x5ffd8c76],0x8
  44ba55:	or     cl,al
  44ba57:	(bad)  
  44ba58:	add    eax,ecx
  44ba5a:	shr    DWORD PTR [rdi],0x84
  44ba5d:	sbb    DWORD PTR [rdx],0xffffff9b
  44ba60:	(bad)  
  44ba61:	sub    eax,ecx
  44ba63:	xchg   esi,eax
  44ba64:	add    esi,DWORD PTR [rsi]
  44ba66:	js     0x44bab8
  44ba68:	jo     0x44ba15
  44ba6a:	loopne 0x44bade
  44ba6c:	add    DWORD PTR [rdi],edi
  44ba6e:	pushf  
  44ba6f:	es call 0x36bdf8f9
  44ba75:	adc    bl,al
  44ba77:	xor    eax,ecx
  44ba79:	and    eax,0x5364be03
  44ba7e:	leave  
  44ba7f:	add    edi,DWORD PTR [rcx-0x8]
  44ba82:	rex.W (bad) 
  44ba84:	jrcxz  0x44bb05
  44ba86:	jle    0x44ba89
  44ba88:	rex.X (bad) 
  44ba8a:	add    al,0x97
  44ba8c:	push   0x56be598b
  44ba91:	xchg   ecx,eax
  44ba92:	adc    DWORD PTR [rdi+0x31],esp
  44ba95:	mov    bl,0x10
  44ba97:	cwde   
  44ba98:	retf   
  44ba99:	retf   0xb29c
  44ba9c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  44ba9d:	fdiv   DWORD PTR [rip+0xffffffffdc553305]        # 0xffffffffdc99eda8
  44baa3:	adc    esp,DWORD PTR [rax]
  44baa5:	cmp    al,0xe1
  44baa7:	(bad)  
  44baa8:	in     eax,0x52
  44baaa:	sbb    eax,0xde207efe
  44baaf:	(bad)  
  44bab0:	(bad)  
  44bab1:	cmp    DWORD PTR [rax+0x49a9204e],0xbe207868
  44babb:	ficomp WORD PTR gs:[rbx]
  44babe:	rex.WR jb 0x44baef
  44bac1:	and    bl,BYTE PTR [rdi+0x3f]
  44bac4:	push   rax
  44bac5:	cli    
  44bac6:	(bad)  
  44bac7:	jne    0x44ba69
  44bac9:	sub    al,0x14
  44bacb:	xor    al,0x48
  44bacd:	(bad)  
  44bace:	sbb    esp,DWORD PTR [rcx]
  44bad0:	scas   eax,DWORD PTR es:[rdi]
  44bad1:	rex.WR mov r11b,BYTE PTR [rax]
  44bad4:	adc    al,0xe2
  44bad6:	ins    DWORD PTR es:[rdi],dx
  44bad7:	or     esp,0x4bfc16b4
  44badd:	jmp    0x44ba67
  44badf:	(bad)  
  44bae0:	and    BYTE PTR [rax+riz*4+0x5593bf33],ah
  44bae7:	sub    BYTE PTR [rsi+0x3203600],cl
  44baed:	mov    ah,0x21
  44baef:	mov    al,BYTE PTR [rip+0xffffffffe5542a20]        # 0xffffffffe598e515
  44baf5:	xor    eax,0x8edc3143
  44bafa:	rcr    BYTE PTR [rcx+riz*2+0x6400a3],0xd9
  44bb02:	rex.WB cqo 
  44bb04:	(bad)  
  44bb05:	pop    rdx
  44bb06:	fild   DWORD PTR [rbx]
  44bb08:	gs mov bl,0x32
  44bb0b:	push   rbp
  44bb0c:	jbe    0x44bb68
  44bb0e:	or     al,0x96
  44bb10:	add    dl,ch
  44bb12:	add    al,0xe2
  44bb14:	sbb    BYTE PTR [rax],bh
  44bb16:	cmp    DWORD PTR [r10],esp
  44bb19:	xor    BYTE PTR [rdi],cl
  44bb1b:	enterw 0x86ba,0xf9
  44bb20:	xor    edx,0xffffffd7
  44bb23:	mov    dh,0xd6
  44bb25:	mov    ds,WORD PTR [rcx]
  44bb27:	pop    rsi
  44bb28:	lahf   
  44bb29:	ror    cl,0xc4
  44bb2c:	lahf   
  44bb2d:	pcmpgtb mm2,QWORD PTR [rax+0x25]
  44bb31:	mov    ebx,0x324c896c
  44bb36:	mov    al,0x52
  44bb38:	sbb    al,0xc9
  44bb3a:	cmp    dh,cl
  44bb3c:	xor    DWORD PTR [rbp+riz*2-0x25],ebp
  44bb40:	(bad)  
  44bb41:	cwde   
  44bb42:	(bad)  
  44bb43:	sbb    al,0x19
  44bb45:	fsubr  QWORD PTR [rbx]
  44bb47:	jo     0x44bbc6
  44bb49:	xlat   BYTE PTR ds:[rbx]
  44bb4a:	mov    dl,0xef
  44bb4c:	cdq    
  44bb4d:	in     eax,dx
  44bb4e:	cmp    al,0x59
  44bb50:	fwait
  44bb51:	shl    BYTE PTR [rax-0xe4e84ef],1
  44bb57:	jb     0x44bb99
  44bb59:	sub    BYTE PTR [rdx+0x23],ch
  44bb5c:	add    al,0x2a
  44bb5e:	and    edx,edi
  44bb60:	adc    DWORD PTR [rsi+riz*8+0x43],edx
  44bb64:	(bad)  
  44bb65:	rex.X out 0x26,al
  44bb68:	push   rsi
  44bb69:	or     ch,cl
  44bb6b:	(bad)  
  44bb6c:	(bad)  
  44bb6d:	jmp    0x6a991ee5
  44bb72:	pop    rdi
  44bb73:	and    eax,ebx
  44bb75:	(bad)  
  44bb76:	lock in eax,dx
  44bb78:	rex.RX idiv BYTE PTR [rsp+r10*4]
  44bb7c:	(bad)  
  44bb7d:	(bad)  
  44bb7e:	fdivp  st(4),st
  44bb80:	jge    0x44bb2b
  44bb82:	add    BYTE PTR [rcx],ch
  44bb84:	out    0x2,al
  44bb86:	add    al,0x55
  44bb88:	loope  0x44bbc7
  44bb8a:	xor    eax,0x3688cd90
  44bb8f:	(bad)  
  44bb90:	and    cl,dl
  44bb92:	push   rcx
  44bb93:	add    DWORD PTR [rdi-0x77],ebx
  44bb96:	pop    rbp
  44bb97:	(bad)  
  44bb98:	xchg   ebx,eax
  44bb99:	sub    cl,BYTE PTR [rdi+0x2]
  44bb9c:	push   rdx
  44bb9d:	or     DWORD PTR [rcx+0x3c758131],esi
  44bba3:	sar    BYTE PTR [rdx],cl
  44bba5:	jmp    QWORD PTR [rcx]
  44bba7:	sub    esp,0x2ad333ea
  44bbad:	(bad)  
  44bbae:	rex.WB jp 0x44bbe0
  44bbb1:	or     ecx,DWORD PTR [rax+0x52e969ba]
  44bbb7:	xor    BYTE PTR [rax+0x3823897c],0x34
  44bbbe:	(bad)  
  44bbbf:	loopne 0x44bbdc
  44bbc1:	pop    rdi
  44bbc2:	repnz test eax,0x5a12a1e9
  44bbc8:	sbb    DWORD PTR [rsi+0x12fa2572],ebp
  44bbce:	leave  
  44bbcf:	pop    rcx
  44bbd0:	(bad)  
  44bbd1:	xchg   ebx,eax
  44bbd2:	cld    
  44bbd3:	push   rbx
  44bbd4:	sbb    DWORD PTR [rdi-0x24efc7fe],edx
  44bbda:	add    eax,0x9d02f3d3
  44bbdf:	movabs ds:0x655fb78c6238521e,al
  44bbe8:	(bad)  
  44bbe9:	xor    dl,BYTE PTR [rdi+0x101d2862]
  44bbef:	rex.WRX
  44bbf0:	es xchg esp,eax
  44bbf2:	jns    0x44bc5b
  44bbf4:	(bad)  
  44bbf5:	xor    edx,ebp
  44bbf7:	test   DWORD PTR [rsi-0x51],eax
  44bbfa:	retf   0xa69
  44bbfd:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  44bbfe:	pop    rbp
  44bbff:	(bad)  
  44bc00:	xor    bh,dh
  44bc02:	cmp    ebp,DWORD PTR [rax+rdi*4]
  44bc05:	jae    0x44bbc7
  44bc07:	(bad)  
  44bc08:	(bad)  
  44bc09:	sbb    BYTE PTR [rcx-0x791378f7],bh
  44bc0f:	int3   
  44bc10:	push   rsp
  44bc11:	(bad)  
  44bc12:	mov    esp,0xc9f05275
  44bc17:	jl     0x44bc25
  44bc19:	(bad)  
  44bc1a:	movsxd ecx,eax
  44bc1c:	icebp  
  44bc1d:	rex.X xchg ebx,eax
  44bc1f:	jno    0x44bc0b
  44bc21:	(bad)  
  44bc22:	imul   ebx,esp,0x28
  44bc25:	(bad)  
  44bc26:	sbb    BYTE PTR [rcx],bl
  44bc28:	jns    0x678ae893
  44bc2e:	cmp    bh,dl
  44bc30:	xor    BYTE PTR [rdi+0x21b54025],ah
  44bc36:	(bad)  
  44bc37:	mov    dh,0xc0
  44bc39:	(bad)  
  44bc3a:	rex.B
  44bc3b:	ss fwait
  44bc3d:	or     ecx,esp
  44bc3f:	cmp    DWORD PTR [rax],edx
  44bc41:	test   dl,bl
  44bc43:	(bad)  
  44bc44:	and    eax,DWORD PTR [rip+0xffffffffcc083e26]        # 0xffffffffcc4cfa70
  44bc4a:	mov    cl,0x32
  44bc4c:	and    edx,ecx
  44bc4e:	bnd jle 0x44bc09
  44bc51:	sbb    eax,0x6a643f97
  44bc56:	(bad)  
  44bc57:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  44bc58:	(bad)  
  44bc59:	enter  0x32e,0xff
  44bc5d:	jno    0x44bc1f
  44bc5f:	stc    
  44bc60:	pushf  
  44bc61:	int3   
  44bc62:	xchg   ecx,eax
  44bc63:	mov    DWORD PTR [rdx+rdi*8],0x5779eaa6
  44bc6a:	adc    BYTE PTR [rax+0x55a100c4],0x27
  44bc71:	rex.R (bad) 
  44bc73:	fwait
  44bc74:	lods   eax,DWORD PTR ds:[rsi]
  44bc75:	sub    eax,0x9caf9e19
  44bc7a:	outs   dx,DWORD PTR ds:[rsi]
  44bc7b:	in     al,dx
  44bc7c:	(bad)  
  44bc7d:	(bad)  
  44bc7f:	mov    DWORD PTR [rax-0x2e7df954],esp
  44bc85:	jne    0x44bc43
  44bc87:	cmp    al,BYTE PTR [rsi]
  44bc89:	shl    DWORD PTR [rbp+0x6d025c6f],0x2e
  44bc90:	mov    eax,0x9cd32056
  44bc95:	cmp    ebx,DWORD PTR [rax-0x51]
  44bc98:	xor    bh,BYTE PTR [rcx]
  44bc9a:	nop
  44bc9b:	rex.WB lods rax,QWORD PTR ds:[rsi]
  44bc9d:	fbld   TBYTE PTR [rsi-0x3fa69df1]
  44bca3:	adc    ecx,ecx
  44bca5:	fild   DWORD PTR [rsi]
  44bca7:	retf   0x845a
  44bcaa:	xchg   ecx,eax
  44bcab:	stc    
  44bcac:	rex.WRX (bad) fs:[rcx+r10*4]
  44bcb1:	fadd   DWORD PTR [rbp+rbx*8-0x3783c4ac]
  44bcb8:	mov    gs,esp
  44bcba:	(bad)  
  44bcbb:	cmp    al,0x62
  44bcbd:	(bad)  
  44bcbe:	lods   eax,DWORD PTR ds:[rsi]
  44bcbf:	clc    
  44bcc0:	push   rbp
  44bcc1:	and    eax,0x16fed6b8
  44bcc6:	sbb    ebx,edx
  44bcc8:	loopne 0x44bcd1
  44bcca:	push   rbx
  44bccb:	xor    BYTE PTR [rsi+rbx*4-0x6dfa89f5],ah
  44bcd2:	test   BYTE PTR [rax+0x433eec25],bh
  44bcd8:	pop    rsi
  44bcd9:	loop   0x44bca6
  44bcdb:	lahf   
  44bcdc:	(bad)  
  44bcdd:	xchg   esi,eax
  44bcde:	(bad)  
  44bce0:	sub    eax,0x6ad4e1b0
  44bce5:	and    BYTE PTR [rsi],bl
  44bce7:	rex.WRX or spl,r8b
  44bcea:	fwait
  44bceb:	cwde   
  44bcec:	shr    DWORD PTR [rdi],1
  44bcee:	mov    cl,0xfe
  44bcf0:	rol    BYTE PTR [rax+0x3c],0xfa
  44bcf4:	pop    rbx
  44bcf5:	mov    esp,0x75bd588
  44bcfa:	(bad)  
  44bcfb:	xchg   BYTE PTR [rax],dl
  44bcfd:	iret   
  44bcfe:	jno    0x44bc84
  44bd00:	xchg   ebx,eax
  44bd01:	jle    0x44bd19
  44bd03:	enter  0x607e,0x9e
  44bd07:	mov    ch,0xd6
  44bd09:	cmps   BYTE PTR cs:[rsi],BYTE PTR es:[rdi]
  44bd0b:	je     0x44bd63
  44bd0d:	sub    edx,DWORD PTR cs:[rbx+0x6f]
  44bd11:	sbb    bh,BYTE PTR [rax+rdi*1]
  44bd14:	xor    al,0x17
  44bd17:	jbe    0x44bcb5
  44bd19:	jb     0x44bd68
  44bd1b:	add    BYTE PTR [rbx+0x28],dl
  44bd1e:	add    esp,DWORD PTR [rdi+0x20]
  44bd21:	jae    0x44bd85
  44bd23:	or     bh,BYTE PTR [rdi-0x2a]
  44bd26:	(bad)  
  44bd27:	cmp    eax,0x9f345f47
  44bd2c:	or     ebp,DWORD PTR [rsi-0x29]
  44bd2f:	(bad)  
  44bd30:	out    0x1d,al
  44bd32:	(bad)  
  44bd33:	(bad)  
  44bd34:	retf   
  44bd35:	mov    ah,0x9c
  44bd37:	jo     0x44bcee
  44bd39:	rex pop rbp
  44bd3b:	(bad)  
  44bd3c:	stos   DWORD PTR es:[rdi],eax
  44bd3d:	xor    ch,al
  44bd3f:	pop    rbx
  44bd40:	add    al,cl
  44bd42:	lods   eax,DWORD PTR ds:[rsi]
  44bd43:	fs rex jo 0x44bd0d
  44bd47:	xchg   edx,eax
  44bd48:	add    eax,0x54c813cf
  44bd4d:	gs sbb dl,ch
  44bd50:	sub    BYTE PTR [rax],dl
  44bd52:	(bad)  
  44bd53:	pop    rbp
  44bd54:	pop    rdi
  44bd55:	fisttp DWORD PTR [rax]
  44bd57:	js     0x44bcfa
  44bd59:	(bad)  
  44bd5a:	mov    esi,0x1cb887cc
  44bd5f:	cmc    
  44bd60:	mov    ecx,0x46202d60
  44bd65:	push   rbp
  44bd66:	ss out 0xed,eax
  44bd69:	rex.WB (bad) 
  44bd6b:	cmc    
  44bd6c:	sbb    DWORD PTR [rdi+rbx*1],ebx
  44bd6f:	enter  0xecb6,0xe6
  44bd73:	outs   dx,DWORD PTR ds:[rsi]
  44bd74:	rex.WRX and QWORD PTR [rdx],r14
  44bd77:	in     eax,0xd0
  44bd79:	stc    
  44bd7a:	mov    esp,0x4085b647
  44bd7f:	(bad)  
  44bd80:	(bad)  
  44bd81:	adc    al,0xd4
  44bd83:	push   rdi
  44bd84:	movabs al,ds:0x10e080e8f7146d4
  44bd8d:	rex.XB pop r14
  44bd8f:	jge    0x44bd61
  44bd91:	xchg   cl,dh
  44bd93:	mov    cl,0x3b
  44bd95:	and    DWORD PTR [rbx+rdx*1+0x42],esp
  44bd99:	sub    ah,BYTE PTR [rax+0x26dc204]
  44bd9f:	push   rbp
  44bda0:	(bad)  
  44bda1:	and    cl,0x74
  44bda4:	jle    0x44bd76
  44bda6:	push   rdi
  44bda7:	lahf   
  44bda8:	(bad)  
  44bda9:	and    dl,BYTE PTR [rax+0x391e1039]
  44bdaf:	add    eax,0xd6436a4
  44bdb4:	mov    ss,WORD PTR [rdi]
  44bdb6:	rex.R (bad) 
  44bdb8:	pushf  
  44bdb9:	adc    BYTE PTR [rdx],dl
  44bdbb:	or     dl,bh
  44bdbd:	xor    BYTE PTR [rsi-0x3003fbe1],dl
  44bdc3:	jbe    0x44bd9f
  44bdc5:	ficom  DWORD PTR [rdi]
  44bdc7:	call   0xffffffffc058de8b
  44bdcc:	jl     0x44bdfd
  44bdce:	jae    0x44bde3
  44bdd0:	cmp    al,0x73
  44bdd2:	(bad)  
  44bdd3:	and    eax,0xda57f539
  44bdd8:	jmp    0xffffffff9688eee8
  44bddd:	mov    eax,DWORD PTR [rdi+riz*8]
  44bde0:	psubb  mm0,mm2
  44bde3:	sub    edi,edi
  44bde5:	adc    DWORD PTR [rbx],edi
  44bde7:	pop    rcx
  44bde8:	rex.X sub al,0x9c
  44bdeb:	xor    DWORD PTR [rax-0x72],edx
  44bdee:	jp     0x44bd75
  44bdf0:	xor    esi,DWORD PTR [rdi+rcx*8-0x184e259a]
  44bdf7:	retf   
  44bdf8:	jmp    0x44bd88
  44bdfa:	idiv   dh
  44bdfc:	pop    rsp
  44bdfd:	jns    0x44bddc
  44bdff:	(bad)  
  44be00:	rex.W add al,spl
  44be03:	sbb    dl,BYTE PTR [rcx]
  44be05:	xchg   ecx,eax
  44be06:	jrcxz  0x44be1e
  44be08:	add    DWORD PTR [rdi-0x37],edi
  44be0b:	rex.X mov BYTE PTR [rbp+0x78],0x54
  44be10:	jle    0x44bdd8
  44be12:	test   DWORD PTR [rsi+rax*8-0x73da635d],eax
  44be19:	(bad)  
  44be1a:	(bad)  
  44be1b:	ds (bad) 
  44be1d:	(bad)  
  44be1e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  44be1f:	mov    dl,0xa6
  44be21:	push   0xffffffffffffffef
  44be23:	pop    rsi
  44be24:	add    DWORD PTR [rbx-0x4e],ebx
  44be27:	add    DWORD PTR [rdx],esp
  44be29:	adc    dh,BYTE PTR [rcx-0x13]
  44be2c:	sbb    dl,BYTE PTR [rbx+0x1b4d1176]
  44be32:	xchg   edx,eax
  44be33:	adc    dh,BYTE PTR [rdx]
  44be35:	adc    edx,eax
  44be37:	adc    bh,BYTE PTR [rax+0x3e3de647]
  44be3d:	cmp    BYTE PTR [rdi+0x201e6e2d],al
  44be43:	adc    al,0x82
  44be45:	mov    cl,0x27
  44be47:	mov    dl,0x11
  44be49:	mov    ebp,DWORD PTR [rbx+0x338cfa04]
  44be4f:	ds xchg ebx,eax
  44be51:	pop    rcx
  44be52:	push   rbp
  44be53:	xchg   esi,eax
  44be54:	fisttp WORD PTR [rcx]
  44be56:	push   rsi
  44be57:	(bad)  
  44be58:	fld    st(0)
  44be5a:	fcom   DWORD PTR [rsi+rcx*2-0x1e]
  44be5e:	(bad)  
  44be5f:	cwde   
  44be60:	hlt    
  44be61:	in     eax,dx
  44be62:	add    DWORD PTR cs:[rdx-0xe],esp
  44be66:	sbb    ebx,DWORD PTR [rdi]
  44be68:	mov    eax,0xbfe7189e
  44be6d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  44be6e:	xor    BYTE PTR [rax],0xe3
  44be71:	fnstsw WORD PTR [rbx]
  44be73:	add    al,0xb6
  44be75:	rex.B call 0x67c0b92b
  44be7b:	(bad)  
  44be7c:	add    eax,0x15d53d73
  44be81:	sbb    BYTE PTR [rdx-0x4d664d65],dh
  44be87:	cmp    dh,bl
  44be89:	mov    ecx,0x18918702
  44be8e:	in     al,dx
  44be8f:	and    eax,DWORD PTR [rcx-0x4561aac0]
  44be95:	mov    eax,0x426c5c01
  44be9a:	mov    ebx,0x833ecd97
  44be9f:	mov    cl,0xfd
  44bea1:	xor    al,0xa0
  44bea3:	xchg   edx,eax
  44bea4:	jmp    0x44be37
  44bea6:	pop    rbp
  44bea7:	mov    edi,0xeb6cc904
  44beac:	xor    esi,edx
  44beae:	mov    edx,0x33210726
  44beb3:	rex.X (bad) 
  44beb5:	xabort 0xfa
  44beb8:	(bad)  
  44beb9:	xor    BYTE PTR [rdi+rax*8-0x6dfed4ff],cl
  44bec0:	jmp    0x70294b68
  44bec5:	rex.B iret 
  44bec7:	test   eax,0x21073eb2
  44becc:	rex.WXB add rax,0xffffffffb5558326
  44bed2:	(bad)  
  44bed3:	int3   
  44bed4:	pushf  
  44bed5:	sub    ah,BYTE PTR [rax-0x4c]
  44bed8:	jmp    0x44be97
  44beda:	mov    esi,0x575c4aab
  44bedf:	xchg   ebp,eax
  44bee0:	(bad)  
  44bee1:	ror    BYTE PTR [rax-0x52f7e39f],1
  44bee7:	cmp    eax,0xbb4c79f6
  44beec:	(bad)  
  44beed:	(bad)  
  44beee:	pop    rsi
  44beef:	test   eax,0x10504db8
  44bef4:	rex.X add al,sil
  44bef7:	cmp    esi,ecx
  44bef9:	mov    ebx,0x1013306b
  44befe:	add    DWORD PTR ds:[rcx+0x76f0c49c],ecx
  44bf05:	add    DWORD PTR [rdx+0x58f9713],edx
  44bf0b:	mov    BYTE PTR [rcx+0x4c],ch
  44bf0e:	sbb    al,0xf9
  44bf10:	mov    edx,esi
  44bf12:	(bad)  
  44bf13:	repnz leave 
  44bf15:	sar    ah,1
  44bf17:	imul   ecx,DWORD PTR [rdi+rbx*2-0x920c1f1],0xfdf5e4ad
  44bf22:	rcr    DWORD PTR [rdx+0x40],0xf9
  44bf26:	mov    ebp,0x457b879a
  44bf2b:	fcom   QWORD PTR [rbx]
  44bf2d:	add    edx,ebp
  44bf2f:	add    edx,esi
  44bf31:	retf   0xebe6
  44bf34:	ins    DWORD PTR es:[rdi],dx
  44bf35:	add    dl,al
  44bf37:	js     0x44bfb8
  44bf39:	ror    dh,cl
  44bf3b:	stc    
  44bf3c:	push   rsi
  44bf3d:	pop    rsi
  44bf3e:	or     eax,ebx
  44bf40:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  44bf41:	add    al,BYTE PTR [rdx]
  44bf43:	(bad)  
  44bf44:	cs cli 
  44bf46:	rex.WB
  44bf47:	fs mov ebp,0xa2482317
  44bf4d:	pop    rdi
  44bf4e:	mov    eax,DWORD PTR [rcx+0x6cc426e0]
  44bf54:	mov    ?,WORD PTR [rax+0x4]
  44bf57:	pop    rdi
  44bf58:	jg     0x44bef7
  44bf5a:	movabs ds:0xbe816beb8c0d596a,eax
  44bf63:	jns    0x44bf7a
  44bf65:	rex.WRXB
  44bf66:	rex xchg eax,eax
  44bf68:	rex.WXB pushf 
  44bf6a:	stc    
  44bf6b:	and    DWORD PTR [rax],0xfffffff2
  44bf6e:	mov    edi,0x5dfd81ea
  44bf73:	outs   dx,DWORD PTR ds:[rsi]
  44bf74:	mov    ecx,0xe5a6475d
  44bf79:	rex.WXB
  44bf7a:	ss es rex ins BYTE PTR es:[rdi],dx
  44bf7e:	rex.XB and r9b,bl
  44bf81:	or     eax,0x2aa69191
  44bf86:	adc    esi,DWORD PTR [rsi]
  44bf88:	xchg   ebp,eax
  44bf89:	rex.R ins BYTE PTR es:[rdi],dx
  44bf8b:	(bad)  
  44bf8c:	mov    al,0xc4
  44bf8e:	(bad)  
  44bf8f:	adc    al,0x50
  44bf91:	pushf  
  44bf92:	xor    bl,0x9
  44bf95:	stos   DWORD PTR es:[rdi],eax
  44bf96:	(bad)  
  44bf97:	(bad)  
  44bf98:	sub    DWORD PTR [rax],esp
  44bf9a:	test   al,0xc4
  44bf9c:	mov    bh,0x4
  44bf9e:	mov    r13b,0x22
  44bfa1:	jbe    0x44bf72
  44bfa3:	adc    DWORD PTR [rax],edx
  44bfa5:	and    BYTE PTR [rsp+rsi*2-0x32],ah
  44bfa9:	test   DWORD PTR [rdx],0x3896d236
  44bfaf:	and    BYTE PTR [rdx+riz*2-0x2e],al
  44bfb3:	cwde   
  44bfb4:	sbb    eax,0x6760e973
  44bfb9:	sbb    al,0x55
  44bfbc:	add    edx,DWORD PTR [rbp+0x29]
  44bfbf:	sbb    DWORD PTR [rbx],edx
  44bfc1:	and    bl,bh
  44bfc3:	sub    DWORD PTR [rax+0x75c7d8bc],edx
  44bfc9:	or     eax,esi
  44bfcb:	pop    rdi
  44bfcc:	mov    edx,0x10514190
  44bfd1:	(bad)  
  44bfd2:	outs   dx,DWORD PTR ds:[rsi]
  44bfd3:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  44bfd4:	rex.WR movabs ds:0x1fa46a09232c0c9a,al
  44bfde:	xchg   edx,eax
  44bfdf:	lea    ebx,[rdx+0x52]
  44bfe2:	fwait
  44bfe3:	jnp    0x44bfe9
  44bfe5:	mov    WORD PTR [rbx+0x35668230],es
  44bfeb:	(bad)  
  44bfec:	xor    BYTE PTR [rcx-0x726f39c0],bl
  44bff2:	or     al,0x96
  44bff4:	push   0x9
  44bff6:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  44bff7:	pop    rdi
  44bff8:	mov    ch,0xd7
  44bffa:	stos   DWORD PTR es:[rdi],eax
  44bffb:	mov    ds,edx
  44bffd:	shl    DWORD PTR [rsi+0x4820c92c],cl
  44c003:	rex.WXB jmp 0x6649ab2
  44c009:	(bad)  
  44c00a:	retf   0x8219
  44c00d:	push   rsp
  44c00e:	and    BYTE PTR [rcx],ah
  44c010:	adc    al,dl
  44c012:	push   0xffffffffffffffab
  44c014:	add    DWORD PTR ss:[rcx],ebp
  44c017:	adc    QWORD PTR [rsi-0x70],rax
  44c01b:	push   rax
  44c01c:	pop    rcx
  44c01d:	rex.X jb 0x44bfa9
  44c020:	rex
  44c021:	ss pop rax
  44c023:	rex.WRXB sub BYTE PTR [r14+r12*4+0x7f],r15b
  44c028:	adc    al,0xd3
  44c02a:	rcr    BYTE PTR es:[rbp-0x49],0xce
  44c02f:	xor    DWORD PTR [rsi-0x67],eax
  44c032:	xchg   edi,eax
  44c033:	rol    DWORD PTR [rip+0x3eb8a215],cl        # 0x3efd624e
  44c039:	xor    al,BYTE PTR [rbx-0x5360df02]
  44c03f:	sti    
  44c040:	rex.WRXB add QWORD PTR [r8+0x5bc61a24],0xfffffffff005739b
  44c04b:	fstp   TBYTE PTR [rsi-0x39]
  44c04f:	js     0x44c080
  44c051:	or     BYTE PTR [rcx],bh
  44c053:	jnp    0x44c002
  44c055:	popf   
  44c056:	mov    bh,0x2f
  44c058:	scas   eax,DWORD PTR es:[rdi]
  44c059:	(bad)  
  44c05a:	(bad)  
  44c05b:	mov    esp,0xa8ec8e22
  44c060:	sbb    eax,0x2064fdd7
  44c065:	ror    BYTE PTR [rbx+0x64],0xb4
  44c069:	sub    eax,0x9db1ffc0
  44c06e:	(bad)  
  44c06f:	jo     0x44c0cd
  44c071:	pop    rdi
  44c072:	pop    rbx
  44c073:	loopne 0x44c031
  44c075:	outs   dx,DWORD PTR ds:[rsi]
  44c076:	(bad)  
  44c077:	cld    
  44c078:	repnz mov dh,0x60
  44c07b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  44c07c:	mov    ch,0xbb
  44c07e:	mov    edi,0x6d1d77ed
  44c083:	(bad)  
  44c084:	cmp    edi,edi
  44c086:	mov    ebp,0x13e76032
  44c08b:	pop    rdx
  44c08c:	cmp    ebx,edx
  44c08e:	jb     0x44c04e
  44c090:	sub    al,0x43
  44c092:	push   rax
  44c093:	add    al,0xb1
  44c095:	movabs al,ds:0x4e411b1018b9012
  44c09e:	(bad)  
  44c09f:	imul   edx,DWORD PTR [rbp+0x28206c7f],0xe6c8115f
  44c0a9:	(bad)  
  44c0aa:	(bad)  
  44c0ab:	or     DWORD PTR [rax],edi
  44c0ad:	pop    rdi
  44c0ae:	mov    ch,0x81
  44c0b0:	adc    dl,ah
  44c0b2:	add    eax,0xfc3eca69
  44c0b7:	sub    BYTE PTR [rcx-0x50],al
  44c0ba:	cmp    esi,DWORD PTR [rcx+0x20]
  44c0bd:	or     al,0xfa
  44c0bf:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  44c0c0:	(bad)  
  44c0c1:	cli    
  44c0c2:	mov    dh,0x12
  44c0c4:	rex.W adc BYTE PTR [rdx],sil
  44c0c7:	lods   eax,DWORD PTR ds:[rsi]
  44c0c8:	xor    DWORD PTR [rdx],esp
  44c0ca:	mov    bh,0x76
  44c0cc:	(bad)  
  44c0cd:	pop    rbx
  44c0ce:	pop    rbx
  44c0cf:	scas   al,BYTE PTR es:[rdi]
  44c0d0:	rex.WB cmp r12b,al
  44c0d3:	fwait
  44c0d4:	sub    al,0x38
  44c0d6:	adc    edi,esp
  44c0d8:	jle    0x44c11a
  44c0da:	sub    al,0xf5
  44c0dc:	stc    
  44c0dd:	mov    ebp,0x5640f881
  44c0e2:	ret    0x8883
  44c0e5:	ds mov ebx,0x30d2a054
  44c0eb:	(bad)  
  44c0ec:	(bad)  
  44c0ed:	stos   BYTE PTR es:[rdi],al
  44c0ee:	retf   0xa990
  44c0f1:	xchg   ecx,eax
  44c0f2:	imul   esi,DWORD PTR [rdi-0x45],0xffffff86
  44c0f6:	jmp    0x44c0aa
  44c0f8:	retf   
  44c0f9:	imul   eax,DWORD PTR [rdx],0x76
  44c0fc:	loopne 0x44c131
  44c0fe:	ss rex.X
  44c100:	rex.W (bad) 
  44c102:	(bad)  
  44c103:	(bad)  
  44c104:	mov    edi,0x40cefdec
  44c109:	cld    
  44c10a:	repz (bad) 
  44c10c:	jg     0x44c121
  44c10e:	imul   ebx,DWORD PTR [rcx+0x5b],0xffffff92
  44c112:	lock stos BYTE PTR es:[rdi],al
  44c114:	or     eax,0xc5899176
  44c119:	cmp    cl,BYTE PTR [rsi]
  44c11b:	pop    rbp
  44c11c:	mov    al,0xf5
  44c11e:	rex.RB mov r15d,0x363602e6
  44c124:	not    bh
  44c126:	or     eax,DWORD PTR [rax-0x72]
  44c129:	push   rbx
  44c12a:	xchg   edi,eax
  44c12b:	out    dx,eax
  44c12c:	sbb    esi,DWORD PTR [rdx+rbp*4]
  44c12f:	(bad)  
  44c130:	mov    esi,0x609e706e
  44c135:	push   rdx
  44c136:	(bad)  
  44c137:	sub    ecx,DWORD PTR [rbx+0x75790590]
  44c13d:	(bad)  
  44c13e:	jp     0x44c193
  44c140:	mov    ?,WORD PTR [rbx-0x12]
  44c143:	jmp    0xfffffffff6fbccca
  44c148:	sub    ebx,DWORD PTR fs:[rcx+0x5463964d]
  44c14f:	add    esp,ecx
  44c151:	(bad)  
  44c152:	(bad)  
  44c153:	test   al,0xa0
  44c155:	shr    DWORD PTR [rsi],cl
  44c157:	rex.X sub al,0x4
  44c15a:	mov    cl,ch
  44c15c:	cmp    cl,bl
  44c15e:	or     esi,ecx
  44c160:	(bad)  
  44c161:	fisubr DWORD PTR [rbx]
  44c163:	and    esi,DWORD PTR [rbx]
  44c165:	adc    al,BYTE PTR [rbx]
  44c167:	enter  0xb78a,0xf
  44c16b:	scas   al,BYTE PTR es:[rdi]
  44c16c:	sbb    eax,0x3d9e320
  44c171:	rex.RX test eax,0x504ff4f6
  44c177:	fsubr  QWORD PTR [rax+rdx*2]
  44c17a:	(bad)  
  44c17b:	sub    BYTE PTR [rbp+0x64],dh
  44c17e:	(bad)  
  44c17f:	rex.WX lods rax,QWORD PTR ds:[rsi]
  44c181:	and    dl,BYTE PTR [rax+0x651a0409]
  44c187:	scas   al,BYTE PTR es:[rdi]
  44c188:	jbe    0x44c132
  44c18a:	movabs al,ds:0x2c399c0c67494dd2
  44c193:	jne    0x44c194
  44c195:	sub    bh,BYTE PTR [rdi-0x61]
  44c198:	mov    bl,0x7d
  44c19a:	ss xchg edi,eax
  44c19c:	push   rdi
  44c19d:	rex.B
  44c19e:	or     BYTE PTR cs:[rax+0x1ce300b9],ch
  44c1a5:	test   BYTE PTR [rsi+rsi*4+0x704d533e],ah
  44c1ac:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  44c1ad:	add    ah,bh
  44c1af:	push   rcx
  44c1b0:	sti    
  44c1b1:	fstp   TBYTE PTR [rsi]
  44c1b3:	in     al,0x1b
  44c1b5:	outs   dx,BYTE PTR ds:[rsi]
  44c1b6:	mov    dh,ch
  44c1b8:	cmp    al,0x22
  44c1ba:	and    al,0xf3
  44c1bc:	stc    
  44c1bd:	fcomp  QWORD PTR [rax+0x3f]
  44c1c0:	rcr    esi,cl
  44c1c2:	cmp    edx,DWORD PTR [rdi]
  44c1c4:	(bad)  
  44c1c5:	add    al,0xaa
  44c1c7:	rol    BYTE PTR [rbp+0x6c],0x1
  44c1cb:	mov    ebx,0x63b02016
  44c1d0:	mov    DWORD PTR [rdx],ebp
  44c1d2:	repnz repz lea ecx,[rbp+0x3b]
  44c1d7:	(bad)  
  44c1d8:	cli    
  44c1d9:	loope  0x44c15c
  44c1db:	rex.WR
  44c1dc:	addr32 int3 
  44c1de:	mov    ss,WORD PTR [rbp+0xa8356ad]
  44c1e4:	rex sub DWORD PTR [rax+rcx*2],0x39c63abd
  44c1ec:	mov    fs,WORD PTR [rdi+0x17]
  44c1ef:	sti    
  44c1f0:	ja     0x44c1f7
  44c1f2:	add    al,0x53
  44c1f4:	and    eax,0x2845bae0
  44c1f9:	movabs ds:0x47bcbecc555cfa6,al
  44c202:	adc    eax,0x65719588
  44c207:	and    eax,0x17a08a55
  44c20c:	sub    ebp,DWORD PTR [rdx]
  44c20e:	adc    ch,BYTE PTR [rbp+0x3b]
  44c211:	scas   al,BYTE PTR es:[rdi]
  44c212:	xor    ch,BYTE PTR [rax-0x22]
  44c215:	sahf   
  44c216:	mov    ah,0x9
  44c218:	jbe    0x44c1dc
  44c21a:	(bad)  
  44c21b:	outs   dx,BYTE PTR ds:[rsi]
  44c21c:	add    al,0x2
  44c21e:	mov    ecx,edi
  44c220:	(bad)  
  44c221:	fadd   DWORD PTR [rax+0x65]
  44c224:	and    eax,0xb83dde4b
  44c229:	push   rcx
  44c22a:	shl    BYTE PTR [rdi+0x3240ef7],0xa5
  44c231:	in     eax,0x57
  44c233:	fidivr DWORD PTR [rcx-0x33e0f4a2]
  44c239:	jnp    0x44c271
  44c23b:	adc    DWORD PTR [rbx-0x3a],ebp
  44c23e:	(bad)
  44c241:	pop    rax
  44c242:	sbb    esp,edx
  44c244:	mov    dh,BYTE PTR [rcx]
  44c246:	(bad)  
  44c247:	xchg   ecx,eax
  44c248:	mov    cl,0x8b
  44c24a:	(bad)  
  44c24b:	add    dl,BYTE PTR [rcx+0x63]
  44c24e:	push   rdi
  44c24f:	xor    DWORD PTR [rdx-0x1763e6d9],ecx
  44c255:	enter  0x8e84,0x79
  44c259:	pop    rdx
  44c25a:	and    BYTE PTR [rsi+0x4d904564],bl
  44c260:	and    eax,0x79f97608
  44c265:	movabs al,ds:0x87f525938ea62212
  44c26e:	lods   eax,DWORD PTR ds:[rsi]
  44c26f:	adc    DWORD PTR [rbp-0x7a3c76a0],ebx
  44c275:	add    BYTE PTR [rcx],bl
  44c277:	cmc    
  44c278:	(bad)  
  44c27a:	sbb    ecx,DWORD PTR cs:[rax+0x3b1ce2df]
  44c281:	stc    
  44c282:	pushf  
  44c283:	jo     0x44c26d
  44c285:	(bad)  
  44c286:	pop    rbx
  44c287:	and    ebp,esi
  44c289:	lahf   
  44c28a:	cmp    esp,eax
  44c28c:	lods   al,BYTE PTR ds:[rsi]
  44c28d:	add    DWORD PTR [rsi+0x20a30e73],edx
  44c293:	xor    al,bh
  44c295:	enter  0x8218,0x91
  44c299:	stos   BYTE PTR es:[rdi],al
  44c29a:	enter  0x3732,0xc
  44c29e:	adc    BYTE PTR [rax+0x3aef3962],dl
  44c2a4:	add    DWORD PTR [rax],0xf40b432b
  44c2aa:	rex.WB and al,0x1f
  44c2ad:	out    dx,eax
  44c2ae:	xor    edi,edi
  44c2b0:	loope  0x44c2ee
  44c2b2:	test   BYTE PTR [rbx],dl
  44c2b4:	jl     0x44c290
  44c2b6:	push   rax
  44c2b7:	out    0x8d,al
  44c2b9:	(bad)  
  44c2ba:	(bad)  
  44c2bb:	fcomp  DWORD PTR [rdi]
  44c2bd:	and    BYTE PTR [rdx],dh
  44c2bf:	adc    DWORD PTR [rbx-0x44],0xffffff9d
  44c2c3:	shl    DWORD PTR [rax+0x60],0xeb
  44c2c7:	pop    rbp
  44c2c8:	rex.WRXB sbb r10,r8
  44c2cb:	xor    BYTE PTR [rsi],0x3
  44c2ce:	mov    esi,0xc47fa0c1
  44c2d3:	rex.R mov sil,0x3f
  44c2d6:	sub    al,0x20
  44c2d8:	push   rax
  44c2d9:	mov    fs,ebp
  44c2db:	xor    al,0xa
  44c2dd:	rex.WXB sub al,0x8
  44c2e0:	add    ah,BYTE PTR [rbx+0x3f]
  44c2e3:	(bad)  
  44c2e4:	(bad)  
  44c2e5:	clc    
  44c2e6:	(bad)  
  44c2e7:	mov    ch,0xcf
  44c2e9:	cmp    DWORD PTR [rsi+0x33797db6],esp
  44c2ef:	(bad)  
  44c2f0:	adc    BYTE PTR [rcx],bh
  44c2f2:	(bad)
  44c2f6:	sub    al,0xc8
  44c2f8:	hlt    
  44c2f9:	cdq    
  44c2fa:	ret    0xf0ca
  44c2fd:	mov    ss,WORD PTR [rbx]
  44c2ff:	adc    al,0x4f
  44c301:	or     BYTE PTR [rsi+0x19e0541d],bh
  44c307:	adc    eax,DWORD PTR [rdx+0x6a652929]
  44c30d:	sbb    edx,DWORD PTR [rdx-0x11a7d087]
  44c313:	sbb    al,0xe8
  44c315:	mov    edi,DWORD PTR [rdi-0x570c6ac7]
  44c31b:	lock ins DWORD PTR es:[rdi],dx
  44c31d:	add    cl,BYTE PTR [rdx+0x3264cc4e]
  44c323:	mov    WORD PTR [r14+rsi*8+0x458e4809],ss
  44c32b:	ins    BYTE PTR es:[rdi],dx
  44c32c:	in     al,0x14
  44c32e:	nop
  44c32f:	cli    
  44c330:	movsxd eax,DWORD PTR [rbx+0x64]
  44c333:	cdq    
  44c334:	add    eax,0x164b8d61
  44c339:	mov    edx,0xb4e0207f
  44c33e:	(bad)  
  44c33f:	push   rax
  44c340:	lea    eax,[rbp-0x171e27a1]
  44c346:	rex (bad) 
  44c348:	(bad)  
  44c349:	(bad)  
  44c34a:	(bad)  
  44c34b:	and    DWORD PTR [rdx+0x484e2680],esp
  44c351:	mov    BYTE PTR [rsp+rbp*2-0x3d6f0bbd],cl
  44c358:	jne    0x44c362
  44c35a:	lea    esi,[rcx]
  44c35c:	adc    ah,BYTE PTR [rdx-0x3e]
  44c35f:	call   0xffffffffaeb59a9c
  44c364:	jle    0x44c3e3
  44c366:	(bad)  
  44c367:	pop    rax
  44c368:	or     ecx,edx
  44c36a:	(bad)  
  44c36b:	jns    0x44c3e8
  44c36d:	shl    BYTE PTR [rsi],cl
  44c36f:	xchg   BYTE PTR [rsi+rbp*4+0x6d],bh
  44c373:	rex.X loope 0x44c330
  44c376:	cld    
  44c377:	loope  0x44c3f5
  44c379:	mov    esi,0x5cfb7841
  44c37e:	rex.WXB and BYTE PTR [r11-0x3908f371],sil
  44c385:	sbb    BYTE PTR [rip+0xffffffff9e245564],0x9        # 0xffffffff9e6918f0
  44c38c:	(bad)  
  44c38d:	(bad)  
  44c38e:	mov    dh,0x80
  44c390:	outs   dx,DWORD PTR ds:[rsi]
  44c391:	out    dx,eax
  44c392:	adc    BYTE PTR [rax+0x378f718b],dh
  44c398:	(bad)  
  44c399:	mov    DWORD PTR [rdi],0xc5d62cfc
  44c39f:	mov    esp,0x7620137e
  44c3a4:	push   rdi
  44c3a5:	rex.WB adc bpl,BYTE PTR [r11]
  44c3a8:	fdiv   QWORD PTR [rax]
  44c3aa:	(bad)  
  44c3ab:	(bad)  
  44c3ac:	loop   0x44c36f
  44c3ae:	xchg   ebp,eax
  44c3af:	(bad)  
  44c3b0:	in     eax,dx
  44c3b1:	sub    DWORD PTR [rax+rbp*8-0x7f698a6],0x1c7fcf81
  44c3bc:	lock add DWORD PTR [rbx],edi
  44c3bf:	and    BYTE PTR [rdi],ah
  44c3c1:	rex.WRX fdivr QWORD PTR [rax+r12*2]
  44c3c5:	movsxd edi,ebp
  44c3c7:	jno    0x44c385
  44c3c9:	mov    dl,ch
  44c3cb:	sti    
  44c3cc:	jmp    0x44c3d5
  44c3ce:	ins    BYTE PTR es:[rdi],dx
  44c3cf:	rex.W and bpl,al
  44c3d2:	xchg   ecx,esi
  44c3d4:	rex.WB (bad) 
  44c3d6:	push   rbp
  44c3d7:	retf   0x1eab
  44c3da:	and    al,0x54
  44c3dc:	rex.X
  44c3dd:	rex.WB enter 0xb7f6,0x76
  44c3e2:	mov    ebp,0xe0526cbe
  44c3e7:	inc    DWORD PTR [rcx+0x3e]
  44c3ea:	sar    BYTE PTR [rbx+rax*4-0x1a],0x18
  44c3ef:	rex.WR (bad) 
  44c3f1:	and    BYTE PTR [rbp-0x318b5f90],cl
  44c3f7:	mov    cl,0xca
  44c3f9:	rex.WRB adc QWORD PTR [r9],0x6c
  44c3fd:	ss rex.B jb 0x44c39b
  44c401:	rex
  44c402:	fwait
  44c403:	imul   ebp,DWORD PTR [ebp+0x30],0x26
  44c408:	and    ecx,ebx
  44c40a:	jo     0x44c3fb
  44c40c:	sete   BYTE PTR [rcx-0x2357f7c1]
  44c413:	pop    rdx
  44c414:	lock mov cl,0x40
  44c417:	(bad)  
  44c418:	pop    rbp
  44c419:	addr32 mov al,ds:0xfc19b568
  44c420:	repz add ah,BYTE PTR [rbp-0x7816f8ea]
  44c427:	add    BYTE PTR [rbx+0xa],bl
  44c42a:	fs push rax
  44c42c:	cmp    DWORD PTR [rbp-0x13],0x8d3cf940
  44c433:	int3   
  44c434:	mov    WORD PTR [rsi],fs
  44c436:	mov    bl,0xd9
  44c438:	add    al,0x8b
  44c43a:	loopne 0x44c41b
  44c43c:	mov    WORD PTR [rax+0x21c7379c],?
  44c442:	cmp    al,dl
  44c444:	adc    ch,BYTE PTR [rsi]
  44c446:	in     al,0xa9
  44c448:	movabs al,ds:0xa923ed36a5446014
  44c451:	rcl    BYTE PTR [rbp+0x36],0xcb
  44c455:	adc    al,0xfa
  44c457:	retf   
  44c458:	lock sbb al,0xad
  44c45b:	iret   
  44c45c:	mov    DWORD PTR [rsi],0x16ee0d57
  44c462:	and    BYTE PTR [rip+0xfffffffffd70e685],dl        # 0xfffffffffdb5aaed
  44c468:	pop    rbx
  44c469:	(bad)  
  44c46a:	add    al,0xe8
  44c46c:	rex.WXB (bad) 
  44c46e:	retf   0xb204
  44c471:	neg    BYTE PTR [rax+riz*4-0x51]
  44c475:	pushf  
  44c476:	sub    al,0xf0
  44c478:	test   eax,0x220b0732
  44c47d:	push   rbp
  44c47e:	retf   
  44c47f:	fild   WORD PTR [rsi]
  44c481:	(bad)  
  44c482:	or     eax,0x5ccf9a04
  44c487:	imul   esp,DWORD PTR [rdi+0x6b],0x53
  44c48b:	push   rsi
  44c48c:	loopne 0x44c47e
  44c48e:	stc    
  44c48f:	jbe    0x44c4be
  44c491:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  44c492:	xchg   esp,eax
  44c493:	jns    0x44c4f9
  44c495:	(bad)  
  44c496:	mov    dh,0x17
  44c498:	or     BYTE PTR [rdx-0x58fa707c],al
  44c49e:	and    BYTE PTR [rdx],dl
  44c4a0:	cmp    bl,cl
  44c4a2:	or     DWORD PTR [rax+riz*1-0x4d],0xf8fb1d11
  44c4aa:	(bad)  
  44c4ab:	fbstp  TBYTE PTR [rdx-0x6895c166]
  44c4b1:	enter  0xd6bb,0x35
  44c4b5:	add    edi,DWORD PTR [rsi]
  44c4b7:	add    al,BYTE PTR es:[rdx+0xfec8c50]
  44c4be:	fadd   DWORD PTR [rdi+0x55642050]
  44c4c4:	ds (bad) 
  44c4c7:	(bad)  
  44c4c8:	pop    rsi
  44c4c9:	(bad)
  44c4cd:	jno    0x44c4c3
  44c4cf:	in     al,0x0
  44c4d1:	stc    
  44c4d2:	nop
  44c4d3:	(bad)  
  44c4d4:	stc    
  44c4d5:	stos   DWORD PTR es:[rdi],eax
  44c4d6:	add    ebx,ebx
  44c4d8:	lods   eax,DWORD PTR ds:[rsi]
  44c4d9:	add    al,0xc8
  44c4db:	retf   
  44c4dc:	iret   
  44c4dd:	cli    
  44c4de:	xor    DWORD PTR [rax-0x7f530306],0xe715243d
  44c4e8:	and    ebx,DWORD PTR [rsi-0x4275ee42]
  44c4ee:	add    ebx,ebx
  44c4f0:	fadd   st,st(7)
  44c4f2:	out    0x62,al
  44c4f4:	in     eax,dx
  44c4f5:	xchg   edi,eax
  44c4f6:	in     eax,dx
  44c4f7:	(bad)  
  44c4f8:	enter  0xeb2b,0xb1
  44c4fc:	test   esi,esi
  44c4fe:	pushf  
  44c4ff:	rex.WRXB (bad) 
  44c501:	clc    
  44c502:	ret    
  44c503:	cmc    
  44c504:	mov    DWORD PTR [rdi-0x105f74b6],ebx
  44c50a:	or     BYTE PTR [rax-0x3188877b],cl
  44c510:	(bad)  
  44c511:	add    ah,dl
  44c513:	loopne 0x44c52f
  44c515:	rex.WRXB or rax,0xffffffffaa2202e6
  44c51b:	sbb    eax,0xecac6002
  44c520:	or     bh,BYTE PTR [rax+0x787a6c2]
  44c526:	sub    cl,BYTE PTR [rsi]
  44c528:	mov    cl,0xed
  44c52a:	pop    rax
  44c52b:	push   rax
  44c52c:	rcl    DWORD PTR [rcx],1
  44c52e:	and    bh,dh
  44c530:	(bad)  
  44c531:	sbb    eax,0x6077bc7d
  44c536:	mov    WORD PTR [rbp+0x18a0881c],ss
  44c53c:	jb     0x44c5ab
  44c53e:	rex.X (bad) 
  44c540:	outs   dx,BYTE PTR ds:[rsi]
  44c541:	adc    bl,BYTE PTR [rbx+0x37dff071]
  44c547:	adc    DWORD PTR [rdi+0xb],0xffffff8c
  44c54b:	rol    DWORD PTR [rsi],cl
  44c54d:	jmp    0x44c554
  44c54f:	repz sbb edx,esi
  44c552:	stc    
  44c553:	rex.RB pop r11
  44c555:	sub    BYTE PTR [edx],dh
  44c558:	and    edx,DWORD PTR [rbp-0x578ad4f6]
  44c55e:	mov    esi,es
  44c560:	ins    DWORD PTR es:[rdi],dx
  44c561:	adc    al,0xd9
  44c563:	mov    esi,0xb99f1f52
  44c568:	nop
  44c569:	rcr    DWORD PTR [rax],0x84
  44c56c:	lods   al,BYTE PTR ds:[rsi]
  44c56d:	jae    0x44c516
  44c56f:	(bad)  
  44c570:	rex lea ecx,[edx+0x7f7d75e8]
  44c578:	and    ebp,DWORD PTR [rax+0x6d]
  44c57b:	or     al,0x25
  44c57d:	cmp    edi,DWORD PTR [rdx]
  44c57f:	xchg   esi,eax
  44c580:	and    DWORD PTR [rax],ebx
  44c582:	push   rbx
  44c583:	sub    dl,0xc3
  44c586:	jb     0x44c538
  44c588:	adc    dl,BYTE PTR [rax+0x54]
  44c58b:	shl    BYTE PTR [r8-0x240c1964],0x6
  44c593:	(bad)  
  44c594:	(bad)  
  44c595:	(bad)  
  44c596:	and    DWORD PTR [rax],0x921b0fd3
  44c59c:	xor    DWORD PTR [rdx+0x29],edx
  44c59f:	fild   WORD PTR [rbp-0x1006e10e]
  44c5a5:	sbb    DWORD PTR [rax],ecx
  44c5a7:	pop    rax
  44c5a8:	add    DWORD PTR [rcx-0x50ebefe6],esi
  44c5ae:	outs   dx,DWORD PTR ds:[rsi]
  44c5af:	or     edx,DWORD PTR [rsi-0x5bfc5c7e]
  44c5b5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  44c5b6:	mov    esi,0xc6380ae7
  44c5bb:	sbb    BYTE PTR [rbp-0x7e],ch
  44c5be:	xchg   ecx,eax
  44c5bf:	adc    ebx,DWORD PTR [rbx+rcx*8+0x71]
  44c5c3:	sbb    al,0x29
  44c5c5:	add    ch,dh
  44c5c7:	jmp    0x44c5fc
  44c5c9:	lods   eax,DWORD PTR ds:[rsi]
  44c5ca:	sbb    eax,0xed7e4304
  44c5cf:	mov    ebp,0x880c102b
  44c5d4:	rex.RXB fldenv [r13+0x3f]
  44c5d8:	lahf   
  44c5d9:	mov    bl,0xdd
  44c5db:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  44c5dc:	add    cl,BYTE PTR [rsi]
  44c5de:	stos   BYTE PTR es:[rdi],al
  44c5df:	int    0xf9
  44c5e1:	ins    BYTE PTR es:[rdi],dx
  44c5e2:	(bad)  
  44c5e3:	enter  0x72a6,0x10
  44c5e7:	mov    WORD PTR [rcx+riz*2-0x7dfbefc2],es
  44c5ee:	adc    eax,0x3657d869
  44c5f3:	addr32 pop rdi
  44c5f5:	sti    
  44c5f6:	adc    DWORD PTR [rdx+0x29],esp
  44c5f9:	nop
  44c5fa:	or     eax,0xed1f67ec
  44c5ff:	adc    al,0x91
  44c601:	adc    BYTE PTR [rax+0x5f],ch
  44c604:	and    BYTE PTR [rbx-0x16],al
  44c607:	fwait
  44c608:	and    BYTE PTR [rdx+0x6e],al
  44c60b:	rex.B sub al,0x70
  44c60e:	nop
  44c60f:	rex.R jmp QWORD PTR [rax+rax*2-0x7f]
  44c614:	(bad)  
  44c615:	mov    ?,WORD PTR [rbx-0x3f]
  44c618:	rex.X sar dil,0x15
  44c61c:	hlt    
  44c61d:	xor    bl,bh
  44c61f:	jnp    0x44c623
  44c621:	std    
  44c622:	push   rbx
  44c623:	(bad)  
  44c624:	jmp    QWORD PTR [rbx-0x10]
  44c627:	rex.WRXB and QWORD PTR [r8+0xfb30653],0xffffffffa8313a41
  44c632:	ins    DWORD PTR es:[rdi],dx
  44c633:	and    eax,0xb10b886f
  44c638:	xchg   DWORD PTR [ebp+0x6a811ee0],esp
  44c63f:	(bad)  
  44c640:	fild   QWORD PTR [rsi+0x12]
  44c643:	mov    eax,0xc783a3ee
  44c648:	ss mov esp,0x7bfcaf2e
  44c64e:	fs jo  0x44c614
  44c651:	jbe    0x44c5ff
  44c653:	(bad)  
  44c654:	ja     0x44c672
  44c656:	rex.X
  44c657:	lock mov ebx,0x4da4df1
  44c65d:	mov    esi,0xfb2fb17e
  44c662:	adc    edi,DWORD PTR [rbx]
  44c664:	add    al,0x61
  44c666:	(bad)  
  44c667:	jle    0x44c6d0
  44c669:	rex.XB mov r14d,0x888f9fb7
  44c66f:	lods   eax,DWORD PTR ds:[rsi]
  44c670:	jle    0x44c623
  44c672:	or     edx,esp
  44c674:	leave  
  44c675:	mov    esi,0xe37bd344
  44c67a:	and    eax,0xb93f43e2
  44c67f:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  44c680:	mov    edi,0xebfc435d
  44c685:	(bad)  
  44c686:	(bad)  
  44c687:	cmp    ebx,DWORD PTR [rsi-0x77]
  44c68a:	ins    DWORD PTR es:[rdi],dx
  44c68b:	sbb    al,0x47
  44c68d:	add    eax,0x1aac4f62
  44c692:	(bad)  
  44c693:	(bad)  
  44c694:	in     eax,dx
  44c695:	or     al,0xae
  44c697:	adc    eax,0x90e21248
  44c69c:	test   al,0xb0
  44c69e:	mov    esi,ecx
  44c6a0:	imul   eax,DWORD PTR [rdi+0x15],0x27
  44c6a4:	sahf   
  44c6a5:	fdiv   st,st(2)
  44c6a7:	sbb    eax,0x62aa8481
  44c6ac:	mov    ebp,0x85e0094
  44c6b1:	(bad)  
  44c6b2:	and    ebp,DWORD PTR [rsi+0x7d]
  44c6b5:	mov    DWORD PTR [rsp+r8*4-0x36],r11d
  44c6ba:	sbb    ah,bl
  44c6bc:	rex.WRXB add r9b,BYTE PTR [r10+0x33]
  44c6c0:	fidivr WORD PTR [rax]
  44c6c2:	(bad)  
  44c6c3:	test   BYTE PTR [rax+0x30],al
  44c6c6:	or     BYTE PTR [rax],ch
  44c6c8:	stos   BYTE PTR es:[rdi],al
  44c6c9:	sub    ebp,DWORD PTR cs:[rsi-0x1a]
  44c6cd:	sbb    cl,BYTE PTR [rsi+0x6d406b39]
  44c6d3:	push   0xffffffffffffffa3
  44c6d5:	lock xchg ebx,eax
  44c6d7:	(bad)  
  44c6d8:	push   rbp
  44c6d9:	mov    dl,0x9b
  44c6db:	addr32 pop rsi
  44c6dd:	sub    bl,BYTE PTR [rax-0x20bde7f3]
  44c6e3:	xchg   esp,eax
  44c6e4:	sub    BYTE PTR [rdx],al
  44c6e6:	(bad)  
  44c6e7:	jmp    0x450b0a25
  44c6ec:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  44c6ed:	(bad)  
  44c6ef:	rex.WRXB xchg BYTE PTR [r12+r11*4],r10b
  44c6f3:	cli    
  44c6f4:	leave  
  44c6f5:	fcom   DWORD PTR [rdx*4-0x5acc9b0d]
  44c6fc:	repz add eax,0xd048d82
  44c702:	push   rcx
  44c703:	xchg   ecx,eax
  44c704:	lods   eax,DWORD PTR ds:[rsi]
  44c705:	sar    DWORD PTR ss:[rsi+rcx*4+0x60],0x31
  44c70b:	adc    al,al
  44c70d:	(bad)  
  44c70e:	or     eax,0xd0a64990
  44c713:	(bad)  
  44c714:	rex.WRX jl 0x44c75b
  44c717:	sub    BYTE PTR [rax+0xb3f96aa],0x88
  44c71e:	(bad)  
  44c71f:	mov    esi,0xf8fa06ac
  44c724:	(bad)
  44c727:	mov    ah,0xab
  44c729:	pop    rdi
  44c72a:	mov    ch,0x21
  44c72c:	mov    edx,0x811ae32a
  44c731:	rex
  44c732:	xlat   BYTE PTR gs:[rbx]
  44c734:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  44c735:	add    al,0xaf
  44c737:	or     DWORD PTR [rax],edx
  44c739:	push   rbx
  44c73a:	out    0xd6,al
  44c73c:	mov    dh,0xeb
  44c73e:	int3   
  44c73f:	(bad)  
  44c740:	(bad)  
  44c741:	push   rcx
  44c742:	jg     0x44c72e
  44c744:	push   rbp
  44c745:	shr    BYTE PTR [rdx],0x9d
  44c748:	(bad)  
  44c749:	and    BYTE PTR ds:[rdx-0x14],bh
  44c74d:	(bad)  
  44c74e:	mov    al,0xb5
  44c750:	adc    DWORD PTR [rcx+0xc9707c7],esp
  44c756:	mov    dh,0x7
  44c758:	mov    bh,0xc
  44c75a:	rex.WX movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  44c75c:	or     DWORD PTR [rcx+0x5db8dfbe],ebp
  44c762:	xchg   DWORD PTR [rax],esp
  44c764:	or     BYTE PTR [rdi+rbp*2+0x210b0204],bh
  44c76b:	push   rbp
  44c76c:	xor    ebp,esp
  44c76e:	sub    bh,BYTE PTR [rax-0x43]
  44c771:	(bad)  
  44c773:	xor    eax,edx
  44c775:	movsxd ebp,DWORD PTR [rdx+rbx*8]
  44c778:	pop    rax
  44c779:	ins    DWORD PTR es:[rdi],dx
  44c77a:	lock (bad) 
  44c77c:	and    bl,bl
  44c77e:	adc    bl,bl
  44c780:	xor    DWORD PTR [rbp+0x1d],edx
  44c783:	sbb    BYTE PTR [rdi-0x7417e920],al
  44c789:	add    DWORD PTR [rcx],eax
  44c78b:	and    eax,0xbe812b6a
  44c790:	sbb    esi,DWORD PTR [rdi]
  44c792:	fstp   TBYTE PTR [rcx]
  44c794:	pop    rsi
  44c795:	(bad)
  44c798:	mov    BYTE PTR [rsi],ch
  44c79a:	ret    
  44c79b:	jle    0x44c7ca
  44c79d:	test   al,0x4
  44c79f:	movabs ds:0x9608a8ed7165ef6d,al
  44c7a8:	add    edx,edi
  44c7aa:	push   rsi
  44c7ab:	rex.B test al,0xe2
  44c7ae:	mov    WORD PTR [rdi],ss
  44c7b0:	sbb    DWORD PTR [rcx],ecx
  44c7b2:	repnz in eax,0x83
  44c7b5:	pop    rbx
  44c7b6:	add    al,0xc8
  44c7b8:	add    DWORD PTR [rdx+rax*2+0x25],eax
  44c7bc:	sub    cl,dl
  44c7be:	mov    BYTE PTR [rcx-0x2b],bh
  44c7c1:	shr    ecx,1
  44c7c3:	add    esp,DWORD PTR [rdx+0x1f88d841]
  44c7c9:	xor    DWORD PTR [rax],eax
  44c7cb:	movsxd edx,edi
  44c7cd:	repnz mov DWORD PTR ss:[rcx-0x3637f809],edi
  44c7d5:	(bad)  
  44c7d6:	cld    
  44c7d7:	movabs ds:0xe6b87f017aef44cf,eax
  44c7e0:	xor    BYTE PTR [rcx+0x69],dl
  44c7e3:	push   rdi
  44c7e4:	sub    al,0xa9
  44c7e6:	(bad)  
  44c7e7:	mov    BYTE PTR [rsi+0x83f8caa],ch
  44c7ed:	mov    ah,0x38
  44c7ef:	(bad)  
  44c7f0:	sub    esp,ebp
  44c7f2:	repz fld DWORD PTR [rdi]
  44c7f5:	out    0x9d,eax
  44c7f7:	hlt    
  44c7f8:	add    BYTE PTR [rsi],al
  44c7fa:	add    cl,dl
  44c7fc:	and    al,0xd5
  44c7fe:	fcomp  st(1)
  44c800:	repnz dec BYTE PTR [rdx]
  44c803:	add    DWORD PTR [rip+0x29209653],edx        # 0x29655e5c
  44c809:	(bad)  
  44c80a:	jmp    0xfffffffffca855af
  44c80f:	ins    DWORD PTR es:[rdi],dx
  44c810:	or     bh,0x6e
  44c813:	(bad)  
  44c814:	movsxd ebp,DWORD PTR [rsi+rcx*8-0x56]
  44c818:	mov    ah,0x8e
  44c81a:	sub    al,0x4b
  44c81c:	in     eax,dx
  44c81d:	(bad)  
  44c81f:	mov    esp,0x43850622
  44c824:	mov    cs,edx
  44c826:	pop    rsi
  44c827:	push   rdi
  44c828:	retf   0xf3fb
  44c82b:	add    al,0x32
  44c82d:	(bad)  
  44c82e:	cwde   
  44c82f:	cwde   
  44c830:	rex.WX push rbp
  44c832:	pop    r12
  44c834:	sbb    eax,DWORD PTR [rdx+0x6e]
  44c837:	xchg   al,bh
  44c839:	retf   0xc3fc
  44c83c:	cmp    ecx,0x40
  44c83f:	(bad)  
  44c840:	and    al,0x1e
  44c842:	(bad)  
  44c843:	add    DWORD PTR [rdx+0xa],0xfffffffe
  44c847:	std    
  44c848:	xor    DWORD PTR [rsi],0xffffffed
  44c84b:	movabs ds:0xea6714226717b29e,eax
  44c854:	(bad)  
  44c856:	(bad)  
  44c857:	fild   DWORD PTR [rip+0x5c604382]        # 0x5ca50bdf
  44c85d:	es nop
  44c85f:	popf   
  44c860:	or     DWORD PTR [rip+0xffffffffccfb0e27],eax        # 0xffffffffcd3fd68d
  44c866:	sbb    DWORD PTR [rdx],esi
  44c868:	mov    ecx,0x16aef5cd
  44c86d:	mov    al,0xb
  44c86f:	mov    ebx,0xf79c72c9
  44c874:	repnz add BYTE PTR [rcx],dl
  44c877:	cmp    ebp,esi
  44c879:	or     eax,DWORD PTR [rcx]
  44c87b:	sti    
  44c87c:	jge    0x44c8a0
  44c87e:	adc    BYTE PTR [rax],bl
  44c880:	or     dh,ch
  44c882:	js     0x44c8e8
  44c884:	movabs eax,ds:0x7de7c700554f32a8
  44c88d:	adc    DWORD PTR [rbx-0x35fd9add],eax
  44c893:	in     al,dx
  44c894:	mov    eax,0x3a9ef6b9
  44c899:	retf   
  44c89a:	rex.WX adc al,0x9d
  44c89d:	mov    edi,0xff75c78c
  44c8a2:	es pop rax
  44c8a4:	or     bl,dh
  44c8a6:	adc    BYTE PTR [rax+0x3c],dh
  44c8a9:	(bad)  
  44c8aa:	(bad)  
  44c8ab:	xor    al,0x28
  44c8ad:	pop    rdi
  44c8ae:	adc    ecx,eax
  44c8b0:	pop    rbx
  44c8b1:	(bad)  
  44c8b2:	add    al,0x44
  44c8b4:	xchg   ah,ah
  44c8b6:	cmp    esp,esp
  44c8b8:	rex.RX sbb r10b,BYTE PTR [rip+0xffffffffd302e5ce]        # 0xffffffffd347ae8d
  44c8bf:	sbb    al,0xa4
  44c8c1:	inc    DWORD PTR [rbp+0x20]
  44c8c4:	rex.XB fist DWORD PTR [r8-0x136cfad]
  44c8cb:	ret    
  44c8cc:	or     al,0xfb
  44c8ce:	mov    ecx,0x117fdfc
  44c8d3:	cmp    edi,DWORD PTR [rdx-0x31]
  44c8d6:	out    dx,al
  44c8d7:	enter  0x7c84,0x32
  44c8db:	mov    dl,0x8c
  44c8dd:	js     0x44c874
  44c8df:	(bad)  
  44c8e0:	pop    rbx
  44c8e1:	rcr    BYTE PTR [rsi-0xf7dfe0d],0xb
  44c8e8:	add    DWORD PTR [rbp-0x46],edx
  44c8eb:	mov    esi,0x2078f824
  44c8f0:	repz leave 
  44c8f2:	scas   al,BYTE PTR es:[rdi]
  44c8f3:	xor    bl,BYTE PTR [rip+0xffffffffe37f1162]        # 0xffffffffe3c3da5b
  44c8f9:	xchg   ebx,eax
  44c8fa:	mov    ebp,0x73711608
  44c8ff:	ins    DWORD PTR es:[rdi],dx
  44c900:	out    0x4d,eax
  44c902:	fcmovu st,st(0)
  44c904:	sbb    DWORD PTR [rcx],ecx
  44c906:	clc    
  44c907:	out    dx,al
  44c908:	xor    DWORD PTR [rcx+0x61cc43b8],eax
  44c90e:	or     al,0x89
  44c910:	jno    0x44c97f
  44c912:	adc    dl,BYTE PTR [rdi+0x7d]
  44c915:	clc    
  44c916:	rex.W and BYTE PTR [rbx],bl
  44c919:	adc    ebp,edi
  44c91b:	and    eax,DWORD PTR [rdx-0x6dd18947]
  44c921:	mov    bl,0x2b
  44c923:	and    dl,BYTE PTR [rsi-0x2df60ec8]
  44c929:	repnz (bad) 
  44c92b:	(bad)  
  44c92c:	pop    rbp
  44c92d:	sub    al,0xd8
  44c92f:	adc    edx,DWORD PTR [rax]
  44c931:	iret   
  44c932:	rex.WXB add al,0x62
  44c935:	rex.RB
  44c936:	mov    sp,0x8070
  44c93a:	sar    BYTE PTR [rax+0x46f88042],1
  44c940:	sub    al,0xe8
  44c942:	(bad)  
  44c943:	icebp  
  44c944:	jmp    0xffffffffc247971c
  44c949:	jrcxz  0x44c8e5
  44c94b:	sub    al,BYTE PTR [rax]
  44c94d:	ins    DWORD PTR es:[rdi],dx
  44c94e:	mov    ecx,DWORD PTR [rbp-0xf]
  44c951:	rex.X fcom DWORD PTR [rbp+0x15]
  44c955:	jrcxz  0x44c92f
  44c957:	(bad)  
  44c958:	lea    ebx,[rip+0x1287d936]        # 0x12cca294
  44c95e:	jmp    0x44c958
  44c960:	pop    rdx
  44c961:	push   rax
  44c962:	and    al,0x15
  44c964:	nop
  44c965:	(bad)  
  44c966:	rex.RB
  44c967:	rex.B add al,0x99
  44c96a:	rex.WRX push rdx
  44c96c:	sar    DWORD PTR gs:[rbx],0x6e
  44c970:	rex.WR mov al,0xd7
  44c973:	(bad)  
  44c974:	or     DWORD PTR [rax+0x24],ecx
  44c977:	add    BYTE PTR [rsi-0xc43cfe2],ch
  44c97d:	add    eax,0x58668090
  44c982:	(bad)  
  44c983:	push   rdi
  44c984:	mov    ?,WORD PTR [rax]
  44c986:	pushf  
  44c987:	repnz add dl,0xeb
  44c98b:	cmp    al,0x83
  44c98d:	(bad)  
  44c98e:	add    al,0x2
  44c990:	lods   al,BYTE PTR ds:[rsi]
  44c991:	mov    dl,0x82
  44c993:	(bad)  
  44c994:	rol    DWORD PTR [rsi+0x5d],1
  44c997:	xchg   ebx,eax
  44c998:	rex.WX sub rdi,rbx
  44c99b:	adc    DWORD PTR [rbx+0x70],ecx
  44c99e:	push   rcx
  44c99f:	(bad)  
  44c9a0:	(bad)  
  44c9a1:	ja     0x44c9df
  44c9a3:	xchg   DWORD PTR [rdx+0x5a],edx
  44c9a6:	sub    ch,BYTE PTR [rdi]
  44c9a8:	fisttp DWORD PTR [rcx]
  44c9aa:	(bad)  
  44c9ab:	rex.WXB (bad) 
  44c9ad:	cli    
  44c9ae:	and    esp,DWORD PTR [rbx+0x9]
  44c9b1:	push   rdx
  44c9b2:	fwait
  44c9b3:	(bad)  
  44c9b4:	adc    al,0xf0
  44c9b6:	out    0xa,eax
  44c9b8:	mov    al,cl
  44c9ba:	lea    eax,[rdx+0x458206db]
  44c9c0:	lock retf 0x82dc
  44c9c4:	nop
  44c9c5:	(bad)  
  44c9c7:	add    DWORD PTR [rdx-0x16],ebp
  44c9ca:	xchg   ebp,eax
  44c9cb:	loope  0x44c9ba
  44c9cd:	pop    rdi
  44c9ce:	or     al,0x38
  44c9d0:	mov    ah,BYTE PTR [rbx+0x5e9b5b57]
  44c9d6:	xchg   esp,eax
  44c9d7:	xor    eax,0xf01c06c7
  44c9dc:	jg     0x44c960
  44c9de:	jg     0x44c9ef
  44c9e0:	(bad)  
  44c9e1:	xor    eax,0x7f60958
  44c9e6:	(bad)  
  44c9e7:	sub    ch,BYTE PTR [rax-0xa9abc64]
  44c9ed:	jmp    0xffffffffe2654be0
  44c9f2:	and    al,0xc4
  44c9f4:	hlt    
  44c9f5:	mov    ecx,0x71f021b1
  44c9fa:	ror    DWORD PTR [rdi-0x3d03e4a5],0x99
  44ca01:	enter  0xb94e,0xdf
  44ca05:	sbb    DWORD PTR [rax],edx
  44ca07:	(bad)  
  44ca08:	ins    DWORD PTR es:[rdi],dx
  44ca09:	mov    ecx,0x6b892026
  44ca0e:	sub    al,0x6
  44ca10:	cmp    eax,DWORD PTR [rbx]
  44ca12:	push   rbp
  44ca13:	or     BYTE PTR [rsi+riz*2-0x61],0x63
  44ca18:	fstp   DWORD PTR [rax+rax*1+0x748805cc]
  44ca1f:	std    
  44ca20:	xor    BYTE PTR [rax-0x4],0x4b
  44ca24:	push   rax
  44ca25:	sbb    edi,DWORD PTR [rdi+0xc89bf57]
  44ca2b:	rex.X mov eax,DWORD PTR [rbx-0x7c0b24d6]
  44ca32:	loopne 0x44ca3f
  44ca34:	mov    al,0xaf
  44ca36:	(bad)  
  44ca37:	(bad)  
  44ca38:	nop
  44ca39:	jg     0x44ca13
  44ca3b:	or     ebp,0xffffff89
  44ca3e:	lahf   
  44ca3f:	in     al,dx
  44ca40:	and    al,0x7b
  44ca42:	or     BYTE PTR [rax+0x58],ch
  44ca45:	or     al,bh
  44ca47:	js     0x44c9fa
  44ca49:	pop    rbp
  44ca4a:	iret   
  44ca4b:	sub    eax,DWORD PTR [rcx+0x210087f9]
  44ca51:	pop    rsp
  44ca52:	rex.WRXB movabs r11,0x87f820648d880c3f
  44ca5c:	jno    0x44ca84
  44ca5e:	ds clc 
  44ca60:	jp     0x44cab4
  44ca62:	mov    ch,0x27
  44ca64:	ror    BYTE PTR [rbp-0x1bb9b1],1
  44ca6a:	(bad)  
  44ca6b:	add    eax,0xc594416c
  44ca70:	rol    DWORD PTR es:[rdx+0xc],1
  44ca74:	jge    0x44ca57
  44ca76:	pop    rbx
  44ca77:	and    al,0x22
  44ca79:	sbb    al,0x1f
  44ca7b:	(bad)  
  44ca7c:	nop
  44ca7d:	xchg   edx,eax
  44ca7e:	lods   eax,DWORD PTR ds:[rsi]
  44ca7f:	cmc    
  44ca80:	out    dx,eax
  44ca81:	jns    0x44ca04
  44ca83:	and    al,0x23
  44ca85:	xchg   BYTE PTR [rcx],dl
  44ca87:	(bad)  
  44ca88:	(bad)  
  44ca89:	push   0xffffffffffffff93
  44ca8b:	imul   eax,ebp,0xf5b2be8d
  44ca91:	(bad)  
  44ca92:	or     bh,0xb4
  44ca95:	and    DWORD PTR [rsi+0x5de092f9],edi
  44ca9b:	and    al,0x98
  44ca9d:	or     DWORD PTR [rax+0x12092918],edx
  44caa3:	pop    rbx
  44caa4:	sub    esi,ecx
  44caa6:	cmc    
  44caa7:	test   DWORD PTR [rax+0x155897e8],ebx
  44caad:	(bad)  
  44caae:	(bad)  
  44caaf:	lea    ecx,[rax]
  44cab1:	fadd   st,st(4)
  44cab3:	mov    bh,BYTE PTR [rax+0x7e8d9501]
  44cab9:	sub    eax,0xa9e56204
  44cabe:	xor    DWORD PTR [rcx],0xdb88b03c
  44cac4:	(bad)  
  44cac5:	cmp    DWORD PTR [rcx+0x55],ecx
  44cac8:	test   eax,0x77b880a9
  44cacd:	jo     0x44cac0
  44cacf:	(bad)  
  44cad0:	rex.WR shl bpl,1
  44cad3:	inc    BYTE PTR [rsi-0x34]
  44cad6:	fidiv  DWORD PTR [rsi+rsi*2-0x2e]
  44cada:	mov    cl,0x52
  44cadc:	(bad)  
  44cadd:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  44cade:	add    cl,BYTE PTR [rdx-0x5c]
  44cae1:	push   rbx
  44cae2:	cmp    ah,BYTE PTR [rbx]
  44cae4:	rex.XB scas eax,DWORD PTR es:[rdi]
  44cae6:	add    al,0x4a
  44cae8:	sbb    edi,edx
  44caea:	out    0x38,al
  44caec:	in     eax,0x10
  44caee:	add    esi,DWORD PTR [rdx]
  44caf0:	xchg   esi,eax
  44caf1:	int    0x80
  44caf3:	add    al,0x1f
  44caf5:	movabs ds:0xd64a38902d0602cb,al
  44cafe:	nop
  44caff:	xchg   ebp,eax
  44cb00:	add    esp,DWORD PTR [ebp-0x39]
  44cb04:	out    dx,eax
  44cb05:	rex.WRXB movabs r9,0x51179218355cfeb6
  44cb0f:	(bad)  
  44cb10:	sbb    ah,bl
  44cb12:	imul   esi,DWORD PTR [rdx-0x74],0x44efab2c
  44cb19:	add    BYTE PTR [rax+0x37cab4c9],0xf6
  44cb20:	rcr    BYTE PTR [rsi-0x40f9e400],cl
  44cb26:	adc    dil,BYTE PTR [rdx+rax*1]
  44cb2a:	(bad)  
  44cb2b:	xor    eax,DWORD PTR [rcx-0x1fd0428f]
  44cb31:	and    BYTE PTR [rcx],al
  44cb33:	and    DWORD PTR [rax-0x120a1df0],edi
  44cb39:	xor    ebp,DWORD PTR [rdi+0x8e09204]
  44cb3f:	push   0x2d978def
  44cb44:	mov    BYTE PTR [rcx+0x6d],al
  44cb47:	in     al,dx
  44cb48:	rex.B enter 0x8f04,0xc
  44cb4d:	vpcomw xmm4,xmm6,XMMWORD PTR [r9-0x6c3f654e],0x25
  44cb57:	pop    rsp
  44cb58:	rex.WRXB sti 
  44cb5a:	(bad)  
  44cb5b:	xchg   edi,eax
  44cb5c:	lea    ecx,[rcx+0x25dd7212]
  44cb62:	and    BYTE PTR [rax+0x32],al
  44cb65:	cmp    BYTE PTR [rcx+0x684e0b5b],ah
  44cb6b:	(bad)  
  44cb6c:	push   0xffffffffffffffcf
  44cb6e:	jnp    0x44cb74
  44cb70:	cli    
  44cb71:	out    dx,eax
  44cb72:	rex xchg eax,eax
  44cb74:	sbb    dl,BYTE PTR [rbx+0x36b7e9b1]
  44cb7a:	cmc    
  44cb7b:	rex.WB xor rax,0x3513d326
  44cb81:	pop    rcx
  44cb82:	(bad)  
  44cb83:	sbb    BYTE PTR [rcx],cl
  44cb85:	(bad)  
  44cb86:	(bad)  
  44cb87:	stc    
  44cb88:	pushf  
  44cb89:	jge    0x44cb39
  44cb8b:	sbb    edx,DWORD PTR [rax]
  44cb8d:	rex.XB (bad) 
  44cb8f:	retf   0xfa92
  44cb92:	lock (bad) 
  44cb94:	xor    BYTE PTR [rsi+0x487c04],bpl
  44cb9b:	gs sbb al,0xc7
  44cb9e:	(bad)  
  44cb9f:	cmp    al,0x90
  44cba1:	mov    DWORD PTR [rax],ecx
  44cba3:	mov    ebx,0xd60fed31
  44cba8:	fidiv  DWORD PTR [rcx+0x6a0beff6]
  44cbae:	sar    DWORD PTR [rdi],cl
  44cbb0:	(bad)  
  44cbb1:	add    esi,DWORD PTR [rsi-0x34df8f83]
  44cbb7:	and    DWORD PTR [rsi],esi
  44cbb9:	fcmovne st,st(1)
  44cbbb:	nop
  44cbbc:	add    al,0x84
  44cbbe:	mov    cl,0xc5
  44cbc1:	push   rdx
  44cbc2:	shr    BYTE PTR [rsi],0x3e
  44cbc5:	xchg   edi,eax
  44cbc6:	adc    BYTE PTR [rax-0x34f63700],dl
  44cbcc:	in     eax,0x3
  44cbce:	adc    eax,0x8ee0aecc
  44cbd3:	add    DWORD PTR [rcx+0x74],eax
  44cbd6:	(bad)  
  44cbd7:	lock jp 0x44cbc6
  44cbda:	pop    rbp
  44cbdb:	sbb    edx,ecx
  44cbdd:	loopne 0x44cc4e
  44cbdf:	push   rbp
  44cbe0:	test   DWORD PTR [rcx+0x1b],esi
  44cbe3:	(bad)  
  44cbe4:	imul   ebp,DWORD PTR [rip+0xffffffffe88b0404],0x13        # 0xffffffffe8cfcfef
  44cbeb:	xor    BYTE PTR [rsi-0x72f75f6a],bh
  44cbf1:	imul   edx,DWORD PTR [rbx],0xffffff8b
  44cbf4:	(bad)  
  44cbf5:	(bad)  
  44cbf6:	(bad)
  44cbfa:	xchg   ebp,eax
  44cbfb:	pop    rbp
  44cbfc:	(bad)  
  44cbfd:	nop
  44cbfe:	idiv   cl
  44cc00:	xchg   ebp,eax
  44cc01:	(bad)  
  44cc02:	fimul  DWORD PTR [rax+0x1189df17]
  44cc08:	not    al
  44cc0a:	(bad)  
  44cc0b:	out    dx,al
  44cc0c:	rex (bad) 
  44cc0e:	xchg   ecx,eax
  44cc0f:	(bad)
  44cc12:	(bad)  
  44cc13:	pop    rbp
  44cc14:	fsubr  st(6),st
  44cc16:	fs (bad) 
  44cc18:	out    0x1c,eax
  44cc1a:	add    DWORD PTR [rax-0x67],0xa71a7995
  44cc21:	jle    0x44cc25
  44cc23:	(bad)  
  44cc24:	fadd   QWORD PTR [rcx-0x17e961e0]
  44cc2a:	mov    dl,0x9a
  44cc2c:	(bad)  
  44cc2d:	(bad)  
  44cc2e:	mov    dh,0x19
  44cc30:	push   rdx
  44cc31:	push   rsp
  44cc32:	pop    rbx
  44cc33:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  44cc34:	int    0x49
  44cc36:	adc    al,0x8a
  44cc38:	icebp  
  44cc39:	fs (bad) 
  44cc3b:	(bad)  
  44cc3c:	movsxd esp,DWORD PTR [rcx+rsi*8+0x733e7066]
  44cc43:	sbb    eax,0x706bb906
  44cc48:	lods   eax,DWORD PTR ds:[rsi]
  44cc49:	(bad)  
  44cc4a:	rex.RXB xor BYTE PTR [r11],r10b
  44cc4d:	pushf  
  44cc4e:	imul   eax,DWORD PTR [rbx+0x31eba3e],0x9b4608
  44cc58:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  44cc59:	adc    bl,0xc6
  44cc5c:	and    al,0x63
  44cc5e:	imul   ebx,DWORD PTR [rdi+0x70],0x8db17e8
  44cc65:	cmp    cl,BYTE PTR [rdx-0x6e728fd4]
  44cc6b:	shr    BYTE PTR [rdx-0x35b36bbe],cl
  44cc71:	cmp    al,0x6d
  44cc73:	(bad)  
  44cc74:	cmp    eax,edi
  44cc76:	or     DWORD PTR [rax+0x470405c7],edx
  44cc7c:	pop    rdi
  44cc7d:	pop    rdi
  44cc7e:	sbb    al,cl
  44cc80:	fimul  DWORD PTR [rax+0x5dc21f64]
  44cc86:	(bad)  
  44cc87:	loopne 0x44ccf5
  44cc89:	(bad)  
  44cc8a:	leave  
  44cc8b:	loopne 0x44cca9
  44cc8d:	vpandn xmm13,xmm1,XMMWORD PTR [rbx-0x30]
  44cc92:	mov    ?,WORD PTR [rbp-0x38]
  44cc95:	lea    ecx,[rdx+rbx*8+0x47]
  44cc99:	data16 sub dil,BYTE PTR [r11]
  44cc9d:	push   rbx
  44cc9e:	jnp    0x44ccf9
  44cca0:	rex.XB sbb BYTE PTR [r15],0x16
  44cca4:	sbb    bl,cl
  44cca6:	cdq    
  44cca7:	add    eax,esp
  44cca9:	pop    rcx
  44ccaa:	or     bh,al
  44ccac:	je     0x44cccf
  44ccae:	mov    eax,0xa09ebb5d
  44ccb3:	(bad)  
  44ccb5:	(bad)  
  44ccb7:	xor    eax,0x3784a5b4
  44ccbc:	ss jrcxz 0x44ccd1
  44ccbf:	(bad)  
  44ccc0:	imul   eax,DWORD PTR [rcx],0x72
  44ccc3:	push   rbx
  44ccc4:	jle    0x44cd1f
  44ccc6:	loope  0x44cc8f
  44ccc8:	and    DWORD PTR [rax],0x65d73042
  44ccce:	jg     0x44cccd
  44ccd0:	(bad)  
  44ccd1:	call   0xffffffffe27b9ad0
  44ccd6:	in     eax,0x3
  44ccd8:	xor    DWORD PTR [rcx],0x4a015212
  44ccde:	rcl    BYTE PTR [rcx-0x494afaa],0xed
  44cce5:	add    ecx,edx
  44cce7:	xchg   ebx,eax
  44cce8:	in     eax,0xe7
  44ccea:	(bad)  
  44cceb:	jno    0x44cd43
  44cced:	adc    eax,0x9fe4da98
  44ccf2:	and    DWORD PTR [rcx-0xe],esp
  44ccf5:	out    0x49,eax
  44ccf7:	jg     0x44ccd0
  44ccf9:	ds jbe 0x44cd5c
  44ccfc:	(bad)  
  44ccfd:	fchs   
  44ccff:	add    DWORD PTR ss:[rbx],edi
  44cd02:	mov    edi,0xa075b838
  44cd07:	retf   0xb953
  44cd0a:	pop    rsp
  44cd0b:	xor    edx,DWORD PTR [rax+0x713a6501]
  44cd11:	pop    rsp
  44cd12:	movsxd esp,ebx
  44cd14:	and    ebx,DWORD PTR [rcx]
  44cd16:	mov    al,0x7c
  44cd18:	out    dx,al
  44cd19:	(bad)  
  44cd1a:	(bad)  
  44cd1c:	sub    edi,0x953201e
  44cd22:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  44cd23:	push   0xffffffffffffffc0
  44cd25:	xchg   BYTE PTR [rax+rcx*2+0x29],cl
  44cd29:	sub    eax,DWORD PTR ds:[rbx-0x4e]
  44cd2d:	cdq    
  44cd2e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  44cd2f:	rex.XB or r8b,dil
  44cd32:	push   rsi
  44cd33:	xor    eax,0x9c769e7a
  44cd38:	jmp    0x44cda3
  44cd3a:	(bad)  
  44cd3b:	(bad)  
  44cd3c:	mov    BYTE PTR [rsi+0x5d],bh
  44cd3f:	mov    ebp,DWORD PTR [rdi-0x3b20a273]
  44cd45:	(bad)  
  44cd46:	fist   DWORD PTR [rdx]
  44cd48:	jg     0x44cd00
  44cd4a:	rex.RX sub r8b,BYTE PTR es:[rcx]
  44cd4e:	jno    0x44cd74
  44cd50:	mov    ecx,0x2fb22b21
  44cd55:	(bad)  
  44cd56:	xchg   edx,eax
  44cd57:	sbb    BYTE PTR [rcx],ah
  44cd59:	ficom  DWORD PTR [rbx]
  44cd5b:	fdiv   QWORD PTR [rax-0x77066fce]
  44cd61:	in     eax,dx
  44cd62:	jmp    0x44cd25
  44cd64:	jne    0x44cd68
  44cd66:	stos   BYTE PTR es:[rdi],al
  44cd67:	cld    
  44cd68:	mov    ah,0x40
  44cd6a:	xor    BYTE PTR [rsi+rax*1-0xcc7f161],ch
  44cd71:	pop    rbp
  44cd72:	or     DWORD PTR [rsi-0x243f6b8e],0x87352819
  44cd7c:	ficomp WORD PTR fs:[rsi+0x69a32bbf]
  44cd83:	ja     0x44cded
  44cd85:	movabs al,ds:0xea29d0a45b9c3931
  44cd8e:	sub    DWORD PTR [rax-0x6d49bdf4],ecx
  44cd94:	jge    0x44cd9a
  44cd96:	mov    ah,0x52
  44cd98:	lods   al,BYTE PTR ds:[rsi]
  44cd99:	ss lahf 
  44cd9b:	mov    ebx,0xa8e040be
  44cda0:	mov    edi,0x2c9ea808
  44cda5:	sub    BYTE PTR es:[rsp+rbx*2],cl
  44cda9:	(bad)  
  44cdaa:	add    eax,0x1caa830f
  44cdaf:	hlt    
  44cdb0:	xchg   ebp,eax
  44cdb1:	repz test al,0xed
  44cdb4:	rex.RB xor DWORD PTR [r11-0x8fd084a],0x57
  44cdbc:	or     eax,0x80c6729c
  44cdc1:	add    BYTE PTR [rax],dh
  44cdc3:	cwde   
  44cdc4:	int3   
  44cdc5:	(bad)  
  44cdc6:	mov    esp,0x4f94b594
  44cdcb:	add    dh,bl
  44cdcd:	mov    esp,0xe88d31b5
  44cdd2:	or     BYTE PTR [rax+rdx*8+0x5fe317aa],cl
  44cdd9:	or     ebx,eax
  44cddb:	icebp  
  44cddc:	mov    cl,0xc1
  44cdde:	push   rdx
  44cddf:	(bad)  
  44cde0:	cmp    al,0x2
  44cde2:	addr32 cs nop
  44cde5:	xchg   ebp,eax
  44cde6:	mov    ah,0xef
  44cde8:	pop    rdx
  44cde9:	(bad)  
  44cdea:	cld    
  44cdeb:	mov    eax,DWORD PTR [rcx-0x51398f4]
  44cdf1:	mov    es,esp
  44cdf3:	ficom  DWORD PTR [rdx]
  44cdf5:	call   0x1ab0512c
  44cdfa:	xchg   DWORD PTR [rdx+rbp*1],ebp
  44cdfd:	sbb    BYTE PTR [rbp-0x1d],0x83
  44ce01:	rex.B add eax,0xae0836ab
  44ce07:	repz add al,0x8d
  44ce0a:	and    BYTE PTR [rcx],ah
  44ce0c:	or     al,0xb2
  44ce0e:	mov    edi,0x410e7100
  44ce13:	ror    r10b,1
  44ce16:	jl     0x44cdca
  44ce18:	and    al,0x21
  44ce1a:	cli    
  44ce1b:	out    0x40,eax
  44ce1d:	loopne 0x44ce27
  44ce1f:	push   rax
  44ce20:	mov    esi,0x62cf156
  44ce25:	cli    
  44ce26:	push   rsp
  44ce27:	cdq    
  44ce28:	and    BYTE PTR [rax-0x80],0xc0
  44ce2c:	sub    eax,0x7d500aa2
  44ce31:	(bad)  
  44ce32:	or     eax,ebx
  44ce34:	cmc    
  44ce35:	cli    
  44ce36:	add    DWORD PTR [rcx-0x5cdfbf85],edx
  44ce3c:	and    DWORD PTR [rbx-0x5c104e95],esi
  44ce42:	add    ah,bl
  44ce44:	or     ebx,DWORD PTR [ecx]
  44ce47:	or     cl,dh
  44ce49:	push   rbp
  44ce4a:	rex.WR mov dl,0x92
  44ce4d:	xor    edx,ebx
  44ce4f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  44ce50:	jmp    rdx
  44ce52:	xchg   DWORD PTR [rax-0x10],edx
  44ce55:	mov    ch,0x57
  44ce57:	std    
  44ce58:	stos   BYTE PTR es:[rdi],al
  44ce59:	int    0x58
  44ce5b:	pop    rsi
  44ce5c:	(bad)  
  44ce5d:	(bad)  
  44ce5f:	outs   dx,BYTE PTR ds:[rsi]
  44ce60:	pop    rsi
  44ce61:	gs pop rbp
  44ce63:	loop   0x44ce28
  44ce65:	out    dx,eax
  44ce66:	ins    BYTE PTR es:[rdi],dx
  44ce67:	mov    cs,WORD PTR es:[rax]
  44ce6a:	movabs ds:0xfc4b395cd93511eb,eax
  44ce73:	(bad)  
  44ce74:	(bad)  
  44ce75:	pop    rsp
  44ce76:	lock enter 0x6f80,0xdf
  44ce7b:	shr    BYTE PTR [rsi+0x418c284d],cl
  44ce81:	sub    al,0x21
  44ce83:	lods   al,BYTE PTR ds:[rsi]
  44ce84:	rex.WRB pop r12
  44ce86:	mov    al,0x97
  44ce88:	push   rdi
  44ce89:	jrcxz  0x44ceb0
  44ce8b:	jp     0x44ce1c
  44ce8d:	orps   xmm0,XMMWORD PTR [rdx]
  44ce90:	movsxd edi,DWORD PTR [rdi*2-0x6d3b1140]
  44ce97:	cwde   
  44ce98:	adc    DWORD PTR [rdx],ebp
  44ce9a:	(bad)  
  44ce9b:	mov    DWORD PTR [rbp+0x36],ebx
  44ce9e:	push   rbx
  44ce9f:	std    
  44cea0:	rex.W jbe 0x44ce85
  44cea3:	movabs eax,ds:0xedabf9d1f43f4562
  44ceac:	cmp    bh,bl
  44ceae:	repz retf 0xc637
  44ceb2:	enter  0xda57,0x1d
  44ceb6:	(bad)  
  44ceb7:	xchg   esi,eax
  44ceb8:	or     dl,BYTE PTR [rdx+0x5c]
  44cebb:	mov    bh,BYTE PTR [rip+0x1d627dc4]        # 0x1da74c85
  44cec1:	or     BYTE PTR [rax],0xb5
  44cec4:	push   rcx
  44cec5:	sbb    edx,0xeded91af
  44cecb:	rex.X push 0x73
  44cece:	(bad)  
  44cecf:	rex.R
  44ced0:	es stos BYTE PTR es:[rdi],al
  44ced2:	cli    
  44ced3:	leave  
  44ced4:	loopne 0x44ce79
  44ced6:	add    DWORD PTR [rbx+0x73],eax
  44ced9:	movabs ds:0x820687833bccc90e,al
  44cee2:	retf   0x1066
  44cee5:	mov    dl,0x16
  44cee7:	jb     0x44ceb4
  44cee9:	test   al,0x4a
  44ceeb:	(bad)  
  44ceec:	xlat   BYTE PTR ds:[rbx]
  44ceed:	test   al,0x32
  44ceef:	mov    bl,0x82
  44cef1:	leave  
  44cef2:	movabs al,ds:0x70d1229043443595
  44cefb:	add    dh,cl
  44cefd:	test   eax,0x1cab410d
  44cf02:	xchg   esi,eax
  44cf03:	(bad)  
  44cf04:	test   eax,0x9903a5dc
  44cf09:	iret   
  44cf0a:	loopne 0x44cf70
  44cf0c:	rex.B (bad) 
  44cf0e:	adc    DWORD PTR [rax],ecx
  44cf10:	add    bl,BYTE PTR [rdi-0x80]
  44cf13:	jo     0x44cf1f
  44cf15:	add    bh,BYTE PTR [rcx-0x3]
  44cf18:	mov    bl,0xd6
  44cf1a:	(bad)  
  44cf1b:	add    DWORD PTR [rip+0xffffffffa41c6d10],esp        # 0xffffffffa4613c31
  44cf21:	scas   eax,DWORD PTR es:[rdi]
  44cf22:	add    bh,al
  44cf24:	adc    DWORD PTR [edx-0x24],0xfea928b8
  44cf2c:	ins    BYTE PTR es:[rdi],dx
  44cf2d:	sbb    ebx,DWORD PTR [rbx+rsi*2-0x43]
  44cf31:	stos   BYTE PTR es:[rdi],al
  44cf32:	movabs ds:0x5aca71405702cfa,eax
  44cf3b:	add    al,BYTE PTR [rdi-0x1fbaef73]
  44cf41:	adc    cl,BYTE PTR [rip+0x2070fba4]        # 0x20b5caeb
  44cf47:	cmp    BYTE PTR [rbp+0x58],ah
  44cf4a:	shl    DWORD PTR [rcx],0x53
  44cf4d:	and    BYTE PTR [rax-0x1c72729d],ah
  44cf53:	(bad)  
  44cf54:	sbb    ah,bh
  44cf56:	rex.WRB shl r9b,0xd5
  44cf5a:	(bad)  
  44cf5b:	pop    rsp
  44cf5c:	fisubr WORD PTR [rbx]
  44cf5e:	ins    DWORD PTR es:[rdi],dx
  44cf5f:	gs add al,0x1
  44cf62:	rex.WRX fcomp QWORD PTR [rbx+r13*1+0x4c93190b]
  44cf6a:	sub    DWORD PTR [rax],ebx
  44cf6c:	pop    rsp
  44cf6d:	xchg   DWORD PTR [rdi-0x3edc0270],edi
  44cf73:	mov    bh,0x83
  44cf75:	jg     0x44cf84
  44cf77:	add    al,0xd8
  44cf79:	xlat   BYTE PTR ds:[rbx]
  44cf7a:	fisub  DWORD PTR [rdi-0x32]
  44cf7d:	xchg   ecx,eax
  44cf7e:	sbb    DWORD PTR [rip+0xd945226],eax        # 0xdd921aa
  44cf84:	rex.WRX enter 0x997b,0x4f
  44cf89:	fld    TBYTE PTR [rdi]
  44cf8b:	or     bh,al
  44cf8d:	pop    rbx
  44cf8e:	(bad)  
  44cf8f:	adc    DWORD PTR [rbp-0x643bed98],ebx
  44cf95:	add    eax,0x82288ac6
  44cf9a:	xlat   BYTE PTR ds:[rbx]
  44cf9b:	sbb    al,bh
  44cf9d:	icebp  
  44cf9e:	adc    eax,DWORD PTR [rcx]
  44cfa0:	pop    rbx
  44cfa1:	retf   
  44cfa2:	test   al,cl
  44cfa4:	and    ebx,DWORD PTR [rbx]
  44cfa6:	sbb    eax,0x1d773ede
  44cfab:	test   BYTE PTR [rdi-0x22760723],dl
  44cfb1:	cmc    
  44cfb2:	mov    ch,0x8
  44cfb4:	stos   BYTE PTR es:[rdi],al
  44cfb5:	jg     0x44cf7f
  44cfb7:	mov    ebx,DWORD PTR [rax-0x3ee4137c]
  44cfbd:	lahf   
  44cfbe:	(bad)  
  44cfbf:	add    cl,r10b
  44cfc2:	(bad)  [rbp+0x402ebde0]
  44cfc8:	cmp    bh,BYTE PTR [rbp+0x5f]
  44cfcb:	or     ah,dh
  44cfcd:	add    ebx,DWORD PTR [rcx-0x6d]
  44cfd0:	scas   eax,DWORD PTR es:[rdi]
  44cfd1:	scas   al,BYTE PTR es:[rdi]
  44cfd2:	adc    al,ch
  44cfd4:	xchg   DWORD PTR [rsi+0x70610ec5],esi
  44cfda:	(bad)  
  44cfdb:	sub    eax,DWORD PTR [rdx]
  44cfdd:	add    al,0xf1
  44cfdf:	ficomp WORD PTR [rax-0x75]
  44cfe2:	ins    BYTE PTR es:[rdi],dx
  44cfe3:	adc    eax,0xbff5d907
  44cfe8:	ss (bad) 
  44cfea:	cmp    DWORD PTR [rdx],ebp
  44cfec:	xor    BYTE PTR [rsi],cl
  44cfee:	xchg   ebp,eax
  44cfef:	mov    ch,0x3
  44cff2:	mov    esp,0x3e498228
  44cff7:	add    al,0x42
  44cff9:	(bad)  
  44cffa:	and    eax,0x6090620c
  44cfff:	loop   0x44cf95
  44d001:	add    al,0x22
  44d003:	(bad)  
  44d004:	pop    rsp
  44d005:	sbb    ebp,DWORD PTR [rdi-0x3c]
  44d008:	and    ecx,DWORD PTR [rsi-0x20475050]
  44d00e:	(bad)  
  44d00f:	sbb    BYTE PTR [rbx],ch
  44d011:	lahf   
  44d012:	mov    bl,bh
  44d014:	imul   ecx,ecx,0x5fd9ffe0
  44d01a:	cmp    esp,DWORD PTR [rdx+rsi*2-0x7fcc9a7f]
  44d021:	pop    rbx
  44d022:	scas   al,BYTE PTR es:[rdi]
  44d023:	ror    DWORD PTR [rax+0x74b59260],cl
  44d029:	outs   dx,BYTE PTR ds:[rsi]
  44d02a:	movabs al,ds:0x46011264990e5400
  44d034:	std    
  44d035:	mov    esi,0xc2f3dad5
  44d03a:	enter  0x291c,0x3
  44d03e:	and    DWORD PTR [rax+0x55081a8e],ecx
  44d044:	xchg   edx,eax
  44d045:	jno    0x44d0ae
  44d047:	fldcw  WORD PTR ss:[rcx-0x7f]
  44d04b:	push   rax
  44d04c:	fcomi  st,st(2)
  44d04e:	es iret 
  44d050:	test   eax,0xcef7ea31
  44d055:	rex xchg eax,eax
  44d057:	mov    ebp,0x428402d
  44d05c:	adc    eax,0x9b53881c
  44d061:	stos   BYTE PTR es:[rdi],al
  44d062:	jrcxz  0x44d069
  44d064:	or     eax,0xdea5794b
  44d069:	add    al,BYTE PTR [rax+rsi*2+0x1b]
  44d06d:	(bad)  
  44d06e:	adc    BYTE PTR [ebx],al
  44d071:	rex.WX sub rbx,QWORD PTR [rax+0x2b3c505]
  44d078:	and    eax,0x4814808d
  44d07d:	test   BYTE PTR [rbx-0x50],al
  44d080:	and    bh,BYTE PTR [rsi-0x44e8df95]
  44d086:	or     cl,BYTE PTR [rsp+rax*4+0x22]
  44d08a:	push   0x32
  44d08c:	(bad)  
  44d08d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  44d08e:	adc    DWORD PTR [rdi],ecx
  44d090:	xlat   BYTE PTR ds:[rbx]
  44d091:	(bad)  
  44d092:	mov    ebx,0x2b1c05f7
  44d097:	push   rbx
  44d098:	sbb    eax,0x9040a81f
  44d09d:	adc    eax,0xdf451039
  44d0a2:	add    al,0x90
  44d0a4:	(bad)  
  44d0a5:	lahf   
  44d0a6:	pmuludq mm0,QWORD PTR [rbp-0x3a]
  44d0aa:	sbb    DWORD PTR [rsi-0x5],ebp
  44d0ad:	repz (bad) 
  44d0af:	(bad)  
  44d0b0:	cmp    DWORD PTR [rdi+0x2d],esi
  44d0b3:	adc    BYTE PTR [rax+rcx*8],ah
  44d0b6:	rex.RXB sub r9b,r15b
  44d0b9:	sbb    BYTE PTR [rcx-0x69ff67f7],al
  44d0bf:	pop    rcx
  44d0c0:	stc    
  44d0c1:	imul   esi,DWORD PTR [rdi+0x20],0xfffffffb
  44d0c5:	(bad)  
  44d0c6:	and    DWORD PTR [rax-0x473b6f03],edx
  44d0cc:	xchg   esi,eax
  44d0cd:	add    edi,esi
  44d0cf:	xchg   ebp,eax
  44d0d0:	push   rcx
  44d0d1:	adc    BYTE PTR [rbx+0x1f],dl
  44d0d4:	imul   ebp,DWORD PTR fs:[rbp+0x17],0xffffff81
  44d0d9:	add    eax,0xbcfb6cec
  44d0de:	mov    dh,ch
  44d0e0:	jp     0x44d14e
  44d0e2:	int3   
  44d0e3:	rex.RX scas al,BYTE PTR es:[rdi]
  44d0e5:	(bad)  
  44d0e6:	ss cld 
  44d0e8:	int    0x6e
  44d0ea:	(bad)  
  44d0eb:	test   DWORD PTR [rdi+0x4],ecx
  44d0ee:	ds loop 0x44d10c
  44d0f1:	(bad)  
  44d0f2:	and    ebx,0xbfa17107
  44d0f8:	ins    BYTE PTR es:[rdi],dx
  44d0f9:	push   rsp
  44d0fa:	fwait
  44d0fb:	cwde   
  44d0fc:	jns    0x44d151
  44d0fe:	rex enter 0xf610,0x9b
  44d103:	lods   eax,DWORD PTR ds:[rsi]
  44d104:	pinsrw mm1,WORD PTR [rax],0x61
  44d108:	ja     0x44d0bf
  44d10a:	mov    dh,0x8
  44d10c:	ret    
  44d10d:	jl     0x44d14f
  44d10f:	hlt    
  44d110:	nop
  44d111:	rex.RB pop r9
  44d113:	int3   
  44d114:	push   rsi
  44d115:	(bad)  
  44d116:	or     eax,0xcec1cae
  44d11b:	lods   eax,DWORD PTR fs:[rsi]
  44d11d:	xor    eax,DWORD PTR [rsi*2+0x1847f17d]
  44d124:	clc    
  44d125:	rex.RX cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  44d127:	lods   eax,DWORD PTR ds:[rsi]
  44d128:	ins    BYTE PTR es:[rdi],dx
  44d129:	jmp    0x44d105
  44d12b:	mov    BYTE PTR [rdx-0xc],0x64
  44d12f:	js     0x44d146
  44d131:	(bad)  
  44d132:	fwait
  44d133:	and    BYTE PTR [rbx-0x3f7b5716],ah
  44d139:	mov    ch,0xf4
  44d13b:	lea    esp,[rax+0x75361a11]
  44d141:	mov    esp,es
  44d143:	(bad)
  44d146:	in     eax,dx
  44d147:	jae    0x44d0fa
  44d149:	data16 jl 0x44d18f
  44d14c:	rex.WRX
  44d14d:	lock fwait
  44d14f:	cmp    BYTE PTR [rax],dl
  44d151:	adc    ebx,edx
  44d153:	mov    esi,0xc46e2043
  44d158:	(bad)  
  44d159:	movabs eax,ds:0x8b7b5406d172aaf6
  44d162:	jns    0x44d1e3
  44d164:	shr    BYTE PTR [rdi],cl
  44d166:	(bad)  
  44d167:	adc    al,0x2e
  44d169:	xchg   ebx,eax
  44d16a:	not    DWORD PTR [rip+0xffffffffde702ec0]        # 0xffffffffdeb50030
  44d170:	shl    DWORD PTR [rdi-0x65],0x51
  44d174:	add    cl,BYTE PTR [rdx]
  44d176:	out    0x2,eax
  44d178:	(bad)  
  44d179:	movabs eax,ds:0xbe718d9ffdbcef4a
  44d182:	adc    cl,al
  44d184:	(bad)  
  44d185:	(bad)  
  44d186:	sub    BYTE PTR [rbx-0x326fdb21],al
  44d18c:	xchg   esp,eax
  44d18d:	jne    0x44d1f6
  44d18f:	(bad)  
  44d191:	retf   0xc864
  44d194:	(bad)  
  44d195:	mov    eax,0xf598436b
  44d19a:	cli    
  44d19b:	jbe    0x44d18b
  44d19d:	jl     0x44d21d
  44d19f:	movabs ds:0x21c102d723960c0,eax
  44d1a8:	rex shl BYTE PTR [rcx],0xd7
  44d1ac:	add    eax,0x994d2a02
  44d1b1:	mov    DWORD PTR [rdx],ecx
  44d1b3:	xor    cl,BYTE PTR [rcx]
  44d1b5:	rcl    bl,cl
  44d1b7:	mov    dh,0x3e
  44d1b9:	mov    cl,0xc3
  44d1bb:	add    r8b,BYTE PTR [r9+0x9578c61]
  44d1c2:	add    al,0xb9
  44d1c4:	shr    dl,cl
  44d1c6:	(bad)  
  44d1c7:	lods   eax,DWORD PTR ds:[rsi]
  44d1c8:	or     eax,0xc05cc455
  44d1cd:	clc    
  44d1ce:	rex.RXB (bad) 
  44d1d0:	mov    BYTE PTR [rsi],ch
  44d1d2:	rex.WXB enter 0x856a,0xbc
  44d1d7:	cmp    eax,0xfb0a7e69
  44d1dc:	(bad)  
  44d1dd:	(bad)  
  44d1de:	mov    ah,0x6b
  44d1e0:	cmp    dl,BYTE PTR [rsi]
  44d1e2:	adc    esp,esi
  44d1e4:	mov    rdi,db7
  44d1e7:	sbb    eax,0x223a810
  44d1ec:	(bad)  
  44d1ed:	xchg   esp,eax
  44d1ee:	adc    DWORD PTR [rax],ecx
  44d1f0:	movabs eax,ds:0xd3f9fa24134086b
  44d1f9:	fs pop rdx
  44d1fb:	movabs ds:0x81b41feddf298e8,al
  44d204:	retf   0x325e
  44d207:	mov    bl,0x0
  44d209:	adc    al,0xd0
  44d20b:	xchg   DWORD PTR [rip+0xffffffffe67bb365],eax        # 0xffffffffe6c08576
  44d211:	mov    ebp,0x82fea280
  44d216:	push   rsp
  44d217:	cmp    esi,edi
  44d219:	sbb    BYTE PTR [rsi+rdi*2-0x2],bh
  44d21d:	mov    esp,0x52640f9f
  44d222:	xchg   ebp,eax
  44d223:	int3   
  44d224:	ins    DWORD PTR es:[rdi],dx
  44d225:	(bad)  
  44d226:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  44d227:	loopne 0x44d234
  44d229:	lods   eax,DWORD PTR ds:[rsi]
  44d22a:	mov    ebp,0xb055e51f
  44d22f:	or     edi,DWORD PTR [rsi]
  44d231:	test   BYTE PTR [rbx+0x4b],bh
  44d234:	and    bl,ah
  44d236:	mov    edx,0x8402c5c6
  44d23b:	and    DWORD PTR [rsp+rbp*8+0x29],eax
  44d23f:	fcom   DWORD PTR [rbp+0x1b]
  44d242:	xor    ah,BYTE PTR [rsi+0x200e98f1]
  44d248:	sub    BYTE PTR [rdi-0x50],bh
  44d24b:	mov    ebp,0xa09ef0d8
  44d250:	jmp    0xffffffffcb107480
  44d255:	out    dx,eax
  44d256:	or     al,0xf4
  44d258:	rex.WRXB xchg r8,rax
  44d25a:	adc    edi,ebx
  44d25c:	mov    DWORD PTR [rdi+rcx*2],0x8c8d4c0b
  44d263:	popf   
  44d264:	rex.W mov al,0xa1
  44d267:	add    al,0xc0
  44d269:	(bad)  
  44d26a:	rex.R ret 0x643e
  44d26e:	nop
  44d26f:	jno    0x44d27a
  44d271:	xchg   ecx,eax
  44d272:	mov    WORD PTR [rcx-0x42],?
  44d275:	movabs al,ds:0x881126294258edc6
  44d27e:	mov    eax,0x93bf6916
  44d283:	idiv   esp
  44d285:	sub    BYTE PTR [rcx-0x4f],bh
  44d288:	xor    eax,0x620fe161
  44d28d:	jle    0x44d23e
  44d28f:	rex mov esp,0x74b898a
  44d295:	test   bl,dl
  44d297:	cmc    
  44d298:	scas   al,BYTE PTR es:[rdi]
  44d299:	(bad)  
  44d29a:	adc    BYTE PTR [rip+0x626c8171],al        # 0x62b15411
  44d2a0:	ret    
  44d2a1:	xor    eax,0xb75651f4
  44d2a6:	pop    QWORD PTR [rax-0x28]
  44d2a9:	mov    WORD PTR [rbx],es
  44d2ab:	ins    BYTE PTR es:[rdi],dx
  44d2ac:	(bad)  
  44d2ad:	rex.WRB pushf 
  44d2af:	lock (bad) 
  44d2b1:	pop    rdi
  44d2b2:	adc    DWORD PTR [rdi+0x3e],edi
  44d2b5:	mov    edi,0x5db0406f
  44d2ba:	out    dx,eax
  44d2bb:	scas   al,BYTE PTR es:[rdi]
  44d2bc:	or     edx,0x4fd440a4
  44d2c2:	cli    
  44d2c3:	pop    rbp
  44d2c4:	in     eax,0x21
  44d2c6:	out    dx,al
  44d2c7:	fstp   QWORD PTR [rdx]
  44d2c9:	hlt    
  44d2ca:	movabs ds:0xf499a9538291ebb3,al
  44d2d3:	rex.WRXB test QWORD PTR [r9],r15
  44d2d6:	rol    DWORD PTR [rsi+0x14b9c8b4],1
  44d2dc:	push   rax
  44d2dd:	nop
  44d2de:	mov    ch,0xb6
  44d2e0:	lahf   
  44d2e1:	(bad)  
  44d2e2:	adc    dh,dh
  44d2e4:	mov    cl,0x1
  44d2e6:	movabs ds:0x5d3809904d50c72,eax
  44d2ef:	(bad)  
  44d2f0:	adc    r12d,DWORD PTR [r8-0x7de7f389]
  44d2f7:	movabs al,ds:0x40999fd0399d6b8
  44d300:	pop    rax
  44d301:	ins    DWORD PTR es:[rdi],dx
  44d302:	(bad)  
  44d303:	pop    rdx
  44d304:	std    
  44d305:	cmp    al,0x67
  44d307:	fidiv  WORD PTR [rbx]
  44d309:	(bad)  
  44d30a:	sub    al,0xb1
  44d30c:	sbb    cl,BYTE PTR [rax]
  44d30e:	ins    BYTE PTR es:[rdi],dx
  44d30f:	add    DWORD PTR [rbp-0x3],ebx
  44d312:	movabs eax,ds:0x71dbdb5c693848f0
  44d31b:	and    QWORD PTR [rax],rdx
  44d31e:	adc    DWORD PTR [rax+0x33],esi
  44d321:	(bad)  
  44d322:	in     eax,0x18
  44d324:	ins    DWORD PTR es:[rdi],dx
  44d325:	or     bh,al
  44d327:	movsxd eax,DWORD PTR [rdx]
  44d329:	(bad)
  44d32d:	add    al,BYTE PTR [rsi-0x7dd7aabd]
  44d333:	rex.WRX movabs al,ds:0x6cacea040bed5f52
  44d33d:	adc    ecx,DWORD PTR [rdx+rax*1]
  44d340:	pop    rdx
  44d341:	and    ax,0x210
  44d345:	fwait
  44d346:	or     eax,0x540819ae
  44d34b:	cdq    
  44d34c:	push   rsi
  44d34d:	movabs al,ds:0x5da0ac647da036cb
  44d356:	push   0xffffffffffffffed
  44d358:	retf   
  44d359:	adc    dh,BYTE PTR [rbp+0x18b00c9]
  44d35f:	push   rcx
  44d360:	cmp    al,0x63
  44d362:	cmp    BYTE PTR [rax-0x11],0xa
  44d366:	fs rex cdq 
  44d369:	rex.WRXB (bad) 
  44d36b:	push   rsi
  44d36c:	cli    
  44d36d:	fnstsw WORD PTR [rdx]
  44d36f:	mov    eax,0x1adb2041
  44d374:	mov    bl,0xcc
  44d376:	mov    dh,0x1c
  44d378:	and    BYTE PTR [rbx+0x52938873],bl
  44d37e:	iret   
  44d37f:	fsub   DWORD PTR [rsp+rbx*2+0x71]
  44d383:	sub    DWORD PTR [rax-0x6],0xb640d6f3
  44d38a:	movsxd esp,DWORD PTR fs:[rdx+rdx*1]
  44d38e:	test   al,0x4f
  44d390:	or     eax,0xdc550366
  44d395:	sar    BYTE PTR [rsi-0x26],1
  44d398:	xor    al,BYTE PTR [rsi-0x7e]
  44d39b:	sub    DWORD PTR [rax],0xffffff82
  44d39e:	xchg   edi,eax
  44d39f:	cmp    eax,0xb080d87e
  44d3a4:	sti    
  44d3a5:	add    ah,bl
  44d3a7:	mov    esi,0xf87e6054
  44d3ac:	ret    0x1f40
  44d3af:	out    0x2,eax
  44d3b1:	fs and dl,ah
  44d3b4:	mov    eax,DWORD PTR [rcx+0x6d8b8cb6]
  44d3ba:	out    dx,eax
  44d3bb:	(bad)  
  44d3bc:	adc    BYTE PTR [rip+0xffffffffcdf4369b],cl        # 0xffffffffce390a5d
  44d3c2:	clc    
  44d3c3:	push   rsp
  44d3c4:	(bad)  
  44d3c5:	test   BYTE PTR [rax+0x415557d],dl
  44d3cb:	(bad)  
  44d3cc:	sub    DWORD PTR [rax+0x22],edx
  44d3cf:	mov    bl,0x3f
  44d3d1:	sar    BYTE PTR [rdx-0x7efa0a82],cl
  44d3d7:	xchg   ecx,eax
  44d3d8:	mov    WORD PTR [rdi+0x5ef194c4],gs
  44d3de:	xor    DWORD PTR [rax-0x250ddc68],ebp
  44d3e4:	in     eax,0x9b
  44d3e6:	xchg   ebp,eax
  44d3e7:	loopne 0x44d40c
  44d3e9:	add    DWORD PTR [rdi],ebx
  44d3eb:	lahf   
  44d3ec:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  44d3ed:	sbb    eax,0xe12b1c33
  44d3f2:	and    dl,BYTE PTR [rax+rcx*2-0x1a]
  44d3f6:	mov    esp,0x8ae2a0b5
  44d3fb:	jo     0x44d3d8
  44d3fd:	hlt    
  44d3fe:	rex.XB ins BYTE PTR es:[rdi],dx
  44d400:	jrcxz  0x44d392
  44d402:	js     0x44d449
  44d404:	pop    rsp
  44d405:	pop    rax
  44d406:	or     al,0x8e
  44d408:	or     al,0xc4
  44d40a:	repnz (bad) 
  44d40c:	clc    
  44d40d:	repz add DWORD PTR [rdx+0x5abba08],esp
  44d414:	xor    dl,BYTE PTR [rdi+riz*2]
  44d417:	(bad)  
  44d418:	ss push rsp
  44d41a:	pop    rdi
  44d41b:	sub    ah,BYTE PTR [rbx]
  44d41d:	or     ecx,eax
  44d41f:	push   rsp
  44d420:	mov    BYTE PTR [rbx-0x10],ah
  44d423:	mov    ch,0x31
  44d425:	(bad)  
  44d426:	retf   
  44d427:	cmp    DWORD PTR [rbx+0x78769404],0xffffffc1
  44d42e:	pop    rbp
  44d42f:	stc    
  44d430:	pop    rbx
  44d431:	test   eax,0xe9c7368
  44d436:	leave  
  44d437:	data16 out 0x6,al
  44d43a:	(bad)  
  44d43b:	adc    al,0x39
  44d43d:	cmp    DWORD PTR [rbp-0x2b724b3d],eax
  44d443:	rex.WX sbb al,0xea
  44d446:	sub    al,0xc8
  44d448:	nop
  44d449:	pop    rdx
  44d44a:	sbb    BYTE PTR [rdx+rdx*8+0x48102168],dl
  44d452:	mov    WORD PTR [rsi-0x67],ds
  44d455:	out    0x45,eax
  44d457:	jns    0x44d408
  44d459:	(bad)  
  44d45b:	xchg   edx,eax
  44d45c:	and    eax,DWORD PTR [rcx+rdx*1]
  44d45f:	mov    ch,0x65
  44d461:	xor    al,0xd7
  44d463:	fldcw  WORD PTR [rcx+rax*1]
  44d466:	gs pop rdi
  44d468:	adc    eax,0x23f12943
  44d46d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  44d46e:	pushf  
  44d46f:	retf   
  44d470:	rex.WRX adc al,0x59
  44d473:	and    BYTE PTR [rbx],ah
  44d475:	adc    edx,eax
  44d477:	jl     0x44d4b1
  44d479:	adc    BYTE PTR [rax-0x3a],bl
  44d47c:	jnp    0x44d434
  44d47e:	or     edi,esp
  44d480:	and    edi,ecx
  44d482:	push   rdx
  44d483:	mov    al,0x3f
  44d485:	adc    BYTE PTR [rsp+rbp*8-0x1472cfd9],bh
  44d48c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  44d48d:	add    edx,eax
  44d48f:	or     BYTE PTR [rsi-0x3458fe43],al
  44d495:	cmp    al,BYTE PTR [rdx]
  44d497:	adc    DWORD PTR [rcx],esi
  44d499:	adc    BYTE PTR [rdi+rbx*2-0x25],dh
  44d49d:	rex.RXB
  44d49e:	lock sahf 
  44d4a0:	adc    esi,DWORD PTR [rax+0x19f48085]
  44d4a6:	jg     0x44d4d0
  44d4a8:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  44d4a9:	scas   al,BYTE PTR es:[rdi]
  44d4aa:	adc    DWORD PTR [rax+0x69],edx
  44d4ad:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  44d4ae:	(bad)  
  44d4af:	and    BYTE PTR [rdx],ch
  44d4b1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  44d4b2:	stc    
  44d4b3:	and    BYTE PTR [rip+0xfffffffffb253204],bpl        # 0xfffffffffb6a06be
  44d4ba:	enter  0xcaae,0x69
  44d4be:	xlat   BYTE PTR ds:[rbx]
  44d4bf:	movabs eax,ds:0x8a2220558c0a77ee
  44d4c8:	ds cmp eax,0x220a5029
  44d4ce:	mov    ebx,0xda5c1118
  44d4d3:	std    
  44d4d4:	rex.R mov ebx,0x5763a0ae
  44d4da:	(bad)  
  44d4db:	out    0x7b,al
  44d4dd:	cdq    
  44d4de:	pop    rbx
  44d4df:	push   rsi
  44d4e0:	(bad)  
  44d4e1:	(bad)  
  44d4e2:	adc    ebx,DWORD PTR ds:[rax+0x213103bb]
  44d4e9:	mov    ebx,0xb8c77611
  44d4ee:	mov    dh,0x3e
  44d4f0:	scas   eax,DWORD PTR es:[rdi]
  44d4f1:	mov    ch,0x7d
  44d4f3:	cli    
  44d4f4:	cmp    DWORD PTR [rax-0x3a],0xffffffcb
  44d4f8:	iret   
  44d4f9:	in     al,dx
  44d4fa:	movabs al,ds:0xaec2ae38b941841f
  44d503:	lahf   
  44d504:	jge    0x44d518
  44d506:	add    BYTE PTR [rdx-0xf],ah
  44d509:	cmp    esp,ecx
  44d50b:	(bad)  
  44d50c:	cli    
  44d50d:	(bad)  
  44d50e:	mov    edi,0xfa25cedc
  44d513:	push   rdi
  44d514:	or     dl,BYTE PTR [rax+0x2161f42]
  44d51a:	cdq    
  44d51b:	lods   eax,DWORD PTR ds:[rsi]
  44d51c:	ss jno 0x44d562
  44d51f:	cmp    al,bh
  44d521:	fldenv [rsi]
  44d523:	fstp   DWORD PTR [rax]
  44d525:	out    dx,eax
  44d526:	jne    0x44d52a
  44d528:	sbb    DWORD PTR [rsi+0x46],edx
  44d52b:	scas   eax,DWORD PTR es:[rdi]
  44d52c:	xchg   edx,eax
  44d52d:	(bad)  
  44d52f:	(bad)
  44d532:	(bad)  
  44d533:	rol    DWORD PTR [rdi],cl
  44d535:	xor    ah,BYTE PTR [rax-0x7754eb48]
  44d53b:	lods   al,BYTE PTR ds:[rsi]
  44d53c:	scas   eax,DWORD PTR es:[rdi]
  44d53d:	xchg   edx,eax
  44d53e:	shl    DWORD PTR [rbp+0x2bc5c903],1
  44d544:	jnp    0x44d4fe
  44d546:	mul    dl
  44d548:	loopne 0x44d4e4
  44d54a:	cmp    al,ah
  44d54c:	jp     0x44d56e
  44d54e:	mov    bl,0x8e
  44d550:	movsxd esi,DWORD PTR [rdx+0x26]
  44d553:	sti    
  44d554:	scas   al,BYTE PTR es:[rdi]
  44d555:	xlat   BYTE PTR ds:[rbx]
  44d556:	fisub  DWORD PTR [rdx]
  44d558:	(bad)  
  44d559:	loop   0x44d53a
  44d55b:	sbb    BYTE PTR [rdi],bl
  44d55d:	adc    bl,BYTE PTR [rsi+rbx*1]
  44d560:	pushf  
  44d561:	imul   edi,DWORD PTR [rax-0x72],0xf1cb0593
  44d568:	add    DWORD PTR [rbx+0x10dfd7ab],eax
  44d56e:	xor    BYTE PTR [rsi+0x5074238d],ah
  44d574:	sbb    DWORD PTR [rdi+0x19],eax
  44d577:	ins    DWORD PTR es:[rdi],dx
  44d578:	cmp    al,BYTE PTR [rax-0x3c727de8]
  44d57e:	cmp    DWORD PTR [rsi+0x6c],ebp
  44d581:	fdiv   QWORD PTR [rcx-0x59]
  44d584:	sub    BYTE PTR [rcx+0x6d],bh
  44d587:	pushf  
  44d588:	mov    bl,0x1e
  44d58a:	xchg   ecx,eax
  44d58b:	stos   BYTE PTR es:[rdi],al
  44d58c:	rex.R mov ebp,0x42bb8e50
  44d592:	rcl    BYTE PTR [rcx+0x54],0xff
  44d596:	sahf   
  44d597:	lods   eax,DWORD PTR ds:[rsi]
  44d598:	(bad)  
  44d599:	sbb    al,0xf5
  44d59b:	in     eax,0xd6
  44d59d:	pop    QWORD PTR [rcx-0x4d]
  44d5a0:	(bad)  
  44d5a1:	cmc    
  44d5a2:	pop    rcx
  44d5a3:	(bad)  
  44d5a4:	or     bl,BYTE PTR [rdx]
  44d5a6:	fldlg2 
  44d5a8:	(bad)  
  44d5a9:	or     DWORD PTR [rdx],0x5f38e042
  44d5af:	push   rsi
  44d5b0:	movabs eax,ds:0xb38279eaa80d97e2
  44d5b9:	(bad)  
  44d5ba:	or     al,0x32
  44d5bc:	int3   
  44d5bd:	(bad)  
  44d5be:	rex.W jns 0x44d61d
  44d5c1:	sbb    BYTE PTR [rax+0x8],0xb6
  44d5c5:	sar    BYTE PTR [rsi],1
  44d5c7:	(bad)  
  44d5c8:	test   al,0x4a
  44d5ca:	(bad)  
  44d5cb:	add    ah,BYTE PTR [rcx]
  44d5cd:	lock add al,0x16
  44d5d0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  44d5d1:	sub    DWORD PTR [rip+0x159b0455],eax        # 0x15dfda2c
  44d5d7:	(bad)  
  44d5d8:	ror    DWORD PTR [rax+0x540784e8],0x19
  44d5df:	add    bl,BYTE PTR [rbx+0x46]
  44d5e2:	add    dh,dh
  44d5e4:	xchg   ebp,eax
  44d5e5:	ror    DWORD PTR [rax+0x3808df1c],0xe
  44d5ec:	adc    al,0x58
  44d5ee:	mov    dl,0x7
  44d5f0:	add    DWORD PTR [rax-0x2c],0x95100f9
  44d5f7:	add    eax,0x8a8bb172
  44d5fc:	rex.X ror BYTE PTR [rdx],0x62
  44d600:	test   BYTE PTR [rdi+0x3fb9b4d],ch
  44d606:	sbb    DWORD PTR [rip+0xffffffffbe031741],eax        # 0xffffffffbe47ed4d
  44d60c:	out    0x43,al
  44d60e:	(bad)  
  44d60f:	adc    eax,0xd8098f88
  44d614:	test   DWORD PTR [rax-0x37],edi
  44d617:	(bad)  
  44d618:	rex.WX xor rsi,QWORD PTR [rsi]
  44d61b:	push   rbx
  44d61c:	sub    DWORD PTR [rax],esp
  44d61e:	fwait
  44d61f:	sbb    al,ah
  44d621:	cmp    eax,DWORD PTR [rcx+0x94fa6cb]
  44d627:	adc    BYTE PTR [rax+rsi*1+0x1b],al
  44d62b:	mov    ebx,0x9f072cbe
  44d630:	or     eax,0xfc320608
  44d635:	xor    dh,BYTE PTR [rax-0x704a9f7]
  44d63b:	rex.RXB in al,dx
  44d63d:	mov    al,0x1d
  44d63f:	sbb    ebp,edx
  44d641:	rex.XB
  44d642:	gs (bad) 
  44d644:	std    
  44d645:	push   rax
  44d646:	cmp    ch,dl
  44d648:	stos   DWORD PTR es:[rdi],eax
  44d649:	sbb    BYTE PTR [rbp+rbp*1+0x12723805],dl
  44d650:	sub    bh,BYTE PTR [rbp+0x62]
  44d653:	jg     0x44d61e
  44d655:	cmp    DWORD PTR [rsi-0x24],r9d
  44d659:	mov    eax,ecx
  44d65b:	rex.WX shr BYTE PTR [rsi],0x37
  44d65f:	or     ah,BYTE PTR [rax+rcx*2-0x4f]
  44d663:	idiv   dl
  44d665:	mov    bpl,0x27
  44d668:	cs add eax,0x3210123d
  44d66e:	in     eax,dx
  44d66f:	adc    eax,DWORD PTR [rbx+0x28]
  44d672:	repnz mov dl,0xb3
  44d675:	clc    
  44d676:	(bad)  
  44d677:	(bad)  
  44d678:	cli    
  44d679:	(bad)  
  44d67a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  44d67b:	fisub  DWORD PTR [rbx+0x73]
  44d67e:	mul    BYTE PTR [rcx]
  44d680:	add    al,0xf9
  44d683:	test   al,0x40
  44d685:	push   rdx
  44d686:	xor    DWORD PTR [rsi],edi
  44d688:	or     DWORD PTR [rcx+0x47],esp
  44d68b:	movabs al,ds:0x67f3254eaae0265c
  44d694:	(bad)  
  44d695:	scas   eax,DWORD PTR es:[rdi]
  44d696:	add    eax,0x504af632
  44d69b:	fwait
  44d69c:	push   0xffffffffffffff93
  44d69e:	or     eax,0x37739708
  44d6a3:	adc    ebp,DWORD PTR [rbx]
  44d6a5:	xchg   edi,eax
  44d6a6:	retf   0x4471
  44d6a9:	cwde   
  44d6aa:	jmp    0xffffffff8fa747ef
  44d6b0:	fldenv [rax+0x46]
  44d6b3:	add    eax,DWORD PTR [rdx-0x39fbc6f2]
  44d6b9:	rex.RXB sub DWORD PTR [r15+0x6],0x55
  44d6be:	out    dx,eax
  44d6bf:	xlat   BYTE PTR ds:[rbx]
  44d6c0:	test   DWORD PTR [rip+0x693052],ecx        # 0xae0718
  44d6c6:	xor    DWORD PTR [rdx+rdi*2+0x33],0xa31e1f17
  44d6ce:	(bad)  
  44d6cf:	stos   BYTE PTR es:[rdi],al
  44d6d0:	ins    DWORD PTR es:[rdi],dx
  44d6d1:	icebp  
  44d6d2:	fs pushf 
  44d6d4:	rex.WRXB jmp 0x11771d6e
  44d6da:	xchg   ebx,ebp
  44d6dc:	fcomi  st,st(7)
  44d6de:	add    ebx,DWORD PTR [rcx-0x29eebef9]
  44d6e4:	ds ret 0x69c2
  44d6e8:	repz add DWORD PTR [rcx],0xbf0c26ca
  44d6ef:	sbb    al,0x8
  44d6f1:	add    ebx,DWORD PTR ds:[rdi+0x69]
  44d6f5:	loopne 0x44d76b
  44d6f7:	and    esi,DWORD PTR [r11+0x8871470]
  44d6fe:	adc    BYTE PTR [rcx-0x7b],bl
  44d701:	ret    0xa33d
  44d704:	mov    ch,0xa7
  44d706:	pop    rbp
  44d707:	(bad)  
  44d708:	out    0x50,eax
  44d70a:	sbb    ebx,eax
  44d70c:	jnp    0x44d70f
  44d70e:	(bad)  
  44d70f:	add    esi,DWORD PTR [rcx-0x68]
  44d712:	cmp    DWORD PTR [rbp+0x57302160],edx
  44d718:	outs   dx,BYTE PTR ds:[rsi]
  44d719:	jg     0x44d6f6
  44d71b:	(bad)  
  44d71c:	xchg   BYTE PTR [rdx+0x6],ch
  44d71f:	sbb    al,0xc3
  44d721:	and    DWORD PTR [rdx-0x55baef6],esi
  44d727:	add    bl,BYTE PTR [rbp+rcx*8-0x7704a727]
  44d72e:	mov    dh,BYTE PTR [rdx+rcx*8+0x7b]
  44d732:	std    
  44d733:	xchg   edi,eax
  44d734:	add    DWORD PTR [rdx*1+0x6b91f0e2],eax
  44d73b:	adc    ebx,DWORD PTR [rcx+0x24]
  44d73e:	xor    BYTE PTR [rsi-0x1305fab9],ch
  44d744:	pop    rax
  44d745:	pop    rcx
  44d746:	jmp    0x44d74f
  44d748:	add    ebx,edi
  44d74a:	or     BYTE PTR [rdx],ah
  44d74c:	repz cmp esp,edi
  44d74f:	sahf   
  44d750:	sbb    BYTE PTR [rax],cl
  44d752:	sbb    al,bh
  44d754:	repz xor eax,0x552810bf
  44d75a:	mov    gs,WORD PTR [rdx-0x79]
  44d75d:	(bad)  
  44d75e:	xchg   ecx,eax
  44d75f:	adc    DWORD PTR [rcx+0x1e],edi
  44d762:	sbb    ah,BYTE PTR [rax]
  44d764:	(bad)  
  44d765:	jno    0x44d7db
  44d767:	or     eax,0x8db2aa76
  44d76c:	cwde   
  44d76d:	or     ah,BYTE PTR [rax+0x19]
  44d770:	rex.WB (bad) 
  44d772:	pop    rdi
  44d773:	or     eax,ebx
  44d775:	lock test cl,0x4d
  44d779:	add    al,BYTE PTR [rbx+rsi*1]
  44d77c:	movabs cs:0xa445fa3c62fa2fc7,al
  44d786:	mov    ebp,ss
  44d788:	out    0xca,eax
  44d78a:	je     0x44d7ca
  44d78c:	(bad)  
  44d78d:	xadd   DWORD PTR [rdi+0x50],ecx
  44d791:	clc    
  44d792:	adc    DWORD PTR [rax-0x38],0xfe112a58
  44d799:	and    BYTE PTR [rsi+0xf8fcc6],bh
  44d79f:	jno    0x44d806
  44d7a1:	xor    ch,ch
  44d7a3:	(bad)  
  44d7a4:	xor    al,0x41
  44d7a6:	pop    rdi
  44d7a7:	outs   dx,DWORD PTR ds:[rsi]
  44d7a8:	sbb    BYTE PTR [rax+0x38bce749],cl
  44d7ae:	and    dh,dl
  44d7b0:	rcr    bh,0x88
  44d7b3:	pop    rbp
  44d7b4:	(bad)  
  44d7b5:	or     eax,0x3f05b29b
  44d7ba:	repnz sub eax,DWORD PTR [rcx]
  44d7bd:	and    al,0xe4
  44d7bf:	rex.R (bad) 
  44d7c1:	pop    rdi
  44d7c2:	lock mov bh,0x1
  44d7c5:	sti    
  44d7c6:	sub    al,0x6
  44d7c8:	ficom  DWORD PTR [rbp+0x9]
  44d7cb:	(bad)  
  44d7cc:	sbb    ebx,DWORD PTR [rdi+0x1a]
  44d7cf:	xlat   BYTE PTR ds:[rbx]
  44d7d0:	pop    rdx
  44d7d1:	and    BYTE PTR [rsi],al
  44d7d3:	stc    
  44d7d4:	rex.WRX fistp WORD PTR [rbx+r9*4-0x18]
  44d7d9:	and    dl,BYTE PTR [rsi+0x63a6c4f3]
  44d7df:	mov    dl,dh
  44d7e1:	nop
  44d7e2:	(bad)  
  44d7e3:	cld    
  44d7e4:	push   0x63
  44d7e6:	punpckldq mm6,DWORD PTR [rdi-0x53]
  44d7ea:	rex lahf 
  44d7ec:	scas   eax,DWORD PTR es:[rdi]
  44d7ed:	(bad)  
  44d7ee:	mov    BYTE PTR [rdi],al
  44d7f0:	xlat   BYTE PTR ds:[rbx]
  44d7f1:	mov    eax,0x40917044
  44d7f6:	xor    dl,BYTE PTR [rcx-0x27]
  44d7f9:	sahf   
  44d7fa:	sub    eax,0x98928820
  44d7ff:	push   rdx
  44d800:	cld    
  44d801:	xchg   edx,eax
  44d802:	add    DWORD PTR [rcx+riz*1],0xe7f313c3
  44d809:	xor    DWORD PTR [rsi+rdx*2],ebx
  44d80c:	push   rbx
  44d80d:	(bad)  
  44d80e:	(bad)  
  44d80f:	lods   eax,DWORD PTR ds:[rsi]
  44d810:	rex.WRB and BYTE PTR [r9],r9b
  44d813:	(bad)  
  44d814:	fidivr DWORD PTR [rsi+0x281c3792]
  44d81a:	fwait
  44d81b:	xor    DWORD PTR [rdx+0x4ab3a10c],edi
  44d821:	sub    esi,eax
  44d823:	adc    eax,0x88d94c4
  44d828:	cld    
  44d829:	scas   eax,DWORD PTR es:[rdi]
  44d82a:	xchg   esp,eax
  44d82b:	sahf   
  44d82c:	mov    edi,0x907fbc8b
  44d831:	not    esp
  44d833:	retf   0x6066
  44d836:	(bad)  
  44d837:	cdq    
  44d838:	rex.R jle 0x44d822
  44d83b:	jae    0x44d81b
  44d83d:	(bad)  
  44d83e:	movabs al,ds:0x39c73ea9e0c08293
  44d847:	iret   
  44d848:	loopne 0x44d834
  44d84a:	pop    rsp
  44d84b:	rex.B jmp 0x44d8c1
  44d84e:	(bad)  
  44d84f:	cs jae 0x44d8a6
  44d852:	mov    ebx,esp
  44d854:	jae    0x44d859
  44d856:	xlat   BYTE PTR ds:[rbx]
  44d857:	sahf   
  44d858:	int3   
  44d859:	(bad)  
  44d85a:	pushf  
  44d85b:	in     eax,dx
  44d85c:	or     DWORD PTR [rbx+rcx*4+0x7281b344],0x32a088e6
  44d867:	cmp    ah,BYTE PTR [rbp+0x55]
  44d86a:	cli    
  44d86b:	adc    ch,BYTE PTR [rcx]
  44d86d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  44d86e:	(bad)  
  44d86f:	fcmovu st,st(0)
  44d871:	loopne 0x44d802
  44d873:	add    cl,BYTE PTR [rsi+0x34]
  44d876:	outs   dx,BYTE PTR ds:[rsi]
  44d877:	mov    ?,WORD PTR [rbx+0x75]
  44d87a:	lock mov edx,0x6126fd80
  44d880:	mov    ecx,0xb460431d
  44d885:	in     eax,dx
  44d886:	xchg   ebp,eax
  44d887:	xor    dl,BYTE PTR [rbx-0x8]
  44d88a:	jg     0x44d89b
  44d88c:	sub    ah,BYTE PTR [rbx]
  44d88e:	mov    ecx,0x53604106
  44d893:	movsxd edx,eax
  44d895:	xchg   esi,eax
  44d896:	push   rdx
  44d897:	(bad)  
  44d898:	stc    
  44d899:	adc    BYTE PTR [rbx+0x9],cl
  44d89c:	push   rbp
  44d89d:	sub    DWORD PTR [rax],0xb5478db8
  44d8a3:	or     esp,0xfffffffa
  44d8a6:	xor    DWORD PTR [rdi+rbp*4+0xa],0xffffff90
  44d8ab:	rex.WRB add r9b,r9b
  44d8ae:	pop    rax
  44d8af:	rex.W push 0xffffffff83e402ac
  44d8b5:	add    DWORD PTR [rcx+0x33],esp
  44d8b8:	xchg   ebp,eax
  44d8b9:	and    BYTE PTR [rax],cl
  44d8bb:	cli    
  44d8bc:	cmp    DWORD PTR [rax],0x938477ca
  44d8c2:	ins    DWORD PTR es:[rdi],dx
  44d8c3:	std    
  44d8c4:	lods   eax,DWORD PTR ds:[rsi]
  44d8c5:	or     eax,0x561f5199
  44d8ca:	(bad)  
  44d8cb:	pop    rbx
  44d8cc:	(bad)  
  44d8cd:	repz add DWORD PTR [rax-0x78aaf82d],0x41aabeb
  44d8d8:	sub    eax,0x9907d3c1
  44d8dd:	or     al,0x31
  44d8df:	rex.WXB xlat BYTE PTR gs:[rbx]
  44d8e2:	xchg   edi,eax
  44d8e3:	add    BYTE PTR [rax],dl
  44d8e5:	in     al,dx
  44d8e6:	lahf   
  44d8e7:	add    ah,BYTE PTR [rbp+riz*2-0x59f704c5]
  44d8ee:	jrcxz  0x44d881
  44d8f0:	xchg   BYTE PTR [rax],ah
  44d8f2:	adc    DWORD PTR [rdi-0x39],ebx
  44d8f5:	and    BYTE PTR [rdi],ah
  44d8f7:	adc    ecx,r8d
  44d8fa:	jl     0x44d91e
  44d8fc:	xchg   rbp,rax
  44d8fe:	lock mov BYTE PTR [rdx],ah
  44d901:	pop    rax
  44d902:	sbb    DWORD PTR [ebx],0x7
  44d906:	test   BYTE PTR [rax+0x78971970],cl
  44d90c:	rex.XB pop r8
  44d90e:	and    cl,ch
  44d910:	mov    dh,0xfa
  44d912:	cs mov cl,0x88
  44d915:	adc    ebx,DWORD PTR [rcx+0xf]
  44d918:	(bad)  
  44d919:	ins    DWORD PTR es:[rdi],dx
  44d91a:	cli    
  44d91b:	rex.RX enter 0x1708,0x1b
  44d920:	and    dh,dl
  44d922:	movabs ds:0x644a284940809983,eax
  44d92b:	add    cl,ah
  44d92d:	(bad)  
  44d92e:	mov    BYTE PTR [rcx-0x74],cl
  44d931:	pop    rsp
  44d932:	(bad)  
  44d934:	(bad)
  44d937:	add    esp,DWORD PTR [rdx-0x4588ceab]
  44d93d:	mov    esp,0xa62eb17
  44d942:	adc    ecx,edi
  44d944:	xchg   esp,eax
  44d945:	(bad)  
  44d946:	hlt    
  44d947:	push   rbp
  44d948:	adc    ax,0x5e8f
  44d94c:	imul   edx,DWORD PTR [rbx],0xffffffc3
  44d94f:	cli    
  44d950:	test   DWORD PTR [rdi],edi
  44d952:	ins    BYTE PTR es:[rdi],dx
  44d953:	(bad)  
  44d954:	inc    BYTE PTR [rax-0x3bceaf0c]
  44d95a:	jmp    FWORD PTR [rsp+rdx*2-0x51]
  44d95e:	cmp    bh,ah
  44d960:	outs   dx,DWORD PTR ds:[rsi]
  44d961:	icebp  
  44d962:	sub    bpl,al
  44d965:	(bad)  
  44d966:	cmp    DWORD PTR [rcx],0x36f48be9
  44d96c:	(bad)  
  44d96d:	xchg   r10d,eax
  44d96f:	(bad)
  44d972:	nop
  44d973:	ins    BYTE PTR es:[rdi],dx
  44d974:	pop    rbx
  44d975:	and    BYTE PTR [rax+0x6112946c],bl
  44d97b:	je     0x44d90f
  44d97d:	mov    cl,0x9e
  44d97f:	sbb    ch,al
  44d981:	rcr    bh,0x4
  44d984:	mov    BYTE PTR [rax+rbx*1],ch
  44d987:	pushf  
  44d988:	iret   
  44d989:	loope  0x44d955
  44d98b:	adc    al,0x81
  44d98d:	int    0x28
  44d98f:	mov    bh,0xd
  44d991:	sbb    ch,ah
  44d993:	loop   0x44d942
  44d995:	int    0x9d
  44d997:	jns    0x44d93e
  44d999:	mov    eax,0x68bc8636
  44d99e:	movabs al,ds:0xe6da3800cb395e0f
  44d9a7:	(bad)  
  44d9a8:	add    al,0x42
  44d9aa:	(bad)  
  44d9ab:	mov    ebp,0x9358c052
  44d9b0:	mov    BYTE PTR [rsi+0x1f],ch
  44d9b3:	addr32 (bad) 
  44d9b5:	(bad)  
  44d9b6:	call   0xffffffffb213997a
  44d9bb:	jrcxz  0x44d9f3
  44d9bd:	cs xchg esi,eax
  44d9bf:	movsxd ebx,DWORD PTR [rdi]
  44d9c1:	sbb    al,0x28
  44d9c3:	push   rbx
  44d9c4:	test   eax,0xfd2d132
  44d9c9:	rex.WX sub al,0x38
  44d9cc:	mov    WORD PTR [rbx+0x10],cs
  44d9cf:	jo     0x44d98f
  44d9d1:	xor    BYTE PTR [rbp+0x3e],0x35
  44d9d5:	and    al,0x10
  44d9d7:	(bad)  
  44d9d8:	lock lods al,BYTE PTR ds:[rsi]
  44d9da:	adc    eax,eax
  44d9dc:	jle    0x44da03
  44d9de:	and    BYTE PTR [rsi+0x2f],bl
  44d9e1:	(bad)  
  44d9e2:	cmp    al,0x2e
  44d9e4:	adc    BYTE PTR [rsp+rdx*2+0x732b695f],bh
  44d9eb:	pop    rbp
  44d9ec:	xor    edi,DWORD PTR [rax+0x5f]
  44d9ef:	jmp    0x44da29
  44d9f1:	out    0xb2,eax
  44d9f3:	out    0x5d,eax
  44d9f5:	or     DWORD PTR [rdi],0x5
  44d9f8:	ja     0x44da06
  44d9fa:	outs   dx,BYTE PTR ds:[rsi]
  44d9fb:	adc    ecx,DWORD PTR [rax]
  44d9fd:	or     bl,BYTE PTR [rcx]
  44d9ff:	fnsave [rbp-0x9]
  44da02:	add    al,0x32
  44da04:	xchg   ebx,eax
  44da05:	lods   al,BYTE PTR ds:[rsi]
  44da06:	imul   ebx,DWORD PTR [rdi-0x64f6fb31],0x80b0e739
  44da10:	push   0xffffffffffffffcb
  44da12:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  44da13:	add    al,0xf9
  44da15:	mov    cl,0x1
  44da17:	(bad)  
  44da18:	adc    BYTE PTR [rdx-0x7f],al
  44da1b:	(bad)  
  44da1c:	and    al,0x2
  44da1e:	or     cl,ch
  44da20:	xchg   esp,eax
  44da21:	movabs ds:0x7040fe08131047c4,al
  44da2a:	and    eax,0xab210227
  44da2f:	xchg   edx,eax
  44da30:	jl     0x44da57
  44da32:	and    BYTE PTR [rsp+rax*1],dh
  44da35:	or     eax,0xcd89f8d9
  44da3a:	(bad)  
  44da3b:	adc    eax,0xca2211b0
  44da40:	(bad)  
  44da41:	or     BYTE PTR [rcx+0x78e86c18],al
  44da47:	movsxd edx,DWORD PTR [rbp+0x627edb1]
  44da4d:	(bad)  
  44da4e:	lahf   
  44da4f:	loopne 0x44dab9
  44da51:	fistp  QWORD PTR [rsi]
  44da53:	fstp   TBYTE PTR [rsi-0x43fa6740]
  44da59:	fadd   DWORD PTR [rcx-0x44]
  44da5c:	xchg   DWORD PTR [rdi],eax
  44da5e:	mov    BYTE PTR [rcx+0x7e],bl
  44da61:	(bad)  
  44da62:	iret   
  44da63:	jnp    0x44d9e7
  44da65:	movabs ds:0x5cc733e0ccdc75d,eax
  44da6e:	add    esi,DWORD PTR [rcx]
  44da70:	mov    esi,DWORD PTR [rdx+rsi*4+0x2e]
  44da74:	shl    DWORD PTR [rip+0x4d84848a],1        # 0x4dc95f04
  44da7a:	mov    DWORD PTR [rdi],ebp
  44da7c:	sbb    eax,DWORD PTR [rcx]
  44da7e:	fcmovnu st,st(7)
  44da80:	(bad)  
  44da81:	mov    eax,0x189ebb46
  44da86:	out    0x1b,al
  44da88:	add    al,0x24
  44da8a:	bnd jne 0x44dada
  44da8d:	icebp  
  44da8e:	and    ebp,DWORD PTR [rbx-0x55]
  44da91:	sbb    BYTE PTR [rbx+rdi*2+0x29],bl
  44da95:	cwde   
  44da96:	ins    DWORD PTR es:[rdi],dx
  44da97:	xlat   BYTE PTR ds:[rbx]
  44da98:	push   rdx
  44da99:	test   eax,0x6f63bb18
  44da9e:	adc    eax,0x6a2026bc
  44daa3:	mov    BYTE PTR [rdi-0x78],0x55
  44daa7:	rex.WRB add al,0xac
  44daaa:	test   BYTE PTR ss:[rbx-0x72000643],dl
  44dab1:	sbb    eax,0x419dc632
  44dab7:	(bad)
  44daba:	lahf   
  44dabb:	cmp    DWORD PTR [rax],edi
  44dabd:	rex.RXB jo 0x44da8e
  44dac0:	rex jg 0x44daf1
  44dac3:	fsub   QWORD PTR [rax]
  44dac5:	adc    edx,DWORD PTR [rbx]
  44dac7:	int3   
  44dac8:	retf   
  44dac9:	add    eax,0xd61503db
  44dace:	sti    
  44dacf:	pop    rsp
  44dad0:	pushf  
  44dad1:	icebp  
  44dad2:	sbb    eax,0xb3148934
  44dad7:	fstp   DWORD PTR [rdi+0x69]
  44dada:	lahf   
  44dadb:	pop    rdx
  44dadc:	or     al,0x8f
  44dade:	jno    0x44db11
  44dae0:	(bad)  
  44dae1:	(bad)  
  44dae2:	in     al,0x5d
  44dae4:	sar    DWORD PTR [rax+rax*2-0x3],0x18
  44dae9:	xchg   edi,eax
  44daea:	cmp    DWORD PTR [rcx],0xffffff94
  44daed:	jrcxz  0x44db28
  44daef:	push   rax
  44daf0:	jo     0x44dabc
  44daf2:	sbb    BYTE PTR [rcx+rdx*8+0x7da352fe],dl
  44daf9:	jns    0x44db4a
  44dafb:	rex.B test al,0xa2
  44dafe:	in     eax,dx
  44daff:	fild   DWORD PTR [rcx+0x200b234c]
  44db05:	(bad)  
  44db06:	xor    al,0xa2
  44db08:	rex.WRX fisubr DWORD PTR [rdi]
  44db0b:	sti    
  44db0c:	fnstenv [rbp+rdi*8+0x45ce75dc]
  44db13:	cmp    al,BYTE PTR [rcx+0x2aaa7b2c]
  44db19:	jle    0x44daf1
  44db1b:	scas   al,BYTE PTR es:[rdi]
  44db1c:	retf   
  44db1d:	mov    esp,eax
  44db1f:	imul   esp,DWORD PTR [rsi+0x74],0xd04532ae
  44db26:	(bad)  
  44db27:	jns    0x44db18
  44db29:	mov    cl,0xc9
  44db2b:	jle    0x44db5e
  44db2d:	mov    eax,0xb8e46a
  44db32:	sub    DWORD PTR [rax],ecx
  44db34:	sbb    al,0xb2
  44db36:	enter  0xc32c,0xfe
  44db3a:	adc    ecx,DWORD PTR [rax-0x56]
  44db3d:	pop    rdx
  44db3e:	fwait
  44db3f:	int3   
  44db40:	jno    0x44daf9
  44db42:	rex push rsi
  44db44:	jb     0x44daf2
  44db46:	movabs al,ds:0xf25b20080c8e1594
  44db4f:	leave  
  44db50:	rex.WRXB add r12b,BYTE PTR [r10]
  44db53:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  44db54:	(bad)  
  44db55:	rex (bad) 
  44db57:	stc    
  44db58:	loopne 0x44db63
  44db5a:	add    DWORD PTR [rcx-0x6b],esi
  44db5d:	or     QWORD PTR [r9+rsi*8-0x50f74738],rbp
  44db65:	(bad)  
  44db66:	mov    eax,DWORD PTR [rcx]
  44db68:	(bad)  
  44db69:	rex.X mov spl,0xf
  44db6c:	add    al,0x8
  44db6e:	push   rbp
  44db6f:	cdq    
  44db70:	pop    rax
  44db71:	(bad)  
  44db72:	mov    DWORD PTR [rsi-0x25813954],ebp
  44db78:	jno    0x44db37
  44db7a:	sbb    eax,0xd7e10101
  44db7f:	(bad)  
  44db80:	jbe    0x44db0e
  44db82:	jmp    0x44db9c
  44db84:	mov    cr4,rax
  44db87:	cmp    eax,0x2023bdf2
  44db8c:	mov    ah,0x5f
  44db8e:	or     al,0xf8
  44db90:	push   rbx
  44db91:	jmp    QWORD PTR [rdx+rbx*2+0x3e]
  44db95:	(bad)  
  44db96:	fcomp  QWORD PTR [rdi-0x5120c1f6]
  44db9c:	rex.WRXB xor BYTE PTR [r8],r9b
  44db9f:	adc    al,0xd1
  44dba1:	test   al,0xf1
  44dba3:	adc    ch,BYTE PTR [rdi+0x42]
  44dba6:	rex.WB je 0x44dc05
  44dba9:	jg     0x44dbd0
  44dbab:	adc    BYTE PTR [rbx],ch
  44dbad:	cli    
  44dbae:	push   rdi
  44dbaf:	jbe    0x44db44
  44dbb1:	test   DWORD PTR [rbx+0x74],ecx
  44dbb4:	fs cmp bl,ah
  44dbb7:	mov    ebx,0x39cf3b4a
  44dbbc:	add    al,0xc
  44dbbe:	and    al,0x9c
  44dbc0:	scas   eax,DWORD PTR es:[rdi]
  44dbc1:	(bad)  
  44dbc2:	loop   0x44dc0d
  44dbc4:	add    ah,BYTE PTR [rax-0x1]
  44dbc7:	iret   
  44dbc8:	(bad)  
  44dbc9:	(bad)  
  44dbca:	pop    rbx
  44dbcb:	loop   0x44dc19
  44dbcd:	call   0xffffffffb5cd0226
  44dbd2:	adc    BYTE PTR [rax+0x2135b39],dh
  44dbd8:	adc    eax,0x48109f18
  44dbdd:	rex.R jp 0x44dc48
  44dbe0:	xor    BYTE PTR [rdi+rax*8+0x6],0x6c
  44dbe5:	int    0x2f
  44dbe7:	in     al,dx
  44dbe8:	stc    
  44dbe9:	mov    esp,0x2be03660
  44dbee:	sbb    esp,DWORD PTR [rcx+0x40c11b00]
  44dbf4:	shl    BYTE PTR [rcx-0x26e1ee51],1
  44dbfa:	lea    ebx,[rdi-0x7c084eb8]
  44dc00:	(bad)  
  44dc01:	rex.WXB (bad) 
  44dc03:	mov    ds,WORD PTR [rbx-0x1f9d08ea]
  44dc09:	(bad)  
  44dc0a:	loopne 0x44dbaf
  44dc0c:	fwait
  44dc0d:	and    DWORD PTR [rsi+0xa8daf00],eax
  44dc13:	outs   dx,DWORD PTR ds:[rsi]
  44dc14:	je     0x44dbe4
  44dc16:	imul   esi,DWORD PTR [rdx+0xc],0x4c8471d2
  44dc1d:	leave  
  44dc1e:	sbb    ah,dl
  44dc20:	jmp    QWORD PTR [rbp-0x1e7f413f]
  44dc26:	(bad)  
  44dc27:	fwait
  44dc28:	(bad)  
  44dc29:	cli    
  44dc2a:	rex.R shr BYTE PTR [rcx],0xb2
  44dc2e:	test   BYTE PTR [rsp+0x5b],ch
  44dc32:	and    esi,DWORD PTR [rax-0x5dff7787]
  44dc38:	rex.X ficomp DWORD PTR [rbp+0x2f]
  44dc3c:	fwait
  44dc3d:	scas   al,BYTE PTR es:[rdi]
  44dc3e:	in     al,0x73
  44dc40:	push   0x47
  44dc42:	cmc    
  44dc43:	sbb    BYTE PTR [rdx+rdi*8+0x7a52332a],ah
  44dc4a:	(bad)  
  44dc4b:	sti    
  44dc4c:	rex.RX shr BYTE PTR [rax+0x517a9ca],0xb3
  44dc54:	add    DWORD PTR [rax+0x5f],0x20e65c6f
  44dc5b:	enter  0x82b,0xa8
  44dc5f:	lock frstor [rdi-0x137e80e4]
  44dc66:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  44dc67:	call   0x16cb2ab0
  44dc6c:	sub    al,0x6c
  44dc6e:	rex.RX (bad) 
  44dc70:	xlat   BYTE PTR ds:[rbx]
  44dc71:	imul   ebx,DWORD PTR [rdi-0x2513af68],0xffffffa8
  44dc78:	mov    dl,0xc0
  44dc7a:	rex.RX (bad) 
  44dc7c:	push   0x4e
  44dc7e:	lods   eax,DWORD PTR ds:[rsi]
  44dc7f:	(bad)  [rip+0xffffffff8d849051]        # 0xffffffff8dc96cd6
  44dc85:	(bad)  
  44dc86:	(bad)  
  44dc87:	or     BYTE PTR [rax],ch
  44dc89:	std    
  44dc8a:	addr32 jmp 0x44dcb4
  44dc8d:	add    eax,0x3676664a
  44dc92:	rex.WRX sbb QWORD PTR [rax+0x10af2998],r9
  44dc99:	rex.R xchg esi,eax
  44dc9b:	xchg   edi,eax
  44dc9c:	cmp    eax,0xd5781b2a
  44dca1:	(bad)  
  44dca2:	movabs ds:0x4c8f1c1f4f5da85c,al
  44dcab:	mov    BYTE PTR [rcx],dh
  44dcad:	in     al,dx
  44dcae:	mov    bl,0x0
  44dcb0:	xchg   esi,eax
  44dcb1:	in     eax,dx
  44dcb2:	imul   edx,DWORD PTR [rbx+0x488ff4d5],0xb
  44dcb9:	push   0x420313ed
  44dcbe:	cld    
  44dcbf:	mov    WORD PTR [rax-0x7a],es
  44dcc2:	(bad)  
  44dcc3:	shl    BYTE PTR [rdx-0x3377d344],1
  44dcc9:	scas   al,BYTE PTR es:[rdi]
  44dcca:	leave  
  44dccb:	iret   
  44dccc:	mov    bh,0x1f
  44dcce:	mov    ah,0xbd
  44dcd0:	cmp    eax,0x81058def
  44dcd5:	clc    
  44dcd6:	rex.W mov bpl,0x72
  44dcd9:	je     0x44dc7b
  44dcdb:	mov    al,BYTE PTR [rbx-0x72]
  44dcde:	sti    
  44dcdf:	mov    ah,0xeb
  44dce1:	mov    esi,0x83e2af33
  44dce6:	shr    BYTE PTR [rax+0x77],0xb5
  44dcea:	sbb    eax,0x59d8a047
  44dcef:	sti    
  44dcf0:	or     BYTE PTR [rbx+0x2c],cl
  44dcf3:	nop
  44dcf4:	push   rsi
  44dcf5:	push   rsi
  44dcf6:	xor    esi,DWORD PTR [esi-0x639fbd44]
  44dcfd:	cli    
  44dcfe:	add    bh,BYTE PTR [rdi+0x15]
  44dd01:	test   al,0x1c
  44dd03:	fs pop rsi
  44dd05:	adc    eax,0x912ad221
  44dd0a:	cmc    
  44dd0b:	or     DWORD PTR [rbp+0x78d123c4],0xf8912059
  44dd15:	rex.WR
  44dd16:	rex.WR push 0x63
  44dd19:	and    eax,0x48447c20
  44dd1e:	movabs ds:0x2404978654840e22,al
  44dd27:	mov    ?,WORD PTR [rbp-0xc29a740]
  44dd2d:	cmp    DWORD PTR [rcx-0x69],esp
  44dd30:	add    al,0x88
  44dd32:	(bad)  
  44dd33:	imul   esi,ecx,0x15
  44dd36:	lahf   
  44dd37:	(bad)
  44dd3b:	(bad)  
  44dd3c:	pop    rsp
  44dd3d:	stc    
  44dd3e:	outs   dx,BYTE PTR ds:[rsi]
  44dd3f:	jne    0x44dd64
  44dd41:	adc    bh,dl
  44dd43:	pop    rsp
  44dd44:	push   rax
  44dd45:	retf   
  44dd46:	pushf  
  44dd47:	test   BYTE PTR ss:[rax-0x30c6643c],ah
  44dd4e:	xor    esi,esp
  44dd50:	add    DWORD PTR [rdx],edi
  44dd52:	rex.XB pop r9
  44dd54:	cmp    bh,cl
  44dd56:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  44dd57:	push   rsp
  44dd58:	xchg   esi,eax
  44dd59:	rex.B stos BYTE PTR es:[rdi],al
  44dd5b:	rex.WRB and QWORD PTR [r14-0x17dd739a],0x64
  44dd63:	xchg   ecx,eax
  44dd64:	xchg   ebp,eax
  44dd65:	rex
  44dd66:	data16 loope 0x44dd8d
  44dd69:	adc    DWORD PTR [rdx+0x46],0x9
  44dd6d:	or     BYTE PTR [rdx],cl
  44dd6f:	imul   ecx,DWORD PTR [rsi-0x80],0x7388b270
  44dd76:	cmp    BYTE PTR [rsi+0x77],ch
  44dd79:	xor    BYTE PTR [rbx],bl
  44dd7b:	enter  0x9c3e,0x46
  44dd7f:	cmc    
  44dd80:	pop    rsp
  44dd81:	rex.WRXB pop r9
  44dd83:	mov    cl,0x14
  44dd85:	and    bl,ch
  44dd87:	(bad)  
  44dd88:	add    ebx,DWORD PTR [rcx]
  44dd8a:	imul   BYTE PTR [rcx-0x13209aff]
  44dd90:	sbb    dl,ch
  44dd92:	cmp    BYTE PTR [rsi],al
  44dd94:	adc    eax,0x50932a8
  44dd99:	lahf   
  44dd9a:	imul   ebp,DWORD PTR [rbp+0x6c],0xffffffcb
  44dd9e:	stos   DWORD PTR es:[rdi],eax
  44dd9f:	rex movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  44dda1:	shl    dh,1
  44dda3:	out    dx,eax
  44dda4:	or     ebx,DWORD PTR [rsi+0x4e6d2816]
  44ddaa:	out    dx,al
  44ddab:	xor    eax,0x28e73828
  44ddb0:	jmp    0x44ddc2
  44ddb2:	mov    r8b,0x12
  44ddb5:	sbb    DWORD PTR [rcx+0x21],eax
  44ddb8:	cmp    bh,bl
  44ddba:	(bad)  
  44ddbb:	jo     0x44dd6d
  44ddbd:	jno    0x44dde2
  44ddbf:	fstp   DWORD PTR [rbx+0x2]
  44ddc2:	ss (bad) 
  44ddc4:	fwait
  44ddc5:	movsxd eax,DWORD PTR [rdx]
  44ddc7:	jbe    0x44ddff
  44ddc9:	(bad)  
  44ddca:	jb     0x44de49
  44ddcc:	mov    dh,0x72
  44ddce:	or     al,0x1b
  44ddd0:	sub    BYTE PTR [rcx+0x5],bl
  44ddd3:	and    al,0x5b
  44ddd5:	and    bh,BYTE PTR [rbp-0xa57d714]
  44dddb:	push   rdi
  44dddc:	add    BYTE PTR [rdx],ah
  44ddde:	mov    esp,0x594512be
  44dde3:	or     al,0x41
  44dde5:	test   BYTE PTR [rip+0xffffffffb2f09702],0x35        # 0xffffffffb33574ee
  44ddec:	sbb    eax,DWORD PTR [rdx+0x22b216b]
  44ddf2:	or     ah,BYTE PTR [rax-0xa]
  44ddf5:	push   rax
  44ddf6:	jle    0x44ddf3
  44ddf8:	fwait
  44ddf9:	out    dx,eax
  44ddfa:	mov    BYTE PTR [rsp+rcx*4-0x79f78f7b],al
  44de01:	rex.WR
  44de02:	rex.WX jo 0x44de00
  44de05:	(bad)  
  44de06:	sbb    BYTE PTR [rax],ah
  44de08:	(bad)  
  44de09:	xchg   edx,eax
  44de0a:	sbb    DWORD PTR [rdi],eax
  44de0c:	push   rcx
  44de0d:	sbb    ebx,DWORD PTR cs:[rbp+0x36]
  44de11:	out    dx,eax
  44de12:	cmc    
  44de13:	rex.WRXB lahf 
  44de15:	rex.WR
  44de16:	rex.WRXB xchg r12,rax
  44de18:	jmp    0x44de86
  44de1a:	js     0x44ddcf
  44de1c:	movabs al,ds:0x78ff440124c44bfc
  44de25:	cmp    al,0x6c
  44de28:	ins    BYTE PTR es:[rdi],dx
  44de29:	es fwait
  44de2b:	(bad)  
  44de2c:	(bad)  
  44de2d:	call   0x3494aad9
  44de32:	scas   eax,DWORD PTR es:[rdi]
  44de33:	sbb    esi,DWORD PTR [rax+0x315c3e9b]
  44de39:	loopne 0x44deb6
  44de3b:	(bad)  
  44de3c:	gs pop rbx
  44de3e:	push   rbp
  44de3f:	xchg   esi,eax
  44de40:	jle    0x44de8c
  44de42:	or     BYTE PTR [rsi-0x5b7bb7e8],ah
  44de48:	mov    BYTE PTR [rsi],ch
  44de4a:	xchg   esi,eax
  44de4b:	outs   dx,BYTE PTR ds:[rsi]
  44de4c:	(bad)  
  44de4d:	adc    BYTE PTR [rax],dh
  44de4f:	sbb    DWORD PTR [rdi-0x6b],ebx
  44de52:	and    DWORD PTR [rbx+0x1a],ecx
  44de55:	(bad)
  44de59:	push   rax
  44de5a:	sbb    ebx,DWORD PTR [rdi]
  44de5c:	xchg   ebp,eax
  44de5d:	fisttp WORD PTR [rax]
  44de5f:	mov    ebx,0x97110e69
  44de64:	ins    BYTE PTR es:[rdi],dx
  44de65:	and    al,0xd
  44de67:	leave  
  44de68:	ins    BYTE PTR es:[rdi],dx
  44de69:	movabs ds:0xfbec67c31c90f0c4,eax
  44de72:	pushf  
  44de73:	movabs al,ds:0xdbcb5c1e0f79cc44
  44de7c:	xchg   ebx,eax
  44de7d:	mov    BYTE PTR [rbx-0x67],cl
  44de80:	xchg   ebp,eax
  44de81:	sbb    esp,edi
  44de83:	or     ecx,DWORD PTR [rsi+0x3b]
  44de86:	in     eax,0x2
  44de88:	(bad)  
  44de89:	sub    al,0x78
  44de8b:	ins    BYTE PTR es:[rdi],dx
  44de8c:	sti    
  44de8d:	add    ch,BYTE PTR [rdx-0x31dc56c8]
  44de93:	sbb    BYTE PTR [esi+0x62e0e8fd],al
  44de9a:	(bad)  
  44de9b:	test   BYTE PTR [rbx+0x2398136e],ah
  44dea1:	cmp    BYTE PTR [rdi+0x1b2b50e2],dl
  44dea7:	test   ebx,ebx
  44dea9:	shl    esi,1
  44deab:	lahf   
  44deac:	test   eax,0xeecb231d
  44deb1:	or     al,0x66
  44deb3:	sbb    ebx,0x5
  44deb6:	retf   0x6524
  44deb9:	mov    ah,BYTE PTR [rax]
  44debb:	movabs ds:0xab05e90004c8c82,al
  44dec4:	loop   0x44de5b
  44dec6:	add    bl,0xc6
  44dec9:	sbb    esi,ebp
  44decb:	in     eax,0xb8
  44decd:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  44dece:	add    BYTE PTR [rip+0x2b250c04],bpl        # 0x2b69ead9
  44ded5:	or     eax,DWORD PTR [rsp+riz*8]
  44ded8:	addr32 (bad) 
  44deda:	xlat   BYTE PTR ds:[rbx]
  44dedb:	cdq    
  44dedc:	or     ebx,DWORD PTR [rax]
  44dede:	or     eax,0x1608186e
  44dee3:	not    BYTE PTR [rcx]
  44dee5:	rex.R
  44dee6:	ds jrcxz 0x44dea1
  44dee9:	std    
  44deea:	add    ebp,esp
  44deec:	call   0x55a5
  44def0:	xor    edi,edx
  44def2:	mov    r11b,BYTE PTR [r11-0x51f4a8fa]
  44def9:	(bad)  
  44defb:	(bad)  
  44defc:	je     0x44ded8
  44defe:	in     eax,0x4c
  44df00:	or     ch,bl
  44df02:	jp     0x44deb2
  44df04:	mov    edi,DWORD PTR [rdx+rsi*1+0x29]
  44df08:	(bad)  
  44df09:	(bad)  
  44df0a:	(bad)  
  44df0b:	ins    BYTE PTR es:[rdi],dx
  44df0c:	imul   ah
  44df0e:	loopne 0x44ded4
  44df10:	(bad)  
  44df11:	pop    rsi
  44df12:	mov    ebp,0x44b64808
  44df17:	mov    bh,BYTE PTR [rbp-0x6bdd8dff]
  44df1d:	int3   
  44df1e:	js     0x44df74
  44df20:	movabs al,ds:0xec6c2027a44fd222
  44df29:	(bad)  
  44df2a:	add    bh,bh
  44df2c:	rol    DWORD PTR [rcx],cl
  44df2e:	fisttp DWORD PTR [rbx]
  44df30:	out    0x8,ax
  44df33:	rex.RX mov sil,0x3f
  44df36:	pop    rbp
  44df37:	(bad)  
  44df38:	int3   
  44df39:	ficom  DWORD PTR [rip+0x5d9082fc]        # 0x5dd5623b
  44df3f:	xchg   ebp,edx
  44df41:	int3   
  44df42:	mov    ebp,0x34ff7f3
  44df47:	sbb    DWORD PTR [rax+rdx*4+0x2bc606ac],eax
  44df4e:	jrcxz  0x44df63
  44df50:	or     ebx,DWORD PTR [rcx]
  44df52:	adc    ecx,ebp
  44df54:	(bad)  
  44df56:	fmul   DWORD PTR [rcx]
  44df58:	add    esp,DWORD PTR [rdx]
  44df5a:	and    ch,ch
  44df5c:	rol    DWORD PTR [rbx],cl
  44df5e:	(bad)  
  44df5f:	imul   ecx,DWORD PTR [rax+rcx*2+0x22ab7c1],0xffffffa4
  44df67:	and    al,0xe3
  44df6a:	(bad)  
  44df6b:	push   rdx
  44df6c:	rcl    BYTE PTR [rsi-0x7bf39ab8],0x8a
  44df73:	call   0xffffffffe1cf8d6a
  44df78:	lods   eax,DWORD PTR ds:[rsi]
  44df79:	add    DWORD PTR [rdi-0x2b],ebx
  44df7c:	jl     0x44dff0
  44df7e:	sbb    BYTE PTR [rdi+0x2a],ch
  44df81:	or     eax,0xf64d72e3
  44df86:	rex.B (bad) 
  44df88:	(bad)  [rsi-0x2eeedcc8]
  44df8e:	es ds rex.W
  44df91:	rex.RXB sub r8b,r11b
  44df94:	js     0x44e00e
  44df96:	mov    esi,0xfe6f6758
  44df9b:	lock rex.WX adc al,0xf7
  44df9f:	mov    bh,0x6b
  44dfa1:	and    esi,eax
  44dfa3:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  44dfa4:	stos   BYTE PTR es:[rdi],al
  44dfa5:	mov    gs,WORD PTR [rbp-0x69]
  44dfa8:	add    eax,DWORD PTR [rdx+0x62]
  44dfab:	ins    BYTE PTR es:[rdi],dx
  44dfac:	ins    BYTE PTR es:[rdi],dx
  44dfad:	ret    
  44dfae:	push   rdi
  44dfaf:	pop    rsi
  44dfb0:	pop    rbp
  44dfb1:	xlat   BYTE PTR ds:[rbx]
  44dfb2:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  44dfb3:	setb   bl
  44dfb6:	fild   DWORD PTR [rbx]
  44dfb8:	mov    cl,0xc9
  44dfba:	add    r9b,BYTE PTR [eax]
  44dfbe:	sub    edi,edi
  44dfc0:	test   eax,0x20131e46
  44dfc5:	and    eax,ecx
  44dfc7:	adc    al,0x2f
  44dfc9:	loop   0x44dfb6
  44dfcb:	rol    BYTE PTR [rcx],cl
  44dfcd:	lahf   
  44dfce:	icebp  
  44dfcf:	or     ebp,DWORD PTR [rsi+0x61b5e528]
  44dfd5:	(bad)  
  44dfd6:	push   rdx
  44dfd7:	pop    rbx
  44dfd8:	pop    rbp
  44dfd9:	out    0x38,eax
  44dfdb:	and    DWORD PTR [rcx+0x33a09cc6],0xffffffcb
  44dfe2:	shl    DWORD PTR [rdx+0x20],0xb8
  44dfe6:	add    al,0x2c
  44dfe8:	adc    DWORD PTR [rdi],0x49
  44dfeb:	adc    DWORD PTR [rdi-0x21be83b2],esp
  44dff1:	xchg   edi,eax
  44dff2:	and    esi,ecx
  44dff4:	fmul   QWORD PTR [rsi-0x6b35c7eb]
  44dffa:	ficom  DWORD PTR [rdx+riz*4+0x3660fcf]
  44e001:	stos   BYTE PTR es:[rdi],al
  44e002:	xor    ecx,DWORD PTR [rcx+0x59766ae8]
  44e008:	fsub   QWORD PTR [rsi]
  44e00a:	fwait
  44e00b:	and    ebp,ebp
  44e00d:	jp     0x44dfd9
  44e00f:	xor    al,0xe9
  44e011:	mov    bl,0x8b
  44e013:	in     eax,0x1c
  44e015:	sub    BYTE PTR [rcx+0x2b0138e0],r12b
  44e01c:	adc    ebp,DWORD PTR [rax+0x5b]
  44e01f:	cmp    DWORD PTR [rax+0x354ffa50],ecx
  44e025:	add    eax,0x8b2bfe95
  44e02a:	int3   
  44e02b:	fild   DWORD PTR [rbx+rbx*1]
  44e02e:	adc    BYTE PTR [rdx],al
  44e030:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  44e031:	and    BYTE PTR [rbx],al
  44e033:	xor    ebx,esp
  44e035:	jb     0x44dff7
  44e037:	lock imul BYTE PTR [rbx+0x71467c04]
  44e03e:	mov    edi,0xff6f527f
  44e043:	dec    DWORD PTR [rbp-0x10]
  44e046:	or     DWORD PTR [rbx+riz*8],esi
  44e049:	jg     0x44e0ac
  44e04b:	adc    BYTE PTR [rax-0x72],0x17
  44e04f:	sub    BYTE PTR [rsi+0x430e33e1],0x4a
  44e056:	fstp   DWORD PTR [rsi-0x30]
  44e059:	ds cmp al,0xa0
  44e05c:	hlt    
  44e05d:	(bad)  
  44e05e:	and    DWORD PTR [rax-0x28],0xf540e5ff
  44e065:	and    DWORD PTR [rbx+0x9],ecx
  44e068:	ss fs push rcx
  44e06b:	cmp    DWORD PTR [rax],ecx
  44e06d:	add    al,0x41
  44e06f:	sub    eax,0xd6fa3908
  44e074:	add    DWORD PTR [rdx+0x5e],esp
  44e077:	(bad)  
  44e078:	mov    eax,0x1a43207f
  44e07d:	fisttp DWORD PTR [rax+rax*4-0x38]
  44e081:	scas   al,BYTE PTR es:[rdi]
  44e082:	lea    ecx,[rax-0x7c]
  44e085:	push   rsi
  44e086:	leave  
  44e087:	rex.WXB
  44e088:	sbb    rax,0x5f5c547
  44e08e:	and    DWORD PTR [rbx],ebp
  44e090:	add    ebp,DWORD PTR [rax-0x69b46f5a]
  44e096:	adc    esi,DWORD PTR [rsi+rcx*4-0x61]
  44e09a:	or     eax,0xd63105d8
  44e09f:	add    bl,cl
  44e0a1:	(bad)
  44e0a4:	rex.WB push 0xffffffffd5e43a65
  44e0aa:	sahf   
  44e0ab:	lock mov DWORD PTR ds:[rbx+0x1b],ebp
  44e0b0:	mov    ebx,0x678c826b
  44e0b5:	in     al,dx
  44e0b6:	mov    dl,0xe8
  44e0b8:	shl    BYTE PTR [rdi-0x45],1
  44e0bb:	repnz div DWORD PTR [rbx+0x3]
  44e0bf:	std    
  44e0c0:	cdq    
  44e0c1:	pcmpgtb mm2,QWORD PTR [rdi]
  44e0c4:	in     eax,dx
  44e0c5:	mov    edx,0x16458ab6
  44e0ca:	pop    rsp
  44e0cb:	or     DWORD PTR [rsi+0x36ab080e],ecx
  44e0d1:	add    al,0xba
  44e0d3:	adc    dh,0xce
  44e0d6:	mov    ch,0x2
  44e0d8:	div    BYTE PTR [rcx]
  44e0da:	cmp    DWORD PTR gs:[rsi],edi
  44e0dd:	nop
  44e0de:	in     eax,0x91
  44e0e0:	mov    gs,ebp
  44e0e2:	mov    ah,0xe3
  44e0e4:	push   rbp
  44e0e5:	xor    eax,0x89f81621
  44e0ea:	adc    BYTE PTR [rax],bh
  44e0ec:	jle    0x44e117
  44e0ee:	and    BYTE PTR [rdx],bl
  44e0f0:	retf   0xf663
  44e0f3:	and    BYTE PTR [rsi],ah
  44e0f5:	addr32 or ebp,esi
  44e0f8:	sbb    dl,BYTE PTR [rax+rbx*1+0x38a23722]
  44e0ff:	xchg   esi,eax
  44e100:	push   0xfffffffff1222c57
  44e105:	xor    eax,DWORD PTR [rbx]
  44e107:	(bad)  
  44e108:	pushf  
  44e109:	or     eax,esp
  44e10b:	xchg   esi,eax
  44e10c:	mov    al,BYTE PTR [rcx-0x5]
  44e10f:	add    al,0xf
  44e111:	jno    0x44e09c
  44e113:	lahf   
  44e114:	sub    al,BYTE PTR [rdi+0x39]
  44e117:	sub    ecx,DWORD PTR [rsi-0x78]
  44e11a:	adc    DWORD PTR [rdi+0x6521076a],ebx
  44e120:	jo     0x44e104
  44e122:	retf   0x4487
  44e125:	rex.RXB sbb al,0x3e
  44e128:	sub    esp,eax
  44e12a:	(bad)  
  44e12b:	in     eax,0x0
  44e12d:	mov    cl,0x9
  44e12f:	(bad)  
  44e130:	rex.WX
  44e131:	sbb    al,0x25
  44e134:	and    eax,DWORD PTR [rdx+0x4da83fb8]
  44e13a:	cmp    al,0x80
  44e13c:	in     eax,dx
  44e13d:	std    
  44e13e:	mov    WORD PTR [rcx-0x49],?
  44e141:	rex cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  44e143:	add    eax,0xc25100ab
  44e148:	xor    cl,BYTE PTR [rdx+0x41993a0e]
  44e14e:	or     eax,0xd191838e
  44e153:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  44e154:	sub    al,0x58
  44e156:	or     BYTE PTR [rax],bh
  44e158:	mov    esi,DWORD PTR [rcx+0x6c]
  44e15b:	sbb    ah,ch
  44e15d:	push   rsp
  44e15e:	popf   
  44e15f:	(bad)  
  44e160:	call   0x4cc0bace
  44e165:	sbb    DWORD PTR ds:[rbx+rbx*8-0x75],0xc43366f2
  44e16e:	and    eax,0x9f4f9404
  44e173:	adc    ebx,edx
  44e175:	(bad)  
  44e176:	imul   ecx,DWORD PTR [rdi+rax*2+0x272604bd],0xcac33031
  44e181:	enter  0xac15,0xe3
  44e185:	mul    BYTE PTR [rbp+0x1f]
  44e188:	loopne 0x44e1b2
  44e18a:	(bad)  
  44e18b:	and    eax,0xf1da0254
  44e190:	(bad)  
  44e191:	xchg   esi,eax
  44e192:	cmp    eax,0x96190465
  44e197:	jo     0x44e162
  44e199:	ss (bad) 
  44e19b:	movabs al,ds:0x8edf4f20256225ca
  44e1a4:	ja     0x44e174
  44e1a6:	sbb    DWORD PTR [rdx-0x65],ebx
  44e1a9:	test   BYTE PTR [rbp+0x1b],0x8f
  44e1ad:	imul   esi,DWORD PTR [rax-0x5c],0xfffffff2
  44e1b1:	push   rax
  44e1b2:	out    0x78,al
  44e1b4:	rex.WXB movabs al,ds:0x7aed7df0c4281334
  44e1be:	sti    
  44e1bf:	repz sub cl,BYTE PTR [rax+0x16]
  44e1c3:	sbb    ecx,0x76
  44e1c6:	(bad)  
  44e1c7:	mov    ch,0xe6
  44e1c9:	mov    bh,0x4b
  44e1cb:	add    al,0x44
  44e1cd:	xchg   esi,eax
  44e1ce:	adc    BYTE PTR [rax],bl
  44e1d0:	jrcxz  0x44e1b1
  44e1d2:	add    eax,0xcabdafb
  44e1d7:	imul   edi,DWORD PTR [rdi+0x2a0fa20c],0xffffff86
  44e1de:	cmp    eax,0x6fc06ac1
  44e1e3:	out    0xf,eax
  44e1e5:	hlt    
  44e1e6:	(bad)  
  44e1e7:	pop    rbx
  44e1e8:	shl    BYTE PTR [rdi-0xde4ac38],0x39
  44e1ef:	rex.WRX out 0x38,al
  44e1f2:	ss clc 
  44e1f4:	jmp    0x44e236
  44e1f6:	stc    
  44e1f7:	mov    bh,BYTE PTR [rax-0x4fd3664e]
  44e1fd:	mov    ebp,0xaeac6bb5
  44e202:	and    ebx,DWORD PTR [rsi+0x5e]
  44e205:	(bad)  
  44e206:	mov    esp,0xf627d022
  44e20b:	(bad)  
  44e20c:	cwde   
  44e20d:	(bad)  
  44e20e:	loopne 0x44e191
  44e210:	shl    DWORD PTR [rip+0x71916403],0xc5        # 0x71d6461a
  44e217:	xchg   esp,eax
  44e218:	rex.WR leave 
  44e21a:	(bad)  
  44e21b:	enter  0x6fe7,0x36
  44e21f:	adc    al,0x33
  44e221:	cld    
  44e222:	mov    bh,0x10
  44e224:	call   0x47cd7d68
  44e229:	xlat   BYTE PTR ds:[rbx]
  44e22a:	(bad)  
  44e22b:	fwait
  44e22c:	sti    
  44e22d:	fstp   TBYTE PTR [rcx-0x2]
  44e230:	ficom  WORD PTR [rdi]
  44e232:	test   al,0x24
  44e234:	mov    BYTE PTR [rdx],cl
  44e236:	fist   WORD PTR [rax]
  44e238:	movsxd edi,DWORD PTR [rsi-0x47bfad45]
  44e23e:	jl     0x44e26e
  44e240:	fcomp  DWORD PTR ds:[rax]
  44e243:	and    esi,0x9c89e203
  44e249:	rex.W (bad) 
  44e24b:	pop    rsp
  44e24c:	jl     0x44e2c5
  44e24e:	(bad)  
  44e24f:	and    BYTE PTR [rcx+0x402493b0],al
  44e255:	fsub   DWORD PTR [rbx+rbp*2+0x7d]
  44e259:	ja     0x44e209
  44e25b:	(bad)  
  44e25c:	adc    edi,DWORD PTR [rsi-0x37]
  44e25f:	shl    DWORD PTR [rbp+0x25fff8c],0x3e
  44e266:	and    DWORD PTR [rsi+rbx*2-0x660695f7],ebp
  44e26d:	inc    ebp
  44e26f:	add    DWORD PTR es:[rip+0xffffffffe045fa70],esp        # 0xffffffffe08adce6
  44e276:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  44e277:	(bad)
  44e27a:	(bad)  
  44e27b:	mov    gs,esp
  44e27d:	jae    0x44e26d
  44e27f:	loopne 0x44e223
  44e281:	add    edx,esi
  44e283:	fcmovnb st,st(4)
  44e285:	pop    rsp
  44e286:	adc    esi,edx
  44e288:	fist   WORD PTR [rdx-0x5f3cce2f]
  44e28e:	shl    BYTE PTR [rax+0x1503a893],cl
  44e294:	(bad)  
  44e295:	sbb    al,0x2
  44e297:	xchg   esi,eax
  44e298:	add    ebx,ecx
  44e29a:	jno    0x44e2a8
  44e29c:	xor    eax,0xa70da8de
  44e2a1:	push   rcx
  44e2a2:	enter  0x4cb,0x82
  44e2a6:	(bad)  
  44e2a7:	xor    esp,esp
  44e2a9:	stos   DWORD PTR es:[rdi],eax
  44e2aa:	movsxd edi,DWORD PTR [rax]
  44e2ac:	rex.WXB rcr r9b,1
  44e2af:	rex.WXB sub dil,BYTE PTR fs:[r8]
  44e2b3:	jmp    0xffffffffeeb7d034
  44e2b8:	sub    eax,DWORD PTR [rbx]
  44e2ba:	xchg   BYTE PTR [rbx+0x544063fd],dh
  44e2c0:	scas   al,BYTE PTR es:[rdi]
  44e2c1:	adc    ecx,DWORD PTR [rdx+riz*1+0x9]
  44e2c5:	xor    DWORD PTR [rbx],0x2e
  44e2c8:	sbb    bh,al
  44e2ca:	data16 sti 
  44e2cc:	and    eax,0x86426400
  44e2d1:	(bad)  
  44e2d2:	(bad)  
  44e2d3:	mov    BYTE PTR [rbp-0x4a8edfec],dh
  44e2d9:	jno    0x44e2a0
  44e2db:	mov    esp,0x69950d97
  44e2e0:	rex.W jl 0x44e2dc
  44e2e3:	rex.WRB mov r14b,0xef
  44e2e6:	cmp    al,0x99
  44e2e8:	rex.R mov al,0x9
  44e2eb:	pop    rsi
  44e2ec:	ss (bad) 
  44e2ee:	(bad)  
  44e2ef:	jrcxz  0x44e2af
  44e2f1:	and    DWORD PTR [rsi+0x7eb02f0c],edx
  44e2f7:	adc    al,0x8
  44e2f9:	rex.RX (bad) 
  44e2fb:	jno    0x44e28a
  44e2fd:	sbb    BYTE PTR [rip+0x191ed90],0xb1        # 0x1d6d094
  44e304:	adc    cl,BYTE PTR [rdx+rbx*8+0x13]
  44e308:	fcom   QWORD PTR [rdi+0x3a096d6a]
  44e30e:	rex.B stos BYTE PTR es:[rdi],al
  44e310:	push   0xffffffffffffff98
  44e312:	or     eax,0xa0612504
  44e317:	out    0xb2,al
  44e319:	sub    DWORD PTR [rdi-0x31a693f7],ebx
  44e31f:	(bad)  
  44e321:	cmp    BYTE PTR [rcx],ah
  44e323:	fcomp  st(7)
  44e325:	scas   al,BYTE PTR es:[rdi]
  44e326:	sub    ebx,ebp
  44e328:	(bad)  
  44e329:	(bad)  
  44e32a:	mov    DWORD PTR [rdx+rbp*4],0xec9c2508
  44e331:	and    DWORD PTR [rax-0x370df577],esi
  44e337:	(bad)  
  44e338:	(bad)
  44e33d:	xor    DWORD PTR [rbx+riz*1+0x3d7d2fd0],ebx
  44e344:	cmp    al,0x10
  44e346:	(bad)  
  44e347:	mov    ss,WORD PTR [rdi-0x2f]
  44e34a:	imul   edx,DWORD PTR [rbx-0x6a],0x1caa0025
  44e351:	movsxd esp,eax
  44e353:	rex.WRXB add r12b,BYTE PTR [r9]
  44e356:	push   rax
  44e357:	cmc    
  44e358:	jns    0x44e3c2
  44e35a:	xchg   DWORD PTR [rbx-0x1a],esi
  44e35d:	outs   dx,DWORD PTR ds:[rsi]
  44e35e:	rex.X
  44e35f:	lock fisttp WORD PTR [rip+0xfffffffff37b0612]        # 0xfffffffff3bfe978
  44e366:	mov    ebx,0xc8788eac
  44e36b:	jge    0x44e35a
  44e36d:	jbe    0x44e30d
  44e36f:	sub    al,BYTE PTR [rsi-0x7a]
  44e372:	push   rbp
  44e373:	xchg   ebp,eax
  44e374:	adc    dl,ah
  44e376:	fild   DWORD PTR [rip+0x621aa8c6]        # 0x625f8c42
  44e37c:	(bad)  
  44e37d:	(bad)  
  44e37e:	fcom   DWORD PTR [rcx]
  44e380:	mov    esp,0x8929503e
  44e385:	fld    DWORD PTR [rdi-0x4b]
  44e388:	jmp    0x44e375
  44e38a:	movabs ds:0x807f793e0daa7cc,eax
  44e393:	ret    
  44e394:	(bad)  
  44e395:	ins    BYTE PTR es:[rdi],dx
  44e396:	push   rsi
  44e397:	ss jbe 0x44e407
  44e39a:	leave  
  44e39b:	rex.X push rdx
  44e39d:	clc    
  44e39e:	push   rsp
  44e39f:	rex push 0xfffffffff195c5a6
  44e3a5:	(bad)  
  44e3a6:	and    eax,0xab6d6360
  44e3ab:	mov    WORD PTR [rsi],gs
  44e3ad:	mov    eax,0xed5f1ce
  44e3b2:	rcr    BYTE PTR [rbx],cl
  44e3b4:	mov    bl,0xf1
  44e3b6:	stos   BYTE PTR es:[rdi],al
  44e3b7:	ret    0xb7bc
  44e3ba:	imul   eax,DWORD PTR [rbx+0x51bc1e8d],0x73d9f20
  44e3c4:	push   rcx
  44e3c5:	jbe    0x44e34a
  44e3c7:	test   al,0xd
  44e3c9:	jrcxz  0x44e436
  44e3cb:	jrcxz  0x44e43d
  44e3cd:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  44e3ce:	out    0x14,al
  44e3d0:	fstp   DWORD PTR [rcx]
  44e3d2:	xchg   esp,eax
  44e3d3:	sub    al,BYTE PTR [rdx+0xe23aa85]
  44e3d9:	rex.RXB (bad) 
  44e3db:	adc    DWORD PTR [rbp+rsi*1+0x10],ebx
  44e3df:	cmp    al,0x14
  44e3e1:	jle    0x44e42f
  44e3e3:	xor    al,BYTE PTR [rcx+rdx*2-0x52]
  44e3e7:	jmp    0x44e409
  44e3e9:	movabs ds:0x996516437d50ec8,eax
  44e3f2:	sub    bl,BYTE PTR [rbx-0x21dd7b0e]
  44e3f8:	and    al,0xa8
  44e3fa:	jb     0x44e462
  44e3fc:	mov    ebp,0x71092071
  44e401:	push   rcx
  44e402:	pop    rsi
  44e403:	jno    0x44e3d7
  44e405:	jp     0x44e3ce
  44e407:	sub    al,ch
  44e409:	add    al,0xa9
  44e40b:	imul   esp,DWORD PTR [rax],0xffffffbb
  44e40e:	and    bl,bl
  44e410:	sbb    eax,0xe749d150
  44e415:	or     DWORD PTR [rax+0x65e3b52f],ebx
  44e41b:	xchg   BYTE PTR [rcx+0x4],cl
  44e41e:	je     0x44e3be
  44e420:	or     al,BYTE PTR [rcx+0x0]
  44e423:	(bad)  
  44e424:	(bad)  
  44e425:	jo     0x44e41f
  44e427:	push   0x20
  44e429:	and    ecx,ecx
  44e42b:	lods   al,BYTE PTR ds:[rsi]
  44e42c:	jmp    0x44e423
  44e42e:	out    0xb2,eax
  44e430:	stc    
  44e431:	pushf  
  44e432:	sub    BYTE PTR [rax],bh
  44e434:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  44e435:	add    al,0x44
  44e437:	adc    dh,bl
  44e439:	mov    dh,0xf5
  44e43b:	(bad)  
  44e43c:	shl    BYTE PTR [rcx],1
  44e43e:	not    BYTE PTR [rcx-0x53]
  44e441:	cmp    eax,0xb8015fd
  44e446:	and    DWORD PTR [rax],0xf0204d7e
  44e44c:	sbb    al,0x83
  44e44e:	sbb    dl,bh
  44e450:	movabs al,ds:0x9b49cbc97d6bd7cf
  44e459:	lods   al,BYTE PTR ds:[rsi]
  44e45a:	xchg   DWORD PTR [rax-0x38],eax
  44e45d:	and    al,0xf0
  44e45f:	or     DWORD PTR [rbx],esp
  44e461:	(bad)  
  44e462:	and    ecx,DWORD PTR [rcx]
  44e464:	pop    rbx
  44e465:	lahf   
  44e466:	(bad)  
  44e467:	sbb    dh,dh
  44e469:	adc    ebp,DWORD PTR [rcx]
  44e46b:	cmc    
  44e46c:	rex.WB adc BYTE PTR [r11],dil
  44e46f:	rex.WRXB mov r8b,0xcb
  44e472:	mov    dl,0xc4
  44e474:	imul   esp,DWORD PTR [rdi+0x40],0xfffffff4
  44e478:	in     al,dx
  44e479:	adc    ecx,DWORD PTR [rbx]
  44e47b:	add    al,0xf3
  44e47d:	and    ch,BYTE PTR [rbp-0x1]
  44e480:	icebp  
  44e481:	jns    0x44e4a8
  44e483:	sbb    dl,bh
  44e485:	sub    BYTE PTR [rax],bh
  44e487:	(bad)
  44e48a:	retf   0x8284
  44e48d:	pop    rbx
  44e48e:	(bad)
  44e491:	pop    rbp
  44e492:	jmp    0x44e450
  44e494:	cmp    esi,0xcf4a8c20
  44e49a:	xchg   esp,eax
  44e49b:	(bad)  
  44e49c:	stos   DWORD PTR es:[rdi],eax
  44e49d:	cwde   
  44e49e:	xchg   ebx,eax
  44e49f:	test   esp,eax
  44e4a1:	mov    dh,bh
  44e4a3:	rex.WRXB or r13b,BYTE PTR [r14+0x802a819]
  44e4aa:	(bad)  
  44e4ab:	cmp    r15,QWORD PTR [rdi+0x76a17bfa]
  44e4b2:	mov    WORD PTR [rbx+rbp*4],gs
  44e4b5:	and    bh,BYTE PTR [rax]
  44e4b7:	ss (bad) 
  44e4b9:	xchg   edi,eax
  44e4ba:	movabs eax,ds:0x20dea891590f25ed
  44e4c3:	adc    bh,ch
  44e4c5:	ins    BYTE PTR es:[rdi],dx
  44e4c6:	repnz rol DWORD PTR [rax+0x55],1
  44e4ca:	(bad)  
  44e4cb:	rex.XB and BYTE PTR [r13-0x77],dl
  44e4cf:	jno    0x44e45c
  44e4d1:	lea    edi,[rbp-0x3f]
  44e4d4:	xchg   ebp,eax
  44e4d5:	or     DWORD PTR [rbp+0x207ea932],0x2b
  44e4dc:	jg     0x44e4fe
  44e4de:	sahf   
  44e4df:	jno    0x44e50b
  44e4e1:	movabs ds:0x9b47d27d7bec7a91,eax
  44e4ea:	cwde   
  44e4eb:	in     eax,0x3
  44e4ed:	xlat   BYTE PTR ds:[rbx]
  44e4ee:	mov    ch,0xa9
  44e4f0:	rex.WX
  44e4f1:	fs in  eax,0x93
  44e4f4:	(bad)  
  44e4f5:	cdq    
  44e4f6:	adc    al,0x34
  44e4f8:	out    0xca,eax
  44e4fa:	(bad)  
  44e4fb:	out    0x5e,al
  44e4fd:	(bad)  
  44e4fe:	push   rsp
  44e4ff:	(bad)  
  44e500:	ins    DWORD PTR es:[rdi],dx
  44e501:	rex.WRX
  44e502:	rex.RX
  44e503:	rex.WRX cmc 
  44e505:	stc    
  44e506:	(bad)  
  44e507:	add    DWORD PTR [rbx+0x320e04da],eax
  44e50d:	xor    BYTE PTR [rdi+riz*2],bl
  44e510:	sub    eax,0x99c64804
  44e515:	or     al,0xa4
  44e517:	or     al,0xfc
  44e519:	sti    
  44e51a:	movabs al,ds:0x2cac8c04af7f1dca
  44e523:	(bad)  
  44e524:	add    BYTE PTR [rdi+rdx*4+0x42],dl
  44e528:	ds es rex
  44e52b:	cs (bad) 
  44e52d:	stc    
  44e52e:	push   rax
  44e52f:	lock test BYTE PTR [rax+0x37ecd9a2],al
  44e536:	movabs al,ds:0xf867048dc94a069b
  44e53f:	mov    ecx,0x185c4d4c
  44e544:	pop    rbp
  44e545:	out    0x12,al
  44e547:	hlt    
  44e548:	ret    
  44e549:	iret   
  44e54a:	xchg   ebp,eax
  44e54b:	and    eax,0xb804088f
  44e550:	rex.WRB (bad) 
  44e552:	jno    0x44e541
  44e554:	sbb    eax,0x120ebc9b
  44e559:	push   rax
  44e55a:	outs   dx,DWORD PTR ds:[rsi]
  44e55b:	and    eax,0x940b8713
  44e560:	push   0xffffffffffffff9f
  44e562:	push   rax
  44e563:	jno    0x44e4f7
  44e565:	in     al,dx
  44e566:	and    BYTE PTR [rbx],ah
  44e568:	sub    bh,BYTE PTR [rdi-0x6a666cca]
  44e56e:	out    dx,al
  44e56f:	(bad)  
  44e570:	mov    WORD PTR [rax-0x56],?
  44e573:	jl     0x44e54b
  44e575:	add    al,BYTE PTR [rcx]
  44e577:	sub    al,0x60
  44e579:	sub    edx,DWORD PTR [rax+0x4cbde7f6]
  44e57f:	mov    DWORD PTR [rsi-0x6],0xa1b04b2e
  44e586:	in     al,dx
  44e587:	and    ah,0x6c
  44e58a:	sub    edi,eax
  44e58c:	add    ch,BYTE PTR [edx]
  44e58f:	int    0xf
  44e591:	fisub  DWORD PTR [rdx]
  44e593:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  44e594:	lahf   
  44e595:	or     eax,0x914902d8
  44e59a:	mov    eax,edi
  44e59c:	lock (bad) 
  44e59e:	xor    ah,BYTE PTR [rcx]
  44e5a0:	(bad)  
  44e5a1:	rcl    BYTE PTR [rsi],0xb8
  44e5a4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  44e5a5:	rex.B retf 0x4143
  44e5a9:	scas   eax,DWORD PTR es:[rdi]
  44e5aa:	or     bh,BYTE PTR [rbx+0x64f8207a]
  44e5b0:	rex.WRX add al,0x53
  44e5b3:	(bad)  
  44e5b4:	ds (bad) 
  44e5b6:	loopne 0x44e603
  44e5b8:	pop    rcx
  44e5b9:	xchg   ebx,eax
  44e5ba:	xor    BYTE PTR [rcx-0x5],ch
  44e5bd:	jle    0x44e540
  44e5bf:	and    BYTE PTR [rbx],ah
  44e5c1:	shl    dl,1
  44e5c3:	movsxd esi,DWORD PTR [rip+0x66e50360]        # 0x6729e929
  44e5c9:	fldenv [rsi+0x36]
  44e5cc:	out    dx,eax
  44e5cd:	lahf   
  44e5ce:	(bad)  
  44e5cf:	mov    BYTE PTR [rbp-0x7f6a7d9d],al
  44e5d5:	fild   WORD PTR [rcx-0x756dfa8]
  44e5db:	fist   DWORD PTR [rdi]
  44e5dd:	mov    BYTE PTR [rdi],bl
  44e5df:	jge    0x44e626
  44e5e1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  44e5e2:	iret   
  44e5e3:	(bad)  
  44e5e4:	sub    dh,BYTE PTR [rdi+riz*2-0x113a05fa]
  44e5eb:	sti    
  44e5ec:	add    esi,DWORD PTR [rsi]
  44e5ee:	nop
  44e5ef:	popf   
  44e5f0:	(bad)  
  44e5f1:	(bad)  
  44e5f2:	sbb    eax,DWORD PTR [rdi]
  44e5f4:	(bad)  
  44e5f5:	(bad)  
  44e5f6:	mov    cl,0x54
  44e5f8:	and    ah,ch
  44e5fa:	xchg   r12,rax
  44e5fc:	stc    
  44e5fd:	rex.WB push r14
  44e600:	(bad)  
  44e601:	or     BYTE PTR [rdx],bh
  44e603:	sahf   
  44e604:	(bad)  
  44e605:	ins    DWORD PTR es:[rdi],dx
  44e606:	retf   
  44e607:	mov    esi,0xce9205c7
  44e60c:	cmp    eax,0x4e203602
  44e611:	rex int3 
  44e613:	sub    ebp,DWORD PTR [rcx-0x4f]
  44e616:	scas   eax,DWORD PTR es:[rdi]
  44e617:	rex.R jrcxz 0x44e614
  44e61a:	cli    
  44e61b:	and    dh,BYTE PTR [rsi]
  44e61d:	mov    ch,0xc9
  44e61f:	(bad)  
  44e620:	ins    BYTE PTR es:[rdi],dx
  44e621:	lods   eax,DWORD PTR ds:[rsi]
  44e622:	ins    DWORD PTR es:[rdi],dx
  44e623:	xlat   BYTE PTR ds:[rbx]
  44e624:	push   rbp
  44e625:	xor    DWORD PTR [rbx+rdx*4-0x7427306c],ecx
  44e62c:	out    dx,eax
  44e62d:	mov    esp,0x11feabea
  44e632:	ja     0x44e621
  44e634:	fld    st(4)
  44e636:	sub    dh,BYTE PTR [rcx-0x70]
  44e639:	jno    0x44e6a8
  44e63b:	scas   al,BYTE PTR es:[rdi]
  44e63c:	icebp  
  44e63d:	mov    edi,0xe232d92a
  44e642:	rex.WR
  44e643:	ds cwde 
  44e645:	or     edx,DWORD PTR [rax+rdx*1+0x4636b9d4]
  44e64c:	push   rsp
  44e64d:	rex.WRX or al,r8b
  44e650:	(bad)  
  44e651:	mov    al,0x2b
  44e653:	xchg   DWORD PTR [rsi-0x17edf124],edi
  44e659:	(bad)  
  44e65a:	(bad)  
  44e65b:	jle    0x44e5eb
  44e65d:	pop    rsp
  44e65e:	(bad)  
  44e65f:	out    dx,al
  44e660:	ret    0x6501
  44e663:	sar    DWORD PTR [rcx],1
  44e665:	(bad)  
  44e666:	jle    0x44e6e0
  44e668:	rcr    BYTE PTR [rcx+0x4b],0x1
  44e66c:	xchg   DWORD PTR [rcx],esp
  44e66e:	adc    al,0x25
  44e670:	movabs eax,ds:0xaa41370fc29854cc
  44e679:	sbb    al,0xe2
  44e67b:	rex.W std 
  44e67d:	push   rax
  44e67e:	scas   al,BYTE PTR es:[rdi]
  44e67f:	fnsave [rcx]
  44e681:	mov    eax,0x202bb045
  44e686:	sbb    BYTE PTR [rdx+rsi*8+0x12],dl
  44e68a:	add    edx,eax
  44e68c:	pushf  
  44e68d:	cmp    ebx,DWORD PTR [rax-0x3f42fbf7]
  44e693:	(bad)  
  44e694:	adc    ch,bh
  44e696:	mov    dl,0x5f
  44e698:	xor    eax,0x51826c60
  44e69d:	(bad)  
  44e69e:	xor    edi,ebp
  44e6a0:	adc    DWORD PTR [rsi+rsi*8+0x2b4cbe71],ebp
  44e6a7:	xor    BYTE PTR [rdi-0x72],cl
  44e6aa:	sub    BYTE PTR [rbx+rax*4],cl
  44e6ad:	push   rax
  44e6ae:	loopne 0x44e678
  44e6b0:	add    BYTE PTR [rdi+rcx*2-0x7c707378],cl
  44e6b7:	adc    esi,esi
  44e6b9:	imul   eax,ecx,0xc13ce0ce
  44e6bf:	vandnps xmm8,xmm15,xmm4
  44e6c3:	ins    BYTE PTR es:[rdi],dx
  44e6c4:	jo     0x44e6b9
  44e6c6:	and    BYTE PTR [rbx+0x2f281fef],0x65
  44e6cd:	sidt   [rcx+0x52fde0e0]
  44e6d4:	lock in eax,dx
  44e6d6:	rol    BYTE PTR [rsi-0x445ac948],0x7d
  44e6dd:	rex.RXB (bad) 
  44e6df:	rex.WX push 0xffffffffffffff84
  44e6e2:	movsxd edi,DWORD PTR [rdi+0x14da22ca]
  44e6e8:	in     al,0xfa
  44e6ea:	movabs eax,ds:0xeb23e75b1283db8f
  44e6f3:	(bad)  
  44e6f4:	(bad)  
  44e6f5:	rex.W (bad) 
  44e6f7:	xor    esp,DWORD PTR [rdx]
  44e6f9:	xor    eax,0xbe882322
  44e6fe:	cmp    DWORD PTR [rdi+0x3b47f8cf],eax
  44e704:	mov    ss,WORD PTR [rdi]
  44e706:	mov    eax,0xca71da84
  44e70b:	mov    edi,0x731036bb
  44e710:	cdq    
  44e711:	(bad)  
  44e712:	mov    cl,0xd9
  44e714:	fcomp  QWORD PTR [rax+0x7ddad25e]
  44e71a:	jl     0x44e787
  44e71c:	adc    esi,DWORD PTR [rcx]
  44e71e:	add    eax,0xae3cacb6
  44e723:	pop    rsi
  44e724:	clc    
  44e725:	enter  0xaf39,0xe
  44e729:	fsubr  DWORD PTR [rdx-0xdb033ce]
  44e72f:	sahf   
  44e730:	adc    BYTE PTR [rdx+0x18],cl
  44e733:	test   BYTE PTR [rdx-0x5ef416c0],al
  44e739:	xlat   BYTE PTR ds:[rbx]
  44e73a:	(bad)  
  44e73b:	test   BYTE PTR [rax],ah
  44e73d:	(bad)  
  44e73e:	loop   0x44e6d0
  44e740:	pop    rax
  44e741:	sub    DWORD PTR [rbx-0x7703f889],ecx
  44e747:	adc    al,0xc6
  44e749:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  44e74a:	add    bl,BYTE PTR [rcx+0x8]
  44e74d:	fcom   st(6)
  44e74f:	sbb    al,bh
  44e751:	fdivr  QWORD PTR [rcx-0x4f8d2cee]
  44e757:	adc    al,0x5c
  44e759:	mov    bh,0xed
  44e75b:	mov    ebx,0xf3f55e40
  44e760:	pop    rcx
  44e761:	shl    DWORD PTR [rbx+0x42727103],0x40
  44e768:	jo     0x44e728
  44e76a:	adc    eax,0x5dd904a8
  44e76f:	adc    eax,0x76dadc89
  44e774:	cld    
  44e775:	push   rcx
  44e776:	cmp    DWORD PTR [rax+0x34],0xe367e36
  44e77d:	in     eax,0xbb
  44e77f:	imul   ecx,DWORD PTR [rbx-0x43e4e042],0xed7e3036
  44e789:	mov    bl,BYTE PTR [rdi-0x1d]
  44e78c:	and    eax,0x5c76f86e
  44e791:	cmp    eax,DWORD PTR [rdi]
  44e793:	xlat   BYTE PTR ds:[rbx]
  44e794:	clc    
  44e795:	xchg   edi,eax
  44e796:	pop    rax
  44e797:	rex.WB push r12
  44e799:	xor    ch,BYTE PTR [rsi-0x187241]
  44e79f:	mov    DWORD PTR [rcx+0x3b],ecx
  44e7a2:	nop
  44e7a3:	rex.X loopne 0x44e77c
  44e7a6:	rex.RX fst DWORD PTR [rsi]
  44e7a9:	(bad)  
  44e7aa:	rex.WXB
  44e7ab:	rex.WRXB cmp r12b,BYTE PTR [r9-0x50]
  44e7af:	out    dx,eax
  44e7b0:	xchg   BYTE PTR [rcx+0x5f],bh
  44e7b3:	or     al,ah
  44e7b5:	jno    0x44e776
  44e7b7:	rex.WRX ror bl,0x76
  44e7bb:	ud2    
  44e7bd:	test   al,0xab
  44e7bf:	rex.WRB mov r14b,0xa5
  44e7c2:	lock pop rsi
  44e7c4:	test   eax,0xc9e9d28d
  44e7c9:	and    DWORD PTR [rax+0x40460c63],0x4086e572
  44e7d3:	xor    eax,0xa230c768
  44e7d8:	push   rdx
  44e7d9:	adc    BYTE PTR [rcx+0x8],ch
  44e7dc:	add    DWORD PTR [rbp-0x4fd7f1a6],eax
  44e7e2:	lods   al,BYTE PTR ds:[rsi]
  44e7e3:	and    BYTE PTR [rax-0x56dfeaa2],al
  44e7e9:	loopne 0x44e84e
  44e7eb:	xchg   esp,eax
  44e7ec:	pop    rdi
  44e7ed:	add    eax,0x805f6482
  44e7f2:	xor    BYTE PTR [rdx],al
  44e7f4:	icebp  
  44e7f5:	out    dx,al
  44e7f6:	adc    DWORD PTR [rdx+0x1275186],0xca0d64c1
  44e800:	retf   0x9c79
  44e803:	or     BYTE PTR [rdi],cl
  44e805:	or     BYTE PTR [rcx+rdx*8],al
  44e808:	jo     0x44e824
  44e80a:	rol    DWORD PTR [rcx],0x1f
  44e80d:	push   gs
  44e80f:	icebp  
  44e810:	push   rdx
  44e811:	rol    BYTE PTR [rcx],0xfa
  44e814:	rcr    dh,0x80
  44e817:	cwde   
  44e818:	mov    dl,0xa4
  44e81a:	mov    WORD PTR [rbp+rdi*1+0x7637106d],gs
  44e821:	xchg   ebp,eax
  44e822:	xchg   ebp,eax
  44e823:	mov    DWORD PTR [rax],ecx
  44e825:	xchg   ecx,eax
  44e826:	adc    ecx,esp
  44e828:	in     al,dx
  44e829:	and    esp,DWORD PTR [rax]
  44e82b:	rex
  44e82c:	and    BYTE PTR [rcx+0x6f791a12],dl
  44e833:	adc    eax,0xc6ccbdb0
  44e838:	cs xchg ebp,eax
  44e83a:	icebp  
  44e83b:	mov    DWORD PTR [rdx-0x31a13f54],ebx
  44e841:	(bad)  
  44e842:	and    al,ah
  44e844:	retf   
  44e845:	stc    
  44e846:	fisttp WORD PTR [rax+rbx*8]
  44e849:	push   rdx
  44e84a:	jne    0x44e7f0
  44e84c:	fidivr DWORD PTR [rax]
  44e84e:	cmp    al,0x20
  44e850:	add    dh,0x80
  44e853:	and    dh,al
  44e855:	jle    0x44e7f0
  44e857:	adc    BYTE PTR [rdi+0x15],dl
  44e85b:	mov    ah,0x3f
  44e85d:	out    dx,eax
  44e85e:	push   QWORD PTR [rdx]
  44e860:	and    BYTE PTR [rsi-0x686ff111],bh
  44e866:	and    BYTE PTR [rdx-0x4e25ad4a],bh
  44e86c:	test   ah,al
  44e86e:	fistp  QWORD PTR [rbx]
  44e870:	add    bl,BYTE PTR [rcx-0x64]
  44e873:	call   0x1276839a
  44e878:	add    ah,BYTE PTR [rdi+rsi*1]
  44e87b:	data16 loop 0x44e8ee
  44e87e:	mov    dh,0xe0
  44e880:	sub    al,cl
  44e882:	int    0x2
  44e884:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  44e885:	(bad)  
  44e886:	rex.XB scas al,BYTE PTR es:[rdi]
  44e888:	and    eax,0x8c8d2011
  44e88d:	jrcxz  0x44e8fe
  44e88f:	out    dx,eax
  44e890:	gs pop rcx
  44e892:	and    edi,DWORD PTR ss:[rdx-0x26]
  44e896:	(bad)  
  44e897:	mov    dh,0x8f
  44e899:	add    al,0x62
  44e89b:	rex.XB push r14
  44e89d:	and    ebp,eax
  44e89f:	cli    
  44e8a0:	mov    cs,WORD PTR [rax]
  44e8a2:	rex.RXB mov r14b,0x63
  44e8a5:	or     BYTE PTR [rdx-0x1baced95],al
  44e8ab:	(bad)  
  44e8ac:	(bad)  
  44e8ad:	or     BYTE PTR [rsi-0x144c0fec],bh
  44e8b3:	mov    cl,BYTE PTR [rbx]
  44e8b5:	mov    cl,0xa2
  44e8b7:	ret    0x5a20
  44e8ba:	stos   BYTE PTR es:[rdi],al
  44e8bb:	adc    al,0x9f
  44e8bd:	mov    bl,0x2b
  44e8bf:	fwait
  44e8c0:	add    edx,esp
  44e8c2:	rex.WX sub dl,dil
  44e8c5:	shl    BYTE PTR [rdi],0x15
  44e8c8:	out    0x32,eax
  44e8ca:	cmp    bl,BYTE PTR [rbx]
  44e8cc:	adc    BYTE PTR [rdi],dh
  44e8ce:	jbe    0x44e904
  44e8d0:	xchg   esi,eax
  44e8d1:	and    DWORD PTR [rdi],eax
  44e8d3:	mov    dh,0xe5
  44e8d5:	outs   dx,DWORD PTR ds:[rsi]
  44e8d6:	or     edi,ebp
  44e8d8:	cmp    al,BYTE PTR [rcx]
  44e8da:	movabs eax,ds:0xb10fd01891b0ed50
  44e8e3:	mov    edx,0x12941012
  44e8e8:	sub    eax,DWORD PTR [rbp+rdx*1-0x61]
  44e8ec:	xchg   ebp,eax
  44e8ed:	imul   edx,DWORD PTR [rbp+0x7],0x215c1b3
  44e8f4:	ss and eax,0x74ef84fc
  44e8fa:	cs and al,0x80
  44e8fd:	cmp    DWORD PTR [rbx+rax*8+0x32],edx
  44e901:	xlat   BYTE PTR ds:[rbx]
  44e902:	leave  
  44e903:	and    DWORD PTR [rax+0x6d3608c],esp
  44e909:	jrcxz  0x44e978
  44e90b:	out    0x5c,al
  44e90d:	in     eax,0x9
  44e90f:	xchg   ebp,eax
  44e910:	movabs ds:0x8306ca50c6cc54ca,eax
  44e919:	(bad)  
  44e91a:	outs   dx,DWORD PTR ds:[rsi]
  44e91b:	rex sub eax,0x5d80400d
  44e921:	ss nop
  44e923:	shl    DWORD PTR [rbp-0x8],0x5c
  44e927:	add    eax,0xa57064bc
  44e92d:	add    BYTE PTR [rbx],0x67
  44e930:	add    ecx,DWORD PTR [rdx]
  44e932:	rex.RX ins DWORD PTR es:[rdi],dx
  44e934:	xchg   ebp,eax
  44e935:	(bad)  
  44e936:	mov    BYTE PTR [rdi],ah
  44e938:	mov    eax,0xd6750904
  44e93d:	rex.RXB shl DWORD PTR [r11],0x70
  44e941:	imul   esp,DWORD PTR [rbx],0xc
  44e944:	out    0x71,al
  44e946:	rex.WXB in eax,dx
  44e948:	jae    0x44e921
  44e94a:	(bad)  
  44e94b:	lahf   
  44e94c:	xchg   r8,rax
  44e94e:	cdq    
  44e94f:	and    BYTE PTR [rdx+0xa],0x3a
  44e953:	in     eax,dx
  44e954:	push   rcx
  44e955:	push   rsi
  44e956:	rex.B (bad) 
  44e958:	cmp    al,ah
  44e95a:	sub    DWORD PTR [r13-0x1d],esp
  44e95e:	loopne 0x44e95d
  44e960:	add    DWORD PTR [rdx+0x21],esp
  44e963:	mov    BYTE PTR [rax],al
  44e965:	push   rbp
  44e966:	scas   al,BYTE PTR es:[rdi]
  44e967:	jno    0x44e99b
  44e969:	(bad)  
  44e96a:	retf   0x1c8e
  44e96d:	sub    dh,BYTE PTR [rbx]
  44e96f:	push   rsi
  44e970:	xor    eax,0x7199b630
  44e975:	retf   0x210
  44e978:	push   rsi
  44e979:	adc    BYTE PTR [rdi],ch
  44e97b:	add    al,0x33
  44e97d:	and    ebx,0x8b8c088e
  44e983:	push   0xffffffff90613fe9
  44e988:	jmp    0x1daa41b8
  44e98d:	xlat   BYTE PTR ds:[rbx]
  44e98e:	push   rbp
  44e98f:	popf   
  44e990:	call   0x23a54484
  44e995:	pop    rax
  44e996:	scas   eax,DWORD PTR es:[rdi]
  44e997:	or     al,0x10
  44e999:	call   0x2097aab7
  44e99e:	cwde   
  44e99f:	push   rdi
  44e9a0:	add    dh,dh
  44e9a2:	and    eax,0x62f3b2d2
  44e9a7:	lock fsubrp st(0),st
  44e9aa:	test   BYTE PTR [rax-0x3a],al
  44e9ad:	mov    bl,0x29
  44e9af:	lea    edx,[rdi-0x24b0a6fd]
  44e9b5:	rex.W jge 0x44e999
  44e9b8:	adc    al,0x10
  44e9bb:	push   rbx
  44e9bc:	loop   0x44e9e0
  44e9be:	test   al,0xf4
  44e9c0:	iret   
  44e9c1:	addr32 lahf 
  44e9c3:	(bad)  
  44e9c4:	clc    
  44e9c5:	xchg   ebx,eax
  44e9c6:	and    bl,bl
  44e9c8:	(bad)  
  44e9c9:	fbstp  TBYTE PTR [rdx-0x74eeadf4]
  44e9cf:	adc    al,BYTE PTR [rdi]
  44e9d1:	and    ah,BYTE PTR [rdi+rbx*8+0x6042474a]
  44e9d8:	cmp    al,0xae
  44e9da:	loope  0x44ea4f
  44e9dc:	sbb    DWORD PTR [rbx+0x6],edx
  44e9df:	and    bh,BYTE PTR [rsi+0x62]
  44e9e2:	mov    ebx,DWORD PTR [rbp-0x13]
  44e9e5:	(bad)  
  44e9e6:	movabs ds:0x10245c136fd82f6c,eax
  44e9ef:	add    ecx,DWORD PTR [rax]
  44e9f1:	sub    eax,0xc812efa8
  44e9f6:	outs   dx,BYTE PTR ds:[rsi]
  44e9f7:	xor    bl,bl
  44e9f9:	cmc    
  44e9fa:	fidiv  DWORD PTR [rip+0xffffffff9c3eab09]        # 0xffffffff9c839509
  44ea00:	sub    eax,esp
  44ea02:	or     ebx,DWORD PTR [rcx+0x1c88cf91]
  44ea08:	rcl    BYTE PTR [rdx],cl
  44ea0a:	sbb    bl,bl
  44ea0c:	pop    rdx
  44ea0d:	imul   edx,DWORD PTR [rdi+0x280db250],0xffffffad
  44ea14:	and    eax,0xc69ed712
  44ea19:	or     eax,0xda2023b6
  44ea1e:	and    ecx,esi
  44ea20:	(bad)  
  44ea21:	ins    DWORD PTR es:[rdi],dx
  44ea22:	xlat   BYTE PTR ds:[rbx]
  44ea23:	fisttp DWORD PTR [rax-0x21d003f5]
  44ea29:	pop    rbp
  44ea2a:	pop    rdi
  44ea2b:	imul   edi,DWORD PTR [rsp+rcx*8],0x5e23fab2
  44ea32:	stc    
  44ea33:	xchg   edi,eax
  44ea34:	lock mov edx,0x2e39e13e
  44ea3a:	adc    bl,cl
  44ea3c:	iret   
  44ea3d:	xlat   BYTE PTR ds:[rbx]
  44ea3e:	mov    eax,0x2893256c
  44ea43:	(bad)  
  44ea44:	add    eax,0x793639d7
  44ea49:	(bad)  
  44ea4a:	out    0x32,eax
  44ea4c:	xchg   BYTE PTR [rbp*2-0x3bad3fcd],cl
  44ea53:	rex.WB popf 
  44ea55:	ss rex cdq 
  44ea58:	rex.WRB xor r14b,r10b
  44ea5b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  44ea5c:	rex.XB (bad) 
  44ea5e:	(bad)  
  44ea5f:	cli    
  44ea60:	(bad)  
  44ea61:	iret   
  44ea62:	rex.B
  44ea63:	rex.WX (bad) 
  44ea65:	rex.R pop rsi
  44ea67:	in     eax,0x92
  44ea69:	jmp    0x44ead7
  44ea6b:	fs mov cl,dh
  44ea6e:	out    0xdb,eax
  44ea70:	jae    0x44ea00
  44ea72:	rex pop rbp
  44ea74:	or     edx,DWORD PTR [rax]
  44ea76:	(bad)  
  44ea77:	or     BYTE PTR [rdi+0x40b5040a],0x80
  44ea7e:	out    0xb7,eax
  44ea80:	jbe    0x44ead1
  44ea82:	xchg   ebx,eax
  44ea83:	push   rdi
  44ea84:	(bad)  
  44ea85:	pop    rbp
  44ea86:	jle    0xffffffffbdc848a5
  44ea8c:	fs and cl,al
  44ea8f:	cmc    
  44ea90:	(bad)
  44ea93:	adc    ebx,edx
  44ea95:	xor    eax,0xcb52935c
  44ea9a:	retf   0xed9b
  44ea9d:	mov    bh,0xfe
  44ea9f:	ds mov bh,0xf5
  44eaa2:	mov    esi,DWORD PTR [rbx]
  44eaa4:	(bad)  
  44eaa5:	sbb    BYTE PTR [rcx+rbp*8+0x5b],dl
  44eaa9:	ins    DWORD PTR es:[rdi],dx
  44eaaa:	pushf  
  44eaab:	and    ebx,edi
  44eaad:	fs push rsi
  44eaaf:	pop    rcx
  44eab0:	push   rdx
  44eab1:	xchg   esi,eax
  44eab2:	adc    ah,ch
  44eab4:	sbb    al,0x8a
  44eab6:	push   rax
  44eab7:	enter  0x932e,0x20
  44eabb:	(bad)  
  44eabc:	vandnps ymm9,ymm5,ymm0
  44eac0:	rex.WX
  44eac1:	mov    DWORD PTR [rbp+0x56fe8b89],r11d
  44eac8:	jbe    0x44ea81
  44eaca:	pop    rdi
  44eacb:	rex.RX (bad) 
  44eacd:	(bad)  
  44eace:	(bad)  
  44eacf:	mov    ecx,0xb47c06d
  44ead4:	sar    esi,0x80
  44ead7:	(bad)  
  44ead8:	cmc    
  44ead9:	out    0x85,eax
  44eadb:	sub    DWORD PTR [rdx],0x158a5043
  44eae1:	(bad)  
  44eae2:	ds (bad) 
  44eae4:	fcomp  DWORD PTR [rsi]
  44eae6:	lock or eax,ecx
  44eae9:	xchg   esi,eax
  44eaea:	sub    eax,0x26811265
  44eaef:	fwait
  44eaf0:	cmp    BYTE PTR [rdi-0x6a],cl
  44eaf3:	rex.B
  44eaf4:	es cdq 
  44eaf6:	pop    rsp
  44eaf7:	push   rbp
  44eaf8:	shr    BYTE PTR [rsi],0xc8
  44eafb:	mov    WORD PTR [rax-0x7c],?
  44eafe:	xchg   eax,esp
  44eb00:	call   0xffffffff8965d6c0
  44eb05:	int3   
  44eb06:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  44eb07:	lahf   
  44eb08:	mov    BYTE PTR [rdx-0x79a43b40],0xd2
  44eb0f:	xchg   esi,eax
  44eb10:	jmp    0x44eadc
  44eb12:	mov    BYTE PTR [rsi+0x360081fd],dh
  44eb18:	rex.WRX
  44eb19:	rex.RXB fisub WORD PTR ss:[r9-0x306d3a73]
  44eb21:	ins    BYTE PTR es:[rdi],dx
  44eb22:	cli    
  44eb23:	jb     0x44eabb
  44eb25:	shl    edi,0xc8
  44eb28:	and    bh,BYTE PTR [rsi+0x6cefa31d]
  44eb2e:	movabs al,ds:0x1a7e0dd8dc44c62f
  44eb37:	cld    
  44eb38:	sub    BYTE PTR [rax],ah
  44eb3a:	pop    rsi
  44eb3b:	scas   al,BYTE PTR es:[rdi]
  44eb3c:	pop    rbp
  44eb3d:	push   rbp
  44eb3e:	int3   
  44eb3f:	jp     0x44eaff
  44eb41:	xchg   esp,eax
  44eb42:	rex.WR mov BYTE PTR [rcx+rdx*8],r8b
  44eb46:	stc    
  44eb47:	rol    DWORD PTR [rax-0x2b8e62d8],cl
  44eb4d:	mov    bh,0xe1
  44eb4f:	stc    
  44eb50:	mov    eax,0x975d2626
  44eb55:	movd   esp,mm3
  44eb58:	ficom  WORD PTR [rbx]
  44eb5a:	sub    al,BYTE PTR [rdx-0x609cdd5e]
  44eb60:	(bad)  
  44eb61:	or     DWORD PTR [rsp-0x25],edx
  44eb65:	add    eax,DWORD PTR [rdx]
  44eb67:	sub    DWORD PTR [rbx-0x73bcaca1],eax
  44eb6d:	mov    al,0x2f
  44eb6f:	(bad)  
  44eb70:	or     rax,0x486a0e51
  44eb76:	cdq    
  44eb77:	sub    DWORD PTR [rax-0x35073994],ebp
  44eb7d:	movabs eax,ds:0x95b64016ce20449
  44eb86:	xchg   BYTE PTR [rcx],al
  44eb88:	ds xchg ebx,eax
  44eb8a:	mov    edi,0x467014ef
  44eb8f:	ins    DWORD PTR es:[rdi],dx
  44eb90:	sar    BYTE PTR [rdi],cl
  44eb92:	sub    DWORD PTR [rdi+0xf],0xffffffd6
  44eb96:	xor    eax,DWORD PTR [rsi*8+0x15e44064]
  44eb9d:	cmp    al,0x9b
  44eb9f:	and    DWORD PTR [rax-0x51f23202],eax
  44eba5:	test   DWORD PTR [rbx+0x40263fbc],0x8bf9e1b2
  44ebaf:	stc    
  44ebb0:	fwait
  44ebb1:	push   rbx
  44ebb2:	adc    rsi,r13
  44ebb5:	mov    ebx,0x8f9db6c9
  44ebba:	rex.W add dl,BYTE PTR [rbp+0x56]
  44ebbe:	mov    cl,0xb1
  44ebc0:	xchg   edi,eax
  44ebc1:	ins    BYTE PTR es:[rdi],dx
  44ebc2:	(bad)  
  44ebc3:	push   rax
  44ebc4:	ret    
  44ebc5:	not    BYTE PTR [rcx]
  44ebc7:	jmp    0x44ec04
  44ebc9:	rcr    DWORD PTR [rdx+0x20],0x4b
  44ebcd:	lods   al,BYTE PTR ds:[rsi]
  44ebce:	xlat   BYTE PTR ds:[rbx]
  44ebcf:	test   ebx,0x705239f2
  44ebd5:	and    bl,bl
  44ebd7:	test   al,0x1a
  44ebd9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  44ebda:	gs movsxd ebp,ebp
  44ebdd:	enter  0xca76,0xc6
  44ebe1:	(bad)  
  44ebe2:	add    al,0xca
  44ebe4:	in     eax,0x13
  44ebe6:	add    bl,cl
  44ebe8:	or     ecx,ebx
  44ebea:	imul   esi,DWORD PTR gs:[rsi],0xa2255d73
  44ebf1:	std    
  44ebf2:	jl     0x44ec1d
  44ebf4:	fcmovne st,st(2)
  44ebf6:	pushf  
  44ebf7:	cld    
  44ebf8:	(bad)  
  44ebf9:	fistp  QWORD PTR [rdx+rdi*2-0x2f]
  44ebfd:	(bad)  
  44ebfe:	xchg   esi,eax
  44ebff:	sub    al,BYTE PTR [rdx]
  44ec01:	imul   ebx,DWORD PTR [rsi+0x16],0x44fba08
  44ec08:	mov    ebx,0x46435c1b
  44ec0d:	xchg   ebx,eax
  44ec0e:	push   rcx
  44ec0f:	sub    dl,BYTE PTR [rbx-0x36]
  44ec12:	add    BYTE PTR [rdx],ch
  44ec14:	adc    edx,DWORD PTR [rbx-0x70]
  44ec17:	pop    rbp
  44ec18:	cmp    DWORD PTR [rax-0x383797f0],0xc101cb1e
  44ec22:	xchg   edx,eax
  44ec23:	(bad)  
  44ec24:	sar    eax,0x5d
  44ec27:	jmp    0x44ec1d
  44ec29:	fld    DWORD PTR [r9-0x65]
  44ec2d:	cli    
  44ec2e:	rex.X pop rsp
  44ec30:	jle    0x44ec50
  44ec32:	test   al,0xac
  44ec34:	push   rsp
  44ec35:	jge    0x44ebe5
  44ec37:	(bad)  
  44ec38:	push   rsi
  44ec39:	or     BYTE PTR [rsp+rcx*8-0x7618871b],cl
  44ec40:	rex.WB jrcxz 0x44ebd5
  44ec43:	and    al,0xf6
  44ec45:	(bad)  
  44ec46:	sub    dh,BYTE PTR [rsi]
  44ec48:	ret    0x7320
  44ec4b:	mov    esi,0xa0437827
  44ec50:	mov    edx,0x2be819da
  44ec55:	and    DWORD PTR [rcx+0xc],esi
  44ec58:	and    bh,ch
  44ec5a:	jns    0x44ec1c
  44ec5c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  44ec5d:	mov    BYTE PTR [rbp+0x48],al
  44ec60:	fcom   DWORD PTR [rsi]
  44ec62:	nop
  44ec63:	xchg   esi,eax
  44ec64:	fsubr  st,st(4)
  44ec66:	or     DWORD PTR [rax],ecx
  44ec68:	(bad)  
  44ec69:	icebp  
  44ec6a:	rcl    DWORD PTR [rdi],0x2
  44ec6d:	jge    0x44ec90
  44ec6f:	(bad)  
  44ec70:	ss in  al,0xfd
  44ec73:	fs lock mov dh,0x40
  44ec77:	lahf   
  44ec78:	mov    al,cl
  44ec7a:	mov    ebp,0x60b9e403
  44ec7f:	movabs al,ds:0xb1ab89c916fb1c12
  44ec88:	mov    BYTE PTR [rip+0xfffffffff02635a2],bh        # 0xfffffffff06b2230
  44ec8e:	(bad)  
  44ec8f:	in     al,dx
  44ec90:	fcmovnbe st,st(7)
  44ec92:	scas   al,BYTE PTR es:[rdi]
  44ec93:	ret    
  44ec94:	(bad)  
  44ec95:	sub    dh,BYTE PTR [rbp+rdi*8-0x524d2dff]
  44ec9c:	ss mov ch,0xad
  44ec9f:	xor    al,0xf7
  44eca1:	(bad)  
  44eca2:	jno    0x44ec85
  44eca4:	lahf   
  44eca5:	sbb    edx,ebp
  44eca7:	cmc    
  44eca8:	sbb    al,0x70
  44ecaa:	test   eax,0x4a49940
  44ecaf:	shl    DWORD PTR [rcx],cl
  44ecb1:	and    DWORD PTR [rsi-0x6fdcf9c0],0xc
  44ecb8:	mov    BYTE PTR [rbx-0x50],al
  44ecbb:	fbld   TBYTE PTR [rdi-0x6c]
  44ecbe:	sub    BYTE PTR [rdx+0x33],0xc6
  44ecc2:	rex.WRB add r9b,r10b
  44ecc5:	and    esp,0x36640cbf
  44eccb:	in     eax,dx
  44eccc:	pop    rsp
  44eccd:	lods   eax,DWORD PTR ds:[rsi]
  44ecce:	pop    rbp
  44eccf:	push   rax
  44ecd0:	lock fcom DWORD PTR [rsp+rax*8+0x5d7abbce]
  44ecd8:	js     0x44ec6d
  44ecda:	scas   eax,DWORD PTR es:[rdi]
  44ecdb:	xchg   esp,eax
  44ecdc:	popf   
  44ecdd:	add    dh,BYTE PTR [rdx]
  44ecdf:	and    al,0x47
  44ece1:	and    r8,QWORD PTR [r8-0x375137c2]
  44ece8:	(bad)  
  44ece9:	sti    
  44ecea:	rex.WX mov al,0x10
  44eced:	pop    rsp
  44ecee:	(bad)  
  44ecef:	retf   0x3239
  44ecf2:	jmp    0x44ed66
  44ecf4:	sub    BYTE PTR [rdx+rax*1],0xff
  44ecf8:	jg     0x44ed06
  44ecfa:	xor    ah,ch
  44ecfc:	js     0x44ec97
  44ecfe:	push   rsp
  44ecff:	test   al,0x2
  44ed02:	mov    WORD PTR [rcx+0x40],ss
  44ed05:	or     cl,BYTE PTR [rbp+rsi*8+0x23fe6908]
  44ed0c:	retf   
  44ed0d:	leave  
  44ed0e:	push   0x77
  44ed10:	cwde   
  44ed11:	jo     0x44ecff
  44ed13:	(bad)  
  44ed14:	in     al,dx
  44ed15:	jnp    0x44ed74
  44ed17:	movabs al,ds:0x49c48dbc644d9224
  44ed20:	ror    cl,0x16
  44ed23:	rex.RXB add eax,0x701b2a88
  44ed29:	cmp    al,BYTE PTR [rcx+0x296d7f62]
  44ed2f:	out    dx,eax
  44ed30:	fadd   DWORD PTR [rdx-0x3a]
  44ed33:	(bad)  
  44ed34:	jo     0x44ed80
  44ed36:	pop    rdi
  44ed37:	rex.WX lods rax,QWORD PTR ds:[rsi]
  44ed39:	ins    DWORD PTR es:[rdi],dx
  44ed3a:	jle    0x44ed5d
  44ed3c:	cmp    dh,BYTE PTR [rdx-0x3b8aa8b]
  44ed42:	scas   eax,DWORD PTR es:[rdi]
  44ed43:	or     dh,BYTE PTR [rdx]
  44ed45:	iret   
  44ed46:	pop    rdx
  44ed47:	or     eax,0x405540c4
  44ed4c:	(bad)  
  44ed4d:	(bad)  
  44ed4e:	jnp    0x44ed94
  44ed50:	jno    0x44ed5e
  44ed52:	and    DWORD PTR [rsi+0x1c77dafe],0xae5015f1
  44ed5c:	sub    eax,0x7de0084e
  44ed61:	(bad)  
  44ed62:	mov    DWORD PTR [rdi],0x9be9d32
  44ed68:	pop    rsp
  44ed69:	and    dh,BYTE PTR [rbx-0x7d]
  44ed6c:	jbe    0x44edeb
  44ed6e:	jge    0x44edb0
  44ed70:	es (bad) 
  44ed72:	rex.WB je 0x44ed53
  44ed75:	sbb    al,0x20
  44ed77:	(bad)  
  44ed78:	mov    dl,0x20
  44ed7a:	xor    DWORD PTR [rcx],esi
  44ed7c:	(bad)  
  44ed7d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  44ed7e:	xchg   edx,eax
  44ed7f:	jbe    0x44eddc
  44ed81:	and    al,ch
  44ed83:	(bad)
  44ed86:	sahf   
  44ed87:	sbb    eax,0x875428a8
  44ed8c:	(bad)  
  44ed8d:	mov    al,bh
  44ed8f:	push   0x3675f4f
  44ed94:	and    eax,0xb820df32
  44ed99:	jle    0x44edd5
  44ed9b:	push   rdi
  44ed9c:	mov    esp,0x8a8213e9
  44eda1:	(bad)  
  44eda2:	xchg   ebp,eax
  44eda3:	sbb    al,0xc2
  44eda5:	and    DWORD PTR [rbx],esi
  44eda7:	and    dl,BYTE PTR [rax]
  44eda9:	rex.WR (bad) 
  44edab:	sar    BYTE PTR [rsi+0x5e4b9c40],cl
  44edb1:	(bad)  
  44edb2:	out    dx,eax
  44edb3:	push   rbx
  44edb4:	xor    ecx,0x8484062c
  44edba:	rex
  44edbb:	rex.W (bad) 
  44edbd:	add    al,0xd9
  44edbf:	js     0x44edb5
  44edc1:	xchg   eax,edx
  44edc3:	push   rsp
  44edc4:	xchg   edx,eax
  44edc5:	xor    esp,DWORD PTR [rsi+0x3e]
  44edc8:	ds cmp al,0xd0
  44edcb:	outs   dx,DWORD PTR ds:[rsi]
  44edcc:	std    
  44edcd:	adc    bh,BYTE PTR [rbx+0x7c]
  44edd0:	rex (bad) 
  44edd2:	pop    rsp
  44edd3:	out    0x66,eax
  44edd5:	add    edi,edi
  44edd7:	sub    DWORD PTR [rdi+0xfec1f3f],ecx
  44eddd:	(bad)  
  44edde:	adc    esp,edx
  44ede0:	retf   0xecb6
  44ede3:	scas   eax,DWORD PTR es:[rdi]
  44ede4:	ret    0xc718
  44ede7:	add    BYTE PTR [rax+rdi*2-0x53],0x40
  44edec:	jne    0x44eda6
  44edee:	sbb    bh,BYTE PTR [rsi+rdi*1-0x797c4648]
  44edf5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  44edf6:	test   BYTE PTR [rdi-0x1f2181cb],bh
  44edfc:	repnz rcl DWORD PTR [rcx],0x81
  44ee00:	add    DWORD PTR [rax],ebp
  44ee02:	jno    0x44ee61
  44ee04:	pushf  
  44ee05:	push   0x33
  44ee07:	lods   al,BYTE PTR ds:[rsi]
  44ee08:	rex adc eax,DWORD PTR [rax]
  44ee0b:	(bad)  
  44ee0c:	fld    st(0)
  44ee0e:	ficomp WORD PTR [rdx]
  44ee10:	jo     0x44ee18
  44ee12:	(bad)
  44ee15:	(bad)  
  44ee16:	mov    ah,0x9
  44ee18:	sub    al,BYTE PTR [rsi]
  44ee1a:	fistp  WORD PTR [rcx]
  44ee1c:	or     al,0x15
  44ee1e:	ja     0x44edc3
  44ee20:	add    BYTE PTR [rbp+0x111529cf],ch
  44ee26:	loope  0x44edfc
  44ee28:	outs   dx,DWORD PTR ds:[rsi]
  44ee29:	add    al,0x97
  44ee2b:	or     edx,ebp
  44ee2d:	xor    esp,esp
  44ee2f:	and    ebx,DWORD PTR [rax+rcx*2]
  44ee32:	push   rsp
  44ee33:	xlat   BYTE PTR ds:[rbx]
  44ee34:	cmp    esi,DWORD PTR [rsi+0x129279f5]
  44ee3a:	mov    gs,WORD PTR [rdi+0x201cc0c9]
  44ee40:	pop    rax
  44ee41:	test   BYTE PTR [rip+0xc7c7914],0x47        # 0xcc1675c
  44ee48:	retf   
  44ee49:	push   rsi
  44ee4a:	mov    dl,0x2
  44ee4c:	icebp  
  44ee4d:	pop    rax
  44ee4e:	or     al,BYTE PTR [rcx+rsi*8]
  44ee51:	data16 sti 
  44ee53:	call   FWORD PTR [rsp+rbx*1-0x2b8fe945]
  44ee5a:	ins    BYTE PTR es:[rdi],dx
  44ee5b:	cmp    ecx,DWORD PTR [rdi+0x30]
  44ee5e:	and    DWORD PTR [rbp+rax*1+0x29],ebp
  44ee62:	jb     0x44eeb8
  44ee64:	jnp    0x44eee2
  44ee66:	shl    ecx,0x48
  44ee69:	and    ch,BYTE PTR [rbx]
  44ee6b:	or     DWORD PTR [rsi-0x19fdfa85],edi
  44ee71:	cdq    
  44ee72:	sub    DWORD PTR [rdi+riz*4],0x1ab1fc0f
  44ee79:	adc    BYTE PTR [rip+0x221b6584],dh        # 0x22605403
  44ee7f:	and    al,0x73
  44ee81:	cmp    ah,BYTE PTR [rsi-0x1a25ff5a]
  44ee87:	(bad)  
  44ee88:	movabs ds:0x8832c817fd3e35b,al
  44ee91:	(bad)  
  44ee92:	out    0xca,eax
  44ee94:	ds rex.RXB (bad) 
  44ee97:	rex.WX pop rcx
  44ee99:	and    cl,BYTE PTR [rsi+0x6c895518]
  44ee9f:	outs   dx,DWORD PTR ds:[rsi]
  44eea0:	lahf   
  44eea1:	iret   
  44eea2:	out    0x55,al
  44eea4:	jnp    0x44eeaa
  44eea6:	push   rsp
  44eea7:	es loop 0x44ef15
  44eeaa:	add    DWORD PTR [rdi-0x52fbde6],esp
  44eeb0:	mov    esp,0xc67c82c6
  44eeb5:	(bad)  
  44eeb6:	movabs al,ds:0xc042622b17fd02fb
  44eebf:	mov    ebx,0x6c81df3e
  44eec4:	mov    esi,0xe22b8812
  44eec9:	sub    ecx,ebx
  44eecb:	and    DWORD PTR [rsi+rsi*8-0x6592a24b],ebp
  44eed2:	(bad)  
  44eed3:	mov    al,0x9f
  44eed5:	or     dl,al
  44eed7:	mov    eax,0x122fbf4
  44eedc:	xor    dl,BYTE PTR [rax]
  44eede:	sub    BYTE PTR [rdx-0x4ffdc21a],al
  44eee4:	test   esi,esi
  44eee6:	mov    BYTE PTR [rbx+0x6af3187e],al
  44eeec:	sbb    BYTE PTR [rax+0x23eb81cb],0x2a
  44eef3:	xchg   edx,eax
  44eef4:	(bad)  
  44eef5:	and    esp,edx
  44eef7:	scas   al,BYTE PTR es:[rdi]
  44eef8:	add    eax,0x768578fa
  44eefd:	rex.WRB movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  44eeff:	and    DWORD PTR [rdx],edi
  44ef01:	(bad)  
  44ef02:	or     eax,0x56b88cf8
  44ef07:	not    BYTE PTR [rbp+rax*2-0x14]
  44ef0b:	or     bl,BYTE PTR [rsi]
  44ef0d:	adc    al,0xb0
  44ef0f:	add    DWORD PTR [rsi],ecx
  44ef11:	mov    esp,0xcbe2503f
  44ef16:	mov    dh,0xc8
  44ef18:	cs repz repnz xchg ebp,eax
  44ef1c:	sub    ah,ch
  44ef1e:	mov    eax,0x5bd87f00
  44ef23:	imul   ebp,DWORD PTR [rsp+rbx*4-0x78],0x66c4378b
  44ef2b:	rex.WRXB movabs r11,0x5eeb081845b17ae6
  44ef35:	(bad)  
  44ef36:	in     eax,dx
  44ef37:	ffree  st(4)
  44ef39:	or     ebx,eax
  44ef3b:	rcl    BYTE PTR [rdx+0xa],0x20
  44ef3f:	shl    BYTE PTR [rbp+0x2c45ce03],1
  44ef45:	sbb    eax,0xea026e19
  44ef4a:	and    eax,DWORD PTR [rcx]
  44ef4c:	xchg   edx,eax
  44ef4d:	xor    eax,DWORD PTR [rax+rax*8-0x16b5f6a7]
  44ef54:	sahf   
  44ef55:	sahf   
  44ef56:	test   DWORD PTR [rbx],0x54a43501
  44ef5c:	xor    bl,dh
  44ef5e:	push   rbp
  44ef5f:	pop    rbx
  44ef60:	mov    ebx,0xe0ee720c
  44ef65:	lods   al,BYTE PTR ds:[rsi]
  44ef66:	add    DWORD PTR [rdx+0x5e],esi
  44ef69:	and    dl,BYTE PTR [rax-0x7a]
  44ef6c:	std    
  44ef6d:	sub    al,0x60
  44ef6f:	nop
  44ef70:	sbb    eax,0x60203c1
  44ef75:	mov    bh,0x7d
  44ef77:	sub    edi,DWORD PTR [rax+0x62]
  44ef7a:	rex
  44ef7b:	rex.WB (bad) 
  44ef7d:	rex.WXB test al,0x3a
  44ef80:	(bad)  
  44ef81:	mov    ch,0x4
  44ef83:	mov    DWORD PTR [rax+0x64],eax
  44ef86:	fcomp  QWORD PTR [rdx+0x3851280a]
  44ef8c:	pop    rsp
  44ef8d:	cdq    
  44ef8e:	(bad)  
  44ef8f:	rol    BYTE PTR [rdx],1
  44ef91:	pop    rdx
  44ef92:	jg     0x44efe2
  44ef94:	rex.WRX sti 
  44ef96:	pushf  
  44ef97:	jle    0x44ef8f
  44ef99:	rex loopne 0x44ef49
  44ef9c:	mov    ch,0xfe
  44ef9e:	jb     0x44ef4e
  44efa0:	or     DWORD PTR ss:[rcx-0x4a073a16],edx
  44efa7:	sub    eax,0x990464b0
  44efac:	add    ch,BYTE PTR [rcx-0x78]
  44efaf:	(bad)
  44efb2:	mov    WORD PTR [rbp+0x5a],es
  44efb5:	in     al,0x55
  44efb7:	cmp    ah,BYTE PTR [rdx]
  44efb9:	lahf   
  44efba:	movabs al,ds:0x62f7e9532d4a4e45
  44efc3:	(bad)  
  44efc4:	pop    rsi
  44efc5:	test   DWORD PTR [rdx+rax*1-0x600ab066],edi
  44efcc:	sbb    eax,0x1fdb59f5
  44efd1:	push   0xffffffffc55bf86d
  44efd6:	and    al,0x53
  44efd8:	cmp    bl,BYTE PTR [rdi]
  44efda:	jno    0x44f026
  44efdc:	adc    BYTE PTR [rcx-0x63e2e0e],dl
  44efe2:	fisubr DWORD PTR [rbx-0x23876bee]
  44efe8:	xor    eax,0x43d97b60
  44efed:	jbe    0x44efd4
  44efef:	(bad)  
  44eff0:	xchg   ebp,eax
  44eff1:	rex
  44eff2:	rex.RB movabs eax,ds:0xaedfaea02067ba2a
  44effc:	(bad)  
  44effd:	mov    ah,0xd3
  44efff:	test   DWORD PTR [rbx-0x2c95d6f1],esi
  44f005:	(bad)  
  44f007:	nop
  44f008:	cmp    esp,esi
  44f00a:	pop    rbp
  44f00b:	out    0x62,al
  44f00d:	mov    edi,DWORD PTR [rbx]
  44f00f:	(bad)  
  44f010:	xchg   QWORD PTR [rax],rcx
  44f013:	imul   eax,DWORD PTR [rcx],0x61
  44f016:	pop    rbx
  44f017:	(bad)  
  44f018:	hlt    
  44f019:	wbinvd 
  44f01b:	outs   dx,BYTE PTR ds:[rsi]
  44f01c:	sbb    DWORD PTR [rax-0x35],ebp
  44f01f:	out    0xe5,eax
  44f021:	jmp    0x44efde
  44f023:	in     eax,0xbd
  44f025:	mov    ecx,gs
  44f027:	fdivr  DWORD PTR [rbx-0x7f618fc]
  44f02d:	push   rsp
  44f02e:	fsub   st(0),st
  44f030:	xor    ecx,0xffffffb3
  44f033:	sbb    eax,DWORD PTR [rdx]
  44f035:	test   eax,0xbfd0c450
  44f03a:	add    eax,0xc6348dfc
  44f03f:	and    bh,cl
  44f041:	mov    BYTE PTR [rip+0xffffffffb9ffb39f],ah        # 0xffffffffba44a3e6
  44f047:	fidivr DWORD PTR [rcx+0x2b2031c3]
  44f04d:	shl    BYTE PTR [rdx+0x9b2be87],cl
  44f053:	dec    DWORD PTR [rsi+0x67f641e3]
  44f059:	rex.WXB (bad) 
  44f05b:	rcr    BYTE PTR [rdi],0x6
  44f05e:	test   ch,al
  44f060:	cmp    cl,bh
  44f062:	jge    0x44f091
  44f064:	test   al,0x8d
  44f066:	jmp    QWORD PTR [rip+0xfffffffff781fd82]        # 0xfffffffff7c6edee
  44f06c:	mov    dl,0xf8
  44f06e:	cmp    BYTE PTR [rcx-0x1894e852],al
  44f074:	mul    DWORD PTR [rcx]
  44f076:	(bad)  
  44f077:	pop    rsi
  44f078:	outs   dx,DWORD PTR ds:[rsi]
  44f079:	rex.X (bad) 
  44f07b:	(bad)  
  44f07c:	cmp    edx,DWORD PTR [rcx+0x30216e1]
  44f082:	mov    bh,0x51
  44f084:	or     al,0x1
  44f086:	cli    
  44f087:	mov    ah,0x40
  44f089:	jbe    0x44f0cd
  44f08b:	pop    rsp
  44f08c:	jg     0x44f0b9
  44f08e:	bswap  esp
  44f090:	or     DWORD PTR [rbx+rax*1],eax
  44f093:	(bad)  
  44f094:	sub    ecx,DWORD PTR [rdi+0x38]
  44f097:	ins    DWORD PTR es:[rdi],dx
  44f098:	and    eax,0x1ab90a0
  44f09d:	(bad)  
  44f09e:	push   rcx
  44f09f:	test   eax,0x48f7b50f
  44f0a4:	jle    0x44f112
  44f0a6:	movabs al,ds:0xbb5f91a8204d7adc
  44f0af:	(bad)  
  44f0b0:	pop    rsi
  44f0b1:	cmp    DWORD PTR [rax+0x33],ebp
  44f0b4:	(bad)  
  44f0b5:	stos   BYTE PTR es:[rdi],al
  44f0b6:	retf   0xd779
  44f0b9:	or     BYTE PTR [rax],cl
  44f0bb:	mov    DWORD PTR [rdx-0x1a3fff7e],edx
  44f0c1:	add    al,BYTE PTR [rsi+0x2c]
  44f0c4:	ins    BYTE PTR es:[rdi],dx
  44f0c5:	iret   
  44f0c6:	jnp    0x44f056
  44f0c8:	(bad)  
  44f0c9:	rex.X or BYTE PTR [rdx],0x4a
  44f0cd:	in     al,0x27
  44f0cf:	ds (bad) 
  44f0d1:	fnsave [rbp+0x4b20486c]
  44f0d7:	push   rax
  44f0d8:	js     0x44f0f3
  44f0da:	adc    BYTE PTR [rcx-0x52],ah
  44f0dd:	sbb    ecx,esp
  44f0df:	(bad)  
  44f0e0:	rex.RXB (bad) 
  44f0e2:	mov    ebx,0xf7c8b9db
  44f0e7:	nop
  44f0e8:	loopne 0x44f0d2
  44f0ea:	loopne 0x44f0f5
  44f0ec:	sub    DWORD PTR [rcx+0x3],0x57318187
  44f0f3:	jnp    0x44f0a2
  44f0f5:	fst    DWORD PTR [rbx-0x5f8d8102]
  44f0fb:	mov    esp,0x8151ce72
  44f100:	movabs al,ds:0x9305b6ff5e94eca0
  44f109:	sub    dl,BYTE PTR [rdi+rax*1-0x7fa50099]
  44f110:	or     BYTE PTR [rsi-0x5afbe7b1],ch
  44f116:	or     al,0x7b
  44f118:	fwait
  44f119:	add    BYTE PTR [rcx-0x27],bh
  44f11c:	vpmaddwd ymm3,ymm9,YMMWORD PTR [rbp+0x7c4e547d]
  44f124:	sub    eax,esp
  44f126:	adc    ebp,esp
  44f128:	sub    eax,ecx
  44f12a:	push   rdi
  44f12b:	add    esp,edx
  44f12d:	(bad)  
  44f12e:	(bad)  
  44f12f:	mov    ebx,0x8d02b1da
  44f134:	pop    rdi
  44f135:	mov    DWORD PTR [rax],esp
  44f137:	xchg   edx,eax
  44f138:	xchg   esi,eax
  44f139:	iret   
  44f13a:	xchg   esp,eax
  44f13b:	fcmovne st,st(0)
  44f13d:	movsxd ebx,DWORD PTR [rsp+rbp*2+0x72]
  44f141:	rex.X push rax
  44f143:	fsincos 
  44f145:	sub    DWORD PTR [rcx-0x1],edi
  44f148:	mov    ch,0x40
  44f14a:	loopne 0x44f1a3
  44f14c:	(bad)  
  44f14d:	cdq    
  44f14e:	outs   dx,DWORD PTR ds:[rsi]
  44f14f:	xlat   BYTE PTR ds:[rbx]
  44f150:	jae    0x44f19f
  44f152:	pop    rcx
  44f153:	xchg   edi,eax
  44f154:	lahf   
  44f155:	xlat   BYTE PTR ds:[rbx]
  44f156:	add    bh,BYTE PTR [rsi]
  44f158:	in     eax,0x63
  44f15a:	add    DWORD PTR [rbx],ebp
  44f15c:	retf   
  44f15d:	and    BYTE PTR [rdi+0x5b447ac],bh
  44f163:	mov    esp,0xac19cfe3
  44f168:	mov    ah,0x73
  44f16a:	nop
  44f16b:	push   rbp
  44f16c:	jns    0x44f138
  44f16e:	div    BYTE PTR [rdi+0xf]
  44f171:	sub    edx,DWORD PTR fs:[rip+0x27102212]        # 0x2755138a
  44f178:	shl    DWORD PTR [rbx],cl
  44f17a:	jrcxz  0x44f1a0
  44f17c:	mov    esp,0xc0a84155
  44f181:	vpcmpeqd ymm2,ymm10,YMMWORD PTR es:[rsi+rbp*8-0xe78ee]
  44f18b:	jae    0x44f10d
  44f18d:	(bad)  
  44f18e:	ins    BYTE PTR es:[rdi],dx
  44f18f:	test   esp,esi
  44f191:	mov    BYTE PTR [rdi+rbp*1-0x23a14078],ch
  44f198:	repz or edi,DWORD PTR [rdi-0x15]
  44f19c:	and    ebx,DWORD PTR [rbx+0x4f]
  44f19f:	adc    ch,BYTE PTR [rdx+0x2edfe749]
  44f1a5:	(bad)  
  44f1a6:	scas   al,BYTE PTR es:[rdi]
  44f1a7:	add    eax,0x81c556c4
  44f1ac:	(bad)  
  44f1ad:	push   rbp
  44f1ae:	and    eax,0xc06af6ba
  44f1b3:	out    0xfa,al
  44f1b5:	mov    ah,al
  44f1b7:	sub    al,BYTE PTR [rsi]
  44f1b9:	(bad)  
  44f1ba:	loopne 0x44f20f
  44f1bc:	xchg   ebp,eax
  44f1bd:	xchg   edi,eax
  44f1be:	in     al,0x75
  44f1c0:	mov    fs,eax
  44f1c2:	je     0x44f199
  44f1c4:	(bad)  
  44f1c5:	(bad)  
  44f1c6:	mov    cl,0x7d
  44f1c8:	cmp    al,0xa8
  44f1ca:	ins    BYTE PTR es:[rdi],dx
  44f1cb:	xor    ebp,DWORD PTR [rbp+0x31ce67e3]
  44f1d1:	jae    0x44f1d4
  44f1d3:	rex.RXB (bad) 
  44f1d5:	stos   BYTE PTR es:[rdi],al
  44f1d6:	popf   
  44f1d7:	(bad)  
  44f1d8:	or     BYTE PTR [rdx],al
  44f1da:	push   rax
  44f1db:	ret    
  44f1dc:	jne    0x44f17c
  44f1de:	or     ebx,ebx
  44f1e0:	xchg   esp,eax
  44f1e1:	add    ah,ch
  44f1e3:	loopne 0x44f246
  44f1e5:	fwait
  44f1e6:	scas   al,BYTE PTR es:[rdi]
  44f1e7:	movabs ds:0xa3c15950a7373213,eax
  44f1f0:	xchg   ebx,eax
  44f1f1:	push   rsp
  44f1f2:	push   rbx
  44f1f3:	(bad)  
  44f1f4:	jg     0x44f25e
  44f1f6:	and    BYTE PTR [rax],ah
  44f1f8:	gs or  ah,dl
  44f1fb:	push   rax
  44f1fc:	fs ins DWORD PTR es:[rdi],dx
  44f1fe:	rex.WRB lahf 
  44f200:	mov    ah,0x88
  44f202:	rex stc 
  44f204:	cmp    bl,dl
  44f206:	adc    BYTE PTR [rcx-0x216eac7f],0x2b
  44f20d:	enter  0x43f6,0x30
  44f211:	mov    dl,BYTE PTR [rdx-0x76e7df54]
  44f217:	mov    BYTE PTR [rsi+0x6a],dh
  44f21a:	cs scas al,BYTE PTR es:[rdi]
  44f21c:	jge    0x44f281
  44f21e:	sti    
  44f21f:	jo     0x44f28c
  44f221:	sti    
  44f222:	mov    ch,0x79
  44f224:	xchg   ebp,eax
  44f225:	gs sbb al,0x8b
  44f228:	(bad)  
  44f229:	fimul  WORD PTR [rbx]
  44f22b:	pushf  
  44f22c:	in     eax,0x40
  44f22e:	push   rsi
  44f22f:	jl     0x44f29a
  44f231:	mov    al,0x14
  44f233:	adc    BYTE PTR [rdi+0x10b06a7],dl
  44f239:	and    DWORD PTR [rax+0x6e],edx
  44f23c:	and    ch,BYTE PTR [rbp+0x5a09b740]
  44f242:	jge    0x44f1d7
  44f244:	loope  0x44f1e2
  44f246:	jg     0x44f2ba
  44f248:	mov    dl,0x37
  44f24a:	gs xchg edi,eax
  44f24c:	jno    0x44f25f
  44f24e:	xchg   BYTE PTR [rbx-0x40],r8b
  44f252:	and    DWORD PTR [rcx+0x1fbf9fcf],ebp
  44f258:	(bad)  
  44f259:	test   al,0x62
  44f25b:	fs and eax,0xc4480bed
  44f261:	xchg   ebp,eax
  44f262:	lods   eax,DWORD PTR ds:[rsi]
  44f263:	(bad)  
  44f264:	cmp    BYTE PTR [rax+0x60b90401],dl
  44f26a:	rex.RB fisub WORD PTR [r15+0x7]
  44f26e:	xchg   DWORD PTR [rdi],eax
  44f270:	(bad)  
  44f271:	(bad)  
  44f272:	fmul   st,st(7)
  44f274:	mov    cl,0xc6
  44f276:	clc    
  44f277:	jmp    0x13858c72
  44f27c:	enter  0xaafc,0x74
  44f280:	push   rdi
  44f281:	pop    rsi
  44f282:	repnz xor ecx,0xf16b9f1b
  44f289:	lahf   
  44f28a:	mov    esi,0xb7d2ba21
  44f28f:	test   dl,ah
  44f291:	fstp   TBYTE PTR [rcx-0x31]
  44f294:	(bad)  
  44f295:	rex.W
  44f296:	rex.WRB or al,0x3f
  44f299:	(bad)  
  44f29a:	mov    al,0xb1
  44f29c:	neg    BYTE PTR [rip+0x43846887]        # 0x43c95b29
  44f2a2:	add    BYTE PTR [rbx+0x664110ca],ch
  44f2a8:	rex.R (bad) 
  44f2aa:	xlat   BYTE PTR ds:[rbx]
  44f2ab:	(bad)  
  44f2ac:	jle    0x44f2f3
  44f2ae:	(bad)
  44f2b3:	ins    DWORD PTR es:[rdi],dx
  44f2b4:	sti    
  44f2b5:	mov    dh,0xb7
  44f2b7:	jrcxz  0x44f2b2
  44f2b9:	call   QWORD PTR [rdi+0x12aafb01]
  44f2bf:	fcom   st(3)
  44f2c1:	pop    rax
  44f2c2:	adc    BYTE PTR [rax+0x36b2082d],bl
  44f2c8:	(bad)  
  44f2c9:	adc    BYTE PTR [rax],bl
  44f2cb:	mov    edi,0x90125612
  44f2d0:	and    BYTE PTR [rdx],ch
  44f2d2:	push   rcx
  44f2d3:	enter  0xecb4,0x29
  44f2d7:	add    ecx,ebx
  44f2d9:	mov    esi,0x323e02fb
  44f2de:	outs   dx,BYTE PTR ds:[rsi]
  44f2df:	movsxd edx,DWORD PTR [rdx+0x12718da9]
  44f2e5:	(bad)  
  44f2e6:	mov    BYTE PTR [rbx+0x3f0f18eb],ch
  44f2ec:	adc    esi,ebp
  44f2ee:	imul   edi,DWORD PTR [rcx+riz*1+0x39277cb0],0xbabda37c
  44f2f9:	scas   al,BYTE PTR es:[rdi]
  44f2fa:	imul   eax,DWORD PTR [rax],0xf83692e
  44f300:	(bad)  
  44f301:	mov    ebx,0x715847f8
  44f306:	iret   
  44f307:	(bad)  
  44f308:	loop   0x44f2a4
  44f30a:	mov    ebp,0x55df53f0
  44f30f:	sub    ebp,DWORD PTR [rbx]
  44f311:	mov    ?,WORD PTR [rbp+0x31]
  44f314:	sbb    edi,edx
  44f316:	xchg   BYTE PTR [rax+0x5c8e2e93],al
  44f31c:	or     al,0xe8
  44f31e:	movabs ds:0xaca4d8187054d936,al
  44f327:	ror    BYTE PTR [rcx],0xc
  44f32a:	imul   eax,DWORD PTR [rbx-0x64],0xffffff8d
  44f32e:	add    al,0x61
  44f330:	shl    BYTE PTR [rip+0x3800db11],cl        # 0x3845ce47
  44f336:	fsub   DWORD PTR [rsi]
  44f338:	jo     0x44f306
  44f33a:	adc    eax,0x95a1900c
  44f33f:	xor    eax,0x1ec32bb2
  44f344:	(bad)  
  44f345:	enter  0x2aa,0x91
  44f349:	cmp    cl,cl
  44f34b:	nop
  44f34c:	pop    rsi
  44f34d:	test   eax,0xad7a3eaf
  44f352:	idiv   esi
  44f354:	xchg   esi,eax
  44f355:	fldenv [rdi+riz*8-0x7]
  44f359:	loopne 0x44f313
  44f35b:	(bad)  
  44f35c:	ds add eax,0x89823414
  44f362:	loopne 0x44f38c
  44f364:	pop    rdi
  44f365:	add    eax,0x152fb6ad
  44f36a:	cwde   
  44f36b:	rex.RXB mov r9d,0x9be9b196
  44f371:	rex push rcx
  44f373:	ds std 
  44f375:	jle    0x44f3a7
  44f377:	out    dx,al
  44f378:	mov    edi,0xdaa88fec
  44f37d:	rex.R xchg edx,eax
  44f37f:	jmp    0x44f336
  44f381:	movsxd esi,DWORD PTR [rsi-0x6fc26a19]
  44f387:	ja     0x44f3f2
  44f389:	retf   0xe3b9
  44f38c:	mov    dh,0x10
  44f38e:	xchg   ecx,eax
  44f38f:	jo     0x44f3e2
  44f391:	gs ds test al,0xcc
  44f395:	xor    al,0x3e
  44f397:	rex.WRX loopne 0x44f3c6
  44f39a:	(bad)  
  44f39b:	(bad)  
  44f39c:	imul   esi,DWORD PTR [rsi],0x458c5990
  44f3a2:	add    eax,0x39051024
  44f3a7:	xor    cl,BYTE PTR [rbx]
  44f3a9:	mov    dl,0x2a
  44f3ab:	fld    QWORD PTR [rcx+rbp*4]
  44f3ae:	rcr    BYTE PTR [rcx-0x28c89bf5],0x32
  44f3b5:	rex.WRX (bad) 
  44f3b7:	and    BYTE PTR [rdi],ah
  44f3b9:	jnp    0x44f355
  44f3bb:	addr32 retf 0x484e
  44f3bf:	imul   edi,esp,0x13311732
  44f3c5:	pop    rax
  44f3c6:	mov    dl,0x9e
  44f3c8:	stos   BYTE PTR es:[rdi],al
  44f3c9:	(bad)  
  44f3ca:	jns    0x44f35d
  44f3cc:	adc    al,0x69
  44f3ce:	sbb    al,0xe3
  44f3d0:	fcomp  st(2)
  44f3d2:	mov    esi,0xcb083798
  44f3d7:	outs   dx,DWORD PTR ds:[rsi]
  44f3d8:	out    dx,eax
  44f3d9:	(bad)  
  44f3da:	fadd   DWORD PTR [rbx-0x80]
  44f3dd:	mov    edx,0x2202adce
  44f3e2:	sub    ch,BYTE PTR [rax]
  44f3e4:	add    eax,0x8c208db2
  44f3e9:	mov    esi,0xc101cb67
  44f3ef:	ficomp DWORD PTR [rsi]
  44f3f1:	and    BYTE PTR [rsi+0x503a3af8],dh
  44f3f7:	ror    DWORD PTR [rcx],0x70
  44f3fa:	(bad)  
  44f3fb:	and    al,0x16
  44f3fd:	rex.R jg 0x44f3a9
  44f400:	in     eax,dx
  44f401:	push   rdi
  44f402:	(bad)
  44f405:	jno    0x44f3c5
  44f407:	and    DWORD PTR [rax+0x2bd691ed],edx
  44f40d:	sar    eax,0x5c
  44f410:	ror    BYTE PTR [rdi+0x47],0x4
  44f414:	adc    al,BYTE PTR [rbp-0x5551b709]
  44f41a:	and    DWORD PTR [rax+rcx*2-0x1d],ebp
  44f41e:	cmp    BYTE PTR [rbp+0x67],bh
  44f421:	adc    esp,DWORD PTR [rdx+rdx*2-0x61cf343]
  44f428:	loop   0x44f423
  44f42a:	(bad)  [rsi+rax*8+0x31]
  44f42e:	(bad)  
  44f42f:	or     eax,0xffd87a10
  44f434:	jnp    0x44f41a
  44f436:	outs   dx,DWORD PTR ds:[rsi]
  44f437:	mov    cl,0x8b
  44f439:	mov    ah,0x5e
  44f43b:	stc    
  44f43c:	mov    esi,0x95be2b48
  44f441:	hlt    
  44f442:	push   rdi
  44f443:	imul   ebp,ebp,0x6b
  44f446:	movsxd ecx,DWORD PTR [rdi+0x20]
  44f449:	out    0xaa,al
  44f44b:	or     eax,0x89cc5619
  44f450:	rex.B (bad) 
  44f452:	ficomp WORD PTR [rip+0xffffffff9fbee302]        # 0xffffffffa003d75a
  44f458:	add    ebx,DWORD PTR [rax+rbx*8-0x5a]
  44f45c:	sub    BYTE PTR fs:[rbp-0x2d],ah
  44f460:	cmp    DWORD PTR [rcx+0x63],ebx
  44f463:	and    eax,0xb4aaeca8
  44f468:	sar    DWORD PTR [rcx+0x4dcea31d],1
  44f46e:	and    bl,BYTE PTR [rsi]
  44f470:	movsxd esp,DWORD PTR [rbx]
  44f472:	cwde   
  44f473:	sub    BYTE PTR [rcx],0x5
  44f476:	popf   
  44f477:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  44f478:	rex.W ret 
  44f47a:	std    
  44f47b:	cmp    esi,DWORD PTR [rbx-0x44]
  44f47e:	jns    0x44f406
  44f480:	int3   
  44f481:	(bad)  
  44f482:	sti    
  44f483:	pop    rax
  44f484:	jo     0x44f43d
  44f486:	mov    sil,0x77
  44f489:	fadd   QWORD PTR [rbp+0x3]
  44f48c:	shl    DWORD PTR [rax-0x6641d593],0x36
  44f493:	mov    edi,0x598d0728
  44f499:	(bad)  
  44f49a:	retf   
  44f49b:	and    al,BYTE PTR [rdx]
  44f49d:	adc    cl,dh
  44f49f:	mov    eax,edx
  44f4a1:	jb     0x44f443
  44f4a3:	pushf  
  44f4a4:	loope  0x44f506
  44f4a6:	(bad)  
  44f4a7:	popf   
  44f4a8:	pushf  
  44f4a9:	test   BYTE PTR [rcx],0x82
  44f4ac:	and    BYTE PTR [rcx-0x7080b9af],dh
  44f4b2:	iret   
  44f4b3:	push   rdi
  44f4b4:	cmp    ah,BYTE PTR [rdx]
  44f4b6:	add    edx,DWORD PTR [rcx]
  44f4b8:	jl     0x44f486
  44f4ba:	cmp    ch,ch
  44f4bc:	adc    esp,DWORD PTR [rip+0x197e4724]        # 0x19c33be6
  44f4c2:	xor    edi,DWORD PTR [ebp-0x47]
  44f4c6:	rex.RB mov ds,WORD PTR [r11+0xa]
  44f4ca:	xchg   esp,eax
  44f4cb:	jo     0x44f4d8
  44f4cd:	sub    DWORD PTR [rdx+riz*2],0xa5d95843
  44f4d4:	sub    al,BYTE PTR [rip+0x5934457e]        # 0x59793a58
  44f4da:	pop    rax
  44f4db:	and    al,dh
  44f4dd:	(bad)  
  44f4de:	lods   al,BYTE PTR ds:[rsi]
  44f4df:	pop    rdx
  44f4e0:	pop    rcx
  44f4e1:	rex.RX lahf 
  44f4e3:	pop    rdi
  44f4e4:	sbb    BYTE PTR [rax],dl
  44f4e6:	or     esp,DWORD PTR [rdx]
  44f4e8:	mov    dh,0x1c
  44f4ea:	int3   
  44f4eb:	(bad)  
  44f4ec:	cli    
  44f4ed:	rex.WX rol BYTE PTR [rsi+r14*1],1
  44f4f1:	ret    0x4ff1
  44f4f4:	jge    0x44f47c
  44f4f6:	mov    al,0x4a
  44f4f8:	rex.R inc WORD PTR [rdi-0x5d53660a]
  44f500:	or     eax,0x27f94559
  44f505:	xchg   QWORD PTR [rsi],rsi
  44f508:	cdq    
  44f509:	retf   
  44f50a:	fisttp WORD PTR [rdx+0x67]
  44f50d:	add    bh,BYTE PTR [rbp+0x54]
  44f510:	jo     0x44f55e
  44f512:	cmp    edx,DWORD PTR [rsi]
  44f514:	xchg   ecx,eax
  44f515:	push   rsp
  44f516:	adc    cl,BYTE PTR [rsi+0x32381d35]
  44f51c:	adc    BYTE PTR [rdi],dl
  44f51e:	(bad)  
  44f51f:	pop    rdi
  44f520:	sbb    al,0x56
  44f522:	test   DWORD PTR [rdi],esp
  44f524:	test   eax,0x52bea08
  44f529:	(bad)  
  44f52a:	movabs eax,ds:0xa13db8b62159575c
  44f533:	mov    ch,0xc7
  44f535:	xchg   esi,eax
  44f536:	enter  0xa84d,0x3f
  44f53a:	sbb    al,0xa8
  44f53c:	add    cl,BYTE PTR [rax+0x75c35d55]
  44f542:	mov    ch,bh
  44f544:	rex.WXB add sil,r9b
  44f547:	rex ins BYTE PTR es:[rdi],dx
  44f549:	xchg   ecx,eax
  44f54a:	xchg   BYTE PTR [rax],dl
  44f54c:	int    0x5
  44f54e:	mov    BYTE PTR [rsi+0xda77cd8],0xe2
  44f555:	cmc    
  44f556:	enter  0x9c76,0x63
  44f55a:	(bad)  
  44f55b:	cmp    edi,DWORD PTR [rdi]
  44f55d:	mov    DWORD PTR [rcx-0x5e],ecx
  44f560:	(bad)  
  44f561:	adc    ebx,esp
  44f563:	cmp    eax,0x667d5440
  44f568:	imul   ebp,DWORD PTR [rdx+0x3021f611]
  44f56f:	rex.XB cmp esp,DWORD PTR [r8]
  44f572:	lock scas al,BYTE PTR es:[rdi]
  44f574:	sub    bh,0xf4
  44f577:	xchg   ebp,eax
  44f578:	or     BYTE PTR [rcx-0x180e5637],0x3
  44f57f:	or     al,0x36
  44f581:	out    0xb0,eax
  44f583:	push   rcx
  44f584:	sbb    DWORD PTR [rcx],eax
  44f586:	push   rbp
  44f587:	sbb    DWORD PTR [rbx+0x1b839751],edx
  44f58d:	scas   al,BYTE PTR es:[rdi]
  44f58e:	xlat   BYTE PTR ds:[rbx]
  44f58f:	enter  0xcf94,0x28
  44f593:	movabs al,ds:0x74275a6518411e3a
  44f59c:	pop    rdx
  44f59d:	adc    BYTE PTR [rcx+0x6e],dh
  44f5a0:	ins    DWORD PTR es:[rdi],dx
  44f5a1:	(bad)  
  44f5a2:	lods   al,BYTE PTR ds:[rsi]
  44f5a3:	xor    dl,ch
  44f5a5:	clc    
  44f5a6:	cmp    al,0xc7
  44f5a8:	(bad)  
  44f5a9:	scas   eax,DWORD PTR es:[rdi]
  44f5aa:	mov    esi,0xf464fa3d
  44f5af:	mov    esi,DWORD PTR [rbx-0x6b]
  44f5b2:	(bad)  
  44f5b3:	test   BYTE PTR ss:[rax+0x41],bh
  44f5b7:	rex xor DWORD PTR [rdi+0x7f379fed],eax
  44f5be:	xor    ebx,DWORD PTR [rdx+rdx*1+0x59c1cdef]
  44f5c5:	sar    DWORD PTR ss:[rsi-0x2764d4f4],1
  44f5cc:	test   al,0xb9
  44f5ce:	and    BYTE PTR [rbx-0x71],bl
  44f5d1:	lock ins BYTE PTR es:[rdi],dx
  44f5d3:	sub    DWORD PTR [rbx+0x1e4e400a],ecx
  44f5d9:	(bad)  
  44f5da:	sub    ecx,DWORD PTR [rax]
  44f5dc:	cmp    DWORD PTR [rdi],ebx
  44f5de:	fsin   
  44f5e0:	push   0x42
  44f5e2:	call   FWORD PTR [rbx+rcx*2]
  44f5e5:	push   rsp
  44f5e6:	cmc    
  44f5e7:	push   rbx
  44f5e8:	xchg   esi,eax
  44f5e9:	xchg   ebp,eax
  44f5ea:	sub    eax,0x56829a94
  44f5ef:	test   eax,0xfb0886ce
  44f5f4:	pop    rdi
  44f5f5:	add    edx,edx
  44f5f7:	test   al,0x4c
  44f5f9:	cld    
  44f5fa:	lods   eax,DWORD PTR ds:[rsi]
  44f5fb:	(bad)  
  44f5fc:	push   rax
  44f5fd:	push   rdx
  44f5fe:	(bad)  
  44f5ff:	sbb    edx,DWORD PTR [rdx+0x8]
  44f602:	js     0x44f61d
  44f604:	mov    WORD PTR [rax+0x5c],es
  44f607:	and    eax,0x91f01bd8
  44f60c:	jbe    0x44f672
  44f60e:	sub    edx,esp
  44f610:	test   al,0x3d
  44f612:	sbb    DWORD PTR [rbx+0x201699c8],ebx
  44f618:	stc    
  44f619:	mov    al,0xaf
  44f61b:	stos   BYTE PTR es:[rdi],al
  44f61c:	(bad)  
  44f61d:	jrcxz  0x44f5b4
  44f61f:	rex.B add al,0xdc
  44f622:	icebp  
  44f623:	sub    DWORD PTR [rdx+0x4c],0x1237f326
  44f62a:	enter  0xca86,0x44
  44f62e:	not    BYTE PTR [rsi-0x255f070b]
  44f634:	nop
  44f635:	sar    DWORD PTR [rsi-0xa18d7ee],0x6f
  44f63c:	rex.WRXB and BYTE PTR [r11+0x21],r12b
  44f640:	neg    DWORD PTR [rbx]
  44f642:	pop    rbx
  44f643:	jnp    0x44f68d
  44f645:	js     0x44f636
  44f647:	and    BYTE PTR [rax+0x2f],0x7
  44f64b:	in     al,dx
  44f64c:	cld    
  44f64d:	rcr    DWORD PTR [eip+0x16d2c403],0x31        # 0x1717ba58
  44f655:	sub    al,0x61
  44f657:	div    DWORD PTR [rdi+0x807f6b6]
  44f65d:	loop   0x44f619
  44f65f:	xchg   edx,eax
  44f660:	add    BYTE PTR [rcx+0x4dca3224],ah
  44f666:	(bad)  
  44f667:	xchg   ebx,eax
  44f668:	in     eax,dx
  44f669:	es push rbp
  44f66b:	rex.WXB ficom DWORD PTR [r9+0x203aff25]
  44f672:	rex.WRX (bad) 
  44f674:	imul   edx,edi,0xffffffa8
  44f677:	ds retf 
  44f679:	jle    0x44f652
  44f67b:	nop    DWORD PTR [rsi]
  44f67e:	sub    BYTE PTR [rbp+0x2abb5b57],bh
  44f684:	xchg   edi,eax
  44f685:	push   rdi
  44f686:	(bad)  
  44f687:	(bad)  
  44f688:	rex.RXB xchg r14d,eax
  44f68a:	es cld 
  44f68c:	rex.W push 0x7c
  44f68f:	jl     0x44f671
  44f691:	adc    eax,0xf6988989
  44f696:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  44f697:	(bad)
  44f69a:	pop    rsi
  44f69b:	in     eax,0xa3
  44f69d:	(bad)
  44f6a2:	(bad)  [rdi]
  44f6a4:	sbb    eax,0xa7c601af
  44f6a9:	rex.WR ret 
  44f6ab:	lea    eax,[rbx]
  44f6ad:	pop    rsp
  44f6ae:	mov    WORD PTR [rdx],cs
  44f6b0:	sub    edi,DWORD PTR [rip+0xfffffffff1128aa9]        # 0xfffffffff157815f
  44f6b6:	in     al,0x94
  44f6b8:	mov    ebp,0xa08349ca
  44f6bd:	jl     0x44f6cb
  44f6bf:	ss shl DWORD PTR es:[rsi+0x20407bec],0x48
  44f6c8:	ins    BYTE PTR es:[rdi],dx
  44f6c9:	add    cl,BYTE PTR [rbp+0x7ad504b1]
  44f6cf:	sub    edi,0x6cb36533
  44f6d5:	stc    
  44f6d6:	fld    QWORD PTR [rax-0x1c428df]
  44f6dc:	cmp    bh,cl
  44f6de:	pushf  
  44f6df:	and    ebp,DWORD PTR [rsp+rax*2+0x64]
  44f6e3:	xor    DWORD PTR [rax],ebx
  44f6e5:	sub    ch,ch
  44f6e7:	clc    
  44f6e8:	pop    rsp
  44f6e9:	shl    DWORD PTR [rip+0xffffffff9c44aaf8],0xd6        # 0xffffffff9c89a1e8
  44f6f0:	mov    dh,0x0
  44f6f2:	pop    rbx
  44f6f3:	imul   ebp,ebp,0x6cdc879a
  44f6f9:	adc    edi,ebp
  44f6fb:	scas   al,BYTE PTR es:[rdi]
  44f6fc:	mov    dh,0xcc
  44f6fe:	and    DWORD PTR [rip+0xffffffff8010f3ba],eax        # 0xffffffff8055eabe
  44f704:	ins    DWORD PTR es:[rdi],dx
  44f705:	adc    DWORD PTR [rsi+rdx*4-0x5d],eax
  44f709:	(bad)  
  44f70a:	ficomp DWORD PTR [rdx+0x6cce0409]
  44f710:	jo     0x44f6b9
  44f712:	add    al,0x22
  44f715:	rcl    BYTE PTR [rdx-0x80],cl
  44f718:	adc    al,0x84
  44f71a:	xchg   DWORD PTR [rip+0xffffffffedc89710],ebx        # 0xffffffffee0d8e30
  44f720:	or     al,0x64
  44f722:	rex.WX
  44f723:	fwait
  44f724:	movabs al,ds:0x65ed406f7d644241
  44f72d:	add    bh,al
  44f72f:	cmp    cl,BYTE PTR [rsi]
  44f731:	jns    0x44f6c4
  44f733:	pop    rsi
  44f734:	add    BYTE PTR [rdx],ah
  44f736:	lods   al,BYTE PTR ds:[rsi]
  44f737:	adc    bl,BYTE PTR [rcx+rcx*8]
  44f73a:	(bad)
  44f73e:	ds test al,0xbe
  44f741:	out    dx,al
  44f742:	(bad)  
  44f743:	sti    
  44f744:	in     eax,0x40
  44f746:	loopne 0x44f787
  44f748:	and    al,0x20
  44f74a:	sbb    dl,bl
  44f74c:	mov    ebp,0x44aca073
  44f751:	or     bl,BYTE PTR [rbx]
  44f753:	mov    cl,0x20
  44f755:	ss enter 0x6086,0xce
  44f75a:	rol    DWORD PTR [rdi],1
  44f75c:	in     eax,0xe5
  44f75e:	std    
  44f75f:	add    cl,cl
  44f761:	loopne 0x44f736
  44f763:	rcl    DWORD PTR [rdx+0x20],0xab
  44f767:	leave  
  44f768:	jp     0x44f7b2
  44f76a:	push   rdi
  44f76b:	xlat   BYTE PTR ds:[rbx]
  44f76c:	jns    0x44f7ce
  44f76e:	fisub  WORD PTR [rbx]
  44f770:	add    BYTE PTR [rcx-0x6f],al
  44f773:	push   rcx
  44f774:	mov    eax,ebx
  44f776:	cmp    eax,0x3e45d703
  44f77b:	icebp  
  44f77c:	mov    eax,0x3f66503d
  44f781:	(bad)  
  44f782:	nop
  44f783:	sbb    BYTE PTR [rsi-0x4c],dh
  44f786:	repz sub eax,DWORD PTR [rbx]
  44f789:	iret   
  44f78a:	out    0x6f,eax
  44f78c:	std    
  44f78d:	push   rcx
  44f78e:	xchg   edx,eax
  44f78f:	sub    eax,ebx
  44f791:	adc    eax,ecx
  44f793:	jns    0x44f7f7
  44f795:	in     eax,0x3f
  44f797:	pop    rbx
  44f798:	cmp    ecx,DWORD PTR [rdx+0x52]
  44f79b:	xlat   BYTE PTR ds:[rbx]
  44f79c:	rex.RB xchg r10d,eax
  44f79e:	imul   edi,DWORD PTR [rsi+0x5a33eed5],0x579fee7f
  44f7a8:	pop    rcx
  44f7a9:	jg     0x44f77d
  44f7ab:	mov    cl,0xda
  44f7ad:	ror    bh,1
  44f7af:	fild   DWORD PTR [rax+rdi*4]
  44f7b2:	(bad)  
  44f7b3:	mov    esp,0x6a9b362a
  44f7b8:	push   rbx
  44f7b9:	gs sub cl,cl
  44f7bc:	mov    al,0xe9
  44f7be:	test   DWORD PTR [rdx],0xb628d876
  44f7c4:	jge    0x44f794
  44f7c6:	(bad)  
  44f7c7:	rex.R std 
  44f7c9:	sub    eax,0xfbb27b01
  44f7ce:	stc    
  44f7cf:	xchg   bh,ah
  44f7d1:	cmp    ch,al
  44f7d3:	out    0xed,eax
  44f7d5:	rex.X cmc 
  44f7d7:	(bad)  
  44f7d8:	mov    ah,0xca
  44f7da:	or     edx,ebp
  44f7dc:	movabs eax,ds:0x8d419cdc804cfa1c
  44f7e5:	test   eax,0xe90393f3
  44f7ea:	jle    0x44f81a
  44f7ec:	adc    BYTE PTR [rax+rcx*8],dh
  44f7ef:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  44f7f0:	fdiv   QWORD PTR [rdx-0x3f]
  44f7f3:	movabs eax,ds:0xa34664537f215d92
  44f7fc:	test   al,0xae
  44f7fe:	(bad)  
  44f7ff:	sbb    BYTE PTR [rip+0x64d881a0],al        # 0x651d79a5
  44f805:	(bad)  
  44f806:	sbb    eax,0x7cfb573b
  44f80b:	xor    eax,DWORD PTR [rbx]
  44f80d:	movsxd esi,DWORD PTR [rax-0x779e7f6b]
  44f813:	add    esp,DWORD PTR [rip+0x7ca79f1c]        # 0x7cec9735
  44f819:	jns    0x44f86a
  44f81b:	mov    ebx,0x2a3c3e86
  44f820:	rex xchg eax,eax
  44f822:	int    0xb4
  44f824:	jg     0x44f7d1
  44f826:	sbb    al,0x67
  44f828:	pop    rsi
  44f829:	(bad)  
  44f82a:	add    BYTE PTR [rdx-0xb],cl
  44f82d:	loope  0x44f868
  44f82f:	mov    BYTE PTR [rip+0xffffffff9f04db1b],ch        # 0xffffffff9f49d350
  44f835:	rcr    dh,0x4c
  44f838:	fwait
  44f839:	jne    0x44f847
  44f83b:	sti    
  44f83c:	adc    BYTE PTR [rax-0x5c],al
  44f83f:	xchg   ebx,eax
  44f840:	lea    eax,[rsp+rsi*4]
  44f843:	jmp    0x44f81d
  44f845:	fcomp  DWORD PTR [rbx+0x59]
  44f848:	data16 rex.WRX and rax,0xffffffff805411b8
  44f84f:	stos   BYTE PTR es:[rdi],al
  44f850:	(bad)  
  44f851:	out    dx,al
  44f852:	adc    eax,0x5cb828dc
  44f857:	(bad)  
  44f858:	mov    esp,0x2bb47195
  44f85d:	mov    edx,DWORD PTR [rbx]
  44f85f:	add    ah,BYTE PTR [rip+0xffffffff852a8227]        # 0xffffffff856f7a8c
  44f865:	mov    DWORD PTR [rdx-0x1d39a60e],esp
  44f86b:	rex.WRXB pop r9
  44f86d:	sahf   
  44f86e:	fimul  DWORD PTR [rbx]
  44f870:	(bad)  
  44f871:	ror    DWORD PTR [rdi-0x7f614dec],0x43
  44f878:	cmp    BYTE PTR [rcx],al
  44f87a:	(bad)  
  44f87b:	mov    bh,0x4
  44f87d:	(bad)  
  44f87e:	stos   DWORD PTR es:[rdi],eax
  44f87f:	movsxd ecx,DWORD PTR [rcx-0x1fcda13]
  44f885:	shl    DWORD PTR [rdi],1
  44f887:	xchg   ebp,eax
  44f888:	shr    BYTE PTR [rdx+0x40],0xb4
  44f88c:	add    al,0xab
  44f88e:	jge    0x44f894
  44f890:	neg    eax
  44f892:	sbb    BYTE PTR [rdi],0x8
  44f895:	jrcxz  0x44f8be
  44f897:	add    ah,dl
  44f899:	mov    bl,0x18
  44f89b:	or     al,0xed
  44f89d:	rex.X movabs al,ds:0xd6e095e6333e5264
  44f8a7:	add    eax,0xaec06abf
  44f8ad:	(bad)  
  44f8ae:	or     DWORD PTR [rsi+0x15],ebx
  44f8b1:	adc    BYTE PTR [rsi],dl
  44f8b3:	out    0xea,eax
  44f8b5:	mov    edi,0xf88f2171
  44f8ba:	xor    DWORD PTR [rsi],ecx
  44f8bc:	in     al,0x20
  44f8be:	sbb    ch,BYTE PTR [rdx-0x513f6ad3]
  44f8c4:	cmp    BYTE PTR [rip+0x55f5d991],0x8d        # 0x563ad25c
  44f8cb:	stos   QWORD PTR es:[rdi],rax
  44f8cd:	cli    
  44f8ce:	lock fisubr WORD PTR [rbx-0x5ab6ed82]
  44f8d5:	mov    esp,0x640c4144
  44f8da:	mov    ah,0x97
  44f8dc:	(bad)  
  44f8dd:	mov    bh,0xd
  44f8df:	(bad)  
  44f8e0:	out    dx,al
  44f8e1:	and    al,0x1f
  44f8e3:	mov    dl,0xb7
  44f8e5:	in     al,dx
  44f8e6:	ja     0x44f934
  44f8e8:	xor    BYTE PTR [rbx],bh
  44f8ea:	in     eax,0x98
  44f8ec:	loope  0x44f967
  44f8ee:	or     edi,DWORD PTR [rcx]
  44f8f0:	xchg   BYTE PTR [rip+0x557641f9],bl        # 0x55bb3aef
  44f8f6:	adc    eax,0x2a6d3aaa
  44f8fb:	(bad)  
  44f8fc:	std    
  44f8fd:	rcr    BYTE PTR [rsi-0x4ea3a7ae],cl
  44f903:	movabs ds:0x2578aed7f65269ea,eax
  44f90c:	fs enter 0xf92b,0x38
  44f911:	(bad)  
  44f912:	(bad)  
  44f913:	rex.WRX cli 
  44f915:	ds out dx,al
  44f917:	or     DWORD PTR [rcx-0x35b62ea0],eax
  44f91d:	ins    BYTE PTR es:[rdi],dx
  44f91e:	movabs ds:0x7d4042d1e5284a4a,eax
  44f927:	sbb    BYTE PTR [rdx+rax*1+0x33818320],dl
  44f92e:	test   BYTE PTR [rax-0x10],ah
  44f931:	rex.WX fldcw WORD PTR [rax]
  44f934:	mov    ebx,0x2f4995cf
  44f939:	or     dl,BYTE PTR [rax+0x2ce9105b]
  44f93f:	xchg   edi,edi
  44f941:	and    BYTE PTR [rax],dl
  44f943:	lock sti 
  44f945:	(bad)  [rip+0x724c8208]        # 0x72917b53
  44f94b:	cli    
  44f94c:	loopne 0x44f932
  44f94e:	add    al,0x7e
  44f950:	sbb    eax,0xfd72acab
  44f955:	adc    eax,DWORD PTR [rbx]
  44f957:	pop    r14
  44f959:	sti    
  44f95a:	add    eax,0x35dbfbd4
  44f95f:	sbb    BYTE PTR [rcx-0x60],dl
  44f962:	sahf   
  44f963:	pushf  
  44f964:	rex.WX movabs rax,ds:0x54102fbbc8ac11da
  44f96e:	push   rsp
  44f96f:	popf   
  44f970:	add    edi,DWORD PTR [rdi+0x11]
  44f973:	or     BYTE PTR [rsi],ah
  44f975:	mov    dh,0xa9
  44f977:	movsxd edx,DWORD PTR [rcx+0x13cf4188]
  44f97d:	sub    bl,ch
  44f97f:	nop
  44f980:	rex.WXB sbb QWORD PTR [r10],rbp
  44f983:	jae    0x44f99f
  44f985:	movabs ds:0x2f05678a2a20826c,eax
  44f98e:	(bad)  
  44f98f:	push   rsi
  44f990:	pop    rbx
  44f991:	(bad)  
  44f992:	mov    ebp,0x644024fc
  44f997:	and    al,al
  44f999:	(bad)  
  44f99b:	or     DWORD PTR [rbx],0x6
  44f99e:	jrcxz  0x44f9ca
  44f9a0:	gs ins BYTE PTR es:[rdi],dx
  44f9a2:	(bad)  
  44f9a3:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  44f9a4:	(bad)  
  44f9a5:	pop    rbx
  44f9a6:	add    esp,DWORD PTR [rax+rax*2-0x10]
  44f9aa:	xchg   ebx,eax
  44f9ab:	pushf  
  44f9ac:	sbb    ah,BYTE PTR [rax]
  44f9ae:	es sti 
  44f9b0:	retf   
  44f9b1:	mov    al,0xd7
  44f9b3:	ins    DWORD PTR es:[rdi],dx
  44f9b4:	xlat   BYTE PTR ds:[rbx]
  44f9b5:	(bad)  
  44f9b6:	mov    esp,0xd8f548
  44f9bb:	xor    DWORD PTR [rbx+rcx*4],ebx
  44f9be:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  44f9bf:	cld    
  44f9c0:	and    ah,BYTE PTR [rbx]
  44f9c2:	push   rsp
  44f9c3:	fldcw  WORD PTR [rsi+0x584208bf]
  44f9c9:	stc    
  44f9ca:	(bad)  
  44f9cb:	adc    DWORD PTR [rcx+0x4eb9d64e],0x9dbf836b
  44f9d5:	(bad)  
  44f9d6:	pop    rsi
  44f9d7:	fcomp  DWORD PTR [rsi-0x66e6ef30]
  44f9dd:	rex.WRX pop rbx
  44f9df:	mov    dl,0xe
  44f9e1:	(bad)  
  44f9e2:	or     ah,cl
  44f9e4:	(bad)  
  44f9e5:	xor    eax,DWORD PTR [rdx-0x789dfa54]
  44f9eb:	cmp    eax,0x42c40216
  44f9f0:	(bad)
  44f9f5:	scas   al,BYTE PTR es:[rdi]
  44f9f6:	retf   0x6cd4
  44f9f9:	lods   al,BYTE PTR ds:[rsi]
  44f9fa:	repnz test eax,0x411daa6c
  44fa00:	mov    es,esp
  44fa02:	(bad)  
  44fa03:	sbb    cl,dh
  44fa05:	push   rsi
  44fa06:	sbb    ecx,DWORD PTR [rbp+rcx*2+0x2202577f]
  44fa0d:	and    dl,al
  44fa0f:	adc    DWORD PTR [rsi+0x55bd9562],esi
  44fa15:	pop    rcx
  44fa16:	xchg   DWORD PTR [rdi],eax
  44fa18:	jg     0x44fa2c
  44fa1a:	mov    cl,dl
  44fa1c:	movabs ds:0x623ced08b1d75da,eax
  44fa25:	cld    
  44fa26:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  44fa27:	pop    rdx
  44fa28:	lods   al,BYTE PTR ds:[rsi]
  44fa29:	jle    0x44f9b6
  44fa2b:	sbb    eax,0x2c5b0595
  44fa30:	(bad)  
  44fa31:	ins    BYTE PTR es:[rdi],dx
  44fa32:	cmp    esi,esi
  44fa34:	add    esp,edx
  44fa36:	adc    DWORD PTR [rbx-0xf],ecx
  44fa39:	es div DWORD PTR es:[rip+0xffffffffbf5e43fc]        # 0xffffffffbfa33e3d
  44fa41:	sbb    DWORD PTR [rax+0x530207cb],esi
  44fa47:	xor    eax,0xe3f97e
  44fa4c:	pop    rdi
  44fa4d:	jo     0x44fa56
  44fa4f:	jl     0xffffffffa66838fa
  44fa55:	xlat   BYTE PTR ds:[rbx]
  44fa56:	or     al,bh
  44fa58:	mov    edi,0xcadc6d08
  44fa5d:	jnp    0x44fadc
  44fa5f:	and    BYTE PTR [rbx+rsi*4+0x3a],bl
  44fa63:	xor    ah,cl
  44fa65:	je     0x44f9ef
  44fa67:	and    DWORD PTR [rsi+r10*1-0xf8ae7c9],r10d
  44fa6f:	xor    al,0xf9
  44fa71:	sti    
  44fa72:	lar    esp,WORD PTR [rbp-0x4d]
  44fa76:	repnz out 0xfa,eax
  44fa79:	shr    ebp,0x3
  44fa7c:	mov    ah,BYTE PTR [rax+0x2dba52b4]
  44fa82:	(bad)  
  44fa83:	outs   dx,DWORD PTR ds:[rsi]
  44fa84:	or     dl,BYTE PTR [rsp+rdi*1+0x301abfc8]
  44fa8b:	(bad)  
  44fa8c:	jo     0x44fae1
  44fa8e:	(bad)  
  44fa8f:	(bad)  
  44fa90:	ins    BYTE PTR es:[rdi],dx
  44fa91:	outs   dx,DWORD PTR gs:[rsi]
  44fa93:	cmp    DWORD PTR [rax+0x61],0xfffffff0
  44fa97:	(bad)  
  44fa98:	loopne 0x44faab
  44fa9a:	add    DWORD PTR [rdx-0x379df817],esp
  44faa0:	jl     0x44fab6
  44faa2:	push   rbp
  44faa3:	loopne 0x44fab5
  44faa5:	xchg   edx,eax
  44faa6:	sub    eax,DWORD PTR [rsi]
  44faa8:	adc    al,0x1a
  44faaa:	retf   0x1c89
  44faad:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  44faae:	lods   al,BYTE PTR ds:[rsi]
  44faaf:	adc    eax,0x4158453c
  44fab4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  44fab5:	sub    eax,0x82548a4a
  44faba:	out    dx,al
  44fabb:	pushf  
  44fabc:	or     eax,0xcdfc0c54
  44fac1:	cmp    dh,al
  44fac3:	add    ebp,DWORD PTR [rdx]
  44fac5:	add    ebp,ebp
  44fac7:	(bad)  
  44fac8:	(bad)  
  44fac9:	in     al,dx
  44faca:	ins    BYTE PTR es:[rdi],dx
  44facb:	loopne 0x44fb49
  44facd:	mov    r8b,al
  44fad0:	add    al,0xc2
  44fad2:	es lock (bad) 
  44fad5:	(bad)  
  44fad6:	jo     0x44fb4a
  44fad8:	add    eax,0x7ef22bec
  44fadd:	cmp    DWORD PTR [rax+0x43],edi
  44fae0:	and    BYTE PTR [rbx+0x51],bh
  44fae3:	push   rbp
  44fae4:	(bad)  
  44fae5:	xchg   esi,eax
  44fae6:	adc    DWORD PTR [rbp+rcx*2+0x5cd71a20],ecx
  44faed:	cmp    edx,DWORD PTR [rdi-0x1]
  44faf0:	(bad)  
  44faf1:	xor    ebx,eax
  44faf3:	sbb    ecx,DWORD PTR [rax]
  44faf5:	and    al,cl
  44faf7:	stos   DWORD PTR es:[rdi],eax
  44faf8:	or     bl,cl
  44fafa:	lods   al,BYTE PTR ds:[rsi]
  44fafb:	adc    BYTE PTR [rcx],0x3b
  44fafe:	jge    0x44faa0
  44fb00:	call   0xffffffffe373c7cb
  44fb05:	jae    0x44fae0
  44fb07:	rex.WR pop rdi
  44fb09:	add    al,0xa8
  44fb0b:	and    ch,0x1f
  44fb0e:	jge    0x44fb27
  44fb10:	test   BYTE PTR [rbp-0x30],dl
  44fb14:	sub    bl,ah
  44fb16:	sbb    al,0x23
  44fb18:	mov    al,0x4
  44fb1a:	scas   eax,DWORD PTR es:[rdi]
  44fb1b:	movabs al,ds:0x4807f7f694557766
  44fb24:	push   rbp
  44fb25:	ins    DWORD PTR es:[rdi],dx
  44fb26:	mov    ecx,DWORD PTR [rcx]
  44fb28:	and    al,0xb1
  44fb2a:	mov    DWORD PTR [rcx],edx
  44fb2c:	jrcxz  0x44fb52
  44fb2e:	rex.R (bad) 
  44fb30:	or     ecx,DWORD PTR [rax]
  44fb32:	add    bl,BYTE PTR [rbx]
  44fb34:	stos   BYTE PTR es:[rdi],al
  44fb35:	mov    dl,0x10
  44fb37:	rex.RX xchg ebp,eax
  44fb39:	movabs ds:0x39b55f4204442634,eax
  44fb42:	(bad)  
  44fb43:	sub    al,0x7
  44fb45:	mov    dl,0x8e
  44fb47:	jno    0x44fb31
  44fb49:	cmp    ebx,DWORD PTR [rbx]
  44fb4b:	sbb    al,0x17
  44fb4d:	lock sbb ebx,edi
  44fb50:	mov    edi,0x67fdfda6
  44fb55:	jns    0x44fb74
  44fb57:	(bad)  
  44fb58:	movabs eax,ds:0x8dadf605129f0be
  44fb61:	(bad)  
  44fb62:	fild   WORD PTR [rdi]
  44fb64:	or     BYTE PTR [rax],cl
  44fb66:	rex.R rcr edi,0x2a
  44fb6a:	lods   eax,DWORD PTR ds:[rsi]
  44fb6b:	(bad)  
  44fb6c:	pop    rcx
  44fb6d:	mov    esp,0x1d1f7f2d
  44fb72:	cld    
  44fb73:	rex.RB
  44fb74:	sub    bpl,sil
  44fb77:	(bad)  
  44fb78:	rex.RXB jo 0x44fb5a
  44fb7b:	sar    BYTE PTR [rax-0x28],0x85
  44fb7f:	popf   
  44fb80:	clc    
  44fb81:	out    dx,eax
  44fb82:	sahf   
  44fb83:	add    DWORD PTR [rcx+0x74],esi
  44fb86:	rex.WRB scas rax,QWORD PTR es:[rdi]
  44fb88:	mov    dl,0xba
  44fb8a:	stos   BYTE PTR es:[rdi],al
  44fb8b:	rex.B fsub st(3),st
  44fb8e:	rex.XB cmc 
  44fb90:	rex.WRXB fisub WORD PTR gs:[r11]
  44fb94:	lods   eax,DWORD PTR ds:[rsi]
  44fb95:	mov    eax,0x83a25c46
  44fb9a:	mov    ah,0x2a
  44fb9c:	xor    dl,BYTE PTR [rbp+0x7ccde1f]
  44fba2:	ins    BYTE PTR es:[rdi],dx
  44fba3:	int    0xe7
  44fba5:	push   rdi
  44fba6:	(bad)  
  44fba8:	rex.WB sbb al,0x7a
  44fbab:	(bad)  
  44fbac:	xchg   ebx,eax
  44fbad:	mov    dl,0xc7
  44fbaf:	jmp    0x44fbb4
  44fbb1:	jge    0x44fb89
  44fbb3:	mov    ?,WORD PTR [rbx-0x27]
  44fbb6:	test   BYTE PTR [rax],dh
  44fbb8:	mov    bl,0xb1
  44fbba:	(bad)  
  44fbbb:	mov    cl,0x1f
  44fbbd:	ret    0x74bf
  44fbc0:	push   rdx
  44fbc1:	movabs al,ds:0xd9be0a5c9cd9e20
  44fbca:	test   al,0x3a
  44fbcc:	mov    es,WORD PTR [rbx]
  44fbce:	jne    0x44fc14
  44fbd0:	es mov cl,0x29
  44fbd3:	adc    edi,DWORD PTR [rdi+rdx*4-0x7dab6b53]
  44fbda:	sahf   
  44fbdb:	or     dh,BYTE PTR [rdx-0x34]
  44fbde:	imul   eax,DWORD PTR [rbx],0xffffffc6
  44fbe1:	pop    rax
  44fbe2:	or     DWORD PTR [rax+0xd5ac09f],ebp
  44fbe8:	test   al,0x3a
  44fbea:	clc    
  44fbeb:	pop    rbx
  44fbec:	jo     0x44fb70
  44fbee:	repnz sbb eax,0xceec8604
  44fbf4:	adc    BYTE PTR [rax+0x5b],cl
  44fbf7:	fwait
  44fbf8:	jns    0x44fbff
  44fbfa:	adc    dh,BYTE PTR [rax+0x1c]
  44fbfd:	out    0x6b,eax
  44fbff:	push   rdi
  44fc00:	xchg   esi,eax
  44fc01:	(bad)  
  44fc02:	cmp    BYTE PTR [rdi-0x8],ah
  44fc05:	(bad)  
  44fc06:	add    eax,0x30534203
  44fc0b:	jle    0x44fc1b
  44fc0d:	adc    al,0xcc
  44fc0f:	fistp  WORD PTR [rcx]
  44fc11:	mov    ah,0xad
  44fc13:	or     al,0x93
  44fc15:	push   rbp
  44fc16:	adc    BYTE PTR [rax+rcx*8+0x3c4a6808],cl
  44fc1d:	(bad)  
  44fc1e:	enter  0x3726,0xc
  44fc22:	mov    BYTE PTR [rbx],cl
  44fc24:	repnz adc eax,DWORD PTR [rdx+riz*2]
  44fc28:	push   rcx
  44fc29:	(bad)  
  44fc2a:	gs (bad) 
  44fc2c:	rex.X sbb DWORD PTR [rax],0x3f
  44fc30:	or     eax,0x395da88
  44fc35:	sti    
  44fc36:	cmp    edi,ecx
  44fc38:	cmp    BYTE PTR [rcx+rbx*1-0x4c],cl
  44fc3c:	mov    bh,0x91
  44fc3e:	lods   eax,DWORD PTR ds:[rsi]
  44fc3f:	adc    DWORD PTR [rcx+0x6caa0553],eax
  44fc45:	mov    eax,0xa8b2f1de
  44fc4a:	mov    cl,0xdc
  44fc4c:	xor    al,BYTE PTR [rax+0x64]
  44fc4f:	retf   0x4b2e
  44fc52:	inc    BYTE PTR [rdi+0x60]
  44fc55:	mov    dh,ah
  44fc57:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  44fc58:	loopne 0x44fcb8
  44fc5a:	and    eax,0xf6445012
  44fc60:	(bad)  
  44fc61:	xor    DWORD PTR [rsi],0x29
  44fc64:	mov    edi,0x632be640
  44fc69:	ficomp WORD PTR [rdi]
  44fc6b:	adc    BYTE PTR [rdx+0x59],cl
  44fc6e:	push   rsi
  44fc6f:	lahf   
  44fc70:	jg     0x44fc88
  44fc72:	or     BYTE PTR [rbp+rdx*4-0x3b],dl
  44fc76:	mov    al,0x1f
  44fc78:	sub    cl,BYTE PTR [rdi]
  44fc7a:	movabs ds:0xc76c67f9cdae64a6,al
  44fc83:	leave  
  44fc84:	and    al,0x62
  44fc86:	rex test eax,0xcae758ea
  44fc8c:	xor    ch,BYTE PTR fs:[rcx+0x295ca08d]
  44fc93:	(bad)  
  44fc94:	rex.WXB movabs ds:0xee7808c4c8db20,al
  44fc9e:	fldcw  WORD PTR [rsi]
  44fca0:	sbb    eax,0x2a712588
  44fca5:	rex.RX mov esi,0x8eca81d
  44fcab:	lods   eax,DWORD PTR ds:[rsi]
  44fcac:	jno    0x44fcc6
  44fcae:	jmp    0x44fc41
  44fcb0:	lods   eax,DWORD PTR ds:[rsi]
  44fcb1:	in     eax,dx
  44fcb2:	rex.WB
  44fcb3:	ss (bad) 
  44fcb5:	int    0x67
  44fcb7:	enter  0x712b,0x20
  44fcbb:	outs   dx,BYTE PTR ds:[rsi]
  44fcbc:	sbb    eax,0x62c4d883
  44fcc1:	xor    DWORD PTR [rax],esp
  44fcc3:	fdiv   st(3),st
  44fcc5:	(bad)  
  44fcc6:	(bad)  
  44fcc7:	mov    bpl,0x24
  44fcca:	sbb    edx,DWORD PTR [rdx]
  44fccc:	add    dh,BYTE PTR [rcx-0x7c]
  44fccf:	rex.WR cld 
  44fcd1:	lods   eax,DWORD PTR ds:[rsi]
  44fcd2:	pop    rdx
  44fcd3:	adc    eax,0xa844ec73
  44fcd8:	fadd   DWORD PTR [rbx]
  44fcda:	mov    DWORD PTR [rcx-0x2879ca29],edx
  44fce0:	push   rsi
  44fce1:	cmp    eax,0x8afc5e38
  44fce6:	movabs ds:0x9126c6b1dcfa3ed,eax
  44fcef:	rex.X
  44fcf0:	repz lahf 
  44fcf2:	or     al,0x8d
  44fcf4:	(bad)  
  44fcf5:	loop   0x44fd15
  44fcf7:	xchg   ecx,eax
  44fcf8:	stc    
  44fcf9:	in     al,dx
  44fcfa:	popf   
  44fcfb:	xchg   ebx,eax
  44fcfc:	(bad)  
  44fcfd:	rex.R pop rcx
  44fcff:	adc    ch,cl
  44fd01:	jbe    0x44fd75
  44fd03:	mov    dl,0x80
  44fd05:	mov    dh,0x64
  44fd07:	outs   dx,DWORD PTR ds:[rsi]
  44fd08:	push   0x46
  44fd0a:	ins    DWORD PTR es:[rdi],dx
  44fd0b:	ins    BYTE PTR es:[rdi],dx
  44fd0c:	fisttp WORD PTR [rax]
  44fd0e:	test   al,0x4
  44fd10:	out    0x1c,eax
  44fd12:	adc    eax,0x2c4a5a08
  44fd17:	and    BYTE PTR [rdi+rcx*2],bl
  44fd1a:	jne    0x44fd54
  44fd1c:	xchg   ebx,eax
  44fd1d:	cmp    BYTE PTR [rdi-0x7a],dl
  44fd21:	rex.R jp 0x44fcce
  44fd24:	sub    ebp,DWORD PTR [rbx-0x45afcaa1]
  44fd2a:	xor    BYTE PTR [rdi+riz*1],ah
  44fd2d:	fdivr  QWORD PTR [rax]
  44fd2f:	cmp    BYTE PTR [rdx],ah
  44fd31:	cwde   
  44fd32:	(bad)  
  44fd34:	cmc    
  44fd35:	mov    edi,0x716475da
  44fd3a:	ins    DWORD PTR es:[rdi],dx
  44fd3b:	or     edi,esi
  44fd3d:	sti    
  44fd3e:	add    al,0x94
  44fd40:	shr    BYTE PTR [rbx-0x1f],cl
  44fd43:	fidivr WORD PTR [rcx+0xf]
  44fd46:	xchg   esp,eax
  44fd47:	in     eax,dx
  44fd48:	(bad)  
  44fd49:	or     eax,0xa6d424a
  44fd4e:	pop    rdx
  44fd4f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  44fd50:	jae    0x44fd7f
  44fd52:	xlat   BYTE PTR ds:[rbx]
  44fd53:	jne    0x44fd92
  44fd55:	shr    DWORD PTR [rsi-0x6d],0x19
  44fd59:	gs (bad) 
  44fd5b:	or     ch,BYTE PTR [rsp+rbp*1-0x56]
  44fd5f:	mov    ecx,DWORD PTR [rbp+0x5cfe3588]
  44fd65:	or     DWORD PTR [rax+0x7314428c],ebp
  44fd6b:	lahf   
  44fd6c:	mov    ecx,0x325c6d09
  44fd71:	sti    
  44fd72:	add    al,0xda
  44fd74:	mov    esi,0x6a824c60
  44fd79:	(bad)  
  44fd7a:	ins    DWORD PTR es:[rdi],dx
  44fd7b:	mov    BYTE PTR [rsi+rsi*2+0x618a8008],bl
  44fd82:	pop    rdx
  44fd83:	pop    rdi
  44fd84:	fdiv   DWORD PTR [rbx+rdi*2+0x30]
  44fd88:	sbb    esi,DWORD PTR [rax+0x36]
  44fd8b:	add    DWORD PTR [rsi+riz*2],esp
  44fd8e:	or     BYTE PTR [rcx-0x1d],ah
  44fd91:	pop    rdi
  44fd92:	(bad)  
  44fd93:	jns    0x44fe13
  44fd95:	cmp    BYTE PTR [rdx*8-0x7304bd32],0x9d
  44fd9d:	in     eax,dx
  44fd9e:	cmp    ebp,DWORD PTR [rbp-0x60]
  44fda1:	cli    
  44fda2:	or     BYTE PTR [r11-0x4deceb20],bl
  44fda9:	neg    DWORD PTR [rsi+0x6a643d80]
  44fdaf:	idiv   BYTE PTR [rcx+0x48bae079]
  44fdb5:	cmp    ah,0x88
  44fdb8:	ins    DWORD PTR es:[rdi],dx
  44fdb9:	and    edi,DWORD PTR [rsi-0x6]
  44fdbc:	or     eax,0xb5b3b848
  44fdc1:	lods   eax,DWORD PTR ds:[rsi]
  44fdc2:	jge    0x44fe02
  44fdc4:	(bad)  
  44fdc5:	imul   edi,DWORD PTR [rsi+0x100457e6],0x27
  44fdcc:	mov    dl,0x8b
  44fdce:	rex jge 0x44fe26
  44fdd1:	sub    BYTE PTR [rdx+rdi*8],0x48
  44fdd5:	xor    al,0xf9
  44fdd7:	(bad)  
  44fdd8:	jns    0x44fe11
  44fdda:	imul   ebp,ebp,0x11f22eba
  44fde0:	push   0x7cc08b82
  44fde5:	es adc BYTE PTR cs:[rcx-0x2cfa3320],bl
  44fded:	ins    BYTE PTR es:[rdi],dx
  44fdee:	rex.RB add al,0x54
  44fdf1:	mov    eax,DWORD PTR [rbx+rax*2]
  44fdf4:	ins    BYTE PTR es:[rdi],dx
  44fdf5:	or     al,0x85
  44fdf7:	mov    dh,0x6c
  44fdf9:	jb     0x44fdcc
  44fdfb:	in     al,dx
  44fdfc:	mov    edi,0xdae08063
  44fe01:	(bad)  
  44fe02:	(bad)  
  44fe03:	test   BYTE PTR [rcx],al
  44fe05:	cmp    DWORD PTR [rdi+0x8],ecx
  44fe08:	(bad)  
  44fe09:	jae    0x44fde4
  44fe0b:	loopne 0x44fe20
  44fe0d:	jns    0x44fe5e
  44fe0f:	push   rsp
  44fe10:	sbb    eax,0xcd328a63
  44fe15:	(bad)  
  44fe16:	loop   0x44fe71
  44fe18:	(bad)  
  44fe1a:	test   al,0x8c
  44fe1c:	jne    0x44fdd1
  44fe1e:	or     DWORD PTR [rdx+0x9],edx
  44fe21:	scas   eax,DWORD PTR es:[rdi]
  44fe22:	cmp    bh,BYTE PTR [rcx-0x29]
  44fe25:	mov    ah,0x86
  44fe27:	cmp    esp,eax
  44fe29:	es rex.WXB or bpl,r8b
  44fe2d:	lea    eax,[rdx+0x1194d915]
  44fe33:	(bad)  
  44fe34:	outs   dx,BYTE PTR ds:[rsi]
  44fe35:	out    0x51,eax
  44fe37:	sbb    eax,DWORD PTR [rcx+rbx*1-0x32]
  44fe3b:	adc    eax,0x95919490
  44fe40:	mov    BYTE PTR [rdx],al
  44fe42:	rex.WB stc 
  44fe44:	mov    al,0x51
  44fe46:	mov    ebx,0xece73e93
  44fe4b:	jge    0x44fe3a
  44fe4d:	cmp    cl,dl
  44fe4f:	or     al,ah
  44fe51:	mov    ebx,0xb298c05c
  44fe56:	out    dx,eax
  44fe57:	and    edi,DWORD PTR [rsi-0x33]
  44fe5a:	jbe    0x44fe51
  44fe5c:	out    dx,eax
  44fe5d:	add    DWORD PTR [rcx+0x4499340],eax
  44fe63:	(bad)  
  44fe64:	in     eax,0xd3
  44fe66:	(bad)  
  44fe67:	rex.B
  44fe68:	rex.WB mov WORD PTR [r14+rdx*8],es
  44fe6c:	jp     0x44fe7c
  44fe6e:	sbb    edi,esi
  44fe70:	xchg   edi,eax
  44fe71:	(bad)
  44fe76:	push   rcx
  44fe77:	sub    ah,bl
  44fe79:	rex.WR sbb r10b,BYTE PTR [rdi]
  44fe7c:	rcl    DWORD PTR [rax],0x88
  44fe7f:	stos   DWORD PTR es:[rdi],eax
  44fe80:	shl    DWORD PTR [rbp+0x47],0x63
  44fe84:	js     0x44fee6
  44fe86:	(bad)  
  44fe87:	(bad)  
  44fe88:	nop
  44fe89:	xor    bl,BYTE PTR [rax+0x65]
  44fe8c:	(bad)  
  44fe8d:	push   0xffffffffffffff83
  44fe8f:	sbb    eax,0x40aef929
  44fe94:	sar    BYTE PTR [rdi],1
  44fe96:	sub    DWORD PTR [rax],esi
  44fe98:	fistp  QWORD PTR [rbp+0x46]
  44fe9b:	ror    BYTE PTR [rdi-0x7e3c1f7c],0x60
  44fea2:	rex.RX cmp al,0x19
  44fea5:	pop    rbx
  44fea6:	xchg   esi,eax
  44fea7:	rex.X push 0x221254d7
  44fead:	cdq    
  44feae:	icebp  
  44feaf:	imul   edx,DWORD PTR [rbx],0x69
  44feb2:	cmc    
  44feb3:	ret    
  44feb4:	xor    eax,0x337f505
  44feb9:	jbe    0x44feb8
  44febb:	push   rax
  44febc:	or     BYTE PTR [rax+rcx*1],0x38
  44fec0:	(bad)  
  44fec1:	ins    BYTE PTR es:[rdi],dx
  44fec2:	imul   eax,edi,0x23
  44fec5:	sbb    eax,0xef0a2241
  44feca:	or     ah,BYTE PTR [rdi+rax*2-0x39]
  44fece:	fsub   st,st(7)
  44fed0:	pop    rdx
  44fed1:	(bad)  
  44fed2:	pmuludq mm7,QWORD PTR [rbx+0x36]
  44fed6:	add    BYTE PTR [rbp+0x3191e113],dl
  44fedd:	pop    rbp
  44fede:	out    dx,eax
  44fedf:	lock sub BYTE PTR [rax],0x8a
  44fee3:	xor    eax,0xeb8d6fe5
  44fee8:	ret    0x4f79
  44feeb:	hlt    
  44feec:	fistp  WORD PTR [rip+0xfffffffff436b3f0]        # 0xfffffffff47bb2e2
  44fef2:	xchg   ebp,eax
  44fef3:	(bad)  
  44fef4:	and    BYTE PTR [rbx+0x8f485ac],cl
  44fefa:	sub    eax,DWORD PTR [rbx]
  44fefc:	scas   al,BYTE PTR es:[rdi]
  44fefd:	mov    ah,0x7d
  44feff:	retf   0x7d72
  44ff02:	and    BYTE PTR [rdx+rdi*8+0x31e37cec],al
  44ff09:	popf   
  44ff0a:	mov    ecx,0x1a12a045
  44ff0f:	fistp  DWORD PTR [rdi-0x27de43f0]
  44ff15:	cmp    ebp,eax
  44ff17:	xlat   BYTE PTR ds:[rbx]
  44ff18:	and    al,0x1f
  44ff1a:	and    DWORD PTR [rsi],esi
  44ff1c:	xchg   ecx,eax
  44ff1d:	mov    ebp,0xe216c07f
  44ff22:	rex.R cmp al,0x13
  44ff25:	push   rbx
  44ff26:	ss pop rdx
  44ff28:	or     esi,esi
  44ff2a:	add    eax,0x8bd69895
  44ff2f:	outs   dx,DWORD PTR ds:[rsi]
  44ff30:	jle    0x44ff85
  44ff32:	in     eax,dx
  44ff33:	test   al,0xec
  44ff35:	pop    rsi
  44ff36:	(bad)  
  44ff37:	mov    al,0xd5
  44ff39:	rex.RX jl 0x44ff5c
  44ff3c:	sub    bl,BYTE PTR cs:[rsi-0x5f896541]
  44ff43:	push   rdx
  44ff44:	xchg   BYTE PTR [rdx],bl
  44ff46:	fmul   DWORD PTR [rsp+rdi*2]
  44ff49:	xchg   edx,eax
  44ff4a:	adc    dl,BYTE PTR [rbp+0x128029d1]
  44ff50:	fdiv   DWORD PTR [rsi-0x2dfa33e6]
  44ff56:	std    
  44ff57:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  44ff58:	mov    dh,0x95
  44ff5a:	rex.XB xchg r12d,eax
  44ff5c:	retf   0x27f1
  44ff5f:	(bad)  
  44ff60:	fwait
  44ff61:	lahf   
  44ff62:	sub    edi,eax
  44ff64:	or     ecx,edx
  44ff66:	scas   eax,DWORD PTR es:[rdi]
  44ff67:	mov    ch,0xeb
  44ff69:	jl     0x44ffa7
  44ff6b:	scas   eax,DWORD PTR es:[rdi]
  44ff6c:	mov    bh,0x1e
  44ff6e:	pop    rbp
  44ff6f:	jrcxz  0x44ff67
  44ff71:	ins    DWORD PTR es:[rdi],dx
  44ff72:	push   rax
  44ff73:	mov    BYTE PTR [rdx],ah
  44ff75:	sub    DWORD PTR [rsi+0x64],0xffffff84
  44ff79:	cli    
  44ff7a:	pop    rsp
  44ff7b:	push   rsi
  44ff7c:	(bad)  
  44ff7d:	adc    BYTE PTR [rcx],al
  44ff7f:	push   0x63
  44ff81:	(bad)  
  44ff82:	or     ch,BYTE PTR [rdx-0x3370e49f]
  44ff88:	jle    0x44ff58
  44ff8a:	xor    al,bh
  44ff8c:	cmp    bh,bh
  44ff8e:	(bad)  
  44ff8f:	in     eax,dx
  44ff90:	and    eax,DWORD PTR [rax+riz*4+0x3ec055f9]
  44ff97:	and    eax,0xe9f51b00
  44ff9c:	jbe    0x44ffd7
  44ff9e:	push   rsi
  44ff9f:	test   eax,0x86952025
  44ffa4:	retf   0x2a45
  44ffa7:	(bad)  
  44ffa8:	test   al,0x95
  44ffaa:	out    0xda,al
  44ffac:	xchg   ecx,eax
  44ffad:	jne    0x44ff3b
  44ffaf:	pop    rbp
  44ffb0:	jo     0x44ff4c
  44ffb2:	mov    ds,WORD PTR [rax+0x27cd1343]
  44ffb8:	add    al,0x4a
  44ffba:	out    0xeb,eax
  44ffbc:	add    al,0xb2
  44ffbe:	mov    bl,0x6b
  44ffc0:	test   eax,0x26c5b474
  44ffc5:	(bad)  
  44ffc6:	(bad)  
  44ffc8:	or     al,BYTE PTR [rdx-0x3b1545dd]
  44ffce:	xor    al,0x1
  44ffd0:	add    DWORD PTR [rdi-0x43727efe],edx
  44ffd6:	scas   al,BYTE PTR es:[rdi]
  44ffd7:	mov    ebx,0xc8189c10
  44ffdc:	mov    ah,0xc7
  44ffde:	(bad)  
  44ffdf:	retf   0xd75e
  44ffe2:	push   rdi
  44ffe3:	(bad)  
  44ffe4:	adc    dh,BYTE PTR [rsi]
  44ffe6:	out    dx,eax
  44ffe7:	or     edx,edi
  44ffe9:	ins    DWORD PTR es:[rdi],dx
  44ffea:	sbb    ebp,0x1
  44ffed:	icebp  
  44ffee:	push   rsp
  44ffef:	cdq    
  44fff0:	mov    al,0x1d
  44fff2:	icebp  
  44fff3:	(bad)  
  44fff4:	ror    BYTE PTR [rax],1
  44fff6:	pop    rbp
  44fff7:	jrcxz  0x45001e
  44fff9:	and    BYTE PTR [rsi+riz*2+0xa],bh
  44fffd:	rcr    esi,0xc8
  450000:	mov    esp,fs
  450002:	mov    eax,ecx
  450004:	sub    eax,DWORD PTR [rbx-0x16bdfc9d]
  45000a:	mov    edx,0x9541c32
  45000f:	lods   eax,DWORD PTR ds:[rsi]
  450010:	rex.WRXB mov r11b,0xed
  450013:	mov    eax,0x44fafcca
  450018:	sbb    al,0x24
  45001a:	add    ah,BYTE PTR [rdx+0x3ded7ce3]
  450020:	xor    al,0xa8
  450022:	fsub   DWORD PTR [rbx+0x7]
  450025:	ins    DWORD PTR es:[rdi],dx
  450026:	sub    esi,DWORD PTR [rip+0x234103c5]        # 0x238603f1
  45002c:	(bad)  
  45002d:	mov    dl,0xa3
  45002f:	int3   
  450030:	rex.WRXB mov WORD PTR [r15-0x29a9b167],es
  450037:	lahf   
  450038:	xchg   ebp,eax
  450039:	add    al,0xe0
  45003c:	shl    BYTE PTR [rdi+rdi*2],0xb1
  450040:	iret   
  450041:	mov    bl,0x5b
  450043:	pop    rbx
  450044:	xor    ch,BYTE PTR [rbx+0x611320be]
  45004a:	xor    al,0x55
  45004c:	sti    
  45004d:	push   rsi
  45004e:	(bad)  
  45004f:	sub    ah,ah
  450051:	sbb    dh,bh
  450053:	or     ecx,DWORD PTR [rax]
  450055:	in     eax,dx
  450056:	jp     0x450071
  450058:	push   rbp
  450059:	test   DWORD PTR [rbx-0x13a8e984],ebp
  45005f:	jnp    0x45000a
  450061:	sub    edi,edx
  450063:	mov    ebp,0x3813f655
  450068:	(bad)  
  450069:	rcr    BYTE PTR [rbx],cl
  45006b:	jne    0x4500d9
  45006d:	sbb    ch,BYTE PTR [rcx]
  45006f:	(bad)  
  450070:	xchg   ebx,eax
  450071:	iret   
  450072:	(bad)  
  450073:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  450074:	jne    0x45005c
  450076:	shl    DWORD PTR [rbx+0x737aa4c6],0xc5
  45007d:	ficom  DWORD PTR [rdx+rbx*1-0x67eb920a]
  450084:	rex.RXB xor BYTE PTR ds:[r9-0x5f],r8b
  450089:	ins    DWORD PTR es:[rdi],dx
  45008a:	mov    r12b,0xde
  45008d:	cmp    DWORD PTR [rax],ecx
  45008f:	sub    esi,DWORD PTR [rbx+0x17]
  450092:	(bad)  
  450093:	sub    edi,esp
  450095:	cwde   
  450096:	mov    al,0xc3
  450098:	repz sbb DWORD PTR [rax+riz*8+0x20],edx
  45009d:	cmp    QWORD PTR [r14-0x43],r15
  4500a1:	test   ch,0xfd
  4500a4:	adc    ch,al
  4500a6:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4500a7:	hlt    
  4500a8:	ss addr32 cdq 
  4500ab:	jbe    0x4500e9
  4500ad:	cmp    ecx,DWORD PTR [rcx]
  4500af:	jle    0x45011b
  4500b1:	iret   
  4500b2:	sub    DWORD PTR [rbx-0x4da774e4],edx
  4500b8:	(bad)  
  4500b9:	in     eax,dx
  4500ba:	mov    eax,0xb49beae0
  4500bf:	leave  
  4500c0:	lock (bad) 
  4500c2:	and    QWORD PTR [rbx-0x6bb555],rsi
  4500c9:	call   QWORD PTR [rsi]
  4500cb:	sub    al,0x7
  4500cd:	jnp    0x450051
  4500cf:	mov    ebp,0xe63a9201
  4500d4:	(bad)  
  4500d5:	add    DWORD PTR [rcx-0x408cf9c0],eax
  4500db:	jno    0x45009c
  4500dd:	xchg   ecx,eax
  4500de:	mov    eax,0x217ea0b2
  4500e3:	sub    ebx,ebx
  4500e5:	iret   
  4500e6:	(bad)  
  4500e7:	rex.WX fst DWORD PTR [rdx]
  4500ea:	push   rcx
  4500eb:	movsxd esi,DWORD PTR [rcx-0x52]
  4500ee:	in     al,dx
  4500ef:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4500f0:	jl     0x4500c5
  4500f2:	mov    dh,0xec
  4500f4:	mov    dh,0x3f
  4500f6:	adc    BYTE PTR [rdx+rax*1+0x2b61864a],al
  4500fd:	fstp   DWORD PTR [rbx-0xf9403b0]
  450103:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  450104:	rex jbe 0x4500b5
  450107:	jmp    0x450133
  450109:	imul   ebp,DWORD PTR [rbp+0x32],0x4c434a88
  450110:	cwde   
  450111:	mov    dl,0xd4
  450113:	out    0xfa,eax
  450115:	stos   DWORD PTR es:[rdi],eax
  450116:	cld    
  450117:	mov    ebp,0xc577db42
  45011c:	mov    esp,0x446ab822
  450121:	(bad)  
  450122:	fs cmp eax,0xe7c6c102
  450128:	sbb    eax,0x2be7579c
  45012d:	jnp    0x450108
  45012f:	sahf   
  450130:	mov    edi,0xd87e239c
  450135:	clc    
  450136:	lods   eax,DWORD PTR ds:[rsi]
  450137:	cmp    DWORD PTR [rcx],0x752fb0e0
  45013d:	(bad)  
  45013e:	add    DWORD PTR [rbx-0x3547ee7f],edx
  450144:	in     al,dx
  450145:	imul   esp,edi,0xffffffbd
  450148:	mov    al,BYTE PTR [rax+rdx*4-0x3b75c358]
  45014f:	push   rbp
  450150:	sbb    eax,0xec9f66ce
  450155:	retf   
  450156:	(bad)  
  450157:	fild   DWORD PTR [rdi-0x3]
  45015a:	rex outs dx,BYTE PTR ds:[rsi]
  45015c:	rex.X lods al,BYTE PTR ds:[rsi]
  45015e:	jb     0x450141
  450160:	(bad)  
  450161:	jno    0x450109
  450163:	sbb    bl,al
  450165:	xlat   BYTE PTR ds:[rbx]
  450166:	cli    
  450167:	rex.X mov eax,0x6072ed08
  45016d:	sbb    ah,BYTE PTR [rdx]
  45016f:	jmp    0x47a2b2f1
  450174:	(bad)  
  450175:	mov    DWORD PTR [rax+0x1823bfac],ecx
  45017b:	repz out dx,al
  45017d:	jp     0x45016c
  45017f:	cmp    al,0xa4
  450181:	(bad)  
  450182:	push   rdi
  450183:	stos   DWORD PTR es:[rdi],eax
  450184:	ds ror esi,cl
  450187:	xlat   BYTE PTR ds:[rbx]
  450188:	add    eax,edx
  45018a:	jns    0x45019e
  45018c:	jno    0x4501eb
  45018e:	int3   
  45018f:	rex xchg esp,eax
  450191:	cwde   
  450192:	xchg   esp,eax
  450193:	out    0xfa,al
  450195:	adc    edx,0xd4f14953
  45019b:	adc    BYTE PTR [rdx+0x5381a070],0x56
  4501a2:	add    DWORD PTR [rsi+0x53],ebp
  4501a5:	(bad)  
  4501a6:	xor    al,cl
  4501a8:	loope  0x45016b
  4501aa:	data16 or BYTE PTR [rbx],bh
  4501ad:	cmp    al,0x86
  4501af:	mov    cl,0x64
  4501b1:	pop    rbp
  4501b2:	or     bh,BYTE PTR [rax]
  4501b4:	xor    esp,ecx
  4501b6:	jl     0x4501dd
  4501b8:	in     eax,0x51
  4501ba:	adc    DWORD PTR [r14+0x20],edx
  4501be:	frstor [rsi+0x13]
  4501c1:	xlat   BYTE PTR ds:[rbx]
  4501c2:	movabs eax,ds:0xfad324e6bc87fa6c
  4501cb:	(bad)  
  4501ce:	rol    dh,cl
  4501d0:	add    DWORD PTR [rdx+0x38633366],0xa2538e5f
  4501da:	lods   eax,DWORD PTR ds:[rsi]
  4501db:	add    eax,0x439d48b2
  4501e0:	(bad)  
  4501e1:	(bad)  
  4501e2:	adc    eax,0x84e0fec
  4501e7:	xchg   esp,eax
  4501e8:	repz jmp 0x4501f4
  4501eb:	xor    BYTE PTR [rcx],0x6f
  4501ee:	sete   BYTE PTR [rsi+0x6599491c]
  4501f5:	je     0x4501ed
  4501f7:	cs sti 
  4501f9:	(bad)  
  4501fa:	fwait
  4501fb:	jno    0x4501c8
  4501fd:	push   0x44
  4501ff:	push   rcx
  450200:	stc    
  450201:	jl     0x450191
  450203:	movabs al,ds:0x6120b223ed69da4a
  45020c:	add    esp,ebp
  45020e:	out    dx,al
  45020f:	lock cmp ah,ah
  450212:	rcr    DWORD PTR [rsi],cl
  450214:	fcomi  st,st(2)
  450216:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  450217:	retf   0x14c2
  45021a:	sub    BYTE PTR [rax],0xe8
  45021d:	(bad)  
  45021e:	fwait
  45021f:	lock sub eax,DWORD PTR [rdx-0x696d7ce0]
  450226:	(bad)  
  450228:	or     eax,0x913c7021
  45022d:	rcr    BYTE PTR [rdi],1
  45022f:	sbb    DWORD PTR [rsi-0x4a],ecx
  450232:	adc    esp,DWORD PTR [rax+rcx*8-0x52]
  450236:	xor    al,0x16
  450238:	(bad)  
  450239:	mov    eax,DWORD PTR [rcx+0x642c4ecc]
  45023f:	jno    0x450243
  450241:	rex.WRXB (bad) 
  450243:	hlt    
  450244:	add    esi,ecx
  450246:	add    eax,0xe32044b3
  45024b:	(bad)  
  45024c:	add    eax,0xf873b732
  450251:	add    ecx,ecx
  450253:	push   rsp
  450254:	adc    edx,esp
  450256:	movabs ds:0x2bb01957bc999eaa,eax
  45025f:	push   rcx
  450260:	(bad)  
  450261:	(bad)  
  450262:	ins    DWORD PTR es:[rdi],dx
  450263:	mov    edx,0x48077fde
  450268:	lods   al,BYTE PTR ds:[rsi]
  450269:	popf   
  45026a:	imul   eax,DWORD PTR [rdx+0x4d],0x2c67f560
  450271:	and    al,0x7c
  450273:	mov    dh,0x2b
  450275:	and    BYTE PTR [rsi+rbp*4+0x4d],al
  450279:	adc    BYTE PTR [rbp+rcx*8+0x36033b0e],dh
  450280:	cmp    DWORD PTR [rsi],esp
  450282:	nop
  450283:	cdq    
  450284:	cmc    
  450285:	popf   
  450286:	cwde   
  450287:	and    BYTE PTR [rbp+0x141ab1e4],ch
  45028d:	jno    0x450286
  45028f:	in     eax,0xfd
  450291:	rex.WX mov al,0x3d
  450294:	push   rax
  450295:	dec    BYTE PTR [rdx-0x56441af5]
  45029b:	xchg   ecx,eax
  45029c:	jb     0x4502fd
  45029e:	mov    edi,0xd6f80c8e
  4502a3:	jno    0x45024b
  4502a5:	je     0x450293
  4502a7:	sub    DWORD PTR [rbx+0x1b],ebx
  4502aa:	(bad)
  4502ae:	mov    DWORD PTR [rdx],eax
  4502b0:	fdivr  QWORD PTR [rbp+0x12f6cf9d]
  4502b6:	mov    DWORD PTR [rdx+0x3f01c4b],ebp
  4502bc:	fwait
  4502bd:	std    
  4502be:	(bad)  
  4502c0:	cmp    DWORD PTR [rbx-0x39],ecx
  4502c3:	(bad)  
  4502c4:	fistp  WORD PTR [rdx]
  4502c6:	cmp    eax,0x39481dbe
  4502cb:	sub    DWORD PTR [rdi],ecx
  4502cd:	(bad)  
  4502ce:	push   rsi
  4502cf:	add    bh,BYTE PTR [rax+0x65]
  4502d2:	sub    bl,bl
  4502d4:	push   0x40
  4502d6:	loope  0x4502e8
  4502d8:	ins    BYTE PTR es:[rdi],dx
  4502d9:	xor    eax,DWORD PTR [rcx]
  4502db:	(bad)  
  4502dc:	ds (bad) 
  4502de:	movabs ds:0xf3ea0f2890459280,al
  4502e7:	and    ch,BYTE PTR [rax+riz*2+0x7ae631b2]
  4502ee:	and    al,0x98
  4502f0:	je     0x45035f
  4502f2:	add    esi,DWORD PTR [rip+0x2c852540]        # 0x2cca2838
  4502f8:	xor    BYTE PTR [rsi+rax*2],bh
  4502fb:	mov    al,0x1a
  4502fd:	xchg   ebx,eax
  4502fe:	lea    edi,[rdx-0x73]
  450301:	(bad)  
  450302:	(bad)  
  450304:	pop    rax
  450305:	or     al,BYTE PTR fs:[rsi-0x6dfd295c]
  45030c:	cwde   
  45030d:	mov    cl,0x99
  45030f:	xor    cl,BYTE PTR [rsi-0x3a]
  450312:	rex.RXB sbb al,0xea
  450315:	ins    DWORD PTR es:[rdi],dx
  450316:	cs in  al,0x73
  450319:	mov    ds,WORD PTR [rdi+0x281b1e0f]
  45031f:	mov    DWORD PTR [riz*2+0x3040a005],eax
  450326:	jle    0x45032c
  450328:	rex.XB pop r12
  45032a:	ror    DWORD PTR [rcx+0x28],0x95
  45032e:	popf   
  45032f:	retf   0xf7c0
  450332:	(bad)  
  450333:	(bad)  
  450334:	mov    bl,0x99
  450336:	jle    0x450371
  450338:	rex.RX cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  45033a:	sti    
  45033b:	rex.B
  45033c:	rex pop rsp
  45033e:	test   al,0xfa
  450340:	clc    
  450341:	cmp    al,0xa4
  450343:	pop    rdi
  450344:	or     BYTE PTR [rax+0x68111233],cl
  45034a:	add    DWORD PTR [rsi],esp
  45034c:	sub    BYTE PTR [rsi+0x3],dl
  45034f:	sbb    DWORD PTR [rsi+0x26],ebx
  450352:	push   rbx
  450353:	xchg   edx,eax
  450354:	sub    DWORD PTR [rbp+0x14046665],edi
  45035a:	sar    BYTE PTR [rcx+rax*4+0x64],0xd5
  45035f:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  450360:	jle    0x450373
  450362:	outs   dx,BYTE PTR ds:[rsi]
  450363:	rol    DWORD PTR [rdi],cl
  450365:	sbb    esi,DWORD PTR [rdx-0x8]
  450368:	or     al,0x51
  45036a:	and    al,0x2
  45036c:	div    BYTE PTR fs:[rdi-0x372de447]
  450373:	rex (bad) 
  450375:	mov    edi,0x2a6d122a
  45037a:	fwait
  45037b:	stos   DWORD PTR es:[rdi],eax
  45037c:	mov    ebp,0xe0bde7f3
  450381:	(bad)  
  450382:	movsx  esp,BYTE PTR [rcx]
  450385:	or     al,0x77
  450387:	or     al,bl
  450389:	rex jbe 0x450403
  45038c:	sub    eax,0x53448115
  450391:	jae    0x4503ee
  450393:	sti    
  450394:	fs mov eax,0xf41640b5
  45039a:	mov    bh,0xeb
  45039c:	or     eax,0xf5f6addb
  4503a1:	fnstsw WORD PTR [rcx+0xd1f3ab2]
  4503a7:	ins    DWORD PTR es:[rdi],dx
  4503a8:	and    ebp,esi
  4503aa:	mov    BYTE PTR [rcx],bh
  4503ac:	loope  0x45038e
  4503ae:	pop    rbx
  4503af:	mov    cl,0xf9
  4503b1:	(bad)  
  4503b2:	loopne 0x450423
  4503b4:	add    edx,DWORD PTR [rbp+0x42]
  4503b7:	xchg   ecx,eax
  4503b8:	sbb    BYTE PTR [rcx-0x3],bl
  4503bb:	in     eax,dx
  4503bc:	(bad)  
  4503bd:	fidiv  WORD PTR [rbx-0x17dd6df7]
  4503c3:	mov    al,0xbd
  4503c5:	imul   esp,esp,0xffffffef
  4503c8:	push   rdi
  4503c9:	add    eax,0x5f88a604
  4503ce:	lahf   
  4503cf:	iret   
  4503d0:	fs lahf 
  4503d2:	mov    esi,0x697827dc
  4503d7:	imul   ecx,DWORD PTR [rbx-0x44],0x7e
  4503db:	and    eax,0x81bdd630
  4503e0:	sbb    BYTE PTR [rcx+0xd],bl
  4503e3:	mov    cs,WORD PTR [rbx]
  4503e5:	jo     0x450368
  4503e7:	(bad)  
  4503e8:	mov    dh,al
  4503ea:	in     al,dx
  4503eb:	std    
  4503ec:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4503ed:	push   rdx
  4503ee:	adc    al,cl
  4503f0:	push   0x747f1cc0
  4503f5:	(bad)  
  4503f6:	ds rex
  4503f8:	rex.WRB popf 
  4503fa:	and    al,0x90
  4503fc:	push   0xfffffffffffffffb
  4503fe:	push   rcx
  4503ff:	fidivr WORD PTR [rdx+riz*1+0x40]
  450403:	jbe    0x45039e
  450405:	rol    eax,0x4
  450408:	fmul   DWORD PTR [rbx+0x2]
  45040b:	rex.B stos DWORD PTR es:[rdi],eax
  45040d:	(bad)  
  45040f:	movabs eax,ds:0xf6c704319a0205db
  450418:	xor    dl,0xcc
  45041b:	add    al,0x94
  45041d:	(bad)  
  45041e:	jne    0x4503af
  450420:	or     BYTE PTR [rsi+0x1db77c17],bh
  450426:	stos   DWORD PTR es:[rdi],eax
  450427:	add    al,0x46
  450429:	(bad)  
  45042a:	sbb    esi,DWORD PTR [rip+0x366fd352]        # 0x36b4d782
  450430:	(bad)  
  450431:	mov    edi,0x4090cb29
  450437:	jnp    0x450450
  450439:	ins    DWORD PTR es:[rdi],dx
  45043a:	xlat   BYTE PTR ds:[rbx]
  45043b:	(bad)  
  45043c:	cmp    BYTE PTR [rdx],al
  45043e:	push   rbx
  45043f:	ss xchg ecx,eax
  450441:	loope  0x450479
  450443:	push   0x5b
  450445:	nop
  450446:	retf   
  450447:	cs rex.W
  450449:	or     QWORD PTR [rbp-0x1bb235a3],rdx
  450450:	(bad)  
  450451:	cwde   
  450452:	test   cl,ah
  450454:	lahf   
  450455:	sbb    DWORD PTR [rdi+0x5],0xffffffca
  450459:	pop    rcx
  45045a:	ror    ecx,0xf1
  45045d:	retf   
  45045e:	add    DWORD PTR [rbx+0x30f34c08],ebx
  450464:	(bad)  
  450465:	xor    DWORD PTR [rdi-0x4bdda899],ebx
  45046b:	sub    edi,DWORD PTR [rax-0x5477df84]
  450471:	cmovp  ecx,DWORD PTR [rdx+0x76]
  450475:	movabs al,ds:0xe470eb9bf666e6e6
  45047e:	rex.WX and bl,dl
  450481:	scas   eax,DWORD PTR es:[rdi]
  450482:	xlat   BYTE PTR ds:[rbx]
  450483:	pop    rdi
  450484:	rex.B (bad) 
  450486:	adc    BYTE PTR [rax+rsi*4+0x1debbee6],0xab
  45048e:	rex.R jnp 0x4504f3
  450491:	lock rol BYTE PTR [rax+0x7e19658f],1
  450498:	mov    ch,0x21
  45049a:	(bad)  
  45049b:	test   BYTE PTR [rax],0x9
  45049e:	push   rdi
  45049f:	or     DWORD PTR [rbx+0x4110b6b4],0x30
  4504a6:	jmp    0xfffffffffb9eb74a
  4504ab:	mov    al,0x96
  4504ae:	in     al,dx
  4504af:	rex.WR (bad) 
  4504b1:	push   rbp
  4504b2:	cmp    BYTE PTR [rdi+0x9],cl
  4504b5:	retf   0x8fbf
  4504b8:	iret   
  4504b9:	sti    
  4504ba:	addr32 mov ah,0x63
  4504bd:	(bad)  
  4504be:	(bad)  
  4504bf:	out    0x27,eax
  4504c1:	fsubr  DWORD PTR ss:[rdi]
  4504c4:	rex stos DWORD PTR es:[rdi],eax
  4504c6:	lods   eax,DWORD PTR ds:[rsi]
  4504c7:	(bad)  
  4504c8:	jg     0x450457
  4504ca:	in     eax,0x61
  4504cc:	lods   eax,DWORD PTR ds:[rsi]
  4504cd:	pop    rbp
  4504ce:	jge    0x450462
  4504d0:	(bad)  
  4504d1:	(bad)  
  4504d2:	(bad)  
  4504d3:	push   rdx
  4504d4:	cs (bad) 
  4504d6:	scas   eax,DWORD PTR es:[rdi]
  4504d7:	jl     0x4f7fb132
  4504dd:	xchg   si,ax
  4504df:	(bad)  [rcx-0x56e8c4e0]
  4504e5:	fdivr  DWORD PTR [rbx+0x4c]
  4504e8:	sub    BYTE PTR [rsi+0x74],bh
  4504eb:	or     al,0x52
  4504ed:	retf   0x9372
  4504f0:	in     al,dx
  4504f1:	(bad)  
  4504f2:	sub    ah,BYTE PTR ds:[rcx]
  4504f5:	ret    0x6c75
  4504f8:	sub    BYTE PTR [rax],0x38
  4504fb:	shl    BYTE PTR [rsi+0x113e02fb],0xff
  450502:	or     dh,cl
  450504:	jbe    0x450549
  450506:	(bad)  
  450507:	(bad)  
  450508:	fist   DWORD PTR [rbx]
  45050a:	(bad)  
  45050b:	sub    cl,BYTE PTR [rbx]
  45050d:	cmp    al,0x11
  45050f:	(bad)  
  450510:	(bad)  
  450511:	fwait
  450512:	jb     0x450551
  450514:	mov    dh,0x35
  450516:	data16 jno 0x45057a
  450519:	(bad)  
  45051b:	je     0x4504ab
  45051d:	lods   al,BYTE PTR ds:[rsi]
  45051e:	cld    
  45051f:	(bad)  
  450520:	cmp    eax,0x32081492
  450526:	jnp    0x4505a3
  450528:	jge    0x4504ff
  45052a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  45052b:	mov    ?,WORD PTR [rbx]
  45052d:	cmp    al,0xa7
  45052f:	push   rdx
  450530:	cmp    eax,0xb828069b
  450535:	rex.RX pushf 
  450537:	rex.W
  450538:	rex.WB
  450539:	xadd   DWORD PTR gs:[rbx+0x55],ecx
  45053e:	ficom  WORD PTR [rdx]
  450540:	enter  0x6ce,0x64
  450544:	xor    BYTE PTR [rax-0x22c102b3],cl
  45054a:	ficomp WORD PTR [rbx+0x1b4cf803]
  450550:	outs   dx,DWORD PTR ds:[rsi]
  450551:	or     ebp,DWORD PTR [rax-0x1373865b]
  450557:	jae    0x4505d5
  450559:	lock mov eax,eax
  45055c:	pop    rsp
  45055d:	mov    esi,0x50177f40
  450563:	pop    rdx
  450564:	(bad)  
  450565:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  450566:	push   rsi
  450567:	or     BYTE PTR [rsi],cl
  450569:	xlat   BYTE PTR ds:[rbx]
  45056a:	or     eax,0x4c81928
  45056f:	retf   0xcb88
  450572:	add    al,0x97
  450574:	ins    DWORD PTR es:[rdi],dx
  450575:	lock mov esi,0xf299f6fe
  45057b:	retf   0x5520
  45057e:	adc    eax,DWORD PTR [rdx-0x110fd935]
  450584:	(bad)  
  450585:	or     BYTE PTR [rdx+rax*2],dh
  450588:	movabs eax,ds:0x13dbc658180f992c
  450591:	xor    BYTE PTR [rdx],dh
  450593:	xchg   edx,eax
  450594:	or     edx,DWORD PTR [rsi]
  450596:	rol    DWORD PTR [rax-0x69ec6b7c],0x3
  45059d:	jrcxz  0x450544
  45059f:	xor    BYTE PTR [rbp-0x4b7835af],0xb6
  4505a6:	mov    ah,0x89
  4505a8:	js     0x45056e
  4505aa:	or     dl,cl
  4505ac:	xchg   ebp,eax
  4505ad:	rex.WRX xor r10b,al
  4505b0:	xor    al,0x22
  4505b2:	cmp    DWORD PTR [rsi-0x60],ecx
  4505b5:	std    
  4505b6:	cmp    al,0x10
  4505b8:	call   0xffffffffacbd6c3f
  4505bd:	jle    0x450611
  4505bf:	call   QWORD PTR [rdi]
  4505c1:	rex.WR clc 
  4505c3:	lods   al,BYTE PTR ds:[rsi]
  4505c4:	mov    ss,WORD PTR [rbx-0x6]
  4505c7:	retf   0xe692
  4505ca:	pop    rbx
  4505cb:	ficomp DWORD PTR [rbx-0x363dd28a]
  4505d1:	outs   dx,BYTE PTR ds:[rsi]
  4505d2:	retf   0xe359
  4505d5:	jnp    0x45064e
  4505d7:	shl    BYTE PTR [rdi],0x36
  4505da:	jle    0x45060d
  4505dc:	outs   dx,BYTE PTR ds:[rsi]
  4505dd:	jle    0x450619
  4505df:	push   rdi
  4505e0:	imul   eax,DWORD PTR [rbx+0x37c4c800],0x6c
  4505e7:	jg     0x450588
  4505e9:	cmp    DWORD PTR [rdi-0x3bf7184],ebp
  4505ef:	rex.WRB movabs r8,0x220980256c9b4790
  4505f9:	xor    DWORD PTR [rax-0x1bce9a2f],edx
  4505ff:	rex.R xchg edx,eax
  450601:	fnstenv [rsi-0x32]
  450604:	rex.WX pop rsi
  450606:	gs push rbp
  450608:	push   rbx
  450609:	and    al,0x4
  45060b:	xchg   edx,eax
  45060c:	std    
  45060d:	fs cld 
  45060f:	mov    cl,0x8d
  450611:	fcom   DWORD PTR [rax-0x5dcb9b31]
  450617:	loop   0x4505d6
  450619:	jae    0x450624
  45061b:	or     eax,DWORD PTR [rcx]
  45061d:	nop
  45061e:	adc    BYTE PTR [rsi-0x763eab1d],al
  450624:	(bad)  
  450625:	in     eax,dx
  450626:	adc    DWORD PTR [rdi+0x71],edx
  450629:	ret    
  45062a:	pop    rdi
  45062b:	mov    dl,0x14
  45062d:	icebp  
  45062e:	adc    al,0x3f
  450630:	rex.R mov eax,0xda5f11ce
  450636:	jrcxz  0x45062f
  450638:	loope  0x450638
  45063a:	mov    cl,0xed
  45063c:	nop
  45063d:	rex.WRB jb 0x450622
  450640:	jrcxz  0x450661
  450642:	(bad)  
  450643:	call   FWORD PTR [rcx]
  450645:	sub    ch,cl
  450647:	and    eax,0x6f16f61c
  45064c:	jmp    0x4505d7
  45064e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  45064f:	iret   
  450650:	(bad)
  450654:	add    DWORD PTR [rcx],ecx
  450656:	ins    DWORD PTR es:[rdi],dx
  450657:	mov    ebp,0xceb6a878
  45065c:	fdivp  st(2),st
  45065e:	imul   DWORD PTR [rbp-0x7df1ed44]
  450664:	out    0xda,eax
  450666:	rex.W ins BYTE PTR es:[rdi],dx
  450668:	sti    
  450669:	mov    esi,DWORD PTR [rcx+0x2ae251d2]
  45066f:	jge    0x4506d5
  450671:	pop    rbx
  450672:	add    al,0xde
  450674:	(bad)  
  450675:	jo     0x450611
  450677:	add    BYTE PTR [rdx+0x2c],al
  45067a:	(bad)  
  45067b:	(bad)  
  45067c:	jns    0x450652
  45067e:	ret    0x9467
  450681:	rex.WR
  450682:	mov    bx,0xc042
  450686:	xchg   ecx,eax
  450687:	add    cl,BYTE PTR [rsi+0x40]
  45068a:	cdq    
  45068b:	jmp    FWORD PTR [rsp+rax*1]
  45068e:	xor    dh,BYTE PTR [rcx+0x39]
  450691:	retf   0x29c
  450694:	jns    0x4506af
  450696:	mov    ch,0x8
  450698:	stos   DWORD PTR es:[rdi],eax
  450699:	xor    eax,DWORD PTR [rdx-0x5f7e5211]
  45069f:	test   al,0xf9
  4506a1:	add    eax,DWORD PTR [rdi]
  4506a3:	xor    edx,DWORD PTR [rax]
  4506a5:	lods   al,BYTE PTR ds:[rsi]
  4506a6:	(bad)  
  4506a7:	(bad)  
  4506a8:	mov    esp,0x40c4b5e
  4506ad:	(bad)  
  4506ae:	or     BYTE PTR [rdx+rcx*2-0x5b],al
  4506b2:	or     eax,0x4682fa46
  4506b7:	(bad)  
  4506b9:	cmp    cl,BYTE PTR [rsi-0x5ccd295f]
  4506bf:	movsxd edx,DWORD PTR [rax]
  4506c1:	rcr    bh,1
  4506c3:	cli    
  4506c4:	mov    dl,0x1c
  4506c6:	enter  0xcf8c,0xd
  4506ca:	(bad)  
  4506cb:	add    eax,ecx
  4506cd:	and    al,0x70
  4506cf:	out    0x3,eax
  4506d1:	fs xor al,0xa6
  4506d4:	popf   
  4506d5:	or     DWORD PTR [rdx+riz*4+0x4501fdad],0x70ebbe76
  4506e0:	enter  0xe46,0x1c
  4506e4:	jle    0x450714
  4506e6:	pop    rax
  4506e7:	mov    ah,0x45
  4506e9:	mov    ah,0x94
  4506eb:	pop    rsi
  4506ec:	(bad)  
  4506ed:	addr32 (bad) 
  4506f0:	enter  0xe040,0x8e
  4506f4:	sbb    bl,BYTE PTR [rip+0x4eca2fc3]        # 0x4f0f36bd
  4506fa:	std    
  4506fb:	(bad)  
  4506fc:	(bad)  
  4506fe:	stc    
  4506ff:	rex.W ret 
  450701:	(bad)  
  450702:	cmps   QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
  450704:	add    dh,dl
  450706:	cmp    DWORD PTR [rcx-0x30],esp
  450709:	(bad)  
  45070a:	push   rdx
  45070b:	leave  
  45070c:	loopne 0x450716
  45070e:	sub    BYTE PTR [rax],bl
  450710:	clc    
  450711:	rex.RB fcmovne st,st(2)
  450714:	rex.RXB (bad) 
  450716:	loopne 0x45072f
  450718:	fstp   DWORD PTR [rsi+0x7b]
  45071b:	rex.WX js 0x450794
  45071e:	es jo  0x45071f
  450721:	(bad)  
  450722:	push   rax
  450723:	pop    rdi
  450724:	(bad)  
  450725:	or     al,bh
  450727:	sbb    eax,DWORD PTR [rdx-0x78024b65]
  45072d:	out    0x95,eax
  45072f:	sbb    BYTE PTR [rbx],ah
  450731:	or     eax,0x402e3861
  450736:	(bad)  
  450737:	cdq    
  450738:	in     al,0x51
  45073a:	or     DWORD PTR [rcx+riz*1-0x50e0ab6d],0x9104f79c
  450745:	mov    eax,0x41045eca
  45074a:	sbb    al,0xf9
  45074c:	pop    rsp
  45074d:	pop    rdi
  45074e:	nop
  45074f:	xchg   ebp,eax
  450750:	(bad)  
  450751:	pop    rsi
  450752:	adc    al,0x1c
  450754:	adc    edx,DWORD PTR [rax]
  450756:	adc    BYTE PTR [rcx-0x45],al
  450759:	(bad)  
  45075a:	fdivr  QWORD PTR [rsi-0x30]
  45075d:	(bad)  
  45075e:	jo     0x45072c
  450760:	or     BYTE PTR [rcx+0x40],al
  450763:	gs jrcxz 0x450711
  450766:	mov    dh,0x63
  450768:	mov    WORD PTR [rbx+0x4f],fs
  45076b:	rex mov esp,0x50d13689
  450771:	xor    DWORD PTR [rcx],edi
  450773:	outs   dx,DWORD PTR ds:[rsi]
  450774:	rex.RXB adc BYTE PTR [r8+0x7b],0x83
  450779:	jno    0x4507e1
  45077b:	idiv   BYTE PTR [rcx]
  45077d:	push   rdx
  45077e:	sub    ch,BYTE PTR [rbp-0x75816a3b]
  450784:	sub    eax,0xa07f6909
  450789:	jb     0x450786
  45078b:	data16 and BYTE PTR [rcx-0x77],cl
  45078f:	movabs ds:0x48fc93eec4c60787,eax
  450798:	rcr    BYTE PTR [rdi],0xd4
  45079b:	ficom  DWORD PTR [rdx]
  45079d:	movsxd edx,ebx
  45079f:	mov    dl,0xaf
  4507a1:	jae    0x450768
  4507a3:	(bad)  
  4507a4:	push   rdx
  4507a5:	and    BYTE PTR [rcx-0x1e],ah
  4507a8:	pushf  
  4507a9:	stos   BYTE PTR es:[rdi],al
  4507aa:	xchg   ecx,eax
  4507ab:	(bad)  
  4507ac:	fstp   DWORD PTR [rax+rbx*2+0x725b312]
  4507b3:	jb     0x4507e5
  4507b5:	mov    ch,0x52
  4507b7:	neg    cl
  4507b9:	add    al,0x22
  4507bb:	addr32 jae 0x450790
  4507be:	mov    al,0x13
  4507c0:	push   rsp
  4507c1:	mov    ebx,edx
  4507c3:	push   rax
  4507c4:	(bad)  
  4507c5:	pop    rcx
  4507c6:	out    dx,eax
  4507c7:	in     al,0x4
  4507c9:	(bad)  
  4507ca:	lock pop rax
  4507cc:	cdq    
  4507cd:	xchg   esp,eax
  4507ce:	adc    DWORD PTR [rbp-0x61],ebp
  4507d1:	movaps xmm7,xmm5
  4507d4:	or     DWORD PTR [rbp-0x39a3b5ad],ebp
  4507da:	xchg   esi,eax
  4507db:	cmp    DWORD PTR [rdx+riz*2+0x421964a],edx
  4507e2:	popf   
  4507e3:	xchg   edx,eax
  4507e4:	pop    rsi
  4507e5:	rex jp 0x450815
  4507e8:	clc    
  4507e9:	fwait
  4507ea:	rex.WX cmp rdx,QWORD PTR [rsi+0x35]
  4507ee:	lock xchg ebx,eax
  4507f0:	(bad)  
  4507f1:	ds ret 0x1cab
  4507f5:	rex fist DWORD PTR [rdi]
  4507f8:	or     dl,BYTE PTR [rdi+rdi*2+0x51b10fb2]
  4507ff:	(bad)  
  450800:	test   al,0x30
  450802:	ss push rdx
  450804:	ror    DWORD PTR [rbx-0x1a],0x18
  450808:	(bad)  
  450809:	lock fild WORD PTR [rcx-0x395fec80]
  450810:	and    al,0x8
  450812:	stos   BYTE PTR es:[rdi],al
  450813:	retf   0xdfd0
  450816:	int    0xd8
  450818:	(bad)  
  450819:	sbb    BYTE PTR [rax],bh
  45081b:	(bad)  
  45081c:	jg     0x45079e
  45081e:	sbb    rbx,QWORD PTR [rbp-0x2260e3bd]
  450825:	scas   al,BYTE PTR es:[rdi]
  450826:	jae    0x45081d
  450828:	jbe    0x450866
  45082a:	(bad)  
  45082b:	xchg   esp,eax
  45082c:	add    eax,0x17451204
  450831:	hlt    
  450832:	cmp    eax,DWORD PTR [rbx]
  450834:	add    dh,BYTE PTR [rdx+0x74]
  450837:	mov    al,0x18
  450839:	adc    BYTE PTR [rax-0x3e],bl
  45083c:	cmp    DWORD PTR [rbx],ebx
  45083e:	or     ah,cl
  450840:	sbb    ah,BYTE PTR [rbx-0x3f510574]
  450846:	mov    esp,0xb37e7d1
  45084b:	mov    WORD PTR [rdi],cs
  45084d:	xor    DWORD PTR [rbp+0x4e10c325],0x639be9ed
  450857:	pop    rsi
  450858:	(bad)  
  450859:	and    dh,bh
  45085b:	fild   WORD PTR [rsp+rax*4]
  45085e:	rex.WRXB mov BYTE PTR [r14+0xe],0xd7
  450863:	adc    DWORD PTR [rax-0x551b7478],ecx
  450869:	stos   DWORD PTR es:[rdi],eax
  45086a:	and    cl,BYTE PTR [rbp-0x4d6b7394]
  450870:	xchg   bl,dh
  450872:	or     DWORD PTR [rsi-0x50e3c354],esi
  450878:	(bad)  
  450879:	sbb    sil,dil
  45087c:	sub    eax,0x393eee50
  450881:	and    al,ah
  450883:	(bad)  
  450884:	hlt    
  450885:	(bad)
  450888:	stos   BYTE PTR es:[rdi],al
  450889:	xchg   DWORD PTR [rax-0x7],eax
  45088c:	fcomp  QWORD PTR [rax-0x5e5dfd29]
  450892:	fist   WORD PTR [rbx-0x99b8894]
  450898:	and    edi,DWORD PTR [rbp+0x8e7d77e]
  45089e:	rex.RB or BYTE PTR [r9],0x2d
  4508a2:	rex.X and BYTE PTR [rdx],spl
  4508a5:	add    DWORD PTR [rcx-0x60],0x1cb0447
  4508ac:	mov    edi,0x8fe2f1d4
  4508b1:	lock adc BYTE PTR [rbx+0x63],bh
  4508b5:	rex.RX pop rdx
  4508b7:	add    al,0x36
  4508b9:	test   DWORD PTR [rbx+0x56],edi
  4508bc:	rol    dh,0xf6
  4508bf:	jmp    0x4fc06b9f
  4508c4:	pop    rsp
  4508c5:	clc    
  4508c6:	add    DWORD PTR [rax-0x5f048497],0xffffffbd
  4508cd:	movabs eax,ds:0xdbe2010e150b1160
  4508d6:	loope  0x4508f0
  4508d8:	rex.WRX xchg rbx,rax
  4508da:	mov    edi,0xc7101e9f
  4508df:	and    ch,ch
  4508e1:	mov    esi,0xc54497bc
  4508e6:	xor    bl,dh
  4508e8:	sbb    edi,edx
  4508ea:	rcr    DWORD PTR [rbp+0x71bf354],cl
  4508f0:	xor    dh,dh
  4508f2:	pop    rcx
  4508f3:	es pop rsp
  4508f5:	mov    al,0x1a
  4508f7:	jg     0x450942
  4508f9:	ds mov bl,0x19
  4508fc:	(bad)  
  4508fd:	jp     0x450924
  4508ff:	(bad)  
  450900:	and    al,0x83
  450902:	(bad)  
  450903:	push   rbx
  450904:	cmp    bh,cl
  450906:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  450907:	(bad)  
  450908:	(bad)  
  450909:	mov    al,0x12
  45090b:	xchg   ebp,eax
  45090d:	mov    esp,0x66820a27
  450912:	pop    rsp
  450913:	outs   dx,BYTE PTR cs:[rsi]
  450915:	adc    al,0xd8
  450917:	cmc    
  450918:	mov    ecx,0x1b2a43e0
  45091d:	(bad)  
  45091e:	int3   
  45091f:	add    eax,0x5d0d410c
  450924:	(bad)  
  450925:	and    ecx,DWORD PTR [rsi-0x41]
  450928:	(bad)  
  450929:	fsub   DWORD PTR [rsi]
  45092b:	pop    rbp
  45092c:	out    0x6c,eax
  45092e:	cmp    DWORD PTR [rsi-0x5004af50],ebx
  450934:	(bad)  
  450935:	xchg   ebx,eax
  450936:	(bad)  
  450937:	(bad)
  45093a:	xchg   esp,eax
  45093b:	(bad)  
  45093c:	movabs ds:0x5f837bac6bfad3ac,al
  450945:	(bad)  
  450946:	push   rsp
  450947:	(bad)  
  450948:	sub    BYTE PTR [rsi+rsi*2+0x6c],0x6c
  45094d:	sub    eax,0x1b435c48
  450952:	ss (bad) 
  450954:	pop    rbp
  450955:	or     BYTE PTR [rax],cl
  450957:	adc    eax,0xb98535e1
  45095c:	rex.WXB sbb r12b,0x63
  450960:	(bad)  
  450961:	(bad)  
  450962:	jne    0x4509d2
  450964:	xchg   ecx,eax
  450965:	iret   
  450966:	retf   0xdb16
  450969:	(bad)  
  45096b:	ja     0x450952
  45096d:	push   rbp
  45096e:	adc    BYTE PTR [rcx],ah
  450970:	(bad)  
  450971:	repnz sbb cl,BYTE PTR [rdi-0x65428d40]
  450978:	(bad)  
  450979:	mov    dl,0x1
  45097b:	(bad)  
  45097c:	in     al,dx
  45097d:	or     ecx,DWORD PTR [rax]
  45097f:	cmp    eax,0x7babe571
  450984:	add    eax,0x760846c8
  450989:	mov    dh,0xfd
  45098b:	retf   
  45098c:	jns    0x4509c3
  45098e:	rex.WRB and BYTE PTR [r10+rbp*4-0x402edbc9],r10b
  450996:	(bad)  
  450997:	add    al,0x32
  450999:	mov    edx,0xfc3fabf3
  45099e:	movabs ds:0x560641846d41f3af,eax
  4509a7:	add    DWORD PTR [rcx+0x4b],ebp
  4509aa:	movabs al,gs:0x84032ff75da0439d
  4509b5:	and    cl,BYTE PTR [rdx+rbp*4]
  4509b8:	or     edx,0x6caed5d6
  4509be:	stc    
  4509bf:	(bad)  
  4509c1:	sbb    ecx,eax
  4509c3:	int3   
  4509c4:	loopne 0x450a40
  4509c6:	ds addr32 ja 0x45098e
  4509ca:	and    ecx,DWORD PTR [rsi-0x4e]
  4509cd:	xlat   BYTE PTR ds:[rbx]
  4509ce:	lahf   
  4509cf:	add    al,0xc8
  4509d1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4509d2:	rcl    BYTE PTR [rbx],cl
  4509d4:	inc    esp
  4509d6:	mov    esi,DWORD PTR [rax+0x20]
  4509d9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4509da:	mov    esi,0xa9f18ebb
  4509df:	(bad)  
  4509e0:	push   rsp
  4509e1:	rex.WB adc rax,0x3f41629f
  4509e7:	fmul   DWORD PTR [rax+rsi*1+0x11ee58aa]
  4509ee:	sub    al,0x7
  4509f0:	sti    
  4509f1:	add    cl,cl
  4509f3:	(bad)  
  4509f4:	sub    cl,ch
  4509f6:	add    esi,DWORD PTR [rcx]
  4509f8:	sbb    edx,edi
  4509fa:	test   ch,bl
  4509fc:	pop    rsp
  4509fd:	(bad)  
  4509fe:	and    BYTE PTR [rdi],cl
  450a00:	mov    bl,0xaf
  450a02:	jle    0x450a4d
  450a04:	pushf  
  450a05:	xor    bh,BYTE PTR [rcx+0x11]
  450a08:	xchg   edi,eax
  450a09:	shr    dl,0xa7
  450a0c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  450a0d:	push   rsp
  450a0e:	jrcxz  0x4509cb
  450a10:	xor    BYTE PTR [rdi],0xc7
  450a13:	add    eax,0x2219b71c
  450a18:	mov    edx,0x589586b8
  450a1d:	out    0x7,al
  450a1f:	fwait
  450a20:	or     DWORD PTR [rdi+rdx*1],edi
  450a23:	in     al,0xc
  450a25:	fisttp DWORD PTR [rcx-0x55fd6c3f]
  450a2b:	(bad)  
  450a2c:	cmp    al,0x17
  450a2e:	cmp    BYTE PTR [r9+0x37412af2],al
  450a35:	shr    DWORD PTR [rsi+0x1d],cl
  450a38:	movabs ds:0x9021769936e6a3ec,eax
  450a41:	rex.RB jmp 0x450ab7
  450a44:	push   0x4b
  450a46:	imul   edi,DWORD PTR [rdi-0x64e537e1],0xa6a9b6d
  450a50:	mov    esp,0xaf6408ff
  450a55:	(bad)  
  450a56:	fwait
  450a57:	jrcxz  0x450a8f
  450a59:	mov    ah,0xab
  450a5b:	je     0x450ad7
  450a5d:	fcom   QWORD PTR [rsi+rsi*8+0x6bfd996f]
  450a64:	sub    DWORD PTR [rdx-0x166444ba],0x320b7e83
  450a6e:	sbb    DWORD PTR [rsi+rax*4+0x55],ecx
  450a72:	push   0xffffffffffffffd6
  450a74:	es cwde 
  450a76:	xchg   ecx,eax
  450a77:	push   rsp
  450a78:	rex retf 
  450a7a:	(bad)  
  450a7b:	jmp    0x450a06
  450a7d:	lods   eax,DWORD PTR ds:[rsi]
  450a7e:	imul   edx,DWORD PTR [rcx+0x76],0xfffffff3
  450a82:	(bad)  
  450a83:	idiv   BYTE PTR [rbp-0x28]
  450a86:	call   0x4f2bcf85
  450a8b:	cmp    DWORD PTR [rsi],0x858c0cee
  450a91:	sbb    BYTE PTR [rax],ch
  450a93:	adc    ecx,DWORD PTR [rbp+0x7c53605b]
  450a99:	sar    ebx,0xa8
  450a9c:	(bad)  
  450a9d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  450a9e:	sbb    eax,0x22bca573
  450aa3:	xchg   edi,eax
  450aa4:	movabs al,ds:0x2d91928ed78e9a25
  450aad:	and    BYTE PTR fs:[rdx+rsi*2],al
  450ab1:	jge    0x450a34
  450ab3:	sub    al,BYTE PTR [rsi]
  450ab5:	ficomp WORD PTR [rax]
  450ab7:	mov    esp,0x2b061839
  450abc:	fistp  WORD PTR [rdi]
  450abe:	adc    edx,DWORD PTR [rax]
  450ac0:	and    bl,BYTE PTR [rcx+0x65]
  450ac3:	jg     0x450a65
  450ac5:	mov    dl,BYTE PTR [rcx-0x3a3d3b67]
  450acb:	pop    rbx
  450acc:	sbb    esp,DWORD PTR [rbp+0x33]
  450acf:	in     eax,dx
  450ad0:	adc    eax,DWORD PTR [rax]
  450ad2:	push   rbp
  450ad3:	movabs eax,ds:0xb9c191f85296233e
  450adc:	(bad)  
  450add:	(bad)  
  450ade:	adc    ah,BYTE PTR [rsi]
  450ae0:	(bad)  
  450ae1:	shl    BYTE PTR [rdx-0x60],0x7f
  450ae5:	xchg   ebx,eax
  450ae6:	ins    BYTE PTR es:[rdi],dx
  450ae7:	jle    0x450ad6
  450ae9:	in     al,dx
  450aea:	push   rdi
  450aeb:	mov    gs,WORD PTR [rbx-0x7f7b100]
  450af1:	fwait
  450af2:	rex call FWORD PTR [rbp-0x15]
  450af6:	out    0x4a,eax
  450af8:	pop    rsi
  450af9:	adc    DWORD PTR [rax+0x25],ebx
  450afc:	sbb    BYTE PTR [r9],cl
  450aff:	int    0xb0
  450b01:	sbb    eax,0x640a58e3
  450b06:	clc    
  450b07:	adc    dl,BYTE PTR [rdi]
  450b09:	lahf   
  450b0a:	mov    bl,0xe9
  450b0c:	mov    ch,0x82
  450b0e:	rex.RXB (bad) 
  450b10:	(bad)  
  450b11:	mov    dh,0x36
  450b13:	mov    ch,0xab
  450b15:	scas   eax,DWORD PTR es:[rdi]
  450b16:	mov    BYTE PTR [rax+rdx*1+0x55],0x9e
  450b1b:	cld    
  450b1c:	mov    ah,bh
  450b1e:	rex.RXB add al,0x6c
  450b21:	fs pop rbp
  450b23:	enter  0x58,0x71
  450b27:	(bad)  
  450b28:	(bad)  
  450b29:	loopne 0x450b46
  450b2b:	(bad)  
  450b2c:	jmp    FWORD PTR [rdi-0x239c0402]
  450b32:	cdq    
  450b33:	lea    eax,[rdx-0x38c6f116]
  450b39:	mov    esp,0xe86738a
  450b3e:	sbb    BYTE PTR [rdi+0x7aa474a7],bl
  450b44:	mov    dh,0x9f
  450b46:	(bad)  
  450b47:	mov    WORD PTR [rax-0x6b],cs
  450b4a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  450b4b:	mov    ch,0xaf
  450b4d:	or     al,0xf8
  450b4f:	rex.WRX rol BYTE PTR [rax+0x76997543],0x3c
  450b57:	xchg   ebp,eax
  450b58:	pop    rbp
  450b59:	or     BYTE PTR [rsi-0x24],bh
  450b5c:	scas   al,BYTE PTR es:[rdi]
  450b5d:	cmp    DWORD PTR [rsp+rdx*4-0x7d0e2d82],0x5304519b
  450b68:	gs xchg ecx,eax
  450b6a:	imul   ebp,ebp,0x9673a79a
  450b70:	rex.WRB mov r8b,0x5d
  450b73:	jp     0x450b12
  450b75:	ds push rdi
  450b77:	sbb    ecx,DWORD PTR [rax+0x61957023]
  450b7d:	rex.XB and ebp,DWORD PTR [r11]
  450b80:	leave  
  450b81:	xchg   ebp,eax
  450b82:	jns    0x450bb6
  450b84:	mov    dh,0x40
  450b86:	sbb    al,0x4f
  450b88:	(bad)  
  450b89:	pushf  
  450b8a:	(bad)  
  450b8b:	movabs al,ds:0xdb4f339ca0787dfa
  450b94:	adc    ebp,esp
  450b96:	or     eax,0x2e8a3a64
  450b9b:	test   al,0x6d
  450b9d:	push   rbp
  450b9e:	(bad)  
  450b9f:	fisub  WORD PTR [rsi+0x13]
  450ba2:	jge    0x450b4e
  450ba4:	mov    esi,0x33c091f1
  450ba9:	imul   BYTE PTR [rdx]
  450bab:	mov    ch,0xc7
  450bad:	movsxd ebx,edi
  450baf:	sahf   
  450bb0:	iret   
  450bb1:	out    dx,al
  450bb2:	sbb    ebx,esp
  450bb4:	and    BYTE PTR [rax-0x2a7b5f94],bh
  450bba:	pop    rdi
  450bbb:	xchg   ebp,eax
  450bbc:	(bad)  
  450bbd:	mov    edi,0x33e1ec07
  450bc2:	gs pushf 
  450bc4:	jle    0x450bd8
  450bc6:	test   al,0xbb
  450bc8:	add    eax,0x573329fc
  450bcd:	(bad)  
  450bce:	(bad)  
  450bcf:	outs   dx,DWORD PTR ds:[rsi]
  450bd0:	add    DWORD PTR [rdx],ebp
  450bd2:	call   0xffffffff83628e6d
  450bd7:	jle    0x450c13
  450bd9:	xchg   esi,eax
  450bda:	js     0x450c04
  450bdc:	test   DWORD PTR [rbp+0x10],esp
  450bdf:	test   ah,dl
  450be1:	mov    bh,0xe3
  450be3:	add    al,dl
  450be5:	movabs al,ds:0x6279ae23548196fc
  450bee:	jo     0x450bef
  450bf0:	sar    ecx,0xc3
  450bf3:	ds mov ebx,0x1d1ef21e
  450bf9:	adc    BYTE PTR [rip+0x409e737d],ah        # 0x40e37f7c
  450bff:	xlat   BYTE PTR ds:[rbx]
  450c00:	mov    cs,WORD PTR [rdx-0x16687160]
  450c06:	push   rdi
  450c07:	(bad)  
  450c08:	and    DWORD PTR [rcx-0x35d81c3a],esi
  450c0e:	or     BYTE PTR [rbp-0xe928ee6],ah
  450c14:	int    0xe6
  450c16:	(bad)  
  450c17:	or     BYTE PTR [rax],cl
  450c19:	(bad)  
  450c1a:	cmp    eax,0x3b43f4a7
  450c1f:	stos   BYTE PTR es:[rdi],al
  450c20:	cmp    BYTE PTR [rsi-0x6689dc9d],dh
  450c26:	cdq    
  450c27:	jo     0x450bd5
  450c29:	in     al,0x22
  450c2b:	rex.XB stos DWORD PTR es:[rdi],eax
  450c2d:	cmp    al,0x88
  450c2f:	(bad)  
  450c30:	ins    BYTE PTR es:[rdi],dx
  450c31:	int3   
  450c32:	(bad)  
  450c33:	cld    
  450c34:	loop   0x450c0b
  450c36:	mov    ch,0xbe
  450c38:	sbb    ecx,DWORD PTR [rax-0x47ba1daf]
  450c3e:	fdiv   st,st(0)
  450c40:	repz sub ecx,0xab13ffcf
  450c47:	sbb    edx,DWORD PTR [rcx-0x7d18258c]
  450c4d:	push   rsp
  450c4e:	xor    BYTE PTR [rdx],dh
  450c50:	fdivp  st(0),st
  450c52:	sbb    BYTE PTR [rsi],cl
  450c54:	push   rcx
  450c55:	push   rdx
  450c56:	fwait
  450c57:	lar    eax,bp
  450c5a:	rex.RX pushf 
  450c5c:	int    0x5c
  450c5e:	mov    ebx,edx
  450c60:	sub    ecx,ecx
  450c62:	xchg   esp,eax
  450c63:	adc    DWORD PTR [rdx],eax
  450c65:	jp     0x450c41
  450c67:	cmp    DWORD PTR [rbx-0x7],esi
  450c6a:	rex.WR push rax
  450c6c:	fst    DWORD PTR [rbp+rsi*2-0x95c802c]
  450c73:	sub    eax,DWORD PTR [rbx+0x2639c472]
  450c79:	sbb    al,0x6f
  450c7b:	mov    esi,0x15ff248b
  450c80:	adc    BYTE PTR [rbp+0x73689bdd],ah
  450c86:	js     0x450cd5
  450c88:	rex.B push 0xffffffffffffffa1
  450c8b:	mov    DWORD PTR [rdx-0x382fc062],ebp
  450c91:	mov    ch,0x80
  450c93:	sbb    BYTE PTR [rcx],dh
  450c95:	ds adc eax,0x375cc76
  450c9b:	fst    DWORD PTR [rdx-0x30]
  450c9e:	cdq    
  450c9f:	(bad)  
  450ca0:	mov    cl,0x95
  450ca2:	push   rdx
  450ca3:	ins    DWORD PTR es:[rdi],dx
  450ca4:	sub    DWORD PTR [rax+0x76],edx
  450ca7:	(bad)  
  450ca8:	(bad)  
  450ca9:	mov    bl,0xad
  450cab:	or     eax,0xe1e09b65
  450cb0:	(bad)  
  450cb1:	jb     0x450c53
  450cb3:	int3   
  450cb4:	movabs ds:0xfdc736dca08cdb04,al
  450cbd:	xor    BYTE PTR [rax-0x14fa4917],dl
  450cc3:	fxch   st(0)
  450cc5:	sbb    al,0x4f
  450cc7:	rex.RX movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  450cc9:	cld    
  450cca:	(bad)  
  450ccb:	(bad)  
  450ccc:	add    al,0xf0
  450cce:	inc    BYTE PTR [rax-0x7a]
  450cd1:	mov    esi,0xc9c32055
  450cd6:	push   0x41f5ed0b
  450cdb:	jns    0x450cf2
  450cdd:	test   al,0x87
  450cdf:	add    eax,0x18640d4f
  450ce4:	jae    0x450d28
  450ce6:	(bad)  
  450ce7:	addr32 cmp al,0xc6
  450cea:	rex.RXB mov r12b,0x7c
  450ced:	ds mov esp,0xe804b6ae
  450cf3:	(bad)  
  450cf4:	add    dh,BYTE PTR [rsi-0x6a]
  450cf7:	in     eax,dx
  450cf8:	fsub   st,st(1)
  450cfa:	add    eax,0x2bdacbc1
  450cff:	push   rcx
  450d00:	and    BYTE PTR [rdx+0x3f],dl
  450d03:	or     eax,0x38454210
  450d08:	out    dx,al
  450d09:	sti    
  450d0a:	rex.WR imul BYTE PTR [rip+0x541c7f05]        # 0x54618c16
  450d11:	xor    eax,0x36bb1b24
  450d16:	add    DWORD PTR [rip+0x66912a6d],esi        # 0x66d63789
  450d1c:	jae    0x450d77
  450d1e:	rcr    DWORD PTR [rax],1
  450d20:	es fchs 
  450d23:	(bad)  
  450d24:	fldcw  WORD PTR [rdi]
  450d26:	xchg   esi,eax
  450d27:	rex.WRB cmps QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
  450d29:	clc    
  450d2a:	rex.WRXB jns 0x450d27
  450d2d:	mov    eax,DWORD PTR [rax-0x74]
  450d30:	jmp    0x450d15
  450d32:	add    eax,DWORD PTR [rbx-0x48e0198f]
  450d38:	and    esi,ecx
  450d3a:	enter  0xc79e,0x4
  450d3e:	(bad)  
  450d3f:	ins    DWORD PTR es:[rdi],dx
  450d40:	cmp    eax,0x8852ab5b
  450d45:	(bad)  
  450d46:	mov    ebx,0x3398ae21
  450d4b:	test   DWORD PTR [rdx+0x73],esp
  450d4e:	loop   0x450d91
  450d50:	fs (bad) 
  450d52:	(bad)  
  450d53:	jo     0x450cf2
  450d55:	hlt    
  450d56:	rex.RB jp 0x450d3e
  450d59:	mov    es,WORD PTR [rax+0x40e64ca1]
  450d5f:	sbb    al,0x40
  450d61:	mov    cl,0x94
  450d63:	mov    bl,0xd3
  450d65:	enter  0x4143,0x18
  450d69:	out    0x5f,eax
  450d6b:	add    ebx,DWORD PTR [rcx+0x42]
  450d6e:	cmp    esi,esi
  450d70:	jno    0x450cf2
  450d72:	jb     0x450d40
  450d74:	data16 sahf 
  450d76:	jo     0x450d3d
  450d78:	or     eax,0xf9493006
  450d7d:	nop
  450d7e:	xchg   esi,eax
  450d7f:	fisubr DWORD PTR [rsi]
  450d81:	rex.WR cmp BYTE PTR [rdi+0x20],r10b
  450d85:	push   rdi
  450d86:	ss (bad) 
  450d89:	cli    
  450d8a:	mov    ebx,0x9f876111
  450d8f:	push   rbx
  450d90:	movsxd esp,ebp
  450d92:	sub    al,BYTE PTR [rdx+0x31bf70e]
  450d98:	adc    eax,0xab23424
  450d9d:	adc    bl,BYTE PTR [rdi-0x36268964]
  450da3:	cmp    DWORD PTR [rbp*1+0x28a8947b],ecx
  450daa:	iret   
  450dab:	xchg   ebp,eax
  450dac:	rex.XB xor cl,BYTE PTR [r13+0x298b24cc]
  450db3:	int    0xcc
  450db5:	xchg   ebp,eax
  450db6:	add    al,0xd1
  450db8:	xchg   ecx,eax
  450db9:	or     edx,0x7f7e2104
  450dbf:	je     0x450d8e
  450dc1:	stc    
  450dc2:	cld    
  450dc3:	mov    ebp,0xa3978dbf
  450dc8:	stos   DWORD PTR es:[rdi],eax
  450dc9:	(bad)  
  450dca:	mov    dl,0xbb
  450dcc:	jbe    0x450d5e
  450dce:	(bad)  
  450dcf:	cmp    al,0xb7
  450dd1:	stos   DWORD PTR es:[rdi],eax
  450dd2:	movsxd ecx,esp
  450dd4:	ret    
  450dd5:	adc    BYTE PTR [rcx+0x3ae1fe08],al
  450ddb:	movsxd edx,ecx
  450ddd:	(bad)  
  450dde:	in     eax,0x2
  450de0:	rex.B in al,0x7a
  450de3:	in     al,dx
  450de4:	(bad)  
  450de5:	xor    BYTE PTR [rsi],dh
  450de7:	add    al,0xd0
  450de9:	xchg   dh,bh
  450deb:	sub    ch,BYTE PTR [rcx]
  450ded:	int    0x2f
  450def:	xchg   ebp,eax
  450df0:	mov    eax,DWORD PTR [rbx+rax*1]
  450df3:	cdq    
  450df4:	gs sbb dh,cl
  450df7:	movabs ds:0xe103ebc736d8169c,al
  450e00:	repnz pop rsi
  450e02:	pop    rcx
  450e03:	rex.WR pop rax
  450e05:	xchg   ebp,eax
  450e06:	int3   
  450e07:	(bad)  
  450e08:	push   rdx
  450e09:	xchg   BYTE PTR [rbp+0x66dbd921],dl
  450e0f:	retf   0x12b5
  450e12:	test   al,0x2c
  450e14:	test   BYTE PTR [rsi],0x2
  450e17:	mov    ecx,0xcb26ce88
  450e1c:	cmp    esi,0x2aa10638
  450e22:	(bad)  
  450e23:	xchg   bl,ah
  450e25:	and    al,0x1e
  450e27:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  450e28:	rex.X ret 
  450e2a:	in     al,0xb0
  450e2c:	cmp    eax,0x9009ef7f
  450e31:	rex.X xchg BYTE PTR [rbx+0x25],dl
  450e35:	and    dh,BYTE PTR [rip+0x43eb1061]        # 0x44301e9c
  450e3b:	jmp    QWORD PTR [rdx]
  450e3d:	xor    eax,0x11b19361
  450e42:	(bad)  
  450e43:	nop
  450e44:	pushf  
  450e45:	(bad)  
  450e46:	scas   al,BYTE PTR es:[rdi]
  450e47:	(bad)  
  450e48:	rex.W lods al,BYTE PTR ds:[rsi]
  450e4a:	pop    rsp
  450e4b:	add    eax,0x4ac69b1
  450e50:	js     0x450ea4
  450e52:	jl     0x450e34
  450e54:	mov    WORD PTR [rcx],?
  450e56:	mov    cl,dl
  450e58:	mov    ebx,0x8e9f6307
  450e5d:	iret   
  450e5e:	shl    DWORD PTR [rbx],0xe3
  450e61:	cli    
  450e62:	imul   ebx,DWORD PTR fs:[rdi+0x35],0xffffffc2
  450e67:	es add al,0x63
  450e6a:	jg     0x450eac
  450e6c:	movabs al,ds:0xebace72e24910fc5
  450e75:	push   0x48
  450e77:	push   0x36
  450e79:	rex sbb eax,0xbec6a53
  450e7f:	rex.WR (bad) 
  450e81:	cmps   BYTE PTR gs:[rsi],BYTE PTR es:[rdi]
  450e83:	(bad)  
  450e84:	add    eax,0xabc5281c
  450e89:	xlat   BYTE PTR ds:[rbx]
  450e8a:	xchg   ebp,eax
  450e8b:	or     al,0xe6
  450e8d:	adc    eax,0xa0485de6
  450e92:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  450e93:	push   rax
  450e94:	(bad)  
  450e95:	sub    esi,DWORD PTR [rbx]
  450e97:	(bad)  
  450e98:	add    bl,BYTE PTR [rbx]
  450e9a:	vmulpd ymm2,ymm4,YMMWORD PTR [rdi]
  450e9e:	clc    
  450e9f:	xor    eax,0x244f655e
  450ea4:	rex.X add BYTE PTR [rcx-0x5b],al
  450ea8:	(bad)
  450eac:	push   0x43
  450eae:	(bad)  
  450eaf:	add    edx,DWORD PTR [rcx]
  450eb1:	add    BYTE PTR [rdi],ah
  450eb3:	xchg   DWORD PTR [rsi+rcx*4+0x35],ebx
  450eb7:	lahf   
  450eb8:	(bad)  
  450eb9:	jl     0x450ea0
  450ebb:	pushf  
  450ebc:	repnz or ah,BYTE PTR [rcx]
  450ebf:	sub    BYTE PTR [rbx-0x18f27fb3],dh
  450ec5:	rex.X (bad) 
  450ec7:	pop    rdi
  450ec8:	(bad)  
  450ec9:	jae    0x450e51
  450ecb:	ror    BYTE PTR [rax+rcx*1-0x786d4d8f],cl
  450ed2:	sbb    eax,0x62c111e
  450ed7:	add    bh,bl
  450ed9:	adc    eax,0xa47d3b01
  450ede:	mov    ch,0xe5
  450ee0:	gs xor eax,0xb82073b8
  450ee6:	add    eax,0x7b3da0be
  450eeb:	mov    al,0xd1
  450eed:	(bad)  
  450eee:	in     al,0xbc
  450ef0:	cmp    DWORD PTR [rsi+0x162f4ddd],eax
  450ef6:	(bad)  
  450ef7:	movsxd rsp,DWORD PTR [r14+rdi*8-0x4b6bf111]
  450eff:	jrcxz  0x450ed0
  450f01:	pop    rbp
  450f02:	xchg   edi,edi
  450f04:	mov    WORD PTR [rcx+0x3c],?
  450f07:	in     eax,0x30
  450f09:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  450f0a:	in     eax,dx
  450f0b:	xor    DWORD PTR [rdx-0x2],0xcd1d80a8
  450f12:	rex.WXB
  450f13:	or     BYTE PTR gs:[rcx+0x4b],bl
  450f17:	(bad)
  450f1a:	clc    
  450f1b:	xchg   esi,eax
  450f1c:	rex.W mov dl,0x87
  450f1f:	mov    cl,BYTE PTR [rcx]
  450f21:	stc    
  450f22:	sbb    eax,0xbd7c06c3
  450f27:	sub    edx,DWORD PTR [rax]
  450f29:	shr    BYTE PTR [rsi-0x7ec9f133],0xaf
  450f30:	sbb    ch,BYTE PTR [rax+0x2ed0466a]
  450f36:	add    al,0xdf
  450f38:	(bad)  
  450f39:	fs xchg ecx,eax
  450f3b:	adc    dh,BYTE PTR [rcx-0x27]
  450f3e:	hlt    
  450f3f:	rex.RXB in eax,dx
  450f41:	js     0x450fa5
  450f43:	out    0xbd,al
  450f45:	movsxd ebx,DWORD PTR [rbx+rdi*2+0x6c]
  450f49:	fwait
  450f4a:	cdq    
  450f4b:	in     al,dx
  450f4c:	xchg   ebx,eax
  450f4d:	std    
  450f4e:	or     ebp,ebx
  450f50:	out    dx,al
  450f51:	loopne 0x450f10
  450f53:	add    DWORD PTR [rdi],edi
  450f55:	(bad)  
  450f56:	out    0x7c,eax
  450f58:	repz fincstp 
  450f5b:	test   BYTE PTR [rax+0x70],0xf
  450f5f:	in     eax,dx
  450f60:	rcr    esi,0xf7
  450f63:	or     edx,DWORD PTR [rsp+riz*4+0xc2f37c]
  450f6a:	sub    DWORD PTR [rbp+0x3660a179],esi
  450f70:	js     0x450fb5
  450f72:	sub    BYTE PTR [rax+rcx*8+0x12beecb],0x32
  450f7a:	icebp  
  450f7b:	mov    bl,0xa9
  450f7d:	(bad)  
  450f7e:	add    DWORD PTR [rax+0x2a225549],edx
  450f84:	adc    dh,BYTE PTR [rsi+0x27202d55]
  450f8a:	add    DWORD PTR [rbx],ebx
  450f8c:	(bad)  
  450f8d:	rex.WR pop rbp
  450f8f:	pop    rbx
  450f90:	jne    0x450f36
  450f92:	lea    esp,[rdi+0x7]
  450f95:	jmp    0x450fe4
  450f97:	fisttp WORD PTR [rbp+rax*2-0x47edda85]
  450f9e:	sub    dh,ch
  450fa0:	(bad)  
  450fa1:	shl    esi,cl
  450fa3:	jmp    0x450f34
  450fa5:	rex.WX
  450fa6:	rex fnstcw WORD PTR [rsi+rdx*1+0x2c1b29f0]
  450fae:	mov    eax,0xb01b4710
  450fb3:	add    bl,dl
  450fb5:	cmp    DWORD PTR [rsi],eax
  450fb7:	lods   al,BYTE PTR ds:[rsi]
  450fb8:	or     al,0xb1
  450fba:	xchg   edx,eax
  450fbb:	test   edx,0xde57031f
  450fc1:	sbb    al,0xdf
  450fc3:	pop    rsi
  450fc4:	(bad)  
  450fc5:	retf   
  450fc6:	stos   DWORD PTR es:[rdi],eax
  450fc7:	mov    dl,0x90
  450fc9:	movabs ds:0xcca7240227fde6d7,al
  450fd2:	mov    dh,cl
  450fd4:	push   0x74795782
  450fd9:	xchg   ebx,eax
  450fda:	rex cmp DWORD PTR [rsi],esp
  450fdd:	cwde   
  450fde:	cmp    cl,dl
  450fe0:	sub    BYTE PTR [rcx],0x17
  450fe3:	jne    0x45104b
  450fe5:	and    BYTE PTR [rcx+rax*2],al
  450fe8:	sub    al,0x59
  450fea:	in     al,0x49
  450fec:	xchg   r13d,eax
  450fee:	js     0x450ffb
  450ff0:	jns    0x450fc1
  450ff2:	icebp  
  450ff3:	ss gs in eax,0x45
  450ff7:	add    bh,ch
  450ff9:	(bad)  
  450ffa:	sbb    BYTE PTR [rdi+0x18],ah
  450ffd:	rex.B
  450ffe:	lock imul eax,DWORD PTR [rbx+0x769a72a2],0xb7b74101
  451009:	imul   ecx,edx,0xffffff8a
  45100c:	fisttp WORD PTR [rdx]
  45100e:	int3   
  45100f:	sub    ebp,DWORD PTR [rax]
  451011:	pushf  
  451012:	lea    esi,[rcx]
  451014:	nop
  451015:	and    BYTE PTR [rbx-0x62],0x11
  451019:	sub    al,0x5
  45101b:	mov    dl,0x1a
  45101d:	and    eax,0x702bc67
  451022:	retf   
  451023:	je     0x450fd7
  451025:	or     DWORD PTR [rdi+0x583873a],eax
  45102b:	movsxd esp,DWORD PTR [rbp+0x59]
  45102e:	jge    0x451014
  451030:	push   0xffffffffca661ac4
  451035:	int    0x88
  451037:	or     al,0x3b
  451039:	sbb    DWORD PTR [rbx],ebp
  45103b:	and    DWORD PTR [rbp-0x6c],eax
  45103e:	cmc    
  45103f:	(bad)  
  451040:	xchg   ecx,eax
  451041:	lods   eax,DWORD PTR ds:[rsi]
  451042:	cmp    DWORD PTR [rcx+rcx*4+0x56],ebx
  451046:	(bad)  
  451047:	int    0xe5
  451049:	mov    ebp,0xa839628a
  45104e:	push   0x49
  451050:	xor    BYTE PTR [rdx+0x4041b13b],0x3e
  451057:	cmp    DWORD PTR [rdx],esp
  451059:	loopne 0x4510d2
  45105b:	pop    rcx
  45105c:	mov    bl,0x6c
  45105e:	rex.WB rcl BYTE PTR [r13+rax*4+0x34ddab2],0xfe
  451067:	mov    edx,0x893c4051
  45106c:	ror    ch,cl
  45106e:	add    edi,DWORD PTR [rsi+0x33]
  451071:	xor    DWORD PTR es:[rdx],esp
  451074:	mov    esp,DWORD PTR [rcx]
  451076:	sub    esi,DWORD PTR [rcx-0x7c7c0389]
  45107c:	movsxd eax,DWORD PTR [rdx-0x220bf4c1]
  451082:	pop    rsp
  451083:	jns    0x4510e0
  451085:	and    BYTE PTR [rbx+0x21b14b10],ch
  45108b:	mov    bl,0xfe
  45108d:	and    al,0x60
  45108f:	push   rdi
  451090:	cdq    
  451091:	jmp    0x10d611cf
  451096:	cwde   
  451097:	(bad)  
  451098:	jge    0x45110e
  45109a:	(bad)  
  45109b:	xor    QWORD PTR [rdi+r14*4],rbx
  45109f:	jno    0x4510d9
  4510a1:	(bad)  
  4510a2:	or     DWORD PTR [rsi+rsi*2-0x71],edi
  4510a6:	loopne 0x45110b
  4510a8:	and    DWORD PTR [rax+0x58e0debf],0x559d907d
  4510b2:	packsswb mm7,QWORD PTR [rbx-0x1e1cfbef]
  4510b9:	(bad)  
  4510ba:	(bad)  
  4510bb:	clc    
  4510bc:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4510bd:	sar    BYTE PTR [rdx+rdx*1],0xd9
  4510c1:	pop    rdi
  4510c2:	sbb    ebp,DWORD PTR [rax-0x2da8eef2]
  4510c8:	pop    rcx
  4510c9:	or     DWORD PTR [rsi-0x55b93f3e],eax
  4510cf:	push   rcx
  4510d0:	lahf   
  4510d1:	mov    cl,0x8d
  4510d3:	test   BYTE PTR [rcx],ah
  4510d5:	jnp    0x451082
  4510d7:	rex.WRX hlt 
  4510d9:	rex.XB sub al,0xc9
  4510dc:	(bad)  
  4510dd:	(bad)  
  4510de:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4510df:	(bad)  
  4510e0:	leave  
  4510e1:	cmc    
  4510e2:	(bad)
  4510e5:	mov    DWORD PTR [rcx+0x267d3f61],ebx
  4510eb:	adc    DWORD PTR [rcx],edx
  4510ed:	or     al,0x44
  4510ef:	in     eax,0x43
  4510f1:	jl     0x4510b5
  4510f3:	xor    DWORD PTR [rsi+0x1739f154],esi
  4510f9:	(bad)  
  4510fa:	pop    rsp
  4510fb:	shl    DWORD PTR [rbp+0x41454471],cl
  451101:	fs pop rdi
  451103:	sbb    bh,BYTE PTR [rdi+rbp*2]
  451106:	mov    ebp,0x865830c0
  45110b:	adc    bh,al
  45110d:	rex.WRX xchg rdx,rax
  45110f:	gs gs (bad) 
  451112:	popf   
  451113:	xlat   BYTE PTR ds:[rbx]
  451114:	movabs al,ds:0x64403dffd6936b6c
  45111d:	(bad)  
  45111e:	(bad)  
  45111f:	cmp    al,0x29
  451121:	pop    rsi
  451122:	rex.RXB
  451123:	movsxd esp,DWORD PTR fs:[rbp+0x0]
  451127:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  451128:	xor    edi,0x40c1f60c
  45112e:	xchg   DWORD PTR [rip+0x17a9c027],ebx        # 0x17eed15b
  451134:	test   edx,esp
  451136:	or     al,0x3
  451138:	(bad)  
  451139:	(bad)  
  45113a:	mov    ah,0xf6
  45113c:	mov    ebp,0x4e0c0fec
  451141:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  451142:	test   eax,0x8200f2f4
  451147:	add    eax,0xfa7c13ec
  45114c:	rex.RX push rbp
  45114e:	mov    ebp,0x4ac1b1e
  451153:	sbb    al,0xe4
  451155:	outs   dx,DWORD PTR ds:[rsi]
  451156:	add    al,0xd4
  451158:	rex.WRX ins DWORD PTR es:[rdi],dx
  45115a:	(bad)  
  45115b:	fcmove st,st(6)
  45115d:	xchg   ecx,eax
  45115e:	int    0xf7
  451160:	(bad)  
  451161:	add    cl,BYTE PTR [rbx+0x29]
  451164:	cmc    
  451165:	lock add BYTE PTR [rcx],bl
  451168:	add    eax,0x873a32b
  45116d:	rcl    DWORD PTR [rax],0x88
  451170:	mov    BYTE PTR [r10+0xfb25ddd],r14b
  451177:	pop    rcx
  451178:	test   al,0x21
  45117a:	xor    bl,cl
  45117c:	(bad)  
  45117d:	push   0x53995539
  451182:	in     al,0x58
  451184:	iret   
  451185:	(bad)  
  451186:	(bad)  
  451187:	rex.WX out 0xfe,al
  45118a:	scas   eax,DWORD PTR es:[rdi]
  45118b:	test   BYTE PTR [rdx-0x80],0x36
  45118f:	rex.XB je 0x4511ab
  451192:	outs   dx,BYTE PTR ds:[rsi]
  451193:	cmp    DWORD PTR [rax+0x3f2609a5],edx
  451199:	adc    BYTE PTR [rbp+0x42],bl
  45119c:	mov    WORD PTR [rax+0x40564982],gs
  4511a2:	xor    ah,BYTE PTR [rbx+0x18]
  4511a5:	xchg   esi,eax
  4511a6:	mov    ch,dl
  4511a8:	fist   WORD PTR ds:[rdx]
  4511ab:	or     bh,dh
  4511ad:	cmp    BYTE PTR [rdi-0x45],bl
  4511b0:	scas   al,BYTE PTR es:[rdi]
  4511b1:	movsxd esi,DWORD PTR [rdi+0x7]
  4511b4:	mov    BYTE PTR [rbx],ch
  4511b6:	mov    BYTE PTR [rbp+0x25637e52],bh
  4511bc:	mov    eax,0x3e7eab2
  4511c1:	and    al,0xd4
  4511c3:	mov    esi,0xfa6c1158
  4511c8:	ror    BYTE PTR [rsi],0xfc
  4511cb:	cmp    BYTE PTR [rdi+rsi*1],bl
  4511ce:	fwait
  4511cf:	sub    DWORD PTR [rcx],edi
  4511d1:	ins    DWORD PTR es:[rdi],dx
  4511d2:	rex.W
  4511d3:	rex.WR fsub DWORD PTR [rbp+0x3f]
  4511d7:	loop   0x451207
  4511d9:	mov    BYTE PTR [rcx-0x3096e0d4],cl
  4511df:	out    0x32,eax
  4511e1:	(bad)  
  4511e2:	js     0x4511e0
  4511e4:	mov    ebx,ecx
  4511e6:	mov    bh,0x1c
  4511e8:	test   al,0x1a
  4511ea:	adc    BYTE PTR [rax-0x50],0xb1
  4511ee:	jb     0x4511ec
  4511f0:	pop    rdx
  4511f1:	in     eax,dx
  4511f2:	js     0x45126a
  4511f4:	out    0x73,eax
  4511f6:	sar    DWORD PTR [rsi],0xcd
  4511f9:	jle    0x4511f5
  4511fb:	out    dx,eax
  4511fc:	cwde   
  4511fd:	pop    rdi
  4511fe:	add    al,0xff
  451200:	adc    DWORD PTR [rdi+rbx*1],ebx
  451203:	adc    BYTE PTR [rax],ah
  451205:	(bad)  {k1}
  45120a:	scas   al,BYTE PTR es:[rdi]
  45120b:	jbe    0x45121d
  45120d:	fistp  QWORD PTR [rcx+0x8]
  451210:	push   rbp
  451211:	movsxd eax,DWORD PTR [rbx+0x62]
  451214:	mov    esp,0xfa624220
  451219:	test   BYTE PTR [rax],al
  45121b:	sbb    ebp,esi
  45121d:	push   rbp
  45121e:	(bad)
  451221:	jmp    0xffffffff98698ab1
  451226:	xchg   edx,eax
  451227:	or     eax,0x1cd0a94e
  45122c:	(bad)  
  45122d:	(bad)  
  45122e:	adc    al,0x71
  451230:	stc    
  451231:	sub    al,0x57
  451234:	jl     0x45129f
  451236:	sti    
  451237:	test   BYTE PTR [rcx],0x7b
  45123a:	mov    BYTE PTR [rbx],ah
  45123c:	movsxd edi,ebx
  45123e:	lahf   
  45123f:	xor    DWORD PTR [rbp+0x26],ebp
  451242:	cmp    BYTE PTR [rsi+0x75bd5cc7],al
  451248:	(bad)  
  451249:	pop    rcx
  45124a:	cmp    DWORD PTR [rax-0x7a],ecx
  45124d:	push   rsi
  45124e:	(bad)  
  45124f:	and    BYTE PTR [rcx],dh
  451251:	addr32 int 0x4
  451254:	(bad)  
  451255:	push   0xffffffffc099707b
  45125a:	movabs al,ds:0xaa1a80900aec13ae
  451263:	std    
  451264:	popf   
  451265:	(bad)  
  451266:	pop    rbx
  451267:	or     DWORD PTR [rax+rdx*2],edi
  45126a:	jle    0x4512a9
  45126c:	adc    BYTE PTR ss:[rsp+rcx*1],al
  451270:	clc    
  451271:	jrcxz  0x451233
  451273:	out    0x3a,al
  451275:	(bad)  
  451276:	(bad)  
  451277:	cmp    cl,dh
  451279:	(bad)  
  45127a:	mov    BYTE PTR [rbp-0x60],dl
  45127d:	sar    BYTE PTR [rbx-0x7e],0x27
  451281:	ss push 0x7476d943
  451287:	ror    BYTE PTR [rax+0x2],0xd7
  45128b:	rcl    BYTE PTR [rbp-0x4a14e30a],0x48
  451292:	rex.WXB push r12
  451294:	push   rsp
  451295:	adc    dl,ah
  451297:	mov    bh,0x54
  451299:	je     0x45123e
  45129b:	adc    dh,BYTE PTR [rsi+0x6c]
  45129e:	sub    eax,DWORD PTR [rcx-0x68495736]
  4512a4:	add    eax,0x63c3d48
  4512a9:	icebp  
  4512aa:	mov    edi,0xb477dc18
  4512af:	jg     0x45128d
  4512b1:	(bad)  
  4512b2:	cmc    
  4512b3:	(bad)  
  4512b4:	cmp    al,0x32
  4512b6:	(bad)  
  4512b7:	sbb    ebx,DWORD PTR [rbp+0x78089f1c]
  4512bd:	(bad)  
  4512be:	and    al,0x60
  4512c0:	add    al,0x22
  4512c2:	loope  0x4512f6
  4512c4:	jbe    0x451290
  4512c6:	int3   
  4512c7:	idiv   bh
  4512c9:	xor    esp,DWORD PTR [rdi]
  4512cb:	(bad)  
  4512cc:	shr    BYTE PTR [rsi+0x9204bcc],cl
  4512d2:	loop   0x45134c
  4512d4:	(bad)  
  4512d5:	mov    r8b,0x4
  4512d8:	stos   DWORD PTR es:[rdi],eax
  4512d9:	mov    al,BYTE PTR [rdx]
  4512db:	jno    0x4512cc
  4512dd:	sbb    eax,0xa8f9b28
  4512e2:	add    al,0x1c
  4512e4:	lock test DWORD PTR [rdx+rax*2-0x512231e0],ecx
  4512ec:	movabs eax,ds:0xb920b1a2224a5002
  4512f5:	rcl    BYTE PTR [rbp+0x71b208e5],0xb2
  4512fc:	mov    edi,0x9cda1858
  451301:	test   al,0xc8
  451303:	push   rax
  451304:	jl     0x451363
  451306:	xchg   ebp,eax
  451307:	(bad)  
  451308:	(bad)  
  451309:	push   rcx
  45130a:	mov    edi,0x6578d6f9
  45130f:	and    BYTE PTR [rbp+0x3b],ch
  451312:	xchg   edi,ecx
  451314:	(bad)  
  451315:	adc    esp,DWORD PTR [rax]
  451317:	mov    al,0x31
  451319:	sti    
  45131a:	rex.WR mov bpl,0x34
  45131d:	and    al,0xd8
  45131f:	shl    BYTE PTR [rsi-0x4de51b3a],1
  451325:	scas   eax,DWORD PTR es:[rdi]
  451326:	and    al,0xf2
  451328:	rol    DWORD PTR [rax-0x39633620],cl
  45132e:	mov    dh,0x9e
  451330:	std    
  451331:	mov    DWORD PTR [rsi+rsi*4+0x26c38397],ebx
  451338:	sbb    al,0x4b
  45133a:	lock fadd DWORD PTR [rdx+0x42]
  45133e:	push   rdx
  45133f:	(bad)  
  451340:	stos   DWORD PTR es:[rdi],eax
  451341:	and    al,0x8
  451343:	test   eax,0x845ec0c4
  451348:	rex.WRB cqo 
  45134a:	mov    gs,WORD PTR [rdx+rdx*1+0x758e7d96]
  451351:	pushf  
  451352:	rex.WX mov ?,WORD PTR [rdi]
  451355:	(bad)  
  451356:	xlat   BYTE PTR ds:[rbx]
  451357:	mov    edi,0xb421f674
  45135c:	jrcxz  0x451345
  45135e:	xor    DWORD PTR [rbx],0x38
  451361:	data16 mov bl,0x41
  451364:	mov    dl,0x33
  451366:	(bad)  
  451367:	xor    edi,DWORD PTR [rdx+0x59049ccd]
  45136d:	sub    ch,BYTE PTR [rax]
  45136f:	fs mov edx,ebp
  451372:	rex test eax,0x6d9b2c8c
  451378:	jae    0x4513f6
  45137a:	sbb    al,0x25
  45137c:	movabs ds:0xca0243c1fbe0445c,al
  451385:	lods   al,BYTE PTR ds:[rsi]
  451386:	pushf  
  451387:	gs call 0xffffffffe7a2caec
  45138d:	int    0x5
  45138f:	pop    rdi
  451390:	js     0xffffffffd8e59496
  451396:	or     al,0x42
  451398:	in     eax,0xde
  45139a:	adc    eax,0xd393ae08
  45139f:	xor    bl,BYTE PTR ds:[rdx]
  4513a2:	out    dx,eax
  4513a3:	pop    rdx
  4513a4:	push   rax
  4513a5:	pop    rcx
  4513a6:	jbe    0x451424
  4513a8:	mov    esi,0xa9e254a0
  4513ad:	cmp    ch,BYTE PTR [rsi+0x427da530]
  4513b3:	and    eax,0x2a0d8e68
  4513b8:	fisttp DWORD PTR [rbp-0x15]
  4513bb:	(bad)  
  4513bc:	mov    ch,0x16
  4513be:	xchg   esp,eax
  4513bf:	or     BYTE PTR [rcx],r14b
  4513c2:	gs sbb al,0xe5
  4513c5:	popf   
  4513c6:	cmp    ecx,ebp
  4513c8:	mov    edi,0x24fd9405
  4513cd:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4513ce:	outs   dx,BYTE PTR ds:[rsi]
  4513cf:	adc    cl,BYTE PTR [rax-0x60]
  4513d2:	loop   0x45144c
  4513d4:	rcl    BYTE PTR [rbx+riz*8-0x465770a3],1
  4513db:	(bad)  
  4513dc:	loop   0x451400
  4513de:	jo     0x4513d9
  4513e0:	ret    
  4513e1:	cmc    
  4513e2:	jl     0x45140a
  4513e4:	movabs ds:0x55b5d63080d5f608,eax
  4513ed:	imul   ebp,DWORD PTR [rbx],0x4d512101
  4513f3:	icebp  
  4513f4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4513f5:	add    BYTE PTR [rsi+0x26],al
  4513f8:	(bad)  
  4513f9:	mov    ebx,0x443d1016
  4513fe:	sbb    dh,dh
  451400:	push   rdi
  451401:	loopne 0x45142d
  451403:	mov    ch,0x89
  451405:	cli    
  451406:	sbb    eax,0xcf070f83
  45140b:	or     eax,0x3b1c144a
  451410:	(bad)  
  451412:	in     eax,0xbf
  451414:	cmp    dh,BYTE PTR [rdi+0x26]
  451417:	out    dx,eax
  451418:	and    eax,0x6044fe00
  45141d:	sar    DWORD PTR [rsi],cl
  45141f:	sbb    ebp,edi
  451421:	pop    rcx
  451422:	shl    DWORD PTR [rax+0x7d47d0ca],0x3a
  451429:	es push rax
  45142b:	and    BYTE PTR [r9-0x76f6dc7c],spl
  451432:	xor    esp,esp
  451434:	adc    r11b,r10b
  451437:	test   eax,0x7d8735e1
  45143c:	(bad)  
  45143d:	sahf   
  45143e:	stos   BYTE PTR es:[rdi],al
  45143f:	int3   
  451440:	jns    0x45140c
  451442:	repz imul esi,esi,0x181fd996
  451449:	test   al,0xf4
  45144b:	push   rsp
  45144c:	(bad)  
  45144d:	mov    BYTE PTR [rsi+riz*2],ch
  451450:	(bad)  
  451451:	and    BYTE PTR [rcx-0x613bc76f],ah
  451457:	rex.WR std 
  451459:	mov    edx,0xb5a6cd80
  45145e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  45145f:	add    ah,BYTE PTR [rbx]
  451461:	enter  0x6e88,0x5c
  451465:	(bad)  
  451466:	fcmovne st,st(0)
  451468:	leave  
  451469:	(bad)  
  45146a:	iret   
  45146b:	fsubr  DWORD PTR [r14]
  45146e:	cmp    BYTE PTR [rax],ch
  451470:	mov    edx,0xbcd26e72
  451475:	ins    DWORD PTR es:[rdi],dx
  451476:	ss sti 
  451478:	jg     0x451492
  45147a:	enter  0x1730,0x5a
  45147e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  45147f:	add    edx,DWORD PTR [rbx-0x5616b852]
  451485:	stc    
  451486:	ja     0x45148b
  451488:	fwait
  451489:	push   rdx
  45148a:	pop    rax
  45148b:	pop    rcx
  45148c:	(bad)  
  45148d:	pop    rax
  45148e:	sub    DWORD PTR [rax-0x20],0x93e77a8c
  451495:	fldcw  WORD PTR [rsi+0x28afcdf3]
  45149b:	mov    edi,0x2a8a04d
  4514a0:	xchg   BYTE PTR [rbp+0x10],bh
  4514a3:	je     0x4514b1
  4514a5:	cli    
  4514a6:	hlt    
  4514a7:	rex.WRB mov r14b,0xbd
  4514aa:	movsxd edx,eax
  4514ac:	sahf   
  4514ad:	in     al,dx
  4514ae:	xor    esi,DWORD PTR [rbx+0xfaa79c1]
  4514b4:	sub    DWORD PTR [rbx+0x1e],0x957f2c35
  4514bb:	xchg   edx,edi
  4514bd:	test   DWORD PTR [rbx+rdx*4-0x77d93c78],esi
  4514c4:	lods   al,BYTE PTR ds:[rsi]
  4514c5:	fcom   QWORD PTR [rdx+0x36]
  4514c8:	push   rdx
  4514c9:	icebp  
  4514ca:	addr32 add al,0x14
  4514cd:	fstp   TBYTE PTR [rdx*1-0x7557fb97]
  4514d4:	in     al,0xe1
  4514d6:	in     eax,dx
  4514d7:	cwde   
  4514d8:	imul   ecx,DWORD PTR [rdx-0x2ec649c3],0xb7ccac72
  4514e2:	imul   eax,DWORD PTR [rbx-0xd4c1402],0x58
  4514e9:	xchg   esi,eax
  4514ea:	xchg   edx,eax
  4514eb:	sub    DWORD PTR [rsi+0x1e],edi
  4514ee:	sub    al,0x7
  4514f0:	rep lods eax,DWORD PTR ds:[rsi]
  4514f2:	(bad)  
  4514f3:	xor    eax,0x6591fd26
  4514f8:	int    0xd1
  4514fa:	jmp    0x451576
  4514fc:	xor    ch,BYTE PTR [rdi+0x1359b1b8]
  451502:	js     0x451580
  451504:	rex fmul DWORD PTR [rcx]
  451507:	std    
  451508:	test   BYTE PTR [rax+0x13f18290],0x89
  45150f:	cmp    cl,BYTE PTR [rdi-0x65]
  451512:	(bad)  
  451513:	sar    BYTE PTR [rsi+0x44],0x46
  451517:	pop    rsp
  451518:	shr    DWORD PTR [rsp],cl
  45151b:	test   al,0xaa
  45151d:	mov    sil,0x46
  451520:	xor    dh,dh
  451522:	sbb    DWORD PTR [rsi+0x237f266f],ecx
  451528:	mov    al,0xe3
  45152a:	fstp   DWORD PTR [rbp+0x17e2ca68]
  451530:	or     BYTE PTR [rbx+rsi*1-0x4],dl
  451534:	xor    BYTE PTR [rax+0x6cbc8fc6],0xa8
  45153b:	outs   dx,DWORD PTR ds:[rsi]
  45153c:	xchg   edi,eax
  45153d:	js     0x7aed61d5
  451543:	xor    ah,BYTE PTR [rdi+0x55]
  451546:	lea    ecx,[rcx+0x18]
  451549:	(bad)  
  45154a:	or     BYTE PTR [rsi-0x76145403],al
  451550:	rex.RXB xlat BYTE PTR ds:[rbx]
  451552:	nop
  451553:	(bad)  
  451554:	fdiv   DWORD PTR [rbp+rdi*1+0x2e]
  451558:	and    DWORD PTR [rbp-0x1b8e7495],esp
  45155e:	std    
  45155f:	gs add al,0x27
  451563:	mov    ah,0xbe
  451565:	stos   BYTE PTR es:[rdi],al
  451566:	mov    edx,0xcfa2e236
  45156b:	fst    DWORD PTR [rbp+rax*4-0xd]
  45156f:	ret    0x4469
  451572:	movabs ds:0x5a61146d59440684,al
  45157b:	(bad)  
  45157c:	test   al,0x36
  45157e:	sub    BYTE PTR [rdx+0x3337074d],ch
  451584:	scas   eax,DWORD PTR es:[rdi]
  451585:	push   rbx
  451586:	retf   
  451587:	push   rbx
  451588:	rex
  451589:	gs (bad) 
  45158b:	lea    edi,[rdx+0xc27f5e]
  451591:	(bad)  
  451592:	iret   
  451593:	ds rex.WX enter 0x9390,0xca
  451599:	xchg   ebx,eax
  45159a:	movsxd rsp,DWORD PTR [r8-0x58]
  45159e:	cmp    eax,0x7a41c081
  4515a3:	or     ebx,DWORD PTR [rdx]
  4515a5:	xchg   ebx,eax
  4515a6:	mov    fs,ebx
  4515a8:	adc    dh,cl
  4515aa:	(bad)  
  4515ab:	rcr    bl,1
  4515ad:	rex.WRX cmp rsi,r8
  4515b0:	jns    0x451606
  4515b2:	(bad)  
  4515b3:	(bad)  
  4515b4:	fs test al,0xb5
  4515b7:	(bad)  
  4515b8:	pop    rdx
  4515b9:	xchg   esi,eax
  4515ba:	popf   
  4515bb:	je     0x4515ca
  4515bd:	mov    fs,WORD PTR [rdi+0x2827c8b8]
  4515c3:	out    dx,eax
  4515c4:	(bad)  
  4515c5:	sub    BYTE PTR [rdi-0x41],cl
  4515c8:	adc    BYTE PTR [rax+0x7b03b14f],bl
  4515ce:	sbb    edi,DWORD PTR [rbx+0x3d005af2]
  4515d4:	(bad)  
  4515d5:	(bad)  
  4515d6:	jg     0x4515ed
  4515d8:	mov    ah,ch
  4515da:	mov    fs,WORD PTR [rax+0x44]
  4515dd:	adc    DWORD PTR [rax-0x616ff093],0xffffffe0
  4515e4:	fdivr  QWORD PTR [rax-0x30]
  4515e7:	addr32 out 0x10,eax
  4515ea:	movabs al,ds:0x7f505cf972e882f5
  4515f3:	mov    edx,0xbfa937b5
  4515f8:	sub    al,BYTE PTR [rip+0xffffffffaed195e3]        # 0xffffffffaf16abe1
  4515fe:	sbb    eax,0x1d9021dc
  451603:	mov    BYTE PTR [rax+rax*4+0x15131e57],cl
  45160a:	rex.R
  45160b:	rex.X mov cl,dl
  45160e:	rex.WR xor r14b,BYTE PTR [rbx+0x7774f9b6]
  451615:	movabs al,ds:0x547d4db82072fe34
  45161e:	(bad)  
  45161f:	ret    
  451620:	rcr    BYTE PTR [rax],cl
  451622:	pop    rcx
  451623:	lods   al,BYTE PTR ds:[rsi]
  451624:	mov    ebx,DWORD PTR [rax+0x13]
  451627:	push   rcx
  451628:	cmp    DWORD PTR [rax+0x4d931145],esi
  45162e:	xchg   esi,eax
  45162f:	add    esp,DWORD PTR [rdx-0x5b]
  451632:	(bad)  
  451633:	(bad)  
  451634:	rex mov ecx,0x612278ed
  45163a:	lahf   
  45163b:	mov    cl,0xfb
  45163d:	fwait
  45163e:	(bad)  
  45163f:	(bad)  
  451640:	dec    BYTE PTR gs:[rbx+rdi*4-0x62]
  451645:	int3   
  451646:	es loope 0x451659
  451649:	or     BYTE PTR [rbx-0x70],ah
  45164c:	ins    DWORD PTR es:[rdi],dx
  45164d:	xchg   ebp,eax
  45164e:	loope  0x4515fe
  451650:	(bad)  
  451651:	and    DWORD PTR [rax-0x612a8ee7],esi
  451657:	mov    esi,0x52cab5b1
  45165c:	(bad)  
  45165d:	es push rsi
  45165f:	enter  0xcdfd,0x80
  451663:	add    BYTE PTR [rax-0x53d6ace],ch
  451669:	ss adc al,0x27
  45166c:	repz movsxd esp,DWORD PTR [rdx-0x39294e8a]
  451673:	fsub   DWORD PTR [rsi+0x40a8ec62]
  451679:	rex.WB lods al,BYTE PTR ds:[rsi]
  45167b:	mov    edi,0x5c880a1f
  451680:	mov    DWORD PTR [rdx],ebx
  451682:	and    bl,BYTE PTR [rbx-0x2ee0e401]
  451688:	xor    DWORD PTR [rbp+0x61],eax
  45168b:	fild   QWORD PTR [rcx+0x1c]
  45168e:	repnz fldln2 
  451691:	(bad)  
  451692:	(bad)  
  451693:	ja     0x4516a2
  451695:	rex.WR js 0x45170b
  451698:	mov    dh,BYTE PTR [rbp+0x68]
  45169e:	add    BYTE PTR [rcx+0x45],cl
  4516a1:	rex.WRX
  4516a2:	rex.R scas al,BYTE PTR es:[rdi]
  4516a4:	rex.X (bad) 
  4516a6:	(bad)  
  4516a7:	or     eax,DWORD PTR [rcx+0x0]
  4516aa:	add    DWORD PTR [rax],eax
  4516ac:	add    BYTE PTR [rax],al
  4516ae:	(bad)  
  4516af:	(bad)  
  4516b0:	(bad)  
  4516b1:	inc    DWORD PTR [rcx]
  4516b3:	add    BYTE PTR [rax],al
  4516b5:	add    BYTE PTR [rax],al
  4516b7:	add    BYTE PTR [rax],al
  4516b9:	add    BYTE PTR [rdx+rax*1],cl
  4516bc:	add    BYTE PTR [rax],al
  4516be:	add    BYTE PTR [rcx+0x53],dl
  4516c1:	jns    0x451736
  4516c3:	je     0x45172a
  4516c5:	ins    DWORD PTR es:[rdi],dx
  4516c6:	cs rex.R jb 0x45172b
  4516ca:	ja     0x451735
  4516cc:	outs   dx,BYTE PTR ds:[rsi]
  4516cd:	addr32 sub al,0x20
  4516d0:	push   rsi
  4516d1:	gs jb  0x451747
  4516d4:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  4516db:	xor    BYTE PTR cs:[rsi],ch
  4516de:	xor    BYTE PTR [rax+riz*1],ch
  4516e1:	rex.XB jne 0x451750
  4516e4:	je     0x45175b
  4516e6:	jb     0x45174d
  4516e8:	cmp    eax,0x7475656e
  4516ed:	jb     0x451750
  4516ef:	ins    BYTE PTR es:[rdi],dx
  4516f0:	sub    al,0x20
  4516f2:	push   rax
  4516f3:	jne    0x451757
  4516f5:	ins    BYTE PTR es:[rdi],dx
  4516f6:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  4516fd:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  451701:	(bad)  
  451702:	xor    BYTE PTR [rbx],dh
  451704:	xor    ax,0x3766
  451708:	xor    WORD PTR [rcx],si
  45170b:	fs xor eax,0x61336130
  451711:	add    eax,0x1
  451716:	adc    eax,0x74737953
  45171b:	gs ins DWORD PTR es:[rdi],dx
  45171d:	cs rex.R jb 0x451782
  451721:	ja     0x45178c
  451723:	outs   dx,BYTE PTR ds:[rsi]
  451724:	imul   esi,DWORD PTR cs:[ebp+r13d*2+0x61],0x170
  45172f:	add    BYTE PTR [rsp+rax*2],al
  451732:	(bad)  
  451733:	je     0x451796
  451735:	(bad)  
  451736:	add    al,BYTE PTR [rdx]
  451738:	add    BYTE PTR [rax],al
  45173a:	add    BYTE PTR [rcx],cl
  45173c:	add    eax,DWORD PTR [rax]
  45173e:	add    BYTE PTR [rax],al
  451740:	lsl    eax,WORD PTR [rax]
  451743:	add    BYTE PTR [rax],al
  451745:	and    BYTE PTR [rsi],cl
  451747:	add    BYTE PTR [rax],al
  451749:	add    cl,BYTE PTR [rcx+0xd474e50]
  45174f:	or     bl,BYTE PTR [rdx]
  451751:	or     al,BYTE PTR [rax]
  451753:	add    BYTE PTR [rax],al
  451755:	or     eax,0x52444849
  45175a:	add    BYTE PTR [rax],al
  45175c:	add    BYTE PTR [rax+0x28000000],ah
  451762:	or     BYTE PTR [rsi],al
  451764:	add    BYTE PTR [rax],al
  451766:	add    BYTE PTR [rcx+0x2c],bh
  451769:	icebp  
  45176a:	cwde   
  45176b:	add    BYTE PTR [rax],al
  45176d:	add    BYTE PTR [rcx],al
  45176f:	jae    0x4517c3
  451771:	rex.RXB
  451772:	rex.X add BYTE PTR [rsi+0xe91cce],bpl
  451779:	add    BYTE PTR [rax],al
  45177b:	add    al,0x67
  45177d:	rex.B
  45177e:	rex.WRB
  45177f:	add    BYTE PTR [r8],al
  451782:	mov    cl,0x8f
  451784:	or     edi,esp
  451786:	(bad)  
  451787:	add    eax,0x20000000
  45178c:	movsxd ecx,DWORD PTR [rax+0x52]
  45178f:	rex.WRB add BYTE PTR [r8],r8b
  451792:	jp     0x4517ba
  451794:	add    BYTE PTR [rax],al
  451796:	add    BYTE PTR [rax+rax*1+0xfa00],0x0
  45179e:	sub    al,0x0
  4517a1:	add    BYTE PTR [rbp+0x30],dh
  4517a4:	add    BYTE PTR [rax],al
  4517a6:	(bad)  
  4517a7:	(bad)  
  4517a8:	add    BYTE PTR [rax],al
  4517aa:	cmp    bl,BYTE PTR [rax+0x70170000]
  4517b0:	pushf  
  4517b1:	mov    edx,0x3c51
  4517b6:	add    BYTE PTR [rcx],cl
  4517b8:	jo     0x451802
  4517ba:	pop    rcx
  4517bb:	jae    0x4517bd
  4517bd:	add    BYTE PTR [rsi],cl
  4517bf:	(bad)  
  4517c0:	add    BYTE PTR [rax],al
  4517c2:	(bad)  
  4517c3:	(bad)
  4517c7:	(bad)  
  4517c8:	sbb    eax,DWORD PTR [rax]
  4517ca:	add    BYTE PTR [rip+0x41444989],cl        # 0x41896159
  4517d0:	push   rsp
  4517d1:	js     0x451831
  4517d3:	in     eax,dx
  4517d4:	pop    rsp
  4517d5:	imul   esi,DWORD PTR [rax+0x15],0xffffffd5
  4517d9:	sbb    eax,0x500620bf
  4517de:	rex.W
  4517df:	add    DWORD PTR ss:[rdx],edx
  4517e2:	or     BYTE PTR [rdx-0x49],ch
  4517e5:	push   rsi
  4517e6:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4517e7:	mov    ss,WORD PTR [rsi-0x45]
  4517ea:	mov    dl,BYTE PTR [rbp+0x11]
  4517ed:	fld    TBYTE PTR [rsi]
  4517ef:	ds data16 test al,0x7d
  4517f3:	int3   
  4517f4:	(bad)  
  4517f5:	hlt    
  4517f6:	xchg   ebx,eax
  4517f7:	ror    DWORD PTR [rdi],cl
  4517f9:	fucomp st(1)
  4517fb:	xchg   edi,eax
  4517fc:	jle    0x451866
  4517fe:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4517ff:	mov    bl,0x9d
  451801:	jle    0x451873
  451803:	cli    
  451804:	ins    DWORD PTR es:[rdi],dx
  451805:	in     eax,dx
  451806:	xlat   BYTE PTR ds:[rbx]
  451807:	mov    dh,0xde
  451809:	push   rsi
  45180a:	mov    ah,0x20
  45180c:	push   rbp
  45180d:	ss add dh,dl
  451810:	push   rax
  451811:	shl    ch,cl
  451813:	std    
  451814:	mov    cs,WORD PTR [rbx]
  451816:	add    DWORD PTR [rdx],edx
  451818:	add    DWORD PTR [rcx+0x79],esp
  45181b:	(bad)  
  45181c:	rex.XB (bad) 
  45181e:	or     DWORD PTR [rdx+0x401b2489],eax
  451824:	mov    eax,cs
  451826:	xchg   ebp,ebp
  451828:	push   QWORD PTR [rdi+0x7b]
  45182b:	(bad)  
  45182c:	js     0x45180a
  45182e:	fnstcw WORD PTR [rbx-0x47]
  451831:	mov    ecx,0xb2992af7
  451836:	call   FWORD PTR [rcx-0x18c26301]
  45183c:	cld    
  45183d:	(bad)  
  45183f:	mov    bh,0xe7
  451841:	in     al,dx
  451842:	outs   dx,BYTE PTR ds:[rsi]
  451843:	mov    eax,0x4914cb0c
  451848:	mov    ebx,edi
  45184a:	pop    rbp
  45184b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  45184c:	(bad)  
  45184d:	sbb    al,0x59
  45184f:	cmc    
  451850:	jmp    0x4517fc
  451852:	stos   BYTE PTR es:[rdi],al
  451853:	sub    al,BYTE PTR [rbp-0x62616826]
  451859:	(bad)  
  45185a:	movabs ds:0x4a056962a6aa45bd,eax
  451863:	scas   eax,DWORD PTR es:[rdi]
  451864:	rcr    BYTE PTR [rcx+rdi*4+0xb79cc0b],0xdf
  45186c:	cmc    
  45186d:	fild   QWORD PTR [rcx+0x5e]
  451870:	(bad)  
  451871:	(bad)  
  451872:	pop    rbx
  451873:	mov    ecx,0xb5b2d956
  451878:	rex.WRB fcmovnu st,st(6)
  45187b:	mov    esi,0xc5ba5b23
  451880:	push   rsp
  451881:	xor    ebp,DWORD PTR [rbp-0x7eaeec0]
  451887:	jmp    0x4518c8
  451889:	sbb    WORD PTR [rbx],si
  45188c:	addr32 int 0xd
  45188f:	(bad)  
  451890:	out    0x2f,al
  451892:	mov    DWORD PTR [rsi+0x75dcabba],edx
  451898:	sbb    edi,DWORD PTR [rip+0x76b6cb7b]        # 0x76fbe419
  45189e:	movsxd eax,edi
  4518a0:	scas   al,BYTE PTR es:[rdi]
  4518a1:	cmp    eax,0xfbbd9eda
  4518a6:	std    
  4518a7:	and    cl,BYTE PTR [rsp+riz*4+0x22]
  4518ab:	imul   eax,DWORD PTR [rip+0xffffffff9380ab4a],0xe57b43b9        # 0xffffffff93c5c3ff
  4518b5:	(bad)
  4518b8:	scas   eax,DWORD PTR es:[rdi]
  4518b9:	(bad)  
  4518ba:	jbe    0x451870
  4518bc:	and    eax,0x2bbb974b
  4518c1:	xlat   BYTE PTR ds:[rbx]
  4518c2:	ins    BYTE PTR es:[rdi],dx
  4518c3:	mov    al,0x36
  4518c5:	mov    ebp,0xdedf45b7
  4518ca:	mov    esi,0xb9f026d3
  4518cf:	(bad)  
  4518d0:	nop    DWORD PTR [rcx+0x613f1d8e]
  4518d7:	xchg   esi,eax
  4518d8:	cmp    ax,0x4ad5
  4518dc:	sub    esi,DWORD PTR [rax-0x63]
  4518df:	or     cl,ah
  4518e1:	sbb    esi,DWORD PTR [rsi]
  4518e3:	pop    rcx
  4518e4:	pop    rcx
  4518e5:	xor    bh,BYTE PTR [rcx+rdx*8-0x6d9dc9a1]
  4518ec:	mov    edi,0x673ee1a6
  4518f1:	jrcxz  0x451892
  4518f3:	pop    rdi
  4518f4:	mov    bl,BYTE PTR [rdx+0x5f]
  4518f7:	clc    
  4518f8:	(bad)  
  4518f9:	in     eax,0xef
  4518fb:	cmp    esp,DWORD PTR [rax+0x1e]
  4518fe:	cmp    al,0x74
  451900:	and    al,0x38
  451902:	jp     0x4518f0
  451904:	test   ch,dl
  451906:	sbb    DWORD PTR [rdx+rcx*1+0x28cebaba],ebx
  45190d:	imul   esi,DWORD PTR [rcx],0x2d7c0ad3
  451913:	adc    eax,0x92623e58
  451918:	mov    dl,0xee
  45191a:	(bad)  
  45191b:	(bad)  
  45191c:	(bad)  
  45191d:	mov    ebp,0xeb677aaa
  451922:	test   al,0x9
  451924:	jle    0x451921
  451926:	test   al,0x9
  451928:	fisubr WORD PTR [rsi+0x3dc3e3d1]
  45192e:	mov    bh,0x8d
  451930:	repz std 
  451932:	fcmovnb st,st(6)
  451934:	jns    0x45197d
  451936:	jg     0x451933
  451938:	sti    
  451939:	loopne 0x45192b
  45193b:	(bad)  
  45193c:	pop    rdi
  45193d:	enter  0xbeee,0x6d
  451941:	mov    esp,0x815e
  451946:	in     al,0xb8
  451948:	sbb    eax,0x8d98c695
  45194d:	or     bh,al
  45194f:	nop
  451950:	rex.WRB rcr BYTE PTR [r14-0x56649ea5],0xb9
  451958:	rex.WX push rdi
  45195a:	(bad)  
  45195b:	repz enter 0x857a,0x80
  451960:	out    0x3,eax
  451962:	je     0x45195f
  451964:	outs   dx,BYTE PTR ds:[rsi]
  451965:	(bad)  
  451966:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  451967:	sbb    eax,0x1cab531f
  45196c:	sbb    edx,DWORD PTR [rbx-0x15]
  45196f:	(bad)  
  451970:	sbb    eax,0x191fe753
  451975:	push   rbx
  451976:	out    0x1d,eax
  451978:	mov    esp,0x71a1cebd
  45197d:	(bad)  
  45197e:	out    0xa3,al
  451980:	sbb    eax,0x407c7a3
  451985:	push   rsp
  451986:	xchg   edi,eax
  451987:	add    BYTE PTR [rbx-0x53],ch
  45198a:	mov    ebx,0x33802275
  45198f:	sbb    BYTE PTR [rdx],al
  451991:	clc    
  451992:	and    ah,BYTE PTR [rdx+0x4d]
  451995:	push   rdx
  451996:	bnd call 0xffffffff95a83076
  45199c:	(bad)  
  45199d:	(bad)  
  45199e:	sub    BYTE PTR [rax],al
  4519a0:	outs   dx,DWORD PTR ds:[rsi]
  4519a1:	push   rdx
  4519a2:	or     eax,DWORD PTR [rsi]
  4519a4:	pop    rcx
  4519a5:	(bad)  
  4519a6:	xchg   ebp,eax
  4519a7:	div    BYTE PTR [rbx]
  4519a9:	cwde   
  4519aa:	sbb    ah,BYTE PTR [rdx+rsi*4-0x225feab7]
  4519b1:	cmp    QWORD PTR [rsi+r12*4],r15
  4519b5:	cs call 0x7d3074d3
  4519bb:	pop    rax
  4519bc:	lods   eax,DWORD PTR ds:[rsi]
  4519bd:	clc    
  4519be:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4519bf:	stos   BYTE PTR es:[rdi],al
  4519c0:	xchg   ebp,eax
  4519c1:	fadd   QWORD PTR [rdx-0x1b28aa8b]
  4519c7:	jbe    0x451959
  4519c9:	(bad)  
  4519ca:	mov    cl,0xa
  4519cc:	rex imul ebp,edi,0x24ee9023
  4519d3:	adc    BYTE PTR [rsi+0x19],ch
  4519d6:	pop    rcx
  4519d7:	out    dx,eax
  4519d8:	outs   dx,BYTE PTR ds:[rsi]
  4519d9:	test   al,0x6a
  4519db:	mov    BYTE PTR [rsi-0x74],dl
  4519de:	cwde   
  4519df:	sbb    BYTE PTR [rbx+rdi*2+0x60bda34b],bh
  4519e6:	fsub   DWORD PTR [rbp+rsi*4-0x78]
  4519ea:	retf   0x32
  4519ed:	sbb    eax,0x403e8b21
  4519f2:	ret    0x8400
  4519f5:	rex.WRXB test QWORD PTR [r8],r11
  4519f8:	repz add BYTE PTR [rsi],ah
  4519fb:	cli    
  4519fc:	js     0x451a11
  4519fe:	rex.RXB (bad) 
  451a00:	xlat   BYTE PTR ds:[rbx]
  451a01:	nop
  451a02:	ret    
  451a03:	cmp    dl,bh
  451a05:	nop
  451a06:	mov    bl,0x24
  451a08:	cmp    DWORD PTR [rbp-0x5354ee52],ecx
  451a0e:	(bad)  
  451a0f:	fucomi st,st(0)
  451a11:	(bad)  
  451a12:	(bad)  
  451a13:	movabs eax,ds:0x308a8ae5f4ab1787
  451a1c:	in     al,0x8
  451a1e:	movabs al,ds:0xfdaa51ea26a6a8fb
  451a27:	(bad)  
  451a28:	mov    edx,0xa6682c6a
  451a2d:	mov    bh,0xb6
  451a2f:	fidivr DWORD PTR [rbx]
  451a31:	scas   eax,DWORD PTR es:[rdi]
  451a32:	push   rsp
  451a33:	sbb    esp,DWORD PTR [rdi+0x6b]
  451a36:	push   0xffffffffffffff82
  451a38:	(bad)  
  451a39:	lods   al,BYTE PTR ds:[rsi]
  451a3a:	(bad)
  451a3f:	mov    edi,0x28031c7d
  451a44:	mov    bl,0xfa
  451a46:	(bad)  
  451a47:	mov    DWORD PTR [rsi-0xd],esp
  451a4a:	sub    eax,0x60025c93
  451a4f:	rex.R (bad) 
  451a51:	xor    eax,0x205ab10e
  451a56:	xor    DWORD PTR [rbp+0x2],ebx
  451a59:	add    al,0xe4
  451a5b:	add    BYTE PTR [rax],bl
  451a5d:	or     BYTE PTR [rdx],0x8c
  451a60:	cmp    DWORD PTR [rsp+rcx*1+0xc819838],esi
  451a67:	add    BYTE PTR [rcx+rcx*4+0x39],ah
  451a6b:	enter  0xc42b,0xf0
  451a6f:	(bad)  
  451a70:	xor    esi,ebx
  451a72:	and    QWORD PTR [r15],r8
  451a75:	push   rax
  451a76:	sbb    DWORD PTR [rdx+0x7],eax
  451a79:	rol    BYTE PTR [rbx-0x4fbe8be4],0xb
  451a80:	cmp    WORD PTR [rsi],bx
  451a83:	(bad)  
  451a84:	shr    DWORD PTR [rcx+0x33],cl
  451a87:	fs sub dl,al
  451a8a:	push   rdi
  451a8b:	push   rdi
  451a8c:	sbb    eax,0x73afa85c
  451a91:	(bad)  
  451a92:	jge    0x451a3f
  451a94:	xor    DWORD PTR [rsp+rsi*8+0x4bc2bb9d],edi
  451a9b:	(bad)  
  451a9c:	in     al,0xe8
  451a9e:	rex.X jrcxz 0x451a25
  451aa1:	add    BYTE PTR [rax+0x4cbc588],0xd5
  451aa8:	mov    al,BYTE PTR [rbx+0x47]
  451aab:	mov    ah,0x89
  451aad:	imul   edi,DWORD PTR [rdx],0xffffffb6
  451ab0:	mov    ch,0x96
  451ab2:	stos   BYTE PTR es:[rdi],al
  451ab3:	(bad)  
  451ab4:	jnp    0x451a9b
  451ab6:	mov    BYTE PTR [rcx-0x721e1d22],cl
  451abc:	push   r11
  451abe:	out    0x8e,al
  451ac0:	nop
  451ac1:	add    BYTE PTR [rax],cl
  451ac3:	(bad)  
  451ac4:	int    0x27
  451ac6:	nop
  451ac7:	rex add DWORD PTR cs:[rax],esi
  451acb:	add    BYTE PTR [rax+rbx*8-0x67],al
  451acf:	xor    BYTE PTR [rsi+0x700b73e],al
  451ad5:	scas   al,BYTE PTR es:[rdi]
  451ad6:	cdq    
  451ad7:	loop   0x451af9
  451ad9:	ret    0xcb38
  451adc:	ret    0xc00f
  451adf:	xchg   BYTE PTR [rsi],dl
  451ae1:	(bad)  
  451ae2:	xchg   esp,eax
  451ae3:	jne    0x451abd
  451ae5:	(bad)  
  451ae6:	(bad)  
  451ae7:	(bad)  
  451ae8:	(bad)  
  451ae9:	pushf  
  451aea:	rcl    BYTE PTR [rax-0x51],cl
  451aed:	add    BYTE PTR [rcx],al
  451aef:	iret   
  451af0:	mov    ebp,0x957bbdfc
  451af5:	add    edi,0x47b3ed35
  451afb:	(bad)  
  451afc:	or     al,0x3f
  451afe:	jnp    0x451ae4
  451b00:	sub    eax,0x46f703f2
  451b06:	xchg   edi,eax
  451b07:	out    dx,al
  451b08:	mov    esi,0xafafebd3
  451b0d:	xor    eax,0x490ed1cf
  451b12:	(bad)  
  451b13:	mov    cl,0x43
  451b15:	iret   
  451b16:	test   DWORD PTR [rcx],eax
  451b18:	sbb    eax,0x3f3d2ec5
  451b1d:	(bad)  
  451b1e:	imul   ebp,ecx,0x59
  451b21:	nop
  451b22:	mov    fs,WORD PTR [rcx-0x1]
  451b25:	ins    DWORD PTR es:[rdi],dx
  451b26:	cmp    al,BYTE PTR [rsi+0xba7c09]
  451b2c:	and    DWORD PTR [rsi-0x4e],esi
  451b2f:	cmp    BYTE PTR [rcx],dh
  451b31:	sub    BYTE PTR [rcx+rcx*1],dl
  451b34:	cmp    BYTE PTR [rsi+riz*1],cl
  451b37:	outs   dx,BYTE PTR ds:[rsi]
  451b38:	add    DWORD PTR [rsp+rbp*8],edx
  451b3b:	je     0x451b25
  451b3d:	retf   
  451b3e:	and    dl,al
  451b40:	xor    eax,0x331e3976
  451b45:	jmp    0xffffffff83052e24
  451b4a:	cmp    al,0xef
  451b4c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  451b4d:	xchg   BYTE PTR [rax+0x7832df0d],dh
  451b53:	add    DWORD PTR [rax+0x75],edi
  451b56:	test   al,0xd7
  451b58:	jmp    QWORD PTR [rsi+0x43f2ef8f]
  451b5e:	neg    ecx
  451b60:	add    al,0x3e
  451b62:	jmp    0x451b57
  451b64:	(bad)  
  451b65:	(bad)  
  451b66:	(bad)  
  451b67:	pop    rsp
  451b68:	shl    DWORD PTR [rdi+0x136c4ba],1
  451b6e:	push   rcx
  451b6f:	(bad)  
  451b70:	push   rax
  451b71:	(bad)  
  451b72:	(bad)  
  451b73:	out    dx,eax
  451b74:	ins    BYTE PTR es:[rdi],dx
  451b75:	mov    al,ch
  451b77:	cmp    BYTE PTR [rsi+0x2c95aaba],cl
  451b7d:	cmp    eax,0x4c5b5e0f
  451b82:	jp     0x451b0f
  451b84:	jbe    0x451b6e
  451b86:	push   rbx
  451b87:	(bad)  
  451b88:	xor    eax,0x150011c0
  451b8d:	(bad)  
  451b8e:	lahf   
  451b8f:	sbb    BYTE PTR [rax],al
  451b91:	xchg   ecx,eax
  451b92:	or     DWORD PTR [rdx],edi
  451b94:	add    BYTE PTR [rsi],cl
  451b96:	or     BYTE PTR [rbp+0x50014022],ch
  451b9c:	(bad)  
  451b9d:	(bad)  
  451b9e:	sub    eax,0xb1367a08
  451ba3:	es leave 
  451ba5:	movsxd ebx,esp
  451ba7:	adc    bl,ah
  451ba9:	ins    BYTE PTR es:[rdi],dx
  451baa:	and    ebp,0xffffffa0
  451bad:	or     ebx,DWORD PTR [rbx-0x30]
  451bb0:	(bad)  
  451bb1:	cmp    eax,0xcf1cb3c8
  451bb6:	mov    cl,0x7d
  451bb8:	loope  0x451be0
  451bba:	ins    DWORD PTR es:[rdi],dx
  451bbb:	xchg   BYTE PTR [rbp+rax*1+0x6],bl
  451bbf:	(bad)  
  451bc0:	sti    
  451bc1:	mov    esi,0x33df0393
  451bc6:	shl    DWORD PTR [rdi+rbp*1+0x7fee9f9e],cl
  451bcd:	xor    DWORD PTR [rbx+0x37],eax
  451bd0:	scas   eax,DWORD PTR es:[rdi]
  451bd1:	rex.WR lahf 
  451bd3:	(bad)  
  451bd4:	or     eax,0xe8a1e0fc
  451bd9:	sar    DWORD PTR [rbx-0x2b],cl
  451bdc:	movabs al,ds:0x9e9f41e7a026aeaf
  451be5:	(bad)  
  451be6:	mov    cl,0xa8
  451be8:	cdq    
  451be9:	lods   eax,DWORD PTR ds:[rsi]
  451bea:	and    ebp,ebx
  451bec:	lods   eax,DWORD PTR ds:[rsi]
  451bed:	lea    edx,[rbp+0xd]
  451bf0:	(bad)  
  451bf1:	stos   BYTE PTR es:[rdi],al
  451bf2:	adc    DWORD PTR [rbx],edx
  451bf4:	jae    0x451c73
  451bf6:	or     DWORD PTR es:[rax+rax*1+0x1e411251],eax
  451bfe:	add    BYTE PTR [rax],0xe7
  451c01:	xchg   ebx,eax
  451c02:	xchg   ecx,eax
  451c03:	cmc    
  451c04:	(bad)  
  451c05:	sub    ebx,DWORD PTR [rdi+0x4e]
  451c08:	ins    DWORD PTR es:[rdi],dx
  451c09:	adc    DWORD PTR [rdi],ecx
  451c0b:	(bad)  
  451c0c:	not    BYTE PTR [rbp-0x65ce3544]
  451c12:	(bad)  
  451c13:	(bad)  
  451c14:	push   rcx
  451c15:	add    DWORD PTR [rcx-0x3500cbd9],0x57fa4fd3
  451c1f:	jg     0x451c17
  451c21:	mov    WORD PTR [rcx-0xb],?
  451c24:	(bad)  
  451c25:	iret   
  451c26:	rex.RB push r15
  451c28:	jg     0x451c24
  451c2a:	je     0x451ca4
  451c2c:	in     eax,0xd9
  451c2e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  451c2f:	mov    dl,0x3
  451c31:	rex.WRXB cmp al,0x1c
  451c34:	shr    dh,cl
  451c36:	test   al,0xf7
  451c38:	sub    dl,ch
  451c3a:	or     bh,BYTE PTR [rbp-0x490b4758]
  451c40:	mov    edi,cs
  451c42:	ss jp  0x451c40
  451c45:	test   al,0xf1
  451c47:	jle    0x451c94
  451c49:	push   rbp
  451c4a:	mov    ebp,0xb5a03b41
  451c4f:	jo     0x451c29
  451c51:	fs mov esp,0xf7627884
  451c57:	jae    0x451c02
  451c59:	mov    ch,0x13
  451c5b:	pop    rsi
  451c5c:	rex.WX mov al,0xb8
  451c5f:	cmp    BYTE PTR [rdx],bl
  451c61:	icebp  
  451c62:	int3   
  451c63:	xor    ebx,DWORD PTR es:[rsi+0x688092e5]
  451c6a:	sar    BYTE PTR [rax],1
  451c6c:	mov    ds,esi
  451c6e:	and    al,0xf9
  451c70:	jl     0x451c39
  451c72:	stos   BYTE PTR es:[rdi],al
  451c73:	sub    eax,0x860ed1e4
  451c78:	and    BYTE PTR [rdi-0x53411dc8],cl
  451c7e:	rcr    DWORD PTR [rax],0x49
  451c81:	rex.WXB lods al,BYTE PTR gs:[rsi]
  451c84:	shl    ch,0xfb
  451c87:	out    dx,eax
  451c88:	push   rcx
  451c89:	jmp    0xffffffff83452246
  451c8e:	(bad)  
  451c8f:	jle    0x451cc3
  451c91:	cmp    eax,0x67f3faba
  451c96:	mov    bl,0xc4
  451c98:	or     al,BYTE PTR [rax]
  451c9a:	stc    
  451c9b:	stc    
  451c9c:	mov    ah,0x47
  451c9e:	rex.WRB
  451c9f:	ss jnp 0x451c48
  451ca2:	mov    edx,0xb6313b46
  451ca7:	movs   BYTE PTR es:[rdi],BYTE PTR ss:[rsi]
  451ca9:	rex.WRXB xor r10b,BYTE PTR [r9-0x25]
  451cad:	test   al,0x9
  451caf:	shl    DWORD PTR [rsi],1
  451cb1:	fiadd  DWORD PTR [rcx]
  451cb3:	xchg   edi,eax
  451cb4:	(bad)  
  451cb5:	cwde   
  451cb6:	cwde   
  451cb7:	pop    rbp
  451cb8:	xor    al,0xbc
  451cba:	shl    DWORD PTR [rax+0x3b429117],1
  451cc0:	(bad)  
  451cc1:	add    dh,al
  451cc3:	or     ecx,DWORD PTR [rsi+rdx*1+0x65e30440]
  451cca:	add    al,0x8b
  451ccc:	scas   al,BYTE PTR es:[rdi]
  451ccd:	mov    DWORD PTR [rdx+0x7],0xb20c18c0
  451cd4:	mov    esp,0xe024e00c
  451cd9:	xchg   esi,eax
  451cda:	add    al,BYTE PTR [rax-0x27]
  451cdd:	(bad)  
  451cde:	mov    ebp,0xe40b067e
  451ce4:	adc    dl,BYTE PTR [rdi-0x20]
  451ce7:	es push rdi
  451ce9:	mov    ebx,0xcec9edf4
  451cee:	in     eax,0x7
  451cf0:	mov    edi,0x22d811eb
  451cf5:	(bad)  
  451cf7:	(bad)  
  451cf8:	sub    ecx,edi
  451cfa:	cmp    eax,0x70f81065
  451cff:	and    al,0x63
  451d01:	fdivr  QWORD PTR [rax-0x78db2888]
  451d07:	fiadd  WORD PTR [rsi+0x49f433c3]
  451d0d:	out    0x38,al
  451d0f:	jge    0x451d40
  451d11:	and    al,0x0
  451d13:	sbb    dh,ah
  451d15:	(bad)  
  451d16:	mov    edx,0x15e2e010
  451d1b:	(bad)
  451d1e:	add    BYTE PTR [rbp+0x19eb8d85],al
  451d24:	xor    al,0xa6
  451d26:	rex.WX or dil,BYTE PTR [rax-0x5a]
  451d2a:	fs lock and eax,0xbcb20001
  451d31:	xor    eax,DWORD PTR [rdx]
  451d33:	test   BYTE PTR [rdx-0x77fe9f12],dh
  451d39:	sbb    eax,DWORD PTR [rbx+0x26fc57d]
  451d3f:	(bad)  
  451d40:	sbb    DWORD PTR [rdi],ebx
  451d42:	mov    ebx,0x35f291c9
  451d47:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  451d48:	rex.WRXB (bad) 
  451d4b:	hlt    
  451d4c:	dec    BYTE PTR [rcx]
  451d4e:	mov    ch,0xd1
  451d50:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  451d51:	jnp    0x451d41
  451d53:	mov    bh,BYTE PTR [rsi]
  451d55:	jnp    0x451d4f
  451d57:	jle    0x451dc0
  451d59:	(bad)  
  451d5a:	ficom  DWORD PTR [rbx+riz*2]
  451d5d:	loopne 0x451d28
  451d5f:	rex.RXB cld 
  451d61:	sub    DWORD PTR [rcx-0x7e00acf1],0xeefbd3f0
  451d6b:	imul   BYTE PTR [rdi]
  451d6d:	cmp    al,0x37
  451d6f:	fnstsw WORD PTR [rcx-0x3fe29e50]
  451d75:	push   rbx
  451d76:	sub    dh,cl
  451d78:	out    dx,al
  451d79:	ja     0x451d38
  451d7b:	add    eax,0x16610195
  451d80:	jo     0x451d88
  451d82:	jo     0x451db4
  451d84:	or     BYTE PTR [rcx+0x160d3183],dh
  451d8a:	sub    BYTE PTR [rdi+rbx*2],0x4e
  451d8e:	outs   dx,BYTE PTR ds:[rsi]
  451d8f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  451d90:	(bad)  
  451d91:	and    al,0xd5
  451d93:	ret    
  451d94:	lahf   
  451d95:	fimul  WORD PTR [rsi-0x2d]
  451d98:	pop    rdi
  451d99:	(bad)  
  451d9a:	jb     0x451dbb
  451d9c:	movabs al,ds:0x22c1a3bc5e01be9
  451da5:	pop    rsp
  451da6:	lock jmp 0xffffffffc6264780
  451dac:	(bad)  
  451dad:	jmp    rsp
  451daf:	imul   edi
  451db1:	repz std 
  451db3:	mov    al,0x3f
  451db5:	push   rsp
  451db6:	(bad)  
  451db7:	pop    rsp
  451db8:	call   0xffffffffa246a694
  451dbd:	push   rdx
  451dbe:	mov    DWORD PTR [rcx],eax
  451dc0:	push   0x1f00c75c
  451dc5:	xchg   ebp,eax
  451dc7:	add    BYTE PTR [rdx],al
  451dc9:	(bad)  
  451dca:	out    0xdd,al
  451dcc:	or     eax,DWORD PTR [rax+0x400a9504]
  451dd2:	cmp    BYTE PTR [rcx-0x13e07de8],0xd0
  451dd9:	or     al,0x7e
  451ddb:	(bad)  
  451ddc:	or     DWORD PTR [rdi+0x4c361fec],ebx
  451de2:	(bad)  
  451de3:	mov    WORD PTR [rbx-0x44e772b],fs
  451de9:	movabs ds:0x79e2f9f3e23e3d0f,eax
  451df2:	push   rbp
  451df3:	or     BYTE PTR [rbx+riz*8-0x58ee01f1],dl
  451dfa:	jl     0x451e46
  451dfc:	lock sbb dl,ch
  451dff:	(bad)  
  451e00:	mov    BYTE PTR [rax-0x70cfa71c],bl
  451e06:	jno    0x451dd4
  451e08:	and    ebp,DWORD PTR [rsi-0x3c]
  451e0b:	iret   
  451e0c:	(bad)  
  451e0d:	mov    ecx,0x99642eb0
  451e12:	cmp    BYTE PTR [rsi+0x5e],cl
  451e15:	addr32 call 0x733e2c8d
  451e1b:	int    0x64
  451e1d:	call   0x67ccbcbd
  451e22:	cmp    al,BYTE PTR [rdx]
  451e24:	(bad)  
  451e25:	fmul   DWORD PTR [rbp-0x61]
  451e28:	pop    rcx
  451e29:	jp     0x451e4a
  451e2b:	fwait
  451e2c:	loop   0x451e8b
  451e2e:	ins    BYTE PTR es:[rdi],dx
  451e2f:	lods   al,BYTE PTR ds:[rsi]
  451e30:	xlat   BYTE PTR ds:[rbx]
  451e31:	(bad)  
  451e32:	cmp    edi,edi
  451e34:	mov    DWORD PTR [rsi-0x2],edi
  451e37:	cld    
  451e38:	jns    0x451e75
  451e3a:	or     al,0xfb
  451e3c:	(bad)  
  451e3d:	xor    BYTE PTR [rbx*1-0x20225efe],cl
  451e44:	fisttp WORD PTR [rdi]
  451e46:	(bad)  
  451e47:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  451e48:	adc    al,BYTE PTR [rbx]
  451e4a:	or     eax,DWORD PTR [rip+0x27181429]        # 0x275d3279
  451e50:	outs   dx,DWORD PTR ds:[rsi]
  451e51:	adc    al,0xe9
  451e53:	mov    BYTE PTR [rbx],dl
  451e55:	(bad)  
  451e56:	test   DWORD PTR [rbp+rbp*1+0x18b6878a],edi
  451e5d:	rex.X push rcx
  451e5f:	sbb    esp,eax
  451e61:	jb     0x451ea4
  451e63:	xchg   ebx,eax
  451e64:	je     0x451e87
  451e66:	retf   
  451e67:	(bad)  
  451e68:	movabs al,ds:0x9018e1d66be420c3
  451e71:	mov    bl,0x2c
  451e73:	(bad)  
  451e74:	icebp  
  451e75:	rex.X stc 
  451e77:	sar    DWORD PTR [rdi-0x1ad5494],0x0
  451e7e:	push   0xffffffffffffffd4
  451e80:	(bad)  
  451e81:	mov    WORD PTR [rbx-0x28],gs
  451e84:	add    eax,0xc40722a9
  451e89:	add    eax,0x3c7c4432
  451e8e:	(bad)  
  451e8f:	clc    
  451e90:	xchg   ecx,eax
  451e91:	and    edx,DWORD PTR [rbx]
  451e93:	(bad)  
  451e94:	mov    bh,0x44
  451e96:	xchg   DWORD PTR [rbx-0x7d],esp
  451e99:	rex.WRB adc BYTE PTR [r14+0x2e],r13b
  451e9d:	enter  0x522b,0x1f
  451ea1:	mov    esi,0x51b6d3f2
  451ea6:	adc    ebx,DWORD PTR [rdi+rcx*1+0x88f8f46]
  451ead:	test   BYTE PTR [rcx-0x39],ah
  451eb0:	(bad)  
  451eb1:	(bad)  
  451eb2:	sbb    BYTE PTR [rsi+0x5dbbe3da],bl
  451eb8:	addr32 (bad) 
  451eba:	in     al,0x94
  451ebc:	mov    edx,0x9ecdba7b
  451ec1:	rex.WRXB jp 0x451f30
  451ec4:	(bad)  
  451ec5:	out    dx,al
  451ec6:	jmp    0x451eb3
  451ec8:	jae    0x451ed3
  451eca:	mov    ch,ah
  451ecc:	add    BYTE PTR [rax+0x25],dl
  451ecf:	pop    rbx
  451ed0:	mov    esp,0x3ccd6818
  451ed5:	xchg   ecx,eax
  451ed6:	xor    DWORD PTR [rax],ebx
  451ed8:	cmp    BYTE PTR [rcx+0x24d03982],dl
  451ede:	loop   0x451e65
  451ee0:	(bad)  
  451ee1:	(bad)  
  451ee2:	mov    dl,BYTE PTR [rsi-0x12]
  451ee5:	pop    rdi
  451ee6:	rex.WRXB (bad) 
  451ee8:	repz jl 0x451f5e
  451eeb:	rex iret 
  451eed:	and    eax,0xc449ac46
  451ef2:	adc    BYTE PTR [rbx+0x1e590d0b],0xb7
  451ef9:	test   BYTE PTR [rdx],dl
  451efb:	mov    eax,0xf20c8260
  451f01:	ror    DWORD PTR [rax+0x27ec50b1],1
  451f07:	out    dx,al
  451f08:	add    edi,DWORD PTR [rsi+0x98a6731]
  451f0e:	(bad)  
  451f0f:	imul   edi,DWORD PTR [rsi],0x7f
  451f12:	sub    al,0x57
  451f14:	enter  0x419f,0xb6
  451f18:	cmp    BYTE PTR [rsi-0x30cf635c],ch
  451f1e:	rex
  451f1f:	rex.B (bad) 
  451f21:	call   0x105da3f1
  451f26:	(bad)  
  451f27:	jl     0x451eee
  451f29:	add    DWORD PTR [rip+0xffffffff841988bf],eax        # 0xffffffff845ea7ee
  451f2f:	xor    eax,0xf9ba6355
  451f34:	icebp  
  451f35:	rex.X jg 0x451eff
  451f38:	jne    0x451f18
  451f3a:	sbb    esi,DWORD PTR [rdi+0x37]
  451f3d:	fisub  WORD PTR [rbp+rcx*8+0x3]
  451f41:	xor    esp,DWORD PTR [rdi+0x69]
  451f44:	(bad)  
  451f45:	rex.WRXB je 0x451ecc
  451f48:	(bad)  
  451f49:	cmp    eax,DWORD PTR [rbx]
  451f4b:	in     eax,0x74
  451f4d:	push   rdi
  451f4e:	xchg   edi,eax
  451f4f:	and    BYTE PTR [r14+r9*8-0xc4e0383],sil
  451f57:	jno    0x451fd0
  451f59:	mov    bh,0xde
  451f5b:	rcl    ebx,cl
  451f5d:	movsxd edx,edx
  451f5f:	rex.WRX call 0xffffffffeb3c165a
  451f65:	mov    ebp,0xe5bd7d
  451f6a:	adc    BYTE PTR [rcx+0x2c5e1121],dh
  451f70:	pop    rsi
  451f71:	sbb    al,0x8c
  451f73:	leave  
  451f74:	(bad)  
  451f75:	add    BYTE PTR [rbp+rcx*1+0x256ede7],cl
  451f7c:	xor    BYTE PTR [rax],0x8e
  451f7f:	(bad)
  451f84:	jge    0x451f1f
  451f86:	xor    QWORD PTR [rdi+0x21938905],r9
  451f8d:	out    0x78,al
  451f8f:	and    DWORD PTR [rbx+rbx*2-0xf],0xfd9f4145
  451f97:	sub    BYTE PTR [rdx+0x1c635c21],dl
  451f9d:	mov    esi,0x7f295d71
  451fa2:	jns    0x451faf
  451fa4:	(bad)  
  451fa5:	es je  0x452012
  451fa8:	cmp    esi,ebp
  451faa:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  451fab:	cmc    
  451fac:	(bad)
  451faf:	jl     0x452021
  451fb1:	adc    esp,DWORD PTR [rax]
  451fb3:	es cdq 
  451fb5:	xor    al,0xea
  451fb7:	jo     0x451ff6
  451fb9:	shl    BYTE PTR [rdx+0x13c84c0e],1
  451fbf:	mov    ecx,0x91f0957c
  451fc4:	js     0x451fa7
  451fc6:	lock leave 
  451fc8:	fisubr WORD PTR [rdx-0x244799d9]
  451fce:	(bad)  
  451fcf:	ins    DWORD PTR es:[rdi],dx
  451fd0:	add    bl,BYTE PTR [rax]
  451fd2:	xor    bh,bl
  451fd4:	nop    DWORD PTR [rdx+0xe]
  451fd8:	sbb    eax,0x99470a39
  451fdd:	cmovg  ebx,DWORD PTR [rdi+0x33fd0806]
  451fe4:	(bad)  
  451fe5:	jge    0x451ffb
  451fe7:	sahf   
  451fe8:	cmp    eax,0x10202e77
  451fed:	fiadd  DWORD PTR [rdx+rax*2]
  451ff0:	add    eax,0x972c7473
  451ff5:	or     eax,DWORD PTR [rax+0xe]
  451ff8:	(bad)  
  451ff9:	adc    al,cl
  451ffb:	icebp  
  451ffc:	rex.X enter 0xdd89,0x28
  452001:	add    BYTE PTR [rdx],ah
  452003:	ss adc al,0x94
  452006:	add    ebp,ecx
  452008:	(bad)  
  452009:	rex.W
  45200a:	cs ja  0x45202f
  45200d:	(bad)  
  45200e:	(bad)  
  45200f:	movsxd ebx,DWORD PTR [rax+0x8]
  452012:	cmp    eax,0xe39886c6
  452017:	cli    
  452018:	fsub   DWORD PTR [rdx+0x5b1b0bcf]
  45201e:	test   DWORD PTR [rbx+0x37],ebp
  452021:	movabs eax,ds:0x3f0f21f6c26a379c
  45202a:	xchg   ebp,eax
  45202b:	repnz (bad) 
  45202d:	imul   DWORD PTR [rdi]
  45202f:	not    DWORD PTR [rcx+0x25391817]
  452035:	vsubsd xmm0,xmm14,xmm0
  452039:	cwde   
  45203a:	or     DWORD PTR [rsp+rbx*4+0x38],0x67
  45203f:	in     al,0x2
  452041:	rol    BYTE PTR [rcx+0x46],0x23
  452045:	(bad)  
  452046:	mov    dh,0xe4
  452048:	cld    
  452049:	xor    bl,BYTE PTR [rcx-0x50c27047]
  45204f:	mov    ebp,0xb3866535
  452054:	in     al,0x57
  452056:	mov    edi,0xad793753
  45205b:	cmp    bh,ch
  45205d:	clc    
  45205e:	sub    dl,bl
  452060:	mov    cl,0x6b
  452062:	mov    bh,0xbe
  452064:	fcmovnu st,st(7)
  452066:	(bad)  
  452067:	adc    cl,BYTE PTR [rax]
  452069:	xchg   ebp,eax
  45206a:	ret    
  45206b:	rex.RXB mov ds,WORD PTR [r10]
  45206e:	(bad)  
  45206f:	cmp    edi,DWORD PTR [rdx]
  452071:	sbb    al,0xfa
  452073:	xchg   edi,eax
  452074:	rcl    BYTE PTR [rcx],1
  452076:	add    DWORD PTR [rcx],esi
  452078:	movabs al,ds:0xd86ec539cc40109d
  452081:	fstp   st(5)
  452083:	popf   
  452084:	scas   eax,DWORD PTR es:[rdi]
  452085:	movabs al,ds:0x18a488a737cc1285
  45208e:	jo     0x45202c
  452090:	sbb    al,0xf7
  452092:	xchg   ecx,eax
  452093:	xor    DWORD PTR [rsp+rax*2+0x610863a1],r8d
  45209b:	pop    rbx
  45209c:	hlt    
  45209d:	rcl    DWORD PTR [rsi+0x1b0964a],1
  4520a3:	mov    ebx,0x32230ae
  4520a8:	xchg   ebx,eax
  4520a9:	movsxd ecx,DWORD PTR [rdx+rbp*2+0x21]
  4520ad:	(bad)  
  4520ae:	xor    esp,esp
  4520b0:	outs   dx,BYTE PTR ds:[rsi]
  4520b1:	(bad)  
  4520b2:	add    al,0x32
  4520b4:	test   DWORD PTR [rbp-0x4a],edi
  4520b7:	or     eax,0xf383ce11
  4520bc:	scas   al,BYTE PTR es:[rdi]
  4520bd:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  4520be:	mov    edi,0x69d0757c
  4520c3:	add    ah,BYTE PTR [rax+0x5d718851]
  4520c9:	(bad)  
  4520ca:	add    cl,ah
  4520cc:	rex.XB scas al,BYTE PTR es:[rdi]
  4520ce:	fist   DWORD PTR [rdi+0x73]
  4520d1:	jg     0x45214c
  4520d3:	out    0xeb,al
  4520d5:	(bad)  
  4520d7:	(bad)  
  4520d8:	out    0x79,al
  4520da:	or     r11,r14
  4520dd:	xor    DWORD PTR [rbx-0x3cf7eee4],0xe1ededd6
  4520e7:	sti    
  4520e8:	cmp    esi,DWORD PTR [rdi-0x79]
  4520eb:	hlt    
  4520ec:	cmp    edx,DWORD PTR [rax-0x3c3e3f10]
  4520f2:	(bad)  
  4520f3:	shl    DWORD PTR [rbx-0x39],1
  4520f6:	int    0x13
  4520f8:	sbb    eax,0x9d93dd27
  4520fd:	popf   
  4520fe:	es in  eax,dx
  452100:	test   BYTE PTR [rdx],ch
  452102:	adc    eax,0x88087626
  452108:	fnstenv [rbx+0x1256cf67]
  45210e:	sbb    BYTE PTR [rsi+rax*1],0x17
  452112:	sbb    dh,BYTE PTR [rdi-0x44]
  452115:	mov    esp,0xaabe7610
  45211a:	rex.WB jrcxz 0x4520e5
  45211d:	test   DWORD PTR [rcx-0x60],eax
  452120:	mov    dh,BYTE PTR [rcx-0x18]
  452123:	(bad)  
  452124:	lods   al,BYTE PTR ds:[rsi]
  452125:	sbb    ch,bh
  452127:	rex.X
  452128:	mov    WORD PTR cs:[rax-0x5fec7193],ds
  45212f:	sub    ebp,0xd79b0c7c
  452135:	mov    eax,DWORD PTR [rcx]
  452137:	jno    0x45219c
  452139:	loope  0x45214c
  45213b:	(bad)  
  45213c:	scas   al,BYTE PTR es:[rdi]
  45213d:	adc    DWORD PTR [rbx],edi
  45213f:	scas   al,BYTE PTR es:[rdi]
  452140:	add    DWORD PTR [rdx+0x26],eax
  452143:	mov    ecx,0x4bfae52e
  452148:	retf   0x1353
  45214b:	xor    DWORD PTR [rax-0x1a3b16fb],esp
  452151:	add    al,dl
  452153:	adc    al,0xf6
  452155:	rol    BYTE PTR [rdx+0x412fe203],1
  45215b:	movabs rdi,0x68df51ceafb3f380
  452165:	pop    rdx
  452166:	test   al,0x2e
  452168:	pop    rax
  452169:	(bad)  
  45216a:	ins    BYTE PTR es:[rdi],dx
  45216b:	ss (bad) 
  45216d:	pop    rdi
  45216e:	in     eax,dx
  45216f:	scas   al,BYTE PTR es:[rdi]
  452170:	pop    rcx
  452171:	fist   WORD PTR [rdx]
  452173:	mov    ch,0x78
  452175:	lods   eax,DWORD PTR ds:[rsi]
  452176:	rcl    esi,1
  452178:	mov    dh,0xf7
  45217a:	sub    eax,0x885109da
  45217f:	or     al,0x81
  452181:	push   rax
  452182:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  452183:	popf   
  452184:	xor    BYTE PTR [rdi+rbx*1-0xb051adc],ah
  45218b:	pop    rsp
  45218c:	test   al,0x6
  45218e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  45218f:	rex.WRX fnstenv [rbx+r12*1+0x144804fa]
  452197:	movabs ds:0x3e1e4e7c516084d2,al
  4521a0:	shl    bh,1
  4521a2:	cmp    esi,DWORD PTR [rbx-0x6a69c070]
  4521a8:	(bad)  
  4521a9:	mov    es,edi
  4521ab:	sub    dl,BYTE PTR [rcx]
  4521ad:	sub    eax,DWORD PTR [rbx+0x1b838b1b]
  4521b3:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  4521b4:	pop    rax
  4521b5:	(bad)  
  4521b6:	(bad)  
  4521b7:	adc    eax,DWORD PTR [rbx]
  4521b9:	(bad)  [rbx+0x36c142c4]
  4521bf:	push   0xffffffffffffffc1
  4521c1:	push   rsp
  4521c2:	imul   edi,DWORD PTR [rdi+0x72],0xa8b6b11d
  4521c9:	scas   eax,DWORD PTR es:[rdi]
  4521ca:	in     al,dx
  4521cb:	(bad)  
  4521cd:	xchg   esi,eax
  4521ce:	or     al,BYTE PTR [rax-0x28]
  4521d1:	rex.XB cld 
  4521d3:	(bad)  
  4521d4:	in     al,0x84
  4521d6:	jge    0x452240
  4521d8:	sbb    esp,edi
  4521da:	cld    
  4521db:	xchg   edx,eax
  4521dc:	cmp    ah,bh
  4521de:	fstp   TBYTE PTR [rdi]
  4521e0:	cmp    ebp,DWORD PTR [edi+0x38e4debd]
  4521e7:	repz xchg edi,eax
  4521e9:	cwde   
  4521ea:	hlt    
  4521eb:	and    esi,DWORD PTR [rbx+rax*8+0x5d]
  4521ef:	mov    cl,0x36
  4521f1:	pop    rax
  4521f2:	mov    edi,0x276873d1
  4521f7:	hlt    
  4521f8:	mov    ebp,0xe539edd6
  4521fd:	fnstsw WORD PTR [rbx-0xa]
  452200:	mov    edx,0xb01ff77b
  452205:	jmp    0x1f535852
  45220a:	cmp    esi,esp
  45220c:	ror    bl,cl
  45220e:	mov    ebx,edx
  452210:	rcr    ecx,1
  452212:	test   eax,0x3a3d1012
  452217:	(bad)  
  452218:	in     eax,0x80
  45221a:	in     eax,0x84
  45221c:	mov    bh,BYTE PTR [rcx-0x1ef70dca]
  452222:	cs rex.B
  452224:	lock fcomp DWORD PTR [rcx+0x40]
  452228:	sbb    al,0x38
  45222a:	out    dx,eax
  45222b:	or     al,ch
  45222d:	(bad)  
  45222e:	adc    DWORD PTR [rdx+0x61],esp
  452231:	or     al,0xb6
  452234:	ins    DWORD PTR es:[rdi],dx
  452235:	xor    DWORD PTR [rsi-0x7a2de74a],ecx
  45223b:	iret   
  45223c:	mov    eax,0xbbcafc2c
  452241:	sub    edi,ebx
  452243:	ret    
  452244:	popf   
  452245:	popf   
  452246:	(bad)  
  452247:	es (bad) 
  452249:	(bad)  
  45224a:	es (bad) 
  45224c:	clc    
  45224d:	in     eax,0x1b
  45224f:	(bad)  
  452251:	jrcxz  0x45228a
  452253:	pop    rsp
  452254:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  452255:	std    
  452256:	jno    0x4522d6
  452258:	mov    BYTE PTR [rcx],dl
  45225a:	(bad)  
  45225b:	sub    al,0xec
  45225d:	retf   
  45225e:	(bad)  
  45225f:	stc    
  452260:	(bad)  
  452261:	jmp    0x4521e3
  452263:	jne    0x4521e6
  452265:	sub    al,0x6e
  452267:	or     BYTE PTR [rbx],ch
  452269:	mov    DWORD PTR ss:[rax+rax*1],ebx
  45226d:	pop    rdx
  45226e:	outs   dx,BYTE PTR ds:[rsi]
  45226f:	jrcxz  0x45222b
  452271:	call   rbx
  452273:	and    eax,esi
  452275:	fld    st(4)
  452277:	rex.W xor al,BYTE PTR [rdi-0x1]
  45227b:	cli    
  45227c:	neg    DWORD PTR [rbx+0xa]
  45227f:	adc    eax,0xe86a1027
  452285:	jrcxz  0x45227e
  452287:	sar    BYTE PTR [rax],0x8e
  45228a:	(bad)  
  45228b:	outs   dx,DWORD PTR ds:[rsi]
  45228c:	ins    DWORD PTR es:[rdi],dx
  45228d:	retf   
  45228e:	mov    dh,0xed
  452290:	fcom   DWORD PTR [rip+0x4f60fced]        # 0x4fa61f83
  452296:	rex mov edi,0x1bb0738e
  45229c:	(bad)  
  45229d:	sahf   
  45229e:	jle    0x452242
  4522a0:	test   eax,0xd11cd1d0
  4522a5:	ror    DWORD PTR [rax+riz*1+0x362e254b],1
  4522ac:	xchg   edx,eax
  4522ad:	shl    BYTE PTR [r8-0x65],0x38
  4522b2:	or     DWORD PTR [rax+rbx*4-0x1d],eax
  4522b6:	jno    0x45227c
  4522b8:	int    0x3a
  4522ba:	mov    bh,dl
  4522bc:	and    dh,ah
  4522be:	fld    QWORD PTR [rcx]
  4522c0:	xor    bh,BYTE PTR [rax-0x5d92766a]
  4522c6:	xor    BYTE PTR [rax-0x3a93cc72],bh
  4522cc:	in     eax,0xb1
  4522ce:	clc    
  4522cf:	nop
  4522d0:	jrcxz  0x45228a
  4522d2:	loopne 0x4522d7
  4522d4:	mov    eax,esp
  4522d6:	xor    DWORD PTR [rbx+0x5e],eax
  4522d9:	and    DWORD PTR [rsi+0x2c],eax
  4522dc:	jl     0x452341
  4522de:	and    BYTE PTR [rsi],dl
  4522e0:	(bad)  
  4522e1:	xchg   DWORD PTR [rbp-0x34],ecx
  4522e4:	rex.B (bad) 
  4522e6:	add    al,0x5b
  4522e8:	nop
  4522e9:	rex.XB pop r11
  4522eb:	mov    al,bl
  4522ed:	pop    rsi
  4522ee:	push   rdx
  4522ef:	(bad)  
  4522f0:	pop    rdi
  4522f1:	xchg   DWORD PTR [rdi],edi
  4522f3:	fmul   DWORD PTR [rdx+rax*1+0x1f]
  4522f7:	(bad)  
  4522f8:	mov    BYTE PTR [rdx-0x553fada7],bl
  4522fe:	enter  0x7a03,0x9c
  452302:	movabs ds:0x35f7911c8f6a0f9c,eax
  45230b:	jl     0x452356
  45230d:	add    dh,al
  45230f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  452310:	add    eax,DWORD PTR [rax-0x63bb8ee6]
  452316:	xor    edi,esi
  452318:	repnz int3 
  45231a:	cmp    DWORD PTR [rsi],ecx
  45231c:	adc    eax,0x77a2f5c0
  452322:	pop    rsp
  452323:	mov    ch,0x79
  452325:	fldcw  WORD PTR [rdx]
  452327:	imul   esi,ebp,0xffffffba
  45232a:	rex.WRB rol r14,0x96
  45232e:	sub    eax,0xedd6e6d1
  452333:	push   rcx
  452334:	jmp    0x4522ec
  452336:	jbe    0x4523a3
  452338:	pop    rbx
  452339:	fisttp DWORD PTR [rsi]
  45233b:	cmp    ch,cl
  45233d:	rcr    esi,1
  45233f:	std    
  452340:	(bad)  
  452341:	(bad)  
  452342:	std    
  452343:	(bad)  
  452344:	(bad)  
  452345:	rcr    DWORD PTR [rax+0x39],0xc4
  452349:	or     BYTE PTR [rdx+0x6a],0xb3
  45234d:	or     DWORD PTR [rsi+0x7a7ca939],eax
  452353:	add    BYTE PTR [rbp+0x2e],cl
  452356:	lahf   
  452357:	sbb    BYTE PTR [rcx-0x5e837ae0],ah
  45235d:	enter  0x1532,0x92
  452361:	rex.RXB push r9
  452363:	xor    eax,0xf0d71849
  452368:	fwait
  452369:	iret   
  45236a:	ds retf 
  45236c:	mov    dl,0x4d
  45236e:	mov    ah,0x85
  452370:	rex.W imul BYTE PTR [rip+0x4a9d61fb]        # 0x4ae28572
  452377:	sti    
  452378:	jae    0x4523bf
  45237a:	cld    
  45237b:	lock sub esi,DWORD PTR [rbx+0x62ea1c29]
  452382:	(bad)  
  452383:	jge    0x452308
  452385:	sbb    BYTE PTR [rbx+0x2e],ch
  452388:	out    0x80,eax
  45238a:	ds ins BYTE PTR es:[rdi],dx
  45238c:	rex (bad) 
  45238e:	jrcxz  0x452378
  452390:	sub    eax,DWORD PTR [rdx+0x17]
  452393:	xlat   BYTE PTR ds:[rbx]
  452394:	test   al,0x2d
  452396:	hlt    
  452397:	xor    BYTE PTR [rdi],cl
  452399:	mov    ecx,0xe043312f
  45239e:	jae    0x4523a4
  4523a0:	or     cl,dl
  4523a2:	data16 (bad) 
  4523a4:	dec    dl
  4523a6:	ins    BYTE PTR es:[rdi],dx
  4523a7:	repz mov ch,0x39
  4523aa:	rex.WRB outs dx,BYTE PTR ds:[rsi]
  4523ac:	rol    DWORD PTR [rdx-0x7b12e1db],cl
  4523b2:	(bad)  
  4523b3:	jg     0x45234b
  4523b5:	scas   eax,DWORD PTR es:[rdi]
  4523b6:	jbe    0x4523a0
  4523b8:	(bad)  
  4523b9:	jmp    0xffffffffaa5860dc
  4523be:	ficom  WORD PTR [rsi-0x2f7ee993]
  4523c4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  4523c5:	addr32 rex.XB (bad) 
  4523c8:	(bad)  
  4523c9:	push   rsp
  4523ca:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4523cb:	out    0x43,eax
  4523cd:	ja     0x4523a6
  4523cf:	outs   dx,BYTE PTR ds:[rsi]
  4523d0:	lahf   
  4523d1:	adc    DWORD PTR [rsi+rdi*8],0x6
  4523d5:	(bad)  [rax-0x3f769e5c]
  4523db:	adc    BYTE PTR [rax],ch
  4523dd:	sbb    al,al
  4523df:	shr    DWORD PTR [rsi+0x717e0963],cl
  4523e5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4523e6:	rex.B sahf 
  4523e8:	(bad)  
  4523e9:	(bad)  
  4523ea:	leave  
  4523eb:	jno    0x4523cf
  4523ed:	jno    0x452464
  4523ef:	and    al,0x6f
  4523f1:	(bad)  
  4523f2:	loopne 0x452398
  4523f4:	cmp    al,0x50
  4523f6:	xor    al,0xc4
  4523f8:	ret    0xc171
  4523fb:	(bad)  
  4523fc:	in     al,0x92
  4523fe:	jl     0x452460
  452400:	or     al,0x79
  452402:	mov    al,0x2c
  452404:	pop    rdx
  452405:	clc    
  452406:	push   rbx
  452407:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  452408:	cmp    BYTE PTR [rsi],al
  45240b:	mov    ah,0x85
  45240d:	or     BYTE PTR [rdx],bh
  45240f:	rol    BYTE PTR [rbp+0x49547cbd],1
  452415:	jg     0x4523df
  452417:	or     esi,edi
  452419:	loop   0x4523a7
  45241b:	jno    0x452443
  45241d:	(bad)  
  45241e:	mov    esp,?
  452420:	push   rcx
  452421:	movsxd edi,DWORD PTR [rcx+0x1c]
  452424:	repz jb 0x452453
  452427:	mov    al,0x81
  452429:	ds adc ecx,edi
  45242c:	psubd  mm2,QWORD PTR [r14+0x6c]
  452431:	ds ret 
  452433:	rex.RXB xor DWORD PTR [r14-0x3e],r14d
  452437:	nop
  452438:	clc    
  452439:	(bad)  
  45243a:	icebp  
  45243b:	(bad)  
  45243c:	fistp  WORD PTR [rdx+0x44]
  45243f:	(bad)  
  452440:	es rex.WXB add rdi,r10
  452444:	mov    edi,0x46b65461
  452449:	cmp    esp,DWORD PTR [rdx+0x7365a1be]
  45244f:	xchg   esi,eax
  452450:	sahf   
  452451:	or     eax,0xd863021d
  452456:	idiv   dh
  452458:	rex.WRX fstp DWORD PTR [rcx-0x42e4081c]
  45245f:	rex.R push rdx
  452461:	add    BYTE PTR [rcx],ah
  452463:	jbe    0x452486
  452465:	in     eax,dx
  452466:	sbb    esi,ebp
  452468:	pushf  
  452469:	cmp    ch,BYTE PTR [rbx+0x71c4054c]
  45246f:	in     al,dx
  452470:	or     dl,BYTE PTR [rax]
  452472:	sar    WORD PTR [rdi+0x65],1
  452476:	(bad)  
  452477:	pop    rsp
  452478:	ud0    eax,DWORD PTR [rcx-0x2f]
  45247c:	fdivr  QWORD PTR [rcx-0x75]
  45247f:	int    0xb7
  452481:	(bad)  
  452482:	(bad)  
  452483:	mov    ebx,0xde95dd4b
  452488:	mov    dl,ch
  45248a:	jmp    0x4524f9
  45248c:	jp     0x4524d9
  45248e:	push   rsi
  45248f:	xlat   BYTE PTR ds:[rbx]
  452490:	scas   al,BYTE PTR es:[rdi]
  452491:	outs   dx,DWORD PTR ds:[rsi]
  452492:	xor    esi,edx
  452494:	outs   dx,DWORD PTR ds:[rsi]
  452495:	repnz mov al,0x3b
  452498:	or     al,0x15
  45249a:	ret    0x95dd
  45249d:	(bad)  
  45249e:	jo     0x452448
  4524a0:	lods   al,BYTE PTR ds:[rsi]
  4524a1:	rex.RX test eax,0x54f01071
  4524a7:	cmp    al,0x13
  4524a9:	adc    bh,BYTE PTR [rbx+0x38]
  4524ac:	(bad)  
  4524ad:	jmp    0x6f8971c5
  4524b2:	enter  0xecde,0x37
  4524b6:	out    0x1b,eax
  4524b8:	clc    
  4524b9:	push   rsp
  4524ba:	ret    
  4524bb:	jbe    0x452458
  4524bd:	xchg   edi,eax
  4524be:	lods   eax,DWORD PTR ds:[rsi]
  4524bf:	jbe    0x452468
  4524c1:	cmp    eax,0x96ec43f5
  4524c6:	sbb    eax,0x7d52ed5a
  4524cc:	push   rsi
  4524cd:	push   rax
  4524ce:	pand   mm7,QWORD PTR [rdx+rcx*1-0x3e]
  4524d3:	or     dl,BYTE PTR [rsi]
  4524d5:	hlt    
  4524d6:	xchg   BYTE PTR [rbx+0x1f484ec2],bl
  4524dc:	stos   DWORD PTR es:[rdi],eax
  4524dd:	icebp  
  4524de:	mov    edi,0xc204d965
  4524e3:	sub    al,0x81
  4524e5:	shl    BYTE PTR [rbx+0x7f3b311d],1
  4524eb:	rcl    DWORD PTR [rdx+0x6],1
  4524ee:	sbb    al,0x76
  4524f0:	rex.B jle 0x4524f3
  4524f3:	sub    eax,0x8a28de3a
  4524f8:	xor    ah,ch
  4524fa:	jb     0x45247e
  4524fc:	xor    eax,DWORD PTR [rbp-0x283e8b3a]
  452502:	outs   dx,BYTE PTR ds:[rsi]
  452503:	xchg   esi,eax
  452504:	movabs ds:0xb940a9e6f054a83,al
  45250d:	ds call 0xffffffffc91785f2
  452513:	(bad)  
  452514:	add    BYTE PTR [rdi-0x57ea56ae],bl
  45251a:	add    al,0x8
  45251c:	push   rdx
  45251d:	sbb    esp,ebp
  45251f:	out    dx,eax
  452520:	in     al,0x37
  452522:	imul   ecx,DWORD PTR [rip+0x6f023ecb],0xffffffd6        # 0x6f4763f4
  452529:	ret    0x79a5
  45252c:	push   rdi
  45252d:	out    0xa6,al
  45252f:	rex.WXB add QWORD PTR [r8-0x7f],rbx
  452533:	out    0xd0,eax
  452535:	adc    al,0x8c
  452537:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  452538:	xor    DWORD PTR [rcx],0x5
  45253b:	(bad)  
  45253c:	or     al,al
  45253e:	sbb    ecx,DWORD PTR [rdx+0x3cea1b81]
  452544:	fnstsw WORD PTR [rcx]
  452546:	rex.WX fistp QWORD PTR [rcx]
  452549:	(bad)  
  45254a:	pop    rdi
  45254b:	push   0xffffffffffffff97
  45254d:	add    dh,BYTE PTR [rax]
  45254f:	fld    QWORD PTR [rcx]
  452551:	outs   dx,DWORD PTR ds:[rsi]
  452552:	sub    BYTE PTR [rsi],al
  452554:	dec    BYTE PTR [rbx]
  452556:	mov    esi,0x9ed119ed
  45255b:	and    eax,0xcf3c
  452560:	add    BYTE PTR [rax],al
  452562:	rex.WB
  452563:	rex.RB
  452564:	rex.WRX
  452565:	rex.R scas al,BYTE PTR es:[rdi]
  452567:	rex.X (bad) 
  452569:	(bad)  
  45256a:	or     eax,DWORD PTR [rax+0x0]
  45256d:	add    DWORD PTR [rax],eax
  45256f:	add    BYTE PTR [rax],al
  452571:	(bad)  
  452572:	(bad)  
  452573:	(bad)  
  452574:	inc    DWORD PTR [rcx]
  452576:	add    BYTE PTR [rax],al
  452578:	add    BYTE PTR [rax],al
  45257a:	add    BYTE PTR [rax],al
  45257c:	add    BYTE PTR [rdx+rax*1],cl
  45257f:	add    BYTE PTR [rax],al
  452581:	add    BYTE PTR [rcx+0x53],dl
  452584:	jns    0x4525f9
  452586:	je     0x4525ed
  452588:	ins    DWORD PTR es:[rdi],dx
  452589:	cs rex.R jb 0x4525ee
  45258d:	ja     0x4525f8
  45258f:	outs   dx,BYTE PTR ds:[rsi]
  452590:	addr32 sub al,0x20
  452593:	push   rsi
  452594:	gs jb  0x45260a
  452597:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  45259e:	xor    BYTE PTR cs:[rsi],ch
  4525a1:	xor    BYTE PTR [rax+riz*1],ch
  4525a4:	rex.XB jne 0x452613
  4525a7:	je     0x45261e
  4525a9:	jb     0x452610
  4525ab:	cmp    eax,0x7475656e
  4525b0:	jb     0x452613
  4525b2:	ins    BYTE PTR es:[rdi],dx
  4525b3:	sub    al,0x20
  4525b5:	push   rax
  4525b6:	jne    0x45261a
  4525b8:	ins    BYTE PTR es:[rdi],dx
  4525b9:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  4525c0:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  4525c4:	(bad)  
  4525c5:	xor    BYTE PTR [rbx],dh
  4525c7:	xor    ax,0x3766
  4525cb:	xor    WORD PTR [rcx],si
  4525ce:	fs xor eax,0x61336130
  4525d4:	add    eax,0x1
  4525d9:	adc    edx,DWORD PTR [rbx+0x79]
  4525dc:	jae    0x452652
  4525de:	gs ins DWORD PTR es:[rdi],dx
  4525e0:	cs rex.R jb 0x452645
  4525e4:	ja     0x45264f
  4525e6:	outs   dx,BYTE PTR ds:[rsi]
  4525e7:	movsxd rbp,DWORD PTR cs:[r15d+0x6e]
  4525ed:	add    al,BYTE PTR [rax]
  4525ef:	add    BYTE PTR [rax],al
  4525f1:	or     BYTE PTR [rcx+0x63],cl
  4525f4:	outs   dx,DWORD PTR ds:[rsi]
  4525f5:	outs   dx,BYTE PTR ds:[rsi]
  4525f6:	rex.R (bad) 
  4525f8:	je     0x45265b
  4525fa:	or     BYTE PTR [rcx+0x63],cl
  4525fd:	outs   dx,DWORD PTR ds:[rsi]
  4525fe:	outs   dx,BYTE PTR ds:[rsi]
  4525ff:	push   rbx
  452600:	imul   edi,DWORD PTR [rdx+0x65],0x13020407
  452607:	push   rbx
  452608:	jns    0x45267d
  45260a:	je     0x452671
  45260c:	ins    DWORD PTR es:[rdi],dx
  45260d:	cs rex.R jb 0x452672
  452611:	ja     0x45267c
  452613:	outs   dx,BYTE PTR ds:[rsi]
  452614:	addr32 cs push rbx
  452617:	imul   edi,DWORD PTR [rdx+0x65],0x2
  45261e:	add    al,BYTE PTR [rax]
  452620:	add    BYTE PTR [rax],al
  452622:	or     DWORD PTR [rbx],eax
  452624:	add    BYTE PTR [rax],al
  452626:	add    BYTE PTR [rip+0xfffffffffffffffc],al        # 0x452628
  45262c:	adc    edx,DWORD PTR [rbx+0x79]
  45262f:	jae    0x4526a5
  452631:	gs ins DWORD PTR es:[rdi],dx
  452633:	cs rex.R jb 0x452698
  452637:	ja     0x4526a2
  452639:	outs   dx,BYTE PTR ds:[rsi]
  45263a:	addr32 cs push rbx
  45263d:	imul   edi,DWORD PTR [rdx+0x65],0x2
  452644:	add    eax,0x74646977
  452649:	push   0x69656806
  45264e:	addr32 push 0x8000074
  452654:	or     BYTE PTR [rdx],al
	...
  45265e:	add    BYTE PTR [rax],al
  452660:	add    BYTE PTR [rdi],cl
  452662:	add    eax,DWORD PTR [rax]
  452664:	add    BYTE PTR [rax],al
  452666:	mov    esi,0x2000008
  45266b:	add    BYTE PTR [rax],al
  45266d:	add    DWORD PTR [rax],eax
  45266f:	add    DWORD PTR [rax],eax
  452671:	and    BYTE PTR [rax],ah
  452673:	add    BYTE PTR [rax],al
  452675:	add    DWORD PTR [rax],eax
  452677:	or     BYTE PTR [rax],al
  452679:	test   al,0x8
  45267b:	add    BYTE PTR [rax],al
  45267d:	(bad)  
  45267e:	add    BYTE PTR [rax],al
  452680:	add    BYTE PTR [rax],ch
  452682:	add    BYTE PTR [rax],al
  452684:	add    BYTE PTR [rax],ah
  452686:	add    BYTE PTR [rax],al
  452688:	add    BYTE PTR [rax+0x0],al
  45268b:	add    BYTE PTR [rax],al
  45268d:	add    DWORD PTR [rax],eax
  45268f:	or     BYTE PTR [rax],al
  452691:	add    BYTE PTR [rax],al
  452693:	add    BYTE PTR [rax],al
  452695:	add    BYTE PTR [rax+rax*1],al
	...
  4526a0:	add    BYTE PTR [rax],al
  4526a2:	add    DWORD PTR [rax],eax
  4526a4:	add    BYTE PTR [rax],al
  4526a6:	add    DWORD PTR [rax],eax
  4526a8:	add    BYTE PTR [rax],al
  4526aa:	add    BYTE PTR [rax],al
  4526ac:	add    BYTE PTR [rax+0x47],ch
  4526af:	(bad)  
  4526b0:	add    BYTE PTR [rdx+0x4a],ch
  4526b3:	xor    al,BYTE PTR [rax]
  4526b5:	mov    DWORD PTR [rsi+rbx*2+0x0],ebp
  4526b9:	test   BYTE PTR [rax+0x66],ch
  4526bc:	add    BYTE PTR [rsp+rsi*2+0x7c9a0067],al
  4526c3:	data16 add BYTE PTR [rdx-0x53ff968d],ch
  4526ca:	jge    0x452738
  4526cc:	add    BYTE PTR [rbp-0x69ff857b],dl
  4526d2:	mov    BYTE PTR [rsi+0x0],bh
  4526d5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4526d6:	mov    edi,DWORD PTR [rax+rax*1-0x3d]
  4526da:	(bad)  
  4526db:	jno    0x4526dd
  4526dd:	sbb    al,0x89
  4526df:	mov    ecx,0xaf872200
  4526e4:	add    BYTE PTR [rdi],dh
  4526e6:	xchg   BYTE PTR [rdi-0x4871d900],ah
  4526ec:	add    BYTE PTR [rbx],dh
  4526ee:	lea    esi,[rax-0x4d6fc300]
  4526f4:	add    BYTE PTR [rbx-0x7b],bh
  4526f7:	(bad)  
  4526f8:	add    BYTE PTR [rbp-0x68],bh
  4526fb:	sahf   
  4526fc:	add    BYTE PTR [rdx-0x70],al
  4526ff:	stos   BYTE PTR es:[rdi],al
  452700:	add    BYTE PTR [rdx+rdx*4-0x52],al
  452704:	add    BYTE PTR [rdx-0x69],al
  452707:	mov    edx,0xbb9e4e00
  45270c:	add    BYTE PTR [rax-0x63],dl
  45270f:	mov    bh,0x0
  452711:	(bad)  
  452712:	nop
  452713:	movabs eax,ds:0xc59f3a00b2a06f00
  45271c:	add    BYTE PTR [rcx],bl
  45271e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  45271f:	fadd   QWORD PTR [rax]
  452721:	cmp    esp,DWORD PTR [rdx-0x5eccff3a]
  452727:	int3   
  452728:	add    BYTE PTR [rbx+rbp*4],bh
  45272b:	rol    DWORD PTR [rax],cl
  45272d:	sbb    al,0xaa
  45272f:	loope  0x452731
  452731:	sbb    ch,BYTE PTR [rbp-0x4dfdff12]
  452737:	test   BYTE PTR [rax],0x26
  45273a:	test   al,0xef
  45273c:	add    BYTE PTR [rax+rbx*4-0x35],cl
  452740:	add    BYTE PTR [rsi-0x5d],dl
  452743:	(bad)  
  452744:	add    BYTE PTR [rax-0x45],al
  452747:	in     eax,0x0
  452749:	rex mov esp,0xb67000e6
  45274f:	inc    DWORD PTR [rax]
  452751:	push   rbx
  452752:	(bad)  
  452753:	out    0x0,al
  452755:	rex.WXB sar r12,cl
  452758:	add    BYTE PTR [rbx+rdx*8-0x2],cl
  45275c:	add    BYTE PTR [rsi-0x21],ch
  45275f:	sti    
  452760:	add    BYTE PTR [rax-0x1e],dh
  452763:	std    
  452764:	add    BYTE PTR [rdi-0x44ff796f],bl
  45276a:	add    DWORD PTR [rax+rax*1+0x9299a8],0x99a2ad
  452775:	mov    bl,0xa5
  452777:	fwait
  452778:	add    BYTE PTR [rbp-0x74ff5d60],cl
  45277e:	stos   DWORD PTR es:[rdi],eax
  45277f:	mov    bl,0x0
  452781:	stos   BYTE PTR es:[rdi],al
  452782:	test   al,0xa3
  452784:	add    BYTE PTR [rdi-0x36ff514c],bh
  45278a:	xchg   ebp,eax
  45278b:	mov    WORD PTR [rax],es
  45278d:	retf   0x8ea2
  452790:	add    ah,dl
  452792:	movabs al,ds:0xa6d1009faec10083
  45279b:	nop
  45279c:	add    dh,cl
  45279e:	mov    cl,0x9d
  4527a0:	add    dh,ch
  4527a2:	mov    cl,0x92
  4527a4:	add    bh,cl
  4527a6:	mov    dl,0xa0
  4527a8:	add    bh,cl
  4527aa:	mov    ch,0xa3
  4527ac:	add    bh,cl
  4527ae:	mov    dh,0xa4
  4527b0:	add    bh,cl
  4527b2:	mov    eax,0xb5c600a7
  4527b7:	stos   BYTE PTR es:[rdi],al
  4527b8:	add    al,dl
  4527ba:	mov    bl,0xa0
  4527bc:	add    al,dl
  4527be:	mov    ch,0xa3
  4527c0:	add    ch,dl
  4527c2:	mov    ch,0xa1
  4527c4:	add    al,dl
  4527c6:	mov    bh,0xa5
  4527c8:	add    ch,dl
  4527ca:	mov    bh,0xa5
  4527cc:	add    al,bl
  4527ce:	mov    ah,0xa3
  4527d0:	add    al,dl
  4527d2:	mov    eax,0xb9d500a7
  4527d7:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4527d8:	add    al,dl
  4527da:	mov    ecx,0xbad500a9
  4527df:	test   eax,0xabbcd600
  4527e4:	add    cl,dl
  4527e6:	mov    esp,0xbed600ad
  4527eb:	scas   al,BYTE PTR es:[rdi]
  4527ec:	add    ah,bl
  4527ee:	mov    ebp,0xbfdb00ad
  4527f3:	mov    cl,0x0
  4527f5:	hlt    
  4527f6:	mov    ebp,0xc1d800a1
  4527fb:	scas   eax,DWORD PTR es:[rdi]
  4527fc:	add    bh,cl
  4527fe:	(bad)
  452801:	xlat   BYTE PTR ds:[rbx]
  452802:	shl    DWORD PTR [rcx-0x4e3d2700],0x0
  452809:	fcmovb st,st(5)
  45280b:	mov    ch,0x0
  45280d:	ffreep st(4)
  45280f:	mov    ah,0x0
  452811:	faddp  st(7),st
  452813:	mov    ebx,0xbbc9de00
  452818:	add    dh,ah
  45281a:	ret    0xae
  45281d:	out    dx,al
  45281e:	(bad)  
  45281f:	stos   DWORD PTR es:[rdi],eax
  452820:	add    bl,ah
  452822:	retf   0xbb
  452825:	loopne 0x4527f2
  452827:	mov    esi,0xb8cfff00
  45282c:	add    bh,bh
  45282e:	shl    DWORD PTR [rbp-0x452f0100],1
  452834:	add    bh,bh
  452836:	sar    BYTE PTR [rbp-0x402b0100],cl
  45283c:	add    BYTE PTR [rdi-0x18ff0047],cl
  452842:	(bad)  
  452843:	rol    DWORD PTR [rax],0xe9
  452846:	rol    dh,cl
  452848:	add    dh,ah
  45284a:	xlat   BYTE PTR ds:[rbx]
  45284b:	retf   
  45284c:	add    bl,ch
  45284e:	fmul   st,st(6)
  452850:	add    bh,bh
  452852:	(bad)  
  452853:	ret    0xff00
  452856:	xlat   BYTE PTR ds:[rbx]
  452857:	(bad)
  45285a:	fadd   st,st(6)
  45285c:	add    al,dh
  45285e:	(bad)  
  45285f:	enter  0xff00,0xda
  452863:	leave  
  452864:	add    bh,bh
  452866:	fmul   st(3),st
  452868:	add    bh,bh
  45286a:	(bad)  
  45286c:	add    bl,ch
  45286e:	fcmovnbe st,st(0)
  452870:	add    dl,ah
  452872:	(bad)  
  452874:	add    bh,bh
  452876:	(bad)  
  452878:	add    ch,ch
  45287a:	loope  0x452855
  45287c:	add    dh,ch
  45287e:	in     al,0xdb
  452880:	add    bh,ch
  452882:	loope  0x452863
  452884:	add    dh,ch
  452886:	in     al,0xdd
  452888:	add    bh,bh
  45288a:	loopne 0x45285d
  45288c:	add    bh,bh
  45288e:	loop   0x452864
  452890:	add    bh,bh
  452892:	in     al,0xd7
  452894:	add    bh,bh
  452896:	in     eax,0xd9
  452898:	add    bh,bh
  45289a:	out    0xdd,eax
  45289c:	add    bh,bh
  45289e:	call   0xffffffffda2c2980
  4528a3:	loopne 0x4528a5
  4528a5:	lock out 0xe1,eax
  4528a8:	add    cl,dh
  4528aa:	call   0xffffffffeb442991
  4528af:	loope  0x4528b1
  4528b1:	(bad)  
  4528b2:	in     al,dx
  4528b3:	jrcxz  0x4528b5
  4528b5:	(bad)  
  4528b6:	out    dx,al
  4528b7:	in     eax,0x0
  4528b9:	imul   bh
  4528bb:	jmp    0x4528bd
  4528bd:	(bad)  
  4528be:	out    dx,eax
  4528bf:	call   0xffffffffeb3727c4
  4528c4:	add    cl,bh
  4528c6:	lock out dx,eax
  4528c8:	add    bh,bh
  4528ca:	repnz in eax,dx
  4528cc:	add    bh,bh
  4528ce:	hlt    
  4528cf:	out    dx,eax
  4528d0:	add    bh,bh
  4528d2:	cmc    
  4528d3:	lock add bh,bh
  4528d6:	div    esp
  4528d8:	add    bh,bh
  4528da:	clc    
  4528db:	cmc    
  4528dc:	add    bh,bh
  4528de:	cli    
  4528df:	clc    
  4528e0:	add    bh,bh
  4528e2:	std    
  4528e3:	sti    
  4528e4:	add    bh,bh
  4528e6:	(bad)  
  4528e7:	inc    BYTE PTR [rax]
	...
  452aed:	add    BYTE PTR [rax],al
  452aef:	add    al,BYTE PTR [rdx]
  452af1:	add    al,BYTE PTR [rdx]
  452af3:	add    al,BYTE PTR [rdx]
  452af5:	add    al,BYTE PTR [rdx]
  452af7:	add    al,BYTE PTR [rdx]
  452af9:	add    al,BYTE PTR [rdx]
  452afb:	add    al,BYTE PTR [rdx]
  452afd:	add    al,BYTE PTR [rdx]
  452aff:	add    al,BYTE PTR [rdx]
  452b01:	add    al,BYTE PTR [rdx]
  452b03:	add    al,BYTE PTR [rdx]
	...
  452b0d:	xor    DWORD PTR [rcx],esi
  452b0f:	xor    DWORD PTR [rcx],esi
  452b11:	xor    DWORD PTR [rcx],esi
  452b13:	xor    DWORD PTR [rcx],esi
  452b15:	xor    DWORD PTR [rcx],esi
  452b17:	xor    DWORD PTR [rcx],esi
  452b19:	xor    DWORD PTR [rcx],esi
  452b1b:	xor    DWORD PTR [rcx],esi
  452b1d:	xor    DWORD PTR [rcx],esi
  452b1f:	xor    DWORD PTR [rcx],esi
  452b21:	xor    DWORD PTR [rcx],esi
  452b23:	xor    DWORD PTR [rdx],eax
	...
  452b2d:	or     BYTE PTR [rax],cl
  452b2f:	(bad)  
  452b30:	(bad)  
  452b31:	(bad)  
  452b32:	(bad)  
  452b33:	(bad)  
  452b34:	(bad)  
  452b35:	(bad)  
  452b36:	(bad)  
  452b37:	(bad)  
  452b38:	(bad)  
  452b39:	(bad)  
  452b3a:	(bad)  
  452b3b:	(bad)  
  452b3c:	(bad)  
  452b3d:	(bad)  
  452b3e:	(bad)  
  452b3f:	(bad)  
  452b40:	(bad)  
  452b41:	(bad)  
  452b42:	(bad)  
  452b43:	xor    DWORD PTR [rdx],eax
	...
  452b4d:	add    al,0xc
  452b4f:	push   rdi
  452b50:	pop    rbx
  452b51:	push   rax
  452b52:	push   rax
  452b53:	push   rax
  452b54:	push   rax
  452b55:	push   rax
  452b56:	rex.W push rax
  452b58:	rex.W
  452b59:	rex.W
  452b5a:	rex.W
  452b5b:	rex.W
  452b5c:	rex.W
  452b5d:	rex.W
  452b5e:	rex.RX
  452b5f:	rex.W
  452b60:	rex.W
  452b61:	rex.W (bad) 
  452b63:	xor    DWORD PTR [rdx],eax
  452b65:	add    BYTE PTR [rax],al
  452b67:	add    BYTE PTR [rax],al
  452b69:	add    BYTE PTR [rax],al
  452b6b:	or     eax,0x793a030f
  452b70:	jns    0x452beb
  452b72:	jae    0x452be4
  452b74:	jo     0x452be6
  452b76:	ins    BYTE PTR es:[rdi],dx
  452b77:	ins    BYTE PTR es:[rdi],dx
  452b78:	imul   ebp,DWORD PTR [rbx+0x6b],0x63
  452b7c:	movsxd esp,DWORD PTR [rbx+0x63]
  452b7f:	(bad)  
  452b80:	(bad)  
  452b81:	cmp    eax,0x23106
  452b86:	add    BYTE PTR [rax],al
  452b88:	add    BYTE PTR [rax],al
  452b8a:	add    BYTE PTR [rax],ah
  452b8c:	(bad)  
  452b8d:	adc    eax,0x796d4314
  452b92:	jns    0x452c0d
  452b94:	jo     0x452c06
  452b96:	jo     0x452c08
  452b98:	ins    BYTE PTR es:[rdi],dx
  452b99:	ins    BYTE PTR es:[rdi],dx
  452b9a:	imul   ebp,DWORD PTR [rbx+0x63],0x63
  452b9e:	movsxd esp,DWORD PTR [rdx+0x62]
  452ba1:	cmp    eax,0x23106
  452ba6:	add    BYTE PTR [rax],al
  452ba8:	add    BYTE PTR [rax],al
  452baa:	add    BYTE PTR [rip+0x50e232b],ch        # 0x5534edb
  452bb0:	cmp    al,0x7c
  452bb2:	jl     0x452c2d
  452bb4:	jns    0x452c2f
  452bb6:	jo     0x452c28
  452bb8:	jo     0x452c26
  452bba:	ins    BYTE PTR es:[rdi],dx
  452bbb:	imul   ebp,DWORD PTR [rbx+0x6b],0x63
  452bbf:	movsxd esp,DWORD PTR [rdx+0x3d]
  452bc2:	(bad)  
  452bc3:	xor    DWORD PTR [rdx],eax
	...
  452bcd:	and    eax,0x7d5e331a
  452bd2:	jl     0x452c2e
  452bd4:	pop    rdx
  452bd5:	pop    rdx
  452bd6:	pop    rdx
  452bd7:	pop    rdx
  452bd8:	pop    rdx
  452bd9:	pop    rbx
  452bda:	pop    rdx
  452bdb:	pop    rdx
  452bdc:	pop    rdx
  452bdd:	push   rcx
  452bde:	movsxd rsp,DWORD PTR [r11+0x3f]
  452be2:	(bad)  
  452be3:	xor    DWORD PTR [rdx],eax
	...
  452bed:	cmp    BYTE PTR [rcx],bh
  452bef:	add    DWORD PTR [rcx+0x5a5a7d81],0x5a5a5a5a
  452bf9:	pop    rdx
  452bfa:	pop    rdx
  452bfb:	pop    rdx
  452bfc:	pop    rdx
  452bfd:	push   rdx
  452bfe:	imul   rbp,QWORD PTR [r11+0x46],0x6
  452c03:	xor    DWORD PTR [rdx],eax
	...
  452c0d:	(bad)  
  452c0e:	add    DWORD PTR ds:[rcx+0x7d818181],0x7979797c
  452c19:	jns    0x452c8b
  452c1b:	jo     0x452c8d
  452c1d:	ins    BYTE PTR es:[rdi],dx
  452c1e:	ins    BYTE PTR es:[rdi],dx
  452c1f:	imul   esp,DWORD PTR [rbx+0x3d],0x6
  452c23:	xor    DWORD PTR [rdx],eax
  452c25:	add    BYTE PTR [rax],al
  452c27:	add    BYTE PTR [rax],al
  452c29:	add    BYTE PTR [rax],al
  452c2b:	or     eax,0x8661380f
  452c30:	xchg   BYTE PTR [rsi+0x7d818181],al
  452c36:	jge    0x452cb4
  452c38:	jns    0x452cb3
  452c3a:	jns    0x452cac
  452c3c:	jo     0x452cae
  452c3e:	jo     0x452cac
  452c40:	ins    BYTE PTR es:[rdi],dx
  452c41:	(bad)  
  452c42:	(bad)  
  452c43:	xor    DWORD PTR [rdx],eax
  452c45:	add    BYTE PTR [rax],al
  452c47:	add    BYTE PTR [rax],al
  452c49:	add    BYTE PTR [rax],al
  452c4b:	(bad)  
  452c4c:	sbb    al,0x13
  452c4e:	cmp    eax,DWORD PTR [rcx+0x5b868686]
  452c54:	pop    rdx
  452c55:	pop    rdx
  452c56:	pop    rdx
  452c57:	pop    rdx
  452c58:	pop    rdx
  452c59:	pop    rdx
  452c5a:	pop    rdx
  452c5b:	pop    rbx
  452c5c:	pop    rdx
  452c5d:	push   rcx
  452c5e:	rex.WB jo 0x452ccd
  452c61:	rex.W (bad) 
  452c63:	xor    DWORD PTR [rdx],eax
  452c65:	add    BYTE PTR [rax],al
  452c67:	add    BYTE PTR [rax],al
  452c69:	add    BYTE PTR [rax],al
  452c6b:	sub    ah,BYTE PTR [rdi]
  452c6d:	sbb    eax,0x86572f15
  452c72:	xchg   BYTE PTR [rdx+0x5a],bl
  452c75:	pop    rdx
  452c76:	pop    rdx
  452c77:	pop    rdx
  452c78:	pop    rdx
  452c79:	pop    rdx
  452c7a:	pop    rdx
  452c7b:	pop    rdx
  452c7c:	pop    rdx
  452c7d:	push   rdx
  452c7e:	rex.WB jo 0x452cf1
  452c81:	cmp    eax,0x23106
  452c86:	add    BYTE PTR [rax],al
  452c88:	add    BYTE PTR [rax],al
  452c8a:	add    BYTE PTR [rax],al
  452c8c:	add    BYTE PTR [rdx],ah
  452c8e:	adc    DWORD PTR [rdx],ecx
  452c90:	push   rdi
  452c91:	mov    al,BYTE PTR [rsi-0x7e7e797a]
  452c97:	add    DWORD PTR [rcx+0x797c7c7d],0x70707979
  452ca1:	(bad)  
  452ca2:	(bad)  
  452ca3:	xor    DWORD PTR [rdx],eax
	...
  452cad:	cmp    BYTE PTR [rsi],dh
  452caf:	jb     0x452c35
  452cb1:	mov    cl,BYTE PTR [rdx-0x79797976]
  452cb7:	xchg   BYTE PTR [rcx+0x7c7c7d81],al
  452cbd:	jns    0x452d38
  452cbf:	jns    0x452d34
  452cc1:	(bad)  
  452cc2:	(bad)  
  452cc3:	xor    DWORD PTR [rdx],eax
	...
  452ccd:	xor    BYTE PTR [rbx-0x76],dl
  452cd0:	mov    cl,BYTE PTR [rbp+0x5b5b5b8a]
  452cd6:	pop    rbx
  452cd7:	pop    rdx
  452cd8:	pop    rbx
  452cd9:	pop    rdx
  452cda:	pop    rdx
  452cdb:	pop    rdx
  452cdc:	pop    rdx
  452cdd:	push   rdi
  452cde:	rex.WB jns 0x452d5a
  452ce1:	rex.W (bad) 
  452ce3:	xor    DWORD PTR [rdx],eax
  452ce5:	add    BYTE PTR [rax],al
  452ce7:	add    BYTE PTR [rax],al
  452ce9:	add    BYTE PTR [rax],al
  452ceb:	or     eax,0x8c5d0b0f
  452cf0:	mov    WORD PTR [rbp+0x5a5a5a8d],cs
  452cf6:	pop    rdx
  452cf7:	pop    rdx
  452cf8:	pop    rdx
  452cf9:	pop    rdx
  452cfa:	pop    rdx
  452cfb:	pop    rdx
  452cfc:	pop    rdx
  452cfd:	push   rdx
  452cfe:	rex.WB jl 0x452d7a
  452d01:	rex.X (bad) 
  452d03:	xor    DWORD PTR [rdx],eax
  452d05:	add    BYTE PTR [rax],al
  452d07:	add    BYTE PTR [rax],al
  452d09:	add    BYTE PTR [rax],al
  452d0b:	(bad)  
  452d0c:	sbb    al,0x19
  452d0e:	xor    eax,0x8d8d8d8c
  452d13:	mov    WORD PTR [rdx-0x75797574],cs
  452d19:	xchg   BYTE PTR [rcx+rax*4+0x7d7d8181],al
  452d20:	jl     0x452d61
  452d22:	(bad)  
  452d23:	xor    DWORD PTR [rdx],eax
  452d25:	add    BYTE PTR [rax],al
  452d27:	add    BYTE PTR [rax],al
  452d29:	add    BYTE PTR [rax],al
  452d2b:	sub    esp,DWORD PTR cs:[rbx]
  452d2e:	adc    BYTE PTR [rcx],cl
  452d30:	push   rcx
  452d31:	lea    ecx,[rbp-0x75737273]
  452d37:	mov    cl,BYTE PTR [rdx-0x7979797a]
  452d3d:	add    DWORD PTR [rcx+0x6507d81],0x231
  452d47:	add    BYTE PTR [rax],al
  452d49:	add    BYTE PTR [rax],al
  452d4b:	add    BYTE PTR [rax],al
  452d4d:	sbb    esi,DWORD PTR es:[rdi]
  452d50:	imul   ecx,DWORD PTR [rbp+0x5a5a5f8d],0x5b5a5b5b
  452d5a:	pop    rbx
  452d5b:	pop    rbx
  452d5c:	pop    rbx
  452d5d:	push   rdi
  452d5e:	add    QWORD PTR [r9+0x231063f],0x0
  452d69:	add    BYTE PTR [rax],al
  452d6b:	add    BYTE PTR [rax],al
  452d6d:	cmp    BYTE PTR [rbp+rcx*4-0x73],bl
  452d71:	lea    ecx,[rbp+0x5a5a5a5b]
  452d77:	pop    rdx
  452d78:	pop    rdx
  452d79:	pop    rdx
  452d7a:	pop    rdx
  452d7b:	pop    rdx
  452d7c:	pop    rdx
  452d7d:	push   rdx
  452d7e:	rex.WB xchg BYTE PTR [r9+0x231064f],al
	...
  452d8d:	cmp    BYTE PTR [rcx-0x73],ah
  452d90:	lea    ecx,[rbp-0x72727273]
  452d96:	lea    ecx,[rbp-0x75757373]
  452d9c:	mov    cl,BYTE PTR [rdx+0x42868686]
  452da2:	(bad)  
  452da3:	xor    DWORD PTR [rdx],eax
  452da5:	add    BYTE PTR [rax],al
  452da7:	add    BYTE PTR [rax],al
  452da9:	add    BYTE PTR [rax],al
  452dab:	or     eax,0x8d553412
  452db0:	lea    ecx,[rbp-0x72727273]
  452db6:	lea    ecx,[rbp-0x72727273]
  452dbc:	mov    cl,BYTE PTR [rdx+0x50868686]
  452dc2:	(bad)  
  452dc3:	xor    DWORD PTR [rdx],eax
  452dc5:	add    BYTE PTR [rax],al
  452dc7:	add    BYTE PTR [rax],al
  452dc9:	add    BYTE PTR [rax],al
  452dcb:	sub    ah,BYTE PTR [rdi]
  452dcd:	and    DWORD PTR [rax],ebx
  452dcf:	xor    ch,BYTE PTR [rax-0x73]
  452dd2:	lea    ebx,[rdi+0x5b]
  452dd5:	pop    rdi
  452dd6:	pop    rbx
  452dd7:	pop    rdi
  452dd8:	pop    rdx
  452dd9:	pop    rdx
  452dda:	pop    rdx
  452ddb:	pop    rdx
  452ddc:	pop    rdx
  452ddd:	push   rdx
  452dde:	rex.WB mov al,BYTE PTR [r14+0x231064f]
  452de5:	add    BYTE PTR [rax],al
  452de7:	add    BYTE PTR [rax],al
  452de9:	add    BYTE PTR [rax],al
  452deb:	sub    eax,0x31172427
  452df0:	lea    cx,[rbp+0x5a5a5a5f]
  452df7:	pop    rdx
  452df8:	pop    rdx
  452df9:	pop    rdx
  452dfa:	pop    rdx
  452dfb:	pop    rdx
  452dfc:	pop    rdx
  452dfd:	push   rdx
  452dfe:	rex.WB mov al,BYTE PTR [r14+0x231064f]
	...
  452e0d:	sbb    edi,DWORD PTR es:[rsi-0x76]
  452e11:	lea    ecx,[rbp-0x72727273]
  452e17:	lea    ecx,[rbp-0x72727273]
  452e1d:	lea    ecx,[rsp+rcx*4+0x31064f8a]
  452e24:	add    al,BYTE PTR [rax]
  452e26:	add    BYTE PTR [rax],al
  452e28:	add    BYTE PTR [rax],al
  452e2a:	add    BYTE PTR [rax],al
  452e2c:	add    BYTE PTR [rax],bh
  452e2e:	jno    0x452dbd
  452e30:	lea    ecx,[rbp-0x72727273]
  452e36:	lea    ecx,[rbp-0x72727273]
  452e3c:	lea    ecx,[rbp+0x428c8c8d]
  452e42:	(bad)  
  452e43:	xor    DWORD PTR [rcx],eax
	...
  452e4d:	cmp    BYTE PTR [rsi+0x76],dh
  452e50:	jbe    0x452dd2
  452e52:	add    BYTE PTR [rax-0x7f7f7f80],0x77
  452e59:	xor    BYTE PTR [rsi-0x80],0x77
  452e5d:	ja     0x452ed6
  452e5f:	ja     0x452ec9
  452e61:	push   rax
  452e62:	(bad)  
  452e63:	(bad)  
  452e64:	(bad)  
	...
  452e6d:	pop    rsi
  452e6e:	pop    rdi
  452e6f:	pop    rdi
  452e70:	pop    rdi
  452e71:	pop    rdi
  452e72:	pop    rbx
  452e73:	pop    rbx
  452e74:	pop    rax
  452e75:	pop    rax
  452e76:	pop    rax
  452e77:	pop    rax
  452e78:	pop    rax
  452e79:	pop    rax
  452e7a:	push   rsi
  452e7b:	push   rsi
  452e7c:	push   rsi
  452e7d:	push   rax
  452e7e:	push   rax
  452e7f:	push   rsp
  452e80:	push   rax
  452e81:	push   rax
  452e82:	push   rax
	...
  452ea7:	add    BYTE PTR [rax],al
  452ea9:	(bad)  
  452eaa:	(bad)  
  452eab:	(bad)  
  452eac:	(bad)  
  452ead:	(bad)  
  452eae:	(bad)  
  452eaf:	(bad)  
  452eb0:	(bad)  
  452eb1:	cld    
  452eb2:	add    BYTE PTR [rax],al
  452eb4:	(bad)  
  452eb6:	add    BYTE PTR [rax],al
  452eb8:	(bad)  
  452eba:	add    BYTE PTR [rax],al
  452ebc:	(bad)  
  452ebe:	add    BYTE PTR [rax],al
  452ec0:	xadd   BYTE PTR [rax],al
  452ec3:	add    BYTE PTR [rdi],cl
  452ec5:	rol    BYTE PTR [rax],0x0
  452ec8:	xadd   BYTE PTR [rax],al
  452ecb:	add    BYTE PTR [rdi],cl
  452ecd:	lock add BYTE PTR [rax],al
  452ed0:	(bad)  
  452ed2:	add    BYTE PTR [rax],al
  452ed4:	(bad)  
  452ed6:	add    BYTE PTR [rax],al
  452ed8:	xadd   BYTE PTR [rax],al
  452edb:	add    BYTE PTR [rdi],cl
  452edd:	rol    BYTE PTR [rax],0x0
  452ee0:	xadd   BYTE PTR [rax],al
  452ee3:	add    BYTE PTR [rdi],cl
  452ee5:	lock add BYTE PTR [rax],al
  452ee8:	(bad)  
  452eea:	add    BYTE PTR [rax],al
  452eec:	(bad)  
  452eee:	add    BYTE PTR [rax],al
  452ef0:	xadd   BYTE PTR [rax],al
  452ef3:	add    BYTE PTR [rdi],cl
  452ef5:	rol    BYTE PTR [rax],0x0
  452ef8:	xadd   BYTE PTR [rax],al
  452efb:	add    BYTE PTR [rdi],cl
  452efd:	lock add BYTE PTR [rax],al
  452f00:	(bad)  
  452f02:	add    BYTE PTR [rax],al
  452f04:	(bad)  
  452f06:	add    BYTE PTR [rax],al
  452f08:	xadd   BYTE PTR [rax],al
  452f0b:	add    BYTE PTR [rdi],cl
  452f0d:	rol    BYTE PTR [rax],0x0
  452f10:	xadd   BYTE PTR [rax],al
  452f13:	add    BYTE PTR [rdi],cl
  452f15:	lock add BYTE PTR [rax],al
  452f18:	(bad)  
  452f1a:	add    BYTE PTR [rax],al
  452f1c:	(bad)  
  452f1e:	add    BYTE PTR [rax],al
  452f20:	(bad)  
  452f22:	add    BYTE PTR [rax],al
  452f24:	(bad)  
  452f25:	(bad)  
  452f26:	(bad)  
  452f27:	(bad)  
  452f28:	dec    DWORD PTR [rbx]
  452f2a:	add    BYTE PTR [rcx],al
  452f2d:	add    BYTE PTR [rax],al
  452f2f:	add    bh,bh
  452f31:	(bad)  
  452f32:	(bad)  
  452f33:	inc    DWORD PTR [rcx]
  452f35:	add    BYTE PTR [rax],al
  452f37:	add    BYTE PTR [rax],al
  452f39:	add    BYTE PTR [rax],al
  452f3b:	add    BYTE PTR [rdx+rax*1],cl
  452f3e:	add    BYTE PTR [rax],al
  452f40:	add    BYTE PTR [rcx+0x53],dl
  452f43:	jns    0x452fb8
  452f45:	je     0x452fac
  452f47:	ins    DWORD PTR es:[rdi],dx
  452f48:	cs rex.R jb 0x452fad
  452f4c:	ja     0x452fb7
  452f4e:	outs   dx,BYTE PTR ds:[rsi]
  452f4f:	addr32 sub al,0x20
  452f52:	push   rsi
  452f53:	gs jb  0x452fc9
  452f56:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  452f5d:	xor    BYTE PTR cs:[rsi],ch
  452f60:	xor    BYTE PTR [rax+riz*1],ch
  452f63:	rex.XB jne 0x452fd2
  452f66:	je     0x452fdd
  452f68:	jb     0x452fcf
  452f6a:	cmp    eax,0x7475656e
  452f6f:	jb     0x452fd2
  452f71:	ins    BYTE PTR es:[rdi],dx
  452f72:	sub    al,0x20
  452f74:	push   rax
  452f75:	jne    0x452fd9
  452f77:	ins    BYTE PTR es:[rdi],dx
  452f78:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  452f7f:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  452f83:	(bad)  
  452f84:	xor    BYTE PTR [rbx],dh
  452f86:	xor    ax,0x3766
  452f8a:	xor    WORD PTR [rcx],si
  452f8d:	fs xor eax,0x61336130
  452f93:	add    eax,0x1
  452f98:	adc    edx,DWORD PTR [rbx+0x79]
  452f9b:	jae    0x453011
  452f9d:	gs ins DWORD PTR es:[rdi],dx
  452f9f:	cs rex.R jb 0x453004
  452fa3:	ja     0x45300e
  452fa5:	outs   dx,BYTE PTR ds:[rsi]
  452fa6:	movsxd rbp,DWORD PTR cs:[r15d+0x6e]
  452fac:	add    al,BYTE PTR [rax]
  452fae:	add    BYTE PTR [rax],al
  452fb0:	or     BYTE PTR [rcx+0x63],cl
  452fb3:	outs   dx,DWORD PTR ds:[rsi]
  452fb4:	outs   dx,BYTE PTR ds:[rsi]
  452fb5:	rex.R (bad) 
  452fb7:	je     0x45301a
  452fb9:	or     BYTE PTR [rcx+0x63],cl
  452fbc:	outs   dx,DWORD PTR ds:[rsi]
  452fbd:	outs   dx,BYTE PTR ds:[rsi]
  452fbe:	push   rbx
  452fbf:	imul   edi,DWORD PTR [rdx+0x65],0x13020407
  452fc6:	push   rbx
  452fc7:	jns    0x45303c
  452fc9:	je     0x453030
  452fcb:	ins    DWORD PTR es:[rdi],dx
  452fcc:	cs rex.R jb 0x453031
  452fd0:	ja     0x45303b
  452fd2:	outs   dx,BYTE PTR ds:[rsi]
  452fd3:	addr32 cs push rbx
  452fd6:	imul   edi,DWORD PTR [rdx+0x65],0x2
  452fdd:	add    al,BYTE PTR [rax]
  452fdf:	add    BYTE PTR [rax],al
  452fe1:	or     DWORD PTR [rbx],eax
  452fe3:	add    BYTE PTR [rax],al
  452fe5:	add    BYTE PTR [rip+0xfffffffffffffffc],al        # 0x452fe7
  452feb:	adc    edx,DWORD PTR [rbx+0x79]
  452fee:	jae    0x453064
  452ff0:	gs ins DWORD PTR es:[rdi],dx
  452ff2:	cs rex.R jb 0x453057
  452ff6:	ja     0x453061
  452ff8:	outs   dx,BYTE PTR ds:[rsi]
  452ff9:	addr32 cs push rbx
  452ffc:	imul   edi,DWORD PTR [rdx+0x65],0x2
  453003:	add    eax,0x74646977
  453008:	push   0x69656806
  45300d:	addr32 push 0x8000074
  453013:	or     BYTE PTR [rdx],al
	...
  45301d:	add    BYTE PTR [rax],al
  45301f:	add    BYTE PTR [rdi],cl
  453021:	add    eax,DWORD PTR [rax]
  453023:	add    BYTE PTR [rax],al
  453025:	ss (bad) 
  453027:	add    BYTE PTR [rax],al
  453029:	add    al,BYTE PTR [rax]
  45302b:	add    BYTE PTR [rcx],al
  45302d:	add    BYTE PTR [rdx],al
  45302f:	add    BYTE PTR [rax],ah
  453031:	and    BYTE PTR [rax],al
  453033:	add    BYTE PTR [rcx],al
  453035:	add    BYTE PTR [rax],cl
  453037:	add    BYTE PTR [rax+0x26000008],ch
  45303d:	add    BYTE PTR [rax],al
  45303f:	add    BYTE PTR [rax],dl
  453041:	adc    BYTE PTR [rax],al
  453043:	add    BYTE PTR [rcx],al
  453045:	add    BYTE PTR [rax],cl
  453047:	add    BYTE PTR [rax+0x5],ch
  45304a:	add    BYTE PTR [rax],al
  45304c:	(bad)  
  45304d:	or     BYTE PTR [rax],al
  45304f:	add    BYTE PTR [rax],ch
  453051:	add    BYTE PTR [rax],al
  453053:	add    BYTE PTR [rax],ah
  453055:	add    BYTE PTR [rax],al
  453057:	add    BYTE PTR [rax+0x0],al
  45305a:	add    BYTE PTR [rax],al
  45305c:	add    DWORD PTR [rax],eax
  45305e:	or     BYTE PTR [rax],al
	...
  453078:	sub    edx,DWORD PTR [rsi+0x5e]
  45307b:	add    BYTE PTR [rcx+rbx*2],ch
  45307e:	(bad)  
  45307f:	add    BYTE PTR [rip+0x31006a5f],ch        # 0x31459ae4
  453085:	pop    rbx
  453086:	(bad)  
  453087:	add    BYTE PTR [rip+0x39006b58],bh        # 0x39459be5
  45308d:	pop    rcx
  45308e:	jbe    0x453090
  453090:	cmp    ebx,DWORD PTR [rax+rdi*2+0x0]
  453094:	sub    ah,BYTE PTR [rdx+rsi*2+0x0]
  453098:	xor    BYTE PTR [rbp+0x72],ah
  45309b:	add    BYTE PTR [rax],bh
  45309d:	addr32 jno 0x4530a0
  4530a0:	ds (bad) 
  4530a2:	jl     0x4530a4
  4530a4:	xor    DWORD PTR [rsi+0x7d],ebp
  4530a7:	add    BYTE PTR [rcx+0x5c],al
  4530aa:	outs   dx,BYTE PTR ds:[rsi]
  4530ab:	add    BYTE PTR [rbx+0x5f],al
  4530ae:	jno    0x4530b0
  4530b0:	rex.RB (bad) 
  4530b2:	jb     0x4530b4
  4530b4:	movsxd rsi,DWORD PTR [r13+0x0]
  4530b8:	rex movsxd edi,DWORD PTR [rsi+0x0]
  4530bc:	rex.WRXB
  4530bd:	addr32 jns 0x4530c0
  4530c0:	rex.WRX push 0x6b510079
  4530c6:	jl     0x4530c8
  4530c8:	adc    ebp,DWORD PTR [rbp-0x73]
  4530cb:	add    BYTE PTR [rdi],bl
  4530cd:	jne    0x453060
  4530cf:	add    BYTE PTR [rdi],bl
  4530d1:	jge    0x45306e
  4530d3:	add    BYTE PTR [rip+0x3800806f],dh        # 0x3845b148
  4530d9:	ja     0x453061
  4530db:	add    BYTE PTR [rdx],ch
  4530dd:	jl     0x453073
  4530df:	add    BYTE PTR [rbx],ch
  4530e1:	jns    0x453089
  4530e3:	add    BYTE PTR [rdi*2+0x664300ab],ch
  4530ea:	add    DWORD PTR [rax],0x856a46
  4530f0:	rex.WB push 0x6e4b0083
  4530f6:	mov    BYTE PTR [rax],al
  4530f8:	rex.WR jae 0x453087
  4530fb:	add    BYTE PTR [rbx+0x73],bl
  4530fe:	add    DWORD PTR [rax],0x50
  453101:	je     0x453090
  453103:	add    BYTE PTR [rax+0x77],dl
  453106:	nop
  453107:	add    BYTE PTR [rbx+rdi*2-0x6c],dl
  45310b:	add    BYTE PTR [rax+rdi*2-0x70],bl
  45310f:	add    BYTE PTR [rbx+0x7b],ah
  453112:	mov    WORD PTR [rax],es
  453114:	imul   edi,DWORD PTR [rsi-0x74],0x967f6300
  45311b:	add    BYTE PTR [rax],al
  45311d:	add    BYTE PTR [rax],al
  45311f:	add    BYTE PTR [rcx+rcx*4],bh
  453122:	sahf   
  453123:	add    BYTE PTR [rsi+rax*4],dl
  453126:	scas   al,BYTE PTR es:[rdi]
  453127:	add    BYTE PTR [rip+0x3200a488],ch        # 0x3245d5b5
  45312d:	sub    DWORD PTR [rax+rax*1+0xb1822f],0x22
  453135:	(bad)  
  453136:	mov    ch,0x0
  453138:	sub    DWORD PTR [rbx-0x79ccff47],ecx
  45313e:	mov    dl,0x0
  453140:	xor    al,0x8f
  453142:	mov    bh,0x0
  453144:	xor    ecx,DWORD PTR [rbx-0x6cd1ff45]
  45314a:	mov    ah,0x0
  45314c:	cmp    al,0x93
  45314e:	mov    ebx,0xbc9f3f00
  453153:	add    BYTE PTR [rcx-0x7e],bl
  453156:	(bad)  
  453157:	add    BYTE PTR [rsi-0x78],bl
  45315a:	lahf   
  45315b:	add    BYTE PTR [rbp-0x7f],ah
  45315e:	xchg   edi,eax
  45315f:	add    BYTE PTR [rax-0x7e],ch
  453162:	cwde   
  453163:	add    BYTE PTR [rcx+rcx*4-0x61],ah
  453167:	add    BYTE PTR [rdx-0x76],ch
  45316a:	lahf   
  45316b:	add    BYTE PTR [rdx-0x76],dh
  45316e:	lahf   
  45316f:	add    BYTE PTR [rdx-0x70],bh
  453172:	lahf   
  453173:	add    BYTE PTR [rbp-0x7c],al
  453176:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  453177:	add    BYTE PTR [rdx-0x77],bl
  45317a:	movabs ds:0xb49c5600a9914900,al
  453183:	add    BYTE PTR [rax-0x77],ah
  453186:	movabs al,ds:0xa6906400a48d6200
  45318f:	add    BYTE PTR [rbx-0x6f],ch
  453192:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  453193:	add    BYTE PTR [rsi-0x6d],ah
  453196:	test   al,0x0
  453198:	imul   edx,DWORD PTR [rbp-0x6793ff56],0xffffffad
  45319f:	add    BYTE PTR [rax-0x65],bh
  4531a2:	scas   al,BYTE PTR es:[rdi]
  4531a3:	add    BYTE PTR [rbx-0x62],ah
  4531a6:	mov    bh,0x0
  4531a8:	ins    DWORD PTR es:[rdi],dx
  4531a9:	pushf  
  4531aa:	mov    cl,0x0
  4531ac:	jge    0x45314c
  4531ae:	mov    cl,0x0
  4531b0:	jb     0x453153
  4531b2:	mov    ch,0x0
  4531b4:	jne    0x45315c
  4531b6:	mov    ecx,0xbba87700
  4531bb:	add    BYTE PTR [rax-0x57],bh
  4531be:	mov    esp,0xc18e1900
  4531c3:	add    BYTE PTR [rbx],dl
  4531c5:	nop
  4531c6:	mov    BYTE PTR [rax],0x11
  4531c9:	xchg   esp,eax
  4531ca:	(bad)  
  4531cb:	add    BYTE PTR [rcx],bl
  4531cd:	nop
  4531ce:	(bad)  
  4531cf:	add    BYTE PTR [rbx],dl
  4531d1:	xchg   ebp,eax
  4531d2:	retf   
  4531d3:	add    BYTE PTR [rdx],bl
  4531d5:	xchg   esp,eax
  4531d6:	enter  0x1c00,0x9a
  4531da:	retf   
  4531db:	add    BYTE PTR [rsi],al
  4531dd:	popf   
  4531de:	fild   DWORD PTR [rax]
  4531e0:	add    al,0x9e
  4531e2:	fadd   QWORD PTR [rax]
  4531e4:	or     BYTE PTR [rax+rbx*8-0x2f67ef00],bl
  4531eb:	add    BYTE PTR [rip+0x1300d099],dl        # 0x1346028a
  4531f1:	fwait
  4531f2:	(bad)  
  4531f3:	add    BYTE PTR [rsi],dl
  4531f5:	sahf   
  4531f6:	(bad)  
  4531f7:	add    BYTE PTR [rcx],bl
  4531f9:	popf   
  4531fa:	rol    DWORD PTR [rax],cl
  4531fc:	(bad)  
  4531fd:	mov    es,ecx
  4531ff:	add    BYTE PTR [rdi],ah
  453201:	sahf   
  453202:	(bad)  
  453203:	add    BYTE PTR [rsi],dh
  453205:	nop
  453206:	rol    BYTE PTR [rax],0x3b
  453209:	xchg   ebp,eax
  45320a:	(bad)
  45320d:	popf   
  45320e:	(bad)  
  45320f:	add    BYTE PTR [rdi],bh
  453211:	(bad)  
  453212:	leave  
  453213:	add    BYTE PTR [rax],dh
  453215:	fwait
  453216:	rol    DWORD PTR [rax],cl
  453218:	add    esp,DWORD PTR [rax-0x5df5ff21]
  45321e:	fld    QWORD PTR [rax]
  453220:	sbb    esp,DWORD PTR [rcx-0x59c9ff29]
  453226:	retf   
  453227:	add    BYTE PTR [rsi],bh
  453229:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  45322a:	int3   
  45322b:	add    BYTE PTR [rcx],ah
  45322d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  45322e:	(bad)  
  45322f:	add    BYTE PTR [rbx],ch
  453231:	movabs ds:0xa23700d8a92e00d3,eax
  45323a:	rol    BYTE PTR [rax],cl
  45323c:	(bad)  
  45323d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  45323e:	fild   WORD PTR [rax]
  453240:	ss scas al,BYTE PTR es:[rdi]
  453242:	fild   DWORD PTR [rax]
  453244:	cmp    ch,BYTE PTR [rbp-0x5dfeff28]
  45324a:	jrcxz  0x45324c
  45324c:	(bad)  
  45324d:	movabs ds:0xa60b00e6a50100e0,al
  453256:	loop   0x453258
  453258:	add    esp,DWORD PTR [rdi-0x53f4ff18]
  45325e:	(bad)  
  45325f:	add    BYTE PTR [rbx],dl
  453261:	test   eax,0xae1c00e3
  453266:	in     eax,0x0
  453268:	adc    ebp,DWORD PTR [rdi-0x4deaff15]
  45326e:	in     al,dx
  45326f:	add    BYTE PTR [rip+0x2600ecb5],bl        # 0x26461f2a
  453275:	mov    dl,0xe5
  453277:	add    BYTE PTR [rsi],ah
  453279:	mov    eax,0xbc2e00ed
  45327e:	out    dx,al
  45327f:	add    BYTE PTR [rax],dh
  453281:	mov    dh,0xe7
  453283:	add    BYTE PTR [rdx+rdi*4],bh
  453286:	out    0x0,al
  453288:	xor    eax,0x3800eebe
  45328d:	mov    edi,0xb73f00ed
  453292:	repnz add BYTE PTR [rsi-0x60],cl
  453296:	ret    0x4500
  453299:	movabs al,ds:0xa35000cba24900cd
  4532a2:	(bad)
  4532a5:	test   eax,0xae5200c1
  4532aa:	int3   
  4532ab:	add    BYTE PTR [rcx+rsi*4-0x37],dl
  4532af:	add    BYTE PTR [rax-0x57],al
  4532b2:	rol    DWORD PTR [rax],1
  4532b4:	rex.WR stos QWORD PTR es:[rdi],rax
  4532b6:	(bad)  
  4532b7:	add    BYTE PTR [rbx-0x59],al
  4532ba:	fadd   DWORD PTR [rax]
  4532bc:	rex.WRXB lods rax,QWORD PTR ds:[rsi]
  4532be:	fadd   DWORD PTR [rax]
  4532c0:	rex.XB mov r9b,0xd9
  4532c3:	add    BYTE PTR [rdx-0x47],cl
  4532c6:	fiadd  WORD PTR [rax]
  4532c8:	pop    rsi
  4532c9:	mov    cl,0xd2
  4532cb:	add    BYTE PTR [rdx-0x50],dl
  4532ce:	fild   DWORD PTR [rax]
  4532d0:	vpshrdq xmm6,xmm22,XMMWORD PTR [rdx-0x4586ff39],0xcd
  4532db:	add    BYTE PTR [rbp-0x4a],ah
  4532de:	rol    BYTE PTR [rax],cl
  4532e0:	imul   edi,DWORD PTR [rcx-0x4089ff2f],0xae4200d8
  4532ea:	loope  0x4532ec
  4532ec:	rex.WRX mov sil,0xe5
  4532ef:	add    BYTE PTR [rsi-0x41],al
  4532f2:	out    0x0,eax
  4532f4:	mov    r15d,0xbd5900e9
  4532fa:	jmp    0xfffffffff60179ff
  4532ff:	add    BYTE PTR [rdx-0x43],cl
  453302:	cmc    
  453303:	add    BYTE PTR [rdi],bh
  453305:	ret    0xee
  453308:	pop    rcx
  453309:	rcr    ch,0x0
  45330c:	rex.WRX ret 
  45330e:	out    0x0,eax
  453310:	rex.X shr ebx,0x0
  453314:	rex.WB (bad) 
  453316:	out    dx,al
  453317:	add    BYTE PTR [rsi+rax*8-0x16],dl
  45331b:	add    BYTE PTR [rcx-0x36],bl
  45331e:	out    dx,eax
  45331f:	add    BYTE PTR [rbx-0x39],cl
  453322:	lock add BYTE PTR [rbx-0x3d],dl
  453326:	test   BYTE PTR [rax],0x51
  453329:	retf   0xf1
  45332c:	pop    rcx
  45332d:	(bad)  
  45332e:	lock add BYTE PTR [rsi-0x3a],dl
  453332:	cli    
  453333:	add    BYTE PTR [rbp-0x35],bl
  453336:	sti    
  453337:	add    BYTE PTR [rsp+rax*8-0x13],ah
  45333b:	add    BYTE PTR [rax-0x3d],bh
  45333e:	in     al,0x0
  453340:	jne    0x45330e
  453342:	in     eax,0x0
  453344:	jle    0x453311
  453346:	jmp    0xffffffffee15994b
  45334b:	add    BYTE PTR [rcx-0x33],ah
  45334e:	cli    
  45334f:	add    BYTE PTR [rdx-0x2f],ah
  453352:	icebp  
  453353:	add    BYTE PTR [rcx-0x2c],ch
  453356:	repnz add BYTE PTR [rbp-0x2a],ch
  45335a:	repnz add BYTE PTR [rdi-0x30],ah
  45335e:	std    
  45335f:	add    BYTE PTR [rcx-0x2e],ch
  453362:	inc    BYTE PTR [rax]
  453364:	jno    0x45333d
  453366:	repnz add BYTE PTR [rbp-0x27],dh
  45336a:	repz add BYTE PTR [rbx-0x25],bh
  45336e:	hlt    
  45336f:	add    BYTE PTR [rsp+rbx*8-0xc],bh
  453373:	add    BYTE PTR [rdx-0x29],dh
  453376:	inc    BYTE PTR [rax]
  453378:	je     0x453352
  45337a:	inc    DWORD PTR [rax]
  45337c:	jns    0x453357
  45337e:	inc    BYTE PTR [rax]
  453380:	test   DWORD PTR [rax-0x667bff5b],ebx
  453386:	test   al,0x0
  453388:	mov    DWORD PTR [rbp-0x5f75ff55],ebx
  45338e:	scas   eax,DWORD PTR es:[rdi]
  45338f:	add    BYTE PTR [rbx-0x72ff485a],al
  453395:	movabs eax,ds:0xa99800b3a59200b1
  45339e:	mov    ch,0x0
  4533a0:	xchg   ebp,eax
  4533a1:	test   eax,0xad9c00ba
  4533a6:	mov    eax,0xbdb2a300
  4533ab:	add    BYTE PTR [rdi-0x56ff3646],cl
  4533b1:	mov    bh,0xc0
  4533b3:	add    BYTE PTR [rbp+rax*8-0x376cff2d],cl
  4533ba:	(bad)  
  4533bb:	add    BYTE PTR [rax+rcx*8-0x257eff1c],al
  4533c2:	out    dx,eax
  4533c3:	add    BYTE PTR [rcx-0x7bff1929],bl
  4533c9:	fdivrp st(5),st
  4533cb:	add    BYTE PTR [rbx-0x74ff0c24],cl
  4533d1:	xlat   BYTE PTR ds:[rbx]
  4533d2:	inc    DWORD PTR [rax]
  4533d4:	stos   BYTE PTR es:[rdi],al
  4533d5:	shl    ah,cl
  4533d7:	add    BYTE PTR [rbx-0x47ff1229],ah
  4533dd:	(bad)  
  4533de:	loop   0x4533e0
  4533e0:	mov    esp,ecx
  4533e2:	test   BYTE PTR [rax],0x91
  4533e5:	loop   0x4533de
  4533e7:	add    BYTE PTR [rbp-0x66ff081c],dl
  4533ed:	out    0xf7,eax
  4533ef:	add    BYTE PTR [rcx+rbp*8-0x1962ff0a],bl
  4533f6:	stc    
  4533f7:	add    BYTE PTR [rcx-0x5dff0d1d],ah
  4533fd:	call   0xffffffffecea34f9
  453402:	test   DWORD PTR [rax],0xfae9a5
  453408:	stos   BYTE PTR es:[rdi],al
  453409:	in     eax,dx
  45340a:	stc    
  45340b:	add    BYTE PTR [rbp-0x4cff0613],ch
  453411:	in     al,dx
  453412:	cmc    
  453413:	add    BYTE PTR [rcx-0x4fff001a],dh
  453419:	out    dx,al
  45341a:	cli    
  45341b:	add    BYTE PTR [rbp-0x4eff0411],dh
  453421:	jmp    0xffffffffe8fb3525
  453426:	inc    DWORD PTR [rax]
  453428:	mov    ch,0xec
  45342a:	inc    DWORD PTR [rax]
  45342c:	mov    ecx,0xbd00feeb
  453431:	(bad)  
  453432:	inc    DWORD PTR [rax]
  453434:	mov    eax,0xbd00feef
  453439:	in     eax,dx
  45343a:	inc    DWORD PTR [rax]
  45343c:	mov    bh,0xf2
  45343e:	sti    
  45343f:	add    BYTE PTR [rdx-0x42ff0110],bh
  453445:	icebp  
  453446:	inc    BYTE PTR [rax]
  453448:	leave  
  453449:	out    dx,al
  45344a:	cmc    
  45344b:	add    cl,al
  45344d:	in     eax,dx
  45344e:	inc    DWORD PTR [rax]
  453450:	leave  
  453451:	out    dx,eax
  453452:	inc    BYTE PTR [rax]
  453454:	(bad)  
  453455:	jmp    0x45344c
  453457:	add    cl,bl
  453459:	in     eax,dx
  45345a:	test   BYTE PTR [rax],0xc1
  45345d:	repnz inc DWORD PTR [rax]
  453460:	(bad)  
  453461:	cmc    
  453462:	inc    DWORD PTR [rax]
  453464:	retf   0xfef5
  453467:	add    dh,cl
  453469:	clc    
  45346a:	inc    DWORD PTR [rax]
  45346c:	(bad)  
  45346d:	repnz std 
  45346f:	add    cl,dl
  453471:	cli    
  453472:	inc    DWORD PTR [rax]
  453474:	(bad)  
  453475:	sti    
  453476:	inc    DWORD PTR [rax]
  453478:	sub    DWORD PTR [rcx],ebp
  45347a:	sub    DWORD PTR [rcx],ebp
  45347c:	sub    DWORD PTR [rcx],ebp
  45347e:	sub    DWORD PTR [rcx],ebp
  453480:	sub    DWORD PTR [rcx],ebp
  453482:	sub    DWORD PTR [rcx],ebp
  453484:	sub    DWORD PTR [rcx],ebp
  453486:	sub    DWORD PTR [rcx],ebp
  453488:	sub    DWORD PTR [rcx],ebp
  45348a:	sub    DWORD PTR [rcx],ebp
  45348c:	sub    DWORD PTR [rcx],ebp
  45348e:	sub    DWORD PTR [rcx],ebp
  453490:	sub    DWORD PTR [rcx],ebp
  453492:	sub    DWORD PTR [rcx],ebp
  453494:	sub    DWORD PTR [rcx],ebp
  453496:	sub    DWORD PTR [rcx],ebp
  453498:	sub    DWORD PTR [rcx],ebp
  45349a:	sub    DWORD PTR [rcx],ebp
  45349c:	sub    DWORD PTR [rcx],ebp
  45349e:	sub    DWORD PTR [rcx],ebp
  4534a0:	sub    DWORD PTR [rcx],ebp
  4534a2:	sub    DWORD PTR [rcx],ebp
  4534a4:	sub    DWORD PTR [rcx],ebp
  4534a6:	sub    DWORD PTR [rcx],ebp
  4534a8:	sub    DWORD PTR [rcx],ebp
  4534aa:	sub    DWORD PTR [rcx],ebp
  4534ac:	sub    DWORD PTR [rcx],ebp
  4534ae:	sub    DWORD PTR [rcx],ebp
  4534b0:	sub    DWORD PTR [rcx],ebp
  4534b2:	sub    DWORD PTR [rcx],ebp
  4534b4:	sub    DWORD PTR [rcx],ebp
  4534b6:	sub    DWORD PTR [rcx],ebp
  4534b8:	sub    DWORD PTR [rcx],ebp
  4534ba:	sub    DWORD PTR [rcx],ebp
  4534bc:	sub    DWORD PTR [rcx],ebp
  4534be:	sub    DWORD PTR [rcx],ebp
  4534c0:	sub    DWORD PTR [rcx],ebp
  4534c2:	sub    DWORD PTR [rcx],ebp
  4534c4:	sub    DWORD PTR [rcx],ebp
  4534c6:	sub    DWORD PTR [rcx],ebp
  4534c8:	sub    DWORD PTR [rcx],ebp
  4534ca:	sub    DWORD PTR [rcx],ebp
  4534cc:	sub    DWORD PTR [rcx],ebp
  4534ce:	sub    DWORD PTR [rcx],ebp
  4534d0:	sub    DWORD PTR [rcx],ebp
  4534d2:	sub    DWORD PTR [rcx],ebp
  4534d4:	sub    DWORD PTR [rcx],ebp
  4534d6:	sub    DWORD PTR [rcx],ebp
  4534d8:	sub    DWORD PTR [rcx],ebp
  4534da:	sub    DWORD PTR [rcx],ebp
  4534dc:	sub    DWORD PTR [rbx+0x38],eax
  4534df:	(bad)  
  4534e0:	(bad)  
  4534e1:	(bad)  
  4534e2:	and    al,0x24
  4534e4:	and    esp,DWORD PTR [rax]
  4534e6:	and    BYTE PTR [rax],ah
  4534e8:	sbb    eax,0x10101c1d
  4534ed:	(bad)  
  4534ee:	(bad)  
  4534ef:	(bad)  
  4534f0:	add    eax,0x29292905
  4534f5:	sub    DWORD PTR [rcx],ebp
  4534f7:	sub    DWORD PTR [rcx],ebp
  4534f9:	sub    DWORD PTR [rcx],ebp
  4534fb:	sub    DWORD PTR [rbx+rsi*8-0x6b],eax
  4534ff:	xchg   ebp,eax
  453500:	xchg   ecx,eax
  453501:	(bad)
  453505:	fs fs movsxd esi,DWORD PTR fs:[rbx]
  45350a:	xor    DWORD PTR [rsi],ebp
  45350c:	sbb    ebx,DWORD PTR cs:[rbx]
  45350f:	sbb    bl,BYTE PTR [rdx]
  453511:	sbb    al,BYTE PTR [rip+0x29292929]        # 0x296e5e40
  453517:	sub    DWORD PTR [rcx],ebp
  453519:	sub    DWORD PTR [rcx],ebp
  45351b:	sub    DWORD PTR [rbp-0xd],eax
  45351e:	mov    bh,0xda
  453520:	fistp  QWORD PTR [rbp+0x7e8081aa]
  453526:	jge    0x4535a5
  453528:	je     0x45359e
  45352a:	pop    rbx
  45352b:	push   rsi
  45352c:	push   rdx
  45352d:	push   rsi
  45352e:	pop    rbx
  45352f:	pop    rcx
  453530:	pop    rdx
  453531:	sbb    eax,DWORD PTR [rsi]
  453533:	sub    DWORD PTR [rcx],ebp
  453535:	sub    DWORD PTR [rcx],ebp
  453537:	sub    DWORD PTR [rcx],ebp
  453539:	sub    DWORD PTR [rcx],ebp
  45353b:	sub    DWORD PTR [rdi-0x7],eax
  45353e:	mov    eax,0xacbedfdb
  453543:	test   DWORD PTR [rcx+0x14020780],eax
  453549:	je     0x4535a4
  45354b:	push   rsi
  45354c:	push   rbp
  45354d:	push   rsi
  45354e:	pop    rbx
  45354f:	pop    rdx
  453550:	pop    rdx
  453551:	sbb    eax,DWORD PTR [rsi]
  453553:	sub    DWORD PTR [rcx],ebp
  453555:	sub    DWORD PTR [rcx],ebp
  453557:	sub    DWORD PTR [rcx],ebp
  453559:	sub    DWORD PTR [rcx],ebp
  45355b:	sub    DWORD PTR [rax-0x7],ecx
  45355e:	mov    esp,0xadd4e3dc
  453563:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  453564:	test   BYTE PTR [rcx+0x76150019],al
  45356a:	imul   edx,DWORD PTR [rsi+0x55],0x68685956
  453571:	sbb    eax,DWORD PTR [rsi]
  453573:	sub    DWORD PTR [rcx],ebp
  453575:	sub    DWORD PTR [rcx],ebp
  453577:	sub    DWORD PTR [rcx],ebp
  453579:	sub    DWORD PTR [rcx],ebp
  45357b:	sub    DWORD PTR [rax-0x6],ecx
  45357e:	mov    esi,0xb6d5e3df
  453583:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  453584:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  453585:	test   DWORD PTR [rax+rax*1],esi
  453588:	sub    edi,DWORD PTR [rax+0x69]
  45358b:	pop    rbp
  45358c:	push   rdi
  45358d:	pop    rsp
  45358e:	pop    rcx
  45358f:	push   0x29061b68
  453594:	sub    DWORD PTR [rcx],ebp
  453596:	sub    DWORD PTR [rcx],ebp
  453598:	sub    DWORD PTR [rcx],ebp
  45359a:	sub    DWORD PTR [rcx],ebp
  45359c:	rex.WB cli 
  45359e:	(bad)  
  45359f:	(bad)  
  4535a1:	fidiv  DWORD PTR [rsi+0x6b9fa7ac]
  4535a7:	add    DWORD PTR [rax+rdi*2+0x69],edx
  4535ab:	pop    rbp
  4535ac:	push   rdi
  4535ad:	pop    rsp
  4535ae:	pop    rdx
  4535af:	je     0x453625
  4535b1:	sub    eax,0x2929290a
  4535b6:	sub    DWORD PTR [rcx],ebp
  4535b8:	sub    DWORD PTR [rcx],ebp
  4535ba:	sub    DWORD PTR [rcx],ebp
  4535bc:	rex.WR sti 
  4535be:	(bad)  
  4535c0:	in     eax,0xdb
  4535c2:	mov    eax,0xb36a5ad
  4535c7:	add    BYTE PTR [rsi],dl
  4535c9:	imul   esi,DWORD PTR [rdi+0x60],0x74755e57
  4535d0:	je     0x4535ff
  4535d2:	adc    BYTE PTR [rcx],ch
  4535d4:	sub    DWORD PTR [rcx],ebp
  4535d6:	sub    DWORD PTR [rcx],ebp
  4535d8:	sub    DWORD PTR [rcx],ebp
  4535da:	sub    DWORD PTR [rcx],ebp
  4535dc:	rex.WR sti 
  4535de:	fninit 
  4535e0:	call   0xffffffffa8fbf2c1
  4535e5:	sub    al,BYTE PTR [rax]
  4535e7:	add    BYTE PTR [rdi],al
  4535e9:	pop    rax
  4535ea:	jp     0x45364c
  4535ec:	pop    rax
  4535ed:	pop    rsi
  4535ee:	jne    0x453666
  4535f0:	jbe    0x45361f
  4535f2:	adc    BYTE PTR [rcx],ch
  4535f4:	sub    DWORD PTR [rcx],ebp
  4535f6:	sub    DWORD PTR [rcx],ebp
  4535f8:	sub    DWORD PTR [rcx],ebp
  4535fa:	sub    DWORD PTR [rcx],ebp
  4535fc:	rex.WRX cld 
  4535fe:	fucom  st(4)
  453600:	call   0xffffffffa4fcf4e4
  453605:	sbb    BYTE PTR [rax],al
  453607:	add    BYTE PTR [rcx],al
  453609:	(bad)  
  45360a:	jnp    0x453679
  45360c:	pop    rax
  45360d:	pop    rdi
  45360e:	ja     0x453688
  453610:	jbe    0x45363f
  453612:	sbb    al,0x29
  453614:	sub    DWORD PTR [rcx],ebp
  453616:	sub    DWORD PTR [rcx],ebp
  453618:	sub    DWORD PTR [rcx],ebp
  45361a:	sub    DWORD PTR [rcx],ebp
  45361c:	rex.WRX cld 
  45361e:	loope  0x453605
  453620:	jmp    0xffffffffb8010b06
  453625:	mov    eax,DWORD PTR [rdx]
  453627:	add    DWORD PTR [rax+rax*4],ebp
  45362a:	jg     0x45369a
  45362c:	(bad)  
  45362d:	push   0x77
  45362f:	js     0x4536a9
  453631:	sub    eax,0x2929291d
  453636:	sub    DWORD PTR [rcx],ebp
  453638:	sub    DWORD PTR [rcx],ebp
  45363a:	sub    DWORD PTR [rcx],ebp
  45363c:	rex.WRX (bad) 
  45363e:	loop   0x453628
  453640:	icebp  
  453641:	jrcxz  0x45361d
  453643:	mov    esi,0x8c8db4bb
  453648:	add    DWORD PTR [rdx+rax*4+0x7a6d6e6f],0x79
  453650:	jns    0x453683
  453652:	sbb    eax,0x29292929
  453657:	sub    DWORD PTR [rcx],ebp
  453659:	sub    DWORD PTR [rcx],ebp
  45365b:	sub    DWORD PTR [rdi-0x2],ecx
  45365e:	in     al,0xe9
  453660:	repnz in al,0xdc
  453663:	(bad)  
  453664:	mov    esi,0xa7b6b8bc
  453669:	movabs ds:0x35797c7b6f707383,eax
  453672:	sbb    eax,0x29292929
  453677:	sub    DWORD PTR [rcx],ebp
  453679:	sub    DWORD PTR [rcx],ebp
  45367b:	sub    DWORD PTR [rax-0x1],edx
  45367e:	in     eax,0xf1
  453680:	repz call 0xffffffffbf1a1163
  453686:	mov    esp,0x9eaaacb8
  45368b:	xchg   edx,eax
  45368c:	mov    ?,WORD PTR [rdx+0x7f]
  45368f:	jle    0x45370e
  453691:	mov    BYTE PTR [rdi],bl
  453693:	sub    DWORD PTR [rcx],ebp
  453695:	sub    DWORD PTR [rcx],ebp
  453697:	sub    DWORD PTR [rcx],ebp
  453699:	sub    DWORD PTR [rcx],ebp
  45369b:	sub    DWORD PTR [rcx-0x1],edx
  45369e:	(bad)  
  45369f:	(bad)  
  4536a0:	(bad)  
  4536a1:	cld    
  4536a2:	sti    
  4536a3:	sti    
  4536a4:	cli    
  4536a5:	cli    
  4536a6:	stc    
  4536a7:	stc    
  4536a8:	repz repz repnz out dx,eax
  4536ac:	in     al,dx
  4536ad:	in     al,dx
  4536ae:	(bad)  
  4536af:	(bad)  
  4536b0:	(bad)  
  4536b1:	mov    cl,0x20
  4536b3:	sub    DWORD PTR [rcx],ebp
  4536b5:	sub    DWORD PTR [rcx],ebp
  4536b7:	sub    DWORD PTR [rcx],ebp
  4536b9:	sub    DWORD PTR [rcx],ebp
  4536bb:	sub    DWORD PTR [rcx],ebp
  4536bd:	push   rax
  4536be:	rex.WRXB
  4536bf:	rex.WRX xchg QWORD PTR [rbx+0x4c],r9
  4536c3:	rex.WB
  4536c4:	rex.W
  4536c5:	rex.RXB
  4536c6:	rex.RB
  4536c7:	rex.R
  4536c8:	rex.XB cmp BYTE PTR [r15],sil
  4536cb:	(bad)  
  4536cc:	(bad)  
  4536cd:	and    al,0x37
  4536cf:	and    al,0x20
  4536d1:	and    BYTE PTR [rcx],ch
  4536d3:	sub    DWORD PTR [rcx],ebp
  4536d5:	sub    DWORD PTR [rcx],ebp
  4536d7:	sub    DWORD PTR [rcx],ebp
  4536d9:	sub    DWORD PTR [rcx],ebp
  4536db:	sub    DWORD PTR [rcx],ebp
  4536dd:	sub    DWORD PTR [rsi-0x4a],eax
  4536e0:	jnp    0x453717
  4536e2:	cmp    DWORD PTR [rcx],ebp
  4536e4:	sub    DWORD PTR [rcx],ebp
  4536e6:	sub    DWORD PTR [rcx],ebp
  4536e8:	sub    DWORD PTR [rcx],ebp
  4536ea:	sub    DWORD PTR [rcx],ebp
  4536ec:	and    ch,BYTE PTR [rsi+riz*4+0x53]
  4536f0:	(bad)  
  4536f1:	sub    DWORD PTR [rcx],ebp
  4536f3:	sub    DWORD PTR [rcx],ebp
  4536f5:	sub    DWORD PTR [rcx],ebp
  4536f7:	sub    DWORD PTR [rcx],ebp
  4536f9:	sub    DWORD PTR [rcx],ebp
  4536fb:	sub    DWORD PTR [rcx],ebp
  4536fd:	sub    DWORD PTR [rbx-0x44],eax
  453700:	jg     0x453767
  453702:	cmp    DWORD PTR [rcx],ebp
  453704:	sub    DWORD PTR [rcx],ebp
  453706:	sub    DWORD PTR [rcx],ebp
  453708:	sub    DWORD PTR [rcx],ebp
  45370a:	sub    DWORD PTR [rcx],ebp
  45370c:	and    eax,0x653836c
  453711:	sub    DWORD PTR [rcx],ebp
  453713:	sub    DWORD PTR [rcx],ebp
  453715:	sub    DWORD PTR [rcx],ebp
  453717:	sub    DWORD PTR [rcx],ebp
  453719:	sub    DWORD PTR [rcx],ebp
  45371b:	sub    DWORD PTR [rcx],ebp
  45371d:	sub    DWORD PTR [rbx+rbx*8-0x7e],eax
  453721:	cmp    DWORD PTR gs:[rcx],ebp
  453724:	sub    DWORD PTR [rcx],ebp
  453726:	sub    DWORD PTR [rcx],ebp
  453728:	sub    DWORD PTR [rcx],ebp
  45372a:	sub    DWORD PTR [rcx],ebp
  45372c:	and    eax,0x1e539f6c
  453731:	sub    DWORD PTR [rcx],ebp
  453733:	sub    DWORD PTR [rcx],ebp
  453735:	sub    DWORD PTR [rcx],ebp
  453737:	sub    DWORD PTR [rcx],ebp
  453739:	sub    DWORD PTR [rcx],ebp
  45373b:	sub    DWORD PTR [rcx],ebp
  45373d:	sub    DWORD PTR [rax-0x1b],ecx
  453740:	test   eax,0x2929396c
  453745:	sub    DWORD PTR [rcx],ebp
  453747:	sub    DWORD PTR [rcx],ebp
  453749:	sub    DWORD PTR [rcx],ebp
  45374b:	sub    DWORD PTR [rcx],edi
  45374d:	ins    BYTE PTR es:[rdi],dx
  45374e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  45374f:	push   rbx
  453750:	and    eax,0x29292929
  453755:	sub    DWORD PTR [rcx],ebp
  453757:	sub    DWORD PTR [rcx],ebp
  453759:	sub    DWORD PTR [rcx],ebp
  45375b:	sub    DWORD PTR [rcx],ebp
  45375d:	sub    DWORD PTR [rcx-0x1b],ecx
  453760:	test   eax,0x2929398c
  453765:	sub    DWORD PTR [rcx],ebp
  453767:	sub    DWORD PTR [rcx],ebp
  453769:	sub    DWORD PTR [rcx],ebp
  45376b:	sub    DWORD PTR [rax],ebp
  45376d:	ins    BYTE PTR es:[rdi],dx
  45376e:	test   al,0x53
  453770:	cmp    ch,BYTE PTR [rcx]
  453772:	sub    DWORD PTR [rcx],ebp
  453774:	sub    DWORD PTR [rcx],ebp
  453776:	sub    DWORD PTR [rcx],ebp
  453778:	sub    DWORD PTR [rcx],ebp
  45377a:	sub    DWORD PTR [rcx],ebp
  45377c:	sub    DWORD PTR [rcx],ebp
  45377e:	rcl    r10,cl
  453781:	cmp    DWORD PTR [rax],0x29
  453784:	sub    DWORD PTR [rcx],ebp
  453786:	sub    DWORD PTR [rcx],ebp
  453788:	sub    DWORD PTR [rcx],ebp
  45378a:	sub    DWORD PTR [rcx],ebp
  45378c:	(bad)  
  45378d:	jb     0x453736
  45378f:	push   rbx
  453790:	cmp    eax,0x29292929
  453795:	sub    DWORD PTR [rcx],ebp
  453797:	sub    DWORD PTR [rcx],ebp
  453799:	sub    DWORD PTR [rcx],ebp
  45379b:	sub    DWORD PTR [rcx],ebp
  45379d:	sub    DWORD PTR [rcx],ebp
  45379f:	rex.WB loope 0x453756
  4537a2:	cdq    
  4537a3:	rex
  4537a4:	rex.XB sub DWORD PTR [r9],ebp
  4537a7:	sub    DWORD PTR [rcx],ebp
  4537a9:	sub    DWORD PTR [rax+riz*1],edi
  4537ac:	test   DWORD PTR gs:[rdi+0x3f],esi
  4537b0:	sub    DWORD PTR [rcx],ebp
  4537b2:	sub    DWORD PTR [rcx],ebp
  4537b4:	sub    DWORD PTR [rcx],ebp
  4537b6:	sub    DWORD PTR [rcx],ebp
  4537b8:	sub    DWORD PTR [rcx],ebp
  4537ba:	sub    DWORD PTR [rcx],ebp
  4537bc:	sub    DWORD PTR [rcx],ebp
  4537be:	sub    DWORD PTR [rdx-0x30],ecx
  4537c1:	out    0xd5,al
  4537c3:	fwait
  4537c4:	rex (bad) 
  4537c6:	(bad)  
  4537c7:	and    al,0x24
  4537c9:	and    esp,DWORD PTR [rax]
  4537cb:	xchg   ebx,eax
  4537cc:	lods   eax,DWORD PTR ds:[rsi]
  4537cd:	jns    0x4537ff
  4537cf:	sub    DWORD PTR [rcx],ebp
  4537d1:	sub    DWORD PTR [rcx],ebp
  4537d3:	sub    DWORD PTR [rcx],ebp
  4537d5:	sub    DWORD PTR [rcx],ebp
  4537d7:	sub    DWORD PTR [rcx],ebp
  4537d9:	sub    DWORD PTR [rcx],ebp
  4537db:	sub    DWORD PTR [rcx],ebp
  4537dd:	sub    DWORD PTR [rcx],ebp
  4537df:	sub    esi,eax
  4537e1:	int    0xf4
  4537e3:	loopne 0x4537ba
  4537e5:	mov    dl,0x98
  4537e7:	xchg   edi,eax
  4537e8:	(bad)  
  4537e9:	test   al,0xa7
  4537eb:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4537ec:	jnp    0x453820
  4537ee:	sub    DWORD PTR [rcx],ebp
  4537f0:	sub    DWORD PTR [rcx],ebp
  4537f2:	sub    DWORD PTR [rcx],ebp
  4537f4:	sub    DWORD PTR [rcx],ebp
  4537f6:	sub    DWORD PTR [rcx],ebp
  4537f8:	sub    DWORD PTR [rcx],ebp
  4537fa:	sub    DWORD PTR [rcx],ebp
  4537fc:	sub    DWORD PTR [rcx],ebp
  4537fe:	sub    DWORD PTR [rcx],ebp
  453800:	sub    DWORD PTR [rbp+0x47],ecx
  453803:	iret   
  453804:	loopne 0x4537e8
  453806:	loope  0x4537e6
  453808:	(bad)  
  453809:	mov    dh,0xa6
  45380b:	rex.RX sub DWORD PTR gs:[rcx],r13d
  45380f:	sub    DWORD PTR [rcx],ebp
  453811:	sub    DWORD PTR [rcx],ebp
  453813:	sub    DWORD PTR [rcx],ebp
  453815:	sub    DWORD PTR [rcx],ebp
  453817:	sub    DWORD PTR [rcx],ebp
  453819:	sub    DWORD PTR [rcx],ebp
  45381b:	sub    DWORD PTR [rcx],ebp
  45381d:	sub    DWORD PTR [rcx],ebp
  45381f:	sub    DWORD PTR [rcx],ebp
  453821:	sub    DWORD PTR [rcx],ebp
  453823:	rex.WRB
  453824:	cmp    rdi,QWORD PTR [rbx]
  453827:	(bad)  
  453828:	(bad)  
  453829:	cmp    edi,DWORD PTR [rbx]
  45382b:	sub    DWORD PTR [rcx],ebp
  45382d:	sub    DWORD PTR [rcx],ebp
  45382f:	sub    DWORD PTR [rcx],ebp
  453831:	sub    DWORD PTR [rcx],ebp
  453833:	sub    DWORD PTR [rcx],ebp
  453835:	sub    DWORD PTR [rcx],ebp
  453837:	sub    DWORD PTR [rcx],ebp
  453839:	sub    DWORD PTR [rcx],ebp
  45383b:	sub    DWORD PTR [rcx],ebp
  45383d:	sub    DWORD PTR [rcx],ebp
  45383f:	sub    DWORD PTR [rcx],ebp
  453841:	sub    DWORD PTR [rcx],ebp
  453843:	sub    DWORD PTR [rcx],ebp
  453845:	sub    DWORD PTR [rcx],ebp
  453847:	sub    DWORD PTR [rcx],ebp
  453849:	sub    DWORD PTR [rcx],ebp
  45384b:	sub    DWORD PTR [rcx],ebp
  45384d:	sub    DWORD PTR [rcx],ebp
  45384f:	sub    DWORD PTR [rcx],ebp
  453851:	sub    DWORD PTR [rcx],ebp
  453853:	sub    DWORD PTR [rcx],ebp
  453855:	sub    DWORD PTR [rcx],ebp
  453857:	sub    DWORD PTR [rcx],ebp
  453859:	sub    DWORD PTR [rcx],ebp
  45385b:	sub    DWORD PTR [rcx],ebp
  45385d:	sub    DWORD PTR [rcx],ebp
  45385f:	sub    DWORD PTR [rcx],ebp
  453861:	sub    DWORD PTR [rcx],ebp
  453863:	sub    DWORD PTR [rcx],ebp
  453865:	sub    DWORD PTR [rcx],ebp
  453867:	sub    DWORD PTR [rcx],ebp
  453869:	sub    DWORD PTR [rcx],ebp
  45386b:	sub    DWORD PTR [rcx],ebp
  45386d:	sub    DWORD PTR [rcx],ebp
  45386f:	sub    DWORD PTR [rcx],ebp
  453871:	sub    DWORD PTR [rcx],ebp
  453873:	sub    DWORD PTR [rcx],ebp
  453875:	sub    DWORD PTR [rcx],ebp
  453877:	sub    edi,edi
  453879:	(bad)  
  45387a:	(bad)  
  45387b:	(bad)  
  45387c:	(bad)  
  45387d:	(bad)  
  45387e:	(bad)  
  45387f:	(bad)  
  453880:	(bad)  
  453881:	(bad)  
  453882:	(bad)  
  453883:	(bad)  
  453884:	clc    
  453885:	add    BYTE PTR [rax],al
  453887:	(bad)  
  453888:	lock add BYTE PTR [rax],al
  45388b:	(bad)  
  45388c:	lock add BYTE PTR [rax],al
  45388f:	(bad)  
  453890:	lock add BYTE PTR [rax],al
  453893:	(bad)  
  453894:	lock add BYTE PTR [rax],al
  453897:	(bad)  
  453898:	lock add BYTE PTR [rax],al
  45389b:	(bad)  
  45389c:	lock add BYTE PTR [rax],al
  45389f:	(bad)  
  4538a0:	lock add BYTE PTR [rax],al
  4538a3:	(bad)  
  4538a4:	lock add BYTE PTR [rax],al
  4538a7:	(bad)  
  4538a8:	lock add BYTE PTR [rax],al
  4538ab:	(bad)  
  4538ac:	lock add BYTE PTR [rax],al
  4538af:	(bad)  
  4538b0:	lock add BYTE PTR [rax],al
  4538b3:	(bad)  
  4538b4:	lock add BYTE PTR [rax],al
  4538b7:	(bad)  
  4538b8:	lock add BYTE PTR [rax],al
  4538bb:	(bad)  
  4538bc:	lock add BYTE PTR [rax],al
  4538bf:	(bad)  
  4538c0:	clc    
  4538c1:	add    BYTE PTR [rax],al
  4538c3:	(bad)  
  4538c4:	cld    
  4538c5:	(bad)  
  4538c6:	lock jg 0x4538c5
  4538c9:	(bad)  
  4538ca:	lock jg 0x4538c9
  4538cd:	(bad)  
  4538ce:	lock jg 0x4538cd
  4538d1:	(bad)  
  4538d2:	lock jg 0x4538d1
  4538d5:	(bad)  
  4538d6:	lock jg 0x4538d5
  4538d9:	(bad)  
  4538da:	lock jg 0x4538db
  4538dd:	(bad)  
  4538de:	sar    bh,0xfe
  4538e1:	add    BYTE PTR [rcx],al
  4538e3:	(bad)  
  4538e4:	inc    DWORD PTR [rax]
  4538e6:	add    edi,edi
  4538e8:	inc    DWORD PTR [rax-0x1f0000f9]
  4538ee:	(bad)  
  4538ef:	(bad)  
  4538f0:	(bad)  
  4538f1:	(bad)  
  4538f2:	(bad)  
  4538f3:	(bad)  
  4538f4:	(bad)  
  4538f5:	(bad)  
  4538f6:	(bad)  
  4538f7:	jmp    FWORD PTR [rax]
  4538f9:	add    BYTE PTR [rax],al
  4538fb:	add    BYTE PTR [rax],dl
  4538fd:	add    BYTE PTR [rax],al
  4538ff:	add    BYTE PTR [rax],ah
  453901:	add    BYTE PTR [rax],al
  453903:	add    BYTE PTR [rcx],al
  453905:	add    BYTE PTR [rax],cl
	...
  45391f:	add    BYTE PTR [rbx],ch
  453921:	push   rsi
  453922:	pop    rsi
  453923:	add    BYTE PTR [rcx+rbx*2],ch
  453926:	(bad)  
  453927:	add    BYTE PTR [rip+0x31006a5f],ch        # 0x3145a38c
  45392d:	pop    rbx
  45392e:	(bad)  
  45392f:	add    BYTE PTR [rip+0x39006b58],bh        # 0x3945a48d
  453935:	pop    rcx
  453936:	jbe    0x453938
  453938:	cmp    ebx,DWORD PTR [rax+rdi*2+0x0]
  45393c:	sub    ah,BYTE PTR [rdx+rsi*2+0x0]
  453940:	xor    BYTE PTR [rbp+0x72],ah
  453943:	add    BYTE PTR [rax],bh
  453945:	addr32 jno 0x453948
  453948:	ds (bad) 
  45394a:	jl     0x45394c
  45394c:	xor    DWORD PTR [rsi+0x7d],ebp
  45394f:	add    BYTE PTR [rcx+0x5c],al
  453952:	outs   dx,BYTE PTR ds:[rsi]
  453953:	add    BYTE PTR [rbx+0x5f],al
  453956:	jno    0x453958
  453958:	rex.RB (bad) 
  45395a:	jb     0x45395c
  45395c:	movsxd rsi,DWORD PTR [r13+0x0]
  453960:	rex movsxd edi,DWORD PTR [rsi+0x0]
  453964:	rex.WRXB
  453965:	addr32 jns 0x453968
  453968:	rex.WRX push 0x6b510079
  45396e:	jl     0x453970
  453970:	adc    ebp,DWORD PTR [rbp-0x73]
  453973:	add    BYTE PTR [rdi],bl
  453975:	jne    0x453908
  453977:	add    BYTE PTR [rdi],bl
  453979:	jge    0x453916
  45397b:	add    BYTE PTR [rip+0x3800806f],dh        # 0x3845b9f0
  453981:	ja     0x453909
  453983:	add    BYTE PTR [rdx],ch
  453985:	jl     0x45391b
  453987:	add    BYTE PTR [rbx],ch
  453989:	jns    0x453931
  45398b:	add    BYTE PTR [rdi*2+0x664300ab],ch
  453992:	add    DWORD PTR [rax],0x856a46
  453998:	rex.WB push 0x6e4b0083
  45399e:	mov    BYTE PTR [rax],al
  4539a0:	rex.WR jae 0x45392f
  4539a3:	add    BYTE PTR [rbx+0x73],bl
  4539a6:	add    DWORD PTR [rax],0x50
  4539a9:	je     0x453938
  4539ab:	add    BYTE PTR [rax+0x77],dl
  4539ae:	nop
  4539af:	add    BYTE PTR [rbx+rdi*2-0x6c],dl
  4539b3:	add    BYTE PTR [rax+rdi*2-0x70],bl
  4539b7:	add    BYTE PTR [rbx+0x7b],ah
  4539ba:	mov    WORD PTR [rax],es
  4539bc:	imul   edi,DWORD PTR [rsi-0x74],0x967f6300
  4539c3:	add    BYTE PTR [rax],al
  4539c5:	add    BYTE PTR [rax],al
  4539c7:	add    BYTE PTR [rcx+rcx*4],bh
  4539ca:	sahf   
  4539cb:	add    BYTE PTR [rsi+rax*4],dl
  4539ce:	scas   al,BYTE PTR es:[rdi]
  4539cf:	add    BYTE PTR [rip+0x3200a488],ch        # 0x3245de5d
  4539d5:	sub    DWORD PTR [rax+rax*1+0xb1822f],0x22
  4539dd:	(bad)  
  4539de:	mov    ch,0x0
  4539e0:	sub    DWORD PTR [rbx-0x79ccff47],ecx
  4539e6:	mov    dl,0x0
  4539e8:	xor    al,0x8f
  4539ea:	mov    bh,0x0
  4539ec:	xor    ecx,DWORD PTR [rbx-0x6cd1ff45]
  4539f2:	mov    ah,0x0
  4539f4:	cmp    al,0x93
  4539f6:	mov    ebx,0xbc9f3f00
  4539fb:	add    BYTE PTR [rcx-0x7e],bl
  4539fe:	(bad)  
  4539ff:	add    BYTE PTR [rsi-0x78],bl
  453a02:	lahf   
  453a03:	add    BYTE PTR [rbp-0x7f],ah
  453a06:	xchg   edi,eax
  453a07:	add    BYTE PTR [rax-0x7e],ch
  453a0a:	cwde   
  453a0b:	add    BYTE PTR [rcx+rcx*4-0x61],ah
  453a0f:	add    BYTE PTR [rdx-0x76],ch
  453a12:	lahf   
  453a13:	add    BYTE PTR [rdx-0x76],dh
  453a16:	lahf   
  453a17:	add    BYTE PTR [rdx-0x70],bh
  453a1a:	lahf   
  453a1b:	add    BYTE PTR [rbp-0x7c],al
  453a1e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  453a1f:	add    BYTE PTR [rdx-0x77],bl
  453a22:	movabs ds:0xb49c5600a9914900,al
  453a2b:	add    BYTE PTR [rax-0x77],ah
  453a2e:	movabs al,ds:0xa6906400a48d6200
  453a37:	add    BYTE PTR [rbx-0x6f],ch
  453a3a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  453a3b:	add    BYTE PTR [rsi-0x6d],ah
  453a3e:	test   al,0x0
  453a40:	imul   edx,DWORD PTR [rbp-0x6793ff56],0xffffffad
  453a47:	add    BYTE PTR [rax-0x65],bh
  453a4a:	scas   al,BYTE PTR es:[rdi]
  453a4b:	add    BYTE PTR [rbx-0x62],ah
  453a4e:	mov    bh,0x0
  453a50:	ins    DWORD PTR es:[rdi],dx
  453a51:	pushf  
  453a52:	mov    cl,0x0
  453a54:	jge    0x4539f4
  453a56:	mov    cl,0x0
  453a58:	jb     0x4539fb
  453a5a:	mov    ch,0x0
  453a5c:	jne    0x453a04
  453a5e:	mov    ecx,0xbba87700
  453a63:	add    BYTE PTR [rax-0x57],bh
  453a66:	mov    esp,0xc18e1900
  453a6b:	add    BYTE PTR [rbx],dl
  453a6d:	nop
  453a6e:	mov    BYTE PTR [rax],0x11
  453a71:	xchg   esp,eax
  453a72:	(bad)  
  453a73:	add    BYTE PTR [rcx],bl
  453a75:	nop
  453a76:	(bad)  
  453a77:	add    BYTE PTR [rbx],dl
  453a79:	xchg   ebp,eax
  453a7a:	retf   
  453a7b:	add    BYTE PTR [rdx],bl
  453a7d:	xchg   esp,eax
  453a7e:	enter  0x1c00,0x9a
  453a82:	retf   
  453a83:	add    BYTE PTR [rsi],al
  453a85:	popf   
  453a86:	fild   DWORD PTR [rax]
  453a88:	add    al,0x9e
  453a8a:	fadd   QWORD PTR [rax]
  453a8c:	or     BYTE PTR [rax+rbx*8-0x2f67ef00],bl
  453a93:	add    BYTE PTR [rip+0x1300d099],dl        # 0x13460b32
  453a99:	fwait
  453a9a:	(bad)  
  453a9b:	add    BYTE PTR [rsi],dl
  453a9d:	sahf   
  453a9e:	(bad)  
  453a9f:	add    BYTE PTR [rcx],bl
  453aa1:	popf   
  453aa2:	rol    DWORD PTR [rax],cl
  453aa4:	(bad)  
  453aa5:	mov    es,ecx
  453aa7:	add    BYTE PTR [rdi],ah
  453aa9:	sahf   
  453aaa:	(bad)  
  453aab:	add    BYTE PTR [rsi],dh
  453aad:	nop
  453aae:	rol    BYTE PTR [rax],0x3b
  453ab1:	xchg   ebp,eax
  453ab2:	(bad)
  453ab5:	popf   
  453ab6:	(bad)  
  453ab7:	add    BYTE PTR [rdi],bh
  453ab9:	(bad)  
  453aba:	leave  
  453abb:	add    BYTE PTR [rax],dh
  453abd:	fwait
  453abe:	rol    DWORD PTR [rax],cl
  453ac0:	add    esp,DWORD PTR [rax-0x5df5ff21]
  453ac6:	fld    QWORD PTR [rax]
  453ac8:	sbb    esp,DWORD PTR [rcx-0x59c9ff29]
  453ace:	retf   
  453acf:	add    BYTE PTR [rsi],bh
  453ad1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  453ad2:	int3   
  453ad3:	add    BYTE PTR [rcx],ah
  453ad5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  453ad6:	(bad)  
  453ad7:	add    BYTE PTR [rbx],ch
  453ad9:	movabs ds:0xa23700d8a92e00d3,eax
  453ae2:	rol    BYTE PTR [rax],cl
  453ae4:	(bad)  
  453ae5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  453ae6:	fild   WORD PTR [rax]
  453ae8:	ss scas al,BYTE PTR es:[rdi]
  453aea:	fild   DWORD PTR [rax]
  453aec:	cmp    ch,BYTE PTR [rbp-0x5dfeff28]
  453af2:	jrcxz  0x453af4
  453af4:	(bad)  
  453af5:	movabs ds:0xa60b00e6a50100e0,al
  453afe:	loop   0x453b00
  453b00:	add    esp,DWORD PTR [rdi-0x53f4ff18]
  453b06:	(bad)  
  453b07:	add    BYTE PTR [rbx],dl
  453b09:	test   eax,0xae1c00e3
  453b0e:	in     eax,0x0
  453b10:	adc    ebp,DWORD PTR [rdi-0x4deaff15]
  453b16:	in     al,dx
  453b17:	add    BYTE PTR [rip+0x2600ecb5],bl        # 0x264627d2
  453b1d:	mov    dl,0xe5
  453b1f:	add    BYTE PTR [rsi],ah
  453b21:	mov    eax,0xbc2e00ed
  453b26:	out    dx,al
  453b27:	add    BYTE PTR [rax],dh
  453b29:	mov    dh,0xe7
  453b2b:	add    BYTE PTR [rdx+rdi*4],bh
  453b2e:	out    0x0,al
  453b30:	xor    eax,0x3800eebe
  453b35:	mov    edi,0xb73f00ed
  453b3a:	repnz add BYTE PTR [rsi-0x60],cl
  453b3e:	ret    0x4500
  453b41:	movabs al,ds:0xa35000cba24900cd
  453b4a:	(bad)
  453b4d:	test   eax,0xae5200c1
  453b52:	int3   
  453b53:	add    BYTE PTR [rcx+rsi*4-0x37],dl
  453b57:	add    BYTE PTR [rax-0x57],al
  453b5a:	rol    DWORD PTR [rax],1
  453b5c:	rex.WR stos QWORD PTR es:[rdi],rax
  453b5e:	(bad)  
  453b5f:	add    BYTE PTR [rbx-0x59],al
  453b62:	fadd   DWORD PTR [rax]
  453b64:	rex.WRXB lods rax,QWORD PTR ds:[rsi]
  453b66:	fadd   DWORD PTR [rax]
  453b68:	rex.XB mov r9b,0xd9
  453b6b:	add    BYTE PTR [rdx-0x47],cl
  453b6e:	fiadd  WORD PTR [rax]
  453b70:	pop    rsi
  453b71:	mov    cl,0xd2
  453b73:	add    BYTE PTR [rdx-0x50],dl
  453b76:	fild   DWORD PTR [rax]
  453b78:	vpshrdq xmm6,xmm22,XMMWORD PTR [rdx-0x4586ff39],0xcd
  453b83:	add    BYTE PTR [rbp-0x4a],ah
  453b86:	rol    BYTE PTR [rax],cl
  453b88:	imul   edi,DWORD PTR [rcx-0x4089ff2f],0xae4200d8
  453b92:	loope  0x453b94
  453b94:	rex.WRX mov sil,0xe5
  453b97:	add    BYTE PTR [rsi-0x41],al
  453b9a:	out    0x0,eax
  453b9c:	mov    r15d,0xbd5900e9
  453ba2:	jmp    0xfffffffff60182a7
  453ba7:	add    BYTE PTR [rdx-0x43],cl
  453baa:	cmc    
  453bab:	add    BYTE PTR [rdi],bh
  453bad:	ret    0xee
  453bb0:	pop    rcx
  453bb1:	rcr    ch,0x0
  453bb4:	rex.WRX ret 
  453bb6:	out    0x0,eax
  453bb8:	rex.X shr ebx,0x0
  453bbc:	rex.WB (bad) 
  453bbe:	out    dx,al
  453bbf:	add    BYTE PTR [rsi+rax*8-0x16],dl
  453bc3:	add    BYTE PTR [rcx-0x36],bl
  453bc6:	out    dx,eax
  453bc7:	add    BYTE PTR [rbx-0x39],cl
  453bca:	lock add BYTE PTR [rbx-0x3d],dl
  453bce:	test   BYTE PTR [rax],0x51
  453bd1:	retf   0xf1
  453bd4:	pop    rcx
  453bd5:	(bad)  
  453bd6:	lock add BYTE PTR [rsi-0x3a],dl
  453bda:	cli    
  453bdb:	add    BYTE PTR [rbp-0x35],bl
  453bde:	sti    
  453bdf:	add    BYTE PTR [rsp+rax*8-0x13],ah
  453be3:	add    BYTE PTR [rax-0x3d],bh
  453be6:	in     al,0x0
  453be8:	jne    0x453bb6
  453bea:	in     eax,0x0
  453bec:	jle    0x453bb9
  453bee:	jmp    0xffffffffee15a1f3
  453bf3:	add    BYTE PTR [rcx-0x33],ah
  453bf6:	cli    
  453bf7:	add    BYTE PTR [rdx-0x2f],ah
  453bfa:	icebp  
  453bfb:	add    BYTE PTR [rcx-0x2c],ch
  453bfe:	repnz add BYTE PTR [rbp-0x2a],ch
  453c02:	repnz add BYTE PTR [rdi-0x30],ah
  453c06:	std    
  453c07:	add    BYTE PTR [rcx-0x2e],ch
  453c0a:	inc    BYTE PTR [rax]
  453c0c:	jno    0x453be5
  453c0e:	repnz add BYTE PTR [rbp-0x27],dh
  453c12:	repz add BYTE PTR [rbx-0x25],bh
  453c16:	hlt    
  453c17:	add    BYTE PTR [rsp+rbx*8-0xc],bh
  453c1b:	add    BYTE PTR [rdx-0x29],dh
  453c1e:	inc    BYTE PTR [rax]
  453c20:	je     0x453bfa
  453c22:	inc    DWORD PTR [rax]
  453c24:	jns    0x453bff
  453c26:	inc    BYTE PTR [rax]
  453c28:	test   DWORD PTR [rax-0x667bff5b],ebx
  453c2e:	test   al,0x0
  453c30:	mov    DWORD PTR [rbp-0x5f75ff55],ebx
  453c36:	scas   eax,DWORD PTR es:[rdi]
  453c37:	add    BYTE PTR [rbx-0x72ff485a],al
  453c3d:	movabs eax,ds:0xa99800b3a59200b1
  453c46:	mov    ch,0x0
  453c48:	xchg   ebp,eax
  453c49:	test   eax,0xad9c00ba
  453c4e:	mov    eax,0xbdb2a300
  453c53:	add    BYTE PTR [rdi-0x56ff3646],cl
  453c59:	mov    bh,0xc0
  453c5b:	add    BYTE PTR [rbp+rax*8-0x376cff2d],cl
  453c62:	(bad)  
  453c63:	add    BYTE PTR [rax+rcx*8-0x257eff1c],al
  453c6a:	out    dx,eax
  453c6b:	add    BYTE PTR [rcx-0x7bff1929],bl
  453c71:	fdivrp st(5),st
  453c73:	add    BYTE PTR [rbx-0x74ff0c24],cl
  453c79:	xlat   BYTE PTR ds:[rbx]
  453c7a:	inc    DWORD PTR [rax]
  453c7c:	stos   BYTE PTR es:[rdi],al
  453c7d:	shl    ah,cl
  453c7f:	add    BYTE PTR [rbx-0x47ff1229],ah
  453c85:	(bad)  
  453c86:	loop   0x453c88
  453c88:	mov    esp,ecx
  453c8a:	test   BYTE PTR [rax],0x91
  453c8d:	loop   0x453c86
  453c8f:	add    BYTE PTR [rbp-0x66ff081c],dl
  453c95:	out    0xf7,eax
  453c97:	add    BYTE PTR [rcx+rbp*8-0x1962ff0a],bl
  453c9e:	stc    
  453c9f:	add    BYTE PTR [rcx-0x5dff0d1d],ah
  453ca5:	call   0xffffffffecea3da1
  453caa:	test   DWORD PTR [rax],0xfae9a5
  453cb0:	stos   BYTE PTR es:[rdi],al
  453cb1:	in     eax,dx
  453cb2:	stc    
  453cb3:	add    BYTE PTR [rbp-0x4cff0613],ch
  453cb9:	in     al,dx
  453cba:	cmc    
  453cbb:	add    BYTE PTR [rcx-0x4fff001a],dh
  453cc1:	out    dx,al
  453cc2:	cli    
  453cc3:	add    BYTE PTR [rbp-0x4eff0411],dh
  453cc9:	jmp    0xffffffffe8fb3dcd
  453cce:	inc    DWORD PTR [rax]
  453cd0:	mov    ch,0xec
  453cd2:	inc    DWORD PTR [rax]
  453cd4:	mov    ecx,0xbd00feeb
  453cd9:	(bad)  
  453cda:	inc    DWORD PTR [rax]
  453cdc:	mov    eax,0xbd00feef
  453ce1:	in     eax,dx
  453ce2:	inc    DWORD PTR [rax]
  453ce4:	mov    bh,0xf2
  453ce6:	sti    
  453ce7:	add    BYTE PTR [rdx-0x42ff0110],bh
  453ced:	icebp  
  453cee:	inc    BYTE PTR [rax]
  453cf0:	leave  
  453cf1:	out    dx,al
  453cf2:	cmc    
  453cf3:	add    cl,al
  453cf5:	in     eax,dx
  453cf6:	inc    DWORD PTR [rax]
  453cf8:	leave  
  453cf9:	out    dx,eax
  453cfa:	inc    BYTE PTR [rax]
  453cfc:	(bad)  
  453cfd:	jmp    0x453cf4
  453cff:	add    cl,bl
  453d01:	in     eax,dx
  453d02:	test   BYTE PTR [rax],0xc1
  453d05:	repnz inc DWORD PTR [rax]
  453d08:	(bad)  
  453d09:	cmc    
  453d0a:	inc    DWORD PTR [rax]
  453d0c:	retf   0xfef5
  453d0f:	add    dh,cl
  453d11:	clc    
  453d12:	inc    DWORD PTR [rax]
  453d14:	(bad)  
  453d15:	repnz std 
  453d17:	add    cl,dl
  453d19:	cli    
  453d1a:	inc    DWORD PTR [rax]
  453d1c:	(bad)  
  453d1d:	sti    
  453d1e:	inc    DWORD PTR [rax]
  453d20:	sub    DWORD PTR [rcx],ebp
  453d22:	sub    DWORD PTR [rcx],ebp
  453d24:	sub    DWORD PTR [rcx],ebp
  453d26:	sub    DWORD PTR [rcx],ebp
  453d28:	sub    DWORD PTR [rcx],ebp
  453d2a:	sub    DWORD PTR [rcx],ebp
  453d2c:	sub    DWORD PTR [rcx],ebp
  453d2e:	sub    DWORD PTR [rcx],ebp
  453d30:	sub    DWORD PTR [rcx],ebp
  453d32:	sub    DWORD PTR [rbx],edx
  453d34:	adc    edx,DWORD PTR [rbx]
  453d36:	adc    edx,DWORD PTR [rdx]
  453d38:	femms  
  453d3a:	or     al,0x4
  453d3c:	sub    DWORD PTR [rcx],ebp
  453d3e:	sub    DWORD PTR [rcx],ebp
  453d40:	sub    DWORD PTR [rcx],ebp
  453d42:	ret    
  453d43:	(bad)  
  453d44:	addr32 xchg ebp,eax
  453d46:	xchg   esp,eax
  453d47:	mov    cl,BYTE PTR [rcx+0x4617090]
  453d4d:	sub    DWORD PTR [rcx],ebp
  453d4f:	sub    DWORD PTR [rcx],ebp
  453d51:	sub    esp,eax
  453d53:	out    0x86,eax
  453d55:	movabs eax,ds:0x290471a2ae410342
  453d5e:	sub    DWORD PTR [rcx],ebp
  453d60:	sub    DWORD PTR [rcx],ebp
  453d62:	(bad)  
  453d63:	jmp    0x453d10
  453d65:	movabs ds:0x290c9cabb5b003a0,al
  453d6e:	sub    DWORD PTR [rcx],ebp
  453d70:	sub    DWORD PTR [rcx],ebp
  453d72:	enter  0xaff0,0xaf
  453d76:	or     BYTE PTR [rax],al
  453d78:	or     DWORD PTR [rdx+0x290e9db5],edi
  453d7e:	sub    DWORD PTR [rcx],ebp
  453d80:	sub    DWORD PTR [rcx],ebp
  453d82:	retf   0xbaf9
  453d85:	mov    ecx,0xc096178f
  453d8a:	mov    edx,0x29290fa0
  453d8f:	sub    DWORD PTR [rcx],ebp
  453d91:	sub    edx,ecx
  453d93:	cmc    
  453d94:	cmc    
  453d95:	cmc    
  453d96:	out    dx,al
  453d97:	out    dx,al
  453d98:	jmp    0x453d88
  453d9a:	cmc    
  453d9b:	xlat   BYTE PTR ds:[rbx]
  453d9c:	sub    DWORD PTR es:[rcx],ebp
  453d9f:	sub    DWORD PTR [rcx],ebp
  453da1:	sub    DWORD PTR [rcx],ebp
  453da3:	retf   0xcaca
  453da6:	enter  0xc5c7,0xc4
  453daa:	ret    
  453dab:	ret    0x2929
  453dae:	sub    DWORD PTR [rcx],ebp
  453db0:	sub    DWORD PTR [rcx],ebp
  453db2:	sub    eax,ecx
  453db4:	in     eax,dx
  453db5:	(bad)  
  453db6:	sub    DWORD PTR [rcx],ebp
  453db8:	sub    edx,eax
  453dba:	mov    edi,0x2929290d
  453dbf:	sub    DWORD PTR [rcx],ebp
  453dc1:	sub    DWORD PTR [rcx],ebp
  453dc3:	retf   
  453dc4:	sti    
  453dc5:	and    DWORD PTR [rcx],ebp
  453dc7:	sub    DWORD PTR [rcx],ebp
  453dc9:	ret    0x11c1
  453dcc:	sub    DWORD PTR [rcx],ebp
  453dce:	sub    DWORD PTR [rcx],ebp
  453dd0:	sub    DWORD PTR [rcx],ebp
  453dd2:	sub    esp,ecx
  453dd4:	neg    ecx
  453dd6:	(bad)  
  453dd7:	and    DWORD PTR [rcx],esp
  453dd9:	shl    DWORD PTR [rbx+0x29292921],1
  453ddf:	sub    DWORD PTR [rcx],ebp
  453de1:	sub    DWORD PTR [rcx],ebp
  453de3:	sub    esi,ecx
  453de5:	clc    
  453de6:	std    
  453de7:	imul   ch
  453de9:	fdivr  DWORD PTR [rsi]
  453deb:	sub    DWORD PTR [rcx],ebp
  453ded:	sub    DWORD PTR [rcx],ebp
  453def:	sub    DWORD PTR [rcx],ebp
  453df1:	sub    DWORD PTR [rcx],ebp
  453df3:	sub    DWORD PTR [rcx],ebp
  453df5:	leave  
  453df6:	int3   
  453df7:	retf   
  453df8:	enter  0x29c4,0x29
  453dfc:	sub    DWORD PTR [rcx],ebp
  453dfe:	sub    DWORD PTR [rcx],ebp
  453e00:	sub    DWORD PTR [rcx],ebp
  453e02:	sub    DWORD PTR [rcx],ebp
  453e04:	sub    DWORD PTR [rcx],ebp
  453e06:	sub    DWORD PTR [rcx],ebp
  453e08:	sub    DWORD PTR [rcx],ebp
  453e0a:	sub    DWORD PTR [rcx],ebp
  453e0c:	sub    DWORD PTR [rcx],ebp
  453e0e:	sub    DWORD PTR [rcx],ebp
  453e10:	sub    DWORD PTR [rcx],ebp
  453e12:	sub    DWORD PTR [rcx],ebp
  453e14:	sub    DWORD PTR [rcx],ebp
  453e16:	sub    DWORD PTR [rcx],ebp
  453e18:	sub    DWORD PTR [rcx],ebp
  453e1a:	sub    DWORD PTR [rcx],ebp
  453e1c:	sub    DWORD PTR [rcx],ebp
  453e1e:	sub    DWORD PTR [rcx],ebp
  453e20:	(bad)  
  453e21:	jmp    FWORD PTR [rcx]
  453e23:	sub    eax,esp
  453e25:	movsx  ebx,bh
  453e28:	rol    BYTE PTR [rdi],0xb6
  453e2b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  453e2c:	rol    BYTE PTR [rdi],0x34
  453e2f:	add    al,al
  453e31:	(bad)  
  453e32:	imul   ebx,DWORD PTR [rbp-0x40],0xc0685907
  453e39:	(bad)  
  453e3a:	(bad)  
  453e3b:	sub    eax,eax
  453e3d:	(bad)  
  453e3e:	sub    DWORD PTR [rcx],ebp
  453e40:	loopne 0x453e51
  453e42:	sub    DWORD PTR [rcx],ebp
  453e44:	jrcxz  0x453dd5
  453e46:	(bad)  
  453e47:	(bad)  
  453e49:	(bad)  
  453e4a:	mov    dh,0xac
  453e4c:	loopne 0x453e5d
  453e4e:	imul   eax,DWORD PTR [rcx],0xfffffff0
  453e51:	(bad)  
  453e52:	imul   ebx,DWORD PTR [rbp-0x8],0xff745a3f
  453e59:	dec    DWORD PTR [rdx]
  453e5b:	sub    edi,edi
  453e5d:	jmp    FWORD PTR [rcx]
  453e5f:	sub    DWORD PTR [rbx],ecx
  453e61:	add    BYTE PTR [rax],al
  453e63:	add    BYTE PTR [rax],al
  453e65:	add    BYTE PTR [rax],al
  453e67:	add    BYTE PTR [rax+rax*1-0x35320000],dh
  453e6e:	out    dx,eax
  453e6f:	mov    esi,0x1
  453e74:	xchg   ecx,eax
  453e75:	add    BYTE PTR [rax],al
  453e77:	add    BYTE PTR [rbx+rdx*2+0x79],ch
  453e7b:	jae    0x453ef1
  453e7d:	gs ins DWORD PTR es:[rdi],dx
  453e7f:	cs push rdx
  453e81:	gs jae 0x453ef3
  453e84:	jne    0x453ef8
  453e86:	movsxd esp,DWORD PTR [rbp+0x73]
  453e89:	cs push rdx
  453e8b:	gs jae 0x453efd
  453e8e:	jne    0x453f02
  453e90:	movsxd esp,DWORD PTR [rbp+0x52]
  453e93:	gs (bad) 
  453e95:	fs gs jb 0x453ec5
  453e99:	and    BYTE PTR [rbp+0x73],ch
  453e9c:	movsxd ebp,DWORD PTR [rdi+0x72]
  453e9f:	ins    BYTE PTR es:[rdi],dx
  453ea0:	imul   esp,DWORD PTR [rdx+0x2c],0x72655620
  453ea7:	jae    0x453f12
  453ea9:	outs   dx,DWORD PTR ds:[rsi]
  453eaa:	outs   dx,BYTE PTR ds:[rsi]
  453eab:	cmp    eax,0x2e302e32
  453eb0:	xor    BYTE PTR [rsi],ch
  453eb2:	xor    BYTE PTR [rax+riz*1],ch
  453eb5:	rex.XB jne 0x453f24
  453eb8:	je     0x453f2f
  453eba:	jb     0x453f21
  453ebc:	cmp    eax,0x7475656e
  453ec1:	jb     0x453f24
  453ec3:	ins    BYTE PTR es:[rdi],dx
  453ec4:	sub    al,0x20
  453ec6:	push   rax
  453ec7:	jne    0x453f2b
  453ec9:	ins    BYTE PTR es:[rdi],dx
  453eca:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  453ed1:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  453ed5:	(bad)  
  453ed6:	(bad)  
  453ed7:	(bad)  
  453ed8:	(bad)  
  453ed9:	xor    eax,0x31363563
  453ede:	cmp    DWORD PTR [rbx],esi
  453ee0:	xor    al,0x65
  453ee2:	xor    BYTE PTR [rax],bh
  453ee4:	cmp    DWORD PTR [rbx],esp
  453ee6:	push   rbx
  453ee7:	jns    0x453f5c
  453ee9:	je     0x453f50
  453eeb:	ins    DWORD PTR es:[rdi],dx
  453eec:	cs push rdx
  453eee:	gs jae 0x453f60
  453ef1:	jne    0x453f65
  453ef3:	movsxd esp,DWORD PTR [rbp+0x73]
  453ef6:	cs push rdx
  453ef8:	jne    0x453f68
  453efa:	je     0x453f65
  453efc:	ins    DWORD PTR es:[rdi],dx
  453efd:	gs push rdx
  453eff:	gs jae 0x453f71
  453f02:	jne    0x453f76
  453f04:	movsxd esp,DWORD PTR [rbp+0x53]
  453f07:	gs je  0x453f0c
	...
  453f12:	add    BYTE PTR [rax],al
  453f14:	add    BYTE PTR [rax+0x41],dl
  453f17:	rex.R push rax
  453f19:	rex.B
  453f1a:	rex.R push rax
  453f1c:	mov    ah,0x0
  453f1e:	add    BYTE PTR [rax],al
  453f20:	fs add BYTE PTR cs:[rax],al
  453f24:	cmp    al,0x3f
  453f26:	js     0x453f95
  453f28:	ins    BYTE PTR es:[rdi],dx
  453f29:	and    BYTE PTR [rsi+0x65],dh
  453f2c:	jb     0x453fa1
  453f2e:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
  453f35:	xor    BYTE PTR [rdx],ah
  453f37:	(bad)  
  453f38:	ds or  eax,0x61503c0a
  453f3e:	addr32 gs jae 0x453f62
  453f42:	push   rdx
  453f43:	gs jae 0x453fb5
  453f46:	jne    0x453fba
  453f48:	movsxd esp,DWORD PTR [rbp+0x4d]
  453f4b:	(bad)  
  453f4c:	outs   dx,BYTE PTR ds:[rsi]
  453f4d:	(bad)  
  453f4e:	addr32 gs jb 0x453f8f
  453f52:	and    cl,BYTE PTR [rbp+0x69]
  453f55:	movsxd esi,DWORD PTR [rdx+0x6f]
  453f58:	jae    0x453fc9
  453f5a:	data16 je 0x453f8b
  453f5d:	push   rbx
  453f5e:	jno    0x453fcc
  453f60:	push   rbx
  453f61:	gs jb  0x453fda
  453f64:	gs jb  0x453f95
  453f67:	rex.XB outs dx,DWORD PTR ds:[rsi]
  453f69:	outs   dx,BYTE PTR ds:[rsi]
  453f6a:	imul   sp,WORD PTR [rdi+0x75],0x6172
  453f70:	je     0x453fdb
  453f72:	outs   dx,DWORD PTR ds:[rsi]
  453f73:	outs   dx,BYTE PTR ds:[rsi]
  453f74:	cs rex.WR (bad) 
  453f77:	outs   dx,BYTE PTR ds:[rsi]
  453f78:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x65676150
  453f80:	cs push rdx
  453f82:	gs jae 0x453ff4
  453f85:	jne    0x453ff9
  453f87:	movsxd esp,DWORD PTR [rbp+0x73]
  453f8a:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x20655f9a
  453f90:	and    BYTE PTR [rax],ah
  453f92:	and    BYTE PTR [rax],ah
  453f94:	push   rbx
  453f95:	je     0x454009
  453f97:	imul   ebp,DWORD PTR [rsi+0x67],0x6f736552
  453f9e:	jne    0x454012
  453fa0:	movsxd esp,DWORD PTR [rbp+0x4d]
  453fa3:	(bad)  
  453fa4:	outs   dx,BYTE PTR ds:[rsi]
  453fa5:	(bad)  
  453fa6:	addr32 gs jb 0x453fe7
  453faa:	and    cl,BYTE PTR [rbp+0x69]
  453fad:	movsxd esi,DWORD PTR [rdx+0x6f]
  453fb0:	jae    0x454021
  453fb2:	data16 je 0x453fe3
  453fb5:	push   rbx
  453fb6:	jno    0x454024
  453fb8:	push   rbx
  453fb9:	gs jb  0x454032
  453fbc:	gs jb  0x453fed
  453fbf:	rex.XB outs dx,DWORD PTR ds:[rsi]
  453fc1:	outs   dx,BYTE PTR ds:[rsi]
  453fc2:	imul   sp,WORD PTR [rdi+0x75],0x6172
  453fc8:	je     0x454033
  453fca:	outs   dx,DWORD PTR ds:[rsi]
  453fcb:	outs   dx,BYTE PTR ds:[rsi]
  453fcc:	cs rex.WR (bad) 
  453fcf:	outs   dx,BYTE PTR ds:[rsi]
  453fd0:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x65676150
  453fd8:	cs push rbx
  453fda:	push   rdx
  453fdb:	and    bh,BYTE PTR [rsi]
  453fdd:	or     eax,0x2020200a
  453fe2:	and    BYTE PTR [rax+rdx*2],bh
  453fe5:	(bad)  
  453fe6:	and    BYTE PTR gs:[ecx+edi*2+0x70],dl
  453fec:	gs cmp eax,0x61745322
  453ff2:	outs   dx,BYTE PTR ds:[rsi]
  453ff3:	fs (bad) 
  453ff5:	jb     0x45405b
  453ff7:	push   rax
  453ff8:	(bad)  
  453ff9:	and    bh,BYTE PTR gs:[esi]
  453ffd:	or     eax,0x2020200a
  454002:	and    BYTE PTR [rax],ah
  454004:	and    BYTE PTR [rax],ah
  454006:	and    BYTE PTR [rsp+rdx*2],bh
  454009:	imul   esi,DWORD PTR [rsp+rbp*2+0x65],0x73655220
  454011:	outs   dx,DWORD PTR ds:[rsi]
  454012:	jne    0x454086
  454014:	movsxd esp,DWORD PTR [rbp+0x49]
  454017:	fs cmp eax,0x616c5022
  45401d:	outs   dx,BYTE PTR ds:[rsi]
  45401e:	outs   dx,BYTE PTR ds:[rsi]
  45401f:	imul   ebp,DWORD PTR [rsi+0x67],0x65676150
  454026:	and    ah,BYTE PTR [rax]
  454028:	(bad)  
  454029:	ds or  eax,0x2020200a
  45402f:	and    BYTE PTR [rax],ah
  454031:	and    BYTE PTR [rax],ah
  454033:	and    BYTE PTR [rcx+rcx*2],bh
  454036:	je     0x45409d
  454038:	ins    DWORD PTR es:[rdi],dx
  454039:	ds or  eax,0x2020200a
  45403f:	and    BYTE PTR [rax],ah
  454041:	and    BYTE PTR [rax],ah
  454043:	and    BYTE PTR [rax],ah
  454045:	and    BYTE PTR [rax],ah
  454047:	and    BYTE PTR [rcx+rcx*2],bh
  45404a:	movsxd ebp,DWORD PTR [rdi+0x6e]
  45404d:	rex.WB outs dx,BYTE PTR ds:[rsi]
  454050:	je     0x4540b7
  454052:	jb     0x4540c2
  454054:	gs je  0x4540a9
  454057:	gs jae 0x4540c9
  45405a:	jne    0x4540ce
  45405c:	movsxd esp,DWORD PTR [rbp+0x73]
  45405f:	cmp    al,0x2f
  454061:	movsxd rbp,DWORD PTR [r15+0x6e]
  454065:	ds or  eax,0x2020200a
  45406b:	and    BYTE PTR [rax],ah
  45406d:	and    BYTE PTR [rax],ah
  45406f:	and    BYTE PTR [rax],ah
  454071:	and    BYTE PTR [rax],ah
  454073:	and    BYTE PTR [rsp+rdx*2],bh
  454076:	imul   esi,DWORD PTR [rsp+rbp*2+0x65],0x73655220
  45407e:	outs   dx,DWORD PTR ds:[rsi]
  45407f:	jne    0x4540f3
  454081:	movsxd esp,DWORD PTR [rbp+0x49]
  454084:	fs cmp eax,0x71655222
  45408a:	jne    0x4540f5
  45408c:	jb     0x4540f3
  45408e:	ins    DWORD PTR es:[rdi],dx
  45408f:	outs   dx,BYTE PTR gs:[rsi]
  454091:	je     0x454106
  454093:	and    ah,BYTE PTR [rax]
  454095:	(bad)  
  454096:	ds or  eax,0x2020200a
  45409c:	and    BYTE PTR [rax],ah
  45409e:	and    BYTE PTR [rax],ah
  4540a0:	and    BYTE PTR [rax],ah
  4540a2:	and    BYTE PTR [rax],ah
  4540a4:	and    BYTE PTR [rsp+rax*2],bh
  4540a7:	gs jae 0x45410d
  4540aa:	jb     0x454115
  4540ac:	jo     0x454122
  4540ae:	imul   ebp,DWORD PTR [rdi+0x6e],0x73655220
  4540b5:	outs   dx,DWORD PTR ds:[rsi]
  4540b6:	jne    0x45412a
  4540b8:	movsxd esp,DWORD PTR [rbp+0x49]
  4540bb:	fs cmp eax,0x71655222
  4540c1:	jne    0x45412c
  4540c3:	jb     0x45412a
  4540c5:	ins    DWORD PTR es:[rdi],dx
  4540c6:	outs   dx,BYTE PTR gs:[rsi]
  4540c8:	je     0x45413d
  4540ca:	rex.R
  4540cb:	gs jae 0x454131
  4540ce:	jb     0x454139
  4540d0:	jo     0x454146
  4540d2:	imul   ebp,DWORD PTR [rdi+0x6e],0x3e2f2022
  4540d9:	or     eax,0x2020200a
  4540de:	and    BYTE PTR [rax],ah
  4540e0:	and    BYTE PTR [rax],ah
  4540e2:	and    BYTE PTR [rax],ah
  4540e4:	and    BYTE PTR [rax],ah
  4540e6:	and    BYTE PTR [rbx+rax*2],bh
  4540e9:	outs   dx,DWORD PTR ds:[rsi]
  4540ea:	ins    DWORD PTR es:[rdi],dx
  4540eb:	ins    DWORD PTR es:[rdi],dx
  4540ec:	(bad)  
  4540ed:	outs   dx,BYTE PTR ds:[rsi]
  4540ee:	and    BYTE PTR fs:[rcx+rdi*2+0x70],dl
  4540f3:	gs cmp eax,0x65704f22
  4540f9:	outs   dx,BYTE PTR ds:[rsi]
  4540fa:	imul   r13d,DWORD PTR [rbp+r12*2+0x43],0x616d6d6f
  454103:	outs   dx,BYTE PTR ds:[rsi]
  454104:	and    bh,BYTE PTR fs:[rsi]
  454107:	or     eax,0x2020200a
  45410c:	and    BYTE PTR [rax],ah
  45410e:	and    BYTE PTR [rax],ah
  454110:	and    BYTE PTR [rax],ah
  454112:	and    BYTE PTR [rax],ah
  454114:	and    BYTE PTR [rax],ah
  454116:	and    BYTE PTR [rax],ah
  454118:	and    BYTE PTR [rsi+rax*2],bh
  45411b:	imul   ebp,DWORD PTR [rbp+riz*2+0x4e],0x3e656d61
  454123:	push   0x3a707474
  454128:	(bad)  
  454129:	(bad)  
  45412a:	outs   dx,DWORD PTR ds:[esi]
  45412c:	cs ins DWORD PTR es:[rdi],dx
  45412e:	imul   esp,DWORD PTR [rbx+0x72],0x666f736f
  454135:	je     0x454165
  454137:	movsxd ebp,DWORD PTR [rdi+0x6d]
  45413a:	(bad)  
  45413b:	data16 ja 0x4541aa
  45413e:	imul   ebp,DWORD PTR [rsi+0x6b],0x696c3f2f
  454145:	outs   dx,BYTE PTR ds:[rsi]
  454146:	imul   ebp,DWORD PTR [rcx+0x64],0x3d
  45414a:	cmp    DWORD PTR [rbx],esi
  45414c:	cmp    DWORD PTR [rcx],edi
  45414e:	(bad)  
  45414f:	cmp    al,0x2f
  454151:	imul   r13d,DWORD PTR [rbp+r12*2+0x4e],0x3e656d61
  45415a:	or     eax,0x2020200a
  45415f:	and    BYTE PTR [rax],ah
  454161:	and    BYTE PTR [rax],ah
  454163:	and    BYTE PTR [rax],ah
  454165:	and    BYTE PTR [rax],ah
  454167:	and    BYTE PTR [rdi+rbp*1],bh
  45416a:	rex.XB outs dx,DWORD PTR ds:[rsi]
  45416c:	ins    DWORD PTR es:[rdi],dx
  45416d:	ins    DWORD PTR es:[rdi],dx
  45416e:	(bad)  
  45416f:	outs   dx,BYTE PTR ds:[rsi]
  454170:	fs ds or eax,0x2020200a
  454177:	and    BYTE PTR [rax],ah
  454179:	and    BYTE PTR [rax],ah
  45417b:	and    BYTE PTR [rdi+rbp*1],bh
  45417e:	rex.WB je 0x4541e6
  454181:	ins    DWORD PTR es:[rdi],dx
  454182:	ds or  eax,0x2020200a
  454188:	and    BYTE PTR [rax],ah
  45418a:	and    BYTE PTR [rax],ah
  45418c:	and    BYTE PTR [rcx+rcx*2],bh
  45418f:	je     0x4541f6
  454191:	ins    DWORD PTR es:[rdi],dx
  454192:	ds or  eax,0x2020200a
  454198:	and    BYTE PTR [rax],ah
  45419a:	and    BYTE PTR [rax],ah
  45419c:	and    BYTE PTR [rax],ah
  45419e:	and    BYTE PTR [rax],ah
  4541a0:	and    BYTE PTR [rcx+rcx*2],bh
  4541a3:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4541a6:	rex.WB outs dx,BYTE PTR ds:[rsi]
  4541a9:	je     0x454210
  4541ab:	jb     0x45421b
  4541ad:	gs je  0x454202
  4541b0:	gs jae 0x454222
  4541b3:	jne    0x454227
  4541b5:	movsxd esp,DWORD PTR [rbp+0x73]
  4541b8:	cmp    al,0x2f
  4541ba:	movsxd rbp,DWORD PTR [r15+0x6e]
  4541be:	ds or  eax,0x2020200a
  4541c4:	and    BYTE PTR [rax],ah
  4541c6:	and    BYTE PTR [rax],ah
  4541c8:	and    BYTE PTR [rax],ah
  4541ca:	and    BYTE PTR [rax],ah
  4541cc:	and    BYTE PTR [rsp+rdx*2],bh
  4541cf:	imul   esi,DWORD PTR [rsp+rbp*2+0x65],0x73655220
  4541d7:	outs   dx,DWORD PTR ds:[rsi]
  4541d8:	jne    0x45424c
  4541da:	movsxd esp,DWORD PTR [rbp+0x49]
  4541dd:	fs cmp eax,0x63655322
  4541e3:	jne    0x454257
  4541e5:	imul   esi,DWORD PTR [rcx+rdi*2+0x44],0x6d75636f
  4541ed:	outs   dx,BYTE PTR gs:[rsi]
  4541ef:	je     0x454252
  4541f1:	je     0x45425c
  4541f3:	outs   dx,DWORD PTR ds:[rsi]
  4541f4:	outs   dx,BYTE PTR ds:[rsi]
  4541f5:	and    ah,BYTE PTR [rax]
  4541f7:	(bad)  
  4541f8:	ds or  eax,0x2020200a
  4541fe:	and    BYTE PTR [rax],ah
  454200:	and    BYTE PTR [rax],ah
  454202:	and    BYTE PTR [rax],ah
  454204:	and    BYTE PTR [rax],ah
  454206:	and    BYTE PTR [rsp+rax*2],bh
  454209:	gs jae 0x45426f
  45420c:	jb     0x454277
  45420e:	jo     0x454284
  454210:	imul   ebp,DWORD PTR [rdi+0x6e],0x73655220
  454217:	outs   dx,DWORD PTR ds:[rsi]
  454218:	jne    0x45428c
  45421a:	movsxd esp,DWORD PTR [rbp+0x49]
  45421d:	fs cmp eax,0x63655322
  454223:	jne    0x454297
  454225:	imul   esi,DWORD PTR [rcx+rdi*2+0x44],0x6d75636f
  45422d:	outs   dx,BYTE PTR gs:[rsi]
  45422f:	je     0x454292
  454231:	je     0x45429c
  454233:	outs   dx,DWORD PTR ds:[rsi]
  454234:	outs   dx,BYTE PTR ds:[rsi]
  454235:	rex.R
  454236:	gs jae 0x45429c
  454239:	jb     0x4542a4
  45423b:	jo     0x4542b1
  45423d:	imul   ebp,DWORD PTR [rdi+0x6e],0x3e2f2022
  454244:	or     eax,0x2020200a
  454249:	and    BYTE PTR [rax],ah
  45424b:	and    BYTE PTR [rax],ah
  45424d:	and    BYTE PTR [rax],ah
  45424f:	and    BYTE PTR [rax],ah
  454251:	and    BYTE PTR [rbx+rax*2],bh
  454254:	outs   dx,DWORD PTR ds:[rsi]
  454255:	ins    DWORD PTR es:[rdi],dx
  454256:	ins    DWORD PTR es:[rdi],dx
  454257:	(bad)  
  454258:	outs   dx,BYTE PTR ds:[rsi]
  454259:	and    BYTE PTR fs:[rcx+rdi*2+0x70],dl
  45425e:	gs cmp eax,0x65704f22
  454264:	outs   dx,BYTE PTR ds:[rsi]
  454265:	imul   r13d,DWORD PTR [rbp+r12*2+0x43],0x616d6d6f
  45426e:	outs   dx,BYTE PTR ds:[rsi]
  45426f:	and    bh,BYTE PTR fs:[rsi]
  454272:	or     eax,0x2020200a
  454277:	and    BYTE PTR [rax],ah
  454279:	and    BYTE PTR [rax],ah
  45427b:	and    BYTE PTR [rax],ah
  45427d:	and    BYTE PTR [rax],ah
  45427f:	and    BYTE PTR [rax],ah
  454281:	and    BYTE PTR [rax],ah
  454283:	and    BYTE PTR [rsi+rax*2],bh
  454286:	imul   ebp,DWORD PTR [rbp+riz*2+0x4e],0x3e656d61
  45428e:	push   0x3a707474
  454293:	(bad)  
  454294:	(bad)  
  454295:	outs   dx,DWORD PTR ds:[esi]
  454297:	cs ins DWORD PTR es:[rdi],dx
  454299:	imul   esp,DWORD PTR [rbx+0x72],0x666f736f
  4542a0:	je     0x4542d0
  4542a2:	movsxd ebp,DWORD PTR [rdi+0x6d]
  4542a5:	(bad)  
  4542a6:	data16 ja 0x454315
  4542a9:	imul   ebp,DWORD PTR [rsi+0x6b],0x696c3f2f
  4542b0:	outs   dx,BYTE PTR ds:[rsi]
  4542b1:	imul   ebp,DWORD PTR [rcx+0x64],0x3d
  4542b5:	cmp    DWORD PTR [rbx],esi
  4542b7:	cmp    DWORD PTR [rcx],edi
  4542b9:	cmp    DWORD PTR [rdi+rbp*1],edi
  4542bc:	imul   r13d,DWORD PTR [rbp+r12*2+0x4e],0x3e656d61
  4542c5:	or     eax,0x2020200a
  4542ca:	and    BYTE PTR [rax],ah
  4542cc:	and    BYTE PTR [rax],ah
  4542ce:	and    BYTE PTR [rax],ah
  4542d0:	and    BYTE PTR [rax],ah
  4542d2:	and    BYTE PTR [rdi+rbp*1],bh
  4542d5:	rex.XB outs dx,DWORD PTR ds:[rsi]
  4542d7:	ins    DWORD PTR es:[rdi],dx
  4542d8:	ins    DWORD PTR es:[rdi],dx
  4542d9:	(bad)  
  4542da:	outs   dx,BYTE PTR ds:[rsi]
  4542db:	fs ds or eax,0x2020200a
  4542e2:	and    BYTE PTR [rax],ah
  4542e4:	and    BYTE PTR [rax],ah
  4542e6:	and    BYTE PTR [rdi+rbp*1],bh
  4542e9:	rex.WB je 0x454351
  4542ec:	ins    DWORD PTR es:[rdi],dx
  4542ed:	ds or  eax,0x2020200a
  4542f3:	and    BYTE PTR [rax],ah
  4542f5:	and    BYTE PTR [rax],ah
  4542f7:	and    BYTE PTR [rcx+rcx*2],bh
  4542fa:	je     0x454361
  4542fc:	ins    DWORD PTR es:[rdi],dx
  4542fd:	ds or  eax,0x2020200a
  454303:	and    BYTE PTR [rax],ah
  454305:	and    BYTE PTR [rax],ah
  454307:	and    BYTE PTR [rax],ah
  454309:	and    BYTE PTR [rax],ah
  45430b:	and    BYTE PTR [rcx+rcx*2],bh
  45430e:	movsxd ebp,DWORD PTR [rdi+0x6e]
  454311:	rex.WB outs dx,BYTE PTR ds:[rsi]
  454314:	je     0x45437b
  454316:	jb     0x454386
  454318:	gs je  0x45436d
  45431b:	gs jae 0x45438d
  45431e:	jne    0x454392
  454320:	movsxd esp,DWORD PTR [rbp+0x73]
  454323:	cmp    al,0x2f
  454325:	movsxd rbp,DWORD PTR [r15+0x6e]
  454329:	ds or  eax,0x2020200a
  45432f:	and    BYTE PTR [rax],ah
  454331:	and    BYTE PTR [rax],ah
  454333:	and    BYTE PTR [rax],ah
  454335:	and    BYTE PTR [rax],ah
  454337:	and    BYTE PTR [rsp+rdx*2],bh
  45433a:	imul   esi,DWORD PTR [rsp+rbp*2+0x65],0x73655220
  454342:	outs   dx,DWORD PTR ds:[rsi]
  454343:	jne    0x4543b7
  454345:	movsxd esp,DWORD PTR [rbp+0x49]
  454348:	fs cmp eax,0x6c6e4f22
  45434e:	imul   ebp,DWORD PTR [rsi+0x65],0x656c6552
  454355:	(bad)  
  454356:	jae    0x4543bd
  454358:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  45435a:	je     0x4543c1
  45435c:	jae    0x454380
  45435e:	and    BYTE PTR [rdi],ch
  454360:	ds or  eax,0x2020200a
  454366:	and    BYTE PTR [rax],ah
  454368:	and    BYTE PTR [rax],ah
  45436a:	and    BYTE PTR [rax],ah
  45436c:	and    BYTE PTR [rax],ah
  45436e:	and    BYTE PTR [rsp+rax*2],bh
  454371:	gs jae 0x4543d7
  454374:	jb     0x4543df
  454376:	jo     0x4543ec
  454378:	imul   ebp,DWORD PTR [rdi+0x6e],0x73655220
  45437f:	outs   dx,DWORD PTR ds:[rsi]
  454380:	jne    0x4543f4
  454382:	movsxd esp,DWORD PTR [rbp+0x49]
  454385:	fs cmp eax,0x6c6e4f22
  45438b:	imul   ebp,DWORD PTR [rsi+0x65],0x656c6552
  454392:	(bad)  
  454393:	jae    0x4543fa
  454395:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  454397:	je     0x4543fe
  454399:	jae    0x4543df
  45439b:	gs jae 0x454401
  45439e:	jb     0x454409
  4543a0:	jo     0x454416
  4543a2:	imul   ebp,DWORD PTR [rdi+0x6e],0x3e2f2022
  4543a9:	or     eax,0x2020200a
  4543ae:	and    BYTE PTR [rax],ah
  4543b0:	and    BYTE PTR [rax],ah
  4543b2:	and    BYTE PTR [rax],ah
  4543b4:	and    BYTE PTR [rax],ah
  4543b6:	and    BYTE PTR [rbx+rax*2],bh
  4543b9:	outs   dx,DWORD PTR ds:[rsi]
  4543ba:	ins    DWORD PTR es:[rdi],dx
  4543bb:	ins    DWORD PTR es:[rdi],dx
  4543bc:	(bad)  
  4543bd:	outs   dx,BYTE PTR ds:[rsi]
  4543be:	and    BYTE PTR fs:[rcx+rdi*2+0x70],dl
  4543c3:	gs cmp eax,0x65704f22
  4543c9:	outs   dx,BYTE PTR ds:[rsi]
  4543ca:	imul   r13d,DWORD PTR [rbp+r12*2+0x43],0x616d6d6f
  4543d3:	outs   dx,BYTE PTR ds:[rsi]
  4543d4:	and    bh,BYTE PTR fs:[rsi]
  4543d7:	or     eax,0x2020200a
  4543dc:	and    BYTE PTR [rax],ah
  4543de:	and    BYTE PTR [rax],ah
  4543e0:	and    BYTE PTR [rax],ah
  4543e2:	and    BYTE PTR [rax],ah
  4543e4:	and    BYTE PTR [rax],ah
  4543e6:	and    BYTE PTR [rax],ah
  4543e8:	and    BYTE PTR [rsi+rax*2],bh
  4543eb:	imul   ebp,DWORD PTR [rbp+riz*2+0x4e],0x3e656d61
  4543f3:	push   0x3a707474
  4543f8:	(bad)  
  4543f9:	(bad)  
  4543fa:	outs   dx,DWORD PTR ds:[esi]
  4543fc:	cs ins DWORD PTR es:[rdi],dx
  4543fe:	imul   esp,DWORD PTR [rbx+0x72],0x666f736f
  454405:	je     0x454435
  454407:	movsxd ebp,DWORD PTR [rdi+0x6d]
  45440a:	(bad)  
  45440b:	data16 ja 0x45447a
  45440e:	imul   ebp,DWORD PTR [rsi+0x6b],0x694c3f2f
  454415:	outs   dx,BYTE PTR ds:[rsi]
  454416:	imul   ecx,DWORD PTR [rcx+0x64],0x3d
  45441a:	xor    DWORD PTR [rcx],esi
  45441c:	xor    dh,BYTE PTR [rdx+rsi*1]
  45441f:	xor    DWORD PTR [rdi+rbp*1],edi
  454422:	imul   r13d,DWORD PTR [rbp+r12*2+0x4e],0x3e656d61
  45442b:	or     eax,0x2020200a
  454430:	and    BYTE PTR [rax],ah
  454432:	and    BYTE PTR [rax],ah
  454434:	and    BYTE PTR [rax],ah
  454436:	and    BYTE PTR [rax],ah
  454438:	and    BYTE PTR [rdi+rbp*1],bh
  45443b:	rex.XB outs dx,DWORD PTR ds:[rsi]
  45443d:	ins    DWORD PTR es:[rdi],dx
  45443e:	ins    DWORD PTR es:[rdi],dx
  45443f:	(bad)  
  454440:	outs   dx,BYTE PTR ds:[rsi]
  454441:	fs ds or eax,0x2020200a
  454448:	and    BYTE PTR [rax],ah
  45444a:	and    BYTE PTR [rax],ah
  45444c:	and    BYTE PTR [rdi+rbp*1],bh
  45444f:	rex.WB je 0x4544b7
  454452:	ins    DWORD PTR es:[rdi],dx
  454453:	ds or  eax,0x2020200a
  454459:	and    BYTE PTR [rax],ah
  45445b:	and    BYTE PTR [rax],ah
  45445d:	and    BYTE PTR [rcx+rcx*2],bh
  454460:	je     0x4544c7
  454462:	ins    DWORD PTR es:[rdi],dx
  454463:	ds or  eax,0x2020200a
  454469:	and    BYTE PTR [rax],ah
  45446b:	and    BYTE PTR [rax],ah
  45446d:	and    BYTE PTR [rax],ah
  45446f:	and    BYTE PTR [rax],ah
  454471:	and    BYTE PTR [rcx+rcx*2],bh
  454474:	movsxd ebp,DWORD PTR [rdi+0x6e]
  454477:	ds push rsp
  454479:	outs   dx,DWORD PTR ds:[rsi]
  45447a:	outs   dx,DWORD PTR ds:[rsi]
  45447b:	ins    BYTE PTR es:[rdi],dx
  45447c:	jae    0x4544ba
  45447e:	(bad)  
  45447f:	movsxd rbp,DWORD PTR [r15+0x6e]
  454483:	ds or  eax,0x2020200a
  454489:	and    BYTE PTR [rax],ah
  45448b:	and    BYTE PTR [rax],ah
  45448d:	and    BYTE PTR [rax],ah
  45448f:	and    BYTE PTR [rax],ah
  454491:	and    BYTE PTR [rsp+rdx*2],bh
  454494:	imul   esi,DWORD PTR [rsp+rbp*2+0x65],0x73655220
  45449c:	outs   dx,DWORD PTR ds:[rsi]
  45449d:	jne    0x454511
  45449f:	movsxd esp,DWORD PTR [rbp+0x49]
  4544a2:	fs cmp eax,0x43435322
  4544a8:	rex.XB push 0x226b6365
  4544ae:	and    BYTE PTR [rdi],ch
  4544b0:	ds or  eax,0x2020200a
  4544b6:	and    BYTE PTR [rax],ah
  4544b8:	and    BYTE PTR [rax],ah
  4544ba:	and    BYTE PTR [rax],ah
  4544bc:	and    BYTE PTR [rax],ah
  4544be:	and    BYTE PTR [rsp+rax*2],bh
  4544c1:	gs jae 0x454527
  4544c4:	jb     0x45452f
  4544c6:	jo     0x45453c
  4544c8:	imul   ebp,DWORD PTR [rdi+0x6e],0x73655220
  4544cf:	outs   dx,DWORD PTR ds:[rsi]
  4544d0:	jne    0x454544
  4544d2:	movsxd esp,DWORD PTR [rbp+0x49]
  4544d5:	fs cmp eax,0x43435322
  4544db:	rex.XB push 0x446b6365
  4544e1:	gs jae 0x454547
  4544e4:	jb     0x45454f
  4544e6:	jo     0x45455c
  4544e8:	imul   ebp,DWORD PTR [rdi+0x6e],0x3e2f2022
  4544ef:	or     eax,0x2020200a
  4544f4:	and    BYTE PTR [rax],ah
  4544f6:	and    BYTE PTR [rax],ah
  4544f8:	and    BYTE PTR [rax],ah
  4544fa:	and    BYTE PTR [rax],ah
  4544fc:	and    BYTE PTR [rbx+rax*2],bh
  4544ff:	outs   dx,DWORD PTR ds:[rsi]
  454500:	ins    DWORD PTR es:[rdi],dx
  454501:	ins    DWORD PTR es:[rdi],dx
  454502:	(bad)  
  454503:	outs   dx,BYTE PTR ds:[rsi]
  454504:	and    BYTE PTR fs:[rcx+rdi*2+0x70],dl
  454509:	gs cmp eax,0x75614c22
  45450f:	outs   dx,BYTE PTR ds:[rsi]
  454510:	movsxd ebp,DWORD PTR [rax+0x53]
  454513:	gs je  0x45458b
  454516:	jo     0x45455b
  454518:	outs   dx,DWORD PTR ds:[rsi]
  454519:	ins    DWORD PTR es:[rdi],dx
  45451a:	ins    DWORD PTR es:[rdi],dx
  45451b:	(bad)  
  45451c:	outs   dx,BYTE PTR ds:[rsi]
  45451d:	and    bh,BYTE PTR fs:[rsi]
  454520:	or     eax,0x2020200a
  454525:	and    BYTE PTR [rax],ah
  454527:	and    BYTE PTR [rax],ah
  454529:	and    BYTE PTR [rax],ah
  45452b:	and    BYTE PTR [rax],ah
  45452d:	and    BYTE PTR [rax],ah
  45452f:	and    BYTE PTR [rcx+rax*2],bh
  454532:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  454536:	outs   dx,BYTE PTR ds:[rsi]
  454537:	ds push rdx
  454539:	push   rbp
  45453a:	rex.WRX push rdx
  45453c:	push   rbp
  45453d:	rex.WR
  45453e:	rex.RB push r11
  454540:	cmp    al,0x2f
  454542:	movsxd esi,DWORD PTR [r9+rbp*2+0x6f]
  454547:	outs   dx,BYTE PTR ds:[rsi]
  454548:	ds or  eax,0x2020200a
  45454e:	and    BYTE PTR [rax],ah
  454550:	and    BYTE PTR [rax],ah
  454552:	and    BYTE PTR [rax],ah
  454554:	and    BYTE PTR [rax],ah
  454556:	and    BYTE PTR [rax],ah
  454558:	and    BYTE PTR [rcx+rax*2],bh
  45455b:	fs imul esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x416c616e
  454565:	jb     0x4545ce
  454567:	jne    0x4545d6
  454569:	outs   dx,BYTE PTR gs:[rsi]
  45456b:	je     0x4545e0
  45456d:	ds (bad) 
  45456f:	push   rdx
  454570:	push   rbp
  454571:	rex.WR
  454572:	rex.RB push r11
  454574:	cmp    eax,0x424f4c47
  454579:	rex.B
  45457a:	rex.WR push rdx
  45457c:	push   rbp
  45457d:	rex.WR
  45457e:	rex.RB push r11
  454580:	and    BYTE PTR [rbx+0x71],dl
  454583:	ins    BYTE PTR es:[rdi],dx
  454584:	push   rbp
  454585:	outs   dx,BYTE PTR ds:[rsi]
  454586:	jae    0x4545fd
  454588:	jo     0x4545fa
  45458a:	outs   dx,DWORD PTR ds:[rsi]
  45458b:	jb     0x454601
  45458d:	gs fs push rax
  454590:	jb     0x454601
  454592:	fs jne 0x4545f8
  454595:	je     0x4545d9
  454597:	ins    BYTE PTR es:[rdi],dx
  454598:	outs   dx,DWORD PTR ds:[rsi]
  454599:	movsxd ebp,DWORD PTR [rbx+0x65]
  45459c:	jb     0x4545be
  45459e:	push   rax
  45459f:	gs jb  0x454608
  4545a2:	rex.WRB outs dx,DWORD PTR ds:[rsi]
  4545a4:	outs   dx,BYTE PTR ds:[rsi]
  4545a5:	rex.XB outs dx,DWORD PTR ds:[rsi]
  4545a7:	jne    0x454617
  4545a9:	je     0x454610
  4545ab:	jb     0x4545fb
  4545ad:	outs   dx,DWORD PTR ds:[rsi]
  4545ae:	je     0x4545f3
  4545b0:	outs   dx,DWORD PTR ds:[rsi]
  4545b1:	jb     0x454625
  4545b3:	jne    0x454625
  4545b5:	je     0x45461c
  4545b7:	fs rex.XB push 0x206b6365
  4545be:	imul   esp,DWORD PTR [rbx+r14*2+0x32],0x49353030
  4545c7:	outs   dx,BYTE PTR ds:[rsi]
  4545c8:	jae    0x45463e
  4545ca:	(bad)  
  4545cb:	ins    BYTE PTR es:[rdi],dx
  4545cc:	ins    BYTE PTR es:[rdi],dx
  4545cd:	gs fs rex.XB push 0x206b6365
  4545d5:	rex.X ins BYTE PTR es:[rdi],dx
  4545d7:	outs   dx,DWORD PTR ds:[rsi]
  4545d8:	movsxd ebp,DWORD PTR [rbx+0x49]
  4545db:	outs   dx,BYTE PTR ds:[rsi]
  4545dc:	jae    0x454652
  4545de:	(bad)  
  4545df:	ins    BYTE PTR es:[rdi],dx
  4545e0:	ins    BYTE PTR es:[rdi],dx
  4545e1:	push   rbx
  4545e2:	js     0x454637
  4545e4:	and    BYTE PTR [rcx+0x63],al
  4545e7:	ins    BYTE PTR es:[rdi],dx
  4545e8:	push   rax
  4545e9:	gs jb  0x454659
  4545ec:	imul   esi,DWORD PTR [rbx+0x73],0x736e6f69
  4545f3:	rex.RX (bad) 
  4545f5:	movsxd esp,DWORD PTR [rbp+0x74]
  4545f8:	and    BYTE PTR [rsi+0x61],al
  4545fb:	movsxd esp,DWORD PTR [rbp+0x74]
  4545fe:	rex.R outs dx,DWORD PTR ds:[rsi]
  454600:	ins    DWORD PTR es:[rdi],dx
  454601:	(bad)  
  454602:	imul   ebp,DWORD PTR [rsi+0x43],0x72746e6f
  454609:	outs   dx,DWORD PTR ds:[rsi]
  45460a:	ins    BYTE PTR es:[rdi],dx
  45460b:	ins    BYTE PTR es:[rdi],dx
  45460c:	gs jb  0x454652
  45460f:	push   0x206b6365
  454614:	push   rbx
  454615:	push   rbx
  454616:	rex.WRB push r11
  454618:	pop    rdi
  454619:	rex.WB jae 0x454665
  45461c:	outs   dx,BYTE PTR ds:[rsi]
  45461d:	je     0x454684
  45461f:	jb     0x45468f
  454621:	gs je  0x454667
  454624:	outs   dx,DWORD PTR ds:[rsi]
  454625:	outs   dx,BYTE PTR ds:[rsi]
  454626:	outs   dx,BYTE PTR ds:[rsi]
  454627:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  45462c:	and    BYTE PTR [rsi+0x61],al
  45462f:	movsxd esp,DWORD PTR [rbp+0x74]
  454632:	push   rdi
  454633:	rex.WRXB push r15
  454635:	ss xor al,0x50
  454638:	ins    BYTE PTR es:[rdi],dx
  454639:	(bad)  
  45463a:	je     0x4546a2
  45463c:	outs   dx,DWORD PTR ds:[rsi]
  45463d:	jb     0x4546ac
  45463f:	rex.XB push 0x206b6365
  454645:	rex.RX (bad) 
  454647:	movsxd esp,DWORD PTR [rbp+0x74]
  45464a:	push   rax
  45464b:	outs   dx,DWORD PTR ds:[rsi]
  45464c:	ja     0x4546b3
  45464e:	jb     0x4546a3
  454650:	push   0x436c6c65
  454655:	push   0x3c6b6365
  45465a:	(bad)  
  45465b:	rex.B
  45465c:	fs imul esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x416c616e
  454666:	jb     0x4546cf
  454668:	jne    0x4546d7
  45466a:	outs   dx,BYTE PTR gs:[rsi]
  45466c:	je     0x4546e1
  45466e:	ds or  eax,0x2020200a
  454674:	and    BYTE PTR [rax],ah
  454676:	and    BYTE PTR [rax],ah
  454678:	and    BYTE PTR [rax],ah
  45467a:	and    BYTE PTR [rax],ah
  45467c:	and    BYTE PTR [rdi+rbp*1],bh
  45467f:	rex.XB outs dx,DWORD PTR ds:[rsi]
  454681:	ins    DWORD PTR es:[rdi],dx
  454682:	ins    DWORD PTR es:[rdi],dx
  454683:	(bad)  
  454684:	outs   dx,BYTE PTR ds:[rsi]
  454685:	fs ds or eax,0x2020200a
  45468c:	and    BYTE PTR [rax],ah
  45468e:	and    BYTE PTR [rax],ah
  454690:	and    BYTE PTR [rdi+rbp*1],bh
  454693:	rex.WB je 0x4546fb
  454696:	ins    DWORD PTR es:[rdi],dx
  454697:	ds or  eax,0x2020200a
  45469d:	and    BYTE PTR [rax],ah
  45469f:	and    BYTE PTR [rax],ah
  4546a1:	and    BYTE PTR [rcx+rcx*2],bh
  4546a4:	je     0x45470b
  4546a6:	ins    DWORD PTR es:[rdi],dx
  4546a7:	ds or  eax,0x2020200a
  4546ad:	and    BYTE PTR [rax],ah
  4546af:	and    BYTE PTR [rax],ah
  4546b1:	and    BYTE PTR [rax],ah
  4546b3:	and    BYTE PTR [rax],ah
  4546b5:	and    BYTE PTR [rcx+rcx*2],bh
  4546b8:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4546bb:	ds push rbp
  4546bd:	jo     0x454726
  4546bf:	jb     0x454722
  4546c1:	fs gs rex.B
  4546c4:	fs jbe 0x454730
  4546c7:	jae    0x454738
  4546c9:	jb     0x454707
  4546cb:	(bad)  
  4546cc:	movsxd rbp,DWORD PTR [r15+0x6e]
  4546d0:	ds or  eax,0x2020200a
  4546d6:	and    BYTE PTR [rax],ah
  4546d8:	and    BYTE PTR [rax],ah
  4546da:	and    BYTE PTR [rax],ah
  4546dc:	and    BYTE PTR [rax],ah
  4546de:	and    BYTE PTR [rsp+rdx*2],bh
  4546e1:	imul   esi,DWORD PTR [rsp+rbp*2+0x65],0x73655220
  4546e9:	outs   dx,DWORD PTR ds:[rsi]
  4546ea:	jne    0x45475e
  4546ec:	movsxd esp,DWORD PTR [rbp+0x49]
  4546ef:	fs cmp eax,0x67705522
  4546f5:	jb     0x454758
  4546f7:	fs gs rex.B
  4546fa:	fs jbe 0x454766
  4546fd:	jae    0x45476e
  4546ff:	jb     0x454723
  454701:	and    BYTE PTR [rdi],ch
  454703:	ds or  eax,0x2020200a
  454709:	and    BYTE PTR [rax],ah
  45470b:	and    BYTE PTR [rax],ah
  45470d:	and    BYTE PTR [rax],ah
  45470f:	and    BYTE PTR [rax],ah
  454711:	and    BYTE PTR [rsp+rax*2],bh
  454714:	gs jae 0x45477a
  454717:	jb     0x454782
  454719:	jo     0x45478f
  45471b:	imul   ebp,DWORD PTR [rdi+0x6e],0x73655220
  454722:	outs   dx,DWORD PTR ds:[rsi]
  454723:	jne    0x454797
  454725:	movsxd esp,DWORD PTR [rbp+0x49]
  454728:	fs cmp eax,0x67705522
  45472e:	jb     0x454791
  454730:	fs gs rex.B
  454733:	fs jbe 0x45479f
  454736:	jae    0x4547a7
  454738:	jb     0x45477e
  45473a:	gs jae 0x4547a0
  45473d:	jb     0x4547a8
  45473f:	jo     0x4547b5
  454741:	imul   ebp,DWORD PTR [rdi+0x6e],0x3e2f2022
  454748:	or     eax,0x2020200a
  45474d:	and    BYTE PTR [rax],ah
  45474f:	and    BYTE PTR [rax],ah
  454751:	and    BYTE PTR [rax],ah
  454753:	and    BYTE PTR [rax],ah
  454755:	and    BYTE PTR [rbx+rax*2],bh
  454758:	outs   dx,DWORD PTR ds:[rsi]
  454759:	ins    DWORD PTR es:[rdi],dx
  45475a:	ins    DWORD PTR es:[rdi],dx
  45475b:	(bad)  
  45475c:	outs   dx,BYTE PTR ds:[rsi]
  45475d:	and    BYTE PTR fs:[rcx+rdi*2+0x70],dl
  454762:	gs cmp eax,0x65704f22
  454768:	outs   dx,BYTE PTR ds:[rsi]
  454769:	imul   r13d,DWORD PTR [rbp+r12*2+0x43],0x616d6d6f
  454772:	outs   dx,BYTE PTR ds:[rsi]
  454773:	and    bh,BYTE PTR fs:[rsi]
  454776:	or     eax,0x2020200a
  45477b:	and    BYTE PTR [rax],ah
  45477d:	and    BYTE PTR [rax],ah
  45477f:	and    BYTE PTR [rax],ah
  454781:	and    BYTE PTR [rax],ah
  454783:	and    BYTE PTR [rax],ah
  454785:	and    BYTE PTR [rax],ah
  454787:	and    BYTE PTR [rsi+rax*2],bh
  45478a:	imul   ebp,DWORD PTR [rbp+riz*2+0x4e],0x3e656d61
  454792:	jnp    0x4547f7
  454794:	jo     0x45480b
  454796:	jo     0x4547f9
  454798:	je     0x454802
  45479a:	jge    0x4547f8
  45479c:	push   rdx
  45479d:	gs imul esi,DWORD PTR fs:[rbx+0x74],0x6770555c
  4547a6:	jb     0x454809
  4547a8:	fs and BYTE PTR gs:[rcx+0x64],al
  4547ad:	jbe    0x454818
  4547af:	jae    0x454820
  4547b1:	jb     0x45480f
  4547b3:	push   rbx
  4547b4:	jno    0x454822
  4547b6:	push   rbp
  4547b7:	rex.B
  4547b8:	cs ins DWORD PTR es:[rdi],dx
  4547ba:	jae    0x454825
  4547bc:	cmp    al,0x2f
  4547be:	imul   r13d,DWORD PTR [rbp+r12*2+0x4e],0x3e656d61
  4547c7:	or     eax,0x2020200a
  4547cc:	and    BYTE PTR [rax],ah
  4547ce:	and    BYTE PTR [rax],ah
  4547d0:	and    BYTE PTR [rax],ah
  4547d2:	and    BYTE PTR [rax],ah
  4547d4:	and    BYTE PTR [rdi+rbp*1],bh
  4547d7:	rex.XB outs dx,DWORD PTR ds:[rsi]
  4547d9:	ins    DWORD PTR es:[rdi],dx
  4547da:	ins    DWORD PTR es:[rdi],dx
  4547db:	(bad)  
  4547dc:	outs   dx,BYTE PTR ds:[rsi]
  4547dd:	fs ds or eax,0x2020200a
  4547e4:	and    BYTE PTR [rax],ah
  4547e6:	and    BYTE PTR [rax],ah
  4547e8:	and    BYTE PTR [rdi+rbp*1],bh
  4547eb:	rex.WB je 0x454853
  4547ee:	ins    DWORD PTR es:[rdi],dx
  4547ef:	ds or  eax,0x2020200a
  4547f5:	and    BYTE PTR [rax],ah
  4547f7:	and    BYTE PTR [rax],ah
  4547f9:	and    BYTE PTR [rcx+rcx*2],bh
  4547fc:	je     0x454863
  4547fe:	ins    DWORD PTR es:[rdi],dx
  4547ff:	ds or  eax,0x2020200a
  454805:	and    BYTE PTR [rax],ah
  454807:	and    BYTE PTR [rax],ah
  454809:	and    BYTE PTR [rax],ah
  45480b:	and    BYTE PTR [rax],ah
  45480d:	and    BYTE PTR [rcx+rcx*2],bh
  454810:	movsxd ebp,DWORD PTR [rdi+0x6e]
  454813:	rex.WB outs dx,BYTE PTR ds:[rsi]
  454816:	je     0x45487d
  454818:	jb     0x454888
  45481a:	gs je  0x45486f
  45481d:	gs jae 0x45488f
  454820:	jne    0x454894
  454822:	movsxd esp,DWORD PTR [rbp+0x73]
  454825:	cmp    al,0x2f
  454827:	movsxd rbp,DWORD PTR [r15+0x6e]
  45482b:	ds or  eax,0x2020200a
  454831:	and    BYTE PTR [rax],ah
  454833:	and    BYTE PTR [rax],ah
  454835:	and    BYTE PTR [rax],ah
  454837:	and    BYTE PTR [rax],ah
  454839:	and    BYTE PTR [rsp+rdx*2],bh
  45483c:	imul   esi,DWORD PTR [rsp+rbp*2+0x65],0x73655220
  454844:	outs   dx,DWORD PTR ds:[rsi]
  454845:	jne    0x4548b9
  454847:	movsxd esp,DWORD PTR [rbp+0x49]
  45484a:	fs cmp eax,0x6f685322
  454850:	ja     0x45489a
  454852:	gs ins BYTE PTR es:[rdi],dx
  454854:	jo     0x454878
  454856:	and    BYTE PTR [rdi],ch
  454858:	ds or  eax,0x2020200a
  45485e:	and    BYTE PTR [rax],ah
  454860:	and    BYTE PTR [rax],ah
  454862:	and    BYTE PTR [rax],ah
  454864:	and    BYTE PTR [rax],ah
  454866:	and    BYTE PTR [rsp+rax*2],bh
  454869:	gs jae 0x4548cf
  45486c:	jb     0x4548d7
  45486e:	jo     0x4548e4
  454870:	imul   ebp,DWORD PTR [rdi+0x6e],0x73655220
  454877:	outs   dx,DWORD PTR ds:[rsi]
  454878:	jne    0x4548ec
  45487a:	movsxd esp,DWORD PTR [rbp+0x49]
  45487d:	fs cmp eax,0x6f685322
  454883:	ja     0x4548cd
  454885:	gs ins BYTE PTR es:[rdi],dx
  454887:	jo     0x4548cd
  454889:	gs jae 0x4548ef
  45488c:	jb     0x4548f7
  45488e:	jo     0x454904
  454890:	imul   ebp,DWORD PTR [rdi+0x6e],0x3e2f2022
  454897:	or     eax,0x2020200a
  45489c:	and    BYTE PTR [rax],ah
  45489e:	and    BYTE PTR [rax],ah
  4548a0:	and    BYTE PTR [rax],ah
  4548a2:	and    BYTE PTR [rax],ah
  4548a4:	and    BYTE PTR [rbx+rax*2],bh
  4548a7:	outs   dx,DWORD PTR ds:[rsi]
  4548a8:	ins    DWORD PTR es:[rdi],dx
  4548a9:	ins    DWORD PTR es:[rdi],dx
  4548aa:	(bad)  
  4548ab:	outs   dx,BYTE PTR ds:[rsi]
  4548ac:	and    BYTE PTR fs:[rcx+rdi*2+0x70],dl
  4548b1:	gs cmp eax,0x65704f22
  4548b7:	outs   dx,BYTE PTR ds:[rsi]
  4548b8:	imul   r13d,DWORD PTR [rbp+r12*2+0x43],0x616d6d6f
  4548c1:	outs   dx,BYTE PTR ds:[rsi]
  4548c2:	and    bh,BYTE PTR fs:[rsi]
  4548c5:	or     eax,0x2020200a
  4548ca:	and    BYTE PTR [rax],ah
  4548cc:	and    BYTE PTR [rax],ah
  4548ce:	and    BYTE PTR [rax],ah
  4548d0:	and    BYTE PTR [rax],ah
  4548d2:	and    BYTE PTR [rax],ah
  4548d4:	and    BYTE PTR [rax],ah
  4548d6:	and    BYTE PTR [rsi+rax*2],bh
  4548d9:	imul   ebp,DWORD PTR [rbp+riz*2+0x4e],0x3e656d61
  4548e1:	push   0x3a707474
  4548e6:	(bad)  
  4548e7:	(bad)  
  4548e8:	outs   dx,DWORD PTR ds:[esi]
  4548ea:	cs ins DWORD PTR es:[rdi],dx
  4548ec:	imul   esp,DWORD PTR [rbx+0x72],0x666f736f
  4548f3:	je     0x454923
  4548f5:	movsxd ebp,DWORD PTR [rdi+0x6d]
  4548f8:	(bad)  
  4548f9:	data16 ja 0x454968
  4548fc:	imul   ebp,DWORD PTR [rsi+0x6b],0x694c3f2f
  454903:	outs   dx,BYTE PTR ds:[rsi]
  454904:	imul   ecx,DWORD PTR [rcx+0x44],0x3d
  454908:	xor    DWORD PTR [rax],esi
  45490a:	cmp    BYTE PTR [rdi],dh
  45490c:	xor    BYTE PTR [rsi],dh
  45490e:	cmp    al,0x2f
  454910:	imul   r13d,DWORD PTR [rbp+r12*2+0x4e],0x3e656d61
  454919:	or     eax,0x2020200a
  45491e:	and    BYTE PTR [rax],ah
  454920:	and    BYTE PTR [rax],ah
  454922:	and    BYTE PTR [rax],ah
  454924:	and    BYTE PTR [rax],ah
  454926:	and    BYTE PTR [rdi+rbp*1],bh
  454929:	rex.XB outs dx,DWORD PTR ds:[rsi]
  45492b:	ins    DWORD PTR es:[rdi],dx
  45492c:	ins    DWORD PTR es:[rdi],dx
  45492d:	(bad)  
  45492e:	outs   dx,BYTE PTR ds:[rsi]
  45492f:	fs ds or eax,0x2020200a
  454936:	and    BYTE PTR [rax],ah
  454938:	and    BYTE PTR [rax],ah
  45493a:	and    BYTE PTR [rdi+rbp*1],bh
  45493d:	rex.WB je 0x4549a5
  454940:	ins    DWORD PTR es:[rdi],dx
  454941:	ds or  eax,0x2020200a
  454947:	and    BYTE PTR [rax],ah
  454949:	and    BYTE PTR [rax],ah
  45494b:	and    BYTE PTR [rcx+rcx*2],bh
  45494e:	je     0x4549b5
  454950:	ins    DWORD PTR es:[rdi],dx
  454951:	ds or  eax,0x2020200a
  454957:	and    BYTE PTR [rax],ah
  454959:	and    BYTE PTR [rax],ah
  45495b:	and    BYTE PTR [rax],ah
  45495d:	and    BYTE PTR [rax],ah
  45495f:	and    BYTE PTR [rcx+rcx*2],bh
  454962:	movsxd ebp,DWORD PTR [rdi+0x6e]
  454965:	rex.WB outs dx,BYTE PTR ds:[rsi]
  454968:	je     0x4549cf
  45496a:	jb     0x4549da
  45496c:	gs je  0x4549c1
  45496f:	gs jae 0x4549e1
  454972:	jne    0x4549e6
  454974:	movsxd esp,DWORD PTR [rbp+0x73]
  454977:	cmp    al,0x2f
  454979:	movsxd rbp,DWORD PTR [r15+0x6e]
  45497d:	ds or  eax,0x2020200a
  454983:	and    BYTE PTR [rax],ah
  454985:	and    BYTE PTR [rax],ah
  454987:	and    BYTE PTR [rax],ah
  454989:	and    BYTE PTR [rax],ah
  45498b:	and    BYTE PTR [rsp+rdx*2],bh
  45498e:	imul   esi,DWORD PTR [rsp+rbp*2+0x65],0x73655220
  454996:	outs   dx,DWORD PTR ds:[rsi]
  454997:	jne    0x454a0b
  454999:	movsxd esp,DWORD PTR [rbp+0x49]
  45499c:	fs cmp eax,0x74654722
  4549a2:	je     0x454a0d
  4549a4:	outs   dx,BYTE PTR ds:[rsi]
  4549a5:	addr32 push rbx
  4549a7:	je     0x454a0a
  4549a9:	jb     0x454a1f
  4549ab:	gs fs push rdi
  4549ae:	imul   esi,DWORD PTR [rax+rbp*2+0x43],0x7473756c
  4549b6:	gs jb  0x454a22
  4549b9:	outs   dx,BYTE PTR ds:[rsi]
  4549ba:	and    ah,BYTE PTR [eax]
  4549bd:	(bad)  
  4549be:	ds or  eax,0x2020200a
  4549c4:	and    BYTE PTR [rax],ah
  4549c6:	and    BYTE PTR [rax],ah
  4549c8:	and    BYTE PTR [rax],ah
  4549ca:	and    BYTE PTR [rax],ah
  4549cc:	and    BYTE PTR [rsp+rax*2],bh
  4549cf:	gs jae 0x454a35
  4549d2:	jb     0x454a3d
  4549d4:	jo     0x454a4a
  4549d6:	imul   ebp,DWORD PTR [rdi+0x6e],0x73655220
  4549dd:	outs   dx,DWORD PTR ds:[rsi]
  4549de:	jne    0x454a52
  4549e0:	movsxd esp,DWORD PTR [rbp+0x49]
  4549e3:	fs cmp eax,0x74654722
  4549e9:	je     0x454a54
  4549eb:	outs   dx,BYTE PTR ds:[rsi]
  4549ec:	addr32 push rbx
  4549ee:	je     0x454a51
  4549f0:	jb     0x454a66
  4549f2:	gs fs push rdi
  4549f5:	imul   esi,DWORD PTR [rax+rbp*2+0x43],0x7473756c
  4549fd:	gs jb  0x454a69
  454a00:	outs   dx,BYTE PTR ds:[rsi]
  454a01:	addr32 rex.R
  454a03:	gs jae 0x454a69
  454a06:	jb     0x454a71
  454a08:	jo     0x454a7e
  454a0a:	imul   ebp,DWORD PTR [rdi+0x6e],0x3e2f2022
  454a11:	or     eax,0x2020200a
  454a16:	and    BYTE PTR [rax],ah
  454a18:	and    BYTE PTR [rax],ah
  454a1a:	and    BYTE PTR [rax],ah
  454a1c:	and    BYTE PTR [rax],ah
  454a1e:	and    BYTE PTR [rbx+rax*2],bh
  454a21:	outs   dx,DWORD PTR ds:[rsi]
  454a22:	ins    DWORD PTR es:[rdi],dx
  454a23:	ins    DWORD PTR es:[rdi],dx
  454a24:	(bad)  
  454a25:	outs   dx,BYTE PTR ds:[rsi]
  454a26:	and    BYTE PTR fs:[rcx+rdi*2+0x70],dl
  454a2b:	gs cmp eax,0x65704f22
  454a31:	outs   dx,BYTE PTR ds:[rsi]
  454a32:	imul   r13d,DWORD PTR [rbp+r12*2+0x43],0x616d6d6f
  454a3b:	outs   dx,BYTE PTR ds:[rsi]
  454a3c:	and    bh,BYTE PTR fs:[rsi]
  454a3f:	or     eax,0x2020200a
  454a44:	and    BYTE PTR [rax],ah
  454a46:	and    BYTE PTR [rax],ah
  454a48:	and    BYTE PTR [rax],ah
  454a4a:	and    BYTE PTR [rax],ah
  454a4c:	and    BYTE PTR [rax],ah
  454a4e:	and    BYTE PTR [rax],ah
  454a50:	and    BYTE PTR [rsi+rax*2],bh
  454a53:	imul   ebp,DWORD PTR [rbp+riz*2+0x4e],0x3e656d61
  454a5b:	push   0x3a707474
  454a60:	(bad)  
  454a61:	(bad)  
  454a62:	outs   dx,DWORD PTR ds:[esi]
  454a64:	cs ins DWORD PTR es:[rdi],dx
  454a66:	imul   esp,DWORD PTR [rbx+0x72],0x666f736f
  454a6d:	je     0x454a9d
  454a6f:	movsxd ebp,DWORD PTR [rdi+0x6d]
  454a72:	(bad)  
  454a73:	data16 ja 0x454ae2
  454a76:	imul   ebp,DWORD PTR [rsi+0x6b],0x694c3f2f
  454a7d:	outs   dx,BYTE PTR ds:[rsi]
  454a7e:	imul   ecx,DWORD PTR [rcx+0x64],0x3d
  454a82:	xor    DWORD PTR [rcx],esi
  454a84:	xor    eax,0x3c363438
  454a89:	(bad)  
  454a8a:	imul   r13d,DWORD PTR [rbp+r12*2+0x4e],0x3e656d61
  454a93:	or     eax,0x2020200a
  454a98:	and    BYTE PTR [rax],ah
  454a9a:	and    BYTE PTR [rax],ah
  454a9c:	and    BYTE PTR [rax],ah
  454a9e:	and    BYTE PTR [rax],ah
  454aa0:	and    BYTE PTR [rdi+rbp*1],bh
  454aa3:	rex.XB outs dx,DWORD PTR ds:[rsi]
  454aa5:	ins    DWORD PTR es:[rdi],dx
  454aa6:	ins    DWORD PTR es:[rdi],dx
  454aa7:	(bad)  
  454aa8:	outs   dx,BYTE PTR ds:[rsi]
  454aa9:	fs ds or eax,0x2020200a
  454ab0:	and    BYTE PTR [rax],ah
  454ab2:	and    BYTE PTR [rax],ah
  454ab4:	and    BYTE PTR [rdi+rbp*1],bh
  454ab7:	rex.WB je 0x454b1f
  454aba:	ins    DWORD PTR es:[rdi],dx
  454abb:	ds or  eax,0x2020200a
  454ac1:	and    BYTE PTR [rax],ah
  454ac3:	and    BYTE PTR [rax],ah
  454ac5:	and    BYTE PTR [rcx+rcx*2],bh
  454ac8:	je     0x454b2f
  454aca:	ins    DWORD PTR es:[rdi],dx
  454acb:	ds or  eax,0x2020200a
  454ad1:	and    BYTE PTR [rax],ah
  454ad3:	and    BYTE PTR [rax],ah
  454ad5:	and    BYTE PTR [rax],ah
  454ad7:	and    BYTE PTR [rax],ah
  454ad9:	and    BYTE PTR [rcx+rcx*2],bh
  454adc:	movsxd ebp,DWORD PTR [rdi+0x6e]
  454adf:	rex.WB outs dx,BYTE PTR ds:[rsi]
  454ae2:	je     0x454b49
  454ae4:	jb     0x454b54
  454ae6:	gs je  0x454b3b
  454ae9:	gs jae 0x454b5b
  454aec:	jne    0x454b60
  454aee:	movsxd esp,DWORD PTR [rbp+0x73]
  454af1:	cmp    al,0x2f
  454af3:	movsxd rbp,DWORD PTR [r15+0x6e]
  454af7:	ds or  eax,0x2020200a
  454afd:	and    BYTE PTR [rax],ah
  454aff:	and    BYTE PTR [rax],ah
  454b01:	and    BYTE PTR [rax],ah
  454b03:	and    BYTE PTR [rax],ah
  454b05:	and    BYTE PTR [rsp+rdx*2],bh
  454b08:	imul   esi,DWORD PTR [rsp+rbp*2+0x65],0x73655220
  454b10:	outs   dx,DWORD PTR ds:[rsi]
  454b11:	jne    0x454b85
  454b13:	movsxd esp,DWORD PTR [rbp+0x49]
  454b16:	fs cmp eax,0x67705522
  454b1c:	jb     0x454b7f
  454b1e:	fs rex.R outs dx,DWORD PTR gs:[rsi]
  454b22:	movsxd esi,DWORD PTR [rbp+0x6d]
  454b25:	outs   dx,BYTE PTR gs:[rsi]
  454b27:	je     0x454b8a
  454b29:	je     0x454b94
  454b2b:	outs   dx,DWORD PTR ds:[rsi]
  454b2c:	outs   dx,BYTE PTR ds:[rsi]
  454b2d:	and    ah,BYTE PTR [rax]
  454b2f:	(bad)  
  454b30:	ds or  eax,0x2020200a
  454b36:	and    BYTE PTR [rax],ah
  454b38:	and    BYTE PTR [rax],ah
  454b3a:	and    BYTE PTR [rax],ah
  454b3c:	and    BYTE PTR [rax],ah
  454b3e:	and    BYTE PTR [rsp+rax*2],bh
  454b41:	gs jae 0x454ba7
  454b44:	jb     0x454baf
  454b46:	jo     0x454bbc
  454b48:	imul   ebp,DWORD PTR [rdi+0x6e],0x73655220
  454b4f:	outs   dx,DWORD PTR ds:[rsi]
  454b50:	jne    0x454bc4
  454b52:	movsxd esp,DWORD PTR [rbp+0x49]
  454b55:	fs cmp eax,0x67705522
  454b5b:	jb     0x454bbe
  454b5d:	fs rex.R outs dx,DWORD PTR gs:[rsi]
  454b61:	movsxd esi,DWORD PTR [rbp+0x6d]
  454b64:	outs   dx,BYTE PTR gs:[rsi]
  454b66:	je     0x454bc9
  454b68:	je     0x454bd3
  454b6a:	outs   dx,DWORD PTR ds:[rsi]
  454b6b:	outs   dx,BYTE PTR ds:[rsi]
  454b6c:	rex.R
  454b6d:	gs jae 0x454bd3
  454b70:	jb     0x454bdb
  454b72:	jo     0x454be8
  454b74:	imul   ebp,DWORD PTR [rdi+0x6e],0x3e2f2022
  454b7b:	or     eax,0x2020200a
  454b80:	and    BYTE PTR [rax],ah
  454b82:	and    BYTE PTR [rax],ah
  454b84:	and    BYTE PTR [rax],ah
  454b86:	and    BYTE PTR [rax],ah
  454b88:	and    BYTE PTR [rbx+rax*2],bh
  454b8b:	outs   dx,DWORD PTR ds:[rsi]
  454b8c:	ins    DWORD PTR es:[rdi],dx
  454b8d:	ins    DWORD PTR es:[rdi],dx
  454b8e:	(bad)  
  454b8f:	outs   dx,BYTE PTR ds:[rsi]
  454b90:	and    BYTE PTR fs:[rcx+rdi*2+0x70],dl
  454b95:	gs cmp eax,0x65704f22
  454b9b:	outs   dx,BYTE PTR ds:[rsi]
  454b9c:	imul   r13d,DWORD PTR [rbp+r12*2+0x43],0x616d6d6f
  454ba5:	outs   dx,BYTE PTR ds:[rsi]
  454ba6:	and    bh,BYTE PTR fs:[rsi]
  454ba9:	or     eax,0x2020200a
  454bae:	and    BYTE PTR [rax],ah
  454bb0:	and    BYTE PTR [rax],ah
  454bb2:	and    BYTE PTR [rax],ah
  454bb4:	and    BYTE PTR [rax],ah
  454bb6:	and    BYTE PTR [rax],ah
  454bb8:	and    BYTE PTR [rax],ah
  454bba:	and    BYTE PTR [rsi+rax*2],bh
  454bbd:	imul   ebp,DWORD PTR [rbp+riz*2+0x4e],0x3e656d61
  454bc5:	push   0x3a707474
  454bca:	(bad)  
  454bcb:	(bad)  
  454bcc:	outs   dx,DWORD PTR ds:[esi]
  454bce:	cs ins DWORD PTR es:[rdi],dx
  454bd0:	imul   esp,DWORD PTR [rbx+0x72],0x666f736f
  454bd7:	je     0x454c07
  454bd9:	movsxd ebp,DWORD PTR [rdi+0x6d]
  454bdc:	(bad)  
  454bdd:	data16 ja 0x454c4c
  454be0:	imul   ebp,DWORD PTR [rsi+0x6b],0x694c3f2f
  454be7:	outs   dx,BYTE PTR ds:[rsi]
  454be8:	imul   ecx,DWORD PTR [rcx+0x64],0x3d
  454bec:	xor    DWORD PTR [rax],esi
  454bee:	cmp    BYTE PTR [rip+0x2f3c3332],dh        # 0x2f817f26
  454bf4:	imul   r13d,DWORD PTR [rbp+r12*2+0x4e],0x3e656d61
  454bfd:	or     eax,0x2020200a
  454c02:	and    BYTE PTR [rax],ah
  454c04:	and    BYTE PTR [rax],ah
  454c06:	and    BYTE PTR [rax],ah
  454c08:	and    BYTE PTR [rax],ah
  454c0a:	and    BYTE PTR [rdi+rbp*1],bh
  454c0d:	rex.XB outs dx,DWORD PTR ds:[rsi]
  454c0f:	ins    DWORD PTR es:[rdi],dx
  454c10:	ins    DWORD PTR es:[rdi],dx
  454c11:	(bad)  
  454c12:	outs   dx,BYTE PTR ds:[rsi]
  454c13:	fs ds or eax,0x2020200a
  454c1a:	and    BYTE PTR [rax],ah
  454c1c:	and    BYTE PTR [rax],ah
  454c1e:	and    BYTE PTR [rdi+rbp*1],bh
  454c21:	rex.WB je 0x454c89
  454c24:	ins    DWORD PTR es:[rdi],dx
  454c25:	ds or  eax,0x2020200a
  454c2b:	and    BYTE PTR [rdi+rbp*1],bh
  454c2e:	push   rax
  454c2f:	(bad)  
  454c30:	addr32 gs ds or eax,0x2020200a
  454c38:	and    BYTE PTR [rax+rdx*2],bh
  454c3b:	(bad)  
  454c3c:	and    BYTE PTR gs:[ecx+edi*2+0x70],dl
  454c42:	gs cmp eax,0x61745322
  454c48:	outs   dx,BYTE PTR ds:[rsi]
  454c49:	fs (bad) 
  454c4b:	jb     0x454cb1
  454c4d:	push   rax
  454c4e:	(bad)  
  454c4f:	and    bh,BYTE PTR gs:[esi]
  454c53:	or     eax,0x2020200a
  454c58:	and    BYTE PTR [rax],ah
  454c5a:	and    BYTE PTR [rax],ah
  454c5c:	and    BYTE PTR [rsp+rdx*2],bh
  454c5f:	imul   esi,DWORD PTR [rsp+rbp*2+0x65],0x73655220
  454c67:	outs   dx,DWORD PTR ds:[rsi]
  454c68:	jne    0x454cdc
  454c6a:	movsxd esp,DWORD PTR [rbp+0x49]
  454c6d:	fs cmp eax,0x736e4922
  454c73:	je     0x454cd6
  454c75:	ins    BYTE PTR es:[rdi],dx
  454c76:	ins    BYTE PTR es:[rdi],dx
  454c77:	(bad)  
  454c78:	je     0x454ce3
  454c7a:	outs   dx,DWORD PTR ds:[rsi]
  454c7b:	outs   dx,BYTE PTR ds:[rsi]
  454c7c:	push   rax
  454c7d:	(bad)  
  454c7e:	and    ah,BYTE PTR gs:[eax]
  454c82:	(bad)  
  454c83:	ds or  eax,0x2020200a
  454c89:	and    BYTE PTR [rax],ah
  454c8b:	and    BYTE PTR [rax],ah
  454c8d:	and    BYTE PTR [rcx+rcx*2],bh
  454c90:	je     0x454cf7
  454c92:	ins    DWORD PTR es:[rdi],dx
  454c93:	ds or  eax,0x2020200a
  454c99:	and    BYTE PTR [rax],ah
  454c9b:	and    BYTE PTR [rax],ah
  454c9d:	and    BYTE PTR [rax],ah
  454c9f:	and    BYTE PTR [rax],ah
  454ca1:	and    BYTE PTR [rcx+rcx*2],bh
  454ca4:	movsxd ebp,DWORD PTR [rdi+0x6e]
  454ca7:	rex.WB outs dx,BYTE PTR ds:[rsi]
  454caa:	jae    0x454d20
  454cac:	(bad)  
  454cad:	ins    BYTE PTR es:[rdi],dx
  454cae:	ins    BYTE PTR es:[rdi],dx
  454caf:	cmp    al,0x2f
  454cb1:	movsxd rbp,DWORD PTR [r15+0x6e]
  454cb5:	ds or  eax,0x2020200a
  454cbb:	and    BYTE PTR [rax],ah
  454cbd:	and    BYTE PTR [rax],ah
  454cbf:	and    BYTE PTR [rax],ah
  454cc1:	and    BYTE PTR [rax],ah
  454cc3:	and    BYTE PTR [rsp+rdx*2],bh
  454cc6:	imul   esi,DWORD PTR [rsp+rbp*2+0x65],0x73655220
  454cce:	outs   dx,DWORD PTR ds:[rsi]
  454ccf:	jne    0x454d43
  454cd1:	movsxd esp,DWORD PTR [rbp+0x49]
  454cd4:	fs cmp eax,0x736e4922
  454cda:	je     0x454d3d
  454cdc:	ins    BYTE PTR es:[rdi],dx
  454cdd:	ins    BYTE PTR es:[rdi],dx
  454cde:	and    ah,BYTE PTR [rax]
  454ce0:	(bad)  
  454ce1:	ds or  eax,0x2020200a
  454ce7:	and    BYTE PTR [rax],ah
  454ce9:	and    BYTE PTR [rax],ah
  454ceb:	and    BYTE PTR [rax],ah
  454ced:	and    BYTE PTR [rax],ah
  454cef:	and    BYTE PTR [rsp+rax*2],bh
  454cf2:	gs jae 0x454d58
  454cf5:	jb     0x454d60
  454cf7:	jo     0x454d6d
  454cf9:	imul   ebp,DWORD PTR [rdi+0x6e],0x73655220
  454d00:	outs   dx,DWORD PTR ds:[rsi]
  454d01:	jne    0x454d75
  454d03:	movsxd esp,DWORD PTR [rbp+0x49]
  454d06:	fs cmp eax,0x736e4922
  454d0c:	je     0x454d6f
  454d0e:	ins    BYTE PTR es:[rdi],dx
  454d0f:	ins    BYTE PTR es:[rdi],dx
  454d10:	rex.R
  454d11:	gs jae 0x454d77
  454d14:	jb     0x454d7f
  454d16:	jo     0x454d8c
  454d18:	imul   ebp,DWORD PTR [rdi+0x6e],0x3e2f2022
  454d1f:	or     eax,0x2020200a
  454d24:	and    BYTE PTR [rax],ah
  454d26:	and    BYTE PTR [rax],ah
  454d28:	and    BYTE PTR [rax],ah
  454d2a:	and    BYTE PTR [rax],ah
  454d2c:	and    BYTE PTR [rbx+rax*2],bh
  454d2f:	outs   dx,DWORD PTR ds:[rsi]
  454d30:	ins    DWORD PTR es:[rdi],dx
  454d31:	ins    DWORD PTR es:[rdi],dx
  454d32:	(bad)  
  454d33:	outs   dx,BYTE PTR ds:[rsi]
  454d34:	and    BYTE PTR fs:[rcx+rdi*2+0x70],dl
  454d39:	gs cmp eax,0x75614c22
  454d3f:	outs   dx,BYTE PTR ds:[rsi]
  454d40:	movsxd ebp,DWORD PTR [rax+0x53]
  454d43:	gs je  0x454dbb
  454d46:	jo     0x454d8b
  454d48:	outs   dx,DWORD PTR ds:[rsi]
  454d49:	ins    DWORD PTR es:[rdi],dx
  454d4a:	ins    DWORD PTR es:[rdi],dx
  454d4b:	(bad)  
  454d4c:	outs   dx,BYTE PTR ds:[rsi]
  454d4d:	and    bh,BYTE PTR fs:[rsi]
  454d50:	or     eax,0x2020200a
  454d55:	and    BYTE PTR [rax],ah
  454d57:	and    BYTE PTR [rax],ah
  454d59:	and    BYTE PTR [rax],ah
  454d5b:	and    BYTE PTR [rax],ah
  454d5d:	and    BYTE PTR [rax],ah
  454d5f:	and    BYTE PTR [rax],ah
  454d61:	and    BYTE PTR [rcx+rax*2],bh
  454d64:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  454d68:	outs   dx,BYTE PTR ds:[rsi]
  454d69:	ds rex.WB
  454d6b:	rex.WRX push rbx
  454d6d:	push   rsp
  454d6e:	rex.B
  454d6f:	rex.WR
  454d70:	rex.WR cmp al,0x2f
  454d73:	movsxd esi,DWORD PTR [r9+rbp*2+0x6f]
  454d78:	outs   dx,BYTE PTR ds:[rsi]
  454d79:	ds or  eax,0x2020200a
  454d7f:	and    BYTE PTR [rax],ah
  454d81:	and    BYTE PTR [rax],ah
  454d83:	and    BYTE PTR [rax],ah
  454d85:	and    BYTE PTR [rax],ah
  454d87:	and    BYTE PTR [rdi+rbp*1],bh
  454d8a:	rex.XB outs dx,DWORD PTR ds:[rsi]
  454d8c:	ins    DWORD PTR es:[rdi],dx
  454d8d:	ins    DWORD PTR es:[rdi],dx
  454d8e:	(bad)  
  454d8f:	outs   dx,BYTE PTR ds:[rsi]
  454d90:	fs ds or eax,0x2020200a
  454d97:	and    BYTE PTR [rax],ah
  454d99:	and    BYTE PTR [rax],ah
  454d9b:	and    BYTE PTR [rdi+rbp*1],bh
  454d9e:	rex.WB je 0x454e06
  454da1:	ins    DWORD PTR es:[rdi],dx
  454da2:	ds or  eax,0x2020200a
  454da8:	and    BYTE PTR [rax],ah
  454daa:	and    BYTE PTR [rax],ah
  454dac:	and    BYTE PTR [rcx+rcx*2],bh
  454daf:	je     0x454e16
  454db1:	ins    DWORD PTR es:[rdi],dx
  454db2:	ds or  eax,0x2020200a
  454db8:	and    BYTE PTR [rax],ah
  454dba:	and    BYTE PTR [rax],ah
  454dbc:	and    BYTE PTR [rax],ah
  454dbe:	and    BYTE PTR [rax],ah
  454dc0:	and    BYTE PTR [rcx+rcx*2],bh
  454dc3:	movsxd ebp,DWORD PTR [rdi+0x6e]
  454dc6:	rex.WB outs dx,BYTE PTR ds:[rsi]
  454dc9:	jae    0x454e3f
  454dcb:	(bad)  
  454dcc:	ins    BYTE PTR es:[rdi],dx
  454dcd:	ins    BYTE PTR es:[rdi],dx
  454dce:	cmp    al,0x2f
  454dd0:	movsxd rbp,DWORD PTR [r15+0x6e]
  454dd4:	ds or  eax,0x2020200a
  454dda:	and    BYTE PTR [rax],ah
  454ddc:	and    BYTE PTR [rax],ah
  454dde:	and    BYTE PTR [rax],ah
  454de0:	and    BYTE PTR [rax],ah
  454de2:	and    BYTE PTR [rsp+rdx*2],bh
  454de5:	imul   esi,DWORD PTR [rsp+rbp*2+0x65],0x73655220
  454ded:	outs   dx,DWORD PTR ds:[rsi]
  454dee:	jne    0x454e62
  454df0:	movsxd esp,DWORD PTR [rbp+0x49]
  454df3:	fs cmp eax,0x736e4922
  454df9:	je     0x454e5c
  454dfb:	ins    BYTE PTR es:[rdi],dx
  454dfc:	ins    BYTE PTR es:[rdi],dx
  454dfd:	rex.XB ins BYTE PTR es:[rdi],dx
  454dff:	jne    0x454e74
  454e01:	je     0x454e68
  454e03:	jb     0x454e27
  454e05:	and    BYTE PTR [rdi],ch
  454e07:	ds or  eax,0x2020200a
  454e0d:	and    BYTE PTR [rax],ah
  454e0f:	and    BYTE PTR [rax],ah
  454e11:	and    BYTE PTR [rax],ah
  454e13:	and    BYTE PTR [rax],ah
  454e15:	and    BYTE PTR [rsp+rax*2],bh
  454e18:	gs jae 0x454e7e
  454e1b:	jb     0x454e86
  454e1d:	jo     0x454e93
  454e1f:	imul   ebp,DWORD PTR [rdi+0x6e],0x73655220
  454e26:	outs   dx,DWORD PTR ds:[rsi]
  454e27:	jne    0x454e9b
  454e29:	movsxd esp,DWORD PTR [rbp+0x49]
  454e2c:	fs cmp eax,0x736e4922
  454e32:	je     0x454e95
  454e34:	ins    BYTE PTR es:[rdi],dx
  454e35:	ins    BYTE PTR es:[rdi],dx
  454e36:	rex.XB ins BYTE PTR es:[rdi],dx
  454e38:	jne    0x454ead
  454e3a:	je     0x454ea1
  454e3c:	jb     0x454e82
  454e3e:	gs jae 0x454ea4
  454e41:	jb     0x454eac
  454e43:	jo     0x454eb9
  454e45:	imul   ebp,DWORD PTR [rdi+0x6e],0x3e2f2022
  454e4c:	or     eax,0x2020200a
  454e51:	and    BYTE PTR [rax],ah
  454e53:	and    BYTE PTR [rax],ah
  454e55:	and    BYTE PTR [rax],ah
  454e57:	and    BYTE PTR [rax],ah
  454e59:	and    BYTE PTR [rbx+rax*2],bh
  454e5c:	outs   dx,DWORD PTR ds:[rsi]
  454e5d:	ins    DWORD PTR es:[rdi],dx
  454e5e:	ins    DWORD PTR es:[rdi],dx
  454e5f:	(bad)  
  454e60:	outs   dx,BYTE PTR ds:[rsi]
  454e61:	and    BYTE PTR fs:[rcx+rdi*2+0x70],dl
  454e66:	gs cmp eax,0x75614c22
  454e6c:	outs   dx,BYTE PTR ds:[rsi]
  454e6d:	movsxd ebp,DWORD PTR [rax+0x53]
  454e70:	gs je  0x454ee8
  454e73:	jo     0x454eb8
  454e75:	outs   dx,DWORD PTR ds:[rsi]
  454e76:	ins    DWORD PTR es:[rdi],dx
  454e77:	ins    DWORD PTR es:[rdi],dx
  454e78:	(bad)  
  454e79:	outs   dx,BYTE PTR ds:[rsi]
  454e7a:	and    bh,BYTE PTR fs:[rsi]
  454e7d:	or     eax,0x2020200a
  454e82:	and    BYTE PTR [rax],ah
  454e84:	and    BYTE PTR [rax],ah
  454e86:	and    BYTE PTR [rax],ah
  454e88:	and    BYTE PTR [rax],ah
  454e8a:	and    BYTE PTR [rax],ah
  454e8c:	and    BYTE PTR [rax],ah
  454e8e:	and    BYTE PTR [rcx+rax*2],bh
  454e91:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  454e95:	outs   dx,BYTE PTR ds:[rsi]
  454e96:	ds rex.WB
  454e98:	rex.WRX push rbx
  454e9a:	push   rsp
  454e9b:	rex.B
  454e9c:	rex.WR
  454e9d:	rex.WR
  454e9e:	rex.RX
  454e9f:	rex.B
  454ea0:	rex.WB
  454ea1:	rex.WR
  454ea2:	rex.WRXB push r14
  454ea4:	rex.RB push r10
  454ea6:	rex.XB
  454ea7:	rex.WR push rbp
  454ea9:	push   rbx
  454eaa:	push   rsp
  454eab:	rex.RB push r10
  454ead:	cmp    al,0x2f
  454eaf:	movsxd esi,DWORD PTR [r9+rbp*2+0x6f]
  454eb4:	outs   dx,BYTE PTR ds:[rsi]
  454eb5:	ds or  eax,0x2020200a
  454ebb:	and    BYTE PTR [rax],ah
  454ebd:	and    BYTE PTR [rax],ah
  454ebf:	and    BYTE PTR [rax],ah
  454ec1:	and    BYTE PTR [rax],ah
  454ec3:	and    BYTE PTR [rdi+rbp*1],bh
  454ec6:	rex.XB outs dx,DWORD PTR ds:[rsi]
  454ec8:	ins    DWORD PTR es:[rdi],dx
  454ec9:	ins    DWORD PTR es:[rdi],dx
  454eca:	(bad)  
  454ecb:	outs   dx,BYTE PTR ds:[rsi]
  454ecc:	fs ds or eax,0x2020200a
  454ed3:	and    BYTE PTR [rax],ah
  454ed5:	and    BYTE PTR [rax],ah
  454ed7:	and    BYTE PTR [rdi+rbp*1],bh
  454eda:	rex.WB je 0x454f42
  454edd:	ins    DWORD PTR es:[rdi],dx
  454ede:	ds or  eax,0x2020200a
  454ee4:	and    BYTE PTR [rax],ah
  454ee6:	and    BYTE PTR [rax],ah
  454ee8:	and    BYTE PTR [rcx+rcx*2],bh
  454eeb:	je     0x454f52
  454eed:	ins    DWORD PTR es:[rdi],dx
  454eee:	ds or  eax,0x2020200a
  454ef4:	and    BYTE PTR [rax],ah
  454ef6:	and    BYTE PTR [rax],ah
  454ef8:	and    BYTE PTR [rax],ah
  454efa:	and    BYTE PTR [rax],ah
  454efc:	and    BYTE PTR [rcx+rcx*2],bh
  454eff:	movsxd ebp,DWORD PTR [rdi+0x6e]
  454f02:	ds rex.WRB (bad) 
  454f05:	imul   ebp,DWORD PTR [rsi+0x74],0x6e616e65
  454f0c:	movsxd esp,DWORD PTR [rbp+0x41]
  454f0f:	fs fs rex.WRXB jb 0x454f66
  454f14:	gs ins DWORD PTR es:[rdi],dx
  454f16:	outs   dx,DWORD PTR ds:[rsi]
  454f17:	jbe    0x454f7e
  454f19:	rex.RX
  454f1a:	gs (bad) 
  454f1c:	je     0x454f93
  454f1e:	jb     0x454f85
  454f20:	jae    0x454f5e
  454f22:	(bad)  
  454f23:	movsxd rbp,DWORD PTR [r15+0x6e]
  454f27:	ds or  eax,0x2020200a
  454f2d:	and    BYTE PTR [rax],ah
  454f2f:	and    BYTE PTR [rax],ah
  454f31:	and    BYTE PTR [rax],ah
  454f33:	and    BYTE PTR [rax],ah
  454f35:	and    BYTE PTR [rsp+rdx*2],bh
  454f38:	imul   esi,DWORD PTR [rsp+rbp*2+0x65],0x73655220
  454f40:	outs   dx,DWORD PTR ds:[rsi]
  454f41:	jne    0x454fb5
  454f43:	movsxd esp,DWORD PTR [rbp+0x49]
  454f46:	fs cmp eax,0x64644122
  454f4c:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  454f4e:	fs and ah,BYTE PTR gs:[rax]
  454f52:	(bad)  
  454f53:	ds or  eax,0x2020200a
  454f59:	and    BYTE PTR [rax],ah
  454f5b:	and    BYTE PTR [rax],ah
  454f5d:	and    BYTE PTR [rax],ah
  454f5f:	and    BYTE PTR [rax],ah
  454f61:	and    BYTE PTR [rsp+rax*2],bh
  454f64:	gs jae 0x454fca
  454f67:	jb     0x454fd2
  454f69:	jo     0x454fdf
  454f6b:	imul   ebp,DWORD PTR [rdi+0x6e],0x73655220
  454f72:	outs   dx,DWORD PTR ds:[rsi]
  454f73:	jne    0x454fe7
  454f75:	movsxd esp,DWORD PTR [rbp+0x49]
  454f78:	fs cmp eax,0x64644122
  454f7e:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  454f80:	fs gs rex.R
  454f83:	gs jae 0x454fe9
  454f86:	jb     0x454ff1
  454f88:	jo     0x454ffe
  454f8a:	imul   ebp,DWORD PTR [rdi+0x6e],0x3e2f2022
  454f91:	or     eax,0x2020200a
  454f96:	and    BYTE PTR [rax],ah
  454f98:	and    BYTE PTR [rax],ah
  454f9a:	and    BYTE PTR [rax],ah
  454f9c:	and    BYTE PTR [rax],ah
  454f9e:	and    BYTE PTR [rbx+rax*2],bh
  454fa1:	outs   dx,DWORD PTR ds:[rsi]
  454fa2:	ins    DWORD PTR es:[rdi],dx
  454fa3:	ins    DWORD PTR es:[rdi],dx
  454fa4:	(bad)  
  454fa5:	outs   dx,BYTE PTR ds:[rsi]
  454fa6:	and    BYTE PTR fs:[rcx+rdi*2+0x70],dl
  454fab:	gs cmp eax,0x75614c22
  454fb1:	outs   dx,BYTE PTR ds:[rsi]
  454fb2:	movsxd ebp,DWORD PTR [rax+0x53]
  454fb5:	gs je  0x45502d
  454fb8:	jo     0x454ffd
  454fba:	outs   dx,DWORD PTR ds:[rsi]
  454fbb:	ins    DWORD PTR es:[rdi],dx
  454fbc:	ins    DWORD PTR es:[rdi],dx
  454fbd:	(bad)  
  454fbe:	outs   dx,BYTE PTR ds:[rsi]
  454fbf:	and    bh,BYTE PTR fs:[rsi]
  454fc2:	or     eax,0x2020200a
  454fc7:	and    BYTE PTR [rax],ah
  454fc9:	and    BYTE PTR [rax],ah
  454fcb:	and    BYTE PTR [rax],ah
  454fcd:	and    BYTE PTR [rax],ah
  454fcf:	and    BYTE PTR [rax],ah
  454fd1:	and    BYTE PTR [rax],ah
  454fd3:	and    BYTE PTR [rcx+rax*2],bh
  454fd6:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  454fda:	outs   dx,BYTE PTR ds:[rsi]
  454fdb:	ds rex.B
  454fdd:	rex.R
  454fde:	rex.R
  454fdf:	rex.WRX
  454fe0:	rex.WRXB
  454fe1:	rex.R
  454fe2:	rex.RB cmp al,0x2f
  454fe5:	movsxd esi,DWORD PTR [r9+rbp*2+0x6f]
  454fea:	outs   dx,BYTE PTR ds:[rsi]
  454feb:	ds or  eax,0x2020200a
  454ff1:	and    BYTE PTR [rax],ah
  454ff3:	and    BYTE PTR [rax],ah
  454ff5:	and    BYTE PTR [rax],ah
  454ff7:	and    BYTE PTR [rax],ah
  454ff9:	and    BYTE PTR [rdi+rbp*1],bh
  454ffc:	rex.XB outs dx,DWORD PTR ds:[rsi]
  454ffe:	ins    DWORD PTR es:[rdi],dx
  454fff:	ins    DWORD PTR es:[rdi],dx
  455000:	(bad)  
  455001:	outs   dx,BYTE PTR ds:[rsi]
  455002:	fs ds or eax,0x2020200a
  455009:	and    BYTE PTR [rax],ah
  45500b:	and    BYTE PTR [rax],ah
  45500d:	and    BYTE PTR [rdi+rbp*1],bh
  455010:	rex.WB je 0x455078
  455013:	ins    DWORD PTR es:[rdi],dx
  455014:	ds or  eax,0x3c09090a
  45501a:	rex.WB je 0x455082
  45501d:	ins    DWORD PTR es:[rdi],dx
  45501e:	ds or  eax,0x909090a
  455024:	cmp    al,0x49
  455026:	movsxd ebp,DWORD PTR [rdi+0x6e]
  455029:	ds push rbp
  45502b:	jo     0x455094
  45502d:	jb     0x455090
  45502f:	fs gs cmp al,0x2f
  455033:	movsxd rbp,DWORD PTR [r15+0x6e]
  455037:	ds or  eax,0x909090a
  45503d:	cmp    al,0x54
  45503f:	imul   esi,DWORD PTR [rsp+rbp*2+0x65],0x73655220
  455047:	outs   dx,DWORD PTR ds:[rsi]
  455048:	jne    0x4550bc
  45504a:	movsxd esp,DWORD PTR [rbp+0x49]
  45504d:	fs cmp eax,0x67705522
  455053:	jb     0x4550b6
  455055:	fs and ah,BYTE PTR gs:[rax]
  455059:	(bad)  
  45505a:	ds or  eax,0x909090a
  455060:	cmp    al,0x44
  455062:	gs jae 0x4550c8
  455065:	jb     0x4550d0
  455067:	jo     0x4550dd
  455069:	imul   ebp,DWORD PTR [rdi+0x6e],0x73655220
  455070:	outs   dx,DWORD PTR ds:[rsi]
  455071:	jne    0x4550e5
  455073:	movsxd esp,DWORD PTR [rbp+0x49]
  455076:	fs cmp eax,0x67705522
  45507c:	jb     0x4550df
  45507e:	fs gs rex.R
  455081:	gs jae 0x4550e7
  455084:	jb     0x4550ef
  455086:	jo     0x4550fc
  455088:	imul   ebp,DWORD PTR [rdi+0x6e],0x3e2f2022
  45508f:	or     eax,0x909090a
  455094:	cmp    al,0x43
  455096:	outs   dx,DWORD PTR ds:[rsi]
  455097:	ins    DWORD PTR es:[rdi],dx
  455098:	ins    DWORD PTR es:[rdi],dx
  455099:	(bad)  
  45509a:	outs   dx,BYTE PTR ds:[rsi]
  45509b:	and    BYTE PTR fs:[rcx+rdi*2+0x70],dl
  4550a0:	gs cmp eax,0x75614c22
  4550a6:	outs   dx,BYTE PTR ds:[rsi]
  4550a7:	movsxd ebp,DWORD PTR [rax+0x53]
  4550aa:	gs je  0x455122
  4550ad:	jo     0x4550f2
  4550af:	outs   dx,DWORD PTR ds:[rsi]
  4550b0:	ins    DWORD PTR es:[rdi],dx
  4550b1:	ins    DWORD PTR es:[rdi],dx
  4550b2:	(bad)  
  4550b3:	outs   dx,BYTE PTR ds:[rsi]
  4550b4:	and    bh,BYTE PTR fs:[rsi]
  4550b7:	or     eax,0x909090a
  4550bc:	or     DWORD PTR [rcx+rax*2],edi
  4550bf:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  4550c3:	outs   dx,BYTE PTR ds:[rsi]
  4550c4:	ds push rbp
  4550c6:	push   rax
  4550c7:	rex.RXB push r10
  4550c9:	rex.B
  4550ca:	rex.R
  4550cb:	rex.RB cmp al,0x2f
  4550ce:	movsxd esi,DWORD PTR [r9+rbp*2+0x6f]
  4550d3:	outs   dx,BYTE PTR ds:[rsi]
  4550d4:	ds or  eax,0x909090a
  4550da:	cmp    al,0x2f
  4550dc:	rex.XB outs dx,DWORD PTR ds:[rsi]
  4550de:	ins    DWORD PTR es:[rdi],dx
  4550df:	ins    DWORD PTR es:[rdi],dx
  4550e0:	(bad)  
  4550e1:	outs   dx,BYTE PTR ds:[rsi]
  4550e2:	fs ds or eax,0x3c09090a
  4550e9:	(bad)  
  4550ea:	rex.WB je 0x455152
  4550ed:	ins    DWORD PTR es:[rdi],dx
  4550ee:	ds or  eax,0x3c09090a
  4550f4:	rex.WB je 0x45515c
  4550f7:	ins    DWORD PTR es:[rdi],dx
  4550f8:	ds or  eax,0x2020200a
  4550fe:	and    BYTE PTR [rax],ah
  455100:	and    BYTE PTR [rax],ah
  455102:	and    BYTE PTR [rax],ah
  455104:	and    BYTE PTR [rax],ah
  455106:	and    BYTE PTR [rcx+rcx*2],bh
  455109:	movsxd ebp,DWORD PTR [rdi+0x6e]
  45510c:	rex.WB outs dx,BYTE PTR ds:[rsi]
  45510f:	je     0x455176
  455111:	jb     0x455181
  455113:	gs je  0x455168
  455116:	gs jae 0x455188
  455119:	jne    0x45518d
  45511b:	movsxd esp,DWORD PTR [rbp+0x73]
  45511e:	cmp    al,0x2f
  455120:	movsxd rbp,DWORD PTR [r15+0x6e]
  455124:	ds or  eax,0x2020200a
  45512a:	and    BYTE PTR [rax],ah
  45512c:	and    BYTE PTR [rax],ah
  45512e:	and    BYTE PTR [rax],ah
  455130:	and    BYTE PTR [rax],ah
  455132:	and    BYTE PTR [rsp+rdx*2],bh
  455135:	imul   esi,DWORD PTR [rsp+rbp*2+0x65],0x73655220
  45513d:	outs   dx,DWORD PTR ds:[rsi]
  45513e:	jne    0x4551b2
  455140:	movsxd esp,DWORD PTR [rbp+0x49]
  455143:	fs cmp eax,0x65684322
  455149:	movsxd ebp,DWORD PTR [rbx+0x46]
  45514c:	outs   dx,DWORD PTR ds:[rsi]
  45514d:	jb     0x4551a4
  45514f:	jo     0x4551b5
  455151:	(bad)  
  455152:	je     0x4551b9
  455154:	jae    0x455178
  455156:	and    BYTE PTR [rdi],ch
  455158:	ds or  eax,0x2020200a
  45515e:	and    BYTE PTR [rax],ah
  455160:	and    BYTE PTR [rax],ah
  455162:	and    BYTE PTR [rax],ah
  455164:	and    BYTE PTR [rax],ah
  455166:	and    BYTE PTR [rsp+rax*2],bh
  455169:	gs jae 0x4551cf
  45516c:	jb     0x4551d7
  45516e:	jo     0x4551e4
  455170:	imul   ebp,DWORD PTR [rdi+0x6e],0x73655220
  455177:	outs   dx,DWORD PTR ds:[rsi]
  455178:	jne    0x4551ec
  45517a:	movsxd esp,DWORD PTR [rbp+0x49]
  45517d:	fs cmp eax,0x65684322
  455183:	movsxd ebp,DWORD PTR [rbx+0x46]
  455186:	outs   dx,DWORD PTR ds:[rsi]
  455187:	jb     0x4551de
  455189:	jo     0x4551ef
  45518b:	(bad)  
  45518c:	je     0x4551f3
  45518e:	jae    0x4551d4
  455190:	gs jae 0x4551f6
  455193:	jb     0x4551fe
  455195:	jo     0x45520b
  455197:	imul   ebp,DWORD PTR [rdi+0x6e],0x3e2f2022
  45519e:	or     eax,0x2020200a
  4551a3:	and    BYTE PTR [rax],ah
  4551a5:	and    BYTE PTR [rax],ah
  4551a7:	and    BYTE PTR [rax],ah
  4551a9:	and    BYTE PTR [rax],ah
  4551ab:	and    BYTE PTR [rbx+rax*2],bh
  4551ae:	outs   dx,DWORD PTR ds:[rsi]
  4551af:	ins    DWORD PTR es:[rdi],dx
  4551b0:	ins    DWORD PTR es:[rdi],dx
  4551b1:	(bad)  
  4551b2:	outs   dx,BYTE PTR ds:[rsi]
  4551b3:	and    BYTE PTR fs:[rcx+rdi*2+0x70],dl
  4551b8:	gs cmp eax,0x65704f22
  4551be:	outs   dx,BYTE PTR ds:[rsi]
  4551bf:	imul   r13d,DWORD PTR [rbp+r12*2+0x43],0x616d6d6f
  4551c8:	outs   dx,BYTE PTR ds:[rsi]
  4551c9:	and    bh,BYTE PTR fs:[rsi]
  4551cc:	or     eax,0x2020200a
  4551d1:	and    BYTE PTR [rax],ah
  4551d3:	and    BYTE PTR [rax],ah
  4551d5:	and    BYTE PTR [rax],ah
  4551d7:	and    BYTE PTR [rax],ah
  4551d9:	and    BYTE PTR [rax],ah
  4551db:	and    BYTE PTR [rax],ah
  4551dd:	and    BYTE PTR [rsi+rax*2],bh
  4551e0:	imul   ebp,DWORD PTR [rbp+riz*2+0x4e],0x3e656d61
  4551e8:	push   0x3a707474
  4551ed:	(bad)  
  4551ee:	(bad)  
  4551ef:	outs   dx,DWORD PTR ds:[esi]
  4551f1:	cs ins DWORD PTR es:[rdi],dx
  4551f3:	imul   esp,DWORD PTR [rbx+0x72],0x666f736f
  4551fa:	je     0x45522a
  4551fc:	movsxd ebp,DWORD PTR [rdi+0x6d]
  4551ff:	(bad)  
  455200:	data16 ja 0x45526f
  455203:	imul   ebp,DWORD PTR [rsi+0x6b],0x696c3f2f
  45520a:	outs   dx,BYTE PTR ds:[rsi]
  45520b:	imul   ebp,DWORD PTR [rcx+0x64],0x3d
  45520f:	cmp    BYTE PTR [rbx],dh
  455211:	xor    al,0x32
  455213:	xor    al,0x3c
  455215:	(bad)  
  455216:	imul   r13d,DWORD PTR [rbp+r12*2+0x4e],0x3e656d61
  45521f:	or     eax,0x2020200a
  455224:	and    BYTE PTR [rax],ah
  455226:	and    BYTE PTR [rax],ah
  455228:	and    BYTE PTR [rax],ah
  45522a:	and    BYTE PTR [rax],ah
  45522c:	and    BYTE PTR [rdi+rbp*1],bh
  45522f:	rex.XB outs dx,DWORD PTR ds:[rsi]
  455231:	ins    DWORD PTR es:[rdi],dx
  455232:	ins    DWORD PTR es:[rdi],dx
  455233:	(bad)  
  455234:	outs   dx,BYTE PTR ds:[rsi]
  455235:	fs ds or eax,0x2020200a
  45523c:	and    BYTE PTR [rax],ah
  45523e:	and    BYTE PTR [rax],ah
  455240:	and    BYTE PTR [rdi+rbp*1],bh
  455243:	rex.WB je 0x4552ab
  455246:	ins    DWORD PTR es:[rdi],dx
  455247:	ds or  eax,0x2020200a
  45524d:	and    BYTE PTR [rdi+rbp*1],bh
  455250:	push   rax
  455251:	(bad)  
  455252:	addr32 gs ds or eax,0x2020200a
  45525a:	and    BYTE PTR [rax+rdx*2],bh
  45525d:	(bad)  
  45525e:	and    BYTE PTR gs:[ecx+edi*2+0x70],dl
  455264:	gs cmp eax,0x61745322
  45526a:	outs   dx,BYTE PTR ds:[rsi]
  45526b:	fs (bad) 
  45526d:	jb     0x4552d3
  45526f:	push   rax
  455270:	(bad)  
  455271:	and    bh,BYTE PTR gs:[esi]
  455275:	or     eax,0x2020200a
  45527a:	and    BYTE PTR [rax],ah
  45527c:	and    BYTE PTR [rax],ah
  45527e:	and    BYTE PTR [rsp+rdx*2],bh
  455281:	imul   esi,DWORD PTR [rsp+rbp*2+0x65],0x73655220
  455289:	outs   dx,DWORD PTR ds:[rsi]
  45528a:	jne    0x4552fe
  45528c:	movsxd esp,DWORD PTR [rbp+0x49]
  45528f:	fs cmp eax,0x69614d22
  455295:	outs   dx,BYTE PTR ds:[rsi]
  455296:	je     0x4552fd
  455298:	outs   dx,BYTE PTR ds:[rsi]
  455299:	(bad)  
  45529a:	outs   dx,BYTE PTR ds:[rsi]
  45529b:	movsxd esp,DWORD PTR [rbp+0x50]
  45529e:	(bad)  
  45529f:	and    ah,BYTE PTR gs:[eax]
  4552a3:	(bad)  
  4552a4:	ds or  eax,0x2020200a
  4552aa:	and    BYTE PTR [rax],ah
  4552ac:	and    BYTE PTR [rax],ah
  4552ae:	and    BYTE PTR [rcx+rcx*2],bh
  4552b1:	je     0x455318
  4552b3:	ins    DWORD PTR es:[rdi],dx
  4552b4:	ds or  eax,0x2020200a
  4552ba:	and    BYTE PTR [rax],ah
  4552bc:	and    BYTE PTR [rax],ah
  4552be:	and    BYTE PTR [rax],ah
  4552c0:	and    BYTE PTR [rax],ah
  4552c2:	and    BYTE PTR [rcx+rcx*2],bh
  4552c5:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4552c8:	ds rex.WRB (bad) 
  4552cb:	imul   ebp,DWORD PTR [rsi+0x74],0x6e616e65
  4552d2:	movsxd esp,DWORD PTR [rbp+0x55]
  4552d5:	jo     0x45533e
  4552d7:	jb     0x45533a
  4552d9:	fs gs rex.RB
  4552dc:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x492f3c6e
  4552e5:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4552e8:	ds or  eax,0x2020200a
  4552ee:	and    BYTE PTR [rax],ah
  4552f0:	and    BYTE PTR [rax],ah
  4552f2:	and    BYTE PTR [rax],ah
  4552f4:	and    BYTE PTR [rax],ah
  4552f6:	and    BYTE PTR [rsp+rdx*2],bh
  4552f9:	imul   esi,DWORD PTR [rsp+rbp*2+0x65],0x73655220
  455301:	outs   dx,DWORD PTR ds:[rsi]
  455302:	jne    0x455376
  455304:	movsxd esp,DWORD PTR [rbp+0x49]
  455307:	fs cmp eax,0x69644522
  45530d:	je     0x455378
  45530f:	outs   dx,DWORD PTR ds:[rsi]
  455310:	outs   dx,BYTE PTR ds:[rsi]
  455311:	push   rbp
  455312:	jo     0x45537b
  455314:	jb     0x455377
  455316:	fs and ah,BYTE PTR gs:[rax]
  45531a:	(bad)  
  45531b:	ds or  eax,0x2020200a
  455321:	and    BYTE PTR [rax],ah
  455323:	and    BYTE PTR [rax],ah
  455325:	and    BYTE PTR [rax],ah
  455327:	and    BYTE PTR [rax],ah
  455329:	and    BYTE PTR [rsp+rax*2],bh
  45532c:	gs jae 0x455392
  45532f:	jb     0x45539a
  455331:	jo     0x4553a7
  455333:	imul   ebp,DWORD PTR [rdi+0x6e],0x73655220
  45533a:	outs   dx,DWORD PTR ds:[rsi]
  45533b:	jne    0x4553af
  45533d:	movsxd esp,DWORD PTR [rbp+0x49]
  455340:	fs cmp eax,0x69644522
  455346:	je     0x4553b1
  455348:	outs   dx,DWORD PTR ds:[rsi]
  455349:	outs   dx,BYTE PTR ds:[rsi]
  45534a:	push   rbp
  45534b:	jo     0x4553b4
  45534d:	jb     0x4553b0
  45534f:	fs gs rex.R
  455352:	gs jae 0x4553b8
  455355:	jb     0x4553c0
  455357:	jo     0x4553cd
  455359:	imul   ebp,DWORD PTR [rdi+0x6e],0x3e2f2022
  455360:	or     eax,0x2020200a
  455365:	and    BYTE PTR [rax],ah
  455367:	and    BYTE PTR [rax],ah
  455369:	and    BYTE PTR [rax],ah
  45536b:	and    BYTE PTR [rax],ah
  45536d:	and    BYTE PTR [rbx+rax*2],bh
  455370:	outs   dx,DWORD PTR ds:[rsi]
  455371:	ins    DWORD PTR es:[rdi],dx
  455372:	ins    DWORD PTR es:[rdi],dx
  455373:	(bad)  
  455374:	outs   dx,BYTE PTR ds:[rsi]
  455375:	and    BYTE PTR fs:[rcx+rdi*2+0x70],dl
  45537a:	gs cmp eax,0x75614c22
  455380:	outs   dx,BYTE PTR ds:[rsi]
  455381:	movsxd ebp,DWORD PTR [rax+0x53]
  455384:	gs je  0x4553fc
  455387:	jo     0x4553cc
  455389:	outs   dx,DWORD PTR ds:[rsi]
  45538a:	ins    DWORD PTR es:[rdi],dx
  45538b:	ins    DWORD PTR es:[rdi],dx
  45538c:	(bad)  
  45538d:	outs   dx,BYTE PTR ds:[rsi]
  45538e:	and    bh,BYTE PTR fs:[rsi]
  455391:	or     eax,0x2020200a
  455396:	and    BYTE PTR [rax],ah
  455398:	and    BYTE PTR [rax],ah
  45539a:	and    BYTE PTR [rax],ah
  45539c:	and    BYTE PTR [rax],ah
  45539e:	and    BYTE PTR [rax],ah
  4553a0:	and    BYTE PTR [rcx+rax*2],bh
  4553a3:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  4553a7:	outs   dx,BYTE PTR ds:[rsi]
  4553a8:	ds rex.RB
  4553aa:	rex.R
  4553ab:	rex.WB push r12
  4553ad:	rex.WB
  4553ae:	rex.WRXB
  4553af:	rex.WRX push rbp
  4553b1:	push   rax
  4553b2:	rex.RXB push r10
  4553b4:	rex.B
  4553b5:	rex.R
  4553b6:	rex.RB cmp al,0x2f
  4553b9:	movsxd esi,DWORD PTR [r9+rbp*2+0x6f]
  4553be:	outs   dx,BYTE PTR ds:[rsi]
  4553bf:	ds or  eax,0x2020200a
  4553c5:	and    BYTE PTR [rax],ah
  4553c7:	and    BYTE PTR [rax],ah
  4553c9:	and    BYTE PTR [rax],ah
  4553cb:	and    BYTE PTR [rax],ah
  4553cd:	and    BYTE PTR [rax],ah
  4553cf:	and    BYTE PTR [rdx+rdx*2],bh
  4553d2:	gs jno 0x45544a
  4553d5:	imul   esi,DWORD PTR [rdx+0x65],0x6964654d
  4553dc:	(bad)  
  4553dd:	ds data16 (bad) 
  4553e0:	ins    BYTE PTR es:[rdi],dx
  4553e1:	jae    0x455448
  4553e3:	cmp    al,0x2f
  4553e5:	push   rdx
  4553e6:	gs jno 0x45545e
  4553e9:	imul   esi,DWORD PTR [rdx+0x65],0x6964654d
  4553f0:	(bad)  
  4553f1:	ds or  eax,0x2020200a
  4553f7:	and    BYTE PTR [rax],ah
  4553f9:	and    BYTE PTR [rax],ah
  4553fb:	and    BYTE PTR [rax],ah
  4553fd:	and    BYTE PTR [rax],ah
  4553ff:	and    BYTE PTR [rdi+rbp*1],bh
  455402:	rex.XB outs dx,DWORD PTR ds:[rsi]
  455404:	ins    DWORD PTR es:[rdi],dx
  455405:	ins    DWORD PTR es:[rdi],dx
  455406:	(bad)  
  455407:	outs   dx,BYTE PTR ds:[rsi]
  455408:	fs ds or eax,0x2020200a
  45540f:	and    BYTE PTR [rax],ah
  455411:	and    BYTE PTR [rax],ah
  455413:	and    BYTE PTR [rdi+rbp*1],bh
  455416:	rex.WB je 0x45547e
  455419:	ins    DWORD PTR es:[rdi],dx
  45541a:	ds or  eax,0x2020200a
  455420:	and    BYTE PTR [rax],ah
  455422:	and    BYTE PTR [rax],ah
  455424:	and    BYTE PTR [rcx+rcx*2],bh
  455427:	je     0x45548e
  455429:	ins    DWORD PTR es:[rdi],dx
  45542a:	ds or  eax,0x2020200a
  455430:	and    BYTE PTR [rax],ah
  455432:	and    BYTE PTR [rax],ah
  455434:	and    BYTE PTR [rax],ah
  455436:	and    BYTE PTR [rax],ah
  455438:	and    BYTE PTR [rcx+rcx*2],bh
  45543b:	movsxd ebp,DWORD PTR [rdi+0x6e]
  45543e:	ds rex.WRB (bad) 
  455441:	imul   ebp,DWORD PTR [rsi+0x74],0x6e616e65
  455448:	movsxd esp,DWORD PTR [rbp+0x52]
  45544b:	gs jo  0x4554af
  45544e:	imul   esi,DWORD PTR [rdx+0x3c],0x6f63492f
  455455:	outs   dx,BYTE PTR ds:[rsi]
  455456:	ds or  eax,0x2020200a
  45545c:	and    BYTE PTR [rax],ah
  45545e:	and    BYTE PTR [rax],ah
  455460:	and    BYTE PTR [rax],ah
  455462:	and    BYTE PTR [rax],ah
  455464:	and    BYTE PTR [rsp+rdx*2],bh
  455467:	imul   esi,DWORD PTR [rsp+rbp*2+0x65],0x73655220
  45546f:	outs   dx,DWORD PTR ds:[rsi]
  455470:	jne    0x4554e4
  455472:	movsxd esp,DWORD PTR [rbp+0x49]
  455475:	fs cmp eax,0x70655222
  45547b:	(bad)  
  45547c:	imul   esi,DWORD PTR [rdx+0x22],0xd3e2f20
  455483:	or     ah,BYTE PTR [rax]
  455485:	and    BYTE PTR [rax],ah
  455487:	and    BYTE PTR [rax],ah
  455489:	and    BYTE PTR [rax],ah
  45548b:	and    BYTE PTR [rax],ah
  45548d:	and    BYTE PTR [rax],ah
  45548f:	and    BYTE PTR [rsp+rax*2],bh
  455492:	gs jae 0x4554f8
  455495:	jb     0x455500
  455497:	jo     0x45550d
  455499:	imul   ebp,DWORD PTR [rdi+0x6e],0x73655220
  4554a0:	outs   dx,DWORD PTR ds:[rsi]
  4554a1:	jne    0x455515
  4554a3:	movsxd esp,DWORD PTR [rbp+0x49]
  4554a6:	fs cmp eax,0x70655222
  4554ac:	(bad)  
  4554ad:	imul   esi,DWORD PTR [rdx+0x44],0x72637365
  4554b4:	imul   esi,DWORD PTR [rax+0x74],0x226e6f69
  4554bb:	and    BYTE PTR [rdi],ch
  4554bd:	ds or  eax,0x2020200a
  4554c3:	and    BYTE PTR [rax],ah
  4554c5:	and    BYTE PTR [rax],ah
  4554c7:	and    BYTE PTR [rax],ah
  4554c9:	and    BYTE PTR [rax],ah
  4554cb:	and    BYTE PTR [rbx+rax*2],bh
  4554ce:	outs   dx,DWORD PTR ds:[rsi]
  4554cf:	ins    DWORD PTR es:[rdi],dx
  4554d0:	ins    DWORD PTR es:[rdi],dx
  4554d1:	(bad)  
  4554d2:	outs   dx,BYTE PTR ds:[rsi]
  4554d3:	and    BYTE PTR fs:[rcx+rdi*2+0x70],dl
  4554d8:	gs cmp eax,0x75614c22
  4554de:	outs   dx,BYTE PTR ds:[rsi]
  4554df:	movsxd ebp,DWORD PTR [rax+0x53]
  4554e2:	gs je  0x45555a
  4554e5:	jo     0x45552a
  4554e7:	outs   dx,DWORD PTR ds:[rsi]
  4554e8:	ins    DWORD PTR es:[rdi],dx
  4554e9:	ins    DWORD PTR es:[rdi],dx
  4554ea:	(bad)  
  4554eb:	outs   dx,BYTE PTR ds:[rsi]
  4554ec:	and    bh,BYTE PTR fs:[rsi]
  4554ef:	or     eax,0x2020200a
  4554f4:	and    BYTE PTR [rax],ah
  4554f6:	and    BYTE PTR [rax],ah
  4554f8:	and    BYTE PTR [rax],ah
  4554fa:	and    BYTE PTR [rax],ah
  4554fc:	and    BYTE PTR [rax],ah
  4554fe:	and    BYTE PTR [rcx+rax*2],bh
  455501:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  455505:	outs   dx,BYTE PTR ds:[rsi]
  455506:	ds push rdx
  455508:	rex.RB push r8
  45550a:	rex.B
  45550b:	rex.WB push r10
  45550d:	cmp    al,0x2f
  45550f:	movsxd esi,DWORD PTR [r9+rbp*2+0x6f]
  455514:	outs   dx,BYTE PTR ds:[rsi]
  455515:	ds or  eax,0x2020200a
  45551b:	and    BYTE PTR [rax],ah
  45551d:	and    BYTE PTR [rax],ah
  45551f:	and    BYTE PTR [rax],ah
  455521:	and    BYTE PTR [rax],ah
  455523:	and    BYTE PTR [rdi+rbp*1],bh
  455526:	rex.XB outs dx,DWORD PTR ds:[rsi]
  455528:	ins    DWORD PTR es:[rdi],dx
  455529:	ins    DWORD PTR es:[rdi],dx
  45552a:	(bad)  
  45552b:	outs   dx,BYTE PTR ds:[rsi]
  45552c:	fs ds or eax,0x2020200a
  455533:	and    BYTE PTR [rax],ah
  455535:	and    BYTE PTR [rax],ah
  455537:	and    BYTE PTR [rdi+rbp*1],bh
  45553a:	rex.WB je 0x4555a2
  45553d:	ins    DWORD PTR es:[rdi],dx
  45553e:	ds or  eax,0x2020200a
  455544:	and    BYTE PTR [rax],ah
  455546:	and    BYTE PTR [rax],ah
  455548:	and    BYTE PTR [rcx+rcx*2],bh
  45554b:	je     0x4555b2
  45554d:	ins    DWORD PTR es:[rdi],dx
  45554e:	ds or  eax,0x2020200a
  455554:	and    BYTE PTR [rax],ah
  455556:	and    BYTE PTR [rax],ah
  455558:	and    BYTE PTR [rax],ah
  45555a:	and    BYTE PTR [rax],ah
  45555c:	and    BYTE PTR [rcx+rcx*2],bh
  45555f:	movsxd ebp,DWORD PTR [rdi+0x6e]
  455562:	ds rex.WRB (bad) 
  455565:	imul   ebp,DWORD PTR [rsi+0x74],0x6e616e65
  45556c:	movsxd esp,DWORD PTR [rbp+0x41]
  45556f:	fs fs rex.WRXB jb 0x4555c6
  455574:	gs ins DWORD PTR es:[rdi],dx
  455576:	outs   dx,DWORD PTR ds:[rsi]
  455577:	jbe    0x4555de
  455579:	rex.RX
  45557a:	gs (bad) 
  45557c:	je     0x4555f3
  45557e:	jb     0x4555e5
  455580:	jae    0x4555be
  455582:	(bad)  
  455583:	movsxd rbp,DWORD PTR [r15+0x6e]
  455587:	ds or  eax,0x2020200a
  45558d:	and    BYTE PTR [rax],ah
  45558f:	and    BYTE PTR [rax],ah
  455591:	and    BYTE PTR [rax],ah
  455593:	and    BYTE PTR [rax],ah
  455595:	and    BYTE PTR [rsp+rdx*2],bh
  455598:	imul   esi,DWORD PTR [rsp+rbp*2+0x65],0x73655220
  4555a0:	outs   dx,DWORD PTR ds:[rsi]
  4555a1:	jne    0x455615
  4555a3:	movsxd esp,DWORD PTR [rbp+0x49]
  4555a6:	fs cmp eax,0x6d655222
  4555ac:	outs   dx,DWORD PTR ds:[rsi]
  4555ad:	jbe    0x455614
  4555af:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  4555b1:	fs and ah,BYTE PTR gs:[rax]
  4555b5:	(bad)  
  4555b6:	ds or  eax,0x2020200a
  4555bc:	and    BYTE PTR [rax],ah
  4555be:	and    BYTE PTR [rax],ah
  4555c0:	and    BYTE PTR [rax],ah
  4555c2:	and    BYTE PTR [rax],ah
  4555c4:	and    BYTE PTR [rsp+rax*2],bh
  4555c7:	gs jae 0x45562d
  4555ca:	jb     0x455635
  4555cc:	jo     0x455642
  4555ce:	imul   ebp,DWORD PTR [rdi+0x6e],0x73655220
  4555d5:	outs   dx,DWORD PTR ds:[rsi]
  4555d6:	jne    0x45564a
  4555d8:	movsxd esp,DWORD PTR [rbp+0x49]
  4555db:	fs cmp eax,0x6d655222
  4555e1:	outs   dx,DWORD PTR ds:[rsi]
  4555e2:	jbe    0x455649
  4555e4:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  4555e6:	fs gs rex.R
  4555e9:	gs jae 0x45564f
  4555ec:	jb     0x455657
  4555ee:	jo     0x455664
  4555f0:	imul   ebp,DWORD PTR [rdi+0x6e],0x3e2f2022
  4555f7:	or     eax,0x2020200a
  4555fc:	and    BYTE PTR [rax],ah
  4555fe:	and    BYTE PTR [rax],ah
  455600:	and    BYTE PTR [rax],ah
  455602:	and    BYTE PTR [rax],ah
  455604:	and    BYTE PTR [rbx+rax*2],bh
  455607:	outs   dx,DWORD PTR ds:[rsi]
  455608:	ins    DWORD PTR es:[rdi],dx
  455609:	ins    DWORD PTR es:[rdi],dx
  45560a:	(bad)  
  45560b:	outs   dx,BYTE PTR ds:[rsi]
  45560c:	and    BYTE PTR fs:[rcx+rdi*2+0x70],dl
  455611:	gs cmp eax,0x75614c22
  455617:	outs   dx,BYTE PTR ds:[rsi]
  455618:	movsxd ebp,DWORD PTR [rax+0x53]
  45561b:	gs je  0x455693
  45561e:	jo     0x455663
  455620:	outs   dx,DWORD PTR ds:[rsi]
  455621:	ins    DWORD PTR es:[rdi],dx
  455622:	ins    DWORD PTR es:[rdi],dx
  455623:	(bad)  
  455624:	outs   dx,BYTE PTR ds:[rsi]
  455625:	and    bh,BYTE PTR fs:[rsi]
  455628:	or     eax,0x2020200a
  45562d:	and    BYTE PTR [rax],ah
  45562f:	and    BYTE PTR [rax],ah
  455631:	and    BYTE PTR [rax],ah
  455633:	and    BYTE PTR [rax],ah
  455635:	and    BYTE PTR [rax],ah
  455637:	and    BYTE PTR [rax],ah
  455639:	and    BYTE PTR [rcx+rax*2],bh
  45563c:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  455640:	outs   dx,BYTE PTR ds:[rsi]
  455641:	ds push rdx
  455643:	rex.RB
  455644:	rex.WRB
  455645:	rex.WRXB push r14
  455647:	rex.RB
  455648:	rex.WRX
  455649:	rex.WRXB
  45564a:	rex.R
  45564b:	rex.RB cmp al,0x2f
  45564e:	movsxd esi,DWORD PTR [r9+rbp*2+0x6f]
  455653:	outs   dx,BYTE PTR ds:[rsi]
  455654:	ds or  eax,0x2020200a
  45565a:	and    BYTE PTR [rax],ah
  45565c:	and    BYTE PTR [rax],ah
  45565e:	and    BYTE PTR [rax],ah
  455660:	and    BYTE PTR [rax],ah
  455662:	and    BYTE PTR [rax],ah
  455664:	and    BYTE PTR [rax],ah
  455666:	and    BYTE PTR [rdx+rdx*2],bh
  455669:	gs jno 0x4556e1
  45566c:	imul   esi,DWORD PTR [rdx+0x65],0x6964654d
  455673:	(bad)  
  455674:	ds data16 (bad) 
  455677:	ins    BYTE PTR es:[rdi],dx
  455678:	jae    0x4556df
  45567a:	cmp    al,0x2f
  45567c:	push   rdx
  45567d:	gs jno 0x4556f5
  455680:	imul   esi,DWORD PTR [rdx+0x65],0x6964654d
  455687:	(bad)  
  455688:	ds or  eax,0x2020200a
  45568e:	and    BYTE PTR [rax],ah
  455690:	and    BYTE PTR [rax],ah
  455692:	and    BYTE PTR [rax],ah
  455694:	and    BYTE PTR [rax],ah
  455696:	and    BYTE PTR [rdi+rbp*1],bh
  455699:	rex.XB outs dx,DWORD PTR ds:[rsi]
  45569b:	ins    DWORD PTR es:[rdi],dx
  45569c:	ins    DWORD PTR es:[rdi],dx
  45569d:	(bad)  
  45569e:	outs   dx,BYTE PTR ds:[rsi]
  45569f:	fs ds or eax,0x2020200a
  4556a6:	and    BYTE PTR [rax],ah
  4556a8:	and    BYTE PTR [rax],ah
  4556aa:	and    BYTE PTR [rax],ah
  4556ac:	and    BYTE PTR [rip+0x2020200a],cl        # 0x206576bc
  4556b2:	and    BYTE PTR [rax],ah
  4556b4:	and    BYTE PTR [rax],ah
  4556b6:	and    BYTE PTR [rdi+rbp*1],bh
  4556b9:	rex.WB je 0x455721
  4556bc:	ins    DWORD PTR es:[rdi],dx
  4556bd:	ds or  eax,0x2020200a
  4556c3:	and    BYTE PTR [rdi+rbp*1],bh
  4556c6:	push   rax
  4556c7:	(bad)  
  4556c8:	addr32 gs ds or eax,0x2020200a
  4556d0:	and    BYTE PTR [rax+rdx*2],bh
  4556d3:	(bad)  
  4556d4:	and    BYTE PTR gs:[ecx+edi*2+0x70],dl
  4556da:	gs cmp eax,0x61745322
  4556e0:	outs   dx,BYTE PTR ds:[rsi]
  4556e1:	fs (bad) 
  4556e3:	jb     0x455749
  4556e5:	push   rax
  4556e6:	(bad)  
  4556e7:	and    bh,BYTE PTR gs:[esi]
  4556eb:	or     eax,0x2020200a
  4556f0:	and    BYTE PTR [rax],ah
  4556f2:	and    BYTE PTR [rax],ah
  4556f4:	and    BYTE PTR [rsp+rdx*2],bh
  4556f7:	imul   esi,DWORD PTR [rsp+rbp*2+0x65],0x73655220
  4556ff:	outs   dx,DWORD PTR ds:[rsi]
  455700:	jne    0x455774
  455702:	movsxd esp,DWORD PTR [rbp+0x49]
  455705:	fs cmp eax,0x6f6f5422
  45570b:	ins    BYTE PTR es:[rdi],dx
  45570c:	jae    0x45575e
  45570e:	(bad)  
  45570f:	and    ah,BYTE PTR gs:[eax]
  455713:	(bad)  
  455714:	ds or  eax,0x2020200a
  45571a:	and    BYTE PTR [rax],ah
  45571c:	and    BYTE PTR [rax],ah
  45571e:	and    BYTE PTR [rcx+rcx*2],bh
  455721:	je     0x455788
  455723:	ins    DWORD PTR es:[rdi],dx
  455724:	ds or  eax,0x2020200a
  45572a:	and    BYTE PTR [rax],ah
  45572c:	and    BYTE PTR [rax],ah
  45572e:	and    BYTE PTR [rax],ah
  455730:	and    BYTE PTR [rax],ah
  455732:	and    BYTE PTR [rcx+rcx*2],bh
  455735:	movsxd ebp,DWORD PTR [rdi+0x6e]
  455738:	ds push rsp
  45573a:	outs   dx,DWORD PTR ds:[rsi]
  45573b:	outs   dx,DWORD PTR ds:[rsi]
  45573c:	ins    BYTE PTR es:[rdi],dx
  45573d:	jae    0x45577b
  45573f:	(bad)  
  455740:	movsxd rbp,DWORD PTR [r15+0x6e]
  455744:	ds or  eax,0x2020200a
  45574a:	and    BYTE PTR [rax],ah
  45574c:	and    BYTE PTR [rax],ah
  45574e:	and    BYTE PTR [rax],ah
  455750:	and    BYTE PTR [rax],ah
  455752:	and    BYTE PTR [rsp+rdx*2],bh
  455755:	imul   esi,DWORD PTR [rsp+rbp*2+0x65],0x73655220
  45575d:	outs   dx,DWORD PTR ds:[rsi]
  45575e:	jne    0x4557d2
  455760:	movsxd esp,DWORD PTR [rbp+0x49]
  455763:	fs cmp eax,0x43435322
  455769:	rex.XB push 0x226b6365
  45576f:	and    BYTE PTR [rdi],ch
  455771:	ds or  eax,0x2020200a
  455777:	and    BYTE PTR [rax],ah
  455779:	and    BYTE PTR [rax],ah
  45577b:	and    BYTE PTR [rax],ah
  45577d:	and    BYTE PTR [rax],ah
  45577f:	and    BYTE PTR [rsp+rax*2],bh
  455782:	gs jae 0x4557e8
  455785:	jb     0x4557f0
  455787:	jo     0x4557fd
  455789:	imul   ebp,DWORD PTR [rdi+0x6e],0x73655220
  455790:	outs   dx,DWORD PTR ds:[rsi]
  455791:	jne    0x455805
  455793:	movsxd esp,DWORD PTR [rbp+0x49]
  455796:	fs cmp eax,0x43435322
  45579c:	rex.XB push 0x446b6365
  4557a2:	gs jae 0x455808
  4557a5:	jb     0x455810
  4557a7:	jo     0x45581d
  4557a9:	imul   ebp,DWORD PTR [rdi+0x6e],0x3e2f2022
  4557b0:	or     eax,0x2020200a
  4557b5:	and    BYTE PTR [rax],ah
  4557b7:	and    BYTE PTR [rax],ah
  4557b9:	and    BYTE PTR [rax],ah
  4557bb:	and    BYTE PTR [rax],ah
  4557bd:	and    BYTE PTR [rbx+rax*2],bh
  4557c0:	outs   dx,DWORD PTR ds:[rsi]
  4557c1:	ins    DWORD PTR es:[rdi],dx
  4557c2:	ins    DWORD PTR es:[rdi],dx
  4557c3:	(bad)  
  4557c4:	outs   dx,BYTE PTR ds:[rsi]
  4557c5:	and    BYTE PTR fs:[rcx+rdi*2+0x70],dl
  4557ca:	gs cmp eax,0x75614c22
  4557d0:	outs   dx,BYTE PTR ds:[rsi]
  4557d1:	movsxd ebp,DWORD PTR [rax+0x53]
  4557d4:	gs je  0x45584c
  4557d7:	jo     0x45581c
  4557d9:	outs   dx,DWORD PTR ds:[rsi]
  4557da:	ins    DWORD PTR es:[rdi],dx
  4557db:	ins    DWORD PTR es:[rdi],dx
  4557dc:	(bad)  
  4557dd:	outs   dx,BYTE PTR ds:[rsi]
  4557de:	and    bh,BYTE PTR fs:[rsi]
  4557e1:	or     eax,0x2020200a
  4557e6:	and    BYTE PTR [rax],ah
  4557e8:	and    BYTE PTR [rax],ah
  4557ea:	and    BYTE PTR [rax],ah
  4557ec:	and    BYTE PTR [rax],ah
  4557ee:	and    BYTE PTR [rax],ah
  4557f0:	and    BYTE PTR [rax],ah
  4557f2:	and    BYTE PTR [rcx+rax*2],bh
  4557f5:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  4557f9:	outs   dx,BYTE PTR ds:[rsi]
  4557fa:	ds push rdx
  4557fc:	push   rbp
  4557fd:	rex.WRX push rdx
  4557ff:	push   rbp
  455800:	rex.WR
  455801:	rex.RB push r11
  455803:	cmp    al,0x2f
  455805:	movsxd esi,DWORD PTR [r9+rbp*2+0x6f]
  45580a:	outs   dx,BYTE PTR ds:[rsi]
  45580b:	ds or  eax,0x2020200a
  455811:	and    BYTE PTR [rax],ah
  455813:	and    BYTE PTR [rax],ah
  455815:	and    BYTE PTR [rax],ah
  455817:	and    BYTE PTR [rax],ah
  455819:	and    BYTE PTR [rax],ah
  45581b:	and    BYTE PTR [rax],ah
  45581d:	and    BYTE PTR [rcx+rax*2],bh
  455820:	fs imul esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x416c616e
  45582a:	jb     0x455893
  45582c:	jne    0x45589b
  45582e:	outs   dx,BYTE PTR gs:[rsi]
  455830:	je     0x4558a5
  455832:	ds (bad) 
  455834:	push   rdx
  455835:	push   rbp
  455836:	rex.WR
  455837:	rex.RB push r11
  455839:	cmp    eax,0x424f4c47
  45583e:	rex.B
  45583f:	rex.WR push rdx
  455841:	push   rbp
  455842:	rex.WR
  455843:	rex.RB push r11
  455845:	and    BYTE PTR [rbx+0x71],dl
  455848:	ins    BYTE PTR es:[rdi],dx
  455849:	push   rbp
  45584a:	outs   dx,BYTE PTR ds:[rsi]
  45584b:	jae    0x4558c2
  45584d:	jo     0x4558bf
  45584f:	outs   dx,DWORD PTR ds:[rsi]
  455850:	jb     0x4558c6
  455852:	gs fs push rax
  455855:	jb     0x4558c6
  455857:	fs jne 0x4558bd
  45585a:	je     0x45589e
  45585c:	ins    BYTE PTR es:[rdi],dx
  45585d:	outs   dx,DWORD PTR ds:[rsi]
  45585e:	movsxd ebp,DWORD PTR [rbx+0x65]
  455861:	jb     0x455883
  455863:	push   rax
  455864:	gs jb  0x4558cd
  455867:	rex.WRB outs dx,DWORD PTR ds:[rsi]
  455869:	outs   dx,BYTE PTR ds:[rsi]
  45586a:	rex.XB outs dx,DWORD PTR ds:[rsi]
  45586c:	jne    0x4558dc
  45586e:	je     0x4558d5
  455870:	jb     0x4558c0
  455872:	outs   dx,DWORD PTR ds:[rsi]
  455873:	je     0x4558b8
  455875:	outs   dx,DWORD PTR ds:[rsi]
  455876:	jb     0x4558ea
  455878:	jne    0x4558ea
  45587a:	je     0x4558e1
  45587c:	fs rex.XB push 0x206b6365
  455883:	imul   esp,DWORD PTR [rbx+r14*2+0x32],0x49353030
  45588c:	outs   dx,BYTE PTR ds:[rsi]
  45588d:	jae    0x455903
  45588f:	(bad)  
  455890:	ins    BYTE PTR es:[rdi],dx
  455891:	ins    BYTE PTR es:[rdi],dx
  455892:	gs fs rex.XB push 0x206b6365
  45589a:	rex.X ins BYTE PTR es:[rdi],dx
  45589c:	outs   dx,DWORD PTR ds:[rsi]
  45589d:	movsxd ebp,DWORD PTR [rbx+0x49]
  4558a0:	outs   dx,BYTE PTR ds:[rsi]
  4558a1:	jae    0x455917
  4558a3:	(bad)  
  4558a4:	ins    BYTE PTR es:[rdi],dx
  4558a5:	ins    BYTE PTR es:[rdi],dx
  4558a6:	push   rbx
  4558a7:	js     0x4558fc
  4558a9:	and    BYTE PTR [rcx+0x63],al
  4558ac:	ins    BYTE PTR es:[rdi],dx
  4558ad:	push   rax
  4558ae:	gs jb  0x45591e
  4558b1:	imul   esi,DWORD PTR [rbx+0x73],0x736e6f69
  4558b8:	rex.RX (bad) 
  4558ba:	movsxd esp,DWORD PTR [rbp+0x74]
  4558bd:	and    BYTE PTR [rsi+0x61],al
  4558c0:	movsxd esp,DWORD PTR [rbp+0x74]
  4558c3:	rex.R outs dx,DWORD PTR ds:[rsi]
  4558c5:	ins    DWORD PTR es:[rdi],dx
  4558c6:	(bad)  
  4558c7:	imul   ebp,DWORD PTR [rsi+0x43],0x72746e6f
  4558ce:	outs   dx,DWORD PTR ds:[rsi]
  4558cf:	ins    BYTE PTR es:[rdi],dx
  4558d0:	ins    BYTE PTR es:[rdi],dx
  4558d1:	gs jb  0x455917
  4558d4:	push   0x206b6365
  4558d9:	push   rbx
  4558da:	push   rbx
  4558db:	rex.WRB push r11
  4558dd:	pop    rdi
  4558de:	rex.WB jae 0x45592a
  4558e1:	outs   dx,BYTE PTR ds:[rsi]
  4558e2:	je     0x455949
  4558e4:	jb     0x455954
  4558e6:	gs je  0x45592c
  4558e9:	outs   dx,DWORD PTR ds:[rsi]
  4558ea:	outs   dx,BYTE PTR ds:[rsi]
  4558eb:	outs   dx,BYTE PTR ds:[rsi]
  4558ec:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  4558f1:	and    BYTE PTR [rsi+0x61],al
  4558f4:	movsxd esp,DWORD PTR [rbp+0x74]
  4558f7:	push   rdi
  4558f8:	rex.WRXB push r15
  4558fa:	ss xor al,0x50
  4558fd:	ins    BYTE PTR es:[rdi],dx
  4558fe:	(bad)  
  4558ff:	je     0x455967
  455901:	outs   dx,DWORD PTR ds:[rsi]
  455902:	jb     0x455971
  455904:	rex.XB push 0x206b6365
  45590a:	rex.RX (bad) 
  45590c:	movsxd esp,DWORD PTR [rbp+0x74]
  45590f:	push   rax
  455910:	outs   dx,DWORD PTR ds:[rsi]
  455911:	ja     0x455978
  455913:	jb     0x455968
  455915:	push   0x436c6c65
  45591a:	push   0x3c6b6365
  45591f:	(bad)  
  455920:	rex.B
  455921:	fs imul esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x416c616e
  45592b:	jb     0x455994
  45592d:	jne    0x45599c
  45592f:	outs   dx,BYTE PTR gs:[rsi]
  455931:	je     0x4559a6
  455933:	ds or  eax,0x2020200a
  455939:	and    BYTE PTR [rax],ah
  45593b:	and    BYTE PTR [rax],ah
  45593d:	and    BYTE PTR [rax],ah
  45593f:	and    BYTE PTR [rax],ah
  455941:	and    BYTE PTR [rax],ah
  455943:	and    BYTE PTR [rax],ah
  455945:	and    BYTE PTR [rdx+rdx*2],bh
  455948:	gs jno 0x4559c0
  45594b:	imul   esi,DWORD PTR [rdx+0x65],0x6964654d
  455952:	(bad)  
  455953:	ds data16 (bad) 
  455956:	ins    BYTE PTR es:[rdi],dx
  455957:	jae    0x4559be
  455959:	cmp    al,0x2f
  45595b:	push   rdx
  45595c:	gs jno 0x4559d4
  45595f:	imul   esi,DWORD PTR [rdx+0x65],0x6964654d
  455966:	(bad)  
  455967:	ds or  eax,0x2020200a
  45596d:	and    BYTE PTR [rax],ah
  45596f:	and    BYTE PTR [rax],ah
  455971:	and    BYTE PTR [rax],ah
  455973:	and    BYTE PTR [rax],ah
  455975:	and    BYTE PTR [rdi+rbp*1],bh
  455978:	rex.XB outs dx,DWORD PTR ds:[rsi]
  45597a:	ins    DWORD PTR es:[rdi],dx
  45597b:	ins    DWORD PTR es:[rdi],dx
  45597c:	(bad)  
  45597d:	outs   dx,BYTE PTR ds:[rsi]
  45597e:	fs ds or eax,0x2020200a
  455985:	and    BYTE PTR [rax],ah
  455987:	and    BYTE PTR [rax],ah
  455989:	and    BYTE PTR [rdi+rbp*1],bh
  45598c:	rex.WB je 0x4559f4
  45598f:	ins    DWORD PTR es:[rdi],dx
  455990:	ds or  eax,0x2020200a
  455996:	and    BYTE PTR [rax],ah
  455998:	and    BYTE PTR [rax],ah
  45599a:	and    BYTE PTR [rcx+rcx*2],bh
  45599d:	je     0x455a04
  45599f:	ins    DWORD PTR es:[rdi],dx
  4559a0:	ds or  eax,0x2020200a
  4559a6:	and    BYTE PTR [rax],ah
  4559a8:	and    BYTE PTR [rax],ah
  4559aa:	and    BYTE PTR [rax],ah
  4559ac:	and    BYTE PTR [rax],ah
  4559ae:	and    BYTE PTR [rcx+rcx*2],bh
  4559b1:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4559b4:	ds push rsp
  4559b6:	outs   dx,DWORD PTR ds:[rsi]
  4559b7:	outs   dx,DWORD PTR ds:[rsi]
  4559b8:	ins    BYTE PTR es:[rdi],dx
  4559b9:	jae    0x4559f7
  4559bb:	(bad)  
  4559bc:	movsxd rbp,DWORD PTR [r15+0x6e]
  4559c0:	ds or  eax,0x2020200a
  4559c6:	and    BYTE PTR [rax],ah
  4559c8:	and    BYTE PTR [rax],ah
  4559ca:	and    BYTE PTR [rax],ah
  4559cc:	and    BYTE PTR [rax],ah
  4559ce:	and    BYTE PTR [rsp+rdx*2],bh
  4559d1:	imul   esi,DWORD PTR [rsp+rbp*2+0x65],0x73655220
  4559d9:	outs   dx,DWORD PTR ds:[rsi]
  4559da:	jne    0x455a4e
  4559dc:	movsxd esp,DWORD PTR [rbp+0x49]
  4559df:	fs cmp eax,0x73694422
  4559e5:	movsxd ebp,DWORD PTR [rdi+0x76]
  4559e8:	gs jb  0x455a64
  4559eb:	push   rdx
  4559ec:	gs jo  0x455a5e
  4559ef:	jb     0x455a65
  4559f1:	and    ah,BYTE PTR [rax]
  4559f3:	(bad)  
  4559f4:	ds or  eax,0x2020200a
  4559fa:	and    BYTE PTR [rax],ah
  4559fc:	and    BYTE PTR [rax],ah
  4559fe:	and    BYTE PTR [rax],ah
  455a00:	and    BYTE PTR [rax],ah
  455a02:	and    BYTE PTR [rsp+rax*2],bh
  455a05:	gs jae 0x455a6b
  455a08:	jb     0x455a73
  455a0a:	jo     0x455a80
  455a0c:	imul   ebp,DWORD PTR [rdi+0x6e],0x73655220
  455a13:	outs   dx,DWORD PTR ds:[rsi]
  455a14:	jne    0x455a88
  455a16:	movsxd esp,DWORD PTR [rbp+0x49]
  455a19:	fs cmp eax,0x73694422
  455a1f:	movsxd ebp,DWORD PTR [rdi+0x76]
  455a22:	gs jb  0x455a9e
  455a25:	push   rdx
  455a26:	gs jo  0x455a98
  455a29:	jb     0x455a9f
  455a2b:	rex.R
  455a2c:	gs jae 0x455a92
  455a2f:	jb     0x455a9a
  455a31:	jo     0x455aa7
  455a33:	imul   ebp,DWORD PTR [rdi+0x6e],0x3e2f2022
  455a3a:	or     eax,0x2020090a
  455a3f:	and    BYTE PTR [rax],ah
  455a41:	cmp    al,0x43
  455a43:	outs   dx,DWORD PTR ds:[rsi]
  455a44:	ins    DWORD PTR es:[rdi],dx
  455a45:	ins    DWORD PTR es:[rdi],dx
  455a46:	(bad)  
  455a47:	outs   dx,BYTE PTR ds:[rsi]
  455a48:	and    BYTE PTR fs:[rcx+rdi*2+0x70],dl
  455a4d:	gs cmp eax,0x75614c22
  455a53:	outs   dx,BYTE PTR ds:[rsi]
  455a54:	movsxd ebp,DWORD PTR [rax+0x53]
  455a57:	gs je  0x455acf
  455a5a:	jo     0x455a9f
  455a5c:	outs   dx,DWORD PTR ds:[rsi]
  455a5d:	ins    DWORD PTR es:[rdi],dx
  455a5e:	ins    DWORD PTR es:[rdi],dx
  455a5f:	(bad)  
  455a60:	outs   dx,BYTE PTR ds:[rsi]
  455a61:	and    bh,BYTE PTR fs:[rsi]
  455a64:	or     eax,0x2020200a
  455a69:	and    BYTE PTR [rax],ah
  455a6b:	and    BYTE PTR [rax],ah
  455a6d:	and    BYTE PTR [rax],ah
  455a6f:	and    BYTE PTR [rax],ah
  455a71:	and    BYTE PTR [rax],ah
  455a73:	and    BYTE PTR [rax],ah
  455a75:	and    BYTE PTR [rcx+rax*2],bh
  455a78:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  455a7c:	outs   dx,BYTE PTR ds:[rsi]
  455a7d:	ds push rdx
  455a7f:	push   rbp
  455a80:	rex.WRX
  455a81:	rex.R
  455a82:	rex.WB push r11
  455a84:	rex.XB
  455a85:	rex.WRXB push r14
  455a87:	rex.RB push r10
  455a89:	pop    rcx
  455a8a:	cmp    al,0x2f
  455a8c:	movsxd esi,DWORD PTR [r9+rbp*2+0x6f]
  455a91:	outs   dx,BYTE PTR ds:[rsi]
  455a92:	ds or  eax,0x2020200a
  455a98:	and    BYTE PTR [rax],ah
  455a9a:	and    BYTE PTR [rax],ah
  455a9c:	and    BYTE PTR [rax],ah
  455a9e:	and    BYTE PTR [rax],ah
  455aa0:	and    BYTE PTR [rax],ah
  455aa2:	and    BYTE PTR [rax],ah
  455aa4:	and    BYTE PTR [rdx+rdx*2],bh
  455aa7:	gs jno 0x455b1f
  455aaa:	imul   esi,DWORD PTR [rdx+0x65],0x6964654d
  455ab1:	(bad)  
  455ab2:	ds data16 (bad) 
  455ab5:	ins    BYTE PTR es:[rdi],dx
  455ab6:	jae    0x455b1d
  455ab8:	cmp    al,0x2f
  455aba:	push   rdx
  455abb:	gs jno 0x455b33
  455abe:	imul   esi,DWORD PTR [rdx+0x65],0x6964654d
  455ac5:	(bad)  
  455ac6:	ds or  eax,0x2020200a
  455acc:	and    BYTE PTR [rax],ah
  455ace:	and    BYTE PTR [rax],ah
  455ad0:	and    BYTE PTR [rax],ah
  455ad2:	and    BYTE PTR [rax],ah
  455ad4:	and    BYTE PTR [rdi+rbp*1],bh
  455ad7:	rex.XB outs dx,DWORD PTR ds:[rsi]
  455ad9:	ins    DWORD PTR es:[rdi],dx
  455ada:	ins    DWORD PTR es:[rdi],dx
  455adb:	(bad)  
  455adc:	outs   dx,BYTE PTR ds:[rsi]
  455add:	fs and BYTE PTR ds:[rax],ah
  455ae1:	and    BYTE PTR [rax],ah
  455ae3:	and    BYTE PTR [rax],ah
  455ae5:	and    BYTE PTR [rax],ah
  455ae7:	or     eax,0x2020200a
  455aec:	and    BYTE PTR [rax],ah
  455aee:	and    BYTE PTR [rax],ah
  455af0:	and    BYTE PTR [rdi+rbp*1],bh
  455af3:	rex.WB je 0x455b5b
  455af6:	ins    DWORD PTR es:[rdi],dx
  455af7:	ds or  eax,0x2020200a
  455afd:	and    BYTE PTR [rax],ah
  455aff:	and    BYTE PTR [rax],ah
  455b01:	and    BYTE PTR [rcx+rcx*2],bh
  455b04:	je     0x455b6b
  455b06:	ins    DWORD PTR es:[rdi],dx
  455b07:	ds or  eax,0x2020200a
  455b0d:	and    BYTE PTR [rax],ah
  455b0f:	and    BYTE PTR [rax],ah
  455b11:	and    BYTE PTR [rax],ah
  455b13:	and    BYTE PTR [rax],ah
  455b15:	and    BYTE PTR [rcx+rcx*2],bh
  455b18:	movsxd ebp,DWORD PTR [rdi+0x6e]
  455b1b:	ds push rsp
  455b1d:	outs   dx,DWORD PTR ds:[rsi]
  455b1e:	outs   dx,DWORD PTR ds:[rsi]
  455b1f:	ins    BYTE PTR es:[rdi],dx
  455b20:	jae    0x455b5e
  455b22:	(bad)  
  455b23:	movsxd rbp,DWORD PTR [r15+0x6e]
  455b27:	ds or  eax,0x2020200a
  455b2d:	and    BYTE PTR [rax],ah
  455b2f:	and    BYTE PTR [rax],ah
  455b31:	and    BYTE PTR [rax],ah
  455b33:	and    BYTE PTR [rax],ah
  455b35:	and    BYTE PTR [rsp+rdx*2],bh
  455b38:	imul   esi,DWORD PTR [rsp+rbp*2+0x65],0x73655220
  455b40:	outs   dx,DWORD PTR ds:[rsi]
  455b41:	jne    0x455bb5
  455b43:	movsxd esp,DWORD PTR [rbp+0x49]
  455b46:	fs cmp eax,0x67705522
  455b4c:	jb     0x455baf
  455b4e:	fs gs push rbx
  455b51:	push   rbx
  455b52:	rex.WB push r11
  455b54:	push   rax
  455b55:	(bad)  
  455b56:	movsxd ebp,DWORD PTR [rbx+0x61]
  455b59:	addr32 gs jae 0x455b7f
  455b5d:	and    BYTE PTR [rdi],ch
  455b5f:	ds or  eax,0x2020200a
  455b65:	and    BYTE PTR [rax],ah
  455b67:	and    BYTE PTR [rax],ah
  455b69:	and    BYTE PTR [rax],ah
  455b6b:	and    BYTE PTR [rax],ah
  455b6d:	and    BYTE PTR [rsp+rax*2],bh
  455b70:	gs jae 0x455bd6
  455b73:	jb     0x455bde
  455b75:	jo     0x455beb
  455b77:	imul   ebp,DWORD PTR [rdi+0x6e],0x73655220
  455b7e:	outs   dx,DWORD PTR ds:[rsi]
  455b7f:	jne    0x455bf3
  455b81:	movsxd esp,DWORD PTR [rbp+0x49]
  455b84:	fs cmp eax,0x67705522
  455b8a:	jb     0x455bed
  455b8c:	fs gs push rbx
  455b8f:	push   rbx
  455b90:	rex.WB push r11
  455b92:	push   rax
  455b93:	(bad)  
  455b94:	movsxd ebp,DWORD PTR [rbx+0x61]
  455b97:	addr32 gs jae 0x455bdf
  455b9b:	gs jae 0x455c01
  455b9e:	jb     0x455c09
  455ba0:	jo     0x455c16
  455ba2:	imul   ebp,DWORD PTR [rdi+0x6e],0x3e2f2022
  455ba9:	or     eax,0x2020200a
  455bae:	and    BYTE PTR [rax],ah
  455bb0:	and    BYTE PTR [rax],ah
  455bb2:	and    BYTE PTR [rax],ah
  455bb4:	and    BYTE PTR [rax],ah
  455bb6:	and    BYTE PTR [rbx+rax*2],bh
  455bb9:	outs   dx,DWORD PTR ds:[rsi]
  455bba:	ins    DWORD PTR es:[rdi],dx
  455bbb:	ins    DWORD PTR es:[rdi],dx
  455bbc:	(bad)  
  455bbd:	outs   dx,BYTE PTR ds:[rsi]
  455bbe:	and    BYTE PTR fs:[rcx+rdi*2+0x70],dl
  455bc3:	gs cmp eax,0x65704f22
  455bc9:	outs   dx,BYTE PTR ds:[rsi]
  455bca:	imul   r13d,DWORD PTR [rbp+r12*2+0x43],0x616d6d6f
  455bd3:	outs   dx,BYTE PTR ds:[rsi]
  455bd4:	and    bh,BYTE PTR fs:[rsi]
  455bd7:	or     eax,0x2020200a
  455bdc:	and    BYTE PTR [rax],ah
  455bde:	and    BYTE PTR [rax],ah
  455be0:	and    BYTE PTR [rax],ah
  455be2:	and    BYTE PTR [rax],ah
  455be4:	and    BYTE PTR [rax],ah
  455be6:	and    BYTE PTR [rax],ah
  455be8:	and    BYTE PTR [rsi+rax*2],bh
  455beb:	imul   ebp,DWORD PTR [rbp+riz*2+0x4e],0x3e656d61
  455bf3:	cs cs pop rsp
  455bf6:	cs cs pop rsp
  455bf9:	cs cs pop rsp
  455bfc:	cs cs pop rsp
  455bff:	xor    DWORD PTR [rax],esi
  455c01:	xor    BYTE PTR [rsp+rax*2+0x54],bl
  455c05:	push   rbx
  455c06:	pop    rsp
  455c07:	rex.X imul ebp,DWORD PTR [rsi+0x6e],0x4953535c
  455c0f:	push   rbx
  455c10:	push   rbp
  455c11:	jo     0x455c7a
  455c13:	jb     0x455c76
  455c15:	fs gs cs gs js 0x455c80
  455c1b:	cmp    al,0x2f
  455c1d:	imul   r13d,DWORD PTR [rbp+r12*2+0x4e],0x3e656d61
  455c26:	or     eax,0x2020200a
  455c2b:	and    BYTE PTR [rax],ah
  455c2d:	and    BYTE PTR [rax],ah
  455c2f:	and    BYTE PTR [rax],ah
  455c31:	and    BYTE PTR [rax],ah
  455c33:	and    BYTE PTR [rdi+rbp*1],bh
  455c36:	rex.XB outs dx,DWORD PTR ds:[rsi]
  455c38:	ins    DWORD PTR es:[rdi],dx
  455c39:	ins    DWORD PTR es:[rdi],dx
  455c3a:	(bad)  
  455c3b:	outs   dx,BYTE PTR ds:[rsi]
  455c3c:	fs ds or eax,0x2020200a
  455c43:	and    BYTE PTR [rax],ah
  455c45:	and    BYTE PTR [rax],ah
  455c47:	and    BYTE PTR [rdi+rbp*1],bh
  455c4a:	rex.WB je 0x455cb2
  455c4d:	ins    DWORD PTR es:[rdi],dx
  455c4e:	ds or  eax,0x2020200a
  455c54:	and    BYTE PTR [rdi+rbp*1],bh
  455c57:	push   rax
  455c58:	(bad)  
  455c59:	addr32 gs ds or eax,0x2020200a
  455c61:	and    BYTE PTR [rax+rdx*2],bh
  455c64:	(bad)  
  455c65:	and    BYTE PTR gs:[ecx+edi*2+0x70],dl
  455c6b:	gs cmp eax,0x61745322
  455c71:	outs   dx,BYTE PTR ds:[rsi]
  455c72:	fs (bad) 
  455c74:	jb     0x455cda
  455c76:	push   rax
  455c77:	(bad)  
  455c78:	and    bh,BYTE PTR gs:[esi]
  455c7c:	or     eax,0x2020200a
  455c81:	and    BYTE PTR [rax],ah
  455c83:	and    BYTE PTR [rax],ah
  455c85:	and    BYTE PTR [rsp+rdx*2],bh
  455c88:	imul   esi,DWORD PTR [rsp+rbp*2+0x65],0x73655220
  455c90:	outs   dx,DWORD PTR ds:[rsi]
  455c91:	jne    0x455d05
  455c93:	movsxd esp,DWORD PTR [rbp+0x49]
  455c96:	fs cmp eax,0x73655222
  455c9c:	outs   dx,DWORD PTR ds:[rsi]
  455c9d:	jne    0x455d11
  455c9f:	movsxd esp,DWORD PTR [rbp+0x73]
  455ca2:	push   rax
  455ca3:	(bad)  
  455ca4:	and    ah,BYTE PTR gs:[eax]
  455ca8:	(bad)  
  455ca9:	ds or  eax,0x2020200a
  455caf:	and    BYTE PTR [rax],ah
  455cb1:	and    BYTE PTR [rax],ah
  455cb3:	and    BYTE PTR [rcx+rcx*2],bh
  455cb6:	je     0x455d1d
  455cb8:	ins    DWORD PTR es:[rdi],dx
  455cb9:	ds or  eax,0x2020200a
  455cbf:	and    BYTE PTR [rax],ah
  455cc1:	and    BYTE PTR [rax],ah
  455cc3:	and    BYTE PTR [rax],ah
  455cc5:	and    BYTE PTR [rax],ah
  455cc7:	and    BYTE PTR [rcx+rcx*2],bh
  455cca:	movsxd ebp,DWORD PTR [rdi+0x6e]
  455ccd:	rex.WB outs dx,BYTE PTR ds:[rsi]
  455cd0:	je     0x455d37
  455cd2:	jb     0x455d42
  455cd4:	gs je  0x455d29
  455cd7:	gs jae 0x455d49
  455cda:	jne    0x455d4e
  455cdc:	movsxd esp,DWORD PTR [rbp+0x73]
  455cdf:	cmp    al,0x2f
  455ce1:	movsxd rbp,DWORD PTR [r15+0x6e]
  455ce5:	ds or  eax,0x2020200a
  455ceb:	and    BYTE PTR [rax],ah
  455ced:	and    BYTE PTR [rax],ah
  455cef:	and    BYTE PTR [rax],ah
  455cf1:	and    BYTE PTR [rax],ah
  455cf3:	and    BYTE PTR [rsp+rdx*2],bh
  455cf6:	imul   esi,DWORD PTR [rsp+rbp*2+0x65],0x73655220
  455cfe:	outs   dx,DWORD PTR ds:[rsi]
  455cff:	jne    0x455d73
  455d01:	movsxd esp,DWORD PTR [rbp+0x49]
  455d04:	fs cmp eax,0x65695622
  455d0a:	ja     0x455d4e
  455d0c:	outs   dx,DWORD PTR ds:[rsi]
  455d0d:	ins    BYTE PTR es:[rdi],dx
  455d0e:	and    ah,BYTE PTR [rax]
  455d10:	(bad)  
  455d11:	ds or  eax,0x2020200a
  455d17:	and    BYTE PTR [rax],ah
  455d19:	and    BYTE PTR [rax],ah
  455d1b:	and    BYTE PTR [rax],ah
  455d1d:	and    BYTE PTR [rax],ah
  455d1f:	and    BYTE PTR [rsp+rax*2],bh
  455d22:	gs jae 0x455d88
  455d25:	jb     0x455d90
  455d27:	jo     0x455d9d
  455d29:	imul   ebp,DWORD PTR [rdi+0x6e],0x73655220
  455d30:	outs   dx,DWORD PTR ds:[rsi]
  455d31:	jne    0x455da5
  455d33:	movsxd esp,DWORD PTR [rbp+0x49]
  455d36:	fs cmp eax,0x65695622
  455d3c:	ja     0x455d80
  455d3e:	outs   dx,DWORD PTR ds:[rsi]
  455d3f:	ins    BYTE PTR es:[rdi],dx
  455d40:	rex.R
  455d41:	gs jae 0x455da7
  455d44:	jb     0x455daf
  455d46:	jo     0x455dbc
  455d48:	imul   ebp,DWORD PTR [rdi+0x6e],0x3e2f2022
  455d4f:	or     eax,0x2020200a
  455d54:	and    BYTE PTR [rax],ah
  455d56:	and    BYTE PTR [rax],ah
  455d58:	and    BYTE PTR [rax],ah
  455d5a:	and    BYTE PTR [rax],ah
  455d5c:	and    BYTE PTR [rbx+rax*2],bh
  455d5f:	outs   dx,DWORD PTR ds:[rsi]
  455d60:	ins    DWORD PTR es:[rdi],dx
  455d61:	ins    DWORD PTR es:[rdi],dx
  455d62:	(bad)  
  455d63:	outs   dx,BYTE PTR ds:[rsi]
  455d64:	and    BYTE PTR fs:[rcx+rdi*2+0x70],dl
  455d69:	gs cmp eax,0x65704f22
  455d6f:	outs   dx,BYTE PTR ds:[rsi]
  455d70:	imul   r13d,DWORD PTR [rbp+r12*2+0x43],0x616d6d6f
  455d79:	outs   dx,BYTE PTR ds:[rsi]
  455d7a:	and    bh,BYTE PTR fs:[rsi]
  455d7d:	or     eax,0x2020200a
  455d82:	and    BYTE PTR [rax],ah
  455d84:	and    BYTE PTR [rax],ah
  455d86:	and    BYTE PTR [rax],ah
  455d88:	and    BYTE PTR [rax],ah
  455d8a:	and    BYTE PTR [rax],ah
  455d8c:	and    BYTE PTR [rax],ah
  455d8e:	and    BYTE PTR [rsi+rax*2],bh
  455d91:	imul   ebp,DWORD PTR [rbp+riz*2+0x4e],0x3e656d61
  455d99:	push   0x3a707474
  455d9e:	(bad)  
  455d9f:	(bad)  
  455da0:	outs   dx,DWORD PTR ds:[esi]
  455da2:	cs ins DWORD PTR es:[rdi],dx
  455da4:	imul   esp,DWORD PTR [rbx+0x72],0x666f736f
  455dab:	je     0x455ddb
  455dad:	movsxd ebp,DWORD PTR [rdi+0x6d]
  455db0:	(bad)  
  455db1:	data16 ja 0x455e20
  455db4:	imul   ebp,DWORD PTR [rsi+0x6b],0x696c3f2f
  455dbb:	outs   dx,BYTE PTR ds:[rsi]
  455dbc:	imul   ebp,DWORD PTR [rcx+0x64],0x3d
  455dc0:	cmp    DWORD PTR [rax],edi
  455dc2:	xor    esi,DWORD PTR [rbx]
  455dc4:	xor    eax,0x69462f3c
  455dc9:	ins    BYTE PTR es:[rdi],dx
  455dca:	gs rex.WRX (bad) 
  455dcd:	ins    DWORD PTR es:[rdi],dx
  455dce:	gs ds or eax,0x2020200a
  455dd5:	and    BYTE PTR [rax],ah
  455dd7:	and    BYTE PTR [rax],ah
  455dd9:	and    BYTE PTR [rax],ah
  455ddb:	and    BYTE PTR [rax],ah
  455ddd:	and    BYTE PTR [rdi+rbp*1],bh
  455de0:	rex.XB outs dx,DWORD PTR ds:[rsi]
  455de2:	ins    DWORD PTR es:[rdi],dx
  455de3:	ins    DWORD PTR es:[rdi],dx
  455de4:	(bad)  
  455de5:	outs   dx,BYTE PTR ds:[rsi]
  455de6:	fs ds or eax,0x2020200a
  455ded:	and    BYTE PTR [rax],ah
  455def:	and    BYTE PTR [rax],ah
  455df1:	and    BYTE PTR [rdi+rbp*1],bh
  455df4:	rex.WB je 0x455e5c
  455df7:	ins    DWORD PTR es:[rdi],dx
  455df8:	ds or  eax,0x2020200a
  455dfe:	and    BYTE PTR [rax],ah
  455e00:	and    BYTE PTR [rax],ah
  455e02:	and    BYTE PTR [rcx+rcx*2],bh
  455e05:	je     0x455e6c
  455e07:	ins    DWORD PTR es:[rdi],dx
  455e08:	ds or  eax,0x2020200a
  455e0e:	and    BYTE PTR [rax],ah
  455e10:	and    BYTE PTR [rax],ah
  455e12:	and    BYTE PTR [rax],ah
  455e14:	and    BYTE PTR [rax],ah
  455e16:	and    BYTE PTR [rcx+rcx*2],bh
  455e19:	movsxd ebp,DWORD PTR [rdi+0x6e]
  455e1c:	rex.WB outs dx,BYTE PTR ds:[rsi]
  455e1f:	je     0x455e86
  455e21:	jb     0x455e91
  455e23:	gs je  0x455e78
  455e26:	gs jae 0x455e98
  455e29:	jne    0x455e9d
  455e2b:	movsxd esp,DWORD PTR [rbp+0x73]
  455e2e:	cmp    al,0x2f
  455e30:	movsxd rbp,DWORD PTR [r15+0x6e]
  455e34:	ds or  eax,0x2020200a
  455e3a:	and    BYTE PTR [rax],ah
  455e3c:	and    BYTE PTR [rax],ah
  455e3e:	and    BYTE PTR [rax],ah
  455e40:	and    BYTE PTR [rax],ah
  455e42:	and    BYTE PTR [rsp+rdx*2],bh
  455e45:	imul   esi,DWORD PTR [rsp+rbp*2+0x65],0x73655220
  455e4d:	outs   dx,DWORD PTR ds:[rsi]
  455e4e:	jne    0x455ec2
  455e50:	movsxd esp,DWORD PTR [rbp+0x49]
  455e53:	fs cmp eax,0x6c715322
  455e59:	push   rdi
  455e5a:	gs (bad) 
  455e5d:	imul   esi,DWORD PTR [rbp+riz*2+0x22],0xd3e2f20
  455e65:	or     ah,BYTE PTR [rax]
  455e67:	and    BYTE PTR [rax],ah
  455e69:	and    BYTE PTR [rax],ah
  455e6b:	and    BYTE PTR [rax],ah
  455e6d:	and    BYTE PTR [rax],ah
  455e6f:	and    BYTE PTR [rax],ah
  455e71:	and    BYTE PTR [rsp+rax*2],bh
  455e74:	gs jae 0x455eda
  455e77:	jb     0x455ee2
  455e79:	jo     0x455eef
  455e7b:	imul   ebp,DWORD PTR [rdi+0x6e],0x73655220
  455e82:	outs   dx,DWORD PTR ds:[rsi]
  455e83:	jne    0x455ef7
  455e85:	movsxd esp,DWORD PTR [rbp+0x49]
  455e88:	fs cmp eax,0x6c715322
  455e8e:	push   rdi
  455e8f:	gs (bad) 
  455e92:	imul   esi,DWORD PTR [rbp+riz*2+0x44],0x72637365
  455e9a:	imul   esi,DWORD PTR [rax+0x74],0x226e6f69
  455ea1:	and    BYTE PTR [rdi],ch
  455ea3:	ds or  eax,0x2020200a
  455ea9:	and    BYTE PTR [rax],ah
  455eab:	and    BYTE PTR [rax],ah
  455ead:	and    BYTE PTR [rax],ah
  455eaf:	and    BYTE PTR [rax],ah
  455eb1:	and    BYTE PTR [rbx+rax*2],bh
  455eb4:	outs   dx,DWORD PTR ds:[rsi]
  455eb5:	ins    DWORD PTR es:[rdi],dx
  455eb6:	ins    DWORD PTR es:[rdi],dx
  455eb7:	(bad)  
  455eb8:	outs   dx,BYTE PTR ds:[rsi]
  455eb9:	and    BYTE PTR fs:[rcx+rdi*2+0x70],dl
  455ebe:	gs cmp eax,0x65704f22
  455ec4:	outs   dx,BYTE PTR ds:[rsi]
  455ec5:	imul   r13d,DWORD PTR [rbp+r12*2+0x43],0x616d6d6f
  455ece:	outs   dx,BYTE PTR ds:[rsi]
  455ecf:	and    bh,BYTE PTR fs:[rsi]
  455ed2:	or     eax,0x2020200a
  455ed7:	and    BYTE PTR [rax],ah
  455ed9:	and    BYTE PTR [rax],ah
  455edb:	and    BYTE PTR [rax],ah
  455edd:	and    BYTE PTR [rax],ah
  455edf:	and    BYTE PTR [rax],ah
  455ee1:	and    BYTE PTR [rax],ah
  455ee3:	and    BYTE PTR [rsi+rax*2],bh
  455ee6:	imul   ebp,DWORD PTR [rbp+riz*2+0x4e],0x3e656d61
  455eee:	push   0x3a707474
  455ef3:	(bad)  
  455ef4:	(bad)  
  455ef5:	outs   dx,DWORD PTR ds:[esi]
  455ef7:	cs ins DWORD PTR es:[rdi],dx
  455ef9:	imul   esp,DWORD PTR [rbx+0x72],0x666f736f
  455f00:	je     0x455f30
  455f02:	movsxd ebp,DWORD PTR [rdi+0x6d]
  455f05:	(bad)  
  455f06:	data16 ja 0x455f75
  455f09:	imul   ebp,DWORD PTR [rsi+0x6b],0x694c3f2f
  455f10:	outs   dx,BYTE PTR ds:[rsi]
  455f11:	imul   ecx,DWORD PTR [rcx+0x64],0x3d
  455f15:	xor    DWORD PTR [rcx],esi
  455f17:	ss xor al,0x32
  455f1a:	ss cmp al,0x2f
  455f1d:	imul   r13d,DWORD PTR [rbp+r12*2+0x4e],0x3e656d61
  455f26:	or     eax,0x2020200a
  455f2b:	and    BYTE PTR [rax],ah
  455f2d:	and    BYTE PTR [rax],ah
  455f2f:	and    BYTE PTR [rax],ah
  455f31:	and    BYTE PTR [rax],ah
  455f33:	and    BYTE PTR [rdi+rbp*1],bh
  455f36:	rex.XB outs dx,DWORD PTR ds:[rsi]
  455f38:	ins    DWORD PTR es:[rdi],dx
  455f39:	ins    DWORD PTR es:[rdi],dx
  455f3a:	(bad)  
  455f3b:	outs   dx,BYTE PTR ds:[rsi]
  455f3c:	fs ds or eax,0x2020200a
  455f43:	and    BYTE PTR [rax],ah
  455f45:	and    BYTE PTR [rax],ah
  455f47:	and    BYTE PTR [rdi+rbp*1],bh
  455f4a:	rex.WB je 0x455fb2
  455f4d:	ins    DWORD PTR es:[rdi],dx
  455f4e:	ds or  eax,0x2020200a
  455f54:	and    BYTE PTR [rax],ah
  455f56:	and    BYTE PTR [rax],ah
  455f58:	and    BYTE PTR [rcx+rcx*2],bh
  455f5b:	je     0x455fc2
  455f5d:	ins    DWORD PTR es:[rdi],dx
  455f5e:	ds or  eax,0x2020200a
  455f64:	and    BYTE PTR [rax],ah
  455f66:	and    BYTE PTR [rax],ah
  455f68:	and    BYTE PTR [rax],ah
  455f6a:	and    BYTE PTR [rax],ah
  455f6c:	and    BYTE PTR [rcx+rcx*2],bh
  455f6f:	movsxd ebp,DWORD PTR [rdi+0x6e]
  455f72:	rex.WB outs dx,BYTE PTR ds:[rsi]
  455f75:	je     0x455fdc
  455f77:	jb     0x455fe7
  455f79:	gs je  0x455fce
  455f7c:	gs jae 0x455fee
  455f7f:	jne    0x455ff3
  455f81:	movsxd esp,DWORD PTR [rbp+0x73]
  455f84:	cmp    al,0x2f
  455f86:	movsxd rbp,DWORD PTR [r15+0x6e]
  455f8a:	ds or  eax,0x2020200a
  455f90:	and    BYTE PTR [rax],ah
  455f92:	and    BYTE PTR [rax],ah
  455f94:	and    BYTE PTR [rax],ah
  455f96:	and    BYTE PTR [rax],ah
  455f98:	and    BYTE PTR [rsp+rdx*2],bh
  455f9b:	imul   esi,DWORD PTR [rsp+rbp*2+0x65],0x73655220
  455fa3:	outs   dx,DWORD PTR ds:[rsi]
  455fa4:	jne    0x456018
  455fa6:	movsxd esp,DWORD PTR [rbp+0x49]
  455fa9:	fs cmp eax,0x6c715322
  455faf:	rex.R
  455fb0:	gs jbe 0x456016
  455fb3:	outs   dx,BYTE PTR gs:[rsi]
  455fb5:	je     0x45601c
  455fb7:	jb     0x455fdb
  455fb9:	and    BYTE PTR [rdi],ch
  455fbb:	ds or  eax,0x2020200a
  455fc1:	and    BYTE PTR [rax],ah
  455fc3:	and    BYTE PTR [rax],ah
  455fc5:	and    BYTE PTR [rax],ah
  455fc7:	and    BYTE PTR [rax],ah
  455fc9:	and    BYTE PTR [rsp+rax*2],bh
  455fcc:	gs jae 0x456032
  455fcf:	jb     0x45603a
  455fd1:	jo     0x456047
  455fd3:	imul   ebp,DWORD PTR [rdi+0x6e],0x73655220
  455fda:	outs   dx,DWORD PTR ds:[rsi]
  455fdb:	jne    0x45604f
  455fdd:	movsxd esp,DWORD PTR [rbp+0x49]
  455fe0:	fs cmp eax,0x6c715322
  455fe6:	rex.R
  455fe7:	gs jbe 0x45604d
  455fea:	outs   dx,BYTE PTR gs:[rsi]
  455fec:	je     0x456053
  455fee:	jb     0x456034
  455ff0:	gs jae 0x456056
  455ff3:	jb     0x45605e
  455ff5:	jo     0x45606b
  455ff7:	imul   ebp,DWORD PTR [rdi+0x6e],0x3e2f2022
  455ffe:	or     eax,0x2020200a
  456003:	and    BYTE PTR [rax],ah
  456005:	and    BYTE PTR [rax],ah
  456007:	and    BYTE PTR [rax],ah
  456009:	and    BYTE PTR [rax],ah
  45600b:	and    BYTE PTR [rbx+rax*2],bh
  45600e:	outs   dx,DWORD PTR ds:[rsi]
  45600f:	ins    DWORD PTR es:[rdi],dx
  456010:	ins    DWORD PTR es:[rdi],dx
  456011:	(bad)  
  456012:	outs   dx,BYTE PTR ds:[rsi]
  456013:	and    BYTE PTR fs:[rcx+rdi*2+0x70],dl
  456018:	gs cmp eax,0x65704f22
  45601e:	outs   dx,BYTE PTR ds:[rsi]
  45601f:	imul   r13d,DWORD PTR [rbp+r12*2+0x43],0x616d6d6f
  456028:	outs   dx,BYTE PTR ds:[rsi]
  456029:	and    bh,BYTE PTR fs:[rsi]
  45602c:	or     eax,0x2020200a
  456031:	and    BYTE PTR [rax],ah
  456033:	and    BYTE PTR [rax],ah
  456035:	and    BYTE PTR [rax],ah
  456037:	and    BYTE PTR [rax],ah
  456039:	and    BYTE PTR [rax],ah
  45603b:	and    BYTE PTR [rax],ah
  45603d:	and    BYTE PTR [rsi+rax*2],bh
  456040:	imul   ebp,DWORD PTR [rbp+riz*2+0x4e],0x3e656d61
  456048:	push   0x3a707474
  45604d:	(bad)  
  45604e:	(bad)  
  45604f:	outs   dx,DWORD PTR ds:[esi]
  456051:	cs ins DWORD PTR es:[rdi],dx
  456053:	imul   esp,DWORD PTR [rbx+0x72],0x666f736f
  45605a:	je     0x45608a
  45605c:	movsxd ebp,DWORD PTR [rdi+0x6d]
  45605f:	(bad)  
  456060:	data16 ja 0x4560cf
  456063:	imul   ebp,DWORD PTR [rsi+0x6b],0x694c3f2f
  45606a:	outs   dx,BYTE PTR ds:[rsi]
  45606b:	imul   ecx,DWORD PTR [rcx+0x44],0x3d
  45606f:	xor    DWORD PTR [rdx],esi
  456071:	xor    esi,DWORD PTR [rcx]
  456073:	cmp    BYTE PTR [rdi+rbp*1],bh
  456076:	imul   r13d,DWORD PTR [rbp+r12*2+0x4e],0x3e656d61
  45607f:	or     eax,0x2020200a
  456084:	and    BYTE PTR [rax],ah
  456086:	and    BYTE PTR [rax],ah
  456088:	and    BYTE PTR [rax],ah
  45608a:	and    BYTE PTR [rax],ah
  45608c:	and    BYTE PTR [rdi+rbp*1],bh
  45608f:	rex.XB outs dx,DWORD PTR ds:[rsi]
  456091:	ins    DWORD PTR es:[rdi],dx
  456092:	ins    DWORD PTR es:[rdi],dx
  456093:	(bad)  
  456094:	outs   dx,BYTE PTR ds:[rsi]
  456095:	fs ds or eax,0x2020200a
  45609c:	and    BYTE PTR [rax],ah
  45609e:	and    BYTE PTR [rax],ah
  4560a0:	and    BYTE PTR [rdi+rbp*1],bh
  4560a3:	rex.WB je 0x45610b
  4560a6:	ins    DWORD PTR es:[rdi],dx
  4560a7:	ds or  eax,0x2020200a
  4560ad:	and    BYTE PTR [rax],ah
  4560af:	and    BYTE PTR [rax],ah
  4560b1:	and    BYTE PTR [rcx+rcx*2],bh
  4560b4:	je     0x45611b
  4560b6:	ins    DWORD PTR es:[rdi],dx
  4560b7:	ds or  eax,0x2020200a
  4560bd:	and    BYTE PTR [rax],ah
  4560bf:	and    BYTE PTR [rax],ah
  4560c1:	and    BYTE PTR [rax],ah
  4560c3:	and    BYTE PTR [rax],ah
  4560c5:	and    BYTE PTR [rcx+rcx*2],bh
  4560c8:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4560cb:	rex.WB outs dx,BYTE PTR ds:[rsi]
  4560ce:	je     0x456135
  4560d0:	jb     0x456140
  4560d2:	gs je  0x456127
  4560d5:	gs jae 0x456147
  4560d8:	jne    0x45614c
  4560da:	movsxd esp,DWORD PTR [rbp+0x73]
  4560dd:	cmp    al,0x2f
  4560df:	movsxd rbp,DWORD PTR [r15+0x6e]
  4560e3:	ds or  eax,0x2020200a
  4560e9:	and    BYTE PTR [rax],ah
  4560eb:	and    BYTE PTR [rax],ah
  4560ed:	and    BYTE PTR [rax],ah
  4560ef:	and    BYTE PTR [rax],ah
  4560f1:	and    BYTE PTR [rsp+rdx*2],bh
  4560f4:	imul   esi,DWORD PTR [rsp+rbp*2+0x65],0x73655220
  4560fc:	outs   dx,DWORD PTR ds:[rsi]
  4560fd:	jne    0x456171
  4560ff:	movsxd esp,DWORD PTR [rbp+0x49]
  456102:	fs cmp eax,0x6c715322
  456108:	rex.RB jbe 0x45616c
  45610b:	ins    BYTE PTR es:[rdi],dx
  45610c:	push   rbx
  45610d:	imul   esi,DWORD PTR [rbp+riz*2+0x22],0xd3e2f20
  456115:	or     ah,BYTE PTR [rax]
  456117:	and    BYTE PTR [rax],ah
  456119:	and    BYTE PTR [rax],ah
  45611b:	and    BYTE PTR [rax],ah
  45611d:	and    BYTE PTR [rax],ah
  45611f:	and    BYTE PTR [rax],ah
  456121:	and    BYTE PTR [rsp+rax*2],bh
  456124:	gs jae 0x45618a
  456127:	jb     0x456192
  456129:	jo     0x45619f
  45612b:	imul   ebp,DWORD PTR [rdi+0x6e],0x73655220
  456132:	outs   dx,DWORD PTR ds:[rsi]
  456133:	jne    0x4561a7
  456135:	movsxd esp,DWORD PTR [rbp+0x49]
  456138:	fs cmp eax,0x6c715322
  45613e:	rex.RB jbe 0x4561a2
  456141:	ins    BYTE PTR es:[rdi],dx
  456142:	push   rbx
  456143:	imul   esi,DWORD PTR [rbp+riz*2+0x44],0x72637365
  45614b:	imul   esi,DWORD PTR [rax+0x74],0x226e6f69
  456152:	and    BYTE PTR [rdi],ch
  456154:	ds or  eax,0x2020200a
  45615a:	and    BYTE PTR [rax],ah
  45615c:	and    BYTE PTR [rax],ah
  45615e:	and    BYTE PTR [rax],ah
  456160:	and    BYTE PTR [rax],ah
  456162:	and    BYTE PTR [rbx+rax*2],bh
  456165:	outs   dx,DWORD PTR ds:[rsi]
  456166:	ins    DWORD PTR es:[rdi],dx
  456167:	ins    DWORD PTR es:[rdi],dx
  456168:	(bad)  
  456169:	outs   dx,BYTE PTR ds:[rsi]
  45616a:	and    BYTE PTR fs:[rcx+rdi*2+0x70],dl
  45616f:	gs cmp eax,0x65704f22
  456175:	outs   dx,BYTE PTR ds:[rsi]
  456176:	imul   r13d,DWORD PTR [rbp+r12*2+0x43],0x616d6d6f
  45617f:	outs   dx,BYTE PTR ds:[rsi]
  456180:	and    bh,BYTE PTR fs:[rsi]
  456183:	or     eax,0x2020200a
  456188:	and    BYTE PTR [rax],ah
  45618a:	and    BYTE PTR [rax],ah
  45618c:	and    BYTE PTR [rax],ah
  45618e:	and    BYTE PTR [rax],ah
  456190:	and    BYTE PTR [rax],ah
  456192:	and    BYTE PTR [rax],ah
  456194:	and    BYTE PTR [rsi+rax*2],bh
  456197:	imul   ebp,DWORD PTR [rbp+riz*2+0x4e],0x3e656d61
  45619f:	push   0x3a707474
  4561a4:	(bad)  
  4561a5:	(bad)  
  4561a6:	outs   dx,DWORD PTR ds:[esi]
  4561a8:	cs ins DWORD PTR es:[rdi],dx
  4561aa:	imul   esp,DWORD PTR [rbx+0x72],0x666f736f
  4561b1:	je     0x4561e1
  4561b3:	movsxd ebp,DWORD PTR [rdi+0x6d]
  4561b6:	(bad)  
  4561b7:	data16 ja 0x456226
  4561ba:	imul   ebp,DWORD PTR [rsi+0x6b],0x694c3f2f
  4561c1:	outs   dx,BYTE PTR ds:[rsi]
  4561c2:	imul   ecx,DWORD PTR [rcx+0x64],0x3d
  4561c6:	xor    DWORD PTR [rcx],esi
  4561c8:	ss xor al,0x32
  4561cb:	(bad)  
  4561cc:	cmp    al,0x2f
  4561ce:	imul   r13d,DWORD PTR [rbp+r12*2+0x4e],0x3e656d61
  4561d7:	or     eax,0x2020200a
  4561dc:	and    BYTE PTR [rax],ah
  4561de:	and    BYTE PTR [rax],ah
  4561e0:	and    BYTE PTR [rax],ah
  4561e2:	and    BYTE PTR [rax],ah
  4561e4:	and    BYTE PTR [rdi+rbp*1],bh
  4561e7:	rex.XB outs dx,DWORD PTR ds:[rsi]
  4561e9:	ins    DWORD PTR es:[rdi],dx
  4561ea:	ins    DWORD PTR es:[rdi],dx
  4561eb:	(bad)  
  4561ec:	outs   dx,BYTE PTR ds:[rsi]
  4561ed:	fs ds or eax,0x2020200a
  4561f4:	and    BYTE PTR [rax],ah
  4561f6:	and    BYTE PTR [rax],ah
  4561f8:	and    BYTE PTR [rdi+rbp*1],bh
  4561fb:	rex.WB je 0x456263
  4561fe:	ins    DWORD PTR es:[rdi],dx
  4561ff:	ds or  eax,0x2020200a
  456205:	and    BYTE PTR [rax],ah
  456207:	and    BYTE PTR [rax],ah
  456209:	and    BYTE PTR [rcx+rcx*2],bh
  45620c:	je     0x456273
  45620e:	ins    DWORD PTR es:[rdi],dx
  45620f:	ds or  eax,0x2020200a
  456215:	and    BYTE PTR [rax],ah
  456217:	and    BYTE PTR [rax],ah
  456219:	and    BYTE PTR [rax],ah
  45621b:	and    BYTE PTR [rax],ah
  45621d:	and    BYTE PTR [rcx+rcx*2],bh
  456220:	movsxd ebp,DWORD PTR [rdi+0x6e]
  456223:	rex.WR outs dx,DWORD PTR ds:[rsi]
  456226:	movsxd esp,DWORD PTR [rcx+0x6c]
  456229:	push   rdx
  45622a:	gs jae 0x45629c
  45622d:	jne    0x4562a1
  45622f:	movsxd esp,DWORD PTR [rbp+0x73]
  456232:	cmp    al,0x2f
  456234:	movsxd rbp,DWORD PTR [r15+0x6e]
  456238:	ds or  eax,0x2020200a
  45623e:	and    BYTE PTR [rax],ah
  456240:	and    BYTE PTR [rax],ah
  456242:	and    BYTE PTR [rax],ah
  456244:	and    BYTE PTR [rax],ah
  456246:	and    BYTE PTR [rsp+rdx*2],bh
  456249:	imul   esi,DWORD PTR [rsp+rbp*2+0x65],0x73655220
  456251:	outs   dx,DWORD PTR ds:[rsi]
  456252:	jne    0x4562c6
  456254:	movsxd esp,DWORD PTR [rbp+0x49]
  456257:	fs cmp eax,0x65695622
  45625d:	ja     0x4562a4
  45625f:	jne    0x4562cd
  456261:	(bad)  
  456262:	and    ah,BYTE PTR [rax]
  456264:	(bad)  
  456265:	ds or  eax,0x2020200a
  45626b:	and    BYTE PTR [rax],ah
  45626d:	and    BYTE PTR [rax],ah
  45626f:	and    BYTE PTR [rax],ah
  456271:	and    BYTE PTR [rax],ah
  456273:	and    BYTE PTR [rsp+rax*2],bh
  456276:	gs jae 0x4562dc
  456279:	jb     0x4562e4
  45627b:	jo     0x4562f1
  45627d:	imul   ebp,DWORD PTR [rdi+0x6e],0x73655220
  456284:	outs   dx,DWORD PTR ds:[rsi]
  456285:	jne    0x4562f9
  456287:	movsxd esp,DWORD PTR [rbp+0x49]
  45628a:	fs cmp eax,0x65695622
  456290:	ja     0x4562d7
  456292:	jne    0x456300
  456294:	(bad)  
  456295:	rex.R
  456296:	gs jae 0x4562fc
  456299:	jb     0x456304
  45629b:	jo     0x456311
  45629d:	imul   ebp,DWORD PTR [rdi+0x6e],0x3e2f2022
  4562a4:	or     eax,0x2020200a
  4562a9:	and    BYTE PTR [rax],ah
  4562ab:	and    BYTE PTR [rax],ah
  4562ad:	and    BYTE PTR [rax],ah
  4562af:	and    BYTE PTR [rax],ah
  4562b1:	and    BYTE PTR [rbx+rax*2],bh
  4562b4:	outs   dx,DWORD PTR ds:[rsi]
  4562b5:	ins    DWORD PTR es:[rdi],dx
  4562b6:	ins    DWORD PTR es:[rdi],dx
  4562b7:	(bad)  
  4562b8:	outs   dx,BYTE PTR ds:[rsi]
  4562b9:	and    BYTE PTR fs:[rcx+rdi*2+0x70],dl
  4562be:	gs cmp eax,0x65704f22
  4562c4:	outs   dx,BYTE PTR ds:[rsi]
  4562c5:	rex.RX outs dx,DWORD PTR ds:[rsi]
  4562c7:	ins    BYTE PTR es:[rdi],dx
  4562c8:	fs gs jb 0x45630f
  4562cc:	outs   dx,DWORD PTR ds:[rsi]
  4562cd:	ins    DWORD PTR es:[rdi],dx
  4562ce:	ins    DWORD PTR es:[rdi],dx
  4562cf:	(bad)  
  4562d0:	outs   dx,BYTE PTR ds:[rsi]
  4562d1:	and    bh,BYTE PTR fs:[rsi]
  4562d4:	or     eax,0x2020200a
  4562d9:	and    BYTE PTR [rax],ah
  4562db:	and    BYTE PTR [rax],ah
  4562dd:	and    BYTE PTR [rax],ah
  4562df:	and    BYTE PTR [rax],ah
  4562e1:	and    BYTE PTR [rax],ah
  4562e3:	and    BYTE PTR [rsi+rax*2],bh
  4562e6:	outs   dx,DWORD PTR ds:[rsi]
  4562e7:	ins    BYTE PTR es:[rdi],dx
  4562e8:	fs gs jb 0x45633a
  4562ec:	(bad)  
  4562ed:	ins    DWORD PTR es:[rdi],dx
  4562ee:	gs imul r12,QWORD PTR ds:[r11+0x72],0x666f736f
  4562f8:	je     0x45631a
  4562fa:	push   rbx
  4562fb:	push   rcx
  4562fc:	rex.WR and BYTE PTR [rbx+0x65],r10b
  456300:	jb     0x456378
  456302:	gs jb  0x456361
  456305:	xor    DWORD PTR [rax],esi
  456307:	xor    BYTE PTR [rsp+rcx*2+0x69],bl
  45630b:	movsxd esp,DWORD PTR [rbp+0x6e]
  45630e:	jae    0x456375
  456310:	and    BYTE PTR [rbp+riz*2+0x72],dl
  456314:	ins    DWORD PTR es:[rdi],dx
  456315:	jae    0x456353
  456317:	(bad)  
  456318:	rex.RX outs dx,DWORD PTR ds:[rsi]
  45631a:	ins    BYTE PTR es:[rdi],dx
  45631b:	fs gs jb 0x45636d
  45631f:	(bad)  
  456320:	ins    DWORD PTR es:[rdi],dx
  456321:	gs ds or eax,0x2020200a
  456328:	and    BYTE PTR [rax],ah
  45632a:	and    BYTE PTR [rax],ah
  45632c:	and    BYTE PTR [rax],ah
  45632e:	and    BYTE PTR [rax],ah
  456330:	and    BYTE PTR [rax],ah
  456332:	and    BYTE PTR [rbx+rdx*2],bh
  456335:	gs (bad) 
  456337:	jb     0x45639c
  456339:	push   0x74746150
  45633e:	gs jb  0x4563af
  456341:	ds push rbx
  456343:	push   rcx
  456344:	rex.WR push rbx
  456346:	gs jb  0x4563bf
  456349:	gs jb  0x45637e
  45634c:	xor    BYTE PTR [rax],dh
  45634e:	cmp    BYTE PTR [rdi+0x4c],bl
  456351:	imul   esp,DWORD PTR [rbx+0x65],0x5f65736e
  456358:	sub    ch,BYTE PTR [rsi]
  45635a:	push   rdx
  45635b:	push   rsp
  45635c:	rex.RX cmp al,0x2f
  45635f:	push   rbx
  456360:	gs (bad) 
  456362:	jb     0x4563c7
  456364:	push   0x74746150
  456369:	gs jb  0x4563da
  45636c:	ds or  eax,0x2020200a
  456372:	and    BYTE PTR [rax],ah
  456374:	and    BYTE PTR [rax],ah
  456376:	and    BYTE PTR [rax],ah
  456378:	and    BYTE PTR [rax],ah
  45637a:	and    BYTE PTR [rdi+rbp*1],bh
  45637d:	rex.XB outs dx,DWORD PTR ds:[rsi]
  45637f:	ins    DWORD PTR es:[rdi],dx
  456380:	ins    DWORD PTR es:[rdi],dx
  456381:	(bad)  
  456382:	outs   dx,BYTE PTR ds:[rsi]
  456383:	fs ds or eax,0x2020200a
  45638a:	and    BYTE PTR [rax],ah
  45638c:	and    BYTE PTR [rax],ah
  45638e:	and    BYTE PTR [rdi+rbp*1],bh
  456391:	rex.WB je 0x4563f9
  456394:	ins    DWORD PTR es:[rdi],dx
  456395:	ds or  eax,0x2020200a
  45639b:	and    BYTE PTR [rax],ah
  45639d:	and    BYTE PTR [rax],ah
  45639f:	and    BYTE PTR [rcx+rcx*2],bh
  4563a2:	je     0x456409
  4563a4:	ins    DWORD PTR es:[rdi],dx
  4563a5:	ds or  eax,0x2020200a
  4563ab:	and    BYTE PTR [rax],ah
  4563ad:	and    BYTE PTR [rax],ah
  4563af:	and    BYTE PTR [rax],ah
  4563b1:	and    BYTE PTR [rax],ah
  4563b3:	and    BYTE PTR [rcx+rcx*2],bh
  4563b6:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4563b9:	rex.WB outs dx,BYTE PTR ds:[rsi]
  4563bc:	je     0x456423
  4563be:	jb     0x45642e
  4563c0:	gs je  0x456415
  4563c3:	gs jae 0x456435
  4563c6:	jne    0x45643a
  4563c8:	movsxd esp,DWORD PTR [rbp+0x73]
  4563cb:	cmp    al,0x2f
  4563cd:	movsxd rbp,DWORD PTR [r15+0x6e]
  4563d1:	ds or  eax,0x2020200a
  4563d7:	and    BYTE PTR [rax],ah
  4563d9:	and    BYTE PTR [rax],ah
  4563db:	and    BYTE PTR [rax],ah
  4563dd:	and    BYTE PTR [rax],ah
  4563df:	and    BYTE PTR [rsp+rdx*2],bh
  4563e2:	imul   esi,DWORD PTR [rsp+rbp*2+0x65],0x73655220
  4563ea:	outs   dx,DWORD PTR ds:[rsi]
  4563eb:	jne    0x45645f
  4563ed:	movsxd esp,DWORD PTR [rbp+0x49]
  4563f0:	fs cmp eax,0x67655222
  4563f6:	imul   esi,DWORD PTR [rbx+0x74],0x78457265
  4563fd:	jo     0x456471
  4563ff:	gs jae 0x456475
  456402:	and    ah,BYTE PTR [rax]
  456404:	(bad)  
  456405:	ds or  eax,0x2020200a
  45640b:	and    BYTE PTR [rax],ah
  45640d:	and    BYTE PTR [rax],ah
  45640f:	and    BYTE PTR [rax],ah
  456411:	and    BYTE PTR [rax],ah
  456413:	and    BYTE PTR [rsp+rax*2],bh
  456416:	gs jae 0x45647c
  456419:	jb     0x456484
  45641b:	jo     0x456491
  45641d:	imul   ebp,DWORD PTR [rdi+0x6e],0x73655220
  456424:	outs   dx,DWORD PTR ds:[rsi]
  456425:	jne    0x456499
  456427:	movsxd esp,DWORD PTR [rbp+0x49]
  45642a:	fs cmp eax,0x67655222
  456430:	imul   esi,DWORD PTR [rbx+0x74],0x78457265
  456437:	jo     0x4564ab
  456439:	gs jae 0x4564af
  45643c:	rex.R
  45643d:	gs jae 0x4564a3
  456440:	jb     0x4564ab
  456442:	jo     0x4564b8
  456444:	imul   ebp,DWORD PTR [rdi+0x6e],0x3e2f2022
  45644b:	or     eax,0x2020200a
  456450:	and    BYTE PTR [rax],ah
  456452:	and    BYTE PTR [rax],ah
  456454:	and    BYTE PTR [rax],ah
  456456:	and    BYTE PTR [rax],ah
  456458:	and    BYTE PTR [rbx+rax*2],bh
  45645b:	outs   dx,DWORD PTR ds:[rsi]
  45645c:	ins    DWORD PTR es:[rdi],dx
  45645d:	ins    DWORD PTR es:[rdi],dx
  45645e:	(bad)  
  45645f:	outs   dx,BYTE PTR ds:[rsi]
  456460:	and    BYTE PTR fs:[rcx+rdi*2+0x70],dl
  456465:	gs cmp eax,0x65704f22
  45646b:	outs   dx,BYTE PTR ds:[rsi]
  45646c:	imul   r13d,DWORD PTR [rbp+r12*2+0x43],0x616d6d6f
  456475:	outs   dx,BYTE PTR ds:[rsi]
  456476:	and    bh,BYTE PTR fs:[rsi]
  456479:	or     eax,0x2020200a
  45647e:	and    BYTE PTR [rax],ah
  456480:	and    BYTE PTR [rax],ah
  456482:	and    BYTE PTR [rax],ah
  456484:	and    BYTE PTR [rax],ah
  456486:	and    BYTE PTR [rax],ah
  456488:	and    BYTE PTR [rax],ah
  45648a:	and    BYTE PTR [rsi+rax*2],bh
  45648d:	imul   ebp,DWORD PTR [rbp+riz*2+0x4e],0x3e656d61
  456495:	push   0x3a707474
  45649a:	(bad)  
  45649b:	(bad)  
  45649c:	outs   dx,DWORD PTR ds:[esi]
  45649e:	cs ins DWORD PTR es:[rdi],dx
  4564a0:	imul   esp,DWORD PTR [rbx+0x72],0x666f736f
  4564a7:	je     0x4564d7
  4564a9:	movsxd ebp,DWORD PTR [rdi+0x6d]
  4564ac:	(bad)  
  4564ad:	data16 ja 0x45651c
  4564b0:	imul   ebp,DWORD PTR [rsi+0x6b],0x696c3f2f
  4564b7:	outs   dx,BYTE PTR ds:[rsi]
  4564b8:	imul   ebp,DWORD PTR [rcx+0x64],0x3d
  4564bc:	xor    DWORD PTR [rax],esi
  4564be:	cmp    BYTE PTR [rip+0x2f3c3131],dh        # 0x2f8195f5
  4564c4:	imul   r13d,DWORD PTR [rbp+r12*2+0x4e],0x3e656d61
  4564cd:	or     eax,0x2020200a
  4564d2:	and    BYTE PTR [rax],ah
  4564d4:	and    BYTE PTR [rax],ah
  4564d6:	and    BYTE PTR [rax],ah
  4564d8:	and    BYTE PTR [rax],ah
  4564da:	and    BYTE PTR [rdi+rbp*1],bh
  4564dd:	rex.XB outs dx,DWORD PTR ds:[rsi]
  4564df:	ins    DWORD PTR es:[rdi],dx
  4564e0:	ins    DWORD PTR es:[rdi],dx
  4564e1:	(bad)  
  4564e2:	outs   dx,BYTE PTR ds:[rsi]
  4564e3:	fs ds or eax,0x2020200a
  4564ea:	and    BYTE PTR [rax],ah
  4564ec:	and    BYTE PTR [rax],ah
  4564ee:	and    BYTE PTR [rdi+rbp*1],bh
  4564f1:	rex.WB je 0x456559
  4564f4:	ins    DWORD PTR es:[rdi],dx
  4564f5:	ds or  eax,0x2020200a
  4564fb:	and    BYTE PTR [rax],ah
  4564fd:	and    BYTE PTR [rax],ah
  4564ff:	and    BYTE PTR [rcx+rcx*2],bh
  456502:	je     0x456569
  456504:	ins    DWORD PTR es:[rdi],dx
  456505:	ds or  eax,0x2020200a
  45650b:	and    BYTE PTR [rax],ah
  45650d:	and    BYTE PTR [rax],ah
  45650f:	and    BYTE PTR [rax],ah
  456511:	and    BYTE PTR [rax],ah
  456513:	and    BYTE PTR [rcx+rcx*2],bh
  456516:	movsxd ebp,DWORD PTR [rdi+0x6e]
  456519:	rex.WB outs dx,BYTE PTR ds:[rsi]
  45651c:	je     0x456583
  45651e:	jb     0x45658e
  456520:	gs je  0x456575
  456523:	gs jae 0x456595
  456526:	jne    0x45659a
  456528:	movsxd esp,DWORD PTR [rbp+0x73]
  45652b:	cmp    al,0x2f
  45652d:	movsxd rbp,DWORD PTR [r15+0x6e]
  456531:	ds or  eax,0x2020200a
  456537:	and    BYTE PTR [rax],ah
  456539:	and    BYTE PTR [rax],ah
  45653b:	and    BYTE PTR [rax],ah
  45653d:	and    BYTE PTR [rax],ah
  45653f:	and    BYTE PTR [rsp+rdx*2],bh
  456542:	imul   esi,DWORD PTR [rsp+rbp*2+0x65],0x73655220
  45654a:	outs   dx,DWORD PTR ds:[rsi]
  45654b:	jne    0x4565bf
  45654d:	movsxd esp,DWORD PTR [rbp+0x49]
  456550:	fs cmp eax,0x65695622
  456556:	ja     0x4565a8
  456558:	jb     0x4565c3
  45655a:	jbe    0x4565bd
  45655c:	movsxd edi,DWORD PTR [rcx+0x53]
  45655f:	je     0x4565c2
  456561:	je     0x4565c8
  456563:	ins    DWORD PTR es:[rdi],dx
  456564:	outs   dx,BYTE PTR gs:[rsi]
  456566:	je     0x45658a
  456568:	and    BYTE PTR [rdi],ch
  45656a:	ds or  eax,0x2020200a
  456570:	and    BYTE PTR [rax],ah
  456572:	and    BYTE PTR [rax],ah
  456574:	and    BYTE PTR [rax],ah
  456576:	and    BYTE PTR [rax],ah
  456578:	and    BYTE PTR [rsp+rax*2],bh
  45657b:	gs jae 0x4565e1
  45657e:	jb     0x4565e9
  456580:	jo     0x4565f6
  456582:	imul   ebp,DWORD PTR [rdi+0x6e],0x73655220
  456589:	outs   dx,DWORD PTR ds:[rsi]
  45658a:	jne    0x4565fe
  45658c:	movsxd esp,DWORD PTR [rbp+0x49]
  45658f:	fs cmp eax,0x65695622
  456595:	ja     0x4565e7
  456597:	jb     0x456602
  456599:	jbe    0x4565fc
  45659b:	movsxd edi,DWORD PTR [rcx+0x53]
  45659e:	je     0x456601
  4565a0:	je     0x456607
  4565a2:	ins    DWORD PTR es:[rdi],dx
  4565a3:	outs   dx,BYTE PTR gs:[rsi]
  4565a5:	je     0x4565eb
  4565a7:	gs jae 0x45660d
  4565aa:	jb     0x456615
  4565ac:	jo     0x456622
  4565ae:	imul   ebp,DWORD PTR [rdi+0x6e],0x3e2f2022
  4565b5:	or     eax,0x2020200a
  4565ba:	and    BYTE PTR [rax],ah
  4565bc:	and    BYTE PTR [rax],ah
  4565be:	and    BYTE PTR [rax],ah
  4565c0:	and    BYTE PTR [rax],ah
  4565c2:	and    BYTE PTR [rbx+rax*2],bh
  4565c5:	outs   dx,DWORD PTR ds:[rsi]
  4565c6:	ins    DWORD PTR es:[rdi],dx
  4565c7:	ins    DWORD PTR es:[rdi],dx
  4565c8:	(bad)  
  4565c9:	outs   dx,BYTE PTR ds:[rsi]
  4565ca:	and    BYTE PTR fs:[rcx+rdi*2+0x70],dl
  4565cf:	gs cmp eax,0x65704f22
  4565d5:	outs   dx,BYTE PTR ds:[rsi]
  4565d6:	imul   r13d,DWORD PTR [rbp+r12*2+0x43],0x616d6d6f
  4565df:	outs   dx,BYTE PTR ds:[rsi]
  4565e0:	and    bh,BYTE PTR fs:[rsi]
  4565e3:	or     eax,0x2020200a
  4565e8:	and    BYTE PTR [rax],ah
  4565ea:	and    BYTE PTR [rax],ah
  4565ec:	and    BYTE PTR [rax],ah
  4565ee:	and    BYTE PTR [rax],ah
  4565f0:	and    BYTE PTR [rax],ah
  4565f2:	and    BYTE PTR [rax],ah
  4565f4:	and    BYTE PTR [rsi+rax*2],bh
  4565f7:	imul   ebp,DWORD PTR [rbp+riz*2+0x4e],0x3e656d61
  4565ff:	push   0x3a707474
  456604:	(bad)  
  456605:	(bad)  
  456606:	outs   dx,DWORD PTR ds:[esi]
  456608:	cs ins DWORD PTR es:[rdi],dx
  45660a:	imul   esp,DWORD PTR [rbx+0x72],0x666f736f
  456611:	je     0x456641
  456613:	movsxd ebp,DWORD PTR [rdi+0x6d]
  456616:	(bad)  
  456617:	data16 ja 0x456686
  45661a:	imul   ebp,DWORD PTR [rsi+0x6b],0x696c3f2f
  456621:	outs   dx,BYTE PTR ds:[rsi]
  456622:	imul   ebp,DWORD PTR [rcx+0x64],0x3d
  456626:	xor    DWORD PTR [rax],esi
  456628:	xor    al,0x35
  45662a:	xor    esi,DWORD PTR [rcx]
  45662c:	cmp    al,0x2f
  45662e:	imul   r13d,DWORD PTR [rbp+r12*2+0x4e],0x3e656d61
  456637:	or     eax,0x2020200a
  45663c:	and    BYTE PTR [rax],ah
  45663e:	and    BYTE PTR [rax],ah
  456640:	and    BYTE PTR [rax],ah
  456642:	and    BYTE PTR [rax],ah
  456644:	and    BYTE PTR [rdi+rbp*1],bh
  456647:	rex.XB outs dx,DWORD PTR ds:[rsi]
  456649:	ins    DWORD PTR es:[rdi],dx
  45664a:	ins    DWORD PTR es:[rdi],dx
  45664b:	(bad)  
  45664c:	outs   dx,BYTE PTR ds:[rsi]
  45664d:	fs ds or eax,0x2020200a
  456654:	and    BYTE PTR [rax],ah
  456656:	and    BYTE PTR [rax],ah
  456658:	and    BYTE PTR [rdi+rbp*1],bh
  45665b:	rex.WB je 0x4566c3
  45665e:	ins    DWORD PTR es:[rdi],dx
  45665f:	ds or  eax,0x2020200a
  456665:	and    BYTE PTR [rax],ah
  456667:	and    BYTE PTR [rax],ah
  456669:	and    BYTE PTR [rcx+rcx*2],bh
  45666c:	je     0x4566d3
  45666e:	ins    DWORD PTR es:[rdi],dx
  45666f:	ds or  eax,0x2020200a
  456675:	and    BYTE PTR [rax],ah
  456677:	and    BYTE PTR [rax],ah
  456679:	and    BYTE PTR [rax],ah
  45667b:	and    BYTE PTR [rax],ah
  45667d:	and    BYTE PTR [rcx+rcx*2],bh
  456680:	movsxd ebp,DWORD PTR [rdi+0x6e]
  456683:	rex.WB outs dx,BYTE PTR ds:[rsi]
  456686:	je     0x4566ed
  456688:	jb     0x4566f8
  45668a:	gs je  0x4566df
  45668d:	gs jae 0x4566ff
  456690:	jne    0x456704
  456692:	movsxd esp,DWORD PTR [rbp+0x73]
  456695:	cmp    al,0x2f
  456697:	movsxd rbp,DWORD PTR [r15+0x6e]
  45669b:	ds or  eax,0x2020200a
  4566a1:	and    BYTE PTR [rax],ah
  4566a3:	and    BYTE PTR [rax],ah
  4566a5:	and    BYTE PTR [rax],ah
  4566a7:	and    BYTE PTR [rax],ah
  4566a9:	and    BYTE PTR [rsp+rdx*2],bh
  4566ac:	imul   esi,DWORD PTR [rsp+rbp*2+0x65],0x73655220
  4566b4:	outs   dx,DWORD PTR ds:[rsi]
  4566b5:	jne    0x456729
  4566b7:	movsxd esp,DWORD PTR [rbp+0x49]
  4566ba:	fs cmp eax,0x6d6f4322
  4566c0:	ins    DWORD PTR es:[rdi],dx
  4566c1:	jne    0x456731
  4566c3:	imul   esi,DWORD PTR [rcx+rdi*2+0x22],0xd3e2f20
  4566cb:	or     ah,BYTE PTR [rax]
  4566cd:	and    BYTE PTR [rax],ah
  4566cf:	and    BYTE PTR [rax],ah
  4566d1:	and    BYTE PTR [rax],ah
  4566d3:	and    BYTE PTR [rax],ah
  4566d5:	and    BYTE PTR [rax],ah
  4566d7:	and    BYTE PTR [rsp+rax*2],bh
  4566da:	gs jae 0x456740
  4566dd:	jb     0x456748
  4566df:	jo     0x456755
  4566e1:	imul   ebp,DWORD PTR [rdi+0x6e],0x73655220
  4566e8:	outs   dx,DWORD PTR ds:[rsi]
  4566e9:	jne    0x45675d
  4566eb:	movsxd esp,DWORD PTR [rbp+0x49]
  4566ee:	fs cmp eax,0x6d6f4322
  4566f4:	ins    DWORD PTR es:[rdi],dx
  4566f5:	jne    0x456765
  4566f7:	imul   esi,DWORD PTR [rcx+rdi*2+0x44],0x72637365
  4566ff:	imul   esi,DWORD PTR [rax+0x74],0x226e6f69
  456706:	and    BYTE PTR [rdi],ch
  456708:	ds or  eax,0x2020200a
  45670e:	and    BYTE PTR [rax],ah
  456710:	and    BYTE PTR [rax],ah
  456712:	and    BYTE PTR [rax],ah
  456714:	and    BYTE PTR [rax],ah
  456716:	and    BYTE PTR [rbx+rax*2],bh
  456719:	outs   dx,DWORD PTR ds:[rsi]
  45671a:	ins    DWORD PTR es:[rdi],dx
  45671b:	ins    DWORD PTR es:[rdi],dx
  45671c:	(bad)  
  45671d:	outs   dx,BYTE PTR ds:[rsi]
  45671e:	and    BYTE PTR fs:[rcx+rdi*2+0x70],dl
  456723:	gs cmp eax,0x65704f22
  456729:	outs   dx,BYTE PTR ds:[rsi]
  45672a:	imul   r13d,DWORD PTR [rbp+r12*2+0x43],0x616d6d6f
  456733:	outs   dx,BYTE PTR ds:[rsi]
  456734:	and    bh,BYTE PTR fs:[rsi]
  456737:	or     eax,0x2020200a
  45673c:	and    BYTE PTR [rax],ah
  45673e:	and    BYTE PTR [rax],ah
  456740:	and    BYTE PTR [rax],ah
  456742:	and    BYTE PTR [rax],ah
  456744:	and    BYTE PTR [rax],ah
  456746:	and    BYTE PTR [rax],ah
  456748:	and    BYTE PTR [rsi+rax*2],bh
  45674b:	imul   ebp,DWORD PTR [rbp+riz*2+0x4e],0x3e656d61
  456753:	push   0x3a707474
  456758:	(bad)  
  456759:	(bad)  
  45675a:	outs   dx,DWORD PTR ds:[esi]
  45675c:	cs ins DWORD PTR es:[rdi],dx
  45675e:	imul   esp,DWORD PTR [rbx+0x72],0x666f736f
  456765:	je     0x456795
  456767:	movsxd ebp,DWORD PTR [rdi+0x6d]
  45676a:	(bad)  
  45676b:	data16 ja 0x4567da
  45676e:	imul   ebp,DWORD PTR [rsi+0x6b],0x694c3f2f
  456775:	outs   dx,BYTE PTR ds:[rsi]
  456776:	imul   ecx,DWORD PTR [rcx+0x64],0x3d
  45677a:	xor    DWORD PTR [rax],esi
  45677c:	cmp    BYTE PTR [rsi],dh
  45677e:	cmp    DWORD PTR [rsi],esi
  456780:	cmp    al,0x2f
  456782:	imul   r13d,DWORD PTR [rbp+r12*2+0x4e],0x3e656d61
  45678b:	or     eax,0x2020200a
  456790:	and    BYTE PTR [rax],ah
  456792:	and    BYTE PTR [rax],ah
  456794:	and    BYTE PTR [rax],ah
  456796:	and    BYTE PTR [rax],ah
  456798:	and    BYTE PTR [rdi+rbp*1],bh
  45679b:	rex.XB outs dx,DWORD PTR ds:[rsi]
  45679d:	ins    DWORD PTR es:[rdi],dx
  45679e:	ins    DWORD PTR es:[rdi],dx
  45679f:	(bad)  
  4567a0:	outs   dx,BYTE PTR ds:[rsi]
  4567a1:	fs ds or eax,0x2020200a
  4567a8:	and    BYTE PTR [rax],ah
  4567aa:	and    BYTE PTR [rax],ah
  4567ac:	and    BYTE PTR [rdi+rbp*1],bh
  4567af:	rex.WB je 0x456817
  4567b2:	ins    DWORD PTR es:[rdi],dx
  4567b3:	ds or  eax,0x2020200a
  4567b9:	and    BYTE PTR [rax],ah
  4567bb:	and    BYTE PTR [rax],ah
  4567bd:	and    BYTE PTR [rcx+rcx*2],bh
  4567c0:	je     0x456827
  4567c2:	ins    DWORD PTR es:[rdi],dx
  4567c3:	ds or  eax,0x2020200a
  4567c9:	and    BYTE PTR [rax],ah
  4567cb:	and    BYTE PTR [rax],ah
  4567cd:	and    BYTE PTR [rax],ah
  4567cf:	and    BYTE PTR [rax],ah
  4567d1:	and    BYTE PTR [rcx+rcx*2],bh
  4567d4:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4567d7:	rex.WB outs dx,BYTE PTR ds:[rsi]
  4567da:	je     0x456841
  4567dc:	jb     0x45684c
  4567de:	gs je  0x456833
  4567e1:	gs jae 0x456853
  4567e4:	jne    0x456858
  4567e6:	movsxd esp,DWORD PTR [rbp+0x73]
  4567e9:	cmp    al,0x2f
  4567eb:	movsxd rbp,DWORD PTR [r15+0x6e]
  4567ef:	ds or  eax,0x2020200a
  4567f5:	and    BYTE PTR [rax],ah
  4567f7:	and    BYTE PTR [rax],ah
  4567f9:	and    BYTE PTR [rax],ah
  4567fb:	and    BYTE PTR [rax],ah
  4567fd:	and    BYTE PTR [rsp+rdx*2],bh
  456800:	imul   esi,DWORD PTR [rsp+rbp*2+0x65],0x73655220
  456808:	outs   dx,DWORD PTR ds:[rsi]
  456809:	jne    0x45687d
  45680b:	movsxd esp,DWORD PTR [rbp+0x49]
  45680e:	fs cmp eax,0x65695622
  456814:	ja     0x456869
  456816:	(bad)  
  456817:	ins    DWORD PTR es:[rdi],dx
  456818:	jo     0x456886
  45681a:	gs jae 0x45683f
  45681d:	and    BYTE PTR [rdi],ch
  45681f:	ds or  eax,0x2020200a
  456825:	and    BYTE PTR [rax],ah
  456827:	and    BYTE PTR [rax],ah
  456829:	and    BYTE PTR [rax],ah
  45682b:	and    BYTE PTR [rax],ah
  45682d:	and    BYTE PTR [rsp+rax*2],bh
  456830:	gs jae 0x456896
  456833:	jb     0x45689e
  456835:	jo     0x4568ab
  456837:	imul   ebp,DWORD PTR [rdi+0x6e],0x73655220
  45683e:	outs   dx,DWORD PTR ds:[rsi]
  45683f:	jne    0x4568b3
  456841:	movsxd esp,DWORD PTR [rbp+0x49]
  456844:	fs cmp eax,0x65695622
  45684a:	ja     0x45689f
  45684c:	(bad)  
  45684d:	ins    DWORD PTR es:[rdi],dx
  45684e:	jo     0x4568bc
  456850:	gs jae 0x456897
  456853:	gs jae 0x4568b9
  456856:	jb     0x4568c1
  456858:	jo     0x4568ce
  45685a:	imul   ebp,DWORD PTR [rdi+0x6e],0x3e2f2022
  456861:	or     eax,0x2020200a
  456866:	and    BYTE PTR [rax],ah
  456868:	and    BYTE PTR [rax],ah
  45686a:	and    BYTE PTR [rax],ah
  45686c:	and    BYTE PTR [rax],ah
  45686e:	and    BYTE PTR [rbx+rax*2],bh
  456871:	outs   dx,DWORD PTR ds:[rsi]
  456872:	ins    DWORD PTR es:[rdi],dx
  456873:	ins    DWORD PTR es:[rdi],dx
  456874:	(bad)  
  456875:	outs   dx,BYTE PTR ds:[rsi]
  456876:	and    BYTE PTR fs:[rcx+rdi*2+0x70],dl
  45687b:	gs cmp eax,0x65704f22
  456881:	outs   dx,BYTE PTR ds:[rsi]
  456882:	imul   r13d,DWORD PTR [rbp+r12*2+0x43],0x616d6d6f
  45688b:	outs   dx,BYTE PTR ds:[rsi]
  45688c:	and    bh,BYTE PTR fs:[rsi]
  45688f:	or     eax,0x2020200a
  456894:	and    BYTE PTR [rax],ah
  456896:	and    BYTE PTR [rax],ah
  456898:	and    BYTE PTR [rax],ah
  45689a:	and    BYTE PTR [rax],ah
  45689c:	and    BYTE PTR [rax],ah
  45689e:	and    BYTE PTR [rax],ah
  4568a0:	and    BYTE PTR [rsi+rax*2],bh
  4568a3:	imul   ebp,DWORD PTR [rbp+riz*2+0x4e],0x3e656d61
  4568ab:	push   0x3a707474
  4568b0:	(bad)  
  4568b1:	(bad)  
  4568b2:	outs   dx,DWORD PTR ds:[esi]
  4568b4:	cs ins DWORD PTR es:[rdi],dx
  4568b6:	imul   esp,DWORD PTR [rbx+0x72],0x666f736f
  4568bd:	je     0x4568ed
  4568bf:	movsxd ebp,DWORD PTR [rdi+0x6d]
  4568c2:	(bad)  
  4568c3:	data16 ja 0x456932
  4568c6:	imul   ebp,DWORD PTR [rsi+0x6b],0x696c3f2f
  4568cd:	outs   dx,BYTE PTR ds:[rsi]
  4568ce:	imul   ebp,DWORD PTR [rcx+0x64],0x3d
  4568d2:	ss (bad) 
  4568d4:	(bad)  
  4568d5:	xor    edi,DWORD PTR [rcx]
  4568d7:	cmp    al,0x2f
  4568d9:	imul   r13d,DWORD PTR [rbp+r12*2+0x4e],0x3e656d61
  4568e2:	or     eax,0x2020200a
  4568e7:	and    BYTE PTR [rax],ah
  4568e9:	and    BYTE PTR [rax],ah
  4568eb:	and    BYTE PTR [rax],ah
  4568ed:	and    BYTE PTR [rax],ah
  4568ef:	and    BYTE PTR [rdi+rbp*1],bh
  4568f2:	rex.XB outs dx,DWORD PTR ds:[rsi]
  4568f4:	ins    DWORD PTR es:[rdi],dx
  4568f5:	ins    DWORD PTR es:[rdi],dx
  4568f6:	(bad)  
  4568f7:	outs   dx,BYTE PTR ds:[rsi]
  4568f8:	fs ds or eax,0x2020200a
  4568ff:	and    BYTE PTR [rax],ah
  456901:	and    BYTE PTR [rax],ah
  456903:	and    BYTE PTR [rdi+rbp*1],bh
  456906:	rex.WB je 0x45696e
  456909:	ins    DWORD PTR es:[rdi],dx
  45690a:	ds or  eax,0x2020200a
  456910:	and    BYTE PTR [rdi+rbp*1],bh
  456913:	push   rax
  456914:	(bad)  
  456915:	addr32 gs ds or eax,0x2020200a
  45691d:	and    BYTE PTR [rax+rdx*2],bh
  456920:	(bad)  
  456921:	and    BYTE PTR gs:[ecx+edi*2+0x70],dl
  456927:	gs cmp eax,0x61745322
  45692d:	outs   dx,BYTE PTR ds:[rsi]
  45692e:	fs (bad) 
  456930:	jb     0x456996
  456932:	push   rax
  456933:	(bad)  
  456934:	and    bh,BYTE PTR gs:[esi]
  456938:	or     eax,0x2020200a
  45693d:	and    BYTE PTR [rax],ah
  45693f:	and    BYTE PTR [rax],ah
  456941:	and    BYTE PTR [rsp+rdx*2],bh
  456944:	imul   esi,DWORD PTR [rsp+rbp*2+0x65],0x73655220
  45694c:	outs   dx,DWORD PTR ds:[rsi]
  45694d:	jne    0x4569c1
  45694f:	movsxd esp,DWORD PTR [rbp+0x49]
  456952:	fs cmp eax,0x76644122
  456958:	(bad)  
  456959:	outs   dx,BYTE PTR ds:[rsi]
  45695a:	movsxd esp,DWORD PTR [rbp+0x64]
  45695d:	push   rax
  45695e:	(bad)  
  45695f:	and    ah,BYTE PTR gs:[eax]
  456963:	(bad)  
  456964:	ds or  eax,0x2020200a
  45696a:	and    BYTE PTR [rax],ah
  45696c:	and    BYTE PTR [rax],ah
  45696e:	and    BYTE PTR [rcx+rcx*2],bh
  456971:	je     0x4569d8
  456973:	ins    DWORD PTR es:[rdi],dx
  456974:	ds or  eax,0x2020200a
  45697a:	and    BYTE PTR [rax],ah
  45697c:	and    BYTE PTR [rax],ah
  45697e:	and    BYTE PTR [rax],ah
  456980:	and    BYTE PTR [rax],ah
  456982:	and    BYTE PTR [rcx+rcx*2],bh
  456985:	movsxd ebp,DWORD PTR [rdi+0x6e]
  456988:	rex.WB outs dx,BYTE PTR ds:[rsi]
  45698b:	jae    0x456a01
  45698d:	(bad)  
  45698e:	ins    BYTE PTR es:[rdi],dx
  45698f:	ins    BYTE PTR es:[rdi],dx
  456990:	push   rbp
  456991:	jae    0x4569fc
  456993:	outs   dx,BYTE PTR ds:[rsi]
  456994:	rex.XB outs dx,DWORD PTR ds:[esi]
  456997:	outs   dx,BYTE PTR ds:[rsi]
  456998:	imul   sp,WORD PTR [rdi+0x75],0x6172
  45699e:	je     0x456a09
  4569a0:	outs   dx,DWORD PTR ds:[rsi]
  4569a1:	outs   dx,BYTE PTR ds:[rsi]
  4569a2:	imul   r13d,DWORD PTR [rbp+r12*2+0x3c],0x6f63492f
  4569ab:	outs   dx,BYTE PTR ds:[rsi]
  4569ac:	ds or  eax,0x2020200a
  4569b2:	and    BYTE PTR [rax],ah
  4569b4:	and    BYTE PTR [rax],ah
  4569b6:	and    BYTE PTR [rax],ah
  4569b8:	and    BYTE PTR [rax],ah
  4569ba:	and    BYTE PTR [rsp+rdx*2],bh
  4569bd:	imul   esi,DWORD PTR [rsp+rbp*2+0x65],0x73655220
  4569c5:	outs   dx,DWORD PTR ds:[rsi]
  4569c6:	jne    0x456a3a
  4569c8:	movsxd esp,DWORD PTR [rbp+0x49]
  4569cb:	fs cmp eax,0x736e4922
  4569d1:	je     0x456a34
  4569d3:	ins    BYTE PTR es:[rdi],dx
  4569d4:	ins    BYTE PTR es:[rdi],dx
  4569d5:	push   rbp
  4569d6:	jae    0x456a41
  4569d8:	outs   dx,BYTE PTR ds:[rsi]
  4569d9:	rex.XB outs dx,DWORD PTR ds:[esi]
  4569dc:	outs   dx,BYTE PTR ds:[rsi]
  4569dd:	imul   sp,WORD PTR [rdi+0x75],0x6172
  4569e3:	je     0x456a4e
  4569e5:	outs   dx,DWORD PTR ds:[rsi]
  4569e6:	outs   dx,BYTE PTR ds:[rsi]
  4569e7:	imul   r13d,DWORD PTR [rbp+r12*2+0x22],0xd3e2f20
  4569f0:	or     ah,BYTE PTR [rax]
  4569f2:	and    BYTE PTR [rax],ah
  4569f4:	and    BYTE PTR [rax],ah
  4569f6:	and    BYTE PTR [rax],ah
  4569f8:	and    BYTE PTR [rax],ah
  4569fa:	and    BYTE PTR [rax],ah
  4569fc:	and    BYTE PTR [rsp+rax*2],bh
  4569ff:	gs jae 0x456a65
  456a02:	jb     0x456a6d
  456a04:	jo     0x456a7a
  456a06:	imul   ebp,DWORD PTR [rdi+0x6e],0x73655220
  456a0d:	outs   dx,DWORD PTR ds:[rsi]
  456a0e:	jne    0x456a82
  456a10:	movsxd esp,DWORD PTR [rbp+0x49]
  456a13:	fs cmp eax,0x736e4922
  456a19:	je     0x456a7c
  456a1b:	ins    BYTE PTR es:[rdi],dx
  456a1c:	ins    BYTE PTR es:[rdi],dx
  456a1d:	push   rbp
  456a1e:	jae    0x456a89
  456a20:	outs   dx,BYTE PTR ds:[rsi]
  456a21:	rex.XB outs dx,DWORD PTR ds:[esi]
  456a24:	outs   dx,BYTE PTR ds:[rsi]
  456a25:	imul   sp,WORD PTR [rdi+0x75],0x6172
  456a2b:	je     0x456a96
  456a2d:	outs   dx,DWORD PTR ds:[rsi]
  456a2e:	outs   dx,BYTE PTR ds:[rsi]
  456a2f:	imul   r13d,DWORD PTR [rbp+r12*2+0x44],0x72637365
  456a38:	imul   esi,DWORD PTR [rax+0x74],0x226e6f69
  456a3f:	and    BYTE PTR [rdi],ch
  456a41:	ds or  eax,0x2020200a
  456a47:	and    BYTE PTR [rax],ah
  456a49:	and    BYTE PTR [rax],ah
  456a4b:	and    BYTE PTR [rax],ah
  456a4d:	and    BYTE PTR [rax],ah
  456a4f:	and    BYTE PTR [rbx+rax*2],bh
  456a52:	outs   dx,DWORD PTR ds:[rsi]
  456a53:	ins    DWORD PTR es:[rdi],dx
  456a54:	ins    DWORD PTR es:[rdi],dx
  456a55:	(bad)  
  456a56:	outs   dx,BYTE PTR ds:[rsi]
  456a57:	and    BYTE PTR fs:[rcx+rdi*2+0x70],dl
  456a5c:	gs cmp eax,0x75614c22
  456a62:	outs   dx,BYTE PTR ds:[rsi]
  456a63:	movsxd ebp,DWORD PTR [rax+0x53]
  456a66:	gs je  0x456ade
  456a69:	jo     0x456ac2
  456a6b:	imul   esi,DWORD PTR [rax+rbp*2+0x54],0x6c706d65
  456a73:	(bad)  
  456a74:	je     0x456adb
  456a76:	rex.XB outs dx,DWORD PTR ds:[rsi]
  456a78:	ins    DWORD PTR es:[rdi],dx
  456a79:	ins    DWORD PTR es:[rdi],dx
  456a7a:	(bad)  
  456a7b:	outs   dx,BYTE PTR ds:[rsi]
  456a7c:	and    bh,BYTE PTR fs:[rsi]
  456a7f:	or     eax,0x2020200a
  456a84:	and    BYTE PTR [rax],ah
  456a86:	and    BYTE PTR [rax],ah
  456a88:	and    BYTE PTR [rax],ah
  456a8a:	and    BYTE PTR [rax],ah
  456a8c:	and    BYTE PTR [rax],ah
  456a8e:	and    BYTE PTR [rax],ah
  456a90:	and    BYTE PTR [rcx+rax*2],bh
  456a93:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  456a97:	outs   dx,BYTE PTR ds:[rsi]
  456a98:	ds rex.WB
  456a9a:	rex.WRX push rbx
  456a9c:	push   rsp
  456a9d:	rex.B
  456a9e:	rex.WR
  456a9f:	rex.WR cmp al,0x2f
  456aa2:	movsxd esi,DWORD PTR [r9+rbp*2+0x6f]
  456aa7:	outs   dx,BYTE PTR ds:[rsi]
  456aa8:	ds or  eax,0x2020200a
  456aae:	and    BYTE PTR [rax],ah
  456ab0:	and    BYTE PTR [rax],ah
  456ab2:	and    BYTE PTR [rax],ah
  456ab4:	and    BYTE PTR [rax],ah
  456ab6:	and    BYTE PTR [rdi+rbp*1],bh
  456ab9:	rex.XB outs dx,DWORD PTR ds:[rsi]
  456abb:	ins    DWORD PTR es:[rdi],dx
  456abc:	ins    DWORD PTR es:[rdi],dx
  456abd:	(bad)  
  456abe:	outs   dx,BYTE PTR ds:[rsi]
  456abf:	fs ds or eax,0x2020200a
  456ac6:	and    BYTE PTR [rax],ah
  456ac8:	and    BYTE PTR [rax],ah
  456aca:	and    BYTE PTR [rdi+rbp*1],bh
  456acd:	rex.WB je 0x456b35
  456ad0:	ins    DWORD PTR es:[rdi],dx
  456ad1:	ds or  eax,0x2020200a
  456ad7:	and    BYTE PTR [rax],ah
  456ad9:	and    BYTE PTR [rax],ah
  456adb:	and    BYTE PTR [rcx+rcx*2],bh
  456ade:	je     0x456b45
  456ae0:	ins    DWORD PTR es:[rdi],dx
  456ae1:	ds or  eax,0x2020200a
  456ae7:	and    BYTE PTR [rax],ah
  456ae9:	and    BYTE PTR [rax],ah
  456aeb:	and    BYTE PTR [rax],ah
  456aed:	and    BYTE PTR [rax],ah
  456aef:	and    BYTE PTR [rcx+rcx*2],bh
  456af2:	movsxd ebp,DWORD PTR [rdi+0x6e]
  456af5:	rex.WB outs dx,BYTE PTR ds:[rsi]
  456af8:	jae    0x456b6e
  456afa:	(bad)  
  456afb:	ins    BYTE PTR es:[rdi],dx
  456afc:	ins    BYTE PTR es:[rdi],dx
  456afd:	cmp    al,0x2f
  456aff:	movsxd rbp,DWORD PTR [r15+0x6e]
  456b03:	ds or  eax,0x2020200a
  456b09:	and    BYTE PTR [rax],ah
  456b0b:	and    BYTE PTR [rax],ah
  456b0d:	and    BYTE PTR [rax],ah
  456b0f:	and    BYTE PTR [rax],ah
  456b11:	and    BYTE PTR [rsp+rdx*2],bh
  456b14:	imul   esi,DWORD PTR [rsp+rbp*2+0x65],0x73655220
  456b1c:	outs   dx,DWORD PTR ds:[rsi]
  456b1d:	jne    0x456b91
  456b1f:	movsxd esp,DWORD PTR [rbp+0x49]
  456b22:	fs cmp eax,0x746e4522
  456b28:	gs jb  0x456b9b
  456b2b:	jb     0x456b96
  456b2d:	jae    0x456b94
  456b2f:	rex.R
  456b30:	gs jo  0x456b9f
  456b33:	outs   dx,DWORD PTR ds:[rsi]
  456b34:	jns    0x456ba3
  456b36:	outs   dx,BYTE PTR gs:[rsi]
  456b38:	je     0x456b5c
  456b3a:	and    BYTE PTR [rdi],ch
  456b3c:	ds or  eax,0x2020200a
  456b42:	and    BYTE PTR [rax],ah
  456b44:	and    BYTE PTR [rax],ah
  456b46:	and    BYTE PTR [rax],ah
  456b48:	and    BYTE PTR [rax],ah
  456b4a:	and    BYTE PTR [rsp+rax*2],bh
  456b4d:	gs jae 0x456bb3
  456b50:	jb     0x456bbb
  456b52:	jo     0x456bc8
  456b54:	imul   ebp,DWORD PTR [rdi+0x6e],0x73655220
  456b5b:	outs   dx,DWORD PTR ds:[rsi]
  456b5c:	jne    0x456bd0
  456b5e:	movsxd esp,DWORD PTR [rbp+0x49]
  456b61:	fs cmp eax,0x746e4522
  456b67:	gs jb  0x456bda
  456b6a:	jb     0x456bd5
  456b6c:	jae    0x456bd3
  456b6e:	rex.R
  456b6f:	gs jo  0x456bde
  456b72:	outs   dx,DWORD PTR ds:[rsi]
  456b73:	jns    0x456be2
  456b75:	outs   dx,BYTE PTR gs:[rsi]
  456b77:	je     0x456bbd
  456b79:	gs jae 0x456bdf
  456b7c:	jb     0x456be7
  456b7e:	jo     0x456bf4
  456b80:	imul   ebp,DWORD PTR [rdi+0x6e],0x3e2f2022
  456b87:	or     eax,0x2020200a
  456b8c:	and    BYTE PTR [rax],ah
  456b8e:	and    BYTE PTR [rax],ah
  456b90:	and    BYTE PTR [rax],ah
  456b92:	and    BYTE PTR [rax],ah
  456b94:	and    BYTE PTR [rbx+rax*2],bh
  456b97:	outs   dx,DWORD PTR ds:[rsi]
  456b98:	ins    DWORD PTR es:[rdi],dx
  456b99:	ins    DWORD PTR es:[rdi],dx
  456b9a:	(bad)  
  456b9b:	outs   dx,BYTE PTR ds:[rsi]
  456b9c:	and    BYTE PTR fs:[rcx+rdi*2+0x70],dl
  456ba1:	gs cmp eax,0x75614c22
  456ba7:	outs   dx,BYTE PTR ds:[rsi]
  456ba8:	movsxd ebp,DWORD PTR [rax+0x53]
  456bab:	gs je  0x456c23
  456bae:	jo     0x456bf3
  456bb0:	outs   dx,DWORD PTR ds:[rsi]
  456bb1:	ins    DWORD PTR es:[rdi],dx
  456bb2:	ins    DWORD PTR es:[rdi],dx
  456bb3:	(bad)  
  456bb4:	outs   dx,BYTE PTR ds:[rsi]
  456bb5:	and    bh,BYTE PTR fs:[rsi]
  456bb8:	or     eax,0x2020200a
  456bbd:	and    BYTE PTR [rax],ah
  456bbf:	and    BYTE PTR [rax],ah
  456bc1:	and    BYTE PTR [rax],ah
  456bc3:	and    BYTE PTR [rax],ah
  456bc5:	and    BYTE PTR [rax],ah
  456bc7:	and    BYTE PTR [rax],ah
  456bc9:	and    BYTE PTR [rcx+rax*2],bh
  456bcc:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  456bd0:	outs   dx,BYTE PTR ds:[rsi]
  456bd1:	ds push rax
  456bd3:	push   rdx
  456bd4:	rex.RB push r8
  456bd6:	push   r10
  456bd8:	rex.RB
  456bd9:	rex.RX
  456bda:	rex.B
  456bdb:	rex.WB
  456bdc:	rex.WR
  456bdd:	rex.WRXB push r14
  456bdf:	rex.RB push r10
  456be1:	rex.XB
  456be2:	rex.WR push rbp
  456be4:	push   rbx
  456be5:	push   rsp
  456be6:	rex.RB push r10
  456be8:	cmp    al,0x2f
  456bea:	movsxd esi,DWORD PTR [r9+rbp*2+0x6f]
  456bef:	outs   dx,BYTE PTR ds:[rsi]
  456bf0:	ds or  eax,0x2020200a
  456bf6:	and    BYTE PTR [rax],ah
  456bf8:	and    BYTE PTR [rax],ah
  456bfa:	and    BYTE PTR [rax],ah
  456bfc:	and    BYTE PTR [rax],ah
  456bfe:	and    BYTE PTR [rdi+rbp*1],bh
  456c01:	rex.XB outs dx,DWORD PTR ds:[rsi]
  456c03:	ins    DWORD PTR es:[rdi],dx
  456c04:	ins    DWORD PTR es:[rdi],dx
  456c05:	(bad)  
  456c06:	outs   dx,BYTE PTR ds:[rsi]
  456c07:	fs ds or eax,0x2020200a
  456c0e:	and    BYTE PTR [rax],ah
  456c10:	and    BYTE PTR [rax],ah
  456c12:	and    BYTE PTR [rdi+rbp*1],bh
  456c15:	rex.WB je 0x456c7d
  456c18:	ins    DWORD PTR es:[rdi],dx
  456c19:	ds or  eax,0x2020200a
  456c1f:	and    BYTE PTR [rax],ah
  456c21:	and    BYTE PTR [rax],ah
  456c23:	and    BYTE PTR [rcx+rcx*2],bh
  456c26:	je     0x456c8d
  456c28:	ins    DWORD PTR es:[rdi],dx
  456c29:	ds or  eax,0x2020200a
  456c2f:	and    BYTE PTR [rax],ah
  456c31:	and    BYTE PTR [rax],ah
  456c33:	and    BYTE PTR [rax],ah
  456c35:	and    BYTE PTR [rax],ah
  456c37:	and    BYTE PTR [rcx+rcx*2],bh
  456c3a:	movsxd ebp,DWORD PTR [rdi+0x6e]
  456c3d:	ds rex.WRB (bad) 
  456c40:	imul   ebp,DWORD PTR [rsi+0x74],0x6e616e65
  456c47:	movsxd esp,DWORD PTR [rbp+0x41]
  456c4a:	fs fs rex.WRXB jb 0x456ca1
  456c4f:	gs ins DWORD PTR es:[rdi],dx
  456c51:	outs   dx,DWORD PTR ds:[rsi]
  456c52:	jbe    0x456cb9
  456c54:	rex.RX
  456c55:	gs (bad) 
  456c57:	je     0x456cce
  456c59:	jb     0x456cc0
  456c5b:	jae    0x456c99
  456c5d:	(bad)  
  456c5e:	movsxd rbp,DWORD PTR [r15+0x6e]
  456c62:	ds or  eax,0x2020200a
  456c68:	and    BYTE PTR [rax],ah
  456c6a:	and    BYTE PTR [rax],ah
  456c6c:	and    BYTE PTR [rax],ah
  456c6e:	and    BYTE PTR [rax],ah
  456c70:	and    BYTE PTR [rsp+rdx*2],bh
  456c73:	imul   esi,DWORD PTR [rsp+rbp*2+0x65],0x73655220
  456c7b:	outs   dx,DWORD PTR ds:[rsi]
  456c7c:	jne    0x456cf0
  456c7e:	movsxd esp,DWORD PTR [rbp+0x49]
  456c81:	fs cmp eax,0x65725022
  456c87:	jo     0x456cf9
  456c89:	gs rex.WB outs dx,BYTE PTR fs:[rsi]
  456c8d:	jae    0x456d03
  456c8f:	(bad)  
  456c90:	ins    BYTE PTR es:[rdi],dx
  456c91:	ins    BYTE PTR es:[rdi],dx
  456c92:	and    ah,BYTE PTR [rax]
  456c94:	(bad)  
  456c95:	ds or  eax,0x2020200a
  456c9b:	and    BYTE PTR [rax],ah
  456c9d:	and    BYTE PTR [rax],ah
  456c9f:	and    BYTE PTR [rax],ah
  456ca1:	and    BYTE PTR [rax],ah
  456ca3:	and    BYTE PTR [rsp+rax*2],bh
  456ca6:	gs jae 0x456d0c
  456ca9:	jb     0x456d14
  456cab:	jo     0x456d21
  456cad:	imul   ebp,DWORD PTR [rdi+0x6e],0x73655220
  456cb4:	outs   dx,DWORD PTR ds:[rsi]
  456cb5:	jne    0x456d29
  456cb7:	movsxd esp,DWORD PTR [rbp+0x49]
  456cba:	fs cmp eax,0x65725022
  456cc0:	jo     0x456d32
  456cc2:	gs rex.WB outs dx,BYTE PTR fs:[rsi]
  456cc6:	jae    0x456d3c
  456cc8:	(bad)  
  456cc9:	ins    BYTE PTR es:[rdi],dx
  456cca:	ins    BYTE PTR es:[rdi],dx
  456ccb:	rex.R
  456ccc:	gs jae 0x456d32
  456ccf:	jb     0x456d3a
  456cd1:	jo     0x456d47
  456cd3:	imul   ebp,DWORD PTR [rdi+0x6e],0x3e2f2022
  456cda:	or     eax,0x2020200a
  456cdf:	and    BYTE PTR [rax],ah
  456ce1:	and    BYTE PTR [rax],ah
  456ce3:	and    BYTE PTR [rax],ah
  456ce5:	and    BYTE PTR [rax],ah
  456ce7:	and    BYTE PTR [rbx+rax*2],bh
  456cea:	outs   dx,DWORD PTR ds:[rsi]
  456ceb:	ins    DWORD PTR es:[rdi],dx
  456cec:	ins    DWORD PTR es:[rdi],dx
  456ced:	(bad)  
  456cee:	outs   dx,BYTE PTR ds:[rsi]
  456cef:	and    BYTE PTR fs:[rcx+rdi*2+0x70],dl
  456cf4:	gs cmp eax,0x75614c22
  456cfa:	outs   dx,BYTE PTR ds:[rsi]
  456cfb:	movsxd ebp,DWORD PTR [rax+0x53]
  456cfe:	gs je  0x456d76
  456d01:	jo     0x456d46
  456d03:	outs   dx,DWORD PTR ds:[rsi]
  456d04:	ins    DWORD PTR es:[rdi],dx
  456d05:	ins    DWORD PTR es:[rdi],dx
  456d06:	(bad)  
  456d07:	outs   dx,BYTE PTR ds:[rsi]
  456d08:	and    bh,BYTE PTR fs:[rsi]
  456d0b:	or     eax,0x2020200a
  456d10:	and    BYTE PTR [rax],ah
  456d12:	and    BYTE PTR [rax],ah
  456d14:	and    BYTE PTR [rax],ah
  456d16:	and    BYTE PTR [rax],ah
  456d18:	and    BYTE PTR [rax],ah
  456d1a:	and    BYTE PTR [rax],ah
  456d1c:	and    BYTE PTR [rcx+rax*2],bh
  456d1f:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  456d23:	outs   dx,BYTE PTR ds:[rsi]
  456d24:	ds rex.XB
  456d26:	rex.WRXB
  456d27:	rex.WRB push r8
  456d29:	rex.WR
  456d2a:	rex.RB push r12
  456d2c:	rex.RB
  456d2d:	rex.RX
  456d2e:	rex.B
  456d2f:	rex.WB
  456d30:	rex.WR
  456d31:	rex.WRXB push r14
  456d33:	rex.RB push r10
  456d35:	rex.XB
  456d36:	rex.WR push rbp
  456d38:	push   rbx
  456d39:	push   rsp
  456d3a:	rex.RB push r10
  456d3c:	cmp    al,0x2f
  456d3e:	movsxd esi,DWORD PTR [r9+rbp*2+0x6f]
  456d43:	outs   dx,BYTE PTR ds:[rsi]
  456d44:	and    BYTE PTR ds:[rip+0x2020200a],cl        # 0x20658d55
  456d4b:	and    BYTE PTR [rax],ah
  456d4d:	and    BYTE PTR [rax],ah
  456d4f:	and    BYTE PTR [rax],ah
  456d51:	and    BYTE PTR [rax],ah
  456d53:	and    BYTE PTR [rdi+rbp*1],bh
  456d56:	rex.XB outs dx,DWORD PTR ds:[rsi]
  456d58:	ins    DWORD PTR es:[rdi],dx
  456d59:	ins    DWORD PTR es:[rdi],dx
  456d5a:	(bad)  
  456d5b:	outs   dx,BYTE PTR ds:[rsi]
  456d5c:	fs ds or eax,0x2020200a
  456d63:	and    BYTE PTR [rax],ah
  456d65:	and    BYTE PTR [rax],ah
  456d67:	and    BYTE PTR [rdi+rbp*1],bh
  456d6a:	rex.WB je 0x456dd2
  456d6d:	ins    DWORD PTR es:[rdi],dx
  456d6e:	ds or  eax,0x2020200a
  456d74:	and    BYTE PTR [rdi+rbp*1],bh
  456d77:	push   rax
  456d78:	(bad)  
  456d79:	addr32 gs ds or eax,0x502f3c0a
  456d81:	(bad)  
  456d82:	addr32 gs jae 0x456dc4
  456d86:	or     eax,0x4a53420a
  456d8b:	rex.X add DWORD PTR [rax],eax
  456d8e:	add    DWORD PTR [rax],eax
  456d90:	add    BYTE PTR [rax],al
  456d92:	add    BYTE PTR [rax],al
  456d94:	or     al,0x0
  456d96:	add    BYTE PTR [rax],al
  456d98:	jbe    0x456dcc
  456d9a:	xor    BYTE PTR cs:[rsi],ch
  456d9d:	xor    eax,0x37323730
  456da2:	add    BYTE PTR [rax],al
  456da4:	add    BYTE PTR [rax],al
  456da6:	add    eax,0x6c00
  456dab:	add    al,ah
  456dad:	(bad)  
  456dae:	add    BYTE PTR [rax],al
  456db0:	and    edi,DWORD PTR [rsi+0x0]
  456db3:	add    BYTE PTR [rax+rdi*1+0x0],cl
  456db7:	add    BYTE PTR [rax+0x2300003e],dh
  456dbd:	push   rbx
  456dbe:	je     0x456e32
  456dc0:	imul   ebp,DWORD PTR [rsi+0x67],0x73
  456dc7:	add    ah,bh
  456dc9:	jbe    0x456dcb
  456dcb:	add    BYTE PTR [rax+0x23000016],dl
  456dd1:	push   rbp
  456dd2:	push   rbx
  456dd3:	add    BYTE PTR [rbp+rcx*4+0x100000],cl
  456dda:	add    BYTE PTR [rax],al
  456ddc:	and    eax,DWORD PTR [rdi+0x55]
  456ddf:	rex.WB
  456de0:	add    BYTE PTR [rax],r8b
  456de3:	add    BYTE PTR [rbp+rcx*4+0x1cbc0000],bl
  456dea:	add    BYTE PTR [rax],al
  456dec:	and    eax,DWORD PTR [rdx+0x6c]
  456def:	outs   dx,DWORD PTR ds:[rsi]
  456df0:	(bad)  
  456df1:	add    BYTE PTR [rax],al
  456df3:	add    BYTE PTR [rax],al
  456df5:	add    BYTE PTR [rax],al
  456df7:	add    BYTE PTR [rdx],al
  456df9:	add    BYTE PTR [rax],al
  456dfb:	add    DWORD PTR [rdi+0x7f],edx
  456dfe:	mov    bh,0x1f
  456e00:	or     DWORD PTR [rbx],eax
  456e02:	add    BYTE PTR [rax],al
  456e04:	add    dl,bh
  456e06:	add    DWORD PTR [rbx],esi
  456e08:	add    BYTE PTR [rsi],dl
  456e0a:	add    BYTE PTR [rax],al
  456e0c:	add    DWORD PTR [rax],eax
  456e0e:	add    BYTE PTR [rax],al
  456e10:	(bad)  
  456e11:	add    BYTE PTR [rax],al
  456e13:	add    BYTE PTR [rip+0xffffffffd2000000],ah        # 0xffffffffd2456e19
  456e19:	add    BYTE PTR [rax],al
  456e1b:	add    BYTE PTR [rbp+0x1],al
  456e1e:	add    BYTE PTR [rax],al
  456e20:	sahf   
  456e21:	add    BYTE PTR [rax],al
  456e23:	add    BYTE PTR [rip+0xffffffff85000000],al        # 0xffffffff85456e29
  456e29:	add    DWORD PTR [rax],eax
  456e2b:	add    BYTE PTR [rdi+0x0],dh
  456e2e:	add    BYTE PTR [rax],al
  456e30:	and    al,BYTE PTR [rax]
  456e32:	add    BYTE PTR [rax],al
  456e34:	add    al,BYTE PTR [rax]
  456e36:	add    BYTE PTR [rax],al
  456e38:	add    DWORD PTR [rax],eax
  456e3a:	add    BYTE PTR [rax],al
  456e3c:	add    eax,DWORD PTR [rax]
  456e3e:	add    BYTE PTR [rax],al
  456e40:	and    eax,0x2000000
  456e45:	add    BYTE PTR [rax],al
  456e47:	add    BYTE PTR [rdx],al
  456e49:	add    BYTE PTR [rax],al
  456e4b:	add    BYTE PTR [rdx],dl
  456e4d:	add    BYTE PTR [rax],al
  456e4f:	add    BYTE PTR [rsi-0x5b000000],cl
  456e55:	add    BYTE PTR [rax],al
  456e57:	add    BYTE PTR [rcx],al
  456e59:	add    BYTE PTR [rax],al
  456e5b:	add    BYTE PTR [rcx],al
  456e5d:	add    BYTE PTR [rax],al
  456e5f:	add    BYTE PTR [rsi],al
  456e61:	add    BYTE PTR [rax],al
  456e63:	add    BYTE PTR [rdx],al
  456e65:	add    BYTE PTR [rax],al
  456e67:	add    BYTE PTR [rcx],al
  456e69:	add    BYTE PTR [rax],al
  456e6b:	add    BYTE PTR [rdi],al
  456e6d:	add    BYTE PTR [rax],al
  456e6f:	add    BYTE PTR [rcx],cl
  456e71:	add    BYTE PTR [rax],al
  456e73:	add    BYTE PTR [rdi],al
  456e75:	add    BYTE PTR [rax],al
  456e77:	add    BYTE PTR [rax],al
  456e79:	add    BYTE PTR [rdx],cl
  456e7b:	add    BYTE PTR [rcx],al
  456e7d:	add    BYTE PTR [rax],al
  456e7f:	add    BYTE PTR [rax],al
  456e81:	add    BYTE PTR [rsi],al
  456e83:	add    BYTE PTR [rbp+0x2],ch
  456e86:	data16 add cl,BYTE PTR [rdx]
  456e89:	add    BYTE PTR [rcx+0xa027402],cl
  456e8f:	add    BYTE PTR [rdi+0xe02a102],dh
  456e95:	add    bl,ah
  456e97:	add    cl,dh
  456e99:	add    cl,BYTE PTR [rsi]
  456e9b:	add    dh,dh
  456e9d:	add    cl,dh
  456e9f:	add    cl,BYTE PTR [rsi]
  456ea1:	add    BYTE PTR [rdi],al
  456ea3:	add    ecx,esi
  456ea5:	add    al,BYTE PTR [rsi]
  456ea7:	add    BYTE PTR [rbx+rax*1],cl
  456eaa:	data16 add al,BYTE PTR [rsi]
  456ead:	add    BYTE PTR [rsi],dl
  456eaf:	add    esp,DWORD PTR [rsi+0x2]
  456eb2:	(bad)  
  456eb3:	add    BYTE PTR [rax],ch
  456eb5:	add    ecx,esi
  456eb7:	add    cl,BYTE PTR [rdx]
  456eb9:	add    BYTE PTR [rbx+rax*1],dh
  456ebc:	movabs eax,ds:0x602ce033e000e02
  456ec5:	add    BYTE PTR [rbx+0x3],bh
  456ec8:	pop    rsp
  456ec9:	add    eax,DWORD PTR [rsi]
  456ecb:	add    BYTE PTR [rax+0x6026603],cl
  456ed1:	add    al,ch
  456ed3:	add    al,0xd3
  456ed5:	add    al,0x6
  456ed7:	add    dh,ah
  456ed9:	adc    ebp,edx
  456edb:	adc    DWORD PTR [rdx],ecx
  456edd:	add    BYTE PTR [rbp+0x12],bl
  456ee0:	je     0x456ee4
  456ee2:	or     al,BYTE PTR [rax]
  456ee4:	xchg   edx,eax
  456ee5:	adc    ah,BYTE PTR [rcx-0x15fff5fe]
  456eeb:	adc    ah,BYTE PTR [rcx-0x74fff1fe]
  456ef1:	adc    ecx,esi
  456ef3:	add    dl,BYTE PTR [rdx]
  456ef5:	add    bl,bl
  456ef7:	adc    esi,DWORD PTR [rbp-0x1ffeded]
  456efd:	adc    esi,DWORD PTR [rbp+0x44000613]
  456f03:	adc    al,0x33
  456f05:	adc    al,0xe
  456f07:	add    BYTE PTR [rsp+rdx*1+0xe02ce],ch
  456f0e:	ret    
  456f0f:	adc    al,0xce
  456f11:	add    dl,BYTE PTR [rdx]
  456f13:	add    BYTE PTR [rdx*1+0xe13b5],bl
  456f1a:	xchg   ecx,eax
  456f1b:	adc    eax,0xe02ce
  456f20:	mov    ebp,0x602ce15
  456f25:	add    ah,dl
  456f27:	adc    eax,0xa0266
  456f2c:	repnz adc eax,0xe02a1
  456f32:	and    al,0x16
  456f34:	(bad)  
  456f35:	add    cl,BYTE PTR [rdx]
  456f37:	add    BYTE PTR [rdx+0x616a216],dh
  456f3d:	add    BYTE PTR [rip+0x6171217],ch        # 0x65c815a
  456f43:	add    BYTE PTR [rdi+rdx*1],dh
  456f46:	data16 add cl,BYTE PTR [rsi]
  456f49:	add    ah,ah
  456f4b:	sbb    dh,cl
  456f4d:	add    al,BYTE PTR [rsi]
  456f4f:	add    BYTE PTR [rax+0x19],ah
  456f52:	push   rax
  456f53:	sbb    DWORD PTR [rsi],eax
  456f55:	add    BYTE PTR [rax+0x1b],bh
  456f58:	data16 add al,BYTE PTR [rsi]
  456f5b:	add    BYTE PTR [rbp+0x602661b],al
  456f61:	add    BYTE PTR [rdx],al
  456f63:	sbb    al,0xf8
  456f65:	sbb    ecx,DWORD PTR [rsi]
  456f67:	add    ah,cl
  456f69:	sbb    al,0xce
  456f6b:	add    dl,BYTE PTR [rsi]
  456f6d:	add    BYTE PTR [rip+0x1a1d161d],ah        # 0x1a628590
  456f73:	add    BYTE PTR [rax+0x1d],ah
  456f76:	cmp    BYTE PTR [rip+0x1d85000e],bl        # 0x1dca6f8a
  456f7c:	(bad)  
  456f7d:	add    cl,BYTE PTR [rsi]
  456f7f:	add    BYTE PTR [rbp+0x1a02ce1d],bl
  456f85:	add    BYTE PTR [rdx+0xe1d381d],dh
  456f8b:	add    cl,bh
  456f8d:	sbb    eax,0xe02ce
  456f92:	or     al,0x1e
  456f94:	(bad)  
  456f95:	add    cl,BYTE PTR [rsi]
  456f97:	add    BYTE PTR [rdx],bl
  456f99:	(bad)  
  456f9a:	(bad)  
  456f9b:	add    dl,BYTE PTR [rsi]
  456f9d:	add    BYTE PTR [rax+0x1e],ah
  456fa0:	(bad)  
  456fa1:	sbb    eax,0x1ea00006
  456fa6:	data16 add cl,BYTE PTR [rsi]
  456fa9:	add    BYTE PTR [rdi+rbx*1-0x32],al
  456fad:	add    cl,BYTE PTR [rsi]
  456faf:	add    BYTE PTR [rcx+0x1602ce1f],ah
  456fb5:	add    BYTE PTR [rdx+0xe1d161f],bh
  456fbb:	add    BYTE PTR [rdi],cl
  456fbd:	and    dh,cl
  456fbf:	add    cl,BYTE PTR [rsi]
  456fc1:	add    BYTE PTR [rax+riz*1],ah
  456fc4:	(bad)  
  456fc5:	add    cl,BYTE PTR [rsi]
  456fc7:	add    BYTE PTR [rbp+0x20],dl
  456fca:	(bad)  
  456fcb:	add    dl,BYTE PTR [rsi]
  456fcd:	add    BYTE PTR [rcx],cl
  456fcf:	and    DWORD PTR [rsi],edx
  456fd1:	sbb    eax,0x21960016
  456fd6:	(bad)  
  456fd7:	sbb    eax,0x246a000e
  456fdc:	(bad)  
  456fdd:	add    dl,BYTE PTR [rsi]
  456fdf:	add    BYTE PTR [rbp+0x61d1624],al
  456fe5:	add    bl,al
  456fe7:	and    al,0xf8
  456fe9:	sbb    ebx,DWORD PTR [rsi]
  456feb:	add    bh,bl
  456fed:	and    al,0xd4
  456fef:	and    al,0x6
  456ff1:	add    al,dh
  456ff3:	and    al,0x12
  456ff5:	(bad)  
  456ff6:	(bad)  
  456ff7:	add    al,ah
  456ff9:	and    eax,0x625c1
  456ffe:	out    dx,al
  456fff:	and    eax,0x625c1
  457004:	adc    al,0x26
  457006:	add    ah,BYTE PTR [rsi]
  457008:	(bad)  
  457009:	add    BYTE PTR [rip+0x6260226],ch        # 0x66b7235
  45700f:	add    BYTE PTR [rsi+riz*1+0x2],cl
  457013:	es (bad) 
  457015:	add    BYTE PTR [rcx+0x26],ch
  457018:	add    ah,BYTE PTR [rsi]
  45701a:	(bad)  
  45701b:	add    BYTE PTR [rax+0x6260226],al
  457021:	add    BYTE PTR [rsi+0x6260226],ah
  457027:	add    bl,al
  457029:	add    ah,BYTE PTR es:[rsi]
  45702c:	(bad)  
  45702d:	add    ah,bl
  45702f:	add    ah,BYTE PTR es:[rsi]
  457032:	(bad)  
  457033:	add    bh,dh
  457035:	add    ah,BYTE PTR es:[rsi]
  457038:	(bad)  
  457039:	add    BYTE PTR [rdx],dl
  45703b:	(bad)  
  45703c:	add    ah,BYTE PTR [rsi]
  45703e:	(bad)  
  45703f:	add    BYTE PTR [rbx],ch
  457041:	(bad)  
  457042:	add    ah,BYTE PTR [rsi]
  457044:	(bad)  
  457045:	add    BYTE PTR [rdi+0x27],dl
  457048:	rex.R (bad) 
  45704a:	xor    eax,DWORD PTR [rcx]
  45704c:	imul   esp,DWORD PTR [rdi],0x0
  45704f:	add    BYTE PTR [rsi],al
  457051:	add    BYTE PTR [rdx+0x6277a27],bl
  457057:	add    BYTE PTR [rdx+0x6277a27],bh
  45705d:	add    ah,ah
  45705f:	(bad)  
  457060:	jp     0x457089
  457062:	(bad)  
  457063:	add    BYTE PTR [rcx],ah
  457065:	sub    BYTE PTR [rsi+0x2],ah
  457068:	(bad)  
  457069:	add    BYTE PTR [rax],ch
  45706b:	sub    BYTE PTR [rsi+0x2],ah
  45706e:	(bad)  
  45706f:	add    BYTE PTR [rdi],bh
  457071:	sub    BYTE PTR [rsi+0x2],ah
  457074:	(bad)  
  457075:	add    BYTE PTR [rax+rbp*1+0x66],al
  457079:	add    al,BYTE PTR [rsi]
  45707b:	add    BYTE PTR [rbp+0x28],dh
  45707e:	add    ah,BYTE PTR [rsi]
  457080:	(bad)  
  457081:	add    BYTE PTR [rdi+0xa260228],al
  457087:	add    BYTE PTR [rbp+0xa289d28],dh
  45708d:	add    ah,cl
  45708f:	sub    BYTE PTR [rdx+rax*1+0xa],dh
  457093:	add    BYTE PTR [rcx],al
  457095:	sub    DWORD PTR [rdx+rax*1+0x6],esi
  457099:	add    BYTE PTR [rcx+rbp*1],bl
  45709c:	rex.R (bad) 
  45709e:	or     al,BYTE PTR [rax]
  4570a0:	cmp    DWORD PTR [rcx],ebp
  4570a2:	je     0x4570a6
  4570a4:	(bad)  
  4570a5:	add    BYTE PTR [rsi+0x29],dl
  4570a8:	data16 add cl,BYTE PTR [rdx]
  4570ab:	add    BYTE PTR [rbx+0x29],bh
  4570ae:	movabs eax,ds:0xe026629b9000602
  4570b7:	add    BYTE PTR [rdi],bl
  4570b9:	sub    cl,dh
  4570bb:	add    cl,BYTE PTR [rsi]
  4570bd:	add    BYTE PTR [rdx],ch
  4570bf:	sub    cl,dh
  4570c1:	add    cl,BYTE PTR [rsi]
  4570c3:	add    BYTE PTR [rdi],dh
  4570c5:	sub    cl,dh
  4570c7:	add    cl,BYTE PTR [rsi]
  4570c9:	add    BYTE PTR [rbx+0x2a],cl
  4570cc:	(bad)  
  4570cd:	add    al,BYTE PTR [rsi]
  4570cf:	add    BYTE PTR [rbx+0x602662a],cl
  4570d5:	add    BYTE PTR [rbx+0x1202662a],ah
  4570db:	add    BYTE PTR [rcx+0xa13b52a],bh
  4570e1:	add    dh,ch
  4570e3:	sub    ah,BYTE PTR [rsi+0x2]
  4570e6:	(bad)  
  4570e7:	add    BYTE PTR [rax],al
  4570e9:	sub    edi,eax
  4570eb:	sbb    eax,DWORD PTR [rsi]
  4570ed:	add    BYTE PTR [rbx],dh
  4570ef:	sub    esp,DWORD PTR [rsi+0x2]
  4570f2:	(bad)  
  4570f3:	add    BYTE PTR [rbx+0x2b],dh
  4570f6:	push   rdi
  4570f7:	sub    eax,DWORD PTR [rsi]
  4570f9:	add    BYTE PTR [rdi+0xe2b572b],cl
  4570ff:	add    BYTE PTR [rdi+0x0],bl
  457102:	(bad)  
  457103:	add    bl,BYTE PTR [rdi+0x2be400]
  457109:	add    BYTE PTR [rsi],dl
  45710b:	add    BYTE PTR [rdi],dl
  45710d:	sub    al,0x16
  45710f:	sbb    eax,0x2c3f000e
  457114:	(bad)  
  457115:	add    cl,BYTE PTR [rsi]
  457117:	add    BYTE PTR [rbx+0xa02ce2c],al
  45711d:	add    dh,ch
  45711f:	sub    al,0xa1
  457121:	add    dl,BYTE PTR [rsi]
  457123:	add    BYTE PTR [rbx],ch
  457125:	sub    eax,0xe1d16
  45712a:	push   rcx
  45712b:	sub    eax,0xa02ce
  457130:	jg     0x45715f
  457132:	movabs ds:0x8316a22da1000a16,al
  45713b:	add    bl,ah
  45713d:	sub    eax,0xa0000
  457142:	add    eax,0x1616a22e
  457147:	add    BYTE PTR [rdx],dh
  457149:	cs (bad) 
  45714b:	sbb    eax,0x2e69000e
  457150:	(bad)  
  457151:	add    al,BYTE PTR [rsi]
  457153:	add    BYTE PTR [rsi+0xa02662e],bl
  457159:	add    BYTE PTR [rax+0xa27442e],bh
  45715f:	add    dl,ch
  457161:	cs rex.R (bad) 
  457164:	(bad)  
  457165:	add    BYTE PTR [rbx],ah
  457167:	(bad)  
  457168:	xor    edx,DWORD PTR [rdx+rcx*1]
  45716b:	add    BYTE PTR [rdi+rbp*1],bh
  45716e:	movabs eax,ds:0x122f4b2f57000602
  457177:	add    BYTE PTR [rax+0x1213b52f],dl
  45717d:	add    BYTE PTR [rsi+0x613b52f],bh
  457183:	add    BYTE PTR [rsi],cl
  457185:	xor    BYTE PTR [rbx],dh
  457187:	adc    al,0xe
  457189:	add    BYTE PTR [rax+rsi*1-0x32],ah
  45718d:	add    al,BYTE PTR [rsi]
  45718f:	add    BYTE PTR [rsi+0xf02662f],bh
  457195:	add    cl,BYTE PTR [rcx+0xa000030]
  45719b:	add    ah,dh
  45719d:	xor    BYTE PTR [rsi+0x2],ah
  4571a0:	(bad)  
  4571a1:	add    BYTE PTR [rcx+rsi*1],ah
  4571a4:	data16 add al,BYTE PTR [rsi]
  4571a7:	add    BYTE PTR [rdx],dh
  4571a9:	xor    eax,edi
  4571ab:	sbb    eax,DWORD PTR [rsi]
  4571ad:	add    BYTE PTR [rdx+0x31],dh
  4571b0:	pop    rbx
  4571b1:	xor    DWORD PTR [rsi],eax
  4571b3:	add    BYTE PTR [rbp+0x625c131],al
  4571b9:	add    BYTE PTR [rbx+0x1e25c131],bl
  4571bf:	add    BYTE PTR [rdi+0x631a631],bh
  4571c5:	add    dl,dl
  4571c7:	xor    ecx,eax
  4571c9:	and    eax,0x31e60006
  4571ce:	shl    DWORD PTR [rip+0x31fb0006],0xc1        # 0x324071db
  4571d5:	and    eax,0x32190006
  4571da:	shl    DWORD PTR [rip+0x322c0006],0xc1        # 0x327171e7
  4571e1:	and    eax,0x323f0006
  4571e6:	shl    DWORD PTR [rip+0x32cd0006],0xf8        # 0x331271f3
  4571ed:	sbb    eax,DWORD PTR [rsi]
  4571ef:	add    bl,dh
  4571f1:	xor    bh,al
  4571f3:	sbb    eax,DWORD PTR [rsi]
  4571f5:	add    BYTE PTR [rip+0x61bf833],al        # 0x6616a2e
  4571fb:	add    BYTE PTR [rcx],dl
  4571fd:	xor    esp,DWORD PTR [rsi+0x2]
  457200:	(bad)  
  457201:	add    BYTE PTR [rdx],dh
  457203:	xor    ecx,esi
  457205:	add    cl,BYTE PTR [rsi]
  457207:	add    BYTE PTR [rbx+0x33],bl
  45720a:	(bad)  
  45720b:	add    cl,BYTE PTR [rdx]
  45720d:	add    BYTE PTR [rbx+rsi*1-0x5f],dh
  457211:	add    cl,BYTE PTR [rdx]
  457213:	add    BYTE PTR [rsi+0x33],bh
  457216:	movabs eax,ds:0xa702ce339b000e02
  45721f:	add    BYTE PTR [rax+0xe000033],bh
  457225:	add    bh,bh
  457227:	xor    ecx,esi
  457229:	add    cl,BYTE PTR [rsi]
  45722b:	add    BYTE PTR [rdx],ch
  45722d:	xor    al,0xce
  45722f:	add    cl,BYTE PTR [rsi]
  457231:	add    BYTE PTR [rdx],dh
  457233:	xor    al,0xce
  457235:	add    cl,BYTE PTR [rsi]
  457237:	add    BYTE PTR [rbx+0x34],bl
  45723a:	(bad)  
  45723b:	add    cl,BYTE PTR [rsi]
  45723d:	add    BYTE PTR [rbx+0xa02ce34],dh
  457243:	add    ch,bh
  457245:	xor    al,0xa1
  457247:	add    cl,BYTE PTR [rsi]
  457249:	add    BYTE PTR [rcx],ah
  45724b:	xor    eax,0xe02ce
  457250:	rex.B xor eax,0x1602ce
  457256:	xor    DWORD PTR [rip+0x16356a],0xffffff97        # 0x5ba7c7
  45725d:	xor    eax,0x16356a
  457262:	stos   BYTE PTR es:[rdi],al
  457263:	xor    eax,0x161d16
  457268:	shl    BYTE PTR [rip+0x161d16],0xde        # 0x5b8f85
  45726f:	xor    eax,0xe1d16
  457274:	call   0xe4840ae
  457279:	add    bl,bh
  45727b:	xor    eax,0xe02ce
  457280:	cmp    esi,DWORD PTR [rsi]
  457282:	(bad)  
  457283:	add    cl,BYTE PTR [rsi]
  457285:	add    BYTE PTR [rcx+0x36],bl
  457288:	(bad)  
  457289:	add    dl,BYTE PTR [rsi]
  45728b:	add    BYTE PTR [rsi+rsi*1+0x161d16],al
  457292:	mov    dl,0x36
  457294:	(bad)  
  457295:	sbb    eax,0x36f8000e
  45729a:	(bad)  
  45729b:	add    cl,BYTE PTR [rsi]
  45729d:	add    BYTE PTR [rdi+0x37],al
  4572a0:	(bad)  
  4572a1:	add    cl,BYTE PTR [rsi]
  4572a3:	add    BYTE PTR [rax+0x37],ch
  4572a6:	(bad)  
  4572a7:	add    cl,BYTE PTR [rsi]
  4572a9:	add    al,cl
  4572ab:	(bad)  
  4572ac:	lods   al,BYTE PTR ds:[rsi]
  4572ad:	(bad)  
  4572ae:	(bad)  
  4572af:	add    bh,ah
  4572b1:	(bad)  
  4572b2:	data16 add al,BYTE PTR [rsi]
  4572b5:	add    ch,bh
  4572b7:	(bad)  
  4572b8:	data16 add cl,BYTE PTR [rsi]
  4572bb:	add    BYTE PTR [rip+0xa02ce38],dh        # 0xa4840f9
  4572c1:	add    BYTE PTR [rax+rdi*1+0xa02a1],dl
  4572c8:	lods   eax,DWORD PTR ds:[rsi]
  4572c9:	cmp    BYTE PTR [rcx-0xbfff1fe],ah
  4572cf:	and    cl,dh
  4572d1:	add    cl,BYTE PTR [rsi]
  4572d3:	add    cl,cl
  4572d5:	cmp    dh,cl
  4572d7:	add    cl,BYTE PTR [rsi]
  4572d9:	add    bh,dl
  4572db:	cmp    dh,cl
  4572dd:	add    cl,BYTE PTR [rsi]
  4572df:	add    BYTE PTR [rdx],bh
  4572e1:	cmp    esi,ecx
  4572e3:	add    cl,BYTE PTR [rsi]
  4572e5:	add    BYTE PTR [rsi+0x39],ah
  4572e8:	(bad)  
  4572e9:	add    al,BYTE PTR [rsi]
  4572eb:	add    BYTE PTR [rcx+0xe026639],dl
  4572f1:	add    BYTE PTR [rdx+0xe02ce39],bl
  4572f7:	add    dh,al
  4572f9:	cmp    esi,ecx
  4572fb:	add    cl,BYTE PTR [rsi]
  4572fd:	add    bh,cl
  4572ff:	cmp    esi,ecx
  457301:	add    cl,BYTE PTR [rsi]
  457303:	add    al,ah
  457305:	cmp    esi,ecx
  457307:	add    cl,BYTE PTR [rsi]
  457309:	add    BYTE PTR [rip+0xe02ce3a],cl        # 0xe484149
  45730f:	add    BYTE PTR [rax],bh
  457311:	cmp    cl,dh
  457313:	add    cl,BYTE PTR [rsi]
  457315:	add    BYTE PTR [rdx+0x3a],al
  457318:	(bad)  
  457319:	add    dl,BYTE PTR [rsi]
  45731b:	add    BYTE PTR [rdx+rdi*1+0xe1d16],al
  457322:	sahf   
  457323:	cmp    cl,dh
  457325:	add    cl,BYTE PTR [rsi]
  457327:	add    bh,cl
  457329:	cmp    cl,dh
  45732b:	add    cl,BYTE PTR [rsi]
  45732d:	add    BYTE PTR [rcx],al
  45732f:	cmp    ecx,esi
  457331:	add    dl,BYTE PTR [rsi]
  457333:	add    BYTE PTR [rip+0x1e1d163b],cl        # 0x1e628974
  457339:	add    BYTE PTR [rcx+0x3b],cl
  45733c:	(bad)  
  45733d:	and    al,0x1e
  45733f:	add    BYTE PTR [rbp+0x3b],bl
  457342:	(bad)  
  457343:	and    al,0x6
  457345:	add    BYTE PTR [rsi+0x602663b],dl
  45734b:	add    BYTE PTR [rdi+0x1e26023b],ch
  457351:	add    cl,bl
  457353:	cmp    edx,esp
  457355:	and    al,0x0
  457357:	add    BYTE PTR [rax],al
  457359:	add    BYTE PTR [rcx],al
  45735b:	add    BYTE PTR [rax],al
  45735d:	add    BYTE PTR [rax],al
  45735f:	add    BYTE PTR [rcx],al
  457361:	add    BYTE PTR [rcx],al
  457363:	add    BYTE PTR [rax+0x1a001001],al
  457369:	add    BYTE PTR [rax],al
  45736b:	add    BYTE PTR [rip+0x1000100],al        # 0x1457471
  457371:	add    BYTE PTR [rax],al
  457373:	add    BYTE PTR [rax],dl
  457375:	add    BYTE PTR [rsi],ch
  457377:	add    BYTE PTR [rcx],dh
  457379:	add    BYTE PTR [rip+0x2000e00],al        # 0x245817f
  45737f:	add    BYTE PTR [rdx],al
  457381:	add    BYTE PTR [rax],dl
  457383:	add    BYTE PTR [rdi+0x0],bl
  457386:	add    BYTE PTR [rax],al
  457388:	add    eax,0x54000e00
  45738d:	add    BYTE PTR [rax],al
  45738f:	add    DWORD PTR [rax],edx
  457391:	add    BYTE PTR [rax+rax*1+0x6d],ah
  457395:	add    BYTE PTR [rcx],cl
  457397:	add    BYTE PTR [rdi+0x0],bl
  45739a:	pop    rdx
  45739b:	add    BYTE PTR [rcx-0x59fff000],al
  4573a1:	add    BYTE PTR [rcx],dh
  4573a3:	add    BYTE PTR [rip+0x61006000],al        # 0x6145d3a9
  4573a9:	add    BYTE PTR [rbx],al
  4573ab:	add    BYTE PTR [rax],dl
  4573ad:	add    BYTE PTR [rsi+0x18000000],ch
  4573b3:	add    BYTE PTR [rax+rax*1+0x6c],ah
  4573b7:	add    BYTE PTR [rax],al
  4573b9:	add    BYTE PTR [rax],al
  4573bb:	add    BYTE PTR [rdx+0x11003100],bh
  4573c1:	add    BYTE PTR [rax+rax*1+0x6e],ah
  4573c5:	add    BYTE PTR [rcx],al
  4573c7:	add    BYTE PTR [rax],dl
  4573c9:	add    ch,cl
  4573cb:	add    BYTE PTR [rcx],dh
  4573cd:	add    BYTE PTR [rip+0x7c006a00],dl        # 0x7c45ddd3
  4573d3:	add    BYTE PTR [rcx],al
  4573d5:	add    BYTE PTR [rax],dl
  4573d7:	add    al,ah
  4573d9:	add    BYTE PTR [rcx],dh
  4573db:	add    BYTE PTR [rcx],bl
  4573dd:	add    BYTE PTR [rbp+0x0],ch
  4573e0:	test   BYTE PTR [rax],al
  4573e2:	add    BYTE PTR [rax],al
  4573e4:	adc    BYTE PTR [rax],al
  4573e6:	lock add BYTE PTR [rcx],dh
  4573e9:	add    BYTE PTR [rax],bl
  4573eb:	add    BYTE PTR [rcx+0x0],dh
  4573ee:	lea    eax,[rax]
  4573f0:	add    BYTE PTR [rax],al
  4573f2:	add    BYTE PTR [rax],al
  4573f4:	add    eax,DWORD PTR [rcx]
  4573f6:	xor    DWORD PTR [rax],eax
  4573f8:	sub    al,0x0
  4573fa:	jnp    0x4573fc
  4573fc:	movabs ds:0x3101220010000000,al
  457405:	add    BYTE PTR [rip+0xffffffffa8007d00],al        # 0xffffffffa845f10b
  45740b:	add    BYTE PTR [rcx],cl
  45740d:	add    DWORD PTR [rax],edx
  45740f:	add    BYTE PTR [rdx],dh
  457411:	add    DWORD PTR [rcx],esi
  457413:	add    BYTE PTR [rip+0xffffffffb2008500],bl        # 0xffffffffb245f919
  457419:	add    BYTE PTR [rcx],cl
  45741b:	add    DWORD PTR [rax],edx
  45741d:	add    BYTE PTR [rdx+0x1],al
  457420:	xor    DWORD PTR [rax],eax
  457422:	sbb    eax,0xb5008b00
  457427:	add    BYTE PTR [rcx],cl
  457429:	add    DWORD PTR [rax],edx
  45742b:	add    BYTE PTR [rax+0x1],cl
  45742e:	xor    DWORD PTR [rax],eax
  457430:	sbb    eax,0xb5008d00
  457435:	add    BYTE PTR [rax],dl
  457437:	add    DWORD PTR [rax],edx
  457439:	add    BYTE PTR [rbp+0x1],cl
  45743c:	xor    DWORD PTR [rax],eax
  45743e:	sbb    eax,0xb5009100
  457443:	add    BYTE PTR [rax],al
  457445:	add    BYTE PTR [rax],dl
  457447:	add    BYTE PTR [rcx+rax*1+0x31],bl
  45744b:	add    BYTE PTR [rip+0xffffffffb5009400],al        # 0xffffffffb5460851
  457451:	add    BYTE PTR [rax],al
  457453:	add    BYTE PTR [rax],dl
  457455:	add    BYTE PTR [rcx+rax*1+0x31],ch
  457459:	add    BYTE PTR [rip+0xffffffffb600a300],al        # 0xffffffffb646175f
  45745f:	add    BYTE PTR [rdx],al
  457461:	add    DWORD PTR [rax],eax
  457463:	add    BYTE PTR [rdx+0x1],bh
  457466:	add    BYTE PTR [rax],al
  457468:	and    DWORD PTR [rax],eax
  45746a:	movabs ds:0x8d0010000000b900,eax
  457473:	add    DWORD PTR [rcx],esi
  457475:	add    BYTE PTR [rax],bl
  457477:	add    BYTE PTR [rbx+0xbd00],ah
  45747d:	add    BYTE PTR [rax],dl
  45747f:	add    BYTE PTR [rbp+0x18003101],bl
  457485:	add    BYTE PTR [rbp-0x5eff3c00],ah
  45748b:	add    BYTE PTR [rax],al
  45748d:	add    BYTE PTR [rdi+0x3101],ch
  457493:	add    BYTE PTR [rax+0x100cd00],ch
  457499:	add    BYTE PTR [rax],dl
  45749b:	add    BYTE PTR [rbp+0x25003101],dh
  4574a1:	add    BYTE PTR [rax+0x100d000],ch
  4574a7:	add    BYTE PTR [rax],dl
  4574a9:	add    cl,al
  4574ab:	add    DWORD PTR [rcx],esi
  4574ad:	add    BYTE PTR [rcx],ch
  4574af:	add    BYTE PTR [rax+rax*1+0x10000d8],dh
  4574b6:	adc    BYTE PTR [rax],al
  4574b8:	mov    BYTE PTR [rcx],0x31
  4574bb:	add    BYTE PTR [rax+rax*1-0x4a],ah
  4574bf:	add    al,ah
  4574c1:	add    BYTE PTR [rcx],al
  4574c3:	add    BYTE PTR [rax],dl
  4574c5:	add    ah,dl
  4574c7:	add    DWORD PTR [rcx],esi
  4574c9:	add    BYTE PTR [rip+0xffffffffe200b600],ah        # 0xffffffffe2462acf
  4574cf:	add    BYTE PTR [rbx],al
  4574d1:	add    BYTE PTR [rax],dl
  4574d3:	add    cl,ah
  4574d5:	add    DWORD PTR [rax],eax
  4574d7:	add    BYTE PTR [rip+0xfffffffff800bf00],ch        # 0xfffffffff84633dd
  4574dd:	add    BYTE PTR [rdx],al
  4574df:	add    BYTE PTR [rax],dl
  4574e1:	add    dh,dh
  4574e3:	add    DWORD PTR [rax],eax
  4574e5:	add    BYTE PTR [rsi],al
  4574e7:	add    BYTE PTR [rdi-0x7fff0600],bh
  4574ed:	add    DWORD PTR [rax],edx
  4574ef:	add    BYTE PTR [rip+0x5003102],al        # 0x545a5f7
  4574f5:	add    al,al
  4574f7:	add    bh,bh
  4574f9:	add    BYTE PTR [rax],al
  4574fb:	add    BYTE PTR [rax],dl
  4574fd:	add    BYTE PTR [rip+0x5003102],cl        # 0x545a605
  457503:	add    bl,al
  457505:	add    BYTE PTR [rax],al
  457507:	add    DWORD PTR [rax],eax
  457509:	add    BYTE PTR [rax],dl
  45750b:	add    BYTE PTR [rdi],dl
  45750d:	add    dh,BYTE PTR [rcx]
  45750f:	add    BYTE PTR [rax],bl
  457511:	add    ch,al
  457513:	add    BYTE PTR [rsi],bl
  457515:	add    DWORD PTR [rax],eax
  457517:	add    BYTE PTR [rax],dl
  457519:	add    BYTE PTR [rdi],ah
  45751b:	add    dh,BYTE PTR [rcx]
  45751d:	add    BYTE PTR [rip+0x2700c800],al        # 0x27463d23
  457523:	add    DWORD PTR [rcx],eax
  457525:	add    BYTE PTR [rax],dl
  457527:	add    BYTE PTR [rsi],dh
  457529:	add    dh,BYTE PTR [rcx]
  45752b:	add    BYTE PTR [rax+rax*1-0x37],ah
  45752f:	add    BYTE PTR [rcx],ch
  457531:	add    DWORD PTR [rax],eax
  457533:	add    BYTE PTR [rax],dl
  457535:	add    BYTE PTR [rbx+0x2],al
  457538:	xor    DWORD PTR [rax],eax
  45753a:	add    eax,0x3200cb00
  45753f:	add    DWORD PTR [rbx],eax
  457541:	add    DWORD PTR [rax],eax
  457543:	add    BYTE PTR [rbp+0x2],cl
  457546:	add    BYTE PTR [rax],al
  457548:	and    DWORD PTR [rax],eax
  45754a:	rol    BYTE PTR [rax],cl
  45754c:	rex add DWORD PTR [rbx],eax
  45754f:	add    DWORD PTR [rax],edx
  457551:	add    BYTE PTR [rdi],ah
  457553:	cmp    DWORD PTR [rax],eax
  457555:	add    BYTE PTR [rip+0x4400d200],al        # 0x4446475b
  45755b:	add    DWORD PTR [rsi-0x80],edx
  45755e:	xchg   esp,eax
  45755f:	add    edx,DWORD PTR [rcx]
  457561:	add    BYTE PTR [rsi-0x80],dl
  457564:	movabs ds:0x2503af8056002503,al
  45756d:	add    BYTE PTR [rsi-0x80],dl
  457570:	mov    esp,0x56001103
  457575:	adc    cl,0x3
  457578:	adc    DWORD PTR [rax],eax
  45757a:	push   rsi
  45757b:	and    bl,0x3
  45757e:	adc    DWORD PTR [rax],eax
  457580:	push   rsi
  457581:	cmp    ch,0x3
  457584:	adc    DWORD PTR [rax],eax
  457586:	push   rsi
  457587:	adc    BYTE PTR [rbx],0x4
  45758a:	adc    DWORD PTR [rax],eax
  45758c:	push   rsi
  45758d:	sub    BYTE PTR [rsp+rax*1],0x11
  457591:	add    BYTE PTR [rsi-0x80],dl
  457594:	rex.RB add al,0x11
  457597:	add    BYTE PTR [rsi-0x80],dl
  45759a:	pop    rax
  45759b:	add    al,0xeb
  45759d:	add    BYTE PTR [rsi-0x80],dl
  4575a0:	push   0x4
  4575a2:	jmp    0x4575a4
  4575a4:	push   rsi
  4575a5:	add    BYTE PTR [rsi+0x56001104],0x80
  4575ac:	and    BYTE PTR [rcx+rdx*1],cl
  4575af:	add    BYTE PTR [rsi-0x80],dl
  4575b2:	es or  al,0x11
  4575b5:	add    BYTE PTR [rsi-0x80],dl
  4575b8:	cs or  al,0x11
  4575bb:	add    BYTE PTR [rsi-0x80],dl
  4575be:	cmp    eax,0x5600110c
  4575c3:	adc    BYTE PTR [rbp+0xc],0x11
  4575c7:	add    BYTE PTR [rsi-0x80],dl
  4575ca:	pop    rdi
  4575cb:	or     al,0x11
  4575cd:	add    BYTE PTR [rsi-0x80],dl
  4575d0:	imul   ecx,DWORD PTR [rcx+rdx*1],0x0
  4575d4:	push   rsi
  4575d5:	xor    ch,0xb
  4575d8:	adc    DWORD PTR [rax],eax
  4575da:	push   rsi
  4575db:	or     BYTE PTR [rdx],0xc
  4575de:	adc    DWORD PTR [rax],eax
  4575e0:	push   rsi
  4575e1:	add    BYTE PTR [rcx+0x5600110c],0x80
  4575e8:	xchg   esp,eax
  4575e9:	or     al,0x11
  4575eb:	add    BYTE PTR [rsi-0x80],dl
  4575ee:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  4575ef:	or     al,0x11
  4575f1:	add    BYTE PTR [rsi-0x80],dl
  4575f4:	mov    dl,0xc
  4575f6:	adc    DWORD PTR [rax],eax
  4575f8:	push   rsi
  4575f9:	cmp    BYTE PTR [rdi+0x5600110c],0x80
  457600:	xlat   BYTE PTR ds:[rbx]
  457601:	or     al,0x11
  457603:	add    BYTE PTR [rsi-0x80],dl
  457606:	in     eax,dx
  457607:	or     al,0x11
  457609:	add    BYTE PTR [rsi-0x80],dl
  45760c:	(bad)  
  45760d:	or     eax,0x80560011
  457612:	and    DWORD PTR [rip+0xffffffff80560011],ecx        # 0xffffffff809b7629
  457618:	(bad)  
  457619:	or     eax,0x80560011
  45761e:	rex.WRX or rax,0xffffffff80560011
  457624:	push   0x5600110d
  457629:	xor    BYTE PTR [rcx+0xd],0x11
  45762d:	add    BYTE PTR [rsi-0x80],dl
  457630:	test   DWORD PTR [rip+0xffffffff80560011],ecx        # 0xffffffff809b7647
  457636:	mov    cs,WORD PTR [rip+0xffffffff80560011]        # 0xffffffff809b764d
  45763c:	movabs ds:0x110db7805600110d,al
  457645:	add    BYTE PTR [rsi-0x80],dl
  457648:	xlat   BYTE PTR ds:[rbx]
  457649:	or     eax,0x80560011
  45764e:	call   0x56458760
  457653:	xor    al,0xd
  457656:	adc    DWORD PTR [rax],eax
  457658:	push   rsi
  457659:	add    BYTE PTR [rbx],0xe
  45765c:	adc    DWORD PTR [rax],eax
  45765e:	push   rsi
  45765f:	or     BYTE PTR [rbx],0xe
  457662:	adc    DWORD PTR [rax],eax
  457664:	push   rsi
  457665:	sbb    BYTE PTR [rsi],0xe
  457668:	adc    DWORD PTR [rax],eax
  45766a:	push   rsi
  45766b:	sub    BYTE PTR [rsi],0xe
  45766e:	adc    DWORD PTR [rax],eax
  457670:	push   rsi
  457671:	or     BYTE PTR [rcx+0xe],0x11
  457675:	add    BYTE PTR [rsi-0x80],dl
  457678:	pop    rbp
  457679:	(bad)  
  45767a:	adc    DWORD PTR [rax],eax
  45767c:	push   rsi
  45767d:	cmp    BYTE PTR [rsi+rcx*1+0x11],0x0
  457682:	push   rsi
  457683:	or     BYTE PTR [rsi+rcx*1-0x7fa9ffef],0x9b
  45768b:	(bad)  
  45768c:	adc    DWORD PTR [rax],eax
  45768e:	push   rsi
  45768f:	xor    BYTE PTR [rbp+0x5600110e],0x80
  457696:	mov    esp,0x5600110e
  45769b:	or     dh,0xe
  45769e:	adc    DWORD PTR [rax],eax
  4576a0:	push   rsi
  4576a1:	sbb    al,0xe
  4576a4:	adc    DWORD PTR [rax],eax
  4576a6:	push   rsi
  4576a7:	sub    al,0xe
  4576aa:	adc    DWORD PTR [rax],eax
  4576ac:	push   rsi
  4576ad:	add    BYTE PTR [rbx],0xf
  4576b0:	adc    DWORD PTR [rax],eax
  4576b2:	push   rsi
  4576b3:	adc    BYTE PTR [rax],0xf
  4576b6:	adc    DWORD PTR [rax],eax
  4576b8:	push   rsi
  4576b9:	sub    BYTE PTR [rax],0xf
  4576bc:	adc    DWORD PTR [rax],eax
  4576be:	push   rsi
  4576bf:	xor    BYTE PTR [rsi],0xf
  4576c2:	adc    DWORD PTR [rax],eax
  4576c4:	push   rsi
  4576c5:	cmp    BYTE PTR [rsi],0xf
  4576c8:	adc    DWORD PTR [rax],eax
  4576ca:	push   rsi
  4576cb:	adc    BYTE PTR [rcx+0xf],0x11
  4576cf:	add    BYTE PTR [rsi-0x80],dl
  4576d2:	pop    rsp
  4576d3:	movups XMMWORD PTR [rax],xmm0
  4576d6:	push   rsi
  4576d7:	xor    BYTE PTR [rdx+0xf],0x11
  4576db:	add    BYTE PTR [rsi-0x80],dl
  4576de:	jg     0x4576ef
  4576e0:	adc    DWORD PTR [rax],eax
  4576e2:	push   rsi
  4576e3:	adc    BYTE PTR [rdi+0x5600110f],0x80
  4576ea:	movabs ds:0x110fba805600110f,eax
  4576f3:	add    BYTE PTR [rsi-0x80],dl
  4576f6:	ret    
  4576f7:	movups XMMWORD PTR [rax],xmm0
  4576fa:	push   rsi
  4576fb:	adc    bh,0xf
  4576fe:	adc    DWORD PTR [rax],eax
  457700:	push   rsi
  457701:	and    bh,0xf
  457704:	adc    DWORD PTR [rax],eax
  457706:	push   rsi
  457707:	add    BYTE PTR [rdx],0x10
  45770a:	adc    DWORD PTR [rax],eax
  45770c:	push   rsi
  45770d:	adc    BYTE PTR [rdi],0x10
  457710:	adc    DWORD PTR [rax],eax
  457712:	push   rsi
  457713:	xor    BYTE PTR [rdi],0x10
  457716:	adc    DWORD PTR [rax],eax
  457718:	push   rsi
  457719:	add    BYTE PTR [rcx+0x10],0x11
  45771d:	add    BYTE PTR [rsi-0x80],dl
  457720:	push   rsi
  457721:	adc    BYTE PTR [rcx],dl
  457723:	add    BYTE PTR [rsi-0x80],dl
  457726:	(bad)  
  457727:	adc    BYTE PTR [rcx],dl
  457729:	add    BYTE PTR [rsi-0x80],dl
  45772c:	jns    0x45773e
  45772e:	adc    DWORD PTR [rax],eax
  457730:	push   rsi
  457731:	add    BYTE PTR [rsi+0x56001110],0x80
  457738:	movabs ds:0x1110cb8056001110,eax
  457741:	add    BYTE PTR [rsi-0x80],dl
  457744:	jmp    0x56458859
  457749:	adc    BYTE PTR [rdx],0x11
  45774c:	adc    DWORD PTR [rax],eax
  45774e:	push   rsi
  45774f:	and    BYTE PTR [rcx],0x11
  457752:	adc    DWORD PTR [rax],eax
  457754:	push   rsi
  457755:	cmp    BYTE PTR [rbx],0x11
  457758:	adc    DWORD PTR [rax],eax
  45775a:	push   rsi
  45775b:	add    BYTE PTR [rbx+0x11],0x11
  45775f:	add    BYTE PTR [rsi-0x80],dl
  457762:	push   rsi
  457763:	adc    DWORD PTR [rcx],edx
  457765:	add    BYTE PTR [rsi-0x80],dl
  457768:	(bad)  
  457769:	adc    DWORD PTR [rcx],edx
  45776b:	add    BYTE PTR [rsi-0x80],dl
  45776e:	ja     0x457781
  457770:	adc    DWORD PTR [rax],eax
  457772:	push   rsi
  457773:	or     BYTE PTR [rcx+rdx*1-0x7fa9ffef],0xac
  45777b:	adc    DWORD PTR [rcx],edx
  45777d:	add    BYTE PTR [rsi-0x80],dl
  457780:	mov    ebx,0x11001111
  457785:	add    dh,dh
  457787:	adc    DWORD PTR [rbp+0x600110c],esp
  45778d:	adc    ch,BYTE PTR [rcx+0x1900110c]
  457793:	adc    dh,BYTE PTR [rbx-0x2affe9f4]
  457799:	adc    bl,bh
  45779b:	or     al,0x1
  45779d:	add    dl,bl
  45779f:	adc    ah,bl
  4577a1:	or     al,0x1
  4577a3:	add    dl,ah
  4577a5:	adc    ah,bl
  4577a7:	or     al,0x1
  4577a9:	add    BYTE PTR [rsi],al
  4577ab:	adc    esp,esi
  4577ad:	or     al,0x11
  4577af:	add    ch,ah
  4577b1:	adc    edx,DWORD PTR [rdx]
  4577b3:	or     eax,0x13eb0011
  4577b8:	adc    DWORD PTR [rax],eax
  4577ba:	adc    DWORD PTR [rax],eax
  4577bc:	cmc    
  4577bd:	adc    edx,DWORD PTR [rcx]
  4577bf:	add    BYTE PTR [rcx],dl
  4577c1:	add    BYTE PTR [rdx],dl
  4577c3:	adc    al,0x16
  4577c5:	or     eax,0x14200011
  4577ca:	sbb    cl,BYTE PTR [rip+0x145b0011]        # 0x14a077e1
  4577d0:	(bad)  
  4577d1:	or     eax,0x15fd0001
  4577d6:	lea    ecx,[rip+0x162a0001]        # 0x166f77dd
  4577dc:	xchg   ecx,eax
  4577dd:	or     eax,0x16360001
  4577e2:	xchg   ebp,eax
  4577e3:	or     eax,0x16518051
  4577e8:	adc    DWORD PTR [rax],eax
  4577ea:	push   rcx
  4577eb:	and    BYTE PTR [rsi+0x16],0x11
  4577ef:	add    BYTE PTR [rcx],al
  4577f1:	add    ch,bh
  4577f3:	adc    eax,0x10d8d
  4577f8:	out    dx,eax
  4577f9:	(bad)  
  4577fa:	(bad)  
  4577fb:	(bad)  
  4577fc:	push   rcx
  4577fd:	add    BYTE PTR [rdx],0x17
  457800:	adc    DWORD PTR [rax],eax
  457802:	push   rcx
  457803:	adc    BYTE PTR [rcx+0x16],0x11
  457807:	add    BYTE PTR [rcx],dl
  457809:	add    BYTE PTR [rdx+0x17],al
  45780c:	rex.R (bad) 
  45780e:	adc    DWORD PTR [rax],eax
  457810:	push   rax
  457811:	(bad)  
  457812:	rex.WRX (bad) 
  457814:	adc    DWORD PTR [rax],eax
  457816:	(bad)  
  457817:	(bad)  
  457818:	jrcxz  0x457826
  45781a:	add    DWORD PTR [rax],eax
  45781c:	outs   dx,BYTE PTR ds:[rsi]
  45781d:	(bad)  
  45781e:	adc    DWORD PTR [rax],eax
  457820:	add    DWORD PTR [rax],eax
  457822:	jne    0x45783b
  457824:	adc    DWORD PTR [rax],eax
  457826:	add    DWORD PTR [rax],eax
  457828:	mov    DWORD PTR [rdi],edx
  45782a:	jrcxz  0x457838
  45782c:	add    DWORD PTR [rax],eax
  45782e:	xchg   esi,eax
  45782f:	(bad)  
  457830:	jrcxz  0x45783e
  457832:	adc    DWORD PTR [rax],eax
  457834:	and    DWORD PTR [rax],esi
  457836:	pop    rdi
  457837:	(bad)  
  457838:	add    DWORD PTR [rax],eax
  45783a:	iret   
  45783b:	sbb    BYTE PTR [rcx],dl
  45783d:	add    BYTE PTR [rcx],dl
  45783f:	add    bl,dh
  457841:	sbb    BYTE PTR [rsi+0xe],ah
  457844:	push   rcx
  457845:	add    BYTE PTR [rdx],0x19
  457848:	adc    DWORD PTR [rax],eax
  45784a:	push   rcx
  45784b:	adc    BYTE PTR [rdx],0x19
  45784e:	adc    DWORD PTR [rax],eax
  457850:	push   rcx
  457851:	and    BYTE PTR [rcx],0x19
  457854:	adc    DWORD PTR [rax],eax
  457856:	push   rcx
  457857:	xor    BYTE PTR [rbx],0x19
  45785a:	adc    DWORD PTR [rax],eax
  45785c:	add    DWORD PTR [rax],eax
  45785e:	rex.XB sbb DWORD PTR [r9],edx
  457861:	add    BYTE PTR [rcx],al
  457863:	add    BYTE PTR [rbp+0x19],ch
  457866:	scas   eax,DWORD PTR es:[rdi]
  457867:	(bad)  
  457868:	add    DWORD PTR [rax],eax
  45786a:	jb     0x457885
  45786c:	jrcxz  0x45787a
  45786e:	add    DWORD PTR [rax],eax
  457870:	jns    0x45788b
  457872:	jrcxz  0x457880
  457874:	(bad)  
  457875:	add    cl,bh
  457877:	sbb    ebx,ebp
  457879:	add    BYTE PTR [rsi],al
  45787b:	add    BYTE PTR [rax],al
  45787d:	sbb    ch,bl
  45787f:	add    BYTE PTR [rsi],al
  457881:	add    BYTE PTR [rsi],al
  457883:	sbb    ch,bl
  457885:	add    BYTE PTR [rsi],al
  457887:	add    BYTE PTR [rsi],cl
  457889:	sbb    cl,dl
  45788b:	(bad)  
  45788c:	(bad)  
  45788d:	add    BYTE PTR [rdx+rbx*1],bl
  457890:	retf   0x60e
  457893:	add    BYTE PTR [rdx],ch
  457895:	sbb    cl,dh
  457897:	(bad)  
  457898:	(bad)  
  457899:	add    BYTE PTR [rbx+0x1a],ch
  45789c:	and    eax,0x6d000600
  4578a1:	sbb    ah,BYTE PTR [rip+0x6f000600]        # 0x6f457ea7
  4578a7:	sbb    ah,BYTE PTR [rip+0x74000600]        # 0x74457ead
  4578ad:	sbb    ah,BYTE PTR [rip+0x78000600]        # 0x78457eb3
  4578b3:	sbb    ah,BYTE PTR [rip+0x7e000600]        # 0x7e457eb9
  4578b9:	sbb    ah,BYTE PTR [rip+0xffffffff85000300]        # 0xffffffff85457bbf
  4578bf:	sbb    ch,bl
  4578c1:	add    BYTE PTR [rbx],al
  4578c3:	add    BYTE PTR [rbp+0x30edd1a],cl
  4578c9:	add    BYTE PTR [rdx+rbx*1-0x7fa9f123],ah
  4578d0:	scas   al,BYTE PTR es:[rdi]
  4578d1:	sbb    ah,BYTE PTR [rip+0xffffffffb6805600]        # 0xffffffffb6c5ced7
  4578d7:	sbb    ah,BYTE PTR [rip+0xffffffffc4805600]        # 0xffffffffc4c5cedd
  4578dd:	sbb    ah,BYTE PTR [rip+0xffffffffce805600]        # 0xffffffffcec5cee3
  4578e3:	sbb    ah,BYTE PTR [rip+0xffffffffdf805600]        # 0xffffffffdfc5cee9
  4578e9:	sbb    ah,BYTE PTR [rip+0xfffffffff0805600]        # 0xfffffffff0c5ceef
  4578ef:	sbb    ah,BYTE PTR [rip+0xfffffffffc805600]        # 0xfffffffffcc5cef5
  4578f5:	sbb    ah,BYTE PTR [rip+0xe805600]        # 0xec5cefb
  4578fb:	sbb    esp,DWORD PTR [rip+0x16805600]        # 0x16c5cf01
  457901:	sbb    esp,DWORD PTR [rip+0x22805600]        # 0x22c5cf07
  457907:	sbb    esp,DWORD PTR [rip+0x35805600]        # 0x35c5cf0d
  45790d:	sbb    esp,DWORD PTR [rip+0x3f805600]        # 0x3fc5cf13
  457913:	sbb    esp,DWORD PTR [rip+0x4a805600]        # 0x4ac5cf19
  457919:	sbb    esp,DWORD PTR [rip+0x59805600]        # 0x59c5cf1f
  45791f:	sbb    esp,DWORD PTR [rip+0x6a805600]        # 0x6ac5cf25
  457925:	sbb    esp,DWORD PTR [rip+0xffffffffa9000100]        # 0xffffffffa9457a2b
  45792b:	sbb    edi,DWORD PTR [rip+0xffffffffae00010f]        # 0xffffffffae457a40
  457931:	sbb    edx,DWORD PTR [rcx]
  457933:	add    BYTE PTR [rcx],al
  457935:	add    BYTE PTR [rax],dl
  457937:	sbb    al,0x41
  457939:	sgdt   [rax]
  45793c:	(bad)  
  45793d:	sbb    al,0x11
  45793f:	add    BYTE PTR [rcx],al
  457941:	add    BYTE PTR [rip+0x100111c],ah        # 0x1458a63
  457947:	add    ch,bh
  457949:	adc    eax,0x10d8d
  45794e:	ja     0x45796d
  457950:	movsxd ecx,DWORD PTR [rdi]
  457952:	add    DWORD PTR [rax],eax
  457954:	xchg   esi,eax
  457955:	sbb    eax,0x10f68
  45795a:	movabs ds:0x721dc500010f6d1d,eax
  457963:	sgdt   [rax]
  457966:	rcr    BYTE PTR [rip+0x10f72],cl        # 0x4688de
  45796c:	loope  0x45798b
  45796e:	jb     0x45797f
  457970:	add    DWORD PTR [rax],eax
  457972:	out    dx,eax
  457973:	sbb    eax,0x10f6d
  457978:	add    DWORD PTR [rsi],ebx
  45797a:	ja     0x45798b
  45797c:	add    DWORD PTR [rax],eax
  45797e:	adc    ebx,DWORD PTR [rsi]
  457980:	jl     0x457991
  457982:	add    DWORD PTR [rax],eax
  457984:	sub    BYTE PTR [rsi],bl
  457986:	or     DWORD PTR [rdi],0x1e3f0001
  45798c:	ja     0x45799d
  45798e:	add    DWORD PTR [rax],eax
  457990:	rex.WRXB (bad) 
  457992:	adc    DWORD PTR [rax],eax
  457994:	add    DWORD PTR [rax],eax
  457996:	std    
  457997:	adc    eax,0x260d8d
  45799c:	data16 (bad) 
  45799e:	xchg   edx,eax
  45799f:	(bad)  
  4579a1:	add    BYTE PTR [rdx+0x1e],dh
  4579a4:	xchg   edx,eax
  4579a5:	sgdt   [rax]
  4579a8:	jl     0x4579c8
  4579aa:	xchg   edi,eax
  4579ab:	sgdt   [rax]
  4579ae:	(bad)  
  4579af:	(bad)  
  4579b0:	fwait
  4579b1:	sgdt   [rax]
  4579b4:	(bad)  
  4579b5:	(bad)  
  4579b6:	lahf   
  4579b7:	sgdt   [rax]
  4579ba:	lods   eax,DWORD PTR ds:[rsi]
  4579bb:	(bad)  
  4579bc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  4579bd:	sgdt   [rax]
  4579c0:	std    
  4579c1:	adc    eax,0x10d8d
  4579c6:	sbb    DWORD PTR [rax],esp
  4579c8:	call   0x2f457adc
  4579cd:	and    ch,ch
  4579cf:	sgdt   [rax]
  4579d2:	xchg   BYTE PTR [rax],ah
  4579d4:	xchg   ebp,eax
  4579d5:	or     eax,0x20b58051
  4579da:	adc    DWORD PTR [rax],eax
  4579dc:	push   rcx
  4579dd:	add    cl,0x20
  4579e0:	adc    DWORD PTR [rax],eax
  4579e2:	push   rcx
  4579e3:	or     bl,0x20
  4579e6:	adc    DWORD PTR [rax],eax
  4579e8:	adc    DWORD PTR [rax],eax
  4579ea:	fldenv [rax]
  4579ec:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  4579ed:	or     al,0x11
  4579ef:	add    ch,ah
  4579f1:	and    BYTE PTR [rcx+0x2e00110c],ch
  4579f7:	and    al,0x7c
  4579f9:	adc    BYTE PTR [rcx],al
  4579fb:	add    BYTE PTR [rcx+0x10f3d1b],ch
  457a01:	add    BYTE PTR [rdx],bh
  457a03:	and    al,0x11
  457a05:	add    BYTE PTR [rcx],al
  457a07:	add    BYTE PTR [rcx+0x24],dh
  457a0a:	xchg   DWORD PTR [rax],edx
  457a0c:	add    DWORD PTR [rax],eax
  457a0e:	std    
  457a0f:	adc    eax,0x10d8d
  457a14:	xchg   esi,eax
  457a15:	and    al,0x68
  457a17:	sqrtps xmm0,XMMWORD PTR [rax+0x11249b]
  457a1e:	and    DWORD PTR [rax],eax
  457a20:	test   al,0x24
  457a22:	adc    DWORD PTR [rax],eax
  457a24:	add    DWORD PTR [rax],eax
  457a26:	retf   0x1b24
  457a29:	adc    DWORD PTR [rcx],eax
  457a2b:	add    cl,ch
  457a2d:	and    al,0x20
  457a2f:	adc    DWORD PTR [rcx],eax
  457a31:	add    ch,bh
  457a33:	and    al,0x25
  457a35:	adc    DWORD PTR [rcx],eax
  457a37:	add    BYTE PTR [rcx],cl
  457a39:	and    eax,0x10ca5
  457a3e:	not    BYTE PTR [rcx]
  457a40:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  457a41:	or     al,0x6
  457a43:	add    BYTE PTR [rcx+rbp*1+0x20d00cdf],dl
  457a4a:	add    BYTE PTR [rax],al
  457a4c:	add    BYTE PTR [rax],al
  457a4e:	xchg   esi,eax
  457a4f:	or     BYTE PTR [rdi+0x1012304],bl
  457a55:	add    bh,dl
  457a57:	and    BYTE PTR [rax],al
  457a59:	add    BYTE PTR [rax],al
  457a5b:	add    BYTE PTR [rax+rbx*1+0x12b04cd],al
  457a62:	add    DWORD PTR [rax],eax
  457a64:	fbld   TBYTE PTR [rax]
  457a66:	add    BYTE PTR [rax],al
  457a68:	add    BYTE PTR [rax],al
  457a6a:	xchg   esi,eax
  457a6b:	or     ah,dh
  457a6d:	add    al,0x2f
  457a6f:	add    DWORD PTR [rcx],eax
  457a71:	add    dh,ah
  457a73:	and    BYTE PTR [rax],al
  457a75:	add    BYTE PTR [rax],al
  457a77:	add    BYTE PTR [rsi+0x34050008],dl
  457a7d:	add    DWORD PTR [rcx],eax
  457a7f:	add    dh,ch
  457a81:	and    BYTE PTR [rax],al
  457a83:	add    BYTE PTR [rax],al
  457a85:	add    BYTE PTR [rsi+0x23050c08],dl
  457a8b:	add    DWORD PTR [rdx],eax
  457a8d:	add    dl,bh
  457a8f:	and    BYTE PTR [rax],al
  457a91:	add    BYTE PTR [rax],al
  457a93:	add    BYTE PTR [rsi+0x23051608],dl
  457a99:	add    DWORD PTR [rdx],eax
  457a9b:	add    BYTE PTR [rsi],al
  457a9d:	and    DWORD PTR [rax],eax
  457a9f:	add    BYTE PTR [rax],al
  457aa1:	add    BYTE PTR [rsi+0x23052208],dl
  457aa7:	add    DWORD PTR [rdx],eax
  457aa9:	add    BYTE PTR [rdx],dl
  457aab:	and    DWORD PTR [rax],eax
  457aad:	add    BYTE PTR [rax],al
  457aaf:	add    BYTE PTR [rsi+0x23053508],dl
  457ab5:	add    DWORD PTR [rdx],eax
  457ab7:	add    BYTE PTR [rsi],bl
  457ab9:	and    DWORD PTR [rax],eax
  457abb:	add    BYTE PTR [rax],al
  457abd:	add    BYTE PTR [rsi+0x23055108],dl
  457ac3:	add    DWORD PTR [rdx],eax
  457ac5:	add    BYTE PTR [rdx],ch
  457ac7:	and    DWORD PTR [rax],eax
  457ac9:	add    BYTE PTR [rax],al
  457acb:	add    BYTE PTR [rsi+0x23055f08],dl
  457ad1:	add    DWORD PTR [rdx],eax
  457ad3:	add    BYTE PTR [rsi],dh
  457ad5:	and    DWORD PTR [rax],eax
  457ad7:	add    BYTE PTR [rax],al
  457ad9:	add    BYTE PTR [rsi+0x23056f08],dl
  457adf:	add    DWORD PTR [rdx],eax
  457ae1:	add    BYTE PTR [rdx+0x21],al
  457ae4:	add    BYTE PTR [rax],al
  457ae6:	add    BYTE PTR [rax],al
  457ae8:	xchg   esi,eax
  457ae9:	or     BYTE PTR [rcx+0x2012305],cl
  457aef:	add    BYTE PTR [rsi+0x21],cl
  457af2:	add    BYTE PTR [rax],al
  457af4:	add    BYTE PTR [rax],al
  457af6:	xchg   esi,eax
  457af7:	or     BYTE PTR [rax+0x2012305],ah
  457afd:	add    BYTE PTR [rdx+0x21],bl
  457b00:	add    BYTE PTR [rax],al
  457b02:	add    BYTE PTR [rax],al
  457b04:	xchg   esi,eax
  457b05:	or     BYTE PTR [rbp+0x2012305],dh
  457b0b:	add    BYTE PTR [rsi+0x21],ah
  457b0e:	add    BYTE PTR [rax],al
  457b10:	add    BYTE PTR [rax],al
  457b12:	xchg   esi,eax
  457b13:	or     dh,al
  457b15:	add    eax,0x20123
  457b1a:	jb     0x457b3d
  457b1c:	add    BYTE PTR [rax],al
  457b1e:	add    BYTE PTR [rax],al
  457b20:	xchg   esi,eax
  457b21:	or     bh,dl
  457b23:	add    eax,0x20123
  457b28:	jle    0x457b4b
  457b2a:	add    BYTE PTR [rax],al
  457b2c:	add    BYTE PTR [rax],al
  457b2e:	xchg   esi,eax
  457b2f:	or     bl,dh
  457b31:	add    eax,0x20123
  457b36:	mov    ah,BYTE PTR [rcx]
  457b38:	add    BYTE PTR [rax],al
  457b3a:	add    BYTE PTR [rax],al
  457b3c:	xchg   esi,eax
  457b3d:	or     BYTE PTR [rip+0x2012306],cl        # 0x2469e49
  457b43:	add    BYTE PTR [rsi+0x21],dl
  457b49:	add    BYTE PTR [rsi+0x23063208],dl
  457b4f:	add    DWORD PTR [rdx],eax
  457b51:	add    BYTE PTR [rdx+0x21],ah
  457b57:	add    BYTE PTR [rsi+0x23064908],dl
  457b5d:	add    DWORD PTR [rdx],eax
  457b5f:	add    BYTE PTR [rsi+0x21],ch
  457b65:	add    BYTE PTR [rsi+0x23066b08],dl
  457b6b:	add    DWORD PTR [rdx],eax
  457b6d:	add    BYTE PTR [rdx+0x21],bh
  457b73:	add    BYTE PTR [rsi+0x23067e08],dl
  457b79:	add    DWORD PTR [rdx],eax
  457b7b:	add    dh,al
  457b7d:	and    DWORD PTR [rax],eax
  457b7f:	add    BYTE PTR [rax],al
  457b81:	add    BYTE PTR [rsi+0x23069c08],dl
  457b87:	add    DWORD PTR [rdx],eax
  457b89:	add    dl,dl
  457b8b:	and    DWORD PTR [rax],eax
  457b8d:	add    BYTE PTR [rax],al
  457b8f:	add    BYTE PTR [rsi+0x2306a908],dl
  457b95:	add    DWORD PTR [rdx],eax
  457b97:	add    dh,bl
  457b99:	and    DWORD PTR [rax],eax
  457b9b:	add    BYTE PTR [rax],al
  457b9d:	add    BYTE PTR [rsi+0x2306c108],dl
  457ba3:	add    DWORD PTR [rdx],eax
  457ba5:	add    dl,ch
  457ba7:	and    DWORD PTR [rax],eax
  457ba9:	add    BYTE PTR [rax],al
  457bab:	add    BYTE PTR [rsi+0x2306ce08],dl
  457bb1:	add    DWORD PTR [rdx],eax
  457bb3:	add    dh,dh
  457bb5:	and    DWORD PTR [rax],eax
  457bb7:	add    BYTE PTR [rax],al
  457bb9:	add    BYTE PTR [rsi+0x2306e608],dl
  457bbf:	add    DWORD PTR [rdx],eax
  457bc1:	add    BYTE PTR [rdx],al
  457bc3:	and    al,BYTE PTR [rax]
  457bc5:	add    BYTE PTR [rax],al
  457bc7:	add    BYTE PTR [rsi+0x2306ff08],dl
  457bcd:	add    DWORD PTR [rdx],eax
  457bcf:	add    BYTE PTR [rsi],cl
  457bd1:	and    al,BYTE PTR [rax]
  457bd3:	add    BYTE PTR [rax],al
  457bd5:	add    BYTE PTR [rsi+0x23072308],dl
  457bdb:	add    DWORD PTR [rdx],eax
  457bdd:	add    BYTE PTR [rdx],bl
  457bdf:	and    al,BYTE PTR [rax]
  457be1:	add    BYTE PTR [rax],al
  457be3:	add    BYTE PTR [rsi+0x23073808],dl
  457be9:	add    DWORD PTR [rdx],eax
  457beb:	add    BYTE PTR [rsi],ah
  457bed:	and    al,BYTE PTR [rax]
  457bef:	add    BYTE PTR [rax],al
  457bf1:	add    BYTE PTR [rsi+0x23074408],dl
  457bf7:	add    DWORD PTR [rdx],eax
  457bf9:	add    BYTE PTR [rdx],dh
  457bfb:	and    al,BYTE PTR [rax]
  457bfd:	add    BYTE PTR [rax],al
  457bff:	add    BYTE PTR [rsi+0x23075b08],dl
  457c05:	add    DWORD PTR [rdx],eax
  457c07:	add    BYTE PTR [rsi],bh
  457c09:	and    al,BYTE PTR [rax]
  457c0b:	add    BYTE PTR [rax],al
  457c0d:	add    BYTE PTR [rsi+0x23076708],dl
  457c13:	add    DWORD PTR [rdx],eax
  457c15:	add    BYTE PTR [rdx+0x22],cl
  457c18:	add    BYTE PTR [rax],al
  457c1a:	add    BYTE PTR [rax],al
  457c1c:	xchg   esi,eax
  457c1d:	or     BYTE PTR [rsi+0x7],bh
  457c20:	and    eax,DWORD PTR [rcx]
  457c22:	add    al,BYTE PTR [rax]
  457c24:	push   rsi
  457c25:	and    al,BYTE PTR [rax]
  457c27:	add    BYTE PTR [rax],al
  457c29:	add    BYTE PTR [rsi+0x23079208],dl
  457c2f:	add    DWORD PTR [rdx],eax
  457c31:	add    BYTE PTR [rdx+0x22],ah
  457c34:	add    BYTE PTR [rax],al
  457c36:	add    BYTE PTR [rax],al
  457c38:	xchg   esi,eax
  457c39:	or     BYTE PTR [rcx+0x2012307],dh
  457c3f:	add    BYTE PTR [rsi+0x22],ch
  457c42:	add    BYTE PTR [rax],al
  457c44:	add    BYTE PTR [rax],al
  457c46:	xchg   esi,eax
  457c47:	or     cl,cl
  457c49:	(bad)  
  457c4a:	and    eax,DWORD PTR [rcx]
  457c4c:	add    al,BYTE PTR [rax]
  457c4e:	jp     0x457c72
  457c50:	add    BYTE PTR [rax],al
  457c52:	add    BYTE PTR [rax],al
  457c54:	xchg   esi,eax
  457c55:	or     ah,ch
  457c57:	(bad)  
  457c58:	and    eax,DWORD PTR [rcx]
  457c5a:	add    al,BYTE PTR [rax]
  457c5c:	xchg   BYTE PTR [rdx],ah
  457c5e:	add    BYTE PTR [rax],al
  457c60:	add    BYTE PTR [rax],al
  457c62:	xchg   esi,eax
  457c63:	or     BYTE PTR [rax],al
  457c65:	or     BYTE PTR [rbx],ah
  457c67:	add    DWORD PTR [rdx],eax
  457c69:	add    BYTE PTR [rdx+0x22],dl
  457c6f:	add    BYTE PTR [rsi+0x23081308],dl
  457c75:	add    DWORD PTR [rdx],eax
  457c77:	add    BYTE PTR [rsi+0x22],bl
  457c7d:	add    BYTE PTR [rsi+0x23083108],dl
  457c83:	add    DWORD PTR [rdx],eax
  457c85:	add    BYTE PTR [rdx+0x22],ch
  457c8b:	add    BYTE PTR [rsi+0x23083c08],dl
  457c91:	add    DWORD PTR [rdx],eax
  457c93:	add    BYTE PTR [rsi+0x22],dh
  457c99:	add    BYTE PTR [rsi+0x23085208],dl
  457c9f:	add    DWORD PTR [rdx],eax
  457ca1:	add    dl,al
  457ca3:	and    al,BYTE PTR [rax]
  457ca5:	add    BYTE PTR [rax],al
  457ca7:	add    BYTE PTR [rsi+0x23086008],dl
  457cad:	add    DWORD PTR [rdx],eax
  457caf:	add    dh,cl
  457cb1:	and    al,BYTE PTR [rax]
  457cb3:	add    BYTE PTR [rax],al
  457cb5:	add    BYTE PTR [rsi+0x23087408],dl
  457cbb:	add    DWORD PTR [rdx],eax
  457cbd:	add    dl,bl
  457cbf:	and    al,BYTE PTR [rax]
  457cc1:	add    BYTE PTR [rax],al
  457cc3:	add    BYTE PTR [rsi+0x23089308],dl
  457cc9:	add    DWORD PTR [rdx],eax
  457ccb:	add    dh,ah
  457ccd:	and    al,BYTE PTR [rax]
  457ccf:	add    BYTE PTR [rax],al
  457cd1:	add    BYTE PTR [rsi+0x2308a408],dl
  457cd7:	add    DWORD PTR [rdx],eax
  457cd9:	add    dl,dh
  457cdb:	and    al,BYTE PTR [rax]
  457cdd:	add    BYTE PTR [rax],al
  457cdf:	add    BYTE PTR [rsi+0x2308c008],dl
  457ce5:	add    DWORD PTR [rdx],eax
  457ce7:	add    dh,bh
  457ce9:	and    al,BYTE PTR [rax]
  457ceb:	add    BYTE PTR [rax],al
  457ced:	add    BYTE PTR [rsi+0x2308d208],dl
  457cf3:	add    DWORD PTR [rdx],eax
  457cf5:	add    BYTE PTR [rdx],cl
  457cf7:	and    eax,DWORD PTR [rax]
  457cf9:	add    BYTE PTR [rax],al
  457cfb:	add    BYTE PTR [rsi+0x2308de08],dl
  457d01:	add    DWORD PTR [rdx],eax
  457d03:	add    BYTE PTR [rsi],dl
  457d05:	and    eax,DWORD PTR [rax]
  457d07:	add    BYTE PTR [rax],al
  457d09:	add    BYTE PTR [rsi+0x2308f508],dl
  457d0f:	add    DWORD PTR [rdx],eax
  457d11:	add    BYTE PTR [rdx],ah
  457d13:	and    eax,DWORD PTR [rax]
  457d15:	add    BYTE PTR [rax],al
  457d17:	add    BYTE PTR [rsi+0x23090408],dl
  457d1d:	add    DWORD PTR [rdx],eax
  457d1f:	add    BYTE PTR [rsi],ch
  457d21:	and    eax,DWORD PTR [rax]
  457d23:	add    BYTE PTR [rax],al
  457d25:	add    BYTE PTR [rsi+0x23091e08],dl
  457d2b:	add    DWORD PTR [rdx],eax
  457d2d:	add    BYTE PTR [rdx],bh
  457d2f:	and    eax,DWORD PTR [rax]
  457d31:	add    BYTE PTR [rax],al
  457d33:	add    BYTE PTR [rsi+0x23092f08],dl
  457d39:	add    DWORD PTR [rdx],eax
  457d3b:	add    BYTE PTR [rsi+0x23],al
  457d3e:	add    BYTE PTR [rax],al
  457d40:	add    BYTE PTR [rax],al
  457d42:	xchg   esi,eax
  457d43:	or     BYTE PTR [rbx+0x9],cl
  457d46:	and    eax,DWORD PTR [rcx]
  457d48:	add    al,BYTE PTR [rax]
  457d4a:	push   rdx
  457d4b:	and    eax,DWORD PTR [rax]
  457d4d:	add    BYTE PTR [rax],al
  457d4f:	add    BYTE PTR [rsi+0x23095b08],dl
  457d55:	add    DWORD PTR [rdx],eax
  457d57:	add    BYTE PTR [rsi+0x23],bl
  457d5a:	add    BYTE PTR [rax],al
  457d5c:	add    BYTE PTR [rax],al
  457d5e:	xchg   esi,eax
  457d5f:	or     BYTE PTR [rsi+0x9],dh
  457d62:	and    eax,DWORD PTR [rcx]
  457d64:	add    al,BYTE PTR [rax]
  457d66:	push   0x23
  457d68:	add    BYTE PTR [rax],al
  457d6a:	add    BYTE PTR [rax],al
  457d6c:	xchg   esi,eax
  457d6d:	or     BYTE PTR [rbx+0x2012309],al
  457d73:	add    BYTE PTR [rsi+0x23],dh
  457d76:	add    BYTE PTR [rax],al
  457d78:	add    BYTE PTR [rax],al
  457d7a:	xchg   esi,eax
  457d7b:	or     BYTE PTR [rbx+0x2012309],bl
  457d81:	add    BYTE PTR [rdx+0x23],al
  457d87:	add    BYTE PTR [rsi+0x2309af08],dl
  457d8d:	add    DWORD PTR [rdx],eax
  457d8f:	add    BYTE PTR [rsi+0x23],cl
  457d95:	add    BYTE PTR [rsi+0x2309ce08],dl
  457d9b:	add    DWORD PTR [rdx],eax
  457d9d:	add    BYTE PTR [rdx+0x23],bl
  457da3:	add    BYTE PTR [rsi+0x2309e708],dl
  457da9:	add    DWORD PTR [rdx],eax
  457dab:	add    BYTE PTR [rsi+0x23],ah
  457db1:	add    BYTE PTR [rsi+0x230a0b08],dl
  457db7:	add    DWORD PTR [rdx],eax
  457db9:	add    BYTE PTR [rdx+0x23],dh
  457dbf:	add    BYTE PTR [rsi+0x230a1908],dl
  457dc5:	add    DWORD PTR [rdx],eax
  457dc7:	add    BYTE PTR [rsi+0x23],bh
  457dcd:	add    BYTE PTR [rsi+0x230a3208],dl
  457dd3:	add    DWORD PTR [rdx],eax
  457dd5:	add    dl,cl
  457dd7:	and    eax,DWORD PTR [rax]
  457dd9:	add    BYTE PTR [rax],al
  457ddb:	add    BYTE PTR [rsi+0x230a4208],dl
  457de1:	add    DWORD PTR [rdx],eax
  457de3:	add    dh,dl
  457de5:	and    eax,DWORD PTR [rax]
  457de7:	add    BYTE PTR [rax],al
  457de9:	add    BYTE PTR [rsi+0x230a5d08],dl
  457def:	add    DWORD PTR [rdx],eax
  457df1:	add    dl,ah
  457df3:	and    eax,DWORD PTR [rax]
  457df5:	add    BYTE PTR [rax],al
  457df7:	add    BYTE PTR [rsi+0x230a6e08],dl
  457dfd:	add    DWORD PTR [rdx],eax
  457dff:	add    dh,ch
  457e01:	and    eax,DWORD PTR [rax]
  457e03:	add    BYTE PTR [rax],al
  457e05:	add    BYTE PTR [rsi+0x230a8f08],dl
  457e0b:	add    DWORD PTR [rdx],eax
  457e0d:	add    dl,bh
  457e0f:	and    eax,DWORD PTR [rax]
  457e11:	add    BYTE PTR [rax],al
  457e13:	add    BYTE PTR [rsi+0x230abb08],dl
  457e19:	add    DWORD PTR [rdx],eax
  457e1b:	add    BYTE PTR [rsi],al
  457e1d:	and    al,0x0
  457e1f:	add    BYTE PTR [rax],al
  457e21:	add    BYTE PTR [rsi+0x230add08],dl
  457e27:	add    DWORD PTR [rdx],eax
  457e29:	add    BYTE PTR [rdx],dl
  457e2b:	and    al,0x0
  457e2d:	add    BYTE PTR [rax],al
  457e2f:	add    BYTE PTR [rsi+0x230b0a08],dl
  457e35:	add    DWORD PTR [rdx],eax
  457e37:	add    BYTE PTR [rsi],bl
  457e39:	and    al,0x0
  457e3b:	add    BYTE PTR [rax],al
  457e3d:	add    BYTE PTR [rsi+0x230b1d08],dl
  457e43:	add    DWORD PTR [rdx],eax
  457e45:	add    BYTE PTR [rdx],ch
  457e47:	and    al,0x0
  457e49:	add    BYTE PTR [rax],al
  457e4b:	add    BYTE PTR [rsi+0x230b3b08],dl
  457e51:	add    DWORD PTR [rdx],eax
  457e53:	add    BYTE PTR [rsi],dh
  457e55:	and    al,0x0
  457e57:	add    BYTE PTR [rax],al
  457e59:	add    BYTE PTR [rsi+0x230b4708],dl
  457e5f:	add    DWORD PTR [rdx],eax
  457e61:	add    BYTE PTR [rdx+0x24],al
  457e64:	add    BYTE PTR [rax],al
  457e66:	add    BYTE PTR [rax],al
  457e68:	xchg   esi,eax
  457e69:	or     BYTE PTR [rsi+0xb],bl
  457e6c:	and    eax,DWORD PTR [rcx]
  457e6e:	add    al,BYTE PTR [rax]
  457e70:	rex.WRX and al,0x0
  457e73:	add    BYTE PTR [rax],al
  457e75:	add    BYTE PTR [rsi+0x230b6d08],dl
  457e7b:	add    DWORD PTR [rdx],eax
  457e7d:	add    BYTE PTR [rdx+0x24],bl
  457e80:	add    BYTE PTR [rax],al
  457e82:	add    BYTE PTR [rax],al
  457e84:	xchg   esi,eax
  457e85:	or     BYTE PTR [rdi+0x201230b],al
  457e8b:	add    BYTE PTR [rsi+0x24],ah
  457e8e:	add    BYTE PTR [rax],al
  457e90:	add    BYTE PTR [rax],al
  457e92:	xchg   esi,eax
  457e93:	or     BYTE PTR [rax+0x201230b],ah
  457e99:	add    BYTE PTR [rdx+0x24],dh
  457e9c:	add    BYTE PTR [rax],al
  457e9e:	add    BYTE PTR [rax],al
  457ea0:	xchg   esi,eax
  457ea1:	or     ah,al
  457ea3:	or     esp,DWORD PTR [rbx]
  457ea5:	add    DWORD PTR [rdx],eax
  457ea7:	add    BYTE PTR [rsi+0x24],bh
  457eaa:	add    BYTE PTR [rax],al
  457eac:	add    BYTE PTR [rax],al
  457eae:	xchg   esi,eax
  457eaf:	or     bh,dl
  457eb1:	or     esp,DWORD PTR [rbx]
  457eb3:	add    DWORD PTR [rdx],eax
  457eb5:	add    BYTE PTR [rdx+0x24],cl
  457ebb:	add    BYTE PTR [rsi+0x3a0bf500],dl
  457ec1:	add    DWORD PTR [rdx],eax
  457ec3:	add    BYTE PTR [rdi+0x24],dl
  457ec9:	add    BYTE PTR [rsi+0x3a0c0a00],dl
  457ecf:	add    DWORD PTR [rbx],eax
  457ed1:	add    BYTE PTR [rsp+0x0],ah
  457ed8:	sbb    DWORD PTR [rax],0x12b04cd
  457ede:	add    al,0x0
  457ee0:	lods   al,BYTE PTR ds:[rsi]
  457ee1:	and    al,0x0
  457ee3:	add    BYTE PTR [rax],al
  457ee5:	add    BYTE PTR [rsi+0x2f04f408],dl
  457eeb:	add    DWORD PTR [rax+rax*1],eax
  457eee:	mov    bl,0x24
  457ef0:	add    BYTE PTR [rax],al
  457ef2:	add    BYTE PTR [rax],al
  457ef4:	xchg   esi,eax
  457ef5:	or     BYTE PTR [rax],al
  457ef7:	add    eax,0x40134
  457efc:	mov    ebx,0x24
  457f01:	add    BYTE PTR [rsi+0x3a120f00],dl
  457f07:	add    DWORD PTR [rip+0x24d000],eax        # 0x6a4f0d
  457f0d:	add    BYTE PTR [rax],al
  457f0f:	add    BYTE PTR [rsi-0x52edf100],dl
  457f15:	or     al,0x6
  457f17:	add    BYTE PTR [rbx],al
  457f19:	and    eax,0x0
  457f1e:	xchg   ecx,eax
  457f1f:	sbb    BYTE PTR [rbp+0x80d3114],ah
  457f25:	add    BYTE PTR [rax],bh
  457f27:	and    eax,0x0
  457f2c:	xchg   esi,eax
  457f2d:	or     BYTE PTR [rcx],ch
  457f2f:	adc    dh,BYTE PTR [rdi+0x3f00080c]
  457f35:	and    eax,0x0
  457f3a:	xchg   BYTE PTR [rax],cl
  457f3c:	xor    eax,0x80cbc12
  457f41:	add    BYTE PTR [rcx+0x25],dl
  457f44:	add    BYTE PTR [rax],al
  457f46:	add    BYTE PTR [rax],al
  457f48:	xchg   BYTE PTR [rax],cl
  457f4a:	rex.WB adc al,r9b
  457f4d:	or     al,0x8
  457f4f:	add    BYTE PTR [rbp+riz*1+0x0],ah
  457f53:	add    BYTE PTR [rax],al
  457f55:	add    BYTE PTR [rsi+0x2b04cd18],al
  457f5b:	add    DWORD PTR [rcx],ecx
  457f5d:	add    BYTE PTR [rbp+riz*1+0x0],ch
  457f61:	add    BYTE PTR [rax],al
  457f63:	add    BYTE PTR [rcx-0x38ed8a00],al
  457f69:	or     al,0x9
  457f6b:	add    BYTE PTR [rsi+0x25],ch
  457f6e:	add    BYTE PTR [rax],al
  457f70:	add    BYTE PTR [rax],al
  457f72:	add    DWORD PTR [rax],0xcce12a2
  457f78:	or     eax,DWORD PTR [rax]
  457f7a:	jo     0x457fa1
  457f7c:	add    BYTE PTR [rax],al
  457f7e:	add    BYTE PTR [rax],al
  457f80:	xchg   ecx,eax
  457f81:	sbb    BYTE PTR [rbp+0xd0d3114],ah
  457f87:	add    BYTE PTR [rsi+0x20000025],al
  457f8d:	add    dh,ah
  457f8f:	or     DWORD PTR [rsi],edx
  457f91:	adc    ebp,edx
  457f93:	or     al,0xd
  457f95:	add    BYTE PTR [rdi+0x20000025],bl
  457f9b:	add    dh,ah
  457f9d:	or     DWORD PTR [rdx],ebp
  457f9f:	adc    ebp,edx
  457fa1:	or     al,0xe
  457fa3:	add    BYTE PTR [rax+0x25],bh
  457fa9:	add    BYTE PTR [rsi-0xfecbef8],al
  457faf:	or     al,0xf
  457fb1:	add    al,al
  457fb3:	and    eax,0x0
  457fb8:	xchg   BYTE PTR [rax],cl
  457fba:	adc    r14,r12
  457fbd:	or     al,0xf
  457fbf:	add    dh,bl
  457fc1:	and    eax,0x0
  457fc6:	xchg   BYTE PTR [rax],cl
  457fc8:	pop    rcx
  457fc9:	adc    esi,eax
  457fcb:	or     al,0x10
  457fcd:	add    dh,ah
  457fcf:	and    eax,0x0
  457fd4:	xchg   BYTE PTR [rax],cl
  457fd6:	gs adc esi,esp
  457fd9:	or     al,0x10
  457fdb:	add    BYTE PTR [rax],al
  457fdd:	add    BYTE PTR [rax],al
  457fdf:	add    BYTE PTR [rax],al
  457fe1:	add    dh,al
  457fe3:	add    eax,0x12b1371
  457fe8:	adc    DWORD PTR [rax],eax
  457fea:	add    al,0x26
  457fec:	add    BYTE PTR [rax],al
  457fee:	add    BYTE PTR [rax],al
  457ff0:	test   BYTE PTR [rax],al
  457ff2:	jns    0x458007
  457ff4:	stc    
  457ff5:	or     al,0x11
  457ff7:	add    BYTE PTR [rax],ah
  457ff9:	add    BYTE PTR es:[rax],al
  457ffc:	add    BYTE PTR [rax],al
  457ffe:	xchg   esi,eax
  457fff:	or     BYTE PTR [rcx+0x120cfe13],bl
  458005:	add    BYTE PTR [rbx],bh
  458007:	add    BYTE PTR es:[rax],al
  45800a:	add    BYTE PTR [rax],al
  45800c:	test   BYTE PTR [rax],bl
  45800e:	int    0x4
  458010:	sub    eax,DWORD PTR [rcx]
  458012:	adc    eax,DWORD PTR [rax]
  458014:	(bad)  
  458015:	add    BYTE PTR es:[rax],al
  458018:	add    BYTE PTR [rax],al
  45801a:	xchg   ecx,eax
  45801b:	sbb    BYTE PTR [rbp+0x130d3114],ah
  458021:	add    BYTE PTR [rcx+0x26],dl
  458024:	add    BYTE PTR [rax],al
  458026:	add    BYTE PTR [rax],al
  458028:	xchg   BYTE PTR [rax],bl
  45802a:	int    0x4
  45802c:	sub    eax,DWORD PTR [rcx]
  45802e:	adc    eax,DWORD PTR [rax]
  458030:	(bad)  
  458031:	add    BYTE PTR es:[rax],al
  458034:	add    BYTE PTR [rax],al
  458036:	mov    BYTE PTR [rax],0x71
  458039:	adc    ebp,DWORD PTR [rbx]
  45803b:	add    DWORD PTR [rbx],edx
  45803d:	add    BYTE PTR [rdx+0x26],ah
  458040:	add    BYTE PTR [rax],al
  458042:	add    BYTE PTR [rax],al
  458044:	xchg   esi,eax
  458045:	or     BYTE PTR [rsp+rdx*1+0x22],ah
  458049:	or     eax,0x26690013
  45804e:	add    BYTE PTR [rax],al
  458050:	add    BYTE PTR [rax],al
  458052:	xchg   esi,eax
  458053:	or     BYTE PTR [rsi+0x14],ch
  458056:	and    eax,DWORD PTR [rcx]
  458058:	adc    eax,DWORD PTR [rax]
  45805a:	jo     0x458082
  45805c:	add    BYTE PTR [rax],al
  45805e:	add    BYTE PTR [rax],al
  458060:	xchg   esi,eax
  458061:	or     BYTE PTR [rsp+rdx*1+0x23],bh
  458065:	add    DWORD PTR [rbx],edx
  458067:	add    BYTE PTR [rdi+0x26],dh
  45806a:	add    BYTE PTR [rax],al
  45806c:	add    BYTE PTR [rax],al
  45806e:	xchg   ecx,eax
  45806f:	or     BYTE PTR [rcx+0x130d2714],cl
  458075:	add    BYTE PTR [rbx+0x26],al
  45807b:	add    BYTE PTR [rsi+0x2c149808],dl
  458081:	or     eax,0x268c0013
  458086:	add    BYTE PTR [rax],al
  458088:	add    BYTE PTR [rax],al
  45808a:	xchg   ecx,eax
  45808b:	sbb    BYTE PTR [rbp+0x130d3114],ah
  458091:	add    dh,bl
  458093:	add    BYTE PTR es:[rax],al
  458096:	add    BYTE PTR [rax],al
  458098:	xchg   BYTE PTR [rax],bl
  45809a:	int    0x4
  45809c:	xor    eax,0x1800130d
  4580a1:	(bad)  
  4580a2:	add    BYTE PTR [rax],al
  4580a4:	add    BYTE PTR [rax],al
  4580a6:	xchg   esi,eax
  4580a7:	add    BYTE PTR [rcx+0x160d3c14],bh
  4580ad:	add    BYTE PTR [rcx],ah
  4580af:	(bad)  
  4580b0:	add    BYTE PTR [rax],al
  4580b2:	add    BYTE PTR [rax],al
  4580b4:	xchg   esi,eax
  4580b5:	add    BYTE PTR [rcx+0x170d4214],bh
  4580bb:	add    BYTE PTR [rdi],ch
  4580bd:	(bad)  
  4580be:	add    BYTE PTR [rax],al
  4580c0:	add    BYTE PTR [rax],al
  4580c2:	xchg   esi,eax
  4580c3:	add    BYTE PTR [rcx+0x190d4a14],bh
  4580c9:	add    BYTE PTR [rax+0x27],al
  4580cc:	add    BYTE PTR [rax],al
  4580ce:	add    BYTE PTR [rax],al
  4580d0:	xchg   esi,eax
  4580d1:	add    ch,dl
  4580d3:	adc    al,0x53
  4580d5:	or     eax,0x27fc001c
  4580da:	add    BYTE PTR [rax],al
  4580dc:	add    BYTE PTR [rax],al
  4580de:	xchg   esi,eax
  4580df:	add    ah,ah
  4580e1:	adc    al,0x57
  4580e3:	or     eax,0x2818001c
  4580e8:	add    BYTE PTR [rax],al
  4580ea:	add    BYTE PTR [rax],al
  4580ec:	xchg   esi,eax
  4580ed:	add    BYTE PTR [rbx],al
  4580ef:	adc    eax,0x1d0123
  4580f4:	xor    ebp,DWORD PTR [rax]
  4580f6:	add    BYTE PTR [rax],al
  4580f8:	add    BYTE PTR [rax],al
  4580fa:	xchg   ecx,eax
  4580fb:	add    BYTE PTR [rip+0x1d0d5d15],bh        # 0x1d52de16
  458101:	add    BYTE PTR [rbx+0x28],dl
  458104:	add    BYTE PTR [rax],al
  458106:	add    BYTE PTR [rax],al
  458108:	xchg   BYTE PTR [rax],bl
  45810a:	int    0x4
  45810c:	sub    eax,DWORD PTR [rcx]
  45810e:	(bad)  
  45810f:	add    BYTE PTR [rcx+0x28],ah
  458112:	add    BYTE PTR [rax],al
  458114:	add    BYTE PTR [rax],al
  458116:	xchg   BYTE PTR [rax],al
  458118:	mov    DWORD PTR [rip+0x1f0d73],edx        # 0x648e91
  45811e:	movabs eax,ds:0x9940c40000000028
  458127:	adc    eax,0x200d79
  45812c:	mov    ch,0x28
  45812e:	add    BYTE PTR [rax],al
  458130:	add    BYTE PTR [rax],al
  458132:	(bad)  
  458133:	or     BYTE PTR [rbx+0x210cf015],ch
  458139:	add    BYTE PTR [rax+0x28],bh
  45813f:	add    ah,al
  458141:	add    dl,cl
  458143:	adc    eax,0x210d80
  458148:	pop    rax
  458149:	sub    DWORD PTR [rax],eax
  45814b:	add    BYTE PTR [rax],al
  45814d:	add    BYTE PTR [rcx-0x79ea2200],al
  458153:	or     eax,0x2aa00022
  458158:	add    BYTE PTR [rax],al
  45815a:	add    BYTE PTR [rax],al
  45815c:	(bad)  
  45815d:	add    BYTE PTR [rax],cl
  45815f:	(bad)  
  458160:	hlt    
  458161:	or     al,0x24
  458163:	add    al,al
  458165:	sub    al,BYTE PTR [rax]
  458167:	add    BYTE PTR [rax],al
  458169:	add    BYTE PTR [rcx+0x2b161000],al
  45816f:	add    DWORD PTR [rip+0x2bdf00],esp        # 0x716075
  458175:	add    BYTE PTR [rax],al
  458177:	add    BYTE PTR [rsi+0x2b04cd18],al
  45817d:	add    DWORD PTR [rip+0x2bf400],esp        # 0x717583
  458183:	add    BYTE PTR [rax],al
  458185:	add    ah,al
  458187:	add    BYTE PTR [rbx+0x16],dh
  45818a:	sti    
  45818b:	or     eax,0x2c420025
  458190:	add    BYTE PTR [rax],al
  458192:	add    BYTE PTR [rax],al
  458194:	(bad)  
  458195:	add    BYTE PTR [rdx+0x16],bh
  458198:	sti    
  458199:	or     eax,0x2c5c0026
  45819e:	add    BYTE PTR [rax],al
  4581a0:	add    BYTE PTR [rax],al
  4581a2:	(bad)  
  4581a3:	add    BYTE PTR [rbx+0x270e0116],al
  4581a9:	add    BYTE PTR [rax+0x2c],dl
  4581af:	add    BYTE PTR [rcx-0x79e97300],al
  4581b5:	or     eax,0x2d0c0028
  4581ba:	add    BYTE PTR [rax],al
  4581bc:	add    BYTE PTR [rax],al
  4581be:	add    DWORD PTR [rax],0xe0716d1
  4581c4:	sub    al,BYTE PTR [rax]
  4581c6:	and    BYTE PTR [rip+0x0],ch        # 0x4581cc
  4581cc:	add    DWORD PTR [rax],0x12b16e7
  4581d2:	sub    al,0x0
  4581d4:	push   rsi
  4581d5:	sub    eax,0x0
  4581da:	(bad)  
  4581db:	add    BYTE PTR [rax],cl
  4581dd:	(bad)  
  4581de:	hlt    
  4581df:	or     al,0x2c
  4581e1:	add    BYTE PTR [rax+0x2d],bh
  4581e4:	add    BYTE PTR [rax],al
  4581e6:	add    BYTE PTR [rax],al
  4581e8:	add    DWORD PTR [rax],0x12b1610
  4581ee:	sub    eax,0x2e2100
  4581f3:	add    BYTE PTR [rax],al
  4581f5:	add    BYTE PTR [rsi+0x5117a308],al
  4581fb:	(bad)  
  4581fc:	sub    eax,0x2e2900
  458201:	add    BYTE PTR [rax],al
  458203:	add    BYTE PTR [rsi-0x6e851f8],al
  458209:	or     al,0x2d
  45820b:	add    BYTE PTR [rdx],dh
  45820d:	add    BYTE PTR cs:[rax],al
  458210:	add    BYTE PTR [rax],al
  458212:	xchg   BYTE PTR [rax],cl
  458214:	mov    ecx,0x2e0cf017
  458219:	add    BYTE PTR [rdx],bh
  45821b:	add    BYTE PTR cs:[rax],al
  45821e:	add    BYTE PTR [rax],al
  458220:	xchg   BYTE PTR [rax],cl
  458222:	retf   0xf417
  458225:	or     al,0x2e
  458227:	add    BYTE PTR [rbx+0x2e],al
  45822a:	add    BYTE PTR [rax],al
  45822c:	add    BYTE PTR [rax],al
  45822e:	xchg   BYTE PTR [rax],cl
  458230:	fist   DWORD PTR [rdi]
  458232:	lock or al,0x2f
  458235:	add    BYTE PTR [rbx+0x2e],cl
  458238:	add    BYTE PTR [rax],al
  45823a:	add    BYTE PTR [rax],al
  45823c:	xchg   BYTE PTR [rax],cl
  45823e:	in     al,dx
  45823f:	(bad)  
  458240:	hlt    
  458241:	or     al,0x2f
  458243:	add    BYTE PTR [rsi+rbp*1+0x0],ah
  458247:	add    BYTE PTR [rax],al
  458249:	add    BYTE PTR [rsi+0x5117fd08],al
  45824f:	(bad)  
  458250:	xor    BYTE PTR [rax],al
  458252:	ins    BYTE PTR es:[rdi],dx
  458253:	add    BYTE PTR cs:[rax],al
  458256:	add    BYTE PTR [rax],al
  458258:	xchg   BYTE PTR [rax],cl
  45825a:	adc    eax,0x300cf918
  45825f:	add    BYTE PTR [rbp+0x2e],dh
  458262:	add    BYTE PTR [rax],al
  458264:	add    BYTE PTR [rax],al
  458266:	xchg   BYTE PTR [rax],bl
  458268:	int    0x4
  45826a:	sub    eax,DWORD PTR [rcx]
  45826c:	xor    DWORD PTR [rax],eax
  45826e:	jle    0x45829e
  458270:	add    BYTE PTR [rax],al
  458272:	add    BYTE PTR [rax],al
  458274:	xchg   BYTE PTR [rax],bl
  458276:	int    0x4
  458278:	stc    
  458279:	or     al,0x31
  45827b:	add    BYTE PTR [rcx+0x2e],cl
  458281:	add    BYTE PTR [rsi+0x5504cd18],al
  458287:	(bad)  
  458288:	xor    al,BYTE PTR [rax]
  45828a:	lods   al,BYTE PTR ds:[rsi]
  45828b:	add    BYTE PTR cs:[rax],al
  45828e:	add    BYTE PTR [rax],al
  458290:	mov    BYTE PTR [rax],0x71
  458293:	adc    ebp,DWORD PTR [rbx]
  458295:	add    DWORD PTR [rip+0x2f1800],esi        # 0x749a9b
  45829b:	add    BYTE PTR [rax],al
  45829d:	add    ah,al
  45829f:	add    DWORD PTR [rip+0x35012b18],ebp        # 0x3546adbd
  4582a5:	add    ah,cl
  4582a7:	(bad)  
  4582a8:	add    BYTE PTR [rax],al
  4582aa:	add    BYTE PTR [rax],al
  4582ac:	add    DWORD PTR [rax],0xe511839
  4582b2:	xor    eax,0x300000
  4582b7:	add    BYTE PTR [rax],al
  4582b9:	add    ah,al
  4582bb:	add    DWORD PTR [rcx+0x18],ecx
  4582be:	push   rcx
  4582bf:	(bad)  
  4582c0:	xor    eax,0x314e00
  4582c5:	add    BYTE PTR [rax],al
  4582c7:	add    BYTE PTR [rcx-0x79e7aa00],al
  4582cd:	or     eax,0x31860035
  4582d2:	add    BYTE PTR [rax],al
  4582d4:	add    BYTE PTR [rax],al
  4582d6:	add    DWORD PTR [rax],0x12b1864
  4582dc:	(bad)  
  4582dd:	add    BYTE PTR [rax+0x31],ch
  4582e3:	add    BYTE PTR [rcx+0x5c187100],dl
  4582e9:	(bad)  
  4582ea:	(bad)  
  4582eb:	add    ah,ch
  4582ed:	xor    DWORD PTR [rax],eax
  4582ef:	add    BYTE PTR [rax],al
  4582f1:	add    BYTE PTR [rcx+0x31188100],dl
  4582f7:	or     eax,0x31470038
  4582fc:	add    BYTE PTR [rax],al
  4582fe:	add    BYTE PTR [rax],al
  458300:	xchg   ecx,eax
  458301:	add    dl,bh
  458303:	(bad)  
  458304:	or     dl,BYTE PTR [rdi]
  458306:	cmp    BYTE PTR [rax],al
  458308:	test   BYTE PTR [rdx],dh
  45830a:	add    BYTE PTR [rax],al
  45830c:	add    BYTE PTR [rax],al
  45830e:	xchg   ecx,eax
  45830f:	sbb    BYTE PTR [rbp+0x390d3114],ah
  458315:	add    BYTE PTR [rax+0x32],ah
  45831b:	add    BYTE PTR [rcx+0x3114a518],dl
  458321:	or     eax,0x330a0039
  458326:	add    BYTE PTR [rax],al
  458328:	add    BYTE PTR [rax],al
  45832a:	xchg   BYTE PTR [rax],bl
  45832c:	int    0x4
  45832e:	sub    eax,DWORD PTR [rcx]
  458330:	cmp    DWORD PTR [rax],eax
  458332:	adc    esi,DWORD PTR [rbx]
  458334:	add    BYTE PTR [rax],al
  458336:	add    BYTE PTR [rax],al
  458338:	xchg   BYTE PTR [rax],bl
  45833a:	int    0x4
  45833c:	stc    
  45833d:	or     al,0x39
  45833f:	add    BYTE PTR [rsi],bl
  458341:	xor    eax,DWORD PTR [rax]
  458343:	add    BYTE PTR [rax],al
  458345:	add    BYTE PTR [rsi+0x5504cd18],al
  45834b:	(bad)  
  45834c:	cmp    al,BYTE PTR [rax]
  45834e:	sub    DWORD PTR [rbx],esi
  458350:	add    BYTE PTR [rax],al
  458352:	add    BYTE PTR [rax],al
  458354:	mov    BYTE PTR [rax],0x71
  458357:	adc    ebp,DWORD PTR [rbx]
  458359:	add    DWORD PTR [rip+0x335800],edi        # 0x78db5f
  45835f:	add    BYTE PTR [rax],al
  458361:	add    ah,al
  458363:	add    BYTE PTR [rcx+0x18],cl
  458366:	push   rcx
  458367:	(bad)  
  458368:	cmp    eax,0x338e00
  45836d:	add    BYTE PTR [rax],al
  45836f:	add    BYTE PTR [rsi+0x51198008],al
  458375:	(bad)  
  458376:	cmp    eax,0x339600
  45837b:	add    BYTE PTR [rax],al
  45837d:	add    BYTE PTR [rsi-0xfe672f8],al
  458383:	or     al,0x3d
  458385:	add    BYTE PTR [rsi+0x33],bl
  45838b:	add    BYTE PTR [rsi-0x4be667f8],al
  458391:	(bad)  
  458392:	cmp    eax,0x33a600
  458397:	add    BYTE PTR [rax],al
  458399:	add    BYTE PTR [rcx-0x45eb9bf8],al
  45839f:	(bad)  
  4583a0:	cmp    eax,0x33ad00
  4583a5:	add    BYTE PTR [rax],al
  4583a7:	add    BYTE PTR [rsi-0x6fb32e8],al
  4583ad:	or     al,0x3d
  4583af:	add    dl,ch
  4583b1:	xor    eax,DWORD PTR [rax]
  4583b3:	add    BYTE PTR [rax],al
  4583b5:	add    BYTE PTR [rcx-0x6e65700],al
  4583bb:	or     al,0x3e
  4583bd:	add    BYTE PTR [rsp+rsi*1],al
  4583c0:	add    BYTE PTR [rax],al
  4583c2:	add    BYTE PTR [rax],al
  4583c4:	add    DWORD PTR [rax],0xcf919b5
  4583ca:	(bad)  
  4583cb:	add    al,dh
  4583cd:	xor    al,0x0
  4583cf:	add    BYTE PTR [rax],al
  4583d1:	add    BYTE PTR [rcx-0x6e63a00],al
  4583d7:	or     al,0x40
  4583d9:	add    BYTE PTR [rax],ch
  4583db:	xor    eax,0x0
  4583e0:	add    DWORD PTR [rax],0x12b19d3
  4583e6:	add    BYTE PTR [r11+0x35],cl
  4583ea:	add    BYTE PTR [rax],al
  4583ec:	add    BYTE PTR [rax],al
  4583ee:	add    DWORD PTR [rax],0x12b19e1
  4583f4:	add    BYTE PTR [r11+0x35],spl
  4583f8:	add    BYTE PTR [rax],al
  4583fa:	add    BYTE PTR [rax],al
  4583fc:	xchg   BYTE PTR [rax],al
  4583fe:	cmp    ebx,DWORD PTR [rdx]
  458400:	sub    eax,DWORD PTR [rcx]
  458402:	add    BYTE PTR [r11+0x35],dil
  458406:	add    BYTE PTR [rax],al
  458408:	add    BYTE PTR [rax],al
  45840a:	xchg   BYTE PTR [rax],al
  45840c:	sbb    r10b,r10b
  45840f:	(bad)  
  458410:	add    BYTE PTR [r13+rsi*1+0x0],cl
  458418:	xchg   esi,eax
  458419:	add    BYTE PTR [rax+0x1a],bl
  45841c:	xlat   BYTE PTR ds:[rbx]
  45841d:	(bad)  
  45841e:	rex.X add BYTE PTR [rdx+0x35],sil
  458425:	add    BYTE PTR [rsi+0x2b04cd18],al
  45842b:	add    DWORD PTR [rbx+0x0],eax
  45842e:	add    BYTE PTR [rax],al
  458430:	add    BYTE PTR [rax],al
  458432:	add    BYTE PTR [rax],0x96
  458435:	and    BYTE PTR [rbp+0x1a],al
  458438:	adc    cl,BYTE PTR [rdi]
  45843a:	rex.XB add BYTE PTR [r8],al
  45843d:	add    BYTE PTR [rax],al
  45843f:	add    BYTE PTR [rax+0x58209600],al
  458445:	sbb    dl,BYTE PTR [rdx]
  458447:	cmovbe eax,DWORD PTR [rax]
  45844a:	mov    edx,0x35
  45844f:	add    BYTE PTR [rsi+0x2b04cd18],al
  458455:	add    DWORD PTR [rcx+0x0],ecx
  458458:	add    BYTE PTR [rax],al
  45845a:	add    BYTE PTR [rax],al
  45845c:	add    eax,DWORD PTR [rax]
  45845e:	xchg   BYTE PTR [rax],bl
  458460:	int    0x4
  458462:	sbb    cl,BYTE PTR [rdi]
  458464:	rex.WB add BYTE PTR [r8],al
  458467:	add    BYTE PTR [rax],al
  458469:	add    BYTE PTR [rbx],al
  45846b:	add    dh,al
  45846d:	add    DWORD PTR [rcx+0x1b],esi
  458470:	and    BYTE PTR [rdi],cl
  458472:	rex.WXB add BYTE PTR [r8],al
  458475:	add    BYTE PTR [rax],al
  458477:	add    BYTE PTR [rbx],al
  458479:	add    dh,al
  45847b:	add    DWORD PTR [rbx+0x4f0f281b],edx
  458481:	add    BYTE PTR [rax],al
  458483:	add    BYTE PTR [rax],al
  458485:	add    BYTE PTR [rbx],al
  458487:	add    dh,al
  458489:	add    DWORD PTR [rdi+0x550f361b],ebx
  45848f:	add    dl,al
  458491:	xor    eax,0x0
  458496:	xchg   BYTE PTR [rax],cl
  458498:	mov    ebx,0x560e511b
  45849d:	add    al,dl
  45849f:	xor    eax,0x0
  4584a4:	xchg   BYTE PTR [rax],cl
  4584a6:	enter  0xf91b,0xc
  4584aa:	push   rsi
  4584ab:	add    BYTE PTR [rax],ah
  4584ad:	add    BYTE PTR ss:[rax],al
  4584b0:	add    BYTE PTR [rax],al
  4584b2:	or     DWORD PTR [rax],0xcf01bd5
  4584b8:	push   rdi
  4584b9:	add    BYTE PTR [rip+0x36],ch        # 0x4584f5
  4584bf:	add    BYTE PTR [rsi+0x2b04cd18],al
  4584c5:	add    DWORD PTR [rdi+0x0],edx
  4584c8:	push   rsp
  4584c9:	add    BYTE PTR ss:[rax],al
  4584cc:	add    BYTE PTR [rax],al
  4584ce:	xchg   BYTE PTR [rax],bl
  4584d0:	int    0x4
  4584d2:	stc    
  4584d3:	or     al,0x57
  4584d5:	add    BYTE PTR [rsi+rsi*1+0x0],dh
  4584dc:	mov    BYTE PTR [rax],0x71
  4584df:	adc    ebp,DWORD PTR [rbx]
  4584e1:	add    DWORD PTR [rax+0x0],ebx
  4584e4:	cmp    dh,BYTE PTR [rsi]
  4584e6:	add    BYTE PTR [rax],al
  4584e8:	add    BYTE PTR [rax],al
  4584ea:	add    DWORD PTR [rax],0x14a0328f
  4584f0:	pop    rax
  4584f1:	add    BYTE PTR [rax],bh
  4584f3:	(bad)  
  4584f4:	add    BYTE PTR [rax],al
  4584f6:	add    BYTE PTR [rax],al
  4584f8:	xchg   BYTE PTR [rax],cl
  4584fa:	xor    BYTE PTR [rcx+rdx*2],bl
  4584fd:	(bad)  
  4584fe:	pop    rdx
  4584ff:	add    BYTE PTR [rax+0x37],al
  458502:	add    BYTE PTR [rax],al
  458504:	add    BYTE PTR [rax],al
  458506:	xchg   BYTE PTR [rax],cl
  458508:	rex.X sbb al,0xf9
  45850b:	or     al,0x5a
  45850d:	add    BYTE PTR [rsi+0x37],ah
  458510:	add    BYTE PTR [rax],al
  458512:	add    BYTE PTR [rax],al
  458514:	xchg   BYTE PTR [rax],cl
  458516:	push   rsp
  458517:	sbb    al,0x51
  458519:	(bad)  
  45851a:	pop    rbx
  45851b:	add    BYTE PTR [rbx+0x37],dh
  45851e:	add    BYTE PTR [rax],al
  458520:	add    BYTE PTR [rax],al
  458522:	xchg   BYTE PTR [rax],cl
  458524:	movsxd ebx,DWORD PTR [rcx+rdi*8]
  458527:	or     al,0x5b
  458529:	add    BYTE PTR [rax+0x37],dl
  45852f:	add    BYTE PTR [rcx+0x2b1c7200],al
  458535:	add    DWORD PTR [rax+rax*1-0x68],ebx
  458539:	cmp    BYTE PTR [rax],al
  45853b:	add    BYTE PTR [rax],al
  45853d:	add    BYTE PTR [rcx-0xfe37cf8],al
  458543:	or     al,0x5c
  458545:	add    BYTE PTR [rsi+0x38],ah
  45854b:	add    BYTE PTR [rsi+0x2b04cd18],al
  458551:	add    DWORD PTR [rax+rax*1-0x52],ebx
  458555:	cmp    BYTE PTR [rax],al
  458557:	add    BYTE PTR [rax],al
  458559:	add    BYTE PTR [rsi-0x6fb32e8],al
  45855f:	or     al,0x5c
  458561:	add    al,al
  458563:	cmp    BYTE PTR [rax],al
  458565:	add    BYTE PTR [rax],al
  458567:	add    dh,al
  458569:	add    BYTE PTR [rcx+0x13],dh
  45856c:	sub    eax,DWORD PTR [rcx]
  45856e:	pop    rbp
  45856f:	add    BYTE PTR [rax],al
  458571:	add    BYTE PTR [rax],al
  458573:	add    BYTE PTR [rax],al
  458575:	add    dh,al
  458577:	or     eax,0xe511cba
  45857c:	pop    rbp
  45857d:	add    BYTE PTR [rax],al
  45857f:	add    BYTE PTR [rax],al
  458581:	add    BYTE PTR [rax],al
  458583:	add    dh,al
  458585:	or     eax,0xcf91cc3
  45858a:	pop    rbp
  45858b:	add    BYTE PTR [rax],al
  45858d:	add    BYTE PTR [rax],al
  45858f:	add    BYTE PTR [rax],al
  458591:	add    dh,al
  458593:	or     eax,0xf461cd4
  458598:	pop    rsi
  458599:	add    BYTE PTR [rcx+rdi*1+0x0],al
  45859d:	add    BYTE PTR [rax],al
  45859f:	add    BYTE PTR [rsi+0x2b04cd18],al
  4585a5:	add    DWORD PTR [rsi+0x0],ebx
  4585a8:	xchg   esp,eax
  4585a9:	cmp    DWORD PTR [rax],eax
  4585ab:	add    BYTE PTR [rax],al
  4585ad:	add    dh,ah
  4585af:	or     esp,edx
  4585b1:	sbb    al,0x46
  4585b3:	divps  xmm0,XMMWORD PTR [rax]
  4585b6:	xchg   edi,eax
  4585b7:	cmp    DWORD PTR [rax],eax
  4585b9:	add    BYTE PTR [rax],al
  4585bb:	add    BYTE PTR [rcx-0x79e31b00],al
  4585c1:	or     eax,0x399f005e
  4585c6:	add    BYTE PTR [rax],al
  4585c8:	add    BYTE PTR [rax],al
  4585ca:	add    DWORD PTR [rax],0xd861cf2
  4585d0:	(bad)  
  4585d1:	add    BYTE PTR [rax+0x39],ch
  4585d7:	add    BYTE PTR [rcx+0x2b1d0500],al
  4585dd:	add    DWORD PTR [rdx+0x0],esp
  4585e0:	add    BYTE PTR [rdx],bh
  4585e2:	add    BYTE PTR [rax],al
  4585e4:	add    BYTE PTR [rax],al
  4585e6:	add    DWORD PTR [rax],0xf5b1d2a
  4585ec:	(bad)  
  4585ed:	add    BYTE PTR [rdx+rdi*1],bl
  4585f0:	add    BYTE PTR [rax],al
  4585f2:	add    BYTE PTR [rax],al
  4585f4:	(bad)  
  4585f5:	add    BYTE PTR [rax],cl
  4585f7:	(bad)  
  4585f8:	hlt    
  4585f9:	or     al,0x64
  4585fb:	add    BYTE PTR [rdx+rdi*1],bh
  4585fe:	add    BYTE PTR [rax],al
  458600:	add    BYTE PTR [rax],al
  458602:	add    DWORD PTR [rax],0x12b1610
  458608:	add    BYTE PTR gs:[rbx+0x40],ah
  45860c:	add    BYTE PTR [rax],al
  45860e:	add    BYTE PTR [rax],al
  458610:	out    0x9,al
  458612:	mov    edx,0x650e511c
  458617:	add    BYTE PTR [rbx+0x40],ch
  45861a:	add    BYTE PTR [rax],al
  45861c:	add    BYTE PTR [rax],al
  45861e:	out    0x9,al
  458620:	ret    
  458621:	sbb    al,0xf9
  458623:	or     al,0x65
  458625:	add    BYTE PTR [rax+rax*2+0x0],dh
  458629:	add    BYTE PTR [rax],al
  45862b:	add    dh,al
  45862d:	or     esp,edx
  45862f:	sbb    al,0x46
  458631:	pcmpgtd mm0,QWORD PTR [rax]
  458634:	ja     0x458676
  458636:	add    BYTE PTR [rax],al
  458638:	add    BYTE PTR [rax],al
  45863a:	xchg   BYTE PTR [rax],bl
  45863c:	int    0x4
  45863e:	sub    eax,DWORD PTR [rcx]
  458640:	data16 add BYTE PTR [rbp+0x40],al
  458647:	add    BYTE PTR [rsi-0x6fb32e8],al
  45864d:	or     al,0x66
  45864f:	add    BYTE PTR [rdx+0x40],bl
  458655:	add    BYTE PTR [rsi-0x79fb32e8],al
  45865b:	packuswb mm0,QWORD PTR [rax]
  45865e:	scas   eax,DWORD PTR es:[rdi]
  45865f:	add    BYTE PTR [rax],al
  458662:	add    BYTE PTR [rax],al
  458664:	(bad)  
  458665:	add    BYTE PTR [rax],cl
  458667:	(bad)  
  458668:	hlt    
  458669:	or     al,0x68
  45866b:	add    dh,cl
  45866d:	add    BYTE PTR [rax],al
  458670:	add    BYTE PTR [rax],al
  458672:	add    DWORD PTR [rax],0x12b1610
  458678:	imul   eax,DWORD PTR [rax],0x40d0
  45867e:	add    BYTE PTR [rax],al
  458680:	xchg   esi,eax
  458681:	add    BYTE PTR [rsi+rbx*1-0x74],dl
  458685:	punpckhwd mm0,QWORD PTR [rax]
  458688:	in     al,0x40
  45868a:	add    BYTE PTR [rax],al
  45868c:	add    BYTE PTR [rax],al
  45868e:	xchg   BYTE PTR [rax],bl
  458690:	int    0x4
  458692:	sub    eax,DWORD PTR [rcx]
  458694:	push   0x0
  458696:	in     al,dx
  458697:	add    BYTE PTR [rax],al
  45869a:	and    BYTE PTR [rax],al
  45869c:	xchg   BYTE PTR [rax],cl
  45869e:	rcr    DWORD PTR [rsi],0xa9
  4586a1:	punpckhdq mm0,QWORD PTR [rax]
  4586a4:	add    eax,0x20000041
  4586a9:	add    BYTE PTR [rsi-0x56e126f8],al
  4586af:	packssdw mm0,QWORD PTR [rax]
  4586b2:	(bad)  
  4586b3:	add    BYTE PTR [r8],al
  4586b6:	add    BYTE PTR [rax],al
  4586b8:	xchg   BYTE PTR [rax],cl
  4586ba:	hlt    
  4586bb:	(bad)  
  4586bc:	mov    al,0xf
  4586be:	ins    BYTE PTR es:[rdi],dx
  4586bf:	add    BYTE PTR [rsi],ah
  4586c1:	add    BYTE PTR [r8],al
  4586c4:	add    BYTE PTR [rax],al
  4586c6:	xchg   BYTE PTR [rax],cl
  4586c8:	(bad)  
  4586c9:	(bad)  
  4586ca:	mov    ch,0xf
  4586cc:	ins    BYTE PTR es:[rdi],dx
  4586cd:	add    BYTE PTR [rbx+0x41],al
  4586d0:	add    BYTE PTR [rax],al
  4586d2:	add    BYTE PTR [rax],al
  4586d4:	xchg   BYTE PTR [rax],cl
  4586d6:	adc    BYTE PTR [rdi],bl
  4586d8:	mov    ecx,0x63006c0f
  4586dd:	add    BYTE PTR [r8],al
  4586e0:	add    BYTE PTR [rax],al
  4586e2:	xchg   BYTE PTR [rax],cl
  4586e4:	and    bl,BYTE PTR [rdi]
  4586e6:	mov    esi,0x6b006d0f
  4586eb:	add    BYTE PTR [r8],al
  4586ee:	add    BYTE PTR [rax],al
  4586f0:	xchg   BYTE PTR [rax],cl
  4586f2:	xor    ebx,DWORD PTR [rdi]
  4586f4:	jae    0x458703
  4586f6:	ins    DWORD PTR es:[rdi],dx
  4586f7:	add    BYTE PTR [rcx+rax*2+0x0],dl
  4586fe:	xchg   BYTE PTR [rax],bl
  458700:	int    0x4
  458702:	sub    eax,DWORD PTR [rcx]
  458704:	outs   dx,BYTE PTR ds:[rsi]
  458705:	add    BYTE PTR [rdx+rax*2+0x0],ch
  458709:	add    BYTE PTR [rax],al
  45870b:	add    ah,al
  45870d:	add    BYTE PTR [rbx+0x1f],dl
  458710:	ret    
  458711:	movd   mm0,DWORD PTR [rax]
  458714:	or     BYTE PTR [rbx+0x0],al
  458717:	add    BYTE PTR [rax],al
  458719:	add    BYTE PTR [rsi+0x2b1f5b00],al
  45871f:	add    DWORD PTR [rdi+0x0],ebp
  458722:	je     0x458767
  458724:	add    BYTE PTR [rax],al
  458726:	add    BYTE PTR [rax],al
  458728:	xchg   BYTE PTR [rax],al
  45872a:	push   0x1f
  45872c:	sub    eax,DWORD PTR [rcx]
  45872e:	outs   dx,DWORD PTR ds:[rsi]
  45872f:	add    bh,bl
  458731:	rex.XB add BYTE PTR [r8],al
  458734:	add    BYTE PTR [rax],al
  458736:	(bad)  
  45873a:	sub    eax,DWORD PTR [rcx]
  45873c:	outs   dx,DWORD PTR ds:[rsi]
  45873d:	add    dl,bh
  45873f:	rex.XB add BYTE PTR [r8],al
  458742:	add    BYTE PTR [rax],al
  458744:	(bad)  
  458745:	add    BYTE PTR [rbx+0x6f0dfb1f],dl
  45874b:	add    BYTE PTR [rcx],cl
  45874d:	add    BYTE PTR [rax],r8b
  458750:	add    BYTE PTR [rax],al
  458752:	add    DWORD PTR [rax],0x12b16e7
  458758:	jo     0x45875a
  45875a:	xor    BYTE PTR [rax+rax*1+0x0],al
  45875e:	add    BYTE PTR [rax],al
  458760:	add    DWORD PTR [rax],0xfca1faf
  458766:	jo     0x458768
  458768:	(bad)  
  458769:	add    BYTE PTR [r8],r8b
  45876c:	add    BYTE PTR [rax],al
  45876e:	add    DWORD PTR [rax],0xfd21fbf
  458774:	jno    0x458776
  458776:	retf   
  458777:	add    BYTE PTR [r8],r8b
  45877a:	add    BYTE PTR [rax],al
  45877c:	add    DWORD PTR [rax],0xfd91fcf
  458782:	jb     0x458784
  458784:	add    al,0x46
  458786:	add    BYTE PTR [rax],al
  458788:	add    BYTE PTR [rax],al
  45878a:	add    DWORD PTR [rax],0xd861fe8
  458790:	je     0x458792
  458792:	sub    DWORD PTR [rsi+0x0],eax
  458795:	add    BYTE PTR [rax],al
  458797:	add    BYTE PTR [rcx-0x35e00d00],al
  45879d:	pcmpeqd mm0,QWORD PTR [rax]
  4587a0:	rex.W
  4587a1:	rex.RX add BYTE PTR [rax],r8b
  4587a4:	add    BYTE PTR [rax],al
  4587a6:	add    DWORD PTR [rax],0xfe12004
  4587ac:	ja     0x4587ae
  4587ae:	xchg   ecx,eax
  4587af:	rex.RX add BYTE PTR [rax],r8b
  4587b2:	add    BYTE PTR [rax],al
  4587b4:	(bad)  
  4587b5:	add    BYTE PTR [rax],cl
  4587b7:	(bad)  
  4587b8:	hlt    
  4587b9:	or     al,0x79
  4587bb:	add    BYTE PTR [rax+0x46],dh
  4587c1:	add    BYTE PTR [rcx+0x2b161000],al
  4587c7:	add    DWORD PTR [rdx+0x0],edi
  4587ca:	or     BYTE PTR [rax+0x0],cl
  4587cd:	add    BYTE PTR [rax],al
  4587cf:	add    ah,al
  4587d1:	add    BYTE PTR [rsi+0x20],ch
  4587d4:	add    BYTE PTR [rax],dl
  4587d6:	jp     0x4587d8
  4587d8:	or     cl,BYTE PTR [rax+0x0]
  4587db:	add    BYTE PTR [rax],al
  4587dd:	add    BYTE PTR [rsi+0x2b04cd18],al
  4587e3:	add    DWORD PTR [rbx+0x0],edi
  4587e6:	adc    cl,BYTE PTR [rax+0x0]
  4587e9:	add    BYTE PTR [rax],al
  4587eb:	add    BYTE PTR [rbx+0x704cd18],al
  4587f1:	adc    BYTE PTR [rbx+0x0],bh
  4587f4:	xor    BYTE PTR [rax+0x0],cl
  4587f7:	add    BYTE PTR [rax],al
  4587f9:	add    ah,al
  4587fb:	add    BYTE PTR [rax+riz*1+0x7c012b],cl
  458802:	jns    0x45884c
  458804:	add    BYTE PTR [rax],al
  458806:	add    BYTE PTR [rax],al
  458808:	(bad)  
  458809:	add    BYTE PTR [rdi+0x7c0fe120],dl
  45880f:	add    BYTE PTR [rax+0x48],dl
  458815:	add    ah,al
  458817:	add    BYTE PTR [rdx+0x7e0fe120],ah
  45881d:	add    BYTE PTR [rdi+0x48],dl
  458823:	add    ah,al
  458825:	add    BYTE PTR [rdx-0x7ff046e0],ch
  45882b:	add    ah,al
  45882d:	rex.W add BYTE PTR [rax],al
  458830:	add    BYTE PTR [rax],al
  458832:	xchg   ecx,eax
  458833:	add    ah,dl
  458835:	and    BYTE PTR [rax+rdx*1-0x7f],dl
  458839:	add    BYTE PTR [rcx+rcx*2+0x0],dh
  45883d:	add    BYTE PTR [rax],al
  45883f:	add    BYTE PTR [rbx+0x2b04cd18],al
  458845:	add    DWORD PTR [rdx+0x497c00],eax
  45884b:	add    BYTE PTR [rax],al
  45884d:	add    BYTE PTR [rbx+0x5a20f508],dl
  458853:	adc    BYTE PTR [rdx+0x49bb00],al
  458859:	add    BYTE PTR [rax],al
  45885b:	add    BYTE PTR [rbx+0x2f04f408],dl
  458861:	add    DWORD PTR [rdx+0x49c200],eax
  458867:	add    BYTE PTR [rax],al
  458869:	add    BYTE PTR [rbx+0x34050008],dl
  45886f:	add    DWORD PTR [rdx+0x49cc00],eax
  458875:	add    BYTE PTR [rax],al
  458877:	add    BYTE PTR [rbx+0x5f210e08],dl
  45887d:	adc    BYTE PTR [rbx+0x49f400],al
  458883:	add    BYTE PTR [rax],al
  458885:	add    BYTE PTR [rbx+0x5f212508],dl
  45888b:	adc    BYTE PTR [rbx+0x4a1c00],al
  458891:	add    BYTE PTR [rax],al
  458893:	add    BYTE PTR [rbx+0x5f213a08],dl
  458899:	adc    BYTE PTR [rbx+0x4a4400],al
  45889f:	add    BYTE PTR [rax],al
  4588a1:	add    BYTE PTR [rbx+0x5f214308],dl
  4588a7:	adc    BYTE PTR [rbx+0x4a6c00],al
  4588ad:	add    BYTE PTR [rax],al
  4588af:	add    BYTE PTR [rbx+0x5f215608],dl
  4588b5:	adc    BYTE PTR [rbx+0x4a9400],al
  4588bb:	add    BYTE PTR [rax],al
  4588bd:	add    BYTE PTR [rbx+0x5f073808],dl
  4588c3:	adc    BYTE PTR [rbx+0x4abc00],al
  4588c9:	add    BYTE PTR [rax],al
  4588cb:	add    BYTE PTR [rbx+0x5f0abb08],dl
  4588d1:	adc    BYTE PTR [rbx+0x4ae400],al
  4588d7:	add    BYTE PTR [rax],al
  4588d9:	add    BYTE PTR [rbx+0x5f216408],dl
  4588df:	adc    BYTE PTR [rbx+0x4b0c00],al
  4588e5:	add    BYTE PTR [rax],al
  4588e7:	add    BYTE PTR [rbx+0x5f218008],dl
  4588ed:	adc    BYTE PTR [rbx+0x4b3400],al
  4588f3:	add    BYTE PTR [rax],al
  4588f5:	add    BYTE PTR [rbx+0x65219d08],dl
  4588fb:	adc    BYTE PTR [rbx+0x4b5c00],al
  458901:	add    BYTE PTR [rax],al
  458903:	add    BYTE PTR [rbx+0x5f21b108],dl
  458909:	adc    BYTE PTR [rbx+0x4b8400],al
  45890f:	add    BYTE PTR [rax],al
  458911:	add    BYTE PTR [rbx+0x6521c408],dl
  458917:	adc    BYTE PTR [rbx+0x4bac00],al
  45891d:	add    BYTE PTR [rax],al
  45891f:	add    BYTE PTR [rbx+0x5f21cd08],dl
  458925:	adc    BYTE PTR [rbx+0x4bd400],al
  45892b:	add    BYTE PTR [rax],al
  45892d:	add    BYTE PTR [rbx+0x5f21dd08],dl
  458933:	adc    BYTE PTR [rbx+0x4bfc00],al
  458939:	add    BYTE PTR [rax],al
  45893b:	add    BYTE PTR [rbx+0x5f220008],dl
  458941:	adc    BYTE PTR [rbx+0x4c2400],al
  458947:	add    BYTE PTR [rax],al
  458949:	add    BYTE PTR [rbx+0x5f221608],dl
  45894f:	adc    BYTE PTR [rbx+0x4c4c00],al
  458955:	add    BYTE PTR [rax],al
  458957:	add    BYTE PTR [rbx+0x5f223408],dl
  45895d:	adc    BYTE PTR [rbx+0x4c7400],al
  458963:	add    BYTE PTR [rax],al
  458965:	add    BYTE PTR [rbx+0x5f224908],dl
  45896b:	adc    BYTE PTR [rbx+0x4c9c00],al
  458971:	add    BYTE PTR [rax],al
  458973:	add    BYTE PTR [rbx+0x5f226108],dl
  458979:	adc    BYTE PTR [rbx+0x4cc400],al
  45897f:	add    BYTE PTR [rax],al
  458981:	add    BYTE PTR [rbx+0x5f227208],dl
  458987:	adc    BYTE PTR [rbx+0x4cec00],al
  45898d:	add    BYTE PTR [rax],al
  45898f:	add    BYTE PTR [rbx+0x5f227f08],dl
  458995:	adc    BYTE PTR [rbx+0x4d1400],al
  45899b:	add    BYTE PTR [rax],al
  45899d:	add    BYTE PTR [rbx+0x5f228908],dl
  4589a3:	adc    BYTE PTR [rbx+0x4d3c00],al
  4589a9:	add    BYTE PTR [rax],al
  4589ab:	add    BYTE PTR [rbx+0x5f075b08],dl
  4589b1:	adc    BYTE PTR [rbx+0x4d6400],al
  4589b7:	add    BYTE PTR [rax],al
  4589b9:	add    BYTE PTR [rbx+0x5f066b08],dl
  4589bf:	adc    BYTE PTR [rbx+0x4d8c00],al
  4589c5:	add    BYTE PTR [rax],al
  4589c7:	add    BYTE PTR [rbx+0x5f229b08],dl
  4589cd:	adc    BYTE PTR [rbx+0x4db400],al
  4589d3:	add    BYTE PTR [rax],al
  4589d5:	add    BYTE PTR [rbx+0x5f22b808],dl
  4589db:	adc    BYTE PTR [rbx+0x4ddc00],al
  4589e1:	add    BYTE PTR [rax],al
  4589e3:	add    BYTE PTR [rsi+0x511bbb08],al
  4589e9:	(bad)  
  4589ea:	add    DWORD PTR [rax],0xffffffec
  4589ed:	rex.WRB add BYTE PTR [r8],r8b
  4589f0:	add    BYTE PTR [rax],al
  4589f2:	xchg   BYTE PTR [rax],cl
  4589f4:	enter  0xf91b,0xc
  4589f8:	add    DWORD PTR [rax],0x48
  4589fb:	rex.WRX add BYTE PTR [rax],r8b
  4589fe:	add    BYTE PTR [rax],al
  458a00:	xchg   BYTE PTR [rax],cl
  458a02:	rex.R and al,0x51
  458a05:	(bad)  
  458a06:	test   BYTE PTR [rax],al
  458a08:	push   rax
  458a09:	rex.WRX add BYTE PTR [rax],r8b
  458a0c:	add    BYTE PTR [rax],al
  458a0e:	xchg   BYTE PTR [rax],cl
  458a10:	push   rdx
  458a11:	and    al,0xf9
  458a13:	or     al,0x84
  458a15:	add    BYTE PTR [rbx+0x4e],dh
  458a18:	add    BYTE PTR [rax],al
  458a1a:	add    BYTE PTR [rax],al
  458a1c:	xchg   BYTE PTR [rax],bl
  458a1e:	int    0x4
  458a20:	sub    eax,DWORD PTR [rcx]
  458a22:	test   DWORD PTR [rax],eax
  458a24:	mov    ecx,DWORD PTR [rsi+0x0]
  458a27:	add    BYTE PTR [rax],al
  458a29:	add    BYTE PTR [rsi-0x6fb32e8],al
  458a2f:	or     al,0x85
  458a31:	add    BYTE PTR [rbp+0x4e],dl
  458a37:	add    BYTE PTR [rsi-0x7efb32e8],al
  458a3d:	adc    BYTE PTR [rsi+0x4ebc00],al
  458a43:	add    BYTE PTR [rax],al
  458a45:	add    dh,al
  458a47:	add    BYTE PTR [rcx+0x13],dh
  458a4a:	sub    eax,DWORD PTR [rcx]
  458a4c:	mov    BYTE PTR [rax],al
  458a4e:	or     eax,0x4f
  458a53:	add    BYTE PTR [rcx+0x3114a518],dl
  458a59:	or     eax,0x4f190088
  458a5e:	add    BYTE PTR [rax],al
  458a60:	add    BYTE PTR [rax],al
  458a62:	xchg   BYTE PTR [rax],bl
  458a64:	int    0x4
  458a66:	sub    eax,DWORD PTR [rcx]
  458a68:	mov    BYTE PTR [rax],al
  458a6a:	rex.WRXB add BYTE PTR ss:[r8],r8b
  458a6e:	add    BYTE PTR [rax],al
  458a70:	out    0x1,al
  458a72:	or     BYTE PTR [rsi],dl
  458a74:	sub    eax,DWORD PTR [rcx]
  458a76:	mov    BYTE PTR [rax],al
  458a78:	pop    rax
  458a79:	rex.WRXB add BYTE PTR [r8],r8b
  458a7c:	add    BYTE PTR [rax],al
  458a7e:	(bad)  
  458a7f:	or     ah,dl
  458a81:	sbb    al,0x46
  458a83:	js     0x94ea89
  458a89:	add    BYTE PTR [rax],al
  458a8b:	add    BYTE PTR [rsi+0x2b04cd18],al
  458a91:	add    DWORD PTR [rax+0x4f6e00],ecx
  458a97:	add    BYTE PTR [rax],al
  458a99:	add    BYTE PTR [rsi-0x6fb32e8],al
  458a9f:	or     al,0x88
  458aa1:	add    BYTE PTR [rbp+0x4f],bh
  458aa4:	add    BYTE PTR [rax],al
  458aa6:	add    BYTE PTR [rax],al
  458aa8:	xchg   BYTE PTR [rax],bl
  458aaa:	int    0x4
  458aac:	xchg   BYTE PTR [rdi],cl
  458aae:	mov    DWORD PTR [rax],eax
  458ab0:	xchg   edx,eax
  458ab1:	rex.WRXB add BYTE PTR [r8],r8b
  458ab4:	add    BYTE PTR [rax],al
  458ab6:	xchg   BYTE PTR [rax],al
  458ab8:	jge    0x458ade
  458aba:	mov    WORD PTR [rax],ss
  458abc:	mov    al,BYTE PTR [rax]
  458abe:	ror    BYTE PTR [rdi+0x0],1
  458ac1:	add    BYTE PTR [rax],al
  458ac3:	add    BYTE PTR [rsi-0x68db8300],al
  458ac9:	adc    BYTE PTR [rsi+0x51c400],cl
  458acf:	add    BYTE PTR [rax],al
  458ad1:	add    BYTE PTR [rsi-0x6db7500],al
  458ad7:	or     al,0x92
  458ad9:	add    BYTE PTR [rbx+rdx*2],al
  458adc:	add    BYTE PTR [rax],al
  458ade:	add    BYTE PTR [rax],al
  458ae0:	(bad)  
  458ae1:	add    BYTE PTR [rax],cl
  458ae3:	(bad)  
  458ae4:	hlt    
  458ae5:	or     al,0x93
  458ae7:	add    BYTE PTR [rbx+rdx*2],ah
  458aea:	add    BYTE PTR [rax],al
  458aec:	add    BYTE PTR [rax],al
  458aee:	add    DWORD PTR [rax],0x12b1610
  458af4:	xchg   esp,eax
  458af5:	add    BYTE PTR [rax],ah
  458af7:	push   rsp
  458af8:	add    BYTE PTR [rax],al
  458afa:	add    BYTE PTR [rax],al
  458afc:	xchg   esi,eax
  458afd:	add    BYTE PTR [rcx-0x6beeeedc],bh
  458b03:	add    BYTE PTR [rsp+rdx*2+0x0],ch
  458b07:	add    BYTE PTR [rax],al
  458b09:	add    BYTE PTR [rsi+0x2b04cd18],al
  458b0f:	add    DWORD PTR [rax+rax*1+0x54fb],edx
  458b16:	add    BYTE PTR [rax],al
  458b18:	loope  0x458b1b
  458b1a:	(bad)  
  458b1b:	and    eax,0x94012b
  458b20:	and    al,0x55
  458b22:	add    BYTE PTR [rax],al
  458b24:	add    BYTE PTR [rax],al
  458b26:	add    DWORD PTR [rax],0x1130253a
  458b2c:	xchg   esp,eax
  458b2d:	add    BYTE PTR [rax],cl
  458b2f:	push   rsi
  458b30:	add    BYTE PTR [rax],al
  458b32:	add    BYTE PTR [rax],al
  458b34:	add    DWORD PTR [rax],0xfbe253f
  458b3a:	xchg   esp,eax
  458b3b:	add    BYTE PTR [rsi+rdx*2+0x0],bl
  458b42:	add    DWORD PTR [rax],0x113a2552
  458b48:	xchg   esp,eax
  458b49:	add    BYTE PTR [rsi+rdx*2+0x0],ch
  458b50:	add    DWORD PTR [rax],0x113a247d
  458b56:	xchg   ebp,eax
  458b57:	add    BYTE PTR [rax+0x57],dh
  458b5a:	add    BYTE PTR [rax],al
  458b5c:	add    BYTE PTR [rax],al
  458b5e:	add    DWORD PTR [rax],0x1141255c
  458b64:	xchg   esi,eax
  458b65:	add    BYTE PTR [rax],ah
  458b67:	pop    rax
  458b68:	add    BYTE PTR [rax],al
  458b6a:	add    BYTE PTR [rax],al
  458b6c:	add    DWORD PTR [rax],0xe512567
  458b72:	xchg   esi,eax
  458b73:	add    BYTE PTR [rbx+0x58],ch
  458b76:	add    BYTE PTR [rax],al
  458b78:	add    BYTE PTR [rax],al
  458b7a:	add    DWORD PTR [rax],0x11462583
  458b80:	xchg   esi,eax
  458b81:	add    BYTE PTR [rdi+0x58],dl
  458b87:	add    BYTE PTR [rcx+0x4c258b00],al
  458b8d:	adc    DWORD PTR [rsi+0x58bc00],edx
  458b93:	add    BYTE PTR [rax],al
  458b95:	add    BYTE PTR [rcx+0x51259800],al
  458b9b:	adc    DWORD PTR [rdi+0x58eb00],edx
  458ba1:	add    BYTE PTR [rax],al
  458ba3:	add    BYTE PTR [rcx+0x5725ab00],al
  458ba9:	adc    DWORD PTR [rax+0x545800],ebx
  458baf:	add    BYTE PTR [rax],al
  458bb1:	add    BYTE PTR [rcx-0x41cd7100],al
  458bb7:	sets   BYTE PTR [rax]
  458bba:	add    BYTE PTR [rax],al
  458bbc:	add    BYTE PTR [rax],al
  458bbe:	add    eax,DWORD PTR [rax]
  458bc0:	xchg   BYTE PTR [rax],bl
  458bc2:	int    0x4
  458bc4:	sbb    cl,BYTE PTR [rdi]
  458bc6:	cwde   
  458bc7:	add    BYTE PTR [rax],al
  458bc9:	add    BYTE PTR [rax],al
  458bcb:	add    BYTE PTR [rbx],al
  458bcd:	add    dh,al
  458bcf:	add    DWORD PTR [rcx+0x1b],esi
  458bd2:	mov    esi,0x9a0f
  458bd7:	add    BYTE PTR [rax],al
  458bd9:	add    BYTE PTR [rbx],al
  458bdb:	add    dh,al
  458bdd:	add    DWORD PTR [rbx-0x65eea2e5],edx
  458be3:	add    BYTE PTR [rax],al
  458be5:	add    BYTE PTR [rax],al
  458be7:	add    BYTE PTR [rbx],al
  458be9:	add    dh,al
  458beb:	add    DWORD PTR [rdi-0x63ee98e5],ebx
  458bf1:	add    BYTE PTR [rdi+rcx*2+0x0],ah
  458bf8:	xchg   BYTE PTR [rax],bl
  458bfa:	int    0x4
  458bfc:	sub    eax,DWORD PTR [rcx]
  458bfe:	popf   
  458bff:	add    BYTE PTR [rdi+rcx*2+0x0],ch
  458c06:	xchg   BYTE PTR [rax],al
  458c08:	pop    rax
  458c09:	cmp    DWORD PTR [rip+0x9d1a],ebp        # 0x462929
  458c0f:	add    BYTE PTR [rcx],al
  458c11:	add    bh,bh
  458c13:	(bad)  
  458c14:	add    BYTE PTR [rax],al
  458c16:	add    DWORD PTR [rax],eax
  458c18:	and    eax,0x100001c
  458c1d:	add    BYTE PTR [rip+0x100001c],ah        # 0x1458c3f
  458c23:	add    bh,bh
  458c25:	(bad)  
  458c26:	add    BYTE PTR [rax],al
  458c28:	add    DWORD PTR [rax],eax
  458c2a:	add    eax,0x1000028
  458c2f:	add    BYTE PTR [rip+0x2000028],al        # 0x2458c5d
  458c35:	add    BYTE PTR [rcx],cl
  458c37:	sub    BYTE PTR [rax],al
  458c39:	add    BYTE PTR [rcx],al
  458c3b:	add    bh,bh
  458c3d:	(bad)  
  458c3e:	add    BYTE PTR [rax],al
  458c40:	add    DWORD PTR [rax],eax
  458c42:	jmp    0x458c6c
  458c44:	add    BYTE PTR [rax],al
  458c46:	add    al,BYTE PTR [rax]
  458c48:	repnz sub BYTE PTR [rax],al
  458c4b:	add    BYTE PTR [rcx],al
  458c4d:	add    bl,ch
  458c4f:	sub    BYTE PTR [rax],al
  458c51:	add    BYTE PTR [rdx],al
  458c53:	add    dl,dh
  458c55:	sub    BYTE PTR [rax],al
  458c57:	add    BYTE PTR [rcx],al
  458c59:	add    bh,bh
  458c5b:	(bad)  
  458c5c:	add    BYTE PTR [rax],al
  458c5e:	add    DWORD PTR [rax],eax
  458c60:	jmp    QWORD PTR [rdi]
  458c62:	add    BYTE PTR [rax],al
  458c64:	add    DWORD PTR [rax],eax
  458c66:	jmp    QWORD PTR [rdi]
  458c68:	add    BYTE PTR [rax],al
  458c6a:	add    DWORD PTR [rax],eax
  458c6c:	jmp    QWORD PTR [rdi]
  458c6e:	add    BYTE PTR [rax],al
  458c70:	add    DWORD PTR [rax],eax
  458c72:	outs   dx,BYTE PTR ds:[rsi]
  458c73:	sub    DWORD PTR [rax],eax
  458c75:	add    BYTE PTR [rcx],al
  458c77:	add    BYTE PTR [rcx+rbp*1+0x10000],dl
  458c7e:	(bad)  [rcx]
  458c80:	add    BYTE PTR [rax],al
  458c82:	add    al,BYTE PTR [rax]
  458c84:	jmp    0x458c99
  458c86:	add    BYTE PTR [rax],al
  458c88:	add    eax,DWORD PTR [rax]
  458c8a:	cmc    
  458c8b:	adc    eax,DWORD PTR [rax]
  458c8d:	add    BYTE PTR [rcx],al
  458c8f:	add    BYTE PTR [rax],cl
  458c91:	sub    al,BYTE PTR [rax]
  458c93:	add    BYTE PTR [rcx],al
  458c95:	add    BYTE PTR [rax],cl
  458c97:	sub    al,BYTE PTR [rax]
  458c99:	add    BYTE PTR [rdx],al
  458c9b:	add    BYTE PTR [rax],dl
  458c9d:	sub    al,BYTE PTR [rax]
  458c9f:	add    BYTE PTR [rcx],al
  458ca1:	add    BYTE PTR [rax],cl
  458ca3:	sub    al,BYTE PTR [rax]
  458ca5:	add    BYTE PTR [rdx],al
  458ca7:	add    BYTE PTR [rdi],dl
  458ca9:	sub    al,BYTE PTR [rax]
  458cab:	add    BYTE PTR [rbx],al
  458cad:	add    BYTE PTR [rax],dl
  458caf:	sub    al,BYTE PTR [rax]
  458cb1:	add    BYTE PTR [rcx],al
  458cb3:	add    BYTE PTR [rsi+0x17],ch
  458cb6:	add    BYTE PTR [rax],al
  458cb8:	add    DWORD PTR [rax],eax
  458cba:	jmp    0x458ce4
  458cbc:	add    BYTE PTR [rax],al
  458cbe:	add    al,BYTE PTR [rax]
  458cc0:	repnz sub BYTE PTR [rax],al
  458cc3:	add    BYTE PTR [rcx],al
  458cc5:	add    BYTE PTR [rsi],ch
  458cc7:	sub    eax,DWORD PTR [rax]
  458cc9:	add    BYTE PTR [rcx],al
  458ccb:	add    BYTE PTR [rsi+0x100002b],bl
  458cd1:	add    dl,dh
  458cd3:	sub    BYTE PTR [rax],al
  458cd5:	add    BYTE PTR [rcx],al
  458cd7:	add    bl,ch
  458cd9:	sub    BYTE PTR [rax],al
  458cdb:	add    BYTE PTR [rdx],al
  458cdd:	add    dl,dh
  458cdf:	sub    BYTE PTR [rax],al
  458ce1:	add    BYTE PTR [rcx],al
  458ce3:	add    ah,ah
  458ce5:	sub    al,0x0
  458ce7:	add    BYTE PTR [rcx],al
  458ce9:	add    dl,dh
  458ceb:	sub    BYTE PTR [rax],al
  458ced:	add    BYTE PTR [rcx],al
  458cef:	add    dl,dh
  458cf1:	sub    BYTE PTR [rax],al
  458cf3:	add    BYTE PTR [rcx],al
  458cf5:	add    dl,dh
  458cf7:	sub    BYTE PTR [rax],al
  458cf9:	add    BYTE PTR [rcx],al
  458cfb:	add    bl,ch
  458cfd:	sub    BYTE PTR [rax],al
  458cff:	add    BYTE PTR [rdx],al
  458d01:	add    dl,dh
  458d03:	sub    BYTE PTR [rax],al
  458d05:	add    BYTE PTR [rcx],al
  458d07:	add    bl,ch
  458d09:	sub    BYTE PTR [rax],al
  458d0b:	add    BYTE PTR [rdx],al
  458d0d:	add    dl,dh
  458d0f:	sub    BYTE PTR [rax],al
  458d11:	add    BYTE PTR [rcx],al
  458d13:	add    ah,ah
  458d15:	sub    al,0x0
  458d17:	add    BYTE PTR [rcx],al
  458d19:	add    bh,bh
  458d1b:	(bad)  
  458d1c:	add    BYTE PTR [rax],al
  458d1e:	add    DWORD PTR [rax],eax
  458d20:	jmp    QWORD PTR [rdi]
  458d22:	add    BYTE PTR [rax],al
  458d24:	add    DWORD PTR [rax],eax
  458d26:	jmp    QWORD PTR [rdi]
  458d28:	add    BYTE PTR [rax],al
  458d2a:	add    DWORD PTR [rax],eax
  458d2c:	jmp    QWORD PTR [rdi]
  458d2e:	add    BYTE PTR [rax],al
  458d30:	add    DWORD PTR [rax],eax
  458d32:	outs   dx,BYTE PTR ds:[rsi]
  458d33:	(bad)  
  458d34:	add    BYTE PTR [rax],al
  458d36:	add    DWORD PTR [rax],eax
  458d38:	outs   dx,BYTE PTR ds:[rsi]
  458d39:	(bad)  
  458d3a:	add    BYTE PTR [rax],al
  458d3c:	add    al,BYTE PTR [rax]
  458d3e:	mov    DWORD PTR [rdi],edx
  458d40:	add    BYTE PTR [rax],al
  458d42:	add    eax,DWORD PTR [rax]
  458d44:	xchg   esi,eax
  458d45:	(bad)  
  458d46:	add    BYTE PTR [rax],al
  458d48:	add    DWORD PTR [rax],eax
  458d4a:	jmp    0x458d74
  458d4c:	add    BYTE PTR [rax],al
  458d4e:	add    al,BYTE PTR [rax]
  458d50:	repnz sub BYTE PTR [rax],al
  458d53:	add    BYTE PTR [rcx],al
  458d55:	add    BYTE PTR [rsi+0x17],ch
  458d58:	add    BYTE PTR [rax],al
  458d5a:	add    DWORD PTR [rax],eax
  458d5c:	xor    BYTE PTR [r8],r8b
  458d5f:	add    BYTE PTR [rcx],al
  458d61:	add    BYTE PTR [rsi+0x17],ch
  458d64:	add    BYTE PTR [rax],al
  458d66:	add    DWORD PTR [rax],eax
  458d68:	outs   dx,BYTE PTR ds:[rsi]
  458d69:	(bad)  
  458d6a:	add    BYTE PTR [rax],al
  458d6c:	add    al,BYTE PTR [rax]
  458d6e:	mov    DWORD PTR [rdi],edx
  458d70:	add    BYTE PTR [rax],al
  458d72:	add    eax,DWORD PTR [rax]
  458d74:	xchg   esi,eax
  458d75:	(bad)  
  458d76:	add    BYTE PTR [rax],al
  458d78:	add    DWORD PTR [rax],eax
  458d7a:	jmp    0x458dac
  458d7c:	add    BYTE PTR [rax],al
  458d7e:	add    DWORD PTR [rax],eax
  458d80:	jmp    0x458db2
  458d82:	add    BYTE PTR [rax],al
  458d84:	add    DWORD PTR [rax],eax
  458d86:	jmp    0x458db8
  458d88:	add    BYTE PTR [rax],al
  458d8a:	add    DWORD PTR [rax],eax
  458d8c:	jmp    0x458dbe
  458d8e:	add    BYTE PTR [rax],al
  458d90:	add    DWORD PTR [rax],eax
  458d92:	loope  0x458dc5
  458d94:	add    BYTE PTR [rax],al
  458d96:	add    DWORD PTR [rax],eax
  458d98:	loope  0x458dcb
  458d9a:	add    BYTE PTR [rax],ah
  458d9c:	add    BYTE PTR [rax],al
  458d9e:	add    BYTE PTR [rax],al
  458da0:	add    DWORD PTR [rax],eax
  458da2:	add    DWORD PTR [rax],eax
  458da4:	cmp    dh,BYTE PTR [rdx]
  458da6:	add    DWORD PTR [rax],eax
  458da8:	add    al,BYTE PTR [rax]
  458daa:	rex.WXB xor al,BYTE PTR [r8]
  458dad:	and    BYTE PTR [rax],al
  458daf:	add    BYTE PTR [rax],al
  458db1:	add    BYTE PTR [rcx],al
  458db3:	add    BYTE PTR [rcx],al
  458db5:	add    BYTE PTR [rdx],bh
  458db7:	xor    al,BYTE PTR [rax]
  458db9:	add    BYTE PTR [rdx],al
  458dbb:	add    BYTE PTR [rbx+0x32],cl
  458dbe:	add    BYTE PTR [rax],al
  458dc0:	add    DWORD PTR [rax],eax
  458dc2:	push   rbx
  458dc3:	xor    al,BYTE PTR [rax]
  458dc5:	add    BYTE PTR [rdx],al
  458dc7:	add    BYTE PTR [rdx+0x32],bl
  458dca:	add    BYTE PTR [rax],al
  458dcc:	add    DWORD PTR [rax],eax
  458dce:	loope  0x458e01
  458dd0:	add    BYTE PTR [rax],al
  458dd2:	add    al,BYTE PTR [rax]
  458dd4:	(bad)  
  458dd5:	xor    al,BYTE PTR [rax]
  458dd7:	add    BYTE PTR [rbx],al
  458dd9:	add    BYTE PTR [rbp+0x32],ah
  458ddc:	add    BYTE PTR [rax],al
  458dde:	add    al,0x0
  458de0:	ins    BYTE PTR es:[rdi],dx
  458de1:	xor    al,BYTE PTR [rax]
  458de3:	add    BYTE PTR [rcx],al
  458de5:	add    cl,ah
  458de7:	xor    DWORD PTR [rax],eax
  458de9:	add    BYTE PTR [rdx],al
  458deb:	add    BYTE PTR [rcx+0x32],ah
  458dee:	add    BYTE PTR [rax],al
  458df0:	add    eax,DWORD PTR [rax]
  458df2:	xor    al,BYTE PTR gs:[rax]
  458df5:	add    BYTE PTR [rax+rax*1],al
  458df8:	ins    BYTE PTR es:[rdi],dx
  458df9:	xor    al,BYTE PTR [rax]
  458dfb:	add    BYTE PTR [rip+0x327300],al        # 0x780101
  458e01:	add    BYTE PTR [rsi],al
  458e03:	add    BYTE PTR [rbx+0x32],dl
  458e06:	add    BYTE PTR [rax],al
  458e08:	add    DWORD PTR [rax],eax
  458e0a:	jl     0x458e3e
  458e0c:	add    BYTE PTR [rax],al
  458e0e:	add    DWORD PTR [rax],eax
  458e10:	jmp    QWORD PTR [rdi]
  458e12:	add    BYTE PTR [rax],al
  458e14:	add    DWORD PTR [rax],eax
  458e16:	jmp    0x458e48
  458e18:	add    BYTE PTR [rax],al
  458e1a:	add    DWORD PTR [rax],eax
  458e1c:	jmp    0x458e46
  458e1e:	add    BYTE PTR [rax],al
  458e20:	add    al,BYTE PTR [rax]
  458e22:	repnz sub BYTE PTR [rax],al
  458e25:	add    BYTE PTR [rcx],al
  458e27:	add    bh,bh
  458e29:	(bad)  
  458e2a:	add    BYTE PTR [rax],al
  458e2c:	add    DWORD PTR [rax],eax
  458e2e:	jmp    QWORD PTR [rdi]
  458e30:	add    BYTE PTR [rax],al
  458e32:	add    DWORD PTR [rax],eax
  458e34:	jmp    0x458e66
  458e36:	add    BYTE PTR [rax],al
  458e38:	add    DWORD PTR [rax],eax
  458e3a:	jmp    QWORD PTR [rdi]
  458e3c:	add    BYTE PTR [rax],al
  458e3e:	add    DWORD PTR [rax],eax
  458e40:	jmp    0x458e6a
  458e42:	add    BYTE PTR [rax],al
  458e44:	add    al,BYTE PTR [rax]
  458e46:	repnz sub BYTE PTR [rax],al
  458e49:	add    BYTE PTR [rcx],al
  458e4b:	add    bl,ch
  458e4d:	sub    BYTE PTR [rax],al
  458e4f:	add    BYTE PTR [rdx],al
  458e51:	add    dl,dh
  458e53:	sub    BYTE PTR [rax],al
  458e55:	add    BYTE PTR [rcx],al
  458e57:	add    BYTE PTR [rdi+0x1e],cl
  458e5a:	add    BYTE PTR [rax],al
  458e5c:	add    al,BYTE PTR [rax]
  458e5e:	push   rsi
  458e5f:	xor    eax,DWORD PTR [rax]
  458e61:	add    BYTE PTR [rcx],al
  458e63:	add    ah,ah
  458e65:	sub    al,0x0
  458e67:	add    BYTE PTR [rcx],al
  458e69:	add    bh,bh
  458e6b:	(bad)  
  458e6c:	add    BYTE PTR [rax],al
  458e6e:	add    DWORD PTR [rax],eax
  458e70:	rex.WRXB (bad) 
  458e72:	add    BYTE PTR [rax],al
  458e74:	add    DWORD PTR [rax],eax
  458e76:	repz xor al,0x0
  458e79:	add    BYTE PTR [rcx],al
  458e7b:	add    ah,ah
  458e7d:	sub    al,0x0
  458e7f:	add    BYTE PTR [rcx],al
  458e81:	add    BYTE PTR [rsi],ch
  458e83:	sub    eax,DWORD PTR [rax]
  458e85:	add    BYTE PTR [rcx],al
  458e87:	add    bh,bh
  458e89:	(bad)  
  458e8a:	add    BYTE PTR [rax],al
  458e8c:	add    DWORD PTR [rax],eax
  458e8e:	jmp    QWORD PTR [rdi]
  458e90:	add    BYTE PTR [rax],al
  458e92:	add    DWORD PTR [rax],eax
  458e94:	jmp    QWORD PTR [rdi]
  458e96:	add    BYTE PTR [rax],al
  458e98:	add    DWORD PTR [rax],eax
  458e9a:	jmp    QWORD PTR [rdi]
  458e9c:	add    BYTE PTR [rax],al
  458e9e:	add    DWORD PTR [rax],eax
  458ea0:	repnz sub BYTE PTR [rax],al
  458ea3:	add    BYTE PTR [rcx],al
  458ea5:	add    dl,dh
  458ea7:	sub    BYTE PTR [rax],al
  458ea9:	add    BYTE PTR [rcx],al
  458eab:	add    BYTE PTR [rsi],ch
  458ead:	sub    eax,DWORD PTR [rax]
  458eaf:	add    BYTE PTR [rcx],al
  458eb1:	add    bl,bl
  458eb3:	add    BYTE PTR ss:[rax],al
  458eb6:	add    DWORD PTR [rax],eax
  458eb8:	loopne 0x458ef0
  458eba:	add    BYTE PTR [rax],al
  458ebc:	add    al,BYTE PTR [rax]
  458ebe:	call   0x1458ef9
  458ec3:	add    bl,ch
  458ec5:	sub    BYTE PTR [rax],al
  458ec7:	add    BYTE PTR [rdx],al
  458ec9:	add    dl,dh
  458ecb:	sub    BYTE PTR [rax],al
  458ecd:	add    BYTE PTR [rcx],al
  458ecf:	add    BYTE PTR [rsi],ch
  458ed1:	sub    eax,DWORD PTR [rax]
  458ed3:	add    BYTE PTR [rcx],al
  458ed5:	add    BYTE PTR [rdx],bl
  458ed7:	(bad)  
  458ed8:	add    BYTE PTR [rax],al
  458eda:	add    al,BYTE PTR [rax]
  458edc:	sub    eax,DWORD PTR cs:[rax]
  458edf:	add    BYTE PTR [rcx],al
  458ee1:	add    ah,ah
  458ee3:	sub    al,0x0
  458ee5:	add    BYTE PTR [rcx],al
  458ee7:	add    dl,dh
  458ee9:	sub    BYTE PTR [rax],al
  458eeb:	add    BYTE PTR [rcx],al
  458eed:	add    BYTE PTR [rsi+0x1000020],al
  458ef3:	add    BYTE PTR [rdx],bl
  458ef5:	(bad)  
  458ef6:	add    BYTE PTR [rax],al
  458ef8:	add    al,BYTE PTR [rax]
  458efa:	loop   0x458f33
  458efc:	add    BYTE PTR [rax],al
  458efe:	add    DWORD PTR [rax],eax
  458f00:	sbb    dh,BYTE PTR [rdi]
  458f02:	add    BYTE PTR [rax],al
  458f04:	add    al,BYTE PTR [rax]
  458f06:	loop   0x458f3f
  458f08:	add    BYTE PTR [rax],al
  458f0a:	add    DWORD PTR [rax],eax
  458f0c:	sbb    dh,BYTE PTR [rdi]
  458f0e:	add    BYTE PTR [rax],al
  458f10:	add    DWORD PTR [rax],eax
  458f12:	adc    BYTE PTR [rax],bh
  458f14:	add    BYTE PTR [rax],al
  458f16:	add    DWORD PTR [rax],eax
  458f18:	jmp    QWORD PTR [rdi]
  458f1a:	add    BYTE PTR [rax],al
  458f1c:	add    DWORD PTR [rax],eax
  458f1e:	jmp    QWORD PTR [rdi]
  458f20:	add    BYTE PTR [rax],al
  458f22:	add    DWORD PTR [rax],eax
  458f24:	jmp    QWORD PTR [rdi]
  458f26:	add    BYTE PTR [rax],al
  458f28:	add    DWORD PTR [rax],eax
  458f2a:	jmp    0x458f5c
  458f2c:	add    BYTE PTR [rax],al
  458f2e:	add    DWORD PTR [rax],eax
  458f30:	jmp    0x458f62
  458f32:	add    BYTE PTR [rax],al
  458f34:	add    al,BYTE PTR [rax]
  458f36:	cmp    ah,BYTE PTR [rax+rax*1]
  458f39:	add    BYTE PTR [rcx],al
  458f3b:	add    BYTE PTR [rdi+0x1e],cl
  458f3e:	add    BYTE PTR [rax],al
  458f40:	add    DWORD PTR [rax],eax
  458f42:	repz xor al,0x0
  458f45:	add    BYTE PTR [rcx],al
  458f47:	add    BYTE PTR [rax],cl
  458f49:	cmp    DWORD PTR [rax],eax
  458f4b:	add    BYTE PTR [rdx],al
  458f4d:	add    BYTE PTR [rip+0x3000039],cl        # 0x3458f8c
  458f53:	add    BYTE PTR [rdx],dl
  458f55:	cmp    DWORD PTR [rax],eax
  458f57:	add    BYTE PTR [rax+rax*1],al
  458f5a:	xchg   esp,eax
  458f5b:	sub    DWORD PTR [rax],eax
  458f5d:	add    BYTE PTR [rcx],al
  458f5f:	add    BYTE PTR [rsi+0x39],bh
  458f62:	add    BYTE PTR [rax],al
  458f64:	add    al,BYTE PTR [rax]
  458f66:	or     eax,0x3000039
  458f6b:	add    BYTE PTR [rdx],dl
  458f6d:	cmp    DWORD PTR [rax],eax
  458f6f:	add    BYTE PTR [rax+rax*1],al
  458f72:	xchg   esp,eax
  458f73:	sub    DWORD PTR [rax],eax
  458f75:	add    BYTE PTR [rcx],al
  458f77:	add    BYTE PTR [rdi+0x1e],cl
  458f7a:	add    BYTE PTR [rax],al
  458f7c:	add    DWORD PTR [rax],eax
  458f7e:	in     al,0x2c
  458f80:	add    BYTE PTR [rax],al
  458f82:	add    DWORD PTR [rax],eax
  458f84:	sub    eax,DWORD PTR cs:[rax]
  458f87:	add    BYTE PTR [rcx],al
  458f89:	add    BYTE PTR [rsi],ch
  458f8b:	sub    eax,DWORD PTR [rax]
  458f8d:	add    BYTE PTR [rcx],al
  458f8f:	add    BYTE PTR [rip+0x100003c],bh        # 0x1458fd1
  458f95:	add    BYTE PTR [rip+0x100003c],bh        # 0x1458fd7
  458f9b:	add    BYTE PTR [rbx+0x32],dl
  458f9e:	add    BYTE PTR [rax],al
  458fa0:	add    al,BYTE PTR [rax]
  458fa2:	pop    rdx
  458fa3:	xor    al,BYTE PTR [rax]
  458fa5:	add    BYTE PTR [rcx],al
  458fa7:	add    BYTE PTR [rbx+0x32],dh
  458faa:	add    BYTE PTR [rax],al
  458fac:	add    al,BYTE PTR [rax]
  458fae:	push   rbx
  458faf:	xor    al,BYTE PTR [rax]
  458fb1:	add    BYTE PTR [rcx],al
  458fb3:	add    BYTE PTR [rdx+rsi*1+0x0],bh
  458fb7:	add    BYTE PTR [rcx],al
  458fb9:	add    bl,ch
  458fbb:	sub    BYTE PTR [rax],al
  458fbd:	add    BYTE PTR [rdx],al
  458fbf:	add    dl,dh
  458fc1:	sub    BYTE PTR [rsi],al
  458fc3:	add    BYTE PTR [rip+0x5c001800],cl        # 0x5c45a7c9
  458fc9:	add    BYTE PTR [rcx],bl
  458fcb:	add    BYTE PTR [rax+rax*1+0x21],bl
  458fcf:	add    BYTE PTR [rip+0x35002300],dh        # 0x3545b2d5
  458fd5:	add    BYTE PTR [rcx+0x0],ch
  458fd8:	or     BYTE PTR [rsi],dl
  458fda:	sub    eax,DWORD PTR [rcx]
  458fdc:	stc    
  458fdd:	add    ebp,ecx
  458fdf:	add    al,0xf9
  458fe1:	or     al,0x1
  458fe3:	add    cl,ch
  458fe5:	add    al,0xf4
  458fe7:	or     al,0x9
  458fe9:	add    cl,ch
  458feb:	add    al,0xf9
  458fed:	or     al,0x11
  458fef:	add    cl,ch
  458ff1:	add    al,0xf9
  458ff3:	or     al,0x19
  458ff5:	add    cl,ch
  458ff7:	add    al,0xf9
  458ff9:	or     al,0x21
  458ffb:	add    cl,ch
  458ffd:	add    al,0xf9
  458fff:	or     al,0x29
  459001:	add    cl,ch
  459003:	add    al,0xf9
  459005:	or     al,0x31
  459007:	add    cl,ch
  459009:	add    al,0xf9
  45900b:	or     al,0x39
  45900d:	add    cl,ch
  45900f:	add    al,0xf9
  459011:	or     al,0x41
  459013:	add    cl,ch
  459015:	add    al,0xf9
  459017:	or     al,0x49
  459019:	add    cl,ch
  45901b:	add    al,0xf9
  45901d:	or     al,0x51
  45901f:	add    cl,ch
  459021:	add    al,0xf9
  459023:	or     al,0x59
  459025:	add    cl,ch
  459027:	add    al,0xf9
  459029:	or     al,0x61
  45902b:	add    cl,ch
  45902d:	add    al,0x6f
  45902f:	adc    DWORD PTR [rcx+0x2],esi
  459032:	int    0x4
  459034:	mov    ecx,0xcd02790f
  459039:	add    al,0x2b
  45903b:	add    DWORD PTR [rcx+0x2b04cd02],eax
  459041:	add    DWORD PTR [rcx],ecx
  459043:	add    ch,cl
  459045:	add    al,0x2b
  459047:	add    DWORD PTR [rcx+0x0],edi
  45904a:	movlps xmm3,QWORD PTR [rax]
  45904d:	adc    dh,BYTE PTR [rcx+0x0]
  459050:	(bad)  
  459051:	sub    BYTE PTR [rdi],ch
  459053:	add    DWORD PTR [rcx+0x1f283802],ecx
  459059:	adc    bl,BYTE PTR [rcx+0x2e285602]
  45905f:	adc    bl,BYTE PTR [rcx+0x51286802]
  459065:	(bad)  
  459066:	cdq    
  459067:	add    bh,BYTE PTR [rax+rbp*1+0x37]
  45906b:	adc    ch,BYTE PTR [rcx+0x3d289002]
  459071:	adc    bh,BYTE PTR [rcx+0x0]
  459074:	int    0x4
  459076:	rex.XB adc dil,BYTE PTR [r9-0x7efb32fe]
  45907d:	adc    cl,al
  45907f:	add    bl,cl
  459081:	sub    BYTE PTR [rdx+rdx*1+0x28e202c1],ah
  459088:	test   eax,0xcd001112
  45908d:	add    al,0x2b
  45908f:	add    ecx,eax
  459091:	add    dh,ah
  459093:	sub    BYTE PTR [rdi-0x32fd36ee],ch
  459099:	add    al,0x2b
  45909b:	add    ecx,edx
  45909d:	add    cl,ch
  45909f:	add    al,0x2b
  4590a1:	add    ecx,ebx
  4590a3:	add    cl,ch
  4590a5:	add    al,0xf9
  4590a7:	or     al,0xe1
  4590a9:	add    bl,BYTE PTR [rdi+0x29]
  4590ac:	xchg   esp,eax
  4590ad:	adc    al,0xe1
  4590af:	add    ah,BYTE PTR [rdi+0x29]
  4590b2:	xchg   esp,eax
  4590b3:	adc    al,0xe9
  4590b5:	add    cl,ch
  4590b7:	add    al,0xf9
  4590b9:	or     al,0x91
  4590bb:	add    BYTE PTR [rcx+0x1b],dh
  4590be:	movabs al,ds:0x210f1a04cd009914
  4590c7:	add    BYTE PTR [rcx+rbp*1+0xa114a8],bl
  4590ce:	int    0x4
  4590d0:	sub    eax,DWORD PTR [rcx]
  4590d2:	test   eax,0x2b04cd00
  4590d7:	add    DWORD PTR [rcx-0x6d65700],ebp
  4590dd:	or     al,0x14
  4590df:	add    ch,cl
  4590e1:	add    al,0x1a
  4590e3:	pop    gs
  4590e5:	add    al,cl
  4590e7:	sub    DWORD PTR [rbp-0x32ffdeec],esi
  4590ed:	add    al,0x2b
  4590ef:	add    DWORD PTR [rcx-0x6d61900],esp
  4590f5:	or     al,0x21
  4590f7:	add    bh,ch
  4590f9:	sub    eax,eax
  4590fb:	adc    al,0xb1
  4590fd:	add    ah,bh
  4590ff:	sub    DWORD PTR [rcx*1+0x2a4602f9],ebp
  459106:	(bad)  
  459107:	adc    al,0x11
  459109:	add    ebx,DWORD PTR [rax+0x2a]
  45910c:	(bad)  
  45910d:	adc    al,0xa9
  45910f:	add    BYTE PTR [rbx+0x2a],ah
  459112:	push   rcx
  459113:	(bad)  
  459114:	movabs eax,ds:0x8502890cf02a7400
  45911d:	sub    dl,BYTE PTR [rcx]
  45911f:	add    BYTE PTR [rcx-0x25d563fe],cl
  459125:	adc    al,0x21
  459127:	add    ebp,DWORD PTR [rbp-0x66f1aed6]
  45912d:	add    BYTE PTR [rcx+0x1b],dh
  459130:	sub    eax,DWORD PTR [rcx]
  459132:	mov    cl,0x2
  459134:	int3   
  459135:	sub    ch,ch
  459137:	adc    al,0xb1
  459139:	add    ah,cl
  45913b:	sub    dl,BYTE PTR [rcx+0xe]
  45913e:	xor    DWORD PTR [rbx],eax
  459140:	int    0x4
  459142:	stc    
  459143:	or     al,0x31
  459145:	add    esi,edx
  459147:	sub    dl,BYTE PTR [rcx+0xe]
  45914a:	cmp    DWORD PTR [rbx],eax
  45914c:	add    eax,0xc9013a2b
  459151:	add    BYTE PTR [rsi],dl
  459153:	sub    edx,DWORD PTR [rcx+0xe]
  459156:	mov    DWORD PTR [rax],eax
  459158:	and    ebp,DWORD PTR [rbx]
  45915a:	hlt    
  45915b:	or     al,0x29
  45915d:	add    ch,cl
  45915f:	add    al,0x2b
  459161:	add    DWORD PTR [rcx+0x3],eax
  459164:	int    0x4
  459166:	stc    
  459167:	or     al,0xc
  459169:	add    BYTE PTR [rcx+0x2b],cl
  45916c:	repz adc al,0xc
  45916f:	add    BYTE PTR [rbp+0x2b],cl
  459172:	mov    ch,0xf
  459174:	add    rcx,r13
  459177:	add    al,0xf9
  459179:	adc    al,0x39
  45917b:	add    DWORD PTR [rax+0x390d792b],esp
  459181:	add    DWORD PTR [rcx-0x26f286eb],ebx
  459187:	add    BYTE PTR [rbx+rbp*1+0xd91619],dh
  45918e:	shr    BYTE PTR [rbx],0x19
  459191:	(bad)  
  459192:	cmp    DWORD PTR [rcx],eax
  459194:	int3   
  459195:	sub    esi,eax
  459197:	or     al,0x39
  459199:	add    esi,ebx
  45919b:	sub    esi,eax
  45919d:	or     al,0x39
  45919f:	add    edx,ecx
  4591a1:	adc    eax,0x1390d80
  4591a6:	imul   BYTE PTR [rbx]
  4591a8:	(bad)  
  4591a9:	(bad)  
  4591aa:	(bad)  
  4591ab:	add    eax,DWORD PTR [rbx]
  4591ad:	sub    al,0x2b
  4591af:	add    DWORD PTR [rcx],edi
  4591b1:	add    DWORD PTR [rcx],ecx
  4591b3:	sub    al,0x2b
  4591b5:	add    DWORD PTR [rcx],edi
  4591b7:	add    DWORD PTR [rcx],esp
  4591b9:	sub    al,0x25
  4591bb:	(bad)  
  4591bc:	imul   eax,DWORD PTR [rbx],0xfb52c35
  4591c2:	cmp    DWORD PTR [rcx],eax
  4591c4:	rex.RXB sub al,0x2b
  4591c7:	(bad)  
  4591c8:	jno    0x4591cd
  4591ca:	push   rbx
  4591cb:	sub    al,0xb5
  4591cd:	punpckhwd mm0,QWORD PTR [rbx]
  4591d0:	(bad)  
  4591d1:	sub    al,0xb5
  4591d3:	(bad)  
  4591d5:	add    ebp,DWORD PTR [rbp+0x2c]
  4591d8:	mov    ch,0xf
  4591da:	movabs eax,ds:0x7a0139163104cd01
  4591e3:	sub    al,0xd2
  4591e5:	(bad)  
  4591e7:	add    DWORD PTR [rbp+0x3916372c],ecx
  4591ed:	add    DWORD PTR [rbp+0x13],ecx
  4591f0:	hlt    
  4591f1:	or     al,0x39
  4591f3:	add    DWORD PTR [rsi+0x71012b2c],edx
  4591f9:	add    ecx,ebp
  4591fb:	add    al,0x3e
  4591fd:	(bad)  
  4591fe:	cmp    DWORD PTR [rcx],eax
  459200:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  459201:	sub    al,0x46
  459203:	(bad)  
  459204:	(bad)  
  459205:	add    ecx,DWORD PTR [rcx+0x2b]
  459208:	rex.WRB (bad) 
  45920a:	(bad)  
  45920b:	add    esi,DWORD PTR [rax+0x2916542c]
  459211:	add    BYTE PTR [rsi+0x39164d2c],bh
  459217:	add    eax,edx
  459219:	sub    al,0xf4
  45921b:	or     al,0x39
  45921d:	add    ebx,eax
  45921f:	sbb    al,0xf9
  459221:	or     al,0x39
  459223:	add    ebp,ebx
  459225:	sub    al,0x2b
  459227:	add    DWORD PTR [rcx],ebp
  459229:	add    BYTE PTR [rax],cl
  45922b:	(bad)  
  45922c:	hlt    
  45922d:	or     al,0x81
  45922f:	add    ecx,ebp
  459231:	add    al,0x70
  459233:	(bad)  
  459234:	icebp  
  459235:	add    ch,cl
  459237:	add    al,0x2b
  459239:	add    DWORD PTR [rcx+0x772d0703],eax
  45923f:	(bad)  
  459240:	cmp    DWORD PTR [rcx],eax
  459242:	(bad)  
  459243:	sub    eax,0xf10cf9
  459248:	(bad)  
  459249:	sub    eax,0x3890cf4
  45924e:	cmp    BYTE PTR [rip+0x139167d],ch        # 0x17ea8d1
  459254:	rex.XB sub eax,0x1391683
  45925a:	(bad)  
  45925b:	sub    eax,0x1890cf4
  459260:	int    0x4
  459262:	sbb    cl,BYTE PTR [rdi]
  459264:	sub    DWORD PTR [rax],eax
  459266:	pop    rdi
  459267:	sub    eax,0x139168a
  45926c:	jno    0x45929b
  45926e:	sub    eax,DWORD PTR [rcx]
  459270:	xor    DWORD PTR [rax],eax
  459272:	int    0x4
  459274:	sub    eax,DWORD PTR [rcx]
  459276:	xor    DWORD PTR [rax],eax
  459278:	jae    0x459290
  45927a:	sti    
  45927b:	or     eax,0x4cd0399
  459280:	sbb    cl,BYTE PTR [rdi]
  459282:	movabs eax,ds:0xc8013916972dae03
  45928b:	sub    eax,0x31169e
  459290:	jp     0x4592a8
  459292:	sti    
  459293:	or     eax,0x16830031
  459298:	add    DWORD PTR [rsi],ecx
  45929a:	mov    DWORD PTR [rax],eax
  45929c:	shr    DWORD PTR [rip+0x2c10cf0],cl        # 0x3069f92
  4592a2:	fisubr WORD PTR [rip+0x1c012b]        # 0x6193d3
  4592a8:	out    dx,al
  4592a9:	sub    eax,0x2416af
  4592ae:	cld    
  4592af:	sub    ecx,eax
  4592b1:	(bad)  
  4592b2:	and    al,0x0
  4592b4:	cld    
  4592b5:	sub    eax,0xf90cf0
  4592ba:	sbb    al,0x2e
  4592bc:	rcl    BYTE PTR [rsi],cl
  4592be:	cmp    DWORD PTR [rcx],eax
  4592c0:	sub    DWORD PTR [rsi],ebp
  4592c2:	fcom   DWORD PTR [rsi]
  4592c4:	mov    ecx,0xde2e3e03
  4592c9:	(bad)  
  4592ca:	cmp    DWORD PTR [rcx],eax
  4592cc:	push   rax
  4592cd:	cs in  al,0x16
  4592d0:	cmp    DWORD PTR [rcx],eax
  4592d2:	pop    rcx
  4592d3:	ficom  WORD PTR cs:[rsi]
  4592d6:	add    DWORD PTR [r8],ecx
  4592d9:	(bad)  
  4592da:	sub    eax,DWORD PTR [rcx]
  4592dc:	xor    DWORD PTR [rax],eax
  4592de:	or     BYTE PTR [rsi],dl
  4592e0:	hlt    
  4592e1:	or     al,0x29
  4592e3:	add    BYTE PTR [rsi+0x2e],dh
  4592e6:	icebp  
  4592e7:	(bad)  
  4592e8:	xor    DWORD PTR [rax],eax
  4592ea:	xchg   DWORD PTR [rsi],ebp
  4592ec:	test   eax,0x9002890f
  4592f1:	cs clc 
  4592f3:	(bad)  
  4592f4:	leave  
  4592f5:	add    ecx,ebp
  4592f7:	add    al,0xf9
  4592f9:	or     al,0xd1
  4592fb:	add    ecx,ebp
  4592fd:	add    al,0x2b
  4592ff:	add    ecx,edx
  459301:	add    ecx,eax
  459303:	sbb    edi,ecx
  459305:	or     al,0xd1
  459307:	add    ecx,ecx
  459309:	cs stc 
  45930b:	or     al,0xd1
  45930d:	add    edx,edi
  45930f:	cs hlt 
  459311:	or     al,0xd9
  459313:	add    ecx,ebp
  459315:	add    al,0x2b
  459317:	add    ecx,ebx
  459319:	add    esi,edx
  45931b:	add    edx,DWORD PTR cs:[rdi]
  45931e:	fld    DWORD PTR [rbx]
  459320:	add    BYTE PTR [rdi],ch
  459322:	hlt    
  459323:	or     al,0xd9
  459325:	add    ebx,DWORD PTR [rax]
  459327:	(bad)  
  459328:	test   eax,0x2b03e10f
  45932d:	(bad)  
  45932e:	or     dl,BYTE PTR [rdi]
  459330:	fld    DWORD PTR [rbx]
  459332:	xor    DWORD PTR [rdi],ebp
  459334:	lock or al,0xe1
  459337:	add    esi,DWORD PTR [rdi]
  459339:	(bad)  
  45933a:	or     dl,BYTE PTR [rdi]
  45933c:	movabs eax,ds:0x5f03390e51198000
  459345:	sub    DWORD PTR [rdi+rdx*1],ebx
  459348:	icebp  
  459349:	add    ecx,ebp
  45934b:	add    al,0x2b
  45934d:	add    DWORD PTR [rcx+0x0],esi
  459350:	gs (bad) 
  459352:	(bad)  
  459353:	add    ecx,esi
  459355:	add    edi,DWORD PTR [rdx+0x2f]
  459358:	and    dl,BYTE PTR [rdi]
  45935a:	mov    DWORD PTR [rdx],eax
  45935c:	xchg   DWORD PTR [rdi],ebp
  45935e:	cs (bad) 
  459360:	movabs eax,ds:0xca040117362fa600
  459369:	(bad)  
  45936a:	cmp    al,0x17
  45936c:	icebp  
  45936d:	add    edi,DWORD PTR [rdx+0x2f]
  459370:	rex.X (bad) 
  459372:	icebp  
  459373:	add    ebp,edx
  459375:	(bad)  
  459376:	rex.WX (bad) 
  459378:	or     DWORD PTR [rax],eax
  45937a:	icebp  
  45937b:	(bad)  
  45937c:	push   rcx
  45937d:	(bad)  
  45937e:	or     DWORD PTR [rcx*8-0x4ef0e5fc],eax
  459385:	add    BYTE PTR [rbx+0x30],cl
  459388:	fs (bad) 
  45938a:	or     DWORD PTR [rcx],eax
  45938c:	int    0x4
  45938e:	ins    BYTE PTR es:[rdi],dx
  45938f:	(bad)  
  459390:	sub    al,0x0
  459392:	sub    rsi,r11
  459395:	adc    al,0x2c
  459397:	add    BYTE PTR [rbp+0x2b],cl
  45939a:	mov    ch,0xf
  45939c:	sub    al,0x0
  45939e:	fldcw  WORD PTR [rax]
  4593a0:	test   DWORD PTR [rdi],edx
  4593a2:	or     DWORD PTR [rcx],eax
  4593a4:	push   rax
  4593a5:	xor    BYTE PTR [rbx+0x5b002c17],cl
  4593ab:	xor    BYTE PTR [rcx-0x32ffd3f1],bh
  4593b1:	add    al,0x2b
  4593b3:	add    DWORD PTR [rcx],edx
  4593b5:	add    ebp,ecx
  4593b7:	add    al,0x2b
  4593b9:	add    DWORD PTR [rcx],edx
  4593bb:	add    al,0x6f
  4593bd:	xor    cl,bh
  4593bf:	or     al,0x11
  4593c1:	add    al,0x7e
  4593c3:	xor    cl,bh
  4593c5:	or     al,0x19
  4593c7:	add    al,0x97
  4593c9:	xor    BYTE PTR [rsi-0x5afbeee9],bl
  4593cf:	xor    cl,bh
  4593d1:	or     al,0x11
  4593d3:	add    al,0xba
  4593d5:	xor    ah,dh
  4593d7:	or     al,0x11
  4593d9:	add    al,0xcf
  4593db:	xor    ah,dh
  4593dd:	or     al,0x11
  4593df:	add    al,0xe1
  4593e1:	xor    cl,bh
  4593e3:	or     al,0x11
  4593e5:	add    al,0xbb
  4593e7:	sbb    edx,DWORD PTR [rcx+0xe]
  4593ea:	xor    DWORD PTR [rbx],eax
  4593ec:	cld    
  4593ed:	xor    BYTE PTR [rbp+0x12028917],ah
  4593f3:	xor    DWORD PTR [rcx+rdx*1+0x71],ecx
  4593f7:	add    BYTE PTR [rbx],bl
  4593f9:	xor    DWORD PTR [rbp-0xefbcef1],esi
  4593ff:	(bad)  
  459400:	lods   eax,DWORD PTR ds:[rsi]
  459401:	(bad)  
  459402:	mov    DWORD PTR [rdx],eax
  459404:	sub    dh,BYTE PTR [rcx]
  459406:	mov    ah,0x17
  459408:	cmp    DWORD PTR [rdx+rsi*8],eax
  45940b:	sbb    eax,edi
  45940d:	(bad)  
  45940e:	movabs eax,ds:0x4303390e51313700
  459417:	xor    eax,edi
  459419:	(bad)  
  45941a:	xor    DWORD PTR [rbx],eax
  45941c:	int    0x4
  45941e:	mov    edi,0x50033117
  459423:	xor    eax,esi
  459425:	or     al,0x41
  459427:	add    al,0x77
  459429:	xor    ebp,ecx
  45942b:	(bad)  
  45942c:	rex.B add al,0x98
  45942f:	sbb    DWORD PTR [rsi+rcx*1+0x4cd0449],esi
  459436:	(bad)  
  459437:	(bad)  
  459438:	pop    rcx
  459439:	add    al,0xcd
  45943b:	add    al,0x2b
  45943d:	add    DWORD PTR [rcx+0x4],esp
  459440:	fidiv  DWORD PTR [rcx]
  459442:	fist   DWORD PTR [rdi]
  459444:	imul   eax,DWORD PTR [rcx*8+0x710fb904],0xf904cd04
  45944f:	or     al,0x79
  459451:	add    al,0xcd
  459453:	add    al,0xe0
  459455:	(bad)  
  459456:	mov    DWORD PTR [rcx*8-0x76fed4fc],eax
  45945d:	add    al,BYTE PTR [rbx-0x6ee816ce]
  459463:	add    ch,cl
  459465:	add    al,0x1a
  459467:	pop    fs
  459469:	add    BYTE PTR [rsi],dl
  45946b:	adc    ebp,edx
  45946d:	or     al,0xd1
  45946f:	add    ebx,DWORD PTR [rbx-0x2ef306ce]
  459475:	add    esp,DWORD PTR [rdx+rsi*1+0x3d10cf9]
  45947c:	mov    ecx,0xd90cf432
  459481:	add    esi,DWORD PTR [rcx]
  459483:	(bad)  
  459484:	hlt    
  459485:	(bad)  
  459486:	xchg   ecx,eax
  459487:	add    al,0x68
  459489:	sub    BYTE PTR [rcx+0xe],dl
  45948c:	sbb    DWORD PTR [rsp+rbx*8],eax
  45948f:	xor    bh,BYTE PTR [rdx]
  459491:	add    DWORD PTR [rcx],esi
  459493:	add    ebp,ecx
  459495:	add    al,0xf9
  459497:	or     al,0x91
  459499:	add    al,0x8d
  45949b:	sbb    eax,esi
  45949d:	or     al,0x31
  45949f:	add    esp,edi
  4594a1:	xor    cl,BYTE PTR [rcx]
  4594a3:	sbb    BYTE PTR [rcx+0x0],cl
  4594a6:	int    0x4
  4594a8:	sub    eax,DWORD PTR [rcx]
  4594aa:	jns    0x4594ad
  4594ac:	and    esi,DWORD PTR [rbx]
  4594ae:	ins    BYTE PTR es:[rdi],dx
  4594af:	(bad)  
  4594b0:	cmp    DWORD PTR [rcx],eax
  4594b2:	mov    edx,0xb10e511c
  4594b7:	add    al,0x47
  4594b9:	sub    al,0x2b
  4594bb:	(bad)  
  4594bc:	cmp    DWORD PTR [rcx],eax
  4594be:	ds xor esi,esp
  4594c1:	or     al,0x39
  4594c3:	add    DWORD PTR [rbx+0x33],ecx
  4594c6:	mov    ecx,0x6804b90f
  4594cb:	xor    esp,DWORD PTR [rdi]
  4594cd:	sbb    BYTE PTR [rcx-0x4ad39dff],ah
  4594d3:	xadd   DWORD PTR [rcx*8+0x49012b04],eax
  4594db:	add    ebp,ecx
  4594dd:	add    al,0x86
  4594df:	sqrtps xmm0,XMMWORD PTR [rcx]
  4594e2:	int    0x4
  4594e4:	sub    eax,DWORD PTR [rcx]
  4594e6:	pop    rcx
  4594e7:	add    ebp,ecx
  4594e9:	add    al,0x2b
  4594eb:	add    DWORD PTR [rcx+0x1],esp
  4594ee:	int    0x4
  4594f0:	sub    eax,DWORD PTR [rcx]
  4594f2:	jns    0x4594f5
  4594f4:	int    0x4
  4594f6:	xchg   BYTE PTR [rdi],cl
  4594f8:	imul   eax,DWORD PTR [rcx],0x12b04cd
  4594fe:	jno    0x459501
  459500:	int    0x4
  459502:	sub    eax,DWORD PTR [rcx]
  459504:	leave  
  459505:	add    al,0x91
  459507:	xor    ebp,DWORD PTR [rbx]
  459509:	add    DWORD PTR [rcx+0x1],edx
  45950c:	imul   BYTE PTR [rbx]
  45950e:	(bad)  
  45950f:	sbb    cl,dl
  459511:	add    al,0x49
  459513:	sub    edi,DWORD PTR [rip+0xffffffffce014918]        # 0xffffffffce46de31
  459519:	xor    eax,DWORD PTR [rsi+0x18]
  45951c:	push   rcx
  45951d:	add    eax,esp
  45951f:	xor    edx,DWORD PTR [rsi+rdx*1+0x61]
  459523:	add    esi,ebp
  459525:	xor    edi,ecx
  459527:	or     al,0x39
  459529:	add    DWORD PTR [rcx],ebx
  45952b:	xor    al,0x50
  45952d:	sbb    cl,ch
  45952f:	add    al,0xcd
  459531:	add    al,0x56
  459533:	sbb    cl,ah
  459535:	add    al,0x49
  459537:	sub    esp,DWORD PTR [rcx+0x18]
  45953a:	add    QWORD PTR [r15+0x34],rax
  45953e:	rex.RX sbb cl,r15b
  459541:	add    al,0x66
  459543:	xor    al,0xf4
  459545:	or     al,0x61
  459547:	add    DWORD PTR [rdx-0x4ee893cc],eax
  45954d:	add    al,0x8c
  45954f:	xor    al,0xf4
  459551:	or     al,0x39
  459553:	add    DWORD PTR [rcx+0x390fd234],ebx
  459559:	add    DWORD PTR [rcx-0x4ef056cc],ebp
  45955f:	add    al,0xbf
  459561:	xor    al,0x68
  459563:	sbb    BYTE PTR [rcx+0x7d1cd403],cl
  459569:	(bad)  
  45956a:	add    r15,rcx
  45956d:	xor    al,0x6f
  45956f:	sbb    BYTE PTR [rcx],bh
  459571:	add    eax,esp
  459573:	xor    al,0xa9
  459575:	bswap  ecx
  459577:	add    al,0xeb
  459579:	xor    al,0x2b
  45957b:	add    DWORD PTR [rcx+0x0],edx
  45957e:	int    0x4
  459580:	sub    eax,DWORD PTR [rcx]
  459582:	jmp    0x7670de87
  459587:	sbb    BYTE PTR [rcx+0x0],dl
  45958a:	or     BYTE PTR [rsi],dl
  45958c:	hlt    
  45958d:	or     al,0x9
  45958f:	add    BYTE PTR [rax],cl
  459591:	xor    eax,0xc187d
  459596:	adc    BYTE PTR [rip+0xc1883],dh        # 0x51ae1f
  45959c:	fldcw  WORD PTR [rax]
  45959e:	test   DWORD PTR [rdi],edx
  4595a0:	add    DWORD PTR [rcx],0x18893518
  4595a6:	cmp    DWORD PTR [rcx],eax
  4595a8:	(bad)  
  4595a9:	xor    eax,0x1d91892
  4595ae:	cmp    BYTE PTR [rip+0x1a9189a],dh        # 0x1eeae4e
  4595b4:	push   rbx
  4595b5:	xor    eax,0x1b118a0
  4595ba:	(bad)  
  4595bb:	xor    eax,0x52118a7
  4595c0:	int    0x4
  4595c2:	scas   al,BYTE PTR es:[rdi]
  4595c3:	sbb    BYTE PTR [rcx-0x41ca4cff],dl
  4595c9:	sbb    BYTE PTR [rcx],dh
  4595cb:	add    eax,0x18c435c6
  4595d0:	fld    DWORD PTR [rcx]
  4595d2:	(bad)  
  4595d3:	sub    al,0xb5
  4595d5:	psubusw mm0,QWORD PTR [rcx]
  4595d8:	xor    eax,0x690fb52c
  4595dd:	add    ecx,ebp
  4595df:	add    al,0x3e
  4595e1:	(bad)  
  4595e2:	xor    DWORD PTR [rip+0x18ce35d4],eax        # 0x1913cbbc
  4595e8:	loope  0x4595ea
  4595ea:	test   DWORD PTR [rdx],ebp
  4595ec:	in     al,0x18
  4595ee:	mov    DWORD PTR [rcx],eax
  4595f0:	jno    0x45960d
  4595f2:	xchg   BYTE PTR [rip+0x1f930029],cl        # 0x1fd89621
  4595f8:	sti    
  4595f9:	or     eax,0x4cd0141
  4595fe:	call   0xffffffffcd4adf1b
  459603:	add    al,0x2b
  459605:	add    DWORD PTR [rcx+0x5],edx
  459608:	int    0x4
  45960a:	stc    
  45960b:	or     al,0x89
  45960d:	add    ecx,DWORD PTR [rdx]
  45960f:	ss jge 0x459628
  459612:	push   rcx
  459613:	add    eax,0x1683361a
  459618:	push   rcx
  459619:	add    eax,0xcf43628
  45961e:	cdq    
  45961f:	add    DWORD PTR [rbx],esi
  459621:	ss ins BYTE PTR es:[rdi],dx
  459623:	(bad)  
  459624:	cdq    
  459625:	add    DWORD PTR [rsp+rbp*1+0x1991646],esp
  45962c:	test   eax,0x990fa934
  459631:	add    DWORD PTR [rsi],edi
  459633:	xor    esi,esp
  459635:	or     al,0x51
  459637:	add    eax,0x18f23648
  45963c:	cdq    
  45963d:	add    DWORD PTR [rbx+0x36],esi
  459640:	stc    
  459641:	sbb    BYTE PTR [rcx+0x369501],bl
  459647:	sbb    DWORD PTR [rcx],edi
  459649:	add    DWORD PTR [rbx-0x66e741ca],esp
  45964f:	add    DWORD PTR [rdx-0x46f1aee4],edi
  459655:	add    al,0x68
  459657:	xor    eax,DWORD PTR [rdi]
  459659:	sbb    DWORD PTR [rcx-0x4ad3caff],esp
  45965f:	setns  BYTE PTR [rcx]
  459662:	rex.RXB sub al,0x2b
  459665:	(bad)  
  459666:	movabs eax,ds:0xcb01390fb936c101
  45966f:	ss (bad) 
  459671:	sbb    BYTE PTR [rcx],bh
  459673:	add    DWORD PTR [rax],edi
  459675:	xor    eax,0x199189a
  45967a:	push   rax
  45967b:	cs in  al,0x16
  45967e:	cdq    
  45967f:	add    DWORD PTR [rax+0x35],esp
  459682:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  459683:	sbb    BYTE PTR [rcx-0x74c90fff],bl
  459689:	(bad)  
  45968a:	test   eax,0x40371001
  45968f:	sbb    DWORD PTR [rcx+0x5],edi
  459692:	fldcw  WORD PTR [rax]
  459694:	rex.RX sbb DWORD PTR [rcx+0x5],r15d
  459698:	and    BYTE PTR [rdi],dh
  45969a:	sbb    QWORD PTR [r9+0x2b04cd01],r13
  4596a1:	add    DWORD PTR [rcx+0x2b04cd01],esi
  4596a7:	add    DWORD PTR [rcx+0x7d372701],eax
  4596ad:	(bad)  
  4596ae:	test   eax,0x832d4301
  4596b3:	(bad)  
  4596b4:	test   eax,0xf4373701
  4596b9:	or     al,0xa9
  4596bb:	add    DWORD PTR [rdx+0x37],ebx
  4596be:	pop    rbx
  4596bf:	sbb    DWORD PTR [rcx+0x62377d01],ebp
  4596c5:	sbb    DWORD PTR [rcx-0xbc872ff],ebp
  4596cb:	or     al,0xa9
  4596cd:	add    DWORD PTR [rdi],ebx
  4596cf:	sub    eax,0x1b10cf4
  4596d4:	(bad)  
  4596d5:	sub    eax,0x1390cf4
  4596da:	cdq    
  4596db:	(bad)  
  4596dc:	hlt    
  4596dd:	or     al,0x59
  4596df:	add    ch,cl
  4596e1:	add    al,0x2b
  4596e3:	add    DWORD PTR [rax+rax*1],ecx
  4596e6:	int    0x4
  4596e8:	sub    eax,DWORD PTR [rcx]
  4596ea:	xchg   ecx,eax
  4596eb:	add    eax,0xfb52b4d
  4596f0:	jns    0x4596f7
  4596f2:	pop    rbx
  4596f3:	xor    BYTE PTR [rcx-0x73fff3f1],bh
  4596f9:	and    BYTE PTR [rbx],ch
  4596fb:	add    DWORD PTR [rax+rax*1],ecx
  4596fe:	xchg   edi,eax
  4596ff:	and    BYTE PTR [rbp+0x19],ch
  459702:	cdq    
  459703:	add    eax,0x12b04cd
  459708:	leave  
  459709:	add    ecx,ebp
  45970b:	add    al,0x2b
  45970d:	add    DWORD PTR [rax+rax*1],ecx
  459710:	stos   BYTE PTR es:[rdi],al
  459711:	and    BYTE PTR [rcx-0x32fa5ef1],bh
  459717:	add    al,0x2b
  459719:	add    DWORD PTR [rcx+0x2e381502],ecx
  45971f:	(bad)  
  459720:	mov    DWORD PTR [rdx],eax
  459722:	and    BYTE PTR [rax],bh
  459724:	mov    ch,0xf
  459726:	mov    DWORD PTR [rdx],eax
  459728:	sub    edi,DWORD PTR [rax]
  45972a:	je     0x459745
  45972c:	test   eax,0x31384105
  459731:	or     eax,0x385405a9
  459736:	jns    0x459751
  459738:	test   eax,0x7e387605
  45973d:	sbb    DWORD PTR [rcx],ecx
  45973f:	add    BYTE PTR [rdx+0x38],bh
  459742:	iret   
  459743:	sbb    DWORD PTR [rcx+0x3d289002],ebx
  459749:	adc    bh,BYTE PTR [rcx+0x0]
  45974c:	mov    bh,BYTE PTR [rax]
  45974e:	ficomp DWORD PTR [rcx]
  459750:	mov    cl,0x5
  459752:	int    0x4
  459754:	in     eax,0x19
  459756:	rol    DWORD PTR [rip+0x19f50d85],0x89        # 0x1a3aa4e2
  45975d:	add    al,dl
  45975f:	cmp    ch,bh
  459761:	sbb    ecx,eax
  459763:	add    eax,0x1a040d85
  459768:	cmp    DWORD PTR [rcx],eax
  45976a:	int    0x4
  45976c:	sub    eax,DWORD PTR [rcx]
  45976e:	rol    DWORD PTR [rcx],1
  459770:	cld    
  459771:	sub    DWORD PTR [rax],edx
  459773:	sbb    dl,cl
  459775:	add    eax,0x1a1038df
  45977a:	rol    DWORD PTR [rcx],1
  45977c:	out    dx,al
  45977d:	cmp    BYTE PTR [rsi],dl
  45977f:	sbb    dl,cl
  459781:	add    edx,edi
  459783:	cmp    BYTE PTR [rip+0x1e01c11a],bl        # 0x1e4758a3
  459789:	cmp    DWORD PTR [rdi],esp
  45978b:	sbb    bl,cl
  45978d:	add    eax,0x1a353973
  459792:	push   rcx
  459793:	add    DWORD PTR [rcx+rdi*1+0x5e90fb5],eax
  45979a:	xchg   esi,eax
  45979b:	cmp    DWORD PTR [rbx],edi
  45979d:	sbb    dl,BYTE PTR [rcx+0x1]
  4597a0:	mov    eax,0xf11a4139
  4597a5:	add    eax,0x1a4728d9
  4597aa:	add    DWORD PTR [rsi],eax
  4597ac:	jmp    0x515fe5ea
  4597b1:	add    esi,esi
  4597b3:	cmp    DWORD PTR [rcx-0x32fa06f1],edi
  4597b9:	add    al,0x4e
  4597bb:	sbb    dh,cl
  4597bd:	add    eax,0x1a552b49
  4597c2:	mov    cl,0x1
  4597c4:	add    edi,DWORD PTR [rdx]
  4597c6:	pop    rsp
  4597c7:	sbb    dh,BYTE PTR [rcx+0x623a2001]
  4597cd:	sbb    ah,cl
  4597cf:	add    al,0x49
  4597d1:	sub    ebp,DWORD PTR [rcx+0x1a]
  4597d4:	push   rcx
  4597d5:	add    DWORD PTR [rip+0x1916543a],ebp        # 0x195bec15
  4597db:	(bad)  
  4597dc:	int    0x4
  4597de:	sub    eax,DWORD PTR [rcx]
  4597e0:	sbb    DWORD PTR [rsi],eax
  4597e2:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  4597e3:	sub    al,0x46
  4597e5:	(bad)  
  4597e6:	sbb    DWORD PTR [rsi],eax
  4597e8:	rex.W
  4597e9:	repnz sbb BYTE PTR ss:[rcx+0x1],bl
  4597ee:	(bad)  
  4597ef:	sub    eax,0x6210cf4
  4597f4:	int    0x4
  4597f6:	sbb    cl,BYTE PTR [rdi]
  4597f8:	sbb    DWORD PTR [rsi],eax
  4597fa:	movsxd edi,DWORD PTR [rdx]
  4597fc:	jb     0x459818
  4597fe:	pop    rcx
  4597ff:	add    DWORD PTR [rbx+0x3a],esi
  459802:	hlt    
  459803:	or     al,0xf9
  459805:	add    eax,0x1a7904cd
  45980a:	add    DWORD PTR [r15+0x411a913a],ecx
  459811:	add    DWORD PTR [rax],edi
  459813:	xor    eax,0x1411a97
  459818:	int    0x4
  45981a:	fwait
  45981b:	sbb    ah,BYTE PTR [rcx-0x46ccb4ff]
  459821:	rdtsc  
  459823:	(bad)  
  459824:	mov    al,0x3a
  459826:	hlt    
  459827:	or     al,0x51
  459829:	add    DWORD PTR [rdi+0x510fb93a],edi
  45982f:	add    eax,esi
  459831:	cmp    dh,BYTE PTR [rsi-0x32f9bee6]
  459837:	add    al,0x2b
  459839:	add    DWORD PTR [rcx],edi
  45983b:	(bad)  
  45983c:	sub    rdi,QWORD PTR [r10+rbx*1+0x4cd0641]
  459844:	jns    0x459860
  459846:	rex.WB (bad) 
  459848:	int    0x4
  45984a:	xor    DWORD PTR [rsi],edx
  45984c:	cmp    DWORD PTR [rcx],eax
  45984e:	adc    edi,DWORD PTR [rbx]
  459850:	ret    
  459851:	sbb    bh,BYTE PTR [rcx]
  459853:	add    DWORD PTR [rax],esp
  459855:	cmp    edi,DWORD PTR [rcx+0x2d01e90f]
  45985b:	cmp    esi,eax
  45985d:	or     al,0x99
  45985f:	add    bh,BYTE PTR [rbx]
  459861:	cmp    edx,DWORD PTR [rcx+0xe]
  459864:	xor    al,0x0
  459866:	int    0x4
  459868:	sub    eax,DWORD PTR [rcx]
  45986a:	xor    al,0x0
  45986c:	sub    rsp,r9
  45986f:	sbb    dl,BYTE PTR [rcx+0x6]
  459872:	int    0x4
  459874:	jmp    0x57478193
  459879:	cmp    ebp,DWORD PTR [rbx]
  45987b:	add    ecx,esp
  45987d:	add    DWORD PTR [rax],ecx
  45987f:	(bad)  
  459880:	sub    eax,DWORD PTR [rcx]
  459882:	sbb    al,0x0
  459884:	int    0x4
  459886:	sub    eax,DWORD PTR [rcx]
  459888:	jmp    0xfffffffff681018e
  45988d:	sbb    ch,cl
  45988f:	add    DWORD PTR [rsi+0x3b],esi
  459892:	push   rcx
  459893:	(bad)  
  459894:	mov    DWORD PTR [rdx],eax
  459896:	cli    
  459897:	cmp    cl,ch
  459899:	(bad)  
  45989a:	jmp    0xfffffffffc8117a0
  45989f:	sbb    cl,BYTE PTR [rcx+0x513b8c02]
  4598a5:	(bad)  
  4598a6:	xor    al,0x0
  4598a8:	fldcw  WORD PTR [rax]
  4598aa:	add    DWORD PTR [rbx],ebx
  4598ac:	sbb    al,0x0
  4598ae:	sub    rsi,r11
  4598b1:	adc    al,0xe9
  4598b3:	add    DWORD PTR [rcx-0x66f30fc5],edx
  4598b9:	add    cl,BYTE PTR [rax]
  4598bb:	xor    eax,0x6611b24
  4598c0:	movabs al,ds:0x323bbc02991b2b3b
  4598c9:	sbb    ebp,DWORD PTR [rcx+0x6]
  4598cc:	enter  0x7d3b,0x18
  4598d0:	jmp    0x398187d6
  4598d5:	sbb    ebp,DWORD PTR [rcx+0x6]
  4598d8:	add    al,0x3c
  4598da:	rex.XB sbb esi,DWORD PTR [r9+0x0]
  4598de:	or     eax,0xe9012f3c
  4598e3:	add    DWORD PTR [rdx],esp
  4598e5:	cmp    al,0x51
  4598e7:	(bad)  
  4598e8:	jns    0x4598ea
  4598ea:	int    0x4
  4598ec:	jo     0x459904
  4598ee:	mov    cl,0x2
  4598f0:	rex.X cmp al,0x5b
  4598f3:	sbb    ecx,DWORD PTR [rsi]
  4598f5:	add    BYTE PTR [rax+rax*1],al
  4598f8:	adc    al,0x0
  4598fa:	or     BYTE PTR [rax],al
  4598fc:	or     BYTE PTR [rax],al
  4598fe:	sub    BYTE PTR [rax],al
  459900:	or     BYTE PTR [rax],al
  459902:	or     al,0x0
  459904:	sub    eax,0x10000e00
  459909:	add    BYTE PTR [rdx],dh
  45990b:	add    BYTE PTR [rsi],cl
  45990d:	add    BYTE PTR [rax+rax*1],dl
  459910:	cmp    eax,DWORD PTR [rax]
  459912:	(bad)  
  459913:	add    BYTE PTR [rax],bl
  459915:	add    BYTE PTR [rax+rax*1+0xe],ah
  459919:	add    BYTE PTR [rax+rax*1],bl
  45991c:	xchg   edi,eax
  45991d:	add    BYTE PTR [rsi],cl
  45991f:	add    BYTE PTR [rax],ah
  459921:	add    BYTE PTR [rsi+0x24000e00],bl
  459927:	add    BYTE PTR [rcx+0x28000e00],ch
  45992d:	add    ah,bl
  45992f:	add    BYTE PTR [rcx],cl
  459931:	add    BYTE PTR [rax+rax*1],ch
  459934:	out    dx,al
  459935:	add    BYTE PTR [rcx],cl
  459937:	add    BYTE PTR [rax],dh
  459939:	add    bl,dh
  45993b:	add    BYTE PTR [rsi],cl
  45993d:	add    BYTE PTR [rax+rax*1],dh
  459940:	clc    
  459941:	add    BYTE PTR [rsi],cl
  459943:	add    BYTE PTR [rax],bh
  459945:	add    BYTE PTR [rcx+rax*1+0xe],al
  459949:	add    BYTE PTR [rax+rax*1],bh
  45994c:	rex.WRXB add QWORD PTR [r14],r9
  45994f:	add    BYTE PTR [rax+0x0],al
  459952:	pop    rsi
  459953:	add    DWORD PTR [rsi],ecx
  459955:	add    BYTE PTR [rax+rax*1+0x7b],al
  459959:	add    DWORD PTR [rsi],ecx
  45995b:	add    BYTE PTR [rax+0x0],cl
  45995e:	stos   BYTE PTR es:[rdi],al
  45995f:	add    DWORD PTR [rsi],ecx
  459961:	add    BYTE PTR [rax+rax*1-0x43],cl
  459965:	add    DWORD PTR [rsi],ecx
  459967:	add    BYTE PTR [rax+0x0],dl
  45996a:	(bad)  
  45996b:	add    DWORD PTR [rsi],ecx
  45996d:	add    BYTE PTR [rax+rax*1-0x1],dl
  459971:	add    DWORD PTR [rsi],ecx
  459973:	add    BYTE PTR [rax+0x0],bl
  459976:	sub    BYTE PTR [rdx],al
  459978:	(bad)  
  459979:	add    BYTE PTR [rax+rax*1+0x43],bl
  45997d:	add    cl,BYTE PTR [rsi]
  45997f:	add    BYTE PTR [rax+0x0],ah
  459982:	push   0x64000e02
  459987:	add    BYTE PTR [rcx+0x68000e02],cl
  45998d:	add    BYTE PTR [rdx+0x6c000e02],ah
  459993:	add    BYTE PTR [rbx+0x70000e02],bh
  459999:	add    dl,ch
  45999b:	add    cl,BYTE PTR [rsi]
  45999d:	add    BYTE PTR [rax+rax*1+0x15],dh
  4599a1:	add    ecx,DWORD PTR [rsi]
  4599a3:	add    BYTE PTR [rax+0x0],bh
  4599a6:	push   rsi
  4599a7:	add    ecx,DWORD PTR [rsi]
  4599a9:	add    BYTE PTR [rax+rax*1+0x7b],bh
  4599ad:	add    ecx,DWORD PTR [rsi]
  4599af:	add    BYTE PTR [rax+0xe03b600],al
  4599b5:	add    BYTE PTR [rax+rax*1+0xe03d3],al
  4599bc:	mov    BYTE PTR [rax],al
  4599be:	(bad)  
  4599bf:	add    al,0xe
  4599c1:	add    BYTE PTR [rax+rax*1+0xe0417],cl
  4599c8:	nop
  4599c9:	add    BYTE PTR [rsi],bh
  4599cb:	add    al,0xe
  4599cd:	add    BYTE PTR [rax+rax*1+0xe044f],dl
  4599d4:	cwde   
  4599d5:	add    BYTE PTR [rsi+0x4],dh
  4599d8:	(bad)  
  4599d9:	add    BYTE PTR [rax+rax*1+0xe049f],bl
  4599e0:	movabs al,ds:0xff00a4000e04de00
  4599e9:	add    al,0xe
  4599eb:	add    BYTE PTR [rax+0xe050e00],ch
  4599f1:	add    BYTE PTR [rax+rax*1+0xe0533],ch
  4599f8:	mov    al,0x0
  4599fa:	rex.X add eax,0xb4000e
  459a00:	addr32 add eax,0xb8000e
  459a06:	xchg   BYTE PTR [rip+0xbc000e],al        # 0x1019a1a
  459a0c:	mov    ebx,0xc0000e05
  459a11:	add    dl,ah
  459a13:	add    eax,0xc4000e
  459a18:	(bad)  
  459a19:	(bad)  
  459a1a:	(bad)  
  459a1b:	add    al,cl
  459a1d:	add    BYTE PTR [rsi],bh
  459a1f:	(bad)  
  459a20:	(bad)  
  459a21:	add    ah,cl
  459a23:	add    BYTE PTR [rbx+0x6],bl
  459a26:	(bad)  
  459a27:	add    al,dl
  459a29:	add    BYTE PTR [rsi-0x2bfff1fa],cl
  459a2f:	add    BYTE PTR [rbx-0x27fff1fa],bl
  459a35:	add    BYTE PTR [rsi-0x23fff1fa],bh
  459a3b:	add    cl,dl
  459a3d:	(bad)  
  459a3e:	(bad)  
  459a3f:	add    al,ah
  459a41:	add    al,dh
  459a43:	(bad)  
  459a44:	(bad)  
  459a45:	add    ah,ah
  459a47:	add    BYTE PTR [rip+0xffffffffe8000e07],ah        # 0xffffffffe845a854
  459a4d:	add    BYTE PTR [rsi],bh
  459a4f:	(bad)  
  459a50:	(bad)  
  459a51:	add    ah,ch
  459a53:	add    BYTE PTR [rbp+0x7],ch
  459a56:	(bad)  
  459a57:	add    al,dh
  459a59:	add    BYTE PTR [rax-0xbfff1f9],cl
  459a5f:	add    BYTE PTR [rdi-0x7fff1f9],dl
  459a65:	add    BYTE PTR [rdi+rax*1+0xfc000e],bh
  459a6c:	rol    DWORD PTR [rdi],1
  459a6e:	(bad)  
  459a6f:	add    BYTE PTR [rax],al
  459a71:	add    esp,edi
  459a73:	(bad)  
  459a74:	(bad)  
  459a75:	add    BYTE PTR [rcx+rax*1],al
  459a78:	adc    eax,0x8000e08
  459a7d:	add    DWORD PTR [rax+rcx*1+0xe],eax
  459a81:	add    BYTE PTR [rcx+rax*1],cl
  459a84:	pop    rbx
  459a85:	or     BYTE PTR [rsi],cl
  459a87:	add    BYTE PTR [rax],dl
  459a89:	add    DWORD PTR [rax+0x14000e08],ecx
  459a8f:	add    DWORD PTR [rcx+0x18000e08],ebx
  459a95:	add    eax,eax
  459a97:	or     BYTE PTR [rsi],cl
  459a99:	add    BYTE PTR [rcx+rax*1],bl
  459a9c:	fisttp WORD PTR [rax]
  459a9e:	(bad)  
  459a9f:	add    BYTE PTR [rax],ah
  459aa1:	add    DWORD PTR [rcx+rcx*1],edx
  459aa4:	(bad)  
  459aa5:	add    BYTE PTR [rcx+rax*1],ah
  459aa8:	cmp    eax,0x28000e09
  459aad:	add    DWORD PTR [rcx+rcx*1+0xe],edi
  459ab1:	add    BYTE PTR [rcx+rax*1],ch
  459ab4:	(bad)
  459ab8:	xor    BYTE PTR [rcx],al
  459aba:	mov    eax,0x34000e09
  459abf:	add    edi,ecx
  459ac1:	or     DWORD PTR [rsi],ecx
  459ac3:	add    BYTE PTR [rax],bh
  459ac5:	add    esp,edi
  459ac7:	or     DWORD PTR [rsi],ecx
  459ac9:	add    BYTE PTR [rcx+rax*1],bh
  459acc:	adc    eax,0x40000e0a
  459ad1:	add    DWORD PTR [rsi+0xa],ecx
  459ad4:	(bad)  
  459ad5:	add    BYTE PTR [rcx+rax*1-0x63],al
  459ad9:	or     cl,BYTE PTR [rsi]
  459adb:	add    BYTE PTR [rax+0x1],cl
  459ade:	fmul   DWORD PTR [rdx]
  459ae0:	(bad)  
  459ae1:	add    BYTE PTR [rcx+rax*1+0x29],cl
  459ae5:	or     ecx,DWORD PTR [rsi]
  459ae7:	add    BYTE PTR [rax+0x1],dl
  459aea:	rex.RX or r9d,DWORD PTR [rsi]
  459aed:	add    BYTE PTR [rcx+rax*1+0x79],dl
  459af1:	or     ecx,DWORD PTR [rsi]
  459af3:	add    BYTE PTR [rax+0x1],bl
  459af6:	mov    BYTE PTR [rbx],cl
  459af8:	(bad)  
  459af9:	add    BYTE PTR [rcx+rax*1-0x53],bl
  459afd:	or     ecx,DWORD PTR [rsi]
  459aff:	add    BYTE PTR [rax+0x1],ah
  459b02:	ret    0xe0b
  459b05:	add    BYTE PTR [rcx+rax*1-0x13],ah
  459b09:	or     ecx,DWORD PTR [rsi]
  459b0b:	add    BYTE PTR [rax+0x1],ch
  459b0e:	(bad)  
  459b0f:	or     al,0xe
  459b11:	add    BYTE PTR [rcx+rax*1+0x55],ch
  459b15:	or     al,0xe
  459b17:	add    BYTE PTR [rax+0x1],dh
  459b1a:	jb     0x459b28
  459b1c:	(bad)  
  459b1d:	add    BYTE PTR [rcx+rax*1+0xe0d99],dh
  459b24:	mov    eax,0xe0db201
  459b29:	add    ah,al
  459b2b:	add    DWORD PTR [rdx],edx
  459b2d:	(bad)  
  459b2e:	(bad)  
  459b2f:	add    al,cl
  459b31:	add    DWORD PTR [rcx],esi
  459b33:	(bad)  
  459b34:	(bad)  
  459b35:	add    ah,dh
  459b37:	add    DWORD PTR [rbx+0xe],ebp
  459b3a:	(bad)  
  459b3b:	add    al,bh
  459b3d:	add    DWORD PTR [rsi+rcx*1+0xe],esi
  459b41:	add    ah,bh
  459b43:	add    DWORD PTR [rbp+0xe0e],eax
  459b49:	add    bl,BYTE PTR [rsi+rcx*1+0x2500008]
  459b50:	repz add BYTE PTR [rax],cl
  459b53:	add    BYTE PTR [rdx+rax*1-0x20],dl
  459b57:	(bad)  
  459b58:	or     BYTE PTR [rax],al
  459b5a:	pop    rax
  459b5b:	add    ah,al
  459b5d:	(bad)  
  459b5e:	or     BYTE PTR [rax],al
  459b60:	pop    rsp
  459b61:	add    ah,ch
  459b63:	(bad)  
  459b64:	or     BYTE PTR [rax],al
  459b66:	(bad)  
  459b67:	add    ch,dl
  459b69:	(bad)  
  459b6a:	or     BYTE PTR [rax],al
  459b6c:	fs add ch,dl
  459b6f:	(bad)  
  459b70:	or     BYTE PTR [rax],al
  459b72:	push   0x80eef02
  459b77:	add    BYTE PTR [rdx+rax*1-0xc],ch
  459b7b:	(bad)  
  459b7c:	or     BYTE PTR [rax],al
  459b7e:	jo     0x459b82
  459b80:	stc    
  459b81:	(bad)  
  459b82:	or     BYTE PTR [rax],al
  459b84:	je     0x459b88
  459b86:	dec    BYTE PTR [rsi]
  459b88:	or     BYTE PTR [rax],al
  459b8a:	js     0x459b8e
  459b8c:	add    ecx,DWORD PTR [rdi]
  459b8e:	or     BYTE PTR [rax],al
  459b90:	jl     0x459b94
  459b92:	or     BYTE PTR [rdi],cl
  459b94:	or     BYTE PTR [rax],al
  459b96:	add    BYTE PTR [rdx],0x28
  459b99:	add    BYTE PTR [rax],cl
  459b9b:	add    BYTE PTR [rdx+rax*1+0x80f0d],al
  459ba2:	mov    BYTE PTR [rdx],al
  459ba4:	or     eax,0xe0f
  459ba9:	add    ecx,DWORD PTR [rip+0x4000e10]        # 0x445a9bf
  459baf:	add    ebp,DWORD PTR [rax]
  459bb1:	adc    BYTE PTR [rsi],cl
  459bb3:	add    BYTE PTR [rax],cl
  459bb5:	add    edi,DWORD PTR [rdi]
  459bb7:	adc    BYTE PTR [rsi],cl
  459bb9:	add    BYTE PTR [rbx+rax*1],ch
  459bbc:	movabs ds:0x2e1c9c008b002e10,al
  459bc5:	add    BYTE PTR [rbx],dl
  459bc7:	add    BYTE PTR [rdx+0x1b],ah
  459bca:	add    BYTE PTR cs:[rbx],bl
  459bcd:	add    BYTE PTR [rbx+rbx*1+0x83002e],cl
  459bd4:	xchg   ebx,eax
  459bd5:	sbb    al,0x2e
  459bd7:	add    BYTE PTR [rbx+0x0],al
  459bda:	movabs ds:0x2e1bb4004b002e1b,eax
  459be3:	add    BYTE PTR [rbx+0x0],bh
  459be6:	in     al,dx
  459be7:	sbb    DWORD PTR [rsi],ebp
  459be9:	add    BYTE PTR [rbx],dh
  459beb:	add    BYTE PTR [rbx+rbx*1+0x3b002e],cl
  459bf2:	xchg   edx,eax
  459bf3:	sbb    ebp,DWORD PTR [rsi]
  459bf5:	add    BYTE PTR [rbx+0x0],bl
  459bf8:	out    0x1b,al
  459bfa:	add    BYTE PTR cs:[rbx],ch
  459bfd:	add    BYTE PTR [rbx+rbx*1+0x63002e],cl
  459c04:	xor    al,0x1c
  459c06:	add    BYTE PTR cs:[rbx+0x0],ch
  459c0a:	pop    rsi
  459c0b:	sbb    al,0x2e
  459c0d:	add    BYTE PTR [rbx+0x0],dh
  459c10:	js     0x459c2e
  459c12:	movsxd eax,DWORD PTR [rax]
  459c14:	xchg   ebx,eax
  459c15:	add    al,ah
  459c17:	(bad)  
  459c18:	add    DWORD PTR [rax],0xffffff93
  459c1b:	add    al,ah
  459c1d:	(bad)  
  459c1e:	movabs ds:0x9300a3124b00e300,eax
  459c27:	add    al,ah
  459c29:	(bad)  
  459c2a:	jrcxz  0x459c2f
  459c2c:	adc    eax,DWORD PTR [rcx]
  459c2e:	loopne 0x459c3e
  459c30:	jrcxz  0x459c35
  459c32:	jrcxz  0x459c34
  459c34:	mov    ds,WORD PTR [rcx]
  459c36:	jrcxz  0x459c3b
  459c38:	xchg   ebx,eax
  459c39:	add    al,ah
  459c3b:	(bad)  
  459c3c:	movabs ds:0x130a490ee0009304,eax
  459c45:	add    eax,esp
  459c47:	(bad)  
  459c48:	rex.WB or cl,BYTE PTR [r11]
  459c4b:	add    eax,esp
  459c4d:	(bad)  
  459c4e:	rex.WB or bl,BYTE PTR [r11]
  459c51:	add    DWORD PTR [rax+0x30e0912],edi
  459c57:	or     ch,ah
  459c59:	sbb    DWORD PTR [rcx],ebp
  459c5b:	(bad)  
  459c5c:	add    ecx,DWORD PTR [rdx]
  459c5e:	in     al,dx
  459c5f:	sbb    DWORD PTR [rcx+0xf],eax
  459c62:	xchg   ebx,eax
  459c63:	add    al,ah
  459c65:	(bad)  
  459c66:	movabs eax,ds:0xe310c10ee005e310
  459c6f:	add    eax,0x14000ee0
  459c74:	xchg   ebx,eax
  459c75:	add    al,ah
  459c77:	(bad)  
  459c78:	(bad)  
  459c79:	sbb    BYTE PTR [rbx-0x1ff12000],dl
  459c7f:	(bad)  
  459c80:	mov    bl,0x9
  459c82:	loopne 0x459c92
  459c84:	loopne 0x459cad
  459c86:	xchg   ebx,eax
  459c87:	add    al,ah
  459c89:	(bad)  
  459c8a:	xchg   DWORD PTR [rax],eax
  459c8c:	out    0x17,eax
  459c8e:	lea    eax,[rax]
  459c90:	out    0x17,eax
  459c92:	(bad)  
  459c93:	add    cl,bh
  459c95:	add    DWORD PTR [rax],eax
  459c97:	adc    eax,0x0
  459c9c:	xchg   ecx,eax
  459c9d:	add    BYTE PTR [rax],al
  459c9f:	add    BYTE PTR [rax],al
  459ca1:	add    BYTE PTR [rdx+0x200],dl
  459ca7:	add    BYTE PTR [rbx-0x1cedd700],dl
  459cad:	adc    al,0x5c
  459caf:	(bad)  
  459cb0:	xchg   ecx,eax
  459cb1:	(bad)  
  459cb2:	movabs ds:0xf16fd16eb16c616,al
  459cbb:	(bad)  
  459cbc:	push   rcx
  459cbd:	(bad)  
  459cbe:	jp     0x459cd7
  459cc0:	(bad)  
  459cc1:	(bad)  
  459cc2:	mov    edx,0xef17c717
  459cc7:	(bad)  
  459cc8:	std    
  459cc9:	(bad)  
  459cca:	adc    DWORD PTR [rax],ebx
  459ccc:	and    BYTE PTR [rax],bl
  459cce:	xor    DWORD PTR [rax],ebx
  459cd0:	fcomp  DWORD PTR [rax]
  459cd2:	adc    al,0x19
  459cd4:	sub    al,0x19
  459cd6:	cmp    ebx,DWORD PTR [rcx]
  459cd8:	push   rbp
  459cd9:	sbb    DWORD PTR [rcx+0x19],ebp
  459cdc:	test   BYTE PTR [rcx],bl
  459cde:	(bad)  
  459cdf:	sbb    ecx,esp
  459ce1:	sbb    DWORD PTR [rcx-0x35e559e6],eax
  459ce7:	sbb    dh,al
  459ce9:	sbb    cl,BYTE PTR [rax]
  459ceb:	sbb    edx,DWORD PTR [rdx]
  459ced:	sbb    ebx,DWORD PTR [rcx]
  459cef:	sbb    ecx,DWORD PTR [rbx+0x1b]
  459cf2:	push   rdi
  459cf3:	sbb    eax,DWORD PTR [rsi]
  459cf5:	add    BYTE PTR [rcx],al
  459cf7:	add    BYTE PTR [rbx],bl
  459cf9:	add    BYTE PTR [rdx],al
  459cfb:	add    BYTE PTR [rax],al
  459cfd:	add    BYTE PTR [rsi],al
  459cff:	adc    ecx,DWORD PTR [rcx+0x0]
  459d02:	add    BYTE PTR [rax],al
  459d04:	lods   eax,DWORD PTR ds:[rsi]
  459d05:	(bad)  
  459d06:	(bad)
  459d09:	add    BYTE PTR [rcx],al
  459d0b:	add    BYTE PTR [rbx],al
  459d0d:	add    BYTE PTR [rdx],al
  459d0f:	add    BYTE PTR [rax+rax*1],al
  459d12:	push   rax
  459d13:	add    BYTE PTR [rip+0x6005100],al        # 0x645ee19
  459d19:	add    BYTE PTR [rbx+0x0],dl
  459d1c:	or     BYTE PTR [rax],al
  459d1e:	push   rbp
  459d1f:	add    BYTE PTR [rcx],cl
  459d21:	add    BYTE PTR [rdx+0x0],bl
  459d24:	or     eax,DWORD PTR [rax]
  459d26:	pop    rbx
  459d27:	add    BYTE PTR [rip+0x15005f00],cl        # 0x1545fc2d
  459d2d:	add    BYTE PTR [rbx+0x0],ah
  459d30:	(bad)  
  459d31:	add    BYTE PTR [rbp+0x0],ah
  459d34:	(bad)  
  459d35:	add    BYTE PTR [rax+0x0],ch
  459d38:	sbb    BYTE PTR [rax],al
  459d3a:	push   0x0
  459d3c:	sbb    DWORD PTR [rax],eax
  459d3e:	imul   eax,DWORD PTR [rax],0x1b
  459d41:	add    BYTE PTR [rbp+0x0],ch
  459d44:	(bad)  
  459d45:	add    BYTE PTR [rax+0x0],dh
  459d48:	and    BYTE PTR [rax],al
  459d4a:	mov    WORD PTR [rax],es
  459d4c:	and    al,BYTE PTR [rax]
  459d4e:	mov    es,WORD PTR [rax]
  459d50:	add    BYTE PTR [rax],al
  459d52:	mov    eax,0x12704
  459d57:	add    BYTE PTR [rax],bl
  459d59:	or     al,0x3f
  459d5b:	add    DWORD PTR [rax],eax
  459d5d:	add    BYTE PTR [rax],ah
  459d5f:	or     al,0x27
  459d61:	add    DWORD PTR [rax],eax
  459d63:	add    BYTE PTR [rsi],ah
  459d65:	or     al,0x27
  459d67:	add    DWORD PTR [rax],eax
  459d69:	add    BYTE PTR [rsi],ch
  459d6b:	or     al,0x27
  459d6d:	add    DWORD PTR [rax],eax
  459d6f:	add    BYTE PTR [rip+0x1270c],bh        # 0x46c481
  459d75:	add    BYTE PTR [rbp+0xc],dl
  459d78:	(bad)  
  459d79:	add    DWORD PTR [rax],eax
  459d7b:	add    BYTE PTR [rdi+0xc],bl
  459d7e:	(bad)  
  459d7f:	add    DWORD PTR [rax],eax
  459d81:	add    BYTE PTR [rbx+0xc],ch
  459d84:	(bad)  
  459d85:	add    DWORD PTR [rax],eax
  459d87:	add    BYTE PTR [rcx+0x1270c],al
  459d8d:	add    BYTE PTR [rsp+rcx*1+0x127],dl
  459d94:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  459d95:	or     al,0x27
  459d97:	add    DWORD PTR [rax],eax
  459d99:	add    BYTE PTR [rdx+0x1270c],dh
  459d9f:	add    BYTE PTR [rdi+0x1270c],bh
  459da5:	add    bh,dl
  459da7:	or     al,0x27
  459da9:	add    DWORD PTR [rax],eax
  459dab:	add    ch,ch
  459dad:	or     al,0x27
  459daf:	add    DWORD PTR [rax],eax
  459db1:	add    BYTE PTR [rsi],cl
  459db3:	or     eax,0x127
  459db8:	and    DWORD PTR [rip+0x127],ecx        # 0x459ee5
  459dbe:	(bad)  
  459dbf:	or     eax,0x127
  459dc4:	rex.WRX or rax,0x127
  459dca:	push   0x1270d
  459dcf:	add    BYTE PTR [rcx+0xd],dh
  459dd2:	(bad)  
  459dd3:	add    DWORD PTR [rax],eax
  459dd5:	add    BYTE PTR [rbp+0x1270d],al
  459ddb:	add    BYTE PTR [rsi+0x1270d],cl
  459de1:	add    BYTE PTR [rdx+0x1270d],ah
  459de7:	add    BYTE PTR [rdi+0x1270d],dh
  459ded:	add    bh,dl
  459def:	or     eax,0x127
  459df4:	call   0x46c506
  459df9:	add    al,dh
  459dfb:	or     eax,0x127
  459e00:	add    ecx,DWORD PTR [rsi]
  459e02:	(bad)  
  459e03:	add    DWORD PTR [rax],eax
  459e05:	add    BYTE PTR [rbx],cl
  459e07:	(bad)  
  459e08:	(bad)  
  459e09:	add    DWORD PTR [rax],eax
  459e0b:	add    BYTE PTR [rsi],bl
  459e0d:	(bad)  
  459e0e:	(bad)  
  459e0f:	add    DWORD PTR [rax],eax
  459e11:	add    BYTE PTR [rsi],ch
  459e13:	(bad)  
  459e14:	(bad)  
  459e15:	add    DWORD PTR [rax],eax
  459e17:	add    BYTE PTR [rcx+0xe],cl
  459e1a:	(bad)  
  459e1b:	add    DWORD PTR [rax],eax
  459e1d:	add    BYTE PTR [rbp+0xe],bl
  459e20:	(bad)  
  459e21:	add    DWORD PTR [rax],eax
  459e23:	add    BYTE PTR [rsi+rcx*1+0x27],bh
  459e27:	add    DWORD PTR [rax],eax
  459e29:	add    BYTE PTR [rsi+rcx*1+0x127],cl
  459e30:	fwait
  459e31:	(bad)  
  459e32:	(bad)  
  459e33:	add    DWORD PTR [rax],eax
  459e35:	add    BYTE PTR [rbp+0x1270e],dh
  459e3b:	add    BYTE PTR [rsi+rcx*1+0x127],bh
  459e42:	(bad)  
  459e43:	(bad)  
  459e44:	(bad)  
  459e45:	add    DWORD PTR [rax],eax
  459e47:	add    al,bl
  459e49:	(bad)  
  459e4a:	(bad)  
  459e4b:	add    DWORD PTR [rax],eax
  459e4d:	add    al,ch
  459e4f:	(bad)  
  459e50:	(bad)  
  459e51:	add    DWORD PTR [rax],eax
  459e53:	add    BYTE PTR [rbx],al
  459e55:	(bad)  
  459e57:	add    DWORD PTR [rax],eax
  459e59:	add    BYTE PTR [rax],dl
  459e5b:	(bad)  
  459e5d:	add    DWORD PTR [rax],eax
  459e5f:	add    BYTE PTR [rax],ch
  459e61:	(bad)  
  459e63:	add    DWORD PTR [rax],eax
  459e65:	add    BYTE PTR [rsi],dh
  459e67:	(bad)  
  459e69:	add    DWORD PTR [rax],eax
  459e6b:	add    BYTE PTR [rsi],bh
  459e6d:	(bad)  
  459e6f:	add    DWORD PTR [rax],eax
  459e71:	add    BYTE PTR [rcx+0xf],dl
  459e74:	(bad)  
  459e75:	add    DWORD PTR [rax],eax
  459e77:	add    BYTE PTR [rdi+rcx*1+0x27],bl
  459e7b:	add    DWORD PTR [rax],eax
  459e7d:	add    BYTE PTR [rdx+0xf],dh
  459e80:	(bad)  
  459e81:	add    DWORD PTR [rax],eax
  459e83:	add    BYTE PTR [rdi+0xf],bh
  459e86:	(bad)  
  459e87:	add    DWORD PTR [rax],eax
  459e89:	add    BYTE PTR [rdi+0x1270f],dl
  459e8f:	add    BYTE PTR [rbx+0x1270f],ah
  459e95:	add    BYTE PTR [rdx+0x1270f],bh
  459e9b:	add    bl,al
  459e9d:	(bad)  
  459e9f:	add    DWORD PTR [rax],eax
  459ea1:	add    bh,dl
  459ea3:	(bad)  
  459ea5:	add    DWORD PTR [rax],eax
  459ea7:	add    bh,ah
  459ea9:	(bad)  
  459eab:	add    DWORD PTR [rax],eax
  459ead:	add    BYTE PTR [rdx],al
  459eaf:	adc    BYTE PTR [rdi],ah
  459eb1:	add    DWORD PTR [rax],eax
  459eb3:	add    BYTE PTR [rdi],dl
  459eb5:	adc    BYTE PTR [rdi],ah
  459eb7:	add    DWORD PTR [rax],eax
  459eb9:	add    BYTE PTR [rdi],dh
  459ebb:	adc    BYTE PTR [rdi],ah
  459ebd:	add    DWORD PTR [rax],eax
  459ebf:	add    BYTE PTR [rcx+0x10],al
  459ec2:	(bad)  
  459ec3:	add    DWORD PTR [rax],eax
  459ec5:	add    BYTE PTR [rsi+0x10],dl
  459ec8:	(bad)  
  459ec9:	add    DWORD PTR [rax],eax
  459ecb:	add    BYTE PTR [rdx+0x10],ah
  459ece:	(bad)  
  459ecf:	add    DWORD PTR [rax],eax
  459ed1:	add    BYTE PTR [rcx+0x10],bh
  459ed4:	(bad)  
  459ed5:	add    DWORD PTR [rax],eax
  459ed7:	add    BYTE PTR [rsi+0x12710],al
  459edd:	add    BYTE PTR [rbx+0x12710],ah
  459ee3:	add    bl,cl
  459ee5:	adc    BYTE PTR [rdi],ah
  459ee7:	add    DWORD PTR [rax],eax
  459ee9:	add    cl,ch
  459eeb:	adc    BYTE PTR [rdi],ah
  459eed:	add    DWORD PTR [rax],eax
  459eef:	add    BYTE PTR [rdx],dl
  459ef1:	adc    DWORD PTR [rdi],esp
  459ef3:	add    DWORD PTR [rax],eax
  459ef5:	add    BYTE PTR [rcx],ah
  459ef7:	adc    DWORD PTR [rdi],esp
  459ef9:	add    DWORD PTR [rax],eax
  459efb:	add    BYTE PTR [rbx],bh
  459efd:	adc    DWORD PTR [rdi],esp
  459eff:	add    DWORD PTR [rax],eax
  459f01:	add    BYTE PTR [rbx+0x11],al
  459f04:	(bad)  
  459f05:	add    DWORD PTR [rax],eax
  459f07:	add    BYTE PTR [rsi+0x11],dl
  459f0a:	(bad)  
  459f0b:	add    DWORD PTR [rax],eax
  459f0d:	add    BYTE PTR [rcx+0x11],ah
  459f10:	(bad)  
  459f11:	add    DWORD PTR [rax],eax
  459f13:	add    BYTE PTR [rdi+0x11],dh
  459f16:	(bad)  
  459f17:	add    DWORD PTR [rax],eax
  459f19:	add    BYTE PTR [rcx+rdx*1+0x127],cl
  459f20:	lods   al,BYTE PTR ds:[rsi]
  459f21:	adc    DWORD PTR [rdi],esp
  459f23:	add    DWORD PTR [rax],eax
  459f25:	add    BYTE PTR [rbx+0x12711],bh
  459f2b:	add    BYTE PTR [rax],bl
  459f2d:	or     al,0x3f
  459f2f:	add    DWORD PTR [rax],eax
  459f31:	add    BYTE PTR [rbp+0xcd512],bh
  459f37:	add    ch,al
  459f39:	adc    bl,dl
  459f3b:	or     al,0x0
  459f3d:	add    BYTE PTR [rbp+0xd0513],ah
  459f43:	add    BYTE PTR [rbp+0xd0513],ch
  459f49:	add    BYTE PTR [rbp+rdx*1+0x64],bl
  459f4d:	or     eax,0x15620000
  459f52:	(bad)  
  459f53:	add    DWORD PTR [rax],eax
  459f55:	add    BYTE PTR [rbp+rdx*1+0x27],ch
  459f59:	add    DWORD PTR [rax],eax
  459f5b:	add    BYTE PTR [rbp+0x15],dh
  459f5e:	imul   ecx,DWORD PTR [rip+0x15800000],0xd6e        # 0x15c59f68
  459f68:	rex.XB (bad) 
  459f6a:	add    eax,0x9a00000d
  459f6f:	sbb    BYTE PTR [rdx+0xe],ah
  459f72:	add    BYTE PTR [rax],al
  459f74:	movabs eax,ds:0x518ae00000d0518
  459f7d:	or     eax,0x18bb0000
  459f82:	(bad)  
  459f83:	(bad)  
  459f84:	add    BYTE PTR [rax],al
  459f86:	jmp    0x5401a4
  459f8b:	add    dl,dh
  459f8d:	sbb    DWORD PTR [rip+0x6000000d],eax        # 0x60459fa0
  459f93:	sbb    DWORD PTR [rdi+0x5c00000e],edi
  459f99:	adc    eax,0xec5
  459f9e:	in     al,0x1b
  459fa0:	(bad)  
  459fa1:	(bad)  
  459fa2:	add    BYTE PTR [rax],al
  459fa4:	in     eax,dx
  459fa5:	sbb    eax,DWORD PTR [rip+0xffffffff9400000d]        # 0xffffffff94459fb8
  459fab:	sbb    al,0x62
  459fad:	(bad)  
  459fae:	add    BYTE PTR [rax],al
  459fb0:	movabs ds:0x51cad00000e621c,al
  459fb9:	or     eax,0x1ce00000
  459fbe:	(bad)  
  459fbf:	(bad)  
  459fc0:	add    BYTE PTR [rax],al
  459fc2:	int3   
  459fc3:	sbb    al,0x4c
  459fc5:	sldt   WORD PTR [rax]
  459fc8:	int3   
  459fc9:	sbb    al,0x4c
  459fcb:	sldt   WORD PTR [rax]
  459fce:	loopne 0x459fec
  459fd0:	(bad)  
  459fd1:	(bad)  
  459fd2:	add    BYTE PTR [rax],al
  459fd4:	int3   
  459fd5:	sbb    al,0x4c
  459fd7:	sldt   WORD PTR [rax]
  459fda:	xor    al,0x20
  459fdc:	repnz sldt WORD PTR [rax]
  459fe0:	cmp    ah,BYTE PTR [rax]
  459fe2:	test   DWORD PTR [rdi],0x20480000
  459fe8:	sti    
  459fe9:	sldt   WORD PTR [rax]
  459fec:	out    0x11,al
  459fee:	imul   edx,DWORD PTR [rax],0x0
  459ff1:	add    BYTE PTR [rax],bl
  459ff3:	or     al,0x3f
  459ff5:	add    DWORD PTR [rax],eax
  459ff7:	add    al,dl
  459ff9:	and    dh,BYTE PTR [rax+0x10]
  459ffc:	add    BYTE PTR [rax],al
  459ffe:	jrcxz  0x45a022
  45a000:	jo     0x45a012
  45a002:	add    BYTE PTR [rax],al
  45a004:	hlt    
  45a005:	and    dh,BYTE PTR [rax+0x10]
  45a008:	add    BYTE PTR [rax],al
  45a00a:	stc    
  45a00b:	and    dh,BYTE PTR [rax+0x10]
  45a00e:	add    BYTE PTR [rax],al
  45a010:	or     BYTE PTR [rbx],ah
  45a012:	jo     0x45a024
  45a014:	add    BYTE PTR [rax],al
  45a016:	call   0x561028
  45a01b:	add    bl,cl
  45a01d:	adc    BYTE PTR [rax+0x10],dh
  45a020:	add    BYTE PTR [rax],al
  45a022:	adc    ah,BYTE PTR [rbx]
  45a024:	jo     0x45a036
  45a026:	add    BYTE PTR [rax],al
  45a028:	sub    ah,BYTE PTR [rbx]
  45a02a:	jo     0x45a03c
  45a02c:	add    BYTE PTR [rax],al
  45a02e:	cmp    al,0x23
  45a030:	jbe    0x45a042
  45a032:	add    BYTE PTR [rax],al
  45a034:	and    r14,QWORD PTR [rax+0x10]
  45a038:	add    BYTE PTR [rax],al
  45a03a:	(bad)  
  45a03b:	and    BYTE PTR [rsi+0x10],dh
  45a03e:	add    BYTE PTR [rax],al
  45a040:	pop    rbx
  45a041:	and    esi,DWORD PTR [rax+0x10]
  45a044:	add    BYTE PTR [rax],al
  45a046:	and    esi,DWORD PTR [eax+0x10]
  45a04a:	add    BYTE PTR [rax],al
  45a04c:	xchg   BYTE PTR [rbx],ah
  45a04e:	jo     0x45a060
  45a050:	add    BYTE PTR [rax],al
  45a052:	cwde   
  45a053:	and    esi,DWORD PTR [rax+0x10]
  45a056:	add    BYTE PTR [rax],al
  45a058:	mov    dl,0x23
  45a05a:	jo     0x45a06c
  45a05c:	add    BYTE PTR [rax],al
  45a05e:	ret    
  45a05f:	and    esi,DWORD PTR [rax+0x10]
  45a062:	add    BYTE PTR [rax],al
  45a064:	xlat   BYTE PTR ds:[rbx]
  45a065:	and    esi,DWORD PTR [rax+0x10]
  45a068:	add    BYTE PTR [rax],al
  45a06a:	in     al,0x23
  45a06c:	jo     0x45a07e
  45a06e:	add    BYTE PTR [rax],al
  45a070:	in     eax,dx
  45a071:	and    esi,DWORD PTR [rax+0x10]
  45a074:	add    BYTE PTR [rax],al
  45a076:	repz and esi,DWORD PTR [rax+0x10]
  45a07a:	add    BYTE PTR [rax],al
  45a07c:	add    ecx,DWORD PTR [rsi]
  45a07e:	jo     0x45a090
  45a080:	add    BYTE PTR [rax],al
  45a082:	(bad)  
  45a083:	or     eax,0x1070
  45a088:	add    DWORD PTR [rax+rsi*2],esp
  45a08b:	adc    BYTE PTR [rax],al
  45a08d:	add    BYTE PTR [rdx],bl
  45a08f:	and    al,0x70
  45a091:	adc    BYTE PTR [rax],al
  45a093:	add    ah,ah
  45a095:	sbb    esp,DWORD PTR [rdx+0xe]
  45a098:	add    BYTE PTR [rax],al
  45a09a:	(bad)  
  45a09b:	and    al,0x62
  45a09d:	(bad)  
  45a09e:	add    BYTE PTR [rax],al
  45a0a0:	int3   
  45a0a1:	sbb    al,0x4c
  45a0a3:	invd   
  45a0a5:	add    BYTE PTR [rcx+0x0],ah
  45a0a8:	add    al,BYTE PTR [rax]
  45a0aa:	adc    BYTE PTR [rax],al
  45a0ac:	(bad)  
  45a0ad:	add    BYTE PTR [rdx],al
  45a0af:	add    BYTE PTR [rdx],al
  45a0b1:	add    BYTE PTR [rcx],al
  45a0b3:	add    BYTE PTR [rbx],al
  45a0b5:	add    BYTE PTR [rax],cl
  45a0b7:	add    dl,ah
  45a0b9:	add    BYTE PTR [rax+rax*1],al
  45a0bc:	adc    BYTE PTR [rax],al
  45a0be:	jrcxz  0x45a0c0
  45a0c0:	add    al,0x0
  45a0c2:	add    DWORD PTR [rax],eax
  45a0c4:	add    al,0x0
  45a0c6:	add    eax,0x3000200
  45a0cb:	add    BYTE PTR [rip+0x5000200],al        # 0x545a2d1
  45a0d1:	add    BYTE PTR [rdi],al
  45a0d3:	add    BYTE PTR [rdx],al
  45a0d5:	add    BYTE PTR [rsi],al
  45a0d7:	add    BYTE PTR [rcx],cl
  45a0d9:	add    BYTE PTR [rdx],al
  45a0db:	add    BYTE PTR [rdi],al
  45a0dd:	add    BYTE PTR [rbx],cl
  45a0df:	add    BYTE PTR [rdx],al
  45a0e1:	add    BYTE PTR [rax],cl
  45a0e3:	add    BYTE PTR [rip+0x9000200],cl        # 0x945a2e9
  45a0e9:	add    BYTE PTR [rdi],cl
  45a0eb:	add    BYTE PTR [rdx],al
  45a0ed:	add    BYTE PTR [rdx],cl
  45a0ef:	add    BYTE PTR [rcx],dl
  45a0f1:	add    BYTE PTR [rdx],al
  45a0f3:	add    BYTE PTR [rbx],cl
  45a0f5:	add    BYTE PTR [rbx],dl
  45a0f7:	add    BYTE PTR [rdx],al
  45a0f9:	add    BYTE PTR [rax+rax*1],cl
  45a0fc:	adc    eax,0xd000200
  45a101:	add    BYTE PTR [rdi],dl
  45a103:	add    BYTE PTR [rdx],al
  45a105:	add    BYTE PTR [rsi],cl
  45a107:	add    BYTE PTR [rcx],bl
  45a109:	add    BYTE PTR [rdx],al
  45a10b:	add    BYTE PTR [rdi],cl
  45a10d:	add    BYTE PTR [rbx],bl
  45a10f:	add    BYTE PTR [rdx],al
  45a111:	add    BYTE PTR [rax],dl
  45a113:	add    BYTE PTR [rip+0x11000200],bl        # 0x1145a319
  45a119:	add    BYTE PTR [rdi],bl
  45a11b:	add    BYTE PTR [rdx],al
  45a11d:	add    BYTE PTR [rdx],dl
  45a11f:	add    BYTE PTR [rcx],ah
  45a121:	add    BYTE PTR [rdx],al
  45a123:	add    BYTE PTR [rbx],dl
  45a125:	add    BYTE PTR [rbx],ah
  45a127:	add    BYTE PTR [rdx],al
  45a129:	add    BYTE PTR [rax+rax*1],dl
  45a12c:	and    eax,0x15000200
  45a131:	add    BYTE PTR [rdi],ah
  45a133:	add    BYTE PTR [rdx],al
  45a135:	add    BYTE PTR [rsi],dl
  45a137:	add    BYTE PTR [rcx],ch
  45a139:	add    BYTE PTR [rdx],al
  45a13b:	add    BYTE PTR [rdi],dl
  45a13d:	add    BYTE PTR [rbx],ch
  45a13f:	add    BYTE PTR [rdx],al
  45a141:	add    BYTE PTR [rax],bl
  45a143:	add    BYTE PTR [rip+0x19000200],ch        # 0x1945a349
  45a149:	add    BYTE PTR [rdi],ch
  45a14b:	add    BYTE PTR [rdx],al
  45a14d:	add    BYTE PTR [rdx],bl
  45a14f:	add    BYTE PTR [rcx],dh
  45a151:	add    BYTE PTR [rdx],al
  45a153:	add    BYTE PTR [rbx],bl
  45a155:	add    BYTE PTR [rbx],dh
  45a157:	add    BYTE PTR [rdx],al
  45a159:	add    BYTE PTR [rax+rax*1],bl
  45a15c:	xor    eax,0x1d000200
  45a161:	add    BYTE PTR [rdi],dh
  45a163:	add    BYTE PTR [rdx],al
  45a165:	add    BYTE PTR [rsi],bl
  45a167:	add    BYTE PTR [rcx],bh
  45a169:	add    BYTE PTR [rdx],al
  45a16b:	add    BYTE PTR [rdi],bl
  45a16d:	add    BYTE PTR [rbx],bh
  45a16f:	add    BYTE PTR [rdx],al
  45a171:	add    BYTE PTR [rax],ah
  45a173:	add    BYTE PTR [rip+0x21000200],bh        # 0x2145a379
  45a179:	add    BYTE PTR [rdi],bh
  45a17b:	add    BYTE PTR [rdx],al
  45a17d:	add    BYTE PTR [rdx],ah
  45a17f:	add    BYTE PTR [rcx+0x0],al
  45a182:	add    al,BYTE PTR [rax]
  45a184:	and    eax,DWORD PTR [rax]
  45a186:	rex.XB add BYTE PTR [r10],al
  45a189:	add    BYTE PTR [rax+rax*1],ah
  45a18c:	add    BYTE PTR [r10],r8b
  45a18f:	add    BYTE PTR [rip+0x2004700],ah        # 0x245e895
  45a195:	add    BYTE PTR [rsi],ah
  45a197:	add    BYTE PTR [rcx+0x0],cl
  45a19a:	add    al,BYTE PTR [rax]
  45a19c:	(bad)  
  45a19d:	add    BYTE PTR [rbx+0x0],cl
  45a1a0:	add    al,BYTE PTR [rax]
  45a1a2:	sub    BYTE PTR [rax],al
  45a1a4:	rex.WRB add BYTE PTR [r10],r8b
  45a1a7:	add    BYTE PTR [rcx],ch
  45a1a9:	add    BYTE PTR [rdi+0x0],cl
  45a1ac:	add    al,BYTE PTR [rax]
  45a1ae:	sub    al,BYTE PTR [rax]
  45a1b0:	push   rcx
  45a1b1:	add    BYTE PTR [rdx],al
  45a1b3:	add    BYTE PTR [rbx],ch
  45a1b5:	add    BYTE PTR [rbx+0x0],dl
  45a1b8:	add    al,BYTE PTR [rax]
  45a1ba:	sub    al,0x0
  45a1bc:	push   rbp
  45a1bd:	add    BYTE PTR [rdx],al
  45a1bf:	add    BYTE PTR [rip+0x2005700],ch        # 0x245f8c5
  45a1c5:	add    BYTE PTR [rsi],ch
  45a1c7:	add    BYTE PTR [rcx+0x0],bl
  45a1ca:	add    al,BYTE PTR [rax]
  45a1cc:	(bad)  
  45a1cd:	add    BYTE PTR [rbx+0x0],bl
  45a1d0:	add    al,BYTE PTR [rax]
  45a1d2:	xor    BYTE PTR [rax],al
  45a1d4:	pop    rbp
  45a1d5:	add    BYTE PTR [rdx],al
  45a1d7:	add    BYTE PTR [rcx],dh
  45a1d9:	add    BYTE PTR [rdi+0x0],bl
  45a1dc:	add    al,BYTE PTR [rax]
  45a1de:	xor    al,BYTE PTR [rax]
  45a1e0:	(bad)  
  45a1e1:	add    BYTE PTR [rdx],al
  45a1e3:	add    BYTE PTR [rbx],dh
  45a1e5:	add    BYTE PTR [rbx+0x0],ah
  45a1e8:	add    al,BYTE PTR [rax]
  45a1ea:	xor    al,0x0
  45a1ec:	add    BYTE PTR gs:[rdx],al
  45a1ef:	add    BYTE PTR [rip+0x2006700],dh        # 0x24608f5
  45a1f5:	add    BYTE PTR [rsi],dh
  45a1f7:	add    BYTE PTR [rcx+0x0],ch
  45a1fa:	add    al,BYTE PTR [rax]
  45a1fc:	(bad)  
  45a1fd:	add    BYTE PTR [rbx+0x0],ch
  45a200:	add    al,BYTE PTR [rax]
  45a202:	cmp    BYTE PTR [rax],al
  45a204:	ins    DWORD PTR es:[rdi],dx
  45a205:	add    BYTE PTR [rdx],al
  45a207:	add    BYTE PTR [rcx],bh
  45a209:	add    BYTE PTR [rdi+0x0],ch
  45a20c:	add    al,BYTE PTR [rax]
  45a20e:	cmp    al,BYTE PTR [rax]
  45a210:	jno    0x45a212
  45a212:	add    al,BYTE PTR [rax]
  45a214:	cmp    eax,DWORD PTR [rax]
  45a216:	jae    0x45a218
  45a218:	add    al,BYTE PTR [rax]
  45a21a:	cmp    al,0x0
  45a21c:	jne    0x45a21e
  45a21e:	add    al,BYTE PTR [rax]
  45a220:	cmp    eax,0x2007700
  45a225:	add    BYTE PTR [rsi],bh
  45a227:	add    BYTE PTR [rcx+0x0],bh
  45a22a:	add    al,BYTE PTR [rax]
  45a22c:	(bad)  
  45a22d:	add    BYTE PTR [rbx+0x0],bh
  45a230:	add    al,BYTE PTR [rax]
  45a232:	add    BYTE PTR [rbp+0x0],dil
  45a236:	add    al,BYTE PTR [rax]
  45a238:	add    BYTE PTR [r15+0x0],dil
  45a23c:	add    al,BYTE PTR [rax]
  45a23e:	rex.X add BYTE PTR [rcx+0x43000200],al
  45a245:	add    BYTE PTR [rbx+0x44000200],al
  45a24b:	add    BYTE PTR [rbp+0x45000200],al
  45a251:	add    BYTE PTR [rdi+0x46000200],al
  45a257:	add    BYTE PTR [rcx+0x47000200],cl
  45a25d:	add    BYTE PTR [rbx+0x48000200],cl
  45a263:	add    BYTE PTR [rbp+0x49000200],cl
  45a269:	add    BYTE PTR [rdi+0x4a000200],cl
  45a26f:	add    BYTE PTR [rcx+0x4b000200],dl
  45a275:	add    BYTE PTR [rbx+0x4c000200],dl
  45a27b:	add    BYTE PTR [rbp+0x4d000200],dl
  45a281:	add    BYTE PTR [rdi+0x4e000200],dl
  45a287:	add    BYTE PTR [rcx+0x4f000200],bl
  45a28d:	add    BYTE PTR [rbx+0x50000200],bl
  45a293:	add    BYTE PTR [rbp+0x51000200],bl
  45a299:	add    BYTE PTR [rdi+0x55000200],bl
  45a29f:	add    BYTE PTR [rcx+0x56000100],ah
  45a2a5:	add    BYTE PTR [rcx+0x5a000200],ah
  45a2ab:	add    BYTE PTR [rbx+0x5c000100],ah
  45a2b1:	add    BYTE PTR [rbp+0x5b000200],ah
  45a2b7:	add    BYTE PTR [rbp+0x63000200],ah
  45a2bd:	add    BYTE PTR [rdi+0x64000100],ah
  45a2c3:	add    BYTE PTR [rdi+0x66000100],ah
  45a2c9:	add    BYTE PTR [rcx+0x65000200],ch
  45a2cf:	add    BYTE PTR [rcx+0x6e000200],ch
  45a2d5:	add    BYTE PTR [rbx+0x6f000200],ch
  45a2db:	add    BYTE PTR [rbp+0x70000200],ch
  45a2e1:	add    BYTE PTR [rdi+0x71000200],ch
  45a2e7:	add    BYTE PTR [rcx+0x72000200],dh
  45a2ed:	add    BYTE PTR [rbx+0x7f000200],dh
  45a2f3:	add    BYTE PTR [rbp-0x72fffe00],dh
  45a2f9:	add    BYTE PTR [rdi-0x71ffff00],dh
  45a2ff:	add    BYTE PTR [rdi-0x70fffe00],dh
  45a305:	add    BYTE PTR [rcx-0x6fffff00],bh
  45a30b:	add    BYTE PTR [rcx-0x6dffff00],bh
  45a311:	add    BYTE PTR [rbx-0x6efffe00],bh
  45a317:	add    BYTE PTR [rbx-0x6cfffe00],bh
  45a31d:	add    BYTE PTR [rbp-0x6bffff00],bh
  45a323:	add    BYTE PTR [rbp-0x57fffe00],bh
  45a329:	add    BYTE PTR [rdi-0x56fffe00],bh
  45a32f:	add    cl,al
  45a331:	add    BYTE PTR [rdx],al
  45a333:	add    BYTE PTR [rdx+0x200c300],ch
  45a339:	add    BYTE PTR [rbx+0x200c500],ch
  45a33f:	add    BYTE PTR [rbp+0x100c700],bh
  45a345:	add    BYTE PTR [rsi+0x200c700],bh
  45a34b:	add    BYTE PTR [rdi+0x100c900],bh
  45a351:	add    ch,al
  45a353:	add    bl,cl
  45a355:	add    BYTE PTR [rdx],al
  45a357:	add    ah,al
  45a359:	add    bl,cl
  45a35b:	add    BYTE PTR [rdx],al
  45a35d:	add    dh,al
  45a35f:	add    ch,cl
  45a361:	add    BYTE PTR [rcx],al
  45a363:	add    bh,al
  45a365:	add    ch,cl
  45a367:	add    BYTE PTR [rdx],al
  45a369:	add    cl,cl
  45a36b:	add    bh,cl
  45a36d:	add    BYTE PTR [rdx],al
  45a36f:	add    ch,cl
  45a371:	add    cl,dl
  45a373:	add    BYTE PTR [rcx],al
  45a375:	add    dh,cl
  45a377:	add    cl,dl
  45a379:	add    BYTE PTR [rdx],al
  45a37b:	add    bh,cl
  45a37d:	add    bl,dl
  45a37f:	add    BYTE PTR [rdx],al
  45a381:	add    cl,dl
  45a383:	add    ch,dl
  45a385:	add    BYTE PTR [rcx],al
  45a387:	add    cl,bl
  45a389:	add    bh,dl
  45a38b:	add    BYTE PTR [rdx],al
  45a38d:	add    al,bl
  45a38f:	add    bh,dl
  45a391:	add    BYTE PTR [rdx],al
  45a393:	add    dl,bl
  45a395:	add    cl,bl
  45a397:	add    BYTE PTR [rdx],al
  45a399:	add    ah,ah
  45a39b:	add    bl,bl
  45a39d:	add    BYTE PTR [rdx],al
  45a39f:	add    ch,ah
  45a3a1:	add    ch,bl
  45a3a3:	add    BYTE PTR [rcx],al
  45a3a5:	add    dh,ah
  45a3a7:	add    ch,bl
  45a3a9:	add    BYTE PTR [rcx],al
  45a3ab:	add    al,ch
  45a3ad:	add    bh,bl
  45a3af:	add    BYTE PTR [rdx],al
  45a3b1:	add    bh,ah
  45a3b3:	add    bh,bl
  45a3b5:	add    BYTE PTR [rdx],al
  45a3b7:	add    BYTE PTR [rcx],al
  45a3b9:	add    ecx,esp
  45a3bb:	add    BYTE PTR [rdx],al
  45a3bd:	add    BYTE PTR [rdx],al
  45a3bf:	add    ebx,esp
  45a3c1:	add    BYTE PTR [rcx],al
  45a3c3:	add    BYTE PTR [rbx],al
  45a3c5:	add    ebx,esp
  45a3c7:	add    BYTE PTR [rdx],al
  45a3c9:	add    BYTE PTR [rcx+rax*1],al
  45a3cc:	in     eax,0x0
  45a3ce:	add    al,BYTE PTR [rax]
  45a3d0:	add    eax,0x200e701
  45a3d5:	add    BYTE PTR [rsi],al
  45a3d7:	add    ecx,ebp
  45a3d9:	add    BYTE PTR [rdx],al
  45a3db:	add    BYTE PTR [rdi],al
  45a3dd:	add    ebx,ebp
  45a3df:	add    BYTE PTR [rdx],al
  45a3e1:	add    BYTE PTR [rax],cl
  45a3e3:	add    ebp,ebp
  45a3e5:	add    BYTE PTR [rdx],al
  45a3e7:	add    BYTE PTR [rcx],cl
  45a3e9:	add    edi,ebp
  45a3eb:	add    BYTE PTR [rdx],al
  45a3ed:	add    BYTE PTR [rdx],cl
  45a3ef:	add    ecx,esi
  45a3f1:	add    BYTE PTR [rdx],al
  45a3f3:	add    BYTE PTR [rbx],cl
  45a3f5:	add    ebx,esi
  45a3f7:	add    BYTE PTR [rdx],al
  45a3f9:	add    BYTE PTR [rcx+rax*1],cl
  45a3fc:	cmc    
  45a3fd:	add    BYTE PTR [rdx],al
  45a3ff:	add    BYTE PTR [rip+0x200f701],cl        # 0x2469b06
  45a405:	add    BYTE PTR [rsi],cl
  45a407:	add    ecx,edi
  45a409:	add    BYTE PTR [rdx],al
  45a40b:	add    BYTE PTR [rdi],cl
  45a40d:	add    ebx,edi
  45a40f:	add    BYTE PTR [rdx],al
  45a411:	add    BYTE PTR [rax],dl
  45a413:	add    ebp,edi
  45a415:	add    BYTE PTR [rdx],al
  45a417:	add    BYTE PTR [rcx],dl
  45a419:	add    edi,edi
  45a41b:	add    BYTE PTR [rdx],al
  45a41d:	add    BYTE PTR [rdx],dl
  45a41f:	add    DWORD PTR [rcx],eax
  45a421:	add    DWORD PTR [rdx],eax
  45a423:	add    BYTE PTR [rbx],dl
  45a425:	add    DWORD PTR [rbx],eax
  45a427:	add    DWORD PTR [rdx],eax
  45a429:	add    BYTE PTR [rcx+rax*1],dl
  45a42c:	add    eax,0x15000201
  45a431:	add    DWORD PTR [rdi],eax
  45a433:	add    DWORD PTR [rdx],eax
  45a435:	add    BYTE PTR [rsi],dl
  45a437:	add    DWORD PTR [rcx],ecx
  45a439:	add    DWORD PTR [rdx],eax
  45a43b:	add    BYTE PTR [rdi],dl
  45a43d:	add    DWORD PTR [rbx],ecx
  45a43f:	add    DWORD PTR [rdx],eax
  45a441:	add    BYTE PTR [rax],bl
  45a443:	add    DWORD PTR [rip+0x19000201],ecx        # 0x1945a64a
  45a449:	add    DWORD PTR [rdi],ecx
  45a44b:	add    DWORD PTR [rdx],eax
  45a44d:	add    BYTE PTR [rdx],bl
  45a44f:	add    DWORD PTR [rcx],edx
  45a451:	add    DWORD PTR [rdx],eax
  45a453:	add    BYTE PTR [rbx],bl
  45a455:	add    DWORD PTR [rbx],edx
  45a457:	add    DWORD PTR [rdx],eax
  45a459:	add    BYTE PTR [rcx+rax*1],bl
  45a45c:	adc    eax,0x1d000201
  45a461:	add    DWORD PTR [rdi],edx
  45a463:	add    DWORD PTR [rdx],eax
  45a465:	add    BYTE PTR [rsi],bl
  45a467:	add    DWORD PTR [rcx],ebx
  45a469:	add    DWORD PTR [rcx],eax
  45a46b:	add    BYTE PTR [rdi],bl
  45a46d:	add    DWORD PTR [rcx],ebx
  45a46f:	add    DWORD PTR [rdx],eax
  45a471:	add    BYTE PTR [rax],ah
  45a473:	add    DWORD PTR [rbx],ebx
  45a475:	add    DWORD PTR [rcx],eax
  45a477:	add    BYTE PTR [rcx],ah
  45a479:	add    DWORD PTR [rbx],ebx
  45a47b:	add    DWORD PTR [rdx],eax
  45a47d:	add    BYTE PTR [rcx],ch
  45a47f:	add    DWORD PTR [rip+0x68002301],ebx        # 0x6845c786
  45a485:	add    al,BYTE PTR [rbx]
  45a487:	add    BYTE PTR [rsi],cl
  45a489:	xor    cl,BYTE PTR [rdx]
  45a48b:	add    BYTE PTR [rbp-0x46e958ec],ch
  45a491:	(bad)  
  45a492:	jno    0x45a4ab
  45a494:	xlat   BYTE PTR ds:[rbx]
  45a495:	sbb    al,BYTE PTR [rax]
  45a497:	add    DWORD PTR [rbp+0x1],ebp
  45a49a:	sbb    r8b,BYTE PTR [r9]
  45a49d:	add    BYTE PTR [rax],al
  45a49f:	add    DWORD PTR [rdi+0x1],ebp
  45a4a2:	pop    rax
  45a4a3:	sbb    al,BYTE PTR [rcx]
  45a4a5:	add    BYTE PTR [rax+rax*4],al
  45a4a8:	add    BYTE PTR [rax],al
  45a4aa:	or     al,BYTE PTR [rax]
  45a4ac:	add    BYTE PTR [rax],al
  45a4ae:	add    BYTE PTR [rax],al
  45a4b0:	add    BYTE PTR [rax],al
  45a4b2:	add    DWORD PTR [rax],eax
  45a4b4:	add    BYTE PTR [rax],al
  45a4b6:	jbe    0x45a4c9
  45a4b8:	fsub   DWORD PTR [rdi]
  45a4ba:	add    BYTE PTR [rax],al
  45a4bc:	add    al,BYTE PTR [rax]
	...
  45a4c6:	add    BYTE PTR [rax],al
  45a4c8:	add    DWORD PTR [rax],eax
  45a4ca:	pop    rbp
  45a4cb:	add    al,BYTE PTR [rax]
  45a4cd:	add    BYTE PTR [rax],al
  45a4cf:	add    BYTE PTR [rdx],al
	...
  45a4d9:	add    BYTE PTR [rax],al
  45a4db:	add    BYTE PTR [rcx],al
  45a4dd:	add    BYTE PTR [rsi+0x2],ah
  45a4e0:	add    BYTE PTR [rax],al
  45a4e2:	add    BYTE PTR [rax],al
  45a4e4:	add    al,BYTE PTR [rax]
	...
  45a4ee:	add    BYTE PTR [rax],al
  45a4f0:	add    DWORD PTR [rax],eax
  45a4f2:	(bad)  
  45a4f3:	add    al,BYTE PTR [rax]
  45a4f5:	add    BYTE PTR [rax],al
  45a4f7:	add    BYTE PTR [rdx],cl
	...
  45a501:	add    BYTE PTR [rax],al
  45a503:	add    BYTE PTR [rcx],cl
  45a505:	or     eax,0x13b5
  45a50a:	add    BYTE PTR [rax],al
  45a50c:	add    al,BYTE PTR [rax]
	...
  45a516:	add    BYTE PTR [rax],al
  45a518:	push   rdx
  45a519:	movhps xmm3,QWORD PTR [rip+0x0]        # 0x45a520
  45a520:	or     al,BYTE PTR [rax]
	...
  45a52a:	add    BYTE PTR [rax],al
  45a52c:	or     DWORD PTR [rip+0x1d38],ecx        # 0x45c26a
  45a532:	add    BYTE PTR [rax],al
  45a534:	add    al,BYTE PTR [rax]
	...
  45a53e:	add    BYTE PTR [rax],al
  45a540:	add    DWORD PTR [rax],eax
  45a542:	(bad)  
  45a543:	and    al,0x0
  45a545:	add    BYTE PTR [rax],al
  45a547:	add    BYTE PTR [rax],al
  45a549:	add    BYTE PTR [rax],al
  45a54b:	add    BYTE PTR [rcx],al
  45a54d:	add    BYTE PTR [rax],al
  45a54f:	add    BYTE PTR [rsp+rdi*1+0x0],bl
  45a553:	add    al,al
  45a555:	and    DWORD PTR [rax],eax
  45a557:	add    BYTE PTR [rcx],al
  45a559:	add    BYTE PTR [rax],al
  45a55b:	add    BYTE PTR [rdi+0x1000003c],dl
  45a561:	(bad)  
  45a562:	add    BYTE PTR [rax],al
  45a564:	add    DWORD PTR [rax],eax
  45a566:	add    BYTE PTR [rax],al
  45a568:	loop   0x45a5a6
  45a56a:	add    BYTE PTR [rax],al
  45a56c:	shl    BYTE PTR [rdx+0x0],0x0
  45a570:	add    DWORD PTR [rax],eax
  45a572:	add    BYTE PTR [rax],al
  45a574:	sub    bh,BYTE PTR [rip+0xffffffffa2680000]        # 0xffffffffa2ada57a
  45a57a:	add    BYTE PTR [rax],al
  45a57c:	add    DWORD PTR [rax],eax
  45a57e:	add    BYTE PTR [rax],al
  45a580:	outs   dx,BYTE PTR ds:[rsi]
  45a581:	cmp    eax,0xa3200000
  45a586:	add    BYTE PTR [rax],al
  45a588:	add    DWORD PTR [rax],eax
  45a58a:	add    BYTE PTR [rax],al
  45a58c:	stos   DWORD PTR es:[rdi],eax
  45a58d:	cmp    eax,0xb2400000
  45a592:	add    BYTE PTR [rax],al
  45a594:	add    DWORD PTR [rax],eax
  45a596:	add    BYTE PTR [rax],al
  45a598:	lock cmp eax,0xe5680000
  45a59e:	add    al,0x0
  45a5a0:	add    DWORD PTR [rax],eax
  45a5a2:	add    BYTE PTR [rax],al
  45a5a4:	xor    bh,BYTE PTR [rsi]
  45a5a6:	add    BYTE PTR [rax],al
  45a5a8:	and    dh,ah
  45a5aa:	add    al,0x0
  45a5ac:	add    DWORD PTR [rax],eax
  45a5ae:	add    BYTE PTR [rax],al
  45a5b0:	ja     0x45a5f0
  45a5b2:	add    BYTE PTR [rax],al
  45a5b4:	add    al,0x0
  45a5b6:	add    eax,DWORD PTR [rax]
  45a5b8:	(bad)  
  45a5b9:	add    BYTE PTR [rsi],al
  45a5bb:	add    BYTE PTR [rax+rax*1],dl
  45a5be:	adc    eax,DWORD PTR [rax]
  45a5c0:	sbb    al,0x0
  45a5c2:	sbb    eax,DWORD PTR [rax]
  45a5c4:	sbb    eax,0x24001b00
  45a5c9:	add    BYTE PTR [rbx],ah
  45a5cb:	add    BYTE PTR [rip+0x2200],ah        # 0x45c7d1
  45a5d1:	add    BYTE PTR [rax],al
  45a5d3:	add    BYTE PTR [rax],al
  45a5d5:	cmp    al,0x4d
  45a5d7:	outs   dx,DWORD PTR ds:[rsi]
  45a5d8:	fs jne 0x45a647
  45a5db:	gs add BYTE PTR ds:[rcx+riz*2+0x6e],cl
  45a5e1:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x65676150
  45a5e9:	cs gs js 0x45a652
  45a5ed:	add    BYTE PTR [rcx+0x73],al
  45a5f0:	jae    0x45a657
  45a5f2:	ins    DWORD PTR es:[rdi],dx
  45a5f3:	(bad)  
  45a5f4:	ins    BYTE PTR es:[rdi],dx
  45a5f5:	jns    0x45a64d
  45a5f7:	gs jb  0x45a66d
  45a5fa:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f666e49
  45a601:	add    BYTE PTR [rbx+0x52],dl
  45a604:	add    BYTE PTR [rbp+0x69],cl
  45a607:	movsxd esi,DWORD PTR [rdx+0x6f]
  45a60a:	jae    0x45a67b
  45a60c:	data16 je 0x45a63d
  45a60f:	push   rbx
  45a610:	jno    0x45a67e
  45a612:	push   rbx
  45a613:	gs jb  0x45a68c
  45a616:	gs jb  0x45a647
  45a619:	rex.XB outs dx,DWORD PTR ds:[rsi]
  45a61b:	outs   dx,BYTE PTR ds:[rsi]
  45a61c:	imul   sp,WORD PTR [rdi+0x75],0x6172
  45a622:	je     0x45a68d
  45a624:	outs   dx,DWORD PTR ds:[rsi]
  45a625:	outs   dx,BYTE PTR ds:[rsi]
  45a626:	cs rex.WR (bad) 
  45a629:	outs   dx,BYTE PTR ds:[rsi]
  45a62a:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x65676150
  45a632:	add    BYTE PTR [rbx+0x65],cl
  45a635:	jns    0x45a6aa
  45a637:	add    BYTE PTR [rbx+0x65],dl
  45a63a:	je     0x45a6b0
  45a63c:	imul   ebp,DWORD PTR [rsi+0x67],0x694d0073
  45a643:	movsxd esi,DWORD PTR [rdx+0x6f]
  45a646:	jae    0x45a6b7
  45a648:	data16 je 0x45a679
  45a64b:	push   rbx
  45a64c:	jno    0x45a6ba
  45a64e:	push   rbx
  45a64f:	gs jb  0x45a6c8
  45a652:	gs jb  0x45a683
  45a655:	rex.XB outs dx,DWORD PTR ds:[rsi]
  45a657:	outs   dx,BYTE PTR ds:[rsi]
  45a658:	imul   sp,WORD PTR [rdi+0x75],0x6172
  45a65e:	je     0x45a6c9
  45a660:	outs   dx,DWORD PTR ds:[rsi]
  45a661:	outs   dx,BYTE PTR ds:[rsi]
  45a662:	cs rex.WR (bad) 
  45a665:	outs   dx,BYTE PTR ds:[rsi]
  45a666:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x65676150
  45a66e:	cs push rax
  45a670:	jb     0x45a6e1
  45a672:	jo     0x45a6d9
  45a674:	jb     0x45a6ea
  45a676:	imul   esp,DWORD PTR [rbp+0x73],0x6d6f4300
  45a67d:	ins    DWORD PTR es:[rdi],dx
  45a67e:	(bad)  
  45a67f:	outs   dx,BYTE PTR ds:[rsi]
  45a680:	add    BYTE PTR fs:[rsi+0x75],cl
  45a684:	ins    BYTE PTR es:[rdi],dx
  45a685:	ins    BYTE PTR es:[rdi],dx
  45a686:	rex.XB outs dx,DWORD PTR ds:[rsi]
  45a688:	ins    DWORD PTR es:[rdi],dx
  45a689:	ins    DWORD PTR es:[rdi],dx
  45a68a:	(bad)  
  45a68b:	outs   dx,BYTE PTR ds:[rsi]
  45a68c:	add    BYTE PTR fs:[rcx+riz*2+0x6e],cl
  45a691:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x65676150
  45a699:	rex.XB outs dx,DWORD PTR ds:[rsi]
  45a69b:	outs   dx,BYTE PTR ds:[rsi]
  45a69c:	je     0x45a703
  45a69e:	js     0x45a714
  45a6a0:	add    BYTE PTR [rcx+riz*2+0x6e],cl
  45a6a4:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x65676150
  45a6ac:	rex.XB outs dx,DWORD PTR ds:[rsi]
  45a6ae:	outs   dx,BYTE PTR ds:[rsi]
  45a6af:	je     0x45a723
  45a6b1:	outs   dx,DWORD PTR ds:[rsi]
  45a6b2:	ins    BYTE PTR es:[rdi],dx
  45a6b3:	add    BYTE PTR [rcx+riz*2+0x6e],cl
  45a6b7:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x65676150
  45a6bf:	rex.RX outs dx,DWORD PTR ds:[rsi]
  45a6c1:	jb     0x45a730
  45a6c3:	add    BYTE PTR [rcx+riz*2+0x75],cl
  45a6c7:	outs   dx,BYTE PTR ds:[rsi]
  45a6c8:	movsxd ebp,DWORD PTR [rax+0x53]
  45a6cb:	gs je  0x45a743
  45a6ce:	jo     0x45a713
  45a6d0:	outs   dx,DWORD PTR ds:[rsi]
  45a6d1:	ins    DWORD PTR es:[rdi],dx
  45a6d2:	ins    DWORD PTR es:[rdi],dx
  45a6d3:	(bad)  
  45a6d4:	outs   dx,BYTE PTR ds:[rsi]
  45a6d5:	add    BYTE PTR fs:[rcx+riz*2+0x75],cl
  45a6da:	outs   dx,BYTE PTR ds:[rsi]
  45a6db:	movsxd ebp,DWORD PTR [rax+0x53]
  45a6de:	gs je  0x45a756
  45a6e1:	jo     0x45a73a
  45a6e3:	imul   esi,DWORD PTR [rax+rbp*2+0x54],0x6c706d65
  45a6eb:	(bad)  
  45a6ec:	je     0x45a753
  45a6ee:	rex.XB outs dx,DWORD PTR ds:[rsi]
  45a6f0:	ins    DWORD PTR es:[rdi],dx
  45a6f1:	ins    DWORD PTR es:[rdi],dx
  45a6f2:	(bad)  
  45a6f3:	outs   dx,BYTE PTR ds:[rsi]
  45a6f4:	add    BYTE PTR fs:[rdi+rbp*2+0x63],cl
  45a6f9:	(bad)  
  45a6fa:	ins    BYTE PTR es:[rdi],dx
  45a6fb:	imul   edi,DWORD PTR [rdx+0x61],0x46656c62
  45a702:	imul   ebp,DWORD PTR [rbp+riz*2+0x0],0x444e4957
  45a70a:	rex.WRXB push r15
  45a70c:	push   rax
  45a70d:	rex.WR
  45a70e:	rex.B
  45a70f:	rex.XB
  45a710:	rex.RB
  45a711:	rex.WRB
  45a712:	rex.RB
  45a713:	rex.WRX push rsp
  45a715:	add    BYTE PTR [rax+0x4f],dl
  45a718:	rex.WB
  45a719:	rex.WRX push rsp
  45a71b:	add    BYTE PTR [rdx+0x45],dl
  45a71e:	rex.XB push r12
  45a720:	add    BYTE PTR [rax+0x52],dl
  45a723:	rex.WRXB
  45a724:	rex.XB
  45a725:	rex.RB push r11
  45a727:	push   rbx
  45a728:	rex.WRXB push r10
  45a72a:	pop    rdi
  45a72b:	rex.WB
  45a72c:	rex.WRX
  45a72d:	rex.RX
  45a72e:	rex.WRXB add BYTE PTR [r14+0x61],r9b
  45a732:	je     0x45a79d
  45a734:	jbe    0x45a79b
  45a736:	rex.XB outs dx,DWORD PTR ds:[rsi]
  45a738:	outs   dx,BYTE PTR ds:[rsi]
  45a739:	jae    0x45a7af
  45a73b:	(bad)  
  45a73c:	outs   dx,BYTE PTR ds:[rsi]
  45a73d:	je     0x45a7b2
  45a73f:	add    BYTE PTR [rsi+0x61],cl
  45a742:	je     0x45a7ad
  45a744:	jbe    0x45a7ab
  45a746:	rex.WRB
  45a747:	gs je  0x45a7b2
  45a74a:	outs   dx,DWORD PTR ds:[rsi]
  45a74b:	fs jae 0x45a74e
  45a74e:	rex.X jb 0x45a7c0
  45a751:	ja     0x45a7c6
  45a753:	gs rex.XB (bad) 
  45a756:	ins    BYTE PTR es:[rdi],dx
  45a757:	ins    BYTE PTR es:[rdi],dx
  45a758:	(bad)  
  45a75a:	movsxd ebp,DWORD PTR [rbx+0x50]
  45a75d:	jb     0x45a7ce
  45a75f:	movsxd eax,DWORD PTR [rax]
  45a761:	rex.WRXB jo 0x45a7c9
  45a764:	outs   dx,BYTE PTR ds:[rsi]
  45a765:	imul   r13d,DWORD PTR [rbp+r12*2+0x43],0x616d6d6f
  45a76e:	outs   dx,BYTE PTR ds:[rsi]
  45a76f:	add    BYTE PTR fs:[rdi+0x70],cl
  45a773:	outs   dx,BYTE PTR gs:[rsi]
  45a775:	rex.RX outs dx,DWORD PTR ds:[rsi]
  45a777:	ins    BYTE PTR es:[rdi],dx
  45a778:	fs gs jb 0x45a7bf
  45a77c:	outs   dx,DWORD PTR ds:[rsi]
  45a77d:	ins    DWORD PTR es:[rdi],dx
  45a77e:	ins    DWORD PTR es:[rdi],dx
  45a77f:	(bad)  
  45a780:	outs   dx,BYTE PTR ds:[rsi]
  45a781:	add    BYTE PTR fs:[rcx+0x50],cl
  45a785:	(bad)  
  45a786:	add    BYTE PTR gs:[edi+0x70],cl
  45a78b:	je     0x45a7f6
  45a78d:	outs   dx,DWORD PTR ds:[rsi]
  45a78e:	outs   dx,BYTE PTR ds:[rsi]
  45a78f:	jae    0x45a7e1
  45a791:	(bad)  
  45a792:	add    BYTE PTR gs:[eax+0x61],dl
  45a797:	add    BYTE PTR gs:[eax+0x61],dl
  45a79c:	addr32 gs push rbx
  45a79f:	gs jo  0x45a803
  45a7a2:	jb     0x45a805
  45a7a4:	je     0x45a815
  45a7a6:	jb     0x45a7a8
  45a7a8:	push   rax
  45a7a9:	(bad)  
  45a7aa:	addr32 gs push rbx
  45a7ad:	ja     0x45a818
  45a7af:	je     0x45a814
  45a7b1:	push   0x50007265
  45a7b6:	(bad)  
  45a7b7:	addr32 gs push rbx
  45a7ba:	ja     0x45a825
  45a7bc:	je     0x45a821
  45a7be:	push   0x65527265
  45a7c3:	outs   dx,BYTE PTR ds:[rsi]
  45a7c4:	fs gs jb 0x45a82d
  45a7c8:	jb     0x45a7ca
  45a7ca:	push   rax
  45a7cb:	(bad)  
  45a7cc:	rex.XB outs dx,DWORD PTR gs:[esi]
  45a7d0:	ins    BYTE PTR es:[rdi],dx
  45a7d1:	ins    BYTE PTR es:[rdi],dx
  45a7d2:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  45a7d7:	outs   dx,BYTE PTR ds:[rsi]
  45a7d8:	add    BYTE PTR [rax+0x72],dl
  45a7db:	outs   dx,DWORD PTR ds:[rsi]
  45a7dc:	addr32 jb 0x45a840
  45a7df:	ins    DWORD PTR es:[rdi],dx
  45a7e0:	add    BYTE PTR [rdx+0x65],dl
  45a7e3:	jae    0x45a854
  45a7e5:	jne    0x45a859
  45a7e7:	movsxd esp,DWORD PTR [rbp+0x73]
  45a7ea:	add    BYTE PTR [rbx+0x68],dl
  45a7ed:	outs   dx,DWORD PTR ds:[rsi]
  45a7ee:	ja     0x45a838
  45a7f0:	gs ins BYTE PTR es:[rdi],dx
  45a7f2:	jo     0x45a837
  45a7f4:	outs   dx,DWORD PTR ds:[rsi]
  45a7f5:	ins    DWORD PTR es:[rdi],dx
  45a7f6:	ins    DWORD PTR es:[rdi],dx
  45a7f7:	(bad)  
  45a7f8:	outs   dx,BYTE PTR ds:[rsi]
  45a7f9:	add    BYTE PTR fs:[rbx+0x68],dl
  45a7fd:	outs   dx,DWORD PTR ds:[rsi]
  45a7fe:	ja     0x45a857
  45a800:	(bad)  
  45a801:	imul   esi,DWORD PTR [rbx+rax*2+0x75],0x726f7372
  45a809:	add    BYTE PTR [rbx+0x74],dl
  45a80c:	(bad)  
  45a80d:	outs   dx,BYTE PTR ds:[rsi]
  45a80e:	fs (bad) 
  45a810:	jb     0x45a876
  45a812:	push   rax
  45a813:	(bad)  
  45a814:	add    BYTE PTR gs:[eax+0x6d],bl
  45a819:	ins    BYTE PTR es:[rdi],dx
  45a81a:	rex.WR outs dx,DWORD PTR ds:[rsi]
  45a81c:	(bad)  
  45a81d:	fs gs jb 0x45a821
  45a821:	push   rax
  45a822:	(bad)  
  45a823:	rex.XB outs dx,DWORD PTR gs:[esi]
  45a827:	outs   dx,BYTE PTR ds:[rsi]
  45a828:	jae    0x45a89e
  45a82a:	jb     0x45a8a1
  45a82c:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
  45a830:	add    BYTE PTR [rbp+0x73],ch
  45a833:	movsxd ebp,DWORD PTR [rdi+0x72]
  45a836:	ins    BYTE PTR es:[rdi],dx
  45a837:	imul   esp,DWORD PTR [rdx+0x0],0x74737953
  45a83e:	gs ins DWORD PTR es:[rdi],dx
  45a840:	add    BYTE PTR [rdi+0x62],cl
  45a843:	push   0x65
  45a845:	movsxd esi,DWORD PTR [rax+rax*1+0x53]
  45a849:	jns    0x45a8be
  45a84b:	je     0x45a8b2
  45a84d:	ins    DWORD PTR es:[rdi],dx
  45a84e:	rex.XB outs dx,DWORD PTR cs:[rsi]
  45a851:	outs   dx,BYTE PTR ds:[rsi]
  45a852:	imul   sp,WORD PTR [rdi+0x75],0x6172
  45a858:	je     0x45a8c3
  45a85a:	outs   dx,DWORD PTR ds:[rsi]
  45a85b:	outs   dx,BYTE PTR ds:[rsi]
  45a85c:	add    BYTE PTR [rcx+0x70],al
  45a85f:	jo     0x45a8cd
  45a861:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
  45a868:	push   rbx
  45a869:	gs je  0x45a8e0
  45a86c:	imul   ebp,DWORD PTR [rsi+0x67],0x73614273
  45a873:	add    BYTE PTR gs:[rbx+0x79],dl
  45a877:	jae    0x45a8ed
  45a879:	gs ins DWORD PTR es:[rdi],dx
  45a87b:	rex.XB outs dx,DWORD PTR cs:[rsi]
  45a87e:	ins    DWORD PTR es:[rdi],dx
  45a87f:	jo     0x45a8f0
  45a881:	outs   dx,BYTE PTR ds:[rsi]
  45a882:	outs   dx,BYTE PTR gs:[rsi]
  45a884:	je     0x45a8d3
  45a886:	outs   dx,DWORD PTR ds:[rsi]
  45a887:	fs gs ins BYTE PTR es:[rdi],dx
  45a88a:	add    BYTE PTR [rcx+0x4e],cl
  45a88d:	outs   dx,DWORD PTR ds:[rsi]
  45a88e:	je     0x45a8f9
  45a890:	data16 jns 0x45a8e3
  45a893:	jb     0x45a904
  45a895:	jo     0x45a8fc
  45a897:	jb     0x45a90d
  45a899:	jns    0x45a8de
  45a89b:	push   0x65676e61
  45a8a0:	add    BYTE PTR fs:[rbx+0x79],dl
  45a8a4:	jae    0x45a91a
  45a8a6:	gs ins DWORD PTR es:[rdi],dx
  45a8a8:	cs push rdi
  45a8aa:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  45a8b1:	rex.RX outs dx,DWORD PTR ds:[rsi]
  45a8b3:	jb     0x45a922
  45a8b5:	jae    0x45a8b7
  45a8b7:	rex.B jo 0x45a92a
  45a8ba:	ins    BYTE PTR es:[rdi],dx
  45a8bb:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
  45a8c2:	rex.XB outs dx,DWORD PTR ds:[rsi]
  45a8c4:	outs   dx,BYTE PTR ds:[rsi]
  45a8c5:	je     0x45a92c
  45a8c7:	js     0x45a93d
  45a8c9:	add    BYTE PTR [rbx+0x6f],al
  45a8cc:	outs   dx,BYTE PTR ds:[rsi]
  45a8cd:	je     0x45a930
  45a8cf:	imul   ebp,DWORD PTR [rsi+0x65],0x6e6f4372
  45a8d6:	je     0x45a94a
  45a8d8:	outs   dx,DWORD PTR ds:[rsi]
  45a8d9:	ins    BYTE PTR es:[rdi],dx
  45a8da:	add    BYTE PTR [rsi+0x6f],al
  45a8dd:	jb     0x45a94c
  45a8df:	add    BYTE PTR [rsi+0x61],dl
  45a8e2:	ins    BYTE PTR es:[rdi],dx
  45a8e3:	jne    0x45a94a
  45a8e5:	push   rsp
  45a8e6:	jns    0x45a958
  45a8e8:	add    BYTE PTR gs:[rbp+0x75],cl
  45a8ec:	ins    BYTE PTR es:[rdi],dx
  45a8ed:	je     0x45a958
  45a8ef:	movsxd esp,DWORD PTR [rcx+0x73]
  45a8f2:	je     0x45a938
  45a8f4:	gs ins BYTE PTR es:[rdi],dx
  45a8f6:	gs addr32 (bad) 
  45a8f9:	je     0x45a960
  45a8fb:	add    BYTE PTR [rbp+0x73],dl
  45a8fe:	gs jb  0x45a944
  45a901:	outs   dx,DWORD PTR ds:[rsi]
  45a902:	outs   dx,BYTE PTR ds:[rsi]
  45a903:	je     0x45a977
  45a905:	outs   dx,DWORD PTR ds:[rsi]
  45a906:	ins    BYTE PTR es:[rdi],dx
  45a907:	add    BYTE PTR [rbx+0x6f],al
  45a90a:	ins    DWORD PTR es:[rdi],dx
  45a90b:	jo     0x45a97c
  45a90d:	outs   dx,BYTE PTR ds:[rsi]
  45a90e:	outs   dx,BYTE PTR gs:[rsi]
  45a910:	je     0x45a912
  45a912:	push   rsp
  45a913:	outs   dx,DWORD PTR ds:[rsi]
  45a914:	outs   dx,DWORD PTR ds:[rsi]
  45a915:	ins    BYTE PTR es:[rdi],dx
  45a916:	push   rbx
  45a917:	je     0x45a98b
  45a919:	imul   esi,DWORD PTR [rax+0x50],0x65666f72
  45a920:	jae    0x45a995
  45a922:	imul   ebp,DWORD PTR [rdi+0x6e],0x65526c61
  45a929:	outs   dx,BYTE PTR ds:[rsi]
  45a92a:	fs gs jb 0x45a993
  45a92e:	jb     0x45a930
  45a930:	push   rbx
  45a931:	jns    0x45a9a6
  45a933:	je     0x45a99a
  45a935:	ins    DWORD PTR es:[rdi],dx
  45a936:	rex.XB outs dx,DWORD PTR cs:[rsi]
  45a939:	ins    BYTE PTR es:[rdi],dx
  45a93a:	ins    BYTE PTR es:[rdi],dx
  45a93b:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  45a940:	outs   dx,BYTE PTR ds:[rsi]
  45a941:	jae    0x45a971
  45a943:	rex.WRXB (bad) 
  45a945:	push   0x65
  45a947:	movsxd esi,DWORD PTR [rbp+rcx*2+0x6f]
  45a94b:	fs gs ins BYTE PTR es:[rdi],dx
  45a94e:	add    BYTE PTR [rbx+0x6f],al
  45a951:	ins    BYTE PTR es:[rdi],dx
  45a952:	ins    BYTE PTR es:[rdi],dx
  45a953:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  45a958:	outs   dx,BYTE PTR ds:[rsi]
  45a959:	(bad)  
  45a95a:	xor    DWORD PTR [rax],eax
  45a95c:	rex.WB
  45a95d:	imul   r14d,DWORD PTR [rbx+0x70],0x6261736f
  45a965:	ins    BYTE PTR es:[rdi],dx
  45a966:	add    BYTE PTR gs:[rsi+0x65],dl
  45a96a:	jb     0x45a9df
  45a96c:	imul   ebp,DWORD PTR [rdi+0x6e],0x69727453
  45a973:	outs   dx,BYTE PTR ds:[rsi]
  45a974:	add    BYTE PTR [ebp+0x61],cl
  45a978:	push   0x6f
  45a97a:	jb     0x45a9d2
  45a97c:	gs jb  0x45a9f2
  45a97f:	imul   ebp,DWORD PTR [rdi+0x6e],0x69754200
  45a986:	ins    BYTE PTR es:[rdi],dx
  45a987:	fs push rsi
  45a989:	gs jb  0x45a9ff
  45a98c:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f725000
  45a993:	fs jne 0x45a9f9
  45a996:	je     0x45a9ee
  45a998:	gs jb  0x45aa0e
  45a99b:	imul   ebp,DWORD PTR [rdi+0x6e],0x69727453
  45a9a2:	outs   dx,BYTE PTR ds:[rsi]
  45a9a3:	add    BYTE PTR [eax+0x72],dl
  45a9a7:	outs   dx,DWORD PTR ds:[rsi]
  45a9a8:	fs jne 0x45aa0e
  45a9ab:	je     0x45a9fb
  45a9ad:	(bad)  
  45a9ae:	ins    DWORD PTR es:[rdi],dx
  45a9af:	gs push rbx
  45a9b1:	je     0x45aa25
  45a9b3:	imul   ebp,DWORD PTR [rsi+0x67],0x6f725000
  45a9ba:	fs jne 0x45aa20
  45a9bd:	je     0x45aa0d
  45a9bf:	(bad)  
  45a9c0:	ins    DWORD PTR es:[rdi],dx
  45a9c1:	gs rex.X jb 0x45aa26
  45a9c5:	outs   dx,BYTE PTR ds:[rsi]
  45a9c6:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x69727453
  45a9ce:	outs   dx,BYTE PTR ds:[rsi]
  45a9cf:	add    BYTE PTR [esi+0x65],dl
  45a9d3:	jb     0x45aa48
  45a9d5:	imul   ebp,DWORD PTR [rdi+0x6e],0x61636f4c
  45a9dc:	je     0x45aa47
  45a9de:	outs   dx,DWORD PTR ds:[rsi]
  45a9df:	outs   dx,BYTE PTR ds:[rsi]
  45a9e0:	push   rbx
  45a9e1:	je     0x45aa55
  45a9e3:	imul   ebp,DWORD PTR [rsi+0x67],0x72655600
  45a9ea:	jae    0x45aa55
  45a9ec:	outs   dx,DWORD PTR ds:[rsi]
  45a9ed:	outs   dx,BYTE PTR ds:[rsi]
  45a9ee:	rex.W
  45a9ef:	gs ins BYTE PTR es:[rdi],dx
  45a9f1:	jo     0x45aa3e
  45a9f3:	gs jns 0x45aa6d
  45a9f6:	outs   dx,DWORD PTR ds:[rsi]
  45a9f7:	jb     0x45aa5d
  45a9f9:	push   rax
  45a9fa:	jb     0x45aa61
  45a9fc:	imul   di,WORD PTR [rax+0x0],0x6556
  45aa02:	jb     0x45aa77
  45aa04:	imul   ebp,DWORD PTR [rdi+0x6e],0x706c6548
  45aa0b:	push   rbx
  45aa0c:	gs je  0x45aa83
  45aa0f:	imul   ebp,DWORD PTR [rsi+0x67],0x6b6f5473
  45aa16:	outs   dx,BYTE PTR gs:[rsi]
  45aa18:	add    BYTE PTR [rbx+0x65],dl
  45aa1b:	je     0x45aa92
  45aa1d:	jo     0x45aa72
  45aa1f:	jne    0x45aa91
  45aa21:	jo     0x45aa92
  45aa23:	jb     0x45aa99
  45aa25:	rex.RX outs dx,DWORD PTR ds:[rsi]
  45aa27:	ins    BYTE PTR es:[rdi],dx
  45aa28:	fs gs jb 0x45aa2c
  45aa2c:	gs jbe 0x45aa90
  45aa2f:	ins    BYTE PTR es:[rdi],dx
  45aa30:	push   rsp
  45aa31:	imul   ebp,DWORD PTR [rbp+0x65],0x626d6f42
  45aa38:	push   rsi
  45aa39:	(bad)  
  45aa3a:	ins    BYTE PTR es:[rdi],dx
  45aa3b:	jne    0x45aaa2
  45aa3d:	add    BYTE PTR [rbx+0x75],ah
  45aa40:	jb     0x45aab4
  45aa42:	outs   dx,BYTE PTR gs:[rsi]
  45aa44:	je     0x45aa98
  45aa46:	gs ins BYTE PTR es:[rdi],dx
  45aa48:	gs (bad) 
  45aa4a:	jae    0x45aab1
  45aa4c:	push   rsp
  45aa4d:	imul   ebp,DWORD PTR [rbp+0x65],0x626d6f42
  45aa54:	push   rsi
  45aa55:	(bad)  
  45aa56:	ins    BYTE PTR es:[rdi],dx
  45aa57:	jne    0x45aabe
  45aa59:	add    BYTE PTR [rsi+0x65],dl
  45aa5c:	jb     0x45aad1
  45aa5e:	imul   ebp,DWORD PTR [rdi+0x6e],0x53444942
  45aa65:	rex.W
  45aa66:	gs ins BYTE PTR es:[rdi],dx
  45aa68:	jo     0x45aab8
  45aa6a:	(bad)  
  45aa6b:	ins    DWORD PTR es:[rdi],dx
  45aa6c:	gs jae 0x45aadf
  45aa6f:	(bad)  
  45aa70:	movsxd esp,DWORD PTR [rbp+0x0]
  45aa73:	addr32 gs je 0x45aad6
  45aa77:	push   rsi
  45aa78:	gs jb  0x45aaee
  45aa7b:	imul   ebp,DWORD PTR [rdi+0x6e],0x706c6548
  45aa82:	rex.WRX (bad) 
  45aa84:	ins    DWORD PTR es:[rdi],dx
  45aa85:	gs jae 0x45aaf8
  45aa88:	(bad)  
  45aa89:	movsxd esp,DWORD PTR [rbp+0x0]
  45aa8c:	push   rsi
  45aa8d:	gs jb  0x45ab03
  45aa90:	imul   ebp,DWORD PTR [rdi+0x6e],0x706c6548
  45aa97:	rex.WRX (bad) 
  45aa99:	ins    DWORD PTR es:[rdi],dx
  45aa9a:	gs jae 0x45ab0d
  45aa9d:	(bad)  
  45aa9e:	movsxd esp,DWORD PTR [rbp+0x0]
  45aaa1:	movsxd esi,DWORD PTR cs:[rdi+rbp*2+0x72]
  45aaa6:	add    BYTE PTR [rbx+0x79],dl
  45aaa9:	jae    0x45ab1f
  45aaab:	gs ins DWORD PTR es:[rdi],dx
  45aaad:	cs rex.RXB ins BYTE PTR es:[rdi],dx
  45aab0:	outs   dx,DWORD PTR ds:[rsi]
  45aab1:	(bad)
  45aab6:	(bad)  
  45aab7:	je     0x45ab22
  45aab9:	outs   dx,DWORD PTR ds:[rsi]
  45aaba:	outs   dx,BYTE PTR ds:[rsi]
  45aabb:	add    BYTE PTR [rbx+0x75],al
  45aabe:	ins    BYTE PTR es:[rdi],dx
  45aabf:	je     0x45ab36
  45aac1:	jb     0x45ab28
  45aac3:	rex.WB outs dx,BYTE PTR ds:[rsi]
  45aac5:	outs   dx,WORD PTR ds:[rsi]
  45aac7:	add    BYTE PTR [rdi+0x65],ah
  45aaca:	je     0x45ab2b
  45aacc:	rex.XB jne 0x45ab3b
  45aacf:	je     0x45ab46
  45aad1:	jb     0x45ab38
  45aad3:	add    BYTE PTR [rbx+0x65],dh
  45aad6:	je     0x45ab37
  45aad8:	rex.XB jne 0x45ab47
  45aadb:	je     0x45ab52
  45aadd:	jb     0x45ab44
  45aadf:	add    BYTE PTR [rdi+0x65],ah
  45aae2:	je     0x45ab43
  45aae4:	push   rsp
  45aae5:	imul   esi,DWORD PTR [rsp+rbp*2+0x65],0x74656700
  45aaed:	pop    rdi
  45aaee:	rex.WRXB jo 0x45ab65
  45aaf1:	imul   ebp,DWORD PTR [rdi+0x6e],0x65670073
  45aaf8:	je     0x45ab59
  45aafa:	rex.X jb 0x45ab6c
  45aafd:	ja     0x45ab72
  45aaff:	rex.RX outs dx,DWORD PTR gs:[rsi]
  45ab02:	jb     0x45ab51
  45ab04:	gs imul esp,DWORD PTR fs:[rcx+0x0],0x5f746567
  45ab0d:	rex.WRXB jo 0x45ab84
  45ab10:	imul   ebp,DWORD PTR [rdi+0x6e],0x67615073
  45ab17:	rex.WB outs dx,BYTE PTR gs:[rsi]
  45ab1a:	jae    0x45ab90
  45ab1c:	jb     0x45ab93
  45ab1e:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  45ab22:	outs   dx,BYTE PTR ds:[rsi]
  45ab23:	jae    0x45ab25
  45ab25:	addr32 gs je 0x45ab88
  45ab29:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  45ab2b:	rex.XB jo 0x45aba3
  45ab2e:	push   rsp
  45ab2f:	jns    0x45aba1
  45ab31:	add    BYTE PTR gs:[rdi+0x65],ah
  45ab35:	je     0x45ab96
  45ab37:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  45ab39:	push   rax
  45ab3a:	jb     0x45abab
  45ab3c:	movsxd esp,DWORD PTR [rbp+0x73]
  45ab3f:	jae    0x45abb0
  45ab41:	jb     0x45ab43
  45ab43:	addr32 gs je 0x45aba6
  45ab47:	push   rax
  45ab48:	jb     0x45abb9
  45ab4a:	movsxd esp,DWORD PTR [rbp+0x73]
  45ab4d:	jae    0x45abbe
  45ab4f:	jb     0x45ab9f
  45ab51:	outs   dx,DWORD PTR ds:[rsi]
  45ab52:	je     0x45aba7
  45ab54:	jne    0x45abc6
  45ab56:	jo     0x45abc7
  45ab58:	jb     0x45abce
  45ab5a:	gs add BYTE PTR fs:[rdi+0x65],ah
  45ab5f:	je     0x45abc0
  45ab61:	rex.WB outs dx,BYTE PTR ds:[rsi]
  45ab63:	jbe    0x45abc6
  45ab65:	ins    BYTE PTR es:[rdi],dx
  45ab66:	imul   esp,DWORD PTR [rsi+rax*2+0x6f],0x7265646c
  45ab6e:	push   rsp
  45ab6f:	imul   esi,DWORD PTR [rsp+rbp*2+0x65],0x74656700
  45ab77:	pop    rdi
  45ab78:	rex.WB outs dx,BYTE PTR ds:[rsi]
  45ab7a:	jbe    0x45abdd
  45ab7c:	ins    BYTE PTR es:[rdi],dx
  45ab7d:	imul   esp,DWORD PTR [rbp+rax*2+0x6d],0x50797470
  45ab85:	(bad)  
  45ab86:	je     0x45abf0
  45ab88:	add    BYTE PTR [rdi+0x65],ah
  45ab8b:	je     0x45abec
  45ab8d:	push   rax
  45ab8e:	ins    BYTE PTR es:[rdi],dx
  45ab8f:	(bad)  
  45ab90:	outs   dx,BYTE PTR ds:[rsi]
  45ab91:	outs   dx,BYTE PTR ds:[rsi]
  45ab92:	imul   ebp,DWORD PTR [rsi+0x67],0x65676150
  45ab99:	add    BYTE PTR [rdi+0x65],ah
  45ab9c:	je     0x45abfd
  45ab9e:	push   rdx
  45ab9f:	gs jno 0x45ac17
  45aba2:	imul   esi,DWORD PTR [rdx+0x65],0x746e656d
  45aba9:	jae    0x45abab
  45abab:	addr32 gs je 0x45ac0e
  45abaf:	push   rdx
  45abb0:	gs jno 0x45ac28
  45abb3:	imul   esi,DWORD PTR [rdx+0x65],0x746e656d
  45abba:	jae    0x45ac00
  45abbc:	gs jae 0x45ac22
  45abbf:	jb     0x45ac2a
  45abc1:	jo     0x45ac37
  45abc3:	imul   ebp,DWORD PTR [rdi+0x6e],0x74656700
  45abca:	pop    rdi
  45abcb:	push   rbx
  45abcc:	movsxd esi,DWORD PTR gs:[rbp+0x72]
  45abd0:	imul   esi,DWORD PTR [rcx+rdi*2+0x44],0x6d75636f
  45abd8:	outs   dx,BYTE PTR gs:[rsi]
  45abda:	je     0x45ac3d
  45abdc:	je     0x45ac47
  45abde:	outs   dx,DWORD PTR ds:[rsi]
  45abdf:	outs   dx,BYTE PTR ds:[rsi]
  45abe0:	add    BYTE PTR [rdi+0x65],ah
  45abe3:	je     0x45ac44
  45abe5:	push   rbx
  45abe6:	movsxd esi,DWORD PTR gs:[rbp+0x72]
  45abea:	imul   esi,DWORD PTR [rcx+rdi*2+0x44],0x6d75636f
  45abf2:	outs   dx,BYTE PTR gs:[rsi]
  45abf4:	je     0x45ac57
  45abf6:	je     0x45ac61
  45abf8:	outs   dx,DWORD PTR ds:[rsi]
  45abf9:	outs   dx,BYTE PTR ds:[rsi]
  45abfa:	rex.R
  45abfb:	gs jae 0x45ac61
  45abfe:	jb     0x45ac69
  45ac00:	jo     0x45ac76
  45ac02:	imul   ebp,DWORD PTR [rdi+0x6e],0x74656700
  45ac09:	pop    rdi
  45ac0a:	rex.WRXB outs dx,BYTE PTR ds:[rsi]
  45ac0c:	ins    BYTE PTR es:[rdi],dx
  45ac0d:	imul   ebp,DWORD PTR [rsi+0x65],0x656c6552
  45ac14:	(bad)  
  45ac15:	jae    0x45ac7c
  45ac17:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  45ac19:	je     0x45ac80
  45ac1b:	jae    0x45ac1d
  45ac1d:	addr32 gs je 0x45ac80
  45ac21:	rex.WRXB outs dx,BYTE PTR ds:[rsi]
  45ac23:	ins    BYTE PTR es:[rdi],dx
  45ac24:	imul   ebp,DWORD PTR [rsi+0x65],0x656c6552
  45ac2b:	(bad)  
  45ac2c:	jae    0x45ac93
  45ac2e:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  45ac30:	je     0x45ac97
  45ac32:	jae    0x45ac78
  45ac34:	gs jae 0x45ac9a
  45ac37:	jb     0x45aca2
  45ac39:	jo     0x45acaf
  45ac3b:	imul   ebp,DWORD PTR [rdi+0x6e],0x74656700
  45ac42:	pop    rdi
  45ac43:	push   rbp
  45ac44:	jo     0x45acad
  45ac46:	jb     0x45aca9
  45ac48:	fs gs rex.B
  45ac4b:	fs jbe 0x45acb7
  45ac4e:	jae    0x45acbf
  45ac50:	jb     0x45ac52
  45ac52:	addr32 gs je 0x45acb5
  45ac56:	push   rbp
  45ac57:	jo     0x45acc0
  45ac59:	jb     0x45acbc
  45ac5b:	fs gs rex.B
  45ac5e:	fs jbe 0x45acca
  45ac61:	jae    0x45acd2
  45ac63:	jb     0x45aca9
  45ac65:	gs jae 0x45accb
  45ac68:	jb     0x45acd3
  45ac6a:	jo     0x45ace0
  45ac6c:	imul   ebp,DWORD PTR [rdi+0x6e],0x74656700
  45ac73:	pop    rdi
  45ac74:	push   rbx
  45ac75:	rex.XB
  45ac76:	rex.XB
  45ac77:	rex.XB push 0x6b6365
  45ac7d:	addr32 gs je 0x45ace0
  45ac81:	push   rbx
  45ac82:	rex.XB
  45ac83:	rex.XB
  45ac84:	rex.XB push 0x446b6365
  45ac8a:	gs jae 0x45acf0
  45ac8d:	jb     0x45acf8
  45ac8f:	jo     0x45ad05
  45ac91:	imul   ebp,DWORD PTR [rdi+0x6e],0x74656700
  45ac98:	pop    rdi
  45ac99:	push   rbx
  45ac9a:	push   0x6548776f
  45ac9f:	ins    BYTE PTR es:[rdi],dx
  45aca0:	jo     0x45aca2
  45aca2:	addr32 gs je 0x45ad05
  45aca6:	push   rbx
  45aca7:	push   0x6548776f
  45acac:	ins    BYTE PTR es:[rdi],dx
  45acad:	jo     0x45acf3
  45acaf:	gs jae 0x45ad15
  45acb2:	jb     0x45ad1d
  45acb4:	jo     0x45ad2a
  45acb6:	imul   ebp,DWORD PTR [rdi+0x6e],0x74656700
  45acbd:	pop    rdi
  45acbe:	push   rbp
  45acbf:	jo     0x45ad28
  45acc1:	jb     0x45ad24
  45acc3:	fs rex.R outs dx,DWORD PTR gs:[rsi]
  45acc7:	movsxd esi,DWORD PTR [rbp+0x6d]
  45acca:	outs   dx,BYTE PTR gs:[rsi]
  45accc:	je     0x45ad2f
  45acce:	je     0x45ad39
  45acd0:	outs   dx,DWORD PTR ds:[rsi]
  45acd1:	outs   dx,BYTE PTR ds:[rsi]
  45acd2:	add    BYTE PTR [rdi+0x65],ah
  45acd5:	je     0x45ad36
  45acd7:	push   rbp
  45acd8:	jo     0x45ad41
  45acda:	jb     0x45ad3d
  45acdc:	fs rex.R outs dx,DWORD PTR gs:[rsi]
  45ace0:	movsxd esi,DWORD PTR [rbp+0x6d]
  45ace3:	outs   dx,BYTE PTR gs:[rsi]
  45ace5:	je     0x45ad48
  45ace7:	je     0x45ad52
  45ace9:	outs   dx,DWORD PTR ds:[rsi]
  45acea:	outs   dx,BYTE PTR ds:[rsi]
  45aceb:	rex.R
  45acec:	gs jae 0x45ad52
  45acef:	jb     0x45ad5a
  45acf1:	jo     0x45ad67
  45acf3:	imul   ebp,DWORD PTR [rdi+0x6e],0x74656700
  45acfa:	pop    rdi
  45acfb:	rex.WB outs dx,BYTE PTR ds:[rsi]
  45acfd:	jae    0x45ad73
  45acff:	(bad)  
  45ad00:	ins    BYTE PTR es:[rdi],dx
  45ad01:	ins    BYTE PTR es:[rdi],dx
  45ad02:	(bad)  
  45ad03:	je     0x45ad6e
  45ad05:	outs   dx,DWORD PTR ds:[rsi]
  45ad06:	outs   dx,BYTE PTR ds:[rsi]
  45ad07:	push   rax
  45ad08:	(bad)  
  45ad09:	add    BYTE PTR gs:[edi+0x65],ah
  45ad0e:	je     0x45ad6f
  45ad10:	rex.WB outs dx,BYTE PTR ds:[rsi]
  45ad12:	jae    0x45ad88
  45ad14:	(bad)  
  45ad15:	ins    BYTE PTR es:[rdi],dx
  45ad16:	ins    BYTE PTR es:[rdi],dx
  45ad17:	add    BYTE PTR [rdi+0x65],ah
  45ad1a:	je     0x45ad7b
  45ad1c:	rex.WB outs dx,BYTE PTR ds:[rsi]
  45ad1e:	jae    0x45ad94
  45ad20:	(bad)  
  45ad21:	ins    BYTE PTR es:[rdi],dx
  45ad22:	ins    BYTE PTR es:[rdi],dx
  45ad23:	rex.R
  45ad24:	gs jae 0x45ad8a
  45ad27:	jb     0x45ad92
  45ad29:	jo     0x45ad9f
  45ad2b:	imul   ebp,DWORD PTR [rdi+0x6e],0x74656700
  45ad32:	pop    rdi
  45ad33:	push   rbp
  45ad34:	jo     0x45ad9d
  45ad36:	jb     0x45ad99
  45ad38:	fs add BYTE PTR gs:[rdi+0x65],ah
  45ad3d:	je     0x45ad9e
  45ad3f:	push   rbp
  45ad40:	jo     0x45ada9
  45ad42:	jb     0x45ada5
  45ad44:	fs gs rex.R
  45ad47:	gs jae 0x45adad
  45ad4a:	jb     0x45adb5
  45ad4c:	jo     0x45adc2
  45ad4e:	imul   ebp,DWORD PTR [rdi+0x6e],0x74656700
  45ad55:	pop    rdi
  45ad56:	rex.XB push 0x466b6365
  45ad5c:	outs   dx,DWORD PTR ds:[rsi]
  45ad5d:	jb     0x45adb4
  45ad5f:	jo     0x45adc5
  45ad61:	(bad)  
  45ad62:	je     0x45adc9
  45ad64:	jae    0x45ad66
  45ad66:	addr32 gs je 0x45adc9
  45ad6a:	rex.XB push 0x466b6365
  45ad70:	outs   dx,DWORD PTR ds:[rsi]
  45ad71:	jb     0x45adc8
  45ad73:	jo     0x45add9
  45ad75:	(bad)  
  45ad76:	je     0x45addd
  45ad78:	jae    0x45adbe
  45ad7a:	gs jae 0x45ade0
  45ad7d:	jb     0x45ade8
  45ad7f:	jo     0x45adf5
  45ad81:	imul   ebp,DWORD PTR [rdi+0x6e],0x74656700
  45ad88:	pop    rdi
  45ad89:	push   rbp
  45ad8a:	jo     0x45adf3
  45ad8c:	jb     0x45adef
  45ad8e:	fs gs push rbx
  45ad91:	push   rbx
  45ad92:	rex.WB push r11
  45ad94:	push   rax
  45ad95:	(bad)  
  45ad96:	movsxd ebp,DWORD PTR [rbx+0x61]
  45ad99:	addr32 gs jae 0x45ad9d
  45ad9d:	addr32 gs je 0x45ae00
  45ada1:	push   rbp
  45ada2:	jo     0x45ae0b
  45ada4:	jb     0x45ae07
  45ada6:	fs gs push rbx
  45ada9:	push   rbx
  45adaa:	rex.WB push r11
  45adac:	push   rax
  45adad:	(bad)  
  45adae:	movsxd ebp,DWORD PTR [rbx+0x61]
  45adb1:	addr32 gs jae 0x45adf9
  45adb5:	gs jae 0x45ae1b
  45adb8:	jb     0x45ae23
  45adba:	jo     0x45ae30
  45adbc:	imul   ebp,DWORD PTR [rdi+0x6e],0x74656700
  45adc3:	pop    rdi
  45adc4:	rex.WRB (bad) 
  45adc6:	imul   ebp,DWORD PTR [rsi+0x74],0x6e616e65
  45adcd:	movsxd esp,DWORD PTR [rbp+0x50]
  45add0:	(bad)  
  45add1:	add    BYTE PTR gs:[edi+0x65],ah
  45add6:	je     0x45ae37
  45add8:	rex.RB
  45add9:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x6770556e
  45ade2:	jb     0x45ae45
  45ade4:	fs add BYTE PTR gs:[rdi+0x65],ah
  45ade9:	je     0x45ae4a
  45adeb:	rex.RB
  45adec:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x6770556e
  45adf5:	jb     0x45ae58
  45adf7:	fs gs rex.R
  45adfa:	gs jae 0x45ae60
  45adfd:	jb     0x45ae68
  45adff:	jo     0x45ae75
  45ae01:	imul   ebp,DWORD PTR [rdi+0x6e],0x74656700
  45ae08:	pop    rdi
  45ae09:	push   rdx
  45ae0a:	gs jo  0x45ae6e
  45ae0d:	imul   esi,DWORD PTR [rdx+0x0],0x5f746567
  45ae14:	push   rdx
  45ae15:	gs jo  0x45ae79
  45ae18:	imul   esi,DWORD PTR [rdx+0x44],0x72637365
  45ae1f:	imul   esi,DWORD PTR [rax+0x74],0x6e6f69
  45ae26:	addr32 gs je 0x45ae89
  45ae2a:	push   rsp
  45ae2b:	outs   dx,DWORD PTR ds:[rsi]
  45ae2c:	outs   dx,DWORD PTR ds:[rsi]
  45ae2d:	ins    BYTE PTR es:[rdi],dx
  45ae2e:	jae    0x45ae80
  45ae30:	(bad)  
  45ae31:	add    BYTE PTR gs:[edi+0x65],ah
  45ae36:	je     0x45ae97
  45ae38:	imul   r14d,DWORD PTR [rbx+0x63],0x7265766f
  45ae40:	jns    0x45ae94
  45ae42:	gs jo  0x45aeb4
  45ae45:	jb     0x45aebb
  45ae47:	add    BYTE PTR [rdi+0x65],ah
  45ae4a:	je     0x45aeab
  45ae4c:	imul   r14d,DWORD PTR [rbx+0x63],0x7265766f
  45ae54:	jns    0x45aea8
  45ae56:	gs jo  0x45aec8
  45ae59:	jb     0x45aecf
  45ae5b:	rex.R
  45ae5c:	gs jae 0x45aec2
  45ae5f:	jb     0x45aeca
  45ae61:	jo     0x45aed7
  45ae63:	imul   ebp,DWORD PTR [rdi+0x6e],0x74656700
  45ae6a:	pop    rdi
  45ae6b:	push   rbp
  45ae6c:	jo     0x45aed5
  45ae6e:	jb     0x45aed1
  45ae70:	fs gs push rdx
  45ae73:	jne    0x45aee1
  45ae75:	gs jae 0x45ae78
  45ae78:	addr32 gs je 0x45aedb
  45ae7c:	push   rbp
  45ae7d:	jo     0x45aee6
  45ae7f:	jb     0x45aee2
  45ae81:	fs gs push rdx
  45ae84:	jne    0x45aef2
  45ae86:	gs jae 0x45aecd
  45ae89:	gs jae 0x45aeef
  45ae8c:	jb     0x45aef7
  45ae8e:	jo     0x45af04
  45ae90:	imul   ebp,DWORD PTR [rdi+0x6e],0x74656700
  45ae97:	pop    rdi
  45ae98:	push   rdx
  45ae99:	gs jae 0x45af0b
  45ae9c:	jne    0x45af10
  45ae9e:	movsxd esp,DWORD PTR [rbp+0x73]
  45aea1:	push   rax
  45aea2:	(bad)  
  45aea3:	add    BYTE PTR gs:[edi+0x65],ah
  45aea8:	je     0x45af09
  45aeaa:	push   rsi
  45aeab:	imul   esp,DWORD PTR [rbp+0x77],0x6c6f42
  45aeb2:	addr32 gs je 0x45af15
  45aeb6:	push   rsi
  45aeb7:	imul   esp,DWORD PTR [rbp+0x77],0x446c6f42
  45aebe:	gs jae 0x45af24
  45aec1:	jb     0x45af2c
  45aec3:	jo     0x45af39
  45aec5:	imul   ebp,DWORD PTR [rdi+0x6e],0x74656700
  45aecc:	pop    rdi
  45aecd:	push   rbx
  45aece:	jno    0x45af3c
  45aed0:	push   rdi
  45aed1:	gs (bad) 
  45aed4:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x5f746567
  45aedc:	push   rbx
  45aedd:	jno    0x45af4b
  45aedf:	push   rdi
  45aee0:	gs (bad) 
  45aee3:	imul   esi,DWORD PTR [rbp+riz*2+0x44],0x72637365
  45aeeb:	imul   esi,DWORD PTR [rax+0x74],0x6e6f69
  45aef2:	addr32 gs je 0x45af55
  45aef6:	push   rbx
  45aef7:	jno    0x45af65
  45aef9:	rex.R
  45aefa:	gs jbe 0x45af60
  45aefd:	outs   dx,BYTE PTR gs:[rsi]
  45aeff:	je     0x45af66
  45af01:	jb     0x45af03
  45af03:	addr32 gs je 0x45af66
  45af07:	push   rbx
  45af08:	jno    0x45af76
  45af0a:	rex.R
  45af0b:	gs jbe 0x45af71
  45af0e:	outs   dx,BYTE PTR gs:[rsi]
  45af10:	je     0x45af77
  45af12:	jb     0x45af58
  45af14:	gs jae 0x45af7a
  45af17:	jb     0x45af82
  45af19:	jo     0x45af8f
  45af1b:	imul   ebp,DWORD PTR [rdi+0x6e],0x74656700
  45af22:	pop    rdi
  45af23:	push   rbx
  45af24:	jno    0x45af92
  45af26:	rex.RB jbe 0x45af8a
  45af29:	ins    BYTE PTR es:[rdi],dx
  45af2a:	push   rbx
  45af2b:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x5f746567
  45af33:	push   rbx
  45af34:	jno    0x45afa2
  45af36:	rex.RB jbe 0x45af9a
  45af39:	ins    BYTE PTR es:[rdi],dx
  45af3a:	push   rbx
  45af3b:	imul   esi,DWORD PTR [rbp+riz*2+0x44],0x72637365
  45af43:	imul   esi,DWORD PTR [rax+0x74],0x6e6f69
  45af4a:	addr32 gs je 0x45afad
  45af4e:	push   rsi
  45af4f:	imul   esp,DWORD PTR [rbp+0x77],0x616c7545
  45af56:	add    BYTE PTR [rdi+0x65],ah
  45af59:	je     0x45afba
  45af5b:	push   rsi
  45af5c:	imul   esp,DWORD PTR [rbp+0x77],0x616c7545
  45af63:	rex.R
  45af64:	gs jae 0x45afca
  45af67:	jb     0x45afd2
  45af69:	jo     0x45afdf
  45af6b:	imul   ebp,DWORD PTR [rdi+0x6e],0x74656700
  45af72:	pop    rdi
  45af73:	push   rdx
  45af74:	imul   esi,DWORD PTR gs:[ebx+0x74],0x78457265
  45af7d:	jo     0x45aff1
  45af7f:	gs jae 0x45aff5
  45af82:	add    BYTE PTR [rdi+0x65],ah
  45af85:	je     0x45afe6
  45af87:	push   rdx
  45af88:	imul   esi,DWORD PTR gs:[ebx+0x74],0x78457265
  45af91:	jo     0x45b005
  45af93:	gs jae 0x45b009
  45af96:	rex.R
  45af97:	gs jae 0x45affd
  45af9a:	jb     0x45b005
  45af9c:	jo     0x45b012
  45af9e:	imul   ebp,DWORD PTR [rdi+0x6e],0x74656700
  45afa5:	pop    rdi
  45afa6:	push   rsi
  45afa7:	imul   esp,DWORD PTR [rbp+0x77],0x76697250
  45afae:	(bad)  
  45afaf:	movsxd edi,DWORD PTR [rcx+0x53]
  45afb2:	je     0x45b015
  45afb4:	je     0x45b01b
  45afb6:	ins    DWORD PTR es:[rdi],dx
  45afb7:	outs   dx,BYTE PTR gs:[rsi]
  45afb9:	je     0x45afbb
  45afbb:	addr32 gs je 0x45b01e
  45afbf:	push   rsi
  45afc0:	imul   esp,DWORD PTR [rbp+0x77],0x76697250
  45afc7:	(bad)  
  45afc8:	movsxd edi,DWORD PTR [rcx+0x53]
  45afcb:	je     0x45b02e
  45afcd:	je     0x45b034
  45afcf:	ins    DWORD PTR es:[rdi],dx
  45afd0:	outs   dx,BYTE PTR gs:[rsi]
  45afd2:	je     0x45b018
  45afd4:	gs jae 0x45b03a
  45afd7:	jb     0x45b042
  45afd9:	jo     0x45b04f
  45afdb:	imul   ebp,DWORD PTR [rdi+0x6e],0x74656700
  45afe2:	pop    rdi
  45afe3:	rex.XB outs dx,DWORD PTR ds:[rsi]
  45afe5:	ins    DWORD PTR es:[rdi],dx
  45afe6:	ins    DWORD PTR es:[rdi],dx
  45afe7:	jne    0x45b057
  45afe9:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x5f746567
  45aff1:	rex.XB outs dx,DWORD PTR ds:[rsi]
  45aff3:	ins    DWORD PTR es:[rdi],dx
  45aff4:	ins    DWORD PTR es:[rdi],dx
  45aff5:	jne    0x45b065
  45aff7:	imul   esi,DWORD PTR [rcx+rdi*2+0x44],0x72637365
  45afff:	imul   esi,DWORD PTR [rax+0x74],0x6e6f69
  45b006:	addr32 gs je 0x45b069
  45b00a:	push   rsi
  45b00b:	imul   esp,DWORD PTR [rbp+0x77],0x706d6153
  45b012:	ins    BYTE PTR es:[rdi],dx
  45b013:	gs jae 0x45b016
  45b016:	addr32 gs je 0x45b079
  45b01a:	push   rsi
  45b01b:	imul   esp,DWORD PTR [rbp+0x77],0x706d6153
  45b022:	ins    BYTE PTR es:[rdi],dx
  45b023:	gs jae 0x45b06a
  45b026:	gs jae 0x45b08c
  45b029:	jb     0x45b094
  45b02b:	jo     0x45b0a1
  45b02d:	imul   ebp,DWORD PTR [rdi+0x6e],0x74656700
  45b034:	pop    rdi
  45b035:	rex.B
  45b036:	fs jbe 0x45b09a
  45b039:	outs   dx,BYTE PTR ds:[rsi]
  45b03a:	movsxd esp,DWORD PTR [rbp+0x64]
  45b03d:	push   rax
  45b03e:	(bad)  
  45b03f:	add    BYTE PTR gs:[edi+0x65],ah
  45b044:	je     0x45b0a5
  45b046:	rex.RXB
  45b047:	gs je  0x45b0be
  45b04a:	imul   ebp,DWORD PTR [rsi+0x67],0x72617453
  45b051:	je     0x45b0b8
  45b053:	fs push rdi
  45b055:	imul   esi,DWORD PTR [rax+rbp*2+0x43],0x7473756c
  45b05d:	gs jb  0x45b0c9
  45b060:	outs   dx,BYTE PTR ds:[rsi]
  45b061:	add    BYTE PTR [edi+0x65],ah
  45b065:	je     0x45b0c6
  45b067:	rex.RXB
  45b068:	gs je  0x45b0df
  45b06b:	imul   ebp,DWORD PTR [rsi+0x67],0x72617453
  45b072:	je     0x45b0d9
  45b074:	fs push rdi
  45b076:	imul   esi,DWORD PTR [rax+rbp*2+0x43],0x7473756c
  45b07e:	gs jb  0x45b0ea
  45b081:	outs   dx,BYTE PTR ds:[rsi]
  45b082:	addr32 rex.R
  45b084:	gs jae 0x45b0ea
  45b087:	jb     0x45b0f2
  45b089:	jo     0x45b0ff
  45b08b:	imul   ebp,DWORD PTR [rdi+0x6e],0x74656700
  45b092:	pop    rdi
  45b093:	rex.WB outs dx,BYTE PTR ds:[rsi]
  45b095:	jae    0x45b10b
  45b097:	(bad)  
  45b098:	ins    BYTE PTR es:[rdi],dx
  45b099:	ins    BYTE PTR es:[rdi],dx
  45b09a:	push   rbp
  45b09b:	jae    0x45b106
  45b09d:	outs   dx,BYTE PTR ds:[rsi]
  45b09e:	rex.XB outs dx,DWORD PTR ds:[esi]
  45b0a1:	outs   dx,BYTE PTR ds:[rsi]
  45b0a2:	imul   sp,WORD PTR [rdi+0x75],0x6172
  45b0a8:	je     0x45b113
  45b0aa:	outs   dx,DWORD PTR ds:[rsi]
  45b0ab:	outs   dx,BYTE PTR ds:[rsi]
  45b0ac:	imul   r13d,DWORD PTR [rbp+r12*2+0x0],0x5f746567
  45b0b5:	rex.WB outs dx,BYTE PTR ds:[rsi]
  45b0b7:	jae    0x45b12d
  45b0b9:	(bad)  
  45b0ba:	ins    BYTE PTR es:[rdi],dx
  45b0bb:	ins    BYTE PTR es:[rdi],dx
  45b0bc:	push   rbp
  45b0bd:	jae    0x45b128
  45b0bf:	outs   dx,BYTE PTR ds:[rsi]
  45b0c0:	rex.XB outs dx,DWORD PTR ds:[esi]
  45b0c3:	outs   dx,BYTE PTR ds:[rsi]
  45b0c4:	imul   sp,WORD PTR [rdi+0x75],0x6172
  45b0ca:	je     0x45b135
  45b0cc:	outs   dx,DWORD PTR ds:[rsi]
  45b0cd:	outs   dx,BYTE PTR ds:[rsi]
  45b0ce:	imul   r13d,DWORD PTR [rbp+r12*2+0x44],0x72637365
  45b0d7:	imul   esi,DWORD PTR [rax+0x74],0x6e6f69
  45b0de:	addr32 gs je 0x45b141
  45b0e2:	rex.WB outs dx,BYTE PTR ds:[rsi]
  45b0e4:	jae    0x45b15a
  45b0e6:	(bad)  
  45b0e7:	ins    BYTE PTR es:[rdi],dx
  45b0e8:	ins    BYTE PTR es:[rdi],dx
  45b0e9:	rex.XB ins BYTE PTR es:[rdi],dx
  45b0eb:	jne    0x45b160
  45b0ed:	je     0x45b154
  45b0ef:	jb     0x45b0f1
  45b0f1:	addr32 gs je 0x45b154
  45b0f5:	rex.WB outs dx,BYTE PTR ds:[rsi]
  45b0f7:	jae    0x45b16d
  45b0f9:	(bad)  
  45b0fa:	ins    BYTE PTR es:[rdi],dx
  45b0fb:	ins    BYTE PTR es:[rdi],dx
  45b0fc:	rex.XB ins BYTE PTR es:[rdi],dx
  45b0fe:	jne    0x45b173
  45b100:	je     0x45b167
  45b102:	jb     0x45b148
  45b104:	gs jae 0x45b16a
  45b107:	jb     0x45b172
  45b109:	jo     0x45b17f
  45b10b:	imul   ebp,DWORD PTR [rdi+0x6e],0x74656700
  45b112:	pop    rdi
  45b113:	rex.B
  45b114:	fs rex.WRX outs dx,DWORD PTR fs:[rsi]
  45b118:	fs add BYTE PTR gs:[rdi+0x65],ah
  45b11d:	je     0x45b17e
  45b11f:	rex.B
  45b120:	fs rex.WRX outs dx,DWORD PTR fs:[rsi]
  45b124:	fs gs rex.R
  45b127:	gs jae 0x45b18d
  45b12a:	jb     0x45b195
  45b12c:	jo     0x45b1a2
  45b12e:	imul   ebp,DWORD PTR [rdi+0x6e],0x74656700
  45b135:	pop    rdi
  45b136:	push   rdx
  45b137:	gs ins DWORD PTR es:[rdi],dx
  45b139:	outs   dx,DWORD PTR ds:[rsi]
  45b13a:	jbe    0x45b1a1
  45b13c:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  45b13e:	fs add BYTE PTR gs:[rdi+0x65],ah
  45b143:	je     0x45b1a4
  45b145:	push   rdx
  45b146:	gs ins DWORD PTR es:[rdi],dx
  45b148:	outs   dx,DWORD PTR ds:[rsi]
  45b149:	jbe    0x45b1b0
  45b14b:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  45b14d:	fs gs rex.R
  45b150:	gs jae 0x45b1b6
  45b153:	jb     0x45b1be
  45b155:	jo     0x45b1cb
  45b157:	imul   ebp,DWORD PTR [rdi+0x6e],0x74656700
  45b15e:	pop    rdi
  45b15f:	rex.RB outs dx,BYTE PTR ds:[rsi]
  45b161:	je     0x45b1c8
  45b163:	jb     0x45b1d5
  45b165:	jb     0x45b1d0
  45b167:	jae    0x45b1ce
  45b169:	rex.R
  45b16a:	gs jo  0x45b1d9
  45b16d:	outs   dx,DWORD PTR ds:[rsi]
  45b16e:	jns    0x45b1dd
  45b170:	outs   dx,BYTE PTR gs:[rsi]
  45b172:	je     0x45b174
  45b174:	addr32 gs je 0x45b1d7
  45b178:	rex.RB outs dx,BYTE PTR ds:[rsi]
  45b17a:	je     0x45b1e1
  45b17c:	jb     0x45b1ee
  45b17e:	jb     0x45b1e9
  45b180:	jae    0x45b1e7
  45b182:	rex.R
  45b183:	gs jo  0x45b1f2
  45b186:	outs   dx,DWORD PTR ds:[rsi]
  45b187:	jns    0x45b1f6
  45b189:	outs   dx,BYTE PTR gs:[rsi]
  45b18b:	je     0x45b1d1
  45b18d:	gs jae 0x45b1f3
  45b190:	jb     0x45b1fb
  45b192:	jo     0x45b208
  45b194:	imul   ebp,DWORD PTR [rdi+0x6e],0x74656700
  45b19b:	pop    rdi
  45b19c:	push   rax
  45b19d:	jb     0x45b204
  45b19f:	jo     0x45b211
  45b1a1:	gs rex.WB outs dx,BYTE PTR fs:[rsi]
  45b1a5:	jae    0x45b21b
  45b1a7:	(bad)  
  45b1a8:	ins    BYTE PTR es:[rdi],dx
  45b1a9:	ins    BYTE PTR es:[rdi],dx
  45b1aa:	add    BYTE PTR [rdi+0x65],ah
  45b1ad:	je     0x45b20e
  45b1af:	push   rax
  45b1b0:	jb     0x45b217
  45b1b2:	jo     0x45b224
  45b1b4:	gs rex.WB outs dx,BYTE PTR fs:[rsi]
  45b1b8:	jae    0x45b22e
  45b1ba:	(bad)  
  45b1bb:	ins    BYTE PTR es:[rdi],dx
  45b1bc:	ins    BYTE PTR es:[rdi],dx
  45b1bd:	rex.R
  45b1be:	gs jae 0x45b224
  45b1c1:	jb     0x45b22c
  45b1c3:	jo     0x45b239
  45b1c5:	imul   ebp,DWORD PTR [rdi+0x6e],0x766e4900
  45b1cc:	(bad)  
  45b1cd:	ins    BYTE PTR es:[rdi],dx
  45b1ce:	imul   esp,DWORD PTR [rcx+rcx*2+0x6e],0x6c617473
  45b1d6:	ins    BYTE PTR es:[rdi],dx
  45b1d7:	rex.RX outs dx,DWORD PTR ds:[rsi]
  45b1d9:	ins    BYTE PTR es:[rdi],dx
  45b1da:	fs gs jb 0x45b1de
  45b1de:	rex.WB outs dx,BYTE PTR ds:[rsi]
  45b1e0:	jbe    0x45b243
  45b1e2:	ins    BYTE PTR es:[rdi],dx
  45b1e3:	imul   esp,DWORD PTR [rsi+rax*2+0x6f],0x7265646c
  45b1eb:	add    BYTE PTR [rbx+0x75],al
  45b1ee:	ins    BYTE PTR es:[rdi],dx
  45b1ef:	je     0x45b266
  45b1f1:	jb     0x45b258
  45b1f3:	add    BYTE PTR [rcx+rbp*2+0x74],dl
  45b1f7:	ins    BYTE PTR es:[rdi],dx
  45b1f8:	add    BYTE PTR gs:[rdi+0x70],cl
  45b1fc:	je     0x45b267
  45b1fe:	outs   dx,DWORD PTR ds:[rsi]
  45b1ff:	outs   dx,BYTE PTR ds:[rsi]
  45b200:	jae    0x45b202
  45b202:	rex.X jb 0x45b274
  45b205:	ja     0x45b27a
  45b207:	rex.RX outs dx,DWORD PTR gs:[rsi]
  45b20a:	jb     0x45b259
  45b20c:	gs imul esp,DWORD PTR fs:[rcx+0x0],0x6974704f
  45b215:	outs   dx,DWORD PTR ds:[rsi]
  45b216:	outs   dx,BYTE PTR ds:[rsi]
  45b217:	jae    0x45b269
  45b219:	(bad)  
  45b21a:	rex.WB outs dx,BYTE PTR gs:[esi]
  45b21e:	jae    0x45b294
  45b220:	jb     0x45b297
  45b222:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  45b226:	outs   dx,BYTE PTR ds:[rsi]
  45b227:	jae    0x45b229
  45b229:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  45b22b:	rex.XB jo 0x45b2a3
  45b22e:	push   rsp
  45b22f:	jns    0x45b2a1
  45b231:	add    BYTE PTR gs:[rsi+0x6f],cl
  45b235:	push   rax
  45b236:	jb     0x45b2a7
  45b238:	movsxd esp,DWORD PTR [rbp+0x73]
  45b23b:	jae    0x45b2ac
  45b23d:	jb     0x45b23f
  45b23f:	push   rax
  45b240:	jb     0x45b2b1
  45b242:	movsxd esp,DWORD PTR [rbp+0x73]
  45b245:	jae    0x45b2b6
  45b247:	jb     0x45b297
  45b249:	outs   dx,DWORD PTR ds:[rsi]
  45b24a:	je     0x45b29f
  45b24c:	jne    0x45b2be
  45b24e:	jo     0x45b2bf
  45b250:	jb     0x45b2c6
  45b252:	gs add BYTE PTR fs:[rcx+0x6e],cl
  45b257:	jbe    0x45b2ba
  45b259:	ins    BYTE PTR es:[rdi],dx
  45b25a:	imul   esp,DWORD PTR [rsi+rax*2+0x6f],0x7265646c
  45b262:	push   rsp
  45b263:	imul   esi,DWORD PTR [rsp+rbp*2+0x65],0x766e4900
  45b26b:	(bad)  
  45b26c:	ins    BYTE PTR es:[rdi],dx
  45b26d:	imul   esp,DWORD PTR [rbp+rax*2+0x6d],0x50797470
  45b275:	(bad)  
  45b276:	je     0x45b2e0
  45b278:	add    BYTE PTR [rax+0x6c],dl
  45b27b:	(bad)  
  45b27c:	outs   dx,BYTE PTR ds:[rsi]
  45b27d:	outs   dx,BYTE PTR ds:[rsi]
  45b27e:	imul   ebp,DWORD PTR [rsi+0x67],0x65676150
  45b285:	add    BYTE PTR [rdx+0x65],dl
  45b288:	jno    0x45b2ff
  45b28a:	imul   esi,DWORD PTR [rdx+0x65],0x746e656d
  45b291:	jae    0x45b293
  45b293:	push   rdx
  45b294:	gs jno 0x45b30c
  45b297:	imul   esi,DWORD PTR [rdx+0x65],0x746e656d
  45b29e:	jae    0x45b2e4
  45b2a0:	gs jae 0x45b306
  45b2a3:	jb     0x45b30e
  45b2a5:	jo     0x45b31b
  45b2a7:	imul   ebp,DWORD PTR [rdi+0x6e],0x63655300
  45b2ae:	jne    0x45b322
  45b2b0:	imul   esi,DWORD PTR [rcx+rdi*2+0x44],0x6d75636f
  45b2b8:	outs   dx,BYTE PTR gs:[rsi]
  45b2ba:	je     0x45b31d
  45b2bc:	je     0x45b327
  45b2be:	outs   dx,DWORD PTR ds:[rsi]
  45b2bf:	outs   dx,BYTE PTR ds:[rsi]
  45b2c0:	add    BYTE PTR [rbx+0x65],dl
  45b2c3:	movsxd esi,DWORD PTR [rbp+0x72]
  45b2c6:	imul   esi,DWORD PTR [rcx+rdi*2+0x44],0x6d75636f
  45b2ce:	outs   dx,BYTE PTR gs:[rsi]
  45b2d0:	je     0x45b333
  45b2d2:	je     0x45b33d
  45b2d4:	outs   dx,DWORD PTR ds:[rsi]
  45b2d5:	outs   dx,BYTE PTR ds:[rsi]
  45b2d6:	rex.R
  45b2d7:	gs jae 0x45b33d
  45b2da:	jb     0x45b345
  45b2dc:	jo     0x45b352
  45b2de:	imul   ebp,DWORD PTR [rdi+0x6e],0x6c6e4f00
  45b2e5:	imul   ebp,DWORD PTR [rsi+0x65],0x656c6552
  45b2ec:	(bad)  
  45b2ed:	jae    0x45b354
  45b2ef:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  45b2f1:	je     0x45b358
  45b2f3:	jae    0x45b2f5
  45b2f5:	rex.WRXB outs dx,BYTE PTR ds:[rsi]
  45b2f7:	ins    BYTE PTR es:[rdi],dx
  45b2f8:	imul   ebp,DWORD PTR [rsi+0x65],0x656c6552
  45b2ff:	(bad)  
  45b300:	jae    0x45b367
  45b302:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  45b304:	je     0x45b36b
  45b306:	jae    0x45b34c
  45b308:	gs jae 0x45b36e
  45b30b:	jb     0x45b376
  45b30d:	jo     0x45b383
  45b30f:	imul   ebp,DWORD PTR [rdi+0x6e],0x67705500
  45b316:	jb     0x45b379
  45b318:	fs gs rex.B
  45b31b:	fs jbe 0x45b387
  45b31e:	jae    0x45b38f
  45b320:	jb     0x45b322
  45b322:	push   rbp
  45b323:	jo     0x45b38c
  45b325:	jb     0x45b388
  45b327:	fs gs rex.B
  45b32a:	fs jbe 0x45b396
  45b32d:	jae    0x45b39e
  45b32f:	jb     0x45b375
  45b331:	gs jae 0x45b397
  45b334:	jb     0x45b39f
  45b336:	jo     0x45b3ac
  45b338:	imul   ebp,DWORD PTR [rdi+0x6e],0x43435300
  45b33f:	rex.XB push 0x6b6365
  45b345:	push   rbx
  45b346:	rex.XB
  45b347:	rex.XB
  45b348:	rex.XB push 0x446b6365
  45b34e:	gs jae 0x45b3b4
  45b351:	jb     0x45b3bc
  45b353:	jo     0x45b3c9
  45b355:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f685300
  45b35c:	ja     0x45b3a6
  45b35e:	gs ins BYTE PTR es:[rdi],dx
  45b360:	jo     0x45b362
  45b362:	push   rbx
  45b363:	push   0x6548776f
  45b368:	ins    BYTE PTR es:[rdi],dx
  45b369:	jo     0x45b3af
  45b36b:	gs jae 0x45b3d1
  45b36e:	jb     0x45b3d9
  45b370:	jo     0x45b3e6
  45b372:	imul   ebp,DWORD PTR [rdi+0x6e],0x67705500
  45b379:	jb     0x45b3dc
  45b37b:	fs rex.R outs dx,DWORD PTR gs:[rsi]
  45b37f:	movsxd esi,DWORD PTR [rbp+0x6d]
  45b382:	outs   dx,BYTE PTR gs:[rsi]
  45b384:	je     0x45b3e7
  45b386:	je     0x45b3f1
  45b388:	outs   dx,DWORD PTR ds:[rsi]
  45b389:	outs   dx,BYTE PTR ds:[rsi]
  45b38a:	add    BYTE PTR [rbp+0x70],dl
  45b38d:	addr32 jb 0x45b3f1
  45b390:	fs rex.R outs dx,DWORD PTR gs:[rsi]
  45b394:	movsxd esi,DWORD PTR [rbp+0x6d]
  45b397:	outs   dx,BYTE PTR gs:[rsi]
  45b399:	je     0x45b3fc
  45b39b:	je     0x45b406
  45b39d:	outs   dx,DWORD PTR ds:[rsi]
  45b39e:	outs   dx,BYTE PTR ds:[rsi]
  45b39f:	rex.R
  45b3a0:	gs jae 0x45b406
  45b3a3:	jb     0x45b40e
  45b3a5:	jo     0x45b41b
  45b3a7:	imul   ebp,DWORD PTR [rdi+0x6e],0x736e4900
  45b3ae:	je     0x45b411
  45b3b0:	ins    BYTE PTR es:[rdi],dx
  45b3b1:	ins    BYTE PTR es:[rdi],dx
  45b3b2:	(bad)  
  45b3b3:	je     0x45b41e
  45b3b5:	outs   dx,DWORD PTR ds:[rsi]
  45b3b6:	outs   dx,BYTE PTR ds:[rsi]
  45b3b7:	push   rax
  45b3b8:	(bad)  
  45b3b9:	add    BYTE PTR gs:[ecx+0x6e],cl
  45b3be:	jae    0x45b434
  45b3c0:	(bad)  
  45b3c1:	ins    BYTE PTR es:[rdi],dx
  45b3c2:	ins    BYTE PTR es:[rdi],dx
  45b3c3:	add    BYTE PTR [rcx+0x6e],cl
  45b3c6:	jae    0x45b43c
  45b3c8:	(bad)  
  45b3c9:	ins    BYTE PTR es:[rdi],dx
  45b3ca:	ins    BYTE PTR es:[rdi],dx
  45b3cb:	rex.R
  45b3cc:	gs jae 0x45b432
  45b3cf:	jb     0x45b43a
  45b3d1:	jo     0x45b447
  45b3d3:	imul   ebp,DWORD PTR [rdi+0x6e],0x67705500
  45b3da:	jb     0x45b43d
  45b3dc:	fs add BYTE PTR gs:[rbp+0x70],dl
  45b3e1:	addr32 jb 0x45b445
  45b3e4:	fs gs rex.R
  45b3e7:	gs jae 0x45b44d
  45b3ea:	jb     0x45b455
  45b3ec:	jo     0x45b462
  45b3ee:	imul   ebp,DWORD PTR [rdi+0x6e],0x65684300
  45b3f5:	movsxd ebp,DWORD PTR [rbx+0x46]
  45b3f8:	outs   dx,DWORD PTR ds:[rsi]
  45b3f9:	jb     0x45b450
  45b3fb:	jo     0x45b461
  45b3fd:	(bad)  
  45b3fe:	je     0x45b465
  45b400:	jae    0x45b402
  45b402:	rex.XB push 0x466b6365
  45b408:	outs   dx,DWORD PTR ds:[rsi]
  45b409:	jb     0x45b460
  45b40b:	jo     0x45b471
  45b40d:	(bad)  
  45b40e:	je     0x45b475
  45b410:	jae    0x45b456
  45b412:	gs jae 0x45b478
  45b415:	jb     0x45b480
  45b417:	jo     0x45b48d
  45b419:	imul   ebp,DWORD PTR [rdi+0x6e],0x67705500
  45b420:	jb     0x45b483
  45b422:	fs gs push rbx
  45b425:	push   rbx
  45b426:	rex.WB push r11
  45b428:	push   rax
  45b429:	(bad)  
  45b42a:	movsxd ebp,DWORD PTR [rbx+0x61]
  45b42d:	addr32 gs jae 0x45b431
  45b431:	push   rbp
  45b432:	jo     0x45b49b
  45b434:	jb     0x45b497
  45b436:	fs gs push rbx
  45b439:	push   rbx
  45b43a:	rex.WB push r11
  45b43c:	push   rax
  45b43d:	(bad)  
  45b43e:	movsxd ebp,DWORD PTR [rbx+0x61]
  45b441:	addr32 gs jae 0x45b489
  45b445:	gs jae 0x45b4ab
  45b448:	jb     0x45b4b3
  45b44a:	jo     0x45b4c0
  45b44c:	imul   ebp,DWORD PTR [rdi+0x6e],0x69614d00
  45b453:	outs   dx,BYTE PTR ds:[rsi]
  45b454:	je     0x45b4bb
  45b456:	outs   dx,BYTE PTR ds:[rsi]
  45b457:	(bad)  
  45b458:	outs   dx,BYTE PTR ds:[rsi]
  45b459:	movsxd esp,DWORD PTR [rbp+0x50]
  45b45c:	(bad)  
  45b45d:	add    BYTE PTR gs:[ebp+0x64],al
  45b462:	imul   esi,DWORD PTR [rcx+rbp*2+0x6f],0x6770556e
  45b46a:	jb     0x45b4cd
  45b46c:	fs add BYTE PTR gs:[rbp+0x64],al
  45b471:	imul   esi,DWORD PTR [rcx+rbp*2+0x6f],0x6770556e
  45b479:	jb     0x45b4dc
  45b47b:	fs gs rex.R
  45b47e:	gs jae 0x45b4e4
  45b481:	jb     0x45b4ec
  45b483:	jo     0x45b4f9
  45b485:	imul   ebp,DWORD PTR [rdi+0x6e],0x70655200
  45b48c:	(bad)  
  45b48d:	imul   esi,DWORD PTR [rdx+0x0],0x61706552
  45b494:	imul   esi,DWORD PTR [rdx+0x44],0x72637365
  45b49b:	imul   esi,DWORD PTR [rax+0x74],0x6e6f69
  45b4a2:	push   rsp
  45b4a3:	outs   dx,DWORD PTR ds:[rsi]
  45b4a4:	outs   dx,DWORD PTR ds:[rsi]
  45b4a5:	ins    BYTE PTR es:[rdi],dx
  45b4a6:	jae    0x45b4f8
  45b4a8:	(bad)  
  45b4a9:	add    BYTE PTR gs:[ecx+ebp*2+0x73],al
  45b4af:	movsxd ebp,DWORD PTR [rdi+0x76]
  45b4b2:	gs jb  0x45b52e
  45b4b5:	push   rdx
  45b4b6:	gs jo  0x45b528
  45b4b9:	jb     0x45b52f
  45b4bb:	add    BYTE PTR [rcx+rbp*2+0x73],al
  45b4bf:	movsxd ebp,DWORD PTR [rdi+0x76]
  45b4c2:	gs jb  0x45b53e
  45b4c5:	push   rdx
  45b4c6:	gs jo  0x45b538
  45b4c9:	jb     0x45b53f
  45b4cb:	rex.R
  45b4cc:	gs jae 0x45b532
  45b4cf:	jb     0x45b53a
  45b4d1:	jo     0x45b547
  45b4d3:	imul   ebp,DWORD PTR [rdi+0x6e],0x67705500
  45b4da:	jb     0x45b53d
  45b4dc:	fs gs push rdx
  45b4df:	jne    0x45b54d
  45b4e1:	gs jae 0x45b4e4
  45b4e4:	push   rbp
  45b4e5:	jo     0x45b54e
  45b4e7:	jb     0x45b54a
  45b4e9:	fs gs push rdx
  45b4ec:	jne    0x45b55a
  45b4ee:	gs jae 0x45b535
  45b4f1:	gs jae 0x45b557
  45b4f4:	jb     0x45b55f
  45b4f6:	jo     0x45b56c
  45b4f8:	imul   ebp,DWORD PTR [rdi+0x6e],0x73655200
  45b4ff:	outs   dx,DWORD PTR ds:[rsi]
  45b500:	jne    0x45b574
  45b502:	movsxd esp,DWORD PTR [rbp+0x73]
  45b505:	push   rax
  45b506:	(bad)  
  45b507:	add    BYTE PTR gs:[esi+0x69],dl
  45b50c:	gs ja  0x45b551
  45b50f:	outs   dx,DWORD PTR ds:[rsi]
  45b510:	ins    BYTE PTR es:[rdi],dx
  45b511:	add    BYTE PTR [rsi+0x69],dl
  45b514:	gs ja  0x45b559
  45b517:	outs   dx,DWORD PTR ds:[rsi]
  45b518:	ins    BYTE PTR es:[rdi],dx
  45b519:	rex.R
  45b51a:	gs jae 0x45b580
  45b51d:	jb     0x45b588
  45b51f:	jo     0x45b595
  45b521:	imul   ebp,DWORD PTR [rdi+0x6e],0x6c715300
  45b528:	push   rdi
  45b529:	gs (bad) 
  45b52c:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x576c7153
  45b534:	gs (bad) 
  45b537:	imul   esi,DWORD PTR [rbp+riz*2+0x44],0x72637365
  45b53f:	imul   esi,DWORD PTR [rax+0x74],0x6e6f69
  45b546:	push   rbx
  45b547:	jno    0x45b5b5
  45b549:	rex.R
  45b54a:	gs jbe 0x45b5b0
  45b54d:	outs   dx,BYTE PTR gs:[rsi]
  45b54f:	je     0x45b5b6
  45b551:	jb     0x45b553
  45b553:	push   rbx
  45b554:	jno    0x45b5c2
  45b556:	rex.R
  45b557:	gs jbe 0x45b5bd
  45b55a:	outs   dx,BYTE PTR gs:[rsi]
  45b55c:	je     0x45b5c3
  45b55e:	jb     0x45b5a4
  45b560:	gs jae 0x45b5c6
  45b563:	jb     0x45b5ce
  45b565:	jo     0x45b5db
  45b567:	imul   ebp,DWORD PTR [rdi+0x6e],0x6c715300
  45b56e:	rex.RB jbe 0x45b5d2
  45b571:	ins    BYTE PTR es:[rdi],dx
  45b572:	push   rbx
  45b573:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x456c7153
  45b57b:	jbe    0x45b5de
  45b57d:	ins    BYTE PTR es:[rdi],dx
  45b57e:	push   rbx
  45b57f:	imul   esi,DWORD PTR [rbp+riz*2+0x44],0x72637365
  45b587:	imul   esi,DWORD PTR [rax+0x74],0x6e6f69
  45b58e:	push   rsi
  45b58f:	imul   esp,DWORD PTR [rbp+0x77],0x616c7545
  45b596:	add    BYTE PTR [rsi+0x69],dl
  45b599:	gs ja  0x45b5e1
  45b59c:	jne    0x45b60a
  45b59e:	(bad)  
  45b59f:	rex.R
  45b5a0:	gs jae 0x45b606
  45b5a3:	jb     0x45b60e
  45b5a5:	jo     0x45b61b
  45b5a7:	imul   ebp,DWORD PTR [rdi+0x6e],0x67655200
  45b5ae:	imul   esi,DWORD PTR [rbx+0x74],0x78457265
  45b5b5:	jo     0x45b629
  45b5b7:	gs jae 0x45b62d
  45b5ba:	add    BYTE PTR [rdx+0x65],dl
  45b5bd:	imul   esi,DWORD PTR [ebx+0x74],0x78457265
  45b5c5:	jo     0x45b639
  45b5c7:	gs jae 0x45b63d
  45b5ca:	rex.R
  45b5cb:	gs jae 0x45b631
  45b5ce:	jb     0x45b639
  45b5d0:	jo     0x45b646
  45b5d2:	imul   ebp,DWORD PTR [rdi+0x6e],0x65695600
  45b5d9:	ja     0x45b62b
  45b5db:	jb     0x45b646
  45b5dd:	jbe    0x45b640
  45b5df:	movsxd edi,DWORD PTR [rcx+0x53]
  45b5e2:	je     0x45b645
  45b5e4:	je     0x45b64b
  45b5e6:	ins    DWORD PTR es:[rdi],dx
  45b5e7:	outs   dx,BYTE PTR gs:[rsi]
  45b5e9:	je     0x45b5eb
  45b5eb:	push   rsi
  45b5ec:	imul   esp,DWORD PTR [rbp+0x77],0x76697250
  45b5f3:	(bad)  
  45b5f4:	movsxd edi,DWORD PTR [rcx+0x53]
  45b5f7:	je     0x45b65a
  45b5f9:	je     0x45b660
  45b5fb:	ins    DWORD PTR es:[rdi],dx
  45b5fc:	outs   dx,BYTE PTR gs:[rsi]
  45b5fe:	je     0x45b644
  45b600:	gs jae 0x45b666
  45b603:	jb     0x45b66e
  45b605:	jo     0x45b67b
  45b607:	imul   ebp,DWORD PTR [rdi+0x6e],0x6d6f4300
  45b60e:	ins    DWORD PTR es:[rdi],dx
  45b60f:	jne    0x45b67f
  45b611:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x6d6d6f43
  45b619:	jne    0x45b689
  45b61b:	imul   esi,DWORD PTR [rcx+rdi*2+0x44],0x72637365
  45b623:	imul   esi,DWORD PTR [rax+0x74],0x6e6f69
  45b62a:	push   rsi
  45b62b:	imul   esp,DWORD PTR [rbp+0x77],0x706d6153
  45b632:	ins    BYTE PTR es:[rdi],dx
  45b633:	gs jae 0x45b636
  45b636:	push   rsi
  45b637:	imul   esp,DWORD PTR [rbp+0x77],0x706d6153
  45b63e:	ins    BYTE PTR es:[rdi],dx
  45b63f:	gs jae 0x45b686
  45b642:	gs jae 0x45b6a8
  45b645:	jb     0x45b6b0
  45b647:	jo     0x45b6bd
  45b649:	imul   ebp,DWORD PTR [rdi+0x6e],0x76644100
  45b650:	(bad)  
  45b651:	outs   dx,BYTE PTR ds:[rsi]
  45b652:	movsxd esp,DWORD PTR [rbp+0x64]
  45b655:	push   rax
  45b656:	(bad)  
  45b657:	add    BYTE PTR gs:[edi+0x65],al
  45b65c:	je     0x45b6d2
  45b65e:	imul   ebp,DWORD PTR [rsi+0x67],0x72617453
  45b665:	je     0x45b6cc
  45b667:	fs push rdi
  45b669:	imul   esi,DWORD PTR [rax+rbp*2+0x43],0x7473756c
  45b671:	gs jb  0x45b6dd
  45b674:	outs   dx,BYTE PTR ds:[rsi]
  45b675:	add    BYTE PTR [edi+0x65],al
  45b679:	je     0x45b6ef
  45b67b:	imul   ebp,DWORD PTR [rsi+0x67],0x72617453
  45b682:	je     0x45b6e9
  45b684:	fs push rdi
  45b686:	imul   esi,DWORD PTR [rax+rbp*2+0x43],0x7473756c
  45b68e:	gs jb  0x45b6fa
  45b691:	outs   dx,BYTE PTR ds:[rsi]
  45b692:	addr32 rex.R
  45b694:	gs jae 0x45b6fa
  45b697:	jb     0x45b702
  45b699:	jo     0x45b70f
  45b69b:	imul   ebp,DWORD PTR [rdi+0x6e],0x736e4900
  45b6a2:	je     0x45b705
  45b6a4:	ins    BYTE PTR es:[rdi],dx
  45b6a5:	ins    BYTE PTR es:[rdi],dx
  45b6a6:	push   rbp
  45b6a7:	jae    0x45b712
  45b6a9:	outs   dx,BYTE PTR ds:[rsi]
  45b6aa:	rex.XB outs dx,DWORD PTR ds:[esi]
  45b6ad:	outs   dx,BYTE PTR ds:[rsi]
  45b6ae:	imul   sp,WORD PTR [rdi+0x75],0x6172
  45b6b4:	je     0x45b71f
  45b6b6:	outs   dx,DWORD PTR ds:[rsi]
  45b6b7:	outs   dx,BYTE PTR ds:[rsi]
  45b6b8:	imul   r13d,DWORD PTR [rbp+r12*2+0x0],0x74736e49
  45b6c1:	(bad)  
  45b6c2:	ins    BYTE PTR es:[rdi],dx
  45b6c3:	ins    BYTE PTR es:[rdi],dx
  45b6c4:	push   rbp
  45b6c5:	jae    0x45b730
  45b6c7:	outs   dx,BYTE PTR ds:[rsi]
  45b6c8:	rex.XB outs dx,DWORD PTR ds:[esi]
  45b6cb:	outs   dx,BYTE PTR ds:[rsi]
  45b6cc:	imul   sp,WORD PTR [rdi+0x75],0x6172
  45b6d2:	je     0x45b73d
  45b6d4:	outs   dx,DWORD PTR ds:[rsi]
  45b6d5:	outs   dx,BYTE PTR ds:[rsi]
  45b6d6:	imul   r13d,DWORD PTR [rbp+r12*2+0x44],0x72637365
  45b6df:	imul   esi,DWORD PTR [rax+0x74],0x6e6f69
  45b6e6:	rex.WB outs dx,BYTE PTR ds:[rsi]
  45b6e8:	jae    0x45b75e
  45b6ea:	(bad)  
  45b6eb:	ins    BYTE PTR es:[rdi],dx
  45b6ec:	ins    BYTE PTR es:[rdi],dx
  45b6ed:	rex.XB ins BYTE PTR es:[rdi],dx
  45b6ef:	jne    0x45b764
  45b6f1:	je     0x45b758
  45b6f3:	jb     0x45b6f5
  45b6f5:	rex.WB outs dx,BYTE PTR ds:[rsi]
  45b6f7:	jae    0x45b76d
  45b6f9:	(bad)  
  45b6fa:	ins    BYTE PTR es:[rdi],dx
  45b6fb:	ins    BYTE PTR es:[rdi],dx
  45b6fc:	rex.XB ins BYTE PTR es:[rdi],dx
  45b6fe:	jne    0x45b773
  45b700:	je     0x45b767
  45b702:	jb     0x45b748
  45b704:	gs jae 0x45b76a
  45b707:	jb     0x45b772
  45b709:	jo     0x45b77f
  45b70b:	imul   ebp,DWORD PTR [rdi+0x6e],0x64644100
  45b712:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  45b714:	fs add BYTE PTR gs:[rcx+0x64],al
  45b719:	rex.WRX outs dx,DWORD PTR fs:[rsi]
  45b71c:	fs gs rex.R
  45b71f:	gs jae 0x45b785
  45b722:	jb     0x45b78d
  45b724:	jo     0x45b79a
  45b726:	imul   ebp,DWORD PTR [rdi+0x6e],0x6d655200
  45b72d:	outs   dx,DWORD PTR ds:[rsi]
  45b72e:	jbe    0x45b795
  45b730:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  45b732:	fs add BYTE PTR gs:[rdx+0x65],dl
  45b737:	ins    DWORD PTR es:[rdi],dx
  45b738:	outs   dx,DWORD PTR ds:[rsi]
  45b739:	jbe    0x45b7a0
  45b73b:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  45b73d:	fs gs rex.R
  45b740:	gs jae 0x45b7a6
  45b743:	jb     0x45b7ae
  45b745:	jo     0x45b7bb
  45b747:	imul   ebp,DWORD PTR [rdi+0x6e],0x746e4500
  45b74e:	gs jb  0x45b7c1
  45b751:	jb     0x45b7bc
  45b753:	jae    0x45b7ba
  45b755:	rex.R
  45b756:	gs jo  0x45b7c5
  45b759:	outs   dx,DWORD PTR ds:[rsi]
  45b75a:	jns    0x45b7c9
  45b75c:	outs   dx,BYTE PTR gs:[rsi]
  45b75e:	je     0x45b760
  45b760:	rex.RB outs dx,BYTE PTR ds:[rsi]
  45b762:	je     0x45b7c9
  45b764:	jb     0x45b7d6
  45b766:	jb     0x45b7d1
  45b768:	jae    0x45b7cf
  45b76a:	rex.R
  45b76b:	gs jo  0x45b7da
  45b76e:	outs   dx,DWORD PTR ds:[rsi]
  45b76f:	jns    0x45b7de
  45b771:	outs   dx,BYTE PTR gs:[rsi]
  45b773:	je     0x45b7b9
  45b775:	gs jae 0x45b7db
  45b778:	jb     0x45b7e3
  45b77a:	jo     0x45b7f0
  45b77c:	imul   ebp,DWORD PTR [rdi+0x6e],0x65725000
  45b783:	jo     0x45b7f5
  45b785:	gs rex.WB outs dx,BYTE PTR fs:[rsi]
  45b789:	jae    0x45b7ff
  45b78b:	(bad)  
  45b78c:	ins    BYTE PTR es:[rdi],dx
  45b78d:	ins    BYTE PTR es:[rdi],dx
  45b78e:	add    BYTE PTR [rax+0x72],dl
  45b791:	gs jo  0x45b804
  45b794:	gs rex.WB outs dx,BYTE PTR fs:[rsi]
  45b798:	jae    0x45b80e
  45b79a:	(bad)  
  45b79b:	ins    BYTE PTR es:[rdi],dx
  45b79c:	ins    BYTE PTR es:[rdi],dx
  45b79d:	rex.R
  45b79e:	gs jae 0x45b804
  45b7a1:	jb     0x45b80c
  45b7a3:	jo     0x45b819
  45b7a5:	imul   ebp,DWORD PTR [rdi+0x6e],0x73795300
  45b7ac:	je     0x45b813
  45b7ae:	ins    DWORD PTR es:[rdi],dx
  45b7af:	cs push rdx
  45b7b1:	gs jae 0x45b823
  45b7b4:	jne    0x45b828
  45b7b6:	movsxd esp,DWORD PTR [rbp+0x73]
  45b7b9:	add    BYTE PTR [rdx+0x65],dl
  45b7bc:	jae    0x45b82d
  45b7be:	jne    0x45b832
  45b7c0:	movsxd esp,DWORD PTR [rbp+0x4d]
  45b7c3:	(bad)  
  45b7c4:	outs   dx,BYTE PTR ds:[rsi]
  45b7c5:	(bad)  
  45b7c6:	addr32 gs jb 0x45b7ca
  45b7ca:	jb     0x45b831
  45b7cc:	jae    0x45b83d
  45b7ce:	jne    0x45b842
  45b7d0:	movsxd esp,DWORD PTR [rbp+0x4d]
  45b7d3:	(bad)  
  45b7d4:	outs   dx,BYTE PTR ds:[rsi]
  45b7d5:	(bad)  
  45b7d6:	addr32 gs jb 0x45b7da
  45b7da:	pop    rdi
  45b7db:	movsxd esi,DWORD PTR [rbp+0x6c]
  45b7de:	je     0x45b855
  45b7e0:	jb     0x45b847
  45b7e2:	add    BYTE PTR [rdi+0x65],al
  45b7e5:	je     0x45b83a
  45b7e7:	je     0x45b85b
  45b7e9:	imul   ebp,DWORD PTR [rsi+0x67],0x66656400
  45b7f0:	(bad)  
  45b7f1:	jne    0x45b85f
  45b7f3:	je     0x45b83e
  45b7f5:	outs   dx,BYTE PTR ds:[rsi]
  45b7f6:	jae    0x45b86c
  45b7f8:	(bad)  
  45b7f9:	outs   dx,BYTE PTR ds:[rsi]
  45b7fa:	movsxd esp,DWORD PTR [rbp+0x0]
  45b7fd:	addr32 gs je 0x45b860
  45b801:	rex.R
  45b802:	gs data16 (bad) 
  45b805:	jne    0x45b873
  45b807:	je     0x45b809
  45b809:	addr32 gs je 0x45b86c
  45b80d:	push   rdi
  45b80e:	imul   ebp,DWORD PTR [rsi+0x64],0x6c50776f
  45b815:	(bad)  
  45b816:	movsxd esp,DWORD PTR [rbp+0x6d]
  45b819:	outs   dx,BYTE PTR gs:[rsi]
  45b81b:	je     0x45b81d
  45b81d:	jae    0x45b884
  45b81f:	je     0x45b880
  45b821:	push   rdi
  45b822:	imul   ebp,DWORD PTR [rsi+0x64],0x6c50776f
  45b829:	(bad)  
  45b82a:	movsxd esp,DWORD PTR [rbp+0x6d]
  45b82d:	outs   dx,BYTE PTR gs:[rsi]
  45b82f:	je     0x45b831
  45b831:	push   rbx
  45b832:	gs je  0x45b8a9
  45b835:	imul   ebp,DWORD PTR [rsi+0x67],0x6e616843
  45b83c:	imul   ebp,DWORD PTR [esi+0x67],0x6e657645
  45b844:	je     0x45b887
  45b846:	jb     0x45b8af
  45b848:	jae    0x45b84a
  45b84a:	push   rbx
  45b84b:	gs je  0x45b8c2
  45b84e:	imul   ebp,DWORD PTR [rsi+0x67],0x6e616843
  45b855:	imul   ebp,DWORD PTR [esi+0x67],0x6e657645
  45b85d:	je     0x45b8a7
  45b85f:	(bad)  
  45b860:	outs   dx,BYTE PTR ds:[rsi]
  45b861:	fs ins BYTE PTR es:[rdi],dx
  45b863:	gs jb  0x45b866
  45b866:	rex.XB (bad) 
  45b868:	outs   dx,BYTE PTR ds:[rsi]
  45b869:	movsxd esp,DWORD PTR [rbp+0x6c]
  45b86c:	rex.RB jbe 0x45b8d4
  45b86f:	outs   dx,BYTE PTR ds:[rsi]
  45b870:	je     0x45b8b3
  45b872:	jb     0x45b8db
  45b874:	jae    0x45b876
  45b876:	push   rbx
  45b877:	gs je  0x45b8ee
  45b87a:	imul   ebp,DWORD PTR [rsi+0x67],0x76615373
  45b881:	imul   ebp,DWORD PTR [rsi+0x67],0x6e657645
  45b888:	je     0x45b8d2
  45b88a:	(bad)  
  45b88b:	outs   dx,BYTE PTR ds:[rsi]
  45b88c:	fs ins BYTE PTR es:[rdi],dx
  45b88e:	gs jb  0x45b891
  45b891:	rex.R
  45b892:	gs data16 (bad) 
  45b895:	jne    0x45b903
  45b897:	je     0x45b899
  45b899:	push   rdi
  45b89a:	imul   ebp,DWORD PTR [rsi+0x64],0x6c50776f
  45b8a1:	(bad)  
  45b8a2:	movsxd esp,DWORD PTR [rbp+0x6d]
  45b8a5:	outs   dx,BYTE PTR gs:[rsi]
  45b8a7:	je     0x45b8a9
  45b8a9:	rex.WRX jne 0x45b918
  45b8ac:	ins    BYTE PTR es:[rdi],dx
  45b8ad:	add    BYTE PTR [rsi+0x69],dh
  45b8b0:	jae    0x45b91b
  45b8b2:	(bad)  
  45b8b3:	ins    BYTE PTR es:[rdi],dx
  45b8b4:	add    BYTE PTR gs:[rbp+0x6e],ah
  45b8b8:	(bad)  
  45b8b9:	(bad)  
  45b8ba:	ins    BYTE PTR es:[rdi],dx
  45b8bb:	gs add BYTE PTR fs:[rax+0x72],dl
  45b8c0:	outs   dx,DWORD PTR ds:[rsi]
  45b8c1:	jo     0x45b928
  45b8c3:	jb     0x45b939
  45b8c5:	jns    0x45b90a
  45b8c7:	push   0x65676e61
  45b8cc:	fs rex.RB jbe 0x45b935
  45b8d0:	outs   dx,BYTE PTR ds:[rsi]
  45b8d1:	je     0x45b91b
  45b8d3:	(bad)  
  45b8d4:	outs   dx,BYTE PTR ds:[rsi]
  45b8d5:	fs ins BYTE PTR es:[rdi],dx
  45b8d7:	gs jb  0x45b8da
  45b8da:	push   rax
  45b8db:	jb     0x45b94c
  45b8dd:	jo     0x45b944
  45b8df:	jb     0x45b955
  45b8e1:	jns    0x45b926
  45b8e3:	push   0x65676e61
  45b8e8:	add    BYTE PTR fs:[rcx+0x64],ah
  45b8ec:	fs pop rdi
  45b8ee:	push   rax
  45b8ef:	jb     0x45b960
  45b8f1:	jo     0x45b958
  45b8f3:	jb     0x45b969
  45b8f5:	jns    0x45b93a
  45b8f7:	push   0x65676e61
  45b8fc:	add    BYTE PTR fs:[rdx+0x65],dh
  45b900:	ins    DWORD PTR es:[rdi],dx
  45b901:	outs   dx,DWORD PTR ds:[rsi]
  45b902:	jbe    0x45b969
  45b904:	pop    rdi
  45b905:	push   rax
  45b906:	jb     0x45b977
  45b908:	jo     0x45b96f
  45b90a:	jb     0x45b980
  45b90c:	jns    0x45b951
  45b90e:	push   0x65676e61
  45b913:	add    BYTE PTR fs:[rdi+0x65],ah
  45b917:	je     0x45b978
  45b919:	push   rsi
  45b91a:	imul   esi,DWORD PTR [rbx+0x69],0x656c62
  45b921:	jae    0x45b988
  45b923:	je     0x45b984
  45b925:	push   rsi
  45b926:	imul   esi,DWORD PTR [rbx+0x69],0x656c62
  45b92d:	addr32 gs je 0x45b990
  45b931:	rex.RB outs dx,BYTE PTR ds:[rsi]
  45b933:	(bad)  
  45b934:	(bad)  
  45b935:	ins    BYTE PTR es:[rdi],dx
  45b936:	gs add BYTE PTR fs:[rbx+0x65],dh
  45b93b:	je     0x45b99c
  45b93d:	rex.RB outs dx,BYTE PTR ds:[rsi]
  45b93f:	(bad)  
  45b940:	(bad)  
  45b941:	ins    BYTE PTR es:[rdi],dx
  45b942:	gs add BYTE PTR fs:[rbp+0x78],al
  45b947:	movsxd esi,DWORD PTR gs:[rbp+0x74]
  45b94b:	add    BYTE PTR gs:[rdi+0x6e],cl
  45b94f:	push   rax
  45b950:	jb     0x45b9c1
  45b952:	jo     0x45b9b9
  45b954:	jb     0x45b9ca
  45b956:	jns    0x45b99b
  45b958:	push   0x65676e61
  45b95d:	add    BYTE PTR fs:[rbp+0x65],cl
  45b961:	je     0x45b9cb
  45b963:	outs   dx,DWORD PTR ds:[rsi]
  45b964:	rex.WB outs dx,BYTE PTR fs:[rsi]
  45b967:	jbe    0x45b9d8
  45b969:	imul   esp,DWORD PTR [rbp+0x72],0x0
  45b96d:	outs   dx,DWORD PTR ds:[rsi]
  45b96e:	jo     0x45b9cf
  45b970:	rex.WB ins DWORD PTR es:[rdi],dx
  45b972:	jo     0x45b9e0
  45b974:	imul   esp,DWORD PTR [rbx+0x69],0x69560074
  45b97b:	jae    0x45b9e6
  45b97d:	(bad)  
  45b97e:	ins    BYTE PTR es:[rdi],dx
  45b97f:	add    BYTE PTR gs:[rbp+0x6e],al
  45b983:	(bad)  
  45b984:	(bad)  
  45b985:	ins    BYTE PTR es:[rdi],dx
  45b986:	gs add BYTE PTR fs:[rbp+0x69],cl
  45b98b:	movsxd esi,DWORD PTR [rdx+0x6f]
  45b98e:	jae    0x45b9ff
  45b990:	data16 je 0x45b9c1
  45b993:	push   rbx
  45b994:	jno    0x45ba02
  45b996:	push   rbx
  45b997:	gs jb  0x45ba10
  45b99a:	gs jb  0x45b9cb
  45b99d:	rex.XB outs dx,DWORD PTR ds:[rsi]
  45b99f:	outs   dx,BYTE PTR ds:[rsi]
  45b9a0:	imul   sp,WORD PTR [rdi+0x75],0x6172
  45b9a6:	je     0x45ba11
  45b9a8:	outs   dx,DWORD PTR ds:[rsi]
  45b9a9:	outs   dx,BYTE PTR ds:[rsi]
  45b9aa:	cs push rbx
  45b9ac:	movsxd ebp,DWORD PTR [rdi+0x0]
  45b9af:	rex.WRB
  45b9b0:	gs imul esp,DWORD PTR fs:[rcx+0x50],0x687461
  45b9b9:	ins    DWORD PTR es:[rdi],dx
  45b9ba:	gs imul esp,DWORD PTR fs:[rcx+0x0],0x53756370
  45b9c3:	outs   dx,DWORD PTR ds:[rsi]
  45b9c4:	jne    0x45ba38
  45b9c6:	movsxd esp,DWORD PTR [rbp+0x0]
  45b9c9:	movsxd esi,DWORD PTR [rbp+0x53]
  45b9cc:	outs   dx,DWORD PTR ds:[rsi]
  45b9cd:	jne    0x45ba41
  45b9cf:	movsxd esp,DWORD PTR [rbp+0x0]
  45b9d2:	rex.XB jne 0x45ba48
  45b9d5:	je     0x45ba46
  45b9d7:	ins    DWORD PTR es:[rdi],dx
  45b9d8:	rex.RX outs dx,DWORD PTR ds:[rsi]
  45b9da:	ins    BYTE PTR es:[rdi],dx
  45b9db:	fs gs jb 0x45ba21
  45b9df:	jb     0x45ba50
  45b9e1:	ja     0x45ba56
  45b9e3:	gs jb  0x45b9e6
  45b9e6:	outs   dx,WORD PTR ds:[rsi]
  45b9e8:	ins    BYTE PTR es:[rdi],dx
  45b9e9:	fs gs jb 0x45ba2f
  45b9ed:	jb     0x45ba5e
  45b9ef:	ja     0x45ba64
  45b9f1:	gs jb  0x45b9f4
  45b9f4:	(bad)  
  45b9f5:	jo     0x45ba67
  45b9f7:	ins    BYTE PTR es:[rdi],dx
  45b9f8:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
  45b9ff:	rex.XB outs dx,DWORD PTR ds:[rsi]
  45ba01:	outs   dx,BYTE PTR ds:[rsi]
  45ba02:	je     0x45ba69
  45ba04:	js     0x45ba7a
  45ba06:	add    BYTE PTR [rbx+0x79],dl
  45ba09:	jae    0x45ba7f
  45ba0b:	gs ins DWORD PTR es:[rdi],dx
  45ba0d:	cs push rsp
  45ba0f:	push   0x64616572
  45ba14:	imul   ebp,DWORD PTR [rsi+0x67],0x6e795300
  45ba1b:	movsxd ebp,DWORD PTR [rax+0x72]
  45ba1e:	outs   dx,DWORD PTR ds:[rsi]
  45ba1f:	outs   dx,BYTE PTR ds:[rsi]
  45ba20:	imul   edi,DWORD PTR [rdx+0x61],0x6e6f6974
  45ba27:	rex.XB outs dx,DWORD PTR ds:[rsi]
  45ba29:	outs   dx,BYTE PTR ds:[rsi]
  45ba2a:	je     0x45ba91
  45ba2c:	js     0x45baa2
  45ba2e:	add    BYTE PTR [rbp+0x69],dh
  45ba31:	push   rsp
  45ba32:	push   0x64616572
  45ba37:	add    BYTE PTR [rdi+0x65],ah
  45ba3a:	je     0x45ba9b
  45ba3c:	rex.WRB
  45ba3d:	gs imul esp,DWORD PTR fs:[rcx+0x0],0x5f746567
  45ba46:	push   rax
  45ba47:	rex.XB push r13
  45ba49:	push   rbx
  45ba4a:	outs   dx,DWORD PTR ds:[rsi]
  45ba4b:	jne    0x45babf
  45ba4d:	movsxd esp,DWORD PTR [rbp+0x0]
  45ba50:	addr32 gs je 0x45bab3
  45ba54:	rex.XB push r13
  45ba56:	push   rbx
  45ba57:	outs   dx,DWORD PTR ds:[rsi]
  45ba58:	jne    0x45bacc
  45ba5a:	movsxd esp,DWORD PTR [rbp+0x0]
  45ba5d:	addr32 gs je 0x45bac0
  45ba61:	rex.WRB (bad) 
  45ba63:	imul   ebp,DWORD PTR [rsi+0x57],0x6f646e69
  45ba6a:	ja     0x45ba6c
  45ba6c:	addr32 gs je 0x45bacf
  45ba70:	push   rbp
  45ba71:	rex.WB push r12
  45ba73:	push   0x64616572
  45ba78:	add    BYTE PTR [rsi],ch
  45ba7a:	movsxd esp,DWORD PTR [rbx+0x74]
  45ba7d:	outs   dx,DWORD PTR ds:[rsi]
  45ba7e:	jb     0x45ba80
  45ba80:	imul   r12d,DWORD PTR [rcx+0x6c],0x6552676f
  45ba88:	jae    0x45baff
  45ba8a:	ins    BYTE PTR es:[rdi],dx
  45ba8b:	je     0x45ba8d
  45ba8d:	push   rbx
  45ba8e:	push   0x7245776f
  45ba93:	jb     0x45bb04
  45ba95:	jb     0x45ba97
  45ba97:	rex.WRB
  45ba98:	gs jae 0x45bb0e
  45ba9b:	(bad)  
  45ba9c:	rex.X outs dx,DWORD PTR gs:[esi]
  45baa0:	js     0x45bae4
  45baa2:	jne    0x45bb18
  45baa4:	je     0x45bb15
  45baa6:	outs   dx,BYTE PTR ds:[rsi]
  45baa7:	jae    0x45baa9
  45baa9:	push   rax
  45baaa:	jb     0x45bb1b
  45baac:	ins    DWORD PTR es:[rdi],dx
  45baad:	jo     0x45bb23
  45baaf:	rex.RX outs dx,DWORD PTR ds:[rsi]
  45bab1:	jb     0x45bb00
  45bab3:	gs imul esp,DWORD PTR fs:[rcx+0x0],0x66726550
  45babc:	outs   dx,DWORD PTR ds:[rsi]
  45babd:	jb     0x45bb2c
  45babf:	movsxd esi,DWORD PTR [r9+rbp*2+0x6f]
  45bac4:	outs   dx,BYTE PTR ds:[rsi]
  45bac5:	push   rsp
  45bac6:	push   0x65527461
  45bacb:	jno    0x45bb42
  45bacd:	imul   esi,DWORD PTR [rdx+0x65],0x64654d73
  45bad4:	imul   esp,DWORD PTR [rcx+0x0],0x43746547
  45badb:	jne    0x45bb4f
  45badd:	jb     0x45bb44
  45badf:	outs   dx,BYTE PTR ds:[rsi]
  45bae0:	je     0x45bb27
  45bae2:	js     0x45bb49
  45bae4:	movsxd esi,DWORD PTR [rbp+0x74]
  45bae7:	(bad)  
  45bae8:	(bad)  
  45bae9:	ins    BYTE PTR es:[rdi],dx
  45baea:	gs push rax
  45baec:	(bad)  
  45baed:	je     0x45bb57
  45baef:	add    BYTE PTR [rbp+riz*2+0x78],dl
  45baf3:	je     0x45bb37
  45baf5:	outs   dx,DWORD PTR ds:[rsi]
  45baf6:	js     0x45bb4e
  45baf8:	(bad)  
  45baf9:	ins    BYTE PTR es:[rdi],dx
  45bafa:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x466e6f69
  45bb02:	(bad)  
  45bb03:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x6e657645
  45bb0b:	je     0x45bb4e
  45bb0d:	jb     0x45bb76
  45bb0f:	jae    0x45bb11
  45bb11:	outs   dx,WORD PTR ds:[rsi]
  45bb13:	ins    BYTE PTR es:[rdi],dx
  45bb14:	fs gs jb 0x45bb5a
  45bb18:	jb     0x45bb89
  45bb1a:	ja     0x45bb8f
  45bb1c:	gs jb  0x45bb7e
  45bb1f:	push   rsi
  45bb20:	(bad)  
  45bb21:	ins    BYTE PTR es:[rdi],dx
  45bb22:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x466e6f69
  45bb2a:	(bad)  
  45bb2b:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x64654d00
  45bb33:	imul   esp,DWORD PTR [rcx+0x0],0x53554350
  45bb3a:	outs   dx,DWORD PTR ds:[rsi]
  45bb3b:	jne    0x45bbaf
  45bb3d:	movsxd esp,DWORD PTR [rbp+0x0]
  45bb40:	rex.XB push r13
  45bb42:	push   rbx
  45bb43:	outs   dx,DWORD PTR ds:[rsi]
  45bb44:	jne    0x45bbb8
  45bb46:	movsxd esp,DWORD PTR [rbp+0x0]
  45bb49:	rex.WRB (bad) 
  45bb4b:	imul   ebp,DWORD PTR [rsi+0x57],0x6f646e69
  45bb52:	ja     0x45bb54
  45bb54:	push   rbp
  45bb55:	rex.WB push r12
  45bb57:	push   0x64616572
  45bb5c:	add    BYTE PTR [rcx+0x64],al
  45bb5f:	fs push rax
  45bb61:	(bad)  
  45bb62:	add    BYTE PTR gs:[ebp+0x65],cl
  45bb67:	jae    0x45bbdc
  45bb69:	(bad)  
  45bb6a:	add    BYTE PTR gs:[eax+0x72],dl
  45bb6f:	outs   dx,DWORD PTR ds:[rsi]
  45bb70:	movsxd esp,DWORD PTR [rbp+0x73]
  45bb73:	jae    0x45bbc0
  45bb75:	gs jns 0x45bbc8
  45bb78:	jb     0x45bbdf
  45bb7a:	jbe    0x45bbe5
  45bb7c:	gs ja  0x45bb7f
  45bb7f:	addr32 gs je 0x45bbe2
  45bb83:	push   rbx
  45bb84:	movsxd esp,DWORD PTR [rcx+0x6c]
  45bb87:	gs rex.XB push 0x72646c69
  45bb8e:	outs   dx,BYTE PTR gs:[rsi]
  45bb90:	add    BYTE PTR [rbx+0x65],cl
  45bb93:	jns    0x45bbda
  45bb95:	jbe    0x45bbfc
  45bb97:	outs   dx,BYTE PTR ds:[rsi]
  45bb98:	je     0x45bbdb
  45bb9a:	jb     0x45bc03
  45bb9c:	jae    0x45bb9e
  45bb9e:	rex.WRXB outs dx,BYTE PTR ds:[rsi]
  45bba0:	rex.WXB
  45bba1:	gs jns 0x45bbe8
  45bba4:	outs   dx,DWORD PTR ds:[rsi]
  45bba5:	ja     0x45bc15
  45bba7:	add    BYTE PTR [rbp+0x76],al
  45bbaa:	outs   dx,BYTE PTR gs:[rsi]
  45bbac:	je     0x45bbef
  45bbae:	jb     0x45bc17
  45bbb0:	jae    0x45bbb2
  45bbb2:	jae    0x45bc19
  45bbb4:	ins    BYTE PTR es:[rdi],dx
  45bbb5:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  45bbba:	push   rax
  45bbbb:	(bad)  
  45bbbc:	addr32 gs rex.XB push 0x65676e61
  45bbc4:	add    BYTE PTR fs:[rcx+0x43],cl
  45bbc8:	outs   dx,DWORD PTR ds:[rsi]
  45bbc9:	outs   dx,BYTE PTR ds:[rsi]
  45bbca:	je     0x45bc2d
  45bbcc:	imul   ebp,DWORD PTR [rsi+0x65],0x6f630072
  45bbd3:	ins    DWORD PTR es:[rdi],dx
  45bbd4:	jo     0x45bc45
  45bbd6:	outs   dx,BYTE PTR ds:[rsi]
  45bbd7:	outs   dx,BYTE PTR gs:[rsi]
  45bbd9:	je     0x45bc4e
  45bbdb:	add    BYTE PTR [rcx+rbp*2+0x73],al
  45bbdf:	jo     0x45bc50
  45bbe1:	jae    0x45bc48
  45bbe3:	add    BYTE PTR [rcx+0x6e],cl
  45bbe6:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
  45bbee:	rex.XB outs dx,DWORD PTR ds:[rsi]
  45bbf0:	ins    DWORD PTR es:[rdi],dx
  45bbf1:	jo     0x45bc62
  45bbf3:	outs   dx,BYTE PTR ds:[rsi]
  45bbf4:	outs   dx,BYTE PTR gs:[rsi]
  45bbf6:	je     0x45bbf8
  45bbf8:	push   rax
  45bbf9:	(bad)  
  45bbfa:	outs   dx,BYTE PTR ds:[rsi]
  45bbfb:	gs ins BYTE PTR es:[rdi],dx
  45bbfd:	add    BYTE PTR [rbx+0x6f],ah
  45bc00:	outs   dx,BYTE PTR ds:[rsi]
  45bc01:	je     0x45bc68
  45bc03:	outs   dx,BYTE PTR ds:[rsi]
  45bc04:	je     0x45bc47
  45bc06:	jb     0x45bc6d
  45bc08:	(bad)  
  45bc09:	add    BYTE PTR [rax+0x61],dh
  45bc0c:	addr32 gs push rbx
  45bc0f:	ja     0x45bc7a
  45bc11:	je     0x45bc76
  45bc13:	push   0x53007265
  45bc18:	movsxd esp,DWORD PTR [rcx+0x6c]
  45bc1b:	gs rex.XB push 0x72646c69
  45bc22:	outs   dx,BYTE PTR gs:[rsi]
  45bc24:	add    BYTE PTR [rbx+0x65],dl
  45bc27:	je     0x45bc9e
  45bc29:	jo     0x45bc6c
  45bc2b:	jo     0x45bc9d
  45bc2d:	ins    BYTE PTR es:[rdi],dx
  45bc2e:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
  45bc35:	rex.WRX (bad) 
  45bc37:	ins    DWORD PTR es:[rdi],dx
  45bc38:	add    BYTE PTR gs:[rbx+0x61],dl
  45bc3c:	movsxd ecx,DWORD PTR [rax+0x65]
  45bc3f:	ins    BYTE PTR es:[rdi],dx
  45bc40:	jo     0x45bc96
  45bc42:	outs   dx,DWORD PTR ds:[rsi]
  45bc43:	jo     0x45bcae
  45bc45:	movsxd eax,DWORD PTR [rax]
  45bc47:	rex.WRXB outs dx,BYTE PTR ds:[rsi]
  45bc49:	rex.WR outs dx,DWORD PTR ds:[rsi]
  45bc4b:	(bad)  
  45bc4c:	add    BYTE PTR fs:[rdi+0x6e],cl
  45bc50:	rex.XB ins BYTE PTR es:[rdi],dx
  45bc52:	outs   dx,DWORD PTR ds:[rsi]
  45bc53:	jae    0x45bcba
  45bc55:	add    BYTE PTR fs:[rdi+0x6e],cl
  45bc59:	rex.XB ins BYTE PTR es:[rdi],dx
  45bc5b:	outs   dx,DWORD PTR ds:[rsi]
  45bc5c:	jae    0x45bcc7
  45bc5e:	outs   dx,BYTE PTR ds:[rsi]
  45bc5f:	add    BYTE PTR [ecx+eiz*2+0x6e],cl
  45bc64:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x65676150
  45bc6c:	rex.RX outs dx,DWORD PTR ds:[rsi]
  45bc6e:	jb     0x45bcdd
  45bc70:	pop    rdi
  45bc71:	rex.WR outs dx,DWORD PTR ds:[rsi]
  45bc73:	(bad)  
  45bc74:	add    BYTE PTR fs:[rbp+0x69],cl
  45bc78:	movsxd esi,DWORD PTR [rdx+0x6f]
  45bc7b:	jae    0x45bcec
  45bc7d:	data16 je 0x45bcae
  45bc80:	push   rdi
  45bc81:	imul   ebp,DWORD PTR [rsi+0x33],0x73550032
  45bc88:	gs jb  0x45bcdb
  45bc8b:	jb     0x45bcf2
  45bc8d:	data16 gs jb 0x45bcf6
  45bc91:	outs   dx,BYTE PTR ds:[rsi]
  45bc92:	movsxd esp,DWORD PTR [rbp+0x43]
  45bc95:	push   0x65676e61
  45bc9a:	fs rex.RB jbe 0x45bd03
  45bc9e:	outs   dx,BYTE PTR ds:[rsi]
  45bc9f:	je     0x45bce2
  45bca1:	jb     0x45bd0a
  45bca3:	jae    0x45bca5
  45bca5:	push   rbp
  45bca6:	jae    0x45bd0d
  45bca8:	jb     0x45bcfa
  45bcaa:	jb     0x45bd11
  45bcac:	data16 gs jb 0x45bd15
  45bcb0:	outs   dx,BYTE PTR ds:[rsi]
  45bcb1:	movsxd esp,DWORD PTR [rbp+0x43]
  45bcb4:	push   0x65676e61
  45bcb9:	add    BYTE PTR fs:[rbx+0x65],dl
  45bcbd:	je     0x45bd05
  45bcbf:	outs   dx,DWORD PTR ds:[rsi]
  45bcc0:	outs   dx,BYTE PTR ds:[rsi]
  45bcc1:	je     0x45bcc3
  45bcc3:	ins    BYTE PTR es:[rdi],dx
  45bcc4:	(bad)  
  45bcc5:	outs   dx,BYTE PTR ds:[rsi]
  45bcc6:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x65676150
  45bcce:	rex.XB outs dx,DWORD PTR ds:[rsi]
  45bcd0:	outs   dx,BYTE PTR ds:[rsi]
  45bcd1:	je     0x45bd45
  45bcd3:	outs   dx,DWORD PTR ds:[rsi]
  45bcd4:	ins    BYTE PTR es:[rdi],dx
  45bcd5:	add    BYTE PTR [rdi+0x6c],al
  45bcd8:	outs   dx,DWORD PTR ds:[rsi]
  45bcd9:	(bad)
  45bcde:	je     0x45bd45
  45bce0:	js     0x45bd30
  45bce2:	(bad)  
  45bce3:	ins    DWORD PTR es:[rdi],dx
  45bce4:	add    BYTE PTR gs:[rbx+0x79],dl
  45bce8:	jae    0x45bd5e
  45bcea:	gs ins DWORD PTR es:[rdi],dx
  45bcec:	rex.XB outs dx,DWORD PTR cs:[rsi]
  45bcef:	ins    BYTE PTR es:[rdi],dx
  45bcf0:	ins    BYTE PTR es:[rdi],dx
  45bcf1:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  45bcf6:	outs   dx,BYTE PTR ds:[rsi]
  45bcf7:	jae    0x45bd27
  45bcf9:	rex.RXB
  45bcfa:	outs   dx,BYTE PTR gs:[rsi]
  45bcfc:	gs jb  0x45bd68
  45bcff:	movsxd eax,DWORD PTR [rax]
  45bd01:	imul   r14,QWORD PTR [rbx+0x74],0x57003160
  45bd09:	gs (bad) 
  45bd0b:	imul   edx,DWORD PTR [rdx+0x65],0x66
  45bd0f:	gs jb  0x45bd77
  45bd12:	outs   dx,BYTE PTR ds:[rsi]
  45bd13:	movsxd esp,DWORD PTR [rbp+0x0]
  45bd16:	jae    0x45bd7d
  45bd18:	je     0x45bd8f
  45bd1a:	jo     0x45bd5f
  45bd1c:	outs   dx,DWORD PTR ds:[rsi]
  45bd1d:	ins    DWORD PTR es:[rdi],dx
  45bd1e:	ins    DWORD PTR es:[rdi],dx
  45bd1f:	(bad)  
  45bd20:	outs   dx,BYTE PTR ds:[rsi]
  45bd21:	fs jae 0x45bd24
  45bd24:	jae    0x45bd8b
  45bd26:	je     0x45bd9d
  45bd28:	jo     0x45bd7c
  45bd2a:	jne    0x45bd9a
  45bd2c:	outs   dx,BYTE PTR ds:[rsi]
  45bd2d:	imul   ebp,DWORD PTR [rsi+0x67],0x6b636f4c
  45bd34:	add    BYTE PTR [rbx+0x65],dh
  45bd37:	je     0x45bdae
  45bd39:	jo     0x45bd8d
  45bd3b:	jne    0x45bdab
  45bd3d:	outs   dx,BYTE PTR ds:[rsi]
  45bd3e:	imul   ebp,DWORD PTR [rsi+0x67],0x74636100
  45bd45:	imul   ebp,DWORD PTR [rdi+0x6e],0x64646100
  45bd4c:	imul   esi,DWORD PTR [rcx+rbp*2+0x6f],0x416c616e
  45bd54:	jb     0x45bdbd
  45bd56:	jne    0x45bdc5
  45bd58:	outs   dx,BYTE PTR gs:[rsi]
  45bd5a:	je     0x45bdcf
  45bd5c:	add    BYTE PTR [rdx+0x65],dh
  45bd5f:	jno    0x45bdd6
  45bd61:	imul   esi,DWORD PTR [rdx+0x65],0x6574754d
  45bd68:	js     0x45bd6a
  45bd6a:	jb     0x45bdd1
  45bd6c:	jno    0x45bde3
  45bd6e:	imul   esi,DWORD PTR [rdx+0x65],0x6964654d
  45bd75:	(bad)  
  45bd76:	add    BYTE PTR [rdi+0x65],ah
  45bd79:	je     0x45bdda
  45bd7b:	movsxd esi,DWORD PTR [r9+rbp*2+0x6f]
  45bd80:	outs   dx,BYTE PTR ds:[rsi]
  45bd81:	add    BYTE PTR [rbx+0x65],dh
  45bd84:	je     0x45bde5
  45bd86:	movsxd esi,DWORD PTR [r9+rbp*2+0x6f]
  45bd8b:	outs   dx,BYTE PTR ds:[rsi]
  45bd8c:	add    BYTE PTR [rdi+0x65],ah
  45bd8f:	je     0x45bdf0
  45bd91:	push   rdx
  45bd92:	gs jno 0x45be0a
  45bd95:	imul   esi,DWORD PTR [rdx+0x65],0x6964654d
  45bd9c:	(bad)  
  45bd9d:	add    BYTE PTR [rbx+0x65],dh
  45bda0:	je     0x45be01
  45bda2:	push   rdx
  45bda3:	gs jno 0x45be1b
  45bda6:	imul   esi,DWORD PTR [rdx+0x65],0x6964654d
  45bdad:	(bad)  
  45bdae:	add    BYTE PTR [rdi+0x65],ah
  45bdb1:	je     0x45be12
  45bdb3:	push   rdx
  45bdb4:	gs jno 0x45be2c
  45bdb7:	imul   esi,DWORD PTR [rdx+0x65],0x6574754d
  45bdbe:	js     0x45bdc0
  45bdc0:	jae    0x45be27
  45bdc2:	je     0x45be23
  45bdc4:	push   rdx
  45bdc5:	gs jno 0x45be3d
  45bdc8:	imul   esi,DWORD PTR [rdx+0x65],0x6574754d
  45bdcf:	js     0x45bdd1
  45bdd1:	addr32 gs je 0x45be34
  45bdd5:	rex.B
  45bdd6:	fs imul esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x416c616e
  45bde0:	jb     0x45be49
  45bde2:	jne    0x45be51
  45bde4:	outs   dx,BYTE PTR gs:[rsi]
  45bde6:	je     0x45be5b
  45bde8:	add    BYTE PTR [rbx+0x65],dh
  45bdeb:	je     0x45be4c
  45bded:	rex.B
  45bdee:	fs imul esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x416c616e
  45bdf8:	jb     0x45be61
  45bdfa:	jne    0x45be69
  45bdfc:	outs   dx,BYTE PTR gs:[rsi]
  45bdfe:	je     0x45be73
  45be00:	add    BYTE PTR [rcx+riz*2+0x75],cl
  45be04:	outs   dx,BYTE PTR ds:[rsi]
  45be05:	movsxd ebp,DWORD PTR [rax+0x53]
  45be08:	gs je  0x45be80
  45be0b:	jo     0x45be0d
  45be0d:	rex.RXB
  45be0e:	gs je  0x45be57
  45be11:	jne    0x45be7f
  45be13:	ins    BYTE PTR es:[rdi],dx
  45be14:	imul   r13d,DWORD PTR [rbp+r12*2+0x4e],0x656d61
  45be1d:	rex.RXB
  45be1e:	gs je  0x45be62
  45be21:	jb     0x45be8a
  45be23:	jne    0x45be92
  45be25:	outs   dx,BYTE PTR gs:[rsi]
  45be27:	je     0x45be9c
  45be29:	add    BYTE PTR [rax+0x72],dl
  45be2c:	outs   dx,DWORD PTR ds:[rsi]
  45be2d:	movsxd esp,DWORD PTR [rbp+0x73]
  45be30:	jae    0x45be77
  45be32:	js     0x45be9d
  45be34:	je     0x45be9b
  45be36:	add    BYTE PTR fs:[rbp+0x70],dl
  45be3a:	fs (bad) 
  45be3c:	je     0x45bea3
  45be3e:	push   rbx
  45be3f:	je     0x45bea2
  45be41:	je     0x45beb8
  45be43:	jae    0x45be45
  45be45:	push   rdx
  45be46:	imul   esi,DWORD PTR gs:[ebx+0x74],0x6f437265
  45be4f:	ins    DWORD PTR es:[rdi],dx
  45be50:	ins    DWORD PTR es:[rdi],dx
  45be51:	(bad)  
  45be52:	outs   dx,BYTE PTR ds:[rsi]
  45be53:	add    BYTE PTR fs:[rbp+0x70],dl
  45be57:	fs (bad) 
  45be59:	je     0x45bec0
  45be5b:	push   rbx
  45be5c:	gs je  0x45bed4
  45be5f:	jo     0x45beb3
  45be61:	jne    0x45bed1
  45be63:	outs   dx,BYTE PTR ds:[rsi]
  45be64:	imul   ebp,DWORD PTR [rsi+0x67],0x74617453
  45be6b:	jne    0x45bee0
  45be6d:	add    BYTE PTR [rcx+0x63],al
  45be70:	je     0x45bedb
  45be72:	outs   dx,DWORD PTR ds:[rsi]
  45be73:	outs   dx,BYTE PTR ds:[rsi]
  45be74:	add    BYTE PTR [rdx+0x65],dl
  45be77:	jno    0x45beee
  45be79:	imul   esi,DWORD PTR [rdx+0x65],0x6964654d
  45be80:	(bad)  
  45be81:	add    BYTE PTR [rdx+0x65],dl
  45be84:	jno    0x45befb
  45be86:	imul   esi,DWORD PTR [rdx+0x65],0x6574754d
  45be8d:	js     0x45be8f
  45be8f:	rex.B
  45be90:	fs imul esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x416c616e
  45be9a:	jb     0x45bf03
  45be9c:	jne    0x45bf0b
  45be9e:	outs   dx,BYTE PTR gs:[rsi]
  45bea0:	je     0x45bf15
  45bea2:	add    BYTE PTR [rbp+riz*2+0x6d],dh
  45bea6:	jo     0x45bf14
  45bea8:	(bad)  
  45bea9:	je     0x45bf10
  45beab:	imul   r13d,DWORD PTR [rbp+r12*2+0x46],0x506c6c75
  45beb4:	(bad)  
  45beb5:	je     0x45bf1f
  45beb7:	add    BYTE PTR [rdi+0x70],cl
  45beba:	outs   dx,BYTE PTR gs:[rsi]
  45bebc:	imul   r13d,DWORD PTR [rbp+r12*2+0x44],0x6f6c6169
  45bec5:	add    BYTE PTR [edi+0x70],ch
  45bec9:	outs   dx,BYTE PTR gs:[rsi]
  45becb:	imul   r13d,DWORD PTR [rbp+r12*2+0x44],0x6f6c6169
  45bed4:	add    BYTE PTR [ebp+eiz*2+0x66],ah
  45bed9:	(bad)  
  45beda:	jne    0x45bf48
  45bedc:	je     0x45bf2a
  45bede:	outs   dx,DWORD PTR ds:[rsi]
  45bedf:	movsxd esp,DWORD PTR [rcx+0x6c]
  45bee2:	gs rex.WB
  45bee4:	add    BYTE PTR fs:[rdi+rbp*2+0x63],ch
  45bee9:	(bad)  
  45beea:	ins    BYTE PTR es:[rdi],dx
  45beeb:	gs push rsp
  45beed:	gs ins DWORD PTR es:[rdi],dx
  45beef:	jo     0x45bf5d
  45bef1:	(bad)  
  45bef2:	je     0x45bf59
  45bef4:	add    BYTE PTR [rbp+0x65],ch
  45bef7:	imul   esp,DWORD PTR fs:[rcx+0x50],0x54687461
  45beff:	gs ins DWORD PTR es:[rdi],dx
  45bf01:	jo     0x45bf6f
  45bf03:	(bad)  
  45bf04:	je     0x45bf6b
  45bf06:	add    BYTE PTR [rbx+0x70],ah
  45bf09:	jne    0x45bf5b
  45bf0b:	(bad)  
  45bf0c:	je     0x45bf76
  45bf0e:	push   rsp
  45bf0f:	gs ins DWORD PTR es:[rdi],dx
  45bf11:	jo     0x45bf7f
  45bf13:	(bad)  
  45bf14:	je     0x45bf7b
  45bf16:	add    BYTE PTR [rsi+0x75],ah
  45bf19:	ins    BYTE PTR es:[rdi],dx
  45bf1a:	ins    BYTE PTR es:[rdi],dx
  45bf1b:	imul   r13d,DWORD PTR [rbp+r12*2+0x50],0x687461
  45bf24:	push   rbx
  45bf25:	jns    0x45bf9a
  45bf27:	je     0x45bf8e
  45bf29:	ins    DWORD PTR es:[rdi],dx
  45bf2a:	cs push rbx
  45bf2c:	movsxd esi,DWORD PTR gs:[rbp+0x72]
  45bf30:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x75636553
  45bf38:	jb     0x45bfa3
  45bf3a:	je     0x45bfb5
  45bf3c:	pop    rdx
  45bf3d:	outs   dx,DWORD PTR ds:[rsi]
  45bf3e:	outs   dx,BYTE PTR ds:[rsi]
  45bf3f:	add    BYTE PTR gs:[rdx+0x6f],bh
  45bf43:	outs   dx,BYTE PTR ds:[rsi]
  45bf44:	add    BYTE PTR gs:[rcx+0x73],ch
  45bf48:	imul   r13d,DWORD PTR [rbp+r12*2+0x0],0x73697865
  45bf51:	je     0x45bfc6
  45bf53:	add    BYTE PTR [rdi+0x65],ah
  45bf56:	je     0x45bfb7
  45bf58:	rex.RX jne 0x45bfc7
  45bf5b:	ins    BYTE PTR es:[rdi],dx
  45bf5c:	push   rax
  45bf5d:	(bad)  
  45bf5e:	je     0x45bfc8
  45bf60:	add    BYTE PTR [rdi+0x65],ah
  45bf63:	je     0x45bfc4
  45bf65:	rex.RB js 0x45bfd1
  45bf68:	jae    0x45bfde
  45bf6a:	jae    0x45bf6c
  45bf6c:	addr32 gs je 0x45bfcf
  45bf70:	push   rbx
  45bf71:	movsxd esi,DWORD PTR gs:[rbp+0x72]
  45bf75:	imul   esi,DWORD PTR [rcx+rdi*2+0x5a],0x656e6f
  45bf7d:	push   rbx
  45bf7e:	gs je  0x45bfc7
  45bf81:	jne    0x45bfef
  45bf83:	ins    BYTE PTR es:[rdi],dx
  45bf84:	push   rax
  45bf85:	(bad)  
  45bf86:	je     0x45bff0
  45bf88:	add    BYTE PTR [rbx+0x65],dl
  45bf8b:	je     0x45bfce
  45bf8d:	jae    0x45bfe6
  45bf8f:	imul   ebp,DWORD PTR [rsi+0x64],0x5073776f
  45bf96:	(bad)  
  45bf97:	je     0x45c001
  45bf99:	add    BYTE PTR [rbx+0x65],dl
  45bf9c:	je     0x45bfee
  45bf9e:	(bad)  
  45bf9f:	je     0x45c009
  45bfa1:	rex.B jae 0x45bff9
  45bfa4:	jb     0x45c00f
  45bfa6:	add    BYTE PTR [rbx+0x65],dl
  45bfa9:	je     0x45bff1
  45bfab:	imul   ebp,DWORD PTR [rbp+riz*2+0x45],0x74736978
  45bfb3:	jae    0x45bfb5
  45bfb5:	push   rbx
  45bfb6:	gs je  0x45c013
  45bfb9:	outs   dx,DWORD PTR ds:[rsi]
  45bfba:	outs   dx,BYTE PTR ds:[rsi]
  45bfbb:	add    BYTE PTR gs:[rsi+0x75],al
  45bfbf:	ins    BYTE PTR es:[rdi],dx
  45bfc0:	ins    BYTE PTR es:[rdi],dx
  45bfc1:	push   rax
  45bfc2:	(bad)  
  45bfc3:	je     0x45c02d
  45bfc5:	add    BYTE PTR [rbp+0x78],al
  45bfc8:	imul   esi,DWORD PTR [rbx+0x74],0x656c0073
  45bfcf:	outs   dx,BYTE PTR ds:[rsi]
  45bfd0:	addr32 je 0x45c03b
  45bfd3:	add    BYTE PTR [rsi+0x6c],ah
  45bfd6:	(bad)  
  45bfd7:	addr32 jae 0x45bfda
  45bfda:	jae    0x45c044
  45bfdc:	outs   dx,DWORD PTR ds:[rsi]
  45bfdd:	ja     0x45c022
  45bfdf:	ins    DWORD PTR es:[rdi],dx
  45bfe0:	add    BYTE PTR fs:[rax+0x74],dh
  45bfe4:	imul   r13,QWORD PTR [r14+0x50],0x7469736f
  45bfec:	imul   ebp,DWORD PTR [rdi+0x6e],0x4d747000
  45bff3:	(bad)  
  45bff4:	js     0x45c046
  45bff6:	outs   dx,DWORD PTR ds:[rsi]
  45bff7:	jae    0x45c062
  45bff9:	je     0x45c064
  45bffb:	outs   dx,DWORD PTR ds:[rsi]
  45bffc:	outs   dx,BYTE PTR ds:[rsi]
  45bffd:	add    BYTE PTR [rdx+0x63],dh
  45c000:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  45c002:	jb     0x45c071
  45c004:	(bad)  
  45c005:	ins    BYTE PTR es:[rdi],dx
  45c006:	push   rax
  45c007:	outs   dx,DWORD PTR ds:[rsi]
  45c008:	jae    0x45c073
  45c00a:	je     0x45c075
  45c00c:	outs   dx,DWORD PTR ds:[rsi]
  45c00d:	outs   dx,BYTE PTR ds:[rsi]
  45c00e:	add    BYTE PTR [rbx+0x65],dl
  45c011:	je     0x45c05f
  45c013:	outs   dx,BYTE PTR gs:[rsi]
  45c015:	addr32 je 0x45c080
  45c018:	add    BYTE PTR [rbx+0x65],dl
  45c01b:	je     0x45c074
  45c01d:	imul   ebp,DWORD PTR [rsi+0x64],0x6c50776f
  45c024:	(bad)  
  45c025:	movsxd esp,DWORD PTR [rbp+0x6d]
  45c028:	outs   dx,BYTE PTR gs:[rsi]
  45c02a:	je     0x45c02c
  45c02c:	rex.RXB
  45c02d:	gs je  0x45c087
  45c030:	imul   ebp,DWORD PTR [rsi+0x64],0x6c50776f
  45c037:	(bad)  
  45c038:	movsxd esp,DWORD PTR [rbp+0x6d]
  45c03b:	outs   dx,BYTE PTR gs:[rsi]
  45c03d:	je     0x45c03f
  45c03f:	js     0x45c041
  45c041:	jns    0x45c043
  45c043:	ins    BYTE PTR es:[rdi],dx
  45c044:	gs data16 je 0x45c048
  45c048:	je     0x45c0b9
  45c04a:	jo     0x45c04c
  45c04c:	jb     0x45c0b7
  45c04e:	addr32 push 0x6f620074
  45c054:	je     0x45c0ca
  45c056:	outs   dx,DWORD PTR ds:[rsi]
  45c057:	ins    DWORD PTR es:[rdi],dx
  45c058:	add    BYTE PTR [rdi+rsi*2+0x4f],ah
  45c05c:	gs ins DWORD PTR es:[rdi],dx
  45c05e:	rex.WB
  45c05f:	add    BYTE PTR fs:[rdi+0x50],dh
  45c063:	jb     0x45c0d4
  45c065:	movsxd esp,DWORD PTR [rbp+0x73]
  45c068:	jae    0x45c0d9
  45c06a:	jb     0x45c0ad
  45c06c:	jb     0x45c0d1
  45c06e:	push   0x63657469
  45c073:	je     0x45c0ea
  45c075:	jb     0x45c0dc
  45c077:	add    BYTE PTR [rdi+0x52],dh
  45c07a:	gs jae 0x45c0e2
  45c07d:	jb     0x45c0f5
  45c07f:	gs add BYTE PTR fs:[rbx+0x57],dl
  45c084:	pop    rdi
  45c085:	rex.W
  45c086:	rex.WB
  45c087:	rex.R
  45c088:	add    BYTE PTR [r11+0x57],r10b
  45c08c:	pop    rdi
  45c08d:	push   rbx
  45c08e:	rex.W
  45c08f:	rex.WRXB push r15
  45c091:	rex.WRX
  45c092:	rex.WRXB push r10
  45c094:	rex.WRB
  45c095:	rex.B
  45c096:	rex.WR add BYTE PTR [rbx+0x57],r10b
  45c09a:	pop    rdi
  45c09b:	rex.WRX
  45c09c:	rex.WRXB push r10
  45c09e:	rex.WRB
  45c09f:	rex.B
  45c0a0:	rex.WR add BYTE PTR [rbx+0x57],r10b
  45c0a4:	pop    rdi
  45c0a5:	push   rbx
  45c0a6:	rex.W
  45c0a7:	rex.WRXB push r15
  45c0a9:	rex.WRB
  45c0aa:	rex.WB
  45c0ab:	rex.WRX
  45c0ac:	rex.WB
  45c0ad:	rex.WRB
  45c0ae:	rex.WB pop r10
  45c0b0:	rex.RB
  45c0b1:	add    BYTE PTR [rbx+0x57],r10b
  45c0b5:	pop    rdi
  45c0b6:	push   rbx
  45c0b7:	rex.W
  45c0b8:	rex.WRXB push r15
  45c0ba:	rex.WRB
  45c0bb:	pop    r8
  45c0bd:	rex.WB
  45c0be:	rex.WRB
  45c0bf:	rex.WB pop r10
  45c0c1:	rex.RB
  45c0c2:	add    BYTE PTR [rbx+0x57],r10b
  45c0c6:	pop    rdi
  45c0c7:	rex.WRB
  45c0c8:	pop    r8
  45c0ca:	rex.WB
  45c0cb:	rex.WRB
  45c0cc:	rex.WB pop r10
  45c0ce:	add    BYTE PTR [r11+0x57],r10b
  45c0d2:	pop    rdi
  45c0d3:	push   rbx
  45c0d4:	rex.W
  45c0d5:	rex.WRXB push r15
  45c0d7:	rex.WRX
  45c0d8:	rex.WRXB
  45c0d9:	rex.B
  45c0da:	rex.XB push r12
  45c0dc:	rex.WB push r14
  45c0de:	push   r12
  45c0e0:	add    BYTE PTR [r11+0x57],r10b
  45c0e4:	pop    rdi
  45c0e5:	push   rbx
  45c0e6:	rex.W
  45c0e7:	rex.WRXB push r15
  45c0e9:	add    BYTE PTR [rbx+0x57],dl
  45c0ec:	pop    rdi
  45c0ed:	rex.WRB
  45c0ee:	rex.WB
  45c0ef:	rex.WRX
  45c0f0:	rex.WB
  45c0f1:	rex.WRB
  45c0f2:	rex.WB pop r10
  45c0f4:	add    BYTE PTR [r11+0x57],r10b
  45c0f8:	pop    rdi
  45c0f9:	push   rbx
  45c0fa:	rex.W
  45c0fb:	rex.WRXB push r15
  45c0fd:	rex.WRB
  45c0fe:	rex.WB
  45c0ff:	rex.WRX
  45c100:	rex.WRX
  45c101:	rex.WRXB
  45c102:	rex.B
  45c103:	rex.XB push r12
  45c105:	rex.WB push r14
  45c107:	add    BYTE PTR [r11+0x57],r10b
  45c10b:	pop    rdi
  45c10c:	push   rbx
  45c10d:	rex.W
  45c10e:	rex.WRXB push r15
  45c110:	rex.WRX
  45c111:	add    BYTE PTR [r11+0x57],dl
  45c115:	pop    rdi
  45c116:	push   rdx
  45c117:	rex.RB push r11
  45c119:	push   rsp
  45c11a:	rex.WRXB push r10
  45c11c:	add    BYTE PTR [r11+0x57],r10b
  45c120:	pop    rdi
  45c121:	push   rbx
  45c122:	rex.W
  45c123:	rex.WRXB push r15
  45c125:	rex.R
  45c126:	rex.RB
  45c127:	rex.RX
  45c128:	push   r13
  45c12a:	rex.WR push rsp
  45c12c:	add    BYTE PTR [rbx+0x57],dl
  45c12f:	pop    rdi
  45c130:	rex.RX
  45c131:	rex.WRXB push r10
  45c133:	rex.XB
  45c134:	rex.RB
  45c135:	rex.WRB
  45c136:	rex.WB
  45c137:	rex.WRX
  45c138:	rex.WB
  45c139:	rex.WRB
  45c13a:	rex.WB pop r10
  45c13c:	add    BYTE PTR [r11+0x57],r10b
  45c140:	pop    rdi
  45c141:	rex.WRB
  45c142:	pop    r8
  45c144:	add    BYTE PTR [rcx+0x6e],cl
  45c147:	jbe    0x45c1b8
  45c149:	imul   esp,DWORD PTR [rbp+0x0],0x49
  45c14d:	rex.B jae 0x45c1c9
  45c150:	outs   dx,BYTE PTR ds:[rsi]
  45c151:	movsxd edx,DWORD PTR [rdx+0x65]
  45c154:	jae    0x45c1cb
  45c156:	ins    BYTE PTR es:[rdi],dx
  45c157:	je     0x45c159
  45c159:	rex.B jae 0x45c1d5
  45c15c:	outs   dx,BYTE PTR ds:[rsi]
  45c15d:	movsxd eax,DWORD PTR [rbx+0x61]
  45c160:	ins    BYTE PTR es:[rdi],dx
  45c161:	ins    BYTE PTR es:[rdi],dx
  45c162:	(bad)  
  45c164:	movsxd ebp,DWORD PTR [rbx+0x0]
  45c167:	rex.X
  45c168:	imul   ebp,DWORD PTR gs:[esi+0x49],0x6b6f766e
  45c171:	add    BYTE PTR gs:[rbp+0x6e],al
  45c175:	rex.WB outs dx,BYTE PTR fs:[rsi]
  45c178:	jbe    0x45c1e9
  45c17a:	imul   esp,DWORD PTR [rbp+0x0],0x66
  45c17e:	imul   ebp,DWORD PTR [rbp+riz*2+0x0],0x656c6966
  45c186:	push   rsp
  45c187:	gs ins DWORD PTR es:[rdi],dx
  45c189:	jo     0x45c1f7
  45c18b:	(bad)  
  45c18c:	je     0x45c1f3
  45c18e:	add    BYTE PTR [rdi+0x65],ah
  45c191:	je     0x45c1f2
  45c193:	imul   r13d,DWORD PTR [rbp+r12*2+0x4e],0x656d61
  45c19c:	jae    0x45c203
  45c19e:	je     0x45c1ff
  45c1a0:	imul   r13d,DWORD PTR [rbp+r12*2+0x4e],0x656d61
  45c1a9:	addr32 gs je 0x45c20c
  45c1ad:	imul   r13d,DWORD PTR [rbp+r12*2+0x45],0x74736978
  45c1b6:	jae    0x45c1b8
  45c1b8:	imul   r13d,DWORD PTR [rbp+r12*2+0x4e],0x656d61
  45c1c1:	imul   r13d,DWORD PTR [rbp+r12*2+0x45],0x74736978
  45c1ca:	jae    0x45c1cc
  45c1cc:	push   rbx
  45c1cd:	jns    0x45c242
  45c1cf:	je     0x45c236
  45c1d1:	ins    DWORD PTR es:[rdi],dx
  45c1d2:	cs rex.WB
  45c1d4:	rex.WRXB add BYTE PTR [r9+r13*2+0x72],r8b
  45c1d9:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
  45c1de:	jns    0x45c229
  45c1e0:	outs   dx,BYTE PTR ds:[rsi]
  45c1e1:	outs   dx,WORD PTR ds:[rsi]
  45c1e3:	add    BYTE PTR [rsi+0x6f],ah
  45c1e6:	ins    BYTE PTR es:[rdi],dx
  45c1e7:	fs gs jb 0x45c1eb
  45c1eb:	jae    0x45c252
  45c1ed:	(bad)  
  45c1ee:	jb     0x45c253
  45c1f0:	push   0x74746150
  45c1f5:	gs jb  0x45c266
  45c1f8:	add    BYTE PTR [rsi+0x6f],ah
  45c1fb:	ins    BYTE PTR es:[rdi],dx
  45c1fc:	fs gs jb 0x45c24e
  45c200:	(bad)  
  45c201:	ins    DWORD PTR es:[rdi],dx
  45c202:	add    BYTE PTR gs:[rdi+0x65],ah
  45c206:	je     0x45c267
  45c208:	push   rbx
  45c209:	gs (bad) 
  45c20b:	jb     0x45c270
  45c20d:	push   0x74746150
  45c212:	gs jb  0x45c283
  45c215:	add    BYTE PTR [rbx+0x65],dh
  45c218:	je     0x45c279
  45c21a:	push   rbx
  45c21b:	gs (bad) 
  45c21d:	jb     0x45c282
  45c21f:	push   0x74746150
  45c224:	gs jb  0x45c295
  45c227:	add    BYTE PTR [rdi+0x65],ah
  45c22a:	je     0x45c28b
  45c22c:	rex.RX outs dx,DWORD PTR ds:[rsi]
  45c22e:	ins    BYTE PTR es:[rdi],dx
  45c22f:	fs gs jb 0x45c281
  45c233:	(bad)  
  45c234:	ins    DWORD PTR es:[rdi],dx
  45c235:	add    BYTE PTR gs:[rbx+0x65],dh
  45c239:	je     0x45c29a
  45c23b:	rex.RX outs dx,DWORD PTR ds:[rsi]
  45c23d:	ins    BYTE PTR es:[rdi],dx
  45c23e:	fs gs jb 0x45c290
  45c242:	(bad)  
  45c243:	ins    DWORD PTR es:[rdi],dx
  45c244:	add    BYTE PTR gs:[rcx+0x6e],cl
  45c248:	jbe    0x45c2af
  45c24a:	jae    0x45c2c0
  45c24c:	imul   esp,DWORD PTR [rdi+0x61],0x61506574
  45c253:	je     0x45c2bd
  45c255:	jae    0x45c257
  45c257:	addr32 gs je 0x45c2ba
  45c25b:	rex.RX outs dx,DWORD PTR ds:[rsi]
  45c25d:	ins    BYTE PTR es:[rdi],dx
  45c25e:	fs gs jb 0x45c2a7
  45c262:	js     0x45c2cd
  45c264:	jae    0x45c2da
  45c266:	jae    0x45c268
  45c268:	push   rbx
  45c269:	gs (bad) 
  45c26b:	jb     0x45c2d0
  45c26d:	push   0x74746150
  45c272:	gs jb  0x45c2e3
  45c275:	add    BYTE PTR [rsi+0x6f],al
  45c278:	ins    BYTE PTR es:[rdi],dx
  45c279:	fs gs jb 0x45c2cb
  45c27d:	(bad)  
  45c27e:	ins    DWORD PTR es:[rdi],dx
  45c27f:	add    BYTE PTR gs:[rsi+0x6f],al
  45c283:	ins    BYTE PTR es:[rdi],dx
  45c284:	fs gs jb 0x45c2cd
  45c288:	js     0x45c2f3
  45c28a:	jae    0x45c300
  45c28c:	jae    0x45c28e
  45c28e:	addr32 gs je 0x45c2f1
  45c292:	push   rsp
  45c293:	gs js  0x45c30a
  45c296:	add    BYTE PTR [rbx+0x65],dh
  45c299:	je     0x45c2fa
  45c29b:	push   rsp
  45c29c:	gs js  0x45c313
  45c29f:	add    BYTE PTR [rbx+0x6f],al
  45c2a2:	outs   dx,BYTE PTR ds:[rsi]
  45c2a3:	je     0x45c317
  45c2a5:	outs   dx,DWORD PTR ds:[rsi]
  45c2a6:	ins    BYTE PTR es:[rdi],dx
  45c2a7:	add    BYTE PTR [rdi+0x65],ah
  45c2aa:	je     0x45c30b
  45c2ac:	rex.XB outs dx,DWORD PTR ds:[rsi]
  45c2ae:	outs   dx,BYTE PTR ds:[rsi]
  45c2af:	je     0x45c323
  45c2b1:	outs   dx,DWORD PTR ds:[rsi]
  45c2b2:	ins    BYTE PTR es:[rdi],dx
  45c2b3:	add    BYTE PTR [rbp+riz*2+0x78],dl
  45c2b7:	je     0x45c2b9
  45c2b9:	(bad)
  45c2be:	gs pop rdi
  45c2c0:	rex.XB ins BYTE PTR es:[rdi],dx
  45c2c2:	imul   esp,DWORD PTR [rbx+0x6b],0x74704f00
  45c2c9:	imul   ebp,DWORD PTR [rdi+0x6e],0x67615073
  45c2d0:	gs pop rdi
  45c2d2:	push   rdx
  45c2d3:	gs jae 0x45c33f
  45c2d6:	jp     0x45c33d
  45c2d8:	add    BYTE PTR [rbx+0x61],al
  45c2db:	ins    BYTE PTR es:[rdi],dx
  45c2dc:	movsxd esi,DWORD PTR [rbp+0x6c]
  45c2df:	(bad)  
  45c2e0:	je     0x45c347
  45c2e2:	rex.W
  45c2e3:	imul   esp,DWORD PTR gs:[rdi+0x68],0x53007374
  45c2eb:	jns    0x45c360
  45c2ed:	je     0x45c354
  45c2ef:	ins    DWORD PTR es:[rdi],dx
  45c2f0:	cs rex.R jb 0x45c355
  45c2f4:	ja     0x45c35f
  45c2f6:	outs   dx,BYTE PTR ds:[rsi]
  45c2f7:	add    BYTE PTR [esi+0x6f],al
  45c2fb:	outs   dx,BYTE PTR ds:[rsi]
  45c2fc:	je     0x45c2fe
  45c2fe:	rex.RXB
  45c2ff:	gs je  0x45c348
  45c302:	outs   dx,DWORD PTR ds:[rsi]
  45c303:	outs   dx,BYTE PTR ds:[rsi]
  45c304:	je     0x45c34e
  45c306:	imul   esp,DWORD PTR gs:[rdi+0x68],0x694d0074
  45c30e:	movsxd esi,DWORD PTR [rdx+0x6f]
  45c311:	jae    0x45c382
  45c313:	data16 je 0x45c344
  45c316:	push   rbx
  45c317:	jno    0x45c385
  45c319:	push   rbx
  45c31a:	gs jb  0x45c393
  45c31d:	gs jb  0x45c34e
  45c320:	rex.WRB (bad) 
  45c322:	outs   dx,BYTE PTR ds:[rsi]
  45c323:	(bad)  
  45c324:	gs ins DWORD PTR es:[edi],dx
  45c327:	outs   dx,BYTE PTR gs:[rsi]
  45c329:	je     0x45c359
  45c32b:	rex.XB outs dx,DWORD PTR ds:[rsi]
  45c32d:	outs   dx,BYTE PTR ds:[rsi]
  45c32e:	je     0x45c3a2
  45c330:	outs   dx,DWORD PTR ds:[rsi]
  45c331:	ins    BYTE PTR es:[rdi],dx
  45c332:	jae    0x45c334
  45c334:	push   rbx
  45c335:	jno    0x45c3a3
  45c337:	push   rbx
  45c338:	je     0x45c3af
  45c33a:	imul   ebp,DWORD PTR fs:[rdi+0x4c],0x756f7961
  45c342:	je     0x45c391
  45c344:	(bad)  
  45c345:	outs   dx,BYTE PTR ds:[rsi]
  45c346:	(bad)  
  45c347:	addr32 gs jb 0x45c34b
  45c34b:	ins    BYTE PTR es:[rdi],dx
  45c34c:	(bad)  
  45c34d:	jns    0x45c3be
  45c34f:	jne    0x45c3c5
  45c351:	rex.WRB (bad) 
  45c353:	outs   dx,BYTE PTR ds:[rsi]
  45c354:	(bad)  
  45c355:	addr32 gs jb 0x45c359
  45c359:	push   rsp
  45c35a:	(bad)  
  45c35b:	(bad)  
  45c35c:	ins    BYTE PTR es:[rdi],dx
  45c35d:	gs rex.WR (bad) 
  45c360:	jns    0x45c3d1
  45c362:	jne    0x45c3d8
  45c364:	push   rax
  45c365:	(bad)  
  45c366:	outs   dx,BYTE PTR ds:[rsi]
  45c367:	gs ins BYTE PTR es:[rdi],dx
  45c369:	add    BYTE PTR [rcx+riz*2+0x79],ch
  45c36d:	outs   dx,DWORD PTR ds:[rsi]
  45c36e:	jne    0x45c3e4
  45c370:	add    BYTE PTR [rcx+riz*2+0x62],cl
  45c374:	gs ins BYTE PTR es:[rdi],dx
  45c376:	add    BYTE PTR [rax+0x72],dh
  45c379:	outs   dx,DWORD PTR ds:[rsi]
  45c37a:	movsxd esp,DWORD PTR [rbp+0x73]
  45c37d:	jae    0x45c3ee
  45c37f:	jb     0x45c3cd
  45c381:	(bad)  
  45c382:	(bad)  
  45c383:	gs ins BYTE PTR es:[rdi],dx
  45c385:	add    BYTE PTR [rdx+0x69],al
  45c388:	outs   dx,BYTE PTR ds:[rsi]
  45c389:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x69646152
  45c391:	outs   dx,DWORD PTR ds:[rsi]
  45c392:	rex.X jne 0x45c409
  45c395:	je     0x45c406
  45c397:	outs   dx,BYTE PTR ds:[rsi]
  45c398:	add    BYTE PTR [rax+0x38],bh
  45c39b:	ss push rax
  45c39d:	jb     0x45c40e
  45c39f:	movsxd esp,DWORD PTR [rbp+0x73]
  45c3a2:	jae    0x45c413
  45c3a4:	jb     0x45c3a6
  45c3a6:	(bad)  
  45c3a7:	ins    DWORD PTR es:[rdi],dx
  45c3a8:	fs ss xor al,0x50
  45c3ac:	jb     0x45c41d
  45c3ae:	movsxd esp,DWORD PTR [rbp+0x73]
  45c3b1:	jae    0x45c422
  45c3b3:	jb     0x45c3b5
  45c3b5:	imul   esp,DWORD PTR [rcx+0x36],0x6f725034
  45c3bc:	movsxd esp,DWORD PTR [rbp+0x73]
  45c3bf:	jae    0x45c430
  45c3c1:	jb     0x45c3c3
  45c3c3:	jo     0x45c426
  45c3c5:	je     0x45c42f
  45c3c7:	rex.WR (bad) 
  45c3c9:	(bad)  
  45c3ca:	gs ins BYTE PTR es:[rdi],dx
  45c3cc:	add    BYTE PTR [rbp+riz*2+0x78],dl
  45c3d0:	je     0x45c414
  45c3d2:	outs   dx,DWORD PTR ds:[rsi]
  45c3d3:	js     0x45c3d5
  45c3d5:	jae    0x45c446
  45c3d7:	jne    0x45c44b
  45c3d9:	movsxd esp,DWORD PTR [rbp+0x50]
  45c3dc:	(bad)  
  45c3dd:	je     0x45c447
  45c3df:	add    BYTE PTR [rdx+0x75],al
  45c3e2:	je     0x45c458
  45c3e4:	outs   dx,DWORD PTR ds:[rsi]
  45c3e5:	outs   dx,BYTE PTR ds:[rsi]
  45c3e6:	add    BYTE PTR [rdx+0x72],ah
  45c3e9:	outs   dx,DWORD PTR ds:[rsi]
  45c3ea:	ja     0x45c45f
  45c3ec:	add    BYTE PTR gs:[rdx+0x69],al
  45c3f0:	outs   dx,BYTE PTR ds:[rsi]
  45c3f1:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x72756f53
  45c3f9:	movsxd esp,DWORD PTR [rbp+0x0]
  45c3fc:	ins    DWORD PTR es:[rdi],dx
  45c3fd:	gs imul esp,DWORD PTR fs:[rcx+0x50],0x42687461
  45c406:	imul   ebp,DWORD PTR [rsi+0x64],0x53676e69
  45c40d:	outs   dx,DWORD PTR ds:[rsi]
  45c40e:	jne    0x45c482
  45c410:	movsxd esp,DWORD PTR [rbp+0x0]
  45c413:	imul   ebp,DWORD PTR [rsi+0x73],0x63757274
  45c41a:	je     0x45c485
  45c41c:	outs   dx,DWORD PTR ds:[rsi]
  45c41d:	outs   dx,BYTE PTR ds:[rsi]
  45c41e:	jae    0x45c462
  45c420:	outs   dx,DWORD PTR ds:[rsi]
  45c421:	js     0x45c423
  45c423:	je     0x45c48a
  45c425:	js     0x45c49b
  45c427:	add    BYTE PTR [rcx+0x73],cl
  45c42a:	push   rbx
  45c42b:	gs jo  0x45c48f
  45c42e:	jb     0x45c491
  45c430:	je     0x45c4a1
  45c432:	jb     0x45c434
  45c434:	rex.XB outs dx,DWORD PTR ds:[rsi]
  45c436:	ins    BYTE PTR es:[rdi],dx
  45c437:	outs   dx,DWORD PTR ds:[rsi]
  45c438:	jb     0x45c43a
  45c43a:	rex.X (bad) 
  45c43c:	outs   dx,BYTE PTR ds:[rsi]
  45c43d:	outs   dx,BYTE PTR ds:[rsi]
  45c43e:	gs jb  0x45c494
  45c441:	je     0x45c4a4
  45c443:	jb     0x45c4b9
  45c445:	add    BYTE PTR [rdx+0x61],al
  45c448:	outs   dx,BYTE PTR ds:[rsi]
  45c449:	outs   dx,BYTE PTR ds:[rsi]
  45c44a:	gs jb  0x45c492
  45c44d:	outs   dx,BYTE PTR ds:[rsi]
  45c44e:	add    BYTE PTR fs:[rax+0x61],dh
  45c452:	addr32 gs jae 0x45c456
  45c456:	jae    0x45c4bd
  45c458:	ins    BYTE PTR es:[rdi],dx
  45c459:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  45c45e:	push   rax
  45c45f:	(bad)  
  45c460:	add    BYTE PTR gs:[ebx+0x65],dh
  45c465:	ins    BYTE PTR es:[rdi],dx
  45c466:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  45c46b:	rex.WB je 0x45c4d3
  45c46e:	ins    DWORD PTR es:[rdi],dx
  45c46f:	rex.RX outs dx,DWORD PTR ds:[rsi]
  45c471:	outs   dx,BYTE PTR ds:[rsi]
  45c472:	je     0x45c474
  45c474:	rex.RB jbe 0x45c4dc
  45c477:	outs   dx,BYTE PTR ds:[rsi]
  45c478:	je     0x45c4c2
  45c47a:	(bad)  
  45c47b:	outs   dx,BYTE PTR ds:[rsi]
  45c47c:	fs ins BYTE PTR es:[rdi],dx
  45c47e:	gs jb  0x45c481
  45c481:	push   rbx
  45c482:	gs ins BYTE PTR es:[rdi],dx
  45c484:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  45c489:	push   rax
  45c48a:	(bad)  
  45c48b:	addr32 gs rex.XB push 0x65676e61
  45c493:	add    BYTE PTR fs:[rcx+0x64],ah
  45c497:	fs pop rdi
  45c499:	push   rbx
  45c49a:	gs ins BYTE PTR es:[rdi],dx
  45c49c:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  45c4a1:	push   rax
  45c4a2:	(bad)  
  45c4a3:	addr32 gs rex.XB push 0x65676e61
  45c4ab:	add    BYTE PTR fs:[rdx+0x65],dh
  45c4af:	ins    DWORD PTR es:[rdi],dx
  45c4b0:	outs   dx,DWORD PTR ds:[rsi]
  45c4b1:	jbe    0x45c518
  45c4b3:	pop    rdi
  45c4b4:	push   rbx
  45c4b5:	gs ins BYTE PTR es:[rdi],dx
  45c4b7:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  45c4bc:	push   rax
  45c4bd:	(bad)  
  45c4be:	addr32 gs rex.XB push 0x65676e61
  45c4c6:	add    BYTE PTR fs:[rdi+0x65],ah
  45c4ca:	je     0x45c52b
  45c4cc:	push   rax
  45c4cd:	(bad)  
  45c4ce:	addr32 gs jae 0x45c4d2
  45c4d2:	addr32 gs je 0x45c535
  45c4d6:	push   rbx
  45c4d7:	gs ins BYTE PTR es:[rdi],dx
  45c4d9:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  45c4de:	rex.WB outs dx,BYTE PTR ds:[rsi]
  45c4e0:	fs gs js 0x45c4e4
  45c4e4:	jae    0x45c54b
  45c4e6:	je     0x45c547
  45c4e8:	push   rbx
  45c4e9:	gs ins BYTE PTR es:[rdi],dx
  45c4eb:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  45c4f0:	rex.WB outs dx,BYTE PTR ds:[rsi]
  45c4f2:	fs gs js 0x45c4f6
  45c4f6:	addr32 gs je 0x45c559
  45c4fa:	push   rbx
  45c4fb:	gs ins BYTE PTR es:[rdi],dx
  45c4fd:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  45c502:	push   rax
  45c503:	(bad)  
  45c504:	add    BYTE PTR gs:[ebx+0x65],dh
  45c509:	je     0x45c56a
  45c50b:	push   rbx
  45c50c:	gs ins BYTE PTR es:[rdi],dx
  45c50e:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  45c513:	push   rax
  45c514:	(bad)  
  45c515:	add    BYTE PTR gs:[eax+0x61],dl
  45c51a:	imul   ebp,DWORD PTR [rsi+0x74],0x6e657645
  45c521:	je     0x45c564
  45c523:	jb     0x45c58c
  45c525:	jae    0x45c527
  45c527:	rex.WRXB outs dx,BYTE PTR ds:[rsi]
  45c529:	push   rax
  45c52a:	(bad)  
  45c52b:	imul   ebp,DWORD PTR [rsi+0x74],0x6c655300
  45c532:	movsxd esi,DWORD PTR gs:[rsi+rcx*2+0x65]
  45c537:	js     0x45c5ad
  45c539:	push   rax
  45c53a:	(bad)  
  45c53b:	add    BYTE PTR gs:[ebx+0x65],dl
  45c540:	ins    BYTE PTR es:[rdi],dx
  45c541:	movsxd esi,DWORD PTR gs:[rax+rdx*2+0x72]
  45c546:	gs jbe 0x45c5b2
  45c549:	outs   dx,DWORD PTR ds:[rsi]
  45c54a:	jne    0x45c5bf
  45c54c:	push   rax
  45c54d:	(bad)  
  45c54e:	add    BYTE PTR gs:[edi+0x6e],cl
  45c553:	push   rbx
  45c554:	gs ins BYTE PTR es:[rdi],dx
  45c556:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  45c55b:	push   rax
  45c55c:	(bad)  
  45c55d:	addr32 gs rex.XB push 0x65676e61
  45c565:	add    BYTE PTR fs:[rdi+0x6e],cl
  45c569:	rex.RX outs dx,DWORD PTR ds:[rsi]
  45c56b:	outs   dx,BYTE PTR ds:[rsi]
  45c56c:	je     0x45c5b1
  45c56e:	push   0x65676e61
  45c573:	add    BYTE PTR fs:[rdi+rbp*2+0x6f],dl
  45c578:	ins    BYTE PTR es:[rdi],dx
  45c579:	push   rbx
  45c57a:	je     0x45c5ee
  45c57c:	imul   esi,DWORD PTR [rax+0x49],0x6d6574
  45c583:	rex.XB jb 0x45c5eb
  45c586:	(bad)  
  45c587:	je     0x45c5ee
  45c589:	rex.WB je 0x45c5f1
  45c58c:	ins    DWORD PTR es:[rdi],dx
  45c58d:	add    BYTE PTR [rbx+0x69],dl
  45c590:	jp     0x45c5f7
  45c592:	add    BYTE PTR [rbx+0x65],dl
  45c595:	je     0x45c5e4
  45c597:	imul   ebp,DWORD PTR [rsi+0x69],0x576d756d
  45c59e:	imul   esp,DWORD PTR [rsp+rsi*2+0x68],0x61684300
  45c5a6:	outs   dx,BYTE PTR ds:[rsi]
  45c5a7:	addr32 gs push rbx
  45c5aa:	gs ins BYTE PTR es:[rdi],dx
  45c5ac:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  45c5b1:	outs   dx,BYTE PTR ds:[rsi]
  45c5b2:	imul   rsp,QWORD PTR [rdi+0x68],0x6867696c
  45c5ba:	je     0x45c5bc
  45c5bc:	jo     0x45c61f
  45c5be:	addr32 gs pop rdi
  45c5c1:	rex.XB ins BYTE PTR es:[rdi],dx
  45c5c3:	imul   esp,DWORD PTR [rbx+0x6b],0x74654700
  45c5ca:	push   rsp
  45c5cb:	outs   dx,DWORD PTR ds:[rsi]
  45c5cc:	outs   dx,DWORD PTR ds:[rsi]
  45c5cd:	ins    BYTE PTR es:[rdi],dx
  45c5ce:	push   rbx
  45c5cf:	je     0x45c643
  45c5d1:	imul   esi,DWORD PTR [rax+0x49],0x6d6574
  45c5d8:	rex.WB outs dx,BYTE PTR ds:[rsi]
  45c5da:	jae    0x45c641
  45c5dc:	jb     0x45c652
  45c5de:	push   rax
  45c5df:	(bad)  
  45c5e0:	add    BYTE PTR gs:[edi+ebp*2+0x6f],dl
  45c5e6:	ins    BYTE PTR es:[rdi],dx
  45c5e7:	push   rbx
  45c5e8:	je     0x45c65c
  45c5ea:	imul   esi,DWORD PTR [rax+0x0],0x6976616e
  45c5f1:	addr32 (bad) 
  45c5f3:	je     0x45c65e
  45c5f5:	outs   dx,DWORD PTR ds:[rsi]
  45c5f6:	outs   dx,BYTE PTR ds:[rsi]
  45c5f7:	add    BYTE PTR [rax+0x69],dl
  45c5fa:	movsxd esi,DWORD PTR [rbp+rsi*2+0x72]
  45c5fe:	rex.X outs dx,DWORD PTR gs:[rsi]
  45c601:	js     0x45c603
  45c603:	ins    BYTE PTR es:[rdi],dx
  45c604:	outs   dx,DWORD PTR ds:[rsi]
  45c605:	outs   dx,DWORD PTR ds:[esi]
  45c607:	add    BYTE PTR [rax+0x61],dl
  45c60a:	addr32 gs jae 0x45c60e
  45c60e:	push   rbx
  45c60f:	gs ins BYTE PTR es:[rdi],dx
  45c611:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  45c616:	rex.WB outs dx,BYTE PTR ds:[rsi]
  45c618:	fs gs js 0x45c61c
  45c61c:	push   rbx
  45c61d:	gs ins BYTE PTR es:[rdi],dx
  45c61f:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  45c624:	push   rax
  45c625:	(bad)  
  45c626:	add    BYTE PTR gs:[edi+ebp*2+0x6f],dl
  45c62c:	ins    BYTE PTR es:[rdi],dx
  45c62d:	push   rbx
  45c62e:	je     0x45c6a2
  45c630:	imul   esi,DWORD PTR [rax+0x52],0x65646e65
  45c637:	jb     0x45c67e
  45c639:	jbe    0x45c6a0
  45c63b:	outs   dx,BYTE PTR ds:[rsi]
  45c63c:	je     0x45c67f
  45c63e:	jb     0x45c6a7
  45c640:	jae    0x45c642
  45c642:	rex.WRXB outs dx,BYTE PTR ds:[rsi]
  45c644:	push   rdx
  45c645:	outs   dx,BYTE PTR gs:[rsi]
  45c647:	fs gs jb 0x45c69f
  45c64b:	outs   dx,DWORD PTR ds:[rsi]
  45c64c:	outs   dx,DWORD PTR ds:[rsi]
  45c64d:	ins    BYTE PTR es:[rdi],dx
  45c64e:	push   rbx
  45c64f:	je     0x45c6c3
  45c651:	imul   esi,DWORD PTR [rax+0x42],0x6564726f
  45c658:	jb     0x45c65a
  45c65a:	outs   dx,DWORD PTR ds:[rsi]
  45c65b:	ja     0x45c6cb
  45c65d:	gs jb  0x45c660
  45c660:	rex.XB ins BYTE PTR es:[rdi],dx
  45c662:	gs (bad) 
  45c664:	jb     0x45c6af
  45c666:	je     0x45c6cd
  45c668:	ins    DWORD PTR es:[rdi],dx
  45c669:	jae    0x45c66b
  45c66b:	rex.WB outs dx,BYTE PTR ds:[rsi]
  45c66d:	jae    0x45c6d4
  45c66f:	jb     0x45c6e5
  45c671:	rex.WB je 0x45c6d9
  45c674:	ins    DWORD PTR es:[rdi],dx
  45c675:	add    BYTE PTR [rbx+0x65],dl
  45c678:	je     0x45c6c3
  45c67a:	je     0x45c6e1
  45c67c:	ins    DWORD PTR es:[rdi],dx
  45c67d:	add    BYTE PTR [rdx+0x65],dl
  45c680:	ins    DWORD PTR es:[rdi],dx
  45c681:	outs   dx,DWORD PTR ds:[rsi]
  45c682:	jbe    0x45c6e9
  45c684:	rex.WB je 0x45c6ec
  45c687:	ins    DWORD PTR es:[rdi],dx
  45c688:	add    BYTE PTR [rbp+0x65],cl
  45c68b:	imul   esp,DWORD PTR fs:[rcx+0x53],0x63746977
  45c693:	push   0x55435000
  45c698:	push   rbx
  45c699:	ja     0x45c704
  45c69b:	je     0x45c700
  45c69d:	push   0x53554300
  45c6a2:	ja     0x45c70d
  45c6a4:	je     0x45c709
  45c6a6:	push   0x69614d00
  45c6ab:	outs   dx,BYTE PTR ds:[rsi]
  45c6ac:	add    BYTE PTR [rdx+0x65],dh
  45c6af:	jae    0x45c720
  45c6b1:	jne    0x45c725
  45c6b3:	movsxd esp,DWORD PTR [rbp+0x4d]
  45c6b6:	(bad)  
  45c6b7:	outs   dx,BYTE PTR ds:[rsi]
  45c6b8:	add    BYTE PTR [rdx+0x65],dh
  45c6bb:	jae    0x45c72c
  45c6bd:	jne    0x45c731
  45c6bf:	movsxd esp,DWORD PTR [rbp+0x43]
  45c6c2:	jne    0x45c730
  45c6c4:	je     0x45c73b
  45c6c6:	jb     0x45c72d
  45c6c8:	add    BYTE PTR [rdi+0x65],ah
  45c6cb:	je     0x45c72c
  45c6cd:	push   rdx
  45c6ce:	gs jae 0x45c740
  45c6d1:	jne    0x45c745
  45c6d3:	movsxd esp,DWORD PTR [rbp+0x4d]
  45c6d6:	(bad)  
  45c6d7:	outs   dx,BYTE PTR ds:[rsi]
  45c6d8:	(bad)  
  45c6d9:	addr32 gs jb 0x45c6dd
  45c6dd:	movsxd rbp,DWORD PTR [r15+0x6e]
  45c6e1:	add    BYTE PTR [rdi+0x65],ah
  45c6e4:	je     0x45c745
  45c6e6:	rex.XB outs dx,DWORD PTR ds:[rsi]
  45c6e8:	outs   dx,BYTE PTR ds:[rsi]
  45c6e9:	imul   sp,WORD PTR [rdi+0x75],0x6172
  45c6ef:	je     0x45c75a
  45c6f1:	outs   dx,DWORD PTR ds:[rsi]
  45c6f2:	outs   dx,BYTE PTR ds:[rsi]
  45c6f3:	rex.WB ins DWORD PTR es:[rdi],dx
  45c6f5:	(bad)  
  45c6f6:	add    BYTE PTR gs:[edi+0x65],ah
  45c6fb:	je     0x45c75c
  45c6fd:	rex.RXB
  45c6fe:	outs   dx,BYTE PTR gs:[rsi]
  45c700:	gs jb  0x45c764
  45c703:	ins    BYTE PTR es:[rdi],dx
  45c704:	push   rdx
  45c705:	gs jae 0x45c777
  45c708:	jne    0x45c77c
  45c70a:	movsxd esp,DWORD PTR [rbp+0x73]
  45c70d:	add    BYTE PTR [rdi+0x65],ah
  45c710:	je     0x45c771
  45c712:	rex.W
  45c713:	gs ins BYTE PTR es:[rdi],dx
  45c715:	jo     0x45c717
  45c717:	addr32 gs je 0x45c77a
  45c71b:	rex.W
  45c71c:	gs ins BYTE PTR es:[rdi],dx
  45c71e:	jo     0x45c762
  45c720:	outs   dx,DWORD PTR ds:[rsi]
  45c721:	outs   dx,DWORD PTR ds:[rsi]
  45c722:	imul   ecx,DWORD PTR [rdi+0x6e],0x6c
  45c726:	imul   ebp,DWORD PTR [rsi+0x65],0x74656700
  45c72d:	pop    rdi
  45c72e:	rex.W jns 0x45c7a1
  45c731:	gs jb  0x45c780
  45c734:	imul   ebp,DWORD PTR [rsi+0x6b],0x74656700
  45c73b:	pop    rdi
  45c73c:	rex.WB outs dx,BYTE PTR ds:[rsi]
  45c73e:	jae    0x45c7b4
  45c740:	(bad)  
  45c741:	ins    BYTE PTR es:[rdi],dx
  45c742:	ins    BYTE PTR es:[rdi],dx
  45c743:	push   rdi
  45c744:	imul   esi,DWORD PTR [rax+rbp*2+0x6f],0x6f437475
  45c74c:	outs   dx,BYTE PTR ds:[rsi]
  45c74d:	imul   sp,WORD PTR [rdi+0x75],0x6572
  45c753:	add    BYTE PTR [rdi+0x65],ah
  45c756:	je     0x45c7b7
  45c758:	rex.WB outs dx,BYTE PTR ds:[rsi]
  45c75a:	je     0x45c7c1
  45c75c:	jb     0x45c7cc
  45c75e:	gs je  0x45c7b3
  45c761:	gs jae 0x45c7d3
  45c764:	jne    0x45c7d8
  45c766:	movsxd esp,DWORD PTR [rbp+0x73]
  45c769:	add    BYTE PTR [rdx+0x69],al
  45c76c:	je     0x45c7db
  45c76e:	(bad)  
  45c76f:	jo     0x45c771
  45c771:	addr32 gs je 0x45c7d4
  45c775:	ins    BYTE PTR es:[rdi],dx
  45c776:	(bad)  
  45c777:	jne    0x45c7e7
  45c779:	movsxd ebp,DWORD PTR [rax+0x73]
  45c77c:	jne    0x45c7ee
  45c77e:	gs jb  0x45c7e8
  45c781:	jb     0x45c7ec
  45c783:	add    BYTE PTR fs:[rdi+0x65],ah
  45c787:	je     0x45c7e8
  45c789:	rex.WR outs dx,DWORD PTR ds:[rsi]
  45c78b:	movsxd esp,DWORD PTR [rcx+0x6c]
  45c78e:	push   rdx
  45c78f:	gs jae 0x45c801
  45c792:	jne    0x45c806
  45c794:	movsxd esp,DWORD PTR [rbp+0x73]
  45c797:	add    BYTE PTR [rdi+0x65],ah
  45c79a:	je     0x45c7fb
  45c79c:	ins    BYTE PTR es:[rdi],dx
  45c79d:	outs   dx,DWORD PTR ds:[rsi]
  45c79e:	outs   dx,DWORD PTR ds:[esi]
  45c7a0:	add    BYTE PTR [rdi+0x65],ah
  45c7a3:	je     0x45c804
  45c7a5:	rex.WRB (bad) 
  45c7a7:	imul   ebp,DWORD PTR [rsi+0x74],0x6e616e65
  45c7ae:	movsxd esp,DWORD PTR [rbp+0x0]
  45c7b1:	addr32 gs je 0x45c814
  45c7b5:	rex.WRB (bad) 
  45c7b7:	imul   ebp,DWORD PTR [rsi+0x74],0x6e616e65
  45c7be:	movsxd esp,DWORD PTR [rbp+0x41]
  45c7c1:	fs fs rex.WRXB jb 0x45c818
  45c7c6:	gs ins DWORD PTR es:[rdi],dx
  45c7c8:	outs   dx,DWORD PTR ds:[rsi]
  45c7c9:	jbe    0x45c830
  45c7cb:	rex.RX
  45c7cc:	gs (bad) 
  45c7ce:	je     0x45c845
  45c7d0:	jb     0x45c837
  45c7d2:	jae    0x45c7d4
  45c7d4:	addr32 gs je 0x45c837
  45c7d8:	rex.WRB (bad) 
  45c7da:	imul   ebp,DWORD PTR [rsi+0x74],0x6e616e65
  45c7e1:	movsxd esp,DWORD PTR [rbp+0x52]
  45c7e4:	gs jo  0x45c848
  45c7e7:	imul   esi,DWORD PTR [rdx+0x0],0x5f746567
  45c7ee:	rex.WRB (bad) 
  45c7f0:	imul   ebp,DWORD PTR [rsi+0x74],0x6e616e65
  45c7f7:	movsxd esp,DWORD PTR [rbp+0x55]
  45c7fa:	jo     0x45c863
  45c7fc:	jb     0x45c85f
  45c7fe:	fs gs rex.RB
  45c801:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x6567006e
  45c80a:	je     0x45c86b
  45c80c:	push   rdx
  45c80d:	gs (bad) 
  45c80f:	fs push rdx
  45c811:	gs ins BYTE PTR es:[rdi],dx
  45c813:	gs (bad) 
  45c815:	jae    0x45c87c
  45c817:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  45c819:	je     0x45c880
  45c81b:	jae    0x45c81d
  45c81d:	addr32 gs je 0x45c880
  45c821:	push   rdx
  45c822:	movsxd ebp,DWORD PTR gs:[rdi+0x76]
  45c826:	gs jb  0x45c872
  45c829:	outs   dx,BYTE PTR ds:[rsi]
  45c82a:	jae    0x45c8a0
  45c82c:	(bad)  
  45c82d:	ins    BYTE PTR es:[rdi],dx
  45c82e:	ins    BYTE PTR es:[rdi],dx
  45c82f:	(bad)  
  45c830:	je     0x45c89b
  45c832:	outs   dx,DWORD PTR ds:[rsi]
  45c833:	outs   dx,BYTE PTR ds:[rsi]
  45c834:	add    BYTE PTR [rdi+0x65],ah
  45c837:	je     0x45c898
  45c839:	jb     0x45c8a0
  45c83b:	ins    BYTE PTR es:[rdi],dx
  45c83c:	gs (bad) 
  45c83e:	jae    0x45c8a5
  45c840:	outs   dx,BYTE PTR ds:[rsi]
  45c841:	outs   dx,DWORD PTR ds:[rsi]
  45c842:	je     0x45c8a9
  45c844:	jae    0x45c846
  45c846:	addr32 gs je 0x45c8a9
  45c84a:	jae    0x45c8b1
  45c84c:	movsxd esi,DWORD PTR [rbp+0x72]
  45c84f:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x5f746567
  45c857:	push   rsp
  45c858:	outs   dx,DWORD PTR ds:[rsi]
  45c859:	outs   dx,DWORD PTR ds:[rsi]
  45c85a:	ins    BYTE PTR es:[rdi],dx
  45c85b:	jae    0x45c85d
  45c85d:	addr32 gs je 0x45c8c0
  45c861:	push   rbp
  45c862:	outs   dx,BYTE PTR ds:[rsi]
  45c863:	imul   ebp,DWORD PTR [rsi+0x73],0x6c6c6174
  45c86a:	movsxd rbp,DWORD PTR [r15+0x6e]
  45c86e:	add    BYTE PTR [rdi+0x65],ah
  45c871:	je     0x45c8d2
  45c873:	push   rbp
  45c874:	jo     0x45c8dd
  45c876:	jb     0x45c8d9
  45c878:	fs gs rex.B jo 0x45c8ed
  45c87d:	ins    BYTE PTR es:[rdi],dx
  45c87e:	jns    0x45c8d3
  45c880:	gs jb  0x45c8f9
  45c883:	imul   esp,DWORD PTR [rbx+0x65],0x6b636150
  45c88a:	jae    0x45c88c
  45c88c:	addr32 gs je 0x45c8ef
  45c890:	push   rbp
  45c891:	jo     0x45c8fa
  45c893:	jb     0x45c8f6
  45c895:	fs gs rex.WRB (bad) 
  45c899:	push   0x6f
  45c89b:	jb     0x45c8f2
  45c89d:	jo     0x45c906
  45c89f:	jb     0x45c902
  45c8a1:	fs add BYTE PTR gs:[rbx+0x6f],al
  45c8a6:	outs   dx,BYTE PTR ds:[rsi]
  45c8a7:	imul   sp,WORD PTR [rdi+0x75],0x6172
  45c8ad:	je     0x45c918
  45c8af:	outs   dx,DWORD PTR ds:[rsi]
  45c8b0:	outs   dx,BYTE PTR ds:[rsi]
  45c8b1:	rex.WB ins DWORD PTR es:[rdi],dx
  45c8b3:	(bad)  
  45c8b4:	add    BYTE PTR gs:[edi+0x65],al
  45c8b9:	outs   dx,BYTE PTR ds:[rsi]
  45c8ba:	gs jb  0x45c91e
  45c8bd:	ins    BYTE PTR es:[rdi],dx
  45c8be:	push   rdx
  45c8bf:	gs jae 0x45c931
  45c8c2:	jne    0x45c936
  45c8c4:	movsxd esp,DWORD PTR [rbp+0x73]
  45c8c7:	add    BYTE PTR [rax+0x65],cl
  45c8ca:	ins    BYTE PTR es:[rdi],dx
  45c8cb:	jo     0x45c8cd
  45c8cd:	rex.W
  45c8ce:	gs ins BYTE PTR es:[rdi],dx
  45c8d0:	jo     0x45c914
  45c8d2:	outs   dx,DWORD PTR ds:[rsi]
  45c8d3:	outs   dx,DWORD PTR ds:[rsi]
  45c8d4:	imul   ecx,DWORD PTR [rdi+0x6e],0x6c
  45c8d8:	imul   ebp,DWORD PTR [rsi+0x65],0x70794800
  45c8df:	gs jb  0x45c92e
  45c8e2:	imul   ebp,DWORD PTR [rsi+0x6b],0x736e4900
  45c8e9:	je     0x45c94c
  45c8eb:	ins    BYTE PTR es:[rdi],dx
  45c8ec:	ins    BYTE PTR es:[rdi],dx
  45c8ed:	push   rdi
  45c8ee:	imul   esi,DWORD PTR [rax+rbp*2+0x6f],0x6f437475
  45c8f6:	outs   dx,BYTE PTR ds:[rsi]
  45c8f7:	imul   sp,WORD PTR [rdi+0x75],0x6572
  45c8fd:	add    BYTE PTR [rcx+0x6e],cl
  45c900:	je     0x45c967
  45c902:	jb     0x45c972
  45c904:	gs je  0x45c959
  45c907:	gs jae 0x45c979
  45c90a:	jne    0x45c97e
  45c90c:	movsxd esp,DWORD PTR [rbp+0x73]
  45c90f:	add    BYTE PTR [rcx+riz*2+0x75],ch
  45c913:	outs   dx,BYTE PTR ds:[rsi]
  45c914:	movsxd ebp,DWORD PTR [rax+0x73]
  45c917:	jne    0x45c989
  45c919:	gs jb  0x45c983
  45c91c:	jb     0x45c987
  45c91e:	add    BYTE PTR fs:[rdi+rbp*2+0x63],cl
  45c923:	(bad)  
  45c924:	ins    BYTE PTR es:[rdi],dx
  45c925:	push   rdx
  45c926:	gs jae 0x45c998
  45c929:	jne    0x45c99d
  45c92b:	movsxd esp,DWORD PTR [rbp+0x73]
  45c92e:	add    BYTE PTR [rbp+0x61],cl
  45c931:	imul   ebp,DWORD PTR [rsi+0x74],0x6e616e65
  45c938:	movsxd esp,DWORD PTR [rbp+0x0]
  45c93b:	rex.WRB (bad) 
  45c93d:	imul   ebp,DWORD PTR [rsi+0x74],0x6e616e65
  45c944:	movsxd esp,DWORD PTR [rbp+0x41]
  45c947:	fs fs rex.WRXB jb 0x45c99e
  45c94c:	gs ins DWORD PTR es:[rdi],dx
  45c94e:	outs   dx,DWORD PTR ds:[rsi]
  45c94f:	jbe    0x45c9b6
  45c951:	rex.RX
  45c952:	gs (bad) 
  45c954:	je     0x45c9cb
  45c956:	jb     0x45c9bd
  45c958:	jae    0x45c95a
  45c95a:	rex.WRB (bad) 
  45c95c:	imul   ebp,DWORD PTR [rsi+0x74],0x6e616e65
  45c963:	movsxd esp,DWORD PTR [rbp+0x52]
  45c966:	gs jo  0x45c9ca
  45c969:	imul   esi,DWORD PTR [rdx+0x0],0x6e69614d
  45c970:	je     0x45c9d7
  45c972:	outs   dx,BYTE PTR ds:[rsi]
  45c973:	(bad)  
  45c974:	outs   dx,BYTE PTR ds:[rsi]
  45c975:	movsxd esp,DWORD PTR [rbp+0x55]
  45c978:	jo     0x45c9e1
  45c97a:	jb     0x45c9dd
  45c97c:	fs gs rex.RB
  45c97f:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x6552006e
  45c988:	(bad)  
  45c989:	fs push rdx
  45c98b:	gs ins BYTE PTR es:[rdi],dx
  45c98d:	gs (bad) 
  45c98f:	jae    0x45c9f6
  45c991:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  45c993:	je     0x45c9fa
  45c995:	jae    0x45c997
  45c997:	push   rdx
  45c998:	movsxd ebp,DWORD PTR gs:[rdi+0x76]
  45c99c:	gs jb  0x45c9e8
  45c99f:	outs   dx,BYTE PTR ds:[rsi]
  45c9a0:	jae    0x45ca16
  45c9a2:	(bad)  
  45c9a3:	ins    BYTE PTR es:[rdi],dx
  45c9a4:	ins    BYTE PTR es:[rdi],dx
  45c9a5:	(bad)  
  45c9a6:	je     0x45ca11
  45c9a8:	outs   dx,DWORD PTR ds:[rsi]
  45c9a9:	outs   dx,BYTE PTR ds:[rsi]
  45c9aa:	add    BYTE PTR [rdx+0x65],dh
  45c9ad:	ins    BYTE PTR es:[rdi],dx
  45c9ae:	gs (bad) 
  45c9b0:	jae    0x45ca17
  45c9b2:	outs   dx,BYTE PTR ds:[rsi]
  45c9b3:	outs   dx,DWORD PTR ds:[rsi]
  45c9b4:	je     0x45ca1b
  45c9b6:	jae    0x45c9b8
  45c9b8:	jae    0x45ca1f
  45c9ba:	movsxd esi,DWORD PTR [rbp+0x72]
  45c9bd:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x6c6f6f54
  45c9c5:	jae    0x45c9c7
  45c9c7:	push   rbp
  45c9c8:	outs   dx,BYTE PTR ds:[rsi]
  45c9c9:	imul   ebp,DWORD PTR [rsi+0x73],0x6c6c6174
  45c9d0:	movsxd rbp,DWORD PTR [r15+0x6e]
  45c9d4:	add    BYTE PTR [rbp+0x70],dl
  45c9d7:	addr32 jb 0x45ca3b
  45c9da:	fs gs rex.B jo 0x45ca4f
  45c9df:	ins    BYTE PTR es:[rdi],dx
  45c9e0:	jns    0x45ca35
  45c9e2:	gs jb  0x45ca5b
  45c9e5:	imul   esp,DWORD PTR [rbx+0x65],0x6b636150
  45c9ec:	jae    0x45c9ee
  45c9ee:	push   rbp
  45c9ef:	jo     0x45ca58
  45c9f1:	jb     0x45ca54
  45c9f3:	fs gs rex.WRB (bad) 
  45c9f7:	push   0x6f
  45c9f9:	jb     0x45ca50
  45c9fb:	jo     0x45ca64
  45c9fd:	jb     0x45ca60
  45c9ff:	fs add BYTE PTR gs:[rax+0x65],ch
  45ca04:	ins    BYTE PTR es:[rdi],dx
  45ca05:	jo     0x45ca4a
  45ca07:	outs   dx,DWORD PTR ds:[rsi]
  45ca08:	outs   dx,BYTE PTR ds:[rsi]
  45ca09:	je     0x45ca7d
  45ca0b:	outs   dx,DWORD PTR ds:[rsi]
  45ca0c:	ins    BYTE PTR es:[rdi],dx
  45ca0d:	add    BYTE PTR [rax+0x65],ch
  45ca10:	ins    BYTE PTR es:[rdi],dx
  45ca11:	jo     0x45ca67
  45ca13:	outs   dx,DWORD PTR ds:[rsi]
  45ca14:	jo     0x45ca7f
  45ca16:	movsxd eax,DWORD PTR [rax]
  45ca18:	addr32 gs je 0x45ca7b
  45ca1c:	rex.W
  45ca1d:	gs ins BYTE PTR es:[rdi],dx
  45ca1f:	jo     0x45ca75
  45ca21:	outs   dx,DWORD PTR ds:[rsi]
  45ca22:	jo     0x45ca8d
  45ca24:	movsxd eax,DWORD PTR [rax]
  45ca26:	jae    0x45ca8d
  45ca28:	je     0x45ca89
  45ca2a:	rex.W
  45ca2b:	gs ins BYTE PTR es:[rdi],dx
  45ca2d:	jo     0x45ca83
  45ca2f:	outs   dx,DWORD PTR ds:[rsi]
  45ca30:	jo     0x45ca9b
  45ca32:	movsxd eax,DWORD PTR [rax]
  45ca34:	rex.W
  45ca35:	gs ins BYTE PTR es:[rdi],dx
  45ca37:	jo     0x45ca8d
  45ca39:	outs   dx,DWORD PTR ds:[rsi]
  45ca3a:	jo     0x45caa5
  45ca3c:	movsxd eax,DWORD PTR [rax]
  45ca3e:	rex.XB jne 0x45cab3
  45ca41:	jae    0x45cab2
  45ca43:	jb     0x45ca45
  45ca45:	jae    0x45caa8
  45ca47:	jbe    0x45caae
  45ca49:	fs rex.XB jne 0x45cabf
  45ca4d:	jae    0x45cabe
  45ca4f:	jb     0x45ca51
  45ca51:	rex.B
  45ca52:	fs fs rex.WB je 0x45cabc
  45ca57:	ins    DWORD PTR es:[rdi],dx
  45ca58:	add    BYTE PTR [rcx+0x6d],cl
  45ca5b:	(bad)  
  45ca5c:	add    BYTE PTR gs:[ecx+0x64],al
  45ca61:	fs rex.W
  45ca63:	gs (bad) 
  45ca65:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x646f6200
  45ca6d:	jns    0x45ca6f
  45ca6f:	push   rax
  45ca70:	(bad)  
  45ca71:	addr32 gs push rdx
  45ca74:	gs jae 0x45cae6
  45ca77:	jne    0x45caeb
  45ca79:	movsxd esp,DWORD PTR [rbp+0x0]
  45ca7c:	rex.XB outs dx,DWORD PTR ds:[rsi]
  45ca7e:	ins    DWORD PTR es:[rdi],dx
  45ca7f:	ins    DWORD PTR es:[rdi],dx
  45ca80:	(bad)  
  45ca81:	outs   dx,BYTE PTR ds:[rsi]
  45ca82:	fs rex.WRX (bad) 
  45ca85:	ins    DWORD PTR es:[rdi],dx
  45ca86:	gs jae 0x45caf9
  45ca89:	(bad)  
  45ca8a:	movsxd esp,DWORD PTR [rbp+0x0]
  45ca8d:	rex.WR outs dx,DWORD PTR ds:[rsi]
  45ca8f:	(bad)  
  45ca90:	fs push rax
  45ca92:	(bad)  
  45ca93:	addr32 gs jae 0x45ca97
  45ca97:	push   rbx
  45ca98:	je     0x45cb0c
  45ca9a:	gs (bad) 
  45ca9c:	ins    DWORD PTR es:[rdi],dx
  45ca9d:	add    BYTE PTR [rax+0x6d],bh
  45caa0:	ins    BYTE PTR es:[rdi],dx
  45caa1:	push   rbx
  45caa2:	je     0x45cb16
  45caa4:	gs (bad) 
  45caa6:	ins    DWORD PTR es:[rdi],dx
  45caa7:	add    BYTE PTR [rbx+0x79],dl
  45caaa:	jae    0x45cb20
  45caac:	gs ins DWORD PTR es:[rdi],dx
  45caae:	cs pop rax
  45cab0:	ins    DWORD PTR es:[rdi],dx
  45cab1:	ins    BYTE PTR es:[rdi],dx
  45cab2:	add    BYTE PTR [rax+0x6d],bl
  45cab5:	ins    BYTE PTR es:[rdi],dx
  45cab6:	push   rdx
  45cab7:	gs (bad) 
  45cab9:	fs gs jb 0x45cabd
  45cabd:	jb     0x45cb24
  45cabf:	(bad)  
  45cac0:	fs gs jb 0x45cac4
  45cac4:	imul   r12d,DWORD PTR [rbx+0x74],0x616e6f69
  45cacc:	jb     0x45cb47
  45cace:	(bad)  
  45cacf:	xor    al,BYTE PTR [rax]
  45cad1:	jo     0x45cb34
  45cad3:	addr32 gs rex.RX (bad) 
  45cad7:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
  45cadb:	jns    0x45cadd
  45cadd:	jae    0x45cb53
  45cadf:	jb     0x45cb4a
  45cae1:	outs   dx,BYTE PTR ds:[rsi]
  45cae2:	addr32 push rdx
  45cae4:	gs jae 0x45cb56
  45cae7:	jne    0x45cb5b
  45cae9:	movsxd esp,DWORD PTR [rbp+0x4d]
  45caec:	(bad)  
  45caed:	outs   dx,BYTE PTR ds:[rsi]
  45caee:	(bad)  
  45caef:	addr32 gs jb 0x45caf3
  45caf3:	push   rbx
  45caf4:	jns    0x45cb69
  45caf6:	je     0x45cb5d
  45caf8:	ins    DWORD PTR es:[rdi],dx
  45caf9:	cs rex.WB
  45cafb:	imul   r14d,DWORD PTR [rbx+0x70],0x6261736f
  45cb03:	ins    BYTE PTR es:[rdi],dx
  45cb04:	gs imul r14d,DWORD PTR cs:[rbx+0x70],0x65736f
  45cb0e:	rex.WR outs dx,DWORD PTR ds:[rsi]
  45cb10:	(bad)  
  45cb11:	add    BYTE PTR fs:[rbx+0x72],al
  45cb15:	gs (bad) 
  45cb17:	je     0x45cb7e
  45cb19:	push   rbx
  45cb1a:	je     0x45cb7d
  45cb1c:	outs   dx,BYTE PTR ds:[rsi]
  45cb1d:	fs (bad) 
  45cb1f:	jb     0x45cb85
  45cb21:	push   rax
  45cb22:	(bad)  
  45cb23:	add    BYTE PTR gs:[ecx+0x64],al
  45cb28:	fs rex.W
  45cb2a:	gs (bad) 
  45cb2c:	fs gs jb 0x45cb30
  45cb30:	rex.RXB
  45cb31:	gs je  0x45cb77
  45cb34:	outs   dx,DWORD PTR ds:[rsi]
  45cb35:	ins    DWORD PTR es:[rdi],dx
  45cb36:	ins    DWORD PTR es:[rdi],dx
  45cb37:	(bad)  
  45cb38:	outs   dx,BYTE PTR ds:[rsi]
  45cb39:	add    BYTE PTR fs:[rdi+0x65],al
  45cb3d:	je     0x45cb8b
  45cb3f:	outs   dx,DWORD PTR ds:[rsi]
  45cb40:	movsxd esp,DWORD PTR [rcx+0x6c]
  45cb43:	imul   edi,DWORD PTR [rdx+0x61],0x53656c62
  45cb4a:	je     0x45cbbe
  45cb4c:	imul   ebp,DWORD PTR [rsi+0x67],0x6d656c45
  45cb53:	outs   dx,BYTE PTR gs:[rsi]
  45cb55:	je     0x45cb57
  45cb57:	rex.RXB
  45cb58:	gs je  0x45cba4
  45cb5b:	movsxd ebp,DWORD PTR [rdi+0x6e]
  45cb5e:	add    BYTE PTR [rcx+0x73],cl
  45cb61:	rex.RB outs dx,BYTE PTR ds:[rsi]
  45cb63:	fs rex.RB ins BYTE PTR es:[rdi],dx
  45cb66:	gs ins DWORD PTR es:[rdi],dx
  45cb68:	outs   dx,BYTE PTR gs:[rsi]
  45cb6a:	je     0x45cb6c
  45cb6c:	rex.RXB
  45cb6d:	gs je  0x45cbc2
  45cb70:	gs jae 0x45cbe2
  45cb73:	jne    0x45cbe7
  45cb75:	movsxd esp,DWORD PTR [rbp+0x4d]
  45cb78:	(bad)  
  45cb79:	outs   dx,BYTE PTR ds:[rsi]
  45cb7a:	(bad)  
  45cb7b:	addr32 gs jb 0x45cb7f
  45cb7f:	rex.RXB
  45cb80:	gs je  0x45cbd3
  45cb83:	(bad)  
  45cb84:	addr32 gs push rdx
  45cb87:	gs jae 0x45cbf9
  45cb8a:	jne    0x45cbfe
  45cb8c:	movsxd esp,DWORD PTR [rbp+0x53]
  45cb8f:	je     0x45cc03
  45cb91:	gs (bad) 
  45cb93:	ins    DWORD PTR es:[rdi],dx
  45cb94:	add    BYTE PTR [rbx+0x79],dl
  45cb97:	jae    0x45cc0d
  45cb99:	gs ins DWORD PTR es:[rdi],dx
  45cb9b:	cs push rdx
  45cb9d:	jne    0x45cc0d
  45cb9f:	je     0x45cc0a
  45cba1:	ins    DWORD PTR es:[rdi],dx
  45cba2:	gs rex.WB outs dx,BYTE PTR cs:[rsi]
  45cba6:	je     0x45cc0d
  45cba8:	jb     0x45cc19
  45cbaa:	jo     0x45cbff
  45cbac:	gs jb  0x45cc25
  45cbaf:	imul   esp,DWORD PTR [rbx+0x65],0x75470073
  45cbb6:	imul   esp,DWORD PTR [rcx+rax*2+0x74],0x62697274
  45cbbe:	jne    0x45cc34
  45cbc0:	add    BYTE PTR gs:[rbx+0x6f],al
  45cbc4:	ins    DWORD PTR es:[rdi],dx
  45cbc5:	push   rsi
  45cbc6:	imul   esi,DWORD PTR [rbx+0x69],0x41656c62
  45cbcd:	je     0x45cc43
  45cbcf:	jb     0x45cc3a
  45cbd1:	(bad)  
  45cbd2:	jne    0x45cc48
  45cbd4:	add    BYTE PTR gs:[rbx+0x79],dl
  45cbd8:	jae    0x45cc4e
  45cbda:	gs ins DWORD PTR es:[rdi],dx
  45cbdc:	cs push rdx
  45cbde:	gs data16 ins BYTE PTR es:[rdi],dx
  45cbe1:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  45cbe6:	outs   dx,BYTE PTR ds:[rsi]
  45cbe7:	add    BYTE PTR [rcx+0x73],al
  45cbea:	jae    0x45cc51
  45cbec:	ins    DWORD PTR es:[rdi],dx
  45cbed:	(bad)  
  45cbee:	ins    BYTE PTR es:[rdi],dx
  45cbef:	jns    0x45cc34
  45cbf1:	jne    0x45cc5f
  45cbf3:	je     0x45cc6a
  45cbf5:	jb     0x45cc5c
  45cbf7:	rex.B je 0x45cc6e
  45cbfa:	jb     0x45cc65
  45cbfc:	(bad)  
  45cbfd:	jne    0x45cc73
  45cbff:	add    BYTE PTR gs:[rcx+0x73],al
  45cc03:	jae    0x45cc6a
  45cc05:	ins    DWORD PTR es:[rdi],dx
  45cc06:	(bad)  
  45cc07:	ins    BYTE PTR es:[rdi],dx
  45cc08:	jns    0x45cc4d
  45cc0a:	outs   dx,DWORD PTR ds:[rsi]
  45cc0b:	outs   dx,BYTE PTR ds:[rsi]
  45cc0c:	imul   sp,WORD PTR [rdi+0x75],0x6172
  45cc12:	je     0x45cc7d
  45cc14:	outs   dx,DWORD PTR ds:[rsi]
  45cc15:	outs   dx,BYTE PTR ds:[rsi]
  45cc16:	rex.B je 0x45cc8d
  45cc19:	jb     0x45cc84
  45cc1b:	(bad)  
  45cc1c:	jne    0x45cc92
  45cc1e:	add    BYTE PTR gs:[rcx+0x73],al
  45cc22:	jae    0x45cc89
  45cc24:	ins    DWORD PTR es:[rdi],dx
  45cc25:	(bad)  
  45cc26:	ins    BYTE PTR es:[rdi],dx
  45cc27:	jns    0x45cc6d
  45cc29:	gs jae 0x45cc8f
  45cc2c:	jb     0x45cc97
  45cc2e:	jo     0x45cca4
  45cc30:	imul   ebp,DWORD PTR [rdi+0x6e],0x72747441
  45cc37:	imul   esp,DWORD PTR [rdx+0x75],0x41006574
  45cc3e:	jae    0x45ccb3
  45cc40:	gs ins DWORD PTR es:[rdi],dx
  45cc42:	(bad)  
  45cc43:	ins    BYTE PTR es:[rdi],dx
  45cc44:	jns    0x45cc9a
  45cc46:	imul   esi,DWORD PTR [rsp+rbp*2+0x65],0x72747441
  45cc4e:	imul   esp,DWORD PTR [rdx+0x75],0x41006574
  45cc55:	jae    0x45ccca
  45cc57:	gs ins DWORD PTR es:[rdi],dx
  45cc59:	(bad)  
  45cc5a:	ins    BYTE PTR es:[rdi],dx
  45cc5b:	jns    0x45cca6
  45cc5d:	outs   dx,BYTE PTR ds:[rsi]
  45cc5e:	outs   dx,WORD PTR ds:[rsi]
  45cc60:	jb     0x45cccf
  45cc62:	(bad)  
  45cc63:	je     0x45ccce
  45cc65:	outs   dx,DWORD PTR ds:[rsi]
  45cc66:	outs   dx,BYTE PTR ds:[rsi]
  45cc67:	(bad)  
  45cc68:	ins    BYTE PTR es:[rdi],dx
  45cc69:	push   rsi
  45cc6a:	gs jb  0x45cce0
  45cc6d:	imul   ebp,DWORD PTR [rdi+0x6e],0x72747441
  45cc74:	imul   esp,DWORD PTR [rdx+0x75],0x41006574
  45cc7b:	jae    0x45ccf0
  45cc7d:	gs ins DWORD PTR es:[rdi],dx
  45cc7f:	(bad)  
  45cc80:	ins    BYTE PTR es:[rdi],dx
  45cc81:	jns    0x45ccc9
  45cc83:	imul   ebp,DWORD PTR [rbp+riz*2+0x56],0x69737265
  45cc8b:	outs   dx,DWORD PTR ds:[rsi]
  45cc8c:	outs   dx,BYTE PTR ds:[rsi]
  45cc8d:	rex.B je 0x45cd04
  45cc90:	jb     0x45ccfb
  45cc92:	(bad)  
  45cc93:	jne    0x45cd09
  45cc95:	add    BYTE PTR gs:[rcx+0x73],al
  45cc99:	jae    0x45cd00
  45cc9b:	ins    DWORD PTR es:[rdi],dx
  45cc9c:	(bad)  
  45cc9d:	ins    BYTE PTR es:[rdi],dx
  45cc9e:	jns    0x45ccf6
  45cca0:	gs jb  0x45cd16
  45cca3:	imul   ebp,DWORD PTR [rdi+0x6e],0x72747441
  45ccaa:	imul   esp,DWORD PTR [rdx+0x75],0x41006574
  45ccb1:	jae    0x45cd26
  45ccb3:	gs ins DWORD PTR es:[rdi],dx
  45ccb5:	(bad)  
  45ccb6:	ins    BYTE PTR es:[rdi],dx
  45ccb7:	jns    0x45cd0d
  45ccb9:	jb     0x45cd1c
  45ccbb:	fs gs ins DWORD PTR es:[rdi],dx
  45ccbe:	(bad)  
  45ccbf:	jb     0x45cd2c
  45ccc1:	rex.B je 0x45cd38
  45ccc4:	jb     0x45cd2f
  45ccc6:	(bad)  
  45ccc7:	jne    0x45cd3d
  45ccc9:	add    BYTE PTR gs:[rcx+0x73],al
  45cccd:	jae    0x45cd34
  45cccf:	ins    DWORD PTR es:[rdi],dx
  45ccd0:	(bad)  
  45ccd1:	ins    BYTE PTR es:[rdi],dx
  45ccd2:	jns    0x45cd17
  45ccd4:	outs   dx,DWORD PTR ds:[rsi]
  45ccd5:	jo     0x45cd50
  45ccd7:	jb     0x45cd42
  45ccd9:	addr32 push 0x74744174
  45ccdf:	jb     0x45cd4a
  45cce1:	(bad)  
  45cce2:	jne    0x45cd58
  45cce4:	add    BYTE PTR gs:[rcx+0x73],al
  45cce8:	jae    0x45cd4f
  45ccea:	ins    DWORD PTR es:[rdi],dx
  45cceb:	(bad)  
  45ccec:	ins    BYTE PTR es:[rdi],dx
  45cced:	jns    0x45cd3f
  45ccef:	jb     0x45cd60
  45ccf1:	fs jne 0x45cd57
  45ccf4:	je     0x45cd37
  45ccf6:	je     0x45cd6c
  45ccf8:	jb     0x45cd63
  45ccfa:	(bad)  
  45ccfb:	jne    0x45cd71
  45ccfd:	add    BYTE PTR gs:[rcx+0x73],al
  45cd01:	jae    0x45cd68
  45cd03:	ins    DWORD PTR es:[rdi],dx
  45cd04:	(bad)  
  45cd05:	ins    BYTE PTR es:[rdi],dx
  45cd06:	jns    0x45cd4b
  45cd08:	outs   dx,DWORD PTR ds:[rsi]
  45cd09:	ins    DWORD PTR es:[rdi],dx
  45cd0a:	jo     0x45cd6d
  45cd0c:	outs   dx,BYTE PTR ds:[rsi]
  45cd0d:	jns    0x45cd50
  45cd0f:	je     0x45cd85
  45cd11:	jb     0x45cd7c
  45cd13:	(bad)  
  45cd14:	jne    0x45cd8a
  45cd16:	add    BYTE PTR gs:[rbx+0x79],dl
  45cd1a:	jae    0x45cd90
  45cd1c:	gs ins DWORD PTR es:[rdi],dx
  45cd1e:	imul   r12d,DWORD PTR cs:[rcx+0x67],0x74736f6e
  45cd27:	imul   esp,DWORD PTR [rbx+0x73],0x62654400
  45cd2e:	jne    0x45cd97
  45cd30:	addr32 (bad) 
  45cd32:	(bad)  
  45cd33:	ins    BYTE PTR es:[rdi],dx
  45cd34:	gs rex.B je 0x45cdac
  45cd38:	jb     0x45cda3
  45cd3a:	(bad)  
  45cd3b:	jne    0x45cdb1
  45cd3d:	add    BYTE PTR gs:[rbp+riz*2+0x62],al
  45cd42:	jne    0x45cdab
  45cd44:	imul   ebp,DWORD PTR [esi+0x67],0x65646f4d
  45cd4c:	jae    0x45cd4e
  45cd4e:	push   rbx
  45cd4f:	jns    0x45cdc4
  45cd51:	je     0x45cdb8
  45cd53:	ins    DWORD PTR es:[rdi],dx
  45cd54:	cs push rdx
  45cd56:	jne    0x45cdc6
  45cd58:	je     0x45cdc3
  45cd5a:	ins    DWORD PTR es:[rdi],dx
  45cd5b:	gs rex.XB outs dx,DWORD PTR cs:[rsi]
  45cd5f:	ins    DWORD PTR es:[rdi],dx
  45cd60:	jo     0x45cdcb
  45cd62:	ins    BYTE PTR es:[rdi],dx
  45cd63:	gs jb  0x45cdb9
  45cd66:	gs jb  0x45cddf
  45cd69:	imul   esp,DWORD PTR [rbx+0x65],0x6f430073
  45cd70:	ins    DWORD PTR es:[rdi],dx
  45cd71:	jo     0x45cddc
  45cd73:	ins    BYTE PTR es:[rdi],dx
  45cd74:	(bad)  
  45cd75:	je     0x45cde0
  45cd77:	outs   dx,DWORD PTR ds:[rsi]
  45cd78:	outs   dx,BYTE PTR ds:[rsi]
  45cd79:	push   rdx
  45cd7a:	gs ins BYTE PTR es:[rdi],dx
  45cd7c:	(bad)  
  45cd7d:	js     0x45cde0
  45cd7f:	je     0x45cdea
  45cd81:	outs   dx,DWORD PTR ds:[rsi]
  45cd82:	outs   dx,BYTE PTR ds:[rsi]
  45cd83:	jae    0x45cdc6
  45cd85:	je     0x45cdfb
  45cd87:	jb     0x45cdf2
  45cd89:	(bad)  
  45cd8a:	jne    0x45ce00
  45cd8c:	add    BYTE PTR gs:[rdx+0x75],dl
  45cd90:	outs   dx,BYTE PTR ds:[rsi]
  45cd91:	je     0x45cdfc
  45cd93:	ins    DWORD PTR es:[rdi],dx
  45cd94:	rex.XB outs dx,DWORD PTR gs:[rsi]
  45cd97:	ins    DWORD PTR es:[rdi],dx
  45cd98:	jo     0x45cdfb
  45cd9a:	je     0x45ce05
  45cd9c:	(bad)  
  45cd9d:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x74744179
  45cda5:	jb     0x45ce10
  45cda7:	(bad)  
  45cda8:	jne    0x45ce1e
  45cdaa:	add    BYTE PTR gs:[rcx+riz*2+0x6e],cl
  45cdaf:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x65676150
  45cdb7:	add    BYTE PTR [rbx+0x6f],al
  45cdba:	ins    DWORD PTR es:[rdi],dx
  45cdbb:	jo     0x45ce26
  45cdbd:	ins    BYTE PTR es:[rdi],dx
  45cdbe:	gs jb  0x45ce08
  45cdc1:	outs   dx,BYTE PTR gs:[rsi]
  45cdc3:	gs jb  0x45ce27
  45cdc6:	je     0x45ce2d
  45cdc8:	fs rex.B je 0x45ce40
  45cdcc:	jb     0x45ce37
  45cdce:	(bad)  
  45cdcf:	jne    0x45ce45
  45cdd1:	add    BYTE PTR gs:[rsi+0x61],dh
  45cdd5:	ins    BYTE PTR es:[rdi],dx
  45cdd6:	jne    0x45ce3d
  45cdd8:	add    BYTE PTR [rbx+0x65],ch
  45cddb:	jns    0x45cddd
  45cddd:	(bad)  
  45cdde:	jb     0x45ce47
  45cde0:	xor    BYTE PTR [rax],al
  45cde2:	addr32 gs je 0x45ce45
  45cde6:	rex.XB jne 0x45ce5b
  45cde9:	jb     0x45ce50
  45cdeb:	outs   dx,BYTE PTR ds:[rsi]
  45cdec:	je     0x45ce31
  45cdee:	jne    0x45ce5c
  45cdf0:	je     0x45ce67
  45cdf2:	jb     0x45ce59
  45cdf4:	add    BYTE PTR [rbx+0x74],dl
  45cdf7:	jb     0x45ce62
  45cdf9:	outs   dx,BYTE PTR ds:[rsi]
  45cdfa:	add    BYTE PTR [ecx+0x46],cl
  45cdfe:	outs   dx,DWORD PTR ds:[rsi]
  45cdff:	jb     0x45ce6e
  45ce01:	(bad)  
  45ce02:	je     0x45ce54
  45ce04:	jb     0x45ce75
  45ce06:	jbe    0x45ce71
  45ce08:	fs gs jb 0x45ce0c
  45ce0c:	rex.RX outs dx,DWORD PTR ds:[rsi]
  45ce0e:	jb     0x45ce7d
  45ce10:	(bad)  
  45ce11:	je     0x45ce13
  45ce13:	push   rsp
  45ce14:	jns    0x45ce86
  45ce16:	add    BYTE PTR gs:[rdx+0x75],dl
  45ce1a:	outs   dx,BYTE PTR ds:[rsi]
  45ce1b:	je     0x45ce86
  45ce1d:	ins    DWORD PTR es:[rdi],dx
  45ce1e:	gs push rsp
  45ce20:	jns    0x45ce92
  45ce22:	gs rex.W (bad) 
  45ce25:	outs   dx,BYTE PTR ds:[rsi]
  45ce26:	fs ins BYTE PTR es:[rdi],dx
  45ce28:	add    BYTE PTR gs:[rdi+0x65],al
  45ce2c:	je     0x45ce82
  45ce2e:	jns    0x45cea0
  45ce30:	gs rex.RX jb 0x45cea3
  45ce34:	ins    DWORD PTR es:[rdi],dx
  45ce35:	rex.W (bad) 
  45ce37:	outs   dx,BYTE PTR ds:[rsi]
  45ce38:	fs ins BYTE PTR es:[rdi],dx
  45ce3a:	add    BYTE PTR gs:[rdi+0x65],ah
  45ce3e:	je     0x45ce9f
  45ce40:	rex.RX jne 0x45ceaf
  45ce43:	ins    BYTE PTR es:[rdi],dx
  45ce44:	rex.WRX (bad) 
  45ce46:	ins    DWORD PTR es:[rdi],dx
  45ce47:	add    BYTE PTR gs:[rbp+0x6f],cl
  45ce4b:	fs jne 0x45ceba
  45ce4e:	add    BYTE PTR gs:[rdi+0x65],ah
  45ce52:	je     0x45ceb3
  45ce54:	rex.WRB outs dx,DWORD PTR ds:[rsi]
  45ce56:	fs jne 0x45cec5
  45ce59:	add    BYTE PTR gs:[rcx+0x73],al
  45ce5d:	jae    0x45cec4
  45ce5f:	ins    DWORD PTR es:[rdi],dx
  45ce60:	(bad)  
  45ce61:	ins    BYTE PTR es:[rdi],dx
  45ce62:	jns    0x45ce64
  45ce64:	addr32 gs je 0x45cec7
  45ce68:	rex.B jae 0x45cede
  45ce6b:	gs ins DWORD PTR es:[rdi],dx
  45ce6d:	(bad)  
  45ce6e:	ins    BYTE PTR es:[rdi],dx
  45ce6f:	jns    0x45ce71
  45ce71:	push   rbx
  45ce72:	jns    0x45cee7
  45ce74:	je     0x45cedb
  45ce76:	ins    DWORD PTR es:[rdi],dx
  45ce77:	rex.XB outs dx,DWORD PTR cs:[rsi]
  45ce7a:	fs rex.R outs dx,DWORD PTR gs:[rsi]
  45ce7e:	ins    DWORD PTR es:[rdi],dx
  45ce7f:	rex.XB outs dx,DWORD PTR cs:[rsi]
  45ce82:	ins    DWORD PTR es:[rdi],dx
  45ce83:	jo     0x45ceee
  45ce85:	ins    BYTE PTR es:[rdi],dx
  45ce86:	gs jb  0x45ce89
  45ce89:	rex.RXB
  45ce8a:	outs   dx,BYTE PTR gs:[rsi]
  45ce8c:	gs jb  0x45cef0
  45ce8f:	je     0x45cef6
  45ce91:	rex.XB outs dx,DWORD PTR fs:[rsi]
  45ce94:	fs gs rex.B je 0x45cf0d
  45ce99:	jb     0x45cf04
  45ce9b:	(bad)  
  45ce9c:	jne    0x45cf12
  45ce9e:	add    BYTE PTR gs:[rbx+0x65],dl
  45cea2:	je     0x45cf18
  45cea4:	imul   ebp,DWORD PTR [rsi+0x67],0x73614273
  45ceab:	add    BYTE PTR gs:[rdi+0x65],ah
  45ceaf:	je     0x45cf10
  45ceb1:	rex.WB je 0x45cf19
  45ceb4:	ins    DWORD PTR es:[rdi],dx
  45ceb5:	add    BYTE PTR [rbx+0x65],dh
  45ceb8:	je     0x45cf19
  45ceba:	rex.WB je 0x45cf22
  45cebd:	ins    DWORD PTR es:[rdi],dx
  45cebe:	add    BYTE PTR [rbx+0x65],dh
  45cec1:	outs   dx,BYTE PTR ds:[rsi]
  45cec2:	fs gs jb 0x45cec6
  45cec6:	add    BYTE PTR gs:[rbx+0x79],dl
  45ceca:	outs   dx,BYTE PTR ds:[rsi]
  45cecb:	movsxd ebp,DWORD PTR [rax+0x72]
  45cece:	outs   dx,DWORD PTR ds:[rsi]
  45cecf:	outs   dx,BYTE PTR ds:[rsi]
  45ced0:	imul   edi,DWORD PTR [rdx+0x65],0x73550064
  45ced7:	gs jb  0x45cf2d
  45ceda:	movsxd ebp,DWORD PTR [rdi+0x70]
  45cedd:	gs fs push rbx
  45cee0:	gs je  0x45cf57
  45cee3:	imul   ebp,DWORD PTR [rsi+0x67],0x72747441
  45ceea:	imul   esp,DWORD PTR [rdx+0x75],0x44006574
  45cef1:	gs (bad) 
  45cef3:	jne    0x45cf5c
  45cef5:	addr32 gs jb 0x45cf47
  45cef9:	outs   dx,DWORD PTR ds:[rsi]
  45cefa:	outs   dx,BYTE PTR ds:[rsi]
  45cefb:	push   rbp
  45cefc:	jae    0x45cf63
  45cefe:	jb     0x45cf43
  45cf00:	outs   dx,DWORD PTR ds:[rsi]
  45cf01:	fs gs rex.B je 0x45cf7a
  45cf06:	jb     0x45cf71
  45cf08:	(bad)  
  45cf09:	jne    0x45cf7f
  45cf0b:	add    BYTE PTR gs:[rbp+riz*2+0x66],al
  45cf10:	(bad)  
  45cf11:	jne    0x45cf7f
  45cf13:	je     0x45cf68
  45cf15:	gs je  0x45cf8c
  45cf18:	imul   ebp,DWORD PTR [rsi+0x67],0x756c6156
  45cf1f:	gs rex.B je 0x45cf97
  45cf23:	jb     0x45cf8e
  45cf25:	(bad)  
  45cf26:	jne    0x45cf9c
  45cf28:	add    BYTE PTR gs:[rbp+riz*2+0x6c],al
  45cf2d:	gs addr32 (bad) 
  45cf30:	je     0x45cf97
  45cf32:	add    BYTE PTR [rbx+0x6f],al
  45cf35:	ins    DWORD PTR es:[rdi],dx
  45cf36:	(bad)  
  45cf37:	imul   ebp,DWORD PTR [rsi+0x65],0x6d655200
  45cf3e:	outs   dx,DWORD PTR ds:[rsi]
  45cf3f:	jbe    0x45cfa6
  45cf41:	add    BYTE PTR [rax+0x72],dh
  45cf44:	outs   dx,DWORD PTR ds:[rsi]
  45cf45:	jo     0x45cfac
  45cf47:	jb     0x45cfbd
  45cf49:	jns    0x45cf99
  45cf4b:	(bad)  
  45cf4c:	ins    DWORD PTR es:[rdi],dx
  45cf4d:	add    BYTE PTR gs:[rax+0x72],dl
  45cf51:	outs   dx,DWORD PTR ds:[rsi]
  45cf52:	jo     0x45cfb9
  45cf54:	jb     0x45cfca
  45cf56:	jns    0x45cf9b
  45cf58:	push   0x65676e61
  45cf5d:	fs rex.RB jbe 0x45cfc6
  45cf61:	outs   dx,BYTE PTR ds:[rsi]
  45cf62:	je     0x45cfa5
  45cf64:	jb     0x45cfcd
  45cf66:	jae    0x45cf68
  45cf68:	movsxd ebp,DWORD PTR [rdi+0x6d]
  45cf6b:	ins    DWORD PTR es:[rdi],dx
  45cf6c:	(bad)  
  45cf6d:	outs   dx,BYTE PTR ds:[rsi]
  45cf6e:	add    BYTE PTR fs:[rdi+0x65],ah
  45cf72:	je     0x45cfd3
  45cf74:	rex.WRB (bad) 
  45cf76:	imul   ebp,DWORD PTR [rsi+0x46],0x6d726f
  45cf7d:	jae    0x45cfe4
  45cf7f:	je     0x45cfe0
  45cf81:	rex.R
  45cf82:	gs jae 0x45cfe8
  45cf85:	jb     0x45cff0
  45cf87:	jo     0x45cffd
  45cf89:	imul   ebp,DWORD PTR [rdi+0x6e],0x65764500
  45cf90:	outs   dx,BYTE PTR ds:[rsi]
  45cf91:	je     0x45cfdb
  45cf93:	(bad)  
  45cf94:	outs   dx,BYTE PTR ds:[rsi]
  45cf95:	fs ins BYTE PTR es:[rdi],dx
  45cf97:	gs jb  0x45cffa
  45cf9a:	xor    DWORD PTR [rax],eax
  45cf9c:	(bad)  
  45cf9d:	fs fs pop rdi
  45cfa0:	push   rsi
  45cfa1:	(bad)  
  45cfa2:	ins    BYTE PTR es:[rdi],dx
  45cfa3:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x466e6f69
  45cfab:	(bad)  
  45cfac:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x64656d00
  45cfb4:	imul   esp,DWORD PTR [rcx+0x50],0x687461
  45cfbb:	push   rbx
  45cfbc:	gs je  0x45d00f
  45cfbf:	(bad)  
  45cfc0:	je     0x45d02a
  45cfc2:	add    BYTE PTR [rbx+0x65],dh
  45cfc5:	je     0x45d026
  45cfc7:	rex.WRB (bad) 
  45cfc9:	imul   ebp,DWORD PTR [rsi+0x46],0x6d726f
  45cfd0:	addr32 gs je 0x45d033
  45cfd4:	rex.XB jne 0x45d049
  45cfd7:	jb     0x45d03e
  45cfd9:	outs   dx,BYTE PTR ds:[rsi]
  45cfda:	je     0x45cfdc
  45cfdc:	ins    DWORD PTR es:[rdi],dx
  45cfdd:	gs jae 0x45d053
  45cfe0:	(bad)  
  45cfe1:	add    BYTE PTR gs:[edx+0x75],ah
  45cfe6:	je     0x45d05c
  45cfe8:	outs   dx,DWORD PTR ds:[rsi]
  45cfe9:	outs   dx,BYTE PTR ds:[rsi]
  45cfea:	add    BYTE PTR [rbx+0x61],ah
  45cfed:	jo     0x45d063
  45cfef:	imul   ebp,DWORD PTR [rdi+0x6e],0x73654d00
  45cff6:	jae    0x45d059
  45cff8:	rex.X outs dx,DWORD PTR gs:[esi]
  45cffc:	js     0x45cffe
  45cffe:	rex.WB push r15
  45d000:	imul   ebp,DWORD PTR [rsi+0x33],0x6e695732
  45d007:	outs   dx,DWORD PTR fs:[rsi]
  45d009:	ja     0x45d00b
  45d00b:	rex.WRB
  45d00c:	gs jae 0x45d082
  45d00f:	(bad)  
  45d010:	rex.X outs dx,DWORD PTR gs:[esi]
  45d014:	js     0x45d05f
  45d016:	movsxd ebp,DWORD PTR [rdi+0x6e]
  45d019:	add    BYTE PTR [rbx+0x68],dl
  45d01c:	outs   dx,DWORD PTR ds:[rsi]
  45d01d:	ja     0x45d01f
  45d01f:	rex.XB outs dx,DWORD PTR ds:[rsi]
  45d021:	ins    DWORD PTR es:[rdi],dx
  45d022:	ins    DWORD PTR es:[rdi],dx
  45d023:	outs   dx,DWORD PTR ds:[rsi]
  45d024:	outs   dx,BYTE PTR ds:[rsi]
  45d025:	imul   r12d,DWORD PTR [rcx+0x6c],0x5300676f
  45d02d:	push   0x6944776f
  45d032:	(bad)  
  45d033:	ins    BYTE PTR es:[rdi],dx
  45d034:	outs   dx,DWORD PTR ds:[rsi]
  45d035:	add    BYTE PTR [edi+0x65],ah
  45d039:	je     0x45d09a
  45d03b:	push   rbx
  45d03c:	gs ins BYTE PTR es:[rdi],dx
  45d03e:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  45d043:	push   rax
  45d044:	(bad)  
  45d045:	je     0x45d0af
  45d047:	add    BYTE PTR [rdi+0x65],ah
  45d04a:	je     0x45d0ab
  45d04c:	rex.W (bad) 
  45d04e:	jae    0x45d0a6
  45d050:	(bad)  
  45d051:	ins    BYTE PTR es:[rdi],dx
  45d052:	imul   esp,DWORD PTR [rax+rdx*2+0x61],0x45006874
  45d05a:	ins    DWORD PTR es:[rdi],dx
  45d05b:	jo     0x45d0d1
  45d05d:	jns    0x45d05f
  45d05f:	push   rbx
  45d060:	je     0x45d0d4
  45d062:	imul   ebp,DWORD PTR [rsi+0x67],0x706d6f43
  45d069:	(bad)  
  45d06a:	jb     0x45d0d5
  45d06c:	jae    0x45d0dd
  45d06e:	outs   dx,BYTE PTR ds:[rsi]
  45d06f:	add    BYTE PTR [rbp+0x71],al
  45d072:	jne    0x45d0d5
  45d074:	ins    BYTE PTR es:[rdi],dx
  45d075:	jae    0x45d077
  45d077:	rex.RB js 0x45d0dd
  45d07a:	gs jo  0x45d0f1
  45d07d:	imul   ebp,DWORD PTR [rdi+0x6e],0x74656700
  45d084:	pop    rdi
  45d085:	rex.WRB
  45d086:	gs jae 0x45d0fc
  45d089:	(bad)  
  45d08a:	add    BYTE PTR gs:[ebp+0x65],cl
  45d08f:	imul   esp,DWORD PTR fs:[rcx+0x50],0x45687461
  45d097:	js     0x45d0fc
  45d099:	gs jo  0x45d110
  45d09c:	imul   ebp,DWORD PTR [rdi+0x6e],0x74654700
  45d0a3:	rex.RB js 0x45d10b
  45d0a6:	movsxd esi,DWORD PTR [rbp+0x74]
  45d0a9:	imul   ebp,DWORD PTR [rsi+0x67],0x65737341
  45d0b0:	ins    DWORD PTR es:[rdi],dx
  45d0b1:	(bad)  
  45d0b2:	ins    BYTE PTR es:[rdi],dx
  45d0b3:	jns    0x45d0b5
  45d0b5:	addr32 gs je 0x45d118
  45d0b9:	rex.XB outs dx,DWORD PTR ds:[rsi]
  45d0bb:	fs gs rex.X (bad) 
  45d0bf:	jae    0x45d126
  45d0c1:	add    BYTE PTR [rbp+0x72],dl
  45d0c4:	imul   eax,DWORD PTR [rax],0x5f746567
  45d0ca:	rex.WR outs dx,DWORD PTR ds:[rsi]
  45d0cc:	movsxd esp,DWORD PTR [rcx+0x6c]
  45d0cf:	push   rax
  45d0d0:	(bad)  
  45d0d1:	je     0x45d13b
  45d0d3:	add    BYTE PTR [rax+0x61],dl
  45d0d6:	je     0x45d140
  45d0d8:	add    BYTE PTR [rdi+0x65],al
  45d0db:	je     0x45d121
  45d0dd:	imul   esi,DWORD PTR [rdx+0x65],0x726f7463
  45d0e4:	jns    0x45d134
  45d0e6:	(bad)  
  45d0e7:	ins    DWORD PTR es:[rdi],dx
  45d0e8:	add    BYTE PTR gs:[rdi+0x65],ah
  45d0ec:	je     0x45d14d
  45d0ee:	rex.RB
  45d0ef:	imul   esi,DWORD PTR fs:[rsp+rdx*2+0x65],0x73007478
  45d0f8:	gs je  0x45d15a
  45d0fb:	rex.XB (bad) 
  45d0fd:	outs   dx,BYTE PTR ds:[rsi]
  45d0fe:	movsxd esp,DWORD PTR [rbp+0x6c]
  45d101:	add    BYTE PTR [rax+0x61],dh
  45d104:	add    BYTE PTR gs:[ecx+0x72],al
  45d109:	addr32 jne 0x45d179
  45d10c:	outs   dx,BYTE PTR gs:[rsi]
  45d10e:	je     0x45d15e
  45d110:	jne    0x45d17e
  45d112:	ins    BYTE PTR es:[rdi],dx
  45d113:	rex.RB js 0x45d179
  45d116:	gs jo  0x45d18d
  45d119:	imul   ebp,DWORD PTR [rdi+0x6e],0x64644100
  45d120:	add    BYTE PTR [rdi+0x65],ah
  45d123:	je     0x45d184
  45d125:	rex.XB outs dx,DWORD PTR ds:[rsi]
  45d127:	jne    0x45d197
  45d129:	je     0x45d12b
  45d12b:	push   rbx
  45d12c:	jns    0x45d1a1
  45d12e:	je     0x45d195
  45d130:	ins    DWORD PTR es:[rdi],dx
  45d131:	cs push rbx
  45d133:	movsxd esi,DWORD PTR gs:[rbp+0x72]
  45d137:	imul   esi,DWORD PTR [rcx+rdi*2+0x2e],0x6d726550
  45d13f:	imul   esi,DWORD PTR [rbx+0x73],0x736e6f69
  45d146:	add    BYTE PTR [rbx+0x65],dl
  45d149:	movsxd esi,DWORD PTR [rbp+0x72]
  45d14c:	imul   esi,DWORD PTR [rcx+rdi*2+0x50],0x696d7265
  45d154:	jae    0x45d1c9
  45d156:	imul   ebp,DWORD PTR [rdi+0x6e],0x72747441
  45d15d:	imul   esp,DWORD PTR [rdx+0x75],0x53006574
  45d164:	movsxd esi,DWORD PTR gs:[rbp+0x72]
  45d168:	imul   esi,DWORD PTR [rcx+rdi*2+0x41],0x6f697463
  45d170:	outs   dx,BYTE PTR ds:[rsi]
  45d171:	add    BYTE PTR [rbp+0x0],ch
  45d174:	push   rax
  45d175:	jb     0x45d1e6
  45d177:	movsxd esp,DWORD PTR [rbp+0x73]
  45d17a:	jae    0x45d1c7
  45d17c:	gs jns 0x45d1c4
  45d17f:	jbe    0x45d1e6
  45d181:	outs   dx,BYTE PTR ds:[rsi]
  45d182:	je     0x45d1c5
  45d184:	jb     0x45d1ed
  45d186:	jae    0x45d188
  45d188:	addr32 gs je 0x45d1eb
  45d18c:	rex.WXB
  45d18d:	gs jns 0x45d1d3
  45d190:	outs   dx,DWORD PTR ds:[rsi]
  45d191:	fs add BYTE PTR gs:[rdi+0x65],ah
  45d196:	je     0x45d1f7
  45d198:	rex.WXB
  45d199:	gs jns 0x45d1e0
  45d19c:	(bad)  
  45d19d:	je     0x45d200
  45d19f:	add    BYTE PTR [rdi+0x65],ah
  45d1a2:	je     0x45d203
  45d1a4:	rex.XB outs dx,DWORD PTR ds:[rsi]
  45d1a6:	outs   dx,BYTE PTR ds:[rsi]
  45d1a7:	je     0x45d20a
  45d1a9:	imul   ebp,DWORD PTR [rsi+0x73],0x75636f46
  45d1b0:	jae    0x45d1b2
  45d1b2:	rex.RX outs dx,DWORD PTR ds:[rsi]
  45d1b4:	movsxd esi,DWORD PTR [rbp+0x73]
  45d1b7:	add    BYTE PTR [rbx+0x6f],al
  45d1ba:	outs   dx,BYTE PTR ds:[rsi]
  45d1bb:	je     0x45d22f
  45d1bd:	outs   dx,DWORD PTR ds:[rsi]
  45d1be:	ins    BYTE PTR es:[rdi],dx
  45d1bf:	rex.XB outs dx,DWORD PTR ds:[rsi]
  45d1c1:	ins    BYTE PTR es:[rdi],dx
  45d1c2:	ins    BYTE PTR es:[rdi],dx
  45d1c3:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  45d1c8:	outs   dx,BYTE PTR ds:[rsi]
  45d1c9:	add    BYTE PTR [rdi+0x65],ah
  45d1cc:	je     0x45d22d
  45d1ce:	rex.XB outs dx,DWORD PTR ds:[rsi]
  45d1d0:	outs   dx,BYTE PTR ds:[rsi]
  45d1d1:	je     0x45d245
  45d1d3:	outs   dx,DWORD PTR ds:[rsi]
  45d1d4:	ins    BYTE PTR es:[rdi],dx
  45d1d5:	jae    0x45d1d7
  45d1d7:	rex.XB ins BYTE PTR es:[rdi],dx
  45d1d9:	gs (bad) 
  45d1db:	jb     0x45d1dd
  45d1dd:	push   rbx
  45d1de:	jne    0x45d253
  45d1e0:	jo     0x45d247
  45d1e2:	outs   dx,BYTE PTR ds:[rsi]
  45d1e3:	fs rex.WR (bad) 
  45d1e6:	jns    0x45d257
  45d1e8:	jne    0x45d25e
  45d1ea:	add    BYTE PTR [rdx+0x65],dl
  45d1ed:	movsxd esi,DWORD PTR [rcx+riz*2+0x6e]
  45d1f1:	ins    BYTE PTR es:[edi],dx
  45d1f3:	add    BYTE PTR gs:[rdi+0x65],ah
  45d1f7:	je     0x45d258
  45d1f9:	rex.XB ins BYTE PTR es:[rdi],dx
  45d1fb:	imul   esp,DWORD PTR [rbp+0x6e],0x63655274
  45d202:	je     0x45d265
  45d204:	outs   dx,BYTE PTR ds:[rsi]
  45d205:	ins    BYTE PTR es:[edi],dx
  45d207:	add    BYTE PTR gs:[rdi+0x65],ah
  45d20b:	je     0x45d26c
  45d20d:	push   rdi
  45d20e:	imul   esp,DWORD PTR [rsp+rsi*2+0x68],0x64615000
  45d216:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x74656700
  45d21e:	pop    rdi
  45d21f:	push   rax
  45d220:	(bad)  
  45d221:	fs imul ebp,DWORD PTR fs:[rsi+0x67],0x74656700
  45d22a:	pop    rdi
  45d22b:	rex.W outs dx,DWORD PTR ds:[rsi]
  45d22d:	jb     0x45d298
  45d22f:	jp     0x45d2a0
  45d231:	outs   dx,BYTE PTR ds:[rsi]
  45d232:	je     0x45d295
  45d234:	ins    BYTE PTR es:[rdi],dx
  45d235:	add    BYTE PTR [rdi+0x65],ah
  45d238:	je     0x45d299
  45d23a:	rex.W
  45d23b:	imul   esp,DWORD PTR gs:[rdi+0x68],0x65670074
  45d243:	je     0x45d2a4
  45d245:	push   rsi
  45d246:	gs jb  0x45d2bd
  45d249:	imul   esp,DWORD PTR [rbx+0x61],0x6573006c
  45d250:	je     0x45d2b1
  45d252:	push   rbx
  45d253:	imul   edi,DWORD PTR [rdx+0x65],0x636f4400
  45d25a:	imul   edx,DWORD PTR [rbx+0x74],0x79
  45d25e:	ins    BYTE PTR es:[rdi],dx
  45d25f:	add    BYTE PTR gs:[rbx+0x65],dh
  45d263:	je     0x45d2c4
  45d265:	rex.R outs dx,DWORD PTR ds:[rsi]
  45d267:	movsxd ebp,DWORD PTR [rbx+0x0]
  45d26a:	rex.XB jb 0x45d2d2
  45d26d:	(bad)  
  45d26e:	je     0x45d2d5
  45d270:	rex.XB outs dx,DWORD PTR ds:[rsi]
  45d272:	outs   dx,BYTE PTR ds:[rsi]
  45d273:	je     0x45d2e7
  45d275:	outs   dx,DWORD PTR ds:[rsi]
  45d276:	ins    BYTE PTR es:[rdi],dx
  45d277:	add    BYTE PTR [rbx+0x65],dh
  45d27a:	je     0x45d2db
  45d27c:	push   rax
  45d27d:	(bad)  
  45d27e:	fs imul ebp,DWORD PTR fs:[rsi+0x67],0x74655300
  45d287:	rex.XB push 0x49646c69
  45d28d:	outs   dx,BYTE PTR ds:[rsi]
  45d28e:	fs gs js 0x45d292
  45d292:	jae    0x45d2f9
  45d294:	je     0x45d2f5
  45d296:	movsxd esi,DWORD PTR [r9+rbp*2+0x76]
  45d29b:	rex.XB outs dx,DWORD PTR gs:[rsi]
  45d29e:	outs   dx,BYTE PTR ds:[rsi]
  45d29f:	je     0x45d313
  45d2a1:	outs   dx,DWORD PTR ds:[rsi]
  45d2a2:	ins    BYTE PTR es:[rdi],dx
  45d2a3:	add    BYTE PTR [rdx+0x65],dl
  45d2a6:	jae    0x45d31d
  45d2a8:	ins    DWORD PTR es:[rdi],dx
  45d2a9:	gs rex.WR (bad) 
  45d2ac:	jns    0x45d31d
  45d2ae:	jne    0x45d324
  45d2b0:	add    BYTE PTR [rbx+0x65],dl
  45d2b3:	ins    BYTE PTR es:[rdi],dx
  45d2b4:	movsxd esi,DWORD PTR gs:[rax+rax*1+0x64]
  45d2b9:	imul   esi,DWORD PTR [rbx+0x70],0x6e69736f
  45d2c0:	add    BYTE PTR [ebx+0x6f],al
  45d2c4:	ins    DWORD PTR es:[rdi],dx
  45d2c5:	jo     0x45d336
  45d2c7:	outs   dx,BYTE PTR ds:[rsi]
  45d2c8:	outs   dx,BYTE PTR gs:[rsi]
  45d2ca:	je     0x45d31e
  45d2cc:	gs jae 0x45d33e
  45d2cf:	jne    0x45d343
  45d2d1:	movsxd esp,DWORD PTR [rbp+0x4d]
  45d2d4:	(bad)  
  45d2d5:	outs   dx,BYTE PTR ds:[rsi]
  45d2d6:	(bad)  
  45d2d7:	addr32 gs jb 0x45d2db
  45d2db:	rex.B jo 0x45d34e
  45d2de:	ins    BYTE PTR es:[rdi],dx
  45d2df:	jns    0x45d333
  45d2e1:	gs jae 0x45d353
  45d2e4:	jne    0x45d358
  45d2e6:	movsxd esp,DWORD PTR [rbp+0x73]
  45d2e9:	add    BYTE PTR [rbx+0x65],dh
  45d2ec:	je     0x45d34d
  45d2ee:	rex.WRX (bad) 
  45d2f0:	ins    DWORD PTR es:[rdi],dx
  45d2f1:	add    BYTE PTR gs:[rbx+0x65],dh
  45d2f5:	je     0x45d356
  45d2f7:	push   rsp
  45d2f8:	(bad)  
  45d2f9:	(bad)
  45d2fe:	add    BYTE PTR [rbx+0x79],dl
  45d301:	jae    0x45d377
  45d303:	gs ins DWORD PTR es:[rdi],dx
  45d305:	rex.XB outs dx,DWORD PTR ds:[rsi]
  45d307:	ins    BYTE PTR es:[rdi],dx
  45d308:	outs   dx,DWORD PTR ds:[rsi]
  45d309:	jb     0x45d37e
  45d30b:	add    BYTE PTR [rdi+0x65],ah
  45d30e:	je     0x45d36f
  45d310:	push   rdi
  45d311:	imul   ebp,DWORD PTR [rsi+0x64],0x7300776f
  45d318:	gs je  0x45d37a
  45d31b:	rex.X (bad) 
  45d31d:	movsxd ebp,DWORD PTR [rbx+0x43]
  45d320:	outs   dx,DWORD PTR ds:[rsi]
  45d321:	ins    BYTE PTR es:[rdi],dx
  45d322:	outs   dx,DWORD PTR ds:[rsi]
  45d323:	jb     0x45d325
  45d325:	rex.B jne 0x45d39c
  45d328:	outs   dx,DWORD PTR ds:[rsi]
  45d329:	push   rbx
  45d32a:	movsxd esp,DWORD PTR [rcx+0x6c]
  45d32d:	rex.WRB outs dx,DWORD PTR gs:[rsi]
  45d330:	fs add BYTE PTR gs:[rbx+0x65],dh
  45d335:	je     0x45d396
  45d337:	rex.B jne 0x45d3ae
  45d33a:	outs   dx,DWORD PTR ds:[rsi]
  45d33b:	push   rbx
  45d33c:	movsxd esp,DWORD PTR [rcx+0x6c]
  45d33f:	rex.WRB outs dx,DWORD PTR gs:[rsi]
  45d342:	fs add BYTE PTR gs:[rax+0x65],dl
  45d347:	jb     0x45d3af
  45d349:	outs   dx,DWORD PTR ds:[rsi]
  45d34a:	jb     0x45d3b9
  45d34c:	rex.WR (bad) 
  45d34e:	jns    0x45d3bf
  45d350:	jne    0x45d3c6
  45d352:	add    BYTE PTR [rbp+0x73],dl
  45d355:	gs jb  0x45d3a8
  45d358:	jb     0x45d3bf
  45d35a:	data16 gs jb 0x45d3c3
  45d35e:	outs   dx,BYTE PTR ds:[rsi]
  45d35f:	movsxd esp,DWORD PTR [rbp+0x43]
  45d362:	push   0x65676e61
  45d367:	fs rex.RB jbe 0x45d3d0
  45d36b:	outs   dx,BYTE PTR ds:[rsi]
  45d36c:	je     0x45d3b6
  45d36e:	(bad)  
  45d36f:	outs   dx,BYTE PTR ds:[rsi]
  45d370:	fs ins BYTE PTR es:[rdi],dx
  45d372:	gs jb  0x45d375
  45d375:	push   rbx
  45d376:	jns    0x45d3eb
  45d378:	je     0x45d3df
  45d37a:	ins    DWORD PTR es:[rdi],dx
  45d37b:	rex.RB jbe 0x45d3e3
  45d37e:	outs   dx,BYTE PTR ds:[rsi]
  45d37f:	je     0x45d3f4
  45d381:	add    BYTE PTR [rcx+0x64],ah
  45d384:	fs pop rdi
  45d386:	push   rbp
  45d387:	jae    0x45d3ee
  45d389:	jb     0x45d3db
  45d38b:	jb     0x45d3f2
  45d38d:	data16 gs jb 0x45d3f6
  45d391:	outs   dx,BYTE PTR ds:[rsi]
  45d392:	movsxd esp,DWORD PTR [rbp+0x43]
  45d395:	push   0x65676e61
  45d39a:	add    BYTE PTR fs:[rdi+0x65],ah
  45d39e:	je     0x45d3ff
  45d3a0:	rex.W (bad) 
  45d3a2:	outs   dx,BYTE PTR ds:[rsi]
  45d3a3:	fs ins BYTE PTR es:[rdi],dx
  45d3a5:	add    BYTE PTR gs:[rdi+0x65],ah
  45d3a9:	je     0x45d40a
  45d3ab:	rex.XB (bad) 
  45d3ad:	outs   dx,BYTE PTR ds:[rsi]
  45d3ae:	movsxd esp,DWORD PTR [rbp+0x6c]
  45d3b1:	add    BYTE PTR [rbx+0x61],dl
  45d3b4:	jbe    0x45d41b
  45d3b6:	add    BYTE PTR [rbp+0x6e],al
  45d3b9:	jne    0x45d428
  45d3bb:	gs jb  0x45d41f
  45d3be:	je     0x45d42f
  45d3c0:	jb     0x45d3c2
  45d3c2:	rex.RXB
  45d3c3:	gs je  0x45d40b
  45d3c6:	outs   dx,BYTE PTR ds:[rsi]
  45d3c7:	jne    0x45d436
  45d3c9:	gs jb  0x45d42d
  45d3cc:	je     0x45d43d
  45d3ce:	jb     0x45d3d0
  45d3d0:	rex.WRB outs dx,DWORD PTR ds:[rsi]
  45d3d2:	jbe    0x45d439
  45d3d4:	rex.WRX
  45d3d5:	gs js  0x45d44c
  45d3d8:	add    BYTE PTR [rbp+0x73],dl
  45d3db:	gs jb  0x45d42e
  45d3de:	jb     0x45d445
  45d3e0:	data16 gs jb 0x45d449
  45d3e4:	outs   dx,BYTE PTR ds:[rsi]
  45d3e5:	movsxd esp,DWORD PTR [rbp+0x43]
  45d3e8:	(bad)  
  45d3e9:	je     0x45d450
  45d3eb:	outs   dx,DWORD PTR ds:[esi]
  45d3ed:	jb     0x45d468
  45d3ef:	add    BYTE PTR [rdi+0x65],ah
  45d3f2:	je     0x45d453
  45d3f4:	rex.XB (bad) 
  45d3f6:	je     0x45d45d
  45d3f8:	outs   dx,DWORD PTR ds:[esi]
  45d3fa:	jb     0x45d475
  45d3fc:	add    BYTE PTR [rdi+0x65],ah
  45d3ff:	je     0x45d460
  45d401:	rex.RX outs dx,DWORD PTR ds:[rsi]
  45d403:	outs   dx,BYTE PTR ds:[rsi]
  45d404:	je     0x45d406
  45d406:	push   rbx
  45d407:	jns    0x45d47c
  45d409:	je     0x45d470
  45d40b:	ins    DWORD PTR es:[rdi],dx
  45d40c:	rex.RX outs dx,DWORD PTR ds:[rsi]
  45d40e:	outs   dx,BYTE PTR ds:[rsi]
  45d40f:	je     0x45d484
  45d411:	add    BYTE PTR [rdi+0x65],ah
  45d414:	je     0x45d475
  45d416:	movsxd rbp,DWORD PTR [r15+0x6e]
  45d41a:	push   rsp
  45d41b:	imul   esi,DWORD PTR [rsp+rbp*2+0x65],0x746e6f46
  45d423:	add    BYTE PTR [rbx+0x65],dh
  45d426:	je     0x45d487
  45d428:	rex.RX outs dx,DWORD PTR ds:[rsi]
  45d42a:	outs   dx,BYTE PTR ds:[rsi]
  45d42b:	je     0x45d42d
  45d42d:	addr32 gs je 0x45d490
  45d431:	rex.R
  45d432:	gs data16 (bad) 
  45d435:	jne    0x45d4a3
  45d437:	je     0x45d47f
  45d439:	outs   dx,DWORD PTR ds:[rsi]
  45d43a:	outs   dx,BYTE PTR ds:[rsi]
  45d43b:	je     0x45d43d
  45d43d:	rex.B jne 0x45d4b4
  45d440:	outs   dx,DWORD PTR ds:[rsi]
  45d441:	push   rsi
  45d442:	(bad)  
  45d443:	ins    BYTE PTR es:[rdi],dx
  45d444:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x65730065
  45d44c:	je     0x45d4ad
  45d44e:	rex.B jne 0x45d4c5
  45d451:	outs   dx,DWORD PTR ds:[rsi]
  45d452:	push   rsi
  45d453:	(bad)  
  45d454:	ins    BYTE PTR es:[rdi],dx
  45d455:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x64610065
  45d45d:	fs pop rdi
  45d45f:	rex.WR outs dx,DWORD PTR ds:[rsi]
  45d461:	(bad)  
  45d462:	add    BYTE PTR fs:[rcx+0x73],cl
  45d466:	rex.WRX jne 0x45d4d5
  45d469:	ins    BYTE PTR es:[rdi],dx
  45d46a:	rex.WRXB jb 0x45d4b2
  45d46d:	ins    DWORD PTR es:[rdi],dx
  45d46e:	jo     0x45d4e4
  45d470:	jns    0x45d472
  45d472:	rex.WB outs dx,BYTE PTR ds:[rsi]
  45d474:	jbe    0x45d4d7
  45d476:	ins    BYTE PTR es:[rdi],dx
  45d477:	imul   esp,DWORD PTR [rdi+rcx*2+0x70],0x74617265
  45d47f:	imul   ebp,DWORD PTR [rdi+0x6e],0x65637845
  45d486:	jo     0x45d4fc
  45d488:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f725000
  45d48f:	movsxd esp,DWORD PTR [rbp+0x73]
  45d492:	jae    0x45d4e7
  45d494:	je     0x45d4f7
  45d496:	jb     0x45d50c
  45d498:	rex.WB outs dx,BYTE PTR ds:[rsi]
  45d49a:	outs   dx,WORD PTR ds:[rsi]
  45d49c:	add    BYTE PTR [rbx+0x65],dh
  45d49f:	je     0x45d500
  45d4a1:	rex.B jb 0x45d50b
  45d4a4:	jne    0x45d513
  45d4a6:	outs   dx,BYTE PTR gs:[rsi]
  45d4a8:	je     0x45d51d
  45d4aa:	add    BYTE PTR [rbx+0x65],dh
  45d4ad:	je     0x45d50e
  45d4af:	rex.XB jb 0x45d517
  45d4b2:	(bad)  
  45d4b3:	je     0x45d51a
  45d4b5:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  45d4b7:	push   rdi
  45d4b8:	imul   ebp,DWORD PTR [rsi+0x64],0x5000776f
  45d4bf:	jb     0x45d530
  45d4c1:	movsxd esp,DWORD PTR [rbp+0x73]
  45d4c4:	jae    0x45d4c6
  45d4c6:	jae    0x45d52d
  45d4c8:	je     0x45d529
  45d4ca:	push   rbx
  45d4cb:	je     0x45d52e
  45d4cd:	jb     0x45d543
  45d4cf:	rex.WB outs dx,BYTE PTR ds:[rsi]
  45d4d1:	outs   dx,WORD PTR ds:[rsi]
  45d4d3:	add    BYTE PTR [rbx+0x65],dh
  45d4d6:	je     0x45d537
  45d4d8:	rex.RB outs dx,BYTE PTR ds:[rsi]
  45d4da:	(bad)  
  45d4db:	(bad)  
  45d4dc:	ins    BYTE PTR es:[rdi],dx
  45d4dd:	gs push rdx
  45d4df:	(bad)  
  45d4e0:	imul   esi,DWORD PTR [rbx+0x69],0x7645676e
  45d4e7:	outs   dx,BYTE PTR gs:[rsi]
  45d4e9:	je     0x45d55e
  45d4eb:	add    BYTE PTR [rcx+0x64],ah
  45d4ee:	fs pop rdi
  45d4f0:	rex.RB js 0x45d55c
  45d4f3:	je     0x45d55a
  45d4f5:	add    BYTE PTR fs:[rbp+0x6f],cl
  45d4f9:	outs   dx,BYTE PTR ds:[rsi]
  45d4fa:	imul   esi,DWORD PTR [rdi+rbp*2+0x72],0x746e4500
  45d502:	gs jb  0x45d505
  45d505:	push   rbx
  45d506:	je     0x45d569
  45d508:	jb     0x45d57e
  45d50a:	add    BYTE PTR [rbp+0x78],al
  45d50d:	imul   esi,DWORD PTR [rax+rax*1+0x57],0x32336e69
  45d515:	rex.RB js 0x45d57b
  45d518:	gs jo  0x45d58f
  45d51b:	imul   ebp,DWORD PTR [rdi+0x6e],0x73795300
  45d522:	je     0x45d589
  45d524:	ins    DWORD PTR es:[rdi],dx
  45d525:	cs push rsp
  45d527:	gs js  0x45d59e
  45d52a:	add    BYTE PTR [rbx+0x74],dl
  45d52d:	jb     0x45d598
  45d52f:	outs   dx,BYTE PTR ds:[rsi]
  45d530:	addr32 rex.X jne 0x45d59d
  45d534:	ins    BYTE PTR es:[rdi],dx
  45d535:	fs gs jb 0x45d539
  45d539:	addr32 gs je 0x45d59c
  45d53d:	rex.WB outs dx,BYTE PTR ds:[rsi]
  45d53f:	jbe    0x45d5a2
  45d541:	jb     0x45d5ac
  45d543:	(bad)  
  45d544:	outs   dx,BYTE PTR ds:[rsi]
  45d545:	je     0x45d58a
  45d547:	jne    0x45d5b5
  45d549:	je     0x45d5c0
  45d54b:	jb     0x45d5b2
  45d54d:	add    BYTE PTR [rcx+0x70],al
  45d550:	jo     0x45d5b7
  45d552:	outs   dx,BYTE PTR ds:[rsi]
  45d553:	rex.RX outs dx,DWORD PTR fs:[rsi]
  45d556:	jb     0x45d5c5
  45d558:	(bad)  
  45d559:	je     0x45d55b
  45d55b:	rex.RB outs dx,BYTE PTR ds:[rsi]
  45d55d:	fs jae 0x45d5b7
  45d560:	imul   esi,DWORD PTR [rax+rbp*2+0x0],0x636f7250
  45d568:	gs jae 0x45d5de
  45d56b:	outs   dx,DWORD PTR ds:[rsi]
  45d56c:	jb     0x45d5af
  45d56e:	jb     0x45d5d3
  45d570:	push   0x63657469
  45d575:	je     0x45d5ec
  45d577:	jb     0x45d5de
  45d579:	add    BYTE PTR [rdi+0x65],ah
  45d57c:	je     0x45d5dd
  45d57e:	rex.XB jne 0x45d5f3
  45d581:	jb     0x45d5e8
  45d583:	outs   dx,BYTE PTR ds:[rsi]
  45d584:	je     0x45d5c7
  45d586:	jb     0x45d5eb
  45d588:	push   0x63657469
  45d58d:	je     0x45d604
  45d58f:	jb     0x45d5f6
  45d591:	add    BYTE PTR [rbp+0x6e],al
  45d594:	jbe    0x45d5ff
  45d596:	jb     0x45d607
  45d598:	outs   dx,BYTE PTR ds:[rsi]
  45d599:	ins    DWORD PTR es:[rdi],dx
  45d59a:	outs   dx,BYTE PTR gs:[rsi]
  45d59c:	je     0x45d59e
  45d59e:	addr32 gs je 0x45d601
  45d5a2:	rex.WRX (bad) 
  45d5a4:	je     0x45d60f
  45d5a6:	jbe    0x45d60d
  45d5a8:	push   rax
  45d5a9:	jb     0x45d61a
  45d5ab:	movsxd esp,DWORD PTR [rbp+0x73]
  45d5ae:	jae    0x45d61f
  45d5b0:	jb     0x45d5f3
  45d5b2:	jb     0x45d617
  45d5b4:	push   0x63657469
  45d5b9:	je     0x45d630
  45d5bb:	jb     0x45d622
  45d5bd:	add    BYTE PTR [rcx+0x70],al
  45d5c0:	jo     0x45d627
  45d5c2:	outs   dx,BYTE PTR ds:[rsi]
  45d5c3:	add    BYTE PTR fs:[rdi+rbp*2+0x53],dl
  45d5c8:	je     0x45d63c
  45d5ca:	imul   ebp,DWORD PTR [rsi+0x67],0x72503c00
  45d5d1:	outs   dx,DWORD PTR ds:[rsi]
  45d5d2:	movsxd esp,DWORD PTR [rbp+0x73]
  45d5d5:	jae    0x45d61c
  45d5d7:	js     0x45d642
  45d5d9:	je     0x45d640
  45d5db:	fs ds (bad) 
  45d5de:	pop    rdi
  45d5df:	pop    rdi
  45d5e0:	xor    BYTE PTR [rax],al
  45d5e2:	push   rbx
  45d5e3:	outs   dx,BYTE PTR gs:[rsi]
  45d5e5:	fs rex.WRXB jb 0x45d639
  45d5e9:	outs   dx,DWORD PTR ds:[rsi]
  45d5ea:	jae    0x45d660
  45d5ec:	rex.XB (bad) 
  45d5ee:	ins    BYTE PTR es:[rdi],dx
  45d5ef:	ins    BYTE PTR es:[rdi],dx
  45d5f0:	(bad)  
  45d5f2:	movsxd ebp,DWORD PTR [rbx+0x0]
  45d5f5:	cmp    al,0x3e
  45d5f7:	cmp    DWORD PTR [rdi+0x5f],ebx
  45d5fa:	rex.XB (bad) 
  45d5fc:	movsxd ebp,DWORD PTR [rax+0x65]
  45d5ff:	rex.B outs dx,BYTE PTR fs:[rsi]
  45d602:	outs   dx,DWORD PTR ds:[rsi]
  45d603:	outs   dx,BYTE PTR ds:[rsi]
  45d604:	jns    0x45d673
  45d606:	outs   dx,DWORD PTR ds:[rsi]
  45d607:	jne    0x45d67c
  45d609:	rex.WRB
  45d60a:	gs je  0x45d675
  45d60d:	outs   dx,DWORD PTR ds:[rsi]
  45d60e:	fs rex.R
  45d610:	gs ins BYTE PTR es:[rdi],dx
  45d612:	gs addr32 (bad) 
  45d615:	je     0x45d67c
  45d617:	xor    DWORD PTR [rax],eax
  45d619:	jae    0x45d68f
  45d61b:	(bad)  
  45d61c:	je     0x45d683
  45d61e:	add    BYTE PTR [rax+0x6f],dl
  45d621:	jae    0x45d697
  45d623:	add    BYTE PTR [rdi+0x65],ah
  45d626:	je     0x45d687
  45d628:	push   rsp
  45d629:	(bad)  
  45d62a:	jb     0x45d693
  45d62c:	gs je  0x45d62f
  45d62f:	push   rdx
  45d630:	gs ins DWORD PTR es:[rdi],dx
  45d632:	outs   dx,DWORD PTR ds:[rsi]
  45d633:	jbe    0x45d69a
  45d635:	rex.B je 0x45d638
  45d638:	imul   r13d,DWORD PTR [rbp+r12*2+0x44],0x6f6c6169
  45d641:	add    BYTE PTR [ebx+0x65],dh
  45d645:	je     0x45d6a6
  45d647:	rex.R
  45d648:	gs data16 (bad) 
  45d64b:	jne    0x45d6b9
  45d64d:	je     0x45d694
  45d64f:	js     0x45d6c5
  45d651:	add    BYTE PTR [rbx+0x65],dh
  45d654:	je     0x45d6b5
  45d656:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x70530072
  45d65f:	movsxd ebp,DWORD PTR gs:[rcx+0x61]
  45d663:	ins    BYTE PTR es:[rdi],dx
  45d664:	rex.RX outs dx,DWORD PTR ds:[rsi]
  45d666:	ins    BYTE PTR es:[rdi],dx
  45d667:	fs gs jb 0x45d66b
  45d66b:	rex.RXB
  45d66c:	gs je  0x45d6b5
  45d66f:	outs   dx,DWORD PTR ds:[rsi]
  45d670:	ins    BYTE PTR es:[rdi],dx
  45d671:	fs gs jb 0x45d6c5
  45d675:	(bad)  
  45d676:	je     0x45d6e0
  45d678:	add    BYTE PTR [rbx+0x65],dh
  45d67b:	je     0x45d6dc
  45d67d:	rex.WB outs dx,BYTE PTR ds:[rsi]
  45d67f:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x7269446c
  45d687:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
  45d68c:	jns    0x45d68e
  45d68e:	jae    0x45d6f5
  45d690:	je     0x45d6f1
  45d692:	push   rdx
  45d693:	gs jae 0x45d70a
  45d696:	outs   dx,DWORD PTR ds:[rsi]
  45d697:	jb     0x45d6fe
  45d699:	imul   r14d,DWORD PTR [rdx+0x65],0x726f7463
  45d6a1:	jns    0x45d6a3
  45d6a3:	jae    0x45d70a
  45d6a5:	je     0x45d706
  45d6a7:	push   rsi
  45d6a8:	(bad)  
  45d6a9:	ins    BYTE PTR es:[rdi],dx
  45d6aa:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x6d614e65
  45d6b2:	gs jae 0x45d6b5
  45d6b5:	jae    0x45d71c
  45d6b7:	je     0x45d718
  45d6b9:	push   rsp
  45d6ba:	imul   esi,DWORD PTR [rsp+rbp*2+0x65],0x6c696600
  45d6c2:	gs rex.WRX (bad) 
  45d6c5:	ins    DWORD PTR es:[rdi],dx
  45d6c6:	add    BYTE PTR gs:[rbp+0x72],dl
  45d6ca:	imul   ecx,DWORD PTR [rbx+0x69],0x4900646e
  45d6d1:	jae    0x45d72a
  45d6d3:	gs ins BYTE PTR es:[rdi],dx
  45d6d5:	ins    BYTE PTR es:[rdi],dx
  45d6d6:	rex.RX outs dx,DWORD PTR ds:[rsi]
  45d6d8:	jb     0x45d747
  45d6da:	gs fs push rbp
  45d6dd:	jb     0x45d748
  45d6df:	push   rbx
  45d6e0:	je     0x45d754
  45d6e2:	imul   ebp,DWORD PTR [rsi+0x67],0x6e6f4300
  45d6e9:	je     0x45d74c
  45d6eb:	imul   ebp,DWORD PTR [rsi+0x73],0x74656700
  45d6f2:	pop    rdi
  45d6f3:	rex.WR
  45d6f4:	rex.XB
  45d6f5:	rex.WB
  45d6f6:	add    BYTE PTR [rcx+0x6e],r9b
  45d6fa:	je     0x45d72f
  45d6fc:	xor    al,BYTE PTR [rax]
  45d6fe:	push   rdx
  45d6ff:	gs jo  0x45d76e
  45d702:	(bad)  
  45d703:	movsxd esp,DWORD PTR [rbp+0x0]
  45d706:	imul   r13d,DWORD PTR [rbp+r12*2+0x0],0x5f746567
  45d70f:	rex.XB jo 0x45d787
  45d712:	push   rax
  45d713:	(bad)  
  45d714:	je     0x45d77e
  45d716:	add    BYTE PTR [rcx+0x73],cl
  45d719:	push   rax
  45d71a:	(bad)  
  45d71b:	je     0x45d785
  45d71d:	push   rdx
  45d71e:	outs   dx,DWORD PTR ds:[rsi]
  45d71f:	outs   dx,DWORD PTR ds:[rsi]
  45d720:	je     0x45d787
  45d722:	add    BYTE PTR fs:[rdi+0x65],ah
  45d726:	je     0x45d787
  45d728:	rex.WB jae 0x45d771
  45d72b:	imul   ebp,DWORD PTR [rbp+riz*2+0x0],0x74737953
  45d733:	gs ins DWORD PTR es:[rdi],dx
  45d735:	cs push rbx
  45d737:	movsxd esi,DWORD PTR gs:[rbp+0x72]
  45d73b:	imul   esi,DWORD PTR [rcx+rdi*2+0x2e],0x696c6f50
  45d743:	movsxd edi,DWORD PTR [rcx+0x0]
  45d746:	pop    rdx
  45d747:	outs   dx,DWORD PTR ds:[rsi]
  45d748:	outs   dx,BYTE PTR ds:[rsi]
  45d749:	add    BYTE PTR gs:[rbx+0x72],al
  45d74d:	gs (bad) 
  45d74f:	je     0x45d7b6
  45d751:	rex.RX jb 0x45d7c3
  45d754:	ins    DWORD PTR es:[rdi],dx
  45d755:	push   rbp
  45d756:	jb     0x45d7c4
  45d758:	add    BYTE PTR [rbx+0x74],dl
  45d75b:	jb     0x45d7d2
  45d75d:	movsxd esi,DWORD PTR [rsp+rcx*2+0x61]
  45d761:	jns    0x45d7d2
  45d763:	jne    0x45d7d9
  45d765:	rex.B je 0x45d7dc
  45d768:	jb     0x45d7d3
  45d76a:	(bad)  
  45d76b:	jne    0x45d7e1
  45d76d:	add    BYTE PTR gs:[rcx+riz*2+0x79],cl
  45d772:	outs   dx,DWORD PTR ds:[rsi]
  45d773:	jne    0x45d7e9
  45d775:	rex.WXB imul rbp,QWORD PTR [r14+0x64],0x73795300
  45d77d:	je     0x45d7e4
  45d77f:	ins    DWORD PTR es:[rdi],dx
  45d780:	cs pop rax
  45d782:	ins    DWORD PTR es:[rdi],dx
  45d783:	ins    BYTE PTR es:[rdi],dx
  45d784:	cs push rbx
  45d786:	gs jb  0x45d7f2
  45d789:	(bad)  
  45d78a:	ins    BYTE PTR es:[rdi],dx
  45d78b:	imul   edi,DWORD PTR [rdx+0x61],0x6e6f6974
  45d792:	add    BYTE PTR [rax+0x6d],bl
  45d795:	ins    BYTE PTR es:[rdi],dx
  45d796:	rex.WB
  45d797:	outs   dx,BYTE PTR ds:[esi]
  45d799:	outs   dx,DWORD PTR ds:[rsi]
  45d79a:	jb     0x45d801
  45d79c:	rex.B je 0x45d813
  45d79f:	jb     0x45d80a
  45d7a1:	(bad)  
  45d7a2:	jne    0x45d818
  45d7a4:	add    BYTE PTR gs:[rbp+0x61],cl
  45d7a8:	jb     0x45d81d
  45d7aa:	push   0x53006c61
  45d7af:	imul   edi,DWORD PTR [rdx+0x65],0x6800664f
  45d7b6:	ja     0x45d826
  45d7b8:	add    BYTE PTR fs:[rsi+0x69],al
  45d7bc:	gs ins BYTE PTR es:[rdi],dx
  45d7be:	fs rex.WRXB
  45d7c0:	data16 data16 jae 0x45d829
  45d7c4:	je     0x45d807
  45d7c6:	je     0x45d83c
  45d7c8:	jb     0x45d833
  45d7ca:	(bad)  
  45d7cb:	jne    0x45d841
  45d7cd:	add    BYTE PTR gs:[rsp+rbp*2+0x6c],al
  45d7d2:	rex.WB ins DWORD PTR es:[rdi],dx
  45d7d4:	jo     0x45d845
  45d7d6:	jb     0x45d84c
  45d7d8:	rex.B je 0x45d84f
  45d7db:	jb     0x45d846
  45d7dd:	(bad)  
  45d7de:	jne    0x45d854
  45d7e0:	add    BYTE PTR gs:[rbp+0x73],dh
  45d7e4:	gs jb  0x45d81a
  45d7e7:	xor    ch,BYTE PTR [rsi]
  45d7e9:	fs ins BYTE PTR es:[rdi],dx
  45d7eb:	ins    BYTE PTR es:[rdi],dx
  45d7ec:	add    BYTE PTR [rbp+0x61],cl
  45d7ef:	jb     0x45d864
  45d7f1:	push   0x73416c61
  45d7f6:	rex.B je 0x45d86d
  45d7f9:	jb     0x45d864
  45d7fb:	(bad)  
  45d7fc:	jne    0x45d872
  45d7fe:	add    BYTE PTR gs:[rbp+0x6e],dl
  45d802:	ins    DWORD PTR es:[rdi],dx
  45d803:	(bad)  
  45d804:	outs   dx,BYTE PTR ds:[rsi]
  45d805:	(bad)  
  45d806:	addr32 gs fs push rsp
  45d80a:	jns    0x45d87c
  45d80c:	add    BYTE PTR gs:[rax+0x57],ch
  45d810:	outs   dx,BYTE PTR ds:[rsi]
  45d811:	add    BYTE PTR fs:[rcx+0x6e],cl
  45d815:	rex.B je 0x45d88c
  45d818:	jb     0x45d883
  45d81a:	(bad)  
  45d81b:	jne    0x45d891
  45d81d:	add    BYTE PTR gs:[rax+rsi*2+0x77],ch
  45d822:	outs   dx,BYTE PTR ds:[rsi]
  45d823:	fs jo  0x45d892
  45d826:	add    BYTE PTR [rdi+0x62],ch
  45d829:	push   0x65
  45d82b:	movsxd esi,DWORD PTR [rax+rax*1+0x6d]
  45d82f:	gs je  0x45d89a
  45d832:	outs   dx,DWORD PTR ds:[rsi]
  45d833:	add    BYTE PTR fs:[rbp+0x73],ch
  45d837:	add    BYTE PTR [eax+edx*2+0x61],ch
  45d83c:	jb     0x45d89f
  45d83e:	ins    DWORD PTR es:[rdi],dx
  45d83f:	add    BYTE PTR [rax+rsi*2+0x44],ch
  45d843:	(bad)  
  45d844:	je     0x45d8a7
  45d846:	add    BYTE PTR [rbx+0x61],ah
  45d849:	ins    BYTE PTR es:[rdi],dx
  45d84a:	ins    BYTE PTR es:[rdi],dx
  45d84b:	(bad)  
  45d84d:	movsxd ebp,DWORD PTR [rbx+0x0]
  45d850:	jb     0x45d8b7
  45d852:	jae    0x45d8c9
  45d854:	ins    BYTE PTR es:[rdi],dx
  45d855:	je     0x45d857
  45d857:	outs   dx,DWORD PTR ds:[rsi]
  45d858:	jo     0x45d8b9
  45d85a:	rex.RB jno 0x45d8d2
  45d85d:	(bad)  
  45d85e:	ins    BYTE PTR es:[rdi],dx
  45d85f:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x74632e3c
  45d867:	outs   dx,DWORD PTR ds:[rsi]
  45d868:	jb     0x45d8a8
  45d86a:	(bad)  
  45d86b:	pop    rdi
  45d86c:	pop    rdi
  45d86d:	xor    BYTE PTR [rax],al
  45d86f:	jae    0x45d8d6
  45d871:	je     0x45d8d2
  45d873:	push   rsi
  45d874:	gs jb  0x45d8d9
  45d877:	add    BYTE PTR [rbx+0x65],dh
  45d87a:	je     0x45d8db
  45d87c:	push   rdi
  45d87d:	outs   dx,DWORD PTR ds:[rsi]
  45d87e:	jb     0x45d8eb
  45d880:	imul   ebp,DWORD PTR [rsi+0x67],0x65726944
  45d887:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
  45d88b:	jns    0x45d88d
  45d88d:	jae    0x45d8f4
  45d88f:	je     0x45d8f0
  45d891:	push   rbp
  45d892:	jae    0x45d8f9
  45d894:	push   rbx
  45d895:	push   0x456c6c65
  45d89a:	js     0x45d901
  45d89c:	movsxd esi,DWORD PTR [rbp+0x74]
  45d89f:	add    BYTE PTR gs:[rsi+0x69],al
  45d8a3:	ins    BYTE PTR es:[rdi],dx
  45d8a4:	gs push rbx
  45d8a6:	jns    0x45d91b
  45d8a8:	je     0x45d90f
  45d8aa:	ins    DWORD PTR es:[rdi],dx
  45d8ab:	rex.WB outs dx,BYTE PTR ds:[rsi]
  45d8ad:	outs   dx,WORD PTR ds:[rsi]
  45d8af:	add    BYTE PTR [rdi+0x65],al
  45d8b2:	je     0x45d8f9
  45d8b4:	outs   dx,BYTE PTR ds:[rsi]
  45d8b5:	jbe    0x45d920
  45d8b7:	jb     0x45d928
  45d8b9:	outs   dx,BYTE PTR ds:[rsi]
  45d8ba:	ins    DWORD PTR es:[rdi],dx
  45d8bb:	outs   dx,BYTE PTR gs:[rsi]
  45d8bd:	je     0x45d915
  45d8bf:	(bad)  
  45d8c0:	jb     0x45d92b
  45d8c2:	(bad)  
  45d8c3:	(bad)  
  45d8c4:	ins    BYTE PTR es:[rdi],dx
  45d8c5:	add    BYTE PTR gs:[rsi+0x69],al
  45d8c9:	ins    BYTE PTR es:[rdi],dx
  45d8ca:	rex.WB outs dx,BYTE PTR gs:[rsi]
  45d8cd:	outs   dx,WORD PTR ds:[rsi]
  45d8cf:	add    BYTE PTR [rdi+0x65],al
  45d8d2:	je     0x45d91a
  45d8d4:	imul   ebp,DWORD PTR [rbp+riz*2+0x73],0x454f4900
  45d8dc:	js     0x45d941
  45d8de:	gs jo  0x45d955
  45d8e1:	imul   ebp,DWORD PTR [rdi+0x6e],0x67724100
  45d8e8:	jne    0x45d957
  45d8ea:	outs   dx,BYTE PTR gs:[rsi]
  45d8ec:	je     0x45d933
  45d8ee:	js     0x45d953
  45d8f0:	gs jo  0x45d967
  45d8f3:	imul   ebp,DWORD PTR [rdi+0x6e],0x74657300
  45d8fa:	pop    rdi
  45d8fb:	rex.R (bad) 
  45d8fd:	je     0x45d960
  45d8ff:	push   rbx
  45d900:	outs   dx,DWORD PTR ds:[rsi]
  45d901:	jne    0x45d975
  45d903:	movsxd esp,DWORD PTR [rbp+0x0]
  45d906:	push   rsp
  45d907:	gs js  0x45d97e
  45d90a:	rex.X outs dx,DWORD PTR ds:[rsi]
  45d90c:	js     0x45d950
  45d90e:	(bad)  
  45d90f:	jae    0x45d976
  45d911:	add    BYTE PTR [rbx+0x65],dh
  45d914:	je     0x45d975
  45d916:	rex.B jne 0x45d98d
  45d919:	outs   dx,DWORD PTR ds:[rsi]
  45d91a:	push   rbx
  45d91b:	imul   edi,DWORD PTR [rdx+0x65],0x74657300
  45d922:	pop    rdi
  45d923:	rex.W
  45d924:	imul   esp,DWORD PTR gs:[rdi+0x68],0x6f660074
  45d92c:	outs   dx,BYTE PTR ds:[rsi]
  45d92d:	je     0x45d92f
  45d92f:	push   rsp
  45d930:	gs js  0x45d9a7
  45d933:	push   rdx
  45d934:	outs   dx,BYTE PTR gs:[rsi]
  45d936:	fs gs jb 0x45d99f
  45d93a:	jb     0x45d93c
  45d93c:	rex.WRB
  45d93d:	gs (bad) 
  45d93f:	jae    0x45d9b6
  45d941:	jb     0x45d9a8
  45d943:	push   rsp
  45d944:	gs js  0x45d9bb
  45d947:	add    BYTE PTR [rbx+0x6f],al
  45d94a:	outs   dx,BYTE PTR ds:[rsi]
  45d94b:	je     0x45d9ae
  45d94d:	imul   ebp,DWORD PTR [rsi+0x65],0x53490072
  45d954:	jne    0x45d9c6
  45d956:	jo     0x45d9c7
  45d958:	jb     0x45d9ce
  45d95a:	rex.WB outs dx,BYTE PTR ds:[rsi]
  45d95c:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
  45d964:	add    BYTE PTR [rdx+0x65],al
  45d967:	imul   ebp,DWORD PTR [esi+0x49],0x74696e
  45d96f:	push   rsp
  45d970:	(bad)  
  45d971:	(bad)  
  45d972:	ins    BYTE PTR es:[rdi],dx
  45d973:	gs rex.WR (bad) 
  45d976:	jns    0x45d9e7
  45d978:	jne    0x45d9ee
  45d97a:	rex.XB outs dx,DWORD PTR ds:[rsi]
  45d97c:	outs   dx,BYTE PTR ds:[rsi]
  45d97d:	je     0x45d9f1
  45d97f:	outs   dx,DWORD PTR ds:[rsi]
  45d980:	ins    BYTE PTR es:[rdi],dx
  45d981:	rex.XB outs dx,DWORD PTR ds:[rsi]
  45d983:	ins    BYTE PTR es:[rdi],dx
  45d984:	ins    BYTE PTR es:[rdi],dx
  45d985:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  45d98a:	outs   dx,BYTE PTR ds:[rsi]
  45d98b:	add    BYTE PTR [rbx+0x71],dl
  45d98e:	ins    BYTE PTR es:[rdi],dx
  45d98f:	push   rbx
  45d990:	je     0x45da07
  45d992:	imul   ebp,DWORD PTR fs:[rdi+0x4c],0x756f7961
  45d99a:	je     0x45d9e5
  45d99c:	outs   dx,BYTE PTR ds:[rsi]
  45d99d:	fs outs dx,BYTE PTR gs:[rsi]
  45d9a0:	je     0x45d9a2
  45d9a2:	push   rbx
  45d9a3:	gs je  0x45d9fc
  45d9a6:	gs jb  0x45da1d
  45d9a9:	imul   esp,DWORD PTR [rbx+0x61],0x646e496c
  45d9b0:	outs   dx,BYTE PTR gs:[rsi]
  45d9b2:	je     0x45d9b4
  45d9b4:	push   rbx
  45d9b5:	gs je  0x45d9fb
  45d9b8:	outs   dx,DWORD PTR ds:[rsi]
  45d9b9:	ins    BYTE PTR es:[rdi],dx
  45d9ba:	jne    0x45da29
  45d9bc:	outs   dx,BYTE PTR ds:[rsi]
  45d9bd:	push   rbx
  45d9be:	jo     0x45da21
  45d9c0:	outs   dx,BYTE PTR ds:[rsi]
  45d9c1:	add    BYTE PTR [rbx+0x65],dh
  45d9c4:	je     0x45da25
  45d9c6:	rex.XB push 0x656b6365
  45d9cc:	fs push rsi
  45d9ce:	(bad)  
  45d9cf:	ins    BYTE PTR es:[rdi],dx
  45d9d0:	jne    0x45da37
  45d9d2:	add    BYTE PTR [rbx+0x6f],al
  45d9d5:	outs   dx,BYTE PTR ds:[rsi]
  45d9d6:	je     0x45da4a
  45d9d8:	outs   dx,DWORD PTR ds:[rsi]
  45d9d9:	ins    BYTE PTR es:[rdi],dx
  45d9da:	rex.X imul ebp,DWORD PTR [rsi+0x64],0x73676e69
  45d9e2:	rex.XB outs dx,DWORD PTR ds:[rsi]
  45d9e4:	ins    BYTE PTR es:[rdi],dx
  45d9e5:	ins    BYTE PTR es:[rdi],dx
  45d9e6:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  45d9eb:	outs   dx,BYTE PTR ds:[rsi]
  45d9ec:	add    BYTE PTR [rdi+0x65],ah
  45d9ef:	je     0x45da50
  45d9f1:	rex.R (bad) 
  45d9f3:	je     0x45da56
  45d9f5:	rex.X imul ebp,DWORD PTR [rsi+0x64],0x73676e69
  45d9fd:	add    BYTE PTR [rdx+0x69],al
  45da00:	outs   dx,BYTE PTR ds:[rsi]
  45da01:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x74614400
  45da09:	(bad)  
  45da0a:	push   rbx
  45da0b:	outs   dx,DWORD PTR ds:[rsi]
  45da0c:	jne    0x45da80
  45da0e:	movsxd esp,DWORD PTR [rbp+0x55]
  45da11:	jo     0x45da77
  45da13:	(bad)  
  45da14:	je     0x45da7b
  45da16:	rex.WRB outs dx,DWORD PTR ds:[rsi]
  45da18:	fs add BYTE PTR gs:[rbx+0x65],dl
  45da1d:	je     0x45da67
  45da1f:	outs   dx,DWORD PTR ds:[rsi]
  45da20:	jb     0x45da8b
  45da22:	jp     0x45da93
  45da24:	outs   dx,BYTE PTR ds:[rsi]
  45da25:	je     0x45da88
  45da27:	ins    BYTE PTR es:[rdi],dx
  45da28:	rex.WB outs dx,BYTE PTR ds:[rsi]
  45da2a:	fs outs dx,BYTE PTR gs:[rsi]
  45da2d:	je     0x45da2f
  45da2f:	rex.X jne 0x45daa6
  45da32:	je     0x45daa3
  45da34:	outs   dx,BYTE PTR ds:[rsi]
  45da35:	rex.X (bad) 
  45da37:	jae    0x45da9e
  45da39:	add    BYTE PTR [rbx+0x65],dh
  45da3c:	je     0x45da9d
  45da3e:	push   rbp
  45da3f:	jae    0x45daa6
  45da41:	push   rsi
  45da42:	imul   esi,DWORD PTR [rbx+0x75],0x74536c61
  45da49:	jns    0x45dab7
  45da4b:	gs rex.X (bad) 
  45da4e:	movsxd ebp,DWORD PTR [rbx+0x43]
  45da51:	outs   dx,DWORD PTR ds:[rsi]
  45da52:	ins    BYTE PTR es:[rdi],dx
  45da53:	outs   dx,DWORD PTR ds:[rsi]
  45da54:	jb     0x45da56
  45da56:	jae    0x45dabd
  45da58:	je     0x45dab9
  45da5a:	push   rsi
  45da5b:	(bad)  
  45da5c:	ins    BYTE PTR es:[rdi],dx
  45da5d:	jne    0x45dac4
  45da5f:	add    BYTE PTR [rbx+0x65],dh
  45da62:	je     0x45dac3
  45da64:	push   rdx
  45da65:	gs (bad) 
  45da67:	rex.WRXB outs dx,BYTE PTR fs:[rsi]
  45da6a:	ins    BYTE PTR es:[rdi],dx
  45da6b:	jns    0x45da6d
  45da6d:	jae    0x45dad4
  45da6f:	je     0x45dad0
  45da71:	imul   r13,QWORD PTR [r14+0x69],0x536d756d
  45da79:	imul   edi,DWORD PTR [rdx+0x65],0x64646100
  45da80:	pop    rdi
  45da81:	rex.XB ins BYTE PTR es:[rdi],dx
  45da83:	imul   esp,DWORD PTR [rbx+0x6b],0x726f4200
  45da8a:	fs gs jb 0x45dae1
  45da8e:	je     0x45db09
  45da90:	ins    BYTE PTR es:[rdi],dx
  45da91:	add    BYTE PTR gs:[rbx+0x65],dh
  45da95:	je     0x45daf6
  45da97:	rex.X outs dx,DWORD PTR ds:[rsi]
  45da99:	jb     0x45daff
  45da9b:	gs jb  0x45daf1
  45da9e:	je     0x45db19
  45daa0:	ins    BYTE PTR es:[rdi],dx
  45daa1:	add    BYTE PTR gs:[rbx+0x65],dl
  45daa5:	je     0x45daf0
  45daa7:	jae    0x45dafb
  45daa9:	outs   dx,DWORD PTR ds:[rsi]
  45daaa:	outs   dx,DWORD PTR ds:[rsi]
  45daab:	je     0x45daf0
  45daad:	outs   dx,DWORD PTR ds:[rsi]
  45daae:	outs   dx,BYTE PTR ds:[rsi]
  45daaf:	je     0x45db23
  45dab1:	outs   dx,DWORD PTR ds:[rsi]
  45dab2:	ins    BYTE PTR es:[rdi],dx
  45dab3:	add    BYTE PTR [rcx+0x64],ah
  45dab6:	fs pop rdi
  45dab8:	push   rdx
  45dab9:	gs jae 0x45db25
  45dabc:	jp     0x45db23
  45dabe:	add    BYTE PTR [rbp+0x6e],al
  45dac1:	rex.WB outs dx,BYTE PTR fs:[rsi]
  45dac4:	imul   esi,DWORD PTR [rax+rax*1+0x63],0x61746e6f
  45dacc:	imul   ebp,DWORD PTR [rsi+0x65],0x43490072
  45dad3:	outs   dx,DWORD PTR ds:[rsi]
  45dad4:	ins    DWORD PTR es:[rdi],dx
  45dad5:	jo     0x45db46
  45dad7:	outs   dx,BYTE PTR ds:[rsi]
  45dad8:	outs   dx,BYTE PTR gs:[rsi]
  45dada:	je     0x45dadc
  45dadc:	rex.RXB
  45dadd:	gs je  0x45db34
  45dae0:	jns    0x45db52
  45dae2:	add    BYTE PTR gs:[rcx+0x6e],cl
  45dae6:	fs gs js 0x45db39
  45daea:	data16 add BYTE PTR [rsi+0x72],al
  45daee:	outs   dx,DWORD PTR ds:[rsi]
  45daef:	ins    DWORD PTR es:[rdi],dx
  45daf0:	rex.B jb 0x45db5a
  45daf3:	(bad)  
  45daf4:	add    BYTE PTR [rbx+0x6f],al
  45daf7:	outs   dx,BYTE PTR ds:[rsi]
  45daf8:	je     0x45db6c
  45dafa:	outs   dx,DWORD PTR ds:[rsi]
  45dafb:	ins    BYTE PTR es:[rdi],dx
  45dafc:	push   rbx
  45dafd:	je     0x45db78
  45daff:	ins    BYTE PTR es:[rdi],dx
  45db00:	gs jae 0x45db03
  45db03:	push   rbx
  45db04:	gs je  0x45db5a
  45db07:	je     0x45db82
  45db09:	ins    BYTE PTR es:[rdi],dx
  45db0a:	add    BYTE PTR gs:[rdi+0x65],ah
  45db0e:	je     0x45db6f
  45db10:	push   rbx
  45db11:	imul   edi,DWORD PTR [rdx+0x65],0x6f6f5400
  45db18:	ins    BYTE PTR es:[rdi],dx
  45db19:	push   rbx
  45db1a:	je     0x45db8e
  45db1c:	imul   esi,DWORD PTR [rax+0x52],0x65646e65
  45db23:	jb     0x45db8a
  45db25:	jb     0x45db27
  45db27:	jae    0x45db8e
  45db29:	je     0x45db8a
  45db2b:	push   rdx
  45db2c:	outs   dx,BYTE PTR gs:[rsi]
  45db2e:	fs gs jb 0x45db97
  45db32:	jb     0x45db34
  45db34:	jae    0x45db9b
  45db36:	je     0x45db97
  45db38:	rex.WB ins DWORD PTR es:[rdi],dx
  45db3a:	(bad)  
  45db3b:	add    BYTE PTR gs:[ebx+0x79],dl
  45db40:	jae    0x45dbb6
  45db42:	gs ins DWORD PTR es:[rdi],dx
  45db44:	cs rex.R jb 0x45dba9
  45db48:	ja     0x45dbb3
  45db4a:	outs   dx,BYTE PTR ds:[rsi]
  45db4b:	addr32 cs rex.R jb 0x45dbb1
  45db50:	ja     0x45dbbb
  45db52:	outs   dx,BYTE PTR ds:[rsi]
  45db53:	xor    al,BYTE PTR [eax+eax*1+0x4c]
  45db58:	imul   ebp,DWORD PTR [rsi+0x65],0x72477261
  45db5f:	(bad)  
  45db60:	imul   esp,DWORD PTR fs:[rbp+0x6e],0x75724274
  45db68:	jae    0x45dbd2
  45db6a:	add    BYTE PTR [rcx+rbp*2+0x6e],cl
  45db6e:	gs (bad) 
  45db70:	jb     0x45dbb9
  45db72:	jb     0x45dbd5
  45db74:	imul   esp,DWORD PTR fs:[rbp+0x6e],0x646f4d74
  45db7c:	add    BYTE PTR gs:[rdi+0x72],al
  45db80:	(bad)  
  45db81:	jo     0x45dbeb
  45db83:	imul   esp,DWORD PTR [rbx+0x73],0x74656700
  45db8a:	pop    rdi
  45db8b:	rex.RXB jb 0x45dbef
  45db8e:	jo     0x45dbf8
  45db90:	imul   esp,DWORD PTR [rbx+0x73],0x75724200
  45db97:	jae    0x45dc01
  45db99:	add    BYTE PTR [rsi+0x69],al
  45db9c:	ins    BYTE PTR es:[rdi],dx
  45db9d:	ins    BYTE PTR es:[rdi],dx
  45db9e:	push   rdx
  45db9f:	movsxd esi,DWORD PTR gs:[rcx+riz*2+0x6e]
  45dba4:	ins    BYTE PTR es:[edi],dx
  45dba6:	add    BYTE PTR gs:[rdx+rsi*2+0x61],al
  45dbab:	ja     0x45dbf6
  45dbad:	ins    DWORD PTR es:[rdi],dx
  45dbae:	(bad)  
  45dbaf:	add    BYTE PTR gs:[esi+0x6f],al
  45dbb4:	outs   dx,BYTE PTR ds:[rsi]
  45dbb5:	je     0x45dc0a
  45dbb7:	je     0x45dc32
  45dbb9:	ins    BYTE PTR es:[rdi],dx
  45dbba:	add    BYTE PTR gs:[rdi+rbp*2+0x6f],dl
  45dbbf:	ins    BYTE PTR es:[rdi],dx
  45dbc0:	push   rbx
  45dbc1:	je     0x45dc35
  45dbc3:	imul   esi,DWORD PTR [rax+0x53],0x72617065
  45dbca:	(bad)  
  45dbcb:	je     0x45dc3c
  45dbcd:	jb     0x45dbcf
  45dbcf:	push   rsp
  45dbd0:	outs   dx,DWORD PTR ds:[rsi]
  45dbd1:	outs   dx,DWORD PTR ds:[rsi]
  45dbd2:	ins    BYTE PTR es:[rdi],dx
  45dbd3:	push   rbx
  45dbd4:	je     0x45dc48
  45dbd6:	imul   esi,DWORD PTR [rax+0x4c],0x6c656261
  45dbdd:	add    BYTE PTR [rdi+0x65],ah
  45dbe0:	je     0x45dc41
  45dbe2:	rex.XB outs dx,DWORD PTR ds:[rsi]
  45dbe4:	outs   dx,BYTE PTR ds:[rsi]
  45dbe5:	je     0x45dc59
  45dbe7:	outs   dx,DWORD PTR ds:[rsi]
  45dbe8:	ins    BYTE PTR es:[rdi],dx
  45dbe9:	push   rsp
  45dbea:	gs js  0x45dc61
  45dbed:	add    BYTE PTR [rbx+0x65],dh
  45dbf0:	je     0x45dc51
  45dbf2:	imul   r13,QWORD PTR [rsi+0x6b],0x6f6c6f43
  45dbfa:	jb     0x45dbfc
  45dbfc:	jae    0x45dc63
  45dbfe:	je     0x45dc5f
  45dc00:	rex.WB jae 0x45dc4f
  45dc03:	imul   ebp,DWORD PTR [rsi+0x6b],0x74657300
  45dc0a:	pop    rdi
  45dc0b:	push   rsp
  45dc0c:	(bad)  
  45dc0d:	add    BYTE PTR [ecx+ebp*2+0x6e],cl
  45dc12:	imul   eax,DWORD PTR [rdx+0x65],0x68
  45dc16:	(bad)  
  45dc17:	jbe    0x45dc82
  45dc19:	outs   dx,DWORD PTR ds:[rsi]
  45dc1a:	jb     0x45dc1c
  45dc1c:	jae    0x45dc83
  45dc1e:	je     0x45dc7f
  45dc20:	imul   r13,QWORD PTR [rsi+0x6b],0x61686542
  45dc28:	jbe    0x45dc93
  45dc2a:	outs   dx,DWORD PTR ds:[rsi]
  45dc2b:	jb     0x45dc2d
  45dc2d:	push   rsp
  45dc2e:	outs   dx,DWORD PTR ds:[rsi]
  45dc2f:	outs   dx,DWORD PTR ds:[rsi]
  45dc30:	ins    BYTE PTR es:[rdi],dx
  45dc31:	push   rbx
  45dc32:	je     0x45dca6
  45dc34:	imul   esi,DWORD PTR [rax+0x49],0x446d6574
  45dc3b:	imul   esi,DWORD PTR [rbx+0x70],0x5379616c
  45dc42:	je     0x45dcbd
  45dc44:	ins    BYTE PTR es:[rdi],dx
  45dc45:	add    BYTE PTR gs:[rbx+0x65],dh
  45dc49:	je     0x45dcaa
  45dc4b:	imul   r14d,DWORD PTR [rbx+0x70],0x5379616c
  45dc53:	je     0x45dcce
  45dc55:	ins    BYTE PTR es:[rdi],dx
  45dc56:	add    BYTE PTR gs:[rbx+0x6f],al
  45dc5a:	outs   dx,BYTE PTR ds:[rsi]
  45dc5b:	je     0x45dcc2
  45dc5d:	outs   dx,BYTE PTR ds:[rsi]
  45dc5e:	je     0x45dca1
  45dc60:	ins    BYTE PTR es:[rdi],dx
  45dc61:	imul   esp,DWORD PTR [rdi+0x6e],0x746e656d
  45dc68:	add    BYTE PTR [rbx+0x65],dh
  45dc6b:	je     0x45dccc
  45dc6d:	push   rsp
  45dc6e:	gs js  0x45dce5
  45dc71:	rex.B ins BYTE PTR es:[rdi],dx
  45dc73:	imul   esp,DWORD PTR [rdi+0x6e],0x65724300
  45dc7a:	(bad)  
  45dc7b:	je     0x45dce2
  45dc7d:	rex.RXB jb 0x45dce1
  45dc80:	jo     0x45dcea
  45dc82:	imul   esp,DWORD PTR [rbx+0x73],0x65444900
  45dc89:	jbe    0x45dcf4
  45dc8b:	movsxd esp,DWORD PTR [rbp+0x43]
  45dc8e:	outs   dx,DWORD PTR ds:[rsi]
  45dc8f:	outs   dx,BYTE PTR ds:[rsi]
  45dc90:	je     0x45dcf7
  45dc92:	js     0x45dd08
  45dc94:	add    BYTE PTR [rbx+0x65],dh
  45dc97:	je     0x45dcf8
  45dc99:	push   rdi
  45dc9a:	imul   esp,DWORD PTR [rsp+rsi*2+0x68],0x74656700
  45dca2:	pop    rdi
  45dca3:	imul   r13,QWORD PTR [r14+0x69],0x536d756d
  45dcab:	imul   edi,DWORD PTR [rdx+0x65],0x7a697300
  45dcb2:	add    BYTE PTR gs:[rdi+0x6c],ch
  45dcb6:	fs rex.WB je 0x45dd1f
  45dcba:	ins    DWORD PTR es:[rdi],dx
  45dcbb:	add    BYTE PTR [rsi+0x65],ch
  45dcbe:	ja     0x45dd09
  45dcc0:	je     0x45dd27
  45dcc2:	ins    DWORD PTR es:[rdi],dx
  45dcc3:	add    BYTE PTR [rdi+0x65],ah
  45dcc6:	je     0x45dd27
  45dcc8:	push   rsp
  45dcc9:	(bad)  
  45dcca:	add    BYTE PTR [edi+ebp*2+0x6f],dl
  45dccf:	ins    BYTE PTR es:[rdi],dx
  45dcd0:	push   rbx
  45dcd1:	je     0x45dd45
  45dcd3:	imul   esi,DWORD PTR [rax+0x49],0x436d6574
  45dcda:	outs   dx,DWORD PTR ds:[rsi]
  45dcdb:	ins    BYTE PTR es:[rdi],dx
  45dcdc:	ins    BYTE PTR es:[rdi],dx
  45dcdd:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  45dce2:	outs   dx,BYTE PTR ds:[rsi]
  45dce3:	add    BYTE PTR [rdi+0x65],ah
  45dce6:	je     0x45dd47
  45dce8:	rex.WB je 0x45dd50
  45dceb:	ins    DWORD PTR es:[rdi],dx
  45dcec:	jae    0x45dcee
  45dcee:	imul   ebp,DWORD PTR [rsi+0x64],0x49007865
  45dcf5:	outs   dx,BYTE PTR ds:[rsi]
  45dcf6:	jae    0x45dd5d
  45dcf8:	jb     0x45dd6e
  45dcfa:	add    BYTE PTR [rdi+0x65],ah
  45dcfd:	je     0x45dd5e
  45dcff:	push   rsp
  45dd00:	jb     0x45dd63
  45dd02:	outs   dx,BYTE PTR ds:[rsi]
  45dd03:	jae    0x45dd75
  45dd05:	(bad)  
  45dd06:	jb     0x45dd6d
  45dd08:	outs   dx,BYTE PTR ds:[rsi]
  45dd09:	je     0x45dd0b
  45dd0b:	jae    0x45dd72
  45dd0d:	je     0x45dd6e
  45dd0f:	rex.XB (bad) 
  45dd11:	outs   dx,BYTE PTR ds:[rsi]
  45dd12:	rex.WRXB jbe 0x45dd7a
  45dd15:	jb     0x45dd7d
  45dd17:	ins    BYTE PTR es:[rdi],dx
  45dd18:	outs   dx,DWORD PTR ds:[rsi]
  45dd19:	ja     0x45dd1b
  45dd1b:	push   rsp
  45dd1c:	outs   dx,DWORD PTR ds:[rsi]
  45dd1d:	outs   dx,DWORD PTR ds:[rsi]
  45dd1e:	ins    BYTE PTR es:[rdi],dx
  45dd1f:	push   rbx
  45dd20:	je     0x45dd94
  45dd22:	imul   esi,DWORD PTR [rax+0x47],0x53706972
  45dd29:	je     0x45dda4
  45dd2b:	ins    BYTE PTR es:[rdi],dx
  45dd2c:	add    BYTE PTR gs:[rbx+0x65],dh
  45dd30:	je     0x45dd91
  45dd32:	rex.RXB jb 0x45dd9e
  45dd35:	jo     0x45dd8a
  45dd37:	je     0x45ddb2
  45dd39:	ins    BYTE PTR es:[rdi],dx
  45dd3a:	add    BYTE PTR gs:[rdi+rbp*2+0x6f],dl
  45dd3f:	ins    BYTE PTR es:[rdi],dx
  45dd40:	push   rbx
  45dd41:	je     0x45ddb5
  45dd43:	imul   esi,DWORD PTR [rax+0x4c],0x756f7961
  45dd4a:	je     0x45dd9f
  45dd4c:	je     0x45ddc7
  45dd4e:	ins    BYTE PTR es:[rdi],dx
  45dd4f:	add    BYTE PTR gs:[rbx+0x65],dh
  45dd53:	je     0x45ddb4
  45dd55:	rex.WR (bad) 
  45dd57:	jns    0x45ddc8
  45dd59:	jne    0x45ddcf
  45dd5b:	push   rbx
  45dd5c:	je     0x45ddd7
  45dd5e:	ins    BYTE PTR es:[rdi],dx
  45dd5f:	add    BYTE PTR gs:[rbx+0x65],dh
  45dd63:	je     0x45ddc4
  45dd65:	push   rbx
  45dd66:	je     0x45ddda
  45dd68:	gs je  0x45ddce
  45dd6b:	push   0x74657300
  45dd70:	pop    rdi
  45dd71:	rex.R outs dx,DWORD PTR ds:[rsi]
  45dd73:	jne    0x45ddd7
  45dd75:	ins    BYTE PTR es:[rdi],dx
  45dd76:	gs rex.X jne 0x45dde0
  45dd7a:	data16 gs jb 0x45dde3
  45dd7e:	add    BYTE PTR fs:[rbx+0x79],dl
  45dd82:	jae    0x45ddf8
  45dd84:	gs ins DWORD PTR es:[rdi],dx
  45dd86:	cs push rdi
  45dd88:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  45dd8f:	rex.RX outs dx,DWORD PTR ds:[rsi]
  45dd91:	jb     0x45de00
  45dd93:	jae    0x45ddc3
  45dd95:	rex.WR (bad) 
  45dd97:	jns    0x45de08
  45dd99:	jne    0x45de0f
  45dd9b:	add    BYTE PTR [rcx+0x72],al
  45dd9e:	jb     0x45de01
  45dda0:	outs   dx,BYTE PTR ds:[rsi]
  45dda1:	gs fs rex.RB ins BYTE PTR es:[edi],dx
  45dda6:	gs ins DWORD PTR es:[rdi],dx
  45dda8:	outs   dx,BYTE PTR gs:[rsi]
  45ddaa:	je     0x45ddef
  45ddac:	outs   dx,DWORD PTR ds:[rsi]
  45ddad:	ins    BYTE PTR es:[rdi],dx
  45ddae:	ins    BYTE PTR es:[rdi],dx
  45ddaf:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  45ddb4:	outs   dx,BYTE PTR ds:[rsi]
  45ddb5:	add    BYTE PTR [rcx+0x74],ch
  45ddb8:	gs ins DWORD PTR es:[rdi],dx
  45ddba:	add    BYTE PTR [rsi+0x6f],cl
  45ddbd:	je     0x45de12
  45ddbf:	jne    0x45de31
  45ddc1:	jo     0x45de32
  45ddc3:	jb     0x45de39
  45ddc5:	gs fs rex.RB js 0x45de2d
  45ddca:	gs jo  0x45de41
  45ddcd:	imul   ebp,DWORD PTR [rdi+0x6e],0x41545300
  45ddd4:	push   rsp
  45ddd5:	push   0x64616572
  45ddda:	rex.B je 0x45de51
  45dddd:	jb     0x45de48
  45dddf:	(bad)  
  45dde0:	jne    0x45de56
  45dde2:	add    BYTE PTR gs:[rcx+0x72],ah
  45dde6:	addr32 jae 0x45dde9
  45dde9:	push   rbx
  45ddea:	je     0x45de4d
  45ddec:	jb     0x45de62
  45ddee:	jae    0x45de47
  45ddf0:	imul   esi,DWORD PTR [rax+rbp*2+0x0],0x5f746567
  45ddf8:	rex.WR
  45ddf9:	outs   dx,BYTE PTR gs:[rsi]
  45ddfb:	addr32 je 0x45de66
  45ddfe:	add    BYTE PTR [rbx+0x75],dl
  45de01:	(bad)
  45de06:	outs   dx,BYTE PTR ds:[rsi]
  45de07:	add    BYTE PTR [ecx+0x70],al
  45de0b:	jo     0x45de79
  45de0d:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
  45de14:	add    BYTE PTR [rbp+0x6e],al
  45de17:	(bad)  
  45de18:	(bad)  
  45de19:	ins    BYTE PTR es:[rdi],dx
  45de1a:	gs push rsi
  45de1c:	imul   esi,DWORD PTR [rbx+0x75],0x74536c61
  45de23:	jns    0x45de91
  45de25:	gs jae 0x45de28
  45de28:	push   rbx
  45de29:	gs je  0x45de6f
  45de2c:	outs   dx,DWORD PTR ds:[rsi]
  45de2d:	ins    DWORD PTR es:[rdi],dx
  45de2e:	jo     0x45de91
  45de30:	je     0x45de9b
  45de32:	(bad)  
  45de33:	ins    BYTE PTR es:[rdi],dx
  45de34:	gs push rsp
  45de36:	gs js  0x45dead
  45de39:	push   rdx
  45de3a:	outs   dx,BYTE PTR gs:[rsi]
  45de3c:	fs gs jb 0x45dea9
  45de40:	outs   dx,BYTE PTR ds:[rsi]
  45de41:	addr32 rex.R
  45de43:	gs data16 (bad) 
  45de46:	jne    0x45deb4
  45de48:	je     0x45de4a
  45de4a:	push   rdx
  45de4b:	jne    0x45debb
  45de4d:	add    BYTE PTR [rdx+0x65],dl
  45de50:	data16 gs jb 0x45deb9
  45de54:	outs   dx,BYTE PTR ds:[rsi]
  45de55:	movsxd esp,DWORD PTR [rbp+0x45]
  45de58:	jno    0x45decf
  45de5a:	(bad)  
  45de5b:	ins    BYTE PTR es:[rdi],dx
  45de5c:	jae    0x45de5e
  45de5e:	rex.RXB
  45de5f:	gs je  0x45deb1
  45de62:	(bad)  
  45de63:	push   0x65
  45de65:	movsxd esi,DWORD PTR [rax+rax*1+0x45]
  45de69:	imul   esi,DWORD PTR fs:[rdi+rbp*2+0x72],0x776f7242
  45de72:	jae    0x45ded5
  45de74:	(bad)  
  45de75:	ins    BYTE PTR es:[rdi],dx
  45de76:	gs rex.B je 0x45deee
  45de7a:	jb     0x45dee5
  45de7c:	(bad)  
  45de7d:	jne    0x45def3
  45de7f:	add    BYTE PTR gs:[rbp+0x64],al
  45de83:	imul   esi,DWORD PTR [rdi+rbp*2+0x72],0x776f7242
  45de8b:	jae    0x45deee
  45de8d:	(bad)  
  45de8e:	ins    BYTE PTR es:[rdi],dx
  45de8f:	gs push rbx
  45de91:	je     0x45def4
  45de93:	je     0x45defa
  45de95:	add    BYTE PTR [rbx+0x6f],al
  45de98:	outs   dx,BYTE PTR ds:[rsi]
  45de99:	movsxd esp,DWORD PTR [rcx+0x74]
  45de9c:	add    BYTE PTR [rax+0x65],cl
  45de9f:	ins    BYTE PTR es:[rdi],dx
  45dea0:	jo     0x45def0
  45dea2:	(bad)  
  45dea3:	jbe    0x45df0e
  45dea5:	addr32 (bad) 
  45dea7:	je     0x45df18
  45dea9:	jb     0x45deab
  45deab:	rex.XB jne 0x45df20
  45deae:	jae    0x45df1f
  45deb0:	jb     0x45df25
  45deb2:	add    BYTE PTR [rdi+0x65],ah
  45deb5:	je     0x45df16
  45deb7:	push   rdi
  45deb8:	(bad)  
  45deb9:	imul   esi,DWORD PTR [rbx+rax*2+0x75],0x726f7372
  45dec1:	add    BYTE PTR [rbx+0x65],dh
  45dec4:	je     0x45df25
  45dec6:	rex.XB jne 0x45df3b
  45dec9:	jb     0x45df30
  45decb:	outs   dx,BYTE PTR ds:[rsi]
  45decc:	je     0x45dece
  45dece:	outs   dx,DWORD PTR ds:[rsi]
  45decf:	jo     0x45df30
  45ded1:	rex.WB outs dx,BYTE PTR ds:[rsi]
  45ded3:	gs jno 0x45df4b
  45ded6:	(bad)  
  45ded7:	ins    BYTE PTR es:[rdi],dx
  45ded8:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x6e6f6369
  45dee0:	add    BYTE PTR [rcx+rbp*2+0x6e],ch
  45dee4:	imul   eax,DWORD PTR [rax],0x64
  45dee7:	gs jae 0x45df4d
  45deea:	jb     0x45df55
  45deec:	jo     0x45df62
  45deee:	imul   ebp,DWORD PTR [rdi+0x6e],0x426f5400
  45def5:	imul   esi,DWORD PTR [rbp+rbp*2+0x61],0x3e3c0070
  45defd:	movsxd ebx,DWORD PTR [rdi+0x5f]
  45df00:	imul   r14d,DWORD PTR [rbx+0x70],0x4379616c
  45df08:	ins    BYTE PTR es:[rdi],dx
  45df09:	(bad)  
  45df0a:	jae    0x45df7f
  45df0c:	xor    DWORD PTR [rax],eax
  45df0e:	imul   r13,QWORD PTR [rsi+0x6b],0x6562614c
  45df16:	ins    BYTE PTR es:[rdi],dx
  45df17:	imul   r13,QWORD PTR [rsi+0x6b],0x63696c43
  45df1f:	imul   esp,DWORD PTR [rbp+0x64],0x45
  45df23:	jbe    0x45df8a
  45df25:	outs   dx,BYTE PTR ds:[rsi]
  45df26:	je     0x45df69
  45df28:	jb     0x45df91
  45df2a:	jae    0x45df2c
  45df2c:	cmp    al,0x41
  45df2e:	fs fs rex.WB je 0x45df98
  45df33:	ins    DWORD PTR es:[rdi],dx
  45df34:	ds (bad) 
  45df36:	pop    rdi
  45df37:	pop    rdi
  45df38:	xor    BYTE PTR [rax],al
  45df3a:	rex.WRB outs dx,DWORD PTR ds:[rsi]
  45df3c:	jne    0x45dfb1
  45df3e:	gs rex.X jne 0x45dfb6
  45df42:	je     0x45dfb3
  45df44:	outs   dx,BYTE PTR ds:[rsi]
  45df45:	jae    0x45df47
  45df47:	addr32 gs je 0x45dfaa
  45df4b:	rex.X jne 0x45dfc2
  45df4e:	je     0x45dfbf
  45df50:	outs   dx,BYTE PTR ds:[rsi]
  45df51:	add    BYTE PTR [rcx+0x6d],ch
  45df54:	(bad)  
  45df55:	add    BYTE PTR gs:[edi+0x65],ah
  45df5a:	je     0x45dfbb
  45df5c:	push   rdx
  45df5d:	outs   dx,DWORD PTR ds:[rsi]
  45df5e:	ja     0x45dfa3
  45df60:	outs   dx,DWORD PTR ds:[rsi]
  45df61:	jne    0x45dfd1
  45df63:	je     0x45df65
  45df65:	rex.WRB (bad) 
  45df67:	je     0x45dfd1
  45df69:	add    BYTE PTR [rbp+0x61],cl
  45df6c:	js     0x45df6e
  45df6e:	push   rsp
  45df6f:	(bad)  
  45df70:	(bad)  
  45df71:	ins    BYTE PTR es:[rdi],dx
  45df72:	gs rex.WR (bad) 
  45df75:	jns    0x45dfe6
  45df77:	jne    0x45dfed
  45df79:	push   rdx
  45df7a:	outs   dx,DWORD PTR ds:[rsi]
  45df7b:	ja     0x45dfd0
  45df7d:	je     0x45dff8
  45df7f:	ins    BYTE PTR es:[rdi],dx
  45df80:	rex.XB outs dx,DWORD PTR gs:[rsi]
  45df83:	ins    BYTE PTR es:[rdi],dx
  45df84:	ins    BYTE PTR es:[rdi],dx
  45df85:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  45df8a:	outs   dx,BYTE PTR ds:[rsi]
  45df8b:	add    BYTE PTR [rdi+0x65],ah
  45df8e:	je     0x45dfef
  45df90:	push   rdx
  45df91:	outs   dx,DWORD PTR ds:[rsi]
  45df92:	ja     0x45dfe7
  45df94:	je     0x45e00f
  45df96:	ins    BYTE PTR es:[rdi],dx
  45df97:	gs jae 0x45df9a
  45df9a:	push   rdx
  45df9b:	outs   dx,DWORD PTR ds:[rsi]
  45df9c:	ja     0x45dff1
  45df9e:	je     0x45e019
  45dfa0:	ins    BYTE PTR es:[rdi],dx
  45dfa1:	add    BYTE PTR gs:[rcx+riz*2+0x62],dl
  45dfa6:	ins    BYTE PTR es:[rdi],dx
  45dfa7:	gs rex.WR (bad) 
  45dfaa:	jns    0x45e01b
  45dfac:	jne    0x45e022
  45dfae:	push   rbx
  45dfaf:	je     0x45e02a
  45dfb1:	ins    BYTE PTR es:[rdi],dx
  45dfb2:	add    BYTE PTR gs:[rbx+0x69],dl
  45dfb6:	jp     0x45e01d
  45dfb8:	push   rsp
  45dfb9:	jns    0x45e02b
  45dfbb:	add    BYTE PTR gs:[rbx+0x65],dh
  45dfbf:	je     0x45e020
  45dfc1:	push   rbx
  45dfc2:	imul   edi,DWORD PTR [rdx+0x65],0x65707954
  45dfc9:	add    BYTE PTR [rbx+0x65],dh
  45dfcc:	je     0x45e02d
  45dfce:	push   rdx
  45dfcf:	outs   dx,DWORD PTR ds:[rsi]
  45dfd0:	ja     0x45e015
  45dfd2:	outs   dx,DWORD PTR ds:[rsi]
  45dfd3:	jne    0x45e043
  45dfd5:	je     0x45dfd7
  45dfd7:	addr32 gs je 0x45e03a
  45dfdb:	rex.WB ins DWORD PTR es:[rdi],dx
  45dfdd:	(bad)  
  45dfde:	add    BYTE PTR gs:[eax+0x69],dl
  45dfe3:	movsxd esi,DWORD PTR [rbp+rsi*2+0x72]
  45dfe7:	rex.X outs dx,DWORD PTR gs:[rsi]
  45dfea:	js     0x45e03f
  45dfec:	imul   edi,DWORD PTR [rdx+0x65],0x65646f4d
  45dff3:	add    BYTE PTR [rbx+0x65],dh
  45dff6:	je     0x45e057
  45dff8:	push   rbx
  45dff9:	imul   edi,DWORD PTR [rdx+0x65],0x65646f4d
  45e000:	add    BYTE PTR [rbx+0x65],dl
  45e003:	je     0x45e057
  45e005:	outs   dx,DWORD PTR ds:[rsi]
  45e006:	ja     0x45e05b
  45e008:	jo     0x45e06b
  45e00a:	outs   dx,BYTE PTR ds:[rsi]
  45e00b:	add    BYTE PTR [rcx+rbp*2+0x6e],cl
  45e00f:	imul   ecx,DWORD PTR [rcx+riz*2+0x62],0x65
  45e014:	ins    BYTE PTR es:[rdi],dx
  45e015:	add    BYTE PTR [rcx+rbp*2+0x6e],cl
  45e019:	imul   ecx,DWORD PTR [rcx+riz*2+0x62],0x65
  45e01e:	ins    BYTE PTR es:[rdi],dx
  45e01f:	imul   r13,QWORD PTR [rsi+0x6b],0x63696c43
  45e027:	imul   esp,DWORD PTR [rbp+0x64],0x45
  45e02b:	jbe    0x45e092
  45e02d:	outs   dx,BYTE PTR ds:[rsi]
  45e02e:	je     0x45e078
  45e030:	(bad)  
  45e031:	outs   dx,BYTE PTR ds:[rsi]
  45e032:	fs ins BYTE PTR es:[rdi],dx
  45e034:	gs jb  0x45e037
  45e037:	(bad)  
  45e038:	fs fs pop rdi
  45e03b:	imul   r13,QWORD PTR [rsi+0x6b],0x63696c43
  45e043:	imul   esp,DWORD PTR [rbp+0x64],0x0
  45e047:	jae    0x45e0ae
  45e049:	je     0x45e0aa
  45e04b:	rex.B jne 0x45e0c2
  45e04e:	outs   dx,DWORD PTR ds:[rsi]
  45e04f:	rex.RB ins BYTE PTR es:[rdi],dx
  45e051:	ins    BYTE PTR es:[rdi],dx
  45e052:	imul   esi,DWORD PTR [rax+0x73],0x46007369
  45e059:	outs   dx,DWORD PTR ds:[rsi]
  45e05a:	outs   dx,BYTE PTR ds:[rsi]
  45e05b:	je     0x45e0a3
  45e05d:	(bad)  
  45e05e:	ins    DWORD PTR es:[rdi],dx
  45e05f:	imul   ebp,DWORD PTR [rcx+rdi*2+0x0],0x5f746567
  45e067:	rex.RX outs dx,DWORD PTR ds:[rsi]
  45e069:	outs   dx,BYTE PTR ds:[rsi]
  45e06a:	je     0x45e0b2
  45e06c:	(bad)  
  45e06d:	ins    DWORD PTR es:[rdi],dx
  45e06e:	imul   ebp,DWORD PTR [rcx+rdi*2+0x0],0x6f726353
  45e076:	ins    BYTE PTR es:[rdi],dx
  45e077:	ins    BYTE PTR es:[rdi],dx
  45e078:	(bad)  
  45e079:	(bad)  
  45e07a:	ins    BYTE PTR es:[rdi],dx
  45e07b:	rex.XB outs dx,DWORD PTR gs:[rsi]
  45e07e:	outs   dx,BYTE PTR ds:[rsi]
  45e07f:	je     0x45e0f3
  45e081:	outs   dx,DWORD PTR ds:[rsi]
  45e082:	ins    BYTE PTR es:[rdi],dx
  45e083:	add    BYTE PTR [rbx+0x65],dh
  45e086:	je     0x45e0e7
  45e088:	rex.B jne 0x45e0ff
  45e08b:	outs   dx,DWORD PTR ds:[rsi]
  45e08c:	push   rbx
  45e08d:	movsxd esi,DWORD PTR [rdx+0x6f]
  45e090:	ins    BYTE PTR es:[rdi],dx
  45e091:	ins    BYTE PTR es:[rdi],dx
  45e092:	add    BYTE PTR [rbx+0x65],dh
  45e095:	je     0x45e0f6
  45e097:	rex.XB outs dx,DWORD PTR ds:[rsi]
  45e099:	ins    BYTE PTR es:[rdi],dx
  45e09a:	jne    0x45e109
  45e09c:	outs   dx,BYTE PTR ds:[rsi]
  45e09d:	rex.XB outs dx,DWORD PTR ds:[rsi]
  45e09f:	jne    0x45e10f
  45e0a1:	je     0x45e0a3
  45e0a3:	push   rsp
  45e0a4:	(bad)  
  45e0a5:	(bad)  
  45e0a6:	ins    BYTE PTR es:[rdi],dx
  45e0a7:	gs rex.WR (bad) 
  45e0aa:	jns    0x45e11b
  45e0ac:	jne    0x45e122
  45e0ae:	rex.XB outs dx,DWORD PTR ds:[rsi]
  45e0b0:	ins    BYTE PTR es:[rdi],dx
  45e0b1:	jne    0x45e120
  45e0b3:	outs   dx,BYTE PTR ds:[rsi]
  45e0b4:	push   rbx
  45e0b5:	je     0x45e130
  45e0b7:	ins    BYTE PTR es:[rdi],dx
  45e0b8:	rex.XB outs dx,DWORD PTR gs:[rsi]
  45e0bb:	ins    BYTE PTR es:[rdi],dx
  45e0bc:	ins    BYTE PTR es:[rdi],dx
  45e0bd:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  45e0c2:	outs   dx,BYTE PTR ds:[rsi]
  45e0c3:	add    BYTE PTR [rdi+0x65],ah
  45e0c6:	je     0x45e127
  45e0c8:	rex.XB outs dx,DWORD PTR ds:[rsi]
  45e0ca:	ins    BYTE PTR es:[rdi],dx
  45e0cb:	jne    0x45e13a
  45e0cd:	outs   dx,BYTE PTR ds:[rsi]
  45e0ce:	push   rbx
  45e0cf:	je     0x45e14a
  45e0d1:	ins    BYTE PTR es:[rdi],dx
  45e0d2:	gs jae 0x45e0d5
  45e0d5:	rex.XB outs dx,DWORD PTR ds:[rsi]
  45e0d7:	ins    BYTE PTR es:[rdi],dx
  45e0d8:	jne    0x45e147
  45e0da:	outs   dx,BYTE PTR ds:[rsi]
  45e0db:	push   rbx
  45e0dc:	je     0x45e157
  45e0de:	ins    BYTE PTR es:[rdi],dx
  45e0df:	add    BYTE PTR gs:[rax+0x6f],dl
  45e0e3:	imul   ebp,DWORD PTR [rsi+0x74],0x74657300
  45e0ea:	pop    rdi
  45e0eb:	rex.WR outs dx,DWORD PTR ds:[rsi]
  45e0ed:	movsxd esp,DWORD PTR [rcx+0x74]
  45e0f0:	imul   ebp,DWORD PTR [rdi+0x6e],0x74657300
  45e0f7:	pop    rdi
  45e0f8:	push   rsp
  45e0f9:	(bad)  
  45e0fa:	(bad)  
  45e0fb:	rex.WB outs dx,BYTE PTR ds:[rsi]
  45e0fd:	fs gs js 0x45e101
  45e101:	rex.WRB outs dx,DWORD PTR ds:[rsi]
  45e103:	jbe    0x45e16a
  45e105:	push   rsp
  45e106:	outs   dx,DWORD PTR ds:[rsi]
  45e107:	rex.RB ins BYTE PTR es:[rdi],dx
  45e109:	gs ins DWORD PTR es:[rdi],dx
  45e10b:	outs   dx,BYTE PTR gs:[rsi]
  45e10d:	je     0x45e10f
  45e10f:	addr32 gs je 0x45e172
  45e113:	rex.WRX (bad) 
  45e115:	ins    DWORD PTR es:[rdi],dx
  45e116:	gs jae 0x45e189
  45e119:	(bad)  
  45e11a:	movsxd esp,DWORD PTR [rbp+0x0]
  45e11d:	pop    rax
  45e11e:	ins    DWORD PTR es:[rdi],dx
  45e11f:	ins    BYTE PTR es:[rdi],dx
  45e120:	push   rsp
  45e121:	gs js  0x45e198
  45e124:	push   rdx
  45e125:	gs (bad) 
  45e127:	fs gs jb 0x45e12b
  45e12b:	rex.XB ins BYTE PTR es:[rdi],dx
  45e12d:	outs   dx,DWORD PTR ds:[rsi]
  45e12e:	jae    0x45e195
  45e130:	add    BYTE PTR [rax+0x6d],bl
  45e133:	ins    BYTE PTR es:[rdi],dx
  45e134:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  45e136:	fs gs push rsp
  45e139:	jns    0x45e1ab
  45e13b:	add    BYTE PTR gs:[rdi+0x65],ah
  45e13f:	je     0x45e1a0
  45e141:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  45e143:	fs gs push rsp
  45e146:	jns    0x45e1b8
  45e148:	add    BYTE PTR gs:[rdi+0x65],ah
  45e14c:	je     0x45e1ad
  45e14e:	rex.WRX (bad) 
  45e150:	ins    DWORD PTR es:[rdi],dx
  45e151:	add    BYTE PTR gs:[rdi+0x65],al
  45e155:	je     0x45e198
  45e157:	je     0x45e1cd
  45e159:	jb     0x45e1c4
  45e15b:	(bad)  
  45e15c:	jne    0x45e1d2
  45e15e:	add    BYTE PTR gs:[rdx+rsi*2+0x69],dl
  45e163:	ins    DWORD PTR es:[rdi],dx
  45e164:	add    BYTE PTR [rdx+0x65],dl
  45e167:	(bad)  
  45e168:	add    BYTE PTR fs:[rcx+0x63],al
  45e16c:	je     0x45e1d7
  45e16e:	jbe    0x45e1d1
  45e170:	je     0x45e1e1
  45e172:	jb     0x45e174
  45e174:	rex.XB jb 0x45e1dc
  45e177:	(bad)  
  45e178:	je     0x45e1df
  45e17a:	rex.WB outs dx,BYTE PTR ds:[rsi]
  45e17c:	jae    0x45e1f2
  45e17e:	(bad)  
  45e17f:	outs   dx,BYTE PTR ds:[rsi]
  45e180:	movsxd esp,DWORD PTR [rbp+0x0]
  45e183:	push   rax
  45e184:	jb     0x45e1f5
  45e186:	jo     0x45e1ed
  45e188:	jb     0x45e1fe
  45e18a:	jns    0x45e1d5
  45e18c:	outs   dx,BYTE PTR ds:[rsi]
  45e18d:	outs   dx,WORD PTR ds:[rsi]
  45e18f:	add    BYTE PTR [rdi+0x65],al
  45e192:	je     0x45e1e4
  45e194:	jb     0x45e205
  45e196:	jo     0x45e1fd
  45e198:	jb     0x45e20e
  45e19a:	jns    0x45e19c
  45e19c:	addr32 gs je 0x45e1ff
  45e1a0:	push   rax
  45e1a1:	jb     0x45e212
  45e1a3:	jo     0x45e20a
  45e1a5:	jb     0x45e21b
  45e1a7:	jns    0x45e1fd
  45e1a9:	jns    0x45e21b
  45e1ab:	add    BYTE PTR gs:[rcx+0x58],cl
  45e1af:	ins    DWORD PTR es:[rdi],dx
  45e1b0:	ins    BYTE PTR es:[rdi],dx
  45e1b1:	rex.WRX (bad) 
  45e1b3:	ins    DWORD PTR es:[rdi],dx
  45e1b4:	gs jae 0x45e227
  45e1b7:	(bad)  
  45e1b8:	movsxd esp,DWORD PTR [rbp+0x52]
  45e1bb:	gs jae 0x45e22d
  45e1be:	ins    BYTE PTR es:[rdi],dx
  45e1bf:	jbe    0x45e226
  45e1c1:	jb     0x45e1c3
  45e1c3:	push   rdx
  45e1c4:	gs (bad) 
  45e1c6:	fs rex.RB ins BYTE PTR es:[rdi],dx
  45e1c9:	gs ins DWORD PTR es:[rdi],dx
  45e1cb:	outs   dx,BYTE PTR gs:[rsi]
  45e1cd:	je     0x45e212
  45e1cf:	outs   dx,DWORD PTR ds:[rsi]
  45e1d0:	outs   dx,BYTE PTR ds:[rsi]
  45e1d1:	je     0x45e238
  45e1d3:	outs   dx,BYTE PTR ds:[rsi]
  45e1d4:	je     0x45e217
  45e1d6:	jae    0x45e1d8
  45e1d8:	push   rbx
  45e1d9:	gs je  0x45e232
  45e1dc:	(bad)  
  45e1dd:	ins    BYTE PTR es:[rdi],dx
  45e1de:	jne    0x45e245
  45e1e0:	add    BYTE PTR [rdi+0x65],ah
  45e1e3:	je     0x45e244
  45e1e5:	rex.XB jne 0x45e25a
  45e1e8:	jb     0x45e24f
  45e1ea:	outs   dx,BYTE PTR ds:[rsi]
  45e1eb:	je     0x45e242
  45e1ed:	rex.WB
  45e1ee:	rex.XB jne 0x45e25d
  45e1f1:	je     0x45e268
  45e1f3:	jb     0x45e25a
  45e1f5:	add    BYTE PTR [rdx+0x65],dl
  45e1f8:	(bad)  
  45e1f9:	fs rex.RB ins BYTE PTR es:[rdi],dx
  45e1fc:	gs ins DWORD PTR es:[rdi],dx
  45e1fe:	outs   dx,BYTE PTR gs:[rsi]
  45e200:	je     0x45e245
  45e202:	outs   dx,DWORD PTR ds:[rsi]
  45e203:	outs   dx,BYTE PTR ds:[rsi]
  45e204:	je     0x45e26b
  45e206:	outs   dx,BYTE PTR ds:[rsi]
  45e207:	je     0x45e24a
  45e209:	jae    0x45e25e
  45e20b:	je     0x45e27f
  45e20d:	imul   ebp,DWORD PTR [rsi+0x67],0x6d616e00
  45e214:	add    BYTE PTR gs:[rdi+0x65],al
  45e218:	je     0x45e267
  45e21a:	(bad)  
  45e21b:	outs   dx,BYTE PTR ds:[rsi]
  45e21c:	imul   esp,DWORD PTR [rsi+0x65],0x65527473
  45e223:	jae    0x45e294
  45e225:	jne    0x45e299
  45e227:	movsxd esp,DWORD PTR [rbp+0x53]
  45e22a:	je     0x45e29e
  45e22c:	gs (bad) 
  45e22e:	ins    DWORD PTR es:[rdi],dx
  45e22f:	add    BYTE PTR [rbp+0x69],cl
  45e232:	movsxd esi,DWORD PTR [rdx+0x6f]
  45e235:	jae    0x45e2a6
  45e237:	data16 je 0x45e268
  45e23a:	push   rbx
  45e23b:	jno    0x45e2a9
  45e23d:	push   rbx
  45e23e:	gs jb  0x45e2b7
  45e241:	gs jb  0x45e272
  45e244:	rex.XB outs dx,DWORD PTR ds:[rsi]
  45e246:	outs   dx,BYTE PTR ds:[rsi]
  45e247:	imul   sp,WORD PTR [rdi+0x75],0x6172
  45e24d:	je     0x45e2b8
  45e24f:	outs   dx,DWORD PTR ds:[rsi]
  45e250:	outs   dx,BYTE PTR ds:[rsi]
  45e251:	cs rex.WR (bad) 
  45e254:	outs   dx,BYTE PTR ds:[rsi]
  45e255:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x65676150
  45e25d:	cs push rbx
  45e25f:	push   rdx
  45e260:	cs jb  0x45e2c8
  45e263:	jae    0x45e2d4
  45e265:	jne    0x45e2d9
  45e267:	movsxd esp,DWORD PTR [rbp+0x73]
  45e26a:	add    BYTE PTR [rbp+0x69],cl
  45e26d:	movsxd esi,DWORD PTR [rdx+0x6f]
  45e270:	jae    0x45e2e1
  45e272:	data16 je 0x45e2a3
  45e275:	push   rbx
  45e276:	jno    0x45e2e4
  45e278:	push   rbx
  45e279:	gs jb  0x45e2f2
  45e27c:	gs jb  0x45e2ad
  45e27f:	rex.XB outs dx,DWORD PTR ds:[rsi]
  45e281:	outs   dx,BYTE PTR ds:[rsi]
  45e282:	imul   sp,WORD PTR [rdi+0x75],0x6172
  45e288:	je     0x45e2f3
  45e28a:	outs   dx,DWORD PTR ds:[rsi]
  45e28b:	outs   dx,BYTE PTR ds:[rsi]
  45e28c:	cs rex.WR (bad) 
  45e28f:	outs   dx,BYTE PTR ds:[rsi]
  45e290:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x65676150
  45e298:	cs rex.WR (bad) 
  45e29b:	outs   dx,BYTE PTR ds:[rsi]
  45e29c:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x65676150
  45e2a4:	rex.XB outs dx,DWORD PTR ds:[rsi]
  45e2a6:	outs   dx,BYTE PTR ds:[rsi]
  45e2a7:	je     0x45e31b
  45e2a9:	outs   dx,DWORD PTR ds:[rsi]
  45e2aa:	ins    BYTE PTR es:[rdi],dx
  45e2ab:	cs jb  0x45e313
  45e2ae:	jae    0x45e31f
  45e2b0:	jne    0x45e324
  45e2b2:	movsxd esp,DWORD PTR [rbp+0x73]
  45e2b5:	add    BYTE PTR [rbp+0x69],cl
  45e2b8:	movsxd esi,DWORD PTR [rdx+0x6f]
  45e2bb:	jae    0x45e32c
  45e2bd:	data16 je 0x45e2ee
  45e2c0:	push   rbx
  45e2c1:	jno    0x45e32f
  45e2c3:	push   rbx
  45e2c4:	gs jb  0x45e33d
  45e2c7:	gs jb  0x45e2f8
  45e2ca:	rex.XB outs dx,DWORD PTR ds:[rsi]
  45e2cc:	outs   dx,BYTE PTR ds:[rsi]
  45e2cd:	imul   sp,WORD PTR [rdi+0x75],0x6172
  45e2d3:	je     0x45e33e
  45e2d5:	outs   dx,DWORD PTR ds:[rsi]
  45e2d6:	outs   dx,BYTE PTR ds:[rsi]
  45e2d7:	cs rex.WR (bad) 
  45e2da:	outs   dx,BYTE PTR ds:[rsi]
  45e2db:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x65676150
  45e2e3:	cs rex.WR (bad) 
  45e2e6:	outs   dx,BYTE PTR ds:[rsi]
  45e2e7:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x65676150
  45e2ef:	rex.RX outs dx,DWORD PTR ds:[rsi]
  45e2f1:	jb     0x45e360
  45e2f3:	cs jb  0x45e35b
  45e2f6:	jae    0x45e367
  45e2f8:	jne    0x45e36c
  45e2fa:	movsxd esp,DWORD PTR [rbp+0x73]
  45e2fd:	add    BYTE PTR [rbp+0x69],cl
  45e300:	movsxd esi,DWORD PTR [rdx+0x6f]
  45e303:	jae    0x45e374
  45e305:	data16 je 0x45e336
  45e308:	push   rbx
  45e309:	jno    0x45e377
  45e30b:	push   rbx
  45e30c:	gs jb  0x45e385
  45e30f:	gs jb  0x45e340
  45e312:	rex.XB outs dx,DWORD PTR ds:[rsi]
  45e314:	outs   dx,BYTE PTR ds:[rsi]
  45e315:	imul   sp,WORD PTR [rdi+0x75],0x6172
  45e31b:	je     0x45e386
  45e31d:	outs   dx,DWORD PTR ds:[rsi]
  45e31e:	outs   dx,BYTE PTR ds:[rsi]
  45e31f:	cs rex.WR (bad) 
  45e322:	outs   dx,BYTE PTR ds:[rsi]
  45e323:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x65676150
  45e32b:	cs rex.WRXB jo 0x45e3a3
  45e32f:	imul   ebp,DWORD PTR [rdi+0x6e],0x67615073
  45e336:	gs cs jb 0x45e39f
  45e33a:	jae    0x45e3ab
  45e33c:	jne    0x45e3b0
  45e33e:	movsxd esp,DWORD PTR [rbp+0x73]
  45e341:	add    BYTE PTR [rbp+0x69],cl
  45e344:	movsxd esi,DWORD PTR [rdx+0x6f]
  45e347:	jae    0x45e3b8
  45e349:	data16 je 0x45e37a
  45e34c:	push   rbx
  45e34d:	jno    0x45e3bb
  45e34f:	push   rbx
  45e350:	gs jb  0x45e3c9
  45e353:	gs jb  0x45e384
  45e356:	rex.XB outs dx,DWORD PTR ds:[rsi]
  45e358:	outs   dx,BYTE PTR ds:[rsi]
  45e359:	imul   sp,WORD PTR [rdi+0x75],0x6172
  45e35f:	je     0x45e3ca
  45e361:	outs   dx,DWORD PTR ds:[rsi]
  45e362:	outs   dx,BYTE PTR ds:[rsi]
  45e363:	cs rex.WR (bad) 
  45e366:	outs   dx,BYTE PTR ds:[rsi]
  45e367:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x65676150
  45e36f:	cs push rax
  45e371:	(bad)  
  45e372:	addr32 gs cs jb 0x45e3dc
  45e377:	jae    0x45e3e8
  45e379:	jne    0x45e3ed
  45e37b:	movsxd esp,DWORD PTR [rbp+0x73]
  45e37e:	add    BYTE PTR [rbp+0x69],cl
  45e381:	movsxd esi,DWORD PTR [rdx+0x6f]
  45e384:	jae    0x45e3f5
  45e386:	data16 je 0x45e3b7
  45e389:	push   rbx
  45e38a:	jno    0x45e3f8
  45e38c:	push   rbx
  45e38d:	gs jb  0x45e406
  45e390:	gs jb  0x45e3c1
  45e393:	rex.XB outs dx,DWORD PTR ds:[rsi]
  45e395:	outs   dx,BYTE PTR ds:[rsi]
  45e396:	imul   sp,WORD PTR [rdi+0x75],0x6172
  45e39c:	je     0x45e407
  45e39e:	outs   dx,DWORD PTR ds:[rsi]
  45e39f:	outs   dx,BYTE PTR ds:[rsi]
  45e3a0:	cs rex.WR (bad) 
  45e3a3:	outs   dx,BYTE PTR ds:[rsi]
  45e3a4:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x65676150
  45e3ac:	cs push rax
  45e3ae:	(bad)  
  45e3af:	addr32 gs push rbx
  45e3b2:	ja     0x45e41d
  45e3b4:	je     0x45e419
  45e3b6:	push   0x722e7265
  45e3bb:	gs jae 0x45e42d
  45e3be:	jne    0x45e432
  45e3c0:	movsxd esp,DWORD PTR [rbp+0x73]
  45e3c3:	add    BYTE PTR [rbp+0x69],cl
  45e3c6:	movsxd esi,DWORD PTR [rdx+0x6f]
  45e3c9:	jae    0x45e43a
  45e3cb:	data16 je 0x45e3fc
  45e3ce:	push   rbx
  45e3cf:	jno    0x45e43d
  45e3d1:	push   rbx
  45e3d2:	gs jb  0x45e44b
  45e3d5:	gs jb  0x45e406
  45e3d8:	rex.XB outs dx,DWORD PTR ds:[rsi]
  45e3da:	outs   dx,BYTE PTR ds:[rsi]
  45e3db:	imul   sp,WORD PTR [rdi+0x75],0x6172
  45e3e1:	je     0x45e44c
  45e3e3:	outs   dx,DWORD PTR ds:[rsi]
  45e3e4:	outs   dx,BYTE PTR ds:[rsi]
  45e3e5:	cs rex.WR (bad) 
  45e3e8:	outs   dx,BYTE PTR ds:[rsi]
  45e3e9:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x65676150
  45e3f1:	cs push rdx
  45e3f3:	gs jae 0x45e465
  45e3f6:	jne    0x45e46a
  45e3f8:	movsxd esp,DWORD PTR [rbp+0x73]
  45e3fb:	cs jb  0x45e463
  45e3fe:	jae    0x45e46f
  45e400:	jne    0x45e474
  45e402:	movsxd esp,DWORD PTR [rbp+0x73]
  45e405:	add    BYTE PTR [rbp+0x69],cl
  45e408:	movsxd esi,DWORD PTR [rdx+0x6f]
  45e40b:	jae    0x45e47c
  45e40d:	data16 je 0x45e43e
  45e410:	push   rbx
  45e411:	jno    0x45e47f
  45e413:	push   rbx
  45e414:	gs jb  0x45e48d
  45e417:	gs jb  0x45e448
  45e41a:	rex.XB outs dx,DWORD PTR ds:[rsi]
  45e41c:	outs   dx,BYTE PTR ds:[rsi]
  45e41d:	imul   sp,WORD PTR [rdi+0x75],0x6172
  45e423:	je     0x45e48e
  45e425:	outs   dx,DWORD PTR ds:[rsi]
  45e426:	outs   dx,BYTE PTR ds:[rsi]
  45e427:	cs rex.WR (bad) 
  45e42a:	outs   dx,BYTE PTR ds:[rsi]
  45e42b:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x65676150
  45e433:	cs push rbx
  45e435:	je     0x45e498
  45e437:	outs   dx,BYTE PTR ds:[rsi]
  45e438:	fs (bad) 
  45e43a:	jb     0x45e4a0
  45e43c:	push   rax
  45e43d:	(bad)  
  45e43e:	addr32 gs cs jb 0x45e4a8
  45e443:	jae    0x45e4b4
  45e445:	jne    0x45e4b9
  45e447:	movsxd esp,DWORD PTR [rbp+0x73]
  45e44a:	add    BYTE PTR [rbp+0x69],cl
  45e44d:	movsxd esi,DWORD PTR [rdx+0x6f]
  45e450:	jae    0x45e4c1
  45e452:	data16 je 0x45e483
  45e455:	push   rbx
  45e456:	jno    0x45e4c4
  45e458:	push   rbx
  45e459:	gs jb  0x45e4d2
  45e45c:	gs jb  0x45e48d
  45e45f:	rex.XB outs dx,DWORD PTR ds:[rsi]
  45e461:	outs   dx,BYTE PTR ds:[rsi]
  45e462:	imul   sp,WORD PTR [rdi+0x75],0x6172
  45e468:	je     0x45e4d3
  45e46a:	outs   dx,DWORD PTR ds:[rsi]
  45e46b:	outs   dx,BYTE PTR ds:[rsi]
  45e46c:	cs rex.WR (bad) 
  45e46f:	outs   dx,BYTE PTR ds:[rsi]
  45e470:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x65676150
  45e478:	cs push rax
  45e47a:	(bad)  
  45e47b:	addr32 gs jae 0x45e4ad
  45e47f:	js     0x45e4ee
  45e481:	ins    BYTE PTR es:[rdi],dx
  45e482:	add    BYTE PTR [rax],al
  45e484:	add    BYTE PTR [rip+0x73006d],ch        # 0xb8e4f7
  45e48a:	sub    eax,0x65006800
  45e48f:	add    BYTE PTR [rax+rax*1+0x70],ch
  45e493:	add    BYTE PTR [rdx],bh
  45e495:	add    BYTE PTR [rdi],ch
  45e497:	add    BYTE PTR [rdi],ch
  45e499:	add    BYTE PTR [rbp+0x0],cl
  45e49c:	push   rbx
  45e49d:	add    BYTE PTR [rsi],ch
  45e49f:	add    BYTE PTR [rbx+0x0],dl
  45e4a2:	push   rcx
  45e4a3:	add    BYTE PTR [rax+rax*1+0x43],cl
  45e4a7:	add    BYTE PTR [rbx+0x0],al
  45e4aa:	add    BYTE PTR cs:[rsi+0x0],dh
  45e4ae:	xor    DWORD PTR [rax],eax
  45e4b0:	xor    BYTE PTR [rax],al
  45e4b2:	add    DWORD PTR [rbx],ecx
  45e4b4:	push   rsp
  45e4b5:	add    BYTE PTR [rcx+0x0],ch
  45e4b8:	je     0x45e4ba
  45e4ba:	ins    BYTE PTR es:[rdi],dx
  45e4bb:	add    BYTE PTR [rbp+0x0],ah
  45e4be:	add    BYTE PTR [rdi],cl
  45e4c0:	rex.WRXB add BYTE PTR [r8+0x0],r14b
  45e4c4:	je     0x45e4c6
  45e4c6:	imul   eax,DWORD PTR [rax],0x6e006f
  45e4cc:	jae    0x45e4ce
  45e4ce:	add    BYTE PTR [rip+0x720042],bl        # 0xb7e516
  45e4d4:	outs   dx,DWORD PTR ds:[rsi]
  45e4d5:	add    BYTE PTR [rdi+0x0],dh
  45e4d8:	jae    0x45e4da
  45e4da:	add    BYTE PTR gs:[rsi+0x0],al
  45e4de:	outs   dx,DWORD PTR ds:[rsi]
  45e4df:	add    BYTE PTR [rdx+0x0],dh
  45e4e2:	rex.WRB add BYTE PTR [r13+0x0],r12b
  45e4e6:	add    BYTE PTR fs:[rcx+0x0],ch
  45e4ea:	(bad)  
  45e4eb:	add    BYTE PTR [rax],al
  45e4ed:	(bad)  
  45e4ee:	rex.WRXB add BYTE PTR [r8+0x0],r14b
  45e4f2:	je     0x45e4f4
  45e4f4:	imul   eax,DWORD PTR [rax],0x6e006f
  45e4fa:	jae    0x45e4fc
  45e4fc:	push   rax
  45e4fd:	add    BYTE PTR [rcx+0x0],ah
  45e500:	add    BYTE PTR [ebp+0x0],ah
  45e504:	rex.WB add BYTE PTR [r14+0x0],bpl
  45e508:	jae    0x45e50a
  45e50a:	je     0x45e50c
  45e50c:	jb     0x45e50e
  45e50e:	jne    0x45e510
  45e510:	movsxd eax,DWORD PTR [rax]
  45e512:	je     0x45e514
  45e514:	imul   eax,DWORD PTR [rax],0x6e006f
  45e51a:	jae    0x45e51c
  45e51c:	add    BYTE PTR [rbx],dl
  45e51e:	rex.WRX add BYTE PTR [rdi+0x0],r13b
  45e522:	rex.XB add BYTE PTR [r8+0x0],sil
  45e526:	jne    0x45e528
  45e528:	push   rsp
  45e529:	add    BYTE PTR [rcx+0x0],bh
  45e52c:	jo     0x45e52e
  45e52e:	add    BYTE PTR gs:[rax],al
  45e531:	(bad)  
  45e532:	rex.WRX add BYTE PTR [rdi+0x0],r13b
  45e536:	push   rax
  45e537:	add    BYTE PTR [rdx+0x0],dh
  45e53a:	outs   dx,DWORD PTR ds:[rsi]
  45e53b:	add    BYTE PTR [rbx+0x0],ah
  45e53e:	add    BYTE PTR gs:[rbx+0x0],dh
  45e542:	jae    0x45e544
  45e544:	outs   dx,DWORD PTR ds:[rsi]
  45e545:	add    BYTE PTR [rdx+0x0],dh
  45e548:	add    BYTE PTR [rbx],ch
  45e54a:	push   rax
  45e54b:	add    BYTE PTR [rdx+0x0],dh
  45e54e:	outs   dx,DWORD PTR ds:[rsi]
  45e54f:	add    BYTE PTR [rbx+0x0],ah
  45e552:	add    BYTE PTR gs:[rbx+0x0],dh
  45e556:	jae    0x45e558
  45e558:	outs   dx,DWORD PTR ds:[rsi]
  45e559:	add    BYTE PTR [rdx+0x0],dh
  45e55c:	rex.WRX add BYTE PTR [rdi+0x0],r13b
  45e560:	je     0x45e562
  45e562:	push   rbx
  45e563:	add    BYTE PTR [rbp+0x0],dh
  45e566:	jo     0x45e568
  45e568:	jo     0x45e56a
  45e56a:	outs   dx,DWORD PTR ds:[rsi]
  45e56b:	add    BYTE PTR [rdx+0x0],dh
  45e56e:	je     0x45e570
  45e570:	add    BYTE PTR gs:[rax+rax*1+0x0],ah
  45e575:	and    eax,0x6e0049
  45e57a:	jbe    0x45e57c
  45e57c:	(bad)  
  45e57d:	add    BYTE PTR [rax+rax*1+0x69],ch
  45e581:	add    BYTE PTR [rax+rax*1+0x46],ah
  45e585:	add    BYTE PTR [rdi+0x0],ch
  45e588:	ins    BYTE PTR es:[rdi],dx
  45e589:	add    BYTE PTR [rax+rax*1+0x65],ah
  45e58d:	add    BYTE PTR [rdx+0x0],dh
  45e590:	push   rsp
  45e591:	add    BYTE PTR [rcx+0x0],ch
  45e594:	je     0x45e596
  45e596:	ins    BYTE PTR es:[rdi],dx
  45e597:	add    BYTE PTR [rbp+0x0],ah
  45e59a:	add    BYTE PTR [rcx],ah
  45e59c:	rex.WB add BYTE PTR [r14+0x0],bpl
  45e5a0:	jbe    0x45e5a2
  45e5a2:	(bad)  
  45e5a3:	add    BYTE PTR [rax+rax*1+0x69],ch
  45e5a7:	add    BYTE PTR [rax+rax*1+0x45],ah
  45e5ab:	add    BYTE PTR [rbp+0x0],ch
  45e5ae:	jo     0x45e5b0
  45e5b0:	je     0x45e5b2
  45e5b2:	jns    0x45e5b4
  45e5b4:	push   rax
  45e5b5:	add    BYTE PTR [rcx+0x0],ah
  45e5b8:	je     0x45e5ba
  45e5ba:	push   0x50190000
  45e5bf:	add    BYTE PTR [rax+rax*1+0x61],ch
  45e5c3:	add    BYTE PTR [rsi+0x0],ch
  45e5c6:	outs   dx,BYTE PTR ds:[rsi]
  45e5c7:	add    BYTE PTR [rcx+0x0],ch
  45e5ca:	outs   dx,BYTE PTR ds:[rsi]
  45e5cb:	add    BYTE PTR [rdi+0x0],ah
  45e5ce:	push   rax
  45e5cf:	add    BYTE PTR [rcx+0x0],ah
  45e5d2:	add    BYTE PTR [ebp+0x0],ah
  45e5d6:	add    BYTE PTR [rcx],bl
  45e5d8:	push   rdx
  45e5d9:	add    BYTE PTR [rbp+0x0],ah
  45e5dc:	jno    0x45e5de
  45e5de:	jne    0x45e5e0
  45e5e0:	imul   eax,DWORD PTR [rax],0x650072
  45e5e6:	ins    DWORD PTR es:[rdi],dx
  45e5e7:	add    BYTE PTR [rbp+0x0],ah
  45e5ea:	outs   dx,BYTE PTR ds:[rsi]
  45e5eb:	add    BYTE PTR [rax+rax*1+0x73],dh
  45e5ef:	add    BYTE PTR [rax],al
  45e5f1:	(bad)  
  45e5f2:	push   rdx
  45e5f3:	add    BYTE PTR [rbp+0x0],ah
  45e5f6:	jno    0x45e5f8
  45e5f8:	jne    0x45e5fa
  45e5fa:	imul   eax,DWORD PTR [rax],0x650072
  45e600:	ins    DWORD PTR es:[rdi],dx
  45e601:	add    BYTE PTR [rbp+0x0],ah
  45e604:	outs   dx,BYTE PTR ds:[rsi]
  45e605:	add    BYTE PTR [rax+rax*1+0x73],dh
  45e609:	add    BYTE PTR [rax+rax*1+0x65],al
  45e60d:	add    BYTE PTR [rbx+0x0],dh
  45e610:	movsxd eax,DWORD PTR [rax]
  45e612:	jb     0x45e614
  45e614:	imul   eax,DWORD PTR [rax],0x740070
  45e61a:	imul   eax,DWORD PTR [rax],0x6e006f
  45e620:	add    BYTE PTR [rbx],ch
  45e622:	push   rbx
  45e623:	add    BYTE PTR [rbp+0x0],ah
  45e626:	movsxd eax,DWORD PTR [rax]
  45e628:	jne    0x45e62a
  45e62a:	jb     0x45e62c
  45e62c:	imul   eax,DWORD PTR [rax],0x790074
  45e632:	add    BYTE PTR [rdi+0x0],r13b
  45e636:	movsxd eax,DWORD PTR [rax]
  45e638:	jne    0x45e63a
  45e63a:	ins    DWORD PTR es:[rdi],dx
  45e63b:	add    BYTE PTR [rbp+0x0],ah
  45e63e:	outs   dx,BYTE PTR ds:[rsi]
  45e63f:	add    BYTE PTR [rax+rax*1+0x61],dh
  45e643:	add    BYTE PTR [rax+rax*1+0x69],dh
  45e647:	add    BYTE PTR [rdi+0x0],ch
  45e64a:	outs   dx,BYTE PTR ds:[rsi]
  45e64b:	add    BYTE PTR [rax],al
  45e64d:	push   r11
  45e64f:	add    BYTE PTR [rbp+0x0],ah
  45e652:	movsxd eax,DWORD PTR [rax]
  45e654:	jne    0x45e656
  45e656:	jb     0x45e658
  45e658:	imul   eax,DWORD PTR [rax],0x790074
  45e65e:	add    BYTE PTR [rdi+0x0],r13b
  45e662:	movsxd eax,DWORD PTR [rax]
  45e664:	jne    0x45e666
  45e666:	ins    DWORD PTR es:[rdi],dx
  45e667:	add    BYTE PTR [rbp+0x0],ah
  45e66a:	outs   dx,BYTE PTR ds:[rsi]
  45e66b:	add    BYTE PTR [rax+rax*1+0x61],dh
  45e66f:	add    BYTE PTR [rax+rax*1+0x69],dh
  45e673:	add    BYTE PTR [rdi+0x0],ch
  45e676:	outs   dx,BYTE PTR ds:[rsi]
  45e677:	add    BYTE PTR [rax+rax*1+0x65],al
  45e67b:	add    BYTE PTR [rbx+0x0],dh
  45e67e:	movsxd eax,DWORD PTR [rax]
  45e680:	jb     0x45e682
  45e682:	imul   eax,DWORD PTR [rax],0x740070
  45e688:	imul   eax,DWORD PTR [rax],0x6e006f
  45e68e:	add    BYTE PTR [rip+0x6e004f],ah        # 0xb3e6e3
  45e694:	ins    BYTE PTR es:[rdi],dx
  45e695:	add    BYTE PTR [rcx+0x0],ch
  45e698:	outs   dx,BYTE PTR ds:[rsi]
  45e699:	add    BYTE PTR [rbp+0x0],ah
  45e69c:	push   rdx
  45e69d:	add    BYTE PTR [rbp+0x0],ah
  45e6a0:	ins    BYTE PTR es:[rdi],dx
  45e6a1:	add    BYTE PTR [rbp+0x0],ah
  45e6a4:	(bad)  
  45e6a5:	add    BYTE PTR [rbx+0x0],dh
  45e6a8:	add    BYTE PTR gs:[rsi+0x0],cl
  45e6ac:	outs   dx,DWORD PTR ds:[rsi]
  45e6ad:	add    BYTE PTR [rax+rax*1+0x65],dh
  45e6b1:	add    BYTE PTR [rbx+0x0],dh
  45e6b4:	add    BYTE PTR [rbx],bh
  45e6b6:	rex.WRXB add BYTE PTR [r14+0x0],r13b
  45e6ba:	ins    BYTE PTR es:[rdi],dx
  45e6bb:	add    BYTE PTR [rcx+0x0],ch
  45e6be:	outs   dx,BYTE PTR ds:[rsi]
  45e6bf:	add    BYTE PTR [rbp+0x0],ah
  45e6c2:	push   rdx
  45e6c3:	add    BYTE PTR [rbp+0x0],ah
  45e6c6:	ins    BYTE PTR es:[rdi],dx
  45e6c7:	add    BYTE PTR [rbp+0x0],ah
  45e6ca:	(bad)  
  45e6cb:	add    BYTE PTR [rbx+0x0],dh
  45e6ce:	add    BYTE PTR gs:[rsi+0x0],cl
  45e6d2:	outs   dx,DWORD PTR ds:[rsi]
  45e6d3:	add    BYTE PTR [rax+rax*1+0x65],dh
  45e6d7:	add    BYTE PTR [rbx+0x0],dh
  45e6da:	add    BYTE PTR [rbp+0x0],r12b
  45e6de:	jae    0x45e6e0
  45e6e0:	movsxd eax,DWORD PTR [rax]
  45e6e2:	jb     0x45e6e4
  45e6e4:	imul   eax,DWORD PTR [rax],0x740070
  45e6ea:	imul   eax,DWORD PTR [rax],0x6e006f
  45e6f0:	add    BYTE PTR [rip+0x700055],bl        # 0xb5e74b
  45e6f6:	add    BYTE PTR [edx+0x0],dh
  45e6fa:	(bad)  
  45e6fb:	add    BYTE PTR [rax+rax*1+0x65],ah
  45e6ff:	add    BYTE PTR [rcx+0x0],al
  45e702:	add    BYTE PTR fs:[rsi+0x0],dh
  45e706:	imul   eax,DWORD PTR [rax],0x6f0073
  45e70c:	jb     0x45e70e
  45e70e:	add    BYTE PTR [rbx],dh
  45e710:	push   rbp
  45e711:	add    BYTE PTR [rax+0x0],dh
  45e714:	add    BYTE PTR [edx+0x0],dh
  45e718:	(bad)  
  45e719:	add    BYTE PTR [rax+rax*1+0x65],ah
  45e71d:	add    BYTE PTR [rcx+0x0],al
  45e720:	add    BYTE PTR fs:[rsi+0x0],dh
  45e724:	imul   eax,DWORD PTR [rax],0x6f0073
  45e72a:	jb     0x45e72c
  45e72c:	add    BYTE PTR [rbp+0x0],r12b
  45e730:	jae    0x45e732
  45e732:	movsxd eax,DWORD PTR [rax]
  45e734:	jb     0x45e736
  45e736:	imul   eax,DWORD PTR [rax],0x740070
  45e73c:	imul   eax,DWORD PTR [rax],0x6e006f
  45e742:	add    BYTE PTR [rcx],dl
  45e744:	push   rbx
  45e745:	add    BYTE PTR [rbx+0x0],al
  45e748:	rex.XB add BYTE PTR [r11+0x0],al
  45e74c:	push   0x63006500
  45e751:	add    BYTE PTR [rbx+0x0],ch
  45e754:	add    BYTE PTR [rdi],ah
  45e756:	push   rbx
  45e757:	add    BYTE PTR [rbx+0x0],al
  45e75a:	rex.XB add BYTE PTR [r11+0x0],al
  45e75e:	push   0x63006500
  45e763:	add    BYTE PTR [rbx+0x0],ch
  45e766:	add    BYTE PTR [rbp+0x0],r12b
  45e76a:	jae    0x45e76c
  45e76c:	movsxd eax,DWORD PTR [rax]
  45e76e:	jb     0x45e770
  45e770:	imul   eax,DWORD PTR [rax],0x740070
  45e776:	imul   eax,DWORD PTR [rax],0x6e006f
  45e77c:	add    BYTE PTR [rcx],dl
  45e77e:	push   rbx
  45e77f:	add    BYTE PTR [rax+0x0],ch
  45e782:	outs   dx,DWORD PTR ds:[rsi]
  45e783:	add    BYTE PTR [rdi+0x0],dh
  45e786:	rex.W add BYTE PTR [rbp+0x0],spl
  45e78a:	ins    BYTE PTR es:[rdi],dx
  45e78b:	add    BYTE PTR [rax+0x0],dh
  45e78e:	add    BYTE PTR [rdi],ah
  45e790:	push   rbx
  45e791:	add    BYTE PTR [rax+0x0],ch
  45e794:	outs   dx,DWORD PTR ds:[rsi]
  45e795:	add    BYTE PTR [rdi+0x0],dh
  45e798:	rex.W add BYTE PTR [rbp+0x0],spl
  45e79c:	ins    BYTE PTR es:[rdi],dx
  45e79d:	add    BYTE PTR [rax+0x0],dh
  45e7a0:	add    BYTE PTR [rbp+0x0],r12b
  45e7a4:	jae    0x45e7a6
  45e7a6:	movsxd eax,DWORD PTR [rax]
  45e7a8:	jb     0x45e7aa
  45e7aa:	imul   eax,DWORD PTR [rax],0x740070
  45e7b0:	imul   eax,DWORD PTR [rax],0x6e006f
  45e7b6:	add    BYTE PTR [rcx],ch
  45e7b8:	push   rbp
  45e7b9:	add    BYTE PTR [rax+0x0],dh
  45e7bc:	add    BYTE PTR [edx+0x0],dh
  45e7c0:	(bad)  
  45e7c1:	add    BYTE PTR [rax+rax*1+0x65],ah
  45e7c5:	add    BYTE PTR [rax+rax*1+0x6f],al
  45e7c9:	add    BYTE PTR [rbx+0x0],ah
  45e7cc:	jne    0x45e7ce
  45e7ce:	ins    DWORD PTR es:[rdi],dx
  45e7cf:	add    BYTE PTR [rbp+0x0],ah
  45e7d2:	outs   dx,BYTE PTR ds:[rsi]
  45e7d3:	add    BYTE PTR [rax+rax*1+0x61],dh
  45e7d7:	add    BYTE PTR [rax+rax*1+0x69],dh
  45e7db:	add    BYTE PTR [rdi+0x0],ch
  45e7de:	outs   dx,BYTE PTR ds:[rsi]
  45e7df:	add    BYTE PTR [rax],al
  45e7e1:	(bad)  
  45e7e2:	push   rbp
  45e7e3:	add    BYTE PTR [rax+0x0],dh
  45e7e6:	add    BYTE PTR [edx+0x0],dh
  45e7ea:	(bad)  
  45e7eb:	add    BYTE PTR [rax+rax*1+0x65],ah
  45e7ef:	add    BYTE PTR [rax+rax*1+0x6f],al
  45e7f3:	add    BYTE PTR [rbx+0x0],ah
  45e7f6:	jne    0x45e7f8
  45e7f8:	ins    DWORD PTR es:[rdi],dx
  45e7f9:	add    BYTE PTR [rbp+0x0],ah
  45e7fc:	outs   dx,BYTE PTR ds:[rsi]
  45e7fd:	add    BYTE PTR [rax+rax*1+0x61],dh
  45e801:	add    BYTE PTR [rax+rax*1+0x69],dh
  45e805:	add    BYTE PTR [rdi+0x0],ch
  45e808:	outs   dx,BYTE PTR ds:[rsi]
  45e809:	add    BYTE PTR [rax+rax*1+0x65],al
  45e80d:	add    BYTE PTR [rbx+0x0],dh
  45e810:	movsxd eax,DWORD PTR [rax]
  45e812:	jb     0x45e814
  45e814:	imul   eax,DWORD PTR [rax],0x740070
  45e81a:	imul   eax,DWORD PTR [rax],0x6e006f
  45e820:	add    BYTE PTR [rcx],ah
  45e822:	rex.WB add BYTE PTR [r14+0x0],bpl
  45e826:	jae    0x45e828
  45e828:	je     0x45e82a
  45e82a:	(bad)  
  45e82b:	add    BYTE PTR [rax+rax*1+0x6c],ch
  45e82f:	add    BYTE PTR [rcx+0x0],ah
  45e832:	je     0x45e834
  45e834:	imul   eax,DWORD PTR [rax],0x6e006f
  45e83a:	push   rax
  45e83b:	add    BYTE PTR [rcx+0x0],ah
  45e83e:	add    BYTE PTR [ebp+0x0],ah
  45e842:	add    BYTE PTR [rdi],cl
  45e844:	rex.WB add BYTE PTR [r14+0x0],bpl
  45e848:	jae    0x45e84a
  45e84a:	je     0x45e84c
  45e84c:	(bad)  
  45e84d:	add    BYTE PTR [rax+rax*1+0x6c],ch
  45e851:	add    BYTE PTR [rax],al
  45e853:	and    eax,0x6e0049
  45e858:	jae    0x45e85a
  45e85a:	je     0x45e85c
  45e85c:	(bad)  
  45e85d:	add    BYTE PTR [rax+rax*1+0x6c],ch
  45e861:	add    BYTE PTR [rax+rax*1+0x65],al
  45e865:	add    BYTE PTR [rbx+0x0],dh
  45e868:	movsxd eax,DWORD PTR [rax]
  45e86a:	jb     0x45e86c
  45e86c:	imul   eax,DWORD PTR [rax],0x740070
  45e872:	imul   eax,DWORD PTR [rax],0x6e006f
  45e878:	add    BYTE PTR [rdi],cl
  45e87a:	push   rbp
  45e87b:	add    BYTE PTR [rax+0x0],dh
  45e87e:	add    BYTE PTR [edx+0x0],dh
  45e882:	(bad)  
  45e883:	add    BYTE PTR [rax+rax*1+0x65],ah
  45e887:	add    BYTE PTR [rax],al
  45e889:	and    eax,0x700055
  45e88e:	add    BYTE PTR [edx+0x0],dh
  45e892:	(bad)  
  45e893:	add    BYTE PTR [rax+rax*1+0x65],ah
  45e897:	add    BYTE PTR [rax+rax*1+0x65],al
  45e89b:	add    BYTE PTR [rbx+0x0],dh
  45e89e:	movsxd eax,DWORD PTR [rax]
  45e8a0:	jb     0x45e8a2
  45e8a2:	imul   eax,DWORD PTR [rax],0x740070
  45e8a8:	imul   eax,DWORD PTR [rax],0x6e006f
  45e8ae:	add    BYTE PTR [rdi],bl
  45e8b0:	rex.XB add BYTE PTR [r8+0x0],bpl
  45e8b4:	add    BYTE PTR gs:[rbx+0x0],ah
  45e8b8:	imul   eax,DWORD PTR [rax],0x46
  45e8bb:	add    BYTE PTR [rdi+0x0],ch
  45e8be:	jb     0x45e8c0
  45e8c0:	push   rbp
  45e8c1:	add    BYTE PTR [rax+0x0],dh
  45e8c4:	add    BYTE PTR fs:[rcx+0x0],ah
  45e8c8:	je     0x45e8ca
  45e8ca:	add    BYTE PTR gs:[rbx+0x0],dh
  45e8ce:	add    BYTE PTR [rip+0x680043],dh        # 0xade917
  45e8d4:	add    BYTE PTR gs:[rbx+0x0],ah
  45e8d8:	imul   eax,DWORD PTR [rax],0x46
  45e8db:	add    BYTE PTR [rdi+0x0],ch
  45e8de:	jb     0x45e8e0
  45e8e0:	push   rbp
  45e8e1:	add    BYTE PTR [rax+0x0],dh
  45e8e4:	add    BYTE PTR fs:[rcx+0x0],ah
  45e8e8:	je     0x45e8ea
  45e8ea:	add    BYTE PTR gs:[rbx+0x0],dh
  45e8ee:	add    BYTE PTR [rbp+0x0],r12b
  45e8f2:	jae    0x45e8f4
  45e8f4:	movsxd eax,DWORD PTR [rax]
  45e8f6:	jb     0x45e8f8
  45e8f8:	imul   eax,DWORD PTR [rax],0x740070
  45e8fe:	imul   eax,DWORD PTR [rax],0x6e006f
  45e904:	add    BYTE PTR [rdi],ah
  45e906:	push   rbp
  45e907:	add    BYTE PTR [rax+0x0],dh
  45e90a:	add    BYTE PTR [edx+0x0],dh
  45e90e:	(bad)  
  45e90f:	add    BYTE PTR [rax+rax*1+0x65],ah
  45e913:	add    BYTE PTR [rbx+0x0],dl
  45e916:	push   rbx
  45e917:	add    BYTE PTR [rcx+0x0],cl
  45e91a:	push   rbx
  45e91b:	add    BYTE PTR [rax+0x0],dl
  45e91e:	(bad)  
  45e91f:	add    BYTE PTR [rbx+0x0],ah
  45e922:	imul   eax,DWORD PTR [rax],0x61
  45e925:	add    BYTE PTR [rdi+0x0],ah
  45e928:	add    BYTE PTR gs:[rbx+0x0],dh
  45e92c:	add    BYTE PTR [rip+0x700055],bh        # 0xb5e987
  45e932:	add    BYTE PTR [edx+0x0],dh
  45e936:	(bad)  
  45e937:	add    BYTE PTR [rax+rax*1+0x65],ah
  45e93b:	add    BYTE PTR [rbx+0x0],dl
  45e93e:	push   rbx
  45e93f:	add    BYTE PTR [rcx+0x0],cl
  45e942:	push   rbx
  45e943:	add    BYTE PTR [rax+0x0],dl
  45e946:	(bad)  
  45e947:	add    BYTE PTR [rbx+0x0],ah
  45e94a:	imul   eax,DWORD PTR [rax],0x61
  45e94d:	add    BYTE PTR [rdi+0x0],ah
  45e950:	add    BYTE PTR gs:[rbx+0x0],dh
  45e954:	add    BYTE PTR [rbp+0x0],r12b
  45e958:	jae    0x45e95a
  45e95a:	movsxd eax,DWORD PTR [rax]
  45e95c:	jb     0x45e95e
  45e95e:	imul   eax,DWORD PTR [rax],0x740070
  45e964:	imul   eax,DWORD PTR [rax],0x6e006f
  45e96a:	add    BYTE PTR [rdi],bl
  45e96c:	rex.WRB add BYTE PTR [r9+0x0],r12b
  45e970:	imul   eax,DWORD PTR [rax],0x74006e
  45e976:	add    BYTE PTR gs:[rsi+0x0],ch
  45e97a:	(bad)  
  45e97b:	add    BYTE PTR [rsi+0x0],ch
  45e97e:	movsxd eax,DWORD PTR [rax]
  45e980:	add    BYTE PTR gs:[rax+0x0],dl
  45e984:	(bad)  
  45e985:	add    BYTE PTR [rdi+0x0],ah
  45e988:	add    BYTE PTR gs:[rax],al
  45e98b:	sbb    eax,0x640045
  45e990:	imul   eax,DWORD PTR [rax],0x690074
  45e996:	outs   dx,DWORD PTR ds:[rsi]
  45e997:	add    BYTE PTR [rsi+0x0],ch
  45e99a:	push   rbp
  45e99b:	add    BYTE PTR [rax+0x0],dh
  45e99e:	add    BYTE PTR [edx+0x0],dh
  45e9a2:	(bad)  
  45e9a3:	add    BYTE PTR [rax+rax*1+0x65],ah
  45e9a7:	add    BYTE PTR [rax],al
  45e9a9:	xor    eax,DWORD PTR [rbp+0x0]
  45e9ac:	add    BYTE PTR fs:[rcx+0x0],ch
  45e9b0:	je     0x45e9b2
  45e9b2:	imul   eax,DWORD PTR [rax],0x6e006f
  45e9b8:	push   rbp
  45e9b9:	add    BYTE PTR [rax+0x0],dh
  45e9bc:	add    BYTE PTR [edx+0x0],dh
  45e9c0:	(bad)  
  45e9c1:	add    BYTE PTR [rax+rax*1+0x65],ah
  45e9c5:	add    BYTE PTR [rax+rax*1+0x65],al
  45e9c9:	add    BYTE PTR [rbx+0x0],dh
  45e9cc:	movsxd eax,DWORD PTR [rax]
  45e9ce:	jb     0x45e9d0
  45e9d0:	imul   eax,DWORD PTR [rax],0x740070
  45e9d6:	imul   eax,DWORD PTR [rax],0x6e006f
  45e9dc:	add    BYTE PTR [rip+0x650052],cl        # 0xaaea34
  45e9e2:	jo     0x45e9e4
  45e9e4:	(bad)  
  45e9e5:	add    BYTE PTR [rcx+0x0],ch
  45e9e8:	jb     0x45e9ea
  45e9ea:	add    BYTE PTR [rbx],ah
  45e9ec:	push   rdx
  45e9ed:	add    BYTE PTR [rbp+0x0],ah
  45e9f0:	jo     0x45e9f2
  45e9f2:	(bad)  
  45e9f3:	add    BYTE PTR [rcx+0x0],ch
  45e9f6:	jb     0x45e9f8
  45e9f8:	add    BYTE PTR [rbp+0x0],r12b
  45e9fc:	jae    0x45e9fe
  45e9fe:	movsxd eax,DWORD PTR [rax]
  45ea00:	jb     0x45ea02
  45ea02:	imul   eax,DWORD PTR [rax],0x740070
  45ea08:	imul   eax,DWORD PTR [rax],0x6e006f
  45ea0e:	add    BYTE PTR [rbx],dl
  45ea10:	push   rsp
  45ea11:	add    BYTE PTR [rdi+0x0],ch
  45ea14:	outs   dx,DWORD PTR ds:[rsi]
  45ea15:	add    BYTE PTR [rax+rax*1+0x73],ch
  45ea19:	add    BYTE PTR [rax+0x0],dl
  45ea1c:	(bad)  
  45ea1d:	add    BYTE PTR [rdi+0x0],ah
  45ea20:	add    BYTE PTR gs:[rax],al
  45ea23:	(bad)  
  45ea24:	add    BYTE PTR [rcx+0x0],r13b
  45ea28:	jae    0x45ea2a
  45ea2a:	movsxd eax,DWORD PTR [rax]
  45ea2c:	outs   dx,DWORD PTR ds:[rsi]
  45ea2d:	add    BYTE PTR [rsi+0x0],dh
  45ea30:	add    BYTE PTR gs:[rdx+0x0],dh
  45ea34:	jns    0x45ea36
  45ea36:	push   rdx
  45ea37:	add    BYTE PTR [rbp+0x0],ah
  45ea3a:	jo     0x45ea3c
  45ea3c:	outs   dx,DWORD PTR ds:[rsi]
  45ea3d:	add    BYTE PTR [rdx+0x0],dh
  45ea40:	je     0x45ea42
  45ea42:	add    BYTE PTR [rip+0x690044],dh        # 0xaeea8c
  45ea48:	jae    0x45ea4a
  45ea4a:	movsxd eax,DWORD PTR [rax]
  45ea4c:	outs   dx,DWORD PTR ds:[rsi]
  45ea4d:	add    BYTE PTR [rsi+0x0],dh
  45ea50:	add    BYTE PTR gs:[rdx+0x0],dh
  45ea54:	jns    0x45ea56
  45ea56:	push   rdx
  45ea57:	add    BYTE PTR [rbp+0x0],ah
  45ea5a:	jo     0x45ea5c
  45ea5c:	outs   dx,DWORD PTR ds:[rsi]
  45ea5d:	add    BYTE PTR [rdx+0x0],dh
  45ea60:	je     0x45ea62
  45ea62:	add    BYTE PTR [rbp+0x0],r12b
  45ea66:	jae    0x45ea68
  45ea68:	movsxd eax,DWORD PTR [rax]
  45ea6a:	jb     0x45ea6c
  45ea6c:	imul   eax,DWORD PTR [rax],0x740070
  45ea72:	imul   eax,DWORD PTR [rax],0x6e006f
  45ea78:	add    BYTE PTR [rcx],bl
  45ea7a:	push   rbp
  45ea7b:	add    BYTE PTR [rax+0x0],dh
  45ea7e:	add    BYTE PTR [edx+0x0],dh
  45ea82:	(bad)  
  45ea83:	add    BYTE PTR [rax+rax*1+0x65],ah
  45ea87:	add    BYTE PTR [rdx+0x0],dl
  45ea8a:	jne    0x45ea8c
  45ea8c:	ins    BYTE PTR es:[rdi],dx
  45ea8d:	add    BYTE PTR [rbp+0x0],ah
  45ea90:	jae    0x45ea92
  45ea92:	add    BYTE PTR [rdi],ch
  45ea94:	push   rbp
  45ea95:	add    BYTE PTR [rax+0x0],dh
  45ea98:	add    BYTE PTR [edx+0x0],dh
  45ea9c:	(bad)  
  45ea9d:	add    BYTE PTR [rax+rax*1+0x65],ah
  45eaa1:	add    BYTE PTR [rdx+0x0],dl
  45eaa4:	jne    0x45eaa6
  45eaa6:	ins    BYTE PTR es:[rdi],dx
  45eaa7:	add    BYTE PTR [rbp+0x0],ah
  45eaaa:	jae    0x45eaac
  45eaac:	add    BYTE PTR [rbp+0x0],r12b
  45eab0:	jae    0x45eab2
  45eab2:	movsxd eax,DWORD PTR [rax]
  45eab4:	jb     0x45eab6
  45eab6:	imul   eax,DWORD PTR [rax],0x740070
  45eabc:	imul   eax,DWORD PTR [rax],0x6e006f
  45eac2:	add    BYTE PTR [rbx],bl
  45eac4:	push   rdx
  45eac5:	add    BYTE PTR [rbp+0x0],ah
  45eac8:	jae    0x45eaca
  45eaca:	outs   dx,DWORD PTR ds:[rsi]
  45eacb:	add    BYTE PTR [rbp+0x0],dh
  45eace:	jb     0x45ead0
  45ead0:	movsxd eax,DWORD PTR [rax]
  45ead2:	add    BYTE PTR gs:[rbx+0x0],dh
  45ead6:	push   rax
  45ead7:	add    BYTE PTR [rcx+0x0],ah
  45eada:	add    BYTE PTR [ebp+0x0],ah
  45eade:	add    BYTE PTR [rdi],cl
  45eae0:	push   rsi
  45eae1:	add    BYTE PTR [rcx+0x0],ch
  45eae4:	add    BYTE PTR gs:[rdi+0x0],dh
  45eae8:	rex.X add BYTE PTR [rdi+0x0],bpl
  45eaec:	ins    BYTE PTR es:[rdi],dx
  45eaed:	add    BYTE PTR [rax],al
  45eaef:	and    eax,0x690056
  45eaf4:	add    BYTE PTR gs:[rdi+0x0],dh
  45eaf8:	rex.X add BYTE PTR [rdi+0x0],bpl
  45eafc:	ins    BYTE PTR es:[rdi],dx
  45eafd:	add    BYTE PTR [rax+rax*1+0x65],al
  45eb01:	add    BYTE PTR [rbx+0x0],dh
  45eb04:	movsxd eax,DWORD PTR [rax]
  45eb06:	jb     0x45eb08
  45eb08:	imul   eax,DWORD PTR [rax],0x740070
  45eb0e:	imul   eax,DWORD PTR [rax],0x6e006f
  45eb14:	add    BYTE PTR [rip+0x710053],dl        # 0xb6eb6d
  45eb1a:	ins    BYTE PTR es:[rdi],dx
  45eb1b:	add    BYTE PTR [rdi+0x0],dl
  45eb1e:	add    BYTE PTR gs:[rdx+0x0],ah
  45eb22:	push   rbx
  45eb23:	add    BYTE PTR [rcx+0x0],ch
  45eb26:	je     0x45eb28
  45eb28:	add    BYTE PTR gs:[rax],al
  45eb2b:	sub    edx,DWORD PTR [rbx+0x0]
  45eb2e:	jno    0x45eb30
  45eb30:	ins    BYTE PTR es:[rdi],dx
  45eb31:	add    BYTE PTR [rdi+0x0],dl
  45eb34:	add    BYTE PTR gs:[rdx+0x0],ah
  45eb38:	push   rbx
  45eb39:	add    BYTE PTR [rcx+0x0],ch
  45eb3c:	je     0x45eb3e
  45eb3e:	add    BYTE PTR gs:[rax+rax*1+0x65],al
  45eb43:	add    BYTE PTR [rbx+0x0],dh
  45eb46:	movsxd eax,DWORD PTR [rax]
  45eb48:	jb     0x45eb4a
  45eb4a:	imul   eax,DWORD PTR [rax],0x740070
  45eb50:	imul   eax,DWORD PTR [rax],0x6e006f
  45eb56:	add    BYTE PTR [rcx],bl
  45eb58:	push   rbx
  45eb59:	add    BYTE PTR [rcx+0x0],dh
  45eb5c:	ins    BYTE PTR es:[rdi],dx
  45eb5d:	add    BYTE PTR [rax+rax*1+0x65],al
  45eb61:	add    BYTE PTR [rsi+0x0],dh
  45eb64:	movsxd eax,DWORD PTR [rax]
  45eb66:	add    BYTE PTR gs:[rsi+0x0],ch
  45eb6a:	je     0x45eb6c
  45eb6c:	add    BYTE PTR gs:[rdx+0x0],dh
  45eb70:	add    BYTE PTR [rdi],ch
  45eb72:	push   rbx
  45eb73:	add    BYTE PTR [rcx+0x0],dh
  45eb76:	ins    BYTE PTR es:[rdi],dx
  45eb77:	add    BYTE PTR [rax+rax*1+0x65],al
  45eb7b:	add    BYTE PTR [rsi+0x0],dh
  45eb7e:	movsxd eax,DWORD PTR [rax]
  45eb80:	add    BYTE PTR gs:[rsi+0x0],ch
  45eb84:	je     0x45eb86
  45eb86:	add    BYTE PTR gs:[rdx+0x0],dh
  45eb8a:	add    BYTE PTR [rbp+0x0],r12b
  45eb8e:	jae    0x45eb90
  45eb90:	movsxd eax,DWORD PTR [rax]
  45eb92:	jb     0x45eb94
  45eb94:	imul   eax,DWORD PTR [rax],0x740070
  45eb9a:	imul   eax,DWORD PTR [rax],0x6e006f
  45eba0:	add    BYTE PTR [rdi],dl
  45eba2:	push   rbx
  45eba3:	add    BYTE PTR [rcx+0x0],dh
  45eba6:	ins    BYTE PTR es:[rdi],dx
  45eba7:	add    BYTE PTR [rbp+0x0],al
  45ebaa:	jbe    0x45ebac
  45ebac:	(bad)  
  45ebad:	add    BYTE PTR [rax+rax*1+0x53],ch
  45ebb1:	add    BYTE PTR [rcx+0x0],ch
  45ebb4:	je     0x45ebb6
  45ebb6:	add    BYTE PTR gs:[rax],al
  45ebb9:	sub    eax,0x710053
  45ebbe:	ins    BYTE PTR es:[rdi],dx
  45ebbf:	add    BYTE PTR [rbp+0x0],al
  45ebc2:	jbe    0x45ebc4
  45ebc4:	(bad)  
  45ebc5:	add    BYTE PTR [rax+rax*1+0x53],ch
  45ebc9:	add    BYTE PTR [rcx+0x0],ch
  45ebcc:	je     0x45ebce
  45ebce:	add    BYTE PTR gs:[rax+rax*1+0x65],al
  45ebd3:	add    BYTE PTR [rbx+0x0],dh
  45ebd6:	movsxd eax,DWORD PTR [rax]
  45ebd8:	jb     0x45ebda
  45ebda:	imul   eax,DWORD PTR [rax],0x740070
  45ebe0:	imul   eax,DWORD PTR [rax],0x6e006f
  45ebe6:	add    BYTE PTR [rcx],dl
  45ebe8:	push   rsi
  45ebe9:	add    BYTE PTR [rcx+0x0],ch
  45ebec:	add    BYTE PTR gs:[rdi+0x0],dh
  45ebf0:	add    BYTE PTR [r13+0x0],r14b
  45ebf4:	ins    BYTE PTR es:[rdi],dx
  45ebf5:	add    BYTE PTR [rcx+0x0],ah
  45ebf8:	add    BYTE PTR [rdi],ah
  45ebfa:	push   rsi
  45ebfb:	add    BYTE PTR [rcx+0x0],ch
  45ebfe:	add    BYTE PTR gs:[rdi+0x0],dh
  45ec02:	add    BYTE PTR [r13+0x0],r14b
  45ec06:	ins    BYTE PTR es:[rdi],dx
  45ec07:	add    BYTE PTR [rcx+0x0],ah
  45ec0a:	add    BYTE PTR [rbp+0x0],r12b
  45ec0e:	jae    0x45ec10
  45ec10:	movsxd eax,DWORD PTR [rax]
  45ec12:	jb     0x45ec14
  45ec14:	imul   eax,DWORD PTR [rax],0x740070
  45ec1a:	imul   eax,DWORD PTR [rax],0x6e006f
  45ec20:	add    BYTE PTR [rdi],bl
  45ec22:	push   rdx
  45ec23:	add    BYTE PTR [rbp+0x0],ah
  45ec26:	add    BYTE PTR [ecx+0x0],ch
  45ec2a:	jae    0x45ec2c
  45ec2c:	je     0x45ec2e
  45ec2e:	add    BYTE PTR gs:[rdx+0x0],dh
  45ec32:	add    BYTE PTR [r8+0x0],r15b
  45ec36:	jo     0x45ec38
  45ec38:	jb     0x45ec3a
  45ec3a:	add    BYTE PTR gs:[rbx+0x0],dh
  45ec3e:	jae    0x45ec40
  45ec40:	add    BYTE PTR [rip+0x650052],dh        # 0xaaec98
  45ec46:	add    BYTE PTR [ecx+0x0],ch
  45ec4a:	jae    0x45ec4c
  45ec4c:	je     0x45ec4e
  45ec4e:	add    BYTE PTR gs:[rdx+0x0],dh
  45ec52:	add    BYTE PTR [r8+0x0],r15b
  45ec56:	jo     0x45ec58
  45ec58:	jb     0x45ec5a
  45ec5a:	add    BYTE PTR gs:[rbx+0x0],dh
  45ec5e:	jae    0x45ec60
  45ec60:	add    BYTE PTR [rbp+0x0],r12b
  45ec64:	jae    0x45ec66
  45ec66:	movsxd eax,DWORD PTR [rax]
  45ec68:	jb     0x45ec6a
  45ec6a:	imul   eax,DWORD PTR [rax],0x740070
  45ec70:	imul   eax,DWORD PTR [rax],0x6e006f
  45ec76:	add    BYTE PTR [rcx],ch
  45ec78:	push   rsi
  45ec79:	add    BYTE PTR [rcx+0x0],ch
  45ec7c:	add    BYTE PTR gs:[rdi+0x0],dh
  45ec80:	push   rax
  45ec81:	add    BYTE PTR [rdx+0x0],dh
  45ec84:	imul   eax,DWORD PTR [rax],0x610076
  45ec8a:	movsxd eax,DWORD PTR [rax]
  45ec8c:	jns    0x45ec8e
  45ec8e:	push   rbx
  45ec8f:	add    BYTE PTR [rax+rax*1+0x61],dh
  45ec93:	add    BYTE PTR [rax+rax*1+0x65],dh
  45ec97:	add    BYTE PTR [rbp+0x0],ch
  45ec9a:	add    BYTE PTR gs:[rsi+0x0],ch
  45ec9e:	je     0x45eca0
  45eca0:	add    BYTE PTR [rdi],bh
  45eca2:	push   rsi
  45eca3:	add    BYTE PTR [rcx+0x0],ch
  45eca6:	add    BYTE PTR gs:[rdi+0x0],dh
  45ecaa:	push   rax
  45ecab:	add    BYTE PTR [rdx+0x0],dh
  45ecae:	imul   eax,DWORD PTR [rax],0x610076
  45ecb4:	movsxd eax,DWORD PTR [rax]
  45ecb6:	jns    0x45ecb8
  45ecb8:	push   rbx
  45ecb9:	add    BYTE PTR [rax+rax*1+0x61],dh
  45ecbd:	add    BYTE PTR [rax+rax*1+0x65],dh
  45ecc1:	add    BYTE PTR [rbp+0x0],ch
  45ecc4:	add    BYTE PTR gs:[rsi+0x0],ch
  45ecc8:	je     0x45ecca
  45ecca:	add    BYTE PTR [rbp+0x0],r12b
  45ecce:	jae    0x45ecd0
  45ecd0:	movsxd eax,DWORD PTR [rax]
  45ecd2:	jb     0x45ecd4
  45ecd4:	imul   eax,DWORD PTR [rax],0x740070
  45ecda:	imul   eax,DWORD PTR [rax],0x6e006f
  45ece0:	add    BYTE PTR [rbx],dl
  45ece2:	rex.XB add BYTE PTR [r15+0x0],bpl
  45ece6:	ins    DWORD PTR es:[rdi],dx
  45ece7:	add    BYTE PTR [rbp+0x0],ch
  45ecea:	jne    0x45ecec
  45ecec:	outs   dx,BYTE PTR ds:[rsi]
  45eced:	add    BYTE PTR [rcx+0x0],ch
  45ecf0:	je     0x45ecf2
  45ecf2:	jns    0x45ecf4
  45ecf4:	add    BYTE PTR [rcx],ch
  45ecf6:	rex.XB add BYTE PTR [r15+0x0],bpl
  45ecfa:	ins    DWORD PTR es:[rdi],dx
  45ecfb:	add    BYTE PTR [rbp+0x0],ch
  45ecfe:	jne    0x45ed00
  45ed00:	outs   dx,BYTE PTR ds:[rsi]
  45ed01:	add    BYTE PTR [rcx+0x0],ch
  45ed04:	je     0x45ed06
  45ed06:	jns    0x45ed08
  45ed08:	add    BYTE PTR [rbp+0x0],r12b
  45ed0c:	jae    0x45ed0e
  45ed0e:	movsxd eax,DWORD PTR [rax]
  45ed10:	jb     0x45ed12
  45ed12:	imul   eax,DWORD PTR [rax],0x740070
  45ed18:	imul   eax,DWORD PTR [rax],0x6e006f
  45ed1e:	add    BYTE PTR [rdi],dl
  45ed20:	push   rsi
  45ed21:	add    BYTE PTR [rcx+0x0],ch
  45ed24:	add    BYTE PTR gs:[rdi+0x0],dh
  45ed28:	push   rbx
  45ed29:	add    BYTE PTR [rcx+0x0],ah
  45ed2c:	ins    DWORD PTR es:[rdi],dx
  45ed2d:	add    BYTE PTR [rax+0x0],dh
  45ed30:	ins    BYTE PTR es:[rdi],dx
  45ed31:	add    BYTE PTR [rbp+0x0],ah
  45ed34:	jae    0x45ed36
  45ed36:	add    BYTE PTR [rip+0x690056],ch        # 0xaeed92
  45ed3c:	add    BYTE PTR gs:[rdi+0x0],dh
  45ed40:	push   rbx
  45ed41:	add    BYTE PTR [rcx+0x0],ah
  45ed44:	ins    DWORD PTR es:[rdi],dx
  45ed45:	add    BYTE PTR [rax+0x0],dh
  45ed48:	ins    BYTE PTR es:[rdi],dx
  45ed49:	add    BYTE PTR [rbp+0x0],ah
  45ed4c:	jae    0x45ed4e
  45ed4e:	add    BYTE PTR [rbp+0x0],r12b
  45ed52:	jae    0x45ed54
  45ed54:	movsxd eax,DWORD PTR [rax]
  45ed56:	jb     0x45ed58
  45ed58:	imul   eax,DWORD PTR [rax],0x740070
  45ed5e:	imul   eax,DWORD PTR [rax],0x6e006f
  45ed64:	add    BYTE PTR [rcx],bl
  45ed66:	add    BYTE PTR [r8+rax*1+0x76],spl
  45ed6b:	add    BYTE PTR [rcx+0x0],ah
  45ed6e:	outs   dx,BYTE PTR ds:[rsi]
  45ed6f:	add    BYTE PTR [rbx+0x0],ah
  45ed72:	add    BYTE PTR gs:[rax+rax*1+0x50],ah
  45ed77:	add    BYTE PTR [rcx+0x0],ah
  45ed7a:	add    BYTE PTR [ebp+0x0],ah
  45ed7e:	add    BYTE PTR [rcx],bh
  45ed80:	rex.RXB add BYTE PTR [r13+0x0],r12b
  45ed84:	je     0x45ed86
  45ed86:	je     0x45ed88
  45ed88:	imul   eax,DWORD PTR [rax],0x67006e
  45ed8e:	push   rbx
  45ed8f:	add    BYTE PTR [rax+rax*1+0x61],dh
  45ed93:	add    BYTE PTR [rdx+0x0],dh
  45ed96:	je     0x45ed98
  45ed98:	add    BYTE PTR gs:[rax+rax*1+0x57],ah
  45ed9d:	add    BYTE PTR [rcx+0x0],ch
  45eda0:	je     0x45eda2
  45eda2:	push   0x6c004300
  45eda7:	add    BYTE PTR [rbp+0x0],dh
  45edaa:	jae    0x45edac
  45edac:	je     0x45edae
  45edae:	add    BYTE PTR gs:[rdx+0x0],dh
  45edb2:	imul   eax,DWORD PTR [rax],0x67006e
  45edb8:	add    BYTE PTR [rdi+0x47],cl
  45edbb:	add    BYTE PTR [rbp+0x0],ah
  45edbe:	je     0x45edc0
  45edc0:	je     0x45edc2
  45edc2:	imul   eax,DWORD PTR [rax],0x67006e
  45edc8:	push   rbx
  45edc9:	add    BYTE PTR [rax+rax*1+0x61],dh
  45edcd:	add    BYTE PTR [rdx+0x0],dh
  45edd0:	je     0x45edd2
  45edd2:	add    BYTE PTR gs:[rax+rax*1+0x57],ah
  45edd7:	add    BYTE PTR [rcx+0x0],ch
  45edda:	je     0x45eddc
  45eddc:	push   0x6c004300
  45ede1:	add    BYTE PTR [rbp+0x0],dh
  45ede4:	jae    0x45ede6
  45ede6:	je     0x45ede8
  45ede8:	add    BYTE PTR gs:[rdx+0x0],dh
  45edec:	imul   eax,DWORD PTR [rax],0x67006e
  45edf2:	add    BYTE PTR [rbp+0x0],r12b
  45edf6:	jae    0x45edf8
  45edf8:	movsxd eax,DWORD PTR [rax]
  45edfa:	jb     0x45edfc
  45edfc:	imul   eax,DWORD PTR [rax],0x740070
  45ee02:	imul   eax,DWORD PTR [rax],0x6e006f
  45ee08:	add    BYTE PTR [rbx],bh
  45ee0a:	rex.WB add BYTE PTR [r14+0x0],bpl
  45ee0e:	jae    0x45ee10
  45ee10:	je     0x45ee12
  45ee12:	(bad)  
  45ee13:	add    BYTE PTR [rax+rax*1+0x6c],ch
  45ee17:	add    BYTE PTR [rbp+0x0],dl
  45ee1a:	jae    0x45ee1c
  45ee1c:	imul   eax,DWORD PTR [rax],0x67006e
  45ee22:	rex.XB add BYTE PTR [r15+0x0],bpl
  45ee26:	outs   dx,BYTE PTR ds:[rsi]
  45ee27:	add    BYTE PTR [rsi+0x0],ah
  45ee2a:	imul   eax,DWORD PTR [rax],0x750067
  45ee30:	jb     0x45ee32
  45ee32:	(bad)  
  45ee33:	add    BYTE PTR [rax+rax*1+0x69],dh
  45ee37:	add    BYTE PTR [rdi+0x0],ch
  45ee3a:	outs   dx,BYTE PTR ds:[rsi]
  45ee3b:	add    BYTE PTR [rsi+0x0],al
  45ee3e:	imul   eax,DWORD PTR [rax],0x65006c
  45ee44:	add    BYTE PTR [rcx+0x49],dl
  45ee47:	add    BYTE PTR [rsi+0x0],ch
  45ee4a:	jae    0x45ee4c
  45ee4c:	je     0x45ee4e
  45ee4e:	(bad)  
  45ee4f:	add    BYTE PTR [rax+rax*1+0x6c],ch
  45ee53:	add    BYTE PTR [rbp+0x0],dl
  45ee56:	jae    0x45ee58
  45ee58:	imul   eax,DWORD PTR [rax],0x67006e
  45ee5e:	rex.XB add BYTE PTR [r15+0x0],bpl
  45ee62:	outs   dx,BYTE PTR ds:[rsi]
  45ee63:	add    BYTE PTR [rsi+0x0],ah
  45ee66:	imul   eax,DWORD PTR [rax],0x750067
  45ee6c:	jb     0x45ee6e
  45ee6e:	(bad)  
  45ee6f:	add    BYTE PTR [rax+rax*1+0x69],dh
  45ee73:	add    BYTE PTR [rdi+0x0],ch
  45ee76:	outs   dx,BYTE PTR ds:[rsi]
  45ee77:	add    BYTE PTR [rsi+0x0],al
  45ee7a:	imul   eax,DWORD PTR [rax],0x65006c
  45ee80:	add    BYTE PTR [rbp+0x0],r12b
  45ee84:	jae    0x45ee86
  45ee86:	movsxd eax,DWORD PTR [rax]
  45ee88:	jb     0x45ee8a
  45ee8a:	imul   eax,DWORD PTR [rax],0x740070
  45ee90:	imul   eax,DWORD PTR [rax],0x6e006f
  45ee96:	add    BYTE PTR [rip+0x6e0049],bl        # 0xb3eee5
  45ee9c:	jae    0x45ee9e
  45ee9e:	je     0x45eea0
  45eea0:	(bad)  
  45eea1:	add    BYTE PTR [rax+rax*1+0x6c],ch
  45eea5:	add    BYTE PTR [rbx+0x0],al
  45eea8:	ins    BYTE PTR es:[rdi],dx
  45eea9:	add    BYTE PTR [rbp+0x0],dh
  45eeac:	jae    0x45eeae
  45eeae:	je     0x45eeb0
  45eeb0:	add    BYTE PTR gs:[rdx+0x0],dh
  45eeb4:	add    BYTE PTR [rbx],dh
  45eeb6:	rex.WB add BYTE PTR [r14+0x0],bpl
  45eeba:	jae    0x45eebc
  45eebc:	je     0x45eebe
  45eebe:	(bad)  
  45eebf:	add    BYTE PTR [rax+rax*1+0x6c],ch
  45eec3:	add    BYTE PTR [rbx+0x0],al
  45eec6:	ins    BYTE PTR es:[rdi],dx
  45eec7:	add    BYTE PTR [rbp+0x0],dh
  45eeca:	jae    0x45eecc
  45eecc:	je     0x45eece
  45eece:	add    BYTE PTR gs:[rdx+0x0],dh
  45eed2:	add    BYTE PTR [rbp+0x0],r12b
  45eed6:	jae    0x45eed8
  45eed8:	movsxd eax,DWORD PTR [rax]
  45eeda:	jb     0x45eedc
  45eedc:	imul   eax,DWORD PTR [rax],0x740070
  45eee2:	imul   eax,DWORD PTR [rax],0x6e006f
  45eee8:	add    BYTE PTR [rdi],cl
  45eeea:	add    BYTE PTR [r8+rax*1+0x64],spl
  45eeef:	add    BYTE PTR [rsi+0x0],cl
  45eef2:	outs   dx,DWORD PTR ds:[rsi]
  45eef3:	add    BYTE PTR [rax+rax*1+0x65],ah
  45eef7:	add    BYTE PTR [rax],al
  45eef9:	and    eax,0x640041
  45eefe:	add    BYTE PTR fs:[rsi+0x0],cl
  45ef02:	outs   dx,DWORD PTR ds:[rsi]
  45ef03:	add    BYTE PTR [rax+rax*1+0x65],ah
  45ef07:	add    BYTE PTR [rax+rax*1+0x65],al
  45ef0b:	add    BYTE PTR [rbx+0x0],dh
  45ef0e:	movsxd eax,DWORD PTR [rax]
  45ef10:	jb     0x45ef12
  45ef12:	imul   eax,DWORD PTR [rax],0x740070
  45ef18:	imul   eax,DWORD PTR [rax],0x6e006f
  45ef1e:	add    BYTE PTR [rip+0x650052],dl        # 0xaaef76
  45ef24:	ins    DWORD PTR es:[rdi],dx
  45ef25:	add    BYTE PTR [rdi+0x0],ch
  45ef28:	jbe    0x45ef2a
  45ef2a:	add    BYTE PTR gs:[rsi+0x0],cl
  45ef2e:	outs   dx,DWORD PTR ds:[rsi]
  45ef2f:	add    BYTE PTR [rax+rax*1+0x65],ah
  45ef33:	add    BYTE PTR [rax],al
  45ef35:	sub    edx,DWORD PTR [rdx+0x0]
  45ef38:	add    BYTE PTR gs:[rbp+0x0],ch
  45ef3c:	outs   dx,DWORD PTR ds:[rsi]
  45ef3d:	add    BYTE PTR [rsi+0x0],dh
  45ef40:	add    BYTE PTR gs:[rsi+0x0],cl
  45ef44:	outs   dx,DWORD PTR ds:[rsi]
  45ef45:	add    BYTE PTR [rax+rax*1+0x65],ah
  45ef49:	add    BYTE PTR [rax+rax*1+0x65],al
  45ef4d:	add    BYTE PTR [rbx+0x0],dh
  45ef50:	movsxd eax,DWORD PTR [rax]
  45ef52:	jb     0x45ef54
  45ef54:	imul   eax,DWORD PTR [rax],0x740070
  45ef5a:	imul   eax,DWORD PTR [rax],0x6e006f
  45ef60:	add    BYTE PTR [rcx],ch
  45ef62:	add    BYTE PTR [r14+0x0],r13b
  45ef66:	je     0x45ef68
  45ef68:	add    BYTE PTR gs:[rdx+0x0],dh
  45ef6c:	jo     0x45ef6e
  45ef6e:	jb     0x45ef70
  45ef70:	imul   eax,DWORD PTR [rax],0x650073
  45ef76:	add    BYTE PTR [rbp+0x0],r12b
  45ef7a:	jo     0x45ef7c
  45ef7c:	ins    BYTE PTR es:[rdi],dx
  45ef7d:	add    BYTE PTR [rdi+0x0],ch
  45ef80:	jns    0x45ef82
  45ef82:	ins    DWORD PTR es:[rdi],dx
  45ef83:	add    BYTE PTR [rbp+0x0],ah
  45ef86:	outs   dx,BYTE PTR ds:[rsi]
  45ef87:	add    BYTE PTR [rax+rax*1+0x0],dh
  45ef8b:	(bad)  
  45ef8c:	add    BYTE PTR [r14+0x0],r13b
  45ef90:	je     0x45ef92
  45ef92:	add    BYTE PTR gs:[rdx+0x0],dh
  45ef96:	jo     0x45ef98
  45ef98:	jb     0x45ef9a
  45ef9a:	imul   eax,DWORD PTR [rax],0x650073
  45efa0:	add    BYTE PTR [rbp+0x0],r12b
  45efa4:	jo     0x45efa6
  45efa6:	ins    BYTE PTR es:[rdi],dx
  45efa7:	add    BYTE PTR [rdi+0x0],ch
  45efaa:	jns    0x45efac
  45efac:	ins    DWORD PTR es:[rdi],dx
  45efad:	add    BYTE PTR [rbp+0x0],ah
  45efb0:	outs   dx,BYTE PTR ds:[rsi]
  45efb1:	add    BYTE PTR [rax+rax*1+0x44],dh
  45efb5:	add    BYTE PTR [rbp+0x0],ah
  45efb8:	jae    0x45efba
  45efba:	movsxd eax,DWORD PTR [rax]
  45efbc:	jb     0x45efbe
  45efbe:	imul   eax,DWORD PTR [rax],0x740070
  45efc4:	imul   eax,DWORD PTR [rax],0x6e006f
  45efca:	add    BYTE PTR [rip+0x720050],bl        # 0xb7f020
  45efd0:	add    BYTE PTR gs:[rax+0x0],dh
  45efd4:	jo     0x45efd6
  45efd6:	add    BYTE PTR gs:[rax+rax*1+0x49],ah
  45efdb:	add    BYTE PTR [rsi+0x0],ch
  45efde:	jae    0x45efe0
  45efe0:	je     0x45efe2
  45efe2:	(bad)  
  45efe3:	add    BYTE PTR [rax+rax*1+0x6c],ch
  45efe7:	add    BYTE PTR [rax],al
  45efe9:	xor    edx,DWORD PTR [rax+0x0]
  45efec:	jb     0x45efee
  45efee:	add    BYTE PTR gs:[rax+0x0],dh
  45eff2:	jo     0x45eff4
  45eff4:	add    BYTE PTR gs:[rax+rax*1+0x49],ah
  45eff9:	add    BYTE PTR [rsi+0x0],ch
  45effc:	jae    0x45effe
  45effe:	je     0x45f000
  45f000:	(bad)  
  45f001:	add    BYTE PTR [rax+rax*1+0x6c],ch
  45f005:	add    BYTE PTR [rax+rax*1+0x65],al
  45f009:	add    BYTE PTR [rbx+0x0],dh
  45f00c:	movsxd eax,DWORD PTR [rax]
  45f00e:	jb     0x45f010
  45f010:	imul   eax,DWORD PTR [rax],0x740070
  45f016:	imul   eax,DWORD PTR [rax],0x6e006f
  45f01c:	add    BYTE PTR [rcx],ch
  45f01e:	rex.WB add BYTE PTR [r14+0x0],bpl
  45f022:	jbe    0x45f024
  45f024:	(bad)  
  45f025:	add    BYTE PTR [rax+rax*1+0x69],ch
  45f029:	add    BYTE PTR [rax+rax*1+0x49],ah
  45f02d:	add    BYTE PTR [rsi+0x0],ch
  45f030:	jae    0x45f032
  45f032:	je     0x45f034
  45f034:	(bad)  
  45f035:	add    BYTE PTR [rax+rax*1+0x6c],ch
  45f039:	add    BYTE PTR [rsi+0x0],al
  45f03c:	outs   dx,DWORD PTR ds:[rsi]
  45f03d:	add    BYTE PTR [rax+rax*1+0x64],ch
  45f041:	add    BYTE PTR [rbp+0x0],ah
  45f044:	jb     0x45f046
  45f046:	add    BYTE PTR [rbx],bl
  45f048:	rex.WB add BYTE PTR [r14+0x0],bpl
  45f04c:	jbe    0x45f04e
  45f04e:	(bad)  
  45f04f:	add    BYTE PTR [rax+rax*1+0x69],ch
  45f053:	add    BYTE PTR [rax+rax*1+0x46],ah
  45f057:	add    BYTE PTR [rdi+0x0],ch
  45f05a:	ins    BYTE PTR es:[rdi],dx
  45f05b:	add    BYTE PTR [rax+rax*1+0x65],ah
  45f05f:	add    BYTE PTR [rdx+0x0],dh
  45f062:	add    BYTE PTR [rdi],bl
  45f064:	push   rdi
  45f065:	add    BYTE PTR [rcx+0x0],ch
  45f068:	outs   dx,BYTE PTR ds:[rsi]
  45f069:	add    BYTE PTR [rax+rax*1+0x6f],ah
  45f06d:	add    BYTE PTR [rdi+0x0],dh
  45f070:	push   rax
  45f071:	add    BYTE PTR [rax+rax*1+0x61],ch
  45f075:	add    BYTE PTR [rbx+0x0],ah
  45f078:	add    BYTE PTR gs:[rbp+0x0],ch
  45f07c:	add    BYTE PTR gs:[rsi+0x0],ch
  45f080:	je     0x45f082
  45f082:	add    BYTE PTR [rdi],cl
  45f084:	push   rsi
  45f085:	add    BYTE PTR [rcx+0x0],ch
  45f088:	jae    0x45f08a
  45f08a:	imul   eax,DWORD PTR [rax],0x6c0062
  45f090:	add    BYTE PTR gs:[rax],al
  45f093:	cmovne eax,DWORD PTR [rax]
  45f096:	outs   dx,BYTE PTR ds:[rsi]
  45f097:	add    BYTE PTR [rcx+0x0],ah
  45f09a:	(bad)  
  45f09b:	add    BYTE PTR [rax+rax*1+0x65],ch
  45f09f:	add    BYTE PTR [rax+rax*1+0x0],ah
  45f0a3:	add    DWORD PTR [rax],eax
  45f0a5:	or     DWORD PTR [rax+0x0],esi
  45f0a8:	(bad)  
  45f0a9:	add    BYTE PTR [rdi+0x0],ah
  45f0ac:	add    BYTE PTR gs:[rax],al
  45f0af:	(bad)  
  45f0b0:	movsxd eax,DWORD PTR [rax]
  45f0b2:	outs   dx,DWORD PTR ds:[rsi]
  45f0b3:	add    BYTE PTR [rsi+0x0],ch
  45f0b6:	je     0x45f0b8
  45f0b8:	add    BYTE PTR gs:[rsi+0x0],ch
  45f0bc:	je     0x45f0be
  45f0be:	add    BYTE PTR [r10+0x0],sil
  45f0c2:	add    BYTE PTR gs:[rcx+0x0],ah
  45f0c6:	add    BYTE PTR [rcx],bl
  45f0c8:	jo     0x45f0ca
  45f0ca:	(bad)  
  45f0cb:	add    BYTE PTR [rdi+0x0],ah
  45f0ce:	add    BYTE PTR gs:[rbx+0x0],dl
  45f0d2:	ja     0x45f0d4
  45f0d4:	imul   eax,DWORD PTR [rax],0x630074
  45f0da:	push   0x72006500
  45f0df:	add    BYTE PTR [rax],al
  45f0e1:	or     esp,DWORD PTR [rax+rax*1]
  45f0e4:	je     0x45f0e6
  45f0e6:	push   0x73006900
  45f0eb:	add    BYTE PTR [rax],al
  45f0ed:	and    eax,0x61004c
  45f0f2:	outs   dx,BYTE PTR ds:[rsi]
  45f0f3:	add    BYTE PTR [rax+rax*1+0x69],ah
  45f0f7:	add    BYTE PTR [rsi+0x0],ch
  45f0fa:	add    BYTE PTR [eax+0x0],dl
  45f0fe:	(bad)  
  45f0ff:	add    BYTE PTR [rdi+0x0],ah
  45f102:	add    BYTE PTR gs:[rbx+0x0],al
  45f106:	outs   dx,DWORD PTR ds:[rsi]
  45f107:	add    BYTE PTR [rsi+0x0],ch
  45f10a:	je     0x45f10c
  45f10c:	jb     0x45f10e
  45f10e:	outs   dx,DWORD PTR ds:[rsi]
  45f10f:	add    BYTE PTR [rax+rax*1+0x0],ch
  45f113:	and    eax,0x61006c
  45f118:	outs   dx,BYTE PTR ds:[rsi]
  45f119:	add    BYTE PTR [rax+rax*1+0x69],ah
  45f11d:	add    BYTE PTR [rsi+0x0],ch
  45f120:	add    BYTE PTR [eax+0x0],dl
  45f124:	(bad)  
  45f125:	add    BYTE PTR [rdi+0x0],ah
  45f128:	add    BYTE PTR gs:[rbx+0x0],al
  45f12c:	outs   dx,DWORD PTR ds:[rsi]
  45f12d:	add    BYTE PTR [rsi+0x0],ch
  45f130:	je     0x45f132
  45f132:	jb     0x45f134
  45f134:	outs   dx,DWORD PTR ds:[rsi]
  45f135:	add    BYTE PTR [rax+rax*1+0x0],ch
  45f139:	(bad)  
  45f13a:	rex.WR add BYTE PTR [rcx+0x0],r12b
  45f13e:	outs   dx,BYTE PTR ds:[rsi]
  45f13f:	add    BYTE PTR [rax+rax*1+0x69],ah
  45f143:	add    BYTE PTR [rsi+0x0],ch
  45f146:	add    BYTE PTR [eax+0x0],dl
  45f14a:	(bad)  
  45f14b:	add    BYTE PTR [rdi+0x0],ah
  45f14e:	add    BYTE PTR gs:[rsi+0x0],al
  45f152:	outs   dx,DWORD PTR ds:[rsi]
  45f153:	add    BYTE PTR [rdx+0x0],dh
  45f156:	ins    DWORD PTR es:[rdi],dx
  45f157:	add    BYTE PTR [rax],al
  45f159:	sub    esp,DWORD PTR [rcx+0x0]
  45f15c:	movsxd eax,DWORD PTR [rax]
  45f15e:	je     0x45f160
  45f160:	imul   eax,DWORD PTR [rax],0x6e006f
  45f166:	and    BYTE PTR [rax],al
  45f168:	movsxd eax,DWORD PTR [rax]
  45f16a:	(bad)  
  45f16b:	add    BYTE PTR [rsi+0x0],ch
  45f16e:	outs   dx,BYTE PTR ds:[rsi]
  45f16f:	add    BYTE PTR [rdi+0x0],ch
  45f172:	je     0x45f174
  45f174:	and    BYTE PTR [rax],al
  45f176:	(bad)  
  45f177:	add    BYTE PTR [rbp+0x0],ah
  45f17a:	and    BYTE PTR [rax],al
  45f17c:	outs   dx,BYTE PTR ds:[rsi]
  45f17d:	add    BYTE PTR [rbp+0x0],dh
  45f180:	ins    BYTE PTR es:[rdi],dx
  45f181:	add    BYTE PTR [rax+rax*1+0x0],ch
  45f185:	adc    esi,DWORD PTR [rbx+0x0]
  45f188:	add    BYTE PTR gs:[rax+rax*1+0x75],dh
  45f18d:	add    BYTE PTR [rax+0x0],dh
  45f190:	add    BYTE PTR cs:[rbp+0x0],ah
  45f194:	js     0x45f196
  45f196:	add    BYTE PTR gs:[rax],al
  45f199:	sbb    DWORD PTR [rsi],ebp
  45f19b:	add    BYTE PTR [rsi],ch
  45f19d:	add    BYTE PTR [rax+rax*1+0x73],bl
  45f1a1:	add    BYTE PTR [rbp+0x0],ah
  45f1a4:	je     0x45f1a6
  45f1a6:	jne    0x45f1a8
  45f1a8:	jo     0x45f1aa
  45f1aa:	add    BYTE PTR cs:[rbp+0x0],ah
  45f1ae:	js     0x45f1b0
  45f1b0:	add    BYTE PTR gs:[rax],al
  45f1b3:	sbb    DWORD PTR [rax],esp
  45f1b5:	add    BYTE PTR [rdi],ch
  45f1b7:	add    BYTE PTR [rcx+0x0],al
  45f1ba:	add    BYTE PTR [r8+r8*1+0x49],dl
  45f1bf:	add    BYTE PTR [rdi+0x0],cl
  45f1c2:	rex.WRX add BYTE PTR [rip+0x30007b00],r15b        # 0x30466cc9
  45f1c9:	add    BYTE PTR [rbp+0x0],bh
  45f1cc:	add    BYTE PTR [rbx],al
  45f1ce:	pop    rsp
  45f1cf:	add    BYTE PTR [rax],al
  45f1d1:	(bad)  
  45f1d2:	and    BYTE PTR [rax],al
  45f1d4:	(bad)  
  45f1d5:	add    BYTE PTR [rbp+0x0],cl
  45f1d8:	add    BYTE PTR [r8+rax*1+0x49],r8b
  45f1dd:	add    BYTE PTR [rcx+0x0],al
  45f1e0:	push   rbx
  45f1e1:	add    BYTE PTR [rdi+0x0],cl
  45f1e4:	push   rbp
  45f1e5:	add    BYTE PTR [rdx+0x0],dl
  45f1e8:	rex.XB add BYTE PTR [r13+0x0],al
  45f1ec:	cmp    eax,0x7b002200
  45f1f1:	add    BYTE PTR [rax],dh
  45f1f3:	add    BYTE PTR [rbp+0x0],bh
  45f1f6:	and    al,BYTE PTR [rax]
  45f1f8:	add    BYTE PTR [rcx],ch
  45f1fa:	and    BYTE PTR [rax],al
  45f1fc:	(bad)  
  45f1fd:	add    BYTE PTR [rbp+0x0],cl
  45f200:	add    BYTE PTR [r8+rax*1+0x49],r8b
  45f205:	add    BYTE PTR [rcx+0x0],al
  45f208:	push   rbx
  45f209:	add    BYTE PTR [rdi+0x0],cl
  45f20c:	push   rbp
  45f20d:	add    BYTE PTR [rdx+0x0],dl
  45f210:	rex.XB add BYTE PTR [r13+0x0],al
  45f214:	cmp    eax,0x7b002200
  45f219:	add    BYTE PTR [rax],dh
  45f21b:	add    BYTE PTR [rbp+0x0],bh
  45f21e:	pop    rsp
  45f21f:	add    BYTE PTR [rdx],ah
  45f221:	add    BYTE PTR [rax],al
  45f223:	or     esp,DWORD PTR [rax]
  45f225:	add    BYTE PTR [rdi],ch
  45f227:	add    BYTE PTR [rax+0x0],bl
  45f22a:	cmp    BYTE PTR [rax],al
  45f22c:	add    BYTE PTR ss:[rax],al
  45f22f:	(bad)  
  45f230:	and    BYTE PTR [rax],al
  45f232:	(bad)  
  45f233:	add    BYTE PTR [rax+0x0],dl
  45f236:	rex.XB add BYTE PTR [r13+0x0],dl
  45f23a:	push   rbx
  45f23b:	add    BYTE PTR [rdi+0x0],cl
  45f23e:	push   rbp
  45f23f:	add    BYTE PTR [rdx+0x0],dl
  45f242:	rex.XB add BYTE PTR [r13+0x0],al
  45f246:	cmp    eax,0x30007b00
  45f24b:	add    BYTE PTR [rbp+0x0],bh
  45f24e:	add    BYTE PTR [rip+0x2f0020],bl        # 0x74f274
  45f254:	rex.XB add BYTE PTR [r13+0x0],dl
  45f258:	push   rbx
  45f259:	add    BYTE PTR [rdi+0x0],cl
  45f25c:	push   rbp
  45f25d:	add    BYTE PTR [rdx+0x0],dl
  45f260:	rex.XB add BYTE PTR [r13+0x0],al
  45f264:	cmp    eax,0x30007b00
  45f269:	add    BYTE PTR [rbp+0x0],bh
  45f26c:	add    BYTE PTR [rcx],cl
  45f26e:	and    BYTE PTR [rax],al
  45f270:	jnp    0x45f272
  45f272:	xor    BYTE PTR [rax],al
  45f274:	jge    0x45f276
  45f276:	add    BYTE PTR [rbx],dl
  45f278:	and    BYTE PTR [rax],al
  45f27a:	(bad)  
  45f27b:	add    BYTE PTR [rsi+0x0],cl
  45f27e:	rex.WRXB add BYTE PTR [r13+0x0],r9b
  45f282:	push   rbp
  45f283:	add    BYTE PTR [rax+rax*1+0x45],dl
  45f287:	add    BYTE PTR [rax+0x0],bl
  45f28a:	add    BYTE PTR [rdi],al
  45f28c:	imul   eax,DWORD PTR [rax],0x69006e
  45f292:	add    BYTE PTR [rbx+0x53],al
  45f295:	add    BYTE PTR [rbp+0x0],ah
  45f298:	je     0x45f29a
  45f29a:	jne    0x45f29c
  45f29c:	jo     0x45f29e
  45f29e:	and    BYTE PTR [rax],al
  45f2a0:	je     0x45f2a2
  45f2a2:	add    BYTE PTR gs:[rbp+0x0],ch
  45f2a6:	jo     0x45f2a8
  45f2a8:	ins    BYTE PTR es:[rdi],dx
  45f2a9:	add    BYTE PTR [rcx+0x0],ah
  45f2ac:	je     0x45f2ae
  45f2ae:	add    BYTE PTR gs:[rax],ah
  45f2b1:	add    BYTE PTR [rsi+0x0],ah
  45f2b4:	imul   eax,DWORD PTR [rax],0x65006c
  45f2ba:	and    BYTE PTR [rax],al
  45f2bc:	sub    BYTE PTR [rax],al
  45f2be:	sub    al,BYTE PTR [rax]
  45f2c0:	add    BYTE PTR cs:[rcx+0x0],ch
  45f2c4:	outs   dx,BYTE PTR ds:[rsi]
  45f2c5:	add    BYTE PTR [rcx+0x0],ch
  45f2c8:	sub    DWORD PTR [rax],eax
  45f2ca:	jl     0x45f2cc
  45f2cc:	sub    al,BYTE PTR [rax]
  45f2ce:	add    BYTE PTR cs:[rcx+0x0],ch
  45f2d2:	outs   dx,BYTE PTR ds:[rsi]
  45f2d3:	add    BYTE PTR [rcx+0x0],ch
  45f2d6:	add    BYTE PTR [rcx],ch
  45f2d8:	push   rbx
  45f2d9:	add    BYTE PTR [rbp+0x0],ah
  45f2dc:	ins    BYTE PTR es:[rdi],dx
  45f2dd:	add    BYTE PTR [rbp+0x0],ah
  45f2e0:	movsxd eax,DWORD PTR [rax]
  45f2e2:	je     0x45f2e4
  45f2e4:	and    BYTE PTR [rax],al
  45f2e6:	je     0x45f2e8
  45f2e8:	add    BYTE PTR gs:[rbp+0x0],ch
  45f2ec:	jo     0x45f2ee
  45f2ee:	ins    BYTE PTR es:[rdi],dx
  45f2ef:	add    BYTE PTR [rcx+0x0],ah
  45f2f2:	je     0x45f2f4
  45f2f4:	add    BYTE PTR gs:[rax],ah
  45f2f7:	add    BYTE PTR [rsi+0x0],ah
  45f2fa:	imul   eax,DWORD PTR [rax],0x65006c
  45f300:	add    BYTE PTR [rcx],bh
  45f302:	jnp    0x45f304
  45f304:	xor    BYTE PTR [rax],al
  45f306:	jge    0x45f308
  45f308:	and    BYTE PTR [rax],al
  45f30a:	(bad)  
  45f30b:	add    BYTE PTR [rbx+0x0],al
  45f30e:	rex.WRXB add BYTE PTR [r14+0x0],r9b
  45f312:	rex.RX add BYTE PTR [rcx+0x0],r9b
  45f316:	rex.RXB add BYTE PTR [r13+0x0],r10b
  45f31a:	push   rdx
  45f31b:	add    BYTE PTR [rcx+0x0],al
  45f31e:	push   rsp
  45f31f:	add    BYTE PTR [rcx+0x0],cl
  45f322:	rex.WRXB add BYTE PTR [r14+0x0],r9b
  45f326:	rex.RX add BYTE PTR [rcx+0x0],r9b
  45f32a:	rex.WR add BYTE PTR [rbp+0x0],r8b
  45f32e:	cmp    eax,0x7b002200
  45f333:	add    BYTE PTR [rcx],dh
  45f335:	add    BYTE PTR [rbp+0x0],bh
  45f338:	and    al,BYTE PTR [rax]
  45f33a:	add    BYTE PTR [rcx],dl
  45f33c:	jnp    0x45f33e
  45f33e:	ins    BYTE PTR es:[rdi],dx
  45f33f:	add    BYTE PTR [rdi+0x0],ch
  45f342:	movsxd eax,DWORD PTR [rax]
  45f344:	(bad)  
  45f345:	add    BYTE PTR [rax+rax*1+0x65],ch
  45f349:	add    BYTE PTR [rbp+0x0],bh
  45f34c:	add    BYTE PTR [rcx],cl
  45f34e:	xor    DWORD PTR [rax],eax
  45f350:	xor    BYTE PTR [rax],al
  45f352:	xor    eax,DWORD PTR [rax]
  45f354:	xor    eax,DWORD PTR [rax]
  45f356:	add    BYTE PTR [rdi],dl
  45f358:	jnp    0x45f35a
  45f35a:	ins    DWORD PTR es:[rdi],dx
  45f35b:	add    BYTE PTR [rbp+0x0],ah
  45f35e:	add    BYTE PTR fs:[rcx+0x0],ch
  45f362:	(bad)  
  45f363:	add    BYTE PTR [rax+0x0],dh
  45f366:	(bad)  
  45f367:	add    BYTE PTR [rax+rax*1+0x68],dh
  45f36b:	add    BYTE PTR [rbp+0x0],bh
  45f36e:	add    BYTE PTR [rbx],dl
  45f370:	jnp    0x45f372
  45f372:	movsxd eax,DWORD PTR [rax]
  45f374:	jo     0x45f376
  45f376:	jne    0x45f378
  45f378:	jo     0x45f37a
  45f37a:	(bad)  
  45f37b:	add    BYTE PTR [rax+rax*1+0x68],dh
  45f37f:	add    BYTE PTR [rbp+0x0],bh
  45f382:	add    BYTE PTR [rcx],dl
  45f384:	rex.RX add BYTE PTR [rcx+0x0],r13b
  45f388:	ins    BYTE PTR es:[rdi],dx
  45f389:	add    BYTE PTR [rbp+0x0],ah
  45f38c:	rex.WRX add BYTE PTR [rcx+0x0],r12b
  45f390:	ins    DWORD PTR es:[rdi],dx
  45f391:	add    BYTE PTR [rbp+0x0],ah
  45f394:	add    BYTE PTR [rcx],cl
  45f396:	outs   dx,DWORD PTR ds:[rsi]
  45f397:	add    BYTE PTR [rax+0x0],dh
  45f39a:	add    BYTE PTR gs:[rsi+0x0],ch
  45f39e:	add    BYTE PTR [rbx],bl
  45f3a0:	push   rbx
  45f3a1:	add    BYTE PTR [rbp+0x0],ah
  45f3a4:	(bad)  
  45f3a5:	add    BYTE PTR [rdx+0x0],dh
  45f3a8:	movsxd eax,DWORD PTR [rax]
  45f3aa:	push   0x61005000
  45f3af:	add    BYTE PTR [rax+rax*1+0x74],dh
  45f3b3:	add    BYTE PTR [rbp+0x0],ah
  45f3b6:	jb     0x45f3b8
  45f3b8:	outs   dx,BYTE PTR ds:[rsi]
  45f3b9:	add    BYTE PTR [rax],al
  45f3bb:	sbb    DWORD PTR [rax+0x0],edx
  45f3be:	jb     0x45f3c0
  45f3c0:	outs   dx,DWORD PTR ds:[rsi]
  45f3c1:	add    BYTE PTR [rdi+0x0],ah
  45f3c4:	jb     0x45f3c6
  45f3c6:	(bad)  
  45f3c7:	add    BYTE PTR [rbp+0x0],ch
  45f3ca:	rex.RX add BYTE PTR [rcx+0x0],r13b
  45f3ce:	ins    BYTE PTR es:[rdi],dx
  45f3cf:	add    BYTE PTR [rbp+0x0],ah
  45f3d2:	jae    0x45f3d4
  45f3d4:	add    BYTE PTR [rip+0x6f0046],dl        # 0xb4f420
  45f3da:	ins    BYTE PTR es:[rdi],dx
  45f3db:	add    BYTE PTR [rax+rax*1+0x65],ah
  45f3df:	add    BYTE PTR [rdx+0x0],dh
  45f3e2:	rex.WRX add BYTE PTR [rcx+0x0],r12b
  45f3e6:	ins    DWORD PTR es:[rdi],dx
  45f3e7:	add    BYTE PTR [rbp+0x0],ah
  45f3ea:	add    BYTE PTR [rbx],ah
  45f3ec:	push   rax
  45f3ed:	add    BYTE PTR [rdx+0x0],dh
  45f3f0:	outs   dx,DWORD PTR ds:[rsi]
  45f3f1:	add    BYTE PTR [rdi+0x0],ah
  45f3f4:	jb     0x45f3f6
  45f3f6:	(bad)  
  45f3f7:	add    BYTE PTR [rbp+0x0],ch
  45f3fa:	rex.RX add BYTE PTR [rcx+0x0],r13b
  45f3fe:	ins    BYTE PTR es:[rdi],dx
  45f3ff:	add    BYTE PTR [rbp+0x0],ah
  45f402:	jae    0x45f404
  45f404:	sub    BYTE PTR [rax],al
  45f406:	js     0x45f408
  45f408:	cmp    BYTE PTR [rax],al
  45f40a:	add    BYTE PTR ss:[rcx],ch
  45f40d:	add    BYTE PTR [rax],al
  45f40f:	or     eax,0x61006c
  45f414:	jns    0x45f416
  45f416:	outs   dx,DWORD PTR ds:[rsi]
  45f417:	add    BYTE PTR [rbp+0x0],dh
  45f41a:	je     0x45f41c
  45f41c:	add    BYTE PTR [rip+0x720070],bl        # 0xb7f492
  45f422:	outs   dx,DWORD PTR ds:[rsi]
  45f423:	add    BYTE PTR [rbx+0x0],ah
  45f426:	add    BYTE PTR gs:[rbx+0x0],dh
  45f42a:	jae    0x45f42c
  45f42c:	outs   dx,DWORD PTR ds:[rsi]
  45f42d:	add    BYTE PTR [rdx+0x0],dh
  45f430:	rex.WR add BYTE PTR [rcx+0x0],r12b
  45f434:	(bad)  
  45f435:	add    BYTE PTR [rbp+0x0],ah
  45f438:	ins    BYTE PTR es:[rdi],dx
  45f439:	add    BYTE PTR [rax],al
  45f43b:	sbb    DWORD PTR [rax+0x0],edi
  45f43e:	cmp    BYTE PTR [rax],al
  45f440:	add    BYTE PTR ss:[rax+0x0],dl
  45f444:	jb     0x45f446
  45f446:	outs   dx,DWORD PTR ds:[rsi]
  45f447:	add    BYTE PTR [rbx+0x0],ah
  45f44a:	add    BYTE PTR gs:[rbx+0x0],dh
  45f44e:	jae    0x45f450
  45f450:	outs   dx,DWORD PTR ds:[rsi]
  45f451:	add    BYTE PTR [rdx+0x0],dh
  45f454:	add    BYTE PTR [rdi],al
  45f456:	js     0x45f458
  45f458:	cmp    BYTE PTR [rax],al
  45f45a:	add    BYTE PTR ss:[rax],al
  45f45d:	(bad)  
  45f45e:	rex.W add BYTE PTR [rcx+0x0],spl
  45f462:	jae    0x45f464
  45f464:	pop    rax
  45f465:	add    BYTE PTR [rax],bh
  45f467:	add    BYTE PTR [rsi],dh
  45f469:	add    BYTE PTR [rbp+0x0],cl
  45f46c:	add    BYTE PTR gs:[rax+rax*1+0x69],ah
  45f471:	add    BYTE PTR [rcx+0x0],ah
  45f474:	add    BYTE PTR [rbx],cl
  45f476:	push   rsi
  45f477:	add    BYTE PTR [rcx+0x0],ah
  45f47a:	ins    BYTE PTR es:[rdi],dx
  45f47b:	add    BYTE PTR [rbp+0x0],dh
  45f47e:	add    BYTE PTR gs:[rax],al
  45f481:	(bad)  
  45f482:	rex.XB add BYTE PTR [r13+0x0],sil
  45f486:	jb     0x45f488
  45f488:	jb     0x45f48a
  45f48a:	add    BYTE PTR gs:[rsi+0x0],ch
  45f48e:	je     0x45f490
  45f490:	add    BYTE PTR [r10+0x0],sil
  45f494:	movsxd eax,DWORD PTR [rax]
  45f496:	push   0x74006900
  45f49b:	add    BYTE PTR [rbp+0x0],ah
  45f49e:	movsxd eax,DWORD PTR [rax]
  45f4a0:	je     0x45f4a2
  45f4a2:	jne    0x45f4a4
  45f4a4:	jb     0x45f4a6
  45f4a6:	add    BYTE PTR gs:[rax],al
  45f4a9:	sbb    eax,0x6d0061
  45f4ae:	add    BYTE PTR fs:[rsi],dh
  45f4b1:	add    BYTE PTR [rax+rax*1],dh
  45f4b4:	push   rax
  45f4b5:	add    BYTE PTR [rdx+0x0],dh
  45f4b8:	outs   dx,DWORD PTR ds:[rsi]
  45f4b9:	add    BYTE PTR [rbx+0x0],ah
  45f4bc:	add    BYTE PTR gs:[rbx+0x0],dh
  45f4c0:	jae    0x45f4c2
  45f4c2:	outs   dx,DWORD PTR ds:[rsi]
  45f4c3:	add    BYTE PTR [rdx+0x0],dh
  45f4c6:	add    BYTE PTR [rdi],al
  45f4c8:	js     0x45f4ca
  45f4ca:	add    BYTE PTR ss:[rax+rax*1],dh
  45f4ce:	add    BYTE PTR [rdi],dl
  45f4d0:	rex.W add BYTE PTR [rcx+0x0],spl
  45f4d4:	jae    0x45f4d6
  45f4d6:	pop    rax
  45f4d7:	add    BYTE PTR [rsi],dh
  45f4d9:	add    BYTE PTR [rax+rax*1],dh
  45f4dc:	rex.WRB add BYTE PTR [r13+0x0],r12b
  45f4e0:	add    BYTE PTR fs:[rcx+0x0],ch
  45f4e4:	(bad)  
  45f4e5:	add    BYTE PTR [rax],al
  45f4e7:	sbb    ebp,DWORD PTR [rcx+0x0]
  45f4ea:	(bad)  
  45f4eb:	add    BYTE PTR [rsi],dh
  45f4ed:	add    BYTE PTR [rax+rax*1],dh
  45f4f0:	push   rax
  45f4f1:	add    BYTE PTR [rdx+0x0],dh
  45f4f4:	outs   dx,DWORD PTR ds:[rsi]
  45f4f5:	add    BYTE PTR [rbx+0x0],ah
  45f4f8:	add    BYTE PTR gs:[rbx+0x0],dh
  45f4fc:	jae    0x45f4fe
  45f4fe:	outs   dx,DWORD PTR ds:[rsi]
  45f4ff:	add    BYTE PTR [rdx+0x0],dh
  45f502:	add    BYTE PTR [rcx],cl
  45f504:	rex.WB add BYTE PTR [r9+0x0],al
  45f508:	add    BYTE PTR ss:[rax+rax*1],dh
  45f50c:	add    BYTE PTR [rcx],bl
  45f50e:	rex.W add BYTE PTR [rcx+0x0],spl
  45f512:	jae    0x45f514
  45f514:	rex.WB add BYTE PTR [r9+0x0],al
  45f518:	add    BYTE PTR ss:[rax+rax*1],dh
  45f51c:	rex.WRB add BYTE PTR [r13+0x0],r12b
  45f520:	add    BYTE PTR fs:[rcx+0x0],ch
  45f524:	(bad)  
  45f525:	add    BYTE PTR [rax],al
  45f527:	adc    esi,DWORD PTR [rax+0x0]
  45f52a:	(bad)  
  45f52b:	add    BYTE PTR [rax+rax*1+0x68],dh
  45f52f:	add    BYTE PTR [rax+rax*1+0x61],cl
  45f533:	add    BYTE PTR [rdx+0x0],ah
  45f536:	add    BYTE PTR gs:[rax+rax*1+0x0],ch
  45f53b:	or     DWORD PTR [rax+rax*1+0x65],edx
  45f53f:	add    BYTE PTR [rax+0x0],bh
  45f542:	je     0x45f544
  45f544:	add    BYTE PTR [rcx],dl
  45f546:	rex.RX add BYTE PTR [rbp+0x0],r14b
  45f54a:	ins    BYTE PTR es:[rdi],dx
  45f54b:	add    BYTE PTR [rax+rax*1+0x50],ch
  45f54f:	add    BYTE PTR [rcx+0x0],ah
  45f552:	je     0x45f554
  45f554:	push   0x73150000
  45f559:	add    BYTE PTR [rdi+0x0],ch
  45f55c:	jne    0x45f55e
  45f55e:	jb     0x45f560
  45f560:	movsxd eax,DWORD PTR [rax]
  45f562:	add    BYTE PTR gs:[rax+0x0],dl
  45f566:	(bad)  
  45f567:	add    BYTE PTR [rax+rax*1+0x68],dh
  45f56b:	add    BYTE PTR [rax],al
  45f56d:	or     eax,0x720062
  45f572:	outs   dx,DWORD PTR ds:[rsi]
  45f573:	add    BYTE PTR [rdi+0x0],dh
  45f576:	jae    0x45f578
  45f578:	add    BYTE PTR gs:[rax],al
  45f57b:	(bad)  
  45f57c:	imul   eax,DWORD PTR [rax],0x73006e
  45f582:	je     0x45f584
  45f584:	jb     0x45f586
  45f586:	jne    0x45f588
  45f588:	movsxd eax,DWORD PTR [rax]
  45f58a:	je     0x45f58c
  45f58c:	imul   eax,DWORD PTR [rax],0x6e006f
  45f592:	jae    0x45f594
  45f594:	rex.X add BYTE PTR [rdi+0x0],bpl
  45f598:	js     0x45f59a
  45f59a:	add    BYTE PTR [rdi],dl
  45f59c:	rex.WRXB add BYTE PTR [r8+0x0],r14b
  45f5a0:	je     0x45f5a2
  45f5a2:	imul   eax,DWORD PTR [rax],0x6e006f
  45f5a8:	jae    0x45f5aa
  45f5aa:	push   rax
  45f5ab:	add    BYTE PTR [rcx+0x0],ah
  45f5ae:	add    BYTE PTR [ebp+0x0],ah
  45f5b2:	add    BYTE PTR [rip+0x61006e],dl        # 0xa6f626
  45f5b8:	jbe    0x45f5ba
  45f5ba:	imul   eax,DWORD PTR [rax],0x610067
  45f5c0:	je     0x45f5c2
  45f5c2:	imul   eax,DWORD PTR [rax],0x6e006f
  45f5c8:	add    BYTE PTR [rcx],cl
  45f5ca:	ins    BYTE PTR es:[rdi],dx
  45f5cb:	add    BYTE PTR [rdi+0x0],ch
  45f5ce:	add    BYTE PTR [edi+0x0],ch
  45f5d2:	add    BYTE PTR [rcx],bl
  45f5d4:	push   rax
  45f5d5:	add    BYTE PTR [rcx+0x0],ah
  45f5d8:	add    BYTE PTR [ebp+0x0],ah
  45f5dc:	push   rbx
  45f5dd:	add    BYTE PTR [rdi+0x0],dh
  45f5e0:	imul   eax,DWORD PTR [rax],0x630074
  45f5e6:	push   0x72006500
  45f5eb:	add    BYTE PTR [rax],al
  45f5ed:	or     ebp,DWORD PTR [rdi+0x0]
  45f5f0:	ja     0x45f5f2
  45f5f2:	outs   dx,BYTE PTR ds:[rsi]
  45f5f3:	add    BYTE PTR [rbp+0x0],ah
  45f5f6:	jb     0x45f5f8
  45f5f8:	add    BYTE PTR [rbx],bl
  45f5fa:	(bad)  
  45f5fb:	add    BYTE PTR [rbp+0x0],cl
  45f5fe:	add    BYTE PTR [r8+rax*1+0x49],r8b
  45f603:	add    BYTE PTR [rcx+0x0],al
  45f606:	push   rbx
  45f607:	add    BYTE PTR [rdi+0x0],cl
  45f60a:	push   rbp
  45f60b:	add    BYTE PTR [rdx+0x0],dl
  45f60e:	rex.XB add BYTE PTR [r13+0x0],al
  45f612:	cmp    eax,0x2f170000
  45f617:	add    BYTE PTR [rax+0x0],dl
  45f61a:	rex.XB add BYTE PTR [r13+0x0],dl
  45f61e:	push   rbx
  45f61f:	add    BYTE PTR [rdi+0x0],cl
  45f622:	push   rbp
  45f623:	add    BYTE PTR [rdx+0x0],dl
  45f626:	rex.XB add BYTE PTR [r13+0x0],al
  45f62a:	cmp    eax,0x2f150000
  45f62f:	add    BYTE PTR [rbx+0x0],al
  45f632:	push   rbp
  45f633:	add    BYTE PTR [rbx+0x0],dl
  45f636:	rex.WRXB add BYTE PTR [r13+0x0],r10b
  45f63a:	push   rdx
  45f63b:	add    BYTE PTR [rbx+0x0],al
  45f63e:	add    BYTE PTR [rip+0x4d6f0000],r15b        # 0x4db4f645
  45f645:	add    BYTE PTR [rcx+0x0],ch
  45f648:	movsxd eax,DWORD PTR [rax]
  45f64a:	jb     0x45f64c
  45f64c:	outs   dx,DWORD PTR ds:[rsi]
  45f64d:	add    BYTE PTR [rbx+0x0],dh
  45f650:	outs   dx,DWORD PTR ds:[rsi]
  45f651:	add    BYTE PTR [rsi+0x0],ah
  45f654:	je     0x45f656
  45f656:	add    BYTE PTR cs:[rbx+0x0],dl
  45f65a:	jno    0x45f65c
  45f65c:	ins    BYTE PTR es:[rdi],dx
  45f65d:	add    BYTE PTR [rbx+0x0],dl
  45f660:	add    BYTE PTR gs:[rdx+0x0],dh
  45f664:	jbe    0x45f666
  45f666:	add    BYTE PTR gs:[rdx+0x0],dh
  45f66a:	add    BYTE PTR cs:[rbx+0x0],al
  45f66e:	outs   dx,DWORD PTR ds:[rsi]
  45f66f:	add    BYTE PTR [rsi+0x0],ch
  45f672:	data16 add BYTE PTR [rcx+0x0],ch
  45f676:	add    BYTE PTR [ebp+0x0],dh
  45f67a:	jb     0x45f67c
  45f67c:	(bad)  
  45f67d:	add    BYTE PTR [rax+rax*1+0x69],dh
  45f681:	add    BYTE PTR [rdi+0x0],ch
  45f684:	outs   dx,BYTE PTR ds:[rsi]
  45f685:	add    BYTE PTR [rsi],ch
  45f687:	add    BYTE PTR [rax+rax*1+0x61],cl
  45f68b:	add    BYTE PTR [rsi+0x0],ch
  45f68e:	add    BYTE PTR fs:[rcx+0x0],ch
  45f692:	outs   dx,BYTE PTR ds:[rsi]
  45f693:	add    BYTE PTR [rdi+0x0],ah
  45f696:	push   rax
  45f697:	add    BYTE PTR [rcx+0x0],ah
  45f69a:	add    BYTE PTR [ebp+0x0],ah
  45f69e:	add    BYTE PTR cs:[rdx+0x0],dl
  45f6a2:	add    BYTE PTR gs:[rbx+0x0],dh
  45f6a6:	outs   dx,DWORD PTR ds:[rsi]
  45f6a7:	add    BYTE PTR [rbp+0x0],dh
  45f6aa:	jb     0x45f6ac
  45f6ac:	movsxd eax,DWORD PTR [rax]
  45f6ae:	add    BYTE PTR gs:[rbx+0x0],dh
  45f6b2:	add    BYTE PTR [rip+0x6f0043],ah        # 0xb4f6fb
  45f6b8:	outs   dx,BYTE PTR ds:[rsi]
  45f6b9:	add    BYTE PTR [rsi+0x0],ah
  45f6bc:	imul   eax,DWORD PTR [rax],0x750067
  45f6c2:	jb     0x45f6c4
  45f6c4:	(bad)  
  45f6c5:	add    BYTE PTR [rax+rax*1+0x69],dh
  45f6c9:	add    BYTE PTR [rdi+0x0],ch
  45f6cc:	outs   dx,BYTE PTR ds:[rsi]
  45f6cd:	add    BYTE PTR [rcx+0x0],cl
  45f6d0:	ins    DWORD PTR es:[rdi],dx
  45f6d1:	add    BYTE PTR [rcx+0x0],ah
  45f6d4:	add    BYTE PTR [ebp+0x0],ah
  45f6d8:	add    BYTE PTR [rcx],ah
  45f6da:	rex.RXB add BYTE PTR [r13+0x0],r12b
  45f6de:	outs   dx,BYTE PTR ds:[rsi]
  45f6df:	add    BYTE PTR [rbp+0x0],ah
  45f6e2:	jb     0x45f6e4
  45f6e4:	(bad)  
  45f6e5:	add    BYTE PTR [rax+rax*1+0x52],ch
  45f6e9:	add    BYTE PTR [rbp+0x0],ah
  45f6ec:	jae    0x45f6ee
  45f6ee:	outs   dx,DWORD PTR ds:[rsi]
  45f6ef:	add    BYTE PTR [rbp+0x0],dh
  45f6f2:	jb     0x45f6f4
  45f6f4:	movsxd eax,DWORD PTR [rax]
  45f6f6:	add    BYTE PTR gs:[rbx+0x0],dh
  45f6fa:	add    BYTE PTR [rcx],cl
  45f6fc:	rex.W add BYTE PTR [rbp+0x0],spl
  45f700:	ins    BYTE PTR es:[rdi],dx
  45f701:	add    BYTE PTR [rax+0x0],dh
  45f704:	add    BYTE PTR [rip+0x650048],bl        # 0xaaf752
  45f70a:	ins    BYTE PTR es:[rdi],dx
  45f70b:	add    BYTE PTR [rax+0x0],dh
  45f70e:	rex.X add BYTE PTR [rdi+0x0],bpl
  45f712:	outs   dx,DWORD PTR ds:[rsi]
  45f713:	add    BYTE PTR [rbx+0x0],ch
  45f716:	rex.WRXB add BYTE PTR [r14+0x0],r13b
  45f71a:	ins    BYTE PTR es:[rdi],dx
  45f71b:	add    BYTE PTR [rcx+0x0],ch
  45f71e:	outs   dx,BYTE PTR ds:[rsi]
  45f71f:	add    BYTE PTR [rbp+0x0],ah
  45f722:	add    BYTE PTR [rbx],dl
  45f724:	rex.W add BYTE PTR [rcx+0x0],dil
  45f728:	jo     0x45f72a
  45f72a:	add    BYTE PTR gs:[rdx+0x0],dh
  45f72e:	rex.WR add BYTE PTR [rcx+0x0],r13b
  45f732:	outs   dx,BYTE PTR ds:[rsi]
  45f733:	add    BYTE PTR [rbx+0x0],ch
  45f736:	add    BYTE PTR [rdi],ch
  45f738:	rex.WB add BYTE PTR [r14+0x0],bpl
  45f73c:	jae    0x45f73e
  45f73e:	je     0x45f740
  45f740:	(bad)  
  45f741:	add    BYTE PTR [rax+rax*1+0x6c],ch
  45f745:	add    BYTE PTR [rdi+0x0],dl
  45f748:	imul   eax,DWORD PTR [rax],0x680074
  45f74e:	outs   dx,DWORD PTR ds:[rsi]
  45f74f:	add    BYTE PTR [rbp+0x0],dh
  45f752:	je     0x45f754
  45f754:	rex.XB add BYTE PTR [r15+0x0],bpl
  45f758:	outs   dx,BYTE PTR ds:[rsi]
  45f759:	add    BYTE PTR [rsi+0x0],ah
  45f75c:	imul   eax,DWORD PTR [rax],0x750067
  45f762:	jb     0x45f764
  45f764:	add    BYTE PTR gs:[rax],al
  45f767:	and    ecx,DWORD PTR [rcx+0x0]
  45f76a:	outs   dx,BYTE PTR ds:[rsi]
  45f76b:	add    BYTE PTR [rax+rax*1+0x65],dh
  45f76f:	add    BYTE PTR [rdx+0x0],dh
  45f772:	outs   dx,BYTE PTR ds:[rsi]
  45f773:	add    BYTE PTR [rbp+0x0],ah
  45f776:	je     0x45f778
  45f778:	push   rdx
  45f779:	add    BYTE PTR [rbp+0x0],ah
  45f77c:	jae    0x45f77e
  45f77e:	outs   dx,DWORD PTR ds:[rsi]
  45f77f:	add    BYTE PTR [rbp+0x0],dh
  45f782:	jb     0x45f784
  45f784:	movsxd eax,DWORD PTR [rax]
  45f786:	add    BYTE PTR gs:[rbx+0x0],dh
  45f78a:	add    BYTE PTR [rdi],bl
  45f78c:	ins    BYTE PTR es:[rdi],dx
  45f78d:	add    BYTE PTR [rcx+0x0],ah
  45f790:	jne    0x45f792
  45f792:	outs   dx,BYTE PTR ds:[rsi]
  45f793:	add    BYTE PTR [rbx+0x0],ah
  45f796:	push   0x75007300
  45f79b:	add    BYTE PTR [rax+0x0],dh
  45f79e:	add    BYTE PTR gs:[rdx+0x0],dh
  45f7a2:	add    BYTE PTR [edx+0x0],dh
  45f7a6:	imul   eax,DWORD PTR [rax],0x1d000064
  45f7ac:	rex.WR add BYTE PTR [rdi+0x0],r13b
  45f7b0:	movsxd eax,DWORD PTR [rax]
  45f7b2:	(bad)  
  45f7b3:	add    BYTE PTR [rax+rax*1+0x52],ch
  45f7b7:	add    BYTE PTR [rbp+0x0],ah
  45f7ba:	jae    0x45f7bc
  45f7bc:	outs   dx,DWORD PTR ds:[rsi]
  45f7bd:	add    BYTE PTR [rbp+0x0],dh
  45f7c0:	jb     0x45f7c2
  45f7c2:	movsxd eax,DWORD PTR [rax]
  45f7c4:	add    BYTE PTR gs:[rbx+0x0],dh
  45f7c8:	add    BYTE PTR [rdi],dl
  45f7ca:	rex.WRB add BYTE PTR [r9+0x0],r12b
  45f7ce:	imul   eax,DWORD PTR [rax],0x74006e
  45f7d4:	add    BYTE PTR gs:[rsi+0x0],ch
  45f7d8:	(bad)  
  45f7d9:	add    BYTE PTR [rsi+0x0],ch
  45f7dc:	movsxd eax,DWORD PTR [rax]
  45f7de:	add    BYTE PTR gs:[rax],al
  45f7e1:	cmp    eax,0x61004d
  45f7e6:	imul   eax,DWORD PTR [rax],0x74006e
  45f7ec:	add    BYTE PTR gs:[rsi+0x0],ch
  45f7f0:	(bad)  
  45f7f1:	add    BYTE PTR [rsi+0x0],ch
  45f7f4:	movsxd eax,DWORD PTR [rax]
  45f7f6:	add    BYTE PTR gs:[rcx+0x0],al
  45f7fa:	add    BYTE PTR fs:[rax+rax*1+0x4f],ah
  45f7ff:	add    BYTE PTR [rdx+0x0],dh
  45f802:	push   rdx
  45f803:	add    BYTE PTR [rbp+0x0],ah
  45f806:	ins    DWORD PTR es:[rdi],dx
  45f807:	add    BYTE PTR [rdi+0x0],ch
  45f80a:	jbe    0x45f80c
  45f80c:	add    BYTE PTR gs:[rsi+0x0],al
  45f810:	add    BYTE PTR gs:[rcx+0x0],ah
  45f814:	je     0x45f816
  45f816:	jne    0x45f818
  45f818:	jb     0x45f81a
  45f81a:	add    BYTE PTR gs:[rbx+0x0],dh
  45f81e:	add    BYTE PTR [rbx],ah
  45f820:	rex.WRB add BYTE PTR [r9+0x0],r12b
  45f824:	imul   eax,DWORD PTR [rax],0x74006e
  45f82a:	add    BYTE PTR gs:[rsi+0x0],ch
  45f82e:	(bad)  
  45f82f:	add    BYTE PTR [rsi+0x0],ch
  45f832:	movsxd eax,DWORD PTR [rax]
  45f834:	add    BYTE PTR gs:[rdx+0x0],dl
  45f838:	add    BYTE PTR gs:[rax+0x0],dh
  45f83c:	(bad)  
  45f83d:	add    BYTE PTR [rcx+0x0],ch
  45f840:	jb     0x45f842
  45f842:	add    BYTE PTR [rbx],dh
  45f844:	rex.WRB add BYTE PTR [r9+0x0],r12b
  45f848:	imul   eax,DWORD PTR [rax],0x74006e
  45f84e:	add    BYTE PTR gs:[rsi+0x0],ch
  45f852:	(bad)  
  45f853:	add    BYTE PTR [rsi+0x0],ch
  45f856:	movsxd eax,DWORD PTR [rax]
  45f858:	add    BYTE PTR gs:[rbp+0x0],dl
  45f85c:	jo     0x45f85e
  45f85e:	add    BYTE PTR [edx+0x0],dh
  45f862:	(bad)  
  45f863:	add    BYTE PTR [rax+rax*1+0x65],ah
  45f867:	add    BYTE PTR [rbp+0x0],al
  45f86a:	add    BYTE PTR fs:[rcx+0x0],ch
  45f86e:	je     0x45f870
  45f870:	imul   eax,DWORD PTR [rax],0x6e006f
  45f876:	add    BYTE PTR [rcx],ah
  45f878:	push   rdx
  45f879:	add    BYTE PTR [rbp+0x0],ah
  45f87c:	(bad)  
  45f87d:	add    BYTE PTR [rax+rax*1+0x52],ah
  45f881:	add    BYTE PTR [rbp+0x0],ah
  45f884:	ins    BYTE PTR es:[rdi],dx
  45f885:	add    BYTE PTR [rbp+0x0],ah
  45f888:	(bad)  
  45f889:	add    BYTE PTR [rbx+0x0],dh
  45f88c:	add    BYTE PTR gs:[rsi+0x0],cl
  45f890:	outs   dx,DWORD PTR ds:[rsi]
  45f891:	add    BYTE PTR [rax+rax*1+0x65],dh
  45f895:	add    BYTE PTR [rbx+0x0],dh
  45f898:	add    BYTE PTR [rdi],ah
  45f89a:	push   rdx
  45f89b:	add    BYTE PTR [rbp+0x0],ah
  45f89e:	movsxd eax,DWORD PTR [rax]
  45f8a0:	outs   dx,DWORD PTR ds:[rsi]
  45f8a1:	add    BYTE PTR [rsi+0x0],dh
  45f8a4:	add    BYTE PTR gs:[rdx+0x0],dh
  45f8a8:	rex.WB add BYTE PTR [r14+0x0],bpl
  45f8ac:	jae    0x45f8ae
  45f8ae:	je     0x45f8b0
  45f8b0:	(bad)  
  45f8b1:	add    BYTE PTR [rax+rax*1+0x6c],ch
  45f8b5:	add    BYTE PTR [rcx+0x0],ah
  45f8b8:	je     0x45f8ba
  45f8ba:	imul   eax,DWORD PTR [rax],0x6e006f
  45f8c0:	add    BYTE PTR [rcx],bl
  45f8c2:	jb     0x45f8c4
  45f8c4:	add    BYTE PTR gs:[rax+rax*1+0x65],ch
  45f8c9:	add    BYTE PTR [rcx+0x0],ah
  45f8cc:	jae    0x45f8ce
  45f8ce:	add    BYTE PTR gs:[rsi+0x0],ch
  45f8d2:	outs   dx,DWORD PTR ds:[rsi]
  45f8d3:	add    BYTE PTR [rax+rax*1+0x65],dh
  45f8d7:	add    BYTE PTR [rbx+0x0],dh
  45f8da:	add    BYTE PTR [rcx],dl
  45f8dc:	jae    0x45f8de
  45f8de:	add    BYTE PTR gs:[rbx+0x0],ah
  45f8e2:	jne    0x45f8e4
  45f8e4:	jb     0x45f8e6
  45f8e6:	imul   eax,DWORD PTR [rax],0x790074
  45f8ec:	add    BYTE PTR [rbx],cl
  45f8ee:	push   rsp
  45f8ef:	add    BYTE PTR [rdi+0x0],ch
  45f8f2:	outs   dx,DWORD PTR ds:[rsi]
  45f8f3:	add    BYTE PTR [rax+rax*1+0x73],ch
  45f8f7:	add    BYTE PTR [rax],al
  45f8f9:	sbb    edx,DWORD PTR [rbp+0x0]
  45f8fc:	outs   dx,BYTE PTR ds:[rsi]
  45f8fd:	add    BYTE PTR [rcx+0x0],ch
  45f900:	outs   dx,BYTE PTR ds:[rsi]
  45f901:	add    BYTE PTR [rbx+0x0],dh
  45f904:	je     0x45f906
  45f906:	(bad)  
  45f907:	add    BYTE PTR [rax+rax*1+0x6c],ch
  45f90b:	add    BYTE PTR [rcx+0x0],cl
  45f90e:	movsxd eax,DWORD PTR [rax]
  45f910:	outs   dx,DWORD PTR ds:[rsi]
  45f911:	add    BYTE PTR [rsi+0x0],ch
  45f914:	add    BYTE PTR [rcx],dh
  45f916:	push   rbp
  45f917:	add    BYTE PTR [rax+0x0],dh
  45f91a:	add    BYTE PTR [edx+0x0],dh
  45f91e:	(bad)  
  45f91f:	add    BYTE PTR [rax+rax*1+0x65],ah
  45f923:	add    BYTE PTR [rcx+0x0],al
  45f926:	jo     0x45f928
  45f928:	jo     0x45f92a
  45f92a:	ins    BYTE PTR es:[rdi],dx
  45f92b:	add    BYTE PTR [rcx+0x0],bh
  45f92e:	push   rbx
  45f92f:	add    BYTE PTR [rbp+0x0],ah
  45f932:	jb     0x45f934
  45f934:	jbe    0x45f936
  45f936:	imul   eax,DWORD PTR [rax],0x650063
  45f93c:	push   rax
  45f93d:	add    BYTE PTR [rcx+0x0],ah
  45f940:	movsxd eax,DWORD PTR [rax]
  45f942:	imul   eax,DWORD PTR [rax],0x73
  45f945:	add    BYTE PTR [rax],al
  45f947:	(bad)  
  45f948:	push   rbp
  45f949:	add    BYTE PTR [rax+0x0],dh
  45f94c:	add    BYTE PTR [edx+0x0],dh
  45f950:	(bad)  
  45f951:	add    BYTE PTR [rax+rax*1+0x65],ah
  45f955:	add    BYTE PTR [rbp+0x0],cl
  45f958:	(bad)  
  45f959:	add    BYTE PTR [rdx+0x0],ch
  45f95c:	outs   dx,DWORD PTR ds:[rsi]
  45f95d:	add    BYTE PTR [rdx+0x0],dh
  45f960:	push   rbp
  45f961:	add    BYTE PTR [rax+0x0],dh
  45f964:	add    BYTE PTR [edx+0x0],dh
  45f968:	(bad)  
  45f969:	add    BYTE PTR [rax+rax*1+0x65],ah
  45f96d:	add    BYTE PTR [rax],al
  45f96f:	adc    ecx,DWORD PTR [rax+0x0]
  45f972:	add    BYTE PTR gs:[rax+rax*1+0x70],ch
  45f977:	add    BYTE PTR [rax+rax*1+0x6f],dl
  45f97b:	add    BYTE PTR [rax+0x0],dh
  45f97e:	imul   eax,DWORD PTR [rax],0xb000063
  45f984:	push   0x6d007400
  45f989:	add    BYTE PTR [rax+rax*1+0x5c],ch
  45f98d:	add    BYTE PTR [rax],al
  45f98f:	or     DWORD PTR [rsi],ebp
  45f991:	add    BYTE PTR [rax+0x0],ch
  45f994:	je     0x45f996
  45f996:	ins    DWORD PTR es:[rdi],dx
  45f997:	add    BYTE PTR [rax],al
  45f999:	or     DWORD PTR [rdx+0x0],esp
  45f99c:	outs   dx,DWORD PTR ds:[rsi]
  45f99d:	add    BYTE PTR [rax+rax*1+0x79],ah
  45f9a1:	add    BYTE PTR [rax],al
  45f9a3:	sbb    DWORD PTR [rbx+0x0],edx
  45f9a6:	je     0x45f9a8
  45f9a8:	(bad)  
  45f9a9:	add    BYTE PTR [rsi+0x0],ch
  45f9ac:	add    BYTE PTR fs:[rcx+0x0],ah
  45f9b0:	jb     0x45f9b2
  45f9b2:	add    BYTE PTR fs:[rax+0x0],dl
  45f9b6:	(bad)  
  45f9b7:	add    BYTE PTR [rdi+0x0],ah
  45f9ba:	add    BYTE PTR gs:[rax],al
  45f9bd:	adc    edx,DWORD PTR [rbx+0x0]
  45f9c0:	add    BYTE PTR gs:[rax+0x0],dh
  45f9c4:	(bad)  
  45f9c5:	add    BYTE PTR [rdx+0x0],dh
  45f9c8:	(bad)  
  45f9c9:	add    BYTE PTR [rax+rax*1+0x6f],dh
  45f9cd:	add    BYTE PTR [rdx+0x0],dh
  45f9d0:	add    BYTE PTR [rbx],cl
  45f9d2:	push   rax
  45f9d3:	add    BYTE PTR [rcx+0x0],ah
  45f9d6:	add    BYTE PTR [ebp+0x0],ah
  45f9da:	jae    0x45f9dc
  45f9dc:	add    BYTE PTR [rdi],bl
  45f9de:	push   rdx
  45f9df:	add    BYTE PTR [rbp+0x0],ah
  45f9e2:	jae    0x45f9e4
  45f9e4:	outs   dx,DWORD PTR ds:[rsi]
  45f9e5:	add    BYTE PTR [rbp+0x0],dh
  45f9e8:	jb     0x45f9ea
  45f9ea:	movsxd eax,DWORD PTR [rax]
  45f9ec:	add    BYTE PTR gs:[rbp+0x0],cl
  45f9f0:	(bad)  
  45f9f1:	add    BYTE PTR [rsi+0x0],ch
  45f9f4:	(bad)  
  45f9f5:	add    BYTE PTR [rdi+0x0],ah
  45f9f8:	add    BYTE PTR gs:[rdx+0x0],dh
  45f9fc:	add    BYTE PTR [rbx],ch
  45f9fe:	push   rbx
  45f9ff:	add    BYTE PTR [rax+rax*1+0x72],dh
  45fa03:	add    BYTE PTR [rcx+0x0],ch
  45fa06:	outs   dx,BYTE PTR ds:[rsi]
  45fa07:	add    BYTE PTR [rdi+0x0],ah
  45fa0a:	push   rdx
  45fa0b:	add    BYTE PTR [rbp+0x0],ah
  45fa0e:	jae    0x45fa10
  45fa10:	outs   dx,DWORD PTR ds:[rsi]
  45fa11:	add    BYTE PTR [rbp+0x0],dh
  45fa14:	jb     0x45fa16
  45fa16:	movsxd eax,DWORD PTR [rax]
  45fa18:	add    BYTE PTR gs:[rbp+0x0],cl
  45fa1c:	(bad)  
  45fa1d:	add    BYTE PTR [rsi+0x0],ch
  45fa20:	(bad)  
  45fa21:	add    BYTE PTR [rdi+0x0],ah
  45fa24:	add    BYTE PTR gs:[rdx+0x0],dh
  45fa28:	add    BYTE PTR [rcx],cl
  45fa2a:	push   rax
  45fa2b:	add    BYTE PTR [rcx+0x0],ah
  45fa2e:	add    BYTE PTR [ebp+0x0],ah
  45fa32:	add    BYTE PTR [rcx],cl
  45fa34:	push   rsp
  45fa35:	add    BYTE PTR [rcx+0x0],bh
  45fa38:	jo     0x45fa3a
  45fa3a:	add    BYTE PTR gs:[rax],al
  45fa3d:	or     eax,0x650048
  45fa42:	(bad)  
  45fa43:	add    BYTE PTR [rax+rax*1+0x65],ah
  45fa47:	add    BYTE PTR [rdx+0x0],dh
  45fa4a:	add    BYTE PTR [rcx],cl
  45fa4c:	rex.WB add BYTE PTR [r8+rax*1+0x65],sil
  45fa51:	add    BYTE PTR [rbp+0x0],ch
  45fa54:	add    BYTE PTR [rdi],dl
  45fa56:	add    BYTE PTR [rbp+0x0],r12b
  45fa5a:	jae    0x45fa5c
  45fa5c:	movsxd eax,DWORD PTR [rax]
  45fa5e:	jb     0x45fa60
  45fa60:	imul   eax,DWORD PTR [rax],0x740070
  45fa66:	imul   eax,DWORD PTR [rax],0x6e006f
  45fa6c:	add    BYTE PTR [rcx],cl
  45fa6e:	rex.WB add BYTE PTR [r11+0x0],spl
  45fa72:	outs   dx,DWORD PTR ds:[rsi]
  45fa73:	add    BYTE PTR [rsi+0x0],ch
  45fa76:	add    BYTE PTR [rdi],cl
  45fa78:	rex.XB add BYTE PTR [r15+0x0],bpl
  45fa7c:	ins    DWORD PTR es:[rdi],dx
  45fa7d:	add    BYTE PTR [rbp+0x0],ch
  45fa80:	(bad)  
  45fa81:	add    BYTE PTR [rsi+0x0],ch
  45fa84:	add    BYTE PTR fs:[rax],al
  45fa87:	add    ebp,DWORD PTR [rsi]
  45fa89:	add    BYTE PTR [rax],al
  45fa8b:	adc    eax,0x650052
  45fa90:	jae    0x45fa92
  45fa92:	outs   dx,DWORD PTR ds:[rsi]
  45fa93:	add    BYTE PTR [rbp+0x0],dh
  45fa96:	jb     0x45fa98
  45fa98:	movsxd eax,DWORD PTR [rax]
  45fa9a:	add    BYTE PTR gs:[rcx+0x0],cl
  45fa9e:	add    BYTE PTR fs:[rax],al
  45faa1:	outs   dx,DWORD PTR ds:[rsi]
  45faa2:	rex.WRB add BYTE PTR [r9+0x0],r13b
  45faa6:	movsxd eax,DWORD PTR [rax]
  45faa8:	jb     0x45faaa
  45faaa:	outs   dx,DWORD PTR ds:[rsi]
  45faab:	add    BYTE PTR [rbx+0x0],dh
  45faae:	outs   dx,DWORD PTR ds:[rsi]
  45faaf:	add    BYTE PTR [rsi+0x0],ah
  45fab2:	je     0x45fab4
  45fab4:	add    BYTE PTR cs:[rbx+0x0],dl
  45fab8:	jno    0x45faba
  45faba:	ins    BYTE PTR es:[rdi],dx
  45fabb:	add    BYTE PTR [rbx+0x0],dl
  45fabe:	add    BYTE PTR gs:[rdx+0x0],dh
  45fac2:	jbe    0x45fac4
  45fac4:	add    BYTE PTR gs:[rdx+0x0],dh
  45fac8:	add    BYTE PTR cs:[rbx+0x0],al
  45facc:	outs   dx,DWORD PTR ds:[rsi]
  45facd:	add    BYTE PTR [rsi+0x0],ch
  45fad0:	data16 add BYTE PTR [rcx+0x0],ch
  45fad4:	add    BYTE PTR [ebp+0x0],dh
  45fad8:	jb     0x45fada
  45fada:	(bad)  
  45fadb:	add    BYTE PTR [rax+rax*1+0x69],dh
  45fadf:	add    BYTE PTR [rdi+0x0],ch
  45fae2:	outs   dx,BYTE PTR ds:[rsi]
  45fae3:	add    BYTE PTR [rsi],ch
  45fae5:	add    BYTE PTR [rax+rax*1+0x61],cl
  45fae9:	add    BYTE PTR [rsi+0x0],ch
  45faec:	add    BYTE PTR fs:[rcx+0x0],ch
  45faf0:	outs   dx,BYTE PTR ds:[rsi]
  45faf1:	add    BYTE PTR [rdi+0x0],ah
  45faf4:	push   rax
  45faf5:	add    BYTE PTR [rcx+0x0],ah
  45faf8:	add    BYTE PTR [ebp+0x0],ah
  45fafc:	add    BYTE PTR cs:[rax+0x0],dl
  45fb00:	(bad)  
  45fb01:	add    BYTE PTR [rdi+0x0],ah
  45fb04:	add    BYTE PTR gs:[rbx+0x0],dh
  45fb08:	add    BYTE PTR cs:[rax+0x0],bh
  45fb0c:	ins    DWORD PTR es:[rdi],dx
  45fb0d:	add    BYTE PTR [rax+rax*1+0x0],ch
  45fb11:	add    BYTE PTR [rax],al
  45fb13:	add    BYTE PTR [rdx-0x60ac46e1],dl
  45fb19:	imul   eax,ecx,0x4b
  45fb1c:	nop
  45fb1d:	rex.WX ja 0x45fb02
  45fb20:	fdiv   QWORD PTR [rcx+0x5a]
  45fb23:	jns    0x45fb25
  45fb25:	or     BYTE PTR [rdi+0x19565c7a],dh
  45fb2b:	xor    al,0xe0
  45fb2d:	mov    DWORD PTR [rsi],eax
  45fb2f:	adc    eax,0x12013112
  45fb34:	pop    rsp
  45fb35:	add    al,BYTE PTR [rsi]
  45fb37:	(bad)  
  45fb38:	adc    BYTE PTR [rcx],dh
  45fb3a:	add    BYTE PTR [rax],dh
  45fb3c:	add    BYTE PTR [rsi],ch
  45fb3e:	add    BYTE PTR [rax],dh
  45fb40:	add    BYTE PTR [rsi],ch
  45fb42:	add    BYTE PTR [rax],dh
  45fb44:	add    BYTE PTR [rsi],ch
  45fb46:	add    BYTE PTR [rax],dh
  45fb48:	add    BYTE PTR [rdx],al
  45fb4a:	(bad)  
  45fb4b:	or     BYTE PTR [rdx+rcx*1],al
  45fb4e:	add    BYTE PTR [rax],al
  45fb50:	add    BYTE PTR [rbx+riz*8],al
  45fb53:	or     DWORD PTR [rax],eax
  45fb55:	add    BYTE PTR [rax],cl
  45fb57:	xor    DWORD PTR [rax],eax
  45fb59:	xor    BYTE PTR [rax],al
  45fb5b:	add    BYTE PTR cs:[rax],dh
  45fb5e:	add    BYTE PTR [rax],ch
  45fb60:	rex.WRB add BYTE PTR [r9+0x0],r13b
  45fb64:	movsxd eax,DWORD PTR [rax]
  45fb66:	jb     0x45fb68
  45fb68:	outs   dx,DWORD PTR ds:[rsi]
  45fb69:	add    BYTE PTR [rbx+0x0],dh
  45fb6c:	outs   dx,DWORD PTR ds:[rsi]
  45fb6d:	add    BYTE PTR [rsi+0x0],ah
  45fb70:	je     0x45fb72
  45fb72:	and    BYTE PTR [rax],al
  45fb74:	push   rbx
  45fb75:	add    BYTE PTR [rcx+0x0],dl
  45fb78:	rex.WR add BYTE PTR [rax],r12b
  45fb7b:	add    BYTE PTR [rbx+0x0],dl
  45fb7e:	add    BYTE PTR gs:[rdx+0x0],dh
  45fb82:	jbe    0x45fb84
  45fb84:	add    BYTE PTR gs:[rdx+0x0],dh
  45fb88:	xor    cl,BYTE PTR [rbp+0x0]
  45fb8b:	imul   eax,DWORD PTR [rax],0x720063
  45fb91:	outs   dx,DWORD PTR ds:[rsi]
  45fb92:	add    BYTE PTR [rbx+0x0],dh
  45fb95:	outs   dx,DWORD PTR ds:[rsi]
  45fb96:	add    BYTE PTR [rsi+0x0],ah
  45fb99:	je     0x45fb9b
  45fb9b:	and    BYTE PTR [rax],al
  45fb9d:	push   rbx
  45fb9e:	add    BYTE PTR [rcx+0x0],dl
  45fba1:	rex.WR add BYTE PTR [rax],r12b
  45fba4:	add    BYTE PTR [rbx+0x0],dl
  45fba7:	add    BYTE PTR gs:[rdx+0x0],dh
  45fbab:	jbe    0x45fbad
  45fbad:	add    BYTE PTR gs:[rdx+0x0],dh
  45fbb1:	and    BYTE PTR [rax],al
  45fbb3:	xor    al,BYTE PTR [rax]
  45fbb5:	xor    BYTE PTR [rax],al
  45fbb7:	xor    BYTE PTR [rax],al
  45fbb9:	cmp    BYTE PTR [rax],al
  45fbbb:	(bad)  
  45fbbc:	xor    DWORD PTR [rax],eax
  45fbbe:	xor    BYTE PTR [rax],al
  45fbc0:	xor    BYTE PTR [rax],al
  45fbc2:	or     dh,BYTE PTR [rbx+0x0]
  45fbc5:	jno    0x45fbc7
  45fbc7:	ins    BYTE PTR es:[rdi],dx
  45fbc8:	add    BYTE PTR [rcx],dh
  45fbca:	add    BYTE PTR [rax],dh
  45fbcc:	add    BYTE PTR [rdx],dh
  45fbce:	push   rbx
  45fbcf:	add    BYTE PTR [rcx+0x0],dl
  45fbd2:	rex.WR add BYTE PTR [rbx+0x0],r10b
  45fbd6:	add    BYTE PTR gs:[rdx+0x0],dh
  45fbda:	jbe    0x45fbdc
  45fbdc:	add    BYTE PTR gs:[rdx+0x0],dh
  45fbe0:	rex.X add BYTE PTR [rdi+0x0],bpl
  45fbe4:	outs   dx,DWORD PTR ds:[rsi]
  45fbe5:	add    BYTE PTR [rbx+0x0],ch
  45fbe8:	jae    0x45fbea
  45fbea:	rex.WRXB add BYTE PTR [r14+0x0],r13b
  45fbee:	ins    BYTE PTR es:[rdi],dx
  45fbef:	add    BYTE PTR [rcx+0x0],ch
  45fbf2:	outs   dx,BYTE PTR ds:[rsi]
  45fbf3:	add    BYTE PTR [rbp+0x0],ah
  45fbf6:	add    BYTE PTR cs:[rcx],dh
  45fbf9:	add    BYTE PTR [rax],dh
  45fbfb:	add    BYTE PTR [rsi],ch
  45fbfd:	add    BYTE PTR [rax],dh
  45fbff:	add    BYTE PTR [rsi],cl
  45fc01:	push   rdx
  45fc02:	add    BYTE PTR [rbp+0x0],ah
  45fc05:	ins    BYTE PTR es:[rdi],dx
  45fc06:	add    BYTE PTR [rbp+0x0],ah
  45fc09:	(bad)  
  45fc0a:	add    BYTE PTR [rbx+0x0],dh
  45fc0d:	add    BYTE PTR gs:[rdx],al
  45fc10:	(bad)  
  45fc11:	or     DWORD PTR [rsp+rsi*4],eax
  45fc14:	add    BYTE PTR [rax],al
  45fc16:	add    BYTE PTR [rax+rax*1],al
  45fc19:	add    BYTE PTR [rax],al
  45fc1b:	add    BYTE PTR [rdx],ch
  45fc1d:	ins    DWORD PTR es:[rdi],dx
  45fc1e:	add    BYTE PTR [rbx+0x0],dh
  45fc21:	sub    eax,0x65006800
  45fc26:	add    BYTE PTR [rax+rax*1+0x70],ch
  45fc2a:	add    BYTE PTR [rdx],bh
  45fc2c:	add    BYTE PTR [rdi],ch
  45fc2e:	add    BYTE PTR [rdi],ch
  45fc30:	add    BYTE PTR [rbp+0x0],cl
  45fc33:	push   rbx
  45fc34:	add    BYTE PTR [rsi],ch
  45fc36:	add    BYTE PTR [rsi+0x0],dl
  45fc39:	push   rbx
  45fc3a:	add    BYTE PTR [rbx+0x0],al
  45fc3d:	rex.XB add BYTE PTR [r14],bpl
  45fc40:	add    BYTE PTR [rsi+0x0],dh
  45fc43:	cmp    DWORD PTR [rax],eax
  45fc45:	xor    BYTE PTR [rax],al
  45fc47:	add    eax,DWORD PTR [rax]
  45fc49:	add    BYTE PTR [rsi],cl
  45fc4b:	add    ecx,DWORD PTR [rax]
  45fc4d:	add    BYTE PTR [rsi],cl
  45fc4f:	add    esp,DWORD PTR [rax]
  45fc51:	add    BYTE PTR [rcx],al
  45fc53:	add    al,0x0
  45fc55:	add    BYTE PTR [rdx],dl
  45fc57:	cmp    DWORD PTR [rip+0x12010100],eax        # 0x1246fd5d
  45fc5d:	cmp    DWORD PTR [rax+rax*1],eax
  45fc60:	add    DWORD PTR [rsi],ecx
  45fc62:	(bad)  
  45fc63:	add    al,0x8
  45fc65:	add    BYTE PTR [rdx],dl
  45fc67:	cmp    DWORD PTR [rdx],ecx
  45fc69:	push   rsp
  45fc6a:	add    BYTE PTR [rcx+0x0],ch
  45fc6d:	je     0x45fc6f
  45fc6f:	ins    BYTE PTR es:[rdi],dx
  45fc70:	add    BYTE PTR [rbp+0x0],ah
  45fc73:	(bad)  
  45fc74:	rex.WRXB add BYTE PTR [r8+0x0],r14b
  45fc78:	je     0x45fc7a
  45fc7a:	imul   eax,DWORD PTR [rax],0x6e006f
  45fc80:	jae    0x45fc82
  45fc82:	sbb    al,0x42
  45fc84:	add    BYTE PTR [rdx+0x0],dh
  45fc87:	outs   dx,DWORD PTR ds:[rsi]
  45fc88:	add    BYTE PTR [rdi+0x0],dh
  45fc8b:	jae    0x45fc8d
  45fc8d:	add    BYTE PTR gs:[rsi+0x0],al
  45fc91:	outs   dx,DWORD PTR ds:[rsi]
  45fc92:	add    BYTE PTR [rdx+0x0],dh
  45fc95:	rex.WRB add BYTE PTR [r13+0x0],r12b
  45fc99:	add    BYTE PTR fs:[rcx+0x0],ch
  45fc9d:	(bad)  
  45fc9e:	add    BYTE PTR [rsi],ch
  45fca0:	rex.WRXB add BYTE PTR [r8+0x0],r14b
  45fca4:	je     0x45fca6
  45fca6:	imul   eax,DWORD PTR [rax],0x6e006f
  45fcac:	jae    0x45fcae
  45fcae:	push   rax
  45fcaf:	add    BYTE PTR [rcx+0x0],ah
  45fcb2:	add    BYTE PTR [ebp+0x0],ah
  45fcb6:	rex.WB add BYTE PTR [r14+0x0],bpl
  45fcba:	jae    0x45fcbc
  45fcbc:	je     0x45fcbe
  45fcbe:	jb     0x45fcc0
  45fcc0:	jne    0x45fcc2
  45fcc2:	movsxd eax,DWORD PTR [rax]
  45fcc4:	je     0x45fcc6
  45fcc6:	imul   eax,DWORD PTR [rax],0x6e006f
  45fccc:	jae    0x45fcce
  45fcce:	adc    cl,BYTE PTR [rsi+0x0]
  45fcd1:	outs   dx,DWORD PTR ds:[rsi]
  45fcd2:	add    BYTE PTR [rbx+0x0],al
  45fcd5:	jo     0x45fcd7
  45fcd7:	jne    0x45fcd9
  45fcd9:	push   rsp
  45fcda:	add    BYTE PTR [rcx+0x0],bh
  45fcdd:	jo     0x45fcdf
  45fcdf:	add    BYTE PTR gs:[rsi],dl
  45fce2:	rex.WRX add BYTE PTR [rdi+0x0],r13b
  45fce6:	push   rax
  45fce7:	add    BYTE PTR [rdx+0x0],dh
  45fcea:	outs   dx,DWORD PTR ds:[rsi]
  45fceb:	add    BYTE PTR [rbx+0x0],ah
  45fcee:	add    BYTE PTR gs:[rbx+0x0],dh
  45fcf2:	jae    0x45fcf4
  45fcf4:	outs   dx,DWORD PTR ds:[rsi]
  45fcf5:	add    BYTE PTR [rdx+0x0],dh
  45fcf8:	sub    dl,BYTE PTR [rax+0x0]
  45fcfb:	jb     0x45fcfd
  45fcfd:	outs   dx,DWORD PTR ds:[rsi]
  45fcfe:	add    BYTE PTR [rbx+0x0],ah
  45fd01:	add    BYTE PTR gs:[rbx+0x0],dh
  45fd05:	jae    0x45fd07
  45fd07:	outs   dx,DWORD PTR ds:[rsi]
  45fd08:	add    BYTE PTR [rdx+0x0],dh
  45fd0b:	rex.WRX add BYTE PTR [rdi+0x0],r13b
  45fd0f:	je     0x45fd11
  45fd11:	push   rbx
  45fd12:	add    BYTE PTR [rbp+0x0],dh
  45fd15:	jo     0x45fd17
  45fd17:	jo     0x45fd19
  45fd19:	outs   dx,DWORD PTR ds:[rsi]
  45fd1a:	add    BYTE PTR [rdx+0x0],dh
  45fd1d:	je     0x45fd1f
  45fd1f:	add    BYTE PTR gs:[rax+rax*1+0x28],ah
  45fd24:	rex.WB add BYTE PTR [r14+0x0],bpl
  45fd28:	jbe    0x45fd2a
  45fd2a:	(bad)  
  45fd2b:	add    BYTE PTR [rax+rax*1+0x69],ch
  45fd2f:	add    BYTE PTR [rax+rax*1+0x49],ah
  45fd33:	add    BYTE PTR [rsi+0x0],ch
  45fd36:	jae    0x45fd38
  45fd38:	je     0x45fd3a
  45fd3a:	(bad)  
  45fd3b:	add    BYTE PTR [rax+rax*1+0x6c],ch
  45fd3f:	add    BYTE PTR [rsi+0x0],al
  45fd42:	outs   dx,DWORD PTR ds:[rsi]
  45fd43:	add    BYTE PTR [rax+rax*1+0x64],ch
  45fd47:	add    BYTE PTR [rbp+0x0],ah
  45fd4a:	jb     0x45fd4c
  45fd4c:	sbb    cl,BYTE PTR [rcx+0x0]
  45fd4f:	outs   dx,BYTE PTR ds:[rsi]
  45fd50:	add    BYTE PTR [rsi+0x0],dh
  45fd53:	(bad)  
  45fd54:	add    BYTE PTR [rax+rax*1+0x69],ch
  45fd58:	add    BYTE PTR [rax+rax*1+0x46],ah
  45fd5c:	add    BYTE PTR [rdi+0x0],ch
  45fd5f:	ins    BYTE PTR es:[rdi],dx
  45fd60:	add    BYTE PTR [rax+rax*1+0x65],ah
  45fd64:	add    BYTE PTR [rdx+0x0],dh
  45fd67:	and    al,0x49
  45fd69:	add    BYTE PTR [rsi+0x0],ch
  45fd6c:	jbe    0x45fd6e
  45fd6e:	(bad)  
  45fd6f:	add    BYTE PTR [rax+rax*1+0x69],ch
  45fd73:	add    BYTE PTR [rax+rax*1+0x46],ah
  45fd77:	add    BYTE PTR [rdi+0x0],ch
  45fd7a:	ins    BYTE PTR es:[rdi],dx
  45fd7b:	add    BYTE PTR [rax+rax*1+0x65],ah
  45fd7f:	add    BYTE PTR [rdx+0x0],dh
  45fd82:	push   rsp
  45fd83:	add    BYTE PTR [rcx+0x0],ch
  45fd86:	je     0x45fd88
  45fd88:	ins    BYTE PTR es:[rdi],dx
  45fd89:	add    BYTE PTR [rbp+0x0],ah
  45fd8c:	and    BYTE PTR [rcx+0x0],cl
  45fd8f:	outs   dx,BYTE PTR ds:[rsi]
  45fd90:	add    BYTE PTR [rsi+0x0],dh
  45fd93:	(bad)  
  45fd94:	add    BYTE PTR [rax+rax*1+0x69],ch
  45fd98:	add    BYTE PTR [rax+rax*1+0x45],ah
  45fd9c:	add    BYTE PTR [rbp+0x0],ch
  45fd9f:	jo     0x45fda1
  45fda1:	je     0x45fda3
  45fda3:	jns    0x45fda5
  45fda5:	push   rax
  45fda6:	add    BYTE PTR [rcx+0x0],ah
  45fda9:	je     0x45fdab
  45fdab:	push   0x501800
  45fdb0:	ins    BYTE PTR es:[rdi],dx
  45fdb1:	add    BYTE PTR [rcx+0x0],ah
  45fdb4:	outs   dx,BYTE PTR ds:[rsi]
  45fdb5:	add    BYTE PTR [rsi+0x0],ch
  45fdb8:	imul   eax,DWORD PTR [rax],0x67006e
  45fdbe:	push   rax
  45fdbf:	add    BYTE PTR [rcx+0x0],ah
  45fdc2:	add    BYTE PTR [ebp+0x0],ah
  45fdc6:	sbb    BYTE PTR [rdx+0x0],dl
  45fdc9:	add    BYTE PTR gs:[rcx+0x0],dh
  45fdcd:	jne    0x45fdcf
  45fdcf:	imul   eax,DWORD PTR [rax],0x650072
  45fdd5:	ins    DWORD PTR es:[rdi],dx
  45fdd6:	add    BYTE PTR [rbp+0x0],ah
  45fdd9:	outs   dx,BYTE PTR ds:[rsi]
  45fdda:	add    BYTE PTR [rax+rax*1+0x73],dh
  45fdde:	add    BYTE PTR [rsi],ch
  45fde0:	push   rdx
  45fde1:	add    BYTE PTR [rbp+0x0],ah
  45fde4:	jno    0x45fde6
  45fde6:	jne    0x45fde8
  45fde8:	imul   eax,DWORD PTR [rax],0x650072
  45fdee:	ins    DWORD PTR es:[rdi],dx
  45fdef:	add    BYTE PTR [rbp+0x0],ah
  45fdf2:	outs   dx,BYTE PTR ds:[rsi]
  45fdf3:	add    BYTE PTR [rax+rax*1+0x73],dh
  45fdf7:	add    BYTE PTR [rax+rax*1+0x65],al
  45fdfb:	add    BYTE PTR [rbx+0x0],dh
  45fdfe:	movsxd eax,DWORD PTR [rax]
  45fe00:	jb     0x45fe02
  45fe02:	imul   eax,DWORD PTR [rax],0x740070
  45fe08:	imul   eax,DWORD PTR [rax],0x6e006f
  45fe0e:	sub    dl,BYTE PTR [rbx+0x0]
  45fe11:	add    BYTE PTR gs:[rbx+0x0],ah
  45fe15:	jne    0x45fe17
  45fe17:	jb     0x45fe19
  45fe19:	imul   eax,DWORD PTR [rax],0x790074
  45fe1f:	add    BYTE PTR [rdi+0x0],r13b
  45fe23:	movsxd eax,DWORD PTR [rax]
  45fe25:	jne    0x45fe27
  45fe27:	ins    DWORD PTR es:[rdi],dx
  45fe28:	add    BYTE PTR [rbp+0x0],ah
  45fe2b:	outs   dx,BYTE PTR ds:[rsi]
  45fe2c:	add    BYTE PTR [rax+rax*1+0x61],dh
  45fe30:	add    BYTE PTR [rax+rax*1+0x69],dh
  45fe34:	add    BYTE PTR [rdi+0x0],ch
  45fe37:	outs   dx,BYTE PTR ds:[rsi]
  45fe38:	add    BYTE PTR [rax+0x53],al
  45fe3b:	add    BYTE PTR [rbp+0x0],ah
  45fe3e:	movsxd eax,DWORD PTR [rax]
  45fe40:	jne    0x45fe42
  45fe42:	jb     0x45fe44
  45fe44:	imul   eax,DWORD PTR [rax],0x790074
  45fe4a:	add    BYTE PTR [rdi+0x0],r13b
  45fe4e:	movsxd eax,DWORD PTR [rax]
  45fe50:	jne    0x45fe52
  45fe52:	ins    DWORD PTR es:[rdi],dx
  45fe53:	add    BYTE PTR [rbp+0x0],ah
  45fe56:	outs   dx,BYTE PTR ds:[rsi]
  45fe57:	add    BYTE PTR [rax+rax*1+0x61],dh
  45fe5b:	add    BYTE PTR [rax+rax*1+0x69],dh
  45fe5f:	add    BYTE PTR [rdi+0x0],ch
  45fe62:	outs   dx,BYTE PTR ds:[rsi]
  45fe63:	add    BYTE PTR [rax+rax*1+0x65],al
  45fe67:	add    BYTE PTR [rbx+0x0],dh
  45fe6a:	movsxd eax,DWORD PTR [rax]
  45fe6c:	jb     0x45fe6e
  45fe6e:	imul   eax,DWORD PTR [rax],0x740070
  45fe74:	imul   eax,DWORD PTR [rax],0x6e006f
  45fe7a:	and    al,0x4f
  45fe7c:	add    BYTE PTR [rsi+0x0],ch
  45fe7f:	ins    BYTE PTR es:[rdi],dx
  45fe80:	add    BYTE PTR [rcx+0x0],ch
  45fe83:	outs   dx,BYTE PTR ds:[rsi]
  45fe84:	add    BYTE PTR [rbp+0x0],ah
  45fe87:	push   rdx
  45fe88:	add    BYTE PTR [rbp+0x0],ah
  45fe8b:	ins    BYTE PTR es:[rdi],dx
  45fe8c:	add    BYTE PTR [rbp+0x0],ah
  45fe8f:	(bad)  
  45fe90:	add    BYTE PTR [rbx+0x0],dh
  45fe93:	add    BYTE PTR gs:[rsi+0x0],cl
  45fe97:	outs   dx,DWORD PTR ds:[rsi]
  45fe98:	add    BYTE PTR [rax+rax*1+0x65],dh
  45fe9c:	add    BYTE PTR [rbx+0x0],dh
  45fe9f:	cmp    cl,BYTE PTR [rdi+0x0]
  45fea2:	outs   dx,BYTE PTR ds:[rsi]
  45fea3:	add    BYTE PTR [rax+rax*1+0x69],ch
  45fea7:	add    BYTE PTR [rsi+0x0],ch
  45feaa:	add    BYTE PTR gs:[rdx+0x0],dl
  45feae:	add    BYTE PTR gs:[rax+rax*1+0x65],ch
  45feb3:	add    BYTE PTR [rcx+0x0],ah
  45feb6:	jae    0x45feb8
  45feb8:	add    BYTE PTR gs:[rsi+0x0],cl
  45febc:	outs   dx,DWORD PTR ds:[rsi]
  45febd:	add    BYTE PTR [rax+rax*1+0x65],dh
  45fec1:	add    BYTE PTR [rbx+0x0],dh
  45fec4:	add    BYTE PTR [rbp+0x0],r12b
  45fec8:	jae    0x45feca
  45feca:	movsxd eax,DWORD PTR [rax]
  45fecc:	jb     0x45fece
  45fece:	imul   eax,DWORD PTR [rax],0x740070
  45fed4:	imul   eax,DWORD PTR [rax],0x6e006f
  45feda:	sbb    al,0x55
  45fedc:	add    BYTE PTR [rax+0x0],dh
  45fedf:	add    BYTE PTR [edx+0x0],dh
  45fee3:	(bad)  
  45fee4:	add    BYTE PTR [rax+rax*1+0x65],ah
  45fee8:	add    BYTE PTR [rcx+0x0],al
  45feeb:	add    BYTE PTR fs:[rsi+0x0],dh
  45feef:	imul   eax,DWORD PTR [rax],0x6f0073
  45fef5:	jb     0x45fef7
  45fef7:	xor    dl,BYTE PTR [rbp+0x0]
  45fefa:	jo     0x45fefc
  45fefc:	add    BYTE PTR [edx+0x0],dh
  45ff00:	(bad)  
  45ff01:	add    BYTE PTR [rax+rax*1+0x65],ah
  45ff05:	add    BYTE PTR [rcx+0x0],al
  45ff08:	add    BYTE PTR fs:[rsi+0x0],dh
  45ff0c:	imul   eax,DWORD PTR [rax],0x6f0073
  45ff12:	jb     0x45ff14
  45ff14:	add    BYTE PTR [rbp+0x0],r12b
  45ff18:	jae    0x45ff1a
  45ff1a:	movsxd eax,DWORD PTR [rax]
  45ff1c:	jb     0x45ff1e
  45ff1e:	imul   eax,DWORD PTR [rax],0x740070
  45ff24:	imul   eax,DWORD PTR [rax],0x6e006f
  45ff2a:	adc    BYTE PTR [rbx+0x0],dl
  45ff2d:	rex.XB add BYTE PTR [r11+0x0],al
  45ff31:	rex.XB add BYTE PTR [r8+0x0],bpl
  45ff35:	add    BYTE PTR gs:[rbx+0x0],ah
  45ff39:	imul   eax,DWORD PTR [rax],0x26
  45ff3c:	push   rbx
  45ff3d:	add    BYTE PTR [rbx+0x0],al
  45ff40:	rex.XB add BYTE PTR [r11+0x0],al
  45ff44:	push   0x63006500
  45ff49:	add    BYTE PTR [rbx+0x0],ch
  45ff4c:	add    BYTE PTR [rbp+0x0],r12b
  45ff50:	jae    0x45ff52
  45ff52:	movsxd eax,DWORD PTR [rax]
  45ff54:	jb     0x45ff56
  45ff56:	imul   eax,DWORD PTR [rax],0x740070
  45ff5c:	imul   eax,DWORD PTR [rax],0x6e006f
  45ff62:	adc    BYTE PTR [rbx+0x0],dl
  45ff65:	push   0x77006f00
  45ff6a:	add    BYTE PTR [rax+0x0],cl
  45ff6d:	add    BYTE PTR gs:[rax+rax*1+0x70],ch
  45ff72:	add    BYTE PTR [rsi],ah
  45ff74:	push   rbx
  45ff75:	add    BYTE PTR [rax+0x0],ch
  45ff78:	outs   dx,DWORD PTR ds:[rsi]
  45ff79:	add    BYTE PTR [rdi+0x0],dh
  45ff7c:	rex.W add BYTE PTR [rbp+0x0],spl
  45ff80:	ins    BYTE PTR es:[rdi],dx
  45ff81:	add    BYTE PTR [rax+0x0],dh
  45ff84:	add    BYTE PTR [rbp+0x0],r12b
  45ff88:	jae    0x45ff8a
  45ff8a:	movsxd eax,DWORD PTR [rax]
  45ff8c:	jb     0x45ff8e
  45ff8e:	imul   eax,DWORD PTR [rax],0x740070
  45ff94:	imul   eax,DWORD PTR [rax],0x6e006f
  45ff9a:	sub    BYTE PTR [rbp+0x0],dl
  45ff9d:	jo     0x45ff9f
  45ff9f:	add    BYTE PTR [edx+0x0],dh
  45ffa3:	(bad)  
  45ffa4:	add    BYTE PTR [rax+rax*1+0x65],ah
  45ffa8:	add    BYTE PTR [rax+rax*1+0x6f],al
  45ffac:	add    BYTE PTR [rbx+0x0],ah
  45ffaf:	jne    0x45ffb1
  45ffb1:	ins    DWORD PTR es:[rdi],dx
  45ffb2:	add    BYTE PTR [rbp+0x0],ah
  45ffb5:	outs   dx,BYTE PTR ds:[rsi]
  45ffb6:	add    BYTE PTR [rax+rax*1+0x61],dh
  45ffba:	add    BYTE PTR [rax+rax*1+0x69],dh
  45ffbe:	add    BYTE PTR [rdi+0x0],ch
  45ffc1:	outs   dx,BYTE PTR ds:[rsi]
  45ffc2:	add    BYTE PTR [rsi],bh
  45ffc4:	push   rbp
  45ffc5:	add    BYTE PTR [rax+0x0],dh
  45ffc8:	add    BYTE PTR [edx+0x0],dh
  45ffcc:	(bad)  
  45ffcd:	add    BYTE PTR [rax+rax*1+0x65],ah
  45ffd1:	add    BYTE PTR [rax+rax*1+0x6f],al
  45ffd5:	add    BYTE PTR [rbx+0x0],ah
  45ffd8:	jne    0x45ffda
  45ffda:	ins    DWORD PTR es:[rdi],dx
  45ffdb:	add    BYTE PTR [rbp+0x0],ah
  45ffde:	outs   dx,BYTE PTR ds:[rsi]
  45ffdf:	add    BYTE PTR [rax+rax*1+0x61],dh
  45ffe3:	add    BYTE PTR [rax+rax*1+0x69],dh
  45ffe7:	add    BYTE PTR [rdi+0x0],ch
  45ffea:	outs   dx,BYTE PTR ds:[rsi]
  45ffeb:	add    BYTE PTR [rax+rax*1+0x65],al
  45ffef:	add    BYTE PTR [rbx+0x0],dh
  45fff2:	movsxd eax,DWORD PTR [rax]
  45fff4:	jb     0x45fff6
  45fff6:	imul   eax,DWORD PTR [rax],0x740070
  45fffc:	imul   eax,DWORD PTR [rax],0x6e006f
  460002:	and    BYTE PTR [rcx+0x0],cl
  460005:	outs   dx,BYTE PTR ds:[rsi]
  460006:	add    BYTE PTR [rbx+0x0],dh
  460009:	je     0x46000b
  46000b:	(bad)  
  46000c:	add    BYTE PTR [rax+rax*1+0x6c],ch
  460010:	add    BYTE PTR [rcx+0x0],ah
  460013:	je     0x460015
  460015:	imul   eax,DWORD PTR [rax],0x6e006f
  46001b:	push   rax
  46001c:	add    BYTE PTR [rcx+0x0],ah
  46001f:	add    BYTE PTR [ebp+0x0],ah
  460023:	(bad)  
  460024:	rex.WB add BYTE PTR [r14+0x0],bpl
  460028:	jae    0x46002a
  46002a:	je     0x46002c
  46002c:	(bad)  
  46002d:	add    BYTE PTR [rax+rax*1+0x6c],ch
  460031:	add    BYTE PTR [rcx+rcx*2],ah
  460034:	add    BYTE PTR [rsi+0x0],ch
  460037:	jae    0x460039
  460039:	je     0x46003b
  46003b:	(bad)  
  46003c:	add    BYTE PTR [rax+rax*1+0x6c],ch
  460040:	add    BYTE PTR [rax+rax*1+0x65],al
  460044:	add    BYTE PTR [rbx+0x0],dh
  460047:	movsxd eax,DWORD PTR [rax]
  460049:	jb     0x46004b
  46004b:	imul   eax,DWORD PTR [rax],0x740070
  460051:	imul   eax,DWORD PTR [rax],0x6e006f
  460057:	(bad)  
  460058:	push   rbp
  460059:	add    BYTE PTR [rax+0x0],dh
  46005c:	add    BYTE PTR [edx+0x0],dh
  460060:	(bad)  
  460061:	add    BYTE PTR [rax+rax*1+0x65],ah
  460065:	add    BYTE PTR [rdx*2+0x67007000],ah
  46006c:	add    BYTE PTR [rdx+0x0],dh
  46006f:	(bad)  
  460070:	add    BYTE PTR [rax+rax*1+0x65],ah
  460074:	add    BYTE PTR [rax+rax*1+0x65],al
  460078:	add    BYTE PTR [rbx+0x0],dh
  46007b:	movsxd eax,DWORD PTR [rax]
  46007d:	jb     0x46007f
  46007f:	imul   eax,DWORD PTR [rax],0x740070
  460085:	imul   eax,DWORD PTR [rax],0x6e006f
  46008b:	(bad)  
  46008c:	rex.XB add BYTE PTR [r8+0x0],bpl
  460090:	add    BYTE PTR gs:[rbx+0x0],ah
  460094:	imul   eax,DWORD PTR [rax],0x46
  460097:	add    BYTE PTR [rdi+0x0],ch
  46009a:	jb     0x46009c
  46009c:	push   rbp
  46009d:	add    BYTE PTR [rax+0x0],dh
  4600a0:	add    BYTE PTR fs:[rcx+0x0],ah
  4600a4:	je     0x4600a6
  4600a6:	add    BYTE PTR gs:[rbx+0x0],dh
  4600aa:	xor    al,0x43
  4600ac:	add    BYTE PTR [rax+0x0],ch
  4600af:	add    BYTE PTR gs:[rbx+0x0],ah
  4600b3:	imul   eax,DWORD PTR [rax],0x46
  4600b6:	add    BYTE PTR [rdi+0x0],ch
  4600b9:	jb     0x4600bb
  4600bb:	push   rbp
  4600bc:	add    BYTE PTR [rax+0x0],dh
  4600bf:	add    BYTE PTR fs:[rcx+0x0],ah
  4600c3:	je     0x4600c5
  4600c5:	add    BYTE PTR gs:[rbx+0x0],dh
  4600c9:	add    BYTE PTR [rbp+0x0],r12b
  4600cd:	jae    0x4600cf
  4600cf:	movsxd eax,DWORD PTR [rax]
  4600d1:	jb     0x4600d3
  4600d3:	imul   eax,DWORD PTR [rax],0x740070
  4600d9:	imul   eax,DWORD PTR [rax],0x6e006f
  4600df:	es push rbp
  4600e1:	add    BYTE PTR [rax+0x0],dh
  4600e4:	add    BYTE PTR [edx+0x0],dh
  4600e8:	(bad)  
  4600e9:	add    BYTE PTR [rax+rax*1+0x65],ah
  4600ed:	add    BYTE PTR [rbx+0x0],dl
  4600f0:	push   rbx
  4600f1:	add    BYTE PTR [rcx+0x0],cl
  4600f4:	push   rbx
  4600f5:	add    BYTE PTR [rax+0x0],dl
  4600f8:	(bad)  
  4600f9:	add    BYTE PTR [rbx+0x0],ah
  4600fc:	imul   eax,DWORD PTR [rax],0x61
  4600ff:	add    BYTE PTR [rdi+0x0],ah
  460102:	add    BYTE PTR gs:[rbx+0x0],dh
  460106:	cmp    al,0x55
  460108:	add    BYTE PTR [rax+0x0],dh
  46010b:	add    BYTE PTR [edx+0x0],dh
  46010f:	(bad)  
  460110:	add    BYTE PTR [rax+rax*1+0x65],ah
  460114:	add    BYTE PTR [rbx+0x0],dl
  460117:	push   rbx
  460118:	add    BYTE PTR [rcx+0x0],cl
  46011b:	push   rbx
  46011c:	add    BYTE PTR [rax+0x0],dl
  46011f:	(bad)  
  460120:	add    BYTE PTR [rbx+0x0],ah
  460123:	imul   eax,DWORD PTR [rax],0x61
  460126:	add    BYTE PTR [rdi+0x0],ah
  460129:	add    BYTE PTR gs:[rbx+0x0],dh
  46012d:	add    BYTE PTR [rbp+0x0],r12b
  460131:	jae    0x460133
  460133:	movsxd eax,DWORD PTR [rax]
  460135:	jb     0x460137
  460137:	imul   eax,DWORD PTR [rax],0x740070
  46013d:	imul   eax,DWORD PTR [rax],0x6e006f
  460143:	(bad)  
  460144:	rex.WRB add BYTE PTR [r9+0x0],r12b
  460148:	imul   eax,DWORD PTR [rax],0x74006e
  46014e:	add    BYTE PTR gs:[rsi+0x0],ch
  460152:	(bad)  
  460153:	add    BYTE PTR [rsi+0x0],ch
  460156:	movsxd eax,DWORD PTR [rax]
  460158:	add    BYTE PTR gs:[rax+0x0],dl
  46015c:	(bad)  
  46015d:	add    BYTE PTR [rdi+0x0],ah
  460160:	add    BYTE PTR gs:[rax*2+0x69006400],bl
  460168:	add    BYTE PTR [rax+rax*1+0x69],dh
  46016c:	add    BYTE PTR [rdi+0x0],ch
  46016f:	outs   dx,BYTE PTR ds:[rsi]
  460170:	add    BYTE PTR [rbp+0x0],dl
  460173:	jo     0x460175
  460175:	add    BYTE PTR [edx+0x0],dh
  460179:	(bad)  
  46017a:	add    BYTE PTR [rax+rax*1+0x65],ah
  46017e:	add    BYTE PTR [rdx],dh
  460180:	add    BYTE PTR [r8+rax*1+0x69],r12b
  460185:	add    BYTE PTR [rax+rax*1+0x69],dh
  460189:	add    BYTE PTR [rdi+0x0],ch
  46018c:	outs   dx,BYTE PTR ds:[rsi]
  46018d:	add    BYTE PTR [rbp+0x0],dl
  460190:	jo     0x460192
  460192:	add    BYTE PTR [edx+0x0],dh
  460196:	(bad)  
  460197:	add    BYTE PTR [rax+rax*1+0x65],ah
  46019b:	add    BYTE PTR [rax+rax*1+0x65],al
  46019f:	add    BYTE PTR [rbx+0x0],dh
  4601a2:	movsxd eax,DWORD PTR [rax]
  4601a4:	jb     0x4601a6
  4601a6:	imul   eax,DWORD PTR [rax],0x740070
  4601ac:	imul   eax,DWORD PTR [rax],0x6e006f
  4601b2:	or     al,0x52
  4601b4:	add    BYTE PTR [rbp+0x0],ah
  4601b7:	jo     0x4601b9
  4601b9:	(bad)  
  4601ba:	add    BYTE PTR [rcx+0x0],ch
  4601bd:	jb     0x4601bf
  4601bf:	and    dl,BYTE PTR [rdx+0x0]
  4601c2:	add    BYTE PTR gs:[rax+0x0],dh
  4601c6:	(bad)  
  4601c7:	add    BYTE PTR [rcx+0x0],ch
  4601ca:	jb     0x4601cc
  4601cc:	add    BYTE PTR [rbp+0x0],r12b
  4601d0:	jae    0x4601d2
  4601d2:	movsxd eax,DWORD PTR [rax]
  4601d4:	jb     0x4601d6
  4601d6:	imul   eax,DWORD PTR [rax],0x740070
  4601dc:	imul   eax,DWORD PTR [rax],0x6e006f
  4601e2:	adc    dl,BYTE PTR [rax+rax*1+0x6f]
  4601e6:	add    BYTE PTR [rdi+0x0],ch
  4601e9:	ins    BYTE PTR es:[rdi],dx
  4601ea:	add    BYTE PTR [rbx+0x0],dh
  4601ed:	push   rax
  4601ee:	add    BYTE PTR [rcx+0x0],ah
  4601f1:	add    BYTE PTR [ebp+0x0],ah
  4601f5:	(bad)  
  4601f6:	add    BYTE PTR [rcx+0x0],r13b
  4601fa:	jae    0x4601fc
  4601fc:	movsxd eax,DWORD PTR [rax]
  4601fe:	outs   dx,DWORD PTR ds:[rsi]
  4601ff:	add    BYTE PTR [rsi+0x0],dh
  460202:	add    BYTE PTR gs:[rdx+0x0],dh
  460206:	jns    0x460208
  460208:	push   rdx
  460209:	add    BYTE PTR [rbp+0x0],ah
  46020c:	jo     0x46020e
  46020e:	outs   dx,DWORD PTR ds:[rsi]
  46020f:	add    BYTE PTR [rdx+0x0],dh
  460212:	je     0x460214
  460214:	xor    al,0x44
  460216:	add    BYTE PTR [rcx+0x0],ch
  460219:	jae    0x46021b
  46021b:	movsxd eax,DWORD PTR [rax]
  46021d:	outs   dx,DWORD PTR ds:[rsi]
  46021e:	add    BYTE PTR [rsi+0x0],dh
  460221:	add    BYTE PTR gs:[rdx+0x0],dh
  460225:	jns    0x460227
  460227:	push   rdx
  460228:	add    BYTE PTR [rbp+0x0],ah
  46022b:	jo     0x46022d
  46022d:	outs   dx,DWORD PTR ds:[rsi]
  46022e:	add    BYTE PTR [rdx+0x0],dh
  460231:	je     0x460233
  460233:	add    BYTE PTR [rbp+0x0],r12b
  460237:	jae    0x460239
  460239:	movsxd eax,DWORD PTR [rax]
  46023b:	jb     0x46023d
  46023d:	imul   eax,DWORD PTR [rax],0x740070
  460243:	imul   eax,DWORD PTR [rax],0x6e006f
  460249:	sbb    BYTE PTR [rbp+0x0],dl
  46024c:	jo     0x46024e
  46024e:	add    BYTE PTR [edx+0x0],dh
  460252:	(bad)  
  460253:	add    BYTE PTR [rax+rax*1+0x65],ah
  460257:	add    BYTE PTR [rdx+0x0],dl
  46025a:	jne    0x46025c
  46025c:	ins    BYTE PTR es:[rdi],dx
  46025d:	add    BYTE PTR [rbp+0x0],ah
  460260:	jae    0x460262
  460262:	cs push rbp
  460264:	add    BYTE PTR [rax+0x0],dh
  460267:	add    BYTE PTR [edx+0x0],dh
  46026b:	(bad)  
  46026c:	add    BYTE PTR [rax+rax*1+0x65],ah
  460270:	add    BYTE PTR [rdx+0x0],dl
  460273:	jne    0x460275
  460275:	ins    BYTE PTR es:[rdi],dx
  460276:	add    BYTE PTR [rbp+0x0],ah
  460279:	jae    0x46027b
  46027b:	add    BYTE PTR [rbp+0x0],r12b
  46027f:	jae    0x460281
  460281:	movsxd eax,DWORD PTR [rax]
  460283:	jb     0x460285
  460285:	imul   eax,DWORD PTR [rax],0x740070
  46028b:	imul   eax,DWORD PTR [rax],0x6e006f
  460291:	sbb    dl,BYTE PTR [rdx+0x0]
  460294:	add    BYTE PTR gs:[rbx+0x0],dh
  460298:	outs   dx,DWORD PTR ds:[rsi]
  460299:	add    BYTE PTR [rbp+0x0],dh
  46029c:	jb     0x46029e
  46029e:	movsxd eax,DWORD PTR [rax]
  4602a0:	add    BYTE PTR gs:[rbx+0x0],dh
  4602a4:	push   rax
  4602a5:	add    BYTE PTR [rcx+0x0],ah
  4602a8:	add    BYTE PTR [ebp+0x0],ah
  4602ac:	(bad)  
  4602ad:	push   rsi
  4602ae:	add    BYTE PTR [rcx+0x0],ch
  4602b1:	add    BYTE PTR gs:[rdi+0x0],dh
  4602b5:	rex.X add BYTE PTR [rdi+0x0],bpl
  4602b9:	ins    BYTE PTR es:[rdi],dx
  4602ba:	add    BYTE PTR [rsi+rdx*2],ah
  4602bd:	add    BYTE PTR [rcx+0x0],ch
  4602c0:	add    BYTE PTR gs:[rdi+0x0],dh
  4602c4:	rex.X add BYTE PTR [rdi+0x0],bpl
  4602c8:	ins    BYTE PTR es:[rdi],dx
  4602c9:	add    BYTE PTR [rax+rax*1+0x65],al
  4602cd:	add    BYTE PTR [rbx+0x0],dh
  4602d0:	movsxd eax,DWORD PTR [rax]
  4602d2:	jb     0x4602d4
  4602d4:	imul   eax,DWORD PTR [rax],0x740070
  4602da:	imul   eax,DWORD PTR [rax],0x6e006f
  4602e0:	adc    al,0x53
  4602e2:	add    BYTE PTR [rcx+0x0],dh
  4602e5:	ins    BYTE PTR es:[rdi],dx
  4602e6:	add    BYTE PTR [rdi+0x0],dl
  4602e9:	add    BYTE PTR gs:[rdx+0x0],ah
  4602ed:	push   rbx
  4602ee:	add    BYTE PTR [rcx+0x0],ch
  4602f1:	je     0x4602f3
  4602f3:	add    BYTE PTR gs:[rdx],ch
  4602f6:	push   rbx
  4602f7:	add    BYTE PTR [rcx+0x0],dh
  4602fa:	ins    BYTE PTR es:[rdi],dx
  4602fb:	add    BYTE PTR [rdi+0x0],dl
  4602fe:	add    BYTE PTR gs:[rdx+0x0],ah
  460302:	push   rbx
  460303:	add    BYTE PTR [rcx+0x0],ch
  460306:	je     0x460308
  460308:	add    BYTE PTR gs:[rax+rax*1+0x65],al
  46030d:	add    BYTE PTR [rbx+0x0],dh
  460310:	movsxd eax,DWORD PTR [rax]
  460312:	jb     0x460314
  460314:	imul   eax,DWORD PTR [rax],0x740070
  46031a:	imul   eax,DWORD PTR [rax],0x6e006f
  460320:	sbb    BYTE PTR [rbx+0x0],dl
  460323:	jno    0x460325
  460325:	ins    BYTE PTR es:[rdi],dx
  460326:	add    BYTE PTR [rax+rax*1+0x65],al
  46032a:	add    BYTE PTR [rsi+0x0],dh
  46032d:	movsxd eax,DWORD PTR [rax]
  46032f:	add    BYTE PTR gs:[rsi+0x0],ch
  460333:	je     0x460335
  460335:	add    BYTE PTR gs:[rdx+0x0],dh
  460339:	cs push rbx
  46033b:	add    BYTE PTR [rcx+0x0],dh
  46033e:	ins    BYTE PTR es:[rdi],dx
  46033f:	add    BYTE PTR [rax+rax*1+0x65],al
  460343:	add    BYTE PTR [rsi+0x0],dh
  460346:	movsxd eax,DWORD PTR [rax]
  460348:	add    BYTE PTR gs:[rsi+0x0],ch
  46034c:	je     0x46034e
  46034e:	add    BYTE PTR gs:[rdx+0x0],dh
  460352:	add    BYTE PTR [rbp+0x0],r12b
  460356:	jae    0x460358
  460358:	movsxd eax,DWORD PTR [rax]
  46035a:	jb     0x46035c
  46035c:	imul   eax,DWORD PTR [rax],0x740070
  460362:	imul   eax,DWORD PTR [rax],0x6e006f
  460368:	(bad)  
  460369:	push   rbx
  46036a:	add    BYTE PTR [rcx+0x0],dh
  46036d:	ins    BYTE PTR es:[rdi],dx
  46036e:	add    BYTE PTR [rbp+0x0],al
  460371:	jbe    0x460373
  460373:	(bad)  
  460374:	add    BYTE PTR [rax+rax*1+0x53],ch
  460378:	add    BYTE PTR [rcx+0x0],ch
  46037b:	je     0x46037d
  46037d:	add    BYTE PTR gs:[rbx+rdx*2],ch
  460381:	add    BYTE PTR [rcx+0x0],dh
  460384:	ins    BYTE PTR es:[rdi],dx
  460385:	add    BYTE PTR [rbp+0x0],al
  460388:	jbe    0x46038a
  46038a:	(bad)  
  46038b:	add    BYTE PTR [rax+rax*1+0x53],ch
  46038f:	add    BYTE PTR [rcx+0x0],ch
  460392:	je     0x460394
  460394:	add    BYTE PTR gs:[rax+rax*1+0x65],al
  460399:	add    BYTE PTR [rbx+0x0],dh
  46039c:	movsxd eax,DWORD PTR [rax]
  46039e:	jb     0x4603a0
  4603a0:	imul   eax,DWORD PTR [rax],0x740070
  4603a6:	imul   eax,DWORD PTR [rax],0x6e006f
  4603ac:	adc    BYTE PTR [rsi+0x0],dl
  4603af:	imul   eax,DWORD PTR [rax],0x770065
  4603b5:	add    BYTE PTR [r13+0x0],r14b
  4603b9:	ins    BYTE PTR es:[rdi],dx
  4603ba:	add    BYTE PTR [rcx+0x0],ah
  4603bd:	es push rsi
  4603bf:	add    BYTE PTR [rcx+0x0],ch
  4603c2:	add    BYTE PTR gs:[rdi+0x0],dh
  4603c6:	add    BYTE PTR [r13+0x0],r14b
  4603ca:	ins    BYTE PTR es:[rdi],dx
  4603cb:	add    BYTE PTR [rcx+0x0],ah
  4603ce:	add    BYTE PTR [rbp+0x0],r12b
  4603d2:	jae    0x4603d4
  4603d4:	movsxd eax,DWORD PTR [rax]
  4603d6:	jb     0x4603d8
  4603d8:	imul   eax,DWORD PTR [rax],0x740070
  4603de:	imul   eax,DWORD PTR [rax],0x6e006f
  4603e4:	(bad)  
  4603e5:	push   rdx
  4603e6:	add    BYTE PTR [rbp+0x0],ah
  4603e9:	add    BYTE PTR [ecx+0x0],ch
  4603ed:	jae    0x4603ef
  4603ef:	je     0x4603f1
  4603f1:	add    BYTE PTR gs:[rdx+0x0],dh
  4603f5:	add    BYTE PTR [r8+0x0],r15b
  4603f9:	jo     0x4603fb
  4603fb:	jb     0x4603fd
  4603fd:	add    BYTE PTR gs:[rbx+0x0],dh
  460401:	jae    0x460403
  460403:	xor    al,0x52
  460405:	add    BYTE PTR [rbp+0x0],ah
  460408:	add    BYTE PTR [ecx+0x0],ch
  46040c:	jae    0x46040e
  46040e:	je     0x460410
  460410:	add    BYTE PTR gs:[rdx+0x0],dh
  460414:	add    BYTE PTR [r8+0x0],r15b
  460418:	jo     0x46041a
  46041a:	jb     0x46041c
  46041c:	add    BYTE PTR gs:[rbx+0x0],dh
  460420:	jae    0x460422
  460422:	add    BYTE PTR [rbp+0x0],r12b
  460426:	jae    0x460428
  460428:	movsxd eax,DWORD PTR [rax]
  46042a:	jb     0x46042c
  46042c:	imul   eax,DWORD PTR [rax],0x740070
  460432:	imul   eax,DWORD PTR [rax],0x6e006f
  460438:	sub    BYTE PTR [rsi+0x0],dl
  46043b:	imul   eax,DWORD PTR [rax],0x770065
  460441:	push   rax
  460442:	add    BYTE PTR [rdx+0x0],dh
  460445:	imul   eax,DWORD PTR [rax],0x610076
  46044b:	movsxd eax,DWORD PTR [rax]
  46044d:	jns    0x46044f
  46044f:	push   rbx
  460450:	add    BYTE PTR [rax+rax*1+0x61],dh
  460454:	add    BYTE PTR [rax+rax*1+0x65],dh
  460458:	add    BYTE PTR [rbp+0x0],ch
  46045b:	add    BYTE PTR gs:[rsi+0x0],ch
  46045f:	je     0x460461
  460461:	ds push rsi
  460463:	add    BYTE PTR [rcx+0x0],ch
  460466:	add    BYTE PTR gs:[rdi+0x0],dh
  46046a:	push   rax
  46046b:	add    BYTE PTR [rdx+0x0],dh
  46046e:	imul   eax,DWORD PTR [rax],0x610076
  460474:	movsxd eax,DWORD PTR [rax]
  460476:	jns    0x460478
  460478:	push   rbx
  460479:	add    BYTE PTR [rax+rax*1+0x61],dh
  46047d:	add    BYTE PTR [rax+rax*1+0x65],dh
  460481:	add    BYTE PTR [rbp+0x0],ch
  460484:	add    BYTE PTR gs:[rsi+0x0],ch
  460488:	je     0x46048a
  46048a:	add    BYTE PTR [rbp+0x0],r12b
  46048e:	jae    0x460490
  460490:	movsxd eax,DWORD PTR [rax]
  460492:	jb     0x460494
  460494:	imul   eax,DWORD PTR [rax],0x740070
  46049a:	imul   eax,DWORD PTR [rax],0x6e006f
  4604a0:	adc    al,BYTE PTR [rbx+0x0]
  4604a3:	outs   dx,DWORD PTR ds:[rsi]
  4604a4:	add    BYTE PTR [rbp+0x0],ch
  4604a7:	ins    DWORD PTR es:[rdi],dx
  4604a8:	add    BYTE PTR [rbp+0x0],dh
  4604ab:	outs   dx,BYTE PTR ds:[rsi]
  4604ac:	add    BYTE PTR [rcx+0x0],ch
  4604af:	je     0x4604b1
  4604b1:	jns    0x4604b3
  4604b3:	sub    BYTE PTR [rbx+0x0],al
  4604b6:	outs   dx,DWORD PTR ds:[rsi]
  4604b7:	add    BYTE PTR [rbp+0x0],ch
  4604ba:	ins    DWORD PTR es:[rdi],dx
  4604bb:	add    BYTE PTR [rbp+0x0],dh
  4604be:	outs   dx,BYTE PTR ds:[rsi]
  4604bf:	add    BYTE PTR [rcx+0x0],ch
  4604c2:	je     0x4604c4
  4604c4:	jns    0x4604c6
  4604c6:	add    BYTE PTR [rbp+0x0],r12b
  4604ca:	jae    0x4604cc
  4604cc:	movsxd eax,DWORD PTR [rax]
  4604ce:	jb     0x4604d0
  4604d0:	imul   eax,DWORD PTR [rax],0x740070
  4604d6:	imul   eax,DWORD PTR [rax],0x6e006f
  4604dc:	(bad)  
  4604dd:	push   rsi
  4604de:	add    BYTE PTR [rcx+0x0],ch
  4604e1:	add    BYTE PTR gs:[rdi+0x0],dh
  4604e5:	push   rbx
  4604e6:	add    BYTE PTR [rcx+0x0],ah
  4604e9:	ins    DWORD PTR es:[rdi],dx
  4604ea:	add    BYTE PTR [rax+0x0],dh
  4604ed:	ins    BYTE PTR es:[rdi],dx
  4604ee:	add    BYTE PTR [rbp+0x0],ah
  4604f1:	jae    0x4604f3
  4604f3:	sub    al,0x56
  4604f5:	add    BYTE PTR [rcx+0x0],ch
  4604f8:	add    BYTE PTR gs:[rdi+0x0],dh
  4604fc:	push   rbx
  4604fd:	add    BYTE PTR [rcx+0x0],ah
  460500:	ins    DWORD PTR es:[rdi],dx
  460501:	add    BYTE PTR [rax+0x0],dh
  460504:	ins    BYTE PTR es:[rdi],dx
  460505:	add    BYTE PTR [rbp+0x0],ah
  460508:	jae    0x46050a
  46050a:	add    BYTE PTR [rbp+0x0],r12b
  46050e:	jae    0x460510
  460510:	movsxd eax,DWORD PTR [rax]
  460512:	jb     0x460514
  460514:	imul   eax,DWORD PTR [rax],0x740070
  46051a:	imul   eax,DWORD PTR [rax],0x6e006f
  460520:	sbb    BYTE PTR [rcx+0x0],al
  460523:	add    BYTE PTR fs:[rsi+0x0],dh
  460527:	(bad)  
  460528:	add    BYTE PTR [rsi+0x0],ch
  46052b:	movsxd eax,DWORD PTR [rax]
  46052d:	add    BYTE PTR gs:[rax+rax*1+0x50],ah
  460532:	add    BYTE PTR [rcx+0x0],ah
  460535:	add    BYTE PTR [ebp+0x0],ah
  460539:	cmp    BYTE PTR [rdi+0x0],al
  46053c:	add    BYTE PTR gs:[rax+rax*1+0x74],dh
  460541:	add    BYTE PTR [rcx+0x0],ch
  460544:	outs   dx,BYTE PTR ds:[rsi]
  460545:	add    BYTE PTR [rdi+0x0],ah
  460548:	push   rbx
  460549:	add    BYTE PTR [rax+rax*1+0x61],dh
  46054d:	add    BYTE PTR [rdx+0x0],dh
  460550:	je     0x460552
  460552:	add    BYTE PTR gs:[rax+rax*1+0x57],ah
  460557:	add    BYTE PTR [rcx+0x0],ch
  46055a:	je     0x46055c
  46055c:	push   0x6c004300
  460561:	add    BYTE PTR [rbp+0x0],dh
  460564:	jae    0x460566
  460566:	je     0x460568
  460568:	add    BYTE PTR gs:[rdx+0x0],dh
  46056c:	imul   eax,DWORD PTR [rax],0x67006e
  460572:	rex.WRX
  460573:	rex.RXB add BYTE PTR [r13+0x0],r12b
  460577:	je     0x460579
  460579:	je     0x46057b
  46057b:	imul   eax,DWORD PTR [rax],0x67006e
  460581:	push   rbx
  460582:	add    BYTE PTR [rax+rax*1+0x61],dh
  460586:	add    BYTE PTR [rdx+0x0],dh
  460589:	je     0x46058b
  46058b:	add    BYTE PTR gs:[rax+rax*1+0x57],ah
  460590:	add    BYTE PTR [rcx+0x0],ch
  460593:	je     0x460595
  460595:	push   0x6c004300
  46059a:	add    BYTE PTR [rbp+0x0],dh
  46059d:	jae    0x46059f
  46059f:	je     0x4605a1
  4605a1:	add    BYTE PTR gs:[rdx+0x0],dh
  4605a5:	imul   eax,DWORD PTR [rax],0x67006e
  4605ab:	add    BYTE PTR [rbp+0x0],r12b
  4605af:	jae    0x4605b1
  4605b1:	movsxd eax,DWORD PTR [rax]
  4605b3:	jb     0x4605b5
  4605b5:	imul   eax,DWORD PTR [rax],0x740070
  4605bb:	imul   eax,DWORD PTR [rax],0x6e006f
  4605c1:	cmp    cl,BYTE PTR [rcx+0x0]
  4605c4:	outs   dx,BYTE PTR ds:[rsi]
  4605c5:	add    BYTE PTR [rbx+0x0],dh
  4605c8:	je     0x4605ca
  4605ca:	(bad)  
  4605cb:	add    BYTE PTR [rax+rax*1+0x6c],ch
  4605cf:	add    BYTE PTR [rbp+0x0],dl
  4605d2:	jae    0x4605d4
  4605d4:	imul   eax,DWORD PTR [rax],0x67006e
  4605da:	rex.XB add BYTE PTR [r15+0x0],bpl
  4605de:	outs   dx,BYTE PTR ds:[rsi]
  4605df:	add    BYTE PTR [rsi+0x0],ah
  4605e2:	imul   eax,DWORD PTR [rax],0x750067
  4605e8:	jb     0x4605ea
  4605ea:	(bad)  
  4605eb:	add    BYTE PTR [rax+rax*1+0x69],dh
  4605ef:	add    BYTE PTR [rdi+0x0],ch
  4605f2:	outs   dx,BYTE PTR ds:[rsi]
  4605f3:	add    BYTE PTR [rsi+0x0],al
  4605f6:	imul   eax,DWORD PTR [rax],0x65006c
  4605fc:	push   rax
  4605fd:	rex.WB add BYTE PTR [r14+0x0],bpl
  460601:	jae    0x460603
  460603:	je     0x460605
  460605:	(bad)  
  460606:	add    BYTE PTR [rax+rax*1+0x6c],ch
  46060a:	add    BYTE PTR [rbp+0x0],dl
  46060d:	jae    0x46060f
  46060f:	imul   eax,DWORD PTR [rax],0x67006e
  460615:	rex.XB add BYTE PTR [r15+0x0],bpl
  460619:	outs   dx,BYTE PTR ds:[rsi]
  46061a:	add    BYTE PTR [rsi+0x0],ah
  46061d:	imul   eax,DWORD PTR [rax],0x750067
  460623:	jb     0x460625
  460625:	(bad)  
  460626:	add    BYTE PTR [rax+rax*1+0x69],dh
  46062a:	add    BYTE PTR [rdi+0x0],ch
  46062d:	outs   dx,BYTE PTR ds:[rsi]
  46062e:	add    BYTE PTR [rsi+0x0],al
  460631:	imul   eax,DWORD PTR [rax],0x65006c
  460637:	add    BYTE PTR [rbp+0x0],r12b
  46063b:	jae    0x46063d
  46063d:	movsxd eax,DWORD PTR [rax]
  46063f:	jb     0x460641
  460641:	imul   eax,DWORD PTR [rax],0x740070
  460647:	imul   eax,DWORD PTR [rax],0x6e006f
  46064d:	sbb    al,0x49
  46064f:	add    BYTE PTR [rsi+0x0],ch
  460652:	jae    0x460654
  460654:	je     0x460656
  460656:	(bad)  
  460657:	add    BYTE PTR [rax+rax*1+0x6c],ch
  46065b:	add    BYTE PTR [rbx+0x0],al
  46065e:	ins    BYTE PTR es:[rdi],dx
  46065f:	add    BYTE PTR [rbp+0x0],dh
  460662:	jae    0x460664
  460664:	je     0x460666
  460666:	add    BYTE PTR gs:[rdx+0x0],dh
  46066a:	xor    cl,BYTE PTR [rcx+0x0]
  46066d:	outs   dx,BYTE PTR ds:[rsi]
  46066e:	add    BYTE PTR [rbx+0x0],dh
  460671:	je     0x460673
  460673:	(bad)  
  460674:	add    BYTE PTR [rax+rax*1+0x6c],ch
  460678:	add    BYTE PTR [rbx+0x0],al
  46067b:	ins    BYTE PTR es:[rdi],dx
  46067c:	add    BYTE PTR [rbp+0x0],dh
  46067f:	jae    0x460681
  460681:	je     0x460683
  460683:	add    BYTE PTR gs:[rdx+0x0],dh
  460687:	add    BYTE PTR [rbp+0x0],r12b
  46068b:	jae    0x46068d
  46068d:	movsxd eax,DWORD PTR [rax]
  46068f:	jb     0x460691
  460691:	imul   eax,DWORD PTR [rax],0x740070
  460697:	imul   eax,DWORD PTR [rax],0x6e006f
  46069d:	(bad)  
  46069e:	add    BYTE PTR [r8+rax*1+0x64],spl
  4606a3:	add    BYTE PTR [rsi+0x0],cl
  4606a6:	outs   dx,DWORD PTR ds:[rsi]
  4606a7:	add    BYTE PTR [rax+rax*1+0x65],ah
  4606ab:	add    BYTE PTR [rcx+rax*2],ah
  4606ae:	add    BYTE PTR [rax+rax*1+0x64],ah
  4606b2:	add    BYTE PTR [rsi+0x0],cl
  4606b5:	outs   dx,DWORD PTR ds:[rsi]
  4606b6:	add    BYTE PTR [rax+rax*1+0x65],ah
  4606ba:	add    BYTE PTR [rax+rax*1+0x65],al
  4606be:	add    BYTE PTR [rbx+0x0],dh
  4606c1:	movsxd eax,DWORD PTR [rax]
  4606c3:	jb     0x4606c5
  4606c5:	imul   eax,DWORD PTR [rax],0x740070
  4606cb:	imul   eax,DWORD PTR [rax],0x6e006f
  4606d1:	adc    al,0x52
  4606d3:	add    BYTE PTR [rbp+0x0],ah
  4606d6:	ins    DWORD PTR es:[rdi],dx
  4606d7:	add    BYTE PTR [rdi+0x0],ch
  4606da:	jbe    0x4606dc
  4606dc:	add    BYTE PTR gs:[rsi+0x0],cl
  4606e0:	outs   dx,DWORD PTR ds:[rsi]
  4606e1:	add    BYTE PTR [rax+rax*1+0x65],ah
  4606e5:	add    BYTE PTR [rdx],ch
  4606e7:	push   rdx
  4606e8:	add    BYTE PTR [rbp+0x0],ah
  4606eb:	ins    DWORD PTR es:[rdi],dx
  4606ec:	add    BYTE PTR [rdi+0x0],ch
  4606ef:	jbe    0x4606f1
  4606f1:	add    BYTE PTR gs:[rsi+0x0],cl
  4606f5:	outs   dx,DWORD PTR ds:[rsi]
  4606f6:	add    BYTE PTR [rax+rax*1+0x65],ah
  4606fa:	add    BYTE PTR [rax+rax*1+0x65],al
  4606fe:	add    BYTE PTR [rbx+0x0],dh
  460701:	movsxd eax,DWORD PTR [rax]
  460703:	jb     0x460705
  460705:	imul   eax,DWORD PTR [rax],0x740070
  46070b:	imul   eax,DWORD PTR [rax],0x6e006f
  460711:	sub    BYTE PTR [rbp+0x0],al
  460714:	outs   dx,BYTE PTR ds:[rsi]
  460715:	add    BYTE PTR [rax+rax*1+0x65],dh
  460719:	add    BYTE PTR [rdx+0x0],dh
  46071c:	jo     0x46071e
  46071e:	jb     0x460720
  460720:	imul   eax,DWORD PTR [rax],0x650073
  460726:	add    BYTE PTR [rbp+0x0],r12b
  46072a:	jo     0x46072c
  46072c:	ins    BYTE PTR es:[rdi],dx
  46072d:	add    BYTE PTR [rdi+0x0],ch
  460730:	jns    0x460732
  460732:	ins    DWORD PTR es:[rdi],dx
  460733:	add    BYTE PTR [rbp+0x0],ah
  460736:	outs   dx,BYTE PTR ds:[rsi]
  460737:	add    BYTE PTR [rax+rax*1+0x3e],dh
  46073b:	add    BYTE PTR [r14+0x0],r13b
  46073f:	je     0x460741
  460741:	add    BYTE PTR gs:[rdx+0x0],dh
  460745:	jo     0x460747
  460747:	jb     0x460749
  460749:	imul   eax,DWORD PTR [rax],0x650073
  46074f:	add    BYTE PTR [rbp+0x0],r12b
  460753:	jo     0x460755
  460755:	ins    BYTE PTR es:[rdi],dx
  460756:	add    BYTE PTR [rdi+0x0],ch
  460759:	jns    0x46075b
  46075b:	ins    DWORD PTR es:[rdi],dx
  46075c:	add    BYTE PTR [rbp+0x0],ah
  46075f:	outs   dx,BYTE PTR ds:[rsi]
  460760:	add    BYTE PTR [rax+rax*1+0x44],dh
  460764:	add    BYTE PTR [rbp+0x0],ah
  460767:	jae    0x460769
  460769:	movsxd eax,DWORD PTR [rax]
  46076b:	jb     0x46076d
  46076d:	imul   eax,DWORD PTR [rax],0x740070
  460773:	imul   eax,DWORD PTR [rax],0x6e006f
  460779:	sbb    al,0x50
  46077b:	add    BYTE PTR [rdx+0x0],dh
  46077e:	add    BYTE PTR gs:[rax+0x0],dh
  460782:	jo     0x460784
  460784:	add    BYTE PTR gs:[rax+rax*1+0x49],ah
  460789:	add    BYTE PTR [rsi+0x0],ch
  46078c:	jae    0x46078e
  46078e:	je     0x460790
  460790:	(bad)  
  460791:	add    BYTE PTR [rax+rax*1+0x6c],ch
  460795:	add    BYTE PTR [rdx],dh
  460797:	push   rax
  460798:	add    BYTE PTR [rdx+0x0],dh
  46079b:	add    BYTE PTR gs:[rax+0x0],dh
  46079f:	jo     0x4607a1
  4607a1:	add    BYTE PTR gs:[rax+rax*1+0x49],ah
  4607a6:	add    BYTE PTR [rsi+0x0],ch
  4607a9:	jae    0x4607ab
  4607ab:	je     0x4607ad
  4607ad:	(bad)  
  4607ae:	add    BYTE PTR [rax+rax*1+0x6c],ch
  4607b2:	add    BYTE PTR [rax+rax*1+0x65],al
  4607b6:	add    BYTE PTR [rbx+0x0],dh
  4607b9:	movsxd eax,DWORD PTR [rax]
  4607bb:	jb     0x4607bd
  4607bd:	imul   eax,DWORD PTR [rax],0x740070
  4607c3:	imul   eax,DWORD PTR [rax],0x6e006f
  4607c9:	add    eax,DWORD PTR [rsi]
  4607cb:	adc    bh,BYTE PTR [rip+0x39120603]        # 0x39580dd4
  4607d1:	add    eax,0xe0e0200
  4607d6:	sbb    al,0x3
  4607d8:	(bad)  
  4607d9:	adc    dl,BYTE PTR [rsp+rax*1]
  4607dc:	add    BYTE PTR [rax],al
  4607de:	adc    dl,BYTE PTR [rsp+rax*1]
  4607e1:	and    BYTE PTR [rax],al
  4607e3:	adc    DWORD PTR [rax],edi
  4607e5:	add    eax,0x11010120
  4607ea:	cmp    BYTE PTR [rsi],al
  4607ec:	and    BYTE PTR [rdx],al
  4607ee:	add    DWORD PTR [rdx+rdx*1],ebx
  4607f1:	rex.B (bad) 
  4607f3:	and    BYTE PTR [rdx],al
  4607f5:	add    DWORD PTR [rdx+rdx*1],ebx
  4607f8:	rex.RB add al,0x8
  4607fb:	add    BYTE PTR [rdx],dl
  4607fd:	adc    al,0x4
  4607ff:	sub    BYTE PTR [rax],al
  460801:	adc    DWORD PTR [rax],edi
  460803:	add    eax,DWORD PTR [rsi]
  460805:	adc    bl,BYTE PTR [rax]
  460807:	add    al,BYTE PTR [rsi]
  460809:	add    al,BYTE PTR [rbx]
  46080b:	(bad)  
  46080c:	adc    cl,BYTE PTR [rcx+0x5]
  46080f:	and    BYTE PTR [rcx],al
  460811:	add    DWORD PTR [rdx],edx
  460813:	add    rsp,QWORD PTR [r8]
  460816:	add    BYTE PTR [rdx],al
  460818:	add    al,0x20
  46081a:	add    DWORD PTR [rcx],eax
  46081c:	add    al,BYTE PTR [rax+riz*1]
  46081f:	add    DWORD PTR [rcx],eax
  460821:	(bad)  
  460822:	(bad)  
  460823:	add    BYTE PTR [rcx],al
  460825:	adc    cl,BYTE PTR [rbp+0x12]
  460828:	sbb    BYTE PTR [rbx],al
  46082a:	sub    BYTE PTR [rax],al
  46082c:	add    cl,BYTE PTR [rax]
  46082e:	mov    DWORD PTR [rbp+rbx*2-0x337f7f33],eax
  460835:	xchg   ecx,eax
  460836:	add    eax,DWORD PTR [rsi]
  460838:	adc    dl,BYTE PTR [rcx+0x3]
  46083b:	(bad)  
  46083c:	adc    dl,BYTE PTR [rbp+0x3]
  46083f:	(bad)  
  460840:	adc    ah,BYTE PTR [rax]
  460842:	add    eax,DWORD PTR [rsi]
  460844:	adc    bl,BYTE PTR [rcx+0x4]
  460847:	add    BYTE PTR [rax],al
  460849:	adc    dl,BYTE PTR [rcx+0x4]
  46084c:	add    BYTE PTR [rax],al
  46084e:	adc    bl,BYTE PTR [rcx]
  460850:	add    al,0x0
  460852:	add    BYTE PTR [rdx],dl
  460854:	pop    rcx
  460855:	add    eax,DWORD PTR [rax]
  460857:	add    BYTE PTR [rcx],al
  460859:	(bad)  
  46085a:	and    BYTE PTR [rbx],al
  46085c:	add    DWORD PTR [rsi],ecx
  46085e:	(bad)  
  46085f:	(bad)  
  460860:	add    eax,0x5d110100
  460865:	(bad)  
  460866:	(bad)  
  460867:	add    BYTE PTR [rdx],al
  460869:	adc    DWORD PTR [rbp+0xe],ebx
  46086c:	adc    DWORD PTR [rcx+0x8],esp
  46086f:	add    BYTE PTR [rbx],al
  460871:	adc    DWORD PTR [rbp+0xe],ebx
  460874:	(bad)  
  460875:	adc    DWORD PTR [rcx+0x3],esp
  460878:	add    BYTE PTR [rax],al
  46087a:	add    al,BYTE PTR [rip+0x12010100]        # 0x12470980
  460880:	rex.WRB (bad) 
  460882:	add    BYTE PTR [rdx],al
  460884:	add    DWORD PTR [rdx+rdx*1],ebx
  460887:	gs add al,0x8
  46088a:	add    BYTE PTR [rdx],dl
  46088c:	push   rcx
  46088d:	add    al,0x8
  46088f:	add    BYTE PTR [rdx],dl
  460891:	sbb    DWORD PTR [rax+rcx*1],eax
  460894:	add    BYTE PTR [rdx],dl
  460896:	pop    rcx
  460897:	add    eax,0x12010120
  46089c:	pop    rsp
  46089d:	(bad)  
  46089e:	and    BYTE PTR [rcx],al
  4608a0:	add    dl,BYTE PTR [rax]
  4608a2:	adc    DWORD PTR [rcx+0x5],ebp
  4608a5:	and    BYTE PTR [rcx],al
  4608a7:	add    DWORD PTR [rdx],edx
  4608a9:	ins    DWORD PTR es:[rdi],dx
  4608aa:	(bad)  
  4608ab:	and    BYTE PTR [rdx],al
  4608ad:	add    DWORD PTR [rdx+rdx*1],ebx
  4608b0:	jno    0x4608b5
  4608b2:	(bad)  
  4608b3:	adc    dh,BYTE PTR [rbp+0x3]
  4608b6:	(bad)  
  4608b7:	adc    bh,BYTE PTR [rcx+0x3]
  4608ba:	(bad)  
  4608bb:	adc    ch,BYTE PTR [rax+rbx*1+0x73]
  4608bf:	add    BYTE PTR [rbp+0x0],ah
  4608c2:	je     0x4608c4
  4608c4:	jne    0x4608c6
  4608c6:	jo     0x4608c8
  4608c8:	xor    DWORD PTR [rax],eax
  4608ca:	xor    BYTE PTR [rax],al
  4608cc:	xor    BYTE PTR [rax],al
  4608ce:	add    BYTE PTR cs:[rbp+0x0],ah
  4608d2:	js     0x4608d4
  4608d4:	add    BYTE PTR gs:[rax+0x38],cl
  4608d8:	add    BYTE PTR [rip+0x63003900],dh        # 0x634641de
  4608de:	add    BYTE PTR [rax+rax*1],dh
  4608e1:	xor    BYTE PTR [rax],al
  4608e3:	xor    DWORD PTR [rax],eax
  4608e5:	movsxd eax,DWORD PTR [rax]
  4608e7:	sub    eax,0x35006600
  4608ec:	add    BYTE PTR [rax+rax*1+0x34],ah
  4608f0:	add    BYTE PTR [rip+0x66003400],ch        # 0x66463cf6
  4608f6:	add    BYTE PTR [rax],bh
  4608f8:	add    BYTE PTR [rsi],dh
  4608fa:	add    BYTE PTR [rip+0x66003800],ch        # 0x66464100
  460900:	add    BYTE PTR [rip+0x2d003000],dh        # 0x2d463906
  460906:	add    BYTE PTR [rcx],bh
  460908:	add    BYTE PTR [rbx+0x0],ah
  46090b:	(bad)  
  46090c:	add    BYTE PTR [rax+rax*1+0x61],ah
  460910:	add    BYTE PTR [rax+rax*1],dh
  460913:	xor    al,BYTE PTR [rax]
  460915:	(bad)  
  460916:	add    BYTE PTR [rsi],dh
  460918:	add    BYTE PTR [rcx+0x0],ah
  46091b:	(bad)  
  46091c:	add    BYTE PTR [rbx+0x0],ah
  46091f:	add    eax,0x12010120
  460924:	jno    0x46092b
  460926:	and    BYTE PTR [rcx],al
  460928:	add    DWORD PTR [rdx],edx
  46092a:	rex.RB (bad) 
  46092c:	and    BYTE PTR [rdx],al
  46092e:	add    DWORD PTR [rdx+rdx*1],ebx
  460931:	jge    0x460936
  460933:	(bad)  
  460934:	adc    ah,BYTE PTR [rsi+rbx*1]
  460937:	add    BYTE PTR [r8+r8*1+0x6f],r13b
  46093c:	add    BYTE PTR [rdx+0x0],ah
  46093f:	(bad)  
  460940:	add    BYTE PTR [rax+rax*1+0x5c],ch
  460944:	add    BYTE PTR [rbx+0x0],dl
  460947:	jno    0x460949
  460949:	ins    BYTE PTR es:[rdi],dx
  46094a:	add    BYTE PTR [rbx+0x0],dl
  46094d:	add    BYTE PTR gs:[rax+rax*1+0x75],dh
  460952:	add    BYTE PTR [rax+0x0],dh
  460955:	adc    dh,BYTE PTR [rbx+0x0]
  460958:	add    BYTE PTR gs:[rax+rax*1+0x75],dh
  46095d:	add    BYTE PTR [rax+0x0],dh
  460960:	add    BYTE PTR cs:[rbp+0x0],ah
  460964:	js     0x460966
  460966:	add    BYTE PTR gs:[rcx],cl
  460969:	(bad)  
  46096a:	adc    eax,0x1818012
  46096f:	adc    al,BYTE PTR [rax+0x1c060285]
  460975:	add    esp,DWORD PTR [rax]
  460977:	add    BYTE PTR [rsi],cl
  460979:	(bad)  
  46097a:	and    BYTE PTR [rbx],al
  46097c:	add    DWORD PTR [rsi],ecx
  46097e:	add    al,BYTE PTR [rdx]
  460980:	add    eax,0x12010100
  460985:	sub    al,0x3
  460987:	sub    BYTE PTR [rax],al
  460989:	(bad)  
  46098a:	add    al,0x6
  46098c:	adc    al,BYTE PTR [rax+0x310889]
  460992:	xor    BYTE PTR [rax],al
  460994:	xor    eax,DWORD PTR [rax]
  460996:	xor    eax,DWORD PTR [rax]
  460998:	adc    BYTE PTR [rbx+0x0],bh
  46099b:	ins    BYTE PTR es:[rdi],dx
  46099c:	add    BYTE PTR [rdi+0x0],ch
  46099f:	movsxd eax,DWORD PTR [rax]
  4609a1:	(bad)  
  4609a2:	add    BYTE PTR [rax+rax*1+0x65],ch
  4609a6:	add    BYTE PTR [rbp+0x0],bh
  4609a9:	(bad)  
  4609aa:	jnp    0x4609ac
  4609ac:	ins    DWORD PTR es:[rdi],dx
  4609ad:	add    BYTE PTR [rbp+0x0],ah
  4609b0:	add    BYTE PTR fs:[rcx+0x0],ch
  4609b4:	(bad)  
  4609b5:	add    BYTE PTR [rax+0x0],dh
  4609b8:	(bad)  
  4609b9:	add    BYTE PTR [rax+rax*1+0x68],dh
  4609bd:	add    BYTE PTR [rbp+0x0],bh
  4609c0:	adc    bh,BYTE PTR [rbx+0x0]
  4609c3:	movsxd eax,DWORD PTR [rax]
  4609c5:	jo     0x4609c7
  4609c7:	jne    0x4609c9
  4609c9:	jo     0x4609cb
  4609cb:	(bad)  
  4609cc:	add    BYTE PTR [rax+rax*1+0x68],dh
  4609d0:	add    BYTE PTR [rbp+0x0],bh
  4609d3:	add    al,0x6
  4609d5:	adc    DWORD PTR [rax+0x20058d],eax
  4609db:	adc    DWORD PTR [rax+0x20048d],eax
  4609e1:	adc    dl,BYTE PTR [rcx+0x5]
  4609e4:	sub    BYTE PTR [rax],al
  4609e6:	adc    DWORD PTR [rax+0x28048d],eax
  4609ec:	adc    dl,BYTE PTR [rcx+0x3]
  4609ef:	(bad)  
  4609f0:	adc    DWORD PTR [rbx+rax*1],edi
  4609f3:	(bad)  
  4609f4:	adc    DWORD PTR [rax+0x4],eax
  4609f7:	and    BYTE PTR [rcx],al
  4609f9:	add    DWORD PTR [rax],ebx
  4609fb:	add    eax,0x38110100
  460a00:	sbb    BYTE PTR [rdx],al
  460a02:	(bad)  
  460a03:	(bad)  
  460a04:	add    al,0x1
  460a06:	add    BYTE PTR [rax],al
  460a08:	add    BYTE PTR [rdx+rax*1],al
  460a0b:	add    BYTE PTR [rax],al
  460a0d:	add    BYTE PTR [rbx+rax*1],al
  460a10:	add    BYTE PTR [rax],al
  460a12:	add    BYTE PTR [rsp+rax*1],al
  460a15:	add    BYTE PTR [rax],al
  460a17:	add    BYTE PTR [rax*1+0x4000000],al
  460a1e:	(bad)  
  460a1f:	add    BYTE PTR [rax],al
  460a21:	add    BYTE PTR [rdi+rax*1],al
  460a24:	add    BYTE PTR [rax],al
  460a26:	add    BYTE PTR [rax+rcx*1],al
  460a29:	add    BYTE PTR [rax],al
  460a2b:	add    BYTE PTR [rcx+rcx*1],al
  460a2e:	add    BYTE PTR [rax],al
  460a30:	add    BYTE PTR [rbx+rcx*1],al
  460a33:	add    BYTE PTR [rax],al
  460a35:	add    BYTE PTR [rdi],al
  460a37:	add    BYTE PTR [rdx],al
  460a39:	add    bl,BYTE PTR [rax]
  460a3b:	adc    BYTE PTR [rcx],dl
  460a3d:	cmp    BYTE PTR [rip+0x1c010220],al        # 0x1c470c63
  460a43:	sbb    BYTE PTR [rdi],al
  460a45:	and    BYTE PTR [rax+rcx*1],al
  460a48:	sbb    BYTE PTR [rax],cl
  460a4a:	sbb    BYTE PTR [rax],bl
  460a4c:	or     eax,0x80120620
  460a51:	xchg   ecx,eax
  460a52:	sbb    BYTE PTR [rax],cl
  460a54:	sbb    BYTE PTR [rax],bl
  460a56:	adc    al,BYTE PTR [rax+0x20061c95]
  460a5c:	add    DWORD PTR [rax],ecx
  460a5e:	adc    al,BYTE PTR [rax+0x12060391]
  460a64:	xor    al,0x4
  460a66:	(bad)  
  460a67:	adc    al,BYTE PTR [rax+0x200599]
  460a6d:	adc    al,BYTE PTR [rax+0x28059d]
  460a73:	adc    al,BYTE PTR [rax+0x3fb0089d]
  460a79:	pop    rdi
  460a7a:	jg     0x460a8d
  460a7c:	(bad)  
  460a7d:	or     bh,BYTE PTR [rdx]
  460a7f:	(bad)  
  460a80:	and    BYTE PTR [rdx],al
  460a82:	or     BYTE PTR [rsi],cl
  460a84:	adc    al,BYTE PTR [rax+0x120604a1]
  460a8a:	and    BYTE PTR [rbp-0x7fedf9fc],0xa9
  460a91:	add    al,0x6
  460a93:	adc    al,BYTE PTR [rax+0x120604ad]
  460a99:	xor    BYTE PTR [rcx-0x7fedf9fc],0xb5
  460aa0:	add    al,0x6
  460aa2:	adc    al,BYTE PTR [rax+0x120604b9]
  460aa8:	cmp    BYTE PTR [rbp+0x1012005],0x12
  460aaf:	jne    0x460ab6
  460ab1:	add    BYTE PTR [rcx],al
  460ab3:	add    dl,BYTE PTR [rdx]
  460ab5:	pop    rsp
  460ab6:	add    al,0x6
  460ab8:	adc    DWORD PTR [rax+0x120603c1],eax
  460abe:	je     0x460ac3
  460ac0:	(bad)  
  460ac1:	adc    bl,BYTE PTR [rsp+rax*1+0x6]
  460ac5:	adc    al,BYTE PTR [rax+0x120604a1]
  460acb:	add    ch,0x6
  460ace:	and    BYTE PTR [rcx],al
  460ad0:	add    DWORD PTR [rdx],edx
  460ad2:	add    ch,0x4
  460ad5:	and    BYTE PTR [rax],al
  460ad7:	adc    dh,BYTE PTR [rbx+rax*1+0x20]
  460adb:	add    BYTE PTR [rax],cl
  460add:	add    al,0x20
  460adf:	add    DWORD PTR [rcx],eax
  460ae1:	or     BYTE PTR [rax+riz*1],al
  460ae4:	add    BYTE PTR [rdx],dl
  460ae6:	pop    rsp
  460ae7:	(bad)  
  460ae8:	and    BYTE PTR [rcx],al
  460aea:	add    DWORD PTR [rdx],edx
  460aec:	or     cl,0x7
  460aef:	and    BYTE PTR [rcx],al
  460af1:	adc    al,BYTE PTR [rax+0x65c12cd]
  460af7:	and    BYTE PTR [rcx],al
  460af9:	add    DWORD PTR [rcx],edx
  460afb:	adc    cl,0x7
  460afe:	and    BYTE PTR [rdx],al
  460b00:	add    DWORD PTR [rdx],edx
  460b02:	pop    rsp
  460b03:	adc    bl,BYTE PTR [rsi+rax*1+0x20]
  460b07:	add    al,BYTE PTR [rcx]
  460b09:	or     BYTE PTR [rdx],dl
  460b0b:	pop    rsp
  460b0c:	add    al,0x6
  460b0e:	adc    al,BYTE PTR [rax+0x120604d5]
  460b14:	sbb    cl,0x4
  460b17:	sub    BYTE PTR [rax],al
  460b19:	adc    dh,BYTE PTR [rbx+rax*1+0x28]
  460b1d:	add    BYTE PTR [rax],cl
  460b1f:	add    al,0x28
  460b21:	add    BYTE PTR [rdx],dl
  460b23:	pop    rsp
  460b24:	(bad)  
  460b25:	and    BYTE PTR [rcx],al
  460b27:	add    DWORD PTR [rdx],edx
  460b29:	sbb    ch,0x5
  460b2c:	and    BYTE PTR [rcx],al
  460b2e:	add    DWORD PTR [rdx],edx
  460b30:	ins    BYTE PTR es:[rdi],dx
  460b31:	sbb    ch,BYTE PTR [rdi]
  460b33:	add    BYTE PTR [rbp+0x0],cl
  460b36:	add    BYTE PTR [r8+rax*1+0x49],r8b
  460b3b:	add    BYTE PTR [rcx+0x0],al
  460b3e:	push   rbx
  460b3f:	add    BYTE PTR [rdi+0x0],cl
  460b42:	push   rbp
  460b43:	add    BYTE PTR [rdx+0x0],dl
  460b46:	rex.XB add BYTE PTR [r13+0x0],al
  460b4a:	cmp    eax,0x2f1600
  460b4f:	push   rax
  460b50:	add    BYTE PTR [rbx+0x0],al
  460b53:	push   rbp
  460b54:	add    BYTE PTR [rbx+0x0],dl
  460b57:	rex.WRXB add BYTE PTR [r13+0x0],r10b
  460b5b:	push   rdx
  460b5c:	add    BYTE PTR [rbx+0x0],al
  460b5f:	add    BYTE PTR [rip+0x2f1400],r15b        # 0x751f66
  460b66:	rex.XB add BYTE PTR [r13+0x0],dl
  460b6a:	push   rbx
  460b6b:	add    BYTE PTR [rdi+0x0],cl
  460b6e:	push   rbp
  460b6f:	add    BYTE PTR [rdx+0x0],dl
  460b72:	rex.XB add BYTE PTR [r13+0x0],al
  460b76:	cmp    eax,0x1000500
  460b7b:	add    DWORD PTR [rip+0x40e],ebx        # 0x460f8f
  460b81:	adc    bh,BYTE PTR [rip+0x12000005]        # 0x12460b8c
  460b87:	and    cl,0x5
  460b8a:	add    BYTE PTR [rax],al
  460b8c:	adc    al,BYTE PTR [rax+0x804e5]
  460b92:	adc    bh,BYTE PTR [rip+0x12000805]        # 0x1246139d
  460b98:	and    cl,0x5
  460b9b:	or     BYTE PTR [rax],al
  460b9d:	adc    al,BYTE PTR [rax+0x120604e5]
  460ba3:	sbb    BYTE PTR [rbp+0x1022005],0xe
  460baa:	(bad)  
  460bab:	add    al,0x6
  460bad:	adc    al,BYTE PTR [rax+0x4200ae9]
  460bb3:	add    DWORD PTR [rdx],edx
  460bb5:	and    cl,0xe
  460bb8:	(bad)  
  460bb9:	adc    bl,BYTE PTR [rax]
  460bbb:	or     ah,BYTE PTR [rax]
  460bbd:	add    al,0x1
  460bbf:	adc    al,BYTE PTR [rax+0x120e0eed]
  460bc5:	sbb    BYTE PTR [rsi+0x4d],ch
  460bc8:	add    BYTE PTR [rcx+0x0],ch
  460bcb:	movsxd eax,DWORD PTR [rax]
  460bcd:	jb     0x460bcf
  460bcf:	outs   dx,DWORD PTR ds:[rsi]
  460bd0:	add    BYTE PTR [rbx+0x0],dh
  460bd3:	outs   dx,DWORD PTR ds:[rsi]
  460bd4:	add    BYTE PTR [rsi+0x0],ah
  460bd7:	je     0x460bd9
  460bd9:	add    BYTE PTR cs:[rbx+0x0],dl
  460bdd:	jno    0x460bdf
  460bdf:	ins    BYTE PTR es:[rdi],dx
  460be0:	add    BYTE PTR [rbx+0x0],dl
  460be3:	add    BYTE PTR gs:[rdx+0x0],dh
  460be7:	jbe    0x460be9
  460be9:	add    BYTE PTR gs:[rdx+0x0],dh
  460bed:	add    BYTE PTR cs:[rbx+0x0],al
  460bf1:	outs   dx,DWORD PTR ds:[rsi]
  460bf2:	add    BYTE PTR [rsi+0x0],ch
  460bf5:	data16 add BYTE PTR [rcx+0x0],ch
  460bf9:	add    BYTE PTR [ebp+0x0],dh
  460bfd:	jb     0x460bff
  460bff:	(bad)  
  460c00:	add    BYTE PTR [rax+rax*1+0x69],dh
  460c04:	add    BYTE PTR [rdi+0x0],ch
  460c07:	outs   dx,BYTE PTR ds:[rsi]
  460c08:	add    BYTE PTR [rsi],ch
  460c0a:	add    BYTE PTR [rax+rax*1+0x61],cl
  460c0e:	add    BYTE PTR [rsi+0x0],ch
  460c11:	add    BYTE PTR fs:[rcx+0x0],ch
  460c15:	outs   dx,BYTE PTR ds:[rsi]
  460c16:	add    BYTE PTR [rdi+0x0],ah
  460c19:	push   rax
  460c1a:	add    BYTE PTR [rcx+0x0],ah
  460c1d:	add    BYTE PTR [ebp+0x0],ah
  460c21:	add    BYTE PTR cs:[rax+0x0],dl
  460c25:	(bad)  
  460c26:	add    BYTE PTR [rdi+0x0],ah
  460c29:	add    BYTE PTR gs:[rbx+0x0],dh
  460c2d:	add    BYTE PTR cs:[rax+0x0],bh
  460c31:	ins    DWORD PTR es:[rdi],dx
  460c32:	add    BYTE PTR [rax+rax*1+0x9],ch
  460c36:	add    BYTE PTR [rax],al
  460c38:	adc    eax,0x1818012
  460c3d:	adc    bl,BYTE PTR [rsp+rax*1+0x6]
  460c41:	adc    al,BYTE PTR [rax+0x120604f1]
  460c47:	xor    ch,0xa
  460c4a:	(bad)  
  460c4b:	adc    eax,0x2f98012
  460c50:	(bad)  
  460c51:	adc    al,BYTE PTR [rax+0x200990]
  460c57:	adc    eax,0x1818012
  460c5c:	adc    bl,BYTE PTR [rsi+rax*1+0x20]
  460c60:	add    DWORD PTR [rcx],eax
  460c62:	adc    al,BYTE PTR [rax+0x200488]
  460c68:	adc    bl,BYTE PTR [rax]
  460c6a:	add    eax,0x80120020
  460c6f:	loope  0x460c75
  460c71:	and    BYTE PTR [rcx],al
  460c73:	add    cl,BYTE PTR [rsi]
  460c75:	add    eax,0x3d120120
  460c7a:	(bad)  
  460c7b:	add    eax,0x80120020
  460c80:	icebp  
  460c81:	or     DWORD PTR [rax],esp
  460c83:	add    dl,BYTE PTR [rdx]
  460c85:	adc    BYTE PTR [rcx+0x1c958012],0x7
  460c8c:	and    BYTE PTR [rcx],al
  460c8e:	adc    bl,BYTE PTR [rdx+rdx*1-0x80]
  460c92:	xchg   ecx,eax
  460c93:	(bad)  
  460c94:	and    BYTE PTR [rcx],al
  460c96:	add    DWORD PTR [rcx],edx
  460c98:	xor    DWORD PTR [rip+0x2400a080],0x80040000        # 0x2446ad22
  460ca2:	add    BYTE PTR [rax],al
  460ca4:	xchg   esp,eax
  460ca5:	add    BYTE PTR [rax],al
  460ca7:	add    BYTE PTR [rsi],al
  460ca9:	add    al,BYTE PTR [rax]
  460cab:	add    BYTE PTR [rax],al
  460cad:	and    al,0x0
  460caf:	add    BYTE PTR [rdx+0x53],dl
  460cb2:	xor    DWORD PTR [r8],eax
  460cb5:	add    al,0x0
  460cb7:	add    BYTE PTR [rcx],al
  460cb9:	add    BYTE PTR [rcx],al
  460cbb:	add    BYTE PTR [rdi],ah
  460cbd:	(bad)  
  460cbe:	lods   eax,DWORD PTR ss:[rsi]
  460cc0:	outs   dx,BYTE PTR ds:[rsi]
  460cc1:	pop    rdi
  460cc2:	xchg   ebp,eax
  460cc3:	xchg   BYTE PTR [rdx-0x15ce2a3e],bh
  460cc9:	mov    esp,0x6c66cc3a
  460cce:	(bad)  
  460ccf:	mov    cs,eax
  460cd1:	jns    0x460ccd
  460cd3:	xchg   esp,eax
  460cd4:	clc    
  460cd5:	div    DWORD PTR [rax-0xdd082ce]
  460cdb:	in     eax,dx
  460cdc:	push   rdx
  460cdd:	xor    al,0x48
  460cdf:	clc    
  460ce0:	cmp    al,0x3d
  460ce2:	pop    rsp
  460ce3:	pop    rbp
  460ce4:	rcr    bh,cl
  460ce6:	(bad)  
  460ce7:	mov    esp,0x6b28c599
  460cec:	sub    al,0x12
  460cee:	push   rcx
  460cef:	(bad)  
  460cf0:	mov    edi,0x2b24be5c
  460cf5:	popf   
  460cf6:	rex.B jne 0x460d00
  460cf9:	xor    dh,BYTE PTR [rdx+0x49e6ffbd]
  460cff:	(bad)  
  460d00:	out    dx,eax
  460d01:	mov    eax,0x526d52e5
  460d06:	outs   dx,DWORD PTR ds:[rsi]
  460d07:	fst    QWORD PTR [rbx]
  460d09:	add    BYTE PTR [rbp-0xd842414],dl
  460d0f:	adc    BYTE PTR [rax-0x27259364],al
  460d15:	(bad)  
  460d16:	rex.WRXB stos BYTE PTR es:[rdi],al
  460d18:	(bad)  
  460d19:	shl    BYTE PTR [rcx],0xa
  460d1c:	ret    
  460d1d:	retf   
  460d1e:	movabs ds:0x7ffa2d7b562305aa,al
  460d27:	loop   0x460d79
  460d29:	mov    bl,0xf
  460d2b:	lods   al,BYTE PTR ds:[rsi]
  460d2c:	mov    ebp,0x99ecd462
  460d31:	mov    ecx,0x7d7cc44a
  460d36:	cmp    ebp,DWORD PTR [rax]
  460d38:	icebp  
  460d39:	mul    ah
  460d3b:	enter  0x2006,0x2
  460d3f:	(bad)  
  460d40:	(bad)  
  460d41:	adc    bh,BYTE PTR [rcx]
  460d43:	or     DWORD PTR [rax],eax
  460d45:	add    ecx,DWORD PTR [rsi]
  460d47:	adc    al,BYTE PTR [rcx+0x1c1d0e49]
  460d4d:	add    al,0x7
  460d4f:	add    DWORD PTR [rip+0x100081c],ebx        # 0x1461571
  460d55:	adc    al,BYTE PTR [rcx+0x5181114d]
  460d5b:	add    eax,0x81120020
  460d60:	push   rbp
  460d61:	add    eax,0x81120020
  460d66:	pop    rcx
  460d67:	(bad)  
  460d68:	and    BYTE PTR [rdx],al
  460d6a:	add    DWORD PTR [rsi],ecx
  460d6c:	adc    al,BYTE PTR [rcx+0x15859]
  460d72:	rex.WXB
  460d73:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
  460d7b:	je     0x460dab
  460d7d:	push   rsi
  460d7e:	imul   esi,DWORD PTR [rbx+0x75],0x74536c61
  460d85:	jne    0x460deb
  460d87:	imul   ebp,DWORD PTR [rdi+0x2e],0x74696445
  460d8e:	outs   dx,DWORD PTR ds:[rsi]
  460d8f:	jb     0x460e04
  460d91:	cs push rbx
  460d93:	gs je  0x460e0a
  460d96:	imul   ebp,DWORD PTR [rsi+0x67],0x73654473
  460d9d:	imul   esp,DWORD PTR [rdi+0x6e],0x532e7265
  460da4:	gs je  0x460e1b
  460da7:	imul   ebp,DWORD PTR [rsi+0x67],0x6e695373
  460dae:	ins    BYTE PTR es:[edi],dx
  460db0:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x47],0x72656e65
  460dba:	(bad)  
  460dbb:	je     0x460e2c
  460dbd:	jb     0x460dc6
  460dbf:	cmp    DWORD PTR [rsi],ebp
  460dc1:	xor    BYTE PTR [rsi],ch
  460dc3:	xor    BYTE PTR [rsi],ch
  460dc5:	xor    BYTE PTR [rax],al
  460dc7:	add    BYTE PTR [rax+riz*1],al
  460dca:	add    DWORD PTR [rsi+rcx*1],ebx
  460dcd:	add    eax,0xe010220
  460dd2:	sbb    al,0x8
  460dd4:	add    BYTE PTR [rcx],al
  460dd6:	adc    al,BYTE PTR [rcx+0x61811261]
  460ddc:	sbb    edx,0xd4810001
  460de2:	cmp    al,0x3f
  460de4:	js     0x460e53
  460de6:	ins    BYTE PTR es:[rdi],dx
  460de7:	and    BYTE PTR [rsi+0x65],dh
  460dea:	jb     0x460e5f
  460dec:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
  460df3:	xor    BYTE PTR [rdx],ah
  460df5:	and    BYTE PTR [rbp+0x6e],ah
  460df8:	movsxd ebp,DWORD PTR [rdi+0x64]
  460dfb:	imul   ebp,DWORD PTR [rsi+0x67],0x7475223d
  460e02:	sub    ax,0x3631
  460e06:	and    bh,BYTE PTR [rdi]
  460e08:	ds or  eax,0x49573c0a
  460e0e:	rex.WRX
  460e0f:	rex.R
  460e10:	rex.WRXB push r15
  460e12:	push   rax
  460e13:	rex.WR
  460e14:	rex.B
  460e15:	rex.XB
  460e16:	rex.RB
  460e17:	rex.WRB
  460e18:	rex.RB
  460e19:	rex.WRX push rsp
  460e1b:	and    BYTE PTR [rax+0x6d],bh
  460e1e:	ins    BYTE PTR es:[rdi],dx
  460e1f:	outs   dx,BYTE PTR ds:[rsi]
  460e20:	jae    0x460e5c
  460e22:	js     0x460e97
  460e24:	imul   edi,DWORD PTR [rip+0x74746822],0x2f2f3a70        # 0x74ba7650
  460e2e:	ja     0x460ea7
  460e30:	ja     0x460e60
  460e32:	ja     0x460e67
  460e34:	outs   dx,DWORD PTR cs:[rsi]
  460e36:	jb     0x460e9f
  460e38:	(bad)  
  460e39:	xor    dh,BYTE PTR [rax]
  460e3b:	xor    BYTE PTR [rcx],dh
  460e3d:	(bad)  
  460e3e:	pop    rax
  460e3f:	rex.WRB
  460e40:	rex.WR push rbx
  460e42:	movsxd ebp,DWORD PTR [rax+0x65]
  460e45:	ins    DWORD PTR es:[rdi],dx
  460e46:	(bad)  
  460e47:	sub    eax,0x74736e69
  460e4c:	(bad)  
  460e4d:	outs   dx,BYTE PTR ds:[rsi]
  460e4e:	movsxd esp,DWORD PTR [rbp+0x22]
  460e51:	and    BYTE PTR [rax+0x6d],bh
  460e54:	ins    BYTE PTR es:[rdi],dx
  460e55:	outs   dx,BYTE PTR ds:[rsi]
  460e56:	jae    0x460e92
  460e58:	js     0x460ecd
  460e5a:	fs cmp eax,0x74746822
  460e60:	jo     0x460e9c
  460e62:	(bad)  
  460e63:	(bad)  
  460e64:	ja     0x460edd
  460e66:	ja     0x460e96
  460e68:	ja     0x460e9d
  460e6a:	outs   dx,DWORD PTR cs:[rsi]
  460e6c:	jb     0x460ed5
  460e6e:	(bad)  
  460e6f:	xor    dh,BYTE PTR [rax]
  460e71:	xor    BYTE PTR [rcx],dh
  460e73:	(bad)  
  460e74:	pop    rax
  460e75:	rex.WRB
  460e76:	rex.WR push rbx
  460e78:	movsxd ebp,DWORD PTR [rax+0x65]
  460e7b:	ins    DWORD PTR es:[rdi],dx
  460e7c:	(bad)  
  460e7d:	and    bh,BYTE PTR [rsi]
  460e7f:	or     eax,0x3c20200a
  460e84:	jae    0x460eee
  460e86:	outs   dx,DWORD PTR ds:[rsi]
  460e87:	ja     0x460ecc
  460e89:	ins    DWORD PTR es:[rdi],dx
  460e8a:	fs xor BYTE PTR ds:[rdi+rbp*1],bh
  460e8f:	jae    0x460ef9
  460e91:	outs   dx,DWORD PTR ds:[rsi]
  460e92:	ja     0x460ed7
  460e94:	ins    DWORD PTR es:[rdi],dx
  460e95:	fs ds or eax,0x3c20200a
  460e9c:	jo     0x460f12
  460e9e:	imul   r13,QWORD PTR [r14+0x50],0x7469736f
  460ea6:	imul   ebp,DWORD PTR [rdi+0x6e],0x200a0d3e
  460ead:	and    BYTE PTR [rax],ah
  460eaf:	and    BYTE PTR [rax+rdi*2],bh
  460eb2:	xor    BYTE PTR ds:[rdi+rbp*1],bh
  460eb6:	js     0x460ef6
  460eb8:	or     eax,0x2020200a
  460ebd:	and    BYTE PTR [rcx+rdi*2],bh
  460ec0:	xor    BYTE PTR ds:[rdi+rbp*1],bh
  460ec4:	jns    0x460f04
  460ec6:	or     eax,0x3c20200a
  460ecb:	(bad)  
  460ecc:	jo     0x460f42
  460ece:	imul   r13,QWORD PTR [r14+0x50],0x7469736f
  460ed6:	imul   ebp,DWORD PTR [rdi+0x6e],0x200a0d3e
  460edd:	and    BYTE PTR [rax+rsi*2],bh
  460ee0:	je     0x460f2f
  460ee2:	(bad)  
  460ee3:	js     0x460f35
  460ee5:	outs   dx,DWORD PTR ds:[rsi]
  460ee6:	jae    0x460f51
  460ee8:	je     0x460f53
  460eea:	outs   dx,DWORD PTR ds:[rsi]
  460eeb:	outs   dx,BYTE PTR ds:[rsi]
  460eec:	ds or  eax,0x2020200a
  460ef2:	and    BYTE PTR [rax+rdi*2],bh
  460ef5:	xor    BYTE PTR ds:[rdi+rbp*1],bh
  460ef9:	js     0x460f39
  460efb:	or     eax,0x2020200a
  460f00:	and    BYTE PTR [rcx+rdi*2],bh
  460f03:	xor    BYTE PTR ds:[rdi+rbp*1],bh
  460f07:	jns    0x460f47
  460f09:	or     eax,0x3c20200a
  460f0e:	(bad)  
  460f0f:	jo     0x460f85
  460f11:	rex.WRB (bad) 
  460f13:	js     0x460f65
  460f15:	outs   dx,DWORD PTR ds:[rsi]
  460f16:	jae    0x460f81
  460f18:	je     0x460f83
  460f1a:	outs   dx,DWORD PTR ds:[rsi]
  460f1b:	outs   dx,BYTE PTR ds:[rsi]
  460f1c:	ds or  eax,0x3c20200a
  460f22:	jb     0x460f87
  460f24:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  460f26:	jb     0x460f95
  460f28:	(bad)  
  460f29:	ins    BYTE PTR es:[rdi],dx
  460f2a:	push   rax
  460f2b:	outs   dx,DWORD PTR ds:[rsi]
  460f2c:	jae    0x460f97
  460f2e:	je     0x460f99
  460f30:	outs   dx,DWORD PTR ds:[rsi]
  460f31:	outs   dx,BYTE PTR ds:[rsi]
  460f32:	ds or  eax,0x2020200a
  460f38:	and    BYTE PTR [rsp+rbp*2],bh
  460f3b:	gs data16 je 0x460f7d
  460f3f:	xor    BYTE PTR [rdi+rbp*1],bh
  460f42:	ins    BYTE PTR es:[rdi],dx
  460f43:	gs data16 je 0x460f85
  460f47:	or     eax,0x2020200a
  460f4c:	and    BYTE PTR [rsp+rsi*2],bh
  460f4f:	outs   dx,DWORD PTR ds:[rsi]
  460f50:	jo     0x460f90
  460f52:	xor    BYTE PTR [rdi+rbp*1],bh
  460f55:	je     0x460fc6
  460f57:	jo     0x460f97
  460f59:	or     eax,0x2020200a
  460f5e:	and    BYTE PTR [rdx+rsi*2],bh
  460f61:	imul   esp,DWORD PTR [rdi+0x68],0x30383e74
  460f68:	xor    BYTE PTR [rdi+rbp*1],bh
  460f6b:	jb     0x460fd6
  460f6d:	addr32 push 0xa0d3e74
  460f73:	and    BYTE PTR [rax],ah
  460f75:	and    BYTE PTR [rax],ah
  460f77:	cmp    al,0x62
  460f79:	outs   dx,DWORD PTR ds:[rsi]
  460f7a:	je     0x460ff0
  460f7c:	outs   dx,DWORD PTR ds:[rsi]
  460f7d:	ins    DWORD PTR es:[rdi],dx
  460f7e:	ds xor BYTE PTR ss:[rax],dh
  460f82:	cmp    al,0x2f
  460f84:	(bad)  
  460f85:	outs   dx,DWORD PTR ds:[rsi]
  460f86:	je     0x460ffc
  460f88:	outs   dx,DWORD PTR ds:[rsi]
  460f89:	ins    DWORD PTR es:[rdi],dx
  460f8a:	ds or  eax,0x3c20200a
  460f90:	(bad)  
  460f91:	jb     0x460ff6
  460f93:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  460f95:	jb     0x461004
  460f97:	(bad)  
  460f98:	ins    BYTE PTR es:[rdi],dx
  460f99:	push   rax
  460f9a:	outs   dx,DWORD PTR ds:[rsi]
  460f9b:	jae    0x461006
  460f9d:	je     0x461008
  460f9f:	outs   dx,DWORD PTR ds:[rsi]
  460fa0:	outs   dx,BYTE PTR ds:[rsi]
  460fa1:	ds or  eax,0x572f3c0a
  460fa7:	rex.WB
  460fa8:	rex.WRX
  460fa9:	rex.R
  460faa:	rex.WRXB push r15
  460fac:	push   rax
  460fad:	rex.WR
  460fae:	rex.B
  460faf:	rex.XB
  460fb0:	rex.RB
  460fb1:	rex.WRB
  460fb2:	rex.RB
  460fb3:	rex.WRX push rsp
  460fb5:	add    BYTE PTR ds:[rax],al
  460fb8:	or     eax,DWORD PTR [rax]
  460fba:	add    dl,BYTE PTR [rdx]
  460fbc:	xor    DWORD PTR [rcx+0x12],0x81127181
  460fc3:	jno    0x460fcc
  460fc5:	and    BYTE PTR [rdx],al
  460fc7:	add    DWORD PTR [rdx+rdx*1],ebx
  460fca:	xor    DWORD PTR [rbp+0x4],0x19120020
  460fd1:	(bad)  
  460fd2:	adc    eax,0x1798112
  460fd7:	adc    ah,BYTE PTR [rbp+0xa]
  460fda:	and    BYTE PTR [rcx],al
  460fdc:	add    DWORD PTR [rip+0x1798112],edx        # 0x1bf90f4
  460fe2:	adc    ah,BYTE PTR [rbp+0x5]
  460fe5:	and    BYTE PTR [rcx],al
  460fe7:	add    DWORD PTR [rdx],edx
  460fe9:	sbb    DWORD PTR [rsi],ecx
  460feb:	add    BYTE PTR [rip+0xffffffff81125d11],al        # 0xffffffff81586d02
  460ff1:	or     DWORD PTR [rsi],0x1161110e
  460ff7:	add    DWORD PTR [rbp+0x11002004],0x300085d
  461001:	add    cl,BYTE PTR [rsi]
  461003:	(bad)  
  461004:	adc    DWORD PTR [rcx+0x407098d],eax
  46100a:	adc    DWORD PTR [rbp+0xe],ebx
  46100d:	adc    al,BYTE PTR [rcx+0x50295]
  461013:	add    BYTE PTR [rdx],dl
  461015:	sbb    DWORD PTR [rcx+0x5],0x13010120
  46101c:	add    BYTE PTR [rsi],al
  46101e:	and    BYTE PTR [rcx],al
  461020:	add    DWORD PTR [rcx],edx
  461022:	sub    DWORD PTR [rcx+0x12e1781],0x79538480
  46102c:	jae    0x4610a2
  46102e:	gs ins DWORD PTR es:[rdi],dx
  461030:	cs push rbx
  461032:	movsxd esi,DWORD PTR gs:[rbp+0x72]
  461036:	imul   esi,DWORD PTR [rcx+rdi*2+0x2e],0x6d726550
  46103e:	imul   esi,DWORD PTR [rbx+0x73],0x736e6f69
  461045:	cs push rbx
  461047:	movsxd esi,DWORD PTR gs:[rbp+0x72]
  46104b:	imul   esi,DWORD PTR [rcx+rdi*2+0x50],0x696d7265
  461053:	jae    0x4610c8
  461055:	imul   ebp,DWORD PTR [rdi+0x6e],0x72747441
  46105c:	imul   esp,DWORD PTR [rdx+0x75],0x202c6574
  461063:	ins    DWORD PTR es:[rdi],dx
  461064:	jae    0x4610c9
  461066:	outs   dx,DWORD PTR ds:[rsi]
  461067:	jb     0x4610d5
  461069:	imul   esp,DWORD PTR [rdx+0x2c],0x72655620
  461070:	jae    0x4610db
  461072:	outs   dx,DWORD PTR ds:[rsi]
  461073:	outs   dx,BYTE PTR ds:[rsi]
  461074:	cmp    eax,0x2e302e32
  461079:	xor    BYTE PTR [rsi],ch
  46107b:	xor    BYTE PTR [rax+riz*1],ch
  46107e:	rex.XB jne 0x4610ed
  461081:	je     0x4610f8
  461083:	jb     0x4610ea
  461085:	cmp    eax,0x7475656e
  46108a:	jb     0x4610ed
  46108c:	ins    BYTE PTR es:[rdi],dx
  46108d:	sub    al,0x20
  46108f:	push   rax
  461090:	jne    0x4610f4
  461092:	ins    BYTE PTR es:[rdi],dx
  461093:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  46109a:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  46109e:	(bad)  
  46109f:	(bad)  
  4610a0:	(bad)  
  4610a1:	(bad)  
  4610a2:	xor    eax,0x31363563
  4610a7:	cmp    DWORD PTR [rbx],esi
  4610a9:	xor    al,0x65
  4610ab:	xor    BYTE PTR [rax],bh
  4610ad:	cmp    DWORD PTR [rax+0x5554018d],eax
  4610b3:	jg     0x461108
  4610b5:	jns    0x46112a
  4610b7:	je     0x46111e
  4610b9:	ins    DWORD PTR es:[rdi],dx
  4610ba:	cs push rbx
  4610bc:	movsxd esi,DWORD PTR gs:[rbp+0x72]
  4610c0:	imul   esi,DWORD PTR [rcx+rdi*2+0x2e],0x6d726550
  4610c8:	imul   esi,DWORD PTR [rbx+0x73],0x736e6f69
  4610cf:	cs push rbx
  4610d1:	movsxd esi,DWORD PTR gs:[rbp+0x72]
  4610d5:	imul   esi,DWORD PTR [rcx+rdi*2+0x50],0x696d7265
  4610dd:	jae    0x461152
  4610df:	imul   ebp,DWORD PTR [rdi+0x6e],0x67616c46
  4610e6:	sub    al,0x20
  4610e8:	ins    DWORD PTR es:[rdi],dx
  4610e9:	jae    0x46114e
  4610eb:	outs   dx,DWORD PTR ds:[rsi]
  4610ec:	jb     0x46115a
  4610ee:	imul   esp,DWORD PTR [rdx+0x2c],0x72655620
  4610f5:	jae    0x461160
  4610f7:	outs   dx,DWORD PTR ds:[rsi]
  4610f8:	outs   dx,BYTE PTR ds:[rsi]
  4610f9:	cmp    eax,0x2e302e32
  4610fe:	xor    BYTE PTR [rsi],ch
  461100:	xor    BYTE PTR [rax+riz*1],ch
  461103:	rex.XB jne 0x461172
  461106:	je     0x46117d
  461108:	jb     0x46116f
  46110a:	cmp    eax,0x7475656e
  46110f:	jb     0x461172
  461111:	ins    BYTE PTR es:[rdi],dx
  461112:	sub    al,0x20
  461114:	push   rax
  461115:	jne    0x461179
  461117:	ins    BYTE PTR es:[rdi],dx
  461118:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  46111f:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  461123:	(bad)  
  461124:	(bad)  
  461125:	(bad)  
  461126:	(bad)  
  461127:	xor    eax,0x31363563
  46112c:	cmp    DWORD PTR [rbx],esi
  46112e:	xor    al,0x65
  461130:	xor    BYTE PTR [rax],bh
  461132:	cmp    DWORD PTR [rip+0x67616c46],eax        # 0x67a77d7e
  461138:	jae    0x46113c
  46113a:	add    BYTE PTR [rax],al
  46113c:	add    BYTE PTR [rip+0xffffffff81110020],al        # 0xffffffff81571162
  461142:	lods   eax,DWORD PTR ds:[rsi]
  461143:	add    eax,0x81120020
  461148:	mov    cl,0x5
  46114a:	and    BYTE PTR [rax],al
  46114c:	adc    DWORD PTR [rcx+0x2005b5],eax
  461152:	adc    DWORD PTR [rcx+0x22005b9],eax
  461158:	add    DWORD PTR [rax],ecx
  46115a:	or     BYTE PTR [rsi],al
  46115c:	and    BYTE PTR [rcx],al
  46115e:	add    DWORD PTR [rcx],edx
  461160:	cmp    DWORD PTR [rbp+0x1042007],0x8080808
  46116a:	(bad)  
  46116b:	and    BYTE PTR [rcx],al
  46116d:	add    DWORD PTR [rcx],edx
  46116f:	cmp    DWORD PTR [rcx+0x1012006],0x79d8012
  461179:	and    BYTE PTR [rdx],al
  46117b:	add    DWORD PTR [rdx],edx
  46117d:	sbb    BYTE PTR [rbp+0x6071308],0x12
  461184:	pop    rsp
  461185:	adc    al,BYTE PTR [rax-0x4a7eee63]
  46118b:	adc    DWORD PTR [rcx-0x4a7eee47],eax
  461191:	adc    DWORD PTR [rcx+0x12006b9],eax
  461197:	add    DWORD PTR [rdx],edx
  461199:	or     DWORD PTR [rbp+0x5],0x1c010220
  4611a0:	(bad)  
  4611a1:	add    eax,0x80110000
  4611a6:	rol    DWORD PTR [rsi],0x20
  4611a9:	add    DWORD PTR [rcx],eax
  4611ab:	adc    DWORD PTR [rax+0x12006c1],eax
  4611b1:	add    DWORD PTR [rcx],edx
  4611b3:	or     ecx,0x12010705
  4611b9:	add    ecx,0x1010006
  4611bf:	adc    al,BYTE PTR [rcx+0x2003cd]
  4611c5:	sbb    BYTE PTR [rdi+rax*1],al
  4611c8:	add    DWORD PTR [rcx],edx
  4611ca:	cmp    BYTE PTR [rdi],al
  4611cc:	adc    eax,0x1818012
  4611d1:	adc    bl,BYTE PTR [rcx+rcx*1+0x20]
  4611d5:	add    BYTE PTR [rip+0x1d58111],dl        # 0x21b92ec
  4611db:	adc    eax,DWORD PTR [rax]
  4611dd:	(bad)  
  4611de:	adc    eax,0x1d58111
  4611e3:	adc    bl,BYTE PTR [rsp+rax*1+0x20]
  4611e7:	add    BYTE PTR [rbx],dl
  4611e9:	add    BYTE PTR [rbx],cl
  4611eb:	(bad)  
  4611ec:	add    dl,BYTE PTR [rdx]
  4611ee:	fs adc eax,0x1d58111
  4611f4:	adc    bl,BYTE PTR [rbp+rax*1+0x20]
  4611f8:	add    BYTE PTR [rcx],dl
  4611fa:	sbb    ecx,0x12002005
  461200:	and    BYTE PTR [rcx+0x12000005],0x80
  461207:	movabs eax,ds:0x5a1801201012006
  461210:	(bad)  
  461211:	add    DWORD PTR [rdx],edx
  461213:	and    BYTE PTR [rcx+0x1012006],0x11
  46121a:	and    ecx,0x2010004
  461220:	(bad)  
  461221:	add    eax,0x80120107
  461226:	test   BYTE PTR [rsi],al
  461228:	and    BYTE PTR [rcx],al
  46122a:	add    DWORD PTR [rdx],edx
  46122c:	sub    ecx,0x1010004
  461232:	sbb    al,0xc
  461234:	(bad)  
  461235:	add    al,0x12
  461237:	sub    ecx,0x12ed8112
  46123d:	xor    ebp,0x200051c
  461243:	(bad)  
  461244:	(bad)  
  461245:	(bad)  
  461246:	or     esp,DWORD PTR [rax]
  461248:	add    edx,DWORD PTR [rdx]
  46124a:	cmp    ecx,0xe498112
  461250:	sbb    eax,0x220071c
  461255:	add    cl,BYTE PTR [rsi]
  461257:	adc    DWORD PTR [rcx+0x20058d],eax
  46125d:	adc    DWORD PTR [rcx+0x5fd],eax
  461263:	adc    DWORD PTR [rcx+0x22007fd],eax
  461269:	adc    al,BYTE PTR [rcx+0x61c0ef9]
  46126f:	and    BYTE PTR [rcx],al
  461271:	adc    al,BYTE PTR [rcx+0x70d0ef9]
  461277:	add    eax,0x1df98112
  46127c:	sbb    al,0x1d
  46127e:	sbb    al,0x1d
  461280:	sbb    al,0x1d
  461282:	sbb    al,0x4
  461284:	(bad)  
  461285:	adc    al,BYTE PTR [rdx+0x2200705]
  46128b:	add    DWORD PTR [rdx],edx
  46128d:	(bad)  
  46128e:	add    eax,0x120041c
  461293:	add    DWORD PTR [rax+rcx*1],ebx
  461296:	adc    eax,0x1818012
  46129b:	adc    al,BYTE PTR [rax+0x1070a85]
  4612a1:	adc    eax,0x1818012
  4612a6:	adc    al,BYTE PTR [rax+0x1200585]
  4612ac:	adc    eax,DWORD PTR [rax]
  4612ae:	or     BYTE PTR [rbx],al
  4612b0:	and    BYTE PTR [rax],al
  4612b2:	sbb    al,0xe
  4612b4:	(bad)  
  4612b5:	add    al,0x8
  4612b7:	adc    ch,BYTE PTR [rdx*1+0x1818012]
  4612be:	adc    al,BYTE PTR [rax+0x61c85]
  4612c4:	add    DWORD PTR [rsi],ecx
  4612c6:	adc    DWORD PTR [rdx+0x2000711],eax
  4612cc:	add    cl,BYTE PTR [rsi]
  4612ce:	adc    DWORD PTR [rdx+0x1200615],eax
  4612d4:	(bad)  
  4612d5:	adc    al,BYTE PTR [rcx+0x2200549]
  4612db:	(bad)  
  4612dc:	(bad)  
  4612dd:	(bad)  
  4612de:	add    al,0x7
  4612e0:	add    cl,BYTE PTR [rsi]
  4612e2:	or     BYTE PTR [rdi],al
  4612e4:	and    BYTE PTR [rdx],al
  4612e6:	add    DWORD PTR [rsi],ecx
  4612e8:	adc    DWORD PTR [rdx+0x1070515],eax
  4612ee:	adc    al,BYTE PTR [rcx+0x1000699]
  4612f4:	adc    al,BYTE PTR [rdx+0x20060e21]
  4612fa:	add    DWORD PTR [rcx],eax
  4612fc:	adc    DWORD PTR [rdx+0x1000429],eax
  461302:	or     BYTE PTR [rsi+rax*1],bl
  461305:	and    BYTE PTR [rcx],al
  461307:	add    DWORD PTR [rcx],edx
  461309:	(bad)  
  46130a:	add    DWORD PTR [r10],eax
  46130d:	add    eax,0xe020200
  461312:	(bad)  
  461313:	add    al,0x7
  461315:	add    DWORD PTR [rdx],edx
  461317:	rex.WB or BYTE PTR [r8],al
  46131a:	add    DWORD PTR [rdx],edx
  46131c:	sub    ebp,0xbe98112
  461322:	(bad)  
  461323:	add    edx,DWORD PTR [rdx]
  461325:	add    BYTE PTR [rdx+rdx*1-0x7eed167f],0xf5
  46132d:	(bad)  
  46132e:	and    BYTE PTR [rcx],al
  461330:	sbb    eax,0xe4d8212
  461335:	(bad)  
  461336:	(bad)  
  461337:	add    al,0xe
  461339:	adc    al,BYTE PTR [rax-0x7dede267]
  46133f:	rex.WRB sbb rax,0x64d8212
  461345:	(bad)  
  461346:	add    cl,BYTE PTR [rax]
  461348:	adc    DWORD PTR [rcx+0x20009b9],eax
  46134e:	adc    DWORD PTR [rax-0x7fedf12f],eax
  461354:	movabs eax,ds:0x2005d18011010705
  46135d:	add    BYTE PTR [rdx],dl
  46135f:	(bad)  
  461360:	imul   ecx,DWORD PTR [rax],0x12010320
  461366:	sbb    BYTE PTR [rbp+0x20090808],0x2
  46136d:	add    DWORD PTR [rdx],edx
  46136f:	sbb    BYTE PTR [rbp+0x56d8211],0x20
  461376:	add    BYTE PTR [rdx],dl
  461378:	(bad)  
  461379:	jno    0x461385
  46137b:	and    BYTE PTR [rip+0xe1c0e01],al        # 0xe622182
  461381:	add    dl,BYTE PTR [rcx]
  461383:	(bad)  
  461384:	jns    0x46138c
  461386:	and    BYTE PTR [rcx],al
  461388:	add    DWORD PTR [rdx],edx
  46138a:	(bad)  
  46138b:	jne    0x461393
  46138d:	and    BYTE PTR [rcx],al
  46138f:	add    DWORD PTR [rcx],edx
  461391:	(bad)  
  461392:	add    DWORD PTR [rsi],0x12010220
  461398:	adc    eax,0x1200602
  46139d:	add    DWORD PTR [rdx],edx
  46139f:	(bad)  
  4613a0:	test   DWORD PTR [rip+0xffffffff81120020],eax        # 0xffffffff815813c6
  4613a6:	rex.WRB add rax,0x13080120
  4613ac:	add    BYTE PTR [rax],cl
  4613ae:	add    BYTE PTR [rbx],al
  4613b0:	adc    DWORD PTR [rax+0x80808c1],eax
  4613b6:	(bad)  
  4613b7:	and    BYTE PTR [rdx],al
  4613b9:	add    DWORD PTR [rcx],edx
  4613bb:	(bad)  
  4613bc:	mov    DWORD PTR [rdx],eax
  4613be:	add    eax,0x80110020
  4613c3:	rol    DWORD PTR [rsi],1
  4613c5:	and    BYTE PTR [rcx],al
  4613c7:	add    DWORD PTR [rdx],edx
  4613c9:	(bad)  
  4613ca:	lea    eax,[rsi]
  4613cc:	and    BYTE PTR [rcx],al
  4613ce:	add    DWORD PTR [rdx],edx
  4613d0:	sub    ch,0xf
  4613d3:	and    BYTE PTR [rcx+rax*1],al
  4613d6:	adc    DWORD PTR [rcx-0x3e7fee4b],eax
  4613dc:	adc    DWORD PTR [rax-0x6a7dee3f],eax
  4613e2:	add    eax,0x82120020
  4613e7:	cdq    
  4613e8:	or     DWORD PTR [rax],esp
  4613ea:	add    al,BYTE PTR [rcx]
  4613ec:	adc    al,BYTE PTR [rdx-0x4a7eee63]
  4613f2:	or     DWORD PTR [rax],esp
  4613f4:	add    al,BYTE PTR [rcx]
  4613f6:	adc    al,BYTE PTR [rax-0x4a7eee13]
  4613fc:	or     eax,DWORD PTR [rdi]
  4613fe:	add    edx,DWORD PTR [rdx]
  461400:	(bad)  
  461401:	xchg   ecx,eax
  461402:	adc    DWORD PTR [rcx-0x4a7eee4b],eax
  461408:	add    eax,DWORD PTR [rsi]
  46140a:	adc    dh,BYTE PTR [rcx+0x9]
  46140d:	and    BYTE PTR [rdx],al
  46140f:	add    DWORD PTR [rdx],edx
  461411:	and    BYTE PTR [rcx+0x6a18211],0x20
  461418:	add    DWORD PTR [rcx],eax
  46141a:	adc    DWORD PTR [rdx+0x12006ad],eax
  461420:	add    DWORD PTR [rcx],edx
  461422:	(bad)  
  461423:	mov    cl,0x6
  461425:	and    BYTE PTR [rcx],al
  461427:	add    DWORD PTR [rcx],edx
  461429:	(bad)  
  46142a:	mov    ch,0xc
  46142c:	add    BYTE PTR [rbx],al
  46142e:	adc    DWORD PTR [rax-0x467ded2f],eax
  461434:	(bad)  
  461435:	adc    al,BYTE PTR [rax+0x70717a1]
  46143b:	adc    al,BYTE PTR [rdx-0x667ded57]
  461441:	adc    DWORD PTR [rax-0x467eee2f],eax
  461447:	adc    DWORD PTR [rcx-0x2e7fee47],eax
  46144d:	adc    DWORD PTR [rax+0x4070ed1],eax
  461453:	adc    DWORD PTR [rax-0x2e7fee2f],eax
  461459:	adc    DWORD PTR [rax-0x2e7fee2f],eax
  46145f:	add    al,0x7
  461461:	add    DWORD PTR [rdx],edx
  461463:	pop    rsp
  461464:	add    eax,0x82120020
  461469:	mov    ebp,0x12012006
  46146e:	or     ch,0x8
  461471:	(bad)  
  461472:	and    BYTE PTR [rdx],al
  461474:	add    DWORD PTR [rax],ecx
  461476:	adc    al,BYTE PTR [rax+0x10705cd]
  46147c:	adc    al,BYTE PTR [rax+0x12006cd]
  461482:	add    DWORD PTR [rcx],edx
  461484:	(bad)  
  461485:	rol    DWORD PTR [rsi],0x20
  461488:	add    DWORD PTR [rcx],eax
  46148a:	adc    DWORD PTR [rdx+0x10703c5],eax
  461490:	or     BYTE PTR [rsi],al
  461492:	and    BYTE PTR [rdx],al
  461494:	add    DWORD PTR [rax],ecx
  461496:	adc    eax,DWORD PTR [rax]
  461498:	add    al,0x20
  46149a:	add    DWORD PTR [rsi],ecx
  46149c:	or     BYTE PTR [rax+rax*1],al
  46149f:	add    DWORD PTR [rcx],eax
  4614a1:	add    al,BYTE PTR [rip+0x12010100]        # 0x124715a7
  4614a7:	adc    DWORD PTR [rcx],ecx
  4614a9:	(bad)  
  4614aa:	(bad)  
  4614ab:	(bad)  
  4614ac:	(bad)  
  4614ad:	(bad)  
  4614ae:	(bad)  
  4614af:	sbb    eax,0x140080e
  4614b4:	add    BYTE PTR [rbx],dh
  4614b6:	push   rbx
  4614b7:	jns    0x46152c
  4614b9:	je     0x461520
  4614bb:	ins    DWORD PTR es:[rdi],dx
  4614bc:	cs push rdx
  4614be:	gs jae 0x461530
  4614c1:	jne    0x461535
  4614c3:	movsxd esp,DWORD PTR [rbp+0x73]
  4614c6:	cs push rsp
  4614c8:	outs   dx,DWORD PTR ds:[rsi]
  4614c9:	outs   dx,DWORD PTR ds:[rsi]
  4614ca:	ins    BYTE PTR es:[rdi],dx
  4614cb:	jae    0x4614fb
  4614cd:	push   rbx
  4614ce:	je     0x461542
  4614d0:	outs   dx,DWORD PTR ds:[rsi]
  4614d1:	outs   dx,BYTE PTR ds:[rsi]
  4614d2:	ins    BYTE PTR es:[edi],dx
  4614d4:	jns    0x46152a
  4614d6:	jns    0x461548
  4614d8:	gs fs push rdx
  4614db:	gs jae 0x46154d
  4614de:	jne    0x461552
  4614e0:	movsxd esp,DWORD PTR [rbp+0x42]
  4614e3:	jne    0x46154e
  4614e5:	ins    BYTE PTR es:[rdi],dx
  4614e6:	fs gs jb 0x4614f1
  4614ea:	xor    ch,BYTE PTR [rsi]
  4614ec:	xor    BYTE PTR [rsi],ch
  4614ee:	xor    BYTE PTR [rsi],ch
  4614f0:	xor    BYTE PTR [rax],al
  4614f2:	add    BYTE PTR [rip+0x1c020200],al        # 0x1c4816f8
  4614f8:	sbb    al,0x4
  4614fa:	(bad)  
  4614fb:	add    DWORD PTR [rdx],edx
  4614fd:	cmp    eax,0x1c022006
  461502:	(bad)  
  461503:	adc    bh,BYTE PTR [rcx]
  461505:	add    eax,DWORD PTR [rdi]
  461507:	add    DWORD PTR [rsi+rax*1],ebx
  46150a:	and    BYTE PTR [rcx],al
  46150c:	add    DWORD PTR [rcx],edx
  46150e:	(bad)  
  46150f:	fisttp QWORD PTR [rax]
  461511:	add    DWORD PTR [rax],eax
  461513:	add    al,BYTE PTR [rax]
  461515:	add    BYTE PTR [rax],al
  461517:	add    BYTE PTR [rax],al
  461519:	(bad)  
  46151a:	add    BYTE PTR [rdx],al
  46151c:	add    DWORD PTR [rdx],edx
  46151e:	sbb    BYTE PTR [rbp+0x300060e],0xe
  461525:	(bad)  
  461526:	(bad)  
  461527:	(bad)  
  461528:	or     eax,DWORD PTR [rax]
  46152a:	add    al,0x1
  46152c:	adc    al,BYTE PTR [rax-0x7deef163]
  461532:	in     eax,0x1c
  461534:	add    eax,0x80120000
  461539:	jmp    0x1471544
  46153e:	adc    al,BYTE PTR [rax+0x20009e9]
  461544:	add    dl,BYTE PTR [rdx]
  461546:	sub    cl,0x12
  461549:	sub    cl,0x5
  46154c:	and    BYTE PTR [rax],al
  46154e:	adc    al,BYTE PTR [rax+0x22007e5]
  461554:	add    DWORD PTR [rdx+rdx*1],ebx
  461557:	(bad)  
  461558:	in     eax,dx
  461559:	add    eax,0x82110020
  46155e:	icebp  
  46155f:	add    eax,0x8080200
  461564:	or     BYTE PTR [rip+0xffffffff82120020],al        # 0xffffffff8258158a
  46156a:	stc    
  46156b:	(bad)  
  46156c:	and    BYTE PTR [rcx],al
  46156e:	adc    al,BYTE PTR [rdx+0x200608fd]
  461574:	add    DWORD PTR [rcx],eax
  461576:	adc    DWORD PTR [rbx+0x1200605],eax
  46157c:	or     BYTE PTR [rdx],dl
  46157e:	(bad)  
  46157f:	std    
  461580:	add    eax,0x80120020
  461585:	in     eax,dx
  461586:	(bad)  
  461587:	and    BYTE PTR [rcx],al
  461589:	add    DWORD PTR [rcx],edx
  46158b:	or     DWORD PTR [rcx],0x8
  46158e:	and    BYTE PTR [rbx],al
  461590:	adc    al,BYTE PTR [rdx+0xe1c0e75]
  461596:	(bad)  
  461597:	and    BYTE PTR [rcx],al
  461599:	add    DWORD PTR [rdx],edx
  46159b:	adc    DWORD PTR [rcx],0x7
  46159e:	and    BYTE PTR [rdx],al
  4615a0:	add    DWORD PTR [rcx],edx
  4615a2:	add    DWORD PTR [rip+0x5070f0c],0x8        # 0x54d24b5
  4615a9:	adc    al,BYTE PTR [rax+0xd8312d9]
  4615af:	adc    al,BYTE PTR [rax-0x6b7fed53]
  4615b5:	add    eax,0x83120020
  4615ba:	adc    eax,0xc002003
  4615bf:	or     ah,BYTE PTR [rax]
  4615c1:	add    eax,DWORD PTR [rcx]
  4615c3:	adc    al,BYTE PTR [rbx-0x7deef3eb]
  4615c9:	movabs eax,ds:0x12ad80120805070f
  4615d2:	(bad)  
  4615d3:	cdq    
  4615d4:	adc    DWORD PTR [rax-0x467eee2f],eax
  4615da:	add    eax,0x83120020
  4615df:	sbb    eax,0x8012006
  4615e4:	adc    al,BYTE PTR [rbx+0x1200621]
  4615ea:	add    DWORD PTR [rcx],edx
  4615ec:	and    DWORD PTR [rip+0x1202070c],0xffffff80        # 0x12481cff
  4615f3:	mov    WORD PTR [rip+0x1818012],ss        # 0x1c7960b
  4615f9:	adc    bl,BYTE PTR [rcx+rcx*1+0x15]
  4615fd:	adc    al,BYTE PTR [rax+0x120e02f9]
  461603:	adc    BYTE PTR [rax+0x1022007],0x13
  46160a:	add    BYTE PTR [rbx],dl
  46160c:	add    DWORD PTR [rsi],eax
  46160e:	and    BYTE PTR [rcx],al
  461610:	add    DWORD PTR [rdx],edx
  461612:	xor    cl,0x5
  461615:	(bad)  
  461616:	add    DWORD PTR [rdx],edx
  461618:	adc    BYTE PTR [rax+0x11002005],0x83
  46161f:	sub    eax,0xe012004
  461624:	(bad)  
  461625:	(bad)  
  461626:	and    BYTE PTR [rcx],al
  461628:	adc    eax,DWORD PTR [rcx]
  46162a:	adc    eax,DWORD PTR [rax]
  46162c:	or     DWORD PTR [rdi],eax
  46162e:	add    DWORD PTR [rip+0x1818012],edx        # 0x1c79646
  461634:	adc    bl,BYTE PTR [rsi+rax*1+0x7]
  461638:	add    dl,BYTE PTR [rdx]
  46163a:	or     BYTE PTR [rax+0x5070a0e],0xe
  461641:	(bad)  
  461642:	adc    al,BYTE PTR [rax+0xe1812e1]
  461648:	(bad)  
  461649:	add    BYTE PTR [rcx],al
  46164b:	adc    al,BYTE PTR [rcx+0x60e4d]
  461651:	add    DWORD PTR [rdx+rdx*1],ebx
  461654:	or     DWORD PTR [rbp+0x6],0x83120120
  46165b:	xor    eax,0x220090e
  461660:	sbb    al,0x12
  461662:	or     DWORD PTR [rbp+0x12],0x20073983
  461669:	add    eax,DWORD PTR [rcx]
  46166b:	sbb    al,0x1c
  46166d:	sbb    eax,0x4070b1c
  461672:	(bad)  
  461673:	adc    al,BYTE PTR [rcx+0x1218124d]
  461679:	xor    DWORD PTR [rip+0xe010703],0x6        # 0xe471d83
  461680:	and    BYTE PTR [rcx],al
  461682:	adc    al,BYTE PTR [rax+0x1290ef1]
  461688:	add    BYTE PTR [rcx+rsi*1],ah
  46168b:	xor    DWORD PTR gs:[rax],edi
  46168e:	cmp    BYTE PTR [rbp+0x36],ah
  461691:	xor    DWORD PTR [rip+0x35343464],ebp        # 0x357a4afb
  461697:	sub    eax,0x33666234
  46169c:	sub    eax,0x39653638
  4616a1:	sub    eax,0x62363034
  4616a6:	xor    eax,0x34663666
  4616ab:	xor    dh,BYTE PTR [rbx]
  4616ad:	xor    BYTE PTR [rax],al
  4616af:	add    BYTE PTR [rip+0x1],al        # 0x4616b6
  4616b5:	add    BYTE PTR [rax],dl
  4616b7:	add    DWORD PTR [rax],eax
  4616b9:	or     ecx,DWORD PTR [rcx+riz*2+0x6e]
  4616bd:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x65676150
  4616c5:	add    BYTE PTR [rax],al
  4616c7:	adc    BYTE PTR [rcx],al
  4616c9:	add    BYTE PTR [rbx],cl
  4616cb:	xor    DWORD PTR [rax],esi
  4616cd:	xor    BYTE PTR cs:[rsi],ch
  4616d0:	xor    dh,BYTE PTR [rip+0x302e3133]        # 0x30744809
  4616d6:	add    BYTE PTR [rax],al
  4616d8:	xor    DWORD PTR [rcx],eax
  4616da:	add    BYTE PTR [rcx+rsi*1],ch
  4616dd:	xor    BYTE PTR [rsi],ch
  4616df:	xor    BYTE PTR [rsi],ch
  4616e1:	xor    dh,BYTE PTR [rip+0x302e3133]        # 0x3074481a
  4616e7:	and    BYTE PTR [rax],ch
  4616e9:	sub    BYTE PTR [rbx+0x61],cl
  4616ec:	je     0x46175b
  4616ee:	(bad)  
  4616ef:	imul   ebx,DWORD PTR [rdi+0x50],0x4d5f5543
  4616f6:	(bad)  
  4616f7:	imul   ebp,DWORD PTR [rsi+0x29],0x3039302e
  4616fe:	xor    esi,DWORD PTR [rdx]
  461700:	cmp    DWORD PTR [rip+0x35343031],ebp        # 0x357a4737
  461706:	and    BYTE PTR [rcx],ch
  461708:	add    BYTE PTR [rax],al
  46170a:	add    QWORD PTR [r8],r8
  46170d:	rex.W
  46170e:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
  461716:	je     0x461738
  461718:	push   rbx
  461719:	push   rcx
  46171a:	rex.WR and BYTE PTR [rbx+0x65],r10b
  46171e:	jb     0x461796
  461720:	gs jb  0x461743
  461723:	imul   esi,DWORD PTR [rbx+0x20],0x65722061
  46172a:	imul   esi,DWORD PTR [ebx+0x74],0x64657265
  461732:	and    BYTE PTR [rdx+rsi*2+0x61],dh
  461736:	fs gs ins DWORD PTR es:[rdi],dx
  461739:	(bad)  
  46173a:	jb     0x4617a7
  46173c:	and    BYTE PTR [rdi+0x66],ch
  46173f:	and    BYTE PTR [rbp+0x69],cl
  461742:	movsxd esi,DWORD PTR [rdx+0x6f]
  461745:	jae    0x4617b6
  461747:	data16 je 0x46176a
  46174a:	rex.XB outs dx,DWORD PTR ds:[rsi]
  46174c:	jb     0x4617be
  46174e:	outs   dx,DWORD PTR ds:[rsi]
  46174f:	jb     0x4617b2
  461751:	je     0x4617bc
  461753:	outs   dx,DWORD PTR ds:[rsi]
  461754:	outs   dx,BYTE PTR ds:[rsi]
  461755:	add    BYTE PTR cs:[rax],al
  461758:	sub    DWORD PTR [rcx],eax
  46175a:	add    BYTE PTR [rcx*2+0x6f726369],ah
  461761:	jae    0x4617d2
  461763:	data16 je 0x461786
  461766:	rex.XB outs dx,DWORD PTR ds:[rsi]
  461768:	jb     0x4617da
  46176a:	and    BYTE PTR cs:[rcx+0x6c],al
  46176e:	ins    BYTE PTR es:[rdi],dx
  46176f:	and    BYTE PTR [rdx+0x69],dh
  461772:	addr32 push 0x72207374
  461778:	gs jae 0x4617e0
  46177b:	jb     0x4617f3
  46177d:	gs fs add BYTE PTR cs:[rax],al
  461782:	sbb    DWORD PTR [rcx],eax
  461784:	add    BYTE PTR [rcx*2+0x6f726369],dl
  46178b:	jae    0x4617fc
  46178d:	data16 je 0x4617b0
  461790:	push   rbx
  461791:	push   rcx
  461792:	rex.WR and BYTE PTR [rbx+0x65],r10b
  461796:	jb     0x46180e
  461798:	gs jb  0x46179b
  46179b:	add    BYTE PTR [rdx],bl
  46179d:	add    DWORD PTR [rax],eax
  46179f:	adc    eax,0x7263694d
  4617a4:	outs   dx,DWORD PTR ds:[rsi]
  4617a5:	jae    0x461816
  4617a7:	data16 je 0x4617ca
  4617aa:	rex.XB outs dx,DWORD PTR ds:[rsi]
  4617ac:	jb     0x46181e
  4617ae:	outs   dx,DWORD PTR ds:[rsi]
  4617af:	jb     0x461812
  4617b1:	je     0x46181c
  4617b3:	outs   dx,DWORD PTR ds:[rsi]
  4617b4:	outs   dx,BYTE PTR ds:[rsi]
  4617b5:	add    BYTE PTR [rax],al
  4617b7:	or     BYTE PTR [rcx],al
  4617b9:	add    BYTE PTR [rax],cl
  4617bb:	add    BYTE PTR [rax],al
  4617bd:	add    BYTE PTR [rax],al
  4617bf:	add    BYTE PTR [rsi],bl
  4617c1:	add    DWORD PTR [rax],eax
  4617c3:	add    DWORD PTR [rax],eax
  4617c5:	push   rsp
  4617c6:	add    dl,BYTE PTR [rsi]
  4617c8:	push   rdi
  4617c9:	jb     0x46182c
  4617cb:	jo     0x46181b
  4617cd:	outs   dx,DWORD PTR ds:[rsi]
  4617ce:	outs   dx,BYTE PTR ds:[rsi]
  4617cf:	rex.RB js 0x461835
  4617d2:	gs jo  0x461849
  4617d5:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f726854
  4617dc:	ja     0x461851
  4617de:	add    DWORD PTR [rax],eax
  4617e0:	add    BYTE PTR [rax],al
  4617e2:	add    BYTE PTR [rax],al
  4617e4:	mov    cl,0xb7
  4617e6:	iret   
  4617e7:	rex.WB add BYTE PTR [r8],al
  4617ea:	add    BYTE PTR [rax],al
  4617ec:	add    al,BYTE PTR [rax]
  4617ee:	add    BYTE PTR [rax],al
  4617f0:	sub    BYTE PTR [rax],al
  4617f2:	add    BYTE PTR [rax],al
  4617f4:	cld    
  4617f5:	(bad)  
  4617f6:	(bad)  
  4617f7:	add    ah,bh
  4617f9:	(bad)  
  4617fa:	(bad)  
  4617fb:	add    BYTE PTR [rdx+0x53],dl
  4617fe:	rex.R push rbx
  461800:	ss (bad) 
  461802:	push   rbp
  461803:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  461804:	xchg   edi,eax
  461805:	(bad)  
  461806:	(bad)  
  461807:	xor    DWORD PTR [rip+0x2a7df58f],0xffffffdc        # 0x2ac40d9e
  46180f:	mov    DWORD PTR [rcx],0x4c000000
  461815:	(bad)  
  461816:	outs   dx,BYTE PTR ds:[rsi]
  461817:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x65676150
  46181f:	cs jo  0x461886
  461822:	(bad)  
	...
