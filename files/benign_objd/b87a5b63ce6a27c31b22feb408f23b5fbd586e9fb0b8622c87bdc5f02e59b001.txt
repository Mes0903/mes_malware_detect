
b87a5b63ce6a27c31b22feb408f23b5fbd586e9fb0b8622c87bdc5f02e59b001.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0x1d635]        # 0x41e650
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0x1d636]        # 0x41e660
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0x1d639]        # 0x41e670
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0x1d5fc]        # 0x41e640
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0x1d48f]        # 0x41e4e0
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0x1d5d1]        # 0x41e630
  40105f:	mov    DWORD PTR [rip+0x1ffa3],edx        # 0x421008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x417960
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x411340
  401081:	mov    rdx,QWORD PTR [rip+0x1d4f8]        # 0x41e580
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0x1d4de]        # 0x41e570
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0x1d554]        # 0x41e5f0
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0x1d47b]        # 0x41e520
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x410f20
  4010af:	mov    rax,QWORD PTR [rip+0x1d3da]        # 0x41e490
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x417960
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0x100f9]        # 0x411220
  401127:	call   0x411210
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0x1d4b5]        # 0x41e620
  40116b:	lea    r8,[rip+0x1fea6]        # 0x421018
  401172:	lea    rdx,[rip+0x1fea7]        # 0x421020
  401179:	lea    rcx,[rip+0x1fea8]        # 0x421028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0x1fe78],eax        # 0x421000
  401188:	lea    rax,[rip+0x1fe71]        # 0x421000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0x1d445]        # 0x41e5e0
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x417978
  4011a3:	mov    DWORD PTR [rip+0x1fe67],eax        # 0x421010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0x1d46a]        # 0x41e630
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0x1d35b]        # 0x41e550
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0x22366]        # 0x423568
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0x1d337]        # 0x41e560
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0x1fdba],0x1        # 0x421004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0x1d26c]        # 0x41e4d0
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x411530
  40127d:	lea    rcx,[rip+0x1084c]        # 0x411ad0
  401284:	call   QWORD PTR [rip+0x222d6]        # 0x423560
  40128a:	mov    rdx,QWORD PTR [rip+0x1d2af]        # 0x41e540
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x4119e0
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x4179b0
  4012a5:	call   0x411320
  4012aa:	mov    rax,QWORD PTR [rip+0x1d22f]        # 0x41e4e0
  4012b1:	mov    QWORD PTR [rip+0x21480],rax        # 0x422738
  4012b8:	mov    rax,QWORD PTR [rip+0x1d251]        # 0x41e510
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0x21419],rax        # 0x422730
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x16cca],eax        # 0x418000
  401336:	mov    r12d,DWORD PTR [rip+0x1fceb]        # 0x421028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x417828
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0x1fcc2]        # 0x421020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x4177b8
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x417828
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x417820
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0x1fc6a],rbp        # 0x421020
  4013b6:	call   0x410ef0
  4013bb:	mov    rax,QWORD PTR [rip+0x1d12e]        # 0x41e4f0
  4013c2:	mov    rdx,QWORD PTR [rip+0x1fc4f]        # 0x421018
  4013c9:	mov    ecx,DWORD PTR [rip+0x1fc59]        # 0x421028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0x1fc3c]        # 0x421018
  4013dc:	mov    rdx,QWORD PTR [rip+0x1fc3d]        # 0x421020
  4013e3:	call   0x417b90
  4013e8:	mov    ecx,DWORD PTR [rip+0x1fc1a]        # 0x421008
  4013ee:	mov    DWORD PTR [rip+0x1fc18],eax        # 0x42100c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0x1fc02]        # 0x421004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x417948
  40140b:	mov    eax,DWORD PTR [rip+0x1fbfb]        # 0x42100c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0x1d129]        # 0x41e560
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x417950
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0x1d14d]        # 0x41e5b0
  401463:	mov    rcx,QWORD PTR [rip+0x1d136]        # 0x41e5a0
  40146a:	call   0x417908
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0x22067]        # 0x423500
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0x1d129]        # 0x41e5d0
  4014a7:	mov    rcx,QWORD PTR [rip+0x1d112]        # 0x41e5c0
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x417908
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x4178b0
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0x1d155]        # 0x41e630
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x410f30
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0x1d125]        # 0x41e630
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x410f30
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	sub    rsp,0x38
  401534:	mov    QWORD PTR [rsp+0x50],r8
  401539:	lea    r8,[rsp+0x50]
  40153e:	mov    QWORD PTR [rsp+0x58],r9
  401543:	mov    QWORD PTR [rsp+0x28],r8
  401548:	call   0x412cf0
  40154d:	add    rsp,0x38
  401551:	ret    
  401552:	nop    DWORD PTR [rax+0x0]
  401556:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401560:	sub    rsp,0x38
  401564:	mov    QWORD PTR [rsp+0x48],rdx
  401569:	lea    rdx,[rsp+0x48]
  40156e:	mov    QWORD PTR [rsp+0x50],r8
  401573:	mov    QWORD PTR [rsp+0x58],r9
  401578:	mov    QWORD PTR [rsp+0x28],rdx
  40157d:	call   0x412d20
  401582:	add    rsp,0x38
  401586:	ret    
  401587:	nop    WORD PTR [rax+rax*1+0x0]
  401590:	push   r15
  401592:	push   r14
  401594:	mov    eax,0x1868
  401599:	push   r13
  40159b:	push   r12
  40159d:	push   rbp
  40159e:	push   rdi
  40159f:	push   rsi
  4015a0:	push   rbx
  4015a1:	call   0x4122a0
  4015a6:	sub    rsp,rax
  4015a9:	mov    rdi,rcx
  4015ac:	mov    rcx,r8
  4015af:	mov    QWORD PTR [rsp+0x18b8],rdx
  4015b7:	mov    rbp,r8
  4015ba:	call   0x4177b8
  4015bf:	add    rax,0x5
  4015c3:	cmp    rax,0x400
  4015c9:	ja     0x4017b3
  4015cf:	lea    r13,[rsp+0x60]
  4015d4:	lea    r8,[rip+0x17a3f]        # 0x41901a
  4015db:	mov    r9,rbp
  4015de:	mov    edx,0x400
  4015e3:	mov    rcx,r13
  4015e6:	call   0x40e1b0
  4015eb:	lea    rdx,[rsp+0x20]
  4015f0:	mov    rcx,r13
  4015f3:	call   QWORD PTR [rip+0x2220f]        # 0x423808
  4015f9:	cmp    eax,0xffffffff
  4015fc:	mov    r14d,eax
  4015ff:	jne    0x401794
  401605:	lea    rdx,[rip+0x17a2a]        # 0x419036
  40160c:	mov    rcx,r13
  40160f:	call   0x417888
  401614:	test   rax,rax
  401617:	mov    r12,rax
  40161a:	je     0x401805
  401620:	lea    rdx,[rip+0x17a47]        # 0x41906e
  401627:	mov    rcx,rbp
  40162a:	call   0x417888
  40162f:	test   rax,rax
  401632:	mov    rsi,rax
  401635:	je     0x4017d2
  40163b:	mov    BYTE PTR [rsp+0x185f],0x0
  401643:	lea    rbx,[rsp+0x460]
  40164b:	jmp    0x40165b
  40164d:	nop    DWORD PTR [rax]
  401650:	mov    rdx,r12
  401653:	mov    rcx,rbx
  401656:	call   0x417870
  40165b:	mov    r8,rsi
  40165e:	mov    edx,0x13ff
  401663:	mov    rcx,rbx
  401666:	call   0x417890
  40166b:	test   rax,rax
  40166e:	jne    0x401650
  401670:	mov    rcx,r12
  401673:	call   0x4178a8
  401678:	mov    rcx,rsi
  40167b:	call   0x4178a8
  401680:	lea    rdx,[rip+0x179af]        # 0x419036
  401687:	mov    rcx,rbp
  40168a:	call   0x417888
  40168f:	test   rax,rax
  401692:	mov    r12,rax
  401695:	je     0x4017df
  40169b:	lea    rdx,[rip+0x179cc]        # 0x41906e
  4016a2:	mov    rcx,r13
  4016a5:	call   0x417888
  4016aa:	test   rax,rax
  4016ad:	mov    rbp,rax
  4016b0:	je     0x40183e
  4016b6:	lea    rbx,[rsp+0x460]
  4016be:	xor    r14d,r14d
  4016c1:	mov    r8,rbp
  4016c4:	mov    edx,0x13ff
  4016c9:	mov    rcx,rbx
  4016cc:	call   0x417890
  4016d1:	test   rax,rax
  4016d4:	mov    rsi,rax
  4016d7:	je     0x401741
  4016d9:	mov    edx,0x3a
  4016de:	mov    rcx,rbx
  4016e1:	call   0x4177e0
  4016e6:	test   rax,rax
  4016e9:	mov    r15,rax
  4016ec:	je     0x4016c1
  4016ee:	mov    rcx,rdi
  4016f1:	call   0x4177b8
  4016f6:	mov    r8d,r15d
  4016f9:	mov    rdx,rdi
  4016fc:	mov    rcx,rsi
  4016ff:	sub    r8d,esi
  401702:	cmp    r8,rax
  401705:	cmovb  r8,rax
  401709:	call   0x4177b0
  40170e:	test   eax,eax
  401710:	jne    0x401734
  401712:	mov    r9,QWORD PTR [rsp+0x18b8]
  40171a:	lea    rdx,[rip+0x1796a]        # 0x41908b
  401721:	mov    r8,rdi
  401724:	mov    rcx,r12
  401727:	mov    r14d,0x1
  40172d:	call   0x401530
  401732:	jmp    0x4016c1
  401734:	mov    rdx,r12
  401737:	mov    rcx,rbx
  40173a:	call   0x417870
  40173f:	jmp    0x4016c1
  401741:	test   r14d,r14d
  401744:	je     0x401778
  401746:	mov    rcx,r12
  401749:	xor    r14d,r14d
  40174c:	call   0x4178a8
  401751:	mov    rcx,rbp
  401754:	call   0x4178a8
  401759:	mov    rcx,r13
  40175c:	call   0x4177f0
  401761:	mov    eax,r14d
  401764:	add    rsp,0x1868
  40176b:	pop    rbx
  40176c:	pop    rsi
  40176d:	pop    rdi
  40176e:	pop    rbp
  40176f:	pop    r12
  401771:	pop    r13
  401773:	pop    r14
  401775:	pop    r15
  401777:	ret    
  401778:	mov    r9,QWORD PTR [rsp+0x18b8]
  401780:	lea    rdx,[rip+0x17904]        # 0x41908b
  401787:	mov    r8,rdi
  40178a:	mov    rcx,r12
  40178d:	call   0x401530
  401792:	jmp    0x401746
  401794:	call   QWORD PTR [rip+0x21e36]        # 0x4235d0
  40179a:	lea    rdx,[rip+0x17880]        # 0x419021
  4017a1:	lea    rcx,[rax+0x60]
  4017a5:	mov    r8,r13
  4017a8:	or     r14d,0xffffffff
  4017ac:	call   0x401530
  4017b1:	jmp    0x401761
  4017b3:	call   QWORD PTR [rip+0x21e17]        # 0x4235d0
  4017b9:	lea    rdx,[rip+0x17840]        # 0x419000
  4017c0:	lea    rcx,[rax+0x60]
  4017c4:	mov    r8,rbp
  4017c7:	or     r14d,0xffffffff
  4017cb:	call   0x401530
  4017d0:	jmp    0x401761
  4017d2:	mov    rcx,r12
  4017d5:	call   0x4178a8
  4017da:	jmp    0x401680
  4017df:	call   QWORD PTR [rip+0x21deb]        # 0x4235d0
  4017e5:	lea    rdx,[rip+0x1784c]        # 0x419038
  4017ec:	lea    rcx,[rax+0x60]
  4017f0:	mov    r8,rbp
  4017f3:	call   0x401530
  4017f8:	mov    rcx,r13
  4017fb:	call   0x4177f0
  401800:	jmp    0x401761
  401805:	mov    rbx,QWORD PTR [rip+0x21dc4]        # 0x4235d0
  40180c:	call   rbx
  40180e:	lea    rdx,[rip+0x17823]        # 0x419038
  401815:	lea    rcx,[rax+0x60]
  401819:	mov    r8,r13
  40181c:	call   0x401530
  401821:	call   rbx
  401823:	lea    rdx,[rip+0x1782a]        # 0x419054
  40182a:	lea    rcx,[rax+0x60]
  40182e:	mov    r9,r13
  401831:	mov    r8,rbp
  401834:	call   0x401530
  401839:	jmp    0x401761
  40183e:	call   QWORD PTR [rip+0x21d8c]        # 0x4235d0
  401844:	lea    rdx,[rip+0x17825]        # 0x419070
  40184b:	lea    rcx,[rax+0x60]
  40184f:	mov    r8,r13
  401852:	call   0x401530
  401857:	mov    rcx,r13
  40185a:	call   0x4177f0
  40185f:	mov    rcx,r12
  401862:	call   0x4178a8
  401867:	jmp    0x401761
  40186c:	nop
  40186d:	nop
  40186e:	nop
  40186f:	nop
  401870:	jmp    QWORD PTR [rip+0x21c2a]        # 0x4234a0
  401876:	nop
  401877:	nop
  401878:	jmp    QWORD PTR [rip+0x21c1a]        # 0x423498
  40187e:	nop
  40187f:	nop
  401880:	jmp    QWORD PTR [rip+0x21c0a]        # 0x423490
  401886:	nop
  401887:	nop
  401888:	jmp    QWORD PTR [rip+0x21bfa]        # 0x423488
  40188e:	nop
  40188f:	nop
  401890:	sub    rsp,0x28
  401894:	lea    rcx,[rip+0x167a5]        # 0x418040
  40189b:	xor    edx,edx
  40189d:	call   0x40da80
  4018a2:	mov    ecx,0x1
  4018a7:	call   0x4178b0
  4018ac:	nop
  4018ad:	nop    DWORD PTR [rax]
  4018b0:	push   rsi
  4018b1:	push   rbx
  4018b2:	sub    rsp,0x28
  4018b6:	cmp    rcx,0xf
  4018ba:	mov    rbx,rcx
  4018bd:	mov    rsi,rdx
  4018c0:	ja     0x4018e0
  4018c2:	lea    r8,[rip+0x178bf]        # 0x419188
  4018c9:	mov    r9d,0x1
  4018cf:	mov    rdx,rsi
  4018d2:	mov    rcx,rbx
  4018d5:	add    rsp,0x28
  4018d9:	pop    rbx
  4018da:	pop    rsi
  4018db:	jmp    0x409170
  4018e0:	call   0x401ac0
  4018e5:	cmp    DWORD PTR [rsi+0x18],0x200
  4018ec:	jbe    0x401904
  4018ee:	call   QWORD PTR [rip+0x21cdc]        # 0x4235d0
  4018f4:	mov    rdx,QWORD PTR [rip+0x1cd85]        # 0x41e680
  4018fb:	add    rax,0x60
  4018ff:	mov    QWORD PTR [rdx],rax
  401902:	jmp    0x4018c2
  401904:	add    rsp,0x28
  401908:	pop    rbx
  401909:	pop    rsi
  40190a:	ret    
  40190b:	nop    DWORD PTR [rax+rax*1+0x0]
  401910:	push   rsi
  401911:	push   rbx
  401912:	sub    rsp,0x28
  401916:	cmp    rcx,0xf
  40191a:	mov    rbx,rcx
  40191d:	mov    rsi,rdx
  401920:	ja     0x401940
  401922:	lea    r8,[rip+0x17857]        # 0x419180
  401929:	mov    r9d,0x1
  40192f:	mov    rdx,rsi
  401932:	mov    rcx,rbx
  401935:	add    rsp,0x28
  401939:	pop    rbx
  40193a:	pop    rsi
  40193b:	jmp    0x409170
  401940:	call   0x401ac0
  401945:	cmp    DWORD PTR [rsi+0x18],0x270f
  40194c:	jbe    0x401964
  40194e:	call   QWORD PTR [rip+0x21c7c]        # 0x4235d0
  401954:	mov    rdx,QWORD PTR [rip+0x1cd25]        # 0x41e680
  40195b:	add    rax,0x60
  40195f:	mov    QWORD PTR [rdx],rax
  401962:	jmp    0x401922
  401964:	add    rsp,0x28
  401968:	pop    rbx
  401969:	pop    rsi
  40196a:	ret    
  40196b:	nop
  40196c:	nop
  40196d:	nop
  40196e:	nop
  40196f:	nop
  401970:	push   rsi
  401971:	push   rbx
  401972:	sub    rsp,0x28
  401976:	mov    eax,DWORD PTR [rdx+0x10]
  401979:	mov    r8,QWORD PTR [rdx+0x38]
  40197d:	mov    rsi,rcx
  401980:	mov    rbx,rdx
  401983:	and    eax,0xfffff00
  401988:	or     eax,0x8
  40198b:	test   r8,r8
  40198e:	mov    DWORD PTR [rdx+0x10],eax
  401991:	je     0x401999
  401993:	call   r8
  401996:	mov    eax,DWORD PTR [rbx+0x10]
  401999:	movzx  edx,WORD PTR [rbx]
  40199c:	mov    rcx,QWORD PTR [rsi+0xc8]
  4019a3:	and    eax,0xfffff00
  4019a8:	mov    rcx,QWORD PTR [rcx+rdx*8]
  4019ac:	mov    QWORD PTR [rbx+0x18],rcx
  4019b0:	mov    rcx,QWORD PTR [rsi+0xd0]
  4019b7:	mov    rdx,QWORD PTR [rcx+rdx*8]
  4019bb:	mov    DWORD PTR [rbx+0x10],eax
  4019be:	mov    QWORD PTR [rbx+0x20],rdx
  4019c2:	add    rsp,0x28
  4019c6:	pop    rbx
  4019c7:	pop    rsi
  4019c8:	ret    
  4019c9:	nop    DWORD PTR [rax+0x0]
  4019d0:	push   rbp
  4019d1:	push   rdi
  4019d2:	push   rsi
  4019d3:	push   rbx
  4019d4:	sub    rsp,0x28
  4019d8:	mov    eax,DWORD PTR [rcx]
  4019da:	lea    rbx,[rcx+0x8]
  4019de:	mov    rbp,rcx
  4019e1:	lea    edx,[rax-0x1]
  4019e4:	test   eax,eax
  4019e6:	lea    rdi,[rbx+rdx*8+0x8]
  4019eb:	jg     0x4019fd
  4019ed:	jmp    0x401a20
  4019ef:	nop
  4019f0:	mov    rcx,rsi
  4019f3:	call   0x417860
  4019f8:	cmp    rbx,rdi
  4019fb:	je     0x401a20
  4019fd:	add    rbx,0x8
  401a01:	mov    rsi,QWORD PTR [rbx-0x8]
  401a05:	cmp    DWORD PTR [rsi],0x6
  401a08:	jne    0x4019f0
  401a0a:	mov    rcx,QWORD PTR [rsi+0x10]
  401a0e:	call   0x4019d0
  401a13:	mov    rcx,rsi
  401a16:	call   0x417860
  401a1b:	cmp    rbx,rdi
  401a1e:	jne    0x4019fd
  401a20:	mov    rcx,rbp
  401a23:	add    rsp,0x28
  401a27:	pop    rbx
  401a28:	pop    rsi
  401a29:	pop    rdi
  401a2a:	pop    rbp
  401a2b:	jmp    0x417860
  401a30:	push   rdi
  401a31:	push   rsi
  401a32:	push   rbx
  401a33:	sub    rsp,0x20
  401a37:	mov    rdi,QWORD PTR [rip+0x21ce2]        # 0x423720
  401a3e:	mov    rsi,rcx
  401a41:	jmp    0x401a47
  401a43:	add    rsi,0x1
  401a47:	movzx  ecx,BYTE PTR [rsi]
  401a4a:	call   rdi
  401a4c:	test   eax,eax
  401a4e:	jne    0x401a43
  401a50:	mov    rcx,rsi
  401a53:	call   0x4177b8
  401a58:	lea    rbx,[rsi+rax*1]
  401a5c:	cmp    rbx,rsi
  401a5f:	ja     0x401a6c
  401a61:	jmp    0x401a76
  401a63:	sub    rbx,0x1
  401a67:	cmp    rbx,rsi
  401a6a:	je     0x401a76
  401a6c:	movzx  ecx,BYTE PTR [rbx-0x1]
  401a70:	call   rdi
  401a72:	test   eax,eax
  401a74:	jne    0x401a63
  401a76:	mov    rax,rsi
  401a79:	mov    BYTE PTR [rbx],0x0
  401a7c:	add    rsp,0x20
  401a80:	pop    rbx
  401a81:	pop    rsi
  401a82:	pop    rdi
  401a83:	ret    
  401a84:	xchg   ax,ax
  401a86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401a90:	sub    rsp,0x38
  401a94:	mov    QWORD PTR [rsp+0x50],r8
  401a99:	lea    r8,[rsp+0x50]
  401a9e:	mov    QWORD PTR [rsp+0x58],r9
  401aa3:	mov    QWORD PTR [rsp+0x28],r8
  401aa8:	call   0x412cf0
  401aad:	add    rsp,0x38
  401ab1:	ret    
  401ab2:	nop    DWORD PTR [rax+0x0]
  401ab6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401ac0:	push   r13
  401ac2:	push   r12
  401ac4:	push   rbp
  401ac5:	push   rdi
  401ac6:	push   rsi
  401ac7:	push   rbx
  401ac8:	sub    rsp,0x38
  401acc:	cmp    rcx,0xf
  401ad0:	jbe    0x401add
  401ad2:	test   rdx,rdx
  401ad5:	je     0x401add
  401ad7:	test   BYTE PTR [rdx+0x10],0x8
  401adb:	je     0x401af0
  401add:	add    rsp,0x38
  401ae1:	pop    rbx
  401ae2:	pop    rsi
  401ae3:	pop    rdi
  401ae4:	pop    rbp
  401ae5:	pop    r12
  401ae7:	pop    r13
  401ae9:	ret    
  401aea:	nop    WORD PTR [rax+rax*1+0x0]
  401af0:	cmp    QWORD PTR [rdx+0x18],0x0
  401af5:	je     0x401add
  401af7:	mov    rbx,rdx
  401afa:	mov    rsi,rcx
  401afd:	mov    rdi,QWORD PTR [rip+0x21b14]        # 0x423618
  401b04:	call   rdi
  401b06:	mov    DWORD PTR [rax],0x0
  401b0c:	mov    rcx,QWORD PTR [rbx+0x18]
  401b10:	lea    rdx,[rsp+0x28]
  401b15:	xor    r8d,r8d
  401b18:	call   0x417788
  401b1d:	mov    rbp,QWORD PTR [rbx+0x18]
  401b21:	cmp    rbp,QWORD PTR [rsp+0x28]
  401b26:	mov    r12d,eax
  401b29:	je     0x401b64
  401b2b:	call   rdi
  401b2d:	mov    eax,DWORD PTR [rax]
  401b2f:	test   eax,eax
  401b31:	jne    0x401b60
  401b33:	mov    eax,DWORD PTR [rbx+0x10]
  401b36:	test   eax,0x1000000
  401b3b:	jne    0x401baf
  401b3d:	mov    rdx,QWORD PTR [rsp+0x28]
  401b42:	cmp    BYTE PTR [rdx],0x0
  401b45:	jne    0x401b60
  401b47:	test   al,0x40
  401b49:	jne    0x401c20
  401b4f:	mov    DWORD PTR [rbx+0x18],r12d
  401b53:	jmp    0x401add
  401b55:	cmp    cl,0x67
  401b58:	je     0x401c06
  401b5e:	xchg   ax,ax
  401b60:	mov    rbp,QWORD PTR [rbx+0x18]
  401b64:	mov    r13,QWORD PTR [rsi+0x28]
  401b68:	mov    r12,QWORD PTR [rip+0x16ee9]        # 0x418a58
  401b6f:	call   QWORD PTR [rip+0x21a5b]        # 0x4235d0
  401b75:	lea    rcx,[rax+0x60]
  401b79:	mov    r9,rbp
  401b7c:	mov    r8,r13
  401b7f:	mov    rdx,r12
  401b82:	call   0x401a90
  401b87:	test   BYTE PTR [rsi+0x10],0x4
  401b8b:	je     0x401b9b
  401b8d:	mov    edx,0x1
  401b92:	mov    rcx,rsi
  401b95:	call   QWORD PTR [rsi+0x98]
  401b9b:	call   rdi
  401b9d:	mov    DWORD PTR [rax],0x16
  401ba3:	mov    DWORD PTR [rbx+0x18],0xffffffff
  401baa:	jmp    0x401add
  401baf:	mov    r8,QWORD PTR [rsp+0x28]
  401bb4:	lea    rdx,[r8+0x1]
  401bb8:	mov    QWORD PTR [rsp+0x28],rdx
  401bbd:	movzx  ecx,BYTE PTR [r8]
  401bc1:	cmp    cl,0x54
  401bc4:	je     0x401c32
  401bc6:	jg     0x401be6
  401bc8:	cmp    cl,0x47
  401bcb:	je     0x401c36
  401bcd:	jle    0x401c3c
  401bcf:	cmp    cl,0x4b
  401bd2:	je     0x401bdd
  401bd4:	cmp    cl,0x4d
  401bd7:	jne    0x401b60
  401bd9:	shl    r12d,0xa
  401bdd:	shl    r12d,0xa
  401be1:	jmp    0x401b42
  401be6:	cmp    cl,0x6b
  401be9:	je     0x401c14
  401beb:	jle    0x401b55
  401bf1:	cmp    cl,0x6d
  401bf4:	je     0x401c0d
  401bf6:	imul   r12d,r12d,0x3e8
  401bfd:	cmp    cl,0x74
  401c00:	jne    0x401b60
  401c06:	imul   r12d,r12d,0x3e8
  401c0d:	imul   r12d,r12d,0x3e8
  401c14:	imul   r12d,r12d,0x3e8
  401c1b:	jmp    0x401b42
  401c20:	mov    rcx,QWORD PTR [rbx+0x18]
  401c24:	call   0x417860
  401c29:	and    DWORD PTR [rbx+0x10],0xffffffbf
  401c2d:	jmp    0x401b4f
  401c32:	shl    r12d,0xa
  401c36:	shl    r12d,0xa
  401c3a:	jmp    0x401bd9
  401c3c:	test   cl,cl
  401c3e:	jne    0x401b60
  401c44:	mov    QWORD PTR [rsp+0x28],r8
  401c49:	mov    rdx,r8
  401c4c:	jmp    0x401b42
  401c51:	nop    DWORD PTR [rax+rax*1+0x0]
  401c56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401c60:	push   rsi
  401c61:	push   rbx
  401c62:	sub    rsp,0x28
  401c66:	test   rdx,rdx
  401c69:	mov    rsi,rcx
  401c6c:	mov    rbx,rdx
  401c6f:	je     0x401cb0
  401c71:	mov    edx,0xa
  401c76:	mov    rcx,rbx
  401c79:	call   0x4177e0
  401c7e:	test   rax,rax
  401c81:	je     0x401cc4
  401c83:	sub    rax,rbx
  401c86:	mov    r9,rsi
  401c89:	mov    edx,0x1
  401c8e:	mov    r8,rax
  401c91:	mov    rcx,rbx
  401c94:	call   0x417848
  401c99:	mov    rdx,rsi
  401c9c:	mov    ecx,0xa
  401ca1:	add    rsp,0x28
  401ca5:	pop    rbx
  401ca6:	pop    rsi
  401ca7:	jmp    0x417878
  401cac:	nop    DWORD PTR [rax+0x0]
  401cb0:	test   r8,r8
  401cb3:	mov    rbx,r8
  401cb6:	jne    0x401c71
  401cb8:	test   r9,r9
  401cbb:	jne    0x401cd1
  401cbd:	add    rsp,0x28
  401cc1:	pop    rbx
  401cc2:	pop    rsi
  401cc3:	ret    
  401cc4:	mov    rdx,rsi
  401cc7:	mov    rcx,rbx
  401cca:	call   0x417870
  401ccf:	jmp    0x401c99
  401cd1:	mov    rbx,r9
  401cd4:	jmp    0x401c71
  401cd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401ce0:	push   rsi
  401ce1:	push   rbx
  401ce2:	sub    rsp,0x28
  401ce6:	cmp    BYTE PTR [rcx],0x27
  401ce9:	mov    rbx,rcx
  401cec:	jne    0x401d1b
  401cee:	mov    rsi,QWORD PTR [rip+0x218db]        # 0x4235d0
  401cf5:	call   rsi
  401cf7:	lea    rcx,[rip+0x19153]        # 0x41ae51
  401cfe:	lea    r9,[rax+0x30]
  401d02:	mov    r8d,0x2
  401d08:	mov    edx,0x1
  401d0d:	add    rbx,0x1
  401d11:	call   0x417848
  401d16:	cmp    BYTE PTR [rbx],0x27
  401d19:	je     0x401cf5
  401d1b:	mov    rax,rbx
  401d1e:	add    rsp,0x28
  401d22:	pop    rbx
  401d23:	pop    rsi
  401d24:	ret    
  401d25:	nop
  401d26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401d30:	push   r12
  401d32:	push   rbp
  401d33:	push   rdi
  401d34:	push   rsi
  401d35:	push   rbx
  401d36:	sub    rsp,0x20
  401d3a:	test   BYTE PTR [rdx+0x10],0x20
  401d3e:	mov    rdi,rcx
  401d41:	mov    r12,rdx
  401d44:	mov    rbx,r8
  401d47:	je     0x401d55
  401d49:	cmp    WORD PTR [rdx+0x8],0x8000
  401d4f:	je     0x401e60
  401d55:	mov    rsi,QWORD PTR [r12+0x50]
  401d5a:	mov    rcx,rsi
  401d5d:	mov    ebp,0x11
  401d62:	call   0x4177b8
  401d67:	mov    rdx,rdi
  401d6a:	mov    rcx,rsi
  401d6d:	sub    ebp,eax
  401d6f:	call   0x417870
  401d74:	test   rbx,rbx
  401d77:	je     0x401e40
  401d7d:	lea    rcx,[rip+0x17a3c]        # 0x4197c0
  401d84:	mov    r9,rdi
  401d87:	mov    r8d,0x3
  401d8d:	mov    edx,0x1
  401d92:	lea    esi,[rbp-0x1]
  401d95:	call   0x417848
  401d9a:	test   ebp,ebp
  401d9c:	jle    0x401db5
  401d9e:	xchg   ax,ax
  401da0:	mov    rdx,rdi
  401da3:	mov    ecx,0x20
  401da8:	sub    esi,0x1
  401dab:	call   0x417878
  401db0:	cmp    esi,0xffffffff
  401db3:	jne    0x401da0
  401db5:	mov    eax,DWORD PTR [r12+0x10]
  401dba:	and    eax,0xf000
  401dbf:	cmp    eax,0x5000
  401dc4:	jne    0x401e05
  401dc6:	jmp    0x401e69
  401dcb:	nop    DWORD PTR [rax+rax*1+0x0]
  401dd0:	mov    rdx,rax
  401dd3:	mov    rcx,rbx
  401dd6:	mov    r9,rdi
  401dd9:	sub    rdx,rbx
  401ddc:	mov    r8d,0x1
  401de2:	lea    rbx,[rsi+0x1]
  401de6:	call   0x417848
  401deb:	lea    rcx,[rip+0x179d5]        # 0x4197c7
  401df2:	mov    r9,rdi
  401df5:	mov    r8d,0x2
  401dfb:	mov    edx,0x1
  401e00:	call   0x417848
  401e05:	mov    edx,0xa
  401e0a:	mov    rcx,rbx
  401e0d:	call   0x4177e0
  401e12:	test   rax,rax
  401e15:	mov    rsi,rax
  401e18:	jne    0x401dd0
  401e1a:	mov    rdx,rdi
  401e1d:	mov    rcx,rbx
  401e20:	call   0x417870
  401e25:	mov    rdx,rdi
  401e28:	mov    ecx,0xa
  401e2d:	add    rsp,0x20
  401e31:	pop    rbx
  401e32:	pop    rsi
  401e33:	pop    rdi
  401e34:	pop    rbp
  401e35:	pop    r12
  401e37:	jmp    0x417878
  401e3c:	nop    DWORD PTR [rax+0x0]
  401e40:	mov    eax,DWORD PTR [r12+0x10]
  401e45:	and    eax,0xf000
  401e4a:	cmp    eax,0x5000
  401e4f:	jne    0x401e25
  401e51:	jmp    0x401d7d
  401e56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401e60:	mov    rsi,QWORD PTR [rdx+0x58]
  401e64:	jmp    0x401d5a
  401e69:	lea    rdx,[rip+0x17954]        # 0x4197c4
  401e70:	mov    r8d,ebx
  401e73:	mov    rcx,rdi
  401e76:	call   0x401a90
  401e7b:	jmp    0x401e25
  401e7d:	nop    DWORD PTR [rax]
  401e80:	sub    rsp,0x38
  401e84:	mov    QWORD PTR [rsp+0x58],r9
  401e89:	lea    r9,[rsp+0x58]
  401e8e:	mov    QWORD PTR [rsp+0x28],r9
  401e93:	call   0x412d60
  401e98:	add    rsp,0x38
  401e9c:	ret    
  401e9d:	nop    DWORD PTR [rax]
  401ea0:	sub    rsp,0x38
  401ea4:	mov    QWORD PTR [rsp+0x48],rdx
  401ea9:	lea    rdx,[rsp+0x48]
  401eae:	mov    QWORD PTR [rsp+0x50],r8
  401eb3:	mov    QWORD PTR [rsp+0x58],r9
  401eb8:	mov    QWORD PTR [rsp+0x28],rdx
  401ebd:	call   0x412d20
  401ec2:	add    rsp,0x38
  401ec6:	ret    
  401ec7:	nop    WORD PTR [rax+rax*1+0x0]
  401ed0:	push   rbx
  401ed1:	sub    rsp,0x20
  401ed5:	cmp    BYTE PTR [rip+0x1f198],0x0        # 0x421074
  401edc:	mov    ebx,ecx
  401ede:	jne    0x401ee7
  401ee0:	mov    ecx,ebx
  401ee2:	call   0x4178b0
  401ee7:	mov    edx,ecx
  401ee9:	lea    rcx,[rip+0x178da]        # 0x4197ca
  401ef0:	call   0x401ea0
  401ef5:	jmp    0x401ee0
  401ef7:	nop    WORD PTR [rax+rax*1+0x0]
  401f00:	push   rsi
  401f01:	push   rbx
  401f02:	sub    rsp,0x28
  401f06:	mov    rbx,QWORD PTR [rip+0x16a13]        # 0x418920
  401f0d:	mov    rsi,rcx
  401f10:	call   QWORD PTR [rip+0x216ba]        # 0x4235d0
  401f16:	lea    rcx,[rax+0x60]
  401f1a:	mov    r8,rsi
  401f1d:	mov    rdx,rbx
  401f20:	call   0x401a90
  401f25:	mov    ecx,0x46
  401f2a:	call   0x401ed0
  401f2f:	nop
  401f30:	push   r15
  401f32:	push   r14
  401f34:	push   r13
  401f36:	push   r12
  401f38:	push   rbp
  401f39:	push   rdi
  401f3a:	push   rsi
  401f3b:	push   rbx
  401f3c:	sub    rsp,0x58
  401f40:	cmp    rcx,0xf
  401f44:	mov    QWORD PTR [rsp+0xa0],rcx
  401f4c:	mov    r13,rdx
  401f4f:	mov    rbx,r8
  401f52:	mov    ebp,r9d
  401f55:	ja     0x4021d3
  401f5b:	mov    r8,QWORD PTR [r13+0x50]
  401f5f:	mov    rdx,QWORD PTR [rip+0x16caa]        # 0x418c10
  401f66:	mov    rcx,QWORD PTR [rip+0x1f0db]        # 0x421048
  401f6d:	call   0x401a90
  401f72:	mov    rdi,QWORD PTR [rbx]
  401f75:	mov    DWORD PTR [rsp+0x38],0x0
  401f7d:	cmp    BYTE PTR [rdi],0x7f
  401f80:	je     0x402210
  401f86:	mov    rcx,rdi
  401f89:	mov    r12,rbx
  401f8c:	mov    r14d,ebp
  401f8f:	xor    esi,esi
  401f91:	xor    r15d,r15d
  401f94:	jmp    0x401fa4
  401f96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401fa0:	mov    rcx,QWORD PTR [r12]
  401fa4:	call   0x4177b8
  401fa9:	add    rax,0x1
  401fad:	add    r12,0x8
  401fb1:	cmp    r15,rax
  401fb4:	cmovb  r15,rax
  401fb8:	sub    r14d,0x1
  401fbc:	add    rsi,rax
  401fbf:	test   r14d,r14d
  401fc2:	jg     0x401fa0
  401fc4:	cmp    r15,0x23
  401fc8:	jbe    0x402050
  401fce:	mov    esi,ebp
  401fd0:	jmp    0x401fd5
  401fd2:	mov    rdi,QWORD PTR [rbx]
  401fd5:	mov    rcx,QWORD PTR [rip+0x1f06c]        # 0x421048
  401fdc:	lea    rdx,[rip+0x18d4d]        # 0x41ad30
  401fe3:	mov    r8,rdi
  401fe6:	sub    esi,0x1
  401fe9:	add    rbx,0x8
  401fed:	call   0x401a90
  401ff2:	test   esi,esi
  401ff4:	jg     0x401fd2
  401ff6:	cmp    QWORD PTR [rsp+0xa0],0xf
  401fff:	ja     0x40215f
  402005:	mov    eax,DWORD PTR [r13+0x10]
  402009:	and    eax,0xf000
  40200e:	cmp    eax,0x4000
  402013:	je     0x4021a5
  402019:	mov    eax,DWORD PTR [rsp+0x38]
  40201d:	mov    rdx,QWORD PTR [rip+0x169a4]        # 0x4189c8
  402024:	mov    rcx,QWORD PTR [rip+0x1f01d]        # 0x421048
  40202b:	lea    r9d,[rax+rbp*1-0x1]
  402030:	mov    r8d,eax
  402033:	call   0x401a90
  402038:	nop
  402039:	add    rsp,0x58
  40203d:	pop    rbx
  40203e:	pop    rsi
  40203f:	pop    rdi
  402040:	pop    rbp
  402041:	pop    r12
  402043:	pop    r13
  402045:	pop    r14
  402047:	pop    r15
  402049:	ret    
  40204a:	nop    WORD PTR [rax+rax*1+0x0]
  402050:	cmp    rsi,0x4b
  402054:	jbe    0x402100
  40205a:	lea    r12,[rsp+0x40]
  40205f:	lea    r8,[rip+0x18cd0]        # 0x41ad36
  402066:	mov    r9d,r15d
  402069:	mov    edx,0x10
  40206e:	mov    rcx,r12
  402071:	call   0x401e80
  402076:	cmp    eax,0xf
  402079:	jg     0x40224c
  40207f:	mov    eax,0x4e
  402084:	xor    edx,edx
  402086:	mov    r9,QWORD PTR [rip+0x1efbb]        # 0x421048
  40208d:	div    r15
  402090:	lea    rcx,[rip+0x18c67]        # 0x41acfe
  402097:	mov    r8d,0x2
  40209d:	mov    edx,0x1
  4020a2:	add    rbx,0x8
  4020a6:	mov    r15d,ebp
  4020a9:	xor    esi,esi
  4020ab:	mov    rdi,rax
  4020ae:	call   0x417848
  4020b3:	jmp    0x4020c8
  4020b5:	mov    rcx,QWORD PTR [rip+0x1ef8c]        # 0x421048
  4020bc:	mov    rdx,r12
  4020bf:	call   0x401a90
  4020c4:	add    rbx,0x8
  4020c8:	sub    r15d,0x1
  4020cc:	test   r15d,r15d
  4020cf:	jle    0x402230
  4020d5:	lea    eax,[rsi+0x1]
  4020d8:	mov    r8,QWORD PTR [rbx-0x8]
  4020dc:	cmp    rax,rdi
  4020df:	mov    rsi,rax
  4020e2:	jne    0x4020b5
  4020e4:	mov    rcx,QWORD PTR [rip+0x1ef5d]        # 0x421048
  4020eb:	lea    rdx,[rip+0x18cd5]        # 0x41adc7
  4020f2:	xor    esi,esi
  4020f4:	call   0x401a90
  4020f9:	jmp    0x4020c4
  4020fb:	nop    DWORD PTR [rax+rax*1+0x0]
  402100:	mov    rdx,QWORD PTR [rip+0x1ef41]        # 0x421048
  402107:	mov    ecx,0x20
  40210c:	mov    esi,ebp
  40210e:	call   0x417878
  402113:	mov    rdx,QWORD PTR [rip+0x1ef2e]        # 0x421048
  40211a:	mov    ecx,0x20
  40211f:	add    rbx,0x8
  402123:	sub    esi,0x1
  402126:	call   0x417878
  40212b:	mov    rcx,QWORD PTR [rbx-0x8]
  40212f:	mov    rdx,QWORD PTR [rip+0x1ef12]        # 0x421048
  402136:	call   0x417870
  40213b:	test   esi,esi
  40213d:	jg     0x402113
  40213f:	mov    rdx,QWORD PTR [rip+0x1ef02]        # 0x421048
  402146:	mov    ecx,0xa
  40214b:	call   0x417878
  402150:	cmp    QWORD PTR [rsp+0xa0],0xf
  402159:	jbe    0x402005
  40215f:	mov    eax,DWORD PTR [rsp+0x38]
  402163:	mov    rdx,QWORD PTR [rip+0x1685e]        # 0x4189c8
  40216a:	mov    rcx,QWORD PTR [rip+0x1eed7]        # 0x421048
  402171:	lea    r9d,[rax+rbp*1-0x1]
  402176:	mov    r8d,eax
  402179:	call   0x401a90
  40217e:	mov    rcx,QWORD PTR [rsp+0xa0]
  402186:	mov    edx,0x1
  40218b:	call   QWORD PTR [rcx+0x98]
  402191:	mov    eax,DWORD PTR [r13+0x10]
  402195:	and    eax,0xf000
  40219a:	cmp    eax,0x4000
  40219f:	jne    0x402019
  4021a5:	mov    rdx,QWORD PTR [rip+0x16964]        # 0x418b10
  4021ac:	mov    rcx,QWORD PTR [rip+0x1ee95]        # 0x421048
  4021b3:	mov    r8d,ebp
  4021b6:	call   0x401a90
  4021bb:	mov    rdx,QWORD PTR [rip+0x1ee86]        # 0x421048
  4021c2:	mov    rcx,QWORD PTR [rip+0x16a37]        # 0x418c00
  4021c9:	call   0x417870
  4021ce:	jmp    0x402039
  4021d3:	mov    rax,QWORD PTR [rcx+0x28]
  4021d7:	mov    rcx,QWORD PTR [rip+0x1ee6a]        # 0x421048
  4021de:	mov    QWORD PTR [rsp+0x38],rax
  4021e3:	mov    rax,QWORD PTR [rdx+0x50]
  4021e7:	mov    r8,QWORD PTR [rsp+0x38]
  4021ec:	mov    QWORD PTR [rsp+0x20],rax
  4021f1:	mov    r9,QWORD PTR [rdx+0x18]
  4021f5:	mov    rdx,QWORD PTR [rip+0x1ee9c]        # 0x421098
  4021fc:	call   0x401a90
  402201:	jmp    0x401f5b
  402206:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402210:	mov    rdi,QWORD PTR [rbx+0x8]
  402214:	sub    ebp,0x1
  402217:	add    rbx,0x8
  40221b:	mov    DWORD PTR [rsp+0x38],0x1
  402223:	jmp    0x401f86
  402228:	nop    DWORD PTR [rax+rax*1+0x0]
  402230:	mov    r8,QWORD PTR [rbx-0x8]
  402234:	mov    rcx,QWORD PTR [rip+0x1ee0d]        # 0x421048
  40223b:	lea    rdx,[rip+0x18b81]        # 0x41adc3
  402242:	call   0x401a90
  402247:	jmp    0x401ff6
  40224c:	mov    ecx,0x1
  402251:	call   0x401ed0
  402256:	nop
  402257:	nop    WORD PTR [rax+rax*1+0x0]
  402260:	push   r15
  402262:	push   r14
  402264:	push   r13
  402266:	push   r12
  402268:	push   rbp
  402269:	push   rdi
  40226a:	push   rsi
  40226b:	push   rbx
  40226c:	sub    rsp,0x38
  402270:	mov    ebx,DWORD PTR [rsp+0xa0]
  402277:	mov    rdi,rcx
  40227a:	mov    QWORD PTR [rsp+0x88],rdx
  402282:	mov    QWORD PTR [rsp+0x90],r8
  40228a:	mov    rbp,r9
  40228d:	call   0x4177b8
  402292:	mov    rsi,rax
  402295:	movzx  eax,BYTE PTR [rdi]
  402298:	cmp    al,0x7f
  40229a:	ja     0x4022f9
  40229c:	lea    rdx,[rip+0x1b55d]        # 0x41d800
  4022a3:	movzx  ecx,al
  4022a6:	mov    edx,DWORD PTR [rdx+rcx*4]
  4022a9:	test   edx,0x30000
  4022af:	je     0x4022f0
  4022b1:	lea    rdx,[rsp+0x28]
  4022b6:	xor    r8d,r8d
  4022b9:	mov    rcx,rdi
  4022bc:	mov    QWORD PTR [rsp+0x28],rdi
  4022c1:	call   0x417780
  4022c6:	cmp    DWORD PTR [rsp+0xa0],eax
  4022cd:	jbe    0x4022df
  4022cf:	mov    rdx,QWORD PTR [rsp+0x28]
  4022d4:	mov    eax,eax
  4022d6:	cmp    BYTE PTR [rdx],0x0
  4022d9:	je     0x402394
  4022df:	mov    rax,QWORD PTR [rip+0x1677a]        # 0x418a60
  4022e6:	jmp    0x402359
  4022e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4022f0:	and    dh,0x80
  4022f3:	jne    0x4023a5
  4022f9:	xor    r14d,r14d
  4022fc:	test   rbx,rbx
  4022ff:	mov    r12,rbx
  402302:	mov    r13,0xffffffffffffffff
  402309:	je     0x4023b7
  40230f:	nop
  402310:	mov    r15,QWORD PTR [rbp+r14*8+0x0]
  402315:	mov    r8,rsi
  402318:	mov    rdx,rdi
  40231b:	mov    rcx,r15
  40231e:	call   0x4177b0
  402323:	test   eax,eax
  402325:	jne    0x40233c
  402327:	cmp    BYTE PTR [r15+rsi*1],0x0
  40232c:	je     0x4023c0
  402332:	cmp    r12,rbx
  402335:	mov    r12,r13
  402338:	cmove  r12,r14
  40233c:	add    r14,0x1
  402340:	cmp    rbx,r14
  402343:	jne    0x402310
  402345:	cmp    rbx,r12
  402348:	mov    rax,r12
  40234b:	ja     0x402394
  40234d:	cmp    r12,rbx
  402350:	je     0x4023b7
  402352:	mov    rax,QWORD PTR [rip+0x165ff]        # 0x418958
  402359:	mov    QWORD PTR [rip+0x1ed38],rax        # 0x421098
  402360:	call   QWORD PTR [rip+0x2126a]        # 0x4235d0
  402366:	mov    r9d,DWORD PTR [rsp+0xa0]
  40236e:	mov    rdx,QWORD PTR [rsp+0x90]
  402376:	add    rax,0x60
  40237a:	mov    rcx,QWORD PTR [rsp+0x88]
  402382:	mov    r8,rbp
  402385:	mov    QWORD PTR [rip+0x1ecbc],rax        # 0x421048
  40238c:	call   0x401f30
  402391:	mov    rax,rbx
  402394:	add    rsp,0x38
  402398:	pop    rbx
  402399:	pop    rsi
  40239a:	pop    rdi
  40239b:	pop    rbp
  40239c:	pop    r12
  40239e:	pop    r13
  4023a0:	pop    r14
  4023a2:	pop    r15
  4023a4:	ret    
  4023a5:	cmp    BYTE PTR [rdi+0x2],0x0
  4023a9:	jne    0x4022f9
  4023af:	cmp    al,0x7e
  4023b1:	je     0x4023c5
  4023b3:	cmp    al,0x2d
  4023b5:	je     0x4023d7
  4023b7:	mov    rax,QWORD PTR [rip+0x16652]        # 0x418a10
  4023be:	jmp    0x402359
  4023c0:	mov    rax,r14
  4023c3:	jmp    0x402394
  4023c5:	cmp    BYTE PTR [rdi+0x1],0x30
  4023c9:	jne    0x4023b7
  4023cb:	mov    eax,DWORD PTR [rsp+0xa0]
  4023d2:	sub    eax,0x1
  4023d5:	jmp    0x402394
  4023d7:	cmp    BYTE PTR [rdi+0x1],0x31
  4023db:	jne    0x4023b7
  4023dd:	jmp    0x4023cb
  4023df:	nop
  4023e0:	push   r13
  4023e2:	push   r12
  4023e4:	push   rbp
  4023e5:	push   rdi
  4023e6:	push   rsi
  4023e7:	push   rbx
  4023e8:	sub    rsp,0x48
  4023ec:	mov    rbx,QWORD PTR [rip+0x21225]        # 0x423618
  4023f3:	mov    r12,rdx
  4023f6:	mov    r13,r8
  4023f9:	mov    rsi,rcx
  4023fc:	call   rbx
  4023fe:	mov    ecx,DWORD PTR [rax]
  402400:	call   0x4177c8
  402405:	mov    rbp,rax
  402408:	call   rbx
  40240a:	mov    rbx,QWORD PTR [rip+0x1656f]        # 0x418980
  402411:	mov    edi,DWORD PTR [rax]
  402413:	call   QWORD PTR [rip+0x211b7]        # 0x4235d0
  402419:	lea    rcx,[rax+0x60]
  40241d:	mov    QWORD PTR [rsp+0x30],r13
  402422:	mov    QWORD PTR [rsp+0x28],r12
  402427:	mov    QWORD PTR [rsp+0x20],rbp
  40242c:	mov    r9d,edi
  40242f:	mov    r8,rsi
  402432:	mov    rdx,rbx
  402435:	call   0x401a90
  40243a:	nop
  40243b:	add    rsp,0x48
  40243f:	pop    rbx
  402440:	pop    rsi
  402441:	pop    rdi
  402442:	pop    rbp
  402443:	pop    r12
  402445:	pop    r13
  402447:	ret    
  402448:	nop    DWORD PTR [rax+rax*1+0x0]
  402450:	sub    rsp,0x28
  402454:	call   0x4023e0
  402459:	mov    ecx,0x1
  40245e:	call   0x401ed0
  402463:	nop
  402464:	xchg   ax,ax
  402466:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402470:	sub    rsp,0x38
  402474:	mov    QWORD PTR [rsp+0x50],r8
  402479:	lea    r8,[rsp+0x50]
  40247e:	mov    QWORD PTR [rsp+0x58],r9
  402483:	mov    QWORD PTR [rsp+0x28],r8
  402488:	call   0x412dc0
  40248d:	add    rsp,0x38
  402491:	ret    
  402492:	nop    DWORD PTR [rax+0x0]
  402496:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4024a0:	push   r12
  4024a2:	push   rbp
  4024a3:	push   rdi
  4024a4:	push   rsi
  4024a5:	push   rbx
  4024a6:	sub    rsp,0x20
  4024aa:	mov    ebx,edx
  4024ac:	mov    rsi,rcx
  4024af:	mov    rbp,r8
  4024b2:	sub    ebx,0x1
  4024b5:	mov    rdi,r9
  4024b8:	js     0x4024e2
  4024ba:	nop    WORD PTR [rax+rax*1+0x0]
  4024c0:	mov    rdx,rsi
  4024c3:	mov    ecx,0x20
  4024c8:	sub    ebx,0x1
  4024cb:	call   0x417808
  4024d0:	mov    rdx,rsi
  4024d3:	mov    ecx,0x20
  4024d8:	call   0x417808
  4024dd:	cmp    ebx,0xffffffff
  4024e0:	jne    0x4024c0
  4024e2:	mov    edx,DWORD PTR [rdi]
  4024e4:	cmp    edx,0x6
  4024e7:	ja     0x4026e4
  4024ed:	lea    rax,[rip+0x1730c]        # 0x419800
  4024f4:	mov    ecx,edx
  4024f6:	movsxd rcx,DWORD PTR [rax+rcx*4]
  4024fa:	add    rax,rcx
  4024fd:	jmp    rax
  4024ff:	nop
  402500:	mov    r9d,DWORD PTR [rdi+0x10]
  402504:	mov    r8,QWORD PTR [rdi+0x8]
  402508:	lea    rdx,[rip+0x18b67]        # 0x41b076
  40250f:	mov    rcx,rsi
  402512:	add    rsp,0x20
  402516:	pop    rbx
  402517:	pop    rsi
  402518:	pop    rdi
  402519:	pop    rbp
  40251a:	pop    r12
  40251c:	jmp    0x401a90
  402521:	mov    rbx,QWORD PTR [rdi+0x10]
  402525:	mov    rbp,QWORD PTR [rdi+0x8]
  402529:	test   rbx,rbx
  40252c:	je     0x402775
  402532:	mov    edi,DWORD PTR [rbx]
  402534:	mov    r8,rbp
  402537:	lea    rdx,[rip+0x188a1]        # 0x41addf
  40253e:	test   edi,edi
  402540:	jle    0x402618
  402546:	lea    rdx,[rip+0x18864]        # 0x41adb1
  40254d:	mov    rcx,rsi
  402550:	add    rbx,0x8
  402554:	call   0x401a90
  402559:	mov    eax,DWORD PTR [rip+0x15ee1]        # 0x418440
  40255f:	lea    edx,[rax+0x1]
  402562:	lea    eax,[rdi-0x1]
  402565:	mov    DWORD PTR [rip+0x15ed5],edx        # 0x418440
  40256b:	lea    rdi,[rbx+rax*8+0x8]
  402570:	jmp    0x402578
  402572:	mov    edx,DWORD PTR [rip+0x15ec8]        # 0x418440
  402578:	add    rbx,0x8
  40257c:	mov    r9,QWORD PTR [rbx-0x8]
  402580:	xor    r8d,r8d
  402583:	mov    rcx,rsi
  402586:	call   0x4024a0
  40258b:	cmp    rbx,rdi
  40258e:	jne    0x402572
  402590:	mov    ebx,DWORD PTR [rip+0x15eaa]        # 0x418440
  402596:	lea    eax,[rbx-0x1]
  402599:	sub    ebx,0x2
  40259c:	mov    DWORD PTR [rip+0x15e9e],eax        # 0x418440
  4025a2:	js     0x4025c6
  4025a4:	mov    rdx,rsi
  4025a7:	mov    ecx,0x20
  4025ac:	sub    ebx,0x1
  4025af:	call   0x417808
  4025b4:	mov    rdx,rsi
  4025b7:	mov    ecx,0x20
  4025bc:	call   0x417808
  4025c1:	cmp    ebx,0xffffffff
  4025c4:	jne    0x4025a4
  4025c6:	mov    r8,rbp
  4025c9:	lea    rdx,[rip+0x17226]        # 0x4197f6
  4025d0:	jmp    0x402618
  4025d2:	mov    r12,QWORD PTR [rdi+0x8]
  4025d6:	lea    rbp,[rdi+0x10]
  4025da:	lea    rdx,[rip+0x18819]        # 0x41adfa
  4025e1:	lea    rdi,[rip+0x17c58]        # 0x41a240
  4025e8:	mov    rcx,rsi
  4025eb:	mov    r8,r12
  4025ee:	call   0x401a90
  4025f3:	movzx  ebx,BYTE PTR [rbp+0x0]
  4025f7:	cmp    ebx,0x26
  4025fa:	je     0x402720
  402600:	jg     0x4026f4
  402606:	test   ebx,ebx
  402608:	jne    0x402760
  40260e:	lea    rdx,[rip+0x18714]        # 0x41ad29
  402615:	mov    r8,r12
  402618:	mov    rcx,rsi
  40261b:	add    rsp,0x20
  40261f:	pop    rbx
  402620:	pop    rsi
  402621:	pop    rdi
  402622:	pop    rbp
  402623:	pop    r12
  402625:	jmp    0x401a90
  40262a:	nop    WORD PTR [rax+rax*1+0x0]
  402630:	test   rbp,rbp
  402633:	je     0x402500
  402639:	lea    rax,[rip+0x1719c]        # 0x4197dc
  402640:	mov    r8,QWORD PTR [rdi+0x8]
  402644:	lea    r9,[rip+0x17189]        # 0x4197d4
  40264b:	cmp    edx,0x2
  40264e:	lea    rdx,[rip+0x1887f]        # 0x41aed4
  402655:	mov    rcx,rsi
  402658:	cmovne r9,rax
  40265c:	mov    ebx,DWORD PTR [rbp+0x10]
  40265f:	mov    r12,QWORD PTR [rbp+0x18]
  402663:	call   0x401a90
  402668:	mov    ecx,0x3
  40266d:	mov    rdx,rbp
  402670:	call   QWORD PTR [rbp+0x38]
  402673:	mov    rcx,QWORD PTR [rbp+0x18]
  402677:	test   rcx,rcx
  40267a:	je     0x402692
  40267c:	mov    rdx,rsi
  40267f:	call   0x417870
  402684:	cmp    DWORD PTR [rdi],0x2
  402687:	je     0x402692
  402689:	mov    rcx,QWORD PTR [rbp+0x18]
  40268d:	call   0x417860
  402692:	mov    QWORD PTR [rbp+0x18],r12
  402696:	mov    DWORD PTR [rbp+0x10],ebx
  402699:	lea    rdx,[rip+0x18689]        # 0x41ad29
  4026a0:	mov    r8,QWORD PTR [rdi+0x8]
  4026a4:	jmp    0x402618
  4026a9:	nop    DWORD PTR [rax+0x0]
  4026b0:	mov    eax,DWORD PTR [rdi+0x10]
  4026b3:	lea    r9,[rip+0x17131]        # 0x4197eb
  4026ba:	mov    r8,QWORD PTR [rdi+0x8]
  4026be:	lea    rdx,[rip+0x188cc]        # 0x41af91
  4026c5:	mov    rcx,rsi
  4026c8:	test   eax,eax
  4026ca:	lea    rax,[rip+0x1711f]        # 0x4197f0
  4026d1:	cmove  r9,rax
  4026d5:	add    rsp,0x20
  4026d9:	pop    rbx
  4026da:	pop    rsi
  4026db:	pop    rdi
  4026dc:	pop    rbp
  4026dd:	pop    r12
  4026df:	jmp    0x401a90
  4026e4:	mov    r8,QWORD PTR [rdi+0x8]
  4026e8:	lea    rdx,[rip+0x186f0]        # 0x41addf
  4026ef:	jmp    0x402618
  4026f4:	cmp    ebx,0x3e
  4026f7:	je     0x402720
  4026f9:	jg     0x402713
  4026fb:	cmp    ebx,0x3c
  4026fe:	je     0x402720
  402700:	mov    rdx,rsi
  402703:	mov    ecx,ebx
  402705:	call   0x417808
  40270a:	add    rbp,0x1
  40270e:	jmp    0x4025f3
  402713:	lea    eax,[rbx-0x7f]
  402716:	cmp    eax,0x80
  40271b:	ja     0x402700
  40271d:	nop    DWORD PTR [rax]
  402720:	mov    rdx,rsi
  402723:	mov    ecx,0x26
  402728:	call   0x417808
  40272d:	cmp    ebx,0x26
  402730:	lea    rax,[rip+0x17ac9]        # 0x41a200
  402737:	je     0x402767
  402739:	add    rax,0x10
  40273d:	cmp    ebx,DWORD PTR [rax]
  40273f:	je     0x402767
  402741:	cmp    rax,rdi
  402744:	jne    0x402739
  402746:	lea    rdx,[rip+0x1879c]        # 0x41aee9
  40274d:	mov    r8d,ebx
  402750:	mov    rcx,rsi
  402753:	call   0x401a90
  402758:	jmp    0x40270a
  40275a:	nop    WORD PTR [rax+rax*1+0x0]
  402760:	cmp    ebx,0x1f
  402763:	jg     0x402700
  402765:	jmp    0x402720
  402767:	lea    rcx,[rax+0x8]
  40276b:	mov    rdx,rsi
  40276e:	call   0x417870
  402773:	jmp    0x40270a
  402775:	add    rsp,0x20
  402779:	pop    rbx
  40277a:	pop    rsi
  40277b:	pop    rdi
  40277c:	pop    rbp
  40277d:	pop    r12
  40277f:	ret    
  402780:	test   BYTE PTR [rdx+0x10],0x8
  402784:	je     0x402790
  402786:	repz ret 
  402788:	nop    DWORD PTR [rax+rax*1+0x0]
  402790:	mov    rax,QWORD PTR [rcx+0x98]
  402797:	xor    edx,edx
  402799:	rex.W jmp rax
  40279c:	nop    DWORD PTR [rax+0x0]
  4027a0:	mov    rax,QWORD PTR [rip+0x163a1]        # 0x418b48
  4027a7:	lea    r10,[rip+0x1848b]        # 0x41ac39
  4027ae:	lea    r11,[rip+0x184a1]        # 0x41ac56
  4027b5:	and    ecx,0x3
  4027b8:	cmp    ecx,0x2
  4027bb:	mov    QWORD PTR [rdx],rax
  4027be:	mov    QWORD PTR [rip+0x1e963],r10        # 0x421128
  4027c5:	lea    r10,[rip+0x18467]        # 0x41ac33
  4027cc:	mov    QWORD PTR [rip+0x1e99d],r11        # 0x421170
  4027d3:	lea    r11,[rip+0x18464]        # 0x41ac3e
  4027da:	lea    rdx,[rip+0x17600]        # 0x419de1
  4027e1:	mov    QWORD PTR [rip+0x1e930],r10        # 0x421118
  4027e8:	lea    r10,[rip+0x18455]        # 0x41ac44
  4027ef:	mov    rax,QWORD PTR [rip+0x160ea]        # 0x4188e0
  4027f6:	mov    QWORD PTR [rip+0x1e93b],r11        # 0x421138
  4027fd:	lea    r11,[rip+0x175dd]        # 0x419de1
  402804:	mov    QWORD PTR [rip+0x1e8fd],rdx        # 0x421108
  40280b:	mov    QWORD PTR [rip+0x1e92e],r10        # 0x421140
  402812:	lea    r10,[rip+0x18414]        # 0x41ac2d
  402819:	mov    rdx,QWORD PTR [rip+0x160b8]        # 0x4188d8
  402820:	mov    r8,QWORD PTR [rip+0x160a9]        # 0x4188d0
  402827:	mov    r9,QWORD PTR [rip+0x1609a]        # 0x4188c8
  40282e:	mov    QWORD PTR [rip+0x1e913],r11        # 0x421148
  402835:	mov    QWORD PTR [rip+0x1e914],r10        # 0x421150
  40283c:	lea    r11,[rip+0x184aa]        # 0x41aced
  402843:	lea    r10,[rip+0x184b0]        # 0x41acfa
  40284a:	mov    QWORD PTR [rip+0x1e8af],rax        # 0x421100
  402851:	mov    QWORD PTR [rip+0x1e8b8],rdx        # 0x421110
  402858:	mov    QWORD PTR [rip+0x1e8c1],r8        # 0x421120
  40285f:	mov    QWORD PTR [rip+0x1e8ca],r9        # 0x421130
  402866:	mov    QWORD PTR [rip+0x1e8eb],r11        # 0x421158
  40286d:	mov    QWORD PTR [rip+0x1e8ec],r10        # 0x421160
  402874:	je     0x4028b0
  402876:	cmp    ecx,0x3
  402879:	je     0x402894
  40287b:	cmp    ecx,0x1
  40287e:	je     0x402894
  402880:	lea    rax,[rip+0x183c6]        # 0x41ac4d
  402887:	mov    QWORD PTR [rip+0x1e8da],rax        # 0x421168
  40288e:	mov    eax,0x16
  402893:	ret    
  402894:	lea    rax,[rip+0x183b0]        # 0x41ac4b
  40289b:	mov    QWORD PTR [rip+0x1e8c6],rax        # 0x421168
  4028a2:	mov    eax,0x16
  4028a7:	ret    
  4028a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4028b0:	lea    rcx,[rip+0x183dd]        # 0x41ac94
  4028b7:	mov    QWORD PTR [rip+0x1e8aa],rcx        # 0x421168
  4028be:	mov    BYTE PTR [r9],0x20
  4028c2:	mov    BYTE PTR [r8],0x20
  4028c6:	mov    BYTE PTR [rdx],0x20
  4028c9:	mov    BYTE PTR [rax],0x20
  4028cc:	lea    rax,[rip+0x16f49]        # 0x41981c
  4028d3:	mov    QWORD PTR [rip+0x1e866],rax        # 0x421140
  4028da:	mov    eax,0x8
  4028df:	ret    
  4028e0:	lea    rax,[rip+0x183dc]        # 0x41acc3
  4028e7:	and    ecx,0x12
  4028ea:	mov    QWORD PTR [rip+0x1e80f],rax        # 0x421100
  4028f1:	lea    rax,[rip+0x183c7]        # 0x41acbf
  4028f8:	cmp    ecx,0x2
  4028fb:	mov    QWORD PTR [rip+0x1e806],rax        # 0x421108
  402902:	lea    rax,[rip+0x183ae]        # 0x41acb7
  402909:	mov    QWORD PTR [rip+0x1e800],rax        # 0x421110
  402910:	lea    rax,[rip+0x18390]        # 0x41aca7
  402917:	mov    QWORD PTR [rip+0x1e802],rax        # 0x421120
  40291e:	lea    rax,[rip+0x18386]        # 0x41acab
  402925:	mov    QWORD PTR [rip+0x1e7fc],rax        # 0x421128
  40292c:	lea    rax,[rip+0x18394]        # 0x41acc7
  402933:	mov    QWORD PTR [rip+0x1e836],rax        # 0x421170
  40293a:	lea    rax,[rip+0x18362]        # 0x41aca3
  402941:	mov    QWORD PTR [rip+0x1e7d0],rax        # 0x421118
  402948:	lea    rax,[rip+0x18348]        # 0x41ac97
  40294f:	mov    QWORD PTR [rip+0x1e7da],rax        # 0x421130
  402956:	lea    rax,[rip+0x18352]        # 0x41acaf
  40295d:	mov    QWORD PTR [rip+0x1e7d4],rax        # 0x421138
  402964:	lea    rax,[rip+0x18350]        # 0x41acbb
  40296b:	mov    QWORD PTR [rip+0x1e7ce],rax        # 0x421140
  402972:	lea    rax,[rip+0x1833a]        # 0x41acb3
  402979:	mov    QWORD PTR [rip+0x1e7c8],rax        # 0x421148
  402980:	lea    rax,[rip+0x18314]        # 0x41ac9b
  402987:	mov    QWORD PTR [rip+0x1e7c2],rax        # 0x421150
  40298e:	lea    rax,[rip+0x1835f]        # 0x41acf4
  402995:	mov    QWORD PTR [rip+0x1e7bc],rax        # 0x421158
  40299c:	lea    rax,[rip+0x1835b]        # 0x41acfe
  4029a3:	mov    QWORD PTR [rip+0x1e7b6],rax        # 0x421160
  4029aa:	je     0x402a25
  4029ac:	jbe    0x402a00
  4029ae:	cmp    ecx,0x10
  4029b1:	je     0x4029e0
  4029b3:	cmp    ecx,0x12
  4029b6:	jne    0x402a22
  4029b8:	mov    rax,QWORD PTR [rip+0x16189]        # 0x418b48
  4029bf:	mov    QWORD PTR [rdx],rax
  4029c2:	mov    rax,QWORD PTR [rip+0x16187]        # 0x418b50
  4029c9:	mov    QWORD PTR [rip+0x1e798],rax        # 0x421168
  4029d0:	mov    eax,0x13
  4029d5:	ret    
  4029d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4029e0:	mov    rax,QWORD PTR [rip+0x16159]        # 0x418b40
  4029e7:	mov    QWORD PTR [rdx],rax
  4029ea:	mov    rax,QWORD PTR [rip+0x1615f]        # 0x418b50
  4029f1:	mov    QWORD PTR [rip+0x1e770],rax        # 0x421168
  4029f8:	mov    eax,0x13
  4029fd:	ret    
  4029fe:	xchg   ax,ax
  402a00:	test   ecx,ecx
  402a02:	jne    0x402a22
  402a04:	mov    rax,QWORD PTR [rip+0x161e5]        # 0x418bf0
  402a0b:	mov    QWORD PTR [rdx],rax
  402a0e:	lea    rax,[rip+0x18271]        # 0x41ac86
  402a15:	mov    QWORD PTR [rip+0x1e74c],rax        # 0x421168
  402a1c:	mov    eax,0x18
  402a21:	ret    
  402a22:	xor    eax,eax
  402a24:	ret    
  402a25:	mov    rax,QWORD PTR [rip+0x161cc]        # 0x418bf8
  402a2c:	mov    QWORD PTR [rdx],rax
  402a2f:	lea    rax,[rip+0x18250]        # 0x41ac86
  402a36:	mov    QWORD PTR [rip+0x1e72b],rax        # 0x421168
  402a3d:	mov    eax,0x18
  402a42:	ret    
  402a43:	nop    DWORD PTR [rax]
  402a46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402a50:	push   rsi
  402a51:	push   rbx
  402a52:	sub    rsp,0x38
  402a56:	cmp    rcx,0xffffffffffffffff
  402a5a:	mov    r9,rdx
  402a5d:	je     0x402a93
  402a5f:	movabs r10,0x7fffffffffffffff
  402a69:	movsxd r8,r8d
  402a6c:	mov    rax,r10
  402a6f:	cqo    
  402a71:	idiv   r8
  402a74:	cmp    rax,r9
  402a77:	jl     0x402ac0
  402a79:	imul   r8,r9
  402a7d:	sub    r10,r8
  402a80:	cmp    rcx,r10
  402a83:	jg     0x402ac0
  402a85:	lea    rsi,[rcx+r8*1]
  402a89:	mov    rax,rsi
  402a8c:	add    rsp,0x38
  402a90:	pop    rbx
  402a91:	pop    rsi
  402a92:	ret    
  402a93:	mov    QWORD PTR [rsp+0x28],rcx
  402a98:	mov    rbx,QWORD PTR [rip+0x20b79]        # 0x423618
  402a9f:	call   rbx
  402aa1:	mov    eax,DWORD PTR [rax]
  402aa3:	mov    rcx,QWORD PTR [rsp+0x28]
  402aa8:	test   eax,eax
  402aaa:	mov    rsi,rcx
  402aad:	jne    0x402a89
  402aaf:	call   rbx
  402ab1:	mov    DWORD PTR [rax],0x16
  402ab7:	jmp    0x402a89
  402ab9:	nop    DWORD PTR [rax+0x0]
  402ac0:	call   QWORD PTR [rip+0x20b52]        # 0x423618
  402ac6:	mov    rsi,0xffffffffffffffff
  402acd:	mov    DWORD PTR [rax],0x22
  402ad3:	jmp    0x402a89
  402ad5:	nop
  402ad6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402ae0:	push   r15
  402ae2:	push   r14
  402ae4:	push   r13
  402ae6:	push   r12
  402ae8:	push   rbp
  402ae9:	push   rdi
  402aea:	push   rsi
  402aeb:	push   rbx
  402aec:	sub    rsp,0x48
  402af0:	mov    rax,QWORD PTR [rdx]
  402af3:	cmp    rcx,0xffffffffffffffff
  402af7:	mov    QWORD PTR [rsp+0x38],rax
  402afc:	je     0x402b89
  402b02:	mov    r13d,r9d
  402b05:	mov    r12,r8
  402b08:	mov    rbp,rdx
  402b0b:	mov    QWORD PTR [rsp+0x28],rcx
  402b10:	mov    r15,QWORD PTR [rip+0x20b01]        # 0x423618
  402b17:	call   r15
  402b1a:	mov    rcx,QWORD PTR [rsp+0x38]
  402b1f:	lea    rdx,[rsp+0x38]
  402b24:	mov    r8d,0xa
  402b2a:	mov    DWORD PTR [rax],0x0
  402b30:	call   0x417780
  402b35:	mov    r14d,eax
  402b38:	call   r15
  402b3b:	mov    eax,DWORD PTR [rax]
  402b3d:	test   eax,eax
  402b3f:	jne    0x402b89
  402b41:	mov    rdi,QWORD PTR [rsp+0x38]
  402b46:	mov    rsi,QWORD PTR [rip+0x20bd3]        # 0x423720
  402b4d:	jmp    0x402b55
  402b4f:	nop
  402b50:	mov    QWORD PTR [rsp+0x38],rdi
  402b55:	movzx  ecx,BYTE PTR [rdi]
  402b58:	mov    rbx,rdi
  402b5b:	add    rdi,0x1
  402b5f:	call   rsi
  402b61:	test   eax,eax
  402b63:	jne    0x402b50
  402b65:	cmp    r12,rbx
  402b68:	jne    0x402b80
  402b6a:	mov    rcx,QWORD PTR [rsp+0x28]
  402b6f:	mov    QWORD PTR [rbp+0x0],r12
  402b73:	mov    r8d,r13d
  402b76:	mov    rdx,r14
  402b79:	call   0x402a50
  402b7e:	jmp    0x402b90
  402b80:	call   r15
  402b83:	mov    DWORD PTR [rax],0x16
  402b89:	mov    rax,0xffffffffffffffff
  402b90:	add    rsp,0x48
  402b94:	pop    rbx
  402b95:	pop    rsi
  402b96:	pop    rdi
  402b97:	pop    rbp
  402b98:	pop    r12
  402b9a:	pop    r13
  402b9c:	pop    r14
  402b9e:	pop    r15
  402ba0:	ret    
  402ba1:	nop    DWORD PTR [rax+rax*1+0x0]
  402ba6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402bb0:	push   rbp
  402bb1:	push   rdi
  402bb2:	push   rsi
  402bb3:	push   rbx
  402bb4:	sub    rsp,0x38
  402bb8:	mov    edx,0x3a
  402bbd:	mov    rbx,rcx
  402bc0:	call   0x4177e0
  402bc5:	test   rax,rax
  402bc8:	je     0x402c60
  402bce:	lea    rsi,[rsp+0x20]
  402bd3:	mov    r8,rax
  402bd6:	xor    ecx,ecx
  402bd8:	mov    r9d,0xe10
  402bde:	mov    QWORD PTR [rsp+0x20],rbx
  402be3:	mov    rdx,rsi
  402be6:	call   0x402ae0
  402beb:	mov    rbx,rax
  402bee:	mov    rax,QWORD PTR [rsp+0x20]
  402bf3:	mov    edx,0x3a
  402bf8:	lea    rcx,[rax+0x1]
  402bfc:	mov    QWORD PTR [rsp+0x20],rcx
  402c01:	call   0x4177e0
  402c06:	test   rax,rax
  402c09:	mov    r8,rax
  402c0c:	je     0x402d4f
  402c12:	mov    r9d,0x3c
  402c18:	mov    rdx,rsi
  402c1b:	mov    rcx,rbx
  402c1e:	call   0x402ae0
  402c23:	mov    rdi,rax
  402c26:	mov    rax,QWORD PTR [rsp+0x20]
  402c2b:	lea    rbx,[rax+0x1]
  402c2f:	mov    rcx,rbx
  402c32:	mov    QWORD PTR [rsp+0x20],rbx
  402c37:	call   0x4177b8
  402c3c:	lea    r8,[rbx+rax*1]
  402c40:	mov    r9d,0x1
  402c46:	mov    rdx,rsi
  402c49:	mov    rcx,rdi
  402c4c:	call   0x402ae0
  402c51:	mov    rbp,rax
  402c54:	mov    rax,rbp
  402c57:	add    rsp,0x38
  402c5b:	pop    rbx
  402c5c:	pop    rsi
  402c5d:	pop    rdi
  402c5e:	pop    rbp
  402c5f:	ret    
  402c60:	lea    rdx,[rip+0x16bbc]        # 0x419823
  402c67:	mov    rcx,rbx
  402c6a:	call   0x4177a0
  402c6f:	test   rax,rax
  402c72:	je     0x402d70
  402c78:	mov    edx,0x48
  402c7d:	mov    rcx,rbx
  402c80:	mov    QWORD PTR [rsp+0x28],rbx
  402c85:	xor    ebp,ebp
  402c87:	call   0x4177e0
  402c8c:	test   rax,rax
  402c8f:	je     0x402cb7
  402c91:	lea    rdx,[rsp+0x28]
  402c96:	mov    r9d,0xe10
  402c9c:	mov    r8,rax
  402c9f:	xor    ecx,ecx
  402ca1:	call   0x402ae0
  402ca6:	mov    rbp,rax
  402ca9:	mov    rax,QWORD PTR [rsp+0x28]
  402cae:	lea    rbx,[rax+0x1]
  402cb2:	mov    QWORD PTR [rsp+0x28],rbx
  402cb7:	mov    edx,0x4d
  402cbc:	mov    rcx,rbx
  402cbf:	call   0x4177e0
  402cc4:	test   rax,rax
  402cc7:	je     0x402cf0
  402cc9:	lea    rdx,[rsp+0x28]
  402cce:	mov    rcx,rbp
  402cd1:	mov    r9d,0x3c
  402cd7:	mov    r8,rax
  402cda:	call   0x402ae0
  402cdf:	mov    rbp,rax
  402ce2:	mov    rax,QWORD PTR [rsp+0x28]
  402ce7:	lea    rbx,[rax+0x1]
  402ceb:	mov    QWORD PTR [rsp+0x28],rbx
  402cf0:	mov    edx,0x53
  402cf5:	mov    rcx,rbx
  402cf8:	call   0x4177e0
  402cfd:	test   rax,rax
  402d00:	je     0x402d29
  402d02:	lea    rdx,[rsp+0x28]
  402d07:	mov    rcx,rbp
  402d0a:	mov    r9d,0x1
  402d10:	mov    r8,rax
  402d13:	call   0x402ae0
  402d18:	mov    rbp,rax
  402d1b:	mov    rax,QWORD PTR [rsp+0x28]
  402d20:	lea    rbx,[rax+0x1]
  402d24:	mov    QWORD PTR [rsp+0x28],rbx
  402d29:	mov    rdi,QWORD PTR [rip+0x209f0]        # 0x423720
  402d30:	jmp    0x402d37
  402d32:	mov    QWORD PTR [rsp+0x28],rbx
  402d37:	movzx  ecx,BYTE PTR [rbx]
  402d3a:	add    rbx,0x1
  402d3e:	mov    esi,ecx
  402d40:	call   rdi
  402d42:	test   eax,eax
  402d44:	jne    0x402d32
  402d46:	test   sil,sil
  402d49:	je     0x402c54
  402d4f:	call   QWORD PTR [rip+0x208c3]        # 0x423618
  402d55:	mov    rbp,0xffffffffffffffff
  402d5c:	mov    DWORD PTR [rax],0x16
  402d62:	jmp    0x402c54
  402d67:	nop    WORD PTR [rax+rax*1+0x0]
  402d70:	mov    rcx,rbx
  402d73:	call   0x4177b8
  402d78:	cmp    rax,0x6
  402d7c:	jne    0x402d4f
  402d7e:	movzx  eax,WORD PTR [rbx]
  402d81:	lea    rbp,[rsp+0x22]
  402d86:	lea    rdi,[rsp+0x28]
  402d8b:	lea    rsi,[rsp+0x20]
  402d90:	mov    r9d,0xe10
  402d96:	xor    ecx,ecx
  402d98:	mov    r8,rbp
  402d9b:	mov    rdx,rdi
  402d9e:	mov    BYTE PTR [rsp+0x22],0x0
  402da3:	mov    QWORD PTR [rsp+0x28],rsi
  402da8:	mov    WORD PTR [rsp+0x20],ax
  402dad:	call   0x402ae0
  402db2:	movzx  edx,WORD PTR [rbx+0x2]
  402db6:	mov    r8,rbp
  402db9:	mov    r9d,0x3c
  402dbf:	mov    rcx,rax
  402dc2:	mov    BYTE PTR [rsp+0x22],0x0
  402dc7:	mov    QWORD PTR [rsp+0x28],rsi
  402dcc:	mov    WORD PTR [rsp+0x20],dx
  402dd1:	mov    rdx,rdi
  402dd4:	call   0x402ae0
  402dd9:	movzx  edx,WORD PTR [rbx+0x4]
  402ddd:	mov    r8,rbp
  402de0:	mov    r9d,0x1
  402de6:	mov    rcx,rax
  402de9:	mov    BYTE PTR [rsp+0x22],0x0
  402dee:	mov    QWORD PTR [rsp+0x28],rsi
  402df3:	mov    WORD PTR [rsp+0x20],dx
  402df8:	mov    rdx,rdi
  402dfb:	call   0x402ae0
  402e00:	mov    rbp,rax
  402e03:	jmp    0x402c54
  402e08:	nop    DWORD PTR [rax+rax*1+0x0]
  402e10:	push   r13
  402e12:	push   r12
  402e14:	push   rbp
  402e15:	push   rdi
  402e16:	push   rsi
  402e17:	push   rbx
  402e18:	sub    rsp,0x38
  402e1c:	mov    r12,QWORD PTR [rip+0x15cbd]        # 0x418ae0
  402e23:	mov    r13,QWORD PTR [rcx+0x28]
  402e27:	lea    rsi,[rip+0x197e1]        # 0x41c60f
  402e2e:	cmp    WORD PTR [rdx+0x8],0x8000
  402e34:	mov    rdi,rdx
  402e37:	mov    rbx,rcx
  402e3a:	cmovne rsi,QWORD PTR [rip+0x15b66]        # 0x4189a8
  402e42:	mov    rbp,QWORD PTR [rip+0x20787]        # 0x4235d0
  402e49:	call   rbp
  402e4b:	lea    rcx,[rax+0x60]
  402e4f:	mov    rdx,r12
  402e52:	mov    r8,r13
  402e55:	call   0x401a90
  402e5a:	movzx  r12d,WORD PTR [rdi+0xc]
  402e5f:	cmp    r12w,0x1
  402e64:	jbe    0x402eb0
  402e66:	mov    r13,QWORD PTR [rdi+0x50]
  402e6a:	mov    rdi,QWORD PTR [rip+0x15b07]        # 0x418978
  402e71:	call   rbp
  402e73:	lea    rcx,[rax+0x60]
  402e77:	mov    QWORD PTR [rsp+0x20],rsi
  402e7c:	movzx  r8d,r12w
  402e80:	mov    r9,r13
  402e83:	mov    rdx,rdi
  402e86:	call   0x401a90
  402e8b:	mov    edx,0x1
  402e90:	mov    rcx,rbx
  402e93:	call   QWORD PTR [rbx+0x98]
  402e99:	add    rsp,0x38
  402e9d:	pop    rbx
  402e9e:	pop    rsi
  402e9f:	pop    rdi
  402ea0:	pop    rbp
  402ea1:	pop    r12
  402ea3:	pop    r13
  402ea5:	ret    
  402ea6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402eb0:	mov    r12,QWORD PTR [rdi+0x50]
  402eb4:	mov    rdi,QWORD PTR [rip+0x15bb5]        # 0x418a70
  402ebb:	call   rbp
  402ebd:	lea    rcx,[rax+0x60]
  402ec1:	mov    r9,rsi
  402ec4:	mov    r8,r12
  402ec7:	mov    rdx,rdi
  402eca:	call   0x401a90
  402ecf:	jmp    0x402e8b
  402ed1:	nop    DWORD PTR [rax+rax*1+0x0]
  402ed6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402ee0:	push   rbp
  402ee1:	push   rdi
  402ee2:	push   rsi
  402ee3:	push   rbx
  402ee4:	sub    rsp,0x48
  402ee8:	mov    rbx,QWORD PTR [rdx]
  402eeb:	mov    rsi,rcx
  402eee:	mov    r8d,DWORD PTR [rbx+0x10]
  402ef2:	mov    rdi,QWORD PTR [rbx+0x38]
  402ef6:	test   r8b,0x40
  402efa:	jne    0x403000
  402f00:	mov    rcx,QWORD PTR [rdx+0x8]
  402f04:	mov    QWORD PTR [rbx+0x18],rcx
  402f08:	test   BYTE PTR [rsi+0x12],0x8
  402f0c:	je     0x402f20
  402f0e:	test   r8d,0x100
  402f15:	mov    ebp,0x1
  402f1a:	jne    0x402fc0
  402f20:	movzx  eax,WORD PTR [rbx+0x8]
  402f24:	cmp    ax,0x8000
  402f28:	je     0x403020
  402f2e:	lea    r10,[rax+rax*2]
  402f32:	mov    r9,QWORD PTR [rsi+0x78]
  402f36:	and    r8d,0x4
  402f3a:	lea    rax,[rax+r10*4]
  402f3e:	lea    r10,[r9+rax*8]
  402f42:	jne    0x402fd0
  402f48:	mov    eax,0xffff8000
  402f4d:	mov    WORD PTR [r10+0x4],ax
  402f52:	movzx  eax,WORD PTR [rbx]
  402f55:	cmp    ax,0x8000
  402f59:	je     0x402fda
  402f5b:	movzx  r8d,WORD PTR [rbx+0x2]
  402f60:	mov    WORD PTR [r10+0x4],ax
  402f65:	mov    eax,DWORD PTR [rdx+0x10]
  402f68:	or     eax,0x10
  402f6b:	mov    WORD PTR [r10+0x6],r8w
  402f70:	mov    DWORD PTR [rdx+0x10],eax
  402f73:	mov    r8d,DWORD PTR [r10+0x10]
  402f77:	mov    QWORD PTR [r10+0x18],rcx
  402f7b:	and    eax,0xf00000ff
  402f80:	and    r8d,0xfffff00
  402f87:	or     r8d,eax
  402f8a:	mov    DWORD PTR [r10+0x10],r8d
  402f8e:	and    r8d,0x4
  402f92:	je     0x402fe0
  402f94:	movzx  eax,WORD PTR [r10+0xe]
  402f99:	add    eax,0x1
  402f9c:	cmp    ax,WORD PTR [r10+0xc]
  402fa1:	mov    WORD PTR [r10+0xe],ax
  402fa6:	jbe    0x402fe0
  402fa8:	test   BYTE PTR [rsi+0x10],0x4
  402fac:	mov    ebp,0xffffffff
  402fb1:	je     0x402fc0
  402fb3:	mov    rdx,r10
  402fb6:	mov    rcx,rsi
  402fb9:	call   0x402e10
  402fbe:	xchg   ax,ax
  402fc0:	mov    eax,ebp
  402fc2:	add    rsp,0x48
  402fc6:	pop    rbx
  402fc7:	pop    rsi
  402fc8:	pop    rdi
  402fc9:	pop    rbp
  402fca:	ret    
  402fcb:	nop    DWORD PTR [rax+rax*1+0x0]
  402fd0:	movzx  eax,WORD PTR [r10+0x4]
  402fd5:	cmp    ax,WORD PTR [rbx]
  402fd8:	jne    0x403040
  402fda:	mov    eax,DWORD PTR [rdx+0x10]
  402fdd:	jmp    0x402f73
  402fdf:	nop
  402fe0:	xor    ebp,ebp
  402fe2:	test   rdi,rdi
  402fe5:	je     0x402fc0
  402fe7:	mov    rdx,r10
  402fea:	mov    rcx,rsi
  402fed:	call   rdi
  402fef:	mov    eax,ebp
  402ff1:	add    rsp,0x48
  402ff5:	pop    rbx
  402ff6:	pop    rsi
  402ff7:	pop    rdi
  402ff8:	pop    rbp
  402ff9:	ret    
  402ffa:	nop    WORD PTR [rax+rax*1+0x0]
  403000:	mov    rcx,QWORD PTR [rbx+0x18]
  403004:	mov    QWORD PTR [rsp+0x38],rdx
  403009:	call   0x417860
  40300e:	mov    r8d,DWORD PTR [rbx+0x10]
  403012:	mov    rdx,QWORD PTR [rsp+0x38]
  403017:	jmp    0x402f00
  40301c:	nop    DWORD PTR [rax+0x0]
  403020:	movzx  eax,WORD PTR [rbx+0x2]
  403024:	mov    r10,rbx
  403027:	mov    WORD PTR [rbx+0x6],ax
  40302b:	movzx  eax,WORD PTR [rbx]
  40302e:	mov    WORD PTR [rbx+0x4],ax
  403032:	mov    eax,DWORD PTR [rdx+0x10]
  403035:	jmp    0x402f7b
  40303a:	nop    WORD PTR [rax+rax*1+0x0]
  403040:	lea    rdx,[rax+rax*2]
  403044:	mov    rdi,QWORD PTR [rbx+0x50]
  403048:	mov    rsi,QWORD PTR [r10+0x50]
  40304c:	mov    rbx,QWORD PTR [rip+0x15995]        # 0x4189e8
  403053:	lea    rax,[rax+rdx*4]
  403057:	mov    rbp,QWORD PTR [r9+rax*8+0x50]
  40305c:	call   QWORD PTR [rip+0x2056e]        # 0x4235d0
  403062:	lea    rcx,[rax+0x60]
  403066:	mov    r9,rdi
  403069:	mov    r8,rsi
  40306c:	mov    QWORD PTR [rsp+0x20],rbp
  403071:	mov    rdx,rbx
  403074:	mov    ebp,0xffffffff
  403079:	call   0x401a90
  40307e:	jmp    0x402fc0
  403083:	nop    DWORD PTR [rax]
  403086:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403090:	push   r13
  403092:	push   r12
  403094:	push   rbp
  403095:	push   rdi
  403096:	push   rsi
  403097:	push   rbx
  403098:	sub    rsp,0x38
  40309c:	mov    rsi,rcx
  40309f:	mov    rcx,QWORD PTR [rcx+0x78]
  4030a3:	mov    eax,DWORD PTR [rsi+0xb0]
  4030a9:	mov    rbx,rcx
  4030ac:	movzx  r10d,WORD PTR [rbx+0x2]
  4030b1:	cmp    r10d,edx
  4030b4:	je     0x403100
  4030b6:	sub    eax,0x1
  4030b9:	add    rbx,0x68
  4030bd:	test   eax,eax
  4030bf:	jg     0x4030ac
  4030c1:	movzx  eax,dl
  4030c4:	cmp    eax,0x7f
  4030c7:	ja     0x4030e0
  4030c9:	lea    r10,[rip+0x1a730]        # 0x41d800
  4030d0:	test   DWORD PTR [r10+rax*4],0x30000
  4030d8:	jne    0x403199
  4030de:	xchg   ax,ax
  4030e0:	test   BYTE PTR [rsi+0x10],0x4
  4030e4:	jne    0x4031cc
  4030ea:	mov    eax,0xffffffff
  4030ef:	add    rsp,0x38
  4030f3:	pop    rbx
  4030f4:	pop    rsi
  4030f5:	pop    rdi
  4030f6:	pop    rbp
  4030f7:	pop    r12
  4030f9:	pop    r13
  4030fb:	ret    
  4030fc:	nop    DWORD PTR [rax+0x0]
  403100:	mov    eax,DWORD PTR [rbx+0x10]
  403103:	test   eax,0x280000
  403108:	je     0x403180
  40310a:	cmp    eax,0x80100
  40310f:	jne    0x4030e0
  403111:	mov    r13,QWORD PTR [rbx+0x50]
  403115:	test   r13,r13
  403118:	je     0x4030e0
  40311a:	test   BYTE PTR [rsi+0x10],0x4
  40311e:	je     0x4030ea
  403120:	mov    r12,QWORD PTR [rsi+0x20]
  403124:	mov    rbp,QWORD PTR [rip+0x15875]        # 0x4189a0
  40312b:	mov    rdi,QWORD PTR [rip+0x2049e]        # 0x4235d0
  403132:	call   rdi
  403134:	lea    rcx,[rax+0x60]
  403138:	mov    r9,r13
  40313b:	mov    r8,r12
  40313e:	mov    rdx,rbp
  403141:	call   0x401a90
  403146:	mov    rbx,QWORD PTR [rbx+0x40]
  40314a:	test   rbx,rbx
  40314d:	je     0x403164
  40314f:	call   rdi
  403151:	lea    rdx,[rip+0x17d01]        # 0x41ae59
  403158:	lea    rcx,[rax+0x60]
  40315c:	mov    r8,rbx
  40315f:	call   0x401a90
  403164:	call   rdi
  403166:	lea    rdx,[rax+0x60]
  40316a:	mov    ecx,0xa
  40316f:	call   0x417878
  403174:	jmp    0x4031f7
  403179:	nop    DWORD PTR [rax+0x0]
  403180:	xor    eax,eax
  403182:	mov    QWORD PTR [r8],rbx
  403185:	mov    DWORD PTR [r9],0x1
  40318c:	add    rsp,0x38
  403190:	pop    rbx
  403191:	pop    rsi
  403192:	pop    rdi
  403193:	pop    rbp
  403194:	pop    r12
  403196:	pop    r13
  403198:	ret    
  403199:	movzx  eax,WORD PTR [rsi+0xac]
  4031a0:	cmp    ax,0x8000
  4031a4:	je     0x4030e0
  4031aa:	lea    rdx,[rax+rax*2]
  4031ae:	lea    rax,[rax+rdx*4]
  4031b2:	lea    rax,[rcx+rax*8]
  4031b6:	mov    QWORD PTR [r8],rax
  4031b9:	xor    eax,eax
  4031bb:	sub    QWORD PTR [rsi+0x18],0x1
  4031c0:	mov    DWORD PTR [r9],0x1
  4031c7:	jmp    0x4030ef
  4031cc:	mov    DWORD PTR [rsp+0x2c],edx
  4031d0:	mov    rdi,QWORD PTR [rsi+0x20]
  4031d4:	mov    rbx,QWORD PTR [rip+0x157d5]        # 0x4189b0
  4031db:	call   QWORD PTR [rip+0x203ef]        # 0x4235d0
  4031e1:	mov    edx,DWORD PTR [rsp+0x2c]
  4031e5:	lea    rcx,[rax+0x60]
  4031e9:	mov    r8,rdi
  4031ec:	mov    r9d,edx
  4031ef:	mov    rdx,rbx
  4031f2:	call   0x401a90
  4031f7:	mov    rcx,rsi
  4031fa:	mov    edx,0x1
  4031ff:	call   QWORD PTR [rsi+0x98]
  403205:	mov    ecx,0x1
  40320a:	call   0x417930
  40320f:	nop
  403210:	push   rdi
  403211:	push   rsi
  403212:	push   rbx
  403213:	sub    rsp,0x20
  403217:	test   rcx,rcx
  40321a:	je     0x403221
  40321c:	cmp    BYTE PTR [rcx],0x0
  40321f:	jne    0x403250
  403221:	call   QWORD PTR [rip+0x203a9]        # 0x4235d0
  403227:	lea    rcx,[rip+0x17ae7]        # 0x41ad15
  40322e:	lea    r9,[rax+0x30]
  403232:	mov    r8d,0x2
  403238:	mov    edx,0x1
  40323d:	add    rsp,0x20
  403241:	pop    rbx
  403242:	pop    rsi
  403243:	pop    rdi
  403244:	jmp    0x417848
  403249:	nop    DWORD PTR [rax+0x0]
  403250:	call   0x401ce0
  403255:	cmp    BYTE PTR [rax],0x0
  403258:	mov    rbx,rax
  40325b:	jne    0x403265
  40325d:	add    rsp,0x20
  403261:	pop    rbx
  403262:	pop    rsi
  403263:	pop    rdi
  403264:	ret    
  403265:	mov    rdi,QWORD PTR [rip+0x20364]        # 0x4235d0
  40326c:	jmp    0x4032aa
  40326e:	xchg   ax,ax
  403270:	call   rdi
  403272:	mov    rdx,rsi
  403275:	lea    r9,[rax+0x30]
  403279:	mov    r8d,0x1
  40327f:	sub    rdx,rbx
  403282:	mov    rcx,rbx
  403285:	call   0x417848
  40328a:	call   rdi
  40328c:	lea    rdx,[rax+0x30]
  403290:	mov    ecx,0x27
  403295:	call   0x417878
  40329a:	mov    rcx,rsi
  40329d:	call   0x401ce0
  4032a2:	cmp    BYTE PTR [rax],0x0
  4032a5:	mov    rbx,rax
  4032a8:	je     0x40325d
  4032aa:	call   rdi
  4032ac:	lea    rdx,[rax+0x30]
  4032b0:	mov    ecx,0x27
  4032b5:	call   0x417878
  4032ba:	mov    edx,0x27
  4032bf:	mov    rcx,rbx
  4032c2:	call   0x4177e0
  4032c7:	test   rax,rax
  4032ca:	mov    rsi,rax
  4032cd:	jne    0x403270
  4032cf:	call   rdi
  4032d1:	lea    rdx,[rax+0x30]
  4032d5:	mov    rcx,rbx
  4032d8:	call   0x417870
  4032dd:	call   rdi
  4032df:	lea    rdx,[rax+0x30]
  4032e3:	mov    ecx,0x27
  4032e8:	add    rsp,0x20
  4032ec:	pop    rbx
  4032ed:	pop    rsi
  4032ee:	pop    rdi
  4032ef:	jmp    0x417878
  4032f4:	xchg   ax,ax
  4032f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403300:	push   rsi
  403301:	push   rbx
  403302:	sub    rsp,0x28
  403306:	mov    eax,DWORD PTR [rcx]
  403308:	test   al,0x2
  40330a:	je     0x403381
  40330c:	mov    rbx,rcx
  40330f:	movzx  ecx,WORD PTR [rdx]
  403312:	mov    rsi,r8
  403315:	movzx  edx,cl
  403318:	cmp    dl,0x7f
  40331b:	ja     0x403360
  40331d:	lea    r9,[rip+0x1a4dc]        # 0x41d800
  403324:	test   BYTE PTR [r9+rdx*4+0x1],0x40
  40332a:	je     0x403360
  40332c:	movzx  r8d,cx
  403330:	mov    rcx,QWORD PTR [rip+0x1dd11]        # 0x421048
  403337:	lea    rdx,[rip+0x164ec]        # 0x41982a
  40333e:	call   0x401a90
  403343:	mov    eax,DWORD PTR [rbx]
  403345:	and    eax,0x1001
  40334a:	cmp    eax,0x1001
  40334f:	je     0x4033b3
  403351:	add    rsp,0x28
  403355:	pop    rbx
  403356:	pop    rsi
  403357:	ret    
  403358:	nop    DWORD PTR [rax+rax*1+0x0]
  403360:	and    eax,0x1001
  403365:	cmp    eax,0x1001
  40336a:	je     0x4033a0
  40336c:	mov    rdx,QWORD PTR [rip+0x1dcd5]        # 0x421048
  403373:	mov    rcx,QWORD PTR [rsi]
  403376:	add    rsp,0x28
  40337a:	pop    rbx
  40337b:	pop    rsi
  40337c:	jmp    0x417870
  403381:	mov    rdx,QWORD PTR [rip+0x1dcc0]        # 0x421048
  403388:	mov    rcx,QWORD PTR [r9]
  40338b:	add    rsp,0x28
  40338f:	pop    rbx
  403390:	pop    rsi
  403391:	jmp    0x417870
  403396:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4033a0:	mov    rdx,QWORD PTR [rip+0x1dca1]        # 0x421048
  4033a7:	mov    ecx,0x20
  4033ac:	call   0x417878
  4033b1:	jmp    0x40336c
  4033b3:	mov    r9,QWORD PTR [rip+0x1dc8e]        # 0x421048
  4033ba:	lea    rcx,[rip+0x16466]        # 0x419827
  4033c1:	mov    r8d,0x2
  4033c7:	mov    edx,0x1
  4033cc:	add    rsp,0x28
  4033d0:	pop    rbx
  4033d1:	pop    rsi
  4033d2:	jmp    0x417848
  4033d7:	nop    WORD PTR [rax+rax*1+0x0]
  4033e0:	push   rdi
  4033e1:	push   rsi
  4033e2:	push   rbx
  4033e3:	sub    rsp,0x20
  4033e7:	lea    rax,[rip+0x1a352]        # 0x41d740
  4033ee:	mov    esi,ecx
  4033f0:	mov    ecx,0x100
  4033f5:	mov    ebx,DWORD PTR [rax+rsi*4]
  4033f8:	call   0x417828
  4033fd:	test   rax,rax
  403400:	mov    r8,rax
  403403:	je     0x40344b
  403405:	mov    ecx,0x20
  40340a:	xor    eax,eax
  40340c:	mov    rdi,r8
  40340f:	rep stos QWORD PTR es:[rdi],rax
  403412:	lea    rcx,[rip+0x1a3eb]        # 0x41d804
  403419:	xor    edx,edx
  40341b:	nop    DWORD PTR [rax+rax*1+0x0]
  403420:	test   DWORD PTR [rcx+rdx*4],ebx
  403423:	je     0x40342b
  403425:	mov    BYTE PTR [r8+rdx*1+0x1],0x1
  40342b:	add    rdx,0x1
  40342f:	cmp    rdx,0x7f
  403433:	jne    0x403420
  403435:	lea    rax,[rip+0x1dd44]        # 0x421180
  40343c:	mov    QWORD PTR [rax+rsi*8],r8
  403440:	mov    rax,r8
  403443:	add    rsp,0x20
  403447:	pop    rbx
  403448:	pop    rsi
  403449:	pop    rdi
  40344a:	ret    
  40344b:	call   QWORD PTR [rip+0x2017f]        # 0x4235d0
  403451:	lea    rcx,[rip+0x163e0]        # 0x419838
  403458:	lea    r9,[rax+0x60]
  40345c:	mov    r8d,0x23
  403462:	mov    edx,0x1
  403467:	call   0x417848
  40346c:	mov    ecx,0x1
  403471:	call   0x4178b0
  403476:	nop
  403477:	nop    WORD PTR [rax+rax*1+0x0]
  403480:	push   rdi
  403481:	push   rsi
  403482:	push   rbx
  403483:	sub    rsp,0x20
  403487:	mov    r8,QWORD PTR [rdx]
  40348a:	mov    eax,DWORD PTR [r8+0x10]
  40348e:	and    eax,0xfffff00
  403493:	or     eax,DWORD PTR [rdx+0x10]
  403496:	test   al,0x20
  403498:	mov    DWORD PTR [rdx+0x10],eax
  40349b:	jne    0x403500
  40349d:	test   ah,0xf0
  4034a0:	je     0x403500
  4034a2:	test   eax,0x10000
  4034a7:	mov    eax,DWORD PTR [rdx+0x14]
  4034aa:	jne    0x403554
  4034b0:	cmp    eax,0x1
  4034b3:	je     0x403532
  4034b5:	cmp    eax,0x2
  4034b8:	jne    0x4034c5
  4034ba:	cmp    QWORD PTR [rdx+0x8],0x0
  4034bf:	je     0x403614
  4034c5:	mov    eax,DWORD PTR [rcx+0x14]
  4034c8:	cmp    eax,DWORD PTR [rcx+0x4]
  4034cb:	jbe    0x403511
  4034cd:	mov    rdi,QWORD PTR [r8+0x50]
  4034d1:	mov    rsi,QWORD PTR [rcx+0x20]
  4034d5:	mov    rbx,QWORD PTR [rip+0x15504]        # 0x4189e0
  4034dc:	nop    DWORD PTR [rax+0x0]
  4034e0:	call   QWORD PTR [rip+0x200ea]        # 0x4235d0
  4034e6:	lea    rcx,[rax+0x60]
  4034ea:	mov    r9,rdi
  4034ed:	mov    r8,rsi
  4034f0:	mov    rdx,rbx
  4034f3:	call   0x401a90
  4034f8:	mov    eax,0xffffffff
  4034fd:	jmp    0x40351b
  4034ff:	nop
  403500:	cmp    DWORD PTR [rdx+0x14],0x1
  403504:	je     0x403523
  403506:	cmp    QWORD PTR [rdx+0x8],0x0
  40350b:	jne    0x403600
  403511:	mov    QWORD PTR [rcx+0x18],0x0
  403519:	xor    eax,eax
  40351b:	add    rsp,0x20
  40351f:	pop    rbx
  403520:	pop    rsi
  403521:	pop    rdi
  403522:	ret    
  403523:	add    QWORD PTR [rcx+0x18],0x1
  403528:	xor    eax,eax
  40352a:	add    rsp,0x20
  40352e:	pop    rbx
  40352f:	pop    rsi
  403530:	pop    rdi
  403531:	ret    
  403532:	mov    rax,QWORD PTR [rcx+0x18]
  403536:	lea    r9,[rax+0x1]
  40353a:	mov    QWORD PTR [rcx+0x18],r9
  40353e:	cmp    BYTE PTR [rax+0x1],0x0
  403542:	je     0x4035e0
  403548:	mov    eax,DWORD PTR [rcx+0x14]
  40354b:	mov    QWORD PTR [rdx+0x8],r9
  40354f:	jmp    0x4034c8
  403554:	cmp    eax,0x1
  403557:	je     0x403590
  403559:	cmp    eax,0x2
  40355c:	jne    0x4035d0
  40355e:	cmp    QWORD PTR [rdx+0x8],0x0
  403563:	jne    0x403511
  403565:	test   BYTE PTR [rcx+0x10],0x3
  403569:	je     0x403511
  40356b:	mov    r9d,DWORD PTR [rcx+0x14]
  40356f:	mov    r8,QWORD PTR [rcx+0x8]
  403573:	mov    r8,QWORD PTR [r8+r9*8]
  403577:	mov    rax,r9
  40357a:	test   r8,r8
  40357d:	je     0x403511
  40357f:	cmp    BYTE PTR [r8],0x2d
  403583:	jne    0x4035bc
  403585:	jmp    0x403511
  403587:	nop    WORD PTR [rax+rax*1+0x0]
  403590:	mov    rax,QWORD PTR [rcx+0x18]
  403594:	lea    r8,[rax+0x1]
  403598:	mov    QWORD PTR [rcx+0x18],r8
  40359c:	cmp    BYTE PTR [rax+0x1],0x0
  4035a0:	jne    0x4035c2
  4035a2:	mov    r9d,DWORD PTR [rcx+0x14]
  4035a6:	mov    r8,QWORD PTR [rcx+0x8]
  4035aa:	mov    r8,QWORD PTR [r8+r9*8]
  4035ae:	mov    rax,r9
  4035b1:	test   r8,r8
  4035b4:	je     0x403630
  4035b6:	cmp    BYTE PTR [r8],0x2d
  4035ba:	je     0x403630
  4035bc:	add    eax,0x1
  4035bf:	mov    DWORD PTR [rcx+0x14],eax
  4035c2:	mov    QWORD PTR [rdx+0x8],r8
  4035c6:	jmp    0x403511
  4035cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4035d0:	mov    rcx,QWORD PTR [rip+0x15371]        # 0x418948
  4035d7:	call   0x401f00
  4035dc:	nop    DWORD PTR [rax+0x0]
  4035e0:	mov    r9d,DWORD PTR [rcx+0x14]
  4035e4:	mov    r10,QWORD PTR [rcx+0x8]
  4035e8:	lea    eax,[r9+0x1]
  4035ec:	mov    r9,QWORD PTR [r10+r9*8]
  4035f0:	mov    DWORD PTR [rcx+0x14],eax
  4035f3:	mov    QWORD PTR [rcx+0x18],r9
  4035f7:	jmp    0x40354b
  4035fc:	nop    DWORD PTR [rax+0x0]
  403600:	mov    rdi,QWORD PTR [r8+0x50]
  403604:	mov    rsi,QWORD PTR [rcx+0x20]
  403608:	mov    rbx,QWORD PTR [rip+0x153e9]        # 0x4189f8
  40360f:	jmp    0x4034e0
  403614:	mov    r9d,DWORD PTR [rcx+0x14]
  403618:	mov    r10,QWORD PTR [rcx+0x8]
  40361c:	lea    eax,[r9+0x1]
  403620:	mov    r9,QWORD PTR [r10+r9*8]
  403624:	mov    DWORD PTR [rcx+0x14],eax
  403627:	jmp    0x40354b
  40362c:	nop    DWORD PTR [rax+0x0]
  403630:	mov    QWORD PTR [rdx+0x8],0x0
  403638:	jmp    0x403511
  40363d:	nop    DWORD PTR [rax]
  403640:	push   rdi
  403641:	push   rbx
  403642:	sub    rsp,0x28
  403646:	mov    rdi,rcx
  403649:	call   0x417728
  40364e:	test   rax,rax
  403651:	je     0x40365a
  403653:	add    rsp,0x28
  403657:	pop    rbx
  403658:	pop    rdi
  403659:	ret    
  40365a:	or     rcx,0xffffffffffffffff
  40365e:	mov    rbx,QWORD PTR [rip+0x15283]        # 0x4188e8
  403665:	repnz scas al,BYTE PTR es:[rdi]
  403667:	mov    rax,rcx
  40366a:	not    rax
  40366d:	lea    rdi,[rax-0x1]
  403671:	call   QWORD PTR [rip+0x1ff59]        # 0x4235d0
  403677:	lea    rcx,[rax+0x60]
  40367b:	mov    r8d,edi
  40367e:	mov    rdx,rbx
  403681:	call   0x401a90
  403686:	mov    ecx,0x1
  40368b:	call   0x401ed0
  403690:	nop
  403691:	nop    DWORD PTR [rax+rax*1+0x0]
  403696:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4036a0:	push   r12
  4036a2:	push   rbp
  4036a3:	push   rdi
  4036a4:	push   rsi
  4036a5:	push   rbx
  4036a6:	sub    rsp,0x20
  4036aa:	mov    eax,DWORD PTR [rcx+0xb0]
  4036b0:	mov    rbp,QWORD PTR [rcx+0x90]
  4036b7:	mov    rbx,QWORD PTR [rcx+0x78]
  4036bb:	test   eax,eax
  4036bd:	jle    0x403754
  4036c3:	sub    eax,0x1
  4036c6:	mov    rsi,rcx
  4036c9:	add    rax,0x1
  4036cd:	lea    rdx,[rax+rax*2]
  4036d1:	lea    rax,[rax+rdx*4]
  4036d5:	lea    rdi,[rbx+rax*8]
  4036d9:	jmp    0x403702
  4036db:	nop    DWORD PTR [rax+rax*1+0x0]
  4036e0:	cmp    eax,0x6
  4036e3:	jne    0x4036f9
  4036e5:	mov    rax,rbx
  4036e8:	sub    rax,QWORD PTR [rsi+0x78]
  4036ec:	mov    rdx,QWORD PTR [rbp+0x78]
  4036f0:	mov    QWORD PTR [rdx+rax*1+0x20],0x0
  4036f9:	add    rbx,0x68
  4036fd:	cmp    rbx,rdi
  403700:	je     0x403754
  403702:	mov    edx,DWORD PTR [rbx+0x10]
  403705:	mov    eax,edx
  403707:	and    eax,0xf000
  40370c:	shr    eax,0xc
  40370f:	cmp    eax,0x1
  403712:	jne    0x4036e0
  403714:	test   dh,0x4
  403717:	je     0x40372d
  403719:	mov    rax,rbx
  40371c:	sub    rax,QWORD PTR [rsi+0x78]
  403720:	mov    rcx,QWORD PTR [rbp+0x78]
  403724:	mov    QWORD PTR [rcx+rax*1+0x20],0x0
  40372d:	and    edx,0x40
  403730:	je     0x4036f9
  403732:	mov    r12,rbx
  403735:	sub    r12,QWORD PTR [rsi+0x78]
  403739:	mov    rcx,QWORD PTR [rbx+0x18]
  40373d:	add    r12,QWORD PTR [rbp+0x78]
  403741:	add    rbx,0x68
  403745:	call   0x403640
  40374a:	cmp    rbx,rdi
  40374d:	mov    QWORD PTR [r12+0x18],rax
  403752:	jne    0x403702
  403754:	add    rsp,0x20
  403758:	pop    rbx
  403759:	pop    rsi
  40375a:	pop    rdi
  40375b:	pop    rbp
  40375c:	pop    r12
  40375e:	ret    
  40375f:	nop
  403760:	push   r13
  403762:	push   r12
  403764:	push   rbp
  403765:	push   rdi
  403766:	push   rsi
  403767:	push   rbx
  403768:	sub    rsp,0x28
  40376c:	mov    r13,rcx
  40376f:	mov    rcx,rdx
  403772:	mov    r12,r8
  403775:	mov    ebp,r9d
  403778:	call   0x417840
  40377d:	test   rax,rax
  403780:	mov    QWORD PTR [r13+0x8],rax
  403784:	je     0x403860
  40378a:	mov    rdx,QWORD PTR [r13+0x0]
  40378e:	mov    ecx,DWORD PTR [rdx+0x10]
  403791:	mov    rbx,QWORD PTR [rdx+0x60]
  403795:	mov    DWORD PTR [r13+0x14],0x0
  40379d:	mov    r8d,ecx
  4037a0:	or     r8d,0x42
  4037a4:	test   rbx,rbx
  4037a7:	mov    DWORD PTR [r13+0x10],r8d
  4037ab:	je     0x4037f2
  4037ad:	mov    rsi,rax
  4037b0:	add    rsi,0x1
  4037b4:	add    rbx,0x1
  4037b8:	movzx  r11d,BYTE PTR [rsi-0x1]
  4037bd:	movzx  r10d,BYTE PTR [rbx-0x1]
  4037c2:	cmp    r11b,r10b
  4037c5:	je     0x4037dc
  4037c7:	lea    rdx,[rip+0x14cb2]        # 0x418480
  4037ce:	movzx  edi,r11b
  4037d2:	movzx  edi,BYTE PTR [rdx+rdi*1]
  4037d6:	cmp    BYTE PTR [rdx+r10*1],dil
  4037da:	jne    0x4037f2
  4037dc:	test   r11b,r11b
  4037df:	jne    0x4037b0
  4037e1:	or     ecx,0x62
  4037e4:	mov    QWORD PTR [r13+0x8],0x0
  4037ec:	mov    DWORD PTR [r13+0x10],ecx
  4037f0:	jmp    0x403822
  4037f2:	cmp    ebp,0x1
  4037f5:	je     0x403840
  4037f7:	cmp    ebp,0x2
  4037fa:	jne    0x403804
  4037fc:	test   ecx,0x20020
  403802:	jne    0x403870
  403804:	test   ch,0xf0
  403807:	je     0x40381a
  403809:	cmp    BYTE PTR [rax],0x0
  40380c:	jne    0x4038b0
  403812:	and    ecx,0x10000
  403818:	je     0x403860
  40381a:	mov    QWORD PTR [r13+0x8],0x0
  403822:	mov    rdx,r13
  403825:	mov    rcx,r12
  403828:	add    rsp,0x28
  40382c:	pop    rbx
  40382d:	pop    rsi
  40382e:	pop    rdi
  40382f:	pop    rbp
  403830:	pop    r12
  403832:	pop    r13
  403834:	jmp    0x402ee0
  403839:	nop    DWORD PTR [rax+0x0]
  403840:	mov    edx,ecx
  403842:	and    edx,0x20020
  403848:	cmp    edx,0x20000
  40384e:	je     0x403804
  403850:	mov    edx,ecx
  403852:	and    edx,0x40020
  403858:	cmp    edx,0x40020
  40385e:	je     0x403804
  403860:	add    rsp,0x28
  403864:	pop    rbx
  403865:	pop    rsi
  403866:	pop    rdi
  403867:	pop    rbp
  403868:	pop    r12
  40386a:	pop    r13
  40386c:	ret    
  40386d:	nop    DWORD PTR [rax]
  403870:	mov    edx,ecx
  403872:	and    edx,0x40020
  403878:	cmp    edx,0x20
  40387b:	je     0x403804
  40387d:	mov    edx,ecx
  40387f:	and    edx,0x400020
  403885:	cmp    edx,0x400000
  40388b:	je     0x403804
  403891:	mov    edx,ecx
  403893:	and    edx,0x800020
  403899:	cmp    edx,0x800020
  40389f:	jne    0x403860
  4038a1:	jmp    0x403804
  4038a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4038b0:	mov    rcx,rax
  4038b3:	call   0x403640
  4038b8:	or     DWORD PTR [r13+0x10],0x40
  4038bd:	mov    QWORD PTR [r13+0x8],rax
  4038c1:	jmp    0x403822
  4038c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4038d0:	push   rsi
  4038d1:	push   rbx
  4038d2:	sub    rsp,0x28
  4038d6:	mov    rbx,rcx
  4038d9:	call   0x417828
  4038de:	test   rax,rax
  4038e1:	je     0x4038ea
  4038e3:	add    rsp,0x28
  4038e7:	pop    rbx
  4038e8:	pop    rsi
  4038e9:	ret    
  4038ea:	mov    rsi,QWORD PTR [rip+0x14ff7]        # 0x4188e8
  4038f1:	call   QWORD PTR [rip+0x1fcd9]        # 0x4235d0
  4038f7:	lea    rcx,[rax+0x60]
  4038fb:	mov    r8d,ebx
  4038fe:	mov    rdx,rsi
  403901:	call   0x401a90
  403906:	mov    ecx,0x1
  40390b:	call   0x401ed0
  403910:	nop
  403911:	nop    DWORD PTR [rax+rax*1+0x0]
  403916:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403920:	push   rbp
  403921:	push   rdi
  403922:	push   rsi
  403923:	push   rbx
  403924:	sub    rsp,0x28
  403928:	mov    rbx,QWORD PTR [rcx]
  40392b:	mov    rsi,rcx
  40392e:	mov    rdi,rdx
  403931:	test   rbx,rbx
  403934:	je     0x403984
  403936:	movsxd r8,DWORD PTR [rbx]
  403939:	mov    eax,DWORD PTR [rbx+0x4]
  40393c:	cmp    r8d,eax
  40393f:	lea    edx,[r8+0x1]
  403943:	jge    0x403955
  403945:	mov    DWORD PTR [rbx],edx
  403947:	mov    QWORD PTR [rbx+r8*8+0x8],rdi
  40394c:	add    rsp,0x28
  403950:	pop    rbx
  403951:	pop    rsi
  403952:	pop    rdi
  403953:	pop    rbp
  403954:	ret    
  403955:	add    eax,0x8
  403958:	mov    rcx,rbx
  40395b:	mov    DWORD PTR [rbx+0x4],eax
  40395e:	cdqe   
  403960:	lea    rbp,[rax*8+0x8]
  403968:	mov    rdx,rbp
  40396b:	call   0x4177f8
  403970:	test   rax,rax
  403973:	je     0x4039b0
  403975:	movsxd r8,DWORD PTR [rax]
  403978:	mov    QWORD PTR [rsi],rax
  40397b:	mov    rbx,rax
  40397e:	lea    edx,[r8+0x1]
  403982:	jmp    0x403945
  403984:	mov    ecx,0x38
  403989:	call   0x4038d0
  40398e:	test   rax,rax
  403991:	mov    rbx,rax
  403994:	je     0x40394c
  403996:	mov    DWORD PTR [rax],0x0
  40399c:	mov    DWORD PTR [rax+0x4],0x6
  4039a3:	mov    edx,0x1
  4039a8:	mov    QWORD PTR [rsi],rax
  4039ab:	xor    r8d,r8d
  4039ae:	jmp    0x403945
  4039b0:	mov    rsi,QWORD PTR [rip+0x14f51]        # 0x418908
  4039b7:	call   QWORD PTR [rip+0x1fc13]        # 0x4235d0
  4039bd:	lea    rcx,[rax+0x60]
  4039c1:	mov    r9,rbx
  4039c4:	mov    r8d,ebp
  4039c7:	mov    rdx,rsi
  4039ca:	call   0x401a90
  4039cf:	mov    ecx,0x1
  4039d4:	call   0x401ed0
  4039d9:	nop
  4039da:	nop    WORD PTR [rax+rax*1+0x0]
  4039e0:	push   r15
  4039e2:	push   r14
  4039e4:	push   r13
  4039e6:	push   r12
  4039e8:	push   rbp
  4039e9:	push   rdi
  4039ea:	push   rsi
  4039eb:	push   rbx
  4039ec:	sub    rsp,0x58
  4039f0:	mov    rbp,QWORD PTR [rsp+0xc0]
  4039f8:	mov    QWORD PTR [rsp+0xa0],rcx
  403a00:	mov    r15,r9
  403a03:	mov    r14,rdx
  403a06:	mov    r12,r8
  403a09:	lea    rcx,[r8+rbp*1+0x18]
  403a0e:	call   0x4038d0
  403a13:	test   r15,r15
  403a16:	mov    r13,rax
  403a19:	je     0x403bc0
  403a1f:	test   rbp,rbp
  403a22:	mov    DWORD PTR [rax],0x1
  403a28:	je     0x403b10
  403a2e:	lea    rsi,[rax+0x10]
  403a32:	lea    rax,[rsp+0x48]
  403a37:	mov    ebx,ebp
  403a39:	lea    r10,[rip+0x16800]        # 0x41a240
  403a40:	mov    QWORD PTR [rsp+0x30],rax
  403a45:	jmp    0x403a65
  403a47:	nop    WORD PTR [rax+rax*1+0x0]
  403a50:	sub    ebx,0x1
  403a53:	add    rsi,0x1
  403a57:	mov    r15,rdi
  403a5a:	test   ebx,ebx
  403a5c:	mov    BYTE PTR [rsi-0x1],al
  403a5f:	jle    0x403b55
  403a65:	movzx  eax,BYTE PTR [r15]
  403a69:	lea    rdi,[r15+0x1]
  403a6d:	test   eax,eax
  403a6f:	je     0x403b55
  403a75:	cmp    eax,0x26
  403a78:	jne    0x403a50
  403a7a:	cmp    ebx,0x2
  403a7d:	mov    QWORD PTR [rsp+0x48],rdi
  403a82:	mov    eax,0x26
  403a87:	jle    0x403a50
  403a89:	cmp    BYTE PTR [r15+0x1],0x23
  403a8e:	lea    r9,[rip+0x1676b]        # 0x41a200
  403a95:	je     0x403b60
  403a9b:	mov    r15,r9
  403a9e:	mov    QWORD PTR [rsp+0xc0],rbp
  403aa6:	mov    QWORD PTR [rsp+0x38],rsi
  403aab:	mov    ebp,DWORD PTR [r15+0x4]
  403aaf:	mov    esi,ebx
  403ab1:	cmp    ebp,esi
  403ab3:	jg     0x403ad9
  403ab5:	movsxd rbx,ebp
  403ab8:	lea    rdx,[r15+0x8]
  403abc:	mov    rcx,rdi
  403abf:	mov    r8,rbx
  403ac2:	mov    QWORD PTR [rsp+0x28],r10
  403ac7:	call   0x4177b0
  403acc:	test   eax,eax
  403ace:	mov    r10,QWORD PTR [rsp+0x28]
  403ad3:	je     0x403be1
  403ad9:	cmp    r15,r10
  403adc:	je     0x403aef
  403ade:	add    r15,0x10
  403ae2:	mov    ebp,DWORD PTR [r15+0x4]
  403ae6:	cmp    ebp,esi
  403ae8:	jle    0x403ab5
  403aea:	cmp    r15,r10
  403aed:	jne    0x403ade
  403aef:	mov    ebx,esi
  403af1:	mov    rbp,QWORD PTR [rsp+0xc0]
  403af9:	mov    rsi,QWORD PTR [rsp+0x38]
  403afe:	mov    eax,0x26
  403b03:	jmp    0x403a50
  403b08:	nop    DWORD PTR [rax+rax*1+0x0]
  403b10:	mov    BYTE PTR [rax+0x10],0x0
  403b14:	lea    rcx,[r13+rbp*1+0x11]
  403b19:	mov    QWORD PTR [r13+0x8],rcx
  403b1d:	mov    r8,r12
  403b20:	mov    rdx,r14
  403b23:	call   0x417820
  403b28:	mov    rax,QWORD PTR [r13+0x8]
  403b2c:	mov    rcx,QWORD PTR [rsp+0xa0]
  403b34:	mov    rdx,r13
  403b37:	mov    BYTE PTR [rax+r12*1],0x0
  403b3c:	call   0x403920
  403b41:	mov    rax,r13
  403b44:	add    rsp,0x58
  403b48:	pop    rbx
  403b49:	pop    rsi
  403b4a:	pop    rdi
  403b4b:	pop    rbp
  403b4c:	pop    r12
  403b4e:	pop    r13
  403b50:	pop    r14
  403b52:	pop    r15
  403b54:	ret    
  403b55:	mov    BYTE PTR [rsi],0x0
  403b58:	jmp    0x403b14
  403b5a:	nop    WORD PTR [rax+rax*1+0x0]
  403b60:	lea    rcx,[r15+0x2]
  403b64:	mov    r8d,0xa
  403b6a:	mov    QWORD PTR [rsp+0x48],rcx
  403b6f:	cmp    BYTE PTR [r15+0x2],0x78
  403b74:	je     0x403bd3
  403b76:	mov    rdx,QWORD PTR [rsp+0x30]
  403b7b:	mov    QWORD PTR [rsp+0x28],r10
  403b80:	call   0x417780
  403b85:	mov    rdx,QWORD PTR [rsp+0x48]
  403b8a:	mov    ecx,eax
  403b8c:	mov    r10,QWORD PTR [rsp+0x28]
  403b91:	mov    eax,0x26
  403b96:	cmp    BYTE PTR [rdx],0x3b
  403b99:	jne    0x403a50
  403b9f:	add    rdx,0x1
  403ba3:	mov    r8,rdx
  403ba6:	sub    r8,rdi
  403ba9:	cmp    r8d,ebx
  403bac:	jg     0x403a50
  403bb2:	sub    ebx,r8d
  403bb5:	mov    eax,ecx
  403bb7:	mov    rdi,rdx
  403bba:	jmp    0x403a50
  403bbf:	nop
  403bc0:	lea    rcx,[rax+0x10]
  403bc4:	mov    DWORD PTR [rax],0x0
  403bca:	mov    QWORD PTR [rax+0x8],rcx
  403bce:	jmp    0x403b1d
  403bd3:	lea    rcx,[r15+0x3]
  403bd7:	mov    r8b,0x10
  403bda:	mov    QWORD PTR [rsp+0x48],rcx
  403bdf:	jmp    0x403b76
  403be1:	mov    rax,rbx
  403be4:	mov    r9,r15
  403be7:	mov    ebx,esi
  403be9:	mov    r15d,ebp
  403bec:	add    rdi,rax
  403bef:	mov    rsi,QWORD PTR [rsp+0x38]
  403bf4:	mov    rbp,QWORD PTR [rsp+0xc0]
  403bfc:	sub    ebx,r15d
  403bff:	movzx  eax,BYTE PTR [r9]
  403c03:	jmp    0x403a50
  403c08:	nop    DWORD PTR [rax+rax*1+0x0]
  403c10:	push   rsi
  403c11:	push   rbx
  403c12:	sub    rsp,0x28
  403c16:	mov    rax,QWORD PTR [rdx+0x38]
  403c1a:	mov    rbx,rdx
  403c1d:	lea    rdx,[rip+0x7b2c]        # 0x40b750
  403c24:	mov    rsi,rcx
  403c27:	cmp    rax,rdx
  403c2a:	je     0x403d80
  403c30:	lea    rdx,[rip+0xffffffffffffeb49]        # 0x402780
  403c37:	cmp    rax,rdx
  403c3a:	je     0x403da0
  403c40:	lea    rdx,[rip+0x8bf9]        # 0x40c840
  403c47:	cmp    rax,rdx
  403c4a:	je     0x403db4
  403c50:	mov    r8,QWORD PTR [rbx+0x48]
  403c54:	test   r8,r8
  403c57:	je     0x403d40
  403c5d:	movzx  r9d,WORD PTR [rbx+0xc]
  403c62:	cmp    r9w,0x1
  403c67:	je     0x403d64
  403c6d:	cmp    r9w,0xffff
  403c72:	je     0x403c87
  403c74:	mov    rdx,QWORD PTR [rcx]
  403c77:	lea    rcx,[rip+0x1753a]        # 0x41b1b8
  403c7e:	call   0x401ea0
  403c83:	mov    r8,QWORD PTR [rbx+0x48]
  403c87:	mov    rdx,QWORD PTR [rsi]
  403c8a:	lea    rcx,[rip+0x17dff]        # 0x41ba90
  403c91:	call   0x401ea0
  403c96:	mov    eax,DWORD PTR [rbx+0x10]
  403c99:	test   ah,0xf0
  403c9c:	je     0x403d10
  403c9e:	test   eax,0x10000
  403ca3:	jne    0x403ce0
  403ca5:	lea    rdx,[rip+0x17245]        # 0x41aef1
  403cac:	lea    rcx,[rip+0x170e3]        # 0x41ad96
  403cb3:	call   0x401ea0
  403cb8:	call   QWORD PTR [rip+0x1f912]        # 0x4235d0
  403cbe:	lea    rcx,[rip+0x17289]        # 0x41af4e
  403cc5:	lea    r9,[rax+0x30]
  403cc9:	mov    r8d,0x10
  403ccf:	mov    edx,0x1
  403cd4:	add    rsp,0x28
  403cd8:	pop    rbx
  403cd9:	pop    rsi
  403cda:	jmp    0x417848
  403cdf:	nop
  403ce0:	mov    rdx,QWORD PTR [rsi]
  403ce3:	mov    r8,QWORD PTR [rbx+0x48]
  403ce7:	lea    rcx,[rip+0x1865c]        # 0x41c34a
  403cee:	call   0x401ea0
  403cf3:	lea    rdx,[rip+0x170ec]        # 0x41ade6
  403cfa:	lea    rcx,[rip+0x17095]        # 0x41ad96
  403d01:	call   0x401ea0
  403d06:	jmp    0x403cb8
  403d08:	nop    DWORD PTR [rax+rax*1+0x0]
  403d10:	mov    rdx,QWORD PTR [rsi]
  403d13:	mov    r8,QWORD PTR [rbx+0x48]
  403d17:	lea    rcx,[rip+0x1862c]        # 0x41c34a
  403d1e:	call   0x401ea0
  403d23:	lea    rdx,[rip+0x170a3]        # 0x41adcd
  403d2a:	lea    rcx,[rip+0x17065]        # 0x41ad96
  403d31:	call   0x401ea0
  403d36:	jmp    0x403cb8
  403d38:	nop    DWORD PTR [rax+rax*1+0x0]
  403d40:	test   rax,rax
  403d43:	je     0x403de0
  403d49:	mov    rdx,QWORD PTR [rcx]
  403d4c:	lea    r8,[rip+0x17039]        # 0x41ad8c
  403d53:	lea    rcx,[rip+0x175ca]        # 0x41b324
  403d5a:	call   0x401ea0
  403d5f:	jmp    0x403cb8
  403d64:	mov    rdx,QWORD PTR [rcx]
  403d67:	lea    rcx,[rip+0x18636]        # 0x41c3a4
  403d6e:	call   0x401ea0
  403d73:	jmp    0x403c96
  403d78:	nop    DWORD PTR [rax+rax*1+0x0]
  403d80:	mov    rdx,QWORD PTR [rcx]
  403d83:	lea    r8,[rip+0x17157]        # 0x41aee1
  403d8a:	lea    rcx,[rip+0x17593]        # 0x41b324
  403d91:	call   0x401ea0
  403d96:	jmp    0x403cb8
  403d9b:	nop    DWORD PTR [rax+rax*1+0x0]
  403da0:	mov    rdx,QWORD PTR [rcx]
  403da3:	lea    rcx,[rip+0x184ec]        # 0x41c296
  403daa:	call   0x401ea0
  403daf:	jmp    0x403cb8
  403db4:	lea    rdx,[rip+0x1721b]        # 0x41afd6
  403dbb:	lea    rcx,[rip+0x16fd4]        # 0x41ad96
  403dc2:	call   0x401ea0
  403dc7:	lea    rdx,[rip+0x17123]        # 0x41aef1
  403dce:	lea    rcx,[rip+0x16fc1]        # 0x41ad96
  403dd5:	call   0x401ea0
  403dda:	jmp    0x403cb8
  403ddf:	nop
  403de0:	lea    rdx,[rip+0x1721e]        # 0x41b005
  403de7:	lea    rcx,[rip+0x16fa8]        # 0x41ad96
  403dee:	call   0x401ea0
  403df3:	lea    rdx,[rip+0x16fec]        # 0x41ade6
  403dfa:	lea    rcx,[rip+0x16f95]        # 0x41ad96
  403e01:	call   0x401ea0
  403e06:	jmp    0x403cb8
  403e0b:	nop    DWORD PTR [rax+rax*1+0x0]
  403e10:	push   rbp
  403e11:	push   rdi
  403e12:	push   rsi
  403e13:	push   rbx
  403e14:	sub    rsp,0x28
  403e18:	mov    esi,DWORD PTR [rcx+0xb0]
  403e1e:	mov    rbx,QWORD PTR [rcx+0x78]
  403e22:	mov    rdi,rcx
  403e25:	call   QWORD PTR [rip+0x1f7a5]        # 0x4235d0
  403e2b:	lea    rcx,[rip+0x17367]        # 0x41b199
  403e32:	lea    r9,[rax+0x30]
  403e36:	mov    r8d,0x1e
  403e3c:	mov    edx,0x1
  403e41:	call   0x417848
  403e46:	test   esi,esi
  403e48:	jle    0x403ea9
  403e4a:	lea    eax,[rsi-0x1]
  403e4d:	lea    rbp,[rdi+0x30]
  403e51:	add    rax,0x1
  403e55:	lea    rdx,[rax+rax*2]
  403e59:	lea    rax,[rax+rdx*4]
  403e5d:	lea    rsi,[rbx+rax*8]
  403e61:	test   DWORD PTR [rbx+0x10],0x280000
  403e68:	jne    0x403ea0
  403e6a:	movzx  edx,WORD PTR [rbx+0x2]
  403e6e:	movzx  eax,dl
  403e71:	cmp    al,0x7f
  403e73:	ja     0x403ea0
  403e75:	lea    rcx,[rip+0x19984]        # 0x41d800
  403e7c:	test   BYTE PTR [rcx+rax*4+0x1],0x40
  403e81:	je     0x403ea0
  403e83:	lea    rcx,[rip+0x170d5]        # 0x41af5f
  403e8a:	call   0x401ea0
  403e8f:	mov    rdx,rbx
  403e92:	mov    rcx,rbp
  403e95:	call   0x403c10
  403e9a:	nop    WORD PTR [rax+rax*1+0x0]
  403ea0:	add    rbx,0x68
  403ea4:	cmp    rbx,rsi
  403ea7:	jne    0x403e61
  403ea9:	mov    r8,QWORD PTR [rdi+0x30]
  403ead:	lea    rdx,[rip+0x16eab]        # 0x41ad5f
  403eb4:	lea    rcx,[rip+0x186c2]        # 0x41c57d
  403ebb:	add    rsp,0x28
  403ebf:	pop    rbx
  403ec0:	pop    rsi
  403ec1:	pop    rdi
  403ec2:	pop    rbp
  403ec3:	jmp    0x401ea0
  403ec8:	nop    DWORD PTR [rax+rax*1+0x0]
  403ed0:	push   r15
  403ed2:	push   r14
  403ed4:	push   r13
  403ed6:	push   r12
  403ed8:	push   rbp
  403ed9:	push   rdi
  403eda:	push   rsi
  403edb:	push   rbx
  403edc:	sub    rsp,0x58
  403ee0:	mov    rdi,rcx
  403ee3:	mov    QWORD PTR [rsp+0xa8],rdx
  403eeb:	mov    rsi,r8
  403eee:	mov    rbx,r9
  403ef1:	call   0x4177b8
  403ef6:	sub    eax,0x1
  403ef9:	cmp    eax,0x1e
  403efc:	mov    DWORD PTR [rsp+0x2c],eax
  403f00:	ja     0x403fc4
  403f06:	mov    eax,DWORD PTR [rbx]
  403f08:	mov    rbp,QWORD PTR [rsi]
  403f0b:	test   eax,eax
  403f0d:	jle    0x40408e
  403f13:	sub    eax,0x1
  403f16:	mov    rbx,QWORD PTR [rip+0x1f8cb]        # 0x4237e8
  403f1d:	mov    r12d,0x2
  403f23:	add    rax,0x1
  403f27:	lea    rdx,[rax+rax*2]
  403f2b:	lea    rax,[rax+rdx*4]
  403f2f:	lea    rax,[rbp+rax*8+0x0]
  403f34:	mov    QWORD PTR [rsp+0x20],rax
  403f39:	nop    DWORD PTR [rax+0x0]
  403f40:	cmp    rbp,QWORD PTR [rsp+0xa8]
  403f48:	je     0x403fb2
  403f4a:	test   DWORD PTR [rbp+0x10],0x280000
  403f51:	jne    0x403fb2
  403f53:	mov    r15,QWORD PTR [rbp+0x50]
  403f57:	xor    r14d,r14d
  403f5a:	jmp    0x403f64
  403f5c:	nop    DWORD PTR [rax+0x0]
  403f60:	add    r14d,0x1
  403f64:	mov    r13d,r14d
  403f67:	movzx  ecx,BYTE PTR [r15+r13*1]
  403f6c:	call   rbx
  403f6e:	movzx  ecx,BYTE PTR [rdi+r13*1]
  403f73:	mov    esi,eax
  403f75:	call   rbx
  403f77:	cmp    esi,eax
  403f79:	je     0x403f60
  403f7b:	mov    r15,QWORD PTR [rbp+0x58]
  403f7f:	cmp    r12d,r14d
  403f82:	cmovb  r12d,r14d
  403f86:	test   r15,r15
  403f89:	je     0x403fb2
  403f8b:	xor    r14d,r14d
  403f8e:	jmp    0x403f94
  403f90:	add    r14d,0x1
  403f94:	mov    r13d,r14d
  403f97:	movsx  ecx,BYTE PTR [r15+r13*1]
  403f9c:	call   rbx
  403f9e:	movsx  ecx,BYTE PTR [rdi+r13*1]
  403fa3:	mov    esi,eax
  403fa5:	call   rbx
  403fa7:	cmp    esi,eax
  403fa9:	je     0x403f90
  403fab:	cmp    r12d,r14d
  403fae:	cmovb  r12d,r14d
  403fb2:	add    rbp,0x68
  403fb6:	cmp    rbp,QWORD PTR [rsp+0x20]
  403fbb:	jne    0x403f40
  403fbd:	cmp    DWORD PTR [rsp+0x2c],r12d
  403fc2:	ja     0x403fe5
  403fc4:	lea    rcx,[rip+0x16fa4]        # 0x41af6f
  403fcb:	mov    rdx,rdi
  403fce:	call   0x401ea0
  403fd3:	nop
  403fd4:	add    rsp,0x58
  403fd8:	pop    rbx
  403fd9:	pop    rsi
  403fda:	pop    rdi
  403fdb:	pop    rbp
  403fdc:	pop    r12
  403fde:	pop    r13
  403fe0:	pop    r14
  403fe2:	pop    r15
  403fe4:	ret    
  403fe5:	lea    rbp,[rsp+0x30]
  403fea:	mov    ebx,r12d
  403fed:	cmp    r12d,0x8
  403ff1:	mov    rax,rdi
  403ff4:	lea    rsi,[rbp+rbx*1+0x0]
  403ff9:	mov    rcx,rbp
  403ffc:	jae    0x404067
  403ffe:	xor    edx,edx
  404000:	test   r12b,0x4
  404004:	je     0x40400f
  404006:	mov    edx,DWORD PTR [rax]
  404008:	mov    DWORD PTR [rcx],edx
  40400a:	mov    edx,0x4
  40400f:	test   r12b,0x2
  404013:	je     0x404023
  404015:	movzx  r8d,WORD PTR [rax+rdx*1]
  40401a:	mov    WORD PTR [rcx+rdx*1],r8w
  40401f:	add    rdx,0x2
  404023:	and    r12d,0x1
  404027:	je     0x404030
  404029:	movzx  eax,BYTE PTR [rax+rdx*1]
  40402d:	mov    BYTE PTR [rcx+rdx*1],al
  404030:	add    rbx,rdi
  404033:	jmp    0x404038
  404035:	mov    rsi,rax
  404038:	lea    rcx,[rip+0x16f40]        # 0x41af7f
  40403f:	mov    BYTE PTR [rsi],0x0
  404042:	mov    rdx,rbp
  404045:	add    rbx,0x1
  404049:	call   0x401ea0
  40404e:	movzx  ecx,BYTE PTR [rbx-0x1]
  404052:	cmp    BYTE PTR [rbx],0x0
  404055:	lea    rax,[rsi+0x1]
  404059:	mov    BYTE PTR [rax-0x1],cl
  40405c:	jne    0x404035
  40405e:	mov    BYTE PTR [rsi+0x1],0x0
  404062:	jmp    0x403fc4
  404067:	mov    ecx,r12d
  40406a:	xor    eax,eax
  40406c:	and    ecx,0xfffffff8
  40406f:	mov    edx,eax
  404071:	add    eax,0x8
  404074:	mov    r8,QWORD PTR [rdi+rdx*1]
  404078:	cmp    eax,ecx
  40407a:	mov    QWORD PTR [rbp+rdx*1+0x0],r8
  40407f:	jb     0x40406f
  404081:	lea    rcx,[rbp+rax*1+0x0]
  404086:	add    rax,rdi
  404089:	jmp    0x403ffe
  40408e:	mov    r12d,0x2
  404094:	jmp    0x403fbd
  404099:	nop    DWORD PTR [rax+0x0]
  4040a0:	push   r14
  4040a2:	push   r13
  4040a4:	push   r12
  4040a6:	push   rbp
  4040a7:	push   rdi
  4040a8:	push   rsi
  4040a9:	push   rbx
  4040aa:	sub    rsp,0x20
  4040ae:	mov    r13,QWORD PTR [rip+0x1f51b]        # 0x4235d0
  4040b5:	mov    rbx,QWORD PTR [rcx+0x78]
  4040b9:	mov    rdi,rcx
  4040bc:	mov    esi,DWORD PTR [rcx+0xb0]
  4040c2:	call   r13
  4040c5:	lea    rcx,[rip+0x170cd]        # 0x41b199
  4040cc:	lea    r9,[rax+0x30]
  4040d0:	mov    r8d,0x1e
  4040d6:	mov    edx,0x1
  4040db:	lea    r12,[rdi+0x78]
  4040df:	lea    rbp,[rdi+0xb0]
  4040e6:	call   0x417848
  4040eb:	lea    r14,[rdi+0x30]
  4040ef:	jmp    0x404100
  4040f1:	sub    esi,0x1
  4040f4:	add    rbx,0x68
  4040f8:	test   esi,esi
  4040fa:	jle    0x4041ad
  404100:	test   DWORD PTR [rbx+0x10],0x280000
  404107:	jne    0x4040f1
  404109:	mov    rcx,QWORD PTR [rbx+0x50]
  40410d:	mov    r9,rbp
  404110:	mov    r8,r12
  404113:	mov    rdx,rbx
  404116:	call   0x403ed0
  40411b:	mov    rcx,r14
  40411e:	mov    rdx,rbx
  404121:	call   0x403c10
  404126:	mov    rcx,QWORD PTR [rbx+0x58]
  40412a:	test   rcx,rcx
  40412d:	je     0x4040f1
  40412f:	mov    r9,rbp
  404132:	mov    r8,r12
  404135:	mov    rdx,rbx
  404138:	call   0x403ed0
  40413d:	lea    rax,[rip+0x86fc]        # 0x40c840
  404144:	cmp    QWORD PTR [rbx+0x38],rax
  404148:	je     0x4041e0
  40414e:	cmp    WORD PTR [rbx+0xc],0x1
  404153:	mov    rdx,QWORD PTR [rdi+0x30]
  404157:	mov    r9,QWORD PTR [rbx+0x60]
  40415b:	mov    r8,QWORD PTR [rbx+0x48]
  40415f:	je     0x4041d2
  404161:	lea    rcx,[rip+0x17a7b]        # 0x41bbe3
  404168:	call   0x401ea0
  40416d:	lea    rdx,[rip+0x16c59]        # 0x41adcd
  404174:	lea    rcx,[rip+0x16c1b]        # 0x41ad96
  40417b:	sub    esi,0x1
  40417e:	add    rbx,0x68
  404182:	call   0x401ea0
  404187:	call   r13
  40418a:	lea    rcx,[rip+0x16dbd]        # 0x41af4e
  404191:	lea    r9,[rax+0x30]
  404195:	mov    r8d,0x10
  40419b:	mov    edx,0x1
  4041a0:	call   0x417848
  4041a5:	test   esi,esi
  4041a7:	jg     0x404100
  4041ad:	mov    r8,QWORD PTR [rdi+0x30]
  4041b1:	lea    rdx,[rip+0x16c47]        # 0x41adff
  4041b8:	lea    rcx,[rip+0x183be]        # 0x41c57d
  4041bf:	add    rsp,0x20
  4041c3:	pop    rbx
  4041c4:	pop    rsi
  4041c5:	pop    rdi
  4041c6:	pop    rbp
  4041c7:	pop    r12
  4041c9:	pop    r13
  4041cb:	pop    r14
  4041cd:	jmp    0x401ea0
  4041d2:	lea    rcx,[rip+0x17a97]        # 0x41bc70
  4041d9:	call   0x401ea0
  4041de:	jmp    0x40416d
  4041e0:	lea    rdx,[rip+0x16e4d]        # 0x41b034
  4041e7:	lea    rcx,[rip+0x16ba8]        # 0x41ad96
  4041ee:	call   0x401ea0
  4041f3:	jmp    0x40416d
  4041f8:	nop    DWORD PTR [rax+rax*1+0x0]
  404200:	push   r15
  404202:	push   r14
  404204:	push   r13
  404206:	push   r12
  404208:	push   rbp
  404209:	push   rdi
  40420a:	push   rsi
  40420b:	push   rbx
  40420c:	sub    rsp,0x68
  404210:	mov    eax,DWORD PTR [rcx+0x10]
  404213:	test   al,0x8
  404215:	jne    0x404320
  40421b:	mov    rdi,QWORD PTR [rcx+0x20]
  40421f:	test   rdi,rdi
  404222:	je     0x404360
  404228:	mov    rdx,QWORD PTR [rcx+0x18]
  40422c:	lea    r13,[rsp+0x40]
  404231:	mov    rbp,rcx
  404234:	mov    r8d,0x20
  40423a:	mov    rcx,r13
  40423d:	call   0x410d70
  404242:	test   eax,eax
  404244:	jne    0x404320
  40424a:	mov    eax,DWORD PTR [rdi]
  40424c:	test   eax,eax
  40424e:	jle    0x4042e7
  404254:	lea    r15d,[rax-0x1]
  404258:	xor    ebx,ebx
  40425a:	xor    r12d,r12d
  40425d:	lea    rax,[r15+0x1]
  404261:	mov    QWORD PTR [rsp+0x38],rax
  404266:	jmp    0x404290
  404268:	nop    DWORD PTR [rax+rax*1+0x0]
  404270:	mov    BYTE PTR [r15],0x3d
  404274:	cmp    r14d,r12d
  404277:	je     0x404281
  404279:	movsxd rax,r12d
  40427c:	mov    QWORD PTR [rdi+rax*8+0x8],rsi
  404281:	add    r12d,0x1
  404285:	add    rbx,0x1
  404289:	cmp    rbx,QWORD PTR [rsp+0x38]
  40428e:	je     0x4042e7
  404290:	mov    rsi,QWORD PTR [rdi+rbx*8+0x8]
  404295:	mov    edx,0x3d
  40429a:	mov    r14d,ebx
  40429d:	mov    rcx,rsi
  4042a0:	call   0x4177e0
  4042a5:	test   rax,rax
  4042a8:	mov    r15,rax
  4042ab:	je     0x404331
  4042b1:	mov    BYTE PTR [rax],0x0
  4042b4:	xor    r9d,r9d
  4042b7:	xor    r8d,r8d
  4042ba:	mov    DWORD PTR [rsp+0x20],0x0
  4042c2:	mov    rdx,rsi
  4042c5:	mov    rcx,r13
  4042c8:	call   0x410d68
  4042cd:	test   eax,eax
  4042cf:	jne    0x404270
  4042d1:	mov    rcx,rsi
  4042d4:	add    rbx,0x1
  4042d8:	call   0x417860
  4042dd:	sub    DWORD PTR [rdi],0x1
  4042e0:	cmp    rbx,QWORD PTR [rsp+0x38]
  4042e5:	jne    0x404290
  4042e7:	mov    rcx,r13
  4042ea:	call   0x410d60
  4042ef:	mov    eax,DWORD PTR [rdi]
  4042f1:	test   eax,eax
  4042f3:	jne    0x404320
  4042f5:	mov    eax,DWORD PTR [rbp+0x10]
  4042f8:	mov    edx,eax
  4042fa:	and    edx,0xfffff00
  404300:	test   ah,0x8
  404303:	jne    0x404308
  404305:	or     edx,0x20
  404308:	mov    DWORD PTR [rbp+0x10],edx
  40430b:	mov    rcx,rdi
  40430e:	call   0x417860
  404313:	mov    QWORD PTR [rbp+0x20],0x0
  40431b:	nop    DWORD PTR [rax+rax*1+0x0]
  404320:	add    rsp,0x68
  404324:	pop    rbx
  404325:	pop    rsi
  404326:	pop    rdi
  404327:	pop    rbp
  404328:	pop    r12
  40432a:	pop    r13
  40432c:	pop    r14
  40432e:	pop    r15
  404330:	ret    
  404331:	xor    r9d,r9d
  404334:	xor    r8d,r8d
  404337:	mov    DWORD PTR [rsp+0x20],0x0
  40433f:	mov    rdx,rsi
  404342:	mov    rcx,r13
  404345:	call   0x410d68
  40434a:	test   eax,eax
  40434c:	jne    0x404274
  404352:	jmp    0x4042d1
  404357:	nop    WORD PTR [rax+rax*1+0x0]
  404360:	mov    edx,eax
  404362:	and    edx,0xfffff00
  404368:	test   ah,0x8
  40436b:	jne    0x404370
  40436d:	or     edx,0x20
  404370:	mov    DWORD PTR [rcx+0x10],edx
  404373:	jmp    0x404320
  404375:	nop
  404376:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404380:	push   rsi
  404381:	push   rbx
  404382:	sub    rsp,0x28
  404386:	test   BYTE PTR [rdx+0x10],0x4
  40438a:	je     0x404395
  40438c:	mov    rax,QWORD PTR [rdx]
  40438f:	test   BYTE PTR [rax+0x13],0x2
  404393:	jne    0x4043a0
  404395:	add    rsp,0x28
  404399:	pop    rbx
  40439a:	pop    rsi
  40439b:	jmp    0x403480
  4043a0:	mov    rsi,QWORD PTR [rax+0x50]
  4043a4:	mov    rbx,QWORD PTR [rip+0x14685]        # 0x418a30
  4043ab:	call   QWORD PTR [rip+0x1f21f]        # 0x4235d0
  4043b1:	lea    rcx,[rax+0x60]
  4043b5:	mov    r8,rsi
  4043b8:	mov    rdx,rbx
  4043bb:	call   0x401a90
  4043c0:	mov    eax,0xffffffff
  4043c5:	add    rsp,0x28
  4043c9:	pop    rbx
  4043ca:	pop    rsi
  4043cb:	ret    
  4043cc:	nop    DWORD PTR [rax+0x0]
  4043d0:	push   r15
  4043d2:	push   r14
  4043d4:	push   r13
  4043d6:	push   r12
  4043d8:	push   rbp
  4043d9:	push   rdi
  4043da:	push   rsi
  4043db:	push   rbx
  4043dc:	sub    rsp,0x188
  4043e3:	movzx  eax,WORD PTR [rcx+0xaa]
  4043ea:	test   ax,0x7fff
  4043ee:	je     0x404648
  4043f4:	mov    r12,rdx
  4043f7:	lea    rdx,[rax+rax*2]
  4043fb:	mov    rbp,rcx
  4043fe:	mov    rcx,QWORD PTR [rcx+0x78]
  404402:	lea    rax,[rax+rdx*4]
  404406:	lea    rax,[rcx+rax*8]
  40440a:	mov    rbx,QWORD PTR [rax+0x18]
  40440e:	test   rbx,rbx
  404411:	je     0x40441c
  404413:	cmp    BYTE PTR [rbx],0x0
  404416:	jne    0x4044c0
  40441c:	mov    rax,QWORD PTR [rbp+0x58]
  404420:	test   rax,rax
  404423:	jne    0x404434
  404425:	jmp    0x404648
  40442a:	nop    WORD PTR [rax+rax*1+0x0]
  404430:	add    rax,0x8
  404434:	cmp    QWORD PTR [rax+0x8],0x0
  404439:	jne    0x404430
  40443b:	mov    rbx,QWORD PTR [rax]
  40443e:	xor    edi,edi
  404440:	cmp    BYTE PTR [rbx],0x24
  404443:	je     0x4044c4
  404445:	lea    r13,[rsp+0x30]
  40444a:	mov    rcx,rbx
  40444d:	mov    rsi,QWORD PTR [rip+0x1f3b4]        # 0x423808
  404454:	mov    rdx,r13
  404457:	call   rsi
  404459:	test   eax,eax
  40445b:	jne    0x404650
  404461:	movzx  eax,WORD PTR [rsp+0x36]
  404466:	and    ax,0xf000
  40446a:	cmp    ax,0x4000
  40446e:	je     0x4045a0
  404474:	cmp    ax,0x8000
  404478:	je     0x4046bd
  40447e:	mov    rbp,QWORD PTR [rbp+0x28]
  404482:	mov    rsi,QWORD PTR [rip+0x14617]        # 0x418aa0
  404489:	call   QWORD PTR [rip+0x1f141]        # 0x4235d0
  40448f:	lea    rcx,[rax+0x60]
  404493:	mov    r9,rbx
  404496:	mov    r8,rbp
  404499:	mov    rdx,rsi
  40449c:	call   0x401a90
  4044a1:	xor    eax,eax
  4044a3:	test   edi,edi
  4044a5:	jne    0x404640
  4044ab:	add    rsp,0x188
  4044b2:	pop    rbx
  4044b3:	pop    rsi
  4044b4:	pop    rdi
  4044b5:	pop    rbp
  4044b6:	pop    r12
  4044b8:	pop    r13
  4044ba:	pop    r14
  4044bc:	pop    r15
  4044be:	ret    
  4044bf:	nop
  4044c0:	xor    edi,edi
  4044c2:	jmp    0x404445
  4044c4:	lea    r13,[rbx+0x1]
  4044c8:	mov    edx,0x5c
  4044cd:	mov    rcx,r13
  4044d0:	call   0x4177e0
  4044d5:	test   rax,rax
  4044d8:	mov    r14,rax
  4044db:	je     0x404768
  4044e1:	sub    rax,r13
  4044e4:	cmp    rax,0x7f
  4044e8:	jg     0x404648
  4044ee:	lea    r8,[rsp+0x70]
  4044f3:	cmp    rax,0x8
  4044f7:	mov    rsi,r13
  4044fa:	mov    rdi,r8
  4044fd:	jb     0x404509
  4044ff:	mov    rcx,rax
  404502:	shr    rcx,0x3
  404506:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  404509:	xor    edx,edx
  40450b:	test   al,0x4
  40450d:	je     0x404518
  40450f:	mov    edx,DWORD PTR [rsi]
  404511:	mov    DWORD PTR [rdi],edx
  404513:	mov    edx,0x4
  404518:	test   al,0x2
  40451a:	je     0x404528
  40451c:	movzx  ecx,WORD PTR [rsi+rdx*1]
  404520:	mov    WORD PTR [rdi+rdx*1],cx
  404524:	add    rdx,0x2
  404528:	test   al,0x1
  40452a:	je     0x404533
  40452c:	movzx  ecx,BYTE PTR [rsi+rdx*1]
  404530:	mov    BYTE PTR [rdi+rdx*1],cl
  404533:	mov    rcx,r8
  404536:	mov    BYTE PTR [rsp+rax*1+0x70],0x0
  40453b:	call   0x417840
  404540:	test   rax,rax
  404543:	mov    rdi,rax
  404546:	je     0x40477c
  40454c:	mov    rcx,rax
  40454f:	call   0x4177b8
  404554:	mov    rcx,r14
  404557:	mov    rsi,rax
  40455a:	call   0x4177b8
  40455f:	lea    rcx,[rsi+rax*1+0x2]
  404564:	mov    r13,rax
  404567:	call   0x4038d0
  40456c:	mov    rbx,rax
  40456f:	mov    r8,rsi
  404572:	mov    rdx,rdi
  404575:	mov    rcx,rax
  404578:	add    rsi,rbx
  40457b:	mov    edi,0x1
  404580:	call   0x417820
  404585:	lea    rcx,[rsi+0x1]
  404589:	lea    r8,[r13+0x1]
  40458d:	mov    BYTE PTR [rsi],0x2f
  404590:	mov    rdx,r14
  404593:	call   0x417820
  404598:	jmp    0x404445
  40459d:	nop    DWORD PTR [rax]
  4045a0:	mov    rcx,rbx
  4045a3:	call   0x4177b8
  4045a8:	mov    rcx,QWORD PTR [rbp+0x38]
  4045ac:	mov    r14,rax
  4045af:	call   0x4177b8
  4045b4:	lea    r14,[r14+rax*1+0x2]
  4045b9:	mov    rcx,r14
  4045bc:	call   0x4038d0
  4045c1:	mov    r15,rax
  4045c4:	mov    rax,QWORD PTR [rbp+0x38]
  4045c8:	lea    r8,[rip+0x1528d]        # 0x41985c
  4045cf:	mov    r9,rbx
  4045d2:	mov    rdx,r14
  4045d5:	mov    rcx,r15
  4045d8:	mov    QWORD PTR [rsp+0x20],rax
  4045dd:	call   0x401e80
  4045e2:	cdqe   
  4045e4:	cmp    r14,rax
  4045e7:	jbe    0x40482d
  4045ed:	test   edi,edi
  4045ef:	jne    0x404736
  4045f5:	mov    rdx,r13
  4045f8:	mov    rcx,r15
  4045fb:	call   rsi
  4045fd:	test   eax,eax
  4045ff:	jne    0x404743
  404605:	movzx  eax,WORD PTR [rsp+0x36]
  40460a:	and    ax,0xf000
  40460e:	cmp    ax,0x8000
  404612:	je     0x404820
  404618:	mov    rbx,QWORD PTR [rip+0x14481]        # 0x418aa0
  40461f:	mov    rsi,QWORD PTR [rbp+0x28]
  404623:	call   QWORD PTR [rip+0x1efa7]        # 0x4235d0
  404629:	lea    rcx,[rax+0x60]
  40462d:	mov    r9,r15
  404630:	mov    rdx,rbx
  404633:	mov    r8,rsi
  404636:	mov    rbx,r15
  404639:	call   0x401a90
  40463e:	xchg   ax,ax
  404640:	mov    rcx,rbx
  404643:	call   0x417860
  404648:	xor    eax,eax
  40464a:	jmp    0x4044ab
  40464f:	nop
  404650:	mov    r15,QWORD PTR [rip+0x1efc1]        # 0x423618
  404657:	call   r15
  40465a:	cmp    DWORD PTR [rax],0x2
  40465d:	jne    0x4046d1
  40465f:	mov    edx,0x5c
  404664:	mov    rcx,rbx
  404667:	call   0x417798
  40466c:	test   rax,rax
  40466f:	je     0x4046b3
  404671:	sub    rax,rbx
  404674:	cmp    rax,0x103
  40467a:	mov    r14,rax
  40467d:	ja     0x4046d1
  40467f:	lea    r9,[rsp+0x70]
  404684:	mov    r8,rax
  404687:	mov    rdx,rbx
  40468a:	mov    rcx,r9
  40468d:	call   0x417820
  404692:	mov    BYTE PTR [rsp+r14*1+0x70],0x0
  404698:	mov    rdx,r13
  40469b:	mov    rcx,rax
  40469e:	call   rsi
  4046a0:	test   eax,eax
  4046a2:	jne    0x4046d1
  4046a4:	movzx  eax,WORD PTR [rsp+0x36]
  4046a9:	and    ax,0xf000
  4046ad:	cmp    ax,0x4000
  4046b1:	jne    0x4046d1
  4046b3:	mov    edx,0xffff8000
  4046b8:	mov    WORD PTR [rsp+0x36],dx
  4046bd:	mov    rcx,rbx
  4046c0:	call   0x417738
  4046c5:	mov    DWORD PTR [r12],edi
  4046c9:	mov    rax,rbx
  4046cc:	jmp    0x4044ab
  4046d1:	mov    r12,QWORD PTR [rbp+0x28]
  4046d5:	mov    rbp,QWORD PTR [rip+0x143c4]        # 0x418aa0
  4046dc:	mov    rsi,QWORD PTR [rip+0x1eeed]        # 0x4235d0
  4046e3:	call   rsi
  4046e5:	lea    rcx,[rax+0x60]
  4046e9:	mov    r8,r12
  4046ec:	mov    rdx,rbp
  4046ef:	call   0x401a90
  4046f4:	call   r15
  4046f7:	mov    ecx,DWORD PTR [rax]
  4046f9:	call   0x4177c8
  4046fe:	mov    r13,rax
  404701:	call   r15
  404704:	mov    rbp,QWORD PTR [rip+0x14315]        # 0x418a20
  40470b:	mov    r12d,DWORD PTR [rax]
  40470e:	call   rsi
  404710:	lea    rcx,[rax+0x60]
  404714:	mov    QWORD PTR [rsp+0x20],rbx
  404719:	mov    r9,r13
  40471c:	mov    r8d,r12d
  40471f:	mov    rdx,rbp
  404722:	call   0x401a90
  404727:	test   edi,edi
  404729:	jne    0x404640
  40472f:	xor    eax,eax
  404731:	jmp    0x4044ab
  404736:	mov    rcx,rbx
  404739:	call   0x417860
  40473e:	jmp    0x4045f5
  404743:	mov    rbx,QWORD PTR [rip+0x1eece]        # 0x423618
  40474a:	call   rbx
  40474c:	cmp    DWORD PTR [rax],0x2
  40474f:	jne    0x4047be
  404751:	mov    eax,0xffff8000
  404756:	mov    rbx,r15
  404759:	mov    edi,0x1
  40475e:	mov    WORD PTR [rsp+0x36],ax
  404763:	jmp    0x4046bd
  404768:	mov    rcx,r13
  40476b:	call   0x417840
  404770:	test   rax,rax
  404773:	mov    rbx,rax
  404776:	jne    0x404445
  40477c:	mov    rsi,QWORD PTR [rip+0x1431d]        # 0x418aa0
  404783:	mov    rdi,QWORD PTR [rbp+0x28]
  404787:	mov    rbx,QWORD PTR [rip+0x1ee42]        # 0x4235d0
  40478e:	call   rbx
  404790:	lea    rcx,[rax+0x60]
  404794:	mov    rdx,rsi
  404797:	mov    r8,rdi
  40479a:	call   0x401a90
  40479f:	mov    rsi,QWORD PTR [rip+0x1429a]        # 0x418a40
  4047a6:	call   rbx
  4047a8:	lea    rcx,[rax+0x60]
  4047ac:	mov    r8,r13
  4047af:	mov    rdx,rsi
  4047b2:	call   0x401a90
  4047b7:	xor    eax,eax
  4047b9:	jmp    0x4044ab
  4047be:	mov    rbp,QWORD PTR [rbp+0x28]
  4047c2:	mov    rdi,QWORD PTR [rip+0x142d7]        # 0x418aa0
  4047c9:	mov    rsi,QWORD PTR [rip+0x1ee00]        # 0x4235d0
  4047d0:	call   rsi
  4047d2:	lea    rcx,[rax+0x60]
  4047d6:	mov    r8,rbp
  4047d9:	mov    rdx,rdi
  4047dc:	call   0x401a90
  4047e1:	call   rbx
  4047e3:	mov    ecx,DWORD PTR [rax]
  4047e5:	call   0x4177c8
  4047ea:	mov    rbp,rax
  4047ed:	call   rbx
  4047ef:	mov    rbx,QWORD PTR [rip+0x1422a]        # 0x418a20
  4047f6:	mov    edi,DWORD PTR [rax]
  4047f8:	call   rsi
  4047fa:	lea    rcx,[rax+0x60]
  4047fe:	mov    r9,rbp
  404801:	mov    QWORD PTR [rsp+0x20],r15
  404806:	mov    r8d,edi
  404809:	mov    rdx,rbx
  40480c:	call   0x401a90
  404811:	mov    rcx,r15
  404814:	call   0x417860
  404819:	xor    eax,eax
  40481b:	jmp    0x4044ab
  404820:	mov    rbx,r15
  404823:	mov    edi,0x1
  404828:	jmp    0x4046bd
  40482d:	mov    ecx,0x1
  404832:	call   0x401ed0
  404837:	nop
  404838:	nop    DWORD PTR [rax+rax*1+0x0]
  404840:	push   r15
  404842:	push   r14
  404844:	push   r13
  404846:	push   r12
  404848:	push   rbp
  404849:	push   rdi
  40484a:	push   rsi
  40484b:	push   rbx
  40484c:	sub    rsp,0x148
  404853:	test   rcx,rcx
  404856:	mov    rsi,rcx
  404859:	mov    rbx,rdx
  40485c:	je     0x404909
  404862:	lea    r12,[rsp+0x30]
  404867:	xor    r13d,r13d
  40486a:	mov    rcx,rsi
  40486d:	call   0x4177b8
  404872:	mov    edx,r13d
  404875:	cmp    rdx,rax
  404878:	jae    0x404909
  40487e:	movsxd rax,r13d
  404881:	add    rax,rsi
  404884:	movzx  edx,BYTE PTR [rax]
  404887:	cmp    dl,0x3a
  40488a:	jne    0x40489c
  40488c:	nop    DWORD PTR [rax+0x0]
  404890:	add    rax,0x1
  404894:	movzx  edx,BYTE PTR [rax]
  404897:	cmp    dl,0x3a
  40489a:	je     0x404890
  40489c:	mov    rcx,r12
  40489f:	add    rax,0x1
  4048a3:	test   dl,dl
  4048a5:	mov    BYTE PTR [rcx],dl
  4048a7:	je     0x4048b1
  4048a9:	cmp    dl,0x3a
  4048ac:	jne    0x404911
  4048ae:	mov    BYTE PTR [rcx],0x0
  4048b1:	mov    r13d,eax
  4048b4:	sub    r13d,esi
  4048b7:	cmp    BYTE PTR [rsp+0x30],0x0
  4048bc:	je     0x404909
  4048be:	mov    rcx,r12
  4048c1:	call   0x4122e0
  4048c6:	test   rax,rax
  4048c9:	mov    rdi,rax
  4048cc:	jne    0x4048e0
  4048ce:	jmp    0x40486a
  4048d0:	lea    rcx,[rax+0x8]
  4048d4:	mov    rdx,rbx
  4048d7:	call   0x4177d8
  4048dc:	test   eax,eax
  4048de:	je     0x404930
  4048e0:	mov    rcx,rdi
  4048e3:	call   0x4124c0
  4048e8:	test   rax,rax
  4048eb:	jne    0x4048d0
  4048ed:	mov    rcx,rdi
  4048f0:	call   0x4126e0
  4048f5:	mov    rcx,rsi
  4048f8:	call   0x4177b8
  4048fd:	mov    edx,r13d
  404900:	cmp    rdx,rax
  404903:	jb     0x40487e
  404909:	xor    r14d,r14d
  40490c:	jmp    0x404b0e
  404911:	add    rcx,0x1
  404915:	mov    rdx,rcx
  404918:	sub    rdx,r12
  40491b:	cmp    edx,0x103
  404921:	ja     0x4048b1
  404923:	movzx  edx,BYTE PTR [rax]
  404926:	jmp    0x40489f
  40492b:	nop    DWORD PTR [rax+rax*1+0x0]
  404930:	cmp    BYTE PTR [rbx],0x2f
  404933:	je     0x404b4b
  404939:	cmp    BYTE PTR [rsp+0x30],0x0
  40493e:	jne    0x404b5b
  404944:	mov    rcx,rbx
  404947:	call   0x4177b8
  40494c:	lea    rcx,[rax+0x3]
  404950:	call   0x417828
  404955:	lea    rcx,[rax+0x2]
  404959:	mov    rbp,rax
  40495c:	mov    BYTE PTR [rax],0x2e
  40495f:	mov    BYTE PTR [rax+0x1],0x2f
  404963:	mov    BYTE PTR [rax+0x2],0x0
  404967:	mov    rdx,rbx
  40496a:	call   0x4177d0
  40496f:	mov    rcx,rbp
  404972:	mov    edx,0x5
  404977:	call   0x417700
  40497c:	test   eax,eax
  40497e:	mov    rcx,rbp
  404981:	js     0x404b31
  404987:	call   0x417728
  40498c:	cmp    BYTE PTR [rbp+0x0],0x2f
  404990:	mov    r14,rax
  404993:	sete   BYTE PTR [rsp+0x2f]
  404998:	movzx  eax,BYTE PTR [rsp+0x2f]
  40499d:	xor    r15d,r15d
  4049a0:	xor    r13d,r13d
  4049a3:	add    eax,0x2e
  4049a6:	mov    BYTE PTR [rsp+0x2f],al
  4049aa:	movzx  eax,BYTE PTR [r14]
  4049ae:	xchg   ax,ax
  4049b0:	test   al,al
  4049b2:	mov    rbx,r13
  4049b5:	je     0x404ae7
  4049bb:	cmp    al,0x2f
  4049bd:	je     0x404b25
  4049c3:	add    rbx,0x1
  4049c7:	mov    esi,r15d
  4049ca:	jmp    0x4049d7
  4049cc:	nop    DWORD PTR [rax+0x0]
  4049d0:	test   dl,dl
  4049d2:	je     0x4049e8
  4049d4:	mov    rbx,rcx
  4049d7:	movzx  edx,BYTE PTR [r14+rbx*1]
  4049dc:	add    esi,0x1
  4049df:	lea    rcx,[rbx+0x1]
  4049e3:	cmp    dl,0x2f
  4049e6:	jne    0x4049d0
  4049e8:	test   dl,dl
  4049ea:	lea    r15d,[rsi+0x1]
  4049ee:	je     0x404ae7
  4049f4:	movsxd r13,r15d
  4049f7:	lea    r12,[r14+r13*1]
  4049fb:	movzx  eax,BYTE PTR [r12]
  404a00:	cmp    al,0x2f
  404a02:	jne    0x404a36
  404a04:	lea    r8,[r14+r13*1+0x1]
  404a09:	mov    r9d,r15d
  404a0c:	nop    DWORD PTR [rax+0x0]
  404a10:	mov    rdx,r8
  404a13:	add    r8,0x1
  404a17:	add    r9d,0x1
  404a1b:	cmp    BYTE PTR [r8-0x1],0x2f
  404a20:	je     0x404a10
  404a22:	cmp    r15d,r9d
  404a25:	je     0x404a36
  404a27:	lea    rcx,[r14+rbx*1+0x1]
  404a2c:	call   0x4177d0
  404a31:	movzx  eax,BYTE PTR [r12]
  404a36:	test   esi,esi
  404a38:	je     0x404a4e
  404a3a:	cmp    BYTE PTR [r14+rbx*1-0x1],0x5c
  404a40:	je     0x4049b0
  404a46:	test   al,al
  404a48:	je     0x404bd9
  404a4e:	cmp    al,0x2e
  404a50:	jne    0x4049b0
  404a56:	lea    rdx,[r14+r13*1+0x1]
  404a5b:	movzx  ecx,BYTE PTR [rdx]
  404a5e:	test   cl,cl
  404a60:	je     0x404bd9
  404a66:	cmp    cl,0x2f
  404a69:	je     0x404b43
  404a6f:	cmp    cl,0x2e
  404a72:	jne    0x4049b0
  404a78:	lea    rdx,[r14+r13*1+0x2]
  404a7d:	movzx  ecx,BYTE PTR [rdx]
  404a80:	test   cl,cl
  404a82:	je     0x404a8d
  404a84:	cmp    cl,0x2f
  404a87:	jne    0x4049b0
  404a8d:	movsxd rcx,esi
  404a90:	sub    rcx,0x1
  404a94:	jmp    0x404aaf
  404a96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404aa0:	lea    rax,[rcx-0x1]
  404aa4:	cmp    BYTE PTR [r14+rax*1+0x1],0x2f
  404aaa:	je     0x404abe
  404aac:	mov    rcx,rax
  404aaf:	sub    esi,0x1
  404ab2:	cmp    esi,0xffffffff
  404ab5:	jne    0x404aa0
  404ab7:	mov    rcx,0xffffffffffffffff
  404abe:	lea    rcx,[r14+rcx*1+0x1]
  404ac3:	call   0x4177d0
  404ac8:	mov    r15d,0x0
  404ace:	test   esi,esi
  404ad0:	cmovns r15d,esi
  404ad4:	movsxd r13,r15d
  404ad7:	movzx  eax,BYTE PTR [r14+r13*1]
  404adc:	mov    rbx,r13
  404adf:	test   al,al
  404ae1:	jne    0x4049bb
  404ae7:	cmp    BYTE PTR [r14],0x0
  404aeb:	jne    0x404bee
  404af1:	movzx  eax,BYTE PTR [rsp+0x2f]
  404af6:	mov    rcx,rbp
  404af9:	mov    BYTE PTR [r14+0x1],0x0
  404afe:	mov    BYTE PTR [r14],al
  404b01:	call   0x417860
  404b06:	mov    rcx,rdi
  404b09:	call   0x4126e0
  404b0e:	mov    rax,r14
  404b11:	add    rsp,0x148
  404b18:	pop    rbx
  404b19:	pop    rsi
  404b1a:	pop    rdi
  404b1b:	pop    rbp
  404b1c:	pop    r12
  404b1e:	pop    r13
  404b20:	pop    r14
  404b22:	pop    r15
  404b24:	ret    
  404b25:	mov    esi,r15d
  404b28:	add    r15d,0x1
  404b2c:	jmp    0x4049f4
  404b31:	call   0x417860
  404b36:	mov    rcx,rdi
  404b39:	call   0x4126e0
  404b3e:	jmp    0x4048f5
  404b43:	mov    rcx,r12
  404b46:	jmp    0x404ac3
  404b4b:	mov    rcx,rbx
  404b4e:	call   0x417728
  404b53:	mov    rbp,rax
  404b56:	jmp    0x40496f
  404b5b:	mov    r14,r12
  404b5e:	mov    edx,DWORD PTR [r14]
  404b61:	add    r14,0x4
  404b65:	lea    eax,[rdx-0x1010101]
  404b6b:	not    edx
  404b6d:	and    eax,edx
  404b6f:	and    eax,0x80808080
  404b74:	je     0x404b5e
  404b76:	mov    edx,eax
  404b78:	mov    rcx,rbx
  404b7b:	shr    edx,0x10
  404b7e:	test   eax,0x8080
  404b83:	cmove  eax,edx
  404b86:	lea    rdx,[r14+0x2]
  404b8a:	cmove  r14,rdx
  404b8e:	add    al,al
  404b90:	sbb    r14,0x3
  404b94:	sub    r14,r12
  404b97:	call   0x4177b8
  404b9c:	lea    rcx,[r14+rax*1+0x2]
  404ba1:	call   0x417828
  404ba6:	lea    r8,[r14+0x1]
  404baa:	mov    rcx,rax
  404bad:	mov    rdx,r12
  404bb0:	mov    rbp,rax
  404bb3:	call   0x417820
  404bb8:	movsxd rcx,r14d
  404bbb:	cmp    BYTE PTR [rbp+rcx*1-0x1],0x2f
  404bc0:	je     0x404c03
  404bc2:	mov    BYTE PTR [rbp+rcx*1+0x0],0x2f
  404bc7:	lea    ecx,[r14+0x1]
  404bcb:	movsxd rcx,ecx
  404bce:	add    rcx,rbp
  404bd1:	mov    BYTE PTR [rcx],0x0
  404bd4:	jmp    0x404967
  404bd9:	lea    eax,[r15-0x1]
  404bdd:	cdqe   
  404bdf:	mov    BYTE PTR [r14+rax*1],0x0
  404be4:	cmp    BYTE PTR [r14],0x0
  404be8:	je     0x404af1
  404bee:	mov    rcx,rbp
  404bf1:	call   0x417860
  404bf6:	mov    rcx,rdi
  404bf9:	call   0x4126e0
  404bfe:	jmp    0x404b0e
  404c03:	add    rcx,rbp
  404c06:	jmp    0x404967
  404c0b:	nop    DWORD PTR [rax+rax*1+0x0]
  404c10:	push   r12
  404c12:	push   rbp
  404c13:	push   rdi
  404c14:	push   rsi
  404c15:	push   rbx
  404c16:	sub    rsp,0x30
  404c1a:	test   rcx,rcx
  404c1d:	mov    rbx,rcx
  404c20:	mov    rdi,rdx
  404c23:	je     0x404da8
  404c29:	mov    r9d,DWORD PTR [rcx+0x10]
  404c2d:	mov    eax,r9d
  404c30:	shr    eax,0x15
  404c33:	and    eax,0x1
  404c36:	test   r9d,0x2000
  404c3d:	mov    BYTE PTR [rip+0x1c431],al        # 0x421074
  404c43:	je     0x404c72
  404c45:	mov    rax,QWORD PTR [rcx+0xa0]
  404c4c:	test   rax,rax
  404c4f:	je     0x404c72
  404c51:	mov    edx,DWORD PTR [rip+0x13c69]        # 0x4188c0
  404c57:	test   edx,edx
  404c59:	je     0x404c72
  404c5b:	mov    edx,r9d
  404c5e:	and    edx,0x30000
  404c64:	cmp    edx,0x20000
  404c6a:	je     0x404d01
  404c70:	call   rax
  404c72:	mov    esi,DWORD PTR [rbx]
  404c74:	lea    eax,[rsi-0x19000]
  404c7a:	cmp    eax,0x10001
  404c7f:	ja     0x404d19
  404c85:	cmp    QWORD PTR [rbx+0x28],0x0
  404c8a:	je     0x404ca0
  404c8c:	xor    eax,eax
  404c8e:	add    rsp,0x30
  404c92:	pop    rbx
  404c93:	pop    rsi
  404c94:	pop    rdi
  404c95:	pop    rbp
  404c96:	pop    r12
  404c98:	ret    
  404c99:	nop    DWORD PTR [rax+0x0]
  404ca0:	mov    edx,0x5c
  404ca5:	mov    rcx,rdi
  404ca8:	call   0x417798
  404cad:	test   rax,rax
  404cb0:	je     0x404d13
  404cb2:	add    rax,0x1
  404cb6:	mov    QWORD PTR [rbx+0x28],rax
  404cba:	lea    rcx,[rip+0x14ba1]        # 0x419862
  404cc1:	call   0x417840
  404cc6:	mov    rdx,rdi
  404cc9:	mov    rcx,rax
  404ccc:	call   0x404840
  404cd1:	test   rax,rax
  404cd4:	lea    rdx,[rip+0x15f25]        # 0x41ac00
  404cdb:	lea    rcx,[rip+0x1379e]        # 0x418480
  404ce2:	cmove  rax,rdi
  404ce6:	mov    QWORD PTR [rbx+0x20],rax
  404cea:	mov    eax,0x2d
  404cef:	nop
  404cf0:	add    rdx,0x1
  404cf4:	mov    BYTE PTR [rcx+rax*1],0x2d
  404cf8:	movzx  eax,BYTE PTR [rdx]
  404cfb:	test   al,al
  404cfd:	jne    0x404cf0
  404cff:	jmp    0x404c8c
  404d01:	or     r9d,0x10000
  404d08:	mov    DWORD PTR [rcx+0x10],r9d
  404d0c:	call   rax
  404d0e:	jmp    0x404c72
  404d13:	mov    QWORD PTR [rbx+0x28],rdi
  404d17:	jmp    0x404cba
  404d19:	mov    r12,QWORD PTR [rip+0x13be0]        # 0x418900
  404d20:	mov    rbp,QWORD PTR [rip+0x1e8a9]        # 0x4235d0
  404d27:	call   rbp
  404d29:	lea    rcx,[rax+0x60]
  404d2d:	mov    eax,esi
  404d2f:	mov    r8,rdi
  404d32:	and    eax,0x7f
  404d35:	mov    rdx,r12
  404d38:	mov    DWORD PTR [rsp+0x28],eax
  404d3c:	mov    eax,esi
  404d3e:	sar    esi,0xc
  404d41:	sar    eax,0x7
  404d44:	mov    r9d,esi
  404d47:	and    eax,0x1f
  404d4a:	mov    DWORD PTR [rsp+0x20],eax
  404d4e:	call   0x401a90
  404d53:	cmp    DWORD PTR [rbx],0x29001
  404d59:	jle    0x404d94
  404d5b:	call   rbp
  404d5d:	mov    rcx,QWORD PTR [rip+0x13b94]        # 0x4188f8
  404d64:	lea    rdx,[rax+0x60]
  404d68:	call   0x417870
  404d6d:	call   rbp
  404d6f:	lea    rcx,[rip+0x18987]        # 0x41d6fd
  404d76:	lea    r9,[rax+0x60]
  404d7a:	mov    r8d,0x1
  404d80:	mov    edx,0x8
  404d85:	call   0x417848
  404d8a:	mov    eax,0xffffffff
  404d8f:	jmp    0x404c8e
  404d94:	call   rbp
  404d96:	mov    rcx,QWORD PTR [rip+0x13b73]        # 0x418910
  404d9d:	lea    rdx,[rax+0x60]
  404da1:	call   0x417870
  404da6:	jmp    0x404d6d
  404da8:	call   QWORD PTR [rip+0x1e822]        # 0x4235d0
  404dae:	mov    rcx,QWORD PTR [rip+0x13b3b]        # 0x4188f0
  404db5:	lea    rdx,[rax+0x60]
  404db9:	call   0x417870
  404dbe:	mov    eax,0xffffffff
  404dc3:	jmp    0x404c8e
  404dc8:	nop    DWORD PTR [rax+rax*1+0x0]
  404dd0:	push   r15
  404dd2:	push   r14
  404dd4:	push   r13
  404dd6:	push   r12
  404dd8:	push   rbp
  404dd9:	push   rdi
  404dda:	push   rsi
  404ddb:	push   rbx
  404ddc:	sub    rsp,0x98
  404de3:	test   BYTE PTR [rcx+0x12],0x4
  404de7:	mov    rbx,rcx
  404dea:	mov    rdi,rdx
  404ded:	mov    rbp,r8
  404df0:	je     0x404dfd
  404df2:	cmp    WORD PTR [rdx+0x6],0x57
  404df7:	je     0x40520e
  404dfd:	cmp    QWORD PTR [rdi+0x28],0x0
  404e02:	je     0x4050f0
  404e08:	mov    eax,DWORD PTR [rip+0x1c262]        # 0x421070
  404e0e:	lea    rsi,[rip+0x15deb]        # 0x41ac00
  404e15:	mov    rdx,QWORD PTR [rip+0x1c22c]        # 0x421048
  404e1c:	lea    rcx,[rsi+rax*1+0xcb]
  404e24:	call   0x417870
  404e29:	mov    rbp,QWORD PTR [rdi+0x28]
  404e2d:	test   rbp,rbp
  404e30:	je     0x404ec2
  404e36:	cmp    DWORD PTR [rbp+0x4],0x8000
  404e3d:	je     0x405100
  404e43:	mov    rdx,QWORD PTR [rip+0x1c1fe]        # 0x421048
  404e4a:	mov    rcx,QWORD PTR [rip+0x13d97]        # 0x418be8
  404e51:	call   0x417870
  404e56:	movsxd rax,DWORD PTR [rbp+0x0]
  404e5a:	nop    WORD PTR [rax+rax*1+0x0]
  404e60:	lea    rdx,[rax+rax*2]
  404e64:	mov    r9,QWORD PTR [rbx+0x78]
  404e68:	mov    rcx,QWORD PTR [rip+0x1c1d9]        # 0x421048
  404e6f:	add    rbp,0x4
  404e73:	lea    rax,[rax+rdx*4]
  404e77:	mov    edx,DWORD PTR [rip+0x1c1f3]        # 0x421070
  404e7d:	lea    rax,[r9+rax*8]
  404e81:	mov    r8,QWORD PTR [rax+0x50]
  404e85:	lea    rdx,[rsi+rdx*1+0xe5]
  404e8d:	call   0x401a90
  404e92:	movsxd rax,DWORD PTR [rbp+0x0]
  404e96:	cmp    eax,0x8000
  404e9b:	jne    0x404e60
  404e9d:	cmp    QWORD PTR [rdi+0x30],0x0
  404ea2:	je     0x404f2d
  404ea8:	mov    eax,DWORD PTR [rip+0x1c1c2]        # 0x421070
  404eae:	mov    rdx,QWORD PTR [rip+0x1c193]        # 0x421048
  404eb5:	lea    rcx,[rsi+rax*1+0xd9]
  404ebd:	call   0x417870
  404ec2:	mov    rbp,QWORD PTR [rdi+0x30]
  404ec6:	test   rbp,rbp
  404ec9:	je     0x404f2d
  404ecb:	cmp    DWORD PTR [rbp+0x4],0x8000
  404ed2:	je     0x405192
  404ed8:	mov    rdx,QWORD PTR [rip+0x1c169]        # 0x421048
  404edf:	mov    rcx,QWORD PTR [rip+0x13ca2]        # 0x418b88
  404ee6:	call   0x417870
  404eeb:	movsxd rax,DWORD PTR [rbp+0x0]
  404eef:	nop
  404ef0:	lea    rdx,[rax+rax*2]
  404ef4:	mov    rcx,QWORD PTR [rbx+0x78]
  404ef8:	add    rbp,0x4
  404efc:	lea    rax,[rax+rdx*4]
  404f00:	mov    edx,DWORD PTR [rip+0x1c16a]        # 0x421070
  404f06:	lea    rax,[rcx+rax*8]
  404f0a:	mov    rcx,QWORD PTR [rip+0x1c137]        # 0x421048
  404f11:	mov    r8,QWORD PTR [rax+0x50]
  404f15:	lea    rdx,[rsi+rdx*1+0xe5]
  404f1d:	call   0x401a90
  404f22:	movsxd rax,DWORD PTR [rbp+0x0]
  404f26:	cmp    eax,0x8000
  404f2b:	jne    0x404ef0
  404f2d:	mov    r8,QWORD PTR [rdi+0x58]
  404f31:	test   r8,r8
  404f34:	je     0x404f4f
  404f36:	mov    edx,DWORD PTR [rip+0x1c134]        # 0x421070
  404f3c:	mov    rcx,QWORD PTR [rip+0x1c105]        # 0x421048
  404f43:	add    rdx,QWORD PTR [rip+0x13b76]        # 0x418ac0
  404f4a:	call   0x401a90
  404f4f:	mov    edx,DWORD PTR [rdi+0x10]
  404f52:	mov    eax,edx
  404f54:	and    eax,0xf000
  404f59:	shr    eax,0xc
  404f5c:	cmp    eax,0x5
  404f5f:	je     0x4050c0
  404f65:	cmp    eax,0x7
  404f68:	je     0x405040
  404f6e:	and    dh,0x8
  404f71:	jne    0x405057
  404f77:	movzx  eax,WORD PTR [rdi+0x8]
  404f7b:	cmp    ax,0x8000
  404f7f:	je     0x404f8b
  404f81:	cmp    ax,WORD PTR [rdi+0x4]
  404f85:	jne    0x405075
  404f8b:	mov    eax,DWORD PTR [rdi+0x10]
  404f8e:	test   ah,0x1
  404f91:	je     0x404fad
  404f93:	cmp    QWORD PTR [rbx+0x58],0x0
  404f98:	je     0x4051fe
  404f9e:	movzx  edx,WORD PTR [rdi]
  404fa1:	cmp    edx,DWORD PTR [rbx+0xb4]
  404fa7:	jl     0x405171
  404fad:	and    eax,0xf000
  404fb2:	cmp    eax,0x4000
  404fb7:	je     0x4051e0
  404fbd:	movzx  r8d,WORD PTR [rdi+0xa]
  404fc2:	cmp    r8w,0x1
  404fc7:	ja     0x405130
  404fcd:	movzx  r8d,WORD PTR [rdi+0xc]
  404fd2:	cmp    r8w,0x1
  404fd7:	je     0x405003
  404fd9:	jb     0x4051c2
  404fdf:	cmp    r8w,0xffff
  404fe4:	jne    0x405153
  404fea:	mov    ecx,DWORD PTR [rip+0x1c080]        # 0x421070
  404ff0:	mov    rdx,QWORD PTR [rip+0x1c051]        # 0x421048
  404ff7:	add    rcx,QWORD PTR [rip+0x13b32]        # 0x418b30
  404ffe:	call   0x417870
  405003:	test   BYTE PTR [rbx+0x10],0x3
  405007:	jne    0x4050a3
  40500d:	movzx  eax,WORD PTR [rdi]
  405010:	cmp    WORD PTR [rbx+0xae],ax
  405017:	jne    0x4050a3
  40501d:	mov    ecx,DWORD PTR [rip+0x1c04d]        # 0x421070
  405023:	mov    rdx,QWORD PTR [rip+0x1c01e]        # 0x421048
  40502a:	add    rcx,QWORD PTR [rip+0x13a87]        # 0x418ab8
  405031:	call   0x417870
  405036:	jmp    0x4050a3
  405038:	nop    DWORD PTR [rax+rax*1+0x0]
  405040:	mov    rdx,rdi
  405043:	mov    ecx,0x1
  405048:	call   QWORD PTR [rdi+0x38]
  40504b:	mov    edx,DWORD PTR [rdi+0x10]
  40504e:	and    dh,0x8
  405051:	je     0x404f77
  405057:	mov    ecx,DWORD PTR [rip+0x1c013]        # 0x421070
  40505d:	mov    rdx,QWORD PTR [rip+0x1bfe4]        # 0x421048
  405064:	add    rcx,QWORD PTR [rip+0x13a6d]        # 0x418ad8
  40506b:	call   0x417870
  405070:	jmp    0x404f77
  405075:	lea    rdx,[rax+rax*2]
  405079:	mov    rcx,QWORD PTR [rip+0x1bfc8]        # 0x421048
  405080:	lea    rax,[rax+rdx*4]
  405084:	mov    rdx,QWORD PTR [rbx+0x78]
  405088:	lea    rax,[rdx+rax*8]
  40508c:	mov    edx,DWORD PTR [rip+0x1bfde]        # 0x421070
  405092:	add    rdx,QWORD PTR [rip+0x13a0f]        # 0x418aa8
  405099:	mov    r8,QWORD PTR [rax+0x50]
  40509d:	call   0x401a90
  4050a2:	nop
  4050a3:	add    rsp,0x98
  4050aa:	pop    rbx
  4050ab:	pop    rsi
  4050ac:	pop    rdi
  4050ad:	pop    rbp
  4050ae:	pop    r12
  4050b0:	pop    r13
  4050b2:	pop    r14
  4050b4:	pop    r15
  4050b6:	ret    
  4050b7:	nop    WORD PTR [rax+rax*1+0x0]
  4050c0:	mov    rax,QWORD PTR [rdi+0x38]
  4050c4:	test   rax,rax
  4050c7:	je     0x404f6e
  4050cd:	lea    rcx,[rip+0xffffffffffffc9ec]        # 0x401ac0
  4050d4:	cmp    rax,rcx
  4050d7:	je     0x404f6e
  4050dd:	mov    rdx,rdi
  4050e0:	mov    ecx,0x1
  4050e5:	call   rax
  4050e7:	mov    edx,DWORD PTR [rdi+0x10]
  4050ea:	jmp    0x404f6e
  4050ef:	nop
  4050f0:	cmp    QWORD PTR [rdi+0x30],0x0
  4050f5:	jne    0x404e08
  4050fb:	jmp    0x404f2d
  405100:	movsxd rax,DWORD PTR [rbp+0x0]
  405104:	mov    r10,QWORD PTR [rbx+0x78]
  405108:	mov    rcx,QWORD PTR [rip+0x1bf39]        # 0x421048
  40510f:	lea    rdx,[rax+rax*2]
  405113:	lea    rax,[rax+rdx*4]
  405117:	mov    rdx,QWORD PTR [rip+0x13ac2]        # 0x418be0
  40511e:	lea    rax,[r10+rax*8]
  405122:	mov    r8,QWORD PTR [rax+0x50]
  405126:	call   0x401a90
  40512b:	jmp    0x404e9d
  405130:	mov    edx,DWORD PTR [rip+0x1bf3a]        # 0x421070
  405136:	movzx  r9d,WORD PTR [rdi+0xc]
  40513b:	add    rdx,QWORD PTR [rip+0x139de]        # 0x418b20
  405142:	mov    rcx,QWORD PTR [rip+0x1beff]        # 0x421048
  405149:	call   0x401a90
  40514e:	jmp    0x405003
  405153:	mov    edx,DWORD PTR [rip+0x1bf17]        # 0x421070
  405159:	mov    rcx,QWORD PTR [rip+0x1bee8]        # 0x421048
  405160:	add    rdx,QWORD PTR [rip+0x13aa1]        # 0x418c08
  405167:	call   0x401a90
  40516c:	jmp    0x405003
  405171:	mov    ecx,DWORD PTR [rip+0x1bef9]        # 0x421070
  405177:	mov    rdx,QWORD PTR [rip+0x1beca]        # 0x421048
  40517e:	add    rcx,QWORD PTR [rip+0x139b3]        # 0x418b38
  405185:	call   0x417870
  40518a:	mov    eax,DWORD PTR [rdi+0x10]
  40518d:	jmp    0x404fad
  405192:	movsxd rax,DWORD PTR [rbp+0x0]
  405196:	mov    r8,QWORD PTR [rbx+0x78]
  40519a:	mov    rcx,QWORD PTR [rip+0x1bea7]        # 0x421048
  4051a1:	lea    rdx,[rax+rax*2]
  4051a5:	lea    rax,[rax+rdx*4]
  4051a9:	mov    rdx,QWORD PTR [rip+0x139e0]        # 0x418b90
  4051b0:	lea    rax,[r8+rax*8]
  4051b4:	mov    r8,QWORD PTR [rax+0x50]
  4051b8:	call   0x401a90
  4051bd:	jmp    0x404f2d
  4051c2:	mov    ecx,DWORD PTR [rip+0x1bea8]        # 0x421070
  4051c8:	mov    rdx,QWORD PTR [rip+0x1be79]        # 0x421048
  4051cf:	add    rcx,QWORD PTR [rip+0x139a2]        # 0x418b78
  4051d6:	call   0x417870
  4051db:	jmp    0x405003
  4051e0:	mov    ecx,DWORD PTR [rip+0x1be8a]        # 0x421070
  4051e6:	mov    rdx,QWORD PTR [rip+0x1be5b]        # 0x421048
  4051ed:	add    rcx,QWORD PTR [rip+0x13924]        # 0x418b18
  4051f4:	call   0x417870
  4051f9:	jmp    0x405003
  4051fe:	cmp    QWORD PTR [rbx+0x30],0x0
  405203:	jne    0x404f9e
  405209:	jmp    0x404fad
  40520e:	mov    eax,DWORD PTR [rip+0x1be5c]        # 0x421070
  405214:	lea    rdx,[rip+0x159e5]        # 0x41ac00
  40521b:	mov    edi,DWORD PTR [rcx+0xb4]
  405221:	mov    rsi,QWORD PTR [rcx+0x78]
  405225:	mov    r8,QWORD PTR [rip+0x139f4]        # 0x418c20
  40522c:	xor    r12d,r12d
  40522f:	mov    rcx,QWORD PTR [rip+0x1be12]        # 0x421048
  405236:	lea    rdx,[rdx+rax*1+0xe5]
  40523e:	call   0x401a90
  405243:	test   DWORD PTR [rsi+0x10],0x6280000
  40524a:	jne    0x405272
  40524c:	movzx  eax,BYTE PTR [rsi+0x2]
  405250:	cmp    al,0x7f
  405252:	ja     0x405262
  405254:	lea    rdx,[rip+0x185a5]        # 0x41d800
  40525b:	test   BYTE PTR [rdx+rax*4+0x1],0x40
  405260:	jne    0x405272
  405262:	mov    rcx,QWORD PTR [rsi+0x50]
  405266:	call   0x4177b8
  40526b:	cmp    r12,rax
  40526e:	cmovb  r12,rax
  405272:	sub    edi,0x1
  405275:	add    rsi,0x68
  405279:	test   edi,edi
  40527b:	jg     0x405243
  40527d:	lea    r14,[rsp+0x30]
  405282:	lea    r9d,[r12+0x4]
  405287:	lea    r8,[rip+0x14b47]        # 0x419dd5
  40528e:	mov    edx,0xc
  405293:	mov    rcx,r14
  405296:	call   0x401e80
  40529b:	mov    eax,DWORD PTR [rip+0x1bdcf]        # 0x421070
  4052a1:	test   eax,eax
  4052a3:	je     0x4052ae
  4052a5:	sub    eax,0x1
  4052a8:	mov    DWORD PTR [rip+0x1bdc2],eax        # 0x421070
  4052ae:	mov    r15d,DWORD PTR [rbx+0xb4]
  4052b5:	mov    rsi,QWORD PTR [rbx+0x78]
  4052b9:	lea    r12,[rbx+0x10]
  4052bd:	lea    r13,[rsp+0x40]
  4052c2:	test   DWORD PTR [rsi+0x10],0x6280000
  4052c9:	jne    0x4053a0
  4052cf:	movzx  eax,BYTE PTR [rsi+0x2]
  4052d3:	cmp    al,0x7f
  4052d5:	ja     0x4052e9
  4052d7:	lea    rdx,[rip+0x18522]        # 0x41d800
  4052de:	test   BYTE PTR [rdx+rax*4+0x1],0x40
  4052e3:	jne    0x4053a0
  4052e9:	lea    rdx,[rsi+0x2]
  4052ed:	lea    r9,[rip+0x1be6c]        # 0x421160
  4052f4:	lea    r8,[rip+0x1be5d]        # 0x421158
  4052fb:	mov    rcx,r12
  4052fe:	call   0x403300
  405303:	mov    eax,DWORD PTR [rsi+0x10]
  405306:	test   eax,0x10000
  40530b:	je     0x4053d2
  405311:	mov    rdi,QWORD PTR [rip+0x1be28]        # 0x421140
  405318:	mov    rax,QWORD PTR [rip+0x1bec1]        # 0x4211e0
  40531f:	test   rax,rax
  405322:	jne    0x405334
  405324:	jmp    0x40547d
  405329:	nop    DWORD PTR [rax+0x0]
  405330:	add    rdi,0x1
  405334:	movzx  ecx,BYTE PTR [rdi]
  405337:	cmp    BYTE PTR [rax+rcx*1],0x0
  40533b:	jne    0x405330
  40533d:	test   cl,cl
  40533f:	mov    r9,QWORD PTR [rsi+0x50]
  405343:	jne    0x40545f
  405349:	lea    r8,[rip+0x14517]        # 0x419867
  405350:	mov    edx,0x50
  405355:	mov    rcx,r13
  405358:	call   0x401e80
  40535d:	mov    r9,QWORD PTR [rsi+0x40]
  405361:	mov    rcx,QWORD PTR [rip+0x1bce0]        # 0x421048
  405368:	mov    r8,r13
  40536b:	mov    rdx,r14
  40536e:	call   0x401a90
  405373:	mov    eax,DWORD PTR [rsi+0x10]
  405376:	and    eax,0xf000
  40537b:	shr    eax,0xc
  40537e:	cmp    eax,0x2
  405381:	je     0x4053b6
  405383:	cmp    eax,0x4
  405386:	je     0x4053b6
  405388:	mov    r8,rbp
  40538b:	mov    rdx,rsi
  40538e:	mov    rcx,rbx
  405391:	call   0x404dd0
  405396:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4053a0:	sub    r15d,0x1
  4053a4:	add    rsi,0x68
  4053a8:	test   r15d,r15d
  4053ab:	jg     0x4052c2
  4053b1:	jmp    0x4050a3
  4053b6:	movzx  eax,BYTE PTR [rip+0x1bce3]        # 0x4210a0
  4053bd:	cmp    QWORD PTR [rsi+0x38],0x0
  4053c2:	mov    edx,0x1
  4053c7:	cmovne eax,edx
  4053ca:	mov    BYTE PTR [rip+0x1bcd0],al        # 0x4210a0
  4053d0:	jmp    0x405388
  4053d2:	and    eax,0xf000
  4053d7:	shr    eax,0xc
  4053da:	cmp    eax,0x8
  4053dd:	ja     0x40548c
  4053e3:	lea    rdi,[rip+0x14486]        # 0x419870
  4053ea:	movsxd rax,DWORD PTR [rdi+rax*4]
  4053ee:	add    rax,rdi
  4053f1:	jmp    rax
  4053f3:	mov    rdi,QWORD PTR [rip+0x1bd1e]        # 0x421118
  4053fa:	jmp    0x405318
  4053ff:	mov    rdi,QWORD PTR [rip+0x1bd32]        # 0x421138
  405406:	jmp    0x405318
  40540b:	mov    rdi,QWORD PTR [rip+0x1bcfe]        # 0x421110
  405412:	jmp    0x405318
  405417:	mov    rdi,QWORD PTR [rip+0x1bd0a]        # 0x421128
  40541e:	jmp    0x405318
  405423:	mov    rdi,QWORD PTR [rip+0x1bd06]        # 0x421130
  40542a:	jmp    0x405318
  40542f:	mov    rdi,QWORD PTR [rip+0x1bcea]        # 0x421120
  405436:	jmp    0x405318
  40543b:	mov    rdi,QWORD PTR [rip+0x1bcbe]        # 0x421100
  405442:	jmp    0x405318
  405447:	mov    rdi,QWORD PTR [rip+0x1bcfa]        # 0x421148
  40544e:	jmp    0x405318
  405453:	mov    rdi,QWORD PTR [rip+0x1bd16]        # 0x421170
  40545a:	jmp    0x405318
  40545f:	lea    r8,[rip+0x14404]        # 0x41986a
  405466:	mov    QWORD PTR [rsp+0x20],rdi
  40546b:	mov    edx,0x50
  405470:	mov    rcx,r13
  405473:	call   0x401e80
  405478:	jmp    0x40535d
  40547d:	mov    ecx,0xc
  405482:	call   0x4033e0
  405487:	jmp    0x405334
  40548c:	mov    rdi,QWORD PTR [rsi+0x50]
  405490:	mov    rsi,QWORD PTR [rbx+0x28]
  405494:	mov    rbx,QWORD PTR [rip+0x13535]        # 0x4189d0
  40549b:	call   QWORD PTR [rip+0x1e12f]        # 0x4235d0
  4054a1:	lea    rcx,[rax+0x60]
  4054a5:	mov    r9,rdi
  4054a8:	mov    r8,rsi
  4054ab:	mov    rdx,rbx
  4054ae:	call   0x401a90
  4054b3:	mov    rcx,QWORD PTR [rip+0x13486]        # 0x418940
  4054ba:	call   0x401f00
  4054bf:	nop
  4054c0:	push   r15
  4054c2:	push   r14
  4054c4:	push   r13
  4054c6:	push   r12
  4054c8:	push   rbp
  4054c9:	push   rdi
  4054ca:	push   rsi
  4054cb:	push   rbx
  4054cc:	sub    rsp,0x98
  4054d3:	mov    rax,QWORD PTR [rcx+0x78]
  4054d7:	mov    r13d,DWORD PTR [rcx+0xb0]
  4054de:	xor    r15d,r15d
  4054e1:	mov    rdi,rcx
  4054e4:	mov    ebp,edx
  4054e6:	mov    QWORD PTR [rsp+0xf0],r8
  4054ee:	xor    r14d,r14d
  4054f1:	lea    rbx,[rax+0x2]
  4054f5:	lea    rax,[rcx+0x10]
  4054f9:	mov    QWORD PTR [rsp+0x38],rax
  4054fe:	lea    rax,[rsp+0x40]
  405503:	mov    QWORD PTR [rsp+0x30],rax
  405508:	mov    eax,r15d
  40550b:	mov    r15d,r13d
  40550e:	mov    r13d,eax
  405511:	jmp    0x405533
  405513:	cmp    eax,0x80100
  405518:	je     0x4056e2
  40551e:	sub    r15d,0x1
  405522:	add    r13d,0x1
  405526:	add    rbx,0x68
  40552a:	test   r15d,r15d
  40552d:	jle    0x405760
  405533:	mov    eax,DWORD PTR [rbx+0xe]
  405536:	lea    rsi,[rbx-0x2]
  40553a:	test   eax,0x6080000
  40553f:	jne    0x405513
  405541:	test   eax,0x200000
  405546:	je     0x405571
  405548:	test   ebp,ebp
  40554a:	jne    0x40551e
  40554c:	mov    r9,QWORD PTR [rsp+0xf0]
  405554:	mov    r8,QWORD PTR [rbx+0x3e]
  405558:	add    r14d,0x1
  40555c:	mov    rdx,QWORD PTR [rip+0x1bbed]        # 0x421150
  405563:	mov    rcx,QWORD PTR [rip+0x1bade]        # 0x421048
  40556a:	call   0x401a90
  40556f:	jmp    0x40551e
  405571:	mov    eax,DWORD PTR [rdi+0x10]
  405574:	and    eax,0x40000
  405579:	je     0x405591
  40557b:	movzx  edx,BYTE PTR [rbx]
  40557e:	cmp    dl,0x7f
  405581:	ja     0x40551e
  405583:	lea    rcx,[rip+0x18276]        # 0x41d800
  40558a:	test   BYTE PTR [rcx+rdx*4+0x1],0x40
  40558f:	je     0x40551e
  405591:	test   ebp,ebp
  405593:	sete   r12b
  405597:	test   r14d,r14d
  40559a:	jle    0x4055e0
  40559c:	test   r12b,r12b
  40559f:	je     0x4055e0
  4055a1:	cmp    DWORD PTR [rdi+0xb4],r13d
  4055a8:	je     0x405790
  4055ae:	cmp    r15d,0x1
  4055b2:	jne    0x4055e0
  4055b4:	test   eax,eax
  4055b6:	je     0x4055e0
  4055b8:	mov    r9,QWORD PTR [rsp+0xf0]
  4055c0:	mov    r8,QWORD PTR [rip+0x13651]        # 0x418c18
  4055c7:	mov    rdx,QWORD PTR [rip+0x1bb82]        # 0x421150
  4055ce:	mov    rcx,QWORD PTR [rip+0x1ba73]        # 0x421048
  4055d5:	call   0x401a90
  4055da:	nop    WORD PTR [rax+rax*1+0x0]
  4055e0:	mov    rcx,QWORD PTR [rsp+0x38]
  4055e5:	lea    r9,[rip+0x1bb74]        # 0x421160
  4055ec:	lea    r8,[rip+0x1bb65]        # 0x421158
  4055f3:	mov    rdx,rbx
  4055f6:	call   0x403300
  4055fb:	mov    eax,DWORD PTR [rbx+0xe]
  4055fe:	mov    r9,QWORD PTR [rip+0x1bb3b]        # 0x421140
  405605:	test   eax,0x10000
  40560a:	jne    0x405634
  40560c:	and    eax,0xf000
  405611:	shr    eax,0xc
  405614:	cmp    eax,0x8
  405617:	ja     0x405877
  40561d:	lea    rdx,[rip+0x1427c]        # 0x4198a0
  405624:	movsxd rax,DWORD PTR [rdx+rax*4]
  405628:	add    rdx,rax
  40562b:	jmp    rdx
  40562d:	mov    r9,QWORD PTR [rip+0x1bb3c]        # 0x421170
  405634:	mov    r8,QWORD PTR [rip+0x1bb2d]        # 0x421168
  40563b:	lea    rax,[rip+0x15609]        # 0x41ac4b
  405642:	cmp    r8,rax
  405645:	je     0x405821
  40564b:	lea    rax,[rip+0x155fb]        # 0x41ac4d
  405652:	cmp    r8,rax
  405655:	je     0x405850
  40565b:	cmp    WORD PTR [rbx+0x8],0x0
  405660:	mov    rax,QWORD PTR [rip+0x1bad9]        # 0x421140
  405667:	mov    edx,0x50
  40566c:	cmovne rax,QWORD PTR [rip+0x1ba94]        # 0x421108
  405674:	mov    rcx,QWORD PTR [rsp+0x30]
  405679:	mov    QWORD PTR [rsp+0x28],rax
  40567e:	mov    rax,QWORD PTR [rbx+0x4e]
  405682:	mov    QWORD PTR [rsp+0x20],rax
  405687:	call   0x401e80
  40568c:	mov    r9,QWORD PTR [rbx+0x3e]
  405690:	mov    r8,QWORD PTR [rsp+0x30]
  405695:	lea    rdx,[rip+0x1ba24]        # 0x4210c0
  40569c:	mov    rcx,QWORD PTR [rip+0x1b9a5]        # 0x421048
  4056a3:	call   0x401a90
  4056a8:	mov    eax,DWORD PTR [rbx+0xe]
  4056ab:	and    eax,0xf000
  4056b0:	shr    eax,0xc
  4056b3:	cmp    eax,0x2
  4056b6:	je     0x405740
  4056bc:	cmp    eax,0x4
  4056bf:	je     0x405740
  4056c1:	test   r12b,r12b
  4056c4:	je     0x40551e
  4056ca:	mov    r8,QWORD PTR [rsp+0xf0]
  4056d2:	mov    rdx,rsi
  4056d5:	mov    rcx,rdi
  4056d8:	call   0x404dd0
  4056dd:	jmp    0x40551e
  4056e2:	cmp    QWORD PTR [rbx+0x4e],0x0
  4056e7:	je     0x40551e
  4056ed:	test   ebp,ebp
  4056ef:	jne    0x40551e
  4056f5:	mov    rsi,QWORD PTR [rbx+0x3e]
  4056f9:	mov    rcx,QWORD PTR [rsp+0x38]
  4056fe:	lea    r9,[rip+0x1ba5b]        # 0x421160
  405705:	lea    r8,[rip+0x1ba4c]        # 0x421158
  40570c:	mov    rdx,rbx
  40570f:	test   rsi,rsi
  405712:	cmove  rsi,QWORD PTR [rip+0x133b6]        # 0x418ad0
  40571a:	call   0x403300
  40571f:	mov    r8,QWORD PTR [rbx+0x4e]
  405723:	mov    rdx,QWORD PTR [rip+0x1339e]        # 0x418ac8
  40572a:	mov    rcx,QWORD PTR [rip+0x1b917]        # 0x421048
  405731:	mov    r9,rsi
  405734:	call   0x401a90
  405739:	jmp    0x40551e
  40573e:	xchg   ax,ax
  405740:	movzx  eax,BYTE PTR [rip+0x1b959]        # 0x4210a0
  405747:	cmp    QWORD PTR [rbx+0x36],0x0
  40574c:	mov    edx,0x1
  405751:	cmovne eax,edx
  405754:	mov    BYTE PTR [rip+0x1b946],al        # 0x4210a0
  40575a:	jmp    0x4056c1
  40575f:	nop
  405760:	mov    rdx,QWORD PTR [rip+0x1b8e1]        # 0x421048
  405767:	mov    ecx,0xa
  40576c:	call   0x417878
  405771:	nop
  405772:	add    rsp,0x98
  405779:	pop    rbx
  40577a:	pop    rsi
  40577b:	pop    rdi
  40577c:	pop    rbp
  40577d:	pop    r12
  40577f:	pop    r13
  405781:	pop    r14
  405783:	pop    r15
  405785:	ret    
  405786:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405790:	test   BYTE PTR [rbx-0x58],0x20
  405794:	jne    0x4055e0
  40579a:	mov    r9,QWORD PTR [rsp+0xf0]
  4057a2:	mov    r8,QWORD PTR [rip+0x13307]        # 0x418ab0
  4057a9:	mov    rdx,QWORD PTR [rip+0x1b9a0]        # 0x421150
  4057b0:	mov    rcx,QWORD PTR [rip+0x1b891]        # 0x421048
  4057b7:	call   0x401a90
  4057bc:	jmp    0x4055e0
  4057c1:	mov    r9,QWORD PTR [rip+0x1b950]        # 0x421118
  4057c8:	jmp    0x405634
  4057cd:	mov    r9,QWORD PTR [rip+0x1b974]        # 0x421148
  4057d4:	jmp    0x405634
  4057d9:	mov    r9,QWORD PTR [rip+0x1b920]        # 0x421100
  4057e0:	jmp    0x405634
  4057e5:	mov    r9,QWORD PTR [rip+0x1b934]        # 0x421120
  4057ec:	jmp    0x405634
  4057f1:	mov    r9,QWORD PTR [rip+0x1b938]        # 0x421130
  4057f8:	jmp    0x405634
  4057fd:	mov    r9,QWORD PTR [rip+0x1b924]        # 0x421128
  405804:	jmp    0x405634
  405809:	mov    r9,QWORD PTR [rip+0x1b900]        # 0x421110
  405810:	jmp    0x405634
  405815:	mov    r9,QWORD PTR [rip+0x1b91c]        # 0x421138
  40581c:	jmp    0x405634
  405821:	mov    rax,QWORD PTR [rbx+0x4e]
  405825:	mov    rcx,QWORD PTR [rsp+0x30]
  40582a:	lea    r8,[rip+0x14063]        # 0x419894
  405831:	mov    QWORD PTR [rsp+0x20],r9
  405836:	mov    edx,0x50
  40583b:	mov    r9,rax
  40583e:	call   0x401e80
  405843:	jmp    0x40568c
  405848:	nop    DWORD PTR [rax+rax*1+0x0]
  405850:	mov    rax,QWORD PTR [rbx+0x4e]
  405854:	mov    rcx,QWORD PTR [rsp+0x30]
  405859:	lea    r8,[rip+0x1403b]        # 0x41989b
  405860:	mov    QWORD PTR [rsp+0x20],r9
  405865:	mov    edx,0x50
  40586a:	mov    r9,rax
  40586d:	call   0x401e80
  405872:	jmp    0x40568c
  405877:	mov    rbp,QWORD PTR [rsi+0x50]
  40587b:	mov    rbx,QWORD PTR [rip+0x1314e]        # 0x4189d0
  405882:	mov    rsi,QWORD PTR [rdi+0x28]
  405886:	call   QWORD PTR [rip+0x1dd44]        # 0x4235d0
  40588c:	lea    rcx,[rax+0x60]
  405890:	mov    r9,rbp
  405893:	mov    rdx,rbx
  405896:	mov    r8,rsi
  405899:	call   0x401a90
  40589e:	mov    ecx,0x46
  4058a3:	call   0x401ed0
  4058a8:	nop
  4058a9:	nop    DWORD PTR [rax+0x0]
  4058b0:	push   r15
  4058b2:	push   r14
  4058b4:	push   r13
  4058b6:	push   r12
  4058b8:	push   rbp
  4058b9:	push   rdi
  4058ba:	push   rsi
  4058bb:	push   rbx
  4058bc:	sub    rsp,0x38
  4058c0:	lea    r13,[rip+0x150f9]        # 0x41a9c0
  4058c7:	lea    r12,[rip+0x13ff6]        # 0x4198c4
  4058ce:	mov    rbx,rcx
  4058d1:	mov    QWORD PTR [rsp+0x88],rdx
  4058d9:	mov    r14,r8
  4058dc:	mov    rax,QWORD PTR [rip+0x1b945]        # 0x421228
  4058e3:	test   rax,rax
  4058e6:	je     0x405c95
  4058ec:	movzx  edx,BYTE PTR [rbx]
  4058ef:	cmp    BYTE PTR [rax+rdx*1],0x0
  4058f3:	mov    rcx,rdx
  4058f6:	je     0x405998
  4058fc:	mov    rsi,rbx
  4058ff:	nop
  405900:	add    rsi,0x1
  405904:	movzx  edx,BYTE PTR [rsi]
  405907:	cmp    BYTE PTR [rax+rdx*1],0x0
  40590b:	mov    rdi,rdx
  40590e:	jne    0x405900
  405910:	mov    r10,rsi
  405913:	mov    rbp,rsi
  405916:	sub    r10,rbx
  405919:	lea    eax,[r10-0x4]
  40591d:	cmp    eax,0x4
  405920:	ja     0x405998
  405922:	lea    rdx,[rip+0x146d7]        # 0x41a000
  405929:	movzx  eax,cl
  40592c:	movzx  r9d,BYTE PTR [rdx+rax*1]
  405931:	add    r9d,r10d
  405934:	cmp    r9d,0x9
  405938:	ja     0x405998
  40593a:	movsxd r9,r9d
  40593d:	shl    r9,0x4
  405941:	lea    r15,[r13+r9*1+0x0]
  405946:	mov    r11,QWORD PTR [r15]
  405949:	cmp    cl,BYTE PTR [r11]
  40594c:	jne    0x405998
  40594e:	lea    rdx,[r11+0x1]
  405952:	lea    rcx,[rbx+0x1]
  405956:	lea    r8d,[r10-0x1]
  40595a:	mov    QWORD PTR [rsp+0x28],r11
  40595f:	mov    QWORD PTR [rsp+0x20],r10
  405964:	call   0x4177b0
  405969:	test   eax,eax
  40596b:	jne    0x405998
  40596d:	mov    r10,QWORD PTR [rsp+0x20]
  405972:	mov    r11,QWORD PTR [rsp+0x28]
  405977:	mov    r10d,r10d
  40597a:	cmp    BYTE PTR [r11+r10*1],0x0
  40597f:	jne    0x405998
  405981:	cmp    DWORD PTR [r15+0x8],0x6
  405986:	ja     0x405998
  405988:	mov    eax,DWORD PTR [r15+0x8]
  40598c:	movsxd rax,DWORD PTR [r12+rax*4]
  405990:	add    rax,r12
  405993:	jmp    rax
  405995:	mov    rbx,rsi
  405998:	mov    rax,QWORD PTR [rip+0x1b8e9]        # 0x421288
  40599f:	mov    DWORD PTR [r14],0x0
  4059a6:	test   rax,rax
  4059a9:	jne    0x4059ca
  4059ab:	mov    ecx,0x21
  4059b0:	call   0x4033e0
  4059b5:	jmp    0x4059ca
  4059b7:	nop    WORD PTR [rax+rax*1+0x0]
  4059c0:	cmp    BYTE PTR [rax+rdx*1],0x0
  4059c4:	jne    0x4059eb
  4059c6:	add    rbx,0x1
  4059ca:	movzx  edx,BYTE PTR [rbx]
  4059cd:	test   dl,dl
  4059cf:	jne    0x4059c0
  4059d1:	xor    eax,eax
  4059d3:	add    rsp,0x38
  4059d7:	pop    rbx
  4059d8:	pop    rsi
  4059d9:	pop    rdi
  4059da:	pop    rbp
  4059db:	pop    r12
  4059dd:	pop    r13
  4059df:	pop    r14
  4059e1:	pop    r15
  4059e3:	ret    
  4059e4:	mov    DWORD PTR [r14],0x0
  4059eb:	mov    rax,rbx
  4059ee:	jmp    0x4059d3
  4059f0:	cmp    dil,0x7f
  4059f4:	ja     0x405995
  4059f6:	lea    rax,[rip+0x17e03]        # 0x41d800
  4059fd:	test   DWORD PTR [rax+rdi*4],0x1000c01
  405a04:	je     0x405995
  405a06:	mov    rax,QWORD PTR [rsp+0x88]
  405a0e:	mov    rbx,rsi
  405a11:	mov    DWORD PTR [rax],0x2
  405a17:	mov    rax,QWORD PTR [rip+0x1b7c2]        # 0x4211e0
  405a1e:	test   rax,rax
  405a21:	jne    0x405a34
  405a23:	jmp    0x405ca4
  405a28:	nop    DWORD PTR [rax+rax*1+0x0]
  405a30:	add    rbx,0x1
  405a34:	movzx  ecx,BYTE PTR [rbx]
  405a37:	cmp    BYTE PTR [rax+rcx*1],0x0
  405a3b:	jne    0x405a30
  405a3d:	cmp    cl,0x2f
  405a40:	je     0x4059e4
  405a42:	cmp    cl,0x3e
  405a45:	je     0x4059eb
  405a47:	cmp    cl,0x7f
  405a4a:	ja     0x4059d1
  405a4c:	lea    rax,[rip+0x17dad]        # 0x41d800
  405a53:	test   BYTE PTR [rax+rcx*4+0x2],0x8
  405a58:	jne    0x4058dc
  405a5e:	jmp    0x4059d1
  405a63:	cmp    dil,0x3d
  405a67:	lea    rbp,[rsi+0x1]
  405a6b:	je     0x405b94
  405a71:	xor    edi,edi
  405a73:	mov    rax,QWORD PTR [rip+0x1b80e]        # 0x421288
  405a7a:	add    rbp,rdi
  405a7d:	mov    DWORD PTR [r14],0x0
  405a84:	test   rax,rax
  405a87:	je     0x405d19
  405a8d:	movzx  edx,BYTE PTR [rbp+0x0]
  405a91:	test   dl,dl
  405a93:	jne    0x405ab0
  405a95:	jmp    0x4059d1
  405a9a:	nop    WORD PTR [rax+rax*1+0x0]
  405aa0:	add    rbp,0x1
  405aa4:	movzx  edx,BYTE PTR [rbp+0x0]
  405aa8:	test   dl,dl
  405aaa:	je     0x4059d1
  405ab0:	cmp    BYTE PTR [rax+rdx*1],0x0
  405ab4:	je     0x405aa0
  405ab6:	mov    rbx,rbp
  405ab9:	jmp    0x405a17
  405abe:	xchg   ax,ax
  405ac0:	mov    rax,QWORD PTR [rip+0x1b7c1]        # 0x421288
  405ac7:	test   rax,rax
  405aca:	je     0x405d0a
  405ad0:	movzx  edx,BYTE PTR [rsi]
  405ad3:	test   dl,dl
  405ad5:	jne    0x405af0
  405ad7:	jmp    0x4059d1
  405adc:	nop    DWORD PTR [rax+0x0]
  405ae0:	add    rbp,0x1
  405ae4:	movzx  edx,BYTE PTR [rbp+0x0]
  405ae8:	test   dl,dl
  405aea:	je     0x4059d1
  405af0:	cmp    BYTE PTR [rax+rdx*1],0x0
  405af4:	je     0x405ae0
  405af6:	jmp    0x405ab6
  405af8:	mov    rax,QWORD PTR [rip+0x1b789]        # 0x421288
  405aff:	test   rax,rax
  405b02:	je     0x405cfb
  405b08:	movzx  edx,BYTE PTR [rsi]
  405b0b:	test   dl,dl
  405b0d:	jne    0x405b24
  405b0f:	jmp    0x4059d1
  405b14:	add    rbp,0x1
  405b18:	movzx  edx,BYTE PTR [rbp+0x0]
  405b1c:	test   dl,dl
  405b1e:	je     0x4059d1
  405b24:	cmp    BYTE PTR [rax+rdx*1],0x0
  405b28:	je     0x405b14
  405b2a:	jmp    0x405ab6
  405b2c:	cmp    dil,0x7f
  405b30:	ja     0x405995
  405b36:	lea    rax,[rip+0x17cc3]        # 0x41d800
  405b3d:	test   DWORD PTR [rax+rdi*4],0x1000c01
  405b44:	je     0x405995
  405b4a:	mov    rax,QWORD PTR [rsp+0x88]
  405b52:	mov    rbx,rsi
  405b55:	mov    DWORD PTR [rax],0x0
  405b5b:	jmp    0x405a17
  405b60:	cmp    dil,0x7f
  405b64:	ja     0x405995
  405b6a:	lea    rax,[rip+0x17c8f]        # 0x41d800
  405b71:	test   DWORD PTR [rax+rdi*4],0x1000c01
  405b78:	je     0x405995
  405b7e:	mov    rax,QWORD PTR [rsp+0x88]
  405b86:	mov    rbx,rsi
  405b89:	mov    DWORD PTR [rax],0x1
  405b8f:	jmp    0x405a17
  405b94:	mov    rax,QWORD PTR [rip+0x1b6bd]        # 0x421258
  405b9b:	test   rax,rax
  405b9e:	je     0x405d28
  405ba4:	movzx  edx,BYTE PTR [rsi+0x1]
  405ba8:	cmp    BYTE PTR [rax+rdx*1],0x0
  405bac:	mov    r8,rdx
  405baf:	je     0x405a71
  405bb5:	mov    rbx,rbp
  405bb8:	nop    DWORD PTR [rax+rax*1+0x0]
  405bc0:	add    rbx,0x1
  405bc4:	movzx  ecx,BYTE PTR [rbx]
  405bc7:	cmp    BYTE PTR [rax+rcx*1],0x0
  405bcb:	jne    0x405bc0
  405bcd:	mov    rdi,rbx
  405bd0:	sub    rdi,rbp
  405bd3:	je     0x405a71
  405bd9:	cmp    cl,0x7f
  405bdc:	ja     0x405a73
  405be2:	lea    rax,[rip+0x17c17]        # 0x41d800
  405be9:	test   DWORD PTR [rax+rcx*4],0x1000c01
  405bf0:	je     0x405a73
  405bf6:	lea    eax,[rdi-0x3]
  405bf9:	mov    r11d,edi
  405bfc:	cmp    eax,0xb
  405bff:	ja     0x405a73
  405c05:	lea    rdx,[rip+0x144f4]        # 0x41a100
  405c0c:	movzx  eax,r8b
  405c10:	movzx  eax,BYTE PTR [rdx+rax*1]
  405c14:	add    eax,edi
  405c16:	cmp    eax,0x11
  405c19:	ja     0x405a73
  405c1f:	movsxd r9,eax
  405c22:	lea    rax,[rip+0x14e97]        # 0x41aac0
  405c29:	shl    r9,0x4
  405c2d:	add    r9,rax
  405c30:	mov    r10,QWORD PTR [r9]
  405c33:	mov    QWORD PTR [rsp+0x28],r9
  405c38:	cmp    BYTE PTR [r10],r8b
  405c3b:	jne    0x405a73
  405c41:	lea    rdx,[r10+0x1]
  405c45:	lea    rcx,[rsi+0x2]
  405c49:	lea    r8d,[r11-0x1]
  405c4d:	mov    QWORD PTR [rsp+0x20],r10
  405c52:	call   0x4177b0
  405c57:	test   eax,eax
  405c59:	jne    0x405a73
  405c5f:	mov    r10,QWORD PTR [rsp+0x20]
  405c64:	mov    eax,edi
  405c66:	cmp    BYTE PTR [r10+rax*1],0x0
  405c6b:	jne    0x405a73
  405c71:	mov    r9,QWORD PTR [rsp+0x28]
  405c76:	cmp    DWORD PTR [r9+0x8],0x9
  405c7b:	ja     0x405a73
  405c81:	mov    edx,DWORD PTR [r9+0x8]
  405c85:	lea    rax,[rip+0x13c54]        # 0x4198e0
  405c8c:	movsxd rdx,DWORD PTR [rax+rdx*4]
  405c90:	add    rax,rdx
  405c93:	jmp    rax
  405c95:	mov    ecx,0x15
  405c9a:	call   0x4033e0
  405c9f:	jmp    0x4058ec
  405ca4:	mov    ecx,0xc
  405ca9:	call   0x4033e0
  405cae:	jmp    0x405a34
  405cb3:	mov    DWORD PTR [r14],0x6
  405cba:	jmp    0x405a17
  405cbf:	mov    DWORD PTR [r14],0x4
  405cc6:	jmp    0x405a17
  405ccb:	mov    DWORD PTR [r14],0x2
  405cd2:	jmp    0x405a17
  405cd7:	mov    DWORD PTR [r14],0x3
  405cde:	jmp    0x405a17
  405ce3:	mov    DWORD PTR [r14],0x5
  405cea:	jmp    0x405a17
  405cef:	mov    DWORD PTR [r14],0x1
  405cf6:	jmp    0x405a17
  405cfb:	mov    ecx,0x21
  405d00:	call   0x4033e0
  405d05:	jmp    0x405b08
  405d0a:	mov    ecx,0x21
  405d0f:	call   0x4033e0
  405d14:	jmp    0x405ad0
  405d19:	mov    ecx,0x21
  405d1e:	call   0x4033e0
  405d23:	jmp    0x405a8d
  405d28:	mov    ecx,0x1b
  405d2d:	call   0x4033e0
  405d32:	jmp    0x405ba4
  405d37:	nop    WORD PTR [rax+rax*1+0x0]
  405d40:	push   r15
  405d42:	push   r14
  405d44:	push   r13
  405d46:	push   r12
  405d48:	push   rbp
  405d49:	push   rdi
  405d4a:	push   rsi
  405d4b:	push   rbx
  405d4c:	sub    rsp,0x48
  405d50:	mov    rsi,QWORD PTR [rip+0x1d9c9]        # 0x423720
  405d57:	mov    rbx,rcx
  405d5a:	jmp    0x405d64
  405d5c:	nop    DWORD PTR [rax+0x0]
  405d60:	add    rbx,0x1
  405d64:	movzx  ebp,BYTE PTR [rbx]
  405d67:	mov    ecx,ebp
  405d69:	call   rsi
  405d6b:	test   eax,eax
  405d6d:	jne    0x405d60
  405d6f:	cmp    bpl,0x50
  405d73:	je     0x405f00
  405d79:	cmp    bpl,0x54
  405d7d:	je     0x405ea4
  405d83:	sub    ebp,0x30
  405d86:	cmp    ebp,0x9
  405d89:	ja     0x4063a3
  405d8f:	mov    rbp,QWORD PTR [rip+0x1d882]        # 0x423618
  405d96:	lea    r13,[rsp+0x30]
  405d9b:	mov    QWORD PTR [rsp+0x30],rbx
  405da0:	xor    edi,edi
  405da2:	xor    r12d,r12d
  405da5:	call   rbp
  405da7:	mov    rcx,QWORD PTR [rsp+0x30]
  405dac:	mov    r8d,0xa
  405db2:	mov    rdx,r13
  405db5:	mov    DWORD PTR [rax],0x0
  405dbb:	call   0x417788
  405dc0:	movsxd r14,eax
  405dc3:	call   rbp
  405dc5:	mov    ecx,DWORD PTR [rax]
  405dc7:	test   ecx,ecx
  405dc9:	jne    0x405e93
  405dcf:	mov    rbx,QWORD PTR [rsp+0x30]
  405dd4:	movzx  r15d,BYTE PTR [rbx]
  405dd8:	cmp    r15b,0x3a
  405ddc:	jne    0x405dec
  405dde:	jmp    0x40622b
  405de3:	mov    QWORD PTR [rsp+0x30],rbx
  405de8:	movzx  r15d,BYTE PTR [rbx]
  405dec:	add    rbx,0x1
  405df0:	movzx  ecx,r15b
  405df4:	call   rsi
  405df6:	test   eax,eax
  405df8:	jne    0x405de3
  405dfa:	cmp    r15b,0x59
  405dfe:	je     0x40608b
  405e04:	jle    0x405ec0
  405e0a:	cmp    r15b,0x6d
  405e0e:	je     0x4060bd
  405e14:	jg     0x406030
  405e1a:	cmp    r15b,0x64
  405e1e:	je     0x4060a2
  405e24:	cmp    r15b,0x68
  405e28:	jne    0x405e93
  405e2a:	cmp    r12d,0x4
  405e2e:	ja     0x405e93
  405e30:	mov    r8d,0xe10
  405e36:	mov    r12d,0x5
  405e3c:	nop    DWORD PTR [rax+0x0]
  405e40:	mov    rcx,rdi
  405e43:	mov    rdx,r14
  405e46:	call   0x402a50
  405e4b:	mov    rdi,rax
  405e4e:	mov    rax,QWORD PTR [rsp+0x30]
  405e53:	lea    rbx,[rax+0x1]
  405e57:	mov    QWORD PTR [rsp+0x30],rbx
  405e5c:	jmp    0x405e65
  405e5e:	xchg   ax,ax
  405e60:	mov    QWORD PTR [rsp+0x30],rbx
  405e65:	movzx  r14d,BYTE PTR [rbx]
  405e69:	add    rbx,0x1
  405e6d:	mov    ecx,r14d
  405e70:	call   rsi
  405e72:	test   eax,eax
  405e74:	jne    0x405e60
  405e76:	test   r14b,r14b
  405e79:	je     0x40639b
  405e7f:	sub    r14d,0x30
  405e83:	cmp    r14d,0x9
  405e87:	ja     0x405e93
  405e89:	cmp    r12d,0x7
  405e8d:	jne    0x405da5
  405e93:	call   rbp
  405e95:	mov    DWORD PTR [rax],0x16
  405e9b:	mov    rax,0xffffffffffffffff
  405ea2:	jmp    0x405ead
  405ea4:	lea    rcx,[rbx+0x1]
  405ea8:	call   0x402bb0
  405ead:	add    rsp,0x48
  405eb1:	pop    rbx
  405eb2:	pop    rsi
  405eb3:	pop    rdi
  405eb4:	pop    rbp
  405eb5:	pop    r12
  405eb7:	pop    r13
  405eb9:	pop    r14
  405ebb:	pop    r15
  405ebd:	ret    
  405ebe:	xchg   ax,ax
  405ec0:	cmp    r15b,0x44
  405ec4:	je     0x4060a2
  405eca:	jle    0x406062
  405ed0:	cmp    r15b,0x4d
  405ed4:	je     0x406047
  405eda:	cmp    r15b,0x57
  405ede:	jne    0x405e93
  405ee0:	cmp    r12d,0x2
  405ee4:	ja     0x405e93
  405ee6:	mov    r8d,0x93a80
  405eec:	mov    r12d,0x3
  405ef2:	jmp    0x405e40
  405ef7:	nop    WORD PTR [rax+rax*1+0x0]
  405f00:	lea    rcx,[rbx+0x1]
  405f04:	call   0x417728
  405f09:	test   rax,rax
  405f0c:	mov    r13,rax
  405f0f:	je     0x4063d6
  405f15:	mov    edx,0x54
  405f1a:	mov    rcx,rax
  405f1d:	call   0x4177e0
  405f22:	test   rax,rax
  405f25:	mov    r12,rax
  405f28:	je     0x406220
  405f2e:	lea    rdi,[rax+0x1]
  405f32:	mov    rcx,r13
  405f35:	mov    BYTE PTR [rax],0x0
  405f38:	call   0x401a30
  405f3d:	mov    rcx,rdi
  405f40:	mov    rbx,rax
  405f43:	call   0x401a30
  405f48:	test   rax,rax
  405f4b:	mov    r12,rax
  405f4e:	setne  r14b
  405f52:	mov    edx,0x2d
  405f57:	mov    rcx,rbx
  405f5a:	call   0x4177e0
  405f5f:	test   rax,rax
  405f62:	je     0x4060d8
  405f68:	lea    rsi,[rsp+0x20]
  405f6d:	mov    r8,rax
  405f70:	xor    ecx,ecx
  405f72:	mov    r9d,0x1e13380
  405f78:	mov    QWORD PTR [rsp+0x20],rbx
  405f7d:	mov    rdx,rsi
  405f80:	call   0x402ae0
  405f85:	mov    rbx,rax
  405f88:	mov    rax,QWORD PTR [rsp+0x20]
  405f8d:	mov    edx,0x2d
  405f92:	lea    rcx,[rax+0x1]
  405f96:	mov    QWORD PTR [rsp+0x20],rcx
  405f9b:	call   0x4177e0
  405fa0:	test   rax,rax
  405fa3:	mov    r8,rax
  405fa6:	je     0x4063bb
  405fac:	mov    r9d,0x278d00
  405fb2:	mov    rdx,rsi
  405fb5:	mov    rcx,rbx
  405fb8:	call   0x402ae0
  405fbd:	mov    rdi,rax
  405fc0:	mov    rax,QWORD PTR [rsp+0x20]
  405fc5:	lea    rbx,[rax+0x1]
  405fc9:	mov    rcx,rbx
  405fcc:	mov    QWORD PTR [rsp+0x20],rbx
  405fd1:	call   0x4177b8
  405fd6:	lea    r8,[rbx+rax*1]
  405fda:	mov    rcx,rdi
  405fdd:	mov    r9d,0x15180
  405fe3:	mov    rdx,rsi
  405fe6:	call   0x402ae0
  405feb:	mov    rbp,QWORD PTR [rip+0x1d626]        # 0x423618
  405ff2:	mov    rdi,rax
  405ff5:	call   rbp
  405ff7:	mov    r8d,DWORD PTR [rax]
  405ffa:	test   r8d,r8d
  405ffd:	jne    0x406020
  405fff:	test   r14b,r14b
  406002:	je     0x406020
  406004:	mov    rcx,r12
  406007:	call   0x402bb0
  40600c:	mov    rcx,rdi
  40600f:	mov    r8d,0x1
  406015:	mov    rdx,rax
  406018:	call   0x402a50
  40601d:	mov    rdi,rax
  406020:	mov    rcx,r13
  406023:	call   0x417860
  406028:	mov    rax,rdi
  40602b:	jmp    0x405ead
  406030:	cmp    r15b,0x73
  406034:	jne    0x406081
  406036:	mov    r8d,0x1
  40603c:	mov    r12d,0x7
  406042:	jmp    0x405e40
  406047:	cmp    r12d,0x1
  40604b:	ja     0x405e93
  406051:	mov    r8d,0x278d00
  406057:	mov    r12d,0x2
  40605d:	jmp    0x405e40
  406062:	test   r15b,r15b
  406065:	jne    0x405e93
  40606b:	mov    r8d,0x1
  406071:	mov    rdx,r14
  406074:	mov    rcx,rdi
  406077:	call   0x402a50
  40607c:	jmp    0x405ead
  406081:	cmp    r15b,0x79
  406085:	jne    0x405e93
  40608b:	test   r12d,r12d
  40608e:	jne    0x405e93
  406094:	mov    r8d,0x1e13380
  40609a:	mov    r12b,0x1
  40609d:	jmp    0x405e40
  4060a2:	cmp    r12d,0x3
  4060a6:	ja     0x405e93
  4060ac:	mov    r8d,0x15180
  4060b2:	mov    r12d,0x4
  4060b8:	jmp    0x405e40
  4060bd:	cmp    r12d,0x6
  4060c1:	je     0x405e93
  4060c7:	mov    r8d,0x3c
  4060cd:	mov    r12d,0x6
  4060d3:	jmp    0x405e40
  4060d8:	lea    rdx,[rip+0x13829]        # 0x419908
  4060df:	mov    rcx,rbx
  4060e2:	call   0x4177a0
  4060e7:	test   rax,rax
  4060ea:	je     0x4062f9
  4060f0:	mov    edx,0x59
  4060f5:	mov    rcx,rbx
  4060f8:	mov    QWORD PTR [rsp+0x28],rbx
  4060fd:	xor    edi,edi
  4060ff:	call   0x4177e0
  406104:	test   rax,rax
  406107:	je     0x40612f
  406109:	lea    rdx,[rsp+0x28]
  40610e:	mov    r9d,0x1e13380
  406114:	mov    r8,rax
  406117:	xor    ecx,ecx
  406119:	call   0x402ae0
  40611e:	mov    rdi,rax
  406121:	mov    rax,QWORD PTR [rsp+0x28]
  406126:	lea    rbx,[rax+0x1]
  40612a:	mov    QWORD PTR [rsp+0x28],rbx
  40612f:	mov    edx,0x4d
  406134:	mov    rcx,rbx
  406137:	call   0x4177e0
  40613c:	test   rax,rax
  40613f:	je     0x406168
  406141:	lea    rdx,[rsp+0x28]
  406146:	mov    rcx,rdi
  406149:	mov    r9d,0x278d00
  40614f:	mov    r8,rax
  406152:	call   0x402ae0
  406157:	mov    rdi,rax
  40615a:	mov    rax,QWORD PTR [rsp+0x28]
  40615f:	lea    rbx,[rax+0x1]
  406163:	mov    QWORD PTR [rsp+0x28],rbx
  406168:	mov    edx,0x57
  40616d:	mov    rcx,rbx
  406170:	call   0x4177e0
  406175:	test   rax,rax
  406178:	je     0x4061a1
  40617a:	lea    rdx,[rsp+0x28]
  40617f:	mov    rcx,rdi
  406182:	mov    r9d,0x93a80
  406188:	mov    r8,rax
  40618b:	call   0x402ae0
  406190:	mov    rdi,rax
  406193:	mov    rax,QWORD PTR [rsp+0x28]
  406198:	lea    rbx,[rax+0x1]
  40619c:	mov    QWORD PTR [rsp+0x28],rbx
  4061a1:	mov    edx,0x44
  4061a6:	mov    rcx,rbx
  4061a9:	call   0x4177e0
  4061ae:	test   rax,rax
  4061b1:	je     0x4061e5
  4061b3:	lea    rdx,[rsp+0x28]
  4061b8:	mov    rcx,rdi
  4061bb:	mov    r9d,0x15180
  4061c1:	mov    r8,rax
  4061c4:	call   0x402ae0
  4061c9:	mov    rdi,rax
  4061cc:	mov    rax,QWORD PTR [rsp+0x28]
  4061d1:	lea    rbx,[rax+0x1]
  4061d5:	mov    QWORD PTR [rsp+0x28],rbx
  4061da:	jmp    0x4061e5
  4061dc:	nop    DWORD PTR [rax+0x0]
  4061e0:	mov    QWORD PTR [rsp+0x28],rbx
  4061e5:	movzx  ecx,BYTE PTR [rbx]
  4061e8:	add    rbx,0x1
  4061ec:	mov    ebp,ecx
  4061ee:	call   rsi
  4061f0:	test   eax,eax
  4061f2:	jne    0x4061e0
  4061f4:	test   bpl,bpl
  4061f7:	mov    rbp,QWORD PTR [rip+0x1d41a]        # 0x423618
  4061fe:	je     0x405ff5
  406204:	call   rbp
  406206:	mov    rdi,0xffffffffffffffff
  40620d:	mov    DWORD PTR [rax],0x16
  406213:	jmp    0x405ff5
  406218:	nop    DWORD PTR [rax+rax*1+0x0]
  406220:	mov    rbx,r13
  406223:	xor    r14d,r14d
  406226:	jmp    0x405f52
  40622b:	cmp    r12d,0x6
  40622f:	je     0x405e93
  406235:	lea    r15,[rsp+0x38]
  40623a:	mov    QWORD PTR [rsp+0x38],rbx
  40623f:	mov    r13d,0x3
  406245:	call   rbp
  406247:	mov    DWORD PTR [rax],0x0
  40624d:	mov    rbx,QWORD PTR [rsp+0x38]
  406252:	movzx  eax,BYTE PTR [rbx]
  406255:	cmp    al,0x3a
  406257:	jne    0x4062b0
  406259:	sub    r13d,0x1
  40625d:	je     0x4062b0
  40625f:	lea    rcx,[rbx+0x1]
  406263:	mov    rdx,r15
  406266:	mov    r8d,0xa
  40626c:	call   0x417780
  406271:	mov    ebx,eax
  406273:	call   rbp
  406275:	mov    edx,DWORD PTR [rax]
  406277:	test   edx,edx
  406279:	jne    0x406296
  40627b:	mov    rdx,r14
  40627e:	mov    ecx,ebx
  406280:	mov    r8d,0x3c
  406286:	call   0x402a50
  40628b:	mov    r14,rax
  40628e:	call   rbp
  406290:	mov    eax,DWORD PTR [rax]
  406292:	test   eax,eax
  406294:	je     0x40624d
  406296:	mov    rdx,0xffffffffffffffff
  40629d:	mov    r8d,0x1
  4062a3:	mov    rcx,rdi
  4062a6:	call   0x402a50
  4062ab:	jmp    0x405ead
  4062b0:	add    rbx,0x1
  4062b4:	mov    r13d,eax
  4062b7:	jmp    0x4062ce
  4062b9:	nop    DWORD PTR [rax+0x0]
  4062c0:	mov    QWORD PTR [rsp+0x38],rbx
  4062c5:	add    rbx,0x1
  4062c9:	movzx  r13d,BYTE PTR [rbx-0x1]
  4062ce:	movzx  ecx,r13b
  4062d2:	call   rsi
  4062d4:	test   eax,eax
  4062d6:	jne    0x4062c0
  4062d8:	test   r13b,r13b
  4062db:	jne    0x4063ee
  4062e1:	cmp    r14,0xe0f
  4062e8:	jle    0x4062f4
  4062ea:	cmp    r12d,0x5
  4062ee:	je     0x405e93
  4062f4:	mov    rdx,r14
  4062f7:	jmp    0x40629d
  4062f9:	mov    rcx,rbx
  4062fc:	call   0x4177b8
  406301:	cmp    rax,0x8
  406305:	jne    0x4063bb
  40630b:	mov    eax,DWORD PTR [rbx]
  40630d:	lea    rdi,[rsp+0x38]
  406312:	lea    rsi,[rsp+0x30]
  406317:	lea    r8,[rsp+0x34]
  40631c:	mov    r9d,0x1e13380
  406322:	xor    ecx,ecx
  406324:	mov    rdx,rdi
  406327:	mov    BYTE PTR [rsp+0x34],0x0
  40632c:	mov    QWORD PTR [rsp+0x38],rsi
  406331:	mov    DWORD PTR [rsp+0x30],eax
  406335:	lea    rbp,[rsi+0x2]
  406339:	call   0x402ae0
  40633e:	movzx  edx,WORD PTR [rbx+0x4]
  406342:	mov    r8,rbp
  406345:	mov    r9d,0x278d00
  40634b:	mov    rcx,rax
  40634e:	mov    BYTE PTR [rsp+0x32],0x0
  406353:	mov    QWORD PTR [rsp+0x38],rsi
  406358:	mov    WORD PTR [rsp+0x30],dx
  40635d:	mov    rdx,rdi
  406360:	call   0x402ae0
  406365:	movzx  edx,WORD PTR [rbx+0x6]
  406369:	mov    r8,rbp
  40636c:	mov    r9d,0x15180
  406372:	mov    rcx,rax
  406375:	mov    BYTE PTR [rsp+0x32],0x0
  40637a:	mov    QWORD PTR [rsp+0x38],rsi
  40637f:	mov    WORD PTR [rsp+0x30],dx
  406384:	mov    rdx,rdi
  406387:	call   0x402ae0
  40638c:	mov    rbp,QWORD PTR [rip+0x1d285]        # 0x423618
  406393:	mov    rdi,rax
  406396:	jmp    0x405ff5
  40639b:	mov    rax,rdi
  40639e:	jmp    0x405ead
  4063a3:	call   QWORD PTR [rip+0x1d26f]        # 0x423618
  4063a9:	mov    DWORD PTR [rax],0x16
  4063af:	mov    rax,0xffffffffffffffff
  4063b6:	jmp    0x405ead
  4063bb:	mov    rbp,QWORD PTR [rip+0x1d256]        # 0x423618
  4063c2:	mov    rdi,0xffffffffffffffff
  4063c9:	call   rbp
  4063cb:	mov    DWORD PTR [rax],0x16
  4063d1:	jmp    0x405ff5
  4063d6:	call   QWORD PTR [rip+0x1d23c]        # 0x423618
  4063dc:	mov    DWORD PTR [rax],0xc
  4063e2:	mov    rax,0xffffffffffffffff
  4063e9:	jmp    0x405ead
  4063ee:	call   rbp
  4063f0:	mov    DWORD PTR [rax],0x16
  4063f6:	jmp    0x406296
  4063fb:	nop    DWORD PTR [rax+rax*1+0x0]
  406400:	push   rbp
  406401:	push   rdi
  406402:	push   rsi
  406403:	push   rbx
  406404:	sub    rsp,0x28
  406408:	lea    eax,[rdx-0x3]
  40640b:	mov    rsi,rdx
  40640e:	cmp    eax,0xb
  406411:	ja     0x406470
  406413:	movzx  eax,BYTE PTR [rcx]
  406416:	lea    r8,[rip+0x13ce3]        # 0x41a100
  40641d:	mov    rdx,rax
  406420:	movzx  eax,BYTE PTR [r8+rax*1]
  406425:	add    eax,esi
  406427:	cmp    eax,0x11
  40642a:	ja     0x406470
  40642c:	cdqe   
  40642e:	lea    rbx,[rip+0x1468b]        # 0x41aac0
  406435:	xor    ebp,ebp
  406437:	shl    rax,0x4
  40643b:	add    rbx,rax
  40643e:	mov    rdi,QWORD PTR [rbx]
  406441:	cmp    dl,BYTE PTR [rdi]
  406443:	jne    0x406465
  406445:	lea    rdx,[rdi+0x1]
  406449:	lea    r8d,[rsi-0x1]
  40644d:	add    rcx,0x1
  406451:	call   0x4177b0
  406456:	test   eax,eax
  406458:	jne    0x406465
  40645a:	mov    esi,esi
  40645c:	cmp    BYTE PTR [rdi+rsi*1],0x0
  406460:	jne    0x406465
  406462:	mov    ebp,DWORD PTR [rbx+0x8]
  406465:	mov    eax,ebp
  406467:	add    rsp,0x28
  40646b:	pop    rbx
  40646c:	pop    rsi
  40646d:	pop    rdi
  40646e:	pop    rbp
  40646f:	ret    
  406470:	xor    ebp,ebp
  406472:	mov    eax,ebp
  406474:	add    rsp,0x28
  406478:	pop    rbx
  406479:	pop    rsi
  40647a:	pop    rdi
  40647b:	pop    rbp
  40647c:	ret    
  40647d:	nop    DWORD PTR [rax]
  406480:	push   rbp
  406481:	push   rdi
  406482:	push   rsi
  406483:	push   rbx
  406484:	sub    rsp,0x28
  406488:	lea    eax,[rdx-0x4]
  40648b:	mov    rsi,rdx
  40648e:	cmp    eax,0x4
  406491:	ja     0x4064f0
  406493:	movzx  eax,BYTE PTR [rcx]
  406496:	lea    r8,[rip+0x13b63]        # 0x41a000
  40649d:	mov    rdx,rax
  4064a0:	movzx  eax,BYTE PTR [r8+rax*1]
  4064a5:	add    eax,esi
  4064a7:	cmp    eax,0x9
  4064aa:	ja     0x4064f0
  4064ac:	cdqe   
  4064ae:	lea    rbx,[rip+0x1450b]        # 0x41a9c0
  4064b5:	xor    ebp,ebp
  4064b7:	shl    rax,0x4
  4064bb:	add    rbx,rax
  4064be:	mov    rdi,QWORD PTR [rbx]
  4064c1:	cmp    dl,BYTE PTR [rdi]
  4064c3:	jne    0x4064e5
  4064c5:	lea    rdx,[rdi+0x1]
  4064c9:	lea    r8d,[rsi-0x1]
  4064cd:	add    rcx,0x1
  4064d1:	call   0x4177b0
  4064d6:	test   eax,eax
  4064d8:	jne    0x4064e5
  4064da:	mov    esi,esi
  4064dc:	cmp    BYTE PTR [rdi+rsi*1],0x0
  4064e0:	jne    0x4064e5
  4064e2:	mov    ebp,DWORD PTR [rbx+0x8]
  4064e5:	mov    eax,ebp
  4064e7:	add    rsp,0x28
  4064eb:	pop    rbx
  4064ec:	pop    rsi
  4064ed:	pop    rdi
  4064ee:	pop    rbp
  4064ef:	ret    
  4064f0:	xor    ebp,ebp
  4064f2:	mov    eax,ebp
  4064f4:	add    rsp,0x28
  4064f8:	pop    rbx
  4064f9:	pop    rsi
  4064fa:	pop    rdi
  4064fb:	pop    rbp
  4064fc:	ret    
  4064fd:	nop    DWORD PTR [rax]
  406500:	push   rbx
  406501:	sub    rsp,0x20
  406505:	cmp    rcx,0xf
  406509:	jbe    0x40656c
  40650b:	mov    eax,r8d
  40650e:	mov    r9,rdx
  406511:	cmp    r8d,DWORD PTR [rcx+0xb0]
  406518:	lea    rdx,[rax+rax*2]
  40651c:	lea    rdx,[rax+rdx*4]
  406520:	mov    rax,QWORD PTR [rcx+0x78]
  406524:	lea    rdx,[rax+rdx*8]
  406528:	jae    0x4065a3
  40652a:	mov    eax,DWORD PTR [rdx+0x10]
  40652d:	and    eax,0xfffff00
  406532:	mov    DWORD PTR [rdx+0x10],eax
  406535:	mov    r8d,DWORD PTR [r9+0x10]
  406539:	and    r8d,0xf00000ff
  406540:	or     eax,r8d
  406543:	mov    r8,QWORD PTR [r9+0x18]
  406547:	test   al,0x4
  406549:	mov    DWORD PTR [rdx+0x10],eax
  40654c:	mov    QWORD PTR [rdx+0x18],r8
  406550:	jne    0x406580
  406552:	xor    eax,eax
  406554:	and    DWORD PTR [r9+0x10],0xfffff00
  40655c:	mov    WORD PTR [r9+0xe],ax
  406561:	mov    rax,QWORD PTR [rdx+0x38]
  406565:	test   rax,rax
  406568:	je     0x40656c
  40656a:	call   rax
  40656c:	xor    ebx,ebx
  40656e:	mov    eax,ebx
  406570:	add    rsp,0x20
  406574:	pop    rbx
  406575:	ret    
  406576:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406580:	movzx  eax,WORD PTR [rdx+0xe]
  406584:	add    eax,0x1
  406587:	cmp    ax,WORD PTR [rdx+0xc]
  40658b:	mov    WORD PTR [rdx+0xe],ax
  40658f:	jbe    0x406552
  406591:	test   BYTE PTR [rcx+0x10],0x4
  406595:	mov    ebx,0xffffffff
  40659a:	je     0x40656e
  40659c:	call   0x402e10
  4065a1:	jmp    0x40656e
  4065a3:	call   QWORD PTR [rip+0x1d027]        # 0x4235d0
  4065a9:	mov    rcx,QWORD PTR [rip+0x123a0]        # 0x418950
  4065b0:	lea    rdx,[rax+0x60]
  4065b4:	call   0x417870
  4065b9:	mov    ecx,0x1
  4065be:	call   0x401ed0
  4065c3:	nop
  4065c4:	xchg   ax,ax
  4065c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4065d0:	push   rsi
  4065d1:	push   rbx
  4065d2:	sub    rsp,0x38
  4065d6:	cmp    rcx,0xf
  4065da:	jbe    0x40662b
  4065dc:	test   rdx,rdx
  4065df:	je     0x40662b
  4065e1:	mov    eax,DWORD PTR [rdx+0x10]
  4065e4:	mov    esi,eax
  4065e6:	and    esi,0x8
  4065e9:	jne    0x40662b
  4065eb:	mov    rcx,QWORD PTR [rdx+0x18]
  4065ef:	test   rcx,rcx
  4065f2:	je     0x406670
  4065f4:	mov    rbx,rdx
  4065f7:	movzx  edx,BYTE PTR [rcx]
  4065fa:	cmp    dl,0x46
  4065fd:	je     0x406624
  4065ff:	jg     0x406641
  406601:	cmp    dl,0x23
  406604:	je     0x406652
  406606:	cmp    dl,0x30
  406609:	jne    0x406680
  40660b:	lea    rdx,[rsp+0x28]
  406610:	xor    r8d,r8d
  406613:	call   0x417788
  406618:	test   eax,eax
  40661a:	mov    eax,DWORD PTR [rbx+0x10]
  40661d:	je     0x406660
  40661f:	mov    esi,0x1
  406624:	test   al,0x40
  406626:	jne    0x406632
  406628:	mov    DWORD PTR [rbx+0x18],esi
  40662b:	add    rsp,0x38
  40662f:	pop    rbx
  406630:	pop    rsi
  406631:	ret    
  406632:	mov    rcx,QWORD PTR [rbx+0x18]
  406636:	call   0x417860
  40663b:	and    DWORD PTR [rbx+0x10],0xffffffbf
  40663f:	jmp    0x406628
  406641:	cmp    dl,0x66
  406644:	je     0x406624
  406646:	cmp    dl,0x6e
  406649:	je     0x406624
  40664b:	cmp    dl,0x4e
  40664e:	jne    0x40661f
  406650:	jmp    0x406624
  406652:	xor    esi,esi
  406654:	cmp    BYTE PTR [rcx+0x1],0x66
  406658:	setne  sil
  40665c:	jmp    0x406624
  40665e:	xchg   ax,ax
  406660:	mov    rdx,QWORD PTR [rsp+0x28]
  406665:	xor    esi,esi
  406667:	cmp    BYTE PTR [rdx],0x0
  40666a:	setne  sil
  40666e:	jmp    0x406624
  406670:	mov    DWORD PTR [rdx+0x18],0x0
  406677:	jmp    0x40662b
  406679:	nop    DWORD PTR [rax+0x0]
  406680:	test   dl,dl
  406682:	jne    0x40661f
  406684:	jmp    0x406624
  406686:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406690:	sub    rsp,0x28
  406694:	test   rcx,rcx
  406697:	je     0x406700
  406699:	mov    eax,DWORD PTR [rcx+0x10]
  40669c:	and    eax,0xf000
  4066a1:	cmp    eax,0x6000
  4066a6:	jne    0x406700
  4066a8:	mov    rcx,QWORD PTR [rcx+0x20]
  4066ac:	test   rcx,rcx
  4066af:	je     0x4066da
  4066b1:	mov    r8d,DWORD PTR [rcx]
  4066b4:	xor    r9d,r9d
  4066b7:	add    rcx,0x8
  4066bb:	jmp    0x4066d4
  4066bd:	nop    DWORD PTR [rax]
  4066c0:	add    rcx,0x8
  4066c4:	test   r9b,r9b
  4066c7:	mov    rax,QWORD PTR [rcx-0x8]
  4066cb:	jne    0x4066f0
  4066cd:	cmp    rax,rdx
  4066d0:	sete   r9b
  4066d4:	sub    r8d,0x1
  4066d8:	jns    0x4066c0
  4066da:	call   QWORD PTR [rip+0x1cf38]        # 0x423618
  4066e0:	mov    DWORD PTR [rax],0x2
  4066e6:	xor    eax,eax
  4066e8:	jmp    0x4066f5
  4066ea:	nop    WORD PTR [rax+rax*1+0x0]
  4066f0:	test   rax,rax
  4066f3:	je     0x4066da
  4066f5:	add    rsp,0x28
  4066f9:	ret    
  4066fa:	nop    WORD PTR [rax+rax*1+0x0]
  406700:	call   QWORD PTR [rip+0x1cf12]        # 0x423618
  406706:	mov    DWORD PTR [rax],0x16
  40670c:	xor    eax,eax
  40670e:	add    rsp,0x28
  406712:	ret    
  406713:	nop    DWORD PTR [rax]
  406716:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406720:	push   rbp
  406721:	push   rdi
  406722:	push   rsi
  406723:	push   rbx
  406724:	sub    rsp,0x28
  406728:	test   rcx,rcx
  40672b:	mov    rdi,rdx
  40672e:	je     0x406780
  406730:	cmp    DWORD PTR [rcx],0x6
  406733:	jne    0x406780
  406735:	mov    rax,QWORD PTR [rcx+0x10]
  406739:	mov    edx,DWORD PTR [rax]
  40673b:	test   edx,edx
  40673d:	jle    0x4067b0
  40673f:	test   rdi,rdi
  406742:	lea    rbx,[rax+0x8]
  406746:	je     0x4067a0
  406748:	lea    eax,[rdx-0x1]
  40674b:	lea    rbp,[rbx+rax*8+0x8]
  406750:	jmp    0x406757
  406752:	cmp    rbx,rbp
  406755:	je     0x4067b0
  406757:	add    rbx,0x8
  40675b:	mov    rsi,QWORD PTR [rbx-0x8]
  40675f:	mov    rdx,rdi
  406762:	mov    rcx,QWORD PTR [rsi+0x8]
  406766:	call   0x4177d8
  40676b:	test   eax,eax
  40676d:	jne    0x406752
  40676f:	mov    rax,rsi
  406772:	add    rsp,0x28
  406776:	pop    rbx
  406777:	pop    rsi
  406778:	pop    rdi
  406779:	pop    rbp
  40677a:	ret    
  40677b:	nop    DWORD PTR [rax+rax*1+0x0]
  406780:	xor    esi,esi
  406782:	call   QWORD PTR [rip+0x1ce90]        # 0x423618
  406788:	mov    DWORD PTR [rax],0x16
  40678e:	mov    rax,rsi
  406791:	add    rsp,0x28
  406795:	pop    rbx
  406796:	pop    rsi
  406797:	pop    rdi
  406798:	pop    rbp
  406799:	ret    
  40679a:	nop    WORD PTR [rax+rax*1+0x0]
  4067a0:	mov    rsi,QWORD PTR [rax+0x8]
  4067a4:	test   rsi,rsi
  4067a7:	jne    0x40676f
  4067a9:	nop    DWORD PTR [rax+0x0]
  4067b0:	call   QWORD PTR [rip+0x1ce62]        # 0x423618
  4067b6:	xor    esi,esi
  4067b8:	mov    DWORD PTR [rax],0x2
  4067be:	jmp    0x40676f
  4067c0:	push   r12
  4067c2:	push   rbp
  4067c3:	push   rdi
  4067c4:	push   rsi
  4067c5:	push   rbx
  4067c6:	sub    rsp,0x20
  4067ca:	test   rcx,rcx
  4067cd:	mov    rbp,rdx
  4067d0:	mov    r12,r8
  4067d3:	je     0x406850
  4067d5:	mov    eax,DWORD PTR [rcx+0x10]
  4067d8:	and    eax,0xf000
  4067dd:	cmp    eax,0x6000
  4067e2:	jne    0x406850
  4067e4:	mov    rax,QWORD PTR [rcx+0x20]
  4067e8:	test   rax,rax
  4067eb:	je     0x406835
  4067ed:	mov    ebx,DWORD PTR [rax]
  4067ef:	lea    rsi,[rax+0x8]
  4067f3:	test   ebx,ebx
  4067f5:	je     0x406835
  4067f7:	test   rdx,rdx
  4067fa:	je     0x406869
  4067fc:	nop    DWORD PTR [rax+0x0]
  406800:	sub    ebx,0x1
  406803:	js     0x406835
  406805:	add    rsi,0x8
  406809:	mov    rdi,QWORD PTR [rsi-0x8]
  40680d:	mov    rdx,rbp
  406810:	mov    rcx,rdi
  406813:	call   0x406720
  406818:	test   rax,rax
  40681b:	je     0x406800
  40681d:	test   r12,r12
  406820:	jne    0x406800
  406822:	test   rdi,rdi
  406825:	mov    rax,rdi
  406828:	je     0x406835
  40682a:	add    rsp,0x20
  40682e:	pop    rbx
  40682f:	pop    rsi
  406830:	pop    rdi
  406831:	pop    rbp
  406832:	pop    r12
  406834:	ret    
  406835:	call   QWORD PTR [rip+0x1cddd]        # 0x423618
  40683b:	mov    DWORD PTR [rax],0x2
  406841:	xor    eax,eax
  406843:	add    rsp,0x20
  406847:	pop    rbx
  406848:	pop    rsi
  406849:	pop    rdi
  40684a:	pop    rbp
  40684b:	pop    r12
  40684d:	ret    
  40684e:	xchg   ax,ax
  406850:	call   QWORD PTR [rip+0x1cdc2]        # 0x423618
  406856:	mov    DWORD PTR [rax],0x16
  40685c:	xor    eax,eax
  40685e:	add    rsp,0x20
  406862:	pop    rbx
  406863:	pop    rsi
  406864:	pop    rdi
  406865:	pop    rbp
  406866:	pop    r12
  406868:	ret    
  406869:	mov    rax,QWORD PTR [rax+0x8]
  40686d:	jmp    0x40682a
  40686f:	nop
  406870:	push   rbx
  406871:	sub    rsp,0x20
  406875:	test   rcx,rcx
  406878:	je     0x4068d0
  40687a:	cmp    DWORD PTR [rcx],0x6
  40687d:	jne    0x4068d0
  40687f:	mov    r8,QWORD PTR [rcx+0x10]
  406883:	mov    eax,DWORD PTR [r8]
  406886:	add    r8,0x8
  40688a:	jmp    0x40689d
  40688c:	nop    DWORD PTR [rax+0x0]
  406890:	lea    rcx,[r8+0x8]
  406894:	cmp    QWORD PTR [rcx-0x8],rdx
  406898:	je     0x4068c0
  40689a:	mov    r8,rcx
  40689d:	sub    eax,0x1
  4068a0:	lea    ecx,[rax+0x1]
  4068a3:	test   ecx,ecx
  4068a5:	jg     0x406890
  4068a7:	mov    ebx,0x16
  4068ac:	call   QWORD PTR [rip+0x1cd66]        # 0x423618
  4068b2:	mov    DWORD PTR [rax],ebx
  4068b4:	xor    eax,eax
  4068b6:	add    rsp,0x20
  4068ba:	pop    rbx
  4068bb:	ret    
  4068bc:	nop    DWORD PTR [rax+0x0]
  4068c0:	test   eax,eax
  4068c2:	jne    0x4068e4
  4068c4:	mov    ebx,0x2
  4068c9:	jmp    0x4068ac
  4068cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4068d0:	call   QWORD PTR [rip+0x1cd42]        # 0x423618
  4068d6:	mov    DWORD PTR [rax],0x16
  4068dc:	xor    eax,eax
  4068de:	add    rsp,0x20
  4068e2:	pop    rbx
  4068e3:	ret    
  4068e4:	mov    rax,QWORD PTR [r8+0x8]
  4068e8:	add    rsp,0x20
  4068ec:	pop    rbx
  4068ed:	ret    
  4068ee:	xchg   ax,ax
  4068f0:	push   rsi
  4068f1:	push   rbx
  4068f2:	sub    rsp,0x38
  4068f6:	movzx  eax,BYTE PTR [rcx]
  4068f9:	mov    rsi,rdx
  4068fc:	cmp    al,0x78
  4068fe:	mov    BYTE PTR [rdx],al
  406900:	ja     0x406a53
  406906:	lea    r9,[rip+0x13003]        # 0x419910
  40690d:	movsxd rax,DWORD PTR [r9+rax*4]
  406911:	add    r9,rax
  406914:	jmp    r9
  406917:	nop    WORD PTR [rax+rax*1+0x0]
  406920:	mov    ebx,0x1
  406925:	mov    BYTE PTR [rsi],r8b
  406928:	nop    DWORD PTR [rax+rax*1+0x0]
  406930:	mov    eax,ebx
  406932:	add    rsp,0x38
  406936:	pop    rbx
  406937:	pop    rsi
  406938:	ret    
  406939:	nop    DWORD PTR [rax+0x0]
  406940:	xor    ebx,ebx
  406942:	jmp    0x406930
  406944:	mov    BYTE PTR [rdx],0xb
  406947:	mov    ebx,0x1
  40694c:	jmp    0x406930
  40694e:	xchg   ax,ax
  406950:	mov    BYTE PTR [rdx],0xd
  406953:	mov    ebx,0x1
  406958:	jmp    0x406930
  40695a:	nop    WORD PTR [rax+rax*1+0x0]
  406960:	mov    BYTE PTR [rdx],0x9
  406963:	mov    ebx,0x1
  406968:	jmp    0x406930
  40696a:	nop    WORD PTR [rax+rax*1+0x0]
  406970:	cmp    BYTE PTR [rcx+0x1],0xa
  406974:	mov    ebx,0x1
  406979:	jne    0x406930
  40697b:	mov    bl,0x2
  40697d:	jmp    0x406925
  40697f:	nop
  406980:	movzx  eax,BYTE PTR [rcx]
  406983:	mov    ebx,0x1
  406988:	mov    BYTE PTR [rsp+0x20],al
  40698c:	mov    eax,ebx
  40698e:	movzx  edx,BYTE PTR [rcx+rax*1]
  406992:	cmp    dl,0x7f
  406995:	ja     0x406a9a
  40699b:	lea    r9,[rip+0x16e5e]        # 0x41d800
  4069a2:	movzx  r8d,dl
  4069a6:	test   BYTE PTR [r9+r8*4+0x2],0x1
  4069ac:	je     0x406a9a
  4069b2:	cmp    ebx,0x2
  4069b5:	mov    BYTE PTR [rsp+rax*1+0x20],dl
  4069b9:	je     0x406a90
  4069bf:	mov    ebx,0x2
  4069c4:	jmp    0x40698c
  4069c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4069d0:	movzx  eax,BYTE PTR [rcx+0x1]
  4069d4:	mov    ebx,0x1
  4069d9:	cmp    al,0x7f
  4069db:	ja     0x406930
  4069e1:	lea    rdx,[rip+0x16e18]        # 0x41d800
  4069e8:	movzx  r8d,al
  4069ec:	test   DWORD PTR [rdx+r8*4],0x70000
  4069f4:	je     0x406930
  4069fa:	movzx  ecx,BYTE PTR [rcx+0x2]
  4069fe:	mov    BYTE PTR [rsp+0x20],al
  406a02:	cmp    cl,0x7f
  406a05:	movzx  eax,cl
  406a08:	ja     0x406ac5
  406a0e:	test   DWORD PTR [rdx+rax*4],0x70000
  406a15:	je     0x406ac5
  406a1b:	mov    BYTE PTR [rsp+0x21],cl
  406a1f:	mov    ebx,0x3
  406a24:	mov    eax,0x2
  406a29:	lea    rcx,[rsp+0x20]
  406a2e:	mov    r8d,0x10
  406a34:	xor    edx,edx
  406a36:	mov    BYTE PTR [rsp+rax*1+0x20],0x0
  406a3b:	call   0x417780
  406a40:	mov    BYTE PTR [rsi],al
  406a42:	jmp    0x406930
  406a47:	nop    WORD PTR [rax+rax*1+0x0]
  406a50:	mov    BYTE PTR [rdx],0x7
  406a53:	mov    ebx,0x1
  406a58:	mov    eax,ebx
  406a5a:	add    rsp,0x38
  406a5e:	pop    rbx
  406a5f:	pop    rsi
  406a60:	ret    
  406a61:	mov    BYTE PTR [rdx],0x8
  406a64:	mov    ebx,0x1
  406a69:	jmp    0x406930
  406a6e:	xchg   ax,ax
  406a70:	mov    BYTE PTR [rdx],0xc
  406a73:	mov    ebx,0x1
  406a78:	jmp    0x406930
  406a7d:	nop    DWORD PTR [rax]
  406a80:	mov    BYTE PTR [rdx],0xa
  406a83:	mov    ebx,0x1
  406a88:	jmp    0x406930
  406a8d:	nop    DWORD PTR [rax]
  406a90:	mov    ebx,0x3
  406a95:	mov    eax,0x3
  406a9a:	lea    rcx,[rsp+0x20]
  406a9f:	xor    edx,edx
  406aa1:	mov    r8d,0x8
  406aa7:	mov    BYTE PTR [rsp+rax*1+0x20],0x0
  406aac:	call   0x417780
  406ab1:	mov    edx,0xff
  406ab6:	cmp    eax,0xff
  406abb:	cmova  eax,edx
  406abe:	mov    BYTE PTR [rsi],al
  406ac0:	jmp    0x406930
  406ac5:	mov    ebx,0x2
  406aca:	mov    eax,0x1
  406acf:	jmp    0x406a29
  406ad4:	xchg   ax,ax
  406ad6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406ae0:	push   r14
  406ae2:	push   r13
  406ae4:	push   r12
  406ae6:	push   rbp
  406ae7:	push   rdi
  406ae8:	push   rsi
  406ae9:	push   rbx
  406aea:	sub    rsp,0x30
  406aee:	movzx  esi,BYTE PTR [rcx]
  406af1:	movzx  r8d,BYTE PTR [rcx+0x1]
  406af6:	mov    r13d,0x1
  406afc:	lea    rax,[rsp+0x2c]
  406b01:	mov    rbp,rdx
  406b04:	test   rdx,rdx
  406b07:	lea    r9,[rcx+0x1]
  406b0b:	mov    rbx,rcx
  406b0e:	mov    DWORD PTR [rsp+0x2c],0x0
  406b16:	cmove  rbp,rax
  406b1a:	movabs r12,0x200000000000011
  406b24:	cmp    sil,r8b
  406b27:	je     0x406b59
  406b29:	cmp    r8b,0xa
  406b2d:	lea    r14,[rbx+0x1]
  406b31:	lea    rdi,[r9+0x1]
  406b35:	mov    BYTE PTR [rbx],r8b
  406b38:	je     0x406c00
  406b3e:	cmp    r8b,0x5c
  406b42:	je     0x406bc2
  406b44:	test   r8b,r8b
  406b47:	je     0x406bb1
  406b49:	movzx  r8d,BYTE PTR [r9+0x1]
  406b4e:	mov    rbx,r14
  406b51:	mov    r9,rdi
  406b54:	cmp    sil,r8b
  406b57:	jne    0x406b29
  406b59:	lea    rdi,[r9+0x1]
  406b5d:	mov    BYTE PTR [rbx],0x0
  406b60:	movzx  esi,BYTE PTR [rdi]
  406b63:	cmp    sil,0x7f
  406b67:	ja     0x406b81
  406b69:	lea    rdx,[rip+0x16c90]        # 0x41d800
  406b70:	movzx  eax,sil
  406b74:	test   DWORD PTR [rdx+rax*4],0xc01
  406b7b:	jne    0x406c10
  406b81:	cmp    sil,0x27
  406b85:	je     0x406c70
  406b8b:	cmp    sil,0x2f
  406b8f:	je     0x406c91
  406b95:	cmp    sil,0x22
  406b99:	je     0x406c70
  406b9f:	mov    rax,rdi
  406ba2:	add    rsp,0x30
  406ba6:	pop    rbx
  406ba7:	pop    rsi
  406ba8:	pop    rdi
  406ba9:	pop    rbp
  406baa:	pop    r12
  406bac:	pop    r13
  406bae:	pop    r14
  406bb0:	ret    
  406bb1:	xor    eax,eax
  406bb3:	add    rsp,0x30
  406bb7:	pop    rbx
  406bb8:	pop    rsi
  406bb9:	pop    rdi
  406bba:	pop    rbp
  406bbb:	pop    r12
  406bbd:	pop    r13
  406bbf:	pop    r14
  406bc1:	ret    
  406bc2:	movzx  r8d,BYTE PTR [r9+0x1]
  406bc7:	cmp    r8b,0xa
  406bcb:	je     0x406c80
  406bd1:	cmp    sil,0x27
  406bd5:	je     0x406c30
  406bd7:	mov    r8d,0xa
  406bdd:	mov    rdx,rbx
  406be0:	mov    rcx,rdi
  406be3:	call   0x4068f0
  406be8:	test   eax,eax
  406bea:	je     0x406bb1
  406bec:	mov    eax,eax
  406bee:	mov    rbx,r14
  406bf1:	lea    r9,[rdi+rax*1]
  406bf5:	movzx  r8d,BYTE PTR [r9]
  406bf9:	jmp    0x406b24
  406bfe:	xchg   ax,ax
  406c00:	add    DWORD PTR [rbp+0x0],0x1
  406c04:	jmp    0x406b49
  406c09:	nop    DWORD PTR [rax+0x0]
  406c10:	add    rdi,0x1
  406c14:	cmp    sil,0xa
  406c18:	jne    0x406b60
  406c1e:	add    DWORD PTR [rbp+0x0],0x1
  406c22:	jmp    0x406b60
  406c27:	nop    WORD PTR [rax+rax*1+0x0]
  406c30:	lea    ecx,[r8-0x23]
  406c34:	cmp    cl,0x39
  406c37:	ja     0x406c60
  406c39:	mov    rax,r13
  406c3c:	shl    rax,cl
  406c3f:	test   rax,r12
  406c42:	je     0x406c60
  406c44:	mov    BYTE PTR [rbx],r8b
  406c47:	add    r9,0x2
  406c4b:	movzx  r8d,BYTE PTR [r9]
  406c4f:	mov    rbx,r14
  406c52:	jmp    0x406b24
  406c57:	nop    WORD PTR [rax+rax*1+0x0]
  406c60:	mov    r9,rdi
  406c63:	mov    rbx,r14
  406c66:	jmp    0x406b24
  406c6b:	nop    DWORD PTR [rax+rax*1+0x0]
  406c70:	lea    r9,[rdi+0x1]
  406c74:	movzx  r8d,BYTE PTR [rdi+0x1]
  406c79:	jmp    0x406b24
  406c7e:	xchg   ax,ax
  406c80:	add    DWORD PTR [rbp+0x0],0x1
  406c84:	add    r9,0x2
  406c88:	movzx  r8d,BYTE PTR [r9]
  406c8c:	jmp    0x406b24
  406c91:	movzx  eax,BYTE PTR [rdi+0x1]
  406c95:	cmp    al,0x2a
  406c97:	je     0x406cc0
  406c99:	cmp    al,0x2f
  406c9b:	jne    0x406d00
  406c9d:	mov    rcx,rdi
  406ca0:	mov    edx,0xa
  406ca5:	call   0x4177e0
  406caa:	test   rax,rax
  406cad:	mov    rdi,rax
  406cb0:	jne    0x406b60
  406cb6:	jmp    0x406b9f
  406cbb:	nop    DWORD PTR [rax+rax*1+0x0]
  406cc0:	lea    rcx,[rdi+0x2]
  406cc4:	lea    rdx,[rip+0x12e29]        # 0x419af4
  406ccb:	call   0x417790
  406cd0:	test   rax,rax
  406cd3:	je     0x406d00
  406cd5:	cmp    rdi,rax
  406cd8:	jae    0x406d10
  406cda:	mov    edx,0x2f
  406cdf:	jmp    0x406ce9
  406ce1:	cmp    rdi,rax
  406ce4:	je     0x406d10
  406ce6:	movzx  edx,BYTE PTR [rdi]
  406ce9:	add    rdi,0x1
  406ced:	cmp    dl,0xa
  406cf0:	jne    0x406ce1
  406cf2:	add    DWORD PTR [rbp+0x0],0x1
  406cf6:	jmp    0x406ce1
  406cf8:	nop    DWORD PTR [rax+rax*1+0x0]
  406d00:	xor    edi,edi
  406d02:	jmp    0x406b9f
  406d07:	nop    WORD PTR [rax+rax*1+0x0]
  406d10:	lea    rdi,[rax+0x2]
  406d14:	jmp    0x406b60
  406d19:	nop    DWORD PTR [rax+0x0]
  406d20:	push   r15
  406d22:	push   r14
  406d24:	push   r13
  406d26:	push   r12
  406d28:	push   rbp
  406d29:	push   rdi
  406d2a:	push   rsi
  406d2b:	push   rbx
  406d2c:	sub    rsp,0xe8
  406d33:	test   rcx,rcx
  406d36:	mov    rbx,rcx
  406d39:	mov    rbp,rdx
  406d3c:	mov    rdi,r8
  406d3f:	je     0x4078ca
  406d45:	mov    rax,QWORD PTR [rip+0x1a494]        # 0x4211e0
  406d4c:	test   rax,rax
  406d4f:	je     0x40740c
  406d55:	movzx  r8d,BYTE PTR [rbx]
  406d59:	cmp    BYTE PTR [rax+r8*1],0x0
  406d5e:	mov    rcx,r8
  406d61:	je     0x406d73
  406d63:	add    rbx,0x1
  406d67:	movzx  edx,BYTE PTR [rbx]
  406d6a:	cmp    BYTE PTR [rax+rdx*1],0x0
  406d6e:	mov    rcx,rdx
  406d71:	jne    0x406d63
  406d73:	test   cl,cl
  406d75:	je     0x407273
  406d7b:	lea    rcx,[rdi+0x19]
  406d7f:	call   0x4038d0
  406d84:	lea    rcx,[rax+0x18]
  406d88:	mov    rsi,rax
  406d8b:	mov    rdx,rbp
  406d8e:	mov    r8,rdi
  406d91:	mov    DWORD PTR [rax],0x6
  406d97:	lea    rbp,[rsp+0x90]
  406d9f:	mov    QWORD PTR [rax+0x8],rcx
  406da3:	lea    r13,[rsi+0x10]
  406da7:	call   0x417820
  406dac:	mov    BYTE PTR [rsi+rdi*1+0x18],0x0
  406db1:	mov    ecx,0x38
  406db6:	lea    r12,[rbp+0x2]
  406dba:	call   0x4038d0
  406dbf:	mov    QWORD PTR [rsi+0x10],rax
  406dc3:	mov    DWORD PTR [rax],0x0
  406dc9:	mov    DWORD PTR [rax+0x4],0x6
  406dd0:	lea    rax,[rsp+0x70]
  406dd5:	mov    QWORD PTR [rsp+0x48],rax
  406dda:	lea    rax,[rsp+0x98]
  406de2:	mov    QWORD PTR [rsp+0x38],rax
  406de7:	mov    rax,QWORD PTR [rip+0x1a3f2]        # 0x4211e0
  406dee:	test   rax,rax
  406df1:	jne    0x406e04
  406df3:	jmp    0x4071d5
  406df8:	nop    DWORD PTR [rax+rax*1+0x0]
  406e00:	add    rbx,0x1
  406e04:	movzx  ecx,BYTE PTR [rbx]
  406e07:	cmp    BYTE PTR [rax+rcx*1],0x0
  406e0b:	mov    rdx,rcx
  406e0e:	jne    0x406e00
  406e10:	cmp    cl,0x7f
  406e13:	ja     0x406eb0
  406e19:	movzx  eax,cl
  406e1c:	lea    rcx,[rip+0x169dd]        # 0x41d800
  406e23:	test   DWORD PTR [rcx+rax*4],0x180040
  406e2a:	je     0x406eb0
  406e30:	mov    rax,QWORD PTR [rip+0x1a429]        # 0x421260
  406e37:	lea    rdi,[rbx+0x1]
  406e3b:	test   rax,rax
  406e3e:	je     0x40782a
  406e44:	movzx  edx,BYTE PTR [rbx+0x1]
  406e48:	cmp    BYTE PTR [rax+rdx*1],0x0
  406e4c:	je     0x406e5d
  406e4e:	xchg   ax,ax
  406e50:	add    rdi,0x1
  406e54:	movzx  edx,BYTE PTR [rdi]
  406e57:	cmp    BYTE PTR [rax+rdx*1],0x0
  406e5b:	jne    0x406e50
  406e5d:	xor    eax,eax
  406e5f:	cmp    BYTE PTR [rdi-0x1],0x3a
  406e63:	sete   al
  406e66:	sub    rdi,rax
  406e69:	mov    rax,QWORD PTR [rip+0x1a360]        # 0x4211d0
  406e70:	mov    r8,rdi
  406e73:	sub    r8,rbx
  406e76:	test   rax,rax
  406e79:	jne    0x406e84
  406e7b:	jmp    0x407811
  406e80:	add    rdi,0x1
  406e84:	movzx  ecx,BYTE PTR [rdi]
  406e87:	cmp    BYTE PTR [rax+rcx*1],0x0
  406e8b:	mov    rdx,rcx
  406e8e:	jne    0x406e80
  406e90:	lea    r14,[rip+0x12c65]        # 0x419afc
  406e97:	cmp    dl,0x3d
  406e9a:	ja     0x4070e2
  406ea0:	movzx  eax,dl
  406ea3:	movsxd rax,DWORD PTR [r14+rax*4]
  406ea7:	add    rax,r14
  406eaa:	jmp    rax
  406eac:	nop    DWORD PTR [rax+0x0]
  406eb0:	cmp    dl,0x23
  406eb3:	je     0x406fa4
  406eb9:	cmp    dl,0x3c
  406ebc:	je     0x406fc0
  406ec2:	test   dl,dl
  406ec4:	je     0x406f14
  406ec6:	mov    rcx,QWORD PTR [rsi+0x10]
  406eca:	call   0x417860
  406ecf:	mov    rcx,rsi
  406ed2:	call   0x417860
  406ed7:	xor    eax,eax
  406ed9:	add    rsp,0xe8
  406ee0:	pop    rbx
  406ee1:	pop    rsi
  406ee2:	pop    rdi
  406ee3:	pop    rbp
  406ee4:	pop    r12
  406ee6:	pop    r13
  406ee8:	pop    r14
  406eea:	pop    r15
  406eec:	ret    
  406eed:	add    rdi,0x1
  406ef1:	mov    rdx,rbx
  406ef4:	mov    QWORD PTR [rsp+0x20],0x0
  406efd:	xor    r9d,r9d
  406f00:	mov    rcx,r13
  406f03:	mov    rbx,rdi
  406f06:	call   0x4039e0
  406f0b:	test   rbx,rbx
  406f0e:	jne    0x406de7
  406f14:	mov    r15,QWORD PTR [rsi+0x10]
  406f18:	mov    edx,DWORD PTR [r15]
  406f1b:	test   edx,edx
  406f1d:	je     0x4078dd
  406f23:	cmp    edx,0x1
  406f26:	mov    rax,rsi
  406f29:	jle    0x406ed9
  406f2b:	lea    r12d,[rdx-0x2]
  406f2f:	xor    edi,edi
  406f31:	add    r12,0x1
  406f35:	mov    rbp,QWORD PTR [r15+rdi*8+0x10]
  406f3a:	mov    ebx,edi
  406f3c:	mov    r14,QWORD PTR [r15+rdi*8+0x8]
  406f41:	mov    r13,QWORD PTR [rbp+0x8]
  406f45:	jmp    0x406f6a
  406f47:	nop    WORD PTR [rax+rax*1+0x0]
  406f50:	lea    eax,[rbx+0x1]
  406f53:	sub    ebx,0x1
  406f56:	cmp    ebx,0xffffffff
  406f59:	cdqe   
  406f5b:	mov    QWORD PTR [r15+rax*8+0x8],r14
  406f60:	movsxd rax,ebx
  406f63:	mov    r14,QWORD PTR [r15+rax*8+0x8]
  406f68:	je     0x406fa0
  406f6a:	mov    rcx,QWORD PTR [r14+0x8]
  406f6e:	mov    rdx,r13
  406f71:	call   0x4177d8
  406f76:	test   eax,eax
  406f78:	jg     0x406f50
  406f7a:	add    ebx,0x1
  406f7d:	add    rdi,0x1
  406f81:	movsxd rbx,ebx
  406f84:	cmp    rdi,r12
  406f87:	mov    QWORD PTR [r15+rbx*8+0x8],rbp
  406f8c:	jne    0x406f35
  406f8e:	mov    rax,rsi
  406f91:	jmp    0x406ed9
  406f96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406fa0:	xor    ebx,ebx
  406fa2:	jmp    0x406f7d
  406fa4:	mov    rcx,rbx
  406fa7:	mov    edx,0xa
  406fac:	call   0x4177e0
  406fb1:	mov    rbx,rax
  406fb4:	jmp    0x406f0b
  406fb9:	nop    DWORD PTR [rax+0x0]
  406fc0:	mov    eax,DWORD PTR [rip+0x118ca]        # 0x418890
  406fc6:	mov    DWORD PTR [rsp+0x54],eax
  406fca:	lea    rax,[rbx+0x1]
  406fce:	mov    QWORD PTR [rsp+0x40],rax
  406fd3:	movzx  eax,BYTE PTR [rbx+0x1]
  406fd7:	cmp    al,0x7f
  406fd9:	ja     0x407050
  406fdb:	lea    r10,[rip+0x1681e]        # 0x41d800
  406fe2:	movzx  edx,al
  406fe5:	test   DWORD PTR [r10+rdx*4],0x180040
  406fed:	je     0x407050
  406fef:	mov    rax,QWORD PTR [rip+0x1a26a]        # 0x421260
  406ff6:	lea    rdi,[rbx+0x2]
  406ffa:	test   rax,rax
  406ffd:	je     0x407927
  407003:	movzx  edx,BYTE PTR [rbx+0x2]
  407007:	cmp    BYTE PTR [rax+rdx*1],0x0
  40700b:	je     0x40701d
  40700d:	nop    DWORD PTR [rax]
  407010:	add    rdi,0x1
  407014:	movzx  edx,BYTE PTR [rdi]
  407017:	cmp    BYTE PTR [rax+rdx*1],0x0
  40701b:	jne    0x407010
  40701d:	mov    r14,rdi
  407020:	sub    r14,QWORD PTR [rsp+0x40]
  407025:	cmp    r14,0x40
  407029:	ja     0x407041
  40702b:	mov    DWORD PTR [rsp+0x70],0x1
  407033:	movzx  eax,BYTE PTR [rdi]
  407036:	cmp    al,0x7f
  407038:	movzx  edx,al
  40703b:	jbe    0x407320
  407041:	mov    eax,DWORD PTR [rsp+0x54]
  407045:	mov    DWORD PTR [rip+0x11845],eax        # 0x418890
  40704b:	jmp    0x406ec6
  407050:	cmp    al,0x21
  407052:	je     0x407286
  407058:	cmp    al,0x3f
  40705a:	jne    0x406ec6
  407060:	mov    rcx,QWORD PTR [rsp+0x40]
  407065:	mov    edx,0x3e
  40706a:	call   0x4177e0
  40706f:	test   rax,rax
  407072:	je     0x406ec6
  407078:	lea    rbx,[rax+0x1]
  40707c:	test   rbx,rbx
  40707f:	je     0x406ec6
  407085:	cmp    BYTE PTR [rbx],0x2c
  407088:	jne    0x406de7
  40708e:	add    rbx,0x1
  407092:	jmp    0x406f0b
  407097:	mov    rax,QWORD PTR [rip+0x1a132]        # 0x4211d0
  40709e:	lea    r15,[rdi+0x1]
  4070a2:	test   rax,rax
  4070a5:	je     0x407940
  4070ab:	movzx  edx,BYTE PTR [rdi+0x1]
  4070af:	mov    rdi,r15
  4070b2:	cmp    BYTE PTR [rax+rdx*1],0x0
  4070b6:	mov    rcx,rdx
  4070b9:	je     0x4070d0
  4070bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4070c0:	add    rdi,0x1
  4070c4:	movzx  edx,BYTE PTR [rdi]
  4070c7:	cmp    BYTE PTR [rax+rdx*1],0x0
  4070cb:	mov    rcx,rdx
  4070ce:	jne    0x4070c0
  4070d0:	cmp    cl,0x3a
  4070d3:	mov    edx,ecx
  4070d5:	je     0x4070e0
  4070d7:	cmp    cl,0x3d
  4070da:	jne    0x406e97
  4070e0:	mov    edx,ecx
  4070e2:	mov    r15,rdi
  4070e5:	cmp    dl,0xa
  4070e8:	lea    rax,[rdi+0x2]
  4070ec:	lea    r14,[r15+0x1]
  4070f0:	je     0x407113
  4070f2:	cmp    dl,0x2c
  4070f5:	je     0x4071e4
  4070fb:	test   dl,dl
  4070fd:	je     0x4073e2
  407103:	movzx  edx,BYTE PTR [r14]
  407107:	mov    r15,r14
  40710a:	lea    r14,[r15+0x1]
  40710e:	cmp    dl,0xa
  407111:	jne    0x4070f2
  407113:	cmp    r14,rax
  407116:	jbe    0x4071e4
  40711c:	cmp    BYTE PTR [r14-0x2],0x5c
  407121:	jne    0x407129
  407123:	cmp    BYTE PTR [r14],0x0
  407127:	jne    0x407103
  407129:	mov    rax,r14
  40712c:	mov    rdx,rbx
  40712f:	mov    r9,rdi
  407132:	sub    rax,rdi
  407135:	mov    rcx,r13
  407138:	mov    rbx,r14
  40713b:	sub    rax,0x1
  40713f:	mov    QWORD PTR [rsp+0x20],rax
  407144:	call   0x4039e0
  407149:	test   rax,rax
  40714c:	jne    0x40720d
  407152:	jmp    0x406de7
  407157:	nop    WORD PTR [rax+rax*1+0x0]
  407160:	lea    r15,[rdi+0x1]
  407164:	jmp    0x407183
  407166:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407170:	cmp    al,dl
  407172:	je     0x4072a9
  407178:	cmp    al,0x5c
  40717a:	je     0x4072e0
  407180:	mov    r15,r14
  407183:	lea    r14,[r15+0x1]
  407187:	movzx  eax,BYTE PTR [r14-0x1]
  40718c:	test   al,al
  40718e:	jne    0x407170
  407190:	mov    rax,r15
  407193:	mov    rdx,rbx
  407196:	mov    r9,rdi
  407199:	sub    rax,rdi
  40719c:	mov    rcx,r13
  40719f:	mov    rbx,r15
  4071a2:	mov    QWORD PTR [rsp+0x20],rax
  4071a7:	call   0x4039e0
  4071ac:	test   rax,rax
  4071af:	je     0x406de7
  4071b5:	mov    r8d,DWORD PTR [rip+0x116d4]        # 0x418890
  4071bc:	test   r8d,r8d
  4071bf:	jne    0x406f0b
  4071c5:	lea    rcx,[rax+0x10]
  4071c9:	xor    edx,edx
  4071cb:	call   0x406ae0
  4071d0:	jmp    0x406f0b
  4071d5:	mov    ecx,0xc
  4071da:	call   0x4033e0
  4071df:	jmp    0x406e04
  4071e4:	mov    rax,r14
  4071e7:	mov    rdx,rbx
  4071ea:	mov    r9,rdi
  4071ed:	sub    rax,rdi
  4071f0:	mov    rcx,r13
  4071f3:	mov    rbx,r14
  4071f6:	sub    rax,0x1
  4071fa:	mov    QWORD PTR [rsp+0x20],rax
  4071ff:	call   0x4039e0
  407204:	test   rax,rax
  407207:	je     0x406f0b
  40720d:	add    rax,0x10
  407211:	jmp    0x407217
  407213:	add    rax,0x1
  407217:	cmp    BYTE PTR [rax],0xa
  40721a:	je     0x407213
  40721c:	mov    edx,0xa
  407221:	mov    rcx,rax
  407224:	call   0x4177e0
  407229:	test   rax,rax
  40722c:	je     0x406f0b
  407232:	cmp    BYTE PTR [rax-0x1],0x5c
  407236:	jne    0x407217
  407238:	movzx  ecx,BYTE PTR [rax]
  40723b:	lea    rdx,[rax-0x1]
  40723f:	lea    r8,[rdx+0x1]
  407243:	test   cl,cl
  407245:	mov    BYTE PTR [rdx],cl
  407247:	je     0x406f0b
  40724d:	cmp    cl,0x5c
  407250:	jne    0x40725a
  407252:	cmp    BYTE PTR [rax+0x1],0xa
  407256:	cmove  r8,rdx
  40725a:	add    rax,0x1
  40725e:	movzx  ecx,BYTE PTR [rax]
  407261:	mov    rdx,r8
  407264:	lea    r8,[rdx+0x1]
  407268:	test   cl,cl
  40726a:	mov    BYTE PTR [rdx],cl
  40726c:	jne    0x40724d
  40726e:	jmp    0x406f0b
  407273:	call   QWORD PTR [rip+0x1c39f]        # 0x423618
  407279:	mov    DWORD PTR [rax],0x2
  40727f:	xor    eax,eax
  407281:	jmp    0x406ed9
  407286:	mov    rcx,QWORD PTR [rsp+0x40]
  40728b:	lea    rdx,[rip+0x12865]        # 0x419af7
  407292:	call   0x417790
  407297:	test   rax,rax
  40729a:	je     0x406ec6
  4072a0:	lea    rbx,[rax+0x3]
  4072a4:	jmp    0x40707c
  4072a9:	mov    rax,r14
  4072ac:	mov    r9,rdi
  4072af:	mov    rdx,rbx
  4072b2:	sub    rax,rdi
  4072b5:	mov    rcx,r13
  4072b8:	mov    QWORD PTR [rsp+0x20],rax
  4072bd:	call   0x4039e0
  4072c2:	test   rax,rax
  4072c5:	je     0x4072d5
  4072c7:	mov    edx,DWORD PTR [rip+0x115c3]        # 0x418890
  4072cd:	test   edx,edx
  4072cf:	je     0x4078bd
  4072d5:	mov    rbx,r14
  4072d8:	jmp    0x406de7
  4072dd:	nop    DWORD PTR [rax]
  4072e0:	mov    rcx,r15
  4072e3:	add    r15,0x2
  4072e7:	movzx  eax,BYTE PTR [rcx+0x1]
  4072eb:	test   al,al
  4072ed:	je     0x4079ee
  4072f3:	cmp    al,0x5c
  4072f5:	je     0x4072ff
  4072f7:	cmp    al,dl
  4072f9:	jne    0x407183
  4072ff:	cmp    BYTE PTR [rcx+0x2],0x0
  407303:	mov    rax,r15
  407306:	lea    r15,[rcx+0x3]
  40730a:	jne    0x407183
  407310:	mov    r15,rax
  407313:	jmp    0x407190
  407318:	nop    DWORD PTR [rax+rax*1+0x0]
  407320:	movzx  ecx,al
  407323:	mov    ecx,DWORD PTR [r10+rcx*4]
  407327:	test   ecx,0xc01
  40732d:	je     0x40738b
  40732f:	mov    rax,QWORD PTR [rip+0x19eaa]        # 0x4211e0
  407336:	test   rax,rax
  407339:	jne    0x407347
  40733b:	jmp    0x4079af
  407340:	add    rdi,0x1
  407344:	movzx  edx,BYTE PTR [rdi]
  407347:	cmp    BYTE PTR [rax+rdx*1],0x0
  40734b:	jne    0x407340
  40734d:	mov    r8,QWORD PTR [rsp+0x48]
  407352:	lea    rdx,[rip+0x11537]        # 0x418890
  407359:	mov    rcx,rdi
  40735c:	mov    QWORD PTR [rsp+0x58],r10
  407361:	call   0x4058b0
  407366:	test   rax,rax
  407369:	mov    rdi,rax
  40736c:	je     0x407041
  407372:	movzx  edx,BYTE PTR [rax]
  407375:	cmp    dl,0x7f
  407378:	mov    eax,edx
  40737a:	ja     0x407041
  407380:	mov    r10,QWORD PTR [rsp+0x58]
  407385:	mov    edx,edx
  407387:	mov    ecx,DWORD PTR [r10+rdx*4]
  40738b:	and    ecx,0x1000c01
  407391:	je     0x407041
  407397:	cmp    al,0x2f
  407399:	je     0x40789f
  40739f:	mov    r15,rdi
  4073a2:	add    r15,0x1
  4073a6:	je     0x407041
  4073ac:	mov    ecx,DWORD PTR [rsp+0x70]
  4073b0:	test   ecx,ecx
  4073b2:	jne    0x40741b
  4073b4:	mov    rdx,QWORD PTR [rsp+0x40]
  4073b9:	mov    QWORD PTR [rsp+0x20],0x0
  4073c2:	xor    r9d,r9d
  4073c5:	mov    r8,r14
  4073c8:	mov    rcx,r13
  4073cb:	mov    rbx,r15
  4073ce:	call   0x4039e0
  4073d3:	mov    eax,DWORD PTR [rsp+0x54]
  4073d7:	mov    DWORD PTR [rip+0x114b3],eax        # 0x418890
  4073dd:	jmp    0x407085
  4073e2:	mov    rax,r15
  4073e5:	mov    rdx,rbx
  4073e8:	mov    r9,rdi
  4073eb:	sub    rax,rdi
  4073ee:	mov    rcx,r13
  4073f1:	mov    rbx,r15
  4073f4:	mov    QWORD PTR [rsp+0x20],rax
  4073f9:	call   0x4039e0
  4073fe:	test   rax,rax
  407401:	jne    0x40720d
  407407:	jmp    0x406de7
  40740c:	mov    ecx,0xc
  407411:	call   0x4033e0
  407416:	jmp    0x406d55
  40741b:	cmp    DWORD PTR [rip+0x1146e],0x2        # 0x418890
  407422:	je     0x40744e
  407424:	mov    rax,QWORD PTR [rip+0x19db5]        # 0x4211e0
  40742b:	test   rax,rax
  40742e:	je     0x407996
  407434:	movzx  edx,BYTE PTR [rdi+0x1]
  407438:	cmp    BYTE PTR [rax+rdx*1],0x0
  40743c:	je     0x40744e
  40743e:	xchg   ax,ax
  407440:	add    r15,0x1
  407444:	movzx  edx,BYTE PTR [r15]
  407448:	cmp    BYTE PTR [rax+rdx*1],0x0
  40744c:	jne    0x407440
  40744e:	mov    rdi,QWORD PTR [rsp+0x38]
  407453:	mov    ecx,0x8
  407458:	xor    eax,eax
  40745a:	mov    QWORD PTR [rsp+0x90],0x2f3c
  407466:	rep stos QWORD PTR es:[rdi],rax
  407469:	nop    DWORD PTR [rax+0x0]
  407470:	movzx  edx,BYTE PTR [rbx+rax*1+0x1]
  407475:	mov    BYTE PTR [r12+rax*1],dl
  407479:	add    rax,0x1
  40747d:	cmp    r14,rax
  407480:	jne    0x407470
  407482:	lea    rax,[r12+r14*1-0x1]
  407487:	mov    rdx,rbp
  40748a:	mov    rcx,r15
  40748d:	mov    QWORD PTR [rsp+0x58],r10
  407492:	mov    BYTE PTR [rax+0x1],0x3e
  407496:	mov    BYTE PTR [rax+0x2],0x0
  40749a:	lea    rdi,[rax+0x2]
  40749e:	call   0x417790
  4074a3:	test   rax,rax
  4074a6:	mov    rbx,rax
  4074a9:	je     0x407041
  4074af:	cmp    DWORD PTR [rip+0x113da],0x2        # 0x418890
  4074b6:	mov    r10,QWORD PTR [rsp+0x58]
  4074bb:	jne    0x407839
  4074c1:	mov    rax,QWORD PTR [rip+0x19d18]        # 0x4211e0
  4074c8:	mov    r9,rbx
  4074cb:	sub    rdi,rbp
  4074ce:	sub    r9,r15
  4074d1:	add    rbx,rdi
  4074d4:	test   rax,rax
  4074d7:	jne    0x4074e4
  4074d9:	jmp    0x407966
  4074de:	xchg   ax,ax
  4074e0:	add    rbx,0x1
  4074e4:	movzx  edx,BYTE PTR [rbx]
  4074e7:	cmp    BYTE PTR [rax+rdx*1],0x0
  4074eb:	jne    0x4074e0
  4074ed:	cmp    DWORD PTR [rsp+0x70],0x6
  4074f2:	ja     0x4073d3
  4074f8:	mov    edx,DWORD PTR [rsp+0x70]
  4074fc:	lea    rax,[rip+0x126f1]        # 0x419bf4
  407503:	movsxd rdx,DWORD PTR [rax+rdx*4]
  407507:	add    rax,rdx
  40750a:	jmp    rax
  40750c:	lea    rcx,[r9+0x1]
  407510:	mov    QWORD PTR [rsp+0x58],r9
  407515:	call   0x4038d0
  40751a:	mov    r9,QWORD PTR [rsp+0x58]
  40751f:	mov    rdx,r15
  407522:	mov    rcx,rax
  407525:	mov    rdi,rax
  407528:	mov    r8,r9
  40752b:	call   0x417820
  407530:	mov    r9,QWORD PTR [rsp+0x58]
  407535:	test   r9,r9
  407538:	mov    BYTE PTR [rdi+r9*1],0x0
  40753d:	jne    0x4078ee
  407543:	lea    rcx,[r14+0x19]
  407547:	call   0x4038d0
  40754c:	mov    rdx,QWORD PTR [rsp+0x40]
  407551:	lea    rcx,[rax+0x18]
  407555:	mov    r15,rax
  407558:	mov    QWORD PTR [rax+0x10],0x0
  407560:	mov    DWORD PTR [rax],0x6
  407566:	mov    r8,r14
  407569:	mov    QWORD PTR [rax+0x8],rcx
  40756d:	call   0x417820
  407572:	mov    BYTE PTR [r15+r14*1+0x18],0x0
  407578:	mov    rdx,r15
  40757b:	mov    rcx,r13
  40757e:	call   0x403920
  407583:	mov    rcx,rdi
  407586:	call   0x417860
  40758b:	jmp    0x4073d3
  407590:	lea    rcx,[r14+0x19]
  407594:	mov    QWORD PTR [rsp+0x60],r10
  407599:	mov    QWORD PTR [rsp+0x58],r9
  40759e:	call   0x4038d0
  4075a3:	mov    rdi,rax
  4075a6:	movzx  eax,BYTE PTR [r15]
  4075aa:	mov    r9,QWORD PTR [rsp+0x58]
  4075af:	mov    r10,QWORD PTR [rsp+0x60]
  4075b4:	cmp    al,0x7f
  4075b6:	jbe    0x407610
  4075b8:	test   r9,r9
  4075bb:	je     0x40761f
  4075bd:	xor    r8d,r8d
  4075c0:	xor    edx,edx
  4075c2:	mov    rcx,r15
  4075c5:	call   0x417788
  4075ca:	mov    DWORD PTR [rdi+0x10],eax
  4075cd:	lea    rcx,[rdi+0x18]
  4075d1:	mov    rdx,QWORD PTR [rsp+0x40]
  4075d6:	mov    DWORD PTR [rdi],0x5
  4075dc:	mov    r8,r14
  4075df:	mov    QWORD PTR [rdi+0x8],rcx
  4075e3:	call   0x417820
  4075e8:	mov    BYTE PTR [rdi+r14*1+0x18],0x0
  4075ee:	mov    rdx,rdi
  4075f1:	mov    rcx,r13
  4075f4:	call   0x403920
  4075f9:	jmp    0x4073d3
  4075fe:	xchg   ax,ax
  407600:	add    r15,0x1
  407604:	movzx  eax,BYTE PTR [r15]
  407608:	sub    r9,0x1
  40760c:	cmp    al,0x7f
  40760e:	ja     0x4075b8
  407610:	test   DWORD PTR [r10+rax*4],0xc01
  407618:	je     0x4075b8
  40761a:	test   r9,r9
  40761d:	jne    0x407600
  40761f:	mov    DWORD PTR [rdi+0x10],0x0
  407626:	jmp    0x4075cd
  407628:	lea    rcx,[r14+0x19]
  40762c:	mov    QWORD PTR [rsp+0x60],r10
  407631:	mov    QWORD PTR [rsp+0x58],r9
  407636:	call   0x4038d0
  40763b:	movzx  edx,BYTE PTR [r15]
  40763f:	mov    rdi,rax
  407642:	mov    r9,QWORD PTR [rsp+0x58]
  407647:	mov    r10,QWORD PTR [rsp+0x60]
  40764c:	cmp    dl,0x7f
  40764f:	jbe    0x4076c1
  407651:	test   r9,r9
  407654:	je     0x4076d2
  407656:	cmp    edx,0x7f
  407659:	ja     0x407959
  40765f:	mov    edx,edx
  407661:	mov    eax,DWORD PTR [r10+rdx*4]
  407665:	test   eax,0x30000
  40766a:	je     0x407989
  407670:	mov    rcx,r15
  407673:	call   0x4178c0
  407678:	mov    DWORD PTR [rdi+0x10],eax
  40767b:	lea    rcx,[rdi+0x18]
  40767f:	mov    rdx,QWORD PTR [rsp+0x40]
  407684:	mov    DWORD PTR [rdi],0x3
  40768a:	mov    r8,r14
  40768d:	mov    QWORD PTR [rdi+0x8],rcx
  407691:	call   0x417820
  407696:	mov    rax,QWORD PTR [rdi+0x8]
  40769a:	mov    rdx,rdi
  40769d:	mov    rcx,r13
  4076a0:	mov    BYTE PTR [rax+r14*1],0x0
  4076a5:	call   0x403920
  4076aa:	jmp    0x4073d3
  4076af:	nop
  4076b0:	add    r15,0x1
  4076b4:	movzx  edx,BYTE PTR [r15]
  4076b8:	sub    r9,0x1
  4076bc:	cmp    dl,0x7f
  4076bf:	ja     0x407651
  4076c1:	mov    eax,edx
  4076c3:	test   DWORD PTR [r10+rax*4],0xc01
  4076cb:	je     0x407651
  4076cd:	test   r9,r9
  4076d0:	jne    0x4076b0
  4076d2:	mov    DWORD PTR [rdi+0x10],0x0
  4076d9:	jmp    0x40767b
  4076db:	mov    rdx,QWORD PTR [rsp+0x40]
  4076e0:	mov    QWORD PTR [rsp+0x20],r9
  4076e5:	mov    r8,r14
  4076e8:	mov    r9,r15
  4076eb:	mov    rcx,r13
  4076ee:	mov    QWORD PTR [rsp+0x58],r10
  4076f3:	call   0x4039e0
  4076f8:	mov    r15d,DWORD PTR [rip+0x11191]        # 0x418890
  4076ff:	mov    r14,rax
  407702:	cmp    r15d,0x2
  407706:	je     0x4073d3
  40770c:	lea    rdi,[rax+0x10]
  407710:	movzx  eax,BYTE PTR [rax+0x10]
  407714:	mov    r10,QWORD PTR [rsp+0x58]
  407719:	cmp    al,0x7f
  40771b:	ja     0x40790f
  407721:	test   DWORD PTR [r10+rax*4],0xc01
  407729:	je     0x40790f
  40772f:	mov    rax,QWORD PTR [rip+0x19aaa]        # 0x4211e0
  407736:	test   rax,rax
  407739:	je     0x4079f6
  40773f:	mov    r9,rax
  407742:	movzx  ecx,BYTE PTR [r14+0x11]
  407747:	lea    rdx,[r14+0x11]
  40774b:	cmp    BYTE PTR [rax+rcx*1],0x0
  40774f:	je     0x40775e
  407751:	add    rdx,0x1
  407755:	movzx  ecx,BYTE PTR [rdx]
  407758:	cmp    BYTE PTR [rax+rcx*1],0x0
  40775c:	jne    0x407751
  40775e:	mov    rcx,rdx
  407761:	mov    QWORD PTR [rsp+0x60],r9
  407766:	mov    QWORD PTR [rsp+0x58],rdx
  40776b:	call   0x4177b8
  407770:	mov    rdx,QWORD PTR [rsp+0x58]
  407775:	lea    r8,[rax+0x1]
  407779:	mov    rcx,rdi
  40777c:	mov    QWORD PTR [rsp+0x40],rax
  407781:	call   0x417818
  407786:	mov    r10,QWORD PTR [rsp+0x40]
  40778b:	mov    r9,QWORD PTR [rsp+0x60]
  407790:	lea    rdx,[rdi+r10*1]
  407794:	test   r9,r9
  407797:	je     0x407a0c
  40779d:	cmp    rdi,rdx
  4077a0:	jb     0x4077c9
  4077a2:	mov    rcx,rdi
  4077a5:	mov    QWORD PTR [rsp+0x40],r9
  4077aa:	call   0x4177b8
  4077af:	lea    rdx,[rdi+rax*1]
  4077b3:	mov    r9,QWORD PTR [rsp+0x40]
  4077b8:	cmp    rdi,rdx
  4077bb:	jb     0x4077c9
  4077bd:	jmp    0x4077d4
  4077bf:	nop
  4077c0:	sub    rdx,0x1
  4077c4:	cmp    rdi,rdx
  4077c7:	jae    0x4077d4
  4077c9:	movzx  eax,BYTE PTR [rdx-0x1]
  4077cd:	cmp    BYTE PTR [r9+rax*1],0x0
  4077d2:	jne    0x4077c0
  4077d4:	cmp    r15d,0x1
  4077d8:	mov    BYTE PTR [rdx],0x0
  4077db:	je     0x4073d3
  4077e1:	movzx  eax,BYTE PTR [r14+0x10]
  4077e6:	cmp    al,0x22
  4077e8:	je     0x4077f2
  4077ea:	cmp    al,0x27
  4077ec:	jne    0x4073d3
  4077f2:	movzx  eax,BYTE PTR [rdx-0x1]
  4077f6:	cmp    al,0x22
  4077f8:	je     0x407802
  4077fa:	cmp    al,0x27
  4077fc:	jne    0x4073d3
  407802:	xor    edx,edx
  407804:	mov    rcx,rdi
  407807:	call   0x406ae0
  40780c:	jmp    0x4073d3
  407811:	mov    ecx,0xa
  407816:	mov    QWORD PTR [rsp+0x40],r8
  40781b:	call   0x4033e0
  407820:	mov    r8,QWORD PTR [rsp+0x40]
  407825:	jmp    0x406e84
  40782a:	mov    ecx,0x1c
  40782f:	call   0x4033e0
  407834:	jmp    0x406e44
  407839:	mov    r8,QWORD PTR [rip+0x199a0]        # 0x4211e0
  407840:	test   r8,r8
  407843:	mov    rdx,r8
  407846:	je     0x4079cb
  40784c:	cmp    r15,rbx
  40784f:	jb     0x4078c5
  407851:	mov    rcx,r15
  407854:	mov    QWORD PTR [rsp+0x68],r10
  407859:	mov    QWORD PTR [rsp+0x60],rdx
  40785e:	mov    QWORD PTR [rsp+0x58],r8
  407863:	call   0x4177b8
  407868:	lea    r9,[r15+rax*1]
  40786c:	mov    r8,QWORD PTR [rsp+0x58]
  407871:	mov    rdx,QWORD PTR [rsp+0x60]
  407876:	mov    r10,QWORD PTR [rsp+0x68]
  40787b:	cmp    r15,r9
  40787e:	jb     0x40788b
  407880:	jmp    0x407897
  407882:	sub    r9,0x1
  407886:	cmp    r15,r9
  407889:	jae    0x407897
  40788b:	movzx  eax,BYTE PTR [r9-0x1]
  407890:	cmp    BYTE PTR [r8+rax*1],0x0
  407895:	jne    0x407882
  407897:	mov    rax,rdx
  40789a:	jmp    0x4074cb
  40789f:	cmp    BYTE PTR [rdi+0x1],0x3e
  4078a3:	lea    rax,[rdi+0x1]
  4078a7:	jne    0x407041
  4078ad:	mov    DWORD PTR [rsp+0x70],0x0
  4078b5:	mov    rdi,rax
  4078b8:	jmp    0x40739f
  4078bd:	mov    rbx,r14
  4078c0:	jmp    0x4071c5
  4078c5:	mov    r9,rbx
  4078c8:	jmp    0x40788b
  4078ca:	call   QWORD PTR [rip+0x1bd48]        # 0x423618
  4078d0:	mov    DWORD PTR [rax],0x16
  4078d6:	xor    eax,eax
  4078d8:	jmp    0x406ed9
  4078dd:	call   QWORD PTR [rip+0x1bd35]        # 0x423618
  4078e3:	mov    DWORD PTR [rax],0x2
  4078e9:	jmp    0x406ec6
  4078ee:	mov    rdx,QWORD PTR [rsp+0x40]
  4078f3:	mov    r8,r14
  4078f6:	mov    rcx,rdi
  4078f9:	call   0x406d20
  4078fe:	test   rax,rax
  407901:	mov    r15,rax
  407904:	jne    0x407578
  40790a:	jmp    0x407583
  40790f:	mov    rcx,rdi
  407912:	call   0x4177b8
  407917:	mov    r9,QWORD PTR [rip+0x198c2]        # 0x4211e0
  40791e:	lea    rdx,[rdi+rax*1]
  407922:	jmp    0x407794
  407927:	mov    ecx,0x1c
  40792c:	mov    QWORD PTR [rsp+0x58],r10
  407931:	call   0x4033e0
  407936:	mov    r10,QWORD PTR [rsp+0x58]
  40793b:	jmp    0x407003
  407940:	mov    ecx,0xa
  407945:	mov    QWORD PTR [rsp+0x40],r8
  40794a:	call   0x4033e0
  40794f:	mov    r8,QWORD PTR [rsp+0x40]
  407954:	jmp    0x4070ab
  407959:	mov    eax,0x1
  40795e:	mov    DWORD PTR [rdi+0x10],eax
  407961:	jmp    0x40767b
  407966:	mov    ecx,0xc
  40796b:	mov    QWORD PTR [rsp+0x60],r10
  407970:	mov    QWORD PTR [rsp+0x58],r9
  407975:	call   0x4033e0
  40797a:	mov    r10,QWORD PTR [rsp+0x60]
  40797f:	mov    r9,QWORD PTR [rsp+0x58]
  407984:	jmp    0x4074e4
  407989:	test   eax,0x8000002
  40798e:	sete   al
  407991:	movzx  eax,al
  407994:	jmp    0x40795e
  407996:	mov    ecx,0xc
  40799b:	mov    QWORD PTR [rsp+0x58],r10
  4079a0:	call   0x4033e0
  4079a5:	mov    r10,QWORD PTR [rsp+0x58]
  4079aa:	jmp    0x407434
  4079af:	mov    ecx,0xc
  4079b4:	mov    QWORD PTR [rsp+0x58],r10
  4079b9:	call   0x4033e0
  4079be:	movzx  edx,BYTE PTR [rdi]
  4079c1:	mov    r10,QWORD PTR [rsp+0x58]
  4079c6:	jmp    0x407347
  4079cb:	mov    ecx,0xc
  4079d0:	mov    QWORD PTR [rsp+0x58],r10
  4079d5:	call   0x4033e0
  4079da:	mov    rdx,QWORD PTR [rip+0x197ff]        # 0x4211e0
  4079e1:	mov    r8,rax
  4079e4:	mov    r10,QWORD PTR [rsp+0x58]
  4079e9:	jmp    0x40784c
  4079ee:	mov    r15,rcx
  4079f1:	jmp    0x407190
  4079f6:	mov    ecx,0xc
  4079fb:	call   0x4033e0
  407a00:	mov    r9,QWORD PTR [rip+0x197d9]        # 0x4211e0
  407a07:	jmp    0x407742
  407a0c:	mov    ecx,0xc
  407a11:	mov    QWORD PTR [rsp+0x40],rdx
  407a16:	call   0x4033e0
  407a1b:	mov    rdx,QWORD PTR [rsp+0x40]
  407a20:	mov    r9,rax
  407a23:	jmp    0x40779d
  407a28:	mov    r15,rbx
  407a2b:	jmp    0x4073b4
  407a30:	push   rdi
  407a31:	sub    rsp,0x90
  407a38:	xor    eax,eax
  407a3a:	lea    rdi,[rsp+0x20]
  407a3f:	mov    r9,rcx
  407a42:	mov    ecx,0xd
  407a47:	rep stos QWORD PTR es:[rdi],rax
  407a4a:	mov    eax,edx
  407a4c:	lea    rdx,[rsp+0x20]
  407a51:	mov    QWORD PTR [rsp+0x38],rax
  407a56:	mov    cl,0x3
  407a58:	call   QWORD PTR [r9+0x38]
  407a5c:	mov    rax,QWORD PTR [rsp+0x38]
  407a61:	add    rsp,0x90
  407a68:	pop    rdi
  407a69:	ret    
  407a6a:	nop    WORD PTR [rax+rax*1+0x0]
  407a70:	push   rbx
  407a71:	sub    rsp,0x40
  407a75:	cmp    rcx,0x2
  407a79:	mov    rbx,rdx
  407a7c:	je     0x407ad0
  407a7e:	cmp    rcx,0x3
  407a82:	je     0x407ab0
  407a84:	cmp    rcx,0x1
  407a88:	je     0x407aa0
  407a8a:	xor    eax,eax
  407a8c:	test   BYTE PTR [rdx+0x10],0x8
  407a90:	je     0x407b30
  407a96:	add    rsp,0x40
  407a9a:	pop    rbx
  407a9b:	ret    
  407a9c:	nop    DWORD PTR [rax+0x0]
  407aa0:	call   0x401f30
  407aa5:	xor    eax,eax
  407aa7:	add    rsp,0x40
  407aab:	pop    rbx
  407aac:	ret    
  407aad:	nop    DWORD PTR [rax]
  407ab0:	mov    rax,QWORD PTR [rdx+0x18]
  407ab4:	cmp    r9d,eax
  407ab7:	jbe    0x407b20
  407ab9:	mov    eax,eax
  407abb:	mov    rax,QWORD PTR [r8+rax*8]
  407abf:	mov    QWORD PTR [rdx+0x18],rax
  407ac3:	xor    eax,eax
  407ac5:	add    rsp,0x40
  407ac9:	pop    rbx
  407aca:	ret    
  407acb:	nop    DWORD PTR [rax+rax*1+0x0]
  407ad0:	mov    rbx,QWORD PTR [rdx+0x18]
  407ad4:	cmp    r9d,ebx
  407ad7:	ja     0x407af0
  407ad9:	lea    rcx,[rip+0x13284]        # 0x41ad64
  407ae0:	mov    edx,ebx
  407ae2:	call   0x401ea0
  407ae7:	xor    eax,eax
  407ae9:	add    rsp,0x40
  407aed:	pop    rbx
  407aee:	ret    
  407aef:	nop
  407af0:	mov    QWORD PTR [rsp+0x38],r8
  407af5:	mov    ebx,ebx
  407af7:	call   QWORD PTR [rip+0x1bad3]        # 0x4235d0
  407afd:	mov    r8,QWORD PTR [rsp+0x38]
  407b02:	lea    rdx,[rax+0x30]
  407b06:	mov    rcx,QWORD PTR [r8+rbx*8]
  407b0a:	call   0x417870
  407b0f:	xor    eax,eax
  407b11:	add    rsp,0x40
  407b15:	pop    rbx
  407b16:	ret    
  407b17:	nop    WORD PTR [rax+rax*1+0x0]
  407b20:	lea    rax,[rip+0x13248]        # 0x41ad6f
  407b27:	jmp    0x407a96
  407b2c:	nop    DWORD PTR [rax+0x0]
  407b30:	mov    DWORD PTR [rsp+0x20],r9d
  407b35:	mov    r9,r8
  407b38:	mov    r8,rdx
  407b3b:	mov    rdx,rcx
  407b3e:	mov    rcx,QWORD PTR [rbx+0x18]
  407b42:	call   0x402260
  407b47:	test   BYTE PTR [rbx+0x10],0x40
  407b4b:	je     0x407a96
  407b51:	mov    rcx,QWORD PTR [rbx+0x18]
  407b55:	mov    QWORD PTR [rsp+0x38],rax
  407b5a:	call   0x417860
  407b5f:	and    DWORD PTR [rbx+0x10],0xffffffbf
  407b63:	mov    QWORD PTR [rbx+0x18],0x0
  407b6b:	mov    rax,QWORD PTR [rsp+0x38]
  407b70:	jmp    0x407a96
  407b75:	nop
  407b76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407b80:	push   rsi
  407b81:	push   rbx
  407b82:	sub    rsp,0x28
  407b86:	mov    rsi,QWORD PTR [rcx+0x18]
  407b8a:	mov    rbx,rcx
  407b8d:	mov    rdx,rcx
  407b90:	mov    ecx,0x3
  407b95:	call   QWORD PTR [rbx+0x38]
  407b98:	mov    rax,QWORD PTR [rbx+0x18]
  407b9c:	mov    QWORD PTR [rbx+0x18],rsi
  407ba0:	add    rsp,0x28
  407ba4:	pop    rbx
  407ba5:	pop    rsi
  407ba6:	ret    
  407ba7:	nop    WORD PTR [rax+rax*1+0x0]
  407bb0:	push   r15
  407bb2:	push   r14
  407bb4:	push   r13
  407bb6:	push   r12
  407bb8:	push   rbp
  407bb9:	push   rdi
  407bba:	push   rsi
  407bbb:	push   rbx
  407bbc:	sub    rsp,0xe8
  407bc3:	cmp    rcx,0x2
  407bc7:	mov    r13,rcx
  407bca:	mov    r12,rdx
  407bcd:	mov    rbx,r8
  407bd0:	mov    ebp,r9d
  407bd3:	je     0x407e71
  407bd9:	cmp    rcx,0x3
  407bdd:	je     0x407da0
  407be3:	cmp    rcx,0x1
  407be7:	je     0x407d80
  407bed:	test   BYTE PTR [rdx+0x10],0x8
  407bf1:	jne    0x407d8b
  407bf7:	mov    rax,QWORD PTR [rip+0x195e2]        # 0x4211e0
  407bfe:	mov    r15,QWORD PTR [rdx+0x18]
  407c02:	mov    rsi,QWORD PTR [rdx+0x20]
  407c06:	test   rax,rax
  407c09:	jne    0x407c14
  407c0b:	jmp    0x408190
  407c10:	add    r15,0x1
  407c14:	movzx  ecx,BYTE PTR [r15]
  407c18:	cmp    BYTE PTR [rax+rcx*1],0x0
  407c1c:	jne    0x407c10
  407c1e:	test   cl,cl
  407c20:	je     0x407f60
  407c26:	cmp    cl,0x3d
  407c29:	mov    QWORD PTR [rsp+0x30],rsi
  407c2e:	je     0x408120
  407c34:	cmp    cl,0x5e
  407c37:	je     0x407f14
  407c3d:	cmp    cl,0x2c
  407c40:	je     0x407f60
  407c46:	mov    BYTE PTR [rsp+0x4f],0x0
  407c4b:	lea    rax,[rsp+0x58]
  407c50:	movzx  edx,BYTE PTR [r15]
  407c54:	mov    QWORD PTR [rsp+0x38],rax
  407c59:	lea    rax,[rsp+0x60]
  407c5e:	mov    QWORD PTR [rsp+0x40],rax
  407c63:	test   dl,dl
  407c65:	je     0x4080d1
  407c6b:	cmp    dl,0x2c
  407c6e:	je     0x408010
  407c74:	jg     0x407ff0
  407c7a:	cmp    dl,0x21
  407c7d:	je     0x408060
  407c83:	cmp    dl,0x2b
  407c86:	jne    0x407ffe
  407c8c:	xor    r14d,r14d
  407c8f:	mov    rax,QWORD PTR [rip+0x1954a]        # 0x4211e0
  407c96:	lea    rsi,[r15+0x1]
  407c9a:	test   rax,rax
  407c9d:	je     0x408107
  407ca3:	movzx  edx,BYTE PTR [r15+0x1]
  407ca8:	mov    r15,rsi
  407cab:	cmp    BYTE PTR [rax+rdx*1],0x0
  407caf:	je     0x407cbf
  407cb1:	add    r15,0x1
  407cb5:	movzx  edx,BYTE PTR [r15]
  407cb9:	cmp    BYTE PTR [rax+rdx*1],0x0
  407cbd:	jne    0x407cb1
  407cbf:	mov    rax,QWORD PTR [rip+0x1960a]        # 0x4212d0
  407cc6:	test   rax,rax
  407cc9:	je     0x4080b3
  407ccf:	movzx  edx,BYTE PTR [r15]
  407cd3:	test   dl,dl
  407cd5:	je     0x4080d1
  407cdb:	cmp    BYTE PTR [rax+rdx*1],0x0
  407cdf:	jne    0x4080d1
  407ce5:	mov    rcx,r15
  407ce8:	jmp    0x407cf6
  407cea:	nop    WORD PTR [rax+rax*1+0x0]
  407cf0:	cmp    BYTE PTR [rax+rdx*1],0x0
  407cf4:	jne    0x407d01
  407cf6:	add    rcx,0x1
  407cfa:	movzx  edx,BYTE PTR [rcx]
  407cfd:	test   dl,dl
  407cff:	jne    0x407cf0
  407d01:	mov    r11d,ecx
  407d04:	sub    r11d,r15d
  407d07:	test   r11d,r11d
  407d0a:	je     0x4080d1
  407d10:	cmp    r11d,0x3
  407d14:	je     0x408080
  407d1a:	cmp    r11d,0x4
  407d1e:	jne    0x407f70
  407d24:	lea    rdi,[rip+0x12f30]        # 0x41ac5b
  407d2b:	mov    ecx,0x4
  407d30:	mov    rsi,r15
  407d33:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407d35:	jne    0x407f70
  407d3b:	add    r15,0x4
  407d3f:	test   r14b,r14b
  407d42:	jne    0x407d50
  407d44:	mov    QWORD PTR [rsp+0x30],0x0
  407d4d:	nop    DWORD PTR [rax]
  407d50:	mov    rax,QWORD PTR [rip+0x19489]        # 0x4211e0
  407d57:	test   rax,rax
  407d5a:	jne    0x407d65
  407d5c:	jmp    0x4080c2
  407d61:	add    r15,0x1
  407d65:	movzx  ecx,BYTE PTR [r15]
  407d69:	cmp    BYTE PTR [rax+rcx*1],0x0
  407d6d:	mov    rdx,rcx
  407d70:	jne    0x407d61
  407d72:	jmp    0x407c63
  407d77:	nop    WORD PTR [rax+rax*1+0x0]
  407d80:	mov    ecx,0x1
  407d85:	call   0x401f30
  407d8a:	nop
  407d8b:	add    rsp,0xe8
  407d92:	pop    rbx
  407d93:	pop    rsi
  407d94:	pop    rdi
  407d95:	pop    rbp
  407d96:	pop    r12
  407d98:	pop    r13
  407d9a:	pop    r14
  407d9c:	pop    r15
  407d9e:	ret    
  407d9f:	nop
  407da0:	mov    eax,0x1
  407da5:	mov    ecx,r9d
  407da8:	shl    eax,cl
  407daa:	lea    r13d,[rax-0x1]
  407dae:	mov    r14,r13
  407db1:	and    r14,QWORD PTR [rdx+0x20]
  407db5:	je     0x408116
  407dbb:	mov    rsi,r8
  407dbe:	mov    edi,0x1
  407dc3:	xor    r15d,r15d
  407dc6:	jmp    0x407dd9
  407dc8:	nop    DWORD PTR [rax+rax*1+0x0]
  407dd0:	add    rsi,0x8
  407dd4:	shr    r14,1
  407dd7:	je     0x407df5
  407dd9:	test   r14b,0x1
  407ddd:	je     0x407dec
  407ddf:	mov    rcx,QWORD PTR [rsi]
  407de2:	call   0x4177b8
  407de7:	lea    rdi,[rdi+rax*1+0x4]
  407dec:	add    r15d,0x1
  407df0:	cmp    ebp,r15d
  407df3:	ja     0x407dd0
  407df5:	mov    rcx,rdi
  407df8:	mov    rbp,r13
  407dfb:	call   0x4038d0
  407e00:	and    rbp,QWORD PTR [r12+0x20]
  407e05:	mov    r14,rax
  407e08:	mov    QWORD PTR [r12+0x18],rax
  407e0d:	je     0x407f00
  407e13:	xor    r12d,r12d
  407e16:	jmp    0x407e34
  407e18:	nop    DWORD PTR [rax+rax*1+0x0]
  407e20:	mov    edx,0x2b20
  407e25:	lea    r14,[rax+0x3]
  407e29:	mov    BYTE PTR [rax+0x2],0x20
  407e2d:	mov    WORD PTR [rax],dx
  407e30:	add    r12d,0x1
  407e34:	mov    eax,ebp
  407e36:	shr    rbp,1
  407e39:	and    eax,0x1
  407e3c:	test   eax,eax
  407e3e:	je     0x407e30
  407e40:	mov    eax,r12d
  407e43:	mov    r13,QWORD PTR [rbx+rax*8]
  407e47:	mov    rcx,r13
  407e4a:	call   0x4177b8
  407e4f:	mov    rdx,r13
  407e52:	mov    r8,rax
  407e55:	mov    rcx,r14
  407e58:	mov    rsi,rax
  407e5b:	call   0x417820
  407e60:	test   rbp,rbp
  407e63:	lea    rax,[r14+rsi*1]
  407e67:	jne    0x407e20
  407e69:	mov    BYTE PTR [rax],0x0
  407e6c:	jmp    0x407d8b
  407e71:	mov    eax,0x1
  407e76:	mov    ecx,r9d
  407e79:	xor    r13d,r13d
  407e7c:	shl    rax,cl
  407e7f:	xor    edx,edx
  407e81:	mov    rsi,QWORD PTR [rip+0x1b748]        # 0x4235d0
  407e88:	sub    rax,0x1
  407e8c:	and    rax,QWORD PTR [r12+0x20]
  407e91:	mov    r14,rsi
  407e94:	mov    r12,rax
  407e97:	jne    0x407ecb
  407e99:	jmp    0x407d8b
  407e9e:	xchg   ax,ax
  407ea0:	call   rdi
  407ea2:	mov    rcx,QWORD PTR [rbx]
  407ea5:	lea    rdx,[rax+0x30]
  407ea9:	call   0x417870
  407eae:	mov    rdx,r15
  407eb1:	add    r13d,0x1
  407eb5:	cmp    ebp,r13d
  407eb8:	jbe    0x407d8b
  407ebe:	add    rbx,0x8
  407ec2:	shr    r12,1
  407ec5:	je     0x407d8b
  407ecb:	test   r12b,0x1
  407ecf:	je     0x407eb1
  407ed1:	test   rdx,rdx
  407ed4:	lea    r15,[rdx+0x1]
  407ed8:	mov    rdi,rsi
  407edb:	je     0x407ea0
  407edd:	call   r14
  407ee0:	lea    rcx,[rip+0x12f35]        # 0x41ae1c
  407ee7:	lea    r9,[rax+0x30]
  407eeb:	mov    r8d,0x3
  407ef1:	mov    edx,0x1
  407ef6:	mov    rdi,r14
  407ef9:	call   0x417848
  407efe:	jmp    0x407ea0
  407f00:	mov    BYTE PTR [rax],0x0
  407f03:	jmp    0x407d8b
  407f08:	mov    r15,rsi
  407f0b:	mov    QWORD PTR [rsp+0x30],0x0
  407f14:	mov    rax,QWORD PTR [rip+0x192c5]        # 0x4211e0
  407f1b:	lea    rsi,[r15+0x1]
  407f1f:	test   rax,rax
  407f22:	je     0x40819f
  407f28:	movzx  ecx,BYTE PTR [r15+0x1]
  407f2d:	mov    r15,rsi
  407f30:	cmp    BYTE PTR [rax+rcx*1],0x0
  407f34:	mov    rdx,rcx
  407f37:	je     0x407f51
  407f39:	nop    DWORD PTR [rax+0x0]
  407f40:	add    r15,0x1
  407f44:	movzx  ecx,BYTE PTR [r15]
  407f48:	cmp    BYTE PTR [rax+rcx*1],0x0
  407f4c:	mov    rdx,rcx
  407f4f:	jne    0x407f40
  407f51:	cmp    dl,0x2c
  407f54:	mov    BYTE PTR [rsp+0x4f],0x1
  407f59:	jne    0x407c4b
  407f5f:	nop
  407f60:	mov    QWORD PTR [r12+0x20],0x0
  407f69:	jmp    0x407d8b
  407f6e:	xchg   ax,ax
  407f70:	mov    rdx,QWORD PTR [rsp+0x38]
  407f75:	xor    r8d,r8d
  407f78:	mov    rcx,r15
  407f7b:	mov    DWORD PTR [rsp+0x48],r11d
  407f80:	call   0x417780
  407f85:	movsxd rdi,DWORD PTR [rsp+0x48]
  407f8a:	mov    rdx,QWORD PTR [rsp+0x58]
  407f8f:	mov    eax,eax
  407f91:	lea    rsi,[r15+rdi*1]
  407f95:	cmp    rsi,rdx
  407f98:	je     0x407fd7
  407f9a:	mov    r15,QWORD PTR [rsp+0x40]
  407f9f:	mov    r8,rdi
  407fa2:	mov    rcx,r15
  407fa5:	call   0x417820
  407faa:	mov    BYTE PTR [rsp+rdi*1+0x60],0x0
  407faf:	mov    r9,rbx
  407fb2:	mov    DWORD PTR [rsp+0x20],ebp
  407fb6:	mov    r8,r12
  407fb9:	mov    rdx,r13
  407fbc:	mov    rcx,r15
  407fbf:	call   0x402260
  407fc4:	cmp    ebp,eax
  407fc6:	jbe    0x407f60
  407fc8:	mov    ecx,eax
  407fca:	mov    edx,0x1
  407fcf:	shl    edx,cl
  407fd1:	test   edx,edx
  407fd3:	mov    eax,edx
  407fd5:	je     0x407f60
  407fd7:	test   r14b,r14b
  407fda:	je     0x408070
  407fe0:	not    rax
  407fe3:	and    QWORD PTR [rsp+0x30],rax
  407fe8:	mov    r15,rsi
  407feb:	jmp    0x407d50
  407ff0:	cmp    dl,0x2d
  407ff3:	je     0x408060
  407ff5:	cmp    dl,0x7c
  407ff8:	je     0x407c8c
  407ffe:	xor    r14d,r14d
  408001:	jmp    0x407cbf
  408006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408010:	mov    rax,QWORD PTR [rip+0x191c9]        # 0x4211e0
  408017:	lea    rsi,[r15+0x1]
  40801b:	test   rax,rax
  40801e:	je     0x408181
  408024:	movzx  ecx,BYTE PTR [r15+0x1]
  408029:	cmp    BYTE PTR [rax+rcx*1],0x0
  40802d:	mov    rdx,rcx
  408030:	je     0x408042
  408032:	add    rsi,0x1
  408036:	movzx  ecx,BYTE PTR [rsi]
  408039:	cmp    BYTE PTR [rax+rcx*1],0x0
  40803d:	mov    rdx,rcx
  408040:	jne    0x408032
  408042:	cmp    dl,0x7c
  408045:	je     0x407f60
  40804b:	cmp    dl,0x2c
  40804e:	je     0x407f60
  408054:	movzx  edx,BYTE PTR [rsi]
  408057:	mov    r15,rsi
  40805a:	jmp    0x407c63
  40805f:	nop
  408060:	mov    r14d,0x1
  408066:	jmp    0x407c8f
  40806b:	nop    DWORD PTR [rax+rax*1+0x0]
  408070:	or     QWORD PTR [rsp+0x30],rax
  408075:	jmp    0x407fe8
  40807a:	nop    WORD PTR [rax+rax*1+0x0]
  408080:	lea    rdi,[rip+0x12c7a]        # 0x41ad01
  408087:	mov    ecx,0x3
  40808c:	mov    rsi,r15
  40808f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  408091:	jne    0x407f70
  408097:	add    r15,0x3
  40809b:	test   r14b,r14b
  40809e:	jne    0x407d44
  4080a4:	mov    eax,0xffffffff
  4080a9:	mov    QWORD PTR [rsp+0x30],rax
  4080ae:	jmp    0x407d50
  4080b3:	mov    ecx,0x2a
  4080b8:	call   0x4033e0
  4080bd:	jmp    0x407ccf
  4080c2:	mov    ecx,0xc
  4080c7:	call   0x4033e0
  4080cc:	jmp    0x407d65
  4080d1:	cmp    BYTE PTR [rsp+0x4f],0x0
  4080d6:	je     0x4080e2
  4080d8:	mov    eax,0xffffffff
  4080dd:	xor    QWORD PTR [rsp+0x30],rax
  4080e2:	cmp    ebp,0x3f
  4080e5:	ja     0x4080f8
  4080e7:	mov    eax,0x1
  4080ec:	mov    ecx,ebp
  4080ee:	shl    eax,cl
  4080f0:	sub    eax,0x1
  4080f3:	and    QWORD PTR [rsp+0x30],rax
  4080f8:	mov    rax,QWORD PTR [rsp+0x30]
  4080fd:	mov    QWORD PTR [r12+0x20],rax
  408102:	jmp    0x407d8b
  408107:	mov    ecx,0xc
  40810c:	call   0x4033e0
  408111:	jmp    0x407ca3
  408116:	mov    edi,0x1
  40811b:	jmp    0x407df5
  408120:	mov    rax,QWORD PTR [rip+0x190b9]        # 0x4211e0
  408127:	lea    rsi,[r15+0x1]
  40812b:	test   rax,rax
  40812e:	je     0x4081ae
  408130:	movzx  ecx,BYTE PTR [r15+0x1]
  408135:	cmp    BYTE PTR [rax+rcx*1],0x0
  408139:	mov    rdx,rcx
  40813c:	je     0x408150
  40813e:	xchg   ax,ax
  408140:	add    rsi,0x1
  408144:	movzx  ecx,BYTE PTR [rsi]
  408147:	cmp    BYTE PTR [rax+rcx*1],0x0
  40814b:	mov    rdx,rcx
  40814e:	jne    0x408140
  408150:	cmp    dl,0x3d
  408153:	je     0x407f60
  408159:	cmp    dl,0x5e
  40815c:	je     0x407f08
  408162:	cmp    dl,0x2c
  408165:	je     0x407f60
  40816b:	mov    r15,rsi
  40816e:	mov    BYTE PTR [rsp+0x4f],0x0
  408173:	mov    QWORD PTR [rsp+0x30],0x0
  40817c:	jmp    0x407c4b
  408181:	mov    ecx,0xc
  408186:	call   0x4033e0
  40818b:	jmp    0x408024
  408190:	mov    ecx,0xc
  408195:	call   0x4033e0
  40819a:	jmp    0x407c14
  40819f:	mov    ecx,0xc
  4081a4:	call   0x4033e0
  4081a9:	jmp    0x407f28
  4081ae:	mov    ecx,0xc
  4081b3:	call   0x4033e0
  4081b8:	jmp    0x408130
  4081bd:	nop    DWORD PTR [rax]
  4081c0:	push   r15
  4081c2:	push   r14
  4081c4:	push   r13
  4081c6:	push   r12
  4081c8:	push   rbp
  4081c9:	push   rdi
  4081ca:	push   rsi
  4081cb:	push   rbx
  4081cc:	sub    rsp,0x68
  4081d0:	cmp    rcx,0xf
  4081d4:	mov    rsi,rcx
  4081d7:	mov    rbx,rdx
  4081da:	mov    edi,r8d
  4081dd:	mov    rbp,r9
  4081e0:	ja     0x408200
  4081e2:	cmp    rcx,0x1
  4081e6:	je     0x408310
  4081ec:	add    rsp,0x68
  4081f0:	pop    rbx
  4081f1:	pop    rsi
  4081f2:	pop    rdi
  4081f3:	pop    rbp
  4081f4:	pop    r12
  4081f6:	pop    r13
  4081f8:	pop    r14
  4081fa:	pop    r15
  4081fc:	ret    
  4081fd:	nop    DWORD PTR [rax]
  408200:	test   BYTE PTR [rdx+0x10],0x8
  408204:	je     0x408220
  408206:	mov    rcx,QWORD PTR [rdx+0x20]
  40820a:	test   rcx,rcx
  40820d:	je     0x4081ec
  40820f:	call   0x417860
  408214:	jmp    0x4081ec
  408216:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408220:	mov    r13,QWORD PTR [rdx+0x18]
  408224:	mov    r14,QWORD PTR [rip+0x1b3ed]        # 0x423618
  40822b:	call   r14
  40822e:	mov    DWORD PTR [rax],0x0
  408234:	mov    eax,edi
  408236:	and    eax,0x3
  408239:	cmp    eax,0x1
  40823c:	je     0x408385
  408242:	cmp    eax,0x2
  408245:	je     0x408343
  40824b:	mov    edx,0x5c
  408250:	mov    rcx,r13
  408253:	call   0x417798
  408258:	test   rax,rax
  40825b:	je     0x4082bc
  40825d:	sub    rax,r13
  408260:	lea    rcx,[rax+0x1]
  408264:	mov    r12,rax
  408267:	call   0x4038d0
  40826c:	mov    r8,r12
  40826f:	mov    r15,rax
  408272:	mov    rdx,r13
  408275:	mov    rcx,rax
  408278:	call   0x417820
  40827d:	mov    BYTE PTR [r15+r12*1],0x0
  408282:	lea    rdx,[rsp+0x20]
  408287:	mov    rcx,r15
  40828a:	call   QWORD PTR [rip+0x1b578]        # 0x423808
  408290:	test   eax,eax
  408292:	jne    0x408446
  408298:	call   r14
  40829b:	mov    DWORD PTR [rax],0x16
  4082a1:	movzx  eax,WORD PTR [rsp+0x26]
  4082a6:	and    ax,0xf000
  4082aa:	cmp    ax,0x4000
  4082ae:	jne    0x408446
  4082b4:	mov    rcx,r15
  4082b7:	call   0x417860
  4082bc:	and    edi,0x30
  4082bf:	cmp    edi,0x10
  4082c2:	je     0x4083b5
  4082c8:	cmp    edi,0x20
  4082cb:	jne    0x4081ec
  4082d1:	mov    rcx,QWORD PTR [rbx+0x18]
  4082d5:	mov    rdx,rbp
  4082d8:	call   0x417888
  4082dd:	test   rax,rax
  4082e0:	mov    rdi,rax
  4082e3:	je     0x408459
  4082e9:	mov    edx,DWORD PTR [rbx+0x10]
  4082ec:	test   dl,0x40
  4082ef:	je     0x408402
  4082f5:	mov    rax,QWORD PTR [rbx+0x18]
  4082f9:	mov    QWORD PTR [rbx+0x20],rax
  4082fd:	and    edx,0xffffffbf
  408300:	mov    QWORD PTR [rbx+0x18],rdi
  408304:	mov    DWORD PTR [rbx+0x10],edx
  408307:	jmp    0x4081ec
  40830c:	nop    DWORD PTR [rax+0x0]
  408310:	and    edi,0x3
  408313:	cmp    edi,0x1
  408316:	je     0x4083e4
  40831c:	cmp    edi,0x2
  40831f:	jne    0x4081ec
  408325:	mov    ecx,DWORD PTR [rip+0x18d45]        # 0x421070
  40832b:	mov    rdx,QWORD PTR [rip+0x18d16]        # 0x421048
  408332:	add    rcx,QWORD PTR [rip+0x107b7]        # 0x418af0
  408339:	call   0x417870
  40833e:	jmp    0x4081ec
  408343:	lea    rdx,[rsp+0x20]
  408348:	mov    rcx,r13
  40834b:	call   QWORD PTR [rip+0x1b4b7]        # 0x423808
  408351:	test   eax,eax
  408353:	je     0x408361
  408355:	call   r14
  408358:	cmp    DWORD PTR [rax],0x2
  40835b:	je     0x40824b
  408361:	call   r14
  408364:	cmp    DWORD PTR [rax],0x0
  408367:	jne    0x408372
  408369:	call   r14
  40836c:	mov    DWORD PTR [rax],0x16
  408372:	mov    rcx,QWORD PTR [rsi+0x28]
  408376:	lea    rdx,[rip+0x11893]        # 0x419c10
  40837d:	mov    r8,r13
  408380:	call   0x402450
  408385:	lea    rdx,[rsp+0x20]
  40838a:	mov    rcx,r13
  40838d:	call   QWORD PTR [rip+0x1b475]        # 0x423808
  408393:	test   eax,eax
  408395:	jne    0x408372
  408397:	call   r14
  40839a:	mov    DWORD PTR [rax],0x16
  4083a0:	movzx  eax,WORD PTR [rsp+0x26]
  4083a5:	and    ax,0xf000
  4083a9:	cmp    ax,0x8000
  4083ad:	je     0x4082bc
  4083b3:	jmp    0x408372
  4083b5:	mov    rcx,QWORD PTR [rbx+0x18]
  4083b9:	mov    edx,ebp
  4083bb:	call   0x417718
  4083c0:	test   eax,eax
  4083c2:	mov    edi,eax
  4083c4:	js     0x408432
  4083c6:	mov    edx,DWORD PTR [rbx+0x10]
  4083c9:	test   dl,0x40
  4083cc:	je     0x408420
  4083ce:	mov    rax,QWORD PTR [rbx+0x18]
  4083d2:	mov    QWORD PTR [rbx+0x20],rax
  4083d6:	and    edx,0xffffffbf
  4083d9:	mov    DWORD PTR [rbx+0x18],edi
  4083dc:	mov    DWORD PTR [rbx+0x10],edx
  4083df:	jmp    0x4081ec
  4083e4:	mov    ecx,DWORD PTR [rip+0x18c86]        # 0x421070
  4083ea:	mov    rdx,QWORD PTR [rip+0x18c57]        # 0x421048
  4083f1:	add    rcx,QWORD PTR [rip+0x10700]        # 0x418af8
  4083f8:	call   0x417870
  4083fd:	jmp    0x4081ec
  408402:	mov    rcx,QWORD PTR [rbx+0x18]
  408406:	call   0x403640
  40840b:	mov    edx,DWORD PTR [rbx+0x10]
  40840e:	mov    QWORD PTR [rbx+0x20],rax
  408412:	jmp    0x4082fd
  408417:	nop    WORD PTR [rax+rax*1+0x0]
  408420:	mov    rcx,QWORD PTR [rbx+0x18]
  408424:	call   0x403640
  408429:	mov    edx,DWORD PTR [rbx+0x10]
  40842c:	mov    QWORD PTR [rbx+0x20],rax
  408430:	jmp    0x4083d6
  408432:	mov    rcx,QWORD PTR [rsi+0x28]
  408436:	mov    r8,QWORD PTR [rbx+0x18]
  40843a:	lea    rdx,[rip+0x117d4]        # 0x419c15
  408441:	call   0x402450
  408446:	mov    rcx,QWORD PTR [rsi+0x28]
  40844a:	lea    rdx,[rip+0x117bf]        # 0x419c10
  408451:	mov    r8,r15
  408454:	call   0x402450
  408459:	mov    rcx,QWORD PTR [rsi+0x28]
  40845d:	mov    r8,QWORD PTR [rbx+0x18]
  408461:	lea    rdx,[rip+0x117b2]        # 0x419c1a
  408468:	call   0x402450
  40846d:	nop
  40846e:	xchg   ax,ax
  408470:	push   r15
  408472:	push   r14
  408474:	push   r13
  408476:	push   r12
  408478:	push   rbp
  408479:	push   rdi
  40847a:	push   rsi
  40847b:	push   rbx
  40847c:	sub    rsp,0x38
  408480:	mov    edi,edx
  408482:	mov    rbp,rcx
  408485:	mov    rcx,r8
  408488:	mov    rbx,r8
  40848b:	mov    r12,r9
  40848e:	call   0x4177b8
  408493:	movsxd rdx,edi
  408496:	cmp    rax,rdx
  408499:	setae  sil
  40849d:	test   rax,rax
  4084a0:	sete   al
  4084a3:	or     sil,al
  4084a6:	jne    0x4084e5
  4084a8:	movzx  r10d,BYTE PTR [rbx]
  4084ac:	cmp    r10b,0x24
  4084b0:	je     0x408500
  4084b2:	mov    r9d,r10d
  4084b5:	xor    eax,eax
  4084b7:	jmp    0x4084d4
  4084b9:	nop    DWORD PTR [rax+0x0]
  4084c0:	add    rax,0x1
  4084c4:	mov    r8d,edi
  4084c7:	sub    r8d,eax
  4084ca:	test   r8d,r8d
  4084cd:	jle    0x4084e5
  4084cf:	movzx  r9d,BYTE PTR [rbx+rax*1]
  4084d4:	test   r9b,r9b
  4084d7:	mov    BYTE PTR [rbp+rax*1+0x0],r9b
  4084dc:	jne    0x4084c0
  4084de:	mov    esi,0x1
  4084e3:	jmp    0x4084e7
  4084e5:	xor    esi,esi
  4084e7:	mov    eax,esi
  4084e9:	add    rsp,0x38
  4084ed:	pop    rbx
  4084ee:	pop    rsi
  4084ef:	pop    rdi
  4084f0:	pop    rbp
  4084f1:	pop    r12
  4084f3:	pop    r13
  4084f5:	pop    r14
  4084f7:	pop    r15
  4084f9:	ret    
  4084fa:	nop    WORD PTR [rax+rax*1+0x0]
  408500:	movzx  eax,BYTE PTR [rbx+0x1]
  408504:	cmp    al,0x24
  408506:	je     0x4085fe
  40850c:	cmp    al,0x40
  40850e:	je     0x4085ca
  408514:	test   al,al
  408516:	je     0x4084e7
  408518:	cmp    al,0x7f
  40851a:	ja     0x4084e7
  40851c:	lea    rcx,[rip+0x152dd]        # 0x41d800
  408523:	movzx  edx,al
  408526:	test   DWORD PTR [rcx+rdx*4],0x3b0060
  40852d:	je     0x4084e7
  40852f:	add    rbx,0x1
  408533:	mov    r8,rbp
  408536:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408540:	add    r8,0x1
  408544:	add    rbx,0x1
  408548:	mov    BYTE PTR [r8-0x1],al
  40854c:	movzx  eax,BYTE PTR [rbx]
  40854f:	cmp    al,0x7f
  408551:	ja     0x40855f
  408553:	movzx  edx,al
  408556:	test   DWORD PTR [rcx+rdx*4],0x3b0060
  40855d:	jne    0x408540
  40855f:	cmp    r8,rbp
  408562:	je     0x4084e7
  408564:	mov    BYTE PTR [r8],0x0
  408568:	mov    rcx,rbp
  40856b:	call   0x417840
  408570:	test   rax,rax
  408573:	mov    r14,rax
  408576:	je     0x4084e7
  40857c:	mov    rcx,rax
  40857f:	mov    edi,edi
  408581:	call   0x4177b8
  408586:	mov    rcx,rbx
  408589:	mov    r13,rax
  40858c:	call   0x4177b8
  408591:	lea    r12,[rax+0x1]
  408595:	lea    rax,[r12+r13*1]
  408599:	cmp    rax,rdi
  40859c:	jae    0x4084e7
  4085a2:	mov    r8,r13
  4085a5:	mov    rdx,r14
  4085a8:	mov    rcx,rbp
  4085ab:	call   0x417820
  4085b0:	lea    rcx,[rbp+r13*1+0x0]
  4085b5:	mov    r8,r12
  4085b8:	mov    rdx,rbx
  4085bb:	mov    esi,0x1
  4085c0:	call   0x417820
  4085c5:	jmp    0x4084e7
  4085ca:	mov    r9,QWORD PTR [rip+0x102b7]        # 0x418888
  4085d1:	cmp    BYTE PTR [r9],0x0
  4085d5:	je     0x4084e5
  4085db:	add    rbx,0x2
  4085df:	lea    r8,[rip+0x112b5]        # 0x41989b
  4085e6:	mov    rcx,rbp
  4085e9:	mov    QWORD PTR [rsp+0x20],rbx
  4085ee:	call   0x401e80
  4085f3:	cmp    edi,eax
  4085f5:	setg   sil
  4085f9:	jmp    0x4084e7
  4085fe:	movzx  eax,BYTE PTR [rbx+0x2]
  408602:	test   al,al
  408604:	je     0x4086a6
  40860a:	cmp    al,0x5c
  40860c:	mov    r15d,0x3
  408612:	jne    0x4084e7
  408618:	mov    edx,0x5c
  40861d:	mov    rcx,r12
  408620:	mov    r14,r12
  408623:	call   0x4177e0
  408628:	test   rax,rax
  40862b:	je     0x4086b1
  408631:	mov    edx,0x5c
  408636:	mov    rcx,r14
  408639:	call   0x417798
  40863e:	test   rax,rax
  408641:	mov    r13,rax
  408644:	je     0x4084e7
  40864a:	movsxd rax,r15d
  40864d:	sub    r13,r14
  408650:	mov    edi,edi
  408652:	add    rbx,rax
  408655:	add    r13,0x1
  408659:	mov    rcx,rbx
  40865c:	call   0x4177b8
  408661:	lea    r15,[rax+0x1]
  408665:	lea    rax,[r15+r13*1]
  408669:	cmp    rax,rdi
  40866c:	ja     0x4084e7
  408672:	mov    r8,r13
  408675:	mov    rdx,r14
  408678:	mov    rcx,rbp
  40867b:	call   0x417820
  408680:	lea    rcx,[rbp+r13*1+0x0]
  408685:	mov    r8,r15
  408688:	mov    rdx,rbx
  40868b:	call   0x417820
  408690:	cmp    r12,r14
  408693:	je     0x4084de
  408699:	mov    rcx,r14
  40869c:	call   0x417860
  4086a1:	jmp    0x4084de
  4086a6:	mov    r15d,0x2
  4086ac:	jmp    0x408618
  4086b1:	lea    rcx,[rip+0x111aa]        # 0x419862
  4086b8:	call   0x417840
  4086bd:	mov    rdx,r12
  4086c0:	mov    rcx,rax
  4086c3:	call   0x404840
  4086c8:	test   rax,rax
  4086cb:	mov    r14,rax
  4086ce:	jne    0x408631
  4086d4:	jmp    0x4084e7
  4086d9:	nop    DWORD PTR [rax+0x0]
  4086e0:	push   r15
  4086e2:	push   r14
  4086e4:	push   r13
  4086e6:	push   r12
  4086e8:	push   rbp
  4086e9:	push   rdi
  4086ea:	push   rsi
  4086eb:	push   rbx
  4086ec:	sub    rsp,0x178
  4086f3:	mov    rbx,rcx
  4086f6:	mov    r12,rdx
  4086f9:	mov    rcx,QWORD PTR [rip+0x10480]        # 0x418b80
  408700:	mov    rdx,QWORD PTR [rip+0x18941]        # 0x421048
  408707:	mov    r13,r8
  40870a:	lea    rsi,[rbx+0x8]
  40870e:	lea    rbp,[rsp+0x60]
  408713:	call   0x417870
  408718:	mov    rbx,QWORD PTR [rbx]
  40871b:	test   rbx,rbx
  40871e:	je     0x4087f0
  408724:	lea    r15,[rsp+0x20]
  408729:	mov    r14,QWORD PTR [rip+0x1b0d8]        # 0x423808
  408730:	jmp    0x408754
  408732:	mov    rdx,QWORD PTR [rip+0x1890f]        # 0x421048
  408739:	add    rsi,0x8
  40873d:	mov    ecx,0xa
  408742:	call   0x417878
  408747:	mov    rbx,QWORD PTR [rsi-0x8]
  40874b:	test   rbx,rbx
  40874e:	je     0x4087f0
  408754:	mov    r9,r13
  408757:	mov    r8,rbx
  40875a:	mov    edx,0x105
  40875f:	mov    rcx,rbp
  408762:	mov    rdi,rbx
  408765:	call   0x408470
  40876a:	test   al,al
  40876c:	je     0x408776
  40876e:	cmp    BYTE PTR [rbx],0x24
  408771:	mov    rdi,rbp
  408774:	je     0x4087d4
  408776:	mov    rdx,QWORD PTR [rip+0x103eb]        # 0x418b68
  40877d:	mov    rcx,QWORD PTR [rip+0x188c4]        # 0x421048
  408784:	mov    r8,rbx
  408787:	call   0x401a90
  40878c:	cmp    BYTE PTR [r12],0x0
  408791:	je     0x408732
  408793:	mov    rdx,r15
  408796:	mov    rcx,rdi
  408799:	call   r14
  40879c:	test   eax,eax
  40879e:	jne    0x408732
  4087a0:	movzx  eax,WORD PTR [rsp+0x26]
  4087a5:	and    ax,0xf000
  4087a9:	cmp    ax,0x4000
  4087ad:	jne    0x408732
  4087af:	mov    rdx,QWORD PTR [rip+0x18892]        # 0x421048
  4087b6:	mov    ecx,0x5c
  4087bb:	call   0x417878
  4087c0:	mov    rdx,QWORD PTR [rip+0x18881]        # 0x421048
  4087c7:	mov    rcx,r12
  4087ca:	call   0x417870
  4087cf:	jmp    0x408732
  4087d4:	movzx  eax,BYTE PTR [rbx+0x1]
  4087d8:	cmp    al,0x40
  4087da:	je     0x4087e0
  4087dc:	cmp    al,0x24
  4087de:	jne    0x408776
  4087e0:	mov    rdi,rbp
  4087e3:	mov    rbx,rbp
  4087e6:	jmp    0x408776
  4087e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4087f0:	add    rsp,0x178
  4087f7:	pop    rbx
  4087f8:	pop    rsi
  4087f9:	pop    rdi
  4087fa:	pop    rbp
  4087fb:	pop    r12
  4087fd:	pop    r13
  4087ff:	pop    r14
  408801:	pop    r15
  408803:	ret    
  408804:	xchg   ax,ax
  408806:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408810:	push   r15
  408812:	push   r14
  408814:	push   r13
  408816:	push   r12
  408818:	push   rbp
  408819:	push   rdi
  40881a:	push   rsi
  40881b:	push   rbx
  40881c:	sub    rsp,0xc8
  408823:	mov    rax,QWORD PTR [rip+0xfdce]        # 0x4185f8
  40882a:	mov    rsi,rcx
  40882d:	mov    edx,DWORD PTR [rax+0x78]
  408830:	test   dl,0xf
  408833:	je     0x408bf0
  408839:	mov    rdx,QWORD PTR [rax+0x80]
  408840:	mov    QWORD PTR [rip+0x18849],rdx        # 0x421090
  408847:	test   BYTE PTR [rax+0x10],0xf
  40884b:	mov    r12,QWORD PTR [rip+0x1ad7e]        # 0x4235d0
  408852:	jne    0x408c15
  408858:	cmp    QWORD PTR [rip+0x18828],0x0        # 0x421088
  408860:	je     0x408875
  408862:	call   r12
  408865:	mov    rcx,QWORD PTR [rip+0x1881c]        # 0x421088
  40886c:	lea    rdx,[rax+0x30]
  408870:	call   0x417870
  408875:	lea    rdi,[rsp+0x40]
  40887a:	xor    ecx,ecx
  40887c:	call   QWORD PTR [rip+0x1adfe]        # 0x423680
  408882:	lea    rcx,[rsp+0x38]
  408887:	mov    QWORD PTR [rsp+0x38],rax
  40888c:	call   QWORD PTR [rip+0x1adc6]        # 0x423658
  408892:	lea    r8,[rip+0x12608]        # 0x41aea1
  408899:	mov    r9,rax
  40889c:	mov    edx,0x80
  4088a1:	mov    rcx,rdi
  4088a4:	call   0x4177c0
  4088a9:	mov    rax,QWORD PTR [rip+0xfd48]        # 0x4185f8
  4088b0:	lea    r8,[rip+0x125e3]        # 0x41ae9a
  4088b7:	test   BYTE PTR [rax+0x10],0xf
  4088bb:	je     0x4088c1
  4088bd:	mov    r8,QWORD PTR [rax+0x18]
  4088c1:	cmp    QWORD PTR [rip+0x187bf],0x0        # 0x421088
  4088c9:	je     0x408ff4
  4088cf:	lea    rdx,[rip+0x13c54]        # 0x41c52a
  4088d6:	lea    rcx,[rip+0x13a03]        # 0x41c2e0
  4088dd:	mov    r9,rdi
  4088e0:	xor    ebx,ebx
  4088e2:	call   0x401ea0
  4088e7:	mov    rdx,QWORD PTR [rsi+0x30]
  4088eb:	lea    rcx,[rip+0x126bf]        # 0x41afb1
  4088f2:	call   0x401ea0
  4088f7:	mov    rbp,QWORD PTR [rsi+0x30]
  4088fb:	mov    r13,QWORD PTR [rip+0x1aede]        # 0x4237e0
  408902:	movsx  ecx,BYTE PTR [rbp+rbx*1+0x0]
  408907:	call   r13
  40890a:	mov    BYTE PTR [rdi+rbx*1],al
  40890d:	add    rbx,0x1
  408911:	test   al,al
  408913:	jne    0x408902
  408915:	lea    r8,[rip+0x114c7]        # 0x419de3
  40891c:	lea    rcx,[rip+0x12776]        # 0x41b099
  408923:	mov    rdx,rbp
  408926:	mov    QWORD PTR [rsi+0x20],rdi
  40892a:	mov    QWORD PTR [rsi+0x28],rdi
  40892e:	call   0x401ea0
  408933:	mov    rdx,QWORD PTR [rsi+0x30]
  408937:	lea    r8,[rip+0x114af]        # 0x419ded
  40893e:	lea    rcx,[rip+0x12754]        # 0x41b099
  408945:	call   0x401ea0
  40894a:	mov    rbx,QWORD PTR [rsi+0x78]
  40894e:	lea    rdx,[rip+0x2dfb]        # 0x40b750
  408955:	mov    eax,DWORD PTR [rsi+0xb0]
  40895b:	cmp    QWORD PTR [rbx+0x38],rdx
  40895f:	je     0x40898f
  408961:	cmp    eax,0x1
  408964:	jle    0x4089aa
  408966:	sub    eax,0x2
  408969:	add    rax,0x1
  40896d:	lea    rcx,[rax+rax*2]
  408971:	lea    rax,[rax+rcx*4]
  408975:	lea    rcx,[rbx+rax*8]
  408979:	mov    rax,rbx
  40897c:	jmp    0x408985
  40897e:	xchg   ax,ax
  408980:	cmp    rax,rcx
  408983:	je     0x4089aa
  408985:	add    rax,0x68
  408989:	cmp    QWORD PTR [rax+0x38],rdx
  40898d:	jne    0x408980
  40898f:	mov    rdx,QWORD PTR [rsi+0x30]
  408993:	lea    r8,[rip+0x11459]        # 0x419df3
  40899a:	lea    rcx,[rip+0x126f8]        # 0x41b099
  4089a1:	call   0x401ea0
  4089a6:	mov    rbx,QWORD PTR [rsi+0x78]
  4089aa:	mov    eax,DWORD PTR [rsi+0xb4]
  4089b0:	test   eax,eax
  4089b2:	jle    0x408a80
  4089b8:	sub    eax,0x1
  4089bb:	lea    r14,[rip+0x1314a]        # 0x41bb0c
  4089c2:	lea    r13,[rip+0x13ade]        # 0x41c4a7
  4089c9:	add    rax,0x1
  4089cd:	lea    rdx,[rax+rax*2]
  4089d1:	lea    rax,[rax+rdx*4]
  4089d5:	lea    rbp,[rbx+rax*8]
  4089d9:	jmp    0x408a26
  4089db:	nop    DWORD PTR [rax+rax*1+0x0]
  4089e0:	cmp    eax,0x4
  4089e3:	je     0x408be0
  4089e9:	cmp    eax,0x5
  4089ec:	jne    0x408bc0
  4089f2:	mov    r9d,DWORD PTR [rbx+0x18]
  4089f6:	lea    r8,[rip+0x10dc7]        # 0x4197c4
  4089fd:	mov    edx,0x20
  408a02:	mov    rcx,rdi
  408a05:	call   0x401e80
  408a0a:	mov    r8,QWORD PTR [rbx+0x48]
  408a0e:	mov    r9,rdi
  408a11:	mov    rdx,QWORD PTR [rsi+0x30]
  408a15:	mov    rcx,r15
  408a18:	call   0x401ea0
  408a1d:	add    rbx,0x68
  408a21:	cmp    rbx,rbp
  408a24:	je     0x408a80
  408a26:	mov    eax,DWORD PTR [rbx+0x10]
  408a29:	test   eax,0x280000
  408a2e:	jne    0x408a1d
  408a30:	mov    r8,QWORD PTR [rbx+0x48]
  408a34:	test   r8,r8
  408a37:	je     0x408a1d
  408a39:	cmp    WORD PTR [rbx+0xc],0x1
  408a3e:	mov    r15,r13
  408a41:	cmova  r15,r14
  408a45:	and    eax,0xf000
  408a4a:	shr    eax,0xc
  408a4d:	cmp    eax,0x3
  408a50:	je     0x408ba0
  408a56:	ja     0x4089e0
  408a58:	cmp    eax,0x2
  408a5b:	jne    0x408bc0
  408a61:	mov    rdx,rbx
  408a64:	mov    ecx,0x2
  408a69:	call   QWORD PTR [rbx+0x38]
  408a6c:	mov    r9,QWORD PTR [rbx+0x18]
  408a70:	mov    r8,QWORD PTR [rbx+0x48]
  408a74:	jmp    0x408a11
  408a76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408a80:	mov    eax,DWORD PTR [rsi+0x10]
  408a83:	and    eax,0x3
  408a86:	cmp    eax,0x2
  408a89:	je     0x408fb4
  408a8f:	cmp    eax,0x3
  408a92:	je     0x408ed0
  408a98:	cmp    eax,0x1
  408a9b:	je     0x408d50
  408aa1:	call   r12
  408aa4:	lea    rcx,[rip+0x13302]        # 0x41bdad
  408aab:	lea    r9,[rax+0x30]
  408aaf:	mov    r8d,0x66
  408ab5:	mov    edx,0x1
  408aba:	call   0x417848
  408abf:	call   r12
  408ac2:	lea    rcx,[rip+0x12a7d]        # 0x41b546
  408ac9:	lea    r9,[rax+0x30]
  408acd:	mov    edx,0x1
  408ad2:	mov    r8d,0xfa
  408ad8:	call   0x417848
  408add:	mov    rcx,rsi
  408ae0:	call   0x4040a0
  408ae5:	mov    rdx,QWORD PTR [rsi+0x30]
  408ae9:	lea    rcx,[rip+0x12c95]        # 0x41b785
  408af0:	call   0x401ea0
  408af5:	mov    edi,DWORD PTR [rsi+0xb4]
  408afb:	mov    rdx,QWORD PTR [rsi+0x30]
  408aff:	lea    rcx,[rip+0x128c5]        # 0x41b3cb
  408b06:	mov    rbx,QWORD PTR [rsi+0x78]
  408b0a:	call   0x401ea0
  408b0f:	test   edi,edi
  408b11:	jle    0x408e03
  408b17:	lea    eax,[rdi-0x1]
  408b1a:	lea    rbp,[rip+0x12756]        # 0x41b277
  408b21:	lea    rdi,[rip+0x127ab]        # 0x41b2d3
  408b28:	add    rax,0x1
  408b2c:	lea    rdx,[rax+rax*2]
  408b30:	lea    rax,[rax+rdx*4]
  408b34:	lea    r13,[rbx+rax*8]
  408b38:	jmp    0x408b6f
  408b3a:	nop    WORD PTR [rax+rax*1+0x0]
  408b40:	test   eax,0x100000
  408b45:	je     0x408b62
  408b47:	cmp    WORD PTR [rbx+0xc],0x2
  408b4c:	mov    rcx,rbp
  408b4f:	mov    r9d,0x1
  408b55:	cmovb  rcx,rdi
  408b59:	mov    rdx,QWORD PTR [rsi+0x30]
  408b5d:	call   0x401ea0
  408b62:	add    rbx,0x68
  408b66:	cmp    rbx,r13
  408b69:	je     0x408e03
  408b6f:	mov    eax,DWORD PTR [rbx+0x10]
  408b72:	test   eax,0x280000
  408b77:	jne    0x408b62
  408b79:	mov    r8,QWORD PTR [rbx+0x48]
  408b7d:	test   r8,r8
  408b80:	je     0x408b62
  408b82:	movzx  r9d,WORD PTR [rbx+0xa]
  408b87:	test   r9w,r9w
  408b8b:	je     0x408b40
  408b8d:	cmp    WORD PTR [rbx+0xc],0x1
  408b92:	mov    rcx,rdi
  408b95:	cmova  rcx,rbp
  408b99:	jmp    0x408b59
  408b9b:	nop    DWORD PTR [rax+rax*1+0x0]
  408ba0:	mov    eax,DWORD PTR [rbx+0x18]
  408ba3:	lea    r9,[rip+0x121a5]        # 0x41ad4f
  408baa:	test   eax,eax
  408bac:	lea    rax,[rip+0x1231c]        # 0x41aecf
  408bb3:	cmovne r9,rax
  408bb7:	jmp    0x408a11
  408bbc:	nop    DWORD PTR [rax+0x0]
  408bc0:	mov    r9,QWORD PTR [rbx+0x18]
  408bc4:	test   r9,r9
  408bc7:	jne    0x408a11
  408bcd:	lea    rax,[rip+0x13918]        # 0x41c4ec
  408bd4:	cmp    r15,r13
  408bd7:	cmove  r15,rax
  408bdb:	jmp    0x408a11
  408be0:	mov    r9d,DWORD PTR [rbx+0x18]
  408be4:	lea    r8,[rip+0x11057]        # 0x419c42
  408beb:	jmp    0x4089fd
  408bf0:	and    edx,0x20
  408bf3:	je     0x408fd0
  408bf9:	test   BYTE PTR [rax+0x10],0xf
  408bfd:	mov    QWORD PTR [rip+0x18488],0x0        # 0x421090
  408c08:	mov    r12,QWORD PTR [rip+0x1a9c1]        # 0x4235d0
  408c0f:	je     0x408858
  408c15:	mov    r13,QWORD PTR [rax+0x18]
  408c19:	lea    rdx,[rip+0x11010]        # 0x419c30
  408c20:	mov    rbp,QWORD PTR [rsi+0x28]
  408c24:	mov    rcx,r13
  408c27:	call   0x417888
  408c2c:	test   rax,rax
  408c2f:	mov    rdi,rax
  408c32:	je     0x409054
  408c38:	mov    rcx,rax
  408c3b:	call   0x417710
  408c40:	lea    rdx,[rsp+0x40]
  408c45:	mov    ecx,eax
  408c47:	call   QWORD PTR [rip+0x1a9f3]        # 0x423640
  408c4d:	test   eax,eax
  408c4f:	jne    0x409064
  408c55:	movzx  eax,WORD PTR [rsp+0x46]
  408c5a:	and    ax,0xf000
  408c5e:	cmp    ax,0x8000
  408c62:	jne    0x409064
  408c68:	mov    rax,QWORD PTR [rsp+0x58]
  408c6d:	lea    rcx,[rax+0x1]
  408c71:	call   0x4038d0
  408c76:	mov    r8,QWORD PTR [rsp+0x58]
  408c7b:	mov    r12,rax
  408c7e:	mov    rbx,rax
  408c81:	jmp    0x408c98
  408c83:	mov    r8,QWORD PTR [rsp+0x58]
  408c88:	sub    r8,rax
  408c8b:	test   r8,r8
  408c8e:	mov    QWORD PTR [rsp+0x58],r8
  408c93:	je     0x408cad
  408c95:	add    rbx,rax
  408c98:	mov    r9,rdi
  408c9b:	mov    edx,0x1
  408ca0:	mov    rcx,rbx
  408ca3:	call   0x417868
  408ca8:	test   rax,rax
  408cab:	jne    0x408c83
  408cad:	mov    BYTE PTR [rbx],0x0
  408cb0:	mov    rcx,rdi
  408cb3:	call   0x4178a8
  408cb8:	test   r12,r12
  408cbb:	mov    QWORD PTR [rip+0x183b6],r12        # 0x421078
  408cc2:	je     0x408d0a
  408cc4:	lea    rdx,[rip+0x1385f]        # 0x41c52a
  408ccb:	mov    rcx,r12
  408cce:	call   0x417790
  408cd3:	test   rax,rax
  408cd6:	je     0x409038
  408cdc:	lea    rcx,[rax+0x1]
  408ce0:	lea    rdx,[rip+0x12670]        # 0x41b357
  408ce7:	mov    BYTE PTR [rax],0x0
  408cea:	call   0x417790
  408cef:	test   rax,rax
  408cf2:	je     0x40901f
  408cf8:	add    rax,0x73
  408cfc:	mov    QWORD PTR [rip+0x18385],r12        # 0x421088
  408d03:	mov    QWORD PTR [rip+0x18376],rax        # 0x421080
  408d0a:	mov    r12,QWORD PTR [rip+0x1a8bf]        # 0x4235d0
  408d11:	call   r12
  408d14:	lea    rdx,[rip+0x10f1d]        # 0x419c38
  408d1b:	lea    r8,[rax+0x30]
  408d1f:	mov    rcx,r13
  408d22:	call   0x417858
  408d27:	mov    rbx,rax
  408d2a:	call   r12
  408d2d:	lea    rdx,[rax+0x30]
  408d31:	cmp    rbx,rdx
  408d34:	je     0x408858
  408d3a:	lea    rdx,[rip+0x10ef9]        # 0x419c3a
  408d41:	mov    r8,r13
  408d44:	mov    rcx,rbp
  408d47:	call   0x402450
  408d4c:	nop    DWORD PTR [rax+0x0]
  408d50:	call   r12
  408d53:	lea    rcx,[rip+0x1295c]        # 0x41b6b6
  408d5a:	lea    r9,[rax+0x30]
  408d5e:	mov    r8d,0xce
  408d64:	mov    edx,0x1
  408d69:	call   0x417848
  408d6e:	call   r12
  408d71:	lea    rcx,[rip+0x12006]        # 0x41ad7e
  408d78:	lea    r9,[rax+0x30]
  408d7c:	mov    r8d,0xa
  408d82:	mov    edx,0x1
  408d87:	call   0x417848
  408d8c:	call   r12
  408d8f:	lea    rcx,[rip+0x127b0]        # 0x41b546
  408d96:	lea    r9,[rax+0x30]
  408d9a:	mov    edx,0x1
  408d9f:	mov    r8d,0xfa
  408da5:	call   0x417848
  408daa:	mov    rcx,rsi
  408dad:	call   0x4040a0
  408db2:	mov    rdx,QWORD PTR [rsi+0x30]
  408db6:	lea    rcx,[rip+0x129c8]        # 0x41b785
  408dbd:	call   0x401ea0
  408dc2:	call   r12
  408dc5:	lea    rcx,[rip+0x11f4c]        # 0x41ad18
  408dcc:	lea    r9,[rax+0x30]
  408dd0:	mov    r8d,0xc
  408dd6:	mov    edx,0x1
  408ddb:	call   0x417848
  408de0:	call   r12
  408de3:	lea    rcx,[rip+0x12dc0]        # 0x41bbaa
  408dea:	lea    r9,[rax+0x30]
  408dee:	mov    r8d,0x38
  408df4:	mov    edx,0x1
  408df9:	call   0x417848
  408dfe:	jmp    0x408af5
  408e03:	call   r12
  408e06:	lea    rcx,[rip+0x1254a]        # 0x41b357
  408e0d:	lea    r9,[rax+0x30]
  408e11:	mov    r8d,0x73
  408e17:	mov    edx,0x1
  408e1c:	call   0x417848
  408e21:	mov    rax,QWORD PTR [rip+0x18258]        # 0x421080
  408e28:	test   rax,rax
  408e2b:	je     0x408e32
  408e2d:	cmp    BYTE PTR [rax],0x0
  408e30:	jne    0x408ea0
  408e32:	mov    rax,QWORD PTR [rip+0xf7bf]        # 0x4185f8
  408e39:	test   BYTE PTR [rax+0x78],0x20
  408e3d:	je     0x408eb5
  408e3f:	call   r12
  408e42:	lea    rcx,[rax+0x30]
  408e46:	call   0x4178a8
  408e4b:	call   r12
  408e4e:	lea    rcx,[rax+0x30]
  408e52:	call   0x4178a0
  408e57:	test   eax,eax
  408e59:	jne    0x409076
  408e5f:	mov    rcx,QWORD PTR [rip+0x18212]        # 0x421078
  408e66:	call   0x417860
  408e6b:	mov    QWORD PTR [rip+0x18212],0x0        # 0x421088
  408e76:	mov    QWORD PTR [rip+0x181ff],0x0        # 0x421080
  408e81:	mov    QWORD PTR [rip+0x181ec],0x0        # 0x421078
  408e8c:	add    rsp,0xc8
  408e93:	pop    rbx
  408e94:	pop    rsi
  408e95:	pop    rdi
  408e96:	pop    rbp
  408e97:	pop    r12
  408e99:	pop    r13
  408e9b:	pop    r14
  408e9d:	pop    r15
  408e9f:	ret    
  408ea0:	call   r12
  408ea3:	mov    rcx,QWORD PTR [rip+0x181d6]        # 0x421080
  408eaa:	lea    rdx,[rax+0x30]
  408eae:	call   0x417870
  408eb3:	jmp    0x408e3f
  408eb5:	mov    rdx,QWORD PTR [rsi+0x30]
  408eb9:	lea    rcx,[rip+0x11fb4]        # 0x41ae74
  408ec0:	call   0x401ea0
  408ec5:	jmp    0x408e3f
  408eca:	nop    WORD PTR [rax+rax*1+0x0]
  408ed0:	call   r12
  408ed3:	lea    rcx,[rip+0x127dc]        # 0x41b6b6
  408eda:	lea    r9,[rax+0x30]
  408ede:	mov    r8d,0xce
  408ee4:	mov    edx,0x1
  408ee9:	call   0x417848
  408eee:	call   r12
  408ef1:	lea    rcx,[rip+0x11e86]        # 0x41ad7e
  408ef8:	lea    r9,[rax+0x30]
  408efc:	mov    r8d,0xa
  408f02:	mov    edx,0x1
  408f07:	call   0x417848
  408f0c:	call   r12
  408f0f:	lea    rcx,[rip+0x12630]        # 0x41b546
  408f16:	lea    r9,[rax+0x30]
  408f1a:	mov    r8d,0xfa
  408f20:	mov    edx,0x1
  408f25:	call   0x417848
  408f2a:	mov    rcx,rsi
  408f2d:	call   0x4040a0
  408f32:	mov    rdx,QWORD PTR [rsi+0x30]
  408f36:	lea    rcx,[rip+0x12848]        # 0x41b785
  408f3d:	call   0x401ea0
  408f42:	call   r12
  408f45:	lea    rcx,[rip+0x11dcc]        # 0x41ad18
  408f4c:	lea    r9,[rax+0x30]
  408f50:	mov    r8d,0xc
  408f56:	mov    edx,0x1
  408f5b:	call   0x417848
  408f60:	call   r12
  408f63:	lea    rcx,[rip+0x11deb]        # 0x41ad55
  408f6a:	lea    r9,[rax+0x30]
  408f6e:	mov    r8d,0x9
  408f74:	mov    edx,0x1
  408f79:	call   0x417848
  408f7e:	call   r12
  408f81:	lea    rcx,[rip+0x126b9]        # 0x41b641
  408f88:	lea    r9,[rax+0x30]
  408f8c:	mov    edx,0x1
  408f91:	mov    r8d,0x74
  408f97:	call   0x417848
  408f9c:	mov    rcx,rsi
  408f9f:	call   0x403e10
  408fa4:	mov    rdx,QWORD PTR [rsi+0x30]
  408fa8:	lea    rcx,[rip+0x12e65]        # 0x41be14
  408faf:	jmp    0x408dbd
  408fb4:	call   r12
  408fb7:	mov    r8d,0xce
  408fbd:	lea    r9,[rax+0x30]
  408fc1:	mov    edx,0x1
  408fc6:	lea    rcx,[rip+0x126e9]        # 0x41b6b6
  408fcd:	jmp    0x408f5b
  408fcf:	nop
  408fd0:	lea    rcx,[rip+0x10c49]        # 0x419c20
  408fd7:	call   0x417840
  408fdc:	test   rax,rax
  408fdf:	mov    QWORD PTR [rip+0x180aa],rax        # 0x421090
  408fe6:	je     0x409044
  408fe8:	mov    rax,QWORD PTR [rip+0xf609]        # 0x4185f8
  408fef:	jmp    0x408847
  408ff4:	mov    rdx,QWORD PTR [rip+0x18095]        # 0x421090
  408ffb:	test   rdx,rdx
  408ffe:	je     0x4088cf
  409004:	lea    rcx,[rip+0x11e62]        # 0x41ae6d
  40900b:	mov    QWORD PTR [rsp+0x28],r8
  409010:	call   0x401ea0
  409015:	mov    r8,QWORD PTR [rsp+0x28]
  40901a:	jmp    0x4088cf
  40901f:	mov    rcx,r12
  409022:	call   0x4177b8
  409027:	lea    rax,[r12+rax*1+0x53]
  40902c:	mov    QWORD PTR [rip+0x1804d],rax        # 0x421080
  409033:	jmp    0x408d0a
  409038:	mov    QWORD PTR [rip+0x18041],r12        # 0x421080
  40903f:	jmp    0x408d0a
  409044:	lea    rax,[rip+0x10bdb]        # 0x419c26
  40904b:	mov    QWORD PTR [rip+0x1803e],rax        # 0x421090
  409052:	jmp    0x408fe8
  409054:	mov    QWORD PTR [rip+0x18019],0x0        # 0x421078
  40905f:	jmp    0x408d0a
  409064:	lea    rdx,[rip+0x10bc7]        # 0x419c32
  40906b:	mov    r8,r13
  40906e:	mov    rcx,rbp
  409071:	call   0x402450
  409076:	mov    rcx,QWORD PTR [rsi+0x28]
  40907a:	mov    r8,QWORD PTR [rip+0xf9f7]        # 0x418a78
  409081:	mov    rdx,QWORD PTR [rip+0xfa00]        # 0x418a88
  409088:	call   0x402450
  40908d:	nop
  40908e:	xchg   ax,ax
  409090:	push   rbx
  409091:	sub    rsp,0x20
  409095:	test   rcx,rcx
  409098:	je     0x4090ae
  40909a:	cmp    DWORD PTR [rcx],0x6
  40909d:	mov    rbx,rcx
  4090a0:	je     0x4090b4
  4090a2:	call   QWORD PTR [rip+0x1a570]        # 0x423618
  4090a8:	mov    DWORD PTR [rax],0x16
  4090ae:	add    rsp,0x20
  4090b2:	pop    rbx
  4090b3:	ret    
  4090b4:	mov    rcx,QWORD PTR [rcx+0x10]
  4090b8:	call   0x4019d0
  4090bd:	mov    rcx,rbx
  4090c0:	add    rsp,0x20
  4090c4:	pop    rbx
  4090c5:	jmp    0x417860
  4090ca:	nop    WORD PTR [rax+rax*1+0x0]
  4090d0:	push   rdi
  4090d1:	push   rsi
  4090d2:	push   rbx
  4090d3:	sub    rsp,0x20
  4090d7:	cmp    rcx,0xe
  4090db:	jbe    0x409123
  4090dd:	test   BYTE PTR [rdx+0x10],0x8
  4090e1:	mov    rsi,rdx
  4090e4:	je     0x409130
  4090e6:	mov    rcx,QWORD PTR [rdx+0x20]
  4090ea:	test   rcx,rcx
  4090ed:	je     0x409123
  4090ef:	mov    eax,DWORD PTR [rcx]
  4090f1:	lea    rbx,[rcx+0x8]
  4090f5:	test   eax,eax
  4090f7:	jle    0x409117
  4090f9:	sub    eax,0x1
  4090fc:	lea    rdi,[rbx+rax*8+0x8]
  409101:	add    rbx,0x8
  409105:	mov    rcx,QWORD PTR [rbx-0x8]
  409109:	call   0x409090
  40910e:	cmp    rbx,rdi
  409111:	jne    0x409101
  409113:	mov    rcx,QWORD PTR [rsi+0x20]
  409117:	add    rsp,0x20
  40911b:	pop    rbx
  40911c:	pop    rsi
  40911d:	pop    rdi
  40911e:	jmp    0x417860
  409123:	add    rsp,0x20
  409127:	pop    rbx
  409128:	pop    rsi
  409129:	pop    rdi
  40912a:	ret    
  40912b:	nop    DWORD PTR [rax+rax*1+0x0]
  409130:	mov    rbx,QWORD PTR [rdx+0x50]
  409134:	mov    rcx,rbx
  409137:	call   0x4177b8
  40913c:	mov    rcx,QWORD PTR [rsi+0x18]
  409140:	mov    r8,rax
  409143:	mov    rdx,rbx
  409146:	call   0x406d20
  40914b:	test   rax,rax
  40914e:	je     0x409123
  409150:	lea    rcx,[rsi+0x20]
  409154:	mov    rdx,rax
  409157:	add    rsp,0x20
  40915b:	pop    rbx
  40915c:	pop    rsi
  40915d:	pop    rdi
  40915e:	jmp    0x403920
  409163:	nop    DWORD PTR [rax]
  409166:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409170:	push   r12
  409172:	push   rbp
  409173:	push   rdi
  409174:	push   rsi
  409175:	push   rbx
  409176:	sub    rsp,0x30
  40917a:	mov    eax,DWORD PTR [rip+0x17ef0]        # 0x421070
  409180:	mov    rdi,rdx
  409183:	lea    rdx,[rip+0x11a76]        # 0x41ac00
  40918a:	cmp    rcx,0x1
  40918e:	mov    rbp,rcx
  409191:	mov    rbx,r8
  409194:	mov    esi,r9d
  409197:	lea    r12,[rdx+rax*1+0xcb]
  40919f:	je     0x4091db
  4091a1:	cmp    rcx,0xf
  4091a5:	ja     0x4091b2
  4091a7:	add    rsp,0x30
  4091ab:	pop    rbx
  4091ac:	pop    rsi
  4091ad:	pop    rdi
  4091ae:	pop    rbp
  4091af:	pop    r12
  4091b1:	ret    
  4091b2:	mov    eax,DWORD PTR [rdi+0x18]
  4091b5:	mov    rdx,QWORD PTR [rip+0xf8d4]        # 0x418a90
  4091bc:	lea    r12,[rip+0x10a83]        # 0x419c46
  4091c3:	mov    DWORD PTR [rsp+0x20],eax
  4091c7:	mov    r8,QWORD PTR [rcx+0x28]
  4091cb:	mov    r9,QWORD PTR [rdi+0x50]
  4091cf:	mov    rcx,QWORD PTR [rip+0x17e72]        # 0x421048
  4091d6:	call   0x401a90
  4091db:	test   BYTE PTR [rdi+0x13],0x1
  4091df:	jne    0x409310
  4091e5:	cmp    esi,0x1
  4091e8:	jle    0x40932f
  4091ee:	mov    rdx,QWORD PTR [rip+0xf9bb]        # 0x418bb0
  4091f5:	mov    rcx,QWORD PTR [rip+0x17e4c]        # 0x421048
  4091fc:	mov    r8,r12
  4091ff:	lea    rdi,[rip+0x11bf2]        # 0x41adf8
  409206:	call   0x401a90
  40920b:	cmp    rbp,0x1
  40920f:	jne    0x409258
  409211:	jmp    0x409340
  409216:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409220:	mov    rdx,QWORD PTR [rip+0xf971]        # 0x418b98
  409227:	mov    rcx,QWORD PTR [rip+0x17e1a]        # 0x421048
  40922e:	mov    r8,rdi
  409231:	mov    DWORD PTR [rsp+0x20],eax
  409235:	call   0x401a90
  40923a:	sub    esi,0x1
  40923d:	mov    rdx,QWORD PTR [rip+0x17e04]        # 0x421048
  409244:	test   esi,esi
  409246:	jle    0x40929d
  409248:	mov    rcx,QWORD PTR [rip+0xf971]        # 0x418bc0
  40924f:	add    rbx,0x8
  409253:	call   0x417870
  409258:	mov    eax,DWORD PTR [rbx+0x4]
  40925b:	mov    r9d,DWORD PTR [rbx]
  40925e:	cmp    eax,0x80000000
  409263:	je     0x4092d0
  409265:	cmp    r9d,0x80000000
  40926c:	je     0x4092f0
  409272:	cmp    eax,0x7fffffff
  409277:	jne    0x409220
  409279:	mov    rdx,QWORD PTR [rip+0xf920]        # 0x418ba0
  409280:	mov    rcx,QWORD PTR [rip+0x17dc1]        # 0x421048
  409287:	mov    r8,rdi
  40928a:	sub    esi,0x1
  40928d:	call   0x401a90
  409292:	test   esi,esi
  409294:	mov    rdx,QWORD PTR [rip+0x17dad]        # 0x421048
  40929b:	jg     0x409248
  40929d:	mov    ecx,0xa
  4092a2:	call   0x417878
  4092a7:	cmp    rbp,0xf
  4092ab:	jbe    0x4091a7
  4092b1:	mov    rax,QWORD PTR [rbp+0x98]
  4092b8:	mov    edx,0x1
  4092bd:	mov    rcx,rbp
  4092c0:	add    rsp,0x30
  4092c4:	pop    rbx
  4092c5:	pop    rsi
  4092c6:	pop    rdi
  4092c7:	pop    rbp
  4092c8:	pop    r12
  4092ca:	rex.W jmp rax
  4092cd:	nop    DWORD PTR [rax]
  4092d0:	mov    rdx,QWORD PTR [rip+0xf8d1]        # 0x418ba8
  4092d7:	mov    rcx,QWORD PTR [rip+0x17d6a]        # 0x421048
  4092de:	mov    r8,rdi
  4092e1:	call   0x401a90
  4092e6:	jmp    0x40923a
  4092eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4092f0:	mov    rdx,QWORD PTR [rip+0xf8d9]        # 0x418bd0
  4092f7:	mov    rcx,QWORD PTR [rip+0x17d4a]        # 0x421048
  4092fe:	mov    r9d,eax
  409301:	mov    r8,rdi
  409304:	call   0x401a90
  409309:	jmp    0x40923a
  40930e:	xchg   ax,ax
  409310:	mov    rdx,QWORD PTR [rip+0xf8b1]        # 0x418bc8
  409317:	mov    rcx,QWORD PTR [rip+0x17d2a]        # 0x421048
  40931e:	mov    r8,r12
  409321:	call   0x401a90
  409326:	cmp    esi,0x1
  409329:	jg     0x4091ee
  40932f:	mov    rdx,QWORD PTR [rip+0xf882]        # 0x418bb8
  409336:	jmp    0x4091f5
  40933b:	nop    DWORD PTR [rax+rax*1+0x0]
  409340:	mov    eax,DWORD PTR [rip+0x17d2a]        # 0x421070
  409346:	lea    rdx,[rip+0x118b3]        # 0x41ac00
  40934d:	lea    rdi,[rdx+rax*1+0xd2]
  409355:	jmp    0x409258
  40935a:	nop    WORD PTR [rax+rax*1+0x0]
  409360:	push   r15
  409362:	push   r14
  409364:	push   r13
  409366:	push   r12
  409368:	push   rbp
  409369:	push   rdi
  40936a:	push   rsi
  40936b:	push   rbx
  40936c:	sub    rsp,0x28
  409370:	mov    ebx,0x3
  409375:	mov    rbp,rcx
  409378:	mov    rcx,rdx
  40937b:	mov    rdi,rdx
  40937e:	call   0x4177b8
  409383:	mov    r9,rbp
  409386:	mov    r12,rax
  409389:	mov    eax,0x1
  40938e:	xchg   ax,ax
  409390:	add    r9,0x1
  409394:	movzx  ecx,BYTE PTR [r9-0x1]
  409399:	lea    r10d,[rcx-0x20]
  40939d:	cmp    r10b,0x5e
  4093a1:	ja     0x4093c0
  4093a3:	cmp    cl,0x5c
  4093a6:	je     0x4093f0
  4093a8:	cmp    cl,0x22
  4093ab:	mov    r10d,0x1
  4093b1:	je     0x4093f0
  4093b3:	add    rbx,r10
  4093b6:	jmp    0x409390
  4093b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4093c0:	cmp    cl,0xd
  4093c3:	ja     0x4093e3
  4093c5:	mov    r10,rax
  4093c8:	shl    r10,cl
  4093cb:	test   r10d,0x3b80
  4093d2:	jne    0x409400
  4093d4:	test   r10d,0x400
  4093db:	jne    0x409410
  4093dd:	and    r10d,0x1
  4093e1:	jne    0x409418
  4093e3:	add    rbx,0x4
  4093e7:	jmp    0x409390
  4093e9:	nop    DWORD PTR [rax+0x0]
  4093f0:	mov    r10d,0x2
  4093f6:	jmp    0x4093b3
  4093f8:	nop    DWORD PTR [rax+rax*1+0x0]
  409400:	add    rbx,0x2
  409404:	jmp    0x409390
  409406:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409410:	add    rbx,r12
  409413:	jmp    0x409390
  409418:	mov    rcx,rbx
  40941b:	lea    r14,[rip+0x10826]        # 0x419c48
  409422:	call   0x4038d0
  409427:	mov    r13,rax
  40942a:	lea    rsi,[rax+0x1]
  40942e:	mov    BYTE PTR [rax],0x22
  409431:	jmp    0x409452
  409433:	cmp    r8b,0x5c
  409437:	je     0x409554
  40943d:	cmp    r8b,0x22
  409441:	je     0x409554
  409447:	mov    BYTE PTR [rsi],r8b
  40944a:	add    rsi,0x1
  40944e:	add    rbp,0x1
  409452:	movzx  r8d,BYTE PTR [rbp+0x0]
  409457:	lea    ecx,[r8-0x20]
  40945b:	cmp    cl,0x5e
  40945e:	jbe    0x409433
  409460:	cmp    r8b,0xd
  409464:	ja     0x40953b
  40946a:	movzx  eax,r8b
  40946e:	movsxd rcx,DWORD PTR [r14+rax*4]
  409472:	add    rcx,r14
  409475:	jmp    rcx
  409477:	movzx  eax,BYTE PTR [rbp+0x1]
  40947b:	lea    r15,[rbp+0x1]
  40947f:	cmp    al,0xa
  409481:	jne    0x40949a
  409483:	mov    BYTE PTR [rsi],0x5c
  409486:	add    r15,0x1
  40948a:	add    rsi,0x2
  40948e:	mov    BYTE PTR [rsi-0x1],0x6e
  409492:	movzx  eax,BYTE PTR [r15]
  409496:	cmp    al,0xa
  409498:	je     0x409483
  40949a:	test   al,al
  40949c:	jne    0x409560
  4094a2:	mov    rax,rsi
  4094a5:	mov    BYTE PTR [rsi],0x5c
  4094a8:	add    rsi,0x2
  4094ac:	mov    BYTE PTR [rax+0x1],0x6e
  4094b0:	mov    BYTE PTR [rsi],0x22
  4094b3:	mov    BYTE PTR [rsi+0x1],0x0
  4094b7:	add    rsi,0x2
  4094bb:	sub    rsi,r13
  4094be:	cmp    rsi,rbx
  4094c1:	ja     0x409579
  4094c7:	mov    rax,r13
  4094ca:	add    rsp,0x28
  4094ce:	pop    rbx
  4094cf:	pop    rsi
  4094d0:	pop    rdi
  4094d1:	pop    rbp
  4094d2:	pop    r12
  4094d4:	pop    r13
  4094d6:	pop    r14
  4094d8:	pop    r15
  4094da:	ret    
  4094db:	mov    BYTE PTR [rsi],0x5c
  4094de:	mov    BYTE PTR [rsi+0x1],0x72
  4094e2:	add    rsi,0x2
  4094e6:	jmp    0x40944e
  4094eb:	mov    BYTE PTR [rsi],0x5c
  4094ee:	mov    BYTE PTR [rsi+0x1],0x66
  4094f2:	add    rsi,0x2
  4094f6:	jmp    0x40944e
  4094fb:	mov    BYTE PTR [rsi],0x5c
  4094fe:	mov    BYTE PTR [rsi+0x1],0x76
  409502:	add    rsi,0x2
  409506:	jmp    0x40944e
  40950b:	mov    BYTE PTR [rsi],0x5c
  40950e:	mov    BYTE PTR [rsi+0x1],0x74
  409512:	add    rsi,0x2
  409516:	jmp    0x40944e
  40951b:	mov    BYTE PTR [rsi],0x5c
  40951e:	mov    BYTE PTR [rsi+0x1],0x62
  409522:	add    rsi,0x2
  409526:	jmp    0x40944e
  40952b:	mov    BYTE PTR [rsi],0x5c
  40952e:	mov    BYTE PTR [rsi+0x1],0x61
  409532:	add    rsi,0x2
  409536:	jmp    0x40944e
  40953b:	lea    rdx,[rip+0x11864]        # 0x41ada6
  409542:	mov    rcx,rsi
  409545:	call   0x402470
  40954a:	cdqe   
  40954c:	add    rsi,rax
  40954f:	jmp    0x40944e
  409554:	mov    BYTE PTR [rsi],0x5c
  409557:	add    rsi,0x1
  40955b:	jmp    0x409447
  409560:	mov    rcx,rsi
  409563:	mov    r8,r12
  409566:	mov    rdx,rdi
  409569:	call   0x417820
  40956e:	add    rsi,r12
  409571:	mov    rbp,r15
  409574:	jmp    0x409452
  409579:	call   QWORD PTR [rip+0x1a051]        # 0x4235d0
  40957f:	lea    rcx,[rip+0x11989]        # 0x41af0f
  409586:	lea    r9,[rax+0x60]
  40958a:	mov    r8d,0x24
  409590:	mov    edx,0x1
  409595:	call   0x417848
  40959a:	mov    ecx,0x1
  40959f:	call   0x401ed0
  4095a4:	nop
  4095a5:	nop
  4095a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4095b0:	push   rsi
  4095b1:	push   rbx
  4095b2:	sub    rsp,0x28
  4095b6:	test   dl,dl
  4095b8:	mov    rbx,r8
  4095bb:	jne    0x4095f0
  4095bd:	lea    rdx,[rip+0x117b5]        # 0x41ad79
  4095c4:	call   0x409360
  4095c9:	lea    rdx,[rip+0x11871]        # 0x41ae41
  4095d0:	mov    rsi,rax
  4095d3:	mov    rcx,rbx
  4095d6:	mov    r8,rax
  4095d9:	call   0x401a90
  4095de:	mov    rcx,rsi
  4095e1:	add    rsp,0x28
  4095e5:	pop    rbx
  4095e6:	pop    rsi
  4095e7:	jmp    0x417860
  4095ec:	nop    DWORD PTR [rax+0x0]
  4095f0:	mov    rdx,r8
  4095f3:	add    rsp,0x28
  4095f7:	pop    rbx
  4095f8:	pop    rsi
  4095f9:	jmp    0x417870
  4095fe:	xchg   ax,ax
  409600:	push   r15
  409602:	push   r14
  409604:	push   r13
  409606:	push   r12
  409608:	push   rbp
  409609:	push   rdi
  40960a:	push   rsi
  40960b:	push   rbx
  40960c:	sub    rsp,0x38
  409610:	mov    eax,DWORD PTR [rcx+0x14]
  409613:	xor    r13d,r13d
  409616:	xor    r12d,r12d
  409619:	mov    rbp,rcx
  40961c:	lea    rcx,[rip+0x11b0c]        # 0x41b12f
  409623:	lea    edx,[rax-0x1]
  409626:	call   0x401ea0
  40962b:	mov    rsi,QWORD PTR [rip+0x19f9e]        # 0x4235d0
  409632:	jmp    0x409649
  409634:	add    r12d,0x1
  409638:	add    r13,0x68
  40963c:	cmp    r12d,DWORD PTR [rbp+0xb4]
  409643:	jge    0x4097b1
  409649:	mov    rdx,QWORD PTR [rbp+0x78]
  40964d:	lea    rdi,[rdx+r13*1]
  409651:	mov    eax,DWORD PTR [rdi+0x10]
  409654:	test   eax,0x8280000
  409659:	jne    0x409634
  40965b:	cmp    WORD PTR [rdi+0x8],0x8000
  409661:	jne    0x409634
  409663:	movzx  r8d,WORD PTR [rdi+0x4]
  409668:	cmp    r8d,r12d
  40966b:	je     0x4096b8
  40966d:	lea    rax,[r8+r8*2]
  409671:	lea    rcx,[rip+0x11a40]        # 0x41b0b8
  409678:	lea    rax,[r8+rax*4]
  40967c:	mov    r8,QWORD PTR [rdi+0x48]
  409680:	lea    rbx,[rdx+rax*8]
  409684:	mov    rax,QWORD PTR [rdi+0x18]
  409688:	mov    r9,QWORD PTR [rbx+0x48]
  40968c:	mov    QWORD PTR [rbx+0x18],rax
  409690:	mov    eax,DWORD PTR [rbx+0x10]
  409693:	and    eax,0xfffff00
  409698:	mov    DWORD PTR [rbx+0x10],eax
  40969b:	mov    edx,DWORD PTR [rdi+0x10]
  40969e:	mov    rdi,rbx
  4096a1:	and    edx,0xf00000ff
  4096a7:	or     eax,edx
  4096a9:	mov    rdx,QWORD PTR [rbp+0x30]
  4096ad:	mov    DWORD PTR [rbx+0x10],eax
  4096b0:	call   0x401ea0
  4096b5:	mov    eax,DWORD PTR [rbx+0x10]
  4096b8:	mov    edx,eax
  4096ba:	and    edx,0xf000
  4096c0:	shr    edx,0xc
  4096c3:	cmp    edx,0x4
  4096c6:	je     0x409879
  4096cc:	mov    ecx,DWORD PTR [rdi+0x10]
  4096cf:	and    ecx,0x2f
  4096d2:	cmp    ecx,0x20
  4096d5:	je     0x409634
  4096db:	test   ah,0x4
  4096de:	je     0x409762
  4096e4:	mov    r14,QWORD PTR [rdi+0x20]
  4096e8:	test   r14,r14
  4096eb:	je     0x409762
  4096ed:	mov    ebx,DWORD PTR [r14]
  4096f0:	mov    rdx,QWORD PTR [rbp+0x30]
  4096f4:	lea    rcx,[rip+0x11a0d]        # 0x41b108
  4096fb:	mov    r8,QWORD PTR [rdi+0x48]
  4096ff:	lea    r15,[r14+0x8]
  409703:	mov    r9d,ebx
  409706:	call   0x401ea0
  40970b:	sub    ebx,0x1
  40970e:	js     0x409634
  409714:	mov    r9d,DWORD PTR [r14]
  409717:	mov    rdx,QWORD PTR [rbp+0x30]
  40971b:	lea    rcx,[rip+0x115e9]        # 0x41ad0b
  409722:	mov    r8,QWORD PTR [rdi+0x48]
  409726:	add    r15,0x8
  40972a:	sub    r9d,ebx
  40972d:	call   0x401ea0
  409732:	mov    rcx,QWORD PTR [r15-0x8]
  409736:	call   0x403210
  40973b:	mov    r9d,DWORD PTR [r14]
  40973e:	mov    rdx,QWORD PTR [rbp+0x30]
  409742:	lea    rcx,[rip+0x115f4]        # 0x41ad3d
  409749:	mov    r8,QWORD PTR [rdi+0x48]
  40974d:	sub    r9d,ebx
  409750:	sub    ebx,0x1
  409753:	call   0x401ea0
  409758:	cmp    ebx,0xffffffff
  40975b:	jne    0x409714
  40975d:	jmp    0x409634
  409762:	test   al,0x20
  409764:	jne    0x4097da
  409766:	cmp    edx,0x5
  409769:	je     0x409a7d
  40976f:	cmp    edx,0x2
  409772:	je     0x409a9a
  409778:	cmp    edx,0x3
  40977b:	je     0x409979
  409781:	mov    rax,QWORD PTR [rdi+0x18]
  409785:	test   rax,rax
  409788:	je     0x409793
  40978a:	cmp    BYTE PTR [rax],0x0
  40978d:	jne    0x409a47
  409793:	movzx  r9d,WORD PTR [rdi+0xe]
  409798:	mov    rdx,QWORD PTR [rbp+0x30]
  40979c:	lea    rcx,[rip+0x119cc]        # 0x41b16f
  4097a3:	mov    r8,QWORD PTR [rdi+0x48]
  4097a7:	call   0x401ea0
  4097ac:	jmp    0x409634
  4097b1:	test   BYTE PTR [rbp+0x11],0x8
  4097b5:	je     0x4097bf
  4097b7:	mov    eax,DWORD PTR [rbp+0x4]
  4097ba:	cmp    DWORD PTR [rbp+0x14],eax
  4097bd:	jb     0x409805
  4097bf:	call   rsi
  4097c1:	lea    rcx,[rax+0x30]
  4097c5:	add    rsp,0x38
  4097c9:	pop    rbx
  4097ca:	pop    rsi
  4097cb:	pop    rdi
  4097cc:	pop    rbp
  4097cd:	pop    r12
  4097cf:	pop    r13
  4097d1:	pop    r14
  4097d3:	pop    r15
  4097d5:	jmp    0x417898
  4097da:	mov    r9,QWORD PTR [rdi+0x60]
  4097de:	mov    rdx,QWORD PTR [rbp+0x30]
  4097e2:	lea    rax,[rip+0x10007]        # 0x4197f0
  4097e9:	mov    r8,QWORD PTR [rdi+0x48]
  4097ed:	lea    rcx,[rip+0x1195a]        # 0x41b14e
  4097f4:	test   r9,r9
  4097f7:	cmove  r9,rax
  4097fb:	call   0x401ea0
  409800:	jmp    0x409634
  409805:	call   rsi
  409807:	lea    rcx,[rip+0x11734]        # 0x41af42
  40980e:	lea    r9,[rax+0x30]
  409812:	mov    r8d,0x6
  409818:	mov    edx,0x1
  40981d:	call   0x417848
  409822:	mov    ebx,DWORD PTR [rbp+0x14]
  409825:	cmp    ebx,DWORD PTR [rbp+0x4]
  409828:	jae    0x409857
  40982a:	nop    WORD PTR [rax+rax*1+0x0]
  409830:	call   rsi
  409832:	lea    rdx,[rax+0x30]
  409836:	mov    ecx,0x20
  40983b:	call   0x417878
  409840:	mov    rax,QWORD PTR [rbp+0x8]
  409844:	mov    edx,ebx
  409846:	add    ebx,0x1
  409849:	mov    rcx,QWORD PTR [rax+rdx*8]
  40984d:	call   0x403210
  409852:	cmp    ebx,DWORD PTR [rbp+0x4]
  409855:	jb     0x409830
  409857:	call   rsi
  409859:	lea    rcx,[rip+0x116d4]        # 0x41af34
  409860:	lea    r9,[rax+0x30]
  409864:	mov    r8d,0xd
  40986a:	mov    edx,0x1
  40986f:	call   0x417848
  409874:	jmp    0x4097bf
  409879:	mov    rax,QWORD PTR [rdi+0x18]
  40987d:	mov    rdx,QWORD PTR [rbp+0x30]
  409881:	lea    rcx,[rip+0x118e7]        # 0x41b16f
  409888:	mov    r9d,DWORD PTR [rdi+0x20]
  40988c:	mov    r8,QWORD PTR [rdi+0x48]
  409890:	mov    QWORD PTR [rsp+0x28],rax
  409895:	call   0x401ea0
  40989a:	mov    eax,0xffffffff
  40989f:	mov    rdx,rdi
  4098a2:	mov    ecx,0x3
  4098a7:	mov    QWORD PTR [rdi+0x20],rax
  4098ab:	call   QWORD PTR [rdi+0x38]
  4098ae:	mov    r14,QWORD PTR [rdi+0x18]
  4098b2:	cmp    BYTE PTR [r14],0x0
  4098b6:	je     0x409a42
  4098bc:	mov    QWORD PTR [rsp+0x20],0x1
  4098c5:	mov    rdx,QWORD PTR [rdi+0x48]
  4098c9:	lea    rcx,[rip+0x103b0]        # 0x419c80
  4098d0:	call   0x401ea0
  4098d5:	mov    r9,QWORD PTR [rip+0x179b4]        # 0x421290
  4098dc:	test   r9,r9
  4098df:	je     0x409a30
  4098e5:	movzx  eax,BYTE PTR [r14]
  4098e9:	cmp    BYTE PTR [r9+rax*1],0x0
  4098ee:	je     0x409a25
  4098f4:	mov    rdx,r14
  4098f7:	nop    WORD PTR [rax+rax*1+0x0]
  409900:	add    rdx,0x1
  409904:	movzx  ecx,BYTE PTR [rdx]
  409907:	cmp    BYTE PTR [r9+rcx*1],0x0
  40990c:	mov    rax,rcx
  40990f:	jne    0x409900
  409911:	cmp    al,0x7f
  409913:	lea    r14,[rdx+0x1]
  409917:	movsx  r15d,al
  40991b:	ja     0x40995e
  40991d:	nop    DWORD PTR [rax]
  409920:	lea    r9,[rip+0x13ed9]        # 0x41d800
  409927:	mov    eax,DWORD PTR [r9+rax*4]
  40992b:	test   eax,0x80000
  409930:	je     0x4099b0
  409932:	call   rsi
  409934:	mov    rbx,rax
  409937:	mov    ecx,r15d
  40993a:	call   QWORD PTR [rip+0x19ea8]        # 0x4237e8
  409940:	lea    rdx,[rbx+0x30]
  409944:	mov    ecx,eax
  409946:	call   0x417878
  40994b:	movzx  eax,BYTE PTR [r14]
  40994f:	mov    rdx,r14
  409952:	cmp    al,0x7f
  409954:	lea    r14,[rdx+0x1]
  409958:	movsx  r15d,al
  40995c:	jbe    0x409920
  40995e:	test   r15d,r15d
  409961:	je     0x409a20
  409967:	call   rsi
  409969:	lea    rdx,[rax+0x30]
  40996d:	mov    ecx,0x5f
  409972:	call   0x417878
  409977:	jmp    0x40994b
  409979:	mov    eax,DWORD PTR [rdi+0x18]
  40997c:	mov    rdx,QWORD PTR [rbp+0x30]
  409980:	lea    r9,[rip+0xfe64]        # 0x4197eb
  409987:	mov    r8,QWORD PTR [rdi+0x48]
  40998b:	lea    rcx,[rip+0x11753]        # 0x41b0e5
  409992:	test   eax,eax
  409994:	lea    rax,[rip+0xfe55]        # 0x4197f0
  40999b:	cmove  r9,rax
  40999f:	call   0x401ea0
  4099a4:	jmp    0x409634
  4099a9:	nop    DWORD PTR [rax+0x0]
  4099b0:	test   eax,0x100000
  4099b5:	je     0x4099d0
  4099b7:	call   rsi
  4099b9:	lea    rdx,[rax+0x30]
  4099bd:	mov    ecx,r15d
  4099c0:	call   0x417878
  4099c5:	jmp    0x40994b
  4099c7:	nop    WORD PTR [rax+rax*1+0x0]
  4099d0:	test   eax,0xc81
  4099d5:	je     0x40995e
  4099d7:	mov    rbx,QWORD PTR [rsp+0x20]
  4099dc:	lea    rcx,[rip+0x114a5]        # 0x41ae88
  4099e3:	mov    edx,ebx
  4099e5:	call   0x401ea0
  4099ea:	mov    rax,rbx
  4099ed:	add    rax,rax
  4099f0:	cmp    BYTE PTR [r14],0x0
  4099f4:	mov    QWORD PTR [rsp+0x20],rax
  4099f9:	jne    0x4098c5
  4099ff:	mov    rcx,QWORD PTR [rdi+0x18]
  409a03:	call   0x417860
  409a08:	mov    rax,QWORD PTR [rsp+0x28]
  409a0d:	mov    QWORD PTR [rdi+0x18],rax
  409a11:	jmp    0x409634
  409a16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409a20:	mov    r14,rdx
  409a23:	jmp    0x4099d7
  409a25:	movzx  eax,al
  409a28:	mov    rdx,r14
  409a2b:	jmp    0x409952
  409a30:	mov    ecx,0x22
  409a35:	call   0x4033e0
  409a3a:	mov    r9,rax
  409a3d:	jmp    0x4098e5
  409a42:	mov    rcx,r14
  409a45:	jmp    0x409a03
  409a47:	mov    rdx,QWORD PTR [rbp+0x30]
  409a4b:	mov    r8,QWORD PTR [rdi+0x48]
  409a4f:	lea    rcx,[rip+0x113bf]        # 0x41ae15
  409a56:	call   0x401ea0
  409a5b:	mov    rcx,QWORD PTR [rdi+0x18]
  409a5f:	call   0x403210
  409a64:	mov    rdx,QWORD PTR [rbp+0x30]
  409a68:	mov    r8,QWORD PTR [rdi+0x48]
  409a6c:	lea    rcx,[rip+0x11393]        # 0x41ae06
  409a73:	call   0x401ea0
  409a78:	jmp    0x409634
  409a7d:	mov    rdx,QWORD PTR [rbp+0x30]
  409a81:	mov    r9d,DWORD PTR [rdi+0x18]
  409a85:	lea    rcx,[rip+0x116e3]        # 0x41b16f
  409a8c:	mov    r8,QWORD PTR [rdi+0x48]
  409a90:	call   0x401ea0
  409a95:	jmp    0x409634
  409a9a:	mov    r8,QWORD PTR [rdi+0x48]
  409a9e:	mov    rdx,QWORD PTR [rbp+0x30]
  409aa2:	lea    rcx,[rip+0x1136c]        # 0x41ae15
  409aa9:	mov    rbx,QWORD PTR [rdi+0x18]
  409aad:	call   0x401ea0
  409ab2:	mov    rdx,rdi
  409ab5:	mov    ecx,0x3
  409aba:	call   QWORD PTR [rdi+0x38]
  409abd:	mov    rdx,QWORD PTR [rdi+0x18]
  409ac1:	lea    rcx,[rip+0x1138c]        # 0x41ae54
  409ac8:	call   0x401ea0
  409acd:	test   BYTE PTR [rdi+0x10],0x40
  409ad1:	je     0x409adc
  409ad3:	mov    rcx,QWORD PTR [rdi+0x18]
  409ad7:	call   0x417860
  409adc:	mov    QWORD PTR [rdi+0x18],rbx
  409ae0:	mov    r8,QWORD PTR [rdi+0x48]
  409ae4:	lea    rcx,[rip+0x1131b]        # 0x41ae06
  409aeb:	mov    rdx,QWORD PTR [rbp+0x30]
  409aef:	call   0x401ea0
  409af4:	jmp    0x409634
  409af9:	nop    DWORD PTR [rax+0x0]
  409b00:	push   rdi
  409b01:	push   rsi
  409b02:	push   rbx
  409b03:	sub    rsp,0x20
  409b07:	mov    rax,QWORD PTR [rcx+0x90]
  409b0e:	mov    rbx,rcx
  409b11:	test   rax,rax
  409b14:	je     0x409b81
  409b16:	mov    rdx,QWORD PTR [rbx]
  409b19:	lea    rdi,[rax+0x8]
  409b1d:	mov    rsi,rbx
  409b20:	lea    r9,[rax+0xe8]
  409b27:	and    rdi,0xfffffffffffffff8
  409b2b:	mov    QWORD PTR [rax],rdx
  409b2e:	mov    rdx,QWORD PTR [rbx+0xe0]
  409b35:	mov    QWORD PTR [rax+0xe0],rdx
  409b3c:	mov    rdx,rax
  409b3f:	sub    rdx,rdi
  409b42:	sub    rsi,rdx
  409b45:	add    edx,0xe8
  409b4b:	shr    edx,0x3
  409b4e:	mov    ecx,edx
  409b50:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  409b53:	mov    rcx,r9
  409b56:	movsxd rax,DWORD PTR [rax+0xb0]
  409b5d:	lea    rdx,[rax+rax*2]
  409b61:	lea    r8,[rax+rdx*4]
  409b65:	mov    rdx,QWORD PTR [rbx+0x78]
  409b69:	shl    r8,0x3
  409b6d:	call   0x417820
  409b72:	mov    rcx,rbx
  409b75:	add    rsp,0x20
  409b79:	pop    rbx
  409b7a:	pop    rsi
  409b7b:	pop    rdi
  409b7c:	jmp    0x4036a0
  409b81:	movsxd rax,DWORD PTR [rcx+0xb0]
  409b88:	lea    rdx,[rax+rax*2]
  409b8c:	lea    rax,[rax+rdx*4]
  409b90:	lea    rcx,[rax*8+0xe8]
  409b98:	call   0x4038d0
  409b9d:	mov    QWORD PTR [rbx+0x90],rax
  409ba4:	jmp    0x409b16
  409ba9:	nop    DWORD PTR [rax+0x0]
  409bb0:	push   r14
  409bb2:	push   r13
  409bb4:	push   r12
  409bb6:	push   rbp
  409bb7:	push   rdi
  409bb8:	push   rsi
  409bb9:	push   rbx
  409bba:	sub    rsp,0x20
  409bbe:	lea    r12,[rcx+0x8]
  409bc2:	mov    r14,rcx
  409bc5:	mov    rbp,rcx
  409bc8:	and    r12,0xfffffffffffffff8
  409bcc:	sub    r14,r12
  409bcf:	lea    r13d,[r14+0xe8]
  409bd6:	shr    r13d,0x3
  409bda:	nop    WORD PTR [rax+rax*1+0x0]
  409be0:	mov    rbx,QWORD PTR [rbp+0x78]
  409be4:	mov    esi,DWORD PTR [rbp+0xb0]
  409bea:	jmp    0x409c16
  409bec:	nop    DWORD PTR [rax+0x0]
  409bf0:	cmp    eax,0x6
  409bf3:	jne    0x409c03
  409bf5:	mov    rcx,QWORD PTR [rbx+0x20]
  409bf9:	test   rcx,rcx
  409bfc:	je     0x409c03
  409bfe:	call   0x4019d0
  409c03:	sub    esi,0x1
  409c06:	mov    QWORD PTR [rbx+0x20],0x0
  409c0e:	add    rbx,0x68
  409c12:	test   esi,esi
  409c14:	jle    0x409c70
  409c16:	mov    edx,DWORD PTR [rbx+0x10]
  409c19:	test   dl,0x40
  409c1c:	jne    0x409c54
  409c1e:	mov    eax,edx
  409c20:	and    eax,0xf000
  409c25:	shr    eax,0xc
  409c28:	cmp    eax,0x1
  409c2b:	jne    0x409bf0
  409c2d:	and    dh,0x4
  409c30:	je     0x409c03
  409c32:	cmp    QWORD PTR [rbx+0x20],0x0
  409c37:	je     0x409c03
  409c39:	lea    rax,[rip+0x1004d]        # 0x419c8d
  409c40:	cmp    rbp,0xf
  409c44:	mov    QWORD PTR [rbx+0x18],rax
  409c48:	jbe    0x409c03
  409c4a:	mov    rcx,rbx
  409c4d:	call   0x404200
  409c52:	jmp    0x409c03
  409c54:	mov    rcx,QWORD PTR [rbx+0x18]
  409c58:	call   0x417860
  409c5d:	mov    edx,DWORD PTR [rbx+0x10]
  409c60:	mov    QWORD PTR [rbx+0x18],0x0
  409c68:	and    edx,0xffffffbf
  409c6b:	mov    DWORD PTR [rbx+0x10],edx
  409c6e:	jmp    0x409c1e
  409c70:	mov    rax,QWORD PTR [rbp+0x90]
  409c77:	test   rax,rax
  409c7a:	je     0x409cdf
  409c7c:	mov    rdx,QWORD PTR [rax]
  409c7f:	mov    rsi,rax
  409c82:	mov    rdi,r12
  409c85:	sub    rsi,r14
  409c88:	mov    QWORD PTR [rbp+0x0],rdx
  409c8c:	mov    rcx,QWORD PTR [rax+0xe0]
  409c93:	lea    rdx,[rax+0xe8]
  409c9a:	mov    QWORD PTR [rbp+0xe0],rcx
  409ca1:	mov    ecx,r13d
  409ca4:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  409ca7:	movsxd rax,DWORD PTR [rax+0xb0]
  409cae:	mov    rcx,QWORD PTR [rbp+0x78]
  409cb2:	lea    r8,[rax+rax*2]
  409cb6:	lea    r8,[rax+r8*4]
  409cba:	shl    r8,0x3
  409cbe:	call   0x417820
  409cc3:	mov    rcx,QWORD PTR [rbp+0x90]
  409cca:	call   0x417860
  409ccf:	mov    QWORD PTR [rbp+0x90],0x0
  409cda:	jmp    0x409be0
  409cdf:	add    rsp,0x20
  409ce3:	pop    rbx
  409ce4:	pop    rsi
  409ce5:	pop    rdi
  409ce6:	pop    rbp
  409ce7:	pop    r12
  409ce9:	pop    r13
  409ceb:	pop    r14
  409ced:	ret    
  409cee:	xchg   ax,ax
  409cf0:	push   rbp
  409cf1:	push   rdi
  409cf2:	push   rsi
  409cf3:	push   rbx
  409cf4:	sub    rsp,0x28
  409cf8:	mov    rbp,QWORD PTR [rcx+0x90]
  409cff:	mov    rbx,rcx
  409d02:	test   rbp,rbp
  409d05:	je     0x409d8b
  409d0b:	mov    QWORD PTR [rcx+0x90],0x0
  409d16:	lea    rdi,[rbx+0x8]
  409d1a:	mov    rsi,rbp
  409d1d:	call   0x409bb0
  409d22:	mov    rax,QWORD PTR [rbp+0x0]
  409d26:	and    rdi,0xfffffffffffffff8
  409d2a:	lea    rdx,[rbp+0xe8]
  409d31:	mov    QWORD PTR [rbx],rax
  409d34:	mov    rax,QWORD PTR [rbp+0xe0]
  409d3b:	mov    QWORD PTR [rbx+0xe0],rax
  409d42:	mov    rax,rbx
  409d45:	sub    rax,rdi
  409d48:	sub    rsi,rax
  409d4b:	add    eax,0xe8
  409d50:	shr    eax,0x3
  409d53:	mov    ecx,eax
  409d55:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  409d58:	movsxd rax,DWORD PTR [rbp+0xb0]
  409d5f:	mov    rcx,QWORD PTR [rbx+0x78]
  409d63:	lea    r8,[rax+rax*2]
  409d67:	lea    r8,[rax+r8*4]
  409d6b:	shl    r8,0x3
  409d6f:	call   0x417820
  409d74:	mov    rcx,rbx
  409d77:	mov    QWORD PTR [rbx+0x90],rbp
  409d7e:	add    rsp,0x28
  409d82:	pop    rbx
  409d83:	pop    rsi
  409d84:	pop    rdi
  409d85:	pop    rbp
  409d86:	jmp    0x4036a0
  409d8b:	mov    rsi,QWORD PTR [rcx+0x28]
  409d8f:	test   rsi,rsi
  409d92:	je     0x409dba
  409d94:	mov    rbx,QWORD PTR [rip+0xec8d]        # 0x418a28
  409d9b:	call   QWORD PTR [rip+0x1982f]        # 0x4235d0
  409da1:	lea    rcx,[rax+0x60]
  409da5:	mov    r8,rsi
  409da8:	mov    rdx,rbx
  409dab:	call   0x401a90
  409db0:	mov    ecx,0x1
  409db5:	call   0x401ed0
  409dba:	mov    rsi,QWORD PTR [rcx+0x30]
  409dbe:	lea    rax,[rip+0x1284a]        # 0x41c60f
  409dc5:	test   rsi,rsi
  409dc8:	cmove  rsi,rax
  409dcc:	jmp    0x409d94
  409dce:	xchg   ax,ax
  409dd0:	push   r15
  409dd2:	push   r14
  409dd4:	push   r13
  409dd6:	push   r12
  409dd8:	push   rbp
  409dd9:	push   rdi
  409dda:	push   rsi
  409ddb:	push   rbx
  409ddc:	sub    rsp,0x58
  409de0:	lea    rdi,[rsp+0x48]
  409de5:	mov    r13,rcx
  409de8:	mov    DWORD PTR [rsp+0x48],0x0
  409df0:	mov    rdx,rdi
  409df3:	call   0x4043d0
  409df8:	test   rax,rax
  409dfb:	mov    rbx,rax
  409dfe:	je     0x409ed9
  409e04:	lea    rdx,[rip+0xfe2d]        # 0x419c38
  409e0b:	mov    rcx,rax
  409e0e:	call   0x417888
  409e13:	test   rax,rax
  409e16:	mov    rsi,rax
  409e19:	je     0x40a183
  409e1f:	mov    edx,DWORD PTR [rsp+0x48]
  409e23:	test   edx,edx
  409e25:	jne    0x409f30
  409e2b:	lea    rcx,[rip+0xfe5e]        # 0x419c90
  409e32:	mov    r9,rsi
  409e35:	mov    r8d,0x3
  409e3b:	mov    edx,0x1
  409e40:	call   0x417848
  409e45:	mov    rbx,QWORD PTR [r13+0x60]
  409e49:	mov    edx,0xa
  409e4e:	mov    rcx,rbx
  409e51:	call   0x4177e0
  409e56:	test   rax,rax
  409e59:	je     0x409e72
  409e5b:	lea    r8,[rax+0x1]
  409e5f:	mov    r9,rsi
  409e62:	mov    edx,0x1
  409e67:	mov    rcx,rbx
  409e6a:	sub    r8,rbx
  409e6d:	call   0x417848
  409e72:	xor    ecx,ecx
  409e74:	call   QWORD PTR [rip+0x19806]        # 0x423680
  409e7a:	mov    rcx,rdi
  409e7d:	mov    QWORD PTR [rsp+0x48],rax
  409e82:	call   QWORD PTR [rip+0x19788]        # 0x423610
  409e88:	lea    rdx,[rip+0x10dd1]        # 0x41ac60
  409e8f:	mov    r8,rax
  409e92:	mov    rcx,rsi
  409e95:	call   0x401a90
  409e9a:	mov    r15d,DWORD PTR [r13+0xb4]
  409ea1:	mov    rbx,QWORD PTR [r13+0x78]
  409ea5:	mov    eax,DWORD PTR [rbx+0x10]
  409ea8:	test   al,0xf
  409eaa:	je     0x409ec3
  409eac:	test   eax,0x280100
  409eb1:	jne    0x409ec3
  409eb3:	movzx  edx,WORD PTR [rbx+0x8]
  409eb7:	cmp    dx,0x8000
  409ebc:	je     0x409ef0
  409ebe:	cmp    dx,WORD PTR [rbx]
  409ec1:	je     0x409ef0
  409ec3:	sub    r15d,0x1
  409ec7:	add    rbx,0x68
  409ecb:	test   r15d,r15d
  409ece:	jg     0x409ea5
  409ed0:	mov    rcx,rsi
  409ed3:	call   0x4178a8
  409ed8:	nop
  409ed9:	add    rsp,0x58
  409edd:	pop    rbx
  409ede:	pop    rsi
  409edf:	pop    rdi
  409ee0:	pop    rbp
  409ee1:	pop    r12
  409ee3:	pop    r13
  409ee5:	pop    r14
  409ee7:	pop    r15
  409ee9:	ret    
  409eea:	nop    WORD PTR [rax+rax*1+0x0]
  409ef0:	test   al,0x10
  409ef2:	mov    rdi,rbx
  409ef5:	je     0x409f0b
  409ef7:	movzx  edx,WORD PTR [rbx+0x4]
  409efb:	lea    rcx,[rdx+rdx*2]
  409eff:	lea    rcx,[rdx+rcx*4]
  409f03:	mov    rdx,QWORD PTR [r13+0x78]
  409f07:	lea    rdi,[rdx+rcx*8]
  409f0b:	and    eax,0xf000
  409f10:	shr    eax,0xc
  409f13:	cmp    eax,0x7
  409f16:	ja     0x409ec3
  409f18:	lea    rcx,[rip+0xfd79]        # 0x419c98
  409f1f:	movsxd rax,DWORD PTR [rcx+rax*4]
  409f23:	add    rax,rcx
  409f26:	jmp    rax
  409f28:	nop    DWORD PTR [rax+rax*1+0x0]
  409f30:	mov    rcx,rbx
  409f33:	call   0x417860
  409f38:	jmp    0x409e2b
  409f3d:	nop    DWORD PTR [rax]
  409f40:	mov    r12,QWORD PTR [rdi+0x20]
  409f44:	test   r12,r12
  409f47:	je     0x409ec3
  409f4d:	mov    eax,DWORD PTR [r12]
  409f51:	add    r12,0x8
  409f55:	test   eax,eax
  409f57:	jle    0x409ec3
  409f5d:	sub    eax,0x1
  409f60:	lea    rax,[r12+rax*8+0x8]
  409f65:	mov    QWORD PTR [rsp+0x38],rax
  409f6a:	nop    WORD PTR [rax+rax*1+0x0]
  409f70:	add    r12,0x8
  409f74:	mov    rbp,QWORD PTR [r12-0x8]
  409f79:	xor    edx,edx
  409f7b:	mov    rcx,rbp
  409f7e:	call   0x406720
  409f83:	test   rax,rax
  409f86:	mov    r14,rax
  409f89:	je     0x409fd9
  409f8b:	mov    r8,QWORD PTR [rdi+0x50]
  409f8f:	lea    rdx,[rip+0x10e1b]        # 0x41adb1
  409f96:	mov    rcx,rsi
  409f99:	call   0x401a90
  409f9e:	xchg   ax,ax
  409fa0:	mov    r9,r14
  409fa3:	mov    r8,rdi
  409fa6:	mov    edx,0x1
  409fab:	mov    rcx,rsi
  409fae:	call   0x4024a0
  409fb3:	mov    rdx,r14
  409fb6:	mov    rcx,rbp
  409fb9:	call   0x406870
  409fbe:	test   rax,rax
  409fc1:	mov    r14,rax
  409fc4:	jne    0x409fa0
  409fc6:	mov    r8,QWORD PTR [rdi+0x50]
  409fca:	lea    rdx,[rip+0xf825]        # 0x4197f6
  409fd1:	mov    rcx,rsi
  409fd4:	call   0x401a90
  409fd9:	cmp    r12,QWORD PTR [rsp+0x38]
  409fde:	jne    0x409f70
  409fe0:	jmp    0x409ec3
  409fe5:	mov    r8,QWORD PTR [rdi+0x20]
  409fe9:	test   r8,r8
  409fec:	je     0x40a158
  409ff2:	mov    rdx,rdi
  409ff5:	mov    rcx,rsi
  409ff8:	call   0x401d30
  409ffd:	jmp    0x409ec3
  40a002:	test   BYTE PTR [rdi+0x10],0x20
  40a006:	mov    r8,QWORD PTR [rbx+0x50]
  40a00a:	mov    rax,r8
  40a00d:	je     0x40a013
  40a00f:	mov    rax,QWORD PTR [rbx+0x58]
  40a013:	test   rax,rax
  40a016:	lea    rdx,[rip+0xfc77]        # 0x419c94
  40a01d:	mov    rcx,rsi
  40a020:	cmovne r8,rax
  40a024:	call   0x401a90
  40a029:	jmp    0x409ec3
  40a02e:	xchg   ax,ax
  40a030:	mov    eax,DWORD PTR [rdi+0x10]
  40a033:	test   ah,0x4
  40a036:	je     0x40a1f6
  40a03c:	mov    rbp,QWORD PTR [rdi+0x20]
  40a040:	mov    edx,DWORD PTR [rbp+0x0]
  40a043:	add    rbp,0x8
  40a047:	cmp    edx,0x1
  40a04a:	jle    0x40a20a
  40a050:	and    eax,0xffffffdf
  40a053:	mov    DWORD PTR [rdi+0x10],eax
  40a056:	lea    eax,[rdx-0x1]
  40a059:	lea    r12,[rbp+rax*8+0x8]
  40a05e:	xchg   ax,ax
  40a060:	add    rbp,0x8
  40a064:	mov    r8,QWORD PTR [rbp-0x8]
  40a068:	mov    rdx,rdi
  40a06b:	mov    rcx,rsi
  40a06e:	call   0x401d30
  40a073:	cmp    rbp,r12
  40a076:	jne    0x40a060
  40a078:	jmp    0x409ec3
  40a07d:	nop    DWORD PTR [rax]
  40a080:	mov    rbp,QWORD PTR [rdi+0x18]
  40a084:	mov    rdx,rdi
  40a087:	mov    ecx,0x3
  40a08c:	call   QWORD PTR [rdi+0x38]
  40a08f:	mov    r8,QWORD PTR [rdi+0x18]
  40a093:	mov    rdx,rdi
  40a096:	mov    rcx,rsi
  40a099:	call   0x401d30
  40a09e:	mov    QWORD PTR [rdi+0x18],rbp
  40a0a2:	jmp    0x409ec3
  40a0a7:	nop    WORD PTR [rax+rax*1+0x0]
  40a0b0:	mov    eax,DWORD PTR [rdi+0x18]
  40a0b3:	lea    r8,[rip+0xf731]        # 0x4197eb
  40a0ba:	mov    rdx,rdi
  40a0bd:	mov    rcx,rsi
  40a0c0:	test   eax,eax
  40a0c2:	lea    rax,[rip+0xf727]        # 0x4197f0
  40a0c9:	cmove  r8,rax
  40a0cd:	call   0x401d30
  40a0d2:	jmp    0x409ec3
  40a0d7:	nop    WORD PTR [rax+rax*1+0x0]
  40a0e0:	mov    rdx,rdi
  40a0e3:	mov    rbp,QWORD PTR [rdi+0x18]
  40a0e7:	mov    ecx,0x3
  40a0ec:	call   QWORD PTR [rdi+0x38]
  40a0ef:	mov    r12,QWORD PTR [rdi+0x18]
  40a0f3:	mov    QWORD PTR [rdi+0x18],rbp
  40a0f7:	mov    rcx,r12
  40a0fa:	call   0x4177b8
  40a0ff:	lea    rcx,[rax+0x3]
  40a103:	mov    r14,rax
  40a106:	call   0x4038d0
  40a10b:	lea    r8,[r14+0x1]
  40a10f:	lea    rcx,[rax+0x1]
  40a113:	mov    rbp,rax
  40a116:	mov    rdx,r12
  40a119:	mov    BYTE PTR [rax],0x3d
  40a11c:	call   0x417820
  40a121:	mov    r8,rbp
  40a124:	mov    rdx,rdi
  40a127:	mov    rcx,rsi
  40a12a:	call   0x401d30
  40a12f:	mov    rcx,rbp
  40a132:	call   0x417860
  40a137:	mov    rcx,r12
  40a13a:	call   0x417860
  40a13f:	jmp    0x409ec3
  40a144:	movsxd r8,DWORD PTR [rdi+0x18]
  40a148:	mov    rdx,rdi
  40a14b:	mov    rcx,rsi
  40a14e:	call   0x401d30
  40a153:	jmp    0x409ec3
  40a158:	cmp    DWORD PTR [r13+0x0],0x1ffff
  40a160:	jle    0x409ec3
  40a166:	movzx  edx,WORD PTR [rdi]
  40a169:	mov    rax,QWORD PTR [r13+0xc8]
  40a170:	mov    r8,QWORD PTR [rdi+0x18]
  40a174:	cmp    QWORD PTR [rax+rdx*8],r8
  40a178:	jne    0x409ff2
  40a17e:	jmp    0x409ec3
  40a183:	mov    rbp,QWORD PTR [r13+0x28]
  40a187:	mov    rdi,QWORD PTR [rip+0xe912]        # 0x418aa0
  40a18e:	mov    rsi,QWORD PTR [rip+0x1943b]        # 0x4235d0
  40a195:	call   rsi
  40a197:	lea    rcx,[rax+0x60]
  40a19b:	mov    r8,rbp
  40a19e:	mov    rdx,rdi
  40a1a1:	call   0x401a90
  40a1a6:	mov    rdi,QWORD PTR [rip+0x1946b]        # 0x423618
  40a1ad:	call   rdi
  40a1af:	mov    ecx,DWORD PTR [rax]
  40a1b1:	call   0x4177c8
  40a1b6:	mov    r12,rax
  40a1b9:	call   rdi
  40a1bb:	mov    rdi,QWORD PTR [rip+0xe846]        # 0x418a08
  40a1c2:	mov    ebp,DWORD PTR [rax]
  40a1c4:	call   rsi
  40a1c6:	lea    rcx,[rax+0x60]
  40a1ca:	mov    QWORD PTR [rsp+0x20],rbx
  40a1cf:	mov    r9,r12
  40a1d2:	mov    r8d,ebp
  40a1d5:	mov    rdx,rdi
  40a1d8:	call   0x401a90
  40a1dd:	mov    ecx,DWORD PTR [rsp+0x48]
  40a1e1:	test   ecx,ecx
  40a1e3:	je     0x409ed9
  40a1e9:	mov    rcx,rbx
  40a1ec:	call   0x417860
  40a1f1:	jmp    0x409ed9
  40a1f6:	mov    r8,QWORD PTR [rdi+0x18]
  40a1fa:	mov    rdx,rdi
  40a1fd:	mov    rcx,rsi
  40a200:	call   0x401d30
  40a205:	jmp    0x409ec3
  40a20a:	test   edx,edx
  40a20c:	jg     0x40a056
  40a212:	jmp    0x409ec3
  40a217:	nop    WORD PTR [rax+rax*1+0x0]
  40a220:	cmp    rcx,0xf
  40a224:	jbe    0x40a233
  40a226:	test   rdx,rdx
  40a229:	je     0x40a233
  40a22b:	mov    rcx,rdx
  40a22e:	jmp    0x404200
  40a233:	repz ret 
  40a235:	nop
  40a236:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a240:	push   rbx
  40a241:	sub    rsp,0x20
  40a245:	cmp    rcx,0xf
  40a249:	jbe    0x40a280
  40a24b:	test   rdx,rdx
  40a24e:	je     0x40a280
  40a250:	test   BYTE PTR [rdx+0x10],0x8
  40a254:	jne    0x40a280
  40a256:	mov    rcx,QWORD PTR [rdx+0x18]
  40a25a:	test   rcx,rcx
  40a25d:	je     0x40a280
  40a25f:	mov    rbx,rdx
  40a262:	call   0x403640
  40a267:	lea    rcx,[rbx+0x20]
  40a26b:	mov    rdx,rax
  40a26e:	add    rsp,0x20
  40a272:	pop    rbx
  40a273:	jmp    0x403920
  40a278:	nop    DWORD PTR [rax+rax*1+0x0]
  40a280:	add    rsp,0x20
  40a284:	pop    rbx
  40a285:	ret    
  40a286:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a290:	push   rbx
  40a291:	test   r8d,r8d
  40a294:	jle    0x40a2da
  40a296:	lea    ebx,[r8-0x1]
  40a29a:	xor    r8d,r8d
  40a29d:	add    rbx,0x1
  40a2a1:	jmp    0x40a2ac
  40a2a3:	add    r8,0x1
  40a2a7:	cmp    r8,rbx
  40a2aa:	je     0x40a2da
  40a2ac:	movzx  r10d,BYTE PTR [rcx+r8*1]
  40a2b1:	movzx  r9d,BYTE PTR [rdx+r8*1]
  40a2b6:	cmp    r10b,r9b
  40a2b9:	je     0x40a2d5
  40a2bb:	lea    r11,[rip+0xe1be]        # 0x418480
  40a2c2:	movzx  eax,r10b
  40a2c6:	movzx  eax,BYTE PTR [r11+rax*1]
  40a2cb:	movzx  r9d,BYTE PTR [r11+r9*1]
  40a2d0:	sub    eax,r9d
  40a2d3:	jne    0x40a2dc
  40a2d5:	test   r10b,r10b
  40a2d8:	jne    0x40a2a3
  40a2da:	xor    eax,eax
  40a2dc:	pop    rbx
  40a2dd:	ret    
  40a2de:	xchg   ax,ax
  40a2e0:	push   r15
  40a2e2:	push   r14
  40a2e4:	push   r13
  40a2e6:	push   r12
  40a2e8:	push   rbp
  40a2e9:	push   rdi
  40a2ea:	push   rsi
  40a2eb:	push   rbx
  40a2ec:	sub    rsp,0xd8
  40a2f3:	mov    rbx,rdx
  40a2f6:	lea    rdx,[rdx+0x80]
  40a2fd:	mov    QWORD PTR [rsp+0x120],rcx
  40a305:	mov    QWORD PTR [rsp+0x130],r8
  40a30d:	mov    r12,rbx
  40a310:	mov    esi,r12d
  40a313:	add    r12,0x1
  40a317:	movzx  eax,BYTE PTR [r12-0x1]
  40a31d:	sub    esi,ebx
  40a31f:	test   al,al
  40a321:	je     0x40a580
  40a327:	cmp    al,0x3d
  40a329:	jne    0x40a500
  40a32f:	lea    r9,[rsp+0x50]
  40a334:	movsxd rdi,esi
  40a337:	mov    rdx,rbx
  40a33a:	mov    r8,rdi
  40a33d:	mov    rcx,r9
  40a340:	call   0x417820
  40a345:	mov    BYTE PTR [rsp+rdi*1+0x50],0x0
  40a34a:	mov    rbx,rax
  40a34d:	cmp    esi,0x1
  40a350:	jle    0x40a510
  40a356:	mov    rax,QWORD PTR [rsp+0x120]
  40a35e:	mov    rcx,QWORD PTR [rsp+0x120]
  40a366:	xor    r15d,r15d
  40a369:	mov    QWORD PTR [rsp+0x40],r12
  40a36e:	mov    BYTE PTR [rsp+0x3f],0x0
  40a373:	mov    r12d,r15d
  40a376:	mov    DWORD PTR [rsp+0x38],0x0
  40a37e:	xor    ebp,ebp
  40a380:	mov    rax,QWORD PTR [rax+0x78]
  40a384:	mov    edi,DWORD PTR [rcx+0xb0]
  40a38a:	mov    r14,rax
  40a38d:	mov    QWORD PTR [rsp+0x48],rax
  40a392:	movsxd rax,esi
  40a395:	mov    r15,r14
  40a398:	mov    r13,rax
  40a39b:	jmp    0x40a3b4
  40a39d:	nop    DWORD PTR [rax]
  40a3a0:	cmp    eax,0x80100
  40a3a5:	je     0x40a3c8
  40a3a7:	add    r12d,0x1
  40a3ab:	add    r15,0x68
  40a3af:	cmp    edi,r12d
  40a3b2:	jle    0x40a3fe
  40a3b4:	mov    r14,QWORD PTR [r15+0x50]
  40a3b8:	test   r14,r14
  40a3bb:	je     0x40a3a7
  40a3bd:	mov    eax,DWORD PTR [r15+0x10]
  40a3c1:	test   eax,0x280000
  40a3c6:	jne    0x40a3a0
  40a3c8:	mov    r8d,esi
  40a3cb:	mov    rdx,r14
  40a3ce:	mov    rcx,rbx
  40a3d1:	call   0x40a290
  40a3d6:	test   eax,eax
  40a3d8:	jne    0x40a540
  40a3de:	cmp    BYTE PTR [r14+r13*1],0x0
  40a3e3:	je     0x40a5c4
  40a3e9:	mov    DWORD PTR [rsp+0x38],r12d
  40a3ee:	add    r12d,0x1
  40a3f2:	add    ebp,0x1
  40a3f5:	add    r15,0x68
  40a3f9:	cmp    edi,r12d
  40a3fc:	jg     0x40a3b4
  40a3fe:	test   ebp,ebp
  40a400:	mov    r12,QWORD PTR [rsp+0x40]
  40a405:	je     0x40a590
  40a40b:	cmp    ebp,0x1
  40a40e:	je     0x40a690
  40a414:	mov    rax,QWORD PTR [rsp+0x120]
  40a41c:	test   BYTE PTR [rax+0x10],0x4
  40a420:	je     0x40a522
  40a426:	mov    r12,QWORD PTR [rax+0x20]
  40a42a:	mov    rdi,QWORD PTR [rip+0xe537]        # 0x418968
  40a431:	mov    rsi,QWORD PTR [rip+0x19198]        # 0x4235d0
  40a438:	call   rsi
  40a43a:	lea    rcx,[rax+0x60]
  40a43e:	mov    DWORD PTR [rsp+0x20],ebp
  40a442:	mov    r9,rbx
  40a445:	mov    r8,r12
  40a448:	mov    rdx,rdi
  40a44b:	call   0x401a90
  40a450:	cmp    ebp,0x4
  40a453:	jg     0x40a722
  40a459:	mov    rcx,rbx
  40a45c:	lea    rbp,[rip+0xf7e3]        # 0x419c46
  40a463:	call   0x4177b8
  40a468:	mov    r12d,eax
  40a46b:	mov    rax,QWORD PTR [rsp+0x120]
  40a473:	test   BYTE PTR [rax+0x10],0x3
  40a477:	lea    rax,[rip+0x1090b]        # 0x41ad89
  40a47e:	cmovne rbp,rax
  40a482:	mov    rax,QWORD PTR [rsp+0x120]
  40a48a:	xor    r13d,r13d
  40a48d:	mov    rdi,QWORD PTR [rax+0x78]
  40a491:	call   rsi
  40a493:	mov    rcx,QWORD PTR [rip+0xe4c6]        # 0x418960
  40a49a:	lea    rdx,[rax+0x60]
  40a49e:	call   0x417870
  40a4a3:	mov    r14,QWORD PTR [rdi+0x50]
  40a4a7:	test   r14,r14
  40a4aa:	je     0x40a4e1
  40a4ac:	mov    r8d,r12d
  40a4af:	mov    rdx,r14
  40a4b2:	mov    rcx,rbx
  40a4b5:	call   0x40a290
  40a4ba:	test   eax,eax
  40a4bc:	je     0x40a73f
  40a4c2:	mov    r14,QWORD PTR [rdi+0x58]
  40a4c6:	test   r14,r14
  40a4c9:	je     0x40a4e1
  40a4cb:	mov    r8d,r12d
  40a4ce:	mov    rdx,r14
  40a4d1:	mov    rcx,rbx
  40a4d4:	call   0x40a290
  40a4d9:	test   eax,eax
  40a4db:	je     0x40a73f
  40a4e1:	mov    rax,QWORD PTR [rsp+0x120]
  40a4e9:	add    rdi,0x68
  40a4ed:	add    r13d,0x1
  40a4f1:	cmp    r13d,DWORD PTR [rax+0xb0]
  40a4f8:	jl     0x40a4a3
  40a4fa:	jmp    0x40a722
  40a4ff:	nop
  40a500:	cmp    r12,rdx
  40a503:	jne    0x40a310
  40a509:	nop    DWORD PTR [rax+0x0]
  40a510:	mov    rax,QWORD PTR [rsp+0x120]
  40a518:	test   BYTE PTR [rax+0x10],0x4
  40a51c:	jne    0x40a6ff
  40a522:	mov    eax,0xffffffff
  40a527:	add    rsp,0xd8
  40a52e:	pop    rbx
  40a52f:	pop    rsi
  40a530:	pop    rdi
  40a531:	pop    rbp
  40a532:	pop    r12
  40a534:	pop    r13
  40a536:	pop    r14
  40a538:	pop    r15
  40a53a:	ret    
  40a53b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a540:	mov    r14,QWORD PTR [r15+0x58]
  40a544:	test   r14,r14
  40a547:	je     0x40a3a7
  40a54d:	mov    r8d,esi
  40a550:	mov    rdx,r14
  40a553:	mov    rcx,rbx
  40a556:	call   0x40a290
  40a55b:	test   eax,eax
  40a55d:	jne    0x40a3a7
  40a563:	cmp    BYTE PTR [r14+r13*1],0x0
  40a568:	je     0x40a69a
  40a56e:	mov    BYTE PTR [rsp+0x3f],0x1
  40a573:	jmp    0x40a3e9
  40a578:	nop    DWORD PTR [rax+rax*1+0x0]
  40a580:	xor    r12d,r12d
  40a583:	jmp    0x40a34d
  40a588:	nop    DWORD PTR [rax+rax*1+0x0]
  40a590:	mov    rax,QWORD PTR [rsp+0x120]
  40a598:	test   r12,r12
  40a59b:	mov    eax,DWORD PTR [rax+0x10]
  40a59e:	je     0x40a6ac
  40a5a4:	test   al,0x4
  40a5a6:	je     0x40a522
  40a5ac:	mov    rax,QWORD PTR [rsp+0x120]
  40a5b4:	mov    rsi,QWORD PTR [rip+0xe3fd]        # 0x4189b8
  40a5bb:	mov    rdi,QWORD PTR [rax+0x20]
  40a5bf:	jmp    0x40a70a
  40a5c4:	mov    r15d,r12d
  40a5c7:	mov    r12,QWORD PTR [rsp+0x40]
  40a5cc:	movsxd r10,r15d
  40a5cf:	mov    rcx,QWORD PTR [rsp+0x48]
  40a5d4:	lea    rax,[r10+r10*2]
  40a5d8:	lea    rax,[r10+rax*4]
  40a5dc:	lea    rbx,[rcx+rax*8]
  40a5e0:	test   DWORD PTR [rbx+0x10],0x280000
  40a5e7:	je     0x40a660
  40a5e9:	mov    rax,QWORD PTR [rsp+0x120]
  40a5f1:	test   BYTE PTR [rax+0x10],0x4
  40a5f5:	je     0x40a522
  40a5fb:	mov    r12,QWORD PTR [rbx+0x50]
  40a5ff:	mov    rbp,QWORD PTR [rax+0x28]
  40a603:	mov    rdi,QWORD PTR [rip+0xe396]        # 0x4189a0
  40a60a:	mov    rsi,QWORD PTR [rip+0x18fbf]        # 0x4235d0
  40a611:	call   rsi
  40a613:	lea    rcx,[rax+0x60]
  40a617:	mov    r9,r12
  40a61a:	mov    r8,rbp
  40a61d:	mov    rdx,rdi
  40a620:	call   0x401a90
  40a625:	mov    rbx,QWORD PTR [rbx+0x40]
  40a629:	test   rbx,rbx
  40a62c:	je     0x40a643
  40a62e:	call   rsi
  40a630:	lea    rdx,[rip+0x10822]        # 0x41ae59
  40a637:	lea    rcx,[rax+0x60]
  40a63b:	mov    r8,rbx
  40a63e:	call   0x401a90
  40a643:	call   rsi
  40a645:	lea    rdx,[rax+0x60]
  40a649:	mov    ecx,0xa
  40a64e:	call   0x417878
  40a653:	jmp    0x40a722
  40a658:	nop    DWORD PTR [rax+rax*1+0x0]
  40a660:	cmp    BYTE PTR [rsp+0x3f],0x0
  40a665:	je     0x40a673
  40a667:	mov    rax,QWORD PTR [rsp+0x130]
  40a66f:	or     DWORD PTR [rax+0x10],0x20
  40a673:	mov    rax,QWORD PTR [rsp+0x130]
  40a67b:	mov    QWORD PTR [rax],rbx
  40a67e:	mov    QWORD PTR [rax+0x8],r12
  40a682:	mov    DWORD PTR [rax+0x14],0x2
  40a689:	xor    eax,eax
  40a68b:	jmp    0x40a527
  40a690:	mov    r15d,DWORD PTR [rsp+0x38]
  40a695:	jmp    0x40a5cc
  40a69a:	mov    r15d,r12d
  40a69d:	mov    BYTE PTR [rsp+0x3f],0x1
  40a6a2:	mov    r12,QWORD PTR [rsp+0x40]
  40a6a7:	jmp    0x40a5cc
  40a6ac:	test   al,0x3
  40a6ae:	jne    0x40a5a4
  40a6b4:	mov    rcx,QWORD PTR [rsp+0x120]
  40a6bc:	movzx  edx,WORD PTR [rcx+0xae]
  40a6c3:	cmp    dx,0x8000
  40a6c8:	je     0x40a5a4
  40a6ce:	movzx  eax,dx
  40a6d1:	mov    rcx,QWORD PTR [rsp+0x48]
  40a6d6:	lea    rdx,[rax+rax*2]
  40a6da:	lea    rax,[rax+rdx*4]
  40a6de:	lea    rax,[rcx+rax*8]
  40a6e2:	mov    rcx,QWORD PTR [rsp+0x130]
  40a6ea:	mov    QWORD PTR [rcx],rax
  40a6ed:	mov    QWORD PTR [rcx+0x8],rbx
  40a6f1:	xor    eax,eax
  40a6f3:	mov    DWORD PTR [rcx+0x14],0x3
  40a6fa:	jmp    0x40a527
  40a6ff:	mov    rdi,QWORD PTR [rax+0x28]
  40a703:	mov    rsi,QWORD PTR [rip+0xe2ce]        # 0x4189d8
  40a70a:	call   QWORD PTR [rip+0x18ec0]        # 0x4235d0
  40a710:	lea    rcx,[rax+0x60]
  40a714:	mov    r9,rbx
  40a717:	mov    r8,rdi
  40a71a:	mov    rdx,rsi
  40a71d:	call   0x401a90
  40a722:	mov    rcx,QWORD PTR [rsp+0x120]
  40a72a:	mov    edx,0x1
  40a72f:	call   QWORD PTR [rcx+0x98]
  40a735:	mov    ecx,0x1
  40a73a:	call   0x417930
  40a73f:	call   rsi
  40a741:	lea    rdx,[rip+0x104bc]        # 0x41ac04
  40a748:	lea    rcx,[rax+0x60]
  40a74c:	mov    r9,r14
  40a74f:	mov    r8,rbp
  40a752:	call   0x401a90
  40a757:	jmp    0x40a4e1
  40a75c:	nop    DWORD PTR [rax+0x0]
  40a760:	push   rsi
  40a761:	push   rbx
  40a762:	sub    rsp,0x38
  40a766:	mov    rax,QWORD PTR [rcx+0x18]
  40a76a:	test   rax,rax
  40a76d:	je     0x40a77a
  40a76f:	movzx  eax,BYTE PTR [rax]
  40a772:	test   al,al
  40a774:	jne    0x40a840
  40a77a:	mov    eax,DWORD PTR [rcx+0x14]
  40a77d:	cmp    eax,DWORD PTR [rcx+0x4]
  40a780:	jae    0x40a7ef
  40a782:	mov    rbx,rcx
  40a785:	mov    r8,rdx
  40a788:	mov    ecx,eax
  40a78a:	mov    rdx,QWORD PTR [rbx+0x8]
  40a78e:	mov    rdx,QWORD PTR [rdx+rcx*8]
  40a792:	mov    ecx,DWORD PTR [rbx+0x10]
  40a795:	test   cl,0x3
  40a798:	mov    QWORD PTR [rbx+0x18],rdx
  40a79c:	jne    0x40a7e2
  40a79e:	add    eax,0x1
  40a7a1:	mov    DWORD PTR [rbx+0x14],eax
  40a7a4:	cmp    BYTE PTR [rdx],0x2d
  40a7a7:	jne    0x40a830
  40a7ad:	nop    DWORD PTR [rax]
  40a7b0:	add    rdx,0x1
  40a7b4:	cmp    BYTE PTR [rdx],0x2d
  40a7b7:	je     0x40a7b0
  40a7b9:	movzx  esi,WORD PTR [rbx+0xae]
  40a7c0:	mov    eax,0xffff8000
  40a7c5:	mov    rcx,rbx
  40a7c8:	mov    WORD PTR [rbx+0xae],ax
  40a7cf:	call   0x40a2e0
  40a7d4:	mov    WORD PTR [rbx+0xae],si
  40a7db:	add    rsp,0x38
  40a7df:	pop    rbx
  40a7e0:	pop    rsi
  40a7e1:	ret    
  40a7e2:	lea    r9,[rdx+0x1]
  40a7e6:	mov    QWORD PTR [rbx+0x18],r9
  40a7ea:	cmp    BYTE PTR [rdx],0x2d
  40a7ed:	je     0x40a800
  40a7ef:	mov    eax,0x1
  40a7f4:	add    rsp,0x38
  40a7f8:	pop    rbx
  40a7f9:	pop    rsi
  40a7fa:	ret    
  40a7fb:	nop    DWORD PTR [rax+rax*1+0x0]
  40a800:	cmp    BYTE PTR [rdx+0x1],0x0
  40a804:	je     0x40a7ef
  40a806:	add    eax,0x1
  40a809:	mov    DWORD PTR [rbx+0x14],eax
  40a80c:	movzx  eax,BYTE PTR [rdx+0x1]
  40a810:	cmp    al,0x2d
  40a812:	jne    0x40a854
  40a814:	lea    rax,[rdx+0x2]
  40a818:	mov    QWORD PTR [rbx+0x18],rax
  40a81c:	cmp    BYTE PTR [rdx+0x2],0x0
  40a820:	je     0x40a7ef
  40a822:	and    ecx,0x1
  40a825:	je     0x40a86a
  40a827:	mov    rdx,rax
  40a82a:	nop    WORD PTR [rax+rax*1+0x0]
  40a830:	mov    rcx,rbx
  40a833:	add    rsp,0x38
  40a837:	pop    rbx
  40a838:	pop    rsi
  40a839:	jmp    0x40a2e0
  40a83e:	xchg   ax,ax
  40a840:	lea    r9,[rdx+0x14]
  40a844:	mov    r8,rdx
  40a847:	mov    edx,eax
  40a849:	add    rsp,0x38
  40a84d:	pop    rbx
  40a84e:	pop    rsi
  40a84f:	jmp    0x403090
  40a854:	and    ecx,0x2
  40a857:	jne    0x40a85e
  40a859:	mov    rdx,r9
  40a85c:	jmp    0x40a830
  40a85e:	movzx  edx,al
  40a861:	lea    r9,[r8+0x14]
  40a865:	mov    rcx,rbx
  40a868:	jmp    0x40a849
  40a86a:	mov    rsi,QWORD PTR [rbx+0x20]
  40a86e:	mov    QWORD PTR [rsp+0x28],rdx
  40a873:	mov    rbx,QWORD PTR [rip+0xe13e]        # 0x4189b8
  40a87a:	call   QWORD PTR [rip+0x18d50]        # 0x4235d0
  40a880:	mov    rdx,QWORD PTR [rsp+0x28]
  40a885:	lea    rcx,[rax+0x60]
  40a889:	mov    r8,rsi
  40a88c:	mov    r9,rdx
  40a88f:	mov    rdx,rbx
  40a892:	call   0x401a90
  40a897:	or     eax,0xffffffff
  40a89a:	jmp    0x40a7f4
  40a89f:	nop
  40a8a0:	push   rdi
  40a8a1:	push   rsi
  40a8a2:	push   rbx
  40a8a3:	sub    rsp,0x50
  40a8a7:	or     DWORD PTR [rcx+0x10],0x8000
  40a8ae:	lea    rdi,[rsp+0x30]
  40a8b3:	mov    rbx,rcx
  40a8b6:	mov    DWORD PTR [rcx+0x14],0x1
  40a8bd:	mov    QWORD PTR [rcx+0x18],0x0
  40a8c5:	mov    rdx,rdi
  40a8c8:	mov    rcx,rbx
  40a8cb:	mov    QWORD PTR [rsp+0x30],0x0
  40a8d4:	mov    QWORD PTR [rsp+0x38],0x0
  40a8dd:	mov    DWORD PTR [rsp+0x40],0x2
  40a8e5:	mov    DWORD PTR [rsp+0x44],0x0
  40a8ed:	call   0x40a760
  40a8f2:	test   eax,eax
  40a8f4:	mov    esi,eax
  40a8f6:	jne    0x40a905
  40a8f8:	mov    rdx,rdi
  40a8fb:	mov    rcx,rbx
  40a8fe:	call   0x404380
  40a903:	mov    esi,eax
  40a905:	cmp    esi,0xffffffff
  40a908:	je     0x40a940
  40a90a:	cmp    esi,0x1
  40a90d:	je     0x40a960
  40a90f:	mov    eax,DWORD PTR [rsp+0x40]
  40a913:	mov    edx,eax
  40a915:	and    edx,0x20020
  40a91b:	cmp    edx,0x20000
  40a921:	je     0x40a92f
  40a923:	and    eax,0x40020
  40a928:	cmp    eax,0x40020
  40a92d:	jne    0x40a8c5
  40a92f:	mov    rdx,rdi
  40a932:	mov    rcx,rbx
  40a935:	call   0x402ee0
  40a93a:	test   eax,eax
  40a93c:	je     0x40a8c5
  40a93e:	xchg   ax,ax
  40a940:	mov    edx,DWORD PTR [rbx+0x10]
  40a943:	mov    eax,esi
  40a945:	test   dl,0x4
  40a948:	jne    0x40a973
  40a94a:	and    dh,0x7f
  40a94d:	mov    DWORD PTR [rbx+0x10],edx
  40a950:	add    rsp,0x50
  40a954:	pop    rbx
  40a955:	pop    rsi
  40a956:	pop    rdi
  40a957:	ret    
  40a958:	nop    DWORD PTR [rax+rax*1+0x0]
  40a960:	mov    edx,DWORD PTR [rbx+0x10]
  40a963:	xor    eax,eax
  40a965:	and    dh,0x7f
  40a968:	mov    DWORD PTR [rbx+0x10],edx
  40a96b:	add    rsp,0x50
  40a96f:	pop    rbx
  40a970:	pop    rsi
  40a971:	pop    rdi
  40a972:	ret    
  40a973:	mov    DWORD PTR [rsp+0x2c],esi
  40a977:	mov    edx,0x1
  40a97c:	mov    rcx,rbx
  40a97f:	call   QWORD PTR [rbx+0x98]
  40a985:	mov    edx,DWORD PTR [rbx+0x10]
  40a988:	mov    eax,DWORD PTR [rsp+0x2c]
  40a98c:	and    dh,0x7f
  40a98f:	mov    DWORD PTR [rbx+0x10],edx
  40a992:	add    rsp,0x50
  40a996:	pop    rbx
  40a997:	pop    rsi
  40a998:	pop    rdi
  40a999:	ret    
  40a99a:	nop    WORD PTR [rax+rax*1+0x0]
  40a9a0:	push   rsi
  40a9a1:	push   rbx
  40a9a2:	sub    rsp,0x58
  40a9a6:	lea    rsi,[rsp+0x30]
  40a9ab:	mov    rbx,rcx
  40a9ae:	mov    rdx,rsi
  40a9b1:	mov    rcx,rbx
  40a9b4:	mov    QWORD PTR [rsp+0x30],0x0
  40a9bd:	mov    QWORD PTR [rsp+0x38],0x0
  40a9c6:	mov    DWORD PTR [rsp+0x40],0x4
  40a9ce:	mov    DWORD PTR [rsp+0x44],0x0
  40a9d6:	call   0x40a760
  40a9db:	test   eax,eax
  40a9dd:	jne    0x40a9ea
  40a9df:	mov    rdx,rsi
  40a9e2:	mov    rcx,rbx
  40a9e5:	call   0x404380
  40a9ea:	cmp    eax,0xffffffff
  40a9ed:	je     0x40aa45
  40a9ef:	cmp    eax,0x1
  40a9f2:	je     0x40aa60
  40a9f4:	mov    eax,DWORD PTR [rsp+0x40]
  40a9f8:	test   eax,0x20020
  40a9fd:	je     0x40aa32
  40a9ff:	mov    edx,eax
  40aa01:	and    edx,0x40020
  40aa07:	cmp    edx,0x20
  40aa0a:	je     0x40aa32
  40aa0c:	mov    edx,eax
  40aa0e:	and    edx,0x400020
  40aa14:	cmp    edx,0x400000
  40aa1a:	je     0x40aa28
  40aa1c:	and    eax,0x800020
  40aa21:	cmp    eax,0x800020
  40aa26:	jne    0x40a9ae
  40aa28:	mov    rax,QWORD PTR [rsp+0x30]
  40aa2d:	sub    WORD PTR [rax+0xe],0x1
  40aa32:	mov    rdx,rsi
  40aa35:	mov    rcx,rbx
  40aa38:	call   0x402ee0
  40aa3d:	test   eax,eax
  40aa3f:	je     0x40a9ae
  40aa45:	test   BYTE PTR [rbx+0x10],0x4
  40aa49:	mov    eax,0xffffffff
  40aa4e:	jne    0x40aa70
  40aa50:	add    rsp,0x58
  40aa54:	pop    rbx
  40aa55:	pop    rsi
  40aa56:	ret    
  40aa57:	nop    WORD PTR [rax+rax*1+0x0]
  40aa60:	xor    al,al
  40aa62:	add    rsp,0x58
  40aa66:	pop    rbx
  40aa67:	pop    rsi
  40aa68:	ret    
  40aa69:	nop    DWORD PTR [rax+0x0]
  40aa70:	mov    DWORD PTR [rsp+0x2c],eax
  40aa74:	mov    edx,0x1
  40aa79:	mov    rcx,rbx
  40aa7c:	call   QWORD PTR [rbx+0x98]
  40aa82:	mov    eax,DWORD PTR [rsp+0x2c]
  40aa86:	add    rsp,0x58
  40aa8a:	pop    rbx
  40aa8b:	pop    rsi
  40aa8c:	ret    
  40aa8d:	nop    DWORD PTR [rax]
  40aa90:	push   r14
  40aa92:	push   r13
  40aa94:	push   r12
  40aa96:	push   rbp
  40aa97:	push   rdi
  40aa98:	push   rsi
  40aa99:	push   rbx
  40aa9a:	sub    rsp,0x20
  40aa9e:	mov    rax,QWORD PTR [rip+0x16843]        # 0x4212e8
  40aaa5:	mov    rbp,rcx
  40aaa8:	mov    rdi,rdx
  40aaab:	mov    rbx,r8
  40aaae:	mov    r12d,r9d
  40aab1:	test   rax,rax
  40aab4:	je     0x40ad84
  40aaba:	movzx  edx,BYTE PTR [rbx]
  40aabd:	cmp    BYTE PTR [rax+rdx*1],0x0
  40aac1:	je     0x40aad2
  40aac3:	add    rbx,0x1
  40aac7:	movzx  r10d,BYTE PTR [rbx]
  40aacb:	cmp    BYTE PTR [rax+r10*1],0x0
  40aad0:	jne    0x40aac3
  40aad2:	lea    rdx,[rip+0x1022c]        # 0x41ad05
  40aad9:	mov    rcx,rbx
  40aadc:	call   0x4177a0
  40aae1:	test   rax,rax
  40aae4:	mov    r13,rax
  40aae7:	je     0x40ad37
  40aaed:	cmp    DWORD PTR [rsp+0x80],0x2
  40aaf5:	je     0x40ad00
  40aafb:	movzx  eax,BYTE PTR [rax]
  40aafe:	xor    r14d,r14d
  40ab01:	cmp    al,0x7f
  40ab03:	jbe    0x40abe0
  40ab09:	mov    rdx,QWORD PTR [rip+0x166d0]        # 0x4211e0
  40ab10:	lea    rsi,[r13+0x1]
  40ab14:	mov    BYTE PTR [r13+0x0],0x0
  40ab19:	test   rdx,rdx
  40ab1c:	je     0x40adb7
  40ab22:	movzx  eax,BYTE PTR [r13+0x1]
  40ab27:	cmp    BYTE PTR [rdx+rax*1],0x0
  40ab2b:	mov    r10,rax
  40ab2e:	je     0x40ab42
  40ab30:	add    rsi,0x1
  40ab34:	movzx  r11d,BYTE PTR [rsi]
  40ab38:	cmp    BYTE PTR [rdx+r11*1],0x0
  40ab3d:	mov    r10,r11
  40ab40:	jne    0x40ab30
  40ab42:	test   r14d,r14d
  40ab45:	mov    r13,rsi
  40ab48:	je     0x40ab5e
  40ab4a:	cmp    r10b,0x3d
  40ab4e:	je     0x40ac70
  40ab54:	cmp    r10b,0x3a
  40ab58:	je     0x40ac70
  40ab5e:	movzx  eax,BYTE PTR [rbx+0x1]
  40ab62:	cmp    al,0x7f
  40ab64:	ja     0x40abb5
  40ab66:	lea    rdx,[rip+0x12c93]        # 0x41d800
  40ab6d:	test   DWORD PTR [rdx+rax*4],0x3b0040
  40ab74:	je     0x40abb5
  40ab76:	mov    r8,rdi
  40ab79:	mov    rdx,rbx
  40ab7c:	mov    rcx,rbp
  40ab7f:	call   0x40a2e0
  40ab84:	test   eax,eax
  40ab86:	jne    0x40abcb
  40ab88:	test   r12d,r12d
  40ab8b:	je     0x40ac00
  40ab8d:	mov    eax,DWORD PTR [rdi+0x10]
  40ab90:	test   ah,0x1
  40ab93:	jne    0x40abcb
  40ab95:	movzx  edx,BYTE PTR [r13+0x0]
  40ab9a:	cmp    dl,0x22
  40ab9d:	je     0x40acb0
  40aba3:	cmp    dl,0x27
  40aba6:	je     0x40acb0
  40abac:	mov    QWORD PTR [rdi+0x8],r13
  40abb0:	jmp    0x40acc1
  40abb5:	movsx  edx,BYTE PTR [rbx]
  40abb8:	lea    r9,[rdi+0x14]
  40abbc:	mov    r8,rdi
  40abbf:	mov    rcx,rbp
  40abc2:	call   0x403090
  40abc7:	test   eax,eax
  40abc9:	je     0x40ab88
  40abcb:	add    rsp,0x20
  40abcf:	pop    rbx
  40abd0:	pop    rsi
  40abd1:	pop    rdi
  40abd2:	pop    rbp
  40abd3:	pop    r12
  40abd5:	pop    r13
  40abd7:	pop    r14
  40abd9:	ret    
  40abda:	nop    WORD PTR [rax+rax*1+0x0]
  40abe0:	lea    rdx,[rip+0x12c19]        # 0x41d800
  40abe7:	xor    r14d,r14d
  40abea:	test   DWORD PTR [rdx+rax*4],0xc01
  40abf1:	setne  r14b
  40abf5:	jmp    0x40ab09
  40abfa:	nop    WORD PTR [rax+rax*1+0x0]
  40ac00:	movzx  eax,BYTE PTR [r13+0x0]
  40ac05:	cmp    al,0x22
  40ac07:	je     0x40ad5e
  40ac0d:	cmp    al,0x27
  40ac0f:	je     0x40ad5e
  40ac15:	mov    QWORD PTR [rdi+0x8],r13
  40ac19:	mov    rax,QWORD PTR [rdi]
  40ac1c:	mov    eax,DWORD PTR [rax+0x10]
  40ac1f:	test   ah,0xf0
  40ac22:	jne    0x40ad10
  40ac28:	cmp    BYTE PTR [r13+0x0],0x0
  40ac2d:	jne    0x40abcb
  40ac2f:	mov    QWORD PTR [rdi+0x8],0x0
  40ac37:	mov    ebx,DWORD PTR [rip+0xdc53]        # 0x418890
  40ac3d:	mov    eax,DWORD PTR [rsp+0x80]
  40ac44:	mov    rdx,rdi
  40ac47:	mov    rcx,rbp
  40ac4a:	mov    DWORD PTR [rip+0xdc40],eax        # 0x418890
  40ac50:	call   0x402ee0
  40ac55:	mov    DWORD PTR [rip+0xdc35],ebx        # 0x418890
  40ac5b:	add    rsp,0x20
  40ac5f:	pop    rbx
  40ac60:	pop    rsi
  40ac61:	pop    rdi
  40ac62:	pop    rbp
  40ac63:	pop    r12
  40ac65:	pop    r13
  40ac67:	pop    r14
  40ac69:	ret    
  40ac6a:	nop    WORD PTR [rax+rax*1+0x0]
  40ac70:	mov    rax,QWORD PTR [rip+0x16569]        # 0x4211e0
  40ac77:	lea    r13,[rsi+0x1]
  40ac7b:	test   rax,rax
  40ac7e:	je     0x40adc9
  40ac84:	movzx  edx,BYTE PTR [rsi+0x1]
  40ac88:	cmp    BYTE PTR [rax+rdx*1],0x0
  40ac8c:	je     0x40ab5e
  40ac92:	add    r13,0x1
  40ac96:	movzx  edx,BYTE PTR [r13+0x0]
  40ac9b:	cmp    BYTE PTR [rax+rdx*1],0x0
  40ac9f:	jne    0x40ac92
  40aca1:	jmp    0x40ab5e
  40aca6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40acb0:	xor    edx,edx
  40acb2:	mov    rcx,r13
  40acb5:	call   0x406ae0
  40acba:	mov    eax,DWORD PTR [rdi+0x10]
  40acbd:	mov    QWORD PTR [rdi+0x8],r13
  40acc1:	mov    edx,eax
  40acc3:	and    edx,0x60000
  40acc9:	cmp    edx,0x20000
  40accf:	je     0x40ad93
  40acd5:	jbe    0x40ad48
  40acd7:	cmp    edx,0x40000
  40acdd:	je     0x40ada5
  40ace3:	cmp    edx,0x60000
  40ace9:	jne    0x40ac19
  40acef:	test   r12d,r12d
  40acf2:	jg     0x40abcb
  40acf8:	jmp    0x40ac19
  40acfd:	nop    DWORD PTR [rax]
  40ad00:	mov    BYTE PTR [rax],0x0
  40ad03:	add    r13,0x1
  40ad07:	jmp    0x40ab5e
  40ad0c:	nop    DWORD PTR [rax+0x0]
  40ad10:	test   eax,0x10000
  40ad15:	je     0x40ad6d
  40ad17:	cmp    BYTE PTR [r13+0x0],0x0
  40ad1c:	je     0x40ac2f
  40ad22:	mov    rcx,r13
  40ad25:	call   0x403640
  40ad2a:	or     DWORD PTR [rdi+0x10],0x40
  40ad2e:	mov    QWORD PTR [rdi+0x8],rax
  40ad32:	jmp    0x40ac37
  40ad37:	mov    rcx,rbx
  40ad3a:	call   0x4177b8
  40ad3f:	lea    r13,[rbx+rax*1]
  40ad43:	jmp    0x40ab5e
  40ad48:	test   edx,edx
  40ad4a:	jne    0x40ac19
  40ad50:	test   r12d,r12d
  40ad53:	jns    0x40ac19
  40ad59:	jmp    0x40abcb
  40ad5e:	xor    edx,edx
  40ad60:	mov    rcx,r13
  40ad63:	call   0x406ae0
  40ad68:	jmp    0x40ac15
  40ad6d:	cmp    BYTE PTR [r13+0x0],0x0
  40ad72:	jne    0x40ad22
  40ad74:	lea    rax,[rip+0x11894]        # 0x41c60f
  40ad7b:	mov    QWORD PTR [rdi+0x8],rax
  40ad7f:	jmp    0x40ac37
  40ad84:	mov    ecx,0x2d
  40ad89:	call   0x4033e0
  40ad8e:	jmp    0x40aaba
  40ad93:	test   r12d,r12d
  40ad96:	js     0x40adaa
  40ad98:	test   al,0x20
  40ad9a:	je     0x40ac19
  40ada0:	jmp    0x40abcb
  40ada5:	test   r12d,r12d
  40ada8:	js     0x40ad98
  40adaa:	test   al,0x20
  40adac:	jne    0x40ac19
  40adb2:	jmp    0x40abcb
  40adb7:	mov    ecx,0xc
  40adbc:	call   0x4033e0
  40adc1:	mov    rdx,rax
  40adc4:	jmp    0x40ab22
  40adc9:	mov    ecx,0xc
  40adce:	call   0x4033e0
  40add3:	jmp    0x40ac84
  40add8:	nop    DWORD PTR [rax+rax*1+0x0]
  40ade0:	push   rdi
  40ade1:	push   rsi
  40ade2:	push   rbx
  40ade3:	sub    rsp,0x50
  40ade7:	mov    esi,DWORD PTR [rcx+0x10]
  40adea:	mov    rbx,rcx
  40aded:	mov    QWORD PTR [rsp+0x30],0x0
  40adf6:	mov    QWORD PTR [rsp+0x38],0x0
  40adff:	mov    DWORD PTR [rsp+0x40],0x1
  40ae07:	mov    DWORD PTR [rsp+0x44],0x0
  40ae0f:	mov    eax,esi
  40ae11:	and    eax,0xfffffffb
  40ae14:	mov    DWORD PTR [rcx+0x10],eax
  40ae17:	mov    rcx,rdx
  40ae1a:	call   0x403640
  40ae1f:	lea    rdx,[rsp+0x30]
  40ae24:	mov    rdi,rax
  40ae27:	xor    r9d,r9d
  40ae2a:	mov    r8,rax
  40ae2d:	mov    rcx,rbx
  40ae30:	mov    DWORD PTR [rsp+0x20],0x0
  40ae38:	call   0x40aa90
  40ae3d:	mov    rcx,rdi
  40ae40:	call   0x417860
  40ae45:	mov    DWORD PTR [rbx+0x10],esi
  40ae48:	add    rsp,0x50
  40ae4c:	pop    rbx
  40ae4d:	pop    rsi
  40ae4e:	pop    rdi
  40ae4f:	ret    
  40ae50:	push   rbp
  40ae51:	push   rdi
  40ae52:	push   rsi
  40ae53:	push   rbx
  40ae54:	sub    rsp,0x48
  40ae58:	mov    rsi,QWORD PTR [rdx+0x18]
  40ae5c:	cmp    rcx,0xf
  40ae60:	mov    QWORD PTR [rsp+0x20],0x0
  40ae69:	mov    QWORD PTR [rsp+0x28],0x0
  40ae72:	mov    DWORD PTR [rsp+0x30],0x2
  40ae7a:	mov    DWORD PTR [rsp+0x34],0x0
  40ae82:	jbe    0x40ae8b
  40ae84:	mov    eax,DWORD PTR [rdx+0x10]
  40ae87:	test   al,0x8
  40ae89:	je     0x40ae94
  40ae8b:	add    rsp,0x48
  40ae8f:	pop    rbx
  40ae90:	pop    rsi
  40ae91:	pop    rdi
  40ae92:	pop    rbp
  40ae93:	ret    
  40ae94:	test   ah,0x80
  40ae97:	je     0x40af30
  40ae9d:	test   BYTE PTR [rcx+0x12],0x4
  40aea1:	mov    rbx,rcx
  40aea4:	je     0x40af62
  40aeaa:	lea    rdi,[rsp+0x20]
  40aeaf:	mov    rdx,rsi
  40aeb2:	mov    r8,rdi
  40aeb5:	call   0x40a2e0
  40aeba:	test   eax,eax
  40aebc:	jne    0x40af62
  40aec2:	mov    rdx,rdi
  40aec5:	mov    rcx,rbx
  40aec8:	call   0x403480
  40aecd:	test   eax,eax
  40aecf:	jne    0x40af62
  40aed5:	test   BYTE PTR [rbx+0x11],0x80
  40aed9:	mov    eax,DWORD PTR [rsp+0x30]
  40aedd:	jne    0x40af40
  40aedf:	test   eax,0x20020
  40aee4:	je     0x40af13
  40aee6:	mov    edx,eax
  40aee8:	and    edx,0x40020
  40aeee:	cmp    edx,0x20
  40aef1:	je     0x40af13
  40aef3:	mov    edx,eax
  40aef5:	and    edx,0x400020
  40aefb:	cmp    edx,0x400000
  40af01:	je     0x40af13
  40af03:	and    eax,0x800020
  40af08:	cmp    eax,0x800020
  40af0d:	jne    0x40ae8b
  40af13:	mov    rdx,rdi
  40af16:	mov    rcx,rbx
  40af19:	call   0x402ee0
  40af1e:	nop
  40af1f:	add    rsp,0x48
  40af23:	pop    rbx
  40af24:	pop    rsi
  40af25:	pop    rdi
  40af26:	pop    rbp
  40af27:	ret    
  40af28:	nop    DWORD PTR [rax+rax*1+0x0]
  40af30:	mov    DWORD PTR [rsp+0x30],0x4
  40af38:	jmp    0x40ae9d
  40af3d:	nop    DWORD PTR [rax]
  40af40:	mov    edx,eax
  40af42:	and    edx,0x20020
  40af48:	cmp    edx,0x20000
  40af4e:	je     0x40af13
  40af50:	and    eax,0x40020
  40af55:	cmp    eax,0x40020
  40af5a:	jne    0x40ae8b
  40af60:	jmp    0x40af13
  40af62:	mov    rbp,QWORD PTR [rbx+0x28]
  40af66:	mov    rdi,QWORD PTR [rip+0xda53]        # 0x4189c0
  40af6d:	call   QWORD PTR [rip+0x1865d]        # 0x4235d0
  40af73:	lea    rcx,[rax+0x60]
  40af77:	mov    r9,rsi
  40af7a:	mov    r8,rbp
  40af7d:	mov    rdx,rdi
  40af80:	call   0x401a90
  40af85:	mov    rcx,rbx
  40af88:	mov    edx,0x1
  40af8d:	call   QWORD PTR [rbx+0x98]
  40af93:	mov    ecx,0x1
  40af98:	call   0x417930
  40af9d:	nop
  40af9e:	xchg   ax,ax
  40afa0:	push   r12
  40afa2:	push   rbp
  40afa3:	push   rdi
  40afa4:	push   rsi
  40afa5:	push   rbx
  40afa6:	sub    rsp,0x40
  40afaa:	mov    rsi,QWORD PTR [rdx+0x18]
  40afae:	cmp    rcx,0xf
  40afb2:	mov    QWORD PTR [rsp+0x20],0x0
  40afbb:	mov    QWORD PTR [rsp+0x28],0x0
  40afc4:	mov    DWORD PTR [rsp+0x30],0x4
  40afcc:	mov    DWORD PTR [rsp+0x34],0x0
  40afd4:	jbe    0x40b0ef
  40afda:	cmp    BYTE PTR [rip+0x1606f],0x0        # 0x421050
  40afe1:	jne    0x40b0ef
  40afe7:	cmp    DWORD PTR [rcx],0x1ffff
  40afed:	mov    rbx,rcx
  40aff0:	jle    0x40b18b
  40aff6:	cmp    QWORD PTR [rcx+0xd0],0x0
  40affe:	je     0x40b18b
  40b004:	test   rsi,rsi
  40b007:	je     0x40b00e
  40b009:	cmp    BYTE PTR [rsi],0x0
  40b00c:	jne    0x40b05c
  40b00e:	mov    r12,QWORD PTR [rdx+0x50]
  40b012:	mov    rbp,QWORD PTR [rbx+0x28]
  40b016:	mov    rdi,QWORD PTR [rip+0xd9fb]        # 0x418a18
  40b01d:	call   QWORD PTR [rip+0x185ad]        # 0x4235d0
  40b023:	lea    rcx,[rax+0x60]
  40b027:	mov    r8,rbp
  40b02a:	mov    r9,r12
  40b02d:	mov    rdx,rdi
  40b030:	call   0x401a90
  40b035:	mov    edx,0x1
  40b03a:	mov    rcx,rbx
  40b03d:	call   QWORD PTR [rbx+0x98]
  40b043:	lea    rdx,[rip+0xec6e]        # 0x419cb8
  40b04a:	lea    rcx,[rip+0xec6f]        # 0x419cc0
  40b051:	mov    r8d,0x60
  40b057:	call   0x412a00
  40b05c:	cmp    BYTE PTR [rsi+0x1],0x0
  40b060:	mov    BYTE PTR [rip+0x15fe9],0x1        # 0x421050
  40b067:	jne    0x40b100
  40b06d:	movzx  edx,BYTE PTR [rsi]
  40b070:	cmp    dl,0x2a
  40b073:	je     0x40b163
  40b079:	lea    r8,[rsp+0x20]
  40b07e:	mov    rcx,rbx
  40b081:	lea    r9,[r8+0x14]
  40b085:	call   0x403090
  40b08a:	test   eax,eax
  40b08c:	je     0x40b0db
  40b08e:	movsx  ebp,BYTE PTR [rsi]
  40b091:	mov    rdi,QWORD PTR [rbx+0x20]
  40b095:	mov    rsi,QWORD PTR [rip+0xd914]        # 0x4189b0
  40b09c:	call   QWORD PTR [rip+0x1852e]        # 0x4235d0
  40b0a2:	lea    rcx,[rax+0x60]
  40b0a6:	mov    r8,rdi
  40b0a9:	mov    r9d,ebp
  40b0ac:	mov    rdx,rsi
  40b0af:	call   0x401a90
  40b0b4:	mov    edx,0x1
  40b0b9:	mov    rcx,rbx
  40b0bc:	call   QWORD PTR [rbx+0x98]
  40b0c2:	lea    rdx,[rip+0xebef]        # 0x419cb8
  40b0c9:	lea    rcx,[rip+0xebf0]        # 0x419cc0
  40b0d0:	mov    r8d,0x71
  40b0d6:	call   0x412a00
  40b0db:	mov    rdx,QWORD PTR [rsp+0x20]
  40b0e0:	mov    rcx,rbx
  40b0e3:	call   0x401970
  40b0e8:	mov    BYTE PTR [rip+0x15f61],0x0        # 0x421050
  40b0ef:	add    rsp,0x40
  40b0f3:	pop    rbx
  40b0f4:	pop    rsi
  40b0f5:	pop    rdi
  40b0f6:	pop    rbp
  40b0f7:	pop    r12
  40b0f9:	ret    
  40b0fa:	nop    WORD PTR [rax+rax*1+0x0]
  40b100:	lea    r8,[rsp+0x20]
  40b105:	mov    rdx,rsi
  40b108:	mov    rcx,rbx
  40b10b:	call   0x40a2e0
  40b110:	test   eax,eax
  40b112:	je     0x40b0db
  40b114:	mov    rbp,QWORD PTR [rbx+0x20]
  40b118:	mov    rdi,QWORD PTR [rip+0xd899]        # 0x4189b8
  40b11f:	call   QWORD PTR [rip+0x184ab]        # 0x4235d0
  40b125:	lea    rcx,[rax+0x60]
  40b129:	mov    r9,rsi
  40b12c:	mov    r8,rbp
  40b12f:	mov    rdx,rdi
  40b132:	call   0x401a90
  40b137:	mov    rcx,rbx
  40b13a:	mov    edx,0x1
  40b13f:	call   QWORD PTR [rbx+0x98]
  40b145:	lea    rdx,[rip+0xeb6c]        # 0x419cb8
  40b14c:	lea    rcx,[rip+0xeb6d]        # 0x419cc0
  40b153:	mov    r8d,0x79
  40b159:	call   0x412a00
  40b15e:	jmp    0x40b0db
  40b163:	mov    rdi,QWORD PTR [rbx+0x78]
  40b167:	mov    esi,DWORD PTR [rbx+0xb4]
  40b16d:	jmp    0x40b174
  40b16f:	nop
  40b170:	add    rdi,0x68
  40b174:	mov    rdx,rdi
  40b177:	mov    rcx,rbx
  40b17a:	sub    esi,0x1
  40b17d:	call   0x401970
  40b182:	test   esi,esi
  40b184:	jg     0x40b170
  40b186:	jmp    0x40b0e8
  40b18b:	mov    rcx,QWORD PTR [rip+0xd796]        # 0x418928
  40b192:	call   0x401f00
  40b197:	nop
  40b198:	nop    DWORD PTR [rax+rax*1+0x0]
  40b1a0:	push   r13
  40b1a2:	push   r12
  40b1a4:	push   rbp
  40b1a5:	push   rdi
  40b1a6:	push   rsi
  40b1a7:	push   rbx
  40b1a8:	sub    rsp,0x28
  40b1ac:	mov    rbp,rcx
  40b1af:	mov    ecx,0xa
  40b1b4:	mov    rsi,rdx
  40b1b7:	call   0x4038d0
  40b1bc:	mov    rcx,QWORD PTR [rbp+0x28]
  40b1c0:	mov    rdi,rax
  40b1c3:	call   0x4177b8
  40b1c8:	mov    r13,rax
  40b1cb:	mov    eax,0x3f3c
  40b1d0:	mov    WORD PTR [rdi],ax
  40b1d3:	movabs rax,0x6d6172676f7270
  40b1dd:	mov    r12d,r13d
  40b1e0:	mov    QWORD PTR [rdi+0x2],rax
  40b1e4:	mov    r10,QWORD PTR [rip+0x15ff5]        # 0x4211e0
  40b1eb:	lea    rbx,[rsi+0x1]
  40b1ef:	test   r10,r10
  40b1f2:	je     0x40b268
  40b1f4:	movzx  eax,BYTE PTR [rsi+0x1]
  40b1f8:	cmp    BYTE PTR [r10+rax*1],0x0
  40b1fd:	je     0x40b20f
  40b1ff:	nop
  40b200:	add    rbx,0x1
  40b204:	movzx  r9d,BYTE PTR [rbx]
  40b208:	cmp    BYTE PTR [r10+r9*1],0x0
  40b20d:	jne    0x40b200
  40b20f:	mov    rdx,QWORD PTR [rbp+0x28]
  40b213:	mov    r8d,r12d
  40b216:	mov    rcx,rbx
  40b219:	call   0x40a290
  40b21e:	test   eax,eax
  40b220:	jne    0x40b23d
  40b222:	lea    rsi,[rbx+r13*1]
  40b226:	movzx  eax,BYTE PTR [rsi]
  40b229:	cmp    al,0x7f
  40b22b:	ja     0x40b23d
  40b22d:	lea    rdx,[rip+0x125cc]        # 0x41d800
  40b234:	test   DWORD PTR [rdx+rax*4],0x1000c01
  40b23b:	jne    0x40b27a
  40b23d:	mov    rdx,rdi
  40b240:	mov    rcx,rbx
  40b243:	call   0x417790
  40b248:	test   rax,rax
  40b24b:	mov    rsi,rax
  40b24e:	jne    0x40b1e4
  40b250:	mov    rcx,rdi
  40b253:	call   0x417860
  40b258:	mov    rax,rsi
  40b25b:	add    rsp,0x28
  40b25f:	pop    rbx
  40b260:	pop    rsi
  40b261:	pop    rdi
  40b262:	pop    rbp
  40b263:	pop    r12
  40b265:	pop    r13
  40b267:	ret    
  40b268:	mov    ecx,0xc
  40b26d:	call   0x4033e0
  40b272:	mov    r10,rax
  40b275:	jmp    0x40b1f4
  40b27a:	mov    rcx,rdi
  40b27d:	call   0x417860
  40b282:	jmp    0x40b28c
  40b284:	add    rsi,0x1
  40b288:	cmp    al,0x3e
  40b28a:	je     0x40b258
  40b28c:	movzx  eax,BYTE PTR [rsi]
  40b28f:	test   al,al
  40b291:	jne    0x40b284
  40b293:	xor    esi,esi
  40b295:	mov    rax,rsi
  40b298:	add    rsp,0x28
  40b29c:	pop    rbx
  40b29d:	pop    rsi
  40b29e:	pop    rdi
  40b29f:	pop    rbp
  40b2a0:	pop    r12
  40b2a2:	pop    r13
  40b2a4:	ret    
  40b2a5:	nop
  40b2a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b2b0:	push   r14
  40b2b2:	push   r13
  40b2b4:	push   r12
  40b2b6:	push   rbp
  40b2b7:	push   rdi
  40b2b8:	push   rsi
  40b2b9:	push   rbx
  40b2ba:	sub    rsp,0x20
  40b2be:	test   rdx,rdx
  40b2c1:	mov    rbp,rcx
  40b2c4:	mov    rbx,rdx
  40b2c7:	je     0x40b340
  40b2c9:	mov    rax,QWORD PTR [rip+0x15f10]        # 0x4211e0
  40b2d0:	test   rax,rax
  40b2d3:	je     0x40b402
  40b2d9:	movzx  ecx,BYTE PTR [rbx]
  40b2dc:	cmp    BYTE PTR [rax+rcx*1],0x0
  40b2e0:	mov    rdx,rcx
  40b2e3:	je     0x40b2f7
  40b2e5:	add    rbx,0x1
  40b2e9:	movzx  r8d,BYTE PTR [rbx]
  40b2ed:	cmp    BYTE PTR [rax+r8*1],0x0
  40b2f2:	mov    rdx,r8
  40b2f5:	jne    0x40b2e5
  40b2f7:	test   dl,dl
  40b2f9:	je     0x40b331
  40b2fb:	xor    esi,esi
  40b2fd:	mov    r14d,0x1
  40b303:	lea    rdi,[rip+0xeb36]        # 0x419e40
  40b30a:	xor    r12d,r12d
  40b30d:	mov    r13,QWORD PTR [rdi]
  40b310:	mov    rdx,QWORD PTR [rdi+0x10]
  40b314:	mov    rcx,rbx
  40b317:	mov    r8d,r13d
  40b31a:	call   0x40a290
  40b31f:	test   eax,eax
  40b321:	je     0x40b360
  40b323:	add    r12d,0x1
  40b327:	add    rdi,0x18
  40b32b:	cmp    r12d,0x5
  40b32f:	jne    0x40b30d
  40b331:	add    rsp,0x20
  40b335:	pop    rbx
  40b336:	pop    rsi
  40b337:	pop    rdi
  40b338:	pop    rbp
  40b339:	pop    r12
  40b33b:	pop    r13
  40b33d:	pop    r14
  40b33f:	ret    
  40b340:	lea    rcx,[rip+0xe980]        # 0x419cc7
  40b347:	call   0x417840
  40b34c:	test   rax,rax
  40b34f:	mov    rbx,rax
  40b352:	jne    0x40b2c9
  40b358:	jmp    0x40b331
  40b35a:	nop    WORD PTR [rax+rax*1+0x0]
  40b360:	add    rbx,r13
  40b363:	movzx  r8d,BYTE PTR [rbx]
  40b367:	cmp    r8b,0x7f
  40b36b:	ja     0x40b331
  40b36d:	lea    rdx,[rip+0x1248c]        # 0x41d800
  40b374:	movzx  eax,r8b
  40b378:	test   DWORD PTR [rdx+rax*4],0xc13
  40b37f:	je     0x40b331
  40b381:	mov    eax,r14d
  40b384:	mov    ecx,r12d
  40b387:	shl    eax,cl
  40b389:	or     esi,eax
  40b38b:	mov    rax,QWORD PTR [rip+0x15e4e]        # 0x4211e0
  40b392:	test   rax,rax
  40b395:	je     0x40b462
  40b39b:	mov    edx,r8d
  40b39e:	cmp    BYTE PTR [rax+r8*1],0x0
  40b3a3:	je     0x40b3b5
  40b3a5:	add    rbx,0x1
  40b3a9:	movzx  ecx,BYTE PTR [rbx]
  40b3ac:	cmp    BYTE PTR [rax+rcx*1],0x0
  40b3b0:	mov    rdx,rcx
  40b3b3:	jne    0x40b3a5
  40b3b5:	test   dl,dl
  40b3b7:	je     0x40b411
  40b3b9:	cmp    dl,0x2c
  40b3bc:	jne    0x40b303
  40b3c2:	mov    rax,QWORD PTR [rip+0x15e17]        # 0x4211e0
  40b3c9:	lea    rdi,[rbx+0x1]
  40b3cd:	test   rax,rax
  40b3d0:	je     0x40b478
  40b3d6:	movzx  edx,BYTE PTR [rbx+0x1]
  40b3da:	mov    rbx,rdi
  40b3dd:	cmp    BYTE PTR [rax+rdx*1],0x0
  40b3e1:	je     0x40b303
  40b3e7:	nop    WORD PTR [rax+rax*1+0x0]
  40b3f0:	add    rbx,0x1
  40b3f4:	movzx  edx,BYTE PTR [rbx]
  40b3f7:	cmp    BYTE PTR [rax+rdx*1],0x0
  40b3fb:	jne    0x40b3f0
  40b3fd:	jmp    0x40b303
  40b402:	mov    ecx,0xc
  40b407:	call   0x4033e0
  40b40c:	jmp    0x40b2d9
  40b411:	mov    eax,esi
  40b413:	and    eax,0x3
  40b416:	cmp    eax,0x3
  40b419:	je     0x40b331
  40b41f:	mov    eax,esi
  40b421:	and    eax,0xc
  40b424:	cmp    eax,0xc
  40b427:	je     0x40b331
  40b42d:	lea    rax,[rip+0xea0c]        # 0x419e40
  40b434:	jmp    0x40b44f
  40b436:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b440:	and    DWORD PTR [rbp+0x0],edx
  40b443:	shr    esi,1
  40b445:	je     0x40b331
  40b44b:	add    rax,0x18
  40b44f:	test   sil,0x1
  40b453:	je     0x40b443
  40b455:	mov    edx,DWORD PTR [rax+0x8]
  40b458:	test   dl,0x1
  40b45b:	jne    0x40b440
  40b45d:	or     DWORD PTR [rbp+0x0],edx
  40b460:	jmp    0x40b443
  40b462:	mov    ecx,0xc
  40b467:	call   0x4033e0
  40b46c:	movzx  edx,BYTE PTR [rbx]
  40b46f:	movzx  r8d,dl
  40b473:	jmp    0x40b39e
  40b478:	mov    ecx,0xc
  40b47d:	call   0x4033e0
  40b482:	jmp    0x40b3d6
  40b487:	nop    WORD PTR [rax+rax*1+0x0]
  40b490:	push   r12
  40b492:	push   rbp
  40b493:	push   rdi
  40b494:	push   rsi
  40b495:	push   rbx
  40b496:	sub    rsp,0x30
  40b49a:	mov    rax,QWORD PTR [rip+0x15d3f]        # 0x4211e0
  40b4a1:	mov    rbp,rcx
  40b4a4:	lea    rbx,[rdx+0x1]
  40b4a8:	test   rax,rax
  40b4ab:	je     0x40b52e
  40b4b1:	movzx  edx,BYTE PTR [rdx+0x1]
  40b4b5:	cmp    BYTE PTR [rax+rdx*1],0x0
  40b4b9:	je     0x40b4cd
  40b4bb:	nop    DWORD PTR [rax+rax*1+0x0]
  40b4c0:	add    rbx,0x1
  40b4c4:	movzx  edx,BYTE PTR [rbx]
  40b4c7:	cmp    BYTE PTR [rax+rdx*1],0x0
  40b4cb:	jne    0x40b4c0
  40b4cd:	mov    edx,0x3e
  40b4d2:	mov    rcx,rbx
  40b4d5:	call   0x4177e0
  40b4da:	test   rax,rax
  40b4dd:	mov    rsi,rax
  40b4e0:	je     0x40b520
  40b4e2:	mov    r12d,eax
  40b4e5:	add    rsi,0x1
  40b4e9:	sub    r12d,ebx
  40b4ec:	lea    rcx,[r12+0x1]
  40b4f1:	call   0x4038d0
  40b4f6:	mov    r8,r12
  40b4f9:	mov    rdx,rbx
  40b4fc:	mov    rcx,rax
  40b4ff:	mov    rdi,rax
  40b502:	call   0x417820
  40b507:	lea    rcx,[rbp+0x10]
  40b50b:	mov    rdx,rdi
  40b50e:	mov    BYTE PTR [rdi+r12*1],0x0
  40b513:	call   0x40b2b0
  40b518:	mov    rcx,rdi
  40b51b:	call   0x417860
  40b520:	mov    rax,rsi
  40b523:	add    rsp,0x30
  40b527:	pop    rbx
  40b528:	pop    rsi
  40b529:	pop    rdi
  40b52a:	pop    rbp
  40b52b:	pop    r12
  40b52d:	ret    
  40b52e:	mov    ecx,0xc
  40b533:	mov    QWORD PTR [rsp+0x28],rdx
  40b538:	call   0x4033e0
  40b53d:	mov    rdx,QWORD PTR [rsp+0x28]
  40b542:	jmp    0x40b4b1
  40b547:	nop    WORD PTR [rax+rax*1+0x0]
  40b550:	push   rbp
  40b551:	push   rdi
  40b552:	push   rsi
  40b553:	push   rbx
  40b554:	sub    rsp,0x28
  40b558:	test   BYTE PTR [rdx+0x12],0x1
  40b55c:	mov    rbx,rcx
  40b55f:	mov    rsi,r8
  40b562:	mov    ebp,r9d
  40b565:	je     0x40b5a0
  40b567:	mov    rax,QWORD PTR [rdx+0x18]
  40b56b:	test   rax,rax
  40b56e:	je     0x40b5a0
  40b570:	movzx  edi,BYTE PTR [rax]
  40b573:	test   dil,dil
  40b576:	je     0x40b5a0
  40b578:	lea    eax,[rdi-0x43]
  40b57b:	cmp    al,0x33
  40b57d:	ja     0x40b6c0
  40b583:	lea    rdx,[rip+0xe74e]        # 0x419cd8
  40b58a:	movzx  eax,al
  40b58d:	movsxd rax,DWORD PTR [rdx+rax*4]
  40b591:	add    rdx,rax
  40b594:	jmp    rdx
  40b596:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b5a0:	lea    rcx,[rbx+0x10]
  40b5a4:	xor    edx,edx
  40b5a6:	call   0x40b2b0
  40b5ab:	test   BYTE PTR [rbx+0x11],0x10
  40b5af:	jne    0x40b5f0
  40b5b1:	mov    rdx,QWORD PTR [rbx+0x50]
  40b5b5:	mov    r9,QWORD PTR [rbx+0x60]
  40b5b9:	mov    rcx,rsi
  40b5bc:	mov    r8,QWORD PTR [rbx+0x40]
  40b5c0:	call   0x401c60
  40b5c5:	mov    rcx,rsi
  40b5c8:	call   0x417898
  40b5cd:	mov    rcx,rsi
  40b5d0:	call   0x4178a0
  40b5d5:	test   eax,eax
  40b5d7:	jne    0x40b714
  40b5dd:	test   bpl,bpl
  40b5e0:	jne    0x40b740
  40b5e6:	add    rsp,0x28
  40b5ea:	pop    rbx
  40b5eb:	pop    rsi
  40b5ec:	pop    rdi
  40b5ed:	pop    rbp
  40b5ee:	ret    
  40b5ef:	nop
  40b5f0:	mov    rcx,QWORD PTR [rbx+0x40]
  40b5f4:	test   rcx,rcx
  40b5f7:	je     0x40b6f0
  40b5fd:	mov    rdx,rsi
  40b600:	call   0x417870
  40b605:	cmp    DWORD PTR [rbx],0x21fff
  40b60b:	jle    0x40b682
  40b60d:	cmp    QWORD PTR [rbx+0xe0],0x0
  40b615:	je     0x40b682
  40b617:	mov    rdx,rsi
  40b61a:	mov    ecx,0xa
  40b61f:	call   0x417878
  40b624:	mov    rcx,QWORD PTR [rbx+0xe0]
  40b62b:	mov    rdx,rsi
  40b62e:	call   0x417870
  40b633:	jmp    0x40b5c5
  40b635:	mov    rcx,QWORD PTR [rcx+0x40]
  40b639:	test   rcx,rcx
  40b63c:	je     0x40b646
  40b63e:	mov    rdx,r8
  40b641:	call   0x417870
  40b646:	mov    rcx,QWORD PTR [rbx+0x48]
  40b64a:	test   rcx,rcx
  40b64d:	je     0x40b657
  40b64f:	mov    rdx,rsi
  40b652:	call   0x417870
  40b657:	mov    rdx,rsi
  40b65a:	mov    ecx,0xa
  40b65f:	call   0x417878
  40b664:	mov    rdx,QWORD PTR [rip+0xd2ad]        # 0x418918
  40b66b:	lea    r8,[rip+0xe75e]        # 0x419dd0
  40b672:	mov    rcx,rsi
  40b675:	call   0x401a90
  40b67a:	cmp    DWORD PTR [rbx],0x21fff
  40b680:	jg     0x40b60d
  40b682:	cmp    QWORD PTR [rbx+0x80],0x0
  40b68a:	je     0x40b5c5
  40b690:	mov    rdx,rsi
  40b693:	mov    ecx,0xa
  40b698:	call   0x417878
  40b69d:	mov    r8,QWORD PTR [rbx+0x80]
  40b6a4:	mov    rdx,QWORD PTR [rip+0xd4c5]        # 0x418b70
  40b6ab:	mov    rcx,rsi
  40b6ae:	call   0x401a90
  40b6b3:	jmp    0x40b5c5
  40b6b8:	nop    DWORD PTR [rax+rax*1+0x0]
  40b6c0:	mov    rbx,QWORD PTR [rip+0xd2c9]        # 0x418990
  40b6c7:	call   QWORD PTR [rip+0x17f03]        # 0x4235d0
  40b6cd:	lea    rcx,[rax+0x60]
  40b6d1:	movsx  r8d,dil
  40b6d5:	mov    rdx,rbx
  40b6d8:	call   0x401a90
  40b6dd:	mov    ecx,0x1
  40b6e2:	call   0x401ed0
  40b6e7:	nop    WORD PTR [rax+rax*1+0x0]
  40b6f0:	mov    rcx,QWORD PTR [rbx+0x50]
  40b6f4:	test   rcx,rcx
  40b6f7:	jne    0x40b5fd
  40b6fd:	mov    rdx,QWORD PTR [rbx+0x60]
  40b701:	xor    r9d,r9d
  40b704:	xor    r8d,r8d
  40b707:	mov    rcx,rsi
  40b70a:	call   0x401c60
  40b70f:	jmp    0x40b605
  40b714:	call   QWORD PTR [rip+0x17eb6]        # 0x4235d0
  40b71a:	add    rax,0x30
  40b71e:	mov    r8,QWORD PTR [rip+0xd35b]        # 0x418a80
  40b725:	mov    rcx,QWORD PTR [rbx+0x28]
  40b729:	cmp    rsi,rax
  40b72c:	cmove  r8,QWORD PTR [rip+0xd344]        # 0x418a78
  40b734:	mov    rdx,QWORD PTR [rip+0xd34d]        # 0x418a88
  40b73b:	call   0x402450
  40b740:	xor    ecx,ecx
  40b742:	call   0x401ed0
  40b747:	nop
  40b748:	nop    DWORD PTR [rax+rax*1+0x0]
  40b750:	push   rsi
  40b751:	push   rbx
  40b752:	sub    rsp,0x28
  40b756:	cmp    BYTE PTR [rip+0x15917],0x0        # 0x421074
  40b75d:	mov    rbx,rcx
  40b760:	mov    rsi,rdx
  40b763:	je     0x40b780
  40b765:	call   QWORD PTR [rip+0x17e65]        # 0x4235d0
  40b76b:	cmp    rbx,0xf
  40b76f:	lea    r8,[rax+0x60]
  40b773:	ja     0x40b790
  40b775:	add    rsp,0x28
  40b779:	pop    rbx
  40b77a:	pop    rsi
  40b77b:	ret    
  40b77c:	nop    DWORD PTR [rax+0x0]
  40b780:	call   QWORD PTR [rip+0x17e4a]        # 0x4235d0
  40b786:	cmp    rbx,0xf
  40b78a:	lea    r8,[rax+0x30]
  40b78e:	jbe    0x40b775
  40b790:	mov    r9d,0x1
  40b796:	mov    rdx,rsi
  40b799:	mov    rcx,rbx
  40b79c:	add    rsp,0x28
  40b7a0:	pop    rbx
  40b7a1:	pop    rsi
  40b7a2:	jmp    0x40b550
  40b7a7:	nop    WORD PTR [rax+rax*1+0x0]
  40b7b0:	add    rcx,0x1
  40b7b4:	add    rdx,0x1
  40b7b8:	movzx  r9d,BYTE PTR [rcx-0x1]
  40b7bd:	movzx  r8d,BYTE PTR [rdx-0x1]
  40b7c2:	cmp    r9b,r8b
  40b7c5:	je     0x40b7e1
  40b7c7:	lea    r10,[rip+0xccb2]        # 0x418480
  40b7ce:	movzx  eax,r9b
  40b7d2:	movzx  eax,BYTE PTR [r10+rax*1]
  40b7d7:	movzx  r8d,BYTE PTR [r10+r8*1]
  40b7dc:	sub    eax,r8d
  40b7df:	jne    0x40b7e8
  40b7e1:	test   r9b,r9b
  40b7e4:	jne    0x40b7b0
  40b7e6:	xor    eax,eax
  40b7e8:	repz ret 
  40b7ea:	nop    WORD PTR [rax+rax*1+0x0]
  40b7f0:	test   r8d,r8d
  40b7f3:	jne    0x40b811
  40b7f5:	lea    rdx,[rip+0xcd83]        # 0x41857f
  40b7fc:	mov    eax,0xff
  40b801:	mov    BYTE PTR [rdx],al
  40b803:	sub    eax,0x1
  40b806:	sub    rdx,0x1
  40b80a:	cmp    eax,0xffffffff
  40b80d:	jne    0x40b801
  40b80f:	repz ret 
  40b811:	lea    r9,[rip+0xcc68]        # 0x418480
  40b818:	movzx  eax,dl
  40b81b:	movzx  edx,cl
  40b81e:	xchg   ax,ax
  40b820:	mov    ecx,edx
  40b822:	add    edx,0x1
  40b825:	mov    BYTE PTR [r9+rcx*1],al
  40b829:	add    eax,0x1
  40b82c:	cmp    eax,0xff
  40b831:	ja     0x40b844
  40b833:	cmp    edx,0xff
  40b839:	ja     0x40b844
  40b83b:	sub    r8d,0x1
  40b83f:	test   r8d,r8d
  40b842:	jg     0x40b820
  40b844:	repz ret 
  40b846:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b850:	test   rcx,rcx
  40b853:	je     0x40b87f
  40b855:	movzx  eax,BYTE PTR [rcx]
  40b858:	test   al,al
  40b85a:	je     0x40b87f
  40b85c:	lea    rdx,[rip+0xcc1d]        # 0x418480
  40b863:	mov    r8d,eax
  40b866:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b870:	add    rcx,0x1
  40b874:	mov    BYTE PTR [rdx+rax*1],r8b
  40b878:	movzx  eax,BYTE PTR [rcx]
  40b87b:	test   al,al
  40b87d:	jne    0x40b870
  40b87f:	repz ret 
  40b881:	nop    DWORD PTR [rax+rax*1+0x0]
  40b886:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b890:	lea    r8,[rip+0xcbe9]        # 0x418480
  40b897:	nop    WORD PTR [rax+rax*1+0x0]
  40b8a0:	movzx  eax,BYTE PTR [rdx]
  40b8a3:	add    rcx,0x1
  40b8a7:	add    rdx,0x1
  40b8ab:	movzx  eax,BYTE PTR [r8+rax*1]
  40b8b0:	mov    BYTE PTR [rcx-0x1],al
  40b8b3:	cmp    BYTE PTR [rdx-0x1],0x0
  40b8b7:	jne    0x40b8a0
  40b8b9:	ret    
  40b8ba:	nop    WORD PTR [rax+rax*1+0x0]
  40b8c0:	push   rbp
  40b8c1:	push   rdi
  40b8c2:	push   rsi
  40b8c3:	push   rbx
  40b8c4:	sub    rsp,0x68
  40b8c8:	xor    eax,eax
  40b8ca:	lea    rdi,[r9+0x8]
  40b8ce:	mov    QWORD PTR [r9],0x0
  40b8d5:	mov    QWORD PTR [r9+0x28],0x0
  40b8dd:	mov    rbx,r9
  40b8e0:	mov    rbp,rcx
  40b8e3:	and    rdi,0xfffffffffffffff8
  40b8e7:	sub    r9,rdi
  40b8ea:	add    r9d,0x30
  40b8ee:	shr    r9d,0x3
  40b8f2:	mov    ecx,r9d
  40b8f5:	rep stos QWORD PTR es:[rdi],rax
  40b8f8:	mov    DWORD PTR [rbx+0x24],edx
  40b8fb:	and    edx,0x2
  40b8fe:	mov    DWORD PTR [rbx+0x18],0xffffffff
  40b905:	mov    DWORD PTR [rbx+0x28],r8d
  40b909:	mov    ax,0x8000
  40b90d:	je     0x40b935
  40b90f:	mov    eax,r8d
  40b912:	and    eax,0x3
  40b915:	cmp    eax,0x1
  40b918:	sete   dl
  40b91b:	movzx  eax,dl
  40b91e:	movzx  edx,dl
  40b921:	add    edx,edx
  40b923:	and    r8d,0x1
  40b927:	lea    eax,[rax+rax*1+0x8000]
  40b92e:	jne    0x40b935
  40b930:	mov    eax,edx
  40b932:	or     ah,0x84
  40b935:	mov    edx,eax
  40b937:	mov    rcx,rbp
  40b93a:	call   0x417718
  40b93f:	test   eax,eax
  40b941:	mov    DWORD PTR [rbx+0x18],eax
  40b944:	js     0x40baa0
  40b94a:	lea    rdx,[rsp+0x20]
  40b94f:	mov    ecx,eax
  40b951:	call   QWORD PTR [rip+0x17ce9]        # 0x423640
  40b957:	test   eax,eax
  40b959:	jne    0x40ba80
  40b95f:	movzx  eax,WORD PTR [rsp+0x26]
  40b964:	and    ax,0xf000
  40b968:	cmp    ax,0x8000
  40b96c:	je     0x40b9a0
  40b96e:	call   QWORD PTR [rip+0x17ca4]        # 0x423618
  40b974:	mov    DWORD PTR [rax],0x16
  40b97a:	mov    ecx,DWORD PTR [rbx+0x18]
  40b97d:	mov    DWORD PTR [rbx+0x20],0x16
  40b984:	call   0x417708
  40b989:	mov    edx,DWORD PTR [rbx+0x20]
  40b98c:	test   edx,edx
  40b98e:	mov    rax,0xffffffffffffffff
  40b995:	je     0x40b9c0
  40b997:	add    rsp,0x68
  40b99b:	pop    rbx
  40b99c:	pop    rsi
  40b99d:	pop    rdi
  40b99e:	pop    rbp
  40b99f:	ret    
  40b9a0:	cmp    DWORD PTR [rbx+0x18],0xffffffff
  40b9a4:	mov    rax,QWORD PTR [rsp+0x38]
  40b9a9:	mov    QWORD PTR [rbx+0x8],rax
  40b9ad:	jne    0x40b989
  40b9af:	call   QWORD PTR [rip+0x17c63]        # 0x423618
  40b9b5:	mov    edx,DWORD PTR [rax]
  40b9b7:	mov    DWORD PTR [rbx+0x20],edx
  40b9ba:	jmp    0x40b98c
  40b9bc:	nop    DWORD PTR [rax+0x0]
  40b9c0:	mov    rax,QWORD PTR [rbx+0x8]
  40b9c4:	lea    rcx,[rax+0x1]
  40b9c8:	call   0x4038d0
  40b9cd:	test   rax,rax
  40b9d0:	mov    rdi,rax
  40b9d3:	mov    QWORD PTR [rbx],rax
  40b9d6:	je     0x40bae0
  40b9dc:	mov    rsi,QWORD PTR [rbx+0x8]
  40b9e0:	test   rsi,rsi
  40b9e3:	jne    0x40b9ff
  40b9e5:	jmp    0x40bac0
  40b9ea:	nop    WORD PTR [rax+rax*1+0x0]
  40b9f0:	movsxd r10,eax
  40b9f3:	add    rdi,r10
  40b9f6:	sub    rsi,r10
  40b9f9:	je     0x40bac0
  40b9ff:	mov    ecx,DWORD PTR [rbx+0x18]
  40ba02:	mov    r8d,esi
  40ba05:	mov    rdx,rdi
  40ba08:	call   0x417720
  40ba0d:	test   eax,eax
  40ba0f:	jg     0x40b9f0
  40ba11:	mov    rsi,QWORD PTR [rip+0x17c00]        # 0x423618
  40ba18:	call   rsi
  40ba1a:	mov    eax,DWORD PTR [rax]
  40ba1c:	lea    rdx,[rip+0xe385]        # 0x419da8
  40ba23:	lea    rcx,[rip+0xe383]        # 0x419dad
  40ba2a:	mov    r8,rbp
  40ba2d:	mov    DWORD PTR [rbx+0x20],eax
  40ba30:	call   0x4023e0
  40ba35:	mov    rcx,QWORD PTR [rbx]
  40ba38:	call   0x417860
  40ba3d:	mov    eax,DWORD PTR [rbx+0x20]
  40ba40:	test   eax,eax
  40ba42:	je     0x40baca
  40ba48:	mov    ecx,DWORD PTR [rbx+0x18]
  40ba4b:	cmp    ecx,0xffffffff
  40ba4e:	je     0x40ba5c
  40ba50:	call   0x417708
  40ba55:	mov    DWORD PTR [rbx+0x18],0xffffffff
  40ba5c:	call   rsi
  40ba5e:	mov    edx,DWORD PTR [rbx+0x20]
  40ba61:	mov    DWORD PTR [rax],edx
  40ba63:	mov    rax,0xffffffffffffffff
  40ba6a:	mov    QWORD PTR [rbx],0xffffffffffffffff
  40ba71:	add    rsp,0x68
  40ba75:	pop    rbx
  40ba76:	pop    rsi
  40ba77:	pop    rdi
  40ba78:	pop    rbp
  40ba79:	ret    
  40ba7a:	nop    WORD PTR [rax+rax*1+0x0]
  40ba80:	call   QWORD PTR [rip+0x17b92]        # 0x423618
  40ba86:	mov    eax,DWORD PTR [rax]
  40ba88:	mov    ecx,DWORD PTR [rbx+0x18]
  40ba8b:	mov    DWORD PTR [rbx+0x20],eax
  40ba8e:	call   0x417708
  40ba93:	jmp    0x40b989
  40ba98:	nop    DWORD PTR [rax+rax*1+0x0]
  40baa0:	call   QWORD PTR [rip+0x17b72]        # 0x423618
  40baa6:	mov    edx,DWORD PTR [rax]
  40baa8:	mov    DWORD PTR [rbx+0x18],0xffffffff
  40baaf:	mov    DWORD PTR [rbx+0x20],edx
  40bab2:	jmp    0x40b98c
  40bab7:	nop    WORD PTR [rax+rax*1+0x0]
  40bac0:	mov    BYTE PTR [rdi],0x0
  40bac3:	mov    DWORD PTR [rbx+0x20],0x0
  40baca:	mov    rax,QWORD PTR [rbx]
  40bacd:	add    rsp,0x68
  40bad1:	pop    rbx
  40bad2:	pop    rsi
  40bad3:	pop    rdi
  40bad4:	pop    rbp
  40bad5:	ret    
  40bad6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bae0:	mov    DWORD PTR [rbx+0x20],0xc
  40bae7:	mov    rsi,QWORD PTR [rip+0x17b2a]        # 0x423618
  40baee:	jmp    0x40ba48
  40baf3:	nop    DWORD PTR [rax]
  40baf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bb00:	push   rsi
  40bb01:	push   rbx
  40bb02:	sub    rsp,0x28
  40bb06:	mov    rsi,QWORD PTR [rip+0x17b0b]        # 0x423618
  40bb0d:	mov    rbx,rcx
  40bb10:	call   rsi
  40bb12:	mov    DWORD PTR [rax],0x0
  40bb18:	test   BYTE PTR [rbx+0x24],0x2
  40bb1c:	je     0x40bb29
  40bb1e:	mov    eax,DWORD PTR [rbx+0x28]
  40bb21:	and    eax,0x3
  40bb24:	cmp    eax,0x1
  40bb27:	je     0x40bb60
  40bb29:	mov    rcx,QWORD PTR [rbx]
  40bb2c:	call   0x417860
  40bb31:	call   rsi
  40bb33:	mov    ecx,DWORD PTR [rbx+0x18]
  40bb36:	mov    eax,DWORD PTR [rax]
  40bb38:	cmp    ecx,0xffffffff
  40bb3b:	mov    DWORD PTR [rbx+0x20],eax
  40bb3e:	je     0x40bb4f
  40bb40:	call   0x417708
  40bb45:	mov    eax,DWORD PTR [rbx+0x20]
  40bb48:	mov    DWORD PTR [rbx+0x18],0xffffffff
  40bb4f:	add    rsp,0x28
  40bb53:	pop    rbx
  40bb54:	pop    rsi
  40bb55:	ret    
  40bb56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bb60:	mov    ecx,DWORD PTR [rbx+0x18]
  40bb63:	xor    r8d,r8d
  40bb66:	xor    edx,edx
  40bb68:	call   0x412ce0
  40bb6d:	test   rax,rax
  40bb70:	js     0x40bb29
  40bb72:	mov    ecx,DWORD PTR [rbx+0x18]
  40bb75:	mov    r8d,DWORD PTR [rbx+0x8]
  40bb79:	mov    rdx,QWORD PTR [rbx]
  40bb7c:	call   0x417740
  40bb81:	jmp    0x40bb29
  40bb83:	nop    DWORD PTR [rax]
  40bb86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bb90:	push   r15
  40bb92:	push   r14
  40bb94:	push   r13
  40bb96:	push   r12
  40bb98:	push   rbp
  40bb99:	push   rdi
  40bb9a:	push   rsi
  40bb9b:	push   rbx
  40bb9c:	sub    rsp,0x158
  40bba3:	mov    r13,rcx
  40bba6:	mov    r14d,r8d
  40bba9:	mov    rcx,rdx
  40bbac:	mov    eax,DWORD PTR [r13+0x10]
  40bbb0:	mov    r8d,0x2
  40bbb6:	mov    edx,0x3
  40bbbb:	mov    QWORD PTR [rsp+0xa0],0x0
  40bbc7:	mov    QWORD PTR [rsp+0xa8],0x0
  40bbd3:	mov    DWORD PTR [rsp+0xb0],0x2
  40bbde:	mov    DWORD PTR [rsp+0xb4],0x0
  40bbe9:	mov    DWORD PTR [rsp+0x34],eax
  40bbed:	lea    rax,[rsp+0xe0]
  40bbf5:	mov    r9,rax
  40bbf8:	mov    QWORD PTR [rsp+0x38],rax
  40bbfd:	call   0x40b8c0
  40bc02:	cmp    rax,0xffffffffffffffff
  40bc06:	mov    rbx,rax
  40bc09:	je     0x40bd76
  40bc0f:	mov    eax,DWORD PTR [r13+0x10]
  40bc13:	mov    esi,0x2
  40bc18:	mov    edx,eax
  40bc1a:	and    edx,0xfffffffb
  40bc1d:	test   r14d,r14d
  40bc20:	mov    DWORD PTR [r13+0x10],edx
  40bc24:	je     0x40c109
  40bc2a:	test   eax,0x80000
  40bc2f:	mov    eax,0x1
  40bc34:	cmove  esi,eax
  40bc37:	lea    rax,[rsp+0x110]
  40bc3f:	mov    QWORD PTR [rsp+0x48],rax
  40bc44:	lea    rax,[rsp+0x111]
  40bc4c:	mov    QWORD PTR [rsp+0x50],rax
  40bc51:	lea    rax,[rsp+0xa0]
  40bc59:	mov    QWORD PTR [rsp+0x40],rax
  40bc5e:	lea    rax,[rsp+0x90]
  40bc66:	mov    QWORD PTR [rsp+0x58],rax
  40bc6b:	lea    rax,[rsp+0xc0]
  40bc73:	mov    QWORD PTR [rsp+0x60],rax
  40bc78:	lea    rax,[rsp+0x9c]
  40bc80:	mov    QWORD PTR [rsp+0x68],rax
  40bc85:	mov    rax,QWORD PTR [rip+0x15554]        # 0x4211e0
  40bc8c:	mov    DWORD PTR [rsp+0xb0],esi
  40bc93:	test   rax,rax
  40bc96:	jne    0x40bca4
  40bc98:	jmp    0x40c14d
  40bc9d:	nop    DWORD PTR [rax]
  40bca0:	add    rbx,0x1
  40bca4:	movzx  ecx,BYTE PTR [rbx]
  40bca7:	cmp    BYTE PTR [rax+rcx*1],0x0
  40bcab:	mov    rdx,rcx
  40bcae:	jne    0x40bca0
  40bcb0:	cmp    cl,0x7f
  40bcb3:	ja     0x40bd90
  40bcb9:	lea    rdi,[rip+0x11b40]        # 0x41d800
  40bcc0:	movzx  eax,cl
  40bcc3:	test   DWORD PTR [rdi+rax*4],0x180040
  40bcca:	je     0x40bd90
  40bcd0:	lea    rbp,[rbx+0x1]
  40bcd4:	mov    edx,0xa
  40bcd9:	mov    rcx,rbp
  40bcdc:	call   0x4177e0
  40bce1:	test   rax,rax
  40bce4:	mov    r12,rax
  40bce7:	je     0x40c15c
  40bced:	mov    rcx,QWORD PTR [rip+0x1556c]        # 0x421260
  40bcf4:	test   rcx,rcx
  40bcf7:	je     0x40c366
  40bcfd:	movzx  eax,BYTE PTR [rbx+0x1]
  40bd01:	cmp    BYTE PTR [rcx+rax*1],0x0
  40bd05:	je     0x40bd1e
  40bd07:	nop    WORD PTR [rax+rax*1+0x0]
  40bd10:	add    rbp,0x1
  40bd14:	movzx  eax,BYTE PTR [rbp+0x0]
  40bd18:	cmp    BYTE PTR [rcx+rax*1],0x0
  40bd1c:	jne    0x40bd10
  40bd1e:	mov    r8,QWORD PTR [rip+0x154bb]        # 0x4211e0
  40bd25:	test   r8,r8
  40bd28:	jne    0x40bd34
  40bd2a:	jmp    0x40c375
  40bd2f:	nop
  40bd30:	add    rbp,0x1
  40bd34:	movzx  eax,BYTE PTR [rbp+0x0]
  40bd38:	cmp    BYTE PTR [r8+rax*1],0x0
  40bd3d:	jne    0x40bd30
  40bd3f:	cmp    rbp,r12
  40bd42:	ja     0x40c0dc
  40bd48:	cmp    al,0x3a
  40bd4a:	je     0x40c0a9
  40bd50:	cmp    al,0x3d
  40bd52:	je     0x40c0a9
  40bd58:	movzx  eax,BYTE PTR [rbp-0x1]
  40bd5c:	cmp    al,0x7f
  40bd5e:	jbe    0x40c136
  40bd64:	mov    rcx,QWORD PTR [rsp+0x38]
  40bd69:	call   0x40bb00
  40bd6e:	mov    eax,DWORD PTR [rsp+0x34]
  40bd72:	mov    DWORD PTR [r13+0x10],eax
  40bd76:	add    rsp,0x158
  40bd7d:	pop    rbx
  40bd7e:	pop    rsi
  40bd7f:	pop    rdi
  40bd80:	pop    rbp
  40bd81:	pop    r12
  40bd83:	pop    r13
  40bd85:	pop    r14
  40bd87:	pop    r15
  40bd89:	ret    
  40bd8a:	nop    WORD PTR [rax+rax*1+0x0]
  40bd90:	cmp    dl,0x3c
  40bd93:	je     0x40be60
  40bd99:	cmp    dl,0x5b
  40bd9c:	je     0x40bdc0
  40bd9e:	cmp    dl,0x23
  40bda1:	jne    0x40bd64
  40bda3:	lea    rcx,[rbx+0x1]
  40bda7:	mov    edx,0xa
  40bdac:	call   0x4177e0
  40bdb1:	mov    rbx,rax
  40bdb4:	test   rbx,rbx
  40bdb7:	jne    0x40bc85
  40bdbd:	jmp    0x40bd64
  40bdbf:	nop
  40bdc0:	mov    rbp,QWORD PTR [r13+0x30]
  40bdc4:	mov    rcx,rbp
  40bdc7:	call   0x4177b8
  40bdcc:	lea    rcx,[rbx+0x1]
  40bdd0:	mov    r8,rax
  40bdd3:	mov    rdx,rbp
  40bdd6:	mov    rdi,rax
  40bdd9:	call   0x4177b0
  40bdde:	test   eax,eax
  40bde0:	je     0x40c114
  40bde6:	cmp    rdi,0x10
  40bdea:	ja     0x40bd64
  40bdf0:	mov    rcx,QWORD PTR [rsp+0x50]
  40bdf5:	mov    r8,rdi
  40bdf8:	mov    rdx,rbp
  40bdfb:	mov    QWORD PTR [rsp+0x110],0x5b
  40be07:	mov    QWORD PTR [rsp+0x118],0x0
  40be13:	mov    QWORD PTR [rsp+0x120],0x0
  40be1f:	call   0x417820
  40be24:	mov    rdx,QWORD PTR [rsp+0x48]
  40be29:	mov    rcx,rbx
  40be2c:	mov    BYTE PTR [rsp+rdi*1+0x111],0x5d
  40be34:	mov    BYTE PTR [rsp+rdi*1+0x112],0x0
  40be3c:	call   0x417790
  40be41:	test   rax,rax
  40be44:	je     0x40bd64
  40be4a:	mov    edx,0xa
  40be4f:	mov    rcx,rax
  40be52:	call   0x4177e0
  40be57:	mov    rbx,rax
  40be5a:	jmp    0x40bdb4
  40be5f:	nop
  40be60:	movzx  eax,BYTE PTR [rbx+0x1]
  40be64:	cmp    al,0x7f
  40be66:	ja     0x40c070
  40be6c:	lea    rdi,[rip+0x1198d]        # 0x41d800
  40be73:	movzx  edx,al
  40be76:	test   DWORD PTR [rdi+rdx*4],0x180040
  40be7d:	je     0x40c070
  40be83:	mov    eax,DWORD PTR [rip+0xca07]        # 0x418890
  40be89:	mov    DWORD PTR [rsp+0x9c],eax
  40be90:	lea    rax,[rbx+0x1]
  40be94:	mov    QWORD PTR [rsp+0x70],rax
  40be99:	mov    rax,QWORD PTR [rip+0x153c0]        # 0x421260
  40bea0:	test   rax,rax
  40bea3:	je     0x40c439
  40bea9:	movzx  edx,BYTE PTR [rbx+0x1]
  40bead:	mov    r15,QWORD PTR [rsp+0x70]
  40beb2:	cmp    BYTE PTR [rax+rdx*1],0x0
  40beb6:	je     0x40bece
  40beb8:	nop    DWORD PTR [rax+rax*1+0x0]
  40bec0:	add    r15,0x1
  40bec4:	movzx  edx,BYTE PTR [r15]
  40bec8:	cmp    BYTE PTR [rax+rdx*1],0x0
  40becc:	jne    0x40bec0
  40bece:	mov    DWORD PTR [rsp+0xc0],0x1
  40bed9:	movzx  edx,BYTE PTR [r15]
  40bedd:	cmp    dl,0x20
  40bee0:	je     0x40c2d6
  40bee6:	jle    0x40c1f6
  40beec:	cmp    dl,0x2f
  40beef:	je     0x40c32e
  40bef5:	cmp    dl,0x3e
  40bef8:	mov    rbp,r15
  40befb:	jne    0x40c1ff
  40bf01:	mov    BYTE PTR [r15],0x0
  40bf05:	mov    rcx,QWORD PTR [rsp+0x70]
  40bf0a:	lea    r12,[rbp+0x1]
  40bf0e:	mov    eax,DWORD PTR [rsp+0x9c]
  40bf15:	mov    DWORD PTR [rsp+0x80],eax
  40bf1c:	call   0x4177b8
  40bf21:	lea    rcx,[rax+0x4]
  40bf25:	mov    rbx,rax
  40bf28:	cmp    rcx,0x3f
  40bf2c:	ja     0x40c387
  40bf32:	mov    rax,QWORD PTR [rsp+0x48]
  40bf37:	mov    rdx,QWORD PTR [rsp+0x70]
  40bf3c:	mov    r8,rbx
  40bf3f:	mov    BYTE PTR [rsp+0x110],0x3c
  40bf47:	mov    BYTE PTR [rsp+0x111],0x2f
  40bf4f:	lea    rcx,[rax+0x2]
  40bf53:	call   0x417820
  40bf58:	lea    rcx,[rbx+0x3]
  40bf5c:	mov    rdx,QWORD PTR [rsp+0x48]
  40bf61:	mov    BYTE PTR [rsp+rbx*1+0x112],0x3e
  40bf69:	mov    BYTE PTR [rsp+rbx*1+0x113],0x0
  40bf71:	mov    BYTE PTR [rbp+0x1],0x20
  40bf75:	mov    QWORD PTR [rsp+0x78],rcx
  40bf7a:	mov    rcx,r12
  40bf7d:	call   0x417790
  40bf82:	mov    rdx,rax
  40bf85:	test   rdx,rdx
  40bf88:	je     0x40bd64
  40bf8e:	mov    rbx,QWORD PTR [rsp+0x78]
  40bf93:	add    rbx,rdx
  40bf96:	cmp    DWORD PTR [rsp+0x80],0x1
  40bf9e:	je     0x40bfe6
  40bfa0:	mov    r8,QWORD PTR [rip+0x15239]        # 0x4211e0
  40bfa7:	test   r8,r8
  40bfaa:	je     0x40c54c
  40bfb0:	cmp    r12,rdx
  40bfb3:	jb     0x40bfdb
  40bfb5:	mov    rcx,r12
  40bfb8:	mov    QWORD PTR [rsp+0x78],r8
  40bfbd:	call   0x4177b8
  40bfc2:	lea    rdx,[r12+rax*1]
  40bfc6:	mov    r8,QWORD PTR [rsp+0x78]
  40bfcb:	cmp    r12,rdx
  40bfce:	jb     0x40bfdb
  40bfd0:	jmp    0x40bfe6
  40bfd2:	sub    rdx,0x1
  40bfd6:	cmp    r12,rdx
  40bfd9:	jae    0x40bfe6
  40bfdb:	movzx  eax,BYTE PTR [rdx-0x1]
  40bfdf:	cmp    BYTE PTR [r8+rax*1],0x0
  40bfe4:	jne    0x40bfd2
  40bfe6:	test   rbx,rbx
  40bfe9:	mov    BYTE PTR [rdx],0x0
  40bfec:	je     0x40bd64
  40bff2:	mov    r8,r12
  40bff5:	mov    edx,0x20
  40bffa:	mov    rcx,r15
  40bffd:	sub    r8,r15
  40c000:	call   0x417810
  40c005:	cmp    DWORD PTR [rsp+0xc0],0x1
  40c00d:	mov    eax,DWORD PTR [rsp+0x9c]
  40c014:	jne    0x40c348
  40c01a:	test   eax,eax
  40c01c:	jne    0x40c348
  40c022:	mov    BYTE PTR [rsp+0x92],0x0
  40c02a:	add    rbp,0x2
  40c02e:	lea    rax,[rbp-0x1]
  40c032:	lea    r9,[r12+0x1]
  40c037:	mov    QWORD PTR [rsp+0x78],rax
  40c03c:	movzx  eax,BYTE PTR [r12]
  40c041:	cmp    eax,0x25
  40c044:	je     0x40c4f0
  40c04a:	cmp    eax,0x26
  40c04d:	je     0x40c464
  40c053:	test   eax,eax
  40c055:	je     0x40c457
  40c05b:	mov    r12,r9
  40c05e:	mov    BYTE PTR [rbp-0x1],al
  40c061:	add    rbp,0x1
  40c065:	jmp    0x40c02e
  40c067:	nop    WORD PTR [rax+rax*1+0x0]
  40c070:	cmp    al,0x2f
  40c072:	je     0x40c193
  40c078:	cmp    al,0x3f
  40c07a:	je     0x40c21e
  40c080:	cmp    al,0x21
  40c082:	jne    0x40bd64
  40c088:	lea    rdx,[rip+0xda68]        # 0x419af7
  40c08f:	mov    rcx,rbx
  40c092:	call   0x417790
  40c097:	test   rax,rax
  40c09a:	je     0x40bd64
  40c0a0:	lea    rbx,[rax+0x3]
  40c0a4:	jmp    0x40bdb4
  40c0a9:	mov    rax,QWORD PTR [rip+0x15130]        # 0x4211e0
  40c0b0:	lea    rdi,[rbp+0x1]
  40c0b4:	test   rax,rax
  40c0b7:	je     0x40c448
  40c0bd:	movzx  edx,BYTE PTR [rbp+0x1]
  40c0c1:	cmp    BYTE PTR [rax+rdx*1],0x0
  40c0c5:	jne    0x40c170
  40c0cb:	cmp    r12,rdi
  40c0ce:	jb     0x40c0dc
  40c0d0:	cmp    BYTE PTR [r12-0x1],0x5c
  40c0d6:	je     0x40c1b3
  40c0dc:	lea    rdi,[r12+0x1]
  40c0e1:	mov    BYTE PTR [r12],0x0
  40c0e6:	mov    rdx,QWORD PTR [rsp+0x40]
  40c0eb:	mov    r8,rbx
  40c0ee:	mov    DWORD PTR [rsp+0x20],0x1
  40c0f6:	mov    r9d,r14d
  40c0f9:	mov    rcx,r13
  40c0fc:	mov    rbx,rdi
  40c0ff:	call   0x40aa90
  40c104:	jmp    0x40bdb4
  40c109:	mov    sil,0x4
  40c10c:	mov    r14b,0x1
  40c10f:	jmp    0x40bc2a
  40c114:	cmp    BYTE PTR [rbx+rdi*1+0x1],0x5d
  40c119:	jne    0x40bde6
  40c11f:	lea    rcx,[rbx+rdi*1+0x2]
  40c124:	mov    edx,0xa
  40c129:	call   0x4177e0
  40c12e:	mov    rbx,rax
  40c131:	jmp    0x40bdb4
  40c136:	test   DWORD PTR [rdi+rax*4],0xc01
  40c13d:	je     0x40bd64
  40c143:	cmp    BYTE PTR [r12-0x1],0x5c
  40c149:	jne    0x40c0dc
  40c14b:	jmp    0x40c1b3
  40c14d:	mov    ecx,0xc
  40c152:	call   0x4033e0
  40c157:	jmp    0x40bca4
  40c15c:	mov    rcx,rbp
  40c15f:	call   0x4177b8
  40c164:	lea    rbx,[rbp+rax*1+0x0]
  40c169:	jmp    0x40bdb4
  40c16e:	xchg   ax,ax
  40c170:	add    rdi,0x1
  40c174:	movzx  edx,BYTE PTR [rdi]
  40c177:	cmp    BYTE PTR [rax+rdx*1],0x0
  40c17b:	je     0x40c0cb
  40c181:	add    rdi,0x1
  40c185:	movzx  edx,BYTE PTR [rdi]
  40c188:	cmp    BYTE PTR [rax+rdx*1],0x0
  40c18c:	jne    0x40c170
  40c18e:	jmp    0x40c0cb
  40c193:	lea    rcx,[rbx+0x2]
  40c197:	mov    edx,0x3e
  40c19c:	call   0x4177e0
  40c1a1:	test   rax,rax
  40c1a4:	lea    rbx,[rax+0x1]
  40c1a8:	jne    0x40bdb4
  40c1ae:	jmp    0x40bd64
  40c1b3:	movzx  eax,BYTE PTR [r12]
  40c1b8:	lea    rdx,[r12-0x1]
  40c1bd:	lea    rdi,[r12+0x1]
  40c1c2:	cmp    al,0xa
  40c1c4:	je     0x40c1ee
  40c1c6:	cmp    al,0x5c
  40c1c8:	je     0x40c2bb
  40c1ce:	test   al,al
  40c1d0:	je     0x40c2b4
  40c1d6:	add    rdx,0x1
  40c1da:	mov    r12,rdi
  40c1dd:	mov    BYTE PTR [rdx-0x1],al
  40c1e0:	movzx  eax,BYTE PTR [r12]
  40c1e5:	lea    rdi,[r12+0x1]
  40c1ea:	cmp    al,0xa
  40c1ec:	jne    0x40c1c6
  40c1ee:	mov    BYTE PTR [rdx],0x0
  40c1f1:	jmp    0x40c0e6
  40c1f6:	cmp    dl,0x9
  40c1f9:	je     0x40c2d6
  40c1ff:	mov    edx,0x3e
  40c204:	mov    rcx,r15
  40c207:	call   0x4177e0
  40c20c:	test   rax,rax
  40c20f:	je     0x40bd64
  40c215:	lea    rbx,[rax+0x1]
  40c219:	jmp    0x40bdb4
  40c21e:	mov    rdi,QWORD PTR [rip+0x14e3b]        # 0x421060
  40c225:	test   rdi,rdi
  40c228:	je     0x40c40b
  40c22e:	mov    rcx,rdi
  40c231:	call   0x4177b8
  40c236:	mov    r12,rax
  40c239:	lea    r15,[rbx+0x2]
  40c23d:	mov    rdx,rdi
  40c240:	xor    ebp,ebp
  40c242:	mov    rdi,rbx
  40c245:	mov    r8,r12
  40c248:	mov    rcx,r15
  40c24b:	mov    ebx,ebp
  40c24d:	call   0x4177b0
  40c252:	test   eax,eax
  40c254:	jne    0x40c272
  40c256:	lea    rdx,[rdi+r12*1+0x2]
  40c25b:	movzx  eax,BYTE PTR [rdx]
  40c25e:	cmp    al,0x7f
  40c260:	ja     0x40c29b
  40c262:	lea    rcx,[rip+0x11597]        # 0x41d800
  40c269:	test   DWORD PTR [rcx+rax*4],0x3b0060
  40c270:	je     0x40c29b
  40c272:	cmp    rbp,0x1
  40c276:	je     0x40c1ff
  40c278:	mov    rdx,QWORD PTR [rip+0x14de9]        # 0x421068
  40c27f:	mov    ebp,0x1
  40c284:	mov    rcx,rdx
  40c287:	mov    QWORD PTR [rsp+0x70],rdx
  40c28c:	call   0x4177b8
  40c291:	mov    rdx,QWORD PTR [rsp+0x70]
  40c296:	mov    r12,rax
  40c299:	jmp    0x40c245
  40c29b:	lea    rax,[rip+0xdc1e]        # 0x419ec0
  40c2a2:	movsxd r12,ebx
  40c2a5:	mov    rcx,r13
  40c2a8:	call   QWORD PTR [rax+r12*8]
  40c2ac:	mov    rbx,rax
  40c2af:	jmp    0x40bdb4
  40c2b4:	xor    edi,edi
  40c2b6:	jmp    0x40c1ee
  40c2bb:	cmp    BYTE PTR [r12+0x1],0xa
  40c2c1:	jne    0x40c1d6
  40c2c7:	lea    rdi,[r12+0x2]
  40c2cc:	mov    eax,0xa
  40c2d1:	jmp    0x40c1d6
  40c2d6:	mov    rax,QWORD PTR [rip+0x14f03]        # 0x4211e0
  40c2dd:	test   rax,rax
  40c2e0:	je     0x40c539
  40c2e6:	cmp    BYTE PTR [rax+rdx*1],0x0
  40c2ea:	mov    rcx,r15
  40c2ed:	je     0x40c2fd
  40c2ef:	nop
  40c2f0:	add    rcx,0x1
  40c2f4:	movzx  edx,BYTE PTR [rcx]
  40c2f7:	cmp    BYTE PTR [rax+rdx*1],0x0
  40c2fb:	jne    0x40c2f0
  40c2fd:	mov    r8,QWORD PTR [rsp+0x60]
  40c302:	mov    rdx,QWORD PTR [rsp+0x68]
  40c307:	call   0x4058b0
  40c30c:	test   rax,rax
  40c30f:	mov    rbp,rax
  40c312:	je     0x40bd64
  40c318:	movzx  eax,BYTE PTR [rax]
  40c31b:	cmp    al,0x3e
  40c31d:	je     0x40bf01
  40c323:	cmp    al,0x2f
  40c325:	jne    0x40bd64
  40c32b:	mov    r15,rbp
  40c32e:	cmp    BYTE PTR [r15+0x1],0x3e
  40c333:	jne    0x40bd64
  40c339:	lea    rbx,[r15+0x2]
  40c33d:	mov    BYTE PTR [r15],0x0
  40c341:	mov    eax,DWORD PTR [rsp+0x9c]
  40c348:	mov    r8,QWORD PTR [rsp+0x70]
  40c34d:	mov    rdx,QWORD PTR [rsp+0x40]
  40c352:	mov    r9d,r14d
  40c355:	mov    DWORD PTR [rsp+0x20],eax
  40c359:	mov    rcx,r13
  40c35c:	call   0x40aa90
  40c361:	jmp    0x40bdb4
  40c366:	mov    cl,0x1c
  40c368:	call   0x4033e0
  40c36d:	mov    rcx,rax
  40c370:	jmp    0x40bcfd
  40c375:	mov    ecx,0xc
  40c37a:	call   0x4033e0
  40c37f:	mov    r8,rax
  40c382:	jmp    0x40bd34
  40c387:	call   0x4038d0
  40c38c:	mov    rdx,QWORD PTR [rsp+0x70]
  40c391:	lea    rcx,[rax+0x2]
  40c395:	mov    r8,rbx
  40c398:	mov    BYTE PTR [rax],0x3c
  40c39b:	mov    BYTE PTR [rax+0x1],0x2f
  40c39f:	mov    QWORD PTR [rsp+0x88],rax
  40c3a7:	call   0x417820
  40c3ac:	mov    r11,QWORD PTR [rsp+0x88]
  40c3b4:	lea    rax,[rbx+0x3]
  40c3b8:	mov    rcx,r12
  40c3bb:	mov    QWORD PTR [rsp+0x78],rax
  40c3c0:	mov    BYTE PTR [r11+rbx*1+0x2],0x3e
  40c3c6:	mov    BYTE PTR [r11+rbx*1+0x3],0x0
  40c3cc:	mov    rdx,r11
  40c3cf:	mov    BYTE PTR [rbp+0x1],0x20
  40c3d3:	call   0x417790
  40c3d8:	mov    r11,QWORD PTR [rsp+0x88]
  40c3e0:	cmp    r11,QWORD PTR [rsp+0x48]
  40c3e5:	mov    rdx,rax
  40c3e8:	je     0x40bf85
  40c3ee:	mov    rcx,r11
  40c3f1:	mov    QWORD PTR [rsp+0x88],rax
  40c3f9:	call   0x417860
  40c3fe:	mov    rdx,QWORD PTR [rsp+0x88]
  40c406:	jmp    0x40bf85
  40c40b:	lea    rax,[rip+0xe807]        # 0x41ac19
  40c412:	mov    r12d,0x7
  40c418:	lea    rdi,[rip+0xe7fa]        # 0x41ac19
  40c41f:	mov    QWORD PTR [rip+0x14c3a],rax        # 0x421060
  40c426:	lea    rax,[rip+0xe7df]        # 0x41ac0c
  40c42d:	mov    QWORD PTR [rip+0x14c34],rax        # 0x421068
  40c434:	jmp    0x40c239
  40c439:	mov    ecx,0x1c
  40c43e:	call   0x4033e0
  40c443:	jmp    0x40bea9
  40c448:	mov    ecx,0xc
  40c44d:	call   0x4033e0
  40c452:	jmp    0x40c0bd
  40c457:	mov    rax,QWORD PTR [rsp+0x78]
  40c45c:	mov    BYTE PTR [rax],0x0
  40c45f:	jmp    0x40c341
  40c464:	mov    QWORD PTR [rsp+0x110],r9
  40c46c:	movzx  eax,BYTE PTR [r12+0x1]
  40c472:	cmp    al,0x23
  40c474:	je     0x40c60a
  40c47a:	movzx  edx,al
  40c47d:	cmp    edx,0x7f
  40c480:	ja     0x40c597
  40c486:	test   DWORD PTR [rdi+rdx*4],0x30000
  40c48d:	je     0x40c597
  40c493:	mov    rcx,r9
  40c496:	cmp    al,0x58
  40c498:	je     0x40c580
  40c49e:	cmp    al,0x78
  40c4a0:	je     0x40c580
  40c4a6:	cmp    al,0x30
  40c4a8:	mov    r8d,0xa
  40c4ae:	je     0x40c568
  40c4b4:	mov    rdx,QWORD PTR [rsp+0x48]
  40c4b9:	call   0x417780
  40c4be:	cmp    eax,0x7f
  40c4c1:	mov    r12,QWORD PTR [rsp+0x110]
  40c4c9:	ja     0x40c457
  40c4cb:	cmp    BYTE PTR [r12],0x3b
  40c4d0:	jne    0x40c457
  40c4d2:	add    r12,0x1
  40c4d6:	test   eax,eax
  40c4d8:	mov    BYTE PTR [rbp-0x1],al
  40c4db:	jne    0x40c061
  40c4e1:	jmp    0x40c341
  40c4e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c4f0:	movzx  edx,BYTE PTR [r12+0x1]
  40c4f6:	lea    r15,[r12+0x3]
  40c4fb:	mov    BYTE PTR [rsp+0x90],dl
  40c502:	movzx  eax,BYTE PTR [r12+0x2]
  40c508:	test   dl,dl
  40c50a:	mov    BYTE PTR [rsp+0x91],al
  40c511:	je     0x40c457
  40c517:	test   al,al
  40c519:	je     0x40c457
  40c51f:	mov    rcx,QWORD PTR [rsp+0x58]
  40c524:	mov    r8d,0x10
  40c52a:	xor    edx,edx
  40c52c:	mov    r12,r15
  40c52f:	call   0x417780
  40c534:	jmp    0x40c05e
  40c539:	mov    ecx,0xc
  40c53e:	call   0x4033e0
  40c543:	movzx  edx,BYTE PTR [r15]
  40c547:	jmp    0x40c2e6
  40c54c:	mov    ecx,0xc
  40c551:	mov    QWORD PTR [rsp+0x78],rdx
  40c556:	call   0x4033e0
  40c55b:	mov    rdx,QWORD PTR [rsp+0x78]
  40c560:	mov    r8,rax
  40c563:	jmp    0x40bfb0
  40c568:	cmp    BYTE PTR [rcx+0x1],0x30
  40c56c:	mov    r8d,0x10
  40c572:	mov    eax,0xa
  40c577:	cmovne r8d,eax
  40c57b:	jmp    0x40c4b4
  40c580:	add    rcx,0x1
  40c584:	mov    r8d,0x10
  40c58a:	mov    QWORD PTR [rsp+0x110],rcx
  40c592:	jmp    0x40c4b4
  40c597:	lea    r12,[rip+0xd9aa]        # 0x419f48
  40c59e:	xor    r15d,r15d
  40c5a1:	jmp    0x40c5b5
  40c5a3:	add    r15d,0x1
  40c5a7:	add    r12,0x10
  40c5ab:	cmp    r15d,0xc
  40c5af:	je     0x40c457
  40c5b5:	movzx  r10d,WORD PTR [r12]
  40c5ba:	mov    rdx,QWORD PTR [r12-0x8]
  40c5bf:	mov    rcx,r9
  40c5c2:	mov    QWORD PTR [rsp+0x80],r9
  40c5ca:	mov    r8,r10
  40c5cd:	mov    QWORD PTR [rsp+0x88],r10
  40c5d5:	call   0x4177b0
  40c5da:	test   eax,eax
  40c5dc:	mov    r9,QWORD PTR [rsp+0x80]
  40c5e4:	mov    r10,QWORD PTR [rsp+0x88]
  40c5ec:	jne    0x40c5a3
  40c5ee:	movsxd rax,r15d
  40c5f1:	lea    rcx,[rip+0xd948]        # 0x419f40
  40c5f8:	lea    r12,[r9+r10*1]
  40c5fc:	shl    rax,0x4
  40c600:	movsx  eax,WORD PTR [rcx+rax*1+0xa]
  40c605:	jmp    0x40c4d6
  40c60a:	lea    rcx,[r12+0x2]
  40c60f:	mov    QWORD PTR [rsp+0x110],rcx
  40c617:	movzx  eax,BYTE PTR [r12+0x2]
  40c61d:	jmp    0x40c496
  40c622:	nop    DWORD PTR [rax+0x0]
  40c626:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c630:	push   r15
  40c632:	push   r14
  40c634:	push   r13
  40c636:	push   r12
  40c638:	push   rbp
  40c639:	push   rdi
  40c63a:	push   rsi
  40c63b:	push   rbx
  40c63c:	sub    rsp,0x188
  40c643:	mov    rdx,QWORD PTR [rcx+0x58]
  40c647:	test   rdx,rdx
  40c64a:	je     0x40c6e9
  40c650:	mov    r15d,DWORD PTR [rcx+0x10]
  40c654:	mov    eax,r15d
  40c657:	and    eax,0xfffffffb
  40c65a:	cmp    QWORD PTR [rdx+0x8],0x0
  40c65f:	mov    DWORD PTR [rcx+0x10],eax
  40c662:	je     0x40c7f3
  40c668:	lea    rax,[rdx+0x10]
  40c66c:	xor    ebx,ebx
  40c66e:	xchg   ax,ax
  40c670:	add    rax,0x8
  40c674:	add    ebx,0x1
  40c677:	cmp    QWORD PTR [rax-0x8],0x0
  40c67c:	jne    0x40c670
  40c67e:	mov    rsi,rcx
  40c681:	mov    ebp,0xffffffff
  40c686:	lea    r12,[rsp+0x70]
  40c68b:	lea    r14,[rsp+0x30]
  40c690:	mov    r13,QWORD PTR [rip+0x17171]        # 0x423808
  40c697:	jmp    0x40c6ce
  40c699:	nop    DWORD PTR [rax+0x0]
  40c6a0:	movsxd rax,ebx
  40c6a3:	mov    edi,ebx
  40c6a5:	shl    rax,0x3
  40c6a9:	mov    r8,QWORD PTR [rdx+rax*1]
  40c6ad:	test   r8,r8
  40c6b0:	je     0x40c6e5
  40c6b2:	mov    r9,QWORD PTR [rsi+0x20]
  40c6b6:	mov    edx,0x105
  40c6bb:	mov    rcx,r12
  40c6be:	lea    ebx,[rdi+rbp*1]
  40c6c1:	call   0x408470
  40c6c6:	test   al,al
  40c6c8:	jne    0x40c700
  40c6ca:	mov    rdx,QWORD PTR [rsi+0x58]
  40c6ce:	cmp    ebx,0xffffffff
  40c6d1:	jne    0x40c6a0
  40c6d3:	xor    eax,eax
  40c6d5:	xor    edi,edi
  40c6d7:	mov    ebp,0x1
  40c6dc:	mov    r8,QWORD PTR [rdx+rax*1]
  40c6e0:	test   r8,r8
  40c6e3:	jne    0x40c6b2
  40c6e5:	mov    DWORD PTR [rsi+0x10],r15d
  40c6e9:	add    rsp,0x188
  40c6f0:	pop    rbx
  40c6f1:	pop    rsi
  40c6f2:	pop    rdi
  40c6f3:	pop    rbp
  40c6f4:	pop    r12
  40c6f6:	pop    r13
  40c6f8:	pop    r14
  40c6fa:	pop    r15
  40c6fc:	ret    
  40c6fd:	nop    DWORD PTR [rax]
  40c700:	mov    rdx,r14
  40c703:	mov    rcx,r12
  40c706:	call   r13
  40c709:	test   eax,eax
  40c70b:	jne    0x40c6ca
  40c70d:	movzx  eax,WORD PTR [rsp+0x36]
  40c712:	and    ax,0xf000
  40c716:	cmp    ax,0x4000
  40c71a:	jne    0x40c7a8
  40c720:	mov    r9,r12
  40c723:	mov    edx,DWORD PTR [r9]
  40c726:	add    r9,0x4
  40c72a:	lea    eax,[rdx-0x1010101]
  40c730:	not    edx
  40c732:	and    eax,edx
  40c734:	and    eax,0x80808080
  40c739:	je     0x40c723
  40c73b:	mov    edx,eax
  40c73d:	shr    edx,0x10
  40c740:	test   eax,0x8080
  40c745:	cmove  eax,edx
  40c748:	lea    rdx,[r9+0x2]
  40c74c:	cmove  r9,rdx
  40c750:	mov    rdx,QWORD PTR [rsi+0x38]
  40c754:	add    al,al
  40c756:	sbb    r9,0x3
  40c75a:	sub    r9,r12
  40c75d:	mov    rcx,rdx
  40c760:	mov    QWORD PTR [rsp+0x28],r9
  40c765:	mov    QWORD PTR [rsp+0x20],rdx
  40c76a:	call   0x4177b8
  40c76f:	mov    r9,QWORD PTR [rsp+0x28]
  40c774:	lea    r8,[rax+0x1]
  40c778:	mov    rdx,QWORD PTR [rsp+0x20]
  40c77d:	lea    rax,[r9+r8*1+0x1]
  40c782:	cmp    rax,0x104
  40c788:	ja     0x40c6ca
  40c78e:	add    r9,r12
  40c791:	cmp    BYTE PTR [r9-0x1],0x5c
  40c796:	mov    rcx,r9
  40c799:	je     0x40c7a3
  40c79b:	add    rcx,0x1
  40c79f:	mov    BYTE PTR [r9],0x5c
  40c7a3:	call   0x417820
  40c7a8:	mov    r8d,ebp
  40c7ab:	mov    rdx,r12
  40c7ae:	mov    rcx,rsi
  40c7b1:	call   0x40bb90
  40c7b6:	cmp    ebp,0xffffffff
  40c7b9:	jne    0x40c6ca
  40c7bf:	movzx  eax,WORD PTR [rsi+0xaa]
  40c7c6:	add    rax,0x1
  40c7ca:	lea    rdx,[rax+rax*2]
  40c7ce:	lea    rax,[rax+rdx*4]
  40c7d2:	mov    rdx,QWORD PTR [rsi+0x78]
  40c7d6:	lea    rax,[rdx+rax*8]
  40c7da:	mov    eax,DWORD PTR [rax+0x10]
  40c7dd:	shr    eax,0x5
  40c7e0:	and    eax,0x1
  40c7e3:	mov    eax,0x1
  40c7e8:	cmovne ebx,edi
  40c7eb:	cmovne ebp,eax
  40c7ee:	jmp    0x40c6ca
  40c7f3:	xor    ebx,ebx
  40c7f5:	jmp    0x40c67e
  40c7fa:	nop    WORD PTR [rax+rax*1+0x0]
  40c800:	push   rdi
  40c801:	push   rsi
  40c802:	push   rbx
  40c803:	sub    rsp,0x20
  40c807:	mov    rbx,rcx
  40c80a:	mov    rdi,rdx
  40c80d:	call   0x404c10
  40c812:	test   eax,eax
  40c814:	mov    esi,eax
  40c816:	jne    0x40c830
  40c818:	mov    QWORD PTR [rbx+0x28],rdi
  40c81c:	mov    rcx,rbx
  40c81f:	call   0x40c630
  40c824:	mov    eax,esi
  40c826:	add    rsp,0x20
  40c82a:	pop    rbx
  40c82b:	pop    rsi
  40c82c:	pop    rdi
  40c82d:	ret    
  40c82e:	xchg   ax,ax
  40c830:	mov    esi,0xffffffff
  40c835:	jmp    0x40c824
  40c837:	nop    WORD PTR [rax+rax*1+0x0]
  40c840:	push   rsi
  40c841:	push   rbx
  40c842:	sub    rsp,0x68
  40c846:	cmp    rcx,0xf
  40c84a:	jbe    0x40c852
  40c84c:	test   BYTE PTR [rdx+0x10],0x28
  40c850:	je     0x40c860
  40c852:	add    rsp,0x68
  40c856:	pop    rbx
  40c857:	pop    rsi
  40c858:	ret    
  40c859:	nop    DWORD PTR [rax+0x0]
  40c860:	mov    rsi,rdx
  40c863:	mov    rbx,rcx
  40c866:	lea    rdx,[rsp+0x20]
  40c86b:	mov    rcx,QWORD PTR [rsi+0x18]
  40c86f:	call   QWORD PTR [rip+0x16f93]        # 0x423808
  40c875:	test   eax,eax
  40c877:	je     0x40c893
  40c879:	test   BYTE PTR [rbx+0x10],0x4
  40c87d:	je     0x40c852
  40c87f:	mov    rcx,QWORD PTR [rbx+0x28]
  40c883:	mov    r8,QWORD PTR [rsi+0x18]
  40c887:	lea    rdx,[rip+0xd382]        # 0x419c10
  40c88e:	call   0x402450
  40c893:	movzx  eax,WORD PTR [rsp+0x26]
  40c898:	and    ax,0xf000
  40c89c:	cmp    ax,0x8000
  40c8a0:	je     0x40c8c0
  40c8a2:	test   BYTE PTR [rbx+0x10],0x4
  40c8a6:	je     0x40c852
  40c8a8:	call   QWORD PTR [rip+0x16d6a]        # 0x423618
  40c8ae:	mov    DWORD PTR [rax],0x16
  40c8b4:	jmp    0x40c87f
  40c8b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c8c0:	mov    rdx,QWORD PTR [rsi+0x18]
  40c8c4:	xor    r8d,r8d
  40c8c7:	mov    rcx,rbx
  40c8ca:	call   0x40bb90
  40c8cf:	jmp    0x40c852
  40c8d1:	nop    DWORD PTR [rax+rax*1+0x0]
  40c8d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c8e0:	push   r12
  40c8e2:	push   rbp
  40c8e3:	push   rdi
  40c8e4:	push   rsi
  40c8e5:	push   rbx
  40c8e6:	sub    rsp,0x50
  40c8ea:	mov    r8d,0x2
  40c8f0:	mov    edx,0x1
  40c8f5:	mov    ebp,DWORD PTR [rip+0xbf95]        # 0x418890
  40c8fb:	lea    rsi,[rsp+0x20]
  40c900:	mov    rbx,rcx
  40c903:	mov    r9,rsi
  40c906:	call   0x40b8c0
  40c90b:	cmp    rax,0xffffffffffffffff
  40c90f:	mov    rdi,rax
  40c912:	je     0x40c980
  40c914:	mov    rcx,rbx
  40c917:	mov    DWORD PTR [rip+0xbf6f],0x0        # 0x418890
  40c921:	call   0x4177b8
  40c926:	mov    rdx,rbx
  40c929:	mov    r8,rax
  40c92c:	mov    rcx,rdi
  40c92f:	call   0x406d20
  40c934:	test   rax,rax
  40c937:	mov    rbx,rax
  40c93a:	je     0x40c960
  40c93c:	mov    rcx,rsi
  40c93f:	call   0x40bb00
  40c944:	mov    DWORD PTR [rip+0xbf46],ebp        # 0x418890
  40c94a:	mov    rax,rbx
  40c94d:	add    rsp,0x50
  40c951:	pop    rbx
  40c952:	pop    rsi
  40c953:	pop    rdi
  40c954:	pop    rbp
  40c955:	pop    r12
  40c957:	ret    
  40c958:	nop    DWORD PTR [rax+rax*1+0x0]
  40c960:	mov    rdi,QWORD PTR [rip+0x16cb1]        # 0x423618
  40c967:	call   rdi
  40c969:	mov    r12d,DWORD PTR [rax]
  40c96c:	mov    rcx,rsi
  40c96f:	call   0x40bb00
  40c974:	call   rdi
  40c976:	mov    DWORD PTR [rax],r12d
  40c979:	jmp    0x40c944
  40c97b:	nop    DWORD PTR [rax+rax*1+0x0]
  40c980:	xor    eax,eax
  40c982:	jmp    0x40c94d
  40c984:	xchg   ax,ax
  40c986:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c990:	push   r13
  40c992:	push   r12
  40c994:	push   rbp
  40c995:	push   rdi
  40c996:	push   rsi
  40c997:	push   rbx
  40c998:	sub    rsp,0x28
  40c99c:	cmp    rcx,0xf
  40c9a0:	jbe    0x40c9ad
  40c9a2:	test   rdx,rdx
  40c9a5:	je     0x40c9ad
  40c9a7:	test   BYTE PTR [rdx+0x10],0x8
  40c9ab:	je     0x40c9c0
  40c9ad:	add    rsp,0x28
  40c9b1:	pop    rbx
  40c9b2:	pop    rsi
  40c9b3:	pop    rdi
  40c9b4:	pop    rbp
  40c9b5:	pop    r12
  40c9b7:	pop    r13
  40c9b9:	ret    
  40c9ba:	nop    WORD PTR [rax+rax*1+0x0]
  40c9c0:	mov    rsi,rcx
  40c9c3:	mov    rcx,QWORD PTR [rdx+0x18]
  40c9c7:	mov    rbx,rdx
  40c9ca:	call   0x405d40
  40c9cf:	cmp    rax,0xffffffffffffffff
  40c9d3:	mov    rdi,rax
  40c9d6:	je     0x40ca00
  40c9d8:	test   BYTE PTR [rbx+0x10],0x40
  40c9dc:	jne    0x40c9f0
  40c9de:	mov    DWORD PTR [rbx+0x18],edi
  40c9e1:	add    rsp,0x28
  40c9e5:	pop    rbx
  40c9e6:	pop    rsi
  40c9e7:	pop    rdi
  40c9e8:	pop    rbp
  40c9e9:	pop    r12
  40c9eb:	pop    r13
  40c9ed:	ret    
  40c9ee:	xchg   ax,ax
  40c9f0:	mov    rcx,QWORD PTR [rbx+0x18]
  40c9f4:	call   0x417860
  40c9f9:	and    DWORD PTR [rbx+0x10],0xffffffbf
  40c9fd:	jmp    0x40c9de
  40c9ff:	nop
  40ca00:	mov    r13,QWORD PTR [rbx+0x18]
  40ca04:	mov    r12,QWORD PTR [rsi+0x28]
  40ca08:	mov    rbp,QWORD PTR [rip+0xc039]        # 0x418a48
  40ca0f:	call   QWORD PTR [rip+0x16bbb]        # 0x4235d0
  40ca15:	lea    rcx,[rax+0x60]
  40ca19:	mov    r9,r13
  40ca1c:	mov    r8,r12
  40ca1f:	mov    rdx,rbp
  40ca22:	call   0x401a90
  40ca27:	test   BYTE PTR [rsi+0x10],0x4
  40ca2b:	je     0x40c9d8
  40ca2d:	mov    edx,0x1
  40ca32:	mov    rcx,rsi
  40ca35:	call   QWORD PTR [rsi+0x98]
  40ca3b:	jmp    0x40c9d8
  40ca3d:	nop    DWORD PTR [rax]
  40ca40:	push   rbx
  40ca41:	sub    rsp,0x20
  40ca45:	mov    rbx,rdx
  40ca48:	call   0x40c990
  40ca4d:	cmp    DWORD PTR [rbx+0x18],0xffffffff
  40ca51:	je     0x40ca5e
  40ca53:	xor    ecx,ecx
  40ca55:	call   QWORD PTR [rip+0x16c25]        # 0x423680
  40ca5b:	add    DWORD PTR [rbx+0x18],eax
  40ca5e:	add    rsp,0x20
  40ca62:	pop    rbx
  40ca63:	ret    
  40ca64:	xchg   ax,ax
  40ca66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ca70:	push   r12
  40ca72:	push   rbp
  40ca73:	push   rdi
  40ca74:	push   rsi
  40ca75:	push   rbx
  40ca76:	sub    rsp,0x30
  40ca7a:	test   rcx,rcx
  40ca7d:	mov    rdi,rcx
  40ca80:	je     0x40ce1e
  40ca86:	mov    rax,QWORD PTR [rip+0x14753]        # 0x4211e0
  40ca8d:	test   rax,rax
  40ca90:	je     0x40ce46
  40ca96:	movzx  ecx,BYTE PTR [rdi]
  40ca99:	mov    rbp,rdi
  40ca9c:	cmp    BYTE PTR [rax+rcx*1],0x0
  40caa0:	mov    rdx,rcx
  40caa3:	je     0x40cab6
  40caa5:	add    rbp,0x1
  40caa9:	movzx  ecx,BYTE PTR [rbp+0x0]
  40caad:	cmp    BYTE PTR [rax+rcx*1],0x0
  40cab1:	mov    rdx,rcx
  40cab4:	jne    0x40caa5
  40cab6:	test   dl,dl
  40cab8:	je     0x40ce1e
  40cabe:	mov    rsi,rbp
  40cac1:	mov    r12d,0x2
  40cac7:	nop    WORD PTR [rax+rax*1+0x0]
  40cad0:	mov    rax,QWORD PTR [rip+0x14709]        # 0x4211e0
  40cad7:	add    r12d,0x1
  40cadb:	lea    rbx,[rsi+0x1]
  40cadf:	test   rax,rax
  40cae2:	je     0x40cd87
  40cae8:	movzx  edx,BYTE PTR [rsi+0x1]
  40caec:	test   dl,dl
  40caee:	je     0x40cdf8
  40caf4:	cmp    BYTE PTR [rax+rdx*1],0x0
  40caf8:	mov    rcx,rax
  40cafb:	je     0x40cb06
  40cafd:	jmp    0x40cb1d
  40caff:	nop
  40cb00:	cmp    BYTE PTR [rax+rdx*1],0x0
  40cb04:	jne    0x40cb11
  40cb06:	add    rbx,0x1
  40cb0a:	movzx  edx,BYTE PTR [rbx]
  40cb0d:	test   dl,dl
  40cb0f:	jne    0x40cb00
  40cb11:	test   rcx,rcx
  40cb14:	je     0x40cdb0
  40cb1a:	mov    rax,rcx
  40cb1d:	movzx  edx,BYTE PTR [rbx]
  40cb20:	movzx  ecx,dl
  40cb23:	cmp    BYTE PTR [rax+rcx*1],0x0
  40cb27:	je     0x40cd77
  40cb2d:	mov    rsi,rbx
  40cb30:	add    rsi,0x1
  40cb34:	movzx  ecx,BYTE PTR [rsi]
  40cb37:	cmp    BYTE PTR [rax+rcx*1],0x0
  40cb3b:	mov    rdx,rcx
  40cb3e:	jne    0x40cb30
  40cb40:	test   dl,dl
  40cb42:	jne    0x40cad0
  40cb44:	sub    rsi,rbp
  40cb47:	movsxd r12,r12d
  40cb4a:	lea    rcx,[rsi+r12*8+0x10]
  40cb4f:	call   0x4038d0
  40cb54:	test   rax,rax
  40cb57:	mov    rbp,rax
  40cb5a:	je     0x40ce55
  40cb60:	lea    rbx,[rax+r12*8]
  40cb64:	lea    rsi,[rsp+0x2f]
  40cb69:	mov    QWORD PTR [rax+0x8],rbx
  40cb6d:	xor    eax,eax
  40cb6f:	nop
  40cb70:	lea    edx,[rax+0x1]
  40cb73:	mov    DWORD PTR [rbp+0x0],edx
  40cb76:	mov    QWORD PTR [rbp+rax*8+0x8],rbx
  40cb7b:	movzx  r8d,BYTE PTR [rdi]
  40cb7f:	cmp    r8b,0x7f
  40cb83:	ja     0x40cb9d
  40cb85:	lea    rdx,[rip+0x10c74]        # 0x41d800
  40cb8c:	movzx  eax,r8b
  40cb90:	test   DWORD PTR [rdx+rax*4],0xc01
  40cb97:	jne    0x40cc3d
  40cb9d:	cmp    r8b,0x22
  40cba1:	je     0x40cc90
  40cba7:	cmp    r8b,0x27
  40cbab:	je     0x40cbd0
  40cbad:	test   r8b,r8b
  40cbb0:	je     0x40cc70
  40cbb6:	mov    BYTE PTR [rbx],r8b
  40cbb9:	movzx  r8d,BYTE PTR [rdi+0x1]
  40cbbe:	add    rbx,0x1
  40cbc2:	add    rdi,0x1
  40cbc6:	cmp    r8b,0x7f
  40cbca:	ja     0x40cb9d
  40cbcc:	jmp    0x40cb85
  40cbce:	xchg   ax,ax
  40cbd0:	movzx  r8d,BYTE PTR [rdi+0x1]
  40cbd5:	lea    rax,[rdi+0x1]
  40cbd9:	cmp    r8b,0x27
  40cbdd:	lea    rdi,[rax+0x1]
  40cbe1:	je     0x40cc0e
  40cbe3:	cmp    r8b,0x5c
  40cbe7:	je     0x40cd10
  40cbed:	test   r8b,r8b
  40cbf0:	je     0x40cdc0
  40cbf6:	mov    BYTE PTR [rbx],r8b
  40cbf9:	movzx  r8d,BYTE PTR [rdi]
  40cbfd:	mov    rax,rdi
  40cc00:	add    rbx,0x1
  40cc04:	lea    rdi,[rax+0x1]
  40cc08:	cmp    r8b,0x27
  40cc0c:	jne    0x40cbe3
  40cc0e:	test   rdi,rdi
  40cc11:	je     0x40cdc0
  40cc17:	movzx  r8d,BYTE PTR [rdi]
  40cc1b:	cmp    r8b,0x7f
  40cc1f:	ja     0x40cb7f
  40cc25:	lea    rdx,[rip+0x10bd4]        # 0x41d800
  40cc2c:	movzx  eax,r8b
  40cc30:	test   DWORD PTR [rdx+rax*4],0xc01
  40cc37:	je     0x40cb7f
  40cc3d:	mov    rax,QWORD PTR [rip+0x1459c]        # 0x4211e0
  40cc44:	lea    r12,[rdi+0x1]
  40cc48:	test   rax,rax
  40cc4b:	je     0x40ce37
  40cc51:	movzx  edx,BYTE PTR [rdi+0x1]
  40cc55:	mov    rdi,r12
  40cc58:	cmp    BYTE PTR [rax+rdx*1],0x0
  40cc5c:	je     0x40cc70
  40cc5e:	xchg   ax,ax
  40cc60:	add    rdi,0x1
  40cc64:	movzx  edx,BYTE PTR [rdi]
  40cc67:	cmp    BYTE PTR [rax+rdx*1],0x0
  40cc6b:	jne    0x40cc60
  40cc6d:	nop    DWORD PTR [rax]
  40cc70:	mov    BYTE PTR [rbx],0x0
  40cc73:	cmp    BYTE PTR [rdi],0x0
  40cc76:	lea    rdx,[rbx+0x1]
  40cc7a:	mov    eax,DWORD PTR [rbp+0x0]
  40cc7d:	je     0x40cde1
  40cc83:	mov    rbx,rdx
  40cc86:	jmp    0x40cb70
  40cc8b:	nop    DWORD PTR [rax+rax*1+0x0]
  40cc90:	add    rdi,0x1
  40cc94:	movzx  r8d,BYTE PTR [rdi]
  40cc98:	lea    r12,[rdi+0x1]
  40cc9c:	cmp    r8b,0x22
  40cca0:	mov    BYTE PTR [rsp+0x2f],r8b
  40cca5:	je     0x40ccc2
  40cca7:	cmp    r8b,0x5c
  40ccab:	je     0x40cce2
  40ccad:	test   r8b,r8b
  40ccb0:	je     0x40cdc0
  40ccb6:	mov    BYTE PTR [rbx],r8b
  40ccb9:	mov    rdi,r12
  40ccbc:	add    rbx,0x1
  40ccc0:	jmp    0x40cc94
  40ccc2:	test   r12,r12
  40ccc5:	mov    rdi,r12
  40ccc8:	je     0x40cdc0
  40ccce:	movzx  r8d,BYTE PTR [r12]
  40ccd3:	cmp    r8b,0x7f
  40ccd7:	ja     0x40cb7f
  40ccdd:	jmp    0x40cc25
  40cce2:	mov    r8d,0x7f
  40cce8:	mov    rcx,r12
  40cceb:	mov    rdx,rsi
  40ccee:	call   0x4068f0
  40ccf3:	movzx  r8d,BYTE PTR [rsp+0x2f]
  40ccf9:	mov    eax,eax
  40ccfb:	add    r12,rax
  40ccfe:	mov    rdi,r12
  40cd01:	cmp    r8b,0x7f
  40cd05:	jne    0x40ccb6
  40cd07:	jmp    0x40cc94
  40cd09:	nop    DWORD PTR [rax+0x0]
  40cd10:	movzx  edx,BYTE PTR [rax+0x1]
  40cd14:	cmp    dl,0xd
  40cd17:	je     0x40cd57
  40cd19:	ja     0x40cd40
  40cd1b:	test   dl,dl
  40cd1d:	je     0x40cdc0
  40cd23:	cmp    dl,0xa
  40cd26:	jne    0x40cbf6
  40cd2c:	movzx  r8d,BYTE PTR [rax+0x2]
  40cd31:	add    rax,0x2
  40cd35:	jmp    0x40cbd9
  40cd3a:	nop    WORD PTR [rax+rax*1+0x0]
  40cd40:	cmp    dl,0x27
  40cd43:	je     0x40cd6f
  40cd45:	cmp    dl,0x5c
  40cd48:	jne    0x40cbf6
  40cd4e:	lea    rdi,[rax+0x2]
  40cd52:	jmp    0x40cbf6
  40cd57:	movzx  r8d,BYTE PTR [rax+0x2]
  40cd5c:	cmp    r8b,0xa
  40cd60:	je     0x40ce10
  40cd66:	add    rax,0x2
  40cd6a:	jmp    0x40cbd9
  40cd6f:	mov    r8d,0x27
  40cd75:	jmp    0x40cd4e
  40cd77:	test   dl,dl
  40cd79:	mov    rsi,rbx
  40cd7c:	jne    0x40cad0
  40cd82:	jmp    0x40cb44
  40cd87:	mov    ecx,0xc
  40cd8c:	call   0x4033e0
  40cd91:	movzx  edx,BYTE PTR [rsi+0x1]
  40cd95:	mov    rcx,QWORD PTR [rip+0x14444]        # 0x4211e0
  40cd9c:	test   dl,dl
  40cd9e:	jne    0x40cb00
  40cda4:	jmp    0x40cb11
  40cda9:	nop    DWORD PTR [rax+0x0]
  40cdb0:	mov    ecx,0xc
  40cdb5:	call   0x4033e0
  40cdba:	jmp    0x40cb1d
  40cdbf:	nop
  40cdc0:	mov    rcx,rbp
  40cdc3:	call   0x417860
  40cdc8:	call   QWORD PTR [rip+0x1684a]        # 0x423618
  40cdce:	mov    DWORD PTR [rax],0x16
  40cdd4:	xor    eax,eax
  40cdd6:	add    rsp,0x30
  40cdda:	pop    rbx
  40cddb:	pop    rsi
  40cddc:	pop    rdi
  40cddd:	pop    rbp
  40cdde:	pop    r12
  40cde0:	ret    
  40cde1:	mov    QWORD PTR [rbp+rax*8+0x8],0x0
  40cdea:	mov    rax,rbp
  40cded:	add    rsp,0x30
  40cdf1:	pop    rbx
  40cdf2:	pop    rsi
  40cdf3:	pop    rdi
  40cdf4:	pop    rbp
  40cdf5:	pop    r12
  40cdf7:	ret    
  40cdf8:	cmp    BYTE PTR [rax],0x0
  40cdfb:	jne    0x40cb2d
  40ce01:	mov    rsi,rbx
  40ce04:	jmp    0x40cb44
  40ce09:	nop    DWORD PTR [rax+0x0]
  40ce10:	movzx  r8d,BYTE PTR [rax+0x3]
  40ce15:	add    rax,0x3
  40ce19:	jmp    0x40cbd9
  40ce1e:	call   QWORD PTR [rip+0x167f4]        # 0x423618
  40ce24:	mov    DWORD PTR [rax],0x2
  40ce2a:	xor    eax,eax
  40ce2c:	add    rsp,0x30
  40ce30:	pop    rbx
  40ce31:	pop    rsi
  40ce32:	pop    rdi
  40ce33:	pop    rbp
  40ce34:	pop    r12
  40ce36:	ret    
  40ce37:	mov    ecx,0xc
  40ce3c:	call   0x4033e0
  40ce41:	jmp    0x40cc51
  40ce46:	mov    ecx,0xc
  40ce4b:	call   0x4033e0
  40ce50:	jmp    0x40ca96
  40ce55:	call   QWORD PTR [rip+0x167bd]        # 0x423618
  40ce5b:	mov    DWORD PTR [rax],0xc
  40ce61:	xor    eax,eax
  40ce63:	jmp    0x40ce2c
  40ce65:	nop
  40ce66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ce70:	push   r15
  40ce72:	push   r14
  40ce74:	push   r13
  40ce76:	push   r12
  40ce78:	push   rbp
  40ce79:	push   rdi
  40ce7a:	push   rsi
  40ce7b:	push   rbx
  40ce7c:	sub    rsp,0xd8
  40ce83:	test   BYTE PTR [rcx+0x11],0x1
  40ce87:	jne    0x40cea0
  40ce89:	add    rsp,0xd8
  40ce90:	pop    rbx
  40ce91:	pop    rsi
  40ce92:	pop    rdi
  40ce93:	pop    rbp
  40ce94:	pop    r12
  40ce96:	pop    r13
  40ce98:	pop    r14
  40ce9a:	pop    r15
  40ce9c:	ret    
  40ce9d:	nop    DWORD PTR [rax]
  40cea0:	mov    rdi,rcx
  40cea3:	mov    rcx,QWORD PTR [rcx+0x30]
  40cea7:	mov    ebp,edx
  40cea9:	call   0x417840
  40ceae:	test   rax,rax
  40ceb1:	je     0x40cf20
  40ceb3:	mov    rcx,rax
  40ceb6:	call   0x40ca70
  40cebb:	test   rax,rax
  40cebe:	mov    rbx,rax
  40cec1:	je     0x40cf20
  40cec3:	mov    r13,QWORD PTR [rdi+0x8]
  40cec7:	mov    QWORD PTR [rdi+0x8],rax
  40cecb:	mov    eax,DWORD PTR [rax]
  40cecd:	mov    esi,DWORD PTR [rdi+0x10]
  40ced0:	mov    r12d,DWORD PTR [rdi+0x4]
  40ced4:	mov    DWORD PTR [rdi+0x14],0x1
  40cedb:	mov    QWORD PTR [rdi+0x18],0x0
  40cee3:	add    eax,0x1
  40cee6:	mov    DWORD PTR [rdi+0x4],eax
  40cee9:	mov    eax,esi
  40ceeb:	and    eax,0xfffffffb
  40ceee:	cmp    ebp,0x1
  40cef1:	mov    DWORD PTR [rdi+0x10],eax
  40cef4:	je     0x40d050
  40cefa:	jb     0x40d060
  40cf00:	cmp    ebp,0x2
  40cf03:	jne    0x40cf0d
  40cf05:	mov    rcx,rdi
  40cf08:	call   0x40a9a0
  40cf0d:	mov    rcx,rbx
  40cf10:	call   0x417860
  40cf15:	mov    QWORD PTR [rdi+0x8],r13
  40cf19:	mov    DWORD PTR [rdi+0x4],r12d
  40cf1d:	mov    DWORD PTR [rdi+0x10],esi
  40cf20:	lea    r14,[rsp+0x50]
  40cf25:	mov    rax,QWORD PTR [rdi+0x78]
  40cf29:	mov    r9,QWORD PTR [rdi+0x30]
  40cf2d:	lea    r8,[rip+0xce81]        # 0x419db5
  40cf34:	mov    edx,0x80
  40cf39:	mov    r15d,DWORD PTR [rdi+0xb4]
  40cf40:	mov    rcx,r14
  40cf43:	mov    r13d,0x7f
  40cf49:	mov    QWORD PTR [rsp+0x30],rax
  40cf4e:	call   0x401e80
  40cf53:	movsxd r12,eax
  40cf56:	lea    esi,[r15-0x1]
  40cf5a:	mov    rbx,QWORD PTR [rsp+0x30]
  40cf5f:	add    r12,r14
  40cf62:	mov    eax,r12d
  40cf65:	sub    eax,r14d
  40cf68:	sub    r13,rax
  40cf6b:	lea    rax,[rsp+0x30]
  40cf70:	test   r15d,r15d
  40cf73:	mov    QWORD PTR [rsp+0x28],rax
  40cf78:	jg     0x40cf91
  40cf7a:	jmp    0x40cfe0
  40cf7c:	nop    DWORD PTR [rax+0x0]
  40cf80:	sub    esi,0x1
  40cf83:	add    rbx,0x68
  40cf87:	cmp    esi,0xffffffff
  40cf8a:	mov    QWORD PTR [rsp+0x30],rbx
  40cf8f:	je     0x40cfe0
  40cf91:	test   BYTE PTR [rbx+0x11],0x1
  40cf95:	jne    0x40cf80
  40cf97:	cmp    WORD PTR [rbx+0x8],0x8000
  40cf9d:	jne    0x40cf80
  40cf9f:	mov    r15,QWORD PTR [rbx+0x48]
  40cfa3:	mov    rcx,r15
  40cfa6:	call   0x4177b8
  40cfab:	lea    r8,[rax+0x1]
  40cfaf:	cmp    r13,r8
  40cfb2:	jb     0x40cf80
  40cfb4:	mov    rdx,r15
  40cfb7:	mov    rcx,r12
  40cfba:	call   0x417820
  40cfbf:	mov    rcx,QWORD PTR [rsp+0x28]
  40cfc4:	mov    r9d,ebp
  40cfc7:	mov    r8,rdi
  40cfca:	mov    rdx,r14
  40cfcd:	call   0x403760
  40cfd2:	mov    rbx,QWORD PTR [rsp+0x30]
  40cfd7:	jmp    0x40cf80
  40cfd9:	nop    DWORD PTR [rax+0x0]
  40cfe0:	movzx  eax,WORD PTR [rdi+0xaa]
  40cfe7:	test   ax,0x7fff
  40cfeb:	je     0x40ce89
  40cff1:	add    rax,0x1
  40cff5:	lea    rdx,[rax+rax*2]
  40cff9:	lea    rdx,[rax+rdx*4]
  40cffd:	mov    rax,QWORD PTR [rdi+0x78]
  40d001:	lea    rax,[rax+rdx*8]
  40d005:	mov    rbx,QWORD PTR [rax+0x48]
  40d009:	mov    QWORD PTR [rsp+0x30],rax
  40d00e:	test   rbx,rbx
  40d011:	je     0x40ce89
  40d017:	mov    rcx,rbx
  40d01a:	call   0x4177b8
  40d01f:	lea    r8,[rax+0x1]
  40d023:	cmp    r13,r8
  40d026:	jb     0x40ce89
  40d02c:	mov    rdx,rbx
  40d02f:	mov    rcx,r12
  40d032:	call   0x417820
  40d037:	lea    rcx,[rsp+0x30]
  40d03c:	mov    r9d,ebp
  40d03f:	mov    r8,rdi
  40d042:	mov    rdx,r14
  40d045:	call   0x403760
  40d04a:	jmp    0x40ce89
  40d04f:	nop
  40d050:	mov    rcx,rdi
  40d053:	call   0x40a8a0
  40d058:	jmp    0x40cf0d
  40d05d:	nop    DWORD PTR [rax]
  40d060:	mov    rcx,rdi
  40d063:	call   0x40a8a0
  40d068:	mov    DWORD PTR [rdi+0x14],0x1
  40d06f:	mov    QWORD PTR [rdi+0x18],0x0
  40d077:	jmp    0x40cf05
  40d07c:	nop    DWORD PTR [rax+0x0]
  40d080:	push   r15
  40d082:	push   r14
  40d084:	push   r13
  40d086:	push   r12
  40d088:	push   rbp
  40d089:	push   rdi
  40d08a:	push   rsi
  40d08b:	push   rbx
  40d08c:	sub    rsp,0x68
  40d090:	mov    ebp,edx
  40d092:	mov    rdx,QWORD PTR [r8]
  40d095:	mov    rbx,rcx
  40d098:	mov    rdi,r8
  40d09b:	call   0x404c10
  40d0a0:	test   eax,eax
  40d0a2:	mov    esi,eax
  40d0a4:	jne    0x40d799
  40d0aa:	mov    eax,DWORD PTR [rbx+0x10]
  40d0ad:	test   al,0x40
  40d0af:	jne    0x40d230
  40d0b5:	or     eax,0x40
  40d0b8:	cmp    DWORD PTR [rbx],0x21fff
  40d0be:	mov    DWORD PTR [rbx+0x4],ebp
  40d0c1:	mov    QWORD PTR [rbx+0x8],rdi
  40d0c5:	mov    DWORD PTR [rbx+0x10],eax
  40d0c8:	jg     0x40d1c4
  40d0ce:	mov    rcx,rbx
  40d0d1:	call   0x40a8a0
  40d0d6:	test   eax,eax
  40d0d8:	jne    0x40d1b1
  40d0de:	movzx  eax,WORD PTR [rbx+0xaa]
  40d0e5:	test   ax,0x7fff
  40d0e9:	jne    0x40d1e0
  40d0ef:	or     DWORD PTR [rbx+0x10],0x80000
  40d0f6:	cmp    QWORD PTR [rbx+0x58],0x0
  40d0fb:	je     0x40d500
  40d101:	mov    edx,0x1
  40d106:	mov    rcx,rbx
  40d109:	call   0x40ce70
  40d10e:	xchg   ax,ax
  40d110:	mov    edx,0x2
  40d115:	mov    rcx,rbx
  40d118:	call   0x40ce70
  40d11d:	mov    eax,DWORD PTR [rbx+0x10]
  40d120:	and    eax,0xfff7ffff
  40d125:	mov    DWORD PTR [rbx+0x10],eax
  40d128:	test   ah,0x20
  40d12b:	je     0x40d14d
  40d12d:	mov    rdx,QWORD PTR [rbx+0xa0]
  40d134:	test   rdx,rdx
  40d137:	je     0x40d14d
  40d139:	mov    ecx,eax
  40d13b:	and    ecx,0x30000
  40d141:	cmp    ecx,0x10000
  40d147:	je     0x40d50f
  40d14d:	test   ah,0x8
  40d150:	jne    0x40d260
  40d156:	mov    DWORD PTR [rbx+0x14],0x1
  40d15d:	mov    QWORD PTR [rbx+0x18],0x0
  40d165:	mov    rcx,rbx
  40d168:	call   0x40a9a0
  40d16d:	test   eax,eax
  40d16f:	jne    0x40d240
  40d175:	movzx  eax,WORD PTR [rbx+0xaa]
  40d17c:	test   ax,ax
  40d17f:	je     0x40d1a1
  40d181:	cmp    ax,0x8000
  40d185:	je     0x40d1a1
  40d187:	lea    rdx,[rax+rax*2]
  40d18b:	lea    rax,[rax+rdx*4]
  40d18f:	mov    rdx,QWORD PTR [rbx+0x78]
  40d193:	lea    rax,[rdx+rax*8]
  40d197:	test   BYTE PTR [rax+0x10],0x5
  40d19b:	jne    0x40d82b
  40d1a1:	mov    esi,DWORD PTR [rbx+0x10]
  40d1a4:	test   sil,0x4
  40d1a8:	jne    0x40d370
  40d1ae:	mov    esi,DWORD PTR [rbx+0x14]
  40d1b1:	mov    eax,esi
  40d1b3:	add    rsp,0x68
  40d1b7:	pop    rbx
  40d1b8:	pop    rsi
  40d1b9:	pop    rdi
  40d1ba:	pop    rbp
  40d1bb:	pop    r12
  40d1bd:	pop    r13
  40d1bf:	pop    r14
  40d1c1:	pop    r15
  40d1c3:	ret    
  40d1c4:	mov    rax,QWORD PTR [rbx+0xd8]
  40d1cb:	mov    QWORD PTR [rip+0xb6b6],rax        # 0x418888
  40d1d2:	jmp    0x40d0ce
  40d1d7:	nop    WORD PTR [rax+rax*1+0x0]
  40d1e0:	add    rax,0x1
  40d1e4:	lea    rdx,[rax+rax*2]
  40d1e8:	lea    rdx,[rax+rdx*4]
  40d1ec:	mov    rax,QWORD PTR [rbx+0x78]
  40d1f0:	lea    rsi,[rax+rdx*8]
  40d1f4:	test   BYTE PTR [rsi+0x10],0x20
  40d1f8:	jne    0x40d250
  40d1fa:	or     DWORD PTR [rbx+0x10],0x80000
  40d201:	cmp    QWORD PTR [rbx+0x58],0x0
  40d206:	je     0x40d500
  40d20c:	mov    edx,0x1
  40d211:	mov    rcx,rbx
  40d214:	call   0x40ce70
  40d219:	test   BYTE PTR [rsi+0x10],0x20
  40d21d:	jne    0x40d110
  40d223:	mov    rcx,rbx
  40d226:	call   0x40c630
  40d22b:	jmp    0x40d110
  40d230:	mov    eax,DWORD PTR [rbx+0x14]
  40d233:	test   eax,eax
  40d235:	je     0x40d156
  40d23b:	jmp    0x40d165
  40d240:	mov    esi,DWORD PTR [rbx+0x4]
  40d243:	jmp    0x40d1b1
  40d248:	nop    DWORD PTR [rax+rax*1+0x0]
  40d250:	mov    eax,DWORD PTR [rbx+0x10]
  40d253:	jmp    0x40d128
  40d258:	nop    DWORD PTR [rax+rax*1+0x0]
  40d260:	lea    rcx,[rip+0xcb52]        # 0x419db9
  40d267:	mov    QWORD PTR [rsp+0x40],0x0
  40d270:	mov    QWORD PTR [rsp+0x48],0x0
  40d279:	mov    DWORD PTR [rsp+0x50],0x4
  40d281:	mov    DWORD PTR [rsp+0x54],0x0
  40d289:	call   0x417840
  40d28e:	test   rax,rax
  40d291:	jne    0x40d156
  40d297:	test   BYTE PTR [rbx+0x10],0x3
  40d29b:	je     0x40d156
  40d2a1:	mov    ecx,DWORD PTR [rbx+0x4]
  40d2a4:	shl    rcx,0x3
  40d2a8:	call   0x4038d0
  40d2ad:	test   rax,rax
  40d2b0:	mov    r12,rax
  40d2b3:	je     0x40d6ff
  40d2b9:	mov    ecx,DWORD PTR [rbx+0x4]
  40d2bc:	shl    rcx,0x3
  40d2c0:	call   0x4038d0
  40d2c5:	test   rax,rax
  40d2c8:	mov    rbp,rax
  40d2cb:	je     0x40d6f7
  40d2d1:	lea    r13,[rsp+0x40]
  40d2d6:	mov    r8d,DWORD PTR [rbx+0x4]
  40d2da:	mov    DWORD PTR [rbx+0x14],0x1
  40d2e1:	mov    QWORD PTR [rbx+0x18],0x0
  40d2e9:	mov    eax,0x1
  40d2ee:	xor    edi,edi
  40d2f0:	lea    rcx,[r13+0x14]
  40d2f4:	xor    esi,esi
  40d2f6:	mov    QWORD PTR [rsp+0x38],rcx
  40d2fb:	cmp    r8d,eax
  40d2fe:	jbe    0x40d329
  40d300:	mov    rcx,QWORD PTR [rbx+0x8]
  40d304:	mov    edx,eax
  40d306:	mov    r14,QWORD PTR [rcx+rdx*8]
  40d30a:	cmp    BYTE PTR [r14],0x2d
  40d30e:	je     0x40d55e
  40d314:	add    eax,0x1
  40d317:	mov    edx,esi
  40d319:	add    esi,0x1
  40d31c:	cmp    r8d,eax
  40d31f:	mov    DWORD PTR [rbx+0x14],eax
  40d322:	mov    QWORD PTR [rbp+rdx*8+0x0],r14
  40d327:	ja     0x40d300
  40d329:	call   QWORD PTR [rip+0x162e9]        # 0x423618
  40d32f:	mov    DWORD PTR [rax],0x0
  40d335:	test   edi,edi
  40d337:	jne    0x40d77d
  40d33d:	test   esi,esi
  40d33f:	je     0x40d359
  40d341:	mov    rax,QWORD PTR [rbx+0x8]
  40d345:	mov    r8d,esi
  40d348:	mov    rdx,rbp
  40d34b:	shl    r8,0x3
  40d34f:	lea    rcx,[rax+rdi*8+0x8]
  40d354:	call   0x417820
  40d359:	mov    rcx,r12
  40d35c:	call   0x417860
  40d361:	mov    rcx,rbp
  40d364:	call   0x417860
  40d369:	jmp    0x40d156
  40d36e:	xchg   ax,ax
  40d370:	mov    r9,QWORD PTR [rbx+0x78]
  40d374:	mov    r10d,DWORD PTR [rbx+0xb4]
  40d37b:	mov    rcx,r9
  40d37e:	jmp    0x40d3a8
  40d380:	movzx  eax,WORD PTR [rcx+0x8]
  40d384:	cmp    ax,0x8000
  40d388:	je     0x40d453
  40d38e:	cmp    ax,WORD PTR [rcx]
  40d391:	je     0x40d453
  40d397:	sub    r10d,0x1
  40d39b:	test   r10d,r10d
  40d39e:	jle    0x40d521
  40d3a4:	add    rcx,0x68
  40d3a8:	mov    r11d,DWORD PTR [rcx+0x10]
  40d3ac:	test   r11b,0x5
  40d3b0:	je     0x40d380
  40d3b2:	mov    rdx,QWORD PTR [rcx+0x28]
  40d3b6:	test   rdx,rdx
  40d3b9:	jne    0x40d3da
  40d3bb:	jmp    0x40d3e4
  40d3bd:	nop    DWORD PTR [rax]
  40d3c0:	lea    r8,[rax+rax*2]
  40d3c4:	add    rdx,0x4
  40d3c8:	lea    rax,[rax+r8*4]
  40d3cc:	lea    rax,[r9+rax*8]
  40d3d0:	test   BYTE PTR [rax+0x10],0xf
  40d3d4:	je     0x40d4b0
  40d3da:	movsxd rax,DWORD PTR [rdx]
  40d3dd:	cmp    eax,0x8000
  40d3e2:	jne    0x40d3c0
  40d3e4:	mov    rdx,QWORD PTR [rcx+0x30]
  40d3e8:	test   rdx,rdx
  40d3eb:	je     0x40d380
  40d3ed:	nop    DWORD PTR [rax]
  40d3f0:	movsxd rax,DWORD PTR [rdx]
  40d3f3:	cmp    eax,0x8000
  40d3f8:	je     0x40d380
  40d3fa:	lea    r8,[rax+rax*2]
  40d3fe:	add    rdx,0x4
  40d402:	lea    rax,[rax+r8*4]
  40d406:	lea    rax,[r9+rax*8]
  40d40a:	test   BYTE PTR [rax+0x10],0x5
  40d40e:	je     0x40d3f0
  40d410:	mov    r12,QWORD PTR [rax+0x50]
  40d414:	mov    rbp,QWORD PTR [rcx+0x50]
  40d418:	mov    rdi,QWORD PTR [rbx+0x28]
  40d41c:	mov    rsi,QWORD PTR [rip+0xb575]        # 0x418998
  40d423:	call   QWORD PTR [rip+0x161a7]        # 0x4235d0
  40d429:	lea    rcx,[rax+0x60]
  40d42d:	mov    QWORD PTR [rsp+0x20],r12
  40d432:	mov    r9,rbp
  40d435:	mov    r8,rdi
  40d438:	mov    rdx,rsi
  40d43b:	call   0x401a90
  40d440:	mov    edx,0x1
  40d445:	mov    rcx,rbx
  40d448:	call   QWORD PTR [rbx+0x98]
  40d44e:	jmp    0x40d1ae
  40d453:	movzx  edi,WORD PTR [rcx+0xa]
  40d457:	cmp    WORD PTR [rcx+0xe],di
  40d45b:	jae    0x40d397
  40d461:	test   r11d,0x100000
  40d468:	je     0x40d474
  40d46a:	and    r11d,0x3
  40d46e:	jne    0x40d397
  40d474:	cmp    di,0x1
  40d478:	jbe    0x40d4d0
  40d47a:	mov    r12,QWORD PTR [rcx+0x50]
  40d47e:	mov    rbp,QWORD PTR [rbx+0x28]
  40d482:	mov    rsi,QWORD PTR [rip+0xb5c7]        # 0x418a50
  40d489:	call   QWORD PTR [rip+0x16141]        # 0x4235d0
  40d48f:	lea    rcx,[rax+0x60]
  40d493:	mov    DWORD PTR [rsp+0x20],edi
  40d497:	mov    r9,r12
  40d49a:	mov    r8,rbp
  40d49d:	mov    rdx,rsi
  40d4a0:	call   0x401a90
  40d4a5:	jmp    0x40d440
  40d4a7:	nop    WORD PTR [rax+rax*1+0x0]
  40d4b0:	mov    r12,QWORD PTR [rax+0x50]
  40d4b4:	mov    rbp,QWORD PTR [rcx+0x50]
  40d4b8:	mov    rdi,QWORD PTR [rbx+0x28]
  40d4bc:	mov    rsi,QWORD PTR [rip+0xb5d5]        # 0x418a98
  40d4c3:	jmp    0x40d423
  40d4c8:	nop    DWORD PTR [rax+rax*1+0x0]
  40d4d0:	mov    rbp,QWORD PTR [rcx+0x50]
  40d4d4:	mov    rdi,QWORD PTR [rbx+0x28]
  40d4d8:	mov    rsi,QWORD PTR [rip+0xb511]        # 0x4189f0
  40d4df:	call   QWORD PTR [rip+0x160eb]        # 0x4235d0
  40d4e5:	lea    rcx,[rax+0x60]
  40d4e9:	mov    r9,rbp
  40d4ec:	mov    r8,rdi
  40d4ef:	mov    rdx,rsi
  40d4f2:	call   0x401a90
  40d4f7:	jmp    0x40d440
  40d4fc:	nop    DWORD PTR [rax+0x0]
  40d500:	xor    edx,edx
  40d502:	mov    rcx,rbx
  40d505:	call   0x40ce70
  40d50a:	jmp    0x40d11d
  40d50f:	and    eax,0xfffeffff
  40d514:	mov    DWORD PTR [rbx+0x10],eax
  40d517:	call   rdx
  40d519:	mov    eax,DWORD PTR [rbx+0x10]
  40d51c:	jmp    0x40d14d
  40d521:	test   esi,0x200
  40d527:	je     0x40d5da
  40d52d:	mov    esi,DWORD PTR [rbx+0x14]
  40d530:	cmp    DWORD PTR [rbx+0x4],esi
  40d533:	jbe    0x40d1b1
  40d539:	mov    rdi,QWORD PTR [rbx+0x28]
  40d53d:	mov    rsi,QWORD PTR [rip+0xb4bc]        # 0x418a00
  40d544:	call   QWORD PTR [rip+0x16086]        # 0x4235d0
  40d54a:	lea    rcx,[rax+0x60]
  40d54e:	mov    r8,rdi
  40d551:	mov    rdx,rsi
  40d554:	call   0x401a90
  40d559:	jmp    0x40d440
  40d55e:	movzx  edx,BYTE PTR [r14+0x1]
  40d563:	test   dl,dl
  40d565:	je     0x40d314
  40d56b:	cmp    dl,0x2d
  40d56e:	jne    0x40d660
  40d574:	cmp    BYTE PTR [r14+0x2],0x0
  40d579:	je     0x40d83a
  40d57f:	lea    rdx,[r14+0x2]
  40d583:	mov    r8,r13
  40d586:	mov    rcx,rbx
  40d589:	call   0x40a2e0
  40d58e:	test   eax,eax
  40d590:	js     0x40d76c
  40d596:	mov    r8d,DWORD PTR [rbx+0x14]
  40d59a:	mov    rcx,QWORD PTR [rbx+0x8]
  40d59e:	lea    r15d,[rdi+0x1]
  40d5a2:	lea    eax,[r8+0x1]
  40d5a6:	mov    rdx,r8
  40d5a9:	mov    r8,QWORD PTR [rcx+r8*8]
  40d5ad:	mov    ecx,edi
  40d5af:	mov    DWORD PTR [rbx+0x14],eax
  40d5b2:	mov    QWORD PTR [r12+rcx*8],r8
  40d5b6:	mov    rcx,QWORD PTR [rsp+0x40]
  40d5bb:	mov    ecx,DWORD PTR [rcx+0x10]
  40d5be:	test   ch,0xf0
  40d5c1:	jne    0x40d602
  40d5c3:	cmp    DWORD PTR [rsp+0x54],0x1
  40d5c8:	je     0x40d710
  40d5ce:	mov    r8d,DWORD PTR [rbx+0x4]
  40d5d2:	mov    edi,r15d
  40d5d5:	jmp    0x40d2fb
  40d5da:	and    esi,0x400
  40d5e0:	je     0x40d1ae
  40d5e6:	mov    esi,DWORD PTR [rbx+0x14]
  40d5e9:	cmp    DWORD PTR [rbx+0x4],esi
  40d5ec:	ja     0x40d1b1
  40d5f2:	mov    rdi,QWORD PTR [rbx+0x28]
  40d5f6:	mov    rsi,QWORD PTR [rip+0xb373]        # 0x418970
  40d5fd:	jmp    0x40d544
  40d602:	and    ecx,0x10000
  40d608:	mov    r8,QWORD PTR [rsp+0x48]
  40d60d:	mov    ecx,DWORD PTR [rsp+0x54]
  40d611:	je     0x40d68f
  40d613:	cmp    ecx,0x1
  40d616:	je     0x40d6db
  40d61c:	cmp    ecx,0x2
  40d61f:	jne    0x40d6ca
  40d625:	test   r8,r8
  40d628:	jne    0x40d5ce
  40d62a:	mov    r8d,DWORD PTR [rbx+0x4]
  40d62e:	cmp    eax,r8d
  40d631:	jae    0x40d817
  40d637:	mov    r9,QWORD PTR [rbx+0x8]
  40d63b:	mov    ecx,eax
  40d63d:	mov    rcx,QWORD PTR [r9+rcx*8]
  40d641:	cmp    BYTE PTR [rcx],0x2d
  40d644:	je     0x40d5d2
  40d646:	lea    eax,[rdx+0x2]
  40d649:	mov    r10d,r15d
  40d64c:	lea    r15d,[rdi+0x2]
  40d650:	mov    DWORD PTR [rbx+0x14],eax
  40d653:	mov    QWORD PTR [r12+r10*8],rcx
  40d657:	jmp    0x40d5d2
  40d65c:	nop    DWORD PTR [rax+0x0]
  40d660:	test   BYTE PTR [rbx+0x10],0x2
  40d664:	jne    0x40d67a
  40d666:	lea    rdx,[r14+0x1]
  40d66a:	mov    r8,r13
  40d66d:	mov    rcx,rbx
  40d670:	call   0x40a2e0
  40d675:	jmp    0x40d58e
  40d67a:	mov    r9,QWORD PTR [rsp+0x38]
  40d67f:	mov    r8,r13
  40d682:	mov    rcx,rbx
  40d685:	call   0x403090
  40d68a:	jmp    0x40d58e
  40d68f:	cmp    ecx,0x1
  40d692:	je     0x40d6eb
  40d694:	cmp    ecx,0x2
  40d697:	jne    0x40d6ca
  40d699:	test   r8,r8
  40d69c:	jne    0x40d5ce
  40d6a2:	mov    r8d,DWORD PTR [rbx+0x4]
  40d6a6:	cmp    eax,r8d
  40d6a9:	jae    0x40d6ca
  40d6ab:	mov    rcx,QWORD PTR [rbx+0x8]
  40d6af:	add    edx,0x2
  40d6b2:	mov    r10d,r15d
  40d6b5:	mov    DWORD PTR [rbx+0x14],edx
  40d6b8:	add    edi,0x2
  40d6bb:	mov    rax,QWORD PTR [rcx+rax*8]
  40d6bf:	mov    QWORD PTR [r12+r10*8],rax
  40d6c3:	mov    eax,edx
  40d6c5:	jmp    0x40d2fb
  40d6ca:	call   QWORD PTR [rip+0x15f48]        # 0x423618
  40d6d0:	mov    DWORD PTR [rax],0x5
  40d6d6:	jmp    0x40d359
  40d6db:	cmp    BYTE PTR [r14+0x2],0x0
  40d6e0:	je     0x40d62a
  40d6e6:	jmp    0x40d5ce
  40d6eb:	cmp    BYTE PTR [r14+0x2],0x0
  40d6f0:	je     0x40d6a2
  40d6f2:	jmp    0x40d5ce
  40d6f7:	mov    rcx,r12
  40d6fa:	call   0x417860
  40d6ff:	call   QWORD PTR [rip+0x15f13]        # 0x423618
  40d705:	mov    DWORD PTR [rax],0xc
  40d70b:	jmp    0x40d156
  40d710:	movzx  eax,BYTE PTR [r14+0x2]
  40d715:	lea    r11,[r14+0x2]
  40d719:	lea    r14,[r13+0x14]
  40d71d:	test   al,al
  40d71f:	jne    0x40d752
  40d721:	jmp    0x40d80f
  40d726:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d730:	mov    rax,QWORD PTR [rsp+0x40]
  40d735:	mov    r11,QWORD PTR [rsp+0x30]
  40d73a:	mov    eax,DWORD PTR [rax+0x10]
  40d73d:	test   ah,0xf0
  40d740:	jne    0x40d7a5
  40d742:	add    r11,0x1
  40d746:	movzx  eax,BYTE PTR [r11]
  40d74a:	test   al,al
  40d74c:	je     0x40d80f
  40d752:	movzx  edx,al
  40d755:	mov    r9,r14
  40d758:	mov    r8,r13
  40d75b:	mov    rcx,rbx
  40d75e:	mov    QWORD PTR [rsp+0x30],r11
  40d763:	call   0x403090
  40d768:	test   eax,eax
  40d76a:	jns    0x40d730
  40d76c:	call   QWORD PTR [rip+0x15ea6]        # 0x423618
  40d772:	mov    DWORD PTR [rax],0x16
  40d778:	jmp    0x40d359
  40d77d:	mov    rax,QWORD PTR [rbx+0x8]
  40d781:	mov    r8d,edi
  40d784:	mov    rdx,r12
  40d787:	shl    r8,0x3
  40d78b:	lea    rcx,[rax+0x8]
  40d78f:	call   0x417820
  40d794:	jmp    0x40d33d
  40d799:	mov    rcx,QWORD PTR [rip+0xb198]        # 0x418938
  40d7a0:	call   0x401f00
  40d7a5:	test   eax,0x10000
  40d7aa:	je     0x40d7e3
  40d7ac:	cmp    BYTE PTR [r11+0x1],0x0
  40d7b1:	jne    0x40d80f
  40d7b3:	mov    ecx,DWORD PTR [rbx+0x14]
  40d7b6:	mov    rdx,QWORD PTR [rbx+0x8]
  40d7ba:	mov    rdx,QWORD PTR [rdx+rcx*8]
  40d7be:	mov    rax,rcx
  40d7c1:	cmp    BYTE PTR [rdx],0x2d
  40d7c4:	je     0x40d5ce
  40d7ca:	add    eax,0x1
  40d7cd:	mov    r10d,r15d
  40d7d0:	lea    r15d,[rdi+0x2]
  40d7d4:	mov    DWORD PTR [rbx+0x14],eax
  40d7d7:	mov    QWORD PTR [r12+r10*8],rdx
  40d7db:	mov    eax,DWORD PTR [rbx+0x14]
  40d7de:	jmp    0x40d5ce
  40d7e3:	cmp    BYTE PTR [r11+0x1],0x0
  40d7e8:	jne    0x40d80f
  40d7ea:	mov    eax,DWORD PTR [rbx+0x14]
  40d7ed:	cmp    eax,DWORD PTR [rbx+0x4]
  40d7f0:	jae    0x40d76c
  40d7f6:	mov    rdx,QWORD PTR [rbx+0x8]
  40d7fa:	lea    ecx,[rax+0x1]
  40d7fd:	mov    r10d,r15d
  40d800:	lea    r15d,[rdi+0x2]
  40d804:	mov    DWORD PTR [rbx+0x14],ecx
  40d807:	mov    rax,QWORD PTR [rdx+rax*8]
  40d80b:	mov    QWORD PTR [r12+r10*8],rax
  40d80f:	mov    eax,DWORD PTR [rbx+0x14]
  40d812:	jmp    0x40d5ce
  40d817:	call   QWORD PTR [rip+0x15dfb]        # 0x423618
  40d81d:	mov    edi,r15d
  40d820:	mov    DWORD PTR [rax],0x0
  40d826:	jmp    0x40d335
  40d82b:	mov    rcx,rbx
  40d82e:	call   0x409dd0
  40d833:	xor    ecx,ecx
  40d835:	call   0x401ed0
  40d83a:	lea    ecx,[rax+0x1]
  40d83d:	mov    edx,edi
  40d83f:	add    edi,0x1
  40d842:	mov    r9d,esi
  40d845:	cmp    ecx,r8d
  40d848:	mov    DWORD PTR [rbx+0x14],ecx
  40d84b:	mov    QWORD PTR [r12+rdx*8],r14
  40d84f:	mov    edx,ecx
  40d851:	jae    0x40d335
  40d857:	mov    r10,QWORD PTR [rbx+0x8]
  40d85b:	mov    r11d,edx
  40d85e:	add    edx,0x1
  40d861:	mov    r11,QWORD PTR [r10+r11*8]
  40d865:	mov    r10d,esi
  40d868:	add    esi,0x1
  40d86b:	cmp    edx,r8d
  40d86e:	mov    QWORD PTR [rbp+r10*8+0x0],r11
  40d873:	jne    0x40d857
  40d875:	lea    esi,[rdx+r9*1-0x1]
  40d87a:	lea    edx,[rdx+rcx*1-0x1]
  40d87e:	sub    edx,eax
  40d880:	sub    esi,eax
  40d882:	mov    DWORD PTR [rbx+0x14],edx
  40d885:	jmp    0x40d335
  40d88a:	nop    WORD PTR [rax+rax*1+0x0]
  40d890:	push   rsi
  40d891:	push   rbx
  40d892:	sub    rsp,0x38
  40d896:	mov    rbx,rcx
  40d899:	lea    rcx,[rcx+0x10]
  40d89d:	mov    esi,edx
  40d89f:	xor    edx,edx
  40d8a1:	mov    QWORD PTR [rsp+0x28],0x0
  40d8aa:	call   0x40b2b0
  40d8af:	test   esi,esi
  40d8b1:	mov    ecx,DWORD PTR [rbx+0x10]
  40d8b4:	je     0x40d8c2
  40d8b6:	test   ch,0x40
  40d8b9:	je     0x40d8c2
  40d8bb:	add    rsp,0x38
  40d8bf:	pop    rbx
  40d8c0:	pop    rsi
  40d8c1:	ret    
  40d8c2:	test   ch,0x10
  40d8c5:	lea    rdx,[rsp+0x28]
  40d8ca:	jne    0x40d930
  40d8cc:	call   0x4028e0
  40d8d1:	mov    r8,QWORD PTR [rsp+0x28]
  40d8d6:	mov    edx,esi
  40d8d8:	mov    rcx,rbx
  40d8db:	call   0x4054c0
  40d8e0:	mov    rcx,QWORD PTR [rip+0x13761]        # 0x421048
  40d8e7:	call   0x417898
  40d8ec:	mov    rcx,QWORD PTR [rip+0x13755]        # 0x421048
  40d8f3:	call   0x4178a0
  40d8f8:	test   eax,eax
  40d8fa:	je     0x40d8bb
  40d8fc:	call   QWORD PTR [rip+0x15cce]        # 0x4235d0
  40d902:	add    rax,0x60
  40d906:	cmp    QWORD PTR [rip+0x1373b],rax        # 0x421048
  40d90d:	mov    r8,QWORD PTR [rip+0xb164]        # 0x418a78
  40d914:	cmove  r8,QWORD PTR [rip+0xb164]        # 0x418a80
  40d91c:	mov    rcx,QWORD PTR [rbx+0x28]
  40d920:	mov    rdx,QWORD PTR [rip+0xb161]        # 0x418a88
  40d927:	call   0x402450
  40d92c:	nop    DWORD PTR [rax+0x0]
  40d930:	call   0x4027a0
  40d935:	jmp    0x40d8d1
  40d937:	nop    WORD PTR [rax+rax*1+0x0]
  40d940:	push   r15
  40d942:	push   r14
  40d944:	push   r13
  40d946:	push   r12
  40d948:	push   rbp
  40d949:	push   rdi
  40d94a:	push   rsi
  40d94b:	push   rbx
  40d94c:	sub    rsp,0x28
  40d950:	mov    rbx,rcx
  40d953:	mov    esi,edx
  40d955:	mov    r12,r8
  40d958:	call   0x4177b8
  40d95d:	cmp    rax,0xff
  40d963:	mov    rbp,rax
  40d966:	jbe    0x40da55
  40d96c:	test   sil,sil
  40d96f:	jne    0x40da55
  40d975:	mov    rcx,rbx
  40d978:	call   0x403640
  40d97d:	mov    rdi,QWORD PTR [rip+0x15d9c]        # 0x423720
  40d984:	mov    r13,rax
  40d987:	mov    rsi,rax
  40d98a:	mov    r14,rsi
  40d98d:	nop    DWORD PTR [rax]
  40d990:	mov    edx,0xa
  40d995:	mov    rcx,r14
  40d998:	call   0x4177e0
  40d99d:	test   rax,rax
  40d9a0:	mov    rbx,rax
  40d9a3:	je     0x40da30
  40d9a9:	sub    rax,rsi
  40d9ac:	lea    r14,[rbx+0x1]
  40d9b0:	cmp    rax,0x27
  40d9b4:	jle    0x40d990
  40d9b6:	movsx  ecx,BYTE PTR [rbx+0x1]
  40d9ba:	mov    r15d,ecx
  40d9bd:	call   rdi
  40d9bf:	test   eax,eax
  40d9c1:	je     0x40d990
  40d9c3:	cmp    r15b,0x9
  40d9c7:	je     0x40d990
  40d9c9:	cmp    r15b,0xa
  40d9cd:	je     0x40d9f3
  40d9cf:	cmp    r15b,0x20
  40d9d3:	jne    0x40da01
  40d9d5:	add    rbx,0x8
  40d9d9:	mov    rdx,r14
  40d9dc:	nop    DWORD PTR [rax+0x0]
  40d9e0:	add    rdx,0x1
  40d9e4:	cmp    BYTE PTR [rdx],0x20
  40d9e7:	jne    0x40da01
  40d9e9:	cmp    rdx,rbx
  40d9ec:	jne    0x40d9e0
  40d9ee:	mov    r14,rdx
  40d9f1:	jmp    0x40d990
  40d9f3:	add    r14,0x1
  40d9f7:	movzx  r15d,BYTE PTR [r14]
  40d9fb:	cmp    r15b,0xa
  40d9ff:	je     0x40d9f3
  40da01:	xor    edx,edx
  40da03:	mov    rcx,rsi
  40da06:	mov    BYTE PTR [r14],0x0
  40da0a:	mov    r8,r12
  40da0d:	sub    rsi,r14
  40da10:	call   0x4095b0
  40da15:	add    rbp,rsi
  40da18:	je     0x40da3d
  40da1a:	cmp    rbp,0xff
  40da21:	mov    BYTE PTR [r14],r15b
  40da24:	mov    rsi,r14
  40da27:	ja     0x40d98a
  40da2d:	nop    DWORD PTR [rax]
  40da30:	mov    r8,r12
  40da33:	xor    edx,edx
  40da35:	mov    rcx,rsi
  40da38:	call   0x4095b0
  40da3d:	mov    rcx,r13
  40da40:	add    rsp,0x28
  40da44:	pop    rbx
  40da45:	pop    rsi
  40da46:	pop    rdi
  40da47:	pop    rbp
  40da48:	pop    r12
  40da4a:	pop    r13
  40da4c:	pop    r14
  40da4e:	pop    r15
  40da50:	jmp    0x417860
  40da55:	movzx  edx,sil
  40da59:	mov    r8,r12
  40da5c:	mov    rcx,rbx
  40da5f:	add    rsp,0x28
  40da63:	pop    rbx
  40da64:	pop    rsi
  40da65:	pop    rdi
  40da66:	pop    rbp
  40da67:	pop    r12
  40da69:	pop    r13
  40da6b:	pop    r14
  40da6d:	pop    r15
  40da6f:	jmp    0x4095b0
  40da74:	xchg   ax,ax
  40da76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40da80:	push   rbp
  40da81:	push   rdi
  40da82:	push   rsi
  40da83:	push   rbx
  40da84:	sub    rsp,0x58
  40da88:	mov    BYTE PTR [rip+0x13611],0x0        # 0x4210a0
  40da8f:	mov    ebp,edx
  40da91:	xor    edx,edx
  40da93:	mov    rbx,rcx
  40da96:	cmp    ebp,0x2750
  40da9c:	lea    rcx,[rcx+0x10]
  40daa0:	je     0x40dae4
  40daa2:	call   0x40b2b0
  40daa7:	test   ebp,ebp
  40daa9:	je     0x40dae9
  40daab:	cmp    DWORD PTR [rbx],0x1dfff
  40dab1:	jle    0x40dd06
  40dab7:	cmp    QWORD PTR [rip+0x13589],0x0        # 0x421048
  40dabf:	mov    rcx,QWORD PTR [rbx+0xc0]
  40dac6:	je     0x40dfae
  40dacc:	test   rcx,rcx
  40dacf:	mov    eax,DWORD PTR [rbx+0x10]
  40dad2:	je     0x40dd14
  40dad8:	test   eax,0x100000
  40dadd:	je     0x40db1f
  40dadf:	jmp    0x40dd14
  40dae4:	call   0x40b2b0
  40dae9:	cmp    DWORD PTR [rbx],0x1dfff
  40daef:	jle    0x40db89
  40daf5:	cmp    QWORD PTR [rip+0x1354b],0x0        # 0x421048
  40dafd:	mov    rcx,QWORD PTR [rbx+0xb8]
  40db04:	je     0x40def7
  40db0a:	test   rcx,rcx
  40db0d:	mov    eax,DWORD PTR [rbx+0x10]
  40db10:	je     0x40db97
  40db16:	test   eax,0x100000
  40db1b:	jne    0x40db97
  40db1d:	xor    ebp,ebp
  40db1f:	test   ah,0x20
  40db22:	je     0x40ddde
  40db28:	mov    r8,QWORD PTR [rip+0x13519]        # 0x421048
  40db2f:	mov    edx,0x1
  40db34:	call   0x40d940
  40db39:	mov    rcx,QWORD PTR [rip+0x13508]        # 0x421048
  40db40:	call   0x417898
  40db45:	mov    rcx,QWORD PTR [rip+0x134fc]        # 0x421048
  40db4c:	call   0x4178a0
  40db51:	test   eax,eax
  40db53:	je     0x40ddd7
  40db59:	call   QWORD PTR [rip+0x15a71]        # 0x4235d0
  40db5f:	add    rax,0x30
  40db63:	cmp    QWORD PTR [rip+0x134de],rax        # 0x421048
  40db6a:	mov    r8,QWORD PTR [rip+0xaf0f]        # 0x418a80
  40db71:	cmove  r8,QWORD PTR [rip+0xaeff]        # 0x418a78
  40db79:	mov    rcx,QWORD PTR [rbx+0x28]
  40db7d:	mov    rdx,QWORD PTR [rip+0xaf04]        # 0x418a88
  40db84:	call   0x402450
  40db89:	cmp    QWORD PTR [rip+0x134b7],0x0        # 0x421048
  40db91:	je     0x40def5
  40db97:	mov    rcx,QWORD PTR [rip+0x134aa]        # 0x421048
  40db9e:	mov    rdx,QWORD PTR [rbx+0x60]
  40dba2:	xor    edi,edi
  40dba4:	mov    r8,QWORD PTR [rbx+0x28]
  40dba8:	call   0x401a90
  40dbad:	mov    ecx,DWORD PTR [rbx+0x10]
  40dbb0:	test   ch,0x10
  40dbb3:	mov    QWORD PTR [rsp+0x30],0x0
  40dbbc:	lea    rdx,[rsp+0x30]
  40dbc1:	jne    0x40ddef
  40dbc7:	call   0x4028e0
  40dbcc:	lea    rdx,[rip+0xd04e]        # 0x41ac21
  40dbd3:	lea    rcx,[rip+0x134e6]        # 0x4210c0
  40dbda:	mov    r8d,eax
  40dbdd:	mov    esi,eax
  40dbdf:	call   0x402470
  40dbe4:	test   ebp,ebp
  40dbe6:	jne    0x40dbf2
  40dbe8:	mov    rax,QWORD PTR [rbx+0x78]
  40dbec:	test   BYTE PTR [rax+0x12],0x20
  40dbf0:	jne    0x40dc03
  40dbf2:	mov    rdx,QWORD PTR [rip+0x1344f]        # 0x421048
  40dbf9:	mov    rcx,QWORD PTR [rsp+0x30]
  40dbfe:	call   0x417870
  40dc03:	lea    eax,[rsi+0xf]
  40dc06:	mov    ecx,0x8
  40dc0b:	cdq    
  40dc0c:	idiv   ecx
  40dc0e:	neg    eax
  40dc10:	add    eax,0x4
  40dc13:	test   eax,eax
  40dc15:	jle    0x40dc1d
  40dc17:	mov    DWORD PTR [rip+0x13453],eax        # 0x421070
  40dc1d:	mov    r8,QWORD PTR [rsp+0x30]
  40dc22:	mov    edx,ebp
  40dc24:	mov    rcx,rbx
  40dc27:	call   0x4054c0
  40dc2c:	mov    eax,DWORD PTR [rbx+0x10]
  40dc2f:	mov    edx,eax
  40dc31:	and    edx,0x3
  40dc34:	cmp    edx,0x1
  40dc37:	je     0x40deda
  40dc3d:	jb     0x40debf
  40dc43:	cmp    edx,0x3
  40dc46:	jne    0x40dc5e
  40dc48:	mov    rdx,QWORD PTR [rip+0x133f9]        # 0x421048
  40dc4f:	mov    rcx,QWORD PTR [rip+0xaeaa]        # 0x418b00
  40dc56:	call   0x417870
  40dc5b:	mov    eax,DWORD PTR [rbx+0x10]
  40dc5e:	test   al,0x20
  40dc60:	jne    0x40de62
  40dc66:	test   ah,0x8
  40dc69:	jne    0x40de4a
  40dc6f:	mov    rcx,QWORD PTR [rbx+0x68]
  40dc73:	test   rcx,rcx
  40dc76:	je     0x40dc84
  40dc78:	mov    rdx,QWORD PTR [rip+0x133c9]        # 0x421048
  40dc7f:	call   0x417870
  40dc84:	test   ebp,ebp
  40dc86:	je     0x40de7d
  40dc8c:	cmp    DWORD PTR [rbx],0x21fff
  40dc92:	jle    0x40de22
  40dc98:	mov    rcx,QWORD PTR [rbx+0xe0]
  40dc9f:	test   rcx,rcx
  40dca2:	je     0x40de22
  40dca8:	mov    rdx,QWORD PTR [rip+0x13399]        # 0x421048
  40dcaf:	call   0x417870
  40dcb4:	mov    rcx,QWORD PTR [rip+0x1338d]        # 0x421048
  40dcbb:	mov    ebp,edi
  40dcbd:	call   0x417898
  40dcc2:	mov    rcx,QWORD PTR [rip+0x1337f]        # 0x421048
  40dcc9:	call   0x4178a0
  40dcce:	test   eax,eax
  40dcd0:	je     0x40db39
  40dcd6:	call   QWORD PTR [rip+0x158f4]        # 0x4235d0
  40dcdc:	add    rax,0x60
  40dce0:	cmp    QWORD PTR [rip+0x13361],rax        # 0x421048
  40dce7:	mov    r8,QWORD PTR [rip+0xad8a]        # 0x418a78
  40dcee:	cmove  r8,QWORD PTR [rip+0xad8a]        # 0x418a80
  40dcf6:	mov    rcx,QWORD PTR [rbx+0x28]
  40dcfa:	mov    rdx,QWORD PTR [rip+0xad87]        # 0x418a88
  40dd01:	call   0x402450
  40dd06:	cmp    QWORD PTR [rip+0x1333a],0x0        # 0x421048
  40dd0e:	je     0x40dfac
  40dd14:	mov    rcx,QWORD PTR [rip+0x1332d]        # 0x421048
  40dd1b:	mov    rdx,QWORD PTR [rbx+0x60]
  40dd1f:	mov    edi,ebp
  40dd21:	mov    r8,QWORD PTR [rbx+0x28]
  40dd25:	call   0x401a90
  40dd2a:	mov    ecx,DWORD PTR [rbx+0x10]
  40dd2d:	test   ch,0x40
  40dd30:	je     0x40dbb0
  40dd36:	cmp    DWORD PTR [rbx],0x25fff
  40dd3c:	jle    0x40df20
  40dd42:	movsxd rax,DWORD PTR [rbx+0xb4]
  40dd49:	mov    r8,rax
  40dd4c:	imul   rax,rax,0x68
  40dd50:	add    rax,QWORD PTR [rbx+0x78]
  40dd54:	cmp    DWORD PTR [rax+0x14],0x3
  40dd58:	je     0x40dd93
  40dd5a:	mov    edx,DWORD PTR [rbx+0xb0]
  40dd60:	lea    r9d,[r8+0x1]
  40dd64:	cmp    r9d,edx
  40dd67:	jge    0x40e0bf
  40dd6d:	sub    edx,0x2
  40dd70:	sub    edx,r8d
  40dd73:	add    rdx,0x1
  40dd77:	imul   rdx,rdx,0x68
  40dd7b:	add    rdx,rax
  40dd7e:	jmp    0x40dd89
  40dd80:	cmp    rax,rdx
  40dd83:	je     0x40e0bf
  40dd89:	add    rax,0x68
  40dd8d:	cmp    DWORD PTR [rax+0x14],0x3
  40dd91:	jne    0x40dd80
  40dd93:	and    ecx,0x3
  40dd96:	cmp    ecx,0x2
  40dd99:	je     0x40e0a3
  40dd9f:	cmp    ecx,0x3
  40dda2:	je     0x40e071
  40dda8:	sub    ecx,0x1
  40ddab:	je     0x40e071
  40ddb1:	lea    r9,[rsp+0x30]
  40ddb6:	mov    rdx,QWORD PTR [rax+0x50]
  40ddba:	mov    r8d,0x14
  40ddc0:	mov    rcx,r9
  40ddc3:	mov    QWORD PTR [rsp+0x28],r9
  40ddc8:	call   0x4177a8
  40ddcd:	mov    r9,QWORD PTR [rsp+0x28]
  40ddd2:	jmp    0x40df50
  40ddd7:	mov    ecx,ebp
  40ddd9:	call   0x401ed0
  40ddde:	mov    rdx,QWORD PTR [rip+0x13263]        # 0x421048
  40dde5:	call   0x417870
  40ddea:	jmp    0x40db39
  40ddef:	call   0x4027a0
  40ddf4:	lea    rdx,[rip+0xce26]        # 0x41ac21
  40ddfb:	lea    rcx,[rip+0x132be]        # 0x4210c0
  40de02:	mov    r8d,eax
  40de05:	mov    esi,eax
  40de07:	call   0x402470
  40de0c:	mov    rdx,QWORD PTR [rip+0x13235]        # 0x421048
  40de13:	mov    ecx,0xa
  40de18:	call   0x417878
  40de1d:	jmp    0x40dc03
  40de22:	mov    r8,QWORD PTR [rbx+0x80]
  40de29:	test   r8,r8
  40de2c:	je     0x40dcb4
  40de32:	mov    rdx,QWORD PTR [rip+0xad37]        # 0x418b70
  40de39:	mov    rcx,QWORD PTR [rip+0x13208]        # 0x421048
  40de40:	call   0x401a90
  40de45:	jmp    0x40dcb4
  40de4a:	mov    rdx,QWORD PTR [rip+0x131f7]        # 0x421048
  40de51:	mov    rcx,QWORD PTR [rip+0xad80]        # 0x418bd8
  40de58:	call   0x417870
  40de5d:	jmp    0x40dc6f
  40de62:	mov    rdx,QWORD PTR [rip+0x131df]        # 0x421048
  40de69:	mov    rcx,QWORD PTR [rip+0xace8]        # 0x418b58
  40de70:	call   0x417870
  40de75:	mov    eax,DWORD PTR [rbx+0x10]
  40de78:	jmp    0x40dc66
  40de7d:	mov    rcx,QWORD PTR [rbx+0x58]
  40de81:	test   rcx,rcx
  40de84:	jne    0x40dfce
  40de8a:	test   BYTE PTR [rbx+0x11],0x1
  40de8e:	jne    0x40df7d
  40de94:	cmp    BYTE PTR [rip+0x13205],0x0        # 0x4210a0
  40de9b:	jne    0x40dfe6
  40dea1:	mov    rcx,QWORD PTR [rbx+0x70]
  40dea5:	test   rcx,rcx
  40dea8:	je     0x40dc8c
  40deae:	mov    rdx,QWORD PTR [rip+0x13193]        # 0x421048
  40deb5:	call   0x417870
  40deba:	jmp    0x40dc8c
  40debf:	mov    rdx,QWORD PTR [rip+0x13182]        # 0x421048
  40dec6:	mov    rcx,QWORD PTR [rip+0xac93]        # 0x418b60
  40decd:	call   0x417870
  40ded2:	mov    eax,DWORD PTR [rbx+0x10]
  40ded5:	jmp    0x40dc5e
  40deda:	mov    rdx,QWORD PTR [rip+0x13167]        # 0x421048
  40dee1:	mov    rcx,QWORD PTR [rip+0xac40]        # 0x418b28
  40dee8:	call   0x417870
  40deed:	mov    eax,DWORD PTR [rbx+0x10]
  40def0:	jmp    0x40dc5e
  40def5:	xor    ecx,ecx
  40def7:	cmp    BYTE PTR [rip+0x13176],0x0        # 0x421074
  40defe:	mov    QWORD PTR [rsp+0x28],rcx
  40df03:	jne    0x40df6c
  40df05:	call   QWORD PTR [rip+0x156c5]        # 0x4235d0
  40df0b:	mov    rcx,QWORD PTR [rsp+0x28]
  40df10:	add    rax,0x30
  40df14:	mov    QWORD PTR [rip+0x1312d],rax        # 0x421048
  40df1b:	jmp    0x40db0a
  40df20:	and    ecx,0x3
  40df23:	cmp    ecx,0x2
  40df26:	je     0x40e05b
  40df2c:	cmp    ecx,0x3
  40df2f:	je     0x40e040
  40df35:	sub    ecx,0x1
  40df38:	je     0x40e040
  40df3e:	lea    r9,[rsp+0x30]
  40df43:	mov    DWORD PTR [rsp+0x30],0x706c6568
  40df4b:	mov    BYTE PTR [rsp+0x34],0x0
  40df50:	mov    r8,QWORD PTR [rbx+0x28]
  40df54:	mov    rdx,QWORD PTR [rip+0xab0d]        # 0x418a68
  40df5b:	mov    rcx,QWORD PTR [rip+0x130e6]        # 0x421048
  40df62:	call   0x401a90
  40df67:	jmp    0x40db39
  40df6c:	call   QWORD PTR [rip+0x1565e]        # 0x4235d0
  40df72:	mov    rcx,QWORD PTR [rsp+0x28]
  40df77:	add    rax,0x60
  40df7b:	jmp    0x40df14
  40df7d:	mov    rdx,QWORD PTR [rip+0x130c4]        # 0x421048
  40df84:	mov    rcx,QWORD PTR [rip+0xabf5]        # 0x418b80
  40df8b:	call   0x417870
  40df90:	mov    r8,QWORD PTR [rbx+0x30]
  40df94:	mov    rdx,QWORD PTR [rip+0xab4d]        # 0x418ae8
  40df9b:	mov    rcx,QWORD PTR [rip+0x130a6]        # 0x421048
  40dfa2:	call   0x401a90
  40dfa7:	jmp    0x40de94
  40dfac:	xor    ecx,ecx
  40dfae:	mov    QWORD PTR [rsp+0x28],rcx
  40dfb3:	call   QWORD PTR [rip+0x15617]        # 0x4235d0
  40dfb9:	add    rax,0x60
  40dfbd:	mov    rcx,QWORD PTR [rsp+0x28]
  40dfc2:	mov    QWORD PTR [rip+0x1307f],rax        # 0x421048
  40dfc9:	jmp    0x40dacc
  40dfce:	mov    rdx,QWORD PTR [rbx+0x38]
  40dfd2:	mov    r8,QWORD PTR [rbx+0x20]
  40dfd6:	call   0x4086e0
  40dfdb:	test   BYTE PTR [rbx+0x11],0x1
  40dfdf:	jne    0x40df90
  40dfe1:	jmp    0x40de94
  40dfe6:	mov    rdx,QWORD PTR [rip+0x1305b]        # 0x421048
  40dfed:	mov    ecx,0xa
  40dff2:	mov    ebp,DWORD PTR [rbx+0xb0]
  40dff8:	mov    rsi,QWORD PTR [rbx+0x78]
  40dffc:	call   0x417878
  40e001:	mov    rcx,QWORD PTR [rip+0x13040]        # 0x421048
  40e008:	call   0x417898
  40e00d:	jmp    0x40e023
  40e00f:	cmp    eax,0x4
  40e012:	je     0x40e033
  40e014:	sub    ebp,0x1
  40e017:	add    rsi,0x68
  40e01b:	test   ebp,ebp
  40e01d:	jle    0x40dea1
  40e023:	mov    eax,DWORD PTR [rsi+0x10]
  40e026:	and    eax,0xf000
  40e02b:	shr    eax,0xc
  40e02e:	cmp    eax,0x2
  40e031:	jne    0x40e00f
  40e033:	mov    rdx,rsi
  40e036:	mov    ecx,0x1
  40e03b:	call   QWORD PTR [rsi+0x38]
  40e03e:	jmp    0x40e014
  40e040:	lea    r9,[rsp+0x30]
  40e045:	lea    rsi,[rip+0xbd7d]        # 0x419dc9
  40e04c:	mov    ecx,0x7
  40e051:	mov    rdi,r9
  40e054:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40e056:	jmp    0x40df50
  40e05b:	mov    WORD PTR [rsp+0x30],0x682d
  40e062:	mov    BYTE PTR [rsp+0x32],0x0
  40e067:	lea    r9,[rsp+0x30]
  40e06c:	jmp    0x40df50
  40e071:	mov    BYTE PTR [rsp+0x31],0x2d
  40e076:	mov    BYTE PTR [rsp+0x30],0x2d
  40e07b:	lea    r9,[rsp+0x30]
  40e080:	mov    rdx,QWORD PTR [rax+0x50]
  40e084:	lea    rcx,[rsp+0x32]
  40e089:	mov    r8d,0x14
  40e08f:	mov    QWORD PTR [rsp+0x28],r9
  40e094:	call   0x4177a8
  40e099:	mov    r9,QWORD PTR [rsp+0x28]
  40e09e:	jmp    0x40df50
  40e0a3:	mov    BYTE PTR [rsp+0x30],0x2d
  40e0a8:	movzx  eax,WORD PTR [rax+0x2]
  40e0ac:	lea    r9,[rsp+0x30]
  40e0b1:	mov    BYTE PTR [rsp+0x32],0x0
  40e0b6:	mov    BYTE PTR [rsp+0x31],al
  40e0ba:	jmp    0x40df50
  40e0bf:	mov    rcx,QWORD PTR [rip+0xa86a]        # 0x418930
  40e0c6:	call   0x401f00
  40e0cb:	nop
  40e0cc:	nop    DWORD PTR [rax+0x0]
  40e0d0:	sub    rsp,0x28
  40e0d4:	call   0x40da80
  40e0d9:	nop
  40e0da:	nop    WORD PTR [rax+rax*1+0x0]
  40e0e0:	sub    rsp,0x28
  40e0e4:	lea    rcx,[rip+0xa495]        # 0x418580
  40e0eb:	xor    edx,edx
  40e0ed:	call   0x40da80
  40e0f2:	nop
  40e0f3:	nop    DWORD PTR [rax]
  40e0f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e100:	lea    rax,[rip+0xbcc9]        # 0x419dd0
  40e107:	ret    
  40e108:	nop    DWORD PTR [rax+rax*1+0x0]
  40e110:	push   rsi
  40e111:	push   rbx
  40e112:	sub    rsp,0x28
  40e116:	cmp    BYTE PTR [rip+0x12f57],0x0        # 0x421074
  40e11d:	mov    rbx,rcx
  40e120:	mov    rsi,rdx
  40e123:	je     0x40e140
  40e125:	call   QWORD PTR [rip+0x154a5]        # 0x4235d0
  40e12b:	cmp    rbx,0xf
  40e12f:	lea    r8,[rax+0x60]
  40e133:	ja     0x40e150
  40e135:	add    rsp,0x28
  40e139:	pop    rbx
  40e13a:	pop    rsi
  40e13b:	ret    
  40e13c:	nop    DWORD PTR [rax+0x0]
  40e140:	call   QWORD PTR [rip+0x1548a]        # 0x4235d0
  40e146:	cmp    rbx,0xf
  40e14a:	lea    r8,[rax+0x30]
  40e14e:	jbe    0x40e135
  40e150:	xor    r9d,r9d
  40e153:	mov    rdx,rsi
  40e156:	mov    rcx,rbx
  40e159:	add    rsp,0x28
  40e15d:	pop    rbx
  40e15e:	pop    rsi
  40e15f:	jmp    0x40b550
  40e164:	xchg   ax,ax
  40e166:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e170:	push   rsi
  40e171:	push   rbx
  40e172:	sub    rsp,0x28
  40e176:	mov    rbx,rcx
  40e179:	mov    rsi,rdx
  40e17c:	call   QWORD PTR [rip+0x1544e]        # 0x4235d0
  40e182:	cmp    rbx,0xf
  40e186:	ja     0x40e190
  40e188:	add    rsp,0x28
  40e18c:	pop    rbx
  40e18d:	pop    rsi
  40e18e:	ret    
  40e18f:	nop
  40e190:	lea    r8,[rax+0x60]
  40e194:	mov    r9d,0x1
  40e19a:	mov    rdx,rsi
  40e19d:	mov    rcx,rbx
  40e1a0:	add    rsp,0x28
  40e1a4:	pop    rbx
  40e1a5:	pop    rsi
  40e1a6:	jmp    0x40b550
  40e1ab:	nop
  40e1ac:	nop
  40e1ad:	nop
  40e1ae:	nop
  40e1af:	nop
  40e1b0:	push   rbp
  40e1b1:	push   rdi
  40e1b2:	push   rsi
  40e1b3:	push   rbx
  40e1b4:	sub    rsp,0x38
  40e1b8:	mov    QWORD PTR [rsp+0x78],r9
  40e1bd:	mov    QWORD PTR [rsp+0x20],rdx
  40e1c2:	lea    r9,[rsp+0x78]
  40e1c7:	mov    rbp,rdx
  40e1ca:	lea    rdx,[rsp+0x20]
  40e1cf:	mov    rdi,rcx
  40e1d2:	mov    QWORD PTR [rsp+0x28],r9
  40e1d7:	call   0x40e270
  40e1dc:	test   rax,rax
  40e1df:	mov    rsi,rax
  40e1e2:	mov    rbx,QWORD PTR [rsp+0x20]
  40e1e7:	je     0x40e245
  40e1e9:	cmp    rax,rdi
  40e1ec:	je     0x40e1fb
  40e1ee:	test   rbp,rbp
  40e1f1:	jne    0x40e210
  40e1f3:	mov    rcx,rsi
  40e1f6:	call   0x417860
  40e1fb:	cmp    rbx,0x7fffffff
  40e202:	ja     0x40e232
  40e204:	mov    eax,ebx
  40e206:	add    rsp,0x38
  40e20a:	pop    rbx
  40e20b:	pop    rsi
  40e20c:	pop    rdi
  40e20d:	pop    rbp
  40e20e:	ret    
  40e20f:	nop
  40e210:	lea    rax,[rbp-0x1]
  40e214:	cmp    rbp,rbx
  40e217:	mov    rdx,rsi
  40e21a:	mov    rcx,rdi
  40e21d:	cmova  rax,rbx
  40e221:	mov    rbp,rax
  40e224:	mov    r8,rax
  40e227:	call   0x417820
  40e22c:	mov    BYTE PTR [rdi+rbp*1],0x0
  40e230:	jmp    0x40e1f3
  40e232:	call   QWORD PTR [rip+0x153e0]        # 0x423618
  40e238:	mov    DWORD PTR [rax],0x84
  40e23e:	mov    eax,0xffffffff
  40e243:	jmp    0x40e206
  40e245:	mov    eax,0xffffffff
  40e24a:	jmp    0x40e206
  40e24c:	nop
  40e24d:	nop
  40e24e:	nop
  40e24f:	nop
  40e250:	sub    rsp,0x38
  40e254:	mov    QWORD PTR [rsp+0x58],r9
  40e259:	lea    r9,[rsp+0x58]
  40e25e:	mov    QWORD PTR [rsp+0x28],r9
  40e263:	call   0x412d60
  40e268:	add    rsp,0x38
  40e26c:	ret    
  40e26d:	nop    DWORD PTR [rax]
  40e270:	push   rbp
  40e271:	push   r15
  40e273:	push   r14
  40e275:	push   r13
  40e277:	push   r12
  40e279:	push   rdi
  40e27a:	push   rsi
  40e27b:	push   rbx
  40e27c:	sub    rsp,0x518
  40e283:	lea    rbp,[rsp+0x80]
  40e28b:	lea    rax,[rbp+0x110]
  40e292:	lea    rdi,[rbp+0x200]
  40e299:	mov    rbx,r8
  40e29c:	mov    QWORD PTR [rbp+0x4e0],rcx
  40e2a3:	mov    QWORD PTR [rbp+0x4e8],rdx
  40e2aa:	mov    rcx,rbx
  40e2ad:	mov    rdx,rdi
  40e2b0:	mov    r8,rax
  40e2b3:	mov    QWORD PTR [rbp+0x60],rdi
  40e2b7:	mov    rsi,r9
  40e2ba:	mov    QWORD PTR [rbp+0x58],rax
  40e2be:	mov    rdi,rax
  40e2c1:	call   0x410130
  40e2c6:	test   eax,eax
  40e2c8:	js     0x40f310
  40e2ce:	mov    rdx,rdi
  40e2d1:	mov    rcx,rsi
  40e2d4:	call   0x410040
  40e2d9:	test   eax,eax
  40e2db:	js     0x40f650
  40e2e1:	mov    rax,QWORD PTR [rbp+0x210]
  40e2e8:	mov    rdx,0xffffffffffffffff
  40e2ef:	add    rax,0x7
  40e2f3:	cmp    rax,0x7
  40e2f7:	cmovb  rax,rdx
  40e2fb:	add    rax,QWORD PTR [rbp+0x218]
  40e302:	jb     0x40e740
  40e308:	lea    rcx,[rax+0x6]
  40e30c:	cmp    rax,rcx
  40e30f:	ja     0x40e740
  40e315:	cmp    rcx,0xf9f
  40e31c:	ja     0x40f080
  40e322:	add    rax,0x24
  40e326:	and    rax,0xfffffffffffffff0
  40e32a:	call   0x4122a0
  40e32f:	sub    rsp,rax
  40e332:	cmp    QWORD PTR [rbp+0x4e0],0x0
  40e33a:	mov    QWORD PTR [rbp+0x50],0x0
  40e342:	lea    rax,[rsp+0x40]
  40e347:	mov    QWORD PTR [rbp+0x90],rax
  40e34e:	je     0x40f0b8
  40e354:	mov    rax,QWORD PTR [rbp+0x4e8]
  40e35b:	mov    r12,QWORD PTR [rax]
  40e35e:	mov    rax,QWORD PTR [rbp+0x4e0]
  40e365:	mov    r13,QWORD PTR [rbp+0x208]
  40e36c:	mov    rdi,rbx
  40e36f:	xor    r15d,r15d
  40e372:	mov    QWORD PTR [rbp+0x80],0x0
  40e37d:	mov    QWORD PTR [rbp+0x98],rax
  40e384:	lea    rax,[rbp+0xbc]
  40e38b:	mov    rsi,QWORD PTR [r13+0x0]
  40e38f:	mov    QWORD PTR [rbp+0x70],rax
  40e393:	lea    rax,[rbp+0xa0]
  40e39a:	cmp    rsi,rdi
  40e39d:	mov    QWORD PTR [rbp+0x40],rax
  40e3a1:	lea    rax,[rbp+0xd0]
  40e3a8:	mov    QWORD PTR [rbp+0x48],rax
  40e3ac:	lea    rax,[rbp+0xb4]
  40e3b3:	mov    QWORD PTR [rbp+0x38],rax
  40e3b7:	je     0x40e883
  40e3bd:	sub    rsi,rdi
  40e3c0:	mov    rax,0xffffffffffffffff
  40e3c7:	mov    r14,rsi
  40e3ca:	add    r14,r15
  40e3cd:	cmovb  r14,rax
  40e3d1:	cmp    r12,r14
  40e3d4:	jae    0x40e892
  40e3da:	test   r12,r12
  40e3dd:	je     0x40e7a0
  40e3e3:	js     0x40f1b0
  40e3e9:	add    r12,r12
  40e3ec:	cmp    r12,r14
  40e3ef:	cmovb  r12,r14
  40e3f3:	cmp    r12,0xffffffffffffffff
  40e3f7:	je     0x40f1b0
  40e3fd:	mov    rax,QWORD PTR [rbp+0x98]
  40e404:	cmp    rax,QWORD PTR [rbp+0x4e0]
  40e40b:	sete   r8b
  40e40f:	test   rax,rax
  40e412:	mov    BYTE PTR [rbp+0x88],r8b
  40e419:	je     0x40e7b0
  40e41f:	test   r8b,r8b
  40e422:	jne    0x40e7b0
  40e428:	mov    rcx,QWORD PTR [rbp+0x98]
  40e42f:	mov    rdx,r12
  40e432:	call   0x410d10
  40e437:	movzx  r8d,BYTE PTR [rbp+0x88]
  40e43f:	mov    rbx,rax
  40e442:	test   rbx,rbx
  40e445:	je     0x40f1b0
  40e44b:	test   r15,r15
  40e44e:	je     0x40e467
  40e450:	test   r8b,r8b
  40e453:	je     0x40e467
  40e455:	mov    rdx,QWORD PTR [rbp+0x98]
  40e45c:	mov    r8,r15
  40e45f:	mov    rcx,rbx
  40e462:	call   0x417820
  40e467:	lea    rcx,[rbx+r15*1]
  40e46b:	mov    r8,rsi
  40e46e:	mov    rdx,rdi
  40e471:	call   0x417820
  40e476:	mov    rax,QWORD PTR [rbp+0x80]
  40e47d:	cmp    QWORD PTR [rbp+0x200],rax
  40e484:	je     0x40f695
  40e48a:	movzx  edx,BYTE PTR [r13+0x48]
  40e48f:	cmp    dl,0x25
  40e492:	je     0x40e7d0
  40e498:	mov    rax,QWORD PTR [r13+0x50]
  40e49c:	cmp    rax,0xffffffffffffffff
  40e4a0:	je     0x40efc0
  40e4a6:	cmp    dl,0x6e
  40e4a9:	je     0x40e8a0
  40e4af:	shl    rax,0x5
  40e4b3:	cmp    dl,0x73
  40e4b6:	mov    r10,QWORD PTR [rbp+0x118]
  40e4bd:	je     0x40ea81
  40e4c3:	mov    eax,DWORD PTR [r10+rax*1]
  40e4c7:	mov    DWORD PTR [rbp+0x88],eax
  40e4cd:	mov    rcx,QWORD PTR [r13+0x18]
  40e4d1:	mov    r9,QWORD PTR [r13+0x20]
  40e4d5:	mov    r8d,DWORD PTR [r13+0x10]
  40e4d9:	cmp    rcx,r9
  40e4dc:	je     0x40f2e0
  40e4e2:	mov    rax,QWORD PTR [r13+0x28]
  40e4e6:	cmp    rax,0xffffffffffffffff
  40e4ea:	je     0x40f1c0
  40e4f0:	shl    rax,0x5
  40e4f4:	add    rax,r10
  40e4f7:	cmp    DWORD PTR [rax],0x5
  40e4fa:	jne    0x40efc0
  40e500:	movsxd r15,DWORD PTR [rax+0x10]
  40e504:	test   r15d,r15d
  40e507:	js     0x40f2d0
  40e50d:	mov    rdx,QWORD PTR [r13+0x30]
  40e511:	mov    rcx,QWORD PTR [r13+0x38]
  40e515:	cmp    rdx,rcx
  40e518:	je     0x40ea70
  40e51e:	mov    rax,QWORD PTR [r13+0x40]
  40e522:	cmp    rax,0xffffffffffffffff
  40e526:	je     0x40f210
  40e52c:	shl    rax,0x5
  40e530:	add    r10,rax
  40e533:	cmp    DWORD PTR [r10],0x5
  40e537:	jne    0x40efc0
  40e53d:	movsxd rsi,DWORD PTR [r10+0x10]
  40e541:	test   esi,esi
  40e543:	js     0x40ea70
  40e549:	mov    DWORD PTR [rbp+0x28],0x1
  40e550:	mov    rax,QWORD PTR [rbp+0x90]
  40e557:	test   r8b,0x1
  40e55b:	mov    BYTE PTR [rax],0x25
  40e55e:	lea    rdi,[rax+0x1]
  40e562:	je     0x40e573
  40e564:	mov    rax,QWORD PTR [rbp+0x90]
  40e56b:	lea    rdi,[rax+0x2]
  40e56f:	mov    BYTE PTR [rax+0x1],0x27
  40e573:	test   r8b,0x2
  40e577:	je     0x40e580
  40e579:	mov    BYTE PTR [rdi],0x2d
  40e57c:	add    rdi,0x1
  40e580:	test   r8b,0x4
  40e584:	je     0x40e58d
  40e586:	mov    BYTE PTR [rdi],0x2b
  40e589:	add    rdi,0x1
  40e58d:	test   r8b,0x8
  40e591:	je     0x40e59a
  40e593:	mov    BYTE PTR [rdi],0x20
  40e596:	add    rdi,0x1
  40e59a:	test   r8b,0x10
  40e59e:	je     0x40e5a7
  40e5a0:	mov    BYTE PTR [rdi],0x23
  40e5a3:	add    rdi,0x1
  40e5a7:	and    r8d,0x20
  40e5ab:	je     0x40e5b4
  40e5ad:	mov    BYTE PTR [rdi],0x30
  40e5b0:	add    rdi,0x1
  40e5b4:	mov    rdx,QWORD PTR [r13+0x18]
  40e5b8:	mov    r8,QWORD PTR [r13+0x20]
  40e5bc:	cmp    rdx,r8
  40e5bf:	je     0x40e5e3
  40e5c1:	mov    r9,r8
  40e5c4:	mov    rcx,rdi
  40e5c7:	sub    r9,rdx
  40e5ca:	mov    r8,r9
  40e5cd:	mov    QWORD PTR [rbp+0x98],r9
  40e5d4:	call   0x417820
  40e5d9:	mov    r9,QWORD PTR [rbp+0x98]
  40e5e0:	add    rdi,r9
  40e5e3:	mov    rdx,QWORD PTR [r13+0x30]
  40e5e7:	mov    r8,QWORD PTR [r13+0x38]
  40e5eb:	cmp    rdx,r8
  40e5ee:	je     0x40e612
  40e5f0:	mov    r9,r8
  40e5f3:	mov    rcx,rdi
  40e5f6:	sub    r9,rdx
  40e5f9:	mov    r8,r9
  40e5fc:	mov    QWORD PTR [rbp+0x98],r9
  40e603:	call   0x417820
  40e608:	mov    r9,QWORD PTR [rbp+0x98]
  40e60f:	add    rdi,r9
  40e612:	mov    eax,DWORD PTR [rbp+0x88]
  40e618:	lea    ecx,[rax-0x7]
  40e61b:	cmp    ecx,0x9
  40e61e:	ja     0x40e643
  40e620:	mov    eax,0x1
  40e625:	shl    rax,cl
  40e628:	test   eax,0x283
  40e62d:	jne    0x40ec24
  40e633:	test   al,0x20
  40e635:	jne    0x40f320
  40e63b:	test   al,0xc
  40e63d:	jne    0x40f390
  40e643:	movzx  eax,BYTE PTR [r13+0x48]
  40e648:	mov    BYTE PTR [rdi+0x1],0x0
  40e64c:	mov    BYTE PTR [rdi],al
  40e64e:	mov    rax,QWORD PTR [r13+0x28]
  40e652:	cmp    rax,0xffffffffffffffff
  40e656:	je     0x40f040
  40e65c:	shl    rax,0x5
  40e660:	add    rax,QWORD PTR [rbp+0x118]
  40e667:	cmp    DWORD PTR [rax],0x5
  40e66a:	jne    0x40efc0
  40e670:	mov    eax,DWORD PTR [rax+0x10]
  40e673:	mov    edx,0x1
  40e678:	mov    DWORD PTR [rbp+0xc0],eax
  40e67e:	mov    rax,QWORD PTR [r13+0x40]
  40e682:	cmp    rax,0xffffffffffffffff
  40e686:	je     0x40f030
  40e68c:	shl    rax,0x5
  40e690:	add    rax,QWORD PTR [rbp+0x118]
  40e697:	cmp    DWORD PTR [rax],0x5
  40e69a:	jne    0x40efc0
  40e6a0:	mov    eax,DWORD PTR [rax+0x10]
  40e6a3:	lea    ecx,[rdx+0x1]
  40e6a6:	mov    DWORD PTR [rbp+0x78],ecx
  40e6a9:	mov    DWORD PTR [rbp+rdx*4+0xc0],eax
  40e6b0:	lea    rax,[r14+0x2]
  40e6b4:	mov    rdx,0xffffffffffffffff
  40e6bb:	cmp    r14,rax
  40e6be:	cmovbe rdx,rax
  40e6c2:	cmp    r12,rdx
  40e6c5:	jae    0x40f020
  40e6cb:	test   r12,r12
  40e6ce:	je     0x40e8d0
  40e6d4:	js     0x40e6f1
  40e6d6:	add    r12,r12
  40e6d9:	cmp    r14,rax
  40e6dc:	ja     0x40e6f1
  40e6de:	cmp    r12,rax
  40e6e1:	jae    0x40e8e8
  40e6e7:	cmp    rax,0xffffffffffffffff
  40e6eb:	jne    0x40fff5
  40e6f1:	mov    rax,QWORD PTR [rip+0x14f20]        # 0x423618
  40e6f8:	mov    r15,rbx
  40e6fb:	mov    QWORD PTR [rbp+0x68],rax
  40e6ff:	mov    QWORD PTR [rbp+0x98],r15
  40e706:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e710:	mov    rax,QWORD PTR [rbp+0x98]
  40e717:	test   rax,rax
  40e71a:	je     0x40e729
  40e71c:	cmp    rax,QWORD PTR [rbp+0x4e0]
  40e723:	jne    0x40f3f0
  40e729:	mov    rax,QWORD PTR [rbp+0x50]
  40e72d:	test   rax,rax
  40e730:	je     0x40e74b
  40e732:	mov    rcx,rax
  40e735:	call   0x417860
  40e73a:	jmp    0x40e74b
  40e73c:	nop    DWORD PTR [rax+0x0]
  40e740:	mov    rax,QWORD PTR [rip+0x14ed1]        # 0x423618
  40e747:	mov    QWORD PTR [rbp+0x68],rax
  40e74b:	mov    rax,QWORD PTR [rbp+0x60]
  40e74f:	mov    rcx,QWORD PTR [rbp+0x208]
  40e756:	add    rax,0x20
  40e75a:	cmp    rcx,rax
  40e75d:	je     0x40e764
  40e75f:	call   0x417860
  40e764:	mov    rax,QWORD PTR [rbp+0x58]
  40e768:	mov    rcx,QWORD PTR [rbp+0x118]
  40e76f:	add    rax,0x10
  40e773:	cmp    rcx,rax
  40e776:	je     0x40e77d
  40e778:	call   0x417860
  40e77d:	mov    rax,QWORD PTR [rbp+0x68]
  40e781:	call   rax
  40e783:	mov    DWORD PTR [rax],0xc
  40e789:	xor    eax,eax
  40e78b:	lea    rsp,[rbp+0x498]
  40e792:	pop    rbx
  40e793:	pop    rsi
  40e794:	pop    rdi
  40e795:	pop    r12
  40e797:	pop    r13
  40e799:	pop    r14
  40e79b:	pop    r15
  40e79d:	pop    rbp
  40e79e:	ret    
  40e79f:	nop
  40e7a0:	mov    r12d,0xc
  40e7a6:	jmp    0x40e3ec
  40e7ab:	nop    DWORD PTR [rax+rax*1+0x0]
  40e7b0:	mov    rcx,r12
  40e7b3:	call   0x410000
  40e7b8:	movzx  r8d,BYTE PTR [rbp+0x88]
  40e7c0:	mov    rbx,rax
  40e7c3:	jmp    0x40e442
  40e7c8:	nop    DWORD PTR [rax+rax*1+0x0]
  40e7d0:	cmp    QWORD PTR [r13+0x50],0xffffffffffffffff
  40e7d5:	jne    0x40efc0
  40e7db:	lea    r15,[r14+0x1]
  40e7df:	mov    rax,0xffffffffffffffff
  40e7e6:	cmp    r14,r15
  40e7e9:	cmova  r15,rax
  40e7ed:	cmp    r12,r15
  40e7f0:	jae    0x40e85a
  40e7f2:	test   r12,r12
  40e7f5:	je     0x40f2f0
  40e7fb:	js     0x40f1a0
  40e801:	add    r12,r12
  40e804:	cmp    r12,r15
  40e807:	cmovb  r12,r15
  40e80b:	cmp    r12,0xffffffffffffffff
  40e80f:	je     0x40f1a0
  40e815:	cmp    rbx,QWORD PTR [rbp+0x4e0]
  40e81c:	sete   sil
  40e820:	test   rbx,rbx
  40e823:	je     0x40f300
  40e829:	test   sil,sil
  40e82c:	jne    0x40f300
  40e832:	mov    rdx,r12
  40e835:	mov    rcx,rbx
  40e838:	call   0x410d10
  40e83d:	mov    r9,rax
  40e840:	test   r9,r9
  40e843:	je     0x40f1a0
  40e849:	test   r14,r14
  40e84c:	je     0x40e857
  40e84e:	test   sil,sil
  40e851:	jne    0x40f330
  40e857:	mov    rbx,r9
  40e85a:	mov    BYTE PTR [rbx+r14*1],0x25
  40e85f:	mov    QWORD PTR [rbp+0x98],rbx
  40e866:	mov    rdi,QWORD PTR [r13+0x8]
  40e86a:	add    r13,0x58
  40e86e:	mov    rsi,QWORD PTR [r13+0x0]
  40e872:	add    QWORD PTR [rbp+0x80],0x1
  40e87a:	cmp    rsi,rdi
  40e87d:	jne    0x40e3bd
  40e883:	mov    r14,r15
  40e886:	mov    rbx,QWORD PTR [rbp+0x98]
  40e88d:	jmp    0x40e476
  40e892:	mov    rbx,QWORD PTR [rbp+0x98]
  40e899:	jmp    0x40e467
  40e89e:	xchg   ax,ax
  40e8a0:	shl    rax,0x5
  40e8a4:	add    rax,QWORD PTR [rbp+0x118]
  40e8ab:	mov    edi,DWORD PTR [rax]
  40e8ad:	lea    edx,[rdi-0x12]
  40e8b0:	cmp    edx,0x4
  40e8b3:	ja     0x40efc0
  40e8b9:	lea    rcx,[rip+0xf140]        # 0x41da00
  40e8c0:	mov    rax,QWORD PTR [rax+0x10]
  40e8c4:	movsxd rdx,DWORD PTR [rcx+rdx*4]
  40e8c8:	add    rcx,rdx
  40e8cb:	jmp    rcx
  40e8cd:	nop    DWORD PTR [rax]
  40e8d0:	cmp    r14,rax
  40e8d3:	ja     0x40e6f1
  40e8d9:	mov    r12d,0xc
  40e8df:	cmp    r12,rax
  40e8e2:	jb     0x40e6e7
  40e8e8:	cmp    rbx,QWORD PTR [rbp+0x4e0]
  40e8ef:	sete   r8b
  40e8f3:	test   rbx,rbx
  40e8f6:	mov    BYTE PTR [rbp+0x68],r8b
  40e8fa:	je     0x40f000
  40e900:	test   r8b,r8b
  40e903:	jne    0x40f000
  40e909:	mov    rdx,r12
  40e90c:	mov    rcx,rbx
  40e90f:	call   0x410d10
  40e914:	movzx  r8d,BYTE PTR [rbp+0x68]
  40e919:	mov    QWORD PTR [rbp+0x98],rax
  40e920:	cmp    QWORD PTR [rbp+0x98],0x0
  40e928:	je     0x40e6f1
  40e92e:	test   r14,r14
  40e931:	je     0x40e94a
  40e933:	test   r8b,r8b
  40e936:	je     0x40e94a
  40e938:	mov    rcx,QWORD PTR [rbp+0x98]
  40e93f:	mov    r8,r14
  40e942:	mov    rdx,rbx
  40e945:	call   0x417820
  40e94a:	mov    rax,QWORD PTR [rbp+0x98]
  40e951:	mov    BYTE PTR [rax+r14*1],0x0
  40e956:	mov    rax,QWORD PTR [rip+0x14cbb]        # 0x423618
  40e95d:	mov    QWORD PTR [rbp+0x68],rax
  40e961:	call   rax
  40e963:	mov    ebx,DWORD PTR [rbp+0x88]
  40e969:	mov    eax,DWORD PTR [rax]
  40e96b:	mov    QWORD PTR [rbp-0x10],rsi
  40e96f:	lea    edx,[rbx-0x9]
  40e972:	mov    DWORD PTR [rbp+0x30],eax
  40e975:	cmp    edx,0x2
  40e978:	sbb    rax,rax
  40e97b:	and    eax,0xa
  40e97e:	add    rax,0xa
  40e982:	cmp    rsi,rax
  40e985:	cmovae rax,rsi
  40e989:	mov    QWORD PTR [rbp-0x38],rax
  40e98d:	add    rax,rax
  40e990:	mov    QWORD PTR [rbp+0x20],rax
  40e994:	add    rax,0x1
  40e998:	cmp    edx,0x2
  40e99b:	mov    QWORD PTR [rbp+0x18],rax
  40e99f:	sbb    rax,rax
  40e9a2:	and    eax,0xb
  40e9a5:	add    rax,0xb
  40e9a9:	cmp    rsi,rax
  40e9ac:	cmovae rax,rsi
  40e9b0:	mov    QWORD PTR [rbp-0x18],rax
  40e9b4:	add    rax,0x1
  40e9b8:	cmp    edx,0x2
  40e9bb:	mov    QWORD PTR [rbp+0x10],rax
  40e9bf:	sbb    rax,rax
  40e9c2:	mov    edx,0x2693
  40e9c7:	and    eax,0x8
  40e9ca:	add    rax,0x9
  40e9ce:	cmp    rsi,rax
  40e9d1:	cmovae rax,rsi
  40e9d5:	mov    QWORD PTR [rbp-0x20],rax
  40e9d9:	add    rax,0x2
  40e9dd:	cmp    ebx,0xc
  40e9e0:	mov    QWORD PTR [rbp+0x8],rax
  40e9e4:	mov    eax,0x273
  40e9e9:	cmove  rax,rdx
  40e9ed:	mov    QWORD PTR [rbp-0x28],rax
  40e9f1:	add    rax,rsi
  40e9f4:	cmp    ebx,0xc
  40e9f7:	mov    QWORD PTR [rbp+0x0],rax
  40e9fb:	sete   al
  40e9fe:	movzx  eax,al
  40ea01:	lea    rax,[rax+rax*1+0xd]
  40ea06:	cmp    rsi,rax
  40ea09:	cmovae rax,rsi
  40ea0d:	mov    rsi,r12
  40ea10:	mov    QWORD PTR [rbp-0x30],rax
  40ea14:	add    rax,0xc
  40ea18:	mov    QWORD PTR [rbp-0x8],rax
  40ea1c:	mov    rax,rsi
  40ea1f:	mov    ebx,0x7fffffff
  40ea24:	mov    DWORD PTR [rbp+0xbc],0xffffffff
  40ea2e:	sub    rax,r14
  40ea31:	cmp    rax,0x7fffffff
  40ea37:	cmovbe rbx,rax
  40ea3b:	call   QWORD PTR [rip+0x14bd7]        # 0x423618
  40ea41:	mov    DWORD PTR [rax],0x0
  40ea47:	mov    eax,DWORD PTR [rbp+0x88]
  40ea4d:	cmp    eax,0x11
  40ea50:	ja     0x40efc0
  40ea56:	mov    edx,eax
  40ea58:	lea    rax,[rip+0xefb5]        # 0x41da14
  40ea5f:	movsxd rdx,DWORD PTR [rax+rdx*4]
  40ea63:	add    rax,rdx
  40ea66:	jmp    rax
  40ea68:	nop    DWORD PTR [rax+rax*1+0x0]
  40ea70:	mov    esi,0x6
  40ea75:	mov    DWORD PTR [rbp+0x28],0x0
  40ea7c:	jmp    0x40e550
  40ea81:	add    rax,r10
  40ea84:	mov    edi,DWORD PTR [rax]
  40ea86:	cmp    edi,0x10
  40ea89:	mov    DWORD PTR [rbp+0x88],edi
  40ea8f:	jne    0x40e4cd
  40ea95:	mov    r8,QWORD PTR [r13+0x18]
  40ea99:	mov    r9,QWORD PTR [r13+0x20]
  40ea9d:	cmp    r8,r9
  40eaa0:	je     0x40f0dc
  40eaa6:	mov    rdx,QWORD PTR [r13+0x28]
  40eaaa:	cmp    rdx,0xffffffffffffffff
  40eaae:	je     0x40fd2d
  40eab4:	shl    rdx,0x5
  40eab8:	add    rdx,r10
  40eabb:	cmp    DWORD PTR [rdx],0x5
  40eabe:	jne    0x40efc0
  40eac4:	movsxd rdx,DWORD PTR [rdx+0x10]
  40eac8:	mov    rcx,rdx
  40eacb:	shr    rcx,0x3f
  40eacf:	mov    r8,rcx
  40ead2:	neg    r8
  40ead5:	xor    rdx,r8
  40ead8:	lea    rdi,[rdx+rcx*1]
  40eadc:	mov    QWORD PTR [rbp+0x68],rdi
  40eae0:	mov    r8,QWORD PTR [r13+0x30]
  40eae4:	mov    r11,QWORD PTR [r13+0x38]
  40eae8:	mov    DWORD PTR [rbp+0x88],0x1
  40eaf2:	cmp    r8,r11
  40eaf5:	je     0x40ffec
  40eafb:	mov    rdx,QWORD PTR [r13+0x40]
  40eaff:	cmp    rdx,0xffffffffffffffff
  40eb03:	je     0x40fcce
  40eb09:	shl    rdx,0x5
  40eb0d:	add    r10,rdx
  40eb10:	cmp    DWORD PTR [r10],0x5
  40eb14:	jne    0x40efc0
  40eb1a:	mov    r9d,DWORD PTR [r10+0x10]
  40eb1e:	test   r9d,r9d
  40eb21:	movsxd r15,r9d
  40eb24:	js     0x40fc5d
  40eb2a:	test   r15,r15
  40eb2d:	mov    rsi,QWORD PTR [rax+0x10]
  40eb31:	mov    DWORD PTR [rbp+0xc0],0x0
  40eb3b:	je     0x40ffc0
  40eb41:	movzx  edx,WORD PTR [rsi]
  40eb44:	test   dx,dx
  40eb47:	je     0x40ffc0
  40eb4d:	lea    rax,[rbp+0xc0]
  40eb54:	mov    rcx,rsi
  40eb57:	mov    QWORD PTR [rbp+0x98],r13
  40eb5e:	mov    QWORD PTR [rbp+0x78],r12
  40eb62:	mov    QWORD PTR [rbp+0x30],rsi
  40eb66:	xor    edi,edi
  40eb68:	mov    rsi,r15
  40eb6b:	mov    r12,rcx
  40eb6e:	mov    r13,rax
  40eb71:	mov    r15,QWORD PTR [rbp+0x48]
  40eb75:	jmp    0x40eba9
  40eb77:	nop    WORD PTR [rax+rax*1+0x0]
  40eb80:	cdqe   
  40eb82:	cmp    rax,rsi
  40eb85:	ja     0x40fa50
  40eb8b:	add    r12,0x2
  40eb8f:	add    rdi,rax
  40eb92:	sub    rsi,rax
  40eb95:	je     0x40fa50
  40eb9b:	movzx  edx,WORD PTR [r12]
  40eba0:	test   dx,dx
  40eba3:	je     0x40fa50
  40eba9:	mov    r8,r13
  40ebac:	mov    rcx,r15
  40ebaf:	call   0x412b40
  40ebb4:	test   eax,eax
  40ebb6:	jns    0x40eb80
  40ebb8:	test   rbx,rbx
  40ebbb:	je     0x40ebce
  40ebbd:	cmp    QWORD PTR [rbp+0x4e0],rbx
  40ebc4:	je     0x40ebce
  40ebc6:	mov    rcx,rbx
  40ebc9:	call   0x417860
  40ebce:	mov    rax,QWORD PTR [rbp+0x50]
  40ebd2:	test   rax,rax
  40ebd5:	je     0x40ebdf
  40ebd7:	mov    rcx,rax
  40ebda:	call   0x417860
  40ebdf:	mov    rax,QWORD PTR [rbp+0x60]
  40ebe3:	mov    rcx,QWORD PTR [rbp+0x208]
  40ebea:	add    rax,0x20
  40ebee:	cmp    rcx,rax
  40ebf1:	je     0x40ebf8
  40ebf3:	call   0x417860
  40ebf8:	mov    rax,QWORD PTR [rbp+0x58]
  40ebfc:	mov    rcx,QWORD PTR [rbp+0x118]
  40ec03:	add    rax,0x10
  40ec07:	cmp    rcx,rax
  40ec0a:	je     0x40ec11
  40ec0c:	call   0x417860
  40ec11:	call   QWORD PTR [rip+0x14a01]        # 0x423618
  40ec17:	mov    DWORD PTR [rax],0x2a
  40ec1d:	xor    eax,eax
  40ec1f:	jmp    0x40e78b
  40ec24:	mov    BYTE PTR [rdi],0x6c
  40ec27:	add    rdi,0x1
  40ec2b:	jmp    0x40e643
  40ec30:	mov    DWORD PTR [rax],r14d
  40ec33:	mov    r15,r14
  40ec36:	mov    QWORD PTR [rbp+0x98],rbx
  40ec3d:	jmp    0x40e866
  40ec42:	mov    rax,QWORD PTR [r13+0x50]
  40ec46:	shl    rax,0x5
  40ec4a:	add    rax,QWORD PTR [rbp+0x118]
  40ec51:	mov    r9d,DWORD PTR [rax+0x10]
  40ec55:	mov    eax,DWORD PTR [rbp+0x78]
  40ec58:	cmp    eax,0x1
  40ec5b:	je     0x40ee50
  40ec61:	cmp    eax,0x2
  40ec64:	mov    rax,QWORD PTR [rbp+0x98]
  40ec6b:	lea    r12,[rax+r14*1]
  40ec6f:	mov    rax,QWORD PTR [rbp+0x70]
  40ec73:	jne    0x40efc5
  40ec79:	mov    QWORD PTR [rsp+0x30],rax
  40ec7e:	mov    eax,DWORD PTR [rbp+0xc4]
  40ec84:	mov    rdx,rbx
  40ec87:	mov    DWORD PTR [rsp+0x28],r9d
  40ec8c:	mov    r8,QWORD PTR [rbp+0x90]
  40ec93:	mov    rcx,r12
  40ec96:	mov    r9d,DWORD PTR [rbp+0xc0]
  40ec9d:	mov    DWORD PTR [rsp+0x20],eax
  40eca1:	call   0x40e250
  40eca6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ecb0:	movsxd rdx,DWORD PTR [rbp+0xbc]
  40ecb7:	test   edx,edx
  40ecb9:	js     0x40ee13
  40ecbf:	movsxd rcx,edx
  40ecc2:	cmp    rcx,rbx
  40ecc5:	jae    0x40ecd2
  40ecc7:	cmp    BYTE PTR [r12+rcx*1],0x0
  40eccc:	jne    0x40efc0
  40ecd2:	cmp    eax,edx
  40ecd4:	jle    0x40ecdf
  40ecd6:	mov    DWORD PTR [rbp+0xbc],eax
  40ecdc:	movsxd rdx,eax
  40ecdf:	lea    eax,[rdx+0x1]
  40ece2:	cmp    rax,rbx
  40ece5:	jb     0x40f840
  40eceb:	cmp    rbx,0x7fffffff
  40ecf2:	je     0x40f860
  40ecf8:	lea    rcx,[rsi+rsi*1]
  40ecfc:	test   rsi,rsi
  40ecff:	mov    rax,0xffffffffffffffff
  40ed06:	cmovs  rcx,rax
  40ed0a:	add    edx,0x2
  40ed0d:	add    rdx,r14
  40ed10:	jb     0x40ed1c
  40ed12:	cmp    rcx,rdx
  40ed15:	mov    rax,rdx
  40ed18:	cmovae rax,rcx
  40ed1c:	cmp    rsi,rax
  40ed1f:	jae    0x40ea1c
  40ed25:	test   rsi,rsi
  40ed28:	je     0x40efe1
  40ed2e:	js     0x40f8e0
  40ed34:	add    rsi,rsi
  40ed37:	cmp    rsi,rax
  40ed3a:	cmovb  rsi,rax
  40ed3e:	cmp    rsi,0xffffffffffffffff
  40ed42:	je     0x40f8e0
  40ed48:	mov    rax,QWORD PTR [rbp+0x98]
  40ed4f:	cmp    rax,QWORD PTR [rbp+0x4e0]
  40ed56:	sete   bl
  40ed59:	test   rax,rax
  40ed5c:	je     0x40eff0
  40ed62:	test   bl,bl
  40ed64:	jne    0x40eff0
  40ed6a:	mov    rcx,QWORD PTR [rbp+0x98]
  40ed71:	mov    rdx,rsi
  40ed74:	call   0x410d10
  40ed79:	mov    r9,rax
  40ed7c:	test   r9,r9
  40ed7f:	je     0x40f8e0
  40ed85:	test   bl,bl
  40ed87:	je     0x40ed92
  40ed89:	test   r14,r14
  40ed8c:	jne    0x40f270
  40ed92:	mov    QWORD PTR [rbp+0x98],r9
  40ed99:	jmp    0x40ea1c
  40ed9e:	xchg   ax,ax
  40eda0:	mov    rax,QWORD PTR [r13+0x50]
  40eda4:	shl    rax,0x5
  40eda8:	add    rax,QWORD PTR [rbp+0x118]
  40edaf:	mov    r9,QWORD PTR [rax+0x10]
  40edb3:	mov    eax,DWORD PTR [rbp+0x78]
  40edb6:	cmp    eax,0x1
  40edb9:	je     0x40f290
  40edbf:	cmp    eax,0x2
  40edc2:	mov    rax,QWORD PTR [rbp+0x98]
  40edc9:	lea    r12,[rax+r14*1]
  40edcd:	mov    rax,QWORD PTR [rbp+0x70]
  40edd1:	jne    0x40f0c0
  40edd7:	mov    QWORD PTR [rsp+0x30],rax
  40eddc:	mov    QWORD PTR [rsp+0x28],r9
  40ede1:	mov    eax,DWORD PTR [rbp+0xc4]
  40ede7:	mov    r9d,DWORD PTR [rbp+0xc0]
  40edee:	mov    rdx,rbx
  40edf1:	mov    r8,QWORD PTR [rbp+0x90]
  40edf8:	mov    rcx,r12
  40edfb:	mov    DWORD PTR [rsp+0x20],eax
  40edff:	call   0x40e250
  40ee04:	movsxd rdx,DWORD PTR [rbp+0xbc]
  40ee0b:	test   edx,edx
  40ee0d:	jns    0x40ecbf
  40ee13:	cmp    BYTE PTR [rdi+0x1],0x0
  40ee17:	je     0x40f050
  40ee1d:	mov    BYTE PTR [rdi+0x1],0x0
  40ee21:	jmp    0x40ea1c
  40ee26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ee30:	mov    rax,QWORD PTR [r13+0x50]
  40ee34:	shl    rax,0x5
  40ee38:	add    rax,QWORD PTR [rbp+0x118]
  40ee3f:	movzx  r9d,WORD PTR [rax+0x10]
  40ee44:	mov    eax,DWORD PTR [rbp+0x78]
  40ee47:	cmp    eax,0x1
  40ee4a:	jne    0x40ec61
  40ee50:	mov    rax,QWORD PTR [rbp+0x98]
  40ee57:	mov    DWORD PTR [rsp+0x20],r9d
  40ee5c:	mov    rdx,rbx
  40ee5f:	mov    r9d,DWORD PTR [rbp+0xc0]
  40ee66:	mov    r8,QWORD PTR [rbp+0x90]
  40ee6d:	lea    r12,[rax+r14*1]
  40ee71:	mov    rax,QWORD PTR [rbp+0x70]
  40ee75:	mov    rcx,r12
  40ee78:	mov    QWORD PTR [rsp+0x28],rax
  40ee7d:	call   0x40e250
  40ee82:	jmp    0x40ecb0
  40ee87:	nop    WORD PTR [rax+rax*1+0x0]
  40ee90:	mov    rax,QWORD PTR [r13+0x50]
  40ee94:	shl    rax,0x5
  40ee98:	add    rax,QWORD PTR [rbp+0x118]
  40ee9f:	movsx  r9d,BYTE PTR [rax+0x10]
  40eea4:	mov    eax,DWORD PTR [rbp+0x78]
  40eea7:	cmp    eax,0x1
  40eeaa:	jne    0x40ec61
  40eeb0:	jmp    0x40ee50
  40eeb2:	mov    rax,QWORD PTR [r13+0x50]
  40eeb6:	shl    rax,0x5
  40eeba:	add    rax,QWORD PTR [rbp+0x118]
  40eec1:	movsd  xmm0,QWORD PTR [rax+0x10]
  40eec6:	mov    eax,DWORD PTR [rbp+0x78]
  40eec9:	cmp    eax,0x1
  40eecc:	je     0x40f802
  40eed2:	cmp    eax,0x2
  40eed5:	mov    rax,QWORD PTR [rbp+0x98]
  40eedc:	lea    r12,[rax+r14*1]
  40eee0:	mov    rax,QWORD PTR [rbp+0x70]
  40eee4:	jne    0x40f3c4
  40eeea:	mov    QWORD PTR [rsp+0x30],rax
  40eeef:	mov    eax,DWORD PTR [rbp+0xc4]
  40eef5:	movsd  QWORD PTR [rsp+0x28],xmm0
  40eefb:	mov    r9d,DWORD PTR [rbp+0xc0]
  40ef02:	mov    r8,QWORD PTR [rbp+0x90]
  40ef09:	mov    rdx,rbx
  40ef0c:	mov    rcx,r12
  40ef0f:	mov    DWORD PTR [rsp+0x20],eax
  40ef13:	call   0x40e250
  40ef18:	jmp    0x40ecb0
  40ef1d:	nop    DWORD PTR [rax]
  40ef20:	mov    rax,QWORD PTR [r13+0x50]
  40ef24:	shl    rax,0x5
  40ef28:	add    rax,QWORD PTR [rbp+0x118]
  40ef2f:	fld    TBYTE PTR [rax+0x10]
  40ef32:	mov    eax,DWORD PTR [rbp+0x78]
  40ef35:	cmp    eax,0x1
  40ef38:	fstp   TBYTE PTR [rbp+0xa0]
  40ef3e:	je     0x40f7e0
  40ef44:	cmp    eax,0x2
  40ef47:	mov    rax,QWORD PTR [rbp+0x98]
  40ef4e:	lea    r12,[rax+r14*1]
  40ef52:	mov    rax,QWORD PTR [rbp+0x70]
  40ef56:	jne    0x40f3a4
  40ef5c:	mov    QWORD PTR [rsp+0x30],rax
  40ef61:	mov    rax,QWORD PTR [rbp+0x40]
  40ef65:	mov    QWORD PTR [rsp+0x28],rax
  40ef6a:	jmp    0x40ede1
  40ef6f:	nop
  40ef70:	mov    rax,QWORD PTR [r13+0x50]
  40ef74:	shl    rax,0x5
  40ef78:	add    rax,QWORD PTR [rbp+0x118]
  40ef7f:	movsx  r9d,WORD PTR [rax+0x10]
  40ef84:	mov    eax,DWORD PTR [rbp+0x78]
  40ef87:	cmp    eax,0x1
  40ef8a:	jne    0x40ec61
  40ef90:	jmp    0x40ee50
  40ef95:	mov    rax,QWORD PTR [r13+0x50]
  40ef99:	shl    rax,0x5
  40ef9d:	add    rax,QWORD PTR [rbp+0x118]
  40efa4:	movzx  r9d,BYTE PTR [rax+0x10]
  40efa9:	mov    eax,DWORD PTR [rbp+0x78]
  40efac:	cmp    eax,0x1
  40efaf:	jne    0x40ec61
  40efb5:	jmp    0x40ee50
  40efba:	nop    WORD PTR [rax+rax*1+0x0]
  40efc0:	call   0x4178c8
  40efc5:	mov    r8,QWORD PTR [rbp+0x90]
  40efcc:	mov    QWORD PTR [rsp+0x20],rax
  40efd1:	mov    rdx,rbx
  40efd4:	mov    rcx,r12
  40efd7:	call   0x40e250
  40efdc:	jmp    0x40ecb0
  40efe1:	mov    esi,0xc
  40efe6:	jmp    0x40ed37
  40efeb:	nop    DWORD PTR [rax+rax*1+0x0]
  40eff0:	mov    rcx,rsi
  40eff3:	call   0x410000
  40eff8:	mov    r9,rax
  40effb:	jmp    0x40ed7c
  40f000:	mov    rcx,r12
  40f003:	call   0x410000
  40f008:	movzx  r8d,BYTE PTR [rbp+0x68]
  40f00d:	mov    QWORD PTR [rbp+0x98],rax
  40f014:	jmp    0x40e920
  40f019:	nop    DWORD PTR [rax+0x0]
  40f020:	mov    QWORD PTR [rbp+0x98],rbx
  40f027:	jmp    0x40e94a
  40f02c:	nop    DWORD PTR [rax+0x0]
  40f030:	mov    DWORD PTR [rbp+0x78],edx
  40f033:	jmp    0x40e6b0
  40f038:	nop    DWORD PTR [rax+rax*1+0x0]
  40f040:	xor    edx,edx
  40f042:	jmp    0x40e67e
  40f047:	nop    WORD PTR [rax+rax*1+0x0]
  40f050:	test   eax,eax
  40f052:	jns    0x40ecd6
  40f058:	movzx  eax,BYTE PTR [r13+0x48]
  40f05d:	mov    rcx,QWORD PTR [r13+0x50]
  40f061:	sub    eax,0x41
  40f064:	cmp    al,0x37
  40f066:	ja     0x40efc0
  40f06c:	lea    rdx,[rip+0xe9e9]        # 0x41da5c
  40f073:	movzx  eax,al
  40f076:	movsxd rax,DWORD PTR [rdx+rax*4]
  40f07a:	add    rdx,rax
  40f07d:	jmp    rdx
  40f07f:	nop
  40f080:	cmp    rcx,0xffffffffffffffff
  40f084:	je     0x40e740
  40f08a:	call   0x410000
  40f08f:	test   rax,rax
  40f092:	mov    QWORD PTR [rbp+0x90],rax
  40f099:	je     0x40e740
  40f09f:	cmp    QWORD PTR [rbp+0x4e0],0x0
  40f0a7:	mov    rax,QWORD PTR [rbp+0x90]
  40f0ae:	mov    QWORD PTR [rbp+0x50],rax
  40f0b2:	jne    0x40e354
  40f0b8:	xor    r12d,r12d
  40f0bb:	jmp    0x40e35e
  40f0c0:	mov    r8,QWORD PTR [rbp+0x90]
  40f0c7:	mov    QWORD PTR [rsp+0x20],rax
  40f0cc:	mov    rdx,rbx
  40f0cf:	mov    rcx,r12
  40f0d2:	call   0x40e250
  40f0d7:	jmp    0x40ecb0
  40f0dc:	mov    r8,QWORD PTR [r13+0x30]
  40f0e0:	mov    r11,QWORD PTR [r13+0x38]
  40f0e4:	mov    QWORD PTR [rbp+0x68],0x0
  40f0ec:	mov    DWORD PTR [rbp+0x88],0x0
  40f0f6:	cmp    r8,r11
  40f0f9:	jne    0x40eafb
  40f0ff:	mov    rsi,QWORD PTR [rax+0x10]
  40f103:	mov    rcx,rsi
  40f106:	xor    edi,edi
  40f108:	xor    r15d,r15d
  40f10b:	call   0x417758
  40f110:	lea    rax,[rsi+rax*2]
  40f114:	mov    QWORD PTR [rbp+0x98],rax
  40f11b:	xor    r9d,r9d
  40f11e:	mov    QWORD PTR [rbp+0x30],0x0
  40f126:	mov    rcx,QWORD PTR [rbp+0x68]
  40f12a:	cmp    QWORD PTR [rbp+0x30],rcx
  40f12e:	jae    0x40f5f1
  40f134:	test   BYTE PTR [r13+0x10],0x2
  40f139:	jne    0x40f5f1
  40f13f:	mov    r11,QWORD PTR [rbp+0x68]
  40f143:	sub    r11,QWORD PTR [rbp+0x30]
  40f147:	mov    rax,r11
  40f14a:	add    rax,r14
  40f14d:	mov    rcx,rax
  40f150:	mov    QWORD PTR [rbp+0x88],rax
  40f157:	mov    rax,0xffffffffffffffff
  40f15e:	cmovae rax,rcx
  40f162:	cmp    r12,rax
  40f165:	jae    0x40ff27
  40f16b:	test   r12,r12
  40f16e:	je     0x40fef2
  40f174:	js     0x40f1a0
  40f176:	add    r12,r12
  40f179:	cmp    r14,rcx
  40f17c:	ja     0x40f1a0
  40f17e:	cmp    r12,QWORD PTR [rbp+0x88]
  40f185:	jae    0x40f54e
  40f18b:	mov    rax,QWORD PTR [rbp+0x88]
  40f192:	mov    r12,rax
  40f195:	add    rax,0x1
  40f199:	jne    0x40f54e
  40f19f:	nop
  40f1a0:	mov    QWORD PTR [rbp+0x98],rbx
  40f1a7:	nop    WORD PTR [rax+rax*1+0x0]
  40f1b0:	mov    rax,QWORD PTR [rip+0x14461]        # 0x423618
  40f1b7:	mov    QWORD PTR [rbp+0x68],rax
  40f1bb:	jmp    0x40e710
  40f1c0:	xor    r15d,r15d
  40f1c3:	movabs r11,0x1999999999999999
  40f1cd:	nop    DWORD PTR [rax]
  40f1d0:	add    rcx,0x1
  40f1d4:	movsx  eax,BYTE PTR [rcx-0x1]
  40f1d8:	mov    rdx,0xffffffffffffffff
  40f1df:	sub    eax,0x30
  40f1e2:	cmp    r15,r11
  40f1e5:	cdqe   
  40f1e7:	ja     0x40f1f0
  40f1e9:	lea    rdx,[r15+r15*4]
  40f1ed:	add    rdx,rdx
  40f1f0:	add    rdx,rax
  40f1f3:	mov    rax,0xffffffffffffffff
  40f1fa:	mov    r15,rdx
  40f1fd:	cmovb  r15,rax
  40f201:	cmp    rcx,r9
  40f204:	jne    0x40f1d0
  40f206:	jmp    0x40e50d
  40f20b:	nop    DWORD PTR [rax+rax*1+0x0]
  40f210:	add    rdx,0x1
  40f214:	xor    esi,esi
  40f216:	cmp    rcx,rdx
  40f219:	je     0x40e549
  40f21f:	movabs r9,0x1999999999999999
  40f229:	nop    DWORD PTR [rax+0x0]
  40f230:	add    rdx,0x1
  40f234:	movsx  eax,BYTE PTR [rdx-0x1]
  40f238:	mov    r10,0xffffffffffffffff
  40f23f:	sub    eax,0x30
  40f242:	cmp    rsi,r9
  40f245:	cdqe   
  40f247:	ja     0x40f250
  40f249:	lea    r10,[rsi+rsi*4]
  40f24d:	add    r10,r10
  40f250:	mov    rsi,r10
  40f253:	add    rsi,rax
  40f256:	mov    rax,0xffffffffffffffff
  40f25d:	cmovb  rsi,rax
  40f261:	cmp    rdx,rcx
  40f264:	jne    0x40f230
  40f266:	jmp    0x40e549
  40f26b:	nop    DWORD PTR [rax+rax*1+0x0]
  40f270:	mov    rdx,QWORD PTR [rbp+0x98]
  40f277:	mov    r8,r14
  40f27a:	mov    rcx,r9
  40f27d:	call   0x417820
  40f282:	mov    QWORD PTR [rbp+0x98],rax
  40f289:	jmp    0x40ea1c
  40f28e:	xchg   ax,ax
  40f290:	mov    rax,QWORD PTR [rbp+0x98]
  40f297:	mov    QWORD PTR [rsp+0x20],r9
  40f29c:	lea    r12,[rax+r14*1]
  40f2a0:	mov    rax,QWORD PTR [rbp+0x70]
  40f2a4:	mov    QWORD PTR [rsp+0x28],rax
  40f2a9:	mov    r9d,DWORD PTR [rbp+0xc0]
  40f2b0:	mov    r8,QWORD PTR [rbp+0x90]
  40f2b7:	mov    rdx,rbx
  40f2ba:	mov    rcx,r12
  40f2bd:	call   0x40e250
  40f2c2:	jmp    0x40ecb0
  40f2c7:	nop    WORD PTR [rax+rax*1+0x0]
  40f2d0:	or     r8d,0x2
  40f2d4:	neg    r15
  40f2d7:	jmp    0x40e50d
  40f2dc:	nop    DWORD PTR [rax+0x0]
  40f2e0:	xor    r15d,r15d
  40f2e3:	jmp    0x40e50d
  40f2e8:	nop    DWORD PTR [rax+rax*1+0x0]
  40f2f0:	mov    r12d,0xc
  40f2f6:	jmp    0x40e804
  40f2fb:	nop    DWORD PTR [rax+rax*1+0x0]
  40f300:	mov    rcx,r12
  40f303:	call   0x410000
  40f308:	mov    r9,rax
  40f30b:	jmp    0x40e840
  40f310:	xor    eax,eax
  40f312:	jmp    0x40e78b
  40f317:	nop    WORD PTR [rax+rax*1+0x0]
  40f320:	mov    BYTE PTR [rdi],0x4c
  40f323:	add    rdi,0x1
  40f327:	jmp    0x40e643
  40f32c:	nop    DWORD PTR [rax+0x0]
  40f330:	mov    rdx,rbx
  40f333:	mov    r8,r14
  40f336:	mov    rcx,r9
  40f339:	call   0x417820
  40f33e:	mov    rbx,rax
  40f341:	jmp    0x40e85a
  40f346:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f350:	mov    QWORD PTR [rax],r14
  40f353:	mov    r15,r14
  40f356:	mov    QWORD PTR [rbp+0x98],rbx
  40f35d:	jmp    0x40e866
  40f362:	mov    WORD PTR [rax],r14w
  40f366:	mov    r15,r14
  40f369:	mov    QWORD PTR [rbp+0x98],rbx
  40f370:	jmp    0x40e866
  40f375:	mov    BYTE PTR [rax],r14b
  40f378:	mov    r15,r14
  40f37b:	mov    QWORD PTR [rbp+0x98],rbx
  40f382:	jmp    0x40e866
  40f387:	nop    WORD PTR [rax+rax*1+0x0]
  40f390:	mov    BYTE PTR [rdi],0x49
  40f393:	mov    BYTE PTR [rdi+0x1],0x36
  40f397:	add    rdi,0x3
  40f39b:	mov    BYTE PTR [rdi-0x1],0x34
  40f39f:	jmp    0x40e643
  40f3a4:	mov    r9,QWORD PTR [rbp+0x40]
  40f3a8:	mov    r8,QWORD PTR [rbp+0x90]
  40f3af:	mov    rdx,rbx
  40f3b2:	mov    QWORD PTR [rsp+0x20],rax
  40f3b7:	mov    rcx,r12
  40f3ba:	call   0x40e250
  40f3bf:	jmp    0x40ecb0
  40f3c4:	mov    r8,QWORD PTR [rbp+0x90]
  40f3cb:	movapd xmm3,xmm0
  40f3cf:	movq   r9,xmm0
  40f3d4:	mov    QWORD PTR [rsp+0x20],rax
  40f3d9:	mov    rdx,rbx
  40f3dc:	mov    rcx,r12
  40f3df:	call   0x40e250
  40f3e4:	jmp    0x40ecb0
  40f3e9:	nop    DWORD PTR [rax+0x0]
  40f3f0:	mov    rcx,rax
  40f3f3:	call   0x417860
  40f3f8:	jmp    0x40e729
  40f3fd:	cmp    DWORD PTR [rbp+0x88],0x10
  40f404:	je     0x40efc0
  40f40a:	mov    rax,rcx
  40f40d:	mov    edx,DWORD PTR [rbp+0x28]
  40f410:	shl    rax,0x5
  40f414:	add    rax,QWORD PTR [rbp+0x118]
  40f41b:	test   edx,edx
  40f41d:	mov    rcx,QWORD PTR [rax+0x10]
  40f421:	jne    0x40ffce
  40f427:	call   0x4177b8
  40f42c:	cmp    r15,rax
  40f42f:	jbe    0x40ff37
  40f435:	lea    rdx,[r15+0x1]
  40f439:	mov    rax,r15
  40f43c:	cmp    rdx,rax
  40f43f:	jae    0x40fdd7
  40f445:	mov    rdx,0xffffffffffffffff
  40f44c:	add    rdx,r14
  40f44f:	mov    rax,0xffffffffffffffff
  40f456:	cmovb  rdx,rax
  40f45a:	test   rsi,rsi
  40f45d:	js     0x40ff2f
  40f463:	lea    r8,[rsi+rsi*1]
  40f467:	lea    rcx,[r8+0xc]
  40f46b:	cmp    r8,rcx
  40f46e:	ja     0x40ed25
  40f474:	cmp    rdx,rcx
  40f477:	cmovb  rdx,rcx
  40f47b:	cmp    rsi,rdx
  40f47e:	mov    rax,rdx
  40f481:	jae    0x40ea1c
  40f487:	jmp    0x40ed25
  40f48c:	mov    eax,0x13
  40f491:	jmp    0x40f42c
  40f493:	mov    rcx,QWORD PTR [rbp+0x10]
  40f497:	cmp    QWORD PTR [rbp-0x18],rcx
  40f49b:	ja     0x40f52d
  40f4a1:	mov    rax,QWORD PTR [rbp+0x10]
  40f4a5:	jmp    0x40f42c
  40f4a7:	xor    edx,edx
  40f4a9:	mov    r11,QWORD PTR [rbp-0x38]
  40f4ad:	cmp    QWORD PTR [rbp+0x20],r11
  40f4b1:	mov    rax,0xffffffffffffffff
  40f4b8:	jb     0x40f43c
  40f4ba:	mov    r11,QWORD PTR [rbp+0x18]
  40f4be:	cmp    QWORD PTR [rbp+0x20],r11
  40f4c2:	ja     0x40f43c
  40f4c8:	mov    rax,QWORD PTR [rbp+0x18]
  40f4cc:	jmp    0x40f42c
  40f4d1:	cmp    DWORD PTR [rbp+0x88],0xe
  40f4d8:	mov    eax,0x1
  40f4dd:	jne    0x40f42c
  40f4e3:	mov    rax,QWORD PTR [rip+0xf016]        # 0x41e500
  40f4ea:	mov    rax,QWORD PTR [rax]
  40f4ed:	movsxd rax,DWORD PTR [rax]
  40f4f0:	jmp    0x40f42c
  40f4f5:	mov    rcx,QWORD PTR [rbp+0x8]
  40f4f9:	cmp    QWORD PTR [rbp-0x20],rcx
  40f4fd:	ja     0x40f52d
  40f4ff:	mov    rax,QWORD PTR [rbp+0x8]
  40f503:	jmp    0x40f42c
  40f508:	mov    rcx,QWORD PTR [rbp+0x0]
  40f50c:	cmp    QWORD PTR [rbp-0x28],rcx
  40f510:	ja     0x40f52d
  40f512:	mov    rax,QWORD PTR [rbp+0x0]
  40f516:	jmp    0x40f42c
  40f51b:	mov    rax,QWORD PTR [rbp-0x10]
  40f51f:	add    rax,0xc
  40f523:	cmp    rax,0xb
  40f527:	ja     0x40f42c
  40f52d:	xor    edx,edx
  40f52f:	mov    rax,0xffffffffffffffff
  40f536:	jmp    0x40f43c
  40f53b:	mov    rcx,QWORD PTR [rbp-0x30]
  40f53f:	cmp    QWORD PTR [rbp-0x8],rcx
  40f543:	jb     0x40f52d
  40f545:	mov    rax,QWORD PTR [rbp-0x8]
  40f549:	jmp    0x40f42c
  40f54e:	cmp    rbx,QWORD PTR [rbp+0x4e0]
  40f555:	mov    DWORD PTR [rbp+0x20],r9d
  40f559:	mov    QWORD PTR [rbp+0x78],r11
  40f55d:	sete   r8b
  40f561:	test   rbx,rbx
  40f564:	mov    BYTE PTR [rbp+0x28],r8b
  40f568:	je     0x40ff0a
  40f56e:	test   r8b,r8b
  40f571:	jne    0x40ff0a
  40f577:	mov    rdx,r12
  40f57a:	mov    rcx,rbx
  40f57d:	call   0x410d10
  40f582:	movzx  r8d,BYTE PTR [rbp+0x28]
  40f587:	mov    r9d,DWORD PTR [rbp+0x20]
  40f58b:	mov    r10,rax
  40f58e:	mov    r11,QWORD PTR [rbp+0x78]
  40f592:	test   r10,r10
  40f595:	je     0x40f1a0
  40f59b:	test   r14,r14
  40f59e:	je     0x40f5c6
  40f5a0:	test   r8b,r8b
  40f5a3:	je     0x40f5c6
  40f5a5:	mov    rcx,r10
  40f5a8:	mov    r8,r14
  40f5ab:	mov    rdx,rbx
  40f5ae:	mov    DWORD PTR [rbp+0x28],r9d
  40f5b2:	mov    QWORD PTR [rbp+0x78],r11
  40f5b6:	call   0x417820
  40f5bb:	mov    r11,QWORD PTR [rbp+0x78]
  40f5bf:	mov    r9d,DWORD PTR [rbp+0x28]
  40f5c3:	mov    r10,rax
  40f5c6:	lea    rcx,[r10+r14*1]
  40f5ca:	mov    r8,r11
  40f5cd:	mov    edx,0x20
  40f5d2:	mov    DWORD PTR [rbp+0x28],r9d
  40f5d6:	mov    QWORD PTR [rbp+0x78],r10
  40f5da:	call   0x417810
  40f5df:	mov    r10,QWORD PTR [rbp+0x78]
  40f5e3:	mov    r14,QWORD PTR [rbp+0x88]
  40f5ea:	mov    r9d,DWORD PTR [rbp+0x28]
  40f5ee:	mov    rbx,r10
  40f5f1:	or     r9d,r15d
  40f5f4:	je     0x40f8f0
  40f5fa:	mov    rdx,rdi
  40f5fd:	mov    rax,0xffffffffffffffff
  40f604:	mov    DWORD PTR [rbp+0xb4],0x0
  40f60e:	add    rdx,r14
  40f611:	cmovae rax,rdx
  40f615:	cmp    rax,r12
  40f618:	jbe    0x40faf5
  40f61e:	test   r12,r12
  40f621:	je     0x40fa8f
  40f627:	js     0x40f635
  40f629:	add    r12,r12
  40f62c:	cmp    rdx,r14
  40f62f:	jae    0x40fa9e
  40f635:	mov    rax,QWORD PTR [rip+0x13fdc]        # 0x423618
  40f63c:	mov    QWORD PTR [rbp+0x98],rbx
  40f643:	mov    QWORD PTR [rbp+0x68],rax
  40f647:	jmp    0x40e710
  40f64c:	nop    DWORD PTR [rax+0x0]
  40f650:	mov    rax,QWORD PTR [rbp+0x60]
  40f654:	mov    rcx,QWORD PTR [rbp+0x208]
  40f65b:	add    rax,0x20
  40f65f:	cmp    rcx,rax
  40f662:	je     0x40f669
  40f664:	call   0x417860
  40f669:	mov    rax,QWORD PTR [rbp+0x58]
  40f66d:	mov    rcx,QWORD PTR [rbp+0x118]
  40f674:	add    rax,0x10
  40f678:	cmp    rcx,rax
  40f67b:	je     0x40f682
  40f67d:	call   0x417860
  40f682:	call   QWORD PTR [rip+0x13f90]        # 0x423618
  40f688:	mov    DWORD PTR [rax],0x16
  40f68e:	xor    eax,eax
  40f690:	jmp    0x40e78b
  40f695:	mov    rax,rbx
  40f698:	lea    rsi,[r14+0x1]
  40f69c:	mov    r15,rbx
  40f69f:	mov    QWORD PTR [rbp+0x98],rax
  40f6a6:	mov    rax,0xffffffffffffffff
  40f6ad:	mov    rbx,r12
  40f6b0:	cmp    rsi,r14
  40f6b3:	mov    rdx,rax
  40f6b6:	cmovae rdx,rsi
  40f6ba:	cmp    rdx,r12
  40f6bd:	jbe    0x40f748
  40f6c3:	test   r12,r12
  40f6c6:	je     0x40fdba
  40f6cc:	js     0x40ff86
  40f6d2:	add    rbx,rbx
  40f6d5:	cmp    rsi,r14
  40f6d8:	mov    rax,rsi
  40f6db:	jae    0x40f6e4
  40f6dd:	mov    rax,0xffffffffffffffff
  40f6e4:	cmp    rax,rbx
  40f6e7:	jbe    0x40f6f5
  40f6e9:	cmp    rsi,r14
  40f6ec:	jb     0x40f1b0
  40f6f2:	mov    rbx,rsi
  40f6f5:	cmp    rbx,0xffffffffffffffff
  40f6f9:	je     0x40f1b0
  40f6ff:	cmp    QWORD PTR [rbp+0x4e0],r15
  40f706:	sete   dil
  40f70a:	test   r15,r15
  40f70d:	je     0x40fe7e
  40f713:	test   dil,dil
  40f716:	jne    0x40fe7e
  40f71c:	mov    rdx,rbx
  40f71f:	mov    rcx,r15
  40f722:	call   0x410d10
  40f727:	mov    r9,rax
  40f72a:	test   r9,r9
  40f72d:	je     0x40f1b0
  40f733:	test   r14,r14
  40f736:	je     0x40f741
  40f738:	test   dil,dil
  40f73b:	jne    0x40fed8
  40f741:	mov    QWORD PTR [rbp+0x98],r9
  40f748:	mov    rax,QWORD PTR [rbp+0x98]
  40f74f:	cmp    rax,QWORD PTR [rbp+0x4e0]
  40f756:	mov    BYTE PTR [rax+r14*1],0x0
  40f75b:	je     0x40f77e
  40f75d:	cmp    rbx,rsi
  40f760:	jbe    0x40f77e
  40f762:	mov    rdx,rsi
  40f765:	mov    rcx,rax
  40f768:	mov    rdi,rax
  40f76b:	call   0x410d10
  40f770:	test   rax,rax
  40f773:	cmove  rax,rdi
  40f777:	mov    QWORD PTR [rbp+0x98],rax
  40f77e:	mov    rax,QWORD PTR [rbp+0x50]
  40f782:	test   rax,rax
  40f785:	je     0x40f78f
  40f787:	mov    rcx,rax
  40f78a:	call   0x417860
  40f78f:	mov    rax,QWORD PTR [rbp+0x60]
  40f793:	mov    rcx,QWORD PTR [rbp+0x208]
  40f79a:	add    rax,0x20
  40f79e:	cmp    rcx,rax
  40f7a1:	je     0x40f7a8
  40f7a3:	call   0x417860
  40f7a8:	mov    rax,QWORD PTR [rbp+0x58]
  40f7ac:	mov    rcx,QWORD PTR [rbp+0x118]
  40f7b3:	add    rax,0x10
  40f7b7:	cmp    rcx,rax
  40f7ba:	je     0x40f7c1
  40f7bc:	call   0x417860
  40f7c1:	mov    rax,QWORD PTR [rbp+0x4e8]
  40f7c8:	mov    QWORD PTR [rax],r14
  40f7cb:	mov    rax,QWORD PTR [rbp+0x98]
  40f7d2:	jmp    0x40e78b
  40f7d7:	nop    WORD PTR [rax+rax*1+0x0]
  40f7e0:	mov    rax,QWORD PTR [rbp+0x98]
  40f7e7:	lea    r12,[rax+r14*1]
  40f7eb:	mov    rax,QWORD PTR [rbp+0x70]
  40f7ef:	mov    QWORD PTR [rsp+0x28],rax
  40f7f4:	mov    rax,QWORD PTR [rbp+0x40]
  40f7f8:	mov    QWORD PTR [rsp+0x20],rax
  40f7fd:	jmp    0x40f2a9
  40f802:	mov    rax,QWORD PTR [rbp+0x98]
  40f809:	mov    r9d,DWORD PTR [rbp+0xc0]
  40f810:	movsd  QWORD PTR [rsp+0x20],xmm0
  40f816:	mov    r8,QWORD PTR [rbp+0x90]
  40f81d:	mov    rdx,rbx
  40f820:	lea    r12,[rax+r14*1]
  40f824:	mov    rax,QWORD PTR [rbp+0x70]
  40f828:	mov    rcx,r12
  40f82b:	mov    QWORD PTR [rsp+0x28],rax
  40f830:	call   0x40e250
  40f835:	jmp    0x40ecb0
  40f83a:	nop    WORD PTR [rax+rax*1+0x0]
  40f840:	lea    r15,[rdx+r14*1]
  40f844:	mov    r12,rsi
  40f847:	call   QWORD PTR [rip+0x13dcb]        # 0x423618
  40f84d:	mov    edi,DWORD PTR [rbp+0x30]
  40f850:	mov    DWORD PTR [rax],edi
  40f852:	jmp    0x40e866
  40f857:	nop    WORD PTR [rax+rax*1+0x0]
  40f860:	mov    rax,QWORD PTR [rbp+0x98]
  40f867:	test   rax,rax
  40f86a:	je     0x40f881
  40f86c:	cmp    QWORD PTR [rbp+0x4e0],rax
  40f873:	je     0x40f881
  40f875:	mov    rcx,QWORD PTR [rbp+0x98]
  40f87c:	call   0x417860
  40f881:	mov    rax,QWORD PTR [rbp+0x50]
  40f885:	test   rax,rax
  40f888:	je     0x40f892
  40f88a:	mov    rcx,rax
  40f88d:	call   0x417860
  40f892:	mov    rax,QWORD PTR [rbp+0x60]
  40f896:	mov    rcx,QWORD PTR [rbp+0x208]
  40f89d:	add    rax,0x20
  40f8a1:	cmp    rcx,rax
  40f8a4:	je     0x40f8ab
  40f8a6:	call   0x417860
  40f8ab:	mov    rax,QWORD PTR [rbp+0x58]
  40f8af:	mov    rcx,QWORD PTR [rbp+0x118]
  40f8b6:	add    rax,0x10
  40f8ba:	cmp    rcx,rax
  40f8bd:	je     0x40f8c4
  40f8bf:	call   0x417860
  40f8c4:	call   QWORD PTR [rip+0x13d4e]        # 0x423618
  40f8ca:	mov    DWORD PTR [rax],0x84
  40f8d0:	xor    eax,eax
  40f8d2:	jmp    0x40e78b
  40f8d7:	nop    WORD PTR [rax+rax*1+0x0]
  40f8e0:	mov    rax,QWORD PTR [rbp+0x98]
  40f8e7:	mov    r15,rax
  40f8ea:	jmp    0x40e6ff
  40f8ef:	nop
  40f8f0:	cmp    rsi,QWORD PTR [rbp+0x98]
  40f8f7:	mov    DWORD PTR [rbp+0xb8],0x0
  40f901:	jae    0x40ffe4
  40f907:	movzx  edx,WORD PTR [rsi]
  40f90a:	test   dx,dx
  40f90d:	je     0x40efc0
  40f913:	lea    rax,[rbp+0xb8]
  40f91a:	mov    rdi,QWORD PTR [rbp+0x48]
  40f91e:	mov    QWORD PTR [rbp+0x28],r13
  40f922:	mov    QWORD PTR [rbp+0x88],rax
  40f929:	nop    DWORD PTR [rax+0x0]
  40f930:	mov    r8,QWORD PTR [rbp+0x88]
  40f937:	mov    rcx,rdi
  40f93a:	call   0x412b40
  40f93f:	test   eax,eax
  40f941:	jle    0x40fe8e
  40f947:	movsxd r13,eax
  40f94a:	mov    rax,0xffffffffffffffff
  40f951:	mov    r15,r13
  40f954:	add    r15,r14
  40f957:	cmovae rax,r15
  40f95b:	cmp    rax,r12
  40f95e:	jbe    0x40f9ee
  40f964:	test   r12,r12
  40f967:	je     0x40f990
  40f969:	js     0x40f973
  40f96b:	add    r12,r12
  40f96e:	cmp    r15,r14
  40f971:	jae    0x40f99b
  40f973:	mov    rax,QWORD PTR [rip+0x13c9e]        # 0x423618
  40f97a:	mov    QWORD PTR [rbp+0x98],rbx
  40f981:	mov    QWORD PTR [rbp+0x68],rax
  40f985:	jmp    0x40e710
  40f98a:	nop    WORD PTR [rax+rax*1+0x0]
  40f990:	cmp    r15,r14
  40f993:	jb     0x40f973
  40f995:	mov    r12d,0xc
  40f99b:	cmp    r12,r15
  40f99e:	jae    0x40f9b0
  40f9a0:	cmp    r15,0xffffffffffffffff
  40f9a4:	mov    r12,r15
  40f9a7:	je     0x40f973
  40f9a9:	nop    DWORD PTR [rax+0x0]
  40f9b0:	cmp    rbx,QWORD PTR [rbp+0x4e0]
  40f9b7:	sete   r8b
  40f9bb:	test   rbx,rbx
  40f9be:	mov    BYTE PTR [rbp+0x78],r8b
  40f9c2:	je     0x40fa22
  40f9c4:	test   r8b,r8b
  40f9c7:	jne    0x40fa22
  40f9c9:	mov    rdx,r12
  40f9cc:	mov    rcx,rbx
  40f9cf:	call   0x410d10
  40f9d4:	movzx  r8d,BYTE PTR [rbp+0x78]
  40f9d9:	mov    r10,rax
  40f9dc:	test   r10,r10
  40f9df:	je     0x40f973
  40f9e1:	test   r14,r14
  40f9e4:	je     0x40f9eb
  40f9e6:	test   r8b,r8b
  40f9e9:	jne    0x40fa34
  40f9eb:	mov    rbx,r10
  40f9ee:	lea    rcx,[rbx+r14*1]
  40f9f2:	mov    r8,r13
  40f9f5:	mov    rdx,rdi
  40f9f8:	add    rsi,0x2
  40f9fc:	call   0x417820
  40fa01:	cmp    rsi,QWORD PTR [rbp+0x98]
  40fa08:	jae    0x40feb8
  40fa0e:	movzx  edx,WORD PTR [rsi]
  40fa11:	test   dx,dx
  40fa14:	je     0x40efc0
  40fa1a:	mov    r14,r15
  40fa1d:	jmp    0x40f930
  40fa22:	mov    rcx,r12
  40fa25:	call   0x410000
  40fa2a:	movzx  r8d,BYTE PTR [rbp+0x78]
  40fa2f:	mov    r10,rax
  40fa32:	jmp    0x40f9dc
  40fa34:	mov    rdx,rbx
  40fa37:	mov    r8,r14
  40fa3a:	mov    rcx,r10
  40fa3d:	call   0x417820
  40fa42:	mov    rbx,rax
  40fa45:	jmp    0x40f9ee
  40fa47:	nop    WORD PTR [rax+rax*1+0x0]
  40fa50:	mov    r13,QWORD PTR [rbp+0x98]
  40fa57:	mov    rsi,QWORD PTR [rbp+0x30]
  40fa5b:	mov    QWORD PTR [rbp+0x98],r12
  40fa62:	mov    r12,QWORD PTR [rbp+0x78]
  40fa66:	mov    ecx,DWORD PTR [rbp+0x88]
  40fa6c:	mov    r15d,0x1
  40fa72:	test   ecx,ecx
  40fa74:	je     0x40f11b
  40fa7a:	mov    QWORD PTR [rbp+0x30],rdi
  40fa7e:	mov    r9d,0x1
  40fa84:	mov    r15d,0x1
  40fa8a:	jmp    0x40f126
  40fa8f:	cmp    rdx,r14
  40fa92:	jb     0x40f635
  40fa98:	mov    r12d,0xc
  40fa9e:	cmp    r12,rdx
  40faa1:	jae    0x40fab0
  40faa3:	cmp    rdx,0xffffffffffffffff
  40faa7:	je     0x40f635
  40faad:	mov    r12,rdx
  40fab0:	cmp    rbx,QWORD PTR [rbp+0x4e0]
  40fab7:	sete   r15b
  40fabb:	test   rbx,rbx
  40fabe:	je     0x40fec8
  40fac4:	test   r15b,r15b
  40fac7:	jne    0x40fec8
  40facd:	mov    rdx,r12
  40fad0:	mov    rcx,rbx
  40fad3:	call   0x410d10
  40fad8:	mov    r9,rax
  40fadb:	test   r9,r9
  40fade:	je     0x40f635
  40fae4:	test   r14,r14
  40fae7:	je     0x40faf2
  40fae9:	test   r15b,r15b
  40faec:	jne    0x40ff40
  40faf2:	mov    rbx,r9
  40faf5:	test   rdi,rdi
  40faf8:	je     0x40ffdc
  40fafe:	movzx  edx,WORD PTR [rsi]
  40fb01:	test   dx,dx
  40fb04:	je     0x40efc0
  40fb0a:	mov    r15,r14
  40fb0d:	mov    QWORD PTR [rbp+0x88],r13
  40fb14:	mov    QWORD PTR [rbp+0x78],r12
  40fb18:	mov    r13,QWORD PTR [rbp+0x48]
  40fb1c:	mov    r14,QWORD PTR [rbp+0x38]
  40fb20:	jmp    0x40fb2e
  40fb22:	movzx  edx,WORD PTR [rsi]
  40fb25:	test   dx,dx
  40fb28:	je     0x40efc0
  40fb2e:	mov    r8,r14
  40fb31:	mov    rcx,r13
  40fb34:	call   0x412b40
  40fb39:	test   eax,eax
  40fb3b:	jle    0x40efc0
  40fb41:	movsxd r12,eax
  40fb44:	lea    rcx,[rbx+r15*1]
  40fb48:	mov    rdx,r13
  40fb4b:	mov    r8,r12
  40fb4e:	add    r15,r12
  40fb51:	add    rsi,0x2
  40fb55:	call   0x417820
  40fb5a:	sub    rdi,r12
  40fb5d:	jne    0x40fb22
  40fb5f:	mov    r13,QWORD PTR [rbp+0x88]
  40fb66:	mov    r12,QWORD PTR [rbp+0x78]
  40fb6a:	cmp    rsi,QWORD PTR [rbp+0x98]
  40fb71:	jne    0x40efc0
  40fb77:	mov    QWORD PTR [rbp+0x98],rbx
  40fb7e:	mov    rdi,QWORD PTR [rbp+0x68]
  40fb82:	cmp    QWORD PTR [rbp+0x30],rdi
  40fb86:	jae    0x40e866
  40fb8c:	test   BYTE PTR [r13+0x10],0x2
  40fb91:	je     0x40e866
  40fb97:	sub    rdi,QWORD PTR [rbp+0x30]
  40fb9b:	mov    rax,0xffffffffffffffff
  40fba2:	mov    rbx,rdi
  40fba5:	add    rbx,r15
  40fba8:	cmovae rax,rbx
  40fbac:	cmp    r12,rax
  40fbaf:	jae    0x40ff7a
  40fbb5:	test   r12,r12
  40fbb8:	je     0x40ff56
  40fbbe:	js     0x40f1b0
  40fbc4:	add    r12,r12
  40fbc7:	cmp    r15,rbx
  40fbca:	ja     0x40f1b0
  40fbd0:	cmp    r12,rbx
  40fbd3:	jae    0x40fbe2
  40fbd5:	cmp    rbx,0xffffffffffffffff
  40fbd9:	mov    r12,rbx
  40fbdc:	je     0x40f1b0
  40fbe2:	mov    rax,QWORD PTR [rbp+0x98]
  40fbe9:	cmp    rax,QWORD PTR [rbp+0x4e0]
  40fbf0:	sete   sil
  40fbf4:	test   rax,rax
  40fbf7:	je     0x40ff6a
  40fbfd:	test   sil,sil
  40fc00:	jne    0x40ff6a
  40fc06:	mov    rcx,QWORD PTR [rbp+0x98]
  40fc0d:	mov    rdx,r12
  40fc10:	call   0x410d10
  40fc15:	mov    r14,rax
  40fc18:	test   r14,r14
  40fc1b:	je     0x40f1b0
  40fc21:	test   r15,r15
  40fc24:	je     0x40fc3d
  40fc26:	test   sil,sil
  40fc29:	je     0x40fc3d
  40fc2b:	mov    rdx,QWORD PTR [rbp+0x98]
  40fc32:	mov    r8,r15
  40fc35:	mov    rcx,r14
  40fc38:	call   0x417820
  40fc3d:	lea    rcx,[r14+r15*1]
  40fc41:	mov    r8,rdi
  40fc44:	mov    edx,0x20
  40fc49:	mov    r15,rbx
  40fc4c:	call   0x417810
  40fc51:	mov    QWORD PTR [rbp+0x98],r14
  40fc58:	jmp    0x40e866
  40fc5d:	mov    rsi,QWORD PTR [rax+0x10]
  40fc61:	mov    eax,DWORD PTR [rbp+0x88]
  40fc67:	test   eax,eax
  40fc69:	je     0x40f103
  40fc6f:	movzx  edx,WORD PTR [rsi]
  40fc72:	mov    DWORD PTR [rbp+0xc0],0x0
  40fc7c:	test   dx,dx
  40fc7f:	je     0x40ffac
  40fc85:	lea    rax,[rbp+0xc0]
  40fc8c:	mov    QWORD PTR [rbp+0x98],r13
  40fc93:	xor    edi,edi
  40fc95:	mov    QWORD PTR [rbp+0x88],rsi
  40fc9c:	mov    r15,QWORD PTR [rbp+0x48]
  40fca0:	mov    r13,rax
  40fca3:	jmp    0x40fcba
  40fca5:	add    rsi,0x2
  40fca9:	movzx  edx,WORD PTR [rsi]
  40fcac:	cdqe   
  40fcae:	add    rdi,rax
  40fcb1:	test   dx,dx
  40fcb4:	je     0x40fd81
  40fcba:	mov    r8,r13
  40fcbd:	mov    rcx,r15
  40fcc0:	call   0x412b40
  40fcc5:	test   eax,eax
  40fcc7:	jns    0x40fca5
  40fcc9:	jmp    0x40ebb8
  40fcce:	add    r8,0x1
  40fcd2:	cmp    r11,r8
  40fcd5:	je     0x40ff97
  40fcdb:	xor    r15d,r15d
  40fcde:	movabs r10,0x1999999999999999
  40fce8:	nop    DWORD PTR [rax+rax*1+0x0]
  40fcf0:	add    r8,0x1
  40fcf4:	movsx  edx,BYTE PTR [r8-0x1]
  40fcf9:	mov    rcx,0xffffffffffffffff
  40fd00:	sub    edx,0x30
  40fd03:	cmp    r15,r10
  40fd06:	movsxd rdx,edx
  40fd09:	ja     0x40fd12
  40fd0b:	lea    rcx,[r15+r15*4]
  40fd0f:	add    rcx,rcx
  40fd12:	add    rcx,rdx
  40fd15:	mov    rdx,0xffffffffffffffff
  40fd1c:	mov    r15,rcx
  40fd1f:	cmovb  r15,rdx
  40fd23:	cmp    r8,r11
  40fd26:	jne    0x40fcf0
  40fd28:	jmp    0x40eb2a
  40fd2d:	xor    esi,esi
  40fd2f:	movabs r11,0x1999999999999999
  40fd39:	nop    DWORD PTR [rax+0x0]
  40fd40:	add    r8,0x1
  40fd44:	movsx  edx,BYTE PTR [r8-0x1]
  40fd49:	mov    rcx,0xffffffffffffffff
  40fd50:	sub    edx,0x30
  40fd53:	cmp    rsi,r11
  40fd56:	movsxd rdx,edx
  40fd59:	ja     0x40fd62
  40fd5b:	lea    rcx,[rsi+rsi*4]
  40fd5f:	add    rcx,rcx
  40fd62:	mov    rsi,rcx
  40fd65:	add    rsi,rdx
  40fd68:	mov    rdx,0xffffffffffffffff
  40fd6f:	cmovb  rsi,rdx
  40fd73:	cmp    r8,r9
  40fd76:	jne    0x40fd40
  40fd78:	mov    QWORD PTR [rbp+0x68],rsi
  40fd7c:	jmp    0x40eae0
  40fd81:	mov    r13,QWORD PTR [rbp+0x98]
  40fd88:	mov    QWORD PTR [rbp+0x98],rsi
  40fd8f:	mov    rsi,QWORD PTR [rbp+0x88]
  40fd96:	mov    QWORD PTR [rbp+0x30],rdi
  40fd9a:	mov    rdi,QWORD PTR [rbp+0x68]
  40fd9e:	cmp    QWORD PTR [rbp+0x30],rdi
  40fda2:	mov    rdi,QWORD PTR [rbp+0x30]
  40fda6:	jae    0x40f5fa
  40fdac:	xor    r15d,r15d
  40fdaf:	mov    r9d,0x1
  40fdb5:	jmp    0x40f134
  40fdba:	cmp    rsi,r14
  40fdbd:	jb     0x40f1b0
  40fdc3:	cmp    rsi,0xc
  40fdc7:	mov    ebx,0xc
  40fdcc:	jbe    0x40f6ff
  40fdd2:	jmp    0x40f6f2
  40fdd7:	cmp    rdx,rbx
  40fdda:	ja     0x40f44c
  40fde0:	movsxd rdx,DWORD PTR [rbp+0xbc]
  40fde7:	test   edx,edx
  40fde9:	jns    0x40ecdf
  40fdef:	call   QWORD PTR [rip+0x13823]        # 0x423618
  40fdf5:	mov    ebx,DWORD PTR [rax]
  40fdf7:	test   ebx,ebx
  40fdf9:	jne    0x40fe0f
  40fdfb:	movzx  eax,BYTE PTR [r13+0x48]
  40fe00:	mov    bl,0x2a
  40fe02:	and    eax,0xffffffef
  40fe05:	cmp    al,0x63
  40fe07:	mov    eax,0x16
  40fe0c:	cmovne ebx,eax
  40fe0f:	mov    rax,QWORD PTR [rbp+0x98]
  40fe16:	test   rax,rax
  40fe19:	je     0x40fe2c
  40fe1b:	cmp    QWORD PTR [rbp+0x4e0],rax
  40fe22:	je     0x40fe2c
  40fe24:	mov    rcx,rax
  40fe27:	call   0x417860
  40fe2c:	mov    rax,QWORD PTR [rbp+0x50]
  40fe30:	test   rax,rax
  40fe33:	je     0x40fe3d
  40fe35:	mov    rcx,rax
  40fe38:	call   0x417860
  40fe3d:	mov    rax,QWORD PTR [rbp+0x60]
  40fe41:	mov    rcx,QWORD PTR [rbp+0x208]
  40fe48:	add    rax,0x20
  40fe4c:	cmp    rcx,rax
  40fe4f:	je     0x40fe56
  40fe51:	call   0x417860
  40fe56:	mov    rax,QWORD PTR [rbp+0x58]
  40fe5a:	mov    rcx,QWORD PTR [rbp+0x118]
  40fe61:	add    rax,0x10
  40fe65:	cmp    rcx,rax
  40fe68:	je     0x40fe6f
  40fe6a:	call   0x417860
  40fe6f:	call   QWORD PTR [rip+0x137a3]        # 0x423618
  40fe75:	mov    DWORD PTR [rax],ebx
  40fe77:	xor    eax,eax
  40fe79:	jmp    0x40e78b
  40fe7e:	mov    rcx,rbx
  40fe81:	call   0x410000
  40fe86:	mov    r9,rax
  40fe89:	jmp    0x40f72a
  40fe8e:	test   rbx,rbx
  40fe91:	mov    QWORD PTR [rbp+0x98],rbx
  40fe98:	je     0x40ebce
  40fe9e:	cmp    QWORD PTR [rbp+0x4e0],rbx
  40fea5:	je     0x40ebce
  40feab:	mov    rcx,rbx
  40feae:	call   0x417860
  40feb3:	jmp    0x40ebce
  40feb8:	mov    r13,QWORD PTR [rbp+0x28]
  40febc:	mov    QWORD PTR [rbp+0x98],rbx
  40fec3:	jmp    0x40fb7e
  40fec8:	mov    rcx,r12
  40fecb:	call   0x410000
  40fed0:	mov    r9,rax
  40fed3:	jmp    0x40fadb
  40fed8:	mov    r8,r14
  40fedb:	mov    rdx,r15
  40fede:	mov    rcx,r9
  40fee1:	call   0x417820
  40fee6:	mov    QWORD PTR [rbp+0x98],rax
  40feed:	jmp    0x40f748
  40fef2:	cmp    r14,QWORD PTR [rbp+0x88]
  40fef9:	ja     0x40f1a0
  40feff:	mov    r12d,0xc
  40ff05:	jmp    0x40f17e
  40ff0a:	mov    rcx,r12
  40ff0d:	call   0x410000
  40ff12:	mov    r11,QWORD PTR [rbp+0x78]
  40ff16:	mov    r10,rax
  40ff19:	movzx  r8d,BYTE PTR [rbp+0x28]
  40ff1e:	mov    r9d,DWORD PTR [rbp+0x20]
  40ff22:	jmp    0x40f592
  40ff27:	mov    r10,rbx
  40ff2a:	jmp    0x40f5c6
  40ff2f:	mov    rdx,rax
  40ff32:	jmp    0x40f47b
  40ff37:	lea    rdx,[rax+0x1]
  40ff3b:	jmp    0x40f43c
  40ff40:	mov    rdx,rbx
  40ff43:	mov    r8,r14
  40ff46:	mov    rcx,r9
  40ff49:	call   0x417820
  40ff4e:	mov    rbx,rax
  40ff51:	jmp    0x40faf5
  40ff56:	cmp    r15,rbx
  40ff59:	ja     0x40f1b0
  40ff5f:	mov    r12d,0xc
  40ff65:	jmp    0x40fbd0
  40ff6a:	mov    rcx,r12
  40ff6d:	call   0x410000
  40ff72:	mov    r14,rax
  40ff75:	jmp    0x40fc18
  40ff7a:	mov    r14,QWORD PTR [rbp+0x98]
  40ff81:	jmp    0x40fc3d
  40ff86:	cmp    rsi,r14
  40ff89:	jae    0x40f1b0
  40ff8f:	mov    rbx,rax
  40ff92:	jmp    0x40f6dd
  40ff97:	mov    rax,QWORD PTR [rax+0x10]
  40ff9b:	xor    edi,edi
  40ff9d:	mov    QWORD PTR [rbp+0x98],rax
  40ffa4:	mov    rsi,rax
  40ffa7:	jmp    0x40fa66
  40ffac:	mov    QWORD PTR [rbp+0x98],rsi
  40ffb3:	mov    QWORD PTR [rbp+0x30],0x0
  40ffbb:	jmp    0x40fd9a
  40ffc0:	mov    QWORD PTR [rbp+0x98],rsi
  40ffc7:	xor    edi,edi
  40ffc9:	jmp    0x40fa66
  40ffce:	mov    rdx,QWORD PTR [rbp-0x10]
  40ffd2:	call   0x412880
  40ffd7:	jmp    0x40f42c
  40ffdc:	mov    r15,r14
  40ffdf:	jmp    0x40fb6a
  40ffe4:	mov    r15,r14
  40ffe7:	jmp    0x40fb77
  40ffec:	mov    rsi,QWORD PTR [rax+0x10]
  40fff0:	jmp    0x40fc6f
  40fff5:	mov    r12,rax
  40fff8:	jmp    0x40e8e8
  40fffd:	nop
  40fffe:	nop
  40ffff:	nop
  410000:	push   rbx
  410001:	sub    rsp,0x20
  410005:	call   0x417828
  41000a:	test   rax,rax
  41000d:	mov    rbx,rax
  410010:	je     0x410020
  410012:	mov    rax,rbx
  410015:	add    rsp,0x20
  410019:	pop    rbx
  41001a:	ret    
  41001b:	nop    DWORD PTR [rax+rax*1+0x0]
  410020:	call   QWORD PTR [rip+0x135f2]        # 0x423618
  410026:	mov    DWORD PTR [rax],0xc
  41002c:	mov    rax,rbx
  41002f:	add    rsp,0x20
  410033:	pop    rbx
  410034:	ret    
  410035:	nop
  410036:	nop
  410037:	nop
  410038:	nop
  410039:	nop
  41003a:	nop
  41003b:	nop
  41003c:	nop
  41003d:	nop
  41003e:	nop
  41003f:	nop
  410040:	xor    r9d,r9d
  410043:	cmp    QWORD PTR [rdx],0x0
  410047:	mov    rax,QWORD PTR [rdx+0x8]
  41004b:	lea    r10,[rip+0xdaf6]        # 0x41db48
  410052:	je     0x410088
  410054:	cmp    DWORD PTR [rax],0x16
  410057:	ja     0x410124
  41005d:	mov    r8d,DWORD PTR [rax]
  410060:	movsxd r8,DWORD PTR [r10+r8*4]
  410064:	add    r8,r10
  410067:	jmp    r8
  41006a:	nop    WORD PTR [rax+rax*1+0x0]
  410070:	mov    r8,QWORD PTR [rcx]
  410073:	add    rcx,0x8
  410077:	mov    QWORD PTR [rax+0x10],r8
  41007b:	add    r9,0x1
  41007f:	add    rax,0x20
  410083:	cmp    QWORD PTR [rdx],r9
  410086:	ja     0x410054
  410088:	xor    eax,eax
  41008a:	ret    
  41008b:	nop    DWORD PTR [rax+rax*1+0x0]
  410090:	mov    r8d,DWORD PTR [rcx]
  410093:	add    rcx,0x8
  410097:	mov    DWORD PTR [rax+0x10],r8d
  41009b:	jmp    0x41007b
  41009d:	nop    DWORD PTR [rax]
  4100a0:	mov    r8d,DWORD PTR [rcx]
  4100a3:	add    rcx,0x8
  4100a7:	mov    WORD PTR [rax+0x10],r8w
  4100ac:	jmp    0x41007b
  4100ae:	xchg   ax,ax
  4100b0:	mov    r8d,DWORD PTR [rcx]
  4100b3:	add    rcx,0x8
  4100b7:	mov    BYTE PTR [rax+0x10],r8b
  4100bb:	jmp    0x41007b
  4100bd:	nop    DWORD PTR [rax]
  4100c0:	movsd  xmm0,QWORD PTR [rcx]
  4100c4:	add    rcx,0x8
  4100c8:	movsd  QWORD PTR [rax+0x10],xmm0
  4100cd:	jmp    0x41007b
  4100cf:	nop
  4100d0:	mov    r8,QWORD PTR [rcx]
  4100d3:	add    rcx,0x8
  4100d7:	fld    TBYTE PTR [r8]
  4100da:	fstp   TBYTE PTR [rax+0x10]
  4100dd:	jmp    0x41007b
  4100df:	nop
  4100e0:	mov    r8,QWORD PTR [rcx]
  4100e3:	add    rcx,0x8
  4100e7:	test   r8,r8
  4100ea:	mov    QWORD PTR [rax+0x10],r8
  4100ee:	jne    0x41007b
  4100f0:	lea    r11,[rip+0xda49]        # 0x41db40
  4100f7:	mov    QWORD PTR [rax+0x10],r11
  4100fb:	jmp    0x41007b
  410100:	mov    r8,QWORD PTR [rcx]
  410103:	add    rcx,0x8
  410107:	test   r8,r8
  41010a:	mov    QWORD PTR [rax+0x10],r8
  41010e:	jne    0x41007b
  410114:	lea    r11,[rip+0xda89]        # 0x41dba4
  41011b:	mov    QWORD PTR [rax+0x10],r11
  41011f:	jmp    0x41007b
  410124:	mov    eax,0xffffffff
  410129:	ret    
  41012a:	nop
  41012b:	nop
  41012c:	nop
  41012d:	nop
  41012e:	nop
  41012f:	nop
  410130:	push   r15
  410132:	push   r14
  410134:	push   r13
  410136:	push   r12
  410138:	push   rbp
  410139:	push   rdi
  41013a:	push   rsi
  41013b:	push   rbx
  41013c:	sub    rsp,0x58
  410140:	xor    r10d,r10d
  410143:	mov    r14d,0x7
  410149:	lea    rax,[rdx+0x20]
  41014d:	lea    r15,[r8+0x10]
  410151:	mov    QWORD PTR [rdx],0x0
  410158:	mov    rbx,rcx
  41015b:	mov    r12,rdx
  41015e:	mov    r13,r8
  410161:	mov    QWORD PTR [rdx+0x8],rax
  410165:	mov    QWORD PTR [rsp+0x30],rax
  41016a:	mov    QWORD PTR [r8],0x0
  410171:	mov    QWORD PTR [r8+0x8],r15
  410175:	mov    r9,QWORD PTR [rdx+0x8]
  410179:	mov    rcx,QWORD PTR [rdx]
  41017c:	mov    QWORD PTR [rsp+0x20],0x0
  410185:	mov    QWORD PTR [rsp+0x28],0x7
  41018e:	mov    QWORD PTR [rsp+0x38],0x0
  410197:	jmp    0x4101ab
  410199:	nop    DWORD PTR [rax+0x0]
  4101a0:	cmp    al,0x25
  4101a2:	lea    r11,[rbx+0x1]
  4101a6:	je     0x4101e0
  4101a8:	mov    rbx,r11
  4101ab:	movzx  eax,BYTE PTR [rbx]
  4101ae:	test   al,al
  4101b0:	jne    0x4101a0
  4101b2:	lea    rax,[rcx+rcx*4]
  4101b6:	lea    rax,[rcx+rax*2]
  4101ba:	mov    QWORD PTR [r9+rax*8],rbx
  4101be:	mov    rax,QWORD PTR [rsp+0x20]
  4101c3:	mov    QWORD PTR [r12+0x10],r10
  4101c8:	mov    QWORD PTR [r12+0x18],rax
  4101cd:	xor    eax,eax
  4101cf:	add    rsp,0x58
  4101d3:	pop    rbx
  4101d4:	pop    rsi
  4101d5:	pop    rdi
  4101d6:	pop    rbp
  4101d7:	pop    r12
  4101d9:	pop    r13
  4101db:	pop    r14
  4101dd:	pop    r15
  4101df:	ret    
  4101e0:	lea    rax,[rcx+rcx*4]
  4101e4:	lea    rax,[rcx+rax*2]
  4101e8:	lea    rsi,[r9+rax*8]
  4101ec:	mov    QWORD PTR [rsi],rbx
  4101ef:	mov    DWORD PTR [rsi+0x10],0x0
  4101f6:	mov    QWORD PTR [rsi+0x18],0x0
  4101fe:	mov    QWORD PTR [rsi+0x20],0x0
  410206:	mov    QWORD PTR [rsi+0x28],0xffffffffffffffff
  41020e:	mov    QWORD PTR [rsi+0x30],0x0
  410216:	mov    QWORD PTR [rsi+0x38],0x0
  41021e:	mov    QWORD PTR [rsi+0x40],0xffffffffffffffff
  410226:	mov    QWORD PTR [rsi+0x50],0xffffffffffffffff
  41022e:	movsx  eax,BYTE PTR [rbx+0x1]
  410232:	lea    edx,[rax-0x30]
  410235:	cmp    dl,0x9
  410238:	jbe    0x410434
  41023e:	mov    rdi,0xffffffffffffffff
  410245:	lea    rcx,[r11+0x1]
  410249:	jmp    0x410277
  41024b:	nop    DWORD PTR [rax+rax*1+0x0]
  410250:	cmp    al,0x2d
  410252:	je     0x410285
  410254:	cmp    al,0x2b
  410256:	je     0x410290
  410258:	cmp    al,0x20
  41025a:	je     0x4102a0
  41025c:	cmp    al,0x23
  41025e:	je     0x4102b0
  410260:	cmp    al,0x30
  410262:	jne    0x4102b6
  410264:	or     DWORD PTR [rsi+0x10],0x20
  410268:	nop    DWORD PTR [rax+rax*1+0x0]
  410270:	movzx  eax,BYTE PTR [rcx]
  410273:	add    rcx,0x1
  410277:	cmp    al,0x27
  410279:	lea    rbx,[rcx-0x1]
  41027d:	jne    0x410250
  41027f:	or     DWORD PTR [rsi+0x10],0x1
  410283:	jmp    0x410270
  410285:	or     DWORD PTR [rsi+0x10],0x2
  410289:	jmp    0x410270
  41028b:	nop    DWORD PTR [rax+rax*1+0x0]
  410290:	or     DWORD PTR [rsi+0x10],0x4
  410294:	jmp    0x410270
  410296:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4102a0:	or     DWORD PTR [rsi+0x10],0x8
  4102a4:	jmp    0x410270
  4102a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4102b0:	or     DWORD PTR [rsi+0x10],0x10
  4102b4:	jmp    0x410270
  4102b6:	cmp    al,0x2a
  4102b8:	mov    rdx,rbx
  4102bb:	je     0x410531
  4102c1:	lea    ecx,[rax-0x30]
  4102c4:	cmp    cl,0x9
  4102c7:	jbe    0x4104d3
  4102cd:	cmp    al,0x2e
  4102cf:	je     0x410369
  4102d5:	xor    edx,edx
  4102d7:	mov    r8d,0x1
  4102dd:	jmp    0x410323
  4102df:	nop
  4102e0:	cmp    al,0x4c
  4102e2:	je     0x410350
  4102e4:	cmp    al,0x6c
  4102e6:	je     0x410360
  4102e8:	cmp    al,0x6a
  4102ea:	je     0x410340
  4102ec:	mov    ecx,eax
  4102ee:	and    ecx,0xffffffdf
  4102f1:	cmp    cl,0x5a
  4102f4:	je     0x410340
  4102f6:	cmp    al,0x74
  4102f8:	je     0x410340
  4102fa:	cmp    al,0x49
  4102fc:	jne    0x41050c
  410302:	cmp    BYTE PTR [rbx+0x1],0x36
  410306:	jne    0x4103ff
  41030c:	cmp    BYTE PTR [rbx+0x2],0x34
  410310:	jne    0x4103ff
  410316:	add    edx,0x10
  410319:	add    rbx,0x3
  41031d:	nop    DWORD PTR [rax]
  410320:	movzx  eax,BYTE PTR [rbx]
  410323:	cmp    al,0x68
  410325:	jne    0x4102e0
  410327:	mov    ecx,edx
  410329:	mov    eax,r8d
  41032c:	add    rbx,0x1
  410330:	and    ecx,0x1
  410333:	shl    eax,cl
  410335:	or     edx,eax
  410337:	jmp    0x410320
  410339:	nop    DWORD PTR [rax+0x0]
  410340:	add    edx,0x10
  410343:	add    rbx,0x1
  410347:	jmp    0x410320
  410349:	nop    DWORD PTR [rax+0x0]
  410350:	or     edx,0x4
  410353:	add    rbx,0x1
  410357:	jmp    0x410320
  410359:	nop    DWORD PTR [rax+0x0]
  410360:	add    edx,0x8
  410363:	add    rbx,0x1
  410367:	jmp    0x410320
  410369:	cmp    BYTE PTR [rbx+0x1],0x2a
  41036d:	jne    0x4105d7
  410373:	lea    rbp,[rbx+0x2]
  410377:	mov    QWORD PTR [rsi+0x30],rbx
  41037b:	cmp    QWORD PTR [rsp+0x20],0x1
  410381:	mov    QWORD PTR [rsi+0x38],rbp
  410385:	movsx  eax,BYTE PTR [rbx+0x2]
  410389:	lea    edx,[rax-0x30]
  41038c:	jbe    0x410830
  410392:	cmp    dl,0x9
  410395:	ja     0x410842
  41039b:	mov    rdx,rbp
  41039e:	add    rdx,0x1
  4103a2:	movzx  ecx,BYTE PTR [rdx]
  4103a5:	lea    r8d,[rcx-0x30]
  4103a9:	cmp    r8b,0x9
  4103ad:	jbe    0x41039e
  4103af:	cmp    cl,0x24
  4103b2:	jne    0x410842
  4103b8:	xor    ebx,ebx
  4103ba:	movabs rcx,0x1999999999999999
  4103c4:	sub    eax,0x30
  4103c7:	mov    rdx,0xffffffffffffffff
  4103ce:	cmp    rbx,rcx
  4103d1:	cdqe   
  4103d3:	ja     0x4103dc
  4103d5:	lea    rdx,[rbx+rbx*4]
  4103d9:	add    rdx,rdx
  4103dc:	add    rdx,rax
  4103df:	mov    rbx,rdx
  4103e2:	jae    0x410bbe
  4103e8:	add    rbp,0x1
  4103ec:	movsx  eax,BYTE PTR [rbp+0x0]
  4103f0:	mov    rbx,0xffffffffffffffff
  4103f7:	lea    edx,[rax-0x30]
  4103fa:	cmp    dl,0x9
  4103fd:	jbe    0x4103ba
  4103ff:	mov    rcx,QWORD PTR [r13+0x8]
  410403:	cmp    r15,rcx
  410406:	je     0x41040d
  410408:	call   0x417860
  41040d:	mov    rcx,QWORD PTR [r12+0x8]
  410412:	cmp    QWORD PTR [rsp+0x30],rcx
  410417:	je     0x41041e
  410419:	call   0x417860
  41041e:	call   QWORD PTR [rip+0x131f4]        # 0x423618
  410424:	mov    DWORD PTR [rax],0x16
  41042a:	mov    eax,0xffffffff
  41042f:	jmp    0x4101cf
  410434:	mov    rdx,r11
  410437:	nop    WORD PTR [rax+rax*1+0x0]
  410440:	add    rdx,0x1
  410444:	movzx  r8d,BYTE PTR [rdx]
  410448:	lea    ecx,[r8-0x30]
  41044c:	cmp    cl,0x9
  41044f:	jbe    0x410440
  410451:	cmp    r8b,0x24
  410455:	jne    0x41023e
  41045b:	mov    rcx,r11
  41045e:	xor    edi,edi
  410460:	jmp    0x41047c
  410462:	movsx  eax,BYTE PTR [rcx+0x1]
  410466:	lea    rdx,[rcx+0x1]
  41046a:	mov    rdi,0xffffffffffffffff
  410471:	lea    ecx,[rax-0x30]
  410474:	cmp    cl,0x9
  410477:	ja     0x4103ff
  410479:	mov    rcx,rdx
  41047c:	movabs rbx,0x1999999999999999
  410486:	sub    eax,0x30
  410489:	mov    rdx,0xffffffffffffffff
  410490:	cmp    rdi,rbx
  410493:	cdqe   
  410495:	ja     0x41049e
  410497:	lea    rdx,[rdi+rdi*4]
  41049b:	add    rdx,rdx
  41049e:	mov    rdi,rdx
  4104a1:	add    rdi,rax
  4104a4:	jb     0x410462
  4104a6:	movsx  eax,BYTE PTR [rcx+0x1]
  4104aa:	lea    rdx,[rcx+0x1]
  4104ae:	lea    r8d,[rax-0x30]
  4104b2:	cmp    r8b,0x9
  4104b6:	jbe    0x410479
  4104b8:	sub    rdi,0x1
  4104bc:	cmp    rdi,0xfffffffffffffffd
  4104c0:	ja     0x4103ff
  4104c6:	lea    r11,[rcx+0x2]
  4104ca:	movzx  eax,BYTE PTR [rcx+0x2]
  4104ce:	jmp    0x410245
  4104d3:	mov    QWORD PTR [rsi+0x18],rbx
  4104d7:	movzx  eax,BYTE PTR [rbx]
  4104da:	sub    eax,0x30
  4104dd:	cmp    al,0x9
  4104df:	ja     0x410c1c
  4104e5:	add    rbx,0x1
  4104e9:	movzx  eax,BYTE PTR [rbx]
  4104ec:	sub    eax,0x30
  4104ef:	cmp    al,0x9
  4104f1:	jbe    0x4104e5
  4104f3:	mov    rax,rbx
  4104f6:	sub    rax,rdx
  4104f9:	cmp    r10,rax
  4104fc:	mov    QWORD PTR [rsi+0x20],rbx
  410500:	cmovb  r10,rax
  410504:	movzx  eax,BYTE PTR [rbx]
  410507:	jmp    0x4102cd
  41050c:	lea    ecx,[rax-0x25]
  41050f:	add    rbx,0x1
  410513:	mov    ebp,eax
  410515:	cmp    cl,0x53
  410518:	ja     0x4103ff
  41051e:	lea    r9,[rip+0xd69b]        # 0x41dbc0
  410525:	movzx  ecx,cl
  410528:	movsxd rcx,DWORD PTR [r9+rcx*4]
  41052c:	add    rcx,r9
  41052f:	jmp    rcx
  410531:	mov    QWORD PTR [rsi+0x18],rbx
  410535:	mov    QWORD PTR [rsi+0x20],rcx
  410539:	test   r10,r10
  41053c:	movsx  eax,BYTE PTR [rdx+0x1]
  410540:	mov    rbx,rcx
  410543:	lea    edx,[rax-0x30]
  410546:	jne    0x410696
  41054c:	cmp    dl,0x9
  41054f:	jbe    0x410624
  410555:	mov    r10d,0x1
  41055b:	mov    rbp,QWORD PTR [rsp+0x38]
  410560:	mov    rax,rbp
  410563:	mov    QWORD PTR [rsi+0x28],rbp
  410567:	add    rax,0x1
  41056b:	cmp    rbp,0xffffffffffffffff
  41056f:	je     0x4103ff
  410575:	mov    QWORD PTR [rsp+0x38],rax
  41057a:	cmp    r14,rbp
  41057d:	jbe    0x410949
  410583:	mov    rcx,QWORD PTR [r13+0x8]
  410587:	mov    rax,QWORD PTR [r13+0x0]
  41058b:	mov    rdx,rax
  41058e:	shl    rdx,0x5
  410592:	add    rdx,rcx
  410595:	cmp    rbp,rax
  410598:	jb     0x4105b7
  41059a:	nop    WORD PTR [rax+rax*1+0x0]
  4105a0:	add    rax,0x1
  4105a4:	mov    DWORD PTR [rdx],0x0
  4105aa:	add    rdx,0x20
  4105ae:	cmp    rax,rbp
  4105b1:	jbe    0x4105a0
  4105b3:	mov    QWORD PTR [r13+0x0],rax
  4105b7:	shl    rbp,0x5
  4105bb:	lea    rax,[rcx+rbp*1]
  4105bf:	mov    edx,DWORD PTR [rax]
  4105c1:	test   edx,edx
  4105c3:	jne    0x410a78
  4105c9:	mov    DWORD PTR [rax],0x5
  4105cf:	movzx  eax,BYTE PTR [rbx]
  4105d2:	jmp    0x4102cd
  4105d7:	mov    QWORD PTR [rsi+0x30],rbx
  4105db:	movzx  eax,BYTE PTR [rbx+0x1]
  4105df:	lea    rdx,[rbx+0x1]
  4105e3:	sub    eax,0x30
  4105e6:	cmp    al,0x9
  4105e8:	ja     0x4105fe
  4105ea:	nop    WORD PTR [rax+rax*1+0x0]
  4105f0:	add    rdx,0x1
  4105f4:	movzx  eax,BYTE PTR [rdx]
  4105f7:	sub    eax,0x30
  4105fa:	cmp    al,0x9
  4105fc:	jbe    0x4105f0
  4105fe:	mov    rax,rdx
  410601:	mov    QWORD PTR [rsi+0x38],rdx
  410605:	sub    rax,rbx
  410608:	mov    rbx,QWORD PTR [rsp+0x20]
  41060d:	cmp    rbx,rax
  410610:	cmovae rax,rbx
  410614:	mov    rbx,rdx
  410617:	mov    QWORD PTR [rsp+0x20],rax
  41061c:	movzx  eax,BYTE PTR [rdx]
  41061f:	jmp    0x4102d5
  410624:	mov    r10b,0x1
  410627:	nop    WORD PTR [rax+rax*1+0x0]
  410630:	add    rcx,0x1
  410634:	movzx  edx,BYTE PTR [rcx]
  410637:	lea    r8d,[rdx-0x30]
  41063b:	cmp    r8b,0x9
  41063f:	jbe    0x410630
  410641:	cmp    dl,0x24
  410644:	jne    0x41055b
  41064a:	xor    ebp,ebp
  41064c:	movabs rcx,0x1999999999999999
  410656:	sub    eax,0x30
  410659:	mov    rdx,0xffffffffffffffff
  410660:	cmp    rbp,rcx
  410663:	cdqe   
  410665:	ja     0x41066f
  410667:	lea    rdx,[rbp+rbp*4+0x0]
  41066c:	add    rdx,rdx
  41066f:	add    rdx,rax
  410672:	mov    rbp,rdx
  410675:	jae    0x410b90
  41067b:	add    rbx,0x1
  41067f:	movsx  eax,BYTE PTR [rbx]
  410682:	mov    rbp,0xffffffffffffffff
  410689:	lea    edx,[rax-0x30]
  41068c:	cmp    dl,0x9
  41068f:	jbe    0x41064c
  410691:	jmp    0x4103ff
  410696:	cmp    dl,0x9
  410699:	jbe    0x410630
  41069b:	jmp    0x41055b
  4106a0:	cmp    edx,0xf
  4106a3:	mov    r9d,0xc
  4106a9:	jle    0x410b1d
  4106af:	cmp    rdi,0xffffffffffffffff
  4106b3:	je     0x410a90
  4106b9:	mov    QWORD PTR [rsi+0x50],rdi
  4106bd:	cmp    r14,rdi
  4106c0:	jbe    0x41099c
  4106c6:	mov    rcx,QWORD PTR [r13+0x8]
  4106ca:	mov    rax,QWORD PTR [r13+0x0]
  4106ce:	mov    rdx,rax
  4106d1:	shl    rdx,0x5
  4106d5:	add    rdx,rcx
  4106d8:	cmp    rdi,rax
  4106db:	jb     0x4106f7
  4106dd:	nop    DWORD PTR [rax]
  4106e0:	add    rax,0x1
  4106e4:	mov    DWORD PTR [rdx],0x0
  4106ea:	add    rdx,0x20
  4106ee:	cmp    rax,rdi
  4106f1:	jbe    0x4106e0
  4106f3:	mov    QWORD PTR [r13+0x0],rax
  4106f7:	shl    rdi,0x5
  4106fb:	lea    rax,[rcx+rdi*1]
  4106ff:	mov    edx,DWORD PTR [rax]
  410701:	test   edx,edx
  410703:	jne    0x410a10
  410709:	mov    DWORD PTR [rax],r9d
  41070c:	mov    BYTE PTR [rsi+0x48],bpl
  410710:	mov    rax,QWORD PTR [r12]
  410714:	mov    QWORD PTR [rsi+0x8],rbx
  410718:	lea    rcx,[rax+0x1]
  41071c:	cmp    rcx,QWORD PTR [rsp+0x28]
  410721:	mov    QWORD PTR [r12],rcx
  410725:	jae    0x4108d0
  41072b:	mov    r9,QWORD PTR [r12+0x8]
  410730:	jmp    0x4101ab
  410735:	xor    r9d,r9d
  410738:	cmp    edx,0x7
  41073b:	mov    ebp,eax
  41073d:	setg   r9b
  410741:	add    r9d,0xf
  410745:	jmp    0x4106af
  41074a:	cmp    edx,0xf
  41074d:	jg     0x410780
  41074f:	test   dl,0x4
  410752:	jne    0x410780
  410754:	cmp    edx,0x7
  410757:	jg     0x410cc8
  41075d:	test   dl,0x2
  410760:	jne    0x410cbb
  410766:	and    edx,0x1
  410769:	mov    ebp,eax
  41076b:	neg    edx
  41076d:	mov    r9d,edx
  410770:	add    r9d,0x14
  410774:	jmp    0x4106af
  410779:	nop    DWORD PTR [rax+0x0]
  410780:	mov    ebp,eax
  410782:	mov    r9d,0x16
  410788:	jmp    0x4106af
  41078d:	cmp    edx,0xf
  410790:	mov    r9d,0x9
  410796:	jg     0x4106af
  41079c:	test   dl,0x4
  41079f:	jne    0x4106af
  4107a5:	cmp    edx,0x7
  4107a8:	mov    r9b,0x7
  4107ab:	jg     0x4106af
  4107b1:	test   dl,0x2
  4107b4:	mov    r9b,0x1
  4107b7:	jne    0x4106af
  4107bd:	and    edx,0x1
  4107c0:	cmp    edx,0x1
  4107c3:	sbb    r9d,r9d
  4107c6:	and    r9d,0x2
  4107ca:	add    r9d,0x3
  4107ce:	jmp    0x4106af
  4107d3:	xor    r9d,r9d
  4107d6:	cmp    edx,0x7
  4107d9:	mov    ebp,eax
  4107db:	setg   r9b
  4107df:	add    r9d,0xd
  4107e3:	jmp    0x4106af
  4107e8:	cmp    edx,0xf
  4107eb:	mov    r9d,0xa
  4107f1:	jg     0x4106af
  4107f7:	test   dl,0x4
  4107fa:	jne    0x4106af
  410800:	cmp    edx,0x7
  410803:	mov    r9b,0x8
  410806:	jg     0x4106af
  41080c:	test   dl,0x2
  41080f:	mov    r9b,0x2
  410812:	jne    0x4106af
  410818:	and    edx,0x1
  41081b:	cmp    edx,0x1
  41081e:	sbb    r9d,r9d
  410821:	and    r9d,0x2
  410825:	add    r9d,0x4
  410829:	jmp    0x4106af
  41082e:	xchg   ax,ax
  410830:	cmp    dl,0x9
  410833:	mov    QWORD PTR [rsp+0x20],0x2
  41083c:	jbe    0x41039b
  410842:	mov    rbx,QWORD PTR [rsi+0x40]
  410846:	cmp    rbx,0xffffffffffffffff
  41084a:	je     0x410b63
  410850:	cmp    r14,rbx
  410853:	ja     0x410ac9
  410859:	test   r14,r14
  41085c:	js     0x410967
  410862:	add    r14,r14
  410865:	cmp    r14,rbx
  410868:	ja     0x410877
  41086a:	lea    r14,[rbx+0x1]
  41086e:	cmp    r14,rbx
  410871:	jb     0x410967
  410877:	movabs rax,0x7ffffffffffffff
  410881:	cmp    r14,rax
  410884:	ja     0x410967
  41088a:	mov    rcx,QWORD PTR [r13+0x8]
  41088e:	mov    rdx,r14
  410891:	mov    QWORD PTR [rsp+0x40],r10
  410896:	shl    rdx,0x5
  41089a:	cmp    r15,rcx
  41089d:	je     0x410cfa
  4108a3:	call   0x410d10
  4108a8:	mov    r10,QWORD PTR [rsp+0x40]
  4108ad:	mov    r9,rax
  4108b0:	test   r9,r9
  4108b3:	je     0x410967
  4108b9:	cmp    r15,QWORD PTR [r13+0x8]
  4108bd:	je     0x410cd5
  4108c3:	mov    QWORD PTR [r13+0x8],r9
  4108c7:	mov    rcx,r9
  4108ca:	jmp    0x410acd
  4108cf:	nop
  4108d0:	mov    rax,QWORD PTR [rsp+0x28]
  4108d5:	test   rax,rax
  4108d8:	js     0x410967
  4108de:	add    rax,rax
  4108e1:	mov    rdi,rax
  4108e4:	mov    QWORD PTR [rsp+0x28],rax
  4108e9:	movabs rax,0x2e8ba2e8ba2e8ba
  4108f3:	cmp    rdi,rax
  4108f6:	ja     0x410967
  4108f8:	lea    rax,[rdi+rdi*4]
  4108fc:	mov    rcx,QWORD PTR [r12+0x8]
  410901:	mov    QWORD PTR [rsp+0x40],r10
  410906:	lea    rdx,[rdi+rax*2]
  41090a:	shl    rdx,0x3
  41090e:	cmp    QWORD PTR [rsp+0x30],rcx
  410913:	je     0x410ab4
  410919:	call   0x410d10
  41091e:	mov    r10,QWORD PTR [rsp+0x40]
  410923:	mov    r9,rax
  410926:	test   r9,r9
  410929:	je     0x410967
  41092b:	mov    rax,QWORD PTR [rsp+0x30]
  410930:	cmp    rax,QWORD PTR [r12+0x8]
  410935:	je     0x410c23
  41093b:	mov    QWORD PTR [r12+0x8],r9
  410940:	mov    rcx,QWORD PTR [r12]
  410944:	jmp    0x4101ab
  410949:	test   r14,r14
  41094c:	js     0x410967
  41094e:	add    r14,r14
  410951:	cmp    r14,rbp
  410954:	ja     0x410a20
  41095a:	lea    r14,[rbp+0x1]
  41095e:	cmp    r14,rbp
  410961:	jae    0x410a20
  410967:	mov    rcx,QWORD PTR [r13+0x8]
  41096b:	cmp    r15,rcx
  41096e:	je     0x410975
  410970:	call   0x417860
  410975:	mov    rcx,QWORD PTR [r12+0x8]
  41097a:	cmp    QWORD PTR [rsp+0x30],rcx
  41097f:	je     0x410986
  410981:	call   0x417860
  410986:	call   QWORD PTR [rip+0x12c8c]        # 0x423618
  41098c:	mov    DWORD PTR [rax],0xc
  410992:	mov    eax,0xffffffff
  410997:	jmp    0x4101cf
  41099c:	test   r14,r14
  41099f:	js     0x410967
  4109a1:	add    r14,r14
  4109a4:	cmp    r14,rdi
  4109a7:	ja     0x4109b2
  4109a9:	lea    r14,[rdi+0x1]
  4109ad:	cmp    r14,rdi
  4109b0:	jb     0x410967
  4109b2:	movabs rax,0x7ffffffffffffff
  4109bc:	cmp    r14,rax
  4109bf:	ja     0x410967
  4109c1:	mov    rcx,QWORD PTR [r13+0x8]
  4109c5:	mov    rdx,r14
  4109c8:	mov    QWORD PTR [rsp+0x48],r10
  4109cd:	shl    rdx,0x5
  4109d1:	mov    DWORD PTR [rsp+0x40],r9d
  4109d6:	cmp    r15,rcx
  4109d9:	je     0x410bed
  4109df:	call   0x410d10
  4109e4:	mov    r9d,DWORD PTR [rsp+0x40]
  4109e9:	mov    r10,QWORD PTR [rsp+0x48]
  4109ee:	mov    r11,rax
  4109f1:	test   r11,r11
  4109f4:	je     0x410967
  4109fa:	cmp    r15,QWORD PTR [r13+0x8]
  4109fe:	je     0x410c8c
  410a04:	mov    QWORD PTR [r13+0x8],r11
  410a08:	mov    rcx,r11
  410a0b:	jmp    0x4106ca
  410a10:	cmp    r9d,edx
  410a13:	je     0x41070c
  410a19:	jmp    0x410403
  410a1e:	xchg   ax,ax
  410a20:	movabs rax,0x7ffffffffffffff
  410a2a:	cmp    r14,rax
  410a2d:	ja     0x410967
  410a33:	mov    rcx,QWORD PTR [r13+0x8]
  410a37:	mov    rdx,r14
  410a3a:	mov    QWORD PTR [rsp+0x40],r10
  410a3f:	shl    rdx,0x5
  410a43:	cmp    r15,rcx
  410a46:	je     0x410c52
  410a4c:	call   0x410d10
  410a51:	mov    r10,QWORD PTR [rsp+0x40]
  410a56:	mov    r9,rax
  410a59:	test   r9,r9
  410a5c:	je     0x410967
  410a62:	cmp    r15,QWORD PTR [r13+0x8]
  410a66:	je     0x410c67
  410a6c:	mov    QWORD PTR [r13+0x8],r9
  410a70:	mov    rcx,r9
  410a73:	jmp    0x410587
  410a78:	cmp    edx,0x5
  410a7b:	je     0x410504
  410a81:	jmp    0x410403
  410a86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410a90:	mov    rdi,QWORD PTR [rsp+0x38]
  410a95:	mov    rax,rdi
  410a98:	mov    QWORD PTR [rsi+0x50],rdi
  410a9c:	add    rax,0x1
  410aa0:	cmp    rdi,0xffffffffffffffff
  410aa4:	je     0x4103ff
  410aaa:	mov    QWORD PTR [rsp+0x38],rax
  410aaf:	jmp    0x4106bd
  410ab4:	mov    rcx,rdx
  410ab7:	call   0x410000
  410abc:	mov    r10,QWORD PTR [rsp+0x40]
  410ac1:	mov    r9,rax
  410ac4:	jmp    0x410926
  410ac9:	mov    rcx,QWORD PTR [r13+0x8]
  410acd:	mov    rax,QWORD PTR [r13+0x0]
  410ad1:	mov    rdx,rax
  410ad4:	shl    rdx,0x5
  410ad8:	add    rdx,rcx
  410adb:	cmp    rbx,rax
  410ade:	jb     0x410af7
  410ae0:	add    rax,0x1
  410ae4:	mov    DWORD PTR [rdx],0x0
  410aea:	add    rdx,0x20
  410aee:	cmp    rax,rbx
  410af1:	jbe    0x410ae0
  410af3:	mov    QWORD PTR [r13+0x0],rax
  410af7:	mov    rax,rbx
  410afa:	shl    rax,0x5
  410afe:	add    rax,rcx
  410b01:	mov    edx,DWORD PTR [rax]
  410b03:	test   edx,edx
  410b05:	jne    0x410c07
  410b0b:	mov    DWORD PTR [rax],0x5
  410b11:	mov    rbx,rbp
  410b14:	movzx  eax,BYTE PTR [rbp+0x0]
  410b18:	jmp    0x4102d5
  410b1d:	and    edx,0x4
  410b20:	cmp    edx,0x1
  410b23:	sbb    r9d,r9d
  410b26:	add    r9d,0xc
  410b2a:	jmp    0x4106af
  410b2f:	mov    r9d,0xe
  410b35:	mov    ebp,0x63
  410b3a:	jmp    0x4106af
  410b3f:	mov    ebp,eax
  410b41:	jmp    0x41070c
  410b46:	mov    ebp,eax
  410b48:	mov    r9d,0x11
  410b4e:	jmp    0x4106af
  410b53:	mov    r9d,0x10
  410b59:	mov    ebp,0x73
  410b5e:	jmp    0x4106af
  410b63:	mov    rbx,QWORD PTR [rsp+0x38]
  410b68:	mov    rax,rbx
  410b6b:	mov    QWORD PTR [rsi+0x40],rbx
  410b6f:	add    rax,0x1
  410b73:	cmp    rbx,0xffffffffffffffff
  410b77:	je     0x4103ff
  410b7d:	mov    QWORD PTR [rsp+0x38],rax
  410b82:	jmp    0x410850
  410b87:	nop    WORD PTR [rax+rax*1+0x0]
  410b90:	add    rbx,0x1
  410b94:	movsx  eax,BYTE PTR [rbx]
  410b97:	lea    edx,[rax-0x30]
  410b9a:	cmp    dl,0x9
  410b9d:	jbe    0x41064c
  410ba3:	sub    rbp,0x1
  410ba7:	cmp    rbp,0xfffffffffffffffd
  410bab:	ja     0x4103ff
  410bb1:	mov    QWORD PTR [rsi+0x28],rbp
  410bb5:	add    rbx,0x1
  410bb9:	jmp    0x41057a
  410bbe:	add    rbp,0x1
  410bc2:	movsx  eax,BYTE PTR [rbp+0x0]
  410bc6:	lea    edx,[rax-0x30]
  410bc9:	cmp    dl,0x9
  410bcc:	jbe    0x4103ba
  410bd2:	sub    rbx,0x1
  410bd6:	cmp    rbx,0xfffffffffffffffd
  410bda:	ja     0x4103ff
  410be0:	mov    QWORD PTR [rsi+0x40],rbx
  410be4:	add    rbp,0x1
  410be8:	jmp    0x410850
  410bed:	mov    rcx,rdx
  410bf0:	call   0x410000
  410bf5:	mov    r10,QWORD PTR [rsp+0x48]
  410bfa:	mov    r11,rax
  410bfd:	mov    r9d,DWORD PTR [rsp+0x40]
  410c02:	jmp    0x4109f1
  410c07:	cmp    edx,0x5
  410c0a:	jne    0x410403
  410c10:	movzx  eax,BYTE PTR [rbp+0x0]
  410c14:	mov    rbx,rbp
  410c17:	jmp    0x4102d5
  410c1c:	xor    eax,eax
  410c1e:	jmp    0x4104f9
  410c23:	mov    rax,QWORD PTR [r12]
  410c27:	mov    rcx,r9
  410c2a:	mov    QWORD PTR [rsp+0x40],r10
  410c2f:	lea    rdx,[rax+rax*4]
  410c33:	lea    r8,[rax+rdx*2]
  410c37:	mov    rdx,QWORD PTR [rsp+0x30]
  410c3c:	shl    r8,0x3
  410c40:	call   0x417820
  410c45:	mov    r10,QWORD PTR [rsp+0x40]
  410c4a:	mov    r9,rax
  410c4d:	jmp    0x41093b
  410c52:	mov    rcx,rdx
  410c55:	call   0x410000
  410c5a:	mov    r10,QWORD PTR [rsp+0x40]
  410c5f:	mov    r9,rax
  410c62:	jmp    0x410a59
  410c67:	mov    r8,QWORD PTR [r13+0x0]
  410c6b:	mov    rcx,r9
  410c6e:	mov    rdx,r15
  410c71:	mov    QWORD PTR [rsp+0x40],r10
  410c76:	shl    r8,0x5
  410c7a:	call   0x417820
  410c7f:	mov    r10,QWORD PTR [rsp+0x40]
  410c84:	mov    r9,rax
  410c87:	jmp    0x410a6c
  410c8c:	mov    r8,QWORD PTR [r13+0x0]
  410c90:	mov    rcx,r11
  410c93:	mov    rdx,r15
  410c96:	mov    QWORD PTR [rsp+0x48],r10
  410c9b:	mov    DWORD PTR [rsp+0x40],r9d
  410ca0:	shl    r8,0x5
  410ca4:	call   0x417820
  410ca9:	mov    r10,QWORD PTR [rsp+0x48]
  410cae:	mov    r11,rax
  410cb1:	mov    r9d,DWORD PTR [rsp+0x40]
  410cb6:	jmp    0x410a04
  410cbb:	mov    ebp,eax
  410cbd:	mov    r9d,0x12
  410cc3:	jmp    0x4106af
  410cc8:	mov    ebp,eax
  410cca:	mov    r9d,0x15
  410cd0:	jmp    0x4106af
  410cd5:	mov    r8,QWORD PTR [r13+0x0]
  410cd9:	mov    rcx,r9
  410cdc:	mov    rdx,r15
  410cdf:	mov    QWORD PTR [rsp+0x40],r10
  410ce4:	shl    r8,0x5
  410ce8:	call   0x417820
  410ced:	mov    r10,QWORD PTR [rsp+0x40]
  410cf2:	mov    r9,rax
  410cf5:	jmp    0x4108c3
  410cfa:	mov    rcx,rdx
  410cfd:	call   0x410000
  410d02:	mov    r10,QWORD PTR [rsp+0x40]
  410d07:	mov    r9,rax
  410d0a:	jmp    0x4108b0
  410d0f:	nop
  410d10:	push   rbx
  410d11:	sub    rsp,0x20
  410d15:	test   rcx,rcx
  410d18:	je     0x410d30
  410d1a:	call   0x4177f8
  410d1f:	mov    rbx,rax
  410d22:	test   rbx,rbx
  410d25:	je     0x410d40
  410d27:	mov    rax,rbx
  410d2a:	add    rsp,0x20
  410d2e:	pop    rbx
  410d2f:	ret    
  410d30:	mov    rcx,rdx
  410d33:	call   0x417828
  410d38:	mov    rbx,rax
  410d3b:	test   rbx,rbx
  410d3e:	jne    0x410d27
  410d40:	call   QWORD PTR [rip+0x128d2]        # 0x423618
  410d46:	mov    DWORD PTR [rax],0xc
  410d4c:	mov    rax,rbx
  410d4f:	add    rsp,0x20
  410d53:	pop    rbx
  410d54:	ret    
  410d55:	nop
  410d56:	nop
  410d57:	nop
  410d58:	nop
  410d59:	nop
  410d5a:	nop
  410d5b:	nop
  410d5c:	nop
  410d5d:	nop
  410d5e:	nop
  410d5f:	nop
  410d60:	jmp    QWORD PTR [rip+0x12b12]        # 0x423878
  410d66:	nop
  410d67:	nop
  410d68:	jmp    QWORD PTR [rip+0x12b02]        # 0x423870
  410d6e:	nop
  410d6f:	nop
  410d70:	jmp    QWORD PTR [rip+0x12af2]        # 0x423868
  410d76:	nop
  410d77:	nop
  410d78:	nop    DWORD PTR [rax+rax*1+0x0]
  410d80:	push   rbx
  410d81:	sub    rsp,0x30
  410d85:	mov    rbx,rcx
  410d88:	mov    rcx,QWORD PTR [rip+0x119b1]        # 0x422740
  410d8f:	call   0x411330
  410d94:	cmp    rax,0xffffffffffffffff
  410d98:	mov    QWORD PTR [rsp+0x20],rax
  410d9d:	je     0x410e15
  410d9f:	mov    ecx,0x8
  410da4:	call   0x4178f8
  410da9:	mov    rcx,QWORD PTR [rip+0x11990]        # 0x422740
  410db0:	call   0x411330
  410db5:	mov    rcx,QWORD PTR [rip+0x1198c]        # 0x422748
  410dbc:	mov    QWORD PTR [rsp+0x20],rax
  410dc1:	call   0x411330
  410dc6:	lea    rdx,[rsp+0x20]
  410dcb:	lea    r8,[rsp+0x28]
  410dd0:	mov    rcx,rbx
  410dd3:	mov    QWORD PTR [rsp+0x28],rax
  410dd8:	call   0x417980
  410ddd:	mov    rcx,QWORD PTR [rsp+0x20]
  410de2:	mov    rbx,rax
  410de5:	call   0x411340
  410dea:	mov    rcx,QWORD PTR [rsp+0x28]
  410def:	mov    QWORD PTR [rip+0x1194a],rax        # 0x422740
  410df6:	call   0x411340
  410dfb:	mov    ecx,0x8
  410e00:	mov    QWORD PTR [rip+0x11941],rax        # 0x422748
  410e07:	call   0x4178d0
  410e0c:	mov    rax,rbx
  410e0f:	add    rsp,0x30
  410e13:	pop    rbx
  410e14:	ret    
  410e15:	mov    rax,QWORD PTR [rip+0xd714]        # 0x41e530
  410e1c:	mov    rcx,rbx
  410e1f:	call   QWORD PTR [rax]
  410e21:	add    rsp,0x30
  410e25:	pop    rbx
  410e26:	ret    
  410e27:	nop    WORD PTR [rax+rax*1+0x0]
  410e30:	sub    rsp,0x28
  410e34:	call   0x410d80
  410e39:	test   rax,rax
  410e3c:	sete   al
  410e3f:	movzx  eax,al
  410e42:	neg    eax
  410e44:	add    rsp,0x28
  410e48:	ret    
  410e49:	nop
  410e4a:	nop
  410e4b:	nop
  410e4c:	nop
  410e4d:	nop
  410e4e:	nop
  410e4f:	nop
  410e50:	sub    rsp,0x28
  410e54:	mov    rax,QWORD PTR [rip+0x7de5]        # 0x418c40
  410e5b:	mov    rax,QWORD PTR [rax]
  410e5e:	test   rax,rax
  410e61:	je     0x410e80
  410e63:	call   rax
  410e65:	mov    rax,QWORD PTR [rip+0x7dd4]        # 0x418c40
  410e6c:	lea    rdx,[rax+0x8]
  410e70:	mov    rax,QWORD PTR [rax+0x8]
  410e74:	mov    QWORD PTR [rip+0x7dc5],rdx        # 0x418c40
  410e7b:	test   rax,rax
  410e7e:	jne    0x410e63
  410e80:	add    rsp,0x28
  410e84:	ret    
  410e85:	nop
  410e86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410e90:	push   rsi
  410e91:	push   rbx
  410e92:	sub    rsp,0x28
  410e96:	mov    rsi,QWORD PTR [rip+0xd603]        # 0x41e4a0
  410e9d:	mov    rax,QWORD PTR [rsi]
  410ea0:	cmp    eax,0xffffffff
  410ea3:	mov    ebx,eax
  410ea5:	je     0x410ed0
  410ea7:	test   ebx,ebx
  410ea9:	je     0x410eba
  410eab:	nop    DWORD PTR [rax+rax*1+0x0]
  410eb0:	mov    eax,ebx
  410eb2:	call   QWORD PTR [rsi+rax*8]
  410eb5:	sub    ebx,0x1
  410eb8:	jne    0x410eb0
  410eba:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x410e50
  410ec1:	add    rsp,0x28
  410ec5:	pop    rbx
  410ec6:	pop    rsi
  410ec7:	jmp    0x410e30
  410ecc:	nop    DWORD PTR [rax+0x0]
  410ed0:	xor    ebx,ebx
  410ed2:	jmp    0x410ed6
  410ed4:	mov    ebx,eax
  410ed6:	lea    edx,[rbx+0x1]
  410ed9:	cmp    QWORD PTR [rsi+rdx*8],0x0
  410ede:	mov    rax,rdx
  410ee1:	jne    0x410ed4
  410ee3:	jmp    0x410ea7
  410ee5:	nop
  410ee6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410ef0:	mov    eax,DWORD PTR [rip+0x1040a]        # 0x421300
  410ef6:	test   eax,eax
  410ef8:	je     0x410f00
  410efa:	repz ret 
  410efc:	nop    DWORD PTR [rax+0x0]
  410f00:	mov    DWORD PTR [rip+0x103f6],0x1        # 0x421300
  410f0a:	jmp    0x410e90
  410f0c:	nop
  410f0d:	nop
  410f0e:	nop
  410f0f:	nop
  410f10:	mov    rax,QWORD PTR [rip+0x126c1]        # 0x4235d8
  410f17:	rex.W jmp rax
  410f1a:	nop
  410f1b:	nop
  410f1c:	nop
  410f1d:	nop
  410f1e:	nop
  410f1f:	nop
  410f20:	xor    eax,eax
  410f22:	ret    
  410f23:	nop
  410f24:	nop
  410f25:	nop
  410f26:	nop
  410f27:	nop
  410f28:	nop
  410f29:	nop
  410f2a:	nop
  410f2b:	nop
  410f2c:	nop
  410f2d:	nop
  410f2e:	nop
  410f2f:	nop
  410f30:	push   r12
  410f32:	push   rbp
  410f33:	push   rdi
  410f34:	push   rsi
  410f35:	push   rbx
  410f36:	sub    rsp,0x40
  410f3a:	mov    rbx,QWORD PTR [rip+0x7d9f]        # 0x418ce0
  410f41:	movabs rax,0x2b992ddfa232
  410f4b:	mov    QWORD PTR [rsp+0x20],0x0
  410f54:	cmp    rbx,rax
  410f57:	je     0x410f70
  410f59:	not    rbx
  410f5c:	mov    QWORD PTR [rip+0x7d8d],rbx        # 0x418cf0
  410f63:	add    rsp,0x40
  410f67:	pop    rbx
  410f68:	pop    rsi
  410f69:	pop    rdi
  410f6a:	pop    rbp
  410f6b:	pop    r12
  410f6d:	ret    
  410f6e:	xchg   ax,ax
  410f70:	lea    rcx,[rsp+0x20]
  410f75:	call   QWORD PTR [rip+0x1258d]        # 0x423508
  410f7b:	mov    r12,QWORD PTR [rsp+0x20]
  410f80:	call   QWORD PTR [rip+0x12542]        # 0x4234c8
  410f86:	mov    ebp,eax
  410f88:	call   QWORD PTR [rip+0x12542]        # 0x4234d0
  410f8e:	mov    edi,eax
  410f90:	call   QWORD PTR [rip+0x1257a]        # 0x423510
  410f96:	lea    rcx,[rsp+0x30]
  410f9b:	mov    esi,eax
  410f9d:	call   QWORD PTR [rip+0x12595]        # 0x423538
  410fa3:	xor    r12,QWORD PTR [rsp+0x30]
  410fa8:	mov    edx,edi
  410faa:	movabs rax,0xffffffffffff
  410fb4:	xor    rbp,r12
  410fb7:	mov    rdi,rbp
  410fba:	xor    rdi,rdx
  410fbd:	mov    edx,esi
  410fbf:	xor    rdi,rdx
  410fc2:	mov    rsi,rdi
  410fc5:	and    rsi,rax
  410fc8:	cmp    rsi,rbx
  410fcb:	je     0x410ff0
  410fcd:	mov    rax,rsi
  410fd0:	not    rax
  410fd3:	mov    QWORD PTR [rip+0x7d06],rsi        # 0x418ce0
  410fda:	mov    QWORD PTR [rip+0x7d0f],rax        # 0x418cf0
  410fe1:	add    rsp,0x40
  410fe5:	pop    rbx
  410fe6:	pop    rsi
  410fe7:	pop    rdi
  410fe8:	pop    rbp
  410fe9:	pop    r12
  410feb:	ret    
  410fec:	nop    DWORD PTR [rax+0x0]
  410ff0:	movabs rax,0xffffd466d2205dcc
  410ffa:	movabs rsi,0x2b992ddfa233
  411004:	jmp    0x410fd3
  411006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411010:	push   rbp
  411011:	push   rsi
  411012:	push   rbx
  411013:	mov    rbp,rsp
  411016:	sub    rsp,0x70
  41101a:	mov    rsi,rcx
  41101d:	lea    rcx,[rip+0x1031c]        # 0x421340
  411024:	call   QWORD PTR [rip+0x1251e]        # 0x423548
  41102a:	mov    rbx,QWORD PTR [rip+0x10407]        # 0x421438
  411031:	xor    r8d,r8d
  411034:	lea    rdx,[rbp-0x28]
  411038:	mov    rcx,rbx
  41103b:	call   QWORD PTR [rip+0x1250f]        # 0x423550
  411041:	test   rax,rax
  411044:	mov    r9,rax
  411047:	je     0x4110f0
  41104d:	lea    rax,[rbp-0x20]
  411051:	mov    QWORD PTR [rsp+0x38],0x0
  41105a:	mov    r8,rbx
  41105d:	mov    rdx,QWORD PTR [rbp-0x28]
  411061:	xor    ecx,ecx
  411063:	mov    QWORD PTR [rsp+0x30],rax
  411068:	lea    rax,[rbp-0x18]
  41106c:	mov    QWORD PTR [rsp+0x28],rax
  411071:	lea    rax,[rip+0x102c8]        # 0x421340
  411078:	mov    QWORD PTR [rsp+0x20],rax
  41107d:	call   QWORD PTR [rip+0x124d5]        # 0x423558
  411083:	mov    rax,QWORD PTR [rip+0x103ae]        # 0x421438
  41108a:	xor    ecx,ecx
  41108c:	mov    QWORD PTR [rip+0x1032d],rsi        # 0x4213c0
  411093:	mov    DWORD PTR [rip+0x107a3],0xc0000409        # 0x421840
  41109d:	mov    DWORD PTR [rip+0x1079d],0x1        # 0x421844
  4110a7:	mov    QWORD PTR [rip+0x107a2],rax        # 0x421850
  4110ae:	mov    rax,QWORD PTR [rip+0x7c2b]        # 0x418ce0
  4110b5:	mov    QWORD PTR [rbp-0x10],rax
  4110b9:	mov    rax,QWORD PTR [rip+0x7c30]        # 0x418cf0
  4110c0:	mov    QWORD PTR [rbp-0x8],rax
  4110c4:	call   QWORD PTR [rip+0x12496]        # 0x423560
  4110ca:	lea    rcx,[rip+0xcc3f]        # 0x41dd10
  4110d1:	call   QWORD PTR [rip+0x124a9]        # 0x423580
  4110d7:	call   QWORD PTR [rip+0x123e3]        # 0x4234c0
  4110dd:	mov    edx,0xc0000409
  4110e2:	mov    rcx,rax
  4110e5:	call   QWORD PTR [rip+0x12485]        # 0x423570
  4110eb:	call   0x4178c8
  4110f0:	mov    rax,QWORD PTR [rbp+0x18]
  4110f4:	mov    QWORD PTR [rip+0x1033d],rax        # 0x421438
  4110fb:	lea    rax,[rbp+0x8]
  4110ff:	mov    QWORD PTR [rip+0x102d2],rax        # 0x4213d8
  411106:	jmp    0x411083
  41110b:	nop
  41110c:	nop
  41110d:	nop
  41110e:	nop
  41110f:	nop
  411110:	sub    rsp,0x28
  411114:	test   edx,edx
  411116:	je     0x411130
  411118:	cmp    edx,0x3
  41111b:	je     0x411130
  41111d:	mov    eax,0x1
  411122:	add    rsp,0x28
  411126:	ret    
  411127:	nop    WORD PTR [rax+rax*1+0x0]
  411130:	call   0x411e20
  411135:	mov    eax,0x1
  41113a:	add    rsp,0x28
  41113e:	ret    
  41113f:	nop
  411140:	push   rsi
  411141:	push   rbx
  411142:	sub    rsp,0x28
  411146:	mov    rax,QWORD PTR [rip+0xd333]        # 0x41e480
  41114d:	cmp    DWORD PTR [rax],0x2
  411150:	je     0x411158
  411152:	mov    DWORD PTR [rax],0x2
  411158:	cmp    edx,0x2
  41115b:	je     0x411170
  41115d:	cmp    edx,0x1
  411160:	je     0x4111a2
  411162:	mov    eax,0x1
  411167:	add    rsp,0x28
  41116b:	pop    rbx
  41116c:	pop    rsi
  41116d:	ret    
  41116e:	xchg   ax,ax
  411170:	lea    rbx,[rip+0x13ee9]        # 0x425060
  411177:	lea    rsi,[rip+0x13ee2]        # 0x425060
  41117e:	cmp    rbx,rsi
  411181:	je     0x411162
  411183:	mov    rax,QWORD PTR [rbx]
  411186:	test   rax,rax
  411189:	je     0x41118d
  41118b:	call   rax
  41118d:	add    rbx,0x8
  411191:	cmp    rbx,rsi
  411194:	jne    0x411183
  411196:	mov    eax,0x1
  41119b:	add    rsp,0x28
  41119f:	pop    rbx
  4111a0:	pop    rsi
  4111a1:	ret    
  4111a2:	call   0x411e20
  4111a7:	jmp    0x411162
  4111a9:	nop    DWORD PTR [rax+0x0]
  4111b0:	xor    eax,eax
  4111b2:	ret    
  4111b3:	nop
  4111b4:	nop
  4111b5:	nop
  4111b6:	nop
  4111b7:	nop
  4111b8:	nop
  4111b9:	nop
  4111ba:	nop
  4111bb:	nop
  4111bc:	nop
  4111bd:	nop
  4111be:	nop
  4111bf:	nop
  4111c0:	sub    rsp,0x58
  4111c4:	mov    rax,QWORD PTR [rip+0x10755]        # 0x421920
  4111cb:	test   rax,rax
  4111ce:	je     0x4111fc
  4111d0:	movsd  xmm0,QWORD PTR [rsp+0x80]
  4111d9:	mov    DWORD PTR [rsp+0x20],ecx
  4111dd:	lea    rcx,[rsp+0x20]
  4111e2:	mov    QWORD PTR [rsp+0x28],rdx
  4111e7:	movsd  QWORD PTR [rsp+0x30],xmm2
  4111ed:	movsd  QWORD PTR [rsp+0x38],xmm3
  4111f3:	movsd  QWORD PTR [rsp+0x40],xmm0
  4111f9:	call   rax
  4111fb:	nop
  4111fc:	add    rsp,0x58
  411200:	ret    
  411201:	nop    DWORD PTR [rax+rax*1+0x0]
  411206:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411210:	mov    QWORD PTR [rip+0x10709],rcx        # 0x421920
  411217:	jmp    0x417958
  41121c:	nop    DWORD PTR [rax+0x0]
  411220:	push   rsi
  411221:	push   rbx
  411222:	sub    rsp,0x78
  411226:	movaps XMMWORD PTR [rsp+0x40],xmm6
  41122b:	movaps XMMWORD PTR [rsp+0x50],xmm7
  411230:	movaps XMMWORD PTR [rsp+0x60],xmm8
  411236:	cmp    DWORD PTR [rcx],0x6
  411239:	ja     0x411310
  41123f:	mov    edx,DWORD PTR [rcx]
  411241:	lea    rax,[rip+0xcc0c]        # 0x41de54
  411248:	movsxd rdx,DWORD PTR [rax+rdx*4]
  41124c:	add    rax,rdx
  41124f:	jmp    rax
  411251:	lea    rbx,[rip+0xcad8]        # 0x41dd30
  411258:	nop    DWORD PTR [rax+rax*1+0x0]
  411260:	movsd  xmm8,QWORD PTR [rcx+0x20]
  411266:	mov    rsi,QWORD PTR [rcx+0x8]
  41126a:	movsd  xmm7,QWORD PTR [rcx+0x18]
  41126f:	movsd  xmm6,QWORD PTR [rcx+0x10]
  411274:	call   0x417970
  411279:	movsd  QWORD PTR [rsp+0x30],xmm8
  411280:	lea    rcx,[rax+0x60]
  411284:	lea    rdx,[rip+0xcb9d]        # 0x41de28
  41128b:	movsd  QWORD PTR [rsp+0x28],xmm7
  411291:	mov    r9,rsi
  411294:	mov    r8,rbx
  411297:	movsd  QWORD PTR [rsp+0x20],xmm6
  41129d:	call   0x417880
  4112a2:	nop
  4112a3:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  4112a8:	xor    eax,eax
  4112aa:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  4112af:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  4112b5:	add    rsp,0x78
  4112b9:	pop    rbx
  4112ba:	pop    rsi
  4112bb:	ret    
  4112bc:	nop    DWORD PTR [rax+0x0]
  4112c0:	lea    rbx,[rip+0xca88]        # 0x41dd4f
  4112c7:	jmp    0x411260
  4112c9:	nop    DWORD PTR [rax+0x0]
  4112d0:	lea    rbx,[rip+0xca99]        # 0x41dd70
  4112d7:	jmp    0x411260
  4112d9:	nop    DWORD PTR [rax+0x0]
  4112e0:	lea    rbx,[rip+0xcaf9]        # 0x41dde0
  4112e7:	jmp    0x411260
  4112ec:	nop    DWORD PTR [rax+0x0]
  4112f0:	lea    rbx,[rip+0xcac1]        # 0x41ddb8
  4112f7:	jmp    0x411260
  4112fc:	nop    DWORD PTR [rax+0x0]
  411300:	lea    rbx,[rip+0xca89]        # 0x41dd90
  411307:	jmp    0x411260
  41130c:	nop    DWORD PTR [rax+0x0]
  411310:	lea    rbx,[rip+0xcaff]        # 0x41de16
  411317:	jmp    0x411260
  41131c:	nop
  41131d:	nop
  41131e:	nop
  41131f:	nop
  411320:	fninit 
  411322:	ret    
  411323:	nop
  411324:	nop
  411325:	nop
  411326:	nop
  411327:	nop
  411328:	nop
  411329:	nop
  41132a:	nop
  41132b:	nop
  41132c:	nop
  41132d:	nop
  41132e:	nop
  41132f:	nop
  411330:	mov    rax,rcx
  411333:	ret    
  411334:	xchg   ax,ax
  411336:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411340:	mov    rax,rcx
  411343:	ret    
  411344:	nop
  411345:	nop
  411346:	nop
  411347:	nop
  411348:	nop
  411349:	nop
  41134a:	nop
  41134b:	nop
  41134c:	nop
  41134d:	nop
  41134e:	nop
  41134f:	nop
  411350:	push   rsi
  411351:	push   rbx
  411352:	sub    rsp,0x38
  411356:	lea    rax,[rsp+0x58]
  41135b:	mov    rbx,rcx
  41135e:	mov    QWORD PTR [rsp+0x58],rdx
  411363:	mov    QWORD PTR [rsp+0x60],r8
  411368:	mov    QWORD PTR [rsp+0x68],r9
  41136d:	mov    QWORD PTR [rsp+0x28],rax
  411372:	call   0x417970
  411377:	lea    rcx,[rip+0xcaf2]        # 0x41de70
  41137e:	lea    r9,[rax+0x60]
  411382:	mov    r8d,0x1b
  411388:	mov    edx,0x1
  41138d:	call   0x417848
  411392:	mov    rsi,QWORD PTR [rsp+0x28]
  411397:	call   0x417970
  41139c:	lea    rcx,[rax+0x60]
  4113a0:	mov    rdx,rbx
  4113a3:	mov    r8,rsi
  4113a6:	call   0x417768
  4113ab:	call   0x4178c8
  4113b0:	nop
  4113b1:	nop    DWORD PTR [rax+rax*1+0x0]
  4113b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4113c0:	push   r13
  4113c2:	push   r12
  4113c4:	push   rbp
  4113c5:	push   rdi
  4113c6:	push   rsi
  4113c7:	push   rbx
  4113c8:	sub    rsp,0x58
  4113cc:	movsxd rbp,DWORD PTR [rip+0x10571]        # 0x421944
  4113d3:	mov    rbx,rcx
  4113d6:	mov    rsi,rdx
  4113d9:	mov    rdi,r8
  4113dc:	test   ebp,ebp
  4113de:	jle    0x4114da
  4113e4:	mov    rax,QWORD PTR [rip+0x1055d]        # 0x421948
  4113eb:	xor    r9d,r9d
  4113ee:	add    rax,0x8
  4113f2:	mov    r10,QWORD PTR [rax]
  4113f5:	cmp    rbx,r10
  4113f8:	jb     0x41140e
  4113fa:	mov    rdx,QWORD PTR [rax+0x8]
  4113fe:	mov    r11d,DWORD PTR [rdx+0x8]
  411402:	add    r10,r11
  411405:	cmp    rbx,r10
  411408:	jb     0x4114c0
  41140e:	add    r9d,0x1
  411412:	add    rax,0x18
  411416:	cmp    r9d,ebp
  411419:	jne    0x4113f2
  41141b:	mov    rcx,rbx
  41141e:	call   0x412030
  411423:	test   rax,rax
  411426:	mov    r12,rax
  411429:	je     0x411512
  41142f:	lea    rbp,[rbp+rbp*2+0x0]
  411434:	shl    rbp,0x3
  411438:	mov    r13,rbp
  41143b:	add    r13,QWORD PTR [rip+0x10506]        # 0x421948
  411442:	mov    QWORD PTR [r13+0x10],rax
  411446:	mov    DWORD PTR [r13+0x0],0x0
  41144e:	call   0x412150
  411453:	mov    edx,DWORD PTR [r12+0xc]
  411458:	mov    r8d,0x30
  41145e:	add    rax,rdx
  411461:	lea    rdx,[rsp+0x20]
  411466:	mov    QWORD PTR [r13+0x8],rax
  41146a:	mov    rax,QWORD PTR [rip+0x104d7]        # 0x421948
  411471:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  411476:	call   QWORD PTR [rip+0x12114]        # 0x423590
  41147c:	test   rax,rax
  41147f:	je     0x4114f5
  411481:	mov    eax,DWORD PTR [rsp+0x44]
  411485:	lea    edx,[rax-0x4]
  411488:	and    edx,0xfffffffb
  41148b:	je     0x4114b9
  41148d:	sub    eax,0x40
  411490:	and    eax,0xffffffbf
  411493:	je     0x4114b9
  411495:	mov    r9,rbp
  411498:	add    r9,QWORD PTR [rip+0x104a9]        # 0x421948
  41149f:	mov    r8d,0x40
  4114a5:	mov    rdx,QWORD PTR [rsp+0x38]
  4114aa:	mov    rcx,QWORD PTR [rsp+0x20]
  4114af:	call   QWORD PTR [rip+0x120d3]        # 0x423588
  4114b5:	test   eax,eax
  4114b7:	je     0x4114e1
  4114b9:	add    DWORD PTR [rip+0x10484],0x1        # 0x421944
  4114c0:	mov    r8,rdi
  4114c3:	mov    rdx,rsi
  4114c6:	mov    rcx,rbx
  4114c9:	add    rsp,0x58
  4114cd:	pop    rbx
  4114ce:	pop    rsi
  4114cf:	pop    rdi
  4114d0:	pop    rbp
  4114d1:	pop    r12
  4114d3:	pop    r13
  4114d5:	jmp    0x417820
  4114da:	xor    ebp,ebp
  4114dc:	jmp    0x41141b
  4114e1:	call   QWORD PTR [rip+0x11ff9]        # 0x4234e0
  4114e7:	lea    rcx,[rip+0xc9fa]        # 0x41dee8
  4114ee:	mov    edx,eax
  4114f0:	call   0x411350
  4114f5:	mov    rax,QWORD PTR [rip+0x1044c]        # 0x421948
  4114fc:	mov    edx,DWORD PTR [r12+0x8]
  411501:	lea    rcx,[rip+0xc9a8]        # 0x41deb0
  411508:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  41150d:	call   0x411350
  411512:	lea    rcx,[rip+0xc977]        # 0x41de90
  411519:	mov    rdx,rbx
  41151c:	call   0x411350
  411521:	nop
  411522:	nop    DWORD PTR [rax+0x0]
  411526:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411530:	push   rbp
  411531:	push   r14
  411533:	push   r13
  411535:	push   r12
  411537:	push   rdi
  411538:	push   rsi
  411539:	push   rbx
  41153a:	mov    rbp,rsp
  41153d:	sub    rsp,0x60
  411541:	mov    ebx,DWORD PTR [rip+0x103f9]        # 0x421940
  411547:	test   ebx,ebx
  411549:	je     0x411560
  41154b:	mov    rsp,rbp
  41154e:	pop    rbx
  41154f:	pop    rsi
  411550:	pop    rdi
  411551:	pop    r12
  411553:	pop    r13
  411555:	pop    r14
  411557:	pop    rbp
  411558:	ret    
  411559:	nop    DWORD PTR [rax+0x0]
  411560:	mov    DWORD PTR [rip+0x103d6],0x1        # 0x421940
  41156a:	call   0x412080
  41156f:	cdqe   
  411571:	lea    rax,[rax+rax*2]
  411575:	lea    rax,[rax*8+0x1e]
  41157d:	and    rax,0xfffffffffffffff0
  411581:	call   0x4122a0
  411586:	mov    rsi,QWORD PTR [rip+0xcf23]        # 0x41e4b0
  41158d:	mov    rbx,QWORD PTR [rip+0xcf2c]        # 0x41e4c0
  411594:	sub    rsp,rax
  411597:	mov    DWORD PTR [rip+0x103a3],0x0        # 0x421944
  4115a1:	lea    rax,[rsp+0x20]
  4115a6:	mov    QWORD PTR [rip+0x1039b],rax        # 0x421948
  4115ad:	mov    rax,rsi
  4115b0:	sub    rax,rbx
  4115b3:	cmp    rax,0x7
  4115b7:	jle    0x41154b
  4115b9:	cmp    rax,0xb
  4115bd:	jle    0x4115e5
  4115bf:	mov    r11d,DWORD PTR [rbx]
  4115c2:	test   r11d,r11d
  4115c5:	jne    0x411710
  4115cb:	mov    r10d,DWORD PTR [rbx+0x4]
  4115cf:	test   r10d,r10d
  4115d2:	jne    0x411710
  4115d8:	mov    r9d,DWORD PTR [rbx+0x8]
  4115dc:	test   r9d,r9d
  4115df:	jne    0x4115fc
  4115e1:	add    rbx,0xc
  4115e5:	mov    r8d,DWORD PTR [rbx]
  4115e8:	test   r8d,r8d
  4115eb:	jne    0x411710
  4115f1:	mov    ecx,DWORD PTR [rbx+0x4]
  4115f4:	test   ecx,ecx
  4115f6:	jne    0x411710
  4115fc:	mov    edx,DWORD PTR [rbx+0x8]
  4115ff:	cmp    edx,0x1
  411602:	jne    0x41181c
  411608:	add    rbx,0xc
  41160c:	cmp    rbx,rsi
  41160f:	jae    0x41154b
  411615:	mov    r12,QWORD PTR [rip+0xcec4]        # 0x41e4e0
  41161c:	lea    r13,[rbp-0x30]
  411620:	movabs r14,0xffffffff00000000
  41162a:	mov    ecx,DWORD PTR [rbx+0x4]
  41162d:	mov    eax,DWORD PTR [rbx]
  41162f:	movzx  edx,BYTE PTR [rbx+0x8]
  411633:	add    rax,r12
  411636:	add    rcx,r12
  411639:	cmp    edx,0x10
  41163c:	mov    r8,QWORD PTR [rax]
  41163f:	je     0x411786
  411645:	jbe    0x41174d
  41164b:	cmp    edx,0x20
  41164e:	je     0x4117cf
  411654:	cmp    edx,0x40
  411657:	jne    0x4117bb
  41165d:	sub    r8,rax
  411660:	mov    rdx,r13
  411663:	mov    rdi,r13
  411666:	mov    rax,r8
  411669:	add    rax,QWORD PTR [rcx]
  41166c:	mov    r8d,0x8
  411672:	mov    QWORD PTR [rbp-0x30],rax
  411676:	call   0x4113c0
  41167b:	add    rbx,0xc
  41167f:	cmp    rbx,rsi
  411682:	jb     0x41162a
  411684:	mov    eax,DWORD PTR [rip+0x102ba]        # 0x421944
  41168a:	xor    ebx,ebx
  41168c:	xor    esi,esi
  41168e:	test   eax,eax
  411690:	jle    0x41154b
  411696:	mov    r14,QWORD PTR [rip+0x11ef3]        # 0x423590
  41169d:	lea    r13,[rbp-0x34]
  4116a1:	mov    r12,QWORD PTR [rip+0x11ee0]        # 0x423588
  4116a8:	jmp    0x4116c3
  4116aa:	nop    WORD PTR [rax+rax*1+0x0]
  4116b0:	add    esi,0x1
  4116b3:	add    rbx,0x18
  4116b7:	cmp    esi,DWORD PTR [rip+0x10287]        # 0x421944
  4116bd:	jge    0x41154b
  4116c3:	mov    rax,rbx
  4116c6:	add    rax,QWORD PTR [rip+0x1027b]        # 0x421948
  4116cd:	mov    edx,DWORD PTR [rax]
  4116cf:	test   edx,edx
  4116d1:	je     0x4116b0
  4116d3:	mov    rcx,QWORD PTR [rax+0x8]
  4116d7:	mov    r8d,0x30
  4116dd:	mov    rdx,rdi
  4116e0:	call   r14
  4116e3:	test   rax,rax
  4116e6:	je     0x4117fe
  4116ec:	mov    rax,QWORD PTR [rip+0x10255]        # 0x421948
  4116f3:	mov    r9,r13
  4116f6:	mov    rdx,QWORD PTR [rbp-0x18]
  4116fa:	mov    rcx,QWORD PTR [rbp-0x30]
  4116fe:	mov    r8d,DWORD PTR [rax+rbx*1]
  411702:	call   r12
  411705:	jmp    0x4116b0
  411707:	nop    WORD PTR [rax+rax*1+0x0]
  411710:	cmp    rbx,rsi
  411713:	jae    0x41154b
  411719:	mov    r12,QWORD PTR [rip+0xcdc0]        # 0x41e4e0
  411720:	lea    rdi,[rbp-0x30]
  411724:	mov    ecx,DWORD PTR [rbx+0x4]
  411727:	mov    eax,DWORD PTR [rbx]
  411729:	mov    r8d,0x4
  41172f:	mov    rdx,rdi
  411732:	add    rbx,0x8
  411736:	add    rcx,r12
  411739:	add    eax,DWORD PTR [rcx]
  41173b:	mov    DWORD PTR [rbp-0x30],eax
  41173e:	call   0x4113c0
  411743:	cmp    rbx,rsi
  411746:	jb     0x411724
  411748:	jmp    0x411684
  41174d:	cmp    edx,0x8
  411750:	jne    0x4117bb
  411752:	movzx  edx,BYTE PTR [rcx]
  411755:	mov    rdi,r13
  411758:	mov    r10,rdx
  41175b:	or     r10,0xffffffffffffff00
  411762:	test   dl,dl
  411764:	cmovs  rdx,r10
  411768:	sub    rdx,rax
  41176b:	lea    rax,[r8+rdx*1]
  41176f:	mov    r8d,0x1
  411775:	mov    rdx,r13
  411778:	mov    QWORD PTR [rbp-0x30],rax
  41177c:	call   0x4113c0
  411781:	jmp    0x41167b
  411786:	movzx  edx,WORD PTR [rcx]
  411789:	mov    rdi,r13
  41178c:	mov    r10,rdx
  41178f:	or     r10,0xffffffffffff0000
  411796:	test   dx,dx
  411799:	cmovs  rdx,r10
  41179d:	sub    rdx,rax
  4117a0:	lea    rax,[r8+rdx*1]
  4117a4:	mov    r8d,0x2
  4117aa:	mov    rdx,r13
  4117ad:	mov    QWORD PTR [rbp-0x30],rax
  4117b1:	call   0x4113c0
  4117b6:	jmp    0x41167b
  4117bb:	lea    rcx,[rip+0xc786]        # 0x41df48
  4117c2:	mov    QWORD PTR [rbp-0x30],0x0
  4117ca:	call   0x411350
  4117cf:	mov    edx,DWORD PTR [rcx]
  4117d1:	mov    rdi,r13
  4117d4:	mov    r10,rdx
  4117d7:	or     r10,r14
  4117da:	test   edx,edx
  4117dc:	cmovs  rdx,r10
  4117e0:	sub    rdx,rax
  4117e3:	lea    rax,[r8+rdx*1]
  4117e7:	mov    r8d,0x4
  4117ed:	mov    rdx,r13
  4117f0:	mov    QWORD PTR [rbp-0x30],rax
  4117f4:	call   0x4113c0
  4117f9:	jmp    0x41167b
  4117fe:	add    rbx,QWORD PTR [rip+0x10143]        # 0x421948
  411805:	lea    rcx,[rip+0xc6a4]        # 0x41deb0
  41180c:	mov    rax,QWORD PTR [rbx+0x10]
  411810:	mov    r8,QWORD PTR [rbx+0x8]
  411814:	mov    edx,DWORD PTR [rax+0x8]
  411817:	call   0x411350
  41181c:	lea    rcx,[rip+0xc6ed]        # 0x41df10
  411823:	call   0x411350
  411828:	nop
  411829:	nop
  41182a:	nop
  41182b:	nop
  41182c:	nop
  41182d:	nop
  41182e:	nop
  41182f:	nop
  411830:	sub    rsp,0x28
  411834:	mov    eax,DWORD PTR [rcx]
  411836:	cmp    eax,0xc0000091
  41183b:	ja     0x4118a0
  41183d:	cmp    eax,0xc000008d
  411842:	jae    0x4118bf
  411844:	cmp    eax,0xc0000008
  411849:	je     0x411960
  41184f:	ja     0x411930
  411855:	cmp    eax,0x80000002
  41185a:	je     0x411960
  411860:	cmp    eax,0xc0000005
  411865:	jne    0x41193e
  41186b:	xor    edx,edx
  41186d:	mov    ecx,0xb
  411872:	call   0x4177e8
  411877:	cmp    rax,0x1
  41187b:	je     0x4119c0
  411881:	test   rax,rax
  411884:	je     0x4119a0
  41188a:	mov    ecx,0xb
  41188f:	call   rax
  411891:	xor    eax,eax
  411893:	add    rsp,0x28
  411897:	ret    
  411898:	nop    DWORD PTR [rax+rax*1+0x0]
  4118a0:	cmp    eax,0xc0000094
  4118a5:	je     0x411970
  4118ab:	ja     0x4118f0
  4118ad:	cmp    eax,0xc0000092
  4118b2:	je     0x411960
  4118b8:	cmp    eax,0xc0000093
  4118bd:	jne    0x41193e
  4118bf:	xor    edx,edx
  4118c1:	mov    ecx,0x8
  4118c6:	call   0x4177e8
  4118cb:	cmp    rax,0x1
  4118cf:	mov    rdx,rax
  4118d2:	je     0x411948
  4118d4:	test   rdx,rdx
  4118d7:	mov    eax,0x1
  4118dc:	je     0x411893
  4118de:	mov    ecx,0x8
  4118e3:	call   rdx
  4118e5:	xor    eax,eax
  4118e7:	add    rsp,0x28
  4118eb:	ret    
  4118ec:	nop    DWORD PTR [rax+0x0]
  4118f0:	cmp    eax,0xc0000095
  4118f5:	je     0x411960
  4118f7:	cmp    eax,0xc0000096
  4118fc:	jne    0x41193e
  4118fe:	xor    edx,edx
  411900:	mov    ecx,0x4
  411905:	call   0x4177e8
  41190a:	cmp    rax,0x1
  41190e:	je     0x4119aa
  411914:	test   rax,rax
  411917:	je     0x4119a0
  41191d:	mov    ecx,0x4
  411922:	call   rax
  411924:	xor    eax,eax
  411926:	jmp    0x411893
  41192b:	nop    DWORD PTR [rax+rax*1+0x0]
  411930:	cmp    eax,0xc000001d
  411935:	je     0x4118fe
  411937:	cmp    eax,0xc000008c
  41193c:	je     0x411960
  41193e:	mov    eax,0x1
  411943:	add    rsp,0x28
  411947:	ret    
  411948:	mov    edx,0x1
  41194d:	mov    ecx,0x8
  411952:	call   0x4177e8
  411957:	call   0x411320
  41195c:	nop    DWORD PTR [rax+0x0]
  411960:	xor    eax,eax
  411962:	add    rsp,0x28
  411966:	ret    
  411967:	nop    WORD PTR [rax+rax*1+0x0]
  411970:	xor    edx,edx
  411972:	mov    ecx,0x8
  411977:	call   0x4177e8
  41197c:	cmp    rax,0x1
  411980:	mov    rdx,rax
  411983:	jne    0x4118d4
  411989:	mov    edx,0x1
  41198e:	mov    ecx,0x8
  411993:	call   0x4177e8
  411998:	xor    eax,eax
  41199a:	jmp    0x411893
  41199f:	nop
  4119a0:	mov    eax,0x4
  4119a5:	add    rsp,0x28
  4119a9:	ret    
  4119aa:	mov    edx,0x1
  4119af:	mov    ecx,0x4
  4119b4:	call   0x4177e8
  4119b9:	xor    eax,eax
  4119bb:	jmp    0x411893
  4119c0:	mov    edx,0x1
  4119c5:	mov    ecx,0xb
  4119ca:	call   0x4177e8
  4119cf:	xor    eax,eax
  4119d1:	jmp    0x411893
  4119d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4119e0:	push   r12
  4119e2:	push   rbp
  4119e3:	push   rdi
  4119e4:	push   rsi
  4119e5:	push   rbx
  4119e6:	sub    rsp,0x20
  4119ea:	call   0x412150
  4119ef:	mov    rbp,rax
  4119f2:	mov    eax,DWORD PTR [rip+0xff90]        # 0x421988
  4119f8:	test   eax,eax
  4119fa:	jne    0x411a21
  4119fc:	test   rbp,rbp
  4119ff:	je     0x411a21
  411a01:	lea    rcx,[rip+0xc578]        # 0x41df80
  411a08:	mov    DWORD PTR [rip+0xff76],0x1        # 0x421988
  411a12:	call   0x411f90
  411a17:	test   rax,rax
  411a1a:	je     0x411a30
  411a1c:	mov    eax,0x1
  411a21:	add    rsp,0x20
  411a25:	pop    rbx
  411a26:	pop    rsi
  411a27:	pop    rdi
  411a28:	pop    rbp
  411a29:	pop    r12
  411a2b:	ret    
  411a2c:	nop    DWORD PTR [rax+0x0]
  411a30:	lea    rbx,[rip+0x10089]        # 0x421ac0
  411a37:	mov    ecx,0x30
  411a3c:	lea    rdx,[rip+0xff7d]        # 0x4219c0
  411a43:	lea    r12,[rip+0xfffffffffffffde6]        # 0x411830
  411a4a:	xor    esi,esi
  411a4c:	mov    rdi,rbx
  411a4f:	rep stos QWORD PTR es:[rdi],rax
  411a52:	mov    rdi,rdx
  411a55:	sub    r12,rbp
  411a58:	mov    cl,0x20
  411a5a:	rep stos QWORD PTR es:[rdi],rax
  411a5d:	mov    rdi,rdx
  411a60:	jmp    0x411a90
  411a62:	mov    BYTE PTR [rdi],0x9
  411a65:	mov    DWORD PTR [rdi+0x4],r12d
  411a69:	add    rsi,0x1
  411a6d:	mov    edx,DWORD PTR [rax+0xc]
  411a70:	add    rbx,0xc
  411a74:	mov    DWORD PTR [rbx-0xc],edx
  411a77:	add    edx,DWORD PTR [rax+0x8]
  411a7a:	mov    rax,rdi
  411a7d:	sub    rax,rbp
  411a80:	add    rdi,0x8
  411a84:	mov    DWORD PTR [rbx-0x4],eax
  411a87:	mov    DWORD PTR [rbx-0x8],edx
  411a8a:	cmp    rsi,0x20
  411a8e:	je     0x411ac5
  411a90:	mov    rcx,rsi
  411a93:	call   0x4120c0
  411a98:	test   rax,rax
  411a9b:	jne    0x411a62
  411a9d:	test   rsi,rsi
  411aa0:	je     0x411a1c
  411aa6:	mov    edx,esi
  411aa8:	nop    DWORD PTR [rax+rax*1+0x0]
  411ab0:	mov    r8,rbp
  411ab3:	lea    rcx,[rip+0x10006]        # 0x421ac0
  411aba:	call   QWORD PTR [rip+0x11a80]        # 0x423540
  411ac0:	jmp    0x411a1c
  411ac5:	mov    edx,0x20
  411aca:	jmp    0x411ab0
  411acc:	nop    DWORD PTR [rax+0x0]
  411ad0:	push   rbx
  411ad1:	sub    rsp,0x20
  411ad5:	mov    rdx,QWORD PTR [rcx]
  411ad8:	mov    eax,DWORD PTR [rdx]
  411ada:	mov    r8d,eax
  411add:	and    r8d,0x20ffffff
  411ae4:	cmp    r8d,0x20474343
  411aeb:	je     0x411bf0
  411af1:	cmp    eax,0xc0000091
  411af6:	mov    rbx,rcx
  411af9:	ja     0x411b80
  411aff:	cmp    eax,0xc000008d
  411b04:	jae    0x411b97
  411b0a:	cmp    eax,0xc0000008
  411b0f:	je     0x411b43
  411b11:	ja     0x411b50
  411b13:	cmp    eax,0x80000002
  411b18:	je     0x411b43
  411b1a:	cmp    eax,0xc0000005
  411b1f:	jne    0x411b62
  411b21:	xor    edx,edx
  411b23:	mov    ecx,0xb
  411b28:	call   0x4177e8
  411b2d:	cmp    rax,0x1
  411b31:	je     0x411c60
  411b37:	test   rax,rax
  411b3a:	je     0x411b62
  411b3c:	mov    ecx,0xb
  411b41:	call   rax
  411b43:	mov    eax,0xffffffff
  411b48:	add    rsp,0x20
  411b4c:	pop    rbx
  411b4d:	ret    
  411b4e:	xchg   ax,ax
  411b50:	cmp    eax,0xc000001d
  411b55:	je     0x411c16
  411b5b:	cmp    eax,0xc000008c
  411b60:	je     0x411b43
  411b62:	mov    rax,QWORD PTR [rip+0xfe17]        # 0x421980
  411b69:	test   rax,rax
  411b6c:	je     0x411b48
  411b6e:	mov    rcx,rbx
  411b71:	add    rsp,0x20
  411b75:	pop    rbx
  411b76:	rex.W jmp rax
  411b79:	nop    DWORD PTR [rax+0x0]
  411b80:	cmp    eax,0xc0000094
  411b85:	je     0x411bc2
  411b87:	ja     0x411c00
  411b89:	cmp    eax,0xc0000092
  411b8e:	je     0x411b43
  411b90:	cmp    eax,0xc0000093
  411b95:	jne    0x411b62
  411b97:	xor    edx,edx
  411b99:	mov    ecx,0x8
  411b9e:	call   0x4177e8
  411ba3:	cmp    rax,0x1
  411ba7:	jne    0x411bd4
  411ba9:	mov    edx,0x1
  411bae:	mov    ecx,0x8
  411bb3:	call   0x4177e8
  411bb8:	call   0x411320
  411bbd:	jmp    0x411b43
  411bc2:	xor    edx,edx
  411bc4:	mov    ecx,0x8
  411bc9:	call   0x4177e8
  411bce:	cmp    rax,0x1
  411bd2:	je     0x411c42
  411bd4:	test   rax,rax
  411bd7:	je     0x411b62
  411bd9:	mov    ecx,0x8
  411bde:	call   rax
  411be0:	mov    eax,0xffffffff
  411be5:	jmp    0x411b48
  411bea:	nop    WORD PTR [rax+rax*1+0x0]
  411bf0:	test   BYTE PTR [rdx+0x4],0x1
  411bf4:	jne    0x411af1
  411bfa:	jmp    0x411b43
  411bff:	nop
  411c00:	cmp    eax,0xc0000095
  411c05:	je     0x411b43
  411c0b:	cmp    eax,0xc0000096
  411c10:	jne    0x411b62
  411c16:	xor    edx,edx
  411c18:	mov    ecx,0x4
  411c1d:	call   0x4177e8
  411c22:	cmp    rax,0x1
  411c26:	je     0x411c74
  411c28:	test   rax,rax
  411c2b:	je     0x411b62
  411c31:	mov    ecx,0x4
  411c36:	call   rax
  411c38:	mov    eax,0xffffffff
  411c3d:	jmp    0x411b48
  411c42:	mov    edx,0x1
  411c47:	mov    ecx,0x8
  411c4c:	call   0x4177e8
  411c51:	jmp    0x411b43
  411c56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411c60:	mov    edx,0x1
  411c65:	mov    ecx,0xb
  411c6a:	call   0x4177e8
  411c6f:	jmp    0x411b43
  411c74:	mov    edx,0x1
  411c79:	mov    ecx,0x4
  411c7e:	call   0x4177e8
  411c83:	jmp    0x411b43
  411c88:	nop
  411c89:	nop
  411c8a:	nop
  411c8b:	nop
  411c8c:	nop
  411c8d:	nop
  411c8e:	nop
  411c8f:	nop
  411c90:	push   rbp
  411c91:	push   rdi
  411c92:	push   rsi
  411c93:	push   rbx
  411c94:	sub    rsp,0x28
  411c98:	lea    rcx,[rip+0xffc1]        # 0x421c60
  411c9f:	call   QWORD PTR [rip+0x11813]        # 0x4234b8
  411ca5:	mov    rbx,QWORD PTR [rip+0xff94]        # 0x421c40
  411cac:	test   rbx,rbx
  411caf:	je     0x411ce4
  411cb1:	mov    rbp,QWORD PTR [rip+0x118c0]        # 0x423578
  411cb8:	mov    rdi,QWORD PTR [rip+0x11821]        # 0x4234e0
  411cbf:	nop
  411cc0:	mov    ecx,DWORD PTR [rbx]
  411cc2:	call   rbp
  411cc4:	mov    rsi,rax
  411cc7:	call   rdi
  411cc9:	test   eax,eax
  411ccb:	jne    0x411cdb
  411ccd:	test   rsi,rsi
  411cd0:	je     0x411cdb
  411cd2:	mov    rax,QWORD PTR [rbx+0x8]
  411cd6:	mov    rcx,rsi
  411cd9:	call   rax
  411cdb:	mov    rbx,QWORD PTR [rbx+0x10]
  411cdf:	test   rbx,rbx
  411ce2:	jne    0x411cc0
  411ce4:	mov    rax,QWORD PTR [rip+0x1183d]        # 0x423528
  411ceb:	lea    rcx,[rip+0xff6e]        # 0x421c60
  411cf2:	add    rsp,0x28
  411cf6:	pop    rbx
  411cf7:	pop    rsi
  411cf8:	pop    rdi
  411cf9:	pop    rbp
  411cfa:	rex.W jmp rax
  411cfd:	nop    DWORD PTR [rax]
  411d00:	push   rdi
  411d01:	push   rsi
  411d02:	push   rbx
  411d03:	sub    rsp,0x20
  411d07:	mov    eax,DWORD PTR [rip+0xff3b]        # 0x421c48
  411d0d:	test   eax,eax
  411d0f:	jne    0x411d20
  411d11:	add    rsp,0x20
  411d15:	pop    rbx
  411d16:	pop    rsi
  411d17:	pop    rdi
  411d18:	ret    
  411d19:	nop    DWORD PTR [rax+0x0]
  411d20:	mov    rsi,rdx
  411d23:	mov    edi,ecx
  411d25:	mov    edx,0x18
  411d2a:	mov    ecx,0x1
  411d2f:	call   0x4178b8
  411d34:	test   rax,rax
  411d37:	mov    rbx,rax
  411d3a:	je     0x411d78
  411d3c:	mov    DWORD PTR [rax],edi
  411d3e:	mov    QWORD PTR [rax+0x8],rsi
  411d42:	lea    rcx,[rip+0xff17]        # 0x421c60
  411d49:	call   QWORD PTR [rip+0x11769]        # 0x4234b8
  411d4f:	mov    rax,QWORD PTR [rip+0xfeea]        # 0x421c40
  411d56:	lea    rcx,[rip+0xff03]        # 0x421c60
  411d5d:	mov    QWORD PTR [rip+0xfedc],rbx        # 0x421c40
  411d64:	mov    QWORD PTR [rbx+0x10],rax
  411d68:	call   QWORD PTR [rip+0x117ba]        # 0x423528
  411d6e:	xor    eax,eax
  411d70:	add    rsp,0x20
  411d74:	pop    rbx
  411d75:	pop    rsi
  411d76:	pop    rdi
  411d77:	ret    
  411d78:	mov    eax,0xffffffff
  411d7d:	jmp    0x411d11
  411d7f:	nop
  411d80:	push   rbx
  411d81:	sub    rsp,0x20
  411d85:	mov    eax,DWORD PTR [rip+0xfebd]        # 0x421c48
  411d8b:	test   eax,eax
  411d8d:	jne    0x411da0
  411d8f:	xor    eax,eax
  411d91:	add    rsp,0x20
  411d95:	pop    rbx
  411d96:	ret    
  411d97:	nop    WORD PTR [rax+rax*1+0x0]
  411da0:	mov    ebx,ecx
  411da2:	lea    rcx,[rip+0xfeb7]        # 0x421c60
  411da9:	call   QWORD PTR [rip+0x11709]        # 0x4234b8
  411daf:	mov    rdx,QWORD PTR [rip+0xfe8a]        # 0x421c40
  411db6:	test   rdx,rdx
  411db9:	je     0x411dd7
  411dbb:	mov    eax,DWORD PTR [rdx]
  411dbd:	cmp    eax,ebx
  411dbf:	jne    0x411dce
  411dc1:	jmp    0x411e0f
  411dc3:	mov    r8d,DWORD PTR [rax]
  411dc6:	cmp    r8d,ebx
  411dc9:	je     0x411df0
  411dcb:	mov    rdx,rax
  411dce:	mov    rax,QWORD PTR [rdx+0x10]
  411dd2:	test   rax,rax
  411dd5:	jne    0x411dc3
  411dd7:	lea    rcx,[rip+0xfe82]        # 0x421c60
  411dde:	call   QWORD PTR [rip+0x11744]        # 0x423528
  411de4:	xor    eax,eax
  411de6:	add    rsp,0x20
  411dea:	pop    rbx
  411deb:	ret    
  411dec:	nop    DWORD PTR [rax+0x0]
  411df0:	mov    rcx,rax
  411df3:	mov    rax,QWORD PTR [rax+0x10]
  411df7:	mov    QWORD PTR [rdx+0x10],rax
  411dfb:	call   0x417860
  411e00:	lea    rcx,[rip+0xfe59]        # 0x421c60
  411e07:	call   QWORD PTR [rip+0x1171b]        # 0x423528
  411e0d:	jmp    0x411de4
  411e0f:	mov    rax,QWORD PTR [rdx+0x10]
  411e13:	mov    rcx,rdx
  411e16:	mov    QWORD PTR [rip+0xfe23],rax        # 0x421c40
  411e1d:	jmp    0x411dfb
  411e1f:	nop
  411e20:	push   rbx
  411e21:	sub    rsp,0x20
  411e25:	cmp    edx,0x1
  411e28:	je     0x411ec0
  411e2e:	jb     0x411e60
  411e30:	cmp    edx,0x2
  411e33:	je     0x411e50
  411e35:	cmp    edx,0x3
  411e38:	jne    0x411e55
  411e3a:	mov    eax,DWORD PTR [rip+0xfe08]        # 0x421c48
  411e40:	test   eax,eax
  411e42:	je     0x411e55
  411e44:	call   0x411c90
  411e49:	jmp    0x411e55
  411e4b:	nop    DWORD PTR [rax+rax*1+0x0]
  411e50:	call   0x411320
  411e55:	mov    eax,0x1
  411e5a:	add    rsp,0x20
  411e5e:	pop    rbx
  411e5f:	ret    
  411e60:	mov    eax,DWORD PTR [rip+0xfde2]        # 0x421c48
  411e66:	test   eax,eax
  411e68:	jne    0x411ef0
  411e6e:	mov    eax,DWORD PTR [rip+0xfdd4]        # 0x421c48
  411e74:	cmp    eax,0x1
  411e77:	jne    0x411e55
  411e79:	mov    rcx,QWORD PTR [rip+0xfdc0]        # 0x421c40
  411e80:	test   rcx,rcx
  411e83:	je     0x411e96
  411e85:	mov    rbx,QWORD PTR [rcx+0x10]
  411e89:	call   0x417860
  411e8e:	test   rbx,rbx
  411e91:	mov    rcx,rbx
  411e94:	jne    0x411e85
  411e96:	lea    rcx,[rip+0xfdc3]        # 0x421c60
  411e9d:	mov    QWORD PTR [rip+0xfd98],0x0        # 0x421c40
  411ea8:	mov    DWORD PTR [rip+0xfd96],0x0        # 0x421c48
  411eb2:	call   QWORD PTR [rip+0x115f8]        # 0x4234b0
  411eb8:	jmp    0x411e55
  411eba:	nop    WORD PTR [rax+rax*1+0x0]
  411ec0:	mov    eax,DWORD PTR [rip+0xfd82]        # 0x421c48
  411ec6:	test   eax,eax
  411ec8:	je     0x411ee0
  411eca:	mov    eax,0x1
  411ecf:	mov    DWORD PTR [rip+0xfd6f],0x1        # 0x421c48
  411ed9:	add    rsp,0x20
  411edd:	pop    rbx
  411ede:	ret    
  411edf:	nop
  411ee0:	lea    rcx,[rip+0xfd79]        # 0x421c60
  411ee7:	call   QWORD PTR [rip+0x1162b]        # 0x423518
  411eed:	jmp    0x411eca
  411eef:	nop
  411ef0:	call   0x411c90
  411ef5:	jmp    0x411e6e
  411efa:	nop
  411efb:	nop
  411efc:	nop
  411efd:	nop
  411efe:	nop
  411eff:	nop
  411f00:	movsxd rax,DWORD PTR [rcx+0x3c]
  411f04:	add    rcx,rax
  411f07:	xor    eax,eax
  411f09:	cmp    DWORD PTR [rcx],0x4550
  411f0f:	je     0x411f13
  411f11:	repz ret 
  411f13:	xor    eax,eax
  411f15:	cmp    WORD PTR [rcx+0x18],0x20b
  411f1b:	sete   al
  411f1e:	ret    
  411f1f:	nop
  411f20:	cmp    WORD PTR [rcx],0x5a4d
  411f25:	je     0x411f30
  411f27:	xor    eax,eax
  411f29:	ret    
  411f2a:	nop    WORD PTR [rax+rax*1+0x0]
  411f30:	jmp    0x411f00
  411f32:	nop    DWORD PTR [rax+0x0]
  411f36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411f40:	movsxd rax,DWORD PTR [rcx+0x3c]
  411f44:	add    rcx,rax
  411f47:	movzx  eax,WORD PTR [rcx+0x14]
  411f4b:	lea    rax,[rcx+rax*1+0x18]
  411f50:	movzx  ecx,WORD PTR [rcx+0x6]
  411f54:	test   ecx,ecx
  411f56:	je     0x411f81
  411f58:	sub    ecx,0x1
  411f5b:	lea    rcx,[rcx+rcx*4]
  411f5f:	lea    r9,[rax+rcx*8+0x28]
  411f64:	mov    r8d,DWORD PTR [rax+0xc]
  411f68:	cmp    r8,rdx
  411f6b:	mov    rcx,r8
  411f6e:	ja     0x411f78
  411f70:	add    ecx,DWORD PTR [rax+0x8]
  411f73:	cmp    rdx,rcx
  411f76:	jb     0x411f83
  411f78:	add    rax,0x28
  411f7c:	cmp    rax,r9
  411f7f:	jne    0x411f64
  411f81:	xor    eax,eax
  411f83:	repz ret 
  411f85:	nop
  411f86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411f90:	push   rdi
  411f91:	push   rsi
  411f92:	push   rbx
  411f93:	sub    rsp,0x20
  411f97:	mov    rsi,rcx
  411f9a:	call   0x4177b8
  411f9f:	cmp    rax,0x8
  411fa3:	ja     0x411fc0
  411fa5:	mov    rbx,QWORD PTR [rip+0xc534]        # 0x41e4e0
  411fac:	xor    edi,edi
  411fae:	cmp    WORD PTR [rbx],0x5a4d
  411fb3:	je     0x411fd0
  411fb5:	mov    rax,rdi
  411fb8:	add    rsp,0x20
  411fbc:	pop    rbx
  411fbd:	pop    rsi
  411fbe:	pop    rdi
  411fbf:	ret    
  411fc0:	xor    edi,edi
  411fc2:	mov    rax,rdi
  411fc5:	add    rsp,0x20
  411fc9:	pop    rbx
  411fca:	pop    rsi
  411fcb:	pop    rdi
  411fcc:	ret    
  411fcd:	nop    DWORD PTR [rax]
  411fd0:	mov    rcx,rbx
  411fd3:	call   0x411f00
  411fd8:	test   eax,eax
  411fda:	je     0x411fb5
  411fdc:	movsxd rdx,DWORD PTR [rbx+0x3c]
  411fe0:	add    rdx,rbx
  411fe3:	movzx  eax,WORD PTR [rdx+0x14]
  411fe7:	lea    rbx,[rdx+rax*1+0x18]
  411fec:	movzx  eax,WORD PTR [rdx+0x6]
  411ff0:	test   eax,eax
  411ff2:	je     0x411fb5
  411ff4:	sub    eax,0x1
  411ff7:	lea    rax,[rax+rax*4]
  411ffb:	lea    rdi,[rbx+rax*8+0x28]
  412000:	jmp    0x41200b
  412002:	add    rbx,0x28
  412006:	cmp    rbx,rdi
  412009:	je     0x411fc0
  41200b:	mov    r8d,0x8
  412011:	mov    rdx,rsi
  412014:	mov    rcx,rbx
  412017:	call   0x4177b0
  41201c:	test   eax,eax
  41201e:	jne    0x412002
  412020:	mov    rdi,rbx
  412023:	mov    rax,rdi
  412026:	add    rsp,0x20
  41202a:	pop    rbx
  41202b:	pop    rsi
  41202c:	pop    rdi
  41202d:	ret    
  41202e:	xchg   ax,ax
  412030:	push   rsi
  412031:	push   rbx
  412032:	sub    rsp,0x28
  412036:	mov    rbx,QWORD PTR [rip+0xc4a3]        # 0x41e4e0
  41203d:	cmp    WORD PTR [rbx],0x5a4d
  412042:	je     0x412050
  412044:	xor    eax,eax
  412046:	add    rsp,0x28
  41204a:	pop    rbx
  41204b:	pop    rsi
  41204c:	ret    
  41204d:	nop    DWORD PTR [rax]
  412050:	mov    rsi,rcx
  412053:	mov    rcx,rbx
  412056:	call   0x411f00
  41205b:	test   eax,eax
  41205d:	je     0x412044
  41205f:	sub    rsi,rbx
  412062:	mov    rcx,rbx
  412065:	mov    rdx,rsi
  412068:	add    rsp,0x28
  41206c:	pop    rbx
  41206d:	pop    rsi
  41206e:	jmp    0x411f40
  412073:	nop    DWORD PTR [rax]
  412076:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412080:	push   rbx
  412081:	sub    rsp,0x20
  412085:	mov    rbx,QWORD PTR [rip+0xc454]        # 0x41e4e0
  41208c:	xor    eax,eax
  41208e:	cmp    WORD PTR [rbx],0x5a4d
  412093:	je     0x4120a0
  412095:	add    rsp,0x20
  412099:	pop    rbx
  41209a:	ret    
  41209b:	nop    DWORD PTR [rax+rax*1+0x0]
  4120a0:	mov    rcx,rbx
  4120a3:	call   0x411f00
  4120a8:	test   eax,eax
  4120aa:	je     0x412095
  4120ac:	movsxd rax,DWORD PTR [rbx+0x3c]
  4120b0:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  4120b5:	add    rsp,0x20
  4120b9:	pop    rbx
  4120ba:	ret    
  4120bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4120c0:	push   rdi
  4120c1:	push   rsi
  4120c2:	push   rbx
  4120c3:	sub    rsp,0x20
  4120c7:	mov    rsi,QWORD PTR [rip+0xc412]        # 0x41e4e0
  4120ce:	xor    edi,edi
  4120d0:	mov    rbx,rcx
  4120d3:	cmp    WORD PTR [rsi],0x5a4d
  4120d8:	je     0x4120e5
  4120da:	mov    rax,rdi
  4120dd:	add    rsp,0x20
  4120e1:	pop    rbx
  4120e2:	pop    rsi
  4120e3:	pop    rdi
  4120e4:	ret    
  4120e5:	mov    rcx,rsi
  4120e8:	call   0x411f00
  4120ed:	test   eax,eax
  4120ef:	je     0x4120da
  4120f1:	movsxd rax,DWORD PTR [rsi+0x3c]
  4120f5:	add    rsi,rax
  4120f8:	movzx  eax,WORD PTR [rsi+0x14]
  4120fc:	lea    rdx,[rsi+rax*1+0x18]
  412101:	movzx  eax,WORD PTR [rsi+0x6]
  412105:	test   eax,eax
  412107:	je     0x4120da
  412109:	sub    eax,0x1
  41210c:	lea    rax,[rax+rax*4]
  412110:	lea    rax,[rdx+rax*8+0x28]
  412115:	test   BYTE PTR [rdx+0x27],0x20
  412119:	je     0x412124
  41211b:	test   rbx,rbx
  41211e:	je     0x412140
  412120:	sub    rbx,0x1
  412124:	add    rdx,0x28
  412128:	cmp    rdx,rax
  41212b:	jne    0x412115
  41212d:	xor    edi,edi
  41212f:	mov    rax,rdi
  412132:	add    rsp,0x20
  412136:	pop    rbx
  412137:	pop    rsi
  412138:	pop    rdi
  412139:	ret    
  41213a:	nop    WORD PTR [rax+rax*1+0x0]
  412140:	mov    rdi,rdx
  412143:	mov    rax,rdi
  412146:	add    rsp,0x20
  41214a:	pop    rbx
  41214b:	pop    rsi
  41214c:	pop    rdi
  41214d:	ret    
  41214e:	xchg   ax,ax
  412150:	push   rsi
  412151:	push   rbx
  412152:	sub    rsp,0x28
  412156:	mov    rsi,QWORD PTR [rip+0xc383]        # 0x41e4e0
  41215d:	xor    ebx,ebx
  41215f:	cmp    WORD PTR [rsi],0x5a4d
  412164:	je     0x412170
  412166:	mov    rax,rbx
  412169:	add    rsp,0x28
  41216d:	pop    rbx
  41216e:	pop    rsi
  41216f:	ret    
  412170:	mov    rcx,rsi
  412173:	call   0x411f00
  412178:	test   eax,eax
  41217a:	cmovne rbx,rsi
  41217e:	mov    rax,rbx
  412181:	add    rsp,0x28
  412185:	pop    rbx
  412186:	pop    rsi
  412187:	ret    
  412188:	nop    DWORD PTR [rax+rax*1+0x0]
  412190:	push   rsi
  412191:	push   rbx
  412192:	sub    rsp,0x28
  412196:	mov    rbx,QWORD PTR [rip+0xc343]        # 0x41e4e0
  41219d:	xor    eax,eax
  41219f:	cmp    WORD PTR [rbx],0x5a4d
  4121a4:	je     0x4121b0
  4121a6:	add    rsp,0x28
  4121aa:	pop    rbx
  4121ab:	pop    rsi
  4121ac:	ret    
  4121ad:	nop    DWORD PTR [rax]
  4121b0:	mov    rsi,rcx
  4121b3:	mov    rcx,rbx
  4121b6:	call   0x411f00
  4121bb:	test   eax,eax
  4121bd:	je     0x4121a6
  4121bf:	sub    rsi,rbx
  4121c2:	mov    rcx,rbx
  4121c5:	mov    rdx,rsi
  4121c8:	call   0x411f40
  4121cd:	test   rax,rax
  4121d0:	je     0x4121e1
  4121d2:	mov    eax,DWORD PTR [rax+0x24]
  4121d5:	not    eax
  4121d7:	shr    eax,0x1f
  4121da:	add    rsp,0x28
  4121de:	pop    rbx
  4121df:	pop    rsi
  4121e0:	ret    
  4121e1:	xor    eax,eax
  4121e3:	jmp    0x4121a6
  4121e5:	nop
  4121e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4121f0:	push   rbp
  4121f1:	push   rdi
  4121f2:	push   rsi
  4121f3:	push   rbx
  4121f4:	sub    rsp,0x28
  4121f8:	mov    rdi,QWORD PTR [rip+0xc2e1]        # 0x41e4e0
  4121ff:	xor    ebp,ebp
  412201:	mov    esi,ecx
  412203:	cmp    WORD PTR [rdi],0x5a4d
  412208:	je     0x412220
  41220a:	mov    rax,rbp
  41220d:	add    rsp,0x28
  412211:	pop    rbx
  412212:	pop    rsi
  412213:	pop    rdi
  412214:	pop    rbp
  412215:	ret    
  412216:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412220:	mov    rcx,rdi
  412223:	call   0x411f00
  412228:	test   eax,eax
  41222a:	je     0x41220a
  41222c:	movsxd rax,DWORD PTR [rdi+0x3c]
  412230:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  412237:	test   edx,edx
  412239:	je     0x41220a
  41223b:	mov    ebx,edx
  41223d:	mov    rcx,rdi
  412240:	mov    rdx,rbx
  412243:	call   0x411f40
  412248:	test   rax,rax
  41224b:	je     0x41220a
  41224d:	add    rbx,rdi
  412250:	mov    rdx,rbx
  412253:	jne    0x412267
  412255:	jmp    0x41220a
  412257:	nop    WORD PTR [rax+rax*1+0x0]
  412260:	sub    esi,0x1
  412263:	add    rdx,0x14
  412267:	mov    ecx,DWORD PTR [rdx+0x4]
  41226a:	test   ecx,ecx
  41226c:	jne    0x412275
  41226e:	mov    eax,DWORD PTR [rdx+0xc]
  412271:	test   eax,eax
  412273:	je     0x412290
  412275:	test   esi,esi
  412277:	jg     0x412260
  412279:	mov    ebp,DWORD PTR [rdx+0xc]
  41227c:	add    rbp,rdi
  41227f:	mov    rax,rbp
  412282:	add    rsp,0x28
  412286:	pop    rbx
  412287:	pop    rsi
  412288:	pop    rdi
  412289:	pop    rbp
  41228a:	ret    
  41228b:	nop    DWORD PTR [rax+rax*1+0x0]
  412290:	xor    ebp,ebp
  412292:	mov    rax,rbp
  412295:	add    rsp,0x28
  412299:	pop    rbx
  41229a:	pop    rsi
  41229b:	pop    rdi
  41229c:	pop    rbp
  41229d:	ret    
  41229e:	nop
  41229f:	nop
  4122a0:	push   rcx
  4122a1:	push   rax
  4122a2:	cmp    rax,0x1000
  4122a8:	lea    rcx,[rsp+0x18]
  4122ad:	jb     0x4122c8
  4122af:	sub    rcx,0x1000
  4122b6:	or     QWORD PTR [rcx],0x0
  4122ba:	sub    rax,0x1000
  4122c0:	cmp    rax,0x1000
  4122c6:	ja     0x4122af
  4122c8:	sub    rcx,rax
  4122cb:	or     QWORD PTR [rcx],0x0
  4122cf:	pop    rax
  4122d0:	pop    rcx
  4122d1:	ret    
  4122d2:	nop
  4122d3:	nop
  4122d4:	nop
  4122d5:	nop
  4122d6:	nop
  4122d7:	nop
  4122d8:	nop
  4122d9:	nop
  4122da:	nop
  4122db:	nop
  4122dc:	nop
  4122dd:	nop
  4122de:	nop
  4122df:	nop
  4122e0:	push   rdi
  4122e1:	push   rsi
  4122e2:	push   rbx
  4122e3:	sub    rsp,0x130
  4122ea:	mov    rbx,rcx
  4122ed:	call   0x417938
  4122f2:	test   rbx,rbx
  4122f5:	mov    DWORD PTR [rax],0x0
  4122fb:	je     0x4124ae
  412301:	cmp    BYTE PTR [rbx],0x0
  412304:	je     0x412470
  41230a:	mov    rcx,rbx
  41230d:	call   QWORD PTR [rip+0x111c5]        # 0x4234d8
  412313:	cmp    eax,0xffffffff
  412316:	je     0x412490
  41231c:	test   al,0x10
  41231e:	je     0x412470
  412324:	lea    rdi,[rsp+0x20]
  412329:	mov    rdx,rbx
  41232c:	mov    r8d,0x104
  412332:	mov    rcx,rdi
  412335:	mov    rbx,rdi
  412338:	call   0x417910
  41233d:	mov    r8d,DWORD PTR [rbx]
  412340:	add    rbx,0x4
  412344:	lea    eax,[r8-0x1010101]
  41234b:	not    r8d
  41234e:	and    eax,r8d
  412351:	and    eax,0x80808080
  412356:	je     0x41233d
  412358:	mov    edx,eax
  41235a:	shr    edx,0x10
  41235d:	test   eax,0x8080
  412362:	cmove  eax,edx
  412365:	lea    rdx,[rbx+0x2]
  412369:	cmove  rbx,rdx
  41236d:	add    al,al
  41236f:	sbb    rbx,0x3
  412373:	sub    rbx,rdi
  412376:	lea    rcx,[rbx+0x24b]
  41237d:	call   0x417828
  412382:	test   rax,rax
  412385:	mov    rsi,rax
  412388:	je     0x41249f
  41238e:	lea    r9,[rax+0x244]
  412395:	lea    r8,[rbx+0x1]
  412399:	mov    rdx,rdi
  41239c:	mov    rcx,r9
  41239f:	call   0x417820
  4123a4:	cmp    BYTE PTR [rsi+0x244],0x0
  4123ab:	mov    r9,rax
  4123ae:	je     0x4123d0
  4123b0:	movzx  eax,BYTE PTR [rsi+rbx*1+0x243]
  4123b8:	cmp    al,0x2f
  4123ba:	je     0x4123d0
  4123bc:	cmp    al,0x5c
  4123be:	je     0x4123d0
  4123c0:	mov    r8d,0x5c
  4123c6:	mov    WORD PTR [r9+rbx*1],r8w
  4123cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4123d0:	mov    rcx,r9
  4123d3:	mov    eax,DWORD PTR [rcx]
  4123d5:	add    rcx,0x4
  4123d9:	lea    edx,[rax-0x1010101]
  4123df:	not    eax
  4123e1:	and    edx,eax
  4123e3:	and    edx,0x80808080
  4123e9:	je     0x4123d3
  4123eb:	mov    eax,edx
  4123ed:	shr    eax,0x10
  4123f0:	test   edx,0x8080
  4123f6:	cmove  edx,eax
  4123f9:	lea    rax,[rcx+0x2]
  4123fd:	cmove  rcx,rax
  412401:	add    dl,dl
  412403:	mov    eax,0x2a
  412408:	sbb    rcx,0x3
  41240c:	xor    edx,edx
  41240e:	mov    WORD PTR [rcx],ax
  412411:	mov    WORD PTR [rsi+0x12c],dx
  412418:	lea    rdx,[rsi+0x130]
  41241f:	xor    ecx,ecx
  412421:	xor    eax,eax
  412423:	mov    QWORD PTR [rsi+0x238],0xffffffffffffffff
  41242e:	mov    WORD PTR [rsi+0x12e],cx
  412435:	mov    rdi,rdx
  412438:	mov    ecx,0x20
  41243d:	mov    DWORD PTR [rsi+0x240],0x0
  412447:	mov    DWORD PTR [rsi+0x128],0x0
  412451:	rep stos QWORD PTR es:[rdi],rax
  412454:	mov    rax,rsi
  412457:	mov    DWORD PTR [rdi],0x0
  41245d:	add    rsp,0x130
  412464:	pop    rbx
  412465:	pop    rsi
  412466:	pop    rdi
  412467:	ret    
  412468:	nop    DWORD PTR [rax+rax*1+0x0]
  412470:	call   0x417938
  412475:	mov    DWORD PTR [rax],0x14
  41247b:	xor    eax,eax
  41247d:	add    rsp,0x130
  412484:	pop    rbx
  412485:	pop    rsi
  412486:	pop    rdi
  412487:	ret    
  412488:	nop    DWORD PTR [rax+rax*1+0x0]
  412490:	call   0x417938
  412495:	mov    DWORD PTR [rax],0x2
  41249b:	xor    eax,eax
  41249d:	jmp    0x41245d
  41249f:	call   0x417938
  4124a4:	mov    DWORD PTR [rax],0xc
  4124aa:	xor    eax,eax
  4124ac:	jmp    0x41245d
  4124ae:	call   0x417938
  4124b3:	mov    DWORD PTR [rax],0xe
  4124b9:	xor    eax,eax
  4124bb:	jmp    0x41245d
  4124bd:	nop    DWORD PTR [rax]
  4124c0:	push   rbp
  4124c1:	push   rdi
  4124c2:	push   rsi
  4124c3:	push   rbx
  4124c4:	sub    rsp,0x158
  4124cb:	mov    rbx,rcx
  4124ce:	call   0x417938
  4124d3:	test   rbx,rbx
  4124d6:	mov    DWORD PTR [rax],0x0
  4124dc:	je     0x4126cd
  4124e2:	mov    eax,DWORD PTR [rbx+0x240]
  4124e8:	test   eax,eax
  4124ea:	js     0x41266f
  4124f0:	lea    rdi,[rsp+0x20]
  4124f5:	je     0x4125a4
  4124fb:	mov    rcx,QWORD PTR [rbx+0x238]
  412502:	mov    rdx,rdi
  412505:	call   0x417748
  41250a:	cmp    eax,0xffffffff
  41250d:	mov    ebp,eax
  41250f:	je     0x412615
  412515:	mov    eax,DWORD PTR [rsp+0x20]
  412519:	lea    rsi,[rbx+0x24]
  41251d:	lea    rdx,[rdi+0x28]
  412521:	mov    r8d,0x104
  412527:	mov    rcx,rsi
  41252a:	mov    DWORD PTR [rbx],eax
  41252c:	mov    rax,QWORD PTR [rsp+0x28]
  412531:	mov    QWORD PTR [rbx+0x8],rax
  412535:	mov    rax,QWORD PTR [rsp+0x30]
  41253a:	mov    QWORD PTR [rbx+0x10],rax
  41253e:	mov    rax,QWORD PTR [rsp+0x38]
  412543:	mov    QWORD PTR [rbx+0x18],rax
  412547:	mov    rax,QWORD PTR [rsp+0x40]
  41254c:	mov    DWORD PTR [rbx+0x20],eax
  41254f:	call   0x4177a8
  412554:	test   ebp,ebp
  412556:	jne    0x412643
  41255c:	mov    eax,DWORD PTR [rbx+0x240]
  412562:	add    eax,0x1
  412565:	test   eax,eax
  412567:	mov    DWORD PTR [rbx+0x240],eax
  41256d:	jle    0x41266f
  412573:	mov    rcx,rsi
  412576:	call   0x4177b8
  41257b:	lea    rcx,[rbx+0x130]
  412582:	mov    WORD PTR [rbx+0x12e],ax
  412589:	mov    rdx,rsi
  41258c:	call   0x4177d0
  412591:	lea    rax,[rbx+0x128]
  412598:	add    rsp,0x158
  41259f:	pop    rbx
  4125a0:	pop    rsi
  4125a1:	pop    rdi
  4125a2:	pop    rbp
  4125a3:	ret    
  4125a4:	lea    rcx,[rbx+0x244]
  4125ab:	mov    rdx,rdi
  4125ae:	call   0x417920
  4125b3:	cmp    rax,0xffffffffffffffff
  4125b7:	mov    rbp,rax
  4125ba:	je     0x412680
  4125c0:	mov    eax,DWORD PTR [rsp+0x20]
  4125c4:	lea    rsi,[rbx+0x24]
  4125c8:	lea    rdx,[rdi+0x28]
  4125cc:	mov    r8d,0x104
  4125d2:	mov    rcx,rsi
  4125d5:	mov    DWORD PTR [rbx],eax
  4125d7:	mov    rax,QWORD PTR [rsp+0x28]
  4125dc:	mov    QWORD PTR [rbx+0x8],rax
  4125e0:	mov    rax,QWORD PTR [rsp+0x30]
  4125e5:	mov    QWORD PTR [rbx+0x10],rax
  4125e9:	mov    rax,QWORD PTR [rsp+0x38]
  4125ee:	mov    QWORD PTR [rbx+0x18],rax
  4125f2:	mov    rax,QWORD PTR [rsp+0x40]
  4125f7:	mov    DWORD PTR [rbx+0x20],eax
  4125fa:	call   0x4177a8
  4125ff:	mov    QWORD PTR [rbx+0x238],rbp
  412606:	mov    DWORD PTR [rbx+0x240],0x1
  412610:	jmp    0x412573
  412615:	lea    rdi,[rbx+0x8]
  412619:	mov    rcx,rbx
  41261c:	xor    eax,eax
  41261e:	mov    QWORD PTR [rbx],0x0
  412625:	mov    QWORD PTR [rbx+0x120],0x0
  412630:	and    rdi,0xfffffffffffffff8
  412634:	sub    rcx,rdi
  412637:	add    ecx,0x128
  41263d:	shr    ecx,0x3
  412640:	rep stos QWORD PTR es:[rdi],rax
  412643:	call   QWORD PTR [rip+0x10e97]        # 0x4234e0
  412649:	cmp    eax,0x12
  41264c:	je     0x4126c0
  41264e:	mov    rcx,QWORD PTR [rbx+0x238]
  412655:	call   0x417928
  41265a:	mov    QWORD PTR [rbx+0x238],0xffffffffffffffff
  412665:	mov    DWORD PTR [rbx+0x240],0xffffffff
  41266f:	xor    eax,eax
  412671:	add    rsp,0x158
  412678:	pop    rbx
  412679:	pop    rsi
  41267a:	pop    rdi
  41267b:	pop    rbp
  41267c:	ret    
  41267d:	nop    DWORD PTR [rax]
  412680:	lea    rdi,[rbx+0x8]
  412684:	mov    rcx,rbx
  412687:	xor    eax,eax
  412689:	mov    QWORD PTR [rbx],0x0
  412690:	mov    QWORD PTR [rbx+0x120],0x0
  41269b:	and    rdi,0xfffffffffffffff8
  41269f:	sub    rcx,rdi
  4126a2:	add    ecx,0x128
  4126a8:	shr    ecx,0x3
  4126ab:	rep stos QWORD PTR es:[rdi],rax
  4126ae:	mov    QWORD PTR [rbx+0x238],rbp
  4126b5:	mov    DWORD PTR [rbx+0x240],ebp
  4126bb:	xor    eax,eax
  4126bd:	jmp    0x412671
  4126bf:	nop
  4126c0:	call   0x417938
  4126c5:	mov    DWORD PTR [rax],0x0
  4126cb:	jmp    0x41264e
  4126cd:	call   0x417938
  4126d2:	mov    DWORD PTR [rax],0xe
  4126d8:	xor    eax,eax
  4126da:	jmp    0x412598
  4126df:	nop
  4126e0:	push   rsi
  4126e1:	push   rbx
  4126e2:	sub    rsp,0x28
  4126e6:	mov    rsi,rcx
  4126e9:	call   0x417938
  4126ee:	test   rsi,rsi
  4126f1:	mov    DWORD PTR [rax],0x0
  4126f7:	je     0x412720
  4126f9:	mov    rcx,QWORD PTR [rsi+0x238]
  412700:	xor    ebx,ebx
  412702:	cmp    rcx,0xffffffffffffffff
  412706:	je     0x41270f
  412708:	call   0x417928
  41270d:	mov    ebx,eax
  41270f:	mov    rcx,rsi
  412712:	call   0x417860
  412717:	mov    eax,ebx
  412719:	add    rsp,0x28
  41271d:	pop    rbx
  41271e:	pop    rsi
  41271f:	ret    
  412720:	call   0x417938
  412725:	mov    DWORD PTR [rax],0xe
  41272b:	mov    eax,0xffffffff
  412730:	jmp    0x412719
  412732:	nop    DWORD PTR [rax+0x0]
  412736:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412740:	push   rbx
  412741:	sub    rsp,0x20
  412745:	mov    rbx,rcx
  412748:	call   0x417938
  41274d:	test   rbx,rbx
  412750:	mov    DWORD PTR [rax],0x0
  412756:	je     0x412785
  412758:	mov    rcx,QWORD PTR [rbx+0x238]
  41275f:	cmp    rcx,0xffffffffffffffff
  412763:	je     0x41276a
  412765:	call   0x417928
  41276a:	mov    QWORD PTR [rbx+0x238],0xffffffffffffffff
  412775:	mov    DWORD PTR [rbx+0x240],0x0
  41277f:	add    rsp,0x20
  412783:	pop    rbx
  412784:	ret    
  412785:	call   0x417938
  41278a:	mov    DWORD PTR [rax],0xe
  412790:	jmp    0x41277f
  412792:	nop    DWORD PTR [rax+0x0]
  412796:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4127a0:	push   rbx
  4127a1:	sub    rsp,0x20
  4127a5:	mov    rbx,rcx
  4127a8:	call   0x417938
  4127ad:	test   rbx,rbx
  4127b0:	mov    DWORD PTR [rax],0x0
  4127b6:	je     0x4127c4
  4127b8:	mov    eax,DWORD PTR [rbx+0x240]
  4127be:	add    rsp,0x20
  4127c2:	pop    rbx
  4127c3:	ret    
  4127c4:	call   0x417938
  4127c9:	mov    DWORD PTR [rax],0xe
  4127cf:	mov    eax,0xffffffff
  4127d4:	jmp    0x4127be
  4127d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4127e0:	push   rsi
  4127e1:	push   rbx
  4127e2:	sub    rsp,0x28
  4127e6:	mov    rbx,rcx
  4127e9:	mov    esi,edx
  4127eb:	call   0x417938
  4127f0:	test   rbx,rbx
  4127f3:	mov    DWORD PTR [rax],0x0
  4127f9:	je     0x41286d
  4127fb:	cmp    esi,0xffffffff
  4127fe:	jl     0x412860
  412800:	je     0x412830
  412802:	mov    rcx,rbx
  412805:	call   0x412740
  41280a:	jmp    0x41281d
  41280c:	nop    DWORD PTR [rax+0x0]
  412810:	mov    rcx,rbx
  412813:	call   0x4124c0
  412818:	test   rax,rax
  41281b:	je     0x412857
  41281d:	cmp    esi,DWORD PTR [rbx+0x240]
  412823:	jg     0x412810
  412825:	add    rsp,0x28
  412829:	pop    rbx
  41282a:	pop    rsi
  41282b:	ret    
  41282c:	nop    DWORD PTR [rax+0x0]
  412830:	mov    rcx,QWORD PTR [rbx+0x238]
  412837:	cmp    rcx,0xffffffffffffffff
  41283b:	je     0x412842
  41283d:	call   0x417928
  412842:	mov    QWORD PTR [rbx+0x238],0xffffffffffffffff
  41284d:	mov    DWORD PTR [rbx+0x240],0xffffffff
  412857:	add    rsp,0x28
  41285b:	pop    rbx
  41285c:	pop    rsi
  41285d:	ret    
  41285e:	xchg   ax,ax
  412860:	call   0x417938
  412865:	mov    DWORD PTR [rax],0x16
  41286b:	jmp    0x412857
  41286d:	call   0x417938
  412872:	mov    DWORD PTR [rax],0xe
  412878:	jmp    0x412857
  41287a:	nop
  41287b:	nop
  41287c:	nop
  41287d:	nop
  41287e:	nop
  41287f:	nop
  412880:	test   rdx,rdx
  412883:	mov    r8,rcx
  412886:	je     0x4128b2
  412888:	cmp    BYTE PTR [rcx],0x0
  41288b:	jne    0x412895
  41288d:	jmp    0x4128b2
  41288f:	nop
  412890:	cmp    BYTE PTR [rcx],0x0
  412893:	je     0x4128b0
  412895:	add    rcx,0x1
  412899:	mov    rax,rcx
  41289c:	sub    rax,r8
  41289f:	cmp    rax,rdx
  4128a2:	jb     0x412890
  4128a4:	repz ret 
  4128a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4128b0:	repz ret 
  4128b2:	xor    eax,eax
  4128b4:	ret    
  4128b5:	nop
  4128b6:	nop
  4128b7:	nop
  4128b8:	nop
  4128b9:	nop
  4128ba:	nop
  4128bb:	nop
  4128bc:	nop
  4128bd:	nop
  4128be:	nop
  4128bf:	nop
  4128c0:	push   r12
  4128c2:	push   rbp
  4128c3:	push   rdi
  4128c4:	push   rsi
  4128c5:	push   rbx
  4128c6:	sub    rsp,0x250
  4128cd:	mov    rbx,rdx
  4128d0:	mov    rsi,rcx
  4128d3:	mov    ecx,0x4000
  4128d8:	mov    r12d,r8d
  4128db:	call   0x417828
  4128e0:	test   rbx,rbx
  4128e3:	mov    rbp,rax
  4128e6:	je     0x4129b0
  4128ec:	cmp    WORD PTR [rbx],0x0
  4128f0:	lea    rax,[rip+0xb699]        # 0x41df90
  4128f7:	cmove  rbx,rax
  4128fb:	test   rsi,rsi
  4128fe:	je     0x4129a1
  412904:	cmp    WORD PTR [rsi],0x0
  412908:	lea    rax,[rip+0xb695]        # 0x41dfa4
  41290f:	cmove  rsi,rax
  412913:	lea    rdi,[rsp+0x40]
  412918:	xor    ecx,ecx
  41291a:	mov    r8d,0x104
  412920:	mov    rdx,rdi
  412923:	call   QWORD PTR [rip+0x10bbf]        # 0x4234e8
  412929:	test   eax,eax
  41292b:	je     0x412990
  41292d:	lea    r8,[rip+0xb674]        # 0x41dfa8
  412934:	mov    QWORD PTR [rsp+0x30],rsi
  412939:	mov    DWORD PTR [rsp+0x28],r12d
  41293e:	mov    QWORD PTR [rsp+0x20],rbx
  412943:	mov    r9,rdi
  412946:	mov    edx,0x1fff
  41294b:	mov    rcx,rbp
  41294e:	call   0x4178e0
  412953:	mov    rax,QWORD PTR [rip+0xbcd6]        # 0x41e630
  41295a:	mov    eax,DWORD PTR [rax]
  41295c:	test   eax,eax
  41295e:	je     0x4129d5
  412960:	xor    ecx,ecx
  412962:	mov    r9d,0x12012
  412968:	lea    r8,[rip+0xb6d1]        # 0x41e040
  41296f:	mov    rdx,rbp
  412972:	call   QWORD PTR [rip+0x10f10]        # 0x423888
  412978:	cmp    eax,0x3
  41297b:	je     0x4129c1
  41297d:	cmp    eax,0x5
  412980:	jne    0x4129bc
  412982:	add    rsp,0x250
  412989:	pop    rbx
  41298a:	pop    rsi
  41298b:	pop    rdi
  41298c:	pop    rbp
  41298d:	pop    r12
  41298f:	ret    
  412990:	lea    rdx,[rip+0xb5f9]        # 0x41df90
  412997:	mov    rcx,rdi
  41299a:	call   0x417760
  41299f:	jmp    0x41292d
  4129a1:	lea    rsi,[rip+0xb5fc]        # 0x41dfa4
  4129a8:	jmp    0x412913
  4129ad:	nop    DWORD PTR [rax]
  4129b0:	lea    rbx,[rip+0xb5d9]        # 0x41df90
  4129b7:	jmp    0x4128fb
  4129bc:	call   0x4178c8
  4129c1:	mov    ecx,0x16
  4129c6:	call   0x417800
  4129cb:	mov    ecx,0x3
  4129d0:	call   0x417930
  4129d5:	call   0x417970
  4129da:	lea    rdx,[rip+0xb64f]        # 0x41e030
  4129e1:	lea    rcx,[rax+0x60]
  4129e5:	mov    r8,rbp
  4129e8:	call   0x417850
  4129ed:	call   0x4178c8
  4129f2:	nop
  4129f3:	nop    DWORD PTR [rax]
  4129f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412a00:	push   rbp
  412a01:	push   rdi
  412a02:	push   rsi
  412a03:	push   rbx
  412a04:	sub    rsp,0x38
  412a08:	mov    rdi,rdx
  412a0b:	mov    DWORD PTR [rsp+0x2c],r8d
  412a10:	mov    rbp,rcx
  412a13:	call   0x4177b8
  412a18:	lea    rcx,[rax+rax*1+0x2]
  412a1d:	call   0x417828
  412a22:	mov    rcx,rdi
  412a25:	mov    rsi,rax
  412a28:	call   0x4177b8
  412a2d:	lea    rcx,[rax+rax*1+0x2]
  412a32:	call   0x417828
  412a37:	movzx  r9d,BYTE PTR [rbp+0x0]
  412a3c:	xor    r10d,r10d
  412a3f:	mov    rbx,rax
  412a42:	mov    r8d,DWORD PTR [rsp+0x2c]
  412a47:	test   r9b,r9b
  412a4a:	je     0x412a67
  412a4c:	nop    DWORD PTR [rax+0x0]
  412a50:	mov    WORD PTR [rsi+r10*2],r9w
  412a55:	add    r10,0x1
  412a59:	movzx  r9d,BYTE PTR [rbp+r10*1+0x0]
  412a5f:	test   r9b,r9b
  412a62:	jne    0x412a50
  412a64:	add    r10,r10
  412a67:	movzx  r9d,BYTE PTR [rdi]
  412a6b:	xor    edx,edx
  412a6d:	mov    WORD PTR [rsi+r10*1],dx
  412a72:	xor    r10d,r10d
  412a75:	test   r9b,r9b
  412a78:	je     0x412a96
  412a7a:	nop    WORD PTR [rax+rax*1+0x0]
  412a80:	mov    WORD PTR [rbx+r10*2],r9w
  412a85:	add    r10,0x1
  412a89:	movzx  r9d,BYTE PTR [rdi+r10*1]
  412a8e:	test   r9b,r9b
  412a91:	jne    0x412a80
  412a93:	add    r10,r10
  412a96:	xor    eax,eax
  412a98:	mov    rdx,rbx
  412a9b:	mov    rcx,rsi
  412a9e:	mov    WORD PTR [rbx+r10*1],ax
  412aa3:	call   0x4128c0
  412aa8:	mov    rcx,rsi
  412aab:	call   0x417860
  412ab0:	mov    rcx,rbx
  412ab3:	add    rsp,0x38
  412ab7:	pop    rbx
  412ab8:	pop    rsi
  412ab9:	pop    rdi
  412aba:	pop    rbp
  412abb:	jmp    0x417860
  412ac0:	sub    rsp,0x58
  412ac4:	test   r8d,r8d
  412ac7:	mov    eax,r8d
  412aca:	mov    WORD PTR [rsp+0x68],dx
  412acf:	jne    0x412ae4
  412ad1:	cmp    dx,0xff
  412ad6:	ja     0x412b2a
  412ad8:	mov    BYTE PTR [rcx],dl
  412ada:	mov    eax,0x1
  412adf:	add    rsp,0x58
  412ae3:	ret    
  412ae4:	lea    rdx,[rsp+0x4c]
  412ae9:	mov    DWORD PTR [rsp+0x28],r9d
  412aee:	mov    QWORD PTR [rsp+0x20],rcx
  412af3:	mov    DWORD PTR [rsp+0x4c],0x0
  412afb:	mov    QWORD PTR [rsp+0x30],0x0
  412b04:	mov    r9d,0x1
  412b0a:	mov    QWORD PTR [rsp+0x38],rdx
  412b0f:	lea    r8,[rsp+0x68]
  412b14:	xor    edx,edx
  412b16:	mov    ecx,eax
  412b18:	call   QWORD PTR [rip+0x10a7a]        # 0x423598
  412b1e:	test   eax,eax
  412b20:	je     0x412b2a
  412b22:	mov    edx,DWORD PTR [rsp+0x4c]
  412b26:	test   edx,edx
  412b28:	je     0x412adf
  412b2a:	call   0x417938
  412b2f:	mov    DWORD PTR [rax],0x2a
  412b35:	mov    eax,0xffffffff
  412b3a:	add    rsp,0x58
  412b3e:	ret    
  412b3f:	nop
  412b40:	push   rdi
  412b41:	push   rsi
  412b42:	push   rbx
  412b43:	sub    rsp,0x30
  412b47:	lea    rax,[rsp+0x20]
  412b4c:	test   rcx,rcx
  412b4f:	mov    rbx,rcx
  412b52:	mov    esi,edx
  412b54:	cmove  rbx,rax
  412b58:	mov    rax,QWORD PTR [rip+0xb9a1]        # 0x41e500
  412b5f:	mov    rax,QWORD PTR [rax]
  412b62:	mov    edi,DWORD PTR [rax]
  412b64:	call   0x417988
  412b69:	movzx  edx,si
  412b6c:	mov    r8d,eax
  412b6f:	mov    rcx,rbx
  412b72:	mov    r9d,edi
  412b75:	call   0x412ac0
  412b7a:	cdqe   
  412b7c:	add    rsp,0x30
  412b80:	pop    rbx
  412b81:	pop    rsi
  412b82:	pop    rdi
  412b83:	ret    
  412b84:	xchg   ax,ax
  412b86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412b90:	push   r14
  412b92:	push   r13
  412b94:	push   r12
  412b96:	push   rbp
  412b97:	push   rdi
  412b98:	push   rsi
  412b99:	push   rbx
  412b9a:	sub    rsp,0x30
  412b9e:	mov    r13,rdx
  412ba1:	mov    rbx,rcx
  412ba4:	mov    rdi,r8
  412ba7:	call   0x417988
  412bac:	mov    ebp,eax
  412bae:	mov    rax,QWORD PTR [rip+0xb94b]        # 0x41e500
  412bb5:	mov    r14,QWORD PTR [r13+0x0]
  412bb9:	mov    rax,QWORD PTR [rax]
  412bbc:	test   r14,r14
  412bbf:	mov    r12d,DWORD PTR [rax]
  412bc2:	je     0x412cb0
  412bc8:	xor    esi,esi
  412bca:	test   rbx,rbx
  412bcd:	je     0x412c60
  412bd3:	test   rdi,rdi
  412bd6:	jne    0x412bf8
  412bd8:	jmp    0x412c24
  412bda:	nop    WORD PTR [rax+rax*1+0x0]
  412be0:	movsxd r10,eax
  412be3:	add    rbx,r10
  412be6:	add    rsi,r10
  412be9:	cmp    BYTE PTR [rbx-0x1],0x0
  412bed:	je     0x412c40
  412bef:	add    r14,0x2
  412bf3:	cmp    rdi,rsi
  412bf6:	jbe    0x412c24
  412bf8:	movzx  edx,WORD PTR [r14]
  412bfc:	mov    r9d,r12d
  412bff:	mov    r8d,ebp
  412c02:	mov    rcx,rbx
  412c05:	call   0x412ac0
  412c0a:	test   eax,eax
  412c0c:	jg     0x412be0
  412c0e:	mov    rax,0xffffffffffffffff
  412c15:	add    rsp,0x30
  412c19:	pop    rbx
  412c1a:	pop    rsi
  412c1b:	pop    rdi
  412c1c:	pop    rbp
  412c1d:	pop    r12
  412c1f:	pop    r13
  412c21:	pop    r14
  412c23:	ret    
  412c24:	mov    rax,rsi
  412c27:	mov    QWORD PTR [r13+0x0],r14
  412c2b:	add    rsp,0x30
  412c2f:	pop    rbx
  412c30:	pop    rsi
  412c31:	pop    rdi
  412c32:	pop    rbp
  412c33:	pop    r12
  412c35:	pop    r13
  412c37:	pop    r14
  412c39:	ret    
  412c3a:	nop    WORD PTR [rax+rax*1+0x0]
  412c40:	lea    rax,[rsi-0x1]
  412c44:	mov    QWORD PTR [r13+0x0],0x0
  412c4c:	add    rsp,0x30
  412c50:	pop    rbx
  412c51:	pop    rsi
  412c52:	pop    rdi
  412c53:	pop    rbp
  412c54:	pop    r12
  412c56:	pop    r13
  412c58:	pop    r14
  412c5a:	ret    
  412c5b:	nop    DWORD PTR [rax+rax*1+0x0]
  412c60:	test   rdi,rdi
  412c63:	lea    rbx,[rsp+0x20]
  412c68:	jne    0x412c8b
  412c6a:	jmp    0x412cc1
  412c6c:	nop    DWORD PTR [rax+0x0]
  412c70:	movsxd rdx,eax
  412c73:	sub    eax,0x1
  412c76:	cdqe   
  412c78:	add    rsi,rdx
  412c7b:	cmp    BYTE PTR [rsp+rax*1+0x20],0x0
  412c80:	je     0x412cc9
  412c82:	add    r14,0x2
  412c86:	cmp    rdi,rsi
  412c89:	jbe    0x412cc1
  412c8b:	movzx  edx,WORD PTR [r14]
  412c8f:	mov    r9d,r12d
  412c92:	mov    r8d,ebp
  412c95:	mov    rcx,rbx
  412c98:	call   0x412ac0
  412c9d:	test   eax,eax
  412c9f:	jg     0x412c70
  412ca1:	jmp    0x412c0e
  412ca6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412cb0:	xor    eax,eax
  412cb2:	add    rsp,0x30
  412cb6:	pop    rbx
  412cb7:	pop    rsi
  412cb8:	pop    rdi
  412cb9:	pop    rbp
  412cba:	pop    r12
  412cbc:	pop    r13
  412cbe:	pop    r14
  412cc0:	ret    
  412cc1:	mov    rax,rsi
  412cc4:	jmp    0x412c15
  412cc9:	lea    rax,[rsi-0x1]
  412ccd:	jmp    0x412c15
  412cd2:	nop
  412cd3:	nop
  412cd4:	nop
  412cd5:	nop
  412cd6:	nop
  412cd7:	nop
  412cd8:	nop
  412cd9:	nop
  412cda:	nop
  412cdb:	nop
  412cdc:	nop
  412cdd:	nop
  412cde:	nop
  412cdf:	nop
  412ce0:	jmp    0x4178f0
  412ce5:	nop
  412ce6:	nop
  412ce7:	nop
  412ce8:	nop
  412ce9:	nop
  412cea:	nop
  412ceb:	nop
  412cec:	nop
  412ced:	nop
  412cee:	nop
  412cef:	nop
  412cf0:	sub    rsp,0x38
  412cf4:	mov    r9,rdx
  412cf7:	mov    QWORD PTR [rsp+0x20],r8
  412cfc:	mov    rdx,rcx
  412cff:	xor    r8d,r8d
  412d02:	mov    ecx,0x6000
  412d07:	call   0x414620
  412d0c:	add    rsp,0x38
  412d10:	ret    
  412d11:	nop
  412d12:	nop
  412d13:	nop
  412d14:	nop
  412d15:	nop
  412d16:	nop
  412d17:	nop
  412d18:	nop
  412d19:	nop
  412d1a:	nop
  412d1b:	nop
  412d1c:	nop
  412d1d:	nop
  412d1e:	nop
  412d1f:	nop
  412d20:	push   rsi
  412d21:	push   rbx
  412d22:	sub    rsp,0x38
  412d26:	mov    rbx,rcx
  412d29:	mov    rsi,rdx
  412d2c:	call   0x417970
  412d31:	lea    rdx,[rax+0x30]
  412d35:	mov    QWORD PTR [rsp+0x20],rsi
  412d3a:	mov    r9,rbx
  412d3d:	xor    r8d,r8d
  412d40:	mov    ecx,0x6000
  412d45:	call   0x414620
  412d4a:	add    rsp,0x38
  412d4e:	pop    rbx
  412d4f:	pop    rsi
  412d50:	ret    
  412d51:	nop
  412d52:	nop
  412d53:	nop
  412d54:	nop
  412d55:	nop
  412d56:	nop
  412d57:	nop
  412d58:	nop
  412d59:	nop
  412d5a:	nop
  412d5b:	nop
  412d5c:	nop
  412d5d:	nop
  412d5e:	nop
  412d5f:	nop
  412d60:	push   rsi
  412d61:	push   rbx
  412d62:	sub    rsp,0x38
  412d66:	test   rdx,rdx
  412d69:	mov    rsi,rcx
  412d6c:	je     0x412da0
  412d6e:	lea    rbx,[rdx-0x1]
  412d72:	mov    QWORD PTR [rsp+0x20],r9
  412d77:	mov    rdx,rcx
  412d7a:	mov    r9,r8
  412d7d:	xor    ecx,ecx
  412d7f:	mov    r8d,ebx
  412d82:	call   0x414620
  412d87:	cmp    eax,ebx
  412d89:	cmovle ebx,eax
  412d8c:	movsxd rbx,ebx
  412d8f:	mov    BYTE PTR [rsi+rbx*1],0x0
  412d93:	add    rsp,0x38
  412d97:	pop    rbx
  412d98:	pop    rsi
  412d99:	ret    
  412d9a:	nop    WORD PTR [rax+rax*1+0x0]
  412da0:	mov    QWORD PTR [rsp+0x20],r9
  412da5:	mov    rdx,rcx
  412da8:	mov    r9,r8
  412dab:	xor    ecx,ecx
  412dad:	xor    r8d,r8d
  412db0:	call   0x414620
  412db5:	add    rsp,0x38
  412db9:	pop    rbx
  412dba:	pop    rsi
  412dbb:	ret    
  412dbc:	nop
  412dbd:	nop
  412dbe:	nop
  412dbf:	nop
  412dc0:	push   rbx
  412dc1:	sub    rsp,0x30
  412dc5:	mov    rbx,rcx
  412dc8:	mov    r9,rdx
  412dcb:	mov    QWORD PTR [rsp+0x20],r8
  412dd0:	mov    rdx,rcx
  412dd3:	xor    r8d,r8d
  412dd6:	mov    ecx,0x4000
  412ddb:	call   0x414620
  412de0:	movsxd rdx,eax
  412de3:	mov    BYTE PTR [rbx+rdx*1],0x0
  412de7:	add    rsp,0x30
  412deb:	pop    rbx
  412dec:	ret    
  412ded:	nop
  412dee:	nop
  412def:	nop
  412df0:	sub    rsp,0x58
  412df4:	mov    rax,QWORD PTR [rdx]
  412df7:	mov    r11,rdx
  412dfa:	mov    edx,DWORD PTR [rdx+0x8]
  412dfd:	mov    r10,rdx
  412e00:	and    r10w,0x7fff
  412e06:	jne    0x412e24
  412e08:	mov    rdx,rax
  412e0b:	shr    rdx,0x20
  412e0f:	or     eax,edx
  412e11:	jne    0x412e90
  412e13:	mov    DWORD PTR [rsp+0x44],0x0
  412e1b:	movzx  eax,WORD PTR [r11+0x8]
  412e20:	xor    edx,edx
  412e22:	jmp    0x412e4b
  412e24:	cmp    r10w,0x7fff
  412e2a:	je     0x412eb0
  412e30:	movzx  eax,WORD PTR [r11+0x8]
  412e35:	mov    DWORD PTR [rsp+0x44],0x1
  412e3d:	mov    edx,eax
  412e3f:	and    edx,0x7fff
  412e45:	sub    edx,0x403e
  412e4b:	and    eax,0x8000
  412e50:	mov    r10,QWORD PTR [rsp+0x80]
  412e58:	mov    DWORD PTR [r10],eax
  412e5b:	lea    rax,[rsp+0x48]
  412e60:	mov    QWORD PTR [rsp+0x30],r9
  412e65:	mov    DWORD PTR [rsp+0x20],ecx
  412e69:	lea    r9,[rsp+0x44]
  412e6e:	lea    rcx,[rip+0x5e1b]        # 0x418c90
  412e75:	mov    DWORD PTR [rsp+0x28],r8d
  412e7a:	mov    QWORD PTR [rsp+0x38],rax
  412e7f:	mov    r8,r11
  412e82:	call   0x4152a0
  412e87:	add    rsp,0x58
  412e8b:	ret    
  412e8c:	nop    DWORD PTR [rax+0x0]
  412e90:	test   edx,edx
  412e92:	js     0x412e30
  412e94:	mov    DWORD PTR [rsp+0x44],0x2
  412e9c:	movzx  eax,WORD PTR [r11+0x8]
  412ea1:	mov    edx,0xffffbfc3
  412ea6:	jmp    0x412e4b
  412ea8:	nop    DWORD PTR [rax+rax*1+0x0]
  412eb0:	mov    rdx,rax
  412eb3:	shr    rdx,0x20
  412eb7:	and    edx,0x7fffffff
  412ebd:	or     edx,eax
  412ebf:	jne    0x412ed5
  412ec1:	mov    DWORD PTR [rsp+0x44],0x3
  412ec9:	movzx  eax,WORD PTR [r11+0x8]
  412ece:	xor    edx,edx
  412ed0:	jmp    0x412e4b
  412ed5:	mov    DWORD PTR [rsp+0x44],0x4
  412edd:	xor    edx,edx
  412edf:	xor    eax,eax
  412ee1:	jmp    0x412e50
  412ee6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412ef0:	push   rbx
  412ef1:	sub    rsp,0x20
  412ef5:	mov    rbx,rdx
  412ef8:	mov    edx,DWORD PTR [rdx+0x8]
  412efb:	test   dh,0x40
  412efe:	jne    0x412f08
  412f00:	mov    eax,DWORD PTR [rbx+0x24]
  412f03:	cmp    DWORD PTR [rbx+0x28],eax
  412f06:	jle    0x412f1a
  412f08:	and    dh,0x20
  412f0b:	jne    0x412f30
  412f0d:	movsxd rax,DWORD PTR [rbx+0x24]
  412f11:	mov    rdx,QWORD PTR [rbx]
  412f14:	mov    BYTE PTR [rdx+rax*1],cl
  412f17:	mov    eax,DWORD PTR [rbx+0x24]
  412f1a:	add    eax,0x1
  412f1d:	mov    DWORD PTR [rbx+0x24],eax
  412f20:	add    rsp,0x20
  412f24:	pop    rbx
  412f25:	ret    
  412f26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412f30:	mov    rdx,QWORD PTR [rbx]
  412f33:	call   0x417878
  412f38:	mov    eax,DWORD PTR [rbx+0x24]
  412f3b:	add    eax,0x1
  412f3e:	mov    DWORD PTR [rbx+0x24],eax
  412f41:	add    rsp,0x20
  412f45:	pop    rbx
  412f46:	ret    
  412f47:	nop    WORD PTR [rax+rax*1+0x0]
  412f50:	push   r14
  412f52:	push   r13
  412f54:	push   r12
  412f56:	push   rbp
  412f57:	push   rdi
  412f58:	push   rsi
  412f59:	push   rbx
  412f5a:	sub    rsp,0x40
  412f5e:	lea    r14,[rsp+0x2c]
  412f63:	lea    r13,[rsp+0x30]
  412f68:	mov    ebx,edx
  412f6a:	mov    rsi,r8
  412f6d:	xor    edx,edx
  412f6f:	mov    r12,rcx
  412f72:	mov    r8,r14
  412f75:	mov    rcx,r13
  412f78:	call   0x412b40
  412f7d:	mov    ebp,DWORD PTR [rsi+0x10]
  412f80:	cmp    ebp,ebx
  412f82:	jge    0x413029
  412f88:	test   ebp,ebp
  412f8a:	js     0x413029
  412f90:	mov    eax,DWORD PTR [rsi+0xc]
  412f93:	cmp    ebp,eax
  412f95:	jge    0x413036
  412f9b:	sub    eax,ebp
  412f9d:	test   eax,eax
  412f9f:	mov    DWORD PTR [rsi+0xc],eax
  412fa2:	jle    0x412fb0
  412fa4:	test   BYTE PTR [rsi+0x9],0x4
  412fa8:	je     0x413042
  412fae:	xchg   ax,ax
  412fb0:	test   ebp,ebp
  412fb2:	jle    0x41300d
  412fb4:	add    r12,0x2
  412fb8:	movzx  edx,WORD PTR [r12-0x2]
  412fbe:	mov    r8,r14
  412fc1:	mov    rcx,r13
  412fc4:	call   0x412b40
  412fc9:	test   eax,eax
  412fcb:	jle    0x41300d
  412fcd:	sub    eax,0x1
  412fd0:	mov    rbx,r13
  412fd3:	lea    rdi,[r13+rax*1+0x1]
  412fd8:	nop    DWORD PTR [rax+rax*1+0x0]
  412fe0:	add    rbx,0x1
  412fe4:	movsx  ecx,BYTE PTR [rbx-0x1]
  412fe8:	mov    rdx,rsi
  412feb:	call   0x412ef0
  412ff0:	cmp    rbx,rdi
  412ff3:	jne    0x412fe0
  412ff5:	sub    ebp,0x1
  412ff8:	jmp    0x412fb0
  412ffa:	nop    WORD PTR [rax+rax*1+0x0]
  413000:	mov    rdx,rsi
  413003:	mov    ecx,0x20
  413008:	call   0x412ef0
  41300d:	mov    eax,DWORD PTR [rsi+0xc]
  413010:	lea    edx,[rax-0x1]
  413013:	test   eax,eax
  413015:	mov    DWORD PTR [rsi+0xc],edx
  413018:	jg     0x413000
  41301a:	add    rsp,0x40
  41301e:	pop    rbx
  41301f:	pop    rsi
  413020:	pop    rdi
  413021:	pop    rbp
  413022:	pop    r12
  413024:	pop    r13
  413026:	pop    r14
  413028:	ret    
  413029:	mov    eax,DWORD PTR [rsi+0xc]
  41302c:	mov    ebp,ebx
  41302e:	cmp    ebp,eax
  413030:	jl     0x412f9b
  413036:	mov    DWORD PTR [rsi+0xc],0xffffffff
  41303d:	jmp    0x412fb0
  413042:	sub    eax,0x1
  413045:	mov    DWORD PTR [rsi+0xc],eax
  413048:	nop    DWORD PTR [rax+rax*1+0x0]
  413050:	mov    rdx,rsi
  413053:	mov    ecx,0x20
  413058:	call   0x412ef0
  41305d:	mov    eax,DWORD PTR [rsi+0xc]
  413060:	lea    edx,[rax-0x1]
  413063:	test   eax,eax
  413065:	mov    DWORD PTR [rsi+0xc],edx
  413068:	jne    0x413050
  41306a:	jmp    0x412fb0
  41306f:	nop
  413070:	push   rdi
  413071:	push   rsi
  413072:	push   rbx
  413073:	sub    rsp,0x20
  413077:	mov    edi,DWORD PTR [r8+0x10]
  41307b:	mov    rsi,rcx
  41307e:	mov    rbx,r8
  413081:	cmp    edi,edx
  413083:	jge    0x413100
  413085:	test   edi,edi
  413087:	js     0x413100
  413089:	mov    eax,DWORD PTR [rbx+0xc]
  41308c:	cmp    edi,eax
  41308e:	jge    0x413109
  413090:	sub    eax,edi
  413092:	test   eax,eax
  413094:	mov    DWORD PTR [rbx+0xc],eax
  413097:	jle    0x413162
  41309d:	test   BYTE PTR [rbx+0x9],0x4
  4130a1:	jne    0x413130
  4130a7:	sub    eax,0x1
  4130aa:	mov    DWORD PTR [rbx+0xc],eax
  4130ad:	nop    DWORD PTR [rax]
  4130b0:	mov    rdx,rbx
  4130b3:	mov    ecx,0x20
  4130b8:	call   0x412ef0
  4130bd:	mov    eax,DWORD PTR [rbx+0xc]
  4130c0:	mov    edx,eax
  4130c2:	sub    eax,0x1
  4130c5:	test   edx,edx
  4130c7:	mov    DWORD PTR [rbx+0xc],eax
  4130ca:	jne    0x4130b0
  4130cc:	test   edi,edi
  4130ce:	lea    edx,[rdi-0x1]
  4130d1:	je     0x413150
  4130d3:	lea    rdi,[rsi+rdx*1+0x1]
  4130d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4130e0:	add    rsi,0x1
  4130e4:	movsx  ecx,BYTE PTR [rsi-0x1]
  4130e8:	mov    rdx,rbx
  4130eb:	call   0x412ef0
  4130f0:	cmp    rsi,rdi
  4130f3:	jne    0x4130e0
  4130f5:	jmp    0x41314d
  4130f7:	nop    WORD PTR [rax+rax*1+0x0]
  413100:	mov    eax,DWORD PTR [rbx+0xc]
  413103:	mov    edi,edx
  413105:	cmp    edi,eax
  413107:	jl     0x413090
  413109:	test   edi,edi
  41310b:	mov    DWORD PTR [rbx+0xc],0xffffffff
  413112:	lea    edx,[rdi-0x1]
  413115:	jne    0x4130d3
  413117:	mov    DWORD PTR [rbx+0xc],0xfffffffe
  41311e:	add    rsp,0x20
  413122:	pop    rbx
  413123:	pop    rsi
  413124:	pop    rdi
  413125:	ret    
  413126:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413130:	test   edi,edi
  413132:	lea    edx,[rdi-0x1]
  413135:	jne    0x4130d3
  413137:	sub    eax,0x1
  41313a:	mov    DWORD PTR [rbx+0xc],eax
  41313d:	nop    DWORD PTR [rax]
  413140:	mov    rdx,rbx
  413143:	mov    ecx,0x20
  413148:	call   0x412ef0
  41314d:	mov    eax,DWORD PTR [rbx+0xc]
  413150:	lea    edx,[rax-0x1]
  413153:	test   eax,eax
  413155:	mov    DWORD PTR [rbx+0xc],edx
  413158:	jg     0x413140
  41315a:	add    rsp,0x20
  41315e:	pop    rbx
  41315f:	pop    rsi
  413160:	pop    rdi
  413161:	ret    
  413162:	test   edi,edi
  413164:	lea    edx,[rdi-0x1]
  413167:	jne    0x4130d3
  41316d:	sub    eax,0x1
  413170:	mov    DWORD PTR [rbx+0xc],eax
  413173:	jmp    0x41311e
  413175:	nop
  413176:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413180:	sub    rsp,0x38
  413184:	test   ecx,ecx
  413186:	mov    DWORD PTR [r8+0x10],0xffffffff
  41318e:	je     0x4131d4
  413190:	lea    rcx,[rsp+0x20]
  413195:	mov    r11d,DWORD PTR [r8+0x8]
  413199:	mov    BYTE PTR [rsp+0x20],0x2d
  41319e:	lea    r10,[rcx+0x1]
  4131a2:	and    r11d,0x20
  4131a6:	xor    r9d,r9d
  4131a9:	movzx  eax,BYTE PTR [rdx+r9*1]
  4131ae:	and    eax,0xffffffdf
  4131b1:	or     eax,r11d
  4131b4:	mov    BYTE PTR [r10+r9*1],al
  4131b8:	add    r9,0x1
  4131bc:	cmp    r9,0x3
  4131c0:	jne    0x4131a9
  4131c2:	lea    rdx,[r10+0x3]
  4131c6:	sub    rdx,rcx
  4131c9:	call   0x413070
  4131ce:	nop
  4131cf:	add    rsp,0x38
  4131d3:	ret    
  4131d4:	mov    r11d,DWORD PTR [r8+0x8]
  4131d8:	test   r11d,0x100
  4131df:	je     0x4131f1
  4131e1:	lea    rcx,[rsp+0x20]
  4131e6:	mov    BYTE PTR [rsp+0x20],0x2b
  4131eb:	lea    r10,[rcx+0x1]
  4131ef:	jmp    0x4131a2
  4131f1:	test   r11b,0x40
  4131f5:	je     0x413210
  4131f7:	lea    rcx,[rsp+0x20]
  4131fc:	mov    BYTE PTR [rsp+0x20],0x20
  413201:	lea    r10,[rcx+0x1]
  413205:	jmp    0x4131a2
  413207:	nop    WORD PTR [rax+rax*1+0x0]
  413210:	lea    rcx,[rsp+0x20]
  413215:	mov    r10,rcx
  413218:	jmp    0x4131a2
  41321a:	nop    WORD PTR [rax+rax*1+0x0]
  413220:	push   rbp
  413221:	push   r12
  413223:	push   rdi
  413224:	push   rsi
  413225:	push   rbx
  413226:	mov    rbp,rsp
  413229:	sub    rsp,0x30
  41322d:	cmp    DWORD PTR [rcx+0x14],0xfffffffd
  413231:	mov    rsi,rcx
  413234:	je     0x4132d0
  41323a:	movzx  edx,WORD PTR [rcx+0x18]
  41323e:	test   dx,dx
  413241:	je     0x4132a2
  413243:	movsxd rax,DWORD PTR [rsi+0x14]
  413247:	mov    r12,rsp
  41324a:	add    rax,0xf
  41324e:	and    rax,0xfffffffffffffff0
  413252:	call   0x4122a0
  413257:	sub    rsp,rax
  41325a:	lea    r8,[rbp-0x4]
  41325e:	mov    DWORD PTR [rbp-0x4],0x0
  413265:	lea    rbx,[rsp+0x20]
  41326a:	mov    rcx,rbx
  41326d:	call   0x412b40
  413272:	test   eax,eax
  413274:	jle    0x4132c0
  413276:	sub    eax,0x1
  413279:	lea    rdi,[rbx+rax*1+0x1]
  41327e:	xchg   ax,ax
  413280:	add    rbx,0x1
  413284:	movsx  ecx,BYTE PTR [rbx-0x1]
  413288:	mov    rdx,rsi
  41328b:	call   0x412ef0
  413290:	cmp    rbx,rdi
  413293:	jne    0x413280
  413295:	mov    rsp,r12
  413298:	mov    rsp,rbp
  41329b:	pop    rbx
  41329c:	pop    rsi
  41329d:	pop    rdi
  41329e:	pop    r12
  4132a0:	pop    rbp
  4132a1:	ret    
  4132a2:	mov    rdx,rsi
  4132a5:	mov    ecx,0x2e
  4132aa:	call   0x412ef0
  4132af:	nop
  4132b0:	mov    rsp,rbp
  4132b3:	pop    rbx
  4132b4:	pop    rsi
  4132b5:	pop    rdi
  4132b6:	pop    r12
  4132b8:	pop    rbp
  4132b9:	ret    
  4132ba:	nop    WORD PTR [rax+rax*1+0x0]
  4132c0:	mov    rdx,rsi
  4132c3:	mov    ecx,0x2e
  4132c8:	call   0x412ef0
  4132cd:	jmp    0x413295
  4132cf:	nop
  4132d0:	mov    DWORD PTR [rbp-0x4],0x0
  4132d7:	call   0x417830
  4132dc:	mov    rdx,QWORD PTR [rax]
  4132df:	lea    rcx,[rbp-0x6]
  4132e3:	lea    r9,[rbp-0x4]
  4132e7:	mov    r8d,0x10
  4132ed:	call   0x417500
  4132f2:	test   eax,eax
  4132f4:	jle    0x413306
  4132f6:	movzx  edx,WORD PTR [rbp-0x6]
  4132fa:	mov    WORD PTR [rsi+0x18],dx
  4132fe:	mov    DWORD PTR [rsi+0x14],eax
  413301:	jmp    0x41323e
  413306:	movzx  edx,WORD PTR [rsi+0x18]
  41330a:	jmp    0x4132fe
  41330c:	nop    DWORD PTR [rax+0x0]
  413310:	push   r12
  413312:	push   rbp
  413313:	push   rdi
  413314:	push   rsi
  413315:	push   rbx
  413316:	sub    rsp,0x20
  41331a:	mov    esi,r8d
  41331d:	mov    ebp,ecx
  41331f:	mov    rdi,rdx
  413322:	test   esi,esi
  413324:	mov    rbx,r9
  413327:	mov    r8d,DWORD PTR [r9+0xc]
  41332b:	jle    0x413502
  413331:	cmp    esi,r8d
  413334:	jg     0x413470
  41333a:	sub    r8d,esi
  41333d:	mov    DWORD PTR [r9+0xc],r8d
  413341:	test   r8d,r8d
  413344:	js     0x413470
  41334a:	mov    eax,DWORD PTR [rbx+0x10]
  41334d:	cmp    eax,r8d
  413350:	jge    0x413470
  413356:	sub    r8d,eax
  413359:	test   r8d,r8d
  41335c:	mov    DWORD PTR [rbx+0xc],r8d
  413360:	jle    0x41347d
  413366:	test   eax,eax
  413368:	jle    0x4135b5
  41336e:	sub    r8d,0x1
  413372:	test   esi,esi
  413374:	mov    DWORD PTR [rbx+0xc],r8d
  413378:	jle    0x413384
  41337a:	test   BYTE PTR [rbx+0x9],0x10
  41337e:	jne    0x41348f
  413384:	test   r8d,r8d
  413387:	jle    0x4133cd
  413389:	test   ebp,ebp
  41338b:	jne    0x41339b
  41338d:	mov    eax,DWORD PTR [rbx+0x8]
  413390:	test   eax,0x1c0
  413395:	je     0x413595
  41339b:	sub    r8d,0x1
  41339f:	test   r8d,r8d
  4133a2:	mov    DWORD PTR [rbx+0xc],r8d
  4133a6:	jle    0x4133cd
  4133a8:	test   DWORD PTR [rbx+0x8],0x600
  4133af:	jne    0x4133cd
  4133b1:	jmp    0x4133c0
  4133b3:	mov    rdx,rbx
  4133b6:	mov    ecx,0x20
  4133bb:	call   0x412ef0
  4133c0:	mov    eax,DWORD PTR [rbx+0xc]
  4133c3:	lea    edx,[rax-0x1]
  4133c6:	test   eax,eax
  4133c8:	mov    DWORD PTR [rbx+0xc],edx
  4133cb:	jg     0x4133b3
  4133cd:	test   ebp,ebp
  4133cf:	jne    0x4134f0
  4133d5:	mov    eax,DWORD PTR [rbx+0x8]
  4133d8:	test   ah,0x1
  4133db:	jne    0x413520
  4133e1:	test   al,0x40
  4133e3:	jne    0x4135a3
  4133e9:	mov    edx,DWORD PTR [rbx+0xc]
  4133ec:	test   edx,edx
  4133ee:	jle    0x413403
  4133f0:	mov    eax,DWORD PTR [rbx+0x8]
  4133f3:	and    eax,0x600
  4133f8:	cmp    eax,0x200
  4133fd:	je     0x413532
  413403:	test   esi,esi
  413405:	jle    0x413562
  41340b:	lea    r12,[rbx+0x20]
  41340f:	mov    ebp,0x55555556
  413414:	movzx  eax,BYTE PTR [rdi]
  413417:	mov    ecx,0x30
  41341c:	test   al,al
  41341e:	je     0x413427
  413420:	add    rdi,0x1
  413424:	movsx  ecx,al
  413427:	mov    rdx,rbx
  41342a:	call   0x412ef0
  41342f:	sub    esi,0x1
  413432:	je     0x413650
  413438:	test   BYTE PTR [rbx+0x9],0x10
  41343c:	je     0x413414
  41343e:	cmp    WORD PTR [rbx+0x20],0x0
  413443:	je     0x413414
  413445:	mov    eax,esi
  413447:	imul   ebp
  413449:	mov    eax,esi
  41344b:	sar    eax,0x1f
  41344e:	sub    edx,eax
  413450:	lea    eax,[rdx+rdx*2]
  413453:	cmp    esi,eax
  413455:	jne    0x413414
  413457:	mov    r8,rbx
  41345a:	mov    edx,0x1
  41345f:	mov    rcx,r12
  413462:	call   0x412f50
  413467:	jmp    0x413414
  413469:	nop    DWORD PTR [rax+0x0]
  413470:	mov    DWORD PTR [rbx+0xc],0xffffffff
  413477:	mov    r8d,0xffffffff
  41347d:	test   esi,esi
  41347f:	jle    0x4133cd
  413485:	test   BYTE PTR [rbx+0x9],0x10
  413489:	je     0x4133cd
  41348f:	cmp    WORD PTR [rbx+0x20],0x0
  413494:	je     0x413384
  41349a:	lea    ecx,[rsi+0x2]
  41349d:	mov    edx,0x55555556
  4134a2:	mov    eax,ecx
  4134a4:	sar    ecx,0x1f
  4134a7:	imul   edx
  4134a9:	sub    edx,ecx
  4134ab:	cmp    edx,0x1
  4134ae:	jle    0x413384
  4134b4:	test   r8d,r8d
  4134b7:	jle    0x4133cd
  4134bd:	mov    eax,r8d
  4134c0:	sub    eax,edx
  4134c2:	add    eax,0x1
  4134c5:	jmp    0x4134d9
  4134c7:	nop    WORD PTR [rax+rax*1+0x0]
  4134d0:	test   r8d,r8d
  4134d3:	je     0x413644
  4134d9:	sub    r8d,0x1
  4134dd:	cmp    r8d,eax
  4134e0:	jne    0x4134d0
  4134e2:	mov    DWORD PTR [rbx+0xc],r8d
  4134e6:	jmp    0x413384
  4134eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4134f0:	mov    rdx,rbx
  4134f3:	mov    ecx,0x2d
  4134f8:	call   0x412ef0
  4134fd:	jmp    0x4133e9
  413502:	test   r8d,r8d
  413505:	jle    0x413341
  41350b:	sub    r8d,0x1
  41350f:	mov    DWORD PTR [r9+0xc],r8d
  413513:	jmp    0x41334a
  413518:	nop    DWORD PTR [rax+rax*1+0x0]
  413520:	mov    rdx,rbx
  413523:	mov    ecx,0x2b
  413528:	call   0x412ef0
  41352d:	jmp    0x4133e9
  413532:	sub    edx,0x1
  413535:	mov    DWORD PTR [rbx+0xc],edx
  413538:	nop    DWORD PTR [rax+rax*1+0x0]
  413540:	mov    rdx,rbx
  413543:	mov    ecx,0x30
  413548:	call   0x412ef0
  41354d:	mov    eax,DWORD PTR [rbx+0xc]
  413550:	lea    edx,[rax-0x1]
  413553:	test   eax,eax
  413555:	mov    DWORD PTR [rbx+0xc],edx
  413558:	jg     0x413540
  41355a:	test   esi,esi
  41355c:	jg     0x41340b
  413562:	mov    rdx,rbx
  413565:	mov    ecx,0x30
  41356a:	call   0x412ef0
  41356f:	mov    eax,DWORD PTR [rbx+0x10]
  413572:	test   eax,eax
  413574:	jg     0x4135e2
  413576:	test   BYTE PTR [rbx+0x9],0x8
  41357a:	jne    0x4135e2
  41357c:	test   esi,esi
  41357e:	jne    0x413626
  413584:	sub    eax,0x1
  413587:	mov    DWORD PTR [rbx+0x10],eax
  41358a:	add    rsp,0x20
  41358e:	pop    rbx
  41358f:	pop    rsi
  413590:	pop    rdi
  413591:	pop    rbp
  413592:	pop    r12
  413594:	ret    
  413595:	test   ah,0x6
  413598:	je     0x4133c0
  41359e:	jmp    0x4133d8
  4135a3:	mov    rdx,rbx
  4135a6:	mov    ecx,0x20
  4135ab:	call   0x412ef0
  4135b0:	jmp    0x4133e9
  4135b5:	mov    eax,DWORD PTR [rbx+0x8]
  4135b8:	test   ah,0x8
  4135bb:	jne    0x41336e
  4135c1:	test   esi,esi
  4135c3:	jle    0x413389
  4135c9:	test   ah,0x10
  4135cc:	je     0x413389
  4135d2:	cmp    WORD PTR [rbx+0x20],0x0
  4135d7:	jne    0x41349a
  4135dd:	jmp    0x413389
  4135e2:	mov    rcx,rbx
  4135e5:	call   0x413220
  4135ea:	test   esi,esi
  4135ec:	je     0x41360b
  4135ee:	jmp    0x413623
  4135f0:	movzx  eax,BYTE PTR [rdi]
  4135f3:	mov    ecx,0x30
  4135f8:	test   al,al
  4135fa:	je     0x413603
  4135fc:	add    rdi,0x1
  413600:	movsx  ecx,al
  413603:	mov    rdx,rbx
  413606:	call   0x412ef0
  41360b:	mov    eax,DWORD PTR [rbx+0x10]
  41360e:	lea    edx,[rax-0x1]
  413611:	test   eax,eax
  413613:	mov    DWORD PTR [rbx+0x10],edx
  413616:	jg     0x4135f0
  413618:	add    rsp,0x20
  41361c:	pop    rbx
  41361d:	pop    rsi
  41361e:	pop    rdi
  41361f:	pop    rbp
  413620:	pop    r12
  413622:	ret    
  413623:	mov    eax,DWORD PTR [rbx+0x10]
  413626:	add    eax,esi
  413628:	mov    DWORD PTR [rbx+0x10],eax
  41362b:	nop    DWORD PTR [rax+rax*1+0x0]
  413630:	mov    rdx,rbx
  413633:	mov    ecx,0x30
  413638:	call   0x412ef0
  41363d:	add    esi,0x1
  413640:	jne    0x413630
  413642:	jmp    0x41360b
  413644:	mov    DWORD PTR [rbx+0xc],0x0
  41364b:	jmp    0x4133cd
  413650:	mov    eax,DWORD PTR [rbx+0x10]
  413653:	test   eax,eax
  413655:	jle    0x413661
  413657:	mov    rcx,rbx
  41365a:	call   0x413220
  41365f:	jmp    0x41360b
  413661:	test   BYTE PTR [rbx+0x9],0x8
  413665:	jne    0x413657
  413667:	jmp    0x413584
  41366c:	nop    DWORD PTR [rax+0x0]
  413670:	push   rsi
  413671:	push   rbx
  413672:	sub    rsp,0x68
  413676:	mov    r8d,DWORD PTR [rdx+0x10]
  41367a:	fld    TBYTE PTR [rcx]
  41367c:	mov    rbx,rdx
  41367f:	test   r8d,r8d
  413682:	js     0x413720
  413688:	lea    rdx,[rsp+0x30]
  41368d:	lea    r9,[rsp+0x4c]
  413692:	mov    ecx,0x3
  413697:	fstp   TBYTE PTR [rsp+0x50]
  41369b:	mov    rax,QWORD PTR [rsp+0x50]
  4136a0:	mov    QWORD PTR [rsp+0x30],rax
  4136a5:	mov    rax,QWORD PTR [rsp+0x58]
  4136aa:	mov    QWORD PTR [rsp+0x38],rax
  4136af:	lea    rax,[rsp+0x48]
  4136b4:	mov    QWORD PTR [rsp+0x20],rax
  4136b9:	call   0x412df0
  4136be:	mov    r8d,DWORD PTR [rsp+0x4c]
  4136c3:	mov    rsi,rax
  4136c6:	cmp    r8d,0xffff8000
  4136cd:	je     0x413732
  4136cf:	mov    ecx,DWORD PTR [rsp+0x48]
  4136d3:	mov    rdx,rax
  4136d6:	mov    r9,rbx
  4136d9:	call   0x413310
  4136de:	mov    eax,DWORD PTR [rbx+0xc]
  4136e1:	lea    edx,[rax-0x1]
  4136e4:	test   eax,eax
  4136e6:	mov    DWORD PTR [rbx+0xc],edx
  4136e9:	jle    0x41370e
  4136eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4136f0:	mov    rdx,rbx
  4136f3:	mov    ecx,0x20
  4136f8:	call   0x412ef0
  4136fd:	mov    r8d,DWORD PTR [rbx+0xc]
  413701:	lea    r9d,[r8-0x1]
  413705:	test   r8d,r8d
  413708:	mov    DWORD PTR [rbx+0xc],r9d
  41370c:	jg     0x4136f0
  41370e:	mov    rcx,rsi
  413711:	call   0x415100
  413716:	nop
  413717:	add    rsp,0x68
  41371b:	pop    rbx
  41371c:	pop    rsi
  41371d:	ret    
  41371e:	xchg   ax,ax
  413720:	mov    DWORD PTR [rdx+0x10],0x6
  413727:	mov    r8d,0x6
  41372d:	jmp    0x413688
  413732:	mov    ecx,DWORD PTR [rsp+0x48]
  413736:	mov    r8,rbx
  413739:	mov    rdx,rax
  41373c:	call   0x413180
  413741:	mov    rcx,rsi
  413744:	call   0x415100
  413749:	nop
  41374a:	add    rsp,0x68
  41374e:	pop    rbx
  41374f:	pop    rsi
  413750:	ret    
  413751:	nop    DWORD PTR [rax+rax*1+0x0]
  413756:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413760:	push   rbp
  413761:	push   r13
  413763:	push   r12
  413765:	push   rdi
  413766:	push   rsi
  413767:	push   rbx
  413768:	sub    rsp,0x28
  41376c:	lea    rbp,[rsp+0x80]
  413774:	mov    ebx,DWORD PTR [rdx+0x10]
  413777:	mov    r11d,DWORD PTR [rdx+0x8]
  41377b:	mov    r8d,0x0
  413781:	mov    rsi,rdx
  413784:	test   ebx,ebx
  413786:	cmovns r8d,ebx
  41378a:	add    r8d,0x17
  41378e:	test   r11d,0x1000
  413795:	je     0x4137a2
  413797:	cmp    WORD PTR [rdx+0x20],0x0
  41379c:	jne    0x413992
  4137a2:	movsxd r13,DWORD PTR [rsi+0xc]
  4137a6:	movsxd rax,r8d
  4137a9:	cmp    r8d,r13d
  4137ac:	cmovl  rax,r13
  4137b0:	add    rax,0x1e
  4137b4:	and    rax,0xfffffffffffffff0
  4137b8:	call   0x4122a0
  4137bd:	sub    rsp,rax
  4137c0:	test   r11b,0x80
  4137c4:	lea    r12,[rsp+0x20]
  4137c9:	je     0x4137dc
  4137cb:	test   rcx,rcx
  4137ce:	js     0x413a20
  4137d4:	and    r11b,0x7f
  4137d8:	mov    DWORD PTR [rsi+0x8],r11d
  4137dc:	test   rcx,rcx
  4137df:	je     0x413a28
  4137e5:	mov    r10d,r11d
  4137e8:	mov    r8,r12
  4137eb:	movabs r9,0xcccccccccccccccd
  4137f5:	and    r10d,0x1000
  4137fc:	jmp    0x413833
  4137fe:	xchg   ax,ax
  413800:	cmp    r12,rdi
  413803:	je     0x413830
  413805:	test   r10d,r10d
  413808:	je     0x413830
  41380a:	cmp    WORD PTR [rsi+0x20],0x0
  41380f:	je     0x413830
  413811:	mov    rax,rdi
  413814:	sub    rax,r12
  413817:	cqo    
  413819:	shr    rdx,0x3e
  41381d:	add    rax,rdx
  413820:	and    eax,0x3
  413823:	sub    rax,rdx
  413826:	cmp    rax,0x3
  41382a:	je     0x413970
  413830:	mov    r8,rdi
  413833:	mov    rax,rcx
  413836:	lea    rdi,[r8+0x1]
  41383a:	mul    r9
  41383d:	shr    rdx,0x3
  413841:	lea    rax,[rdx+rdx*4]
  413845:	add    rax,rax
  413848:	sub    rcx,rax
  41384b:	add    ecx,0x30
  41384e:	test   rdx,rdx
  413851:	mov    BYTE PTR [r8],cl
  413854:	mov    rcx,rdx
  413857:	jne    0x413800
  413859:	test   ebx,ebx
  41385b:	jle    0x413895
  41385d:	mov    rax,r12
  413860:	sub    rax,rdi
  413863:	add    eax,ebx
  413865:	test   eax,eax
  413867:	jle    0x413895
  413869:	sub    eax,0x1
  41386c:	mov    rdx,rax
  41386f:	lea    rcx,[rdi+rax*1+0x1]
  413874:	mov    rax,rdi
  413877:	nop    WORD PTR [rax+rax*1+0x0]
  413880:	add    rax,0x1
  413884:	mov    BYTE PTR [rax-0x1],0x30
  413888:	cmp    rax,rcx
  41388b:	jne    0x413880
  41388d:	movsxd rax,edx
  413890:	lea    rdi,[rdi+rax*1+0x1]
  413895:	cmp    r12,rdi
  413898:	jne    0x4138a5
  41389a:	test   ebx,ebx
  41389c:	je     0x4138a5
  41389e:	mov    BYTE PTR [rdi],0x30
  4138a1:	add    rdi,0x1
  4138a5:	test   r13d,r13d
  4138a8:	jle    0x41390e
  4138aa:	mov    rax,r12
  4138ad:	sub    rax,rdi
  4138b0:	add    r13d,eax
  4138b3:	test   r13d,r13d
  4138b6:	mov    DWORD PTR [rsi+0xc],r13d
  4138ba:	jle    0x41390e
  4138bc:	test   r11d,0x1c0
  4138c3:	je     0x4138cd
  4138c5:	sub    r13d,0x1
  4138c9:	mov    DWORD PTR [rsi+0xc],r13d
  4138cd:	test   ebx,ebx
  4138cf:	js     0x4139d0
  4138d5:	test   r11d,0x400
  4138dc:	jne    0x41390e
  4138de:	mov    eax,DWORD PTR [rsi+0xc]
  4138e1:	lea    edx,[rax-0x1]
  4138e4:	test   eax,eax
  4138e6:	mov    DWORD PTR [rsi+0xc],edx
  4138e9:	jle    0x41390e
  4138eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4138f0:	mov    rdx,rsi
  4138f3:	mov    ecx,0x20
  4138f8:	call   0x412ef0
  4138fd:	mov    eax,DWORD PTR [rsi+0xc]
  413900:	lea    edx,[rax-0x1]
  413903:	test   eax,eax
  413905:	mov    DWORD PTR [rsi+0xc],edx
  413908:	jg     0x4138f0
  41390a:	mov    r11d,DWORD PTR [rsi+0x8]
  41390e:	test   r11b,0x80
  413912:	je     0x413980
  413914:	lea    rbx,[rdi+0x1]
  413918:	mov    BYTE PTR [rdi],0x2d
  41391b:	cmp    r12,rbx
  41391e:	jae    0x41394e
  413920:	sub    rbx,0x1
  413924:	movsx  ecx,BYTE PTR [rbx]
  413927:	mov    rdx,rsi
  41392a:	call   0x412ef0
  41392f:	cmp    rbx,r12
  413932:	jne    0x413920
  413934:	mov    eax,DWORD PTR [rsi+0xc]
  413937:	lea    edx,[rax-0x1]
  41393a:	test   eax,eax
  41393c:	mov    DWORD PTR [rsi+0xc],edx
  41393f:	jle    0x41395b
  413941:	mov    rdx,rsi
  413944:	mov    ecx,0x20
  413949:	call   0x412ef0
  41394e:	mov    eax,DWORD PTR [rsi+0xc]
  413951:	lea    edx,[rax-0x1]
  413954:	test   eax,eax
  413956:	mov    DWORD PTR [rsi+0xc],edx
  413959:	jg     0x413941
  41395b:	lea    rsp,[rbp-0x58]
  41395f:	pop    rbx
  413960:	pop    rsi
  413961:	pop    rdi
  413962:	pop    r12
  413964:	pop    r13
  413966:	pop    rbp
  413967:	ret    
  413968:	nop    DWORD PTR [rax+rax*1+0x0]
  413970:	lea    rdi,[r8+0x2]
  413974:	mov    BYTE PTR [r8+0x1],0x2c
  413979:	jmp    0x413830
  41397e:	xchg   ax,ax
  413980:	test   r11d,0x100
  413987:	je     0x4139b0
  413989:	lea    rbx,[rdi+0x1]
  41398d:	mov    BYTE PTR [rdi],0x2b
  413990:	jmp    0x41391b
  413992:	mov    eax,r8d
  413995:	mov    edx,0x55555556
  41399a:	imul   edx
  41399c:	mov    eax,r8d
  41399f:	sar    eax,0x1f
  4139a2:	sub    edx,eax
  4139a4:	add    r8d,edx
  4139a7:	jmp    0x4137a2
  4139ac:	nop    DWORD PTR [rax+0x0]
  4139b0:	and    r11d,0x40
  4139b4:	mov    rbx,rdi
  4139b7:	je     0x41391b
  4139bd:	add    rbx,0x1
  4139c1:	mov    BYTE PTR [rdi],0x20
  4139c4:	jmp    0x41391b
  4139c9:	nop    DWORD PTR [rax+0x0]
  4139d0:	mov    eax,r11d
  4139d3:	and    eax,0x600
  4139d8:	cmp    eax,0x200
  4139dd:	jne    0x4138d5
  4139e3:	mov    eax,DWORD PTR [rsi+0xc]
  4139e6:	lea    ecx,[rax-0x1]
  4139e9:	test   eax,eax
  4139eb:	mov    DWORD PTR [rsi+0xc],ecx
  4139ee:	jle    0x41390e
  4139f4:	lea    rdx,[rdi+rcx*1+0x1]
  4139f9:	mov    rax,rdi
  4139fc:	nop    DWORD PTR [rax+0x0]
  413a00:	add    rax,0x1
  413a04:	mov    BYTE PTR [rax-0x1],0x30
  413a08:	cmp    rax,rdx
  413a0b:	jne    0x413a00
  413a0d:	lea    rdi,[rdi+rcx*1+0x1]
  413a12:	mov    DWORD PTR [rsi+0xc],0xffffffff
  413a19:	jmp    0x41390e
  413a1e:	xchg   ax,ax
  413a20:	neg    rcx
  413a23:	jmp    0x4137dc
  413a28:	mov    rdi,r12
  413a2b:	jmp    0x413859
  413a30:	push   rdi
  413a31:	push   rsi
  413a32:	push   rbx
  413a33:	sub    rsp,0x20
  413a37:	mov    rsi,r9
  413a3a:	lea    r9d,[r8-0x1]
  413a3e:	mov    r8d,0x66666667
  413a44:	mov    r10,rdx
  413a47:	mov    eax,r9d
  413a4a:	movsxd rbx,r9d
  413a4d:	sar    r9d,0x1f
  413a51:	imul   r8d
  413a54:	sar    edx,0x2
  413a57:	mov    r8d,edx
  413a5a:	sub    r8d,r9d
  413a5d:	mov    r9d,0x1
  413a63:	je     0x413a8b
  413a65:	mov    r11d,0x66666667
  413a6b:	nop    DWORD PTR [rax+rax*1+0x0]
  413a70:	mov    eax,r8d
  413a73:	sar    r8d,0x1f
  413a77:	add    r9d,0x1
  413a7b:	imul   r11d
  413a7e:	mov    eax,edx
  413a80:	sar    eax,0x2
  413a83:	sub    eax,r8d
  413a86:	mov    r8d,eax
  413a89:	jne    0x413a70
  413a8b:	mov    edi,DWORD PTR [rsi+0x2c]
  413a8e:	mov    eax,DWORD PTR [rsi+0xc]
  413a91:	cmp    r9d,edi
  413a94:	cmovge edi,r9d
  413a98:	lea    edx,[rdi+0x2]
  413a9b:	cmp    eax,edx
  413a9d:	jg     0x413af2
  413a9f:	mov    DWORD PTR [rsi+0xc],0xffffffff
  413aa6:	mov    r9,rsi
  413aa9:	mov    rdx,r10
  413aac:	mov    r8d,0x1
  413ab2:	call   0x413310
  413ab7:	mov    ecx,DWORD PTR [rsi+0x8]
  413aba:	mov    eax,DWORD PTR [rsi+0x2c]
  413abd:	mov    rdx,rsi
  413ac0:	mov    DWORD PTR [rsi+0x10],eax
  413ac3:	mov    eax,ecx
  413ac5:	and    ecx,0x20
  413ac8:	or     eax,0x1c0
  413acd:	or     ecx,0x45
  413ad0:	mov    DWORD PTR [rsi+0x8],eax
  413ad3:	call   0x412ef0
  413ad8:	lea    r9d,[rdi+0x1]
  413adc:	add    DWORD PTR [rsi+0xc],r9d
  413ae0:	mov    rdx,rsi
  413ae3:	mov    rcx,rbx
  413ae6:	add    rsp,0x20
  413aea:	pop    rbx
  413aeb:	pop    rsi
  413aec:	pop    rdi
  413aed:	jmp    0x413760
  413af2:	sub    eax,edx
  413af4:	mov    DWORD PTR [rsi+0xc],eax
  413af7:	jmp    0x413aa6
  413af9:	nop    DWORD PTR [rax+0x0]
  413b00:	push   rsi
  413b01:	push   rbx
  413b02:	sub    rsp,0x68
  413b06:	mov    eax,DWORD PTR [rdx+0x10]
  413b09:	fld    TBYTE PTR [rcx]
  413b0b:	mov    rbx,rdx
  413b0e:	test   eax,eax
  413b10:	lea    r8d,[rax+0x1]
  413b14:	js     0x413b80
  413b16:	lea    rdx,[rsp+0x30]
  413b1b:	lea    r9,[rsp+0x4c]
  413b20:	mov    ecx,0x2
  413b25:	fstp   TBYTE PTR [rsp+0x50]
  413b29:	mov    rax,QWORD PTR [rsp+0x50]
  413b2e:	mov    QWORD PTR [rsp+0x30],rax
  413b33:	mov    rax,QWORD PTR [rsp+0x58]
  413b38:	mov    QWORD PTR [rsp+0x38],rax
  413b3d:	lea    rax,[rsp+0x48]
  413b42:	mov    QWORD PTR [rsp+0x20],rax
  413b47:	call   0x412df0
  413b4c:	mov    r8d,DWORD PTR [rsp+0x4c]
  413b51:	mov    rsi,rax
  413b54:	cmp    r8d,0xffff8000
  413b5b:	je     0x413b90
  413b5d:	mov    ecx,DWORD PTR [rsp+0x48]
  413b61:	mov    r9,rbx
  413b64:	mov    rdx,rax
  413b67:	call   0x413a30
  413b6c:	mov    rcx,rsi
  413b6f:	call   0x415100
  413b74:	nop
  413b75:	add    rsp,0x68
  413b79:	pop    rbx
  413b7a:	pop    rsi
  413b7b:	ret    
  413b7c:	nop    DWORD PTR [rax+0x0]
  413b80:	mov    DWORD PTR [rdx+0x10],0x6
  413b87:	mov    r8d,0x7
  413b8d:	jmp    0x413b16
  413b8f:	nop
  413b90:	mov    ecx,DWORD PTR [rsp+0x48]
  413b94:	mov    r8,rbx
  413b97:	mov    rdx,rax
  413b9a:	call   0x413180
  413b9f:	mov    rcx,rsi
  413ba2:	call   0x415100
  413ba7:	nop
  413ba8:	add    rsp,0x68
  413bac:	pop    rbx
  413bad:	pop    rsi
  413bae:	ret    
  413baf:	nop
  413bb0:	push   rsi
  413bb1:	push   rbx
  413bb2:	sub    rsp,0x78
  413bb6:	mov    r8d,DWORD PTR [rdx+0x10]
  413bba:	fld    TBYTE PTR [rcx]
  413bbc:	mov    rbx,rdx
  413bbf:	test   r8d,r8d
  413bc2:	js     0x413d00
  413bc8:	je     0x413ce0
  413bce:	lea    rdx,[rsp+0x40]
  413bd3:	lea    r9,[rsp+0x5c]
  413bd8:	mov    ecx,0x2
  413bdd:	fstp   TBYTE PTR [rsp+0x60]
  413be1:	mov    rax,QWORD PTR [rsp+0x60]
  413be6:	mov    QWORD PTR [rsp+0x40],rax
  413beb:	mov    rax,QWORD PTR [rsp+0x68]
  413bf0:	mov    QWORD PTR [rsp+0x48],rax
  413bf5:	lea    rax,[rsp+0x58]
  413bfa:	mov    QWORD PTR [rsp+0x20],rax
  413bff:	call   0x412df0
  413c04:	mov    r8d,DWORD PTR [rsp+0x5c]
  413c09:	mov    rsi,rax
  413c0c:	cmp    r8d,0xffff8000
  413c13:	je     0x413d20
  413c19:	cmp    r8d,0xfffffffd
  413c1d:	jl     0x413ca0
  413c23:	mov    eax,DWORD PTR [rbx+0x10]
  413c26:	cmp    r8d,eax
  413c29:	jg     0x413ca0
  413c2b:	test   BYTE PTR [rbx+0x9],0x8
  413c2f:	jne    0x413d12
  413c35:	mov    rcx,rsi
  413c38:	mov    DWORD PTR [rsp+0x3c],r8d
  413c3d:	call   0x4177b8
  413c42:	mov    r8d,DWORD PTR [rsp+0x3c]
  413c47:	sub    eax,r8d
  413c4a:	test   eax,eax
  413c4c:	mov    DWORD PTR [rbx+0x10],eax
  413c4f:	js     0x413d31
  413c55:	mov    ecx,DWORD PTR [rsp+0x58]
  413c59:	mov    rdx,rsi
  413c5c:	mov    r9,rbx
  413c5f:	call   0x413310
  413c64:	mov    eax,DWORD PTR [rbx+0xc]
  413c67:	lea    edx,[rax-0x1]
  413c6a:	test   eax,eax
  413c6c:	mov    DWORD PTR [rbx+0xc],edx
  413c6f:	jle    0x413ccd
  413c71:	mov    rdx,rbx
  413c74:	mov    ecx,0x20
  413c79:	call   0x412ef0
  413c7e:	mov    r8d,DWORD PTR [rbx+0xc]
  413c82:	lea    r9d,[r8-0x1]
  413c86:	test   r8d,r8d
  413c89:	mov    DWORD PTR [rbx+0xc],r9d
  413c8d:	jg     0x413c71
  413c8f:	mov    rcx,rsi
  413c92:	call   0x415100
  413c97:	nop
  413c98:	add    rsp,0x78
  413c9c:	pop    rbx
  413c9d:	pop    rsi
  413c9e:	ret    
  413c9f:	nop
  413ca0:	test   BYTE PTR [rbx+0x9],0x8
  413ca4:	jne    0x413cf2
  413ca6:	mov    rcx,rsi
  413ca9:	mov    DWORD PTR [rsp+0x3c],r8d
  413cae:	call   0x4177b8
  413cb3:	mov    r8d,DWORD PTR [rsp+0x3c]
  413cb8:	sub    eax,0x1
  413cbb:	mov    DWORD PTR [rbx+0x10],eax
  413cbe:	mov    ecx,DWORD PTR [rsp+0x58]
  413cc2:	mov    r9,rbx
  413cc5:	mov    rdx,rsi
  413cc8:	call   0x413a30
  413ccd:	mov    rcx,rsi
  413cd0:	call   0x415100
  413cd5:	nop
  413cd6:	add    rsp,0x78
  413cda:	pop    rbx
  413cdb:	pop    rsi
  413cdc:	ret    
  413cdd:	nop    DWORD PTR [rax]
  413ce0:	mov    DWORD PTR [rdx+0x10],0x1
  413ce7:	mov    r8d,0x1
  413ced:	jmp    0x413bce
  413cf2:	sub    DWORD PTR [rbx+0x10],0x1
  413cf6:	jmp    0x413cbe
  413cf8:	nop    DWORD PTR [rax+rax*1+0x0]
  413d00:	mov    DWORD PTR [rdx+0x10],0x6
  413d07:	mov    r8d,0x6
  413d0d:	jmp    0x413bce
  413d12:	sub    eax,r8d
  413d15:	mov    DWORD PTR [rbx+0x10],eax
  413d18:	jmp    0x413c55
  413d1d:	nop    DWORD PTR [rax]
  413d20:	mov    ecx,DWORD PTR [rsp+0x58]
  413d24:	mov    r8,rbx
  413d27:	mov    rdx,rax
  413d2a:	call   0x413180
  413d2f:	jmp    0x413ccd
  413d31:	mov    edx,DWORD PTR [rbx+0xc]
  413d34:	test   edx,edx
  413d36:	jle    0x413c55
  413d3c:	add    eax,edx
  413d3e:	mov    DWORD PTR [rbx+0xc],eax
  413d41:	jmp    0x413c55
  413d46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413d50:	push   rbp
  413d51:	push   r14
  413d53:	push   r13
  413d55:	push   r12
  413d57:	push   rdi
  413d58:	push   rsi
  413d59:	push   rbx
  413d5a:	mov    rbp,rsp
  413d5d:	sub    rsp,0x20
  413d61:	mov    r10d,0x12
  413d67:	mov    eax,0x18
  413d6c:	cmp    ecx,0x6f
  413d6f:	mov    rbx,r8
  413d72:	mov    r8d,DWORD PTR [r8+0x10]
  413d76:	mov    r11d,ecx
  413d79:	setne  cl
  413d7c:	mov    edi,DWORD PTR [rbx+0x8]
  413d7f:	movzx  ecx,cl
  413d82:	cmovne eax,r10d
  413d86:	mov    r10b,0x0
  413d89:	add    ecx,0x3
  413d8c:	test   r8d,r8d
  413d8f:	mov    r9,rdx
  413d92:	cmovns r10d,r8d
  413d96:	add    r10d,eax
  413d99:	test   edi,0x1000
  413d9f:	je     0x413dac
  413da1:	cmp    WORD PTR [rbx+0x20],0x0
  413da6:	jne    0x413f73
  413dac:	movsxd r12,DWORD PTR [rbx+0xc]
  413db0:	movsxd rax,r10d
  413db3:	cmp    r10d,r12d
  413db6:	cmovl  rax,r12
  413dba:	add    rax,0x1e
  413dbe:	and    rax,0xfffffffffffffff0
  413dc2:	call   0x4122a0
  413dc7:	xor    edx,edx
  413dc9:	sub    rsp,rax
  413dcc:	cmp    r11d,0x6f
  413dd0:	lea    rsi,[rsp+0x20]
  413dd5:	setne  dl
  413dd8:	test   r9,r9
  413ddb:	lea    edx,[rdx*8+0x7]
  413de2:	mov    r10,rsi
  413de5:	je     0x414092
  413deb:	mov    r13d,r11d
  413dee:	and    r13d,0x20
  413df2:	jmp    0x413e00
  413df4:	shr    r9,cl
  413df7:	mov    BYTE PTR [r10-0x1],r14b
  413dfb:	test   r9,r9
  413dfe:	je     0x413e25
  413e00:	mov    eax,edx
  413e02:	add    r10,0x1
  413e06:	and    eax,r9d
  413e09:	lea    r14d,[rax+0x30]
  413e0d:	cmp    r14b,0x39
  413e11:	jbe    0x413df4
  413e13:	add    eax,0x37
  413e16:	shr    r9,cl
  413e19:	or     eax,r13d
  413e1c:	test   r9,r9
  413e1f:	mov    BYTE PTR [r10-0x1],al
  413e23:	jne    0x413e00
  413e25:	cmp    rsi,r10
  413e28:	je     0x414092
  413e2e:	test   r8d,r8d
  413e31:	jle    0x413ff2
  413e37:	mov    rax,rsi
  413e3a:	sub    rax,r10
  413e3d:	add    eax,r8d
  413e40:	test   eax,eax
  413e42:	jle    0x413ff2
  413e48:	sub    eax,0x1
  413e4b:	mov    rdx,rax
  413e4e:	lea    rcx,[r10+rax*1+0x1]
  413e53:	mov    rax,r10
  413e56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413e60:	add    rax,0x1
  413e64:	mov    BYTE PTR [rax-0x1],0x30
  413e68:	cmp    rax,rcx
  413e6b:	jne    0x413e60
  413e6d:	movsxd rax,edx
  413e70:	lea    r10,[r10+rax*1+0x1]
  413e75:	cmp    rsi,r10
  413e78:	jne    0x413e90
  413e7a:	test   r8d,r8d
  413e7d:	je     0x413e90
  413e7f:	mov    BYTE PTR [r10],0x30
  413e83:	add    r10,0x1
  413e87:	nop    WORD PTR [rax+rax*1+0x0]
  413e90:	mov    rax,r10
  413e93:	sub    rax,rsi
  413e96:	cmp    r12d,eax
  413e99:	jle    0x413fc0
  413e9f:	sub    r12d,eax
  413ea2:	test   r12d,r12d
  413ea5:	mov    DWORD PTR [rbx+0xc],r12d
  413ea9:	jle    0x4140f7
  413eaf:	cmp    r11d,0x6f
  413eb3:	mov    edx,DWORD PTR [rbx+0x8]
  413eb6:	je     0x414080
  413ebc:	test   dh,0x8
  413ebf:	je     0x414040
  413ec5:	lea    r13d,[r12-0x2]
  413eca:	test   r13d,r13d
  413ecd:	jle    0x413ed8
  413ecf:	test   r8d,r8d
  413ed2:	js     0x413f8d
  413ed8:	test   r13d,r13d
  413edb:	mov    BYTE PTR [r10],r11b
  413ede:	lea    rdi,[r10+0x2]
  413ee2:	mov    BYTE PTR [r10+0x1],0x30
  413ee7:	jle    0x413fe8
  413eed:	and    dh,0x4
  413ef0:	jne    0x414013
  413ef6:	lea    r14d,[r13-0x1]
  413efa:	mov    r12d,r14d
  413efd:	nop    DWORD PTR [rax]
  413f00:	sub    r12d,0x1
  413f04:	mov    rdx,rbx
  413f07:	mov    ecx,0x20
  413f0c:	call   0x412ef0
  413f11:	lea    eax,[r12+0x1]
  413f16:	test   eax,eax
  413f18:	jg     0x413f00
  413f1a:	test   r14d,r14d
  413f1d:	lea    r13d,[r14-0x1]
  413f21:	mov    r12d,0x0
  413f27:	cmovns r12d,r14d
  413f2b:	sub    r13d,r12d
  413f2e:	cmp    rsi,rdi
  413f31:	jb     0x414020
  413f37:	nop    WORD PTR [rax+rax*1+0x0]
  413f40:	test   r13d,r13d
  413f43:	lea    esi,[r13-0x1]
  413f47:	jle    0x413f65
  413f49:	nop    DWORD PTR [rax+0x0]
  413f50:	mov    rdx,rbx
  413f53:	mov    ecx,0x20
  413f58:	sub    esi,0x1
  413f5b:	call   0x412ef0
  413f60:	cmp    esi,0xffffffff
  413f63:	jne    0x413f50
  413f65:	mov    rsp,rbp
  413f68:	pop    rbx
  413f69:	pop    rsi
  413f6a:	pop    rdi
  413f6b:	pop    r12
  413f6d:	pop    r13
  413f6f:	pop    r14
  413f71:	pop    rbp
  413f72:	ret    
  413f73:	mov    eax,r10d
  413f76:	mov    edx,0x55555556
  413f7b:	imul   edx
  413f7d:	mov    eax,r10d
  413f80:	sar    eax,0x1f
  413f83:	sub    edx,eax
  413f85:	add    r10d,edx
  413f88:	jmp    0x413dac
  413f8d:	mov    eax,edx
  413f8f:	and    eax,0x600
  413f94:	cmp    eax,0x200
  413f99:	je     0x4140a0
  413f9f:	mov    r12d,r13d
  413fa2:	test   dh,0x8
  413fa5:	mov    r13d,r12d
  413fa8:	mov    rdi,r10
  413fab:	je     0x413eed
  413fb1:	mov    r13d,r12d
  413fb4:	jmp    0x413ed8
  413fb9:	nop    DWORD PTR [rax+0x0]
  413fc0:	mov    DWORD PTR [rbx+0xc],0xffffffff
  413fc7:	mov    r13d,0xffffffff
  413fcd:	cmp    r11d,0x6f
  413fd1:	je     0x413fe5
  413fd3:	mov    edx,DWORD PTR [rbx+0x8]
  413fd6:	mov    eax,edx
  413fd8:	and    eax,0x800
  413fdd:	test   eax,eax
  413fdf:	jne    0x413ed8
  413fe5:	mov    rdi,r10
  413fe8:	cmp    rsi,rdi
  413feb:	jb     0x414020
  413fed:	jmp    0x413f65
  413ff2:	cmp    r11d,0x6f
  413ff6:	jne    0x413e75
  413ffc:	test   BYTE PTR [rbx+0x9],0x8
  414000:	je     0x413e75
  414006:	mov    BYTE PTR [r10],0x30
  41400a:	add    r10,0x1
  41400e:	jmp    0x413e75
  414013:	cmp    rsi,rdi
  414016:	jae    0x4140ff
  41401c:	nop    DWORD PTR [rax+0x0]
  414020:	sub    rdi,0x1
  414024:	movsx  ecx,BYTE PTR [rdi]
  414027:	mov    rdx,rbx
  41402a:	call   0x412ef0
  41402f:	cmp    rsi,rdi
  414032:	jb     0x414020
  414034:	jmp    0x413f40
  414039:	nop    DWORD PTR [rax+0x0]
  414040:	test   r8d,r8d
  414043:	jns    0x413fa2
  414049:	mov    eax,edx
  41404b:	and    eax,0x600
  414050:	cmp    eax,0x200
  414055:	je     0x4140ee
  41405b:	cmp    r11d,0x6f
  41405f:	jne    0x413fa2
  414065:	and    dh,0x4
  414068:	jne    0x41408a
  41406a:	lea    r14d,[r12-0x1]
  41406f:	mov    rdi,r10
  414072:	jmp    0x413efa
  414077:	nop    WORD PTR [rax+rax*1+0x0]
  414080:	test   r8d,r8d
  414083:	js     0x414049
  414085:	and    dh,0x4
  414088:	je     0x41406a
  41408a:	mov    rdi,r10
  41408d:	mov    r13d,r12d
  414090:	jmp    0x41402f
  414092:	and    edi,0xfffff7ff
  414098:	mov    DWORD PTR [rbx+0x8],edi
  41409b:	jmp    0x413e2e
  4140a0:	lea    r8d,[r12-0x3]
  4140a5:	mov    r12d,r8d
  4140a8:	mov    eax,r12d
  4140ab:	lea    rcx,[r10+rax*1+0x1]
  4140b0:	mov    rax,r10
  4140b3:	add    rax,0x1
  4140b7:	mov    BYTE PTR [rax-0x1],0x30
  4140bb:	cmp    rax,rcx
  4140be:	jne    0x4140b3
  4140c0:	movsxd rax,r8d
  4140c3:	cmp    r11d,0x6f
  4140c7:	lea    r10,[r10+rax*1+0x1]
  4140cc:	je     0x4140e0
  4140ce:	mov    eax,edx
  4140d0:	mov    r13d,0xffffffff
  4140d6:	and    eax,0x800
  4140db:	jmp    0x413fdd
  4140e0:	mov    rdi,r10
  4140e3:	mov    r13d,0xffffffff
  4140e9:	jmp    0x413fe8
  4140ee:	sub    r12d,0x1
  4140f2:	mov    r8d,r12d
  4140f5:	jmp    0x4140a8
  4140f7:	mov    r13d,r12d
  4140fa:	jmp    0x413fcd
  4140ff:	lea    esi,[r13-0x1]
  414103:	jmp    0x413f50
  414108:	nop    DWORD PTR [rax+rax*1+0x0]
  414110:	push   r13
  414112:	push   r12
  414114:	push   rbp
  414115:	push   rdi
  414116:	push   rsi
  414117:	push   rbx
  414118:	sub    rsp,0x68
  41411c:	mov    r9,QWORD PTR [rcx]
  41411f:	mov    r10d,DWORD PTR [rcx+0x8]
  414123:	mov    rbx,rdx
  414126:	mov    rax,r9
  414129:	mov    QWORD PTR [rsp+0x30],r9
  41412e:	mov    DWORD PTR [rsp+0x38],r10d
  414133:	shr    rax,0x20
  414137:	mov    r8,r10
  41413a:	and    eax,0x7fffffff
  41413f:	or     r9d,eax
  414142:	lea    eax,[r10+r10*1]
  414146:	mov    edx,r9d
  414149:	neg    edx
  41414b:	and    eax,0xfffe
  414150:	or     edx,r9d
  414153:	shr    edx,0x1f
  414156:	or     edx,eax
  414158:	mov    eax,0xfffe
  41415d:	sub    eax,edx
  41415f:	sar    eax,0x10
  414162:	test   eax,eax
  414164:	jne    0x414550
  41416a:	movzx  esi,WORD PTR [rsp+0x38]
  41416f:	mov    ecx,esi
  414171:	and    ecx,0x8000
  414177:	je     0x414180
  414179:	or     DWORD PTR [rbx+0x8],0x80
  414180:	and    r8w,0x7fff
  414186:	cmp    r8w,0x7fff
  41418c:	jne    0x4141b0
  41418e:	test   r9d,r9d
  414191:	jne    0x4141b0
  414193:	lea    rdx,[rip+0x9eda]        # 0x41e074
  41419a:	mov    r8,rbx
  41419d:	call   0x413180
  4141a2:	jmp    0x414525
  4141a7:	nop    WORD PTR [rax+rax*1+0x0]
  4141b0:	and    si,0x7fff
  4141b5:	jne    0x4142e0
  4141bb:	mov    rax,QWORD PTR [rsp+0x30]
  4141c0:	test   rax,rax
  4141c3:	jne    0x41456f
  4141c9:	mov    r9d,DWORD PTR [rbx+0x10]
  4141cd:	cmp    r9d,0xe
  4141d1:	jbe    0x4145ec
  4141d7:	xor    esi,esi
  4141d9:	mov    r8d,DWORD PTR [rbx+0x8]
  4141dd:	lea    rbp,[rsp+0x40]
  4141e2:	test   r9d,r9d
  4141e5:	jle    0x4145fc
  4141eb:	lea    rax,[rbp+0x1]
  4141ef:	mov    BYTE PTR [rsp+0x40],0x2e
  4141f4:	mov    r10d,DWORD PTR [rbx+0xc]
  4141f8:	lea    rdi,[rax+0x1]
  4141fc:	mov    BYTE PTR [rax],0x30
  4141ff:	mov    r12d,0x2
  414205:	test   r10d,r10d
  414208:	jg     0x41440c
  41420e:	xchg   ax,ax
  414210:	test   r8b,0x80
  414214:	jne    0x4144d0
  41421a:	test   r8d,0x100
  414221:	jne    0x4145c0
  414227:	and    r8d,0x40
  41422b:	jne    0x4145d2
  414231:	mov    rdx,rbx
  414234:	mov    ecx,0x30
  414239:	call   0x412ef0
  41423e:	mov    ecx,DWORD PTR [rbx+0x8]
  414241:	mov    rdx,rbx
  414244:	and    ecx,0x20
  414247:	or     ecx,0x58
  41424a:	call   0x412ef0
  41424f:	mov    eax,DWORD PTR [rbx+0xc]
  414252:	test   eax,eax
  414254:	jle    0x41427c
  414256:	test   BYTE PTR [rbx+0x9],0x2
  41425a:	je     0x41427c
  41425c:	sub    eax,0x1
  41425f:	mov    DWORD PTR [rbx+0xc],eax
  414262:	mov    rdx,rbx
  414265:	mov    ecx,0x30
  41426a:	call   0x412ef0
  41426f:	mov    eax,DWORD PTR [rbx+0xc]
  414272:	lea    edx,[rax-0x1]
  414275:	test   eax,eax
  414277:	mov    DWORD PTR [rbx+0xc],edx
  41427a:	jg     0x414262
  41427c:	cmp    rdi,rbp
  41427f:	lea    r13,[rsp+0x2e]
  414284:	ja     0x4142b9
  414286:	jmp    0x4144ef
  41428b:	nop    DWORD PTR [rax+rax*1+0x0]
  414290:	movzx  eax,WORD PTR [rbx+0x20]
  414294:	test   ax,ax
  414297:	mov    WORD PTR [rsp+0x2e],ax
  41429c:	je     0x4142b0
  41429e:	mov    r8,rbx
  4142a1:	mov    edx,0x1
  4142a6:	mov    rcx,r13
  4142a9:	call   0x412f50
  4142ae:	xchg   ax,ax
  4142b0:	cmp    rdi,rbp
  4142b3:	je     0x4144ef
  4142b9:	sub    rdi,0x1
  4142bd:	movsx  ecx,BYTE PTR [rdi]
  4142c0:	cmp    ecx,0x2e
  4142c3:	je     0x414532
  4142c9:	cmp    ecx,0x2c
  4142cc:	je     0x414290
  4142ce:	mov    rdx,rbx
  4142d1:	call   0x412ef0
  4142d6:	jmp    0x4142b0
  4142d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4142e0:	mov    r9d,DWORD PTR [rbx+0x10]
  4142e4:	sub    si,0x3fff
  4142e9:	mov    rax,QWORD PTR [rsp+0x30]
  4142ee:	cmp    r9d,0xe
  4142f2:	ja     0x41459d
  4142f8:	test   rax,rax
  4142fb:	js     0x414305
  4142fd:	nop    DWORD PTR [rax]
  414300:	add    rax,rax
  414303:	jns    0x414300
  414305:	mov    ecx,0xe
  41430a:	mov    edx,0x4
  41430f:	shr    rax,1
  414312:	sub    ecx,r9d
  414315:	shl    ecx,0x2
  414318:	shl    rdx,cl
  41431b:	add    rax,rdx
  41431e:	js     0x4145e4
  414324:	add    rax,rax
  414327:	mov    ecx,0xf
  41432c:	sub    ecx,r9d
  41432f:	shl    ecx,0x2
  414332:	shr    rax,cl
  414335:	mov    r8d,DWORD PTR [rbx+0x8]
  414339:	lea    rbp,[rsp+0x40]
  41433e:	mov    rdi,rbp
  414341:	mov    r11d,r8d
  414344:	mov    r10d,r8d
  414347:	and    r11d,0x800
  41434e:	and    r10d,0x20
  414352:	jmp    0x414383
  414354:	mov    ecx,DWORD PTR [rbx+0x10]
  414357:	test   ecx,ecx
  414359:	jle    0x414361
  41435b:	sub    ecx,0x1
  41435e:	mov    DWORD PTR [rbx+0x10],ecx
  414361:	shr    rax,0x4
  414365:	mov    r9,rdi
  414368:	test   edx,edx
  41436a:	je     0x4143d4
  41436c:	cmp    edx,0x9
  41436f:	lea    rdi,[r9+0x1]
  414373:	jle    0x4143e7
  414375:	add    edx,0x37
  414378:	or     edx,r10d
  41437b:	mov    BYTE PTR [r9],dl
  41437e:	test   rax,rax
  414381:	je     0x4143f0
  414383:	mov    edx,eax
  414385:	and    edx,0xf
  414388:	cmp    edx,eax
  41438a:	jne    0x414354
  41438c:	cmp    rdi,rbp
  41438f:	ja     0x4143a2
  414391:	test   r11d,r11d
  414394:	jne    0x4143a2
  414396:	mov    r12d,DWORD PTR [rbx+0x10]
  41439a:	mov    r9,rdi
  41439d:	test   r12d,r12d
  4143a0:	jle    0x4143a9
  4143a2:	lea    r9,[rdi+0x1]
  4143a6:	mov    BYTE PTR [rdi],0x2e
  4143a9:	cmp    rax,0x1
  4143ad:	jbe    0x4145b9
  4143b3:	lea    ecx,[rsi-0x1]
  4143b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4143c0:	shr    rax,1
  4143c3:	mov    esi,ecx
  4143c5:	cmp    rax,0x1
  4143c9:	lea    ecx,[rsi-0x1]
  4143cc:	jne    0x4143c0
  4143ce:	xor    al,al
  4143d0:	test   edx,edx
  4143d2:	jne    0x41436c
  4143d4:	cmp    r9,rbp
  4143d7:	ja     0x4143e3
  4143d9:	mov    ecx,DWORD PTR [rbx+0x10]
  4143dc:	mov    rdi,r9
  4143df:	test   ecx,ecx
  4143e1:	js     0x41437e
  4143e3:	lea    rdi,[r9+0x1]
  4143e7:	add    edx,0x30
  4143ea:	jmp    0x41437b
  4143ec:	nop    DWORD PTR [rax+0x0]
  4143f0:	cmp    rdi,rbp
  4143f3:	je     0x4145f3
  4143f9:	mov    r10d,DWORD PTR [rbx+0xc]
  4143fd:	mov    r12d,0x2
  414403:	test   r10d,r10d
  414406:	jle    0x414210
  41440c:	mov    edx,DWORD PTR [rbx+0x10]
  41440f:	mov    rax,rdi
  414412:	movsx  r11d,si
  414416:	sub    rax,rbp
  414419:	lea    ecx,[rdx+rax*1]
  41441c:	test   edx,edx
  41441e:	mov    edx,r8d
  414421:	cmovg  eax,ecx
  414424:	and    edx,0x1c0
  41442a:	mov    ecx,0x66666667
  41442f:	cmp    edx,0x1
  414432:	sbb    edx,edx
  414434:	lea    r9d,[rax+rdx*1+0x6]
  414439:	mov    eax,r11d
  41443c:	imul   ecx
  41443e:	mov    eax,r11d
  414441:	sar    eax,0x1f
  414444:	mov    ecx,edx
  414446:	sar    ecx,0x2
  414449:	sub    ecx,eax
  41444b:	je     0x414470
  41444d:	mov    r11d,0x66666667
  414453:	mov    eax,ecx
  414455:	sar    ecx,0x1f
  414458:	add    r9d,0x1
  41445c:	imul   r11d
  41445f:	add    r12d,0x1
  414463:	sar    edx,0x2
  414466:	sub    edx,ecx
  414468:	mov    ecx,edx
  41446a:	jne    0x414453
  41446c:	movsx  r12d,r12w
  414470:	cmp    r10d,r9d
  414473:	jle    0x414540
  414479:	sub    r10d,r9d
  41447c:	test   r8d,0x600
  414483:	jne    0x4145b0
  414489:	lea    eax,[r10-0x1]
  41448d:	test   r10d,r10d
  414490:	mov    DWORD PTR [rbx+0xc],eax
  414493:	jle    0x414210
  414499:	nop    DWORD PTR [rax+0x0]
  4144a0:	mov    rdx,rbx
  4144a3:	mov    ecx,0x20
  4144a8:	call   0x412ef0
  4144ad:	mov    eax,DWORD PTR [rbx+0xc]
  4144b0:	lea    edx,[rax-0x1]
  4144b3:	test   eax,eax
  4144b5:	mov    DWORD PTR [rbx+0xc],edx
  4144b8:	jg     0x4144a0
  4144ba:	mov    r8d,DWORD PTR [rbx+0x8]
  4144be:	test   r8b,0x80
  4144c2:	je     0x41421a
  4144c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4144d0:	mov    rdx,rbx
  4144d3:	mov    ecx,0x2d
  4144d8:	call   0x412ef0
  4144dd:	jmp    0x414231
  4144e2:	mov    rdx,rbx
  4144e5:	mov    ecx,0x30
  4144ea:	call   0x412ef0
  4144ef:	mov    eax,DWORD PTR [rbx+0x10]
  4144f2:	lea    edx,[rax-0x1]
  4144f5:	test   eax,eax
  4144f7:	mov    DWORD PTR [rbx+0x10],edx
  4144fa:	jg     0x4144e2
  4144fc:	mov    ecx,DWORD PTR [rbx+0x8]
  4144ff:	mov    rdx,rbx
  414502:	and    ecx,0x20
  414505:	or     ecx,0x50
  414508:	call   0x412ef0
  41450d:	add    DWORD PTR [rbx+0xc],r12d
  414511:	or     DWORD PTR [rbx+0x8],0x1c0
  414518:	movsx  rcx,si
  41451c:	mov    rdx,rbx
  41451f:	call   0x413760
  414524:	nop
  414525:	add    rsp,0x68
  414529:	pop    rbx
  41452a:	pop    rsi
  41452b:	pop    rdi
  41452c:	pop    rbp
  41452d:	pop    r12
  41452f:	pop    r13
  414531:	ret    
  414532:	mov    rcx,rbx
  414535:	call   0x413220
  41453a:	jmp    0x4142b0
  41453f:	nop
  414540:	mov    DWORD PTR [rbx+0xc],0xffffffff
  414547:	jmp    0x414210
  41454c:	nop    DWORD PTR [rax+0x0]
  414550:	lea    rdx,[rip+0x9b19]        # 0x41e070
  414557:	mov    r8,rbx
  41455a:	xor    ecx,ecx
  41455c:	call   0x413180
  414561:	nop
  414562:	add    rsp,0x68
  414566:	pop    rbx
  414567:	pop    rsi
  414568:	pop    rdi
  414569:	pop    rbp
  41456a:	pop    r12
  41456c:	pop    r13
  41456e:	ret    
  41456f:	js     0x414611
  414575:	mov    edx,0xffffc001
  41457a:	nop    WORD PTR [rax+rax*1+0x0]
  414580:	mov    esi,edx
  414582:	sub    edx,0x1
  414585:	add    rax,rax
  414588:	jns    0x414580
  41458a:	mov    r9d,DWORD PTR [rbx+0x10]
  41458e:	cmp    r9d,0xe
  414592:	jbe    0x414305
  414598:	jmp    0x414335
  41459d:	test   rax,rax
  4145a0:	jne    0x414335
  4145a6:	jmp    0x4141d9
  4145ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4145b0:	mov    DWORD PTR [rbx+0xc],r10d
  4145b4:	jmp    0x414210
  4145b9:	xor    eax,eax
  4145bb:	jmp    0x414368
  4145c0:	mov    rdx,rbx
  4145c3:	mov    ecx,0x2b
  4145c8:	call   0x412ef0
  4145cd:	jmp    0x414231
  4145d2:	mov    rdx,rbx
  4145d5:	mov    ecx,0x20
  4145da:	call   0x412ef0
  4145df:	jmp    0x414231
  4145e4:	add    esi,0x1
  4145e7:	jmp    0x414327
  4145ec:	xor    eax,eax
  4145ee:	jmp    0x414300
  4145f3:	mov    r9d,DWORD PTR [rbx+0x10]
  4145f7:	jmp    0x4141e2
  4145fc:	test   r8d,0x800
  414603:	mov    rax,rbp
  414606:	je     0x4141f4
  41460c:	jmp    0x4141eb
  414611:	mov    esi,0xffffc002
  414616:	jmp    0x41458a
  41461b:	nop    DWORD PTR [rax+rax*1+0x0]
  414620:	push   r15
  414622:	push   r14
  414624:	push   r13
  414626:	push   r12
  414628:	push   rbp
  414629:	push   rdi
  41462a:	push   rsi
  41462b:	push   rbx
  41462c:	sub    rsp,0xb8
  414633:	mov    r13,QWORD PTR [rsp+0x120]
  41463b:	mov    r15d,ecx
  41463e:	mov    rdi,rdx
  414641:	mov    esi,r8d
  414644:	mov    rbx,r9
  414647:	and    r15d,0x6000
  41464e:	call   0x417938
  414653:	mov    eax,DWORD PTR [rax]
  414655:	lea    rcx,[rip+0x9a31]        # 0x41e08d
  41465c:	xor    edx,edx
  41465e:	mov    QWORD PTR [rsp+0x80],rdi
  414666:	mov    DWORD PTR [rsp+0x88],r15d
  41466e:	mov    DWORD PTR [rsp+0x8c],0xffffffff
  414679:	mov    DWORD PTR [rsp+0x90],0xffffffff
  414684:	mov    DWORD PTR [rsp+0x34],eax
  414688:	xor    eax,eax
  41468a:	mov    DWORD PTR [rsp+0x94],0xfffffffd
  414695:	mov    WORD PTR [rsp+0x98],ax
  41469d:	mov    DWORD PTR [rsp+0x9c],0x0
  4146a8:	mov    WORD PTR [rsp+0xa0],dx
  4146b0:	mov    DWORD PTR [rsp+0xa4],0x0
  4146bb:	mov    DWORD PTR [rsp+0xa8],esi
  4146c2:	call   0x417840
  4146c7:	test   rax,rax
  4146ca:	je     0x4146dc
  4146cc:	movsx  edx,BYTE PTR [rax]
  4146cf:	mov    eax,0x2
  4146d4:	sub    edx,0x30
  4146d7:	cmp    edx,0x2
  4146da:	jbe    0x4146e9
  4146dc:	call   0x417a80
  4146e1:	and    eax,0x1
  4146e4:	neg    eax
  4146e6:	add    eax,0x3
  4146e9:	lea    rdi,[rsp+0x70]
  4146ee:	mov    DWORD PTR [rsp+0xac],eax
  4146f5:	movzx  eax,BYTE PTR [rbx]
  4146f8:	lea    rsi,[rsp+0x6e]
  4146fd:	lea    r12,[rsp+0x80]
  414705:	lea    rbp,[rip+0x9998]        # 0x41e0a4
  41470c:	mov    QWORD PTR [rsp+0x28],rdi
  414711:	lea    rdi,[rsp+0x50]
  414716:	mov    QWORD PTR [rsp+0x38],rsi
  41471b:	mov    QWORD PTR [rsp+0x20],rdi
  414720:	mov    edi,r15d
  414723:	or     edi,0x200
  414729:	mov    DWORD PTR [rsp+0x48],edi
  41472d:	nop    DWORD PTR [rax]
  414730:	movsx  ecx,al
  414733:	lea    rsi,[rbx+0x1]
  414737:	test   ecx,ecx
  414739:	je     0x4147ba
  41473b:	cmp    ecx,0x25
  41473e:	jne    0x4147a0
  414740:	movzx  eax,BYTE PTR [rbx+0x1]
  414744:	xor    r10d,r10d
  414747:	xor    r14d,r14d
  41474a:	mov    DWORD PTR [rsp+0x88],r15d
  414752:	mov    DWORD PTR [rsp+0x90],0xffffffff
  41475d:	mov    rdi,rsi
  414760:	mov    DWORD PTR [rsp+0x8c],0xffffffff
  41476b:	lea    r11,[r12+0xc]
  414770:	test   al,al
  414772:	je     0x41491b
  414778:	lea    edx,[rax-0x20]
  41477b:	lea    rbx,[rdi+0x1]
  41477f:	movsx  ecx,al
  414782:	cmp    dl,0x5a
  414785:	ja     0x414d90
  41478b:	movzx  edx,dl
  41478e:	movsxd rdx,DWORD PTR [rbp+rdx*4+0x0]
  414793:	add    rdx,rbp
  414796:	jmp    rdx
  414798:	nop    DWORD PTR [rax+rax*1+0x0]
  4147a0:	mov    rdx,r12
  4147a3:	call   0x412ef0
  4147a8:	movzx  eax,BYTE PTR [rbx+0x1]
  4147ac:	mov    rbx,rsi
  4147af:	lea    rsi,[rbx+0x1]
  4147b3:	movsx  ecx,al
  4147b6:	test   ecx,ecx
  4147b8:	jne    0x41473b
  4147ba:	mov    eax,DWORD PTR [rsp+0xa4]
  4147c1:	add    rsp,0xb8
  4147c8:	pop    rbx
  4147c9:	pop    rsi
  4147ca:	pop    rdi
  4147cb:	pop    rbp
  4147cc:	pop    r12
  4147ce:	pop    r13
  4147d0:	pop    r14
  4147d2:	pop    r15
  4147d4:	ret    
  4147d5:	sub    r10d,0x2
  4147d9:	mov    rax,r13
  4147dc:	cmp    r10d,0x1
  4147e0:	jbe    0x414dd3
  4147e6:	mov    rsi,QWORD PTR [rax]
  4147e9:	add    r13,0x8
  4147ed:	test   rsi,rsi
  4147f0:	je     0x4148b5
  4147f6:	mov    rcx,rsi
  4147f9:	call   0x4177b8
  4147fe:	mov    edx,eax
  414800:	mov    r8,r12
  414803:	mov    rcx,rsi
  414806:	call   0x413070
  41480b:	nop    DWORD PTR [rax+rax*1+0x0]
  414810:	movzx  eax,BYTE PTR [rbx]
  414813:	jmp    0x414730
  414818:	nop    DWORD PTR [rax+rax*1+0x0]
  414820:	test   r14d,r14d
  414823:	jne    0x414833
  414825:	cmp    DWORD PTR [rsp+0x88],r15d
  41482d:	je     0x414f9b
  414833:	mov    rdx,QWORD PTR [r13+0x0]
  414837:	lea    rsi,[r13+0x8]
  41483b:	mov    r8,r12
  41483e:	mov    ecx,0x78
  414843:	mov    QWORD PTR [rsp+0x78],0x0
  41484c:	mov    r13,rsi
  41484f:	mov    QWORD PTR [rsp+0x70],rdx
  414854:	call   0x413d50
  414859:	jmp    0x414810
  41485b:	nop    DWORD PTR [rax+rax*1+0x0]
  414860:	cmp    r10d,0x5
  414864:	mov    rax,QWORD PTR [r13+0x0]
  414868:	je     0x414eda
  41486e:	cmp    r10d,0x1
  414872:	je     0x414f64
  414878:	cmp    r10d,0x2
  41487c:	je     0x414888
  41487e:	cmp    r10d,0x3
  414882:	je     0x41500c
  414888:	mov    edx,DWORD PTR [rsp+0xa4]
  41488f:	add    r13,0x8
  414893:	mov    DWORD PTR [rax],edx
  414895:	jmp    0x414810
  41489a:	nop    WORD PTR [rax+rax*1+0x0]
  4148a0:	mov    ecx,DWORD PTR [rsp+0x34]
  4148a4:	call   0x4177c8
  4148a9:	test   rax,rax
  4148ac:	mov    rsi,rax
  4148af:	jne    0x4147f6
  4148b5:	mov    edx,0x6
  4148ba:	lea    rsi,[rip+0x97c5]        # 0x41e086
  4148c1:	jmp    0x414800
  4148c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4148d0:	movzx  eax,BYTE PTR [rdi+0x1]
  4148d4:	mov    r10d,0x2
  4148da:	mov    r14d,0x4
  4148e0:	cmp    al,0x6c
  4148e2:	jne    0x414910
  4148e4:	lea    rbx,[rdi+0x2]
  4148e8:	movzx  eax,BYTE PTR [rdi+0x2]
  4148ec:	mov    r10d,0x3
  4148f2:	mov    r14d,0x4
  4148f8:	jmp    0x414910
  4148fa:	nop    WORD PTR [rax+rax*1+0x0]
  414900:	movzx  eax,BYTE PTR [rdi+0x1]
  414904:	mov    r10d,0x3
  41490a:	mov    r14d,0x4
  414910:	test   al,al
  414912:	mov    rdi,rbx
  414915:	jne    0x414778
  41491b:	mov    rbx,rdi
  41491e:	jmp    0x414730
  414923:	mov    eax,DWORD PTR [rsp+0x88]
  41492a:	mov    rdx,r13
  41492d:	add    r13,0x8
  414931:	or     eax,0x20
  414934:	test   al,0x4
  414936:	mov    DWORD PTR [rsp+0x88],eax
  41493d:	je     0x414b9b
  414943:	mov    rax,QWORD PTR [rdx]
  414946:	mov    rcx,QWORD PTR [rsp+0x20]
  41494b:	mov    rdx,r12
  41494e:	fld    TBYTE PTR [rax]
  414950:	fstp   TBYTE PTR [rsp+0x50]
  414954:	call   0x413bb0
  414959:	jmp    0x414810
  41495e:	xchg   ax,ax
  414960:	movzx  eax,BYTE PTR [rdi+0x1]
  414964:	mov    r10d,0x1
  41496a:	mov    r14d,0x4
  414970:	cmp    al,0x68
  414972:	jne    0x414910
  414974:	lea    rbx,[rdi+0x2]
  414978:	movzx  eax,BYTE PTR [rdi+0x2]
  41497c:	mov    r10d,0x5
  414982:	mov    r14d,0x4
  414988:	jmp    0x414910
  41498a:	nop    WORD PTR [rax+rax*1+0x0]
  414990:	mov    eax,DWORD PTR [rsp+0x88]
  414997:	mov    rdx,r13
  41499a:	add    r13,0x8
  41499e:	or     eax,0x20
  4149a1:	test   al,0x4
  4149a3:	mov    DWORD PTR [rsp+0x88],eax
  4149aa:	je     0x414bc9
  4149b0:	mov    rax,QWORD PTR [rdx]
  4149b3:	mov    rcx,QWORD PTR [rsp+0x20]
  4149b8:	mov    rdx,r12
  4149bb:	fld    TBYTE PTR [rax]
  4149bd:	fstp   TBYTE PTR [rsp+0x50]
  4149c1:	call   0x413670
  4149c6:	jmp    0x414810
  4149cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4149d0:	mov    eax,DWORD PTR [rsp+0x88]
  4149d7:	mov    rdx,r13
  4149da:	add    r13,0x8
  4149de:	or     eax,0x20
  4149e1:	test   al,0x4
  4149e3:	mov    DWORD PTR [rsp+0x88],eax
  4149ea:	je     0x414bf7
  4149f0:	mov    rax,QWORD PTR [rdx]
  4149f3:	mov    rcx,QWORD PTR [rsp+0x20]
  4149f8:	mov    rdx,r12
  4149fb:	fld    TBYTE PTR [rax]
  4149fd:	fstp   TBYTE PTR [rsp+0x50]
  414a01:	call   0x413b00
  414a06:	jmp    0x414810
  414a0b:	nop    DWORD PTR [rax+rax*1+0x0]
  414a10:	cmp    r10d,0x3
  414a14:	je     0x414eec
  414a1a:	cmp    r10d,0x2
  414a1e:	je     0x414f89
  414a24:	mov    eax,DWORD PTR [r13+0x0]
  414a28:	cmp    r10d,0x1
  414a2c:	lea    rdx,[r13+0x8]
  414a30:	mov    QWORD PTR [rsp+0x70],rax
  414a35:	je     0x414fcb
  414a3b:	cmp    r10d,0x5
  414a3f:	mov    r13,rdx
  414a42:	je     0x415020
  414a48:	cmp    ecx,0x75
  414a4b:	je     0x414f2c
  414a51:	mov    r8,r12
  414a54:	mov    rdx,rax
  414a57:	call   0x413d50
  414a5c:	jmp    0x414810
  414a61:	sub    r10d,0x2
  414a65:	mov    rax,r13
  414a68:	mov    DWORD PTR [rsp+0x90],0xffffffff
  414a73:	cmp    r10d,0x1
  414a77:	jbe    0x414c1b
  414a7d:	mov    eax,DWORD PTR [rax]
  414a7f:	mov    rcx,QWORD PTR [rsp+0x28]
  414a84:	mov    r8,r12
  414a87:	mov    edx,0x1
  414a8c:	add    r13,0x8
  414a90:	mov    BYTE PTR [rsp+0x70],al
  414a94:	call   0x413070
  414a99:	jmp    0x414810
  414a9e:	xchg   ax,ax
  414aa0:	mov    eax,DWORD PTR [rsp+0x88]
  414aa7:	mov    rdx,r13
  414aaa:	add    r13,0x8
  414aae:	or     eax,0x20
  414ab1:	test   al,0x4
  414ab3:	mov    DWORD PTR [rsp+0x88],eax
  414aba:	je     0x414c58
  414ac0:	mov    rax,QWORD PTR [rdx]
  414ac3:	mov    rcx,QWORD PTR [rsp+0x20]
  414ac8:	mov    rdx,r12
  414acb:	fld    TBYTE PTR [rax]
  414acd:	fstp   TBYTE PTR [rsp+0x50]
  414ad1:	call   0x414110
  414ad6:	jmp    0x414810
  414adb:	nop    DWORD PTR [rax+rax*1+0x0]
  414ae0:	or     DWORD PTR [rsp+0x88],0x80
  414aeb:	cmp    r10d,0x3
  414aef:	je     0x414ec8
  414af5:	cmp    r10d,0x2
  414af9:	je     0x414f77
  414aff:	movsxd rcx,DWORD PTR [r13+0x0]
  414b03:	cmp    r10d,0x1
  414b07:	lea    rax,[r13+0x8]
  414b0b:	mov    QWORD PTR [rsp+0x70],rcx
  414b10:	je     0x414fdd
  414b16:	cmp    r10d,0x5
  414b1a:	mov    r13,rax
  414b1d:	je     0x41502f
  414b23:	mov    rax,rcx
  414b26:	mov    rdx,r12
  414b29:	sar    rax,0x3f
  414b2d:	mov    QWORD PTR [rsp+0x78],rax
  414b32:	call   0x413760
  414b37:	jmp    0x414810
  414b3c:	nop    DWORD PTR [rax+0x0]
  414b40:	or     DWORD PTR [rsp+0x88],0x4
  414b48:	movzx  eax,BYTE PTR [rdi+0x1]
  414b4c:	mov    r14d,0x4
  414b52:	jmp    0x414910
  414b57:	nop    WORD PTR [rax+rax*1+0x0]
  414b60:	movzx  eax,BYTE PTR [rdi+0x1]
  414b64:	cmp    al,0x36
  414b66:	je     0x414ea8
  414b6c:	cmp    al,0x33
  414b6e:	je     0x414f3c
  414b74:	mov    r10d,0x3
  414b7a:	mov    r14d,0x4
  414b80:	jmp    0x414910
  414b85:	mov    eax,DWORD PTR [rsp+0x88]
  414b8c:	mov    rdx,r13
  414b8f:	add    r13,0x8
  414b93:	test   al,0x4
  414b95:	jne    0x414943
  414b9b:	mov    rcx,QWORD PTR [rsp+0x20]
  414ba0:	fld    QWORD PTR [rdx]
  414ba2:	mov    rdx,r12
  414ba5:	fstp   TBYTE PTR [rsp+0x50]
  414ba9:	call   0x413bb0
  414bae:	jmp    0x414810
  414bb3:	mov    eax,DWORD PTR [rsp+0x88]
  414bba:	mov    rdx,r13
  414bbd:	add    r13,0x8
  414bc1:	test   al,0x4
  414bc3:	jne    0x4149b0
  414bc9:	mov    rcx,QWORD PTR [rsp+0x20]
  414bce:	fld    QWORD PTR [rdx]
  414bd0:	mov    rdx,r12
  414bd3:	fstp   TBYTE PTR [rsp+0x50]
  414bd7:	call   0x413670
  414bdc:	jmp    0x414810
  414be1:	mov    eax,DWORD PTR [rsp+0x88]
  414be8:	mov    rdx,r13
  414beb:	add    r13,0x8
  414bef:	test   al,0x4
  414bf1:	jne    0x4149f0
  414bf7:	mov    rcx,QWORD PTR [rsp+0x20]
  414bfc:	fld    QWORD PTR [rdx]
  414bfe:	mov    rdx,r12
  414c01:	fstp   TBYTE PTR [rsp+0x50]
  414c05:	call   0x413b00
  414c0a:	jmp    0x414810
  414c0f:	nop
  414c10:	mov    DWORD PTR [rsp+0x90],0xffffffff
  414c1b:	mov    eax,DWORD PTR [r13+0x0]
  414c1f:	mov    rcx,QWORD PTR [rsp+0x28]
  414c24:	lea    rsi,[r13+0x8]
  414c28:	mov    r8,r12
  414c2b:	mov    edx,0x1
  414c30:	mov    r13,rsi
  414c33:	mov    WORD PTR [rsp+0x70],ax
  414c38:	call   0x412f50
  414c3d:	jmp    0x414810
  414c42:	mov    eax,DWORD PTR [rsp+0x88]
  414c49:	mov    rdx,r13
  414c4c:	add    r13,0x8
  414c50:	test   al,0x4
  414c52:	jne    0x414ac0
  414c58:	mov    rcx,QWORD PTR [rsp+0x20]
  414c5d:	fld    QWORD PTR [rdx]
  414c5f:	mov    rdx,r12
  414c62:	fstp   TBYTE PTR [rsp+0x50]
  414c66:	call   0x414110
  414c6b:	jmp    0x414810
  414c70:	test   r14d,r14d
  414c73:	jne    0x414e10
  414c79:	or     DWORD PTR [rsp+0x88],0x200
  414c84:	movzx  eax,BYTE PTR [rdi+0x1]
  414c88:	jmp    0x414910
  414c8d:	nop    DWORD PTR [rax]
  414c90:	cmp    r14d,0x1
  414c94:	jbe    0x414efe
  414c9a:	movzx  eax,BYTE PTR [rdi+0x1]
  414c9e:	mov    r14d,0x4
  414ca4:	jmp    0x414910
  414ca9:	nop    DWORD PTR [rax+0x0]
  414cb0:	test   r14d,r14d
  414cb3:	jne    0x414d39
  414cb9:	or     DWORD PTR [rsp+0x88],0x400
  414cc4:	movzx  eax,BYTE PTR [rdi+0x1]
  414cc8:	jmp    0x414910
  414ccd:	nop    DWORD PTR [rax]
  414cd0:	test   r14d,r14d
  414cd3:	jne    0x414d39
  414cd5:	or     DWORD PTR [rsp+0x88],0x100
  414ce0:	movzx  eax,BYTE PTR [rdi+0x1]
  414ce4:	jmp    0x414910
  414ce9:	nop    DWORD PTR [rax+0x0]
  414cf0:	test   r14d,r14d
  414cf3:	jne    0x414d39
  414cf5:	or     DWORD PTR [rsp+0x88],0x800
  414d00:	movzx  eax,BYTE PTR [rdi+0x1]
  414d04:	jmp    0x414910
  414d09:	nop    DWORD PTR [rax+0x0]
  414d10:	test   r14d,r14d
  414d13:	jne    0x414d39
  414d15:	or     DWORD PTR [rsp+0x88],0x40
  414d1d:	movzx  eax,BYTE PTR [rdi+0x1]
  414d21:	jmp    0x414910
  414d26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414d30:	test   r14d,r14d
  414d33:	je     0x414e42
  414d39:	movzx  eax,BYTE PTR [rdi+0x1]
  414d3d:	jmp    0x414910
  414d42:	mov    rdx,r12
  414d45:	call   0x412ef0
  414d4a:	jmp    0x414810
  414d4f:	nop
  414d50:	test   r11,r11
  414d53:	je     0x414c9a
  414d59:	test   r14d,0xfffffffd
  414d60:	jne    0x414e30
  414d66:	mov    eax,DWORD PTR [r13+0x0]
  414d6a:	lea    rdx,[r13+0x8]
  414d6e:	test   eax,eax
  414d70:	mov    DWORD PTR [r11],eax
  414d73:	js     0x414ff0
  414d79:	movzx  eax,BYTE PTR [rdi+0x1]
  414d7d:	mov    r13,rdx
  414d80:	xor    r11d,r11d
  414d83:	jmp    0x414910
  414d88:	nop    DWORD PTR [rax+rax*1+0x0]
  414d90:	sub    eax,0x30
  414d93:	cmp    al,0x9
  414d95:	ja     0x414fb6
  414d9b:	cmp    r14d,0x3
  414d9f:	ja     0x414fb6
  414da5:	test   r14d,r14d
  414da8:	jne    0x414e1a
  414daa:	mov    r14d,0x1
  414db0:	test   r11,r11
  414db3:	je     0x414d39
  414db5:	mov    eax,DWORD PTR [r11]
  414db8:	test   eax,eax
  414dba:	js     0x414f1d
  414dc0:	lea    eax,[rax+rax*4]
  414dc3:	lea    eax,[rcx+rax*2-0x30]
  414dc7:	mov    DWORD PTR [r11],eax
  414dca:	movzx  eax,BYTE PTR [rdi+0x1]
  414dce:	jmp    0x414910
  414dd3:	mov    rsi,QWORD PTR [r13+0x0]
  414dd7:	lea    rax,[rip+0x929a]        # 0x41e078
  414dde:	lea    rdi,[r13+0x8]
  414de2:	mov    r13,rdi
  414de5:	test   rsi,rsi
  414de8:	cmove  rsi,rax
  414dec:	mov    rcx,rsi
  414def:	call   0x417758
  414df4:	mov    r8,r12
  414df7:	mov    edx,eax
  414df9:	mov    rcx,rsi
  414dfc:	call   0x412f50
  414e01:	jmp    0x414810
  414e06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414e10:	cmp    r14d,0x3
  414e14:	ja     0x414fb6
  414e1a:	cmp    r14d,0x2
  414e1e:	mov    eax,0x3
  414e23:	cmove  r14d,eax
  414e27:	jmp    0x414db0
  414e29:	nop    DWORD PTR [rax+0x0]
  414e30:	movzx  eax,BYTE PTR [rdi+0x1]
  414e34:	xor    r11d,r11d
  414e37:	mov    r14d,0x4
  414e3d:	jmp    0x414910
  414e42:	mov    DWORD PTR [rsp+0x4c],r10d
  414e47:	mov    QWORD PTR [rsp+0x40],r11
  414e4c:	or     DWORD PTR [rsp+0x88],0x1000
  414e57:	mov    DWORD PTR [rsp+0x70],0x0
  414e5f:	call   0x417830
  414e64:	mov    r9,QWORD PTR [rsp+0x28]
  414e69:	mov    rdx,QWORD PTR [rax+0x8]
  414e6d:	mov    r8d,0x10
  414e73:	mov    rcx,QWORD PTR [rsp+0x38]
  414e78:	call   0x417500
  414e7d:	test   eax,eax
  414e7f:	mov    r11,QWORD PTR [rsp+0x40]
  414e84:	mov    r10d,DWORD PTR [rsp+0x4c]
  414e89:	jle    0x414e98
  414e8b:	movzx  edx,WORD PTR [rsp+0x6e]
  414e90:	mov    WORD PTR [rsp+0xa0],dx
  414e98:	mov    DWORD PTR [rsp+0x9c],eax
  414e9f:	movzx  eax,BYTE PTR [rdi+0x1]
  414ea3:	jmp    0x414910
  414ea8:	cmp    BYTE PTR [rdi+0x2],0x34
  414eac:	je     0x41503f
  414eb2:	mov    eax,0x36
  414eb7:	mov    r10d,0x3
  414ebd:	mov    r14d,0x4
  414ec3:	jmp    0x414910
  414ec8:	mov    rcx,QWORD PTR [r13+0x0]
  414ecc:	add    r13,0x8
  414ed0:	mov    QWORD PTR [rsp+0x70],rcx
  414ed5:	jmp    0x414b23
  414eda:	mov    edx,DWORD PTR [rsp+0xa4]
  414ee1:	add    r13,0x8
  414ee5:	mov    BYTE PTR [rax],dl
  414ee7:	jmp    0x414810
  414eec:	mov    rax,QWORD PTR [r13+0x0]
  414ef0:	add    r13,0x8
  414ef4:	mov    QWORD PTR [rsp+0x70],rax
  414ef9:	jmp    0x414a48
  414efe:	mov    DWORD PTR [rsp+0x90],0x0
  414f09:	movzx  eax,BYTE PTR [rdi+0x1]
  414f0d:	lea    r11,[r12+0x10]
  414f12:	mov    r14d,0x2
  414f18:	jmp    0x414910
  414f1d:	sub    ecx,0x30
  414f20:	movzx  eax,BYTE PTR [rdi+0x1]
  414f24:	mov    DWORD PTR [r11],ecx
  414f27:	jmp    0x414910
  414f2c:	mov    rdx,r12
  414f2f:	mov    rcx,rax
  414f32:	call   0x413760
  414f37:	jmp    0x414810
  414f3c:	cmp    BYTE PTR [rdi+0x2],0x32
  414f40:	mov    eax,0x33
  414f45:	jne    0x414b74
  414f4b:	lea    rbx,[rdi+0x3]
  414f4f:	movzx  eax,BYTE PTR [rdi+0x3]
  414f53:	mov    r10d,0x2
  414f59:	mov    r14d,0x4
  414f5f:	jmp    0x414910
  414f64:	mov    edx,DWORD PTR [rsp+0xa4]
  414f6b:	add    r13,0x8
  414f6f:	mov    WORD PTR [rax],dx
  414f72:	jmp    0x414810
  414f77:	movsxd rcx,DWORD PTR [r13+0x0]
  414f7b:	add    r13,0x8
  414f7f:	mov    QWORD PTR [rsp+0x70],rcx
  414f84:	jmp    0x414b23
  414f89:	mov    eax,DWORD PTR [r13+0x0]
  414f8d:	add    r13,0x8
  414f91:	mov    QWORD PTR [rsp+0x70],rax
  414f96:	jmp    0x414a48
  414f9b:	mov    eax,DWORD PTR [rsp+0x48]
  414f9f:	mov    DWORD PTR [rsp+0x90],0x10
  414faa:	mov    DWORD PTR [rsp+0x88],eax
  414fb1:	jmp    0x414833
  414fb6:	mov    rdx,r12
  414fb9:	mov    ecx,0x25
  414fbe:	mov    rbx,rsi
  414fc1:	call   0x412ef0
  414fc6:	jmp    0x414810
  414fcb:	movzx  eax,WORD PTR [rsp+0x70]
  414fd0:	mov    r13,rdx
  414fd3:	mov    QWORD PTR [rsp+0x70],rax
  414fd8:	jmp    0x414a48
  414fdd:	movsx  rcx,WORD PTR [rsp+0x70]
  414fe3:	mov    r13,rax
  414fe6:	mov    QWORD PTR [rsp+0x70],rcx
  414feb:	jmp    0x414b23
  414ff0:	test   r14d,r14d
  414ff3:	jne    0x415058
  414ff5:	or     DWORD PTR [rsp+0x88],0x400
  415000:	neg    DWORD PTR [rsp+0x8c]
  415007:	jmp    0x414d79
  41500c:	movsxd rdx,DWORD PTR [rsp+0xa4]
  415014:	add    r13,0x8
  415018:	mov    QWORD PTR [rax],rdx
  41501b:	jmp    0x414810
  415020:	movzx  eax,BYTE PTR [rsp+0x70]
  415025:	mov    QWORD PTR [rsp+0x70],rax
  41502a:	jmp    0x414a48
  41502f:	movsx  rcx,BYTE PTR [rsp+0x70]
  415035:	mov    QWORD PTR [rsp+0x70],rcx
  41503a:	jmp    0x414b23
  41503f:	lea    rbx,[rdi+0x3]
  415043:	movzx  eax,BYTE PTR [rdi+0x3]
  415047:	mov    r10d,0x3
  41504d:	mov    r14d,0x4
  415053:	jmp    0x414910
  415058:	mov    DWORD PTR [rsp+0x90],0xffffffff
  415063:	movzx  eax,BYTE PTR [rdi+0x1]
  415067:	mov    r13,rdx
  41506a:	xor    r11d,r11d
  41506d:	jmp    0x414910
  415072:	nop
  415073:	nop
  415074:	nop
  415075:	nop
  415076:	nop
  415077:	nop
  415078:	nop
  415079:	nop
  41507a:	nop
  41507b:	nop
  41507c:	nop
  41507d:	nop
  41507e:	nop
  41507f:	nop
  415080:	push   rbx
  415081:	sub    rsp,0x20
  415085:	xor    ebx,ebx
  415087:	cmp    ecx,0x1b
  41508a:	jle    0x41509d
  41508c:	mov    eax,0x4
  415091:	add    eax,eax
  415093:	add    ebx,0x1
  415096:	lea    edx,[rax+0x17]
  415099:	cmp    edx,ecx
  41509b:	jl     0x415091
  41509d:	mov    ecx,ebx
  41509f:	call   0x416970
  4150a4:	mov    DWORD PTR [rax],ebx
  4150a6:	add    rax,0x4
  4150aa:	add    rsp,0x20
  4150ae:	pop    rbx
  4150af:	ret    
  4150b0:	push   rsi
  4150b1:	push   rbx
  4150b2:	sub    rsp,0x28
  4150b6:	mov    rbx,rcx
  4150b9:	mov    ecx,r8d
  4150bc:	mov    rsi,rdx
  4150bf:	call   0x415080
  4150c4:	movzx  ecx,BYTE PTR [rbx]
  4150c7:	lea    r8,[rbx+0x1]
  4150cb:	test   cl,cl
  4150cd:	mov    BYTE PTR [rax],cl
  4150cf:	mov    rcx,rax
  4150d2:	je     0x4150e9
  4150d4:	add    r8,0x1
  4150d8:	movzx  r9d,BYTE PTR [r8-0x1]
  4150dd:	add    rcx,0x1
  4150e1:	test   r9b,r9b
  4150e4:	mov    BYTE PTR [rcx],r9b
  4150e7:	jne    0x4150d4
  4150e9:	test   rsi,rsi
  4150ec:	je     0x4150f1
  4150ee:	mov    QWORD PTR [rsi],rcx
  4150f1:	add    rsp,0x28
  4150f5:	pop    rbx
  4150f6:	pop    rsi
  4150f7:	ret    
  4150f8:	nop    DWORD PTR [rax+rax*1+0x0]
  415100:	mov    edx,0x1
  415105:	mov    rax,rcx
  415108:	mov    ecx,DWORD PTR [rcx-0x4]
  41510b:	shl    edx,cl
  41510d:	mov    DWORD PTR [rax+0x4],ecx
  415110:	lea    rcx,[rax-0x4]
  415114:	mov    DWORD PTR [rax+0x8],edx
  415117:	jmp    0x416a80
  41511c:	nop    DWORD PTR [rax+0x0]
  415120:	push   r15
  415122:	push   r14
  415124:	push   r13
  415126:	push   r12
  415128:	push   rbp
  415129:	push   rdi
  41512a:	push   rsi
  41512b:	push   rbx
  41512c:	sub    rsp,0x38
  415130:	xor    eax,eax
  415132:	mov    edi,DWORD PTR [rdx+0x14]
  415135:	cmp    edi,DWORD PTR [rcx+0x14]
  415138:	mov    r15,rdx
  41513b:	jg     0x415289
  415141:	sub    edi,0x1
  415144:	lea    rbx,[rdx+0x18]
  415148:	lea    r12,[rcx+0x18]
  41514c:	movsxd r13,edi
  41514f:	xor    edx,edx
  415151:	shl    r13,0x2
  415155:	lea    rbp,[rbx+r13*1]
  415159:	add    r13,r12
  41515c:	mov    eax,DWORD PTR [rbp+0x0]
  41515f:	lea    r8d,[rax+0x1]
  415163:	mov    eax,DWORD PTR [r13+0x0]
  415167:	div    r8d
  41516a:	test   eax,eax
  41516c:	mov    r14d,eax
  41516f:	mov    DWORD PTR [rsp+0x2c],eax
  415173:	je     0x415207
  415179:	mov    edx,eax
  41517b:	mov    rsi,rbx
  41517e:	mov    r11,r12
  415181:	xor    eax,eax
  415183:	xor    r10d,r10d
  415186:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415190:	add    rsi,0x4
  415194:	mov    r8d,DWORD PTR [rsi-0x4]
  415198:	mov    r9d,DWORD PTR [r11]
  41519b:	add    r11,0x4
  41519f:	imul   r8,rdx
  4151a3:	add    r8,rax
  4151a6:	mov    rax,r8
  4151a9:	mov    r8d,r8d
  4151ac:	sub    r9,r8
  4151af:	shr    rax,0x20
  4151b3:	sub    r9,r10
  4151b6:	mov    r10,r9
  4151b9:	mov    DWORD PTR [r11-0x4],r9d
  4151bd:	shr    r10,0x20
  4151c1:	and    r10d,0x1
  4151c5:	cmp    rbp,rsi
  4151c8:	jae    0x415190
  4151ca:	mov    r11d,DWORD PTR [r13+0x0]
  4151ce:	test   r11d,r11d
  4151d1:	jne    0x415207
  4151d3:	lea    rax,[r13-0x4]
  4151d7:	cmp    r12,rax
  4151da:	jae    0x415204
  4151dc:	mov    r10d,DWORD PTR [r13-0x4]
  4151e0:	test   r10d,r10d
  4151e3:	je     0x4151f8
  4151e5:	jmp    0x415204
  4151e7:	nop    WORD PTR [rax+rax*1+0x0]
  4151f0:	mov    r9d,DWORD PTR [rax]
  4151f3:	test   r9d,r9d
  4151f6:	jne    0x415204
  4151f8:	sub    rax,0x4
  4151fc:	sub    edi,0x1
  4151ff:	cmp    r12,rax
  415202:	jb     0x4151f0
  415204:	mov    DWORD PTR [rcx+0x14],edi
  415207:	mov    rdx,r15
  41520a:	mov    rsi,rcx
  41520d:	call   0x416fa0
  415212:	test   eax,eax
  415214:	js     0x415285
  415216:	lea    eax,[r14+0x1]
  41521a:	mov    rcx,r12
  41521d:	xor    edx,edx
  41521f:	mov    DWORD PTR [rsp+0x2c],eax
  415223:	add    rbx,0x4
  415227:	mov    eax,DWORD PTR [rcx]
  415229:	mov    r8d,DWORD PTR [rbx-0x4]
  41522d:	add    rcx,0x4
  415231:	sub    rax,r8
  415234:	sub    rax,rdx
  415237:	mov    rdx,rax
  41523a:	mov    DWORD PTR [rcx-0x4],eax
  41523d:	shr    rdx,0x20
  415241:	and    edx,0x1
  415244:	cmp    rbp,rbx
  415247:	jae    0x415223
  415249:	movsxd rax,edi
  41524c:	lea    rdx,[r12+rax*4]
  415250:	mov    r8d,DWORD PTR [rdx]
  415253:	test   r8d,r8d
  415256:	jne    0x415285
  415258:	lea    rax,[rdx-0x4]
  41525c:	cmp    r12,rax
  41525f:	jae    0x415282
  415261:	mov    ecx,DWORD PTR [rdx-0x4]
  415264:	test   ecx,ecx
  415266:	je     0x415276
  415268:	jmp    0x415282
  41526a:	nop    WORD PTR [rax+rax*1+0x0]
  415270:	mov    edx,DWORD PTR [rax]
  415272:	test   edx,edx
  415274:	jne    0x415282
  415276:	sub    rax,0x4
  41527a:	sub    edi,0x1
  41527d:	cmp    r12,rax
  415280:	jb     0x415270
  415282:	mov    DWORD PTR [rsi+0x14],edi
  415285:	mov    eax,DWORD PTR [rsp+0x2c]
  415289:	add    rsp,0x38
  41528d:	pop    rbx
  41528e:	pop    rsi
  41528f:	pop    rdi
  415290:	pop    rbp
  415291:	pop    r12
  415293:	pop    r13
  415295:	pop    r14
  415297:	pop    r15
  415299:	ret    
  41529a:	nop
  41529b:	nop
  41529c:	nop
  41529d:	nop
  41529e:	nop
  41529f:	nop
  4152a0:	push   r15
  4152a2:	push   r14
  4152a4:	push   r13
  4152a6:	push   r12
  4152a8:	push   rbp
  4152a9:	push   rdi
  4152aa:	push   rsi
  4152ab:	push   rbx
  4152ac:	sub    rsp,0xb8
  4152b3:	movaps XMMWORD PTR [rsp+0xa0],xmm6
  4152bb:	mov    r12d,DWORD PTR [r9]
  4152be:	mov    eax,r12d
  4152c1:	and    eax,0xffffffcf
  4152c4:	mov    DWORD PTR [r9],eax
  4152c7:	mov    eax,r12d
  4152ca:	and    eax,0x7
  4152cd:	cmp    eax,0x4
  4152d0:	ja     0x416703
  4152d6:	mov    r13d,edx
  4152d9:	lea    rdx,[rip+0x8f40]        # 0x41e220
  4152e0:	mov    QWORD PTR [rsp+0x28],r9
  4152e5:	mov    r15,r8
  4152e8:	mov    rbp,rcx
  4152eb:	movsxd rax,DWORD PTR [rdx+rax*4]
  4152ef:	add    rdx,rax
  4152f2:	jmp    rdx
  4152f4:	mov    edi,DWORD PTR [rcx]
  4152f6:	xor    ecx,ecx
  4152f8:	cmp    edi,0x20
  4152fb:	jle    0x41530b
  4152fd:	mov    eax,0x20
  415302:	add    eax,eax
  415304:	add    ecx,0x1
  415307:	cmp    edi,eax
  415309:	jg     0x415302
  41530b:	call   0x416970
  415310:	mov    rsi,rax
  415313:	lea    eax,[rdi-0x1]
  415316:	lea    r9,[rsi+0x18]
  41531a:	sar    eax,0x5
  41531d:	cdqe   
  41531f:	mov    rdx,r9
  415322:	lea    r11,[r15+rax*4]
  415326:	mov    rax,r15
  415329:	nop    DWORD PTR [rax+0x0]
  415330:	mov    ecx,DWORD PTR [rax]
  415332:	add    rax,0x4
  415336:	add    rdx,0x4
  41533a:	cmp    r11,rax
  41533d:	mov    DWORD PTR [rdx-0x4],ecx
  415340:	jae    0x415330
  415342:	sub    rdx,r9
  415345:	sar    rdx,0x2
  415349:	mov    r14d,edx
  41534c:	movsxd rdx,edx
  41534f:	lea    rax,[r9+rdx*4-0x4]
  415354:	jmp    0x41536f
  415356:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415360:	sub    rax,0x4
  415364:	test   edx,edx
  415366:	mov    r14d,edx
  415369:	je     0x415870
  41536f:	mov    r8d,DWORD PTR [rax]
  415372:	lea    edx,[r14-0x1]
  415376:	test   r8d,r8d
  415379:	je     0x415360
  41537b:	movsxd rdx,edx
  41537e:	mov    DWORD PTR [rsi+0x14],r14d
  415382:	shl    r14d,0x5
  415386:	bsr    eax,DWORD PTR [rsi+rdx*4+0x18]
  41538b:	xor    eax,0x1f
  41538e:	sub    r14d,eax
  415391:	mov    rcx,rsi
  415394:	call   0x416810
  415399:	test   eax,eax
  41539b:	mov    DWORD PTR [rsp+0x9c],eax
  4153a2:	mov    r11d,r13d
  4153a5:	jne    0x415880
  4153ab:	mov    ecx,DWORD PTR [rsi+0x14]
  4153ae:	test   ecx,ecx
  4153b0:	jne    0x415460
  4153b6:	mov    rcx,rsi
  4153b9:	call   0x416a80
  4153be:	mov    rax,QWORD PTR [rsp+0x130]
  4153c6:	mov    rdx,QWORD PTR [rsp+0x138]
  4153ce:	lea    rcx,[rip+0x8e48]        # 0x41e21d
  4153d5:	mov    r8d,0x1
  4153db:	mov    DWORD PTR [rax],0x1
  4153e1:	call   0x4150b0
  4153e6:	nop
  4153e7:	movaps xmm6,XMMWORD PTR [rsp+0xa0]
  4153ef:	add    rsp,0xb8
  4153f6:	pop    rbx
  4153f7:	pop    rsi
  4153f8:	pop    rdi
  4153f9:	pop    rbp
  4153fa:	pop    r12
  4153fc:	pop    r13
  4153fe:	pop    r14
  415400:	pop    r15
  415402:	ret    
  415403:	mov    rax,QWORD PTR [rsp+0x130]
  41540b:	mov    rdx,QWORD PTR [rsp+0x138]
  415413:	lea    rcx,[rip+0x8dff]        # 0x41e219
  41541a:	mov    r8d,0x3
  415420:	mov    DWORD PTR [rax],0xffff8000
  415426:	call   0x4150b0
  41542b:	jmp    0x4153e7
  41542d:	nop    DWORD PTR [rax]
  415430:	mov    rax,QWORD PTR [rsp+0x130]
  415438:	mov    rdx,QWORD PTR [rsp+0x138]
  415440:	lea    rcx,[rip+0x8dc9]        # 0x41e210
  415447:	mov    r8d,0x8
  41544d:	mov    DWORD PTR [rax],0xffff8000
  415453:	call   0x4150b0
  415458:	jmp    0x4153e7
  41545a:	nop    WORD PTR [rax+rax*1+0x0]
  415460:	lea    rdx,[rsp+0x9c]
  415468:	mov    rcx,rsi
  41546b:	mov    DWORD PTR [rsp+0x30],r11d
  415470:	call   0x417130
  415475:	movq   rdx,xmm0
  41547a:	movq   r9,xmm0
  41547f:	mov    r11d,DWORD PTR [rsp+0x30]
  415484:	pxor   xmm0,xmm0
  415488:	shr    rdx,0x20
  41548c:	mov    r9d,r9d
  41548f:	and    edx,0xfffff
  415495:	lea    ecx,[r11+r14*1-0x1]
  41549a:	or     edx,0x3ff00000
  4154a0:	mov    rax,rdx
  4154a3:	cvtsi2sd xmm0,ecx
  4154a7:	shl    rax,0x20
  4154ab:	mov    ebx,ecx
  4154ad:	or     r9,rax
  4154b0:	sar    ebx,0x1f
  4154b3:	mov    QWORD PTR [rsp+0x30],r9
  4154b8:	mov    eax,ebx
  4154ba:	movsd  xmm1,QWORD PTR [rsp+0x30]
  4154c0:	xor    eax,ecx
  4154c2:	sub    eax,ebx
  4154c4:	subsd  xmm1,QWORD PTR [rip+0x8d6c]        # 0x41e238
  4154cc:	sub    eax,0x435
  4154d1:	test   eax,eax
  4154d3:	mulsd  xmm0,QWORD PTR [rip+0x8d75]        # 0x41e250
  4154db:	mulsd  xmm1,QWORD PTR [rip+0x8d5d]        # 0x41e240
  4154e3:	addsd  xmm1,QWORD PTR [rip+0x8d5d]        # 0x41e248
  4154eb:	addsd  xmm1,xmm0
  4154ef:	jle    0x415505
  4154f1:	pxor   xmm0,xmm0
  4154f5:	cvtsi2sd xmm0,eax
  4154f9:	mulsd  xmm0,QWORD PTR [rip+0x8d57]        # 0x41e258
  415501:	addsd  xmm1,xmm0
  415505:	cvttsd2si eax,xmm1
  415509:	pxor   xmm6,xmm6
  41550d:	ucomisd xmm6,xmm1
  415511:	mov    DWORD PTR [rsp+0x30],eax
  415515:	ja     0x415da3
  41551b:	mov    eax,ecx
  41551d:	mov    r9d,r9d
  415520:	mov    DWORD PTR [rsp+0x6c],0x1
  415528:	shl    eax,0x14
  41552b:	add    eax,edx
  41552d:	shl    rax,0x20
  415531:	or     r9,rax
  415534:	cmp    DWORD PTR [rsp+0x30],0x16
  415539:	mov    QWORD PTR [rsp+0x80],r9
  415541:	ja     0x415570
  415543:	movsxd rax,DWORD PTR [rsp+0x30]
  415548:	mov    rdx,QWORD PTR [rip+0x9041]        # 0x41e590
  41554f:	movsd  xmm0,QWORD PTR [rdx+rax*8]
  415554:	ucomisd xmm0,QWORD PTR [rsp+0x80]
  41555d:	jbe    0x4158c0
  415563:	sub    DWORD PTR [rsp+0x30],0x1
  415568:	mov    DWORD PTR [rsp+0x6c],0x0
  415570:	mov    eax,r14d
  415573:	mov    DWORD PTR [rsp+0x50],0x0
  41557b:	sub    eax,ecx
  41557d:	sub    eax,0x1
  415580:	mov    DWORD PTR [rsp+0x40],eax
  415584:	js     0x415d90
  41558a:	mov    eax,DWORD PTR [rsp+0x30]
  41558e:	test   eax,eax
  415590:	js     0x415d70
  415596:	add    DWORD PTR [rsp+0x40],eax
  41559a:	mov    DWORD PTR [rsp+0x88],eax
  4155a1:	mov    DWORD PTR [rsp+0x58],0x0
  4155a9:	cmp    DWORD PTR [rsp+0x120],0x9
  4155b1:	ja     0x4158a0
  4155b7:	cmp    DWORD PTR [rsp+0x120],0x5
  4155bf:	jle    0x4158ab
  4155c5:	sub    DWORD PTR [rsp+0x120],0x4
  4155cd:	xor    eax,eax
  4155cf:	cmp    DWORD PTR [rsp+0x120],0x3
  4155d7:	je     0x415f64
  4155dd:	jle    0x415cc3
  4155e3:	cmp    DWORD PTR [rsp+0x120],0x4
  4155eb:	mov    DWORD PTR [rsp+0x60],0x1
  4155f3:	je     0x4158d0
  4155f9:	cmp    DWORD PTR [rsp+0x120],0x5
  415601:	jne    0x415cd9
  415607:	mov    ebx,DWORD PTR [rsp+0x30]
  41560b:	add    ebx,DWORD PTR [rsp+0x128]
  415612:	mov    DWORD PTR [rsp+0x8c],ebx
  415619:	add    ebx,0x1
  41561c:	test   ebx,ebx
  41561e:	mov    DWORD PTR [rsp+0x68],ebx
  415622:	mov    ecx,ebx
  415624:	jle    0x4161a0
  41562a:	cmp    ebx,0xe
  41562d:	mov    DWORD PTR [rsp+0x9c],ebx
  415634:	setbe  bl
  415637:	and    ebx,eax
  415639:	mov    QWORD PTR [rsp+0x78],r9
  41563e:	mov    DWORD PTR [rsp+0x70],r11d
  415643:	call   0x415080
  415648:	mov    QWORD PTR [rsp+0x48],rax
  41564d:	mov    eax,DWORD PTR [rbp+0xc]
  415650:	mov    r11d,DWORD PTR [rsp+0x70]
  415655:	mov    r9,QWORD PTR [rsp+0x78]
  41565a:	sub    eax,0x1
  41565d:	mov    DWORD PTR [rsp+0x38],eax
  415661:	je     0x415688
  415663:	mov    ecx,DWORD PTR [rsp+0x38]
  415667:	mov    eax,0x2
  41566c:	test   ecx,ecx
  41566e:	cmovns eax,ecx
  415671:	and    r12d,0x8
  415675:	mov    DWORD PTR [rsp+0x38],eax
  415679:	je     0x415688
  41567b:	mov    eax,0x3
  415680:	sub    eax,DWORD PTR [rsp+0x38]
  415684:	mov    DWORD PTR [rsp+0x38],eax
  415688:	test   bl,bl
  41568a:	je     0x415980
  415690:	mov    eax,DWORD PTR [rsp+0x38]
  415694:	or     eax,DWORD PTR [rsp+0x30]
  415698:	jne    0x415980
  41569e:	mov    eax,DWORD PTR [rsp+0x6c]
  4156a2:	mov    DWORD PTR [rsp+0x9c],0x0
  4156ad:	movsd  xmm4,QWORD PTR [rsp+0x80]
  4156b6:	test   eax,eax
  4156b8:	je     0x4156cc
  4156ba:	movsd  xmm0,QWORD PTR [rip+0x8ba6]        # 0x41e268
  4156c2:	ucomisd xmm0,xmm4
  4156c6:	ja     0x4164fb
  4156cc:	movapd xmm0,xmm4
  4156d0:	mov    r12d,DWORD PTR [rsp+0x68]
  4156d5:	addsd  xmm0,xmm4
  4156d9:	addsd  xmm0,QWORD PTR [rip+0x8b9f]        # 0x41e280
  4156e1:	movq   rdx,xmm0
  4156e6:	movq   rax,xmm0
  4156eb:	shr    rdx,0x20
  4156ef:	mov    eax,eax
  4156f1:	sub    edx,0x3400000
  4156f7:	shl    rdx,0x20
  4156fb:	or     rax,rdx
  4156fe:	test   r12d,r12d
  415701:	je     0x415937
  415707:	mov    r9d,DWORD PTR [rsp+0x68]
  41570c:	movapd xmm0,xmm4
  415710:	xor    ecx,ecx
  415712:	mov    ebx,DWORD PTR [rsp+0x60]
  415716:	lea    edx,[r9-0x1]
  41571a:	movsxd rdx,edx
  41571d:	test   ebx,ebx
  41571f:	je     0x416243
  415725:	mov    r10,QWORD PTR [rip+0x8e64]        # 0x41e590
  41572c:	movsd  xmm1,QWORD PTR [rip+0x8b6c]        # 0x41e2a0
  415734:	mov    QWORD PTR [rsp+0x38],rax
  415739:	cvttsd2si eax,xmm0
  41573d:	pxor   xmm2,xmm2
  415741:	mov    DWORD PTR [rsp+0x9c],0x0
  41574c:	divsd  xmm1,QWORD PTR [r10+rdx*8]
  415752:	mov    rdx,QWORD PTR [rsp+0x48]
  415757:	mov    rbx,rdx
  41575a:	add    rbx,0x1
  41575e:	cvtsi2sd xmm2,eax
  415762:	add    eax,0x30
  415765:	mov    BYTE PTR [rdx],al
  415767:	movsd  xmm5,QWORD PTR [rsp+0x38]
  41576d:	subsd  xmm0,xmm2
  415771:	subsd  xmm1,xmm5
  415775:	ucomisd xmm1,xmm0
  415779:	ja     0x415814
  41577f:	movsd  xmm5,QWORD PTR [rip+0x8ae1]        # 0x41e268
  415787:	movapd xmm2,xmm5
  41578b:	subsd  xmm2,xmm0
  41578f:	ucomisd xmm1,xmm2
  415793:	ja     0x416317
  415799:	mov    eax,DWORD PTR [rsp+0x9c]
  4157a0:	movsd  xmm3,QWORD PTR [rip+0x8ac8]        # 0x41e270
  4157a8:	add    eax,0x1
  4157ab:	cmp    r9d,eax
  4157ae:	mov    DWORD PTR [rsp+0x9c],eax
  4157b5:	jg     0x4157ec
  4157b7:	jmp    0x41596e
  4157bc:	nop    DWORD PTR [rax+0x0]
  4157c0:	movapd xmm2,xmm5
  4157c4:	subsd  xmm2,xmm0
  4157c8:	ucomisd xmm1,xmm2
  4157cc:	ja     0x416317
  4157d2:	mov    eax,DWORD PTR [rsp+0x9c]
  4157d9:	add    eax,0x1
  4157dc:	cmp    r9d,eax
  4157df:	mov    DWORD PTR [rsp+0x9c],eax
  4157e6:	jle    0x41596e
  4157ec:	mulsd  xmm0,xmm3
  4157f0:	add    rbx,0x1
  4157f4:	pxor   xmm2,xmm2
  4157f8:	mulsd  xmm1,xmm3
  4157fc:	cvttsd2si eax,xmm0
  415800:	cvtsi2sd xmm2,eax
  415804:	add    eax,0x30
  415807:	mov    BYTE PTR [rbx-0x1],al
  41580a:	subsd  xmm0,xmm2
  41580e:	ucomisd xmm1,xmm0
  415812:	jbe    0x4157c0
  415814:	ucomisd xmm0,xmm6
  415818:	lea    ebp,[rcx+0x1]
  41581b:	jp     0x415823
  41581d:	je     0x416177
  415823:	mov    r15d,0x10
  415829:	nop    DWORD PTR [rax+0x0]
  415830:	mov    rcx,rsi
  415833:	call   0x416a80
  415838:	cmp    QWORD PTR [rsp+0x138],0x0
  415841:	mov    rax,QWORD PTR [rsp+0x130]
  415849:	mov    BYTE PTR [rbx],0x0
  41584c:	mov    DWORD PTR [rax],ebp
  41584e:	je     0x41585b
  415850:	mov    rax,QWORD PTR [rsp+0x138]
  415858:	mov    QWORD PTR [rax],rbx
  41585b:	mov    rax,QWORD PTR [rsp+0x28]
  415860:	or     DWORD PTR [rax],r15d
  415863:	mov    rax,QWORD PTR [rsp+0x48]
  415868:	jmp    0x4153e7
  41586d:	nop    DWORD PTR [rax]
  415870:	mov    DWORD PTR [rsi+0x14],0x0
  415877:	jmp    0x415391
  41587c:	nop    DWORD PTR [rax+0x0]
  415880:	mov    edx,eax
  415882:	mov    rcx,rsi
  415885:	call   0x416710
  41588a:	mov    eax,DWORD PTR [rsp+0x9c]
  415891:	lea    r11d,[r13+rax*1+0x0]
  415896:	sub    r14d,eax
  415899:	jmp    0x4153ab
  41589e:	xchg   ax,ax
  4158a0:	mov    DWORD PTR [rsp+0x120],0x0
  4158ab:	add    ecx,0x3fe
  4158b1:	cmp    ecx,0x7f7
  4158b7:	setbe  al
  4158ba:	jmp    0x4155cf
  4158bf:	nop
  4158c0:	mov    DWORD PTR [rsp+0x6c],0x0
  4158c8:	jmp    0x415570
  4158cd:	nop    DWORD PTR [rax]
  4158d0:	mov    edx,DWORD PTR [rsp+0x128]
  4158d7:	test   edx,edx
  4158d9:	jle    0x41618b
  4158df:	cmp    DWORD PTR [rsp+0x128],0xe
  4158e7:	setbe  bl
  4158ea:	mov    ecx,DWORD PTR [rsp+0x128]
  4158f1:	and    ebx,eax
  4158f3:	mov    DWORD PTR [rsp+0x9c],ecx
  4158fa:	mov    DWORD PTR [rsp+0x8c],ecx
  415901:	mov    DWORD PTR [rsp+0x68],ecx
  415905:	jmp    0x415639
  41590a:	movapd xmm0,xmm4
  41590e:	addsd  xmm0,xmm4
  415912:	addsd  xmm0,QWORD PTR [rip+0x8966]        # 0x41e280
  41591a:	movq   rdx,xmm0
  41591f:	movq   rax,xmm0
  415924:	shr    rdx,0x20
  415928:	mov    eax,eax
  41592a:	sub    edx,0x3400000
  415930:	shl    rdx,0x20
  415934:	or     rax,rdx
  415937:	movapd xmm1,xmm4
  41593b:	mov    QWORD PTR [rsp+0x38],rax
  415940:	movsd  xmm0,QWORD PTR [rsp+0x38]
  415946:	subsd  xmm1,QWORD PTR [rip+0x893a]        # 0x41e288
  41594e:	ucomisd xmm1,xmm0
  415952:	ja     0x416234
  415958:	movsd  xmm2,QWORD PTR [rip+0x8930]        # 0x41e290
  415960:	xorpd  xmm0,xmm2
  415964:	ucomisd xmm0,xmm1
  415968:	ja     0x415d4d
  41596e:	movq   r9,xmm4
  415973:	mov    DWORD PTR [rsp+0x38],0x0
  41597b:	nop    DWORD PTR [rax+rax*1+0x0]
  415980:	test   r11d,r11d
  415983:	js     0x415a22
  415989:	movsxd rax,DWORD PTR [rsp+0x30]
  41598e:	cmp    eax,DWORD PTR [rbp+0x14]
  415991:	jg     0x415a22
  415997:	mov    ebx,DWORD PTR [rsp+0x68]
  41599b:	mov    rdx,QWORD PTR [rip+0x8bee]        # 0x41e590
  4159a2:	test   ebx,ebx
  4159a4:	movsd  xmm2,QWORD PTR [rdx+rax*8]
  4159a9:	jg     0x4160b3
  4159af:	mov    eax,DWORD PTR [rsp+0x128]
  4159b6:	shr    eax,0x1f
  4159b9:	test   al,al
  4159bb:	je     0x4160b3
  4159c1:	test   ebx,ebx
  4159c3:	jne    0x415d4d
  4159c9:	mulsd  xmm2,QWORD PTR [rip+0x88b7]        # 0x41e288
  4159d1:	mov    QWORD PTR [rsp+0x38],r9
  4159d6:	movsd  xmm5,QWORD PTR [rsp+0x38]
  4159dc:	ucomisd xmm2,xmm5
  4159e0:	jae    0x415d4d
  4159e6:	mov    ebp,DWORD PTR [rsp+0x30]
  4159ea:	xor    r12d,r12d
  4159ed:	xor    edi,edi
  4159ef:	add    ebp,0x2
  4159f2:	mov    rax,QWORD PTR [rsp+0x48]
  4159f7:	mov    r15d,0x20
  4159fd:	lea    rbx,[rax+0x1]
  415a01:	mov    BYTE PTR [rax],0x31
  415a04:	mov    rcx,r12
  415a07:	call   0x416a80
  415a0c:	test   rdi,rdi
  415a0f:	je     0x415830
  415a15:	mov    rcx,rdi
  415a18:	call   0x416a80
  415a1d:	jmp    0x415830
  415a22:	mov    r9d,DWORD PTR [rsp+0x60]
  415a27:	test   r9d,r9d
  415a2a:	je     0x415f30
  415a30:	mov    edx,DWORD PTR [rbp+0x4]
  415a33:	sub    edi,r14d
  415a36:	mov    ecx,r11d
  415a39:	lea    eax,[rdi+0x1]
  415a3c:	sub    ecx,edi
  415a3e:	cmp    ecx,edx
  415a40:	mov    DWORD PTR [rsp+0x9c],eax
  415a47:	jge    0x415a7c
  415a49:	mov    ebx,DWORD PTR [rsp+0x120]
  415a50:	lea    ecx,[rbx-0x3]
  415a53:	and    ecx,0xfffffffd
  415a56:	je     0x415a7c
  415a58:	mov    ebx,DWORD PTR [rsp+0x68]
  415a5c:	sub    r11d,edx
  415a5f:	lea    eax,[r11+0x1]
  415a63:	test   ebx,ebx
  415a65:	mov    DWORD PTR [rsp+0x9c],eax
  415a6c:	setg   cl
  415a6f:	cmp    ebx,eax
  415a71:	setl   dl
  415a74:	test   cl,dl
  415a76:	je     0x4161bf
  415a7c:	cmp    DWORD PTR [rsp+0x120],0x1
  415a84:	jle    0x4161bf
  415a8a:	mov    ebx,DWORD PTR [rsp+0x58]
  415a8e:	mov    eax,DWORD PTR [rsp+0x68]
  415a92:	mov    r12d,ebx
  415a95:	sub    eax,0x1
  415a98:	sub    r12d,eax
  415a9b:	cmp    ebx,eax
  415a9d:	jge    0x415ab3
  415a9f:	mov    edx,eax
  415aa1:	sub    edx,DWORD PTR [rsp+0x58]
  415aa5:	xor    r12d,r12d
  415aa8:	add    DWORD PTR [rsp+0x88],edx
  415aaf:	mov    DWORD PTR [rsp+0x58],eax
  415ab3:	mov    eax,DWORD PTR [rsp+0x68]
  415ab7:	test   eax,eax
  415ab9:	js     0x416452
  415abf:	mov    ebx,DWORD PTR [rsp+0x50]
  415ac3:	mov    DWORD PTR [rsp+0x9c],eax
  415aca:	mov    ecx,0x1
  415acf:	add    DWORD PTR [rsp+0x50],eax
  415ad3:	add    DWORD PTR [rsp+0x40],eax
  415ad7:	call   0x416bb0
  415adc:	mov    rdi,rax
  415adf:	mov    ecx,DWORD PTR [rsp+0x40]
  415ae3:	test   ecx,ecx
  415ae5:	mov    eax,ecx
  415ae7:	jle    0x415b05
  415ae9:	test   ebx,ebx
  415aeb:	jle    0x415b05
  415aed:	cmp    ecx,ebx
  415aef:	cmovg  eax,ebx
  415af2:	sub    DWORD PTR [rsp+0x50],eax
  415af6:	sub    ecx,eax
  415af8:	mov    DWORD PTR [rsp+0x9c],eax
  415aff:	sub    ebx,eax
  415b01:	mov    DWORD PTR [rsp+0x40],ecx
  415b05:	mov    r8d,DWORD PTR [rsp+0x58]
  415b0a:	test   r8d,r8d
  415b0d:	jle    0x415b5b
  415b0f:	mov    ecx,DWORD PTR [rsp+0x60]
  415b13:	test   ecx,ecx
  415b15:	je     0x415f50
  415b1b:	test   r12d,r12d
  415b1e:	jle    0x415b4e
  415b20:	mov    rcx,rdi
  415b23:	mov    edx,r12d
  415b26:	call   0x416d10
  415b2b:	mov    rdx,rsi
  415b2e:	mov    rcx,rax
  415b31:	mov    rdi,rax
  415b34:	call   0x416be0
  415b39:	mov    rcx,rsi
  415b3c:	mov    QWORD PTR [rsp+0x70],rax
  415b41:	call   0x416a80
  415b46:	mov    rax,QWORD PTR [rsp+0x70]
  415b4b:	mov    rsi,rax
  415b4e:	mov    edx,DWORD PTR [rsp+0x58]
  415b52:	sub    edx,r12d
  415b55:	jne    0x415f54
  415b5b:	mov    ecx,0x1
  415b60:	call   0x416bb0
  415b65:	mov    r12,rax
  415b68:	mov    eax,DWORD PTR [rsp+0x88]
  415b6f:	test   eax,eax
  415b71:	jle    0x415ca0
  415b77:	mov    rcx,r12
  415b7a:	mov    edx,eax
  415b7c:	call   0x416d10
  415b81:	cmp    DWORD PTR [rsp+0x120],0x1
  415b89:	mov    r12,rax
  415b8c:	jg     0x415b98
  415b8e:	cmp    r14d,0x1
  415b92:	je     0x415c5c
  415b98:	xor    ebp,ebp
  415b9a:	mov    eax,DWORD PTR [r12+0x14]
  415b9f:	sub    eax,0x1
  415ba2:	cdqe   
  415ba4:	bsr    eax,DWORD PTR [r12+rax*4+0x18]
  415baa:	xor    eax,0x1f
  415bad:	sub    eax,DWORD PTR [rsp+0x40]
  415bb1:	mov    edx,DWORD PTR [rsp+0x50]
  415bb5:	sub    eax,0x4
  415bb8:	and    eax,0x1f
  415bbb:	add    edx,eax
  415bbd:	mov    r13d,eax
  415bc0:	mov    DWORD PTR [rsp+0x9c],eax
  415bc7:	test   edx,edx
  415bc9:	mov    ecx,eax
  415bcb:	jle    0x415bdf
  415bcd:	mov    rcx,rsi
  415bd0:	call   0x416e80
  415bd5:	mov    ecx,DWORD PTR [rsp+0x9c]
  415bdc:	mov    rsi,rax
  415bdf:	mov    edx,DWORD PTR [rsp+0x40]
  415be3:	add    edx,ecx
  415be5:	test   edx,edx
  415be7:	jle    0x415bf4
  415be9:	mov    rcx,r12
  415bec:	call   0x416e80
  415bf1:	mov    r12,rax
  415bf4:	mov    eax,DWORD PTR [rsp+0x6c]
  415bf8:	test   eax,eax
  415bfa:	jne    0x415f71
  415c00:	mov    r14d,DWORD PTR [rsp+0x68]
  415c05:	test   r14d,r14d
  415c08:	jg     0x415dc1
  415c0e:	cmp    DWORD PTR [rsp+0x120],0x2
  415c16:	jle    0x415dc1
  415c1c:	mov    r11d,DWORD PTR [rsp+0x68]
  415c21:	test   r11d,r11d
  415c24:	jne    0x415d52
  415c2a:	xor    r8d,r8d
  415c2d:	mov    rcx,r12
  415c30:	mov    edx,0x5
  415c35:	call   0x416af0
  415c3a:	mov    rcx,rsi
  415c3d:	mov    rdx,rax
  415c40:	mov    r12,rax
  415c43:	call   0x416fa0
  415c48:	test   eax,eax
  415c4a:	jle    0x415d52
  415c50:	mov    ebp,DWORD PTR [rsp+0x30]
  415c54:	add    ebp,0x2
  415c57:	jmp    0x4159f2
  415c5c:	mov    eax,DWORD PTR [rbp+0x4]
  415c5f:	add    eax,0x1
  415c62:	cmp    r13d,eax
  415c65:	jle    0x415b98
  415c6b:	add    DWORD PTR [rsp+0x50],0x1
  415c70:	add    DWORD PTR [rsp+0x40],0x1
  415c75:	mov    ebp,0x1
  415c7a:	nop    WORD PTR [rax+rax*1+0x0]
  415c80:	mov    edx,DWORD PTR [rsp+0x88]
  415c87:	mov    eax,0x1f
  415c8c:	test   edx,edx
  415c8e:	je     0x415bad
  415c94:	jmp    0x415b9a
  415c99:	nop    DWORD PTR [rax+0x0]
  415ca0:	cmp    DWORD PTR [rsp+0x120],0x1
  415ca8:	jg     0x415cb0
  415caa:	cmp    r14d,0x1
  415cae:	je     0x415cb4
  415cb0:	xor    ebp,ebp
  415cb2:	jmp    0x415c80
  415cb4:	mov    eax,DWORD PTR [rbp+0x4]
  415cb7:	xor    ebp,ebp
  415cb9:	add    eax,0x1
  415cbc:	cmp    r13d,eax
  415cbf:	jle    0x415c80
  415cc1:	jmp    0x415c6b
  415cc3:	cmp    DWORD PTR [rsp+0x120],0x2
  415ccb:	mov    DWORD PTR [rsp+0x60],0x0
  415cd3:	je     0x4158d0
  415cd9:	pxor   xmm0,xmm0
  415cdd:	mov    QWORD PTR [rsp+0x60],r9
  415ce2:	mov    DWORD PTR [rsp+0x68],r11d
  415ce7:	cvtsi2sd xmm0,edi
  415ceb:	mulsd  xmm0,QWORD PTR [rip+0x856d]        # 0x41e260
  415cf3:	cvttsd2si ecx,xmm0
  415cf7:	add    ecx,0x3
  415cfa:	mov    DWORD PTR [rsp+0x9c],ecx
  415d01:	call   0x415080
  415d06:	mov    QWORD PTR [rsp+0x48],rax
  415d0b:	mov    eax,DWORD PTR [rbp+0xc]
  415d0e:	mov    r11d,DWORD PTR [rsp+0x68]
  415d13:	mov    r9,QWORD PTR [rsp+0x60]
  415d18:	sub    eax,0x1
  415d1b:	mov    DWORD PTR [rsp+0x38],eax
  415d1f:	jne    0x4161cd
  415d25:	mov    eax,0xffffffff
  415d2a:	mov    DWORD PTR [rsp+0x60],0x1
  415d32:	mov    DWORD PTR [rsp+0x128],0x0
  415d3d:	mov    DWORD PTR [rsp+0x8c],eax
  415d44:	mov    DWORD PTR [rsp+0x68],eax
  415d48:	jmp    0x415980
  415d4d:	xor    r12d,r12d
  415d50:	xor    edi,edi
  415d52:	mov    ebp,DWORD PTR [rsp+0x128]
  415d59:	mov    rbx,QWORD PTR [rsp+0x48]
  415d5e:	mov    r15d,0x10
  415d64:	neg    ebp
  415d66:	jmp    0x415a04
  415d6b:	nop    DWORD PTR [rax+rax*1+0x0]
  415d70:	mov    eax,DWORD PTR [rsp+0x30]
  415d74:	sub    DWORD PTR [rsp+0x50],eax
  415d78:	mov    DWORD PTR [rsp+0x88],0x0
  415d83:	neg    eax
  415d85:	mov    DWORD PTR [rsp+0x58],eax
  415d89:	jmp    0x4155a9
  415d8e:	xchg   ax,ax
  415d90:	neg    eax
  415d92:	mov    DWORD PTR [rsp+0x40],0x0
  415d9a:	mov    DWORD PTR [rsp+0x50],eax
  415d9e:	jmp    0x41558a
  415da3:	pxor   xmm0,xmm0
  415da7:	cvtsi2sd xmm0,eax
  415dab:	ucomisd xmm0,xmm1
  415daf:	jp     0x415db7
  415db1:	je     0x41551b
  415db7:	sub    DWORD PTR [rsp+0x30],0x1
  415dbc:	jmp    0x41551b
  415dc1:	mov    r10d,DWORD PTR [rsp+0x60]
  415dc6:	test   r10d,r10d
  415dc9:	je     0x415fd0
  415dcf:	lea    edx,[rbx+r13*1]
  415dd3:	test   edx,edx
  415dd5:	jle    0x415de2
  415dd7:	mov    rcx,rdi
  415dda:	call   0x416e80
  415ddf:	mov    rdi,rax
  415de2:	test   ebp,ebp
  415de4:	mov    r13,rdi
  415de7:	jne    0x416485
  415ded:	mov    DWORD PTR [rsp+0x9c],0x1
  415df8:	mov    rbx,QWORD PTR [rsp+0x48]
  415dfd:	mov    QWORD PTR [rsp+0x40],r12
  415e02:	mov    QWORD PTR [rsp+0x50],r15
  415e07:	jmp    0x415ece
  415e0c:	nop    DWORD PTR [rax+0x0]
  415e10:	mov    rcx,r8
  415e13:	call   0x416a80
  415e18:	mov    eax,r12d
  415e1b:	or     eax,DWORD PTR [rsp+0x120]
  415e22:	jne    0x415e3a
  415e24:	mov    ecx,DWORD PTR [rsp+0x38]
  415e28:	test   ecx,ecx
  415e2a:	jne    0x415e3a
  415e2c:	mov    rax,QWORD PTR [rsp+0x50]
  415e31:	test   BYTE PTR [rax],0x1
  415e34:	je     0x4165f5
  415e3a:	test   r14d,r14d
  415e3d:	js     0x416350
  415e43:	or     r14d,DWORD PTR [rsp+0x120]
  415e4b:	jne    0x415e5b
  415e4d:	mov    rax,QWORD PTR [rsp+0x50]
  415e52:	test   BYTE PTR [rax],0x1
  415e55:	je     0x416350
  415e5b:	test   r12d,r12d
  415e5e:	jle    0x415e6b
  415e60:	cmp    DWORD PTR [rsp+0x38],0x2
  415e65:	jne    0x41655f
  415e6b:	add    rbx,0x1
  415e6f:	mov    BYTE PTR [rbx-0x1],bpl
  415e73:	mov    eax,DWORD PTR [rsp+0x68]
  415e77:	cmp    DWORD PTR [rsp+0x9c],eax
  415e7e:	je     0x4164eb
  415e84:	xor    r8d,r8d
  415e87:	mov    rcx,rsi
  415e8a:	mov    edx,0xa
  415e8f:	call   0x416af0
  415e94:	xor    r8d,r8d
  415e97:	cmp    rdi,r13
  415e9a:	mov    rsi,rax
  415e9d:	mov    edx,0xa
  415ea2:	mov    rcx,rdi
  415ea5:	je     0x415f40
  415eab:	call   0x416af0
  415eb0:	mov    rcx,r13
  415eb3:	xor    r8d,r8d
  415eb6:	mov    edx,0xa
  415ebb:	mov    rdi,rax
  415ebe:	call   0x416af0
  415ec3:	mov    r13,rax
  415ec6:	add    DWORD PTR [rsp+0x9c],0x1
  415ece:	mov    r12,QWORD PTR [rsp+0x40]
  415ed3:	mov    rcx,rsi
  415ed6:	mov    rdx,r12
  415ed9:	call   0x415120
  415ede:	mov    rdx,rdi
  415ee1:	mov    rcx,rsi
  415ee4:	mov    r15d,eax
  415ee7:	lea    ebp,[rax+0x30]
  415eea:	call   0x416fa0
  415eef:	mov    rcx,r12
  415ef2:	mov    rdx,r13
  415ef5:	mov    r14d,eax
  415ef8:	call   0x416ff0
  415efd:	mov    r9d,DWORD PTR [rax+0x10]
  415f01:	mov    r8,rax
  415f04:	mov    r12d,0x1
  415f0a:	test   r9d,r9d
  415f0d:	jne    0x415e10
  415f13:	mov    rdx,rax
  415f16:	mov    rcx,rsi
  415f19:	mov    QWORD PTR [rsp+0x58],rax
  415f1e:	call   0x416fa0
  415f23:	mov    r8,QWORD PTR [rsp+0x58]
  415f28:	mov    r12d,eax
  415f2b:	jmp    0x415e10
  415f30:	mov    r12d,DWORD PTR [rsp+0x58]
  415f35:	mov    ebx,DWORD PTR [rsp+0x50]
  415f39:	xor    edi,edi
  415f3b:	jmp    0x415adf
  415f40:	call   0x416af0
  415f45:	mov    rdi,rax
  415f48:	mov    r13,rax
  415f4b:	jmp    0x415ec6
  415f50:	mov    edx,DWORD PTR [rsp+0x58]
  415f54:	mov    rcx,rsi
  415f57:	call   0x416d10
  415f5c:	mov    rsi,rax
  415f5f:	jmp    0x415b5b
  415f64:	mov    DWORD PTR [rsp+0x60],0x0
  415f6c:	jmp    0x415607
  415f71:	mov    rdx,r12
  415f74:	mov    rcx,rsi
  415f77:	call   0x416fa0
  415f7c:	test   eax,eax
  415f7e:	jns    0x415c00
  415f84:	xor    r8d,r8d
  415f87:	mov    rcx,rsi
  415f8a:	mov    edx,0xa
  415f8f:	sub    DWORD PTR [rsp+0x30],0x1
  415f94:	call   0x416af0
  415f99:	mov    rsi,rax
  415f9c:	mov    eax,DWORD PTR [rsp+0x60]
  415fa0:	test   eax,eax
  415fa2:	jne    0x416668
  415fa8:	mov    eax,DWORD PTR [rsp+0x8c]
  415faf:	test   eax,eax
  415fb1:	jg     0x415fc5
  415fb3:	cmp    DWORD PTR [rsp+0x120],0x2
  415fbb:	mov    DWORD PTR [rsp+0x68],eax
  415fbf:	jg     0x415c1c
  415fc5:	mov    eax,DWORD PTR [rsp+0x8c]
  415fcc:	mov    DWORD PTR [rsp+0x68],eax
  415fd0:	mov    DWORD PTR [rsp+0x9c],0x1
  415fdb:	mov    rbx,QWORD PTR [rsp+0x48]
  415fe0:	mov    r13d,DWORD PTR [rsp+0x68]
  415fe5:	jmp    0x41600b
  415fe7:	nop    WORD PTR [rax+rax*1+0x0]
  415ff0:	mov    rcx,rsi
  415ff3:	xor    r8d,r8d
  415ff6:	mov    edx,0xa
  415ffb:	call   0x416af0
  416000:	add    DWORD PTR [rsp+0x9c],0x1
  416008:	mov    rsi,rax
  41600b:	mov    rdx,r12
  41600e:	mov    rcx,rsi
  416011:	add    rbx,0x1
  416015:	call   0x415120
  41601a:	lea    ebp,[rax+0x30]
  41601d:	mov    BYTE PTR [rbx-0x1],bpl
  416021:	cmp    DWORD PTR [rsp+0x9c],r13d
  416029:	jl     0x415ff0
  41602b:	xor    r14d,r14d
  41602e:	mov    eax,DWORD PTR [rsp+0x38]
  416032:	test   eax,eax
  416034:	je     0x4163fc
  41603a:	cmp    eax,0x2
  41603d:	je     0x41642c
  416043:	cmp    DWORD PTR [rsi+0x14],0x1
  416047:	jle    0x4165c3
  41604d:	movzx  edx,BYTE PTR [rbx-0x1]
  416051:	mov    rcx,QWORD PTR [rsp+0x48]
  416056:	jmp    0x416070
  416058:	nop    DWORD PTR [rax+rax*1+0x0]
  416060:	cmp    rax,rcx
  416063:	je     0x41621c
  416069:	movzx  edx,BYTE PTR [rax-0x1]
  41606d:	mov    rbx,rax
  416070:	cmp    dl,0x39
  416073:	lea    rax,[rbx-0x1]
  416077:	je     0x416060
  416079:	add    edx,0x1
  41607c:	mov    r15d,0x20
  416082:	mov    BYTE PTR [rax],dl
  416084:	mov    rcx,r12
  416087:	call   0x416a80
  41608c:	test   rdi,rdi
  41608f:	je     0x41617f
  416095:	cmp    r14,rdi
  416098:	je     0x4160a7
  41609a:	test   r14,r14
  41609d:	je     0x4160a7
  41609f:	mov    rcx,r14
  4160a2:	call   0x416a80
  4160a7:	mov    ebp,DWORD PTR [rsp+0x30]
  4160ab:	add    ebp,0x1
  4160ae:	jmp    0x415a15
  4160b3:	mov    QWORD PTR [rsp+0x40],r9
  4160b8:	mov    rdi,QWORD PTR [rsp+0x48]
  4160bd:	movsd  xmm0,QWORD PTR [rsp+0x40]
  4160c3:	mov    DWORD PTR [rsp+0x9c],0x1
  4160ce:	movapd xmm1,xmm0
  4160d2:	mov    rbx,rdi
  4160d5:	add    rbx,0x1
  4160d9:	divsd  xmm1,xmm2
  4160dd:	cvttsd2si eax,xmm1
  4160e1:	pxor   xmm1,xmm1
  4160e5:	cvtsi2sd xmm1,eax
  4160e9:	lea    edx,[rax+0x30]
  4160ec:	mov    BYTE PTR [rdi],dl
  4160ee:	mulsd  xmm1,xmm2
  4160f2:	subsd  xmm0,xmm1
  4160f6:	ucomisd xmm0,xmm6
  4160fa:	jp     0x4160fe
  4160fc:	je     0x416170
  4160fe:	mov    edx,DWORD PTR [rsp+0x9c]
  416105:	cmp    DWORD PTR [rsp+0x68],edx
  416109:	je     0x4161f7
  41610f:	movsd  xmm3,QWORD PTR [rip+0x8159]        # 0x41e270
  416117:	movapd xmm4,xmm6
  41611b:	mov    ecx,DWORD PTR [rsp+0x68]
  41611f:	jmp    0x416130
  416121:	mov    edx,DWORD PTR [rsp+0x9c]
  416128:	cmp    ecx,edx
  41612a:	je     0x4161f7
  416130:	mulsd  xmm0,xmm3
  416134:	add    edx,0x1
  416137:	add    rbx,0x1
  41613b:	mov    DWORD PTR [rsp+0x9c],edx
  416142:	movapd xmm1,xmm0
  416146:	divsd  xmm1,xmm2
  41614a:	cvttsd2si eax,xmm1
  41614e:	pxor   xmm1,xmm1
  416152:	cvtsi2sd xmm1,eax
  416156:	lea    edx,[rax+0x30]
  416159:	mov    BYTE PTR [rbx-0x1],dl
  41615c:	mulsd  xmm1,xmm2
  416160:	subsd  xmm0,xmm1
  416164:	ucomisd xmm0,xmm6
  416168:	jp     0x416121
  41616a:	ucomisd xmm0,xmm4
  41616e:	jne    0x416121
  416170:	mov    ebp,DWORD PTR [rsp+0x30]
  416174:	add    ebp,0x1
  416177:	xor    r15d,r15d
  41617a:	jmp    0x415830
  41617f:	mov    ebp,DWORD PTR [rsp+0x30]
  416183:	add    ebp,0x1
  416186:	jmp    0x415830
  41618b:	mov    ebx,0x1
  416190:	mov    DWORD PTR [rsp+0x128],0x1
  41619b:	jmp    0x4158ea
  4161a0:	cmp    DWORD PTR [rsp+0x68],0xe
  4161a5:	mov    DWORD PTR [rsp+0x9c],0x1
  4161b0:	mov    ecx,0x1
  4161b5:	setbe  bl
  4161b8:	and    ebx,eax
  4161ba:	jmp    0x415639
  4161bf:	mov    r12d,DWORD PTR [rsp+0x58]
  4161c4:	mov    ebx,DWORD PTR [rsp+0x50]
  4161c8:	jmp    0x415aca
  4161cd:	mov    eax,0xffffffff
  4161d2:	xor    ebx,ebx
  4161d4:	mov    DWORD PTR [rsp+0x60],0x1
  4161dc:	mov    DWORD PTR [rsp+0x8c],eax
  4161e3:	mov    DWORD PTR [rsp+0x68],eax
  4161e7:	mov    DWORD PTR [rsp+0x128],0x0
  4161f2:	jmp    0x415663
  4161f7:	mov    r10d,DWORD PTR [rsp+0x38]
  4161fc:	test   r10d,r10d
  4161ff:	je     0x4164be
  416205:	cmp    DWORD PTR [rsp+0x38],0x1
  41620a:	je     0x4165b1
  416210:	mov    ebp,DWORD PTR [rsp+0x30]
  416214:	add    ebp,0x1
  416217:	jmp    0x415823
  41621c:	mov    rax,QWORD PTR [rsp+0x48]
  416221:	add    DWORD PTR [rsp+0x30],0x1
  416226:	mov    r15d,0x20
  41622c:	mov    BYTE PTR [rax],0x31
  41622f:	jmp    0x416084
  416234:	mov    ebp,0x2
  416239:	xor    r12d,r12d
  41623c:	xor    edi,edi
  41623e:	jmp    0x4159f2
  416243:	mov    r10,QWORD PTR [rip+0x8346]        # 0x41e590
  41624a:	mov    QWORD PTR [rsp+0x38],rax
  41624f:	movsd  xmm3,QWORD PTR [rsp+0x38]
  416255:	mov    DWORD PTR [rsp+0x9c],0x1
  416260:	mov    rbx,QWORD PTR [rsp+0x48]
  416265:	movsd  xmm1,QWORD PTR [rip+0x8003]        # 0x41e270
  41626d:	mulsd  xmm3,QWORD PTR [r10+rdx*8]
  416273:	jmp    0x416283
  416275:	mulsd  xmm0,xmm1
  416279:	add    edx,0x1
  41627c:	mov    DWORD PTR [rsp+0x9c],edx
  416283:	cvttsd2si eax,xmm0
  416287:	test   eax,eax
  416289:	je     0x416297
  41628b:	pxor   xmm2,xmm2
  41628f:	cvtsi2sd xmm2,eax
  416293:	subsd  xmm0,xmm2
  416297:	add    rbx,0x1
  41629b:	add    eax,0x30
  41629e:	mov    BYTE PTR [rbx-0x1],al
  4162a1:	mov    edx,DWORD PTR [rsp+0x9c]
  4162a8:	cmp    edx,r9d
  4162ab:	jne    0x416275
  4162ad:	movsd  xmm1,QWORD PTR [rip+0x7feb]        # 0x41e2a0
  4162b5:	movapd xmm2,xmm3
  4162b9:	addsd  xmm2,xmm1
  4162bd:	ucomisd xmm0,xmm2
  4162c1:	ja     0x416317
  4162c3:	subsd  xmm1,xmm3
  4162c7:	ucomisd xmm1,xmm0
  4162cb:	jbe    0x41596e
  4162d1:	ucomisd xmm0,xmm6
  4162d5:	jp     0x41665d
  4162db:	jne    0x41665d
  4162e1:	xor    r15d,r15d
  4162e4:	jmp    0x4162f7
  4162e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4162f0:	movzx  eax,BYTE PTR [rbx-0x2]
  4162f4:	mov    rbx,rdx
  4162f7:	cmp    al,0x30
  4162f9:	lea    rdx,[rbx-0x1]
  4162fd:	je     0x4162f0
  4162ff:	lea    ebp,[rcx+0x1]
  416302:	jmp    0x415830
  416307:	test   al,0x1
  416309:	mov    ecx,DWORD PTR [rsp+0x30]
  41630d:	movzx  eax,BYTE PTR [rbx-0x1]
  416311:	je     0x41665d
  416317:	mov    r8,QWORD PTR [rsp+0x48]
  41631c:	jmp    0x416330
  41631e:	xchg   ax,ax
  416320:	cmp    rdx,r8
  416323:	je     0x41646c
  416329:	movzx  eax,BYTE PTR [rdx-0x1]
  41632d:	mov    rbx,rdx
  416330:	cmp    al,0x39
  416332:	lea    rdx,[rbx-0x1]
  416336:	je     0x416320
  416338:	mov    QWORD PTR [rsp+0x48],r8
  41633d:	add    eax,0x1
  416340:	mov    BYTE PTR [rdx],al
  416342:	lea    ebp,[rcx+0x1]
  416345:	mov    r15d,0x20
  41634b:	jmp    0x415830
  416350:	mov    edx,DWORD PTR [rsp+0x38]
  416354:	mov    eax,r12d
  416357:	mov    r14d,ebp
  41635a:	mov    r12,QWORD PTR [rsp+0x40]
  41635f:	test   edx,edx
  416361:	je     0x416591
  416367:	cmp    DWORD PTR [rsi+0x14],0x1
  41636b:	jle    0x416587
  416371:	cmp    DWORD PTR [rsp+0x38],0x2
  416376:	jne    0x4163c7
  416378:	jmp    0x4165a6
  41637d:	nop    DWORD PTR [rax]
  416380:	add    rbx,0x1
  416384:	xor    r8d,r8d
  416387:	mov    rcx,r13
  41638a:	mov    BYTE PTR [rbx-0x1],r14b
  41638e:	mov    edx,0xa
  416393:	call   0x416af0
  416398:	cmp    rdi,r13
  41639b:	mov    rcx,rsi
  41639e:	mov    edx,0xa
  4163a3:	cmove  rdi,rax
  4163a7:	xor    r8d,r8d
  4163aa:	mov    rbp,rax
  4163ad:	call   0x416af0
  4163b2:	mov    rdx,r12
  4163b5:	mov    rcx,rax
  4163b8:	mov    rsi,rax
  4163bb:	call   0x415120
  4163c0:	lea    r14d,[rax+0x30]
  4163c4:	mov    r13,rbp
  4163c7:	mov    rdx,r13
  4163ca:	mov    rcx,r12
  4163cd:	call   0x416fa0
  4163d2:	test   eax,eax
  4163d4:	jg     0x416380
  4163d6:	cmp    r14d,0x39
  4163da:	je     0x4165d6
  4163e0:	add    r14d,0x1
  4163e4:	mov    r15d,0x20
  4163ea:	mov    BYTE PTR [rbx],r14b
  4163ed:	mov    r14,rdi
  4163f0:	add    rbx,0x1
  4163f4:	mov    rdi,r13
  4163f7:	jmp    0x416084
  4163fc:	mov    rcx,rsi
  4163ff:	mov    edx,0x1
  416404:	call   0x416e80
  416409:	mov    rdx,r12
  41640c:	mov    rcx,rax
  41640f:	mov    rsi,rax
  416412:	call   0x416fa0
  416417:	cmp    eax,0x0
  41641a:	jg     0x41604d
  416420:	jne    0x41642c
  416422:	and    bpl,0x1
  416426:	jne    0x41604d
  41642c:	cmp    DWORD PTR [rsi+0x14],0x1
  416430:	mov    r15d,0x10
  416436:	jg     0x416443
  416438:	jmp    0x4166cd
  41643d:	nop    DWORD PTR [rax]
  416440:	mov    rbx,rax
  416443:	cmp    BYTE PTR [rbx-0x1],0x30
  416447:	lea    rax,[rbx-0x1]
  41644b:	je     0x416440
  41644d:	jmp    0x416084
  416452:	mov    ebx,DWORD PTR [rsp+0x50]
  416456:	mov    DWORD PTR [rsp+0x9c],0x0
  416461:	xor    eax,eax
  416463:	sub    ebx,DWORD PTR [rsp+0x68]
  416467:	jmp    0x415aca
  41646c:	mov    QWORD PTR [rsp+0x48],r8
  416471:	add    ecx,0x1
  416474:	mov    BYTE PTR [r8],0x30
  416478:	mov    rdx,r8
  41647b:	mov    eax,0x31
  416480:	jmp    0x416340
  416485:	mov    ecx,DWORD PTR [rdi+0x8]
  416488:	call   0x416970
  41648d:	lea    rcx,[rax+0x10]
  416491:	mov    rbx,rax
  416494:	movsxd rax,DWORD PTR [rdi+0x14]
  416498:	lea    rdx,[rdi+0x10]
  41649c:	lea    r8,[rax*4+0x8]
  4164a4:	call   0x417820
  4164a9:	mov    edx,0x1
  4164ae:	mov    rcx,rbx
  4164b1:	call   0x416e80
  4164b6:	mov    r13,rax
  4164b9:	jmp    0x415ded
  4164be:	addsd  xmm0,xmm0
  4164c2:	ucomisd xmm0,xmm2
  4164c6:	ja     0x4165b1
  4164cc:	ucomisd xmm2,xmm0
  4164d0:	jp     0x4164d8
  4164d2:	je     0x416307
  4164d8:	movzx  eax,BYTE PTR [rbx-0x1]
  4164dc:	mov    ecx,DWORD PTR [rsp+0x30]
  4164e0:	mov    r15d,0x10
  4164e6:	jmp    0x4162f7
  4164eb:	mov    r14,rdi
  4164ee:	mov    r12,QWORD PTR [rsp+0x40]
  4164f3:	mov    rdi,r13
  4164f6:	jmp    0x41602e
  4164fb:	mov    eax,DWORD PTR [rsp+0x68]
  4164ff:	test   eax,eax
  416501:	je     0x41590a
  416507:	mov    r9d,DWORD PTR [rsp+0x8c]
  41650f:	test   r9d,r9d
  416512:	jle    0x41596e
  416518:	movsd  xmm0,QWORD PTR [rip+0x7d50]        # 0x41e270
  416520:	mov    ecx,0xffffffff
  416525:	movsd  xmm1,QWORD PTR [rip+0x7d4b]        # 0x41e278
  41652d:	mulsd  xmm0,xmm4
  416531:	mulsd  xmm1,xmm0
  416535:	addsd  xmm1,QWORD PTR [rip+0x7d43]        # 0x41e280
  41653d:	movq   rdx,xmm1
  416542:	movq   rax,xmm1
  416547:	shr    rdx,0x20
  41654b:	mov    eax,eax
  41654d:	sub    edx,0x3400000
  416553:	shl    rdx,0x20
  416557:	or     rax,rdx
  41655a:	jmp    0x415712
  41655f:	cmp    ebp,0x39
  416562:	mov    r12,QWORD PTR [rsp+0x40]
  416567:	mov    rax,rbx
  41656a:	je     0x4165d9
  41656c:	add    ebp,0x1
  41656f:	mov    r14,rdi
  416572:	add    rbx,0x1
  416576:	mov    BYTE PTR [rax],bpl
  416579:	mov    rdi,r13
  41657c:	mov    r15d,0x20
  416582:	jmp    0x416084
  416587:	cmp    DWORD PTR [rsi+0x18],0x0
  41658b:	jne    0x416371
  416591:	test   eax,eax
  416593:	jg     0x416629
  416599:	xor    r15d,r15d
  41659c:	cmp    DWORD PTR [rsi+0x14],0x1
  4165a0:	jle    0x4166a8
  4165a6:	mov    r15d,0x10
  4165ac:	jmp    0x4163ea
  4165b1:	movzx  eax,BYTE PTR [rbx-0x1]
  4165b5:	mov    ecx,DWORD PTR [rsp+0x30]
  4165b9:	mov    r8,QWORD PTR [rsp+0x48]
  4165be:	jmp    0x416330
  4165c3:	mov    eax,DWORD PTR [rsi+0x18]
  4165c6:	test   eax,eax
  4165c8:	jne    0x41604d
  4165ce:	xor    r15d,r15d
  4165d1:	jmp    0x416443
  4165d6:	mov    rax,rbx
  4165d9:	mov    r14,rdi
  4165dc:	add    rbx,0x1
  4165e0:	mov    rdi,r13
  4165e3:	mov    BYTE PTR [rax],0x39
  4165e6:	mov    edx,0x39
  4165eb:	mov    rcx,QWORD PTR [rsp+0x48]
  4165f0:	jmp    0x416070
  4165f5:	cmp    ebp,0x39
  4165f8:	mov    r12,QWORD PTR [rsp+0x40]
  4165fd:	mov    rax,rbx
  416600:	je     0x4165d6
  416602:	test   r14d,r14d
  416605:	jle    0x4166e0
  41660b:	mov    ebp,r15d
  41660e:	mov    r15d,0x20
  416614:	add    ebp,0x31
  416617:	mov    r14,rdi
  41661a:	add    rbx,0x1
  41661e:	mov    BYTE PTR [rax],bpl
  416621:	mov    rdi,r13
  416624:	jmp    0x416084
  416629:	mov    rcx,rsi
  41662c:	mov    edx,0x1
  416631:	call   0x416e80
  416636:	mov    rdx,r12
  416639:	mov    rcx,rax
  41663c:	mov    rsi,rax
  41663f:	call   0x416fa0
  416644:	cmp    eax,0x0
  416647:	jle    0x4166ba
  416649:	cmp    ebp,0x39
  41664c:	je     0x4165d6
  41664e:	lea    r14d,[rbp+0x1]
  416652:	mov    r15d,0x20
  416658:	jmp    0x41659c
  41665d:	mov    r15d,0x10
  416663:	jmp    0x4162f7
  416668:	xor    r8d,r8d
  41666b:	mov    rcx,rdi
  41666e:	mov    edx,0xa
  416673:	call   0x416af0
  416678:	mov    rdi,rax
  41667b:	mov    eax,DWORD PTR [rsp+0x8c]
  416682:	test   eax,eax
  416684:	jg     0x416698
  416686:	cmp    DWORD PTR [rsp+0x120],0x2
  41668e:	mov    DWORD PTR [rsp+0x68],eax
  416692:	jg     0x415c1c
  416698:	mov    eax,DWORD PTR [rsp+0x8c]
  41669f:	mov    DWORD PTR [rsp+0x68],eax
  4166a3:	jmp    0x415dcf
  4166a8:	cmp    DWORD PTR [rsi+0x18],0x0
  4166ac:	mov    eax,0x10
  4166b1:	cmovne r15d,eax
  4166b5:	jmp    0x4163ea
  4166ba:	jne    0x4166c2
  4166bc:	test   bpl,0x1
  4166c0:	jne    0x416649
  4166c2:	mov    r15d,0x20
  4166c8:	jmp    0x41659c
  4166cd:	cmp    DWORD PTR [rsi+0x18],0x1
  4166d1:	sbb    r15d,r15d
  4166d4:	not    r15d
  4166d7:	and    r15d,0x10
  4166db:	jmp    0x416443
  4166e0:	cmp    DWORD PTR [rsi+0x14],0x1
  4166e4:	mov    r15d,0x10
  4166ea:	jg     0x416617
  4166f0:	cmp    DWORD PTR [rsi+0x18],0x1
  4166f4:	sbb    r15d,r15d
  4166f7:	not    r15d
  4166fa:	and    r15d,0x10
  4166fe:	jmp    0x416617
  416703:	xor    eax,eax
  416705:	jmp    0x4153e7
  41670a:	nop
  41670b:	nop
  41670c:	nop
  41670d:	nop
  41670e:	nop
  41670f:	nop
  416710:	push   rbp
  416711:	push   rdi
  416712:	push   rsi
  416713:	push   rbx
  416714:	mov    rsi,rcx
  416717:	lea    r10,[rcx+0x18]
  41671b:	movsxd rcx,DWORD PTR [rcx+0x14]
  41671f:	mov    eax,edx
  416721:	sar    eax,0x5
  416724:	cmp    eax,ecx
  416726:	jge    0x4167b0
  41672c:	cdqe   
  41672e:	and    edx,0x1f
  416731:	lea    rbx,[r10+rcx*4]
  416735:	lea    rdi,[r10+rax*4]
  416739:	je     0x4167c3
  41673f:	mov    r9d,DWORD PTR [rdi]
  416742:	lea    r8,[rdi+0x4]
  416746:	mov    ebp,0x20
  41674b:	mov    ecx,edx
  41674d:	sub    ebp,edx
  41674f:	shr    r9d,cl
  416752:	cmp    rbx,r8
  416755:	jbe    0x416808
  41675b:	mov    r11,r10
  41675e:	xchg   ax,ax
  416760:	mov    eax,DWORD PTR [r8]
  416763:	mov    ecx,ebp
  416765:	add    r11,0x4
  416769:	add    r8,0x4
  41676d:	shl    eax,cl
  41676f:	mov    ecx,edx
  416771:	or     eax,r9d
  416774:	mov    DWORD PTR [r11-0x4],eax
  416778:	mov    r9d,DWORD PTR [r8-0x4]
  41677c:	shr    r9d,cl
  41677f:	cmp    rbx,r8
  416782:	ja     0x416760
  416784:	sub    rbx,rdi
  416787:	lea    rax,[rbx-0x5]
  41678b:	shr    rax,0x2
  41678f:	lea    rax,[r10+rax*4+0x4]
  416794:	test   r9d,r9d
  416797:	mov    DWORD PTR [rax],r9d
  41679a:	je     0x4167a0
  41679c:	add    rax,0x4
  4167a0:	sub    rax,r10
  4167a3:	shr    rax,0x2
  4167a7:	jmp    0x4167fc
  4167a9:	nop    DWORD PTR [rax+0x0]
  4167b0:	mov    DWORD PTR [rsi+0x14],0x0
  4167b7:	mov    DWORD PTR [rsi+0x18],0x0
  4167be:	pop    rbx
  4167bf:	pop    rsi
  4167c0:	pop    rdi
  4167c1:	pop    rbp
  4167c2:	ret    
  4167c3:	cmp    rbx,rdi
  4167c6:	mov    rdx,r10
  4167c9:	mov    rax,rdi
  4167cc:	jbe    0x4167b0
  4167ce:	xchg   ax,ax
  4167d0:	add    rax,0x4
  4167d4:	mov    r8d,DWORD PTR [rax-0x4]
  4167d8:	add    rdx,0x4
  4167dc:	cmp    rbx,rax
  4167df:	mov    DWORD PTR [rdx-0x4],r8d
  4167e3:	ja     0x4167d0
  4167e5:	not    rdi
  4167e8:	lea    rax,[rdi+rbx*1]
  4167ec:	shr    rax,0x2
  4167f0:	lea    rax,[rax*4+0x4]
  4167f8:	shr    rax,0x2
  4167fc:	test   eax,eax
  4167fe:	mov    DWORD PTR [rsi+0x14],eax
  416801:	je     0x4167b7
  416803:	pop    rbx
  416804:	pop    rsi
  416805:	pop    rdi
  416806:	pop    rbp
  416807:	ret    
  416808:	mov    rax,r10
  41680b:	jmp    0x416794
  41680d:	nop    DWORD PTR [rax]
  416810:	movsxd rax,DWORD PTR [rcx+0x14]
  416814:	lea    rdx,[rcx+0x18]
  416818:	lea    r8,[rdx+rax*4]
  41681c:	cmp    rdx,r8
  41681f:	jae    0x41684b
  416821:	mov    ecx,DWORD PTR [rcx+0x18]
  416824:	xor    eax,eax
  416826:	test   ecx,ecx
  416828:	je     0x416836
  41682a:	jmp    0x416844
  41682c:	nop    DWORD PTR [rax+0x0]
  416830:	mov    ecx,DWORD PTR [rdx]
  416832:	test   ecx,ecx
  416834:	jne    0x416844
  416836:	add    rdx,0x4
  41683a:	add    eax,0x20
  41683d:	cmp    r8,rdx
  416840:	ja     0x416830
  416842:	repz ret 
  416844:	tzcnt  ecx,ecx
  416848:	add    eax,ecx
  41684a:	ret    
  41684b:	xor    eax,eax
  41684d:	ret    
  41684e:	nop
  41684f:	nop
  416850:	push   rsi
  416851:	push   rbx
  416852:	sub    rsp,0x28
  416856:	mov    eax,DWORD PTR [rip+0xbdf4]        # 0x422650
  41685c:	movsxd rsi,ecx
  41685f:	cmp    eax,0x2
  416862:	je     0x4168cd
  416864:	test   eax,eax
  416866:	je     0x416892
  416868:	cmp    eax,0x1
  41686b:	jne    0x41688b
  41686d:	mov    rbx,QWORD PTR [rip+0xccf4]        # 0x423568
  416874:	mov    ecx,0x1
  416879:	call   rbx
  41687b:	mov    eax,DWORD PTR [rip+0xbdcf]        # 0x422650
  416881:	cmp    eax,0x1
  416884:	je     0x416874
  416886:	cmp    eax,0x2
  416889:	je     0x4168cd
  41688b:	add    rsp,0x28
  41688f:	pop    rbx
  416890:	pop    rsi
  416891:	ret    
  416892:	mov    al,0x1
  416894:	xchg   DWORD PTR [rip+0xbdb6],eax        # 0x422650
  41689a:	test   eax,eax
  41689c:	jne    0x4168f0
  41689e:	lea    rcx,[rip+0xbddb]        # 0x422680
  4168a5:	mov    rbx,QWORD PTR [rip+0xcc6c]        # 0x423518
  4168ac:	call   rbx
  4168ae:	lea    rcx,[rip+0xbdf3]        # 0x4226a8
  4168b5:	call   rbx
  4168b7:	lea    rcx,[rip+0x62]        # 0x416920
  4168be:	call   0x410e30
  4168c3:	mov    DWORD PTR [rip+0xbd83],0x2        # 0x422650
  4168cd:	lea    rdx,[rsi+rsi*4]
  4168d1:	lea    rax,[rip+0xbda8]        # 0x422680
  4168d8:	lea    rcx,[rax+rdx*8]
  4168dc:	mov    rax,QWORD PTR [rip+0xcbd5]        # 0x4234b8
  4168e3:	add    rsp,0x28
  4168e7:	pop    rbx
  4168e8:	pop    rsi
  4168e9:	rex.W jmp rax
  4168ec:	nop    DWORD PTR [rax+0x0]
  4168f0:	cmp    eax,0x2
  4168f3:	je     0x416910
  4168f5:	mov    eax,DWORD PTR [rip+0xbd55]        # 0x422650
  4168fb:	cmp    eax,0x1
  4168fe:	je     0x41686d
  416904:	jmp    0x416886
  416906:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416910:	mov    DWORD PTR [rip+0xbd36],0x2        # 0x422650
  41691a:	jmp    0x4168cd
  41691c:	nop    DWORD PTR [rax+0x0]
  416920:	push   rbx
  416921:	sub    rsp,0x20
  416925:	mov    eax,0x3
  41692a:	xchg   DWORD PTR [rip+0xbd20],eax        # 0x422650
  416930:	cmp    eax,0x2
  416933:	je     0x416940
  416935:	add    rsp,0x20
  416939:	pop    rbx
  41693a:	ret    
  41693b:	nop    DWORD PTR [rax+rax*1+0x0]
  416940:	mov    rbx,QWORD PTR [rip+0xcb69]        # 0x4234b0
  416947:	lea    rcx,[rip+0xbd32]        # 0x422680
  41694e:	call   rbx
  416950:	lea    rcx,[rip+0xbd51]        # 0x4226a8
  416957:	mov    rax,rbx
  41695a:	add    rsp,0x20
  41695e:	pop    rbx
  41695f:	rex.W jmp rax
  416962:	nop    DWORD PTR [rax+0x0]
  416966:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416970:	push   rdi
  416971:	push   rsi
  416972:	push   rbx
  416973:	sub    rsp,0x20
  416977:	mov    ebx,ecx
  416979:	xor    ecx,ecx
  41697b:	call   0x416850
  416980:	cmp    ebx,0x9
  416983:	jg     0x4169c0
  416985:	lea    rdx,[rip+0xbc74]        # 0x422600
  41698c:	movsxd rcx,ebx
  41698f:	mov    rdi,QWORD PTR [rdx+rcx*8]
  416993:	test   rdi,rdi
  416996:	je     0x416a20
  41699c:	cmp    DWORD PTR [rip+0xbcad],0x2        # 0x422650
  4169a3:	mov    r8,QWORD PTR [rdi]
  4169a6:	mov    QWORD PTR [rdx+rcx*8],r8
  4169aa:	jne    0x416a06
  4169ac:	lea    rcx,[rip+0xbccd]        # 0x422680
  4169b3:	call   QWORD PTR [rip+0xcb6f]        # 0x423528
  4169b9:	jmp    0x416a06
  4169bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4169c0:	mov    eax,0x1
  4169c5:	mov    ecx,ebx
  4169c7:	shl    eax,cl
  4169c9:	mov    esi,eax
  4169cb:	lea    eax,[rax-0x1]
  4169ce:	cdqe   
  4169d0:	lea    rdx,[rax*4+0x27]
  4169d8:	shr    rdx,0x3
  4169dc:	mov    edx,edx
  4169de:	lea    rcx,[rdx*8+0x0]
  4169e6:	call   0x417828
  4169eb:	test   rax,rax
  4169ee:	mov    rdi,rax
  4169f1:	je     0x416a7a
  4169f7:	cmp    DWORD PTR [rip+0xbc52],0x2        # 0x422650
  4169fe:	mov    DWORD PTR [rdi+0x8],ebx
  416a01:	mov    DWORD PTR [rdi+0xc],esi
  416a04:	je     0x4169ac
  416a06:	mov    DWORD PTR [rdi+0x14],0x0
  416a0d:	mov    DWORD PTR [rdi+0x10],0x0
  416a14:	mov    rax,rdi
  416a17:	add    rsp,0x20
  416a1b:	pop    rbx
  416a1c:	pop    rsi
  416a1d:	pop    rdi
  416a1e:	ret    
  416a1f:	nop
  416a20:	mov    ecx,ebx
  416a22:	mov    eax,0x1
  416a27:	mov    rdi,QWORD PTR [rip+0x2282]        # 0x418cb0
  416a2e:	shl    eax,cl
  416a30:	lea    rcx,[rip+0xb2c9]        # 0x421d00
  416a37:	lea    edx,[rax-0x1]
  416a3a:	mov    esi,eax
  416a3c:	mov    rax,rdi
  416a3f:	movsxd rdx,edx
  416a42:	sub    rax,rcx
  416a45:	lea    rdx,[rdx*4+0x27]
  416a4d:	mov    rcx,rax
  416a50:	sar    rcx,0x3
  416a54:	shr    rdx,0x3
  416a58:	mov    edx,edx
  416a5a:	add    rcx,rdx
  416a5d:	cmp    rcx,0x120
  416a64:	ja     0x4169de
  416a6a:	lea    rdx,[rdi+rdx*8]
  416a6e:	mov    QWORD PTR [rip+0x223b],rdx        # 0x418cb0
  416a75:	jmp    0x4169f7
  416a7a:	xor    eax,eax
  416a7c:	jmp    0x416a17
  416a7e:	xchg   ax,ax
  416a80:	push   rbx
  416a81:	sub    rsp,0x20
  416a85:	test   rcx,rcx
  416a88:	je     0x416ab9
  416a8a:	cmp    DWORD PTR [rcx+0x8],0x9
  416a8e:	jg     0x416ac0
  416a90:	mov    rbx,rcx
  416a93:	xor    ecx,ecx
  416a95:	call   0x416850
  416a9a:	movsxd rdx,DWORD PTR [rbx+0x8]
  416a9e:	lea    rax,[rip+0xbb5b]        # 0x422600
  416aa5:	cmp    DWORD PTR [rip+0xbba4],0x2        # 0x422650
  416aac:	mov    rcx,QWORD PTR [rax+rdx*8]
  416ab0:	mov    QWORD PTR [rax+rdx*8],rbx
  416ab4:	mov    QWORD PTR [rbx],rcx
  416ab7:	je     0x416ad0
  416ab9:	add    rsp,0x20
  416abd:	pop    rbx
  416abe:	ret    
  416abf:	nop
  416ac0:	add    rsp,0x20
  416ac4:	pop    rbx
  416ac5:	jmp    0x417860
  416aca:	nop    WORD PTR [rax+rax*1+0x0]
  416ad0:	mov    rax,QWORD PTR [rip+0xca51]        # 0x423528
  416ad7:	lea    rcx,[rip+0xbba2]        # 0x422680
  416ade:	add    rsp,0x20
  416ae2:	pop    rbx
  416ae3:	rex.W jmp rax
  416ae6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416af0:	push   rbp
  416af1:	push   rdi
  416af2:	push   rsi
  416af3:	push   rbx
  416af4:	sub    rsp,0x28
  416af8:	mov    esi,DWORD PTR [rcx+0x14]
  416afb:	xor    r9d,r9d
  416afe:	lea    r10,[rcx+0x18]
  416b02:	mov    rdi,rcx
  416b05:	movsxd rbx,r8d
  416b08:	movsxd rdx,edx
  416b0b:	nop    DWORD PTR [rax+rax*1+0x0]
  416b10:	mov    eax,DWORD PTR [r10+r9*4]
  416b14:	imul   rax,rdx
  416b18:	add    rax,rbx
  416b1b:	mov    rbx,rax
  416b1e:	mov    DWORD PTR [r10+r9*4],eax
  416b22:	add    r9,0x1
  416b26:	shr    rbx,0x20
  416b2a:	cmp    esi,r9d
  416b2d:	jg     0x416b10
  416b2f:	test   rbx,rbx
  416b32:	mov    rax,rdi
  416b35:	je     0x416b4c
  416b37:	cmp    esi,DWORD PTR [rdi+0xc]
  416b3a:	jge    0x416b55
  416b3c:	movsxd rax,esi
  416b3f:	add    esi,0x1
  416b42:	mov    DWORD PTR [rdi+rax*4+0x18],ebx
  416b46:	mov    DWORD PTR [rdi+0x14],esi
  416b49:	mov    rax,rdi
  416b4c:	add    rsp,0x28
  416b50:	pop    rbx
  416b51:	pop    rsi
  416b52:	pop    rdi
  416b53:	pop    rbp
  416b54:	ret    
  416b55:	mov    eax,DWORD PTR [rdi+0x8]
  416b58:	lea    ecx,[rax+0x1]
  416b5b:	call   0x416970
  416b60:	test   rax,rax
  416b63:	mov    rbp,rax
  416b66:	je     0x416b9e
  416b68:	lea    rcx,[rax+0x10]
  416b6c:	movsxd rax,DWORD PTR [rdi+0x14]
  416b70:	lea    rdx,[rdi+0x10]
  416b74:	lea    r8,[rax*4+0x8]
  416b7c:	call   0x417820
  416b81:	mov    rcx,rdi
  416b84:	mov    rdi,rbp
  416b87:	call   0x416a80
  416b8c:	movsxd rax,esi
  416b8f:	add    esi,0x1
  416b92:	mov    DWORD PTR [rdi+rax*4+0x18],ebx
  416b96:	mov    DWORD PTR [rdi+0x14],esi
  416b99:	mov    rax,rdi
  416b9c:	jmp    0x416b4c
  416b9e:	xor    eax,eax
  416ba0:	jmp    0x416b4c
  416ba2:	nop    DWORD PTR [rax+0x0]
  416ba6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416bb0:	push   rbx
  416bb1:	sub    rsp,0x20
  416bb5:	mov    ebx,ecx
  416bb7:	mov    ecx,0x1
  416bbc:	call   0x416970
  416bc1:	test   rax,rax
  416bc4:	je     0x416bd0
  416bc6:	mov    DWORD PTR [rax+0x18],ebx
  416bc9:	mov    DWORD PTR [rax+0x14],0x1
  416bd0:	add    rsp,0x20
  416bd4:	pop    rbx
  416bd5:	ret    
  416bd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416be0:	push   r14
  416be2:	push   r13
  416be4:	push   r12
  416be6:	push   rbp
  416be7:	push   rdi
  416be8:	push   rsi
  416be9:	push   rbx
  416bea:	sub    rsp,0x20
  416bee:	movsxd r13,DWORD PTR [rcx+0x14]
  416bf2:	movsxd rbx,DWORD PTR [rdx+0x14]
  416bf6:	mov    r12,rcx
  416bf9:	mov    r14,rdx
  416bfc:	cmp    r13d,ebx
  416bff:	jl     0x416d01
  416c05:	mov    eax,ebx
  416c07:	movsxd rbx,r13d
  416c0a:	movsxd r13,eax
  416c0d:	xor    eax,eax
  416c0f:	lea    esi,[rbx+r13*1]
  416c13:	cmp    esi,DWORD PTR [r12+0xc]
  416c18:	setg   al
  416c1b:	add    eax,DWORD PTR [r12+0x8]
  416c20:	mov    ecx,eax
  416c22:	call   0x416970
  416c27:	test   rax,rax
  416c2a:	je     0x416d0c
  416c30:	lea    rdi,[rax+0x18]
  416c34:	movsxd rdx,esi
  416c37:	lea    rbp,[rdi+rdx*4]
  416c3b:	mov    r8,rdi
  416c3e:	cmp    rdi,rbp
  416c41:	jae    0x416c53
  416c43:	mov    DWORD PTR [r8],0x0
  416c4a:	add    r8,0x4
  416c4e:	cmp    rbp,r8
  416c51:	ja     0x416c43
  416c53:	lea    rdx,[r14+0x18]
  416c57:	add    r12,0x18
  416c5b:	lea    rbx,[r12+rbx*4]
  416c5f:	lea    r13,[rdx+r13*4]
  416c63:	cmp    rdx,r13
  416c66:	jae    0x416cc9
  416c68:	nop    DWORD PTR [rax+rax*1+0x0]
  416c70:	add    rdx,0x4
  416c74:	mov    r11d,DWORD PTR [rdx-0x4]
  416c78:	test   r11d,r11d
  416c7b:	je     0x416cc0
  416c7d:	mov    r9,rdi
  416c80:	mov    r8,r12
  416c83:	xor    r10d,r10d
  416c86:	jmp    0x416c93
  416c88:	nop    DWORD PTR [rax+rax*1+0x0]
  416c90:	mov    r9,r14
  416c93:	add    r8,0x4
  416c97:	mov    ecx,DWORD PTR [r8-0x4]
  416c9b:	mov    r14d,DWORD PTR [r9]
  416c9e:	imul   rcx,r11
  416ca2:	add    rcx,r14
  416ca5:	lea    r14,[r9+0x4]
  416ca9:	add    rcx,r10
  416cac:	mov    r10,rcx
  416caf:	mov    DWORD PTR [r14-0x4],ecx
  416cb3:	shr    r10,0x20
  416cb7:	cmp    rbx,r8
  416cba:	ja     0x416c90
  416cbc:	mov    DWORD PTR [r9+0x4],r10d
  416cc0:	add    rdi,0x4
  416cc4:	cmp    r13,rdx
  416cc7:	ja     0x416c70
  416cc9:	test   esi,esi
  416ccb:	jle    0x416cef
  416ccd:	mov    r8d,DWORD PTR [rbp-0x4]
  416cd1:	lea    rdx,[rbp-0x4]
  416cd5:	test   r8d,r8d
  416cd8:	je     0x416cea
  416cda:	jmp    0x416cef
  416cdc:	nop    DWORD PTR [rax+0x0]
  416ce0:	sub    rdx,0x4
  416ce4:	mov    ecx,DWORD PTR [rdx]
  416ce6:	test   ecx,ecx
  416ce8:	jne    0x416cef
  416cea:	sub    esi,0x1
  416ced:	jne    0x416ce0
  416cef:	mov    DWORD PTR [rax+0x14],esi
  416cf2:	add    rsp,0x20
  416cf6:	pop    rbx
  416cf7:	pop    rsi
  416cf8:	pop    rdi
  416cf9:	pop    rbp
  416cfa:	pop    r12
  416cfc:	pop    r13
  416cfe:	pop    r14
  416d00:	ret    
  416d01:	mov    r12,rdx
  416d04:	mov    r14,rcx
  416d07:	jmp    0x416c0d
  416d0c:	xor    eax,eax
  416d0e:	jmp    0x416cf2
  416d10:	push   rbp
  416d11:	push   rdi
  416d12:	push   rsi
  416d13:	push   rbx
  416d14:	sub    rsp,0x28
  416d18:	mov    eax,edx
  416d1a:	mov    rbp,rcx
  416d1d:	mov    ebx,edx
  416d1f:	and    eax,0x3
  416d22:	jne    0x416db0
  416d28:	sar    ebx,0x2
  416d2b:	mov    rax,rbp
  416d2e:	test   ebx,ebx
  416d30:	je     0x416d7c
  416d32:	mov    rdi,QWORD PTR [rip+0xaf87]        # 0x421cc0
  416d39:	test   rdi,rdi
  416d3c:	jne    0x416d52
  416d3e:	jmp    0x416dfd
  416d43:	sar    ebx,1
  416d45:	je     0x416d79
  416d47:	mov    rsi,QWORD PTR [rdi]
  416d4a:	test   rsi,rsi
  416d4d:	je     0x416d85
  416d4f:	mov    rdi,rsi
  416d52:	test   bl,0x1
  416d55:	je     0x416d43
  416d57:	mov    rdx,rdi
  416d5a:	mov    rcx,rbp
  416d5d:	call   0x416be0
  416d62:	test   rax,rax
  416d65:	mov    rsi,rax
  416d68:	je     0x416dd3
  416d6a:	mov    rcx,rbp
  416d6d:	mov    rbp,rsi
  416d70:	call   0x416a80
  416d75:	sar    ebx,1
  416d77:	jne    0x416d47
  416d79:	mov    rax,rbp
  416d7c:	add    rsp,0x28
  416d80:	pop    rbx
  416d81:	pop    rsi
  416d82:	pop    rdi
  416d83:	pop    rbp
  416d84:	ret    
  416d85:	mov    ecx,0x1
  416d8a:	call   0x416850
  416d8f:	mov    rsi,QWORD PTR [rdi]
  416d92:	test   rsi,rsi
  416d95:	je     0x416dde
  416d97:	cmp    DWORD PTR [rip+0xb8b2],0x2        # 0x422650
  416d9e:	jne    0x416d4f
  416da0:	lea    rcx,[rip+0xb901]        # 0x4226a8
  416da7:	call   QWORD PTR [rip+0xc77b]        # 0x423528
  416dad:	jmp    0x416d4f
  416daf:	nop
  416db0:	sub    eax,0x1
  416db3:	lea    rdx,[rip+0x7506]        # 0x41e2c0
  416dba:	xor    r8d,r8d
  416dbd:	cdqe   
  416dbf:	mov    edx,DWORD PTR [rdx+rax*4]
  416dc2:	call   0x416af0
  416dc7:	test   rax,rax
  416dca:	mov    rbp,rax
  416dcd:	jne    0x416d28
  416dd3:	xor    eax,eax
  416dd5:	add    rsp,0x28
  416dd9:	pop    rbx
  416dda:	pop    rsi
  416ddb:	pop    rdi
  416ddc:	pop    rbp
  416ddd:	ret    
  416dde:	mov    rdx,rdi
  416de1:	mov    rcx,rdi
  416de4:	call   0x416be0
  416de9:	test   rax,rax
  416dec:	mov    rsi,rax
  416def:	mov    QWORD PTR [rdi],rax
  416df2:	je     0x416dd3
  416df4:	mov    QWORD PTR [rax],0x0
  416dfb:	jmp    0x416d97
  416dfd:	mov    ecx,0x1
  416e02:	call   0x416850
  416e07:	mov    rdi,QWORD PTR [rip+0xaeb2]        # 0x421cc0
  416e0e:	test   rdi,rdi
  416e11:	je     0x416e32
  416e13:	cmp    DWORD PTR [rip+0xb836],0x2        # 0x422650
  416e1a:	jne    0x416d52
  416e20:	lea    rcx,[rip+0xb881]        # 0x4226a8
  416e27:	call   QWORD PTR [rip+0xc6fb]        # 0x423528
  416e2d:	jmp    0x416d52
  416e32:	mov    ecx,0x1
  416e37:	call   0x416970
  416e3c:	test   rax,rax
  416e3f:	mov    rdi,rax
  416e42:	je     0x416e62
  416e44:	mov    DWORD PTR [rax+0x18],0x271
  416e4b:	mov    DWORD PTR [rax+0x14],0x1
  416e52:	mov    QWORD PTR [rip+0xae67],rax        # 0x421cc0
  416e59:	mov    QWORD PTR [rax],0x0
  416e60:	jmp    0x416e13
  416e62:	mov    QWORD PTR [rip+0xae53],0x0        # 0x421cc0
  416e6d:	xor    eax,eax
  416e6f:	jmp    0x416dd5
  416e74:	xchg   ax,ax
  416e76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416e80:	push   r13
  416e82:	push   r12
  416e84:	push   rbp
  416e85:	push   rdi
  416e86:	push   rsi
  416e87:	push   rbx
  416e88:	sub    rsp,0x28
  416e8c:	mov    rdi,rcx
  416e8f:	mov    ebp,edx
  416e91:	mov    esi,edx
  416e93:	mov    r12d,DWORD PTR [rdi+0x14]
  416e97:	sar    ebp,0x5
  416e9a:	mov    eax,DWORD PTR [rdi+0xc]
  416e9d:	mov    ecx,DWORD PTR [rcx+0x8]
  416ea0:	add    r12d,ebp
  416ea3:	lea    ebx,[r12+0x1]
  416ea8:	cmp    ebx,eax
  416eaa:	jle    0x416eb9
  416eac:	nop    DWORD PTR [rax+0x0]
  416eb0:	add    eax,eax
  416eb2:	add    ecx,0x1
  416eb5:	cmp    ebx,eax
  416eb7:	jg     0x416eb0
  416eb9:	call   0x416970
  416ebe:	test   rax,rax
  416ec1:	mov    r13,rax
  416ec4:	je     0x416f8f
  416eca:	test   ebp,ebp
  416ecc:	lea    r8,[rax+0x18]
  416ed0:	jle    0x416f87
  416ed6:	lea    eax,[rbp-0x1]
  416ed9:	lea    r9,[r8+rax*4+0x4]
  416ede:	xchg   ax,ax
  416ee0:	add    r8,0x4
  416ee4:	mov    DWORD PTR [r8-0x4],0x0
  416eec:	cmp    r8,r9
  416eef:	jne    0x416ee0
  416ef1:	movsxd rax,DWORD PTR [rdi+0x14]
  416ef5:	lea    r8,[rdi+0x18]
  416ef9:	mov    edx,esi
  416efb:	and    edx,0x1f
  416efe:	lea    rbp,[r8+rax*4]
  416f02:	je     0x416f70
  416f04:	mov    eax,0x20
  416f09:	xor    r11d,r11d
  416f0c:	sub    eax,edx
  416f0e:	jmp    0x416f13
  416f10:	mov    r9,rsi
  416f13:	mov    r10d,DWORD PTR [r8]
  416f16:	mov    ecx,edx
  416f18:	lea    rsi,[r9+0x4]
  416f1c:	add    r8,0x4
  416f20:	shl    r10d,cl
  416f23:	mov    ecx,eax
  416f25:	or     r10d,r11d
  416f28:	mov    DWORD PTR [rsi-0x4],r10d
  416f2c:	mov    r11d,DWORD PTR [r8-0x4]
  416f30:	shr    r11d,cl
  416f33:	cmp    rbp,r8
  416f36:	ja     0x416f10
  416f38:	add    r12d,0x2
  416f3c:	test   r11d,r11d
  416f3f:	mov    DWORD PTR [r9+0x4],r11d
  416f43:	cmovne ebx,r12d
  416f47:	sub    ebx,0x1
  416f4a:	mov    rcx,rdi
  416f4d:	mov    DWORD PTR [r13+0x14],ebx
  416f51:	call   0x416a80
  416f56:	mov    rax,r13
  416f59:	add    rsp,0x28
  416f5d:	pop    rbx
  416f5e:	pop    rsi
  416f5f:	pop    rdi
  416f60:	pop    rbp
  416f61:	pop    r12
  416f63:	pop    r13
  416f65:	ret    
  416f66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416f70:	add    r8,0x4
  416f74:	mov    edx,DWORD PTR [r8-0x4]
  416f78:	add    r9,0x4
  416f7c:	cmp    rbp,r8
  416f7f:	mov    DWORD PTR [r9-0x4],edx
  416f83:	ja     0x416f70
  416f85:	jmp    0x416f47
  416f87:	mov    r9,r8
  416f8a:	jmp    0x416ef1
  416f8f:	xor    eax,eax
  416f91:	jmp    0x416f59
  416f93:	nop    DWORD PTR [rax]
  416f96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416fa0:	movsxd r8,DWORD PTR [rdx+0x14]
  416fa4:	mov    eax,DWORD PTR [rcx+0x14]
  416fa7:	sub    eax,r8d
  416faa:	test   eax,eax
  416fac:	jne    0x416fe2
  416fae:	shl    r8,0x2
  416fb2:	add    rcx,0x18
  416fb6:	lea    rax,[rcx+r8*1]
  416fba:	lea    rdx,[rdx+r8*1+0x18]
  416fbf:	jmp    0x416fc6
  416fc1:	cmp    rcx,rax
  416fc4:	jae    0x416fe0
  416fc6:	sub    rdx,0x4
  416fca:	sub    rax,0x4
  416fce:	mov    r9d,DWORD PTR [rdx]
  416fd1:	cmp    DWORD PTR [rax],r9d
  416fd4:	je     0x416fc1
  416fd6:	sbb    eax,eax
  416fd8:	or     eax,0x1
  416fdb:	ret    
  416fdc:	nop    DWORD PTR [rax+0x0]
  416fe0:	xor    eax,eax
  416fe2:	repz ret 
  416fe4:	xchg   ax,ax
  416fe6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416ff0:	push   rdi
  416ff1:	push   rsi
  416ff2:	push   rbx
  416ff3:	sub    rsp,0x20
  416ff7:	mov    rsi,rcx
  416ffa:	mov    rdi,rdx
  416ffd:	call   0x416fa0
  417002:	test   eax,eax
  417004:	je     0x4170f0
  41700a:	mov    ebx,0x0
  41700f:	js     0x417112
  417015:	mov    ecx,DWORD PTR [rsi+0x8]
  417018:	call   0x416970
  41701d:	test   rax,rax
  417020:	je     0x417122
  417026:	movsxd rdx,DWORD PTR [rsi+0x14]
  41702a:	lea    rcx,[rsi+0x18]
  41702e:	mov    DWORD PTR [rax+0x10],ebx
  417031:	lea    r10,[rdi+0x18]
  417035:	xor    r9d,r9d
  417038:	mov    rbx,rdx
  41703b:	lea    rsi,[rcx+rdx*4]
  41703f:	movsxd rdx,DWORD PTR [rdi+0x14]
  417043:	lea    rdi,[r10+rdx*4]
  417047:	lea    rdx,[rax+0x18]
  41704b:	nop    DWORD PTR [rax+rax*1+0x0]
  417050:	add    rcx,0x4
  417054:	add    r10,0x4
  417058:	mov    r11d,DWORD PTR [r10-0x4]
  41705c:	mov    r8d,DWORD PTR [rcx-0x4]
  417060:	add    rdx,0x4
  417064:	sub    r8,r11
  417067:	sub    r8,r9
  41706a:	mov    r9,r8
  41706d:	mov    r11d,r8d
  417070:	mov    DWORD PTR [rdx-0x4],r8d
  417074:	shr    r9,0x20
  417078:	and    r9d,0x1
  41707c:	cmp    rdi,r10
  41707f:	ja     0x417050
  417081:	cmp    rsi,rcx
  417084:	mov    rdi,rdx
  417087:	mov    r10,rcx
  41708a:	jbe    0x4170c6
  41708c:	nop    DWORD PTR [rax+0x0]
  417090:	add    rcx,0x4
  417094:	mov    r8d,DWORD PTR [rcx-0x4]
  417098:	add    rdx,0x4
  41709c:	sub    r8,r9
  41709f:	mov    r9,r8
  4170a2:	mov    r11d,r8d
  4170a5:	mov    DWORD PTR [rdx-0x4],r8d
  4170a9:	shr    r9,0x20
  4170ad:	and    r9d,0x1
  4170b1:	cmp    rsi,rcx
  4170b4:	ja     0x417090
  4170b6:	not    r10
  4170b9:	lea    rdx,[r10+rsi*1]
  4170bd:	shr    rdx,0x2
  4170c1:	lea    rdx,[rdi+rdx*4+0x4]
  4170c6:	sub    rdx,0x4
  4170ca:	test   r11d,r11d
  4170cd:	jne    0x4170dd
  4170cf:	nop
  4170d0:	sub    rdx,0x4
  4170d4:	mov    ecx,DWORD PTR [rdx]
  4170d6:	sub    ebx,0x1
  4170d9:	test   ecx,ecx
  4170db:	je     0x4170d0
  4170dd:	mov    DWORD PTR [rax+0x14],ebx
  4170e0:	add    rsp,0x20
  4170e4:	pop    rbx
  4170e5:	pop    rsi
  4170e6:	pop    rdi
  4170e7:	ret    
  4170e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4170f0:	xor    ecx,ecx
  4170f2:	call   0x416970
  4170f7:	test   rax,rax
  4170fa:	je     0x417122
  4170fc:	mov    DWORD PTR [rax+0x14],0x1
  417103:	mov    DWORD PTR [rax+0x18],0x0
  41710a:	add    rsp,0x20
  41710e:	pop    rbx
  41710f:	pop    rsi
  417110:	pop    rdi
  417111:	ret    
  417112:	mov    rax,rsi
  417115:	mov    bl,0x1
  417117:	mov    rsi,rdi
  41711a:	mov    rdi,rax
  41711d:	jmp    0x417015
  417122:	xor    eax,eax
  417124:	jmp    0x4170e0
  417126:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417130:	push   rsi
  417131:	push   rbx
  417132:	sub    rsp,0x18
  417136:	movsxd rax,DWORD PTR [rcx+0x14]
  41713a:	lea    r10,[rcx+0x18]
  41713e:	mov    ecx,0x20
  417143:	lea    r9,[r10+rax*4]
  417147:	mov    eax,DWORD PTR [r9-0x4]
  41714b:	lea    rbx,[r9-0x4]
  41714f:	bsr    r8d,eax
  417153:	xor    r8d,0x1f
  417157:	sub    ecx,r8d
  41715a:	cmp    r8d,0xa
  41715e:	mov    DWORD PTR [rdx],ecx
  417160:	jg     0x4171b0
  417162:	mov    ecx,0xb
  417167:	mov    r11d,eax
  41716a:	xor    esi,esi
  41716c:	sub    ecx,r8d
  41716f:	shr    r11d,cl
  417172:	or     r11d,0x3ff00000
  417179:	shl    r11,0x20
  41717d:	cmp    r10,rbx
  417180:	jae    0x417188
  417182:	mov    esi,DWORD PTR [r9-0x8]
  417186:	shr    esi,cl
  417188:	lea    ecx,[r8+0x15]
  41718c:	shl    eax,cl
  41718e:	mov    edx,eax
  417190:	mov    eax,esi
  417192:	or     eax,edx
  417194:	or     rax,r11
  417197:	mov    QWORD PTR [rsp+0x8],rax
  41719c:	movsd  xmm0,QWORD PTR [rsp+0x8]
  4171a2:	add    rsp,0x18
  4171a6:	pop    rbx
  4171a7:	pop    rsi
  4171a8:	ret    
  4171a9:	nop    DWORD PTR [rax+0x0]
  4171b0:	cmp    r10,rbx
  4171b3:	jae    0x417210
  4171b5:	mov    r11d,r8d
  4171b8:	lea    rsi,[r9-0x8]
  4171bc:	mov    edx,DWORD PTR [r9-0x8]
  4171c0:	sub    r11d,0xb
  4171c4:	je     0x417232
  4171c6:	mov    ebx,0x2b
  4171cb:	mov    ecx,r11d
  4171ce:	sub    ebx,r8d
  4171d1:	shl    eax,cl
  4171d3:	mov    r8d,edx
  4171d6:	mov    ecx,ebx
  4171d8:	shr    r8d,cl
  4171db:	or     eax,r8d
  4171de:	xor    r8d,r8d
  4171e1:	or     eax,0x3ff00000
  4171e6:	shl    rax,0x20
  4171ea:	cmp    r10,rsi
  4171ed:	jae    0x4171f6
  4171ef:	mov    r8d,DWORD PTR [r9-0xc]
  4171f3:	shr    r8d,cl
  4171f6:	mov    ecx,r11d
  4171f9:	shl    edx,cl
  4171fb:	or     r8d,edx
  4171fe:	movabs rdx,0xffffffff00000000
  417208:	and    rax,rdx
  41720b:	or     rax,r8
  41720e:	jmp    0x417197
  417210:	mov    r11d,r8d
  417213:	sub    r11d,0xb
  417217:	je     0x417230
  417219:	mov    ecx,r11d
  41721c:	xor    r8d,r8d
  41721f:	xor    edx,edx
  417221:	shl    eax,cl
  417223:	or     eax,0x3ff00000
  417228:	shl    rax,0x20
  41722c:	jmp    0x4171f6
  41722e:	xchg   ax,ax
  417230:	xor    edx,edx
  417232:	or     eax,0x3ff00000
  417237:	shl    rax,0x20
  41723b:	or     rax,rdx
  41723e:	jmp    0x417197
  417243:	nop    DWORD PTR [rax]
  417246:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417250:	push   rdi
  417251:	push   rsi
  417252:	push   rbx
  417253:	sub    rsp,0x20
  417257:	mov    ecx,0x1
  41725c:	movq   rbx,xmm0
  417261:	mov    rdi,rdx
  417264:	mov    rsi,r8
  417267:	call   0x416970
  41726c:	test   rax,rax
  41726f:	je     0x417355
  417275:	mov    r9,rbx
  417278:	shr    r9,0x20
  41727c:	mov    r10d,r9d
  41727f:	and    r9d,0x7fffffff
  417286:	and    r10d,0xfffff
  41728d:	shr    r9d,0x14
  417291:	mov    edx,r10d
  417294:	or     edx,0x100000
  41729a:	test   r9d,r9d
  41729d:	cmovne r10d,edx
  4172a1:	test   ebx,ebx
  4172a3:	jne    0x4172e4
  4172a5:	xor    ecx,ecx
  4172a7:	mov    DWORD PTR [rax+0x14],0x1
  4172ae:	mov    edx,0x1
  4172b3:	tzcnt  ecx,r10d
  4172b8:	shr    r10d,cl
  4172bb:	test   r9d,r9d
  4172be:	lea    r11d,[rcx+0x20]
  4172c2:	mov    DWORD PTR [rax+0x18],r10d
  4172c6:	je     0x417323
  4172c8:	lea    edx,[r11+r9*1-0x433]
  4172d0:	mov    DWORD PTR [rdi],edx
  4172d2:	mov    edx,0x35
  4172d7:	sub    edx,r11d
  4172da:	mov    DWORD PTR [rsi],edx
  4172dc:	add    rsp,0x20
  4172e0:	pop    rbx
  4172e1:	pop    rsi
  4172e2:	pop    rdi
  4172e3:	ret    
  4172e4:	xor    r11d,r11d
  4172e7:	tzcnt  r11d,ebx
  4172ec:	mov    ecx,r11d
  4172ef:	shr    ebx,cl
  4172f1:	test   r11d,r11d
  4172f4:	je     0x417350
  4172f6:	mov    ecx,0x20
  4172fb:	mov    edx,r10d
  4172fe:	sub    ecx,r11d
  417301:	shl    edx,cl
  417303:	mov    ecx,r11d
  417306:	or     ebx,edx
  417308:	shr    r10d,cl
  41730b:	mov    DWORD PTR [rax+0x18],ebx
  41730e:	cmp    r10d,0x1
  417312:	mov    DWORD PTR [rax+0x1c],r10d
  417316:	sbb    edx,edx
  417318:	add    edx,0x2
  41731b:	test   r9d,r9d
  41731e:	mov    DWORD PTR [rax+0x14],edx
  417321:	jne    0x4172c8
  417323:	movsxd rcx,edx
  417326:	shl    edx,0x5
  417329:	sub    r11d,0x432
  417330:	bsr    ecx,DWORD PTR [rax+rcx*4+0x14]
  417335:	mov    DWORD PTR [rdi],r11d
  417338:	xor    ecx,0x1f
  41733b:	sub    edx,ecx
  41733d:	mov    DWORD PTR [rsi],edx
  41733f:	add    rsp,0x20
  417343:	pop    rbx
  417344:	pop    rsi
  417345:	pop    rdi
  417346:	ret    
  417347:	nop    WORD PTR [rax+rax*1+0x0]
  417350:	mov    DWORD PTR [rax+0x18],ebx
  417353:	jmp    0x41730e
  417355:	xor    eax,eax
  417357:	jmp    0x4172dc
  417359:	nop    DWORD PTR [rax+0x0]
  417360:	mov    rax,rcx
  417363:	lea    rcx,[rdx+0x1]
  417367:	movzx  edx,BYTE PTR [rdx]
  41736a:	test   dl,dl
  41736c:	mov    BYTE PTR [rax],dl
  41736e:	je     0x417382
  417370:	add    rcx,0x1
  417374:	movzx  edx,BYTE PTR [rcx-0x1]
  417378:	add    rax,0x1
  41737c:	test   dl,dl
  41737e:	mov    BYTE PTR [rax],dl
  417380:	jne    0x417370
  417382:	repz ret 
  417384:	nop
  417385:	nop
  417386:	nop
  417387:	nop
  417388:	nop
  417389:	nop
  41738a:	nop
  41738b:	nop
  41738c:	nop
  41738d:	nop
  41738e:	nop
  41738f:	nop
  417390:	push   rbp
  417391:	push   rdi
  417392:	push   rsi
  417393:	push   rbx
  417394:	sub    rsp,0x48
  417398:	test   rdx,rdx
  41739b:	je     0x4174c3
  4173a1:	test   r8,r8
  4173a4:	je     0x4174d0
  4173aa:	mov    eax,DWORD PTR [r9]
  4173ad:	mov    DWORD PTR [r9],0x0
  4173b4:	mov    DWORD PTR [rsp+0x30],eax
  4173b8:	movzx  eax,BYTE PTR [rdx]
  4173bb:	test   al,al
  4173bd:	je     0x417460
  4173c3:	cmp    DWORD PTR [rsp+0x98],0x1
  4173cb:	mov    rsi,r9
  4173ce:	mov    rdi,r8
  4173d1:	mov    rbx,rdx
  4173d4:	mov    rbp,rcx
  4173d7:	jbe    0x417440
  4173d9:	cmp    BYTE PTR [rsp+0x30],0x0
  4173de:	jne    0x417470
  4173e4:	movzx  edx,al
  4173e7:	mov    ecx,DWORD PTR [rsp+0x90]
  4173ee:	call   QWORD PTR [rip+0xc12c]        # 0x423520
  4173f4:	test   eax,eax
  4173f6:	je     0x417440
  4173f8:	cmp    rdi,0x1
  4173fc:	jbe    0x4174ec
  417402:	mov    DWORD PTR [rsp+0x28],0x1
  41740a:	mov    QWORD PTR [rsp+0x20],rbp
  41740f:	mov    r9d,0x2
  417415:	mov    r8,rbx
  417418:	mov    edx,0x8
  41741d:	mov    ecx,DWORD PTR [rsp+0x90]
  417424:	call   QWORD PTR [rip+0xc106]        # 0x423530
  41742a:	test   eax,eax
  41742c:	je     0x4174d7
  417432:	mov    eax,0x2
  417437:	add    rsp,0x48
  41743b:	pop    rbx
  41743c:	pop    rsi
  41743d:	pop    rdi
  41743e:	pop    rbp
  41743f:	ret    
  417440:	mov    eax,DWORD PTR [rsp+0x90]
  417447:	test   eax,eax
  417449:	jne    0x417490
  41744b:	movzx  eax,BYTE PTR [rbx]
  41744e:	mov    WORD PTR [rbp+0x0],ax
  417452:	mov    eax,0x1
  417457:	add    rsp,0x48
  41745b:	pop    rbx
  41745c:	pop    rsi
  41745d:	pop    rdi
  41745e:	pop    rbp
  41745f:	ret    
  417460:	xor    edx,edx
  417462:	xor    eax,eax
  417464:	mov    WORD PTR [rcx],dx
  417467:	add    rsp,0x48
  41746b:	pop    rbx
  41746c:	pop    rsi
  41746d:	pop    rdi
  41746e:	pop    rbp
  41746f:	ret    
  417470:	mov    BYTE PTR [rsp+0x31],al
  417474:	mov    DWORD PTR [rsp+0x28],0x1
  41747c:	mov    r9d,0x2
  417482:	mov    QWORD PTR [rsp+0x20],rcx
  417487:	lea    r8,[rsp+0x30]
  41748c:	jmp    0x417418
  41748e:	xchg   ax,ax
  417490:	mov    DWORD PTR [rsp+0x28],0x1
  417498:	mov    QWORD PTR [rsp+0x20],rbp
  41749d:	mov    r9d,0x1
  4174a3:	mov    r8,rbx
  4174a6:	mov    edx,0x8
  4174ab:	mov    ecx,DWORD PTR [rsp+0x90]
  4174b2:	call   QWORD PTR [rip+0xc078]        # 0x423530
  4174b8:	test   eax,eax
  4174ba:	je     0x4174d7
  4174bc:	mov    eax,0x1
  4174c1:	jmp    0x417467
  4174c3:	xor    eax,eax
  4174c5:	add    rsp,0x48
  4174c9:	pop    rbx
  4174ca:	pop    rsi
  4174cb:	pop    rdi
  4174cc:	pop    rbp
  4174cd:	ret    
  4174ce:	xchg   ax,ax
  4174d0:	mov    eax,0xfffffffe
  4174d5:	jmp    0x417467
  4174d7:	call   0x417938
  4174dc:	mov    DWORD PTR [rax],0x2a
  4174e2:	mov    eax,0xffffffff
  4174e7:	jmp    0x417467
  4174ec:	movzx  eax,BYTE PTR [rbx]
  4174ef:	mov    BYTE PTR [rsi],al
  4174f1:	mov    eax,0xfffffffe
  4174f6:	jmp    0x417467
  4174fb:	nop    DWORD PTR [rax+rax*1+0x0]
  417500:	push   rbp
  417501:	push   rdi
  417502:	push   rsi
  417503:	push   rbx
  417504:	sub    rsp,0x58
  417508:	xor    eax,eax
  41750a:	mov    WORD PTR [rsp+0x4e],ax
  41750f:	lea    rax,[rsp+0x4e]
  417514:	test   rcx,rcx
  417517:	mov    rbx,rcx
  41751a:	mov    rsi,r9
  41751d:	mov    rdi,rdx
  417520:	cmove  rbx,rax
  417524:	mov    rax,QWORD PTR [rip+0x6fd5]        # 0x41e500
  41752b:	mov    QWORD PTR [rsp+0x38],r8
  417530:	mov    rax,QWORD PTR [rax]
  417533:	mov    ebp,DWORD PTR [rax]
  417535:	call   0x417988
  41753a:	mov    r8,QWORD PTR [rsp+0x38]
  41753f:	lea    r9,[rip+0xb1c2]        # 0x422708
  417546:	test   rsi,rsi
  417549:	mov    DWORD PTR [rsp+0x28],ebp
  41754d:	mov    DWORD PTR [rsp+0x20],eax
  417551:	mov    rdx,rdi
  417554:	cmovne r9,rsi
  417558:	mov    rcx,rbx
  41755b:	call   0x417390
  417560:	cdqe   
  417562:	add    rsp,0x58
  417566:	pop    rbx
  417567:	pop    rsi
  417568:	pop    rdi
  417569:	pop    rbp
  41756a:	ret    
  41756b:	nop    DWORD PTR [rax+rax*1+0x0]
  417570:	push   r15
  417572:	push   r14
  417574:	push   r13
  417576:	push   r12
  417578:	push   rbp
  417579:	push   rdi
  41757a:	push   rsi
  41757b:	push   rbx
  41757c:	sub    rsp,0x48
  417580:	lea    rax,[rip+0xb17d]        # 0x422704
  417587:	test   r9,r9
  41758a:	mov    rdi,r9
  41758d:	mov    r13,rdx
  417590:	cmove  rdi,rax
  417594:	mov    r14,rcx
  417597:	mov    rsi,r8
  41759a:	call   0x417988
  41759f:	mov    r12d,eax
  4175a2:	mov    rax,QWORD PTR [rip+0x6f57]        # 0x41e500
  4175a9:	test   r13,r13
  4175ac:	mov    rax,QWORD PTR [rax]
  4175af:	mov    ebp,DWORD PTR [rax]
  4175b1:	je     0x417635
  4175b7:	mov    rdx,QWORD PTR [r13+0x0]
  4175bb:	test   rdx,rdx
  4175be:	je     0x417635
  4175c0:	test   r14,r14
  4175c3:	je     0x417640
  4175c5:	xor    ebx,ebx
  4175c7:	test   rsi,rsi
  4175ca:	jne    0x4175ea
  4175cc:	jmp    0x417635
  4175ce:	xchg   ax,ax
  4175d0:	movsxd r10,eax
  4175d3:	add    r14,0x2
  4175d7:	mov    rdx,r10
  4175da:	add    rdx,QWORD PTR [r13+0x0]
  4175de:	add    rbx,r10
  4175e1:	cmp    rsi,rbx
  4175e4:	mov    QWORD PTR [r13+0x0],rdx
  4175e8:	jbe    0x417630
  4175ea:	mov    r8,rsi
  4175ed:	mov    DWORD PTR [rsp+0x28],ebp
  4175f1:	mov    DWORD PTR [rsp+0x20],r12d
  4175f6:	sub    r8,rbx
  4175f9:	mov    r9,rdi
  4175fc:	mov    rcx,r14
  4175ff:	call   0x417390
  417604:	cmp    eax,0x0
  417607:	jg     0x4175d0
  417609:	jne    0x417630
  41760b:	cmp    rbx,rsi
  41760e:	jae    0x417630
  417610:	mov    QWORD PTR [r13+0x0],0x0
  417618:	mov    rax,rbx
  41761b:	add    rsp,0x48
  41761f:	pop    rbx
  417620:	pop    rsi
  417621:	pop    rdi
  417622:	pop    rbp
  417623:	pop    r12
  417625:	pop    r13
  417627:	pop    r14
  417629:	pop    r15
  41762b:	ret    
  41762c:	xor    ebx,ebx
  41762e:	xchg   ax,ax
  417630:	mov    rax,rbx
  417633:	jmp    0x41761b
  417635:	xor    eax,eax
  417637:	jmp    0x41761b
  417639:	nop    DWORD PTR [rax+0x0]
  417640:	xor    eax,eax
  417642:	test   rsi,rsi
  417645:	mov    WORD PTR [rsp+0x3e],ax
  41764a:	je     0x41762c
  41764c:	mov    r15d,ebp
  41764f:	xor    ebx,ebx
  417651:	lea    r14,[rsp+0x3e]
  417656:	jmp    0x417675
  417658:	nop    DWORD PTR [rax+rax*1+0x0]
  417660:	cdqe   
  417662:	mov    rdx,rax
  417665:	add    rdx,QWORD PTR [r13+0x0]
  417669:	add    rbx,rax
  41766c:	cmp    rsi,rbx
  41766f:	mov    QWORD PTR [r13+0x0],rdx
  417673:	jbe    0x417630
  417675:	mov    DWORD PTR [rsp+0x28],ebp
  417679:	mov    DWORD PTR [rsp+0x20],r12d
  41767e:	mov    r9,rdi
  417681:	mov    r8,r15
  417684:	mov    rcx,r14
  417687:	call   0x417390
  41768c:	test   eax,eax
  41768e:	jg     0x417660
  417690:	jmp    0x417630
  417692:	nop    DWORD PTR [rax+0x0]
  417696:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4176a0:	push   rbp
  4176a1:	push   rdi
  4176a2:	push   rsi
  4176a3:	push   rbx
  4176a4:	sub    rsp,0x48
  4176a8:	xor    eax,eax
  4176aa:	mov    WORD PTR [rsp+0x3e],ax
  4176af:	mov    rax,QWORD PTR [rip+0x6e4a]        # 0x41e500
  4176b6:	mov    rbx,r8
  4176b9:	mov    rsi,rcx
  4176bc:	mov    rdi,rdx
  4176bf:	mov    rax,QWORD PTR [rax]
  4176c2:	mov    ebp,DWORD PTR [rax]
  4176c4:	call   0x417988
  4176c9:	lea    r9,[rip+0xb030]        # 0x422700
  4176d0:	test   rbx,rbx
  4176d3:	lea    rcx,[rsp+0x3e]
  4176d8:	mov    DWORD PTR [rsp+0x28],ebp
  4176dc:	mov    DWORD PTR [rsp+0x20],eax
  4176e0:	mov    r8,rdi
  4176e3:	cmovne r9,rbx
  4176e7:	mov    rdx,rsi
  4176ea:	call   0x417390
  4176ef:	cdqe   
  4176f1:	add    rsp,0x48
  4176f5:	pop    rbx
  4176f6:	pop    rsi
  4176f7:	pop    rdi
  4176f8:	pop    rbp
  4176f9:	ret    
  4176fa:	nop
  4176fb:	nop
  4176fc:	nop
  4176fd:	nop
  4176fe:	nop
  4176ff:	nop
  417700:	jmp    QWORD PTR [rip+0xc152]        # 0x423858
  417706:	nop
  417707:	nop
  417708:	jmp    QWORD PTR [rip+0xc142]        # 0x423850
  41770e:	nop
  41770f:	nop
  417710:	jmp    QWORD PTR [rip+0xc132]        # 0x423848
  417716:	nop
  417717:	nop
  417718:	jmp    QWORD PTR [rip+0xc122]        # 0x423840
  41771e:	nop
  41771f:	nop
  417720:	jmp    QWORD PTR [rip+0xc112]        # 0x423838
  417726:	nop
  417727:	nop
  417728:	jmp    QWORD PTR [rip+0xc102]        # 0x423830
  41772e:	nop
  41772f:	nop
  417730:	jmp    QWORD PTR [rip+0xc0f2]        # 0x423828
  417736:	nop
  417737:	nop
  417738:	jmp    QWORD PTR [rip+0xc0e2]        # 0x423820
  41773e:	nop
  41773f:	nop
  417740:	jmp    QWORD PTR [rip+0xc0d2]        # 0x423818
  417746:	nop
  417747:	nop
  417748:	jmp    QWORD PTR [rip+0xc0c2]        # 0x423810
  41774e:	nop
  41774f:	nop
  417750:	jmp    QWORD PTR [rip+0xc0b2]        # 0x423808
  417756:	nop
  417757:	nop
  417758:	jmp    QWORD PTR [rip+0xc0a2]        # 0x423800
  41775e:	nop
  41775f:	nop
  417760:	jmp    QWORD PTR [rip+0xc092]        # 0x4237f8
  417766:	nop
  417767:	nop
  417768:	jmp    QWORD PTR [rip+0xc082]        # 0x4237f0
  41776e:	nop
  41776f:	nop
  417770:	jmp    QWORD PTR [rip+0xc072]        # 0x4237e8
  417776:	nop
  417777:	nop
  417778:	jmp    QWORD PTR [rip+0xc062]        # 0x4237e0
  41777e:	nop
  41777f:	nop
  417780:	jmp    QWORD PTR [rip+0xc052]        # 0x4237d8
  417786:	nop
  417787:	nop
  417788:	jmp    QWORD PTR [rip+0xc042]        # 0x4237d0
  41778e:	nop
  41778f:	nop
  417790:	jmp    QWORD PTR [rip+0xc032]        # 0x4237c8
  417796:	nop
  417797:	nop
  417798:	jmp    QWORD PTR [rip+0xc022]        # 0x4237c0
  41779e:	nop
  41779f:	nop
  4177a0:	jmp    QWORD PTR [rip+0xc012]        # 0x4237b8
  4177a6:	nop
  4177a7:	nop
  4177a8:	jmp    QWORD PTR [rip+0xc002]        # 0x4237b0
  4177ae:	nop
  4177af:	nop
  4177b0:	jmp    QWORD PTR [rip+0xbff2]        # 0x4237a8
  4177b6:	nop
  4177b7:	nop
  4177b8:	jmp    QWORD PTR [rip+0xbfe2]        # 0x4237a0
  4177be:	nop
  4177bf:	nop
  4177c0:	jmp    QWORD PTR [rip+0xbfd2]        # 0x423798
  4177c6:	nop
  4177c7:	nop
  4177c8:	jmp    QWORD PTR [rip+0xbfc2]        # 0x423790
  4177ce:	nop
  4177cf:	nop
  4177d0:	jmp    QWORD PTR [rip+0xbfb2]        # 0x423788
  4177d6:	nop
  4177d7:	nop
  4177d8:	jmp    QWORD PTR [rip+0xbfa2]        # 0x423780
  4177de:	nop
  4177df:	nop
  4177e0:	jmp    QWORD PTR [rip+0xbf92]        # 0x423778
  4177e6:	nop
  4177e7:	nop
  4177e8:	jmp    QWORD PTR [rip+0xbf82]        # 0x423770
  4177ee:	nop
  4177ef:	nop
  4177f0:	jmp    QWORD PTR [rip+0xbf72]        # 0x423768
  4177f6:	nop
  4177f7:	nop
  4177f8:	jmp    QWORD PTR [rip+0xbf62]        # 0x423760
  4177fe:	nop
  4177ff:	nop
  417800:	jmp    QWORD PTR [rip+0xbf52]        # 0x423758
  417806:	nop
  417807:	nop
  417808:	jmp    QWORD PTR [rip+0xbf42]        # 0x423750
  41780e:	nop
  41780f:	nop
  417810:	jmp    QWORD PTR [rip+0xbf32]        # 0x423748
  417816:	nop
  417817:	nop
  417818:	jmp    QWORD PTR [rip+0xbf22]        # 0x423740
  41781e:	nop
  41781f:	nop
  417820:	jmp    QWORD PTR [rip+0xbf12]        # 0x423738
  417826:	nop
  417827:	nop
  417828:	jmp    QWORD PTR [rip+0xbf02]        # 0x423730
  41782e:	nop
  41782f:	nop
  417830:	jmp    QWORD PTR [rip+0xbef2]        # 0x423728
  417836:	nop
  417837:	nop
  417838:	jmp    QWORD PTR [rip+0xbee2]        # 0x423720
  41783e:	nop
  41783f:	nop
  417840:	jmp    QWORD PTR [rip+0xbed2]        # 0x423718
  417846:	nop
  417847:	nop
  417848:	jmp    QWORD PTR [rip+0xbec2]        # 0x423710
  41784e:	nop
  41784f:	nop
  417850:	jmp    QWORD PTR [rip+0xbeb2]        # 0x423708
  417856:	nop
  417857:	nop
  417858:	jmp    QWORD PTR [rip+0xbea2]        # 0x423700
  41785e:	nop
  41785f:	nop
  417860:	jmp    QWORD PTR [rip+0xbe92]        # 0x4236f8
  417866:	nop
  417867:	nop
  417868:	jmp    QWORD PTR [rip+0xbe82]        # 0x4236f0
  41786e:	nop
  41786f:	nop
  417870:	jmp    QWORD PTR [rip+0xbe72]        # 0x4236e8
  417876:	nop
  417877:	nop
  417878:	jmp    QWORD PTR [rip+0xbe62]        # 0x4236e0
  41787e:	nop
  41787f:	nop
  417880:	jmp    QWORD PTR [rip+0xbe52]        # 0x4236d8
  417886:	nop
  417887:	nop
  417888:	jmp    QWORD PTR [rip+0xbe42]        # 0x4236d0
  41788e:	nop
  41788f:	nop
  417890:	jmp    QWORD PTR [rip+0xbe32]        # 0x4236c8
  417896:	nop
  417897:	nop
  417898:	jmp    QWORD PTR [rip+0xbe22]        # 0x4236c0
  41789e:	nop
  41789f:	nop
  4178a0:	jmp    QWORD PTR [rip+0xbe12]        # 0x4236b8
  4178a6:	nop
  4178a7:	nop
  4178a8:	jmp    QWORD PTR [rip+0xbe02]        # 0x4236b0
  4178ae:	nop
  4178af:	nop
  4178b0:	jmp    QWORD PTR [rip+0xbdf2]        # 0x4236a8
  4178b6:	nop
  4178b7:	nop
  4178b8:	jmp    QWORD PTR [rip+0xbde2]        # 0x4236a0
  4178be:	nop
  4178bf:	nop
  4178c0:	jmp    QWORD PTR [rip+0xbdd2]        # 0x423698
  4178c6:	nop
  4178c7:	nop
  4178c8:	jmp    QWORD PTR [rip+0xbdc2]        # 0x423690
  4178ce:	nop
  4178cf:	nop
  4178d0:	jmp    QWORD PTR [rip+0xbdb2]        # 0x423688
  4178d6:	nop
  4178d7:	nop
  4178d8:	jmp    QWORD PTR [rip+0xbda2]        # 0x423680
  4178de:	nop
  4178df:	nop
  4178e0:	jmp    QWORD PTR [rip+0xbd92]        # 0x423678
  4178e6:	nop
  4178e7:	nop
  4178e8:	jmp    QWORD PTR [rip+0xbd82]        # 0x423670
  4178ee:	nop
  4178ef:	nop
  4178f0:	jmp    QWORD PTR [rip+0xbd72]        # 0x423668
  4178f6:	nop
  4178f7:	nop
  4178f8:	jmp    QWORD PTR [rip+0xbd62]        # 0x423660
  4178fe:	nop
  4178ff:	nop
  417900:	jmp    QWORD PTR [rip+0xbd52]        # 0x423658
  417906:	nop
  417907:	nop
  417908:	jmp    QWORD PTR [rip+0xbd42]        # 0x423650
  41790e:	nop
  41790f:	nop
  417910:	jmp    QWORD PTR [rip+0xbd32]        # 0x423648
  417916:	nop
  417917:	nop
  417918:	jmp    QWORD PTR [rip+0xbd22]        # 0x423640
  41791e:	nop
  41791f:	nop
  417920:	jmp    QWORD PTR [rip+0xbd0a]        # 0x423630
  417926:	nop
  417927:	nop
  417928:	jmp    QWORD PTR [rip+0xbcfa]        # 0x423628
  41792e:	nop
  41792f:	nop
  417930:	jmp    QWORD PTR [rip+0xbcea]        # 0x423620
  417936:	nop
  417937:	nop
  417938:	jmp    QWORD PTR [rip+0xbcda]        # 0x423618
  41793e:	nop
  41793f:	nop
  417940:	jmp    QWORD PTR [rip+0xbcca]        # 0x423610
  417946:	nop
  417947:	nop
  417948:	jmp    QWORD PTR [rip+0xbcba]        # 0x423608
  41794e:	nop
  41794f:	nop
  417950:	jmp    QWORD PTR [rip+0xbcaa]        # 0x423600
  417956:	nop
  417957:	nop
  417958:	jmp    QWORD PTR [rip+0xbc92]        # 0x4235f0
  41795e:	nop
  41795f:	nop
  417960:	jmp    QWORD PTR [rip+0xbc82]        # 0x4235e8
  417966:	nop
  417967:	nop
  417968:	jmp    QWORD PTR [rip+0xbc6a]        # 0x4235d8
  41796e:	nop
  41796f:	nop
  417970:	jmp    QWORD PTR [rip+0xbc5a]        # 0x4235d0
  417976:	nop
  417977:	nop
  417978:	jmp    QWORD PTR [rip+0xbc42]        # 0x4235c0
  41797e:	nop
  41797f:	nop
  417980:	jmp    QWORD PTR [rip+0xbc32]        # 0x4235b8
  417986:	nop
  417987:	nop
  417988:	jmp    QWORD PTR [rip+0xbc22]        # 0x4235b0
  41798e:	nop
  41798f:	nop
  417990:	jmp    QWORD PTR [rip+0xbc12]        # 0x4235a8
  417996:	nop
  417997:	nop
  417998:	nop    DWORD PTR [rax+rax*1+0x0]
  4179a0:	mov    rax,QWORD PTR [rip+0xad69]        # 0x422710
  4179a7:	ret    
  4179a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4179b0:	mov    rax,rcx
  4179b3:	xchg   QWORD PTR [rip+0xad56],rax        # 0x422710
  4179ba:	ret    
  4179bb:	nop
  4179bc:	nop
  4179bd:	nop
  4179be:	nop
  4179bf:	nop
  4179c0:	mov    eax,DWORD PTR [rip+0xad5a]        # 0x422720
  4179c6:	ret    
  4179c7:	nop    WORD PTR [rax+rax*1+0x0]
  4179d0:	mov    eax,ecx
  4179d2:	xchg   DWORD PTR [rip+0xad48],eax        # 0x422720
  4179d8:	ret    
  4179d9:	nop    DWORD PTR [rax+0x0]
  4179e0:	push   rbx
  4179e1:	sub    rsp,0x20
  4179e5:	mov    ebx,ecx
  4179e7:	lea    rcx,[rip+0x6a52]        # 0x41e440
  4179ee:	call   QWORD PTR [rip+0xbafc]        # 0x4234f0
  4179f4:	lea    rdx,[rip+0x6a5b]        # 0x41e456
  4179fb:	mov    rcx,rax
  4179fe:	call   QWORD PTR [rip+0xbaf4]        # 0x4234f8
  417a04:	lea    rdx,[rip+0xffffffffffffffc5]        # 0x4179d0
  417a0b:	test   rax,rax
  417a0e:	mov    ecx,ebx
  417a10:	cmove  rax,rdx
  417a14:	mov    QWORD PTR [rip+0x12bd],rax        # 0x418cd8
  417a1b:	add    rsp,0x20
  417a1f:	pop    rbx
  417a20:	rex.W jmp rax
  417a23:	nop    DWORD PTR [rax]
  417a26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417a30:	sub    rsp,0x28
  417a34:	lea    rcx,[rip+0x6a05]        # 0x41e440
  417a3b:	call   QWORD PTR [rip+0xbaaf]        # 0x4234f0
  417a41:	lea    rdx,[rip+0x6a21]        # 0x41e469
  417a48:	mov    rcx,rax
  417a4b:	call   QWORD PTR [rip+0xbaa7]        # 0x4234f8
  417a51:	lea    rdx,[rip+0xffffffffffffff68]        # 0x4179c0
  417a58:	test   rax,rax
  417a5b:	cmove  rax,rdx
  417a5f:	mov    QWORD PTR [rip+0x126a],rax        # 0x418cd0
  417a66:	add    rsp,0x28
  417a6a:	rex.W jmp rax
  417a6d:	nop    DWORD PTR [rax]
  417a70:	mov    rax,QWORD PTR [rip+0x1261]        # 0x418cd8
  417a77:	rex.W jmp rax
  417a7a:	nop    WORD PTR [rax+rax*1+0x0]
  417a80:	mov    rax,QWORD PTR [rip+0x1249]        # 0x418cd0
  417a87:	rex.W jmp rax
  417a8a:	nop
  417a8b:	nop
  417a8c:	nop
  417a8d:	nop
  417a8e:	nop
  417a8f:	nop
  417a90:	jmp    QWORD PTR [rip+0xbdf2]        # 0x423888
  417a96:	nop
  417a97:	nop
  417a98:	nop    DWORD PTR [rax+rax*1+0x0]
  417aa0:	jmp    QWORD PTR [rip+0xbaf2]        # 0x423598
  417aa6:	nop
  417aa7:	nop
  417aa8:	jmp    QWORD PTR [rip+0xbae2]        # 0x423590
  417aae:	nop
  417aaf:	nop
  417ab0:	jmp    QWORD PTR [rip+0xbad2]        # 0x423588
  417ab6:	nop
  417ab7:	nop
  417ab8:	jmp    QWORD PTR [rip+0xbac2]        # 0x423580
  417abe:	nop
  417abf:	nop
  417ac0:	jmp    QWORD PTR [rip+0xbab2]        # 0x423578
  417ac6:	nop
  417ac7:	nop
  417ac8:	jmp    QWORD PTR [rip+0xbaa2]        # 0x423570
  417ace:	nop
  417acf:	nop
  417ad0:	jmp    QWORD PTR [rip+0xba92]        # 0x423568
  417ad6:	nop
  417ad7:	nop
  417ad8:	jmp    QWORD PTR [rip+0xba82]        # 0x423560
  417ade:	nop
  417adf:	nop
  417ae0:	jmp    QWORD PTR [rip+0xba72]        # 0x423558
  417ae6:	nop
  417ae7:	nop
  417ae8:	jmp    QWORD PTR [rip+0xba62]        # 0x423550
  417aee:	nop
  417aef:	nop
  417af0:	jmp    QWORD PTR [rip+0xba52]        # 0x423548
  417af6:	nop
  417af7:	nop
  417af8:	jmp    QWORD PTR [rip+0xba42]        # 0x423540
  417afe:	nop
  417aff:	nop
  417b00:	jmp    QWORD PTR [rip+0xba32]        # 0x423538
  417b06:	nop
  417b07:	nop
  417b08:	jmp    QWORD PTR [rip+0xba22]        # 0x423530
  417b0e:	nop
  417b0f:	nop
  417b10:	jmp    QWORD PTR [rip+0xba12]        # 0x423528
  417b16:	nop
  417b17:	nop
  417b18:	jmp    QWORD PTR [rip+0xba02]        # 0x423520
  417b1e:	nop
  417b1f:	nop
  417b20:	jmp    QWORD PTR [rip+0xb9f2]        # 0x423518
  417b26:	nop
  417b27:	nop
  417b28:	jmp    QWORD PTR [rip+0xb9e2]        # 0x423510
  417b2e:	nop
  417b2f:	nop
  417b30:	jmp    QWORD PTR [rip+0xb9d2]        # 0x423508
  417b36:	nop
  417b37:	nop
  417b38:	jmp    QWORD PTR [rip+0xb9c2]        # 0x423500
  417b3e:	nop
  417b3f:	nop
  417b40:	jmp    QWORD PTR [rip+0xb9b2]        # 0x4234f8
  417b46:	nop
  417b47:	nop
  417b48:	jmp    QWORD PTR [rip+0xb9a2]        # 0x4234f0
  417b4e:	nop
  417b4f:	nop
  417b50:	jmp    QWORD PTR [rip+0xb992]        # 0x4234e8
  417b56:	nop
  417b57:	nop
  417b58:	jmp    QWORD PTR [rip+0xb982]        # 0x4234e0
  417b5e:	nop
  417b5f:	nop
  417b60:	jmp    QWORD PTR [rip+0xb972]        # 0x4234d8
  417b66:	nop
  417b67:	nop
  417b68:	jmp    QWORD PTR [rip+0xb962]        # 0x4234d0
  417b6e:	nop
  417b6f:	nop
  417b70:	jmp    QWORD PTR [rip+0xb952]        # 0x4234c8
  417b76:	nop
  417b77:	nop
  417b78:	jmp    QWORD PTR [rip+0xb942]        # 0x4234c0
  417b7e:	nop
  417b7f:	nop
  417b80:	jmp    QWORD PTR [rip+0xb932]        # 0x4234b8
  417b86:	nop
  417b87:	nop
  417b88:	jmp    QWORD PTR [rip+0xb922]        # 0x4234b0
  417b8e:	nop
  417b8f:	nop
  417b90:	push   rbp
  417b91:	push   rdi
  417b92:	push   rsi
  417b93:	push   rbx
  417b94:	sub    rsp,0x118
  417b9b:	mov    ebx,ecx
  417b9d:	mov    rsi,rdx
  417ba0:	call   0x410ef0
  417ba5:	mov    QWORD PTR [rsp+0x28],0x81
  417bae:	call   0x401888
  417bb3:	test   eax,eax
  417bb5:	js     0x417ce7
  417bbb:	mov    ecx,0x36
  417bc0:	lea    rbp,[rip+0x14cb]        # 0x419092
  417bc7:	call   0x417730
  417bcc:	mov    rcx,QWORD PTR [rip+0x6abd]        # 0x41e690
  417bd3:	mov    r8,rsi
  417bd6:	mov    edx,ebx
  417bd8:	call   0x40d080
  417bdd:	mov    rax,QWORD PTR [rip+0x6aac]        # 0x41e690
  417be4:	mov    rax,QWORD PTR [rax+0x78]
  417be8:	test   BYTE PTR [rax+0x148],0xf
  417bef:	jne    0x417c91
  417bf5:	test   BYTE PTR [rax+0xe0],0xf
  417bfc:	je     0x417ccc
  417c02:	test   BYTE PTR [rax+0x78],0xf
  417c06:	mov    rdi,QWORD PTR [rax+0xe8]
  417c0d:	jne    0x417c9d
  417c13:	mov    ebx,0x10
  417c18:	lea    rcx,[rip+0x14c1]        # 0x4190e0
  417c1f:	lea    rsi,[rsp+0x40]
  417c24:	mov    rdx,rdi
  417c27:	call   0x401560
  417c2c:	movsxd r8,ebx
  417c2f:	mov    rdx,rsi
  417c32:	mov    ecx,0x1
  417c37:	call   0x401878
  417c3c:	test   eax,eax
  417c3e:	js     0x417d14
  417c44:	mov    DWORD PTR [rsp+0x38],ebx
  417c48:	lea    rbx,[rsp+0x80]
  417c50:	lea    rcx,[rsp+0x30]
  417c55:	lea    r8,[rsp+0x28]
  417c5a:	mov    QWORD PTR [rsp+0x30],rsi
  417c5f:	mov    rdx,rbx
  417c62:	call   0x401880
  417c67:	test   eax,eax
  417c69:	js     0x417d34
  417c6f:	mov    rdx,rbx
  417c72:	mov    r8,rbp
  417c75:	mov    rcx,rdi
  417c78:	call   0x401590
  417c7d:	test   eax,eax
  417c7f:	mov    ebx,eax
  417c81:	je     0x417cbb
  417c83:	mov    eax,ebx
  417c85:	add    rsp,0x118
  417c8c:	pop    rbx
  417c8d:	pop    rsi
  417c8e:	pop    rdi
  417c8f:	pop    rbp
  417c90:	ret    
  417c91:	mov    rbp,QWORD PTR [rax+0x150]
  417c98:	jmp    0x417bf5
  417c9d:	mov    ebx,DWORD PTR [rax+0x80]
  417ca3:	cmp    ebx,0x40
  417ca6:	jg     0x417d54
  417cac:	test   ebx,ebx
  417cae:	mov    eax,0x10
  417cb3:	cmovle ebx,eax
  417cb6:	jmp    0x417c18
  417cbb:	lea    rcx,[rip+0x1470]        # 0x419132
  417cc2:	mov    rdx,rbp
  417cc5:	call   0x401560
  417cca:	jmp    0x417c83
  417ccc:	call   QWORD PTR [rip+0xb8fe]        # 0x4235d0
  417cd2:	lea    rdx,[rip+0x13da]        # 0x4190b3
  417cd9:	lea    rcx,[rax+0x60]
  417cdd:	or     ebx,0xffffffff
  417ce0:	call   0x401530
  417ce5:	jmp    0x417c83
  417ce7:	mov    ecx,eax
  417ce9:	call   0x401870
  417cee:	mov    rbx,rax
  417cf1:	call   QWORD PTR [rip+0xb8d9]        # 0x4235d0
  417cf7:	lea    rdx,[rip+0x13a4]        # 0x4190a2
  417cfe:	lea    rcx,[rax+0x60]
  417d02:	mov    r8,rbx
  417d05:	call   0x401530
  417d0a:	mov    ecx,0x1
  417d0f:	call   0x4178b0
  417d14:	call   QWORD PTR [rip+0xb8b6]        # 0x4235d0
  417d1a:	lea    rdx,[rip+0x13e6]        # 0x419107
  417d21:	lea    rcx,[rax+0x60]
  417d25:	call   0x401530
  417d2a:	mov    ecx,0x1
  417d2f:	call   0x4178b0
  417d34:	call   QWORD PTR [rip+0xb896]        # 0x4235d0
  417d3a:	lea    rdx,[rip+0x13dd]        # 0x41911e
  417d41:	lea    rcx,[rax+0x60]
  417d45:	call   0x401530
  417d4a:	mov    ecx,0x1
  417d4f:	call   0x4178b0
  417d54:	call   QWORD PTR [rip+0xb876]        # 0x4235d0
  417d5a:	lea    rdx,[rip+0x1369]        # 0x4190ca
  417d61:	lea    rcx,[rax+0x60]
  417d65:	call   0x401530
  417d6a:	mov    ecx,0x1
  417d6f:	call   0x4178b0
  417d74:	nop
  417d75:	nop
  417d76:	nop
  417d77:	nop
  417d78:	nop
  417d79:	nop
  417d7a:	nop
  417d7b:	nop
  417d7c:	nop
  417d7d:	nop
  417d7e:	nop
  417d7f:	nop
  417d80:	(bad)  
  417d81:	(bad)  
  417d82:	(bad)  
  417d83:	(bad)  
  417d84:	(bad)  
  417d85:	(bad)  
  417d86:	(bad)  
  417d87:	inc    DWORD PTR [rax]
  417d89:	add    BYTE PTR [rax],al
  417d8b:	add    BYTE PTR [rax],al
  417d8d:	add    BYTE PTR [rax],al
  417d8f:	add    bh,bh
  417d91:	(bad)  
  417d92:	(bad)  
  417d93:	(bad)  
  417d94:	(bad)  
  417d95:	(bad)  
  417d96:	(bad)  
  417d97:	inc    DWORD PTR [rax]
  417d99:	add    BYTE PTR [rax],al
  417d9b:	add    BYTE PTR [rax],al
  417d9d:	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

0000000000418000 <.data>:
  418000:	or     al,BYTE PTR [rax]
	...
  41803e:	add    BYTE PTR [rax],al
  418040:	add    DWORD PTR [rax+0x2],edx
	...
  41804e:	add    BYTE PTR [rax],al
  418050:	(bad)  
  418051:	push   rdx
	...
  41806e:	add    BYTE PTR [rax],al
  418070:	(bad)  
  418071:	xchg   esi,eax
  418072:	add    BYTE PTR [r8],al
	...
  41807d:	add    BYTE PTR [rax],al
  41807f:	add    al,al
  418081:	xchg   ecx,eax
  418082:	add    BYTE PTR [r8],al
  418085:	add    BYTE PTR [rax],al
  418087:	add    bl,bl
  418089:	xchg   edx,eax
  41808a:	add    BYTE PTR [r8],al
  41808d:	add    BYTE PTR [rax],al
  41808f:	add    BYTE PTR [rdx-0x69],al
  418092:	add    BYTE PTR [r8],al
	...
  41809d:	add    BYTE PTR [rax],al
  41809f:	add    BYTE PTR [rax-0x6a],ch
  4180a2:	add    BYTE PTR [r8],al
  4180a5:	add    BYTE PTR [rax],al
  4180a7:	add    ah,cl
  4180a9:	xchg   esi,eax
  4180aa:	add    BYTE PTR [r8],al
  4180ad:	add    BYTE PTR [rax],al
  4180af:	add    dh,cl
  4180b1:	xchg   esi,eax
  4180b2:	add    BYTE PTR [r8],al
  4180b5:	add    BYTE PTR [rax],al
  4180b7:	add    BYTE PTR [rax-0x7f],al
  4180ba:	add    BYTE PTR [r8],al
  4180bd:	add    BYTE PTR [rax],al
  4180bf:	add    BYTE PTR [rsi+rdx*4+0x41],bh
	...
  4180d6:	add    BYTE PTR [rax],al
  4180d8:	sbb    dl,0x40
	...
  4180e7:	add    BYTE PTR [rsi],al
  4180e9:	add    BYTE PTR [rax],al
  4180eb:	add    BYTE PTR [rax],0x80
  4180ee:	add    BYTE PTR [rax+0x7],al
  4180f4:	add    al,0x0
	...
  4180fe:	add    BYTE PTR [rax],al
  418100:	push   rcx
  418101:	xchg   edi,eax
  418102:	add    BYTE PTR [r8],al
	...
  418115:	add    BYTE PTR [rax],al
  418117:	add    BYTE PTR [rax+0x4191],dl
	...
  418141:	add    BYTE PTR [rax+rax*1+0x0],ah
  418145:	add    BYTE PTR [rax+rax*1+0x0],ah
  418149:	add    BYTE PTR [rax],0x0
  41814c:	add    DWORD PTR [rax],eax
  41814e:	add    BYTE PTR [rax],al
  418150:	and    BYTE PTR [rax+0x0],dl
	...
  418177:	add    BYTE PTR [rax],dl
  418179:	sbb    DWORD PTR [rax+0x0],eax
  41817c:	add    BYTE PTR [rax],al
  41817e:	add    BYTE PTR [rax],al
  418180:	ss xchg ebp,eax
  418182:	add    BYTE PTR [r8],al
  418185:	add    BYTE PTR [rax],al
  418187:	add    BYTE PTR [rdi-0x6b],al
  41818a:	add    BYTE PTR [r8],al
  41818d:	add    BYTE PTR [rax],al
  41818f:	add    BYTE PTR [rbp-0x6b],cl
  418192:	add    BYTE PTR [r8],al
	...
  4181a5:	add    BYTE PTR [rax],al
  4181a7:	add    BYTE PTR [rcx],al
  4181a9:	add    BYTE PTR [rbx+0x0],dh
  4181ac:	add    DWORD PTR [rax],eax
  4181ae:	jae    0x4181b0
  4181b0:	add    BYTE PTR [rax+0x10000],al
  4181b6:	add    BYTE PTR [rax],al
  4181b8:	and    BYTE PTR [rax+0x0],dl
	...
  4181df:	add    BYTE PTR [rax+0x4018],dh
  4181e5:	add    BYTE PTR [rax],al
  4181e7:	add    BYTE PTR [rbx-0x6b],dl
  4181ea:	add    BYTE PTR [r8],al
  4181ed:	add    BYTE PTR [rax],al
  4181ef:	add    BYTE PTR [rcx-0x6b],dh
  4181f2:	add    BYTE PTR [r8],al
  4181f5:	add    BYTE PTR [rax],al
  4181f7:	add    BYTE PTR [rcx-0x6b],bh
  4181fa:	add    BYTE PTR [r8],al
	...
  41820d:	add    BYTE PTR [rax],al
  41820f:	add    BYTE PTR [rdx],al
  418211:	add    BYTE PTR [rbp+0x0],dh
  418214:	add    al,BYTE PTR [rax]
  418216:	jne    0x418218
  418218:	add    BYTE PTR [rax+0x10000],al
  41821e:	add    BYTE PTR [rax],al
  418220:	and    BYTE PTR [rax],dl
	...
  41824e:	add    BYTE PTR [rax],al
  418250:	adc    DWORD PTR [rbp+0x41],0x95940000
  41825a:	add    BYTE PTR [r8],al
  41825d:	add    BYTE PTR [rax],al
  41825f:	add    BYTE PTR [rbp+0x4195],bl
	...
  418275:	add    BYTE PTR [rax],al
  418277:	add    BYTE PTR [rbx],al
  418279:	add    BYTE PTR [rax+0x0],dh
  41827c:	add    eax,DWORD PTR [rax]
  41827e:	jo     0x418280
  418280:	add    BYTE PTR [rax+0x10000],al
  418286:	add    BYTE PTR [rax],al
  418288:	and    BYTE PTR [rax],dl
	...
  4182b6:	add    BYTE PTR [rax],al
  4182b8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4182b9:	xchg   ebp,eax
  4182ba:	add    BYTE PTR [r8],al
  4182bd:	add    BYTE PTR [rax],al
  4182bf:	add    BYTE PTR [rsi+0x4195],bh
  4182c5:	add    BYTE PTR [rax],al
  4182c7:	add    ch,al
  4182c9:	xchg   ebp,eax
  4182ca:	add    BYTE PTR [r8],al
	...
  4182dd:	add    BYTE PTR [rax],al
  4182df:	add    BYTE PTR [rax+rax*1],al
  4182e2:	jbe    0x4182e4
  4182e4:	add    BYTE PTR [rax-0x7fffff8a],al
  4182ea:	add    BYTE PTR [rax],al
  4182ec:	add    DWORD PTR [rax],eax
  4182ee:	add    BYTE PTR [rax],al
  4182f0:	add    BYTE PTR [rcx],dl
  4182f2:	add    eax,DWORD PTR [rax]
  4182f4:	add    al,BYTE PTR [rax]
	...
  418316:	add    BYTE PTR [rax],al
  418318:	push   rax
  418319:	mov    bh,0x40
  41831b:	add    BYTE PTR [rax],al
  41831d:	add    BYTE PTR [rax],al
  41831f:	add    BYTE PTR [rsi+rdx*4],dh
  418322:	add    BYTE PTR [r8],al
	...
  41832d:	add    BYTE PTR [rax],al
  41832f:	add    BYTE PTR [rax-0x6a],bl
  418332:	add    BYTE PTR [r8],al
	...
  418345:	add    BYTE PTR [rax],al
  418347:	add    BYTE PTR [rip+0x6800],al        # 0x41eb4d
  41834d:	sub    BYTE PTR [rax+0x0],0x0
  418351:	add    BYTE PTR [rax],0x0
  418354:	add    DWORD PTR [rax],eax
  418356:	add    BYTE PTR [rax],al
  418358:	add    BYTE PTR [rcx],al
  41835a:	add    al,BYTE PTR [rax]
  41835c:	add    eax,DWORD PTR [rax]
	...
  41837e:	add    BYTE PTR [rax],al
  418380:	nop
  418381:	sbb    BYTE PTR [rax+0x0],al
  418384:	add    BYTE PTR [rax],al
  418386:	add    BYTE PTR [rax],al
  418388:	int3   
  418389:	xchg   ebp,eax
  41838a:	add    BYTE PTR [r8],al
	...
  418395:	add    BYTE PTR [rax],al
  418397:	add    al,bh
  418399:	xchg   ebp,eax
  41839a:	add    BYTE PTR [r8],al
	...
  4183ad:	add    BYTE PTR [rax],al
  4183af:	add    BYTE PTR [rsi],al
  4183b1:	add    BYTE PTR [rcx],ah
  4183b3:	add    BYTE PTR [rax],al
  4183b5:	and    BYTE PTR [rcx],0x0
  4183b8:	add    BYTE PTR [rax+0x10000],al
  4183be:	add    BYTE PTR [rax],al
  4183c0:	add    BYTE PTR [rcx],al
  4183c2:	or     BYTE PTR [rax],al
  4183c4:	add    al,0x0
	...
  4183e6:	add    BYTE PTR [rax],al
  4183e8:	and    BYTE PTR [rdi],0x40
  4183eb:	add    BYTE PTR [rax],al
  4183ed:	add    BYTE PTR [rax],al
  4183ef:	add    ah,cl
  4183f1:	xchg   ebp,eax
  4183f2:	add    BYTE PTR [r8],al
	...
  4183fd:	add    BYTE PTR [rax],al
  4183ff:	add    al,bh
  418401:	xchg   ebp,eax
  418402:	add    BYTE PTR [r8],al
	...
  41843d:	add    BYTE PTR [rax],al
  41843f:	add    BYTE PTR [rcx],al
	...
  418481:	add    DWORD PTR [rdx],eax
  418483:	add    eax,DWORD PTR [rax*1+0x9080706]
  41848a:	or     cl,BYTE PTR [rbx]
  41848c:	or     al,0xd
  41848e:	(bad)  
  41848f:	movups xmm2,XMMWORD PTR [rcx]
  418492:	adc    dl,BYTE PTR [rbx]
  418494:	adc    al,0x15
  418496:	(bad)  
  418497:	(bad)  
  418498:	sbb    BYTE PTR [rcx],bl
  41849a:	sbb    bl,BYTE PTR [rbx]
  41849c:	sbb    al,0x1d
  41849e:	(bad)  
  41849f:	(bad)  
  4184a0:	and    BYTE PTR [rcx],ah
  4184a2:	and    ah,BYTE PTR [rbx]
  4184a4:	and    al,0x25
  4184a6:	es (bad) 
  4184a8:	sub    BYTE PTR [rcx],ch
  4184aa:	sub    ch,BYTE PTR [rbx]
  4184ac:	sub    al,0x2d
  4184ae:	cs (bad) 
  4184b0:	xor    BYTE PTR [rcx],dh
  4184b2:	xor    dh,BYTE PTR [rbx]
  4184b4:	xor    al,0x35
  4184b6:	ss (bad) 
  4184b8:	cmp    BYTE PTR [rcx],bh
  4184ba:	cmp    bh,BYTE PTR [rbx]
  4184bc:	cmp    al,0x3d
  4184be:	ds (bad) 
  4184c0:	rex (bad) 
  4184c2:	(bad)
  4184c7:	addr32 push 0x6c6b6a69
  4184cd:	ins    DWORD PTR es:[rdi],dx
  4184ce:	outs   dx,BYTE PTR ds:[rsi]
  4184cf:	outs   dx,DWORD PTR ds:[rsi]
  4184d0:	jo     0x418543
  4184d2:	jb     0x418547
  4184d4:	je     0x41854b
  4184d6:	jbe    0x41854f
  4184d8:	js     0x418553
  4184da:	jp     0x418537
  4184dc:	pop    rsp
  4184dd:	pop    rbp
  4184de:	pop    rsi
  4184df:	pop    rdi
  4184e0:	(bad)  
  4184e1:	(bad)  
  4184e2:	(bad)
  4184e7:	addr32 push 0x6c6b6a69
  4184ed:	ins    DWORD PTR es:[rdi],dx
  4184ee:	outs   dx,BYTE PTR ds:[rsi]
  4184ef:	outs   dx,DWORD PTR ds:[rsi]
  4184f0:	jo     0x418563
  4184f2:	jb     0x418567
  4184f4:	je     0x41856b
  4184f6:	jbe    0x41856f
  4184f8:	js     0x418573
  4184fa:	jp     0x418577
  4184fc:	jl     0x41857b
  4184fe:	jle    0x41857f
  418500:	add    BYTE PTR [rcx-0x7a7b7c7e],0x86
  418507:	xchg   DWORD PTR [rax-0x73747577],ecx
  41850d:	lea    ecx,[rsi-0x6d6e6f71]
  418513:	xchg   ebx,eax
  418514:	xchg   esp,eax
  418515:	xchg   ebp,eax
  418516:	xchg   esi,eax
  418517:	xchg   edi,eax
  418518:	cwde   
  418519:	cdq    
  41851a:	(bad)  
  41851b:	fwait
  41851c:	pushf  
  41851d:	popf   
  41851e:	sahf   
  41851f:	lahf   
  418520:	movabs al,ds:0xa8a7a6a5a4a3a2a1
  418529:	test   eax,0xadacabaa
  41852e:	scas   al,BYTE PTR es:[rdi]
  41852f:	scas   eax,DWORD PTR es:[rdi]
  418530:	mov    al,0xb1
  418532:	mov    dl,0xb3
  418534:	mov    ah,0xb5
  418536:	mov    dh,0xb7
  418538:	mov    eax,0xbcbbbab9
  41853d:	mov    ebp,0xc1c0bfbe
  418542:	ret    0xc4c3
  418545:	(bad)
  418548:	enter  0xcac9,0xcb
  41854c:	int3   
  41854d:	int    0xce
  41854f:	iret   
  418550:	rcl    cl,1
  418552:	rcl    bl,cl
  418554:	(bad)  
  418555:	(bad)  
  418556:	(bad)  
  418557:	xlat   BYTE PTR ds:[rbx]
  418558:	fcomp  st(1)
  41855a:	fcmovu st,st(3)
  41855c:	(bad)  
  41855e:	(bad)  
  418560:	loopne 0x418543
  418562:	loop   0x418547
  418564:	in     al,0xe5
  418566:	out    0xe7,al
  418568:	call   0xffffffffed2d7056
  41856d:	in     eax,dx
  41856e:	out    dx,al
  41856f:	out    dx,eax
  418570:	lock icebp 
  418572:	repnz repz hlt 
  418575:	cmc    
  418576:	div    bh
  418578:	clc    
  418579:	stc    
  41857a:	cli    
  41857b:	sti    
  41857c:	cld    
  41857d:	std    
  41857e:	(bad)  
  41857f:	inc    DWORD PTR [rcx]
  418581:	nop
  418582:	add    al,BYTE PTR [rax]
	...
  418590:	xchg   edi,eax
  418591:	add    al,BYTE PTR [rax]
	...
  4185af:	add    BYTE PTR [rdi+riz*4],ah
  4185b2:	add    BYTE PTR [r8],al
	...
  4185bd:	add    BYTE PTR [rax],al
  4185bf:	add    BYTE PTR [rax+0x41a2],al
  4185c5:	add    BYTE PTR [rax],al
  4185c7:	add    BYTE PTR [rbp+0x41a3],bl
  4185cd:	add    BYTE PTR [rax],al
  4185cf:	add    BYTE PTR [rbx-0x57],bl
  4185d2:	add    BYTE PTR [r8],al
	...
  4185dd:	add    BYTE PTR [rax],al
  4185df:	add    BYTE PTR [rax],dh
  4185e1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4185e2:	add    BYTE PTR [r8],al
  4185e5:	add    BYTE PTR [rax],al
  4185e7:	add    ch,cl
  4185e9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4185ea:	add    BYTE PTR [r8],al
  4185ed:	add    BYTE PTR [rax],al
  4185ef:	add    BYTE PTR [rsi-0x58],bh
  4185f2:	add    BYTE PTR [r8],al
  4185f5:	add    BYTE PTR [rax],al
  4185f7:	add    BYTE PTR [rax+0x4186],al
  4185fd:	add    BYTE PTR [rax],al
  4185ff:	add    BYTE PTR [rcx+0x41a7],ch
	...
  418615:	add    BYTE PTR [rax],al
  418617:	add    al,dl
  418619:	loopne 0x41865b
	...
  418627:	add    BYTE PTR [rax+rax*1],al
  41862a:	add    BYTE PTR [rax-0x7fff8000],al
  418630:	add    eax,0x2000000
	...
  418655:	add    BYTE PTR [rax],al
  418657:	add    BYTE PTR [rsi-0x64],al
  41865a:	add    BYTE PTR [r8],al
	...
  418681:	add    BYTE PTR [rdi+0x0],ch
  418684:	add    BYTE PTR [rax],al
  418686:	outs   dx,DWORD PTR ds:[rsi]
  418687:	add    BYTE PTR [rax],al
  418689:	add    BYTE PTR [rax],0x0
  41868c:	add    DWORD PTR [rax],eax
  41868e:	add    BYTE PTR [rax],al
  418690:	and    BYTE PTR [rax],dl
	...
  4186be:	add    BYTE PTR [rax],al
  4186c0:	cmp    eax,0x41a6
  4186c5:	add    BYTE PTR [rax],al
  4186c7:	add    BYTE PTR [rax-0x5a],dl
  4186ca:	add    BYTE PTR [r8],al
  4186cd:	add    BYTE PTR [rax],al
  4186cf:	add    BYTE PTR [rdi-0x5a],dl
  4186d2:	add    BYTE PTR [r8],al
	...
  4186e5:	add    BYTE PTR [rax],al
  4186e7:	add    BYTE PTR [rcx],al
  4186e9:	add    BYTE PTR [rbx+0x0],dh
  4186ec:	add    DWORD PTR [rax],eax
  4186ee:	jae    0x4186f0
  4186f0:	add    BYTE PTR [rax+0x10000],al
  4186f6:	add    BYTE PTR [rax],al
  4186f8:	add    BYTE PTR [rax],bl
	...
  418726:	add    BYTE PTR [rax],al
  418728:	pop    rsi
  418729:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41872a:	add    BYTE PTR [r8],al
  41872d:	add    BYTE PTR [rax],al
  41872f:	add    BYTE PTR [rsi-0x5a],bh
  418732:	add    BYTE PTR [r8],al
  418735:	add    BYTE PTR [rax],al
  418737:	add    BYTE PTR [rdi+0x41a6],al
  41873d:	add    BYTE PTR [rax],al
  41873f:	add    BYTE PTR [rsi+riz*4+0x41],al
  418746:	add    BYTE PTR [rax],al
  418748:	lea    esp,[rsi+0x41]
  41874e:	add    BYTE PTR [rax],al
  418750:	add    al,BYTE PTR [rax]
  418752:	jbe    0x418754
  418754:	add    BYTE PTR [rax-0x7fffff8a],al
  41875a:	add    BYTE PTR [rax],al
  41875c:	add    DWORD PTR [rax],eax
  41875e:	add    BYTE PTR [rax],al
  418760:	add    BYTE PTR [rcx],dl
  418762:	add    eax,DWORD PTR [rax]
  418764:	add    al,BYTE PTR [rax]
	...
  418786:	add    BYTE PTR [rax],al
  418788:	push   rax
  418789:	mov    bh,0x40
  41878b:	add    BYTE PTR [rax],al
  41878d:	add    BYTE PTR [rax],al
  41878f:	add    al,bh
  418791:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  418792:	add    BYTE PTR [r8],al
	...
  41879d:	add    BYTE PTR [rax],al
  41879f:	add    BYTE PTR [rdi+riz*4],bl
  4187a2:	add    BYTE PTR [r8],al
	...
  4187b5:	add    BYTE PTR [rax],al
  4187b7:	add    BYTE PTR [rbx],al
  4187b9:	add    BYTE PTR [rdi],bh
  4187bb:	add    BYTE PTR [rax],al
  4187bd:	cmp    BYTE PTR [rdi],0x0
  4187c0:	add    BYTE PTR [rax+0x10000],al
  4187c6:	add    BYTE PTR [rax],al
  4187c8:	add    BYTE PTR [rcx],al
  4187ca:	add    al,BYTE PTR [rax]
  4187cc:	add    eax,DWORD PTR [rax]
	...
  4187ee:	add    BYTE PTR [rax],al
  4187f0:	loopne 0x4187d2
  4187f2:	add    BYTE PTR [rax],al
  4187f5:	add    BYTE PTR [rax],al
  4187f7:	add    BYTE PTR [rax+0x41a6],dl
	...
  418805:	add    BYTE PTR [rax],al
  418807:	add    BYTE PTR [rsi+riz*4+0x41],bh
	...
  41881e:	add    BYTE PTR [rax],al
  418820:	add    al,0x0
  418822:	and    DWORD PTR [rax],eax
  418824:	add    BYTE PTR [rax-0x7fffffdf],al
  41882a:	add    BYTE PTR [rax],al
  41882c:	add    DWORD PTR [rax],eax
  41882e:	add    BYTE PTR [rax],al
  418830:	add    BYTE PTR [rcx],al
  418832:	or     BYTE PTR [rax],al
  418834:	add    al,0x0
	...
  418856:	add    BYTE PTR [rax],al
  418858:	and    BYTE PTR [rdi],0x40
  41885b:	add    BYTE PTR [rax],al
  41885d:	add    BYTE PTR [rax],al
  41885f:	add    BYTE PTR [rax+0x41a6],dl
	...
  41886d:	add    BYTE PTR [rax],al
  41886f:	add    BYTE PTR [rsi+riz*4+0x41],bh
	...
  418886:	add    BYTE PTR [rax],al
  418888:	(bad)  
  418889:	mov    BYTE PTR [rcx+0x0],0x0
  41888d:	add    BYTE PTR [rax],al
  41888f:	add    BYTE PTR [rcx],al
	...
  4188bd:	add    BYTE PTR [rax],al
  4188bf:	add    BYTE PTR [rax+rax*1+0x0],ch
  4188c3:	add    BYTE PTR [rax],al
  4188c5:	add    BYTE PTR [rax],al
  4188c7:	add    BYTE PTR [rdi],dh
  4188c9:	mov    WORD PTR [rcx+0x0],es
  4188cc:	add    BYTE PTR [rax],al
  4188ce:	add    BYTE PTR [rax],al
  4188d0:	xor    cl,BYTE PTR [rcx+rax*2+0x0]
  4188d7:	add    BYTE PTR [rip+0x418c],ch        # 0x41ca69
  4188dd:	add    BYTE PTR [rax],al
  4188df:	add    BYTE PTR [rax],ch
  4188e1:	mov    WORD PTR [rcx+0x0],es
  4188e4:	add    BYTE PTR [rax],al
  4188e6:	add    BYTE PTR [rax],al
  4188e8:	rex mov BYTE PTR [rcx+0x0],0x0
  4188ed:	add    BYTE PTR [rax],al
  4188ef:	add    BYTE PTR [rdi-0x3a],bl
  4188f2:	add    BYTE PTR [r8],al
  4188f5:	add    BYTE PTR [rax],al
  4188f7:	add    BYTE PTR [rbx+0x41c6],dl
  4188fd:	add    BYTE PTR [rax],al
  4188ff:	add    cl,al
  418901:	mov    BYTE PTR [rcx+0x0],0x0
  418905:	add    BYTE PTR [rax],al
  418907:	add    BYTE PTR [rdi+rax*8],ah
  41890a:	add    BYTE PTR [r8],al
  41890d:	add    BYTE PTR [rax],al
  41890f:	add    BYTE PTR [rax-0x39],cl
  418912:	add    BYTE PTR [r8],al
  418915:	add    BYTE PTR [rax],al
  418917:	add    BYTE PTR [rdx-0x39],bh
  41891a:	add    BYTE PTR [r8],al
  41891d:	add    BYTE PTR [rax],al
  41891f:	add    ch,dl
  418921:	mov    DWORD PTR [rcx+0x0],0x0
  418928:	jmp    0x4188f1
  41892a:	add    BYTE PTR [r8],al
  41892d:	add    BYTE PTR [rax],al
  41892f:	add    BYTE PTR [rax+rcx*8],ah
  418932:	add    BYTE PTR [r8],al
  418935:	add    BYTE PTR [rax],al
  418937:	add    BYTE PTR [rdi-0x38],al
  41893a:	add    BYTE PTR [r8],al
  41893d:	add    BYTE PTR [rax],al
  41893f:	add    BYTE PTR [rax+rcx*8+0x41],dh
  418943:	add    BYTE PTR [rax],al
  418945:	add    BYTE PTR [rax],al
  418947:	add    BYTE PTR [rax+rcx*8+0x41],dl
  41894e:	add    BYTE PTR [rax],al
  418950:	mov    edx,0x41c8
  418955:	add    BYTE PTR [rax],al
  418957:	add    bl,bl
  418959:	enter  0x41,0x0
  41895d:	add    BYTE PTR [rax],al
  41895f:	add    BYTE PTR [rcx+rcx*8],cl
  418962:	add    BYTE PTR [r8],al
  418965:	add    BYTE PTR [rax],al
  418967:	add    BYTE PTR [rcx+rcx*8],ch
  41896a:	add    BYTE PTR [r8],al
  41896d:	add    BYTE PTR [rax],al
  41896f:	add    BYTE PTR [rax-0x37],ah
  418972:	add    BYTE PTR [r8],al
  418975:	add    BYTE PTR [rax],al
  418977:	add    BYTE PTR [rbp+0x41c9],al
  41897d:	add    BYTE PTR [rax],al
  41897f:	add    BYTE PTR [rsi+0x41c9],bl
  418985:	add    BYTE PTR [rax],al
  418987:	add    ah,al
  418989:	leave  
  41898a:	add    BYTE PTR [r8],al
  41898d:	add    BYTE PTR [rax],al
  41898f:	add    dh,dl
  418991:	leave  
  418992:	add    BYTE PTR [r8],al
  418995:	add    BYTE PTR [rax],al
  418997:	add    BYTE PTR [rdx+rcx*8+0x41],ah
  41899b:	add    BYTE PTR [rax],al
  41899d:	add    BYTE PTR [rax],al
  41899f:	add    BYTE PTR [rbx+0x41ca],dl
  4189a5:	add    BYTE PTR [rax],al
  4189a7:	add    BYTE PTR [rdx+0x41ca],bh
  4189ad:	add    BYTE PTR [rax],al
  4189af:	add    bh,al
  4189b1:	retf   0x41
  4189b4:	add    BYTE PTR [rax],al
  4189b6:	add    BYTE PTR [rax],al
  4189b8:	loope  0x418984
  4189ba:	add    BYTE PTR [r8],al
  4189bd:	add    BYTE PTR [rax],al
  4189bf:	add    bl,bh
  4189c1:	retf   0x41
  4189c4:	add    BYTE PTR [rax],al
  4189c6:	add    BYTE PTR [rax],al
  4189c8:	es retf 
  4189ca:	add    BYTE PTR [r8],al
  4189cd:	add    BYTE PTR [rax],al
  4189cf:	add    BYTE PTR [rdx-0x35],cl
  4189d2:	add    BYTE PTR [r8],al
  4189d5:	add    BYTE PTR [rax],al
  4189d7:	add    BYTE PTR [rdi-0x35],dh
  4189da:	add    BYTE PTR [r8],al
  4189dd:	add    BYTE PTR [rax],al
  4189df:	add    BYTE PTR [rbx+rcx*8+0x41],dl
  4189e6:	add    BYTE PTR [rax],al
  4189e8:	mov    edi,0x41cb
  4189ed:	add    BYTE PTR [rax],al
  4189ef:	add    BYTE PTR [rdx],dl
  4189f1:	int3   
  4189f2:	add    BYTE PTR [r8],al
  4189f5:	add    BYTE PTR [rax],al
  4189f7:	add    BYTE PTR [rax],bh
  4189f9:	int3   
  4189fa:	add    BYTE PTR [r8],al
  4189fd:	add    BYTE PTR [rax],al
  4189ff:	add    BYTE PTR [rsi-0x34],ah
  418a02:	add    BYTE PTR [r8],al
  418a05:	add    BYTE PTR [rax],al
  418a07:	add    BYTE PTR [rbx+0x41cc],dl
  418a0d:	add    BYTE PTR [rax],al
  418a0f:	add    BYTE PTR [rsi+0x41cc],ch
  418a15:	add    BYTE PTR [rax],al
  418a17:	add    bh,bl
  418a19:	int3   
  418a1a:	add    BYTE PTR [r8],al
  418a1d:	add    BYTE PTR [rax],al
  418a1f:	add    BYTE PTR [rax],dl
  418a21:	int    0x41
  418a23:	add    BYTE PTR [rax],al
  418a25:	add    BYTE PTR [rax],al
  418a27:	add    BYTE PTR [rbx],ch
  418a29:	int    0x41
  418a2b:	add    BYTE PTR [rax],al
  418a2d:	add    BYTE PTR [rax],al
  418a2f:	add    BYTE PTR [rbp+rcx*8+0x41],cl
  418a33:	add    BYTE PTR [rax],al
  418a35:	add    BYTE PTR [rax],al
  418a37:	add    BYTE PTR [rax-0x33],dh
  418a3a:	add    BYTE PTR [r8],al
  418a3d:	add    BYTE PTR [rax],al
  418a3f:	add    BYTE PTR [rdx+0x41cd],ah
  418a45:	add    BYTE PTR [rax],al
  418a47:	add    BYTE PTR [rbp+rcx*8+0x41],dh
  418a4e:	add    BYTE PTR [rax],al
  418a50:	(bad)  
  418a51:	int    0x41
  418a53:	add    BYTE PTR [rax],al
  418a55:	add    BYTE PTR [rax],al
  418a57:	add    BYTE PTR [rdx],bl
  418a59:	(bad)  
  418a5a:	add    BYTE PTR [r8],al
  418a5d:	add    BYTE PTR [rax],al
  418a5f:	add    BYTE PTR [rcx-0x32],cl
  418a62:	add    BYTE PTR [r8],al
  418a65:	add    BYTE PTR [rax],al
  418a67:	add    BYTE PTR [rcx-0x32],dh
  418a6a:	add    BYTE PTR [r8],al
  418a6d:	add    BYTE PTR [rax],al
  418a6f:	add    BYTE PTR [rsi+rcx*8+0x41],dl
  418a76:	add    BYTE PTR [rax],al
  418a78:	lods   eax,DWORD PTR ds:[rsi]
  418a79:	(bad)  
  418a7a:	add    BYTE PTR [r8],al
  418a7d:	add    BYTE PTR [rax],al
  418a7f:	add    BYTE PTR [rbp+0x41ce],bh
  418a85:	add    BYTE PTR [rax],al
  418a87:	add    ah,cl
  418a89:	(bad)  
  418a8a:	add    BYTE PTR [r8],al
  418a8d:	add    BYTE PTR [rax],al
  418a8f:	add    dl,dl
  418a91:	(bad)  
  418a92:	add    BYTE PTR [r8],al
  418a95:	add    BYTE PTR [rax],al
  418a97:	add    BYTE PTR [rbx],al
  418a99:	iret   
  418a9a:	add    BYTE PTR [r8],al
  418a9d:	add    BYTE PTR [rax],al
  418a9f:	add    BYTE PTR [rax],dh
  418aa1:	iret   
  418aa2:	add    BYTE PTR [r8],al
  418aa5:	add    BYTE PTR [rax],al
  418aa7:	add    BYTE PTR [rax-0x31],ch
  418aaa:	add    BYTE PTR [r8],al
  418aad:	add    BYTE PTR [rax],al
  418aaf:	add    BYTE PTR [rbp+0x41cf],al
  418ab5:	add    BYTE PTR [rax],al
  418ab7:	add    BYTE PTR [rdi+0x41cf],ch
  418abd:	add    BYTE PTR [rax],al
  418abf:	add    cl,bl
  418ac1:	iret   
  418ac2:	add    BYTE PTR [r8],al
  418ac5:	add    BYTE PTR [rax],al
  418ac7:	add    bl,dh
  418ac9:	iret   
  418aca:	add    BYTE PTR [r8],al
  418acd:	add    BYTE PTR [rax],al
  418acf:	add    BYTE PTR [rdx],al
  418ad1:	rol    BYTE PTR [rcx+0x0],1
  418ad4:	add    BYTE PTR [rax],al
  418ad6:	add    BYTE PTR [rax],al
  418ad8:	and    al,dl
  418ada:	add    BYTE PTR [r8],al
  418add:	add    BYTE PTR [rax],al
  418adf:	add    BYTE PTR [rdx],bh
  418ae1:	rol    BYTE PTR [rcx+0x0],1
  418ae4:	add    BYTE PTR [rax],al
  418ae6:	add    BYTE PTR [rax],al
  418ae8:	rex.WXB rol BYTE PTR [r9+0x0],1
  418aec:	add    BYTE PTR [rax],al
  418aee:	add    BYTE PTR [rax],al
  418af0:	jp     0x418ac2
  418af2:	add    BYTE PTR [r8],al
  418af5:	add    BYTE PTR [rax],al
  418af7:	add    BYTE PTR [rcx+0x41d0],bl
  418afd:	add    BYTE PTR [rax],al
  418aff:	add    BYTE PTR [rax+rdx*8+0x41],dh
  418b06:	add    BYTE PTR [rax],al
  418b08:	sbb    edx,ecx
  418b0a:	add    BYTE PTR [r8],al
  418b0d:	add    BYTE PTR [rax],al
  418b0f:	add    BYTE PTR [rbp+0x41d1],al
  418b15:	add    BYTE PTR [rax],al
  418b17:	add    BYTE PTR [rbp+0x41d1],bh
  418b1d:	add    BYTE PTR [rax],al
  418b1f:	add    bh,bl
  418b21:	rol    DWORD PTR [rcx+0x0],1
  418b24:	add    BYTE PTR [rax],al
  418b26:	add    BYTE PTR [rax],al
  418b28:	or     dl,dl
  418b2a:	add    BYTE PTR [r8],al
  418b2d:	add    BYTE PTR [rax],al
  418b2f:	add    BYTE PTR [rbp-0x2e],cl
  418b32:	add    BYTE PTR [r8],al
  418b35:	add    BYTE PTR [rax],al
  418b37:	add    BYTE PTR [rsi-0x2e],ch
  418b3a:	add    BYTE PTR [r8],al
  418b3d:	add    BYTE PTR [rax],al
  418b3f:	add    BYTE PTR [rdi+0x41d2],al
  418b45:	add    BYTE PTR [rax],al
  418b47:	add    BYTE PTR [rdx+0x41d2],ch
  418b4d:	add    BYTE PTR [rax],al
  418b4f:	add    al,dl
  418b51:	rol    BYTE PTR [rcx+0x0],cl
  418b54:	add    BYTE PTR [rax],al
  418b56:	add    BYTE PTR [rax],al
  418b58:	fcom   st(2)
  418b5a:	add    BYTE PTR [r8],al
  418b5d:	add    BYTE PTR [rax],al
  418b5f:	add    BYTE PTR [rax],cl
  418b61:	rol    DWORD PTR [rcx+0x0],cl
  418b64:	add    BYTE PTR [rax],al
  418b66:	add    BYTE PTR [rax],al
  418b68:	sub    dl,bl
  418b6a:	add    BYTE PTR [r8],al
  418b6d:	add    BYTE PTR [rax],al
  418b6f:	add    BYTE PTR [rip+0x41d3],bh        # 0x41cd48
  418b75:	add    BYTE PTR [rax],al
  418b77:	add    BYTE PTR [rcx-0x2d],ah
  418b7a:	add    BYTE PTR [r8],al
  418b7d:	add    BYTE PTR [rax],al
  418b7f:	add    BYTE PTR [rbp+0x41d3],al
  418b85:	add    BYTE PTR [rax],al
  418b87:	add    BYTE PTR [rbp+0x41d3],bh
  418b8d:	add    BYTE PTR [rax],al
  418b8f:	add    bh,dl
  418b91:	rol    DWORD PTR [rcx+0x0],cl
  418b94:	add    BYTE PTR [rax],al
  418b96:	add    BYTE PTR [rax],al
  418b98:	repnz rol DWORD PTR [rcx+0x0],cl
  418b9c:	add    BYTE PTR [rax],al
  418b9e:	add    BYTE PTR [rax],al
  418ba0:	call   rbx
  418ba2:	add    BYTE PTR [r8],al
  418ba5:	add    BYTE PTR [rax],al
  418ba7:	add    BYTE PTR [rsi],bl
  418ba9:	(bad)  
  418baa:	add    BYTE PTR [r8],al
  418bad:	add    BYTE PTR [rax],al
  418baf:	add    BYTE PTR [rsp+rdx*8],ch
  418bb2:	add    BYTE PTR [r8],al
  418bb5:	add    BYTE PTR [rax],al
  418bb7:	add    BYTE PTR [rcx-0x2c],dl
  418bba:	add    BYTE PTR [r8],al
  418bbd:	add    BYTE PTR [rax],al
  418bbf:	add    BYTE PTR [rbp-0x2c],ch
  418bc2:	add    BYTE PTR [r8],al
  418bc5:	add    BYTE PTR [rax],al
  418bc7:	add    BYTE PTR [rbx-0x2c],dh
  418bca:	add    BYTE PTR [r8],al
  418bcd:	add    BYTE PTR [rax],al
  418bcf:	add    BYTE PTR [rcx+0x41d4],ah
  418bd5:	add    BYTE PTR [rax],al
  418bd7:	add    BYTE PTR [rbp+0x41d4],bh
  418bdd:	add    BYTE PTR [rax],al
  418bdf:	add    bh,bh
  418be1:	(bad)  
  418be2:	add    BYTE PTR [r8],al
  418be5:	add    BYTE PTR [rax],al
  418be7:	add    BYTE PTR [rcx],bl
  418be9:	(bad)  
  418bea:	add    BYTE PTR [r8],al
  418bed:	add    BYTE PTR [rax],al
  418bef:	add    BYTE PTR [rdx],dh
  418bf1:	(bad)  
  418bf2:	add    BYTE PTR [r8],al
  418bf5:	add    BYTE PTR [rax],al
  418bf7:	add    BYTE PTR [rdx-0x2b],bl
  418bfa:	add    BYTE PTR [r8],al
  418bfd:	add    BYTE PTR [rax],al
  418bff:	add    BYTE PTR [rbp+0x41d5],al
  418c05:	add    BYTE PTR [rax],al
  418c07:	add    BYTE PTR [rax-0x2a],ah
  418c0a:	add    BYTE PTR [r8],al
  418c0d:	add    BYTE PTR [rax],al
  418c0f:	add    BYTE PTR [rcx+0x41d6],al
  418c15:	add    BYTE PTR [rax],al
  418c17:	add    BYTE PTR [rsi+0x41d6],ah
  418c1d:	add    BYTE PTR [rax],al
  418c1f:	add    bh,bl
  418c21:	(bad)  
  418c22:	add    BYTE PTR [r8],al
  418c25:	add    BYTE PTR [rax],al
  418c27:	add    BYTE PTR [rip+0x727473],bh        # 0xb400a0
  418c2d:	cmp    eax,0x6d756e
  418c32:	cmp    eax,0x64574b
  418c37:	cmp    eax,0x462f54
  418c3c:	add    BYTE PTR [rax],al
  418c3e:	add    BYTE PTR [rax],al
  418c40:	cwde   
  418c41:	jge    0x418c84
	...
  418c4f:	add    bh,bh
  418c51:	(bad)  
  418c52:	(bad)  
  418c53:	(bad)  
  418c54:	(bad)  
  418c55:	(bad)  
  418c56:	(bad)  
  418c57:	inc    DWORD PTR [rax]
  418c59:	add    BYTE PTR [rax],al
  418c5b:	add    BYTE PTR [rax],al
  418c5d:	add    BYTE PTR [rax],al
  418c5f:	add    bh,bh
	...
  418c6d:	add    BYTE PTR [rax],al
  418c6f:	add    BYTE PTR [rdx],al
	...
  418c7d:	add    BYTE PTR [rax],al
  418c7f:	add    bh,bh
  418c81:	(bad)  
  418c82:	(bad)  
  418c83:	inc    DWORD PTR [rax]
	...
  418c8d:	add    BYTE PTR [rax],al
  418c8f:	add    BYTE PTR [rax+0x0],al
  418c92:	add    BYTE PTR [rax],al
  418c94:	ret    
  418c95:	mov    edi,0x3fc0ffff
  418c9a:	add    BYTE PTR [rax],al
  418c9c:	add    DWORD PTR [rax],eax
  418c9e:	add    BYTE PTR [rax],al
  418ca0:	add    BYTE PTR [rax],al
  418ca2:	add    BYTE PTR [rax],al
  418ca4:	(bad)  
	...
  418cb1:	sbb    eax,0x42
	...
  418cbe:	add    BYTE PTR [rax],al
  418cc0:	movabs al,ds:0xb000000000004179
  418cc9:	jns    0x418d0c
  418ccb:	add    BYTE PTR [rax],al
  418ccd:	add    BYTE PTR [rax],al
  418ccf:	add    BYTE PTR [rax],dh
  418cd1:	jp     0x418d14
  418cd3:	add    BYTE PTR [rax],al
  418cd5:	add    BYTE PTR [rax],al
  418cd7:	add    al,ah
  418cd9:	jns    0x418d1c
  418cdb:	add    BYTE PTR [rax],al
  418cdd:	add    BYTE PTR [rax],al
  418cdf:	add    BYTE PTR [rdx],dh
  418ce1:	movabs ds:0x2b992ddf,al
  418cea:	add    BYTE PTR [rax],al
  418cec:	add    BYTE PTR [rax],al
  418cee:	add    BYTE PTR [rax],al
  418cf0:	int    0x5d
  418cf2:	and    dl,dl
  418cf4:	data16 (bad) 
  418cf6:	(bad)  
  418cf7:	inc    DWORD PTR [rax]
  418cf9:	add    BYTE PTR [rax],al
  418cfb:	add    BYTE PTR [rax],al
  418cfd:	add    BYTE PTR [rax],al
	...

Disassembly of section .rdata:

0000000000419000 <.rdata>:
  419000:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x2527
  419007:	jae    0x419030
  419009:	and    BYTE PTR [rcx+0x73],ch
  41900c:	and    BYTE PTR [rdi+rbp*2+0x6f],dh
  419010:	outs   dx,DWORD PTR ds:[rsi]
  419011:	outs   dx,DWORD PTR ds:[rsi]
  419012:	outs   dx,DWORD PTR ds:[rsi]
  419013:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
  419017:	or     al,BYTE PTR [eax]
  41901a:	and    eax,0x6d742e73
  41901f:	jo     0x419021
  419021:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x2527
  419028:	jae    0x419051
  41902a:	and    BYTE PTR [rcx+0x73],ch
  41902d:	and    BYTE PTR [rdi+rbp*2+0x63],ch
  419031:	imul   esp,DWORD PTR [rbp+0x64],0xa
  419035:	add    BYTE PTR [rdi+0x0],dh
  419038:	rex.XB (bad) 
  41903a:	outs   dx,BYTE PTR ds:[rsi]
  41903b:	outs   dx,BYTE PTR ds:[rsi]
  41903c:	outs   dx,DWORD PTR ds:[rsi]
  41903d:	je     0x41905f
  41903f:	outs   dx,DWORD PTR ds:[rsi]
  419040:	jo     0x4190a7
  419042:	outs   dx,BYTE PTR ds:[rsi]
  419043:	and    BYTE PTR [rdi],ah
  419045:	and    eax,0x66202773
  41904a:	outs   dx,DWORD PTR ds:[rsi]
  41904b:	jb     0x41906d
  41904d:	ja     0x4190c1
  41904f:	imul   esi,DWORD PTR [rbp+riz*2+0xa],0x6e614300
  419057:	outs   dx,BYTE PTR ds:[rsi]
  419058:	outs   dx,DWORD PTR ds:[rsi]
  419059:	je     0x41907b
  41905b:	movsxd ebp,DWORD PTR [rdi+0x70]
  41905e:	jns    0x419080
  419060:	(bad)  
  419061:	and    eax,0x74202773
  419066:	outs   dx,DWORD PTR ds:[rsi]
  419067:	and    BYTE PTR [rdi],ah
  419069:	and    eax,0xa2773
  41906e:	jb     0x419070
  419070:	rex.XB (bad) 
  419072:	outs   dx,BYTE PTR ds:[rsi]
  419073:	outs   dx,BYTE PTR ds:[rsi]
  419074:	outs   dx,DWORD PTR ds:[rsi]
  419075:	je     0x419097
  419077:	outs   dx,DWORD PTR ds:[rsi]
  419078:	jo     0x4190df
  41907a:	outs   dx,BYTE PTR ds:[rsi]
  41907b:	and    BYTE PTR [rdi],ah
  41907d:	and    eax,0x66202773
  419082:	outs   dx,DWORD PTR ds:[rsi]
  419083:	jb     0x4190a5
  419085:	jb     0x4190ec
  419087:	(bad)  
  419088:	or     al,BYTE PTR fs:[rax]
  41908b:	and    eax,0x73253a73
  419090:	or     al,BYTE PTR [rax]
  419092:	(bad)  
  419093:	gs je  0x4190f9
  419096:	(bad)  
  419097:	jo     0x4190fa
  419099:	jae    0x41910e
  41909b:	ja     0x419101
  41909d:	cs jo  0x419113
  4190a0:	imul   eax,DWORD PTR [rax],0x67
  4190a3:	ins    BYTE PTR es:[rdi],dx
  4190a4:	outs   dx,DWORD PTR ds:[rsi]
  4190a5:	(bad)
  4190aa:	outs   dx,BYTE PTR ds:[rsi]
  4190ab:	imul   esi,DWORD PTR [rdx+rdi*1+0x20],0xa7325
  4190b3:	push   rax
  4190b4:	ins    BYTE PTR es:[rdi],dx
  4190b5:	gs (bad) 
  4190b7:	jae    0x41911e
  4190b9:	and    BYTE PTR [rbx+0x70],dh
  4190bc:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  4190c0:	jns    0x4190e2
  4190c2:	(bad)  
  4190c3:	and    BYTE PTR [rbp+0x73],dh
  4190c6:	gs jb  0x4190d3
  4190c9:	add    BYTE PTR [rbx+0x65],cl
  4190cc:	jns    0x4190ee
  4190ce:	jae    0x419139
  4190d0:	jp     0x419137
  4190d2:	and    BYTE PTR [rcx+0x73],ch
  4190d5:	and    BYTE PTR [rdi+rbp*2+0x6f],dh
  4190d9:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
  4190dd:	or     al,BYTE PTR [eax]
  4190e0:	rex.RXB
  4190e1:	outs   dx,BYTE PTR gs:[rsi]
  4190e3:	gs jb  0x419147
  4190e6:	je     0x419151
  4190e8:	outs   dx,BYTE PTR ds:[rsi]
  4190e9:	and    BYTE PTR [ecx+0x20],ah
  4190ed:	jb     0x419150
  4190ef:	outs   dx,BYTE PTR ds:[rsi]
  4190f0:	outs   dx,DWORD PTR fs:[rsi]
  4190f2:	ins    DWORD PTR es:[rdi],dx
  4190f3:	and    BYTE PTR [rbx+0x65],ch
  4190f6:	jns    0x419118
  4190f8:	outs   dx,WORD PTR ds:[rsi]
  4190fa:	jb     0x41911c
  4190fc:	jne    0x419171
  4190fe:	gs jb  0x419121
  419101:	(bad)  
  419102:	and    eax,0xa2773
  419107:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  419109:	je     0x41912b
  41910b:	outs   dx,BYTE PTR gs:[rsi]
  41910d:	outs   dx,DWORD PTR ds:[rsi]
  41910e:	jne    0x419177
  419110:	push   0x6e617220
  419115:	outs   dx,DWORD PTR fs:[rsi]
  419117:	ins    DWORD PTR es:[rdi],dx
  419118:	outs   dx,BYTE PTR ds:[rsi]
  419119:	gs jae 0x41918f
  41911c:	or     al,BYTE PTR [rax]
  41911e:	rex.W
  41911f:	rex.RB pop r8
  419121:	and    BYTE PTR [rbp+0x6e],ah
  419124:	movsxd ebp,DWORD PTR [rdi+0x64]
  419127:	imul   ebp,DWORD PTR [rsi+0x67],0x72726520
  41912e:	outs   dx,DWORD PTR ds:[rsi]
  41912f:	jb     0x41913b
  419131:	add    BYTE PTR [rbx+0x65],cl
  419134:	jns    0x419156
  419136:	jae    0x4191ac
  419138:	outs   dx,DWORD PTR ds:[rsi]
  419139:	jb     0x4191a0
  41913b:	and    BYTE PTR fs:[rdi+rbp*2+0x20],dh
  419140:	and    eax,0xa73
	...
  419181:	add    BYTE PTR [rax],al
  419183:	add    BYTE PTR [rdi],cl
  419185:	(bad)  
  419186:	add    BYTE PTR [rax],al
  419188:	add    BYTE PTR [rax],al
  41918a:	add    BYTE PTR [rax],al
  41918c:	add    BYTE PTR [rdx],al
	...
  4191be:	add    BYTE PTR [rax],al
  4191c0:	jo     0x419235
  4191c2:	imul   esi,DWORD PTR [rdi+rbp*2+0x6f],0x6c
  4191c7:	and    BYTE PTR [rbx],dh
  4191c9:	cs xor al,0x2e
  4191cc:	xor    DWORD PTR [rdi],esi
  4191ce:	or     al,BYTE PTR [rbx+0x6f]
  4191d1:	jo     0x41924c
  4191d3:	jb     0x41923e
  4191d5:	addr32 push 0x43282074
  4191db:	sub    DWORD PTR [rax],esp
  4191dd:	xor    dh,BYTE PTR [rax]
  4191df:	xor    BYTE PTR [rax],dh
  4191e1:	sub    eax,0x36313032
  4191e6:	and    BYTE PTR [rsi+0x72],al
  4191e9:	gs and BYTE PTR gs:[rbx+0x6f],dl
  4191ee:	data16 je 0x419268
  4191f1:	(bad)  
  4191f2:	jb     0x419259
  4191f4:	and    BYTE PTR [rsi+0x6f],al
  4191f7:	jne    0x419267
  4191f9:	fs (bad) 
  4191fb:	je     0x419266
  4191fd:	outs   dx,DWORD PTR ds:[rsi]
  4191fe:	outs   dx,BYTE PTR ds:[rsi]
  4191ff:	sub    al,0x20
  419201:	(bad)  
  419202:	outs   dx,BYTE PTR ds:[rsi]
  419203:	and    BYTE PTR fs:[rdi+0x74],ch
  419207:	push   0x2c737265
  41920c:	and    BYTE PTR [rcx+0x6c],ah
  41920f:	ins    BYTE PTR es:[rdi],dx
  419210:	and    BYTE PTR [rdx+0x69],dh
  419213:	addr32 push 0x72207374
  419219:	gs jae 0x419281
  41921c:	jb     0x419294
  41921e:	gs fs or dl,BYTE PTR cs:[rax+rbp*2+0x69]
  419225:	jae    0x419247
  419227:	imul   esi,DWORD PTR [rbx+0x20],0x65657266
  41922e:	and    BYTE PTR [rbx+0x6f],dh
  419231:	data16 je 0x4192ab
  419234:	(bad)  
  419235:	jb     0x41929c
  419237:	and    BYTE PTR cs:[rcx+0x74],cl
  41923b:	and    BYTE PTR [rcx+0x73],ch
  41923e:	and    BYTE PTR [rcx+rbp*2+0x63],ch
  419242:	outs   dx,BYTE PTR gs:[rsi]
  419244:	jae    0x4192ab
  419246:	and    BYTE PTR fs:[rsi+0x6f],ah
  41924a:	jb     0x41926c
  41924c:	jne    0x4192c1
  41924e:	gs sub al,0x20
  419251:	ins    DWORD PTR es:[rdi],dx
  419252:	outs   dx,DWORD PTR ds:[rsi]
  419253:	imul   esp,DWORD PTR fs:[rsi+0x69],0x69746163
  41925b:	outs   dx,DWORD PTR ds:[rsi]
  41925c:	outs   dx,BYTE PTR ds:[rsi]
  41925d:	and    BYTE PTR [rcx+0x6e],ah
  419260:	or     dh,BYTE PTR fs:[rdx+0x65]
  419264:	imul   esi,DWORD PTR fs:[rbx+0x74],0x75626972
  41926c:	je     0x4192d7
  41926e:	outs   dx,DWORD PTR ds:[rsi]
  41926f:	outs   dx,BYTE PTR ds:[rsi]
  419270:	and    BYTE PTR [rbp+0x6e],dh
  419273:	fs gs jb 0x419297
  419277:	je     0x4192e1
  419279:	and    BYTE PTR gs:[rbp+riz*2+0x72],dh
  41927e:	ins    DWORD PTR es:[rdi],dx
  41927f:	jae    0x4192a1
  419281:	outs   dx,DWORD PTR ds:[rsi]
  419282:	data16 and BYTE PTR [rax+rbp*2+0x65],dh
  419287:	and    BYTE PTR [rdi+0x4e],al
  41928a:	push   rbp
  41928b:	and    BYTE PTR [rdi+0x65],al
  41928e:	outs   dx,BYTE PTR ds:[rsi]
  41928f:	gs jb  0x4192f3
  419292:	ins    BYTE PTR es:[rdi],dx
  419293:	and    BYTE PTR [rax+0x75],dl
  419296:	(bad)  
  419297:	ins    BYTE PTR es:[rdi],dx
  419298:	imul   esp,DWORD PTR [rbx+0x20],0x6563694c
  41929f:	outs   dx,BYTE PTR ds:[rsi]
  4192a0:	jae    0x419307
  4192a2:	sub    al,0xa
  4192a4:	jbe    0x41930b
  4192a6:	jb     0x41931b
  4192a8:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f203320
  4192af:	jb     0x4192d1
  4192b1:	ins    BYTE PTR es:[rdi],dx
  4192b2:	(bad)  
  4192b3:	je     0x41931a
  4192b5:	jb     0x4192d7
  4192b7:	cmp    al,0x68
  4192b9:	je     0x41932f
  4192bb:	jo     0x4192f7
  4192bd:	(bad)  
  4192be:	(bad)  
  4192bf:	outs   dx,BYTE PTR ds:[esi]
  4192c1:	jne    0x4192f1
  4192c3:	outs   dx,DWORD PTR ds:[rsi]
  4192c4:	jb     0x41932d
  4192c6:	(bad)  
  4192c7:	ins    BYTE PTR es:[rdi],dx
  4192c8:	imul   esp,DWORD PTR [rbx+0x65],0x7365736e
  4192cf:	(bad)  
  4192d0:	addr32 jo 0x41933f
  4192d3:	cs push 0x3e6c6d74
  4192d9:	or     al,BYTE PTR [rax]
  4192db:	jo     0x419350
  4192dd:	imul   esi,DWORD PTR [rdi+rbp*2+0x6f],0x6c
  4192e2:	and    BYTE PTR [rcx+0x73],ch
  4192e5:	and    BYTE PTR [rsi+0x72],ah
  4192e8:	gs and BYTE PTR gs:[rbx+0x6f],dh
  4192ed:	data16 je 0x419367
  4192f0:	(bad)  
  4192f1:	jb     0x419358
  4192f3:	cmp    ah,BYTE PTR [rax]
  4192f5:	jns    0x419366
  4192f7:	jne    0x419319
  4192f9:	movsxd esp,DWORD PTR [rcx+0x6e]
  4192fc:	and    BYTE PTR [rdx+0x65],dh
  4192ff:	imul   esi,DWORD PTR fs:[rbx+0x74],0x75626972
  419307:	je     0x41936e
  419309:	and    BYTE PTR [rcx+0x74],ch
  41930c:	and    BYTE PTR [rcx+0x6e],ah
  41930f:	fs (bad) 
  419311:	outs   dx,DWORD PTR ds:[rsi]
  419312:	jb     0x419334
  419314:	ins    DWORD PTR es:[rdi],dx
  419315:	outs   dx,DWORD PTR ds:[rsi]
  419316:	imul   esp,DWORD PTR fs:[rsi+0x79],0x20746920
  41931e:	jne    0x41938e
  419320:	fs gs jb 0x41932e
  419324:	je     0x41938e
  419326:	and    BYTE PTR gs:[rbp+riz*2+0x72],dh
  41932b:	ins    DWORD PTR es:[rdi],dx
  41932c:	jae    0x41934e
  41932e:	outs   dx,DWORD PTR ds:[rsi]
  41932f:	data16 and BYTE PTR [rax+rbp*2+0x65],dh
  419334:	and    BYTE PTR [rdi+0x4e],al
  419337:	push   rbp
  419338:	and    BYTE PTR [rdi+0x65],al
  41933b:	outs   dx,BYTE PTR ds:[rsi]
  41933c:	gs jb  0x4193a0
  41933f:	ins    BYTE PTR es:[rdi],dx
  419340:	and    BYTE PTR [rax+0x75],dl
  419343:	(bad)  
  419344:	ins    BYTE PTR es:[rdi],dx
  419345:	imul   esp,DWORD PTR [rbx+0x20],0x6563694c
  41934c:	outs   dx,BYTE PTR ds:[rsi]
  41934d:	jae    0x4193b4
  41934f:	and    BYTE PTR [rcx+0x73],ah
  419352:	and    BYTE PTR [rax+0x75],dh
  419355:	(bad)  
  419356:	ins    BYTE PTR es:[rdi],dx
  419357:	imul   esi,DWORD PTR [rbx+0x68],0x62206465
  41935e:	jns    0x419380
  419360:	je     0x4193ca
  419362:	and    BYTE PTR gs:[rsi+0x72],al
  419366:	gs or  dl,BYTE PTR gs:[rbx+0x6f]
  41936b:	data16 je 0x4193e5
  41936e:	(bad)  
  41936f:	jb     0x4193d6
  419371:	and    BYTE PTR [rsi+0x6f],al
  419374:	jne    0x4193e4
  419376:	fs (bad) 
  419378:	je     0x4193e3
  41937a:	outs   dx,DWORD PTR ds:[rsi]
  41937b:	outs   dx,BYTE PTR ds:[rsi]
  41937c:	sub    al,0x20
  41937e:	imul   esi,DWORD PTR gs:[rax+rbp*2+0x65],0x65762072
  419387:	jb     0x4193fc
  419389:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f203320
  419390:	data16 and BYTE PTR [rax+rbp*2+0x65],dh
  419395:	and    BYTE PTR [rcx+rbp*2+0x63],cl
  419399:	outs   dx,BYTE PTR gs:[rsi]
  41939b:	jae    0x419402
  41939d:	sub    al,0x20
  41939f:	outs   dx,DWORD PTR ds:[rsi]
  4193a0:	jb     0x4193c2
  4193a2:	sub    BYTE PTR [rcx+0x74],ah
  4193a5:	and    BYTE PTR [rcx+0x6f],bh
  4193a8:	jne    0x41941c
  4193aa:	and    BYTE PTR [rdi+0x70],ch
  4193ad:	je     0x419418
  4193af:	outs   dx,DWORD PTR ds:[rsi]
  4193b0:	outs   dx,BYTE PTR ds:[rsi]
  4193b1:	sub    DWORD PTR [rdx],ecx
  4193b3:	(bad)  
  4193b4:	outs   dx,BYTE PTR ds:[rsi]
  4193b5:	jns    0x4193d7
  4193b7:	ins    BYTE PTR es:[rdi],dx
  4193b8:	(bad)  
  4193b9:	je     0x419420
  4193bb:	jb     0x4193dd
  4193bd:	jbe    0x419424
  4193bf:	jb     0x419434
  4193c1:	imul   ebp,DWORD PTR [rdi+0x6e],0x700a0a2e
  4193c8:	jae    0x419435
  4193ca:	je     0x41943b
  4193cc:	outs   dx,DWORD PTR ds:[rsi]
  4193cd:	ins    BYTE PTR es:[rdi],dx
  4193ce:	and    BYTE PTR [rcx+0x73],ch
  4193d1:	and    BYTE PTR [rcx+rbp*2+0x73],ah
  4193d5:	je     0x419449
  4193d7:	imul   esp,DWORD PTR [rdx+0x75],0x20646574
  4193de:	imul   ebp,DWORD PTR [rsi+0x20],0x20656874
  4193e5:	push   0x2065706f
  4193ea:	je     0x419454
  4193ec:	(bad)  
  4193ed:	je     0x41940f
  4193ef:	imul   esi,DWORD PTR [rax+riz*1+0x77],0x206c6c69
  4193f7:	(bad)  
  4193f8:	and    BYTE PTR gs:[rbp+0x73],dh
  4193fc:	gs data16 jne 0x41946c
  419400:	sub    al,0x20
  419402:	(bad)  
  419403:	jne    0x419479
  419405:	and    BYTE PTR [rdi+0x49],dl
  419408:	push   rsp
  419409:	rex.W
  41940a:	rex.WRXB push r13
  41940c:	push   rsp
  41940d:	and    BYTE PTR [rcx+0x4e],al
  419410:	pop    rcx
  419411:	or     dl,BYTE PTR [rdi+0x41]
  419414:	push   rdx
  419415:	push   rdx
  419416:	rex.B
  419417:	rex.WRX push rsp
  419419:	pop    rcx
  41941a:	cmp    esp,DWORD PTR [rax]
  41941c:	ja     0x419487
  41941e:	je     0x419488
  419420:	outs   dx,DWORD PTR ds:[rsi]
  419421:	jne    0x419497
  419423:	and    BYTE PTR [rbp+0x76],ah
  419426:	outs   dx,BYTE PTR gs:[rsi]
  419428:	and    BYTE PTR [rax+rbp*2+0x65],dh
  41942c:	and    BYTE PTR [rcx+0x6d],ch
  41942f:	jo     0x41949d
  419431:	imul   esp,DWORD PTR [rbp+0x64],0x72617720
  419438:	jb     0x41949b
  41943a:	outs   dx,BYTE PTR ds:[rsi]
  41943b:	je     0x4194b6
  41943d:	and    BYTE PTR [rdi+0x66],ch
  419440:	and    BYTE PTR [rbp+0x45],cl
  419443:	push   rdx
  419444:	rex.XB
  419445:	rex.W
  419446:	rex.B
  419447:	rex.WRX push rsp
  419449:	rex.B
  41944a:	rex.X
  41944b:	rex.WB
  41944c:	rex.WR
  41944d:	rex.WB push r12
  41944f:	pop    rcx
  419450:	and    BYTE PTR [rdi+0x72],ch
  419453:	and    BYTE PTR [rsi+0x49],al
  419456:	push   rsp
  419457:	rex.WRX
  419458:	rex.RB push r11
  41945a:	push   rbx
  41945b:	or     al,BYTE PTR [rsi+0x4f]
  41945e:	push   rdx
  41945f:	and    BYTE PTR [rcx+0x20],al
  419462:	push   rax
  419463:	push   r10
  419465:	push   rsp
  419466:	rex.WB
  419467:	rex.XB push r13
  419469:	rex.WR
  41946a:	push   r10
  41946c:	and    BYTE PTR [rax+0x55],dl
  41946f:	push   rdx
  419470:	push   rax
  419471:	rex.WRXB push r11
  419473:	rex.RB
  419474:	and    BYTE PTR cs:[rax],ah
  419477:	push   rbx
  419478:	gs and BYTE PTR gs:[rax+rbp*2+0x65],dh
  41947e:	and    BYTE PTR [rdi+0x4e],al
  419481:	push   rbp
  419482:	and    BYTE PTR [rdi+0x65],al
  419485:	outs   dx,BYTE PTR ds:[rsi]
  419486:	gs jb  0x4194ea
  419489:	ins    BYTE PTR es:[rdi],dx
  41948a:	and    BYTE PTR [rax+0x75],dl
  41948d:	(bad)  
  41948e:	ins    BYTE PTR es:[rdi],dx
  41948f:	imul   esp,DWORD PTR [rbx+0x20],0x6563694c
  419496:	outs   dx,BYTE PTR ds:[rsi]
  419497:	jae    0x4194fe
  419499:	and    BYTE PTR [rsi+0x6f],ah
  41949c:	jb     0x4194be
  41949e:	ins    DWORD PTR es:[rdi],dx
  41949f:	outs   dx,DWORD PTR ds:[rsi]
  4194a0:	jb     0x419507
  4194a2:	or     ah,BYTE PTR [rbp+riz*2+0x74]
  4194a6:	(bad)  
  4194a7:	imul   ebp,DWORD PTR [rbx+rsi*2+0x2e],0x6f590a0a
  4194af:	jne    0x4194d1
  4194b1:	jae    0x41951b
  4194b3:	outs   dx,DWORD PTR ds:[rsi]
  4194b4:	jne    0x419522
  4194b6:	and    BYTE PTR fs:[rax+0x61],ch
  4194ba:	jbe    0x419521
  4194bc:	and    BYTE PTR [rdx+0x65],dh
  4194bf:	movsxd esp,DWORD PTR [rbp+0x69]
  4194c2:	jbe    0x419529
  4194c4:	and    BYTE PTR fs:[rcx+0x20],ah
  4194c8:	movsxd ebp,DWORD PTR [rdi+0x70]
  4194cb:	jns    0x4194ed
  4194cd:	outs   dx,DWORD PTR ds:[rsi]
  4194ce:	data16 and BYTE PTR [rax+rbp*2+0x65],dh
  4194d3:	and    BYTE PTR [rdi+0x4e],al
  4194d6:	push   rbp
  4194d7:	and    BYTE PTR [rdi+0x65],al
  4194da:	outs   dx,BYTE PTR ds:[rsi]
  4194db:	gs jb  0x41953f
  4194de:	ins    BYTE PTR es:[rdi],dx
  4194df:	and    BYTE PTR [rax+0x75],dl
  4194e2:	(bad)  
  4194e3:	ins    BYTE PTR es:[rdi],dx
  4194e4:	imul   esp,DWORD PTR [rbx+0x20],0x6563694c
  4194eb:	outs   dx,BYTE PTR ds:[rsi]
  4194ec:	jae    0x419553
  4194ee:	and    BYTE PTR [rcx+0x6c],ah
  4194f1:	outs   dx,DWORD PTR ds:[rsi]
  4194f2:	outs   dx,BYTE PTR ds:[rsi]
  4194f3:	or     dh,BYTE PTR [edi+0x69]
  4194f7:	je     0x419561
  4194f9:	and    BYTE PTR [rax+rbp*2+0x69],dh
  4194fd:	jae    0x41951f
  4194ff:	jo     0x419573
  419501:	outs   dx,DWORD PTR ds:[rsi]
  419502:	addr32 jb 0x419566
  419505:	ins    DWORD PTR es:[rdi],dx
  419506:	and    BYTE PTR cs:[rax],ah
  419509:	rex.WB
  41950a:	data16 and BYTE PTR [rsi+0x6f],ch
  41950e:	je     0x41953c
  419510:	and    BYTE PTR [rbx+0x65],dh
  419513:	and    BYTE PTR gs:[rax+rbp*2],bh
  419517:	je     0x41958d
  419519:	jo     0x419555
  41951b:	(bad)  
  41951c:	(bad)  
  41951d:	ja     0x419596
  41951f:	ja     0x41954f
  419521:	outs   dx,BYTE PTR ds:[esi]
  419523:	jne    0x419553
  419525:	outs   dx,DWORD PTR ds:[rsi]
  419526:	jb     0x41958f
  419528:	(bad)  
  419529:	ins    BYTE PTR es:[rdi],dx
  41952a:	imul   esp,DWORD PTR [rbx+0x65],0x7365736e
  419531:	(bad)  
  419532:	ds or  al,BYTE PTR cs:[rax]
  419536:	rex.RB outs dx,BYTE PTR ds:[rsi]
  419538:	(bad)  
  419539:	(bad)  
  41953a:	ins    BYTE PTR es:[rdi],dx
  41953b:	and    BYTE PTR gs:[rbp+riz*2+0x62],ah
  419540:	jne    0x4195a9
  419542:	imul   ebp,DWORD PTR [esi+0x67],0x42454400
  41954a:	push   rbp
  41954b:	add    BYTE PTR [r13+r12*2+0x62],r12b
  419550:	jne    0x4195b9
  419552:	add    BYTE PTR [rbx+0x70],dh
  419555:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  419559:	jns    0x41957b
  41955b:	je     0x4195c5
  41955d:	and    BYTE PTR gs:[rbx+0x65],ch
  419561:	jns    0x419583
  419563:	jae    0x4195ce
  419565:	jp     0x4195cc
  419567:	and    BYTE PTR [rcx+0x6e],ch
  41956a:	and    BYTE PTR [rdx+0x79],ah
  41956d:	je     0x4195d4
  41956f:	jae    0x419571
  419571:	rex.WXB
  419572:	rex.RB pop r9
  419574:	push   rbx
  419575:	rex.WB pop r10
  419577:	add    BYTE PTR [r11+0x65],r13b
  41957b:	jns    0x4195f0
  41957d:	imul   edi,DWORD PTR [rdx+0x65],0x65707300
  419584:	movsxd ebp,DWORD PTR [rcx+0x66]
  419587:	jns    0x4195a9
  419589:	(bad)  
  41958a:	and    BYTE PTR [rbp+0x73],dh
  41958d:	gs jb  0x4195fe
  419590:	(bad)  
  419591:	ins    DWORD PTR es:[rdi],dx
  419592:	add    BYTE PTR gs:[rbp+0x53],dl
  419596:	rex.RB push r10
  419598:	rex.WRX
  419599:	rex.B
  41959a:	rex.WRB
  41959b:	add    BYTE PTR [r13+0x73],r14b
  41959f:	gs jb  0x419610
  4195a2:	(bad)  
  4195a3:	ins    DWORD PTR es:[rdi],dx
  4195a4:	add    BYTE PTR gs:[rbx+0x70],dh
  4195a8:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  4195ac:	jns    0x4195ce
  4195ae:	(bad)  
  4195af:	and    BYTE PTR [rax+0x61],dh
  4195b2:	jae    0x419627
  4195b4:	ja     0x419625
  4195b6:	jb     0x41961c
  4195b8:	and    BYTE PTR [rsi+0x69],ah
  4195bb:	ins    BYTE PTR es:[rdi],dx
  4195bc:	add    BYTE PTR gs:[rax+0x41],dl
  4195c0:	push   rbx
  4195c1:	push   rbx
  4195c2:	push   rdi
  4195c3:	add    BYTE PTR [rax+0x61],r14b
  4195c7:	jae    0x41963c
  4195c9:	ja     0x41962f
  4195cb:	add    BYTE PTR [rcx+rbp*2+0x73],ah
  4195cf:	jo     0x41963d
  4195d1:	(bad)  
  4195d2:	jns    0x4195f4
  4195d4:	gs js  0x41964b
  4195d7:	outs   dx,BYTE PTR gs:[rsi]
  4195d9:	fs gs and BYTE PTR fs:[rbp+0x73],dh
  4195df:	(bad)  
  4195e0:	and    BYTE PTR gs:[ecx+0x6e],ch
  4195e5:	outs   dx,WORD PTR ds:[rsi]
  4195e7:	jb     0x419656
  4195e9:	(bad)  
  4195ea:	je     0x419655
  4195ec:	outs   dx,DWORD PTR ds:[rsi]
  4195ed:	outs   dx,BYTE PTR ds:[rsi]
  4195ee:	and    BYTE PTR [rcx+0x6e],ah
  4195f1:	and    BYTE PTR fs:[rbp+0x78],ah
  4195f5:	imul   esi,DWORD PTR [rax+rax*1+0x68],0x706c65
  4195fd:	gs js  0x419674
  419600:	outs   dx,BYTE PTR gs:[rsi]
  419602:	fs gs and BYTE PTR fs:[rbp+0x73],dh
  419608:	(bad)  
  419609:	and    BYTE PTR gs:[ecx+0x6e],ch
  41960e:	outs   dx,WORD PTR ds:[rsi]
  419610:	jb     0x41967f
  419612:	(bad)  
  419613:	je     0x41967e
  419615:	outs   dx,DWORD PTR ds:[rsi]
  419616:	outs   dx,BYTE PTR ds:[rsi]
  419617:	and    BYTE PTR [rax+0x61],dh
  41961a:	jae    0x41968f
  41961c:	gs and BYTE PTR fs:[rax+rbp*2+0x72],dh
  419622:	jne    0x419644
  419624:	jo     0x419687
  419626:	addr32 gs jb 0x41962a
  41962a:	ins    DWORD PTR es:[rdi],dx
  41962b:	outs   dx,DWORD PTR ds:[rsi]
  41962c:	jb     0x419693
  41962e:	sub    eax,0x706c6568
  419633:	add    BYTE PTR [rdi+0x75],ch
  419636:	je     0x4196a8
  419638:	jne    0x4196ae
  41963a:	and    BYTE PTR [rsi+0x65],dh
  41963d:	jb     0x4196b2
  41963f:	imul   ebp,DWORD PTR [rdi+0x6e],0x666e6920
  419646:	outs   dx,DWORD PTR ds:[rsi]
  419647:	jb     0x4196b6
  419649:	(bad)  
  41964a:	je     0x4196b5
  41964c:	outs   dx,DWORD PTR ds:[rsi]
  41964d:	outs   dx,BYTE PTR ds:[rsi]
  41964e:	and    BYTE PTR [rcx+0x6e],ah
  419651:	and    BYTE PTR fs:[rbp+0x78],ah
  419655:	imul   esi,DWORD PTR [rax+rax*1+0x76],0x69737265
  41965d:	outs   dx,DWORD PTR ds:[rsi]
  41965e:	outs   dx,BYTE PTR ds:[rsi]
  41965f:	add    BYTE PTR [rax+0x53],dl
  419662:	rex.WXB push r12
  419664:	rex.WRXB
  419665:	rex.WRXB
  419666:	rex.WR add BYTE PTR [rax+0x73],r14b
  41966a:	imul   esi,DWORD PTR [rdi+rbp*2+0x6f],0x6c
  41966f:	and    BYTE PTR [rip+0x756e4720],ch        # 0x75afdd95
  419675:	push   rsp
  419676:	rex.WR push rbx
  419678:	and    BYTE PTR [rax+0x53],dl
  41967b:	rex.WXB and BYTE PTR [r15+r13*2+0x6f],sil
  419680:	ins    BYTE PTR es:[rdi],dx
  419681:	or     dl,BYTE PTR [rbp+0x73]
  419684:	(bad)  
  419685:	cmp    ah,BYTE PTR gs:[eax]
  419689:	and    BYTE PTR [rip+0x205b2073],ah        # 0x209cb702
  41968f:	sub    eax,0x616c663c
  419694:	and    BYTE PTR ds:[ebx+0x3c],bl
  419699:	jbe    0x4196fc
  41969b:	ins    BYTE PTR es:[rdi],dx
  41969c:	ds pop rbp
  41969e:	and    BYTE PTR [rax+riz*1+0x2d],bh
  4196a2:	sub    eax,0x6d616e3c
  4196a7:	gs ds pop rbx
  4196aa:	jnp    0x4196e9
  4196ac:	jl     0x4196ce
  4196ae:	jge    0x4196ec
  4196b0:	jbe    0x419713
  4196b2:	ins    BYTE PTR es:[rdi],dx
  4196b3:	ds pop rbp
  4196b5:	and    BYTE PTR [rbp+0x2e],bl
  4196b8:	cs or  al,BYTE PTR cs:[rax]
  4196bc:	(bad)  
  4196bd:	jne    0x419726
  4196bf:	jae    0x419701
  4196c1:	outs   dx,BYTE PTR ds:[esi]
  4196c3:	jne    0x419739
  4196c5:	ins    BYTE PTR es:[rdi],dx
  4196c6:	jae    0x4196f6
  4196c8:	outs   dx,DWORD PTR ds:[rsi]
  4196c9:	jb     0x419732
  4196cb:	add    BYTE PTR [rdx],cl
  4196cd:	add    BYTE PTR [rax+0x72],dl
  4196d0:	outs   dx,DWORD PTR ds:[rsi]
  4196d1:	addr32 jb 0x419735
  4196d4:	ins    DWORD PTR es:[rdi],dx
  4196d5:	and    BYTE PTR [rax+rbp*2+0x61],dh
  4196d9:	je     0x4196fb
  4196db:	outs   dx,BYTE PTR gs:[esi]
  4196de:	gs jb  0x419742
  4196e1:	je     0x419748
  4196e3:	jae    0x419705
  4196e5:	jb     0x419748
  4196e7:	outs   dx,BYTE PTR ds:[rsi]
  4196e8:	outs   dx,DWORD PTR fs:[rsi]
  4196ea:	ins    DWORD PTR es:[rdi],dx
  4196eb:	and    BYTE PTR [rbx+0x65],ch
  4196ee:	jns    0x419763
  4196f0:	and    BYTE PTR [rsi+0x6f],ah
  4196f3:	jb     0x419715
  4196f5:	jne    0x41976a
  4196f7:	and    BYTE PTR gs:[rdi+0x69],dh
  4196fb:	je     0x419765
  4196fd:	and    BYTE PTR [rsp+rcx*2+0x53],dl
  419701:	sub    eax,0x2e4b5350
  419706:	and    BYTE PTR [rax],ah
  419708:	push   rsp
  419709:	push   0x656b2065
  41970e:	jns    0x419783
  419710:	and    BYTE PTR [rcx+0x72],ah
  419713:	or     dh,BYTE PTR gs:[rbx+0x74]
  419717:	outs   dx,DWORD PTR ds:[rsi]
  419718:	jb     0x41977f
  41971a:	and    BYTE PTR fs:[rcx+0x6e],ch
  41971e:	and    BYTE PTR [rax+0x65],ch
  419721:	js     0x419784
  419723:	fs movsxd ebp,DWORD PTR gs:[rcx+0x6d]
  419728:	(bad)  
  419729:	ins    BYTE PTR es:[rdi],dx
  41972a:	and    BYTE PTR [rsi+0x6f],ah
  41972d:	jb     0x41979c
  41972f:	(bad)  
  419730:	je     0x419752
  419732:	imul   ebp,DWORD PTR [rsi+0x20],0x656b2061
  419739:	jns    0x41975b
  41973b:	imul   bp,WORD PTR [rbp+riz*2+0x2e],0xa
  419742:	jo     0x4197b7
  419744:	imul   esi,DWORD PTR [rdi+rbp*2+0x6f],0x6c
  419749:	and    BYTE PTR [rbx],dh
  41974b:	cs xor al,0x2e
  41974e:	xor    DWORD PTR [rdi],esi
  419750:	add    BYTE PTR [rax+0x73],dh
  419753:	imul   esi,DWORD PTR [rdi+rbp*2+0x6f],0x6c
  419758:	and    BYTE PTR [rbx+0x6f],bl
  41975b:	jo     0x4197d1
  41975d:	imul   ebp,DWORD PTR [rdi+0x6e],0x700a5d73
  419764:	jae    0x4197d1
  419766:	je     0x4197d7
  419768:	outs   dx,DWORD PTR ds:[rsi]
  419769:	ins    BYTE PTR es:[rdi],dx
  41976a:	and    BYTE PTR [rip+0x6c65682d],ch        # 0x6ca6ff9d
  419770:	jo     0x419792
  419772:	outs   dx,WORD PTR ds:[rsi]
  419774:	jb     0x419796
  419776:	jne    0x4197eb
  419778:	(bad)  
  419779:	and    BYTE PTR gs:[ecx+0x6e],ch
  41977e:	jae    0x4197f4
  419780:	jb     0x4197f7
  419782:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  419786:	outs   dx,BYTE PTR ds:[rsi]
  419787:	jae    0x4197b7
  419789:	or     al,BYTE PTR [rax]
	...
  4197bf:	add    BYTE PTR [rax],ah
  4197c1:	cmp    eax,0x64250020
  4197c6:	add    BYTE PTR [rdx+rcx*1+0x0],bl
  4197ca:	or     ah,BYTE PTR [rbp+0x78]
  4197cd:	imul   esi,DWORD PTR [rax+riz*1+0x25],0x6b000a64
  4197d5:	gs jns 0x41984f
  4197d8:	outs   dx,DWORD PTR ds:[rsi]
  4197d9:	jb     0x41983f
  4197db:	add    BYTE PTR [rbx+0x65],dh
  4197de:	je     0x41980d
  4197e0:	ins    DWORD PTR es:[rdi],dx
  4197e1:	gs ins DWORD PTR es:[rdi],dx
  4197e3:	(bad)  
  4197e4:	gs jb  0x41985a
  4197e7:	push   0x74007069
  4197ec:	jb     0x419863
  4197ee:	add    BYTE PTR gs:[rsi+0x61],ah
  4197f2:	ins    BYTE PTR es:[rdi],dx
  4197f3:	jae    0x41985a
  4197f5:	add    BYTE PTR [rdi+rbp*1],bh
  4197f8:	and    eax,0xa3e73
  4197fd:	add    BYTE PTR [rax],al
  4197ff:	add    ah,ah
  419801:	mov    ?,esi
  419803:	call   rdx
  419805:	(bad)  
  419806:	(bad)  
  419807:	push   QWORD PTR [rax]
  419809:	mov    ?,esi
  41980b:	push   QWORD PTR [rax+0x30fffe8e]
  419811:	mov    ?,esi
  419813:	inc    DWORD PTR [rax]
  419815:	(bad)  
  419816:	(bad)  
  419817:	jmp    QWORD PTR [rcx]
  419819:	(bad)  
  41981a:	(bad)  
  41981b:	jmp    QWORD PTR [rax]
  41981d:	pop    rbx
  41981e:	(bad)  
  41981f:	jb     0x419888
  419821:	pop    rbp
  419822:	add    BYTE PTR [rax+0x4d],cl
  419825:	push   rbx
  419826:	add    BYTE PTR [rax+riz*1],ch
  419829:	add    BYTE PTR [rax],ah
  41982b:	and    BYTE PTR [rax],ah
  41982d:	sub    eax,0x6325
  419832:	add    BYTE PTR [rax],al
  419834:	add    BYTE PTR [rax],al
  419836:	add    BYTE PTR [rax],al
  419838:	outs   dx,BYTE PTR ds:[rsi]
  419839:	outs   dx,DWORD PTR ds:[rsi]
  41983a:	and    BYTE PTR [rbp+0x65],ch
  41983d:	ins    DWORD PTR es:[rdi],dx
  41983e:	outs   dx,DWORD PTR ds:[rsi]
  41983f:	jb     0x4198ba
  419841:	and    BYTE PTR [rsi+0x6f],ah
  419844:	jb     0x419866
  419846:	movsxd ebp,DWORD PTR [rax+0x61]
  419849:	jb     0x419878
  41984b:	ins    DWORD PTR es:[rdi],dx
  41984c:	(bad)  
  41984d:	jo     0x4198bf
  41984f:	gs jb  0x419872
  419852:	jae    0x4198c4
  419854:	(bad)  
  419855:	outs   dx,BYTE PTR ds:[rsi]
  419856:	and    BYTE PTR [rbp+0x61],ch
  419859:	jo     0x419865
  41985b:	add    BYTE PTR [rip+0x73252f73],ah        # 0x7366c7d4
  419861:	add    BYTE PTR [rax+0x41],dl
  419864:	push   rsp
  419865:	rex.W add BYTE PTR [rip+0x73250073],spl        # 0x736698df
  41986c:	cmp    eax,0xd7007325
  419871:	mov    ebx,0xbbcbfffe
  419876:	(bad)  
  419877:	(bad)  
  419878:	mov    edi,0xb3fffebb
  41987d:	mov    ebx,0xbba7fffe
  419882:	(bad)  
  419883:	call   FWORD PTR [rbx-0x70000145]
  419889:	mov    ebx,0xbb83fffe
  41988e:	(bad)  
  41988f:	jmp    rbx
  419891:	mov    ebx,0x2d2dfffe
  419896:	and    eax,0x732573
  41989b:	and    eax,0x732573
  4198a0:	sub    eax,0x39fffebf
  4198a5:	mov    edi,0xbf45fffe
  4198aa:	(bad)  
  4198ab:	call   QWORD PTR [rcx-0x41]
  4198ae:	(bad)  
  4198af:	call   FWORD PTR [rbp-0x41]
  4198b2:	(bad)  
  4198b3:	jmp    FWORD PTR [rcx-0x41]
  4198b6:	(bad)  
  4198b7:	push   QWORD PTR [rbp-0x41]
  4198ba:	(bad)  
  4198bb:	jmp    QWORD PTR [rcx]
  4198bd:	mov    edi,0xbd8dfffe
  4198c2:	(bad)  
  4198c3:	call   rsp
  4198c5:	sar    dh,0xff
  4198c8:	lahf   
  4198c9:	sar    esi,0xff
  4198cc:	cld    
  4198cd:	sar    esi,0xff
  4198d0:	xor    al,0xc2
  4198d2:	(bad)  
  4198d3:	jmp    FWORD PTR [rax-0x3e]
  4198d6:	(bad)  
  4198d7:	call   FWORD PTR [rdx+rax*8-0x3ed30002]
  4198de:	(bad)  
  4198df:	call   QWORD PTR [rbx+0xffffec1]
  4198e5:	(bad)  
  4198e6:	(bad)  
  4198e7:	inc    DWORD PTR [rbx]
  4198e9:	(bad)  
  4198ea:	(bad)  
  4198eb:	push   rdi
  4198ed:	ret    
  4198ee:	(bad)  
  4198ef:	push   rdi
  4198f1:	ret    
  4198f2:	(bad)  
  4198f3:	(bad)  
  4198f4:	jmp    0x4198b9
  4198f6:	(bad)  
  4198f7:	(bad)  
  4198f8:	ffreep st(3)
  4198fa:	(bad)  
  4198fb:	(bad)  
  4198fc:	ffreep st(3)
  4198fe:	(bad)  
  4198ff:	call   rbx
  419901:	ret    
  419902:	(bad)  
  419903:	call   rbx
  419905:	ret    
  419906:	(bad)  
  419907:	call   FWORD PTR [rcx+0x4d]
  41990a:	push   rdi
  41990b:	add    BYTE PTR [rax],r8b
  41990e:	add    BYTE PTR [rax],al
  419910:	xor    al,dl
  419912:	(bad)  
  419913:	inc    DWORD PTR [rbx-0x2f]
  419916:	(bad)  
  419917:	inc    DWORD PTR [rbx-0x2f]
  41991a:	(bad)  
  41991b:	inc    DWORD PTR [rbx-0x2f]
  41991e:	(bad)  
  41991f:	inc    DWORD PTR [rbx-0x2f]
  419922:	(bad)  
  419923:	inc    DWORD PTR [rbx-0x2f]
  419926:	(bad)  
  419927:	inc    DWORD PTR [rbx-0x2f]
  41992a:	(bad)  
  41992b:	inc    DWORD PTR [rbx-0x2f]
  41992e:	(bad)  
  41992f:	inc    DWORD PTR [rbx-0x2f]
  419932:	(bad)  
  419933:	inc    DWORD PTR [rbx-0x2f]
  419936:	(bad)  
  419937:	call   QWORD PTR [rax]
  419939:	sar    dh,1
  41993b:	inc    DWORD PTR [rbx-0x2f]
  41993e:	(bad)  
  41993f:	inc    DWORD PTR [rbx-0x2f]
  419942:	(bad)  
  419943:	jmp    QWORD PTR [rax-0x30]
  419946:	(bad)  
  419947:	inc    DWORD PTR [rbx-0x2f]
  41994a:	(bad)  
  41994b:	inc    DWORD PTR [rbx-0x2f]
  41994e:	(bad)  
  41994f:	inc    DWORD PTR [rbx-0x2f]
  419952:	(bad)  
  419953:	inc    DWORD PTR [rbx-0x2f]
  419956:	(bad)  
  419957:	inc    DWORD PTR [rbx-0x2f]
  41995a:	(bad)  
  41995b:	inc    DWORD PTR [rbx-0x2f]
  41995e:	(bad)  
  41995f:	inc    DWORD PTR [rbx-0x2f]
  419962:	(bad)  
  419963:	inc    DWORD PTR [rbx-0x2f]
  419966:	(bad)  
  419967:	inc    DWORD PTR [rbx-0x2f]
  41996a:	(bad)  
  41996b:	inc    DWORD PTR [rbx-0x2f]
  41996e:	(bad)  
  41996f:	inc    DWORD PTR [rbx-0x2f]
  419972:	(bad)  
  419973:	inc    DWORD PTR [rbx-0x2f]
  419976:	(bad)  
  419977:	inc    DWORD PTR [rbx-0x2f]
  41997a:	(bad)  
  41997b:	inc    DWORD PTR [rbx-0x2f]
  41997e:	(bad)  
  41997f:	inc    DWORD PTR [rbx-0x2f]
  419982:	(bad)  
  419983:	inc    DWORD PTR [rbx-0x2f]
  419986:	(bad)  
  419987:	inc    DWORD PTR [rbx-0x2f]
  41998a:	(bad)  
  41998b:	inc    DWORD PTR [rbx-0x2f]
  41998e:	(bad)  
  41998f:	inc    DWORD PTR [rbx-0x2f]
  419992:	(bad)  
  419993:	inc    DWORD PTR [rbx-0x2f]
  419996:	(bad)  
  419997:	inc    DWORD PTR [rbx-0x2f]
  41999a:	(bad)  
  41999b:	inc    DWORD PTR [rbx-0x2f]
  41999e:	(bad)  
  41999f:	inc    DWORD PTR [rbx-0x2f]
  4199a2:	(bad)  
  4199a3:	inc    DWORD PTR [rbx-0x2f]
  4199a6:	(bad)  
  4199a7:	inc    DWORD PTR [rbx-0x2f]
  4199aa:	(bad)  
  4199ab:	inc    DWORD PTR [rbx-0x2f]
  4199ae:	(bad)  
  4199af:	inc    DWORD PTR [rbx-0x2f]
  4199b2:	(bad)  
  4199b3:	inc    DWORD PTR [rbx-0x2f]
  4199b6:	(bad)  
  4199b7:	inc    DWORD PTR [rbx-0x2f]
  4199ba:	(bad)  
  4199bb:	inc    DWORD PTR [rbx-0x2f]
  4199be:	(bad)  
  4199bf:	inc    DWORD PTR [rbx-0x2f]
  4199c2:	(bad)  
  4199c3:	inc    DWORD PTR [rbx-0x2f]
  4199c6:	(bad)  
  4199c7:	inc    DWORD PTR [rbx-0x2f]
  4199ca:	(bad)  
  4199cb:	inc    DWORD PTR [rbx-0x2f]
  4199ce:	(bad)  
  4199cf:	push   QWORD PTR [rax-0x30]
  4199d2:	(bad)  
  4199d3:	push   QWORD PTR [rax-0x30]
  4199d6:	(bad)  
  4199d7:	push   QWORD PTR [rax-0x30]
  4199da:	(bad)  
  4199db:	push   QWORD PTR [rax-0x30]
  4199de:	(bad)  
  4199df:	push   QWORD PTR [rax-0x30]
  4199e2:	(bad)  
  4199e3:	push   QWORD PTR [rax-0x30]
  4199e6:	(bad)  
  4199e7:	push   QWORD PTR [rax-0x30]
  4199ea:	(bad)  
  4199eb:	push   QWORD PTR [rax-0x30]
  4199ee:	(bad)  
  4199ef:	inc    DWORD PTR [rbx-0x2f]
  4199f2:	(bad)  
  4199f3:	inc    DWORD PTR [rbx-0x2f]
  4199f6:	(bad)  
  4199f7:	inc    DWORD PTR [rbx-0x2f]
  4199fa:	(bad)  
  4199fb:	inc    DWORD PTR [rbx-0x2f]
  4199fe:	(bad)  
  4199ff:	inc    DWORD PTR [rbx-0x2f]
  419a02:	(bad)  
  419a03:	inc    DWORD PTR [rbx-0x2f]
  419a06:	(bad)  
  419a07:	inc    DWORD PTR [rbx-0x2f]
  419a0a:	(bad)  
  419a0b:	inc    DWORD PTR [rbx-0x2f]
  419a0e:	(bad)  
  419a0f:	inc    DWORD PTR [rbx-0x2f]
  419a12:	(bad)  
  419a13:	inc    DWORD PTR [rbx-0x2f]
  419a16:	(bad)  
  419a17:	inc    DWORD PTR [rbx-0x2f]
  419a1a:	(bad)  
  419a1b:	inc    DWORD PTR [rbx-0x2f]
  419a1e:	(bad)  
  419a1f:	inc    DWORD PTR [rbx-0x2f]
  419a22:	(bad)  
  419a23:	inc    DWORD PTR [rbx-0x2f]
  419a26:	(bad)  
  419a27:	inc    DWORD PTR [rbx-0x2f]
  419a2a:	(bad)  
  419a2b:	inc    DWORD PTR [rbx-0x2f]
  419a2e:	(bad)  
  419a2f:	inc    DWORD PTR [rbx-0x2f]
  419a32:	(bad)  
  419a33:	inc    DWORD PTR [rbx-0x2f]
  419a36:	(bad)  
  419a37:	inc    DWORD PTR [rbx-0x2f]
  419a3a:	(bad)  
  419a3b:	inc    DWORD PTR [rbx-0x2f]
  419a3e:	(bad)  
  419a3f:	inc    DWORD PTR [rbx-0x2f]
  419a42:	(bad)  
  419a43:	inc    DWORD PTR [rbx-0x2f]
  419a46:	(bad)  
  419a47:	inc    DWORD PTR [rbx-0x2f]
  419a4a:	(bad)  
  419a4b:	inc    DWORD PTR [rbx-0x2f]
  419a4e:	(bad)  
  419a4f:	inc    DWORD PTR [rbx-0x2f]
  419a52:	(bad)  
  419a53:	inc    DWORD PTR [rbx-0x2f]
  419a56:	(bad)  
  419a57:	inc    DWORD PTR [rbx-0x2f]
  419a5a:	(bad)  
  419a5b:	inc    DWORD PTR [rbx-0x2f]
  419a5e:	(bad)  
  419a5f:	inc    DWORD PTR [rbx-0x2f]
  419a62:	(bad)  
  419a63:	inc    DWORD PTR [rbx-0x2f]
  419a66:	(bad)  
  419a67:	inc    DWORD PTR [rbx-0x2f]
  419a6a:	(bad)  
  419a6b:	inc    DWORD PTR [rbx-0x2f]
  419a6e:	(bad)  
  419a6f:	inc    eax
  419a71:	sar    dh,1
  419a73:	inc    DWORD PTR [rbx-0x2f]
  419a76:	(bad)  
  419a77:	inc    DWORD PTR [rbx-0x2f]
  419a7a:	(bad)  
  419a7b:	inc    DWORD PTR [rbx-0x2f]
  419a7e:	(bad)  
  419a7f:	inc    DWORD PTR [rbx-0x2f]
  419a82:	(bad)  
  419a83:	inc    DWORD PTR [rbx-0x2f]
  419a86:	(bad)  
  419a87:	inc    DWORD PTR [rbx-0x2f]
  419a8a:	(bad)  
  419a8b:	inc    DWORD PTR [rbx-0x2f]
  419a8e:	(bad)  
  419a8f:	inc    DWORD PTR [rbx-0x2f]
  419a92:	(bad)  
  419a93:	inc    DWORD PTR [rax-0x2f]
  419a96:	(bad)  
  419a97:	call   QWORD PTR [rcx-0x2f]
  419a9a:	(bad)  
  419a9b:	inc    DWORD PTR [rbx-0x2f]
  419a9e:	(bad)  
  419a9f:	inc    DWORD PTR [rbx-0x2f]
  419aa2:	(bad)  
  419aa3:	inc    DWORD PTR [rbx-0x2f]
  419aa6:	(bad)  
  419aa7:	jmp    QWORD PTR [rax-0x2f]
  419aaa:	(bad)  
  419aab:	inc    DWORD PTR [rbx-0x2f]
  419aae:	(bad)  
  419aaf:	inc    DWORD PTR [rbx-0x2f]
  419ab2:	(bad)  
  419ab3:	inc    DWORD PTR [rbx-0x2f]
  419ab6:	(bad)  
  419ab7:	inc    DWORD PTR [rbx-0x2f]
  419aba:	(bad)  
  419abb:	inc    DWORD PTR [rbx-0x2f]
  419abe:	(bad)  
  419abf:	inc    DWORD PTR [rbx-0x2f]
  419ac2:	(bad)  
  419ac3:	inc    DWORD PTR [rbx-0x2f]
  419ac6:	(bad)  
  419ac7:	push   QWORD PTR [rax-0x2f]
  419aca:	(bad)  
  419acb:	inc    DWORD PTR [rbx-0x2f]
  419ace:	(bad)  
  419acf:	inc    DWORD PTR [rbx-0x2f]
  419ad2:	(bad)  
  419ad3:	inc    DWORD PTR [rbx-0x2f]
  419ad6:	(bad)  
  419ad7:	inc    DWORD PTR [rax-0x30]
  419ada:	(bad)  
  419adb:	inc    DWORD PTR [rbx-0x2f]
  419ade:	(bad)  
  419adf:	call   QWORD PTR [rax-0x30]
  419ae2:	(bad)  
  419ae3:	inc    DWORD PTR [rbx-0x2f]
  419ae6:	(bad)  
  419ae7:	push   QWORD PTR [rax+rdx*8]
  419aea:	(bad)  
  419aeb:	inc    DWORD PTR [rbx-0x2f]
  419aee:	(bad)  
  419aef:	inc    eax
  419af1:	sar    dh,1
  419af3:	jmp    FWORD PTR [rdx]
  419af5:	(bad)  
  419af6:	add    BYTE PTR [rip+0x3e2d],ch        # 0x41d929
  419afc:	cmc    
  419afd:	sar    esi,cl
  419aff:	jmp    rsi
  419b01:	(bad)  
  419b02:	(bad)  
  419b03:	jmp    rsi
  419b05:	(bad)  
  419b06:	(bad)  
  419b07:	jmp    rsi
  419b09:	(bad)  
  419b0a:	(bad)  
  419b0b:	jmp    rsi
  419b0d:	(bad)  
  419b0e:	(bad)  
  419b0f:	jmp    rsi
  419b11:	(bad)  
  419b12:	(bad)  
  419b13:	jmp    rsi
  419b15:	(bad)  
  419b16:	(bad)  
  419b17:	jmp    rsi
  419b19:	(bad)  
  419b1a:	(bad)  
  419b1b:	jmp    rsi
  419b1d:	(bad)  
  419b1e:	(bad)  
  419b1f:	jmp    rsi
  419b21:	(bad)  
  419b22:	(bad)  
  419b23:	push   rcx
  419b25:	sar    esi,cl
  419b27:	jmp    rsi
  419b29:	(bad)  
  419b2a:	(bad)  
  419b2b:	jmp    rsi
  419b2d:	(bad)  
  419b2e:	(bad)  
  419b2f:	jmp    rsi
  419b31:	(bad)  
  419b32:	(bad)  
  419b33:	jmp    rsi
  419b35:	(bad)  
  419b36:	(bad)  
  419b37:	jmp    rsi
  419b39:	(bad)  
  419b3a:	(bad)  
  419b3b:	jmp    rsi
  419b3d:	(bad)  
  419b3e:	(bad)  
  419b3f:	jmp    rsi
  419b41:	(bad)  
  419b42:	(bad)  
  419b43:	jmp    rsi
  419b45:	(bad)  
  419b46:	(bad)  
  419b47:	jmp    rsi
  419b49:	(bad)  
  419b4a:	(bad)  
  419b4b:	jmp    rsi
  419b4d:	(bad)  
  419b4e:	(bad)  
  419b4f:	jmp    rsi
  419b51:	(bad)  
  419b52:	(bad)  
  419b53:	jmp    rsi
  419b55:	(bad)  
  419b56:	(bad)  
  419b57:	jmp    rsi
  419b59:	(bad)  
  419b5a:	(bad)  
  419b5b:	jmp    rsi
  419b5d:	(bad)  
  419b5e:	(bad)  
  419b5f:	jmp    rsi
  419b61:	(bad)  
  419b62:	(bad)  
  419b63:	jmp    rsi
  419b65:	(bad)  
  419b66:	(bad)  
  419b67:	jmp    rsi
  419b69:	(bad)  
  419b6a:	(bad)  
  419b6b:	jmp    rsi
  419b6d:	(bad)  
  419b6e:	(bad)  
  419b6f:	jmp    rsi
  419b71:	(bad)  
  419b72:	(bad)  
  419b73:	jmp    rsi
  419b75:	(bad)  
  419b76:	(bad)  
  419b77:	jmp    rsi
  419b79:	(bad)  
  419b7a:	(bad)  
  419b7b:	jmp    rsi
  419b7d:	(bad)  
  419b7e:	(bad)  
  419b7f:	jmp    rsi
  419b81:	(bad)  
  419b82:	(bad)  
  419b83:	jmp    QWORD PTR [rsi+rdx*8-0x2]
  419b87:	jmp    rsi
  419b89:	(bad)  
  419b8a:	(bad)  
  419b8b:	jmp    rsi
  419b8d:	(bad)  
  419b8e:	(bad)  
  419b8f:	jmp    rsi
  419b91:	(bad)  
  419b92:	(bad)  
  419b93:	jmp    rsi
  419b95:	(bad)  
  419b96:	(bad)  
  419b97:	jmp    QWORD PTR [rsi+rdx*8-0x2]
  419b9b:	jmp    rsi
  419b9d:	(bad)  
  419b9e:	(bad)  
  419b9f:	jmp    rsi
  419ba1:	(bad)  
  419ba2:	(bad)  
  419ba3:	jmp    rsi
  419ba5:	(bad)  
  419ba6:	(bad)  
  419ba7:	jmp    rsi
  419ba9:	(bad)  
  419baa:	(bad)  
  419bab:	push   rcx
  419bad:	sar    esi,cl
  419baf:	jmp    rsi
  419bb1:	(bad)  
  419bb2:	(bad)  
  419bb3:	jmp    rsi
  419bb5:	(bad)  
  419bb6:	(bad)  
  419bb7:	jmp    rsi
  419bb9:	(bad)  
  419bba:	(bad)  
  419bbb:	jmp    rsi
  419bbd:	(bad)  
  419bbe:	(bad)  
  419bbf:	jmp    rsi
  419bc1:	(bad)  
  419bc2:	(bad)  
  419bc3:	jmp    rsi
  419bc5:	(bad)  
  419bc6:	(bad)  
  419bc7:	jmp    rsi
  419bc9:	(bad)  
  419bca:	(bad)  
  419bcb:	jmp    rsi
  419bcd:	(bad)  
  419bce:	(bad)  
  419bcf:	jmp    rsi
  419bd1:	(bad)  
  419bd2:	(bad)  
  419bd3:	jmp    rsi
  419bd5:	(bad)  
  419bd6:	(bad)  
  419bd7:	jmp    rsi
  419bd9:	(bad)  
  419bda:	(bad)  
  419bdb:	jmp    rsi
  419bdd:	(bad)  
  419bde:	(bad)  
  419bdf:	jmp    rsi
  419be1:	(bad)  
  419be2:	(bad)  
  419be3:	call   FWORD PTR [rbx-0x1900012b]
  419be9:	(bad)  
  419bea:	(bad)  
  419beb:	jmp    rsi
  419bed:	(bad)  
  419bee:	(bad)  
  419bef:	call   FWORD PTR [rbx+0x34fffed5]
  419bf5:	fdivp  st(6),st
  419bf7:	jmp    rdi
  419bf9:	(bad)  
  419bfb:	(bad)  
  419bfc:	(bad)  
  419bfe:	(bad)  
  419bff:	push   QWORD PTR [rdx+rbx*8]
  419c02:	(bad)  
  419c03:	(bad)  
  419c04:	(bad)  
  419c06:	(bad)  
  419c07:	call   FWORD PTR [rcx+rbx*8-0x26e70002]
  419c0e:	(bad)  
  419c0f:	push   QWORD PTR [rbx+0x74]
  419c12:	(bad)  
  419c13:	je     0x419c15
  419c15:	outs   dx,DWORD PTR ds:[rsi]
  419c16:	jo     0x419c7d
  419c18:	outs   dx,BYTE PTR ds:[rsi]
  419c19:	add    BYTE PTR [rsi+0x6f],ah
  419c1c:	jo     0x419c83
  419c1e:	outs   dx,BYTE PTR ds:[rsi]
  419c1f:	add    BYTE PTR [rbx+0x48],dl
  419c22:	rex.RB
  419c23:	rex.WR
  419c24:	rex.WR add BYTE PTR [rdi],r13b
  419c27:	(bad)  
  419c28:	imul   ebp,DWORD PTR [rsi+0x2f],0x68736162
  419c2f:	add    BYTE PTR [rdx+0x0],dh
  419c32:	data16 jae 0x419ca9
  419c35:	(bad)  
  419c36:	je     0x419c38
  419c38:	ja     0x419c3a
  419c3a:	data16 jb 0x419ca2
  419c3d:	outs   dx,DWORD PTR ds:[rsi]
  419c3e:	jo     0x419ca5
  419c40:	outs   dx,BYTE PTR ds:[rsi]
  419c41:	add    BYTE PTR [rip+0x756c],ah        # 0x4211b3
  419c47:	add    BYTE PTR [rax-0x8],ch
  419c4a:	(bad)  
  419c4b:	push   rbx
  419c4d:	clc    
  419c4e:	(bad)  
  419c4f:	push   rbx
  419c51:	clc    
  419c52:	(bad)  
  419c53:	push   rbx
  419c55:	clc    
  419c56:	(bad)  
  419c57:	push   rbx
  419c59:	clc    
  419c5a:	(bad)  
  419c5b:	push   rbx
  419c5d:	clc    
  419c5e:	(bad)  
  419c5f:	push   rbx
  419c61:	clc    
  419c62:	(bad)  
  419c63:	jmp    rbx
  419c65:	clc    
  419c66:	(bad)  
  419c67:	call   rbx
  419c69:	clc    
  419c6a:	(bad)  
  419c6b:	inc    ebx
  419c6d:	clc    
  419c6e:	(bad)  
  419c6f:	jmp    FWORD PTR [rdi]
  419c71:	clc    
  419c72:	(bad)  
  419c73:	push   QWORD PTR [rbx-0x5c000108]
  419c79:	clc    
  419c7a:	(bad)  
  419c7b:	call   QWORD PTR [rbx+0x72fffef8]
  419c81:	gs (bad) 
  419c83:	outs   dx,DWORD PTR fs:[rsi]
  419c85:	outs   dx,BYTE PTR ds:[rsi]
  419c86:	ins    BYTE PTR es:[rdi],dx
  419c87:	jns    0x419ca9
  419c89:	and    eax,0x2e005f73
  419c8e:	sub    al,BYTE PTR [rax]
  419c90:	and    esp,DWORD PTR [rax]
  419c92:	and    BYTE PTR [rax],al
  419c94:	and    eax,0x6a000a73
  419c99:	add    edi,edi
  419c9b:	call   FWORD PTR [rax-0x170000fd]
  419ca1:	add    edi,edi
  419ca3:	call   FWORD PTR [rax]
  419ca5:	add    al,0xff
  419ca7:	dec    DWORD PTR [rax+0x4]
  419caa:	(bad)  
  419cab:	jmp    FWORD PTR [rsp+rax*1+0x2a8ffff]
  419cb2:	(bad)  
  419cb3:	dec    DWORD PTR [rbp+0x3]
  419cb6:	(bad)  
  419cb7:	push   QWORD PTR [rdx+0x65]
  419cba:	jae    0x419d21
  419cbc:	je     0x419cec
  419cbe:	movsxd eax,DWORD PTR [rax]
  419cc0:	xor    BYTE PTR [rax],ah
  419cc2:	cmp    eax,0x31203d
  419cc7:	push   r13
  419cc9:	push   rsp
  419cca:	rex.WRXB
  419ccb:	rex.WRXB push r8
  419ccd:	push   rsp
  419cce:	push   rbx
  419ccf:	pop    rdi
  419cd0:	push   rbp
  419cd1:	push   rbx
  419cd2:	rex.B
  419cd3:	rex.RXB
  419cd4:	add    BYTE PTR [r8],r8b
  419cd7:	add    BYTE PTR [rax],bl
  419cd9:	sbb    edi,edi
  419cdb:	(bad)  
  419cdc:	call   0xffffffffe9419bfa
  419ce1:	sbb    edi,edi
  419ce3:	(bad)  
  419ce4:	call   0xffffffffe9419c02
  419ce9:	sbb    edi,edi
  419ceb:	(bad)  
  419cec:	call   0xffffffffe9419c0a
  419cf1:	sbb    edi,edi
  419cf3:	(bad)  
  419cf4:	call   0xffffffffe9419c12
  419cf9:	sbb    edi,edi
  419cfb:	(bad)  
  419cfc:	call   0xffffffffe9419c1a
  419d01:	sbb    edi,edi
  419d03:	call   FWORD PTR [rbp+0x19]
  419d06:	(bad)  
  419d07:	(bad)  
  419d08:	call   0xffffffffe9419c26
  419d0d:	sbb    edi,edi
  419d0f:	(bad)  
  419d10:	call   0xffffffffe9419c2e
  419d15:	sbb    edi,edi
  419d17:	(bad)  
  419d18:	call   0xffffffffe9419c36
  419d1d:	sbb    edi,edi
  419d1f:	(bad)  
  419d20:	call   0xffffffffda419c3e
  419d25:	sbb    bh,bh
  419d27:	(bad)  
  419d28:	call   0xffffffffe9419c46
  419d2d:	sbb    edi,edi
  419d2f:	(bad)  
  419d30:	call   0xffffffffe9419c4e
  419d35:	sbb    edi,edi
  419d37:	(bad)  
  419d38:	call   0xffffffffe9419c56
  419d3d:	sbb    edi,edi
  419d3f:	(bad)  
  419d40:	call   0xffffffffe9419c5e
  419d45:	sbb    edi,edi
  419d47:	(bad)  
  419d48:	call   0xffffffffe9419c66
  419d4d:	sbb    edi,edi
  419d4f:	(bad)  
  419d50:	call   0xffffffffe9419c6e
  419d55:	sbb    edi,edi
  419d57:	call   FWORD PTR [rax]
  419d59:	sbb    edi,edi
  419d5b:	(bad)  
  419d5c:	call   0xffffffffe9419c7a
  419d61:	sbb    edi,edi
  419d63:	(bad)  
  419d64:	call   0xffffffffe9419c82
  419d69:	sbb    edi,edi
  419d6b:	(bad)  
  419d6c:	call   0xffffffffe9419c8a
  419d71:	sbb    edi,edi
  419d73:	(bad)  
  419d74:	call   0xffffffffe9419c92
  419d79:	sbb    edi,edi
  419d7b:	(bad)  
  419d7c:	call   0xffffffffe9419c9a
  419d81:	sbb    edi,edi
  419d83:	call   FWORD PTR [rbp+0x19]
  419d86:	(bad)  
  419d87:	(bad)  
  419d88:	call   0xffffffffe9419ca6
  419d8d:	sbb    edi,edi
  419d8f:	(bad)  
  419d90:	call   0xffffffffe9419cae
  419d95:	sbb    edi,edi
  419d97:	(bad)  
  419d98:	call   0xffffffffe9419cb6
  419d9d:	sbb    edi,edi
  419d9f:	(bad)  
  419da0:	call   0xffffffffda419cbe
  419da5:	sbb    bh,bh
  419da7:	push   QWORD PTR [rdx+0x65]
  419daa:	(bad)  
  419dab:	add    BYTE PTR fs:[rcx+rbp*2+0x62],ch
  419db0:	outs   dx,DWORD PTR ds:[rsi]
  419db1:	jo     0x419e27
  419db3:	jae    0x419db5
  419db5:	and    eax,0x50005f73
  419dba:	rex.WRXB push r11
  419dbc:	rex.WB pop r8
  419dbe:	rex.WR pop rcx
  419dc0:	pop    rdi
  419dc1:	rex.XB
  419dc2:	rex.WRXB push r10
  419dc4:	push   rdx
  419dc5:	rex.RB
  419dc6:	rex.XB push r12
  419dc8:	add    BYTE PTR [rip+0x6c65682d],ch        # 0x6ca705fb
  419dce:	jo     0x419dd0
  419dd0:	xor    al,0x31
  419dd2:	xor    DWORD PTR cs:[rax],eax
  419dd5:	and    eax,0x75252d25
  419dda:	jae    0x419dfc
  419ddc:	and    eax,0xa7325
  419de1:	and    BYTE PTR [rax],al
  419de3:	rex.WR
  419de4:	rex.WRXB
  419de5:	rex.WRX
  419de6:	rex.RXB push r13
  419de8:	push   rbx
  419de9:	rex.B
  419dea:	rex.RXB
  419deb:	add    BYTE PTR [r13+0x53],r10b
  419def:	rex.B
  419df0:	rex.RXB
  419df1:	add    BYTE PTR [r14+0x45],r10b
  419df5:	push   rdx
  419df6:	push   rbx
  419df7:	rex.WB
  419df8:	rex.WRXB
  419df9:	rex.WRX add BYTE PTR [rdi+0x6e],r12b
  419dfd:	jne    0x419dff
  419dff:	(bad)  
  419e00:	jne    0x419e76
  419e02:	outs   dx,DWORD PTR ds:[rsi]
  419e03:	outs   dx,DWORD PTR ds:[rsi]
  419e04:	jo     0x419e7a
  419e06:	jae    0x419e08
  419e08:	outs   dx,BYTE PTR ds:[rsi]
  419e09:	outs   dx,DWORD PTR ds:[rsi]
  419e0a:	pop    rdi
  419e0b:	ins    DWORD PTR es:[rdi],dx
  419e0c:	imul   esi,DWORD PTR [rbx+0x75],0x755f6573
  419e13:	jae    0x419e76
  419e15:	add    BYTE PTR gs:[ebp+0x69],ch
  419e1a:	jae    0x419e91
  419e1c:	jae    0x419e83
  419e1e:	pop    rdi
  419e1f:	jne    0x419e94
  419e21:	(bad)  
  419e22:	add    BYTE PTR gs:[ebx+0x6f],ah
  419e27:	ins    DWORD PTR es:[rdi],dx
  419e28:	jo     0x419e9f
  419e2a:	je     0x419e91
	...
  419e40:	add    eax,DWORD PTR [rax]
  419e42:	add    BYTE PTR [rax],al
  419e44:	add    BYTE PTR [rax],al
  419e46:	add    BYTE PTR [rax],al
  419e48:	add    BYTE PTR [rax],dl
  419e4a:	add    BYTE PTR [rax],al
  419e4c:	add    BYTE PTR [rax],al
  419e4e:	add    BYTE PTR [rax],al
  419e50:	sti    
  419e51:	popf   
  419e52:	add    BYTE PTR [r8],al
  419e55:	add    BYTE PTR [rax],al
  419e57:	add    BYTE PTR [rax],cl
  419e59:	add    BYTE PTR [rax],al
  419e5b:	add    BYTE PTR [rax],al
  419e5d:	add    BYTE PTR [rax],al
  419e5f:	add    bh,bh
  419e61:	out    dx,eax
  419e62:	(bad)  
  419e63:	inc    DWORD PTR [rax]
  419e65:	add    BYTE PTR [rax],al
  419e67:	add    bh,bh
  419e69:	popf   
  419e6a:	add    BYTE PTR [r8],al
  419e6d:	add    BYTE PTR [rax],al
  419e6f:	add    BYTE PTR [rdi],cl
	...
  419e79:	add    BYTE PTR [rax],al
  419e7c:	add    BYTE PTR [rax],al
  419e7e:	add    BYTE PTR [rax],al
  419e80:	or     BYTE PTR [rsi+0x41],bl
  419e86:	add    BYTE PTR [rax],al
  419e88:	or     al,0x0
  419e8a:	add    BYTE PTR [rax],al
  419e8c:	add    BYTE PTR [rax],al
  419e8e:	add    BYTE PTR [rax],al
  419e90:	(bad)  
  419e91:	mov    edi,0xffff
  419e96:	add    BYTE PTR [rax],al
  419e98:	sbb    BYTE PTR [rsi+0x41],bl
  419e9e:	add    BYTE PTR [rax],al
  419ea0:	(bad)  
	...
  419ea9:	add    BYTE PTR [rax],dl
  419eab:	add    BYTE PTR [rax],al
  419ead:	add    BYTE PTR [rax],al
  419eaf:	add    BYTE PTR [rip+0x419e],ah        # 0x41e053
	...
  419ebd:	add    BYTE PTR [rax],al
  419ebf:	add    BYTE PTR [rax+0x40b1],ah
  419ec5:	add    BYTE PTR [rax],al
  419ec7:	add    BYTE PTR [rax+0x40b4],dl
  419ecd:	add    BYTE PTR [rax],al
  419ecf:	add    BYTE PTR [rcx+0x6d],ah
  419ed2:	jo     0x419f0f
  419ed4:	add    BYTE PTR [rsp+rsi*2+0x3b],ch
  419ed8:	add    BYTE PTR [rdi+0x74],ah
  419edb:	cmp    eax,DWORD PTR [rax]
  419edd:	data16 cmp ax,WORD PTR [rax]
  419ee1:	push   0x63003b74
  419ee6:	jb     0x419f23
  419ee8:	add    BYTE PTR [rsi+0x74],dh
  419eeb:	cmp    eax,DWORD PTR [rax]
  419eed:	(bad)  
  419eee:	gs ins BYTE PTR es:[rdi],dx
  419ef0:	cmp    eax,DWORD PTR [rax]
  419ef2:	outs   dx,BYTE PTR ds:[rsi]
  419ef3:	ins    BYTE PTR es:[rdi],dx
  419ef4:	cmp    eax,DWORD PTR [rax]
  419ef6:	jae    0x419f68
  419ef8:	(bad)  
  419ef9:	movsxd esp,DWORD PTR [rbp+0x3b]
  419efc:	add    BYTE PTR [rcx+0x75],dh
  419eff:	outs   dx,DWORD PTR ds:[rsi]
  419f00:	je     0x419f3d
  419f02:	add    BYTE PTR [rcx+0x70],ah
  419f05:	outs   dx,DWORD PTR ds:[rsi]
  419f06:	jae    0x419f43
	...
  419f40:	rcr    BYTE PTR [rsi+0x41],1
  419f46:	add    BYTE PTR [rax],al
  419f48:	add    al,0x0
  419f4a:	add    BYTE PTR es:[rax],al
  419f4d:	add    BYTE PTR [rax],al
  419f4f:	add    ch,dl
  419f51:	sahf   
  419f52:	add    BYTE PTR [r8],al
  419f55:	add    BYTE PTR [rax],al
  419f57:	add    BYTE PTR [rbx],al
  419f59:	add    BYTE PTR [rax+rax*1],bh
  419f5c:	add    BYTE PTR [rax],al
  419f5e:	add    BYTE PTR [rax],al
  419f60:	fstp   DWORD PTR [rsi+0x41]
  419f66:	add    BYTE PTR [rax],al
  419f68:	add    eax,DWORD PTR [rax]
  419f6a:	add    BYTE PTR ds:[rax],al
  419f6d:	add    BYTE PTR [rax],al
  419f6f:	add    ch,bl
  419f71:	sahf   
  419f72:	add    BYTE PTR [r8],al
  419f75:	add    BYTE PTR [rax],al
  419f77:	add    BYTE PTR [rbx],al
  419f79:	add    BYTE PTR [rax+rax*1],cl
  419f7c:	add    BYTE PTR [rax],al
  419f7e:	add    BYTE PTR [rax],al
  419f80:	loope  0x419f20
  419f82:	add    BYTE PTR [r8],al
  419f85:	add    BYTE PTR [rax],al
  419f87:	add    BYTE PTR [rbx],al
  419f89:	add    BYTE PTR [rcx],cl
  419f8b:	add    BYTE PTR [rax],al
  419f8d:	add    BYTE PTR [rax],al
  419f8f:	add    ch,ah
  419f91:	sahf   
  419f92:	add    BYTE PTR [r8],al
  419f95:	add    BYTE PTR [rax],al
  419f97:	add    BYTE PTR [rbx],al
  419f99:	add    BYTE PTR [rip+0x0],cl        # 0x419f9f
  419f9f:	add    cl,ch
  419fa1:	sahf   
  419fa2:	add    BYTE PTR [r8],al
  419fa5:	add    BYTE PTR [rax],al
  419fa7:	add    BYTE PTR [rbx],al
  419fa9:	add    BYTE PTR [rbx],cl
  419fab:	add    BYTE PTR [rax],al
  419fad:	add    BYTE PTR [rax],al
  419faf:	add    ch,ch
  419fb1:	sahf   
  419fb2:	add    BYTE PTR [r8],al
  419fb5:	add    BYTE PTR [rax],al
  419fb7:	add    BYTE PTR [rax+rax*1],al
  419fba:	(bad)  
  419fbb:	add    BYTE PTR [rax],al
  419fbd:	add    BYTE PTR [rax],al
  419fbf:	add    dl,dh
  419fc1:	sahf   
  419fc2:	add    BYTE PTR [r8],al
  419fc5:	add    BYTE PTR [rax],al
  419fc7:	add    BYTE PTR [rbx],al
  419fc9:	add    BYTE PTR [rdx],cl
  419fcb:	add    BYTE PTR [rax],al
  419fcd:	add    BYTE PTR [rax],al
  419fcf:	add    dh,dh
  419fd1:	sahf   
  419fd2:	add    BYTE PTR [r8],al
  419fd5:	add    BYTE PTR [rax],al
  419fd7:	add    BYTE PTR [rsi],al
  419fd9:	add    BYTE PTR [rax],ah
  419fdb:	add    BYTE PTR [rax],al
  419fdd:	add    BYTE PTR [rax],al
  419fdf:	add    ch,bh
  419fe1:	sahf   
  419fe2:	add    BYTE PTR [r8],al
  419fe5:	add    BYTE PTR [rax],al
  419fe7:	add    BYTE PTR [rip+0x2200],al        # 0x41c1ed
  419fed:	add    BYTE PTR [rax],al
  419fef:	add    BYTE PTR [rbx],al
  419ff1:	lahf   
  419ff2:	add    BYTE PTR [r8],al
  419ff5:	add    BYTE PTR [rax],al
  419ff7:	add    BYTE PTR [rip+0x2700],al        # 0x41c6fd
  419ffd:	add    BYTE PTR [rax],al
  419fff:	add    BYTE PTR [rdx],cl
  41a001:	or     cl,BYTE PTR [rdx]
  41a003:	or     cl,BYTE PTR [rdx]
  41a005:	or     cl,BYTE PTR [rdx]
  41a007:	or     cl,BYTE PTR [rdx]
  41a009:	or     cl,BYTE PTR [rdx]
  41a00b:	or     cl,BYTE PTR [rdx]
  41a00d:	or     cl,BYTE PTR [rdx]
  41a00f:	or     cl,BYTE PTR [rdx]
  41a011:	or     cl,BYTE PTR [rdx]
  41a013:	or     cl,BYTE PTR [rdx]
  41a015:	or     cl,BYTE PTR [rdx]
  41a017:	or     cl,BYTE PTR [rdx]
  41a019:	or     cl,BYTE PTR [rdx]
  41a01b:	or     cl,BYTE PTR [rdx]
  41a01d:	or     cl,BYTE PTR [rdx]
  41a01f:	or     cl,BYTE PTR [rdx]
  41a021:	or     cl,BYTE PTR [rdx]
  41a023:	or     cl,BYTE PTR [rdx]
  41a025:	or     cl,BYTE PTR [rdx]
  41a027:	or     cl,BYTE PTR [rdx]
  41a029:	or     cl,BYTE PTR [rdx]
  41a02b:	or     cl,BYTE PTR [rdx]
  41a02d:	or     cl,BYTE PTR [rdx]
  41a02f:	or     cl,BYTE PTR [rdx]
  41a031:	or     cl,BYTE PTR [rdx]
  41a033:	or     cl,BYTE PTR [rdx]
  41a035:	or     cl,BYTE PTR [rdx]
  41a037:	or     cl,BYTE PTR [rdx]
  41a039:	or     cl,BYTE PTR [rdx]
  41a03b:	or     cl,BYTE PTR [rdx]
  41a03d:	or     cl,BYTE PTR [rdx]
  41a03f:	or     cl,BYTE PTR [rdx]
  41a041:	or     cl,BYTE PTR [rdx]
  41a043:	or     cl,BYTE PTR [rdx]
  41a045:	or     cl,BYTE PTR [rdx]
  41a047:	or     cl,BYTE PTR [rdx]
  41a049:	or     cl,BYTE PTR [rdx]
  41a04b:	or     cl,BYTE PTR [rdx]
  41a04d:	or     cl,BYTE PTR [rdx]
  41a04f:	or     cl,BYTE PTR [rdx]
  41a051:	or     cl,BYTE PTR [rdx]
  41a053:	or     cl,BYTE PTR [rdx]
  41a055:	or     cl,BYTE PTR [rdx]
  41a057:	or     cl,BYTE PTR [rdx]
  41a059:	or     cl,BYTE PTR [rdx]
  41a05b:	or     cl,BYTE PTR [rdx]
  41a05d:	or     cl,BYTE PTR [rdx]
  41a05f:	or     cl,BYTE PTR [rdx]
  41a061:	or     cl,BYTE PTR [rdx]
  41a063:	add    BYTE PTR [rdx],cl
  41a065:	or     cl,BYTE PTR [rdx]
  41a067:	or     cl,BYTE PTR [rdx]
  41a069:	or     cl,BYTE PTR [rdx]
  41a06b:	add    eax,0xa0a000a
  41a070:	or     cl,BYTE PTR [rdx]
  41a072:	or     cl,BYTE PTR [rdx]
  41a074:	add    BYTE PTR [rax],al
  41a076:	or     al,BYTE PTR [rax]
  41a078:	or     cl,BYTE PTR [rdx]
  41a07a:	or     cl,BYTE PTR [rdx]
  41a07c:	or     cl,BYTE PTR [rdx]
  41a07e:	or     cl,BYTE PTR [rdx]
  41a080:	or     cl,BYTE PTR [rdx]
  41a082:	or     cl,BYTE PTR [rdx]
  41a084:	or     cl,BYTE PTR [rdx]
  41a086:	or     cl,BYTE PTR [rdx]
  41a088:	or     cl,BYTE PTR [rdx]
  41a08a:	or     cl,BYTE PTR [rdx]
  41a08c:	or     cl,BYTE PTR [rdx]
  41a08e:	or     cl,BYTE PTR [rdx]
  41a090:	or     cl,BYTE PTR [rdx]
  41a092:	or     cl,BYTE PTR [rdx]
  41a094:	or     cl,BYTE PTR [rdx]
  41a096:	or     cl,BYTE PTR [rdx]
  41a098:	or     cl,BYTE PTR [rdx]
  41a09a:	or     cl,BYTE PTR [rdx]
  41a09c:	or     cl,BYTE PTR [rdx]
  41a09e:	or     cl,BYTE PTR [rdx]
  41a0a0:	or     cl,BYTE PTR [rdx]
  41a0a2:	or     cl,BYTE PTR [rdx]
  41a0a4:	or     cl,BYTE PTR [rdx]
  41a0a6:	or     cl,BYTE PTR [rdx]
  41a0a8:	or     cl,BYTE PTR [rdx]
  41a0aa:	or     cl,BYTE PTR [rdx]
  41a0ac:	or     cl,BYTE PTR [rdx]
  41a0ae:	or     cl,BYTE PTR [rdx]
  41a0b0:	or     cl,BYTE PTR [rdx]
  41a0b2:	or     cl,BYTE PTR [rdx]
  41a0b4:	or     cl,BYTE PTR [rdx]
  41a0b6:	or     cl,BYTE PTR [rdx]
  41a0b8:	or     cl,BYTE PTR [rdx]
  41a0ba:	or     cl,BYTE PTR [rdx]
  41a0bc:	or     cl,BYTE PTR [rdx]
  41a0be:	or     cl,BYTE PTR [rdx]
  41a0c0:	or     cl,BYTE PTR [rdx]
  41a0c2:	or     cl,BYTE PTR [rdx]
  41a0c4:	or     cl,BYTE PTR [rdx]
  41a0c6:	or     cl,BYTE PTR [rdx]
  41a0c8:	or     cl,BYTE PTR [rdx]
  41a0ca:	or     cl,BYTE PTR [rdx]
  41a0cc:	or     cl,BYTE PTR [rdx]
  41a0ce:	or     cl,BYTE PTR [rdx]
  41a0d0:	or     cl,BYTE PTR [rdx]
  41a0d2:	or     cl,BYTE PTR [rdx]
  41a0d4:	or     cl,BYTE PTR [rdx]
  41a0d6:	or     cl,BYTE PTR [rdx]
  41a0d8:	or     cl,BYTE PTR [rdx]
  41a0da:	or     cl,BYTE PTR [rdx]
  41a0dc:	or     cl,BYTE PTR [rdx]
  41a0de:	or     cl,BYTE PTR [rdx]
  41a0e0:	or     cl,BYTE PTR [rdx]
  41a0e2:	or     cl,BYTE PTR [rdx]
  41a0e4:	or     cl,BYTE PTR [rdx]
  41a0e6:	or     cl,BYTE PTR [rdx]
  41a0e8:	or     cl,BYTE PTR [rdx]
  41a0ea:	or     cl,BYTE PTR [rdx]
  41a0ec:	or     cl,BYTE PTR [rdx]
  41a0ee:	or     cl,BYTE PTR [rdx]
  41a0f0:	or     cl,BYTE PTR [rdx]
  41a0f2:	or     cl,BYTE PTR [rdx]
  41a0f4:	or     cl,BYTE PTR [rdx]
  41a0f6:	or     cl,BYTE PTR [rdx]
  41a0f8:	or     cl,BYTE PTR [rdx]
  41a0fa:	or     cl,BYTE PTR [rdx]
  41a0fc:	or     cl,BYTE PTR [rdx]
  41a0fe:	or     cl,BYTE PTR [rdx]
  41a100:	adc    dl,BYTE PTR [rdx]
  41a102:	adc    dl,BYTE PTR [rdx]
  41a104:	adc    dl,BYTE PTR [rdx]
  41a106:	adc    dl,BYTE PTR [rdx]
  41a108:	adc    dl,BYTE PTR [rdx]
  41a10a:	adc    dl,BYTE PTR [rdx]
  41a10c:	adc    dl,BYTE PTR [rdx]
  41a10e:	adc    dl,BYTE PTR [rdx]
  41a110:	adc    dl,BYTE PTR [rdx]
  41a112:	adc    dl,BYTE PTR [rdx]
  41a114:	adc    dl,BYTE PTR [rdx]
  41a116:	adc    dl,BYTE PTR [rdx]
  41a118:	adc    dl,BYTE PTR [rdx]
  41a11a:	adc    dl,BYTE PTR [rdx]
  41a11c:	adc    dl,BYTE PTR [rdx]
  41a11e:	adc    dl,BYTE PTR [rdx]
  41a120:	adc    dl,BYTE PTR [rdx]
  41a122:	adc    dl,BYTE PTR [rdx]
  41a124:	adc    dl,BYTE PTR [rdx]
  41a126:	adc    dl,BYTE PTR [rdx]
  41a128:	adc    dl,BYTE PTR [rdx]
  41a12a:	adc    dl,BYTE PTR [rdx]
  41a12c:	adc    dl,BYTE PTR [rdx]
  41a12e:	adc    dl,BYTE PTR [rdx]
  41a130:	adc    dl,BYTE PTR [rdx]
  41a132:	adc    dl,BYTE PTR [rdx]
  41a134:	adc    dl,BYTE PTR [rdx]
  41a136:	adc    dl,BYTE PTR [rdx]
  41a138:	adc    dl,BYTE PTR [rdx]
  41a13a:	adc    dl,BYTE PTR [rdx]
  41a13c:	adc    dl,BYTE PTR [rdx]
  41a13e:	adc    dl,BYTE PTR [rdx]
  41a140:	adc    dl,BYTE PTR [rdx]
  41a142:	adc    dl,BYTE PTR [rdx]
  41a144:	adc    dl,BYTE PTR [rdx]
  41a146:	adc    dl,BYTE PTR [rdx]
  41a148:	adc    dl,BYTE PTR [rdx]
  41a14a:	adc    dl,BYTE PTR [rdx]
  41a14c:	adc    dl,BYTE PTR [rdx]
  41a14e:	adc    dl,BYTE PTR [rdx]
  41a150:	adc    dl,BYTE PTR [rdx]
  41a152:	adc    dl,BYTE PTR [rdx]
  41a154:	adc    dl,BYTE PTR [rdx]
  41a156:	adc    dl,BYTE PTR [rdx]
  41a158:	adc    dl,BYTE PTR [rdx]
  41a15a:	adc    dl,BYTE PTR [rdx]
  41a15c:	adc    dl,BYTE PTR [rdx]
  41a15e:	adc    dl,BYTE PTR [rdx]
  41a160:	adc    dl,BYTE PTR [rdx]
  41a162:	add    BYTE PTR [rdx],dl
  41a164:	adc    dl,BYTE PTR [rdx]
  41a166:	adc    dl,BYTE PTR [rdx]
  41a168:	add    BYTE PTR [rdx],cl
  41a16a:	adc    al,BYTE PTR [rip+0x12051212]        # 0x1246b382
  41a170:	adc    dl,BYTE PTR [rdx]
  41a172:	adc    al,BYTE PTR [rax]
  41a174:	adc    dl,BYTE PTR [rdx]
  41a176:	adc    dl,BYTE PTR [rdx]
  41a178:	adc    dl,BYTE PTR [rdx]
  41a17a:	adc    dl,BYTE PTR [rdx]
  41a17c:	adc    dl,BYTE PTR [rdx]
  41a17e:	adc    dl,BYTE PTR [rdx]
  41a180:	adc    dl,BYTE PTR [rdx]
  41a182:	adc    dl,BYTE PTR [rdx]
  41a184:	adc    dl,BYTE PTR [rdx]
  41a186:	adc    dl,BYTE PTR [rdx]
  41a188:	adc    dl,BYTE PTR [rdx]
  41a18a:	adc    dl,BYTE PTR [rdx]
  41a18c:	adc    dl,BYTE PTR [rdx]
  41a18e:	adc    dl,BYTE PTR [rdx]
  41a190:	adc    dl,BYTE PTR [rdx]
  41a192:	adc    dl,BYTE PTR [rdx]
  41a194:	adc    dl,BYTE PTR [rdx]
  41a196:	adc    dl,BYTE PTR [rdx]
  41a198:	adc    dl,BYTE PTR [rdx]
  41a19a:	adc    dl,BYTE PTR [rdx]
  41a19c:	adc    dl,BYTE PTR [rdx]
  41a19e:	adc    dl,BYTE PTR [rdx]
  41a1a0:	adc    dl,BYTE PTR [rdx]
  41a1a2:	adc    dl,BYTE PTR [rdx]
  41a1a4:	adc    dl,BYTE PTR [rdx]
  41a1a6:	adc    dl,BYTE PTR [rdx]
  41a1a8:	adc    dl,BYTE PTR [rdx]
  41a1aa:	adc    dl,BYTE PTR [rdx]
  41a1ac:	adc    dl,BYTE PTR [rdx]
  41a1ae:	adc    dl,BYTE PTR [rdx]
  41a1b0:	adc    dl,BYTE PTR [rdx]
  41a1b2:	adc    dl,BYTE PTR [rdx]
  41a1b4:	adc    dl,BYTE PTR [rdx]
  41a1b6:	adc    dl,BYTE PTR [rdx]
  41a1b8:	adc    dl,BYTE PTR [rdx]
  41a1ba:	adc    dl,BYTE PTR [rdx]
  41a1bc:	adc    dl,BYTE PTR [rdx]
  41a1be:	adc    dl,BYTE PTR [rdx]
  41a1c0:	adc    dl,BYTE PTR [rdx]
  41a1c2:	adc    dl,BYTE PTR [rdx]
  41a1c4:	adc    dl,BYTE PTR [rdx]
  41a1c6:	adc    dl,BYTE PTR [rdx]
  41a1c8:	adc    dl,BYTE PTR [rdx]
  41a1ca:	adc    dl,BYTE PTR [rdx]
  41a1cc:	adc    dl,BYTE PTR [rdx]
  41a1ce:	adc    dl,BYTE PTR [rdx]
  41a1d0:	adc    dl,BYTE PTR [rdx]
  41a1d2:	adc    dl,BYTE PTR [rdx]
  41a1d4:	adc    dl,BYTE PTR [rdx]
  41a1d6:	adc    dl,BYTE PTR [rdx]
  41a1d8:	adc    dl,BYTE PTR [rdx]
  41a1da:	adc    dl,BYTE PTR [rdx]
  41a1dc:	adc    dl,BYTE PTR [rdx]
  41a1de:	adc    dl,BYTE PTR [rdx]
  41a1e0:	adc    dl,BYTE PTR [rdx]
  41a1e2:	adc    dl,BYTE PTR [rdx]
  41a1e4:	adc    dl,BYTE PTR [rdx]
  41a1e6:	adc    dl,BYTE PTR [rdx]
  41a1e8:	adc    dl,BYTE PTR [rdx]
  41a1ea:	adc    dl,BYTE PTR [rdx]
  41a1ec:	adc    dl,BYTE PTR [rdx]
  41a1ee:	adc    dl,BYTE PTR [rdx]
  41a1f0:	adc    dl,BYTE PTR [rdx]
  41a1f2:	adc    dl,BYTE PTR [rdx]
  41a1f4:	adc    dl,BYTE PTR [rdx]
  41a1f6:	adc    dl,BYTE PTR [rdx]
  41a1f8:	adc    dl,BYTE PTR [rdx]
  41a1fa:	adc    dl,BYTE PTR [rdx]
  41a1fc:	adc    dl,BYTE PTR [rdx]
  41a1fe:	adc    dl,BYTE PTR [rdx]
  41a200:	add    BYTE PTR es:[rax],al
  41a203:	add    BYTE PTR [rax+rax*1],al
  41a206:	add    BYTE PTR [rax],al
  41a208:	(bad)  
  41a209:	ins    DWORD PTR es:[rdi],dx
  41a20a:	jo     0x41a247
  41a20c:	add    BYTE PTR [rax],al
  41a20e:	add    BYTE PTR [rax],al
  41a210:	cmp    al,0x0
  41a212:	add    BYTE PTR [rax],al
  41a214:	add    eax,DWORD PTR [rax]
  41a216:	add    BYTE PTR [rax],al
  41a218:	ins    BYTE PTR es:[rdi],dx
  41a219:	je     0x41a256
  41a21b:	add    BYTE PTR [rax],al
  41a21d:	add    BYTE PTR [rax],al
  41a21f:	add    BYTE PTR [rsi],bh
  41a221:	add    BYTE PTR [rax],al
  41a223:	add    BYTE PTR [rbx],al
  41a225:	add    BYTE PTR [rax],al
  41a227:	add    BYTE PTR [rdi+0x74],ah
  41a22a:	cmp    eax,DWORD PTR [rax]
  41a22c:	add    BYTE PTR [rax],al
  41a22e:	add    BYTE PTR [rax],al
  41a230:	and    al,BYTE PTR [rax]
  41a232:	add    BYTE PTR [rax],al
  41a234:	add    eax,0x71000000
  41a239:	jne    0x41a2aa
  41a23b:	je     0x41a278
  41a23d:	add    BYTE PTR [rax],al
  41a23f:	add    BYTE PTR [rdi],ah
  41a241:	add    BYTE PTR [rax],al
  41a243:	add    BYTE PTR [rip+0x61000000],al        # 0x6141a249
  41a249:	jo     0x41a2ba
  41a24b:	jae    0x41a288
	...
  41a27d:	add    BYTE PTR [rax],al
  41a27f:	add    BYTE PTR [rdi+0x65],ah
  41a282:	outs   dx,BYTE PTR ds:[rsi]
  41a283:	jae    0x41a2ed
  41a285:	gs ins BYTE PTR es:[rdi],dx
  41a287:	ins    BYTE PTR es:[rdi],dx
  41a288:	outs   dx,DWORD PTR ds:[rsi]
  41a289:	jo     0x41a2ff
  41a28b:	and    BYTE PTR [rcx],dh
  41a28d:	or     al,BYTE PTR [rbx+0x6f]
  41a290:	jo     0x41a30b
  41a292:	jb     0x41a2fd
  41a294:	addr32 push 0x43282074
  41a29a:	sub    DWORD PTR [rax],esp
  41a29c:	xor    DWORD PTR [rcx],edi
  41a29e:	cmp    DWORD PTR [rcx],edi
  41a2a0:	sub    eax,0x34313032
  41a2a5:	and    BYTE PTR [rdx+0x72],al
  41a2a8:	jne    0x41a30d
  41a2aa:	and    BYTE PTR gs:[rbx+0x6f],cl
  41a2ae:	jb     0x41a312
  41a2b0:	sub    al,0x20
  41a2b2:	(bad)  
  41a2b3:	ins    BYTE PTR es:[rdi],dx
  41a2b4:	ins    BYTE PTR es:[rdi],dx
  41a2b5:	and    BYTE PTR [rdx+0x69],dh
  41a2b8:	addr32 push 0x72207374
  41a2be:	gs jae 0x41a326
  41a2c1:	jb     0x41a339
  41a2c3:	gs fs or dl,BYTE PTR cs:[rax+rbp*2+0x69]
  41a2ca:	jae    0x41a2ec
  41a2cc:	imul   esi,DWORD PTR [rbx+0x20],0x65657266
  41a2d3:	and    BYTE PTR [rbx+0x6f],dh
  41a2d6:	data16 je 0x41a350
  41a2d9:	(bad)  
  41a2da:	jb     0x41a341
  41a2dc:	and    BYTE PTR cs:[rcx+0x74],cl
  41a2e0:	and    BYTE PTR [rcx+0x73],ch
  41a2e3:	and    BYTE PTR [rcx+rbp*2+0x63],ch
  41a2e7:	outs   dx,BYTE PTR gs:[rsi]
  41a2e9:	jae    0x41a350
  41a2eb:	and    BYTE PTR fs:[rsi+0x6f],ah
  41a2ef:	jb     0x41a311
  41a2f1:	jne    0x41a366
  41a2f3:	gs sub al,0x20
  41a2f6:	ins    DWORD PTR es:[rdi],dx
  41a2f7:	outs   dx,DWORD PTR ds:[rsi]
  41a2f8:	imul   esp,DWORD PTR fs:[rsi+0x69],0x69746163
  41a300:	outs   dx,DWORD PTR ds:[rsi]
  41a301:	outs   dx,BYTE PTR ds:[rsi]
  41a302:	and    BYTE PTR [rcx+0x6e],ah
  41a305:	or     dh,BYTE PTR fs:[rdx+0x65]
  41a309:	imul   esi,DWORD PTR fs:[rbx+0x74],0x75626972
  41a311:	je     0x41a37c
  41a313:	outs   dx,DWORD PTR ds:[rsi]
  41a314:	outs   dx,BYTE PTR ds:[rsi]
  41a315:	and    BYTE PTR [rbp+0x6e],dh
  41a318:	fs gs jb 0x41a33c
  41a31c:	je     0x41a386
  41a31e:	and    BYTE PTR gs:[rbp+riz*2+0x72],dh
  41a323:	ins    DWORD PTR es:[rdi],dx
  41a324:	jae    0x41a346
  41a326:	outs   dx,DWORD PTR ds:[rsi]
  41a327:	data16 and BYTE PTR [rax+rbp*2+0x65],dh
  41a32c:	and    BYTE PTR [rdi+0x4e],al
  41a32f:	push   rbp
  41a330:	and    BYTE PTR [rbp+riz*2+0x73],cl
  41a334:	jae    0x41a39b
  41a336:	jb     0x41a358
  41a338:	rex.RXB
  41a339:	outs   dx,BYTE PTR gs:[rsi]
  41a33b:	gs jb  0x41a39f
  41a33e:	ins    BYTE PTR es:[rdi],dx
  41a33f:	and    BYTE PTR [rax+0x75],dl
  41a342:	(bad)  
  41a343:	ins    BYTE PTR es:[rdi],dx
  41a344:	imul   esp,DWORD PTR [rbx+0x20],0x6563694c
  41a34b:	outs   dx,BYTE PTR ds:[rsi]
  41a34c:	jae    0x41a3b3
  41a34e:	sub    al,0xa
  41a350:	jbe    0x41a3b7
  41a352:	jb     0x41a3c7
  41a354:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f203220
  41a35b:	jb     0x41a37d
  41a35d:	ins    BYTE PTR es:[rdi],dx
  41a35e:	(bad)  
  41a35f:	je     0x41a3c6
  41a361:	jb     0x41a383
  41a363:	cmp    al,0x68
  41a365:	je     0x41a3db
  41a367:	jo     0x41a3a3
  41a369:	(bad)  
  41a36a:	(bad)  
  41a36b:	ja     0x41a3e4
  41a36d:	ja     0x41a39d
  41a36f:	outs   dx,BYTE PTR ds:[esi]
  41a371:	jne    0x41a3a1
  41a373:	outs   dx,DWORD PTR ds:[rsi]
  41a374:	jb     0x41a3dd
  41a376:	(bad)  
  41a377:	ins    BYTE PTR es:[rdi],dx
  41a378:	imul   esp,DWORD PTR [rbx+0x65],0x7365736e
  41a37f:	(bad)  
  41a380:	outs   dx,DWORD PTR ds:[rsi]
  41a381:	ins    BYTE PTR es:[rdi],dx
  41a382:	fs sub eax,0x6563696c
  41a388:	outs   dx,BYTE PTR ds:[rsi]
  41a389:	jae    0x41a3f0
  41a38b:	jae    0x41a3bc
  41a38d:	ins    BYTE PTR es:[rdi],dx
  41a38e:	addr32 jo 0x41a3fd
  41a391:	sub    eax,0x2e302e32
  41a396:	push   0x3e6c6d74
  41a39b:	or     al,BYTE PTR [rax]
  41a39d:	push   rsp
  41a39e:	push   0x65672065
  41a3a3:	outs   dx,BYTE PTR ds:[rsi]
  41a3a4:	jae    0x41a40e
  41a3a6:	gs ins BYTE PTR es:[rdi],dx
  41a3a8:	ins    BYTE PTR es:[rdi],dx
  41a3a9:	outs   dx,DWORD PTR ds:[rsi]
  41a3aa:	jo     0x41a420
  41a3ac:	and    BYTE PTR [rcx+rbp*2+0x62],ch
  41a3b0:	jb     0x41a413
  41a3b2:	jb     0x41a42d
  41a3b4:	and    BYTE PTR [rcx+0x73],ch
  41a3b7:	and    BYTE PTR [rsi+0x72],ah
  41a3ba:	gs and BYTE PTR gs:[rbx+0x6f],dh
  41a3bf:	data16 je 0x41a439
  41a3c2:	(bad)  
  41a3c3:	jb     0x41a42a
  41a3c5:	cmp    esp,DWORD PTR [rax]
  41a3c7:	jns    0x41a438
  41a3c9:	jne    0x41a3eb
  41a3cb:	movsxd esp,DWORD PTR [rcx+0x6e]
  41a3ce:	and    BYTE PTR [rdx+0x65],dh
  41a3d1:	imul   esi,DWORD PTR fs:[rbx+0x74],0x75626972
  41a3d9:	je     0x41a440
  41a3db:	and    BYTE PTR [rcx+0x74],ch
  41a3de:	and    BYTE PTR [rcx+0x6e],ah
  41a3e1:	fs (bad) 
  41a3e3:	outs   dx,DWORD PTR ds:[rsi]
  41a3e4:	jb     0x41a3f0
  41a3e6:	ins    DWORD PTR es:[rdi],dx
  41a3e7:	outs   dx,DWORD PTR ds:[rsi]
  41a3e8:	imul   esp,DWORD PTR fs:[rsi+0x79],0x20746920
  41a3f0:	jne    0x41a460
  41a3f2:	fs gs jb 0x41a416
  41a3f6:	je     0x41a460
  41a3f8:	and    BYTE PTR gs:[rbp+riz*2+0x72],dh
  41a3fd:	ins    DWORD PTR es:[rdi],dx
  41a3fe:	jae    0x41a420
  41a400:	outs   dx,DWORD PTR ds:[rsi]
  41a401:	data16 and BYTE PTR [rax+rbp*2+0x65],dh
  41a406:	and    BYTE PTR [rdi+0x4e],al
  41a409:	push   rbp
  41a40a:	and    BYTE PTR [rcx+rbp*2+0x62],cl
  41a40e:	jb     0x41a471
  41a410:	jb     0x41a48b
  41a412:	and    BYTE PTR [rdi+0x65],al
  41a415:	outs   dx,BYTE PTR ds:[rsi]
  41a416:	gs jb  0x41a47a
  41a419:	ins    BYTE PTR es:[rdi],dx
  41a41a:	and    BYTE PTR [rax+0x75],dl
  41a41d:	(bad)  
  41a41e:	ins    BYTE PTR es:[rdi],dx
  41a41f:	imul   esp,DWORD PTR [rbx+0x20],0x6563694c
  41a426:	outs   dx,BYTE PTR ds:[rsi]
  41a427:	jae    0x41a48e
  41a429:	and    BYTE PTR [rcx+0x73],ah
  41a42c:	or     dh,BYTE PTR [rax+0x75]
  41a42f:	(bad)  
  41a430:	ins    BYTE PTR es:[rdi],dx
  41a431:	imul   esi,DWORD PTR [rbx+0x68],0x62206465
  41a438:	jns    0x41a45a
  41a43a:	je     0x41a4a4
  41a43c:	and    BYTE PTR gs:[rsi+0x72],al
  41a440:	gs and BYTE PTR gs:[rbx+0x6f],dl
  41a445:	data16 je 0x41a4bf
  41a448:	(bad)  
  41a449:	jb     0x41a4b0
  41a44b:	and    BYTE PTR [rsi+0x6f],al
  41a44e:	jne    0x41a4be
  41a450:	fs (bad) 
  41a452:	je     0x41a4bd
  41a454:	outs   dx,DWORD PTR ds:[rsi]
  41a455:	outs   dx,BYTE PTR ds:[rsi]
  41a456:	cmp    esp,DWORD PTR [rax]
  41a458:	imul   esi,DWORD PTR gs:[rax+rbp*2+0x65],0x65762072
  41a461:	jb     0x41a4d6
  41a463:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f203220
  41a46a:	data16 and BYTE PTR [rax+rbp*2+0x65],dh
  41a46f:	and    BYTE PTR [rcx+rbp*2+0x63],cl
  41a473:	outs   dx,BYTE PTR gs:[rsi]
  41a475:	jae    0x41a4dc
  41a477:	sub    al,0xa
  41a479:	outs   dx,DWORD PTR ds:[rsi]
  41a47a:	jb     0x41a49c
  41a47c:	sub    BYTE PTR [rcx+0x74],ah
  41a47f:	and    BYTE PTR [rcx+0x6f],bh
  41a482:	jne    0x41a4f6
  41a484:	and    BYTE PTR [rdi+0x70],ch
  41a487:	je     0x41a4f2
  41a489:	outs   dx,DWORD PTR ds:[rsi]
  41a48a:	outs   dx,BYTE PTR ds:[rsi]
  41a48b:	sub    DWORD PTR [rax],esp
  41a48d:	(bad)  
  41a48e:	outs   dx,BYTE PTR ds:[rsi]
  41a48f:	jns    0x41a4b1
  41a491:	ins    BYTE PTR es:[rdi],dx
  41a492:	(bad)  
  41a493:	je     0x41a4fa
  41a495:	jb     0x41a4b7
  41a497:	jbe    0x41a4fe
  41a499:	jb     0x41a50e
  41a49b:	imul   ebp,DWORD PTR [rdi+0x6e],0x540a0a2e
  41a4a2:	push   0x6c207369
  41a4a7:	imul   esp,DWORD PTR [rdx+0x72],0x20797261
  41a4ae:	imul   esi,DWORD PTR [rbx+0x20],0x74736964
  41a4b5:	jb     0x41a520
  41a4b7:	(bad)  
  41a4b8:	jne    0x41a52e
  41a4ba:	gs and BYTE PTR fs:[rcx+0x6e],ch
  41a4bf:	and    BYTE PTR [rax+rbp*2+0x65],dh
  41a4c3:	and    BYTE PTR [rax+0x6f],ch
  41a4c6:	jo     0x41a52d
  41a4c8:	and    BYTE PTR [rax+rbp*2+0x61],dh
  41a4cc:	je     0x41a4ee
  41a4ce:	imul   esi,DWORD PTR [rax+riz*1+0x77],0x206c6c69
  41a4d6:	(bad)  
  41a4d7:	and    BYTE PTR gs:[rbp+0x73],dh
  41a4db:	gs data16 jne 0x41a54b
  41a4df:	sub    al,0x20
  41a4e1:	(bad)  
  41a4e2:	jne    0x41a558
  41a4e4:	and    BYTE PTR [rdi+0x49],dl
  41a4e7:	push   rsp
  41a4e8:	rex.W
  41a4e9:	rex.WRXB push r13
  41a4eb:	push   rsp
  41a4ec:	or     al,BYTE PTR [rcx+0x4e]
  41a4ef:	pop    rcx
  41a4f0:	and    BYTE PTR [rdi+0x41],dl
  41a4f3:	push   rdx
  41a4f4:	push   rdx
  41a4f5:	rex.B
  41a4f6:	rex.WRX push rsp
  41a4f8:	pop    rcx
  41a4f9:	cmp    esp,DWORD PTR [rax]
  41a4fb:	ja     0x41a566
  41a4fd:	je     0x41a567
  41a4ff:	outs   dx,DWORD PTR ds:[rsi]
  41a500:	jne    0x41a576
  41a502:	and    BYTE PTR [rbp+0x76],ah
  41a505:	outs   dx,BYTE PTR gs:[rsi]
  41a507:	and    BYTE PTR [rax+rbp*2+0x65],dh
  41a50b:	and    BYTE PTR [rcx+0x6d],ch
  41a50e:	jo     0x41a57c
  41a510:	imul   esp,DWORD PTR [rbp+0x64],0x72617720
  41a517:	jb     0x41a57a
  41a519:	outs   dx,BYTE PTR ds:[rsi]
  41a51a:	je     0x41a595
  41a51c:	and    BYTE PTR [rdi+0x66],ch
  41a51f:	and    BYTE PTR [rbp+0x45],cl
  41a522:	push   rdx
  41a523:	rex.XB
  41a524:	rex.W
  41a525:	rex.B
  41a526:	rex.WRX push rsp
  41a528:	rex.B
  41a529:	rex.X
  41a52a:	rex.WB
  41a52b:	rex.WR
  41a52c:	rex.WB push r12
  41a52e:	pop    rcx
  41a52f:	and    BYTE PTR [rdi+0x72],ch
  41a532:	or     al,BYTE PTR [rsi+0x49]
  41a535:	push   rsp
  41a536:	rex.WRX
  41a537:	rex.RB push r11
  41a539:	push   rbx
  41a53a:	and    BYTE PTR [rsi+0x4f],al
  41a53d:	push   rdx
  41a53e:	and    BYTE PTR [rcx+0x20],al
  41a541:	push   rax
  41a542:	push   r10
  41a544:	push   rsp
  41a545:	rex.WB
  41a546:	rex.XB push r13
  41a548:	rex.WR
  41a549:	push   r10
  41a54b:	and    BYTE PTR [rax+0x55],dl
  41a54e:	push   rdx
  41a54f:	push   rax
  41a550:	rex.WRXB push r11
  41a552:	rex.RB
  41a553:	and    BYTE PTR cs:[rax],ah
  41a556:	push   rbx
  41a557:	gs and BYTE PTR gs:[rax+rbp*2+0x65],dh
  41a55d:	and    BYTE PTR [rdi+0x4e],al
  41a560:	push   rbp
  41a561:	and    BYTE PTR [rcx+rbp*2+0x62],cl
  41a565:	jb     0x41a5c8
  41a567:	jb     0x41a5e2
  41a569:	and    BYTE PTR [rdi+0x65],al
  41a56c:	outs   dx,BYTE PTR ds:[rsi]
  41a56d:	gs jb  0x41a5d1
  41a570:	ins    BYTE PTR es:[rdi],dx
  41a571:	and    BYTE PTR [rax+0x75],dl
  41a574:	(bad)  
  41a575:	ins    BYTE PTR es:[rdi],dx
  41a576:	imul   esp,DWORD PTR [rbx+0xa],0x6563694c
  41a57d:	outs   dx,BYTE PTR ds:[rsi]
  41a57e:	jae    0x41a5e5
  41a580:	and    BYTE PTR [rsi+0x6f],ah
  41a583:	jb     0x41a5a5
  41a585:	ins    DWORD PTR es:[rdi],dx
  41a586:	outs   dx,DWORD PTR ds:[rsi]
  41a587:	jb     0x41a5ee
  41a589:	and    BYTE PTR [rbp+riz*2+0x74],ah
  41a58d:	(bad)  
  41a58e:	imul   ebp,DWORD PTR [rbx+rsi*2+0x2e],0x6f590a0a
  41a596:	jne    0x41a5b8
  41a598:	jae    0x41a602
  41a59a:	outs   dx,DWORD PTR ds:[rsi]
  41a59b:	jne    0x41a609
  41a59d:	and    BYTE PTR fs:[rax+0x61],ch
  41a5a1:	jbe    0x41a608
  41a5a3:	and    BYTE PTR [rdx+0x65],dh
  41a5a6:	movsxd esp,DWORD PTR [rbp+0x69]
  41a5a9:	jbe    0x41a610
  41a5ab:	and    BYTE PTR fs:[rcx+0x20],ah
  41a5af:	movsxd ebp,DWORD PTR [rdi+0x70]
  41a5b2:	jns    0x41a5d4
  41a5b4:	outs   dx,DWORD PTR ds:[rsi]
  41a5b5:	data16 and BYTE PTR [rax+rbp*2+0x65],dh
  41a5ba:	and    BYTE PTR [rdi+0x4e],al
  41a5bd:	push   rbp
  41a5be:	and    BYTE PTR [rcx+rbp*2+0x62],cl
  41a5c2:	jb     0x41a625
  41a5c4:	jb     0x41a63f
  41a5c6:	and    BYTE PTR [rdi+0x65],al
  41a5c9:	outs   dx,BYTE PTR ds:[rsi]
  41a5ca:	gs jb  0x41a62e
  41a5cd:	ins    BYTE PTR es:[rdi],dx
  41a5ce:	and    BYTE PTR [rax+0x75],dl
  41a5d1:	(bad)  
  41a5d2:	ins    BYTE PTR es:[rdi],dx
  41a5d3:	imul   esp,DWORD PTR [rbx+0x20],0x6563694c
  41a5da:	outs   dx,BYTE PTR ds:[rsi]
  41a5db:	jae    0x41a642
  41a5dd:	or     ah,BYTE PTR [rcx+0x6c]
  41a5e0:	outs   dx,DWORD PTR ds:[rsi]
  41a5e1:	outs   dx,BYTE PTR ds:[rsi]
  41a5e2:	and    BYTE PTR [edi+0x69],dh
  41a5e6:	je     0x41a650
  41a5e8:	and    BYTE PTR [rax+rbp*2+0x69],dh
  41a5ec:	jae    0x41a60e
  41a5ee:	ins    BYTE PTR es:[rdi],dx
  41a5ef:	imul   esp,DWORD PTR [rdx+0x72],0x3b797261
  41a5f6:	and    BYTE PTR [rcx+0x66],ch
  41a5f9:	and    BYTE PTR [rsi+0x6f],ch
  41a5fc:	je     0x41a62a
  41a5fe:	and    BYTE PTR [rbx+0x65],dh
  41a601:	or     bh,BYTE PTR gs:[rax+rbp*2]
  41a605:	je     0x41a67b
  41a607:	jo     0x41a643
  41a609:	(bad)  
  41a60a:	(bad)  
  41a60b:	ja     0x41a684
  41a60d:	ja     0x41a63d
  41a60f:	outs   dx,BYTE PTR ds:[esi]
  41a611:	jne    0x41a641
  41a613:	outs   dx,DWORD PTR ds:[rsi]
  41a614:	jb     0x41a67d
  41a616:	(bad)  
  41a617:	ins    BYTE PTR es:[rdi],dx
  41a618:	imul   esp,DWORD PTR [rbx+0x65],0x7365736e
  41a61f:	(bad)  
  41a620:	outs   dx,DWORD PTR ds:[rsi]
  41a621:	ins    BYTE PTR es:[rdi],dx
  41a622:	fs sub eax,0x6563696c
  41a628:	outs   dx,BYTE PTR ds:[rsi]
  41a629:	jae    0x41a690
  41a62b:	jae    0x41a65c
  41a62d:	ins    BYTE PTR es:[rdi],dx
  41a62e:	addr32 jo 0x41a69d
  41a631:	sub    eax,0x2e302e32
  41a636:	push   0x3e6c6d74
  41a63b:	or     al,BYTE PTR [rax]
  41a63d:	rex.WRXB jne 0x41a6b4
  41a640:	jo     0x41a6b7
  41a642:	je     0x41a664
  41a644:	push   rbx
  41a645:	movsxd esi,DWORD PTR [rdx+0x69]
  41a648:	jo     0x41a6be
  41a64a:	and    BYTE PTR [rsi+0x69],al
  41a64d:	ins    BYTE PTR es:[rdi],dx
  41a64e:	add    BYTE PTR gs:[rbx+0x43],dl
  41a652:	push   rdx
  41a653:	rex.WB push r8
  41a655:	push   rsp
  41a656:	add    BYTE PTR [rbx+0x63],dh
  41a659:	jb     0x41a6c4
  41a65b:	jo     0x41a6d1
  41a65d:	add    BYTE PTR [rbx+0x68],dl
  41a660:	gs ins BYTE PTR es:[rdi],dx
  41a662:	ins    BYTE PTR es:[rdi],dx
  41a663:	and    BYTE PTR [rsi+0x61],ch
  41a666:	ins    DWORD PTR es:[rdi],dx
  41a667:	and    BYTE PTR gs:[rax],ch
  41a66a:	outs   dx,WORD PTR ds:[rsi]
  41a66c:	ins    BYTE PTR es:[rdi],dx
  41a66d:	ins    BYTE PTR es:[rdi],dx
  41a66e:	outs   dx,DWORD PTR ds:[rsi]
  41a66f:	ja     0x41a6e4
  41a671:	and    BYTE PTR [rdx],ah
  41a673:	and    esp,DWORD PTR [rcx]
  41a675:	and    ah,BYTE PTR [rax]
  41a677:	ins    DWORD PTR es:[rdi],dx
  41a678:	(bad)  
  41a679:	imul   esp,DWORD PTR [ebx+0x29],0x45485300
  41a681:	rex.WR
  41a682:	rex.WR add BYTE PTR [rsi+0x6f],r13b
  41a686:	sub    eax,0x6c656873
  41a68b:	ins    BYTE PTR es:[rdi],dx
  41a68c:	add    BYTE PTR [rsi+0x6f],ch
  41a68f:	add    BYTE PTR [rcx+rbp*2+0x73],ah
  41a693:	jo     0x41a701
  41a695:	(bad)  
  41a696:	jns    0x41a6b8
  41a698:	gs js  0x41a70f
  41a69b:	outs   dx,BYTE PTR gs:[rsi]
  41a69d:	fs gs and BYTE PTR fs:[rbp+0x73],dh
  41a6a3:	(bad)  
  41a6a4:	and    BYTE PTR gs:[ecx+0x6e],ch
  41a6a9:	outs   dx,WORD PTR ds:[rsi]
  41a6ab:	jb     0x41a71a
  41a6ad:	(bad)  
  41a6ae:	je     0x41a719
  41a6b0:	outs   dx,DWORD PTR ds:[rsi]
  41a6b1:	outs   dx,BYTE PTR ds:[rsi]
  41a6b2:	and    BYTE PTR [rcx+0x6e],ah
  41a6b5:	and    BYTE PTR fs:[rbp+0x78],ah
  41a6b9:	imul   esi,DWORD PTR [rax+rax*1+0x68],0x706c65
  41a6c1:	gs js  0x41a738
  41a6c4:	outs   dx,BYTE PTR gs:[rsi]
  41a6c6:	fs gs and BYTE PTR fs:[rbp+0x73],dh
  41a6cc:	(bad)  
  41a6cd:	and    BYTE PTR gs:[ecx+0x6e],ch
  41a6d2:	outs   dx,WORD PTR ds:[rsi]
  41a6d4:	jb     0x41a743
  41a6d6:	(bad)  
  41a6d7:	je     0x41a742
  41a6d9:	outs   dx,DWORD PTR ds:[rsi]
  41a6da:	outs   dx,BYTE PTR ds:[rsi]
  41a6db:	and    BYTE PTR [rax+0x61],dh
  41a6de:	jae    0x41a753
  41a6e0:	gs and BYTE PTR fs:[rax+rbp*2+0x72],dh
  41a6e6:	jne    0x41a708
  41a6e8:	jo     0x41a74b
  41a6ea:	addr32 gs jb 0x41a6ee
  41a6ee:	ins    DWORD PTR es:[rdi],dx
  41a6ef:	outs   dx,DWORD PTR ds:[rsi]
  41a6f0:	jb     0x41a757
  41a6f2:	sub    eax,0x706c6568
  41a6f7:	add    BYTE PTR [rdi+0x75],ch
  41a6fa:	je     0x41a76c
  41a6fc:	jne    0x41a772
  41a6fe:	and    BYTE PTR [rsi+0x65],dh
  41a701:	jb     0x41a776
  41a703:	imul   ebp,DWORD PTR [rdi+0x6e],0x666e6920
  41a70a:	outs   dx,DWORD PTR ds:[rsi]
  41a70b:	jb     0x41a77a
  41a70d:	(bad)  
  41a70e:	je     0x41a779
  41a710:	outs   dx,DWORD PTR ds:[rsi]
  41a711:	outs   dx,BYTE PTR ds:[rsi]
  41a712:	and    BYTE PTR [rcx+0x6e],ah
  41a715:	and    BYTE PTR fs:[rbp+0x78],ah
  41a719:	imul   esi,DWORD PTR [rax+rax*1+0x76],0x69737265
  41a721:	outs   dx,DWORD PTR ds:[rsi]
  41a722:	outs   dx,BYTE PTR ds:[rsi]
  41a723:	add    BYTE PTR [rdi+0x45],al
  41a726:	rex.WRX push rbx
  41a728:	rex.W
  41a729:	rex.RB
  41a72a:	rex.WR
  41a72b:	rex.WR
  41a72c:	rex.WRXB push r8
  41a72e:	push   rsp
  41a72f:	add    BYTE PTR [rdi+0x65],ah
  41a732:	outs   dx,BYTE PTR ds:[rsi]
  41a733:	jae    0x41a79d
  41a735:	gs ins BYTE PTR es:[rdi],dx
  41a737:	ins    BYTE PTR es:[rdi],dx
  41a738:	outs   dx,DWORD PTR ds:[rsi]
  41a739:	jo     0x41a7af
  41a73b:	and    BYTE PTR [rip+0x6e654720],ch        # 0x6ea6ee61
  41a741:	gs jb  0x41a7a5
  41a744:	je     0x41a7ab
  41a746:	and    BYTE PTR [rbx+0x68],dl
  41a749:	gs ins BYTE PTR es:[rdi],dx
  41a74b:	ins    BYTE PTR es:[rdi],dx
  41a74c:	and    BYTE PTR [rdi+0x70],cl
  41a74f:	je     0x41a7ba
  41a751:	outs   dx,DWORD PTR ds:[rsi]
  41a752:	outs   dx,BYTE PTR ds:[rsi]
  41a753:	and    BYTE PTR [rax+0x72],dl
  41a756:	outs   dx,DWORD PTR ds:[rsi]
  41a757:	movsxd esp,DWORD PTR [rbp+0x73]
  41a75a:	jae    0x41a7c5
  41a75c:	outs   dx,BYTE PTR ds:[rsi]
  41a75d:	and    BYTE PTR [ebx+0x63],dl
  41a761:	jb     0x41a7cc
  41a763:	jo     0x41a7d9
  41a765:	and    BYTE PTR [rip+0x72655620],ch        # 0x72a6fd8b
  41a76b:	and    BYTE PTR cs:[rcx],dh
  41a76e:	or     dl,BYTE PTR [rbp+0x73]
  41a771:	(bad)  
  41a772:	cmp    ah,BYTE PTR gs:[eax]
  41a776:	and    BYTE PTR [rip+0x205b2073],ah        # 0x209cc7ef
  41a77c:	sub    eax,0x616c663c
  41a781:	and    BYTE PTR ds:[ebx+0x3c],bl
  41a786:	jbe    0x41a7e9
  41a788:	ins    BYTE PTR es:[rdi],dx
  41a789:	ds pop rbp
  41a78b:	and    BYTE PTR [rax+riz*1+0x2d],bh
  41a78f:	sub    eax,0x6d616e3c
  41a794:	gs ds pop rbx
  41a797:	jnp    0x41a7d6
  41a799:	jl     0x41a7bb
  41a79b:	jge    0x41a7d9
  41a79d:	jbe    0x41a800
  41a79f:	ins    BYTE PTR es:[rdi],dx
  41a7a0:	ds pop rbp
  41a7a2:	and    BYTE PTR [rbp+0x2e],bl
  41a7a5:	cs or  al,BYTE PTR cs:[rax]
  41a7a9:	(bad)  
  41a7aa:	jne    0x41a820
  41a7ac:	outs   dx,DWORD PTR ds:[rsi]
  41a7ad:	outs   dx,BYTE PTR gs:[esi]
  41a7b0:	sub    eax,0x72657375
  41a7b5:	jae    0x41a7f7
  41a7b7:	ins    BYTE PTR es:[rdi],dx
  41a7b8:	imul   esi,DWORD PTR [rbx+0x74],0x6f732e73
  41a7bf:	jne    0x41a833
  41a7c1:	movsxd esp,DWORD PTR [rbp+0x66]
  41a7c4:	outs   dx,DWORD PTR ds:[rsi]
  41a7c5:	jb     0x41a82e
  41a7c7:	gs outs dx,BYTE PTR cs:[rsi]
  41a7ca:	gs je  0x41a7cd
  41a7cd:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  41a7cf:	je     0x41a836
  41a7d1:	and    BYTE PTR [rax+rbp*2+0x61],dh
  41a7d5:	je     0x41a7f7
  41a7d7:	(bad)  
  41a7d8:	jae    0x41a842
  41a7da:	gs ins BYTE PTR es:[rdi],dx
  41a7dc:	ins    BYTE PTR es:[rdi],dx
  41a7dd:	(bad)  
  41a7de:	and    BYTE PTR [rcx+0x73],ch
  41a7e1:	and    BYTE PTR [rdi+0x6e],ch
  41a7e4:	ins    BYTE PTR es:[rdi],dx
  41a7e5:	jns    0x41a807
  41a7e7:	jne    0x41a85c
  41a7e9:	gs data16 jne 0x41a859
  41a7ed:	and    BYTE PTR [rcx+0x66],ch
  41a7f0:	and    BYTE PTR [rax+rbp*2+0x65],dh
  41a7f4:	and    BYTE PTR [rdi+0x75],ch
  41a7f7:	je     0x41a869
  41a7f9:	jne    0x41a86f
  41a7fb:	and    BYTE PTR [rsi+0x69],ah
  41a7fe:	ins    BYTE PTR es:[rdi],dx
  41a7ff:	and    BYTE PTR gs:[rdi+rbp*2+0x65],ah
  41a804:	jae    0x41a826
  41a806:	outs   dx,BYTE PTR ds:[rsi]
  41a807:	outs   dx,DWORD PTR ds:[rsi]
  41a808:	je     0x41a82a
  41a80a:	(bad)  
  41a80b:	ins    BYTE PTR es:[rdi],dx
  41a80c:	jb     0x41a873
  41a80e:	(bad)  
  41a80f:	fs jns 0x41a832
  41a812:	gs js  0x41a87e
  41a815:	jae    0x41a88b
  41a817:	or     cl,BYTE PTR cs:[rcx+0x66]
  41a81b:	and    BYTE PTR [rcx+0x74],ch
  41a81e:	and    BYTE PTR [rdi+rbp*2+0x65],ah
  41a822:	jae    0x41a850
  41a824:	and    BYTE PTR [rax+rbp*2+0x65],dh
  41a828:	outs   dx,BYTE PTR ds:[rsi]
  41a829:	and    BYTE PTR [rax+rbp*2+0x65],dh
  41a82d:	and    BYTE PTR [rbx+0x68],dh
  41a830:	gs ins BYTE PTR es:[rdi],dx
  41a832:	ins    BYTE PTR es:[rdi],dx
  41a833:	and    BYTE PTR [rsi+0x61],ch
  41a836:	ins    DWORD PTR es:[rdi],dx
  41a837:	and    BYTE PTR gs:[rcx+0x6e],ah
  41a83b:	and    BYTE PTR fs:[rdi+0x70],ch
  41a83f:	je     0x41a8aa
  41a841:	outs   dx,DWORD PTR ds:[rsi]
  41a842:	outs   dx,BYTE PTR ds:[rsi]
  41a843:	(bad)  
  41a844:	ins    BYTE PTR es:[rdi],dx
  41a845:	and    BYTE PTR [rsi+0x69],ah
  41a848:	jb     0x41a8bd
  41a84a:	je     0x41a86c
  41a84c:	(bad)  
  41a84d:	jb     0x41a8b6
  41a84f:	jne    0x41a8be
  41a851:	outs   dx,BYTE PTR gs:[rsi]
  41a853:	je     0x41a875
  41a855:	ja     0x41a8c0
  41a857:	ins    BYTE PTR es:[rdi],dx
  41a858:	ins    BYTE PTR es:[rdi],dx
  41a859:	and    BYTE PTR [rdx+0x65],ah
  41a85c:	or     ah,BYTE PTR [rbp+0x78]
  41a85f:	je     0x41a8d3
  41a861:	(bad)  
  41a862:	movsxd esi,DWORD PTR [rbp+riz*2+0x64]
  41a866:	and    BYTE PTR [rsi+0x72],ah
  41a869:	outs   dx,DWORD PTR ds:[rsi]
  41a86a:	ins    DWORD PTR es:[rdi],dx
  41a86b:	and    BYTE PTR [rax+rbp*2+0x65],dh
  41a86f:	and    BYTE PTR [rbx+0x63],dh
  41a872:	jb     0x41a8dd
  41a874:	jo     0x41a8ea
  41a876:	and    BYTE PTR [rsi+0x69],ah
  41a879:	ins    BYTE PTR es:[rdi],dx
  41a87a:	gs or  al,BYTE PTR cs:[rax]
  41a87e:	rex.WB
  41a87f:	data16 and BYTE PTR [rax+rbp*2+0x65],dh
  41a884:	and    BYTE PTR [rbx+0x63],dh
  41a887:	jb     0x41a8f2
  41a889:	jo     0x41a8ff
  41a88b:	and    BYTE PTR [rsi+0x69],ah
  41a88e:	ins    BYTE PTR es:[rdi],dx
  41a88f:	and    BYTE PTR gs:[rcx+0x6c],ah
  41a893:	jb     0x41a8fa
  41a895:	(bad)  
  41a896:	fs jns 0x41a8b9
  41a899:	gs js  0x41a905
  41a89c:	jae    0x41a912
  41a89e:	jae    0x41a8c0
  41a8a0:	(bad)  
  41a8a1:	outs   dx,BYTE PTR ds:[rsi]
  41a8a2:	and    BYTE PTR fs:[rbx+0x6f],ah
  41a8a6:	outs   dx,BYTE PTR ds:[rsi]
  41a8a7:	je     0x41a90a
  41a8a9:	imul   ebp,DWORD PTR [rsi+0x73],0x74754120
  41a8b0:	outs   dx,DWORD PTR ds:[rsi]
  41a8b1:	ins    DWORD PTR es:[rdi],dx
  41a8b2:	(bad)  
  41a8b3:	je     0x41a91a
  41a8b5:	and    BYTE PTR fs:[rdi+0x70],cl
  41a8b9:	je     0x41a924
  41a8bb:	outs   dx,DWORD PTR ds:[rsi]
  41a8bc:	outs   dx,BYTE PTR ds:[rsi]
  41a8bd:	and    BYTE PTR [rax+0x72],dl
  41a8c0:	outs   dx,DWORD PTR ds:[rsi]
  41a8c1:	movsxd esp,DWORD PTR [rbp+0x73]
  41a8c4:	jae    0x41a92f
  41a8c6:	outs   dx,BYTE PTR ds:[rsi]
  41a8c7:	or     dh,BYTE PTR [ebp+eiz*2+0x78]
  41a8cc:	je     0x41a8fa
  41a8ce:	and    BYTE PTR [rax+rbp*2+0x65],dh
  41a8d2:	and    BYTE PTR [rbx+0x65],dh
  41a8d5:	movsxd ebp,DWORD PTR [rdi+0x6e]
  41a8d8:	and    BYTE PTR fs:[rcx+rbp*2+0x6e],ch
  41a8dd:	and    BYTE PTR gs:[rdi+0x66],ch
  41a8e1:	and    BYTE PTR [rax+rbp*2+0x65],dh
  41a8e5:	and    BYTE PTR [rsi+0x69],ah
  41a8e8:	ins    BYTE PTR es:[rdi],dx
  41a8e9:	and    BYTE PTR gs:[rax+rbp*2+0x72],dh
  41a8ee:	outs   dx,DWORD PTR ds:[rsi]
  41a8ef:	jne    0x41a958
  41a8f1:	push   0x65687420
  41a8f6:	and    BYTE PTR [rbp+0x6e],ah
  41a8f9:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x67617420
  41a901:	and    BYTE PTR [rdi+0x69],dh
  41a904:	ins    BYTE PTR es:[rdi],dx
  41a905:	ins    BYTE PTR es:[rdi],dx
  41a906:	and    BYTE PTR [rdx+0x65],ah
  41a909:	and    BYTE PTR [rdx+0x65],dh
  41a90c:	jo     0x41a97a
  41a90e:	(bad)  
  41a90f:	movsxd esp,DWORD PTR [rbp+0x64]
  41a912:	or     ah,BYTE PTR [rdx+0x79]
  41a915:	and    BYTE PTR [rax+rbp*2+0x65],dh
  41a919:	and    BYTE PTR [rsi+0x65],ch
  41a91c:	ja     0x41a98a
  41a91e:	jns    0x41a940
  41a920:	outs   dx,BYTE PTR gs:[esi]
  41a923:	gs jb  0x41a987
  41a926:	je     0x41a98d
  41a928:	and    BYTE PTR fs:[rbp+riz*2+0x78],dh
  41a92d:	je     0x41a95d
  41a92f:	and    BYTE PTR [rax],ah
  41a931:	push   rsp
  41a932:	push   0x69662065
  41a937:	jb     0x41a9ac
  41a939:	je     0x41a95b
  41a93b:	(bad)  
  41a93c:	and    esp,DWORD PTR [rcx]
  41a93e:	(bad)  
  41a93f:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
  41a943:	and    BYTE PTR gs:[rdi+0x69],dh
  41a947:	ins    BYTE PTR es:[rdi],dx
  41a948:	ins    BYTE PTR es:[rdi],dx
  41a949:	and    BYTE PTR [rdx+0x65],ah
  41a94c:	and    BYTE PTR [rdx+0x65],dh
  41a94f:	outs   dx,BYTE PTR gs:[esi]
  41a952:	gs jb  0x41a9b6
  41a955:	je     0x41a9bc
  41a957:	fs or  al,BYTE PTR cs:[rax]
  41a95b:	outs   dx,BYTE PTR gs:[esi]
  41a95e:	jae    0x41a9c8
  41a960:	gs ins BYTE PTR es:[rdi],dx
  41a962:	ins    BYTE PTR es:[rdi],dx
  41a963:	outs   dx,DWORD PTR ds:[rsi]
  41a964:	jo     0x41a9da
  41a966:	and    BYTE PTR [rcx],dh
  41a968:	add    BYTE PTR [rcx+rdi*2+0x70],dh
  41a96c:	add    BYTE PTR gs:[rdi+0x6f],dh
  41a970:	jb     0x41a9d6
  41a972:	jae    0x41a974
  41a974:	movsxd ebp,DWORD PTR [rdi+0x6f]
  41a977:	imul   esp,DWORD PTR [rbp+0x64],0x0
  41a97b:	ins    DWORD PTR es:[rdi],dx
  41a97c:	gs ins DWORD PTR es:[rdi],dx
  41a97e:	(bad)  
  41a97f:	gs jb  0x41a9f5
  41a982:	add    BYTE PTR [rbp+0x6e],dh
  41a985:	movsxd ebp,DWORD PTR [rdi+0x6f]
  41a988:	imul   esp,DWORD PTR [rbp+0x64],0x0
  41a98c:	imul   esp,DWORD PTR [rbp+0x65],0x70
	...
  41a9c0:	rex.RX pushf 
  41a9c2:	add    BYTE PTR [r8],al
  41a9c5:	add    BYTE PTR [rax],al
  41a9c7:	add    BYTE PTR [rdi],al
  41a9c9:	add    BYTE PTR [rax],al
  41a9cb:	add    BYTE PTR [rax],al
  41a9cd:	add    BYTE PTR [rax],al
  41a9cf:	add    BYTE PTR [rsi-0x64],al
  41a9d2:	add    BYTE PTR [r8],al
  41a9d5:	add    BYTE PTR [rax],al
  41a9d7:	add    BYTE PTR [rdi],al
  41a9d9:	add    BYTE PTR [rax],al
  41a9db:	add    BYTE PTR [rax],al
  41a9dd:	add    BYTE PTR [rax],al
  41a9df:	add    BYTE PTR [rsi-0x64],al
  41a9e2:	add    BYTE PTR [r8],al
  41a9e5:	add    BYTE PTR [rax],al
  41a9e7:	add    BYTE PTR [rdi],al
  41a9e9:	add    BYTE PTR [rax],al
  41a9eb:	add    BYTE PTR [rax],al
  41a9ed:	add    BYTE PTR [rax],al
  41a9ef:	add    BYTE PTR [rsi-0x64],al
  41a9f2:	add    BYTE PTR [r8],al
  41a9f5:	add    BYTE PTR [rax],al
  41a9f7:	add    BYTE PTR [rdi],al
  41a9f9:	add    BYTE PTR [rax],al
  41a9fb:	add    BYTE PTR [rax],al
  41a9fd:	add    BYTE PTR [rax],al
  41a9ff:	add    BYTE PTR [rcx-0x57],ch
  41aa02:	add    BYTE PTR [r8],al
  41aa05:	add    BYTE PTR [rax],al
  41aa07:	add    BYTE PTR [rcx],al
  41aa09:	add    BYTE PTR [rax],al
  41aa0b:	add    BYTE PTR [rax],al
  41aa0d:	add    BYTE PTR [rax],al
  41aa0f:	add    BYTE PTR [rsi-0x57],ch
  41aa12:	add    BYTE PTR [r8],al
  41aa15:	add    BYTE PTR [rax],al
  41aa17:	add    BYTE PTR [rdx],al
  41aa19:	add    BYTE PTR [rax],al
  41aa1b:	add    BYTE PTR [rax],al
  41aa1d:	add    BYTE PTR [rax],al
  41aa1f:	add    BYTE PTR [rcx+rbp*4+0x41],dh
  41aa23:	add    BYTE PTR [rax],al
  41aa25:	add    BYTE PTR [rax],al
  41aa27:	add    BYTE PTR [rax+rax*1],al
  41aa2a:	add    BYTE PTR [rax],al
  41aa2c:	add    BYTE PTR [rax],al
  41aa2e:	add    BYTE PTR [rax],al
  41aa30:	jnp    0x41a9db
  41aa32:	add    BYTE PTR [r8],al
  41aa35:	add    BYTE PTR [rax],al
  41aa37:	add    BYTE PTR [rbx],al
  41aa39:	add    BYTE PTR [rax],al
  41aa3b:	add    BYTE PTR [rax],al
  41aa3d:	add    BYTE PTR [rax],al
  41aa3f:	add    BYTE PTR [rbx+0x41a9],al
  41aa45:	add    BYTE PTR [rax],al
  41aa47:	add    BYTE PTR [rip+0x0],al        # 0x41aa4d
  41aa4d:	add    BYTE PTR [rax],al
  41aa4f:	add    BYTE PTR [rcx+rbp*4+0x41],cl
  41aa56:	add    BYTE PTR [rax],al
  41aa58:	(bad)  
  41aa59:	add    BYTE PTR [rax],al
  41aa5b:	add    BYTE PTR [rax],al
  41aa5d:	add    BYTE PTR [rax],al
  41aa5f:	add    BYTE PTR [rbx+0x65],dh
  41aa62:	je     0x41aa64
  41aa64:	(bad)  
  41aa65:	outs   dx,DWORD PTR ds:[rsi]
  41aa66:	outs   dx,DWORD PTR ds:[rsi]
  41aa67:	ins    BYTE PTR es:[rdi],dx
  41aa68:	add    BYTE PTR [rbx+0x74],dh
  41aa6b:	jb     0x41aad6
  41aa6d:	outs   dx,BYTE PTR ds:[rsi]
  41aa6e:	add    BYTE PTR [edx+0x6f],ah
  41aa72:	outs   dx,DWORD PTR ds:[rsi]
  41aa73:	ins    BYTE PTR es:[rdi],dx
  41aa74:	gs (bad) 
  41aa76:	outs   dx,BYTE PTR ds:[rsi]
  41aa77:	add    BYTE PTR [rax+0x69],ch
  41aa7a:	gs jb  0x41aade
  41aa7d:	jb     0x41aae2
  41aa7f:	push   0x656e0079
  41aa84:	jae    0x41aafa
  41aa86:	gs add BYTE PTR fs:[rcx+0x6e],ch
  41aa8b:	je     0x41aaf2
  41aa8d:	addr32 gs jb 0x41aa91
	...
  41aabd:	add    BYTE PTR [rax],al
  41aabf:	add    BYTE PTR [rsi-0x64],al
  41aac2:	add    BYTE PTR [r8],al
  41aac5:	add    BYTE PTR [rax],al
  41aac7:	add    BYTE PTR [rdx],cl
  41aac9:	add    BYTE PTR [rax],al
  41aacb:	add    BYTE PTR [rax],al
  41aacd:	add    BYTE PTR [rax],al
  41aacf:	add    BYTE PTR [rsi-0x64],al
  41aad2:	add    BYTE PTR [r8],al
  41aad5:	add    BYTE PTR [rax],al
  41aad7:	add    BYTE PTR [rdx],cl
  41aad9:	add    BYTE PTR [rax],al
  41aadb:	add    BYTE PTR [rax],al
  41aadd:	add    BYTE PTR [rax],al
  41aadf:	add    BYTE PTR [rsi-0x64],al
  41aae2:	add    BYTE PTR [r8],al
  41aae5:	add    BYTE PTR [rax],al
  41aae7:	add    BYTE PTR [rdx],cl
  41aae9:	add    BYTE PTR [rax],al
  41aaeb:	add    BYTE PTR [rax],al
  41aaed:	add    BYTE PTR [rax],al
  41aaef:	add    BYTE PTR [rax-0x56],ah
  41aaf2:	add    BYTE PTR [r8],al
  41aaf5:	add    BYTE PTR [rax],al
  41aaf7:	add    BYTE PTR [rsi],al
  41aaf9:	add    BYTE PTR [rax],al
  41aafb:	add    BYTE PTR [rax],al
  41aafd:	add    BYTE PTR [rax],al
  41aaff:	add    BYTE PTR [rdx+rbp*4+0x41],ah
  41ab03:	add    BYTE PTR [rax],al
  41ab05:	add    BYTE PTR [rax],al
  41ab07:	add    BYTE PTR [rbx],al
  41ab09:	add    BYTE PTR [rax],al
  41ab0b:	add    BYTE PTR [rax],al
  41ab0d:	add    BYTE PTR [rax],al
  41ab0f:	add    BYTE PTR [rsi-0x64],al
  41ab12:	add    BYTE PTR [r8],al
  41ab15:	add    BYTE PTR [rax],al
  41ab17:	add    BYTE PTR [rdx],cl
  41ab19:	add    BYTE PTR [rax],al
  41ab1b:	add    BYTE PTR [rax],al
  41ab1d:	add    BYTE PTR [rax],al
  41ab1f:	add    BYTE PTR [rcx-0x56],ch
  41ab22:	add    BYTE PTR [r8],al
  41ab25:	add    BYTE PTR [rax],al
  41ab27:	add    BYTE PTR [rcx],al
  41ab29:	add    BYTE PTR [rax],al
  41ab2b:	add    BYTE PTR [rax],al
  41ab2d:	add    BYTE PTR [rax],al
  41ab2f:	add    BYTE PTR [rax-0x56],dh
  41ab32:	add    BYTE PTR [r8],al
  41ab35:	add    BYTE PTR [rax],al
  41ab37:	add    BYTE PTR [rax+rax*1],al
  41ab3a:	add    BYTE PTR [rax],al
  41ab3c:	add    BYTE PTR [rax],al
  41ab3e:	add    BYTE PTR [rax],al
  41ab40:	rex.RX pushf 
  41ab42:	add    BYTE PTR [r8],al
  41ab45:	add    BYTE PTR [rax],al
  41ab47:	add    BYTE PTR [rdx],cl
  41ab49:	add    BYTE PTR [rax],al
  41ab4b:	add    BYTE PTR [rax],al
  41ab4d:	add    BYTE PTR [rax],al
  41ab4f:	add    BYTE PTR [rax-0x56],bh
  41ab52:	add    BYTE PTR [r8],al
  41ab55:	add    BYTE PTR [rax],al
  41ab57:	add    BYTE PTR [rcx],cl
  41ab59:	add    BYTE PTR [rax],al
  41ab5b:	add    BYTE PTR [rax],al
  41ab5d:	add    BYTE PTR [rax],al
  41ab5f:	add    BYTE PTR [rsi-0x64],al
  41ab62:	add    BYTE PTR [r8],al
  41ab65:	add    BYTE PTR [rax],al
  41ab67:	add    BYTE PTR [rdx],cl
  41ab69:	add    BYTE PTR [rax],al
  41ab6b:	add    BYTE PTR [rax],al
  41ab6d:	add    BYTE PTR [rax],al
  41ab6f:	add    BYTE PTR [rdx+0x41aa],al
  41ab75:	add    BYTE PTR [rax],al
  41ab77:	add    BYTE PTR [rax],cl
  41ab79:	add    BYTE PTR [rax],al
  41ab7b:	add    BYTE PTR [rax],al
  41ab7d:	add    BYTE PTR [rax],al
  41ab7f:	add    ah,dl
  41ab81:	xchg   edi,eax
  41ab82:	add    BYTE PTR [r8],al
  41ab85:	add    BYTE PTR [rax],al
  41ab87:	add    BYTE PTR [rip+0x0],al        # 0x41ab8d
  41ab8d:	add    BYTE PTR [rax],al
  41ab8f:	add    BYTE PTR [rsi-0x64],al
  41ab92:	add    BYTE PTR [r8],al
  41ab95:	add    BYTE PTR [rax],al
  41ab97:	add    BYTE PTR [rdx],cl
  41ab99:	add    BYTE PTR [rax],al
  41ab9b:	add    BYTE PTR [rax],al
  41ab9d:	add    BYTE PTR [rax],al
  41ab9f:	add    ah,bl
  41aba1:	xchg   edi,eax
  41aba2:	add    BYTE PTR [r8],al
  41aba5:	add    BYTE PTR [rax],al
  41aba7:	add    BYTE PTR [rdi],al
  41aba9:	add    BYTE PTR [rax],al
  41abab:	add    BYTE PTR [rax],al
  41abad:	add    BYTE PTR [rax],al
  41abaf:	add    BYTE PTR [rsi-0x64],al
  41abb2:	add    BYTE PTR [r8],al
  41abb5:	add    BYTE PTR [rax],al
  41abb7:	add    BYTE PTR [rdx],cl
  41abb9:	add    BYTE PTR [rax],al
  41abbb:	add    BYTE PTR [rax],al
  41abbd:	add    BYTE PTR [rax],al
  41abbf:	add    BYTE PTR [rsi-0x64],al
  41abc2:	add    BYTE PTR [r8],al
  41abc5:	add    BYTE PTR [rax],al
  41abc7:	add    BYTE PTR [rdx],cl
  41abc9:	add    BYTE PTR [rax],al
  41abcb:	add    BYTE PTR [rax],al
  41abcd:	add    BYTE PTR [rax],al
  41abcf:	add    BYTE PTR [rcx+0x41aa],cl
  41abd5:	add    BYTE PTR [rax],al
  41abd7:	add    BYTE PTR [rdx],al
	...
  41abfd:	add    BYTE PTR [rax],al
  41abff:	add    BYTE PTR [rip+0x20005e5f],ch        # 0x20420a64
  41ac05:	and    BYTE PTR [rip+0xa732573],ah        # 0xab4d17e
  41ac0b:	add    BYTE PTR [rcx+0x75],ah
  41ac0e:	je     0x41ac7f
  41ac10:	sub    eax,0x6974706f
  41ac15:	outs   dx,DWORD PTR ds:[rsi]
  41ac16:	outs   dx,BYTE PTR ds:[rsi]
  41ac17:	jae    0x41ac19
  41ac19:	jo     0x41ac8d
  41ac1b:	outs   dx,DWORD PTR ds:[rsi]
  41ac1c:	addr32 jb 0x41ac80
  41ac1f:	ins    DWORD PTR es:[rdi],dx
  41ac20:	add    BYTE PTR [rip+0x64252d25],ah        # 0x6466d94b
  41ac26:	jae    0x41ac48
  41ac28:	and    eax,0xa7325
  41ac2d:	or     ah,BYTE PTR [rip+0xa0a73]        # 0x4bb6a6
  41ac33:	cmp    eax,0x656c6966
  41ac38:	add    BYTE PTR [rip+0x72624d],bh        # 0xb40e8b
  41ac3e:	cmp    eax,0x786c7043
  41ac43:	add    BYTE PTR [rbx+0x3d],bl
  41ac46:	(bad)  
  41ac47:	jb     0x41acb0
  41ac49:	pop    rbp
  41ac4a:	add    BYTE PTR [rip+0x2432252d],ch        # 0x2473d17d
  41ac50:	jae    0x41ac77
  41ac52:	xor    DWORD PTR [rbx+rsi*2],esp
  41ac55:	add    BYTE PTR [rip+0x6d6954],bh        # 0xaf15af
  41ac5b:	outs   dx,BYTE PTR ds:[rsi]
  41ac5c:	outs   dx,DWORD PTR ds:[rsi]
  41ac5d:	outs   dx,BYTE PTR ds:[rsi]
  41ac5e:	add    BYTE PTR gs:[rbx],ah
  41ac61:	and    BYTE PTR [rax],ah
  41ac63:	jo     0x41acd7
  41ac65:	gs jae 0x41accd
  41ac68:	je     0x41ac99
  41ac6a:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
  41ac71:	imul   edi,DWORD PTR [rdx+0x61],0x6e6f6974
  41ac78:	and    BYTE PTR [rsi+0x69],ah
  41ac7b:	ins    BYTE PTR es:[rdi],dx
  41ac7c:	or     ah,BYTE PTR gs:[rbx]
  41ac7f:	and    BYTE PTR [rax],ah
  41ac81:	and    eax,0xa2373
  41ac86:	and    BYTE PTR [rip+0x25207333],ah        # 0x25621fbf
  41ac8c:	sub    eax,0x20733431
  41ac91:	and    eax,0x73250073
  41ac96:	add    BYTE PTR [rdi+rbp*1+0x46],dl
  41ac9a:	add    BYTE PTR [rdx],cl
  41ac9c:	and    eax,0x250a0a73
  41aca1:	jae    0x41aca3
  41aca3:	imul   r13d,DWORD PTR [rax+r8*1+0x4b],0x4d006457
  41acac:	(bad)  
  41acae:	add    BYTE PTR [rbx+0x70],al
  41acb1:	js     0x41acb3
  41acb3:	outs   dx,BYTE PTR ds:[rsi]
  41acb4:	outs   dx,DWORD PTR ds:[rsi]
  41acb5:	and    BYTE PTR [rax],al
  41acb7:	rex.WRX jne 0x41ad27
  41acba:	add    BYTE PTR [rdi+0x70],ch
  41acbd:	je     0x41acbf
  41acbf:	pop    rcx
  41acc0:	rex.RB push r11
  41acc2:	add    BYTE PTR [rbx+0x74],dl
  41acc5:	jb     0x41acc7
  41acc7:	push   rsp
  41acc8:	imul   ebp,DWORD PTR [rbp+0x0],0x9090909
  41accf:	sub    eax,0x9090020
  41acd4:	or     DWORD PTR [rcx],ecx
  41acd6:	and    BYTE PTR [rax],ah
  41acd8:	add    BYTE PTR [rcx],cl
  41acda:	or     DWORD PTR [rcx],ecx
  41acdc:	or     DWORD PTR [rip+0x6e61202d],ebp        # 0x6ea2cd0f
  41ace2:	and    BYTE PTR fs:[rax],al
  41ace5:	or     DWORD PTR [rcx],ecx
  41ace7:	or     DWORD PTR [rcx],ecx
  41ace9:	and    eax,0x20000a73
  41acee:	and    BYTE PTR [rax],ah
  41acf0:	and    BYTE PTR [rax],ah
  41acf2:	and    BYTE PTR [rax],al
  41acf4:	and    BYTE PTR [rax],ah
  41acf6:	and    BYTE PTR [rax],ah
  41acf8:	and    BYTE PTR [rax],al
  41acfa:	and    BYTE PTR [rax],ah
  41acfc:	and    BYTE PTR [rax],al
  41acfe:	and    BYTE PTR [rax],ah
  41ad00:	add    BYTE PTR [rcx+0x6c],ah
  41ad03:	ins    BYTE PTR es:[rdi],dx
  41ad04:	add    BYTE PTR [rax],ah
  41ad06:	or     DWORD PTR [rdx],ecx
  41ad08:	cmp    bh,BYTE PTR [rip+0x5f732500]        # 0x5fb4d20e
  41ad0e:	and    eax,0x64255f73
  41ad13:	cmp    eax,0x272700
  41ad18:	and    BYTE PTR [rax],ah
  41ad1a:	and    BYTE PTR [rax],ah
  41ad1c:	and    BYTE PTR [rax],ah
  41ad1e:	and    BYTE PTR [rax],ah
  41ad20:	cmp    edi,DWORD PTR [rbx]
  41ad22:	or     cl,BYTE PTR [rdx]
  41ad24:	add    BYTE PTR [rdi],ah
  41ad26:	or     cl,BYTE PTR [rdx]
  41ad28:	add    BYTE PTR [rdi+rbp*1],bh
  41ad2b:	and    eax,0xa3e73
  41ad30:	and    BYTE PTR [rax],ah
  41ad32:	and    eax,0x25000a73
  41ad37:	and    eax,0x7364252d
  41ad3c:	add    BYTE PTR [rdx],cl
  41ad3e:	gs js  0x41adb1
  41ad41:	outs   dx,DWORD PTR ds:[rsi]
  41ad42:	jb     0x41adb8
  41ad44:	and    BYTE PTR [rip+0x73255f73],ah        # 0x73670cbd
  41ad4a:	pop    rdi
  41ad4b:	and    eax,0x66000a64
  41ad50:	(bad)  
  41ad51:	ins    BYTE PTR es:[rdi],dx
  41ad52:	jae    0x41adb9
  41ad54:	add    BYTE PTR [rax],ah
  41ad56:	and    BYTE PTR [rax],ah
  41ad58:	and    BYTE PTR [rip+0xa29202a],ch        # 0xa6acd88
  41ad5e:	add    BYTE PTR [rsi+0x6c],ah
  41ad61:	(bad)  
  41ad62:	add    BYTE PTR [ecx+0x4e],cl
  41ad66:	push   rsi
  41ad67:	rex.B
  41ad68:	rex.WR
  41ad69:	rex.WB
  41ad6a:	rex.R sub eax,0x2a006425
  41ad70:	rex.WB
  41ad71:	rex.WRX push rsi
  41ad73:	rex.B
  41ad74:	rex.WR
  41ad75:	rex.WB
  41ad76:	sub    r8b,BYTE PTR [rax]
  41ad79:	pop    rsp
  41ad7a:	outs   dx,BYTE PTR ds:[rsi]
  41ad7b:	pop    rsp
  41ad7c:	or     al,BYTE PTR [rax]
  41ad7e:	and    BYTE PTR [rax],ah
  41ad80:	and    BYTE PTR [rax],ah
  41ad82:	sub    eax,0x29202a2d
  41ad87:	or     al,BYTE PTR [rax]
  41ad89:	sub    eax,0x4f4c002d
  41ad8e:	rex.WRX
  41ad8f:	rex.RXB push r13
  41ad91:	push   rbx
  41ad92:	rex.B
  41ad93:	rex.RXB
  41ad94:	add    BYTE PTR [r8],r12b
  41ad97:	and    BYTE PTR [rax],ah
  41ad99:	and    BYTE PTR [rax],ah
  41ad9b:	and    BYTE PTR [rax],ah
  41ad9d:	and    BYTE PTR [rax],ah
  41ad9f:	and    BYTE PTR [rax],ah
  41ada1:	and    BYTE PTR [rip+0x5c000a73],ah        # 0x5c41b81a
  41ada7:	and    eax,0x6f3330
  41adac:	ins    DWORD PTR es:[rdi],dx
  41adad:	outs   dx,DWORD PTR ds:[rsi]
  41adae:	jb     0x41ae15
  41adb0:	add    BYTE PTR ds:0x79742073,bh
  41adb7:	jo     0x41ae1e
  41adb9:	cmp    eax,0x7473656e
  41adbe:	gs fs or al,BYTE PTR ds:[rax]
  41adc3:	and    eax,0x25000a73
  41adc8:	jae    0x41add4
  41adca:	and    BYTE PTR [rax],ah
  41adcc:	add    BYTE PTR [rdi+0x50],cl
  41adcf:	push   rsp
  41add0:	pop    rdi
  41add1:	push   r10
  41add3:	rex.RXB pop r15
  41add5:	rex.WRX
  41add6:	rex.RB
  41add7:	rex.RB
  41add8:	rex.R
  41add9:	rex.RB
  41adda:	rex.R cmp eax,0x3c004f4e
  41ade0:	and    eax,0xa3e2f73
  41ade5:	add    BYTE PTR [rdi+0x50],cl
  41ade8:	push   rsp
  41ade9:	pop    rdi
  41adea:	push   r10
  41adec:	rex.RXB pop r15
  41adee:	rex.WRX
  41adef:	rex.RB
  41adf0:	rex.RB
  41adf1:	rex.R
  41adf2:	rex.RB
  41adf3:	rex.R cmp eax,0x9004b4f
  41adf9:	add    BYTE PTR ds:0x6f003e73,bh
  41ae00:	jo     0x41ae76
  41ae02:	imul   ebp,DWORD PTR [rdi+0x6e],0x78650a00
  41ae09:	jo     0x41ae7a
  41ae0b:	jb     0x41ae81
  41ae0d:	and    BYTE PTR [rip+0x73255f73],ah        # 0x73670d86
  41ae13:	or     al,BYTE PTR [rax]
  41ae15:	and    eax,0x73255f73
  41ae1a:	cmp    eax,0x207c2000
  41ae1f:	add    BYTE PTR [rax+0x41],dl
  41ae22:	rex.RXB
  41ae23:	rex.RB push r10
  41ae25:	add    BYTE PTR [rip+0x20732431],ah        # 0x20b4d25c
  41ae2b:	and    eax,0x20732432
  41ae30:	cmp    esp,DWORD PTR [rax]
  41ae32:	jb     0x41aea1
  41ae34:	and    BYTE PTR [rip+0x32252066],ch        # 0x3266cea0
  41ae3a:	and    al,0x73
  41ae3c:	add    BYTE PTR [rax],ah
  41ae3e:	sub    esp,DWORD PTR [rax]
  41ae40:	add    BYTE PTR [rax],ah
  41ae42:	and    BYTE PTR [rax+0x75],dh
  41ae45:	je     0x41aeba
  41ae47:	sub    BYTE PTR [rdi+0x28],bl
  41ae4a:	and    eax,0x3b292973
  41ae4f:	or     al,BYTE PTR [rax]
  41ae51:	pop    rsp
  41ae52:	(bad)  
  41ae53:	add    BYTE PTR [rdi],ah
  41ae55:	and    eax,0x20002773
  41ae5a:	sub    eax,0x7325202d
  41ae5f:	add    BYTE PTR [rip+0x73255f73],ah        # 0x73670dd8
  41ae65:	pop    rdi
  41ae66:	push   rsp
  41ae67:	rex.RB pop r8
  41ae69:	push   rsp
  41ae6a:	cmp    eax,0x21230027
  41ae6f:	and    BYTE PTR [rip+0xa000a73],ah        # 0xa41b8e8
  41ae75:	outs   dx,BYTE PTR gs:[rsi]
  41ae77:	jbe    0x41ae99
  41ae79:	jl     0x41ae9b
  41ae7b:	addr32 jb 0x41aee3
  41ae7e:	jo     0x41aea0
  41ae80:	(bad)  
  41ae81:	pop    rsi
  41ae82:	and    eax,0xa275f73
  41ae87:	add    BYTE PTR [rip+0x6c243125],bh        # 0x6c65dfb2
  41ae8d:	jne    0x41aeaf
  41ae8f:	and    esp,DWORD PTR [rax]
  41ae91:	xor    BYTE PTR [rax+0x25],bh
  41ae94:	xor    DWORD PTR [rsp+rbp*2],esp
  41ae97:	pop    rax
  41ae98:	or     al,BYTE PTR [rax]
  41ae9a:	jae    0x41af10
  41ae9c:	outs   dx,DWORD PTR fs:[rsi]
  41ae9e:	jne    0x41af14
  41aea0:	add    BYTE PTR [rip+0x42252041],ah        # 0x4266cee7
  41aea6:	and    BYTE PTR [rip+0x25202c65],ah        # 0x2561db11
  41aeac:	pop    rcx
  41aead:	and    BYTE PTR [rcx+0x74],ah
  41aeb0:	and    BYTE PTR [rip+0x5a252072],ah        # 0x5a66cf28
  41aeb6:	add    BYTE PTR [rbp+rcx*2+0x50],dl
  41aeba:	rex.R
  41aebb:	rex.WB push r10
  41aebd:	add    BYTE PTR [rip+0x73752f73],ah        # 0x73b6de36
  41aec3:	gs sub eax,0x582e7525
  41aec9:	pop    rax
  41aeca:	pop    rax
  41aecb:	pop    rax
  41aecc:	pop    rax
  41aecd:	pop    rax
  41aece:	add    BYTE PTR [rdx+rsi*2+0x75],dh
  41aed2:	add    BYTE PTR gs:0x79742073,bh
  41aeda:	jo     0x41af41
  41aedc:	cmp    eax,0x3e7325
  41aee1:	push   rsi
  41aee2:	rex.RB push r10
  41aee4:	push   rbx
  41aee5:	rex.WB
  41aee6:	rex.WRXB
  41aee7:	rex.WRX add BYTE PTR [rbx],r12b
  41aeea:	js     0x41af11
  41aeec:	xor    BYTE PTR [rdx],dh
  41aeee:	pop    rax
  41aeef:	cmp    eax,DWORD PTR [rax]
  41aef1:	rex.WRXB push r8
  41aef3:	push   rsp
  41aef4:	pop    rdi
  41aef5:	push   r10
  41aef7:	rex.RXB pop r15
  41aef9:	rex.WRX
  41aefa:	rex.RB
  41aefb:	rex.RB
  41aefc:	rex.R
  41aefd:	rex.RB
  41aefe:	rex.R cmp eax,0x534559
  41af04:	(bad)  
  41af05:	pop    rsp
  41af06:	(bad)  
  41af07:	(bad)  
  41af08:	add    BYTE PTR [rax],ah
  41af0a:	(bad)  
  41af0b:	and    eax,0x6c002773
  41af10:	imul   esp,DWORD PTR [rdx+0x6f],0x20737470
  41af17:	ins    DWORD PTR es:[rdi],dx
  41af18:	imul   esi,DWORD PTR [rbx+0x67],0x73736575
  41af1f:	gs and BYTE PTR fs:[rbp+riz*2+0x6e],ch
  41af25:	addr32 je 0x41af90
  41af28:	and    BYTE PTR [rdi+0x66],ch
  41af2b:	and    BYTE PTR [rbx+0x74],dh
  41af2e:	jb     0x41af99
  41af30:	outs   dx,BYTE PTR ds:[rsi]
  41af31:	or     al,BYTE PTR [eax]
  41af34:	or     cl,BYTE PTR [rdi+0x50]
  41af37:	push   rsp
  41af38:	rex.WB
  41af39:	rex.WRXB
  41af3a:	rex.WRX pop rdi
  41af3c:	rex.XB push r12
  41af3e:	cmp    eax,0x73000a30
  41af43:	gs je  0x41af66
  41af46:	sub    eax,0x742f002d
  41af4b:	ins    DWORD PTR es:[rdi],dx
  41af4c:	jo     0x41af4e
  41af4e:	and    BYTE PTR [rax],ah
  41af50:	and    BYTE PTR [rax],ah
  41af52:	and    BYTE PTR [rax],ah
  41af54:	and    BYTE PTR [rax],ah
  41af56:	and    BYTE PTR [rax],ah
  41af58:	and    BYTE PTR [rax],ah
  41af5a:	cmp    edi,DWORD PTR [rbx]
  41af5c:	or     cl,BYTE PTR [rdx]
  41af5e:	add    BYTE PTR [rax],ah
  41af60:	and    BYTE PTR [rax],ah
  41af62:	and    BYTE PTR [rax],ah
  41af64:	and    BYTE PTR [rax],ah
  41af66:	and    BYTE PTR [rdi],ah
  41af68:	and    eax,0x29202763
  41af6d:	or     al,BYTE PTR [rax]
  41af6f:	and    BYTE PTR [rax],ah
  41af71:	and    BYTE PTR [rax],ah
  41af73:	and    BYTE PTR [rax],ah
  41af75:	and    BYTE PTR [rax],ah
  41af77:	(bad)  
  41af78:	and    eax,0x29202773
  41af7d:	or     al,BYTE PTR [rax]
  41af7f:	and    BYTE PTR [rax],ah
  41af81:	and    BYTE PTR [rax],ah
  41af83:	and    BYTE PTR [rax],ah
  41af85:	and    BYTE PTR [rax],ah
  41af87:	(bad)  
  41af88:	and    eax,0x7c202773
  41af8d:	and    BYTE PTR [rdx+rcx*1+0x0],bl
  41af91:	cmp    al,0x25
  41af93:	xor    DWORD PTR [rbx+rsi*2],esp
  41af96:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  41af9a:	gs cmp eax,0x6c6f6f62
  41afa0:	gs (bad) 
  41afa2:	outs   dx,BYTE PTR ds:[rsi]
  41afa3:	ds and eax,0x3c732432
  41afa9:	(bad)  
  41afaa:	and    eax,0x3e732431
  41afaf:	or     al,BYTE PTR [rax]
  41afb1:	and    esp,DWORD PTR [rax]
  41afb3:	and    BYTE PTR [rsi+0x72],al
  41afb6:	outs   dx,DWORD PTR ds:[rsi]
  41afb7:	ins    DWORD PTR es:[rdi],dx
  41afb8:	and    BYTE PTR [rax+rbp*2+0x65],dh
  41afbc:	and    BYTE PTR [rip+0x706f2073],ah        # 0x70b0d035
  41afc2:	je     0x41b02d
  41afc4:	outs   dx,DWORD PTR ds:[rsi]
  41afc5:	outs   dx,BYTE PTR ds:[rsi]
  41afc6:	and    BYTE PTR [rbp+riz*2+0x66],ah
  41afca:	imul   ebp,DWORD PTR [rsi+0x69],0x6e6f6974
  41afd1:	jae    0x41afdd
  41afd3:	and    ecx,DWORD PTR [rdx]
  41afd5:	add    BYTE PTR [rbp+0x63],ah
  41afd8:	push   0x5727206f
  41afdd:	(bad)  
  41afde:	jb     0x41b04e
  41afe0:	imul   ebp,DWORD PTR [rsi+0x67],0x4320203a
  41afe7:	(bad)  
  41afe8:	outs   dx,BYTE PTR ds:[rsi]
  41afe9:	outs   dx,BYTE PTR ds:[rsi]
  41afea:	outs   dx,DWORD PTR ds:[rsi]
  41afeb:	je     0x41b00d
  41afed:	ins    BYTE PTR es:[rdi],dx
  41afee:	outs   dx,DWORD PTR ds:[rsi]
  41afef:	(bad)  
  41aff0:	and    BYTE PTR fs:[rdi+0x70],ch
  41aff4:	je     0x41b05f
  41aff6:	outs   dx,DWORD PTR ds:[rsi]
  41aff7:	outs   dx,BYTE PTR ds:[rsi]
  41aff8:	jae    0x41b01a
  41affa:	imul   bp,WORD PTR [rbp+riz*2+0x73],0x2027
  41b001:	ds xor al,BYTE PTR es:[rax]
  41b005:	movsxd ebp,DWORD PTR gs:[rax+0x6f]
  41b009:	and    BYTE PTR [rdi],ah
  41b00b:	push   rdi
  41b00c:	(bad)  
  41b00d:	jb     0x41b07d
  41b00f:	imul   ebp,DWORD PTR [rsi+0x67],0x4320203a
  41b016:	(bad)  
  41b017:	outs   dx,BYTE PTR ds:[rsi]
  41b018:	outs   dx,BYTE PTR ds:[rsi]
  41b019:	outs   dx,DWORD PTR ds:[rsi]
  41b01a:	je     0x41b03c
  41b01c:	jae    0x41b07f
  41b01e:	jbe    0x41b085
  41b020:	and    BYTE PTR [rdi+0x70],ch
  41b023:	je     0x41b08e
  41b025:	outs   dx,DWORD PTR ds:[rsi]
  41b026:	outs   dx,BYTE PTR ds:[rsi]
  41b027:	jae    0x41b049
  41b029:	imul   bp,WORD PTR [rbp+riz*2+0x73],0x2027
  41b030:	ds xor al,BYTE PTR es:[rax]
  41b034:	movsxd ebp,DWORD PTR gs:[rax+0x6f]
  41b038:	and    BYTE PTR [rdi],ah
  41b03a:	push   rdi
  41b03b:	(bad)  
  41b03c:	jb     0x41b0ac
  41b03e:	imul   ebp,DWORD PTR [rsi+0x67],0x4320203a
  41b045:	(bad)  
  41b046:	outs   dx,BYTE PTR ds:[rsi]
  41b047:	outs   dx,BYTE PTR ds:[rsi]
  41b048:	outs   dx,DWORD PTR ds:[rsi]
  41b049:	je     0x41b06b
  41b04b:	jae    0x41b0c2
  41b04d:	jo     0x41b0bf
  41b04f:	jb     0x41b0b6
  41b051:	jae    0x41b0c6
  41b053:	and    BYTE PTR [rax+rbp*2+0x65],dh
  41b057:	and    BYTE PTR [rdi+rbp*2+0x61],ch
  41b05b:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x20666f20
  41b063:	outs   dx,DWORD PTR ds:[rsi]
  41b064:	jo     0x41b0da
  41b066:	imul   ebp,DWORD PTR [rdi+0x6e],0x69662073
  41b06d:	ins    BYTE PTR es:[rdi],dx
  41b06e:	gs jae 0x41b098
  41b071:	and    BYTE PTR [rsi],bh
  41b073:	xor    al,BYTE PTR es:[rax]
  41b076:	cmp    al,0x25
  41b078:	xor    DWORD PTR [rbx+rsi*2],esp
  41b07b:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  41b07f:	gs cmp eax,0x65746e69
  41b085:	addr32 gs jb 0x41b0c7
  41b089:	xor    BYTE PTR [rax+0x25],bh
  41b08c:	xor    ah,BYTE PTR [rsp+rbp*2]
  41b08f:	pop    rax
  41b090:	cmp    al,0x2f
  41b092:	and    eax,0x3e732431
  41b097:	or     al,BYTE PTR [rax]
  41b099:	and    eax,0x5f732431
  41b09e:	and    eax,0x5f732432
  41b0a3:	push   rsp
  41b0a4:	rex.RB pop r8
  41b0a6:	push   rsp
  41b0a7:	cmp    eax,0x206f6e27
  41b0ac:	and    eax,0x20732432
  41b0b1:	je     0x41b118
  41b0b3:	js     0x41b129
  41b0b5:	(bad)  
  41b0b6:	or     al,BYTE PTR [rax]
  41b0b8:	and    eax,0x5f732431
  41b0bd:	and    eax,0x5f732432
  41b0c2:	rex.WRB
  41b0c3:	rex.WRXB
  41b0c4:	rex.R
  41b0c5:	rex.RB cmp eax,0x24332527
  41b0cb:	jae    0x41b0f4
  41b0cd:	or     ah,BYTE PTR [rbp+0x78]
  41b0d0:	jo     0x41b141
  41b0d2:	jb     0x41b148
  41b0d4:	and    BYTE PTR [rip+0x5f732431],ah        # 0x5fb4d50b
  41b0da:	and    eax,0x5f732432
  41b0df:	rex.WRB
  41b0e0:	rex.WRXB
  41b0e1:	rex.R
  41b0e2:	or     r8b,BYTE PTR [r8]
  41b0e5:	and    eax,0x5f732431
  41b0ea:	and    eax,0x3d732432
  41b0ef:	(bad)  
  41b0f0:	and    eax,0x27732433
  41b0f5:	or     ah,BYTE PTR [rbp+0x78]
  41b0f8:	jo     0x41b169
  41b0fa:	jb     0x41b170
  41b0fc:	and    BYTE PTR [rip+0x5f732431],ah        # 0x5fb4d533
  41b102:	and    eax,0xa732432
  41b107:	add    BYTE PTR [rip+0x5f732431],ah        # 0x5fb4d53e
  41b10d:	and    eax,0x5f732432
  41b112:	rex.XB push r12
  41b114:	cmp    eax,0x64243325
  41b119:	or     ah,BYTE PTR [rbp+0x78]
  41b11c:	jo     0x41b18d
  41b11e:	jb     0x41b194
  41b120:	and    BYTE PTR [rip+0x5f732431],ah        # 0x5fb4d557
  41b126:	and    eax,0x5f732432
  41b12b:	rex.XB push r12
  41b12d:	or     al,BYTE PTR [rax]
  41b12f:	rex.WRXB push r8
  41b131:	push   rsp
  41b132:	rex.WB
  41b133:	rex.WRXB
  41b134:	rex.WRX pop rdi
  41b136:	rex.XB push r12
  41b138:	cmp    eax,0x650a6425
  41b13d:	js     0x41b1af
  41b13f:	outs   dx,DWORD PTR ds:[rsi]
  41b140:	jb     0x41b1b6
  41b142:	and    BYTE PTR [rdi+0x50],cl
  41b145:	push   rsp
  41b146:	rex.WB
  41b147:	rex.WRXB
  41b148:	rex.WRX pop rdi
  41b14a:	rex.XB push r12
  41b14c:	or     al,BYTE PTR [rax]
  41b14e:	and    eax,0x5f732431
  41b153:	and    eax,0x3d732432
  41b158:	and    eax,0xa732433
  41b15d:	gs js  0x41b1d0
  41b160:	outs   dx,DWORD PTR ds:[rsi]
  41b161:	jb     0x41b1d7
  41b163:	and    BYTE PTR [rip+0x5f732431],ah        # 0x5fb4d59a
  41b169:	and    eax,0xa732432
  41b16e:	add    BYTE PTR [rip+0x5f732431],ah        # 0x5fb4d5a5
  41b174:	and    eax,0x3d732432
  41b179:	and    eax,0x20642433
  41b17e:	and    esp,DWORD PTR [rax]
  41b180:	xor    BYTE PTR [rax+0x25],bh
  41b183:	xor    esp,DWORD PTR [rax+rbx*2]
  41b186:	or     ah,BYTE PTR [rbp+0x78]
  41b189:	jo     0x41b1fa
  41b18b:	jb     0x41b201
  41b18d:	and    BYTE PTR [rip+0x5f732431],ah        # 0x5fb4d5c4
  41b193:	and    eax,0xa732432
  41b198:	add    BYTE PTR [rax],ah
  41b19a:	and    BYTE PTR [rax],ah
  41b19c:	and    BYTE PTR [rax],ah
  41b19e:	and    BYTE PTR [rax],ah
  41b1a0:	and    BYTE PTR [rbx+0x61],ah
  41b1a3:	jae    0x41b20a
  41b1a5:	and    BYTE PTR [rdx],ah
  41b1a7:	and    al,0x7b
  41b1a9:	rex.WRXB push r8
  41b1ab:	push   rsp
  41b1ac:	pop    rdi
  41b1ad:	rex.XB
  41b1ae:	rex.WRXB
  41b1af:	rex.R
  41b1b0:	rex.RB jge 0x41b1d5
  41b1b3:	and    BYTE PTR [rcx+0x6e],ch
  41b1b6:	or     al,BYTE PTR [rax]
  41b1b8:	and    BYTE PTR [rax],ah
  41b1ba:	and    BYTE PTR [rax],ah
  41b1bc:	and    BYTE PTR [rax],ah
  41b1be:	and    BYTE PTR [rax],ah
  41b1c0:	and    BYTE PTR [rax],ah
  41b1c2:	and    BYTE PTR [rax],ah
  41b1c4:	imul   esp,DWORD PTR [rsi+0x20],0x2524205b
  41b1cb:	xor    DWORD PTR [rbx+rsi*2],esp
  41b1ce:	pop    rdi
  41b1cf:	and    eax,0x5f732432
  41b1d4:	rex.XB push r12
  41b1d6:	and    BYTE PTR [rip+0x25207467],ch        # 0x25622643
  41b1dc:	xor    esp,DWORD PTR [rsi*2+0x3b205d20]
  41b1e3:	and    BYTE PTR [rax+rbp*2+0x65],dh
  41b1e7:	outs   dx,BYTE PTR ds:[rsi]
  41b1e8:	or     ah,BYTE PTR [rax]
  41b1ea:	and    BYTE PTR [rax],ah
  41b1ec:	and    BYTE PTR [rax],ah
  41b1ee:	and    BYTE PTR [rax],ah
  41b1f0:	and    BYTE PTR [rax],ah
  41b1f2:	and    BYTE PTR [rax],ah
  41b1f4:	and    BYTE PTR [rax],ah
  41b1f6:	and    BYTE PTR [rax],ah
  41b1f8:	and    BYTE PTR [rbp+0x63],ah
  41b1fb:	push   0x4527206f
  41b200:	jb     0x41b274
  41b202:	outs   dx,DWORD PTR ds:[rsi]
  41b203:	jb     0x41b23f
  41b205:	and    BYTE PTR [rax],ah
  41b207:	ins    DWORD PTR es:[rdi],dx
  41b208:	outs   dx,DWORD PTR ds:[rsi]
  41b209:	jb     0x41b270
  41b20b:	and    BYTE PTR [rax+rbp*2+0x61],dh
  41b20f:	outs   dx,BYTE PTR ds:[rsi]
  41b210:	and    BYTE PTR [rip+0x20642433],ah        # 0x20a5d649
  41b216:	and    eax,0x20732432
  41b21b:	outs   dx,DWORD PTR ds:[rsi]
  41b21c:	jo     0x41b292
  41b21e:	imul   ebp,DWORD PTR [rdi+0x6e],0x200a2773
  41b225:	and    BYTE PTR [rax],ah
  41b227:	and    BYTE PTR [rax],ah
  41b229:	and    BYTE PTR [rax],ah
  41b22b:	and    BYTE PTR [rax],ah
  41b22d:	and    BYTE PTR [rax],ah
  41b22f:	and    BYTE PTR [rax],ah
  41b231:	and    BYTE PTR [rax],ah
  41b233:	and    BYTE PTR [rbp+0x63],ah
  41b236:	push   0x2422206f
  41b23b:	and    eax,0x5f732431
  41b240:	push   rbp
  41b241:	push   rbx
  41b242:	rex.B
  41b243:	rex.RXB
  41b244:	rex.RB pop r15
  41b246:	push   rsp
  41b247:	rex.RB pop r8
  41b249:	push   rsp
  41b24a:	and    cl,BYTE PTR [rdx]
  41b24c:	and    BYTE PTR [rax],ah
  41b24e:	and    BYTE PTR [rax],ah
  41b250:	and    BYTE PTR [rax],ah
  41b252:	and    BYTE PTR [rax],ah
  41b254:	and    BYTE PTR [rax],ah
  41b256:	and    BYTE PTR [rax],ah
  41b258:	and    BYTE PTR [rax],ah
  41b25a:	and    BYTE PTR [rax],ah
  41b25c:	gs js  0x41b2c8
  41b25f:	je     0x41b281
  41b261:	xor    DWORD PTR [rdx],ecx
  41b263:	and    BYTE PTR [rax],ah
  41b265:	and    BYTE PTR [rax],ah
  41b267:	and    BYTE PTR [rax],ah
  41b269:	and    BYTE PTR [rax],ah
  41b26b:	and    BYTE PTR [rax],ah
  41b26d:	and    BYTE PTR [rax],ah
  41b26f:	imul   sp,WORD PTR [rax],0x263e
  41b274:	xor    cl,BYTE PTR [rdx]
  41b276:	add    BYTE PTR [rbp+riz*2+0x73],dh
  41b27a:	je     0x41b29c
  41b27c:	and    al,0x7b
  41b27e:	and    eax,0x5f732431
  41b283:	and    eax,0x5f732432
  41b288:	rex.XB push r12
  41b28a:	sub    eax,0x2d207d30
  41b28f:	and    BYTE PTR gs:[eip+0x20752433],ah        # 0x20b6d6ca
  41b297:	jl     0x41b315
  41b299:	and    BYTE PTR [rbx+0xa],bh
  41b29c:	and    BYTE PTR [rax],ah
  41b29e:	and    BYTE PTR [rax],ah
  41b2a0:	movsxd ebp,DWORD PTR gs:[rax+0x6f]
  41b2a4:	and    BYTE PTR [rip+0x5f732431],ah        # 0x5fb4d6db
  41b2aa:	and    eax,0x20732432
  41b2af:	push   0x6e207361
  41b2b4:	outs   dx,DWORD PTR ds:[rsi]
  41b2b5:	je     0x41b2d7
  41b2b7:	(bad)  
  41b2b8:	gs outs dx,BYTE PTR gs:[rsi]
  41b2bb:	and    BYTE PTR [rbx+0x65],dh
  41b2be:	je     0x41b2ca
  41b2c0:	and    BYTE PTR [rax],ah
  41b2c2:	and    BYTE PTR [rax],ah
  41b2c4:	gs js  0x41b330
  41b2c7:	je     0x41b2e9
  41b2c9:	xor    DWORD PTR [rdx],ecx
  41b2cb:	jge    0x41b2ed
  41b2cd:	xor    DWORD PTR [rsi],edi
  41b2cf:	xor    cl,BYTE PTR es:[rdx]
  41b2d2:	add    BYTE PTR [rbp+riz*2+0x73],dh
  41b2d6:	je     0x41b2f8
  41b2d8:	sub    eax,0x2422206e
  41b2dd:	and    eax,0x5f732431
  41b2e2:	and    eax,0x22732432
  41b2e7:	and    BYTE PTR [rsp+rdi*2+0x20],bh
  41b2eb:	jnp    0x41b2f7
  41b2ed:	and    BYTE PTR [rax],ah
  41b2ef:	and    BYTE PTR [rax],ah
  41b2f1:	movsxd ebp,DWORD PTR gs:[rax+0x6f]
  41b2f5:	and    BYTE PTR [rip+0x5f732431],ah        # 0x5fb4d72c
  41b2fb:	and    eax,0x20732432
  41b300:	push   0x6e207361
  41b305:	outs   dx,DWORD PTR ds:[rsi]
  41b306:	je     0x41b328
  41b308:	(bad)  
  41b309:	gs outs dx,BYTE PTR gs:[rsi]
  41b30c:	and    BYTE PTR [rbx+0x65],dh
  41b30f:	je     0x41b31b
  41b311:	and    BYTE PTR [rax],ah
  41b313:	and    BYTE PTR [rax],ah
  41b315:	gs js  0x41b381
  41b318:	je     0x41b33a
  41b31a:	xor    DWORD PTR [rdx],ecx
  41b31c:	jge    0x41b33e
  41b31e:	xor    DWORD PTR [rsi],edi
  41b320:	xor    cl,BYTE PTR es:[rdx]
  41b323:	add    BYTE PTR [rax],ah
  41b325:	and    BYTE PTR [rax],ah
  41b327:	and    BYTE PTR [rax],ah
  41b329:	and    BYTE PTR [rax],ah
  41b32b:	and    BYTE PTR [rax],ah
  41b32d:	and    BYTE PTR [rax],ah
  41b32f:	and    BYTE PTR [rbp+0x63],ah
  41b332:	push   0x2422206f
  41b337:	and    eax,0x73255f73
  41b33c:	pop    rdi
  41b33d:	push   rsp
  41b33e:	rex.RB pop r8
  41b340:	push   rsp
  41b341:	and    cl,BYTE PTR [rdx]
  41b343:	and    BYTE PTR [rax],ah
  41b345:	and    BYTE PTR [rax],ah
  41b347:	and    BYTE PTR [rax],ah
  41b349:	and    BYTE PTR [rax],ah
  41b34b:	and    BYTE PTR [rax],ah
  41b34d:	and    BYTE PTR [rax],ah
  41b34f:	gs js  0x41b3bb
  41b352:	je     0x41b374
  41b354:	xor    BYTE PTR [rdx],cl
  41b356:	add    BYTE PTR [rdx],cl
  41b358:	and    esp,DWORD PTR [rax]
  41b35a:	and    esp,DWORD PTR [rax]
  41b35c:	and    esp,DWORD PTR [rax]
  41b35e:	and    esp,DWORD PTR [rax]
  41b360:	and    esp,DWORD PTR [rax]
  41b362:	and    esp,DWORD PTR [rax]
  41b364:	and    esp,DWORD PTR [rax]
  41b366:	and    esp,DWORD PTR [rax]
  41b368:	and    esp,DWORD PTR [rax]
  41b36a:	and    ecx,DWORD PTR [rdx]
  41b36c:	and    ecx,DWORD PTR [rdx]
  41b36e:	and    esp,DWORD PTR [rax]
  41b370:	and    BYTE PTR [rbp+0x4e],al
  41b373:	and    BYTE PTR [rdi+0x46],r9b
  41b377:	and    BYTE PTR [rcx+0x55],al
  41b37a:	push   rsp
  41b37b:	rex.WRXB
  41b37c:	rex.WRB
  41b37d:	push   r12
  41b37f:	rex.RB
  41b380:	and    BYTE PTR [rdi+0x50],r9b
  41b384:	push   rsp
  41b385:	rex.WB
  41b386:	rex.WRXB
  41b387:	rex.WRX and BYTE PTR [rax+0x52],r10b
  41b38b:	rex.WRXB
  41b38c:	rex.XB
  41b38d:	rex.RB push r11
  41b38f:	push   rbx
  41b390:	rex.WB
  41b391:	rex.WRX
  41b392:	rex.RXB or r12b,BYTE PTR [r11]
  41b395:	or     ah,BYTE PTR [rbx]
  41b397:	and    BYTE PTR [rbx],ah
  41b399:	and    BYTE PTR [rbx],ah
  41b39b:	and    BYTE PTR [rbx],ah
  41b39d:	and    BYTE PTR [rbx],ah
  41b39f:	and    BYTE PTR [rbx],ah
  41b3a1:	and    BYTE PTR [rbx],ah
  41b3a3:	and    BYTE PTR [rbx],ah
  41b3a5:	and    BYTE PTR [rbx],ah
  41b3a7:	and    BYTE PTR [rbx],ah
  41b3a9:	and    BYTE PTR [rip+0x6f64202d],ch        # 0x6fa5d3dc
  41b3af:	and    BYTE PTR [rsi+0x6f],ch
  41b3b2:	je     0x41b3d4
  41b3b4:	ins    DWORD PTR es:[rdi],dx
  41b3b5:	outs   dx,DWORD PTR ds:[rsi]
  41b3b6:	imul   esp,DWORD PTR fs:[rsi+0x79],0x69687420
  41b3be:	jae    0x41b3e0
  41b3c0:	ins    DWORD PTR es:[rdi],dx
  41b3c1:	(bad)  
  41b3c2:	jb     0x41b42f
  41b3c4:	gs jb  0x41b3e7
  41b3c7:	sub    eax,0x20000a2d
  41b3cc:	and    BYTE PTR [rax],ah
  41b3ce:	and    BYTE PTR [rcx+0x66],ch
  41b3d1:	and    BYTE PTR [rbx+0x20],bl
  41b3d4:	sub    eax,0x2422206e
  41b3d9:	jnp    0x41b42a
  41b3db:	push   rax
  41b3dc:	push   rsp
  41b3dd:	pop    rdi
  41b3de:	push   r10
  41b3e0:	rex.RXB pop r15
  41b3e2:	push   rsi
  41b3e3:	rex.B
  41b3e4:	rex.WR jge 0x41b409
  41b3e7:	and    BYTE PTR [rbp+0xa],bl
  41b3ea:	and    BYTE PTR [rax],ah
  41b3ec:	and    BYTE PTR [rax],ah
  41b3ee:	je     0x41b458
  41b3f0:	outs   dx,BYTE PTR gs:[rsi]
  41b3f2:	or     ah,BYTE PTR [rax]
  41b3f4:	and    BYTE PTR [rax],ah
  41b3f6:	and    BYTE PTR [rax],ah
  41b3f8:	and    BYTE PTR [rax],ah
  41b3fa:	and    BYTE PTR [rbp+0x76],ah
  41b3fd:	(bad)  
  41b3fe:	ins    BYTE PTR es:[rdi],dx
  41b3ff:	and    BYTE PTR [rip+0x5f732431],ah        # 0x5fb4d836
  41b405:	and    al,0x7b
  41b407:	rex.WRXB push r8
  41b409:	push   rsp
  41b40a:	pop    rdi
  41b40b:	rex.WRX
  41b40c:	rex.B
  41b40d:	rex.WRB
  41b40e:	rex.RB jge 0x41b435
  41b411:	jnp    0x41b462
  41b413:	push   rax
  41b414:	push   rsp
  41b415:	pop    rdi
  41b416:	rex.RB
  41b417:	rex.WR
  41b418:	rex.RB
  41b419:	rex.WRB
  41b41a:	rex.RB
  41b41b:	rex.WRX push rsp
  41b41d:	jge    0x41b45c
  41b41f:	and    ah,BYTE PTR [rdi]
  41b421:	and    al,0x7b
  41b423:	rex.WRXB push r8
  41b425:	push   rsp
  41b426:	pop    rdi
  41b427:	push   r10
  41b429:	rex.RXB pop r15
  41b42b:	push   rsi
  41b42c:	rex.B
  41b42d:	rex.WR jge 0x41b457
  41b430:	and    cl,BYTE PTR [rdx]
  41b432:	and    BYTE PTR [rax],ah
  41b434:	and    BYTE PTR [rax],ah
  41b436:	and    BYTE PTR [rax],ah
  41b438:	and    BYTE PTR [rax],ah
  41b43a:	gs js  0x41b4ad
  41b43d:	outs   dx,DWORD PTR ds:[rsi]
  41b43e:	jb     0x41b4b4
  41b440:	and    BYTE PTR [rip+0x5f732431],ah        # 0x5fb4d877
  41b446:	and    al,0x7b
  41b448:	rex.WRXB push r8
  41b44a:	push   rsp
  41b44b:	pop    rdi
  41b44c:	rex.WRX
  41b44d:	rex.B
  41b44e:	rex.WRB
  41b44f:	rex.RB jge 0x41b476
  41b452:	jnp    0x41b4a3
  41b454:	push   rax
  41b455:	push   rsp
  41b456:	pop    rdi
  41b457:	rex.RB
  41b458:	rex.WR
  41b459:	rex.RB
  41b45a:	rex.WRB
  41b45b:	rex.RB
  41b45c:	rex.WRX push rsp
  41b45e:	jge    0x41b46a
  41b460:	and    BYTE PTR [rax],ah
  41b462:	and    BYTE PTR [rax],ah
  41b464:	imul   cx,WORD PTR [rdx],0x6f64
  41b469:	outs   dx,BYTE PTR ds:[rsi]
  41b46a:	or     cl,BYTE PTR gs:[rdi+0x50]
  41b46e:	push   rsp
  41b46f:	rex.WB
  41b470:	rex.WRXB
  41b471:	rex.WRX pop rdi
  41b473:	rex.XB
  41b474:	rex.WRXB push r13
  41b476:	rex.WRX push rsp
  41b478:	cmp    eax,0x70786560
  41b47d:	jb     0x41b49f
  41b47f:	and    al,0x41
  41b481:	push   rdx
  41b482:	rex.RXB pop r15
  41b484:	rex.XB
  41b485:	rex.WRXB push r13
  41b487:	rex.WRX push rsp
  41b489:	and    BYTE PTR [rip+0x60232420],ch        # 0x6064d8af
  41b48f:	or     cl,BYTE PTR [rdi+0x50]
  41b492:	rex.RB push r10
  41b494:	rex.B
  41b495:	rex.WRX
  41b496:	rex.R pop rdi
  41b498:	rex.XB
  41b499:	rex.WRXB push r13
  41b49b:	rex.WRX push rsp
  41b49d:	cmp    eax,0x750a2324
  41b4a2:	outs   dx,BYTE PTR ds:[rsi]
  41b4a3:	jae    0x41b50a
  41b4a5:	je     0x41b4c7
  41b4a7:	rex.WRXB push r8
  41b4a9:	push   rsp
  41b4aa:	pop    rdi
  41b4ab:	push   rax
  41b4ac:	push   rdx
  41b4ad:	rex.WRXB
  41b4ae:	rex.XB
  41b4af:	rex.RB push r11
  41b4b1:	push   rbx
  41b4b2:	and    BYTE PTR [rsp+rdi*2+0x20],bh
  41b4b6:	cmp    cl,BYTE PTR [rdx]
  41b4b8:	jne    0x41b528
  41b4ba:	jae    0x41b521
  41b4bc:	je     0x41b4de
  41b4be:	rex.WRXB push r8
  41b4c0:	push   rsp
  41b4c1:	pop    rdi
  41b4c2:	rex.RB
  41b4c3:	rex.WR
  41b4c4:	rex.RB
  41b4c5:	rex.WRB
  41b4c6:	rex.RB
  41b4c7:	rex.WRX push rsp
  41b4c9:	and    BYTE PTR [rsp+rdi*2+0x20],bh
  41b4cd:	cmp    cl,BYTE PTR [rdx]
  41b4cf:	jne    0x41b53f
  41b4d1:	jae    0x41b538
  41b4d3:	je     0x41b4f5
  41b4d5:	rex.WRXB push r8
  41b4d7:	push   rsp
  41b4d8:	pop    rdi
  41b4d9:	push   r10
  41b4db:	rex.RXB and BYTE PTR [r8],r12b
  41b4de:	and    BYTE PTR [rax],ah
  41b4e0:	and    BYTE PTR [rsp+rdi*2+0x20],bh
  41b4e4:	cmp    cl,BYTE PTR [rdx]
  41b4e6:	jne    0x41b556
  41b4e8:	jae    0x41b54f
  41b4ea:	je     0x41b50c
  41b4ec:	rex.WRXB push r8
  41b4ee:	push   rsp
  41b4ef:	pop    rdi
  41b4f0:	push   r10
  41b4f2:	rex.RXB pop r15
  41b4f4:	rex.WRX
  41b4f5:	rex.RB
  41b4f6:	rex.RB
  41b4f7:	rex.R
  41b4f8:	rex.RB
  41b4f9:	and    BYTE PTR [rsp+rdi*2+0x20],r15b
  41b4fe:	cmp    cl,BYTE PTR [rdx]
  41b500:	jne    0x41b570
  41b502:	jae    0x41b569
  41b504:	je     0x41b526
  41b506:	rex.WRXB push r8
  41b508:	push   rsp
  41b509:	pop    rdi
  41b50a:	rex.WRX
  41b50b:	rex.B
  41b50c:	rex.WRB
  41b50d:	and    BYTE PTR [r8],r12b
  41b510:	and    BYTE PTR [rax],ah
  41b512:	jl     0x41b590
  41b514:	and    BYTE PTR [rdx],bh
  41b516:	or     dh,BYTE PTR [rbp+0x6e]
  41b519:	jae    0x41b580
  41b51b:	je     0x41b53d
  41b51d:	rex.WRXB push r8
  41b51f:	push   rsp
  41b520:	pop    rdi
  41b521:	rex.XB
  41b522:	rex.WRXB
  41b523:	rex.R
  41b524:	and    BYTE PTR [r8],r12b
  41b527:	and    BYTE PTR [rax],ah
  41b529:	jl     0x41b5a7
  41b52b:	and    BYTE PTR [rdx],bh
  41b52d:	or     dh,BYTE PTR [rbp+0x6e]
  41b530:	jae    0x41b597
  41b532:	je     0x41b554
  41b534:	rex.WRXB push r8
  41b536:	push   rsp
  41b537:	pop    rdi
  41b538:	push   r10
  41b53a:	rex.RXB pop r15
  41b53c:	push   rsi
  41b53d:	rex.B
  41b53e:	rex.WR and BYTE PTR [rsp+rdi*2+0x20],r15b
  41b543:	cmp    cl,BYTE PTR [rdx]
  41b545:	add    BYTE PTR [rax],ah
  41b547:	and    BYTE PTR [rax],ah
  41b549:	and    BYTE PTR [rax],ah
  41b54b:	and    BYTE PTR [rax],ah
  41b54d:	and    BYTE PTR [rdi+0x50],cl
  41b550:	push   rsp
  41b551:	pop    rdi
  41b552:	rex.XB
  41b553:	rex.WRXB
  41b554:	rex.R
  41b555:	rex.RB cmp eax,0x68636560
  41b55b:	outs   dx,DWORD PTR ds:[rsi]
  41b55c:	and    BYTE PTR [rdx],ah
  41b55e:	pop    rax
  41b55f:	and    al,0x7b
  41b561:	rex.WRXB push r8
  41b563:	push   rsp
  41b564:	pop    rdi
  41b565:	push   r10
  41b567:	rex.RXB jge 0x41b58c
  41b56a:	jl     0x41b5df
  41b56c:	gs and BYTE PTR fs:[rdi],ah
  41b570:	jae    0x41b5a1
  41b572:	pop    rsi
  41b573:	pop    rax
  41b574:	sub    eax,0x272f2f2a
  41b579:	(bad)  
  41b57a:	or     ah,BYTE PTR [rax]
  41b57c:	and    BYTE PTR [rax],ah
  41b57e:	and    BYTE PTR [rax],ah
  41b580:	and    BYTE PTR [rax],ah
  41b582:	and    BYTE PTR [rbx+0x68],dh
  41b585:	imul   esp,DWORD PTR [rsi+0x74],0x2020200a
  41b58c:	and    BYTE PTR [rax],ah
  41b58e:	and    BYTE PTR [rax],ah
  41b590:	and    BYTE PTR [rdi+0x50],cl
  41b593:	push   rsp
  41b594:	pop    rdi
  41b595:	push   r10
  41b597:	rex.RXB cmp eax,0x200a3124
  41b59d:	and    BYTE PTR [rax],ah
  41b59f:	and    BYTE PTR [rax],ah
  41b5a1:	and    BYTE PTR [rax],ah
  41b5a3:	and    BYTE PTR [rbx+0x61],ah
  41b5a6:	jae    0x41b60d
  41b5a8:	and    BYTE PTR [rdx],ah
  41b5aa:	and    al,0x7b
  41b5ac:	rex.WRXB push r8
  41b5ae:	push   rsp
  41b5af:	pop    rdi
  41b5b0:	rex.XB
  41b5b1:	rex.WRXB
  41b5b2:	rex.R
  41b5b3:	rex.RB jge 0x41b5d8
  41b5b6:	and    BYTE PTR [rcx+0x6e],ch
  41b5b9:	and    BYTE PTR [rdx],ch
  41b5bb:	cmp    eax,0xa29202a
  41b5c0:	and    BYTE PTR [rax],ah
  41b5c2:	and    BYTE PTR [rax],ah
  41b5c4:	and    BYTE PTR [rax],ah
  41b5c6:	and    BYTE PTR [rax],ah
  41b5c8:	and    BYTE PTR [rax],ah
  41b5ca:	and    BYTE PTR [rax],ah
  41b5cc:	rex.WRXB push r8
  41b5ce:	push   rsp
  41b5cf:	pop    rdi
  41b5d0:	push   r10
  41b5d2:	rex.RXB pop r15
  41b5d4:	push   rsi
  41b5d5:	rex.B
  41b5d6:	rex.WR cmp rax,0x68636560
  41b5dc:	outs   dx,DWORD PTR ds:[rsi]
  41b5dd:	and    BYTE PTR [rdx],ah
  41b5df:	and    al,0x7b
  41b5e1:	rex.WRXB push r8
  41b5e3:	push   rsp
  41b5e4:	pop    rdi
  41b5e5:	rex.XB
  41b5e6:	rex.WRXB
  41b5e7:	rex.R
  41b5e8:	rex.RB jge 0x41b60d
  41b5eb:	jl     0x41b660
  41b5ed:	gs and BYTE PTR fs:[rdi],ah
  41b5f1:	jae    0x41b622
  41b5f3:	pop    rsi
  41b5f4:	pop    rbx
  41b5f5:	pop    rsi
  41b5f6:	cmp    eax,0x2f3d2a5d
  41b5fb:	(bad)  
  41b5fc:	(bad)  
  41b5fd:	(bad)  
  41b5fe:	or     ah,BYTE PTR [rax]
  41b600:	and    BYTE PTR [rax],ah
  41b602:	and    BYTE PTR [rax],ah
  41b604:	and    BYTE PTR [rax],ah
  41b606:	and    BYTE PTR [rax],ah
  41b608:	and    BYTE PTR [rax],ah
  41b60a:	and    BYTE PTR [rdi+0x50],cl
  41b60d:	push   rsp
  41b60e:	pop    rdi
  41b60f:	rex.XB
  41b610:	rex.WRXB
  41b611:	rex.R
  41b612:	rex.RB cmp eax,0x68636560
  41b618:	outs   dx,DWORD PTR ds:[rsi]
  41b619:	and    BYTE PTR [rdx],ah
  41b61b:	and    al,0x7b
  41b61d:	rex.WRXB push r8
  41b61f:	push   rsp
  41b620:	pop    rdi
  41b621:	rex.XB
  41b622:	rex.WRXB
  41b623:	rex.R
  41b624:	rex.RB jge 0x41b649
  41b627:	jl     0x41b69c
  41b629:	gs and BYTE PTR fs:[rdi],ah
  41b62d:	jae    0x41b65e
  41b62f:	cmp    eax,0x2f242a2e
  41b634:	(bad)  
  41b635:	(bad)  
  41b636:	(bad)  
  41b637:	and    BYTE PTR [rbx],bh
  41b639:	cmp    esp,DWORD PTR [rax]
  41b63b:	gs jae 0x41b69f
  41b63e:	movsxd ecx,DWORD PTR [rdx]
  41b640:	add    BYTE PTR [rax],ah
  41b642:	and    BYTE PTR [rax],ah
  41b644:	and    BYTE PTR [rax],ah
  41b646:	and    BYTE PTR [rax],ah
  41b648:	and    BYTE PTR [rdi+0x50],cl
  41b64b:	push   rsp
  41b64c:	pop    rdi
  41b64d:	rex.XB
  41b64e:	rex.WRXB
  41b64f:	rex.R
  41b650:	rex.RB cmp eax,0x68636560
  41b656:	outs   dx,DWORD PTR ds:[rsi]
  41b657:	and    BYTE PTR [rdx],ah
  41b659:	pop    rax
  41b65a:	and    al,0x7b
  41b65c:	rex.WRXB push r8
  41b65e:	push   rsp
  41b65f:	pop    rdi
  41b660:	push   r10
  41b662:	rex.RXB jge 0x41b687
  41b665:	and    BYTE PTR [rax+riz*1+0x73],bh
  41b669:	gs and BYTE PTR fs:[rdi],ah
  41b66d:	jae    0x41b69e
  41b66f:	pop    rax
  41b670:	sub    eax,0x5c2e285c
  41b675:	sub    DWORD PTR [rsi],ebp
  41b677:	sub    ch,BYTE PTR [rdi]
  41b679:	pop    rsp
  41b67a:	xor    DWORD PTR [rdi],ebp
  41b67c:	(bad)  
  41b67d:	(bad)  
  41b67e:	or     ah,BYTE PTR [rax]
  41b680:	and    BYTE PTR [rax],ah
  41b682:	and    BYTE PTR [rax],ah
  41b684:	and    BYTE PTR [rax],ah
  41b686:	and    BYTE PTR [rdi+0x50],cl
  41b689:	push   rsp
  41b68a:	pop    rdi
  41b68b:	push   r10
  41b68d:	rex.RXB cmp eax,0x63652060
  41b693:	push   0x5822206f
  41b698:	and    al,0x7b
  41b69a:	rex.WRXB push r8
  41b69c:	push   rsp
  41b69d:	pop    rdi
  41b69e:	push   r10
  41b6a0:	rex.RXB jge 0x41b6c5
  41b6a3:	and    BYTE PTR [rax+riz*1+0x73],bh
  41b6a7:	gs and BYTE PTR fs:[rdi],ah
  41b6ab:	jae    0x41b6dc
  41b6ad:	pop    rax
  41b6ae:	sub    eax,0x272f2f2e
  41b6b3:	(bad)  
  41b6b4:	or     al,BYTE PTR [rax]
  41b6b6:	or     al,BYTE PTR [rcx+0x52]
  41b6b9:	rex.RXB pop r15
  41b6bb:	rex.XB
  41b6bc:	rex.WRXB push r13
  41b6be:	rex.WRX push rsp
  41b6c0:	cmp    eax,0x4f0a2324
  41b6c5:	push   rax
  41b6c6:	push   rsp
  41b6c7:	pop    rdi
  41b6c8:	push   rax
  41b6c9:	push   rdx
  41b6ca:	rex.WRXB
  41b6cb:	rex.XB
  41b6cc:	rex.RB push r11
  41b6ce:	push   rbx
  41b6cf:	cmp    eax,0x65757274
  41b6d4:	or     cl,BYTE PTR [rdi+0x50]
  41b6d7:	push   rsp
  41b6d8:	pop    rdi
  41b6d9:	push   r10
  41b6db:	rex.RXB cmp eax,0x770a3124
  41b6e1:	push   0x20656c69
  41b6e6:	and    al,0x7b
  41b6e8:	rex.WRXB push r8
  41b6ea:	push   rsp
  41b6eb:	pop    rdi
  41b6ec:	push   rax
  41b6ed:	push   rdx
  41b6ee:	rex.WRXB
  41b6ef:	rex.XB
  41b6f0:	rex.RB push r11
  41b6f2:	push   rbx
  41b6f3:	jge    0x41b715
  41b6f5:	es and BYTE PTR es:[rbx+0x20],bl
  41b6fa:	and    al,0x23
  41b6fc:	and    BYTE PTR [rip+0x30207467],ch        # 0x30622b69
  41b702:	and    BYTE PTR [rbp+0xa],bl
  41b705:	outs   dx,DWORD PTR fs:[rsi]
  41b707:	or     ah,BYTE PTR [rax]
  41b709:	and    BYTE PTR [rax],ah
  41b70b:	and    BYTE PTR [rdi+0x50],cl
  41b70e:	push   rsp
  41b70f:	pop    rdi
  41b710:	rex.RB
  41b711:	rex.WR
  41b712:	rex.RB
  41b713:	rex.WRB
  41b714:	rex.RB
  41b715:	rex.WRX push rsp
  41b717:	cmp    eax,0x200a2727
  41b71c:	and    BYTE PTR [rax],ah
  41b71e:	and    BYTE PTR [rdi+0x50],cl
  41b721:	push   rsp
  41b722:	pop    rdi
  41b723:	push   r10
  41b725:	rex.RXB pop r15
  41b727:	push   rsi
  41b728:	rex.B
  41b729:	rex.WR cmp rax,0xa0a2727
  41b72f:	and    BYTE PTR [rax],ah
  41b731:	and    BYTE PTR [rax],ah
  41b733:	movsxd esp,DWORD PTR [rcx+0x73]
  41b736:	and    BYTE PTR gs:[rdx],ah
  41b739:	and    al,0x7b
  41b73b:	rex.WRXB push r8
  41b73d:	push   rsp
  41b73e:	pop    rdi
  41b73f:	push   r10
  41b741:	rex.RXB jge 0x41b766
  41b744:	and    BYTE PTR [rcx+0x6e],ch
  41b747:	or     ah,BYTE PTR [rax]
  41b749:	and    BYTE PTR [rax],ah
  41b74b:	and    BYTE PTR [rip+0xa29202d],ch        # 0xa6ad77e
  41b751:	and    BYTE PTR [rax],ah
  41b753:	and    BYTE PTR [rax],ah
  41b755:	and    BYTE PTR [rax],ah
  41b757:	and    BYTE PTR [rax],ah
  41b759:	rex.WRXB push r8
  41b75b:	push   rsp
  41b75c:	pop    rdi
  41b75d:	push   rax
  41b75e:	push   rdx
  41b75f:	rex.WRXB
  41b760:	rex.XB
  41b761:	rex.RB push r11
  41b763:	push   rbx
  41b764:	cmp    eax,0x736c6166
  41b769:	or     ah,BYTE PTR gs:[rax]
  41b76c:	and    BYTE PTR [rax],ah
  41b76e:	and    BYTE PTR [rax],ah
  41b770:	and    BYTE PTR [rax],ah
  41b772:	and    BYTE PTR [rbx+0x68],dh
  41b775:	imul   esp,DWORD PTR [rsi+0x74],0x2020200a
  41b77c:	and    BYTE PTR [rax],ah
  41b77e:	and    BYTE PTR [rax],ah
  41b780:	and    BYTE PTR [rbx],bh
  41b782:	cmp    ecx,DWORD PTR [rdx]
  41b784:	add    BYTE PTR [rax],ah
  41b786:	and    BYTE PTR [rax],ah
  41b788:	and    BYTE PTR [rax],ah
  41b78a:	and    BYTE PTR [rax],ah
  41b78c:	and    BYTE PTR [rbx+0x61],ah
  41b78f:	jae    0x41b7f6
  41b791:	and    BYTE PTR [rdx],ah
  41b793:	and    al,0x7b
  41b795:	rex.WRXB push r8
  41b797:	push   rsp
  41b798:	pop    rdi
  41b799:	push   r10
  41b79b:	rex.RXB pop r15
  41b79d:	rex.WRX
  41b79e:	rex.RB
  41b79f:	rex.RB
  41b7a0:	rex.R
  41b7a1:	rex.RB
  41b7a2:	rex.R jge 0x41b7c7
  41b7a5:	and    BYTE PTR [rcx+0x6e],ch
  41b7a8:	or     ah,BYTE PTR [rax]
  41b7aa:	and    BYTE PTR [rax],ah
  41b7ac:	and    BYTE PTR [rax],ah
  41b7ae:	and    BYTE PTR [rax],ah
  41b7b0:	and    BYTE PTR [rsi+0x4f],cl
  41b7b3:	and    BYTE PTR [rcx],ch
  41b7b5:	or     ah,BYTE PTR [rax]
  41b7b7:	and    BYTE PTR [rax],ah
  41b7b9:	and    BYTE PTR [rax],ah
  41b7bb:	and    BYTE PTR [rax],ah
  41b7bd:	and    BYTE PTR [rax],ah
  41b7bf:	and    BYTE PTR [rax],ah
  41b7c1:	and    BYTE PTR [rdi+0x50],cl
  41b7c4:	push   rsp
  41b7c5:	pop    rdi
  41b7c6:	push   r10
  41b7c8:	rex.RXB pop r15
  41b7ca:	push   rsi
  41b7cb:	rex.B
  41b7cc:	rex.WR cmp rax,0x200a2727
  41b7d2:	and    BYTE PTR [rax],ah
  41b7d4:	and    BYTE PTR [rax],ah
  41b7d6:	and    BYTE PTR [rax],ah
  41b7d8:	and    BYTE PTR [rax],ah
  41b7da:	and    BYTE PTR [rax],ah
  41b7dc:	and    BYTE PTR [rbx],bh
  41b7de:	cmp    ecx,DWORD PTR [rdx]
  41b7e0:	and    BYTE PTR [rax],ah
  41b7e2:	and    BYTE PTR [rax],ah
  41b7e4:	and    BYTE PTR [rax],ah
  41b7e6:	and    BYTE PTR [rax],ah
  41b7e8:	pop    rcx
  41b7e9:	rex.RB push r11
  41b7eb:	and    BYTE PTR [rcx],ch
  41b7ed:	or     ah,BYTE PTR [rax]
  41b7ef:	and    BYTE PTR [rax],ah
  41b7f1:	and    BYTE PTR [rax],ah
  41b7f3:	and    BYTE PTR [rax],ah
  41b7f5:	and    BYTE PTR [rax],ah
  41b7f7:	and    BYTE PTR [rax],ah
  41b7f9:	and    BYTE PTR [rcx+0x66],ch
  41b7fc:	and    BYTE PTR [rbx+0x20],bl
  41b7ff:	sub    eax,0x2422207a
  41b804:	jnp    0x41b855
  41b806:	push   rax
  41b807:	push   rsp
  41b808:	pop    rdi
  41b809:	push   r10
  41b80b:	rex.RXB pop r15
  41b80d:	push   rsi
  41b80e:	rex.B
  41b80f:	rex.WR jge 0x41b834
  41b812:	and    BYTE PTR [rbp+0xa],bl
  41b815:	and    BYTE PTR [rax],ah
  41b817:	and    BYTE PTR [rax],ah
  41b819:	and    BYTE PTR [rax],ah
  41b81b:	and    BYTE PTR [rax],ah
  41b81d:	and    BYTE PTR [rax],ah
  41b81f:	and    BYTE PTR [rax],ah
  41b821:	je     0x41b88b
  41b823:	outs   dx,BYTE PTR gs:[rsi]
  41b825:	or     ah,BYTE PTR [rax]
  41b827:	and    BYTE PTR [rax],ah
  41b829:	and    BYTE PTR [rax],ah
  41b82b:	and    BYTE PTR [rax],ah
  41b82d:	and    BYTE PTR [rax],ah
  41b82f:	and    BYTE PTR [rax],ah
  41b831:	and    BYTE PTR [rax],ah
  41b833:	and    BYTE PTR [rax],ah
  41b835:	and    BYTE PTR [rcx+0x66],ch
  41b838:	and    BYTE PTR [rbx+0x20],bl
  41b83b:	and    al,0x23
  41b83d:	and    BYTE PTR [rip+0x30207165],ch        # 0x306229a8
  41b843:	and    BYTE PTR [rbp+0xa],bl
  41b846:	and    BYTE PTR [rax],ah
  41b848:	and    BYTE PTR [rax],ah
  41b84a:	and    BYTE PTR [rax],ah
  41b84c:	and    BYTE PTR [rax],ah
  41b84e:	and    BYTE PTR [rax],ah
  41b850:	and    BYTE PTR [rax],ah
  41b852:	and    BYTE PTR [rax],ah
  41b854:	and    BYTE PTR [rax],ah
  41b856:	je     0x41b8c0
  41b858:	outs   dx,BYTE PTR gs:[rsi]
  41b85a:	or     ah,BYTE PTR [rax]
  41b85c:	and    BYTE PTR [rax],ah
  41b85e:	and    BYTE PTR [rax],ah
  41b860:	and    BYTE PTR [rax],ah
  41b862:	and    BYTE PTR [rax],ah
  41b864:	and    BYTE PTR [rax],ah
  41b866:	and    BYTE PTR [rax],ah
  41b868:	and    BYTE PTR [rax],ah
  41b86a:	and    BYTE PTR [rax],ah
  41b86c:	and    BYTE PTR [rax],ah
  41b86e:	and    BYTE PTR [rbp+0x63],ah
  41b871:	push   0x6f4e206f
  41b876:	and    BYTE PTR [rcx+0x72],ah
  41b879:	addr32 jne 0x41b8e9
  41b87c:	outs   dx,BYTE PTR gs:[rsi]
  41b87e:	je     0x41b8a0
  41b880:	jo     0x41b8f4
  41b882:	outs   dx,DWORD PTR ds:[rsi]
  41b883:	jbe    0x41b8ee
  41b885:	fs gs and BYTE PTR fs:[rsi+0x6f],ah
  41b88b:	jb     0x41b8ad
  41b88d:	and    al,0x7b
  41b88f:	rex.WRXB push r8
  41b891:	push   rsp
  41b892:	pop    rdi
  41b893:	rex.WRX
  41b894:	rex.B
  41b895:	rex.WRB
  41b896:	rex.RB jge 0x41b8b9
  41b899:	outs   dx,DWORD PTR ds:[rsi]
  41b89a:	jo     0x41b910
  41b89c:	imul   ebp,DWORD PTR [rdi+0x6e],0x2020200a
  41b8a3:	and    BYTE PTR [rax],ah
  41b8a5:	and    BYTE PTR [rax],ah
  41b8a7:	and    BYTE PTR [rax],ah
  41b8a9:	and    BYTE PTR [rax],ah
  41b8ab:	and    BYTE PTR [rax],ah
  41b8ad:	and    BYTE PTR [rax],ah
  41b8af:	and    BYTE PTR [rax],ah
  41b8b1:	and    BYTE PTR [rax],ah
  41b8b3:	and    BYTE PTR [rbp+0x63],ah
  41b8b6:	push   0x2422206f
  41b8bb:	and    eax,0x53555f73
  41b8c0:	rex.B
  41b8c1:	rex.RXB
  41b8c2:	rex.RB pop r15
  41b8c4:	push   rsp
  41b8c5:	rex.RB pop r8
  41b8c7:	push   rsp
  41b8c8:	and    cl,BYTE PTR [rdx]
  41b8ca:	and    BYTE PTR [rax],ah
  41b8cc:	and    BYTE PTR [rax],ah
  41b8ce:	and    BYTE PTR [rax],ah
  41b8d0:	and    BYTE PTR [rax],ah
  41b8d2:	and    BYTE PTR [rax],ah
  41b8d4:	and    BYTE PTR [rax],ah
  41b8d6:	and    BYTE PTR [rax],ah
  41b8d8:	and    BYTE PTR [rax],ah
  41b8da:	and    BYTE PTR [rax],ah
  41b8dc:	and    BYTE PTR [rax],ah
  41b8de:	gs js  0x41b94a
  41b8e1:	je     0x41b903
  41b8e3:	xor    DWORD PTR [rdx],ecx
  41b8e5:	and    BYTE PTR [rax],ah
  41b8e7:	and    BYTE PTR [rax],ah
  41b8e9:	and    BYTE PTR [rax],ah
  41b8eb:	and    BYTE PTR [rax],ah
  41b8ed:	and    BYTE PTR [rax],ah
  41b8ef:	and    BYTE PTR [rax],ah
  41b8f1:	and    BYTE PTR [rax],ah
  41b8f3:	and    BYTE PTR [rax],ah
  41b8f5:	imul   sp,WORD PTR [rax],0x263e
  41b8fa:	xor    cl,BYTE PTR [rdx]
  41b8fc:	and    BYTE PTR [rax],ah
  41b8fe:	and    BYTE PTR [rax],ah
  41b900:	and    BYTE PTR [rax],ah
  41b902:	and    BYTE PTR [rax],ah
  41b904:	and    BYTE PTR [rax],ah
  41b906:	and    BYTE PTR [rax],ah
  41b908:	and    BYTE PTR [rax],ah
  41b90a:	and    BYTE PTR [rax],ah
  41b90c:	rex.WRXB push r8
  41b90e:	push   rsp
  41b90f:	pop    rdi
  41b910:	push   r10
  41b912:	rex.RXB pop r15
  41b914:	push   rsi
  41b915:	rex.B
  41b916:	rex.WR cmp rax,0x504f7b24
  41b91c:	push   rsp
  41b91d:	pop    rdi
  41b91e:	push   r10
  41b920:	rex.RXB jge 0x41b92d
  41b923:	and    BYTE PTR [rax],ah
  41b925:	and    BYTE PTR [rax],ah
  41b927:	and    BYTE PTR [rax],ah
  41b929:	and    BYTE PTR [rax],ah
  41b92b:	and    BYTE PTR [rax],ah
  41b92d:	and    BYTE PTR [rax],ah
  41b92f:	and    BYTE PTR [rax],ah
  41b931:	and    BYTE PTR [rax],ah
  41b933:	jae    0x41b99d
  41b935:	imul   esp,DWORD PTR [rsi+0x74],0x2020200a
  41b93c:	and    BYTE PTR [rax],ah
  41b93e:	and    BYTE PTR [rax],ah
  41b940:	and    BYTE PTR [rax],ah
  41b942:	and    BYTE PTR [rax],ah
  41b944:	and    BYTE PTR [rax],ah
  41b946:	and    BYTE PTR [rax],ah
  41b948:	and    BYTE PTR [rdi+0x50],cl
  41b94b:	push   rsp
  41b94c:	pop    rdi
  41b94d:	push   r10
  41b94f:	rex.RXB cmp eax,0x200a3124
  41b955:	and    BYTE PTR [rax],ah
  41b957:	and    BYTE PTR [rax],ah
  41b959:	and    BYTE PTR [rax],ah
  41b95b:	and    BYTE PTR [rax],ah
  41b95d:	and    BYTE PTR [rax],ah
  41b95f:	and    BYTE PTR [rsi+0x69],ah
  41b962:	or     ah,BYTE PTR [rax]
  41b964:	and    BYTE PTR [rax],ah
  41b966:	and    BYTE PTR [rax],ah
  41b968:	and    BYTE PTR [rax],ah
  41b96a:	and    BYTE PTR [rax],ah
  41b96c:	and    BYTE PTR [rax],ah
  41b96e:	and    BYTE PTR [rbx],bh
  41b970:	cmp    ecx,DWORD PTR [rdx]
  41b972:	and    BYTE PTR [rax],ah
  41b974:	and    BYTE PTR [rax],ah
  41b976:	and    BYTE PTR [rax],ah
  41b978:	and    BYTE PTR [rax],ah
  41b97a:	rex.WRXB
  41b97b:	rex.WXB and BYTE PTR [r9],bpl
  41b97e:	or     ah,BYTE PTR [rax]
  41b980:	and    BYTE PTR [rax],ah
  41b982:	and    BYTE PTR [rax],ah
  41b984:	and    BYTE PTR [rax],ah
  41b986:	and    BYTE PTR [rax],ah
  41b988:	and    BYTE PTR [rax],ah
  41b98a:	and    BYTE PTR [rcx+0x66],ch
  41b98d:	and    BYTE PTR [rbx+0x20],bl
  41b990:	sub    eax,0x2422207a
  41b995:	jnp    0x41b9e6
  41b997:	push   rax
  41b998:	push   rsp
  41b999:	pop    rdi
  41b99a:	push   r10
  41b99c:	rex.RXB pop r15
  41b99e:	push   rsi
  41b99f:	rex.B
  41b9a0:	rex.WR jge 0x41b9c5
  41b9a3:	and    BYTE PTR [rbp+0x20],bl
  41b9a6:	es and BYTE PTR es:[rbx+0x20],bl
  41b9ab:	and    al,0x23
  41b9ad:	and    BYTE PTR [rip+0x30207467],ch        # 0x30622e1a
  41b9b3:	and    BYTE PTR [rbp+0xa],bl
  41b9b6:	and    BYTE PTR [rax],ah
  41b9b8:	and    BYTE PTR [rax],ah
  41b9ba:	and    BYTE PTR [rax],ah
  41b9bc:	and    BYTE PTR [rax],ah
  41b9be:	and    BYTE PTR [rax],ah
  41b9c0:	and    BYTE PTR [rax],ah
  41b9c2:	je     0x41ba2c
  41b9c4:	outs   dx,BYTE PTR gs:[rsi]
  41b9c6:	or     ah,BYTE PTR [rax]
  41b9c8:	and    BYTE PTR [rax],ah
  41b9ca:	and    BYTE PTR [rax],ah
  41b9cc:	and    BYTE PTR [rax],ah
  41b9ce:	and    BYTE PTR [rax],ah
  41b9d0:	and    BYTE PTR [rax],ah
  41b9d2:	and    BYTE PTR [rax],ah
  41b9d4:	and    BYTE PTR [rax],ah
  41b9d6:	and    BYTE PTR [rbx+0x61],ah
  41b9d9:	jae    0x41ba40
  41b9db:	and    BYTE PTR [rdx],ah
  41b9dd:	and    al,0x7b
  41b9df:	rex.WRXB push r8
  41b9e1:	push   rsp
  41b9e2:	pop    rdi
  41b9e3:	push   r10
  41b9e5:	rex.RXB jge 0x41ba0a
  41b9e8:	and    BYTE PTR [rcx+0x6e],ch
  41b9eb:	and    BYTE PTR [rip+0x2029202a],ch        # 0x206ada1b
  41b9f1:	cmp    edi,DWORD PTR [rbx]
  41b9f3:	and    BYTE PTR [rdx],ch
  41b9f5:	and    BYTE PTR [rcx],ch
  41b9f7:	or     ah,BYTE PTR [rax]
  41b9f9:	and    BYTE PTR [rax],ah
  41b9fb:	and    BYTE PTR [rax],ah
  41b9fd:	and    BYTE PTR [rax],ah
  41b9ff:	and    BYTE PTR [rax],ah
  41ba01:	and    BYTE PTR [rax],ah
  41ba03:	and    BYTE PTR [rax],ah
  41ba05:	and    BYTE PTR [rax],ah
  41ba07:	and    BYTE PTR [rax],ah
  41ba09:	and    BYTE PTR [rax],ah
  41ba0b:	and    BYTE PTR [rdi+0x50],cl
  41ba0e:	push   rsp
  41ba0f:	pop    rdi
  41ba10:	push   r10
  41ba12:	rex.RXB pop r15
  41ba14:	push   rsi
  41ba15:	rex.B
  41ba16:	rex.WR cmp rax,0x504f7b24
  41ba1c:	push   rsp
  41ba1d:	pop    rdi
  41ba1e:	push   r10
  41ba20:	rex.RXB jge 0x41ba2d
  41ba23:	and    BYTE PTR [rax],ah
  41ba25:	and    BYTE PTR [rax],ah
  41ba27:	and    BYTE PTR [rax],ah
  41ba29:	and    BYTE PTR [rax],ah
  41ba2b:	and    BYTE PTR [rax],ah
  41ba2d:	and    BYTE PTR [rax],ah
  41ba2f:	and    BYTE PTR [rax],ah
  41ba31:	and    BYTE PTR [rax],ah
  41ba33:	and    BYTE PTR [rax],ah
  41ba35:	and    BYTE PTR [rax],ah
  41ba37:	jae    0x41baa1
  41ba39:	imul   esp,DWORD PTR [rsi+0x74],0x2020200a
  41ba40:	and    BYTE PTR [rax],ah
  41ba42:	and    BYTE PTR [rax],ah
  41ba44:	and    BYTE PTR [rax],ah
  41ba46:	and    BYTE PTR [rax],ah
  41ba48:	and    BYTE PTR [rax],ah
  41ba4a:	and    BYTE PTR [rax],ah
  41ba4c:	and    BYTE PTR [rax],ah
  41ba4e:	and    BYTE PTR [rax],ah
  41ba50:	and    BYTE PTR [rdi+0x50],cl
  41ba53:	push   rsp
  41ba54:	pop    rdi
  41ba55:	push   r10
  41ba57:	rex.RXB cmp eax,0x3b203124
  41ba5d:	cmp    esp,DWORD PTR [rax]
  41ba5f:	gs jae 0x41bac3
  41ba62:	movsxd ecx,DWORD PTR [rdx]
  41ba64:	and    BYTE PTR [rax],ah
  41ba66:	and    BYTE PTR [rax],ah
  41ba68:	and    BYTE PTR [rax],ah
  41ba6a:	and    BYTE PTR [rax],ah
  41ba6c:	and    BYTE PTR [rax],ah
  41ba6e:	and    BYTE PTR [rax],ah
  41ba70:	imul   cx,WORD PTR [rdx],0x2020
  41ba75:	and    BYTE PTR [rax],ah
  41ba77:	and    BYTE PTR [rax],ah
  41ba79:	and    BYTE PTR [rax],ah
  41ba7b:	and    BYTE PTR [rax],ah
  41ba7d:	and    BYTE PTR [rax],ah
  41ba7f:	cmp    edi,DWORD PTR [rbx]
  41ba81:	or     ah,BYTE PTR [rax]
  41ba83:	and    BYTE PTR [rax],ah
  41ba85:	and    BYTE PTR [rax],ah
  41ba87:	and    BYTE PTR [rax],ah
  41ba89:	and    BYTE PTR [rbp+0x73],ah
  41ba8c:	(bad)  
  41ba8d:	movsxd ecx,DWORD PTR [rdx]
  41ba8f:	add    BYTE PTR [rax],ah
  41ba91:	and    BYTE PTR [rax],ah
  41ba93:	and    BYTE PTR [rax],ah
  41ba95:	and    BYTE PTR [rax],ah
  41ba97:	and    BYTE PTR [rax],ah
  41ba99:	and    BYTE PTR [rax],ah
  41ba9b:	and    BYTE PTR [rip+0x5f732431],ah        # 0x5fb4ded2
  41baa1:	and    eax,0x5f732432
  41baa6:	rex.XB push r12
  41baa8:	cmp    eax,0x70786560
  41baad:	jb     0x41bacf
  41baaf:	and    al,0x7b
  41bab1:	and    eax,0x5f732431
  41bab6:	and    eax,0x5f732432
  41babb:	rex.XB push r12
  41babd:	jge    0x41badf
  41babf:	sub    esp,DWORD PTR [rax]
  41bac1:	xor    DWORD PTR [rax+0xa],esp
  41bac4:	and    BYTE PTR [rax],ah
  41bac6:	and    BYTE PTR [rax],ah
  41bac8:	and    BYTE PTR [rax],ah
  41baca:	and    BYTE PTR [rax],ah
  41bacc:	and    BYTE PTR [rax],ah
  41bace:	and    BYTE PTR [rax],ah
  41bad0:	rex.WRXB push r8
  41bad2:	push   rsp
  41bad3:	pop    rdi
  41bad4:	rex.RB
  41bad5:	rex.WR
  41bad6:	rex.RB
  41bad7:	rex.WRB
  41bad8:	rex.RB
  41bad9:	rex.WRX push rsp
  41badb:	cmp    eax,0x7b245f22
  41bae0:	and    eax,0x5f732431
  41bae5:	and    eax,0x5f732432
  41baea:	rex.XB push r12
  41baec:	jge    0x41bb10
  41baee:	or     ah,BYTE PTR [rax]
  41baf0:	and    BYTE PTR [rax],ah
  41baf2:	and    BYTE PTR [rax],ah
  41baf4:	and    BYTE PTR [rax],ah
  41baf6:	and    BYTE PTR [rax],ah
  41baf8:	and    BYTE PTR [rax],ah
  41bafa:	and    BYTE PTR [rdi+0x50],cl
  41bafd:	push   rsp
  41bafe:	pop    rdi
  41baff:	rex.WRX
  41bb00:	rex.B
  41bb01:	rex.WRB
  41bb02:	rex.RB cmp eax,0x24322527
  41bb08:	jae    0x41bb31
  41bb0a:	or     al,BYTE PTR [rax]
  41bb0c:	or     ch,BYTE PTR [rcx+0x66]
  41bb0f:	and    BYTE PTR [rbp+riz*2+0x73],dh
  41bb13:	je     0x41bb35
  41bb15:	sub    eax,0x2422207a
  41bb1a:	jnp    0x41bb41
  41bb1c:	xor    DWORD PTR [rbx+rsi*2],esp
  41bb1f:	pop    rdi
  41bb20:	and    eax,0x7d732432
  41bb25:	and    cl,BYTE PTR [rdx]
  41bb27:	je     0x41bb91
  41bb29:	outs   dx,BYTE PTR gs:[rsi]
  41bb2b:	or     ah,BYTE PTR [rax]
  41bb2d:	and    BYTE PTR [rip+0x5f732431],ah        # 0x5fb4df64
  41bb33:	and    eax,0x5f732432
  41bb38:	rex.XB push r12
  41bb3a:	cmp    eax,0x20200a30
  41bb3f:	gs js  0x41bbb2
  41bb42:	outs   dx,DWORD PTR ds:[rsi]
  41bb43:	jb     0x41bbb9
  41bb45:	and    BYTE PTR [rip+0x5f732431],ah        # 0x5fb4df7c
  41bb4b:	and    eax,0x5f732432
  41bb50:	rex.XB push r12
  41bb52:	or     ah,BYTE PTR [rbp+0x6c]
  41bb55:	jae    0x41bbbc
  41bb57:	or     ah,BYTE PTR [rax]
  41bb59:	and    BYTE PTR [rip+0x5f732431],ah        # 0x5fb4df90
  41bb5f:	and    eax,0x5f732432
  41bb64:	rex.XB push r12
  41bb66:	cmp    eax,0x20200a31
  41bb6b:	and    eax,0x5f732431
  41bb70:	and    eax,0x5f732432
  41bb75:	xor    DWORD PTR [rip+0x31257b24],edi        # 0x3167369f
  41bb7b:	and    al,0x73
  41bb7d:	pop    rdi
  41bb7e:	and    eax,0x7d732432
  41bb83:	or     ah,BYTE PTR [rax]
  41bb85:	and    BYTE PTR [rbp+0x78],ah
  41bb88:	jo     0x41bbf9
  41bb8a:	jb     0x41bc00
  41bb8c:	and    BYTE PTR [rip+0x5f732431],ah        # 0x5fb4dfc3
  41bb92:	and    eax,0x5f732432
  41bb97:	rex.XB push r12
  41bb99:	and    BYTE PTR [rip+0x5f732431],ah        # 0x5fb4dfd0
  41bb9f:	and    eax,0x5f732432
  41bba4:	xor    DWORD PTR [rdx],ecx
  41bba6:	imul   cx,WORD PTR [rdx],0x2000
  41bbab:	and    BYTE PTR [rax],ah
  41bbad:	and    BYTE PTR [rdx],ch
  41bbaf:	and    BYTE PTR [rcx],ch
  41bbb1:	or     ah,BYTE PTR [rax]
  41bbb3:	and    BYTE PTR [rax],ah
  41bbb5:	and    BYTE PTR [rax],ah
  41bbb7:	and    BYTE PTR [rax],ah
  41bbb9:	and    BYTE PTR [rax],ah
  41bbbb:	rex.WRXB push r8
  41bbbd:	push   rsp
  41bbbe:	pop    rdi
  41bbbf:	push   rax
  41bbc0:	push   rdx
  41bbc1:	rex.WRXB
  41bbc2:	rex.XB
  41bbc3:	rex.RB push r11
  41bbc5:	push   rbx
  41bbc6:	cmp    eax,0x736c6166
  41bbcb:	or     ah,BYTE PTR gs:[rax]
  41bbce:	and    BYTE PTR [rax],ah
  41bbd0:	and    BYTE PTR [rax],ah
  41bbd2:	and    BYTE PTR [rax],ah
  41bbd4:	and    BYTE PTR [rax],ah
  41bbd6:	cmp    edi,DWORD PTR [rbx]
  41bbd8:	or     ah,BYTE PTR [rax]
  41bbda:	and    BYTE PTR [rax],ah
  41bbdc:	and    BYTE PTR [rbp+0x73],ah
  41bbdf:	(bad)  
  41bbe0:	movsxd ecx,DWORD PTR [rdx]
  41bbe2:	add    BYTE PTR [rax],ah
  41bbe4:	and    BYTE PTR [rax],ah
  41bbe6:	and    BYTE PTR [rax],ah
  41bbe8:	and    BYTE PTR [rax],ah
  41bbea:	and    BYTE PTR [rax],ah
  41bbec:	and    BYTE PTR [rax],ah
  41bbee:	and    BYTE PTR [rip+0x5f732431],ah        # 0x5fb4e025
  41bbf4:	and    eax,0x5f732432
  41bbf9:	rex.XB push r12
  41bbfb:	cmp    eax,0x20200a30
  41bc00:	and    BYTE PTR [rax],ah
  41bc02:	and    BYTE PTR [rax],ah
  41bc04:	and    BYTE PTR [rax],ah
  41bc06:	and    BYTE PTR [rax],ah
  41bc08:	and    BYTE PTR [rax],ah
  41bc0a:	rex.WRXB push r8
  41bc0c:	push   rsp
  41bc0d:	pop    rdi
  41bc0e:	rex.RB
  41bc0f:	rex.WR
  41bc10:	rex.RB
  41bc11:	rex.WRB
  41bc12:	rex.RB
  41bc13:	rex.WRX push rsp
  41bc15:	cmp    eax,0x200a2727
  41bc1a:	and    BYTE PTR [rax],ah
  41bc1c:	and    BYTE PTR [rax],ah
  41bc1e:	and    BYTE PTR [rax],ah
  41bc20:	and    BYTE PTR [rax],ah
  41bc22:	and    BYTE PTR [rax],ah
  41bc24:	and    BYTE PTR [rip+0x5f732431],ah        # 0x5fb4e05b
  41bc2a:	and    eax,0x3d732432
  41bc2f:	(bad)  
  41bc30:	and    eax,0x27732433
  41bc35:	or     ah,BYTE PTR [rax]
  41bc37:	and    BYTE PTR [rax],ah
  41bc39:	and    BYTE PTR [rax],ah
  41bc3b:	and    BYTE PTR [rax],ah
  41bc3d:	and    BYTE PTR [rax],ah
  41bc3f:	and    BYTE PTR [rax],ah
  41bc41:	and    BYTE PTR [rbp+0x78],ah
  41bc44:	jo     0x41bcb5
  41bc46:	jb     0x41bcbc
  41bc48:	and    BYTE PTR [rip+0x5f732431],ah        # 0x5fb4e07f
  41bc4e:	and    eax,0xa732432
  41bc53:	and    BYTE PTR [rax],ah
  41bc55:	and    BYTE PTR [rax],ah
  41bc57:	and    BYTE PTR [rax],ah
  41bc59:	and    BYTE PTR [rax],ah
  41bc5b:	and    BYTE PTR [rax],ah
  41bc5d:	and    BYTE PTR [rax],ah
  41bc5f:	rex.WRXB push r8
  41bc61:	push   rsp
  41bc62:	pop    rdi
  41bc63:	rex.WRX
  41bc64:	rex.B
  41bc65:	rex.WRB
  41bc66:	rex.RB cmp eax,0x24322527
  41bc6c:	jae    0x41bc95
  41bc6e:	or     al,BYTE PTR [rax]
  41bc70:	and    BYTE PTR [rax],ah
  41bc72:	and    BYTE PTR [rax],ah
  41bc74:	and    BYTE PTR [rax],ah
  41bc76:	and    BYTE PTR [rax],ah
  41bc78:	and    BYTE PTR [rax],ah
  41bc7a:	and    BYTE PTR [rax],ah
  41bc7c:	imul   esp,DWORD PTR [rsi+0x20],0x6e2d205b
  41bc83:	and    BYTE PTR [rdx],ah
  41bc85:	and    al,0x7b
  41bc87:	and    eax,0x5f732431
  41bc8c:	and    eax,0x7d732432
  41bc91:	and    ah,BYTE PTR [rax]
  41bc93:	pop    rbp
  41bc94:	and    BYTE PTR [rsi],ah
  41bc96:	and    BYTE PTR es:[rbx+rdi*2],ah
  41bc9a:	and    eax,0x5f732431
  41bc9f:	and    eax,0x5f732432
  41bca4:	jae    0x41bd0b
  41bca6:	je     0x41bd25
  41bca8:	and    BYTE PTR [rbx],bh
  41bcaa:	and    BYTE PTR [rax+rbp*2+0x65],dh
  41bcae:	outs   dx,BYTE PTR ds:[rsi]
  41bcaf:	or     ah,BYTE PTR [rax]
  41bcb1:	and    BYTE PTR [rax],ah
  41bcb3:	and    BYTE PTR [rax],ah
  41bcb5:	and    BYTE PTR [rax],ah
  41bcb7:	and    BYTE PTR [rax],ah
  41bcb9:	and    BYTE PTR [rax],ah
  41bcbb:	and    BYTE PTR [rax],ah
  41bcbd:	and    BYTE PTR [rax],ah
  41bcbf:	and    BYTE PTR [rbp+0x63],ah
  41bcc2:	push   0x4527206f
  41bcc7:	jb     0x41bd3b
  41bcc9:	outs   dx,DWORD PTR ds:[rsi]
  41bcca:	jb     0x41bd06
  41bccc:	and    BYTE PTR [rax],ah
  41bcce:	fs jne 0x41bd41
  41bcd1:	ins    BYTE PTR es:[rdi],dx
  41bcd2:	imul   esp,DWORD PTR [rbx+0x61],0x25206574
  41bcd9:	xor    ah,BYTE PTR [rbx+rsi*2]
  41bcdc:	and    BYTE PTR [rdi+0x70],ch
  41bcdf:	je     0x41bd4a
  41bce1:	outs   dx,DWORD PTR ds:[rsi]
  41bce2:	outs   dx,BYTE PTR ds:[rsi]
  41bce3:	(bad)  
  41bce4:	or     ah,BYTE PTR [rax]
  41bce6:	and    BYTE PTR [rax],ah
  41bce8:	and    BYTE PTR [rax],ah
  41bcea:	and    BYTE PTR [rax],ah
  41bcec:	and    BYTE PTR [rax],ah
  41bcee:	and    BYTE PTR [rax],ah
  41bcf0:	and    BYTE PTR [rax],ah
  41bcf2:	and    BYTE PTR [rax],ah
  41bcf4:	and    BYTE PTR [rbp+0x63],ah
  41bcf7:	push   0x2422206f
  41bcfc:	and    eax,0x5f732431
  41bd01:	push   rbp
  41bd02:	push   rbx
  41bd03:	rex.B
  41bd04:	rex.RXB
  41bd05:	rex.RB pop r15
  41bd07:	push   rsp
  41bd08:	rex.RB pop r8
  41bd0a:	push   rsp
  41bd0b:	and    cl,BYTE PTR [rdx]
  41bd0d:	and    BYTE PTR [rax],ah
  41bd0f:	and    BYTE PTR [rax],ah
  41bd11:	and    BYTE PTR [rax],ah
  41bd13:	and    BYTE PTR [rax],ah
  41bd15:	and    BYTE PTR [rax],ah
  41bd17:	and    BYTE PTR [rax],ah
  41bd19:	and    BYTE PTR [rax],ah
  41bd1b:	and    BYTE PTR [rax],ah
  41bd1d:	gs js  0x41bd89
  41bd20:	je     0x41bd42
  41bd22:	xor    DWORD PTR [rdx],ecx
  41bd24:	and    BYTE PTR [rax],ah
  41bd26:	and    BYTE PTR [rax],ah
  41bd28:	and    BYTE PTR [rax],ah
  41bd2a:	and    BYTE PTR [rax],ah
  41bd2c:	and    BYTE PTR [rax],ah
  41bd2e:	and    BYTE PTR [rax],ah
  41bd30:	imul   sp,WORD PTR [rax],0x263e
  41bd35:	xor    cl,BYTE PTR [rdx]
  41bd37:	and    BYTE PTR [rax],ah
  41bd39:	and    BYTE PTR [rax],ah
  41bd3b:	and    BYTE PTR [rax],ah
  41bd3d:	and    BYTE PTR [rax],ah
  41bd3f:	and    BYTE PTR [rax],ah
  41bd41:	and    BYTE PTR [rax],ah
  41bd43:	and    eax,0x5f732431
  41bd48:	and    eax,0x5f732432
  41bd4d:	jae    0x41bdb4
  41bd4f:	je     0x41bd8e
  41bd51:	je     0x41bdc5
  41bd53:	jne    0x41bdba
  41bd55:	or     ah,BYTE PTR [rax]
  41bd57:	and    BYTE PTR [rax],ah
  41bd59:	and    BYTE PTR [rax],ah
  41bd5b:	and    BYTE PTR [rax],ah
  41bd5d:	and    BYTE PTR [rax],ah
  41bd5f:	and    BYTE PTR [rax],ah
  41bd61:	and    BYTE PTR [rip+0x5f732431],ah        # 0x5fb4e198
  41bd67:	and    eax,0x3d732432
  41bd6c:	(bad)  
  41bd6d:	and    eax,0x27732433
  41bd72:	or     ah,BYTE PTR [rax]
  41bd74:	and    BYTE PTR [rax],ah
  41bd76:	and    BYTE PTR [rax],ah
  41bd78:	and    BYTE PTR [rax],ah
  41bd7a:	and    BYTE PTR [rax],ah
  41bd7c:	and    BYTE PTR [rax],ah
  41bd7e:	and    BYTE PTR [rbp+0x78],ah
  41bd81:	jo     0x41bdf2
  41bd83:	jb     0x41bdf9
  41bd85:	and    BYTE PTR [rip+0x5f732431],ah        # 0x5fb4e1bc
  41bd8b:	and    eax,0xa732432
  41bd90:	and    BYTE PTR [rax],ah
  41bd92:	and    BYTE PTR [rax],ah
  41bd94:	and    BYTE PTR [rax],ah
  41bd96:	and    BYTE PTR [rax],ah
  41bd98:	and    BYTE PTR [rax],ah
  41bd9a:	and    BYTE PTR [rax],ah
  41bd9c:	rex.WRXB push r8
  41bd9e:	push   rsp
  41bd9f:	pop    rdi
  41bda0:	rex.WRX
  41bda1:	rex.B
  41bda2:	rex.WRB
  41bda3:	rex.RB cmp eax,0x24322527
  41bda9:	jae    0x41bdd2
  41bdab:	or     al,BYTE PTR [rax]
  41bdad:	or     al,BYTE PTR [rcx+0x52]
  41bdb0:	rex.RXB pop r15
  41bdb2:	rex.XB
  41bdb3:	rex.WRXB push r13
  41bdb5:	rex.WRX push rsp
  41bdb7:	cmp    eax,0x4f0a2324
  41bdbc:	push   rax
  41bdbd:	push   rsp
  41bdbe:	pop    rdi
  41bdbf:	push   r10
  41bdc1:	rex.RXB cmp eax,0x770a3124
  41bdc7:	push   0x20656c69
  41bdcc:	pop    rbx
  41bdcd:	and    BYTE PTR [rbx+riz*1],ah
  41bdd0:	and    BYTE PTR [rip+0x30207467],ch        # 0x3062323d
  41bdd6:	and    BYTE PTR [rbp+0xa],bl
  41bdd9:	outs   dx,DWORD PTR fs:[rsi]
  41bddb:	or     ah,BYTE PTR [rax]
  41bddd:	and    BYTE PTR [rax],ah
  41bddf:	and    BYTE PTR [rdi+0x50],cl
  41bde2:	push   rsp
  41bde3:	pop    rdi
  41bde4:	rex.RB
  41bde5:	rex.WR
  41bde6:	rex.RB
  41bde7:	rex.WRB
  41bde8:	rex.RB
  41bde9:	rex.WRX push rsp
  41bdeb:	cmp    eax,0x200a2727
  41bdf0:	and    BYTE PTR [rax],ah
  41bdf2:	and    BYTE PTR [rdi+0x50],cl
  41bdf5:	push   rsp
  41bdf6:	pop    rdi
  41bdf7:	push   r10
  41bdf9:	rex.RXB pop r15
  41bdfb:	push   rsi
  41bdfc:	rex.B
  41bdfd:	rex.WR cmp rax,0x200a2727
  41be03:	and    BYTE PTR [rax],ah
  41be05:	and    BYTE PTR [rdi+0x50],cl
  41be08:	push   rsp
  41be09:	pop    rdi
  41be0a:	push   r10
  41be0c:	rex.RXB cmp eax,0x7d317b24
  41be12:	or     al,BYTE PTR [rax]
  41be14:	and    BYTE PTR [rax],ah
  41be16:	and    BYTE PTR [rax],ah
  41be18:	and    BYTE PTR [rax],ah
  41be1a:	and    BYTE PTR [rax],ah
  41be1c:	movsxd esp,DWORD PTR [rcx+0x73]
  41be1f:	and    BYTE PTR gs:[rdx],ah
  41be22:	and    al,0x7b
  41be24:	rex.WRXB push r8
  41be26:	push   rsp
  41be27:	pop    rdi
  41be28:	push   r10
  41be2a:	rex.RXB pop r15
  41be2c:	rex.WRX
  41be2d:	rex.RB
  41be2e:	rex.RB
  41be2f:	rex.R
  41be30:	rex.RB
  41be31:	rex.R jge 0x41be56
  41be34:	and    BYTE PTR [rcx+0x6e],ch
  41be37:	or     ah,BYTE PTR [rax]
  41be39:	and    BYTE PTR [rax],ah
  41be3b:	and    BYTE PTR [rax],ah
  41be3d:	and    BYTE PTR [rax],ah
  41be3f:	and    BYTE PTR [rsi+0x4f],cl
  41be42:	and    BYTE PTR [rcx],ch
  41be44:	or     ah,BYTE PTR [rax]
  41be46:	and    BYTE PTR [rax],ah
  41be48:	and    BYTE PTR [rax],ah
  41be4a:	and    BYTE PTR [rax],ah
  41be4c:	and    BYTE PTR [rax],ah
  41be4e:	and    BYTE PTR [rax],ah
  41be50:	and    BYTE PTR [rcx+0x66],ch
  41be53:	and    BYTE PTR [rbx+0x20],bl
  41be56:	sub    eax,0x2422206e
  41be5b:	jnp    0x41beac
  41be5d:	push   rax
  41be5e:	push   rsp
  41be5f:	pop    rdi
  41be60:	push   r10
  41be62:	rex.RXB jge 0x41be87
  41be65:	and    BYTE PTR [rbp+0xa],bl
  41be68:	and    BYTE PTR [rax],ah
  41be6a:	and    BYTE PTR [rax],ah
  41be6c:	and    BYTE PTR [rax],ah
  41be6e:	and    BYTE PTR [rax],ah
  41be70:	and    BYTE PTR [rax],ah
  41be72:	and    BYTE PTR [rax],ah
  41be74:	je     0x41bede
  41be76:	outs   dx,BYTE PTR gs:[rsi]
  41be78:	or     ah,BYTE PTR [rax]
  41be7a:	and    BYTE PTR [rax],ah
  41be7c:	and    BYTE PTR [rax],ah
  41be7e:	and    BYTE PTR [rax],ah
  41be80:	and    BYTE PTR [rax],ah
  41be82:	and    BYTE PTR [rax],ah
  41be84:	and    BYTE PTR [rax],ah
  41be86:	and    BYTE PTR [rax],ah
  41be88:	and    BYTE PTR [rdi+0x50],cl
  41be8b:	push   rsp
  41be8c:	pop    rdi
  41be8d:	push   r10
  41be8f:	rex.RXB cmp eax,0x4f7b242d
  41be95:	push   rax
  41be96:	push   rsp
  41be97:	pop    rdi
  41be98:	push   r10
  41be9a:	rex.RXB jge 0x41bea7
  41be9d:	and    BYTE PTR [rax],ah
  41be9f:	and    BYTE PTR [rax],ah
  41bea1:	and    BYTE PTR [rax],ah
  41bea3:	and    BYTE PTR [rax],ah
  41bea5:	and    BYTE PTR [rax],ah
  41bea7:	and    BYTE PTR [rax],ah
  41bea9:	gs ins BYTE PTR es:[rdi],dx
  41beab:	jae    0x41bf12
  41bead:	or     ah,BYTE PTR [rax]
  41beaf:	and    BYTE PTR [rax],ah
  41beb1:	and    BYTE PTR [rax],ah
  41beb3:	and    BYTE PTR [rax],ah
  41beb5:	and    BYTE PTR [rax],ah
  41beb7:	and    BYTE PTR [rax],ah
  41beb9:	and    BYTE PTR [rax],ah
  41bebb:	and    BYTE PTR [rax],ah
  41bebd:	and    BYTE PTR [rbx+0x68],dh
  41bec0:	imul   esp,DWORD PTR [rsi+0x74],0x2020200a
  41bec7:	and    BYTE PTR [rax],ah
  41bec9:	and    BYTE PTR [rax],ah
  41becb:	and    BYTE PTR [rax],ah
  41becd:	and    BYTE PTR [rax],ah
  41becf:	and    BYTE PTR [rax],ah
  41bed1:	and    BYTE PTR [rax],ah
  41bed3:	and    BYTE PTR [rdi+0x50],cl
  41bed6:	push   rsp
  41bed7:	pop    rdi
  41bed8:	push   r10
  41beda:	rex.RXB cmp eax,0x200a3124
  41bee0:	and    BYTE PTR [rax],ah
  41bee2:	and    BYTE PTR [rax],ah
  41bee4:	and    BYTE PTR [rax],ah
  41bee6:	and    BYTE PTR [rax],ah
  41bee8:	and    BYTE PTR [rax],ah
  41beea:	and    BYTE PTR [rsi+0x69],ah
  41beed:	or     ah,BYTE PTR [rax]
  41beef:	and    BYTE PTR [rax],ah
  41bef1:	and    BYTE PTR [rax],ah
  41bef3:	and    BYTE PTR [rax],ah
  41bef5:	and    BYTE PTR [rax],ah
  41bef7:	and    BYTE PTR [rax],ah
  41bef9:	and    BYTE PTR [rbx],bh
  41befb:	cmp    ecx,DWORD PTR [rdx]
  41befd:	and    BYTE PTR [rax],ah
  41beff:	and    BYTE PTR [rax],ah
  41bf01:	and    BYTE PTR [rax],ah
  41bf03:	and    BYTE PTR [rax],ah
  41bf05:	pop    rcx
  41bf06:	rex.RB push r11
  41bf08:	and    BYTE PTR [rcx],ch
  41bf0a:	or     ah,BYTE PTR [rax]
  41bf0c:	and    BYTE PTR [rax],ah
  41bf0e:	and    BYTE PTR [rax],ah
  41bf10:	and    BYTE PTR [rax],ah
  41bf12:	and    BYTE PTR [rax],ah
  41bf14:	and    BYTE PTR [rax],ah
  41bf16:	and    BYTE PTR [rcx+0x66],ch
  41bf19:	and    BYTE PTR [rbx+0x20],bl
  41bf1c:	sub    eax,0x2422206e
  41bf21:	jnp    0x41bf72
  41bf23:	push   rax
  41bf24:	push   rsp
  41bf25:	pop    rdi
  41bf26:	push   r10
  41bf28:	rex.RXB jge 0x41bf4d
  41bf2b:	and    BYTE PTR [rbp+0xa],bl
  41bf2e:	and    BYTE PTR [rax],ah
  41bf30:	and    BYTE PTR [rax],ah
  41bf32:	and    BYTE PTR [rax],ah
  41bf34:	and    BYTE PTR [rax],ah
  41bf36:	and    BYTE PTR [rax],ah
  41bf38:	and    BYTE PTR [rax],ah
  41bf3a:	je     0x41bfa4
  41bf3c:	outs   dx,BYTE PTR gs:[rsi]
  41bf3e:	or     ah,BYTE PTR [rax]
  41bf40:	and    BYTE PTR [rax],ah
  41bf42:	and    BYTE PTR [rax],ah
  41bf44:	and    BYTE PTR [rax],ah
  41bf46:	and    BYTE PTR [rax],ah
  41bf48:	and    BYTE PTR [rax],ah
  41bf4a:	and    BYTE PTR [rax],ah
  41bf4c:	and    BYTE PTR [rax],ah
  41bf4e:	and    BYTE PTR [rdi+0x50],cl
  41bf51:	push   rsp
  41bf52:	pop    rdi
  41bf53:	push   r10
  41bf55:	rex.RXB pop r15
  41bf57:	push   rsi
  41bf58:	rex.B
  41bf59:	rex.WR cmp rax,0x504f7b24
  41bf5f:	push   rsp
  41bf60:	pop    rdi
  41bf61:	push   r10
  41bf63:	rex.RXB jge 0x41bf70
  41bf66:	and    BYTE PTR [rax],ah
  41bf68:	and    BYTE PTR [rax],ah
  41bf6a:	and    BYTE PTR [rax],ah
  41bf6c:	and    BYTE PTR [rax],ah
  41bf6e:	and    BYTE PTR [rax],ah
  41bf70:	and    BYTE PTR [rax],ah
  41bf72:	gs ins BYTE PTR es:[rdi],dx
  41bf74:	jae    0x41bfdb
  41bf76:	or     ah,BYTE PTR [rax]
  41bf78:	and    BYTE PTR [rax],ah
  41bf7a:	and    BYTE PTR [rax],ah
  41bf7c:	and    BYTE PTR [rax],ah
  41bf7e:	and    BYTE PTR [rax],ah
  41bf80:	and    BYTE PTR [rax],ah
  41bf82:	and    BYTE PTR [rax],ah
  41bf84:	and    BYTE PTR [rax],ah
  41bf86:	and    BYTE PTR [rcx+0x66],ch
  41bf89:	and    BYTE PTR [rbx+0x20],bl
  41bf8c:	and    al,0x23
  41bf8e:	and    BYTE PTR [rip+0x30207165],ch        # 0x306230f9
  41bf94:	and    BYTE PTR [rbp+0xa],bl
  41bf97:	and    BYTE PTR [rax],ah
  41bf99:	and    BYTE PTR [rax],ah
  41bf9b:	and    BYTE PTR [rax],ah
  41bf9d:	and    BYTE PTR [rax],ah
  41bf9f:	and    BYTE PTR [rax],ah
  41bfa1:	and    BYTE PTR [rax],ah
  41bfa3:	and    BYTE PTR [rax],ah
  41bfa5:	and    BYTE PTR [rax],ah
  41bfa7:	je     0x41c011
  41bfa9:	outs   dx,BYTE PTR gs:[rsi]
  41bfab:	or     ah,BYTE PTR [rax]
  41bfad:	and    BYTE PTR [rax],ah
  41bfaf:	and    BYTE PTR [rax],ah
  41bfb1:	and    BYTE PTR [rax],ah
  41bfb3:	and    BYTE PTR [rax],ah
  41bfb5:	and    BYTE PTR [rax],ah
  41bfb7:	and    BYTE PTR [rax],ah
  41bfb9:	and    BYTE PTR [rax],ah
  41bfbb:	and    BYTE PTR [rax],ah
  41bfbd:	and    BYTE PTR [rax],ah
  41bfbf:	and    BYTE PTR [rbp+0x63],ah
  41bfc2:	push   0x6f4e206f
  41bfc7:	and    BYTE PTR [rcx+0x72],ah
  41bfca:	addr32 jne 0x41c03a
  41bfcd:	outs   dx,BYTE PTR gs:[rsi]
  41bfcf:	je     0x41bff1
  41bfd1:	jo     0x41c045
  41bfd3:	outs   dx,DWORD PTR ds:[rsi]
  41bfd4:	jbe    0x41c03f
  41bfd6:	fs gs and BYTE PTR fs:[rsi+0x6f],ah
  41bfdc:	jb     0x41bffe
  41bfde:	and    al,0x7b
  41bfe0:	rex.WRXB push r8
  41bfe2:	push   rsp
  41bfe3:	pop    rdi
  41bfe4:	rex.WRX
  41bfe5:	rex.B
  41bfe6:	rex.WRB
  41bfe7:	rex.RB jge 0x41c00a
  41bfea:	outs   dx,DWORD PTR ds:[rsi]
  41bfeb:	jo     0x41c061
  41bfed:	imul   ebp,DWORD PTR [rdi+0x6e],0x2020200a
  41bff4:	and    BYTE PTR [rax],ah
  41bff6:	and    BYTE PTR [rax],ah
  41bff8:	and    BYTE PTR [rax],ah
  41bffa:	and    BYTE PTR [rax],ah
  41bffc:	and    BYTE PTR [rax],ah
  41bffe:	and    BYTE PTR [rax],ah
  41c000:	and    BYTE PTR [rax],ah
  41c002:	and    BYTE PTR [rax],ah
  41c004:	and    BYTE PTR [rbp+0x63],ah
  41c007:	push   0x2422206f
  41c00c:	and    eax,0x53555f73
  41c011:	rex.B
  41c012:	rex.RXB
  41c013:	rex.RB pop r15
  41c015:	push   rsp
  41c016:	rex.RB pop r8
  41c018:	push   rsp
  41c019:	and    cl,BYTE PTR [rdx]
  41c01b:	and    BYTE PTR [rax],ah
  41c01d:	and    BYTE PTR [rax],ah
  41c01f:	and    BYTE PTR [rax],ah
  41c021:	and    BYTE PTR [rax],ah
  41c023:	and    BYTE PTR [rax],ah
  41c025:	and    BYTE PTR [rax],ah
  41c027:	and    BYTE PTR [rax],ah
  41c029:	and    BYTE PTR [rax],ah
  41c02b:	and    BYTE PTR [rax],ah
  41c02d:	and    BYTE PTR [rax],ah
  41c02f:	gs js  0x41c09b
  41c032:	je     0x41c054
  41c034:	xor    DWORD PTR [rdx],ecx
  41c036:	and    BYTE PTR [rax],ah
  41c038:	and    BYTE PTR [rax],ah
  41c03a:	and    BYTE PTR [rax],ah
  41c03c:	and    BYTE PTR [rax],ah
  41c03e:	and    BYTE PTR [rax],ah
  41c040:	and    BYTE PTR [rax],ah
  41c042:	and    BYTE PTR [rax],ah
  41c044:	and    BYTE PTR [rax],ah
  41c046:	imul   sp,WORD PTR [rax],0x263e
  41c04b:	xor    cl,BYTE PTR [rdx]
  41c04d:	and    BYTE PTR [rax],ah
  41c04f:	and    BYTE PTR [rax],ah
  41c051:	and    BYTE PTR [rax],ah
  41c053:	and    BYTE PTR [rax],ah
  41c055:	and    BYTE PTR [rax],ah
  41c057:	and    BYTE PTR [rax],ah
  41c059:	and    BYTE PTR [rax],ah
  41c05b:	and    BYTE PTR [rax],ah
  41c05d:	jae    0x41c0c7
  41c05f:	imul   esp,DWORD PTR [rsi+0x74],0x2020200a
  41c066:	and    BYTE PTR [rax],ah
  41c068:	and    BYTE PTR [rax],ah
  41c06a:	and    BYTE PTR [rax],ah
  41c06c:	and    BYTE PTR [rax],ah
  41c06e:	and    BYTE PTR [rax],ah
  41c070:	and    BYTE PTR [rax],ah
  41c072:	and    BYTE PTR [rdi+0x50],cl
  41c075:	push   rsp
  41c076:	pop    rdi
  41c077:	push   r10
  41c079:	rex.RXB pop r15
  41c07b:	push   rsi
  41c07c:	rex.B
  41c07d:	rex.WR cmp rax,0x200a3124
  41c083:	and    BYTE PTR [rax],ah
  41c085:	and    BYTE PTR [rax],ah
  41c087:	and    BYTE PTR [rax],ah
  41c089:	and    BYTE PTR [rax],ah
  41c08b:	and    BYTE PTR [rax],ah
  41c08d:	and    BYTE PTR [rsi+0x69],ah
  41c090:	or     ah,BYTE PTR [rax]
  41c092:	and    BYTE PTR [rax],ah
  41c094:	and    BYTE PTR [rax],ah
  41c096:	and    BYTE PTR [rax],ah
  41c098:	and    BYTE PTR [rax],ah
  41c09a:	and    BYTE PTR [rax],ah
  41c09c:	and    BYTE PTR [rbx+0x68],dh
  41c09f:	imul   esp,DWORD PTR [rsi+0x74],0x2020200a
  41c0a6:	and    BYTE PTR [rax],ah
  41c0a8:	and    BYTE PTR [rax],ah
  41c0aa:	and    BYTE PTR [rax],ah
  41c0ac:	and    BYTE PTR [rax],ah
  41c0ae:	and    BYTE PTR [rdi+0x50],cl
  41c0b1:	push   rsp
  41c0b2:	pop    rdi
  41c0b3:	push   r10
  41c0b5:	rex.RXB cmp eax,0x200a3124
  41c0bb:	and    BYTE PTR [rax],ah
  41c0bd:	and    BYTE PTR [rax],ah
  41c0bf:	and    BYTE PTR [rax],ah
  41c0c1:	and    BYTE PTR [rax],ah
  41c0c3:	and    BYTE PTR [rax],ah
  41c0c5:	and    BYTE PTR [rbx],bh
  41c0c7:	cmp    ecx,DWORD PTR [rdx]
  41c0c9:	and    BYTE PTR [rax],ah
  41c0cb:	and    BYTE PTR [rax],ah
  41c0cd:	and    BYTE PTR [rax],ah
  41c0cf:	and    BYTE PTR [rax],ah
  41c0d1:	rex.WRXB
  41c0d2:	rex.WXB and BYTE PTR [r9],bpl
  41c0d5:	or     ah,BYTE PTR [rax]
  41c0d7:	and    BYTE PTR [rax],ah
  41c0d9:	and    BYTE PTR [rax],ah
  41c0db:	and    BYTE PTR [rax],ah
  41c0dd:	and    BYTE PTR [rax],ah
  41c0df:	and    BYTE PTR [rax],ah
  41c0e1:	and    BYTE PTR [rcx+0x66],ch
  41c0e4:	and    BYTE PTR [rbx+0x20],bl
  41c0e7:	sub    eax,0x2422206e
  41c0ec:	jnp    0x41c13d
  41c0ee:	push   rax
  41c0ef:	push   rsp
  41c0f0:	pop    rdi
  41c0f1:	push   r10
  41c0f3:	rex.RXB jge 0x41c118
  41c0f6:	and    BYTE PTR [rbp+0xa],bl
  41c0f9:	and    BYTE PTR [rax],ah
  41c0fb:	and    BYTE PTR [rax],ah
  41c0fd:	and    BYTE PTR [rax],ah
  41c0ff:	and    BYTE PTR [rax],ah
  41c101:	and    BYTE PTR [rax],ah
  41c103:	and    BYTE PTR [rax],ah
  41c105:	je     0x41c16f
  41c107:	outs   dx,BYTE PTR gs:[rsi]
  41c109:	or     ah,BYTE PTR [rax]
  41c10b:	and    BYTE PTR [rax],ah
  41c10d:	and    BYTE PTR [rax],ah
  41c10f:	and    BYTE PTR [rax],ah
  41c111:	and    BYTE PTR [rax],ah
  41c113:	and    BYTE PTR [rax],ah
  41c115:	and    BYTE PTR [rax],ah
  41c117:	and    BYTE PTR [rax],ah
  41c119:	and    BYTE PTR [rdi+0x50],cl
  41c11c:	push   rsp
  41c11d:	pop    rdi
  41c11e:	push   r10
  41c120:	rex.RXB pop r15
  41c122:	push   rsi
  41c123:	rex.B
  41c124:	rex.WR cmp rax,0x504f7b24
  41c12a:	push   rsp
  41c12b:	pop    rdi
  41c12c:	push   r10
  41c12e:	rex.RXB jge 0x41c13b
  41c131:	and    BYTE PTR [rax],ah
  41c133:	and    BYTE PTR [rax],ah
  41c135:	and    BYTE PTR [rax],ah
  41c137:	and    BYTE PTR [rax],ah
  41c139:	and    BYTE PTR [rax],ah
  41c13b:	and    BYTE PTR [rax],ah
  41c13d:	and    BYTE PTR [rax],ah
  41c13f:	and    BYTE PTR [rax],ah
  41c141:	jae    0x41c1ab
  41c143:	imul   esp,DWORD PTR [rsi+0x74],0x2020200a
  41c14a:	and    BYTE PTR [rax],ah
  41c14c:	and    BYTE PTR [rax],ah
  41c14e:	and    BYTE PTR [rax],ah
  41c150:	and    BYTE PTR [rax],ah
  41c152:	and    BYTE PTR [rax],ah
  41c154:	and    BYTE PTR [rax],ah
  41c156:	and    BYTE PTR [rdi+0x50],cl
  41c159:	push   rsp
  41c15a:	pop    rdi
  41c15b:	push   r10
  41c15d:	rex.RXB cmp eax,0x200a3124
  41c163:	and    BYTE PTR [rax],ah
  41c165:	and    BYTE PTR [rax],ah
  41c167:	and    BYTE PTR [rax],ah
  41c169:	and    BYTE PTR [rax],ah
  41c16b:	and    BYTE PTR [rax],ah
  41c16d:	and    BYTE PTR [rbp+0x6c],ah
  41c170:	jae    0x41c1d7
  41c172:	or     ah,BYTE PTR [rax]
  41c174:	and    BYTE PTR [rax],ah
  41c176:	and    BYTE PTR [rax],ah
  41c178:	and    BYTE PTR [rax],ah
  41c17a:	and    BYTE PTR [rax],ah
  41c17c:	and    BYTE PTR [rax],ah
  41c17e:	and    BYTE PTR [rax],ah
  41c180:	and    BYTE PTR [rax],ah
  41c182:	and    BYTE PTR [rbx+0x68],dh
  41c185:	imul   esp,DWORD PTR [rsi+0x74],0x2020200a
  41c18c:	and    BYTE PTR [rax],ah
  41c18e:	and    BYTE PTR [rax],ah
  41c190:	and    BYTE PTR [rax],ah
  41c192:	and    BYTE PTR [rax],ah
  41c194:	and    BYTE PTR [rax],ah
  41c196:	and    BYTE PTR [rax],ah
  41c198:	and    BYTE PTR [rcx+0x66],ch
  41c19b:	and    BYTE PTR [rbx+0x20],bl
  41c19e:	and    al,0x23
  41c1a0:	and    BYTE PTR [rip+0x30207467],ch        # 0x3062360d
  41c1a6:	and    BYTE PTR [rbp+0xa],bl
  41c1a9:	and    BYTE PTR [rax],ah
  41c1ab:	and    BYTE PTR [rax],ah
  41c1ad:	and    BYTE PTR [rax],ah
  41c1af:	and    BYTE PTR [rax],ah
  41c1b1:	and    BYTE PTR [rax],ah
  41c1b3:	and    BYTE PTR [rax],ah
  41c1b5:	and    BYTE PTR [rax],ah
  41c1b7:	and    BYTE PTR [rax],ah
  41c1b9:	je     0x41c223
  41c1bb:	outs   dx,BYTE PTR gs:[rsi]
  41c1bd:	or     ah,BYTE PTR [rax]
  41c1bf:	and    BYTE PTR [rax],ah
  41c1c1:	and    BYTE PTR [rax],ah
  41c1c3:	and    BYTE PTR [rax],ah
  41c1c5:	and    BYTE PTR [rax],ah
  41c1c7:	and    BYTE PTR [rax],ah
  41c1c9:	and    BYTE PTR [rax],ah
  41c1cb:	and    BYTE PTR [rax],ah
  41c1cd:	and    BYTE PTR [rax],ah
  41c1cf:	and    BYTE PTR [rax],ah
  41c1d1:	and    BYTE PTR [rbx+0x61],ah
  41c1d4:	jae    0x41c23b
  41c1d6:	and    BYTE PTR [rdx],ah
  41c1d8:	and    al,0x31
  41c1da:	and    ah,BYTE PTR [rax]
  41c1dc:	imul   ebp,DWORD PTR [rsi+0x20],0x29202a2d
  41c1e3:	and    BYTE PTR [rbx],bh
  41c1e5:	cmp    esp,DWORD PTR [rax]
  41c1e7:	sub    ah,BYTE PTR [rax]
  41c1e9:	sub    DWORD PTR [rdx],ecx
  41c1eb:	and    BYTE PTR [rax],ah
  41c1ed:	and    BYTE PTR [rax],ah
  41c1ef:	and    BYTE PTR [rax],ah
  41c1f1:	and    BYTE PTR [rax],ah
  41c1f3:	and    BYTE PTR [rax],ah
  41c1f5:	and    BYTE PTR [rax],ah
  41c1f7:	and    BYTE PTR [rax],ah
  41c1f9:	and    BYTE PTR [rax],ah
  41c1fb:	and    BYTE PTR [rax],ah
  41c1fd:	and    BYTE PTR [rax],ah
  41c1ff:	and    BYTE PTR [rax],ah
  41c201:	and    BYTE PTR [rax],ah
  41c203:	rex.WRXB push r8
  41c205:	push   rsp
  41c206:	pop    rdi
  41c207:	push   r10
  41c209:	rex.RXB pop r15
  41c20b:	push   rsi
  41c20c:	rex.B
  41c20d:	rex.WR cmp rax,0x200a3124
  41c213:	and    BYTE PTR [rax],ah
  41c215:	and    BYTE PTR [rax],ah
  41c217:	and    BYTE PTR [rax],ah
  41c219:	and    BYTE PTR [rax],ah
  41c21b:	and    BYTE PTR [rax],ah
  41c21d:	and    BYTE PTR [rax],ah
  41c21f:	and    BYTE PTR [rax],ah
  41c221:	and    BYTE PTR [rax],ah
  41c223:	and    BYTE PTR [rax],ah
  41c225:	and    BYTE PTR [rax],ah
  41c227:	and    BYTE PTR [rax],ah
  41c229:	and    BYTE PTR [rbx+0x68],dh
  41c22c:	imul   esp,DWORD PTR [rsi+0x74],0x203b3b20
  41c233:	gs jae 0x41c297
  41c236:	movsxd ecx,DWORD PTR [rdx]
  41c238:	and    BYTE PTR [rax],ah
  41c23a:	and    BYTE PTR [rax],ah
  41c23c:	and    BYTE PTR [rax],ah
  41c23e:	and    BYTE PTR [rax],ah
  41c240:	and    BYTE PTR [rax],ah
  41c242:	and    BYTE PTR [rax],ah
  41c244:	and    BYTE PTR [rax],ah
  41c246:	and    BYTE PTR [rax],ah
  41c248:	and    BYTE PTR [rax],ah
  41c24a:	and    BYTE PTR [rax],ah
  41c24c:	rex.WRXB push r8
  41c24e:	push   rsp
  41c24f:	pop    rdi
  41c250:	push   r10
  41c252:	rex.RXB cmp eax,0x200a3124
  41c258:	and    BYTE PTR [rax],ah
  41c25a:	and    BYTE PTR [rax],ah
  41c25c:	and    BYTE PTR [rax],ah
  41c25e:	and    BYTE PTR [rax],ah
  41c260:	and    BYTE PTR [rax],ah
  41c262:	and    BYTE PTR [rax],ah
  41c264:	and    BYTE PTR [rax],ah
  41c266:	and    BYTE PTR [rsi+0x69],ah
  41c269:	or     ah,BYTE PTR [rax]
  41c26b:	and    BYTE PTR [rax],ah
  41c26d:	and    BYTE PTR [rax],ah
  41c26f:	and    BYTE PTR [rax],ah
  41c271:	and    BYTE PTR [rax],ah
  41c273:	and    BYTE PTR [rax],ah
  41c275:	and    BYTE PTR [rsi+0x69],ah
  41c278:	or     ah,BYTE PTR [rax]
  41c27a:	and    BYTE PTR [rax],ah
  41c27c:	and    BYTE PTR [rax],ah
  41c27e:	and    BYTE PTR [rax],ah
  41c280:	and    BYTE PTR [rax],ah
  41c282:	and    BYTE PTR [rax],ah
  41c284:	and    BYTE PTR [rbx],bh
  41c286:	cmp    ecx,DWORD PTR [rdx]
  41c288:	and    BYTE PTR [rax],ah
  41c28a:	and    BYTE PTR [rax],ah
  41c28c:	and    BYTE PTR [rax],ah
  41c28e:	and    BYTE PTR [rax],ah
  41c290:	gs jae 0x41c2f4
  41c293:	movsxd ecx,DWORD PTR [rdx]
  41c295:	add    BYTE PTR [rax],ah
  41c297:	and    BYTE PTR [rax],ah
  41c299:	and    BYTE PTR [rax],ah
  41c29b:	and    BYTE PTR [rax],ah
  41c29d:	and    BYTE PTR [rax],ah
  41c29f:	and    BYTE PTR [rax],ah
  41c2a1:	and    BYTE PTR [rbp+0x63],ah
  41c2a4:	push   0x2422206f
  41c2a9:	and    eax,0x4f4c5f73
  41c2ae:	rex.WRX
  41c2af:	rex.RXB push r13
  41c2b1:	push   rbx
  41c2b2:	rex.B
  41c2b3:	rex.RXB
  41c2b4:	rex.RB pop r15
  41c2b6:	push   rsp
  41c2b7:	rex.RB pop r8
  41c2b9:	push   rsp
  41c2ba:	and    ah,BYTE PTR [rax]
  41c2bc:	jl     0x41c2de
  41c2be:	and    al,0x7b
  41c2c0:	push   rax
  41c2c1:	rex.B
  41c2c2:	rex.RXB
  41c2c3:	rex.RB push r10
  41c2c5:	sub    eax,0x65726f6d
  41c2ca:	jge    0x41c2d6
  41c2cc:	and    BYTE PTR [rax],ah
  41c2ce:	and    BYTE PTR [rax],ah
  41c2d0:	and    BYTE PTR [rax],ah
  41c2d2:	and    BYTE PTR [rax],ah
  41c2d4:	and    BYTE PTR [rax],ah
  41c2d6:	and    BYTE PTR [rax],ah
  41c2d8:	gs js  0x41c344
  41c2db:	je     0x41c2fd
  41c2dd:	xor    BYTE PTR [rdx],cl
  41c2df:	add    BYTE PTR [rip+0x464f2073],ah        # 0x4690e358
  41c2e5:	and    BYTE PTR [rip+0xa230a73],ah        # 0xa64cd5e
  41c2eb:	and    esp,DWORD PTR [rax]
  41c2ed:	and    BYTE PTR [rsi+0x72],al
  41c2f0:	outs   dx,DWORD PTR ds:[rsi]
  41c2f1:	ins    DWORD PTR es:[rdi],dx
  41c2f2:	and    BYTE PTR [rax+0x65],ch
  41c2f5:	jb     0x41c35c
  41c2f7:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  41c2fb:	je     0x41c365
  41c2fd:	and    BYTE PTR gs:[rsi+0x65],ch
  41c301:	js     0x41c377
  41c303:	and    BYTE PTR [rax+0x2d],ah
  41c306:	sub    eax,0x206f6420
  41c30b:	outs   dx,BYTE PTR ds:[rsi]
  41c30c:	outs   dx,DWORD PTR ds:[rsi]
  41c30d:	je     0x41c32f
  41c30f:	ins    DWORD PTR es:[rdi],dx
  41c310:	outs   dx,DWORD PTR ds:[rsi]
  41c311:	imul   esp,DWORD PTR fs:[rsi+0x79],0x69687420
  41c319:	jae    0x41c33b
  41c31b:	ins    DWORD PTR es:[rdi],dx
  41c31c:	(bad)  
  41c31d:	jb     0x41c38a
  41c31f:	gs jb  0x41c342
  41c322:	sub    eax,0xa2c272d
  41c327:	and    esp,DWORD PTR [rax]
  41c329:	and    BYTE PTR [rax+rbp*2+0x65],dh
  41c32d:	and    BYTE PTR [rbp+riz*2+0x78],dh
  41c331:	je     0x41c353
  41c333:	push   0x62207361
  41c338:	gs outs dx,BYTE PTR gs:[rsi]
  41c33b:	and    BYTE PTR [rdi+0x65],ah
  41c33e:	outs   dx,BYTE PTR ds:[rsi]
  41c33f:	gs jb  0x41c3a3
  41c342:	je     0x41c3a9
  41c344:	and    BYTE PTR fs:[rip+0x20000a73],ah        # 0x2041cdbe
  41c34b:	and    BYTE PTR [rax],ah
  41c34d:	and    BYTE PTR [rax],ah
  41c34f:	and    BYTE PTR [rax],ah
  41c351:	and    BYTE PTR [rax],ah
  41c353:	and    BYTE PTR [rax],ah
  41c355:	and    BYTE PTR [rbp+0x76],ah
  41c358:	(bad)  
  41c359:	ins    BYTE PTR es:[rdi],dx
  41c35a:	and    BYTE PTR [rip+0x5f732431],ah        # 0x5fb4e791
  41c360:	and    eax,0x24732432
  41c365:	jnp    0x41c3b6
  41c367:	push   rax
  41c368:	push   rsp
  41c369:	pop    rdi
  41c36a:	rex.RB
  41c36b:	rex.WR
  41c36c:	rex.RB
  41c36d:	rex.WRB
  41c36e:	rex.RB
  41c36f:	rex.WRX push rsp
  41c371:	jge    0x41c3b0
  41c373:	je     0x41c3e7
  41c375:	jne    0x41c3dc
  41c377:	or     ah,BYTE PTR [rax]
  41c379:	and    BYTE PTR [rax],ah
  41c37b:	and    BYTE PTR [rax],ah
  41c37d:	and    BYTE PTR [rax],ah
  41c37f:	and    BYTE PTR [rax],ah
  41c381:	and    BYTE PTR [rax],ah
  41c383:	and    BYTE PTR [rbp+0x78],ah
  41c386:	jo     0x41c3f7
  41c388:	jb     0x41c3fe
  41c38a:	and    BYTE PTR [rip+0x5f732431],ah        # 0x5fb4e7c1
  41c390:	and    eax,0x24732432
  41c395:	jnp    0x41c3e6
  41c397:	push   rax
  41c398:	push   rsp
  41c399:	pop    rdi
  41c39a:	rex.RB
  41c39b:	rex.WR
  41c39c:	rex.RB
  41c39d:	rex.WRB
  41c39e:	rex.RB
  41c39f:	rex.WRX push rsp
  41c3a1:	jge    0x41c3ad
  41c3a3:	add    BYTE PTR [rax],ah
  41c3a5:	and    BYTE PTR [rax],ah
  41c3a7:	and    BYTE PTR [rax],ah
  41c3a9:	and    BYTE PTR [rax],ah
  41c3ab:	and    BYTE PTR [rax],ah
  41c3ad:	and    BYTE PTR [rax],ah
  41c3af:	and    BYTE PTR [rcx+0x66],ch
  41c3b2:	and    BYTE PTR [rbx+0x20],bl
  41c3b5:	sub    eax,0x2422206e
  41c3ba:	jnp    0x41c3e1
  41c3bc:	xor    DWORD PTR [rbx+rsi*2],esp
  41c3bf:	pop    rdi
  41c3c0:	and    eax,0x7d732432
  41c3c5:	and    ah,BYTE PTR [rax]
  41c3c7:	pop    rbp
  41c3c8:	and    BYTE PTR [rsi],ah
  41c3ca:	and    BYTE PTR es:[rbx+rdi*2],ah
  41c3ce:	and    eax,0x5f732431
  41c3d3:	and    eax,0x5f732432
  41c3d8:	jae    0x41c43f
  41c3da:	je     0x41c459
  41c3dc:	and    BYTE PTR [rbx],bh
  41c3de:	and    BYTE PTR [rax+rbp*2+0x65],dh
  41c3e2:	outs   dx,BYTE PTR ds:[rsi]
  41c3e3:	or     ah,BYTE PTR [rax]
  41c3e5:	and    BYTE PTR [rax],ah
  41c3e7:	and    BYTE PTR [rax],ah
  41c3e9:	and    BYTE PTR [rax],ah
  41c3eb:	and    BYTE PTR [rax],ah
  41c3ed:	and    BYTE PTR [rax],ah
  41c3ef:	and    BYTE PTR [rax],ah
  41c3f1:	and    BYTE PTR [rax],ah
  41c3f3:	and    BYTE PTR [rbp+0x63],ah
  41c3f6:	push   0x4527206f
  41c3fb:	jb     0x41c46f
  41c3fd:	outs   dx,DWORD PTR ds:[rsi]
  41c3fe:	jb     0x41c43a
  41c400:	and    BYTE PTR [rax],ah
  41c402:	fs jne 0x41c475
  41c405:	ins    BYTE PTR es:[rdi],dx
  41c406:	imul   esp,DWORD PTR [rbx+0x61],0x25206574
  41c40d:	xor    ah,BYTE PTR [rbx+rsi*2]
  41c410:	and    BYTE PTR [rdi+0x70],ch
  41c413:	je     0x41c47e
  41c415:	outs   dx,DWORD PTR ds:[rsi]
  41c416:	outs   dx,BYTE PTR ds:[rsi]
  41c417:	(bad)  
  41c418:	or     ah,BYTE PTR [rax]
  41c41a:	and    BYTE PTR [rax],ah
  41c41c:	and    BYTE PTR [rax],ah
  41c41e:	and    BYTE PTR [rax],ah
  41c420:	and    BYTE PTR [rax],ah
  41c422:	and    BYTE PTR [rax],ah
  41c424:	and    BYTE PTR [rax],ah
  41c426:	and    BYTE PTR [rax],ah
  41c428:	and    BYTE PTR [rbp+0x63],ah
  41c42b:	push   0x2422206f
  41c430:	and    eax,0x5f732431
  41c435:	push   rbp
  41c436:	push   rbx
  41c437:	rex.B
  41c438:	rex.RXB
  41c439:	rex.RB pop r15
  41c43b:	push   rsp
  41c43c:	rex.RB pop r8
  41c43e:	push   rsp
  41c43f:	and    cl,BYTE PTR [rdx]
  41c441:	and    BYTE PTR [rax],ah
  41c443:	and    BYTE PTR [rax],ah
  41c445:	and    BYTE PTR [rax],ah
  41c447:	and    BYTE PTR [rax],ah
  41c449:	and    BYTE PTR [rax],ah
  41c44b:	and    BYTE PTR [rax],ah
  41c44d:	and    BYTE PTR [rax],ah
  41c44f:	and    BYTE PTR [rax],ah
  41c451:	gs js  0x41c4bd
  41c454:	je     0x41c476
  41c456:	xor    DWORD PTR [rdx],ecx
  41c458:	and    BYTE PTR [rax],ah
  41c45a:	and    BYTE PTR [rax],ah
  41c45c:	and    BYTE PTR [rax],ah
  41c45e:	and    BYTE PTR [rax],ah
  41c460:	and    BYTE PTR [rax],ah
  41c462:	and    BYTE PTR [rax],ah
  41c464:	imul   sp,WORD PTR [rax],0x263e
  41c469:	xor    cl,BYTE PTR [rdx]
  41c46b:	and    BYTE PTR [rax],ah
  41c46d:	and    BYTE PTR [rax],ah
  41c46f:	and    BYTE PTR [rax],ah
  41c471:	and    BYTE PTR [rax],ah
  41c473:	and    BYTE PTR [rax],ah
  41c475:	and    BYTE PTR [rax],ah
  41c477:	and    eax,0x5f732431
  41c47c:	and    eax,0x5f732432
  41c481:	jae    0x41c4e8
  41c483:	je     0x41c4c2
  41c485:	je     0x41c4f9
  41c487:	jne    0x41c4ee
  41c489:	or     ah,BYTE PTR [rax]
  41c48b:	and    BYTE PTR [rax],ah
  41c48d:	and    BYTE PTR [rax],ah
  41c48f:	and    BYTE PTR [rax],ah
  41c491:	and    BYTE PTR [rax],ah
  41c493:	and    BYTE PTR [rax],ah
  41c495:	and    BYTE PTR [rdi+0x50],cl
  41c498:	push   rsp
  41c499:	pop    rdi
  41c49a:	rex.WRX
  41c49b:	rex.B
  41c49c:	rex.WRB
  41c49d:	rex.RB cmp eax,0x24322527
  41c4a3:	jae    0x41c4cc
  41c4a5:	or     al,BYTE PTR [rax]
  41c4a7:	or     ah,BYTE PTR [rip+0x5f732431]        # 0x5fb4e8de
  41c4ad:	and    eax,0x3d732432
  41c4b2:	and    al,0x7b
  41c4b4:	and    eax,0x5f732431
  41c4b9:	and    eax,0x2d732432
  41c4be:	(bad)  
  41c4bf:	and    eax,0x27732433
  41c4c4:	jge    0x41c4d0
  41c4c6:	and    eax,0x5f732431
  41c4cb:	and    eax,0x5f732432
  41c4d0:	jae    0x41c537
  41c4d2:	je     0x41c511
  41c4d4:	data16 (bad) 
  41c4d6:	ins    BYTE PTR es:[rdi],dx
  41c4d7:	jae    0x41c53e
  41c4d9:	or     ah,BYTE PTR [rbp+0x78]
  41c4dc:	jo     0x41c54d
  41c4de:	jb     0x41c554
  41c4e0:	and    BYTE PTR [rip+0x5f732431],ah        # 0x5fb4e917
  41c4e6:	and    eax,0xa732432
  41c4eb:	add    BYTE PTR [rdx],cl
  41c4ed:	and    eax,0x5f732431
  41c4f2:	and    eax,0x3d732432
  41c4f7:	and    al,0x7b
  41c4f9:	and    eax,0x5f732431
  41c4fe:	and    eax,0x7d732432
  41c503:	or     ah,BYTE PTR [rip+0x5f732431]        # 0x5fb4e93a
  41c509:	and    eax,0x5f732432
  41c50e:	jae    0x41c575
  41c510:	je     0x41c54f
  41c512:	data16 (bad) 
  41c514:	ins    BYTE PTR es:[rdi],dx
  41c515:	jae    0x41c57c
  41c517:	or     ah,BYTE PTR [rbp+0x78]
  41c51a:	jo     0x41c58b
  41c51c:	jb     0x41c592
  41c51e:	and    BYTE PTR [rip+0x5f732431],ah        # 0x5fb4e955
  41c524:	and    eax,0xa732432
  41c529:	add    BYTE PTR [rbx],ah
  41c52b:	and    BYTE PTR [rbx],ah
  41c52d:	and    BYTE PTR [rbx],ah
  41c52f:	and    BYTE PTR [rbx],ah
  41c531:	and    BYTE PTR [rbx],ah
  41c533:	and    BYTE PTR [rbx],ah
  41c535:	and    BYTE PTR [rbx],ah
  41c537:	and    BYTE PTR [rbx],ah
  41c539:	and    BYTE PTR [rbx],ah
  41c53b:	and    BYTE PTR [rbx],ah
  41c53d:	and    BYTE PTR [rip+0x6f64202d],ch        # 0x6fa5e570
  41c543:	and    BYTE PTR [rsi+0x6f],ch
  41c546:	je     0x41c568
  41c548:	ins    DWORD PTR es:[rdi],dx
  41c549:	outs   dx,DWORD PTR ds:[rsi]
  41c54a:	imul   esp,DWORD PTR fs:[rsi+0x79],0x69687420
  41c552:	jae    0x41c574
  41c554:	ins    DWORD PTR es:[rdi],dx
  41c555:	(bad)  
  41c556:	jb     0x41c5c3
  41c558:	gs jb  0x41c57b
  41c55b:	sub    eax,0xa230a2d
  41c560:	and    esp,DWORD PTR [rax]
  41c562:	and    BYTE PTR [rdi+rcx*2+0x20],al
  41c566:	rex.WRX
  41c567:	rex.WRXB push r12
  41c569:	and    BYTE PTR [rbp+0x44],al
  41c56c:	rex.WB push r12
  41c56e:	and    BYTE PTR [rax+rcx*2+0x49],dl
  41c572:	push   rbx
  41c573:	and    BYTE PTR [rbx+0x45],dl
  41c576:	rex.XB push r12
  41c578:	rex.WB
  41c579:	rex.WRXB
  41c57a:	rex.WRX or r8b,BYTE PTR [rax]
  41c57d:	and    BYTE PTR [rax],ah
  41c57f:	and    BYTE PTR [rax],ah
  41c581:	and    BYTE PTR [rax],ah
  41c583:	and    BYTE PTR [rax],ah
  41c585:	sub    ah,BYTE PTR [rax]
  41c587:	sub    DWORD PTR [rdx],ecx
  41c589:	and    BYTE PTR [rax],ah
  41c58b:	and    BYTE PTR [rax],ah
  41c58d:	and    BYTE PTR [rax],ah
  41c58f:	and    BYTE PTR [rax],ah
  41c591:	and    BYTE PTR [rax],ah
  41c593:	and    BYTE PTR [rax],ah
  41c595:	movsxd ebp,DWORD PTR gs:[rax+0x6f]
  41c599:	and    BYTE PTR [rbp+0x6e],dl
  41c59c:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  41c5a0:	outs   dx,BYTE PTR ds:[rsi]
  41c5a1:	and    BYTE PTR [rip+0x22203a73],ah        # 0x2262001a
  41c5a7:	and    al,0x7b
  41c5a9:	rex.WRXB push r8
  41c5ab:	push   rsp
  41c5ac:	pop    rdi
  41c5ad:	rex.XB
  41c5ae:	rex.WRXB
  41c5af:	rex.R
  41c5b0:	rex.RB jge 0x41c5d5
  41c5b3:	and    BYTE PTR [rsi],bh
  41c5b5:	xor    cl,BYTE PTR es:[rdx]
  41c5b8:	and    BYTE PTR [rax],ah
  41c5ba:	and    BYTE PTR [rax],ah
  41c5bc:	and    BYTE PTR [rax],ah
  41c5be:	and    BYTE PTR [rax],ah
  41c5c0:	and    BYTE PTR [rax],ah
  41c5c2:	and    BYTE PTR [rax],ah
  41c5c4:	movsxd ebp,DWORD PTR gs:[rax+0x6f]
  41c5c8:	and    BYTE PTR [rdx],ah
  41c5ca:	and    al,0x25
  41c5cc:	jae    0x41c62d
  41c5ce:	push   rbp
  41c5cf:	push   rbx
  41c5d0:	rex.B
  41c5d1:	rex.RXB
  41c5d2:	rex.RB pop r15
  41c5d4:	push   rsp
  41c5d5:	rex.RB pop r8
  41c5d7:	push   rsp
  41c5d8:	and    ah,BYTE PTR [rax]
  41c5da:	ds xor cl,BYTE PTR es:[rdx]
  41c5de:	and    BYTE PTR [rax],ah
  41c5e0:	and    BYTE PTR [rax],ah
  41c5e2:	and    BYTE PTR [rax],ah
  41c5e4:	and    BYTE PTR [rax],ah
  41c5e6:	and    BYTE PTR [rax],ah
  41c5e8:	and    BYTE PTR [rax],ah
  41c5ea:	gs js  0x41c656
  41c5ed:	je     0x41c60f
  41c5ef:	xor    DWORD PTR [rdx],ecx
  41c5f1:	and    BYTE PTR [rax],ah
  41c5f3:	and    BYTE PTR [rax],ah
  41c5f5:	and    BYTE PTR [rax],ah
  41c5f7:	and    BYTE PTR [rax],ah
  41c5f9:	and    BYTE PTR [rax],ah
  41c5fb:	and    BYTE PTR [rax],ah
  41c5fd:	cmp    edi,DWORD PTR [rbx]
  41c5ff:	or     ah,BYTE PTR [rax]
  41c601:	and    BYTE PTR [rax],ah
  41c603:	and    BYTE PTR [rax],ah
  41c605:	and    BYTE PTR [rax],ah
  41c607:	and    BYTE PTR [rbp+0x73],ah
  41c60a:	(bad)  
  41c60b:	movsxd ecx,DWORD PTR [rdx]
	...
  41c63d:	add    BYTE PTR [rax],al
  41c63f:	add    BYTE PTR [rcx+0x6c],ah
  41c642:	ins    BYTE PTR es:[rdi],dx
  41c643:	outs   dx,DWORD PTR ds:[rsi]
  41c644:	movsxd esp,DWORD PTR [rcx+0x74]
  41c647:	imul   ebp,DWORD PTR [rdi+0x6e],0x20666f20
  41c64e:	and    eax,0x79622064
  41c653:	je     0x41c6ba
  41c655:	jae    0x41c677
  41c657:	data16 (bad) 
  41c659:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7541000a
  41c661:	je     0x41c6d2
  41c663:	rex.WRXB jo 0x41c6da
  41c666:	jae    0x41c688
  41c668:	data16 jne 0x41c6d9
  41c66b:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  41c66f:	outs   dx,BYTE PTR ds:[rsi]
  41c670:	and    BYTE PTR [rbx+0x61],ah
  41c673:	ins    BYTE PTR es:[rdi],dx
  41c674:	ins    BYTE PTR es:[rdi],dx
  41c675:	gs and BYTE PTR fs:[rdi+0x69],dh
  41c67a:	je     0x41c6e4
  41c67c:	outs   dx,DWORD PTR ds:[rsi]
  41c67d:	jne    0x41c6f3
  41c67f:	and    BYTE PTR [rdi+0x70],ch
  41c682:	je     0x41c6ed
  41c684:	outs   dx,DWORD PTR ds:[rsi]
  41c685:	outs   dx,BYTE PTR ds:[rsi]
  41c686:	and    BYTE PTR [rbp+riz*2+0x73],ah
  41c68a:	movsxd esi,DWORD PTR [rdx+0x69]
  41c68d:	jo     0x41c703
  41c68f:	outs   dx,DWORD PTR ds:[rsi]
  41c690:	jb     0x41c69c
  41c692:	add    BYTE PTR [rcx],cl
  41c694:	push   rsp
  41c695:	push   0x65207369
  41c69a:	js     0x41c6ff
  41c69c:	gs gs fs jae 0x41c6c1
  41c6a1:	je     0x41c70b
  41c6a3:	and    BYTE PTR gs:[rbx+0x6f],ah
  41c6a7:	ins    DWORD PTR es:[rdi],dx
  41c6a8:	jo     0x41c713
  41c6aa:	ins    BYTE PTR es:[rdi],dx
  41c6ab:	gs and BYTE PTR fs:[rcx+rbp*2+0x62],ch
  41c6b1:	jb     0x41c714
  41c6b3:	jb     0x41c72e
  41c6b5:	and    BYTE PTR [rsi+0x65],dh
  41c6b8:	jb     0x41c72d
  41c6ba:	imul   ebp,DWORD PTR [rdi+0x6e],0x20203a
  41c6c1:	rex.B jne 0x41c738
  41c6c4:	outs   dx,DWORD PTR ds:[rsi]
  41c6c5:	ins    DWORD PTR es:[rdi],dx
  41c6c6:	(bad)  
  41c6c7:	je     0x41c72e
  41c6c9:	and    BYTE PTR fs:[rdi+0x70],cl
  41c6cd:	je     0x41c738
  41c6cf:	outs   dx,DWORD PTR ds:[rsi]
  41c6d0:	outs   dx,BYTE PTR ds:[rsi]
  41c6d1:	jae    0x41c6f3
  41c6d3:	push   rax
  41c6d4:	jb     0x41c745
  41c6d6:	movsxd esp,DWORD PTR [rbp+0x73]
  41c6d9:	jae    0x41c744
  41c6db:	outs   dx,BYTE PTR ds:[rsi]
  41c6dc:	and    BYTE PTR [ebp+0x72],al
  41c6e0:	jb     0x41c751
  41c6e2:	jb     0x41c705
  41c6e4:	or     cl,BYTE PTR [rcx]
  41c6e6:	and    eax,0x61632073
  41c6eb:	ins    BYTE PTR es:[rdi],dx
  41c6ec:	ins    BYTE PTR es:[rdi],dx
  41c6ed:	gs and BYTE PTR fs:[rcx+0x75],al
  41c6f2:	je     0x41c763
  41c6f4:	rex.WRXB jo 0x41c76b
  41c6f7:	jae    0x41c719
  41c6f9:	data16 jne 0x41c76a
  41c6fc:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  41c700:	outs   dx,BYTE PTR ds:[rsi]
  41c701:	and    BYTE PTR [rdi+0x69],dh
  41c704:	je     0x41c76e
  41c706:	and    BYTE PTR [rbx+0x74],dh
  41c709:	jb     0x41c780
  41c70b:	movsxd esi,DWORD PTR [rbp+rsi*2+0x72]
  41c70f:	and    BYTE PTR gs:[rsi+0x65],dh
  41c713:	jb     0x41c788
  41c715:	imul   ebp,DWORD PTR [rdi+0x6e],0x3a642520
  41c71c:	and    eax,0x64253a64
  41c721:	or     al,BYTE PTR cs:[rax]
  41c724:	jb     0x41c78b
  41c726:	(bad)  
  41c727:	ins    BYTE PTR es:[rdi],dx
  41c728:	ins    BYTE PTR es:[rdi],dx
  41c729:	outs   dx,DWORD PTR ds:[rsi]
  41c72a:	movsxd esp,DWORD PTR [rax]
  41c72c:	outs   dx,DWORD PTR ds:[rsi]
  41c72d:	data16 and BYTE PTR [rip+0x79622064],ah        # 0x79a3e798
  41c734:	je     0x41c79b
  41c736:	jae    0x41c758
  41c738:	(bad)  
  41c739:	je     0x41c75b
  41c73b:	xor    BYTE PTR [rax+0x25],bh
  41c73e:	jo     0x41c760
  41c740:	data16 (bad) 
  41c742:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x5409000a
  41c74a:	push   0x69207369
  41c74f:	jae    0x41c771
  41c751:	ins    BYTE PTR es:[rdi],dx
  41c752:	gs jae 0x41c7c8
  41c755:	and    BYTE PTR [rax+rbp*2+0x61],dh
  41c759:	outs   dx,BYTE PTR ds:[rsi]
  41c75a:	and    BYTE PTR [rax+rbp*2+0x65],dh
  41c75e:	and    BYTE PTR [rbp+0x69],ch
  41c761:	outs   dx,BYTE PTR ds:[rsi]
  41c762:	imul   ebp,DWORD PTR [rbp+0x75],0x696c206d
  41c769:	(bad)  
  41c76b:	(bad)  
  41c76c:	jb     0x41c7e7
  41c76e:	and    BYTE PTR [rsi+0x65],dh
  41c771:	jb     0x41c7e6
  41c773:	imul   ebp,DWORD PTR [rdi+0x6e],0x20203a
  41c77a:	rex.B jne 0x41c7f1
  41c77d:	outs   dx,DWORD PTR ds:[rsi]
  41c77e:	ins    DWORD PTR es:[rdi],dx
  41c77f:	(bad)  
  41c780:	je     0x41c7e7
  41c782:	and    BYTE PTR fs:[rdi+0x70],cl
  41c786:	je     0x41c7f1
  41c788:	outs   dx,DWORD PTR ds:[rsi]
  41c789:	outs   dx,BYTE PTR ds:[rsi]
  41c78a:	jae    0x41c7ac
  41c78c:	jbe    0x41c7f3
  41c78e:	jb     0x41c803
  41c790:	imul   ebp,DWORD PTR [rdi+0x6e],0xa732520
  41c797:	or     DWORD PTR [rbx+0x6f],eax
  41c79a:	jo     0x41c815
  41c79c:	jb     0x41c807
  41c79e:	addr32 push 0x43282074
  41c7a4:	sub    DWORD PTR [rax],esp
  41c7a6:	xor    DWORD PTR [rcx],edi
  41c7a8:	cmp    DWORD PTR [rcx],edi
  41c7aa:	sub    eax,0x34313032
  41c7af:	and    BYTE PTR [rdx+0x79],ah
  41c7b2:	and    BYTE PTR [rdx+0x72],al
  41c7b5:	jne    0x41c81a
  41c7b7:	and    BYTE PTR gs:[rbx+0x6f],cl
  41c7bb:	jb     0x41c81f
  41c7bd:	and    BYTE PTR [rip+0x6c6c6120],ch        # 0x6cae28e3
  41c7c3:	and    BYTE PTR [rdx+0x69],dh
  41c7c6:	addr32 push 0x72207374
  41c7cc:	gs jae 0x41c834
  41c7cf:	jb     0x41c847
  41c7d1:	gs or  al,BYTE PTR fs:[rax]
  41c7d5:	sub    BYTE PTR [rcx+0x75],al
  41c7d8:	je     0x41c849
  41c7da:	rex.WRXB jo 0x41c851
  41c7dd:	jae    0x41c7ff
  41c7df:	(bad)  
  41c7e0:	jne    0x41c849
  41c7e2:	sub    DWORD PTR [rdx],edi
  41c7e4:	and    BYTE PTR [rax],ah
  41c7e6:	and    eax,0xa2e73
  41c7eb:	outs   dx,DWORD PTR ds:[rsi]
  41c7ec:	jo     0x41c862
  41c7ee:	imul   ebp,DWORD PTR [rdi+0x6e],0x65736552
  41c7f5:	je     0x41c846
  41c7f7:	jo     0x41c86d
  41c7f9:	sub    BYTE PTR [rcx],ch
  41c7fb:	and    BYTE PTR [rbx+0x61],ah
  41c7fe:	ins    BYTE PTR es:[rdi],dx
  41c7ff:	ins    BYTE PTR es:[rdi],dx
  41c800:	gs fs sub al,0x20
  41c804:	(bad)  
  41c805:	jne    0x41c87b
  41c807:	and    BYTE PTR [rdx+0x65],dh
  41c80a:	jae    0x41c871
  41c80c:	je     0x41c83b
  41c80e:	outs   dx,DWORD PTR ds:[rsi]
  41c80f:	jo     0x41c885
  41c811:	imul   ebp,DWORD PTR [rdi+0x6e],0x746f6e20
  41c818:	and    BYTE PTR [rbx+0x6f],ah
  41c81b:	outs   dx,BYTE PTR ds:[rsi]
  41c81c:	imul   sp,WORD PTR [rdi+0x75],0x6572
  41c822:	add    BYTE PTR fs:[rbx+0x6f],ah
  41c826:	jne    0x41c894
  41c828:	and    BYTE PTR fs:[rsi+0x6f],ch
  41c82c:	je     0x41c84e
  41c82e:	ins    BYTE PTR es:[rdi],dx
  41c82f:	outs   dx,DWORD PTR ds:[rsi]
  41c830:	movsxd esp,DWORD PTR [rcx+0x74]
  41c833:	and    BYTE PTR gs:[rax+rbp*2+0x65],dh
  41c838:	and    BYTE PTR [rdi],ah
  41c83a:	push   0x27706c65
  41c83f:	and    BYTE PTR [rdi+0x70],ch
  41c842:	je     0x41c8ad
  41c844:	outs   dx,DWORD PTR ds:[rsi]
  41c845:	outs   dx,BYTE PTR ds:[rsi]
  41c846:	add    BYTE PTR [rdi+0x70],ch
  41c849:	je     0x41c8b4
  41c84b:	outs   dx,DWORD PTR ds:[rsi]
  41c84c:	outs   dx,BYTE PTR ds:[rsi]
  41c84d:	push   rax
  41c84e:	jb     0x41c8bf
  41c850:	movsxd esp,DWORD PTR [rbp+0x73]
  41c853:	jae    0x41c87d
  41c855:	sub    DWORD PTR [rax],esp
  41c857:	ja     0x41c8ba
  41c859:	jae    0x41c87b
  41c85b:	movsxd esp,DWORD PTR [rcx+0x6c]
  41c85e:	ins    BYTE PTR es:[rdi],dx
  41c85f:	gs and BYTE PTR fs:[rdi+0x69],dh
  41c864:	je     0x41c8ce
  41c866:	and    BYTE PTR [rcx+0x6e],ch
  41c869:	jbe    0x41c8cc
  41c86b:	ins    BYTE PTR es:[rdi],dx
  41c86c:	imul   esp,DWORD PTR [rax+riz*1+0x64],0x617461
  41c874:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
  41c87b:	and    BYTE PTR [rcx+0x72],ah
  41c87e:	addr32 jne 0x41c8ee
  41c881:	outs   dx,BYTE PTR gs:[rsi]
  41c883:	je     0x41c8a5
  41c885:	je     0x41c900
  41c887:	jo     0x41c8ee
  41c889:	and    BYTE PTR [rbx+0x70],dh
  41c88c:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  41c890:	imul   esp,DWORD PTR [rbp+0x64],0x66656400
  41c897:	(bad)  
  41c898:	jne    0x41c906
  41c89a:	je     0x41c901
  41c89c:	and    BYTE PTR fs:[rdi+rbp*2+0x20],dh
  41c8a1:	outs   dx,DWORD PTR ds:[rsi]
  41c8a2:	jo     0x41c918
  41c8a4:	imul   ebp,DWORD PTR [rdi+0x6e],0x74697720
  41c8ab:	push   0x74706f20
  41c8b0:	imul   ebp,DWORD PTR [rdi+0x6e],0x61206c61
  41c8b7:	jb     0x41c920
  41c8b9:	add    BYTE PTR [rcx+0x6c],ah
  41c8bc:	imul   esp,DWORD PTR [rcx+0x73],0x20676e69
  41c8c3:	outs   dx,DWORD PTR ds:[rsi]
  41c8c4:	jo     0x41c93a
  41c8c6:	imul   ebp,DWORD PTR [rdi+0x6e],0x20736920
  41c8cd:	outs   dx,DWORD PTR ds:[rsi]
  41c8ce:	jne    0x41c944
  41c8d0:	and    BYTE PTR [rdi+0x66],ch
  41c8d3:	and    BYTE PTR [rdx+0x61],dh
  41c8d6:	outs   dx,BYTE PTR ds:[rsi]
  41c8d7:	gs add BYTE PTR cs:[eip+0x72652073],ah        # 0x72a6e953
  41c8e0:	jb     0x41c951
  41c8e2:	jb     0x41c91e
  41c8e4:	and    BYTE PTR [rax],ah
  41c8e6:	je     0x41c950
  41c8e8:	and    BYTE PTR gs:[rbx+0x65],ch
  41c8ec:	jns    0x41c965
  41c8ee:	outs   dx,DWORD PTR ds:[rsi]
  41c8ef:	jb     0x41c955
  41c8f1:	and    BYTE PTR [rdi],ah
  41c8f3:	and    eax,0x69202773
  41c8f8:	jae    0x41c91a
  41c8fa:	(bad)  
  41c8fb:	ins    DWORD PTR es:[rdi],dx
  41c8fc:	(bad)  
  41c8fd:	imul   esp,DWORD PTR [rdi+0x75],0x2073756f
  41c904:	outs   dx,WORD PTR ds:[rsi]
  41c906:	jb     0x41c928
  41c908:	and    eax,0x20000a73
  41c90d:	and    BYTE PTR [rax+rbp*2+0x65],dl
  41c911:	and    BYTE PTR [rsi+0x6f],ah
  41c914:	ins    BYTE PTR es:[rdi],dx
  41c915:	ins    BYTE PTR es:[rdi],dx
  41c916:	outs   dx,DWORD PTR ds:[rsi]
  41c917:	ja     0x41c982
  41c919:	outs   dx,BYTE PTR ds:[rsi]
  41c91a:	and    BYTE PTR [edi+0x70],ch
  41c91e:	je     0x41c989
  41c920:	outs   dx,DWORD PTR ds:[rsi]
  41c921:	outs   dx,BYTE PTR ds:[rsi]
  41c922:	jae    0x41c944
  41c924:	ins    DWORD PTR es:[rdi],dx
  41c925:	(bad)  
  41c926:	je     0x41c98b
  41c928:	push   0x25000a3a
  41c92d:	jae    0x41c969
  41c92f:	and    BYTE PTR [rcx+0x6d],ah
  41c932:	(bad)  
  41c933:	imul   esp,DWORD PTR [rdi+0x75],0x2073756f
  41c93a:	outs   dx,DWORD PTR ds:[rsi]
  41c93b:	jo     0x41c9b1
  41c93d:	imul   ebp,DWORD PTR [rdi+0x6e],0x6d616e20
  41c944:	cmp    ah,BYTE PTR gs:[rax]
  41c947:	and    eax,0x6d282073
  41c94c:	(bad)  
  41c94d:	je     0x41c9b2
  41c94f:	push   0x25207365
  41c954:	and    BYTE PTR fs:[rdi+0x70],ch
  41c958:	je     0x41c9c3
  41c95a:	outs   dx,DWORD PTR ds:[rsi]
  41c95b:	outs   dx,BYTE PTR ds:[rsi]
  41c95c:	jae    0x41c987
  41c95e:	or     al,BYTE PTR [rax]
  41c960:	and    eax,0x43203a73
  41c965:	outs   dx,DWORD PTR ds:[rsi]
  41c966:	ins    DWORD PTR es:[rdi],dx
  41c967:	ins    DWORD PTR es:[rdi],dx
  41c968:	(bad)  
  41c969:	outs   dx,BYTE PTR ds:[rsi]
  41c96a:	and    BYTE PTR fs:[rcx+rbp*2+0x6e],ch
  41c96f:	and    BYTE PTR gs:[rcx+0x72],ah
  41c973:	addr32 jne 0x41c9e3
  41c976:	outs   dx,BYTE PTR gs:[rsi]
  41c978:	je     0x41c9ed
  41c97a:	and    BYTE PTR [rdx+0x65],dh
  41c97d:	jno    0x41c9f4
  41c97f:	imul   esi,DWORD PTR [rdx+0x65],0x25000a64
  41c986:	and    BYTE PTR fs:[rip+0x20732573],ah        # 0x20b4ef00
  41c98d:	outs   dx,DWORD PTR ds:[rsi]
  41c98e:	jo     0x41ca04
  41c990:	imul   ebp,DWORD PTR [rdi+0x6e],0x6c612073
  41c997:	ins    BYTE PTR es:[rdi],dx
  41c998:	outs   dx,DWORD PTR ds:[rsi]
  41c999:	ja     0x41ca00
  41c99b:	or     al,BYTE PTR fs:[rax]
  41c99e:	and    eax,0x72652073
  41c9a3:	jb     0x41ca14
  41c9a5:	jb     0x41c9c7
  41c9a7:	and    eax,0x25282064
  41c9ac:	jae    0x41c9d7
  41c9ae:	and    BYTE PTR [rbx+0x61],ah
  41c9b1:	ins    BYTE PTR es:[rdi],dx
  41c9b2:	ins    BYTE PTR es:[rdi],dx
  41c9b3:	imul   ebp,DWORD PTR [rsi+0x67],0x20732520
  41c9ba:	outs   dx,WORD PTR ds:[rsi]
  41c9bc:	jb     0x41c9de
  41c9be:	(bad)  
  41c9bf:	and    eax,0xa2773
  41c9c4:	imul   ebp,DWORD PTR [rsi+0x74],0x72707265
  41c9cb:	outs   dx,DWORD PTR ds:[rsi]
  41c9cc:	movsxd esp,DWORD PTR [rbp+0x73]
  41c9cf:	jae    0x41c9f1
  41c9d1:	jo     0x41ca3c
  41c9d3:	jo     0x41ca3a
  41c9d5:	add    BYTE PTR [rbp+0x72],ah
  41c9d8:	jb     0x41ca49
  41c9da:	jb     0x41ca16
  41c9dc:	and    BYTE PTR [rsi+0x65],dh
  41c9df:	jb     0x41ca54
  41c9e1:	imul   ebp,DWORD PTR [rdi+0x6e],0x74706f20
  41c9e8:	imul   ebp,DWORD PTR [rdi+0x6e],0x67726120
  41c9ef:	jne    0x41ca5e
  41c9f1:	outs   dx,BYTE PTR gs:[rsi]
  41c9f3:	je     0x41ca15
  41c9f5:	(bad)  
  41c9f6:	and    eax,0x69202763
  41c9fb:	outs   dx,BYTE PTR ds:[rsi]
  41c9fc:	jbe    0x41ca5f
  41c9fe:	ins    BYTE PTR es:[rdi],dx
  41c9ff:	imul   esp,DWORD PTR [rsi+rbp*1+0x20],0x65735520
  41ca07:	cmp    cl,BYTE PTR [rdx]
  41ca09:	or     DWORD PTR [rdi],esp
  41ca0b:	jbe    0x41ca34
  41ca0d:	and    BYTE PTR [rip+0x72657620],ch        # 0x72a74033
  41ca13:	jae    0x41ca7e
  41ca15:	outs   dx,DWORD PTR ds:[rsi]
  41ca16:	outs   dx,BYTE PTR ds:[rsi]
  41ca17:	and    BYTE PTR [rdi+0x6e],ch
  41ca1a:	ins    BYTE PTR es:[rdi],dx
  41ca1b:	jns    0x41ca27
  41ca1d:	or     DWORD PTR [rdi],esp
  41ca1f:	movsxd esp,DWORD PTR [rdi]
  41ca21:	and    BYTE PTR [rip+0x72657620],ch        # 0x72a74047
  41ca27:	jae    0x41ca92
  41ca29:	outs   dx,DWORD PTR ds:[rsi]
  41ca2a:	outs   dx,BYTE PTR ds:[rsi]
  41ca2b:	and    BYTE PTR [rcx+0x6e],ah
  41ca2e:	and    BYTE PTR fs:[rbx+0x6f],ah
  41ca32:	jo     0x41caad
  41ca34:	jb     0x41ca9f
  41ca36:	addr32 push 0x27090a74
  41ca3c:	outs   dx,BYTE PTR ds:[rsi]
  41ca3d:	(bad)  
  41ca3e:	and    BYTE PTR [rip+0x72657620],ch        # 0x72a74064
  41ca44:	jae    0x41caaf
  41ca46:	outs   dx,DWORD PTR ds:[rsi]
  41ca47:	outs   dx,BYTE PTR ds:[rsi]
  41ca48:	and    BYTE PTR [rcx+0x6e],ah
  41ca4b:	and    BYTE PTR fs:[rsi+0x75],ah
  41ca4f:	ins    BYTE PTR es:[rdi],dx
  41ca50:	ins    BYTE PTR es:[rdi],dx
  41ca51:	and    BYTE PTR [rbx+0x6f],ah
  41ca54:	jo     0x41cacf
  41ca56:	jb     0x41cac1
  41ca58:	addr32 push 0x6f6e2074
  41ca5e:	je     0x41cac9
  41ca60:	movsxd esp,DWORD PTR [rbp+0xa]
  41ca63:	add    BYTE PTR [rip+0x72652073],ah        # 0x72a6eadc
  41ca69:	jb     0x41cada
  41ca6b:	jb     0x41caa7
  41ca6d:	and    BYTE PTR [rax],ah
  41ca6f:	je     0x41cad9
  41ca71:	and    BYTE PTR gs:[rdi],ah
  41ca74:	and    eax,0x61202773
  41ca79:	outs   dx,BYTE PTR ds:[rsi]
  41ca7a:	and    BYTE PTR fs:[rdi],ah
  41ca7d:	and    eax,0x6f202773
  41ca82:	jo     0x41caf8
  41ca84:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f632073
  41ca8b:	outs   dx,BYTE PTR ds:[rsi]
  41ca8c:	data16 ins BYTE PTR es:[rdi],dx
  41ca8e:	imul   esp,DWORD PTR [rbx+0x74],0x7325000a
  41ca95:	cmp    ah,BYTE PTR [rax]
  41ca97:	push   rsp
  41ca98:	push   0x25272065
  41ca9d:	jae    0x41cac6
  41ca9f:	and    BYTE PTR [rdi+0x70],ch
  41caa2:	je     0x41cb0d
  41caa4:	outs   dx,DWORD PTR ds:[rsi]
  41caa5:	outs   dx,BYTE PTR ds:[rsi]
  41caa6:	and    BYTE PTR [rax+0x61],ch
  41caa9:	jae    0x41cacb
  41caab:	(bad)  
  41caac:	gs outs dx,BYTE PTR gs:[rsi]
  41caaf:	and    BYTE PTR [rcx+rbp*2+0x73],ah
  41cab3:	(bad)  
  41cab4:	(bad)  
  41cab5:	ins    BYTE PTR es:[rdi],dx
  41cab6:	gs fs add BYTE PTR cs:[rip+0x69757165],ch        # 0x69b73c24
  41cabf:	jbe    0x41cb22
  41cac1:	ins    BYTE PTR es:[rdi],dx
  41cac2:	outs   dx,BYTE PTR gs:[rsi]
  41cac4:	movsxd esp,DWORD PTR [rbp+0x0]
  41cac7:	and    eax,0x69203a73
  41cacc:	ins    BYTE PTR es:[rdi],dx
  41cacd:	ins    BYTE PTR es:[rdi],dx
  41cace:	gs addr32 (bad) 
  41cad1:	ins    BYTE PTR es:[rdi],dx
  41cad2:	and    BYTE PTR [rdi+0x70],ch
  41cad5:	je     0x41cb40
  41cad7:	outs   dx,DWORD PTR ds:[rsi]
  41cad8:	outs   dx,BYTE PTR ds:[rsi]
  41cad9:	and    BYTE PTR [rip+0x6325202d],ch        # 0x6366eb0c
  41cadf:	or     al,BYTE PTR [rax]
  41cae1:	and    eax,0x69203a73
  41cae6:	ins    BYTE PTR es:[rdi],dx
  41cae7:	ins    BYTE PTR es:[rdi],dx
  41cae8:	gs addr32 (bad) 
  41caeb:	ins    BYTE PTR es:[rdi],dx
  41caec:	and    BYTE PTR [rdi+0x70],ch
  41caef:	je     0x41cb5a
  41caf1:	outs   dx,DWORD PTR ds:[rsi]
  41caf2:	outs   dx,BYTE PTR ds:[rsi]
  41caf3:	and    BYTE PTR [rip+0x7325202d],ch        # 0x7366eb26
  41caf9:	or     al,BYTE PTR [rax]
  41cafb:	and    eax,0x75203a73
  41cb00:	outs   dx,BYTE PTR ds:[rsi]
  41cb01:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  41cb05:	outs   dx,BYTE PTR ds:[rsi]
  41cb06:	and    BYTE PTR [rsi+0x65],dh
  41cb09:	outs   dx,BYTE PTR ds:[rsi]
  41cb0a:	outs   dx,DWORD PTR fs:[rsi]
  41cb0c:	jb     0x41cb2e
  41cb0e:	gs js  0x41cb85
  41cb11:	outs   dx,BYTE PTR gs:[rsi]
  41cb13:	jae    0x41cb7e
  41cb15:	outs   dx,DWORD PTR ds:[rsi]
  41cb16:	outs   dx,BYTE PTR ds:[rsi]
  41cb17:	and    BYTE PTR [rdi+0x70],ch
  41cb1a:	je     0x41cb85
  41cb1c:	outs   dx,DWORD PTR ds:[rsi]
  41cb1d:	outs   dx,BYTE PTR ds:[rsi]
  41cb1e:	and    BYTE PTR [rip+0x7325202d],ch        # 0x7366eb51
  41cb24:	or     al,BYTE PTR [rax]
  41cb26:	and    BYTE PTR [rax],ah
  41cb28:	outs   dx,DWORD PTR ds:[rsi]
  41cb29:	jb     0x41cb4b
  41cb2b:	(bad)  
  41cb2c:	outs   dx,BYTE PTR ds:[rsi]
  41cb2d:	and    BYTE PTR [rcx+0x6e],ch
  41cb30:	je     0x41cb97
  41cb32:	addr32 gs jb 0x41cb56
  41cb36:	data16 jb 0x41cba8
  41cb39:	ins    DWORD PTR es:[rdi],dx
  41cb3a:	and    BYTE PTR [rip+0x68742064],ah        # 0x68b5eba4
  41cb40:	jb     0x41cbb1
  41cb42:	jne    0x41cbab
  41cb44:	push   0xa642520
  41cb49:	add    BYTE PTR [rip+0x72652073],ah        # 0x72a6ebc2
  41cb4f:	jb     0x41cbc0
  41cb51:	jb     0x41cb8d
  41cb53:	and    BYTE PTR [rax],ah
  41cb55:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
  41cb5c:	and    BYTE PTR [rdi+0x70],ch
  41cb5f:	je     0x41cbca
  41cb61:	outs   dx,DWORD PTR ds:[rsi]
  41cb62:	outs   dx,BYTE PTR ds:[rsi]
  41cb63:	and    BYTE PTR [rbp+riz*2+0x73],ah
  41cb67:	movsxd esi,DWORD PTR [rdx+0x69]
  41cb6a:	jo     0x41cbe0
  41cb6c:	outs   dx,DWORD PTR ds:[rsi]
  41cb6d:	jb     0x41cb8f
  41cb6f:	outs   dx,WORD PTR ds:[rsi]
  41cb71:	jb     0x41cb93
  41cb73:	and    eax,0x25000a73
  41cb78:	jae    0x41cbb4
  41cb7a:	and    BYTE PTR [rcx+0x6e],ch
  41cb7d:	jbe    0x41cbe0
  41cb7f:	ins    BYTE PTR es:[rdi],dx
  41cb80:	imul   esp,DWORD PTR [rax+riz*1+0x6f],0x6f697470
  41cb88:	outs   dx,BYTE PTR ds:[rsi]
  41cb89:	and    BYTE PTR [rsi+0x61],ch
  41cb8c:	ins    DWORD PTR es:[rdi],dx
  41cb8d:	cmp    ah,BYTE PTR gs:[rax]
  41cb90:	and    eax,0x25000a73
  41cb95:	jae    0x41cbd1
  41cb97:	and    BYTE PTR [rax+rbp*2+0x65],dl
  41cb9b:	and    BYTE PTR [rdi],ah
  41cb9d:	and    eax,0x6f202773
  41cba2:	jo     0x41cc18
  41cba4:	imul   ebp,DWORD PTR [rdi+0x6e],0x71657220
  41cbab:	jne    0x41cc16
  41cbad:	jb     0x41cc14
  41cbaf:	jae    0x41cbd1
  41cbb1:	(bad)  
  41cbb2:	outs   dx,BYTE PTR ds:[rsi]
  41cbb3:	and    BYTE PTR [rcx+0x72],ah
  41cbb6:	addr32 jne 0x41cc26
  41cbb9:	outs   dx,BYTE PTR gs:[rsi]
  41cbbb:	je     0x41cbeb
  41cbbd:	or     al,BYTE PTR [rax]
  41cbbf:	sub    BYTE PTR [rcx+0x75],al
  41cbc2:	je     0x41cc33
  41cbc4:	rex.WRXB jo 0x41cc3b
  41cbc7:	jae    0x41cbe9
  41cbc9:	(bad)  
  41cbca:	jne    0x41cc33
  41cbcc:	sub    DWORD PTR [rdx],edi
  41cbce:	and    BYTE PTR [rax],ah
  41cbd0:	rex.RB jno 0x41cc48
  41cbd3:	imul   esi,DWORD PTR [rsi+0x61],0x636e656c
  41cbda:	gs and BYTE PTR fs:[rdi+0x70],ch
  41cbdf:	je     0x41cc4a
  41cbe1:	outs   dx,DWORD PTR ds:[rsi]
  41cbe2:	outs   dx,BYTE PTR ds:[rsi]
  41cbe3:	and    BYTE PTR [rdi],ah
  41cbe5:	and    eax,0x77202773
  41cbea:	(bad)  
  41cbeb:	jae    0x41cc0d
  41cbed:	gs jno 0x41cc65
  41cbf0:	imul   esi,DWORD PTR [rsi+0x61],0x636e656c
  41cbf7:	gs and BYTE PTR fs:[rdi+rbp*2+0x20],dh
  41cbfd:	(bad)  
  41cbfe:	outs   dx,DWORD PTR ds:[rsi]
  41cbff:	je     0x41cc69
  41cc01:	or     cl,BYTE PTR [rcx]
  41cc03:	(bad)  
  41cc04:	and    eax,0x61202773
  41cc09:	outs   dx,BYTE PTR ds:[rsi]
  41cc0a:	and    BYTE PTR fs:[rdi],ah
  41cc0d:	and    eax,0x2e2773
  41cc12:	and    eax,0x72652073
  41cc17:	jb     0x41cc88
  41cc19:	jb     0x41cc55
  41cc1b:	and    BYTE PTR [rax],ah
  41cc1d:	push   rsp
  41cc1e:	push   0x73252065
  41cc23:	and    BYTE PTR [rdi+0x70],ch
  41cc26:	je     0x41cc91
  41cc28:	outs   dx,DWORD PTR ds:[rsi]
  41cc29:	outs   dx,BYTE PTR ds:[rsi]
  41cc2a:	and    BYTE PTR [rcx+0x73],ch
  41cc2d:	and    BYTE PTR [rdx+0x65],dh
  41cc30:	jno    0x41cca7
  41cc32:	imul   esi,DWORD PTR [rdx+0x65],0x25000a64
  41cc39:	jae    0x41cc75
  41cc3b:	and    BYTE PTR [rax+rbp*2+0x65],dl
  41cc3f:	and    BYTE PTR [rdi],ah
  41cc41:	and    eax,0x6f202773
  41cc46:	jo     0x41ccbc
  41cc48:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e616320
  41cc4f:	outs   dx,BYTE PTR ds:[rsi]
  41cc50:	outs   dx,DWORD PTR ds:[rsi]
  41cc51:	je     0x41cc73
  41cc53:	push   0x20657661
  41cc58:	(bad)  
  41cc59:	outs   dx,BYTE PTR ds:[rsi]
  41cc5a:	and    BYTE PTR [rcx+0x72],ah
  41cc5d:	addr32 jne 0x41cccd
  41cc60:	outs   dx,BYTE PTR gs:[rsi]
  41cc62:	je     0x41cc92
  41cc64:	or     al,BYTE PTR [rax]
  41cc66:	and    eax,0x43203a73
  41cc6b:	outs   dx,DWORD PTR ds:[rsi]
  41cc6c:	ins    DWORD PTR es:[rdi],dx
  41cc6d:	ins    DWORD PTR es:[rdi],dx
  41cc6e:	(bad)  
  41cc6f:	outs   dx,BYTE PTR ds:[rsi]
  41cc70:	and    BYTE PTR fs:[rcx+rbp*2+0x6e],ch
  41cc75:	and    BYTE PTR gs:[rcx+0x72],ah
  41cc79:	addr32 jne 0x41cce9
  41cc7c:	outs   dx,BYTE PTR gs:[rsi]
  41cc7e:	je     0x41ccf3
  41cc80:	and    BYTE PTR [rcx+0x72],ah
  41cc83:	and    BYTE PTR gs:[rsi+0x6f],ch
  41cc87:	je     0x41cca9
  41cc89:	(bad)  
  41cc8a:	ins    BYTE PTR es:[rdi],dx
  41cc8b:	ins    BYTE PTR es:[rdi],dx
  41cc8c:	outs   dx,DWORD PTR ds:[rsi]
  41cc8d:	ja     0x41ccf4
  41cc8f:	fs or  al,BYTE PTR cs:[rax]
  41cc93:	gs jb  0x41cd08
  41cc96:	outs   dx,DWORD PTR ds:[rsi]
  41cc97:	jb     0x41ccb9
  41cc99:	and    eax,0x25282064
  41cc9e:	jae    0x41ccc9
  41cca0:	and    BYTE PTR [rbx+0x72],ah
  41cca3:	gs (bad) 
  41cca5:	je     0x41cd10
  41cca7:	outs   dx,BYTE PTR ds:[rsi]
  41cca8:	and    BYTE PTR [eip+0x25000a73],ah        # 0x2541d722
  41ccaf:	jae    0x41ccd1
  41ccb1:	gs jb  0x41cd26
  41ccb4:	outs   dx,DWORD PTR ds:[rsi]
  41ccb5:	jb     0x41ccf1
  41ccb7:	and    BYTE PTR [rax],ah
  41ccb9:	(bad)  
  41ccba:	and    eax,0x64202773
  41ccbf:	outs   dx,DWORD PTR ds:[rsi]
  41ccc0:	gs jae 0x41cce3
  41ccc3:	outs   dx,BYTE PTR ds:[rsi]
  41ccc4:	outs   dx,DWORD PTR ds:[rsi]
  41ccc5:	je     0x41cce7
  41ccc7:	ins    DWORD PTR es:[rdi],dx
  41ccc8:	(bad)  
  41ccc9:	je     0x41cd2e
  41cccb:	push   0x796e6120
  41ccd0:	and    BYTE PTR [rip+0x656b2073],ah        # 0x65aced49
  41ccd6:	jns    0x41cd4f
  41ccd8:	outs   dx,DWORD PTR ds:[rsi]
  41ccd9:	jb     0x41cd3f
  41ccdb:	jae    0x41cd0b
  41ccdd:	or     al,BYTE PTR [rax]
  41ccdf:	and    eax,0x72652073
  41cce4:	jb     0x41cd55
  41cce6:	jb     0x41cd22
  41cce8:	and    BYTE PTR [rax+rbp*2+0x65],dl
  41ccec:	and    BYTE PTR [rdi],ah
  41ccee:	and    eax,0x6f202773
  41ccf3:	jo     0x41cd69
  41ccf5:	imul   ebp,DWORD PTR [rdi+0x6e],0x71657220
  41ccfc:	jne    0x41cd67
  41ccfe:	jb     0x41cd65
  41cd00:	jae    0x41cd22
  41cd02:	(bad)  
  41cd03:	outs   dx,BYTE PTR ds:[rsi]
  41cd04:	and    BYTE PTR [rcx+0x72],ah
  41cd07:	addr32 jne 0x41cd77
  41cd0a:	outs   dx,BYTE PTR gs:[rsi]
  41cd0c:	je     0x41cd3c
  41cd0e:	or     al,BYTE PTR [rax]
  41cd10:	gs jb  0x41cd85
  41cd13:	outs   dx,DWORD PTR ds:[rsi]
  41cd14:	jb     0x41cd36
  41cd16:	and    eax,0x25282064
  41cd1b:	jae    0x41cd46
  41cd1d:	and    BYTE PTR [rbx+0x74],dh
  41cd20:	(bad)  
  41cd21:	je     0x41cd50
  41cd23:	imul   ebp,DWORD PTR [rsi+0x67],0xa732520
  41cd2a:	add    BYTE PTR [rip+0x72652073],ah        # 0x72a6eda3
  41cd30:	jb     0x41cda1
  41cd32:	jb     0x41cd6e
  41cd34:	and    BYTE PTR [rsi+0x6f],ch
  41cd37:	and    BYTE PTR [rbx+0x61],dh
  41cd3a:	jbe    0x41cda1
  41cd3c:	and    BYTE PTR fs:[rdi+0x70],ch
  41cd40:	je     0x41cdab
  41cd42:	outs   dx,DWORD PTR ds:[rsi]
  41cd43:	outs   dx,BYTE PTR ds:[rsi]
  41cd44:	and    BYTE PTR [rbx+0x74],dh
  41cd47:	(bad)  
  41cd48:	je     0x41cdaf
  41cd4a:	or     al,BYTE PTR [rax]
  41cd4c:	(bad)  
  41cd4d:	and    eax,0x69202773
  41cd52:	jae    0x41cd74
  41cd54:	outs   dx,BYTE PTR ds:[rsi]
  41cd55:	outs   dx,DWORD PTR ds:[rsi]
  41cd56:	je     0x41cd78
  41cd58:	(bad)  
  41cd59:	and    BYTE PTR [rbx+0x6f],ah
  41cd5c:	ins    DWORD PTR es:[rdi],dx
  41cd5d:	ins    DWORD PTR es:[rdi],dx
  41cd5e:	(bad)  
  41cd5f:	outs   dx,BYTE PTR ds:[rsi]
  41cd60:	and    BYTE PTR fs:[rcx+rbp*2+0x6e],ch
  41cd65:	and    BYTE PTR gs:[rdi+0x70],ch
  41cd69:	je     0x41cdd4
  41cd6b:	outs   dx,DWORD PTR ds:[rsi]
  41cd6c:	outs   dx,BYTE PTR ds:[rsi]
  41cd6d:	or     al,BYTE PTR cs:[rax]
  41cd70:	and    eax,0x72652073
  41cd75:	jb     0x41cde6
  41cd77:	jb     0x41cdb3
  41cd79:	and    BYTE PTR [rax],ah
  41cd7b:	(bad)  
  41cd7c:	and    eax,0x69202773
  41cd81:	jae    0x41cda3
  41cd83:	outs   dx,BYTE PTR ds:[rsi]
  41cd84:	outs   dx,DWORD PTR ds:[rsi]
  41cd85:	je     0x41cda7
  41cd87:	(bad)  
  41cd88:	and    BYTE PTR [rdx+0x65],dh
  41cd8b:	movsxd ebp,DWORD PTR [rdi+0x67]
  41cd8e:	outs   dx,BYTE PTR ds:[rsi]
  41cd8f:	imul   edi,DWORD PTR [rdx+0x61],0x20656c62
  41cd96:	fs (bad) 
  41cd98:	je     0x41cdff
  41cd9a:	(bad)  
  41cd9b:	je     0x41ce06
  41cd9d:	ins    DWORD PTR es:[rdi],dx
  41cd9e:	gs or  al,BYTE PTR cs:[rax]
  41cda2:	(bad)  
  41cda3:	and    eax,0x6e202773
  41cda8:	outs   dx,DWORD PTR ds:[rsi]
  41cda9:	je     0x41cdcb
  41cdab:	fs imul bp,WORD PTR gs:[rsi+0x65],0xa64
  41cdb3:	add    BYTE PTR [rip+0x72652073],ah        # 0x72a6ee2c
  41cdb9:	jb     0x41ce2a
  41cdbb:	jb     0x41cdf7
  41cdbd:	and    BYTE PTR [rax],ah
  41cdbf:	(bad)  
  41cdc0:	and    eax,0x69202773
  41cdc5:	jae    0x41cde7
  41cdc7:	outs   dx,BYTE PTR ds:[rsi]
  41cdc8:	outs   dx,DWORD PTR ds:[rsi]
  41cdc9:	je     0x41cdeb
  41cdcb:	(bad)  
  41cdcc:	and    BYTE PTR [rdx+0x65],dh
  41cdcf:	movsxd ebp,DWORD PTR [rdi+0x67]
  41cdd2:	outs   dx,BYTE PTR ds:[rsi]
  41cdd3:	imul   edi,DWORD PTR [rdx+0x61],0x20656c62
  41cdda:	je     0x41ce45
  41cddc:	ins    DWORD PTR es:[rdi],dx
  41cddd:	and    BYTE PTR gs:[rbp+rsi*2+0x72],ah
  41cde2:	(bad)  
  41cde3:	je     0x41ce4e
  41cde5:	outs   dx,DWORD PTR ds:[rsi]
  41cde6:	outs   dx,BYTE PTR ds:[rsi]
  41cde7:	or     al,BYTE PTR cs:[rax]
  41cdea:	and    eax,0x72652073
  41cdef:	jb     0x41ce60
  41cdf1:	jb     0x41ce2d
  41cdf3:	and    BYTE PTR [rax],ah
  41cdf5:	push   rsp
  41cdf6:	push   0x73252065
  41cdfb:	and    BYTE PTR [rdi+0x70],ch
  41cdfe:	je     0x41ce69
  41ce00:	outs   dx,DWORD PTR ds:[rsi]
  41ce01:	outs   dx,BYTE PTR ds:[rsi]
  41ce02:	and    BYTE PTR [rbp+0x75],ch
  41ce05:	jae    0x41ce7b
  41ce07:	and    BYTE PTR [rcx+0x70],ah
  41ce0a:	jo     0x41ce71
  41ce0c:	(bad)  
  41ce0d:	jb     0x41ce2f
  41ce0f:	and    eax,0x69742064
  41ce14:	ins    DWORD PTR es:[rdi],dx
  41ce15:	gs jae 0x41ce46
  41ce18:	or     al,BYTE PTR [rax]
  41ce1a:	and    eax,0x72652073
  41ce1f:	jb     0x41ce90
  41ce21:	jb     0x41ce5d
  41ce23:	and    BYTE PTR [rax],ah
  41ce25:	(bad)  
  41ce26:	and    eax,0x69202773
  41ce2b:	jae    0x41ce4d
  41ce2d:	outs   dx,BYTE PTR ds:[rsi]
  41ce2e:	outs   dx,DWORD PTR ds:[rsi]
  41ce2f:	je     0x41ce51
  41ce31:	(bad)  
  41ce32:	and    BYTE PTR [rdx+0x65],dh
  41ce35:	movsxd ebp,DWORD PTR [rdi+0x67]
  41ce38:	outs   dx,BYTE PTR ds:[rsi]
  41ce39:	imul   edi,DWORD PTR [rdx+0x61],0x20656c62
  41ce40:	outs   dx,BYTE PTR ds:[rsi]
  41ce41:	jne    0x41ceb0
  41ce43:	(bad)  
  41ce44:	gs jb  0x41ce75
  41ce47:	or     al,BYTE PTR [rax]
  41ce49:	and    eax,0x72652073
  41ce4e:	jb     0x41cebf
  41ce50:	jb     0x41ce8c
  41ce52:	and    BYTE PTR [rax],ah
  41ce54:	and    eax,0x78652073
  41ce59:	movsxd esp,DWORD PTR [rbp+0x65]
  41ce5c:	fs jae 0x41ce7f
  41ce5f:	and    eax,0x656b2073
  41ce64:	jns    0x41cedd
  41ce66:	outs   dx,DWORD PTR ds:[rsi]
  41ce67:	jb     0x41cecd
  41ce69:	and    BYTE PTR [rbx+0x6f],ah
  41ce6c:	jne    0x41cedc
  41ce6e:	je     0x41ce7a
  41ce70:	add    BYTE PTR [rdx+rsi*2+0x79],dl
  41ce74:	and    BYTE PTR [rdi],ah
  41ce76:	and    eax,0x73252073
  41ce7b:	(bad)  
  41ce7c:	and    BYTE PTR [rsi+0x6f],ah
  41ce7f:	jb     0x41cea1
  41ce81:	ins    DWORD PTR es:[rdi],dx
  41ce82:	outs   dx,DWORD PTR ds:[rsi]
  41ce83:	jb     0x41ceea
  41ce85:	and    BYTE PTR [rcx+0x6e],ch
  41ce88:	outs   dx,WORD PTR ds:[rsi]
  41ce8a:	jb     0x41cef9
  41ce8c:	(bad)  
  41ce8d:	je     0x41cef8
  41ce8f:	outs   dx,DWORD PTR ds:[rsi]
  41ce90:	outs   dx,BYTE PTR ds:[rsi]
  41ce91:	or     al,BYTE PTR cs:[rax]
  41ce94:	outs   dx,DWORD PTR ds:[rsi]
  41ce95:	outs   dx,BYTE PTR ds:[rsi]
  41ce96:	and    BYTE PTR gs:[rip+0x20732573],ah        # 0x20b4f410
  41ce9d:	outs   dx,DWORD PTR ds:[rsi]
  41ce9e:	jo     0x41cf14
  41cea0:	imul   ebp,DWORD PTR [rdi+0x6e],0x6c6c6120
  41cea7:	outs   dx,DWORD PTR ds:[rsi]
  41cea8:	ja     0x41cf0f
  41ceaa:	or     al,BYTE PTR fs:[rax]
  41cead:	jae    0x41cf23
  41ceaf:	(bad)  
  41ceb0:	outs   dx,BYTE PTR ds:[rsi]
  41ceb1:	fs (bad) 
  41ceb3:	jb     0x41cf19
  41ceb5:	and    BYTE PTR [rdi+0x75],ch
  41ceb8:	je     0x41cf2a
  41ceba:	jne    0x41cf30
  41cebc:	add    BYTE PTR [rbx+0x74],dh
  41cebf:	(bad)  
  41cec0:	outs   dx,BYTE PTR ds:[rsi]
  41cec1:	fs (bad) 
  41cec3:	jb     0x41cf29
  41cec5:	and    BYTE PTR [rbp+0x72],ah
  41cec8:	jb     0x41cf39
  41ceca:	jb     0x41cecc
  41cecc:	ja     0x41cf40
  41cece:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x65207325
  41ced6:	jb     0x41cf4a
  41ced8:	outs   dx,DWORD PTR ds:[rsi]
  41ced9:	jb     0x41cf15
  41cedb:	and    BYTE PTR [rax],ah
  41cedd:	and    eax,0x706f2073
  41cee2:	je     0x41cf4d
  41cee4:	outs   dx,DWORD PTR ds:[rsi]
  41cee5:	outs   dx,BYTE PTR ds:[rsi]
  41cee6:	and    BYTE PTR [rsi+0x61],dh
  41cee9:	ins    BYTE PTR es:[rdi],dx
  41ceea:	jne    0x41cf51
  41ceec:	and    BYTE PTR [rip+0x6920646c],ah        # 0x6962335e
  41cef2:	jae    0x41cf14
  41cef4:	outs   dx,DWORD PTR ds:[rsi]
  41cef5:	jne    0x41cf6b
  41cef7:	and    BYTE PTR [rdi+0x66],ch
  41cefa:	and    BYTE PTR [rdx+0x61],dh
  41cefd:	outs   dx,BYTE PTR ds:[rsi]
  41cefe:	gs or  al,BYTE PTR cs:[eax]
  41cf03:	and    eax,0x72652073
  41cf08:	jb     0x41cf79
  41cf0a:	jb     0x41cf46
  41cf0c:	and    BYTE PTR [rax],ah
  41cf0e:	and    eax,0x706f2073
  41cf13:	je     0x41cf7e
  41cf15:	outs   dx,DWORD PTR ds:[rsi]
  41cf16:	outs   dx,BYTE PTR ds:[rsi]
  41cf17:	and    BYTE PTR [rdx+0x65],dh
  41cf1a:	jno    0x41cf91
  41cf1c:	imul   esi,DWORD PTR [rdx+0x65],0x68742073
  41cf23:	and    BYTE PTR gs:[rip+0x706f2073],ah        # 0x70b0ef9d
  41cf2a:	je     0x41cf95
  41cf2c:	outs   dx,DWORD PTR ds:[rsi]
  41cf2d:	outs   dx,BYTE PTR ds:[rsi]
  41cf2e:	or     al,BYTE PTR [rax]
  41cf30:	and    eax,0x61772073
  41cf35:	jb     0x41cfa5
  41cf37:	imul   ebp,DWORD PTR [rsi+0x67],0x6320203a
  41cf3e:	(bad)  
  41cf3f:	outs   dx,BYTE PTR ds:[rsi]
  41cf40:	outs   dx,BYTE PTR ds:[rsi]
  41cf41:	outs   dx,DWORD PTR ds:[rsi]
  41cf42:	je     0x41cf64
  41cf44:	jae    0x41cfa7
  41cf46:	jbe    0x41cfad
  41cf48:	and    BYTE PTR [rdi+0x70],ch
  41cf4b:	je     0x41cfb6
  41cf4d:	outs   dx,DWORD PTR ds:[rsi]
  41cf4e:	outs   dx,BYTE PTR ds:[rsi]
  41cf4f:	jae    0x41cf71
  41cf51:	sub    eax,0x20732520
  41cf56:	outs   dx,BYTE PTR ds:[rsi]
  41cf57:	outs   dx,DWORD PTR ds:[rsi]
  41cf58:	je     0x41cf7a
  41cf5a:	jb     0x41cfc1
  41cf5c:	addr32 jne 0x41cfcb
  41cf5f:	(bad)  
  41cf60:	jb     0x41cf82
  41cf62:	imul   bp,WORD PTR [rbp+riz*2+0xa],0x900
  41cf69:	or     DWORD PTR [rcx],ecx
  41cf6b:	or     DWORD PTR [rip+0x206e6120],ebp        # 0x20b03091
  41cf71:	(bad)  
  41cf72:	ins    BYTE PTR es:[rdi],dx
  41cf73:	je     0x41cfda
  41cf75:	jb     0x41cfe5
  41cf77:	(bad)  
  41cf78:	je     0x41cfdf
  41cf7a:	and    BYTE PTR [rsi+0x6f],ah
  41cf7d:	jb     0x41cf9f
  41cf7f:	(bad)  
  41cf80:	and    eax,0xa2773
  41cf85:	push   rsi
  41cf86:	gs jb  0x41cffc
  41cf89:	imul   ebp,DWORD PTR [rdi+0x6e],0x7375202c
  41cf90:	(bad)  
  41cf91:	and    BYTE PTR gs:[ecx+0x6e],ah
  41cf96:	and    BYTE PTR fs:[rbx+0x6f],ah
  41cf9a:	outs   dx,BYTE PTR ds:[rsi]
  41cf9b:	imul   sp,WORD PTR [rdi+0x75],0x6172
  41cfa1:	je     0x41d00c
  41cfa3:	outs   dx,DWORD PTR ds:[rsi]
  41cfa4:	outs   dx,BYTE PTR ds:[rsi]
  41cfa5:	and    BYTE PTR [rdi+0x70],ch
  41cfa8:	je     0x41d013
  41cfaa:	outs   dx,DWORD PTR ds:[rsi]
  41cfab:	outs   dx,BYTE PTR ds:[rsi]
  41cfac:	jae    0x41cfe8
  41cfae:	add    BYTE PTR [rcx],cl
  41cfb0:	or     DWORD PTR [rcx],ecx
  41cfb2:	or     DWORD PTR [rip+0x66656420],ebp        # 0x66a733d8
  41cfb8:	(bad)  
  41cfb9:	jne    0x41d027
  41cfbb:	je     0x41cfdd
  41cfbd:	outs   dx,DWORD PTR ds:[rsi]
  41cfbe:	jo     0x41d034
  41cfc0:	imul   ebp,DWORD PTR [rdi+0x6e],0x726f6620
  41cfc7:	and    BYTE PTR [rbp+0x6e],dh
  41cfca:	outs   dx,BYTE PTR ds:[rsi]
  41cfcb:	(bad)  
  41cfcc:	ins    DWORD PTR es:[rdi],dx
  41cfcd:	gs and BYTE PTR fs:[rdi+0x70],ch
  41cfd2:	je     0x41d03d
  41cfd4:	outs   dx,DWORD PTR ds:[rsi]
  41cfd5:	outs   dx,BYTE PTR ds:[rsi]
  41cfd6:	jae    0x41cfe2
  41cfd8:	add    BYTE PTR [rcx],cl
  41cfda:	or     DWORD PTR [rcx],ecx
  41cfdc:	or     DWORD PTR [rip+0x73696420],ebp        # 0x73ab3402
  41cfe2:	(bad)  
  41cfe3:	(bad)  
  41cfe4:	ins    BYTE PTR es:[rdi],dx
  41cfe5:	gs and BYTE PTR fs:[rcx+0x73],ah
  41cfea:	and    BYTE PTR [rdi],ah
  41cfec:	sub    eax,0x2773252d
  41cff1:	or     al,BYTE PTR [rax]
  41cff3:	and    BYTE PTR [rip+0x25202d2d],ch        # 0x2561fd26
  41cff9:	sub    eax,0x20733431
  41cffe:	and    eax,0x54000a73
  41d003:	push   0x6f207369
  41d008:	jo     0x41d07e
  41d00a:	imul   ebp,DWORD PTR [rdi+0x6e],0x73616820
  41d011:	and    BYTE PTR [rdx+0x65],ah
  41d014:	outs   dx,BYTE PTR gs:[rsi]
  41d016:	and    BYTE PTR [rcx+rbp*2+0x73],ah
  41d01a:	(bad)  
  41d01b:	(bad)  
  41d01c:	ins    BYTE PTR es:[rdi],dx
  41d01d:	gs add BYTE PTR fs:[rcx],cl
  41d021:	or     DWORD PTR [rcx],ecx
  41d023:	or     DWORD PTR [rip+0x616e6520],ebp        # 0x61b03549
  41d029:	(bad)  
  41d02a:	ins    BYTE PTR es:[rdi],dx
  41d02b:	gs and BYTE PTR fs:[rdx+0x79],ah
  41d030:	and    BYTE PTR [rbp+riz*2+0x66],ah
  41d034:	(bad)  
  41d035:	jne    0x41d0a3
  41d037:	je     0x41d043
  41d039:	add    BYTE PTR [rip+0x72652073],ah        # 0x72a6f0b2
  41d03f:	jb     0x41d0b0
  41d041:	jb     0x41d07d
  41d043:	and    BYTE PTR [rax],ah
  41d045:	outs   dx,DWORD PTR ds:[rsi]
  41d046:	outs   dx,BYTE PTR ds:[rsi]
  41d047:	ins    BYTE PTR es:[rdi],dx
  41d048:	jns    0x41d06a
  41d04a:	add    BYTE PTR [rax],ah
  41d04c:	sub    eax,0x61786520
  41d051:	ins    DWORD PTR es:[rdi],dx
  41d052:	imul   ebp,DWORD PTR [rsi+0x69],0x6520676e
  41d059:	outs   dx,BYTE PTR ds:[rsi]
  41d05a:	jbe    0x41d0c5
  41d05c:	jb     0x41d0cd
  41d05e:	outs   dx,BYTE PTR ds:[rsi]
  41d05f:	ins    DWORD PTR es:[rdi],dx
  41d060:	outs   dx,BYTE PTR gs:[rsi]
  41d062:	je     0x41d084
  41d064:	jbe    0x41d0c7
  41d066:	jb     0x41d0d1
  41d068:	(bad)  
  41d069:	(bad)  
  41d06a:	ins    BYTE PTR es:[rdi],dx
  41d06b:	gs jae 0x41d08e
  41d06e:	outs   dx,BYTE PTR ds:[rsi]
  41d06f:	(bad)  
  41d070:	ins    DWORD PTR es:[rdi],dx
  41d071:	gs and BYTE PTR fs:[rip+0xa2a5f73],ah        # 0xa6c2fec
  41d079:	add    BYTE PTR [rcx],cl
  41d07b:	or     DWORD PTR [rcx],ecx
  41d07d:	or     DWORD PTR [rip+0x6c696620],ebp        # 0x6cab36a3
  41d083:	and    BYTE PTR gs:[rbp+0x75],ch
  41d087:	jae    0x41d0fd
  41d089:	and    BYTE PTR [rsi+0x6f],ch
  41d08c:	je     0x41d0ae
  41d08e:	jo     0x41d102
  41d090:	gs sub eax,0x73697865
  41d096:	je     0x41d0a2
  41d098:	add    BYTE PTR [rcx],cl
  41d09a:	or     DWORD PTR [rcx],ecx
  41d09c:	or     DWORD PTR [rip+0x6c696620],ebp        # 0x6cab36c2
  41d0a2:	and    BYTE PTR gs:[rbp+0x75],ch
  41d0a6:	jae    0x41d11c
  41d0a8:	and    BYTE PTR [rax+0x72],dh
  41d0ab:	gs sub eax,0x73697865
  41d0b1:	je     0x41d0bd
  41d0b3:	add    BYTE PTR [rdi+0x70],cl
  41d0b6:	je     0x41d121
  41d0b8:	outs   dx,DWORD PTR ds:[rsi]
  41d0b9:	outs   dx,BYTE PTR ds:[rsi]
  41d0ba:	jae    0x41d0dc
  41d0bc:	(bad)  
  41d0bd:	jb     0x41d124
  41d0bf:	and    BYTE PTR [rbx+0x70],dh
  41d0c2:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  41d0c6:	imul   esp,DWORD PTR [rbp+0x64],0x20796220
  41d0cd:	outs   dx,DWORD PTR fs:[rsi]
  41d0cf:	jne    0x41d133
  41d0d1:	ins    BYTE PTR es:[rdi],dx
  41d0d2:	gs and BYTE PTR fs:[rax+0x79],ch
  41d0d7:	jo     0x41d141
  41d0d9:	outs   dx,BYTE PTR gs:[rsi]
  41d0db:	jae    0x41d0fd
  41d0dd:	(bad)  
  41d0de:	outs   dx,BYTE PTR ds:[rsi]
  41d0df:	and    BYTE PTR fs:[rax+rbp*2+0x65],dh
  41d0e4:	imul   esi,DWORD PTR [rdx+0x20],0x656d616e
  41d0eb:	and    BYTE PTR [rdi+0x72],ch
  41d0ee:	and    BYTE PTR [rdx+0x79],ah
  41d0f1:	and    BYTE PTR [rcx+0x20],ah
  41d0f4:	jae    0x41d15f
  41d0f6:	outs   dx,BYTE PTR ds:[rsi]
  41d0f7:	ins    BYTE PTR es:[edi],dx
  41d0f9:	or     ch,BYTE PTR gs:[rax+0x79]
  41d0fd:	jo     0x41d167
  41d0ff:	outs   dx,BYTE PTR gs:[rsi]
  41d101:	and    BYTE PTR [rcx+0x6e],ah
  41d104:	and    BYTE PTR fs:[rax+rbp*2+0x65],dh
  41d109:	and    BYTE PTR [rsi+0x6c],ah
  41d10c:	(bad)  
  41d10d:	and    BYTE PTR [ebx+0x68],ah
  41d111:	(bad)  
  41d112:	jb     0x41d175
  41d114:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
  41d118:	or     al,BYTE PTR cs:[rax]
  41d11b:	or     bh,BYTE PTR [rip+0x3d203d20]        # 0x3d620e41
  41d121:	and    BYTE PTR [rip+0x3d203d20],bh        # 0x3d620e47
  41d127:	and    BYTE PTR [rip+0xa0a3d20],bh        # 0xa4c0e4d
  41d12d:	push   rsp
  41d12e:	push   0x69207369
  41d133:	outs   dx,BYTE PTR ds:[rsi]
  41d134:	movsxd esp,DWORD PTR [rcx+0x72]
  41d137:	outs   dx,BYTE PTR ds:[rsi]
  41d138:	(bad)  
  41d139:	je     0x41d1a4
  41d13b:	outs   dx,DWORD PTR ds:[rsi]
  41d13c:	outs   dx,BYTE PTR ds:[rsi]
  41d13d:	and    BYTE PTR [rdi+0x66],ch
  41d140:	and    BYTE PTR [rdi+0x65],ah
  41d143:	outs   dx,BYTE PTR ds:[rsi]
  41d144:	jae    0x41d1ae
  41d146:	gs ins BYTE PTR es:[rdi],dx
  41d148:	ins    BYTE PTR es:[rdi],dx
  41d149:	and    BYTE PTR [rdi+0x69],dh
  41d14c:	ins    BYTE PTR es:[rdi],dx
  41d14d:	ins    BYTE PTR es:[rdi],dx
  41d14e:	and    BYTE PTR [rax+0x72],dh
  41d151:	outs   dx,DWORD PTR ds:[rsi]
  41d152:	fs jne 0x41d1b8
  41d155:	or     ah,BYTE PTR gs:[rcx+0x20]
  41d159:	jae    0x41d1c3
  41d15b:	gs ins BYTE PTR es:[rdi],dx
  41d15d:	ins    BYTE PTR es:[rdi],dx
  41d15e:	and    BYTE PTR [rbx+0x63],dh
  41d161:	jb     0x41d1cc
  41d163:	jo     0x41d1d9
  41d165:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  41d169:	jo     0x41d1cc
  41d16b:	jb     0x41d1e0
  41d16d:	and    BYTE PTR gs:[rax+rbp*2+0x65],dh
  41d172:	and    BYTE PTR [rdi+0x70],ch
  41d175:	je     0x41d1e0
  41d177:	outs   dx,DWORD PTR ds:[rsi]
  41d178:	outs   dx,BYTE PTR ds:[rsi]
  41d179:	jae    0x41d19b
  41d17b:	outs   dx,WORD PTR ds:[rsi]
  41d17d:	jb     0x41d19f
  41d17f:	and    eax,0xa0a3a73
  41d184:	add    BYTE PTR [rax],ah
  41d186:	and    BYTE PTR [rdi+0x72],ch
  41d189:	and    BYTE PTR [rcx+0x6e],ah
  41d18c:	and    BYTE PTR [rcx+0x6e],ch
  41d18f:	je     0x41d1f6
  41d191:	addr32 gs jb 0x41d1b5
  41d195:	ins    DWORD PTR es:[rdi],dx
  41d196:	(bad)  
  41d197:	jae    0x41d204
  41d199:	and    BYTE PTR [rdi+0x69],dh
  41d19c:	je     0x41d206
  41d19e:	and    BYTE PTR [rcx+0x6e],ah
  41d1a1:	jns    0x41d1c3
  41d1a3:	outs   dx,DWORD PTR ds:[rsi]
  41d1a4:	data16 and BYTE PTR [rax+rbp*2+0x65],dh
  41d1a9:	and    BYTE PTR [rdi+rbp*2+0x77],ch
  41d1ad:	gs jb  0x41d1d0
  41d1b0:	and    eax,0x69622064
  41d1b5:	je     0x41d22a
  41d1b7:	and    BYTE PTR [rbx+0x65],dh
  41d1ba:	je     0x41d1c6
  41d1bc:	add    BYTE PTR [rcx],cl
  41d1be:	or     DWORD PTR [rcx],ecx
  41d1c0:	or     DWORD PTR [rip+0x20736920],ebp        # 0x20b53ae6
  41d1c6:	(bad)  
  41d1c7:	and    BYTE PTR [rbx+0x65],dh
  41d1ca:	je     0x41d1ec
  41d1cc:	ins    DWORD PTR es:[rdi],dx
  41d1cd:	gs ins DWORD PTR es:[rdi],dx
  41d1cf:	(bad)  
  41d1d0:	gs jb  0x41d246
  41d1d3:	push   0x6f207069
  41d1d8:	jo     0x41d24e
  41d1da:	imul   ebp,DWORD PTR [rdi+0x6e],0x909000a
  41d1e1:	or     DWORD PTR [rcx],ecx
  41d1e3:	sub    eax,0x73756d20
  41d1e8:	je     0x41d20a
  41d1ea:	(bad)  
  41d1eb:	jo     0x41d25d
  41d1ed:	gs (bad) 
  41d1ef:	jb     0x41d211
  41d1f1:	(bad)  
  41d1f2:	gs je  0x41d26c
  41d1f5:	gs outs dx,BYTE PTR gs:[rsi]
  41d1f8:	and    BYTE PTR [rip+0x6e612064],ah        # 0x6ea2f262
  41d1fe:	and    BYTE PTR fs:[rip+0x69742064],ah        # 0x69b5f269
  41d205:	ins    DWORD PTR es:[rdi],dx
  41d206:	gs jae 0x41d213
  41d209:	add    BYTE PTR [rdi+0x70],cl
  41d20c:	je     0x41d277
  41d20e:	outs   dx,DWORD PTR ds:[rsi]
  41d20f:	outs   dx,BYTE PTR ds:[rsi]
  41d210:	jae    0x41d232
  41d212:	(bad)  
  41d213:	jb     0x41d27a
  41d215:	and    BYTE PTR [rbx+0x70],dh
  41d218:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  41d21c:	imul   esp,DWORD PTR [rbp+0x64],0x20796220
  41d223:	jae    0x41d28e
  41d225:	outs   dx,BYTE PTR ds:[rsi]
  41d226:	ins    BYTE PTR es:[edi],dx
  41d228:	and    BYTE PTR gs:[rdi+0x72],ch
  41d22c:	and    BYTE PTR [rdi+rbp*2+0x75],ah
  41d230:	(bad)  
  41d231:	ins    BYTE PTR es:[rdi],dx
  41d232:	and    BYTE PTR gs:[rax+0x79],ch
  41d236:	jo     0x41d2a0
  41d238:	outs   dx,BYTE PTR gs:[rsi]
  41d23a:	jae    0x41d25c
  41d23c:	(bad)  
  41d23d:	outs   dx,BYTE PTR ds:[rsi]
  41d23e:	and    BYTE PTR fs:[rax+rbp*2+0x65],dh
  41d243:	imul   esi,DWORD PTR [rdx+0x20],0x656d616e
  41d24a:	or     al,BYTE PTR cs:[rax]
  41d24d:	or     DWORD PTR [rcx],ecx
  41d24f:	or     DWORD PTR [rcx],ecx
  41d251:	sub    eax,0x79616d20
  41d256:	and    BYTE PTR [rcx+0x70],ah
  41d259:	jo     0x41d2c0
  41d25b:	(bad)  
  41d25c:	jb     0x41d27e
  41d25e:	ins    DWORD PTR es:[rdi],dx
  41d25f:	jne    0x41d2cd
  41d261:	je     0x41d2cc
  41d263:	jo     0x41d2d1
  41d265:	and    BYTE PTR gs:[rcx+rbp*2+0x6d],dh
  41d26a:	gs jae 0x41d277
  41d26d:	add    BYTE PTR [rcx],cl
  41d26f:	or     DWORD PTR [rcx],ecx
  41d271:	or     DWORD PTR [rip+0x79616d20],ebp        # 0x79a33f97
  41d277:	and    BYTE PTR [rsi+0x6f],ch
  41d27a:	je     0x41d29c
  41d27c:	(bad)  
  41d27d:	and    BYTE PTR gs:[rax+0x72],dh
  41d281:	gs jae 0x41d2e9
  41d284:	je     0x41d290
  41d286:	add    BYTE PTR [rax],ah
  41d288:	and    BYTE PTR [rax],ah
  41d28a:	rex.B jb 0x41d2f4
  41d28d:	and    BYTE PTR [rdi+0x70],cl
  41d290:	je     0x41d2fb
  41d292:	outs   dx,DWORD PTR ds:[rsi]
  41d293:	outs   dx,BYTE PTR ds:[rsi]
  41d294:	sub    eax,0x656d614e
  41d299:	and    BYTE PTR [rax],ah
  41d29b:	and    BYTE PTR [rax],ah
  41d29d:	rex.R
  41d29e:	gs jae 0x41d304
  41d2a1:	jb     0x41d30c
  41d2a3:	jo     0x41d319
  41d2a5:	imul   ebp,DWORD PTR [rdi+0x6e],0x2020000a
  41d2ac:	rex.RX ins BYTE PTR es:[rdi],dx
  41d2ae:	and    BYTE PTR [ecx+0x72],al
  41d2b2:	and    BYTE PTR [edi+0x70],cl
  41d2b6:	je     0x41d321
  41d2b8:	outs   dx,DWORD PTR ds:[rsi]
  41d2b9:	outs   dx,BYTE PTR ds:[rsi]
  41d2ba:	sub    eax,0x656d614e
  41d2bf:	and    BYTE PTR [rax],ah
  41d2c1:	and    BYTE PTR [rax],ah
  41d2c3:	rex.R
  41d2c4:	gs jae 0x41d32a
  41d2c7:	jb     0x41d332
  41d2c9:	jo     0x41d33f
  41d2cb:	imul   ebp,DWORD PTR [rdi+0x6e],0x2520000a
  41d2d2:	xor    esi,DWORD PTR [rbx+0x20]
  41d2d5:	and    eax,0x68540073
  41d2da:	and    BYTE PTR gs:[rdi],ah
  41d2dd:	sub    eax,0x756e3c23
  41d2e2:	ins    DWORD PTR es:[rdi],dx
  41d2e3:	(bad)  
  41d2e4:	gs jb  0x41d325
  41d2e7:	(bad)  
  41d2e8:	and    BYTE PTR [rdi+0x70],ch
  41d2eb:	je     0x41d356
  41d2ed:	outs   dx,DWORD PTR ds:[rsi]
  41d2ee:	outs   dx,BYTE PTR ds:[rsi]
  41d2ef:	and    BYTE PTR [rbp+0x61],ch
  41d2f2:	jns    0x41d314
  41d2f4:	outs   dx,DWORD PTR ds:[rsi]
  41d2f5:	ins    DWORD PTR es:[rdi],dx
  41d2f6:	imul   esi,DWORD PTR [rax+riz*1+0x74],0x68206568
  41d2fe:	(bad)  
  41d2ff:	jae    0x41d369
  41d301:	and    BYTE PTR [rbx+0x68],ah
  41d304:	(bad)  
  41d305:	jb     0x41d311
  41d307:	add    BYTE PTR [rcx+0x6c],al
  41d30a:	ins    BYTE PTR es:[rdi],dx
  41d30b:	and    BYTE PTR [rcx+0x72],ah
  41d30e:	addr32 jne 0x41d37e
  41d311:	outs   dx,BYTE PTR gs:[rsi]
  41d313:	je     0x41d388
  41d315:	and    BYTE PTR [rcx+0x72],ah
  41d318:	and    BYTE PTR gs:[rsi+0x61],ch
  41d31c:	ins    DWORD PTR es:[rdi],dx
  41d31d:	gs and BYTE PTR fs:[rdi+0x70],ch
  41d322:	je     0x41d38d
  41d324:	outs   dx,DWORD PTR ds:[rsi]
  41d325:	outs   dx,BYTE PTR ds:[rsi]
  41d326:	jae    0x41d356
  41d328:	or     al,BYTE PTR [rax]
  41d32a:	and    BYTE PTR [rip+0x61657220],ch        # 0x61a74550
  41d330:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x6c696620
  41d338:	and    BYTE PTR gs:[rip+0x500a0073],ah        # 0x504bd3b2
  41d33f:	ins    BYTE PTR es:[rdi],dx
  41d340:	gs (bad) 
  41d342:	jae    0x41d3a9
  41d344:	and    BYTE PTR [rbx+0x65],dh
  41d347:	outs   dx,BYTE PTR ds:[rsi]
  41d348:	and    BYTE PTR fs:[rdx+0x75],ah
  41d34c:	and    BYTE PTR [edx+0x65],dh
  41d350:	jo     0x41d3c1
  41d352:	jb     0x41d3c8
  41d354:	jae    0x41d376
  41d356:	je     0x41d3c7
  41d358:	cmp    ah,BYTE PTR [rax]
  41d35a:	and    BYTE PTR ds:0xa3e73,bh
  41d361:	or     DWORD PTR [rcx],ecx
  41d363:	or     DWORD PTR [rcx],ecx
  41d365:	sub    eax,0x79616d20
  41d36a:	and    BYTE PTR [rsi+0x4f],cl
  41d36d:	push   rsp
  41d36e:	and    BYTE PTR [rcx+0x70],ah
  41d371:	jo     0x41d3d8
  41d373:	(bad)  
  41d374:	jb     0x41d396
  41d376:	sub    eax,0x65727020
  41d37b:	jae    0x41d3e2
  41d37d:	je     0x41d39f
  41d37f:	outs   dx,DWORD PTR ds:[rsi]
  41d380:	outs   dx,BYTE PTR ds:[rsi]
  41d381:	ins    BYTE PTR es:[rdi],dx
  41d382:	jns    0x41d38e
  41d384:	add    BYTE PTR [rdx],cl
  41d386:	push   rsp
  41d387:	push   0x6f662065
  41d38c:	ins    BYTE PTR es:[rdi],dx
  41d38d:	ins    BYTE PTR es:[rdi],dx
  41d38e:	outs   dx,DWORD PTR ds:[rsi]
  41d38f:	ja     0x41d3fa
  41d391:	outs   dx,BYTE PTR ds:[rsi]
  41d392:	and    BYTE PTR [edi+0x70],ch
  41d396:	je     0x41d401
  41d398:	outs   dx,DWORD PTR ds:[rsi]
  41d399:	outs   dx,BYTE PTR ds:[rsi]
  41d39a:	and    BYTE PTR [rax+0x72],dh
  41d39d:	gs jae 0x41d405
  41d3a0:	je     0x41d3c2
  41d3a2:	ins    DWORD PTR es:[rdi],dx
  41d3a3:	movsxd ebp,DWORD PTR gs:[rax+0x61]
  41d3a7:	outs   dx,BYTE PTR ds:[rsi]
  41d3a8:	imul   esi,DWORD PTR [rbx+0x6d],0x72612073
  41d3af:	and    BYTE PTR gs:[rbx+0x75],dh
  41d3b3:	jo     0x41d425
  41d3b5:	outs   dx,DWORD PTR ds:[rsi]
  41d3b6:	jb     0x41d42c
  41d3b8:	gs cmp cl,BYTE PTR fs:[rdx]
  41d3bc:	add    BYTE PTR [rax+0x72],dh
  41d3bf:	outs   dx,DWORD PTR ds:[rsi]
  41d3c0:	push   0x74696269
  41d3c5:	jae    0x41d3e7
  41d3c7:	je     0x41d431
  41d3c9:	gs jae 0x41d431
  41d3cc:	and    BYTE PTR [rdi+0x70],ch
  41d3cf:	je     0x41d43a
  41d3d1:	outs   dx,DWORD PTR ds:[rsi]
  41d3d2:	outs   dx,BYTE PTR ds:[rsi]
  41d3d3:	jae    0x41d40f
  41d3d5:	or     al,BYTE PTR [rax]
  41d3d7:	jo     0x41d44b
  41d3d9:	outs   dx,DWORD PTR ds:[rsi]
  41d3da:	push   0x74696269
  41d3df:	jae    0x41d401
  41d3e1:	je     0x41d44b
  41d3e3:	and    BYTE PTR gs:[rdi+0x70],ch
  41d3e7:	je     0x41d452
  41d3e9:	outs   dx,DWORD PTR ds:[rsi]
  41d3ea:	outs   dx,BYTE PTR ds:[rsi]
  41d3eb:	and    BYTE PTR [rdi],ah
  41d3ed:	and    eax,0xa2773
  41d3f2:	and    eax,0x646c2573
  41d3f7:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  41d3fb:	and    eax,0x2500646c
  41d400:	jae    0x41d469
  41d402:	jb     0x41d469
  41d404:	(bad)  
  41d405:	je     0x41d46c
  41d407:	jb     0x41d429
  41d409:	je     0x41d473
  41d40b:	(bad)  
  41d40c:	outs   dx,BYTE PTR ds:[rsi]
  41d40d:	and    BYTE PTR [rdi+0x72],ch
  41d410:	and    BYTE PTR [rbp+0x71],ah
  41d413:	jne    0x41d476
  41d415:	ins    BYTE PTR es:[rdi],dx
  41d416:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  41d41a:	and    eax,0x2500646c
  41d41f:	jae    0x41d446
  41d421:	ins    BYTE PTR es:[rdi],dx
  41d422:	and    BYTE PTR fs:[rbp+0x78],ah
  41d426:	(bad)  
  41d427:	movsxd esi,DWORD PTR [rsp+rbp*2+0x79]
  41d42b:	add    BYTE PTR [rip+0x20746973],ah        # 0x20b63da4
  41d431:	ins    DWORD PTR es:[rdi],dx
  41d432:	jne    0x41d4a7
  41d434:	je     0x41d456
  41d436:	ins    BYTE PTR es:[rdi],dx
  41d437:	imul   esp,DWORD PTR [rbp+0x20],0x6f206e69
  41d43e:	outs   dx,BYTE PTR ds:[rsi]
  41d43f:	and    BYTE PTR gs:[rdi+0x66],ch
  41d443:	and    BYTE PTR [rax+rbp*2+0x65],dh
  41d447:	and    BYTE PTR [rdx+0x61],dh
  41d44a:	outs   dx,BYTE PTR ds:[rsi]
  41d44b:	addr32 gs jae 0x41d489
  41d44f:	or     al,BYTE PTR [rax]
  41d451:	and    eax,0x20746973
  41d456:	ins    DWORD PTR es:[rdi],dx
  41d457:	jne    0x41d4cc
  41d459:	je     0x41d47b
  41d45b:	(bad)  
  41d45c:	and    BYTE PTR gs:[rcx+0x6e],ch
  41d460:	and    BYTE PTR [rax+rbp*2+0x65],dh
  41d464:	and    BYTE PTR [rdx+0x61],dh
  41d467:	outs   dx,BYTE PTR ds:[rsi]
  41d468:	cmp    cl,BYTE PTR gs:[edx]
  41d46c:	add    BYTE PTR [rax+riz*1],ch
  41d46f:	outs   dx,DWORD PTR ds:[rsi]
  41d470:	jb     0x41d47c
  41d472:	add    BYTE PTR [rip+0x20736973],ah        # 0x20b53deb
  41d478:	jae    0x41d4dd
  41d47a:	(bad)  
  41d47b:	ins    BYTE PTR es:[rdi],dx
  41d47c:	(bad)  
  41d47d:	(bad)  
  41d47e:	ins    BYTE PTR es:[rdi],dx
  41d47f:	and    BYTE PTR gs:[rdi+0x69],dh
  41d483:	je     0x41d4ed
  41d485:	and    BYTE PTR [rcx+0x20],ah
  41d488:	jae    0x41d4ff
  41d48a:	data16 imul di,WORD PTR [rax+0x3a],0x6b20
  41d491:	(bad)  
  41d492:	rex.WXB (bad) 
  41d494:	ins    DWORD PTR es:[rdi],dx
  41d495:	(bad)  
  41d496:	rex.WRB (bad) 
  41d498:	addr32 (bad) 
  41d49a:	rex.RXB (bad) 
  41d49c:	je     0x41d4cd
  41d49e:	push   rsp
  41d49f:	or     al,BYTE PTR [rax]
  41d4a1:	and    eax,0x73656c73
  41d4a6:	jae    0x41d4c8
  41d4a8:	je     0x41d512
  41d4aa:	(bad)  
  41d4ab:	outs   dx,BYTE PTR ds:[rsi]
  41d4ac:	and    BYTE PTR [rdi+0x72],ch
  41d4af:	and    BYTE PTR [rbp+0x71],ah
  41d4b2:	jne    0x41d515
  41d4b4:	ins    BYTE PTR es:[rdi],dx
  41d4b5:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  41d4b9:	and    eax,0x4f00646c
  41d4be:	jo     0x41d525
  41d4c0:	jb     0x41d523
  41d4c2:	outs   dx,BYTE PTR ds:[rsi]
  41d4c3:	fs jae 0x41d4e6
  41d4c6:	(bad)  
  41d4c7:	outs   dx,BYTE PTR ds:[rsi]
  41d4c8:	and    BYTE PTR fs:[rdi+0x70],ch
  41d4cc:	je     0x41d537
  41d4ce:	outs   dx,DWORD PTR ds:[rsi]
  41d4cf:	outs   dx,BYTE PTR ds:[rsi]
  41d4d0:	jae    0x41d4f2
  41d4d2:	ins    DWORD PTR es:[rdi],dx
  41d4d3:	(bad)  
  41d4d4:	jns    0x41d4f6
  41d4d6:	(bad)  
  41d4d7:	and    BYTE PTR gs:[rcx+0x6e],ch
  41d4db:	je     0x41d542
  41d4dd:	jb     0x41d54c
  41d4df:	imul   edi,DWORD PTR [rax+0x65],0x20202e64
  41d4e6:	push   rsp
  41d4e7:	push   0x77207965
  41d4ec:	imul   ebp,DWORD PTR [rsp+rbp*2+0x20],0x72206562
  41d4f4:	outs   dx,DWORD PTR gs:[rsi]
  41d4f6:	jb     0x41d55c
  41d4f8:	gs jb  0x41d560
  41d4fb:	fs or  al,BYTE PTR cs:[rax]
  41d4ff:	jb     0x41d566
  41d501:	jno    0x41d578
  41d503:	imul   esi,DWORD PTR [rdx+0x65],0x68742073
  41d50a:	and    BYTE PTR gs:[rdi+0x70],ch
  41d50e:	je     0x41d579
  41d510:	outs   dx,DWORD PTR ds:[rsi]
  41d511:	outs   dx,BYTE PTR ds:[rsi]
  41d512:	and    BYTE PTR [rdi],ah
  41d514:	and    eax,0xa2773
  41d519:	jb     0x41d580
  41d51b:	jno    0x41d592
  41d51d:	imul   esi,DWORD PTR [rdx+0x65],0x68742073
  41d524:	gs jae 0x41d58c
  41d527:	and    BYTE PTR [rdi+0x70],ch
  41d52a:	je     0x41d595
  41d52c:	outs   dx,DWORD PTR ds:[rsi]
  41d52d:	outs   dx,BYTE PTR ds:[rsi]
  41d52e:	jae    0x41d56a
  41d530:	or     al,BYTE PTR [rax]
  41d532:	and    BYTE PTR [rax],ah
  41d534:	and    BYTE PTR [rcx+0x72],al
  41d537:	and    BYTE PTR [edi+0x70],cl
  41d53b:	je     0x41d5a6
  41d53d:	outs   dx,DWORD PTR ds:[rsi]
  41d53e:	outs   dx,BYTE PTR ds:[rsi]
  41d53f:	sub    eax,0x656d614e
  41d544:	and    BYTE PTR [rax],ah
  41d546:	and    BYTE PTR [rdx+0x65],dl
  41d549:	jno    0x41d58a
  41d54b:	and    BYTE PTR [rax],ah
  41d54d:	rex.R
  41d54e:	gs jae 0x41d5b4
  41d551:	jb     0x41d5bc
  41d553:	jo     0x41d5c9
  41d555:	imul   ebp,DWORD PTR [rdi+0x6e],0x2020000a
  41d55c:	rex.RX ins BYTE PTR es:[rdi],dx
  41d55e:	and    BYTE PTR [ecx+0x72],al
  41d562:	and    BYTE PTR [edi+0x70],cl
  41d566:	je     0x41d5d1
  41d568:	outs   dx,DWORD PTR ds:[rsi]
  41d569:	outs   dx,BYTE PTR ds:[rsi]
  41d56a:	sub    eax,0x656d614e
  41d56f:	and    BYTE PTR [rax],ah
  41d571:	and    BYTE PTR [rdx+0x65],dl
  41d574:	jno    0x41d5b5
  41d576:	and    BYTE PTR [rax],ah
  41d578:	rex.R
  41d579:	gs jae 0x41d5df
  41d57c:	jb     0x41d5e7
  41d57e:	jo     0x41d5f4
  41d580:	imul   ebp,DWORD PTR [rdi+0x6e],0x726f000a
  41d587:	and    BYTE PTR [rcx+0x6f],bh
  41d58a:	jne    0x41d5ac
  41d58c:	ins    DWORD PTR es:[rdi],dx
  41d58d:	(bad)  
  41d58e:	jns    0x41d5b0
  41d590:	jne    0x41d605
  41d592:	and    BYTE PTR gs:[rcx+0x20],ah
  41d596:	outs   dx,BYTE PTR ds:[rsi]
  41d597:	jne    0x41d606
  41d599:	gs jb  0x41d605
  41d59c:	movsxd esp,DWORD PTR [rax]
  41d59e:	jb     0x41d605
  41d5a0:	jo     0x41d614
  41d5a2:	gs jae 0x41d60a
  41d5a5:	outs   dx,BYTE PTR ds:[rsi]
  41d5a6:	je     0x41d609
  41d5a8:	je     0x41d613
  41d5aa:	outs   dx,DWORD PTR ds:[rsi]
  41d5ab:	outs   dx,BYTE PTR ds:[rsi]
  41d5ac:	and    BYTE PTR cs:[rax],ah
  41d5af:	push   rax
  41d5b0:	jb     0x41d617
  41d5b2:	movsxd esp,DWORD PTR [rbp+0x64]
  41d5b5:	imul   ebp,DWORD PTR [rsi+0x67],0x65687420
  41d5bc:	jae    0x41d623
  41d5be:	and    BYTE PTR [rdi+0x69],dh
  41d5c1:	je     0x41d62b
  41d5c3:	and    BYTE PTR [rcx+0x20],ah
  41d5c6:	(bad)  
  41d5c7:	and    DWORD PTR [rdi],esp
  41d5c9:	or     dh,BYTE PTR [rdi+0x69]
  41d5cc:	ins    BYTE PTR es:[rdi],dx
  41d5cd:	ins    BYTE PTR es:[rdi],dx
  41d5ce:	and    BYTE PTR [rbx+0x6c],ah
  41d5d1:	gs (bad) 
  41d5d3:	jb     0x41d5f5
  41d5d5:	je     0x41d63f
  41d5d7:	and    BYTE PTR gs:[rdx+0x69],ah
  41d5db:	je     0x41d650
  41d5dd:	sub    al,0x20
  41d5df:	jae    0x41d651
  41d5e1:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  41d5e5:	jns    0x41d650
  41d5e7:	outs   dx,BYTE PTR ds:[rsi]
  41d5e8:	and    BYTE PTR [edi],ah
  41d5eb:	outs   dx,BYTE PTR ds:[rsi]
  41d5ec:	outs   dx,DWORD PTR ds:[rsi]
  41d5ed:	outs   dx,BYTE PTR ds:[rsi]
  41d5ee:	gs (bad) 
  41d5f0:	and    BYTE PTR [rdi+0x69],dh
  41d5f3:	ins    BYTE PTR es:[rdi],dx
  41d5f4:	ins    BYTE PTR es:[rdi],dx
  41d5f5:	and    BYTE PTR [rbx+0x6c],ah
  41d5f8:	gs (bad) 
  41d5fa:	jb     0x41d61c
  41d5fc:	(bad)  
  41d5fd:	ins    BYTE PTR es:[rdi],dx
  41d5fe:	ins    BYTE PTR es:[rdi],dx
  41d5ff:	and    BYTE PTR [rdx+0x69],ah
  41d602:	je     0x41d677
  41d604:	sub    al,0x20
  41d606:	(bad)  
  41d607:	outs   dx,BYTE PTR ds:[rsi]
  41d608:	and    BYTE PTR fs:[rdi],ah
  41d60b:	(bad)  
  41d60c:	ins    BYTE PTR es:[rdi],dx
  41d60d:	ins    BYTE PTR es:[rdi],dx
  41d60e:	(bad)  
  41d60f:	or     dh,BYTE PTR [rdi+0x69]
  41d612:	ins    BYTE PTR es:[rdi],dx
  41d613:	ins    BYTE PTR es:[rdi],dx
  41d614:	and    BYTE PTR [rbx+0x65],dh
  41d617:	je     0x41d639
  41d619:	je     0x41d683
  41d61b:	gs ins DWORD PTR es:[rdi],dx
  41d61d:	and    BYTE PTR [rcx+0x6c],ah
  41d620:	ins    BYTE PTR es:[rdi],dx
  41d621:	and    BYTE PTR cs:[rax],ah
  41d624:	rex.WRB jne 0x41d693
  41d627:	je     0x41d692
  41d629:	jo     0x41d697
  41d62b:	and    BYTE PTR gs:[rbp+0x6e],ah
  41d62f:	je     0x41d6a3
  41d631:	imul   esp,DWORD PTR [rbp+0x73],0x79616d20
  41d638:	and    BYTE PTR [rdx+0x65],ah
  41d63b:	and    BYTE PTR [rax+0x61],dh
  41d63e:	jae    0x41d6b3
  41d640:	gs and BYTE PTR fs:[rcx+0x73],ah
  41d645:	and    BYTE PTR [rcx+0x6e],ah
  41d648:	and    BYTE PTR [rdi+0x70],ch
  41d64b:	je     0x41d6b6
  41d64d:	outs   dx,DWORD PTR ds:[rsi]
  41d64e:	outs   dx,BYTE PTR ds:[rsi]
  41d64f:	or     ah,BYTE PTR [rcx+0x72]
  41d652:	addr32 jne 0x41d6c2
  41d655:	outs   dx,BYTE PTR gs:[rsi]
  41d657:	je     0x41d679
  41d659:	ins    BYTE PTR es:[rdi],dx
  41d65a:	imul   esi,DWORD PTR [rbx+0x74],0x9000a2e
  41d661:	or     DWORD PTR [rcx],ecx
  41d663:	or     DWORD PTR [rip+0x79616d20],ebp        # 0x79a34389
  41d669:	and    BYTE PTR [rcx+0x70],ah
  41d66c:	jo     0x41d6d3
  41d66e:	(bad)  
  41d66f:	jb     0x41d691
  41d671:	jne    0x41d6e3
  41d673:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  41d677:	and    eax,0x69742064
  41d67c:	ins    DWORD PTR es:[rdi],dx
  41d67d:	gs jae 0x41d68a
  41d680:	add    BYTE PTR [rax+rbp*2+0x65],dl
  41d684:	and    BYTE PTR [rsi+0x61],dh
  41d687:	ins    BYTE PTR es:[rdi],dx
  41d688:	imul   esp,DWORD PTR [rax+riz*1+0x22],0x20227325
  41d690:	outs   dx,DWORD PTR ds:[rsi]
  41d691:	jo     0x41d707
  41d693:	imul   ebp,DWORD PTR [rdi+0x6e],0x79656b20
  41d69a:	ja     0x41d70b
  41d69c:	jb     0x41d702
  41d69e:	jae    0x41d6c0
  41d6a0:	(bad)  
  41d6a1:	jb     0x41d708
  41d6a3:	cmp    cl,BYTE PTR [rdx]
  41d6a5:	add    BYTE PTR [rax+rbp*2+0x65],dl
  41d6a9:	and    BYTE PTR [rsi+0x65],ch
  41d6ac:	js     0x41d722
  41d6ae:	and    BYTE PTR [rdi+0x70],ch
  41d6b1:	je     0x41d71c
  41d6b3:	outs   dx,DWORD PTR ds:[rsi]
  41d6b4:	outs   dx,BYTE PTR ds:[rsi]
  41d6b5:	and    BYTE PTR [rbx+0x75],dh
  41d6b8:	jo     0x41d72a
  41d6ba:	outs   dx,DWORD PTR ds:[rsi]
  41d6bb:	jb     0x41d731
  41d6bd:	jae    0x41d6df
  41d6bf:	jbe    0x41d726
  41d6c1:	outs   dx,BYTE PTR ds:[rsi]
  41d6c2:	outs   dx,DWORD PTR fs:[rsi]
  41d6c4:	jb     0x41d6e6
  41d6c6:	jae    0x41d73d
  41d6c8:	jo     0x41d73a
  41d6ca:	outs   dx,DWORD PTR ds:[rsi]
  41d6cb:	jb     0x41d741
  41d6cd:	gs and BYTE PTR fs:[rbp+0x78],ah
  41d6d2:	je     0x41d746
  41d6d4:	(bad)  
  41d6d5:	and    BYTE PTR [rdi+0x70],ch
  41d6d8:	je     0x41d743
  41d6da:	outs   dx,DWORD PTR ds:[rsi]
  41d6db:	outs   dx,BYTE PTR ds:[rsi]
  41d6dc:	jae    0x41d718
  41d6de:	add    BYTE PTR [rax+rbp*2+0x65],dl
  41d6e2:	jae    0x41d749
  41d6e4:	and    BYTE PTR [rcx+0x64],ah
  41d6e7:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x206c616e
  41d6f0:	outs   dx,DWORD PTR ds:[rsi]
  41d6f1:	jo     0x41d767
  41d6f3:	imul   ebp,DWORD PTR [rdi+0x6e],0x72612073
  41d6fa:	cmp    al,BYTE PTR gs:[rax]
  41d6fd:	xor    al,0x31
  41d6ff:	cmp    dh,BYTE PTR [rcx]
  41d701:	cmp    dh,BYTE PTR [rcx]
  41d703:	or     al,BYTE PTR ss:[rax]
	...
  41d73e:	add    BYTE PTR [rax],al
  41d740:	add    DWORD PTR [rax],eax
  41d742:	add    BYTE PTR [rax],al
  41d744:	add    al,BYTE PTR [rax]
  41d746:	add    BYTE PTR [rax],al
  41d748:	add    al,0x0
  41d74a:	add    BYTE PTR [rax],al
  41d74c:	or     BYTE PTR [rax],al
  41d74e:	add    BYTE PTR [rax],al
  41d750:	adc    BYTE PTR [rax],al
  41d752:	add    BYTE PTR [rax],al
  41d754:	and    BYTE PTR [rax],al
  41d756:	add    BYTE PTR [rax],al
  41d758:	add    BYTE PTR [rax],al
  41d75b:	add    BYTE PTR [rax+0x0],al
  41d761:	add    DWORD PTR [rax],eax
  41d763:	add    BYTE PTR [rax],al
  41d765:	add    al,BYTE PTR [rax]
  41d767:	add    BYTE PTR [rax],al
  41d769:	add    al,0x0
  41d76b:	add    BYTE PTR [rax],al
  41d76d:	or     BYTE PTR [rax],al
  41d76f:	add    BYTE PTR [rcx],al
  41d771:	or     al,0x0
  41d773:	add    BYTE PTR [rax],al
  41d775:	or     al,0x0
  41d777:	add    BYTE PTR [rax],al
  41d779:	adc    BYTE PTR [rax],al
  41d77b:	add    BYTE PTR [rax],al
  41d77d:	and    BYTE PTR [rax],al
  41d77f:	add    BYTE PTR [rax],al
  41d781:	add    BYTE PTR [rax],al
  41d784:	add    BYTE PTR [rax+0x0],al
  41d78a:	add    DWORD PTR [rax],eax
  41d78c:	add    BYTE PTR [rax],al
  41d78e:	add    eax,DWORD PTR [rax]
  41d790:	add    BYTE PTR [rax],al
  41d792:	(bad)  
  41d793:	add    BYTE PTR [rax],al
  41d795:	add    BYTE PTR [rax],cl
  41d797:	add    BYTE PTR [rax],al
  41d799:	add    BYTE PTR [rax],dl
  41d79b:	add    BYTE PTR [rax],al
  41d79d:	add    BYTE PTR [rax],bl
  41d79f:	add    BYTE PTR [rax],al
  41d7a1:	add    BYTE PTR [rbx],bl
  41d7a3:	add    BYTE PTR [rax+0x0],al
  41d7a6:	sbb    BYTE PTR [rax],al
  41d7a8:	add    BYTE PTR [rbx],bl
  41d7ab:	add    BYTE PTR [rax+0x0],al
  41d7ae:	cmp    eax,DWORD PTR [rax]
  41d7b0:	(bad)  
  41d7b1:	add    BYTE PTR [rbx],bh
  41d7b3:	add    BYTE PTR [rax],al
  41d7b5:	add    BYTE PTR [rax+0x0],al
  41d7b8:	(bad)  
  41d7b9:	add    al,0x7b
  41d7bb:	add    BYTE PTR [rax],al
  41d7bd:	xor    BYTE PTR [rax],al
  41d7bf:	add    BYTE PTR [rax],al
  41d7c1:	add    BYTE PTR [rax+0xc0100],al
  41d7c7:	add    DWORD PTR [rcx+0xc],eax
  41d7cd:	add    BYTE PTR [rax],al
  41d7cf:	add    al,BYTE PTR [rax]
  41d7d1:	add    BYTE PTR [rbx],bl
  41d7d3:	add    al,0xc
  41d7d5:	add    BYTE PTR [rbx],bl
  41d7d7:	add    al,0x2
  41d7d9:	add    BYTE PTR [rax],al
  41d7db:	or     BYTE PTR [rax+rax*1],al
  41d7de:	sbb    eax,DWORD PTR [rbx+rax*1]
  41d7e1:	or     al,0x0
  41d7e3:	add    BYTE PTR [rbx],dl
  41d7e5:	or     al,0x0
  41d7e7:	add    BYTE PTR [rbx],dl
  41d7e9:	or     al,0x0
  41d7eb:	adc    BYTE PTR [rax],al
  41d7ed:	add    BYTE PTR [rbx],0x0
  41d7f0:	add    DWORD PTR [rcx],eax
  41d7f2:	add    BYTE PTR [rax],al
  41d7f4:	add    BYTE PTR [rsi],al
	...
  41d7fe:	add    BYTE PTR [rax],al
  41d800:	add    al,BYTE PTR [rax]
	...
  41d81e:	add    BYTE PTR [rax],al
  41d820:	add    BYTE PTR [rax],cl
  41d822:	add    BYTE PTR [rax],al
  41d824:	add    BYTE PTR [rax+rax*1],al
  41d827:	add    BYTE PTR [rcx],al
  41d829:	add    BYTE PTR [rax],al
  41d82b:	add    BYTE PTR [rax],al
  41d82d:	or     BYTE PTR [rax],al
  41d82f:	add    BYTE PTR [rax],al
  41d831:	or     BYTE PTR [rax],al
  41d833:	add    BYTE PTR [rax],al
  41d835:	or     BYTE PTR [rax],al
	...
  41d87f:	add    BYTE PTR [rax],al
  41d881:	add    al,0x0
  41d883:	add    BYTE PTR [rax],al
  41d885:	rex add BYTE PTR [rdx],0x0
  41d889:	push   rax
  41d88a:	add    BYTE PTR [rdx],al
  41d88c:	add    BYTE PTR [rax+0x0],al
  41d88f:	add    al,BYTE PTR [rax]
  41d891:	add    BYTE PTR [r10],0x8
  41d895:	rex add BYTE PTR [rdx],0x0
  41d899:	rex add BYTE PTR [rdx],0x0
  41d89d:	push   rax
  41d89e:	add    BYTE PTR [rdx],al
  41d8a0:	add    BYTE PTR [rax+0x0],ah
  41d8a3:	add    al,BYTE PTR [rax]
  41d8a5:	(bad)  
  41d8a6:	add    BYTE PTR [rdx],al
  41d8a8:	add    BYTE PTR [rax+0x0],al
  41d8ab:	add    al,BYTE PTR [rax+0x10128040]
  41d8b1:	add    BYTE PTR [rdx],al
  41d8b4:	add    dl,al
  41d8b6:	movabs al,ds:0x80400406c0400006
  41d8bf:	add    eax,DWORD PTR [rax]
  41d8c1:	rex or DWORD PTR [rax],0x814000
  41d8c8:	add    BYTE PTR [rax-0x7f],al
  41d8cb:	add    BYTE PTR [rax],al
  41d8cd:	rex add DWORD PTR [rax],0x814000
  41d8d4:	add    BYTE PTR [rax-0x7f],al
  41d8d7:	add    BYTE PTR [rax],al
  41d8d9:	rex add DWORD PTR [rax],0x814000
  41d8e0:	add    BYTE PTR [rax-0x7e],al
  41d8e3:	add    BYTE PTR [rax],al
  41d8e5:	rex (bad) 
  41d8e7:	add    BYTE PTR [rax],ah
  41d8e9:	rex add BYTE PTR [rdx],0x0
  41d8ed:	add    BYTE PTR [rdx],al
  41d8f0:	add    BYTE PTR [rax+0x0],al
  41d8f3:	add    al,BYTE PTR [rax]
  41d8f5:	add    BYTE PTR [rdx],al
  41d8f8:	add    BYTE PTR [rax+0x0],al
  41d8fb:	add    eax,DWORD PTR [rax]
  41d8fd:	add    BYTE PTR [rdx],al
  41d900:	add    BYTE PTR [rax-0x80],al
  41d903:	add    al,BYTE PTR [rax]
  41d905:	rex xchg esp,eax
  41d907:	add    BYTE PTR [rax],al
  41d909:	rex xchg esp,eax
  41d90b:	add    BYTE PTR [rax],al
  41d90d:	rex xchg esp,eax
  41d90f:	add    BYTE PTR [rax],al
  41d911:	rex xchg esp,eax
  41d913:	add    BYTE PTR [rax],al
  41d915:	rex xchg esp,eax
  41d917:	add    BYTE PTR [rax],al
  41d919:	rex xchg esp,eax
  41d91b:	or     BYTE PTR [rax],al
  41d91d:	rex xchg eax,eax
  41d91f:	add    BYTE PTR [rax],al
  41d921:	rex xchg eax,eax
  41d923:	add    BYTE PTR [rax],al
  41d925:	rex xchg eax,eax
  41d927:	add    BYTE PTR [rax],al
  41d929:	rex xchg eax,eax
  41d92b:	add    BYTE PTR [rax],al
  41d92d:	rex xchg eax,eax
  41d92f:	add    BYTE PTR [rax],al
  41d931:	rex xchg eax,eax
  41d933:	add    BYTE PTR [rax],al
  41d935:	rex xchg eax,eax
  41d937:	add    BYTE PTR [rax],al
  41d939:	rex xchg eax,eax
  41d93b:	or     BYTE PTR [rax],al
  41d93d:	rex xchg eax,eax
  41d93f:	add    BYTE PTR [rax],al
  41d941:	rex xchg eax,eax
  41d943:	add    BYTE PTR [rax],al
  41d945:	rex xchg eax,eax
  41d947:	add    BYTE PTR [rax],al
  41d949:	rex xchg eax,eax
  41d94b:	add    BYTE PTR [rax],al
  41d94d:	rex xchg eax,eax
  41d94f:	add    BYTE PTR [rax],al
  41d951:	rex xchg eax,eax
  41d953:	add    BYTE PTR [rax],al
  41d955:	rex xchg eax,eax
  41d957:	add    BYTE PTR [rax],al
  41d959:	rex xchg eax,eax
  41d95b:	add    BYTE PTR [rax],al
  41d95d:	rex xchg eax,eax
  41d95f:	add    BYTE PTR [rax],al
  41d961:	rex xchg eax,eax
  41d963:	add    BYTE PTR [rax],al
  41d965:	rex xchg eax,eax
  41d967:	add    BYTE PTR [rax],al
  41d969:	rex xchg eax,eax
  41d96b:	add    BYTE PTR [rax],al
  41d96d:	rex
  41d96e:	add    al,BYTE PTR [rax+rax*2]
  41d972:	add    BYTE PTR [rdx],al
  41d974:	add    BYTE PTR [rax+0x40],al
  41d977:	add    al,BYTE PTR [rax]
  41d979:	movabs al,ds:0x40000480404002
  41d983:	add    al,BYTE PTR [rax]
  41d985:	rex mov WORD PTR [rax],es
  41d988:	add    BYTE PTR [rax-0x74],al
  41d98b:	add    BYTE PTR [rax],al
  41d98d:	rex mov WORD PTR [rax],es
  41d990:	add    BYTE PTR [rax-0x74],al
  41d993:	add    BYTE PTR [rax],al
  41d995:	rex mov WORD PTR [rax],es
  41d998:	add    BYTE PTR [rax-0x74],al
  41d99b:	or     BYTE PTR [rax],al
  41d99d:	mov    BYTE PTR [rax],al
  41d9a0:	add    BYTE PTR [rax-0x78],al
  41d9a3:	add    BYTE PTR [rax],al
  41d9a5:	mov    BYTE PTR [rax],al
  41d9a8:	add    BYTE PTR [rax-0x78],al
  41d9ab:	add    BYTE PTR [rax],al
  41d9ad:	mov    BYTE PTR [rax],al
  41d9b0:	add    BYTE PTR [rax-0x78],al
  41d9b3:	add    BYTE PTR [rax],al
  41d9b5:	mov    BYTE PTR [rax],al
  41d9b8:	add    BYTE PTR [rax-0x78],al
  41d9bb:	or     BYTE PTR [rax],al
  41d9bd:	mov    BYTE PTR [rax],al
  41d9c0:	add    BYTE PTR [rax-0x78],al
  41d9c3:	add    BYTE PTR [rax],al
  41d9c5:	mov    BYTE PTR [rax],al
  41d9c8:	add    BYTE PTR [rax-0x78],al
  41d9cb:	add    BYTE PTR [rax],al
  41d9cd:	mov    BYTE PTR [rax],al
  41d9d0:	add    BYTE PTR [rax-0x78],al
  41d9d3:	add    BYTE PTR [rax],al
  41d9d5:	mov    BYTE PTR [rax],al
  41d9d8:	add    BYTE PTR [rax-0x78],al
  41d9db:	add    BYTE PTR [rax],al
  41d9dd:	mov    BYTE PTR [rax],al
  41d9e0:	add    BYTE PTR [rax-0x78],al
  41d9e3:	add    BYTE PTR [rax],al
  41d9e5:	mov    BYTE PTR [rax],al
  41d9e8:	add    BYTE PTR [rax-0x78],al
  41d9eb:	add    BYTE PTR [rax],al
  41d9ed:	add    BYTE PTR [rdx],al
  41d9f0:	add    BYTE PTR [rax-0x80],al
  41d9f3:	adc    al,BYTE PTR [rax]
  41d9f5:	add    BYTE PTR [rdx],al
  41d9f8:	add    al,al
  41d9fa:	add    BYTE PTR [rdx],0x0
  41d9fd:	add    BYTE PTR [rax],al
  41d9ff:	add    BYTE PTR [rbp+0x19],dh
  41da02:	(bad)  
  41da03:	jmp    QWORD PTR [rdx+0x19]
  41da06:	(bad)  
  41da07:	push   QWORD PTR [rax]
  41da09:	adc    bh,bh
  41da0b:	push   QWORD PTR [rax]
  41da0d:	adc    bh,bh
  41da0f:	call   QWORD PTR [rax+0x19]
  41da12:	(bad)  
  41da13:	jmp    FWORD PTR [rbp+rdx*1+0x147cffff]
  41da1a:	(bad)  
  41da1b:	inc    DWORD PTR [rcx+0x5cffff15]
  41da21:	adc    eax,0x141cffff
  41da26:	(bad)  
  41da27:	jmp    FWORD PTR [rsi]
  41da29:	adc    bh,bh
  41da2b:	jmp    FWORD PTR [rsi]
  41da2d:	adc    bh,bh
  41da2f:	jmp    FWORD PTR [rsi]
  41da31:	adc    bh,bh
  41da33:	jmp    FWORD PTR [rsi]
  41da35:	adc    bh,bh
  41da37:	dec    DWORD PTR [rbx+rdx*1+0x138cffff]
  41da3e:	(bad)  
  41da3f:	call   FWORD PTR [rsi+0xcffff14]
  41da45:	adc    eax,0x122effff
  41da4a:	(bad)  
  41da4b:	call   FWORD PTR [rsp+rdx*1]
  41da4e:	(bad)  
  41da4f:	dec    DWORD PTR [rbx+rdx*1+0x138cffff]
  41da56:	(bad)  
  41da57:	dec    DWORD PTR [rbx+rdx*1+0x1adfffff]
  41da5e:	(bad)  
  41da5f:	jmp    QWORD PTR [rbp+rdx*1-0x1]
  41da63:	jmp    QWORD PTR [rbp+rdx*1-0x1]
  41da67:	jmp    QWORD PTR [rbp+rdx*1-0x1]
  41da6b:	(bad)  
  41da6c:	mov    edi,0xacffff1a
  41da71:	sbb    bh,bh
  41da73:	(bad)  
  41da74:	mov    edi,0x64ffff1a
  41da79:	adc    eax,0x1564ffff
  41da7e:	(bad)  
  41da7f:	jmp    QWORD PTR [rbp+rdx*1-0x1]
  41da83:	jmp    QWORD PTR [rbp+rdx*1-0x1]
  41da87:	jmp    QWORD PTR [rbp+rdx*1-0x1]
  41da8b:	jmp    QWORD PTR [rbp+rdx*1-0x1]
  41da8f:	jmp    QWORD PTR [rbp+rdx*1-0x1]
  41da93:	jmp    QWORD PTR [rbp+rdx*1-0x1]
  41da97:	jmp    QWORD PTR [rbp+rdx*1-0x1]
  41da9b:	jmp    QWORD PTR [rbp+rdx*1-0x1]
  41da9f:	jmp    QWORD PTR [rbp+rdx*1-0x1]
  41daa3:	jmp    QWORD PTR [rbp+rdx*1-0x1]
  41daa7:	jmp    QWORD PTR [rbp+rdx*1-0x1]
  41daab:	jmp    QWORD PTR [rbp+rdx*1-0x1]
  41daaf:	jmp    QWORD PTR [rbp+rdx*1-0x1]
  41dab3:	jmp    QWORD PTR [rbp+rdx*1-0x1]
  41dab7:	call   FWORD PTR [rcx+0x64ffff1a]
  41dabd:	adc    eax,0x1564ffff
  41dac2:	(bad)  
  41dac3:	jmp    QWORD PTR [rbp+rdx*1-0x1]
  41dac7:	jmp    QWORD PTR [rbp+rdx*1-0x1]
  41dacb:	jmp    QWORD PTR [rbp+rdx*1-0x1]
  41dacf:	jmp    QWORD PTR [rbp+rdx*1-0x1]
  41dad3:	jmp    QWORD PTR [rbp+rdx*1-0x1]
  41dad7:	jmp    QWORD PTR [rbp+rdx*1-0x1]
  41dadb:	(bad)  
  41dadc:	fistp  WORD PTR [rdx]
  41dade:	(bad)  
  41dadf:	jmp    QWORD PTR [rbp+rdx*1-0x1]
  41dae3:	push   QWORD PTR [rbp+0x1a]
  41dae6:	(bad)  
  41dae7:	dec    DWORD PTR [rbx+0x1a]
  41daea:	(bad)  
  41daeb:	(bad)  
  41daec:	mov    edi,0xacffff1a
  41daf1:	sbb    bh,bh
  41daf3:	(bad)  
  41daf4:	mov    edi,0x64ffff1a
  41daf9:	adc    eax,0x1a4bffff
  41dafe:	(bad)  
  41daff:	jmp    QWORD PTR [rbp+rdx*1-0x1]
  41db03:	jmp    QWORD PTR [rbp+rdx*1-0x1]
  41db07:	jmp    QWORD PTR [rbp+rdx*1-0x1]
  41db0b:	jmp    QWORD PTR [rbp+rdx*1-0x1]
  41db0f:	jmp    QWORD PTR [rbp+rdx*1-0x1]
  41db13:	push   QWORD PTR [rdi]
  41db15:	sbb    bh,bh
  41db17:	push   QWORD PTR [rax]
  41db19:	sbb    bh,bh
  41db1b:	jmp    QWORD PTR [rbp+rdx*1-0x1]
  41db1f:	jmp    QWORD PTR [rbp+rdx*1-0x1]
  41db23:	jmp    QWORD PTR [rcx+0x64ffff19]
  41db29:	adc    eax,0x1a4bffff
  41db2e:	(bad)  
  41db2f:	jmp    QWORD PTR [rbp+rdx*1-0x1]
  41db33:	jmp    QWORD PTR [rbp+rdx*1-0x1]
  41db37:	call   FWORD PTR [rcx+0xffff1a]
  41db3d:	add    BYTE PTR [rax],al
  41db3f:	add    BYTE PTR [rax],ch
  41db41:	rex.WRX push rbp
  41db43:	rex.WR
  41db44:	sub    QWORD PTR [rax],r8
  41db47:	add    ah,bl
  41db49:	and    eax,0x2568ffff
  41db4e:	(bad)  
  41db4f:	jmp    FWORD PTR [rax+0x25]
  41db52:	(bad)  
  41db53:	call   FWORD PTR [rax+0x25]
  41db56:	(bad)  
  41db57:	call   FWORD PTR [rax+0x25]
  41db5a:	(bad)  
  41db5b:	dec    DWORD PTR [rax+0x25]
  41db5e:	(bad)  
  41db5f:	dec    DWORD PTR [rax+0x25]
  41db62:	(bad)  
  41db63:	dec    DWORD PTR [rax+0x25]
  41db66:	(bad)  
  41db67:	dec    DWORD PTR [rax+0x25]
  41db6a:	(bad)  
  41db6b:	jmp    FWORD PTR [rax]
  41db6d:	and    eax,0x2528ffff
  41db72:	(bad)  
  41db73:	(bad)  
  41db74:	js     0x41db9b
  41db76:	(bad)  
  41db77:	dec    DWORD PTR [rax+0x48ffff25]
  41db7d:	and    eax,0x2558ffff
  41db82:	(bad)  
  41db83:	call   FWORD PTR [rax-0x470000db]
  41db89:	and    eax,0x2528ffff
  41db8e:	(bad)  
  41db8f:	jmp    FWORD PTR [rax]
  41db91:	and    eax,0x2528ffff
  41db96:	(bad)  
  41db97:	jmp    FWORD PTR [rax]
  41db99:	and    eax,0x2528ffff
  41db9e:	(bad)  
  41db9f:	jmp    FWORD PTR [rax]
  41dba1:	and    eax,0x28ffff
  41dba6:	rex.WRX add BYTE PTR [rbp+0x0],r10b
  41dbaa:	rex.WR add BYTE PTR [rax+rax*1+0x29],r9b
	...
  41dbbf:	add    BYTE PTR [rdi+0x2f],bh
  41dbc2:	(bad)  
  41dbc3:	(bad)  
  41dbc4:	(bad)  
  41dbc5:	sub    bh,bh
  41dbc7:	(bad)  
  41dbc8:	(bad)  
  41dbc9:	sub    bh,bh
  41dbcb:	(bad)  
  41dbcc:	(bad)  
  41dbcd:	sub    bh,bh
  41dbcf:	(bad)  
  41dbd0:	(bad)  
  41dbd1:	sub    bh,bh
  41dbd3:	(bad)  
  41dbd4:	(bad)  
  41dbd5:	sub    bh,bh
  41dbd7:	(bad)  
  41dbd8:	(bad)  
  41dbd9:	sub    bh,bh
  41dbdb:	(bad)  
  41dbdc:	(bad)  
  41dbdd:	sub    bh,bh
  41dbdf:	(bad)  
  41dbe0:	(bad)  
  41dbe1:	sub    bh,bh
  41dbe3:	(bad)  
  41dbe4:	(bad)  
  41dbe5:	sub    bh,bh
  41dbe7:	(bad)  
  41dbe8:	(bad)  
  41dbe9:	sub    bh,bh
  41dbeb:	(bad)  
  41dbec:	(bad)  
  41dbed:	sub    bh,bh
  41dbef:	(bad)  
  41dbf0:	(bad)  
  41dbf1:	sub    bh,bh
  41dbf3:	(bad)  
  41dbf4:	(bad)  
  41dbf5:	sub    bh,bh
  41dbf7:	(bad)  
  41dbf8:	(bad)  
  41dbf9:	sub    bh,bh
  41dbfb:	(bad)  
  41dbfc:	(bad)  
  41dbfd:	sub    bh,bh
  41dbff:	(bad)  
  41dc00:	(bad)  
  41dc01:	sub    bh,bh
  41dc03:	(bad)  
  41dc04:	(bad)  
  41dc05:	sub    bh,bh
  41dc07:	(bad)  
  41dc08:	(bad)  
  41dc09:	sub    bh,bh
  41dc0b:	(bad)  
  41dc0c:	(bad)  
  41dc0d:	sub    bh,bh
  41dc0f:	(bad)  
  41dc10:	(bad)  
  41dc11:	sub    bh,bh
  41dc13:	(bad)  
  41dc14:	(bad)  
  41dc15:	sub    bh,bh
  41dc17:	(bad)  
  41dc18:	(bad)  
  41dc19:	sub    bh,bh
  41dc1b:	(bad)  
  41dc1c:	(bad)  
  41dc1d:	sub    bh,bh
  41dc1f:	(bad)  
  41dc20:	(bad)  
  41dc21:	sub    bh,bh
  41dc23:	(bad)  
  41dc24:	(bad)  
  41dc25:	sub    bh,bh
  41dc27:	(bad)  
  41dc28:	(bad)  
  41dc29:	sub    bh,bh
  41dc2b:	(bad)  
  41dc2c:	(bad)  
  41dc2d:	sub    bh,bh
  41dc2f:	jmp    rax
  41dc31:	sub    bh,bh
  41dc33:	(bad)  
  41dc34:	(bad)  
  41dc35:	sub    bh,bh
  41dc37:	jmp    FWORD PTR [rdi+0x2f]
  41dc3a:	(bad)  
  41dc3b:	(bad)  
  41dc3c:	(bad)  
  41dc3d:	sub    bh,bh
  41dc3f:	jmp    rax
  41dc41:	sub    bh,bh
  41dc43:	jmp    rax
  41dc45:	sub    bh,bh
  41dc47:	jmp    rax
  41dc49:	sub    bh,bh
  41dc4b:	(bad)  
  41dc4c:	(bad)  
  41dc4d:	sub    bh,bh
  41dc4f:	(bad)  
  41dc50:	(bad)  
  41dc51:	sub    bh,bh
  41dc53:	(bad)  
  41dc54:	(bad)  
  41dc55:	sub    bh,bh
  41dc57:	(bad)  
  41dc58:	(bad)  
  41dc59:	sub    bh,bh
  41dc5b:	(bad)  
  41dc5c:	(bad)  
  41dc5d:	sub    bh,bh
  41dc5f:	(bad)  
  41dc60:	(bad)  
  41dc61:	sub    bh,bh
  41dc63:	(bad)  
  41dc64:	(bad)  
  41dc65:	sub    bh,bh
  41dc67:	(bad)  
  41dc68:	(bad)  
  41dc69:	sub    bh,bh
  41dc6b:	(bad)  
  41dc6c:	(bad)  
  41dc6d:	sub    bh,bh
  41dc6f:	(bad)  
  41dc70:	(bad)  
  41dc71:	sub    bh,bh
  41dc73:	(bad)  
  41dc74:	(bad)  
  41dc75:	sub    bh,bh
  41dc77:	call   QWORD PTR [rbx+0x3fffff2f]
  41dc7d:	sub    bh,bh
  41dc7f:	(bad)  
  41dc80:	(bad)  
  41dc81:	sub    bh,bh
  41dc83:	(bad)  
  41dc84:	(bad)  
  41dc85:	sub    bh,bh
  41dc87:	(bad)  
  41dc88:	(bad)  
  41dc89:	sub    bh,bh
  41dc8b:	jmp    FWORD PTR [rax]
  41dc8d:	sub    al,0xff
  41dc8f:	(bad)  
  41dc90:	(bad)  
  41dc91:	sub    bh,bh
  41dc93:	(bad)  
  41dc94:	(bad)  
  41dc95:	sub    bh,bh
  41dc97:	(bad)  
  41dc98:	(bad)  
  41dc99:	sub    bh,bh
  41dc9b:	(bad)  
  41dc9c:	(bad)  
  41dc9d:	sub    bh,bh
  41dc9f:	(bad)  
  41dca0:	(bad)  
  41dca1:	sub    bh,bh
  41dca3:	(bad)  
  41dca4:	(bad)  
  41dca5:	sub    bh,bh
  41dca7:	(bad)  
  41dca8:	(bad)  
  41dca9:	sub    bh,bh
  41dcab:	(bad)  
  41dcac:	(bad)  
  41dcad:	sub    bh,bh
  41dcaf:	jmp    rax
  41dcb1:	sub    bh,bh
  41dcb3:	(bad)  
  41dcb4:	(bad)  
  41dcb5:	sub    bh,bh
  41dcb7:	call   QWORD PTR [rbx]
  41dcb9:	sub    al,0xff
  41dcbb:	dec    ebp
  41dcbd:	sub    edi,edi
  41dcbf:	jmp    rax
  41dcc1:	sub    bh,bh
  41dcc3:	jmp    rax
  41dcc5:	sub    bh,bh
  41dcc7:	jmp    rax
  41dcc9:	sub    bh,bh
  41dccb:	(bad)  
  41dccc:	(bad)  
  41dccd:	sub    bh,bh
  41dccf:	dec    ebp
  41dcd1:	sub    edi,edi
  41dcd3:	(bad)  
  41dcd4:	(bad)  
  41dcd5:	sub    bh,bh
  41dcd7:	(bad)  
  41dcd8:	(bad)  
  41dcd9:	sub    bh,bh
  41dcdb:	(bad)  
  41dcdc:	(bad)  
  41dcdd:	sub    bh,bh
  41dcdf:	(bad)  
  41dce0:	(bad)  
  41dce1:	sub    bh,bh
  41dce3:	dec    DWORD PTR [rdx+0x28ffff2b]
  41dce9:	sub    al,0xff
  41dceb:	inc    DWORD PTR [rsi+0x3fffff2f]
  41dcf1:	sub    bh,bh
  41dcf3:	(bad)  
  41dcf4:	(bad)  
  41dcf5:	sub    bh,bh
  41dcf7:	push   QWORD PTR [rbp+0x2b]
  41dcfa:	(bad)  
  41dcfb:	(bad)  
  41dcfc:	(bad)  
  41dcfd:	sub    bh,bh
  41dcff:	jmp    FWORD PTR [rax]
  41dd01:	sub    al,0xff
  41dd03:	(bad)  
  41dd04:	(bad)  
  41dd05:	sub    bh,bh
  41dd07:	(bad)  
  41dd08:	(bad)  
  41dd09:	sub    bh,bh
  41dd0b:	jmp    FWORD PTR [rax]
  41dd0d:	sub    al,0xff
  41dd0f:	inc    DWORD PTR [rax+0x18]
  41dd12:	rex.X add BYTE PTR [rax],al
  41dd15:	add    BYTE PTR [rax],al
  41dd17:	add    BYTE PTR [rax+0x13],al
  41dd1a:	rex.X add BYTE PTR [rax],al
  41dd1d:	add    BYTE PTR [rax],al
  41dd1f:	add    BYTE PTR [rax+0x11],al
  41dd22:	add    BYTE PTR [r8],al
	...
  41dd2d:	add    BYTE PTR [rax],al
  41dd2f:	add    BYTE PTR [rcx+0x72],al
  41dd32:	addr32 jne 0x41dda2
  41dd35:	outs   dx,BYTE PTR gs:[rsi]
  41dd37:	je     0x41dd59
  41dd39:	outs   dx,DWORD PTR fs:[rsi]
  41dd3b:	ins    DWORD PTR es:[rdi],dx
  41dd3c:	(bad)  
  41dd3d:	imul   ebp,DWORD PTR [rsi+0x20],0x6f727265
  41dd44:	jb     0x41dd66
  41dd46:	sub    BYTE PTR [rdi+rcx*2+0x4d],al
  41dd4a:	rex.B
  41dd4b:	rex.WB
  41dd4c:	rex.WRX sub QWORD PTR [rax],r8
  41dd4f:	rex.B jb 0x41ddb9
  41dd52:	jne    0x41ddc1
  41dd54:	outs   dx,BYTE PTR gs:[rsi]
  41dd56:	je     0x41dd78
  41dd58:	jae    0x41ddc3
  41dd5a:	outs   dx,BYTE PTR ds:[rsi]
  41dd5b:	addr32 jne 0x41ddca
  41dd5e:	(bad)  
  41dd5f:	jb     0x41ddca
  41dd61:	je     0x41dddc
  41dd63:	and    BYTE PTR [rax],ch
  41dd65:	push   rbx
  41dd66:	rex.WB
  41dd67:	rex.RXB
  41dd68:	rex.WRX sub QWORD PTR [rax],r8
  41dd6b:	add    BYTE PTR [rax],al
  41dd6d:	add    BYTE PTR [rax],al
  41dd6f:	add    BYTE PTR [rdi+0x76],cl
  41dd72:	gs jb  0x41dddb
  41dd75:	ins    BYTE PTR es:[rdi],dx
  41dd76:	outs   dx,DWORD PTR ds:[rsi]
  41dd77:	ja     0x41dd99
  41dd79:	jb     0x41dddc
  41dd7b:	outs   dx,BYTE PTR ds:[rsi]
  41dd7c:	and    BYTE PTR gs:[ebp+0x72],ah
  41dd81:	jb     0x41ddf2
  41dd83:	jb     0x41dda5
  41dd85:	sub    BYTE PTR [rdi+0x56],cl
  41dd88:	rex.RB push r10
  41dd8a:	rex.RX
  41dd8b:	rex.WR
  41dd8c:	rex.WRXB push r15
  41dd8e:	sub    DWORD PTR [rax],eax
  41dd90:	push   rax
  41dd91:	(bad)  
  41dd92:	jb     0x41de08
  41dd94:	imul   esp,DWORD PTR [rcx+0x6c],0x736f6c20
  41dd9b:	jae    0x41ddbd
  41dd9d:	outs   dx,DWORD PTR ds:[rsi]
  41dd9e:	data16 and BYTE PTR [rbx+0x69],dh
  41dda2:	outs   dx,BYTE PTR ds:[esi]
  41dda4:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  41ddab:	and    BYTE PTR gs:[rax],ch
  41ddae:	push   rax
  41ddaf:	rex.WR
  41ddb0:	rex.WRXB push r11
  41ddb2:	push   rbx
  41ddb3:	sub    DWORD PTR [rax],eax
  41ddb5:	add    BYTE PTR [rax],al
  41ddb7:	add    BYTE PTR [rdi+rbp*2+0x74],dl
  41ddbb:	(bad)  
  41ddbc:	ins    BYTE PTR es:[rdi],dx
  41ddbd:	and    BYTE PTR [rdi+rbp*2+0x73],ch
  41ddc1:	jae    0x41dde3
  41ddc3:	outs   dx,DWORD PTR ds:[rsi]
  41ddc4:	data16 and BYTE PTR [rbx+0x69],dh
  41ddc8:	outs   dx,BYTE PTR ds:[esi]
  41ddca:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  41ddd1:	and    BYTE PTR gs:[rax],ch
  41ddd4:	push   rsp
  41ddd5:	rex.WR
  41ddd6:	rex.WRXB push r11
  41ddd8:	push   rbx
  41ddd9:	sub    DWORD PTR [rax],eax
  41dddb:	add    BYTE PTR [rax],al
  41dddd:	add    BYTE PTR [rax],al
  41dddf:	add    BYTE PTR [rax+rbp*2+0x65],dl
  41dde3:	and    BYTE PTR [rdx+0x65],dh
  41dde6:	jae    0x41de5d
  41dde8:	ins    BYTE PTR es:[rdi],dx
  41dde9:	je     0x41de0b
  41ddeb:	imul   esi,DWORD PTR [rbx+0x20],0x206f6f74
  41ddf2:	jae    0x41de61
  41ddf4:	(bad)  
  41ddf5:	ins    BYTE PTR es:[rdi],dx
  41ddf6:	ins    BYTE PTR es:[rdi],dx
  41ddf7:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  41ddfb:	(bad)  
  41ddfc:	and    BYTE PTR gs:[rdx+0x65],dh
  41de00:	jo     0x41de74
  41de02:	gs jae 0x41de6a
  41de05:	outs   dx,BYTE PTR ds:[rsi]
  41de06:	je     0x41de6d
  41de08:	and    BYTE PTR fs:[rax],ch
  41de0b:	push   rbp
  41de0c:	rex.WRX
  41de0d:	rex.R
  41de0e:	rex.RB push r10
  41de10:	rex.RX
  41de11:	rex.WR
  41de12:	rex.WRXB push r15
  41de14:	sub    DWORD PTR [rax],eax
  41de16:	push   rbp
  41de17:	outs   dx,BYTE PTR ds:[rsi]
  41de18:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  41de1c:	outs   dx,BYTE PTR ds:[rsi]
  41de1d:	and    BYTE PTR [rbp+0x72],ah
  41de20:	jb     0x41de91
  41de22:	jb     0x41de24
  41de24:	add    BYTE PTR [rax],al
  41de26:	add    BYTE PTR [rax],al
  41de28:	pop    rdi
  41de29:	ins    DWORD PTR es:[rdi],dx
  41de2a:	(bad)  
  41de2b:	je     0x41de95
  41de2d:	gs jb  0x41dea2
  41de30:	sub    BYTE PTR [rcx],ch
  41de32:	cmp    ah,BYTE PTR [rax]
  41de34:	and    eax,0x6e692073
  41de39:	and    BYTE PTR [rip+0x67252873],ah        # 0x676706b2
  41de3f:	sub    al,0x20
  41de41:	and    eax,0x20202967
  41de46:	sub    BYTE PTR [rdx+0x65],dh
  41de49:	je     0x41dec1
  41de4b:	(bad)  
  41de4c:	ins    BYTE PTR es:[rdi],dx
  41de4d:	cmp    eax,0xa296725
  41de52:	add    BYTE PTR [rax],al
  41de54:	mov    esp,0xfdffff34
  41de59:	xor    edi,edi
  41de5b:	jmp    FWORD PTR [rsp+rsi*1-0x1]
  41de5f:	(bad)  
  41de60:	jl     0x41de96
  41de62:	(bad)  
  41de63:	dec    DWORD PTR [rsp+rsi*1+0x349cffff]
  41de6a:	(bad)  
  41de6b:	jmp    FWORD PTR [rsp+rsi*1+0x694dffff]
  41de72:	outs   dx,BYTE PTR ds:[rsi]
  41de73:	addr32 ja 0x41dea3
  41de76:	ja     0x41deae
  41de78:	xor    al,0x20
  41de7a:	jb     0x41def1
  41de7c:	outs   dx,BYTE PTR ds:[rsi]
  41de7d:	je     0x41dee8
  41de7f:	ins    DWORD PTR es:[rdi],dx
  41de80:	and    BYTE PTR gs:[rsi+0x61],ah
  41de84:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0xa3a65
  41de8c:	add    BYTE PTR [rax],al
  41de8e:	add    BYTE PTR [rax],al
  41de90:	rex.B
  41de91:	fs fs jb 0x41defa
  41de95:	jae    0x41df0a
  41de97:	and    BYTE PTR [rip+0x61682070],ah        # 0x61a9ff0d
  41de9d:	jae    0x41debf
  41de9f:	outs   dx,BYTE PTR ds:[rsi]
  41dea0:	outs   dx,DWORD PTR ds:[rsi]
  41dea1:	and    BYTE PTR [rcx+0x6d],ch
  41dea4:	(bad)  
  41dea5:	addr32 gs sub eax,0x74636573
  41deac:	imul   ebp,DWORD PTR [rdi+0x6e],0x56202000
  41deb3:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  41deba:	jne    0x41df21
  41debc:	jb     0x41df37
  41debe:	and    BYTE PTR [rsi+0x61],ah
  41dec1:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x726f6620
  41dec9:	and    BYTE PTR [rip+0x79622064],ah        # 0x79a3ff33
  41decf:	je     0x41df36
  41ded1:	jae    0x41def3
  41ded3:	(bad)  
  41ded4:	je     0x41def6
  41ded6:	(bad)  
  41ded7:	fs fs jb 0x41df40
  41dedb:	jae    0x41df50
  41dedd:	and    BYTE PTR [rip+0x70],ah        # 0x41df53
  41dee3:	add    BYTE PTR [rax],al
  41dee5:	add    BYTE PTR [rax],al
  41dee7:	add    BYTE PTR [rax],ah
  41dee9:	and    BYTE PTR [rsi+0x69],dl
  41deec:	jb     0x41df62
  41deee:	jne    0x41df51
  41def0:	ins    BYTE PTR es:[rdi],dx
  41def1:	push   rax
  41def2:	jb     0x41df63
  41def4:	je     0x41df5b
  41def6:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
  41defa:	(bad)  
  41defb:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
  41df03:	push   0x646f6320
  41df08:	and    BYTE PTR gs:[rax],dh
  41df0b:	js     0x41df32
  41df0d:	js     0x41df0f
  41df0f:	add    BYTE PTR [rax],ah
  41df11:	and    BYTE PTR [rbp+0x6e],dl
  41df14:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  41df18:	outs   dx,BYTE PTR ds:[rsi]
  41df19:	and    BYTE PTR [rax+0x73],dh
  41df1c:	gs jne 0x41df83
  41df1f:	outs   dx,DWORD PTR ds:[rsi]
  41df20:	and    BYTE PTR [rdx+0x65],dh
  41df23:	ins    BYTE PTR es:[rdi],dx
  41df24:	outs   dx,DWORD PTR ds:[rsi]
  41df25:	movsxd esp,DWORD PTR [rcx+0x74]
  41df28:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727020
  41df2f:	je     0x41dfa0
  41df31:	movsxd ebp,DWORD PTR [rdi+0x6c]
  41df34:	and    BYTE PTR [rsi+0x65],dh
  41df37:	jb     0x41dfac
  41df39:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  41df40:	or     al,BYTE PTR [rax]
  41df42:	add    BYTE PTR [rax],al
  41df44:	add    BYTE PTR [rax],al
  41df46:	add    BYTE PTR [rax],al
  41df48:	and    BYTE PTR [rax],ah
  41df4a:	push   rbp
  41df4b:	outs   dx,BYTE PTR ds:[rsi]
  41df4c:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  41df50:	outs   dx,BYTE PTR ds:[rsi]
  41df51:	and    BYTE PTR [rax+0x73],dh
  41df54:	gs jne 0x41dfbb
  41df57:	outs   dx,DWORD PTR ds:[rsi]
  41df58:	and    BYTE PTR [rdx+0x65],dh
  41df5b:	ins    BYTE PTR es:[rdi],dx
  41df5c:	outs   dx,DWORD PTR ds:[rsi]
  41df5d:	movsxd esp,DWORD PTR [rcx+0x74]
  41df60:	imul   ebp,DWORD PTR [rdi+0x6e],0x74696220
  41df67:	and    BYTE PTR [rbx+0x69],dh
  41df6a:	jp     0x41dfd1
  41df6c:	and    BYTE PTR [rip+0xa2e64],ah        # 0x4c0dd6
	...
  41df7e:	add    BYTE PTR [rax],al
  41df80:	cs jo  0x41dfe7
  41df83:	(bad)  
  41df84:	je     0x41dfe7
	...
  41df8e:	add    BYTE PTR [rax],al
  41df90:	cmp    al,0x0
  41df92:	jne    0x41df94
  41df94:	outs   dx,BYTE PTR ds:[rsi]
  41df95:	add    BYTE PTR [rbx+0x0],ch
  41df98:	outs   dx,BYTE PTR ds:[rsi]
  41df99:	add    BYTE PTR [rdi+0x0],ch
  41df9c:	ja     0x41df9e
  41df9e:	outs   dx,BYTE PTR ds:[rsi]
  41df9f:	add    BYTE PTR [rsi],bh
  41dfa1:	add    BYTE PTR [rax],al
  41dfa3:	add    BYTE PTR [rdi],bh
  41dfa5:	add    BYTE PTR [rax],al
  41dfa7:	add    BYTE PTR [rcx+0x0],al
  41dfaa:	jae    0x41dfac
  41dfac:	jae    0x41dfae
  41dfae:	add    BYTE PTR gs:[rdx+0x0],dh
  41dfb2:	je     0x41dfb4
  41dfb4:	imul   eax,DWORD PTR [rax],0x6e006f
  41dfba:	and    BYTE PTR [rax],al
  41dfbc:	data16 add BYTE PTR [rcx+0x0],ah
  41dfc0:	imul   eax,DWORD PTR [rax],0x65006c
  41dfc6:	add    BYTE PTR fs:[rcx],ah
  41dfc9:	add    BYTE PTR [rdx],cl
  41dfcb:	add    BYTE PTR [rdx],cl
  41dfcd:	add    BYTE PTR [rax+0x0],dl
  41dfd0:	jb     0x41dfd2
  41dfd2:	outs   dx,DWORD PTR ds:[rsi]
  41dfd3:	add    BYTE PTR [rdi+0x0],ah
  41dfd6:	jb     0x41dfd8
  41dfd8:	(bad)  
  41dfd9:	add    BYTE PTR [rbp+0x0],ch
  41dfdc:	cmp    al,BYTE PTR [rax]
  41dfde:	and    BYTE PTR [rax],al
  41dfe0:	and    eax,0x73007700
  41dfe5:	add    BYTE PTR [rdx],cl
  41dfe7:	add    BYTE PTR [rsi+0x0],al
  41dfea:	imul   eax,DWORD PTR [rax],0x65006c
  41dff0:	cmp    al,BYTE PTR [rax]
  41dff2:	and    BYTE PTR [rax],al
  41dff4:	and    eax,0x73007700
  41dff9:	add    BYTE PTR [rax+rax*1],ch
  41dffc:	and    BYTE PTR [rax],al
  41dffe:	rex.WR add BYTE PTR [rcx+0x0],r13b
  41e002:	outs   dx,BYTE PTR ds:[rsi]
  41e003:	add    BYTE PTR [rbp+0x0],ah
  41e006:	and    BYTE PTR [rax],al
  41e008:	and    eax,0xa007500
  41e00d:	add    BYTE PTR [rdx],cl
  41e00f:	add    BYTE PTR [rbp+0x0],al
  41e012:	js     0x41e014
  41e014:	jo     0x41e016
  41e016:	jb     0x41e018
  41e018:	add    BYTE PTR gs:[rbx+0x0],dh
  41e01c:	jae    0x41e01e
  41e01e:	imul   eax,DWORD PTR [rax],0x6e006f
  41e024:	cmp    al,BYTE PTR [rax]
  41e026:	and    BYTE PTR [rax],al
  41e028:	and    eax,0x73007700
  41e02d:	add    BYTE PTR [rax],al
  41e02f:	add    BYTE PTR [rip+0x73007700],ah        # 0x73425735
  41e035:	add    BYTE PTR [rdx],cl
	...
  41e03f:	add    BYTE PTR [rbp+0x0],cl
  41e042:	imul   eax,DWORD PTR [rax],0x47006e
  41e048:	push   rdi
  41e049:	add    BYTE PTR [rax],ah
  41e04b:	add    BYTE PTR [rdx+0x0],dl
  41e04e:	jne    0x41e050
  41e050:	outs   dx,BYTE PTR ds:[rsi]
  41e051:	add    BYTE PTR [rax+rax*1+0x69],dh
  41e055:	add    BYTE PTR [rbp+0x0],ch
  41e058:	add    BYTE PTR gs:[rax],ah
  41e05b:	add    BYTE PTR [rcx+0x0],al
  41e05e:	jae    0x41e060
  41e060:	jae    0x41e062
  41e062:	add    BYTE PTR gs:[rdx+0x0],dh
  41e066:	je     0x41e068
  41e068:	imul   eax,DWORD PTR [rax],0x6e006f
  41e06e:	add    BYTE PTR [rax],al
  41e070:	rex.WRX (bad) 
  41e072:	rex.WRX add BYTE PTR [rcx+0x6e],r9b
  41e076:	data16 add BYTE PTR [rax],ch
  41e079:	add    BYTE PTR [rsi+0x0],ch
  41e07c:	jne    0x41e07e
  41e07e:	ins    BYTE PTR es:[rdi],dx
  41e07f:	add    BYTE PTR [rax+rax*1+0x29],ch
  41e083:	add    BYTE PTR [rax],al
  41e085:	add    BYTE PTR [rax],ch
  41e087:	outs   dx,BYTE PTR ds:[rsi]
  41e088:	jne    0x41e0f6
  41e08a:	ins    BYTE PTR es:[rdi],dx
  41e08b:	sub    DWORD PTR [rax],eax
  41e08d:	push   rax
  41e08e:	push   rdx
  41e08f:	rex.WB
  41e090:	rex.WRX push rsp
  41e092:	rex.RX pop rdi
  41e094:	rex.RB pop r8
  41e096:	push   rax
  41e097:	rex.WRXB
  41e098:	rex.WRX
  41e099:	rex.RB
  41e09a:	rex.WRX push rsp
  41e09c:	pop    rdi
  41e09d:	rex.R
  41e09e:	rex.WB
  41e09f:	rex.RXB
  41e0a0:	rex.WB push r12
  41e0a2:	push   rbx
  41e0a3:	add    BYTE PTR [rsp+rbp*2-0x1],ch
  41e0a7:	(bad)  
  41e0a8:	in     al,dx
  41e0a9:	ins    BYTE PTR es:[rdi],dx
  41e0aa:	(bad)  
  41e0ab:	(bad)  
  41e0ac:	in     al,dx
  41e0ad:	ins    BYTE PTR es:[rdi],dx
  41e0ae:	(bad)  
  41e0af:	dec    DWORD PTR [rsp+rbp*2-0x1]
  41e0b3:	(bad)  
  41e0b4:	in     al,dx
  41e0b5:	ins    BYTE PTR es:[rdi],dx
  41e0b6:	(bad)  
  41e0b7:	call   FWORD PTR [rsi-0x13000094]
  41e0bd:	ins    BYTE PTR es:[rdi],dx
  41e0be:	(bad)  
  41e0bf:	dec    DWORD PTR [rsp+rbp*2+0x6cecffff]
  41e0c6:	(bad)  
  41e0c7:	(bad)  
  41e0c8:	in     al,dx
  41e0c9:	ins    BYTE PTR es:[rdi],dx
  41e0ca:	(bad)  
  41e0cb:	jmp    FWORD PTR [rsp+rbp*2+0x6c2cffff]
  41e0d2:	(bad)  
  41e0d3:	(bad)  
  41e0d4:	in     al,dx
  41e0d5:	ins    BYTE PTR es:[rdi],dx
  41e0d6:	(bad)  
  41e0d7:	dec    DWORD PTR [rsp+rbp*2]
  41e0da:	(bad)  
  41e0db:	(bad)  
  41e0dc:	in     al,dx
  41e0dd:	imul   edi,edi,0xffffffff
  41e0e0:	in     al,dx
  41e0e1:	ins    BYTE PTR es:[rdi],dx
  41e0e2:	(bad)  
  41e0e3:	dec    esp
  41e0e5:	imul   edi,edi,0xffffffff
  41e0e8:	in     al,dx
  41e0e9:	ins    BYTE PTR es:[rdi],dx
  41e0ea:	(bad)  
  41e0eb:	(bad)  
  41e0ec:	in     al,dx
  41e0ed:	ins    BYTE PTR es:[rdi],dx
  41e0ee:	(bad)  
  41e0ef:	(bad)  
  41e0f0:	in     al,dx
  41e0f1:	ins    BYTE PTR es:[rdi],dx
  41e0f2:	(bad)  
  41e0f3:	(bad)  
  41e0f4:	in     al,dx
  41e0f5:	ins    BYTE PTR es:[rdi],dx
  41e0f6:	(bad)  
  41e0f7:	(bad)  
  41e0f8:	in     al,dx
  41e0f9:	ins    BYTE PTR es:[rdi],dx
  41e0fa:	(bad)  
  41e0fb:	(bad)  
  41e0fc:	in     al,dx
  41e0fd:	ins    BYTE PTR es:[rdi],dx
  41e0fe:	(bad)  
  41e0ff:	(bad)  
  41e100:	in     al,dx
  41e101:	ins    BYTE PTR es:[rdi],dx
  41e102:	(bad)  
  41e103:	(bad)  
  41e104:	in     al,dx
  41e105:	ins    BYTE PTR es:[rdi],dx
  41e106:	(bad)  
  41e107:	(bad)  
  41e108:	in     al,dx
  41e109:	ins    BYTE PTR es:[rdi],dx
  41e10a:	(bad)  
  41e10b:	(bad)  
  41e10c:	in     al,dx
  41e10d:	ins    BYTE PTR es:[rdi],dx
  41e10e:	(bad)  
  41e10f:	(bad)  
  41e110:	in     al,dx
  41e111:	ins    BYTE PTR es:[rdi],dx
  41e112:	(bad)  
  41e113:	(bad)  
  41e114:	in     al,dx
  41e115:	ins    BYTE PTR es:[rdi],dx
  41e116:	(bad)  
  41e117:	(bad)  
  41e118:	in     al,dx
  41e119:	ins    BYTE PTR es:[rdi],dx
  41e11a:	(bad)  
  41e11b:	(bad)  
  41e11c:	in     al,dx
  41e11d:	ins    BYTE PTR es:[rdi],dx
  41e11e:	(bad)  
  41e11f:	(bad)  
  41e120:	in     al,dx
  41e121:	ins    BYTE PTR es:[rdi],dx
  41e122:	(bad)  
  41e123:	(bad)  
  41e124:	in     al,dx
  41e125:	ins    BYTE PTR es:[rdi],dx
  41e126:	(bad)  
  41e127:	call   FWORD PTR [rsi-0x13000095]
  41e12d:	ins    BYTE PTR es:[rdi],dx
  41e12e:	(bad)  
  41e12f:	jmp    FWORD PTR [rbx+rbp*2-0x1]
  41e133:	(bad)  
  41e134:	in     al,dx
  41e135:	ins    BYTE PTR es:[rdi],dx
  41e136:	(bad)  
  41e137:	(bad)  
  41e138:	cmp    eax,0xfffff6b
  41e13d:	imul   edi,edi,0xffffffff
  41e140:	loope  0x41e1ac
  41e142:	(bad)  
  41e143:	(bad)  
  41e144:	in     al,dx
  41e145:	ins    BYTE PTR es:[rdi],dx
  41e146:	(bad)  
  41e147:	(bad)  
  41e148:	mov    esp,0xecffff6a
  41e14d:	ins    BYTE PTR es:[rdi],dx
  41e14e:	(bad)  
  41e14f:	(bad)  
  41e150:	in     al,dx
  41e151:	ins    BYTE PTR es:[rdi],dx
  41e152:	(bad)  
  41e153:	call   FWORD PTR [rdx+rbp*2+0x6cecffff]
  41e15a:	(bad)  
  41e15b:	(bad)  
  41e15c:	in     al,dx
  41e15d:	ins    BYTE PTR es:[rdi],dx
  41e15e:	(bad)  
  41e15f:	(bad)  
  41e160:	in     al,dx
  41e161:	ins    BYTE PTR es:[rdi],dx
  41e162:	(bad)  
  41e163:	(bad)  
  41e164:	in     al,dx
  41e165:	ins    BYTE PTR es:[rdi],dx
  41e166:	(bad)  
  41e167:	(bad)  
  41e168:	in     al,dx
  41e169:	ins    BYTE PTR es:[rdi],dx
  41e16a:	(bad)  
  41e16b:	(bad)  
  41e16c:	in     al,dx
  41e16d:	ins    BYTE PTR es:[rdi],dx
  41e16e:	(bad)  
  41e16f:	jmp    FWORD PTR [rdi]
  41e171:	ins    DWORD PTR es:[rdi],dx
  41e172:	(bad)  
  41e173:	(bad)  
  41e174:	in     al,dx
  41e175:	ins    BYTE PTR es:[rdi],dx
  41e176:	(bad)  
  41e177:	(bad)  
  41e178:	in     al,dx
  41e179:	ins    BYTE PTR es:[rdi],dx
  41e17a:	(bad)  
  41e17b:	(bad)  
  41e17c:	in     al,dx
  41e17d:	ins    BYTE PTR es:[rdi],dx
  41e17e:	(bad)  
  41e17f:	(bad)  
  41e180:	in     al,dx
  41e181:	ins    BYTE PTR es:[rdi],dx
  41e182:	(bad)  
  41e183:	jmp    FWORD PTR [rcx+rbp*2-0x1]
  41e187:	(bad)  
  41e188:	in     al,dx
  41e189:	ins    BYTE PTR es:[rdi],dx
  41e18a:	(bad)  
  41e18b:	(bad)  
  41e18c:	in     al,dx
  41e18d:	ins    BYTE PTR es:[rdi],dx
  41e18e:	(bad)  
  41e18f:	(bad)  
  41e190:	in     al,dx
  41e191:	ins    BYTE PTR es:[rdi],dx
  41e192:	(bad)  
  41e193:	(bad)  
  41e194:	in     al,dx
  41e195:	ins    BYTE PTR es:[rdi],dx
  41e196:	(bad)  
  41e197:	(bad)  
  41e198:	in     al,dx
  41e199:	ins    BYTE PTR es:[rdi],dx
  41e19a:	(bad)  
  41e19b:	(bad)  
  41e19c:	in     al,dx
  41e19d:	ins    BYTE PTR es:[rdi],dx
  41e19e:	(bad)  
  41e19f:	(bad)  
  41e1a0:	in     al,dx
  41e1a1:	ins    BYTE PTR es:[rdi],dx
  41e1a2:	(bad)  
  41e1a3:	(bad)  
  41e1a4:	in     al,dx
  41e1a5:	ins    BYTE PTR es:[rdi],dx
  41e1a6:	(bad)  
  41e1a7:	(bad)  
  41e1a8:	cld    
  41e1a9:	imul   edi,edi,0xff6cecff
  41e1af:	(bad)  
  41e1b0:	mov    ebp,0x3cffff69
  41e1b5:	push   0xffffffffffffffff
  41e1b7:	jmp    FWORD PTR [rcx+rbp*2]
  41e1ba:	(bad)  
  41e1bb:	(bad)  
  41e1bc:	in     al,dx
  41e1bd:	push   0x687fffff
  41e1c2:	(bad)  
  41e1c3:	(bad)  
  41e1c4:	mov    esp,0x3cffff68
  41e1c9:	push   0xffffffffffffffff
  41e1cb:	call   FWORD PTR [rax+rbp*2-0x1]
  41e1cf:	(bad)  
  41e1d0:	in     al,dx
  41e1d1:	ins    BYTE PTR es:[rdi],dx
  41e1d2:	(bad)  
  41e1d3:	jmp    FWORD PTR [rax+rbp*2]
  41e1d6:	(bad)  
  41e1d7:	(bad)  
  41e1d8:	cld    
  41e1d9:	addr32 (bad) 
  41e1db:	(bad)  
  41e1dc:	mov    esp,0x6cffff67
  41e1e1:	imul   edi,edi,0xff677cff
  41e1e7:	(bad)  
  41e1e8:	in     al,dx
  41e1e9:	ins    BYTE PTR es:[rdi],dx
  41e1ea:	(bad)  
  41e1eb:	(bad)  
  41e1ec:	in     al,dx
  41e1ed:	ins    BYTE PTR es:[rdi],dx
  41e1ee:	(bad)  
  41e1ef:	push   QWORD PTR [rcx]
  41e1f1:	addr32 (bad) 
  41e1f3:	call   FWORD PTR [rax+rbp*2-0x1]
  41e1f7:	jmp    FWORD PTR [rcx+rbp*2-0x1]
  41e1fb:	(bad)  
  41e1fc:	in     al,dx
  41e1fd:	ins    BYTE PTR es:[rdi],dx
  41e1fe:	(bad)  
  41e1ff:	(bad)  
  41e200:	in     al,dx
  41e201:	ins    BYTE PTR es:[rdi],dx
  41e202:	(bad)  
  41e203:	jmp    FWORD PTR [rcx+rbp*2-0x1]
  41e207:	(bad)  
  41e208:	in     al,dx
  41e209:	ins    BYTE PTR es:[rdi],dx
  41e20a:	(bad)  
  41e20b:	call   FWORD PTR [rax+rbp*2-0x1]
  41e20f:	dec    DWORD PTR [rcx+0x6e]
  41e212:	imul   bp,WORD PTR [rsi+0x69],0x7974
  41e218:	add    BYTE PTR [rsi+0x61],cl
  41e21b:	rex.WRX add BYTE PTR [rax],r14b
  41e21e:	add    BYTE PTR [rax],al
  41e220:	sahf   
  41e221:	jno    0x41e222
  41e223:	call   rsp
  41e225:	jo     0x41e226
  41e227:	call   rsp
  41e229:	jo     0x41e22a
  41e22b:	call   QWORD PTR [rax]
  41e22d:	jb     0x41e22e
  41e22f:	jmp    rbx
  41e231:	jno    0x41e232
  41e233:	inc    DWORD PTR [rax]
	...
  41e23d:	add    al,bh
  41e23f:	(bad)  
  41e240:	(bad)  
  41e241:	rex.XB outs dx,DWORD PTR ds:[rsi]
  41e243:	movsxd esp,DWORD PTR [rdi-0x4cc02d79]
  41e249:	enter  0x8b60,0x28
  41e24d:	mov    al,dh
  41e24f:	(bad)  
  41e250:	sti    
  41e251:	jns    0x41e1f2
  41e253:	push   rax
  41e254:	adc    eax,DWORD PTR [rbx+rdx*8+0x3f]
  41e258:	add    al,0xfa
  41e25a:	jge    0x41e1f9
  41e25c:	(bad)  
  41e25d:	sub    eax,0x5a323c94
  41e262:	rex.RXB push r13
  41e264:	adc    eax,DWORD PTR [rbx+rdx*8+0x3f]
  41e268:	add    BYTE PTR [rax],al
  41e26a:	add    BYTE PTR [rax],al
  41e26c:	add    BYTE PTR [rax],al
  41e26e:	lock (bad) 
  41e270:	add    BYTE PTR [rax],al
  41e272:	add    BYTE PTR [rax],al
  41e274:	add    BYTE PTR [rax],al
  41e276:	and    al,0x40
  41e278:	add    BYTE PTR [rax],al
  41e27a:	add    BYTE PTR [rax],al
  41e27c:	add    BYTE PTR [rax],al
  41e27e:	or     BYTE PTR [rax+0x0],al
  41e281:	add    BYTE PTR [rax],al
  41e283:	add    BYTE PTR [rax],al
  41e285:	add    BYTE PTR [rax+rax*2],bl
  41e288:	add    BYTE PTR [rax],al
  41e28a:	add    BYTE PTR [rax],al
  41e28c:	add    BYTE PTR [rax],al
  41e28e:	adc    al,0x40
  41e290:	add    BYTE PTR [rax],al
  41e292:	add    BYTE PTR [rax],al
  41e294:	add    BYTE PTR [rax],al
  41e296:	add    BYTE PTR [rax+0x0],al
	...
  41e2a4:	add    BYTE PTR [rax],al
  41e2a6:	loopne 0x41e2e7
	...
  41e2c0:	add    eax,0x19000000
  41e2c5:	add    BYTE PTR [rax],al
  41e2c7:	add    BYTE PTR [rbp+0x0],bh
	...
  41e306:	lock (bad) 
  41e308:	add    BYTE PTR [rax],al
  41e30a:	add    BYTE PTR [rax],al
  41e30c:	add    BYTE PTR [rax],al
  41e30e:	and    al,0x40
  41e310:	add    BYTE PTR [rax],al
  41e312:	add    BYTE PTR [rax],al
  41e314:	add    BYTE PTR [rax],al
  41e316:	pop    rcx
  41e317:	add    BYTE PTR [rax],al
  41e31a:	add    BYTE PTR [rax],al
  41e31c:	add    BYTE PTR [rax-0x71],al
  41e31f:	add    BYTE PTR [rax],al
  41e322:	add    BYTE PTR [rax],al
  41e324:	add    BYTE PTR [rax+0x40c3],cl
  41e32a:	add    BYTE PTR [rax],al
  41e32c:	add    BYTE PTR [rdx-0x8],ch
  41e32f:	add    BYTE PTR [rax],al
  41e332:	add    BYTE PTR [rax],al
  41e334:	add    BYTE PTR [rsi+rbp*1+0x41],0x0
  41e33c:	rcl    BYTE PTR [rdx],1
  41e33e:	movsxd eax,DWORD PTR [rcx+0x0]
  41e341:	add    BYTE PTR [rax],al
  41e343:	add    BYTE PTR [rdi+rdx*8+0x4197],al
  41e34a:	add    BYTE PTR [rax],al
  41e34c:	gs int 0xcd
  41e34f:	add    BYTE PTR [r8],al
  41e352:	add    BYTE PTR [rax],ah
  41e354:	pop    rdi
  41e355:	movabs al,ds:0x4876e80000004202
  41e35e:	(bad)  
  41e35f:	rex.X add BYTE PTR [rax],al
  41e362:	add    BYTE PTR [rdx+0x426d1a94],ah
  41e368:	add    BYTE PTR [rax],al
  41e36a:	rex in eax,0x9c
  41e36d:	xor    BYTE PTR [rdx-0x6fffffbe],ah
  41e373:	(bad)  
  41e374:	(bad)  
  41e375:	mov    esp,0x42d6
  41e37a:	xor    al,0x26
  41e37c:	cmc    
  41e37d:	imul   ecx,DWORD PTR [rbx+rax*2],0x0
  41e381:	and    al,0x37
  41e384:	jns    0x41e349
  41e386:	rex.B
  41e387:	rex.XB add BYTE PTR [r8+0x345785d8],spl
  41e38e:	jbe    0x41e3d3
  41e390:	add    al,cl
  41e392:	rex.WRX
  41e393:	ins    DWORD PTR es:[edi],dx
  41e395:	shr    DWORD PTR [rbx-0x6ec2ffbd],0x60
  41e39c:	in     al,0x58
  41e39e:	loope  0x41e3e3
  41e3a0:	rex mov WORD PTR [rbp+0x15af1d78],?
  41e3a7:	rex.R push rax
  41e3a9:	out    dx,eax
  41e3aa:	loop   0x41e382
  41e3ac:	in     al,0x1a
  41e3ae:	rex.WXB
  41e3af:	rex.R xchg edx,eax
  41e3b1:	(bad)  
  41e3b2:	rex.WRB (bad) 
  41e3b4:	iret   
  41e3b5:	lock add BYTE PTR [rax+rax*1+0x0],0x0
  41e3bb:	add    BYTE PTR [rax],al
  41e3bd:	add    BYTE PTR [rax],al
  41e3bf:	add    BYTE PTR [rcx+rcx*4-0x2d4d6828],bh
  41e3c6:	pushf  
  41e3c7:	cmp    al,0x33
  41e3c9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  41e3ca:	test   al,0xd5
  41e3cc:	and    esi,esi
  41e3ce:	cmp    QWORD PTR [rip+0xfffffffffd44f4a7],rdi        # 0xfffffffffd86d87c
  41e3d5:	shld   DWORD PTR [rdx],esi,cl
  41e3d8:	popf   
  41e3d9:	xchg   edi,eax
  41e3da:	mov    edi,cs
  41e3dc:	or     BYTE PTR [rdx+0x6f43255b],bh
  41e3e2:	lods   al,BYTE PTR ds:[rsi]
  41e3e3:	sub    BYTE PTR fs:[rsi],al
  41e3e6:	enter  0xa,0x0
	...
  41e3fe:	add    BYTE PTR [rax],al
  41e400:	add    BYTE PTR [rax-0x3c86c820],al
  41e406:	rex.B
  41e407:	rex.XB (bad) 
  41e409:	outs   dx,BYTE PTR ds:[rsi]
  41e40a:	add    eax,0x93b8b5b5
  41e40f:	rex.RX cmc 
  41e411:	stc    
  41e412:	(bad)  
  41e413:	jmp    0x4d7a331b
  41e418:	xor    bl,BYTE PTR [rip+0x7748f930]        # 0x778add4e
  41e41e:	(bad)  
  41e41f:	pop    rdx
  41e420:	cmp    al,0xbf
  41e422:	jae    0x41e4a3
  41e424:	fisttp QWORD PTR [rdi+0x15]
  41e427:	jne    0x41e429
	...
  41e43d:	add    BYTE PTR [rax],al
  41e43f:	add    BYTE PTR [rbp+0x0],ch
  41e442:	jae    0x41e444
  41e444:	jbe    0x41e446
  41e446:	movsxd eax,DWORD PTR [rax]
  41e448:	jb     0x41e44a
  41e44a:	je     0x41e44c
  41e44c:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
  41e451:	add    BYTE PTR [rax+rax*1+0x0],ch
  41e455:	add    BYTE PTR [rdi+0x73],bl
  41e458:	gs je  0x41e4ba
  41e45b:	outs   dx,DWORD PTR ds:[rsi]
  41e45c:	jne    0x41e4d2
  41e45e:	jo     0x41e4d5
  41e460:	je     0x41e4c1
  41e462:	outs   dx,WORD PTR ds:[rsi]
  41e464:	jb     0x41e4d3
  41e466:	(bad)  
  41e467:	je     0x41e469
  41e469:	pop    rdi
  41e46a:	addr32 gs je 0x41e4cd
  41e46e:	outs   dx,DWORD PTR ds:[rsi]
  41e46f:	jne    0x41e4e5
  41e471:	jo     0x41e4e8
  41e473:	je     0x41e4d4
  41e475:	outs   dx,WORD PTR ds:[rsi]
  41e477:	jb     0x41e4e6
  41e479:	(bad)  
  41e47a:	je     0x41e47c
  41e47c:	add    BYTE PTR [rax],al
  41e47e:	add    BYTE PTR [rax],al
  41e480:	jo     0x41e40e
  41e482:	add    BYTE PTR [r8],al
	...
  41e48d:	add    BYTE PTR [rax],al
  41e48f:	add    BYTE PTR [rax+0x418c],al
	...
  41e49d:	add    BYTE PTR [rax],al
  41e49f:	add    BYTE PTR [rax+0x417d],al
	...
  41e4b1:	in     eax,dx
  41e4b2:	add    BYTE PTR [r8],al
	...
  41e4c1:	in     eax,dx
  41e4c2:	add    BYTE PTR [r8],al
	...
  41e4cd:	add    BYTE PTR [rax],al
  41e4cf:	add    BYTE PTR [rax],ah
  41e4d1:	fld    QWORD PTR [rcx+0x0]
	...
  41e4e0:	add    BYTE PTR [rax],al
  41e4e2:	add    BYTE PTR [rax],al
	...
  41e4ed:	add    BYTE PTR [rax],al
  41e4ef:	add    al,cl
  41e4f1:	xor    eax,0x42
	...
  41e4fe:	add    BYTE PTR [rax],al
  41e500:	loopne 0x41e537
  41e502:	rex.X add BYTE PTR [rax],al
	...
  41e50d:	add    BYTE PTR [rax],al
  41e50f:	add    al,bh
  41e511:	xor    eax,0x42
	...
  41e51e:	add    BYTE PTR [rax],al
  41e520:	cmp    BYTE PTR [rsi],dh
  41e522:	rex.X add BYTE PTR [rax],al
	...
  41e52d:	add    BYTE PTR [rax],al
  41e52f:	add    BYTE PTR [rax+0x36],dh
  41e532:	rex.X add BYTE PTR [rax],al
	...
  41e53d:	add    BYTE PTR [rax],al
  41e53f:	add    BYTE PTR [rax+0x4219],al
	...
  41e54d:	add    BYTE PTR [rax],al
  41e54f:	add    BYTE PTR [rax+0x27],bl
  41e552:	rex.X add BYTE PTR [rax],al
	...
  41e55d:	add    BYTE PTR [rax],al
  41e55f:	add    BYTE PTR [rax+0x27],dl
  41e562:	rex.X add BYTE PTR [rax],al
	...
  41e56d:	add    BYTE PTR [rax],al
  41e56f:	add    BYTE PTR [rax+0x27],al
  41e572:	rex.X add BYTE PTR [rax],al
	...
  41e57d:	add    BYTE PTR [rax],al
  41e57f:	add    BYTE PTR [rax+0x27],cl
  41e582:	rex.X add BYTE PTR [rax],al
	...
  41e591:	jrcxz  0x41e5d4
	...
  41e59f:	add    BYTE PTR [rax],al
  41e5a1:	push   rax
  41e5a2:	rex.X add BYTE PTR [rax],al
	...
  41e5ad:	add    BYTE PTR [rax],al
  41e5af:	add    BYTE PTR [rax],dl
  41e5b1:	push   rax
  41e5b2:	rex.X add BYTE PTR [rax],al
	...
  41e5bd:	add    BYTE PTR [rax],al
  41e5bf:	add    BYTE PTR [rax],bl
  41e5c1:	push   rax
  41e5c2:	rex.X add BYTE PTR [rax],al
	...
  41e5cd:	add    BYTE PTR [rax],al
  41e5cf:	add    BYTE PTR [rax],dh
  41e5d1:	push   rax
  41e5d2:	rex.X add BYTE PTR [rax],al
	...
  41e5dd:	add    BYTE PTR [rax],al
  41e5df:	add    BYTE PTR [rax],dl
  41e5e1:	adc    eax,DWORD PTR [rdx+0x0]
	...
  41e5f0:	push   rax
  41e5f1:	sbb    DWORD PTR [rdx+0x0],eax
	...
  41e600:	rcr    BYTE PTR [rdx],1
  41e602:	add    BYTE PTR [r8],al
	...
  41e60d:	add    BYTE PTR [rax],al
  41e60f:	add    BYTE PTR [rax],ah
  41e611:	adc    al,BYTE PTR [rcx+0x0]
	...
  41e620:	add    BYTE PTR [rcx],bl
  41e622:	rex.X add BYTE PTR [rax],al
	...
  41e62d:	add    BYTE PTR [rax],al
  41e62f:	add    BYTE PTR [rax],dh
  41e631:	sbb    DWORD PTR [rdx+0x0],eax
	...
  41e640:	and    BYTE PTR [rbx],dl
  41e642:	rex.X add BYTE PTR [rax],al
	...
  41e64d:	add    BYTE PTR [rax],al
  41e64f:	add    BYTE PTR [rax],bl
  41e651:	sbb    DWORD PTR [rdx+0x0],eax
	...
  41e660:	adc    al,0x19
  41e662:	rex.X add BYTE PTR [rax],al
	...
  41e66d:	add    BYTE PTR [rax],al
  41e66f:	add    BYTE PTR [rax],dl
  41e671:	sbb    DWORD PTR [rdx+0x0],eax
	...
  41e680:	rex.W adc BYTE PTR [rdx+0x0],al
	...
  41e690:	rex add BYTE PTR [rcx+0x0],0x0
	...
  41e69d:	add    BYTE PTR [rax],al
  41e69f:	add    BYTE PTR [rdi+0x43],al
  41e6a2:	rex.XB cmp spl,BYTE PTR [r8]
  41e6a5:	sub    BYTE PTR [rdi+0x4e],al
  41e6a8:	push   rbp
  41e6a9:	sub    DWORD PTR [rax],esp
  41e6ab:	xor    al,0x2e
  41e6ad:	cmp    DWORD PTR [rsi],ebp
  41e6af:	xor    al,0x0
	...
  41e6bd:	add    BYTE PTR [rax],al
  41e6bf:	add    BYTE PTR [rdi+0x43],al
  41e6c2:	rex.XB cmp spl,BYTE PTR [r8]
  41e6c5:	sub    BYTE PTR [rdi+0x4e],al
  41e6c8:	push   rbp
  41e6c9:	sub    DWORD PTR [rax],esp
  41e6cb:	xor    al,0x2e
  41e6cd:	cmp    DWORD PTR [rsi],ebp
  41e6cf:	xor    al,0x0
	...
  41e6dd:	add    BYTE PTR [rax],al
  41e6df:	add    BYTE PTR [rdi+0x43],al
  41e6e2:	rex.XB cmp spl,BYTE PTR [r8]
  41e6e5:	sub    BYTE PTR [rdi+0x4e],al
  41e6e8:	push   rbp
  41e6e9:	sub    DWORD PTR [rax],esp
  41e6eb:	xor    al,0x2e
  41e6ed:	cmp    DWORD PTR [rsi],ebp
  41e6ef:	xor    al,0x0
	...
  41e6fd:	add    BYTE PTR [rax],al
  41e6ff:	add    BYTE PTR [rdi+0x43],al
  41e702:	rex.XB cmp spl,BYTE PTR [r8]
  41e705:	sub    BYTE PTR [rdi+0x4e],al
  41e708:	push   rbp
  41e709:	sub    DWORD PTR [rax],esp
  41e70b:	xor    al,0x2e
  41e70d:	cmp    DWORD PTR [rsi],ebp
  41e70f:	xor    al,0x0
	...
  41e71d:	add    BYTE PTR [rax],al
  41e71f:	add    BYTE PTR [rdi+0x43],al
  41e722:	rex.XB cmp spl,BYTE PTR [r8]
  41e725:	sub    BYTE PTR [rdi+0x4e],al
  41e728:	push   rbp
  41e729:	sub    DWORD PTR [rax],esp
  41e72b:	xor    al,0x2e
  41e72d:	cmp    DWORD PTR [rsi],ebp
  41e72f:	xor    al,0x0
	...
  41e73d:	add    BYTE PTR [rax],al
  41e73f:	add    BYTE PTR [rdi+0x43],al
  41e742:	rex.XB cmp spl,BYTE PTR [r8]
  41e745:	sub    BYTE PTR [rdi+0x4e],al
  41e748:	push   rbp
  41e749:	sub    DWORD PTR [rax],esp
  41e74b:	xor    al,0x2e
  41e74d:	cmp    DWORD PTR [rsi],ebp
  41e74f:	xor    al,0x0
	...
  41e75d:	add    BYTE PTR [rax],al
  41e75f:	add    BYTE PTR [rdi+0x43],al
  41e762:	rex.XB cmp spl,BYTE PTR [r8]
  41e765:	sub    BYTE PTR [rdi+0x4e],al
  41e768:	push   rbp
  41e769:	sub    DWORD PTR [rax],esp
  41e76b:	xor    al,0x2e
  41e76d:	cmp    DWORD PTR [rsi],ebp
  41e76f:	xor    al,0x0
	...
  41e77d:	add    BYTE PTR [rax],al
  41e77f:	add    BYTE PTR [rdi+0x43],al
  41e782:	rex.XB cmp spl,BYTE PTR [r8]
  41e785:	sub    BYTE PTR [rdi+0x4e],al
  41e788:	push   rbp
  41e789:	sub    DWORD PTR [rax],esp
  41e78b:	xor    al,0x2e
  41e78d:	cmp    DWORD PTR [rsi],ebp
  41e78f:	xor    al,0x0
	...
  41e79d:	add    BYTE PTR [rax],al
  41e79f:	add    BYTE PTR [rdi+0x43],al
  41e7a2:	rex.XB cmp spl,BYTE PTR [r8]
  41e7a5:	sub    BYTE PTR [rdi+0x4e],al
  41e7a8:	push   rbp
  41e7a9:	sub    DWORD PTR [rax],esp
  41e7ab:	xor    al,0x2e
  41e7ad:	cmp    DWORD PTR [rsi],ebp
  41e7af:	xor    al,0x0
	...
  41e7bd:	add    BYTE PTR [rax],al
  41e7bf:	add    BYTE PTR [rdi+0x43],al
  41e7c2:	rex.XB cmp spl,BYTE PTR [r8]
  41e7c5:	sub    BYTE PTR [rdi+0x4e],al
  41e7c8:	push   rbp
  41e7c9:	sub    DWORD PTR [rax],esp
  41e7cb:	xor    al,0x2e
  41e7cd:	cmp    DWORD PTR [rsi],ebp
  41e7cf:	xor    al,0x0
	...
  41e7dd:	add    BYTE PTR [rax],al
  41e7df:	add    BYTE PTR [rdi+0x43],al
  41e7e2:	rex.XB cmp spl,BYTE PTR [r8]
  41e7e5:	sub    BYTE PTR [rdi+0x4e],al
  41e7e8:	push   rbp
  41e7e9:	sub    DWORD PTR [rax],esp
  41e7eb:	xor    al,0x2e
  41e7ed:	cmp    DWORD PTR [rsi],ebp
  41e7ef:	xor    al,0x0
	...
  41e7fd:	add    BYTE PTR [rax],al
  41e7ff:	add    BYTE PTR [rdi+0x43],al
  41e802:	rex.XB cmp spl,BYTE PTR [r8]
  41e805:	sub    BYTE PTR [rdi+0x4e],al
  41e808:	push   rbp
  41e809:	sub    DWORD PTR [rax],esp
  41e80b:	xor    al,0x2e
  41e80d:	cmp    DWORD PTR [rsi],ebp
  41e80f:	xor    al,0x0
	...
  41e81d:	add    BYTE PTR [rax],al
  41e81f:	add    BYTE PTR [rdi+0x43],al
  41e822:	rex.XB cmp spl,BYTE PTR [r8]
  41e825:	sub    BYTE PTR [rdi+0x4e],al
  41e828:	push   rbp
  41e829:	sub    DWORD PTR [rax],esp
  41e82b:	xor    al,0x2e
  41e82d:	cmp    DWORD PTR [rsi],ebp
  41e82f:	xor    al,0x0
	...
  41e83d:	add    BYTE PTR [rax],al
  41e83f:	add    BYTE PTR [rdi+0x43],al
  41e842:	rex.XB cmp spl,BYTE PTR [r8]
  41e845:	sub    BYTE PTR [rdi+0x4e],al
  41e848:	push   rbp
  41e849:	sub    DWORD PTR [rax],esp
  41e84b:	xor    al,0x2e
  41e84d:	cmp    DWORD PTR [rsi],ebp
  41e84f:	xor    al,0x0
	...
  41e85d:	add    BYTE PTR [rax],al
  41e85f:	add    BYTE PTR [rdi+0x43],al
  41e862:	rex.XB cmp spl,BYTE PTR [r8]
  41e865:	sub    BYTE PTR [rdi+0x4e],al
  41e868:	push   rbp
  41e869:	sub    DWORD PTR [rax],esp
  41e86b:	xor    al,0x2e
  41e86d:	cmp    DWORD PTR [rsi],ebp
  41e86f:	xor    al,0x0
	...
  41e87d:	add    BYTE PTR [rax],al
  41e87f:	add    BYTE PTR [rdi+0x43],al
  41e882:	rex.XB cmp spl,BYTE PTR [r8]
  41e885:	sub    BYTE PTR [rdi+0x4e],al
  41e888:	push   rbp
  41e889:	sub    DWORD PTR [rax],esp
  41e88b:	xor    al,0x2e
  41e88d:	cmp    DWORD PTR [rsi],ebp
  41e88f:	xor    al,0x0
	...
  41e89d:	add    BYTE PTR [rax],al
  41e89f:	add    BYTE PTR [rdi+0x43],al
  41e8a2:	rex.XB cmp spl,BYTE PTR [r8]
  41e8a5:	sub    BYTE PTR [rdi+0x4e],al
  41e8a8:	push   rbp
  41e8a9:	sub    DWORD PTR [rax],esp
  41e8ab:	xor    al,0x2e
  41e8ad:	cmp    DWORD PTR [rsi],ebp
  41e8af:	xor    al,0x0
	...
  41e8bd:	add    BYTE PTR [rax],al
  41e8bf:	add    BYTE PTR [rdi+0x43],al
  41e8c2:	rex.XB cmp spl,BYTE PTR [r8]
  41e8c5:	sub    BYTE PTR [rdi+0x4e],al
  41e8c8:	push   rbp
  41e8c9:	sub    DWORD PTR [rax],esp
  41e8cb:	xor    al,0x2e
  41e8cd:	cmp    DWORD PTR [rsi],ebp
  41e8cf:	xor    al,0x0
	...
  41e8dd:	add    BYTE PTR [rax],al
  41e8df:	add    BYTE PTR [rdi+0x43],al
  41e8e2:	rex.XB cmp spl,BYTE PTR [r8]
  41e8e5:	sub    BYTE PTR [rdi+0x4e],al
  41e8e8:	push   rbp
  41e8e9:	sub    DWORD PTR [rax],esp
  41e8eb:	xor    al,0x2e
  41e8ed:	cmp    DWORD PTR [rsi],ebp
  41e8ef:	xor    al,0x0
	...
  41e8fd:	add    BYTE PTR [rax],al
  41e8ff:	add    BYTE PTR [rdi+0x43],al
  41e902:	rex.XB cmp spl,BYTE PTR [r8]
  41e905:	sub    BYTE PTR [rdi+0x4e],al
  41e908:	push   rbp
  41e909:	sub    DWORD PTR [rax],esp
  41e90b:	xor    al,0x2e
  41e90d:	cmp    DWORD PTR [rsi],ebp
  41e90f:	xor    al,0x0
	...
  41e91d:	add    BYTE PTR [rax],al
  41e91f:	add    BYTE PTR [rdi+0x43],al
  41e922:	rex.XB cmp spl,BYTE PTR [r8]
  41e925:	sub    BYTE PTR [rdi+0x4e],al
  41e928:	push   rbp
  41e929:	sub    DWORD PTR [rax],esp
  41e92b:	xor    al,0x2e
  41e92d:	cmp    DWORD PTR [rsi],ebp
  41e92f:	xor    al,0x0
	...
  41e93d:	add    BYTE PTR [rax],al
  41e93f:	add    BYTE PTR [rdi+0x43],al
  41e942:	rex.XB cmp spl,BYTE PTR [r8]
  41e945:	sub    BYTE PTR [rdi+0x4e],al
  41e948:	push   rbp
  41e949:	sub    DWORD PTR [rax],esp
  41e94b:	xor    al,0x2e
  41e94d:	cmp    DWORD PTR [rsi],ebp
  41e94f:	xor    al,0x0
	...
  41e95d:	add    BYTE PTR [rax],al
  41e95f:	add    BYTE PTR [rdi+0x43],al
  41e962:	rex.XB cmp spl,BYTE PTR [r8]
  41e965:	sub    BYTE PTR [rdi+0x4e],al
  41e968:	push   rbp
  41e969:	sub    DWORD PTR [rax],esp
  41e96b:	xor    al,0x2e
  41e96d:	cmp    DWORD PTR [rsi],ebp
  41e96f:	xor    al,0x0
	...
  41e97d:	add    BYTE PTR [rax],al
  41e97f:	add    BYTE PTR [rdi+0x43],al
  41e982:	rex.XB cmp spl,BYTE PTR [r8]
  41e985:	sub    BYTE PTR [rdi+0x4e],al
  41e988:	push   rbp
  41e989:	sub    DWORD PTR [rax],esp
  41e98b:	xor    al,0x2e
  41e98d:	cmp    DWORD PTR [rsi],ebp
  41e98f:	xor    al,0x0
	...
  41e99d:	add    BYTE PTR [rax],al
  41e99f:	add    BYTE PTR [rdi+0x43],al
  41e9a2:	rex.XB cmp spl,BYTE PTR [r8]
  41e9a5:	sub    BYTE PTR [rdi+0x4e],al
  41e9a8:	push   rbp
  41e9a9:	sub    DWORD PTR [rax],esp
  41e9ab:	xor    al,0x2e
  41e9ad:	cmp    DWORD PTR [rsi],ebp
  41e9af:	xor    al,0x0
	...
  41e9bd:	add    BYTE PTR [rax],al
  41e9bf:	add    BYTE PTR [rdi+0x43],al
  41e9c2:	rex.XB cmp spl,BYTE PTR [r8]
  41e9c5:	sub    BYTE PTR [rdi+0x4e],al
  41e9c8:	push   rbp
  41e9c9:	sub    DWORD PTR [rax],esp
  41e9cb:	xor    al,0x2e
  41e9cd:	cmp    DWORD PTR [rsi],ebp
  41e9cf:	xor    al,0x0
	...
  41e9dd:	add    BYTE PTR [rax],al
  41e9df:	add    BYTE PTR [rdi+0x43],al
  41e9e2:	rex.XB cmp spl,BYTE PTR [r8]
  41e9e5:	sub    BYTE PTR [rdi+0x4e],al
  41e9e8:	push   rbp
  41e9e9:	sub    DWORD PTR [rax],esp
  41e9eb:	xor    al,0x2e
  41e9ed:	cmp    DWORD PTR [rsi],ebp
  41e9ef:	xor    al,0x0
	...
  41e9fd:	add    BYTE PTR [rax],al
  41e9ff:	add    BYTE PTR [rdi+0x43],al
  41ea02:	rex.XB cmp spl,BYTE PTR [r8]
  41ea05:	sub    BYTE PTR [rdi+0x4e],al
  41ea08:	push   rbp
  41ea09:	sub    DWORD PTR [rax],esp
  41ea0b:	xor    al,0x2e
  41ea0d:	cmp    DWORD PTR [rsi],ebp
  41ea0f:	xor    al,0x0
	...
  41ea1d:	add    BYTE PTR [rax],al
  41ea1f:	add    BYTE PTR [rdi+0x43],al
  41ea22:	rex.XB cmp spl,BYTE PTR [r8]
  41ea25:	sub    BYTE PTR [rdi+0x4e],al
  41ea28:	push   rbp
  41ea29:	sub    DWORD PTR [rax],esp
  41ea2b:	xor    al,0x2e
  41ea2d:	cmp    DWORD PTR [rsi],ebp
  41ea2f:	xor    al,0x0
	...
  41ea3d:	add    BYTE PTR [rax],al
  41ea3f:	add    BYTE PTR [rdi+0x43],al
  41ea42:	rex.XB cmp spl,BYTE PTR [r8]
  41ea45:	sub    BYTE PTR [rdi+0x4e],al
  41ea48:	push   rbp
  41ea49:	sub    DWORD PTR [rax],esp
  41ea4b:	xor    al,0x2e
  41ea4d:	cmp    DWORD PTR [rsi],ebp
  41ea4f:	xor    al,0x0
	...
  41ea5d:	add    BYTE PTR [rax],al
  41ea5f:	add    BYTE PTR [rdi+0x43],al
  41ea62:	rex.XB cmp spl,BYTE PTR [r8]
  41ea65:	sub    BYTE PTR [rdi+0x4e],al
  41ea68:	push   rbp
  41ea69:	sub    DWORD PTR [rax],esp
  41ea6b:	xor    al,0x2e
  41ea6d:	cmp    DWORD PTR [rsi],ebp
  41ea6f:	xor    al,0x0
	...
  41ea7d:	add    BYTE PTR [rax],al
  41ea7f:	add    BYTE PTR [rdi+0x43],al
  41ea82:	rex.XB cmp spl,BYTE PTR [r8]
  41ea85:	sub    BYTE PTR [rdi+0x4e],al
  41ea88:	push   rbp
  41ea89:	sub    DWORD PTR [rax],esp
  41ea8b:	xor    al,0x2e
  41ea8d:	cmp    DWORD PTR [rsi],ebp
  41ea8f:	xor    al,0x0
	...
  41ea9d:	add    BYTE PTR [rax],al
  41ea9f:	add    BYTE PTR [rdi+0x43],al
  41eaa2:	rex.XB cmp spl,BYTE PTR [r8]
  41eaa5:	sub    BYTE PTR [rdi+0x4e],al
  41eaa8:	push   rbp
  41eaa9:	sub    DWORD PTR [rax],esp
  41eaab:	xor    al,0x2e
  41eaad:	cmp    DWORD PTR [rsi],ebp
  41eaaf:	xor    al,0x0
	...
  41eabd:	add    BYTE PTR [rax],al
  41eabf:	add    BYTE PTR [rdi+0x43],al
  41eac2:	rex.XB cmp spl,BYTE PTR [r8]
  41eac5:	sub    BYTE PTR [rdi+0x4e],al
  41eac8:	push   rbp
  41eac9:	sub    DWORD PTR [rax],esp
  41eacb:	xor    al,0x2e
  41eacd:	cmp    DWORD PTR [rsi],ebp
  41eacf:	xor    al,0x0
	...
  41eadd:	add    BYTE PTR [rax],al
  41eadf:	add    BYTE PTR [rdi+0x43],al
  41eae2:	rex.XB cmp spl,BYTE PTR [r8]
  41eae5:	sub    BYTE PTR [rdi+0x4e],al
  41eae8:	push   rbp
  41eae9:	sub    DWORD PTR [rax],esp
  41eaeb:	xor    al,0x2e
  41eaed:	cmp    DWORD PTR [rsi],ebp
  41eaef:	xor    al,0x0
	...
  41eafd:	add    BYTE PTR [rax],al
  41eaff:	add    BYTE PTR [rdi+0x43],al
  41eb02:	rex.XB cmp spl,BYTE PTR [r8]
  41eb05:	sub    BYTE PTR [rdi+0x4e],al
  41eb08:	push   rbp
  41eb09:	sub    DWORD PTR [rax],esp
  41eb0b:	xor    al,0x2e
  41eb0d:	cmp    DWORD PTR [rsi],ebp
  41eb0f:	xor    al,0x0
	...
  41eb1d:	add    BYTE PTR [rax],al
  41eb1f:	add    BYTE PTR [rdi+0x43],al
  41eb22:	rex.XB cmp spl,BYTE PTR [r8]
  41eb25:	sub    BYTE PTR [rdi+0x4e],al
  41eb28:	push   rbp
  41eb29:	sub    DWORD PTR [rax],esp
  41eb2b:	xor    al,0x2e
  41eb2d:	cmp    DWORD PTR [rsi],ebp
  41eb2f:	xor    al,0x0
	...
  41eb3d:	add    BYTE PTR [rax],al
  41eb3f:	add    BYTE PTR [rdi+0x43],al
  41eb42:	rex.XB cmp spl,BYTE PTR [r8]
  41eb45:	sub    BYTE PTR [rdi+0x4e],al
  41eb48:	push   rbp
  41eb49:	sub    DWORD PTR [rax],esp
  41eb4b:	xor    al,0x2e
  41eb4d:	cmp    DWORD PTR [rsi],ebp
  41eb4f:	xor    al,0x0
	...
  41eb5d:	add    BYTE PTR [rax],al
  41eb5f:	add    BYTE PTR [rdi+0x43],al
  41eb62:	rex.XB cmp spl,BYTE PTR [r8]
  41eb65:	sub    BYTE PTR [rdi+0x4e],al
  41eb68:	push   rbp
  41eb69:	sub    DWORD PTR [rax],esp
  41eb6b:	xor    al,0x2e
  41eb6d:	cmp    DWORD PTR [rsi],ebp
  41eb6f:	xor    al,0x0
	...
  41eb7d:	add    BYTE PTR [rax],al
  41eb7f:	add    BYTE PTR [rdi+0x43],al
  41eb82:	rex.XB cmp spl,BYTE PTR [r8]
  41eb85:	sub    BYTE PTR [rdi+0x4e],al
  41eb88:	push   rbp
  41eb89:	sub    DWORD PTR [rax],esp
  41eb8b:	xor    al,0x2e
  41eb8d:	cmp    DWORD PTR [rsi],ebp
  41eb8f:	xor    al,0x0
	...
  41eb9d:	add    BYTE PTR [rax],al
  41eb9f:	add    BYTE PTR [rdi+0x43],al
  41eba2:	rex.XB cmp spl,BYTE PTR [r8]
  41eba5:	sub    BYTE PTR [rdi+0x4e],al
  41eba8:	push   rbp
  41eba9:	sub    DWORD PTR [rax],esp
  41ebab:	xor    al,0x2e
  41ebad:	cmp    DWORD PTR [rsi],ebp
  41ebaf:	xor    al,0x0
	...
  41ebbd:	add    BYTE PTR [rax],al
  41ebbf:	add    BYTE PTR [rdi+0x43],al
  41ebc2:	rex.XB cmp spl,BYTE PTR [r8]
  41ebc5:	sub    BYTE PTR [rdi+0x4e],al
  41ebc8:	push   rbp
  41ebc9:	sub    DWORD PTR [rax],esp
  41ebcb:	xor    al,0x2e
  41ebcd:	cmp    DWORD PTR [rsi],ebp
  41ebcf:	xor    al,0x0
	...
  41ebdd:	add    BYTE PTR [rax],al
  41ebdf:	add    BYTE PTR [rdi+0x43],al
  41ebe2:	rex.XB cmp spl,BYTE PTR [r8]
  41ebe5:	sub    BYTE PTR [rdi+0x4e],al
  41ebe8:	push   rbp
  41ebe9:	sub    DWORD PTR [rax],esp
  41ebeb:	xor    al,0x2e
  41ebed:	cmp    DWORD PTR [rsi],ebp
  41ebef:	xor    al,0x0
	...
  41ebfd:	add    BYTE PTR [rax],al
  41ebff:	add    BYTE PTR [rdi+0x43],al
  41ec02:	rex.XB cmp spl,BYTE PTR [r8]
  41ec05:	sub    BYTE PTR [rdi+0x4e],al
  41ec08:	push   rbp
  41ec09:	sub    DWORD PTR [rax],esp
  41ec0b:	xor    al,0x2e
  41ec0d:	cmp    DWORD PTR [rsi],ebp
  41ec0f:	xor    al,0x0
	...
  41ec1d:	add    BYTE PTR [rax],al
  41ec1f:	add    BYTE PTR [rdi+0x43],al
  41ec22:	rex.XB cmp spl,BYTE PTR [r8]
  41ec25:	sub    BYTE PTR [rdi+0x4e],al
  41ec28:	push   rbp
  41ec29:	sub    DWORD PTR [rax],esp
  41ec2b:	xor    al,0x2e
  41ec2d:	cmp    DWORD PTR [rsi],ebp
  41ec2f:	xor    al,0x0
	...
  41ec3d:	add    BYTE PTR [rax],al
  41ec3f:	add    BYTE PTR [rdi+0x43],al
  41ec42:	rex.XB cmp spl,BYTE PTR [r8]
  41ec45:	sub    BYTE PTR [rdi+0x4e],al
  41ec48:	push   rbp
  41ec49:	sub    DWORD PTR [rax],esp
  41ec4b:	xor    al,0x2e
  41ec4d:	cmp    DWORD PTR [rsi],ebp
  41ec4f:	xor    al,0x0
	...
  41ec5d:	add    BYTE PTR [rax],al
  41ec5f:	add    BYTE PTR [rdi+0x43],al
  41ec62:	rex.XB cmp spl,BYTE PTR [r8]
  41ec65:	sub    BYTE PTR [rdi+0x4e],al
  41ec68:	push   rbp
  41ec69:	sub    DWORD PTR [rax],esp
  41ec6b:	xor    al,0x2e
  41ec6d:	cmp    DWORD PTR [rsi],ebp
  41ec6f:	xor    al,0x0
	...
  41ec7d:	add    BYTE PTR [rax],al
  41ec7f:	add    BYTE PTR [rdi+0x43],al
  41ec82:	rex.XB cmp spl,BYTE PTR [r8]
  41ec85:	sub    BYTE PTR [rdi+0x4e],al
  41ec88:	push   rbp
  41ec89:	sub    DWORD PTR [rax],esp
  41ec8b:	xor    al,0x2e
  41ec8d:	cmp    DWORD PTR [rsi],ebp
  41ec8f:	xor    al,0x0
	...
  41ec9d:	add    BYTE PTR [rax],al
  41ec9f:	add    BYTE PTR [rdi+0x43],al
  41eca2:	rex.XB cmp spl,BYTE PTR [r8]
  41eca5:	sub    BYTE PTR [rdi+0x4e],al
  41eca8:	push   rbp
  41eca9:	sub    DWORD PTR [rax],esp
  41ecab:	xor    al,0x2e
  41ecad:	cmp    DWORD PTR [rsi],ebp
  41ecaf:	xor    al,0x0
	...
  41ecbd:	add    BYTE PTR [rax],al
  41ecbf:	add    BYTE PTR [rdi+0x43],al
  41ecc2:	rex.XB cmp spl,BYTE PTR [r8]
  41ecc5:	sub    BYTE PTR [rdi+0x4e],al
  41ecc8:	push   rbp
  41ecc9:	sub    DWORD PTR [rax],esp
  41eccb:	xor    al,0x2e
  41eccd:	cmp    DWORD PTR [rsi],ebp
  41eccf:	xor    al,0x0
	...
  41ecdd:	add    BYTE PTR [rax],al
  41ecdf:	add    BYTE PTR [rdi+0x43],al
  41ece2:	rex.XB cmp spl,BYTE PTR [r8]
  41ece5:	sub    BYTE PTR [rdi+0x4e],al
  41ece8:	push   rbp
  41ece9:	sub    DWORD PTR [rax],esp
  41eceb:	xor    al,0x2e
  41eced:	cmp    DWORD PTR [rsi],ebp
  41ecef:	xor    al,0x0
	...

Disassembly of section .pdata:

000000000041f000 <.pdata>:
  41f000:	add    BYTE PTR [rax],dl
  41f002:	add    BYTE PTR [rax],al
  41f004:	add    DWORD PTR [rax],edx
  41f006:	add    BYTE PTR [rax],al
  41f008:	add    BYTE PTR [rax],al
  41f00a:	add    al,BYTE PTR [rax]
  41f00c:	adc    BYTE PTR [rax],dl
  41f00e:	add    BYTE PTR [rax],al
  41f010:	push   rcx
  41f011:	adc    DWORD PTR [rax],eax
  41f013:	add    BYTE PTR [rax+rax*1],al
  41f016:	add    al,BYTE PTR [rax]
  41f018:	(bad)  
  41f019:	adc    DWORD PTR [rax],eax
  41f01b:	add    BYTE PTR [rsi+0xc000011],ch
  41f021:	add    BYTE PTR [rdx],al
  41f023:	add    BYTE PTR [rax-0x31ffffef],dh
  41f029:	adc    al,0x0
  41f02b:	add    BYTE PTR [rax+rax*1],dl
  41f02e:	add    al,BYTE PTR [rax]
  41f030:	rcl    BYTE PTR [rax+rax*1],1
  41f033:	add    dl,dh
  41f035:	adc    al,0x0
  41f037:	add    BYTE PTR [rax],ch
  41f039:	add    BYTE PTR [rdx],al
  41f03b:	add    BYTE PTR [rax],al
  41f03d:	adc    eax,0x15220000
  41f042:	add    BYTE PTR [rax],al
  41f044:	rex.W add BYTE PTR [rdx],al
  41f047:	add    BYTE PTR [rax],dh
  41f049:	adc    eax,0x15520000
  41f04e:	add    BYTE PTR [rax],al
  41f050:	push   0x60000200
  41f055:	adc    eax,0x15870000
  41f05a:	add    BYTE PTR [rax],al
  41f05c:	jo     0x41f05e
  41f05e:	add    al,BYTE PTR [rax]
  41f060:	nop
  41f061:	adc    eax,0x186c0000
  41f066:	add    BYTE PTR [rax],al
  41f068:	js     0x41f06a
  41f06a:	add    al,BYTE PTR [rax]
  41f06c:	nop
  41f06d:	sbb    BYTE PTR [rax],al
  41f06f:	add    BYTE PTR [rbp-0x5fffffe8],ch
  41f075:	add    BYTE PTR [rdx],al
  41f077:	add    BYTE PTR [rax+0xb000018],dh
  41f07d:	sbb    DWORD PTR [rax],eax
  41f07f:	add    BYTE PTR [rax+0x10000200],ch
  41f085:	sbb    DWORD PTR [rax],eax
  41f087:	add    BYTE PTR [rbx+0x19],ch
  41f08a:	add    BYTE PTR [rax],al
  41f08c:	mov    ah,0x0
  41f08e:	add    al,BYTE PTR [rax]
  41f090:	jo     0x41f0ab
  41f092:	add    BYTE PTR [rax],al
  41f094:	leave  
  41f095:	sbb    DWORD PTR [rax],eax
  41f097:	add    al,al
  41f099:	add    BYTE PTR [rdx],al
  41f09b:	add    al,dl
  41f09d:	sbb    DWORD PTR [rax],eax
  41f09f:	add    BYTE PTR [rax],dh
  41f0a1:	sbb    al,BYTE PTR [rax]
  41f0a3:	add    ah,cl
  41f0a5:	add    BYTE PTR [rdx],al
  41f0a7:	add    BYTE PTR [rax],dh
  41f0a9:	sbb    al,BYTE PTR [rax]
  41f0ab:	add    BYTE PTR [rdx+rbx*1+0xdc0000],al
  41f0b2:	add    al,BYTE PTR [rax]
  41f0b4:	nop
  41f0b5:	sbb    al,BYTE PTR [rax]
  41f0b7:	add    BYTE PTR [rdx-0x17ffffe6],dh
  41f0bd:	add    BYTE PTR [rdx],al
  41f0bf:	add    al,al
  41f0c1:	sbb    al,BYTE PTR [rax]
  41f0c3:	add    BYTE PTR [rcx+0x1c],dl
  41f0c6:	add    BYTE PTR [rax],al
  41f0c8:	lock add BYTE PTR [rdx],al
  41f0cb:	add    BYTE PTR [rax+0x1c],ah
  41f0ce:	add    BYTE PTR [rax],al
  41f0d0:	(bad)  
  41f0d1:	sbb    al,0x0
  41f0d3:	add    BYTE PTR [rcx+rax*1],al
  41f0d6:	add    al,BYTE PTR [rax]
  41f0d8:	loopne 0x41f0f6
  41f0da:	add    BYTE PTR [rax],al
  41f0dc:	and    eax,0x1000001d
  41f0e1:	add    DWORD PTR [rdx],eax
  41f0e3:	add    BYTE PTR [rax],dh
  41f0e5:	sbb    eax,0x1e7d0000
  41f0ea:	add    BYTE PTR [rax],al
  41f0ec:	sbb    al,0x1
  41f0ee:	add    al,BYTE PTR [rax]
  41f0f0:	sbb    BYTE PTR [rsi],0x0
  41f0f3:	add    BYTE PTR [rbp+0x2c00001e],bl
  41f0f9:	add    DWORD PTR [rdx],eax
  41f0fb:	add    BYTE PTR [rax-0x38ffffe2],ah
  41f101:	(bad)  
  41f102:	add    BYTE PTR [rax],al
  41f104:	xor    al,0x1
  41f106:	add    al,BYTE PTR [rax]
  41f108:	rcr    BYTE PTR [rsi],1
  41f10a:	add    BYTE PTR [rax],al
  41f10c:	neg    DWORD PTR [rsi]
  41f10e:	add    BYTE PTR [rax],al
  41f110:	cmp    al,0x1
  41f112:	add    al,BYTE PTR [rax]
  41f114:	add    BYTE PTR [rdi],bl
  41f116:	add    BYTE PTR [rax],al
  41f118:	xor    BYTE PTR [rdi],bl
  41f11a:	add    BYTE PTR [rax],al
  41f11c:	add    DWORD PTR [rdx],r8d
  41f11f:	add    BYTE PTR [rax],dh
  41f121:	(bad)  
  41f122:	add    BYTE PTR [rax],al
  41f124:	push   rdi
  41f125:	and    al,BYTE PTR [rax]
  41f127:	add    BYTE PTR [rax+0x1],dl
  41f12a:	add    al,BYTE PTR [rax]
  41f12c:	(bad)  
  41f12d:	and    al,BYTE PTR [rax]
  41f12f:	add    bh,bl
  41f131:	and    eax,DWORD PTR [rax]
  41f133:	add    BYTE PTR [rax+0x1],ch
  41f136:	add    al,BYTE PTR [rax]
  41f138:	loopne 0x41f15d
  41f13a:	add    BYTE PTR [rax],al
  41f13c:	rex.W and al,0x0
  41f13f:	add    BYTE PTR [rax+0x50000201],al
  41f145:	and    al,0x0
  41f147:	add    BYTE PTR [rsp+0x0],ah
  41f14b:	add    BYTE PTR [rcx+rax*1+0x24700002],dl
  41f152:	add    BYTE PTR [rax],al
  41f154:	xchg   edx,eax
  41f155:	and    al,0x0
  41f157:	add    BYTE PTR [rcx+rax*1+0x24a00002],bl
  41f15e:	add    BYTE PTR [rax],al
  41f160:	and    BYTE PTR [rdi],0x0
  41f163:	add    BYTE PTR [rcx+rax*1+0x27800002],ah
  41f16a:	add    BYTE PTR [rax],al
  41f16c:	pushf  
  41f16d:	(bad)  
  41f16e:	add    BYTE PTR [rax],al
  41f170:	mov    ah,0x1
  41f172:	add    al,BYTE PTR [rax]
  41f174:	movabs al,ds:0xb8000028e0000027
  41f17d:	add    DWORD PTR [rdx],eax
  41f17f:	add    al,ah
  41f181:	sub    BYTE PTR [rax],al
  41f183:	add    BYTE PTR [rbx+0x2a],al
  41f186:	add    BYTE PTR [rax],al
  41f188:	mov    esp,0x50000201
  41f18d:	sub    al,BYTE PTR [rax]
  41f18f:	add    ch,dl
  41f191:	sub    al,BYTE PTR [rax]
  41f193:	add    al,al
  41f195:	add    DWORD PTR [rdx],eax
  41f197:	add    al,ah
  41f199:	sub    al,BYTE PTR [rax]
  41f19b:	add    BYTE PTR [rcx-0x33ffffd5],ah
  41f1a1:	add    DWORD PTR [rdx],eax
  41f1a3:	add    BYTE PTR [rax+0x800002b],dh
  41f1a9:	add    BYTE PTR cs:[rax],al
  41f1ac:	in     al,0x1
  41f1ae:	add    al,BYTE PTR [rax]
  41f1b0:	adc    BYTE PTR [rsi],ch
  41f1b2:	add    BYTE PTR [rax],al
  41f1b4:	shr    DWORD PTR [rsi],1
  41f1b6:	add    BYTE PTR [rax],al
  41f1b8:	hlt    
  41f1b9:	add    DWORD PTR [rdx],eax
  41f1bb:	add    al,ah
  41f1bd:	add    BYTE PTR cs:[rax],al
  41f1c0:	xor    DWORD PTR [rax],0x0
  41f1c3:	add    BYTE PTR [rax],cl
  41f1c5:	add    al,BYTE PTR [rdx]
  41f1c7:	add    BYTE PTR [rax+0x10000030],dl
  41f1cd:	xor    al,BYTE PTR [rax]
  41f1cf:	add    BYTE PTR [rax],bl
  41f1d1:	add    al,BYTE PTR [rdx]
  41f1d3:	add    BYTE PTR [rax],dl
  41f1d5:	xor    al,BYTE PTR [rax]
  41f1d7:	add    ah,dh
  41f1d9:	xor    al,BYTE PTR [rax]
  41f1db:	add    BYTE PTR [rdx+rax*1],ch
  41f1de:	add    al,BYTE PTR [rax]
  41f1e0:	add    BYTE PTR [rbx],dh
  41f1e2:	add    BYTE PTR [rax],al
  41f1e4:	xlat   BYTE PTR ds:[rbx]
  41f1e5:	xor    eax,DWORD PTR [rax]
  41f1e7:	add    BYTE PTR [rax],bh
  41f1e9:	add    al,BYTE PTR [rdx]
  41f1eb:	add    al,ah
  41f1ed:	xor    eax,DWORD PTR [rax]
  41f1ef:	add    BYTE PTR [rdi+0x34],dh
  41f1f2:	add    BYTE PTR [rax],al
  41f1f4:	add    r8b,BYTE PTR [rdx]
  41f1f7:	add    BYTE PTR [rax+0x3d000034],al
  41f1fd:	add    BYTE PTR ss:[rax],al
  41f200:	push   rax
  41f201:	add    al,BYTE PTR [rdx]
  41f203:	add    BYTE PTR [rax+0x36],al
  41f206:	add    BYTE PTR [rax],al
  41f208:	xchg   ecx,eax
  41f209:	add    BYTE PTR ss:[rax],al
  41f20c:	pop    rsp
  41f20d:	add    al,BYTE PTR [rdx]
  41f20f:	add    BYTE PTR [rax+0x5f000036],ah
  41f215:	(bad)  
  41f216:	add    BYTE PTR [rax],al
  41f218:	push   0x60000202
  41f21d:	(bad)  
  41f21e:	add    BYTE PTR [rax],al
  41f220:	(bad)  
  41f221:	cmp    BYTE PTR [rax],al
  41f223:	add    BYTE PTR [rax+0x2],bh
  41f226:	add    al,BYTE PTR [rax]
  41f228:	sar    BYTE PTR [rax],1
  41f22a:	add    BYTE PTR [rax],al
  41f22c:	adc    DWORD PTR [rcx],edi
  41f22e:	add    BYTE PTR [rax],al
  41f230:	mov    WORD PTR [rdx],es
  41f232:	add    al,BYTE PTR [rax]
  41f234:	and    BYTE PTR [rcx],bh
  41f236:	add    BYTE PTR [rax],al
  41f238:	fidivr DWORD PTR [rcx]
  41f23a:	add    BYTE PTR [rax],al
  41f23c:	cwde   
  41f23d:	add    al,BYTE PTR [rdx]
  41f23f:	add    al,ah
  41f241:	cmp    DWORD PTR [rax],eax
  41f243:	add    BYTE PTR [rax],cl
  41f245:	cmp    al,0x0
  41f247:	add    BYTE PTR [rax+0x10000202],ch
  41f24d:	cmp    al,0x0
  41f24f:	add    BYTE PTR [rbx],cl
  41f251:	add    BYTE PTR ds:[rax],al
  41f254:	rol    BYTE PTR [rdx],0x2
  41f257:	add    BYTE PTR [rax],dl
  41f259:	add    BYTE PTR ds:[rax],al
  41f25c:	enter  0x3e,0x0
  41f260:	int3   
  41f261:	add    al,BYTE PTR [rdx]
  41f263:	add    al,dl
  41f265:	add    BYTE PTR ds:[rax],al
  41f268:	cdq    
  41f269:	add    BYTE PTR [rax],al
  41f26c:	fadd   QWORD PTR [rdx]
  41f26e:	add    al,BYTE PTR [rax]
  41f270:	movabs al,ds:0xf4000041f8000040
  41f279:	add    al,BYTE PTR [rdx]
  41f27b:	add    BYTE PTR [rax],al
  41f27d:	rex.X add BYTE PTR [rax],al
  41f280:	jne    0x41f2c5
  41f282:	add    BYTE PTR [rax],al
  41f284:	or     BYTE PTR [rbx],al
  41f286:	add    al,BYTE PTR [rax]
  41f288:	add    BYTE PTR [rbx+0x0],0x0
  41f28c:	int3   
  41f28d:	rex.XB add BYTE PTR [r8],al
  41f290:	and    BYTE PTR [rbx],al
  41f292:	add    al,BYTE PTR [rax]
  41f294:	rol    BYTE PTR [rbx+0x0],1
  41f297:	add    BYTE PTR [rax],bh
  41f299:	rex.W add BYTE PTR [rax],al
  41f29c:	sub    al,0x3
  41f29e:	add    al,BYTE PTR [rax]
  41f2a0:	rex
  41f2a1:	rex.W add BYTE PTR [rax],al
  41f2a4:	or     ecx,DWORD PTR [rax+rax*1+0x0]
  41f2a8:	add    r8d,DWORD PTR [rdx]
  41f2ab:	add    BYTE PTR [rax],dl
  41f2ad:	rex.WR add BYTE PTR [rax],r8b
  41f2b0:	enter  0x4d,0x0
  41f2b4:	pop    rsp
  41f2b5:	add    eax,DWORD PTR [rdx]
  41f2b7:	add    al,dl
  41f2b9:	rex.WRB add BYTE PTR [r8],r8b
  41f2bc:	rcl    BYTE PTR [rax+rax*1+0x0],0x6c
  41f2c1:	add    eax,DWORD PTR [rdx]
  41f2c3:	add    al,al
  41f2c5:	push   rsp
  41f2c6:	add    BYTE PTR [rax],al
  41f2c8:	test   eax,0x84000058
  41f2cd:	add    eax,DWORD PTR [rdx]
  41f2cf:	add    BYTE PTR [rax+0x37000058],dh
  41f2d5:	pop    rbp
  41f2d6:	add    BYTE PTR [rax],al
  41f2d8:	pushf  
  41f2d9:	add    eax,DWORD PTR [rdx]
  41f2db:	add    BYTE PTR [rax+0x5d],al
  41f2de:	add    BYTE PTR [rax],al
  41f2e0:	sti    
  41f2e1:	movsxd eax,DWORD PTR [rax]
  41f2e3:	add    BYTE PTR [rbx+rax*1+0x64000002],dh
  41f2ea:	add    BYTE PTR [rax],al
  41f2ec:	jge    0x41f352
  41f2ee:	add    BYTE PTR [rax],al
  41f2f0:	int3   
  41f2f1:	add    eax,DWORD PTR [rdx]
  41f2f3:	add    BYTE PTR [rax-0x2ffff9c],al
  41f2f9:	add    BYTE PTR fs:[rax],al
  41f2fc:	fadd   QWORD PTR [rbx]
  41f2fe:	add    al,BYTE PTR [rax]
  41f300:	add    BYTE PTR [rbp+0x0],ah
  41f303:	add    ah,al
  41f305:	add    BYTE PTR gs:[rax],al
  41f308:	in     al,dx
  41f309:	add    eax,DWORD PTR [rdx]
  41f30b:	add    al,dl
  41f30d:	add    BYTE PTR gs:[rax],al
  41f310:	xchg   BYTE PTR [rsi+0x0],ah
  41f313:	add    ah,dh
  41f315:	add    eax,DWORD PTR [rdx]
  41f317:	add    BYTE PTR [rax+0x13000066],dl
  41f31d:	add    BYTE PTR [eax],al
  41f320:	add    BYTE PTR [rdx+rax*1],al
  41f323:	add    BYTE PTR [rax],ah
  41f325:	add    BYTE PTR [eax],al
  41f328:	shl    BYTE PTR [rdi+0x0],0x0
  41f32c:	or     BYTE PTR [rdx+rax*1],al
  41f32f:	add    al,al
  41f331:	add    BYTE PTR [eax],al
  41f334:	outs   dx,DWORD PTR ds:[rsi]
  41f335:	push   0x4180000
  41f33a:	add    al,BYTE PTR [rax]
  41f33c:	jo     0x41f3a6
  41f33e:	add    BYTE PTR [rax],al
  41f340:	out    dx,al
  41f341:	push   0x4280000
  41f346:	add    al,BYTE PTR [rax]
  41f348:	lock push 0x6ad40000
  41f34e:	add    BYTE PTR [rax],al
  41f350:	xor    BYTE PTR [rdx+rax*1],al
  41f353:	add    al,ah
  41f355:	push   0x0
  41f357:	add    BYTE PTR [rcx],bl
  41f359:	ins    DWORD PTR es:[rdi],dx
  41f35a:	add    BYTE PTR [rax],al
  41f35c:	cmp    al,0x4
  41f35e:	add    al,BYTE PTR [rax]
  41f360:	and    BYTE PTR [rbp+0x0],ch
  41f363:	add    BYTE PTR [rax],dh
  41f365:	jp     0x41f367
  41f367:	add    BYTE PTR [rax+0x4],dl
  41f36a:	add    al,BYTE PTR [rax]
  41f36c:	xor    BYTE PTR [rdx+0x0],bh
  41f36f:	add    BYTE PTR [rdx+0x7a],ch
  41f372:	add    BYTE PTR [rax],al
  41f374:	push   0x70000204
  41f379:	jp     0x41f37b
  41f37b:	add    BYTE PTR [rbp+0x7b],dh
  41f37e:	add    BYTE PTR [rax],al
  41f380:	je     0x41f386
  41f382:	add    al,BYTE PTR [rax]
  41f384:	cmp    BYTE PTR [rbx+0x0],0x0
  41f388:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  41f389:	jnp    0x41f38b
  41f38b:	add    BYTE PTR [rsp+rax*1+0x2],bh
  41f38f:	add    BYTE PTR [rax-0x42ffff85],dh
  41f395:	add    DWORD PTR [rax],0x2048800
  41f39b:	add    al,al
  41f39d:	add    DWORD PTR [rax],0x846e00
  41f3a3:	add    BYTE PTR [rax+0x70000204],ah
  41f3a9:	test   BYTE PTR [rax],al
  41f3ab:	add    cl,bl
  41f3ad:	xchg   BYTE PTR [rax],al
  41f3af:	add    BYTE PTR [rax-0x1ffffdfc],bh
  41f3b5:	xchg   BYTE PTR [rax],al
  41f3b7:	add    BYTE PTR [rax+rcx*4],al
  41f3ba:	add    BYTE PTR [rax],al
  41f3bc:	rol    BYTE PTR [rdx+rax*1],1
  41f3bf:	add    BYTE PTR [rax],dl
  41f3c1:	mov    BYTE PTR [rax],al
  41f3c3:	add    BYTE PTR [rsi-0x17ffff70],cl
  41f3c9:	add    al,0x2
  41f3cb:	add    BYTE PTR [rax-0x35ffff70],dl
  41f3d1:	nop
  41f3d2:	add    BYTE PTR [rax],al
  41f3d4:	add    BYTE PTR [rip+0xffffffff90d00002],al        # 0xffffffff9111f3dc
  41f3da:	add    BYTE PTR [rax],al
  41f3dc:	movsxd edx,DWORD PTR [rcx+0x5080000]
  41f3e2:	add    al,BYTE PTR [rax]
  41f3e4:	jo     0x41f377
  41f3e6:	add    BYTE PTR [rax],al
  41f3e8:	pop    rdx
  41f3e9:	xchg   ebx,eax
  41f3ea:	add    BYTE PTR [rax],al
  41f3ec:	adc    al,0x5
  41f3ee:	add    al,BYTE PTR [rax]
  41f3f0:	(bad)  
  41f3f1:	xchg   ebx,eax
  41f3f2:	add    BYTE PTR [rax],al
  41f3f4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  41f3f5:	xchg   ebp,eax
  41f3f6:	add    BYTE PTR [rax],al
  41f3f8:	and    al,0x5
  41f3fa:	add    al,BYTE PTR [rax]
  41f3fc:	mov    al,0x95
  41f3fe:	add    BYTE PTR [rax],al
  41f400:	(bad)  
  41f401:	xchg   ebp,eax
  41f402:	add    BYTE PTR [rax],al
  41f404:	cmp    al,0x5
  41f406:	add    al,BYTE PTR [rax]
  41f408:	add    BYTE PTR [rsi-0x65070000],dl
  41f40e:	add    BYTE PTR [rax],al
  41f410:	add    rax,0xffffffff9b000002
  41f416:	add    BYTE PTR [rax],al
  41f418:	test   eax,0x6000009b
  41f41d:	add    eax,0x9bb00002
  41f422:	add    BYTE PTR [rax],al
  41f424:	out    dx,al
  41f425:	pushf  
  41f426:	add    BYTE PTR [rax],al
  41f428:	ins    BYTE PTR es:[rdi],dx
  41f429:	add    eax,0x9cf00002
  41f42e:	add    BYTE PTR [rax],al
  41f430:	(bad)  
  41f431:	popf   
  41f432:	add    BYTE PTR [rax],al
  41f434:	add    BYTE PTR [rip+0xffffffff9dd00002],0x0        # 0xffffffff9e11f43d
  41f43b:	add    BYTE PTR [rdi],dl
  41f43d:	movabs ds:0xa220000205900000,al
  41f446:	add    BYTE PTR [rax],al
  41f448:	xor    eax,0xa80000a2
  41f44d:	add    eax,0xa2400002
  41f452:	add    BYTE PTR [rax],al
  41f454:	xchg   BYTE PTR [rdx+0x5ac0000],ah
  41f45a:	add    al,BYTE PTR [rax]
  41f45c:	nop
  41f45d:	movabs ds:0x5b40000a2de0000,al
  41f466:	add    al,BYTE PTR [rax]
  41f468:	loopne 0x41f40c
  41f46a:	add    BYTE PTR [rax],al
  41f46c:	pop    rsp
  41f46d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  41f46e:	add    BYTE PTR [rax],al
  41f470:	mov    esp,0x60000205
  41f475:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  41f476:	add    BYTE PTR [rax],al
  41f478:	lahf   
  41f479:	test   al,0x0
  41f47b:	add    ah,dl
  41f47d:	add    eax,0xa8a00002
  41f482:	add    BYTE PTR [rax],al
  41f484:	(bad)  
  41f485:	test   eax,0x5e00000
  41f48a:	add    al,BYTE PTR [rax]
  41f48c:	movabs al,ds:0xec0000aa8d0000a9
  41f495:	add    eax,0xaa900002
  41f49a:	add    BYTE PTR [rax],al
  41f49c:	fsubr  DWORD PTR [rbp+0x5f80000]
  41f4a2:	add    al,BYTE PTR [rax]
  41f4a4:	loopne 0x41f453
  41f4a6:	add    BYTE PTR [rax],al
  41f4a8:	push   rax
  41f4a9:	scas   al,BYTE PTR es:[rdi]
  41f4aa:	add    BYTE PTR [rax],al
  41f4ac:	or     al,0x6
  41f4ae:	add    al,BYTE PTR [rax]
  41f4b0:	push   rax
  41f4b1:	scas   al,BYTE PTR es:[rdi]
  41f4b2:	add    BYTE PTR [rax],al
  41f4b4:	sahf   
  41f4b5:	scas   eax,DWORD PTR es:[rdi]
  41f4b6:	add    BYTE PTR [rax],al
  41f4b8:	sbb    BYTE PTR [rsi],al
  41f4ba:	add    al,BYTE PTR [rax]
  41f4bc:	movabs al,ds:0x280000b1980000af
  41f4c5:	(bad)  
  41f4c6:	add    al,BYTE PTR [rax]
  41f4c8:	movabs al,ds:0x380000b2a50000b1
  41f4d1:	(bad)  
  41f4d2:	add    al,BYTE PTR [rax]
  41f4d4:	mov    al,0xb2
  41f4d6:	add    BYTE PTR [rax],al
  41f4d8:	xchg   DWORD PTR [rax+rax*1+0x2064c00],esi
  41f4df:	add    BYTE PTR [rax+0x470000b4],dl
  41f4e5:	mov    ch,0x0
  41f4e7:	add    BYTE PTR [rax+0x6],ah
  41f4ea:	add    al,BYTE PTR [rax]
  41f4ec:	push   rax
  41f4ed:	mov    ch,0x0
  41f4ef:	add    BYTE PTR [rax-0x49],cl
  41f4f2:	add    BYTE PTR [rax],al
  41f4f4:	jo     0x41f4fc
  41f4f6:	add    al,BYTE PTR [rax]
  41f4f8:	push   rax
  41f4f9:	mov    bh,0x0
  41f4fb:	add    BYTE PTR [rdi-0x7fffff49],ah
  41f501:	(bad)  
  41f502:	add    al,BYTE PTR [rax]
  41f504:	mov    al,0xb7
  41f506:	add    BYTE PTR [rax],al
  41f508:	(bad)  
  41f509:	mov    bh,0x0
  41f50b:	add    BYTE PTR [rsi+rax*1-0x480ffffe],cl
  41f512:	add    BYTE PTR [rax],al
  41f514:	rex.RX mov eax,0x6900000
  41f51a:	add    al,BYTE PTR [rax]
  41f51c:	push   rax
  41f51d:	mov    eax,0xb8810000
  41f522:	add    BYTE PTR [rax],al
  41f524:	xchg   esp,eax
  41f525:	(bad)  
  41f526:	add    al,BYTE PTR [rax]
  41f528:	nop
  41f529:	mov    eax,0xb8ba0000
  41f52e:	add    BYTE PTR [rax],al
  41f530:	cwde   
  41f531:	(bad)  
  41f532:	add    al,BYTE PTR [rax]
  41f534:	sar    BYTE PTR [rax-0x450d0000],0x0
  41f53b:	add    BYTE PTR [rsi+rax*1-0x44fffffe],bl
  41f542:	add    BYTE PTR [rax],al
  41f544:	cmp    DWORD PTR [rbx+0x6ac0000],0x2
  41f54b:	add    BYTE PTR [rax+0x220000bb],dl
  41f551:	mov    BYTE PTR [rax],0x0
  41f554:	mov    eax,0x30000206
  41f559:	mov    BYTE PTR [rax],0x0
  41f55c:	cli    
  41f55d:	mov    DWORD PTR [rax],0x206d000
  41f563:	add    BYTE PTR [rax],al
  41f565:	enter  0x0,0x37
  41f569:	enter  0x0,0xe8
  41f56d:	(bad)  
  41f56e:	add    al,BYTE PTR [rax]
  41f570:	rex enter 0x0,0xd1
  41f575:	enter  0x0,0xf4
  41f579:	(bad)  
  41f57a:	add    al,BYTE PTR [rax]
  41f57c:	loopne 0x41f546
  41f57e:	add    BYTE PTR [rax],al
  41f580:	test   cl,cl
  41f582:	add    BYTE PTR [rax],al
  41f584:	add    BYTE PTR [rdi],al
  41f586:	add    al,BYTE PTR [rax]
  41f588:	nop
  41f589:	leave  
  41f58a:	add    BYTE PTR [rax],al
  41f58c:	cmp    eax,0x100000ca
  41f591:	(bad)  
  41f592:	add    al,BYTE PTR [rax]
  41f594:	rex retf 0x0
  41f598:	fs retf 0x0
  41f59c:	and    al,0x7
  41f59e:	add    al,BYTE PTR [rax]
  41f5a0:	jo     0x41f56c
  41f5a2:	add    BYTE PTR [rax],al
  41f5a4:	gs (bad) 
  41f5a6:	add    BYTE PTR [rax],al
  41f5a8:	sub    al,0x7
  41f5aa:	add    al,BYTE PTR [rax]
  41f5ac:	jo     0x41f57c
  41f5ae:	add    BYTE PTR [rax],al
  41f5b0:	jl     0x41f582
  41f5b2:	add    BYTE PTR [rax],al
  41f5b4:	cmp    al,0x7
  41f5b6:	add    al,BYTE PTR [rax]
  41f5b8:	adc    al,0x0
  41f5bb:	add    BYTE PTR [rdx+0x540000d8],cl
  41f5c1:	(bad)  
  41f5c2:	add    al,BYTE PTR [rax]
  41f5c4:	nop
  41f5c5:	fadd   DWORD PTR [rax]
  41f5c7:	add    BYTE PTR [rdi],dh
  41f5c9:	fld    DWORD PTR [rax]
  41f5cb:	add    BYTE PTR [rdi+rax*1+0x2],ch
  41f5cf:	add    BYTE PTR [rax-0x27],al
  41f5d2:	add    BYTE PTR [rax],al
  41f5d4:	je     0x41f5b0
  41f5d6:	add    BYTE PTR [rax],al
  41f5d8:	js     0x41f5e1
  41f5da:	add    al,BYTE PTR [rax]
  41f5dc:	sbb    dl,0x0
  41f5df:	add    ah,cl
  41f5e1:	loopne 0x41f5e3
  41f5e3:	add    BYTE PTR [rax-0x2ffffdf9],dl
  41f5e9:	loopne 0x41f5eb
  41f5eb:	add    dl,bl
  41f5ed:	loopne 0x41f5ef
  41f5ef:	add    BYTE PTR [rax-0x1ffffdf9],ah
  41f5f5:	loopne 0x41f5f7
  41f5f7:	add    bl,dh
  41f5f9:	loopne 0x41f5fb
  41f5fb:	add    BYTE PTR [rax+0x207],ch
  41f601:	loope  0x41f603
  41f603:	add    BYTE PTR [rax],cl
  41f605:	loope  0x41f607
  41f607:	add    BYTE PTR [rax+0x10000207],dh
  41f60d:	loope  0x41f60f
  41f60f:	add    BYTE PTR [rcx+riz*8+0x0],ah
  41f613:	add    BYTE PTR [rdi+rax*1-0x1e8ffffe],dh
  41f61a:	add    BYTE PTR [rax],al
  41f61c:	stos   DWORD PTR es:[rdi],eax
  41f61d:	loope  0x41f61f
  41f61f:	add    al,al
  41f621:	(bad)  
  41f622:	add    al,BYTE PTR [rax]
  41f624:	mov    al,0xe1
  41f626:	add    BYTE PTR [rax],al
  41f628:	rex.WR loop 0x41f62b
  41f62b:	add    ah,cl
  41f62d:	(bad)  
  41f62e:	add    al,BYTE PTR [rax]
  41f630:	push   rax
  41f631:	loop   0x41f633
  41f633:	add    BYTE PTR [rbp-0x1e],ch
  41f636:	add    BYTE PTR [rax],al
  41f638:	fadd   QWORD PTR [rdi]
  41f63a:	add    al,BYTE PTR [rax]
  41f63c:	jo     0x41f620
  41f63e:	add    BYTE PTR [rax],al
  41f640:	std    
  41f641:	inc    DWORD PTR [rax]
  41f643:	add    ah,ah
  41f645:	(bad)  
  41f646:	add    al,BYTE PTR [rax]
  41f648:	add    BYTE PTR [rax],al
  41f64a:	add    DWORD PTR [rax],eax
  41f64c:	xor    eax,0x100
  41f651:	or     BYTE PTR [rdx],al
  41f653:	add    BYTE PTR [rax+0x0],al
  41f656:	add    DWORD PTR [rax],eax
  41f658:	sub    al,BYTE PTR [rcx]
  41f65a:	add    DWORD PTR [rax],eax
  41f65c:	or     BYTE PTR [rax],cl
  41f65e:	add    al,BYTE PTR [rax]
  41f660:	xor    BYTE PTR [rcx],al
  41f662:	add    DWORD PTR [rax],eax
  41f664:	prefetch BYTE PTR [rcx]
  41f667:	add    BYTE PTR [rax+rcx*1],cl
  41f66a:	add    al,BYTE PTR [rax]
  41f66c:	adc    BYTE PTR [rip+0xd550001],cl        # 0xd96f673
  41f672:	add    DWORD PTR [rax],eax
  41f674:	and    al,0x8
  41f676:	add    al,BYTE PTR [rax]
  41f678:	or     BYTE PTR [rip+0xe270001],0x1        # 0xe68f680
  41f67f:	add    BYTE PTR [rax+rcx*1],ch
  41f682:	add    al,BYTE PTR [rax]
  41f684:	xor    BYTE PTR [rsi],cl
  41f686:	add    DWORD PTR [rax],eax
  41f688:	rex.WB (bad) 
  41f68a:	add    DWORD PTR [rax],eax
  41f68c:	xor    al,0x8
  41f68e:	add    al,BYTE PTR [rax]
  41f690:	push   rax
  41f691:	(bad)  
  41f692:	add    DWORD PTR [rax],eax
  41f694:	test   DWORD PTR [rsi],ecx
  41f696:	add    DWORD PTR [rax],eax
  41f698:	cmp    al,0x8
  41f69a:	add    al,BYTE PTR [rax]
  41f69c:	nop
  41f69d:	(bad)  
  41f69e:	add    DWORD PTR [rax],eax
  41f6a0:	in     eax,0xe
  41f6a2:	add    DWORD PTR [rax],eax
  41f6a4:	or     BYTE PTR [rdx],r8b
  41f6a7:	add    al,dh
  41f6a9:	(bad)  
  41f6aa:	add    DWORD PTR [rax],eax
  41f6ac:	or     al,0xf
  41f6ae:	add    DWORD PTR [rax],eax
  41f6b0:	push   rax
  41f6b1:	or     BYTE PTR [rdx],al
  41f6b3:	add    BYTE PTR [rax],dl
  41f6b5:	sgdt   [rax]
  41f6b8:	sbb    cl,BYTE PTR [rdi]
  41f6ba:	add    DWORD PTR [rax],eax
  41f6bc:	push   rsp
  41f6bd:	or     BYTE PTR [rdx],al
  41f6bf:	add    BYTE PTR [rax],ah
  41f6c1:	sgdt   [rax]
  41f6c4:	and    ecx,DWORD PTR [rdi]
  41f6c6:	add    DWORD PTR [rax],eax
  41f6c8:	pop    rax
  41f6c9:	or     BYTE PTR [rdx],al
  41f6cb:	add    BYTE PTR [rax],dh
  41f6cd:	sgdt   [rax]
  41f6d0:	(bad)  
  41f6d1:	adc    BYTE PTR [rcx],al
  41f6d3:	add    BYTE PTR [rax+rcx*1+0x2],bl
  41f6d7:	add    BYTE PTR [rax],dl
  41f6d9:	adc    BYTE PTR [rcx],al
  41f6db:	add    BYTE PTR [rbx],cl
  41f6dd:	adc    DWORD PTR [rcx],eax
  41f6df:	add    BYTE PTR [rax+rcx*1+0x2],ch
  41f6e3:	add    BYTE PTR [rax],dl
  41f6e5:	adc    DWORD PTR [rcx],eax
  41f6e7:	add    BYTE PTR [rdi],bh
  41f6e9:	adc    DWORD PTR [rcx],eax
  41f6eb:	add    BYTE PTR [rax+rcx*1+0x2],bh
  41f6ef:	add    BYTE PTR [rax+0x11],al
  41f6f2:	add    DWORD PTR [rax],eax
  41f6f4:	test   eax,0x84000111
  41f6f9:	or     BYTE PTR [rdx],al
  41f6fb:	add    BYTE PTR [rax-0x4cfffeef],dh
  41f701:	adc    DWORD PTR [rcx],eax
  41f703:	add    BYTE PTR [rax-0x3ffffdf8],dl
  41f709:	adc    DWORD PTR [rcx],eax
  41f70b:	add    BYTE PTR [rcx],al
  41f70d:	adc    al,BYTE PTR [rcx]
  41f70f:	add    BYTE PTR [rax+rcx*1+0x12100002],dl
  41f716:	add    DWORD PTR [rax],eax
  41f718:	sbb    al,0x12
  41f71a:	add    DWORD PTR [rax],eax
  41f71c:	pushf  
  41f71d:	or     BYTE PTR [rdx],al
  41f71f:	add    BYTE PTR [rax],ah
  41f721:	adc    al,BYTE PTR [rcx]
  41f723:	add    BYTE PTR [rbx+rdx*1],bl
  41f726:	add    DWORD PTR [rax],eax
  41f728:	movabs al,ds:0x2300011320000208
  41f731:	adc    eax,DWORD PTR [rcx]
  41f733:	add    BYTE PTR [rax+0x30000208],bh
  41f739:	adc    eax,DWORD PTR [rcx]
  41f73b:	add    BYTE PTR [rbx+rdx*1],dh
  41f73e:	add    DWORD PTR [rax],eax
  41f740:	mov    esp,0x40000208
  41f745:	adc    eax,DWORD PTR [rcx]
  41f747:	add    BYTE PTR [rbx+rdx*1+0x1],al
  41f74b:	add    al,al
  41f74d:	or     BYTE PTR [rdx],al
  41f74f:	add    BYTE PTR [rax+0x13],dl
  41f752:	add    DWORD PTR [rax],eax
  41f754:	mov    cl,0x13
  41f756:	add    DWORD PTR [rax],eax
  41f758:	(bad)  
  41f759:	or     BYTE PTR [rdx],al
  41f75b:	add    al,al
  41f75d:	adc    eax,DWORD PTR [rcx]
  41f75f:	add    BYTE PTR [rdx],ah
  41f761:	adc    eax,0x8d00001
  41f766:	add    al,BYTE PTR [rax]
  41f768:	xor    BYTE PTR [rip+0x18290001],dl        # 0x186af76f
  41f76e:	add    DWORD PTR [rax],eax
  41f770:	in     al,0x8
  41f772:	add    al,BYTE PTR [rax]
  41f774:	xor    BYTE PTR [rax],bl
  41f776:	add    DWORD PTR [rax],eax
  41f778:	(bad)  
  41f779:	sbb    DWORD PTR [rcx],eax
  41f77b:	add    ah,bh
  41f77d:	or     BYTE PTR [rdx],al
  41f77f:	add    al,ah
  41f781:	sbb    DWORD PTR [rcx],eax
  41f783:	add    ah,cl
  41f785:	sbb    al,BYTE PTR [rcx]
  41f787:	add    BYTE PTR [rcx+rcx*1],al
  41f78a:	add    al,BYTE PTR [rax]
  41f78c:	rcr    BYTE PTR [rdx],1
  41f78e:	add    DWORD PTR [rax],eax
  41f790:	mov    BYTE PTR [rcx+rax*1],bl
  41f793:	add    BYTE PTR [rcx+rcx*1],dl
  41f796:	add    al,BYTE PTR [rax]
  41f798:	nop
  41f799:	sbb    al,0x1
  41f79b:	add    ch,bh
  41f79d:	sbb    al,0x1
  41f79f:	add    BYTE PTR [rcx+rcx*1],bl
  41f7a2:	add    al,BYTE PTR [rax]
  41f7a4:	add    BYTE PTR [rip+0x1d7f0001],bl        # 0x1dc0f7ab
  41f7aa:	add    DWORD PTR [rax],eax
  41f7ac:	sub    al,0x9
  41f7ae:	add    al,BYTE PTR [rax]
  41f7b0:	sbb    BYTE PTR [rip+0x1e1f0001],0x1        # 0x1e60f7b8
  41f7b7:	add    BYTE PTR [rax],bh
  41f7b9:	or     DWORD PTR [rdx],eax
  41f7bb:	add    BYTE PTR [rax],ah
  41f7bd:	(bad)  
  41f7be:	add    DWORD PTR [rax],eax
  41f7c0:	cli    
  41f7c1:	(bad)  
  41f7c2:	add    DWORD PTR [rax],eax
  41f7c4:	rex or DWORD PTR [rdx],eax
  41f7c7:	add    BYTE PTR [rax],al
  41f7c9:	(bad)  
  41f7ca:	add    DWORD PTR [rax],eax
  41f7cc:	(bad)  
  41f7cd:	(bad)  
  41f7ce:	add    DWORD PTR [rax],eax
  41f7d0:	or     QWORD PTR [rdx],rax
  41f7d3:	add    BYTE PTR [rax],ah
  41f7d5:	(bad)  
  41f7d6:	add    DWORD PTR [rax],eax
  41f7d8:	xor    bl,BYTE PTR [rdi]
  41f7da:	add    DWORD PTR [rax],eax
  41f7dc:	or     QWORD PTR [rdx],r8
  41f7df:	add    BYTE PTR [rax+0x1f],al
  41f7e2:	add    DWORD PTR [rax],eax
  41f7e4:	test   DWORD PTR [rdi],ebx
  41f7e6:	add    DWORD PTR [rax],eax
  41f7e8:	push   rax
  41f7e9:	or     DWORD PTR [rdx],eax
  41f7eb:	add    BYTE PTR [rax+0x2e00011f],dl
  41f7f1:	and    BYTE PTR [rcx],al
  41f7f3:	add    BYTE PTR [rcx+rcx*1+0x2],dl
  41f7f7:	add    BYTE PTR [rax],dh
  41f7f9:	and    BYTE PTR [rcx],al
  41f7fb:	add    BYTE PTR [rbx+0x20],dh
  41f7fe:	add    DWORD PTR [rax],eax
  41f800:	(bad)  
  41f801:	or     DWORD PTR [rdx],eax
  41f803:	add    BYTE PTR [rax-0x44fffee0],al
  41f809:	and    BYTE PTR [rcx],al
  41f80b:	add    BYTE PTR [rcx+rcx*1+0x2],ch
  41f80f:	add    al,al
  41f811:	and    BYTE PTR [rcx],al
  41f813:	add    BYTE PTR [rsi+0x21],cl
  41f816:	add    DWORD PTR [rax],eax
  41f818:	je     0x41f823
  41f81a:	add    al,BYTE PTR [rax]
  41f81c:	push   rax
  41f81d:	and    DWORD PTR [rcx],eax
  41f81f:	add    BYTE PTR [rax-0x7ffffedf],cl
  41f825:	or     DWORD PTR [rdx],eax
  41f827:	add    BYTE PTR [rax-0x1afffedf],dl
  41f82d:	and    DWORD PTR [rcx],eax
  41f82f:	add    BYTE PTR [rcx+rcx*1+0x21f00002],cl
  41f836:	add    DWORD PTR [rax],eax
  41f838:	sahf   
  41f839:	and    al,BYTE PTR [rcx]
  41f83b:	add    BYTE PTR [rax-0x1ffffdf7],bl
  41f841:	and    al,BYTE PTR [rcx]
  41f843:	add    BYTE PTR [rbp-0x57fffedc],bh
  41f849:	or     DWORD PTR [rdx],eax
  41f84b:	add    al,al
  41f84d:	and    al,0x1
  41f84f:	add    bh,bl
  41f851:	add    DWORD PTR es:[rax],eax
  41f854:	mov    eax,0xe0000209
  41f859:	add    DWORD PTR es:[rax],eax
  41f85c:	xor    ah,BYTE PTR [rdi]
  41f85e:	add    DWORD PTR [rax],eax
  41f860:	enter  0x209,0x0
  41f864:	rex (bad) 
  41f866:	add    DWORD PTR [rax],eax
  41f868:	xchg   edx,eax
  41f869:	(bad)  
  41f86a:	add    DWORD PTR [rax],eax
  41f86c:	(bad)  
  41f86d:	or     DWORD PTR [rdx],eax
  41f86f:	add    BYTE PTR [rax-0x29fffed9],ah
  41f875:	(bad)  
  41f876:	add    DWORD PTR [rax],eax
  41f878:	fmul   QWORD PTR [rcx]
  41f87a:	add    al,BYTE PTR [rax]
  41f87c:	loopne 0x41f8a5
  41f87e:	add    DWORD PTR [rax],eax
  41f880:	jp     0x41f8aa
  41f882:	add    DWORD PTR [rax],eax
  41f884:	in     al,0x9
  41f886:	add    al,BYTE PTR [rax]
  41f888:	sub    BYTE PTR [rax],0x1
  41f88b:	add    BYTE PTR [rbp-0xffffed8],dh
  41f891:	or     DWORD PTR [rdx],eax
  41f893:	add    al,al
  41f895:	sub    BYTE PTR [rcx],al
  41f897:	add    bl,dh
  41f899:	sub    DWORD PTR [rcx],eax
  41f89b:	add    ah,dh
  41f89d:	or     DWORD PTR [rdx],eax
  41f89f:	add    BYTE PTR [rax],al
  41f8a1:	sub    al,BYTE PTR [rcx]
  41f8a3:	add    al,al
  41f8a5:	sub    al,BYTE PTR [rcx]
  41f8a7:	add    BYTE PTR [rax],cl
  41f8a9:	or     al,BYTE PTR [rdx]
  41f8ab:	add    al,al
  41f8ad:	sub    al,BYTE PTR [rcx]
  41f8af:	add    BYTE PTR [rdi],bh
  41f8b1:	sub    eax,DWORD PTR [rcx]
  41f8b3:	add    BYTE PTR [rax],bl
  41f8b5:	or     al,BYTE PTR [rdx]
  41f8b7:	add    BYTE PTR [rax+0x2b],al
  41f8ba:	add    DWORD PTR [rax],eax
  41f8bc:	test   BYTE PTR [rbx],ch
  41f8be:	add    DWORD PTR [rax],eax
  41f8c0:	and    BYTE PTR [rdx],cl
  41f8c2:	add    al,BYTE PTR [rax]
  41f8c4:	nop
  41f8c5:	sub    eax,DWORD PTR [rcx]
  41f8c7:	add    dl,dl
  41f8c9:	sub    al,0x1
  41f8cb:	add    BYTE PTR [rdx+rcx*1],ch
  41f8ce:	add    al,BYTE PTR [rax]
  41f8d0:	loopne 0x41f8fe
  41f8d2:	add    DWORD PTR [rax],eax
  41f8d4:	in     eax,0x2c
  41f8d6:	add    DWORD PTR [rax],eax
  41f8d8:	or     al,BYTE PTR [rdx]
  41f8db:	add    al,dh
  41f8dd:	sub    al,0x1
  41f8df:	add    BYTE PTR [rcx],dl
  41f8e1:	sub    eax,0xa440001
  41f8e6:	add    al,BYTE PTR [rax]
  41f8e8:	and    BYTE PTR [rip+0x2d510001],ch        # 0x2d92f8ef
  41f8ee:	add    DWORD PTR [rax],eax
  41f8f0:	rex.WR or r8b,BYTE PTR [rdx]
  41f8f3:	add    BYTE PTR [rax+0x2d],ah
  41f8f6:	add    DWORD PTR [rax],eax
  41f8f8:	mov    esp,0x5800012d
  41f8fd:	or     al,BYTE PTR [rdx]
  41f8ff:	add    al,al
  41f901:	sub    eax,0x2ded0001
  41f906:	add    DWORD PTR [rax],eax
  41f908:	or     al,BYTE PTR fs:[rdx]
  41f90b:	add    al,dh
  41f90d:	sub    eax,0x2ee60001
  41f912:	add    DWORD PTR [rax],eax
  41f914:	ins    BYTE PTR es:[rdi],dx
  41f915:	or     al,BYTE PTR [rdx]
  41f917:	add    al,dh
  41f919:	add    DWORD PTR cs:[rax],eax
  41f91c:	rex.RXB (bad) 
  41f91e:	add    DWORD PTR [rax],eax
  41f920:	je     0x41f92c
  41f922:	add    al,BYTE PTR [rax]
  41f924:	push   rax
  41f925:	(bad)  
  41f926:	add    DWORD PTR [rax],eax
  41f928:	outs   dx,DWORD PTR ds:[rsi]
  41f929:	xor    BYTE PTR [rcx],al
  41f92b:	add    BYTE PTR [rdx+rcx*1+0x2],bh
  41f92f:	add    BYTE PTR [rax+0x30],dh
  41f932:	add    DWORD PTR [rax],eax
  41f934:	jne    0x41f967
  41f936:	add    DWORD PTR [rax],eax
  41f938:	nop
  41f939:	or     al,BYTE PTR [rdx]
  41f93b:	add    BYTE PTR [rax+0x1a000131],al
  41f941:	xor    al,BYTE PTR [rcx]
  41f943:	add    BYTE PTR [rdx+rcx*1+0x32200002],bl
  41f94a:	add    DWORD PTR [rax],eax
  41f94c:	or     al,0x33
  41f94e:	add    DWORD PTR [rax],eax
  41f950:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  41f951:	or     al,BYTE PTR [rdx]
  41f953:	add    BYTE PTR [rax],dl
  41f955:	xor    eax,DWORD PTR [rcx]
  41f957:	add    BYTE PTR [rsi+rsi*1+0x1],ch
  41f95b:	add    BYTE PTR [rax+0x7000020a],bh
  41f961:	add    DWORD PTR ss:[rax],eax
  41f964:	push   rcx
  41f965:	(bad)  
  41f966:	add    DWORD PTR [rax],eax
  41f968:	enter  0x20a,0x0
  41f96c:	(bad)  
  41f96d:	(bad)  
  41f96e:	add    DWORD PTR [rax],eax
  41f970:	xor    BYTE PTR [rdx],bh
  41f972:	add    DWORD PTR [rax],eax
  41f974:	(bad)  
  41f975:	or     al,BYTE PTR [rdx]
  41f977:	add    BYTE PTR [rax],dh
  41f979:	cmp    al,BYTE PTR [rcx]
  41f97b:	add    cl,bh
  41f97d:	cmp    al,BYTE PTR [rcx]
  41f97f:	add    al,ch
  41f981:	or     al,BYTE PTR [rdx]
  41f983:	add    BYTE PTR [rax],al
  41f985:	cmp    eax,DWORD PTR [rcx]
  41f987:	add    BYTE PTR [rdi-0xbfffec5],ch
  41f98d:	or     al,BYTE PTR [rdx]
  41f98f:	add    BYTE PTR [rax+0x4600013b],dh
  41f995:	cmp    eax,0xb000001
  41f99a:	add    al,BYTE PTR [rax]
  41f99c:	push   rax
  41f99d:	cmp    eax,0x41080001
  41f9a2:	add    DWORD PTR [rax],eax
  41f9a4:	or     al,0xb
  41f9a6:	add    al,BYTE PTR [rax]
  41f9a8:	adc    BYTE PTR [rcx+0x1],al
  41f9ab:	add    BYTE PTR [rbx],bl
  41f9ad:	rex.RX add DWORD PTR [rax],r8d
  41f9b0:	and    al,0xb
  41f9b2:	add    al,BYTE PTR [rax]
  41f9b4:	and    BYTE PTR [rsi+0x1],al
  41f9b7:	add    BYTE PTR [rdx+0x50],dh
  41f9ba:	add    DWORD PTR [rax],eax
  41f9bc:	cmp    BYTE PTR [rbx],cl
  41f9be:	add    al,BYTE PTR [rax]
  41f9c0:	adc    BYTE PTR [rax+0x1],0x0
  41f9c4:	mov    al,0x50
  41f9c6:	add    DWORD PTR [rax],eax
  41f9c8:	push   rax
  41f9c9:	or     eax,DWORD PTR [rdx]
  41f9cb:	add    BYTE PTR [rax-0x7fffeb0],dh
  41f9d1:	push   rax
  41f9d2:	add    DWORD PTR [rax],eax
  41f9d4:	pop    rax
  41f9d5:	or     eax,DWORD PTR [rdx]
  41f9d7:	add    BYTE PTR [rax],al
  41f9d9:	push   rcx
  41f9da:	add    DWORD PTR [rax],eax
  41f9dc:	sbb    al,0x51
  41f9de:	add    DWORD PTR [rax],eax
  41f9e0:	or     eax,DWORD PTR fs:[rdx]
  41f9e3:	add    BYTE PTR [rax],ah
  41f9e5:	push   rcx
  41f9e6:	add    DWORD PTR [rax],eax
  41f9e8:	(bad)  
  41f9e9:	push   rdx
  41f9ea:	add    DWORD PTR [rax],eax
  41f9ec:	push   0xffffffffa000020b
  41f9f1:	push   rdx
  41f9f2:	add    DWORD PTR [rax],eax
  41f9f4:	or     ah,BYTE PTR [rdi+0x1]
  41f9f7:	add    BYTE PTR [rax+0x1000020b],al
  41f9fd:	add    DWORD PTR [eax],eax
  41fa00:	or     eax,0x9c000168
  41fa05:	or     eax,DWORD PTR [rdx]
  41fa07:	add    BYTE PTR [rax],dl
  41fa09:	push   0x684e0001
  41fa0e:	add    DWORD PTR [rax],eax
  41fa10:	test   al,0xb
  41fa12:	add    al,BYTE PTR [rax]
  41fa14:	push   rax
  41fa15:	push   0x691c0001
  41fa1a:	add    DWORD PTR [rax],eax
  41fa1c:	lods   al,BYTE PTR ds:[rsi]
  41fa1d:	or     eax,DWORD PTR [rdx]
  41fa1f:	add    BYTE PTR [rax],ah
  41fa21:	imul   eax,DWORD PTR [rcx],0x1696200
  41fa27:	add    BYTE PTR [rax+0x7000020b],bh
  41fa2d:	imul   eax,DWORD PTR [rcx],0x16a7e00
  41fa33:	add    al,al
  41fa35:	or     eax,DWORD PTR [rdx]
  41fa37:	add    BYTE PTR [rax-0x19fffe96],al
  41fa3d:	push   0x1
  41fa3f:	add    ah,cl
  41fa41:	or     eax,DWORD PTR [rdx]
  41fa43:	add    al,dh
  41fa45:	push   0x1
  41fa47:	add    BYTE PTR [rdx-0x2bfffe95],ah
  41fa4d:	or     eax,DWORD PTR [rdx]
  41fa4f:	add    BYTE PTR [rax-0x29fffe95],dh
  41fa55:	imul   eax,DWORD PTR [rcx],0x0
  41fa58:	in     al,0xb
  41fa5a:	add    al,BYTE PTR [rax]
  41fa5c:	loopne 0x41fac9
  41fa5e:	add    DWORD PTR [rax],eax
  41fa60:	adc    BYTE PTR [rbp+0x1],ch
  41fa63:	add    ah,ch
  41fa65:	or     eax,DWORD PTR [rdx]
  41fa67:	add    BYTE PTR [rax],dl
  41fa69:	ins    DWORD PTR es:[rdi],dx
  41fa6a:	add    DWORD PTR [rax],eax
  41fa6c:	je     0x41fadc
  41fa6e:	add    DWORD PTR [rax],eax
  41fa70:	add    BYTE PTR [rdx+rax*1],cl
  41fa73:	add    BYTE PTR [rax-0x6cfffe92],al
  41fa79:	outs   dx,DWORD PTR ds:[rsi]
  41fa7a:	add    DWORD PTR [rax],eax
  41fa7c:	adc    BYTE PTR [rdx+rax*1],cl
  41fa7f:	add    BYTE PTR [rax-0x1bfffe91],ah
  41fa85:	outs   dx,DWORD PTR ds:[rsi]
  41fa86:	add    DWORD PTR [rax],eax
  41fa88:	and    al,0xc
  41fa8a:	add    al,BYTE PTR [rax]
  41fa8c:	lock outs dx,DWORD PTR ds:[rsi]
  41fa8e:	add    DWORD PTR [rax],eax
  41fa90:	es jno 0x41fa94
  41fa93:	add    BYTE PTR [rax],ch
  41fa95:	or     al,0x2
  41fa97:	add    BYTE PTR [rax],dh
  41fa99:	jno    0x41fa9c
  41fa9b:	add    BYTE PTR [rbx+0x72],al
  41fa9e:	add    DWORD PTR [rax],eax
  41faa0:	xor    al,0xc
  41faa2:	add    al,BYTE PTR [rax]
  41faa4:	push   rax
  41faa5:	jb     0x41faa8
  41faa7:	add    BYTE PTR [rcx+0x73],bl
  41faaa:	add    DWORD PTR [rax],eax
  41faac:	or     al,0x2
  41faaf:	add    BYTE PTR [rax+0x73],ah
  41fab2:	add    DWORD PTR [rax],eax
  41fab4:	test   BYTE PTR [rbx+0x1],dh
  41fab7:	add    BYTE PTR [rsp+rcx*1+0x2],cl
  41fabb:	add    BYTE PTR [rax-0x4fffe8d],dl
  41fac1:	je     0x41fac4
  41fac3:	add    BYTE PTR [rax+0xc],dl
  41fac6:	add    al,BYTE PTR [rax]
  41fac8:	add    BYTE PTR [rbp+0x1],dh
  41facb:	add    BYTE PTR [rbx+0x75],ch
  41face:	add    DWORD PTR [rax],eax
  41fad0:	(bad)  
  41fad1:	or     al,0x2
  41fad3:	add    BYTE PTR [rax+0x75],dh
  41fad6:	add    DWORD PTR [rax],eax
  41fad8:	xchg   edx,eax
  41fad9:	jbe    0x41fadc
  41fadb:	add    BYTE PTR [rax+0xc],dh
  41fade:	add    al,BYTE PTR [rax]
  41fae0:	movabs al,ds:0x88000176fa000176
  41fae9:	or     al,0x2
  41faeb:	add    BYTE PTR [rax-0x57fffe87],ah
  41faf1:	jns    0x41faf4
  41faf3:	add    BYTE PTR [rax-0x4ffffdf4],bl
  41faf9:	jns    0x41fafc
  41fafb:	add    BYTE PTR [rbx-0x63fffe87],bh
  41fb01:	or     al,0x2
  41fb03:	add    al,al
  41fb05:	jns    0x41fb08
  41fb07:	add    bh,al
  41fb09:	jns    0x41fb0c
  41fb0b:	add    BYTE PTR [rax-0x2ffffdf4],ah
  41fb11:	jns    0x41fb14
  41fb13:	add    cl,bl
  41fb15:	jns    0x41fb18
  41fb17:	add    BYTE PTR [rsp+rcx*1+0x79e00002],ah
  41fb1e:	add    DWORD PTR [rax],eax
  41fb20:	and    edi,DWORD PTR [rdx+0x1]
  41fb23:	add    BYTE PTR [rax+0x3000020c],ch
  41fb29:	jp     0x41fb2c
  41fb2b:	add    BYTE PTR [rbp+0x7a],ch
  41fb2e:	add    DWORD PTR [rax],eax
  41fb30:	mov    al,0xc
  41fb32:	add    al,BYTE PTR [rax]
  41fb34:	jo     0x41fbb0
  41fb36:	add    DWORD PTR [rax],eax
  41fb38:	jp     0x41fbb4
  41fb3a:	add    DWORD PTR [rax],eax
  41fb3c:	mov    eax,0x8000020c
  41fb41:	jp     0x41fb44
  41fb43:	add    BYTE PTR [rdx-0x43fffe86],cl
  41fb49:	or     al,0x2
  41fb4b:	add    BYTE PTR [rax+0x7500017b],dl
  41fb51:	jge    0x41fb54
  41fb53:	.byte 0x0
  41fb54:	nop
  41fb55:	add    BYTE PTR [rdx],al
	...

Disassembly of section .xdata:

0000000000420000 <.xdata>:
  420000:	add    DWORD PTR [rax],eax
  420002:	add    BYTE PTR [rax],al
  420004:	add    DWORD PTR [rcx+rax*1],eax
  420007:	add    BYTE PTR [rdx+rax*2],al
  42000a:	add    BYTE PTR [rax],al
  42000c:	add    DWORD PTR [rcx+rax*1],eax
  42000f:	add    BYTE PTR [rdx+riz*2],al
  420012:	add    BYTE PTR [rax],al
  420014:	add    DWORD PTR [rdi],ecx
  420016:	or     BYTE PTR [rax],al
  420018:	lgdt   [rbx]
  42001b:	add    BYTE PTR [rax],cl
  42001d:	xor    BYTE PTR [rdi],al
  42001f:	(bad)  
  420020:	(bad)  
  420021:	jo     0x420028
  420023:	push   rax
  420024:	add    al,0xc0
  420026:	add    dl,al
  420028:	or     DWORD PTR [rcx+rax*1],eax
  42002b:	add    BYTE PTR [rdx+rax*2],al
  42002e:	add    BYTE PTR [rax],al
  420030:	nop
  420031:	jns    0x420034
  420033:	add    BYTE PTR [rcx],al
  420035:	add    BYTE PTR [rax],al
  420037:	add    ah,dl
  420039:	adc    al,0x0
  42003b:	add    ah,ch
  42003d:	adc    al,0x0
  42003f:	add    al,dl
  420041:	sbb    al,BYTE PTR [rcx]
  420043:	add    ah,ch
  420045:	adc    al,0x0
  420047:	add    BYTE PTR [rcx],cl
  420049:	add    al,0x1
  42004b:	add    BYTE PTR [rdx+rax*2],al
  42004e:	add    BYTE PTR [rax],al
  420050:	nop
  420051:	jns    0x420054
  420053:	add    BYTE PTR [rcx],al
  420055:	add    BYTE PTR [rax],al
  420057:	add    BYTE PTR [rdx*1+0x151c0000],al
  42005e:	add    BYTE PTR [rax],al
  420060:	rcr    BYTE PTR [rdx],1
  420062:	add    DWORD PTR [rax],eax
  420064:	sbb    al,0x15
  420066:	add    BYTE PTR [rax],al
  420068:	add    DWORD PTR [rcx+rax*1],eax
  42006b:	add    BYTE PTR [rdx+riz*2],al
  42006e:	add    BYTE PTR [rax],al
  420070:	add    DWORD PTR [rcx+rax*1],eax
  420073:	add    BYTE PTR [rdx+riz*2],al
  420076:	add    BYTE PTR [rax],al
  420078:	add    DWORD PTR [rcx],ebx
  42007a:	or     al,BYTE PTR [rax]
  42007c:	sbb    DWORD PTR [rcx],eax
  42007e:	or     eax,0x10301103
  420083:	(bad)  
  420084:	pshufw mm1,QWORD PTR [rsi],0x50
  420088:	or     eax,0x4d00bc0
  42008d:	loopne 0x420091
  42008f:	lock add DWORD PTR [rbx],ecx
  420092:	(bad)  
  420093:	add    BYTE PTR [rbx],cl
  420095:	add    DWORD PTR [rbx],esp
  420097:	add    BYTE PTR [rax+rsi*1],al
  42009a:	add    esp,DWORD PTR [rax+0x2]
  42009d:	jo     0x4200a0
  42009f:	push   rax
  4200a0:	add    DWORD PTR [rcx+rax*1],eax
  4200a3:	add    BYTE PTR [rdx+rax*2],al
  4200a6:	add    BYTE PTR [rax],al
  4200a8:	add    DWORD PTR [rsi],eax
  4200aa:	add    eax,DWORD PTR [rax]
  4200ac:	(bad)  
  4200ad:	rex.X add sil,BYTE PTR [rax]
  4200b0:	add    DWORD PTR [rax+0x0],esp
  4200b3:	add    BYTE PTR [rcx],al
  4200b5:	(bad)  
  4200b6:	add    eax,DWORD PTR [rax]
  4200b8:	(bad)  
  4200b9:	rex.X add sil,BYTE PTR [rax]
  4200bc:	add    DWORD PTR [rax+0x0],esp
  4200bf:	add    BYTE PTR [rcx],al
  4200c1:	(bad)  
  4200c2:	add    eax,DWORD PTR [rax]
  4200c4:	(bad)  
  4200c5:	rex.X add sil,BYTE PTR [rax]
  4200c8:	add    DWORD PTR [rax+0x0],esp
  4200cb:	add    BYTE PTR [rcx],al
  4200cd:	or     BYTE PTR [rip+0x4420800],al        # 0x48408d3
  4200d3:	xor    BYTE PTR [rbx],al
  4200d5:	(bad)  
  4200d6:	add    dh,BYTE PTR [rax+0x1]
  4200d9:	push   rax
  4200da:	add    BYTE PTR [rax],al
  4200dc:	add    DWORD PTR [rdi],eax
  4200de:	add    al,0x0
  4200e0:	(bad)  
  4200e1:	xor    al,BYTE PTR [rbx]
  4200e3:	xor    BYTE PTR [rdx],al
  4200e5:	(bad)  
  4200e6:	add    DWORD PTR [rax+0x1],esi
  4200e9:	add    al,0x1
  4200eb:	add    BYTE PTR [rdx+riz*2],al
  4200ee:	add    BYTE PTR [rax],al
  4200f0:	add    DWORD PTR [rdi+rax*1],ecx
  4200f3:	add    BYTE PTR [rdx+riz*2],cl
  4200f6:	or     BYTE PTR [rax],dh
  4200f8:	(bad)  
  4200f9:	(bad)  
  4200fa:	(bad)  
  4200fb:	jo     0x420102
  4200fd:	push   rax
  4200fe:	add    al,0xc0
  420100:	add    dl,al
  420102:	add    BYTE PTR [rax],al
  420104:	add    DWORD PTR [rsi],eax
  420106:	add    eax,DWORD PTR [rax]
  420108:	(bad)  
  420109:	rex.X add sil,BYTE PTR [rax]
  42010c:	add    DWORD PTR [rax+0x0],esp
  42010f:	add    BYTE PTR [rcx],al
  420111:	(bad)  
  420112:	add    eax,DWORD PTR [rax]
  420114:	(bad)  
  420115:	rex.X add sil,BYTE PTR [rax]
  420118:	add    DWORD PTR [rax+0x0],esp
  42011b:	add    BYTE PTR [rcx],al
  42011d:	or     al,BYTE PTR [rsi]
  42011f:	add    BYTE PTR [rdx],cl
  420121:	xor    al,BYTE PTR [rsi]
  420123:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b20589
  420129:	push   rax
  42012a:	add    al,al
  42012c:	add    DWORD PTR [rcx+rax*1],eax
  42012f:	add    BYTE PTR [rdx+riz*2],al
  420132:	add    BYTE PTR [rax],al
  420134:	add    DWORD PTR [rcx+rax*1],eax
  420137:	add    BYTE PTR [rdx+riz*2],al
  42013a:	add    BYTE PTR [rax],al
  42013c:	add    DWORD PTR [rip+0x32050002],eax        # 0x32470144
  420142:	add    DWORD PTR [rax],esi
  420144:	add    DWORD PTR [rsi],eax
  420146:	add    eax,DWORD PTR [rax]
  420148:	(bad)  
  420149:	rex.X add sil,BYTE PTR [rax]
  42014c:	add    DWORD PTR [rax+0x0],esp
  42014f:	add    BYTE PTR [rcx],al
  420151:	adc    BYTE PTR [rcx],cl
  420153:	add    BYTE PTR [rax],dl
  420155:	movabs ds:0x5009700a600b300c,al
  42015e:	or     al,al
  420160:	(bad)  
  420161:	rol    BYTE PTR [rax+riz*8],1
  420164:	add    dh,al
  420166:	add    BYTE PTR [rax],al
  420168:	add    DWORD PTR [rax],edx
  42016a:	or     DWORD PTR [rax],eax
  42016c:	adc    BYTE PTR [rdx+0xc],ah
  42016f:	xor    BYTE PTR [rbx],cl
  420171:	(bad)  
  420172:	or     dh,BYTE PTR [rax+0x9]
  420175:	push   rax
  420176:	or     al,al
  420178:	(bad)  
  420179:	rol    BYTE PTR [rax+riz*8],1
  42017c:	add    dh,al
  42017e:	add    BYTE PTR [rax],al
  420180:	add    DWORD PTR [rdi+rax*1],ecx
  420183:	add    BYTE PTR [rdx+rax*4],cl
  420186:	or     BYTE PTR [rax],dh
  420188:	(bad)  
  420189:	(bad)  
  42018a:	(bad)  
  42018b:	jo     0x420192
  42018d:	push   rax
  42018e:	add    al,0xc0
  420190:	add    dl,al
  420192:	add    BYTE PTR [rax],al
  420194:	add    DWORD PTR [rcx+rax*1],eax
  420197:	add    BYTE PTR [rdx+rax*2],al
  42019a:	add    BYTE PTR [rax],al
  42019c:	add    DWORD PTR [rcx+rax*1],eax
  42019f:	add    BYTE PTR [rdx+riz*2],al
  4201a2:	add    BYTE PTR [rax],al
  4201a4:	add    DWORD PTR [rdx],ecx
  4201a6:	(bad)  
  4201a7:	add    BYTE PTR [rdx],cl
  4201a9:	xor    al,BYTE PTR [rsi]
  4201ab:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b20611
  4201b1:	push   rax
  4201b2:	add    al,al
  4201b4:	add    DWORD PTR [rax],eax
  4201b6:	add    BYTE PTR [rax],al
  4201b8:	add    DWORD PTR [rax],eax
  4201ba:	add    BYTE PTR [rax],al
  4201bc:	add    DWORD PTR [rax],eax
  4201be:	add    BYTE PTR [rax],al
  4201c0:	add    DWORD PTR [rsi],eax
  4201c2:	add    eax,DWORD PTR [rax]
  4201c4:	(bad)  
  4201c5:	(bad)  
  4201c7:	xor    BYTE PTR [rcx],al
  4201c9:	(bad)  
  4201ca:	add    BYTE PTR [rax],al
  4201cc:	add    DWORD PTR [rax],edx
  4201ce:	or     DWORD PTR [rax],eax
  4201d0:	adc    BYTE PTR [rdx+0x600b300c],al
  4201d6:	or     dh,BYTE PTR [rax+0x9]
  4201d9:	push   rax
  4201da:	or     al,al
  4201dc:	(bad)  
  4201dd:	rol    BYTE PTR [rax+riz*8],1
  4201e0:	add    dh,al
  4201e2:	add    BYTE PTR [rax],al
  4201e4:	add    DWORD PTR [rax],ecx
  4201e6:	add    eax,0x4620800
  4201eb:	xor    BYTE PTR [rbx],al
  4201ed:	(bad)  
  4201ee:	add    dh,BYTE PTR [rax+0x1]
  4201f1:	push   rax
  4201f2:	add    BYTE PTR [rax],al
  4201f4:	add    DWORD PTR [rdi+rax*1],ecx
  4201f7:	add    BYTE PTR [rdx+riz*2],cl
  4201fa:	or     BYTE PTR [rax],dh
  4201fc:	(bad)  
  4201fd:	(bad)  
  4201fe:	(bad)  
  4201ff:	jo     0x420206
  420201:	push   rax
  420202:	add    al,0xc0
  420204:	add    dl,al
  420206:	add    BYTE PTR [rax],al
  420208:	add    DWORD PTR [rax],ecx
  42020a:	add    eax,0x4820800
  42020f:	xor    BYTE PTR [rbx],al
  420211:	(bad)  
  420212:	add    dh,BYTE PTR [rax+0x1]
  420215:	push   rax
  420216:	add    BYTE PTR [rax],al
  420218:	add    DWORD PTR [rdi+rax*1],ecx
  42021b:	add    BYTE PTR [rdx+riz*2],cl
  42021e:	or     BYTE PTR [rax],dh
  420220:	(bad)  
  420221:	(bad)  
  420222:	(bad)  
  420223:	jo     0x42022a
  420225:	push   rax
  420226:	add    al,0xc0
  420228:	add    dl,al
  42022a:	add    BYTE PTR [rax],al
  42022c:	add    DWORD PTR [rdi],eax
  42022e:	add    al,0x0
  420230:	(bad)  
  420231:	xor    al,BYTE PTR [rbx]
  420233:	xor    BYTE PTR [rdx],al
  420235:	(bad)  
  420236:	add    DWORD PTR [rax+0x1],esi
  420239:	(bad)  
  42023a:	add    eax,DWORD PTR [rax]
  42023c:	(bad)  
  42023d:	rex.X add sil,BYTE PTR [rax]
  420240:	add    DWORD PTR [rax+0x0],esp
  420243:	add    BYTE PTR [rcx],al
  420245:	(bad)  
  420246:	add    al,0x0
  420248:	(bad)  
  420249:	xor    al,BYTE PTR [rbx]
  42024b:	xor    BYTE PTR [rdx],al
  42024d:	(bad)  
  42024e:	add    DWORD PTR [rax+0x1],esi
  420251:	(bad)  
  420252:	add    al,0x0
  420254:	(bad)  
  420255:	xor    al,BYTE PTR [rbx]
  420257:	xor    BYTE PTR [rdx],al
  420259:	(bad)  
  42025a:	add    DWORD PTR [rax+0x1],esi
  42025d:	(bad)  
  42025e:	add    eax,DWORD PTR [rax]
  420260:	(bad)  
  420261:	rex.X add sil,BYTE PTR [rax]
  420264:	add    DWORD PTR [rax+0x0],esi
  420267:	add    BYTE PTR [rcx],al
  420269:	or     al,BYTE PTR [rsi]
  42026b:	add    BYTE PTR [rdx],cl
  42026d:	xor    al,BYTE PTR [rsi]
  42026f:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b206d5
  420275:	push   rax
  420276:	add    al,al
  420278:	add    DWORD PTR [rdi+rax*1],ecx
  42027b:	add    BYTE PTR [rdx+rax*2],cl
  42027e:	or     BYTE PTR [rax],dh
  420280:	(bad)  
  420281:	(bad)  
  420282:	(bad)  
  420283:	jo     0x42028a
  420285:	push   rax
  420286:	add    al,0xc0
  420288:	add    dl,al
  42028a:	add    BYTE PTR [rax],al
  42028c:	add    DWORD PTR [rsi],eax
  42028e:	add    eax,DWORD PTR [rax]
  420290:	(bad)  
  420291:	rex.X add sil,BYTE PTR [rax]
  420294:	add    DWORD PTR [rax+0x0],esp
  420297:	add    BYTE PTR [rcx],al
  420299:	or     BYTE PTR [rip+0x4420800],al        # 0x4840a9f
  42029f:	xor    BYTE PTR [rbx],al
  4202a1:	(bad)  
  4202a2:	add    dh,BYTE PTR [rax+0x1]
  4202a5:	push   rax
  4202a6:	add    BYTE PTR [rax],al
  4202a8:	add    DWORD PTR [rax],edx
  4202aa:	or     DWORD PTR [rax],eax
  4202ac:	adc    BYTE PTR [rdx+0x600b300c],ah
  4202b2:	or     dh,BYTE PTR [rax+0x9]
  4202b5:	push   rax
  4202b6:	or     al,al
  4202b8:	(bad)  
  4202b9:	rol    BYTE PTR [rax+riz*8],1
  4202bc:	add    dh,al
  4202be:	add    BYTE PTR [rax],al
  4202c0:	add    DWORD PTR [rsi],eax
  4202c2:	add    eax,DWORD PTR [rax]
  4202c4:	(bad)  
  4202c5:	rex.X add sil,BYTE PTR [rax]
  4202c8:	add    DWORD PTR [rax+0x0],esp
  4202cb:	add    BYTE PTR [rcx],al
  4202cd:	or     BYTE PTR [rip+0x4420800],al        # 0x4840ad3
  4202d3:	xor    BYTE PTR [rbx],al
  4202d5:	(bad)  
  4202d6:	add    dh,BYTE PTR [rax+0x1]
  4202d9:	push   rax
  4202da:	add    BYTE PTR [rax],al
  4202dc:	add    DWORD PTR [rax],edx
  4202de:	or     DWORD PTR [rax],eax
  4202e0:	adc    BYTE PTR [rdx+0x600b300c],ah
  4202e6:	or     dh,BYTE PTR [rax+0x9]
  4202e9:	push   rax
  4202ea:	or     al,al
  4202ec:	(bad)  
  4202ed:	rol    BYTE PTR [rax+riz*8],1
  4202f0:	add    dh,al
  4202f2:	add    BYTE PTR [rax],al
  4202f4:	add    DWORD PTR [rsi],ecx
  4202f6:	or     BYTE PTR [rax],al
  4202f8:	(bad)  
  4202f9:	xor    cl,BYTE PTR [rdx]
  4202fb:	xor    BYTE PTR [rcx],cl
  4202fd:	(bad)  
  4202fe:	or     BYTE PTR [rax+0x7],dh
  420301:	push   rax
  420302:	(bad)  
  420303:	rol    BYTE PTR [rax+rdx*8],0x2
  420307:	loopne 0x42030a
  420309:	adc    BYTE PTR [rcx],cl
  42030b:	add    BYTE PTR [rax],dl
  42030d:	ret    0x300c
  420310:	or     esp,DWORD PTR [rax+0xa]
  420313:	jo     0x42031e
  420315:	push   rax
  420316:	or     al,al
  420318:	(bad)  
  420319:	rol    BYTE PTR [rax+riz*8],1
  42031c:	add    dh,al
  42031e:	add    BYTE PTR [rax],al
  420320:	add    DWORD PTR [rsi],eax
  420322:	add    eax,DWORD PTR [rax]
  420324:	(bad)  
  420325:	rex.X add sil,BYTE PTR [rax]
  420328:	add    DWORD PTR [rax+0x0],esp
  42032b:	add    BYTE PTR [rcx],al
  42032d:	adc    ecx,DWORD PTR [rdx]
  42032f:	add    BYTE PTR [rbx],dl
  420331:	add    DWORD PTR [rcx],esi
  420333:	add    BYTE PTR [rax+rsi*1],cl
  420336:	or     esp,DWORD PTR [rax+0xa]
  420339:	jo     0x420344
  42033b:	push   rax
  42033c:	or     al,al
  42033e:	(bad)  
  42033f:	rol    BYTE PTR [rax+riz*8],1
  420342:	add    dh,al
  420344:	add    DWORD PTR [rbx],edx
  420346:	or     al,BYTE PTR [rax]
  420348:	adc    eax,DWORD PTR [rcx]
  42034a:	sub    DWORD PTR [rax],eax
  42034c:	or     al,0x30
  42034e:	or     esp,DWORD PTR [rax+0xa]
  420351:	jo     0x42035c
  420353:	push   rax
  420354:	or     al,al
  420356:	(bad)  
  420357:	rol    BYTE PTR [rax+riz*8],1
  42035a:	add    dh,al
  42035c:	add    DWORD PTR [rdx],ecx
  42035e:	(bad)  
  42035f:	add    BYTE PTR [rdx],cl
  420361:	push   rdx
  420362:	(bad)  
  420363:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b207c9
  420369:	push   rax
  42036a:	add    al,al
  42036c:	add    DWORD PTR [rbx],edx
  42036e:	or     al,BYTE PTR [rax]
  420370:	adc    eax,DWORD PTR [rcx]
  420372:	adc    eax,DWORD PTR [rax]
  420374:	or     al,0x30
  420376:	or     esp,DWORD PTR [rax+0xa]
  420379:	jo     0x420384
  42037b:	push   rax
  42037c:	or     al,al
  42037e:	(bad)  
  42037f:	rol    BYTE PTR [rax+riz*8],1
  420382:	add    dh,al
  420384:	add    DWORD PTR [rbx],edx
  420386:	or     al,BYTE PTR [rax]
  420388:	adc    eax,DWORD PTR [rcx]
  42038a:	adc    eax,DWORD PTR [rax]
  42038c:	or     al,0x30
  42038e:	or     esp,DWORD PTR [rax+0xa]
  420391:	jo     0x42039c
  420393:	push   rax
  420394:	or     al,al
  420396:	(bad)  
  420397:	rol    BYTE PTR [rax+riz*8],1
  42039a:	add    dh,al
  42039c:	add    DWORD PTR [rax],edx
  42039e:	or     DWORD PTR [rax],eax
  4203a0:	adc    BYTE PTR [rdx+0xc],ah
  4203a3:	xor    BYTE PTR [rbx],cl
  4203a5:	(bad)  
  4203a6:	or     dh,BYTE PTR [rax+0x9]
  4203a9:	push   rax
  4203aa:	or     al,al
  4203ac:	(bad)  
  4203ad:	rol    BYTE PTR [rax+riz*8],1
  4203b0:	add    dh,al
  4203b2:	add    BYTE PTR [rax],al
  4203b4:	add    DWORD PTR [rax],edx
  4203b6:	or     DWORD PTR [rax],eax
  4203b8:	adc    BYTE PTR [rdx+0x600b300c],al
  4203be:	or     dh,BYTE PTR [rax+0x9]
  4203c1:	push   rax
  4203c2:	or     al,al
  4203c4:	(bad)  
  4203c5:	rol    BYTE PTR [rax+riz*8],1
  4203c8:	add    dh,al
  4203ca:	add    BYTE PTR [rax],al
  4203cc:	add    DWORD PTR [rax],ecx
  4203ce:	add    eax,0x4420800
  4203d3:	xor    BYTE PTR [rbx],al
  4203d5:	(bad)  
  4203d6:	add    dh,BYTE PTR [rax+0x1]
  4203d9:	push   rax
  4203da:	add    BYTE PTR [rax],al
  4203dc:	add    DWORD PTR [rax],ecx
  4203de:	add    eax,0x4420800
  4203e3:	xor    BYTE PTR [rbx],al
  4203e5:	(bad)  
  4203e6:	add    dh,BYTE PTR [rax+0x1]
  4203e9:	push   rax
  4203ea:	add    BYTE PTR [rax],al
  4203ec:	add    DWORD PTR [rip+0x32050002],eax        # 0x324703f4
  4203f2:	add    DWORD PTR [rax],esi
  4203f4:	add    DWORD PTR [rsi],eax
  4203f6:	add    eax,DWORD PTR [rax]
  4203f8:	(bad)  
  4203f9:	(bad)  
  4203fb:	xor    BYTE PTR [rcx],al
  4203fd:	(bad)  
  4203fe:	add    BYTE PTR [rax],al
  420400:	add    DWORD PTR [rcx+rax*1],eax
  420403:	add    BYTE PTR [rdx+rax*2],al
  420406:	add    BYTE PTR [rax],al
  420408:	add    DWORD PTR [rax],ecx
  42040a:	add    eax,0x4420800
  42040f:	xor    BYTE PTR [rbx],al
  420411:	(bad)  
  420412:	add    dh,BYTE PTR [rax+0x1]
  420415:	push   rax
  420416:	add    BYTE PTR [rax],al
  420418:	add    DWORD PTR [rdx],ecx
  42041a:	(bad)  
  42041b:	add    BYTE PTR [rdx],cl
  42041d:	xor    al,BYTE PTR [rsi]
  42041f:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b20885
  420425:	push   rax
  420426:	add    al,al
  420428:	add    DWORD PTR [rip+0x32050002],eax        # 0x32470430
  42042e:	add    DWORD PTR [rax],esi
  420430:	add    DWORD PTR [rsi],eax
  420432:	add    eax,DWORD PTR [rax]
  420434:	(bad)  
  420435:	(bad)  
  420437:	xor    BYTE PTR [rcx],al
  420439:	(bad)  
  42043a:	add    BYTE PTR [rax],al
  42043c:	add    DWORD PTR [rsi],ecx
  42043e:	or     BYTE PTR [rax],al
  420440:	(bad)  
  420441:	push   rdx
  420442:	or     dh,BYTE PTR [rax]
  420444:	or     DWORD PTR [rax+0x8],esp
  420447:	jo     0x420450
  420449:	push   rax
  42044a:	(bad)  
  42044b:	rol    BYTE PTR [rax+rdx*8],0x2
  42044f:	loopne 0x420452
  420451:	adc    ecx,DWORD PTR [rdx]
  420453:	add    BYTE PTR [rbx],dl
  420455:	add    DWORD PTR [rip+0xb300c00],ebx        # 0xb72105b
  42045b:	(bad)  
  42045c:	or     dh,BYTE PTR [rax+0x9]
  42045f:	push   rax
  420460:	or     al,al
  420462:	(bad)  
  420463:	rol    BYTE PTR [rax+riz*8],1
  420466:	add    dh,al
  420468:	add    DWORD PTR [rax],ecx
  42046a:	add    eax,DWORD PTR [rax]
  42046c:	or     BYTE PTR [rcx],al
  42046e:	adc    al,BYTE PTR [rax]
  420470:	add    DWORD PTR [rax+0x0],esi
  420473:	add    BYTE PTR [rcx],al
  420475:	add    eax,0x72050002
  42047a:	add    DWORD PTR [rax],esi
  42047c:	add    DWORD PTR [rsi],eax
  42047e:	add    eax,DWORD PTR [rax]
  420480:	(bad)  
  420481:	rex.X add sil,BYTE PTR [rax]
  420484:	add    DWORD PTR [rax+0x0],esp
  420487:	add    BYTE PTR [rcx],al
  420489:	adc    ecx,DWORD PTR [rdx]
  42048b:	add    BYTE PTR [rbx],dl
  42048d:	add    DWORD PTR [rip+0xb300c00],ebx        # 0xb721093
  420493:	(bad)  
  420494:	or     dh,BYTE PTR [rax+0x9]
  420497:	push   rax
  420498:	or     al,al
  42049a:	(bad)  
  42049b:	rol    BYTE PTR [rax+riz*8],1
  42049e:	add    dh,al
  4204a0:	add    DWORD PTR [rax],edx
  4204a2:	or     DWORD PTR [rax],eax
  4204a4:	adc    dl,al
  4204a6:	or     al,0x30
  4204a8:	or     esp,DWORD PTR [rax+0xa]
  4204ab:	jo     0x4204b6
  4204ad:	push   rax
  4204ae:	or     al,al
  4204b0:	(bad)  
  4204b1:	rol    BYTE PTR [rax+riz*8],1
  4204b4:	add    dh,al
  4204b6:	add    BYTE PTR [rax],al
  4204b8:	add    DWORD PTR [rax],edx
  4204ba:	or     DWORD PTR [rax],eax
  4204bc:	adc    BYTE PTR [rdx+0xc],ah
  4204bf:	xor    BYTE PTR [rbx],cl
  4204c1:	(bad)  
  4204c2:	or     dh,BYTE PTR [rax+0x9]
  4204c5:	push   rax
  4204c6:	or     al,al
  4204c8:	(bad)  
  4204c9:	rol    BYTE PTR [rax+riz*8],1
  4204cc:	add    dh,al
  4204ce:	add    BYTE PTR [rax],al
  4204d0:	add    DWORD PTR [rbx],edx
  4204d2:	or     al,BYTE PTR [rax]
  4204d4:	adc    eax,DWORD PTR [rcx]
  4204d6:	(bad)  
  4204d7:	add    BYTE PTR [rax+rsi*1],cl
  4204da:	or     esp,DWORD PTR [rax+0xa]
  4204dd:	jo     0x4204e8
  4204df:	push   rax
  4204e0:	or     al,al
  4204e2:	(bad)  
  4204e3:	rol    BYTE PTR [rax+riz*8],1
  4204e6:	add    dh,al
  4204e8:	add    DWORD PTR [rbx],edx
  4204ea:	or     al,BYTE PTR [rax]
  4204ec:	adc    eax,DWORD PTR [rcx]
  4204ee:	sbb    DWORD PTR [rax],eax
  4204f0:	or     al,0x30
  4204f2:	or     esp,DWORD PTR [rax+0xa]
  4204f5:	jo     0x420500
  4204f7:	push   rax
  4204f8:	or     al,al
  4204fa:	(bad)  
  4204fb:	rol    BYTE PTR [rax+riz*8],1
  4204fe:	add    dh,al
  420500:	add    DWORD PTR [rip+0x32050002],eax        # 0x32470508
  420506:	add    DWORD PTR [rax],esi
  420508:	add    DWORD PTR [rdi],eax
  42050a:	add    al,0x0
  42050c:	(bad)  
  42050d:	xor    al,BYTE PTR [rbx]
  42050f:	xor    BYTE PTR [rdx],al
  420511:	(bad)  
  420512:	add    DWORD PTR [rax+0x1],esi
  420515:	or     al,BYTE PTR [rsi]
  420517:	add    BYTE PTR [rdx],cl
  420519:	push   rdx
  42051a:	(bad)  
  42051b:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b20981
  420521:	push   rax
  420522:	add    al,al
  420524:	add    DWORD PTR [rax],edx
  420526:	or     DWORD PTR [rax],eax
  420528:	adc    BYTE PTR [rdx+0xc],al
  42052b:	xor    BYTE PTR [rbx],cl
  42052d:	(bad)  
  42052e:	or     dh,BYTE PTR [rax+0x9]
  420531:	push   rax
  420532:	or     al,al
  420534:	(bad)  
  420535:	rol    BYTE PTR [rax+riz*8],1
  420538:	add    dh,al
  42053a:	add    BYTE PTR [rax],al
  42053c:	add    DWORD PTR [rsi],eax
  42053e:	add    eax,DWORD PTR [rax]
  420540:	(bad)  
  420541:	rex.X add sil,BYTE PTR [rax]
  420544:	add    DWORD PTR [rax+0x0],esp
  420547:	add    BYTE PTR [rcx],al
  420549:	adc    BYTE PTR [rcx],cl
  42054b:	add    BYTE PTR [rax],dl
  42054d:	(bad)  
  42054e:	or     al,0x30
  420550:	or     esp,DWORD PTR [rax+0xa]
  420553:	jo     0x42055e
  420555:	push   rax
  420556:	or     al,al
  420558:	(bad)  
  420559:	rol    BYTE PTR [rax+riz*8],1
  42055c:	add    dh,al
  42055e:	add    BYTE PTR [rax],al
  420560:	add    DWORD PTR [rdi],eax
  420562:	add    al,0x0
  420564:	(bad)  
  420565:	xor    al,BYTE PTR [rbx]
  420567:	xor    BYTE PTR [rdx],al
  420569:	(bad)  
  42056a:	add    DWORD PTR [rax+0x1],esi
  42056d:	(bad)  
  42056e:	or     BYTE PTR [rax],al
  420570:	(bad)  
  420571:	xor    cl,BYTE PTR [rdx]
  420573:	xor    BYTE PTR [rcx],cl
  420575:	(bad)  
  420576:	or     BYTE PTR [rax+0x7],dh
  420579:	push   rax
  42057a:	(bad)  
  42057b:	rol    BYTE PTR [rax+rdx*8],0x2
  42057f:	loopne 0x420582
  420581:	or     BYTE PTR [rip+0x4420800],al        # 0x4840d87
  420587:	xor    BYTE PTR [rbx],al
  420589:	(bad)  
  42058a:	add    dh,BYTE PTR [rax+0x1]
  42058d:	push   rax
  42058e:	add    BYTE PTR [rax],al
  420590:	add    DWORD PTR [rax],edx
  420592:	or     DWORD PTR [rax],eax
  420594:	adc    BYTE PTR [rdx+0x600b300c],ah
  42059a:	or     dh,BYTE PTR [rax+0x9]
  42059d:	push   rax
  42059e:	or     al,al
  4205a0:	(bad)  
  4205a1:	rol    BYTE PTR [rax+riz*8],1
  4205a4:	add    dh,al
  4205a6:	add    BYTE PTR [rax],al
  4205a8:	add    DWORD PTR [rax],eax
  4205aa:	add    BYTE PTR [rax],al
  4205ac:	add    DWORD PTR [rip+0x32050002],eax        # 0x324705b4
  4205b2:	add    DWORD PTR [rax],esi
  4205b4:	add    DWORD PTR [rcx],eax
  4205b6:	add    DWORD PTR [rax],eax
  4205b8:	add    DWORD PTR [rax],esi
  4205ba:	add    BYTE PTR [rax],al
  4205bc:	add    DWORD PTR [rbx],edx
  4205be:	or     al,BYTE PTR [rax]
  4205c0:	adc    eax,DWORD PTR [rcx]
  4205c2:	sbb    eax,DWORD PTR [rax]
  4205c4:	or     al,0x30
  4205c6:	or     esp,DWORD PTR [rax+0xa]
  4205c9:	jo     0x4205d4
  4205cb:	push   rax
  4205cc:	or     al,al
  4205ce:	(bad)  
  4205cf:	rol    BYTE PTR [rax+riz*8],1
  4205d2:	add    dh,al
  4205d4:	add    DWORD PTR [rsi],eax
  4205d6:	add    eax,DWORD PTR [rax]
  4205d8:	(bad)  
  4205d9:	(bad)  
  4205db:	xor    BYTE PTR [rcx],al
  4205dd:	(bad)  
  4205de:	add    BYTE PTR [rax],al
  4205e0:	add    DWORD PTR [rdi],eax
  4205e2:	add    al,0x0
  4205e4:	(bad)  
  4205e5:	xchg   edx,eax
  4205e6:	add    esi,DWORD PTR [rax]
  4205e8:	add    ah,BYTE PTR [rax+0x1]
  4205eb:	jo     0x4205ee
  4205ed:	(bad)  
  4205ee:	add    eax,DWORD PTR [rax]
  4205f0:	(bad)  
  4205f1:	movabs ds:0xe01000060013002,al
  4205fa:	or     BYTE PTR [rax],al
  4205fc:	(bad)  
  4205fd:	xor    cl,BYTE PTR [rdx]
  4205ff:	xor    BYTE PTR [rcx],cl
  420601:	(bad)  
  420602:	or     BYTE PTR [rax+0x7],dh
  420605:	push   rax
  420606:	(bad)  
  420607:	rol    BYTE PTR [rax+rdx*8],0x2
  42060b:	loopne 0x42060e
  42060d:	(bad)  
  42060e:	add    al,0x0
  420610:	(bad)  
  420611:	xchg   edx,eax
  420612:	add    esi,DWORD PTR [rax]
  420614:	add    ah,BYTE PTR [rax+0x1]
  420617:	jo     0x42061a
  420619:	or     BYTE PTR [rip+0x4820800],al        # 0x4c40e1f
  42061f:	xor    BYTE PTR [rbx],al
  420621:	(bad)  
  420622:	add    dh,BYTE PTR [rax+0x1]
  420625:	push   rax
  420626:	add    BYTE PTR [rax],al
  420628:	add    DWORD PTR [rdx],ecx
  42062a:	(bad)  
  42062b:	add    BYTE PTR [rdx],cl
  42062d:	jb     0x420635
  42062f:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b20a95
  420635:	push   rax
  420636:	add    al,al
  420638:	add    DWORD PTR [rdi+rax*1],ecx
  42063b:	add    BYTE PTR [rdx+rax*2],cl
  42063e:	or     BYTE PTR [rax],dh
  420640:	(bad)  
  420641:	(bad)  
  420642:	(bad)  
  420643:	jo     0x42064a
  420645:	push   rax
  420646:	add    al,0xc0
  420648:	add    dl,al
  42064a:	add    BYTE PTR [rax],al
  42064c:	add    DWORD PTR [rsi],ecx
  42064e:	or     BYTE PTR [rax],al
  420650:	(bad)  
  420651:	xor    cl,BYTE PTR [rdx]
  420653:	xor    BYTE PTR [rcx],cl
  420655:	(bad)  
  420656:	or     BYTE PTR [rax+0x7],dh
  420659:	push   rax
  42065a:	(bad)  
  42065b:	rol    BYTE PTR [rax+rdx*8],0x2
  42065f:	loopne 0x420662
  420661:	or     al,BYTE PTR [rsi]
  420663:	add    BYTE PTR [rdx],cl
  420665:	push   rdx
  420666:	(bad)  
  420667:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b20acd
  42066d:	push   rax
  42066e:	add    al,al
  420670:	add    DWORD PTR [rax],ecx
  420672:	add    eax,0x4420800
  420677:	xor    BYTE PTR [rbx],al
  420679:	(bad)  
  42067a:	add    dh,BYTE PTR [rax+0x1]
  42067d:	push   rax
  42067e:	add    BYTE PTR [rax],al
  420680:	add    DWORD PTR [rsi],eax
  420682:	add    eax,DWORD PTR [rax]
  420684:	(bad)  
  420685:	rex.X add sil,BYTE PTR [rax]
  420688:	add    DWORD PTR [rax+0x0],esp
  42068b:	add    BYTE PTR [rcx],al
  42068d:	add    BYTE PTR [rax],al
  42068f:	add    BYTE PTR [rcx],al
  420691:	add    BYTE PTR [rax],al
  420693:	add    BYTE PTR [rcx],al
  420695:	add    BYTE PTR [rax],al
  420697:	add    BYTE PTR [rcx],al
  420699:	add    BYTE PTR [rax],al
  42069b:	add    BYTE PTR [rcx],al
  42069d:	or     BYTE PTR [rip+0x4c20800],al        # 0x5040ea3
  4206a3:	xor    BYTE PTR [rbx],al
  4206a5:	(bad)  
  4206a6:	add    dh,BYTE PTR [rax+0x1]
  4206a9:	push   rax
  4206aa:	add    BYTE PTR [rax],al
  4206ac:	add    DWORD PTR [rsi],eax
  4206ae:	add    eax,DWORD PTR [rax]
  4206b0:	(bad)  
  4206b1:	rex.X add sil,BYTE PTR [rax]
  4206b4:	add    DWORD PTR [rax+0x0],esp
  4206b7:	add    BYTE PTR [rcx],al
  4206b9:	adc    ecx,DWORD PTR [rdx]
  4206bb:	add    BYTE PTR [rbx],dl
  4206bd:	add    DWORD PTR [rbx],ebp
  4206bf:	add    BYTE PTR [rax+rsi*1],cl
  4206c2:	or     esp,DWORD PTR [rax+0xa]
  4206c5:	jo     0x4206d0
  4206c7:	push   rax
  4206c8:	or     al,al
  4206ca:	(bad)  
  4206cb:	rol    BYTE PTR [rax+riz*8],1
  4206ce:	add    dh,al
  4206d0:	add    DWORD PTR [rbx],edx
  4206d2:	or     al,BYTE PTR [rax]
  4206d4:	adc    eax,DWORD PTR [rcx]
  4206d6:	xor    DWORD PTR [rax],eax
  4206d8:	or     al,0x30
  4206da:	or     esp,DWORD PTR [rax+0xa]
  4206dd:	jo     0x4206e8
  4206df:	push   rax
  4206e0:	or     al,al
  4206e2:	(bad)  
  4206e3:	rol    BYTE PTR [rax+riz*8],1
  4206e6:	add    dh,al
  4206e8:	add    DWORD PTR [rdi],eax
  4206ea:	add    al,0x0
  4206ec:	(bad)  
  4206ed:	xor    al,BYTE PTR [rbx]
  4206ef:	xor    BYTE PTR [rdx],al
  4206f1:	(bad)  
  4206f2:	add    DWORD PTR [rax+0x1],esi
  4206f5:	(bad)  
  4206f6:	add    eax,DWORD PTR [rax]
  4206f8:	(bad)  
  4206f9:	ret    0x3002
  4206fc:	add    DWORD PTR [rax+0x0],esp
  4206ff:	add    BYTE PTR [rcx],al
  420701:	or     al,BYTE PTR [rsi]
  420703:	add    BYTE PTR [rdx],cl
  420705:	xchg   edx,eax
  420706:	(bad)  
  420707:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b20b6d
  42070d:	push   rax
  42070e:	add    al,al
  420710:	add    DWORD PTR [rdi+rax*1],ecx
  420713:	add    BYTE PTR [rdx+rax*2],cl
  420716:	or     BYTE PTR [rax],dh
  420718:	(bad)  
  420719:	(bad)  
  42071a:	(bad)  
  42071b:	jo     0x420722
  42071d:	push   rax
  42071e:	add    al,0xc0
  420720:	add    dl,al
  420722:	add    BYTE PTR [rax],al
  420724:	add    DWORD PTR [rip+0x32050002],eax        # 0x3247072c
  42072a:	add    DWORD PTR [rax],esi
  42072c:	add    DWORD PTR [rdx],ecx
  42072e:	(bad)  
  42072f:	add    BYTE PTR [rdx],cl
  420731:	push   rdx
  420732:	(bad)  
  420733:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b20b99
  420739:	push   rax
  42073a:	add    al,al
  42073c:	add    DWORD PTR [rbx],edx
  42073e:	or     al,BYTE PTR [rax]
  420740:	adc    eax,DWORD PTR [rcx]
  420742:	sbb    eax,DWORD PTR [rax]
  420744:	or     al,0x30
  420746:	or     esp,DWORD PTR [rax+0xa]
  420749:	jo     0x420754
  42074b:	push   rax
  42074c:	or     al,al
  42074e:	(bad)  
  42074f:	rol    BYTE PTR [rax+riz*8],1
  420752:	add    dh,al
  420754:	add    DWORD PTR [rax],edx
  420756:	or     DWORD PTR [rax],eax
  420758:	adc    dl,al
  42075a:	or     al,0x30
  42075c:	or     esp,DWORD PTR [rax+0xa]
  42075f:	jo     0x42076a
  420761:	push   rax
  420762:	or     al,al
  420764:	(bad)  
  420765:	rol    BYTE PTR [rax+riz*8],1
  420768:	add    dh,al
  42076a:	add    BYTE PTR [rax],al
  42076c:	add    DWORD PTR [rsi],eax
  42076e:	add    eax,DWORD PTR [rax]
  420770:	(bad)  
  420771:	(bad)  
  420773:	xor    BYTE PTR [rcx],al
  420775:	(bad)  
  420776:	add    BYTE PTR [rax],al
  420778:	add    DWORD PTR [rax],edx
  42077a:	or     DWORD PTR [rax],eax
  42077c:	adc    BYTE PTR [rdx+0xc],al
  42077f:	xor    BYTE PTR [rbx],cl
  420781:	(bad)  
  420782:	or     dh,BYTE PTR [rax+0x9]
  420785:	push   rax
  420786:	or     al,al
  420788:	(bad)  
  420789:	rol    BYTE PTR [rax+riz*8],1
  42078c:	add    dh,al
  42078e:	add    BYTE PTR [rax],al
  420790:	add    DWORD PTR [rax],ecx
  420792:	add    eax,0x4a20800
  420797:	xor    BYTE PTR [rbx],al
  420799:	(bad)  
  42079a:	add    dh,BYTE PTR [rax+0x1]
  42079d:	push   rax
  42079e:	add    BYTE PTR [rax],al
  4207a0:	add    DWORD PTR [rcx+rax*1],eax
  4207a3:	add    BYTE PTR [rdx+rax*2],al
  4207a6:	add    BYTE PTR [rax],al
  4207a8:	add    DWORD PTR [rcx+rax*1],eax
  4207ab:	add    BYTE PTR [rdx+rax*2],al
  4207ae:	add    BYTE PTR [rax],al
  4207b0:	add    DWORD PTR [rax],eax
  4207b2:	add    BYTE PTR [rax],al
  4207b4:	add    DWORD PTR [rsi],eax
  4207b6:	add    eax,DWORD PTR [rax]
  4207b8:	(bad)  
  4207b9:	rex.X add sil,BYTE PTR [rax]
  4207bc:	add    DWORD PTR [rax+0x0],esp
  4207bf:	add    BYTE PTR [rcx],al
  4207c1:	(bad)  
  4207c2:	add    eax,DWORD PTR [rax]
  4207c4:	(bad)  
  4207c5:	rex.X add sil,BYTE PTR [rax]
  4207c8:	add    DWORD PTR [rax+0x0],esp
  4207cb:	add    BYTE PTR [rcx],al
  4207cd:	or     BYTE PTR [rip+0x4620800],al        # 0x4a40fd3
  4207d3:	xor    BYTE PTR [rbx],al
  4207d5:	(bad)  
  4207d6:	add    dh,BYTE PTR [rax+0x1]
  4207d9:	push   rax
  4207da:	add    BYTE PTR [rax],al
  4207dc:	add    DWORD PTR [rcx+rax*1],eax
  4207df:	add    BYTE PTR [rdx+riz*2],al
  4207e2:	add    BYTE PTR [rax],al
  4207e4:	add    DWORD PTR [rbx],ebx
  4207e6:	or     eax,DWORD PTR [rbp+0x113031b]
  4207ec:	movabs ds:0x9700a600b300c00,eax
  4207f5:	rol    BYTE PTR [rdi],0xd0
  4207f8:	add    eax,0x1f003e0
  4207fd:	push   rax
  4207fe:	add    BYTE PTR [rax],al
  420800:	add    DWORD PTR [rip+0x32050002],eax        # 0x32470808
  420806:	add    DWORD PTR [rax],esi
  420808:	add    DWORD PTR [rax],eax
  42080a:	add    BYTE PTR [rax],al
  42080c:	add    DWORD PTR [rax],edx
  42080e:	or     DWORD PTR [rax],eax
  420810:	adc    BYTE PTR [rdx+0x600b300c],ah
  420816:	or     dh,BYTE PTR [rax+0x9]
  420819:	push   rax
  42081a:	or     al,al
  42081c:	(bad)  
  42081d:	rol    BYTE PTR [rax+riz*8],1
  420820:	add    dh,al
  420822:	add    BYTE PTR [rax],al
  420824:	add    DWORD PTR [rip+0x32050002],eax        # 0x3247082c
  42082a:	add    DWORD PTR [rax],esi
  42082c:	add    DWORD PTR [rip+0x52050002],eax        # 0x52470834
  420832:	add    DWORD PTR [rax],esi
  420834:	add    DWORD PTR [rcx+rax*1],eax
  420837:	add    BYTE PTR [rdx+rax*2],al
  42083a:	add    BYTE PTR [rax],al
  42083c:	add    DWORD PTR [rcx+rax*1],eax
  42083f:	add    BYTE PTR [rdx+rax*2],al
  420842:	add    BYTE PTR [rax],al
  420844:	add    DWORD PTR [rsi],eax
  420846:	add    eax,DWORD PTR [rax]
  420848:	(bad)  
  420849:	rex.X add sil,BYTE PTR [rax]
  42084c:	add    DWORD PTR [rax+0x0],esp
  42084f:	add    BYTE PTR [rcx],al
  420851:	add    BYTE PTR [rax],al
  420853:	add    BYTE PTR [rcx],al
  420855:	add    BYTE PTR [rax],al
  420857:	add    BYTE PTR [rcx],al
  420859:	add    BYTE PTR [rax],al
  42085b:	add    BYTE PTR [rcx],al
  42085d:	or     al,BYTE PTR [rsi]
  42085f:	add    BYTE PTR [rdx],cl
  420861:	jb     0x420869
  420863:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b20cc9
  420869:	push   rax
  42086a:	add    al,al
  42086c:	add    DWORD PTR [rdx],ecx
  42086e:	add    eax,0x6d20a05
  420873:	add    eax,DWORD PTR [rbx]
  420875:	xor    BYTE PTR [rdx],al
  420877:	(bad)  
  420878:	add    DWORD PTR [rax+0x0],edx
  42087b:	add    BYTE PTR [rcx],al
  42087d:	add    al,0x1
  42087f:	add    BYTE PTR [rdx+rax*2],al
  420882:	add    BYTE PTR [rax],al
  420884:	add    DWORD PTR [rsi],eax
  420886:	add    eax,DWORD PTR [rax]
  420888:	(bad)  
  420889:	rex.X add sil,BYTE PTR [rax]
  42088c:	add    DWORD PTR [rax+0x0],esp
  42088f:	add    BYTE PTR [rcx],al
  420891:	add    BYTE PTR [rax],al
  420893:	add    BYTE PTR [rcx],al
  420895:	add    al,0x1
  420897:	add    BYTE PTR [rdx+riz*4],al
  42089a:	add    BYTE PTR [rax],al
  42089c:	add    DWORD PTR [rax],eax
  42089e:	add    BYTE PTR [rax],al
  4208a0:	add    DWORD PTR [rsi],edx
  4208a2:	or     DWORD PTR [rax],eax
  4208a4:	(bad)  
  4208a5:	mov    BYTE PTR [rsi],al
  4208a7:	add    BYTE PTR [rax],dl
  4208a9:	js     0x4208b0
  4208ab:	add    BYTE PTR [rbx],cl
  4208ad:	push   0xffffffffe2060004
  4208b2:	add    dh,BYTE PTR [rax]
  4208b4:	add    DWORD PTR [rax+0x0],esp
  4208b7:	add    BYTE PTR [rcx],al
  4208b9:	add    BYTE PTR [rax],al
  4208bb:	add    BYTE PTR [rcx],al
  4208bd:	add    BYTE PTR [rax],al
  4208bf:	add    BYTE PTR [rcx],al
  4208c1:	add    BYTE PTR [rax],al
  4208c3:	add    BYTE PTR [rcx],al
  4208c5:	(bad)  
  4208c6:	add    eax,DWORD PTR [rax]
  4208c8:	(bad)  
  4208c9:	(bad)  
  4208cb:	xor    BYTE PTR [rcx],al
  4208cd:	(bad)  
  4208ce:	add    BYTE PTR [rax],al
  4208d0:	add    DWORD PTR [rdi+rax*1],ecx
  4208d3:	add    BYTE PTR [rdx+riz*4],cl
  4208d6:	or     BYTE PTR [rax],dh
  4208d8:	(bad)  
  4208d9:	(bad)  
  4208da:	(bad)  
  4208db:	jo     0x4208e2
  4208dd:	push   rax
  4208de:	add    al,0xc0
  4208e0:	add    dl,al
  4208e2:	add    BYTE PTR [rax],al
  4208e4:	add    DWORD PTR [rcx],edx
  4208e6:	or     DWORD PTR [rip+0x30db211],eax        # 0x34fbafd
  4208ec:	or     dh,BYTE PTR [rax]
  4208ee:	or     DWORD PTR [rax+0x8],esp
  4208f1:	jo     0x4208fa
  4208f3:	rol    BYTE PTR [rip+0x1e003d0],0x50        # 0x2220cca
  4208fa:	add    BYTE PTR [rax],al
  4208fc:	add    DWORD PTR [rcx+rax*1],eax
  4208ff:	add    BYTE PTR [rdx+rax*2],al
  420902:	add    BYTE PTR [rax],al
  420904:	add    DWORD PTR [rdx],ecx
  420906:	(bad)  
  420907:	add    BYTE PTR [rdx],cl
  420909:	xor    al,BYTE PTR [rsi]
  42090b:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b20d71
  420911:	push   rax
  420912:	add    al,al
  420914:	add    DWORD PTR [rip+0x32050002],eax        # 0x3247091c
  42091a:	add    DWORD PTR [rax],esi
  42091c:	add    DWORD PTR [rax],ecx
  42091e:	add    eax,0x4420800
  420923:	xor    BYTE PTR [rbx],al
  420925:	(bad)  
  420926:	add    dh,BYTE PTR [rax+0x1]
  420929:	push   rax
  42092a:	add    BYTE PTR [rax],al
  42092c:	add    DWORD PTR [rdi],eax
  42092e:	add    al,0x0
  420930:	(bad)  
  420931:	xor    al,BYTE PTR [rbx]
  420933:	xor    BYTE PTR [rdx],al
  420935:	(bad)  
  420936:	add    DWORD PTR [rax+0x1],esi
  420939:	add    eax,0x32050002
  42093e:	add    DWORD PTR [rax],esi
  420940:	add    DWORD PTR [rip+0x32050002],eax        # 0x32470948
  420946:	add    DWORD PTR [rax],esi
  420948:	add    DWORD PTR [rax],eax
  42094a:	add    BYTE PTR [rax],al
  42094c:	add    DWORD PTR [rax],eax
  42094e:	add    BYTE PTR [rax],al
  420950:	add    DWORD PTR [rax],eax
  420952:	add    BYTE PTR [rax],al
  420954:	add    DWORD PTR [rdi],eax
  420956:	add    al,0x0
  420958:	(bad)  
  420959:	xor    al,BYTE PTR [rbx]
  42095b:	xor    BYTE PTR [rdx],al
  42095d:	(bad)  
  42095e:	add    DWORD PTR [rax+0x1],esi
  420961:	(bad)  
  420962:	add    eax,DWORD PTR [rax]
  420964:	(bad)  
  420965:	rex.X add sil,BYTE PTR [rax]
  420968:	add    DWORD PTR [rax+0x0],esp
  42096b:	add    BYTE PTR [rcx],al
  42096d:	add    eax,0x32050002
  420972:	add    DWORD PTR [rax],esi
  420974:	add    DWORD PTR [rdi],eax
  420976:	add    al,0x0
  420978:	(bad)  
  420979:	xor    al,BYTE PTR [rbx]
  42097b:	xor    BYTE PTR [rdx],al
  42097d:	(bad)  
  42097e:	add    DWORD PTR [rax+0x1],esi
  420981:	(bad)  
  420982:	add    eax,DWORD PTR [rax]
  420984:	(bad)  
  420985:	rex.X add sil,BYTE PTR [rax]
  420988:	add    DWORD PTR [rax+0x0],esp
  42098b:	add    BYTE PTR [rcx],al
  42098d:	(bad)  
  42098e:	add    eax,DWORD PTR [rax]
  420990:	(bad)  
  420991:	rex.X add sil,BYTE PTR [rax]
  420994:	add    DWORD PTR [rax+0x0],esp
  420997:	add    BYTE PTR [rcx],al
  420999:	or     BYTE PTR [rip+0x4420800],al        # 0x484119f
  42099f:	xor    BYTE PTR [rbx],al
  4209a1:	(bad)  
  4209a2:	add    dh,BYTE PTR [rax+0x1]
  4209a5:	push   rax
  4209a6:	add    BYTE PTR [rax],al
  4209a8:	add    DWORD PTR [rdx],ecx
  4209aa:	add    eax,0x26010a00
  4209af:	add    BYTE PTR [rbx],al
  4209b1:	xor    BYTE PTR [rdx],al
  4209b3:	(bad)  
  4209b4:	add    DWORD PTR [rax+0x0],esi
  4209b7:	add    BYTE PTR [rcx],al
  4209b9:	or     eax,DWORD PTR [rsi]
  4209bb:	add    BYTE PTR [rbx],cl
  4209bd:	add    DWORD PTR [rbx],ebp
  4209bf:	add    BYTE PTR [rax+rsi*1],al
  4209c2:	add    esp,DWORD PTR [rax+0x2]
  4209c5:	jo     0x4209c8
  4209c7:	push   rax
  4209c8:	add    DWORD PTR [rsi],eax
  4209ca:	add    eax,DWORD PTR [rax]
  4209cc:	(bad)  
  4209cd:	rex.X add sil,BYTE PTR [rax]
  4209d0:	add    DWORD PTR [rax+0x0],esp
  4209d3:	add    BYTE PTR [rcx],al
  4209d5:	add    eax,0x32050002
  4209da:	add    DWORD PTR [rax],esi
  4209dc:	add    DWORD PTR [rip+0x32050002],eax        # 0x324709e4
  4209e2:	add    DWORD PTR [rax],esi
  4209e4:	add    DWORD PTR [rsi],eax
  4209e6:	add    eax,DWORD PTR [rax]
  4209e8:	(bad)  
  4209e9:	rex.X add sil,BYTE PTR [rax]
  4209ec:	add    DWORD PTR [rax+0x0],esp
  4209ef:	add    BYTE PTR [rcx],al
  4209f1:	add    BYTE PTR [rax],al
  4209f3:	add    BYTE PTR [rcx],al
  4209f5:	or     eax,0x10d0007
  4209fa:	rex.WX add BYTE PTR [rsi],al
  4209fd:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b20e63
  420a03:	push   rax
  420a04:	add    al,al
  420a06:	add    BYTE PTR [rax],al
  420a08:	add    DWORD PTR [rax],ecx
  420a0a:	add    eax,0x4620800
  420a0f:	xor    BYTE PTR [rbx],al
  420a11:	(bad)  
  420a12:	add    dh,BYTE PTR [rax+0x1]
  420a15:	push   rax
  420a16:	add    BYTE PTR [rax],al
  420a18:	add    DWORD PTR [rcx+rax*1],eax
  420a1b:	add    BYTE PTR [rdx+riz*4],al
  420a1e:	add    BYTE PTR [rax],al
  420a20:	add    DWORD PTR [rdi],eax
  420a22:	add    al,0x0
  420a24:	(bad)  
  420a25:	push   rdx
  420a26:	add    esi,DWORD PTR [rax]
  420a28:	add    ah,BYTE PTR [rax+0x1]
  420a2b:	jo     0x420a2e
  420a2d:	(bad)  
  420a2e:	or     BYTE PTR [rax],al
  420a30:	(bad)  
  420a31:	push   rdx
  420a32:	or     dh,BYTE PTR [rax]
  420a34:	or     DWORD PTR [rax+0x8],esp
  420a37:	jo     0x420a40
  420a39:	push   rax
  420a3a:	(bad)  
  420a3b:	rol    BYTE PTR [rax+rdx*8],0x2
  420a3f:	loopne 0x420a42
  420a41:	add    BYTE PTR [rax],al
  420a43:	add    BYTE PTR [rcx],al
  420a45:	add    al,0x1
  420a47:	add    BYTE PTR [rdx+riz*2],al
  420a4a:	add    BYTE PTR [rax],al
  420a4c:	add    DWORD PTR [rsi],eax
  420a4e:	add    eax,DWORD PTR [rax]
  420a50:	(bad)  
  420a51:	(bad)  
  420a53:	xor    BYTE PTR [rcx],al
  420a55:	(bad)  
  420a56:	add    BYTE PTR [rax],al
  420a58:	add    DWORD PTR [rsi],eax
  420a5a:	add    eax,DWORD PTR [rax]
  420a5c:	(bad)  
  420a5d:	(bad)  
  420a5f:	xor    BYTE PTR [rcx],al
  420a61:	(bad)  
  420a62:	add    BYTE PTR [rax],al
  420a64:	add    DWORD PTR [rip+0x52050002],eax        # 0x52470a6c
  420a6a:	add    DWORD PTR [rax],esi
  420a6c:	add    DWORD PTR [rcx+rax*1],eax
  420a6f:	add    BYTE PTR [rdx+riz*4],al
  420a72:	add    BYTE PTR [rax],al
  420a74:	add    DWORD PTR [rip+0x32050002],eax        # 0x32470a7c
  420a7a:	add    DWORD PTR [rax],esi
  420a7c:	add    DWORD PTR [rsi],ecx
  420a7e:	or     BYTE PTR [rax],al
  420a80:	(bad)  
  420a81:	jb     0x420a8d
  420a83:	xor    BYTE PTR [rcx],cl
  420a85:	(bad)  
  420a86:	or     BYTE PTR [rax+0x7],dh
  420a89:	push   rax
  420a8a:	(bad)  
  420a8b:	rol    BYTE PTR [rax+rdx*8],0x2
  420a8f:	loopne 0x420a92
  420a91:	(bad)  
  420a92:	add    al,0x0
  420a94:	(bad)  
  420a95:	xor    al,BYTE PTR [rbx]
  420a97:	xor    BYTE PTR [rdx],al
  420a99:	(bad)  
  420a9a:	add    DWORD PTR [rax+0x1],esi
  420a9d:	add    al,0x1
  420a9f:	add    BYTE PTR [rdx+riz*2],al
  420aa2:	add    BYTE PTR [rax],al
  420aa4:	add    DWORD PTR [rip+0x520d0507],ecx        # 0x524f0fb1
  420aaa:	or     DWORD PTR [rbx],eax
  420aac:	(bad)  
  420aad:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b20f13
  420ab3:	rol    BYTE PTR [rcx],0x50
  420ab6:	add    BYTE PTR [rax],al
  420ab8:	add    DWORD PTR [rdx],ecx
  420aba:	(bad)  
  420abb:	add    BYTE PTR [rdx],cl
  420abd:	xor    al,BYTE PTR [rsi]
  420abf:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b20f25
  420ac5:	push   rax
  420ac6:	add    al,al
  420ac8:	add    DWORD PTR [rsi],eax
  420aca:	add    eax,DWORD PTR [rax]
  420acc:	(bad)  
  420acd:	ret    0x3002
  420ad0:	add    DWORD PTR [rax+0x0],esp
  420ad3:	add    BYTE PTR [rcx],al
  420ad5:	adc    al,0x8
  420ad7:	test   DWORD PTR [rbx+rax*1],edx
  420ada:	or     al,0x42
  420adc:	or     BYTE PTR [rax],dh
  420ade:	(bad)  
  420adf:	(bad)  
  420ae0:	(bad)  
  420ae1:	jo     0x420ae8
  420ae3:	rol    BYTE PTR [rbx],0xd0
  420ae6:	add    DWORD PTR [rax+0x1],edx
  420ae9:	(bad)  
  420aea:	add    al,0x0
  420aec:	(bad)  
  420aed:	xor    al,BYTE PTR [rbx]
  420aef:	xor    BYTE PTR [rdx],al
  420af1:	(bad)  
  420af2:	add    DWORD PTR [rax+0x1],esi
  420af5:	(bad)  
  420af6:	add    eax,DWORD PTR [rax]
  420af8:	(bad)  
  420af9:	ret    0x3002
  420afc:	add    DWORD PTR [rax+0x0],esp
  420aff:	add    BYTE PTR [rcx],al
  420b01:	(bad)  
  420b02:	add    eax,DWORD PTR [rax]
  420b04:	(bad)  
  420b05:	loop   0x420b09
  420b07:	xor    BYTE PTR [rcx],al
  420b09:	(bad)  
  420b0a:	add    BYTE PTR [rax],al
  420b0c:	add    DWORD PTR [rcx],edx
  420b0e:	or     DWORD PTR [rip+0x30d3211],eax        # 0x34f3d25
  420b14:	or     dh,BYTE PTR [rax]
  420b16:	or     DWORD PTR [rax+0x8],esp
  420b19:	jo     0x420b22
  420b1b:	rol    BYTE PTR [rip+0x1e003d0],0x50        # 0x2220ef2
  420b22:	add    BYTE PTR [rax],al
  420b24:	add    DWORD PTR [rdi+rax*1],ecx
  420b27:	add    BYTE PTR [rdx+rax*8],cl
  420b2a:	or     BYTE PTR [rax],dh
  420b2c:	(bad)  
  420b2d:	(bad)  
  420b2e:	(bad)  
  420b2f:	jo     0x420b36
  420b31:	push   rax
  420b32:	add    al,0xc0
  420b34:	add    dl,al
  420b36:	add    BYTE PTR [rax],al
  420b38:	add    DWORD PTR [rbx],edx
  420b3a:	or     al,BYTE PTR [rax]
  420b3c:	adc    eax,DWORD PTR [rcx]
  420b3e:	(bad)  
  420b3f:	add    BYTE PTR [rax+rsi*1],cl
  420b42:	or     esp,DWORD PTR [rax+0xa]
  420b45:	jo     0x420b50
  420b47:	push   rax
  420b48:	or     al,al
  420b4a:	(bad)  
  420b4b:	rol    BYTE PTR [rax+riz*8],1
  420b4e:	add    dh,al
  420b50:	add    DWORD PTR [rip+0x32050002],eax        # 0x32470b58
  420b56:	add    DWORD PTR [rax],esi
  420b58:	add    DWORD PTR [rsi],eax
  420b5a:	add    eax,DWORD PTR [rax]
  420b5c:	(bad)  
  420b5d:	rex.X add sil,BYTE PTR [rax]
  420b60:	add    DWORD PTR [rax+0x0],esp
  420b63:	add    BYTE PTR [rcx],al
  420b65:	add    BYTE PTR [rax],al
  420b67:	add    BYTE PTR [rcx],al
  420b69:	adc    BYTE PTR [rcx],cl
  420b6b:	add    BYTE PTR [rax],dl
  420b6d:	(bad)  
  420b6e:	or     al,0x30
  420b70:	or     esp,DWORD PTR [rax+0xa]
  420b73:	jo     0x420b7e
  420b75:	push   rax
  420b76:	or     al,al
  420b78:	(bad)  
  420b79:	rol    BYTE PTR [rax+riz*8],1
  420b7c:	add    dh,al
  420b7e:	add    BYTE PTR [rax],al
  420b80:	add    DWORD PTR [rbx],ebx
  420b82:	or     al,0x0
  420b84:	sbb    ebp,DWORD PTR [rax+0xa]
  420b87:	add    BYTE PTR [rbx],dl
  420b89:	add    DWORD PTR [rdi],edx
  420b8b:	add    BYTE PTR [rax+rsi*1],cl
  420b8e:	or     esp,DWORD PTR [rax+0xa]
  420b91:	jo     0x420b9c
  420b93:	push   rax
  420b94:	or     al,al
  420b96:	(bad)  
  420b97:	rol    BYTE PTR [rax+riz*8],1
  420b9a:	add    dh,al
  420b9c:	add    DWORD PTR [rsp+rax*1],eax
  420b9f:	add    BYTE PTR [rax+rsi*1],al
  420ba2:	add    esp,DWORD PTR [rax+0x2]
  420ba5:	jo     0x420ba8
  420ba7:	push   rax
  420ba8:	add    DWORD PTR [rax],eax
  420baa:	add    BYTE PTR [rax],al
  420bac:	add    DWORD PTR [rsi],eax
  420bae:	add    eax,DWORD PTR [rax]
  420bb0:	(bad)  
  420bb1:	rex.X add sil,BYTE PTR [rax]
  420bb4:	add    DWORD PTR [rax+0x0],esp
  420bb7:	add    BYTE PTR [rcx],al
  420bb9:	add    eax,0x32050002
  420bbe:	add    DWORD PTR [rax],esi
  420bc0:	add    DWORD PTR [rdi],eax
  420bc2:	add    al,0x0
  420bc4:	(bad)  
  420bc5:	xor    al,BYTE PTR [rbx]
  420bc7:	xor    BYTE PTR [rdx],al
  420bc9:	(bad)  
  420bca:	add    DWORD PTR [rax+0x1],esi
  420bcd:	add    eax,0x32050002
  420bd2:	add    DWORD PTR [rax],esi
  420bd4:	add    DWORD PTR [rax],ecx
  420bd6:	add    eax,0x4420800
  420bdb:	xor    BYTE PTR [rbx],al
  420bdd:	(bad)  
  420bde:	add    dh,BYTE PTR [rax+0x1]
  420be1:	push   rax
  420be2:	add    BYTE PTR [rax],al
  420be4:	add    DWORD PTR [rip+0x32050002],eax        # 0x32470bec
  420bea:	add    DWORD PTR [rax],esi
  420bec:	add    DWORD PTR [rsi],ecx
  420bee:	or     BYTE PTR [rax],al
  420bf0:	(bad)  
  420bf1:	xor    cl,BYTE PTR [rdx]
  420bf3:	xor    BYTE PTR [rcx],cl
  420bf5:	(bad)  
  420bf6:	or     BYTE PTR [rax+0x7],dh
  420bf9:	push   rax
  420bfa:	(bad)  
  420bfb:	rol    BYTE PTR [rax+rdx*8],0x2
  420bff:	loopne 0x420c02
  420c01:	or     BYTE PTR [rip+0x4420800],al        # 0x4841407
  420c07:	xor    BYTE PTR [rbx],al
  420c09:	(bad)  
  420c0a:	add    dh,BYTE PTR [rax+0x1]
  420c0d:	push   rax
  420c0e:	add    BYTE PTR [rax],al
  420c10:	add    DWORD PTR [rdi+rax*1],ecx
  420c13:	add    BYTE PTR [rdx+rax*2],cl
  420c16:	or     BYTE PTR [rax],dh
  420c18:	(bad)  
  420c19:	(bad)  
  420c1a:	(bad)  
  420c1b:	jo     0x420c22
  420c1d:	push   rax
  420c1e:	add    al,0xc0
  420c20:	add    dl,al
  420c22:	add    BYTE PTR [rax],al
  420c24:	add    DWORD PTR [rax],eax
  420c26:	add    BYTE PTR [rax],al
  420c28:	add    DWORD PTR [rdi],eax
  420c2a:	add    al,0x0
  420c2c:	(bad)  
  420c2d:	xor    al,BYTE PTR [rbx]
  420c2f:	xor    BYTE PTR [rdx],al
  420c31:	(bad)  
  420c32:	add    DWORD PTR [rax+0x1],esi
  420c35:	(bad)  
  420c36:	add    eax,DWORD PTR [rax]
  420c38:	(bad)  
  420c39:	and    al,BYTE PTR [rdx]
  420c3b:	xor    BYTE PTR [rcx],al
  420c3d:	(bad)  
  420c3e:	add    BYTE PTR [rax],al
  420c40:	add    DWORD PTR [rdi],eax
  420c42:	add    al,0x0
  420c44:	(bad)  
  420c45:	xor    al,BYTE PTR [rbx]
  420c47:	xor    BYTE PTR [rdx],al
  420c49:	(bad)  
  420c4a:	add    DWORD PTR [rax+0x1],esi
  420c4d:	add    BYTE PTR [rax],al
  420c4f:	add    BYTE PTR [rcx],al
  420c51:	or     BYTE PTR [rip+0x4820800],al        # 0x4c41457
  420c57:	xor    BYTE PTR [rbx],al
  420c59:	(bad)  
  420c5a:	add    dh,BYTE PTR [rax+0x1]
  420c5d:	push   rax
  420c5e:	add    BYTE PTR [rax],al
  420c60:	add    DWORD PTR [rax],ecx
  420c62:	add    eax,0x4a20800
  420c67:	xor    BYTE PTR [rbx],al
  420c69:	(bad)  
  420c6a:	add    dh,BYTE PTR [rax+0x1]
  420c6d:	push   rax
  420c6e:	add    BYTE PTR [rax],al
  420c70:	add    DWORD PTR [rax],edx
  420c72:	or     DWORD PTR [rax],eax
  420c74:	adc    BYTE PTR [rdx+0x600b300c],al
  420c7a:	or     dh,BYTE PTR [rax+0x9]
  420c7d:	push   rax
  420c7e:	or     al,al
  420c80:	(bad)  
  420c81:	rol    BYTE PTR [rax+riz*8],1
  420c84:	add    dh,al
  420c86:	add    BYTE PTR [rax],al
  420c88:	add    DWORD PTR [rax],ecx
  420c8a:	add    eax,0x4820800
  420c8f:	xor    BYTE PTR [rbx],al
  420c91:	(bad)  
  420c92:	add    dh,BYTE PTR [rax+0x1]
  420c95:	push   rax
  420c96:	add    BYTE PTR [rax],al
  420c98:	add    DWORD PTR [rax],eax
  420c9a:	add    BYTE PTR [rax],al
  420c9c:	add    DWORD PTR [rax],eax
  420c9e:	add    BYTE PTR [rax],al
  420ca0:	add    DWORD PTR [rax],eax
  420ca2:	add    BYTE PTR [rax],al
  420ca4:	add    DWORD PTR [rax],eax
  420ca6:	add    BYTE PTR [rax],al
  420ca8:	add    DWORD PTR [rip+0x32050002],eax        # 0x32470cb0
  420cae:	add    DWORD PTR [rax],esi
  420cb0:	add    DWORD PTR [rcx+rax*1],eax
  420cb3:	add    BYTE PTR [rdx+rax*2],al
  420cb6:	add    BYTE PTR [rax],al
  420cb8:	add    DWORD PTR [rax],eax
  420cba:	add    BYTE PTR [rax],al
  420cbc:	add    DWORD PTR [rax],eax
	...

Disassembly of section .bss:

0000000000421000 <.bss>:
	...

Disassembly of section .idata:

0000000000423000 <.idata>:
  423000:	js     0x423032
  423002:	add    al,BYTE PTR [rax]
	...
  42300c:	push   0xffffffff8800023f
  423011:	xor    al,0x2
  423013:	add    BYTE PTR [rax+0x230],ah
  423019:	add    BYTE PTR [rax],al
  42301b:	add    BYTE PTR [rax],al
  42301d:	add    BYTE PTR [rax],al
  42301f:	add    ah,dh
  423021:	(bad)  
  423022:	add    al,BYTE PTR [rax]
  423024:	mov    al,0x34
  423026:	add    al,BYTE PTR [rax]
  423028:	cwde   
  423029:	xor    DWORD PTR [rdx],eax
	...
  423033:	add    BYTE PTR [rax+0x41],ah
  423036:	add    al,BYTE PTR [rax]
  423038:	test   al,0x35
  42303a:	add    al,BYTE PTR [rax]
  42303c:	pop    rax
  42303d:	xor    al,0x2
	...
  423047:	add    BYTE PTR [rax+0x41],bh
  42304a:	add    al,BYTE PTR [rax]
  42304c:	push   0x78000238
  423051:	xor    al,0x2
	...
  42305b:	add    BYTE PTR [rax-0x77fffdbf],dl
  423061:	cmp    BYTE PTR [rdx],al
	...
  423077:	add    BYTE PTR [rax+0x238],bl
  42307d:	add    BYTE PTR [rax],al
  42307f:	add    BYTE PTR [rax+0x238],dh
  423085:	add    BYTE PTR [rax],al
  423087:	add    ah,al
  423089:	cmp    BYTE PTR [rdx],al
  42308b:	add    BYTE PTR [rax],al
  42308d:	add    BYTE PTR [rax],al
  42308f:	add    ah,dl
  423091:	cmp    BYTE PTR [rdx],al
	...
  42309f:	add    al,ch
  4230a1:	cmp    BYTE PTR [rdx],al
  4230a3:	add    BYTE PTR [rax],al
  4230a5:	add    BYTE PTR [rax],al
  4230a7:	add    BYTE PTR [rax],al
  4230a9:	cmp    DWORD PTR [rdx],eax
  4230ab:	add    BYTE PTR [rax],al
  4230ad:	add    BYTE PTR [rax],al
  4230af:	add    BYTE PTR [rax],bl
  4230b1:	cmp    DWORD PTR [rdx],eax
  4230b3:	add    BYTE PTR [rax],al
  4230b5:	add    BYTE PTR [rax],al
  4230b7:	add    BYTE PTR [rcx+rdi*1],ch
  4230ba:	add    al,BYTE PTR [rax]
  4230bc:	add    BYTE PTR [rax],al
  4230be:	add    BYTE PTR [rax],al
  4230c0:	rex.X cmp DWORD PTR [rdx],eax
  4230c3:	add    BYTE PTR [rax],al
  4230c5:	add    BYTE PTR [rax],al
  4230c7:	add    BYTE PTR [rax+0x39],bl
  4230ca:	add    al,BYTE PTR [rax]
  4230cc:	add    BYTE PTR [rax],al
  4230ce:	add    BYTE PTR [rax],al
  4230d0:	outs   dx,BYTE PTR ds:[rsi]
  4230d1:	cmp    DWORD PTR [rdx],eax
  4230d3:	add    BYTE PTR [rax],al
  4230d5:	add    BYTE PTR [rax],al
  4230d7:	add    BYTE PTR [rsi+0x39],bh
  4230da:	add    al,BYTE PTR [rax]
  4230dc:	add    BYTE PTR [rax],al
  4230de:	add    BYTE PTR [rax],al
  4230e0:	xchg   esp,eax
  4230e1:	cmp    DWORD PTR [rdx],eax
  4230e3:	add    BYTE PTR [rax],al
  4230e5:	add    BYTE PTR [rax],al
  4230e7:	add    BYTE PTR [rax+0x239],ch
  4230ed:	add    BYTE PTR [rax],al
  4230ef:	add    BYTE PTR [rdx+0x239],bh
  4230f5:	add    BYTE PTR [rax],al
  4230f7:	add    ah,cl
  4230f9:	cmp    DWORD PTR [rdx],eax
  4230fb:	add    BYTE PTR [rax],al
  4230fd:	add    BYTE PTR [rax],al
  4230ff:	add    dh,ah
  423101:	cmp    DWORD PTR [rdx],eax
  423103:	add    BYTE PTR [rax],al
  423105:	add    BYTE PTR [rax],al
  423107:	add    dh,dh
  423109:	cmp    DWORD PTR [rdx],eax
  42310b:	add    BYTE PTR [rax],al
  42310d:	add    BYTE PTR [rax],al
  42310f:	add    BYTE PTR [rdx],dl
  423111:	cmp    al,BYTE PTR [rdx]
  423113:	add    BYTE PTR [rax],al
  423115:	add    BYTE PTR [rax],al
  423117:	add    BYTE PTR [rsi],ah
  423119:	cmp    al,BYTE PTR [rdx]
  42311b:	add    BYTE PTR [rax],al
  42311d:	add    BYTE PTR [rax],al
  42311f:	add    BYTE PTR [rsi],bh
  423121:	cmp    al,BYTE PTR [rdx]
  423123:	add    BYTE PTR [rax],al
  423125:	add    BYTE PTR [rax],al
  423127:	add    BYTE PTR [rdx+rdi*1+0x2],dl
  42312b:	add    BYTE PTR [rax],al
  42312d:	add    BYTE PTR [rax],al
  42312f:	add    BYTE PTR [rsi+0x3a],ch
  423132:	add    al,BYTE PTR [rax]
  423134:	add    BYTE PTR [rax],al
  423136:	add    BYTE PTR [rax],al
  423138:	test   BYTE PTR [rdx],bh
  42313a:	add    al,BYTE PTR [rax]
  42313c:	add    BYTE PTR [rax],al
  42313e:	add    BYTE PTR [rax],al
  423140:	cwde   
  423141:	cmp    al,BYTE PTR [rdx]
  423143:	add    BYTE PTR [rax],al
  423145:	add    BYTE PTR [rax],al
  423147:	add    BYTE PTR [rdx+0x23a],dh
  42314d:	add    BYTE PTR [rax],al
  42314f:	add    dh,al
  423151:	cmp    al,BYTE PTR [rdx]
  423153:	add    BYTE PTR [rax],al
  423155:	add    BYTE PTR [rax],al
  423157:	add    ah,ah
  423159:	cmp    al,BYTE PTR [rdx]
  42315b:	add    BYTE PTR [rax],al
  42315d:	add    BYTE PTR [rax],al
  42315f:	add    ah,ch
  423161:	cmp    al,BYTE PTR [rdx]
  423163:	add    BYTE PTR [rax],al
  423165:	add    BYTE PTR [rax],al
  423167:	add    BYTE PTR [rax],al
  423169:	cmp    eax,DWORD PTR [rdx]
  42316b:	add    BYTE PTR [rax],al
  42316d:	add    BYTE PTR [rax],al
  42316f:	add    BYTE PTR [rsi],cl
  423171:	cmp    eax,DWORD PTR [rdx]
  423173:	add    BYTE PTR [rax],al
  423175:	add    BYTE PTR [rax],al
  423177:	add    BYTE PTR [rdx],ch
  423179:	cmp    eax,DWORD PTR [rdx]
  42317b:	add    BYTE PTR [rax],al
  42317d:	add    BYTE PTR [rax],al
  42317f:	add    BYTE PTR [rbx+rdi*1],bh
  423182:	add    al,BYTE PTR [rax]
  423184:	add    BYTE PTR [rax],al
  423186:	add    BYTE PTR [rax],al
  423188:	cmp    r8,QWORD PTR [rdx]
	...
  423197:	add    BYTE PTR [rdx+0x3b],ah
  42319a:	add    al,BYTE PTR [rax]
  42319c:	add    BYTE PTR [rax],al
  42319e:	add    BYTE PTR [rax],al
  4231a0:	jp     0x4231dd
  4231a2:	add    al,BYTE PTR [rax]
  4231a4:	add    BYTE PTR [rax],al
  4231a6:	add    BYTE PTR [rax],al
  4231a8:	nop
  4231a9:	cmp    eax,DWORD PTR [rdx]
  4231ab:	add    BYTE PTR [rax],al
  4231ad:	add    BYTE PTR [rax],al
  4231af:	add    BYTE PTR [rsi+0x23b],bl
  4231b5:	add    BYTE PTR [rax],al
  4231b7:	add    BYTE PTR [rsi+0x23b],ch
  4231bd:	add    BYTE PTR [rax],al
  4231bf:	add    BYTE PTR [rdx+0x23b],bh
  4231c5:	add    BYTE PTR [rax],al
  4231c7:	add    al,cl
  4231c9:	cmp    eax,DWORD PTR [rdx]
  4231cb:	add    BYTE PTR [rax],al
  4231cd:	add    BYTE PTR [rax],al
  4231cf:	add    al,bl
  4231d1:	cmp    eax,DWORD PTR [rdx]
  4231d3:	add    BYTE PTR [rax],al
  4231d5:	add    BYTE PTR [rax],al
  4231d7:	add    al,ch
  4231d9:	cmp    eax,DWORD PTR [rdx]
  4231db:	add    BYTE PTR [rax],al
  4231dd:	add    BYTE PTR [rax],al
  4231df:	add    dl,bh
  4231e1:	cmp    eax,DWORD PTR [rdx]
  4231e3:	add    BYTE PTR [rax],al
  4231e5:	add    BYTE PTR [rax],al
  4231e7:	add    BYTE PTR [rsi],cl
  4231e9:	cmp    al,0x2
  4231eb:	add    BYTE PTR [rax],al
  4231ed:	add    BYTE PTR [rax],al
  4231ef:	add    BYTE PTR [rax],bl
  4231f1:	cmp    al,0x2
  4231f3:	add    BYTE PTR [rax],al
  4231f5:	add    BYTE PTR [rax],al
  4231f7:	add    BYTE PTR [rsi],ah
  4231f9:	cmp    al,0x2
  4231fb:	add    BYTE PTR [rax],al
  4231fd:	add    BYTE PTR [rax],al
  4231ff:	add    BYTE PTR [rax],dh
  423201:	cmp    al,0x2
  423203:	add    BYTE PTR [rax],al
  423205:	add    BYTE PTR [rax],al
  423207:	add    BYTE PTR [rsp+rdi*1],bh
  42320a:	add    al,BYTE PTR [rax]
  42320c:	add    BYTE PTR [rax],al
  42320e:	add    BYTE PTR [rax],al
  423210:	rex.RX cmp al,0x2
  423213:	add    BYTE PTR [rax],al
  423215:	add    BYTE PTR [rax],al
  423217:	add    BYTE PTR [rsi+0x3c],cl
  42321a:	add    al,BYTE PTR [rax]
  42321c:	add    BYTE PTR [rax],al
  42321e:	add    BYTE PTR [rax],al
  423220:	pop    rsp
  423221:	cmp    al,0x2
  423223:	add    BYTE PTR [rax],al
  423225:	add    BYTE PTR [rax],al
  423227:	add    BYTE PTR [rsp+rdi*1+0x2],ch
  42322b:	add    BYTE PTR [rax],al
  42322d:	add    BYTE PTR [rax],al
  42322f:	add    BYTE PTR [rsi+0x3c],dh
  423232:	add    al,BYTE PTR [rax]
  423234:	add    BYTE PTR [rax],al
  423236:	add    BYTE PTR [rax],al
  423238:	(bad)  
  423239:	cmp    al,0x2
  42323b:	add    BYTE PTR [rax],al
  42323d:	add    BYTE PTR [rax],al
  42323f:	add    BYTE PTR [rsi+0x23c],cl
  423245:	add    BYTE PTR [rax],al
  423247:	add    BYTE PTR [rdx+0x23c],bl
  42324d:	add    BYTE PTR [rax],al
  42324f:	add    BYTE PTR [rdx+0x23c],ch
  423255:	add    BYTE PTR [rax],al
  423257:	add    BYTE PTR [rdx+0x23c],dh
  42325d:	add    BYTE PTR [rax],al
  42325f:	add    BYTE PTR [rsi+0x23c],bh
  423265:	add    BYTE PTR [rax],al
  423267:	add    al,cl
  423269:	cmp    al,0x2
  42326b:	add    BYTE PTR [rax],al
  42326d:	add    BYTE PTR [rax],al
  42326f:	add    dh,dl
  423271:	cmp    al,0x2
  423273:	add    BYTE PTR [rax],al
  423275:	add    BYTE PTR [rax],al
  423277:	add    al,ah
  423279:	cmp    al,0x2
  42327b:	add    BYTE PTR [rax],al
  42327d:	add    BYTE PTR [rax],al
  42327f:	add    dl,ch
  423281:	cmp    al,0x2
  423283:	add    BYTE PTR [rax],al
  423285:	add    BYTE PTR [rax],al
  423287:	add    dl,dh
  423289:	cmp    al,0x2
  42328b:	add    BYTE PTR [rax],al
  42328d:	add    BYTE PTR [rax],al
  42328f:	add    dl,bh
  423291:	cmp    al,0x2
  423293:	add    BYTE PTR [rax],al
  423295:	add    BYTE PTR [rax],al
  423297:	add    BYTE PTR [rdi*1+0x2],al
  42329e:	add    BYTE PTR [rax],al
  4232a0:	or     al,0x3d
  4232a2:	add    al,BYTE PTR [rax]
  4232a4:	add    BYTE PTR [rax],al
  4232a6:	add    BYTE PTR [rax],al
  4232a8:	(bad)  
  4232a9:	cmp    eax,0x2
  4232ae:	add    BYTE PTR [rax],al
  4232b0:	and    BYTE PTR [rip+0x2],bh        # 0x4232b8
  4232b6:	add    BYTE PTR [rax],al
  4232b8:	sub    bh,BYTE PTR [rip+0x2]        # 0x4232c0
  4232be:	add    BYTE PTR [rax],al
  4232c0:	xor    bh,BYTE PTR [rip+0x2]        # 0x4232c8
  4232c6:	add    BYTE PTR [rax],al
  4232c8:	cmp    bh,BYTE PTR [rip+0x2]        # 0x4232d0
  4232ce:	add    BYTE PTR [rax],al
  4232d0:	rex.R cmp eax,0x2
  4232d6:	add    BYTE PTR [rax],al
  4232d8:	rex.WR cmp rax,0x2
  4232de:	add    BYTE PTR [rax],al
  4232e0:	push   rsp
  4232e1:	cmp    eax,0x2
  4232e6:	add    BYTE PTR [rax],al
  4232e8:	pop    rsp
  4232e9:	cmp    eax,0x2
  4232ee:	add    BYTE PTR [rax],al
  4232f0:	fs cmp eax,0x2
  4232f6:	add    BYTE PTR [rax],al
  4232f8:	outs   dx,BYTE PTR ds:[rsi]
  4232f9:	cmp    eax,0x2
  4232fe:	add    BYTE PTR [rax],al
  423300:	jp     0x42333f
  423302:	add    al,BYTE PTR [rax]
  423304:	add    BYTE PTR [rax],al
  423306:	add    BYTE PTR [rax],al
  423308:	test   BYTE PTR [rip+0x2],bh        # 0x423310
  42330e:	add    BYTE PTR [rax],al
  423310:	mov    ?,WORD PTR [rip+0x2]        # 0x423318
  423316:	add    BYTE PTR [rax],al
  423318:	cwde   
  423319:	cmp    eax,0x2
  42331e:	add    BYTE PTR [rax],al
  423320:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  423321:	cmp    eax,0x2
  423326:	add    BYTE PTR [rax],al
  423328:	mov    al,0x3d
  42332a:	add    al,BYTE PTR [rax]
  42332c:	add    BYTE PTR [rax],al
  42332e:	add    BYTE PTR [rax],al
  423330:	mov    edx,0x23d
  423335:	add    BYTE PTR [rax],al
  423337:	add    ah,al
  423339:	cmp    eax,0x2
  42333e:	add    BYTE PTR [rax],al
  423340:	(bad)  
  423341:	cmp    eax,0x2
  423346:	add    BYTE PTR [rax],al
  423348:	(bad)  
  423349:	cmp    eax,0x2
  42334e:	add    BYTE PTR [rax],al
  423350:	fidivr WORD PTR [rip+0x2]        # 0x423358
  423356:	add    BYTE PTR [rax],al
  423358:	call   0x42359a
  42335d:	add    BYTE PTR [rax],al
  42335f:	add    dl,dh
  423361:	cmp    eax,0x2
  423366:	add    BYTE PTR [rax],al
  423368:	cld    
  423369:	cmp    eax,0x2
  42336e:	add    BYTE PTR [rax],al
  423370:	(bad)  
  423371:	add    al,BYTE PTR ds:[rax]
  423374:	add    BYTE PTR [rax],al
  423376:	add    BYTE PTR [rax],al
  423378:	adc    BYTE PTR [rsi],bh
  42337a:	add    al,BYTE PTR [rax]
  42337c:	add    BYTE PTR [rax],al
  42337e:	add    BYTE PTR [rax],al
  423380:	sbb    bh,BYTE PTR [rsi]
  423382:	add    al,BYTE PTR [rax]
  423384:	add    BYTE PTR [rax],al
  423386:	add    BYTE PTR [rax],al
  423388:	es add al,BYTE PTR ds:[rax]
  42338c:	add    BYTE PTR [rax],al
  42338e:	add    BYTE PTR [rax],al
  423390:	xor    bh,BYTE PTR [rsi]
  423392:	add    al,BYTE PTR [rax]
  423394:	add    BYTE PTR [rax],al
  423396:	add    BYTE PTR [rax],al
  423398:	cmp    al,0x3e
  42339a:	add    al,BYTE PTR [rax]
  42339c:	add    BYTE PTR [rax],al
  42339e:	add    BYTE PTR [rax],al
  4233a0:	rex.RX
  4233a1:	add    al,BYTE PTR ds:[rax]
  4233a4:	add    BYTE PTR [rax],al
  4233a6:	add    BYTE PTR [rax],al
  4233a8:	push   rax
  4233a9:	add    al,BYTE PTR ds:[rax]
  4233ac:	add    BYTE PTR [rax],al
  4233ae:	add    BYTE PTR [rax],al
  4233b0:	pop    rdx
  4233b1:	add    al,BYTE PTR ds:[rax]
  4233b4:	add    BYTE PTR [rax],al
  4233b6:	add    BYTE PTR [rax],al
  4233b8:	fs add al,BYTE PTR ds:[rax]
  4233bc:	add    BYTE PTR [rax],al
  4233be:	add    BYTE PTR [rax],al
  4233c0:	outs   dx,BYTE PTR ds:[rsi]
  4233c1:	add    al,BYTE PTR ds:[rax]
  4233c4:	add    BYTE PTR [rax],al
  4233c6:	add    BYTE PTR [rax],al
  4233c8:	js     0x423408
  4233ca:	add    al,BYTE PTR [rax]
  4233cc:	add    BYTE PTR [rax],al
  4233ce:	add    BYTE PTR [rax],al
  4233d0:	(bad)  
  4233d1:	add    al,BYTE PTR ds:[rax]
  4233d4:	add    BYTE PTR [rax],al
  4233d6:	add    BYTE PTR [rax],al
  4233d8:	mov    WORD PTR [rsi],?
  4233da:	add    al,BYTE PTR [rax]
  4233dc:	add    BYTE PTR [rax],al
  4233de:	add    BYTE PTR [rax],al
  4233e0:	xchg   esi,eax
  4233e1:	add    al,BYTE PTR ds:[rax]
  4233e4:	add    BYTE PTR [rax],al
  4233e6:	add    BYTE PTR [rax],al
  4233e8:	movabs ds:0xac0000000000023e,al
  4233f1:	add    al,BYTE PTR ds:[rax]
  4233f4:	add    BYTE PTR [rax],al
  4233f6:	add    BYTE PTR [rax],al
  4233f8:	mov    dh,0x3e
  4233fa:	add    al,BYTE PTR [rax]
  4233fc:	add    BYTE PTR [rax],al
  4233fe:	add    BYTE PTR [rax],al
  423400:	sar    BYTE PTR [rsi],0x2
  423403:	add    BYTE PTR [rax],al
  423405:	add    BYTE PTR [rax],al
  423407:	add    dh,cl
  423409:	add    al,BYTE PTR ds:[rax]
  42340c:	add    BYTE PTR [rax],al
  42340e:	add    BYTE PTR [rax],al
  423410:	fdivr  DWORD PTR [rsi]
  423412:	add    al,BYTE PTR [rax]
  423414:	add    BYTE PTR [rax],al
  423416:	add    BYTE PTR [rax],al
  423418:	loop   0x423458
  42341a:	add    al,BYTE PTR [rax]
  42341c:	add    BYTE PTR [rax],al
  42341e:	add    BYTE PTR [rax],al
  423420:	in     al,dx
  423421:	add    al,BYTE PTR ds:[rax]
  423424:	add    BYTE PTR [rax],al
  423426:	add    BYTE PTR [rax],al
  423428:	idiv   BYTE PTR [rsi]
  42342a:	add    al,BYTE PTR [rax]
  42342c:	add    BYTE PTR [rax],al
  42342e:	add    BYTE PTR [rax],al
  423430:	(bad)  
  423431:	add    al,BYTE PTR ds:[rax]
  423434:	add    BYTE PTR [rax],al
  423436:	add    BYTE PTR [rax],al
  423438:	(bad)  
  423439:	(bad)  
  42343a:	add    al,BYTE PTR [rax]
  42343c:	add    BYTE PTR [rax],al
  42343e:	add    BYTE PTR [rax],al
  423440:	adc    BYTE PTR [rdi],bh
  423442:	add    al,BYTE PTR [rax]
  423444:	add    BYTE PTR [rax],al
  423446:	add    BYTE PTR [rax],al
  423448:	sbb    bh,BYTE PTR [rdi]
  42344a:	add    al,BYTE PTR [rax]
	...
  423458:	and    al,0x3f
  42345a:	add    al,BYTE PTR [rax]
  42345c:	add    BYTE PTR [rax],al
  42345e:	add    BYTE PTR [rax],al
  423460:	xor    BYTE PTR [rdi],bh
  423462:	add    al,BYTE PTR [rax]
  423464:	add    BYTE PTR [rax],al
  423466:	add    BYTE PTR [rax],al
  423468:	cmp    al,0x3f
  42346a:	add    al,BYTE PTR [rax]
	...
  423478:	rex.W (bad) 
  42347a:	add    al,BYTE PTR [rax]
	...
  423488:	cwde   
  423489:	cmp    BYTE PTR [rdx],al
  42348b:	add    BYTE PTR [rax],al
  42348d:	add    BYTE PTR [rax],al
  42348f:	add    BYTE PTR [rax+0x238],dh
  423495:	add    BYTE PTR [rax],al
  423497:	add    ah,al
  423499:	cmp    BYTE PTR [rdx],al
  42349b:	add    BYTE PTR [rax],al
  42349d:	add    BYTE PTR [rax],al
  42349f:	add    ah,dl
  4234a1:	cmp    BYTE PTR [rdx],al
	...
  4234af:	add    al,ch
  4234b1:	cmp    BYTE PTR [rdx],al
  4234b3:	add    BYTE PTR [rax],al
  4234b5:	add    BYTE PTR [rax],al
  4234b7:	add    BYTE PTR [rax],al
  4234b9:	cmp    DWORD PTR [rdx],eax
  4234bb:	add    BYTE PTR [rax],al
  4234bd:	add    BYTE PTR [rax],al
  4234bf:	add    BYTE PTR [rax],bl
  4234c1:	cmp    DWORD PTR [rdx],eax
  4234c3:	add    BYTE PTR [rax],al
  4234c5:	add    BYTE PTR [rax],al
  4234c7:	add    BYTE PTR [rcx+rdi*1],ch
  4234ca:	add    al,BYTE PTR [rax]
  4234cc:	add    BYTE PTR [rax],al
  4234ce:	add    BYTE PTR [rax],al
  4234d0:	rex.X cmp DWORD PTR [rdx],eax
  4234d3:	add    BYTE PTR [rax],al
  4234d5:	add    BYTE PTR [rax],al
  4234d7:	add    BYTE PTR [rax+0x39],bl
  4234da:	add    al,BYTE PTR [rax]
  4234dc:	add    BYTE PTR [rax],al
  4234de:	add    BYTE PTR [rax],al
  4234e0:	outs   dx,BYTE PTR ds:[rsi]
  4234e1:	cmp    DWORD PTR [rdx],eax
  4234e3:	add    BYTE PTR [rax],al
  4234e5:	add    BYTE PTR [rax],al
  4234e7:	add    BYTE PTR [rsi+0x39],bh
  4234ea:	add    al,BYTE PTR [rax]
  4234ec:	add    BYTE PTR [rax],al
  4234ee:	add    BYTE PTR [rax],al
  4234f0:	xchg   esp,eax
  4234f1:	cmp    DWORD PTR [rdx],eax
  4234f3:	add    BYTE PTR [rax],al
  4234f5:	add    BYTE PTR [rax],al
  4234f7:	add    BYTE PTR [rax+0x239],ch
  4234fd:	add    BYTE PTR [rax],al
  4234ff:	add    BYTE PTR [rdx+0x239],bh
  423505:	add    BYTE PTR [rax],al
  423507:	add    ah,cl
  423509:	cmp    DWORD PTR [rdx],eax
  42350b:	add    BYTE PTR [rax],al
  42350d:	add    BYTE PTR [rax],al
  42350f:	add    dh,ah
  423511:	cmp    DWORD PTR [rdx],eax
  423513:	add    BYTE PTR [rax],al
  423515:	add    BYTE PTR [rax],al
  423517:	add    dh,dh
  423519:	cmp    DWORD PTR [rdx],eax
  42351b:	add    BYTE PTR [rax],al
  42351d:	add    BYTE PTR [rax],al
  42351f:	add    BYTE PTR [rdx],dl
  423521:	cmp    al,BYTE PTR [rdx]
  423523:	add    BYTE PTR [rax],al
  423525:	add    BYTE PTR [rax],al
  423527:	add    BYTE PTR [rsi],ah
  423529:	cmp    al,BYTE PTR [rdx]
  42352b:	add    BYTE PTR [rax],al
  42352d:	add    BYTE PTR [rax],al
  42352f:	add    BYTE PTR [rsi],bh
  423531:	cmp    al,BYTE PTR [rdx]
  423533:	add    BYTE PTR [rax],al
  423535:	add    BYTE PTR [rax],al
  423537:	add    BYTE PTR [rdx+rdi*1+0x2],dl
  42353b:	add    BYTE PTR [rax],al
  42353d:	add    BYTE PTR [rax],al
  42353f:	add    BYTE PTR [rsi+0x3a],ch
  423542:	add    al,BYTE PTR [rax]
  423544:	add    BYTE PTR [rax],al
  423546:	add    BYTE PTR [rax],al
  423548:	test   BYTE PTR [rdx],bh
  42354a:	add    al,BYTE PTR [rax]
  42354c:	add    BYTE PTR [rax],al
  42354e:	add    BYTE PTR [rax],al
  423550:	cwde   
  423551:	cmp    al,BYTE PTR [rdx]
  423553:	add    BYTE PTR [rax],al
  423555:	add    BYTE PTR [rax],al
  423557:	add    BYTE PTR [rdx+0x23a],dh
  42355d:	add    BYTE PTR [rax],al
  42355f:	add    dh,al
  423561:	cmp    al,BYTE PTR [rdx]
  423563:	add    BYTE PTR [rax],al
  423565:	add    BYTE PTR [rax],al
  423567:	add    ah,ah
  423569:	cmp    al,BYTE PTR [rdx]
  42356b:	add    BYTE PTR [rax],al
  42356d:	add    BYTE PTR [rax],al
  42356f:	add    ah,ch
  423571:	cmp    al,BYTE PTR [rdx]
  423573:	add    BYTE PTR [rax],al
  423575:	add    BYTE PTR [rax],al
  423577:	add    BYTE PTR [rax],al
  423579:	cmp    eax,DWORD PTR [rdx]
  42357b:	add    BYTE PTR [rax],al
  42357d:	add    BYTE PTR [rax],al
  42357f:	add    BYTE PTR [rsi],cl
  423581:	cmp    eax,DWORD PTR [rdx]
  423583:	add    BYTE PTR [rax],al
  423585:	add    BYTE PTR [rax],al
  423587:	add    BYTE PTR [rdx],ch
  423589:	cmp    eax,DWORD PTR [rdx]
  42358b:	add    BYTE PTR [rax],al
  42358d:	add    BYTE PTR [rax],al
  42358f:	add    BYTE PTR [rbx+rdi*1],bh
  423592:	add    al,BYTE PTR [rax]
  423594:	add    BYTE PTR [rax],al
  423596:	add    BYTE PTR [rax],al
  423598:	cmp    r8,QWORD PTR [rdx]
	...
  4235a7:	add    BYTE PTR [rdx+0x3b],ah
  4235aa:	add    al,BYTE PTR [rax]
  4235ac:	add    BYTE PTR [rax],al
  4235ae:	add    BYTE PTR [rax],al
  4235b0:	jp     0x4235ed
  4235b2:	add    al,BYTE PTR [rax]
  4235b4:	add    BYTE PTR [rax],al
  4235b6:	add    BYTE PTR [rax],al
  4235b8:	nop
  4235b9:	cmp    eax,DWORD PTR [rdx]
  4235bb:	add    BYTE PTR [rax],al
  4235bd:	add    BYTE PTR [rax],al
  4235bf:	add    BYTE PTR [rsi+0x23b],bl
  4235c5:	add    BYTE PTR [rax],al
  4235c7:	add    BYTE PTR [rsi+0x23b],ch
  4235cd:	add    BYTE PTR [rax],al
  4235cf:	add    BYTE PTR [rdx+0x23b],bh
  4235d5:	add    BYTE PTR [rax],al
  4235d7:	add    al,cl
  4235d9:	cmp    eax,DWORD PTR [rdx]
  4235db:	add    BYTE PTR [rax],al
  4235dd:	add    BYTE PTR [rax],al
  4235df:	add    al,bl
  4235e1:	cmp    eax,DWORD PTR [rdx]
  4235e3:	add    BYTE PTR [rax],al
  4235e5:	add    BYTE PTR [rax],al
  4235e7:	add    al,ch
  4235e9:	cmp    eax,DWORD PTR [rdx]
  4235eb:	add    BYTE PTR [rax],al
  4235ed:	add    BYTE PTR [rax],al
  4235ef:	add    dl,bh
  4235f1:	cmp    eax,DWORD PTR [rdx]
  4235f3:	add    BYTE PTR [rax],al
  4235f5:	add    BYTE PTR [rax],al
  4235f7:	add    BYTE PTR [rsi],cl
  4235f9:	cmp    al,0x2
  4235fb:	add    BYTE PTR [rax],al
  4235fd:	add    BYTE PTR [rax],al
  4235ff:	add    BYTE PTR [rax],bl
  423601:	cmp    al,0x2
  423603:	add    BYTE PTR [rax],al
  423605:	add    BYTE PTR [rax],al
  423607:	add    BYTE PTR [rsi],ah
  423609:	cmp    al,0x2
  42360b:	add    BYTE PTR [rax],al
  42360d:	add    BYTE PTR [rax],al
  42360f:	add    BYTE PTR [rax],dh
  423611:	cmp    al,0x2
  423613:	add    BYTE PTR [rax],al
  423615:	add    BYTE PTR [rax],al
  423617:	add    BYTE PTR [rsp+rdi*1],bh
  42361a:	add    al,BYTE PTR [rax]
  42361c:	add    BYTE PTR [rax],al
  42361e:	add    BYTE PTR [rax],al
  423620:	rex.RX cmp al,0x2
  423623:	add    BYTE PTR [rax],al
  423625:	add    BYTE PTR [rax],al
  423627:	add    BYTE PTR [rsi+0x3c],cl
  42362a:	add    al,BYTE PTR [rax]
  42362c:	add    BYTE PTR [rax],al
  42362e:	add    BYTE PTR [rax],al
  423630:	pop    rsp
  423631:	cmp    al,0x2
  423633:	add    BYTE PTR [rax],al
  423635:	add    BYTE PTR [rax],al
  423637:	add    BYTE PTR [rsp+rdi*1+0x2],ch
  42363b:	add    BYTE PTR [rax],al
  42363d:	add    BYTE PTR [rax],al
  42363f:	add    BYTE PTR [rsi+0x3c],dh
  423642:	add    al,BYTE PTR [rax]
  423644:	add    BYTE PTR [rax],al
  423646:	add    BYTE PTR [rax],al
  423648:	(bad)  
  423649:	cmp    al,0x2
  42364b:	add    BYTE PTR [rax],al
  42364d:	add    BYTE PTR [rax],al
  42364f:	add    BYTE PTR [rsi+0x23c],cl
  423655:	add    BYTE PTR [rax],al
  423657:	add    BYTE PTR [rdx+0x23c],bl
  42365d:	add    BYTE PTR [rax],al
  42365f:	add    BYTE PTR [rdx+0x23c],ch
  423665:	add    BYTE PTR [rax],al
  423667:	add    BYTE PTR [rdx+0x23c],dh
  42366d:	add    BYTE PTR [rax],al
  42366f:	add    BYTE PTR [rsi+0x23c],bh
  423675:	add    BYTE PTR [rax],al
  423677:	add    al,cl
  423679:	cmp    al,0x2
  42367b:	add    BYTE PTR [rax],al
  42367d:	add    BYTE PTR [rax],al
  42367f:	add    dh,dl
  423681:	cmp    al,0x2
  423683:	add    BYTE PTR [rax],al
  423685:	add    BYTE PTR [rax],al
  423687:	add    al,ah
  423689:	cmp    al,0x2
  42368b:	add    BYTE PTR [rax],al
  42368d:	add    BYTE PTR [rax],al
  42368f:	add    dl,ch
  423691:	cmp    al,0x2
  423693:	add    BYTE PTR [rax],al
  423695:	add    BYTE PTR [rax],al
  423697:	add    dl,dh
  423699:	cmp    al,0x2
  42369b:	add    BYTE PTR [rax],al
  42369d:	add    BYTE PTR [rax],al
  42369f:	add    dl,bh
  4236a1:	cmp    al,0x2
  4236a3:	add    BYTE PTR [rax],al
  4236a5:	add    BYTE PTR [rax],al
  4236a7:	add    BYTE PTR [rdi*1+0x2],al
  4236ae:	add    BYTE PTR [rax],al
  4236b0:	or     al,0x3d
  4236b2:	add    al,BYTE PTR [rax]
  4236b4:	add    BYTE PTR [rax],al
  4236b6:	add    BYTE PTR [rax],al
  4236b8:	(bad)  
  4236b9:	cmp    eax,0x2
  4236be:	add    BYTE PTR [rax],al
  4236c0:	and    BYTE PTR [rip+0x2],bh        # 0x4236c8
  4236c6:	add    BYTE PTR [rax],al
  4236c8:	sub    bh,BYTE PTR [rip+0x2]        # 0x4236d0
  4236ce:	add    BYTE PTR [rax],al
  4236d0:	xor    bh,BYTE PTR [rip+0x2]        # 0x4236d8
  4236d6:	add    BYTE PTR [rax],al
  4236d8:	cmp    bh,BYTE PTR [rip+0x2]        # 0x4236e0
  4236de:	add    BYTE PTR [rax],al
  4236e0:	rex.R cmp eax,0x2
  4236e6:	add    BYTE PTR [rax],al
  4236e8:	rex.WR cmp rax,0x2
  4236ee:	add    BYTE PTR [rax],al
  4236f0:	push   rsp
  4236f1:	cmp    eax,0x2
  4236f6:	add    BYTE PTR [rax],al
  4236f8:	pop    rsp
  4236f9:	cmp    eax,0x2
  4236fe:	add    BYTE PTR [rax],al
  423700:	fs cmp eax,0x2
  423706:	add    BYTE PTR [rax],al
  423708:	outs   dx,BYTE PTR ds:[rsi]
  423709:	cmp    eax,0x2
  42370e:	add    BYTE PTR [rax],al
  423710:	jp     0x42374f
  423712:	add    al,BYTE PTR [rax]
  423714:	add    BYTE PTR [rax],al
  423716:	add    BYTE PTR [rax],al
  423718:	test   BYTE PTR [rip+0x2],bh        # 0x423720
  42371e:	add    BYTE PTR [rax],al
  423720:	mov    ?,WORD PTR [rip+0x2]        # 0x423728
  423726:	add    BYTE PTR [rax],al
  423728:	cwde   
  423729:	cmp    eax,0x2
  42372e:	add    BYTE PTR [rax],al
  423730:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  423731:	cmp    eax,0x2
  423736:	add    BYTE PTR [rax],al
  423738:	mov    al,0x3d
  42373a:	add    al,BYTE PTR [rax]
  42373c:	add    BYTE PTR [rax],al
  42373e:	add    BYTE PTR [rax],al
  423740:	mov    edx,0x23d
  423745:	add    BYTE PTR [rax],al
  423747:	add    ah,al
  423749:	cmp    eax,0x2
  42374e:	add    BYTE PTR [rax],al
  423750:	(bad)  
  423751:	cmp    eax,0x2
  423756:	add    BYTE PTR [rax],al
  423758:	(bad)  
  423759:	cmp    eax,0x2
  42375e:	add    BYTE PTR [rax],al
  423760:	fidivr WORD PTR [rip+0x2]        # 0x423768
  423766:	add    BYTE PTR [rax],al
  423768:	call   0x4239aa
  42376d:	add    BYTE PTR [rax],al
  42376f:	add    dl,dh
  423771:	cmp    eax,0x2
  423776:	add    BYTE PTR [rax],al
  423778:	cld    
  423779:	cmp    eax,0x2
  42377e:	add    BYTE PTR [rax],al
  423780:	(bad)  
  423781:	add    al,BYTE PTR ds:[rax]
  423784:	add    BYTE PTR [rax],al
  423786:	add    BYTE PTR [rax],al
  423788:	adc    BYTE PTR [rsi],bh
  42378a:	add    al,BYTE PTR [rax]
  42378c:	add    BYTE PTR [rax],al
  42378e:	add    BYTE PTR [rax],al
  423790:	sbb    bh,BYTE PTR [rsi]
  423792:	add    al,BYTE PTR [rax]
  423794:	add    BYTE PTR [rax],al
  423796:	add    BYTE PTR [rax],al
  423798:	es add al,BYTE PTR ds:[rax]
  42379c:	add    BYTE PTR [rax],al
  42379e:	add    BYTE PTR [rax],al
  4237a0:	xor    bh,BYTE PTR [rsi]
  4237a2:	add    al,BYTE PTR [rax]
  4237a4:	add    BYTE PTR [rax],al
  4237a6:	add    BYTE PTR [rax],al
  4237a8:	cmp    al,0x3e
  4237aa:	add    al,BYTE PTR [rax]
  4237ac:	add    BYTE PTR [rax],al
  4237ae:	add    BYTE PTR [rax],al
  4237b0:	rex.RX
  4237b1:	add    al,BYTE PTR ds:[rax]
  4237b4:	add    BYTE PTR [rax],al
  4237b6:	add    BYTE PTR [rax],al
  4237b8:	push   rax
  4237b9:	add    al,BYTE PTR ds:[rax]
  4237bc:	add    BYTE PTR [rax],al
  4237be:	add    BYTE PTR [rax],al
  4237c0:	pop    rdx
  4237c1:	add    al,BYTE PTR ds:[rax]
  4237c4:	add    BYTE PTR [rax],al
  4237c6:	add    BYTE PTR [rax],al
  4237c8:	fs add al,BYTE PTR ds:[rax]
  4237cc:	add    BYTE PTR [rax],al
  4237ce:	add    BYTE PTR [rax],al
  4237d0:	outs   dx,BYTE PTR ds:[rsi]
  4237d1:	add    al,BYTE PTR ds:[rax]
  4237d4:	add    BYTE PTR [rax],al
  4237d6:	add    BYTE PTR [rax],al
  4237d8:	js     0x423818
  4237da:	add    al,BYTE PTR [rax]
  4237dc:	add    BYTE PTR [rax],al
  4237de:	add    BYTE PTR [rax],al
  4237e0:	(bad)  
  4237e1:	add    al,BYTE PTR ds:[rax]
  4237e4:	add    BYTE PTR [rax],al
  4237e6:	add    BYTE PTR [rax],al
  4237e8:	mov    WORD PTR [rsi],?
  4237ea:	add    al,BYTE PTR [rax]
  4237ec:	add    BYTE PTR [rax],al
  4237ee:	add    BYTE PTR [rax],al
  4237f0:	xchg   esi,eax
  4237f1:	add    al,BYTE PTR ds:[rax]
  4237f4:	add    BYTE PTR [rax],al
  4237f6:	add    BYTE PTR [rax],al
  4237f8:	movabs ds:0xac0000000000023e,al
  423801:	add    al,BYTE PTR ds:[rax]
  423804:	add    BYTE PTR [rax],al
  423806:	add    BYTE PTR [rax],al
  423808:	mov    dh,0x3e
  42380a:	add    al,BYTE PTR [rax]
  42380c:	add    BYTE PTR [rax],al
  42380e:	add    BYTE PTR [rax],al
  423810:	sar    BYTE PTR [rsi],0x2
  423813:	add    BYTE PTR [rax],al
  423815:	add    BYTE PTR [rax],al
  423817:	add    dh,cl
  423819:	add    al,BYTE PTR ds:[rax]
  42381c:	add    BYTE PTR [rax],al
  42381e:	add    BYTE PTR [rax],al
  423820:	fdivr  DWORD PTR [rsi]
  423822:	add    al,BYTE PTR [rax]
  423824:	add    BYTE PTR [rax],al
  423826:	add    BYTE PTR [rax],al
  423828:	loop   0x423868
  42382a:	add    al,BYTE PTR [rax]
  42382c:	add    BYTE PTR [rax],al
  42382e:	add    BYTE PTR [rax],al
  423830:	in     al,dx
  423831:	add    al,BYTE PTR ds:[rax]
  423834:	add    BYTE PTR [rax],al
  423836:	add    BYTE PTR [rax],al
  423838:	idiv   BYTE PTR [rsi]
  42383a:	add    al,BYTE PTR [rax]
  42383c:	add    BYTE PTR [rax],al
  42383e:	add    BYTE PTR [rax],al
  423840:	(bad)  
  423841:	add    al,BYTE PTR ds:[rax]
  423844:	add    BYTE PTR [rax],al
  423846:	add    BYTE PTR [rax],al
  423848:	(bad)  
  423849:	(bad)  
  42384a:	add    al,BYTE PTR [rax]
  42384c:	add    BYTE PTR [rax],al
  42384e:	add    BYTE PTR [rax],al
  423850:	adc    BYTE PTR [rdi],bh
  423852:	add    al,BYTE PTR [rax]
  423854:	add    BYTE PTR [rax],al
  423856:	add    BYTE PTR [rax],al
  423858:	sbb    bh,BYTE PTR [rdi]
  42385a:	add    al,BYTE PTR [rax]
	...
  423868:	and    al,0x3f
  42386a:	add    al,BYTE PTR [rax]
  42386c:	add    BYTE PTR [rax],al
  42386e:	add    BYTE PTR [rax],al
  423870:	xor    BYTE PTR [rdi],bh
  423872:	add    al,BYTE PTR [rax]
  423874:	add    BYTE PTR [rax],al
  423876:	add    BYTE PTR [rax],al
  423878:	cmp    al,0x3f
  42387a:	add    al,BYTE PTR [rax]
	...
  423888:	rex.W (bad) 
  42388a:	add    al,BYTE PTR [rax]
	...
  423898:	mov    edi,0x756e6700
  42389d:	je     0x42390b
  42389f:	jae    0x423900
  4238a1:	ins    BYTE PTR es:[edi],dx
  4238a3:	outs   dx,DWORD PTR ds:[rsi]
  4238a4:	(bad)
  4238a9:	outs   dx,BYTE PTR ds:[rsi]
  4238aa:	imul   esi,DWORD PTR [rax+rax*1+0x0],0xdf0000
  4238b2:	outs   dx,BYTE PTR ds:[esi]
  4238b4:	jne    0x42392a
  4238b6:	ins    BYTE PTR es:[rdi],dx
  4238b7:	jae    0x423918
  4238b9:	push   0x655f7865
  4238be:	outs   dx,BYTE PTR ds:[rsi]
  4238bf:	movsxd ebp,DWORD PTR [rdi+0x64]
  4238c2:	add    BYTE PTR gs:[rsi],dh
  4238c5:	add    ah,BYTE PTR [rdi+0x6e]
  4238c8:	jne    0x42393e
  4238ca:	ins    BYTE PTR es:[rdi],dx
  4238cb:	jae    0x42392c
  4238cd:	jb     0x42393d
  4238cf:	add    BYTE PTR fs:[rax],al
  4238d2:	add    BYTE PTR [rax],al
  4238d4:	mov    BYTE PTR [rdx],al
  4238d6:	outs   dx,BYTE PTR ds:[esi]
  4238d8:	jne    0x42394e
  4238da:	ins    BYTE PTR es:[rdi],dx
  4238db:	jae    0x42393c
  4238dd:	jae    0x423953
  4238df:	jb     0x423946
  4238e1:	jb     0x423955
  4238e3:	outs   dx,DWORD PTR ds:[rsi]
  4238e4:	jb     0x4238e6
  4238e6:	add    BYTE PTR [rax],al
  4238e8:	fadd   DWORD PTR [rax]
  4238ea:	rex.R
  4238eb:	gs ins BYTE PTR es:[rdi],dx
  4238ed:	gs je  0x423955
  4238f0:	rex.XB jb 0x42395c
  4238f3:	je     0x42395e
  4238f5:	movsxd esp,DWORD PTR [rcx+0x6c]
  4238f8:	push   rbx
  4238f9:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  4238fe:	outs   dx,BYTE PTR ds:[rsi]
  4238ff:	add    al,bh
  423901:	add    BYTE PTR [rbp+0x6e],al
  423904:	je     0x42396b
  423906:	jb     0x42394b
  423908:	jb     0x423973
  42390a:	je     0x423975
  42390c:	movsxd esp,DWORD PTR [rcx+0x6c]
  42390f:	push   rbx
  423910:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  423915:	outs   dx,BYTE PTR ds:[rsi]
  423916:	add    BYTE PTR [rax],al
  423918:	int    0x1
  42391a:	rex.RXB
  42391b:	gs je  0x423961
  42391e:	jne    0x423992
  423920:	jb     0x423987
  423922:	outs   dx,BYTE PTR ds:[rsi]
  423923:	je     0x423975
  423925:	jb     0x423996
  423927:	movsxd esp,DWORD PTR [rbp+0x73]
  42392a:	jae    0x42392c
  42392c:	(bad)  
  42392d:	add    DWORD PTR [rdi+0x65],eax
  423930:	je     0x423975
  423932:	jne    0x4239a6
  423934:	jb     0x42399b
  423936:	outs   dx,BYTE PTR ds:[rsi]
  423937:	je     0x423989
  423939:	jb     0x4239aa
  42393b:	movsxd esp,DWORD PTR [rbp+0x73]
  42393e:	jae    0x423989
  423940:	fs add dl,dl
  423943:	add    DWORD PTR [rdi+0x65],eax
  423946:	je     0x42398b
  423948:	jne    0x4239bc
  42394a:	jb     0x4239b1
  42394c:	outs   dx,BYTE PTR ds:[rsi]
  42394d:	je     0x4239a3
  42394f:	push   0x64616572
  423954:	rex.WB
  423955:	add    BYTE PTR fs:[rax],al
  423958:	hlt    
  423959:	add    DWORD PTR [rdi+0x65],eax
  42395c:	je     0x4239a4
  42395e:	imul   ebp,DWORD PTR [rbp+riz*2+0x41],0x69727474
  423966:	(bad)  
  423967:	jne    0x4239dd
  423969:	gs jae 0x4239ad
  42396c:	add    BYTE PTR [rax],al
  42396e:	adc    BYTE PTR [rdx],al
  423970:	rex.RXB
  423971:	gs je  0x4239c0
  423974:	(bad)  
  423975:	jae    0x4239eb
  423977:	rex.RB jb 0x4239ec
  42397a:	outs   dx,DWORD PTR ds:[rsi]
  42397b:	jb     0x42397d
  42397d:	add    BYTE PTR [rbx],ah
  42397f:	add    al,BYTE PTR [rdi+0x65]
  423982:	je     0x4239d1
  423984:	outs   dx,DWORD PTR ds:[rsi]
  423985:	fs jne 0x4239f4
  423988:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x57656d61
  423992:	add    BYTE PTR [rax],al
  423994:	(bad)  
  423995:	add    al,BYTE PTR [rdi+0x65]
  423998:	je     0x4239e7
  42399a:	outs   dx,DWORD PTR ds:[rsi]
  42399b:	fs jne 0x423a0a
  42399e:	gs rex.W (bad) 
  4239a1:	outs   dx,BYTE PTR ds:[rsi]
  4239a2:	fs ins BYTE PTR es:[rdi],dx
  4239a4:	gs push rdi
  4239a6:	add    BYTE PTR [rax],al
  4239a8:	push   rsi
  4239a9:	add    al,BYTE PTR [rdi+0x65]
  4239ac:	je     0x4239fe
  4239ae:	jb     0x423a1f
  4239b0:	movsxd eax,DWORD PTR [rcx+0x64]
  4239b3:	fs jb  0x423a1b
  4239b6:	jae    0x423a2b
  4239b8:	add    BYTE PTR [rax],al
  4239ba:	jae    0x4239be
  4239bc:	rex.RXB
  4239bd:	gs je  0x423a13
  4239c0:	je     0x423a23
  4239c2:	jb     0x423a38
  4239c4:	jne    0x423a36
  4239c6:	rex.WB outs dx,BYTE PTR ds:[rsi]
  4239c8:	outs   dx,WORD PTR ds:[rsi]
  4239ca:	add    BYTE PTR [r10+0x74654702],cl
  4239d1:	push   rbx
  4239d2:	jns    0x423a47
  4239d4:	je     0x423a3b
  4239d6:	ins    DWORD PTR es:[rdi],dx
  4239d7:	push   rsp
  4239d8:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
  4239df:	ins    BYTE PTR es:[rdi],dx
  4239e0:	gs push rsp
  4239e2:	imul   ebp,DWORD PTR [rbp+0x65],0x4702a500
  4239e9:	gs je  0x423a40
  4239ec:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
  4239f3:	je     0x4239f5
  4239f5:	add    cl,bh
  4239f7:	add    cl,BYTE PTR [rcx+0x6e]
  4239fa:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
  423a02:	rex.XB jb 0x423a6e
  423a05:	je     0x423a70
  423a07:	movsxd esp,DWORD PTR [rcx+0x6c]
  423a0a:	push   rbx
  423a0b:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  423a10:	outs   dx,BYTE PTR ds:[rsi]
  423a11:	add    BYTE PTR [rax],dl
  423a13:	add    ecx,DWORD PTR [rcx+0x73]
  423a16:	rex.R
  423a17:	rex.X
  423a18:	rex.XB push r11
  423a1a:	rex.WR
  423a1b:	gs (bad) 
  423a1d:	fs rex.X jns 0x423a95
  423a21:	gs rex.RB js 0x423a25
  423a25:	add    BYTE PTR [rbx+0x3],cl
  423a28:	rex.WR
  423a29:	gs (bad) 
  423a2b:	jbe    0x423a92
  423a2d:	rex.XB jb 0x423a99
  423a30:	je     0x423a9b
  423a32:	movsxd esp,DWORD PTR [rcx+0x6c]
  423a35:	push   rbx
  423a36:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  423a3b:	outs   dx,BYTE PTR ds:[rsi]
  423a3c:	add    BYTE PTR [rax],al
  423a3e:	jp     0x423a43
  423a40:	rex.WRB jne 0x423aaf
  423a43:	je     0x423aae
  423a45:	rex.X jns 0x423abc
  423a48:	gs push rsp
  423a4a:	outs   dx,DWORD PTR ds:[rsi]
  423a4b:	push   rdi
  423a4c:	imul   esp,DWORD PTR [rbp+riz*2+0x43],0x726168
  423a54:	mov    ebx,0x65755103
  423a59:	jb     0x423ad4
  423a5b:	push   rax
  423a5c:	gs jb  0x423ac5
  423a5f:	outs   dx,DWORD PTR ds:[rsi]
  423a60:	jb     0x423acf
  423a62:	(bad)  
  423a63:	outs   dx,BYTE PTR ds:[rsi]
  423a64:	movsxd esp,DWORD PTR [rbp+0x43]
  423a67:	outs   dx,DWORD PTR ds:[rsi]
  423a68:	jne    0x423ad8
  423a6a:	je     0x423ad1
  423a6c:	jb     0x423a6e
  423a6e:	add    DWORD PTR [rdx+rdx*2],eax
  423a71:	je     0x423adf
  423a73:	rex.B
  423a74:	fs fs rex.RX jne 0x423ae7
  423a79:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  423a7d:	outs   dx,BYTE PTR ds:[rsi]
  423a7e:	push   rsp
  423a7f:	(bad)  
  423a80:	(bad)  
  423a81:	ins    BYTE PTR es:[rdi],dx
  423a82:	add    BYTE PTR gs:[rdx],al
  423a85:	add    al,0x52
  423a87:	je     0x423af5
  423a89:	rex.XB (bad) 
  423a8b:	jo     0x423b01
  423a8d:	jne    0x423b01
  423a8f:	rex.XB outs dx,DWORD PTR gs:[rsi]
  423a92:	outs   dx,BYTE PTR ds:[rsi]
  423a93:	je     0x423afa
  423a95:	js     0x423b0b
  423a97:	add    BYTE PTR [rcx],cl
  423a99:	add    al,0x52
  423a9b:	je     0x423b09
  423a9d:	rex.WR outs dx,DWORD PTR ds:[rsi]
  423a9f:	outs   dx,DWORD PTR ds:[rsi]
  423aa0:	imul   esi,DWORD PTR [rbp+0x70],0x46
  423aa4:	jne    0x423b14
  423aa6:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  423aaa:	outs   dx,BYTE PTR ds:[rsi]
  423aab:	rex.RB outs dx,BYTE PTR ds:[rsi]
  423aad:	je     0x423b21
  423aaf:	jns    0x423ab1
  423ab1:	add    BYTE PTR [rax],dl
  423ab3:	add    al,0x52
  423ab5:	je     0x423b23
  423ab7:	push   rsi
  423ab8:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
  423abf:	outs   dx,BYTE PTR ds:[rsi]
  423ac0:	ja     0x423b2b
  423ac2:	outs   dx,BYTE PTR ds:[rsi]
  423ac3:	add    BYTE PTR fs:[rax],al
  423ac6:	lahf   
  423ac7:	add    al,0x53
  423ac9:	gs je  0x423b21
  423acc:	outs   dx,BYTE PTR ds:[rsi]
  423acd:	push   0x6c646e61
  423ad2:	gs fs rex.RB js 0x423b3a
  423ad7:	gs jo  0x423b4e
  423ada:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  423ae1:	gs jb  0x423ae4
  423ae4:	lods   al,BYTE PTR ds:[rsi]
  423ae5:	add    al,0x53
  423ae7:	ins    BYTE PTR es:[rdi],dx
  423ae8:	gs gs jo 0x423aec
  423aec:	mov    edx,0x72655404
  423af1:	ins    DWORD PTR es:[rdi],dx
  423af2:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
  423af9:	outs   dx,DWORD PTR ds:[rsi]
  423afa:	movsxd esp,DWORD PTR [rbp+0x73]
  423afd:	jae    0x423aff
  423aff:	add    cl,al
  423b01:	add    al,0x54
  423b03:	ins    BYTE PTR es:[rdi],dx
  423b04:	jae    0x423b4d
  423b06:	gs je  0x423b5f
  423b09:	(bad)  
  423b0a:	ins    BYTE PTR es:[rdi],dx
  423b0b:	jne    0x423b72
  423b0d:	add    dh,cl
  423b0f:	add    al,0x55
  423b11:	outs   dx,BYTE PTR ds:[rsi]
  423b12:	push   0x6c646e61
  423b17:	gs fs rex.RB js 0x423b7f
  423b1c:	gs jo  0x423b93
  423b1f:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  423b26:	gs jb  0x423b29
  423b29:	add    ah,ch
  423b2b:	add    al,0x56
  423b2d:	imul   esi,DWORD PTR [rdx+0x74],0x506c6175
  423b34:	jb     0x423ba5
  423b36:	je     0x423b9d
  423b38:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  423b3c:	out    dx,al
  423b3d:	add    al,0x56
  423b3f:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  423b46:	jne    0x423bad
  423b48:	jb     0x423bc3
  423b4a:	add    BYTE PTR [rax],al
  423b4c:	(bad)  
  423b4d:	add    eax,0x65646957
  423b52:	rex.XB push 0x6f547261
  423b58:	rex.WRB jne 0x423bc7
  423b5b:	je     0x423bc6
  423b5d:	rex.X jns 0x423bd4
  423b60:	add    BYTE PTR gs:[rdi],dh
  423b63:	add    BYTE PTR [rdi+0x5f],bl
  423b66:	rex.XB pop r15
  423b68:	jae    0x423bda
  423b6a:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  423b6e:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
  423b75:	ins    BYTE PTR es:[rdi],dx
  423b76:	gs jb  0x423b79
  423b79:	add    BYTE PTR [rdi],bh
  423b7b:	add    BYTE PTR [rdi+0x5f],bl
  423b7e:	pop    rdi
  423b7f:	ins    BYTE PTR es:[rdi],dx
  423b80:	movsxd ebx,DWORD PTR [rdi+0x63]
  423b83:	outs   dx,DWORD PTR ds:[rsi]
  423b84:	fs gs jo 0x423be9
  423b88:	addr32 gs pop rdi
  423b8b:	data16 jne 0x423bfc
  423b8e:	movsxd eax,DWORD PTR [rax]
  423b90:	rex.WRX add BYTE PTR [rdi+0x5f],r11b
  423b94:	fs ins BYTE PTR es:[rdi],dx
  423b96:	ins    BYTE PTR es:[rdi],dx
  423b97:	outs   dx,DWORD PTR ds:[rsi]
  423b98:	outs   dx,BYTE PTR ds:[rsi]
  423b99:	gs js  0x423c05
  423b9c:	je     0x423b9e
  423b9e:	push   rcx
  423b9f:	add    BYTE PTR [rdi+0x5f],bl
  423ba2:	addr32 gs je 0x423c13
  423ba6:	(bad)  
  423ba7:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
  423bae:	push   rdx
  423baf:	add    BYTE PTR [rdi+0x5f],bl
  423bb2:	imul   ebp,DWORD PTR [rsi+0x69],0x766e6574
  423bb9:	add    BYTE PTR [rbx+0x0],dl
  423bbc:	pop    rdi
  423bbd:	pop    rdi
  423bbe:	imul   ebp,DWORD PTR [rdi+0x62],0x6e75665f
  423bc5:	movsxd eax,DWORD PTR [rax]
  423bc7:	add    BYTE PTR [rdx+0x0],bl
  423bca:	pop    rdi
  423bcb:	pop    rdi
  423bcc:	ins    BYTE PTR es:[rdi],dx
  423bcd:	movsxd ebp,DWORD PTR [rdi+0x6e]
  423bd0:	jbe    0x423c31
  423bd2:	imul   ebp,DWORD PTR [rsi+0x69],0x5b000074
  423bd9:	add    BYTE PTR [rdi+0x5f],bl
  423bdc:	ins    DWORD PTR es:[rdi],dx
  423bdd:	(bad)  
  423bde:	pop    rdi
  423bdf:	movsxd esi,DWORD PTR [rbp+0x72]
  423be2:	pop    rdi
  423be3:	ins    DWORD PTR es:[rdi],dx
  423be4:	(bad)  
  423be5:	js     0x423be7
  423be7:	add    BYTE PTR [rax+0x0],ah
  423bea:	pop    rdi
  423beb:	pop    rdi
  423bec:	jae    0x423c53
  423bee:	je     0x423c4f
  423bf0:	(bad)  
  423bf1:	jo     0x423c63
  423bf3:	pop    rdi
  423bf4:	je     0x423c6f
  423bf6:	jo     0x423c5d
  423bf8:	add    BYTE PTR [rax],al
  423bfa:	(bad)  
  423bfb:	add    BYTE PTR [rdi+0x5f],bl
  423bfe:	jae    0x423c65
  423c00:	je     0x423c77
  423c02:	jae    0x423c69
  423c04:	jb     0x423c73
  423c06:	(bad)  
  423c07:	je     0x423c71
  423c09:	gs jb  0x423c7e
  423c0c:	add    BYTE PTR [rax],al
  423c0e:	jno    0x423c10
  423c10:	pop    rdi
  423c11:	(bad)  
  423c12:	movsxd ebp,DWORD PTR [rbp+0x64]
  423c15:	ins    BYTE PTR es:[rdi],dx
  423c16:	outs   dx,BYTE PTR ds:[rsi]
  423c17:	add    BYTE PTR [rax+0x0],bh
  423c1a:	pop    rdi
  423c1b:	(bad)  
  423c1c:	ins    DWORD PTR es:[rdi],dx
  423c1d:	jae    0x423c86
  423c1f:	pop    rdi
  423c20:	gs js  0x423c8c
  423c23:	je     0x423c25
  423c25:	add    BYTE PTR [rdx+0x65635f00],cl
  423c2b:	js     0x423c96
  423c2d:	je     0x423c2f
  423c2f:	add    BYTE PTR [rsi+0x74635f00],ah
  423c35:	imul   ebp,DWORD PTR [rbp+0x65],0x3436
  423c3c:	mov    edx,0x72655f00
  423c41:	jb     0x423cb1
  423c43:	outs   dx,DWORD PTR ds:[rsi]
  423c44:	add    BYTE PTR [rax],al
  423c46:	ret    
  423c47:	add    BYTE PTR [rdi+0x65],bl
  423c4a:	js     0x423cb5
  423c4c:	je     0x423c4e
  423c4e:	rol    BYTE PTR [rax],1
  423c50:	pop    rdi
  423c51:	imul   bp,WORD PTR [rsi+0x64],0x6c63
  423c57:	outs   dx,DWORD PTR ds:[rsi]
  423c58:	jae    0x423cbf
  423c5a:	add    BYTE PTR [rax],al
  423c5c:	rol    BYTE PTR [rax],cl
  423c5e:	pop    rdi
  423c5f:	imul   bp,WORD PTR [rsi+0x64],0x6966
  423c65:	jb     0x423cda
  423c67:	je     0x423c9f
  423c69:	xor    al,0x0
  423c6b:	add    dl,bl
  423c6d:	add    BYTE PTR [rdi+0x66],bl
  423c70:	ins    DWORD PTR es:[rdi],dx
  423c71:	outs   dx,DWORD PTR ds:[rsi]
  423c72:	fs add BYTE PTR gs:[rax],al
  423c76:	call   0x73a89b7b
  423c7b:	je     0x423cde
  423c7d:	je     0x423cb5
  423c7f:	xor    al,0x0
  423c81:	add    dh,ch
  423c83:	add    BYTE PTR [rdi+0x66],bl
  423c86:	jne    0x423cf4
  423c88:	ins    BYTE PTR es:[rdi],dx
  423c89:	jo     0x423cec
  423c8b:	je     0x423cf5
  423c8d:	add    BYTE PTR [rdx],bl
  423c8f:	add    DWORD PTR [rdi+0x69],ebx
  423c92:	outs   dx,BYTE PTR ds:[rsi]
  423c93:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x7f006d72
  423c9b:	add    DWORD PTR [rdi+0x6c],ebx
  423c9e:	outs   dx,DWORD PTR ds:[rsi]
  423c9f:	movsxd esp,DWORD PTR [rcx+0x6c]
  423ca2:	je     0x423d0d
  423ca4:	ins    DWORD PTR es:[rdi],dx
  423ca5:	gs ss xor al,0x0
  423ca9:	add    BYTE PTR [rax+0x6f6c5f01],al
  423caf:	movsxd ebp,DWORD PTR [rbx+0x0]
  423cb2:	mov    DWORD PTR [rcx],eax
  423cb4:	pop    rdi
  423cb5:	ins    BYTE PTR es:[rdi],dx
  423cb6:	jae    0x423d1d
  423cb8:	imul   ebp,DWORD PTR gs:[rcx+0x36],0x34
  423cbd:	add    BYTE PTR [rip+0x6e6f5f02],ah        # 0x6eb19bc5
  423cc3:	gs js  0x423d2f
  423cc6:	je     0x423cc8
  423cc8:	movsxd eax,DWORD PTR [rdx]
  423cca:	pop    rdi
  423ccb:	jae    0x423d3b
  423ccd:	ja     0x423d3f
  423ccf:	jb     0x423d3a
  423cd1:	outs   dx,BYTE PTR ds:[rsi]
  423cd2:	je     0x423d3a
  423cd4:	add    BYTE PTR [rax],al
  423cd6:	scas   eax,DWORD PTR es:[rdi]
  423cd7:	add    bl,BYTE PTR [rdi+0x74]
  423cda:	imul   ebp,DWORD PTR [rbp+0x65],0xc4003436
  423ce1:	add    bl,BYTE PTR [rdi+0x75]
  423ce4:	outs   dx,BYTE PTR ds:[rsi]
  423ce5:	ins    BYTE PTR es:[rdi],dx
  423ce6:	outs   dx,DWORD PTR ds:[rsi]
  423ce7:	movsxd ebp,DWORD PTR [rbx+0x0]
  423cea:	jg     0x423cef
  423cec:	(bad)  
  423ced:	(bad)  
  423cee:	outs   dx,DWORD PTR ds:[rsi]
  423cef:	jb     0x423d65
  423cf1:	add    BYTE PTR [rbx+rax*1+0x696f7461],cl
  423cf8:	add    BYTE PTR [rax],al
  423cfa:	nop
  423cfb:	add    esp,DWORD PTR [rbx+0x61]
  423cfe:	ins    BYTE PTR es:[rdi],dx
  423cff:	ins    BYTE PTR es:[rdi],dx
  423d00:	outs   dx,DWORD PTR ds:[rsi]
  423d01:	movsxd eax,DWORD PTR [rax]
  423d03:	add    BYTE PTR [rbp+0x69786503],bl
  423d09:	je     0x423d0b
  423d0b:	add    BYTE PTR [rcx+0x6c636603],ah
  423d11:	outs   dx,DWORD PTR ds:[rsi]
  423d12:	jae    0x423d79
  423d14:	add    BYTE PTR [rax],al
  423d16:	movabs ds:0x726f7272656603,eax
  423d1f:	add    BYTE PTR [rbx+rax*1+0x756c6666],ah
  423d26:	jae    0x423d90
  423d28:	add    BYTE PTR [rax],al
  423d2a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  423d2b:	add    esp,DWORD PTR [rsi+0x67]
  423d2e:	gs je  0x423da4
  423d31:	add    BYTE PTR [rsi+0x706f6603],ch
  423d37:	outs   dx,BYTE PTR gs:[rsi]
  423d39:	add    BYTE PTR [rax+0x72706603],dh
  423d3f:	imul   ebp,DWORD PTR [rsi+0x74],0x3b20066
  423d46:	data16 jo 0x423dbe
  423d49:	je     0x423dae
  423d4b:	add    BYTE PTR [rbx+0x75706603],dh
  423d51:	je     0x423dc6
  423d53:	add    BYTE PTR [rsi+0x65726603],dh
  423d59:	(bad)  
  423d5a:	add    BYTE PTR fs:[rdi+0x65726603],dh
  423d61:	add    BYTE PTR gs:[rax],al
  423d64:	mov    eax,0x65726603
  423d69:	outs   dx,DWORD PTR ds:[rsi]
  423d6a:	jo     0x423dd1
  423d6c:	outs   dx,BYTE PTR ds:[rsi]
  423d6d:	add    al,al
  423d6f:	add    esp,DWORD PTR [rsi+0x77]
  423d72:	jo     0x423de6
  423d74:	imul   ebp,DWORD PTR [rsi+0x74],0xc2000066
  423d7b:	add    esp,DWORD PTR [rsi+0x77]
  423d7e:	jb     0x423de9
  423d80:	je     0x423de7
  423d82:	add    BYTE PTR [rax],al
  423d84:	mov    DWORD PTR [rbx],0x65746567
  423d8a:	outs   dx,BYTE PTR ds:[rsi]
  423d8b:	jbe    0x423d8d
  423d8d:	add    bh,dl
  423d8f:	add    ebp,DWORD PTR [rcx+0x73]
  423d92:	jae    0x423e04
  423d94:	(bad)  
  423d95:	movsxd esp,DWORD PTR [rbp+0x0]
  423d98:	(bad)  
  423d99:	add    ebp,DWORD PTR [rdi+rbp*2+0x63]
  423d9d:	(bad)  
  423d9e:	ins    BYTE PTR es:[rdi],dx
  423d9f:	movsxd ebp,DWORD PTR gs:[rdi+0x6e]
  423da3:	jbe    0x423da5
  423da5:	add    al,dh
  423da7:	add    ebp,DWORD PTR [rbp+0x61]
  423daa:	ins    BYTE PTR es:[rdi],dx
  423dab:	ins    BYTE PTR es:[rdi],dx
  423dac:	outs   dx,DWORD PTR ds:[rsi]
  423dad:	movsxd eax,DWORD PTR [rax]
  423daf:	add    al,bh
  423db1:	add    ebp,DWORD PTR [rbp+0x65]
  423db4:	ins    DWORD PTR es:[rdi],dx
  423db5:	movsxd esi,DWORD PTR [rax+0x79]
  423db8:	add    BYTE PTR [rax],al
  423dba:	stc    
  423dbb:	add    ebp,DWORD PTR [rbp+0x65]
  423dbe:	ins    DWORD PTR es:[rdi],dx
  423dbf:	ins    DWORD PTR es:[rdi],dx
  423dc0:	outs   dx,DWORD PTR ds:[rsi]
  423dc1:	jbe    0x423e28
  423dc3:	add    dl,bh
  423dc5:	add    ebp,DWORD PTR [rbp+0x65]
  423dc8:	ins    DWORD PTR es:[rdi],dx
  423dc9:	jae    0x423e30
  423dcb:	je     0x423dcd
  423dcd:	add    BYTE PTR [rbx],al
  423dcf:	add    al,0x70
  423dd1:	jne    0x423e47
  423dd3:	movsxd eax,DWORD PTR [rax]
  423dd5:	add    BYTE PTR [rdx],cl
  423dd7:	add    al,0x72
  423dd9:	(bad)  
  423dda:	imul   esi,DWORD PTR [rbx+0x65],0x72040c00
  423de1:	gs (bad) 
  423de3:	ins    BYTE PTR es:[rdi],dx
  423de4:	ins    BYTE PTR es:[rdi],dx
  423de5:	outs   dx,DWORD PTR ds:[rsi]
  423de6:	movsxd eax,DWORD PTR [rax]
  423de8:	or     eax,0x6d657204
  423ded:	outs   dx,DWORD PTR ds:[rsi]
  423dee:	jbe    0x423e55
  423df0:	add    BYTE PTR [rax],al
  423df2:	(bad)  
  423df3:	add    al,0x73
  423df5:	imul   esp,DWORD PTR [rdi+0x6e],0x6c61
  423dfc:	and    eax,DWORD PTR [rbx+rsi*2]
  423dff:	je     0x423e73
  423e01:	movsxd ebp,DWORD PTR [rax+0x72]
  423e04:	add    BYTE PTR [rax],al
  423e06:	and    al,0x4
  423e08:	jae    0x423e7e
  423e0a:	jb     0x423e6f
  423e0c:	ins    DWORD PTR es:[rdi],dx
  423e0d:	jo     0x423e0f
  423e0f:	add    BYTE PTR [rsi],ah
  423e11:	add    al,0x73
  423e13:	je     0x423e87
  423e15:	movsxd esi,DWORD PTR [rax+0x79]
  423e18:	add    BYTE PTR [rax],al
  423e1a:	sub    DWORD PTR [rbx+rsi*2],eax
  423e1d:	je     0x423e91
  423e1f:	gs jb  0x423e94
  423e22:	outs   dx,DWORD PTR ds:[rsi]
  423e23:	jb     0x423e25
  423e25:	add    BYTE PTR [rdx],ch
  423e27:	add    al,0x73
  423e29:	je     0x423e9d
  423e2b:	data16 je 0x423e97
  423e2e:	ins    DWORD PTR es:[rdi],dx
  423e2f:	add    BYTE PTR gs:[rax],al
  423e32:	sub    eax,DWORD PTR [rbx+rsi*2]
  423e35:	je     0x423ea9
  423e37:	ins    BYTE PTR es:[rdi],dx
  423e38:	outs   dx,BYTE PTR gs:[rsi]
  423e3a:	add    BYTE PTR [rax],al
  423e3c:	cs add al,0x73
  423e3f:	je     0x423eb3
  423e41:	outs   dx,BYTE PTR ds:[rsi]
  423e42:	movsxd ebp,DWORD PTR [rbp+0x70]
  423e45:	add    BYTE PTR [rdi],ch
  423e47:	add    al,0x73
  423e49:	je     0x423ebd
  423e4b:	outs   dx,BYTE PTR ds:[rsi]
  423e4c:	movsxd esi,DWORD PTR [rax+0x79]
  423e4f:	add    BYTE PTR [rcx],dh
  423e51:	add    al,0x73
  423e53:	je     0x423ec7
  423e55:	jo     0x423eb9
  423e57:	jb     0x423ec4
  423e59:	add    BYTE PTR [rdx],dh
  423e5b:	add    al,0x73
  423e5d:	je     0x423ed1
  423e5f:	jb     0x423ec4
  423e61:	push   0x4340072
  423e66:	jae    0x423edc
  423e68:	jb     0x423edd
  423e6a:	je     0x423ede
  423e6c:	add    BYTE PTR [rax],al
  423e6e:	cmp    BYTE PTR [rbx+rsi*2],al
  423e71:	je     0x423ee5
  423e73:	je     0x423ee4
  423e75:	ins    BYTE PTR es:[rdi],dx
  423e76:	add    BYTE PTR [rax],al
  423e78:	cmp    DWORD PTR [rbx+rsi*2],eax
  423e7b:	je     0x423eef
  423e7d:	je     0x423eee
  423e7f:	jne    0x423eed
  423e81:	add    BYTE PTR [rax+0x4],cl
  423e84:	je     0x423ef5
  423e86:	ins    BYTE PTR es:[rdi],dx
  423e87:	outs   dx,DWORD PTR ds:[rsi]
  423e88:	ja     0x423eef
  423e8a:	jb     0x423e8c
  423e8c:	rex.WB add al,0x74
  423e8f:	outs   dx,DWORD PTR ds:[rsi]
  423e90:	jne    0x423f02
  423e92:	jo     0x423ef9
  423e94:	jb     0x423e96
  423e96:	rex.WRX add al,0x76
  423e99:	data16 jo 0x423f0e
  423e9c:	imul   ebp,DWORD PTR [rsi+0x74],0x5d000066
  423ea3:	add    al,0x77
  423ea5:	movsxd esi,DWORD PTR [rbx+0x63]
  423ea8:	jo     0x423f23
  423eaa:	add    BYTE PTR [rax],al
  423eac:	(bad)  
  423ead:	add    al,0x77
  423eaf:	movsxd esi,DWORD PTR [rbx+0x6c]
  423eb2:	outs   dx,BYTE PTR gs:[rsi]
  423eb4:	add    BYTE PTR [rax],al
  423eb6:	mov    DWORD PTR [rdi+rbx*2],eax
  423eb9:	jae    0x423f2f
  423ebb:	(bad)  
  423ebc:	je     0x423ef4
  423ebe:	xor    al,0x0
  423ec0:	pop    QWORD PTR [rdi+rbx*2]
  423ec3:	imul   bp,WORD PTR [rsi+0x64],0x656e
  423ec9:	js     0x423f3f
  423ecb:	ss xor al,0x0
  423ece:	movabs ds:0x65746972775f04,eax
  423ed7:	add    BYTE PTR [rdi+0x6e755f04],ch
  423edd:	ins    BYTE PTR es:[rdi],dx
  423ede:	imul   ebp,DWORD PTR [rsi+0x6b],0x5f04b100
  423ee5:	jne    0x423f54
  423ee7:	(bad)  
  423ee8:	jae    0x423f55
  423eea:	add    BYTE PTR [rax],al
  423eec:	mov    esi,0x74735f04
  423ef1:	jb     0x423f57
  423ef3:	jne    0x423f65
  423ef5:	add    ch,cl
  423ef7:	add    al,0x5f
  423ef9:	jb     0x423f60
  423efb:	(bad)  
  423efc:	fs add bl,dl
  423eff:	add    al,0x5f
  423f01:	outs   dx,DWORD PTR ds:[rsi]
  423f02:	jo     0x423f69
  423f04:	outs   dx,BYTE PTR ds:[rsi]
  423f05:	add    al,ch
  423f07:	add    al,0x5f
  423f09:	imul   bp,WORD PTR [rbp+riz*2+0x6e],0x6f
  423f10:	cld    
  423f11:	add    al,0x5f
  423f13:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
  423f17:	add    BYTE PTR gs:[rax],al
  423f1a:	add    BYTE PTR [rip+0x6363615f],al        # 0x63a5a07f
  423f20:	gs jae 0x423f96
  423f23:	add    BYTE PTR [rax],al
  423f25:	add    BYTE PTR [rdx+0x65],dh
  423f28:	movsxd ebp,DWORD PTR [edi+0x6d]
  423f2c:	jo     0x423f2e
  423f2e:	add    BYTE PTR [rax],al
  423f30:	add    al,BYTE PTR [rax]
  423f32:	jb     0x423f99
  423f34:	addr32 gs js 0x423f9d
  423f38:	movsxd eax,DWORD PTR [rax]
  423f3a:	add    BYTE PTR [rax],al
  423f3c:	add    eax,DWORD PTR [rax]
  423f3e:	jb     0x423fa5
  423f40:	addr32 data16 jb 0x423fa9
  423f44:	add    BYTE PTR gs:[rax],al
  423f47:	add    al,dh
  423f49:	add    DWORD PTR [rbp+0x65],ecx
  423f4c:	jae    0x423fc1
  423f4e:	(bad)  
  423f4f:	rex.X outs dx,DWORD PTR gs:[esi]
  423f53:	js     0x423fac
  423f55:	add    BYTE PTR [rax],al
  423f57:	add    BYTE PTR [rax],al
  423f59:	xor    BYTE PTR [rdx],al
  423f5b:	add    BYTE PTR [rax],al
  423f5d:	xor    BYTE PTR [rdx],al
  423f5f:	add    BYTE PTR [rax],al
  423f61:	xor    BYTE PTR [rdx],al
  423f63:	add    BYTE PTR [rax],al
  423f65:	xor    BYTE PTR [rdx],al
  423f67:	add    BYTE PTR [rcx+rbp*2+0x62],ch
  423f6b:	outs   dx,BYTE PTR ds:[esi]
  423f6d:	jne    0x423fe3
  423f6f:	ins    BYTE PTR es:[rdi],dx
  423f70:	jae    0x423f9f
  423f72:	xor    esi,DWORD PTR [rax]
  423f74:	cs fs ins BYTE PTR es:[rdi],dx
  423f77:	ins    BYTE PTR es:[rdi],dx
  423f78:	add    BYTE PTR [rax],al
  423f7a:	add    BYTE PTR [rax],al
  423f7c:	adc    al,0x30
  423f7e:	add    al,BYTE PTR [rax]
  423f80:	adc    al,0x30
  423f82:	add    al,BYTE PTR [rax]
  423f84:	adc    al,0x30
  423f86:	add    al,BYTE PTR [rax]
  423f88:	adc    al,0x30
  423f8a:	add    al,BYTE PTR [rax]
  423f8c:	adc    al,0x30
  423f8e:	add    al,BYTE PTR [rax]
  423f90:	adc    al,0x30
  423f92:	add    al,BYTE PTR [rax]
  423f94:	adc    al,0x30
  423f96:	add    al,BYTE PTR [rax]
  423f98:	adc    al,0x30
  423f9a:	add    al,BYTE PTR [rax]
  423f9c:	adc    al,0x30
  423f9e:	add    al,BYTE PTR [rax]
  423fa0:	adc    al,0x30
  423fa2:	add    al,BYTE PTR [rax]
  423fa4:	adc    al,0x30
  423fa6:	add    al,BYTE PTR [rax]
  423fa8:	adc    al,0x30
  423faa:	add    al,BYTE PTR [rax]
  423fac:	adc    al,0x30
  423fae:	add    al,BYTE PTR [rax]
  423fb0:	adc    al,0x30
  423fb2:	add    al,BYTE PTR [rax]
  423fb4:	adc    al,0x30
  423fb6:	add    al,BYTE PTR [rax]
  423fb8:	adc    al,0x30
  423fba:	add    al,BYTE PTR [rax]
  423fbc:	adc    al,0x30
  423fbe:	add    al,BYTE PTR [rax]
  423fc0:	adc    al,0x30
  423fc2:	add    al,BYTE PTR [rax]
  423fc4:	adc    al,0x30
  423fc6:	add    al,BYTE PTR [rax]
  423fc8:	adc    al,0x30
  423fca:	add    al,BYTE PTR [rax]
  423fcc:	adc    al,0x30
  423fce:	add    al,BYTE PTR [rax]
  423fd0:	adc    al,0x30
  423fd2:	add    al,BYTE PTR [rax]
  423fd4:	adc    al,0x30
  423fd6:	add    al,BYTE PTR [rax]
  423fd8:	adc    al,0x30
  423fda:	add    al,BYTE PTR [rax]
  423fdc:	adc    al,0x30
  423fde:	add    al,BYTE PTR [rax]
  423fe0:	adc    al,0x30
  423fe2:	add    al,BYTE PTR [rax]
  423fe4:	adc    al,0x30
  423fe6:	add    al,BYTE PTR [rax]
  423fe8:	adc    al,0x30
  423fea:	add    al,BYTE PTR [rax]
  423fec:	adc    al,0x30
  423fee:	add    al,BYTE PTR [rax]
  423ff0:	adc    al,0x30
  423ff2:	add    al,BYTE PTR [rax]
  423ff4:	rex.WXB
  423ff5:	rex.RB push r10
  423ff7:	rex.WRX
  423ff8:	rex.RB
  423ff9:	xor    r14,QWORD PTR [rdx]
  423ffc:	cs fs ins BYTE PTR es:[rdi],dx
  423fff:	ins    BYTE PTR es:[rdi],dx
  424000:	add    BYTE PTR [rax],al
  424002:	add    BYTE PTR [rax],al
  424004:	sub    BYTE PTR [rax],dh
  424006:	add    al,BYTE PTR [rax]
  424008:	sub    BYTE PTR [rax],dh
  42400a:	add    al,BYTE PTR [rax]
  42400c:	sub    BYTE PTR [rax],dh
  42400e:	add    al,BYTE PTR [rax]
  424010:	sub    BYTE PTR [rax],dh
  424012:	add    al,BYTE PTR [rax]
  424014:	sub    BYTE PTR [rax],dh
  424016:	add    al,BYTE PTR [rax]
  424018:	sub    BYTE PTR [rax],dh
  42401a:	add    al,BYTE PTR [rax]
  42401c:	sub    BYTE PTR [rax],dh
  42401e:	add    al,BYTE PTR [rax]
  424020:	sub    BYTE PTR [rax],dh
  424022:	add    al,BYTE PTR [rax]
  424024:	sub    BYTE PTR [rax],dh
  424026:	add    al,BYTE PTR [rax]
  424028:	sub    BYTE PTR [rax],dh
  42402a:	add    al,BYTE PTR [rax]
  42402c:	sub    BYTE PTR [rax],dh
  42402e:	add    al,BYTE PTR [rax]
  424030:	sub    BYTE PTR [rax],dh
  424032:	add    al,BYTE PTR [rax]
  424034:	sub    BYTE PTR [rax],dh
  424036:	add    al,BYTE PTR [rax]
  424038:	sub    BYTE PTR [rax],dh
  42403a:	add    al,BYTE PTR [rax]
  42403c:	sub    BYTE PTR [rax],dh
  42403e:	add    al,BYTE PTR [rax]
  424040:	sub    BYTE PTR [rax],dh
  424042:	add    al,BYTE PTR [rax]
  424044:	sub    BYTE PTR [rax],dh
  424046:	add    al,BYTE PTR [rax]
  424048:	sub    BYTE PTR [rax],dh
  42404a:	add    al,BYTE PTR [rax]
  42404c:	sub    BYTE PTR [rax],dh
  42404e:	add    al,BYTE PTR [rax]
  424050:	sub    BYTE PTR [rax],dh
  424052:	add    al,BYTE PTR [rax]
  424054:	sub    BYTE PTR [rax],dh
  424056:	add    al,BYTE PTR [rax]
  424058:	sub    BYTE PTR [rax],dh
  42405a:	add    al,BYTE PTR [rax]
  42405c:	sub    BYTE PTR [rax],dh
  42405e:	add    al,BYTE PTR [rax]
  424060:	sub    BYTE PTR [rax],dh
  424062:	add    al,BYTE PTR [rax]
  424064:	sub    BYTE PTR [rax],dh
  424066:	add    al,BYTE PTR [rax]
  424068:	sub    BYTE PTR [rax],dh
  42406a:	add    al,BYTE PTR [rax]
  42406c:	sub    BYTE PTR [rax],dh
  42406e:	add    al,BYTE PTR [rax]
  424070:	sub    BYTE PTR [rax],dh
  424072:	add    al,BYTE PTR [rax]
  424074:	sub    BYTE PTR [rax],dh
  424076:	add    al,BYTE PTR [rax]
  424078:	sub    BYTE PTR [rax],dh
  42407a:	add    al,BYTE PTR [rax]
  42407c:	sub    BYTE PTR [rax],dh
  42407e:	add    al,BYTE PTR [rax]
  424080:	sub    BYTE PTR [rax],dh
  424082:	add    al,BYTE PTR [rax]
  424084:	sub    BYTE PTR [rax],dh
  424086:	add    al,BYTE PTR [rax]
  424088:	sub    BYTE PTR [rax],dh
  42408a:	add    al,BYTE PTR [rax]
  42408c:	sub    BYTE PTR [rax],dh
  42408e:	add    al,BYTE PTR [rax]
  424090:	sub    BYTE PTR [rax],dh
  424092:	add    al,BYTE PTR [rax]
  424094:	sub    BYTE PTR [rax],dh
  424096:	add    al,BYTE PTR [rax]
  424098:	sub    BYTE PTR [rax],dh
  42409a:	add    al,BYTE PTR [rax]
  42409c:	sub    BYTE PTR [rax],dh
  42409e:	add    al,BYTE PTR [rax]
  4240a0:	sub    BYTE PTR [rax],dh
  4240a2:	add    al,BYTE PTR [rax]
  4240a4:	sub    BYTE PTR [rax],dh
  4240a6:	add    al,BYTE PTR [rax]
  4240a8:	sub    BYTE PTR [rax],dh
  4240aa:	add    al,BYTE PTR [rax]
  4240ac:	sub    BYTE PTR [rax],dh
  4240ae:	add    al,BYTE PTR [rax]
  4240b0:	sub    BYTE PTR [rax],dh
  4240b2:	add    al,BYTE PTR [rax]
  4240b4:	sub    BYTE PTR [rax],dh
  4240b6:	add    al,BYTE PTR [rax]
  4240b8:	sub    BYTE PTR [rax],dh
  4240ba:	add    al,BYTE PTR [rax]
  4240bc:	sub    BYTE PTR [rax],dh
  4240be:	add    al,BYTE PTR [rax]
  4240c0:	sub    BYTE PTR [rax],dh
  4240c2:	add    al,BYTE PTR [rax]
  4240c4:	sub    BYTE PTR [rax],dh
  4240c6:	add    al,BYTE PTR [rax]
  4240c8:	sub    BYTE PTR [rax],dh
  4240ca:	add    al,BYTE PTR [rax]
  4240cc:	sub    BYTE PTR [rax],dh
  4240ce:	add    al,BYTE PTR [rax]
  4240d0:	sub    BYTE PTR [rax],dh
  4240d2:	add    al,BYTE PTR [rax]
  4240d4:	sub    BYTE PTR [rax],dh
  4240d6:	add    al,BYTE PTR [rax]
  4240d8:	sub    BYTE PTR [rax],dh
  4240da:	add    al,BYTE PTR [rax]
  4240dc:	sub    BYTE PTR [rax],dh
  4240de:	add    al,BYTE PTR [rax]
  4240e0:	sub    BYTE PTR [rax],dh
  4240e2:	add    al,BYTE PTR [rax]
  4240e4:	sub    BYTE PTR [rax],dh
  4240e6:	add    al,BYTE PTR [rax]
  4240e8:	sub    BYTE PTR [rax],dh
  4240ea:	add    al,BYTE PTR [rax]
  4240ec:	sub    BYTE PTR [rax],dh
  4240ee:	add    al,BYTE PTR [rax]
  4240f0:	sub    BYTE PTR [rax],dh
  4240f2:	add    al,BYTE PTR [rax]
  4240f4:	sub    BYTE PTR [rax],dh
  4240f6:	add    al,BYTE PTR [rax]
  4240f8:	sub    BYTE PTR [rax],dh
  4240fa:	add    al,BYTE PTR [rax]
  4240fc:	sub    BYTE PTR [rax],dh
  4240fe:	add    al,BYTE PTR [rax]
  424100:	sub    BYTE PTR [rax],dh
  424102:	add    al,BYTE PTR [rax]
  424104:	sub    BYTE PTR [rax],dh
  424106:	add    al,BYTE PTR [rax]
  424108:	sub    BYTE PTR [rax],dh
  42410a:	add    al,BYTE PTR [rax]
  42410c:	sub    BYTE PTR [rax],dh
  42410e:	add    al,BYTE PTR [rax]
  424110:	sub    BYTE PTR [rax],dh
  424112:	add    al,BYTE PTR [rax]
  424114:	sub    BYTE PTR [rax],dh
  424116:	add    al,BYTE PTR [rax]
  424118:	sub    BYTE PTR [rax],dh
  42411a:	add    al,BYTE PTR [rax]
  42411c:	sub    BYTE PTR [rax],dh
  42411e:	add    al,BYTE PTR [rax]
  424120:	sub    BYTE PTR [rax],dh
  424122:	add    al,BYTE PTR [rax]
  424124:	sub    BYTE PTR [rax],dh
  424126:	add    al,BYTE PTR [rax]
  424128:	sub    BYTE PTR [rax],dh
  42412a:	add    al,BYTE PTR [rax]
  42412c:	sub    BYTE PTR [rax],dh
  42412e:	add    al,BYTE PTR [rax]
  424130:	sub    BYTE PTR [rax],dh
  424132:	add    al,BYTE PTR [rax]
  424134:	sub    BYTE PTR [rax],dh
  424136:	add    al,BYTE PTR [rax]
  424138:	sub    BYTE PTR [rax],dh
  42413a:	add    al,BYTE PTR [rax]
  42413c:	sub    BYTE PTR [rax],dh
  42413e:	add    al,BYTE PTR [rax]
  424140:	sub    BYTE PTR [rax],dh
  424142:	add    al,BYTE PTR [rax]
  424144:	sub    BYTE PTR [rax],dh
  424146:	add    al,BYTE PTR [rax]
  424148:	sub    BYTE PTR [rax],dh
  42414a:	add    al,BYTE PTR [rax]
  42414c:	sub    BYTE PTR [rax],dh
  42414e:	add    al,BYTE PTR [rax]
  424150:	sub    BYTE PTR [rax],dh
  424152:	add    al,BYTE PTR [rax]
  424154:	sub    BYTE PTR [rax],dh
  424156:	add    al,BYTE PTR [rax]
  424158:	sub    BYTE PTR [rax],dh
  42415a:	add    al,BYTE PTR [rax]
  42415c:	sub    BYTE PTR [rax],dh
  42415e:	add    al,BYTE PTR [rax]
  424160:	ins    DWORD PTR es:[rdi],dx
  424161:	jae    0x4241d9
  424163:	movsxd esi,DWORD PTR [rdx+0x74]
  424166:	cs fs ins BYTE PTR es:[rdi],dx
  424169:	ins    BYTE PTR es:[rdi],dx
  42416a:	add    BYTE PTR [rax],al
  42416c:	cmp    al,0x30
  42416e:	add    al,BYTE PTR [rax]
  424170:	cmp    al,0x30
  424172:	add    al,BYTE PTR [rax]
  424174:	cmp    al,0x30
  424176:	add    al,BYTE PTR [rax]
  424178:	ins    BYTE PTR es:[rdi],dx
  424179:	imul   esp,DWORD PTR [rdx+0x70],0x70657263
  424180:	outs   dx,DWORD PTR ds:[rsi]
  424181:	jae    0x4241ec
  424183:	js     0x4241b2
  424185:	xor    BYTE PTR [rsi],ch
  424187:	fs ins BYTE PTR es:[rdi],dx
  424189:	ins    BYTE PTR es:[rdi],dx
  42418a:	add    BYTE PTR [rax],al
  42418c:	push   rax
  42418d:	xor    BYTE PTR [rdx],al
  42418f:	add    BYTE PTR [rbp+0x53],dl
  424192:	rex.RB push r10
  424194:	xor    esi,DWORD PTR [rdx]
  424196:	cs fs ins BYTE PTR es:[rdi],dx
  424199:	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .CRT:

0000000000425000 <.CRT>:
	...
  425008:	(bad)  
  425009:	adc    DWORD PTR [rax+0x0],eax
	...
  425020:	adc    BYTE PTR [rax],dl
  425022:	add    BYTE PTR [rax],al
  425025:	add    BYTE PTR [rax],al
  425027:	add    BYTE PTR [rax],dl
  425029:	cmovno eax,DWORD PTR [rax]
	...
  425040:	rex adc DWORD PTR [rcx+0x0],eax
  425044:	add    BYTE PTR [rax],al
  425046:	add    BYTE PTR [rax],al
  425048:	adc    BYTE PTR [rcx],dl
  42504a:	add    BYTE PTR [r8],al
	...

Disassembly of section .tls:

0000000000426000 <.tls>:
	...
  426020:	add    BYTE PTR [rax+0x42],ah
  426023:	add    BYTE PTR [rax],al
  426025:	add    BYTE PTR [rax],al
  426027:	add    BYTE PTR [rax+0x60],ah
  42602a:	rex.X add BYTE PTR [rax],al
  42602d:	add    BYTE PTR [rax],al
  42602f:	add    BYTE PTR [rcx+rbx*1],bl
  426032:	rex.X add BYTE PTR [rax],al
  426035:	add    BYTE PTR [rax],al
  426037:	add    BYTE PTR [rax+0x50],al
  42603a:	rex.X add BYTE PTR [rax],al
	...
